mov
xor
cmp
je
mov
and
or
mov
movl
mov
mov
jmp
andl
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
and
ret
int3
int3
int3
int3
int3
mov
push
mov
xor
cmp
je
orl
mov
mov
mov
jmp
andl
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
push
push
mov
call
movl
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
dec
cmp
jge
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
push
and
push
push
mov
push
pushl
call
mov
push
call
mov
shr
push
not
and
push
push
push
pushl
call
push
call
mov
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
cmpl
jne
push
push
push
push
call
leave
ret
cli
aaa
xor
push
sbb
sub
lds
fbstp
or
pop
add
add
push
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
mov
adc
sub
adc
int3
add
push
ja
xor
lret
add
add
and
dec
add
add
add
jl
add
mov
add
add
inc
add
add
add
add
add
add
or
add
add
add
mov
cmp
out
in
mov
add
ret
add
add
add
add
add
add
add
add
add
mov
mov
add
add
add
add
xlat
add
scas
add
add
add
add
add
add
add
push
add
add
filds
push
add
add
add
add
add
sbb
pop
add
jge
jo
sub
out
pop
add
adc
xor
pop
add
add
add
add
add
in
ret
add
add
pop
add
add
add
jl
inc
add
add
lcall
add
add
adc
or
cmp
cmp
or
adc
dec
add
add
filds
fildl
stos
add
pop
add
call
add
add
add
add
add
add
add
add
inc
add
dec
add
or
add
jno
and
add
fadds
lret
add
inc
add
jl
jno
add
add
jo
pop
add
push
add
add
add
add
add
add
outsl
add
add
sbb
push
add
add
add
add
add
add
add
add
xlat
add
add
xor
add
push
add
push
add
add
xor
out
push
add
cwtl
add
or
int3
add
add
add
add
inc
add
add
sub
add
add
cmp
lea
scas
add
add
add
sub
jo
sbb
xchg
add
add
cmp
xor
jg
addb
add
add
add
xchg
add
add
mov
xor
mov
sbb
mov
add
jl
sub
adc
fildl
addb
or
fildl
or
add
add
fildl
add
cmp
cmp
adc
jo
js
jo
lret
add
add
add
and
and
jae
faddl
and
mov
mov
and
adc
inc
add
mov
test
mov
movb
add
add
add
push
add
add
add
add
ja
add
cmp
add
add
add
add
add
add
jae
adc
movl
add
add
add
add
add
add
add
add
add
or
mov
clc
add
add
add
jo
lcall
add
add
add
or
or
mov
xor
xor
or
add
add
add
xchg
mov
add
add
add
add
add
add
in
push
add
xor
and
add
inc
add
add
push
add
dec
add
add
add
add
sub
add
jo
dec
add
or
cwtl
add
xchg
add
add
jl
lret
jo
cld
and
cmp
jno
jmp
cmp
ss
mov
jns
addr16
clc
push
sub
aas
insb
cmp
lret
ja
fcoms
imul
cmpsl
out
dec
popf
fucomip
das
and
jbe
stc
lea
or
cmp
adc
pop
cmp
aad
std
sub
scas
iret
iret
bound
in
loopne
sub
out
test
inc
adc
scas
stos
dec
cltd
das
cmpb
xlat
jae
cmc
mov
sbb
mov
mov
in
sbb
jno
adc
or
cmp
push
rorb
sarl
scas
lcall
jecxz
imul
in
mov
mov
xchg
mov
mov
aas
mov
pop
dec
cli
hlt
insl
outsb
inc
into
enter
rcll
sub
jno
or
add
push
and
cmp
out
data16
test
cmp
push
inc
sbb
fnsave
dec
jne
push
std
sbb
cmc
addr16
cs
leave
xchg
pop
pop
jmp
stos
jmp
ret
sbb
rclb
lea
dec
stos
data16
add
sti
jle
cwtl
inc
dec
push
xchg
pop
xlat
movsb
xor
mov
jp
inc
pusha
rcrb
sub
hlt
xor
pop
inc
int
mov
nop
nop
pop
mov
popf
sbb
sbb
dec
jne
es
xorb
rcll
or
daa
enter
scas
xchg
mov
sahf
div
shlb
and
shll
xchg
xchg
xchg
push
or
notl
xchg
fsts
rorb
scas
cltd
iret
mov
mov
cmp
out
loope,pn
jae
push
pop
mov
adc
pop
cld
mov
mov
in
addr16
dec
lds
pushf
cmp
insl
lods
gs
mov
std
in
add
push
dec
jns
adc
rclb
mov
and
enter
add
and
mov
adc
std
push
xchg
incl
pop
xor
mov
push
inc
mov
test
add
int3
outsb
push
add
sbb
xor
test
inc
sub
mov
ret
lret
mov
cmp
out
xchg
jno
andb
lcall
cmpsl
mov
sub
shr
or
fisttpll
sbb
stc
sbbl
mov
jp
mov
mov
or
xorb
push
idivb
push
push
hlt
clc
jp
push
test
js
mov
movsl
lods
push
push
js
movsb
fcomps
push
mov
add
add
add
add
add
add
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
add
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
call
mov
mov
mov
movzbl
sub
je
pushl
incl
push
call
pop
pop
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
lea
push
pushl
call
jmp
push
call
xor
leave
ret
push
mov
sub
mov
andl
andl
mov
mov
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
mov
pushl
movl
movb
movl
movb
mov
movb
movb
movl
call
push
mov
call
pop
leave
ret
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
sbb
or
adc
xor
dec
mov
mov
mov
clc
loopne
rcr
enter
sub
sbb
or
popa
push
mov
mov
mov
clc
loope
rcrl
and
adc
add
jno
popa
push
mov
mov
mov
stos
scas
enter
ja
ja
pop
cli
mov
jb
xor
mov
or
xchg
dec
or
test
jle
divl
outsb
xchg
fistpl
or
push
pop
push
enter
or
push
add
mov
cltd
mov
and
push
out
pusha
fs
jmp
ficompl
xor
mov
icebp
push
pop
jle
dec
stc
and
push
daa
test
sub
in
or
dec
push
mov
addr16
shll
inc
int3
fcomp
xlat
inc
popf
adc
cltd
jns
jge
dec
inc
lret
flds
shll
mov
daa
ds
leave
scas
and
fwait
jle
icebp
xchg
or
xchg
in
or
test
loope
ror
ror
cmp
sub
sbb
or
popa
push
mov
mov
mov
clc
loope
rcr
shll
jno
popa
xor
push
adc
lock
test
mov
outsb
cmp
sbb
adc
add
dec
jecxz
int3
fucomp
stc
in
mov
mov
jb
and
js
push
mov
mov
mov
clc
loope
rcr
ror
cmp
sub
sbb
or
popa
push
mov
mov
mov
clc
loope
rcr
ror
cmp
pushf
stos
push
dec
add
mov
faddl
ficomps
mov
jmp
push
fistpll
add
xor
pop
pop
sbb
test
inc
aad
cmp
xor
pop
cmp
or
xlat
mov
mov
popl
rorl
data16
fwait
xchg
clc
xchg
cld
mov
xorb
aad
outsl
jmp
dec
xchg
fs
jle
add
arpl
push
daa
mov
xchg
imul
mov
sbb
xchg
in
push
popl
or
std
pop
test
jnp
test
sub
imul
iret
inc
push
inc
jecxz
and
xchg
dec
int3
jno
inc
lds
dec
jns
sbb
lret
in
ficoml
add
mov
jl
mov
ret
lret
fldenv
jno
inc
repz
inc
cmp
lock
arpl
pop
pusha
es
sbb
movd
repz
sbb
mov
aaa
xchg
push
lods
dec
push
bnd
je
movsl
aas
xor
jno,pn
lock
or
adc
dec
adc
call
xor
sbb
stos
add
jne
ficomps
pop
outsl
jnp
jmp
jo
jns
mov
lods
pushf
xor
or
jb
shlb
lahf
push
and
sahf
dec
shlb
xchg
jb
jmp
push
mov
mov
push
or
mov
inc
add
mov
in
mov
pop
cmp
lret
ret
shufps
jae
jb
jnp
js
dec
push
ljmp
stc
or
xchg
jp
cltd
adc
mov
test
mov
add
mov
int3
mov
adc
sub
mov
cmp
mov
enter
ja
push
ret
ljmp
lock
pop
data16
push
push
test
pop
xchg
sub
ss
scas
jbe
jp
movsl
lret
pop
lds
xchg
mov
repnz
sub
push
decl
fbstp
out
xor
sar
push
shr
pop
aas
negb
outsb
cmp
icebp
cmp
addl
ret
andb
shr
pop
push
aam
es
outsl
test
rolb
iret
loop
add
fdivrl
scas
inc
in
inc
subb
rclb
cwtl
adc
rorl
jnp
sub
xchg
int3
sbb
lock
lcall
xor
mov
push
jno
cwtl
and
iret
mov
sbb
sbb
rcrl
or
sub
test
cltd
repz
shrl
movsb
rcrl
cmpsb
stc
sbb
pop
ret
xchg
mov
mov
jb
repz
sub
dec
fidivs
mov
les
add
sub
rcll
sbb
fwait
push
xor
pusha
xchg
inc
jns
int3
add
fnstsw
mov
popf
sbb
imul
fs
xor
aam
mull
mov
push
sbb
aas
push
pop
add
xchg
lret
jge
push
in
daa
adc
ficomps
pop
sar
repnz
xlat
shl
jo
or
rcrb
cmpsl
cltd
cli
test
dec
jns
jb
mov
cmpsl
test
jecxz
out
push
xor
push
pop
and
out
jns
pop
lcall
jnp
cs
stos
ljmp
dec
pop
cs
jne
sahf
loop
pop
enter
push
inc
ljmp
mov
mov
cs
sub
jo
pop
rorl
jmp
push
into
xchg
rcrb
push
shlb
xchg
popf
mov
mov
xlat
inc
inc
cli
jge
stos
jae
daa
fbstp
insb
or
adc
pop
daa
add
out
xor
mov
fdivr
and
cmp
out
insb
test
xor
mov
clc
pop
notb
mov
out
int3
pop
out
nop
call
test
aaa
cmp
push
sbb
add
movb
and
xchg
fdivrs
out
xchg
rol
cmp
sbb
fidivrs
test
xchg
imul
lods
popf
mov
dec
les
mov
mov
lret
outsl
jb
cmp
xchg
jns
lahf
or
cmp
push
shlb
pop
pop
imul
inc
dec
loopne
add
mov
push
scas
push
push
cwtl
insb
test
loop
jns
ror
pop
mov
popa
cmpsb
fsubl
pusha
inc
push
inc
cmc
cld
and
add
ljmp
les
addr16
dec
pop
outsl
push
sbb
cmp
dec
jns
mov
je
rcrb
jg,pt
loop
or
push
lds
lret
sbb
pop
aad
or
in
repnz
in
jmp
sbb
xchg
test
lahf
sub
in
mov
and
add
shrb
mov
xchg
in
addr16
pop
xchg
mov
out
imul
pop
in
cmp
adc
xchg
pop
cs
mov
cltd
pop
jns
xor
push
arpl
xchg
dec
lcall
add
push
cmpsb
std
pop
add
or
sbbl
pop
cmp
mov
dec
das
jnp
sbb
mov
mov
ds
adc
sbb
and
sbbb
mov
jmp
and
popa
cltd
push
xchg
lods
in
sbb
or
mov
or
call
cwtl
dec
xchg
addr16
lahf
gs
stos
in
cld
xchg
sub
push
out
sub
xor
or
cld
mov
push
cmp
cltd
lock
out
rcll
and
add
insb
std
cmp
xor
and
scas
push
pop
jo
mov
aaa
adcl
ljmp
jle
cmp
ret
daa
mov
cltd
hlt
leave
xor
jb
push
mov
mov
aad
push
mov
rcrb
dec
enter
push
out
sbb
jo
mov
stos
inc
or
pop
push
divb
cmc
push
push
pop
fstpt
out
or
sub
test
ja
or
mov
or
and
dec
out
xchg
test
or
jmp
cmpsl
xchg
and
inc
sub
orl
shll
lock
test
jo
lods
sub
out
lods
in
scas
sbb
movsl
je
push
sahf
and
nop
mov
imul
jbe
pop
aaa
mov
addl
scas
inc
push
fwait
je
aam
xchg
sbb
repnz
pop
iret
jecxz
push
lea
pop
push
les
mov
jo
lods
adc
push
push
in
imul
add
inc
lds
movsl
jno
mov
or
ljmp
mov
sub
mov
xchg
jns
mov
test
pop
insb
mov
dec
pushf
sub
aaa
out
repnz
pop
cmp
sub
inc
filds
and
dec
pop
mov
push
mov
rcll
idivl
push
pop
int3
adc
scas
call
mull
push
mov
mov
dec
xor
xor
cmpsb
add
sbb
out
jmp
jp
push
dec
add
pop
cmp
int3
xchg
cmp
imul
daa
sub
and
push
inc
dec
dec
pop
or
cmp
int3
mov
cmp
das
push
inc
push
repnz
inc
rolb
lods
sub
shll
js
push
stc
filds
mov
fidivl
or
loop
mov
xchg
dec
js
arpl
test
xor
sub
rcll
or
jb
mov
iret
lds
insl
arpl
jecxz
jecxz
insl
leave
cmp
andb
jo
arpl
std
mov
in
iret
loop
shlb
das
or
std
mov
xlat
loopne
sub
pop
push
push
or
mov
mov
xor
out
mov
and
ss
push
ret
or
sub
popa
sub
pop
in
pop
rclb
addr16
das
mov
push
sub
push
in
lcall
cmp
nop
out
loop
shll
lock
mov
push
xor
push
sahf
sti
mov
std
add
cli
mov
lock
sbb
shlb
movsb
adc
out
push
inc
sar
push
test
cltd
movsb
adc
push
push
or
xchg
or
in
push
repnz
std
jo
aaa
jnp
cmp
xchg
andb
xor
out
and
into
jecxz
sbb
lock
cltd
mov
mov
mov
jae
add
or
jle
add
xorb
sbb
add
lods
add
ljmp
fchs
cmc
dec
mov
xchg
pop
les
xchg
add
add
ror
ds
sub
or
pop
fbstp
mov
sub
imulb
shll
insl
push
mov
in
pop
add
fdivs
ja
shr
aam
pop
mov
insl
addr16
xor
or
lods
push
xchg
cmp
fdivs
sub
pop
es
cmp
or
daa
xor
or
xchg
call
stc
pop
out
push
test
or
mov
int3
mov
test
arpl
add
xchg
mov
xchg
xchg
mov
mov
fisttps
sbb
sbb
inc
xchg
mov
mov
sahf
jmp
and
jmp
push
stc
push
pop
pop
xchg
xchg
mov
jno
dec
aaa
sbb
inc
push
jae
fisubl
mov
mov
push
loopne
cmp
popf
aas
ss
mov
cmp
add
mov
and
push
ja
sbb
lcall
sbb
sub
push
push
and
and
inc
repz
aaa
into
gs
push
xchg
mov
ss
stos
ret
lods
scas
add
jbe
outsl
das
int3
push
jo
movsb
cli
in
or
sub
fbstp
fs
jo
sub
xchg
mov
jne
sub
or
push
fwait
mov
fnsave
inc
or
cmp
sub
cld
je
lods
lods
pop
test
mov
bound
pop
jmp
shl
sarb
and
cmp
ja
sub
fisubs
add
push
sbb
fdivl
and
lds
clc
jg
push
aam
lahf
dec
dec
cwtl
icebp
ss
sub
cwtl
mov
jle
adc
arpl
inc
xorl
sbb
into
add
pop
push
jmp
lea
cmpb
xchg
adc
leave
mov
xor
test
push
jmp
ds
outsl
or
xchg
repz
je
mov
dec
xlat
mov
add
or
xchg
shll
xor
pushf
in
bound
aam
sbb
outsb
mov
push
dec
xchg
jne
mov
jmp
pop
and
daa
mov
sub
dec
and
cmc
test
int
push
negb
xchg
dec
pop
dec
int
xchg
xor
xchg
jns
jl
je
mov
and
or
adc
inc
fs
or
sahf
ss
mov
push
aaa
sub
or
insb
ficompl
aas
cmpsb
pushf
aaa
es
mov
mov
and
push
pop
mov
and
push
xor
ret
lahf
adc
cmpb
shl
jb
adc
test
xchg
mov
aas
pop
subl
fstpt
loopne
lock
stos
fcomip
pop
out
inc
insb
imul
xchg
adc
or
or
mov
jl
lahf
add
pop
imul
add
int
lods
add
imul
xchg
and
or
in
loope
jb
outsb
adc
lea
fsts
pop
pop
popa
xlat
loopne
add
jno
xchg
pop
sub
xor
call
dec
push
loop
shr
xchg
ret
test
outsl
in
mov
popa
and
pop
aam
xlat
fnsave
lcall
lds
and
cwtl
leave
mov
push
mov
je
and
add
hlt
rcl
call
xrelease
push
jnp
aam
loope
cwtl
add
xor
push
into
stc
clc
push
jg
sub
xchg
sbbl
mov
dec
outsb
scas
setle
in
aas
loopnew
test
push
data16
in
aam
ret
popa
lock
scas
cs
mov
ljmp
in
mov
stos
je
or
hlt
sub
pop
roll
rclb
jae
jns
mov
aad
dec
push
xor
xor
imul
jb
popf
or
in
and
std
je
jb
fistps
bound
add
xorb
daa
repnz
cs
lret
cli
sbb
adc
lock
fidivs
popa
cmp
aam
inc
cmp
xchg
jle
push
js
inc
xchg
adc
push
cmp
mov
lcall
sbb
inc
add
push
outsl
in
and
mov
and
dec
paddw
push
sbb
fmuls
mov
push
add
xchg
iret
add
loop
cmp
loop
mov
push
shl
addr16
mov
sub
repnz
pusha
fldcw
imul
xchg
or
lret
int3
in
mov
xchg
or
int
andl
dec
push
jmp
cld
sub
inc
orl
dec
lods
lods
inc
lock
cmp
push
shlb
fmuls
clc
pop
jmp
sahf
mov
sub
mov
imul
in
gs
std
xchg
adc
pop
xchg
inc
push
imul
cwtl
jnp
fistps
or
cmc
sbb
cltd
sub
nop
in
insb
fnsave
push
and
enter
mov
std
xor
xchg
xor
mov
lahf
add
popa
mov
cmpsl
cmpsl
insl
arpl
sub
mov
pusha
insb
aam
lods
xchg
lock
and
int3
mov
pop
call
gs
out
pop
adc
push
inc
mov
push
pop
std
inc
icebp
stc
mov
out
mov
movsb
popa
addb
jns
dec
int
cmpsb
ljmp
add
dec
jl
fnstcw
cltd
mov
inc
sub
aaa
test
dec
inc
popf
sub
mov
xchg
ret
lods
fildll
sbb
je
shlb
pop
popf
jecxz
test
cwtl
aam
cmpsb
je
dec
fnstenv
mov
add
or
adc
mov
pushf
sbb
mov
cmpsb
std
dec
je
jp
ds
mov
mov
cmp
nop
mov
in
movsl
add
cmp
jne
cmp
add
enter
jne
add
or
pop
sbb
popf
cmp
shlb
hlt
das
mov
cs
dec
outsb
mov
xchg
mov
call
sub
xchg
jl
adc
mov
xchg
int3
es
sbb
add
out
push
push
sbb
in
cmpsb
fwait
xchg
test
es
mov
in
or
cmpsb
or
loope
jle
xor
push
jmp
add
ds
fmuls
sub
sahf
mov
fldz
sub
mov
bound
jne
adc
inc
sahf
push
loopne
dec
or
insb
fimull
lret
pop
cmp
xchg
in
xchg
cmp
or
or
dec
fdiv
adc
xchg
call
cmp
sbbb
lcall
repnz
push
in
enter
pop
push
out
sub
scas
cmpsb
push
addr16
scas
ret
xor
mov
std
push
mov
jne
jl
mov
imul
je
loop
add
lock
adc
and
fsubrs
add
mov
add
fistps
cmp
inc
mov
shl
mov
mov
push
xor
popa
ret
inc
and
shr
sti
inc
shr
icebp
int
addr16
stc
imul
mov
dec
dec
inc
jge
std
cmp
cmp
or
xchg
inc
mov
xchg
inc
and
insl
int
xchg
xchg
xor
imull
mov
inc
dec
push
mov
loope
cmpsb
popa
xlat
push
mov
mov
push
test
pop
sbb
cmpsb
aad
fadd
div
out
cs
unpckhps
les
daa
sub
mov
and
cli
xor
xor
mov
add
sbb
enter
xlat
aad
lods
mov
mov
popa
sbb
lret
dec
or
mov
dec
push
ljmp
pop
and
sub
mov
mov
mov
loopne
int3
es
cli
lret
ficompl
dec
insb
sbb
dec
cmp
lods
jnp
adc
lods
push
movsb
sub
push
les
in
xchg
mov
filds
lret
repnz
push
ss
lahf
jmp
inc
cltd
arpl
inc
lock
std
xchg
sbb
pop
xchg
pushf
enter
mov
pop
push
nop
aaa
in
jbe
pop
xchg
pop
shl
mov
and
int3
xlat
dec
sub
insl
push
cmp
cltd
imul
ss
and
ret
add
aad
fidivs
lcall
mov
xor
lods
scas
cwtl
sti
or
lods
mov
out
xor
jnp
arpl
xor
jbe
mov
mov
push
jmp
or
cltd
rcrb
mov
stos
pop
sbb
inc
je
ret
mov
pusha
sub
js
push
cwtl
cmp
loopne
inc
imul
fwait
cltd
sub
mov
cmp
or
std
xorl
sarb
mov
fwait
sbb
stos
and
sub
lods
lods
pop
push
js
and
mov
add
je
adc
test
jle
add
shlb
pusha
and
pop
ret
out
cmpl
sub
mov
xor
aam
fmull
jmp
jle
int3
adcb
xchg
sbb
sbb
testb
push
add
jl
pop
sbbl
dec
pop
sbb
pop
sub
fdivrs
or
mov
es
outsb
adc
dec
shlb
mul
lret
mov
sbb
dec
push
lahf
sbb
add
std
jmp
and
and
inc
das
cmp
into
mov
mov
mov
std
arpl
sti
xor
push
xor
js
and
pop
lods
or
or
push
icebp
lods
clc
mov
pop
ficoml
xor
and
daa
subb
sahf
dec
xchg
fptan
push
lods
ret
popl
mov
loop
ret
push
scas
xor
dec
sbb
fadds
pop
push
gs
or
pop
mov
repnz
loop
lcall
sarl
jge,pt
fdivrs
push
jl
fidivrl
nop
fbstp
fisttpll
call
sbb
add
pop
sub
ret
inc
imul
pop
and
push
mov
xchg
jne
insl
test
dec
xor
lods
jne
cld
lcall
stos
jmp
lgs
xchg
je
shll
test
fimull
cmc
pop
jne
sub
dec
dec
mov
mov
jg
orl
push
dec
mov
mov
xorl
add
fists
and
pop
fisttpll
shlb
xor
pop
scas
notl
movsl
out
push
pop
dec
rclb
adc
and
jge
push
inc
pop
std
pop
pop
in
inc
jg
mov
ljmp
cmp
sub
int
cmp
imul
cs
dec
mov
in
xlat
insb
outsl
outsb
push
dec
ret
ret
mov
push
mov
imul
aam
leave
lahf
adcl
adc
insl
xchg
push
lods
inc
or
xchg
inc
cmp
and
test
cmp
cmp
push
fisubrl
mov
frstor
dec
lds
bnd
shll
test
addr16
xlat
xor
lahf
mov
inc
lret
sbb
insb
adc
mov
stos
cli
or
cmp
loopne
push
push
dec
inc
inc
addr16
rcll
xchg
outsb
push
inc
stos
and
lahf
and
xchg
cmp
pop
inc
adc
push
rcll
jno
mov
test
mulb
dec
shrb
jns
fiadds
hlt
aam
sub
jbe
mov
dec
outsl
dec
iret
cmp
pop
loop
push
sarl
mov
mov
jo
incl
icebp
and
daa
push
cmpsl
stos
inc
mov
adc
mov
push
inc
push
sti
or
icebp
lods
sti
pop
lea
and
xchg
ja
add
and
inc
sti
and
push
les
mov
incl
or
cld
mov
adc
xlat
sub
fstps
idivb
das
pop
mov
xor
pop
jbe
xchg
sti
sbb
js
dec
xor
stos
cmc
and
pop
sbb
fdivrs
aaa
fdivs
popf
jg
push
sub
jl
mov
cmc
dec
icebp
in
jno
push
mov
push
leave
add
out
cmp
loop
jp
dec
and
sub
js
push
mov
mov
mov
clc
loope
rcr
ror
cmp
sub
sbb
or
popa
push
mov
mov
mov
clc
loope
rcr
ror
cmp
test
cwtl
add
jno
popa
call
mov
mov
mov
clc
loope
rcr
ror
cmp
sub
sbb
or
popa
push
mov
mov
incl
daa
ds
into
ss
out
jmp
out
clc
lret
in
fstpt
outsb
imul
sub
cmp
leave
fcompp
out
jmp
sahf
adc
dec
dec
pop
jns
imul
imul
fldz
inc
sti
mov
mov
cmp
pop
jge
pusha
pop
push
cmp
pushf
mov
mov
popa
mov
jecxz
stos
sub
xchg
mov
inc
enter
inc
movsb
mov
movsl
jmp
jo
jecxz
sti
imul
sub
mov
enter
repz
rcr
mov
dec
les
xchg
in
hlt
scas
sub
sub
stc
jg
mov
inc
dec
mov
or
pop
pop
test
or
sarl
fsubrl
jl
lods
xchg
fsubrl
sbb
jns
pop
sbb
into
cmp
xor
out
test
into
pop
sbb
xor
xor
or
out
sub
nop
leave
fisubrs
out
insl
repz
mov
lahf
outsb
jns
xor
and
ds
mov
fwait
xlat
loop
xlat
test
fmull
cvtps2pd
data16
push
push
int
lods
cwtl
mov
out
stos
scas
mov
comiss
push
imul
pop
dec
ds
cmpsl
lahf
mov
lcall
mov
pop
outsb
imul
sub
cmp
leave
fcompp
out
jmp
sahf
cltd
scas
test
pop
pop
outsb
imul
sub
cmp
leave
jnp
push
dec
fcmovbe
push
adc
mov
daa
mov
and
inc
and
xor
cmp
roll
add
mov
popf
sbb
push
jns
les
mov
or
push
lds
xchg
icebp
inc
mov
mov
hlt
mov
jbe
data16
cmpsl
jno
ss
sub
cmp
or
jle
push
cs
cs
icebp
hlt
mov
std
jg
cltd
sbb
jno
js
jne
mov
insb
repz
sti
pop
dec
lea
or
fnsave
mov
add
arpl
insb
aad
das
pop
cmp
add
add
dec
dec
out
cs
xchg
scas
in
jle
jnp
adc
ror
pop
mov
inc
jae
sbb
mov
sbb
cld
insl
sub
push
outsl
adc
movsl
push
mov
and
stos
and
inc
mov
enter
lcall
add
bound
jb
enter
add
dec
in
stos
xchg
aad
stos
mov
mov
test
cmpsl
lcall
idivb
xchg
jnp
push
jb
ja
add
in
jecxz
and
cld
fsubrl
xchg
pusha
in
cs
sub
sbb
push
imul
sub
sub
out
inc
xor
xor
mov
aam
cmpsl
mulb
lock
add
int
inc
repz
pop
call
jb
jae
fbstp
fildl
mov
push
push
inc
fmuls
clc
adc
add
and
xchg
lcall
rorl
push
xorb
out
pop
lret
jb
pop
jno
xchg
mov
cwtl
jge
xchg
outsb
repz
jns
inc
dec
sbb
mov
mov
push
pop
cmp
mov
sbb
and
adc
inc
and
lcall
push
sub
nop
scas
jae
sub
negl
rol
sub
cmp
aad
jne
jae
out
adc
ds
mov
fldl
mov
imul
fimull
jo
sbb
xorb
and
add
adc
test
push
pop
xchg
out
leave
lahf
movsb
xor
xchg
sbb
mov
dec
and
dec
xchg
cs
push
cmp
mov
je
in
test
xor
icebp
mov
test
inc
mov
cwtl
sbb
lret
out
dec
addr16
cwtl
sbb
imul
shll
dec
test
inc
clc
aad
aam
mov
fildll
repz
loope
or
sub
adc
pop
xor
jmp
or
adc
xchg
fsubl
cmp
mov
or
aad
mov
sti
fmull
jne
pop
cmp
pop
std
push
push
faddp
outsl
inc
xchg
cmp
test
int3
pop
js
repnz
push
jb
push
in
mov
imul
insl
iret
mull
gs
inc
pusha
nop
ljmp
mov
in
popf
repnz
xorl
or
test
lret
pop
mov
sub
js
mov
jae
stos
mov
push
pop
adc
repnz
mov
mov
not
sbb
inc
cmp
cmp
mov
jnp
vpcmpeqw
push
pop
jbe,pn
push
lret
js
stos
arpl
into
or
cwtl
mov
scas
mov
jo
pop
push
add
cltd
subb
jp
fcmovne
loopne
inc
fisttpll
ljmp
cmpsb
fisttps
andb
inc
push
jae
add
inc
or
dec
fs
xchg
jecxz
mov
mov
push
pop
xor
and
or
mov
jae
notb
sbb
xchg
cli
mov
push
adc
aas
ja
es
dec
inc
outsb
jecxz
test
stos
fisubrl
in
inc
dec
stos
pop
push
pop
mov
pop
pop
cli
fstpt
inc
test
outsl
dec
clc
push
lods
pop
jle
xchg
aas
pop
ds
add
pop
iret
int3
into
cld
cltd
mov
arpl
sbb
rcl
lret
cmc
fs
mov
cmc
pop
lea
pop
sub
js
cmp
add
ljmp
cmp
xchg
adcl
cmc
pop
sub
sbb
je
and
cli
push
ds
test
rcrb
xchg
mov
dec
fisubs
scas
gs
add
daa
addr16
xor
sub
out
fadd
inc
es
pushf
jg
icebp
rclb
cwtl
xchg
mov
outsb
arpl
dec
pop
inc
inc
mov
jge
jo
rorb
jnp
add
stc
adc
jns
and
add
mov
add
iret
test
pop
out
or
or
movsl
imul
mov
xor
je
and
sub
mov
dec
and
rcl
pushf
insb
call
mov
sti
add
push
dec
shl
fincstp
inc
out
inc
cmp
adcb
out
mov
adc
cmp
aas
jp
lret
in
lock
in
pop
xor
inc
je
rcr
pop
xchg
lcall
cmpsb
sbb
adc
cmpsl
mov
push
scas
jg
push
cmpsb
xchg
test
in
outsl
ss
orb
dec
jnp
mov
adc
xchg
push
adc
or
in
in
arpl
adc
cmp
jmp
ds
sub
hlt
dec
sbb
add
dec
out
ljmp
shrb
mov
and
mov
xchg
das
adc
xchg
bound
mov
cld
add
push
outsl
hlt
rcrb
mov
dec
pop
sbb
cmpsl
jp
cmp
std
fsubrs
mov
push
stc
rorb
mov
test
nop
and
jecxz
lret
and
jbe
adc
sbb
push
sub
push
xchg
outsb
jmp
and
cld
fistpl
jp
xor
mov
fidivs
clc
pop
jbe
js
leave
mov
xor
sbb
dec
inc
mov
inc
mov
pop
sbb
fstl
adc
mov
repnz
addr16
insb
adc
adcl
cs
mov
dec
loope
mov
push
ss
std
cld
or
push
lret
loop
xor
sub
sbb
mov
sub
jae
mov
scas
jae
hlt
lahf
adc
out
pop
sbb
push
mov
adc
sub
loopne
cwtl
mov
cmp
int
mov
bound
sub
sub
addr16
mov
in
dec
cld
mov
mov
out
int3
jno
jp
test
aam
ret
or
or
push
cmp
and
cmp
mov
dec
pop
mov
mov
sub
sub
aas
sub
sbb
pushf
sti
pop
pop
out
mov
inc
mov
arpl
adc
fdivr
loope
pop
enter
std
xchg
pop
dec
cmpsb
andb
jbe
jae
mov
sub
dec
pop
arpl
inc
sahf
notb
out
sti
je
mov
dec
fwait
shl
xchg
pop
adc
or
pop
mov
out
das
mov
ret
jl
inc
leave
popf
push
jne
sub
in
inc
mov
and
jae
mov
cmpsl
test
inc
lds
pushf
or
add
das
fildl
xchg
arpl
cmp
xlat
and
insb
push
jmp
adc
cmc
mov
cmp
repz
push
ficomps
ret
shr
aad
mov
pop
imul
xchg
fstl
outsb
out
push
jo
inc
push
cmpsl
mov
inc
jecxz
inc
mov
mov
mov
mov
mov
mov
sbb
ljmp
pop
clc
jle
xchg
bound
mov
cmp
jecxz
dec
lods
fisubl
mov
add
lret
lds
pop
xchg
jae
xchg
ja
dec
fldl
ss
cwtl
mov
lods
mov
xchg
inc
xor
cli
iret
loope
mov
aaa
insl
shll
int3
in
jbe
add
fwait
mov
sbb
enter
sbb
lret
add
mov
jmp
push
sbb
add
insl
aas
add
dec
rolb
pop
pop
gs
arpl
dec
scas
or
insl
outsb
push
or
pushl
cmc
or
sahf
mov
movsb
adc
rclb
push
xor
mov
iret
push
lcall
push
mov
pop
iret
jno
imul
inc
sbb
inc
jno
xor
es
xchg
mov
push
jmp
in
pop
int
push
out
in
out
add
fdivr
loop
popf
stos
dec
clc
inc
rcr
cld
mov
out
mov
sbbb
test
xchg
inc
sbb
ret
daa
xchg
adcl
inc
in
lods
pop
pushf
iret
cmp
push
dec
enter
xor
push
jl
imul
adc
push
mov
in
lcall
sub
mov
mov
shlb
add
in
movsl
inc
iret
fisttpl
mov
sbb
push
pop
pop
and
push
icebp
andb
ficoml
xchg
xor
sbb
out
and
dec
add
sub
push
xchg
fcomps
dec
cmpsb
repz
lds
pop
mov
mov
sub
insb
and
daa
dec
rorl
push
push
sti
stc
inc
dec
rorl
push
xchg
pushf
les
popf
cld
cmc
aad
jle
outsb
fcmovne
fisttps
pop
repz
adc
sbbb
arpl
push
fldcw
inc
adc
xor
cmp
cs
or
sbb
loopne
push
test
into
mov
xchg
insb
or
push
inc
rcrb
jp
mov
ds
mov
icebp
call
mov
stos
bound
jg
cmp
stos
mov
mov
mov
testl
pop
aam
dec
subb
hlt
fadd
hlt
aad
pop
jnp
mov
sub
inc
clc
jae
pop
add
addb
cwtl
xchg
insb
test
pop
scas
les
and
xor
xor
jns
pop
popf
inc
in
lods
pop
mov
sub
fisttpll
or
cmp
mov
jmp
cld
mov
ja
test
lock
rolb
cld
inc
xchg
push
test
push
test
cmpsb
fldt
in
mov
inc
imul
sbbl
add
ja
insb
pop
cli
push
sbb
insb
arpl
jno
push
rclb
inc
mov
push
mov
xor
insb
out
into
enter
sti
cmp
int
cld
test
or
or
xor
adc
insl
mov
and
push
stos
or
pop
into
cmp
cmp
mov
dec
mov
dec
inc
jno
jo
and
push
sub
add
pop
ja
lcall
jne
xchg
push
sbb
jge
fs
push
cmp
loope
sbb
mov
aaa
inc
xchg
sub
lret
pop
test
jg
dec
aad
int
out
mov
xchg
push
rcll
push
shr
mov
push
roll
dec
test
es
mov
movsb
jp
mov
mov
dec
cmp
cmc
sbb
cmpsl
jecxz
xchg
push
int3
inc
cmp
mov
and
gs
sub
adc
sub
mov
jb
xchg
pop
cmp
imul
push
xchg
mov
jb
sub
das
daa
push
adc
sbb
add
negl
test
cmpb
loopne
shrl
mov
mov
in
cwtl
lock
addr16
inc
mov
stos
mov
lods
stos
push
enter
xor
inc
inc
cmp
movsl
outsl
in
adc
jg
movsl
sub
xor
dec
xor
lds
push
pusha
test
mov
adc
testl
inc
jo
lret
les
neg
and
fsubrl
push
push
push
lahf
xchg
push
call
lock
mov
xchg
lret
pop
lods
push
xor
cld
mov
lds
xchg
bound
lea
mov
sub
sbb
sbb
sub
lods
fstps
and
or
pop
repz
inc
nop
ja
inc
dec
bound
mov
adc
mov
repz
sub
std
xchg
divl
adc
in
out
lcall
out
and
and
dec
pop
decl
test
mov
das
mov
xlat
das
or
fimuls
mov
jno
pop
stos
out
ret
lahf
dec
jns
aam
adc
inc
leave
mov
sub
jae
or
fld
xor
mov
adc
daa
stc
adc
testl
lea
xorl
dec
adc
daa
sub
out
xchg
xor
bound
sahf
cmp
sub
call
test
jecxz
popf
mov
movsb
add
pop
cs
test
inc
push
mov
jmp
push
xchg
out
stc
mov
cmp
jo
fadd
xchg
and
push
pop
pop
aaa
mov
lcall
mov
dec
dec
jb
lock
sbb
test
rorb
sub
jo
pop
xor
fmulp
pop
shrb
mov
jecxz
add
insb
repnz
outsb
inc
repz
dec
inc
in
fst
cmpsb
data16
fs
shrl
cmp
push
xchg
mov
lea
gs
shrb
sarl
fmul
mov
dec
pop
jg
scas
negb
mov
xlat
jl
ja
sbb
dec
or
out
int3
in
cmp
test
jecxz
jg
push
xchg
pop
pop
mov
fisubs
dec
pop
das
sahf
cs
pop
jmp
scas
mul
clc
mov
ljmp
out
sub
dec
fcoml
xchg
mov
pop
xor
and
inc
xor
mov
jbe
aam
mov
stos
aaa
call
add
jecxz
stc
bound
lds
dec
xchg
faddp
jnp
jecxz
insl
jg
repnz
in
lds
dec
push
jmp
mov
dec
in
sbb
mov
dec
push
ret
jnp
sbb
cmp
lea
jmp
jge
add
mov
sbb
lods
mov
mov
sti
xor
xchg
ljmp
sbb
cwtl
xchg
push
push
into
push
push
imul
loope
ffree
or
ffree
mov
and
fcoms
mov
lds
movsl
xchg
xchg
jno
jnp
addr16
xor
inc
push
mov
sbb
sub
fisubs
jnp
mov
jnp
popf
push
mov
mov
inc
fstps
xchg
les
jnp
inc
call
leave
das
aas
lea
cmp
cmc
or
sbb
aas
mov
aaa
loop
shr
js
lcall
and
mov
sbb
bound
or
mov
negl
imul
ja
xor
repnz
cmpsl
test
imull
adc
xchg
jmp
dec
xchg
fisttpl
mov
xchg
cmpb
stc
fdivl
out
data16
inc
imul
ljmp
jae
fbld
fcoml
sub
push
cmpsb
add
aam
in
mov
jp
cmp
add
jno
cmpl
ret
out
mov
cmp
and
sub
cltd
xchg
mov
lock
mov
bound
or
jns
stos
jne
les
shrl
mov
jle
add
mov
in
or
inc
cmp
cmpl
imul
cli
jge
add
orl
enter
clc
jmp
hlt
jnp
out
add
cs
mov
in
jnp
testl
push
icebp
sub
lret
nop
mov
push
jmp
sbb
fmul
mov
push
mov
movsl
test
sub
fstpl
xchg
iret
cmpsb
push
jg
xchg
pushf
push
int3
loopne
xchg
sub
insl
leave
mov
std
xor
fwait
rcrb
mov
dec
fwait
test
ljmp
jns
push
xor
ljmp
leave
xchg
inc
je
xchg
jns
pop
jno
inc
xchg
inc
push
hlt
pop
jle
bound
mov
imul
mov
fs
fs
sbb
jns
inc
mov
lret
popl
call
rcrb
out
xchg
cmpsb
xor
inc
xchg
cmpsl
idivb
mov
pop
inc
cltd
dec
push
loopne
shll
pop
and
in
out
mov
dec
cli
xchg
int3
add
es
dec
cmp
jp
nop
xchg
xlat
out
jnp
lds
add
fdivp
jmp
in
shll
imul
dec
mov
data16
aaa
xchg
fnstsw
add
push
cld
sahf
adc
sbb
xor
xchg
push
mov
out
jns
mov
fs
rcll
movsb
imul
mov
mov
mov
jg
xor
dec
push
adc
mov
fldenv
adc
test
lcall
xchg
cld
stos
ficomps
pusha
pmaxsw
sbb
dec
in
sahf
cmc
cltd
mov
xchg
mov
lock
test
mov
jp
mov
mov
loope
jge
daa
cmp
mov
add
js
mov
je
gs
icebp
fisttpl
sahf
and
xchg
sub
xchg
loope
scas
pop
mov
dec
ret
pop
sbb
add
fsubl
fimull
push
shl
sub
cltd
sarb
pop
lret
mov
push
sub
mov
fwait
cltd
bound
inc
or
jmp
sub
adc
add
sub
mov
cmp
cmp
mov
push
out
push
mov
jp
cmp
xor
dec
test
mov
enter
cltd
fisubs
bound
sbbb
dec
fwait
pop
outsl
inc
adc
lret
lea
add
test
pop
popf
pusha
pop
push
jae
andl
mov
xor
push
rcrl
push
je
roll
cld
fcompl
cmp
jb
mov
nop
sub
addl
dec
add
or
pusha
cmp
in
mov
inc
pop
arpl
pop
rorl
mov
mov
mov
jecxz
inc
fcmovu
pop
scas
or
test
fsubp
ret
and
hlt
xchg
mov
dec
mov
add
loope
mov
ret
sbb
loop
lock
sbbb
push
mov
or
hlt
add
lret
mov
imul
outsl
addb
mov
pop
outsb
out
div
cld
mov
dec
loopne
in
add
std
mov
cmp
sub
xchg
mov
aas
xchg
sbb
loop
cltd
ds
icebp
leave
imul
mov
push
cmp
push
jecxz
sub
xor
pop
jp
xor
add
fld1
adc
movsb
push
es
in
scas
cmp
lret
lahf
imul
cmp
and
add
inc
mov
sub
mov
shlb
pop
mov
push
lock
push
cs
and
fadds
rclb
jle
pop
stos
daa
mov
or
rorl
dec
xor
sahf
push
xorb
push
push
cmpsl
or
outsl
jne
clc
lret
enter
sub
sub
jne
popf
pop
movsb
mov
add
inc
movl
andb
scas
fwait
es
ds
push
cwtl
call
lcall
adc
fdivl
xchg
fnstcw
out
adc
jmp
sub
loopne
insl
adc
int
setbe
lds
cli
pop
and
icebp
insl
outsl
test
push
in
sahf
inc
loop
aaa
std
iret
adcl
mov
sub
mov
xchg
ja
fucom
and
lahf
mov
mov
fdivrl
ljmp
sub
xor
or
pop
outsb
cmp
enter
or
outsb
scas
mov
fstpl
jns
inc
jbe
cli
js
and
repz
pop
sub
hlt
pop
insb
cmp
and
in
jbe
push
in
bound
sub
sub
and
cmp
rcrb
jp
ja
cld
filds
sbb
add
iret
cmp
test
cmp
xchg
mov
popf
repz
fwait
popl
out
add
jnp
mov
mov
mov
out
cmp
dec
pusha
add
cmp
push
ss
dec
sub
cmp
xor
xchg
rcl
inc
gs
leave
in
out
mov
orl
iret
xlat
dec
lcall
xor
sub
jmp
mov
mov
add
in
inc
xchg
sbb
mov
lods
mov
mov
sahf
mov
dec
in
jmp
sahf
add
movsl
mov
jbe
add
mull
or
xlat
es
mov
imul
ja
push
mov
in
das
rcll
fdivr
ljmp
jae
or
jg
lock
mov
sub
pop
cmp
mov
xchg
mov
xor
lds
mov
inc
ficoms
mov
stc
mov
mov
pop
outsb
imul
sub
cmp
leave
fcompp
out
jmp
sahf
cltd
scas
test
pop
pop
outsb
imul
sub
cmp
leave
ficoms
mov
mov
pop
outsb
imul
or
cmp
leave
fcompp
out
jmp
sahf
cltd
scas
sub
repz
push
jns
xchg
out
rol
out
idivb
sub
in
push
daa
fisttpl
out
gs
cltd
push
mov
push
test
fsubs
lret
push
call
idivb
sub
pop
cmpsb
dec
cmpsb
js
push
jbe
inc
cmpsb
push
fcoms
clc
push
call
out
and
xor
inc
mov
push
push
out
shlb
fsubrs
inc
movsb
je
jns
stos
xchg
mov
dec
ja
gs
jns
mov
lock
rcr
leave
mov
cltd
out
jl
iret
xchg
xchg
dec
inc
std
jns
imul
inc
fsubrs
notb
out
out
hlt
popf
lret
cmc
outsb
mov
mov
lret
iret
data16
subb
clc
push
call
or
cmp
xchg
imul
lea
enter
call
or
push
ret
xor
lcall
and
es
push
clc
xchg
lock
cmpb
pop
cmpsl
sub
adc
push
add
test
clc
add
adc
icebp
adc
cmp
sub
dec
cmpsb
pop
mov
xchg
andl
dec
sarb
loop,pn
call
test
pop
mov
movsb
xlat
xor
or
jbe
inc
int3
xor
inc
lods
xor
imul
mov
js
cmp
and
push
fcoms
mov
bound
notb
xchg
adc
push
jbe
inc
test
fsubs
enter
call
idivb
sub
pop
cmpsb
dec
mov
xchg
cwtl
data16
inc
test
fsubs
enter
call
in
inc
pop
aam
sub
lods
mov
push
insb
xchg
enter
xchg
jmp
xchg
mov
push
mov
push
inc
movsb
faddp
push
adc
lods
xchg
pop
leave
incl
in
dec
call
xor
fsubrl
data16
inc
out
dec
leave
mov
dec
xchg
jmp
inc
je
rclb
dec
outsl
insb
cmpsb
mov
repz
adc
stos
clc
scas
cmp
std
xchg
mov
xor
in
mov
mov
setle
and
repnz
mov
and
lea
arpl
add
cmovp
rcll
lds
test
xchg
icebp
pop
cmp
aaa
arpl
jmp
xchg
mov
cmp
outsl
push
cmpsb
mov
xchg
aaa
cs
cmpsb
outsl
in
test
hlt
aaa
cmp
push
pushf
mov
jo
xlat
jne
into
mov
inc
add
btr
pusha
mov
mov
mov
imul
lds
mov
pop
iret
js
jp
das
pop
rolb
stos
pop
nop
jns
sub
aad
loope
in
xor
shlb
and
push
jge
pop
adc
push
pop
and
jb
lret
xchg
fcom
popa
hlt
sarl
lahf
addr16
das
push
daa
in
cmp
loopne
fwait
js
roll
lods
inc
mov
or
dec
cmp
leave
leave
fdivl
adc
nop
adc
fcoml
dec
gs
adc
jl
pop
add
jle
in
bound
test
ss
cmp
hlt
stos
test
mov
jge
stc
repz
repz
mov
fbstp
sub
data16
mov
adcl
jae
lea
mov
frstor
xor
xchg
repnz
imul
jo
mov
sub
cmp
sar
popa
sti
pop
imul
dec
add
mov
jl
aad
xchg
mov
ja
cmc
fbld
enter
call
pop
cltd
js
sub
ljmp
push
mov
mov
cltd
scas
and
sub
xor
dec
scas
xchg
or
insb
andl
jp,pt
xchg
push
subl
jmp
fildll
mov
or
test
adc
jg
and
push
and
and
lds
jno
sub
xor
scas
cmpsl
push
pop
sub
and
xchg
inc
pop
cwtl
in
xor
pusha
vpsubsw
adc
nop
add
mov
out
mov
cmp
sahf
mov
jg
hlt
imul
out
add
mov
push
or
add
mov
outsl
lret
mov
loopne
orl
leave
jmp
into
daa
mov
push
push
sub
jp
inc
int
inc
dec
sub
push
pop
and
push
sahf
rcrb
inc
scas
mov
out
xlat
pop
movsb
jne
outsl
adc
inc
jle
cmp
jg
add
je
pop
daa
sti
mov
cmp
xchg
ljmp
popa
call
add
loop
push
inc
daa
mov
push
add
ja
in
movsl
lods
and
sbb
adc
cmp
iret
sub
adc
in
inc
mov
sbb
fwait
mov
xchg
hlt
fwait
lahf
mov
cmp
xlat
mov
cmp
adc
nop
adc
fsubrs
dec
sbb
push
or
movsb
pop
jmp
push
int3
mov
ret
push
or
sub
cmc
lahf
aaa
cltd
adcb
jnp
mov
mov
inc
mov
xchg
ljmp
data16
cmc
out
jl
int3
adc
out
in
mov
jmp
int
pop
add
mov
imulb
sbb
movsb
leave
sbb
dec
popf
push
pop
jbe
dec
pop
call
sub
lods
jle
push
xchg
jmp
nop
outsb
les
stc
sub
mov
mov
xchg
into
scas
mov
inc
stc
adc
mov
or
and
adc
fstpt
jle
cwtl
stos
xchg
mov
cwtl
mov
inc
jbe
iret
movsl
scas
push
stos
cmc
jg
sete
mov
scas
adc
jo
mov
jnp
dec
push
lahf
imul
xchg
sbb
aas
mov
xchg
dec
mov
jp
cmpsl
clc
add
mov
push
loopne
xchg
fs
xor
mov
or
cmp
scas
fbstp
outsl
cmp
mov
inc
xchg
xchg
pop
test
cmpsl
lds
mov
xlat
cmpsl
lret
push
cmpb
inc
xor
sbb
mov
pop
dec
js
mov
fsubs
and
inc
sbb
data16
cmc
fiaddl
pop
lret
insb
dec
pushl
mov
push
inc
push
outsb
loop
mov
mov
add
stc
inc
xchg
xchg
mov
mov
dec
aaa
js
int3
jnp
ret
xchg
xor
negb
out
pop
or
mov
xchg
mov
push
inc
ret
jbe
push
or
push
faddl
scas
das
out
sbb
ds
sbb
or
cmpsl
fists
imul
mov
stc
loope
test
lret
push
pushf
inc
nop
pop
enter
xor
xchg
and
jl
mov
inc
out
xchg
hlt
imul
test
push
dec
cs
hlt
jl
outsb
sti
push
out
ja
scas
aas
sbb
int
mov
and
jle
pop
push
mov
mov
sub
adc
std
loopne
insl
jbe
addr16
jb
sahf
sub
sub
xchg
jmp
imul
ret
sub
add
icebp
test
dec
lds
adc
loopne
push
and
lds
aad
push
roll
out
addb
clc
mov
cmp
fucompp
rorl
dec
imul
js
popf
inc
pop
mov
loope
mov
xlat
fbld
jo
mov
pop
fnstenv
add
aad
and
inc
in
pop
cli
das
scas
enter
xor
pop
int3
push
loopne
sbb
xchg
cmc
mov
mov
lea
std
and
imul
pop
mov
sub
movsb
and
xchg
mov
mov
jmp
sub
pop
sbb
mov
add
in
sahf
add
jo
in
mov
adc
cmp
test
or
jmp
lods
aaa
inc
fistpl
inc
push
repnz
cltd
or
mov
movl
sti
cmpsb
sbb
xor
fmuls
sub
cltd
bound
addr16
arpl
ja
mov
sbb
fldl
rcrb
iret
aaa
cmpsb
or
scas
sarb
aaa
js
aam
cmp
imul
test
mov
ss
mov
test
xchg
subb
fldenv
aad
sbb
push
inc
add
in
cli
std
out
in
jecxz
cmpl
cmp
stos
sbbl
dec
xor
mov
repz
xlat
jp
aam
subb
clc
insl
fstpl
in
out
dec
push
lds
mov
imul
mov
mov
jno
sbb
out
xchg
call
iret
mov
add
mov
push
and
mov
cltd
sahf
inc
and
dec
scas
mov
clc
push
lods
pop
mov
std
repnz
jnp
xchg
repz
xchg
xchg
push
and
stos
stos
stos
rorl
xor
mov
test
mov
add
fiadds
jbe
out
ficoms
sub
mov
sti
pop
cmp
mov
popa
js
push
sub
sahf
push
lcall
int3
push
les
stos
sub
pop
cmpb
jecxz,pt
cmpsl
jmp
sbb
aam
stos
jno
das
aam
jb
jo
adc
cli
mov
mov
shll
add
roll
pop
push
subl
aas
js
and
outsl
loope
mov
cli
js
ret
shlb
popf
jle
lods
jno
mov
adc
test
int
pop
push
mov
movsb
sub
je
aaa
int3
cmp
sub
js
nop
dec
incl
sbb
stc
ror
xor
cld
jg
dec
sbb
sbb
inc
and
pop
sti
ja
data16
pop
out
push
sub
adc
sahf
or
out
xor
lock
mov
mov
adc
stos
push
das
xchg
and
sub
adc
iret
push
sbb
stos
pop
jge
jno
repnz
mov
xchg
jns
fldt
pop
sbb
ret
inc
sti
rol
mov
add
les
jecxz
mov
ds
jecxz
ror
dec
inc
xchg
fdiv
dec
xlat
sbb
xor
rcll
clc
sti
dec
dec
loopne
ss
sbb
cmc
pop
and
adc
stos
sub
and
negb
or
cmp
inc
dec
cli
push
sbb
dec
xor
push
mov
lret
xchg
mov
mov
pop
pop
rcl
jno
mov
out
jae
jmp
test
jnp
imul
push
sbb
shll
push
mov
fisttpl
cli
add
jle
push
icebp
add
dec
xchg
mov
fcomp
int3
and
dec
pop
mov
adc
jbe
sbb
outsb
push
gs
fistpll
cmp
movsl
int
cmpsb
and
add
fdivrl
fidivs
xor
inc
sub
xchg
hlt
add
push
lods
outsb
xchg
fstpt
xor
cmp
xchg
cltd
sub
ja
je
es
in
cli
or
cld
out
push
loope
push
es
adc
daa
or
fadds
popf
adc
aad
pop
sbb
mov
push
inc
pop
lret
push
pop
push
idivb
cmpb
mov
out
jmp
sub
xchg
xor
mov
and
fs
call
je
cld
aaa
outsb
add
subb
arpl
and
add
les
mov
inc
cs
mov
out
jne
pop
adc
data16
push
pmuludq
shll
lahf
nop
scas
inc
notl
data16
pop
sub
push
test
push
ss
mov
xchg
jnp
sub
aam
add
iret
sub
stos
js
ss
movsl
lock
sti
add
fisubrs
jo
sbb
xchg
loopne
fs
cmc
mov
aad
jne
or
int3
in
push
mov
lahf
push
cmp
add
out
pushf
mov
xor
mov
fnstcw
std
jp
icebp
or
in
out
push
pop
fldl
or
pop
cld
jl
lock
inc
mov
jns,pt
sbb
sahf
push
rclb
fs
shl
outsl
jmp
pop
aam
push
jg,pt
gs
call
push
ret
cmc
dec
orb
aam
xor
add
dec
cmp
in
daa
int3
stos
stos
mov
push
and
and
loop
and
and
jmp
insb
push
sbb
incb
mov
cmp
imul
xchg
xchg
sub
cmp
pushf
xchg
dec
pop
xor
mov
push
dec
inc
or
pushf
in
adcb
sbb
inc
xchg
int
sub
pop
outsl
jl
repz
aas
les
sahf
sbb
es
cmp
push
lret
xchg
and
push
push
jne
mov
or
mov
dec
das
hlt
repnz
adc
dec
cwtl
int
inc
call
pop
mov
test
cmpb
sbb
mull
pop
xor
insb
jle
or
sub
push
in
sti
xchg
loopne
adc
push
out
inc
pop
mov
out
ja
cmpsl
div
les
aas
jmp
inc
xchg
jbe
rcrb
in
or
xor
out
fidivs
pop
mov
mov
mov
mov
dec
add
xor
mov
xchg
inc
and
test
fbstp
or
jg
scas
mov
adc
add
pop
loope
dec
mov
or
adc
addb
add
push
or
pushf
add
mov
mov
pop
xor
inc
insb
jno
inc
test
ss
es
and
xchg
mov
cwtl
jno
dec
icebp
insb
or
les
fs
shrb
pop
movsb
mov
aas
data16
popf
mov
dec
shlb
cmp
or
popa
rolb
hlt
mov
outsb
sub
or
cs
mov
cli
pop
jnp
mov
jge
fdivrl
push
push
repz
in
fwait
in
mov
shrb
mov
lret
loope
loop
divl
out
ret
and
cmpsl
mov
out
jae
adc
xor
std
push
hlt
mov
pop
repnz
xor
push
and
out
cmpsl
pop
pop
das
mov
pop
lods
add
repnz
fucomi
pushl
addr16
ss
or
mov
mov
int
xchg
clc
std
es
out
sub
pop
int3
imulb
sbb
cltd
mulb
fstpt
pop
mov
mov
test
faddl
sbb
mov
add
xor
sar
inc
int
fisubl
mov
mov
fidivl
xorl
enter
jmp
push
push
call
jo
inc
cwtl
mov
add
into
imul
push
cmc
pop
jo
bound
adc
jecxz
rorl
inc
mov
mov
popa
in
ds
mov
pop
test
cmp
mov
jne
push
jl
in
fmull
jecxz
clc
add
xchg
hlt
and
ja
mov
cmp
xchg
dec
jo
jg
add
xor
pop
ret
pop
xorb
leave
ljmp
dec
aaa
xchg
lds
loop
in
addr16
outsl
cmp
sub
xchg
jl
sbb
mov
cmp
sbb
sub
pop
jmp
in
jmp
jo
and
sti
sub
jge
push
jecxz
icebp
pop
mov
jge
test
xchg
and
lock
dec
xor
lock
jmp
or
addr16
pop
cmp
cld
imul
sub
mov
jnp
xchg
out
cmpxchg
lret
repz
cs
jae
popf
test
or
in
popl
sbb
cmp
push
push
adc
icebp
inc
push
xlat
pushf
and
loop
insl
out
ja
aad
and
mov
jp
fwait
jno
andb
mov
adc
and
outsb
shlb
aad
aad
in
mov
iret
mov
pop
xor
add
scas
fmull
icebp
push
rcrb
sar
lds
scas
adc
scas
jo
enter
inc
mov
xor
mov
dec
insl
movsb
inc
stos
pop
add
jne
ret
aam
pop
fistpl
insb
pusha
imul
add
inc
and
orl
jb
mov
lahf
leave
jg
push
out
cltd
loopne
jp
js
cmp
incb
xchg
je
or
frstor
sbb
ja
out
sbb
divl
mov
fstps
divb
pop
cmpsl
inc
push
mov
xor
push
or
popf
xchg
stc
add
mov
xor
sahf
ljmp
sub
movsl
jb
bound
sbb
pop
jmp
push
jg
leave
mov
ljmp
jl
dec
sub
scas
or
mov
pop
xchg
inc
je
adc
stos
pop
imul
jmp
mov
dec
mov
xchg
cmpsl
ret
or
adc
outsl
out
call
xor
in
add
add
fistpll
xchg
or
mov
js
outsl
push
icebp
jbe
arpl
aaa
cltd
sti
push
mov
dec
fwait
pmuludq
push
pop
xchg
iret
scas
loope
push
mov
stos
sub
call
scas
xchg
faddl
inc
sub
xchg
pop
cwtl
ja
stos
jae
lods
sbb
add
aam
or
jb
mov
shlb
inc
xor
xlat
fadd
aaa
dec
aam
leave
add
imul
out
adc
imul
or
sbb
jecxz
loope
jbe
xor
aas
dec
icebp
pop
sti
push
in
xlat
jmp
adc
mov
adcl
inc
aad
and
xor
lret
imul
pop
aas
sbb
iret
into
js
add
rorl
inc
and
adc
fnsave
repnz
mov
ficomps
mov
push
pushf
or
outsb
popf
pushf
inc
stos
inc
pop
je
cs
icebp
je
mov
or
jns
sub
dec
pushf
add
mov
cs
push
cwtl
ss
fdivl
push
test
and
pop
fbld
sub
mov
pop
leave
sahf
push
jl
pop
mov
lret
cld
arpl
inc
out
adc
and
dec
jno
clc
add
mov
pop
push
fdivl
ret
jmp
rcrb
outsl
fs
inc
stos
adc
pop
sbb
pop
fbstp
adc
pusha
lahf
push
pusha
xor
ret
popf
sbb
sti
fstl
cmpsl
inc
and
pop
inc
sbb
jae
pop
aas
outsb
loop
ss
daa
bound
repz
lret
mov
out
mov
push
int
xchg
testb
jbe
xchg
dec
sbb
lock
cltd
sub
add
mov
out
cld
mov
roll
fistps
add
adc
mov
testb
loopne
fbld
xor
xlat
xchg
popa
pop
aas
shl
cmp
movsb
xor
sub
adc
sbbb
jge
dec
sbb
adc
stos
mov
fldenv
or
xor
lret
dec
pop
add
ss
mov
rcll
xchg
pop
sti
sbb
fdivs
ror
int3
into
xor
pop
jmp
jno
adc
sbb
stos
int
mov
in
or
ror
fcmovnu
xchg
push
or
xchg
add
adc
mov
dec
call
ret
adc
mov
xorl
mov
cmpsb
leave
ffreep
push
fbstp
fcomi
jge
jecxz
mov
es
push
nop
push
and
sbb
mov
lea
es
sbb
mov
sti
aad
out
pop
rorb
loop
and
jbe
call
sub
inc
inc
sbb
and
lea
inc
idivb
shl
test
aaa
notb
fidivrl
mov
jb
xchg
adc
lahf
stos
movsl
sbb
subb
xor
shl
lret
xchg
inc
mov
loopne
stos
or
cmp
dec
add
jo
xchg
cmc
pop
push
mov
test
lcall
add
scas
lods
pop
jg
or
movsb
hlt
sar
lock
not
mov
out
addr16
leave
insb
clc
les
xor
sub
roll
bound
dec
inc
leave
fisttpll
test
xor
push
pop
and
or
std
and
int3
mov
mov
mov
jle
repnz
fwait
lret
push
jcxz,pt
or
jecxz
in
mov
xor
inc
popf
mov
outsl
inc
imul
pop
adc
clc
dec
mov
jmp
mov
sbb
push
movsl
cmp
fs
in
push
fdivp
xor
enter
jbe
sub
or
adc
ds
in
testl
jo
pop
mov
push
or
jae
jnp
pop
jnp
fcomi
dec
in
and
sub
div
cmp
jb
pop
push
jmp
cmpxchg8b
outsb
cmp
cmp
into
sub
stc
pop
daa
xchg
rorb
push
lcall
mov
imul
push
add
jmp
scas
nop
lods
fwait
jle
jns
push
stos
daa
sarl
rcrl
push
ljmp
cli
jnp
sub
adc
push
int3
xlat
sbb
push
add
je
sub
out
daa
push
out
nop
push
sbb
and
mov
cmp
jno
test
stos
bnd
lock
mov
add
mov
sub
mov
sbb
fcmove
stc
call
or
xchg
js
ss
sbb
repnz
inc
jno
jae
js
fistl
fs
adc
dec
sbb
xor
add
xor
addr16
insb
ret
ret
push
jnp
mov
sbb
pop
je
and
and
or
xor
inc
ret
push
lods
and
inc
lock
sbb
test
cmp
pop
int3
or
cmp
adc
gs
push
fnstsw
fistl
jnp
and
orl
inc
cmp
and
add
pop
leave
fnsave
gs
mov
mov
pop
inc
aaa
adc
outsl
adc
dec
in
mov
xor
xchg
add
shlb
icebp
pop
clc
loopne
lds
insl
cli
in
or
xchg
dec
mov
pop
hlt
mov
fisttpll
mov
dec
lock
in
mov
xchg
jle
popa
out
movsb
xchg
loope
pop
faddp
push
out
sub
test
push
lahf
pop
xchg
or
push
add
sti
add
xchg
mov
xor
aaa
pop
mov
sbb
in
lods
or
dec
cli
shlb
out
cmpsb
jbe
testl
push
ja
in
ss
fadds
and
test
sub
pop
cmpsb
dec
mov
xchg
cwtl
data16
inc
test
fsubs
enter
call
idivb
sub
pop
cmpsb
dec
mov
xchg
cwtl
data16
inc
test
fsubs
enter
call
idivb
sub
pop
cmpsb
dec
mov
xchg
cwtl
data16
inc
test
fsubs
leave
ss
add
adc
loop
repnz
sub
pop
cmpsb
dec
mov
xchg
push
addr16
adc
and
jns
imul
inc
lods
sbb
movsb
push
mov
dec
in
hlt
outsl
aam
aam
and
xor
add
adc
fbstp
call
pop
mov
movsb
aas
xchg
popl
jg
cmp
mov
insb
out
pop
decl
inc
cmp
inc
icebp
aas
xchg
dec
movsl
xor
shlb
pop
scas
jo
lahf
push
mov
fiaddl
xchg
outsb
das
sarb
cmpsb
cmp
or
sbb
cmp
jns
jne
mov
xor
fisttps
repnz
pop
rclb
mov
xchg
mov
pop
lret
xor
mov
das
cmp
adc
hlt
and
or
jg
je
xor
add
and
inc
lret
sbb
stos
xor
dec
shll
mov
pop
or
dec
dec
mov
dec
sti
inc
hlt
xchg
inc
fisttps
out
dec
mov
roll
mov
sub
pusha
aam
add
fisttps
jle
fstps
out
mov
pop
mov
subl
and
and
fbstp
decl
mov
aas
lea
pop
jecxz
les
into
inc
jmp
movb
sbb
int
int3
das
roll
dec
mov
or
cmp
lret
adc
pop
lcall
fisttpll
sub
xchg
xor
ljmp
popa
orl
je
inc
call
pop
mov
test
xchg
dec
in
hlt
outsl
les
and
xor
add
adc
fbstp
call
pop
mov
test
xchg
dec
in
hlt
outsl
les
and
mov
and
fstl
add
or
jg
mov
xor
repz
faddl
outsb
jno
clc
std
mov
mov
cwtl
add
lret
jb
pop
sub
ja
inc
fdivrs
pop
cmc
std
cmc
inc
sahf
push
cmp
mov
cmp
cmp
inc
test
or
filds
shrb
xchg
mov
popa
dec
xor
lret
jne
mov
test
shl
dec
push
fmuls
js
mov
into
inc
xchg
or
and
sub
gs
jg
incb
or
flds
mov
test
test
stos
xor
nop
sahf
popa
nop
jno
xor
in
arpl
cmc
push
outsb
popl
fbld
pop
loop
xchg
pop
scas
mov
xchg
push
jo
pop
push
sub
orl
push
and
mov
xor
mov
icebp
mov
xor
mov
pop
mov
lods
sub
sbb
fistpll
xor
sti
sub
or
in
add
pop
push
pop
fists
das
jg
adc
xchg
rcl
loop
add
adc
mov
rol
aaa
mov
fucomp
movsb
mov
inc
cs
push
sbb
pop
jmp
cli
data16
xlat
mov
push
push
xchg
mov
std
dec
jecxz
cli
mov
sbb
xchg
daa
sub
mov
fcom
into
mov
ficomps
sbb
pop
je
pop
gs
fmull
jg
stos
or
insl
cld
pop
mov
add
or
pop
add
dec
xchg
fsubs
out
mov
outsl
ret
int
xor
jo
xor
fildll
pushw
mov
mov
js
xchg
addb
adc
cmp
fisubs
xchg
in
push
xorl
aas
out
stc
out
ljmp
cmp
incl
pop
jbe
outsl
mov
sub
xor
push
jecxz
sub
jmp
dec
cmovle
push
lea
inc
sub
jge
and
ss
mov
divb
cmp
testb
dec
adc
lret
jae
mov
lods
loope
aam
notb
sbb
or
divb
adc
pop
push
in
xchg
lock
arpl
dec
movsl
test
in
stos
lret
xchg
fwait
and
adc
cmp
adc
das
out
pop
dec
xor
inc
jo
lock
mov
aaa
in
lcall
fwait
in
shll
or
mov
retw
cmp
jb
pop
and
push
in
clc
cmp
nop
sub
out
fbld
adc
rorl
stc
movsb
fcmovne
and
icebp
imul
pop
int
jno
je
add
jbe
and
push
int3
cmp
mov
int3
mov
out
lcall
ja
inc
pop
jbe
jae
sbbb
or
and
pop
stos
add
ficoml
mov
xor
cmp
iret
mov
lcall
push
out
push
and
insl
inc
cmpsl
loop
xchg
xchg
dec
or
or
stc
xlat
addr16
mov
jle
les
cmp
je
adc
cltd
adc
into
es
adc
xchg
adc
cmc
add
shlb
cs
mov
push
jl
loopne
aad
and
inc
sub
add
push
imul
mov
mov
imul
inc
ds
xchg
jecxz
jne
xchg
addr16
push
sub
hlt
into
push
add
xor
sbb
stos
in
adc
add
shl
clc
stc
sbb
rcll
cmpsl
mov
mov
and
ljmp
or
insl
cmp
mov
xor
dec
mov
cwtl
inc
lods
cmp
add
out
leave
pop
imul
and
push
mov
xor
std
and
adc
mov
in
fwait
cs
sbb
scas
pop
dec
push
in
rolb
sbb
jbe
or
xchg
cs
pop
scas
fldenv
and
lret
push
scas
push
rorb
inc
push
jo
pushf
repnz
add
pop
bound
int3
mov
xor
loope
pop
jne
lret
cwtl
sbb
subl
mov
mov
xchg
mov
pusha
xor
sub
adc
push
mov
add
out
es
int
xor
popf
adc
in
push
sub
pop
or
bound
mov
pusha
out
data16
and
divb
and
fsts
arpl
mov
divl
js
mov
icebp
push
int
je
push
cmp
cld
jne
jecxz
pop
sub
sbb
cli
call
test
fs
daa
inc
sbb
xchg
lods
push
shrb
lret
bound
mov
sub
into
mov
lods
pop
lret
subb
mov
jns
lds
jno
xor
pop
and
inc
cltd
aad
pop
jb
cmpsl
daa
fisttps
pop
scas
in
hlt
pushf
es
or
int
xchg
aam
mov
in
fstpl
icebp
setnp
adc
lods
pop
cwtl
mov
and
movsl
shll
clc
cmc
loope
jb
imul
cmp
add
mov
jp
jle
pop
mov
in
into
jg
stc
out
add
mov
push
mov
push
add
lea
push
add
push
test
clc
inc
xlat
or
xchg
jno
fwait
jb
cmp
aad
mov
es
cmp
xor
in
fisttps
add
push
cmovl
ret
test
push
loopne
adc
mov
xor
ret
mov
mov
loope
insl
repnz
repz
js
lcall
jecxz
or
push
ja
cmp
push
push
cwtl
lcall
dec
dec
mov
pop
cmp
ss
js
add
push
push
rolb
sbb
mov
and
outsl
sub
push
hlt
mov
test
push
add
ret
sub
das
push
lret
enter
add
popf
fistps
push
mov
xor
fwait
xor
cmp
test
mov
dec
xchg
pop
mov
icebp
outsb
and
ljmp
cli
in
out
out
cmc
pop
mov
lods
ret
dec
dec
push
mov
mov
outsb
push
addr16
sbbb
inc
or
adc
xor
xchg
or
jg
xlat
in
push
loopne
ret
movl
sub
imul
mov
insl
fcmovnb
neg
aaa
inc
and
inc
xor
test
cmp
gs
push
xor
jno
ret
insl
lds
call
sbb
fbld
xor
inc
sbbl
mov
mov
test
xchg
leave
imul
xor
push
rcr
mov
insl
adc
and
or
sbb
shr
mov
out
scas
leave
test
pushf
inc
pop
hlt
cmpsb
je
sub
push
insl
push
insb
ret
scas
inc
movsl
jno
add
lahf
aas
fwait
adc
cmp
call
mov
mov
adc
mov
sub
insl
pop
scas
mov
icebp
add
xor
add
adc
jnp
xor
push
dec
insl
add
neg
xor
lret
or
pop
adc
clc
push
mov
dec
sbb
pushw
decl
jg
pusha
push
xchg
dec
lock
xor
insl
dec
dec
arpl
cmp
sbb
fs
mov
aas
push
pop
sbb
sti
call
repz
push
inc
xor
rcrl
imull
jecxz
dec
sbb
sarl
js
push
mov
dec
xor
dec
xor
scas
test
arpl
mov
inc
insl
xlat
sub
imul
int
fsubrl
repz
xor
add
sahf
test
loopne
and
into
addr16
andb
lods
pusha
dec
adc
dec
imul
bound
sub
mov
push
adc
ljmp
sub
out
es
loop
js
xor
and
push
arpl
or
fwait
push
mov
push
lret
mov
pop
sbb
andl
mov
or
int
loope
das
into
stc
xchg
and
ret
dec
dec
jg
hlt
bound
xlat
or
scas
movsl
jbe
bound
mov
out
mov
movsb
add
lcall
jle
addr16
mov
push
arpl
adc
push
mov
sbb
jnp
ds
fistpl
fisubrl
movsb
jns
adc
jmp
sbb
loope
lods
incb
ds
lea
rcll
push
int3
lods
lcall
mov
cmc
mov
adc
xchg
aam
and
fisubl
inc
jbe
mov
cmp
addl
mov
repz
and
jg
cmpsl
sbb
ror
lods
dec
fisttpl
mov
dec
push
xorl
shl
loop
mov
sbb
sbb
jp
or
das
xchg
imul
inc
aad
cmpsb
cwtl
aad
fldl
je
pop
jp
cs
outsb
les
cld
fcoml
jbe
add
push
adc
xchg
aas
int3
add
rorl
ret
xor
adc
dec
pop
jl
cld
push
stos
dec
adc
xchg
xchg
rclb
mov
in
or
hlt
out
xor
cmp
ret
sbb
scas
and
push
push
testb
repnz
sub
arpl
push
jg
mulb
mov
hlt
pop
xor
mov
cmp
daa
mov
aaa
and
sahf
std
lret
lahf
test
jle
inc
test
and
mov
pusha
je
mov
mov
or
sub
lcall
loop
fsubrl
and
mov
jnp
outsb
push
cs
out
mov
mov
and
add
push
lea
test
iret
adc
xorb
dec
shlb
test
stc
idivl
sub
push
dec
ret
mov
rcl
scas
pop
jo
into
movsl
pop
in
loopne
dec
icebp
cwtl
aaa
rcl
mov
insb
inc
and
fldenv
bound
sub
and
aas
and
push
popf
xchg
cmc
add
mov
dec
mov
sbbl
sbb
xchg
loopne
ret
and
rcrb
and
push
cmc
mov
and
adc
jecxz
cwtl
das
iret
ficomps
mov
shlb
fstpl
sub
adc
pand
cmp
scas
mov
mov
ss
pop
fistpl
imul
lret
test
iret
pusha
push
cli
and
mov
gs
shlb
insl
out
cs
and
push
sbb
stc
popa
or
mov
data16
cwtl
jge
xchg
rol
int
outsb
jmp
inc
insb
fiaddl
xchg
mov
pop
and
sbb
sub
sub
cmc
push
mov
outsl
lret
pop
jo
mov
mov
xor
fcmovne
ljmp
cmp
call
aas
dec
insb
stc
rcl
xor
imul
jl
aam
cs
jmp
inc
gs
xchg
cmpsl
lea
cmp
fists
sbb
fimull
rorb
pop
xchg
pop
or
xchg
pushf
xchg
lret
jecxz
jb
mov
xor
cltd
sbb
sub
xlat
sbb
pop
xor
adc
inc
jb
ret
sbb
xchg
xlat
mov
cmp
mov
je
cwtl
add
repnz
sbbl
popa
leave
sbb
jne
push
adc
rorb
lods
jb
push
cmp
mov
ret
inc
js
bound
adc
mov
mov
adc
rorl
sti
fisubl
aas
add
jmp
rorb
addr16
daa
xchg
or
mov
stos
mov
fcmovnu
aad
imul
jno
ljmp
sti
adc
in
in
xchg
mov
push
inc
cs
adc
push
xchg
inc
mov
fwait
rorl
fnstcw
movsb
and
or
inc
cmp
inc
mov
insl
mov
fdivp
inc
sub
bound
mov
xchg
add
mov
or
std
ret
enter
ret
lods
scas
fildl
sarb
scas
mov
out
or
inc
pop
sti
dec
fistps
mov
xlat
mov
lahf
sahf
dec
mov
out
jb
shl
or
add
clc
out
or
and
ror
and
loope
enter
fmuls
jae
jns
inc
mov
or
cmp
jno
mov
jno
outsb
jecxz
sbb
push
out
or
mov
sbb
subb
push
xchg
gs
je
jbe
je
test
lea
cmpsl
insb
or
and
imul
test
push
dec
cmp
jle
mov
outsb
xchg
sbb
inc
push
xorb
jmp
lods
pop
mov
push
pop
mov
push
aad
sub
movsb
push
ss
push
cmp
pop
cltd
jb
ret
subb
lret
imul
pop
lods
sbb
dec
fidivs
mov
pop
mov
pop
sti
scas
push
pop
in
orl
andb
mov
add
jns
sahf
push
push
mov
jl
pop
test
mov
test
adc
add
fisubl
scas
cmp
jecxz
call
jecxz
dec
faddp
negb
insl
push
out
inc
jg
mov
dec
adc
mov
mov
jge
out
fs
call
rcrl
imul
xchg
aad
jl
jae
mov
jbe
inc
pop
dec
mov
jle
adc
in
cmc
arpl
xchg
rorl
repnz
push
sti
lahf
repnz
sub
dec
and
aam
add
mov
andl
loope
ss
or
aam
lret
cmpsb
xor
cmpsl
in
cli
mov
ja
add
imul
addl
xor
push
popa
test
pop
jecxz
icebp
push
iret
in
lods
adc
out
sti
push
cli
inc
jnp
fisubrl
stos
test
and
adc
outsb
sub
xchg
xchg
or
or
fnstsw
xchg
cld
std
lods
jns
insb
cmp
es
sub
and
lods
mov
stc
jp
shrb
or
push
jge
xor
dec
adc
ja
adc
out
cmp
roll
pop
insb
mov
add
rcl
int
and
scas
xor
addr16
mov
loop
ds
hlt
sub
fsubrl
adcl
test
roll
inc
inc
or
push
leave
xchg
scas
inc
pop
mov
pop
pop
inc
into
jle
sbb
in
xchg
xor
add
test
testl
gs
es
mov
ret
add
int
xor
hlt
enter
mov
xchg
lods
pop
aad
mov
add
mov
imul
push
pushf
rcrb
cmpsb
js
das
dec
cmp
sbb
fdivrl
sub
xor
xchg
shll
cld
push
adcb
imul
cs
jge
push
lods
out
sub
inc
adc
mov
out
aaa
rcr
mov
iret
lds
jge
dec
push
adc
jne
pop
repnz
fs
cs
xchg
insl
popf
adc
cmp
add
mov
arpl
xchg
dec
cmp
testl
mov
or
cmp
sbb
mov
and
ret
and
mov
mov
mov
sbb
inc
daa
cmp
mov
push
lahf
mov
mov
dec
pusha
mov
shll
add
ss
mov
cs
aam
rcrb
pop
out
dec
and
push
sbb
popf
mov
dec
movsl
negb
scas
lcall
movsb
hlt
cltd
scas
lock
adc
rorb
mov
mov
filds
xchg
add
jl
andl
adc
sbb
add
adc
xor
adc
jb
inc
xor
aad
mov
jne
mov
or
or
xchg
and
jecxz
add
dec
and
mov
add
ja
lds
xor
pop
fldenv
mov
ljmp
jl
in
mov
aas
mov
and
mov
push
cmp
stc
xor
int
sbb
aam
cmp
gs
pop
cmc
and
inc
dec
or
inc
mov
jle
add
shll
fistps
xlat
push
xor
mov
fwait
lods
dec
xorl
or
push
stos
mov
in
cmp
rolb
xchg
ljmp
sbb
mov
sub
dec
out
popf
test
subl
adcl
xchg
sbb
fistl
mov
mov
es
stos
xor
add
add
shlb
stos
adc
pop
push
jno
int3
jle
hlt
cmp
cmp
mov
pop
pop
mov
lahf
adc
adc
lds
sbb
sub
jne
cs
cmp
adc
ljmp
adc
push
ja
jecxz
das
in
iret
jnp
js
daa
jne
xchg
or
js
popf
sbb
mov
adc
xor
and
xor
xlat
ret
js
shrb
mov
adc
push
cmpsb
test
cmp
mov
fsubs
cmpsl
andb
mov
sub
mov
mov
and
js
in
fdiv
es
imul
or
inc
leave
inc
in
adc
sbb
das
xchg
dec
cmp
test
sub
fs
mov
lret
jg
lea
add
or
in
sbb
mull
shrl
add
or
mov
arpl
lret
xchg
push
cltd
mov
and
mov
out
int
add
in
outsl
sarl
std
push
or
ds
aaa
xchg
mov
add
jg
pop
cmpl
popa
push
mov
call
pop
mov
inc
addb
ljmp
sbb
xor
outsb
adc
not
mov
out
push
aad
dec
add
xor
ljmp
push
pushl
lret
arpl
xchg
movsl
into
outsl
negl
test
mov
test
push
ret
mov
sbb
pop
pop
or
ret
out
dec
jmp
sbbb
add
sub
aas
mov
aam
ds
iret
inc
sbb
or
mov
mov
aas
inc
ds
push
xor
decb
cmp
mov
jle
incl
xchg
cmp
mov
movsb
cld
fbld
aam
add
mov
add
jl
pop
sti
fbld
idiv
cmp
repnz
int3
jbe
inc
cwtl
outsb
rolb
push
pop
movsl
loopne
das
and
sub
test
xchg
insl
and
in
jnp
cmp
add
cwtl
stc
data16
addr16
xor
rcr
sbb
insl
mov
outsl
push
cwtl
lods
bswap
nop
jae
xchg
sti
xor
jl
sarl
push
lcall
pop
cltd
rorl
outsl
xor
pop
add
inc
sbb
add
mull
stos
adc
fwait
push
stos
jg
es
xlat
xchg
mov
int3
jecxz
push
or
rolb
cmp
mov
mov
aam
out
shll
fwait
mov
outsl
jo
adc
mov
push
sbb
fdivl
aaa
pop
mov
stc
pop
sub
out
clc
and
ss
inc
jbe
mov
jne
movq
and
push
push
loopne
imul
bound
xor
dec
push
and
sub
push
lods
xor
cld
mov
mov
cmp
xor
inc
add
jae
sub
mov
fwait
popf
cmpsl
mov
jbe
jae
cmp
iret
push
xchg
lods
loop
mov
mov
dec
sbb
enter
mov
xchg
mov
arpl
loop
icebp
sub
repnz
add
push
movl
xorb
xlat
mov
pop
inc
adc
jmp
out
fmuls
stc
jne
out
or
cmp
add
pop
xor
dec
push
in
daa
push
xor
daa
popa
sub
cmp
cmp
je
je
icebp
push
mov
pop
sahf
push
dec
lret
xchg
jb
pop
test
add
ja
mov
outsl
outsl
pop
cld
and
xchg
or
enter
or
lods
or
sbb
scas
pop
xlat
stos
inc
movsl
scas
stos
or
xor
stos
loopne
mov
bound
cs
inc
das
iret
xor
inc
xchg
int
scas
or
push
dec
or
mov
push
aad
mov
adc
lcall
test
adc
es
jmp
or
ret
mov
movsb
jns
jecxz
dec
repnz
shlb
mov
mov
in
andb
test
add
aaa
pop
leave
js
add
sbb
jae
shll
adc
adc
pop
out
mov
scas
jmp
adc
fbstp
call
pop
mov
test
xchg
dec
in
hlt
outsl
les
and
xor
add
adc
fbstp
call
pop
mov
test
xchg
dec
in
hlt
outsl
les
and
xor
add
adc
fbstp
jg
shld
das
test
xchg
dec
in
hlt
outsl
lds
and
xor
add
adc
fbstp
call
pop
push
test
or
cmp
sub
rcll
push
loope
lds
mov
xchg
jno
popa
notb
cmpsb
inc
xor
and
shll
shll
push
loope
xchg
adcw
mov
jno
popa
notb
out
xor
and
sarl
rorl
push
loope
xchg
jg
dec
mov
mov
cli
add
popa
flds
movsl
push
scas
and
es
xchg
push
inc
gs
inc
dec
dec
pop
adc
jno
adcb
mov
stos
adcl
imul
and
mov
shll
fnstsw
push
les
inc
mov
and
jns
or
mov
and
cs
cmc
push
nop
jae
mov
into
push
xchg
ficompl
xchg
iret
das
add
dec
fnstcw
es
cmpsb
jle
dec
push
idivl
lea
inc
pop
xor
jno
push
cmp
mov
jp
and
scas
pop
push
imul
cmc
ss
and
shll
rcll
adc
xchg
jl
push
mov
mov
mov
popa
out
adc
add
xor
addr16
mov
bound
push
aam
rol
cmp
call
js
mov
inc
ss
mov
add
add
or
mov
cmpsb
sub
xchg
jle
outsb
cmpsb
inc
dec
pop
adcl
push
mov
mov
xchg
jno
popa
notb
out
xor
and
shll
rcll
push
loope
xchg
adcw
mov
cmpsb
inc
xchg
jno
popa
notb
out
xor
and
shl
aam
add
pop
push
dec
xchg
jmp
dec
aad
into
pop
outsl
mov
jae
js
or
add
enter
sbb
jne
push
test
fstpt
pop
fwait
sub
pop
scas
dec
mov
outsb
jle
stc
inc
insb
lahf
jne
gs
ja
mov
pop
loopne
divb
aas
xorb
push
and
sarb
mov
adc
sbbb
sbb
or
cs
in
xor
addr16
cld
inc
sahf
jl
dec
fisubrl
lods
or
push
jae
fwait
xchg
ja
aaa
dec
test
stos
imul
lock
inc
sub
call
daa
out
lea
mov
jge
push
inc
int3
pop
dec
add
adcb
or
movsb
jmp
test
adcb
fildll
stos
pop
and
addl
fnstenv
in
pop
jbe
sbb
sub
sub
fiadds
xchg
push
sub
push
scas
repnz
xchg
dec
mov
out
stc
xchg
ret
out
mov
mov
sub
call
nop
daa
lahf
and
loop
test
inc
mov
pop
mov
mov
mov
push
lahf
pop
in
imul
push
sti
mov
scas
push
icebp
push
outsl
push
fs
xchg
mov
adc
lea
jae
aad
out
fisttpl
fstl
sar
push
out
fisttps
fildl
and
jnp
lock
pop
fidivl
lods
stos
push
push
sbb
imul
dec
mov
fstl
cs
ficompl
lret
in
aad
fwait
push
or
dec
pop
test
gs
ss
rorl
jae
fldcw
pop
stos
mov
outsl
cmp
and
add
lods
xchg
dec
mov
jecxz
jbe
mov
testb
inc
push
out
aaa
rcl
mov
or
inc
stc
adc
cmp
pushf
test
cwtl
fsub
cld
lahf
cmp
and
inc
cmp
jge
fidivs
push
cmp
sbb
sarb
data16
push
jb
das
stos
or
pop
arpl
mov
int3
sbbb
lea
xchg
rcr
or
lea
divb
jle
data16
mov
add
mov
insb
outsb
cmpsl
pop
js
popa
mov
repz
xchg
out
pop
repnz
ficoms
dec
movsb
jle
cmp
cmp
push
or
jle
jno
lea
jne
pushf
jo
mov
dec
pusha
sub
and
fcmovnb
out
repz
fcoml
pop
add
xor
lods
lret
iret
js
fbld
mov
mov
je
out
popa
nop
call
sahf
mov
push
jns
mov
jne
jns
popa
dec
dec
int
cmp
push
jecxz
test
jle
dec
xor
in
mov
sub
pop
xchg
cmp
or
mov
repz
lret
roll
aaa
add
fbld
xchg
in
jae
sbb
out
push
std
cmpsl
nop
sbb
mov
mov
mov
xchg
mov
int
out
call
in
dec
es
cmp
repz
sub
cmp
movaps
xlat
mov
xor
dec
dec
je
cmp
loope
xor
add
jb
sbb
icebp
push
xchg
add
jl
mov
inc
jns
jo
jmp
add
rclb
ja
call
in
pop
das
stos
inc
inc
mov
js
cmp
cmp
lods
ljmp
inc
int3
add
clc
cmp
enter
jp
mov
sbb
cmp
stc
incl
loopne
cltd
or
dec
scas
cmc
out
xchg
or
sbb
mov
inc
jns
mov
jnp
jmp
xchg
sub
mov
cmp
or
add
in
cmp
mov
add
movsb
js
fcmovbe
mov
push
jge
outsl
fistl
addr16
lods
dec
lret
movsb
arpl
jne
jmp
cmp
or
mov
sub
sbb
cmp
enter
cmp
or
lods
jl
sub
andb
cmp
xor
dec
js
or
std
or
cmpsl
je
xchg
adc
outsb
stos
pop
mov
jle
push
pop
sbb
jge
push
sahf
out
fldenv
mov
mov
dec
xchg
loope
outsb
mov
pop
data16
inc
aas
mov
es
enter
jmp
xor
in
mov
int
roll
clc
mov
out
rolb
sub
sub
cmpsl
mov
push
mov
push
mov
and
ja
and
xchg
add
movsb
cmpl
mov
xor
xlat
call
and
stos
stc
xchg
and
mov
jecxz
or
mov
sub
cli
loop
sbb
xchg
and
hlt
xor
es
shr
dec
je
pusha
subl
pop
push
jge
mov
inc
mov
outsl
aam
dec
out
pusha
lea
xchg
icebp
add
gs
mov
or
mov
pop
mov
lods
dec
pop
dec
mov
push
popf
mov
jmp
ds
xchg
mov
shrb
cmp
lahf
lea
lds
push
xchg
push
mov
dec
cmp
mov
fmulp
in
ja
push
popf
adc
lds
popa
enter
jno
daa
or
bound
mov
pushl
mull
inc
mov
jbe
inc
enter
popa
adc
cmp
fildll
xlat
lahf
lret
hlt
data16
adc
cli
xchg
sbb
dec
std
xchg
int3
xchg
rorl
adc
mov
jp
jb
dec
je
fisttps
iret
mov
mov
inc
call
popa
pop
ret
add
test
mov
cmpsl
pop
fldt
mov
add
inc
add
std
jb
inc
sub
in
jle
call
xor
sbb
mov
jno,pn
fidivl
cmpl
fnsave
imul
cmp
pop
jns
or
mov
stos
xor
sbb
dec
jne
jg
cmp
cli
sbb
repnz
cwtl
pop
insw
scas
cmp
push
mov
fs
sub
push
pusha
and
fbld
xor
push
sarb
mov
repnz
je
mov
dec
scas
pop
adc
push
out
xchg
mov
xlat
sub
cld
jo
mov
mov
pop
jbe
shrl
pusha
jmp
mov
js
or
int3
mov
cld
add
mov
mov
mov
pop
push
imul
cld
pop
and
push
fs
insb
add
xchg
add
addr16
mov
scas
add
shrb
xor
std
inc
cmp
outsb
dec
push
mov
insb
mov
xchg
clc
dec
clc
outsb
xor
scas
adc
pop
cmpsb
cmc
adc
and
mov
jl
lea
and
cmpsb
xor
adc
sahf
jg
mov
popf
mov
mov
and
mov
arpl
aaa
add
fmul
mov
out
dec
fwait
je
push
adc
cs
movsb
and
fdivrs
push
dec
push
sub
pop
pop
push
cli
jbe
mov
movb
movsb
testb
push
stos
mov
jae
imul
xor
stos
jg
fcmovne
fcoms
mov
aaa
xchg
push
lods
pusha
push
arpl
aam
sub
lret
out
std
insb
out
push
adc
fiadds
jnp
adc
lds
je
hlt
cmpl
std
stos
or
sbb
repnz
out
mov
jge
mov
dec
mov
leave
mov
cltd
pop
ret
jo
adc
dec
lcall
dec
mov
call
mov
iret
aad
int
gs
fadds
mov
jmp
or
push
scas
insb
add
add
cmp
dec
mov
xor
je
incl
pushf
out
or
pop
bound
imul
inc
adc
pop
hlt
scas
xchg
push
jo
inc
sbb
in
sbb
out
mov
lods
fistl
or
jno
inc
xchg
pusha
jle
inc
in
jp
or
out
clc
cwtl
push
rcrb
ljmp
mov
push
jo
call
mov
pop
add
and
push
movsl
or
mov
push
pop
in
shll
cmpsl
inc
sti
lods
dec
jb
cmp
rclb
mov
xchg
scas
jle
adc
outsl
mov
xchg
in
add
enter
mov
inc
addr16
iret
xchg
dec
jb
mov
xchg
call
and
loop
and
push
xor
aam
aad
ficoml
orb
scas
movsl
subl
dec
jne
icebp
mov
dec
inc
mov
sbb
or
mov
xchg
sbb
mov
sub
mov
xlat
clc
xchg
into
xchg
mov
pop
cmp
stos
test
das
jle
jb
idiv
arpl
std
mov
mov
pop
call
jns
add
inc
cmp
jnp
leave
mov
addr16
test
sub
test
popf
inc
stc
or
pushf
add
addr16
andl
dec
aad
dec
mull
cmc
sub
ret
iret
dec
addl
xor
cmc
ds
add
pop
jne
inc
out
aad
int
add
mov
shlb
icebp
pusha
or
inc
stc
add
pop
aas
cwtl
cli
mov
mov
enter
push
out
aad
lret
arpl
in
int3
aad
or
jmp
inc
sbb
test
or
fisubrs
xor
sbb
es
push
scas
dec
dec
out
scas
mov
std
ds
stos
mov
das
jb
cmp
clc
mov
jae
loopne
syscall
dec
test
or
flds
or
arpl
cmp
jo
into
daa
sahf
fs
and
cmp
scas
fidivs
test
cmp
out
sbb
sbb
jp
das
push
jl
call
mov
fstps
flds
sub
popf
mov
ret
push
xor
cmpsl
xor
lods
es
cmpsb
nop
jo
sub
add
mov
int3
je
and
clc
inc
jae
and
and
mov
xchg
fisubs
fildll
cmp
xor
das
jnp
cltd
xchg
add
rorb
push
lock
push
dec
pop
std
pop
mov
pop
out
loop
ret
jae
mov
outsb
aad
stos
push
xlat
pop
jae
test
fxch
sub
mov
fnsave
shrb
sub
mov
fs
adcb
mov
sub
dec
adc
daa
cltd
cmc
jns
push
sbb
sahf
jno
std
nop
or
aad
cmp
inc
ficoms
mov
fdivrs
inc
les
imul
sbb
das
stos
sub
mov
xor
mov
xor
idiv
dec
cltd
push
mov
cmp
hlt
ja
push
cmpsb
mov
lcall
push
push
out
sbb
mov
adc
jle
js
mov
stos
ficomps
fisttps
cwtl
clc
mov
lea
xor
std
lahf
fucom
pushf
xor
cmp
loopne
mov
test
lock
jno
push
cli
setge
std
sarl
add
iret
arpl
lods
test
mov
imul
or
out
adc
and
ja
xchg
pop
ffreep
sub
mov
dec
cmp
aas
inc
cmp
enter
jecxz
cmc
loope
sbb
and
jbe
mov
out
scas
and
popf
pushf
lds
lahf
outsb
ret
ljmp
popf
push
mov
lods
sub
and
rcrl
fldcw
xor
les
xchg
xor
mov
sbb
push
xor
loope
dec
sub
movsb
insl
lods
pop
cltd
or
mov
cmpl
in
jl,pt
fcomi
adc
xor
popa
pop
out
jg
movsb
jge
pop
inc
xchg
insb
mov
adc
ja
push
test
insl
iret
xlat
jns
cmc
out
mov
inc
xchg
adc
xchg
popl
clc
jae
adc
mov
lahf
sub
sbb
inc
int3
xchg
lcall
in
sahf
call
movsl
push
clc
cltd
xchg
hlt
or
adcb
and
jne
inc
push
and
xchg
push
test
sub
aaa
cld
and
pop
pop
pop
mov
dec
mov
data16
adc
pop
arpl
push
or
mov
inc
or
mov
jbe
outsl
stos
mov
adc
cld
and
shrl
push
dec
movsb
in
jne
aad
ss
push
movsb
jb
sbb
add
mov
repz
jbe
inc
xchg
add
daa
mov
test
cli
xchg
inc
add
or
fistps
mov
and
cmc
enter
addr16
pushf
inc
enter
fcoms
dec
enter
push
test
in
cmp
mov
mov
test
js
clc
cmpsl
inc
pop
or
and
out
sbb
sbb
leave
ss
jae
lods
add
push
jle
sub
mov
incl
mov
shrb
add
mov
jge
aas
jo
or
mov
add
fwait
sbb
std
enter
mov
call
and
cmp
sar
pushf
popa
adcl
and
ret
bnd
lods
loope
in
adc
popa
xor
add
and
jb
sub
scas
repz
jg
sub
arpl
mov
mov
inc
add
sbb
push
loope
add
jne
insb
imul
and
mov
out
cwtl
jo
push
shl
ds
int
arpl
xorl
call
xchg
pop
daa
imul
inc
mov
cld
jno
icebp
shl
push
lret
jg
in
frstor
adc
lret
xor
lea
adc
sub
lea
rcll
mov
mov
bound
gs
jae
cmc
hlt
popf
mov
gs
dec
mov
xchg
cltd
lock
mov
orb
dec
lds
test
mov
dec
cmp
ffreep
and
jl
and
into
xchg
inc
inc
iret
cmp
test
fimull
cmpsl
xor
jbe
cld
jo
ret
pop
cmpsb
in
cmp
int3
mov
std
aaa
xchg
je
pushf
mov
les
xchg
push
and
mov
or
or
data16
sysret
lods
ds
or
mov
popa
sub
lret
das
xchg
adc
and
test
js
cmc
jb
scas
xor
pop
push
sub
cmp
mov
rcrl
fimuls
mov
cmpb
fldt
loopne
inc
sarb
or
push
iret
imul
dec
scas
pusha
loope
andl
or
dec
add
pop
adc
sub
sub
lock
mov
lea
or
incl
dec
sub
push
lea
cmp
push
cwtl
leave
mov
push
cmp
scas
pop
in
lods
sbb
pop
insl
mov
arpl
es
stc
sbb
mov
std
loop
cmpb
enter
int
inc
pop
jge
ja
incb
pop
jl
addl
adc
loopne
pop
jns
cmpsb
sbb
xchg
xor
dec
cmpsb
adc
xlat
push
sbb
popa
rorl
and
pop
ret
fnstcw
add
inc
xorb
mov
in
mov
inc
sahf
and
mov
push
aas
mov
lods
fildll
and
jle
mov
test
call
adc
cwtl
loopne
sbb
cmpsb
add
xchg
inc
xor
xchg
dec
mov
out
sbb
xchg
lock
xor
sbb
xor
dec
jle
jmp
push
insb
pop
adc
cs
sahf
xlat
jl
push
push
aaa
cli
mov
pushf
jae
push
fsubrl
insl
or
add
stc
mov
adc
fidivl
xor
fs
and
sub
mov
mov
shrl
mov
adc
or
ror
leave
scas
mov
push
mov
or
loopne
jne
and
push
xor
jecxz
leave
add
test
hlt
cli
cmp
fdivrs
mov
mov
cmp
add
stos
push
imul
adc
mov
loop
fmuls
loopne
lcall
xchg
mov
add
lcall
xchg
fistps
outsb
push
aad
leave
arpl
cs
hlt
xchg
push
push
and
cmp
outsb
lds
cltd
mov
adc
divb
cs
notl
xor
sub
mov
xor
add
mov
adc
inc
sub
lods
loope
sub
adc
mov
jecxz
xchg
push
mov
cwtl
popa
in
inc
loope
cli
mov
sbb
hlt
ret
sub
cs
leave
rcrl
pop
xor
and
ds
cmp
inc
data16
jno
xor
imul
gs
sub
jbe
pop
and
pushf
cmc
inc
mov
clc
imull
scas
push
ss
lods
dec
adc
pusha
pop
in
push
lret
pop
cmc
and
addl
and
test
mov
fwait
test
mov
mov
in
mov
xchg
pop
mov
cmp
jae
insl
push
jo
xchg
ret
add
scas
push
xchg
fdivrl
sub
adc
cs
aad
insl
xlat
jae
out
loop
imul
dec
ret
jo
fmull
in
xchg
aas
stos
es
ret
pop
pop
push
aas
ret
enter
pop
and
jmp
pop
sub
mov
xor
adc
js
shlb
dec
sarl
add
mov
lahf
push
imul
sahf
out
mov
and
pop
gs
shrl
push
ja
sbb
fcoml
mov
push
cli
cmp
jge
cmp
cmp
xor
adc
xorb
push
lea
sub
aaa
inc
daa
orl
cmpsb
add
cmp
jl
xchg
pop
cwtl
jecxz
push
frstor
inc
mov
loopne
enter
loop
icebp
ds
xchg
push
jl
push
sbb
add
pop
aam
push
push
cmc
sub
pop
popf
ret
fldz
movsb
sub
push
adc
mov
add
xchg
or
lahf
stc
lods
mov
xchg
arpl
add
gs
push
stos
test
ss
sub
mov
and
loopne
xchg
xchg
mov
lods
and
inc
adc
movsb
sbb
iret
ret
imul
jbe
aaa
leave
sub
adc
int3
out
dec
loop
dec
inc
in
lock
rcrb
mov
xchg
push
mov
popl
pop
std
sub
test
dec
lock
jno
sbb
enter
insl
add
cmp
fstpl
loopne
flds
xorb
lret
and
and
ret
repnz
nop
jmp
pop
cmp
mov
scas
scas
lods
dec
xchg
fdivl
movsb
mov
cmpsl
jmp
dec
in
imul
cmp
int3
adc
rcrl
push
rcll
cmp
cmp
call
sbb
stos
ss
xor
aas
test
iret
cmp
nop
popf
or
pop
mov
mov
ficompl
cmp
inc
push
fcomip
ficomps
lods
sbb
pop
outsl
inc
out
inc
mov
fildl
inc
lret
and
cmpsb
dec
lcall
scas
add
pop
fwait
jle
sbb
or
mov
clc
or
inc
shll
jg
add
dec
je
adc
outsb
and
add
gs
mov
nop
sbb
xor
cmc
lds
mov
jno
call
fwait
dec
push
cmp
packuswb
or
or
inc
mov
rcrb
fwait
mov
frstor
les
or
and
pop
xchg
addr16
push
push
lret
or
scas
stos
fs
orb
and
inc
jecxz
ficoms
out
ljmp
or
stos
sbb
cmp
jae
ret
fmuls
jo
cs
mov
inc
xchg
rcrl
mov
mov
or
out
sbb
fstl
lds
in
in
sbb
cld
aad
std
push
shll
adc
jg
mov
dec
pusha
les
je
int
jmp
clc
push
dec
ds
lret
orb
mov
fst
push
mov
jle
push
push
mov
xor
scas
push
and
cmpsl
xchg
sbb
fistps
inc
xchg
cld
cmp
jp
cmc
outsb
imul
jnp
repnz
outsl
in
lea
cmpsl
cmpl
pop
stos
and
in
xchg
and
sub
lock
loope
xchg
adcw
mov
cmpsb
inc
xchg
jno
popa
notb
out
xor
and
shll
rcll
push
loope
xchg
adcw
mov
cmpsb
inc
xchg
jno
popa
notb
out
xor
and
aad
rcll
push
loopne
xchg
adcw
mov
cmpsb
inc
xchg
jno
popa
notb
loop
xor
and
rcll
shll
push
in
xchg
add
xor
pop
dec
scas
pop
jmp
jno
push
sbbl
inc
push
jne
gs
dec
ja
adc
mov
notl
cmpsl
mov
xor
push
sbb
ja
pop
add
dec
aad
out
not
jmp
xchg
mov
movsl
mov
inc
mov
out
mov
pop
sub
and
hlt
popf
xchg
adcb
leave
stc
les
xor
push
jne
or
adc
add
mov
stos
cs
xchg
adc
fcomip
cmp
repnz
test
and
sbb
mov
pop
out
inc
add
or
inc
xchg
cmp
xchg
lds
mov
rclb
add
and
movsb
add
leave
aam
lds
jno
sbb
push
test
lods
movsl
mov
xor
push
aaa
clc
cli
jmp
dec
scas
pop
cmc
cmp
cmc
sbb
xchg
dec
cmpsl
test
fidivl
aaa
ljmp
jb
roll
les
inc
adc
addr16
pop
jge
xor
pop
xlat
and
neg
xchg
fidivrs
aaa
push
add
ja
bound
inc
popa
and
nop
addb
sar
and
xor
add
jl
pusha
pop
rorb
mov
xchg
scas
cmc
mov
xchg
in
jmp
in
cmp
sub
adc
adc
add
aaa
aad
out
notl
cmpsl
movsl
mov
inc
inc
push
jne
gs
pop
add
aaa
aad
out
notl
cmpsl
movsl
mov
inc
jecxz
mov
movsl
mov
jae
clc
pop
test
jne
cs
mov
mov
imul
adc
and
daa
std
aas
insb
sub
add
cmp
std
loope
inc
cmp
mov
test
notb
xchg
mov
push
pop
movsb
aaa
sub
mov
pop
push
es
scas
or
mov
cwtl
lods
imul
mov
rorb
push
cmp
out
jb
int3
stos
xchg
or
orl
jo
out
fs
and
xor
push
mov
movsl
xchg
fidivrl
lods
xchg
and
push
pop
pop
gs
cmp
inc
adc
mov
add
sbbl
dec
mov
jmp
xor
into
and
jbe
and
into
arpl
adc
mov
cmp
stos
mov
push
aas
mov
stos
hlt
xor
xlat
shlb
jp
aad
jae
jnp
gs
stos
mov
xchg
movsl
insl
adc
inc
stc
xchg
jle
lods
push
sbb
out
cmp
icebp
in
fmul
dec
mov
sub
js
adc
ja
cmp
mov
push
setnp
pop
or
mov
popa
addl
xchg
mov
dec
inc
insb
jns
jp
imul
mov
stos
fisubs
subb
and
or
xchg
or
xchg
mov
inc
sahf
add
mov
iret
outsb
outsb
gs
cmp
idivl
shrl
jecxz
mov
test
inc
and
jp
add
sbb
mov
sti
scas
cvttps2pi
mov
add
add
inc
add
repz
andb
jge
aas
push
fisttpll
dec
rcll
addr16
push
pop
popa
bound
jbe
int3
add
dec
xor
daa
test
sbb
out
pop
mov
test
jmp
aad
aaa
sbb
rorl
sub
in
es
mov
aaa
and
gs
push
jbe
movsl
pop
insl
cmc
psubsw
lret
mov
pop
xchg
push
sti
pop
xor
aad
outsb
fsubp
and
lock
mov
sbb
in
repnz
mov
dec
cmp
int
dec
mov
mov
addr16
inc
dec
pop
add
sub
popf
dec
mov
test
mov
fwait
stc
add
mov
jo
roll
sub
or
add
or
mov
ficoml
lcall
push
jp
lret
fnstsw
fs
test
push
test
stos
inc
shlb
cmp
jmp
mov
outsb
addr16
movsl
gs
les
fwait
lds
sub
in
addr16
mov
lret
popa
mov
movsb
std
pop
sbb
daa
nop
inc
and
decl
mov
add
dec
outsb
arpl
ret
xor
dec
es
sbb
or
test
push
cmpsb
test
mov
aam
imul
test
or
adc
rorl
jmp
sbb
add
xor
xchg
or
cld
mov
or
fwait
andb
ljmp
pop
xchg
loope
iret
lea
dec
lds
push
mov
mov
shll
or
or
mov
pop
add
std
mov
jecxz
or
adc
test
std
arpl
jle,pt
xchg
fidivl
sahf
adc
cmp
lret
and
out
xor
mov
dec
jmp
loope
sub
movsl
sub
mov
mov
int3
bound
repnz
decb
out
xor
hlt
jns
pop
popf
shll
das
insb
cmpsl
pop
es
lock
adc
aam
dec
sbb
dec
mov
scas
cmp
inc
xchg
nop
mov
jl
jp
test
jle
jne
mov
mov
popf
mov
outsl
mov
xchg
push
xchg
xchg
clc
adc
inc
repnz
mov
mov
les
fwait
js
je
daa
das
gs
push
faddl
push
push
or
jbe
ljmp
sub
pop
dec
imul
sbb
faddl
shl
dec
insb
cmp
aad
xchg
add
insl
push
shrl
cmp
outsl
sbb
sub
cld
add
adc
fistl
dec
aad
pop
mov
or
dec
xchg
outsb
xchg
mov
out
mov
clc
mov
fstl
push
shlb
cld
push
mov
and
lods
inc
xor
sahf
aam
sub
jno
push
jmp
in
jbe
mov
hlt
loop
fidivrl
mov
movsb
imul
insb
inc
js
and
ret
in
or
fs
or
aas
cwtl
or
dec
xor
mov
jg
loopne
dec
js
add
mov
out
outsl
pop
fisttps
sub
in
repz
lret
aam
pop
pop
sub
sbb
sbb
out
adc
dec
sub
xchg
or
aas
add
jbe
adc
iret
xor
gs
mov
adc
fists
pop
dec
movb
sbb
dec
xchg
sub
lret
dec
xchg
pop
mov
or
sub
pop
xor
pop
xchg
push
cwtl
sarb
fldcw
dec
nop
dec
push
ja
push
sti
sbb
mov
fisttps
lahf
test
push
mov
mov
push
pop
fnstsw
push
cmpsl
and
pop
mov
fisttps
pop
rcll
add
xor
push
iret
add
stos
lock
or
inc
xor
push
xchg
fwait
pop
pop
sub
dec
sub
jg
push
adc
mov
jno
daa
push
lds
lods
xor
and
ss
pop
or
clc
iret
xor
mov
add
insl
jno
jo
sbb
in
jbe
mov
outsl
leave
loop
xchg
or
sub
jnp
je
jge
add
pusha
lahf
scas
loope
mov
addr16
fistpll
mov
jbe
in
mov
pop
jne
ret
inc
movsb
cs
out
mov
mov
scas
pop
ds
leave
and
mov
rcrl
cli
jno
mov
repnz
xor
mov
push
rorl
jnp
inc
xchg
jg
pushf
cmp
and
lcall
or
inc
cmp
add
push
push
pop
adc
push
mov
adc
mov
outsb
cwtl
mov
lock
mov
inc
sub
stos
dec
cmp
sub
cltd
ret
push
int3
push
xor
in
inc
pop
stc
repnz
mov
cmp
ljmp
sbb
icebp
mov
popa
lahf
dec
out
inc
and
push
mov
movsb
ret
jmp
imul
add
cwtl
push
imul
aad
or
call
xor
push
xor
outsb
cmp
ds
cmc
dec
gs
cmp
dec
es
nop
cmpsl
clc
push
stos
cld
test
test
sbbb
enter
mov
dec
leave
mov
xor
leave
dec
insb
gs
adc
xor
scas
push
or
vmulpd
imul
cmp
mov
add
jns
cmp
out
into
dec
test
subb
je
loopne
in
xchg
mov
aam
adc
cmp
xor
mov
or
or
push
push
adc
and
lret
imul
sti
stc
fistl
pop
out
outsb
jmp
mov
add
sbb
sub
je
lods
cmp
sbb
cwtl
add
push
mov
daa
dec
xchg
sbb
jb
adcb
iret
cli
lret
std
in
out
scas
imul
lods
mov
loopne
insl
out
jmp
cmpsl
push
scas
pmulhuw
pop
push
sti
mov
jne
mov
sub
fs
ljmp
stos
ret
aas
mov
sahf
inc
mov
stos
push
or
mov
shr
jecxz
dec
adc
mov
icebp
call
shrb
loope
and
and
cmc
cmp
loopne
call
aam
jg
adc
jnp
lret
mov
sbbb
jl
sub
dec
mov
mov
inc
shlb
popf
or
std
push
insb
jg
xor
out
dec
bound
fwait
repnz
mov
fmuls
adc
sub
xchg
pop
fld1
mov
out
movsl
mov
pop
ret
jnp
fs
icebp
sti
add
xchg
insb
int3
sbb
xlat
mov
push
sub
test
notb
adc
test
mov
xorb
std
pop
sub
xlat
xchg
dec
lea
add
push
cmpl
mov
movsl
or
outsl
adc
or
gs
and
aam
xor
stc
int
bound
sub
aaa
sub
popf
filds
data16
hlt
pop
arpl
pop
repnz
shl
push
mov
ljmp
adc
mov
sbb
or
in
pop
lds
xchg
mov
fs
xchg
xor
shl
add
out
adc
push
std
sub
cli
and
scas
pop
adc
orb
pop
lds
cltd
lahf
sub
push
dec
mov
cmp
mov
out
cmpb
mov
sub
and
incl
xchg
sub
test
es
mov
mov
xor
push
push
xor
xchg
mov
push
push
xor
fwait
rolb
add
push
xchg
push
aam
pushf
ljmp
and
cmp
jb
cmc
adc
mov
adc
add
sahf
int
xlat
xor
icebp
dec
jo
xchg
push
cld
dec
jns
cmp
or
fcmovbe
out
loop
sbb
jno
adc
sahf
xchg
and
test
push
push
mov
shll
lret
xchg
bnd
ljmp
scas
out
sahf
sbb
mov
dec
xchg
adc
in
cwtl
sbb
and
pop
cmp
xchg
es
jnp
inc
push
mov
ja
jbe
sub
sbb
jns
outsl
inc
in
push
js
ja
lods
or
and
nop
aaa
mov
les
sarl
in
fldenv
stc
into
mov
pop
gs
std
xor
fnclex
cmpsb
mov
in
add
mov
clc
loopne
mov
ja
jb
mov
jno
inc
mov
mov
shrb
dec
stos
cli
fwait
sahf
fnstcw
sbb
jl
add
and
or
mov
cmpsb
sar
popf
pushf
and
push
and
sbb
push
les
xchg
mov
inc
loope
testl
sahf
cmp
dec
int3
pop
inc
bound
fisubs
sbb
pop
mov
xchg
call
push
lods
xchg
es
cmpsb
test
es
push
sub
or
inc
insl
xchg
cmpsl
add
hlt
dec
cltd
jecxz
fsubrl
ror
aad
or
adc
mov
adc
ljmp
mov
cld
in
mov
leave
pop
dec
cli
push
loope
mov
mov
adc
aaa
icebp
sub
mov
test
and
rcl
cmp
pop
xchg
into
data16
adc
rolb
loope
fldenv
js
mov
push
loope
cmp
out
push
mov
cld
sahf
mov
cmc
mov
inc
pop
sbb
les
xor
scas
pop
fs
or
xchg
mov
test
push
jae
push
push
cmpsl
sbb
seto
inc
call
adc
mov
and
mov
push
inc
or
lods
sbb
push
pop
fists
mov
loope
daa
lret
inc
cmp
mov
lock
jg
sbb
pop
adc
fwait
add
loop
mov
xor
sub
stos
cmp
add
cmp
inc
or
into
push
jo
sbb
pop
outsb
stc
nop
push
ds
add
cmpsb
out
xor
cmp
xchg
in
cs
dec
mov
pop
or
and
insl
or
cmc
lock
mov
dec
lcall
clc
addr16
bnd
clc
or
addl
jge
inc
int3
dec
xchg
push
or
sub
lret
lods
insb
aaa
dec
adc
pop
push
lods
jno
add
cmp
xchg
or
clc
pop
cmpsl
sbb
and
push
roll
xor
xchg
mov
outsl
pop
aaa
test
inc
test
out
std
cmp
add
xor
mov
loop
in
movsl
aas
test
dec
xchg
cmp
iret
lock
mov
int
cmpsb
dec
add
ds
punpcklwd
mov
mov
or
fs
push
adc
and
ret
add
push
xchg
addr16
dec
in
push
sub
inc
mov
sbbl
push
xlat
xchg
sahf
in
mov
je
add
jle
adc
imull
mov
push
sbb
fs
insb
lahf
push
das
dec
and
sbb
fbstp
push
aam
cmpsl
shrl
push
add
push
sbb
scas
xchg
test
mov
jo
sub
out
movsl
bound
movsb
idivl
fldcw
loop
add
inc
icebp
lcall
ss
xor
mov
mov
orl
jne
push
pop
movl
stos
in
dec
in
cwtl
psrlq
xor
xchg
adc
in
clc
xchg
outsb
fcomp
xchg
sbbl
push
lea
xor
sbb
sbb
jb
mov
pop
mov
test
out
and
mov
jge
pop
ljmp
mov
jp
sbb
mov
cmp
push
jns
ljmp
addr16
insl
sub
fmull
aaa
es
jmp
jns
or
push
out
insl
lahf
lret
adc
adc
out
scas
leave
or
notl
jmp
popa
shlb
lahf
xchg
insb
arpl
push
and
push
jge
mov
daa
or
sbb
pusha
adc
mov
test
mov
pop
xlat
adc
in
add
mov
fstpl
aaa
sub
or
stos
in
mov
jmp
dec
add
stos
pusha
pop
xor
insl
xlat
lods
add
cs
mov
adc
rorl
int3
in
mov
lods
icebp
mov
ficomps
push
mov
jecxz
insb
stos
js
outsl
shl
or
lahf
jb
enter
mov
out
out
cs
out
mov
xchg
stc
jno
xor
xchg
jmp
dec
dec
arpl
lcall
mov
jp
daa
xchg
mov
pop
pop
clc
lcall
mov
sbb
mov
lods
sbb
ret
out
test
cmp
xlat
add
rcr
jmp
dec
bound
mov
xchg
jno
out
loop
rorl
in
ret
and
xchg
out
pop
sbb
adc
inc
les
pop
sti
xchg
fptan
mov
cmp
out
js
fwait
inc
popa
inc
out
daa
push
jb
idivl
sbb
inc
fadds
fcoms
mov
xchg
pop
sahf
clc
lahf
sti
test
inc
arpl
dec
mov
std
pusha
inc
inc
filds
cmp
insl
shll
jecxz
cld
xor
adc
cmp
push
mov
movsl
and
repnz
inc
inc
das
or
jle
add
call
or
adc
inc
push
and
movsl
push
mov
imull
xchg
xor
icebp
or
bound
idiv
sub
mov
xchg
mov
pop
mov
call
or
add
aaa
mov
mov
mov
mov
sub
test
inc
call
aas
cmp
xchg
fsubrl
lahf
out
fidivl
sub
out
inc
popa
mov
lahf
push
push
mov
dec
and
push
adc
int
xchg
lea
inc
sub
in
dec
cmp
fld
xchg
and
jl
xchg
push
loope
cmp
inc
mov
sbb
dec
mov
xor
pop
cmpsb
jge
ret
xor
add
pcmpeqb
scas
stos
xor
in
cli
dec
mov
sbb
cmpsb
or
pop
cltd
push
xchg
push
or
adc
into
stos
cmp
jno
adc
stos
out
mov
sbb
sbb
pop
aad
dec
stc
shrb
xchg
mov
or
sbbl
jno
and
leave
sub
mov
leave
xchg
and
int
sub
mov
iret
dec
mov
in
xorb
in
and
xchg
enter
loope
mov
cmp
je
jmp
popl
rcll
jle
inc
and
or
fstp
cmp
mov
mov
cmp
mov
or
mov
shr
mov
cmpsb
mov
push
in
aaa
pop
or
cld
call
mov
scas
test
mov
xlat
ss
fs
sahf
leave
mov
cmp
cli
sarl
sahf
jo
xor
pop
xlat
or
inc
xchg
mov
push
clc
movsl
mov
cltd
or
movsl
ja
hlt
jg
pop
xchg
mov
out
sub
xlat
ja
cltd
pushl
sahf
xchg
push
inc
pop
cmp
incb
test
shll
jb
cmp
std
jg
jmp
cli
xor
test
inc
inc
mov
sbb
ss
aaa
lock
cwtl
test
cmp
iret
fimuls
cltd
es
lods
add
jmp
jno
xor
lahf
mov
fiaddl
fcmovu
dec
push
push
push
cmp
aad
nop
push
in
lahf
push
js
pop
dec
xor
and
push
jae
inc
xchg
scas
sbb
adc
std
inc
out
xchg
call
jo
mov
push
adc
sbb
cmpsb
imul
adc
adc
bnd
push
mov
sub
adc
fsubp
jmp
repnz
fisubs
mov
outsl
lods
lea
into
es
inc
nop
mov
adc
ficoms
cmp
xor
cmc
pop
xchg
mov
or
test
xor
inc
xor
add
push
mov
pusha
sub
xchg
aad
mov
push
adc
adc
jns
mov
pop
inc
leave
ljmp
push
push
push
xor
jnp
rol
push
loop
mov
aas
sbb
pop
cmc
inc
push
pop
ret
faddl
sbb
sbb
jae
sbb
xchg
ss
out
notb
sub
iret
xor
testl
jmp
mov
lds
pop
or
fbstp
shrl
mov
mov
in
rcrl
mov
cmpsl
jecxz
shrb
cli
pop
adc
mov
pop
outsl
inc
sbb
les
push
fistpll
jle
out
xor
dec
hlt
inc
cmp
xor
mov
cs
cmc
sub
and
lret
xchg
xchg
xlat
ljmp
inc
pop
outsl
pop
push
lcall
cltd
in
push
mov
cmc
rclb
inc
lods
lds
int
ja
into
cltd
fildl
popa
dec
cmp
out
and
loope
pop
sub
cmc
adc
xchg
jne
lds
fildl
mov
gs
shlb
ljmp
push
dec
test
jl
xchg
es
cmpsl
lret
pop
mov
push
adcb
imul
sub
xor
cmp
jg
mov
movsb
sbb
push
dec
sub
fldt
lods
sti
xor
clc
lret
xlat
lods
call
mov
mov
pop
mov
inc
xlat
push
mov
lods
ror
ss
in
cs
ss
mov
pop
lret
sub
add
jnp
fiadds
add
sbb
xorb
mov
adc
push
data16
jno
ret
lea
in
movb
das
inc
pop
jnp
int
push
mov
inc
and
dec
mov
out
jb
aaa
jbe
insl
mov
adc
scas
in
test
div
mov
mov
movsl
inc
lock
cmp
in
stos
cmpsb
ljmp
or
insl
addb
imul
mov
popa
int
shll
mov
in
insb
mov
xor
adc
aaa
leave
test
push
or
sarb
xor
es
lret
jne
insb
push
sub
sub
and
mov
pop
add
cmp
or
sbb
or
xchg
movsl
rolb
ret
dec
ret
xor
dec
ret
mov
loop
test
cmpsl
xor
cmp
sbb
or
sbb
nop
dec
sub
pop
insl
push
adc
mov
imul
dec
ja
adc
jns
inc
lret
add
call
out
in
push
or
ret
cltd
movsb
dec
cmp
fxch
push
xor
ja
pop
add
aaa
aad
out
notl
cmpsl
movsl
mov
inc
inc
push
jne
gs
pop
add
aaa
aad
out
notl
cmpsl
movsl
mov
inc
jne
adc
pop
add
aaa
aad
out
notl
cmpsl
dec
mov
inc
sbb
addr16
ja
pop
adc
aaa
aad
cmp
out
and
or
dec
frstor
int
std
push
in
push
xchg
addr16
sbb
jge
insl
xchg
sbb
sub
ss
push
in
push
popf
lea
inc
lods
xor
dec
mov
xchg
sbb
sub
ss
push
in
push
popf
lea
inc
lods
push
pop
cmpsb
outsb
xchg
or
mov
inc
mov
std
push
test
cltd
push
inc
es
xchg
and
push
nop
outsl
xchg
xor
xor
add
popf
jbe
sti
inc
into
inc
fsub
mov
dec
cmpl
dec
testb
and
cmpsl
notb
sub
ja
repnz
jecxz
pop
mov
sub
sbb
xchg
mov
stos
ljmp
addr16
in
lods
mov
pop
rorb
xchg
adc
or
mov
dec
leave
js
adc
in
lods
cltd
inc
pop
es
pop
pop
inc
mov
dec
mov
out
scas
sub
and
mov
push
std
sbb
mov
mov
repz
imul
das
sub
es
std
push
in
push
popf
lea
inc
lods
push
pop
cmpsb
dec
mov
xchg
sbb
sub
dec
mov
and
add
and
and
aad
out
xchg
dec
mov
mov
mov
dec
mov
jne
and
call
les
loope
ljmp
cmpb
mov
push
lea
inc
lods
push
pop
cmpsb
dec
mov
xchg
sbb
sub
ss
push
in
push
popf
lea
inc
lods
push
pop
cmpsb
dec
mov
xchg
sbb
sub
push
pusha
imul
mov
mov
leave
test
scas
stc
mov
and
cld
pop
mov
les
cmc
adc
or
insb
and
sbb
lock
jns
add
pop
mov
dec
insb
inc
xchg
mov
cmp
sbb
out
push
frstor
lods
and
sti
adc
cwtl
and
pop
mov
sub
dec
sub
push
pop
dec
daa
shll
sbb
pop
and
jnp
call
fcompl
nop
dec
ffree
and
or
jnp
cli
rorb
or
dec
mov
sti
pusha
dec
and
or
loop
notb
jbe
fs
stos
or
in
lock
fadds
notb
dec
into
mov
sub
jle
idivl
xchg
pop
jnp
dec
aaa
xor
xor
insb
mov
inc
outsb
xchg
sub
testl
push
cltd
jecxz
bound
jno
aam
push
mov
lods
ret
es
movsl
and
xor
lcall
dec
out
cld
mov
fidivrs
xor
imul
lcall
sub
subb
jae
cmpsb
out
dec
mov
lcall
in
mov
sarl
mov
cld
add
stos
add
insl
adcl
cmc
mov
pushf
bound
xchg
das
repnz
push
mov
pop
and
ret
fsubrl
inc
inc
cmp
mov
lcall
or
sub
and
das
dec
and
sub
mov
mov
xchg
cwtl
mov
ja
je
sarl
nop
jg
dec
cmp
outsl
pop
and
and
test
push
sbb
mov
out
and
mov
pop
pop
and
rorb
std
movl
in
mov
pop
pop
push
outsb
jne
mov
pop
inc
outsb
xchg
jecxz
sbbl
xchg
xorl
test
stos
mov
or
mov
mov
cmc
inc
andl
ljmp
jbe
test
es
push
jmp
adc
insl
addr16
add
sbb
aas
xchg
jo
pop
adc
pop
in
popf
or
test
mov
fcoml
das
sbb
ret
hlt
adc
hlt
or
add
lret
ret
sub
ds
push
add
cli
mov
pusha
arpl
div
xchg
or
subb
notb
cmc
sarb
iret
and
mov
sti
hlt
test
xorb
jp
pop
aas
push
jns
cwtl
test
or
add
lods
inc
dec
sub
negl
cwtl
aam
addr16
repnz
dec
jg
adc
mov
pushf
sub
jge
pop
push
fstpt
sarb
xchg
sbb
fbstp
stos
inc
test
xlat
das
sbb
ror
lea
xchg
ljmp
incl
test
sbb
xor
outsl
xchg
mov
fiaddl
fcoms
add
push
push
jge
jb
imulb
jnp
dec
jno
test
cmpsb
jle
bound
imul
pop
push
lods
int3
add
popfw
and
lds
push
dec
das
pop
in
xchg
pop
xor
adc
in
repnz
lock
dec
pop
xchg
stc
test
pop
inc
push
or
add
jo
rol
sub
sub
cmc
xor
fnstenv
into
psrld
adc
lret
std
mov
stos
mov
pop
insb
test
popa
repnz
aad
or
mov
fldcw
push
test
lret
jbe
movsb
cli
jne
push
inc
add
fisubl
repz
shr
pop
pop
mulb
andb
outsb
mov
cmpsb
sarl
addb
je
gs
in
cmp
fdivr
inc
andb
icebp
mov
pop
cmp
push
push
das
cmp
movsl
divl
out
add
pop
mov
outsb
add
or
addr16
sub
in
xchg
cmp
add
cmp
pop
lret
push
mov
cld
lea
insb
hlt
cmc
push
call
cmpsb
repnz
jb
test
xor
pop
pop
mov
push
shrb
nop
pop
pop
push
xor
jecxz
icebp
popf
jb
jo
cltd
inc
or
hlt
dec
je
cwtl
mov
jno
push
cmpl
mov
add
outsb
xor
xchg
cmpsl
iret
or
add
popa
cmp
roll
adc
and
dec
jno
iret
pop
rolb
or
scas
loopne
pop
push
mov
es
push
dec
imul
xchg
mov
push
pushf
push
fadds
dec
xchg
lret
inc
or
aaa
add
loope
int
pop
inc
sbb
js
or
imul
rcrb
pop
mov
out
sub
inc
sbb
cmp
jns
sbb
adc
sahf
adc
adc
mov
jmp
data16
dec
dec
xor
pusha
or
xchg
push
nop
push
jno
pop
movsb
aam
and
add
cwtl
fdivs
push
fmulp
enter
imulb
std
inc
and
fisttpll
xor
stos
movsl
outsb
adc
clc
or
hlt
hlt
mov
mov
ret
mov
sahf
clc
je
cmp
out
ret
fldt
test
dec
push
cmp
pop
xchg
xrelease
inc
lcall
fsubs
xlat
mov
adc
sbb
fisubs
push
ret
cmp
rorl
push
insb
add
ss
sarb
mov
push
jae
ja
es
roll
or
sbb
divb
add
test
dec
or
stos
xchg
adc
or
pop
loopne
add
jecxz
iret
dec
jg
dec
lahf
repnz
scas
mov
scas
clc
fidivl
rcrl
fnstenv
pop
xchg
add
rolb
mov
fs
add
daa
cmpsb
lea
repz
imul
or
test
push
fdivr
push
out
test
int3
mov
addr16
scas
mov
pop
fsts
fcmovne
sub
loopne
stos
aad
push
in
cs
pop
push
dec
cli
iret
jle
outsl
into
pop
roll
and
rolb
je
pop
push
pop
aad
push
cmp
sub
add
mov
hlt
repnz
testl
int3
jp
clc
jno
out
inc
popf
test
test
fwait
xor
inc
insb
in
out
xchg
fdivrl
push
ds
inc
pop
ss
sub
in
mov
pop
insb
in
push
mov
dec
mov
mov
loopne
lret
pop
test
cs
fsubr
cli
sbb
inc
inc
mov
call
popa
xchg
pop
testl
xor
fstpl
pop
sub
jo
jge
sbb
or
in
push
scas
cs
jno
or
fnsave
dec
bound
fisttpll
cli
nop
imull
sahf
cmp
mov
xchg
jecxz
inc
sub
je
aas
mov
rcl
jnp
mov
mov
mov
pop
cmp
adc
xor
xor
ja
iret
scas
push
pusha
ret
dec
push
andl
sti
add
xor
andl
lret
pop
ror
push
sbb
sub
ret
arpl
pop
inc
xchg
mov
xchg
jecxz
mov
das
dec
xchg
mov
push
in
xchg
je
shlb
mov
mov
sbb
pop
lret
and
sub
dec
clc
or
int3
ja
lret
repz
and
push
es
ja
cmp
out
and
jbe
mov
adc
fildll
inc
jb
push
enter
push
and
pop
adcl
adc
xor
mov
mov
xchg
add
jmp
jge
sar
add
and
mov
imul
mov
mov
fidivrl
out
out
or
test
sahf
push
xchg
cmp
push
xor
or
mov
sub
popf
scas
imul
cs
imul
jb
iret
xchg
ret
jg
jp
dec
shrl
sti
mov
aaa
cltd
xor
jne
sbb
lret
jne
and
dec
inc
xchg
sti
cmp
movsb
or
inc
and
out
push
out
sub
pop
imul
aam
outsb
push
inc
cltd
jae
popa
stc
lahf
mov
push
dec
in
dec
stos
roll
push
test
cmp
adc
mov
mov
push
push
jno
dec
inc
and
aas
rcl
fmull
stos
xchg
mov
pop
leave
test
or
jmp
cli
jmp
ret
faddp
repz
jmp
stc
lcall
xor
mov
adc
adc
iret
std
mov
jo
fisttps
mov
clc
mov
dec
sbb
sbb
out
mov
pop
xchg
xchg
test
test
xchg
cmp
xchg
adc
sti
or
or
out
and
daa
imul
je
mov
adc
cmc
ljmp
fidivrl
mov
test
and
jbe
sarl
dec
sub
int
pop
mull
mov
lcall
pop
cwtl
add
xorb
push
adc
popf
loope
idivl
shl
jb
cmp
jmp
scas
mov
xor
mov
sbb
test
insb
sti
inc
cmp
je
push
pop
adc
shll
fistpll
pusha
dec
out
shlb
mov
sbb
jno
aas
in
pop
inc
push
inc
int3
sahf
lahf
in
rcr
loop
sub
pop
lock
mov
cmp
lock
fildl
mov
scas
mov
pop
rorl
fisubrl
mov
addr16
fwait
out
inc
sarb
sub
fstpl
xorb
pop
jmp
push
push
push
cmp
shl
or
jg
add
jp
or
lds
dec
jp
gs
inc
ja
std
cmp
push
dec
lds
mov
loop
lods
insb
inc
je
adc
scas
dec
mov
nop
addl
mov
add
push
gs
xchg
mov
add
negb
mov
push
shlb
pop
xor
pop
js
mov
push
iret
push
add
fwait
jg
cmp
mov
aad
sub
dec
mov
andl
and
sub
les
je
add
movntq
cmpb
aas
fsts
clc
or
or
or
mov
lahf
in
mov
mov
or
jmp
xchg
loopne
dec
jo
imul
and
mov
inc
inc
lgs
in
pushf
push
mov
int3
adc
and
repnz
int3
jp
mov
popf
xchg
dec
mov
dec
aam
pop
out
mov
aad
mov
enter
js
inc
idivl
pop
daa
xor
or
stos
lret
or
xchg
fdivr
jp
pusha
and
bound
sarl
movsl
ds
sbb
pop
outsb
cwtl
push
test
cli
jno
mov
push
jg
inc
repz
pop
fbld
ret
inc
fwait
push
pop
testb
inc
fistps
cmpsl
fidivrs
nop
push
mov
int3
insb
icebp
mov
sub
in
push
mov
outsl
inc
or
mov
or
mov
pop
push
es
movsb
jb
push
aam
call
push
int3
sub
add
addl
aaa
loopne
rcrb
addb
mov
lds
out
adc
dec
mov
jns
pop
add
out
add
add
stos
push
test
clc
and
movsb
dec
pop
push
mov
lods
hlt
outsb
aam
lret
xor
inc
call
sub
sub
lock
je
leave
and
and
pop
mov
push
mov
jle
cli
dec
mov
setge
push
adc
outsl
xor
mov
inc
pop
push
enter
xchg
push
xchg
cmp
cwtl
ret
mov
es
repnz
call
cs
sub
mov
xchg
fwait
and
push
jnp
imul
mov
call
mov
inc
cmp
cmp
aaa
fwait
out
shll
lret
and
add
mov
mov
mov
fs
inc
and
xchg
cmp
js
push
aad
mov
mov
mov
popa
mov
jg
pop
or
pop
adc
mov
lcall
mov
test
lods
xlat
inc
fsub
cli
lock
shl
xor
sub
clc
lods
jns
movsb
enter
inc
fdivr
jge
add
fs
mov
lret
call
dec
cmpl
jle
adcb
iret
sub
insl
mov
lcall
dec
pop
push
jae
xchg
mov
jg
fsubrp
mov
in
clc
movsl
xor
jge
xchg
add
push
cmp
out
add
push
push
cli
jle
lret
aaa
sbb
cmp
push
ret
cmc
ss
adc
pushf
add
push
pusha
lcall
xor
xorl
neg
sbb
inc
or
cmpsb
mov
adc
jae
fwait
inc
js
xor
pusha
out
movsl
push
divb
cmc
add
cmc
pextrw
insl
fdivl
or
outsb
jle
jo
andl
popl
jno
add
xchg
cmp
push
add
or
lret
sahf
dec
mov
std
negl
mov
into
into
hlt
mov
stos
sbb
call
sub
jne
jnp
mov
or
push
pushf
mov
in
in
mov
cmp
nop
xor
cmpsl
inc
pushf
pop
jns
inc
mov
xchg
jne
bound
popf
subl
cmp
or
test
mov
loop
dec
daa
outsb
stos
lods
jb
push
data16
cmp
sub
cmp
negb
repz
adc
cld
lods
add
out
das
or
jecxz
mov
cld
xlat
push
out
jno
bound
and
scas
mov
orb
xor
sti
or
lods
addr16
mov
ja
clc
orps
pop
js
sub
mov
pop
xor
xchg
cmp
imul
popf
es
fwait
pusha
dec
jecxz
clc
scas
jo
stos
out
iret
and
cmp
jnp
push
stc
bound
xchg
mov
and
dec
pop
mov
sti
dec
adc
push
cmp
scas
movsl
imul
sbb
jge
pop
push
inc
xor
cwtl
in
enter
jo
enter
cli
loopne
add
shlb
scas
fstpl
repz
pushf
sbb
sub
push
cli
jecxz
mov
cmpsl
add
mov
scas
shlb
icebp
add
pusha
into
and
cmp
jae
jmp
popa
push
jns
or
punpcklwd
les
adc
and
out
jl
out
add
dec
cmpsb
push
aaa
out
leave
sti
lret
fcomps
mov
out
popf
inc
sbb
dec
gs
lretw
popa
neg
add
pop
push
bnd
mov
push
mov
fidivrs
lret
mov
sbb
ljmp
add
dec
or
cltd
and
ficoml
inc
rcl
lds
xor
inc
pop
sub
add
cltd
pop
mov
in
cltd
es
push
adc
scas
cmp
or
fdivrs
xchg
xor
sub
aaa
mov
lock
stos
outsb
ret
aad
out
push
in
gs
movsl
push
xchg
inc
outsb
loope
dec
jle
es
add
shll
jg
in
sbb
es
std
ret
dec
dec
enter
cmpsl
aad
ret
insl
inc
xchg
inc
cmp
pop
dec
sub
imul
jno
jl
adcb
sbb
fists
sub
adc
add
stc
mov
push
adc
in
das
xchg
xchg
mov
jae
push
mov
xor
mov
and
idivb
sbb
add
mov
pusha
scas
fcomps
jge
pop
or
add
call
cmpsl
push
fld1
movsb
dec
sbb
hlt
cmpsb
pop
xchg
or
push
mov
mov
xlat
in
xchg
pop
jnp
lods
inc
insl
sbb
in
inc
mov
shll
sub
lret
pop
push
cs
out
pop
mov
lock
push
mov
inc
jp
sbb
sahf
scas
mov
pop
int3
mov
fnstenv
cmp
gs
jmp
mov
sbb
pop
cmp
mov
or
cmc
xchg
icebp
inc
or
push
jge
xchg
cmc
cmpsl
jae
xchg
pop
push
arpl
shll
or
call
lea
mov
out
movsb
inc
mov
call
imul
mov
xchg
adc
popw
fwait
and
add
cmp
mov
movsl
inc
xor
push
jle
outsb
sub
and
mov
int3
sbb
push
jae
mov
dec
aaa
sahf
xchg
std
jb,pn
sub
dec
adc
pop
sbb
mov
js
mov
jno
pop
add
arpl
ret
adc
and
clc
jns
fstp
and
int3
xor
and
push
pop
xchg
xchg
mov
mov
pop
pop
stc
jl
adc
push
bnd
test
inc
cmp
sub
orb
enter
pop
cmpsl
sahf
xchg
jb
movsl
lret
mov
shll
and
xchg
imul
and
mov
jnp
lods
push
fwait
sub
test
mov
dec
in
nop
loop
xchg
cmpsl
pop
and
decl
inc
lods
cmpsb
je
and
mov
xor
mov
rcll
mov
mov
ret
push
js
cs
loopne
fimuls
jno
arpl
fdivrs
mov
or
aam
dec
cmpsb
pop
dec
cmp
loope
jmp
or
nop
inc
data16
nop
push
ljmp
push
ds
cmp
jl
pop
test
stos
lods
xchg
int3
icebp
in
mov
push
cltd
clc
int3
mov
lret
sub
loope
push
push
cmp
jge
cmp
xchg
xchg
fisubrl
repnz
pop
jns
push
enter
adc
icebp
and
sub
shll
push
stc
push
adc
outsl
mov
cli
sarb
jg
ss
pop
aaa
mov
popa
push
jp
leave
scas
dec
mov
add
cmpsl
mov
andb
imul
push
or
aad
or
std
xor
lock
jp
add
enter
and
sub
push
push
mov
pop
mov
mov
clc
mov
popf
rorb
imul
mov
dec
mov
sbb
xlat
cld
xor
jle
icebp
aaa
test
and
cltd
jge
repz
jmp
mov
insb
fistpl
and
mov
xchg
add
shll
icebp
and
xlat
xabort
mov
loop
mov
ss
mov
shl
stc
stc
rcl
add
lods
mov
in
cs
shrb
mov
pushf
lods
xor
xchg
loop
sub
sysenter
loopne
fisubs
ljmp
mov
movsb
aam
cmp
xlat
or
mull
push
aaa
repnz
inc
pusha
dec
ds
sub
mov
mov
clc
lds
fcompl
sub
int
cmp
sbb
and
adc
and
mov
pop
rorl
mov
aad
pop
inc
pop
repz
loop
outsl
mov
jecxz
mov
xchg
jmp
std
jo
shll
jge
xchg
enter
popa
or
fucomip
imul
ret
sub
mov
inc
jle
fiadds
pop
xchg
stos
lret
in
xchg
and
jns
ffree
sbb
out
jmp
out
dec
xchg
inc
cltd
or
fldcw
cmp
mov
mov
or
loopne
test
push
or
jns
dec
insb
mov
call
test
bound
mov
das
pop
fnstenv
loop
stc
bound
mov
inc
xchg
aaa
xchg
cmp
daa
mov
pop
andl
sarl
insb
and
sub
dec
dec
js
mov
loope
cmp
orb
in
jecxz
je
pop
xor
aad
jle
add
mov
cli
cmpsl
adc
sbb
sbb
and
add
mov
inc
fdivs
adc
sub
rorl
adcl
or
scas
mov
outsb
outsw
adc
daa
xlat
jae
and
js
inc
repnz
push
je
pop
aaa
mov
mov
adc
pop
adc
cmpsl
scas
push
cmp
test
and
push
test
movsb
loope
fsubs
mov
stos
dec
and
jno
xor
inc
aaa
and
xchg
outsl
fnstenv
fisubl
gs
sahf
dec
cmp
inc
sub
jb
in
xchg
jbe
mov
int
int
cli
shrl
pop
int
loopne
mov
xor
shlb
adc
rcrl
loopne
adc
xchg
cmp
insb
ja
out
xor
lods
ss
push
popf
lea
inc
lods
push
pop
cmpsb
dec
mov
xchg
sbb
sub
ss
push
in
push
popf
lea
inc
lods
push
pop
cmpsb
dec
mov
xchg
sbb
sub
ss
push
in
push
popf
data16
inc
lods
push
pop
cmpsb
dec
mov
xchg
out
idivb
sub
ss
push
in
push
popf
lea
inc
sub
sbb
xchg
push
test
lds
aad
mov
push
lods
fcmovu
lret
popf
ret
int
mov
push
pop
insb
dec
dec
aas
cmp
rcrl
or
cld
ljmp
mov
mov
je
dec
dec
cmp
dec
sub
sbb
or
pop
push
pop
inc
or
stos
mov
in
xchg
jb
jp
push
dec
cmp
sub
sbb
dec
insl
outsb
jns
mov
mov
push
sahf
pop
mov
imull
push
push
shll
jecxz
inc
idiv
mov
xor
test
push
jae
adcl
mov
xchg
xchg
xchg
cli
mov
test
xor
push
out
insb
mov
cmp
jl
pop
mov
shr
enter
cld
xchg
in
cmpsl
fcomps
pushf
fwait
pop
mov
outsl
stc
cmp
sub
mov
jg
pop
adc
pop
ret
pop
cmp
movsl
mov
sub
dec
dec
jg
jg
ljmp
repz
pop
pop
in
jae
subb
cmp
mov
mov
lock
jo
int3
fisubrl
out
lods
lcall
les
add
sbb
ds
pushf
sbbl
ffreep
mov
jmp
sbb
sub
stc
sub
push
jnp
inc
outsb
push
bound
shr
lret
div
stc
mov
aas
push
es
jae
sub
jns
jg
mov
mov
lcall
insb
pop
pop
dec
dec
cmp
sub
sbb
or
cld
ljmp
mov
mov
pop
dec
dec
cmp
sub
sbb
or
cld
cs
neg
lds
cmp
fcmovnu
xlat
das
mov
ret
lret
std
push
push
movsb
in
lods
fistpll
jb
mov
data16
aas
push
mov
mov
into
in
arpl
sbb
adc
jbe
les
mov
mov
out
xlat
sbb
and
mov
je
jbe
adc
mov
pop
mov
cwtl
or
cli
sbb
pop
mov
jmp
xor
add
sbb
cmp
mov
cmp
ja
xlat
loopne
aaa
in
popa
out
fnstsw
and
rcrl
inc
outsb
xlat
fcomi
std
adc
int
push
inc
jl
and
iret
daa
sbb
adc
scas
loop
mov
cmpsl
dec
call
outsb
jle
loope
jle
ja
frstor
out
pop
inc
sub
push
xchg
dec
stc
orb
je
mov
ret
xlat
mulb
sbb
jmp
mov
arpl
popf
push
xor
pop
fld
popa
xor
mov
add
std
or
cmp
dec
add
in
movsb
lahf
fiaddl
pushf
cld
cmp
mov
lods
outsl
out
sti
fists
test
sti
and
pop
jo
xor
repz
dec
out
dec
xchg
ss
mov
xchg
sub
adc
ret
push
leave
mov
pop
mov
dec
scas
mov
mov
int
jne
mov
mov
sub
aad
ret
cmpsl
sbb
rep
js
dec
data16
lahf
or
xor
push
add
shrb
lea
loop
adc
xchg
shlb
add
adc
xchg
repz
std
jb
data16
ds
adc
dec
cli
imul
xchg
mov
lds
mov
sub
fs
mov
and
pop
mov
cmp
stos
mov
fcomp
pop
fwait
lds
popa
pop
xor
dec
mov
shrb
push
repnz
push
dec
ret
pusha
fbstp
movl
insb
data16
clc
dec
rol
test
insb
cltd
cmp
xor
jnp
mov
fdivr
jg
xor
lods
and
aaa
int3
notl
int3
aam
std
jne
xchg
cmp
nop
ret
sbb
enter
or
adc
sbb
arpl
xchg
and
sbb
inc
or
adc
inc
jecxz
daa
adc
pop
inc
mov
mov
dec
bnd
dec
mov
lock
data16
or
jg
call
push
in
pshufw
fisttpl
jno
fwait
divl
nop
sbb
inc
jle
aaa
jecxz
mov
xchg
dec
mov
pop
outsl
cmc
and
mov
into
xchg
or
aaa
imul
jno
or
loopne
push
rorb
inc
mov
jp
stos
lock
call
mov
mov
push
cmp
push
insb
jns
out
frstor
pop
adc
or
xchg
movsb
imul
pop
out
xchg
cli
das
aas
icebp
cltd
loopne
sbbb
popf
in
adc
insb
sbb
pop
sbb
xchg
pushf
mov
push
loope
fs
mov
popa
sub
mov
lret
xor
sbb
jb
aas
aam
push
or
dec
test
cmpsb
lods
mov
mov
sub
xor
stos
mov
add
stos
jb
cmpsl
cmp
imul
icebp
xlat
push
sbb
mov
mov
xor
xchg
into
push
fs
stos
push
sub
add
bound
js
test
mov
into
loopne
jg
out
pop
nop
sub
jo
mov
pop
imul
add
out
test
or
mov
jns
adc
stos
cmp
outsl
rcl
xchg
jp
sti
int3
add
ret
fdivrl
or
mov
fst
xchg
push
int
pop
adc
ror
jae
mov
gs
xchg
sub
adc
cmp
je
add
scas
sub
dec
adc
cmpsl
jmp
mov
dec
sbb
cmp
adc
bound
rorb
cmp
xchg
pop
into
jo
and
xor
fs
test
ret
aaa
add
iret
repz
std
cmp
xor
icebp
out
push
idivb
push
mov
jae
sub
fbld
xchg
xchg
jns
icebp
std
push
rolb
xor
adc
inc
xchg
fisubrs
cwtl
out
pushf
add
xor
adc
iret
inc
or
mov
cmc
nop
inc
sub
adc
add
xorl
pop
dec
gs
pop
and
add
cmpsb
dec
mov
testl
ljmp
and
repz
cmpsl
inc
movsl
mov
sbb
mov
mov
sub
push
lahf
mov
push
push
cmp
and
fmull
out
andl
xor
cmpsb
inc
in
aaa
decb
and
repz
repnz
loope
jmp
or
push
add
stc
daa
mov
and
fpatan
or
loop
xchg
daa
pop
in
add
mov
add
enter
mov
dec
add
insl
push
push
add
test
mov
scas
or
mov
out
push
jae
mov
jle
xchg
je
enter
and
or
out
ss
jl
jo
aaa
cmp
mov
stos
cmp
int
ss
sbb
or
push
into
lods
push
mov
adc
dec
cmp
aaa
mulb
sbb
jno
jnp
inc
sub
imul
sbb
lcall
dec
xchg
sahf
inc
cmp
call
arpl
test
push
mov
inc
mov
aas
mov
and
pop
in
movl
cmp
mov
repnz
add
shl
pop
clc
outsb
xchg
sbb
and
scas
jl
xchg
repz
sbb
pop
das
cltd
jl
addb
sub
lds
jle
in
lahf
in
ret
idivl
daa
outsl
adc
je
aad
xchg
push
dec
push
repnz
inc
scas
std
aas
add
push
dec
and
sbb
fsubl
xor
scas
fidivs
mov
push
mov
insb
into
pushf
or
in
xchg
into
inc
outsl
test
stc
pop
call
lahf
mov
mov
fimuls
addr16
int3
in
pop
inc
mov
mov
xchg
roll
mov
xchg
push
ja
lcall
sub
popa
and
lahf
mov
ret
pop
and
mov
mov
fcomi
xor
add
mov
cwtl
pop
add
dec
cld
cmp
lea
test
sbb
mov
push
add
std
xchg
add
jecxz
imul
mov
add
inc
lock
fdivrp
mov
aam
insl
jno
mov
sbb
xchg
mov
movsl
orl
sbb
add
imul
xor
test
fs
xchg
pop
sub
dec
sub
bound
addr16
gs
jl
out
nop
cmc
push
sbb
push
pop
icebp
lods
and
std
cmpsb
mov
in
dec
adc
xchg
movsw
cmp
scas
mov
out
add
pop
sub
das
sets
push
dec
adc
jg
or
aaa
pushl
inc
push
add
or
imul
sbb
les
inc
and
dec
fisubs
shl
enter
or
insb
jns
cmp
and
mov
loop
std
into
xor
jmp
in
cmpsb
pusha
xor
enter
ljmp
jecxz
rorl
and
rcll
or
jns
mov
add
push
sub
inc
ljmp
adc
adc
mov
insl
lcall
into
call
cmp
sub
xchg
sbb
stos
es
sti
repz
into
aad
jno
cmpsb
sbb
lods
mov
push
jp
push
hlt
mov
rcl
mov
scas
stos
push
xchg
sbb
mov
push
inc
sbb
loop
lea
sbb
jne
adc
mov
adc
xchg
lcall
ficoms
out
loop
rclb
adc
fs
dec
mov
test
pop
outsl
mov
mov
int
into
in
sbb
popf
leave
inc
push
dec
aas
and
cmp
cwtl
dec
insb
imul
dec
out
cmp
lret
cltd
sbb
lea
ss
mov
jmp
pop
je
imul
mov
repnz
insb
and
inc
pop
fistpll
ljmp
insl
fdivrl
or
movsl
jns
push
fidivrs
cmp
jne
jbe
fimuls
ds
xor
push
add
jecxz
mov
sub
adc
xor
cmp
nop
cmp
xchg
iret
call
ret
sub
push
bound
sbb
or
jnp
mov
fcompl
mov
mov
jg
sarb
mov
or
lcall
stc
inc
mov
sub
cmpsl
and
data16
fdivrl
mov
stc
push
pop
and
imul
fisttpll
cmpsl
and
outsb
fimuls
cmp
push
lret
jne,pt
popf
and
mov
int3
hlt
mov
repz
xor
sbb
push
sbbl
and
popa
fstps
xor
and
jl
xor
out
sub
pop
pop
xchg
in
pop
or
mov
ficoml
mov
push
jb
sbb
xor
jge
lret
cmpsb
mov
fs
test
rorb
xchg
or
push
push
mov
pusha
setns
ret
adc
add
mov
push
mov
rcrb
xchg
hlt
jae
dec
cmc
mov
cmp
or
fdivrl
cmp
pushf
rcll
fwait
mov
push
ret
cld
movsl
jno
or
dec
push
repnz
lahf
test
out
inc
fwait
sti
sub
ret
xlat
adc
outsl
xchg
or
into
scas
stos
movsb
mov
repz
lcall
rcrl
add
fwait
cmp
mov
popa
xchg
cmp
pop
stos
jo
jae,pt
fst
es
xchg
lahf
sbbl
jmp
inc
push
sbb
cld
cld
out
loopne
push
xchg
test
add
sbb
jnp
inc
adc
mov
sub
hlt
pop
cli
stos
aaa
enter
inc
cmp
pop
movsl
sbb
or
daa
jno
ds
xor
sub
dec
loop
notl
leave
pop
jle
int
inc
js
add
iret
sbb
xchg
xor
pop
pushf
lods
stos
adc
pop
lods
out
mov
inc
mov
xor
in
sti
sti
xchg
mov
test
decb
mov
clc
inc
imul
pop
lods
lret
hlt
test
lcall
insl
mov
leave
out
inc
or
iret
push
sbb
enter
ljmp
or
out
push
insl
push
jl
cmp
addb
jl
jmp
movsl
pop
adc
jp
cmc
pop
pop
idivb
jnp
je
sbb
cmc
int
cmc
fcmovbe
xchg
or
mov
inc
or
dec
sarb
mov
stos
inc
clc
das
sbb
inc
xchg
fs
dec
add
scas
push
adc
shlb
or
pushf
jp
and
sub
pusha
insl
pop
inc
sub
cmpsl
fisubrs
dec
cmp
or
fimull
loope
inc
xor
mov
clc
lret
sbb
imul
xchg
rolb
pushf
jae
repz
mov
add
mov
rol
mov
fdivr
lea
cwtl
aam
and
push
add
inc
jne
inc
xor
jp
mov
sbb
lret
into
lods
cmpsl
inc
mov
les
leave
push
cmp
xchg
je
test
pop
iret
or
dec
xorl
and
and
cmp
dec
sbb
jno
inc
adc
xchg
dec
pop
and
lret
dec
adc
and
dec
or
insb
insb
mov
sbb
or
or
dec
test
enter
das
xchg
mov
push
xlat
sub
xchg
flds
lahf
sbb
fisubs
xchg
jo
adc
and
or
loopne
sbb
clc
or
inc
repnz
adc
daa
ret
jp
dec
imulb
addr16
stos
adc
in
or
rorb
adc
nop
fcmovbe
jp
addl
out
rolb
scas
leave
xor
xor
jb
inc
mov
push
mov
stc
jmp
and
push
pop
fs
sti
jne
shlb
in
mov
es
xchg
mov
scas
inc
push
in
add
sbb
dec
repz
jle
cld
cmpb
outsl
adc
loop
sbb
ret
add
sarb
fildl
cmp
dec
jno
icebp
mov
repnz
push
mov
or
mov
adc
mov
stos
jecxz
cwtl
ja
ret
insb
mov
pushf
pushf
adc
add
fidivrl
bound
push
aas
mov
inc
inc
outsl
pop
movsb
stos
xchg
jbe
or
lea
dec
in
mov
jno
jmp
sub
push
xchg
xchg
jns
mov
jno
sti
sub
test
repz
lds
jne
and
jne
imul
mov
clc
sbb
pusha
push
dec
or
dec
pop
ja
lock
das
xchg
vfnmaddss
lods
jp
jmp
or
dec
xchg
dec
nop
out
jge
clc
xchg
dec
sbb
rolb
pop
fcmovnb
jae
test
sahf
add
jp
mov
adc
jns
pop
inc
into
icebp
pop
or
mov
jbe
and
outsl
dec
out
xchg
popf
lods
stc
inc
cmp
cs
lds
sti
loop
outsl
scas
mov
fs
adc
xor
xchg
les
ss
xchg
lret
icebp
fsub
sub
push
lret
mov
xchg
popf
jb
dec
sbb
sbb
daa
test
subb
adc
dec
inc
ret
adc
loopne
out
or
scas
xorb
test
cwtl
xor
mov
inc
aaa
mov
or
ret
int
push
out
fadds
inc
imul
or
sbb
in
ret
test
insb
pop
nop
add
mov
insl
jno
stos
mov
jmp
pop
jae
pusha
loopne
sub
fisubrs
xchg
mov
scas
into
push
dec
ss
xor
pop
xchg
sub
fbld
xchg
sbb
sub
in
mov
xor
rcrl
orl
jle
faddl
jmp
sbb
xchg
inc
sti
shll
sub
es
outsl
andl
jmp
xchg
sub
cmp
mov
and
pushf
xor
add
sbb
add
xlat
repnz
insb
les
imulb
pop
scas
sbb
cmp
dec
cmp
ljmp
aas
test
mov
lds
add
aaa
sbb
stos
mov
mov
cmp
push
push
add
pusha
lock
pop
xchg
scas
mov
pop
adc
or
daa
inc
cmp
sbb
xor
test
inc
adcb
stos
or
jmp
inc
pop
scas
cmc
mov
lods
mov
and
scas
movsb
iret
mov
in
cmp
or
push
ja
aaa
dec
xchg
fistl
test
filds
fiaddl
mov
imull
sbb
adc
pop
test
add
inc
mov
pop
dec
lahf
insl
outsl
mov
push
push
lea
inc
loopne
mov
push
arpl
inc
mov
push
xor
cld
xor
push
in
mov
inc
mov
mov
or
rol
sbb
shll
pop
or
js
test
and
pop
loop
andb
adc
xchg
sbb
rep
push
xor
sbb
cmp
scas
stc
sbb
ljmp
xchg
or
outsb
xlat
aas
pop
jae
cs
pop
aam
sub
inc
pop
rclb
mov
leave
std
xor
jbe
mov
or
xor
cmp
out
push
cmp
fwait
andb
pop
xor
test
xchg
loope
fimull
fs
pop
fistpll
cltd
call
sbbb
outsb
movsb
hlt
adc
jno
xchg
iret
dec
iret
xor
lret
popa
xchg
ja
pop
mov
stc
pop
into
dec
cli
mov
xor
push
or
sbb
mov
mov
mov
or
rcl
cmp
js
jbe
sub
pop
dec
cmovle
sub
fwait
mov
pop
jno
cs
cmc
outsl
or
das
pop
xchg
mov
jp
xor
rcll
sub
pop
mov
repz
icebp
push
jmp
insl
rolb
bound
jne
sub
addr16
icebp
aaa
mov
out
dec
push
dec
lods
push
out
xchg
sti
add
mov
pop
popl
pop
idivb
js
fwait
lret
testb
jne
out
jns
or
mov
inc
sub
in
test
out
cmp
mov
dec
mov
dec
jle
push
lds
adcb
add
daa
adc
pop
insb
adc
push
rorb
fsubrl
popa
in
mov
outsl
inc
loope
push
inc
mov
inc
insl
inc
jmp
insl
scas
push
push
daa
inc
inc
add
or
dec
shlb
adc
pop
dec
xor
or
xor
and
xchg
ret
add
xchg
fcmovbe
out
pop
cwtl
pop
mov
mov
test
fwait
sub
fldl
adc
and
aad
leave
sub
jns
dec
and
jmp
in
add
movsb
pop
lds
lahf
jbe
and
dec
add
jb
mov
jecxz
cmp
mov
dec
fs
insl
cwtl
dec
into
cmp
into
bound
and
fdivp
mov
in
add
loopne
push
icebp
ret
out
ss
les
int3
xor
inc
in
fistpll
iret
mov
and
push
aas
mov
lods
mov
cmp
into
frndint
xchg
xchg
xchg
outsl
pop
das
dec
and
shll
call
push
dec
mov
jle
out
clc
dec
jo
add
lds
daa
std
shl
fidivs
cmpsl
and
int
and
jle
stc
loope
test
cltd
out
mov
xchg
xchg
add
sbb
aaa
mov
add
push
push
xlat
jl
ss
ret
jb
jmp
daa
stos
xchg
inc
aam
add
xchg
inc
sbb
in
pop
sbb
dec
lret
cmp
js
sbb
mov
and
or
cmpsl
push
in
pop
cltd
mov
int3
push
jmp
sahf
insl
mov
in
fsubrs
push
inc
rol
mov
pusha
jno
xadd
dec
jne
mov
roll
out
lods
or
ds
les
or
xchg
mov
cmp
ss
ret
add
and
dec
jl
jb
cltd
adc
jmp
and
ds
inc
xchg
shll
orl
cli
out
ret
sti
fwait
out
cld
xor
test
push
add
mov
dec
lret
rcrb
dec
jne
xchg
test
sti
push
and
popf
js
repz
or
adc
xor
in
xor
sti
mov
ror
mov
mov
mov
adc
xchg
adc
cmpsl
mov
mov
movsl
inc
cs
and
les
jae
call
and
movsl
inc
pushf
pop
push
pop
xor
jg
sub
data16
scas
jbe
imull
or
mov
inc
sarb
cmp
xor
lods
in
stc
xor
insl
cmp
inc
jecxz
stos
sbb
jle
aad
test
jl
fbstp
mov
and
call
xor
or
and
jg
mov
xlat
andl
insb
xor
fnstsw
bound
add
pop
test
mov
pushf
add
mov
xchg
aaa
jno
loop
cmc
stos
outsl
inc
out
daa
ret
mov
jae
int
mov
and
cmp
jne
in
sub
loopne
shrb
lock
out
lahf
mov
loope
out
cltd
sbb
or
nop
cmp
xor
sub
aaa
inc
sbb
cld
mov
sarl
adc
add
mov
cmp
rorb
add
vmread
adc
adc
shll
ficomps
testl
and
mov
sub
insl
int3
dec
xchg
aad
ljmp
int3
jp
xchg
jle
pop
xor
loope,pn
jnp
or
jle
inc
sub
in
and
in
or
inc
jnp
and
jle
jnp
inc
aas
filds
sub
jmp
stc
int
call
xchg
dec
mov
xchg
jbe
dec
pop
or
and
push
push
mov
xor
jae
mov
mov
and
add
daa
fcomi
mov
mov
rcrl
ret
cmp
lcall
ljmp
mov
pushf
mov
pop
dec
dec
cmp
sub
sbb
or
cld
ljmp
mov
mov
pop
dec
dec
cmp
sub
sbb
or
clc
jmp
enter
lcall
push
cmp
xor
adc
or
loop
mov
sbb
dec
jp
xchg
lock
dec
cmp
mov
je
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
push
call
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
pushl
push
push
call
add
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
hlt
add
insb
hlt
add
nop
hlt
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pmaddwd
add
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
aam
add
int3
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
add
xor
add
cmp
add
push
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
enter
call
testb
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
testb
insb
testb
je
add
jl
add
test
add
mov
add
xchg
testb
cmpsl
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
testb
fdiv
add
in
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
