add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
rclb
jecxz
xchg
push
loopne
and
arpl
adc
iret
xor
pusha
mov
ret
sbbb
adc
lock
add
xor
push
and
inc
xor
pusha
imul
mov
lods
call
pusha
and
dec
push
push
js
jno
add
mov
aad
xchg
sbb
unpcklps
jo
sub
out
and
add
aaa
daa
sbb
nop
aas
or
lock
xor
ucomiss
movsl
out
aaa
mulb
fucomip
xor
xor
xchg
xchg
ret
ret
nop
mov
pop
arpl
add
inc
stc
sti
jo
and
push
dec
psllq
rorb
gs
lock
test
add
xor
into
jg
dec
jle
outsl
adc
mov
clc
sub
jae
es
push
push
add
and
in
outsl
pop
hlt
repnz
sbb
gs
icebp
xchg
mov
js
push
iret
xchg
fistps
jb
data16
jecxz
ja
sti
shlb
fstps
add
dec
or
push
popa
mov
aad
in
mov
push
jg
add
xor
inc
popa
xor
inc
or
stc
cmpsb
jmp
cli
shl
mov
not
xor
adc
push
sbb
push
insb
inc
pop
pop
bound
nop
scas
adcb
add
lock
add
arpl
adc
inc
xor
pusha
rcll
jecxz
xchg
rolb
loopne
adc
jae
arpl
adc
inc
xor
pusha
rcll
and
cmp
and
pop
inc
xor
cmp
out
sub
jns
dec
pop
mov
in
popf
pushf
push
jae
ret
sub
cmp
mov
int
iret
xchg
xchg
dec
add
push
fxch
cmp
aaa
pop
sub
ja
jb
add
mov
mov
xor
pop
lret
loop
add
das
incl
cmp
jne
daa
pusha
fnsave
pop
data16
outsl
mov
ljmp
and
test
inc
jb
shrl
imul
loopne
jns
cmp
pusha
neg
add
mov
daa
imul
loope
fiadds
gs
inc
mov
sub
into
xchg
jae
stos
shrb
arpl
shl
jno
shll
mov
mov
jecxz
pop
cli
lods
aaa
into
pop
or
mov
fwait
rorl
repz
mov
fcoml
jno
jmp
shll
sbb
dec
outsb
outsb
jecxz
enter
sub
and
data16
in
xor
ja
arpl
xor
call
cmpsb
je
rclb
test
cmpsl
shll
mov
pop
jle
icebp
ss
xorb
icebp
negl
and
stos
xorb
push
add
test
mov
fnstenv
stc
and
jmp
sbb
sub
enter
fmull
mov
shrb
sbb
dec
pop
aad
push
jle
mov
jge
out
inc
push
cmpsb
inc
fnsave
dec
mov
repnz
js
xchg
int3
repnz
or
or
clc
popa
xchg
stos
rorb
and
jl
mov
out
daa
test
cmpl
fstl
pusha
mov
mov
enter
arpl
les
mov
loop
mov
add
shrl
scas
add
pop
dec
imul
sarb
fisubrl
stos
in
dec
inc
pop
outsl
bound
mov
in
aad
out
in
andb
lods
pop
hlt
jle
popa
cmp
cmc
dec
stos
popa
jle
pop
cli
mov
sub
mov
adc
jmp
inc
out
sbb
std
xor
inc
push
imul
into
out
bound
sub
mov
popa
test
lods
out
lods
aas
inc
fnsave
aad
je
cmp
cwtl
cmp
pop
in
sub
sub
in
xchg
mov
jne
mov
shlb
dec
in
orl
add
arpl
sbb
mov
xor
add
fadds
clc
xchg
sub
or
sbb
es
push
or
cmp
xchg
inc
mov
push
push
call
mov
cmp
ret
in
das
cs
std
xor
in
adc
lods
mov
and
xor
mov
add
pushf
mov
mov
mull
xlat
xchg
fists
std
fcmove
pop
gs
repz
pop
sbb
cwtl
cmc
xlat
pop
push
shlb
add
push
jbe
push
mov
add
push
dec
or
repnz
dec
xchg
ss
subl
insb
into
mov
sbb
lods
clc
call
jbe
adc
jns
ja
dec
mov
scas
dec
js
xchg
iret
insb
imull
fs
sbb
insl
outsb
adc
cmpsb
sbb
ret
test
cld
cmpb
or
jge
cmp
inc
fadds
cmpsl
push
dec
sahf
test
sbb
sbb
movsb
std
pop
xchg
sbb
push
loopne
cmp
add
jmp
inc
es
pop
pop
daa
enter
int3
mov
loop
and
ret
shll
fbstp
sub
sbb
cli
mov
cmpb
outsb
inc
or
jp
xor
repz
sbb
sub
mov
fstpt
push
adc
or
push
pop
inc
lods
mov
cwtl
add
pop
frstor
sub
bound
xor
cli
popa
call
push
cmpsb
mov
and
repz
cmp
xchg
dec
xchg
iret
dec
lcall
push
push
mov
and
adc
arpl
lret
sahf
push
push
ds
add
orb
inc
lods
inc
dec
sub
and
stos
dec
orb
pavgb
mov
dec
mov
inc
xor
mov
push
inc
mov
shrb
mov
stc
std
dec
xor
in
ret
jae
push
jnp
les
xchg
sub
pop
mov
mov
cld
push
mov
xchg
sub
and
dec
cld
mov
ss
iret
jae
arpl
sub
inc
sub
cs
pop
mov
xor
in
pop
dec
je
xor
out
xor
sub
inc
inc
jp
repz
or
pop
outsl
int
cmp
or
jg
cmp
dec
icebp
out
sub
push
sarl
pop
mov
add
dec
push
movb
stos
jae
xchg
dec
imul
dec
fidivl
pop
adc
outsl
data16
cld
loopne
shrl
mov
scas
rcrl
dec
inc
jns
aad
ret
aaa
sbbl
jp
push
or
call
xor
mov
lcall
mov
mov
cmp
jno
cld
inc
push
cmp
cmp
xor
mov
mov
sahf
inc
sub
arpl
test
scas
cmp
frstor
push
lcall
scas
mov
imul
inc
movsl
adcb
les
jl
inc
xchg
mov
pop
aad
mov
je
mov
dec
test
in
sahf
vcvtpd2dqx
fdivrl
imul
lods
stos
in
mov
cltd
and
jne
sbb
pop
jmp
mov
fwait
sbb
outsb
ss
movsb
lea
inc
push
adc
dec
inc
add
mov
iret
sub
sbb
adc
leave
fsubl
mov
xchg
push
pop
popf
push
aas
xor
dec
shlb
sti
addr16
lret
xor
in
jne
pop
decb
mov
fists
test
loop
repz
rorl
cmpsl
sbb
inc
jp
cmp
inc
lahf
aad
mov
xchg
xchg
mov
leave
dec
xchg
scas
mov
fldl
inc
or
sub
mov
xor
inc
push
ljmp
scas
pop
fldt
repnz
push
add
mov
mov
mov
aaa
fcmovnb
sub
ret
or
cltd
call
aam
loopne
jno
insb
stos
mov
frstor
fs
and
int3
jo
xchg
scas
out
mov
lret
lret
clc
cli
inc
popa
in
imul
cmpsl
pop
jecxz
xor
sbb
mov
movsb
fsubs
sub
mov
mov
xor
pop
jg
and
pop
loopne
bound
out
push
xchg
adc
ficomps
bound
pusha
jb
outsb
inc
aad
lds
or
outsl
fwait
icebp
mov
cmc
repnz
int3
pop
push
jl
pop
xor
and
arpl
hlt
or
jns
roll
inc
jns
mov
or
mov
sarl
mov
fwait
cmp
jl
arpl
out
test
and
jo
out
stos
jl
sub
cmc
pop
rclb
pop
adc
sbb
mull
mov
ds
iret
jg
jns
adc
or
and
add
adc
pushf
cmpsb
sub
push
jbe
int3
sahf
loopne
insb
mov
sbb
sub
sub
rorl
xchg
xchg
cld
inc
sbb
lods
dec
out
mov
mov
ret
or
fimull
adc
iret
aad
cs
data16
pop
sub
add
fcoml
in
out
movsl
mov
pop
lahf
or
daa
push
fwait
sub
cmp
out
addr16
mov
jmp
cmpl
inc
clc
mov
out
mov
cwtl
outsl
sub
std
mov
notb
movsb
pop
inc
or
cmpb
test
push
push
add
fs
push
dec
gs
sahf
mov
loop
push
pop
ds
jno
pinsrw
mov
mov
add
out
lea
dec
cmp
repz
sbb
ret
or
dec
pop
mov
fildl
mov
outsb
sbb
sahf
popf
lods
loopne
pop
scas
adc
jge
data16
jnp
addb
addr16
and
int3
cwtl
xchg
fidivs
pop
mov
hlt
test
inc
mov
in
jnp
jnp
test
ja
cmpsl
mov
loop
ffree
or
xchg
mov
dec
cmp
sahf
insb
mov
add
pop
cmp
jecxz
ss
push
test
sbb
decb
out
mov
ss
dec
jne
adc
xor
sub
and
add
mov
pop
les
jb
push
call
xchg
jl
std
outsl
sub
loop
imul
mov
jns
sub
lods
add
add
lods
pusha
popf
and
push
ljmp
push
cmpsb
jmp
cmp
adc
dec
cmp
gs
jl
loopne
jecxz
lock
add
scas
adc
pushf
add
mov
mov
or
mov
dec
fs
dec
mov
push
inc
pop
and
in
or
popf
jns
sub
jbe
sub
fldl
shl
lret
dec
jbe
push
fsubr
mov
jl
ss
or
stos
or
add
adc
fbstp
into
cmc
arpl
push
sahf
dec
xor
aas
adc
decb
pop
flds
int3
xlat
dec
xor
gs
in
loope
push
xor
lock
dec
fidivs
mov
icebp
xor
adc
jo
test
sahf
cltd
xor
or
jg
push
mov
jge
dec
mov
jle
arpl
roll
adc
mov
xchg
out
aas
xlat
add
nop
pusha
outsl
fstps
jp
jno
jl
test
test
xor
cli
fisubrs
sahf
inc
fdivs
mov
aad
fnstcw
test
or
xchg
aaa
fs
ss
sub
push
mov
into
aaa
inc
fs
ljmp
ret
pand
xchg
nop
cmp
xor
add
fcmovnbe
out
lret
mov
xor
gs
shrb
out
lahf
cwtl
sub
cli
jns
orl
bound
ret
add
jmp
divl
fmuls
sahf
xorl
add
mov
ret
push
xor
lods
adc
jmp
fcmovnu
enter
int
or
mov
sub
dec
pusha
mov
cltd
pop
cld
inc
xorb
in
sub
outsb
push
roll
dec
and
lods
cmp
or
imul
insb
and
pop
sbb
inc
rcl
icebp
push
sub
sti
or
push
jne
je
mov
mov
mov
pop
arpl
out
and
or
outsb
push
shr
dec
jp
out
push
cltd
push
jo
lds
adc
mov
cmp
cmp
mov
xchg
jmp
inc
pop
out
sbb
mov
xchg
xor
and
shr
ret
mov
mov
rcrl
imul
incb
call
pop
push
jno
pop
les
pushf
ficoms
mov
jbe
shll
xor
or
bound
frstor
or
sbb
mov
xor
and
cmp
shrb
popf
xchg
testb
notb
mov
idivl
adc
sub
or
shl
or
dec
mov
popf
adc
jl
in
pop
sbb
outsl
jae
lods
sub
out
xorl
lock
mov
mov
xorl
repz
mov
inc
cwtl
mov
jno
insb
xchg
pusha
cmp
rcrb
mov
out
dec
jl
pushf
cmp
in
movsl
or
cltd
addr16
jp
sahf
or
sti
fistl
cmp
sar
adc
pop
pushf
lcall
and
jnp
test
pop
sti
stc
int
dec
xorl
sub
jecxz
and
imul
sub
add
inc
sbb
lods
in
loopne
push
cs
sub
jecxz
xor
push
cmp
fnstsw
xor
pop
pushf
ss
outsb
pop
aas
xchg
and
inc
mov
mov
mov
push
dec
xor
sub
xchg
pop
ja
push
orl
lcall
cmpl
js,pn
lea
cld
dec
mov
adc
sbb
clc
jno
movsl
cmpsl
in
fsubp
stos
xchg
jae
dec
mov
repz
imull
fildl
sbb
es
pop
fsubr
adc
mov
sub
mov
sbb
pop
xchg
add
lds
js
jmp
hlt
inc
leave
bound
ficoml
cmp
xor
testb
dec
adc
jbe
xchg
test
adc
adc
push
je
push
xor
cmp
and
xlat
adcl
cltd
xchg
stos
ficoms
sbb
sbb
jns
int
stos
das
bound
push
daa
xchg
in
sub
sbbl
scas
sbb
insb
inc
pop
popf
jne
pop
add
call
add
mov
push
sbb
xchg
mov
jno
pop
adc
daa
jg
leave
pop
pop
into
movsl
pop
adc
rclb
xor
mov
or
sbb
ljmp
sti
sahf
mov
sti
lret
lods
hlt
testl
jno
dec
jns
mov
andb
jg
push
sahf
xor
insl
lret
and
xor
sbb
xchg
xor
or
push
adc
mov
fbld
sbb
popf
sub
fs
mov
jnp
test
cwtl
mov
push
mov
pop
push
mov
fucom
xrelease
popf
add
stos
stc
push
lock
call
xchg
aam
mov
shrb
jmp
icebp
mov
push
ret
and
push
xchg
icebp
std
stc
movsb
mov
inc
shr
clc
add
mov
jmp
hlt
lret
int3
pushf
cltd
and
adc
out
cltd
push
or
pop
icebp
je
mov
xor
rclb
or
pcmpeqb
inc
pop
cmpsb
pop
sti
mov
dec
popf
cmpsl
ret
movsb
loop
sub
js
and
popf
xorl
xchg
dec
push
std
push
cmpsb
dec
fstp
in
jbe
sub
sbb
clc
leave
cmp
xor
jno
lahf
xchg
lahf
mov
adc
jnp
cld
inc
push
movq
jmp
cltd
in
cltd
mov
and
mov
push
adc
inc
test
notl
loopne
sub
add
push
cltd
std
pop
mov
add
lea
adc
mov
loopne
sbb
lcall
arpl
in
mov
fidivrs
setg
fwait
int3
lret
outsb
push
nop
jno
and
dec
fisubs
jmp
push
scas
lret
lea
popf
inc
int
pop
xchg
xor
jne
insb
cmp
or
jl
xchg
sbb
mov
testb
repz
bound
cwtl
dec
mov
js
ret
xlat
or
in
movsb
or
xchg
jae
jns
lock
xor
mov
stos
push
jg
xchg
sbbl
cmp
adc
inc
and
in
in
dec
push
mov
stos
jno
jl
dec
cmovs
dec
mov
cmc
ret
lods
out
pushf
ja
cmp
add
out
mov
popf
cmp
push
adc
nop
inc
mov
loope
sti
sub
fadds
scas
cmp
in
or
inc
call
or
or
xor
inc
push
hlt
cmp
lret
or
xchg
cs
sti
lea
push
movl
ret
cmp
push
sub
cmc
pop
mov
adc
mov
es
scas
adc
out
imul
out
fisubrl
xor
jnp
sub
dec
or
test
lods
es
fs
aad
mov
das
sahf
daa
insb
sbb
sahf
jns
lock
daa
pop
lahf
hlt
dec
cmp
das
adc
daa
ljmp
jecxz
cli
inc
shll
dec
andb
mov
inc
int
pop
lcall
shlb
je
aas
cmc
cmp
lods
iret
mov
or
lds
mov
xchg
xor
xchg
cld
dec
jbe
ljmp
sub
push
leave
xor
scas
cld
ror
mov
clc
or
pushf
mov
mov
rclb
and
pop
adc
mov
xor
rolb
ret
or
lods
mov
arpl
adc
fiadds
das
dec
inc
mov
add
movsb
mov
jb
sub
mov
jno
scas
fimull
dec
clc
in
add
aad
lret
mov
dec
pop
lcall
pop
or
cwtl
pop
sbb
jns
mov
cmp
mov
add
sbb
outsb
or
cwtl
inc
push
sub
xorb
addb
jecxz
ss
lret
sbb
pop
mov
fwait
sbb
sbb
add
fstl
ja
leave
aaa
sub
js
jge
test
pop
add
sub
in
repnz
pop
mov
lret
inc
mov
rclb
fstl
ja
cmp
enter
adc
lock
sub
shr
cmp
mov
bound
addr16
in
adc
mov
sub
mov
jmp
jbe
subb
mov
sub
hlt
ret
rolb
scas
rclb
fs
mov
scas
test
inc
fnstenv
jg
outsb
dec
xor
in
popl
lock
cmp
decb
outsl
js
mov
imul
sbb
int3
js
and
adc
and
adc
sub
bound
xchg
and
push
arpl
rclb
mov
dec
jo
stc
adc
fsub
dec
icebp
pusha
add
dec
fisttpl
shrl
leave
test
jg,pt
lock
sub
adc
fld
or
push
out
inc
shll
sub
out
pop
lcall
dec
xor
mov
rorl
xor
pop
push
push
cmp
mov
jle
xor
mov
jae
xor
cmp
add
jns
and
mov
cmp
mov
sahf
call
push
jno
cmp
xchg
mov
mov
push
cwtl
cmpsl
cwtl
xchg
adc
xchg
mov
add
push
add
xor
pop
or
xchg
push
sub
add
out
sarl
add
cmpsb
pop
or
cltd
cmpb
sbb
adc
lods
arpl
pop
mov
xlat
add
test
scas
outsl
dec
push
mov
mov
or
sub
pop
test
sub
and
scas
sub
jmp
sbbb
js
pusha
cltd
mov
jmp
jo
and
cmp
testb
call
adc
popf
fs
loop
xor
adc
dec
out
pop
hlt
test
push
and
cltd
out
mov
xchg
push
and
mov
clc
mov
cmpsl
xchg
ljmp
adc
iret
and
dec
pusha
pop
incl
push
add
les
add
out
int
jp
test
pop
js
lcall
test
lret
mov
xchg
cltd
lahf
mov
clc
fiadds
pop
sub
mov
aaa
fdivrl
aaa
lea
pop
roll
call
jmp
ficomps
jp
mov
or
xor
les
ds
mov
mov
pop
iret
or
fwait
mov
test
das
and
repz
and
ljmp
cmpl
stos
shl
in
outsl
data16
loop
jecxz
dec
add
jmp
push
sub
xchg
ss
pop
dec
outsl
push
outsb
insb
or
imul
fbld
in
mov
cmc
cmp
xor
sbb
xor
adcl
lahf
push
insb
sahf
dec
dec
xor
lock
pop
mov
mov
or
jge
pop
enter
out
or
sub
jo
notl
push
cld
lahf
mov
inc
fs
xchg
cmpl
jp
mov
jo
fcoms
jge
cli
inc
int
jns
aad
out
inc
arpl
movsl
sahf
pop
xor
lods
jl
cmp
out
adc
adc
idivb
sub
sbb
inc
cmp
leave
jle
pop
sub
lahf
nop
or
jae
je
dec
push
bound
in
push
lds
push
push
daa
mov
dec
inc
lcall
dec
jae
cmpsl
ljmp
outsl
cld
leave
add
pop
pop
push
jnp
jne
hlt
fcmovne
les
stos
ljmp
dec
dec
xorl
out
hlt
fsincos
jns
pop
pop
adc
sti
sbb
add
cmp
xchg
jbe
push
adc
int3
jge
dec
cs
xor
pop
cmp
gs
pop
adc
loopne
xorb
shlb
inc
add
arpl
adc
inc
xor
pusha
rcll
jecxz
xchg
rolb
loopne
adc
jae
arpl
adc
inc
xor
pusha
rcll
jecxz
add
add
lock
push
adc
xorl
and
push
adc
je
fs
xchg
lahf
test
rclb
and
mov
push
fmuls
pop
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
not
mov
in
fmuls
movsb
imul
cmp
insb
adc
add
xor
and
aam
les
cld
test
mov
fsubl
push
cmp
push
js
add
xor
and
aam
les
in
aam
lret
movsb
sub
aaa
addr16
push
push
push
aas
pop
xor
rcrb
aas
and
xor
mov
adcb
push
jnp
xchg
dec
mov
add
cmp
adc
mov
rclb
int
xor
jne
aam
leave
lds
std
add
inc
icebp
cs
leave
pop
sub
cmp
mov
pushf
jl
lods
loopne
fcoml
mov
aaa
jmp
pop
sbb
inc
test
adc
cli
or
mov
dec
mov
call
or
and
ret
or
mov
movb
shll
dec
push
mov
movsb
push
xchg
ja
sub
mul
roll
pop
repz
push
lods
xor
xor
les
out
int3
mov
movsb
xor
je
fs
fs
xor
dec
flds
mov
xchg
in
into
repnz
pop
sub
jb
add
popa
sub
push
mov
mov
cwtl
clc
xchg
enter
shrb
cmp
dec
daa
imul
cmp
pop
dec
lds
pushf
adcl
cmp
or
sbb
insb
adc
add
xor
and
aam
les
cld
test
mov
movsb
sub
cmp
or
sbb
insb
adc
add
xor
and
aam
lods
aad
hlt
es
loopne
testl
xor
dec
mov
pop
mov
push
repnz
mov
or
mov
jne
out
mov
xor
cmc
mov
jbe
int
cld
fisubrl
push
icebp
xor
xchg
xchg
add
jnp
lods
pushf
mov
rcll
mov
pop
repz
clc
xor
adc
add
sbb
cmc
inc
xchg
xchg
pop
dec
mov
mov
add
insb
xor
fnstsw
add
jns
fimuls
lret
inc
cmpl
xchg
dec
test
inc
pop
jl
fldcw
adcl
mov
and
jle
es
sahf
jne
cli
or
xchg
daa
inc
mov
push
rcll
xchg
mov
adc
adcl
sub
nop
shll
imul
sti
roll
cmc
inc
mov
es
flds
mov
dec
or
jo
push
fwait
pushf
jae
inc
and
jp
mov
out
fcmovnb
pop
ja
pop
notb
push
ja
cmpsb
das
add
inc
jnp
lea
enter
add
pop
or
lds
cmpsl
ja
imul
leave
sub
mov
pusha
lret
push
jo
dec
mov
lods
sub
inc
xchg
cmp
jo
jle
add
push
push
je
sub
sub
lock
adc
ror
fisttps
add
mov
repnz
outsb
adc
mov
adc
or
into
insl
jl
cmc
cmp
add
jno
adc
test
pop
jmp
mov
jae
repz
mov
cmp
sub
dec
adc
push
fs
dec
mov
je
std
push
loope
insb
into
addr16
and
int3
mov
dec
xchg
jns
mov
imul
inc
jg
mulb
jmp
jmp
and
rol
jg
pop
or
repz
pop
aad
mov
mov
out
sub
jcxz
mov
lods
mov
stc
bound
and
sahf
cmp
sbb
dec
push
frstor
jb
mov
pop
adc
sbb
sbb
jb
adc
sbb
inc
inc
mov
inc
test
inc
push
out
jne
sub
pop
and
push
sbb
dec
daa
adc
push
enter
aas
shl
jp
xor
pop
popa
sahf
mov
xchg
clc
cmp
lcall
stos
adc
mov
cmp
int
jb
and
pop
ficomps
clc
sub
fcomps
fwait
xor
jno
mov
jg
test
adc
rclb
inc
ret
int3
pop
rcl
adc
inc
sub
lods
or
stos
pop
jnp
popf
pusha
add
add
mov
adc
nop
loopne
lds
shll
inc
xor
pcmpgtw
sahf
mov
adc
jno
jne
or
cmp
in
jg
div
hlt
mov
test
in
int
ficoms
repz
decb
js
stos
xchg
jl
mov
cmp
test
add
fwait
sub
sub
and
fcmovnbe
negb
sub
jp
xlat
in
adc
jne
rorb
and
dec
pushf
aam
fstpl
in
or
jmp
pop
xor
adc
repz
adc
mov
dec
bound
adc
nop
ljmp
fs
jno
jge
mov
and
movsl
ret
dec
aas
rcl
scas
out
push
outsl
jne
jmp
sub
pusha
xchg
inc
mov
dec
arpl
addl
pop
or
pusha
addr16
pop
sub
test
lret
shll
cltd
xor
test
and
push
jmp
icebp
scas
repz
pop
adc
inc
pop
lahf
insb
leave
icebp
lods
mov
arpl
lods
test
gs
fs
or
stc
mov
test
pop
push
jle
movsl
push
dec
pop
loopne
dec
mov
loopne
add
test
fwait
insb
or
loope
shlb
test
popa
fcompp
stos
ja
dec
adc
fdivrl
mov
int3
pop
fnstsw
mov
adc
lods
clc
mov
cmp
add
shlb
adc
sbb
mov
add
jno
dec
data16
fdivrl
out
outsl
das
int3
mov
xor
jne
aaa
pop
into
mov
popf
enter
or
or
int
lock
leave
subl
pmaxub
xor
cli
add
outsl
test
call
lahf
mov
pop
lea
dec
push
cmp
call
adcb
popf
out
ret
dec
jbe
push
xchg
push
mov
ja
outsl
inc
or
outsl
aam
xacquire
into
sub
rcrb
sbbl
push
pusha
push
push
xchg
cli
dec
pop
jge
adc
mov
inc
ret
mov
stc
mov
inc
negb
cltd
fidivl
icebp
pop
aam
mov
pop
fistps
or
jo
aas
pop
pusha
daa
jmp
inc
xchg
xchg
call
push
xor
shlb
pop
icebp
rclb
push
fnstsw
call
jb
cmp
cli
jg
pop
cmpsb
fsubrl
push
lods
pop
adc
xor
push
enter
jmp
xchg
mov
xchg
push
cld
inc
out
fwait
pop
pop
fs
sti
jecxz
add
add
stc
pop
addl
adc
jae
or
call
cli
jg
lahf
shll
xor
mov
test
inc
push
popa
mov
xchg
movsb
push
call
fdivrl
jne
mov
out
or
lcall
adc
ljmp
xchg
cltd
fists
sbb
stos
mov
call
inc
xchg
mov
xor
jb
movsl
cmp
ss
push
or
xchg
xchg
xor
mov
fstl
pushf
out
mov
imul
jns
les
push
inc
ljmp
lds
cmpsl
and
faddl
mov
adc
adc
popa
loopne
or
push
rcll
shlb
dec
divl
cltd
dec
push
ja
cwtl
cmpsb
or
jne
icebp
ja
lret
xchg
sbb
mov
xchg
dec
dec
or
pushf
ficoml
arpl
fistpl
stos
rcl
xchg
bound
fdivrl
add
incl
mov
and
inc
xlat
sbb
jns
mov
rolb
call
out
dec
cld
sarl
or
ljmp
xchg
shlb
stos
adc
daa
inc
pop
fcoml
push
imul
adc
adc
cltd
lods
xor
mov
push
fildl
mov
hlt
aaa
int
dec
and
pop
sub
daa
shll
out
btc
push
xchg
repz
repz
and
test
fwait
lds
testl
addr16
mov
or
stc
pushf
pop
sbb
pop
aaa
addr16
imul
xchg
adc
cmp
xor
mov
jl
icebp
cs
push
dec
pop
neg
xor
adc
loopne
js
add
xlat
push
mov
mov
mov
andl
icebp
adc
iret
test
rclb
rolb
scas
in
ror
loopne
xchg
xchg
int
xor
mov
dec
cld
cmp
cmp
xchg
mov
arpl
sub
jle
cmpsb
xlat
repz
sbb
pop
in
xlat
mov
and
and
popl
add
test
or
cmp
inc
bnd
cmp
pusha
mov
dec
push
cmpb
pop
mov
movsl
das
xchg
jmp
or
addb
pop
jle
jg
dec
mov
packssdw
sti
jnp
mov
mov
mov
ret
dec
jle
sbb
int
fs
loopne
insl
mov
xchg
xor
dec
push
in
cmp
andb
sti
mov
daa
lcall
mov
out
bound
and
aad
repz
push
inc
push
bound
push
leave
inc
fwait
xchg
lock
xor
scas
loop
mov
frstor
cld
push
je
push
mov
or
sahf
clc
scas
xchg
jge
xchg
mov
adc
or
dec
repz
dec
in
mov
xor
mov
rorl
push
mov
iret
movsl
mov
sbbl
xchg
jae
jp
and
call
lahf
data16
mov
int3
fadd
or
xchg
sbb
cltd
pushf
test
mov
inc
psllq
sbb
icebp
cs
adc
mov
sub
jae
ds
popa
adc
fwait
clc
mov
cld
lods
xchg
xchg
imul
sbb
jbe
inc
sbbb
xlat
pop
mov
sbb
pushf
jno
movsb
or
push
mov
call
test
dec
or
pop
push
jg
sub
add
fdivs
aas
lcall
jnp
cmp
test
mov
sbb
pop
push
sbbl
adc
or
adc
sbbb
mov
mov
aas
scas
les
xchg
or
sahf
push
add
cmp
insl
mov
ljmp
in
roll
mov
sti
shrl
pop
xor
lock
dec
imul
bound
icebp
dec
mov
cmc
clc
xor
add
adc
cmp
pop
movsl
loopne
ret
mov
or
fdivp
aad
mov
aas
dec
insl
aad
test
jno
loopne
aam
push
call
ja
pop
ror
dec
dec
cmpsl
es
jnp
stos
clc
rcrb
mov
addl
add
inc
jb
rclb
out
pushf
jg
xchg
fcoml
and
sub
jge
dec
jge
imul
dec
lret
push
sub
shll
insl
dec
cmp
fcoml
and
dec
mov
cmpsl
sbbb
push
dec
movsl
add
cmpsl
lret
cwtl
mov
js
push
push
cwtl
dec
sbb
mov
pop
jne
jp
mov
cwtl
jo
mov
call
pushf
adc
lock
in
mov
mov
mov
xor
xchg
and
dec
daa
adc
adc
cmp
jo
and
pop
jmp
testb
push
cmp
mov
scas
jmp
xchg
inc
jecxz
mov
mov
clc
or
mov
mov
sub
clc
cwtl
cltd
jle
enter
ret
shlb
mov
fcoml
popf
hlt
lea
inc
and
mov
add
add
sub
outsb
mov
xor
in
iret
scas
dec
jecxz
mov
shll
into
mov
fdivrp
lret
cmp
aad
in
jae
jmp
test
inc
leave
dec
js
push
out
in
push
adc
mov
jo
jl
sub
in
add
enter
dec
cld
test
push
paddb
hlt
pop
push
out
fildll
push
push
dec
mov
mov
sub
aad
sbb
push
mov
lea
sub
divb
xchg
lcall
pop
popa
call
push
xchg
add
mov
mov
fdiv
mov
mov
jo
aad
mov
rcrb
cli
leave
adc
shl
inc
dec
sbb
insb
sbb
aam
aam
inc
aas
fwait
sahf
mov
dec
std
test
data16
clc
je
outsl
sbb
inc
sbb
push
jecxz
les
hlt
aas
mov
aam
test
pop
imul
stos
xchg
jmp
movsl
rcrl
int
imul
jb
mov
rorl
and
sbb
or
pop
push
push
ljmp
ljmp
cmc
test
jnp
repnz
out
dec
fs
adc
mov
pop
pop
xor
add
xlat
sbb
inc
in
push
mov
jecxz
out
sub
adc
or
pushf
std
addr16
scas
pop
rcll
mov
sbb
scas
cmc
pop
pop
or
rol
test
into
jo
inc
jp
xorl
stc
add
lret
loop
jecxz
inc
dec
and
or
hlt
mov
scas
aad
ds
dec
jp
add
mov
cld
popl
jg
pop
fwait
sbb
xlat
inc
mov
jmp
push
out
cltd
mov
and
or
sbb
sub
or
fcomps
pop
faddl
sahf
mov
jp
lods
fcomip
xchg
enter
arpl
scas
inc
pop
and
rcrb
cmp
fstpt
scas
add
add
fnstsw
fimuls
cmp
adc
dec
fisubrs
pushf
sub
ret
sub
mov
sbb
std
xchg
push
loopne
adc
lret
pop
lret
jle
mov
mov
sbb
imull
dec
fwait
aam
rcrl
jae
fs
rcrl
xlat
jb
shlb
arpl
in
mov
push
push
cwtl
ljmp
mov
and
sub
test
mov
je
sub
sub
adc
shll
xor
add
mov
pusha
dec
cmp
jb
jmp
mov
loop
gs
adc
mov
lods
rclb
inc
jl
push
daa
and
xchg
repz
and
xchg
loopne
pop
xchg
filds
aaa
mov
scas
pop
add
scas
xchg
ficomps
ret
jge
cltd
iret
nop
mov
push
fdivr
repnz
enter
cmp
repnz
idivb
or
or
in
pop
icebp
mov
ret
nop
xchg
jne
mov
fidivl
movsb
sub
aad
mov
fcoms
push
add
xchg
cmp
xchg
mov
mov
pusha
push
mov
add
outsb
push
sahf
xchg
addl
gs
sbb
lods
in
leave
cli
subb
lea
mov
lods
cli
mov
cmp
stc
or
adc
ja
repnz
loope
ror
xor
push
test
xchg
sub
sarb
sub
js
clc
pop
int
dec
xor
adc
add
jbe
fcmovbe
rclb
mov
ret
sub
pop
add
sahf
frstor
pop
fsub
jns
add
push
fs
mov
xlat
addr16
ljmp
pop
push
lea
jnp
sahf
cmp
movsb
push
pop
push
aas
inc
ljmpw
js
adc
int3
mov
push
sbb
sub
cmp
outsb
les
push
cs
hlt
or
test
and
xor
movsb
test
mov
xchg
sub
cmp
cmpsl
push
push
sti
xchg
std
lret
into
dec
out
test
lods
and
xchg
jnp
imul
stos
jmp
inc
loope
rcrb
sbb
sahf
je
push
scas
dec
adc
test
adc
mov
lods
sub
mov
out
pop
push
lahf
mov
rorl
std
fcompl
dec
push
cmp
pop
dec
cli
aas
mov
hlt
inc
outsb
scas
pushf
lds
cltd
lcall
cltd
repz
cmp
or
mov
gs
jmp
or
fistpl
mov
inc
cltd
dec
lea
xchg
inc
adc
mov
mov
push
push
xchg
pop
lods
repnz
cmp
mulb
addr16
loop
cwtl
orl
inc
icebp
xor
xchg
clc
sbb
inc
mov
out
call
lret
cs
testb
insb
rorl
rcrl
mov
ss
push
pusha
aas
inc
pop
push
dec
rcll
ret
jle
sub
subb
xchg
push
inc
sub
and
mov
movsb
pop
adc
adc
push
push
cmc
dec
cltd
loopne
inc
sub
aaa
mov
fisubs
decb
push
jg
or
outsl
jmp
xor
pop
adc
shlb
movsl
jns
xor
add
int3
or
dec
pop
mov
mov
add
or
fsubl
das
stc
push
inc
jb
ja
xchg
push
adc
sbb
pop
imul
ficomps
inc
aaa
sbb
insb
jo
shrb
mov
js
adcb
jne
sbb
in
push
stc
pop
aad
ret
pop
push
fildll
sub
stos
sbb
sub
and
nop
push
outsb
mov
mov
pop
into
repnz
icebp
pop
fwait
in
out
adc
mov
call
jnp
into
sbb
push
dec
movsl
arpl
ret
jb
into
jns
decl
cwtl
inc
and
lea
cli
arpl
enter
lret
pushf
fldcw
sub
pushf
and
xchg
jmp
mov
add
cmp
into
insl
imul
rol
inc
in
in
adc
adcb
adc
mov
inc
incb
fists
and
pop
push
cltd
xor
and
mov
mov
push
jle
popa
inc
outsl
cld
pop
dec
jno
jl
inc
into
jp
push
stc
pop
loope
pop
xchg
push
cmpsb
mov
jo
xchg
leave
cld
pop
dec
lcall
test
jne
jmp
sbbl
mov
jmp
adc
pop
mov
push
adc
lods
pop
subl
jns
and
cmp
jnp
lahf
cmp
shlb
push
jecxz
push
inc
mov
leave
mov
mov
icebp
and
out
rcrb
or
rolb
add
loope
and
out
lock
je
cltd
iret
xchg
and
icebp
cltd
cmp
mov
cld
stos
and
jne
movl
insl
xor
out
mov
lods
mov
cmp
add
fyl2x
out
cmpsl
mov
faddl
inc
outsb
pushf
ja
mov
iret
insl
bound
jae
mov
cltd
mov
repnz
imul
pop
dec
mov
cli
arpl
in
mov
shrb
xchg
push
xchg
into
outsb
movsl
xchg
pop
das
fisubrs
movsl
pop
aas
addr16
jns
xchg
fwait
repnz
xor
loop
cwtl
sub
out
nop
out
mov
push
jp
xchg
jge
ljmp
ret
pop
xchg
es
dec
inc
cli
icebp
jae
xor
pushf
xor
lcall
outsl
add
cmp
popf
jno
mov
call
mov
mov
test
in
add
fnstsw
lret
js
shlb
inc
pop
fsubs
and
shrl
xchg
dec
sub
jbe
or
mov
mov
les
and
push
sbb
xchg
mov
xor
shrb
subl
push
cmp
lods
cmp
inc
sub
and
inc
jne
addl
insl
aaa
in
into
mov
ret
test
push
outsb
sbb
mov
mov
ds
pop
test
nop
lods
mov
bound
jb
push
xor
popa
cmp
in
icebp
xor
or
and
mov
mov
and
or
repz
pushw
fsub
in
cmpsl
lahf
push
dec
dec
xchg
or
dec
mov
cmp
mov
loopne
dec
jge
in
les
lahf
insl
xor
inc
lret
or
pop
sbb
pop
in
xor
sbb
mov
cmp
repnz
lret
out
inc
sbb
inc
xchg
nop
inc
ret
adc
stos
subb
data16
push
stos
inc
adc
dec
sub
cld
cmp
shrb
xor
push
ss
std
scas
lea
jns
popf
movsb
or
movsl
enter
mov
ja
pop
sub
cmp
hlt
jp
xchg
aaa
loop
into
push
out
inc
xor
mov
xchg
pop
mov
jecxz
hlt
pop
insl
push
int
adc
rcll
dec
clc
jge
pushf
sub
in
push
mov
arpl
and
jp
jmp
int3
rolb
pop
sub
loop
loope
mov
add
pop
shrd
sub
inc
mov
add
inc
icebp
mov
stos
in
push
mov
fcomp
fcoml
sub
test
loope
stos
mov
add
divb
popa
jb
xchg
cmpsl
rcrb
cwtl
add
add
dec
adc
outsl
arpl
test
push
jns
push
push
out
jne
xorb
cld
jle
mull
sub
ja
mov
rcrb
dec
cmc
mov
cltd
repz
and
gs
sub
dec
pop
mov
jl
or
imul
data16
dec
pushf
cmpsb
pop
mov
mov
mov
dec
imul
iret
int
jp
sti
in
call
mov
ds
mov
sub
dec
mov
xchg
dec
out
cwtl
cwtl
stos
sarl
cmpsb
fistpl
push
xor
sbb
fistpl
mov
gs
jecxz
arpl
inc
jnp
addr16
rcr
jl
mov
add
int
sahf
loopne
scas
loop
out
dec
jmp
mov
outsl
add
and
mulb
lcall
pushf
icebp
cmp
daa
jle
iret
scas
pop
jns
jne
stos
enter
lahf
mov
repnz
jl
mov
sbb
popf
mov
and
cmp
das
mov
pop
or
push
repz
cmp
push
rorb
and
cmp
out
mov
cmp
cmpsb
ret
arpl
pop
push
sbb
mov
in
xchg
cld
test
mov
movsb
sub
cmp
or
sbb
insb
adc
add
xor
and
aam
les
cld
test
mov
movsb
sub
cmp
or
sbb
insb
adc
add
xor
and
aam
les
cld
test
mov
movsb
sub
cmp
or
insb
adc
add
xor
and
aam
les
xchg
cld
test
movsb
rcll
cmpsb
je
adc
pushf
hlt
sti
mov
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xor
jmp
add
and
dec
mov
xchg
imul
cmp
jmp
gs
mov
movsl
jns
imul
cmp
inc
add
movsl
push
inc
inc
mov
in
loopne
cmc
pop
xchg
jo
pop
lods
cmp
inc
mov
pushf
insb
lods
jp
xor
mov
dec
mov
lahf
stos
cmpb
cmc
outsb
xchg
cmp
inc
fcmove
ljmp
gs
insb
sub
imul
imul
enter
repz
xlat
and
mov
lahf
bndldx
or
mov
test
add
hlt
sub
push
jmp
add
stc
add
mov
inc
inc
mov
or
test
rorl
fsubl
jl
lods
inc
fsubrl
sbb
jns
pop
sbb
cmp
or
frstor
cli
ret
pop
into
out
sbb
jmp
loopne
gs
out
popa
adc
mov
adc
mov
adc
mov
push
jae
cmp
jns
xor
and
lds
fwait
inc
fsts
inc
xlat
adc
or
cmp
rcr
xadd
sbb
movsb
insl
mov
mov
inc
mov
jbe
inc
fcoml
out
stos
adc
add
sub
psubsb
push
mov
lahf
and
lcall
inc
mov
xchg
imul
cmp
jmp
gs
push
test
movsl
pop
xchg
imul
cmp
dec
jp
movsl
adc
pop
lock
inc
or
lods
or
add
rolb
in
or
sub
rol
push
adc
jns
push
sub
daa
push
iret
mov
into
clc
scas
mov
and
jp
stos
dec
outsl
stc
and
ja
jo
mulb
clc
dec
mov
in
and
cmp
in
aad
push
and
scas
ss
ss
jl
pop
jmp
cltd
int3
lds
out
ja
inc
or
loop
push
lods
push
adc
mov
xor
lods
pop
jl
test
aaa
mov
icebp
add
enter
das
es
inc
fs
movl
ret
es
lods
sub
adc
add
inc
sub
sti
dec
push
fstps
mov
pop
mov
pop
std
imul
xor
int
jmp
mov
lret
fs
aas
jae
mov
mov
test
movsl
dec
enter
cmpl
fcoml
jecxz
cmpsl
or
sbb
push
xor
pop
mov
stos
rcll
insb
inc
push
pop
push
mov
jnp
mov
cmp
test
stos
pushf
sbb
lret
mov
fbld
aaa
test
xchg
int3
ljmp
add
fimull
pop
fwait
out
mov
mov
fadd
jo
cwtl
lahf
cmp
orl
or
mov
mov
xchg
add
jg
cmc
mov
aaa
popf
icebp
xchg
cmpsl
lods
pop
dec
fs
stos
jecxz
jae
ficoml
xchg
test
cmp
add
xor
pop
movsl
cmp
ret
icebp
pop
or
imulb
test
pop
sbb
sahf
fcomps
push
out
loopne
in
jg
scas
je
push
cmp
xchg
jle
fistpl
dec
jnp
pop
out
movswl
and
mov
adc
mov
add
imul
addr16
cmp
lcall
xchg
fisubl
mov
movsl
cmp
inc
pushfw
mov
int
xchg
pop
dec
addb
out
jge
mov
mov
dec
add
mov
das
cmp
sbb
movsl
lods
inc
or
dec
xor
and
cmp
and
sbb
mov
outsl
lahf
jno
dec
lods
sahf
sbb
fcomps
lds
or
decb
sub
int
popl
cwtl
lods
add
test
jmp
and
sti
pushf
lods
push
int3
fucomip
sbb
fcomps
push
cmovae
adc
lahf
daa
dec
rorl
xor
dec
mov
imulb
xchg
test
loope
jle
movsl
loopne
push
fwait
daa
push
mov
call
lea
fidivrs
inc
insl
icebp
shlb
fldenv
xchg
push
sbb
out
pop
arpl
nop
bound
ljmp
xchg
aaa
adc
nop
push
hlt
mov
mov
push
popf
mov
rorb
xor
test
mov
dec
sub
data16
mov
aad
jne
sub
imulb
ljmp
dec
subb
xchg
testb
cs
push
jnp
and
mov
in
outsl
cli
sbb
insb
lds
xor
ja
ja
sbb
sbb
mov
es
icebp
out
hlt
repz
shlb
xorb
jne
xlat
sti
insl
mov
lahf
mov
jb
sub
jne
cltd
rcrb
repnz
xlat
pusha
sub
mov
dec
and
jmp
inc
jb
shll
incl
dec
inc
mov
push
inc
insb
je
cmp
jbe
push
js
or
mov
aas
lret
jmp
xchg
pop
mov
add
fdivrs
in
scas
jno
mov
mov
xlat
cld
jge
incb
into
outsl
bound
mov
add
mov
pushf
xor
rorb
iret
fisttpl
xchg
sti
xchg
scas
mov
inc
cmp
fimuls
xchg
out
fwait
jmp
scas
mov
xchg
pop
cmp
add
repz
call
push
sti
sub
adc
mov
inc
jp
out
mov
or
imul
inc
xchg
mov
in
add
pop
lods
mov
sbb
jo
push
xor
insb
pop
dec
pop
add
stos
push
fistpl
sub
repnz
xchg
adc
jno
sar
test
push
hlt
push
xchg
sbb
push
sub
mov
mov
cli
dec
and
out
fsubl
lock
aas
or
inc
mov
adc
cmc
mov
inc
push
push
xchg
ret
and
and
add
mov
int
jo
mov
jns
cmp
enter
notb
or
xchg
fs
ret
in
jbe
jns
in
inc
inc
test
shrl
jbe
insb
add
mov
shrl
xor
testl
mov
popa
xor
xchg
rcrl
push
mov
pop
sbbb
pop
fsts
mov
jecxz
js
add
push
adc
xor
mov
aad
push
in
xor
inc
xchg
jg
fiadds
repnz
push
inc
ss
inc
mov
incb
movsl
inc
nop
or
out
cmp
jns
in
jge
jo
mov
ret
fidivl
and
pop
jae
mov
aaa
sbb
not
dec
or
xchg
mov
pop
cmpsl
xlat
sbb
js
rcrb
jns
inc
xor
lods
push
ss
and
add
aam
mov
mov
lods
cltd
outsl
mov
push
rcrl
add
enter
repz
jne
rclb
push
sahf
cmpl
xor
jle
imul
test
push
test
mov
xor
push
xchg
jge
dec
iret
ret
sub
mov
mov
xor
movsl
pop
inc
adc
test
mov
aad
fdivr
pop
scas
dec
add
scas
arpl
and
clc
adc
inc
cmp
mov
xor
fwait
leave
xchg
mov
mov
xchg
dec
rcr
arpl
push
xchg
imul
xchg
mov
lea
or
xor
fcoml
dec
push
cmp
jmp
or
fs
and
xor
js
dec
imul
push
pushf
pop
je
cld
sub
fwait
jne
js
aad
out
jp
mov
ljmp
pop
imul
push
mov
mov
std
xchg
pop
mov
ljmp
and
dec
lret
sbb
ljmp
sti
push
stos
test
add
xor
mov
mov
ret
js
iret
or
xor
jno
repz
stos
bound
cmp
push
dec
inc
sub
add
push
addl
gs
and
pop
jno
subl
ss
pop
repnz
ss
jns
in
popa
xor
ret
in
push
je
ja
dec
cmp
je
daa
xor
sbb
inc
rcrb
imul
cmp
sbb
gs
jl
push
fsubrs
push
mov
fstl
sbb
lahf
in
adc
cmp
aad
cmp
lahf
imul
pop
jnp
xchg
cmp
mov
sub
xchg
movsb
lock
push
pop
lea
pop
sar
inc
and
sub
xchg
fwait
std
pop
scas
das
shlb
pop
push
pop
hlt
inc
out
lds
fistpl
rclb
rorb
lods
or
xor
jns
imul
jae
in
notb
push
fstpl
push
aaa
aas
jle
cmp
aaa
mov
imul
mov
mov
icebp
mov
push
jb
mov
jp
push
rcrb
fsub
inc
pop
call
es
mov
fidivrs
stos
loopne
into
fdivr
adc
push
and
inc
push
inc
enter
add
cs
out
and
notl
xor
adc
inc
push
sub
dec
add
jmp
lock
jecxz
js
or
js
fdivl
lret
adc
jne
cmp
and
add
sbb
pusha
cs
inc
sub
mov
je
xor
inc
cmc
iret
adc
fldl
xchg
imulb
xlat
movsb
cmpsl
mov
sub
xchg
iret
je
sub
sub
outsl
xlat
dec
mov
pop
inc
sbb
jno
pop
hlt
les
lcall
aad
adc
pop
je
pushf
stos
out
aaa
mov
or
cmpb
stos
fstpt
js
xchg
out
ja
ja
jmp
jnp
mov
fsubrs
jo
adc
mov
xchg
imul
jns
out
gs
mov
movsl
xchg
cmpsb
dec
aam
push
pop
fisttps
arpl
sub
jb
rcrl
xchg
or
cmp
mov
inc
scas
mov
xchg
inc
mov
xor
mov
xor
mov
loopne
test
and
mov
test
clc
add
imul
push
sub
pushl
into
sbb
test
sub
dec
mov
in
imul
lods
stos
in
jmp
leave
jecxz
popa
lahf
fisubl
ffreep
mov
cwtl
push
cmp
push
cmp
aaa
add
aam
jne
and
and
xchg
rcr
mov
pop
adc
or
mov
dec
push
lret
pop
fdivl
inc
sub
sbb
divb
add
xchg
dec
mov
add
lcall
and
in
hlt
data16
int
sahf
fsts
sub
pop
mov
cmp
and
adc
pop
add
addr16
inc
xchg
aas
stos
lods
xor
mov
insl
in
cltd
push
imul
clc
cmp
adc
leave
iret
roll
lcall
lret
test
clc
pop
lret
mov
mov
jne
ret
pushf
and
lret
mov
jg
scas
pusha
inc
inc
xor
outsl
test
or
inc
gs
sti
add
inc
jb
xchg
or
push
stos
xchg
insb
or
add
cmc
div
mov
xchg
cltd
test
ds
mov
scas
inc
xor
test
stc
xchg
shl
mov
sub
xor
mov
mov
ds
cmpsl
or
xor
mov
xchg
mov
inc
lret
push
shr
iret
fwait
or
jo
cltd
mov
jg
jmp
movsl
insb
fs
js
inc
outsb
fwait
movsb
mov
notb
notb
cmpsl
dec
std
pop
mov
inc
sbb
mov
pop
cltd
xlat
add
hlt
dec
shl
dec
pop
fimull
xchg
stos
outsl
nop
mov
icebp
outsb
sbb
insb
stos
sbb
int
mov
and
dec
movsb
push
push
int3
test
hlt
hlt
pop
adc
fcmovbe
cmp
ja
cmpsl
popa
push
cmp
shl
pop
je
ret
lds
nop
push
or
sbb
pushf
out
sub
sub
fistpll
dec
arpl
ret
insl
icebp
in
lea
cwtl
bound
outsl
inc
test
lods
mov
cltd
movsb
testb
popa
out
sbb
sbb
xchg
push
mov
mov
movb
mov
fistps
imulb
xor
push
dec
xor
cmp
pushf
cmpsb
add
inc
push
or
mov
adc
scas
subb
in
imul
in
je
xchg
mov
pushf
ret
out
sahf
ss
mov
fs
mov
insl
jbe,pt
sti
xchg
push
pop
pusha
push
movsb
dec
decl
mov
fldenvs
cmpl
mov
mov
mov
and
fadds
jmp
adc
push
out
test
aas
inc
std
mov
fwait
rclb
push
cltd
mov
xlat
out
mov
in
sahf
in
cwtl
in
aas
push
loop
mov
aaa
cmp
popa
into
out
dec
pop
je
scas
push
fwait
adc
adc
dec
lods
in
gs
daa
cmc
xchg
add
arpl
adc
sbb
and
fsubrs
and
imul
xor
add
sbb
test
sbb
mov
mov
jg
movsl
jecxz
enter
in
sbb
pop
jmp
addr16
insb
js
cmp
cli
popa
jmp
repz
mov
add
int3
mov
sbb
mov
outsl
mov
lret
fadds
pop
loopne
outsb
lret
push
mov
mov
pop
int
fwait
sub
inc
fwait
inc
popa
loop
sub
stos
xor
add
insb
sub
mov
jns
leave
outsl
jg
cmp
xlat
mov
sub
add
mov
xor
inc
sbb
or
mov
cmp
pop
push
insb
lds
add
mov
data16
btc
mov
test
in
nop
les
add
push
add
in
pop
cmc
push
sbb
fdivs
push
cmp
and
push
std
ret
stos
add
mov
test
cmovno
and
popf
or
mov
repnz
gs
mov
sbb
mov
sarb
jge
mov
jb
lds
sbb
mov
jmp
out
iret
movsl
scas
dec
mov
cmp
stc
sub
hlt
mov
cmp
movsb
dec
or
mov
jmp
cmpb
fsub
and
movsb
jle
cwtl
loope
xorl
and
pop
and
aad
loopne
mov
sbb
insl
xchg
repnz
inc
jne
add
loope
imul
aam
mov
jbe
or
xchg
mov
adc
jbe
pusha
out
mov
or
psrld
lods
aas
pop
cmp
push
cmp
xchg
and
sbb
pusha
pop
mov
and
pop
loopne
mov
lock
filds
or
jb
and
outsb
daa
fiadds
inc
push
inc
int3
push
and
cltd
lea
enter
nop
and
xchg
mov
push
bound
sbb
jns
xor
shlb
sub
cli
js
popf
cmp
mov
or
outsl
dec
decb
pusha
es
sub
gs
cmp
js
nop
cmp
rcr
inc
out
scas
pop
xchg
into
adc
aad
lret
inc
or
lahf
cmp
adcb
jo
out
in
outsl
sbb
jno
pop
mov
shr
sti
repnz
jb
sbb
add
sub
push
pop
or
inc
mov
adc
sbb
dec
ret
in
xor
lods
xorb
mov
lods
hlt
dec
xor
jae
sub
xchg
push
ret
mov
enter
pop
lret
jo
jle
pop
cwtl
ret
cmp
dec
gs
ret
enter
in
aad
pop
enter
cmpsl
add
mov
jecxz
xchg
sbb
mov
push
xchg
push
jge
into
adc
mov
add
imul
mov
dec
fsub
shll
mov
orl
repz
xchg
xchg
dec
ret
jmp
mov
jns
loop
add
dec
nop
rorl
negb
jl
mov
enter
add
les
xor
lcall
inc
xchg
cmp
push
rcr
daa
sbb
icebp
arpl
add
scas
popf
add
sub
inc
adc
stc
inc
pop
or
add
outsl
jnp
hlt
xchg
xchg
cmp
pop
mov
pop
pop
push
inc
lea
lods
std
adc
xchg
push
sbb
dec
sub
xor
or
push
stc
shlb
add
fwait
mov
idiv
cmp
lods
pop
push
cmpsb
or
fwait
jne
mov
pop
insb
repnz
int3
cld
popa
dec
push
mov
testb
push
jne
pop
cmp
loop
fsubs
sbb
jns
and
stos
push
shr
add
inc
popa
jg
ds
push
mov
stos
scas
test
arpl
inc
jmp
and
stos
and
loope
orl
and
sti
push
pop
mov
adc
in
xor
cmp
sub
cli
mov
fs
or
rcrb
lods
dec
sti
pop
pop
adc
mov
adc
addr16
pop
cmp
les
out
clc
mov
out
ret
cmp
xchg
sub
int3
inc
cmp
lods
inc
sbb
iret
mov
jl
int3
rcrb
test
inc
in
andb
sbb
cmc
incb
and
dec
jnp
xorb
fstps
lret
mov
pushf
mov
insb
inc
leave
jb
mov
sub
sahf
and
xor
shlb
pushf
aaa
mov
scas
xchg
mov
pusha
mov
fwait
lods
inc
pop
sbb
mov
mov
cli
xchg
int
sub
xor
push
pop
scas
arpl
xchg
pop
in
enter
mov
inc
fcmovnb
fistps
mov
gs
mov
sti
daa
mov
sub
sbb
les
mov
scas
push
inc
adc
xor
test
cmp
sbb
pushf
cmpsl
sub
popw
adc
repnz
clc
out
inc
icebp
and
fisttpl
mov
xchg
in
outsb
fists
adc
or
sbb
pop
aam
aas
adc
scas
mull
pop
mov
and
cltd
pusha
jnp
aad
lds
mov
sbb
lods
out
add
push
mov
aas
pop
lahf
mov
fadds
dec
pop
pusha
je
and
sub
add
cmc
imul
lods
lea
dec
cltd
mov
scas
xchg
pop
ljmp
cmp
adc
sbbl
in
cmpl
sbb
cmp
fldcw
mov
in
cmp
clc
je
cmp
mov
jns
add
inc
jns
rcr
sbb
data16
push
sub
pop
dec
jne
cmp
sarl
mov
push
mov
or
dec
inc
mov
leave
aas
jns
lret
outsl
mov
or
cmova
dec
adc
lods
add
mov
divl
inc
xor
sub
lods
pushf
mov
lods
test
xchg
mov
mov
in
in
push
fwait
ss
loop
movsl
ljmp
cmp
lods
rcl
and
ja
cltd
clc
mov
sub
inc
test
sbb
xor
rorl
xor
repz
out
jmp
push
fldl
int3
rcrb
fcompl
cwtl
fucomi
mov
xchg
dec
pushf
nop
mov
or
popa
xor
jne
add
orb
cltd
push
mov
adc
mov
mov
mov
hlt
clc
pop
cmp
sub
enter
outsl
shrl
std
and
cmp
fs
cld
or
stos
cmp
pop
xchg
jmp
movsb
push
es
fsubrs
in
jo
ds
or
sbb
inc
sbb
in
pop
ja
cmp
pop
pusha
into
or
cmc
pop
xor
in
lds
scas
jno
pop
sti
orb
xchg
roll
subl
add
jb
call
mov
sub
and
mov
pop
sbb
add
pop
daa
push
test
cmp
dec
push
mov
jl
mov
or
and
push
mov
pop
popf
push
icebp
mov
add
fsts
insl
imul
push
int3
fcompl
and
cs
fistl
push
add
add
ss
mov
enter
sub
fistpll
xchg
mov
jns
outsl
aad
out
leave
cmp
xchg
push
adc
or
xlat
push
dec
push
pop
lea
cmp
movl
sbb
pop
push
mov
outsb
mov
rcll
mov
call
lea
and
dec
hlt
add
shrb
cltd
mov
repnz
pop
in
inc
pop
jo
aaa
out
inc
ljmp
mov
repnz
sbb
or
daa
test
fs
adc
ret
adcb
mov
cmp
xor
pop
mov
and
push
pop
out
lods
lock
sbb
adc
nop
xor
jae
test
inc
push
sti
aaa
loop
lcall
movsl
es
lret
ds
js
and
out
lock
sub
mov
sbb
pop
into
dec
push
jmp
mov
cltd
std
sbb
mov
push
std
bound
mov
pop
jae
cmpsb
xor
inc
jmp
fnstenv
push
nop
fldt
fisttpll
cwtl
push
loope
xchg
popa
sub
dec
sub
aas
sub
fsubl
shll
xchg
inc
popa
fiaddl
movsb
pop
stos
outsl
push
mov
loop
jb
add
fldcw
call
lea
stos
fs
addr16
or
sbb
mov
cmp
xchg
adc
xor
into
xchg
sub
stc
sbb
ret
jo
dec
fwait
or
shrb
out
sbb
xbegin
cmpsb
jge
jecxz
sub
push
test
jg
cli
pop
adcl
pop
add
test
lret
xchg
jp
mov
push
into
xor
sbb
aas
cmp
push
dec
in
mov
dec
lcall
loop
bound
adc
dec
or
cmp
outsb
fisttpl
add
sub
sarb
out
sub
out
fsubs
cmp
jp
push
add
cltd
push
cmp
xor
jp
push
aad
push
pop
xchg
in
jp
lret
out
lret
adc
loope
sbb
sub
gs
push
test
movsl
pop
xchg
imul
cmp
jmp
gs
push
test
movsl
pop
xchg
imul
cmp
xchg
add
xor
inc
mov
xchg
imul
xor
jmp
gs
aad
lds
aas
imul
data16
or
inc
gs
adc
ss
sti
idivb
out
mov
and
xchg
fildl
or
inc
imul
es
push
pop
push
sti
idivb
jmp
lahf
cmpsb
lret
aam
xchg
jbe
lea
inc
jnp
xor
addr16
mov
out
mov
lret
repz
leave
mov
jbe
cmp
insb
pop
loopne
lds
pop
add
adcl
xor
sub
daa
and
xor
fldenv
filds
push
inc
sbb
dec
outsb
ret
push
dec
push
xlat
jnp
sub
fwait
sub
mov
arpl
jmp
inc
sbb
cmp
jbe
cmp
movd
in
lcall
dec
cltd
pop
stc
mov
sub
fdivr
pop
fisubrs
or
rcr
mov
lsl
test
jmp
je
cwtl
push
sbb
scas
or
xor
stos
into
arpl
out
fwait
outsb
mov
lret
xchg
jbe
or
inc
imul
es
push
jecxz
pop
imulb
out
test
mov
mov
dec
aas
jne
add
pop
cmp
xchg
cli
xchg
fstpt
xchg
aad
xchg
pushf
sub
fs
push
shlb
jle
inc
daa
popa
sub
xchg
mov
xchg
out
mov
test
mov
aas
or
cs
dec
push
pop
push
stos
idivb
jmp
sti
cmpsb
lret
xchg
fildl
or
inc
imul
es
push
pop
push
stos
idivb
jmp
sti
cmpsb
lret
xchg
fildl
mov
cli
sbb
sbbl
cli
jo
cmpsl
incb
shlb
ficomps
enter
mov
movsb
shrb
push
repz
sub
sub
adc
push
pop
js
add
xchg
pop
or
lods
sub
push
jb
fists
cltd
dec
mov
stos
lret
int
fwait
sarl
outsl
or
in
stos
into
pop
add
jo
jge
sub
iret
xor
add
push
iret
je
sbb
popf
iret
and
dec
jle
out
test
xchg
push
jmp
jbe
xchg
movsb
iret
cmc
mov
jnp
and
ret
in
imul
pop
lods
out
daa
mov
scas
mov
push
int3
adc
or
jp
add
xor
fisubrl
cmpl
ret
ss
or
cmp
jp
push
push
pop
xor
sbb
cmp
not
ficomps
or
jecxz
out
mov
rcrl
xor
rcll
adc
gs
inc
sbb
mov
bound
ds
popf
push
loop
mov
out
jo
cmpsl
pop
sbb
mov
pop
pop
xchg
mov
icebp
popf
sub
mov
nop
scas
mov
into
inc
pop
pop
or
mov
fmul
scas
repnz
jp
fnstsw
stc
push
mov
mov
push
or
clc
xchg
xchg
movsl
cmp
es
dec
pop
daa
aas
xchg
inc
xchg
inc
scas
mov
mov
xor
js
jbe
repnz
dec
inc
mov
or
repz
es
inc
in
mov
out
fidivs
inc
dec
in
fs
jp
sub
xor
addr16
insl
sub
nop
shr
inc
loopne
sbb
outsl
mov
jno
push
jae
mov
dec
inc
sub
sti
pop
mov
sar
ds
test
std
dec
and
jl
ljmp
data16
lock
pop
lods
jecxz
add
test
loop
pop
mov
adc
jge
out
xchg
ror
push
clc
mov
cmp
repnz
or
mov
jno
test
jge
pop
sahf
pop
sub
or
popf
fstps
and
sub
jne
and
gs
fists
lcall
xchg
cmp
repz
mov
ss
das
test
sbb
pop
stos
sub
push
je
push
sbb
in
or
jmp
mov
shll
jns
sahf
repnz
push
push
add
out
pop
xor
repz
stos
xor
push
push
out
push
loopne
jne
pop
and
shl
js
aam
sbb
fcomps
or
sbb
int
adc
or
inc
popa
stc
lods
mul
push
pop
pop
outsl
ret
test
sub
push
jecxz
jb
enter
outsl
repz
pusha
pop
pop
xor
aam
pop
or
jge
mov
jecxz
sub
in
xchg
mov
lods
jbe
jmp
mov
and
int3
mov
jle
pop
and
dec
pushf
jmp
mov
inc
jne
lldt
xor
adc
push
mov
sbb
aam
sbb
mov
sbb
es
insl
out
idivl
jecxz
lea
mov
dec
insb
outsb
inc
ljmp
clc
mov
sbb
pusha
mov
cmp
mov
imul
int
cmp
out
jne
mov
stos
mov
addr16
adc
mov
mov
push
shlb
add
adc
test
jnp
ds
pop
divb
in
popa
fimull
adc
mov
pop
dec
incb
lods
sbb
xlat
mov
sbb
dec
negb
ja,pt
daa
pop
test
adc
daa
sbb
adc
fcoml
in
pop
xchg
jmp
cmp
fisubrl
in
add
or
jbe
push
or
xchg
sbb
imul
pop
push
sub
lahf
xchg
push
lret
cmc
mov
sub
leave
notb
jns
rcrb
xchg
adc
mov
gs
or
int
lea
mov
and
fcomp
insb
call
inc
jle
out
push
inc
cltd
xchg
push
push
pop
iret
out
jno
lcall
cmp
lcall
mov
xlat
push
pop
cmpsl
adcb
xchg
cmpsb
fsubrl
xor
int
fmuls
push
or
inc
cli
push
in
pop
cli
sub
sahf
pop
aad
push
pop
adc
pusha
repz
push
dec
jns
flds
imul
stos
dec
add
je
daa
je
push
insl
stos
jns
push
gs
jno
fdivrl
adc
push
lcall
loopne
xchg
nop
or
sub
push
cmc
cmp
jbe
or
add
pop
loop
repnz
jge
sbb
insb
and
inc
xchg
add
sub
mov
or
sarl
idivb
add
inc
sub
jo
mov
mov
int
daa
jg
into
dec
mov
pop
and
or
mov
or
push
mov
lds
ror
sbb
pop
push
adc
mov
push
lock
out
xor
jo
in
cmp
les
cld
push
lods
pop
subl
in
fsts
push
out
add
xchg
push
into
cmpsl
sbbb
adc
dec
repz
push
dec
push
cli
jg
jo
mov
mov
mov
fwait
outsb
popf
pop
scas
addb
jo
cmp
fcmovnbe
mull
scas
decl
aam
outsl
adc
ss
leave
fwait
lret
stc
jle
jns
pop
sub
pop
jecxz
pop
cmp
lds
add
add
cmp
jb
xchg
fsubs
push
mov
sbb
outsb
and
popf
mov
outsl
insb
mov
out
adc
out
lds
pop
cmp
es
and
adc
adc
sub
mov
and
loop
popf
outsl
pop
and
pop
mov
mov
cmp
and
fidivrs
jmp
cwtl
in
scas
arpl
lret
xlat
jecxz
lahf
in
push
mov
shrl
jae
mov
fwait
ljmp
cmc
or
push
out
test
mov
mov
movsl
cli
fdivp
popl
xchg
dec
xor
test
cmpsl
popf
int
lcall
lret
imul
scas
movl
push
es
adc
push
cmpsl
sub
shr
pop
xor
cmp
jge
std
outsb
test
mov
gs
sub
inc
cmp
push
dec
shll
mov
jbe
lahf
add
sbb
arpl
add
stc
enter
int
mov
data16
aad
jno
cmc
sbb
andb
lods
xchg
rolb
cmp
add
adc
xor
sarl
frstor
outsl
pushf
jo
pop
or
push
andl
cmc
outsl
pop
lret
data16
push
or
in
fwait
mov
lock
data16
push
cmpsl
jo
dec
push
sbb
sbb
mov
int
or
pop
ret
movsb
in
in
ja
pop
stos
insb
or
pusha
fnstcw
pusha
popf
sub
inc
cmp
and
push
mov
outsl
mov
and
fmull
and
dec
add
xchg
inc
in
dec
jmp
cmpsb
andl
and
arpl
ret
push
testl
out
imul
jne
push
movsl
sbb
xchg
fidivl
dec
ja
or
mov
popa
add
sti
adc
sub
push
mov
and
push
mov
in
xor
rorl
mov
dec
adc
mov
mov
xor
jo
push
ja
aad
cmp
mov
xchg
fs
mov
add
push
push
rcll
pop
test
mov
cmp
inc
xlat
icebp
dec
cld
orb
insl
sbb
mov
mov
dec
add
or
fildl
in
mov
xor
mov
call
sbb
int3
xor
mov
cmp
mov
mov
negb
sti
ja
sahf
jb
pop
mov
dec
and
pop
hlt
popa
rcl
pusha
and
add
push
push
mov
cmp
sti
pop
push
mov
add
and
dec
lcall
data16
and
nop
cmc
adc
jae
add
pop
mov
xor
mov
and
adc
jle
loop
test
jbe
das
add
cs
mov
and
imul
sbbl
jg
xor
lea
pop
mov
lret
loopne
in
dec
cmc
cmpl
adc
stos
pop
or
dec
pop
pop
mul
mov
sub
repnz
mov
out
push
sbb
daa
jbe
fstl
mov
ficompl
popa
mov
jae
addb
jmp
ljmp
xchg
push
aas
mov
mov
or
sbb
out
out
add
or
divb
fsubl
mov
dec
insl
and
xor
pop
xchg
ret
hlt
es
sub
mov
push
xchg
stc
clc
sbb
sti
test
in
sbb
jne
andb
push
xchg
push
cmpsb
pop
gs
ja
imul
jno
popf
add
iret
test
or
test
and
pop
pop
and
scas
outsl
sub
dec
jno
testb
push
pop
in
mov
mov
or
add
outsl
cmp
jns
adc
ret
inc
mov
push
dec
fwait
out
pop
inc
test
jecxz
add
les
aas
sbb
pusha
rcrl
push
pop
in
inc
mov
jo
push
mov
xchg
jg
jnp
sub
or
rcr
cmpb
push
inc
push
cmp
sbb
sbb
ficoms
push
out
cld
push
mov
xlat
daa
jmp
rcrb
pop
imul
mov
repnz
mov
test
jbe
aas
addr16
jbe
leave
push
cmpsl
ss
pop
inc
fs
inc
fisubrl
xchg
pop
repz
or
loop
push
add
mov
es
sbb
mov
jg
lret
cmp
lret
sub
dec
add
pop
push
pop
stc
inc
pushf
xor
lahf
fiadds
xlat
lcall
xor
lret
imul
and
jne
ja
sub
push
add
xor
mov
and
cmp
out
mov
cwtl
mov
shr
sub
jo
mov
sub
push
jg
nop
call
adc
push
sub
pop
adc
add
push
mov
xchg
aam
adc
mov
inc
ljmp
ret
mov
out
int3
or
jp
xchg
outsl
adc
fs
add
fists
add
lods
push
insb
cmpsb
shlb
and
and
cmp
int3
xor
nop
test
or
ret
add
adc
dec
inc
mov
mov
hlt
in
mov
call
rcll
or
mov
arpl
fldcw
mov
inc
xor
sbb
dec
fmull
fcoms
jecxz
fidivrl
fdivrs
in
roll
xor
jb
out
bound
xor
xor
jge
leave
fwait
pop
aam
call
pop
nop
clc
adc
mov
jmp
push
add
inc
cs
adc
add
leave
loopne
mov
cmp
scas
popf
jmp
dec
mov
lcall
pop
and
mov
add
or
mov
jmp
dec
bound
jmp
lret
xchg
sbb
sub
repnz
pop
cmp
dec
mov
cmp
jno
jg
mov
mov
sbb
testb
add
out
shl
popf
test
test
scas
fisubrs
iret
mov
push
into
and
test
inc
data16
push
movsl
shrl
in
sub
pop
ja
cs
mov
fistps
stc
scas
sub
leave
dec
decb
test
sahf
std
xor
out
xchg
popf
cmp
inc
pusha
movsb
xchg
addr16
inc
mov
enter
test
push
or
mov
pop
repz
and
test
ret
cmp
push
cmp
sahf
cmpsb
bound
fwait
adc
fmulp
es
fwait
pop
lahf
jg
filds
lahf
insl
inc
stos
popa
jp
lahf
andb
rorb
int
je
int
call
and
mov
clc
xchg
pop
test
fdivrl
mov
xchg
inc
dec
add
dec
test
jmp
test
add
es
movsb
stos
mov
push
int3
add
call
xorb
aaa
mov
adc
mov
arpl
lret
cmpsb
sbb
and
std
aad
xchg
xchg
jecxz
jmp
jecxz
out
push
cmp
dec
test
add
lods
cmp
lea
cmp
push
mov
mov
push
cmp
scas
test
pusha
mov
loope
sub
mov
clc
ficomps
mov
popa
jmp
rorb
fs
pop
lock
dec
push
sbb
fcmovne
shrb
mov
and
jge
test
mov
lods
sbb
add
pop
sarb
leave
aaa
and
stos
push
xchg
push
or
lds
rcrb
sbb
roll
test
mov
jecxz
addl
les
mov
mov
xor
das
ret
nop
dec
xor
mov
dec
pop
sub
aas
in
int
sbb
push
jmp
add
sbb
outsl
pop
add
pusha
mov
mov
sub
push
push
dec
or
gs
inc
leave
jp
cmp
adc
add
fmul
push
and
popa
xchg
das
out
repnz
cltd
cmp
pop
dec
push
cmpsb
fstps
leave
xchg
inc
shll
jp
mov
mov
mov
push
and
mov
pop
les
jbe
rcr
aam
mov
push
test
arpl
sub
xor
test
out
mov
dec
dec
lret
xchg
je
repz
or
leave
shll
repz
add
adc
cmp
jmp
cmc
mov
scas
mov
out
addr16
mov
dec
cmp
push
imull
adc
out
mov
sub
push
cmp
sarb
jo
cmc
or
adc
daa
add
xor
lret
pop
push
mov
sbb
xlat
popa
mov
and
inc
mov
clc
test
aas
xchg
jl
pop
out
out
mov
imul
xchg
mov
or
mov
and
lods
add
push
movb
insb
daa
pop
movsl
fs
mov
adc
mov
lock
jmp
flds
rol
int3
add
push
mov
les
mov
andl
vunpckhps
gs
movsb
mov
and
scas
data16
sub
sbb
in
addl
rcrl
cmp
sbb
mov
shlb
mov
sub
loopne
xchg
out
leave
adc
cs
mov
test
add
and
xchg
mov
fdivrs
xchg
add
mov
cltd
adc
outsl
fbstp
insl
lret
pop
xchg
xchg
loope
bound
gs
arpl
pop
mov
mov
sbbl
or
cmp
test
add
mov
xor
adc
or
mov
inc
popa
inc
mov
ficompl
and
shl
adc
sbbb
testl
lds
scas
sbb
lret
sbb
lahf
pop
jmp
sub
leave
mov
das
jg
inc
lret
jecxz
add
xchg
outsb
sahf
dec
lret
inc
imul
pop
loop
fcmovnb
lcall
or
or
orl
arpl
mov
dec
jne
test
idiv
shlb
xchg
ucomiss
daa
ret
addl
mov
jno
repnz
repz
mov
push
loope
cmp
adc
ficomps
sub
add
pop
and
rolb
mov
movsl
pop
pop
and
xorl
jmp
rcll
cwtl
and
mov
lcall
dec
in
in
adc
aam
aam
push
dec
out
adc
loop
in
push
jge
lods
fs
adc
cmp
mov
test
mov
xlat
xchg
roll
cmpsb
jns
add
fwait
cmp
cmp
xor
xchg
xor
cltd
mov
repz
ret
cmp
fiadds
shlb
pushf
mov
inc
sti
push
les
pop
imul
dec
adc
pop
movsb
pushf
outsb
lods
push
jle
mov
jmp
mov
das
int
sbb
sub
imul
into
popf
ds
mov
jg
mov
or
cmp
stc
and
loop
inc
inc
add
adc
decb
pop
sub
lds
xor
ds
divl
mov
imul
xchg
popa
jmp
inc
pop
pop
push
sub
adc
push
mov
jecxz
adc
hlt
sti
in
int3
movsb
inc
xchg
loope
test
inc
roll
sti
js
mov
outsb
test
enter
xlat
jge
xor
push
cs
lods
insb
pop
lods
push
pop
test
xchg
adc
mov
loope
mov
icebp
sbb
sbb
mov
cmc
sbb
or
jl
pusha
jg
loop
jmp
jg
fcmovnu
test
sarb
aam
jno
out
mull
clc
daa
or
test
lea
jl
div
repz
xor
add
outsb
mov
mov
std
out
cmpsb
dec
sub
and
add
stos
dec
adc
sbb
jmp
mov
lret
push
xor
lcall
or
mov
leave
xchg
cmp
clc
xor
fisttpl
mov
sahf
cmp
and
inc
xlat
ret
lock
ljmp
add
and
mov
inc
mov
fwait
repz
jae
jp
cmp
push
pop
scas
push
mov
jmp
out
inc
in
lods
pop
ja,pn
cmp
cmp
cmp
ss
jge
push
xor
imul
mov
cmp
in
and
into
clc
roll
ja
out
nop
push
fcompl
or
lea
popa
mov
cli
lea
hlt
insl
add
outsl
add
mov
ds
fmull
cmp
mov
sbb
test
in
sub
mov
adc
fwait
inc
jns
inc
cmc
add
loopne
xchg
jnp
test
mov
add
testb
mov
mov
dec
or
cmp
lahf
out
push
lret
and
je
mov
pop
jnp
sub
jmp
add
hlt
mov
pop
and
inc
out
mov
pop
pop
inc
roll
int
adc
enter
ret
xor
push
sbb
mov
ret
mov
les
adc
aaa
popa
cmpsb
mov
mov
fs
xor
inc
and
adc
daa
hlt
shlb
adc
add
insb
inc
jno
add
rclb
xchg
and
ror
scas
and
call
sbb
es
lcall
in
mov
mov
mov
sub
cld
add
mov
jecxz
out
scas
xor
xor
outsl
andl
jae
and
push
les
subb
gs
inc
into
xor
icebp
mov
xchg
ds
mov
iret
pop
cwtl
push
ljmp
dec
mov
add
sbb
cmc
ret
inc
popf
bound
jb,pn
roll
jecxz
pushf
movsb
adc
outsl
jp
jp
outsl
inc
sbb
scas
dec
es
insb
mov
xor
scas
adc
jo
lea
and
jb
push
ret
int
or
xorb
fldcw
call
dec
in
xchg
pop
and
mov
mov
pop
push
sbbb
xchg
mov
fsubrl
sbb
xchg
mov
xchg
or
outsl
pusha
pushf
stc
dec
mov
mov
xor
push
sub
fisttps
sub
das
push
ror
or
ror
dec
fisubs
dec
xor
outsb
adc
clc
or
cmpsb
sub
ds
incl
mov
jg
push
jmp
imul
sbb
jb
xchg
enter
mov
lods
inc
outsb
loopne
mov
andl
mov
sbb
push
jg
cli
loope
ljmp
andb
pop
call
xor
das
inc
pusha
testl
or
sbb
lahf
jne
mov
cld
cld
add
push
sar
xor
inc
sbb
push
mov
hlt
adc
movl
pop
pop
ficoml
jnp
std
sarb
push
dec
xchg
sbb
dec
es
std
lea
enter
outsl
xor
or
push
pop
inc
imul
es
push
pop
push
stos
idivb
jmp
sti
cmpsb
lret
xchg
fildl
or
inc
imul
es
push
pop
push
stos
idivb
jmp
sti
cmpsb
lret
xchg
fildl
sbb
sbb
ss
dec
push
pop
push
scas
jbe
out
lahf
jmp
loop
iret
xchg
jmp
xor
adcw
imul
es
push
fildl
stos
testb
fwait
mov
jae,pt
xor
and
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
je
fs
push
fwait
inc
mov
xchg
or
cmc
cmp
daa
aam
les
mov
cmpsb
imul
stos
push
fwait
inc
mov
and
adc
add
in
in
aam
lret
sbb
insl
mov
pop
xchg
sub
ret
add
in
fadd
adc
cmp
add
sbb
out
xor
addr16
xor
inc
ret
or
pop
mov
mov
cmpsl
mov
cmc
out
ljmp
and
xchg
push
xchg
inc
jno
int
sub
cmp
in
mov
xchg
pop
jnp
mov
cmpsl
les
out
imull
les
mov
cmpsl
dec
mov
test
jmp
stos
popf
fwait
pusha
mov
jmp
add
aam
sti
cmp
dec
sub
and
jmp
imul
cmp
pop
mov
lret
and
aad
xor
dec
adc
pushf
mov
dec
adc
es
loope
inc
or
imul
icebp
sub
push
xchg
movsb
test
mov
inc
xchg
and
xor
adc
sbb
xor
add
adc
test
sbb
add
inc
lods
inc
test
add
hlt
push
mov
dec
mov
cmp
pop
jmp
stos
cmp
xor
pop
mov
adc
push
cmpsl
mov
orl
or
add
aaa
loopne
adc
or
cmp
sub
jl
and
adc
add
hlt
cmp
sub
sbb
or
test
mov
inc
mov
and
adc
add
hlt
cmp
sub
sbb
or
test
mov
aaa
cwtl
pop
and
rcr
mov
xchg
sahf
sub
xor
sub
daa
in
mov
test
adc
outsl
mov
cmp
lret
pop
pop
int
std
adc
andl
inc
add
je
adc
in
mov
sub
xor
loop
xor
xor
call
lahf
push
and
fistps
cmpsl
sbb
pmulhuw
cmp
mov
rol
subl
mov
fcmovb
sbb
sahf
shrl
pop
std
sti
xchg
aam
inc
out
enter
fs
sbb
cwtl
mov
inc
or
xor
insl
or
adc
mov
pop
ljmp
sbb
mov
out
mov
jb
cmpsl
lea
adc
add
xor
jnp
mov
pop
dec
xor
repz
movsb
and
jle
jbe
enter
addr16
rol
jl
cwtl
icebp
cmp
jl
jnp
inc
pop
jecxz
lret
push
cmp
mov
sub
adc
pop
push
push
insl
push
sbb
scas
mov
inc
scas
jg
sub
mov
pop
adc
subb
in
cwtl
out
ss
loope
inc
ret
push
cwtl
out
cmp
mov
xor
lahf
mov
pop
lcall
in
out
arpl
xchg
ljmp
mov
dec
test
cmp
cltd
dec
or
scas
sbb
adc
bnd
stos
test
notb
inc
cmp
sbb
popf
add
arpl
inc
sbb
jecxz
arpl
cmp
cmp
sti
sahf
sbb
ss
push
out
and
xchg
repz
mov
add
pop
mov
jne
push
adc
rorl
xchg
mov
mov
xchg
arpl
sbb
cmpsl
sub
xor
mov
or
pop
test
cmpsb
arpl
push
push
test
mov
ljmp
inc
lret
ret
cmp
fidivrs
push
lcall
fyl2xp1
add
fbstp
push
data16
or
aas
xchg
or
cmp
adc
cld
cld
std
andl
cmc
std
clc
outsl
push
inc
daa
adc
xchg
cmpsb
clc
mov
sub
stos
insb
stos
out
add
mov
xchg
xchg
arpl
clc
jo
roll
xor
sbb
out
dec
push
push
test
xor
cmp
nop
in
sbb
mov
push
stos
ja
push
ljmp
lcall
jno
fsubr
xchg
dec
add
fwait
dec
sub
lock
adc
pop
imul
cmp
xchg
mov
fiaddl
call
les
in
xchg
sub
mov
dec
mov
push
sbb
stos
cli
sbb
and
adc
inc
mov
aad
out
push
loopne
pushl
mov
pop
stc
out
in
nop
out
dec
adc
subb
leave
dec
sub
ss
mov
inc
jns
pop
addb
pop
leave
pusha
push
sbb
adc
mov
mov
jnp
cmp
in
push
orl
in
cmp
addr16
mov
inc
out
rcrl
shll
fsubrl
test
rcrl
cmc
or
aad
mov
jmp
jne
pop
xchg
test
jne
or
or
mov
repnz
sbb
ret
popf
or
mov
cmp
pop
fwait
xchg
sub
lea
xor
out
int3
sub
mov
pop
sbb
push
fiadds
jns
xchg
movsl
ljmp
test
lcall
out
movsl
call
xor
nop
lds
bound
jae
push
cltd
cmp
dec
mov
insl
and
gs
jle
sbb
or
das
cmp
ficomps
out
mov
pop
fistl
push
repnz
jns
mov
pusha
mov
mov
inc
sub
lret
fwait
sarl
ljmp
add
icebp
mov
outsl
xor
lret
loopne
xchg
cmp
incb
aad
xchg
and
adcb
cmp
jbe
fildl
cmp
rep
aad
scas
mov
xor
fists
jmp
fcmovnb
inc
dec
xchg
xchg
push
sbb
xor
jl
xchg
jl
dec
pop
mov
sub
or
or
xchg
push
ss
sbb
cltd
sti
xchg
dec
adcl
iret
mov
sahf
test
jg
clc
mov
jno
xor
scas
lods
cmc
push
xor
int
mov
add
jp
jne
imul
rcr
sbb
cmc
xor
std
ja
imul
pop
inc
add
idiv
les
or
lods
push
jge
jo
cmp
pop
xchg
or
sub
xchg
xchg
test
test
sub
pop
sbb
aam
sbb
push
add
jmp
cmp
popa
outsl
ss
testb
test
ret
xor
mov
pushl
popa
jae
add
inc
dec
aas
movsl
sub
shlb
xchg
xor
movsl
mov
outsl
mov
or
xchg
push
insb
or
mov
mov
xlat
rol
std
adc
jecxz
sub
lock
lret
cwtl
adc
or
out
movsl
pop
imul
push
add
cltd
lea
jg
mov
lds
mov
xor
aad
mov
xchg
scas
jns
mov
inc
pushf
cmpsb
fs
mov
push
mov
xor
add
add
push
ja
xbegin
fs
lods
sbb
xchg
push
mov
hlt
sub
dec
leave
loope
pop
and
adc
xor
pop
sub
aad
cmpsb
and
mov
jmp
fistpll
mov
gs
xor
movsl
mov
enter
cmpsl
cwtl
add
gs
or
add
aad
xchg
sbb
adc
sub
sahf
ret
cwtl
fsubrs
std
sbb
xchg
mov
pop
mov
dec
and
dec
dec
shl
sahf
or
outsb
iret
out
dec
notl
inc
or
and
xchg
mov
mov
jo
push
pop
aam
or
push
in
add
cmpb
popa
je
jno
mov
inc
xchg
ficoms
aam
sti
test
adc
nop
inc
cmc
xor
xchg
pop
inc
mov
cmc
pop
jmp
out
imul
pop
push
icebp
push
adc
insl
filds
mov
testb
cmp
scas
rolb
push
pop
xchg
lock
daa
lods
mov
ja
inc
fnstenv
add
div
cmpl
dec
jae
fldl
iret
fs
mov
jmp
pop
mov
aad
testb
dec
mov
nop
mov
xchg
mov
scas
movsb
imulb
add
clc
outsb
fwait
mov
aaa
mov
sbb
xor
push
inc
pop
cmp
or
mov
mov
inc
or
inc
jle
sub
mov
lock
sbb
push
or
insb
fs
pop
subl
out
dec
sbbl
cld
sub
popf
scas
push
jne
pop
dec
imul
cmp
xchg
add
iret
mov
mov
xor
das
inc
insb
mov
ret
movsb
hlt
dec
pop
clc
sub
sub
out
pop
mul
repz
push
in
lcall
jns
push
push
sub
jl
mov
dec
fbstp
fldln2
test
push
ss
mov
iret
sub
and
xchg
inc
xor
mov
xchg
xor
dec
adc
cmpsl
sub
shrl
lods
xchg
clc
dec
xchg
test
pop
loope
or
lock
test
ss
cld
lock
push
imul
jge
jp
lods
cmp
pop
adc
or
inc
in
subl
jp
jmp
mov
out
or
lea
jle
mov
nop
les
icebp
lock
ss
sbb
stos
mov
lock
out
loop
jne
loope
jnp
push
adc
mov
test
and
jmp
fs
aas
push
sarb
push
mov
xchg
int
mov
loop
dec
dec
cmp
jmp
sub
inc
inc
ds
xchg
pusha
push
std
insb
scas
aas
jmp
shll
dec
loope
dec
rclb
ret
and
insl
cwtl
jge
pop
push
sar
cmp
mov
xlat
aaa
jno
iret
or
inc
cltd
insb
out
movsl
pushf
sub
pop
out
adc
cmc
inc
xor
ja
dec
jecxz
jg
add
xlat
pop
jmp
nop
sbb
loopne
repz
jno
and
cmpsb
addr16
xchg
xchg
inc
leave
imul
add
or
rcr
lds
cmp
pop
loop
je
rcll
mov
push
test
sbb
mov
push
adc
push
flds
mov
out
cmp
pop
jno
pop
in
add
test
bound
add
dec
fs
lea
or
dec
cmp
xchg
mov
aas
jb
rorb
sbb
jmp
out
jbe
nop
popa
mov
xchg
sbb
mov
dec
scas
xor
adc
ljmp
in
idiv
xchg
inc
mov
or
push
lods
cmp
mov
test
sub
inc
add
and
adc
call
cmp
inc
inc
adc
pusha
pop
inc
iret
jmp
shrl
inc
pop
fistpll
push
cs
ficoms
hlt
lret
sub
push
sbb
cwtl
and
mov
pop
in
xchg
jge
pop
loope
sti
fidivs
sub
rcrl
mov
gs
xor
push
popf
insl
dec
stos
js
into
aam
pop
mov
sbb
jecxz
pop
mov
xchg
lods
inc
cld
sahf
xor
pop
dec
js
mov
add
lret
jb
cmp
mov
cmp
add
movsl
cli
test
ret
stos
syscall
and
dec
inc
inc
adc
mov
out
adc
in
nop
pop
shlb
loopne
jecxz
rcl
xor
mov
push
ret
loopne
fs
mov
mov
sub
pop
inc
pop
push
pop
ret
lret
icebp
inc
divb
push
stos
xchg
daa
push
jp
into
xor
xor
data16
divb
jnp
lods
jne
mov
mov
xchg
in
mov
jmp
bound
xor
adc
repnz
jnp
cli
lods
mov
mov
push
repz
or
sti
fs
mov
fwait
stc
xchg
xchg
push
lahf
addr16
dec
orb
mov
leave
jne,pt
pop
daa
cli
mov
and
bnd
add
push
mov
xlat
loop
ljmp
dec
mov
lock
xchg
gs
mov
mov
outsl
fcmovu
push
in
sbbb
mov
pop
xor
xor
inc
loop
rcr
scas
add
insb
xchg
sub
inc
pushf
inc
aam
fwait
ds
cmc
divl
inc
out
mov
pop
flds
rol
int3
push
cwtl
push
mov
fwait
jne
scas
dec
jp
popf
jg
dec
je
xor
lds
ljmp
js
jle
fsubp
mov
mov
daa
gs
pop
and
imul
sbb
mov
sbb
xlat
jecxz
jb
push
add
and
hlt
call
clc
xor
out
add
aaa
push
jbe
jae
les
ss
jns
add
movsb
mov
stc
pop
lea
cmc
inc
inc
cmp
sbb
fistl
negb
pop
mov
in
aas
sbbl
cmc
cltd
outsb
clc
inc
sahf
push
or
and
mov
in
aas
push
push
data16
aam
test
ret
xor
in
sti
dec
sub
dec
scas
popa
inc
stos
adc
mov
push
cltd
pop
xchg
imul
popa
test
xor
mov
sbb
push
into
mov
jnp
imul
cmc
cmp
jno
int
jbe
into
inc
xchg
out
out
jg
mov
inc
push
push
insl
bound
mov
add
je
cmp
std
cmp
jg
and
cwtl
lea
mov
ja
dec
popa
cmpb
mov
add
shll
jecxz
lods
push
mov
inc
int3
push
loopne
out
aad
sub
imul
push
mov
fprem1
arpl
in
pop
cmpsb
or
jl
nop
lods
pop
mov
test
icebp
loop
repnz
int
sbb
scas
loopne
cli
dec
sbb
xlat
add
xlat
cs
xchg
ficomps
or
push
push
pop
lea
int3
dec
daa
ret
orb
lahf
rcl
mov
jecxz
jp
pop
sub
add
mov
fldt
iret
pop
scas
cmp
mov
and
aad
scas
les
ficoml
cmp
shlb
cmp
sahf
mov
mov
sub
cld
cmp
mov
push
ja
cmpsl
das
pop
add
stos
add
fisubs
and
add
adc
das
in
shlb
mov
mov
mov
sbb
pop
jno
insl
xchg
lods
add
das
fstps
jmp
mov
mov
push
les
mov
lret
loope
inc
arpl
out
in
call
sbb
push
xlat
lss
xchg
adc
inc
pop
sub
lods
ja
das
movsl
push
push
je
inc
ret
hlt
ret
std
inc
std
xorb
or
push
jnp
add
mov
cmp
xor
sub
push
aam
fdivrl
xchg
cwtl
sub
stos
fwait
iret
jo
sbb
pop
shll
pop
cmp
dec
cltd
inc
movsl
mov
cmp
mov
cli
stc
mov
into
lahf
xchg
int3
aad
not
popf
jle
in
xchg
mov
mov
mov
fisubs
xchg
ret
sbb
int
push
subl
orb
movsb
lret
rcll
in
mov
mov
push
andl
mov
daa
sub
fildll
jmp
fistps
aad
mov
loope
add
push
jns
imul
dec
scas
test
pop
in
jecxz
repnz
std
cmp
pop
jo
sub
pop
fs
push
inc
cmp
fwait
add
sub
insl
jl
les
dec
inc
pop
test
js
push
mov
push
insl
jbe
cmp
sub
inc
sub
push
and
in
cmp
jge
cmp
mov
aas
cmp
in
ror
repnz
sub
pop
jne
fsub
pop
xchg
jg
cmp
mov
jae
cmp
add
icebp
sahf
mov
insl
shr
mov
loop
jne
aaa
push
mov
aaa
js
adc
lock
test
dec
cmp
repz
int
sbb
and
inc
movsl
push
stos
cs
fucom
lock
jo
dec
push
cmp
inc
xor
mov
jae
insl
movsl
mov
push
inc
lret
mov
jns
jae
insb
inc
ret
mov
mov
dec
aaa
inc
sbbb
mov
mov
ja
adc
aad
lret
fisttpll
mov
mov
jge
xor
loop
xchg
xchg
mov
mov
inc
fdivrs
jp
fwait
outsb
mov
inc
cmpsl
into
cmp
or
lock
test
pop
mov
xor
inc
mov
mov
int3
neg
outsb
mov
inc
orl
pop
pop
sbb
or
xchg
sub
mov
shrl
dec
sbb
pop
movsb
or
push
sub
mov
hlt
cli
ljmp
hlt
icebp
mov
xchg
and
jle
pop
fadds
cltd
fcomp
in
lahf
icebp
imul
mov
xchg
mov
inc
xchg
jae
push
pop
mov
push
xor
sbb
push
ljmp
inc
rcll
mov
mov
test
or
aaa
shlb
cwtl
idiv
hlt
adc
cli
popa
test
mov
dec
test
adcb
je
pop
testb
push
arpl
jne
cmpxchg
push
pushf
and
nop
cld
into
mov
notl
ret
adc
addr16
aam
jno
cmp
pop
les
ss
popf
adc
and
mov
mov
jecxz
xor
adc
mov
sbb
cmp
inc
stc
jb
mov
stos
mov
dec
xor
shlb
js
jb
cmp
hlt
rorl
addr16
lcall
mov
add
je
aad
sub
popa
xchg
mov
repnz
repnz
pop
rcll
mov
push
and
stc
sub
push
outsl
cs
jl
stos
les
gs
or
not
mov
sub
lret
sub
or
adc
sahf
cld
and
push
dec
mov
dec
xchg
iret
and
mov
mov
inc
stos
addr16
out
xchg
fdiv
adc
fs
jnp
scas
xchg
dec
adc
or
mov
fdivrl
inc
fldl
pop
imul
mov
cmp
ss
xchg
sbb
lods
adc
pushf
pop
das
leave
loop
inc
test
inc
xchg
mov
cld
das
pop
push
or
mov
pop
test
in
inc
jmp
addr16
int3
outsl
dec
popf
sbb
mov
insb
iret
je
add
adc
scas
cmc
addr16
enter
rclb
faddl
repnz
popa
cwtl
xor
jp
in
test
mov
loope
sbb
push
bound
dec
sahf
mov
ljmp
daa
js
jge
mov
add
inc
or
sub
sahf
loop
dec
hlt
mov
sub
pop
xor
inc
daa
push
xor
pop
fstl
cs
sub
enter
xchg
add
popf
mov
pop
pop
rcl
pop
fsubs
add
xor
movsl
lahf
xchg
dec
add
rcrl
jns,pn
dec
adc
bound
push
imul
adc
push
push
adc
adc
jb
popa
jecxz
aas
sub
out
les
xlat
mov
pop
aad
pop
adc
shlb
mov
aas
rclb
dec
fisttpll
mov
icebp
or
mov
or
dec
int3
icebp
gs
jecxz
popa
push
jne
fnstenv
fdivr
pop
jo
dec
dec
mov
aas
adc
in
mov
jmp
mov
loop
hlt
scas
stc
push
sub
add
xorl
pop
pushf
inc
jp
sbb
fsubrs
fucomi
cwtl
fimuls
maxps
ret
pop
scas
dec
lret
loop
and
lock
cmp
push
lods
mov
add
push
xor
test
cltd
es
or
mov
cmp
repnz
pop
pop
mov
ficomps
fwait
lret
add
mov
fdivrl
mov
int
out
push
cwtl
push
adc
stc
jns
jge
mov
stos
scas
xchg
mov
add
imul
aaa
or
aaa
sub
in
sbb
mov
and
mov
aad
xchg
mov
das
daa
mov
inc
scas
leave
lret
jno
outsl
aas
mov
jg
mov
out
movsb
xchg
jo
inc
out
ja
cmp
imul
pop
insl
mov
loope
stos
loopne
cmp
mov
pop
or
in
xor
jg
inc
sar
test
push
jle
mov
push
mov
movsb
xchg
add
mov
shl
fisubrl
xor
mov
jae
xchg
fldenv
leave
mulb
lcall
sbb
jecxz
aad
pop
rdpmc
pushf
cs
lods
and
or
dec
ljmp
and
sbb
idivb
lock
dec
adc
aas
ljmp
inc
rorb
imul
mov
ret
sti
or
mov
add
push
or
xchg
pop
ret
push
mov
or
lods
inc
orl
pop
xchg
pop
lods
push
popl
mulb
ss
std
lret
ret
sbb
sbb
adc
mov
leave
frstor
lods
jae
sti
insb
xchg
adc
pop
adc
cmpb
fimull
fldt
lea
jne
fidivrl
add
and
stc
movsb
mov
popf
in
sub
fcompl
enter
inc
popa
or
adc
popa
cmp
jnp
data16
inc
cmpsl
sbb
stos
cwtl
clc
mov
pusha
pop
inc
sahf
xor
sbb
jg
test
mov
xlat
mov
dec
test
sub
mov
arpl
and
fs
xlat
mov
push
in
repnz
out
mov
lds
es
arpl
arpl
push
pop
xchg
push
or
fmul
ret
adc
xor
adc
xor
push
aad
sub
jg
add
mov
inc
sub
aad
push
xorl
loop
xor
sub
dec
inc
dec
inc
ljmp
jl
push
pop
pop
fildll
cli
and
mov
out
push
icebp
movsl
pop
jge
pop
cmpsb
stc
arpl
cmp
add
cmp
fisttpl
data16
imul
push
in
pop
fistl
jecxz
movsb
cmp
jmp
lret
xor
inc
mov
dec
pop
es
xchg
pop
dec
pushf
or
sub
cmp
xchg
out
mov
inc
mov
and
adc
add
hlt
cmp
sub
sbb
or
test
mov
inc
mov
and
adc
add
hlt
cmp
sub
sbb
or
test
mov
inc
mov
and
adc
add
hlt
cmp
sub
sbb
or
xchg
mov
inc
mov
sti
and
xchg
fildl
jle
les
sub
imul
pop
jb
jno
add
ret
into
loop
xchg
scas
ret
mov
pop
jb
bound
adc
add
xor
and
shr
ret
iret
loop
xchg
scas
sbbb
outsl
inc
pop
jb
bound
adc
add
xor
and
in
int3
sahf
mov
iret
loop
rol
ljmp
ss
push
and
adc
test
push
repnz
mov
xchg
ljmp
pop
in
add
popf
shr
std
loope
repnz
outsl
push
and
xor
inc
push
scas
or
mov
pop
das
inc
addr16
pop
test
push
mov
pop
mov
mov
and
xchg
shlb
jg
outsl
inc
xor
adc
adc
loope
xlat
and
rcrb
mov
mov
data16
std
pushf
int
je
xchg
mov
shr
pop
push
iret
mov
repnz
mov
std
add
sub
out
out
insl
and
cmpsl
cpuid
mov
outsl
inc
pop
jb
bound
adc
add
xor
and
shr
ret
iret
loop
xchg
scas
sbbb
sbb
aas
jge
inc
jnp
or
stos
fistps
sti
cld
xor
sbb
or
cmp
xor
addr16
pop
and
movsb
iret
mov
cli
int3
sbb
outsl
xor
and
jae
das
add
xor
and
shr
ret
iret
loop
xchg
scas
sbbb
outsl
inc
pop
jb
bound
adc
add
xor
and
shr
ret
iret
loop
xchg
scas
sbbb
dec
push
ret
mov
xlat
mov
inc
stos
and
xchg
pop
mov
jge
pop
cltd
insl
push
inc
jg
inc
insb
fcomi
push
fcoms
or
lods
push
hlt
jns
gs
mov
and
mov
dec
jl
test
dec
and
mov
sub
sbb
xchg
xchg
or
sbb
dec
push
mov
cmp
sub
insb
dec
lods
dec
lods
cmp
jae
loop
jns
leave
xchg
sbb
dec
cltd
add
cld
dec
mov
push
xchg
dec
clc
mov
xchg
leave
sti
popf
mov
xorl
cmp
and
xchg
cmpb
jne
or
es
sub
xor
inc
popa
mov
ret
ljmp
sbb
or
adc
mov
pop
mov
adc
cwtl
or
xor
call
mov
movl
mov
lahf
icebp
xor
mov
loop
jp
daa
lods
popa
lods
imul
lea
out
add
cmp
out
jl
or
jae
les
idivl
in
fsubr
cmp
mov
and
aam
shrb
mov
pusha
jl
push
jae
push
cmpsl
mov
cmc
test
xlat
clc
movsl
scas
xchg
test
jle
lret
sbb
jne
cwtl
fiaddl
sbb
jne
push
mov
mov
add
pop
scas
xchg
mov
and
addr16
dec
jmp
imul
in
leave
cmp
sarb
inc
mov
mov
out
jns
pop
sub
jne
dec
xor
xor
or
dec
mov
mov
jmp
pop
ret
inc
cmp
jl
jns
scas
jb
jno
adc
je
jo
pop
sbb
test
mov
popa
mov
les
iret
push
xor
or
or
sub
xor
jbe
jnp
daa
jbe
cmp
adc
mov
mov
sbb
ret
cmp
mov
je
lea
mov
pop
mov
xor
lods
lret
fisttps
outsl
ss
pushf
std
mov
out
jp
add
xor
xchg
xchg
mov
pop
xchg
hlt
mov
mov
mov
or
push
cmp
enter
inc
movsl
xchg
cmpsb
outsb
inc
out
daa
mov
das
loop
jbe
aam
pop
push
push
popa
scas
inc
lock
ljmp
or
dec
pop
notl
popa
push
add
mov
adc
test
fwait
or
push
dec
mov
arpl
mov
daa
imul
sbb
jbe
cmpsl
mov
int3
mov
adc
pop
jle
pop
std
out
lock
test
inc
jno
int3
stc
fs
int
sbb
xor
sbb
into
push
cld
xchg
jmp
xchg
and
clc
repnz
adc
fcompl
test
xchg
fisttpll
iret
cmc
jp
add
loopne
xchg
jbe
pushf
call
lods
call
mov
adc
iret
std
scas
out
adc
inc
xchg
mov
movsl
jg
xlat
pop
sti
lock
testl
lret
xor
xor
bound
shrl
or
addr16
shll
adc
sub
addr16
out
aad
inc
lret
inc
in
or
cmpsl
and
pop
mov
lds
cmpsl
mov
jbe
mov
add
out
jl
test
mov
lods
lea
xchg
add
test
push
testb
repz
xchg
dec
xlat
jo
push
sbb
pop
add
add
xchg
xchg
push
add
stc
fmul
arpl
adc
mov
jle
inc
inc
mov
adc
pop
xchg
jg
sbb
out
mov
push
rorl
sahf
lret
call
cmp
xchg
hlt
pop
mov
sub
push
std
rcll
sub
imul
push
pop
or
sbb
pop
int
loopne
sbb
and
push
xchg
push
pop
push
movsl
add
std
out
xchg
jns
dec
lds
outsb
ljmp
aas
fs
or
imul
cmpsl
cli
js
ret
xor
roll
into
aas
jp
out
and
pushf
ss
iret
insl
push
and
xchg
and
push
xlat
test
pusha
adcb
xchg
sarb
sub
lcall
out
cmp
fs
mov
hlt
stos
popa
xchg
and
bound
mov
in
jo
adc
lods
das
mov
clc
aam
adc
jl
dec
sbb
mov
in
mov
pop
sbb
xor
mov
or
mov
aam
cmp
sub
and
mov
jge
mov
stc
fdivrl
out
or
aam
shl
ds
sbb
xchg
ret
jl
adc
dec
mov
dec
dec
sbb
gs
fnstsw
fsubr
mov
scas
lret
outsl
nop
mov
cmp
sahf
mov
sbb
inc
cmpsb
mov
and
ret
or
aas
int3
adc
aam
fwait
mov
or
insb
push
sbb
mov
xchg
dec
adc
ret
and
fcmovne
dec
outsb
shlb
es
inc
adc
pop
out
dec
pcmpeqd
jbe
daa
sahf
sti
inc
inc
lret
mov
cwtl
aad
adcb
adc
xor
push
out
inc
test
sub
ljmp
sub
scas
cmp
inc
loopne
mov
aas
mov
xchg
js
sub
xchg
jb
lret
outsb
lds
iret
sahf
in
ljmp
mov
enter
lcall
call
xchg
shrl
aam
mov
and
adc
inc
sbb
sub
or
cmp
mov
rcrb
push
mov
sbb
andl
push
inc
xor
xchg
dec
jmp
dec
dec
test
daa
cld
cmp
jmp
inc
mov
popf
jbe
cld
nop
jae
mov
jp
cmpsb
movsl
fildl
mov
and
sbb
sbb
movsb
outsl
add
push
in
xchg
push
pusha
fmuls
sub
inc
rcll
sub
mov
rol
faddl
adc
xchg
repz
jecxz
inc
sub
cmc
inc
dec
and
scas
inc
jns
xchg
cld
andl
iret
and
sbb
push
push
mov
jle
jle
addr16
stc
aas
ja
jae
movsl
mov
test
push
sub
mov
sbb
mov
jle
cmpl
scas
mov
xor
push
jg
xchg
inc
push
inc
mov
scas
gs
mov
cmpsl
rcll
aad
out
sysenter
xchg
sbb
das
pop
sarl
leave
sub
std
enter
sti
call
mov
es
insl
dec
sub
push
test
sub
out
xchg
xchg
cli
pop
xlat
ljmp
mov
mov
mov
daa
adc
shld
insl
jae
mov
sub
int
into
loop
dec
jo
xchg
cld
addr16
or
pop
or
lock
dec
lds
cli
cmp
jno
xor
pop
mov
insb
movsb
loopne
sbb
scas
mov
shufps
push
out
js
or
sbb
je
jg
and
cwtl
mov
cld
jae
loope
pop
mov
push
imul
jnp
xchg
mov
lock
call
dec
lret
xor
int
jne
daa
out
mov
call
mov
in
mov
mov
mov
dec
fs
pop
ss
xor
das
push
ljmp
hlt
enter
fwait
call
outsl
push
jae
fsts
repz
nop
nop
adc
insl
stc
pop
insb
lods
cmp
int
adc
fildl
adc
push
test
in
add
scas
dec
sbb
xor
movsl
cmp
pop
lods
dec
or
into
and
scas
call
dec
sbb
adc
or
sub
lock
push
xchg
and
lds
xchg
pop
jg
xchg
mov
aad
lea
dec
cli
mov
cmp
cs
jecxz
sbb
pop
je
ja
push
xchg
sti
ret
add
xor
jge
xor
mov
imul
inc
inc
xchg
xlat
mov
xor
sbb
or
out
mov
mov
repz
ljmp
push
fs
or
jae
popf
and
push
and
push
push
notb
rcrl
cmpxchg
mov
icebp
add
sbb
aam
dec
mov
enter
loopne
sti
jl
call
ds
xchg
dec
pop
pop
add
shl
adc
sub
mov
inc
add
mov
lock
xor
and
aam
adc
jmp
fldl
loopne
arpl
sub
cmp
scas
repnz
mov
arpl
mov
cmp
sub
cmp
add
push
and
dec
jl
and
or
sti
push
sub
xor
out
or
and
adc
sbb
je
popa
out
inc
mov
xchg
and
pop
clc
and
fs
testl
mov
mov
mov
jno
jp
sbb
and
xor
dec
into
lods
push
enter
cld
imul
fs
test
cmp
mov
mov
push
shll
sub
test
inc
into
adc
xor
mov
pop
inc
xchg
rcr
fsubrl
sub
sbb
xor
scas
movsb
pusha
push
mov
push
inc
sbb
xor
sub
pop
adc
jmp
cmpsb
in
rcrl
imul
dec
mov
fcoml
shr
add
xor
fsubl
inc
mov
movsl
push
cmp
mov
mov
in
mov
sahf
mov
jo
or
sub
xchg
xchg
pop
push
mov
or
cli
or
insl
mov
push
inc
dec
xor
stos
aaa
rorb
insb
adc
push
cli
insl
test
mov
insb
jne
orl
sub
stc
out
push
and
insb
lds
cld
xlat
cltd
dec
stc
mov
rol
loopne
cmpsb
sub
in
mov
mov
imul
leave
aam
push
xor
push
pusha
mov
stos
aad
xchg
fsts
cmp
cmpb
dec
lds
xlat
push
mov
mov
cmp
mov
cli
dec
add
push
addr16
nop
jp
xor
dec
js
and
mov
push
sbb
and
mov
loop
pop
scas
repz
test
lahf
dec
sbb
lret
lcall
jno
repnz
mov
add
push
mov
aaa
cmp
mov
mov
mov
inc
lock
mov
nop
xchg
add
inc
cmp
mov
inc
in
in
gs
in
jmp
repnz
out
pop
or
inc
sarl
cmp
test
mov
jecxz
movsb
adc
adc
mov
pop
in
jge
ja
dec
dec
inc
jo
movsb
xorb
jge
into
lret
sub
rcrl
fbstp
adc
jp
fwait
outsb
into
adcl
hlt
mov
mov
and
rcrb
cld
mov
test
xchg
or
shrl
rol
mov
lods
fisttpll
repz
stos
shll
outsb
dec
and
mov
inc
gs
jbe
jg
cmp
adc
pusha
ljmp
sbb
es
pusha
jo
xchg
stos
loope
ret
hlt
call
imul
icebp
repnz
xchg
dec
mov
push
pop
stos
or
stos
jno
jb
neg
pop
jmp
inc
int
sub
inc
ficompl
insl
fwait
jne
push
enter
xchg
sub
mov
add
das
pop
or
adc
jb
call
popf
out
lock
mov
fimull
mov
shll
ljmp
adc
arpl
sarl
push
inc
dec
sbb
mov
dec
pop
mov
push
sti
or
or
dec
clc
mov
mov
fistpll
or
xchg
movsl
jl
iret
xchg
or
jmp
test
daa
gs
addr16
pop
adc
outsl
mov
xchg
lret
sbb
stc
xor
or
cmp
ljmp
or
add
sub
sub
push
inc
adc
adc
sbb
jg
xor
sub
adc
mov
add
adc
outsl
jecxz
int
loop
insl
or
jb
sub
mov
sub
cwtl
adc
dec
sub
mov
int
call
insb
jno
cld
xlat
add
lcall
ret
adc
mov
push
jl
xchg
xchg
fcmovbe
mov
inc
pop
es
push
ss
fstl
dec
fsubp
mov
insb
out
rorb
pop
bound
jnp
repz
leave
pop
push
push
loope
push
fnstenv
cmp
adc
movsl
jo
pop
xor
lcall
addl
out
push
loop
mov
push
mov
push
pop
cld
lock
test
pusha
xchg
iret
insl
adc
fmull
lahf
aad
int3
push
dec
lret
pusha
les
or
dec
pop
icebp
imul
arpl
adc
mov
pop
push
in
and
push
aad
jge
das
and
xor
imul
in
xchg
sub
or
inc
js
pop
cmpl
jg
icebp
pushf
xor
push
xor
xchg
sbb
push
xor
adc
pop
int3
das
cmpsl
add
push
adc
outsb
hlt
clc
cmp
pop
pop
jnp
cmp
leave
mov
fwait
mov
aaa
std
jmp
jmp
push
loop
es
and
mov
jbe
inc
push
out
mov
lods
in
es
dec
bound
cmpb
pop
pop
and
xor
sub
jns
mov
fwait
push
jo
test
fnsave
shrb
addr16
sbb
stos
add
and
cmc
inc
outsl
mov
xchg
imull
and
cmp
lret
sahf
lock
data16
pop
dec
cmpsl
pop
fstp
push
sarl
es
das
mov
test
gs
loope
scas
inc
rclb
add
iret
sbbb
sahf
rcrl
mov
or
pop
push
sub
mov
pop
rcrb
call
test
inc
testb
dec
xchg
negl
repnz
out
xor
movsb
filds
push
cmpb
pop
negb
out
adcl
out
xchg
jnp
cwtl
push
add
xchg
push
inc
cmp
lahf
lea
lods
and
lea
and
mov
sbb
cmc
cmp
nop
push
mov
xchg
xchg
or
lds
cmp
xchg
dec
stos
or
mov
outsb
stos
xchg
pusha
scas
push
nop
loop
ja
mov
jmp
pop
das
push
dec
lahf
cmpsb
jp
sub
mov
call
pop
out
sub
das
push
lcall
xchg
lods
or
orl
stos
xchg
inc
nop
inc
dec
mov
inc
mov
scas
sub
shrl
hlt
dec
mov
inc
stos
push
xor
mov
clc
int3
sbb
xor
aad
and
mov
mov
sti
test
sbb
and
sub
out
mov
lock
cmp
fs
js
pushf
cli
pop
cmpsb
ds
add
push
add
outsb
mov
sar
pushl
xor
sahf
inc
mov
and
xchg
imull
inc
arpl
dec
ret
jmp
dec
out
fldl
dec
inc
test
jge
pop
hlt
int3
scas
repz
pop
jns
mov
jns
push
sbb
mov
lahf
xchg
mov
es
mov
aaa
bound
jnp
aas
pop
ljmp
lahf
and
xlat
push
ja
push
sub
out
inc
popf
pop
adc
movsl
loopne
rolb
mov
stos
pop
add
in
add
notl
push
add
rorb
sahf
dec
syscall
pop
or
int3
test
enter
xchg
scas
adc
jle
xabort
addr16
mov
or
out
mov
cwtl
pop
mov
cli
fisttps
inc
addr16
pop
in
mov
ret
cwtl
xchg
xor
iret
xor
jl
or
aaa
icebp
push
mov
xchg
aad
cmp
push
and
mov
pop
fmul
js
rorl
aaa
gs
sahf
aaa
jp
jge
out
ljmp
in
pusha
jge
push
push
cmpsb
push
mov
push
setl
xor
jge
mov
popl
rcl
adc
rolb
hlt
cmp
xor
mov
test
push
cltd
jg
lods
sbb
add
mov
nop
jo
xchg
cmc
out
inc
test
and
shll
inc
pop
xor
mov
pop
dec
iret
sahf
adc
pop
adc
ret
leave
aaa
imul
and
pop
xchg
mov
xor
test
enter
mov
mov
dec
rcrl
cmpl
jge
ss
insl
pusha
push
push
idivb
mov
loopne
fldenv
jp
nop
cmp
push
or
mov
sbb
ja
sbb
aam
and
in
lock
ret
jmp
sbb
addr16
inc
push
xor
or
mov
pop
jl
inc
aam
mov
sahf
cld
add
out
adc
pop
arpl
adc
stc
hlt
mov
jno
mov
cwtl
mov
inc
leave
adc
shrb
je
sub
pop
xchg
pop
xor
pop
jns
pushf
out
push
lods
dec
ljmp
ficoml
lahf
cltd
sub
orl
hlt
pop
sbb
adc
lret
or
xor
aam
outsl
dec
pop
and
inc
add
iret
fxch
popa
xor
stos
fiadds
cmp
pop
subb
push
sbb
out
fidivrl
cltd
js
dec
and
inc
push
inc
hlt
xorb
jo
mov
mov
jg
mov
mov
push
mov
aam
in
push
sahf
cmp
mov
sub
jae
int
push
adc
ficomps
leave
fldt
mov
add
lcall
inc
add
lcall
fsubrl
pop
sub
dec
aas
cmp
cmp
and
popf
dec
add
xchg
mov
inc
mov
pop
xlat
adc
mov
push
and
ss
ljmp
or
pop
push
icebp
outsl
mov
adcl
inc
cmp
mov
shll
sti
sub
in
insl
xchg
dec
movl
mov
fwait
popf
inc
inc
jge
mov
movsb
out
push
mov
mov
xchg
aaa
sbb
mov
shl
das
inc
cmpb
xor
xchg
movsb
hlt
fcompl
pusha
add
mov
fcomip
nop
in
stos
in
cmp
lock
sbb
adc
repz
push
movsl
sub
popa
pop
and
push
popf
dec
cld
test
dec
push
scas
and
sbb
push
fwait
pushf
sub
dec
sarb
cmpl
rol
and
outsl
lods
xchg
sbb
movsl
and
es
mov
lcall
insl
mov
xor
dec
iret
shlb
popa
and
cmpl
sub
mov
mov
push
dec
xchg
jno
mov
pop
xor
pop
sbb
and
lret
jbe
repnz
inc
rep
mov
out
ja
xchg
or
sub
jp
insl
sahf
xor
pop
add
enter
push
xor
imul
loope
cwtl
dec
incl
mov
add
dec
mov
pusha
and
outsl
imul
and
pop
mov
mov
stc
sbb
in
push
and
cmp
sub
push
inc
adc
add
jo
cmp
mov
js
xor
inc
pushl
jmp
cmpsl
sub
in
jne
and
push
push
adc
dec
outsb
add
cmp
repnz
pop
and
jp
test
mov
and
xor
cmp
xchg
in
add
repz
and
sbb
pop
add
shll
lock
adc
out
daa
sub
mov
fs
aaa
xchg
insb
cmp
fwait
inc
loop
pop
lahf
sub
in
lahf
rorl
and
mov
jnp
jp
cmpsl
fbstp
pushf
pop
lcall
dec
pop
sbb
mov
cld
jg
test
dec
jo
mov
rcll
mov
cmp
mov
push
xor
and
fnstsw
paddsw
out
repz
aad
mov
pop
dec
jle
inc
pop
shll
insl
pop
jle
ffree
and
out
or
or
arpl
push
mov
jmp
dec
dec
and
pop
sbb
mov
xchg
out
mov
fsubrs
push
call
call
xor
pusha
lcall
inc
xor
pop
jae
bound
adc
add
xor
and
shr
ret
iret
loop
xchg
scas
sbbb
outsl
inc
pop
jb
bound
adc
add
xor
and
shr
ret
iret
loop
xchg
scas
sbbb
out
inc
fbstp
arpl
xor
ret
fcomip
iret
loop
xchg
scas
sbbb
outsl
inc
pop
jb
data16
adc
sbbb
paddusw
sub
iret
xchg
iret
sbb
jge
dec
lcall
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
rcll
inc
repz
bound
pop
and
inc
enter
loop
xchg
add
rcll
inc
repz
bound
xor
ret
arpl
adc
add
rcll
inc
repz
bound
xor
loope
xchg
dec
mov
pusha
fidivrs
dec
aad
push
ret
xor
test
in
cmp
pop
daa
xchg
push
cltd
ds
sbb
idivl
push
jg
push
sbb
mov
mov
insl
cmp
in
adcb
xor
sub
cmpb
imul
jmp
sub
mov
or
push
aas
jecxz
xchg
ffreep
push
test
xor
adc
ret
push
cmp
in
subb
and
cltd
fldt
cltd
mov
mov
mov
xlat
arpl
add
sub
sti
push
mov
add
pop
inc
mov
stos
add
sub
mov
add
xor
ret
inc
repz
bound
xor
ret
arpl
adc
and
xchg
push
stos
cmp
push
lret
push
loop
adc
setb
push
ja
ja
sarb
mov
mov
push
out
inc
mov
mov
mov
xchg
es
notl
inc
xlat
and
mov
pop
loop
xchg
and
and
inc
ret
arpl
adc
and
repz
bound
xor
ret
arpl
adc
and
dec
sbb
jge
push
mov
mov
fdivs
icebp
jmp
imul
xchg
lods
and
mov
nop
mov
lcall
push
mov
or
sbb
or
mov
insl
sub
outsb
in
outsl
ja
dec
fsubrs
pushf
cmpsl
mov
ficompl
movsb
sub
or
ja
mov
mov
sbb
fdiv
mov
xchg
push
movsl
pop
jnp
dec
enter
mov
adc
adc
cmp
mov
out
shll
andb
lods
push
sar
xchg
dec
mov
and
dec
add
pop
bound
sub
in
lea
or
mov
cmpsb
in
xchg
push
rolb
add
scas
sbbl
cmpsl
lock
stos
cltd
dec
inc
mov
mov
insl
pop
js
push
pop
pusha
mov
aam
mov
ja
movsl
mov
mov
out
push
inc
mov
dec
roll
cmp
arpl
out
sbb
or
push
cmp
jae
gs
into
mov
roll
aad
pop
mov
jbe
andb
jmp
lock
mov
push
pop
das
fdivp
pop
jg
into
std
xor
mov
movsb
cmp
jge
out
sbb
addr16
and
lods
sub
aaa
push
and
popa
lock
jne
popa
add
in
push
pushf
xor
xor
or
ret
in
jecxz
ss
sub
fldt
pop
insl
cmp
dec
sub
xor
orl
js
push
add
loopne
inc
cmp
mov
movsl
xchg
enter
in
pop
lock
mov
dec
adc
pcmpeqw
gs
orl
pop
mov
mov
daa
sub
pop
pop
inc
insb
enter
lret
into
daa
out
je
addb
test
pop
push
pop
bound
cmp
pushf
mov
cmpsl
lret
push
lods
arpl
insl
jge
xor
in
test
das
adc
inc
popf
imulb
fiaddl
mov
imul
in
dec
xchg
push
xchg
adc
and
popa
enter
mov
leave
mov
jp
pop
push
and
cwtl
rcrl
test
in
aas
mov
mov
mov
pop
cmpsl
add
shlb
adc
xor
push
and
psubusw
in
xor
cltd
ret
mov
int
aaa
mov
inc
sbb
cmpsl
mov
jb
fsubl
xchg
sbb
sub
jno
xor
sub
jp
jge
outsl
mov
lea
dec
cmp
int3
mov
popf
repz
insb
and
push
test
sbb
dec
je
dec
nop
adc
popa
push
push
call
scas
push
bound
and
dec
cwtl
mov
mov
cmp
sbb
adc
jl
or
and
test
dec
scas
divb
std
out
cmp
lea
sub
shrb
jns
in
mov
cld
aam
pop
shrl
int3
push
cwtl
test
jp
movsl
mov
loop
adc
dec
aad
mov
mov
cmp
insl
push
dec
mov
insl
jle
daa
test
inc
mov
and
cmpsb
test
jno
fdivrs
cmpl
inc
pop
std
jns
fnstsw
sahf
add
add
lods
add
jns
cwtl
xchg
sahf
cwtl
movsl
addr16
mov
xchg
lret
xor
sbb
push
mov
push
mov
imul
add
shlb
shl
jecxz
mov
xor
sub
ret
popf
in
sbb
xchg
xchg
mov
xor
mov
and
xchg
lcall
outsb
jne
inc
out
pop
xor
mov
loop
les
stos
outsl
shrl
mov
aad
adc
sub
aam
jmp
adc
or
lret
xchg
xor
xchg
stos
jnp
mov
stos
mov
sbb
enter
outsw
stos
pop
pushf
cmpsl
in
pop
popf
dec
or
jl
jmp
and
repnz
xlat
lret
aas
jns
xor
mov
jge
pop
mov
lock
shlb
push
setns
into
xchg
lret
imul
sahf
lea
or
cld
pop
dec
jnp
sub
cltd
mov
mov
inc
dec
sarb
sbb
ss
roll
int3
push
xlat
sbb
in
xor
and
cmp
sbb
dec
xchg
insb
add
sub
inc
fcoms
and
add
adc
out
xor
pusha
jg
sahf
dec
or
mov
scas
into
dec
inc
push
int3
gs
popa
add
push
cwtl
jle
daa
cmpsb
pop
incb
add
sub
aaa
jo
ret
shl
xor
xlat
pop
inc
ret
cmc
push
add
and
cmp
mov
stc
lahf
outsl
adc
lcall
adc
mov
lock
arpl
jns
pop
repnz
cmpl
stos
adc
xchg
or
or
clc
jge
jae
out
test
jl
movsl
mov
xchg
mov
int3
in
push
test
nop
xchg
lcall
inc
enter
clc
jb
clc
repz
aam
xchg
sub
inc
ret
cs
aam
jae
dec
ljmp
aaa
mov
ret
imulb
pop
gs
rsm
jl
jb
jae
xchg
lcall
adc
adc
popf
ja
and
or
adc
dec
mov
popf
fdivl
cmp
and
aam
sbb
mov
xor
sbb
andb
lret
mov
test
jns
fldenv
jb
jecxz
mov
aad
pop
xchg
and
xor
push
xchg
fisubrs
mov
out
fisubrl
outsb
mov
push
ret
shrb
rclb
stc
movaps
jo
fbstp
lcall
xchg
jno
pop
dec
cmp
and
sbb
add
jno
jle
movsl
ja
aad
gs
cwtl
cwtl
sub
ret
icebp
push
call
jge
jo
shll
mov
push
xor
bnd
add
sub
cmp
repnz
inc
lret
mov
lds
test
pop
out
pusha
pop
mov
sbb
stos
xchg
into
and
ljmp
jbe
xchg
fistps
imul
test
add
mov
testb
mov
lock
arpl
mov
mov
int
scas
sub
hlt
loope
ljmp
push
arpl
or
xor
cli
mov
fldz
lock
jae
adc
mov
outsl
mov
inc
incl
inc
mov
sti
push
push
lret
mov
jle
and
ds
cwtl
push
jle
mov
mov
data16
rcll
int
std
inc
movsl
cli
dec
mov
push
and
xor
sbb
lcall
or
push
rcrb
xchg
push
xchg
pop
or
and
jp
fcomp
jns
push
daa
shrb
mov
mov
ja
or
fsubr
fisttps
mov
adc
daa
xor
mov
lods
cmp
xor
addb
out
cmpsl
enter
mov
xor
mov
clc
or
jecxz
sub
sbb
outsl
adcl
xor
imul
xor
sarl
in
ja
xchg
and
jge
andb
jmp
leave
testl
jl
iret
add
cmpsl
outsb
imul
ret
mov
jecxz
jl
cld
pop
and
mov
sbb
fwait
negb
pandn
icebp
outsl
push
loope
cwtl
jno
insl
sub
cmpsl
sahf
and
jmp
jmp
adc
mov
jecxz
cwtl
cmp
pop
aad
xorb
or
nop
dec
jl
inc
rcrl
mov
push
insl
jecxz
stos
cmpsb
xor
notl
ja
mov
pop
into
js
idivb
pop
ljmp
movsl
mov
daa
cmc
in
pop
push
mov
adc
les
psrlq
popf
popf
push
cmp
jae
stos
out
mov
inc
jb
add
jno
sahf
jle
or
pop
data16
sbb
sbb
mov
or
mov
in
inc
pusha
push
mov
rclb
pop
xchg
and
mulb
call
dec
dec
lret
or
xlat
lea
or
xchg
ja
popa
js
mov
mov
cmp
insb
mov
loope
pusha
add
xor
js
xlat
in
inc
jno
jmp
xchg
jecxz
push
sbbb
icebp
cmpsl
sub
stos
iret
pop
lcall
std
xor
in
cld
xor
or
jo
shr
icebp
or
dec
bnd
cwtl
push
lret
mov
mov
dec
insl
add
dec
mov
rclb
inc
lret
add
add
stc
pop
push
in
pop
mov
scas
pop
hlt
xor
inc
popa
loopne
mov
pop
mov
mov
xchg
out
jge
daa
pusha
leave
and
sub
testl
cli
arpl
ds
stos
cmpsb
or
add
adc
arpl
jl
fdiv
xorl
movsl
pop
fcmovb
xchg
add
daa
add
or
std
cmc
jmp
mov
enter
push
cmp
push
je
jb,pt
sarb
or
jo
push
xadd
add
push
enter
cmc
mov
dec
add
mov
mov
adcb
sahf
dec
cwtl
ret
das
std
js
leave
jnp
sarb
frndint
in
mov
jbe
stc
fistps
sbb
mov
mov
rclb
mov
icebp
inc
lods
sbb
decb
xchg
xor
jmp
ljmp
xchg
test
fcompl
jns
fiadds
jnp
fiaddl
insb
jl
addr16
dec
daa
mov
scas
inc
notl
rclb
sti
pop
in
rcll
popf
fldl
cs
es
or
ret
cli
mov
push
xchg
ret
mov
xor
jmp
mov
int
adc
lahf
push
in
adc
adc
cltd
mov
outsb
add
cmp
or
scas
dec
fisttpl
inc
int
push
sbb
mov
repnz
das
scas
aas
scas
xor
add
fadds
fs
cmp
hlt
inc
sahf
ds
iret
fnsave
push
jmp
sbb
xor
push
out
aaa
sub
repz
roll
es
pop
jl
mov
jae
sahf
dec
mov
pop
data16
xor
push
mov
test
ficoms
std
xchg
mov
inc
add
movsb
xchg
sub
rcrb
sub
mov
jecxz
inc
insb
aaa
sbb
add
into
mov
aad
cmp
xchg
fimuls
das
dec
inc
xchg
pop
cmpsl
fstl
mov
rol
es
insl
mov
adc
mov
icebp
aaa
je
adc
adc
sub
iret
cmp
xchg
enter
mov
mov
cmp
mov
incl
jp
aas
arpl
sbb
cmp
fsubs
test
daa
aas
pop
cmp
xor
adcl
mov
and
std
data16
sub
iret
clc
sarl
xchg
mov
shlb
fsubs
inc
push
jne
fmull
fwait
in
push
pushf
shl
add
outsl
pop
mov
data16
dec
inc
mov
hlt
fdivrs
stc
jp
adc
aaa
test
mov
xor
outsb
mov
jmp
xchg
int
sbb
mov
fidivrl
pop
mov
ljmp
adc
ja
jbe
or
stos
lret
pop
push
insb
jmp
push
mov
cs
lahf
pop
mov
adc
fsts
in
lds
cmpsl
or
dec
inc
sbb
ds
shll
in
repnz
or
sbb
adc
xchg
push
push
roll
mov
xchg
xchg
ficomps
pop
pop
and
cmpsl
xchg
mov
outsb
adc
fcmovbe
sub
rorl
xor
jnp
jle
mov
jl
nop
jo
jg
or
ja
mov
xor
shlb
shlb
into
xchg
sub
fistpl
loope
mov
imul
and
push
and
fsubrs
mov
or
mov
subb
jb
shrb
and
dec
mov
cmp
jle
mov
popf
add
jg
cmp
pusha
cmpsb
les
xor
movsl
dec
bound
roll
dec
mov
xor
cmpsl
ret
sti
push
fiadds
xchg
div
push
sbb
push
xchg
aad
outsl
cmc
xchg
movsl
rcr
cli
xor
movsl
jbe
jns
and
sub
inc
ds
push
jl
insb
sbb
add
pop
shll
mov
pushl
jl
xor
add
js
add
dec
push
mov
lods
js
ret
mov
xchg
js
mov
fmuls
lahf
pop
cmp
pusha
jae
repnz
cmp
add
int
push
push
in
mov
dec
pop
cwtl
sbb
in
xchg
sarl
outsl
shl
xchg
jge
cmp
cli
bound
inc
lods
xchg
les
ret
jb
jp
ret
or
inc
outsl
aam
ss
pop
loope
sbb
std
scas
fdivrl
loopne
pop
fucomip
xlat
ljmp
in
push
loopne
pushf
ja
or
mov
push
xor
mov
outsl
neg
xchg
mov
ss
test
push
push
add
out
cmp
fwait
jecxz
cmp
dec
clc
cli
jno
adc
xchg
mov
pop
or
and
inc
das
aas
or
test
sub
bound
or
fldt
stos
test
dec
mov
or
jge
test
mov
sub
jns
xchg
aaa
and
mov
adc
sub
jne
movsl
lahf
cmp
sbb
cmp
sti
hlt
shrb
shr
gs
or
out
xchg
outsb
jp
fnsave
or
into
int3
out
add
cs
add
movsl
ss
or
xchg
cmp
das
sarb
insb
cwtl
xor
jne
or
fistpll
rclb
adc
push
or
or
fstps
sub
test
sbb
add
cltd
enter
mov
ja
inc
pop
ljmp
fisubs
clc
aad
cmp
ds
dec
xchg
test
mov
enter
fcoml
icebp
or
ja
lret
das
push
mov
push
cmp
jmp
add
lcall
popa
or
mov
sub
jecxz
pop
imul
cmp
mov
jns
loop
mov
push
xor
test
lret
add
in
sbb
movsb
gs
pusha
leave
or
out
pop
mov
mov
orl
scas
xlat
or
mov
nop
or
aam
sbb
and
adc
mov
pop
loopne
sbbb
movsl
mov
sahf
xor
fsubs
xor
add
or
jecxz
pop
inc
incl
add
mov
push
xchg
ret
insb
cmp
das
jge
cltd
mov
sub
test
sub
fimuls
dec
ret
shll
pop
mov
ret
lret
pop
xchg
and
sub
mov
adc
inc
jnp
mov
ret
mov
iret
mov
mov
xor
jge
jp
div
or
xor
push
andb
dec
push
pop
rorl
js
push
ja
lods
mov
mov
xor
mov
mov
pop
push
push
add
fistpl
outsl
or
inc
push
sahf
inc
pop
adcb
fdivs
fdivs
loop
xchg
xlat
mov
out
bsr
dec
push
mov
es
xor
mov
enter
stc
nopl
jmp
and
aas
push
iret
stos
jb
nop
and
dec
iret
cld
cltd
adc
or
aam
loope
rorl
adc
ret
jecxz
inc
xchg
jle
xchg
leave
push
js
mov
mov
insb
adcl
push
lretw
mov
jp
push
inc
push
lods
jg
and
test
stc
cmp
scas
push
mov
data16
xchg
lcall
mov
out
xor
mov
jnp
je
mov
test
std
cli
loopne
test
aaa
xchg
pop
mov
mov
push
xor
icebp
aam
mov
push
dec
dec
push
xor
fidivl
mov
ljmp
mov
daa
aam
sti
xchg
str
mov
mov
es
fistl
test
or
inc
ja
lea
adcb
or
movsb
repz
xor
xor
das
fdivs
in
mov
mov
dec
push
lahf
dec
rclb
cmp
test
sub
mov
jno
push
imul
or
adc
push
inc
mov
mov
and
jl
inc
jmp
jnp
inc
xchg
kmovw
repz
mov
fisubrs
std
jnp
imul
test
js
out
aas
aam
ret
mov
in
movsl
or
dec
mov
mov
ja
movsl
xchg
gs
daa
add
cwtl
inc
imul
and
jp
inc
testl
jo
cli
shlb
and
push
cs
pop
xor
sbb
xchg
or
pusha
ds
sbb
pop
ret
clc
test
inc
fdivs
or
sbb
sub
les
pushw
inc
jp
dec
xchg
mul
sub
push
sub
sub
ror
xchg
divb
dec
sti
nop
iret
pushf
jmp
jo
or
ror
mov
in
adc
jmp
inc
scas
int3
ljmp
pop
add
loope
sbb
fcompl
cmp
mov
ret
jnp
xlat
lds
mov
xchg
inc
push
xchg
lahf
add
lcall
sub
jnp
xlat
inc
jns
xor
daa
dec
lods
ficoms
repz
push
into
sbb
ss
pop
adc
mov
mov
mov
mov
lcall
iret
add
xchg
jbe
xchg
push
push
pop
jmp
in
fwait
shlb
sbb
push
or
xor
insb
ja
in
mov
mov
faddl
test
data16
add
adc
dec
out
int3
add
mov
inc
or
cmp
ja
xchg
sbb
mov
xchg
fwait
roll
int3
repz
push
add
jp
andb
les
insl
dec
ljmp
repnz
cmpsb
mov
mov
imul
cmpsw
and
sahf
inc
xor
mov
iret
push
hlt
sub
xorl
scas
inc
lcall
test
xchg
mov
push
insb
out
fsubs
add
cmp
adc
jl
jge
pop
daa
mov
jge
scas
cwtl
out
ljmp
cld
testl
xor
push
push
daa
daa
popf
xchg
xor
adc
or
push
aad
xchg
enter
mov
mov
in
xorl
push
pushf
sbb
cli
sbb
in
add
ret
push
sti
clc
pop
jae
cld
addr16
cmp
push
icebp
cmp
cmpsb
xchg
push
xor
lock
mov
in
xor
or
jbe
mov
addl
addr16
mov
mov
pop
dec
sahf
push
mov
test
pop
out
jb
sbb
testb
stos
sahf
push
inc
xchg
popl
data16
insb
scas
cmp
fiadds
pop
xchg
mov
fwait
cmpsb
xor
cs
and
out
dec
pop
test
dec
jae
cmp
mov
sub
xor
fsts
or
shrb
dec
add
icebp
push
in
add
clc
push
movsl
pop
shlb
sub
mov
sahf
addl
cmp
test
mov
jno
add
push
dec
jmp
cmp
ret
mov
fildl
xor
subb
mov
push
and
cmp
or
add
inc
cltd
ja
clc
outsb
mov
xchg
test
test
test
pop
test
and
lahf
mov
jecxz
test
mov
xchg
jo
cmpsb
adc
push
adc
shll
ja
push
insb
jae
push
fs
stos
mov
icebp
sbb
outsl
pop
hlt
mov
fldenv
lcall
fs
mov
sbb
popf
jmp
push
mov
iret
fldcw
add
int3
push
add
mov
fsubrl
popa
pop
popf
out
or
adc
ja
jno
popf
jg
or
cmp
cmp
and
cld
dec
out
push
daa
adc
stos
push
test
bound
int3
aad
imulb
push
push
in
dec
dec
jge
sti
push
or
sbb
cmp
push
xor
in
adc
jno
jp
div
ljmp
hlt
adc
push
push
js
rcrl
aaa
adc
adc
imul
out
por
jecxz
xchg
adc
and
inc
ret
arpl
adc
and
repz
bound
xor
ret
arpl
adc
and
repz
bound
xor
ret
arpl
adc
and
repz
bound
xor
push
sbb
pop
negl
test
stc
pop
test
out
testl
cmpsb
pop
mov
xchg
js
push
inc
mov
aaa
enter
out
testl
cmpsl
jbe
dec
xchg
push
inc
and
daa
call
pop
sbb
sub
or
cmpsl
or
or
fdivl
or
pop
int
xlat
pop
xor
jnp
sub
hlt
test
andb
rolb
cli
dec
xor
push
push
es
inc
lea
bound
xchg
out
hlt
sahf
pop
js
dec
dec
pop
rep
and
dec
loope
pop
and
mov
sbb
sbb
shrb
addr16
sbb
out
pop
negl
aas
sub
in
xchg
xchg
jne
inc
inc
push
iret
jmp
leave
pop
cmp
adc
cmp
fdiv
xor
pop
add
push
ja
int
js
xchg
cmp
mov
jmp
mov
pop
inc
shll
mov
xchg
test
int3
push
test
fdivs
enter
jp
sbb
mov
cmpsl
fs
xchg
pop
adc
sbb
fs
movsl
inc
lea
pop
inc
js
popf
mov
rcrl
sti
daa
ljmp
into
xor
pop
les
push
lcall
lcall
pop
les
sbb
pop
push
xchg
aaa
enter
call
cmp
sub
js
push
inc
mov
aaa
enter
call
cmp
sub
js
push
lret
inc
push
mov
clc
test
jbe
pop
mov
xchg
pop
sub
mov
pop
push
fdivs
add
add
lahf
int3
pop
rclb
repz
sahf
dec
mov
addr16
cmp
lret
sbb
adcl
enter
sub
lods
dec
hlt
mov
outsb
fistpll
jo
aas
adc
mov
in
test
jecxz
pop
insl
lds
stc
inc
pop
fnsave
pop
inc
push
sahf
das
adc
pop
pop
addr16
sbbb
out
mov
push
out
inc
int3
mov
add
jecxz
xchg
les
enter
loopne
cmp
xchg
fsubs
std
dec
lcall
std
aad
gs
lock
xchg
insl
sub
cld
xchg
imul
push
loop
sub
ret
push
lds
dec
add
jno
xchg
insb
sti
pop
xchg
jmp
inc
fwait
mov
push
inc
dec
out
sahf
andb
cmp
mov
jg
cmp
add
enter
cmp
jo
sbb
mov
sbb
incl
inc
cltd
mov
outsb
jbe
loopne
mov
xor
int3
daa
jb
inc
jge
in
inc
enter
inc
lods
push
jge
in
cmpb
sub
or
pop
inc
mov
cmc
xchg
push
loope
jns
fcmovnbe
mov
jbe
arpl
jbe
sahf
in
test
mov
popf
mov
icebp
imul
pop
push
fiadds
cmpl
xchg
outsb
jp
clc
inc
mov
xlat
mov
jle
sub
xor
cld
pop
jno
sarl
dec
pop
jnp
mov
fistpll
add
ja
cmpl
icebp
data16
jno
xor
int3
daa
lds
cmp
lods
push
sub
loop
test
hlt
jns
es
cmpl
arpl
and
inc
mov
imul
dec
pushf
stc
mov
mov
xchg
sub
pop
add
cs
mov
jl
mov
notl
inc
cmpsb
adc
cmpsl
repnz
pusha
mov
pop
imull
in
jnp
into
lret
mov
ja
adc
loop
jecxz
ds
cmp
and
in
aas
sahf
and
jnp
xchg
fdecstp
into
rep
arpl
dec
cli
popf
out
push
mov
xchg
cs
and
sub
cmpsb
rolb
jnp
sub
loope
jp
inc
cmpsl
pslld
xlat
int
push
dec
xor
pop
inc
lcall
lret
das
xchg
jnp
mov
push
movsl
pusha
jbe
jp
and
dec
cmp
inc
mov
sahf
aad
push
das
clc
inc
dec
and
xchg
mov
ja
jmp
and
fidivs
xlat
into
push
iret
icebp
imul
sbb
mov
lods
jg
pop
pop
cmp
inc
ds
decl
sarl
imul
xchg
dec
jp
jge
xor
dec
iret
ljmp
lds
dec
es
dec
adc
scas
mov
ror
cmp
inc
decb
popf
mov
int3
aas
jp
jge
mov
xor
aam
mov
stc
adc
loop
rorb
sbb
in
mov
std
mov
ret
cmp
mov
fisttps
pop
sub
dec
gs
aam
push
popf
neg
or
lret
pop
fwait
mov
bound
and
imul
adc
jp
add
ljmp
rclb
ljmp
enter
mov
stc
rcl
leave
or
xor
mov
shrb
adc
lods
das
cmp
loopne
push
adc
shll
push
sub
push
inc
jmp
mov
xlat
lcall
mov
sub
pop
cmpsb
adc
cld
dec
mov
cmpsb
in
cltd
movsb
sub
cltd
pop
inc
fstpt
add
subb
lods
repnz
push
dec
stc
mov
adc
inc
adc
repz
xor
add
mov
jge
sub
jmp
pop
mov
adc
and
dec
jl
jnp
push
add
das
and
ja
lcall
xchg
adc
jns
movsl
iret
ret
add
push
fucomp
mov
lods
leave
loop
cmp
jecxz
mov
rorb
lea
add
inc
and
xchg
repnz
xor
jmp
fs
xchg
add
push
cmp
data16
pop
xchg
push
or
lret
sub
fiaddl
mov
cltd
mov
push
pop
adc
or
insl
jo
jo
jmp
pop
pop
cli
clc
xor
jne
shll
cmpsb
lds
ja
mov
jmp
pop
jne
jnp
in
loop
mov
shl
cmpb
or
out
icebp
fisubs
pop
fs
mov
clc
inc
push
push
or
or
lcall
add
ret
sbb
cmp
stos
pop
fiaddl
imul
dec
insb
hlt
lret
rcrb
add
xor
pusha
adc
imul
movsl
movsl
mov
fs
or
cmpb
or
aad
stos
mov
jp
inc
popf
js
int
pop
push
aam
xchg
rol
or
mov
mov
cmpsb
mov
aaa
and
and
cmp
in
jl
lahf
mov
pop
or
mov
into
or
jb
and
ds
xchg
loopne
icebp
fs
sbb
addl
sar
test
insl
in
sbb
sub
fdivp
sub
jecxz
jmp
mov
enter
jge
outsb
add
mov
mov
cli
dec
sbb
xor
outsl
mov
inc
sub
rclb
push
sub
mov
sbbb
out
arpl
lahf
jmp
mov
xor
ss
xchg
sub
cmp
pop
sarl
inc
leave
jae
sti
push
push
dec
dec
enter
hlt
or
pusha
inc
xor
mov
icebp
xor
mov
in
test
and
int3
sub
xchg
push
mov
push
jns
loopne
pop
and
xor
jmp
and
jmp
cmpl
add
jb
pop
mov
dec
jae
mov
clc
sbb
mov
insl
jns
fmuls
in
add
xchg
subl
sbb
fldl
add
push
add
push
outsb
cmp
cmp
xlat
jb
mov
cmp
scas
icebp
pop
cmp
daa
cmp
mov
jle
in
push
pop
pop
xor
sub
imulb
fisttpll
or
xchg
push
push
jne
mov
imul
push
inc
loope
dec
push
lret
and
push
pushf
add
sbb
push
mul
loopne
fsubl
into
in
jmp
mov
outsb
cli
jge
test
aas
dec
arpl
fdivl
icebp
mov
add
fwait
jmp
jg
sbb
inc
je
loop
ja
jle
dec
xorl
sub
lds
pop
jmp
movsb
test
fildl
shll
ret
sbb
dec
stos
sbb
sub
cmp
add
inc
pop
test
fstl
movb
add
popf
pop
xchg
mov
cli
test
mov
add
xchg
fs
shr
hlt
fldcw
inc
pop
das
lea
lret
mov
push
sbbb
mov
dec
cli
dec
jae
into
imull
cs
les
jns
mov
dec
push
or
add
and
pusha
dec
shll
rcrb
sahf
xchg
add
cmp
aad
ret
mov
subl
stc
jp
dec
test
stc
hlt
bnd
push
popf
shll
cmp
jp
push
jmp
ja
scas
fs
jg
andb
out
adc
sti
adc
fst
sbb
mov
out
cmc
pop
and
sbb
test
sarl
pop
dec
call
and
movsb
dec
hlt
pop
sub
out
mov
inc
cmp
sub
push
cmpsb
cmpsl
loop
shll
add
dec
inc
mov
insl
sub
xchg
cmp
mov
aad
sub
jnp
mov
dec
cmp
add
sub
inc
xlat
fsubs
mov
jmp
stos
adc
mov
pop
adc
jge
or
inc
leave
lahf
add
leave
pop
mov
stos
adc
jno
out
and
les
je
cmpsb
jne
scas
in
mov
and
and
dec
cwtl
jbe
leave
dec
sub
mov
test
rolb
lods
or
mov
inc
out
push
add
mov
cmp
inc
cmp
mov
cmp
addl
mov
outsl
xchg
or
xchg
xchg
icebp
idivl
imul
icebp
cmp
pop
lods
xchg
jmp
sub
inc
scas
mov
push
dec
lds
int3
ret
movsl
cmp
imul
cmp
addr16
imul
xchg
test
and
cmc
sub
cmp
and
push
push
adc
repnz
ss
insb
or
repz
addr16
push
fidivs
pop
cmc
mov
cmpb
push
fmul
mov
outsl
sar
inc
repz
mov
mov
in
and
std
imul
std
xor
cli
loop
in
std
loop
jg
cmp
jo
push
fnsave
out
sbb
jle
iret
xchg
pop
push
iret
cmp
test
sbb
cld
push
in
shrl
jmp
xchg
aam
sbb
mov
les
mov
or
jbe
hlt
mov
inc
inc
mov
sarb
jge
xchg
enter
dec
popa
inc
or
xor
addr16
sub
loop
adc
fucom
adc
mov
jl
mov
sbbl
sbb
inc
cmp
pop
imul
cld
jb
lea
gs
inc
sbb
and
xor
out
out
and
inc
negb
pop
push
jle
mov
dec
sub
add
add
sbbl
mov
or
inc
nop
mov
mov
sbb
ret
jg
enter
rolb
sbb
xchg
cmp
mov
jb
adcl
in
mov
inc
and
sbb
aad
mov
testb
loop
out
jmp
xor
mov
jmp
out
mov
jo
or
mov
mov
jno
xchg
add
mov
jecxz
cmpl
cmpsl
sub
int
sbb
repnz
mov
imul
xor
mov
pushf
lea
lret
inc
xchg
xchg
stos
or
into
jl
push
data16
cs
fs
jno
sti
dec
mov
aam
push
shlb
daa
mov
out
int
fcmovnbe
divb
pushf
popf
inc
mov
out
nop
in
inc
lods
inc
lret
mov
imul
lret
mov
lret
xchg
jl
shll
mov
pop
in
sahf
cmc
pusha
push
nop
aam
cmc
or
mov
hlt
mov
add
push
mov
ljmp
and
mov
je
imul
sbb
or
fdivrs
mov
insl
pop
inc
insl
xchg
xor
mov
push
mov
mov
sub
push
icebp
push
fimull
xchg
das
in
test
repz
add
jo
or
rolb
push
pop
enter
and
xor
pop
xchg
shll
hlt
scas
imul
hlt
aam
mov
mov
call
mov
add
xlat
in
pop
adc
inc
fidivrs
mov
add
cli
out
mov
sub
ret
imul
dec
dec
cmp
xorb
int3
test
pop
xor
mov
inc
das
inc
pop
or
and
pop
movsb
sub
ret
outsb
insl
sti
das
fdivl
jmp
pop
mov
pop
pop
sti
push
inc
movsl
inc
and
sbb
nop
adc
lods
dec
lcall
lds
xchg
dec
add
sbb
mov
in
aas
mov
pop
jp
out
jge
cmpsl
js
and
sub
mov
add
xchg
dec
and
adc
jae
adc
sbbl
mov
jecxz
pop
mov
loope
mov
outsl
sub
mov
es
dec
dec
lret
sbb
and
adc
out
shl
in
pop
pop
aam
adc
jg
and
iret
mov
outsb
lods
inc
inc
fwait
cmp
sbb
pop
imul
iret
xchg
in
and
int3
jg,pn
add
ficoms
adc
xchg
lret
or
jp
xchg
test
ds
js
dec
mov
mov
mov
imull
inc
out
adc
das
aas
faddl
in
pop
mov
pop
jnp
or
repz
push
cmp
jge
in
fildl
dec
sub
fldt
loope
enter
mov
roll
or
call
jecxz
mov
xchg
arpl
stos
sbb
dec
pop
stos
movsl
lahf
xor
xchg
push
mov
mov
push
int
mov
pop
or
outsb
jne
ret
cli
adc
fwait
shll
lret
int3
in
mov
in
xor
je
xchg
test
fidivl
mov
ret
push
testb
sbb
mov
mov
cmc
and
xchg
adc
jnp
fbld
cltd
mov
jecxz
cmp
data16
aas
add
and
adc
mov
xchg
xorb
lds
or
outsl
int
leave
idivb
adc
imul
mov
or
and
xorb
jns
sub
aad
adc
dec
fnstcw
loope
popa
cmp
dec
lret
mov
stos
cmpsb
cs
add
mov
pusha
jne
and
jns
stos
xchg
mov
movsb
loopne
push
pop
loope
pop
push
sub
push
cmpsl
or
rclb
imul
lret
pop
dec
or
ds
and
xlat
repnz
rep
test
outsb
sti
into
mov
sub
scas
aad
paddw
fidivl
mov
sbb
push
pop
push
mov
cli
cmp
das
fistpll
adc
stc
add
dec
psubsw
sahf
xchg
clc
cmp
in
ds
shlb
stos
mov
sbb
popf
adc
fnstsw
in
mov
cmpl
dec
test
push
adc
sbb
jae
gs
mov
mov
xor
inc
add
lods
rcrl
loope
in
xor
mov
jne
and
push
mov
aas
je
mov
and
sbb
push
outsl
rclb
pop
adc
sarb
sub
xchg
lcall
or
jmp
mov
shll
dec
divb
ficomps
cs
xchg
lods
jge
dec
and
hlt
jns
call
lret
icebp
es
xchg
lret
lods
push
cmp
pop
adc
push
xor
pushf
push
and
scas
insl
roll
sarb
xor
stos
mov
iret
sub
xor
or
fwait
cmp
int
shl
mov
inc
push
or
mov
pop
push
mov
mov
pushf
mov
jl
nop
jo
push
gs
aas
std
cmpl
call
test
mov
dec
gs
data16
jne
pop
bound
faddl
jnp
cltd
push
xorl
xor
dec
mov
cmpb
and
inc
sub
jbe
lret
mov
cmpsb
pop
js
cli
push
scas
dec
insl
testl
push
jae
xchg
add
repz
adc
movsb
mov
mov
call
mov
dec
add
push
push
inc
mov
sbb
enter
and
ja
repz
aam
cmpsl
xchg
mov
into
xor
fldenv
loopne
test
lods
push
insl
sbb
into
xchg
add
dec
inc
out
pop
and
or
daa
inc
out
jbe,pt
pop
movsb
pop
push
sbb
enter
add
add
and
loope
and
in
scas
or
sbb
cs
jns
adc
xlat
cmc
push
scas
outsl
out
pusha
sub
mov
jno
and
movsb
cwtl
leave
ss
in
cmpsb
jbe
sub
repz
in
sbb
imul
and
sbb
jmp
loop
andl
sahf
and
das
ljmp
mov
in
adc
adc
adc
or
out
sbb
cmpsb
sbb
orl
ds
xlat
cld
sarb
pop
aam
jle
pop
add
aad
add
out
dec
sbb
xchg
push
xchg
shlb
les
add
xor
adc
push
std
in
mov
pop
mov
adc
adc
push
mov
lahf
mov
ret
mov
data16
rorl
shlb
add
test
xor
pop
pop
xor
scas
cld
pop
mov
and
push
push
pop
es
std
testl
dec
packssdw
lahf
mov
dec
and
cli
mov
hlt
loope
sub
push
inc
add
adc
outsb
sub
cmp
adc
mov
lock
pop
stc
stos
mov
inc
hlt
mov
push
xchg
test
mov
mov
stos
cmc
inc
cld
rorl
jb
mov
shl
xor
lcall
sbb
addr16
mov
cmp
jge
aad
adc
and
sti
test
mov
repnz
push
and
inc
pop
leave
sub
arpl
loope
imul
cmp
sbb
sbb
lods
lea
or
mov
aaa
or
subl
mov
dec
cmpsb
add
dec
int3
nop
sbb
push
stos
xor
fstpt
mov
mov
jmp
aas
aaa
arpl
enter
ret
jp
push
aam
out
fidivrl
sbb
mov
in
mov
push
int3
gs
and
pop
push
push
xor
fcmovnbe
cltd
xchg
or
mov
imul
cltd
sbb
js
ret
mov
mov
imulb
enter
jb
dec
dec
rcr
pop
inc
and
add
cmpsb
mov
mov
mov
push
into
adc
test
scas
xchg
call
inc
out
mov
cwtl
sub
jae
insl
test
sub
arpl
into
dec
pop
xchg
in
sti
popf
test
or
leave
fs
pop
xor
scas
sub
xchg
sahf
enter
and
add
sarl
pop
stos
ret
mov
je
mov
push
push
cmpsb
xchg
dec
dec
push
jae
leave
xchg
shlb
movsl
out
mov
mov
inc
rep
mov
push
stos
fwait
nopl
xchg
pop
pop
jns
gs
data16
fadds
mov
mov
push
xchg
inc
and
repz
cmp
jae
jecxz
movsl
mov
jg
js
xlat
cmpsl
shlb
lds
pop
pop
cmc
xor
icebp
cmpsb
daa
push
fsubrs
or
in
pop
mov
mov
dec
gs
sub
pop
imul
int3
shr
cmpsl
aaa
xchg
std
fdivrs
sarb
jo
lock
xorb
addr16
cs
and
inc
adc
test
inc
fwait
movsb
sbb
mov
add
shlb
data16
das
cmp
lea
popf
lea
pop
inc
inc
adc
inc
sbb
into
mov
pop
repz
mov
pop
inc
adcl
imul
fwait
and
imulb
push
les
lock
in
psllq
arpl
shll
bound
orl
sub
loop
enter
loopne
shlb
in
out
cmp
out
xor
shrl
push
mov
xchg
cmpsl
jno
in
pusha
sahf
enter
pop
cltd
add
jns
rcll
imul
out
or
fisttpll
xchg
sub
xchg
ficomps
sub
arpl
add
cmp
dec
pop
imul
das
lcall
shrb
push
iret
repz
add
aas
pop
in
lods
sbb
clc
add
sti
ret
inc
or
fdivrs
jg
cltd
addl
mov
ds
lods
add
insb
repz
and
inc
cmp
push
data16
sub
cmc
outsl
push
rol
pop
inc
cmp
or
fiaddl
xchg
out
sti
sub
mov
cmp
leave
outsb
test
movsl
sub
sub
fdiv
fsubs
push
out
push
or
sub
outsl
pop
dec
mov
andl
repnz
idivb
cmpsb
ljmp
filds
pushf
mov
popa
insl
addr16
push
mov
adc
leave
mov
mov
dec
nop
push
sub
lcall
stc
push
or
push
inc
rol
sahf
bound
push
shlb
mov
and
and
lods
inc
fnstcw
in
pop
lds
sbb
mov
fsub
fwait
xor
in
xchg
sarb
add
imul
pop
cmp
sbb
xchg
aad
or
insl
add
mov
xlat
and
mov
push
test
fdivs
enter
call
cmp
sub
js
push
inc
mov
aaa
enter
call
cmp
sub
js
push
inc
mov
aaa
mov
out
testl
pop
mov
xchg
mov
jbe
inc
pop
push
call
pop
js
sub
out
mov
shlb
aas
xor
push
sub
movl
movl
movl
movl
call
mov
cmpl
jne
push
push
push
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sub
xor
cltd
pop
ffreep
mov
jns
add
pop
add
pop
add
add
imul
add
add
xor
outsb
add
add
add
sbb
cltd
add
add
add
add
pop
add
add
add
jnp
add
add
cltd
add
cltd
add
add
inc
add
add
add
add
add
add
pop
add
add
add
cltd
add
add
add
sub
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
add
add
cltd
add
add
add
add
add
cltd
add
add
add
add
or
cltd
add
add
add
add
add
cltd
add
ret
add
add
add
add
add
add
add
add
popf
add
add
add
add
add
add
add
add
add
cltd
add
add
fldl
mov
add
add
add
push
cltd
add
add
sbb
mov
push
add
add
add
add
add
add
add
cltd
add
add
add
add
push
jns
inc
add
add
push
add
add
add
sbb
mov
dec
add
inc
add
add
add
add
add
add
add
bound
addl
add
add
lahf
add
add
add
add
add
and
add
add
push
add
cltd
add
add
cmp
and
push
add
lcall
add
add
add
inc
add
add
add
add
add
add
add
pop
add
add
add
add
addl
sub
add
dec
add
cltd
add
add
add
add
add
add
add
cltd
add
add
add
add
or
stc
add
add
sub
popa
add
add
add
add
add
lods
add
add
add
add
addl
aas
add
add
add
add
add
fadds
dec
add
add
push
add
add
add
je
mov
add
add
add
add
add
mov
cltd
add
aas
add
jl
or
or
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cltd
add
jl
add
or
pop
add
add
add
add
add
add
add
add
lds
jo
cltd
add
add
add
add
add
cltd
add
add
add
jo
pop
add
add
add
lea
jecxz
jo
fadds
mov
add
add
add
add
sub
push
add
cltd
add
push
aas
adc
pop
cld
mov
enter
adc
cmp
sbb
pop
das
xor
push
add
or
repz
push
mov
cltd
sarb
jmp
adc
sti
jne
jne
pop
push
je
sub
daa
aam
popa
adc
adc
push
loopne
inc
aas
pop
stos
mov
addr16
xor
jg
xchg
add
pop
and
icebp
dec
inc
push
push
shll
cs
inc
pop
sub
pop
adc
rolb
jge
inc
and
xchg
aad
mov
mov
and
insl
fsubl
mov
pop
jne
in
das
ss
outsb
hlt
js
mov
aaa
lods
outsl
mov
insb
jae
jmp
xchg
cmp
lods
sub
fmuls
scas
pop
movsb
fcoml
push
dec
adcl
in
push
mov
xor
sbb
ret
dec
stos
cld
cmp
push
xchg
add
jo
enter
push
cmp
enter
push
sbb
pusha
popf
inc
add
js
xor
scas
ficomps
cmpsb
decb
cld
jmpw
xor
inc
lea
or
inc
ret
cmpl
pop
fsub
pushf
dec
lahf
mov
inc
jle
lcall
or
loope
push
cld
mov
fistpll
sub
cli
leave
lahf
inc
ret
in
test
push
cmp
sbb
xchg
fdivrl
cmp
aad
mov
xlat
xchg
add
fs
mov
mov
aas
int
shl
sbb
sbb
rorl
and
dec
addl
scas
inc
inc
add
inc
mov
les
mov
mov
dec
subl
sub
jo
hlt
shlb
fstpt
cli
push
sub
inc
pop
sahf
xor
xor
inc
and
cmp
cli
js
aam
pop
mov
fwait
pop
push
cwtl
jecxz
jecxz
and
nop
mov
mov
cmp
addr16
add
xchg
cmpb
int3
mov
xchg
pusha
add
mov
push
lahf
mov
pop
dec
push
std
push
push
push
push
dec
add
pop
xor
sub
rcll
jbe
xchg
adc
jle
repnz
hlt
jl
mov
xchg
dec
add
add
add
sub
ret
iret
cmpsl
test
inc
test
adc
mov
mov
sbb
xchg
mov
aad
xor
std
ja
sub
outsl
inc
or
or
gs
jmp
mov
xchg
xchg
cli
or
rcrb
repnz
sarl
pop
cs
sub
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
repnz
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
repnz
fdiv
add
aam
add
int3
repnz
repnz
mov
repnz
lods
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
insb
hlt
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
mov
hlt
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
testb
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
testb
mov
testb
lods
testb
movsb
testb
pushf
testb
xchg
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
testb
cld
testb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
clc
add
dec
clc
add
push
clc
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
clc
add
lods
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
