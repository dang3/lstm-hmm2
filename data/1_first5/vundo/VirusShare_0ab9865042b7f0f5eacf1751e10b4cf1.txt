mov
pop
gs
cmpsl
adc
hlt
cmpsl
jb
ljmp
cmp
popa
je
dec
sub
cli
dec
mov
and
ficoms
movsb
dec
jge
inc
xor
iret
cltd
cmpsw
repz
push
dec
jns
lea
lods
push
sub
lock
movsl
sbb
sub
dec
ret
cmp
pop
xchg
cmpl
dec
clc
test
cmpsl
or
jmp
movl
jle
add
call
lods
sti
mov
jae
mov
pop
test
aaa
pop
push
iret
mov
cs
fs
sub
repz
icebp
cmp
nop
out
push
push
loope
out
pop
push
decb
mov
sub
test
loop
fs
hlt
aaa
ret
inc
stc
pusha
cmp
sbb
jnp
fdiv
mov
pushf
and
aad
dec
ss
cmp
xchg
stos
push
inc
rorb
xor
jmp
mov
mov
subl
jne
call
aam
inc
inc
cmpsb
mov
pop
nop
sti
pop
fisttps
in
loop
les
adc
or
mov
into
or
lods
sub
mulw
cmpsb
cmpsl
lcall
std
cli
iret
push
repnz
and
push
cmpsb
daa
ds
in
sti
lahf
aaa
and
mov
clc
xor
adc
rorl
add
jmp
sub
mov
orw
and
cmp
jne
lea
push
mov
xor
popl
mov
jl
call
cli
push
rclb
test
mov
and
xchg
sub
mov
or
and
and
cmp
orb
icebp
push
xchg
dec
mov
pushf
xchg
mov
or
shlb
fidivl
adc
sti
mov
inc
call
js
popa
lret
push
push
popa
add
pop
popl
mov
mov
and
call
pop
xchg
or
push
mov
iret
dec
addr16
repnz
adc
jl
mov
adc
jne
aad
popa
mov
cmpsl
adc
pop
sbb
or
jne
in
or
inc
jnp
fstl
icebp
add
add
mov
and
inc
mov
rcll
add
jmp
mov
mov
in
lds
lcall
in
inc
addl
jmp
mov
mov
enter
popa
or
inc
xchg
cmp
je
xor
ret
pushl
popl
push
xor
mov
mov
mov
lods
mov
pushl
popl
jo
call
aas
mov
cmpsl
or
push
je
push
xchg
test
pop
lretw
mov
jle
xor
iret
jno
ss
insl
or
or
es
cwtl
repnz
lods
cmp
inc
push
adc
xor
cmp
xor
insb
in
sti
cmp
lds
sbb
inc
je
pushf
out
xchg
sub
xor
jmp
mov
jge
in
movsl
lret
jb
mov
dec
les
add
inc
popl
pop
ret
push
mov
add
call
jns
and
pop
mov
rclb
mov
lret
push
cmp
add
pop
fsts
push
mov
dec
xchg
sub
mov
add
mov
in
and
mov
jo
xlat
loope
fdivrp
mov
xsaveopt
movsl
subb
jp
jmp
popl
jmp
mov
mov
inc
cmpsb
mov
xorl
jl
loopne
pop
mov
mov
int
add
mov
and
push
cmp
enter
fwait
int3
es
popf
adc
mov
cld
add
jecxz
ficoml
push
push
push
call
testl
cmp
cltd
test
and
xchg
jge
dec
shlb
add
into
in
add
pop
andb
ficoml
push
jg
mov
call
movsl
in
sbb
out
shlb
cmp
xor
outsb
xor
jmp
cmp
aaa
or
fbld
xor
sti
add
sub
or
insl
orb
jmp
jno
addr16
push
pop
sbb
xlat
mov
les
pop
imul
sbb
sbb
xchg
loop
loopne
orl
fisubl
cmpb
in
or
imul
add
in
add
add
and
dec
mov
jl
push
or
mov
hlt
sbb
xchg
scas
lcall
in
push
mov
mov
add
pushl
mov
add
add
push
sub
sub
popl
mov
jno
call
aad
fsts
adc
push
pop
adc
mov
xchg
dec
and
fwait
mov
and
push
nop
outsb
imul
scas
adc
fnstsw
jb
lcall
and
sarl
add
adc
xor
lea
mov
add
mov
xor
rol
xor
pushl
popl
inc
cmpb
jne
cmp
je
inc
cmp
jb
mov
push
or
add
popl
mov
jae
call
rcrb
pop
js,pt
and
mov
cs
out
dec
imul
jnp
xor
sbb
push
push
add
xchg
push
inc
test
pop
mov
sbb
push
lock
popf
imul
sub
adc
into
sbb
add
jmp
cli
imul
sbb
bnd
sbb
xchg
pop
xorl
rcll
mov
adc
cli
loope
flds
adc
and
sahf
in
inc
in
sbbb
dec
cwtl
cmp
xchg
xor
jmp
inc
insb
mov
cmp
shr
inc
mov
mov
jb
inc
sbb
shr
add
add
and
in
xor
dec
fstl
sahf
adc
clc
jno
add
in
xchg
jl
cmp
add
insl
stc
sbb
adc
mov
es
je
adc
cmp
mov
dec
cmp
popl
jmp
add
push
stos
mov
xchg
fldenv
lods
sub
cltd
jne
shll
add
mov
add
jmp
jnp
cwtl
imul
sub
add
push
push
adc
sub
xchg
repz
aaa
mov
add
add
pop
jmp
sub
mov
xlat
dec
imul
sti
in
inc
xor
dec
inc
scas
enter
popa
arpl
fwait
inc
xor
jmp
je
xor
popf
aam
and
lea
and
scas
gs
sbb
out
inc
aas
inc
add
or
jmp
push
and
xor
pop
in
mov
xchg
inc
not
out
insl
ss
pop
mov
or
jbe
cmp
jae
pushl
popl
pushl
pushl
sub
movl
addl
pushl
call
call
push
popl
jbe
call
cmp
xor
sbb
decl
xor
imul
out
mov
into
aam
mov
mov
ret
push
pop
movsl
jns
lret
in
insl
pop
or
into
ja
insb
gs
inc
pushf
movsb
lret
cmp
sub
scas
adc
jbe
stos
pop
add
leave
cmc
in
daa
or
data16
adc
pop
pop
leave
ret
call
mov
outsb
fbstp
repnz
push
jg
outsb
ret
ss
add
push
movsl
addr16
jnp
xchg
mov
sub
addr16
fwait
inc
jbe
flds
dec
pop
incl
arpl
sbb
out
push
rcrb
mov
push
jbe
pop
mov
inc
ss
or
adc
shll
daa
sbb
cmp
mov
dec
addl
divl
add
jmp
int
jg
sbbb
push
shl
adc
pop
into
nopl
out
scas
pop
sar
cmp
test
or
mov
add
cmpsb
dec
push
cltd
out
add
fildl
add
jmp
xchg
nop
xor
cmp
imul
adc
xor
call
test
jne
ret
push
push
mov
call
call
jle
xchg
fbstp
cmp
sub
cltd
add
mov
inc
mov
inc
cmp
sbb
sbb
push
inc
jno
pop
test
xlat
jge
sub
lods
or
mov
xor
je
test
lea
cmp
shll
jmp
xorb
adc
loope
and
adc
repnz
mov
xchg
hlt
call
inc
xchg
push
mov
or
push
mov
popl
jmp
ficomps
je
mov
call
int
test
mov
addr16
mov
push
mov
dec
addl
jmp
mov
xor
and
jne
loop
fildl
jge
push
aam
xchg
and
push
dec
xor
push
xor
call
push
push
not
mov
xor
xchg
mov
sbbw
pusha
call
mov
sub
movl
call
lret
jp
xlat
test
stos
fcmovnb
xchg
adc
or
loopne
push
icebp
mov
std
mov
cltd
cmp
ror
mov
mov
jo
arpl
lahf
push
loop
in
push
outsl
dec
mov
rorb
dec
jne
pop
mov
mov
divl
insl
add
xchg
pop
and
and
insl
stos
into
dec
mov
clc
mov
shrb
mov
out
popl
jmp
in
icebp
sbb
fsubrl
cli
les
stos
cmp
or
mov
ss
data16
dec
mov
dec
xor
and
add
roll
add
jmp
and
sbb
sahf
pop
add
push
dec
jnp
fcoms
addl
push
call
mov
mov
xor
xor
rol
push
popl
jbe
call
jbe
sbb
test
fs
mov
pop
lret
mov
push
sahf
ficomps
clc
in
dec
and
mov
push
add
dec
xor
mov
arpl
test
es
fdivp
addr16
jge
adc
fs
mov
inc
cmpb
scas
mov
jge
popl
inc
dec
jne
cmp
je
call
pop
cmp
dec
lods
or
or
jnp
scas
test
icebp
xor
dec
add
push
cmc
pop
xchg
inc
sub
jp
or
fwait
pop
repz
mov
hlt
sub
push
dec
cmp
dec
fdivrl
call
xlat
mov
or
add
jmp
enter
popa
mov
imul
je
add
sahf
add
add
and
popf
fwait
jg
adc
aad
pop
sub
loopne
sub
rcrl
xchg
loope
rorl
outsl
or
and
cmp
jne
popa
shl
push
xor
push
push
popl
call
push
call
ss
aaa
jmp
mov
or
fsts
roll
sbb
adc
add
push
rorb
mov
fsubs
lds
push
xlat
dec
sbb
mov
cmp
mov
std
mov
fisubs
adc
ljmp
xlat
lret
ficoml
ret
xchg
push
inc
push
scas
dec
mov
outsl
insb
enter
outsb
test
lret
pop
cmp
inc
pop
pushl
mov
popl
jmp
xchg
rorl
mov
icebp
mov
popa
dec
insb
mov
cld
aad
popa
mov
add
bound
dec
push
pop
pushf
and
xor
dec
scas
jle
repnz
addl
jmp
sub
xchg
and
xor
testb
xor
scas
das
lret
xor
mov
rolb
add
dec
add
add
loope
movw
jl
call
mov
ret
push
push
jnp
call
imul
into
daa
adc
out
inc
adc
shll
or
arpl
in
test
jo
es
int
hlt
pop
sbbb
ret
xchg
cmp
int
push
push
popa
leave
repz
into
cmp
iret
cld
and
test
int3
nop
fidivl
shl
call
push
into
cmpsb
aad
cmp
mov
pop
add
push
xor
push
call
push
call
xchg
xchg
push
jns
push
dec
ret
xor
fists
push
shl
cmp
cld
jle
stos
add
inc
fcmovnu
sub
cwtl
out
cmc
xlat
in
mov
leave
pop
fstps
les
jno
adc
xlat
insb
data16
or
imulb
call
jae
cmp
in
test
cmp
iret
pop
mov
popl
cmc
add
adc
adc
add
cmp
test
arpl
ret
push
addl
jmp
cmp
lods
hlt
imul
sbb
and
loop
pusha
push
dec
cld
sbb
xchg
fcomp
mov
push
jmp
pop
mov
call
mov
inc
and
aad
ljmp
and
mov
push
mov
adc
and
repz
cmp
lea
testl
test
mov
in
mov
cmp
sub
jns
cmp
sbb
mov
lods
shrl
add
jmp
cbtw
rol
daa
push
pop
push
hlt
adc
iret
call
mov
xchg
xchg
sbb
add
lods
stc
outsb
test
lahf
lods
test
mov
mov
dec
adc
mov
addl
jmp
xor
out
out
lea
sbb
push
mov
push
or
and
popl
mov
jle
call
imul
mov
popf
sbb
push
shll
adc
stos
stc
stos
push
or
int3
rol
inc
je
xchg
push
cli
push
mov
lock
arpl
inc
and
jg
js
dec
pop
loopne
xchg
jle
in
stos
jnp
mov
cmp
fisttpl
outsl
jb
jbe
mov
ja
pop
fsub
sub
add
popl
mov
rep
pop
pop
push
sub
mov
sub
xchg
push
xor
jmp
sub
call
dec
push
inc
add
mov
gs
and
mov
mov
cmp
sbb
addr16
int
adc
orb
insl
addr16
mov
int3
subb
mov
push
daa
ret
inc
mov
or
push
pushf
jnp
and
lea
push
popl
jmp
icebp
leave
nop
jb
cltd
xchg
inc
push
in
push
inc
jmp
push
sub
jge
dec
repz
jmp
mov
fbld
sub
mov
push
dec
pop
fldcw
in
inc
mov
add
sub
mov
orl
add
or
jne
add
jmp
call
mov
mov
adc
flds
out
mov
pop
lock
cmp
or
sbb
xor
mov
add
add
sbb
in
adc
or
aad
mov
adc
inc
in
jno
test
lcall
xchg
les
xchg
or
aam
push
xor
mov
lss
pop
dec
sarb
fisubrs
ss
aam
inc
movsl
mov
or
cmpsl
push
ja
cli
in
mov
inc
loope
rcl
test
test
push
pop
cli
int
push
je
not
pop
inc
mov
nop
xor
sahf
movsb
mov
jg
push
push
dec
stos
shrb
jmp
std
repnz
cld
fildll
repz
mov
push
int
fadds
inc
and
push
test
iret
mov
lock
test
hlt
lahf
shl
sbb
inc
shl
pushf
loop
sbb
sbb
nop
cmp
pop
clc
repz
dec
pop
adc
dec
push
push
sbb
cmpb
leave
out
imul
adc
mov
out
or
cmpsl
mov
mov
test
xlat
inc
fldt
pop
push
cmp
repz
lea
push
jmp
fistpll
dec
inc
data16
sahf
mov
cmp
xor
xor
movsl
jnp
stos
lahf
stc
outsb
push
insl
xchg
mov
sahf
inc
or
fnstenv
xor
loop
cmp
or
push
fnstenv
jl
fsts
and
xchg
mov
addr16
jmp
sbb
xor
loope
test
inc
pop
inc
leave
paddsb
mov
sahf
or
mov
mov
loopne
aad
lcall
addb
stc
mov
mov
mov
in
outsl
insb
mov
push
outsb
repz
ret
and
inc
data16
repz
or
loope
shl
mov
hlt
add
std
hlt
addr16
repnz
inc
pusha
or
popa
loopne
rcll
lret
stos
mov
jp
cmpsl
jae
mul
lcall
mov
js
loope
mov
inc
adc
std
jmp
mov
ret
xchg
or
and
sbb
mov
pop
data16
inc
adc
lods
movsb
aaa
pop
dec
movnti
negl
shl
fldenv
pop
sbb
mov
in
lahf
dec
adc
fs
cmp
mov
stos
xor
aam
outsl
jo
adc
test
lods
pop
dec
fdivs
repz
and
aad
xor
stc
mov
out
dec
lea
out
inc
push
lret
and
mov
pop
cwtl
stc
or
mov
daa
inc
dec
mov
mov
aaa
xor
repz
mov
dec
pop
loop
cli
xor
fisubrs
loop
lock
aad
daa
lods
imul
mov
gs
fstpl
mov
sarl
dec
cmp
out
in
call
loope
fwait
inc
mov
hlt
iret
mov
sbb
shll
pop
pop
inc
fmuls
inc
out
in
mov
xlat
aaa
sub
mov
push
xchg
mov
inc
xor
sbb
xorl
divb
std
rcrl
and
repz
mov
xchg
mov
aas
jnp
in
out
jbe
xor
mov
dec
sbb
jo
mov
fdiv
mov
adc
dec
mov
les
or
pop
jecxz
dec
scas
fistpl
lret
or
bnd
imul
mov
iret
mov
jne
test
xchg
les
dec
mov
clc
mov
sar
xor
mull
xchg
fs
push
mov
imul
clc
jmp
lahf
mov
rolb
cmp
mov
dec
jne
jmp
mov
lcall
jne
add
test
ja
scas
pop
cltd
mov
sub
mov
lahf
rcr
add
aaa
sbb
insl
mov
xchg
movsb
lock
les
stos
mov
mov
movsb
mov
mov
add
test
cld
mov
cmp
and
bound
and
xchg
add
in
cmp
imul
inc
xor
xlat
adc
and
stc
fdivrp
xchg
dec
rclb
pop
loope
shl
repz
ja
filds
sub
fwait
lods
xor
jmp
loopne
mov
jb
mov
das
nop
fucomip
pushf
jl
int3
and
fs
nop
or
int3
pop
lret
cmc
ja
xor
pop
xchg
jge
xor
sub
stc
mov
aaa
loop
or
ret
movsb
add
aad
xchg
pop
insb
jmp
rclb
dec
frstor
test
mov
and
imul
jge
or
push
pop
mov
dec
insl
stos
orb
sub
pop
xlat
mov
loope
add
add
pop
add
dec
lahf
cmpsb
sub
add
sbb
cmp
rclb
int3
cmp
jb
into
dec
mov
mov
dec
xchg
bound
test
cmp
cmpl
add
shlb
pop
bound
aam
fs
cmp
rorl
sub
dec
sub
pop
fildll
ss
jne
loope
and
pop
cmc
test
mov
xchg
mov
sub
pop
pusha
cld
popa
fdivp
aas
mov
inc
fistps
repz
fisttps
fstpt
rorl
mov
loope
fstpl
or
repz
insb
push
push
mov
lea
xchg
cmpsl
daa
std
adc
scas
filds
shll
inc
mov
add
mul
adcl
mov
push
cmc
lret
repz
outsl
jl
cmpsl
pop
jp
call
push
icebp
movsb
aad
dec
xchg
shl
and
adc
or
inc
jns
mov
push
lcall
inc
iret
and
std
popa
inc
pop
jnp
aaa
loope
sarl
or
jnp
xchg
push
push
aas
cmc
andb
push
mov
xchg
je
lret
jne
scas
dec
dec
adc
mov
sub
sub
jae
cltd
imul
push
popf
xlat
xor
fidivrl
int3
mov
mov
fists
fadds
pop
cmpsl
popaw
dec
popa
xchg
push
fcoml
push
ds
hlt
ret
cmp
dec
xor
sbb
mov
hlt
pop
dec
push
mov
imul
std
inc
popf
fwait
pushf
or
sti
shlb
xchg
xchg
pop
mov
js
cmpsb
cmpsl
mov
jbe
inc
mov
lods
adc
push
pusha
adc
or
imull
nop
push
xor
mov
pop
in
in
repz
mov
aam
xchg
xchg
jns
out
xor
mov
mov
in
leave
inc
sub
lahf
rorl
pop
push
in
pusha
mov
dec
xor
pop
clc
sbb
mov
out
jns
clc
repz
repnz
je
jae
arpl
lret
imul
nop
dec
sub
into
or
xchg
enter
pop
add
in
call
dec
ss
rcr
dec
ret
push
xor
add
lahf
roll
push
add
loope
in
iret
mov
xchg
dec
in
push
adc
mov
push
outsl
mov
cli
xor
mov
leave
mov
lock
xchg
movb
ficoms
loop
jns
sub
insl
xchg
loope
or
push
cmp
cmc
repz
mov
ffree
iret
mov
scas
test
nop
inc
ret
outsb
push
scas
push
pushf
loope
nop
movsb
clc
mov
adc
mov
in
lods
ret
jns
clc
aaa
shlb
push
sub
xor
notl
rcll
push
push
mov
or
adc
into
popa
je
mov
sbb
jl
into
in
orb
iret
fsubrl
mov
ja
or
stc
test
lahf
ja
ret
stos
push
dec
jnp
add
fstl
mov
in
nop
dec
mov
and
mov
add
setle
xchg
xchg
div
iret
mov
dec
xor
loope
jp
lcall
and
sbb
outsb
enter
outsb
or
or
decb
adc
jg
xor
mov
incl
xchg
das
popa
xor
cli
push
cli
lods
dec
in
dec
mov
sbbl
dec
ss
mov
push
push
fcompl
mov
xor
sub
inc
mov
pop
in
lret
bound
push
inc
push
inc
repnz
jmp
loop
fs
aas
adc
imul
adc
imul
cmp
xor
mov
int3
hlt
iret
mov
pop
loope
sarl
add
int
pop
cld
mov
test
xchg
cltd
push
jp
lcall
clc
lock
jbe
inc
sub
aaa
push
push
push
xchg
mov
repz
mov
cmp
int
dec
push
mov
mov
loopne
lods
gs
fwait
cs
imul
pop
push
pop
addr16
sub
repz
in
jbe
mov
cwtl
cmp
cs
cltd
in
inc
jge
mov
nop
icebp
sub
hlt
pop
push
mov
pop
push
mov
mov
lcall
dec
test
jo
push
push
jl
sub
iret
mov
int3
mov
ss
arpl
sarb
pop
cmp
add
xchg
pop
aam
mov
hlt
iret
mov
dec
inc
hlt
aam
sub
push
hlt
jno
div
iret
jo
mov
out
repz
push
scas
jmp
out
or
daa
sbb
pop
xchg
dec
mov
sbb
nop
hlt
les
xor
xor
push
xchg
pop
lret
repz
xlat
push
mov
mov
stos
or
aam
das
scas
out
sahf
repnz
or
shl
iret
stc
aam
cmp
cmp
ret
rolb
hlt
and
dec
loope
sub
add
dec
rcrb
or
ljmp
loop
or
jmp
push
and
xor
and
pop
inc
aam
ja
ja
into
ljmp
iret
mov
push
or
imul
xchg
outsl
jmp
jmp
in
mov
je
mov
dec
js
sti
cmc
and
mov
out
sub
sbbl
adc
xor
fabs
pop
gs
loop
cmp
xor
cld
leave
jo
hlt
iret
jne
xchg
fnstenv
jp
movsl
popa
jp
addr16
addr16
push
rcrb
sbb
pop
mov
push
push
repnz
cmp
jmp
aam
dec
xchg
cmp
repz
test
pop
mov
pop
sub
mov
dec
loope
rcrl
in
push
movsl
lcall
sbb
sub
mov
repz
mov
mov
dec
add
push
xchg
dec
cmpsl
popa
add
mov
pop
test
sbb
mov
mov
push
and
iret
mov
xabort
aas
ja
cwtl
pop
xchg
aaa
xor
or
sbb
xor
test
sahf
iret
movsl
fidivs
sub
jg
pop
insl
loopne
scas
fwait
loope
aam
cmp
shl
iret
dec
iret
push
cmp
scas
dec
not
pop
pop
sub
sbb
fisttpl
arpl
dec
xor
mov
add
sti
mov
clc
rcll
push
dec
sti
mov
fcompl
movsl
pop
mov
leave
mov
rcrb
add
lods
fldcw
fistps
imul
sbb
adc
loope
sarl
icebp
sub
sub
sub
add
jmp
adc
push
mov
cld
mov
push
outsb
xor
mov
dec
fs
xor
adc
mov
cld
jb
cltd
lahf
and
pusha
lods
pop
aaa
xlat
dec
sub
xlat
inc
inc
fwait
pushf
shr
mov
bound
dec
es
pop
cmp
je
xor
lahf
pushf
gs
push
adc
add
push
imul
addr16
iret
mov
aam
and
imulb
movsb
mov
pushf
aas
adc
xor
sub
call
or
loop
loope
push
pop
or
aas
mov
fdivrs
or
inc
cs
lret
xchg
stc
pop
fcmove
inc
adc
pop
insb
adc
cmp
lahf
rorl
dec
stc
or
and
cs
mov
push
pop
adc
sbb
sbbl
imul
cmc
repz
mov
add
outsl
xor
jno
mov
stos
dec
push
mov
repz
sub
sbb
mov
xchg
adc
std
xor
pop
xor
movsb
lods
fidivrl
push
pusha
dec
sbb
imul
pop
add
pop
fwait
sbb
pop
nop
fcoml
and
cwtl
mov
pop
repz
adc
cmp
xor
cmp
xchg
pop
or
fadds
xchg
repz
lcall
pop
es
sbb
xchg
das
int3
mov
clc
into
mov
mov
test
les
xchg
dec
push
in
fucom
mov
sarl
sub
adc
jbe
xlat
mov
enter
pop
and
xor
ds
ja
pusha
das
sub
aad
pop
aad
lea
arpl
xchg
shlb
xchg
ja
shrl
and
mov
mov
data16
and
jbe
popf
addr16
adc
aaa
dec
xor
inc
sub
adc
movsb
or
add
cltd
out
hlt
inc
in
push
pop
add
jp
bound
adc
shl
push
jle
pop
xchg
mov
shl
sbb
jg
lret
mov
es
cmpsl
gs
mov
jle
xchg
test
pop
mov
push
mov
movsb
shrb
mov
xlat
faddl
push
push
bound
jns
push
adc
fpatan
mov
or
in
fcomip
ficoml
jl
inc
or
nop
xcrypt-ofb
cmpsl
sub
call
in
xchg
movntps
scas
popa
repz
and
push
push
push
push
push
push
dec
xchg
repnz
pop
mov
pop
mov
push
pop
or
and
cmp
sahf
bound
repz
pop
lods
pop
add
fildll
jo
jo
push
push
mov
ja
and
mov
cmpsb
push
test
sbb
xor
mov
outsb
aam
popa
pop
jg
fs
in
adc
xor
stos
call
push
cltd
mov
dec
mull
clc
inc
out
rorl
mov
movsb
mov
jp
pop
mov
shlb
out
cwtl
push
leave
push
sub
xor
int3
push
lds
pusha
mov
lcall
mov
mov
mov
dec
shlb
mov
mov
imul
iret
aaa
add
mov
jo
jae
xor
lahf
cmpsb
and
lret
pusha
ja
push
pop
aam
fiadds
sti
testl
inc
xor
imul
xchg
shl
into
add
mov
shl
pop
loop
inc
and
aad
or
xor
pop
xor
fildl
mov
enter
mov
pop
iret
mov
sbb
mov
xchg
xchg
jae
sbb
insl
xchg
icebp
mov
adc
mov
fisubrs
inc
or
push
das
or
mov
mov
jne
loope
dec
call
lock
cmc
iret
mov
imul
int
push
rcrl
into
jae
inc
icebp
sub
pop
xchg
xor
jns
xchg
push
xor
popa
mov
sub
push
cli
testl
popa
mov
cmp
rcr
in
mov
or
ss
inc
push
xlat
add
fistl
push
sbb
dec
fwait
mov
xor
xor
cli
fcomip
iret
jne
icebp
cli
dec
xchg
mov
std
adc
outsb
shrb
mov
imul
cmc
lahf
add
pop
cmpsb
inc
inc
adc
adc
je
inc
jl
adc
mov
pop
sbb
mov
push
mov
pushf
hlt
push
mov
fucomip
jns
or
lods
push
and
sbb
jp,pt
jle
xchg
cmpsl
sbb
mov
pop
iret
mov
jmp
sahf
mov
mov
cmpxchg
shll
jbe
inc
mov
inc
cld
repz
gs
divl
jb
outsb
popa
xor
mov
repz
mov
mov
ljmp
fldcw
dec
inc
lods
add
sub
mov
pop
rorb
es
daa
xchg
lods
ss
push
add
mov
addb
lret
xor
rorb
adc
push
sub
dec
push
or
cmp
pop
mov
test
mov
push
ret
pop
fistpl
clc
fcmovu
lock
loop
jecxz
adc
pop
sbb
mov
xor
or
faddl
push
xor
cmp
scas
push
push
mov
loop
and
movsb
test
stos
cmp
pop
xlat
fsubr
and
aas
ret
xchg
cmpsb
and
add
loop
sub
lahf
rcll
push
xor
loope
pop
daa
fidivs
cmpsl
or
inc
stos
or
scas
cmp
movsb
fstpl
js
push
or
add
rorb
es
imul
push
stc
mov
inc
aad
mov
shll
movsl
add
mov
inc
or
daa
pop
clc
fcompl
adc
clc
sub
xchg
rorb
repz
jbe
dec
push
push
fcmovb
cmc
aam
bound
arpl
in
shrl
pop
mov
stc
inc
pop
jbe
mov
in
pusha
es
aad
movsb
les
push
jb
and
in
adc
sub
cmp
cmp
lahf
shl
inc
ja
or
push
pusha
mov
mov
mov
push
inc
ja
push
xchg
xorl
xor
push
sub
adc
data16
lods
push
pop
jmp
push
or
lahf
shl
out
shll
insb
insl
fists
pusha
sti
repz
sbb
divb
mov
cmpsl
jl
mov
mov
inc
in
in
pop
mov
mov
imul
cmc
pop
lds
icebp
sbb
ret
dec
addb
mov
pop
cmp
mov
mov
jmp
lods
daa
insb
ss
push
cmc
lea
xchg
xchg
fs
push
popa
cmc
mov
in
sarb
or
mov
shll
and
xchg
cmp
cmp
mov
xor
test
imul
out
sahf
rorl
adc
in
test
mov
xchg
cmpsl
push
push
hlt
fdivs
mov
jbe
jecxz
shlb
dec
add
aas
mov
inc
push
aaa
mov
js
jg
scas
mov
ficomps
loope
cld
ss
cwtl
push
jne
bound
jge
mov
xchg
push
icebp
cmc
inc
stos
fdiv
and
cmp
or
shll
data16
outsl
mov
mov
dec
cmp
loope
dec
loope
rcrl
fwait
xchg
dec
mov
sub
mov
push
fldcw
inc
mov
loope
inc
pop
xchg
adc
lock
xorl
popa
ljmp
pop
js
add
rorl
inc
xchg
fisttpl
adc
lahf
rorl
pop
test
sbb
mov
jne
push
inc
ficompl
pusha
jecxz
lahf
xchg
push
xor
popa
pop
int3
pop
jbe
pop
scas
sub
cmpsb
push
addr16
iret
xchg
jae
loopne
insb
dec
add
ss
in
lahf
fs
mov
cmp
push
clc
repz
lahf
dec
add
cmpsb
test
jnp
sahf
repnz
mov
sub
inc
pop
add
dec
lret
imul
push
mov
push
iret
mov
int3
mov
mov
cmp
nop
into
and
cmpsl
jecxz
inc
jns
lcall
mov
mov
enter
or
rcll
or
lret
jns
mov
shr
sub
mov
cmpsl
dec
jae
mov
fcoms
std
repz
movsb
imul
in
test
mov
dec
inc
mov
add
jb
loopne
addl
pop
ljmp
xor
lods
call
cmc
pop
or
in
cli
test
adc
popa
inc
xlat
lahf
dec
add
and
loope
or
iret
mov
jne
cmp
dec
jmp
push
dec
sub
in
jl
mov
xchg
mov
mov
jge
aas
shlb
xor
scas
in
mov
shrl
repz
je
xor
lahf
aam
arpl
test
clc
mov
mov
push
adc
das
test
lret
hlt
iret
mov
lods
pop
cli
mov
xor
fs
or
jg
and
mov
cmp
out
neg
loopne
mov
iret
mov
daa
mov
mov
iret
dec
sbb
lret
and
jg
movsl
inc
jne
nop
aaa
adc
jno
test
cmp
mov
rolb
sub
std
insl
adc
mov
dec
paddq
sahf
testb
cmp
pop
jnp
sbb
insb
cmp
mov
dec
mov
cmp
testb
lock
mul
lahf
shll
por
loope
mov
cli
out
jb
push
aam
push
or
repnz
es
push
mov
jno
rcl
adc
repz
xchg
add
xorl
push
or
iret
cmpb
fadd
sbb
push
movsl
mov
xchg
les
cwtl
sbb
sub
es
pop
fimuls
loopne
xor
fldl
mov
push
sub
pop
in
jg
nop
popf
lea
or
imul
mov
mov
lahf
sbb
and
adc
sbb
xor
lahf
push
fldl
mov
shll
add
mov
gs
xchg
pop
ljmp
int
js
test
push
into
mov
idivl
jnp
lock
shrb
push
cmp
jmp
hlt
lahf
shl
data16
insl
stos
gs
inc
cmp
or
cmpl
jo
out
fs
ret
lret
or
mov
push
sbb
mov
push
loope
shl
pushf
push
lret
jb
lea
push
adc
ret
sbb
sbb
cld
orl
iret
sub
fcomip
adc
cmc
and
or
leave
mov
ror
fldenv
add
xchg
mov
or
add
in
lea
and
repnz
fucomp
mov
jl
xor
pop
mov
adc
dec
fs
xchg
jecxz
cs
push
xor
xchg
xchg
hlt
iret
mov
inc
data16
repz
mov
shl
rcrl
sbb
cmp
sbb
adc
sbb
ss
sub
cld
insb
push
fsubl
popa
fmuls
cmc
or
loopne
push
jg
mov
xor
fcomps
lock
xor
and
stos
fwait
jp
nop
or
xchg
lahf
dec
add
aad
mov
add
mov
filds
iret
cs
arpl
out
imul
test
sbb
insb
std
iret
fcomip
add
jge
out
push
jne
jbe
ret
outsl
loop
clc
stc
jecxz
mov
mov
lea
add
sbb
jg
stos
enter
out
jle
movsb
push
js
mov
movsb
loop
pop
pop
adc
les
xor
mov
sbb
lds
lahf
mov
cmc
mov
fdivrp
xor
jp
mov
iret
mov
outsl
loope
shll
push
mov
out
or
sub
push
addr16
rcll
in
mov
jb
roll
bound
bound
push
mov
mov
insb
xor
repz
xor
lock
inc
or
cmp
and
pop
aas
fwait
gs
sub
dec
loope
scas
lret
mov
and
sbb
cmpsl
add
sti
adc
add
or
orl
lock
ds
dec
test
sbb
in
inc
mov
cmp
adc
adcb
xor
shrl
in
mov
push
or
pop
push
adc
adc
shrl
cmp
cmp
orl
ss
out
test
sub
xchg
ret
daa
adc
mov
movsb
mov
out
mov
xor
jecxz
and
dec
xor
fadds
dec
outsb
fsubrs
jl
or
aaa
add
cmc
push
sbb
lahf
shl
lock
int
daa
jecxz
xchg
mov
dec
adc
stos
in
popa
mov
test
f2xm1
lahf
xor
pusha
dec
call
pop
into
mov
push
pmulhuw
loopne
ljmp
in
icebp
test
xlat
test
jecxz
inc
enter
mov
int3
mov
add
or
lcall
push
xchg
push
fadd
mov
dec
push
stos
sahf
pop
mov
and
or
mov
dec
xor
cmp
or
inc
ja
push
adc
add
or
pop
fimuls
into
jno
xor
ds
mov
cwtl
fcomp
cmpsb
test
int3
fistpl
pop
orb
jmp
ffree
shll
sub
dec
cwtl
pushf
shlb
mov
mov
clc
add
and
out
outsb
in
mov
inc
pushf
push
pop
dec
insb
cmc
fiaddl
out
mov
insl
mov
mov
jnp
mov
aad
jbe
xchg
stos
mov
stc
jne
psubq
mov
sarl
dec
xchg
mov
cmp
mov
rorl
ja
pop
mov
add
push
insl
and
lock
rclb
cmc
stos
cmp
insb
and
lock
xchg
cmp
mov
call
shl
mov
sub
dec
mov
add
adc
loopne
out
es
push
test
notl
aaa
mov
ret
lret
or
mov
roll
sub
test
js
dec
jmp
in
sub
pop
jbe
hlt
or
loope
outsb
addr16
fiaddl
add
pushf
xor
push
insb
jbe
xlat
mov
sub
push
cmp
add
adc
lods
inc
movsl
sub
cmp
lds
add
ja
insb
sbb
xor
je
lea
clc
mov
push
inc
imul
into
add
push
mov
imul
xlat
cmp
ret
jecxz
popf
sbb
call
mov
dec
push
xor
arpl
pop
cmp
jne
xor
pop
cld
add
pop
hlt
test
add
fnstcw
ja
aad
fisubs
fwait
push
mov
fcmovnbe
repz
lods
outsb
outsb
rolb
fidivrs
cld
jbe
lret
in
jo
pop
and
int
es
daa
fcoms
xchg
fcoms
ret
lds
sbb
push
insb
mov
cmp
jne
rcrl
stos
push
sub
stos
popf
sbb
pusha
sbb
dec
jl
jp
imul
push
insb
xchg
or
xor
mov
sub
push
clc
repz
mov
repz
mov
cmc
cmpb
mov
fs
repz
mov
inc
loopne
in
loop
test
push
push
shrl
mov
push
jp
mov
loopne
loopne
clc
mov
fucomip
push
lods
cs
pop
inc
leave
cmp
jmp
add
mov
sub
mov
mov
sub
cld
into
pop
sbb
dec
lcall
xchg
lods
insl
ja
push
outsl
add
jl
sbb
add
inc
dec
adc
hlt
mov
rcrb
pop
lds
xor
sti
out
addr16
xor
xchg
xchg
clc
push
lods
dec
shrb
sbb
rcl
push
ja
cli
in
cmp
nop
shll
add
jbe
inc
fcmovnu
in
hlt
push
dec
adc
push
jl
std
sti
rcll
or
xchg
aas
push
xchg
enter
pop
popf
lcall
sub
dec
sahf
xchg
imul
iret
mov
repz
add
push
lods
mov
shr
popa
xchg
xchg
inc
addr16
push
fstp
daa
loope
ljmp
mov
xchg
ds
add
xor
inc
xchg
cmp
lahf
rorl
test
int
es
es
xor
fcmovb
mov
test
mov
jmp
xor
pop
mov
mov
pop
sbb
in
lahf
sub
add
pop
mov
jne
pop
push
mov
scas
sbb
cmpsb
daa
int3
mov
xchg
jb
test
pop
sbb
clc
lcall
into
mov
xchg
sub
ja
xchg
imul
lahf
inc
xlat
incb
inc
mov
das
pusha
imul
idivb
pop
dec
pop
or
sub
adc
sbb
or
or
pop
inc
fwait
jo
ss
fdivrl
jno
lea
outsl
xchg
lret
int
cmp
sub
adc
pusha
dec
fs
cltd
call
mov
push
push
cld
or
xchg
das
int3
mov
aas
insb
inc
loop
cmp
lret
inc
add
sub
pop
xchg
mov
repz
mov
cmp
mov
sarb
ss
push
or
inc
fs
rcl
ret
loopne
testb
cmp
popfw
jno
test
mov
dec
mov
daa
sub
jne
xchg
test
test
insl
arpl
iret
je
clc
mul
add
test
repz
test
loope
push
or
inc
cmp
sbb
xor
outsb
xchg
faddl
pop
mov
xor
mov
loop
movsl
cmp
inc
mov
popf
fcoml
pushf
push
xor
rcl
repz
popa
stos
in
aas
call
popl
cltd
filds
xor
scas
dec
into
pop
fbld
cld
inc
cmpsl
cltd
lock
pop
popf
out
enter
inc
adc
test
push
dec
aad
and
cmp
loopne
daa
cs
xchg
adc
je
push
inc
lds
fidivrl
adc
pop
sbb
dec
jg
fcomip
pop
aas
daa
testl
inc
aad
fcomi
inc
loopne
cmp
stos
inc
sbb
in
call
sbb
adc
push
sysenter
sbb
push
add
push
xor
mov
repz
mov
into
pushl
nop
mov
mov
insl
mov
or
movsb
push
jl
mov
adc
push
xor
mov
orb
movsb
fisubrs
shlb
mov
pop
xchg
mov
add
int3
movsb
inc
mov
stos
lret
or
outsb
pop
mov
xchg
sbb
mov
lea
pushf
push
in
cmpsl
push
scas
cmp
jle
adc
sbb
mov
ljmp
scas
push
jo
lods
mov
ja
mov
dec
loope
shll
lock
pop
xor
xchg
subl
mov
fmuls
repz
mov
dec
loope
shr
pusha
xchg
add
imulb
aam
bound
mov
nop
pop
das
push
sub
scas
scas
rep
aad
cmc
xor
dec
xor
add
dec
and
inc
test
xor
dec
jle
and
subl
or
mov
sbb
or
loopne
xchg
fstl
loopne
and
cmp
fdivp
add
clc
leave
test
fst
cmc
jns
mov
test
add
callw
cltd
sbb
stc
pop
leave
sbb
mov
or
mov
repnz
add
pmulhw
add
div
int3
cmp
and
mov
push
pop
push
addr16
lahf
inc
aas
mov
dec
int3
pop
ja
mov
add
iret
mov
jae
mov
cmpsb
inc
cltd
lds
push
dec
je
cmp
divl
push
xchg
xchg
enter
mov
test
cwtl
das
fdivs
stos
mov
xchg
es
pop
mov
adc
sbb
fsubrl
mov
sub
fldl
push
xor
outsb
pop
sub
aam
test
cmp
shlb
ljmp
stos
mov
cmp
repz
xor
dec
mov
lock
repz
mov
sub
pop
inc
sbb
jle
mov
loope
repz
xor
scas
mov
movsl
jg
xchg
fnstcw
mov
push
add
dec
mov
sub
push
mov
out
mov
insl
fsubrp
enter
sqrtps
sub
mov
mov
inc
inc
mov
hlt
iret
mov
mov
leave
lcall
clc
sti
pop
adcb
add
mov
lea
pop
cltd
fmulp
jbe
pop
sub
push
xlat
out
xchg
js
and
adc
pop
sub
and
mov
push
mov
imul
fs
nop
shlb
dec
mov
loope
jmp
mov
cltd
rcrb
push
or
movb
and
ss
xchg
mov
xchg
cld
iret
jne
and
ljmp
icebp
xchg
movsl
jne
sbb
xchg
ljmp
mov
repz
mov
sbb
add
cs
repnz
enter
rclb
adc
cmp
fstpt
xor
mov
and
cmpsb
push
adc
orl
inc
pusha
dec
test
or
movsb
stc
cmpsb
cmpsb
ret
xchg
xor
inc
push
dec
in
mov
scas
push
xorl
push
loope
sar
je
cmp
shrl
mov
sub
outsl
mov
shll
mov
mov
mov
sub
lods
xor
cwtl
mov
mov
inc
xchg
jns
or
or
and
sbbl
pop
movsl
push
xor
mov
mulb
ds
in
xor
add
or
adc
das
adc
pop
dec
fbstp
xor
sub
rcll
xchg
adc
mov
into
jmp
aaa
and
or
aam
iret
stos
pop
mov
mov
push
xor
adc
popf
inc
ja
test
dec
jg
fsubrl
jge
mov
mov
scas
loope
mov
in
add
push
cmp
sbb
repz
or
mov
cld
pop
add
out
not
cli
aad
test
test
sbb
ret
pop
adc
pop
loop
popa
sbb
or
xor
scas
push
and
mov
test
mov
jmp
and
bound
pop
mov
fs
sbb
jnp
out
stos
fs
inc
dec
push
xor
pop
jecxz
add
push
xor
fdivr
mov
xchg
shlb
xchg
cmpsb
cs
xor
add
or
in
mov
in
fsubp
outsl
subb
jne
or
push
dec
inc
lock
hlt
iret
mov
push
loope
rorl
arpl
pushf
mov
hlt
mov
mov
fisubl
lret
dec
test
shll
fwait
mov
repz
jae
xor
lahf
push
in
loope
aad
loope
shrl
lret
repz
jl
jnp
jecxz
xchg
cwtl
rorl
leave
pop
aas
mov
mov
or
lahf
rcr
add
jecxz
sbb
mov
pushf
push
test
test
add
push
cmp
in
dec
in
js
call
push
lret
dec
adc
in
push
roll
flds
jns
ja
mov
shl
mov
xchg
arpl
cs
and
xchg
jle
dec
and
jle
ss
iret
pop
loopne
sub
inc
stos
sub
adc
add
add
fcomps
hlt
iret
mov
xchg
loope
rcr
ljmp
lods
out
lahf
js
mov
mov
and
out
cltd
jbe
sbb
lea
jmp
shl
mov
add
iret
mov
sub
scas
pop
sbb
mov
in
shl
mov
dec
pop
mov
pop
fdivrs
inc
loope
lock
add
scas
test
sbb
mov
outsb
out
and
pop
xor
jle
das
insl
xchg
mov
jmp
gs
aam
cmp
addl
out
pop
push
push
sbb
int3
mov
mov
in
es
testb
xchg
test
or
add
popf
stc
roll
adc
dec
dec
test
fnsave
push
cmp
ss
ret
jl
mov
and
push
sbb
lret
loop
sbb
jecxz
int
and
fisttps
jle
inc
nop
push
sar
mov
sar
dec
out
adc
push
jo
add
divl
mulb
shrb
cwtl
dec
pop
xor
sub
mov
inc
mov
xchg
mov
or
mov
repnz
jle
sub
adc
add
xchg
jp
inc
inc
mov
jg
dec
cmpsb
dec
pop
outsl
sbb
pop
rcll
and
push
das
pusha
aas
stos
dec
inc
and
insb
xchg
arpl
mov
xor
js
dec
mov
jbe
lcall
popa
mov
movsb
nop
xchg
pop
mov
mov
arpl
fdiv
jg
cmpsb
lret
sbb
and
adc
sahf
aas
insb
sbb
cmp
sbb
out
and
mov
repz
dec
push
decl
outsl
and
adc
jno
lahf
mov
jae
dec
push
scas
sbb
and
stos
or
jmp
rorl
xchg
xor
loope
enter
das
dec
mov
in
and
lock
pop
mov
shlb
scas
sbb
jb
bound
je
xor
lahf
loop
inc
add
aas
inc
ss
push
iret
lret
push
call
mov
cmc
imul
cmp
hlt
mov
imul
aad
cld
add
mov
jns
or
test
int
outsl
stc
xor
cmp
fsubrs
loopne
dec
sub
xchg
das
xor
mov
shlb
cmp
cltd
adc
and
cmp
dec
pushf
cli
sub
arpl
cltd
call
xor
and
sbb
mov
and
fsubrp
xlat
and
xchg
jecxz
push
sbb
lahf
shl
test
xor
dec
mov
sub
jne
out
or
jecxz
in
arpl
cmp
fiaddl
push
push
sub
pop
or
into
or
out
jl
dec
ret
shrl
push
clc
repz
lock
sbb
sbb
push
out
aad
daa
addr16
mov
jl
xchg
mov
cwtl
mov
enter
out
imul
jbe
mov
outsl
std
push
jle
inc
jns
sub
sbb
mov
repz
add
mov
lds
cmpsb
mov
rcrb
mov
scas
xchg
pop
pusha
icebp
xchg
dec
pop
sbb
jmp
mov
xor
xchg
mov
sbbb
cmpsl
in
mov
pop
push
in
sub
jne
in
cs
testl
pusha
mov
xchg
xor
ss
and
xchg
popf
push
lcall
lods
jmp
mov
xchg
inc
aad
pop
sub
lahf
sarl
test
lret
repz
fisttpll
adc
adc
divl
loope,pn
pushf
cmp
jo
rclb
pop
cmp
aam
adc
dec
popa
fnsetpm(287
dec
add
stc
add
add
adc
mov
ss
test
hlt
fisttps
scas
out
jp
call
iret
into
out
sbb
test
lods
insb
fmulp
sbb
sub
cli
dec
inc
sbb
ljmp
loope
mov
into
mov
inc
cmc
movsb
retw
push
aaa
jnp
xor
into
mov
sti
int3
mov
repz
cs
inc
mulb
cmp
aas
sahf
jle
arpl
jle
insb
push
cmp
pushf
jne
out
scas
int
dec
push
cld
xor
cmp
repz
add
dec
xor
and
mov
iret
mov
lret
jnp
xchg
xchg
cmc
add
shll
in
pop
lret
push
test
ja
shl
and
cld
mov
jg
add
dec
mov
shrl
sarl
mov
ss
add
sbb
loopne
mov
push
lock
leave
inc
icebp
mov
loopne
cmc
nop
test
mov
test
xchg
inc
aam
ret
inc
dec
cmp
inc
daa
dec
mov
test
push
dec
sbb
mov
icebp
shr
addr16
push
or
dec
sub
cmp
lahf
rcrl
xchg
loopne
fisubrs
sahf
mov
insl
inc
out
jo
notl
cltd
adc
icebp
std
adcl
mov
aas
imul
decb
xchg
adc
les
mov
cmp
pop
cmp
mov
or
icebp
pop
dec
cmp
fisubs
stos
fnstenv
xchg
jne
inc
lods
push
jecxz
xrstors
xchg
dec
daa
fucomip
test
jl
fildll
pop
push
sub
push
test
fldl
mov
sub
push
push
loope
sub
scas
pop
and
jp
sbb
sub
mov
fldt
push
cmp
inc
pop
stos
mov
imul
mov
out
test
push
insl
idiv
test
pop
sub
jg
mov
cmc
dec
xchg
icebp
xchg
js
fcomps
xchg
out
inc
jle
imul
add
xor
sub
mov
nop
fistl
iret
mov
aad
rcrb
pop
leave
xchg
dec
cmpsl
mov
push
outsl
lcall
sbb
ljmp
lret
push
pop
mov
out
outsb
dec
cmp
push
mov
arpl
aad
lret
dec
push
push
dec
out
push
rcrl
pop
in
sub
fs
cmp
jle
ja
pop
mov
push
and
add
in
mov
and
in
sbbb
push
pop
cmp
mov
pusha
cmp
fidivrs
add
inc
sbb
push
mov
and
daa
jge
xchg
lods
pop
push
aam
inc
sub
xor
lea
call
or
scas
and
or
in
js
mov
push
xor
rorb
into
clc
xor
ss
rcr
or
pop
out
ljmp
cwtl
pusha
dec
sbb
mov
mov
or
pop
inc
sbb
push
push
ss
jo
mov
hlt
insl
loope
sarb
popf
pushf
jg
lds
subl
or
cli
sbb
jle
lahf
push
cs
mov
jmp
leave
aam
popa
scas
idivb
mov
pop
in
mov
mov
add
jae
sub
mov
inc
call
push
or
movsl
fs
and
sbb
fstp
lea
lfs
imulb
lods
push
out
mov
mov
fistpl
push
test
imul
fcomip
insb
jae
daa
adc
pop
cli
dec
popf
jp
mov
dec
pop
add
sub
outsb
add
jl
bound
jp
in
stos
jge
and
icebp
into
mov
or
mov
hlt
iret
mov
in
out
sbb
jge
xor
out
jmp
pop
movsb
gs
enter
insl
inc
aad
data16
je
mov
scas
jns
out
imul
loope
shll
icebp
movsl
aaa
leave
mov
sbb
clc
test
into
jns
cmp
pop
aam
test
scas
stos
push
lret
dec
addl
loop
push
and
pop
and
cmpsl
push
pop
fildl
and
cwtl
cmp
adc
mov
sub
mov
xchg
daa
pop
mov
mov
in
push
push
fidivrs
sub
and
scas
mov
daa
stos
sub
or
and
subb
mov
mov
cmp
lahf
rcr
repnz
int
xorb
jae
sbb
jecxz
loope
outsb
hlt
cli
idivl
or
dec
adc
gs
mov
insb
mov
push
stc
in
lahf
js
in
cmp
adc
loope
popa
jp
jmp
push
mov
push
mov
adc
lret
xor
push
adc
fxch
sub
xchg
mov
sbbb
and
iret
ja
xchg
lret
repz
ds
out
fsub
xchg
out
ret
lcall
add
sub
fisubs
mov
xlat
jns
arpl
pop
mov
into
add
push
mov
pop
iret
mov
lahf
mov
stc
movsb
fldcw
mov
mov
fbstp
stos
mov
and
jns
sbb
xor
dec
mov
xor
jge
adc
inc
into
incl
lock
dec
xor
sub
sub
loope
inc
lock
scas
int3
mov
xchg
fstps
or
in
fdivrl
ja
xchg
pop
mov
sub
mov
push
jns
sbb
mov
and
xor
test
mov
or
sbb
push
repnz
xchg
aas
lcall
loope
rcrl
mov
lock
scas
repz
mov
jb
mov
push
mov
xor
gs
adc
or
std
es
inc
es
dec
loope
shll
data16
das
xchg
jg
aas
addl
sub
into
cmp
out
jbe
in
mov
mov
sub
mov
jg
mov
xchg
rsm
cmpsl
stc
sbb
inc
inc
inc
movl
sub
scas
ftst
scas
sbb
lahf
shl
sub
sbb
inc
fisttpl
out
cmp
sub
add
pop
sub
into
leave
faddl
fdivr
flds
push
mov
mov
push
cltd
mov
fcoms
adc
insl
mov
mov
dec
mov
loope
repz
in
or
imul
icebp
inc
jno
mov
leave
outsl
cmp
and
lret
std
and
jle
xchg
cmp
insl
jnp
xadd
pop
imul
pop
cmp
jns
push
and
popa
cltd
sub
sbb
es
daa
sbb
pop
gs
clc
push
or
shll
and
mov
rcll
cmp
adcl
je
jns
push
aas
fdiv
cltd
ret
cmp
pusha
shlb
es
fcompl
scas
pop
ret
push
mov
iret
mov
push
fistpl
or
jb
mov
sbb
sbbl
test
ss
movsl
call
lret
repz
sub
test
adc
enter
pop
jo
mov
loope
outsb
sub
adc
cmp
mov
jp
ret
pop
insl
add
lret
mov
inc
xor
jg
cmp
mov
sbb
pop
into
stos
inc
and
mov
push
push
jns
jo
out
or
jp
add
data16
jns
js
pushf
and
fisttpll
ljmp
xchg
pusha
popf
xor
cltd
sub
loope
cli
iret
mov
add
jns
enter
arpl
xor
adc
fiaddl
iret
mov
adc
mov
mov
mov
lea
mov
mov
jge
or
js
lea
add
clc
stc
icebp
pop
ss
pushl
add
movsl
pop
ret
jl
pop
hlt
ret
mov
dec
jno
in
and
js
mov
sub
rcrb
jns
add
mov
shll
cmp
mov
scas
xor
leave
ficoms
push
lods
dec
enter
cmp
je
and
sub
inc
xchg
xor
das
lods
mov
cli
inc
dec
nop
lods
adc
adc
mov
repnz
inc
or
or
add
mov
or
iret
insb
mov
stos
bound
ljmp
out
shlb
into
ss
test
daa
mov
icebp
into
mov
addr16
mov
repz
repz
mov
push
loope
roll
sub
loop
xlat
mov
es
js
loopne
mov
loope
ljmp
mov
mov
test
inc
test
jbe
xchg
fdivl
mov
xor
adc
adc
sbb
outsl
shlb
pop
arpl
shr
mov
loopne
dec
ret
mov
ds
pop
int3
movsl
mul
fs
jge
or
clc
jle
insb
js
iret
xchg
mov
dec
sub
addr16
jo
ja
stos
pushf
pop
or
mov
iret
pusha
jo
pop
fs
std
add
js
popf
jmp
jp
inc
icebp
jmp
fsub
jmp
push
cmp
repz
nop
and
xchg
mov
fldcw
out
mov
movsb
jge
int3
add
pusha
in
enter
sub
sbbl
xlat
jae
xor
lahf
outsb
popf
mov
aam
cs
out
in
sbb
dec
cmp
xor
idivl
mov
insl
push
daa
inc
sub
jbe
adcl
mov
out
scas
dec
imul
clc
mov
nop
push
pop
jno
shll
push
cmp
repnz
and
daa
movsb
mov
sahf
pop
or
aas
int3
notb
xchg
cmp
cmp
xchg
es
rcr
shl
scas
and
inc
xor
scas
mov
insb
seto
jae
shrl
sub
scas
shl
iret
loope
cmp
mov
outsl
out
decl
xchg
or
mov
leave
iret
sub
cmp
out
add
push
fisttpll
test
lods
xchg
or
jl
push
jmp
mov
adc
sub
pusha
aas
shlb
jp
cli
mov
rcrb
enter
negl
jbe
adc
or
mov
xor
and
xlat
addl
in
dec
sub
mov
mov
xchg
mov
pop
sarb
mov
mov
mov
or
int3
xor
inc
inc
popf
cmc
pop
cwtl
push
ds
bound
push
mov
push
or
inc
jae
iret
cmp
lret
mov
rorb
shl
xchg
adc
mov
push
cmp
mov
inc
cwtl
mov
and
int3
dec
push
mov
in
xchg
jae
loopne,pn
pop
mov
push
shlb
mov
jae
push
stos
insl
dec
pop
jmp
adc
or
sub
jne
sbb
fildll
add
adc
movsl
xchg
sub
leave
sub
orl
inc
mov
mov
in
push
adc
xchg
fwait
leave
add
mov
notl
bound
add
fisttpll
sti
fmulp
daa
cmp
sub
cmc
cmpsl
sbb
push
lret
xor
inc
jg
or
loopne
popa
sub
je
xor
lahf
hlt
jo
push
xchg
mov
dec
dec
test
lahf
enter
and
fs
lock
xchg
xor
sub
stc
sarb
ficompl
mov
inc
mov
iret
mov
push
mov
mov
cli
stc
icebp
cld
mov
roll
inc
in
lds
test
fwait
test
lock
movsb
push
les
inc
or
lahf
mov
and
cli
push
imul
or
das
rcl
push
jns
jno
push
iret
add
mov
fcomi
out
cmpsb
cmp
lahf
rcr
or
outsl
mov
xchg
sbb
sbb
or
push
add
or
mov
mov
pop
fcoml
adc
ret
fwait
in
mov
push
xor
sahf
sbb
mov
sub
loopne
inc
sbbl
add
int
jb
xchg
add
dec
mov
test
gs
adc
inc
mov
mov
sub
call
mov
cli
les
loopne
mov
xor
into
loop
pop
dec
aad
ret
adc
inc
mov
ret
addr16
mov
cmp
aaa
inc
rcrl
loope
cmpsl
push
cli
mov
dec
and
sub
das
dec
pusha
adcb
add
stc
jo
sbb
mov
lock
mov
sbb
lcall
loopne
loop
push
push
xor
lahf
mov
xchg
xor
outsb
cltd
sbbb
loop
fs
mov
dec
pusha
mov
mov
inc
pop
or
or
ret
push
stos
mov
push
mov
popa
or
icebp
xor
inc
adc
inc
fbstp
pop
jge,pt
xchg
cli
loop
rcrl
mov
mov
pop
ds
test
push
sub
mov
pop
xor
ljmp
nop
js
loop
mov
inc
cmc
in
and
cli
icebp
and
sar
fisttps
mov
and
mov
pop
cmp
daa
dec
jmp
mov
and
xorl
push
push
lcall
or
fisttpl
mov
lahf
rcr
clc
mov
cmpsl
stos
daa
gs
movsl
test
lods
mov
leave
push
repnz
hlt
test
push
add
dec
pop
in
scas
sub
mov
sbb
in
or
fst
flds
insb
xchg
add
mov
xchg
sub
and
hlt
iret
mov
sub
scas
pop
mov
mov
test
cmpb
inc
pop
fildll
push
sbb
pop
fbstp
push
xorl
in
sbbl
dec
xor
and
push
xor
sub
in
xlat
pop
push
add
test
nop
test
adc
outsl
cmp
or
out
aaa
in
repnz
imul
jae
xor
lahf
nop
shl
addb
iret
add
shll
test
dec
add
pop
lock
ss
std
dec
sbb
pop
pop
inc
ljmp
loope
call
push
xor
push
cmp
lret
repz
sarb
outsl
shlb
push
cmp
jae
adc
repz
and
aam
pop
pop
jg
add
or
or
mov
inc
stos
cmp
lods
mov
pop
out
dec
scas
inc
cmp
fdivrs
xchg
test
out
inc
dec
push
js
jp
pop
xchg
push
push
jle
loopne
loope
repnz
das
scas
cmp
dec
sub
aaa
data16
push
movsl
inc
mov
xchg
push
hlt
int3
mov
lods
fwait
jae
int3
dec
push
lret
and
xor
mov
out
js
icebp
negl
adc
cmp
rorl
shlb
loope
aam
fimuls
xor
lahf
mov
lea
adc
adc
adc
push
repnz
push
xor
and
repz
mov
repz
cltd
rcll
lahf
shll
mov
fistpl
or
dec
ds
outsb
lods
fcmovne
ret
das
and
icebp
aam
test
lcall
sbb
cmp
lahf
rcrl
and
int
adc
jno
xor
mov
mov
insl
push
adc
adc
xor
mov
jb
das
std
loopne
xchg
inc
pop
or
push
mov
int3
ja
andl
stos
shl
pushf
push
mov
adc
cmp
xor
stc
dec
dec
popa
pop
and
lcall
je
out
pop
sub
repnz
cmp
lahf
rcrl
insl
pop
mov
adc
jno
insl
sti
sarl
cmp
por
loopne
pop
imul
std
lea
pop
mov
sbb
sub
push
test
out
ret
sbb
inc
sahf
mov
cmpsl
mov
mov
mov
push
xor
mov
push
imul
fcmovne
pusha
and
mov
dec
mov
jp
fdivrl
mov
xchg
or
mov
outsl
sbb
insb
in
ret
jle
mov
pop
test
fiadds
rcll
aad
leave
in
neg
les
mov
mov
outsb
sbb
cmpsl
aad
push
mov
dec
mov
sbb
push
mov
hlt
fimuls
ds
lahf
pop
cmp
lahf
mov
xor
push
or
ficoml
xchg
jbe
cs
or
sbb
orl
xchg
lret
xchg
push
cmp
int3
jg
loopne
fsts
loop
add
add
mov
sub
loope
rol
mov
inc
nop
and
insl
push
xor
fistpll
in
fsubs
mov
inc
xchg
xchg
cld
iret
loopne
repz
pop
mov
imul
insb
je
daa
or
sahf
jecxz
mov
jmp
add
push
xchg
aas
in
pop
pop
fs
jo
lcall
push
dec
mov
iret
testb
lods
ret
fisttpll
ljmp
pop
repz
fldl
int
lcall
fldcw
fildll
pop
xor
xchg
adc
add
lea
cmp
pop
xchg
hlt
iret
icebp
xchg
sbb
mov
arpl
enter
push
dec
pop
mov
push
inc
mov
loope
jp
dec
movsb
sbb
mov
pop
shrd
imul
in
aad
stc
jb
sti
push
mov
inc
fwait
xlat
xchg
pop
mov
mov
xor
add
popw
lds
cmp
sbb
adc
cmp
out
mov
cmp
lahf
cmp
inc
xlat
std
hlt
mov
pop
pop
std
xor
xorb
fimuls
cld
sbb
aad
outsb
mov
stos
sbb
out
adc
adc
ljmp
pop
popa
pop
adc
dec
int3
or
mov
lret
jbe
sar
add
jae
mov
jg
call
cld
repz
jbe
into
imul
cli
test
icebp
mov
pop
xor
les
sbb
es
imul
mov
in
ja
sub
cmp
adc
mov
push
aad
or
stos
or
and
mov
out
icebp
push
mov
out
ss
mov
hlt
nop
sbb
sub
ss
rcl
addr16
lea
insb
push
insb
sbb
test
je
loope
shll
in
std
jg
ret
adc
ficomps
pop
int3
imul
mov
sbb
es
ds
addb
inc
xor
ret
pop
xchg
dec
fwait
fwait
clc
je
repz
cmp
icebp
mov
mov
stos
pop
popf
push
add
cmc
iret
fucomip
cmc
sbb
dec
mov
add
repz
and
sbb
xchg
and
dec
pop
gs
mov
push
pop
je
shrl
inc
ror
nop
sahf
inc
push
popa
shrb
add
and
inc
or
in
cmp
push
add
popf
pop
sub
sbb
cld
push
cs
cltd
aad
loopne
rcr
loopne
mov
sbb
jae
inc
cs
mov
scas
push
xor
mov
lret
repz
xchg
add
scas
and
repnz
ret
push
movsl
mov
push
lods
cmp
enter
push
repz
jbe
je
lods
movsb
fiaddl
xor
pop
fs
mov
mov
ret
mov
push
xor
sbb
insb
jne
aam
out
lret
pop
xchg
rcrl
ret
dec
call
inc
cwtl
imul
js
movsb
arpl
nop
je
xor
lahf
or
mov
sbb
fdivl
test
out
ja
adc
dec
push
mov
sbbb
sbb
jecxz
lds
jecxz
mov
fcmovnbe
repz
cmp
pop
pop
xchg
je
out
push
inc
mov
xor
cltd
add
ljmp
mov
push
repz
leave
adc
lods
jnp
xchg
out
sbb
xchg
icebp
cmp
aam
xchg
test
loopne
shl
inc
xchg
cmp
lds
jb
gs
orl
pop
sbb
xor
push
lods
jecxz
add
shlb
or
imul
and
clc
mov
xor
hlt
xorb
push
insl
out
xor
repnz
imul
add
jl
je
mov
mov
dec
adc
shrb
jb
xor
lahf
rol
mov
fwait
or
adc
mov
jp
add
mov
mov
leave
inc
inc
or
jb
xor
test
enter
ror
loope
or
sti
repz
insb
sbb
lea
adc
gs
and
movaps
enter
stc
cs
inc
xor
cmp
sub
xor
lahf
shl
