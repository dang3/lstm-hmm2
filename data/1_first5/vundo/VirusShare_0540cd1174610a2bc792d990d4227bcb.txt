add
sub
sub
and
sub
mov
add
add
and
ror
mov
mov
push
lea
jmp
sub
mov
xor
xor
add
shl
mov
push
push
jmp
test
jmp
add
add
push
or
mov
mov
and
jmp
push
push
lea
jmp
mov
pushl
hlt
ret
int3
int3
int3
mov
mov
jmp
cmpl
lea
je
push
push
shr
sub
sub
sub
mov
sub
shr
jmp
movzwl
movzwl
add
mov
inc
or
sub
mov
lea
sub
test
mov
jmp
sub
and
add
mov
add
push
call
sub
mov
cmp
jmp
push
or
or
xor
mov
push
mov
mov
movl
call
lea
call
jmp
movb
call
cmpb
jne
add
ret
and
mov
xor
xor
mov
pop
ret
add
add
add
push
and
mov
and
cmpw
je
jmp
jmp
add
pusha
mov
call
popa
jmp
mov
ret
add
add
add
add
xchg
add
add
mov
or
sub
xor
mov
and
cmp
jne
and
add
jmp
mov
cmp
add
shr
mov
test
jne
jmp
or
sub
inc
and
mov
add
add
jmp
add
add
add
sub
jne
add
cmpl
jne
pop
jmp
xlat
outsl
ljmp
and
sub
mov
jmp
and
rol
add
mov
shl
xor
mov
shr
jmp
sub
cmpw
jne
or
add
mov
shl
mov
mov
xor
and
cmp
nop
nop
nop
nop
nop
sete
mov
ret
add
add
add
adc
add
pop
pop
mov
pop
ret
pop
jmp
add
push
add
mov
mov
sub
test
jne
push
jmp
call
inc
call
ret
ret
pop
leave
subl
jmp
ret
jmp
mov
jmp
sub
test
jne
nop
nop
nop
nop
nop
inc
add
or
add
xor
mov
movzbl
add
mov
lea
shr
and
sub
mov
shr
and
add
jmp
lea
lea
cltd
and
add
jmp
add
add
out
xor
mov
sub
mov
push
push
push
jmp
push
and
xor
and
mov
test
mov
movl
mov
jne
xor
jmp
call
sub
xor
xor
or
mov
jmp
or
and
add
add
mov
cmp
jne
xor
decl
ret
add
add
add
out
sub
add
mov
shr
and
lea
jmp
mov
add
add
mov
jmp
add
mov
mov
shl
mov
mov
mov
and
shl
dec
xor
xor
mov
inc
dec
mov
jmp
mov
or
inc
dec
mov
and
mov
lea
shr
xor
mov
ror
mov
add
jmp
push
jmp
add
mov
test
je
push
push
mov
rol
xor
rol
ror
or
mov
sub
jmp
test
jne
add
nop
nop
nop
nop
nop
ret
or
ror
mov
sub
xor
and
mov
test
jmp
test
jne
mov
mov
pop
ret
add
add
add
pop
sbb
hlt
jle
jmp
add
push
add
and
and
shr
mov
mov
test
je
mov
add
cmpl
je
push
jmp
push
push
call
call
xor
inc
mov
xor
mov
jmp
test
jne
push
jmp
dec
call
jmp
push
push
subl
call
ret
jmp
or
sub
or
mov
jmp
add
push
shr
inc
ror
and
add
mov
sub
push
push
jmp
push
jmp
push
jmp
call
push
call
addl
push
jmp
call
push
push
push
call
push
subl
push
push
jmp
call
xorl
call
mov
shr
and
xor
ror
inc
mov
jmp
push
nop
jmp
pushl
call
jmp
mov
or
mov
or
mov
jmp
add
add
jmp
add
add
add
add
ljmp
add
jmp
sub
push
jmp
jmp
push
call
pop
subl
lea
push
push
jmp
jmp
call
call
nop
addl
push
jmp
ret
inc
call
call
jmp
jmp
int3
subl
jmp
shr
or
and
sub
mov
sub
test
jne
mov
mov
movzbl
add
mov
lea
jmp
test
lea
jle
rol
xor
add
inc
mov
jmp
lea
nop
jmp
dec
and
ror
mov
mov
add
jmp
mov
movl
jle
add
jmp
mov
or
and
and
mov
mov
ror
rol
mov
jmp
xor
jmp
add
jmp
add
in
jno
pop
mov
and
add
inc
mov
jmp
jne
xor
ret
ret
add
add
add
mov
mov
jmp
add
add
add
push
jmp
call
ret
inc
xorl
call
test
jmp
add
jmp
leave
push
jmp
ret
call
call
xorl
push
jmp
call
call
push
call
push
leave
xorl
push
jmp
leave
leave
leave
pop
call
jmp
call
addl
push
jmp
subl
jmp
sbb
addl
les
les
xchg
incl
adc
jne
cmpb
jne
nop
nop
nop
nop
nop
nop
nop
add
and
mov
nop
jmp
lea
jmp
add
add
add
add
adc
test
jne
jmp
mov
rol
or
and
mov
jmp
sar
jmp
add
mov
mov
mov
mov
or
mov
sub
jmp
rep
movzwl
and
mov
xor
mov
add
add
sub
add
cmp
jmp
jecxz
addr16
pop
ret
mov
ret
add
add
add
add
add
mov
add
add
mov
push
jmp
mov
lea
push
jmp
addb
jmp
sub
sub
sub
mov
mov
jmp
mov
mov
jl
inc
mov
xor
ror
mov
mov
mov
push
jmp
push
call
add
mov
and
xor
ror
and
shr
mov
add
jmp
test
jle
dec
xor
xor
xor
add
mov
lea
shr
xor
xor
and
mov
test
jle
mov
shr
mov
or
mov
jmp
jne
add
jmp
test
jne
movzbl
add
mov
lea
and
mov
shr
nop
nop
nop
nop
nop
and
add
test
jmp
add
jne
add
ret
mov
xor
test
jmp
mov
push
add
mov
inc
mov
call
add
inc
sub
shr
mov
call
jmp
lea
sub
sub
sub
jne
jmp
ret
ror
add
mov
push
jmp
push
leave
addl
call
mov
xor
rol
rol
sub
mov
jmp
je
add
or
and
or
mov
mov
sub
jmp
je
movsbl
rol
jmp
push
jmp
call
call
addl
push
jmp
call
push
xorl
jmp
jne
add
jmp
mov
sub
sub
jne
test
mov
jmp
add
shl
mov
dec
dec
mov
lea
push
push
jmp
nop
push
push
subl
push
push
jmp
test
mov
jne
movzbl
add
mov
mov
mov
mov
and
or
and
mov
jmp
add
xor
mov
test
jne
cmp
jmp
sub
adc
jne
pop
pop
pop
mov
pop
ret
add
add
add
add
add
mov
rol
dec
add
add
mov
rol
or
mov
add
jmp
call
push
jmp
jmp
call
call
inc
pop
inc
xorl
jmp
out
mov
call
add
test
jmp
je
add
cmp
jl
pop
xor
pop
jmp
call
xor
mov
call
sub
mov
call
movl
lea
call
jmp
mov
call
jmp
ss
jne
test
mov
jle
jmp
push
jmp
jmp
int3
leave
addl
mov
call
push
jmp
jmp
push
inc
jmp
subl
mov
call
push
jmp
push
int3
leave
pop
push
int3
call
push
inc
subl
jmp
mov
je
xor
shl
add
mov
mov
sub
test
jne
movzbl
add
mov
jmp
shl
mov
pop
ret
xor
mov
movzwl
add
mov
mov
jmp
mov
mov
sub
mov
jmp
xor
mov
mov
or
mov
push
dec
add
add
sub
xor
mov
ror
mov
pop
dec
sub
shr
xor
mov
xor
jmp
mov
call
add
push
jmp
call
dec
push
push
xorl
lea
push
push
jmp
xorl
push
jmp
int3
call
call
dec
push
int3
ret
xorl
jmp
aad
lea
shr
sub
xor
mov
and
mov
shr
and
jmp
sbb
out
add
pop
sub
shr
or
or
sub
mov
pop
ret
add
add
add
xor
mov
mov
mov
mov
jmp
push
sbb
mov
jmp
pushf
lret
rolb
add
add
inc
inc
and
add
add
inc
xor
add
xor
mov
sub
test
jne
jmp
in
test
dec
sbb
test
pop
sub
pop
and
cwtl
add
sub
jne
pop
pop
pop
sub
mov
rol
mov
pop
ret
add
add
add
test
ljmp
add
cmpb
jne
add
ret
jmp
or
movzbl
add
lea
add
mov
shr
jmp
mov
pop
mov
mov
pop
mov
pop
jmp
clc
arpl
subl
lea
jne
test
jmp
jb
ret
add
add
add
jmp
pop
push
call
jmp
ret
pop
push
subl
push
jmp
call
push
call
push
ret
int3
xorl
push
jmp
push
nop
addl
call
jmp
std
mov
sbb
test
add
loopne
arpl
inc
and
mov
sub
jmp
mov
nop
nop
nop
nop
nop
je
add
ret
pop
pop
mov
pop
dec
mov
and
mov
jmp
and
mov
nop
nop
nop
nop
nop
mov
add
jmp
jmp
daa
cmp
ret
add
add
add
add
nop
nop
nop
nop
nop
add
jmp
movzbl
xor
shr
mov
and
add
add
shr
nop
nop
nop
nop
nop
mov
mov
je
test
je
ror
ror
and
or
dec
mov
nop
nop
nop
nop
nop
sub
add
sub
mov
mov
jne
nop
nop
nop
nop
nop
rol
mov
mov
mov
nop
nop
nop
nop
nop
movl
jmp
movl
mov
nop
nop
nop
nop
nop
movl
jmp
nop
nop
nop
nop
nop
lea
call
cmpl
jne
cmp
jne
call
test
mov
nop
nop
nop
nop
nop
je
shr
shl
add
inc
sub
mov
sub
add
sub
nop
nop
nop
nop
nop
mov
mov
jne
mov
jmp
nop
nop
nop
nop
nop
sub
jmp
nop
nop
nop
nop
nop
sub
ror
add
mov
movzbl
shl
add
add
lea
nop
nop
nop
nop
nop
add
shl
mov
mov
mov
call
cmp
nop
nop
nop
nop
nop
jb
add
nop
nop
nop
nop
nop
cmp
nop
nop
nop
nop
nop
jb
add
nop
nop
nop
nop
nop
cmp
nop
nop
nop
nop
nop
jae
add
test
mov
je
lea
xor
shr
add
sub
mov
sub
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
add
sub
jne
mov
mov
or
inc
or
and
xor
mov
and
or
mov
xor
shl
mov
mov
shr
and
shr
add
mov
nop
nop
nop
nop
nop
movl
jmp
mov
mov
add
add
nop
nop
nop
nop
nop
mov
movl
mov
cmpl
je
nop
nop
nop
nop
nop
pop
ror
mov
sub
pop
pop
shl
mov
pop
ret
add
add
add
add
add
add
add
add
sub
add
out
add
fadds
add
push
add
add
add
add
add
add
add
add
add
sub
add
out
add
fadds
add
push
add
add
add
outsl
jae
inc
jb
jbe
jb
sub
push
gs
popa
jo
jne
add
add
inc
jb
popa
je
inc
imul
js
je
jb
arpl
jae
add
cltd
add
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
add
gs
je
inc
imul
add
add
imul
js
add
adc
add
add
add
add
push
add
add
add
leavew
fcom
adc
add
add
add
mov
add
add
xor
mov
cmp
add
sbb
lahf
aaa
popa
xor
mov
sahf
cmp
cmp
xor
xor
cmp
dec
aas
mov
inc
cmp
cmp
xor
xor
pop
xor
xor
xor
aaa
push
add
mov
add
add
xor
xor
xor
xor
add
add
add
add
and
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
lods
rol
add
testb
mov
dec
xor
into
std
lret
out
gs
les
fisubrs
ss
cmp
mov
jl
push
lret
add
add
add
xchg
xchg
mov
gs
mov
mov
loopne
loope
mov
pop
mov
push
test
arpl
push
sub
shl
pushf
xchg
inc
mov
or
mov
fcomip
outsl
inc
mov
xor
ss
std
scas
lahf
mov
jle
hlt
sub
pusha
test
enter
cwtl
and
bound
popa
lods
xor
fildll
imull
xor
mov
sub
push
data16
out
xor
fiadds
dec
pop
cwtl
inc
adc
lock
mov
push
lock
inc
adc
push
cltd
mov
push
cltd
jmp
push
rol
mov
mov
push
imul
dec
cwtl
add
inc
in
ret
inc
mov
popa
aaa
je
andl
scas
cmp
mov
sbb
xor
loope
xor
ja
.byte
in
dec
.byte
