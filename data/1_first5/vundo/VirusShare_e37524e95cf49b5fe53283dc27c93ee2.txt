jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
push
test
dec
adc
int3
mov
popf
jb
add
add
add
pop
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jno
adc
roll
sub
or
test
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
nop
add
push
add
add
add
add
add
add
nop
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
nop
add
test
add
add
mov
leave
add
nop
add
add
push
add
add
add
add
add
add
add
add
jne
leave
add
nop
add
sbb
add
add
sub
add
add
add
add
ret
add
add
bound
sti
add
add
add
sti
add
add
add
push
add
add
add
add
mov
add
clc
add
add
add
dec
add
add
add
add
add
add
add
leave
add
test
mov
add
add
add
add
add
or
mov
add
add
add
add
mov
add
add
add
and
rolb
ja
leave
add
add
add
add
sti
add
add
or
cmp
loop
ja
or
add
add
add
add
dec
add
add
pop
add
add
mov
add
add
add
add
add
add
sti
add
add
add
add
mov
add
data16
add
add
aaa
add
add
add
or
int3
add
add
add
add
add
add
add
add
add
add
or
mov
sti
add
addl
int3
add
add
add
leave
add
mov
add
stc
add
add
add
add
loope
leave
add
add
mov
add
add
add
movb
dec
add
add
add
add
add
add
mov
xor
add
aas
add
enter
push
add
add
adc
add
add
add
inc
add
add
add
lret
add
add
add
leave
add
mov
pushf
add
add
add
add
add
xchg
add
add
leave
add
mov
xor
xor
cltd
add
add
add
add
add
add
add
add
add
test
add
int
push
add
sti
add
addl
mov
add
add
add
add
add
add
add
add
add
or
out
add
add
add
push
add
sti
add
xor
dec
add
add
add
add
add
dec
add
add
add
push
add
mov
sti
add
add
adc
push
add
add
add
lret
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
fmul
sti
repnz
nop
or
nop
cmp
push
ret
xor
orb
jl
and
movsl
or
fcoms
repnz
in
sub
mov
test
arpl
or
and
push
ja
aad
dec
into
cmp
cs
lock
mov
movsl
inc
and
cmovns
icebp
sub
push
out
and
imul
or
cmp
sbb
and
mov
jnp
orb
ja
add
jecxz
rcll
and
inc
jmp
scas
mov
xchg
mov
pop
mov
mov
inc
jbe
mov
cmp
sbb
in
repz
adc
jo
pop
pop
outsl
pop
daa
pop
cmpsl
out
shlb
adc
insl
repz
shlb
inc
aam
xor
cmpsl
jne
dec
addr16
fmul
or
jb
dec
mov
cmp
dec
dec
jmp
scas
mov
xor
loope
lahf
mov
cld
lock
imul
push
loop
inc
clc
pop
mov
mov
repz
pop
pop
add
test
mov
xor
mov
fwait
repz
cmp
shlb
jbe
sub
lahf
movsb
sub
sub
out
int3
das
outsl
cmpsl
add
pop
cmp
mov
rcrb
into
add
push
mov
mov
int3
fildl
push
cmp
test
scas
cmpsl
dec
aam
shll
pop
mov
fs
scas
sub
xor
jle
icebp
cbtw
stc
rcll
mov
andl
ss
jl
push
xchg
aam
add
pop
sbb
push
sbb
jmp
bound
jmp
xchg
test
insb
outsl
xor
pop
jo
jle
pop
mov
push
jno
jg
lret
stos
jge
outsl
sub
dec
and
test
push
push
cmp
insl
lahf
mov
jnp
test
and
mov
in
lret
push
ret
xchg
jne
mov
nop
xchg
adcb
addl
xchg
sub
les
or
fstpt
dec
sub
notl
sub
mov
lock
sub
iret
mov
lds
aaa
movsb
add
xchg
rol
inc
or
ret
test
leave
push
lock
sub
das
xchg
sbb
push
jb
das
leave
cmp
repz
xor
xor
arpl
mov
push
fimuls
sbb
inc
mov
jmp
insb
imul
repz
mov
pop
jns
jle
lds
add
shlb
jo
or
aad
mov
out
ret
pusha
inc
sbb
push
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
sbb
addr16
inc
outsb
sti
inc
out
dec
mov
imull
jp
or
cmp
inc
fidivl
addr16
pop
mov
push
aaa
stos
daa
into
xchg
jp
push
jp
gs
mov
cmpsl
cmp
inc
mov
cmpsb
sbb
xlat
xchg
stos
cmp
pop
pop
aam
push
lret
xor
inc
adc
mov
in
loopne
test
cmp
xchg
repnz
xchg
fs
inc
adc
dec
mov
inc
inc
mov
data16
mov
or
add
adc
push
fnstenv
sub
mov
lret
push
fbstp
out
lahf
fnstenv
inc
or
xor
out
imull
or
inc
ljmp
or
xor
mov
repnz
and
or
pop
sbb
mov
fistpll
jg
scas
test
jae
outsl
mov
or
xchg
out
rol
rorb
inc
addr16
ret
int
sbb
dec
aas
xor
xchg
out
adc
xchg
repnz
sub
or
pop
mov
aaa
jo
cmp
jp
xor
es
loop
sub
push
and
test
jb
and
inc
fbstp
push
xchg
gs
pop
push
iret
fwait
xor
test
push
out
das
xchg
jnp
push
ret
push
and
mov
pop
lcall
pop
imull
jp
or
cmp
inc
fidivl
addr16
pop
mov
lcall
pop
imull
jp
or
cmp
orl
adc
std
pop
ds
sbb
pop
or
lahf
and
stc
pop
or
clc
aas
jmp
push
or
adc
inc
cld
add
and
pop
cltd
cwtl
mov
stc
loope
icebp
adc
xor
cld
subb
xor
aas
jmp
lret
jg
movsb
fisubrl
xchg
push
mov
or
cli
aas
add
lahf
ret
jg
adc
mov
push
jbe
call
adc
jo
into
in
xor
or
jae
data16
add
mov
cmp
or
mov
or
push
out
nop
sub
mov
cmc
sbb
sub
aas
xchg
pop
aam
fistpl
mov
gs
mov
and
fldt
dec
xchg
aas
and
cld
ss
dec
dec
inc
push
pusha
xchg
mov
xchg
sub
sub
js
icebp
clc
iret
stc
pop
push
jne
enter
adc
pop
xchg
hlt
sub
lea
cmc
mov
mov
xorl
mov
pop
jnp
mov
pop
or
mov
insb
dec
or
pop
fimuls
adc
mov
cli
stc
imul
jo
xchg
stos
int
lahf
mov
and
ret
lea
cmpsb
push
loop
jnp
les
inc
push
and
hlt
dec
test
fucomip
mov
pop
invd
push
jno
lods
sub
xchg
shr
mov
js
jae
pop
ret
loopne
push
mov
popf
aad
ja
cs
mov
roll
mov
inc
dec
in
xchg
inc
fisttps
sahf
xchg
std
popf
cltd
jle
ret
movsl
psllq
call
push
lock
mov
loope
lahf
call
dec
xor
sbb
cltd
add
je
ret
cld
mov
pop
testl
sti
push
cmc
push
dec
sbb
stos
out
std
enter
mov
test
and
mov
mov
rorl
dec
bswap
jns
not
out
jmp
outsl
ljmp
pop
sbb
bswap
sub
in
test
or
jno
inc
xor
addl
xchg
cmp
jl,pt
test
xor
mov
xchg
sub
loop
test
dec
stc
push
into
dec
cltd
rcrb
jp
pop
ja
ss
push
jl
xchg
std
mov
lods
cwtl
cld
dec
adc
dec
stc
loope
jl
test
imul
add
push
das
xlat
int3
bnd
jle
xlat
add
and
imul
cli
inc
outsb
dec
ja
sbb
mov
mov
ds
mov
scas
push
dec
mov
rcr
and
cmp
clc
jnp
jle
push
enter
hlt
mov
out
inc
loop
adc
mov
orb
add
mov
xor
pop
sub
adc
popf
fstpl
mov
ja
lods
jge
mov
jl
push
mov
popf
mov
data16
into
je
lcall
loope
xchg
and
or
jne
nop
jo
mov
xor
sti
pop
xchg
stos
push
iret
jle
lret
mov
mov
addr16
lods
loope
mov
mov
in
dec
mov
dec
movsl
xchg
nop
jo,pn
lea
imul
pop
test
xchg
fwait
sub
xor
xchg
fidivs
cmpsl
inc
xor
push
scas
icebp
xor
data16
mov
jge
cmp
ret
aam
int
and
add
cmp
mov
mov
push
mov
xchg
sahf
in
add
push
sarb
mov
push
dec
push
movsb
jecxz
push
push
mov
xor
pop
sub
pop
es
cmpsb
test
jo
sub
in
or
and
and
je
inc
push
xchg
push
xlat
jno
sbb
mov
ja
in
movb
stos
arpl
sub
lods
cmp
test
ss
pusha
push
inc
cmp
sbb
dec
pop
pop
jne
mov
adc
dec
aam
inc
cmp
inc
mov
lds
mov
imul
in
aam
imul
idiv
and
cmp
and
lock
push
lea
int
sti
popl
fwait
push
pop
jmp
sbb
xchg
daa
stos
cwtl
sarb
sarl
add
dec
pop
mov
cmc
pop
xlat
cmp
cltd
sahf
addr16
jp
repnz
ja
insl
daa
clc
inc
mov
cmp
cmp
cmp
movsb
arpl
push
mov
stc
mov
imul
shll
ret
xchg
sbb
sub
out
hlt
sbb
adc
jl
aad
lret
xchg
pop
push
stos
sahf
push
pop
sbb
sub
shrl
out
pusha
push
ror
mov
addb
and
cmp
test
push
repz
inc
sub
cmp
aad
xchg
nop
stos
dec
sub
sub
xcrypt-cbc
cmpsl
xchg
pop
push
xchg
lock
movsl
jecxz
add
in
das
and
add
push
cmpsl
inc
stos
lcall
pop
push
test
mov
pop
inc
xchg
and
mov
or
inc
int
mov
les
loop
sbb
mov
mov
cmp
ss
cwtl
rcrb
fldt
add
adc
push
dec
loope
and
sbb
pop
push
xchg
js
mov
and
xlat
adcb
and
test
ror
fs
fwait
dec
rcrl
sti
pop
jb
sub
imul
sbb
cmp
ret
cmpsl
lods
pop
push
adc
mov
test
fists
fstl
mov
daa
push
jns
into
fsubr
pop
mov
daa
xor
stos
je
mov
sbb
rclb
mov
mov
xchg
js
sbbl
inc
pop
cltd
ss
cmovge
addr16
push
adc
mov
cmpsb
or
inc
shr
test
bound
out
mov
leave
lcall
dec
and
hlt
test
push
shrb
mov
fstl
mov
rorl
pusha
or
sub
dec
sub
xchg
imul
jbe
fwait
repz
push
lret
dec
enter
test
stos
push
push
fidivl
fdivrs
frndint
dec
popa
push
or
push
xchg
fdivrs
inc
or
fwait
mov
xchg
inc
adc
lcall
jl
rorb
sbb
fnstsw
dec
fdivrl
pushfw
adc
ror
loopne
cli
fildll
shll
shrl
jmp
or
lea
decl
sub
out
or
fwait
jg
adc
es
loop
and
call
in
pushf
sub
xor
sub
js
int
or
jo
xchg
mov
lret
popl
pop
push
pop
mov
movsb
dec
or
jg
adc
popf
dec
push
ja
inc
in
dec
adc
ret
mov
push
mov
dec
data16
mov
sub
stos
je
sahf
es
push
mov
inc
imul
jecxz
stos
call
shr
gs
les
pop
lock
lahf
pushl
repz
leave
jge
iret
mov
push
adc
sub
cmp
inc
mov
mov
mov
test
or
iret
aas
mov
and
aas
xor
cs
mov
ret
in
sbb
push
popf
inc
mov
add
xlat
xor
cmp
pop
pop
arpl
iret
or
lock
cld
jmp
adc
cli
lods
jo
inc
mov
dec
mov
ret
loopne
dec
imul
mov
sbbb
aad
ret
jbe
insb
mov
in
mov
sbb
aad
fisttpl
negb
std
mov
fsubs
out
sbb
xchg
mov
jl
jle
stc
push
sarl
dec
sub
in
dec
fsubrs
or
and
rolb
pop
or
mov
xlat
lret
xchg
in
xchg
stos
les
test
stos
add
push
pushf
loope
mov
dec
jge
push
test
or
test
sub
cmpsl
cmc
lds
dec
pushf
jmp
push
test
pop
ficomps
fmull
mov
in
mov
in
dec
imull
sub
jle
mov
push
lock
xchg
je
mov
ds
pusha
lea
jmp
std
xlat
idivb
mov
xchg
cmp
add
pushf
fdivs
jl
add
pop
jg
pusha
repz
sub
lock
sbb
cmp
push
idivl
or
sbb
mov
adc
and
out
inc
negl
cltd
and
push
adc
adc
xlat
movsl
jb
add
lcall
jb
fisttpll
movsl
out
data16
ja
pop
mov
xor
inc
push
push
inc
lret
fwait
sti
lock
mov
jbe
lret
xchg
jecxz
push
adc
in
or
or
adcl
icebp
jge
lret
cwtl
mov
rorb
inc
dec
loopne
jp
jne
mov
out
pop
fcoml
cmp
nop
ret
lahf
insb
jg,pt
ret
movsb
stos
sbb
cmp
rolb
mov
shrl
int3
mov
loop
sbb
faddl
inc
pop
pop
or
outsb
aad
stc
hlt
adc
ds
imul
push
mov
jb
cmpsb
int
outsb
xor
out
enter
lds
mov
dec
jl
pop
mov
lret
pop
andl
in
dec
jo
mov
push
mov
in
stos
mov
or
or
and
lods
inc
inc
mov
shlb
les
jge
xchg
jmp
cmp
cs
mov
in
mov
dec
push
mov
jbe
scas
add
xor
add
fnstsw
lcall
sbb
ljmp
js
push
ficoml
sbbl
roll
js,pn
cli
sbb
mov
xor
mov
jge
loope
lret
xchg
pop
xor
push
jle
push
inc
mov
mov
mov
mov
fidivl
aad
das
push
sbb
mov
jmp
mov
adc
enter
mov
pushf
jno
es
lock
cmpsb
fs
loope
xor
mov
push
imul
mov
push
push
mov
test
mov
mov
imul
cmp
in
and
and
jbe
add
jmp
mov
andl
push
insl
mov
imul
jno
mov
outsb
mov
jecxz
xchg
mov
cmp
jbe
sub
bound
repnz
xchg
and
pop
pop
repz
mov
push
divl
push
call
add
jb
decl
dec
imul
fwait
loop
push
inc
or
lea
jge
jp
inc
xchg
adc
mov
dec
fs
ret
addb
leave
popa
add
test
push
xchg
hlt
jo
loop
addr16
sbb
leave
sarl
int3
jbe
dec
pushf
push
es
scas
sahf
aad
fldcw
mov
dec
int3
cmpsb
inc
cmp
xlat
in
jnp
stos
or
fcoms
pop
cmp
out
adc
xlat
and
mov
or
lock
subl
sti
fcoms
bound
ljmp
push
cmpb
mov
cs
xchg
cmpsb
xor
cmp
mov
mov
inc
xor
test
mov
xchg
cli
cli
adcl
je
cwtd
fdivp
jnp
xchg
inc
popf
add
and
ja
inc
mov
dec
stc
aas
cmovbe
aam
add
cmp
enter
bound
pop
pusha
rorb
adc
mov
dec
xchg
add
sbb
pop
add
jbe
push
xchg
shll
mov
iret
outsl
stos
push
enter
insb
jne
cmpsb
or
mov
or
mov
adc
sub
adc
fsts
sbb
mov
mov
mov
testl
cmpsl
fidivrs
icebp
cld
mov
test
into
sub
cmpsl
lahf
sar
shrb
divl
and
scas
lret
add
push
mov
lods
dec
lcall
and
sbb
nop
cltd
cmp
and
pop
mov
movsb
xchg
mov
mov
xorb
jge
sbb
xchg
sub
dec
test
dec
out
test
ret
int
or
in
inc
shl
sub
jbe
cmp
push
jge
push
test
es
add
fiadds
or
movl
fidivs
mov
fsubs
rcrb
les
pop
fstps
push
lea
lcall
daa
sbb
pop
or
xlat
cltd
inc
clc
insb
dec
icebp
sahf
fldt
movb
jecxz
rcl
les
add
jecxz
ss
sub
loopne
cmp
imul
pop
cmpb
int3
push
xchg
icebp
int
mov
cmp
dec
pop
sarl
jmp
sub
imul
or
mov
imul
jnp
push
add
lods
dec
pop
xchg
cmpsb
in
in
push
notb
xchg
fcoms
adc
ja
xchg
repnz
sbb
pusha
mov
out
xchg
outsb
mov
jle
cmc
add
daa
test
dec
mov
fdivrs
fstps
inc
add
push
subb
cmpsb
pop
push
orl
push
dec
popf
loopne
xor
adc
jge
outsb
mov
in
xor
dec
mov
mov
test
xor
enter
jl
adc
adc
lock
xacquire
pushf
in
cmp
faddl
cltd
jge
mov
out
rolb
mov
aam
sar
mov
jg
sub
or
cltd
clc
out
sub
dec
adc
pusha
ffreep
and
in
sti
dec
jbe
loop
and
js
jl
and
repnz
out
xorl
rcr
dec
sbb
sbb
test
dec
jns
roll
pop
pop
fimull
cwtl
mov
inc
cwtl
leave
mov
mov
jns
ljmp
mov
mov
sbb
mov
push
dec
jmp
xchg
rorb
and
mov
lcall
arpl
adc
mov
daa
in
mov
jno
xchg
in
cmp
in
repnz
ret
dec
vpcomub
lret
mov
js
or
jp
push
inc
dec
imul
inc
dec
notl
mov
sahf
out
fdivrs
sub
and
pop
pop
jl
dec
lcall
mulb
sbb
ret
fucomi
or
push
jmp
mov
scas
inc
int3
cs
jp
jle
sbb
inc
mov
shrl
and
push
ret
xor
mov
fcomps
pop
lea
hlt
adc
jp
add
aas
and
in
or
imul
push
lods
in
out
jmp
mov
jae
call
dec
stc
popa
dec
rorb
sub
lds
adc
mov
cmovae
cwtl
adc
mov
adc
dec
sub
jns
aaa
int
lock
jne
or
das
dec
pushf
jo
nop
xchg
sub
sbb
mov
lock
sub
lcall
mov
push
xor
sub
imul
aad
jmp
les
arpl
adc
movsb
fnop
mov
inc
imull
pop
enter
aas
mov
dec
dec
sub
ljmp
in
cmp
sub
mov
and
sbb
fadds
sbb
mov
xchg
inc
xchg
aas
adc
enter
or
cwtl
sarl
mov
icebp
xor
lods
jmp
xchg
push
pop
mov
mov
cld
je
in
cmpsb
mov
stc
dec
adc
add
lock
pop
and
adc
or
inc
loope
jg
enter
cmp
inc
dec
fucomp
mov
inc
jge
popf
lds
pop
xor
dec
shr
stc
test
mov
pop
xor
rcrl
iret
add
dec
out
sets
inc
mov
xor
push
cwtl
iret
sub
test
push
insb
inc
push
idiv
lea
mov
popa
out
xor
loopne
repnz
sbb
addb
cmp
lock
in
sbb
notb
shlb
sbb
cmc
adc
dec
sbb
push
dec
fs
xor
into
loopne
insl
lock
jbe
and
inc
adc
stos
popa
lret
push
outsb
lret
xlat
pop
sahf
jle
andb
movsb
movsl
push
movsb
ja
imul
negl
aaa
push
pop
add
andl
mov
or
jno
jmp
sub
lods
fidivrs
push
movsl
dec
and
push
inc
push
mov
mov
pop
add
dec
mov
pushf
scas
fsub
sbb
sti
jb
mov
or
stos
push
add
icebp
add
dec
sub
nop
in
scas
aaa
stos
dec
mov
jmp
pop
lret
int3
movsl
cmp
into
enter
mov
and
imul
fdivrs
pop
xor
jne
cmp
es
cwtl
inc
pop
sbb
pusha
cmpl
in
sbb
xchg
sub
pop
mov
hlt
and
out
push
push
test
push
or
jns
cmpl
sbb
int
fistps
cs
add
push
stos
cltd
repnz
and
jae
lods
fcom
rcrb
ficompl
dec
pop
aaa
mov
lods
push
jle
jo
aas
stos
bound
fstpt
mov
out
cmp
into
add
call
inc
mov
aad
in
lcall
lods
popf
jl
dec
ljmp
out
inc
in
idivl
cmp
pop
sub
xchg
outsb
push
outsb
popa
ficomps
stc
and
movsl
lret
add
pop
fmull
push
inc
xchg
aad
inc
ret
rcll
popl
xor
gs
aas
push
push
cmp
icebp
pop
pop
and
out
mov
xor
push
out
outsl
out
sbb
out
pop
sbb
adc
pop
jecxz
inc
ret
mov
jg
jp
cld
mov
sar
fisubl
mov
jnp
out
ss
xor
add
pop
fnstenv
add
inc
in
dec
rep
ja
sub
das
xor
dec
imul
push
aaa
xchg
cmp
dec
scas
xchg
dec
loopne
icebp
ffreep
leave
cmovo
cmp
loop
ja
gs
sub
int3
lret
mov
mov
xchg
sbb
mov
movsb
push
stos
xchg
std
cli
mov
mov
dec
cmp
dec
push
ss
jno
dec
dec
dec
aas
add
mov
je
mov
xchg
out
bswap
push
movsl
in
imul
lret
f2xm1
in
cmp
cmp
mov
clc
imul
dec
xorb
lea
dec
and
shll
pop
js
in
inc
dec
stos
mov
sub
mov
mov
inc
adc
dec
fidivs
and
mov
fsub
cwtl
repz
daa
adc
mov
fists
cmpsl
pop
scas
imul
inc
pop
dec
sub
stc
js
out
cmp
jne
icebp
cmp
or
mov
xor
sub
aad
push
adc
gs
xor
loopne
add
subb
push
dec
push
adcb
jl
sub
xor
int
int
sub
pop
adc
vpunpckldq
mov
cmc
mov
gs
out
icebp
push
mov
fwait
aam
movl
aad
shlb
pop
jns
scas
imul
dec
pop
in
imul
or
jb
add
fmull
inc
jle
push
mov
iret
pushf
out
shl
pop
arpl
lods
ja
enter
sbb
repz
testl
iret
mov
xor
add
lret
fdivrl
iret
xor
fsubrs
lods
xchg
adc
sti
inc
xchg
jl
divl
mov
pop
mov
shl
sub
add
mov
jo
fisttpll
stc
insb
dec
and
inc
inc
push
pop
inc
mov
fst
std
xor
ficomps
fildll
mov
test
loop
push
paddsw
mov
xor
push
push
ds
nop
icebp
std
out
loopne
mov
push
mov
sahf
mov
in
aam
fwait
pushf
inc
das
stos
mov
add
out
pop
lret
inc
pop
jl
mov
mov
fcoml
and
arpl
xor
push
and
std
cmpb
test
and
int
mov
sarb
pop
loope
xchg
inc
mov
mov
in
pop
pop
cmp
mov
xchg
pop
pop
addr16
sub
dec
bound
les
adc
movsl
adc
fwait
lock
adc
jp
mov
aaa
out
cmp
mov
in
push
in
and
pop
addr16
inc
out
orb
ftst
sti
mov
std
add
and
and
movsl
sti
es
in
cld
test
je
lock
push
mov
xchg
or
jnp
pop
mov
lcall
pop
imull
jp
or
cmp
inc
fidivl
addr16
pop
mov
lcall
pop
imull
jp
or
cmp
inc
xchg
addr16
addr16
push
mov
xor
stos
es
push
jp
or
cmp
imul
ljmp
aaa
sub
lock
push
or
dec
aad
vshufps
fiaddl
lcall
adc
pop
adc
ss
xchg
xchg
out
test
aad
in
cmc
rorl
inc
adc
jbe
arpl
es
pushf
mov
mov
xchg
xchg
std
cmpsb
loop
add
add
push
sbb
inc
sbb
cmc
mov
xchg
int
sub
movsl
or
inc
in
stos
in
cmp
test
repnz
sbb
movsl
mov
sbb
push
ljmp
push
add
sahf
clc
addr16
xchg
push
in
xor
xor
jge
jne
inc
ljmp
stc
adc
iret
stos
mov
push
dec
test
inc
repz
or
mov
imul
and
push
push
cld
sbb
sti
xchg
or
in
or
cltd
xor
push
call
lahf
xchg
shr
cmp
js
pop
sbb
cli
inc
ljmp
pop
inc
inc
test
jne
inc
xchg
movsl
out
not
xchg
xchg
in
in
mov
inc
or
jbe
push
dec
push
gs
jo
lock
shlb
loop
ret
cwtl
ret
adc
push
sub
push
add
test
mov
mov
mov
cwtl
pop
and
and
arpl
adcb
cmpsl
test
xorl
in
cmc
mov
inc
adc
jbe
push
push
push
gs
test
xchg
movsl
out
test
aad
in
cmc
mov
inc
adc
jbe
push
push
push
gs
test
push
cld
mov
xor
jae
cmp
lcall
jp
cltd
mov
mov
sbb
dec
int3
outsb
fldl
xor
call
push
cmp
les
daa
xchg
xor
jnp
popf
scas
sub
jbe
xchg
xor
lcall
das
push
pop
xor
jae
xchg
aas
or
jnp
fdivrs
inc
mov
addb
ss
arpl
pop
xchg
adc
popl
xor
and
sub
test
pop
fidivl
pop
scas
lock
mov
sub
enter
pop
push
sub
xor
mov
mov
xchg
mov
sub
aam
mov
jg
dec
fidivl
fistpl
seto
insl
lahf
sbb
or
das
adc
dec
addb
stos
nop
inc
or
mov
or
sbbb
cwtl
and
inc
xchg
pusha
add
addr16
mov
pop
pop
dec
mov
xor
sbb
sbb
scas
rcrb
movsb
fwait
cli
pop
and
data16
leave
mov
xchg
fidivl
out
push
mov
mov
int
call
inc
ror
pop
mov
push
pop
outsl
mov
push
lds
sbb
fldl
add
inc
hlt
push
xor
push
pusha
in
stc
mov
mov
and
lcall
dec
mov
jno
cmp
cwtl
jb
ret
insl
xchg
xchg
in
mov
xchg
sbb
das
dec
lods
mov
push
lods
shlb
jmp
sub
pop
pop
mov
cltd
imul
lock
mov
sub
jl
or
mov
fadds
aaa
repz
mov
add
test
mov
push
push
push
xchg
mov
loope
xchg
mov
fiadds
add
sbbl
sbb
mov
dec
xchg
jle
adc
scas
xor
insl
cmp
outsb
jg
or
sarl
addr16
ljmp
in
add
cmc
pusha
dec
repnz
mov
scas
add
lea
out
pop
mov
test
jp
and
mov
into
adc
aam
dec
mov
ljmp
xchg
clc
stos
adc
ja
fsubl
xchg
pop
nop
mov
and
mov
jp
cltd
mov
pop
mov
push
push
push
roll
push
sbb
jmp
xchg
rorb
mov
mov
mov
imul
lret
in
jecxz
outsb
adc
cltd
or
nop
push
sbb
negb
lock
in
test
bound
sbb
mov
cmpsl
jno
xchg
movsl
adc
jecxz
aas
xchg
cmp
fs
hlt
xor
adc
mov
or
pop
pop
inc
cmc
aaa
cmpsb
cmp
stos
jne
mov
jns
cld
sbb
pop
mov
sbb
out
dec
insl
movsb
mov
add
or
aad
fidivs
nop
mov
inc
mov
das
fistpll
adc
shll
lret
repnz
dec
shll
lock
je
jo
pop
repnz
jns
and
ja
insb
mov
ss
or
jno
mulb
pop
pop
or
sbb
or
into
les
ds
outsb
ret
lds
dec
mov
xor
cli
adc
aam
pop
mov
push
mov
je
ret
sbb
inc
stc
adc
cmpsl
jns
dec
ret
and
push
cmpsb
adc
ficoms
das
out
das
out
mov
and
push
cmp
add
lea
xchg
adc
in
std
mov
hlt
add
cltd
inc
sbb
addl
or
jnp
xor
ficompl
enter
push
adc
and
mov
mov
push
pop
dec
or
pop
test
mov
pusha
mov
mov
jge
ret
sbb
pop
mov
repz
nop
in
sub
bound
jne
jae
adc
jg
lcall
rclb
pop
push
stos
cmp
sbb
repnz
in
jae
fistps
sbb
push
dec
mov
cmp
push
or
nop
fistpl
adc
movsl
push
popf
roll
jno
popa
dec
cmpsl
mov
xlat
ds
js
fnstenv
jecxz
dec
mov
dec
jg
and
sarb
inc
aaa
jno
ret
aam
ss
add
sub
bound
mov
pop
in
cmp
mov
inc
mov
push
lahf
fbstp
test
cmp
cmp
mov
outsb
fidivrs
fdivr
call
ss
sbb
pop
push
pop
scas
ss
subb
dec
cmp
xchg
push
cmp
in
pop
xchg
clc
sbb
js
jge
jno
jge
or
mov
lods
mov
pop
ffree
fstl
lds
add
iret
std
js
xor
sbb
jmp
xchg
leave
sarb
pusha
es
mov
sub
out
arpl
push
sbb
dec
iret
xor
mov
outsl
incl
jl
rol
mov
mov
pop
ljmp
nop
nop
cmp
adc
aam
cs
cmp
repnz
scas
jecxz
filds
xchg
repnz
inc
in
jmp
clc
gs
pushf
adc
loope
rorb
adc
add
adc
push
in
hlt
roll
stos
scas
adc
js
addr16
sahf
adc
jbe
mov
mov
push
mov
push
notl
mov
cli
imul
jo
std
sub
inc
dec
inc
sub
aaa
pop
jecxz
lret
jmp
pop
and
js
cwtl
mov
test
dec
mov
or
mov
mov
inc
inc
pop
orb
loop
lret
jne
out
mov
je
outsb
xchg
xchg
popa
lahf
push
imul
mov
sub
pusha
sarb
ljmp
cs
push
mov
pop
and
xchg
addr16
aaa
pop
icebp
repz
mov
aam
ficoms
pop
inc
pop
int
out
push
inc
insb
pop
dec
pop
sbb
sbb
aas
jl
test
jecxz
or
popl
mov
test
inc
dec
cmp
orl
lods
rcrb
std
enter
std
add
dec
push
jp
incl
add
dec
add
mov
movl
mov
inc
xchg
addr16
cmp
and
cmp
cmp
pop
stos
xlat
in
dec
and
scas
icebp
jle
test
xor
and
cmp
push
mov
add
fstps
fld
push
aaa
mov
mov
push
or
sbb
mov
jno
mov
out
pop
lahf
sahf
inc
lods
sub
in
movsb
jge
mov
dec
jge
push
cmp
mov
inc
mov
jg
sbb
shrl
push
cmp
pop
pop
movsb
dec
insb
add
jbe
pop
adc
jns
sbb
loopne
push
lea
lods
sbb
sub
fst
rcrl
push
cmp
aas
pop
fadds
inc
pop
call
xor
inc
mov
push
xchg
inc
dec
dec
stos
imul
and
ss
repz
push
dec
xchg
incb
dec
sarl
push
scas
test
test
test
std
testb
ljmp
adc
sbb
cli
ret
inc
loopne
shll
in
dec
insb
jns
loop
fnstcw
sub
mov
fs
lock
mov
cmp
out
mov
data16
xchg
pop
mov
cmp
in
jecxz
sbb
out
aas
push
in
fneni(8087
enter
push
xchg
adc
enter
addr16
lods
aam
push
sar
push
arpl
jb
jo
in
out
fidivl
jnp
or
cmp
dec
push
dec
bound
sub
mov
add
imul
jp
lcall
or
stos
adc
fiadds
sarb
jl
jmp
push
pop
cs
xlat
pop
xchg
adc
cmc
jnp
mov
sub
mov
jo
aam
dec
test
shr
ja
pop
and
push
scas
lds
gs
pop
or
ret
outsb
mov
and
fldl
cmpb
pop
clc
mov
ret
jbe
xor
insl
or
xor
imul
test
xor
dec
mov
js
inc
add
in
call
and
loope
jbe
pop
lods
xchg
mov
or
lahf
sub
mov
adc
stos
add
lds
fdivrl
mov
sarb
test
sbb
jp
push
xor
jg
push
cli
xor
mov
mov
outsb
mov
inc
mov
push
add
movsl
and
out
addr16
jmp
loop
cltd
jmp
sub
lods
mov
pusha
cltd
jecxz
pop
in
int
imul
shrl
push
mov
lods
in
add
rol
jae
fidivs
dec
push
pop
adc
xchg
cmp
push
popf
movb
in
cld
cwtl
pop
xchg
out
jae
inc
cmp
in
jae
jg
mov
in
dec
pop
xor
sahf
xchg
fcomi
jmp
sbb
push
pop
ss
mov
js
iret
scas
xchg
pusha
scas
dec
outsb
jbe
adc
test
mov
inc
xchg
jl
fists
subb
add
test
ret
push
inc
xlat
push
imul
pop
dec
mov
add
ja
inc
loop
es
push
enter
pop
clc
test
adc
out
cli
das
outsb
and
insl
push
mov
test
out
xchg
push
push
out
jnp
jl
ja
dec
fiadds
movl
add
xorl
mov
or
xlat
pop
loope
push
cmp
inc
xor
lcall
and
rcrl
adc
dec
mov
and
pop
cmpb
xor
enter
sbb
shll
gs
cmp
dec
xor
aaa
and
test
adc
push
or
das
adc
xchg
mov
sub
iret
idivb
adc
movsb
out
or
fcomp
out
push
lcall
cmp
pop
or
sarb
repz
loopne
adc
ficomps
add
int
imul
enter
sub
xor
divl
mov
inc
push
je
leave
clc
or
push
std
loopne
mov
mov
jl
call
xchg
outsl
imul
jge
mov
cld
jmp
push
jmp
js
stos
clc
sub
lds
outsb
pop
cltd
jecxz
sbb
data16
lret
loopne
lds
mov
outsl
aas
aad
out
or
ljmp
out
ret
mov
stc
cmp
int
mov
stos
cmpsb
add
add
mov
pop
xor
and
cs
shlb
jecxz
iret
push
loope
pop
fstl
push
ss
xchg
inc
lds
pop
loop
push
sub
push
loop
imul
pop
cmp
test
sub
ret
jno
adc
mov
jno
imul
pop
xor
out
jge
add
push
rcr
bound
jns
and
push
sbb
lahf
clc
pop
pop
mov
lahf
jne
pop
stos
enter
subb
aad
xchg
int
push
and
sbb
int3
mov
leave
fdivl
sarl
mov
das
scas
aam
xchg
imul
int
divl
inc
shll
lea
add
mov
mov
repz
fisubrs
mov
mov
add
push
test
dec
jo
stos
add
inc
clc
testl
jo
lea
and
testl
dec
lret
inc
and
and
sub
int
call
je
insl
call
cmc
xchg
aas
dec
mov
daa
pop
into
nop
mov
pop
cwtl
jl
sub
and
movsb
fdivl
sub
mov
mov
int
ret
sub
and
fists
xchg
sbbl
mov
cwtl
fstpt
mov
es
pop
cltd
inc
mov
popa
push
dec
xchg
lea
lahf
mov
and
jg
xlat
lret
push
out
mov
fstp
push
xor
jecxz
mov
fisubrl
mov
mov
jne
mov
cwtl
add
cmp
cmpsb
push
inc
mov
and
pop
test
or
xor
dec
mov
mov
xchg
xlat
ljmp
data16
out
scas
cmpsb
aaa
pop
je
hlt
cmp
addr16
sub
cmpl
stos
fs
mov
adc
dec
jae
mov
mov
xor
xor
pop
jecxz
xor
jl
in
xchg
out
sar
outsl
inc
xor
addb
sahf
js
add
xchg
dec
pop
stos
mov
sub
addr16
ja
in
test
sbb
sbb
stos
inc
and
sti
pushf
test
mov
xlat
scas
call
sub
daa
nop
loope
or
jae
call
jae
add
push
aas
jns
mov
in
lcall
sbb
stc
pop
jp
out
aam
rorl
cmp
fidivrl
in
movsl
add
std
mov
ja
sub
mov
out
pop
mov
jnp
scas
push
dec
std
sbb
mov
rclb
xchg
add
daa
pop
ret
clc
sub
add
push
test
and
or
mov
cs
sbb
cmp
mov
cmp
add
xor
mov
or
inc
lahf
xchg
add
xchg
lds
ficoml
mov
inc
inc
mov
dec
push
outsb
cmc
popa
inc
test
or
or
test
fbld
ljmp
sbb
clc
in
sbb
lcall
jnp
jge
jno
sub
add
inc
pop
mov
cwtd
mov
xor
mov
and
cmpsb
sbb
cmpsl
into
cs
stos
bnd
inc
adc
idivb
rorl
test
inc
fnstcw
aad
or
xor
jo
out
inc
cmp
jmp
fistpl
aas
fldl
faddl
loop
lds
aas
mov
mov
addb
dec
pop
pushf
ljmp
aaa
xor
jae
xchg
ret
sbbb
push
sahf
or
mov
mov
adc
cmp
pop
mov
je
and
cmpsl
aad
jae
fsubrl
scas
add
inc
bound
insb
outsl
addb
aam
int3
mov
xchg
inc
das
sbb
jg
addr16
dec
sarl
addr16
xchg
mov
stos
in
hlt
add
add
mov
int
js
cmc
ret
xor
nop
lahf
out
f2xm1
mov
xor
inc
pop
pop
pop
sub
ljmp
sbb
dec
rcl
divl
out
fildll
shl
mov
jmp
fisttpl
xchg
enter
shll
jns
aad
test
mov
lret
ja
nop
jbe
add
jmp
or
cld
loopne
mov
push
jns
sbb
jecxz
call
leave
sub
test
sbb
mov
iret
cld
mov
rcll
sti
pop
fcompl
js
cmp
push
mov
mov
pusha
mov
sbb
sub
loope
loope
cltd
std
pop
stos
stc
cs
sti
cmpsl
out
lret
imulb
xchg
ds
pop
shlb
adc
jne
sub
adc
mov
cmp
out
inc
popl
cmp
push
xor
sahf
aaa
jge
imul
add
lea
insb
imul
arpl
popl
cmp
push
push
pop
mov
push
adc
ja
out
inc
add
sub
pop
out
cli
mov
mov
or
ljmp
mov
add
imul
inc
mov
filds
clc
inc
xor
out
dec
fcomip
out
mov
mov
movsl
jp
shlb
arpl
cmpsb
mov
xchg
sub
shlb
and
in
and
dec
aas
xchg
bswap
fwait
rdpmc
sub
cmp
dec
fisttps
mov
fs
mov
or
xchg
jnp
inc
mov
jbe
aam
xchg
dec
xchg
nop
bound
xchg
push
jo
idiv
mov
cltd
icebp
or
decl
dec
mov
aaa
aas
jno
lea
push
dec
and
inc
add
sub
push
and
sub
push
lret
nop
xchg
dec
lea
adc
lock
jle
xchg
lock
stos
xor
lds
adc
sub
cmp
aas
outsb
inc
subb
lcall
call
arpl
imul
out
popf
jg
push
jg
mov
push
test
arpl
jle
adc
adc
dec
push
movsb
ljmp
sub
pushf
scas
sbb
dec
push
mov
lods
jbe
sub
lds
shll
xchg
cwtl
in
xor
fwait
js
cmpl
add
and
pushf
add
adc
je
pop
pop
mov
paddb
ja
push
fisttps
xchg
mov
mov
stos
or
xchg
jg
cmpsl
aam
push
xor
aas
loope
jle
test
jne
dec
push
pop
push
enter
push
call
test
xchg
cli
fdivrs
negb
mov
pusha
daa
loop
jl
test
sub
popa
pushf
cmp
popa
jnp,pn
and
mov
pop
pushf
into
mov
fnsave
mov
inc
test
pop
sub
add
pop
test
shll
aas
rolb
pop
roll
xchg
and
lock
std
inc
pop
pop
sub
jl
imul
out
std
iret
mov
in
fldz
sub
fsubrs
sarb
fstps
push
repz
in
jecxz
out
xchg
sub
sub
push
sbb
dec
xchg
mov
into
in
lcall
insl
pop
pushf
lcall
sti
mov
sahf
jae
push
hlt
sub
je
or
popa
sahf
mov
divb
cwtl
repnz
xchg
addb
pop
fwait
ljmp
add
sub
cwtl
not
in
fdivl
cmpsb
sub
cli
xchg
icebp
subb
dec
pop
pop
fsubl
imul
stos
testb
xlat
jnp
xchg
inc
mov
push
adc
pop
push
adc
lods
xchg
dec
inc
pop
inc
pushf
lcall
js
rep
fdivrp
xchg
aad
scas
inc
in
mov
test
cmp
jae
xlat
jp
or
mov
aaa
adc
adc
and
cwtl
mov
inc
mov
aaa
jmp
sti
nop
pushf
aaa
xchg
push
loop
fmul
arpl
les
daa
loopne
sub
in
jecxz
cmc
mov
push
add
mov
cli
mov
ret
pushl
xchg
pop
in
mov
sbb
orl
std
outsl
mov
sbb
loope
outsl
cld
cmp
ljmp
sub
dec
gs
sub
iret
js
or
aas
outsb
jne
push
push
mov
gs
outsl
and
in
mov
xor
push
movsb
pushl
cmp
icebp
es
outsb
sub
mov
lods
adc
lds
in
or
or
arpl
and
cmp
dec
shlb
inc
xchg
mov
sub
xor
scas
sti
loop
adc
inc
out
add
cltd
jle
in
xchg
loopne
sahf
or
dec
out
sub
ret
in
mov
inc
mov
nop
js
pop
lea
inc
bound
int3
cs
fwait
ret
xor
cmp
clc
xor
fsubl
loopne
inc
xchg
aas
add
sahf
idiv
xchg
push
mov
xor
adc
push
popf
inc
mov
adc
or
sub
inc
shrb
xor
or
jle
jbe
sub
sub
mov
mov
xchg
scas
mov
lods
mov
xchg
int
sbb
sbbl
sub
pushf
dec
and
movsl
mov
std
clc
mov
loop
fistps
or
js
fldenv
push
xchg
les
or
push
inc
aas
inc
sbb
rorb
out
cs
mov
lock
bound
jp
movups
adc
jb
mov
int3
cld
add
or
ljmp
or
pop
popf
xor
adc
push
out
push
jnp
in
test
daa
jnp
xchg
arpl
push
subl
ret
pop
mov
out
std
push
push
or
xor
arpl
scas
adc
arpl
test
mov
outsl
jp
incb
icebp
iret
pop
imul
cld
xchg
and
mov
shrl
mov
stos
sub
mov
bound
jecxz
adc
mov
or
mov
negb
out
test
aad
in
cmc
mov
inc
adc
jbe
push
push
push
gs
test
xchg
movsl
out
test
aad
in
cmc
mov
inc
adc
jbe
push
push
push
gs
test
xchg
movsl
out
test
aad
in
cmc
mov
inc
adc
jbe
push
push
push
gs
ss
mov
test
aad
cmpsb
jne
cli
inc
ljmp
mov
jmp
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
movsb
lods
and
adc
add
into
leave
inc
cltd
ss
movsb
xor
insl
in
les
pop
xor
and
adc
call
inc
divb
test
hlt
inc
in
aam
les
push
and
adc
add
je
fs
ret
mov
movsb
sbb
imul
push
hlt
cmp
stc
pop
fistl
out
add
mov
aad
clc
mov
je
mov
adc
test
addr16
imul
xor
rcl
int
or
jge
daa
fadd
cmp
mov
and
push
fistpll
xor
ret
out
fwait
and
push
pushf
sbbl
je
dec
enter
push
movsb
lods
fcoms
jge
cmc
les
fildl
jne
addr16
fldt
or
or
outsl
call
mov
sbb
aad
push
and
sahf
std
orl
mov
jb
loope
or
add
cmp
imul
adc
add
je
fs
push
enter
sub
hlt
push
in
aam
les
test
xlat
js
dec
hlt
aaa
dec
add
fsubrl
dec
sti
lods
loopne
subb
pop
mov
out
addr16
pusha
sti
dec
hlt
adc
cmp
out
leave
dec
in
pop
loope
mov
sub
or
in
hlt
xor
enter
sub
hlt
push
les
test
mov
je
fs
push
enter
sub
hlt
push
les
test
out
cltd
cmc
push
jbe
popl
mov
stos
mov
adc
push
in
and
xchg
icebp
push
cli
jmp
inc
mov
rclb
xchg
push
aam
cmp
mov
pop
push
fstpl
divl
or
call
dec
xlat
or
js
push
mov
hlt
lahf
and
enter
mov
lds
stos
dec
or
fs
inc
fistl
test
mov
adc
add
jbe
mov
call
sarl
lret
dec
iret
jle
push
cmp
sahf
add
sub
pop
mov
data16
sbb
sbb
out
jns
jmp
push
repnz
lock
inc
call
loopne
jno
loope
mov
in
pop
out
inc
and
fsubl
push
test
inc
pop
ja
notl
popa
mov
mov
mov
ljmp
mov
dec
lret
rol
movsb
test
ja
pop
lret
push
adc
mov
imulb
outsl
lret
cmc
lods
cmpsl
jnp
xor
cmp
cs
sub
scas
push
nop
shll
dec
cmp
movsl
mov
repnz
and
stc
pushf
ret
adc
loop
or
jg
mov
in
xchg
fnstcw
or
pop
jle
inc
cmp
push
mov
cmp
cmp
mov
mov
lea
ljmp
scas
fnsave
dec
and
cmp
dec
xor
shr
pop
sub
repz
test
ss
push
mov
cmp
out
mov
jl
push
cmpsl
inc
cmp
in
ds
and
ret
cmp
inc
mov
shrl
fisubrs
jb
jg
cmp
adc
and
add
sbb
test
icebp
xor
push
push
and
out
not
jle
xchg
imul
sbb
adc
daa
add
inc
in
js
mov
lea
stc
xchg
dec
outsl
lods
int
cltd
jae
adc
ss
xor
repz
mov
jle
mov
loopne
lds
testb
das
arpl
push
pop
jp
sub
in
inc
sub
jnp
andl
aas
dec
adc
pop
mov
inc
sub
cltd
dec
ret
sbb
shrl
fnstcw
xor
out
sub
ret
fdivl
loope
hlt
xchg
pop
loope
jecxz
cmp
or
iret
pop
adc
lret
int
test
and
pushl
std
dec
jbe
lret
fsubs
pop
xor
stos
fs
lock
lds
insl
inc
sti
sarl
mov
or
xchg
mov
in
inc
int3
jle
fistl
jp
dec
daa
dec
lcall
fiaddl
lock
pushf
jg
pop
mov
jecxz
jo
scas
iret
add
lret
nop
lea
aad
xor
mov
inc
loopne
or
js
jp
add
notb
data16
test
adc
jg
push
fcmovnu
jnp
stos
out
addr16
lret
fmull
add
pop
mov
ret
dec
pop
cmp
push
ljmp
fwait
popf
dec
movsb
xchg
ja
dec
nop
sbb
test
sbb
icebp
and
adc
cli
loop
cmp
dec
inc
les
pop
mov
cmp
mov
jmp
xchg
and
adcl
or
les
cmp
cld
jg
pop
stc
mov
leave
out
flds
popa
jns
sbb
mov
loope
fadds
xchg
insb
push
jno
out
mov
daa
adc
arpl
mov
xorl
xlat
jle
or
rcr
sarl
addr16
adc
adc
data16
xchg
call
fcomps
out
inc
enter
push
xor
sub
and
clc
popa
out
mov
cli
jne
add
pop
adc
lret
mov
jge
fsubrp
sti
lds
mov
cld
repz
xor
pop
and
sub
test
addr16
xchg
lods
scas
pop
jmp
inc
lahf
sub
dec
jno
cli
sbb
test
adc
push
add
cltd
cmp
push
dec
lret
fucom
mov
push
jle
in
loope
mov
add
push
ljmp
add
lea
cmp
popl
xchg
sub
xor
out
fmuls
or
sbb
dec
cmpsb
mov
clc
xchg
into
rep
iret
sub
divl
mov
xor
lea
cli
cmp
add
hlt
xchg
ret
adc
inc
jp
push
xor
jno
vpmuludq
cmpsb
mov
and
js
inc
repz
test
scas
pushf
lret
daa
jge
hlt
xlat
enter
imul
dec
or
into
daa
sub
test
and
in
fcomp
xchg
pop
mov
dec
icebp
pop
pop
pop
jo
jl
dec
cmp
or
ret
xchg
dec
push
mov
xchg
add
out
movsb
adc
push
ss
int
enter
inc
or
fldcw
mov
cmp
loop
insl
fiadds
int3
shll
cltd
sahf
test
mov
inc
xchg
repnz
sub
data16
cmp
or
pushf
in
pop
rclb
cltd
pop
imul
cmp
push
mov
iret
outsl
je
orl
jo
mov
push
enter
and
mov
dec
add
pop
mov
and
in
fnstcw
ljmp
hlt
inc
xchg
in
orl
cltd
sti
sub
stc
xchg
in
or
mov
in
add
pop
bound
mov
push
sbb
xchg
mov
cmp
js
popa
imul
jne
jb
add
fists
fildll
pushf
mov
scas
mov
ret
outsl
mov
mov
and
add
arpl
cmp
xor
lcall
mov
dec
lret
ljmp
add
ss
inc
lods
mov
jmp
rcl
or
xchg
xchg
ret
inc
pop
ret
out
rcll
test
mov
xor
aas
xchg
jl
jnp
sub
fistpl
jecxz
sbb
popf
pop
pop
dec
push
sti
fnsave
push
lock
loope
mov
nop
loop
stc
jbe
push
jno
or
push
jnp
add
or
out
push
add
mov
jnp
mov
aas
imul
sub
jg
int
sahf
mov
adcb
mov
cltd
jb
xlat
inc
jb
cmpsb
in
mov
subl
sub
in
inc
js
dec
xchg
jns
add
test
inc
rcrl
push
test
xchg
js
jae
adc
ficompl
std
jmp
idivl
cmp
dec
mov
xor
into
mov
pushf
jmp
xchg
sbb
fstl
icebp
adc
sahf
adc
mov
fsubrs
scas
inc
sub
add
push
mov
notb
fs
movsb
divl
xchg
cmpb
or
and
jae
xor
daa
lods
inc
mov
push
clc
sbb
sbb
pusha
out
stos
mov
out
cmp
adcb
sbb
push
lods
jge
xor
int3
pop
lret
push
or
inc
int
sub
sub
jecxz
sub
pop
inc
ja
push
sahf
xchg
and
dec
push
emms
cmp
pushf
iret
jle
lcall
pop
mov
push
fistps
jns
inc
lods
xor
mov
rcll
jns
dec
mov
add
out
shlb
add
in
dec
in
jbe
jp
test
rep
daa
aas
inc
mov
dec
ret
jbe
aas
rcrb
inc
pop
xor
cwtl
bound
dec
jle
xchg
lret
test
pop
xchg
aas
das
cmp
cld
sub
ret
in
cld
adc
lret
hlt
add
and
add
cmp
jns
les
push
xchg
mov
add
daa
xor
push
add
mov
mov
cld
jae
pop
ret
nop
mov
xchg
arpl
fadds
lahf
add
iret
mov
sub
insl
loope
test
inc
out
and
add
decl
pop
push
push
pop
loopne
dec
test
jns
xchg
enter
adc
jo
and
stos
mov
ja
cltd
xchg
in
add
mov
shll
imul
scas
and
data16
jle
adc
sahf
mov
lcall
and
pop
inc
mov
sub
pusha
inc
xor
sub
pop
push
das
sbb
xchg
sbb
loop
mov
or
xchg
repnz
popa
fildl
mov
mov
aad
lods
sbb
test
movsb
sbb
stos
jl
inc
subl
les
cmpl
lea
sbbl
repnz
pop
aad
sbb
pop
pop
fsub
repz
and
and
cmp
xchg
mov
lcall
aad
lret
inc
add
inc
add
sti
jg
add
inc
stos
mov
jle
xchg
jle
add
push
cld
add
inc
and
int
xor
mov
xlat
xchg
cmp
stos
cmp
pop
sub
mov
cwtl
push
andb
loope
jle
cld
jmp
mov
cwtl
leave
bound
dec
sbb
cltd
add
adc
xchg
test
mov
dec
sbb
cmp
imul
es
fstl
inc
add
mov
lret
pop
dec
sar
rcl
xchg
xchg
inc
stos
or
in
mov
out
div
mov
insl
add
in
cmp
rolb
mov
mov
and
mov
je
inc
xchg
dec
sub
mov
lods
leave
jbe
jg
mov
outsb
and
and
loopne
lcall
mov
mov
and
push
pusha
xchg
mov
mov
adc
add
js
scas
testl
dec
sub
pop
mov
imul
sub
push
ret
dec
dec
lds
andb
hlt
jns
lods
mov
adc
sub
mov
scas
jge
stc
xchg
dec
daa
pusha
mov
mov
and
pop
aas
sbb
stos
repnz
xor
fcomps
in
gs
cmpsl
rcll
cmp
out
jne
cmc
hlt
repz
cs
cmp
inc
sub
push
pop
xor
cmp
add
out
pop
shll
pop
mov
fimuls
pop
xor
xchg
icebp
data16
into
pop
js
add
nop
inc
cmp
sbbl
shll
loop
cmc
sbb
inc
cmp
sbb
cld
cmp
xchg
dec
or
mov
scas
and
lahf
rol
cmp
adc
stos
sbb
dec
xchg
sbb
sbbb
clc
fstps
mov
or
jle
lcall
insl
std
mov
inc
or
loop
gs
dec
mov
rcrb
repnz
jno
fs
sub
jl
daa
mov
sbb
pushf
add
cmpsl
adc
popf
and
cltd
ss
and
add
dec
adc
pop
fs
pop
addr16
std
push
test
push
stos
adc
cmp
add
hlt
mov
fcompl
add
sarb
popa
dec
test
sub
rol
jle
fdivl
fdivl
cltd
jp
int3
das
mov
jo
push
enter
pop
in
sahf
rorl
ret
ja
mov
cwtl
push
addb
cmpsl
js
mov
cmp
loop
or
pop
xor
cmp
lret
xchg
mov
cmp
mov
dec
out
imul
outsl
imul
mov
or
outsl
xlat
pushf
mov
insb
mov
mov
pop
fisttpl
jae
mov
test
pusha
dec
push
call
jmp
sub
sub
fwait
test
mov
out
loopne
mov
aas
aaa
mov
sub
mov
ja
mov
push
pop
sub
mulb
shrb
out
test
int3
fidivs
jns
cmpl
cwtl
icebp
addb
in
inc
loopne
popa
mov
sub
mov
lret
sub
out
push
cs
push
pop
mov
movsb
cmp
ss
lcall
adc
pushf
mov
addr16
and
dec
mov
or
mov
push
xchg
scas
inc
or
in
stos
sbb
gs
cmpsb
xor
sub
jb
or
xchg
out
nop
mov
cmp
std
imul
cmp
int3
push
loopne
dec
sbb
sbb
decl
lahf
in
jae
adc
loop
jb
cltd
lock
mov
pushf
sub
loop
popf
jb
movsb
loop
fsubl
mov
movb
repnz
push
out
lds
mov
outsb
lods
dec
mov
mov
insl
clc
add
inc
dec
push
pop
sub
dec
adc
imul
xchg
mov
pop
movsb
push
std
push
add
inc
sbb
loope
cmc
mov
or
xchg
mov
and
push
sbb
cmpsl
loopne
mov
mov
push
xchg
add
rorb
mov
mov
rcrb
sbb
out
sub
aad
data16
repz
sub
sub
cmc
mov
dec
mov
imul
aaa
sub
fs
dec
jmp
cli
mov
loopne
mov
shr
sbb
add
rcrb
jg
sub
test
cmp
popa
clc
inc
add
inc
adc
inc
jb
int3
jmp
jae
in
les
js
mov
inc
mov
in
jg
pop
dec
add
test
cmp
jno
and
sbb
ja
jb
jecxz
mov
push
add
push
mov
sub
test
cmp
ja
icebp
in
mov
sar
dec
movsl
cmp
ss
leave
jns
mov
ret
loopne
les
cwtl
push
stos
cmp
ret
outsb
push
mov
jl
bound
jmp
pop
pop
int3
mov
and
fdivrl
fmull
jle
adc
add
inc
inc
dec
inc
inc
fwait
iret
mov
enter
dec
or
pop
jnp
lock
push
xchg
push
aam
xchg
jo
sbb
push
ja
dec
repnz
ss
fdivs
mov
mov
idivl
pop
roll
stos
dec
pop
or
xor
rorb
out
lcall
movsb
les
ds
push
jg
icebp
fstpt
add
xor
xchg
jae
cmp
imul
mov
inc
stc
mov
xor
ret
aaa
push
lods
mov
sbbb
pop
xchg
lahf
xor
xchg
mov
aas
sub
add
jle
into
push
repnz
bound
aaa
xorl
pop
testb
cltd
push
push
mov
sahf
shlb
and
pop
lods
in
out
psubsb
xor
jo
mov
xorl
outsl
gs
cmovo
dec
mov
sbb
dec
bnd
imul
out
mov
loope
je
sub
push
jns
cmp
cs
mov
arpl
insl
xchg
outsb
pop
pop
or
mov
cmpsl
pop
mov
ret
inc
push
lock
les
in
aaa
dec
in
or
add
push
xchg
push
clc
js
int3
fnstcw
js
ds
and
xchg
inc
xor
push
xor
aas
aaa
call
andb
fdiv
sub
mov
in
insb
stc
vaddsubpd
loopne
jecxz
pop
cmc
cmc
sarb
setp
imul
popf
jne
or
rorb
imul
enter
push
push
gs
add
ret
xor
in
repnz
nop
dec
insb
test
enter
jge
sti
jae
shufps
ja
rclb
jg
mov
push
push
lcall
imul
xchg
push
stc
test
mov
movsb
mov
and
push
cltd
jle
popa
out
shlb
jae
jo
leave
lods
xlat
push
sub
je
ja
mov
sub
mov
jo
aaa
aaa
mov
cmpsl
add
lods
add
pop
loopne
inc
test
mov
sbb
adc
adc
cmp
hlt
cs
ljmp
sub
dec
cmp
ror
outsl
out
pop
repnz
push
mov
jge
cli
push
jb
xlat
jno
sbb
jmp
and
jno
mov
xor
cmpsl
pusha
pop
and
push
ds
popa
cmpsb
sbb
push
add
insl
mov
call
icebp
fwait
ret
add
loop
jnp
sub
cmc
pop
out
push
daa
or
pop
cmp
lods
adc
jno
fmul
adc
ret
cmp
int3
add
or
sub
dec
dec
or
icebp
push
sub
out
shlb
xor
cmp
cltd
in
pushf
js
mov
jle
movsb
call
fsubr
or
sub
rclb
frstor
xchg
popa
aad
and
pop
test
inc
xchg
xlat
in
repnz
rol
mov
mov
imul
outsb
mov
std
test
popa
jno
or
je
mov
jae
sti
mov
stos
inc
cmp
push
sub
js
dec
inc
xchg
lret
xor
das
dec
push
imul
add
scas
rolb
daa
mov
sahf
adc
sub
in
lret
lds
repz
pop
push
int3
scas
lret
test
aas
xor
and
pushf
inc
fidivl
test
sub
xchg
mov
push
xchg
jbe
and
lret
lods
cmpl
inc
fs
cmp
jp
sbb
pop
inc
hlt
sahf
push
test
dec
jecxz
popa
push
adc
test
pop
subl
cmp
sbb
repz
nop
sub
das
fidivrl
arpl
xchg
pop
dec
push
cmc
imul
fs
push
cmc
lahf
pop
dec
push
aaa
jb
push
mov
sti
imul
addr16
mov
repnz
pop
stc
mov
pop
xchg
sbb
in
je
das
or
idivl
les
and
sets
dec
loope
add
and
jo
leave
mov
sub
repz
shl
adc
imul
jb
add
rcll
out
test
pop
leave
dec
dec
pop
mov
div
push
or
pop
xor
iret
fnstenv
inc
push
jbe
push
mov
lret
push
in
ret
lods
lods
arpl
clc
jp
or
sub
arpl
mov
and
jne
iret
jecxz
call
sbb
fcoml
aas
les
dec
jne
and
pop
and
and
cmp
inc
outsb
pop
xchg
sub
pop
pop
ret
cmp
jno
jg
mov
xchg
addr16
mov
aam
and
jl
xchg
jle
dec
xchg
ret
xchg
enter
mov
and
inc
fadd
cmp
lock
mov
pop
dec
mull
repnz
cli
and
aam
push
dec
int
imul
movsl
jb
inc
fcoms
loope
xchg
js
push
clc
jo
pop
cmpsl
ret
xchg
xor
pop
push
lods
lods
push
xchg
inc
lret
jmp
sbb
add
jl
setns
in
xchg
decb
enter
rorb
mov
jle
jno
adc
mov
lock
fdivp
mov
pop
xor
mov
and
je
imul
loop
leave
push
cmp
enter
aad
mov
cs
xchg
mov
add
fisttpll
push
aas
sub
lock
data16
xchg
int3
adc
insl
scas
hlt
mov
call
fstl
jl
js
sbb
movsb
mov
sub
int3
scas
ret
or
mov
enter
pop
mov
sbb
inc
jo
in
sbb
sbb
sub
fisubl
addr16
xchg
add
int3
adc
add
lods
and
dec
dec
pop
xor
xchg
orl
pushf
adc
les
ds
jnp
dec
mov
leave
jbe
je
sub
xlat
movsl
pop
cmpl
pop
pusha
leave
movsb
push
mov
push
es
sahf
sbb
xor
je
fidivs
push
xchg
cs
jnp
mov
fcmovbe
aad
addl
bound
ljmp
das
adc
fcmovb
out
movb
sub
lret
lret
ss
les
fwait
jns
fiaddl
inc
dec
xchg
cld
xor
sarb
push
leave
into
push
enter
pop
cmp
fucomi
lret
arpl
adc
push
mov
add
dec
mov
adc
adcl
inc
push
or
aas
out
cmpsb
cmp
inc
nop
add
rolb
lcall
test
fcmovbe
xchg
mov
xlat
aaa
push
xorl
je
fs
push
enter
sub
hlt
push
les
test
mov
je
fs
push
enter
sub
hlt
push
les
lods
and
adc
add
je
fs
push
int3
inc
fdivs
test
hlt
insb
in
aam
lds
insb
add
je
fs
push
dec
inc
sbb
test
adc
xor
and
pop
shlb
loop
repnz
ljmp
fildl
push
mov
cmpsl
jb
add
xchg
mull
divl
jae
pop
rcrb
daa
repnz
addb
mov
xchg
bound
adc
pusha
out
scas
ret
movsl
loop
repnz
andb
imul
ret
inc
mov
mov
ret
aaa
lea
push
inc
inc
jno
js
mov
fdivl
xchg
repz
lock
xchg
sti
push
mov
mov
insl
cli
movsb
ljmp
arpl
sub
divl
arpl
lcall
sahf
clts
inc
jg
push
pop
sarl
pop
add
mov
shrb
lret
repnz
inc
xchg
mov
xchg
xor
in
neg
out
call
addr16
xchg
mov
xor
popf
loop
xchg
adc
out
paddusw
mov
ss
or
xlat
push
push
movsb
aaa
adcl
push
jae
pop
xchg
aad
ss
dec
ret
aaa
loop
repnz
aas
xchg
ja
shll
bound
adc
and
pop
jle
jne
inc
mov
cmp
sub
xchg
daa
aam
rorb
ret
arpl
jae
ret
inc
loop
cmpb
and
adc
mov
cmp
daa
mov
fistps
sahf
inc
cmpsb
bound
imul
addb
mov
xchg
bound
adc
and
xor
ret
aaa
loop
repnz
addb
mov
xchg
bound
adc
and
xor
ret
cmc
push
out
cwtl
dec
sub
sub
inc
or
popf
mov
cmp
pop
xchg
mov
cmp
sbbl
xor
adc
dec
icebp
mov
mov
dec
mov
xor
repnz
dec
jmp
lds
ret
jg
mov
shrb
outsb
xor
stos
fdiv
pop
insb
add
or
pop
xchg
stc
popa
adc
pop
inc
call
cmp
sub
lock
fdivrs
pop
sub
xchg
mov
pop
adc
data16
jmp
imul
jno
cmp
in
ja
mov
stos
loope
iret
out
lods
xor
push
dec
lcall
sub
iret
cltd
leave
sbb
jmp
shll
gs
call
pop
in
and
inc
jns
cmp
jecxz
scas
xchg
xorb
out
pop
movsb
fisubrs
add
push
das
xchg
cli
mov
jmp
clc
xchg
and
jge
add
dec
cld
std
add
sub
jbe
scas
test
cld
mov
inc
xchg
pusha
fbstp
adc
sti
testl
in
dec
fstps
inc
scas
push
mov
stos
lods
mov
inc
cmp
xchg
or
push
mov
mov
out
add
jmp
pusha
in
out
or
xchg
lret
and
adc
testb
xchg
lock
inc
cmpsl
xchg
out
push
test
sahf
les
pop
cmp
cs
cmpsb
mov
mov
loopne
jmp
shrl
les
in
jb
add
sti
mov
outsl
xor
imul
lods
out
sub
repz
and
icebp
and
pop
dec
sti
out
addr16
and
jb
or
ljmpw
jp
cmp
lds
out
push
jp
in
push
xor
push
sub
xchg
cmp
idiv
fwait
mov
xor
xor
xchg
mov
popl
ds
pop
jecxz
mov
sbb
sbb
jnp
sub
dec
inc
pop
mov
push
lcall
mov
fwait
enter
xchg
pop
sub
fsts
inc
out
mov
sti
mov
or
add
inc
sahf
xchg
xor
adc
xchg
sub
sub
jecxz
push
out
jmp
xor
xor
cs
xchg
push
xchg
test
sbb
cli
stos
dec
xor
and
xor
or
enter
push
sub
jmp
std
lret
sub
imul
adc
xchg
pop
push
scas
sarb
cmp
xchg
xlat
test
cmp
repz
inc
sub
cld
iret
xchg
aas
xchg
outsl
mov
inc
das
and
mov
pop
add
push
adc
jle
imul
jmp
stos
jbe
insb
mov
dec
roll
imul
mov
in
adc
sub
push
icebp
aaa
jle
xor
into
push
jb
dec
fcoms
pop
pushf
lods
cli
sbb
std
out
fwait
mov
push
loope
mov
loop
test
push
xlat
push
pop
dec
xchg
loop
divl
in
jno
arpl
mov
sbb
inc
mov
les
xor
xchg
fmuls
and
hlt
mov
jmp
in
inc
mov
scas
xchg
popf
adc
ds
pop
pop
xorb
mov
pop
loope
out
adc
mov
sbb
push
mov
insl
adc
aam
jne
pop
test
icebp
imul
jb
cmp
in
cmpsl
mov
jecxz
fnstenv
outsl
fistpl
push
sar
ficoms
jbe
negb
adc
daa
jb
shlb
fidivrl
cmp
movsl
nop
push
cmpsl
lock
aaa
clc
movsl
cltd
sbb
mov
mov
lret
cs
push
mov
in
mov
pusha
xchg
sbb
xor
xorl
int3
push
sbb
inc
movsl
sub
ja
mov
or
cmpsb
mov
in
mov
mov
sub
lds
in
stos
scas
ljmp
xchg
scas
cmp
lea
push
lds
xchg
pop
and
or
inc
std
icebp
divb
sbb
cli
push
adc
dec
add
test
outsb
sbb
cmp
inc
ja
sbb
cld
cmp
pop
loop
xor
adc
pop
iret
add
test
sarl
push
sti
iret
sbb
fwait
aam
cs
mov
movsb
ret
aas
in
loopne
pandn
imul
push
jle
cmp
jmp
jg
cmc
dec
fnstenv
inc
cld
in
scas
xor
ja
fstl
fnstenv
lods
mov
push
dec
lret
aas
insb
pop
pop
xchg
je
lods
arpl
mov
xor
aaa
out
dec
mov
daa
jle
lret
push
arpl
xchg
mov
or
push
mov
push
jg
jno
test
test
fmull
xor
sub
add
loope
push
mov
dec
push
pushf
lods
lcall
cld
ret
outsb
fisubl
jo
push
jno
mov
sub
xchg
inc
pop
inc
push
inc
addr16
sbb
rcll
pop
pop
rcl
dec
cld
movsb
loop
cs
popa
push
test
xchg
cld
frstor
daa
inc
popf
dec
rcr
pop
lahf
inc
lds
push
pop
adc
or
lods
sbb
in
pop
shlb
mov
push
jo
jmp
cmpsl
cmp
mov
sbb
sub
mov
pop
push
mov
cmp
lcall
mov
test
adc
scas
xchg
insl
mov
and
adc
aam
adc
cmp
cmp
adc
jbe
pushf
hlt
xchg
sbb
out
lods
push
inc
int3
xchg
shll
inc
lds
iret
xchg
add
in
outsb
loopne
pusha
adc
cmc
test
xchg
xchg
js
mov
aam
adc
pop
jl
push
cwtl
rcll
and
rep
rcrl
adc
jl
xchg
fstpt
lock
cmpsb
xlat
pop
loop
ds
jecxz
push
pop
insl
addr16
stos
sub
insl
in
cmp
lret
sahf
ret
mov
pop
nop
shll
pop
xchg
stos
xor
aaa
cmpsb
cwtl
pop
or
test
ds
add
cmp
mov
jbe
inc
dec
adc
js
xchg
mov
hlt
out
pop
sbb
lret
movsl
jne
cmp
or
xchg
xor
repz
into
cld
test
fldenv
mov
inc
jle
imul
push
divb
into
pop
inc
test
mov
and
lahf
sbb
arpl
dec
inc
cmp
jnp
jb
mov
push
push
sub
popf
cmpsl
xchg
cld
aaa
rcr
stos
idivl
jne
mov
subl
ds
push
xchg
loopne
jbe
imul
push
out
cmc
test
adc
add
in
and
outsb
movsl
and
jno
rcll
lcall
xor
dec
adc
pop
xchg
pop
mov
hlt
add
sub
mov
and
gs
push
lret
or
repnz
aaa
out
mov
out
enter
dec
sbb
push
gs
jno
add
push
fcmove
push
adc
add
test
les
ficoml
insl
ja
xchg
in
adc
out
cmp
push
fcomps
in
mov
mov
lods
add
xchg
pop
out
cmp
inc
sub
test
xchg
sub
aas
jl
mov
das
hlt
repnz
lods
cmp
cmpsl
inc
imul
cld
ret
pop
cld
sub
pop
mov
dec
push
rclb
mov
adc
xlat
pop
mov
data16
pusha
arpl
push
sahf
xchg
cwtl
push
lret
mov
pop
lea
fwait
sbb
loop
pop
mov
or
into
pop
inc
lahf
jo
out
mov
xchg
fnstenv
cld
push
jne
jmp
cltd
mov
jno
xchg
dec
mov
cmp
sbb
rcrl
outsb
in
dec
push
mov
push
shrl
hlt
push
fbstp
push
jge
rcrb
repz
inc
sbb
xchg
lods
shll
insb
mov
add
roll
cli
lods
loop
out
jmp
fcomps
xchg
inc
fbld
jge
jne
add
dec
fisttps
inc
jl
mov
jecxz
in
xor
and
std
daa
lret
or
fdiv
inc
dec
stos
xlat
and
fildll
adc
dec
pop
jecxz
mov
add
or
insb
sti
fstps
fldt
aaa
add
jb
push
cmp
sahf
addl
and
inc
pop
pusha
and
aad
pop
mov
xchg
sti
sub
inc
inc
mov
dec
out
sbb
fdivp
iret
in
insb
iret
cmp
mov
sti
push
jl
insl
xchg
test
jnp
hlt
leave
pop
xchg
xchg
je
daa
pop
xor
aad
dec
and
mov
inc
stos
inc
adc
js
push
or
push
dec
sub
dec
popa
and
pop
mov
cmp
pop
pop
sub
jae
xchg
mov
xorl
dec
push
inc
sub
adc
idivb
fdivp
pop
in
in
in
jo
mov
sbb
clc
push
fildll
sub
pop
xchg
dec
sub
ss
adc
inc
push
sub
fucomp
adc
jns
hlt
shll
or
ret
test
insb
push
mov
xchg
rcr
pushf
lds
aad
sti
or
js
scas
and
mov
xchg
sbb
enter
pop
lock
and
xchg
in
lret
sbb
jle
or
dec
push
and
sub
mov
xchg
rorl
lock
push
daa
cmpsb
or
scas
jg
mov
xor
push
mov
jmp
in
push
insl
ja
xor
pop
pushf
sbb
inc
sahf
scas
mov
or
add
les
cmp
out
mov
xor
loopne
xor
stc
sbb
dec
mov
pop
pop
mov
sbb
enter
clc
xchg
inc
push
leave
mov
clc
pop
jle
push
in
in
rcrb
aad
cwtl
mov
std
lcall
mov
js
dec
cs
and
add
xchg
shll
rcll
mov
cmc
jae
add
sbb
jbe
sahf
mov
cli
mov
sbb
fistpl
jb
dec
adc
fcoms
popf
or
ja
sahf
pop
push
icebp
sahf
push
sbb
rcrb
or
rolb
loope
movsl
call
out
mov
hlt
and
sbb
rolb
je
or
insl
iret
stos
ret
loop
cmp
in
or
sub
jnp
adc
mov
cltd
js
out
pop
or
cmp
aaa
inc
xchg
inc
adc
xlat
pop
mov
pop
fcmovne
sub
mov
mov
movsb
push
int
iret
in
daa
pop
inc
sbb
or
roll
inc
fsubrs
hlt
xchg
xchg
outsb
fdivrs
sbb
sub
out
gs
mov
jno
jo
arpl
call
addl
push
movb
dec
aam
pop
lods
cltd
xchg
popa
jmp
hlt
xchg
pop
pushf
adc
mov
jp
mov
jg
lock
cld
daa
xchg
arpl
pushf
mov
cltd
mov
rcrl
icebp
xor
jae
mov
mov
rcll
xchg
int3
pop
js
cwtl
scas
out
testl
or
enter
pushf
stc
sarb
ficoms
and
pop
cmp
mov
lret
cmp
mov
stos
rorl
push
xchg
loop
sub
jecxz
ret
rcll
add
and
add
push
adcb
push
lcall
les
lahf
cmp
fstps
xchg
sbb
or
popa
push
pop
ljmp
inc
xlat
sub
sub
and
lcall
sub
sub
inc
mov
pop
add
mov
icebp
out
inc
mov
cltd
iret
add
fdiv
push
imul
pcmpgtb
mov
test
jbe
fistpll
dec
cmp
push
pusha
push
push
gs
jo
push
movsb
push
ds
inc
outsb
arpl
icebp
push
fbstp
sbb
xchg
ds
bnd
scas
jae
xor
dec
mov
out
inc
add
sub
iret
cmp
sub
leave
out
cmp
test
in
int3
in
std
shl
leave
mov
inc
adc
stos
test
sbb
scas
pop
loopne
repnz
lahf
xchg
add
add
xor
repnz
push
push
into
inc
lds
ljmp
fidivs
lods
movsb
sbb
lahf
fimull
inc
nop
sub
xor
shll
repz
mov
hlt
insb
outsl
xor
xlat
xchg
push
push
xor
lahf
lods
add
sub
flds
jge
mov
and
xor
pop
stos
xorb
test
xor
dec
dec
push
add
out
mov
mov
add
push
xlat
insl
test
inc
sbb
xor
push
fs
xor
mov
push
lock
sub
inc
sbb
fwait
mov
xchg
add
fsubp
adc
lcall
push
std
sub
testl
mov
jnp
jne
pop
adc
insl
sbb
lea
ficompl
int
cmpsl
mov
push
dec
lock
lds
xchg
dec
sbb
enter
mov
mov
clc
xor
inc
or
xor
jne
pop
loope
inc
shrb
cs
aad
fcoms
or
or
frndint
mov
mov
divl
xchg
ja
and
pop
cli
sbb
and
pop
ja
cmp
push
jo
and
ret
push
jae
movsl
xchg
pop
push
scas
arpl
push
sbb
aas
aaa
xor
sub
sbb
call
sarb
or
shrb
out
jno
xor
addr16
sub
jb
outsl
sub
sub
es
ret
cmpsl
mov
cmp
add
mul
mov
imul
mov
xchg
shr
cmovle
lock
pusha
shrl
daa
sbbl
jns
push
adc
aam
mov
lock
aas
lock
pop
aad
add
mov
test
mov
movsb
cli
loop
cld
push
jne
sub
fbld
and
cmc
jo
push
shlb
mov
int3
test
mov
aaa
subb
sub
adc
or
jp
push
push
out
sbb
addr16
add
int3
int3
and
xor
bound
and
leave
scas
ds
jns
stos
mov
repz
jmp
xlat
fsubl
mov
push
xor
sub
sahf
cmp
mov
pop
mov
iret
mov
xchg
dec
popa
in
jnp
aad
inc
aad
add
jno
stc
mov
xchg
ret
xorb
adc
mov
mov
sbb
add
cmp
pushf
shl
pop
lock
aam
sbb
scas
xor
sarb
rcrb
cs
adc
xlat
push
dec
dec
sub
xchg
nop
stos
mov
mov
loope
jp
mov
mov
ja
mov
not
js
stos
clc
imul
sbb
push
inc
push
xor
shlb
xchg
push
xchg
push
test
inc
imul
gs
push
inc
mov
pop
mov
jns
pop
mov
mov
mov
rorl
inc
imul
or
inc
dec
jo
movsb
jp
roll
cmpsb
repz
or
shlb
mov
test
stos
les
pop
fsubr
jmp
leave
xor
inc
out
push
shrl
inc
sti
rorl
and
aam
pop
adc
cmp
hlt
rorb
vpsubsb
out
push
sub
fsubrs
mov
aaa
scas
sar
out
orl
in
int3
xchg
cmpsb
mov
ljmp
popa
int3
repz
jo
push
ds
push
mov
xorl
push
scas
lds
das
outsl
dec
push
pop
je
imul
dec
sbb
push
pop
inc
sub
incb
ljmp
jo
push
fsubrs
inc
push
nop
dec
and
add
dec
insb
dec
or
ljmp
mov
sub
es
pop
ret
je
adc
mov
jnp
push
jmp
data16
or
jb
fcompl
mov
push
shrb
pop
aam
inc
daa
pop
jmp
adc
sub
dec
fnstenv
mov
mov
clc
shll
addb
lods
fs
and
outsl
fistps
lock
enter
sbb
rorl
cmc
popf
mov
cmp
jge
stos
das
outsl
ss
dec
pop
lcall
mov
fdivrl
outsl
sbbl
pop
daa
pop
or
cmp
push
scas
test
fidivs
mov
push
imul
xchg
fdivr
sbb
jb
or
push
and
xor
mov
ss
and
mov
pop
outsb
cmp
cltd
mov
lock
push
pushl
jne
lahf
in
and
mov
sub
out
sub
xchg
pop
fcompp
xor
test
push
sub
xchg
dec
fstps
lcall
cmp
cmpsb
mov
mov
xor
sarb
cmp
adc
imul
xor
mov
and
and
mov
cltd
icebp
scas
xchg
mov
mov
repnz
xor
sti
push
sbb
mov
pop
gs
sti
pop
cld
xchg
sub
dec
xor
icebp
ds
or
cmpsb
push
push
add
jae
xchg
inc
lret
sub
cmpsb
xchg
and
and
fstpt
insb
sub
fisubs
pop
int
mov
icebp
int3
nop
adc
inc
jg
push
add
push
dec
add
idivb
mov
das
cwtl
mov
mov
out
cmp
mov
xchg
dec
into
aaa
jbe
in
jno
dec
sbb
jns
aas
and
hlt
popa
mov
sub
pop
imul
cmpsb
out
pop
cwtl
pushf
or
push
push
cmp
or
cmp
mulb
call
mov
arpl
push
xor
lahf
dec
shll
notb
push
lcall
and
inc
and
sbb
or
cld
pop
or
les
pop
in
imul
or
divb
call
loopne
sbb
dec
js
add
and
mov
loop
ljmp
cltd
inc
in
or
dec
pop
mov
jmp
je
xlat
jg
add
loop
add
sbb
fcoms
hlt
jp
cmpsb
outsb
inc
adc
shlb
sbb
add
add
insb
pop
xchg
xlat
cmp
cwtl
xor
dec
jl
pop
gs
inc
lret
outsl
mov
pop
mov
mov
addb
out
xchg
fisttpl
pusha
int3
es
xor
jo
pop
sbb
int
pop
in
imul
inc
testb
rolw
sbb
xlat
scas
mov
loopne
pop
mov
xor
fnstenv
or
adc
sub
pop
test
mov
cli
xlat
in
inc
cmpsb
and
add
inc
daa
mov
pop
lds
xor
js
ror
mov
lods
push
sti
jb
not
sub
xchg
test
cmp
shll
add
test
in
dec
lds
adc
shl
push
jns
data16
mov
jbe
je
xor
add
push
imul
js
xchg
or
cmp
enter
xor
xchg
dec
fists
int
daa
imulb
out
mov
xchg
cmc
dec
inc
lock
outsb
mov
sbb
push
repnz
pop
sbb
jb
ja
in
xchg
or
sarl
ss
addb
xchg
scas
fs
icebp
aas
aaa
imul
call
xor
clc
stc
xchg
fwait
imul
mov
sub
in
mov
xchg
push
stos
pop
jae
jl
loope
push
jge
adc
jae
jo
stos
mov
lret
ds
adc
mov
cmp
test
not
scas
cmp
scas
data16
xchg
add
or
sbb
mov
in
mov
test
xchg
mov
shrb
jl
pop
or
movsb
xlat
into
push
and
repnz
sbb
add
icebp
or
fs
sbb
bswap
aaa
jno
mov
stos
addr16
push
into
mov
shl
subl
xor
lods
cmp
xor
cmpsb
xor
sbb
jmp
inc
movsl
push
rcl
jno
movsb
jp
xchg
cltd
lods
cld
sti
inc
addr16
inc
lret
sub
es
mov
cmp
inc
dec
test
sahf
pop
jbe
js
cmp
enter
cltd
sbb
and
jne
or
jo
xor
sub
pop
lods
and
jmp
movsb
add
cmp
imul
es
adc
iret
std
addr16
push
inc
addl
out
cmp
mov
ljmp
sub
addr16
leave
rcrb
jns
mov
pop
loop
icebp
mov
push
push
ror
and
daa
lcall
inc
lret
nop
outsb
lods
test
pop
and
adc
sbb
jne
pop
repz
cmc
arpl
xor
mov
filds
dec
push
xchg
dec
out
icebp
mov
jl
imul
mov
pop
shlb
daa
repnz
addb
mov
xchg
bound
adc
and
xor
ret
aaa
loop
repnz
addb
mov
xchg
bound
adc
and
xor
ret
push
bound
repnz
xchg
bound
adc
and
xor
ret
insl
loop
repnz
adcb
mov
js
sbb
mov
or
sbb
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
xchg
jl
insb
mov
cmpsb
dec
bound
inc
test
or
cld
push
in
fsubl
int3
push
mov
data16
pop
cmpsb
dec
cmp
sub
sbb
or
cld
push
in
fsubrl
int3
push
mov
data16
pop
mov
sub
sbb
or
ret
imul
mov
jl
sbb
cli
in
aaa
pop
and
nop
loopne
mov
pop
mov
push
inc
pop
je
sub
dec
sbb
jae
jae
xchg
inc
das
mov
int
jl
daa
jbe
cltd
jo
imul
adc
sbb
lea
stc
adc
fldcw
lahf
jbe
lea
pop
sbbb
cmp
cmc
out
popf
iret
pop
stc
add
fnstenv
test
bound
loope
nop
cmp
mov
mov
ljmp
popf
jbe
jle
xchg
icebp
pop
pop
cmp
test
mov
add
int3
adc
pop
jbe
data16
lahf
insb
mov
cmpsb
dec
sarl
negb
or
cld
push
in
fdivrl
int3
dec
mov
lretw
jecxz
rcrl
rorb
movsl
push
mov
jl
nop
push
inc
mov
mov
add
or
stc
cmp
sbb
jae
or
mov
addr16
sub
loop
sub
sbb
sub
cmp
sbb
or
cld
push
in
fsubl
int3
push
mov
data16
pop
cmpsb
dec
cmp
sub
sbb
or
cld
push
in
fsubl
int3
push
mov
data16
scas
aad
mov
test
int
cmp
adc
cmpl
lea
out
jnp
cmpsb
cmp
mov
popa
rorb
push
inc
int3
xor
pop
aas
lcall
sti
enter
xchg
cwtl
rorb
shll
xchg
je
sub
xchg
test
dec
popa
cmp
cmp
pop
clc
jb
jbe
pop
jp
sahf
fbld
jmp
push
pop
std
loop
mov
das
mov
das
push
mov
jno
push
icebp
sub
decb
xchg
xor
sub
ljmp
xor
mov
mov
push
mov
aam
mov
jmp
pop
xchg
push
sarb
pop
imul
sbb
imul
adc
in
cmp
and
std
sarl
mov
or
push
cmp
mov
outsl
sbb
in
jle
adc
inc
lea
in
inc
aas
add
mov
arpl
mov
enter
add
push
or
adc
rorl
pop
bound
sub
hlt
insb
ljmp
inc
pusha
in
inc
into
cwtl
mov
jbe
loope
mov
loope
dec
jno
lahf
loopne
cmp
rol
pop
leave
bound
mov
and
shr
cmpsl
nop
inc
mov
lods
add
inc
sbb
mov
popf
movsl
cmp
push
jno
pop
in
inc
push
add
and
mov
add
rorl
ljmp
xchg
dec
stos
int
insl
mov
lds
repz
adc
leave
sbb
xchg
cmp
dec
push
sub
sbb
mov
sbb
mov
sahf
in
cmpsl
dec
in
xchg
cmp
and
nop
pusha
jae
mov
rcll
cmpsl
insl
mov
std
add
and
adc
mov
popa
push
pop
jnp
push
xchg
nop
add
inc
cmp
fstps
cmp
xchg
icebp
cmp
loope
cmp
inc
xor
adc
sub
mov
adcb
mov
mov
inc
bnd
test
inc
repz
xor
vmwrite
sbb
mov
add
idivb
adc
aam
fisubrs
outsl
jns
popf
jo
negb
or
or
cmp
or
lock
mov
dec
sbbb
adc
or
filds
aas
jg
mov
cltd
stos
xchg
outsb
fstps
or
xchg
or
xchg
jmp
in
mov
filds
push
sub
ret
add
out
add
loope
bound
pop
test
fsubr
jg
repnz
push
mov
clc
fwait
or
outsl
mov
stc
cmp
and
mov
pop
dec
jo
xor
inc
jg
arpl
dec
lods
lret
sub
lcall
in
ss
xor
out
enter
out
rcr
and
push
push
mov
repnz
add
loopne
jmp
jge
cmpsb
andl
xchg
call
pop
sbb
loop
pop
sbb
mov
mov
push
ss
dec
jp
insl
push
push
fs
pop
dec
loop
vshufps
jmp
mov
fs
sbb
mov
imul
mov
jecxz
andl
pop
and
add
push
mov
pop
repnz
xchg
leave
pop
addb
sub
mov
rolb
imul
and
or
push
push
aas
xor
or
in
or
mov
cld
adc
in
jl
add
std
pusha
xor
repz
dec
fsub
mov
test
in
push
sub
and
push
fs
add
xchg
dec
adc
cmp
sbb
fistpl
enter
and
jbe
dec
mov
or
cli
repnz
lret
jbe
loope
sub
data16
push
mov
insb
mov
scas
aas
in
popf
jmp
out
ret
adc
xor
loopne
in
push
dec
ja
rcrl
cmp
rolb
xor
aad
pop
fimull
push
insb
mov
std
arpl
js
fxch
jb
mov
inc
shr
pop
mov
jne
iret
aaa
jne
roll
xchg
stos
out
fcomip
and
pop
xchg
test
mov
xchg
sub
test
inc
mov
mov
and
jecxz
push
es
or
cmpsb
xlat
sahf
lahf
pop
rcl
cwtl
dec
jnp
cmc
stos
test
cld
pop
xor
cmpsb
pop
xchg
mov
jns
jge
sub
mov
jg
stos
xor
jg
jmp
pop
dec
xchg
sbb
movsl
mov
xchg
fwait
int
xchg
push
lea
lea
push
es
mov
fstp
loopne
xchg
inc
out
lcall
ja
imul
sbb
lds
jmp
mull
jne
adc
aas
and
inc
add
xchg
pusha
lods
lret
jns
stos
mov
pushf
xchg
call
jne
sbb
fidivl
stos
adc
jnp
out
pushf
out
mov
mov
xor
jmp
call
or
loop
bound
xlat
xor
int3
xor
and
lods
cmp
xor
xor
sub
mov
call
in
lret
pop
pop
mov
cmp
ret
out
xor
loop
jnp
hlt
mov
jp
xchg
push
xorb
daa
cmpsl
mov
xor
stos
sbb
mov
jl
lret
leave
push
lods
mov
jnp,pn
adc
pop
jle
js
jle
addr16
lods
mov
test
fisubrs
xchg
mov
jns
xor
mov
jo
mov
adc
aas
iret
icebp
lods
loope
roll
cmc
mov
into
sub
ss
fists
pop
dec
pop
mov
pop
jo
or
xor
inc
inc
loop
jg
jmp
loope,pn
dec
add
push
jle
mov
adc
stos
pop
push
pop
lods
sbb
pop
xlat
mov
inc
sub
movb
std
sti
and
ret
imul
push
dec
jg
xor
fsubl
pushf
iret
and
cmp
jge
ret
mov
xlat
test
call
ds
and
in
or
xorl
stos
outsl
mov
cmc
call
aas
jg
pusha
repnz
popa
sub
push
add
adc
xor
popw
imul
push
das
sbb
push
xlat
outsl
dec
or
xor
mov
xor
nop
or
and
icebp
and
sub
fstl
dec
xorb
and
in
stc
in
sub
lea
push
mov
gs
jb
add
cmp
ja
in
jbe
daa
adc
je
adc
dec
andl
addr16
lahf
ret
icebp
int3
add
ss
dec
cmc
fucom
cmc
pop
daa
sbb
fs
inc
and
xchg
daa
and
dec
adc
lcall
ljmp
in
mov
adc
arpl
lds
mov
scas
out
push
jne
xor
xchg
sub
sub
ljmp
stos
inc
int3
sti
mov
sbb
inc
xor
sbb
ds
push
adc
ja
push
mov
push
and
out
ret
adc
xchg
push
ja
dec
jle
rcrl
stos
mov
in
in
jae
jmp
pusha
xchg
pop
dec
lds
dec
shll
lea
imul
sub
or
fcoml
dec
pop
enter
inc
rolb
mov
mov
sub
xchg
js
push
jns
jno
pop
aaa
dec
cs
leave
cmp
jo
mov
cmp
mov
pop
mov
sub
push
std
mov
dec
pop
out
mov
sub
sub
fmulp
jne
lret
aam
imul
cmp
lds
lahf
imul
addl
lds
stc
xorb
int
fcomps
sub
cmp
mov
mov
scas
daa
inc
dec
jl
scas
jle
push
in
mov
mov
hlt
mov
ljmp
into
lret
std
fucomip
pop
pop
rclb
gs
mov
xchg
mov
inc
xor
add
mov
sbb
sbb
dec
dec
les
cltd
enter
mov
leave
ss
out
mov
loop
jecxz
std
push
mov
sahf
arpl
out
ja
ja
cs
and
in
addl
imul
xor
inc
pop
addl
push
sbb
inc
out
into
pop
fstpt
adc
add
lahf
dec
sbb
mov
iret
jbe
cltd
xchg
std
ss
add
jecxz
test
mov
mov
sar
outsb
add
out
xchg
cmc
mov
mov
divb
mov
mov
push
pop
or
test
movsb
ja
rclb
imul
and
cli
jg
xchg
or
sub
in
js
inc
in
inc
sub
lret
mov
repz
push
cmpsb
xchg
mov
jecxz
dec
outsl
and
xchg
jp
dec
push
cmp
ret
sti
pop
mov
and
mov
insl
xchg
push
or
adc
jbe
pop
sbb
jb
xchg
cli
and
adc
out
push
pop
sbb
xchg
dec
test
sub
xor
nop
pop
dec
test
repnz
inc
lods
out
insl
gs
xor
pop
xor
xor
mov
ret
fdivrs
popf
inc
cwtl
xor
test
xor
cltd
sahf
and
jno
mov
repz
xchg
pop
mov
or
push
or
ret
fidivs
jae
dec
jmp
mov
mov
movsl
cli
int3
in
icebp
stos
cmp
mov
stos
lods
jp
dec
jae
jb
int3
sbb
iret
or
adc
es
cld
in
fsubrs
jecxz
in
aam
add
adcb
cmp
out
pmaddwd
xor
rcrb
gs
sub
nop
dec
loop
ficomps
in
inc
fcmovb
lcall
adc
pop
xchg
xlat
xchg
inc
push
inc
jl
dec
sub
or
fisttpl
cmpsb
push
pop
pop
ret
mov
jmp
bound
stos
cltd
cs
push
mov
jne
jno
cmp
inc
aaa
das
les
push
dec
dec
sbb
imul
dec
sub
mov
mov
push
pop
push
mov
xchg
pop
adc
sbb
dec
outsb
test
jmp
mov
push
int3
ljmp
out
or
mov
jmp
scas
das
lds
lea
mov
sete
mov
add
xchg
mov
and
xchg
add
ror
popa
xlat
sub
cmpsl
jp
or
hlt
in
sarb
in
cmpsl
mov
hlt
ja
dec
add
sbb
add
repnz
adc
fwait
dec
inc
mov
inc
sbb
outsb
loope
ret
nop
mov
sub
and
imull
out
outsl
pop
and
stos
pop
or
inc
loop
jmp
xchg
pop
loop
or
movsb
movb
mov
mov
mov
cs
dec
or
adc
test
in
sub
push
and
push
outsl
out
pop
shl
aam
lods
rcll
bound
xchg
mov
hlt
add
push
add
out
lcall
inc
loope
sub
mov
roll
mov
pop
mov
std
mov
test
jbe
pop
cmp
jbe
fildll
and
outsl
jb
pop
out
ja
cmp
ret
xchg
push
aas
pusha
inc
fcmovnu
loopne
xlat
int3
adc
ja
or
xlat
leave
ret
pop
mov
fldl
xchg
sub
notl
lods
ret
jg
cmpsl
mov
lcall
mov
aas
imul
jnp
daa
xchg
stos
dec
stos
pop
ja
js
ss
pusha
adc
xorl
repz
mov
sbb
inc
inc
and
and
dec
lret
mov
sbb
les
lret
sbb
mov
xchg
xor
fst
add
or
pop
mov
or
addr16
push
and
lahf
in
sbb
push
hlt
add
sub
pop
loopne
sub
pop
lahf
lods
popf
pop
lret
inc
push
cmp
cmpl
xchg
ret
aas
xor
mov
adc
adc
dec
jmp
xor
in
jl
mov
push
mov
andl
lea
xor
fcomip
lahf
psrlw
mov
push
cmp
movsb
ret
mov
mov
inc
push
hlt
ja
leave
ficoms
sti
inc
out
aaa
lea
sub
mov
scas
sbb
xor
push
nop
ficomps
popa
mov
daa
mov
cs
lcall
mov
mov
xor
jge
push
sbbl
mull
outsb
fwait
dec
sbb
mov
xchg
int
or
nop
lret
sbb
add
mov
lods
add
lods
gs
xchg
mov
and
mov
jg
adc
sbb
out
push
mov
adc
mov
daa
or
xor
call
aad
push
or
fmulp
adc
arpl
push
pop
push
xchg
mov
pop
jmp
lcall
call
adcb
mov
pop
fisubs
add
lcall
enter
inc
imul
or
mov
das
inc
mov
ret
inc
or
into
stc
or
lret
mov
xor
xor
pusha
shll
adc
mov
mov
call
in
xchg
sub
xor
adc
xchg
mov
stos
fsubrl
out
dec
lock
pop
shrl
mov
frstor
push
fwait
dec
xchg
aas
jp
mov
sub
lret
mov
adcl
and
pop
xor
outsl
aaa
inc
mov
dec
outsb
cmp
shlb
lahf
inc
les
jg
sub
push
sub
mov
pop
pop
arpl
les
outsb
addr16
sub
and
mov
btr
mov
pop
inc
xor
in
mov
aas
les
dec
leave
cld
ss
test
xchg
or
jo
sbb
xor
or
movsl
mov
sahf
roll
fdivl
jno
sbb
xchg
add
clc
cmpsl
push
cli
loopne
fldt
dec
aam
sub
stos
int
add
mov
lret
mov
cmc
xor
pop
inc
pop
aad
adc
xor
movsl
inc
dec
or
lea
sbb
add
mov
inc
sub
mov
mov
pop
fbld
push
movb
vpmacsww
out
hlt
adc
aaa
mov
fdivrp
loop
xchg
push
dec
imul
rorb
out
subl
fsts
push
pop
inc
imul
fisttps
ljmp
in
dec
sti
outsl
lcall
xor
in
addb
pop
push
pop
nop
cmp
mov
sbb
mov
adc
dec
jge
mov
test
sbb
ds
popa
jnp
add
fwait
xchg
cld
jnp
aaa
jne
into
addb
dec
xor
fiadds
mov
lods
jmp
cmc
push
pop
pop
adc
addr16
ljmp
push
insl
and
xchg
cmp
cmpsl
push
mov
inc
add
call
xlat
pop
popf
xor
jp
mov
mov
xor
arpl
lods
add
sbb
mov
push
mov
push
add
sub
mov
xor
pop
sub
mov
fnsave
scas
push
jecxz
stos
inc
jmp
pop
push
out
dec
mov
fwait
inc
jbe
daa
jbe
sbb
push
adc
shll
adc
cmpb
inc
je
enter
testl
sub
push
xlat
ficoms
push
aas
cwtl
andl
jnp
xor
mov
mov
cmpsb
mov
rorb
outsl
cmp
jmp
push
ljmp
jb
fs
sub
lds
not
adc
dec
das
cltd
jo
sbb
movl
xchg
mov
mov
test
jp
in
psadbw
cli
xchg
test
fstps
pop
sbb
sbb
cmp
loopne
inc
stos
jmp
out
sbb
add
in
mov
js
imul
mov
std
sbb
push
subl
pop
fwait
es
mov
sub
lds
andl
in
mov
mov
orl
pop
js
mov
adc
jnp
mov
push
imul
and
mov
loop
sbb
adc
scas
cs
mov
insb
push
xchg
popf
in
cli
decl
inc
int
mov
push
repz
add
iret
mov
out
mov
xor
pop
push
xchg
ja
mov
push
cmp
cmpsb
in
dec
dec
aam
imul
out
sar
dec
ljmp
out
jb
mov
divb
dec
movb
mov
jle
nop
pop
pop
push
sub
dec
inc
fwait
adc
add
cmp
sbb
mov
call
jne
das
scas
icebp
mov
mov
rclb
adcl
subb
imul
mov
rorl
lret
pusha
add
repz
arpl
aas
bound
xor
push
sbb
cmpsb
inc
dec
out
scas
inc
imul
push
iret
fstpl
push
rcr
scas
cmp
in
ret
les
cmp
sti
pop
and
mov
jae
and
xchg
pop
jle
addr16
and
shrb
mov
stos
pop
xor
cld
push
xchg
icebp
mov
hlt
jnp
sbb
add
into
inc
es
adc
mov
add
dec
aas
xor
je
lcall
pop
xor
pusha
fwait
push
mov
add
cltd
aam
cltd
popf
test
aam
and
pop
orl
or
pop
xchg
frstor
insb
aad
cli
rcll
push
lcall
dec
inc
aad
sbb
pop
clc
mov
xor
jno
dec
push
xor
int
pop
cld
fldt
push
shr
lea
mov
shrw
lret
or
adc
stc
sub
test
in
xchg
push
dec
int3
mov
js
mov
lds
imul
rcll
cmp
int3
movlps
push
sub
xlat
mov
mov
jb
xchg
jb
prefetch
or
xchg
stos
lea
test
or
insl
fidivs
imul
mov
int3
in
ret
mov
mov
pop
sub
pop
inc
sub
movsb
lods
pop
imul
and
xchg
cmp
mov
mov
cmp
repz
push
out
daa
or
clc
jge
shrl
mov
add
scas
lret
js
pop
mov
jno
stc
mov
sub
xchg
add
dec
imul
mov
aas
adc
mov
lock
sub
xchg
lods
dec
mov
lahf
repnz
dec
push
gs
push
neg
adc
scas
in
jmp
cmp
popa
nop
sbb
icebp
stos
les
fists
icebp
mov
cmp
mov
test
iret
push
add
dec
test
mov
or
jp
and
mov
dec
mov
sbb
in
stc
aaa
pushf
mov
outsl
add
push
scas
dec
ret
push
cwtl
xor
dec
cmp
das
cmp
pop
popf
dec
scas
jge
test
les
scas
mov
loope
jb
mov
sbb
incl
insl
mov
aad
stc
test
rorl
movsl
inc
imul
ja
fsubrs
fcmove
adcb
pop
stc
sar
test
hlt
dec
int
in
inc
std
sbb
call
mov
sub
and
pop
sub
in
popf
into
push
jecxz
aaa
jmp
mov
in
mov
cmpsb
and
cmp
shl
jb
lcall
aad
std
or
setbe
fisubrl
mov
add
dec
jge
cmp
cwtl
out
xchg
mov
lretw
adc
out
or
lahf
jg
js
ljmp
out
inc
scas
mov
sar
mov
xlat
lock
pop
lcall
push
jbe
scas
xchg
fs
mov
and
or
mov
rclb
lret
inc
sbbb
cltd
testb
or
in
aad
lods
fcmovne
sub
cld
es
adc
sub
loopne
rcr
lcall
sbb
dec
out
rcr
jle
loope
xchg
add
add
dec
sub
ret
or
decl
test
cmp
push
scas
pop
sub
pop
cmc
jmp
push
dec
cmp
sub
sbb
or
cld
push
in
fsubl
int3
push
mov
data16
pop
cmpsb
dec
cmp
sub
sbb
or
cld
push
in
fsubl
int3
push
mov
data16
pop
cmpsb
dec
cmp
sub
sbb
push
in
fsubl
int3
push
mov
mov
pop
cmpsb
dec
aam
lods
jbe
repz
inc
pushf
fsubl
mov
mov
jae
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
add
andb
xor
or
js
adcb
or
and
inc
loop
repnz
add
xor
lock
adcb
add
xor
nop
loop
repnz
add
xor
call
mov
into
inc
mov
ret
cs
es
pusha
pop
nop
jbe
and
pop
sub
outsb
mov
jecxz
pop
mov
xor
jbe
mov
idivb
dec
int
sarl
pop
mov
jp
push
pop
and
cmp
jo
sub
and
xchg
shr
sub
adcb
movsl
xchg
inc
scas
inc
xchg
adc
gs
add
test
pop
cmovo
lcall
fistpll
cli
or
test
popa
ret
inc
sbb
push
cmp
mov
les
daa
jne
and
jo
lahf
lcall
mov
and
lret
aad
bound
add
cmpsl
jb
into
nop
adc
inc
rclb
jmp
xchg
sbb
dec
rclb
jo
add
cmc
data16
mov
push
pushf
jo
cmpb
mov
cmp
mov
addr16
pop
movsl
inc
mov
and
inc
mov
ret
and
rcll
in
rcrl
push
mov
jb
adcb
add
push
rolb
jo
pusha
add
xor
lock
adcb
add
push
rolb
jo
pusha
add
sbb
dec
cmp
pop
lahf
in
mov
xor
lods
sbbb
mov
lahf
add
mov
xorb
cmpxchg8b
leave
lds
nop
xlat
out
subl
lretw
cs
pop
lods
jno
pop
popf
mov
jecxz
push
pop
adc
dec
jae
bound
push
test
adc
mov
dec
test
je
mov
jg
xchg
sbb
adc
xor
inc
mov
sub
test
xchg
sub
or
cmp
add
mov
fimuls
imull
adc
jb
and
mov
sbb
sarb
repz
and
icebp
xor
or
pop
clc
in
mov
mov
or
pop
idivb
xlat
gs
add
aad
int3
negb
test
int
adcl
jmp
arpl
jo
in
cmp
popa
ret
or
cmpxchg
pop
fsubl
sbb
arpl
cltd
sahf
insl
nop
adc
and
mov
bound
push
mov
pop
and
fldcw
fisubs
clc
out
je
cmc
pop
loope
inc
jo
xchg
insb
jnp
sarl
adc
gs
aam
stos
adc
ljmp
dec
xor
xchg
lea
mov
pop
mov
mov
or
sub
push
fldenv
test
out
lock
out
lahf
push
je
outsb
scas
sub
cwtl
mov
or
dec
xchg
insl
repnz
jne
mov
dec
lock
sahf
jnp
roll
fsubrl
add
sbb
xchg
jmp
push
and
xchg
cmpsl
sbb
pop
jge
jb
dec
xchg
mov
lcall
idivb
inc
icebp
mov
mov
aaa
xor
addb
cmp
iret
jbe
adc
les
dec
into
mov
push
jb
rcrb
iret
sti
insb
sahf
adc
leave
lods
mov
mov
lret
sti
lret
xchg
leave
mov
insl
mov
xor
pop
add
mov
fistpl
in
ja
fnstenv
sub
dec
nop
mov
push
ds
les
enter
inc
cmp
hlt
movsl
sub
dec
cmp
movsl
inc
hlt
push
mov
hlt
xlat
adc
sbb
and
stc
repz
xchg
insb
jmp
dec
mov
or
nop
lock
out
sbb
sub
pop
mov
jge
inc
dec
adc
ds
test
cmp
lods
loopne
shrb
inc
ja
push
mov
inc
inc
lret
mov
loope
cmp
stos
mov
jle
pop
inc
dec
in
in
jo
and
xor
add
scas
jmp
out
mov
fdiv
out
je
fld
aam
adc
sub
lret
dec
dec
pop
or
jmp
add
cmp
dec
stc
pop
data16
clc
xchg
daa
jns
inc
push
icebp
push
sub
xchg
popf
movd
test
jecxz
ret
enter
sbb
sbb
mov
xor
sbb
je
lcall
pusha
loopne
jp
pop
inc
out
mov
adc
fcmovnbe
sbb
mov
dec
out
outsb
cmp
jmp
jnp
pop
dec
push
popa
ret
inc
outsb
mov
push
scas
inc
data16
stos
addb
rclb
sub
les
ficoms
xor
xchg
push
cmp
xchg
xor
mov
imul
mov
push
mov
mov
mov
jae
sbb
rcrb
adc
or
and
div
out
fxch
cmpsb
push
hlt
imul
enter
test
aad
fidivrs
inc
and
je
push
xor
jo
pop
cwtl
cwtl
loop
ja
mov
call
scas
mov
icebp
cmp
add
adc
mov
lcall
cmp
pop
gs
mov
xor
push
jle
arpl
test
outsb
mov
cltd
mov
lods
mov
in
sbb
mov
insl
loope
mov
out
shrb
leave
fstpl
imul
fldt
cmpsl
mov
adc
pusha
test
cmpsl
sub
jl
mov
addl
jmp
sbb
jbe
xchg
je
filds
cs
mov
lds
push
ret
dec
inc
int3
xlat
insl
and
ljmp
mov
movl
cmp
pop
push
adc
dec
out
leave
mov
std
clc
mov
fs
in
lods
cmp
sbb
mov
cmp
push
dec
bt
dec
add
mov
cmp
fcompl
test
push
add
inc
xor
test
xchg
pop
inc
or
xor
and
mulb
mov
xchg
std
pop
cmpsl
aad
pop
pop
aam
testl
dec
mov
xchg
das
call
addr16
jns
mov
or
shrb
inc
movsb
xor
fdivs
jl
mov
cmpps
pop
and
scas
sbb
jne
mov
push
cmc
mov
lds
jmp
data16
dec
negl
cmpsl
or
sbb
stc
mov
lea
adc
mov
mov
push
sahf
mov
cmp
xchg
mov
pop
pop
outsl
pop
or
xchg
sti
push
stos
movsb
cwtl
mov
xchg
xchg
jne
lret
test
cltd
add
add
mov
cmp
test
jbe
enter
repnz
loopne
and
jae
mov
sbb
pusha
insb
xchg
mov
cmp
loope
scas
imul
mov
cli
push
or
dec
mov
movsl
push
dec
jle
push
loope
subl
pop
clc
and
dec
popf
into
push
enter
cmp
scas
rcr
push
sub
repz
sbb
inc
inc
js
scas
push
adc
pop
stos
push
jnp
xchg
aaa
cmp
icebp
mov
cmpsb
jo
jbe
fcoml
inc
popf
outsl
addb
jle
and
arpl
test
lahf
xor
and
mov
int
adc
sbb
lahf
mov
jmp
jecxz
mov
add
rcr
sub
mov
test
inc
lcall
inc
fidivs
inc
xchg
call
ja
ljmp
enter
out
dec
cmpsb
dec
jns
sub
cmc
add
add
mov
insb
xor
adc
inc
repnz
cmp
sub
mov
adc
cmp
shlb
int3
outsl
les
dec
loopne
lds
sbb
mov
inc
sub
push
insl
add
shlb
push
jae
mov
cmp
js
adc
sbb
mov
loopne
mov
xchg
add
push
lods
xor
adcb
jnp
lds
lods
xchg
out
dec
inc
test
filds
mov
mov
in
mov
inc
out
mov
fistps
mov
mov
imul
lds
roll
mov
sbb
outsl
ja
sub
addb
jl
mov
testb
lock
xchg
jo
orb
enter
movsl
sbb
pavgw
cmpsl
test
xor
or
aas
into
dec
pop
jle
ja
and
jno
rol
jecxz
push
jae
xchg
push
enter
int
and
xorb
int3
imul
data16
daa
inc
jns
in
push
sbb
aam
fistps
dec
add
bound
mov
lahf
arpl
gs
sub
fwait
add
rcl
adc
pusha
int3
out
idivl
mov
in
arpl
lret
pop
pushf
xor
adc
fisubs
stos
nop
loope
inc
loop
xchg
enter
add
andl
inc
pop
mov
test
in
xlat
out
pop
mov
imul
sub
push
cmp
sti
orl
push
sbb
aaa
lahf
sub
rcrb
push
adc
movsb
imul
xchg
int
call
or
pop
adc
movsb
push
data16
and
rcl
push
int3
jecxz
or
or
cmp
lret
icebp
fists
jno
jle
scas
sub
xor
sti
push
aam
inc
mov
adc
push
stc
push
test
out
rcl
and
lods
lcall
mull
or
les
xlat
mov
mov
pop
push
xlat
fisttpll
movsb
inc
mov
out
mov
push
cli
leave
jo
mov
lahf
std
add
adc
aad
pop
repz
xchg
mov
inc
cmp
data16
or
mov
cmpsl
pushf
dec
and
fneni(8087
repnz
and
jp
sub
sbb
repnz
mov
scas
xchg
int
lock
fld
pop
test
int
mov
jl
dec
lret
sbb
arpl
mov
add
daa
mov
cwtl
daa
ret
xor
mov
insl
inc
jno
repz
xchg
adc
cltd
pop
and
mov
ffreep
add
push
sti
pop
xchg
stc
push
imulb
cmpl
or
sbbl
fcmovbe
out
in
mov
icebp
push
ss
pop
mulb
pushf
cmpsb
sub
neg
push
fidivl
adc
cmp
enter
xchg
std
fsubs
pop
xchg
xor
xchg
xchg
nop
add
lds
int
pop
aaa
or
inc
in
fidivs
and
lds
mov
sarl
cwtl
sbb
add
adc
push
push
ret
xor
mov
adc
mov
xchg
push
mov
mov
adc
ds
pop
pop
pop
cmpsl
mov
dec
xlat
dec
negl
repnz
cmp
outsb
mov
enter
mov
push
and
or
inc
push
sahf
ss
dec
jns
cmpsb
push
mov
xor
jg
jle
imulb
mov
scas
xchg
loop
xchg
and
mov
movsb
push
cmc
lods
aad
xchg
sahf
dec
pop
and
mov
push
sbb
jb
rclb
lcall
lahf
loopne
into
inc
push
mov
enter
sub
adc
or
xor
leave
ljmp
dec
sbb
aas
sub
adcb
xor
divb
cmp
jne
mov
push
cli
or
repz
aad
xchg
lds
push
movswl
in
push
insb
inc
add
xlat
insl
repz
inc
dec
or
xchg
xlat
inc
jge
imulb
lods
or
pop
rolb
inc
arpl
sbb
adc
push
cltd
xchg
xchg
clc
shll
lods
push
mov
jle
call
jg
out
adc
sub
or
mov
mov
iret
gs
movsb
or
sbb
ss
add
push
outsl
mov
test
sub
mov
cmpsl
int
sahf
in
insb
fxch
scas
fistpll
cmp
gs
jo
in
loopne
lods
outsl
xor
popa
aam
inc
ja
into
mov
adc
fwait
xchg
scas
aas
or
lods
fnstsw
push
add
repz
in
lods
fwait
stc
xlat
cmp
push
cmp
leave
mov
rclb
stos
and
int3
xor
or
mov
mov
pop
cld
call
xor
fs
cmp
mov
popf
push
ror
aad
dec
dec
cli
inc
push
ja
aam
xchg
xor
mov
clc
stos
lods
scas
and
push
vprotd
adc
xchg
outsl
and
mov
add
adc
push
jecxz
ss
pop
loopne
adc
jbe
int3
ljmp
shl
ja
mov
adc
and
lock
ss
test
out
insl
sahf
xchg
mov
paddusb
xchg
push
nop
pop
data16
sub
loope
xchg
ret
mov
into
test
mov
fwait
outsb
dec
jo
daa
mov
mov
mov
gs
jmp
ficomps
nop
dec
outsb
ficomps
stos
xor
dec
mov
push
mov
adc
sub
xchg
cmc
repz
adc
call
gs
pop
push
add
pop
test
jnp
push
lock
add
pop
pushf
push
fcomps
mov
mov
mov
adc
fistpll
or
sbb
cmp
or
clc
xlat
aad
inc
shl
mov
arpl
lods
sbb
xlat
stos
sbb
xchg
sub
jl
lahf
xor
hlt
and
xlat
sub
inc
inc
jns
repz
pop
aaa
sub
add
push
stc
adc
mov
pushf
test
inc
or
cmpsl
xor
and
jae
dec
lods
test
test
jmp
andb
lahf
inc
dec
push
scas
notl
mul
cwtl
ret
lea
lds
push
add
arpl
add
scas
fsubrp
sahf
mov
cmp
std
imul
add
das
stos
pop
add
stc
sbb
sbb
nop
jmp
xor
cmpsb
pop
cmpl
jb
movsb
imul
ror
xchg
pop
fwait
lds
cmc
repz
pop
stos
scas
andl
push
xchg
jo
arpl
cmpsl
inc
shlb
int3
sbb
cmpsl
out
or
xchg
in
int
and
dec
jnp
shrl
cmp
aas
dec
aas
mov
lds
orl
das
fists
cmp
sbb
add
scas
xchg
imul
scas
out
sbb
xor
aad
je
mov
sbb
test
sub
mov
pop
cmp
mov
outsl
sar
xor
dec
iret
push
out
mov
frstor
mov
lret
xchg
dec
enter
sub
outsb
cwtl
lea
cltd
dec
leave
sarb
xor
or
icebp
jecxz
pop
ljmp
sahf
cmp
movsb
xor
in
or
popa
cmp
ret
sbb
daa
and
or
mull
icebp
fwait
push
sub
gs
out
dec
mov
pop
adc
repz
fsts
jle,pn
out
fidivs
outsb
mov
scas
mov
sbbl
test
arpl
in
cmc
or
iret
in
es
adc
pop
sub
loopne
je
outsl
jge
cli
hlt
nop
cmpsb
cmp
rcrl
mov
adc
adc
push
in
add
cwtl
cli
in
mov
or
jb
aas
popf
mov
test
cmpb
lods
dec
in
and
xor
ror
mov
mov
push
mov
fisubrl
jecxz
push
loope
xchg
fsubr
mov
movb
aad
call
xlat
pop
inc
push
aaa
push
sbb
or
dec
negl
cmp
push
or
popa
mov
jle
jp
mov
mov
dec
fnstsw
fmul
insb
lret
testb
lcall
in
mov
xchg
das
es
xor
fcomip
push
or
or
xor
pop
loop
add
leave
popf
pop
mov
dec
xlat
das
pop
adc
outsl
mov
fmulp
popa
dec
dec
push
test
mov
shl
test
push
rcll
pop
lods
xchg
pop
bound
and
mov
jp
mov
enter
xchg
cmp
ret
out
pop
jl
adc
movsl
iret
mov
iret
loopne
rol
mov
fnsave
xchg
mov
lret
sti
mov
cmp
add
sbb
icebp
push
std
inc
lods
jb
stc
xchg
push
sar
inc
pop
mov
mov
std
testb
mov
adc
jns
xor
lods
ret
shlb
xchg
mov
adc
mov
mov
xor
imul
jae
repz
jne
fisttps
adc
je
lret
cvttps2pi
xorb
xor
loopne
xchg
iret
cmp
flds
adc
lret
aas
mov
lahf
push
mov
pop
sbb
sub
jns
dec
mov
sbb
aaa
sub
loopne
jp
fdivrl
add
inc
rcrl
sbb
inc
lret
push
xchg
and
fucomip
std
adc
das
cltd
nop
sub
adc
fnstenv
repz
and
push
movsb
aad
jno
test
sbb
ret
jge
jns
or
xor
mov
in
insb
repz
cmp
loop
jle
jmp
cmp
sub
dec
rcll
nop
in
imul
jecxz
xchg
shll
xchg
dec
ja
mov
clc
idivl
pop
into
sub
xor
lea
mov
xchg
push
shrl
dec
mov
and
in
add
xchg
cmc
xor
div
or
notl
leave
mov
xchg
jp
mov
sub
xchg
imul
xchg
lret
lods
mov
lods
test
xchg
sub
sbb
or
test
ret
jo
rcrl
jmp
in
lds
lock
xor
pop
add
adc
or
dec
mov
in
insb
xlat
sub
pop
jmp
insb
pop
lret
mov
xlat
fnstcw
mov
mov
sub
enter
sub
jl
cltd
je
das
mov
jecxz
stos
cmp
clc
push
dec
imul
aad
test
push
pop
mov
les
and
dec
sbb
inc
pop
jg
mov
nop
mov
daa
mov
fiadds
in
flds
loopne
mov
lea
loope
enter
stc
mov
cltd
aam
insb
rolb
popa
and
leave
adcl
pop
jb
sbb
dec
inc
cli
adc
push
shlb
xchg
xor
jno
ret
push
scas
pop
das
or
mov
out
pop
cmp
nop
dec
sti
insb
aad
fisubrs
and
outsl
mov
int
lahf
sahf
fnsetpm(287
arpl
test
dec
pop
hlt
flds
mov
cld
dec
push
cld
push
repz
pusha
jb
pop
jns
stos
iret
jmp
pop
cmp
aad
xchg
pop
aas
adc
sub
outsl
mov
std
mov
sub
jbe
cs
fwait
mov
xor
xchg
sbb
scas
sbb
cmp
sub
sbb
cmc
lea
cmp
mov
jnp
add
pusha
inc
rorb
sbb
xchg
mov
sub
xchg
pop
hlt
movsl
push
shlb
insb
and
std
inc
aas
jg
adc
stos
lods
test
cmpsl
adcb
and
dec
xlat
pop
and
adc
mov
pop
push
jg
clc
sub
xor
mov
push
push
inc
scas
xlat
pop
fiaddl
pop
or
xlat
xor
or
pop
aam
mov
sahf
push
dec
pop
loop
scas
sbb
pop
test
xchg
stos
icebp
or
adc
mov
mov
jmp
mov
inc
pop
idivl
std
cmp
movsb
stc
movsb
mov
testl
icebp
adc
cli
adc
push
out
inc
cmc
or
clc
repnz
sahf
in
mov
insb
inc
jns
les
inc
push
out
scas
or
insl
xchg
and
test
cmc
sbb
test
sub
shl
xlat
loope
add
jne
stos
push
icebp
cmp
cmpsb
ret
mov
jp
pop
mov
lret
pop
std
ss
lea
fdivl
mov
and
mov
lea
pop
inc
arpl
mov
inc
jno
rorl
cmp
loopne
rclb
ds
fiaddl
data16
lahf
mov
xchg
or
sahf
mov
push
mov
inc
sahf
imull
loopne
decl
push
loope
push
rol
std
inc
outsl
stos
pop
jbe
enter
xor
xchg
dec
sbb
xchg
dec
gs
and
push
push
int
cmp
mov
dec
les
xchg
lds
repz
pop
loope
cmp
daa
cmp
popf
and
adc
xor
repz
daa
rclb
imul
cmp
inc
fistl
add
scas
push
cmp
fidivrs
js
inc
lret
jbe
mov
movsl
or
fwait
aas
ljmpw
sarl
jbe
sub
dec
pop
mov
dec
or
in
ret
rcl
fldenv
loop
inc
test
push
cmp
xchg
mov
ret
rclb
push
pop
in
adc
xor
mov
outsl
out
sbb
cwtl
add
inc
jnp
adc
sbb
mov
cld
add
int
rorl
pushfw
cwtl
out
lret
and
xor
out
and
lea
jmp
arpl
or
cltd
cmp
dec
add
cs
lret
xchg
pop
pop
pop
inc
add
loopne
jg
faddl
popa
mov
jge
out
ret
sub
lds
data16
jb
dec
out
mov
sbb
xor
cmp
xchg
cmp
jo
push
bound
movsb
idivl
lock
dec
aas
jns
icebp
out
push
cmc
js
push
arpl
xchg
outsl
scas
pextrw
fsubrl
pop
xor
lock
adcb
add
push
rolb
jo
pusha
add
xor
lock
adcb
add
push
rolb
jo
pusha
add
xor
lock
adc
and
push
rolb
jno
pusha
add
xor
lock
adcb
stos
or
mov
mov
mov
lahf
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
dec
sbbb
mov
jge
pop
ret
leave
dec
fcoms
ljmp
push
stos
bound
xchg
push
jp
or
sbb
sub
cmp
ljmp
push
stos
bound
xchg
push
jp
or
sbb
sub
cmp
lret
xor
push
jmp
add
icebp
cmp
push
adc
shrl
add
icebp
loopnew
std
dec
pop
pop
adc
jmp
movsl
sbb
ret
ljmp
adc
add
fwait
cld
jmp
mov
xor
pop
lret
loopne
cmpsl
je
iret
lahf
cli
jnp
bound
out
lret
jge
test
popa
in
jae
cmp
std
push
in
or
lcall
neg
ret
xchg
cmc
dec
cmp
mov
pop
fnsave
ficoml
sbb
bound
pop
push
mov
repnz
xchg
sbb
adc
daa
outsb
inc
leave
add
mov
xchg
push
jp
or
sbb
sub
cmp
lret
adc
and
xor
bound
shrl
cmp
outsl
cmpsl
jne
inc
movsb
mov
adc
add
aaa
iret
sbb
cmp
out
testl
scas
push
sahf
outsl
mov
mov
jno
push
jge
call
xor
sbb
sub
pop
xlat
dec
in
sbb
sub
cmp
lret
adc
and
xor
bound
xchg
push
jp
or
sbb
sub
cmp
lret
adc
and
xor
bound
cli
testl
mov
loopne
jmp
mov
ss
das
loopne
adc
inc
xlat
mov
sbb
jae
dec
nop
call
add
add
cmp
int
cmp
js
lock
pop
loopne
xor
sarb
xchg
mov
push
outsb
call
and
dec
lods
xchg
mov
stc
cmpb
mov
mov
fisubrs
orl
loopne
add
inc
cmc
mov
stos
rcrb
enter
std
xchg
cwtl
jnp
mov
scas
inc
pop
das
ljmp
dec
out
shrb
mov
movsb
cmpsb
int
add
jp
add
mov
add
inc
popf
mov
cmp
fcoms
xchg
sub
fdivrl
fwait
imul
testl
enter
xor
dec
jecxz
adc
cmp
loope
cmc
lods
push
cmp
lds
enter
adc
inc
cmp
xchg
jle
dec
add
mov
mov
sub
xor
lea
sbb
call
and
popa
movsb
mov
sub
cmp
fcmovnb
dec
addr16
ja
cmpsl
push
lahf
xlat
sub
mov
cmp
jmp
jge
or
jne
nop
dec
jl
in
push
adc
int
loope
rcll
fwait
sub
mov
sub
mov
pop
cmpsl
mov
pop
ficompl
add
sahf
leave
and
lods
lods
ds
movsl
imul
ljmp
in
jo
rol
popf
nop
sub
push
popf
inc
mov
loope
dec
or
shr
mov
lahf
mov
jl
push
jmp
push
jns
into
mov
push
xchg
push
jge
out
adc
into
and
adc
adc
fstpl
sarl
dec
cmpsl
divl
inc
sbb
mov
cmp
daa
loope
xchg
lahf
dec
dec
adc
mov
dec
cmp
pusha
xchg
xchg
sbb
imul
add
mov
jae
mov
int
xchg
mov
sar
fmull
sbb
inc
mov
adc
inc
out
scas
jno
dec
xchg
push
and
arpl
shrb
cmpsl
xor
fsubr
adc
mov
lret
in
imul
dec
jb
loope
push
notb
fdiv
sahf
movsb
or
sub
insb
mov
fstpt
push
insl
ss
enter
in
jns
popf
jbe
loope
dec
lret
mov
je
sub
jne
das
push
or
data16
negl
sbb
adc
jp
loope
inc
ss
push
xchg
xchg
sbb
pop
cli
sbb
or
adc
icebp
cmpl
stos
mov
stos
lock
not
popa
test
out
decb
out
testb
mov
jnp
mov
aam
enter
ret
jb
int
cmpsb
push
adc
js
fnstcw
and
int
pop
xor
inc
jno
xlat
jle
ficomps
dec
inc
pop
sbb
mov
rcr
jp
pop
fs
test
mov
push
into
stos
enter
lods
cmp
cld
mov
pusha
dec
out
cmpsl
add
sbb
fidivl
std
lds
imul
xchg
pop
push
sub
fimuls
rolb
ja
or
or
push
xor
add
lcall
addr16
mov
jbe
sarb
insb
in
sbb
add
mov
pop
dec
arpl
adc
das
rclb
icebp
push
leave
ja
test
sbb
outsb
lcall
mov
push
or
in
pop
test
cmp
dec
nop
stos
ja
mov
xor
inc
incb
mov
inc
sarb
pop
jecxz
inc
fdivl
test
popa
aam
lea
sbb
out
fadd
imul
repz
sub
add
fimull
in
rol
mov
jae
mov
or
imulb
insl
cld
fisttps
add
push
lret
lret
pusha
enter
rclb
out
mov
lret
add
xor
movsb
adc
mov
jne
push
cmp
dec
aaa
lret
mov
push
jae
pmaxsw
mov
xor
mov
lea
or
jle
or
aas
fildl
xchg
lods
repnz
xor
push
ds
aaa
dec
cmp
xor
cld
insb
lret
pop
or
jp
repz
out
dec
jo
fucomp
pusha
jge
out
outsb
in
inc
pop
cltd
hlt
mov
movsl
sbb
loopne
dec
cli
xchg
addr16
mov
add
sub
lret
mov
fldt
dec
dec
push
jbe
mov
or
aam
orl
mov
rcrl
or
jnp
xor
mov
pop
pop
leave
xchg
je
stos
aas
fdivl
xor
out
ret
sub
adc
add
mulb
lea
dec
cwtd
leave
dec
xor
or
mov
sarl
sub
cmpb
movsb
push
int
outsb
inc
ljmp
sub
jbe
adc
sbb
fcoml
scas
sbb
add
test
sahf
mov
enter
aaa
movsl
das
loope
mov
push
pop
add
and
mov
cwtl
push
sub
cmp
sbb
xchg
cmp
js
cld
loope
jns
and
pop
or
pop
daa
addr16
stos
cmpb
add
or
xchg
incl
adc
les
daa
adc
xorl
sbb
mov
sbb
xchg
std
jp
loope
or
fstps
xchg
cs
cwtl
movsl
jmp
shl
push
cmp
popa
mov
hlt
shll
xchg
out
push
push
push
rcll
inc
and
ret
adc
fsts
je
add
mov
inc
nop
adc
lock
and
test
hlt
data16
daa
jle
in
dec
add
std
mov
xchg
imul
mov
adc
test
push
enter
xchg
out
adc
mov
rorb
inc
jp
xchg
outsl
xchg
jg
imul
in
js
fsub
call
inc
in
pop
mov
notb
shll
int3
push
sti
push
sbb
pop
shlb
aad
ds
es
xor
add
cmp
dec
sub
pop
mov
and
push
mov
jecxz
mov
mov
pop
in
ds
loope
dec
imul
dec
jb
xchg
xchg
push
stos
mov
jo
add
jno
inc
std
sbb
fwait
ror
sub
push
shrl
sbbl
add
dec
inc
orb
and
push
push
cmp
in
outsl
xor
or
push
mov
and
rcl
cmp
sbb
mov
nop
lcall
push
js
mov
mov
mov
jp
xor
test
push
push
out
xchg
gs
inc
and
xchg
dec
hlt
insl
rcrl
daa
sbb
push
push
outsb
movsb
jl
mov
addb
jne
sbbl
pop
xor
loope
fistpll
cmpsl
cli
jnp
gs
shll
jmp
push
dec
stos
subl
sbb
cmp
int
add
or
cltd
loopne
sub
outsb
dec
fsubrl
push
ret
xchg
lock
inc
sahf
es
sub
sub
nop
or
out
imul
xor
or
aas
test
pop
inc
adc
shrb
xchg
dec
stos
adc
data16
jbe
push
loopne
test
cmpsl
lods
or
dec
push
mov
shrl
or
scas
xor
lea
jnp
shr
out
xchg
clc
rclb
lahf
roll
add
inc
in
ja
stos
aad
or
iret
movsl
and
ret
lcall
ja
pop
push
mov
push
ljmp
mov
mov
sub
daa
cmc
hlt
adc
jg
icebp
jmp
pop
pop
jmp
aad
out
xor
inc
das
mov
add
push
divps
les
jbe
ret
xor
push
xor
aam
sub
jbe
jbe
sub
push
out
pop
aas
aam
call
out
or
pop
scas
jp
dec
and
fstpl
stc
xchg
adc
jg
xchg
push
cmp
xchg
mov
cld
mov
cmp
jae
lcall
add
movsb
imull
in
xchg
in
lds
and
into
push
push
lcall
aas
sub
dec
loope
push
inc
and
test
xchg
adc
jecxz
in
pop
out
push
sub
xchg
mov
push
and
pusha
fisubs
lret
pushf
fldenv
mov
jb
xlat
sbb
pushf
decl
fdivr
jno
mov
pushf
xchg
mov
hlt
inc
sub
popa
pop
or
shrl
inc
rorb
cmp
ds
cmp
pop
mov
inc
mov
jp
sbb
sti
pushf
push
xor
test
int
in
in
les
loope
add
fidivl
ret
jne
mov
daa
cmp
into
add
pop
cmp
fadds
idivl
leave
pop
leave
test
lret
jnp
fsub
and
insl
mov
sub
dec
dec
push
movaps
adc
dec
xlat
popf
das
or
popa
adc
xchg
ss
push
mov
jecxz
test
std
icebp
scas
jge
cmp
add
mov
and
jp
cmpsb
enter
jg
jmp
mov
or
push
xor
lods
adc
pop
push
es
cmpsb
pushf
push
addr16
mov
mov
lcall
push
adc
sub
pop
rcll
mov
fmull
pop
mov
insl
nop
push
orl
mov
jo
inc
jge
pusha
ficoms
into
adc
inc
lods
out
xor
lahf
js
inc
mov
fdivl
fcmovbe
xor
std
inc
mov
jp
add
stos
pop
xor
xchg
mov
test
mov
hlt
jp
jl
lea
inc
adc
or
xchg
cmpsl
cmpsl
roll
test
adc
and
xchg
pop
mov
sub
sbb
in
insl
inc
in
int3
xchg
scas
pop
in
aaa
push
lods
fimuls
cmpsl
and
cmp
push
sbb
dec
cmp
popf
or
inc
clc
xlat
aas
roll
jle
negl
mov
sub
add
loop
jecxz
jecxz
pop
cwtl
stos
jne
jne
popa
dec
add
dec
por
leave
dec
movsl
pop
cs
pop
loopne
add
aam
or
adc
mov
pop
ret
sbb
jo
bound
jle
mov
ret
fimuls
lock
rcrl
mov
std
cmp
jecxz
mov
add
inc
into
mov
lcall
rcll
inc
int
push
lock
jae
xor
mov
dec
mov
push
mov
ds
pop
jge
push
sbb
out
jo
pushf
ljmp
in
mov
test
insl
inc
jb
adc
popa
jne
lods
mov
lret
mov
movsl
movsb
add
stos
adc
jl
sub
and
sub
cmp
mov
push
xor
cmp
ret
clc
scas
push
cmp
fucomip
mov
frstor
inc
out
andb
rcrb
pop
lcall
out
iret
pushf
jecxz
rol
sub
and
cwtl
adc
mov
mov
adc
mov
gs
push
mov
inc
cmpsb
add
lret
movb
outsl
loope
cs
int
add
and
push
pop
pop
shlb
mov
std
push
jbe
ror
mov
push
fucom
xor
pop
pop
sub
and
pusha
sbbl
repnz
roll
je
lea
xchg
push
xchg
pusha
jns
lock
sbb
dec
jbe
pop
ficomps
insl
and
dec
je
bndldx
into
mov
test
ficoms
adc
dec
pop
iret
jae
enter
mov
aam
ljmp
cld
es
jp
clc
loope
adc
fmulp
fld1
add
call
mov
dec
ret
ret
int
popa
sub
outsl
data16
in
or
lea
mov
popa
out
or
lea
pusha
imulb
sbb
mov
jns
xor
test
cmp
jo
mov
imul
jns
xor
cmp
mov
pop
adc
jecxz
shl
inc
movaps
in
addr16
cmp
jbe
nop
pop
mov
mov
xor
fiadds
orl
outsb
aas
fbstp
inc
xchg
sub
sbb
or
or
enter
inc
in
inc
push
sarl
xor
dec
test
pop
ja
jnp
dec
xor
bound
xchg
or
rcll
push
int3
shll
es
inc
cld
adc
in
test
es
mov
cmp
mov
in
add
xor
out
int
sbb
mov
inc
scas
push
jb
popf
and
std
or
cmp
fnstenv
in
outsb
or
in
mov
cmp
stc
dec
int3
pop
mov
rclb
testl
sbb
cmp
xchg
sbb
fisttpl
push
icebp
out
scas
fdivl
int3
pop
sahf
ljmp
push
mov
enter
jle
push
cmp
jae
inc
aam
cltd
in
xor
mov
mov
fs
jp
rcrl
sub
mov
cmp
je
add
cmpsl
mov
iret
dec
mov
arpl
lea
int
test
lods
popf
divl
roll
push
dec
loope
dec
shll
gs
jecxz
push
out
inc
cmp
cmpl
adc
cmp
mov
sbb
addr16
sbb
ror
xlat
and
or
cmp
mov
add
test
imul
vcmpss
sbbl
mov
or
scas
xchg
scas
fstps
popf
out
xor
test
rorl
jno
sbb
enter
xor
sti
or
popf
dec
sub
stos
ja
or
iret
lds
imul
loop
push
mov
push
loop
scas
and
scas
mov
testl
dec
fs
gs
xor
js
mov
push
push
pop
lds
xor
or
andl
call
and
mov
mov
je
stos
and
in
fwait
xchg
adc
pop
adc
pushf
mov
inc
cmp
adc
adc
jge
cld
push
sbb
lock
push
movsb
aas
ficompl
adc
shl
add
mov
mov
xchg
sub
pop
es
pop
push
adc
adc
cmp
add
ja
adc
adc
lock
jo
in
cmp
push
aas
push
pop
stos
jns
loop
add
push
fsubl
mul
mov
add
roll
je
cmp
insl
idivb
or
mov
add
in
jo
movsb
sub
pop
sub
lds
cmp
enter
dec
pusha
rorb
or
inc
jl
lret
mov
stos
jmp
ss
lcall
jmp
fisttpl
lock
dec
scas
cmpb
xchg
and
sbb
repz
int3
mov
sahf
xor
addr16
lret
in
add
adcb
cmpsl
sbb
jnp
pop
or
test
in
inc
insl
mov
cwtl
jecxz
cli
lcall
stos
in
sub
arpl
movsl
loope
pop
hlt
fstpt
sub
dec
and
cld
xor
add
mov
ret
sub
sub
lret
adc
sbb
jb
pop
or
nop
and
cmp
cli
dec
adc
imul
dec
push
test
aaa
pusha
leave
push
imul
inc
lods
lret
aaa
inc
mov
daa
cmpsl
std
sahf
int
call
loopne
icebp
aad
cmp
push
inc
push
and
scas
jnp
push
sub
mov
loope
pop
or
cmpsb
jmp
mov
push
mov
gs
add
xchg
sub
jns
in
mov
js
or
and
outsb
sub
jmp
movsb
mov
jnp
mov
jo
into
gs
je
jns
test
imul
mov
inc
lods
inc
es
push
pop
push
fdivl
and
bound
insb
hlt
addr16
xchg
mov
jnp
loope
stos
inc
popf
pop
sub
mov
inc
push
call
mov
test
cmc
pop
test
sub
mov
pop
mov
pop
and
mov
sbb
test
fcompl
lds
mov
stos
cwtl
ret
jg
ja
push
pusha
loopne
clc
and
inc
mov
mov
adc
stos
pop
cld
push
xchg
mov
jge
mov
xchg
inc
sub
jl
loopne
int
cmpl
push
and
into
pop
neg
mov
data16
jae
jmp
push
sbbb
jle
fs
filds
adc
jecxz
push
dec
gs
pop
jnp
jl
int3
inc
dec
sti
ret
xor
dec
xadd
loop
sub
cmp
xor
imul
cmp
jmp
insl
data16
arpl
testl
add
mov
ja
inc
in
push
add
mov
xlat
jg
lock
xchg
or
jbe
mov
pop
cmp
ja
inc
and
negl
xchg
ljmp
xchg
js
data16
int
push
sbb
sub
push
ljmp
pop
ljmp
aaa
out
in
sub
jp
xor
inc
out
es
test
test
cwtl
std
xchg
fsubs
mov
mov
out
sbb
and
ds
mov
dec
addr16
imul
add
rcr
aam
pop
mov
je
add
aam
jne
cmp
or
lcall
mov
aas
js
mov
ss
sbb
xchg
aaa
dec
push
mov
sbb
dec
inc
psubq
mov
push
shrl
addl
sub
cmp
fucom
mov
mov
pushf
or
loop
nop
cmp
or
sub
mov
mov
sarb
sbb
cmp
add
jmp
cld
and
test
outsb
rorl
std
outsl
inc
pop
push
pop
or
aaa
cmp
and
dec
stc
int
xchg
ds
aad
mov
in
addr16
imul
dec
inc
lret
bound
sub
adc
into
sti
jmp
or
aam
fst
xlat
movsb
sub
pop
ds
mov
into
xor
sarl
and
pop
enter
dec
imul
popf
jmp
mov
and
clc
aas
js
mov
push
aad
mov
pop
into
push
stos
fcomps
jle
push
aaa
mov
add
push
pop
das
pop
call
orb
xchg
pusha
xor
mov
repnz
sahf
outsb
ds
add
xor
cltd
cmp
xchg
fimuls
pushw
lds
out
ds
xchg
aas
cld
fs
sub
call
sub
adc
sbb
stos
mov
mov
pop
jnp
in
mov
add
or
mov
dec
test
cltd
ljmp
inc
mov
out
call
call
xor
stos
mov
inc
fists
mov
bswap
cmpsl
and
pusha
add
and
fbstp
jnp
jns
nop
mov
xchg
or
lea
clc
out
loope
inc
cmc
sbb
push
hlt
leave
cmp
leave
dec
fldenv
mov
faddl
jl
jmp
hlt
dec
shlb
cs
sub
mov
push
jne
rcrl
lods
jne
imul
mov
jecxz
inc
xchg
and
adc
fnsave
push
mov
sbb
stos
pusha
fyl2x
mov
or
mov
ret
add
cltd
les
movsl
lcall
push
insb
imul
imul
dec
inc
insl
mov
js
std
stc
cmpsl
push
mov
xor
xor
add
push
push
xor
into
hlt
sbbl
fdivrp
mov
jp
mov
cmp
fldl2e
movsb
cmpsb
movsb
shll
enter
stos
xchg
xchg
in
adc
sbb
cmp
repnz
or
lcall
jmp
add
movsb
dec
push
cwtl
push
imul
dec
mov
cli
jl
inc
dec
in
jecxz
stos
mov
insb
fadd
ficoml
popf
xchg
addr16
inc
jp
call
sbb
and
or
or
test
and
cmc
fstpl
je
xor
inc
into
push
add
lock
sub
or
out
push
leave
or
push
ret
outsl
mov
xor
or
mul
out
xor
xor
aas
jmp
insl
iret
subl
xchg
test
fsubs
push
mov
sbb
sub
cmp
lret
adc
and
xor
bound
xchg
push
jp
or
sbb
sub
cmp
lret
adc
and
xor
bound
xchg
push
jp
or
sbb
sub
cmp
lret
add
adc
and
xor
bound
xchg
push
jp
or
sbb
stos
loop
repnz
and
inc
std
lret
push
popf
inc
lea
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
dec
rcrb
loopne
lock
leave
pop
mov
jne
push
jmp
sti
pusha
mov
fwait
lahf
stos
and
shrb
jnp
or
cmp
lret
dec
fistl
pusha
sti
jo
jb
adc
fstps
imul
call
sub
sbb
add
in
aad
add
xchg
dec
dec
sbb
inc
rcrb
add
add
mov
rol
pop
sahf
jmp
lahf
arpl
pop
int
cmp
xor
je
mov
rolb
mov
sarb
push
or
mov
lret
inc
mov
adc
xchg
sub
jnp
push
sahf
pop
das
sbb
orb
aad
push
xor
data16
jne
repz
stos
fistpll
das
add
inc
test
test
fcomp
mov
jb
push
add
mov
aas
arpl
or
xor
fwait
sub
mov
lcall
xlat
pop
shrb
lock
cmp
jmp
sti
imul
shlb
push
test
xchg
adcb
int3
jp
mov
fists
fs
adc
out
dec
out
pop
dec
test
push
lahf
dec
xorb
aam
subb
mov
adc
inc
mov
rolb
test
or
cmp
jmp
sti
jo
add
xor
pop
shrb
jnp
or
cmp
jmp
sti
jo
add
xor
inc
shlb
repnz
in
pop
and
inc
mov
lcall
fsub
cwtl
movsl
cmpsl
loop
repz
dec
ret
or
jge
xchg
aas
xchg
xor
add
rcrb
nop
pop
int
push
inc
xorb
sahf
inc
add
push
jmp
ret
sub
lods
mov
fmuls
mov
mov
and
add
js
pusha
repnz
push
cltd
or
mov
xchg
pusha
add
mov
aad
cmp
fmuls
leave
std
xchg
in
aaa
lahf
outsb
mov
xchg
stc
addr16
pop
popa
dec
aaa
ret
decb
push
stos
xchg
and
inc
insb
test
add
test
subb
mov
into
mov
adc
fidivrs
xor
dec
adc
mov
mov
sbb
push
mov
ficompl
into
add
xlat
fwait
mov
pop
and
loopne
and
and
lret
enter
dec
pusha
xrelease
cmp
mov
and
add
std
dec
and
inc
fs
outsl
pop
fwait
mov
xchg
stc
jmp
sub
sbb
aas
add
repz
js
mov
movsl
jae
xchg
shl
inc
xor
rcll
push
ss
loopne
es
aam
jl
scas
xchg
addb
xchg
pushw
fbstp
dec
mov
out
roll
pop
jge
mov
int
test
jae
inc
ljmp
addr16
push
mov
mov
xor
jno
jo
add
int3
jno
cld
repnz
adc
adc
in
cmp
sbb
jecxz
lods
xorb
add
jae
dec
cli
mov
mov
and
lret
lea
mov
jbe
lods
adc
push
int3
loop
int3
notb
icebp
out
inc
hlt
pop
mul
push
and
jge
push
fwait
roll
add
popf
xor
sub
pushf
jmp
push
cwtl
enter
jo
fisubrs
adc
push
mov
or
inc
ljmp
cs
push
test
inc
sub
inc
arpl
fadd
in
dec
sti
jge
cmp
or
pop
xor
lods
dec
sti
pop
or
inc
adc
jle
iret
jb
ja
pop
mull
sbb
out
cli
fsts
addr16
dec
out
mov
jg
mov
xor
ja
mov
cmc
jns
stos
fsubrl
xor
adc
push
shrl
faddl
nop
adc
fwait
xchg
sbb
mov
insl
inc
jb
fcoms
lock
cmp
aas
aas
push
add
push
jge
lods
rcrb
test
mov
mov
dec
and
push
fnstcw
rolb
lods
gs
sub
rclb
adc
rolb
jmp
or
aam
stos
mov
sub
sbbb
arpl
sbb
inc
inc
xchg
sbb
xchg
and
mov
pop
stos
cmpsb
push
add
push
loope
in
lahf
cltd
dec
dec
mov
push
dec
pop
stos
lock
call
mov
das
sti
xchg
sbb
mov
mov
insb
fs
and
add
lea
lock
sbb
push
and
pusha
mov
scas
in
lods
jb
orb
test
inc
movsb
into
or
stos
je
fstps
xchg
inc
jle
push
push
out
lock
or
add
lds
cmp
aam
xchg
cwtl
push
and
ljmp
dec
jne
aas
ret
jmp
repz
cwtl
xchg
sbb
dec
xor
jbe
js
ret
adc
sub
leave
sbb
mulb
mov
in
and
inc
adc
shrl
cmp
inc
push
jo
add
enter
dec
dec
adc
outsb
addr16
int
add
xor
xchg
sbbl
push
das
pop
xchg
dec
or
andb
mov
pop
add
cmc
into
rolb
mov
sbb
mov
sub
test
leave
rorb
cmp
aas
test
mov
js
lcall
fadd
lods
inc
xor
fs
aam
in
inc
fs
hlt
inc
adc
ljmp
shll
jge
loopne
adc
fisttpl
lahf
stos
cmc
dec
ljmp
push
add
pushf
xchg
inc
imul
or
sub
idivb
xchg
mov
sbb
int
push
push
push
jg
adc
lret
jle
push
gs
and
out
or
rcl
push
out
sub
xor
adc
cmp
ljmp
push
mov
pop
in
inc
cltd
insl
sbb
lahf
test
xchg
mov
mov
outsb
imul
negb
xor
jne
ret
pop
cmp
xor
xchg
mov
stos
dec
inc
sti
or
xor
lock
sbb
mov
add
push
shrl
sbb
outsb
aas
and
xchg
in
xchg
xchg
xor
sarb
in
shlb
add
mov
cmpsl
stc
and
cs
sbbb
addr16
push
std
sub
xacquire
inc
sbbl
call
lea
movsb
pop
push
cmp
cmp
mov
add
or
ret
lea
iret
orb
sti
mov
xor
mov
xor
push
mov
add
ja
outsl
test
or
pop
mov
adc
sbb
inc
xchg
lret
lock
nop
es
nop
mov
jne
xchg
addb
push
movsl
add
imul
and
add
jne
aam
mov
in
sub
dec
aad
lods
push
insl
ljmp
or
in
lcall
lret
call
inc
inc
jbe
xchg
in
arpl
rorb
dec
pop
flds
cmpsb
test
pop
pop
subl
mov
and
mov
pusha
rorb
adc
fld
out
jge
cmp
das
mov
sub
cli
notb
rcll
call
loope
jge
insb
ja,pt
pop
andl
sti
xchg
sub
icebp
cmp
jo
movsl
test
insb
add
jnp
popa
xchg
mov
dec
add
loop
loope
mov
mov
add
jmp
mov
inc
dec
loop
mov
pop
loopne
inc
aad
hlt
mov
rol
test
imul
cld
dec
pusha
ret
mov
cwtl
cli
daa
jle
aas
test
dec
or
clc
das
jns
shll
xor
sbb
xchg
dec
mov
cmp
dec
adc
push
and
fsubl
mov
lods
mov
aaa
les
mov
add
filds
xchg
and
ficomps
jno
inc
adcl
enter
fwait
pusha
push
in
mov
lahf
shll
pop
enter
and
xchg
pop
and
adc
fsubl
lcall
cmp
xchg
lock
lock
fstl
jmp
nop
enter
popf
call
les
dec
jns
movb
mov
adc
dec
mov
cmp
scas
inc
scas
cmp
and
adc
adc
pop
mov
shrb
stos
fs
loop
leave
mov
mov
sbb
cmpsl
filds
aaa
mov
mov
xchg
fcoms
mov
in
mov
and
jno
dec
in
push
xchg
insl
lods
test
push
cmp
sub
imul
pop
sub
mov
jle
or
jmp
cld
ret
add
loope
icebp
inc
mov
sub
outsb
or
les
adc
mov
xchg
fisubl
arpl
sbb
fwait
inc
and
ffree
inc
fdivs
lret
sub
iret
data16
daa
aad
jns
push
psllw
adc
jns
push
cmpsb
push
jne
add
xchg
sti
fldt
sbb
jg
imul
call
mov
mov
or
stc
xchg
pop
fldenv
pushf
adc
andl
test
js
xchg
dec
ret
mov
dec
mov
and
adc
jne
mov
mov
xchg
add
int3
lock
add
les
sbb
dec
inc
daa
inc
dec
ja
leave
xchg
insl
or
sbb
and
xchg
in
fstpl
gs
je
sub
ret
adc
adc
push
jo
aad
push
fcomip
ljmp
arpl
inc
scas
pop
out
aas
cwtl
lcall
dec
vmread
jp
adc
sub
shll
push
jno
inc
add
js
sarl
jg
jl
popf
and
mov
movsl
out
jbe
xchg
cmp
orb
mov
dec
mov
adcb
fcomps
add
inc
xchg
lods
inc
rolb
cs
mov
popa
xchg
mov
into
jb
and
insl
cs
movsb
int3
lret
mov
in
mov
sar
sub
sub
mov
sbb
inc
mov
push
fnstsw
clc
or
push
ljmp
frstor
stos
push
es
inc
sub
push
jg
fdivp
add
mov
sbb
dec
sbb
fmul
dec
lds
pop
and
pop
jnp
fistl
mov
cltd
push
mov
mov
xchg
adc
sub
dec
in
inc
push
dec
mov
push
lret
xor
aad
test
int3
inc
xchg
push
cli
testl
mov
mov
aaa
mov
icebp
ljmp
fiadds
mov
in
es
fs
pop
mov
add
js
cltd
mov
call
add
out
push
enter
push
lods
pop
pushf
negl
inc
or
rolb
push
mov
xchg
rorb
mov
or
mov
ds
adc
mov
sub
xchg
xchg
cld
cmp
or
and
mov
inc
lods
inc
add
in
iret
mov
mov
mov
push
sbb
mov
push
or
in
or
xchg
pop
mov
out
nop
dec
insb
sub
xor
xor
push
push
jmp
sbb
xchg
dec
jecxz
popl
dec
sub
movsb
mov
sbb
ret
or
cmc
ror
xchg
sahf
pop
fstl
jne
inc
ret
cmp
add
sbb
cld
pop
mov
or
or
xor
scas
rcrb
sub
push
pop
test
imul
inc
mov
pop
jmp
stos
lret
dec
sarl
or
out
incb
and
jno
in
mov
mov
into
cmp
mov
in
outsb
std
pusha
scas
incl
mov
sub
or
sbb
cmp
aad
sarl
jle
out
mov
pop
adc
sub
mov
out
stos
lahf
loopw
mov
push
cld
loopne
aad
pop
pop
push
pushf
sahf
and
dec
dec
aaa
xchg
stos
cmc
pop
mov
daa
sbb
shrl
sbb
iret
jno
addr16
clc
sbb
add
fisttps
test
inc
and
cmc
out
dec
popw
push
mov
or
add
cmpsb
loopne
push
xor
mov
js
xor
ss
xchg
push
fwait
mov
fs
push
shrb
inc
gs
cmpsb
pop
xor
xchg
ja
or
loope
mov
dec
cld
ljmp
clc
int3
cli
cs
fbld
mov
dec
xchg
std
pop
add
ljmp
fwait
cli
pop
xor
mov
rorb
fdivrl
push
out
push
push
mov
cmpb
rorl
movsl
xor
mov
sub
jmp
test
push
xchg
das
das
je
push
arpl
push
cmp
jne
inc
jmp
into
mov
pop
imul
mov
stos
lods
outsb
pop
and
dec
mov
dec
mov
gs
in
mov
pop
cltd
jle
xchg
test
bswap
aad
push
ror
cmp
pop
add
addr16
sbb
inc
stos
push
cmp
jnp
insl
jno
cli
pop
add
push
ja
scas
pop
cmp
imul
add
dec
insb
xrelease
lcall
arpl
pop
out
push
mov
shlb
pop
sbb
repnz
lock
jg
pusha
aas
insl
and
add
or
or
cmc
jo
push
xor
out
cli
out
mov
xor
int
xorl
xlat
pop
in
inc
aad
shll
into
lret
cmp
inc
and
aam
pop
aam
nop
popa
mov
movsl
and
jg
roll
mov
fcoms
jne
and
fistl
test
push
mov
fisttpll
and
out
cld
test
mov
fs
or
sub
cmp
mov
push
movsl
push
pop
das
mov
sbb
bound
pushf
xlat
pop
jo
dec
clc
ret
add
xchg
jo
imul
adc
dec
push
xchg
lock
mov
out
inc
xchg
sahf
lcall
xchg
imul
lods
movsl
test
arpl
and
in
or
add
jmp
xor
inc
or
aad
scas
shrl
xchg
mov
xlat
iret
decb
pop
pushf
pop
cs
negl
into
inc
xchg
cmp
jae
loopne
mov
jb
pop
add
lret
data16
cmp
movsb
and
test
jmp
mov
xchg
inc
stc
aad
mulb
xor
test
adc
jns
ret
adc
jo
movsb
mov
xor
cmp
aad
fistpl
inc
mov
popa
mov
sti
jmp
add
adc
je
mov
pop
test
jge
push
xorl
mov
aam
push
xor
jg
or
jge
inc
sbb
movsl
and
repnz
arpl
xchg
xchg
mov
aaa
push
mov
push
out
add
scas
jnp
movsb
push
popf
xchg
lret
dec
jle
sbb
mov
ja
and
jecxz
inc
sbb
ret
lea
and
push
and
jae
cld
and
xchg
adc
cmp
lahf
lock
mov
fldcw
daa
outsl
dec
mov
arpl
cld
push
push
xchg
andb
jecxz
into
roll
mov
pop
jp
mov
das
aaa
add
sbb
das
call
lods
push
inc
adc
lods
test
and
movsl
lret
lcall
inc
popf
fcompl
insl
das
mov
fs
aam
lret
rcrb
xor
jns
in
jmp
sbb
adc
mov
jle
push
pop
push
or
and
cmc
andl
push
xor
in
mov
mov
jno
clc
and
push
and
add
mov
hlt
jo
imul
jmp
fs
dec
ret
call
das
or
scas
lds
pmullw
sbb
and
popa
push
add
mov
push
out
xor
dec
push
mov
mov
cmpsb
or
loopw
in
jae
sub
mov
nop
rcrb
fs
movsl
inc
dec
int3
enter
sbb
push
xchg
imul
jns
test
xor
sbb
fnstenv
sub
test
pusha
jns
cltd
push
dec
out
add
cmpsl
inc
mov
xor
xorl
adc
imul
sub
imul
and
jmp
shlb
not
cltd
mov
jno
pop
xor
test
divb
add
fsubs
mov
and
lods
fdivs
cmc
sbb
and
lds
ret
dec
fldcw
mov
mov
imul
pop
mov
nop
in
jno
lret
pop
ds
pusha
dec
out
push
xchg
pop
rclb
mov
cmp
push
sbb
cmp
jns
and
mov
inc
into
pop
and
mov
test
mov
cmp
add
cmp
push
ja
lods
mov
sub
xlat
loopne
iret
movsb
xchg
out
pop
pusha
jb
lods
cwtl
imul
cmp
or
xchg
or
cmpsb
inc
inc
add
adc
dec
inc
insl
mov
out
and
rcr
mov
push
call
mov
rcrb
sub
les
mov
ja
test
sti
gs
aam
adc
mov
pop
pop
mov
mov
in
pop
mov
sub
xor
out
mov
das
cld
lods
int3
dec
pop
outsl
jge
je
out
daa
data16
adc
mov
test
mov
pop
cmp
mov
and
push
int
outsb
add
lret
jecxz
pop
movsb
xlat
sbb
outsb
nop
or
cmp
pop
data16
pop
inc
inc
in
or
mov
ss
inc
inc
dec
popa
sbb
out
inc
enter
inc
inc
add
dec
es
popa
shl
lods
xor
add
inc
push
adc
in
sub
loop
bound
mov
and
inc
xor
aas
mov
out
mov
jl
mov
stos
stos
push
jns
ds
or
fcmovb
inc
cltd
adc
rorl
dec
push
insb
shlb
loopne
inc
enter
ret
and
lock
mov
or
mov
or
dec
xchg
outsl
jae
popf
xor
jmp
lods
xor
mov
lea
insb
cmp
lret
sahf
insl
dec
test
mov
lods
sbb
sbb
out
xchg
jmp
xchg
rcll
das
sbb
pop
nop
in
pop
inc
add
push
cld
movsl
lea
add
outsl
jle
shrb
inc
xchg
jae
ss
mov
jmp
xchg
aad
hlt
ds
js
lock
pop
cli
xchg
into
dec
cmpsl
adc
mov
pusha
jae
hlt
and
jmp
pop
popa
dec
adc
icebp
sbb
int3
or
xorl
out
addl
jne
add
dec
insl
int3
pop
jbe
xor
mov
mov
or
add
insb
jg
lahf
mov
add
cmp
inc
lock
mov
fistl
scas
imul
shll
cli
sbb
neg
pop
jo
imul
ss
subl
call
cwtl
dec
jbe
mov
xorl
cmp
fnstcw
ret
bnd
mov
out
jmp
xchg
inc
rclb
push
cmp
inc
mov
jae
es
nop
and
pushf
add
pop
lret
and
cmpsl
cmp
jge
cmpb
sbb
sahf
loope
dec
xchg
xchg
push
inc
fdivs
daa
dec
ret
scas
jl
dec
outsl
mov
mov
dec
sbb
test
test
mov
cs
fstpl
flds
sub
pop
push
lods
cmp
mov
xor
sub
inc
mov
cmp
dec
push
fwait
dec
inc
push
bswap
xchg
hlt
mov
sbb
push
or
mov
jmp
fldenv
xchg
dec
xor
push
pop
mov
out
test
mov
inc
xor
xchg
es
les
inc
jge
mov
xor
outsb
es
jl
xchg
jb
dec
mull
xchg
clc
xchg
jmp
fcmove
xor
shlb
sahf
xchg
ss
xorl
xor
cmc
int
mov
orl
rol
fdivr
cmp
shl
fbstp
sub
scas
lcall
movsb
mov
sbb
cmp
mov
dec
xchg
lcall
loop
scas
pushf
mov
mov
in
adc
testl
out
ret
enter
mov
ret
in
leave
jecxz
leave
jns
inc
xchg
or
mov
jno
std
shll
jge
addr16
jno
mov
addb
and
or
xor
inc
and
mov
fld
inc
sbbl
sbb
sti
fcmovnu
movsb
and
jbe
mov
mov
and
or
cmpsb
mov
in
sub
adc
aad
inc
xor
in
sub
lahf
and
inc
pop
jge
mov
mov
jmp
add
sub
xchg
adc
in
out
movsl
pop
lds
mov
repz
jne
les
and
sbb
mov
clc
test
mov
stos
aas
loope
nop
in
push
test
mov
add
jmp
or
test
jle
pushf
insb
mov
fsubs
jbe
es
sarb
ror
repnz
imull
mov
stos
jle
xchg
add
inc
dec
je
das
mov
push
mov
lods
jbe
lahf
mov
into
nop
stc
add
stos
icebp
xor
xor
cmpsl
sarb
pop
shlb
loopne
lock
cmp
jmp
sti
jo
add
xor
pop
shrb
jnp
or
cmp
jmp
sti
jo
add
xor
pop
shrb
jnp
or
cmp
jmp
sti
je
add
xor
les
imul
lock
cmp
inc
inc
pusha
sti
pop
cld
mov
outsl
push
pop
inc
dec
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
