jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
enter
pop
mov
dec
add
dec
mov
pop
add
push
add
add
add
cmp
xor
add
add
add
add
ljmp
add
add
add
add
das
add
or
add
add
add
add
add
add
add
add
add
movsl
add
add
add
push
add
add
add
add
cmp
and
push
add
add
add
cwtl
add
add
add
add
xor
cwtl
add
add
int
push
add
add
add
add
add
push
add
add
add
add
popf
add
faddl
test
adc
or
add
add
add
add
add
add
inc
add
incl
test
sub
inc
add
add
add
push
add
test
in
add
add
add
add
add
pop
add
add
mov
add
add
add
xor
cwtl
add
add
add
add
add
add
imul
dec
add
add
bound
xor
xchg
add
add
add
cwtl
add
or
push
add
bound
push
add
pop
add
add
add
arpl
fadds
loop
add
add
movsl
add
add
test
sub
pop
add
push
add
add
add
dec
add
add
add
add
loop
bound
mov
add
add
add
add
adc
lret
add
add
add
xchg
add
add
add
add
and
push
add
jae
xchg
add
sub
xchg
add
add
add
str
add
arpl
cwtl
add
add
add
xchg
add
add
add
mov
jl
mov
lods
or
add
add
add
add
add
add
and
cwtl
add
add
int
cwtl
add
add
add
add
and
add
cwtl
add
add
add
add
xor
add
add
insb
add
add
add
push
add
add
add
add
popl
sbb
add
add
add
pop
add
or
add
add
add
push
add
lods
or
out
leave
add
add
mov
add
outsl
add
pop
add
and
popa
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
mov
bound
push
add
add
add
add
add
jbe
and
jo
cwtl
add
add
add
add
add
add
add
add
push
add
add
and
stos
add
add
add
add
or
out
aas
add
add
push
add
mov
add
add
xor
push
add
add
add
push
add
jae
mov
add
add
add
cmp
outsl
bound
iret
cmp
mov
push
iret
ss
inc
dec
orl
mov
push
pop
fwait
fisubrl
in
or
stc
je
cmc
std
idiv
jbe
jl
or
jp
std
fsubp
mov
insb
adc
jne
roll
cmp
dec
insl
mov
pop
add
popa
nop
or
pop
and
cs
or
popa
mov
sti
mov
enter
rolb
mov
mov
stos
mov
pop
pop
in
cli
or
dec
pop
addb
test
pop
repz
gs
js
jge
sbb
inc
inc
cmp
arpl
or
inc
pop
js
add
fimuls
cwtl
xchg
divb
pop
pop
push
mov
repz
clc
fldt
or
icebp
pop
jae
cmp
pop
mov
adc
mov
sbb
mov
mov
adc
out
add
xor
stos
pop
mov
test
mov
iret
js
lahf
mov
xlat
push
out
push
cmpsb
call
adc
hlt
out
out
scas
outsb
dec
mov
push
outsb
sub
mov
popf
pop
icebp
fucomp
aas
cmpsb
jmp
rcrl
jns
icebp
cmc
imul
lock
insb
test
int3
cld
addr16
mov
aas
sub
pushf
movsb
addl
sub
hlt
mov
jo
xchg
out
mov
scas
dec
jne
js
mov
shll
or
mov
mov
mov
inc
ja
mov
xor
cmp
and
divl
in
or
es
ljmp
mov
aas
lods
call
pop
cmpsl
rcl
test
add
pop
cmp
outsb
pop
fstpt
dec
outsb
pop
inc
out
or
stos
pop
mov
jl
xchg
jmp
fwait
or
add
pop
mov
movsl
jecxz
das
cmp
add
subl
jecxz
fsubrl
insl
stos
mov
pop
ret
xchg
adc
ret
adc
adc
push
adc
jnp
add
dec
adc
lock
sbb
fcmovne
jp
sahf
fistl
xor
shl
sub
cmc
cmpsb
cmp
xorb
and
aaa
cwtl
rorb
enter
adc
adc
in
scas
adc
add
lcall
lret
loopne
imul
imull
and
xchg
mov
testb
inc
xorb
pusha
mov
stos
ret
out
add
xor
insb
mov
lahf
mov
push
std
xor
dec
popf
int
mov
dec
lret
mov
rolb
pop
mov
mov
xor
fwait
pop
movl
add
add
add
add
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
push
push
je,pt
fs
sbb
je
push
cs
cmp
sub
cmc
hlt
in
xchg
stos
test
mov
je
fs
adc
add
xor
and
aam
incb
addb
enter
aam
sub
add
xor
and
aam
fldl
std
out
cli
cld
lret
sub
sbb
add
mov
gs
add
mov
pop
jbe
mov
jno
aad
insl
clc
mov
cmp
loope
adc
add
popa
mov
xchg
loope
add
iret
daa
mov
ret
dec
dec
inc
aam
scas
out
or
mov
xor
or
pop
adc
jle
dec
in
adc
adc
lret
xchg
aam
aam
jns
ret
mov
cmpsb
loop
mov
pop
mov
xor
int
test
sbb
xchg
stos
xchg
jl
xor
test
lret
jle
pop
test
mov
sti
mov
int3
hlt
or
inc
pop
je
fs
adc
add
xor
and
aam
les
int3
in
xchg
xchg
test
xchg
movsb
lods
adc
adc
and
xor
dec
push
push
jnp
pop
xchg
lods
rorb
jmp
lock
cmp
push
sub
mov
mov
mov
cmp
and
adc
add
xor
and
aam
hlt
into
in
xchg
scas
test
push
outsb
inc
jle
dec
fs
adc
add
xor
and
aam
hlt
into
in
xchg
scas
test
push
outsb
loope
iret
xor
into
dec
pushf
fisttpll
into
push
outsl
pop
pop
and
aam
test
cmc
icebp
loope
cwtl
sub
cmp
int3
gs
sbb
lret
insb
add
push
stos
movsl
lods
sbb
jmp
arpl
fs
hlt
pop
aam
lcall
sub
sub
dec
outsb
in
stos
and
scas
sbb
inc
loop
push
adc
test
add
dec
and
jmp
xchg
ret
lods
dec
das
or
test
outsb
xor
rolb
push
jge
shrb
mov
insl
mov
xchg
dec
leave
roll
sub
dec
mov
cmp
pop
mov
call
xor
fidivrs
sbb
bound
call
sbb
dec
sbb
enter
jo
jg
mov
pop
lret
negb
int
cmp
clc
cmp
add
lret
das
or
mov
sbb
faddl
cmp
and
or
movsb
cmp
aam
outsb
dec
add
xchg
imul
daa
in
roll
inc
ja
cmp
or
jbe
jge
jg
jecxz
jmp
jg
leave
ret
shll
jecxz
testb
repz
xor
xchg
add
fsubrs
lcall
lods
xor
dec
cmp
loope
lret
cli
fwait
push
sbb
sub
adc
xor
adc
cmpsb
or
sti
and
iret
negb
lods
sbb
gs
fmuls
dec
inc
sub
ret
push
test
adc
push
bound
jl
scas
sub
mov
and
xor
fidivl
push
hlt
add
sub
xchg
negb
gs
push
jge
mov
imull
inc
xchg
sti
fcoml
dec
in
or
cld
imul
popa
mov
sub
sbb
cli
addl
arpl
push
lahf
cli
lret
out
call
ljmp
testb
repz
sbb
push
dec
adc
push
mov
add
dec
mov
sub
movsl
cmp
dec
jb
mov
pop
out
add
mov
cmc
sub
stc
inc
outsb
int3
andl
mov
xchg
sbb
push
ja
into
test
xor
fidivrl
in
inc
add
out
jne
jbe
sub
lret
ja
mov
loopne
addl
dec
test
push
xchg
inc
movsl
int3
repz
mov
adc
movsb
push
push
jl
cmpsb
cmp
jg
mov
mov
push
push
pop
cmp
pop
push
pop
ds
shlb
mov
cmp
outsb
or
sub
fnstenv
jnp
or
fs
pop
push
aad
testb
sbb
cld
sub
scas
fsubr
cmp
sbb
cmp
sbb
mov
ret
adc
cmpsl
jmp
sub
es
int
test
xor
or
jecxz
or
inc
out
pop
sbb
pop
pop
jns
sub
std
lds
daa
xchg
adc
pushf
aad
sbb
popf
push
ret
lahf
xchg
mull
arpl
xor
mov
sub
loope
mov
es
push
inc
inc
hlt
pusha
adc
scas
out
int3
push
mov
andb
outsb
inc
movsb
jne
add
and
pop
sbb
fbstp
mov
jnp
sub
or
test
fstpl
in
or
fisttpll
cmp
and
lret
jge
or
adc
int
mov
or
adc
xchg
add
fdivs
out
arpl
dec
sbb
mov
mov
or
ret
xchg
test
mov
mov
cmp
fcomps
enter
sub
out
test
mov
mov
js
xor
inc
loope
std
jge
idivl
adc
in
inc
adc
je
mov
aaa
adc
icebp
add
mov
out
and
cmc
dec
mov
test
pop
push
scas
mov
add
fprem
lret
mov
jno
inc
sub
xchg
fstpt
arpl
sub
repz
sbbb
mov
fsubs
jne
cmp
pop
mov
mov
inc
lcall
jmp
rcll
xchg
int
mov
cmp
xor
jmp
pop
int3
pop
add
cmp
fwait
loopne
dec
dec
out
mov
in
inc
add
sub
mov
mov
outsb
sbb
test
cs
sub
in
xchg
sub
inc
xchg
loopne
int
gs
jns
shrl
jge
loop
int3
out
pop
orl
pop
xchg
cli
dec
push
xor
in
add
push
test
pusha
adc
aam
lahf
dec
jo
cmp
mov
ret
xchg
cmc
in
jmp
sti
pop
mov
lea
test
repz
lods
pop
cld
lret
push
cld
mov
mov
into
sahf
daa
and
mov
push
fs
mov
fisttpl
movsb
lds
daa
sbb
sub
pushf
std
jb
inc
inc
loop
pop
repnz
jb
popa
xchg
ds
jp
mov
push
cmovp
in
pop
or
dec
cs
sahf
or
sub
outsl
stos
inc
shrb
lcall
shl
push
fnstcw
jo
lds
dec
out
pop
test
mov
inc
sub
sbb
sub
pop
loope
dec
outsl
fsubp
popa
inc
push
add
mov
jmp
out
rcl
leave
xchg
lea
xchg
jno
in
cltd
jnp
jno
and
leave
sbb
sbb
out
or
in
lret
or
mov
jb
pusha
popf
lahf
and
outsl
mov
fidivs
idivb
jg
xor
push
or
pcmpeqd
int
outsl
lea
jge
adc
mov
sbb
lret
pop
fdivs
xchg
inc
add
xchg
cmp
shl
jl
jae
fildl
xchg
xchg
mov
jmp
xchg
test
add
cltd
movsb
mov
push
ds
inc
subl
mov
es
dec
lea
les
sbb
push
test
mov
mov
cmpsl
inc
push
testb
das
push
in
test
rcr
stos
sbb
insb
push
in
mov
ljmp
fmulp
adc
and
inc
dec
fcompl
mov
test
test
push
mov
sub
repnz
imul
std
les
daa
shr
adc
popf
orb
das
push
xchg
ja
fdivl
insb
es
pop
mov
pop
cli
in
hlt
pop
mov
add
lods
orl
mov
scas
cmp
dec
jns
icebp
js
inc
ret
pop
mov
add
aam
imul
aad
sarb
imul
dec
in
push
sub
mov
ss
push
xchg
sub
sub
repnz
gs
pop
xor
push
rol
sbb
test
mov
jle
mov
push
popa
movsl
pop
mov
and
or
push
xorb
sarb
xchg
leave
enter
cmp
mov
sub
mov
loope
into
mov
dec
daa
jnp
stc
jecxz
sbb
sbb
or
adc
int3
or
xlat
insb
mov
lods
or
mov
arpl
fadd
jbe
mov
outsl
fwait
mov
pop
or
outsb
test
sti
je
push
adc
fwait
ss
adc
jp
pushf
sti
imul
fs
jae
negl
inc
or
shl
sahf
cmp
inc
jns
cmp
xor
jbe
cmp
dec
and
mov
dec
mov
loopew
scas
push
cmp
xchg
pop
mov
fwait
repnz
je
pop
js
ja
iret
jmp
xchg
sub
pop
mov
xchg
mov
pusha
out
test
movsl
jecxz
jmp
enter
mov
push
cmp
cmpsl
push
shlb
dec
or
mov
test
pop
xor
loope
add
jbe
mov
mov
aad
inc
test
xchg
cs
fadds
test
sahf
rcrb
mov
sbb
mov
arpl
in
int3
jle
push
mov
push
sahf
std
stos
ficompl
xor
xchg
and
je
jp
mov
sbb
sub
adc
mov
dec
icebp
hlt
into
in
pop
or
test
sbb
inc
xchg
mov
and
adc
adc
dec
out
in
shl
inc
jp
mov
mov
or
add
xlat
fldcw
mov
dec
test
dec
sub
push
mov
mov
sub
lahf
es
mov
xlat
ret
cmpsb
jae
and
mov
loopne
scas
inc
stc
ror
gs
aaa
cmpsb
call
pop
arpl
xor
xchg
push
mov
test
bt
mov
mov
xchg
xchg
or
pop
in
dec
rcl
adc
mov
imul
arpl
fwait
cmc
inc
pop
and
xor
pop
xor
jb
test
roll
sub
fdivr
sbb
cmpsb
adc
data16
add
in
and
push
jnp
inc
push
mov
loopne
arpl
aas
arpl
mov
mov
or
dec
mov
js
sub
add
ljmp
inc
pop
jmp
cmc
je
xor
ja
andl
sub
lret
push
xchg
les
or
dec
cvtps2pd
rclb
mov
hlt
nop
clc
arpl
imul
or
subl
add
mov
cld
inc
shl
mov
xor
pusha
inc
xor
dec
or
xchg
xchg
pop
add
orb
mov
cli
jmp
dec
sbb
inc
inc
push
mov
ss
cmp
mov
stos
aad
in
dec
movsl
aaa
dec
lahf
and
sub
cmp
enter
sarb
jbe
add
xor
add
data16
scas
adc
adc
cmp
xchg
push
cmp
mov
sbb
inc
stos
jbe
jecxz
cmpsb
pop
xchg
xchg
push
in
and
popa
sub
in
repnz
sbbl
and
insl
movsl
std
dec
sub
jae
shll
xor
repz
int
cwtl
or
jbe
push
out
iret
test
sub
and
out
movsl
push
push
pop
or
adc
loopne
sub
into
js
nop
adc
decl
jns
adc
jns
push
or
je
add
cmp
cmpsb
daa
adcl
jb
and
js
mov
pop
fldt
mov
outsl
inc
dec
divl
xor
scas
xor
sub
add
mov
cmp
fs
jecxz,pn
sbb
pop
xlat
xchg
or
mov
mov
dec
cmp
shlb
ljmp
fxch
jno
xor
mov
or
dec
jne
cwtl
repnz
push
mov
sbb
lcall
xchg
ret
insl
pushl
fucomi
push
xor
jne
pop
mov
jmp
aad
push
in
aad
shll
shr
jae
jnp
inc
and
xchg
adc
and
insl
add
cli
int
jns
mov
sub
lock
inc
cwtl
std
es
and
clc
aas
mov
int
inc
std
fsubrl
adcb
int3
lds
push
push
test
xchg
inc
mov
aas
fwait
loop
out
cmp
xchg
xor
popa
nop
movsl
adc
sub
sbb
sbb
mov
push
pop
idiv
and
int
out
push
adc
inc
mov
inc
xchg
rol
mov
and
xorb
or
fs
sbb
call
ja
loopne
bound
fs
vpsllw
aad
sbb
fildll
repz
pop
push
cmpsb
sti
jl
stc
movsb
sub
fiadds
lret
arpl
inc
sbb
cmpsl
jg
pop
insb
movsb
popf
mov
mov
mov
mov
notl
mov
insb
cmp
adc
pop
sbb
dec
cmp
xor
bound
lcall
aaa
adc
das
cld
xchg
jge
mov
cmpsb
aam
mov
pop
or
push
lcall
aaa
aam
push
mov
add
sbb
jl
mov
xchg
push
push
jae
in
movsl
jl
xchg
jns
lret
pop
out
inc
xchg
in
sbb
sti
xchg
or
or
sub
push
cmp
shr
outsl
aad
sbb
add
fwait
mov
lahf
pop
in
aad
fildl
dec
repnz
out
push
bound
gs
inc
jmp
cli
jo
dec
insb
int
or
mov
stos
jne
sbb
push
push
mov
jp
jmp
or
and
mov
sti
pushf
xchg
data16
jo
jmp
loopne
js
xor
ret
cmp
jo
lods
dec
pop
jno
cmpsl
stc
dec
mov
or
push
sub
or
adc
xor
out
out
scas
cmp
int
pop
pushf
jbe
or
adc
clc
and
mov
cwtl
adc
adc
cmp
jno
xchg
adc
push
sbb
dec
push
fcoml
dec
mov
popa
mov
addb
aaa
jge
add
cs
pop
push
into
or
sbb
fidivrs
pop
addb
inc
push
fildl
mov
jp
jge
fcmovbe
pushf
or
push
ja
mov
push
mov
int
sbb
mov
clc
loope
bound
in
scas
mov
stos
fbld
loopne
stos
test
xchg
dec
icebp
or
lret
pop
push
cmp
push
pop
aad
jg
or
adc
pop
fldt
add
dec
cmp
pop
jns
hlt
and
movb
stos
and
push
sub
enter
test
jl
xchg
adcb
dec
movsb
jmp
rolb
dec
xchg
push
lret
ja
sub
insb
inc
or
fs
ds
xor
dec
lcall
adcl
cld
cmp
sub
mov
test
ret
fnstcw
inc
mov
push
push
push
lahf
cmpl
mov
add
xchg
cli
mov
mov
push
subl
cmp
aas
rcr
icebp
xor
jle
loope
imul
insb
shrb
jp
dec
out
jecxz
xor
dec
leave
outsl
iret
pop
cmp
test
aad
icebp
arpl
int
push
mov
scas
lods
enter
push
mov
inc
xor
cs
jge
les
int3
cli
xor
fwait
scas
out
popa
gs
mov
sub
lret
pop
add
in
scas
ffreep
aaa
dec
xchg
dec
pop
push
lahf
mov
icebp
cmp
inc
adc
icebp
fwait
out
and
movsl
dec
sti
ja
mov
xchg
xchg
mov
mov
jne
ja
jno
xor
cmp
push
nop
dec
je
leave
sub
dec
mov
insl
sbb
stos
jg
lods
mov
pop
or
pushl
out
dec
fstpl
mov
inc
cmovno
cwtl
adc
pop
lods
sub
sbb
push
lahf
jecxz
loop
test
out
pop
xchg
loop
pop
inc
pusha
cwtl
xchg
fsubrl
push
cmp
sub
pop
cltd
insb
andb
or
aaa
adc
cmp
cmp
mov
cli
imul
xchg
sub
and
aaa
insb
lahf
jmp
fisubrs
scas
addr16
xchg
adc
out
loopne
push
divl
or
and
sbbl
dec
inc
sbb
sbb
addr16
xchg
pusha
pop
daa
enter
mov
in
test
mov
arpl
jge
xchg
mov
rorb
mov
and
and
mov
cmp
out
pop
int
loop
imul
popf
movsl
leave
sub
or
pop
fmull
pop
insl
mov
es
xor
inc
mov
test
sti
mov
mov
mov
ja
adc
ljmp
notl
sahf
ljmp
xchg
pop
mov
outsl
out
inc
lods
out
add
inc
inc
add
aam
jbe
aaa
out
sub
sub
mov
notl
in
sbb
and
mov
fidivl
aad
push
inc
movsb
adc
sub
in
mov
clc
dec
add
or
mov
dec
push
clc
lcall
jns
daa
push
fistpll
cs
loopne
jle
into
push
mov
push
arpl
sub
push
adc
jecxz
xchg
ss
or
icebp
es
pop
mov
inc
jg
mov
sub
mov
ret
push
xchg
pop
inc
fwait
xlat
cmpsb
mov
data16
inc
pop
push
imul
subps
mov
rcrl
adcl
lahf
fsubl
test
popa
mov
add
dec
sub
mov
push
mov
inc
push
add
icebp
fstpl
sub
sbb
mov
repz
add
pop
mov
mov
sysexit
loopne
jo
xlat
push
mov
and
add
mov
imul
imul
adc
mov
mov
cmp
mov
sbb
jno
push
hlt
xlat
mov
stos
jmp
arpl
sub
sbb
mov
add
mov
movsb
jl
sub
out
lds
pmulhw
andl
cs
mov
sbb
lds
js
sbb
jns
stos
xor
mov
loope
fidivs
xchg
mov
mov
lock
push
push
add
push
mov
movsl
pop
and
adc
testl
inc
cs
mov
hlt
lret
sbb
inc
lods
pop
adc
jmp
loope
lods
icebp
pop
pop
je
loop
push
setg
lods
xor
fwait
ret
fcomps
xor
adc
pop
sbb
sub
pop
and
movsb
nop
notb
fs
or
repnz
adc
int3
mov
cmpsb
jnp
fwait
mov
sub
in
out
dec
shll
xchg
jmp
sahf
jge
fadd
scas
xchg
pushf
cli
shll
mov
imulb
in
int3
ja
and
jg
popf
int
fcoml
fwait
pop
xchg
mov
sub
and
sub
mov
sti
sub
cs
sbb
fidivs
in
dec
pop
cmp
out
jno
mov
addr16
dec
out
scas
mov
xor
rclb
cmc
not
iret
push
notb
or
and
fldcw
mov
sub
fwait
adc
add
das
push
ljmp
mov
ljmp
mov
test
mov
icebp
pop
out
cmp
and
push
es
pop
mov
xchg
jge
out
jbe
int3
ret
xchg
int
xor
mov
divb
rorl
insb
sbb
test
mov
les
sub
cmpsl
or
andl
lods
sbbl
clc
mov
mov
xchg
jg
and
and
out
adc
adc
push
loopne
xchg
or
pop
stos
mov
mov
repz
mov
test
adc
pusha
insb
xor
rcll
aad
outsb
pop
jl
xchg
and
enter
pop
insb
and
adc
add
add
jb
xor
stos
push
lods
jp
scas
outsb
dec
xchg
imull
mov
jmp
nop
sbb
adc
in
xchg
jmp
in
mov
iret
add
push
rcll
xchg
lret
pop
inc
pop
dec
jmp
xor
pop
xor
stos
fisttpl
insl
daa
in
dec
ret
outsl
push
pop
pop
xchg
out
daa
sti
lods
aas
inc
in
movb
push
push
sbb
data16
mov
pop
in
decb
lods
jns
cltd
sarl
imul
inc
repnz
push
xor
mov
xchg
push
add
int
movsl
ss
aas
clc
lcall
sub
test
scas
xchg
adc
lods
adc
pop
adc
cmp
sub
push
push
ret
push
xor
lret
out
sbb
jnp
xor
arpl
jnp
pop
call
dec
mov
sub
loope
sbb
cld
adc
dec
pop
imul
jbe
es
cmp
xchg
fwait
xchg
aam
jl
outsb
dec
imul
out
mov
jge
and
mov
push
orl
loop
stc
add
push
imul
out
mov
mov
lcall
xor
and
std
test
xchg
enter
icebp
mov
mov
out
notb
mov
ds
jbe
mov
sub
negb
sub
add
rcrl
push
loopne
pop
int
nop
xchg
cmp
test
outsb
jo
adc
cmpsl
xchg
inc
sub
insb
jbe
push
cltd
mov
mov
hlt
cmp
insb
sub
pop
or
sub
jb
pop
je
in
rcpps
xor
dec
test
adc
dec
cmp
xchg
xlat
cltd
les
cld
arpl
orb
fldl2e
sub
or
sub
pushf
cmp
and
push
fwait
ret
mov
loope
sub
stc
xor
call
xchg
pop
adc
add
xor
and
aam
hlt
into
in
xchg
scas
test
push
outsb
inc
jle
dec
fs
adc
add
xor
and
aam
hlt
into
in
xchg
scas
test
push
push
jo
push
fs
adc
add
xor
and
aam
cli
hlt
into
in
xchg
stos
test
push
mov
stos
fs
adc
add
xor
and
aam
les
in
jecxz
or
dec
negb
lahf
inc
pop
push
das
fs
je
dec
jg
or
mov
hlt
into
test
xchg
jmp
push
cs
je
add
adc
and
dec
pop
lahf
aam
in
hlt
iret
call
pushl
fs
je
add
adc
and
xor
les
xchg
lods
shlb
jg
pop
sbb
les
adc
pushf
mov
ret
rorl
das
je
pop
pop
xchg
fcompl
jle
dec
add
xchg
in
or
cli
mov
sub
icebp
xor
out
pop
in
inc
push
pop
and
pop
jb
or
xchg
in
or
xchg
iret
pop
stc
mov
pop
xchg
insb
and
jo
dec
shll
dec
cmpsl
jae
dec
jg
lahf
cmp
scas
pusha
push
adc
test
repnz
add
xor
stc
cmpsl
mov
outsl
dec
jg
out
ljmp
xlat
mov
push
add
rcrl
movsl
je
xor
add
mov
xchg
sbb
loope
test
out
movsb
mov
das
fs
je
add
adc
and
xor
les
hlt
iret
test
xchg
out
movsb
fnstsw
pop
adc
or
cmp
bound
pusha
out
sub
cmpb
mov
push
and
add
sub
pop
outsl
dec
pop
push
fisttpll
ficoml
mov
add
sbb
push
pop
adc
sub
outsl
and
xor
les
hlt
iret
test
xchg
out
movsb
pushl
fs
je
add
adc
and
xor
les
hlt
iret
test
xchg
out
movsb
pushl
mov
cmp
sub
outsb
and
mov
iret
sub
push
sahf
mov
or
pop
stos
sub
imul
xor
or
outsb
repz
sbb
je
add
sbb
repnz
jo
bound
inc
fidivrl
icebp
ficompl
or
in
lds
pop
hlt
sub
add
mov
adc
pop
lea
sbb
add
xchg
rclb
mov
arpl
stos
xor
popa
add
xchg
xor
mov
mov
repz
in
outsl
and
mov
and
jp
push
push
orb
cld
jl
sub
push
add
xchg
imul
push
insb
pop
pop
or
imul
repz
incb
iret
arpl
mov
pop
mov
insb
repz
or
insl
data16
popf
pop
stc
sbb
and
in
shr
inc
pop
xchg
lods
sub
jb
push
push
lock
sarb
dec
inc
dec
add
push
mov
fwait
outsl
test
es
inc
xchg
das
dec
and
xchg
inc
xchg
sahf
mov
cld
mov
push
lods
loopne
xor
popa
shr
jae
insl
leave
add
mov
jp
sub
sti
sbb
test
sti
leave
adc
jmp
push
imul
xor
sbbb
push
pop
test
xchg
cmpb
sti
aaa
mov
dec
and
mov
imul
mov
gs
daa
sbb
mov
pop
jns
imul
ficoml
adc
pop
cmp
jnp
sub
ss
out
sbb
pop
aaa
scas
sub
mov
pushf
jl
fdivs
mov
cmpl
dec
inc
popa
adcl
pop
sbb
bound
adc
inc
pop
cli
movsb
pop
jns
xor
call
decl
push
xor
jge
add
add
movsb
inc
jns
and
mov
xchg
popa
pop
shll
lret
push
imul
push
mov
jp
cwtl
sub
dec
push
mov
xor
cld
jg
fstpt
and
fsts
insb
cmp
pop
rorb
push
lcall
pop
mov
enter
testb
jg
dec
cmp
add
mov
test
push
iret
xor
out
jle
mov
add
clc
jmp
pusha
jbe
notl
cwtl
fwait
mov
mov
es
or
jg
push
or
jge
push
push
movsl
mov
es
pop
xchg
or
xchg
ss
fisubrs
add
cwtl
jge
aam
push
cli
cmp
out
cwtl
inc
pop
adc
cmp
fsubrp
jmp
lods
pop
add
add
stos
sbbb
jno
ss
mov
mov
mov
pop
call
outsl
inc
popf
mov
fs
ljmp
icebp
mov
pop
pop
daa
in
push
push
and
jns
xchg
enter
fwait
out
jne
dec
adc
mov
mov
rcl
dec
sub
mov
lock
nop
push
out
mov
push
movsb
aam
xchg
enter
dec
mov
push
stos
das
outsl
popf
cli
and
std
ficoms
cs
cld
sahf
add
out
sahf
or
push
jbe
loope
cmpb
cmp
or
inc
out
add
mov
sbb
fs
iret
pusha
or
and
lret
mov
xorb
lods
adc
test
ljmp
cli
rorl
insb
dec
cwtl
cltd
sbb
flds
movsl
push
pop
add
cli
xor
jecxz
add
mov
jno
cmp
mov
jne
pop
push
insb
push
shr
daa
sbb
stos
mov
sahf
divl
sbb
mov
mov
sbb
and
pop
pop
pop
movb
testl
dec
stc
cli
mov
dec
leave
xchg
pushf
repz
fs
fisubs
icebp
lock
fisubl
ror
mov
insb
les
mov
or
xchg
das
jge
and
daa
cmp
aas
scas
hlt
and
dec
aaa
push
push
xchg
repnz
sti
dec
push
ret
adc
xor
sarl
mov
insl
fmuls
xor
jmp
test
ret
data16
cmc
out
xchg
sahf
inc
icebp
popa
movsb
pop
enter
xor
dec
stos
mov
lret
inc
repnz
jle
jle
push
sub
xchg
pop
loope
mov
popf
insb
mov
and
or
add
adc
xchg
xlat
repz
or
inc
into
pusha
jle
xchg
leave
adc
jmp
or
mov
sbb
fs
out
xchg
and
cmp
sarb
mov
xchg
shlb
xchg
and
shll
int3
imul
xor
insb
jnp
fwait
jae
in
sub
push
into
jnp
mov
iret
xchg
pop
scas
fwait
pop
leave
push
inc
add
xchg
jbe
mov
mov
outsl
and
fldcw
inc
enter
shrl
add
inc
add
xor
sar
sub
jle
sub
rcr
ja
pop
es
add
sub
pop
dec
imul
mov
sub
mov
mov
jne
mov
test
pusha
ficoms
xchg
add
ret
mov
mov
push
and
xor
push
loope
fildll
sub
dec
rcrl
push
adc
cltd
xchg
or
inc
and
in
test
fistps
cmc
sahf
inc
inc
nop
sub
test
pop
enter
mov
clc
and
lods
setb
add
sbb
pop
mov
dec
xlat
jae
fs
pop
jns
fmul
cs
outsl
loope
dec
and
sarl
jnp
hlt
dec
fwait
xor
fbld
or
hlt
rclb
mov
sub
xchg
xchg
popf
add
push
jg
mov
cmpsb
push
ljmp
add
fdivl
inc
scas
cmp
fwait
test
ret
outsb
adc
mov
popf
lret
add
repz
push
in
iret
mov
jb
out
cmp
or
xchg
inc
push
aas
popa
mov
and
xor
out
ss
mov
imul
jecxz
or
sbb
cmp
rcl
aaa
lret
push
dec
cmp
sub
inc
pop
mov
insb
ficomps
jmp
adcb
btl
movsl
jb
movsl
arpl
dec
push
add
cmpsb
or
test
ret
adc
pushf
mov
adc
movsl
push
sub
out
bound
daa
popa
adc
dec
sbb
inc
test
subb
out
scas
push
cmc
add
push
fisubrl
mov
push
push
push
xor
stos
push
jmp
into
leave
ss
sub
pop
pop
mov
sub
mov
cmp
insb
jns
fcmovnbe
push
add
mov
cs
jno
test
lds
sub
fs
sub
pusha
idivl
in
fwait
cs
pop
test
mov
dec
jae
cmp
js
xchg
dec
ret
push
xchg
mov
outsl
aam
repz
sub
cmp
sbb
shll
ret
hlt
cmp
pop
or
mov
sbb
pop
les
dec
pusha
ljmp
sti
add
xor
out
jo
test
lock
mov
lea
add
and
pushf
xchg
mov
aam
add
test
jnp
call
lret
lds
pop
ds
cmp
push
in
enter
mov
jge
jae
imul
icebp
dec
and
jno
xlat
popa
cmp
or
lahf
scas
push
adc
xor
sub
mov
dec
sbb
jg
push
mov
into
loope
jp
loope
test
push
lret
fsubrl
inc
push
jge
push
lret
add
push
jge
cmp
ret
push
sub
push
das
and
pop
fildll
mov
cmpb
mov
outsb
push
or
repnz
int3
pop
test
arpl
inc
mov
dec
pop
mov
jge
ss
arpl
gs
pop
out
fstl
inc
mov
fnsave
and
ret
fs
js
and
mov
iret
push
pop
fsubl
dec
xchg
mov
xor
mov
add
addb
mov
cli
jno
addr16
pop
out
pop
dec
flds
add
pop
mov
lea
push
pop
psubsw
sbb
aaa
jg
adc
and
xor
stc
sub
imul
pushf
dec
add
cmp
dec
cmp
sbb
sbb
jnp
int3
idivb
xchg
stos
add
lods
ss
pop
xlat
repz
lds
in
mov
pushf
in
mov
sub
cwtl
outsl
push
add
daa
dec
sti
subb
sbb
mov
push
shll
and
mov
fwait
inc
scas
jle
stc
xchg
xchg
js
or
ret
sub
push
xchg
or
test
mov
adc
mov
add
push
fsts
or
lret
nop
pop
leave
xchg
xchg
mov
mov
loop
pop
icebp
std
pop
bound
inc
sub
adc
stos
inc
out
or
cwtl
fnstsw
icebp
icebp
cmc
in
mov
fsubs
test
and
push
pop
cmp
loop
mov
inc
popa
and
cmc
add
in
pusha
idivl
daa
mov
inc
mov
mov
aaa
adc
cmp
inc
xorb
dec
aaa
cli
mov
lret
stc
shll
push
jnp
dec
jo
dec
add
jbe
iret
add
dec
or
sub
and
lock
push
lods
pop
insl
jp
mov
lret
mov
insb
push
push
sbb
rcrl
pop
push
int3
jo
andl
and
xchg
daa
fiaddl
push
bound
mov
inc
cmpb
xchg
loopne
lahf
push
clc
push
bound
xchg
test
stc
pop
shrl
cmpsb
shlb
mov
sti
push
mov
ficompl
mov
jle
xor
cmc
or
icebp
repz
gs
scas
or
lds
and
lret
pusha
pop
cmp
xchg
subb
dec
xchg
mov
mov
dec
decl
cmp
and
scas
adc
xchg
inc
out
jmp
sub
jmp
ljmp
mov
mov
in
shrb
aaa
ret
sub
arpl
xchg
jle
mov
aam
in
out
orb
dec
mov
mov
add
or
sbb
add
mov
je
push
xchg
pop
movsl
push
daa
shll
adc
adc
pusha
ljmp
stos
repz
lds
int
or
jns
sub
mov
pop
pushf
dec
push
xchg
mov
enter
inc
or
daa
lock
sti
mov
or
or
js
je
es
popa
cltd
fxch
xchg
jg
push
xchg
stos
test
imul
inc
sub
loop
push
rol
cld
jg
sub
stc
fs
dec
ret
xlat
std
testl
dec
dec
les
inc
inc
sub
inc
or
mov
or
add
aas
xor
andl
and
ljmp
xor
sbb
xor
cli
sets
stos
cmpsl
stos
ljmp
dec
push
adc
addr16
cwtl
xor
dec
cmpsl
arpl
popf
xor
pop
cmpsb
rcl
jmp
cli
pop
mov
sub
dec
iret
add
jecxz
outsb
jae
stos
xchg
pop
lcall
test
arpl
xorb
sub
push
cmc
scas
rcrb
fistps
adc
and
sub
inc
lea
lcall
roll
ds
adc
xchg
pusha
aad
outsl
out
data16
aas
subl
fsts
mov
adc
mov
clc
mov
sbb
jmp
mov
lahf
inc
lcall
jnp
mov
inc
mov
jo
in
add
gs
adc
cmpsb
ds
cmp
xor
and
sbb
jle
rcrl
inc
mov
loop
push
loopne
popf
out
mov
arpl
fmull
cmp
cli
jnp
mov
mov
or
jnp
jae
arpl
sub
add
icebp
call
add
jne
add
mov
outsb
test
mov
cmpsb
sub
rcrb
loope
imul
mov
jno
nop
mov
mov
sarl
inc
leave
rclb
cli
xor
cmpsl
scas
inc
int
cmpb
frstpm(287
push
mov
mov
dec
mov
cmp
sbb
jbe
push
mov
jg
aaa
ret
xchg
inc
mov
mov
mov
repnz
mov
xor
jb
lods
fs
andb
inc
shl
push
call
aam
and
mov
ficompl
clc
cmpsl
jne
int3
dec
movswl
arpl
pop
gs
js
mov
mov
in
enter
out
aas
rcrb
jmp
cmp
sbbl
add
xchg
and
or
xor
mov
jne
fidivl
or
pop
xlat
sbb
xor
daa
push
jne
fwait
xor
sub
enter
or
or
cltd
rorb
fisubrs
test
xor
xchg
inc
cwtl
jo
movsl
aas
mov
lret
sbb
repnz
aas
pop
ret
in
add
outsl
pop
cwtl
sbb
mov
and
push
divb
mov
nop
pop
xor
jecxz
sbb
jnp
loop
pop
mov
jl
pop
js
and
pop
orb
jb
pop
dec
mov
rolb
mov
leave
and
and
mov
fwait
lea
inc
cmp
xlat
aam
inc
out
add
mov
mov
cmpl
mov
repz
cmp
imulb
test
sbb
or
xchg
sbb
jnp,pn
fldenv
dec
mov
lea
xor
push
scas
jno
outsb
or
or
xor
xor
inc
pop
fnsave
pop
xor
subl
sbb
arpl
push
out
mov
movsb
push
xchg
mov
xor
xchg
adcb
ljmp
push
out
xlat
outsb
adc
aad
fisubrl
inc
test
in
mov
lahf
mov
cmpsb
sbb
fstpt
sub
sbb
iret
out
adc
sbb
push
out
test
std
push
and
xlat
adc
jnp
xor
enter
rcrb
stos
inc
fcomps
icebp
add
dec
dec
lret
pop
lret
xchg
cmpb
out
add
jne
aad
outsl
roll
xor
mov
iret
mov
cmpsb
mov
dec
lds
jns
in
lods
lds
push
movsl
cmp
lret
leave
lods
mov
ljmp
inc
das
dec
xchg
addr16
jecxz
push
cmpsb
mov
push
or
ja
jp
lret
push
jge
scas
cmpsl
or
adc
ljmp
fucomp
popf
loop
lahf
orl
xchg
add
push
push
and
sbbl
fmull
enter
and
push
sub
daa
mov
stos
clc
jns
hlt
mov
push
lret
rorb
jbe
push
fistpll
xor
push
test
sbb
xor
xchg
cmp
xchg
jl
and
data16
ds
lods
xchg
push
ljmp
sub
xchg
aam
es
xor
sbbb
sbb
fistpl
out
insb
or
sbb
push
mov
adc
pop
and
pop
sti
sub
addl
push
inc
frstor
pop
mov
dec
lahf
pop
xchg
mov
pushf
sbb
notb
inc
or
jl
xchg
jno
xor
push
fwait
mov
dec
xor
popf
insl
sbb
pmuludq
pop
cmp
orb
pop
jne
push
and
cmc
aas
pop
xchg
inc
sbb
mov
int3
add
sar
or
and
jecxz
xchg
mov
xchg
xor
mov
clc
mov
push
test
mov
aaa
ret
add
push
pop
aas
jl
jns
mov
cli
js
add
add
xlat
divb
xchg
in
push
leave
lret
push
fsubrp
inc
cs
pop
add
dec
pop
push
adc
scas
and
iret
add
sbb
pop
mov
jmp
lods
mov
adc
jnp
jo
insb
xchg
add
ja
pop
jle
lret
hlt
mov
fstps
or
hlt
movhps
mov
xchg
js
and
idiv
stos
adc
rorb
lods
adc
xchg
push
sbb
inc
sbb
or
add
andl
push
pop
fisubrs
xchg
dec
sbb
cmp
aas
push
cmp
sbb
add
pop
cltd
pushf
mov
or
and
out
loop
mov
divl
jno
mov
cmpsb
add
shrl
stc
mov
jo
sbb
push
fldenv
in
cmc
fucomip
repz
or
inc
mov
sub
jb
push
cs
nop
add
enter
push
daa
dec
xor
popa
push
js
push
cmpsl
push
aam
lods
push
add
or
xor
ja
push
ds
cmpsl
cmp
shl
jae
mov
fcmovbe
nop
ficoml
push
hlt
add
inc
jae
cmp
pop
mov
lret
adc
push
push
dec
inc
xchg
fwait
leave
bound
daa
aaa
sbb
dec
fwait
add
lea
sbb
out
pop
mov
inc
mov
sbb
dec
dec
or
sub
mov
outsl
jns
call
pop
movl
xor
mov
cmp
sbb
sti
jmp
xchg
popa
test
and
les
and
gs
jnp
jo
xchg
stos
outsb
adc
lcall
xchg
fidivrl
inc
add
xchg
push
ret
clc
jae
imul
xchg
inc
fmul
daa
gs
mov
popa
mov
xchg
sub
dec
xchg
jbe
and
adc
push
pop
mov
cld
dec
pushf
add
cltd
xchg
jbe
pop
add
mov
mov
scas
test
lock
ret
dec
fwait
jle
xlat
sub
push
fdivrs
xchg
jmp
jno
das
cmp
lahf
mov
out
jne
pop
jl
fisttpll
dec
mov
in
aam
jge
stc
push
repnz
mov
fwait
popa
dec
out
xor
sbb
sahf
mov
xchg
xchg
stc
test
inc
scas
repz
imul
data16
aas
std
clc
pop
shl
loopne
mov
ljmp
adc
outsl
sub
mov
rorb
rcr
push
loope
inc
repz
lods
dec
mov
daa
push
je
mov
cmp
jno
sbbb
add
lahf
adc
pop
push
movsl
lret
into
daa
scas
loope
or
sbb
test
subl
daa
mov
fisttps
xor
cmp
mov
mov
jg
addr16
int
xchg
jns
inc
mov
aas
pop
push
fwait
test
inc
mov
shrl
push
pushf
insb
push
icebp
test
addb
scas
mov
lods
mov
jno
into
ja
ja
mov
rcr
push
pop
xchg
leave
repz
je
stos
fadd
dec
cmp
sbb
loop
loope
rorb
and
imul
lods
pop
mov
jbe
movsl
bound
inc
pop
and
dec
mov
mov
ljmp
mov
jle
or
mov
and
insl
pusha
xor
adc
or
mov
or
add
dec
outsl
xchg
cmp
dec
mov
push
mov
lcall
repz
stc
and
pop
or
dec
call
pop
dec
add
and
mov
les
paddq
adc
inc
mov
mov
dec
cmp
out
ss
icebp
enter
loope
jecxz
cld
mov
icebp
pop
or
xchg
mov
fsubp
jnp
int
adc
cmpsb
scas
push
sbb
imul
or
dec
lret
pop
ret
push
movsl
jl
sbb
sub
cmc
mov
push
js
fs
mov
sub
test
and
xor
out
in
sbb
stos
aad
fwait
in
pop
std
dec
test
les
push
mov
mov
fsubrs
fstpt
cmp
insb
adc
out
jle
in
lods
add
imul
cmp
sub
xchg
push
sbb
std
or
pop
mov
sti
cmp
imul
mov
or
filds
mov
mov
cltd
mov
mov
jnp
das
repnz
outsl
add
cli
scas
bnd
add
imul
pusha
mov
dec
test
clc
stos
js
sbb
scas
andb
shlb
imul
andl
test
jns
pop
dec
aas
mov
pop
dec
xor
addr16
in
outsl
outsl
sbb
idivb
ret
ljmp
mov
call
addr16
je
add
adc
and
xor
les
hlt
iret
test
xchg
out
movsb
pushl
fs
je
add
adc
and
xor
les
hlt
iret
test
xchg
out
movsb
pushl
fs
je
add
adc
and
xor
les
hlt
iret
test
xchg
out
movsb
mov
inc
push
push
cs
je
add
adc
and
xor
les
cmpl
add
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
mov
sub
cmp
mov
cwtl
sbb
imul
call
stos
sbb
dec
jmp
fldt
or
mov
mov
jnp
push
pop
test
clc
mov
orb
fildl
or
imul
lret
jnp
sbb
iret
or
jbe
pop
loop
hlt
jg
shll
je
mov
adc
clc
divb
push
mov
or
push
adcl
jbe
sti
dec
jmp
daa
sub
cmp
shl
sub
imul
jmp
rcrl
sbb
pusha
adc
xchg
repz
mov
fsubrs
dec
call
pop
cmp
adcb
enter
inc
sub
imul
add
stos
call
jnp
mov
daa
pusha
inc
js
mov
fwait
jmp
movsb
stc
dec
pop
xchg
push
movsl
mov
punpcklbw
jg
fildl
push
popa
mov
pushf
call
stos
call
sti
dec
jmp
sub
mov
imul
call
enter
int
sahf
cmp
aaa
mov
dec
sbb
push
cmpsl
sub
dec
fistps
dec
lret
daa
mov
adc
in
dec
into
data16
fisttps
and
fnstsw
pop
mov
push
sub
jnp
imul
call
stos
sbb
dec
jmp
fldt
js
mov
cwtl
sbb
imul
call
lret
mov
adc
rcl
mov
sbb
jecxz
pop
negl
cmp
pop
fistl
sub
les
or
push
pop
nop
outsb
test
jmp
fdivr
imull
mov
mov
test
fsubrs
mov
cwtl
cmp
cmp
cmp
test
ret
cmp
aad
inc
test
or
ret
ss
push
fsubr
popf
mov
int
sub
cmpsl
dec
cmp
and
or
fwait
jmp
in
cli
ljmp
mov
jecxz
cmpsb
shrb
xor
movsb
pushf
into
sbb
js
les
push
fs
or
nop
add
in
inc
push
int
push
jno
xchg
pop
dec
lcall
xchg
mov
mov
jb
push
scas
inc
sbbl
inc
in
hlt
stos
imul
sbbl
repz
stos
xchg
cmpsb
pop
mov
sbb
shll
or
sub
popa
inc
mov
xor
stos
rorb
jp
outsb
ret
push
lea
out
lock
into
mov
fidivrl
repz
pop
ss
sbbl
mov
std
mov
add
dec
xchg
jo
ret
xchg
fisubrl
add
addr16
add
pushf
out
call
cmp
add
xchg
clc
or
inc
push
inc
lods
push
mov
aas
dec
mov
pop
and
sbb
outsb
mov
inc
push
ret
lret
mov
mov
fisubrs
adc
push
jmp
sub
mov
adc
or
jae
into
mov
scas
pop
shld
mov
adc
loop
add
das
fwait
adcl
orl
mov
xor
mov
add
mov
or
lods
cmpsl
sbb
sahf
mov
into
mov
mov
xchg
inc
imul
lods
dec
test
fwait
enter
addr16
inc
and
adc
lret
mov
pop
sbb
cs
cmc
cwtl
jnp
and
inc
mov
adc
inc
mov
lcall
loop
std
enter
and
xorb
inc
push
cmp
aas
mov
sub
xor
test
daa
and
or
clc
fdivr
xor
sti
inc
call
addr16
lret
xchg
pop
test
mov
jp
add
dec
push
jns
cwtl
movsl
push
std
out
mov
cld
aas
into
dec
dec
insb
mov
push
cmp
cmpsl
pop
adc
iret
lods
stc
mov
addr16
pop
and
enter
in
leave
int
lds
add
xchg
mov
cltd
cmp
es
stos
ret
loope
jmp
sbb
mov
sbb
dec
jl
fdiv
pop
pushf
bound
mov
repz
cli
fisubs
push
movsl
push
test
arpl
xchg
out
add
inc
or
repz
pop
jl
sub
fsubrs
xor
cmpsb
lea
mov
movsl
sbb
mov
bound
dec
js
sar
insb
pop
pop
out
and
xorb
fsubr
jne
loope
fdivrs
fwait
sub
frstor
outsl
jge
mov
fmull
stc
imul
out
fdivr
fbld
ret
loopne,pt
pop
mov
xchg
xchg
dec
aad
sbb
cmpsl
js
xchg
lret
push
adc
cmp
mov
shrb
mov
imul
push
xor
int3
out
pop
sub
sub
outsb
pusha
test
jp
cmpsb
movsb
dec
xor
push
cmp
add
mov
inc
mov
gs
jle
fisubrl
popw
movsl
icebp
push
test
inc
cmpsl
sub
outsb
jb
mov
jo
xor
jns
sub
pop
out
mov
xor
pop
pop
dec
stos
adc
xor
cli
stos
in
insl
stos
xchg
sbb
sbb
pop
sbb
mov
mov
cmp
push
in
mov
ret
ret
pop
fadd
inc
jo
sbb
xchg
pop
dec
inc
cmpsb
sub
dec
arpl
push
pusha
in
jge
mov
mov
ljmp
adc
leave
shrb
or
pushf
aad
add
arpl
idivb
mov
xchg
stc
inc
xchg
add
dec
add
out
mov
in
mov
mov
mov
ret
or
dec
int3
xor
rorb
cmp
ret
mov
or
sbb
lods
repnz
mov
xchg
mov
in
xor
stos
in
add
pop
push
xchg
dec
rcll
mov
imul
sbb
fsts
push
popa
sub
popf
fdivrs
mov
cmp
ret
leave
fld
mov
mov
dec
cwtl
into
jp
js
std
testl
es
xor
mov
aas
add
adc
imul
add
adc
pop
jns
inc
dec
mov
push
pop
inc
out
pusha
lcall
test
push
cltd
das
ljmp
mov
pusha
int3
inc
cld
cli
fdivrp
outsl
insb
insb
and
sub
push
cwtl
inc
lea
xchg
dec
int
xor
scas
daa
cmpsl
enter
dec
mov
add
imul
fnsave
inc
add
mov
inc
pop
sub
adc
xorb
push
fcoms
mov
outsl
data16
adc
lock
xor
push
insb
fnsave
aam
or
cwtl
pop
push
in
fwait
xorb
in
stos
sahf
dec
or
out
ss
xor
mov
or
outsl
aad
dec
xor
aam
lods
pop
rcl
adc
bound
jb
cwtl
dec
jo
fiaddl
pop
dec
mov
mov
mov
les
ret
push
andb
lock
les
addr16
pushf
lea
xchg
ret
pop
and
cwtl
pop
lcall
jg
jge
dec
decl
fisttpl
fdivl
add
pop
addr16
cmp
jecxz
cmp
mov
out
fstpt
mov
mov
test
push
out
cmpsl
mov
cmpb
lret
xor
push
pop
jo
mov
sti
out
inc
sbb
xchg
scas
dec
stos
loope
sub
mov
xor
mov
xchg
loope
xchg
mov
imul
arpl
ljmp
lahf
push
push
or
push
scas
sbb
ds
sbb
or
sti
cwtl
mov
outsl
rcrb
jb
lds
arpl
mov
mov
jnp
jb
push
xchg
leave
pop
dec
out
pusha
push
inc
enter
pop
pop
mov
aad
fucomp
push
and
mov
mov
sbb
arpl
sub
or
or
jns
js
mov
jg
loopne
push
sahf
lock
fmul
or
mov
mov
cmp
cmpsb
and
jge
and
jl
scas
jne
jnp
daa
add
lds
loop
push
xor
les
and
scas
pushf
mov
sti
shl
rcrb
cld
xor
adc
cmp
pop
lret
cmp
out
cmp
sbb
dec
ss
add
std
adc
jge
add
rorb
or
adc
stos
ret
mov
add
sahf
add
aad
jb
fadds
cltd
ss
mov
inc
ljmp
xor
jae
movsl
icebp
add
xor
mov
dec
ss
in
inc
daa
adc
das
ja
sbb
mov
mov
test
adc
bound
and
testl
lock
sub
mov
aas
mov
sub
movsb
pushf
mov
sti
out
sub
stc
rorb
push
clc
mov
mov
adc
mov
sti
into
mov
int
cmp
nop
push
and
cmpsl
ret
or
cmp
cmp
clc
sub
pop
or
addb
outsl
outsl
lret
jl
mov
mov
dec
lahf
dec
push
daa
andb
jmp
xchg
sbb
dec
cmpsl
mov
sub
sbb
inc
dec
cmp
or
insl
in
jbe
mov
movsb
inc
mov
jnp
popa
xchg
mov
adc
lods
xchg
ss
fisttpll
mov
les
dec
lock
mov
std
out
jne
pop
sub
adc
lahf
inc
dec
cmp
xchg
outsl
pop
cltd
aad
clc
push
pop
fisubrl
mov
cmpsl
inc
lods
mov
mov
xlat
cwtl
dec
and
cmpsb
scas
push
sub
and
into
pop
inc
mov
lea
hlt
inc
inc
in
cmc
lret
push
mov
mov
test
inc
pop
hlt
int
loope
push
ds
add
test
movsb
insb
cli
cmpsb
xchg
fsubr
cld
bound
mov
pop
pop
daa
loopne
sub
rclb
loope
ds
arpl
jbe
ja
test
mov
ficoml
or
cli
ret
mov
sub
repz
js
fs
push
aam
lods
push
loop
jge
jnp
and
jp
inc
nop
inc
lds
insl
loop
jno
call
cli
jo
xchg
push
lahf
outsl
pop
in
jl
data16
test
xchg
jo
mov
or
cmpsb
mov
test
mov
int3
sahf
cmp
pop
dec
jno
in
pop
inc
outsb
jns
cmp
adc
mov
add
idivb
sbb
or
je
dec
mov
adc
popf
jge
loopne
loopne
rcll
cmp
movsl
jb
int
jg
cld
in
into
ljmp
movsl
arpl
das
std
xchg
fdivl
mov
mov
imul
into
inc
or
cmc
addr16
cmp
or
into
stos
icebp
out
shlb
int
bound
lods
test
call
mov
sbb
mov
iret
add
enter
into
outsb
push
and
insb
mov
lret
fsubrl
shll
insl
clc
lock
or
clc
scas
mov
or
jo
jns
adc
pop
shrb
and
idivb
sbb
clc
ret
cld
sbb
cmpl
cmp
push
cmp
or
call
in
mov
mov
mov
testb
out
and
aad
sarb
test
dec
jnp
xchg
xor
dec
enter
out
ret
test
pop
mov
int3
outsl
xor
int3
insl
es
push
loope
mov
lret
out
subb
sbb
enter
jge
outsl
and
mov
test
imul
in
lock
testb
clc
sub
rep
mov
push
movsb
mov
cmpsl
mov
movsb
mov
add
cmp
popa
push
lea
sub
repnz
loopne
cs
popf
ret
adc
and
pop
gs
xor
or
xchg
into
jle
aaa
gs
lret
fs
jmp
mov
xchg
inc
pop
repnz
ret
mov
ljmp
dec
movsb
cmp
in
cmpsb
jnp
jnp
aas
sub
sahf
mov
xor
ds
mov
fwait
stos
xor
js
xor
or
add
and
imul
negb
js
fstpt
stos
add
daa
sbbb
fbld
adc
lret
lcall
lods
push
and
xor
addr16
out
lock
mov
ds
das
push
lods
xor
xchg
or
push
mov
fldt
or
inc
movsb
sbb
sub
test
mov
js
testl
adc
out
ret
shrb
setle
add
ljmp
in
popf
mov
inc
ret
jl
push
cmp
lea
mov
jecxz
or
push
mov
mov
inc
mov
mov
aad
testb
jno
mov
in
outsb
xchg
mov
mov
xchg
cmp
adc
xchg
in
jp
out
jns
push
cld
mov
jge
pop
mov
mov
cli
std
ficomps
jle
cmp
push
xor
adc
pop
xchg
dec
adc
xor
sub
shrb
mov
pop
push
outsl
lcall
rolb
xchg
mov
xchg
shlb
mov
and
push
sbb
jne
mov
cmc
movsb
lds
xchg
pop
sub
xchg
cld
stos
mov
insl
fdivl
outsb
shll
inc
mov
push
ret
fiadds
mov
repnz
pop
and
pop
js
rol
or
pop
jp
sbb
mov
int
fstps
test
lea
iret
dec
testl
jne
xchg
xor
mov
cmp
subb
out
xchg
punpcklwd
mov
loop
test
out
insl
jno
add
xchg
add
or
loope
ret
mov
scas
stos
adcb
xchg
xchg
inc
lock
cltd
adcb
push
inc
pop
jnp
cmp
xor
adc
or
std
xor
pop
jmp
inc
test
dec
adc
loope
sbb
lahf
mov
fnstenv
dec
inc
cmc
jle
fwait
ret
or
inc
or
pop
sub
push
test
dec
out
and
jo
inc
test
mov
loopne
mov
fistpl
scas
in
mulb
mov
adc
inc
jge
popa
jecxz
lret
sbbb
mov
mov
pop
pop
push
push
shll
inc
std
lods
dec
filds
in
cmp
push
data16
add
ljmp
jp
mov
jmp
xchg
mov
xchg
push
or
lcall
je
or
mov
jae
daa
jne
mov
cmp
pop
fisttpll
imul
adc
es
fsubrs
into
adc
mov
loope
clc
adc
push
jo
pusha
dec
arpl
push
ja
jmp
repz
loopne
imulb
add
adc
adc
push
push
sbb
gs
in
imul
dec
adc
mov
in
and
rorl
xchg
and
inc
mov
dec
jb
mov
sbb
cmp
mov
sbb
fiadds
fisubs
sahf
pop
popf
std
out
ret
mov
jb
push
cmp
xchg
imul
inc
xchg
ja
mov
xchg
cmpsl
fsubs
or
and
fldcw
xchg
ljmp
add
div
out
push
adc
mov
fists
gs
sub
arpl
loopne
popa
in
inc
pop
mov
dec
leave
fidivl
add
mov
push
test
jecxz
add
pop
iret
pop
inc
mov
sbb
adc
leave
mov
lock
or
inc
adc
ficomps
xchg
or
and
or
inc
mov
ss
xchg
sbb
std
ja
nop
xorb
xchg
test
stos
ret
loope
rcll
cmp
ss
or
mov
das
loopne
cmpsl
jae
mov
pop
aam
call
cmp
or
outsl
and
clc
dec
add
out
pop
icebp
subb
inc
ss
stos
dec
aas
mov
adc
mull
ret
sub
cli
cmpsb
push
or
mov
mov
ljmp
push
test
daa
roll
or
push
int3
repnz
dec
fcmovbe
fidivrs
xor
out
pop
in
mov
test
xor
push
sub
pop
in
hlt
or
mov
gs
out
pop
je
lahf
jns
cmpsl
fcoms
mov
sub
sub
ret
inc
xchg
xchg
push
sub
mov
rorb
jo
or
add
and
pusha
movsl
jbe
jbe
insb
andb
jb
cmp
arpl
sub
cmp
pop
sub
mov
or
mov
fs
add
fwait
stos
push
fldl2e
fsts
leave
add
cmp
pop
and
push
mov
daa
lds
mov
aas
lret
lret
cmp
test
leave
sub
lahf
jbe
add
arpl
sub
cmp
hlt
movb
in
clc
rolb
xor
xor
or
arpl
subb
pop
shll
mov
push
les
mov
cmp
mov
mov
jle
xor
cmp
mov
out
xchg
addb
lods
fs
and
dec
sti
test
pusha
inc
movb
mov
stos
lcall
out
ds
push
xchg
jecxz
sub
and
cltd
das
out
imul
repnz
fmull
jbe
movsl
icebp
mov
push
js
mov
mov
stc
imul
inc
xchg
inc
cmp
gs
dec
dec
adc
popf
adc
movsb
imul
pop
lods
int
icebp
in
mov
add
in
jle
loop
out
xor
in
mov
sbb
pop
out
mov
inc
jb
xor
ja
in
dec
popf
int3
push
mov
cmp
scas
add
push
out
jbe
fbld
pusha
adc
cmp
fwait
pop
out
push
lock
and
adc
and
imul
rorl
add
mov
mov
aas
addr16
jmp
popf
in
je
dec
push
je,pn
ljmp
sub
or
cmc
inc
sbb
subl
mov
adc
fistpl
aad
add
dec
out
int3
mov
jg
aam
add
mov
pop
test
out
testb
lds
dec
mov
push
inc
cli
adc
insb
xor
push
adc
jp
push
mov
cs
inc
cmp
in
pop
enter
xchg
lcall
imull
adc
mov
nop
jnp
inc
inc
mov
je
xor
mov
shr
and
dec
add
lods
lcall
mov
cmp
dec
and
fstpt
icebp
push
jnp
sub
xchg
shrl
fsubrl
pop
fucom
fwait
xchg
mov
loopne
adc
cmp
movsl
xor
mov
push
jle
in
xor
jo
and
jnp
lods
push
or
mov
adc
mov
lods
and
hlt
out
pop
add
mov
fsubs
fdivs
cmp
sahf
and
inc
test
jo
jne
adc
iret
iret
rol
push
adc
ja
dec
add
bnd
popf
adc
sub
cmc
cmp
insb
arpl
sub
cmp
adc
push
cmpsb
and
push
mov
push
scas
std
cmp
fdiv
cmpsl
sbb
outsl
popf
in
ret
hlt
in
daa
xchg
cmc
lds
mov
in
movsb
mov
pop
pop
int
adc
test
pop
bound
cwtl
xlat
std
jecxz
mov
lcall
lods
push
inc
inc
pop
mov
incb
mov
mov
push
pop
mov
jg
or
xchg
dec
sbb
push
in
fnsave
jno
int
push
add
in
test
adc
imul
jb
imul
lods
lret
and
mov
sbb
mov
insb
nop
inc
test
cltd
dec
and
mov
outsb
pop
pop
fildl
int3
inc
leave
call
pop
jmp
jnp
outsl
fdivp
jle
sub
aaa
cmp
insl
mov
push
sub
out
xor
popf
shl
roll
dec
mov
arpl
xor
mov
lock
push
daa
jge
pusha
fcmovu
shlb
mov
push
lret
fmull
xchg
mov
fstps
aad
cmc
jb
xor
mov
mov
adc
into
das
shll
push
sub
loope
popa
xlat
xor
xchg
push
jmp
movsb
mov
nop
sub
and
test
jns
jmp
jne
push
jnp
mov
lcall
xchg
or
lret
inc
lock
ds
sbb
and
pop
in
cmp
stc
xor
movl
addr16
jbe
fnsave
push
pop
mov
pop
shrb
rclb
sub
adc
jle
mov
adc
ja
jnp
sbb
mov
das
loopne
xchg
fstpl
icebp
and
mov
cmp
mov
and
cmp
xchg
mov
xor
or
fsubrl
adc
shlb
negl
sarl
adc
xor
enter
lret
rclb
iret
mov
std
mov
sub
rorb
xor
sbb
out
inc
sbb
das
inc
aad
test
xchg
lret
in
mov
mov
das
add
int3
jae
adc
daa
int3
rcl
cwtl
add
mov
scas
or
lods
lret
pop
mov
imul
jns
mov
scas
neg
pop
sahf
clc
dec
andnps
pop
cmp
aad
adc
dec
dec
push
adcl
leave
jmp
rolb
sbb
rcrl
xor
in
mov
inc
mov
sti
dec
jmp
fldt
js
mov
cwtl
sbb
imul
call
stos
sbb
dec
jmp
fldt
js
mov
cwtl
sbb
imul
call
stos
push
fwait
push
mov
sti
dec
ljmp
push
sub
jnp
imul
enter
or
cmp
dec
jmp
pop
call
aam
mov
or
or
jecxz
mov
fstpt
lret
or
sbb
cmpsl
lcall
stos
in
inc
mov
imul
cli
or
sub
sub
fstpt
lret
or
sbb
push
jp
dec
mov
mov
imul
cli
or
cmp
sub
fstpt
lret
or
sbb
push
jp
dec
mov
cltd
push
ljmp
pop
jne
pop
mov
mov
mov
jne
add
pop
and
fsubrp
xchg
mov
mov
cmpsl
and
aas
mov
test
adc
adcl
lret
xor
or
cmovne
pusha
add
stos
pop
out
dec
mov
xchg
mov
mov
out
push
cmp
pusha
out
sbb
iret
mov
dec
daa
cmpsl
aas
mov
mov
mov
sub
sbb
xor
add
out
adc
leave
ljmp
je
add
lret
xlat
add
leave
inc
xchg
jecxz
aam
add
xor
std
pop
dec
dec
jne
mov
mov
cmp
out
cmp
or
sbb
push
jp
dec
mov
mov
imul
cli
or
cmp
insl
imul
mov
mov
or
ficomps
stos
sub
push
mov
loop
jmp
cli
dec
test
mov
cmpsl
outsl
mov
mov
aas
into
xor
or
mov
cmp
jle
popf
cmpsb
pop
scas
jg
lcall
es
pop
stos
stos
pop
mov
imul
cli
or
cmp
sub
fstpt
lret
or
sbb
push
jp
dec
mov
mov
imul
cli
or
cmp
sub
fistpl
jecxz
xchg
xor
inc
sti
dec
push
adc
cmp
mov
subb
cltd
adc
js
mov
shrb
out
test
sbb
ljmp
sbb
mov
out
add
jae
cmpsb
mov
icebp
pop
pop
and
mov
movsb
call
movd
or
or
imul
and
stos
cmp
jb
and
divb
fwait
cmpsl
sub
and
mov
jmp
cmp
stos
jno
pop
sub
mov
aad
lret
shlb
and
mov
push
jmp
test
lret
dec
hlt
inc
push
mov
jp
cmp
fwait
loop
add
pop
fsubrl
outsb
cwtl
loopne
xchg
cmpsl
bound
int3
and
lods
fcomps
mov
movsl
jge
pop
shrl
adc
outsb
push
jle
mov
into
sbb
aas
rcr
int3
adc
jmp
jns
jnp
jnp
adc
sub
xchg
adc
sub
rolb
jle
inc
insb
add
cmpsb
adc
push
mov
push
sti
int
mov
adc
fcmovb
xor
in
nop
movsl
call
mov
push
push
jae
imul
mov
add
mov
lahf
out
xchg
add
inc
cs
jl
sbb
and
enter
stc
xor
inc
hlt
push
out
push
inc
mov
or
arpl
icebp
scas
mov
add
test
movsl
sbbb
jg
stos
rorl
dec
sub
jmp
lods
cmp
insb
cmpsb
sub
andl
dec
scas
inc
xchg
loopne
cmp
rolb
jl
test
adc
adc
mov
and
stc
ret
in
imul
cmp
addr16
inc
mov
bound
pop
sarl
cmc
popf
lcall
jle
push
jo
pusha
test
jmp
dec
popa
mov
sbbl
jbe
jne
ss
stos
lods
jns
aam
sbb
data16
scas
pushf
pop
inc
inc
sbb
ss
cmpsb
jne
adc
mov
mov
sbb
sar
xor
addr16
leave
pop
lods
insb
icebp
pop
mul
fstps
es
mov
dec
push
jnp
cmp
les
repz
lret
jge
pop
pushf
mov
dec
movsb
cmc
pop
ljmp
aas
dec
pop
jnp
cmp
cmp
clc
into
in
inc
loop
dec
cmpsb
test
push
dec
xor
push
inc
fistl
add
iret
scas
push
xchg
pop
into
in
mov
cmp
jecxz
xchg
mov
cmp
sbb
cmpsb
iret
cmp
pop
addl
sub
adc
inc
test
mov
sahf
in
mov
iret
sbb
xor
imul
ret
stc
push
jmp
xor
mov
je
rcr
or
cmp
add
mov
pop
and
xor
push
in
jbe
sub
xor
js
mov
xchg
push
push
or
sub
jne
movsl
out
xlat
mov
or
aas
inc
sti
and
xor
sbbl
pop
pop
jle
ss
xlat
stos
nop
add
jge
jno
and
or
adc
ficoms
subl
sbb
pop
stc
add
stc
test
sub
cli
cmp
pop
daa
int3
dec
rcrl
adc
inc
aad
push
push
sarb
iret
and
and
mov
lds
sbb
lret
bound
xchg
fidivl
rclb
bound
cmp
cmp
cmc
fwait
mov
fistl
xchg
adc
sarb
ljmp
clc
mov
fadd
xchg
mov
ss
cmp
push
dec
inc
jle
dec
ljmp
in
push
mov
hlt
adc
and
push
sbb
or
outsl
add
bound
and
stos
push
fldcw
push
jge
jns
cmc
adc
aaa
in
sbb
test
and
cmpsb
push
ret
push
orb
int3
xchg
cmpsb
aam
in
andl
sarb
int3
int3
sbb
faddp
pop
jae
fsubp
xor
cmp
pop
in
fisubl
push
push
xchg
stos
movsb
xchg
jmp
icebp
jp
enter
push
lock
xor
jecxz
mov
pop
movsb
xor
or
popf
xchg
push
push
sbb
xchg
push
in
inc
lret
jnp
jb
je
push
imul
cmp
shrb
inc
cltd
ficoms
adcb
loope
pop
xchg
mov
shrl
out
inc
adc
and
xor
hlt
inc
rorb
mov
adc
mov
push
cmp
mov
xchg
push
arpl
lcall
fildl
and
inc
dec
mov
fs
mov
pop
loopne
mov
ss
idiv
dec
dec
outsl
fnstenv
push
pop
mov
imul
lret
pop
pop
in
sub
aam
into
jp
or
pop
outsb
or
push
cs
outsl
sbb
scas
repz
xlat
ss
psrad
push
mov
les
push
sarb
loopne
int
data16
nop
cmpsl
add
movsl
repz
inc
mov
pop
mov
cli
icebp
test
cmpsl
insl
inc
cli
mov
cmp
mov
repnz
dec
loop
dec
movsb
mov
fistpll
push
imul
idivb
nop
and
lods
in
cmp
adc
dec
lock
fisubs
in
xchg
sahf
xor
jge
and
sbb
je
inc
push
inc
xchg
js
xchg
mov
adc
fimull
sbb
pop
lods
xchg
test
push
or
xchg
outsl
lahf
push
popa
outsl
and
fs
xchg
or
stc
xchg
sub
mov
sarl
test
and
inc
aad
fs
loop
pushf
dec
sarb
roll
push
or
push
repz
mov
idiv
aaa
std
das
inc
in
stos
pop
mov
arpl
lahf
rol
jge
adc
or
repnz
adc
xor
and
xchg
addr16
cmp
outsl
fwait
iret
rolb
mov
jb
add
in
les
addb
lea
or
pop
pusha
pop
dec
mov
out
or
scas
mov
and
adc
mov
inc
and
inc
stos
mov
fdivp
or
adc
movsl
dec
int3
stos
fmul
mov
fdivl
or
cli
push
xchg
dec
inc
jg
cmc
cmc
sub
push
jno
pop
push
es
mov
and
sbb
scas
mov
xchg
in
jle
and
sub
dec
add
jo
rorl
jne
xchg
adc
mov
outsb
adc
shr
add
loope
pop
sbb
outsl
sbbl
fisttpl
nop
push
cmp
inc
pusha
inc
or
jne
sub
xor
cmpsl
lea
jg
mov
cwtl
add
jnp
nop
das
pop
or
loopne
and
sarl
adc
int
mov
sub
fst
call
lcall
sub
mov
fcompl
test
sti
add
mov
stos
adc
fsubl
leave
xchg
push
pop
shlb
push
in
and
mov
mov
subl
pop
fcomi
pop
daa
mov
fdiv
neg
mov
lds
mov
xor
add
sub
and
pop
dec
outsl
sahf
mov
pop
icebp
mov
rcl
xor
cmpsb
das
test
addr16
push
lods
ret
push
add
mov
push
sub
repz
enter
jno
cmp
dec
xchg
mov
call
test
daa
sub
pushf
mov
dec
cld
fnstcw
fisubrl
mov
aaa
jnp
cli
insl
shlb
ja
inc
inc
inc
loop
loope
mov
and
or
sahf
add
inc
mov
push
nop
aaa
outsl
jbe
add
inc
mov
sahf
mov
clc
inc
lds
fwait
mov
xchg
idiv
pop
repnz
pop
mov
mov
imul
loop
sti
mov
sarl
repnz
cmp
iret
inc
xor
inc
push
shrl
xor
cmpsb
imulb
mov
lret
sbbb
stc
jecxz
adc
loop
sahf
sbb
adc
leave
dec
mov
and
ficoms
xor
scas
aad
iret
cli
pop
and
mov
fptan
adc
sbb
int3
add
stos
mov
fwait
mov
cmpsb
out
add
js
cmpsl
es
inc
mov
or
cmp
xor
cmc
fisubl
mov
sbb
xchg
jge
lock
dec
mov
xor
outsl
bound
arpl
push
imul
xchg
dec
ror
rcr
xchg
adc
repnz
mov
mov
out
not
push
jecxz
pop
js
lea
loopne
inc
idiv
fnclex
aam
xchg
arpl
inc
insl
jmp
dec
xlat
push
roll
jns
push
and
es
sub
or
aaa
mov
stos
jp
lock
hlt
fwait
movsb
cmp
sahf
subl
adc
jnp
mov
mov
or
daa
cmpsl
imul
xchg
je
sub
dec
jle
adc
mov
frndint
and
jle
out
mov
xchg
addl
cmp
sbb
mov
pop
jge
jno
add
cmc
push
dec
add
xchg
cld
rorb
mov
jge
insb
push
dec
cmpb
xor
mov
jecxz
test
lods
push
hlt
shll
jns
frstor
pop
mov
push
inc
sub
jl
push
test
and
mov
mov
mov
outsl
jns
xchg
pop
scas
imul
imul
mov
insl
dec
mov
xchg
dec
aam
xor
sahf
lcall
inc
mov
rcrl
hlt
dec
test
pop
in
add
fxch
push
out
xor
mov
orb
fs
pop
cld
imul
push
add
or
test
dec
xor
mov
incb
aas
repnz
aaa
mov
out
in
push
test
push
shrl
pusha
dec
shrl
adc
icebp
adc
ret
sarb
or
jns
sub
mov
sbb
jbe
add
inc
fldl
test
mov
fwait
jge
popa
stc
push
pushf
into
inc
xor
into
or
xchg
roll
or
mov
movsl
scas
jnp
fldz
pop
mov
jmp
idivl
mov
ljmp
inc
enter
pop
xchg
mov
or
mov
or
lcall
lahf
jecxz
repnz
mov
lret
adc
push
fcoms
xor
xchg
jp
hlt
popf
or
push
out
mov
addr16
outsl
and
pop
bound
add
push
test
or
out
mov
push
xchg
xor
fnstenv
out
std
add
fldt
and
pcmpeqw
cld
ret
dec
das
mov
add
inc
push
dec
dec
lods
mov
pop
xchg
xor
jnp
pop
ret
jle
in
sub
adc
mov
sti
xor
jnp
and
and
stos
xor
inc
cs
pop
jbe
mov
cmc
add
mov
sqrtps
jp
sub
test
mov
sbb
mov
scas
xchg
jb
rcrb
sbb
inc
sub
in
xor
xchg
jmp
fidivrs
shlb
jb
leave
sahf
imul
dec
orl
inc
es
or
scas
xor
xor
sbb
jb
cwtl
xlat
adc
cmp
adc
mov
cmpsw
sahf
lea
orb
jecxz
dec
aas
push
sub
push
jl
filds
iret
bound
clc
xor
dec
sub
pop
out
xor
mov
popf
sub
repnz
mov
add
das
ljmp
mov
dec
add
and
xlat
mov
out
sub
sahf
mov
cmp
jle
mov
hlt
mov
push
mov
insl
cmovns
call
inc
into
daa
sti
call
into
add
mov
js
test
mov
mov
and
push
clc
mov
imul
pop
shll
aam
stc
mov
pop
fs
sahf
popl
rcll
mov
ret
fimull
lcall
mov
sbb
repz
enter
out
jecxz
push
push
out
jno
pop
test
mov
jns
rorb
ds
jl
cmp
mov
add
push
pop
stc
jb
add
push
sbb
shll
push
pop
lock
mov
rcrb
cmp
scas
out
dec
mov
scas
cs
mov
lahf
sbb
mov
cmc
cmp
in
test
xor
cli
inc
imul
aas
or
lahf
out
jb
gs
mov
xor
lret
xchg
lock
nopl
sbb
sub
mov
mov
jb
inc
inc
push
push
dec
mov
sti
clc
pop
add
cmc
sub
xchg
xor
jbe
and
adc
mov
or
mov
scas
cmp
add
nop
test
push
sbb
mov
xor
xchg
sub
adc
pusha
push
test
cltd
push
les
push
rcll
cmpsl
mov
aam
adc
bound
jo
rcr
out
dec
push
mov
xlat
aas
cmp
nop
jae
shr
cmpsl
ficompl
inc
pop
adc
les
and
push
push
bound
stos
or
mov
popf
sbb
stos
push
mov
mov
sbb
inc
std
mov
xchg
add
inc
mov
xchg
call
repz
dec
add
roll
pop
lock
js
cmpsl
mov
data16
pop
ret
loopne
scas
fs
arpl
test
fbld
shl
xor
dec
jnp
and
cwtl
arpl
fistpll
push
in
bnd
movsb
das
pop
cmp
mov
jmp
sarb
mov
mov
add
xchg
popl
jp
ja
and
mov
jo
jne
adc
sbb
adc
xor
test
pop
adc
adc
dec
enter
scas
adc
scas
jbe
fwait
xor
dec
xor
cmc
push
subb
iret
ljmp
fnstsw
xchg
lods
and
inc
int
dec
addl
push
int
bound
dec
cltd
cmp
rcl
cmp
sbb
xchg
or
and
sub
inc
aad
sub
ret
mov
and
rcll
add
pusha
stos
jbe
pop
call
adc
cmp
aad
or
test
jecxz
shlb
push
loope
fcomps
imul
sahf
fs
scas
out
inc
push
jl
shr
ds
lods
loop
in
pop
jmp
mov
gs
lahf
gs
sbb
lock
pop
pushf
jae
stc
dec
test
enter
and
ret
nop
sbb
mov
inc
dec
int
movsl
xchg
and
sbb
pop
mov
outsb
pop
outsl
ljmp
pop
out
push
push
repz
inc
adc
mov
ror
mov
ja
mov
jae
sbb
sub
fisttpll
jmp
pop
xlat
dec
mov
mov
mov
nop
cmc
mov
dec
dec
xchg
pop
loop
mov
xor
icebp
cld
push
push
shll
pop
lahf
fbstp
inc
fcomp
cs
hlt
insb
xor
lret
aas
or
mov
xchg
pop
lret
ja
push
xchg
mov
inc
call
dec
xor
lock
push
mov
nop
pop
insl
push
add
pop
rclb
dec
sub
fcomps
popf
cmp
push
pushf
xor
stc
adc
cld
adc
xor
and
out
mov
ret
jge
and
dec
sbb
push
jnp
out
xchg
dec
ret
test
loope
outsb
fstpt
sbb
clc
xchg
mov
jne
mov
add
and
inc
das
out
lcall
inc
out
sub
sbb
movsb
fs
adc
fnsave
jp
mov
popa
sahf
fcoml
and
xchg
jl
inc
cmp
inc
and
xchg
ds
out
fildl
shrl
imull
js
aad
jecxz
sahf
das
lret
call
out
xlat
negb
or
sbb
or
dec
push
rcl
mov
push
cmp
lret
inc
xlat
pop
inc
inc
stos
fsubrs
aad
sub
push
sub
adc
push
jb
js
push
mov
mov
cmp
movsl
cli
popa
cmpsl
jge
inc
stos
and
lods
dec
test
jl
ret
and
cmp
pusha
test
ss
and
adc
out
cmpsb
mov
ds
push
xchg
cli
add
mov
clc
cmpsb
push
mov
cmp
mov
or
lds
arpl
pop
test
xchg
sbb
jo
addr16
and
dec
or
mov
jmp
dec
scas
pop
push
int3
cmp
rolb
or
roll
jo
sbb
rcrl
inc
cmp
pop
push
and
call
inc
outsl
and
lret
sbb
sbb
into
pusha
jmp
push
push
int
jne
ret
mov
xchg
inc
fstpl
inc
ret
lock
mov
or
sub
loope
scas
pop
imulb
iret
fsubrl
sbb
sbb
outsb
xchg
out
cmc
xor
imul
lcall
fiadds
cmpl
cli
dec
pop
add
sub
push
adc
mov
popf
mov
sarl
lret
xchg
jnp
sub
inc
incb
or
mov
xchg
idivl
mov
mov
sti
ss
jle
test
inc
mov
jo
push
aam
cli
push
xchg
es
out
push
inc
mov
out
mov
fwait
sbb
aaa
test
sub
jl
test
push
add
mov
add
sub
sub
insl
test
sub
add
scas
fnstsw
icebp
jns
mov
out
mov
lret
sub
cmpsl
xorl
adc
pusha
xor
push
and
clc
in
push
aad
or
sub
es
scas
imul
mov
js
sbb
pop
dec
mov
leave
inc
pop
add
scas
mov
mov
movsl
cmpl
pusha
sbb
add
shrb
jecxz
push
push
cld
adc
pop
jbe
xchg
sub
ja
outsl
mov
and
pop
push
arpl
cmc
mov
mov
movsb
jbe
nop
movsb
imul
jl
bound
idivb
shll
mov
cmp
aas
or
mov
xchg
shrl
int3
stos
xchg
out
shll
ffree
movsl
into
sti
in
adc
insl
jg
arpl
mov
mov
mov
push
fsubl
imull
inc
or
cmc
outsl
rcrl
xorl
fwait
ljmp
movsl
adc
cmp
adc
jns
xorb
push
jp
enter
shrb
xlat
scas
enter
pop
sahf
ret
shl
hlt
pusha
nop
mull
rcrl
xor
call
mov
jmp
mov
out
xor
inc
mov
and
mov
dec
cld
pop
pop
lret
cmpsl
js
xlat
scas
addb
test
dec
in
mov
popf
aaa
clc
fcomip
fisttpll
ds
xchg
pop
mov
dec
pop
xor
mov
xorb
push
int3
imull
movsl
and
loopne
mov
mov
clc
jp
xor
or
shl
int
push
test
add
pop
leave
xchg
rorb
dec
pop
xor
lock
pop
popa
sbb
mov
push
mov
mov
cmp
push
xchg
push
xchg
sbbb
unpcklps
ja
insb
dec
test
lods
mov
xchg
into
xchg
mov
les
repz
stos
jp
pop
mov
sahf
inc
xchg
testl
add
and
icebp
mov
dec
shr
ja
ror
sti
ss
stos
cmp
cltd
fmuls
and
jbe
dec
and
jae
adc
jp
pop
pop
sub
cmpl
dec
ja
push
lret
fisubs
outsb
dec
mov
jle
jo
sbb
mov
in
mov
xchg
lret
mov
inc
ret
xchg
setne
or
js
mov
int3
sbb
rorb
call
je
or
stos
inc
dec
sub
inc
aas
data16
or
and
and
orb
stc
sbb
lds
cmp
cmpsl
shrb
xor
cmp
clc
pusha
lret
fadds
icebp
addl
ss
adc
and
test
dec
xorl
sahf
fmuls
mov
mov
popf
pop
cmp
icebp
push
xor
lock
pop
sub
pop
fldt
lcall
sub
cli
pop
mov
sub
xchg
inc
add
jmp
fwait
jp
dec
mov
mov
imul
cli
or
cmp
sub
fstpt
lret
or
sbb
push
jp
dec
mov
mov
imul
cli
or
cmp
sub
fstpt
jmp
fwait
jp
dec
mov
mov
imul
cli
or
cmp
sub
fstpt
lret
or
sbb
push
jp
dec
mov
mov
sbb
xchg
mov
mov
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pop
insl
dec
cmpb
mov
dec
mov
into
push
and
and
bound
cmpb
mov
ds
adc
add
adc
and
jb
bound
push
andb
mov
es
mov
adc
sub
and
bound
xchg
and
jle
sbb
dec
cmp
jmp
mov
mov
xchg
mov
lahf
cmp
iret
mov
push
cmp
pop
xor
push
cmp
js
push
xchg
out
add
adc
into
xlat
sahf
pop
mov
insl
mov
in
sub
fldl
push
mov
arpl
mov
ret
mov
dec
xchg
loope
lar
stos
das
sbb
lret
rclb
frstor
mov
push
stos
ret
arpl
dec
mov
repnz
jae,pt
fsubp
ficomps
push
and
mov
inc
jb
popf
mov
scas
bound
mov
imul
enter
adc
andl
xor
add
aaa
mov
xchg
push
xchg
jle
outsb
mov
ds
sti
or
sbb
sub
cmp
jb
push
xor
sub
insl
test
jae
cs
fidivrs
jp
mov
aas
jmp
int3
jb
rdtsc
ljmp
jb
push
lock
jge
popf
imul
sahf
and
sub
cmp
and
adc
push
xlat
push
mov
loop,pn
adc
add
xor
and
jb
bound
dec
cmpb
mov
ds
adc
add
xor
and
jb
bound
popa
add
jb
jp
pop
push
pop
test
in
outsb
mov
push
pop
imul
lds
add
cmc
outsb
or
pop
lods
and
push
cmp
pushf
or
lahf
or
xchg
insb
aaa
imul
xchg
out
outsl
into
inc
mov
mov
stos
pop
xchg
push
xlat
mov
dec
push
cmc
fdiv
lods
dec
push
fiadds
pop
dec
shll
in
adc
insb
xchg
cmc
loop
out
into
sbb
in
push
insl
outsl
pushf
mov
dec
cltd
adc
mov
ss
push
test
cld
add
repz
push
add
negl
dec
ja
testb
xor
dec
push
in
test
fisttpll
and
pop
sbb
icebp
clc
je
mov
cli
mov
or
push
add
aas
mov
sahf
ds
in
in
mov
fmull
adc
jno
testb
arpl
sar
test
lock
push
mov
adc
inc
adc
pusha
fadds
jge
std
lret
sbb
cmpsb
pop
or
inc
jmp
fwait
aad
cmp
or
or
int3
jg
insb
stos
and
cmp
aaa
cmc
inc
leave
mov
sahf
pushf
loop
loop
inc
pop
inc
mov
lods
jne
jno
xlat
out
clc
mov
fisubs
jno
js
gs
push
iret
pushf
jnp
int
inc
data16
jno
stos
out
mov
push
mov
daa
pushl
mov
xchg
xor
ljmp
mov
adc
pop
out
inc
in
xchg
xchg
fisttpl
cmp
fcomps
jge
or
or
mov
fwait
inc
push
les
frstor
push
cmpsb
sub
out
shl
adcl
leave
fnstenv
xor
mov
hlt
sbb
fimull
stc
adc
test
mov
rolb
fwait
je
pop
and
xchg
pop
stc
int
xor
sahf
pop
test
mov
xorb
lret
pushf
add
lret
add
call
xchg
pop
clc
cmp
fld
das
mov
aam
cmp
xor
push
push
mov
adc
int
addr16
into
sarb
bound
repnz
mov
notl
arpl
fstpt
xchg
xchg
xchg
add
scas
add
sti
pop
jmp
mov
out
sub
mov
js
mov
push
dec
roll
pop
fistpl
jbe
sahf
nop
mov
jg
and
js
cmp
cmp
jae
push
call
xlat
xor
jmp
xor
push
or
inc
fdivrl
cld
xchg
mov
fucom
hlt
inc
inc
dec
test
lds
xorb
mov
xor
or
lods
sbb
sbb
pop
dec
stos
push
push
sub
int3
jg,pn
inc
hlt
adc
mov
dec
scas
push
push
lods
popf
in
adc
daa
out
mov
add
mov
insl
mov
jae
clc
and
xor
adc
push
dec
ficoml
push
scas
lcall
xor
in
mov
push
inc
call
daa
mov
sahf
out
leave
icebp
push
xchg
outsb
pop
inc
bound
sub
push
test
mov
imul
gs
decb
sub
fwait
int3
and
mov
sub
jge
call
jbe
pmaxsw
push
mulb
notl
adcl
mov
add
inc
mov
sbb
mov
lcall
mov
cwtl
cmpsb
lds
sbb
cmpsl
mov
mov
out
in
push
movsb
pop
xchg
lret
adc
test
stos
dec
ja
outsb
sub
stos
jmp
ret
inc
add
and
insl
add
add
cmpb
push
ror
cmp
mov
aam
enter
inc
pop
inc
dec
xchg
aad
push
outsb
sub
jl
fwait
icebp
add
pop
fsubrl
sbb
push
mov
insl
xchg
sbb
dec
push
inc
sti
das
or
inc
inc
out
mov
lods
cmp
test
aas
leave
dec
and
jno
popa
or
out
sbb
jmp
push
jge,pt
movsl
jl
aad
filds
xor
jg
inc
push
mov
pushf
mov
push
rcl
and
adc
fcomp
jle
pop
sub
test
imul
adcl
dec
pop
sub
sbb
mov
cld
cmc
dec
or
mov
ss
out
adc
cmc
int
test
xor
mov
loop
and
adc
jo
add
pop
xchg
adc
outsl
push
dec
das
nop
sbb
push
hlt
sub
les
lods
jecxz
adc
hlt
clc
movsb
rorl
mov
sbb
cmpsl
inc
or
stc
mov
mov
push
out
popa
adc
pop
cmp
fists
sub
fsubl
fsubr
xor
pop
testl
test
clc
fldl
jp
insl
loope
mov
ret
int3
xor
jno
outsb
jle
cmp
lret
mov
mov
sbb
rcl
test
adc
ret
adc
adc
and
fidivl
mov
adc
pop
bound
mov
clc
icebp
pop
sbb
fists
mov
mov
mov
dec
movsl
popa
jmp
cmc
pop
jo
fsubl
cmp
popa
nop
mov
jno
pop
and
lods
or
pop
out
xor
xor
dec
xchg
xchg
inc
mov
xor
adc
xchg
jp
pop
pop
out
push
pop
adc
dec
fistps
test
or
ss
pop
mov
pusha
sbb
int3
and
clc
arpl
lods
gs
pop
sbb
repz
and
jle
add
xor
xor
les
lea
push
sub
dec
loope
mov
cmc
push
enter
jp
jno
enter
cltd
movl
sub
sub
pop
mov
mov
xchg
mov
loop
or
xor
andb
shl
and
push
fisubrs
popa
sub
push
into
jns
enter
and
jmp
clc
xchg
gs
jbe
cmp
cwtl
jb
inc
jp
es
addl
mov
leave
shll
ja
scas
mov
in
mov
sub
dec
icebp
cs
lahf
or
in
push
adc
xchg
mov
lds
rcrb
or
adc
mov
mul
out
test
push
and
fidivrs
jmp
fwait
ljmp
sub
add
js
mov
pop
push
aaa
sbb
aam
or
aad
jo
add
frstor
gs
lret
leave
dec
mov
cli
test
xor
imul
mov
xor
movsb
notl
push
stc
sahf
insl
mov
fdivrs
mov
jl
fisubl
mov
lods
in
sub
jmp
jmp
xchg
lea
in
cmpl
mov
jg
movsb
pop
addr16
pop
scas
jae
les
add
pop
lods
fcompl
rolb
sarl
rcrb
mov
xor
xchg
add
adc
xor
mov
dec
mov
or
jns
stc
aaa
sbb
lret
in
cmp
adc
loop
sbb
add
cmpsb
push
mov
lock
jg
shll
xchg
pushf
out
outsb
mov
cmp
pop
mov
mov
mov
jmp
mov
lods
pop
jns
mov
inc
ret
pop
cli
xor
test
insl
mov
popf
outsb
inc
in
pop
and
mov
mov
repz
or
push
rclb
daa
xchg
cmp
int3
test
pop
in
sbb
jle
jbe
inc
push
mov
sub
mov
mov
jecxz
adc
mov
insl
mov
test
mov
je
repz
and
aad
inc
repz
xchg
and
jge
call
mov
pop
sub
inc
pop
dec
cld
jmp
shr
cwtl
lods
aam
jmp
ret
popa
push
popl
xchg
add
pop
pop
movsb
jbe
xor
dec
incl
mov
stc
fstpt
mov
inc
dec
jg
arpl
xorb
lea
push
mov
xor
cli
jle
inc
rcrb
std
jbe
pushf
mov
cwtl
pop
push
lea
aaa
std
aad
and
adc
jno
mov
call
enter
jmp
fdivrl
stc
pop
stos
in
cmp
xlat
and
mov
dec
test
lahf
fimull
push
adc
idivb
dec
mov
cmc
mov
in
dec
in
mov
iret
stos
mov
mov
push
sub
jnp
and
mov
dec
dec
dec
adc
jp
push
mov
sbb
mov
add
lds
mov
jp
push
aaa
lds
rcrb
shrl
cmp
aaa
jo
pop
inc
sahf
enter
xlat
xlat
pop
negb
mov
cmp
and
testb
and
sub
sub
andb
xchg
fmuls
xchg
cmp
popa
sub
pop
aad
or
push
jo
mov
or
or
xor
cld
xchg
mov
fcmove
shll
or
push
mov
psubusw
or
mov
movsl
cmpb
mov
or
pop
ret
ret
js
mov
push
sub
stos
fildl
mov
xchg
lock
nop
cmp
out
clc
fsubl
pop
inc
fcomi
xchg
adc
mov
dec
notl
adcl
push
movsl
fdivrp
pop
imul
ja,pt
mov
repnz
repnz
xorb
inc
cs
rorl
adc
test
xor
sbb
andb
cwtl
lock
imul
lret
movsb
xchg
es
jmp
cmp
add
pushf
dec
mov
or
pop
cs
dec
iret
cmpsl
push
push
dec
jle
out
fisubs
lcall
mov
mov
jge
adc
dec
mov
mov
cmp
call
hlt
into
dec
arpl
jne
mov
sub
jae
test
lods
enter
dec
out
dec
pop
inc
ret
jge
insb
jbe,pt
mov
pop
mov
sbb
dec
add
xchg
sub
jo
push
add
hlt
xchg
mov
movsb
jnp
jbe
ficoml
or
dec
inc
lcall
inc
fwait
addr16
xchg
xor
mov
loopne
mov
mov
lods
fimuls
rolb
mov
push
leave
es
sbb
xchg
mov
inc
repnz
dec
nop
jle
sbb
xlat
outsl
xor
fisttps
adc
fadd
sahf
push
aaa
xchg
xchg
movsb
nop
mov
adc
jmp
pop
cmp
std
cmp
daa
sbb
or
mov
dec
loopw
bnd
mov
pop
jnp
pop
inc
mov
movsl
xlat
loope
xchg
add
jne
cmp
aaa
daa
push
mov
jnp
leave
or
rcrb
inc
aam
cmp
push
mov
les
loope
fwait
mov
roll
test
clc
jne
clc
repnz
stos
pushf
mov
cmp
lods
mov
rcl
xchg
loope
je
inc
rolb
push
sbb
mov
hlt
adc
movl
in
addr16
mov
xchg
shll
jecxz
cmp
mov
adc
push
popa
cmc
mov
push
mov
andb
xchg
dec
testb
into
adc
in
or
iret
pop
fisttpl
movsl
andb
scas
xlat
mov
sbb
popf
mov
mov
into
mov
bound
mov
int3
jo
jmp
test
cmp
adc
add
sbb
cltd
sti
aam
js
jp
shrb
sahf
jle
mov
push
push
xchg
cmp
dec
ss
cwtl
fsubr
adc
jmp
mov
call
mov
cmp
iret
mov
ss
lcall
sub
add
push
rclb
adc
pop
jecxz
std
call
mov
dec
mov
jl
mov
int
xor
pushf
test
inc
data16
lret
push
dec
mov
adc
pushf
stos
dec
lds
lahf
or
add
mov
and
or
cmpsl
or
xchg
roll
es
mov
sbb
call
sub
add
lret
data16
cmp
cmpsb
mull
mov
sub
and
pop
jo
pop
pop
mov
push
mov
dec
inc
xor
sub
fadds
mov
fdivs
fnstenv
push
ud1
mov
psubb
xor
inc
repz
stc
es
mov
test
fildll
jo
lcall
icebp
cmp
mov
lds
int
adc
pop
gs
inc
and
xor
adc
arpl
mov
fcomps
ficoms
outsb
cwtl
xor
iret
es
flds
dec
dec
jp
mov
imul
sub
subl
jae
jae
sbb
adc
mov
add
sub
lds
pop
xor
sahf
or
sarl
movsb
rolb
adc
push
int
sub
fiaddl
arpl
push
push
and
in
adc
mov
cmp
out
adc
xchg
add
or
push
cmpsl
adc
in
or
sub
push
mov
movl
pop
rolb
fistps
dec
cmp
sub
or
xchg
ror
lock
or
adcl
rorb
shl
xlat
or
inc
dec
aad
js
xchg
imul
jns
ret
stc
push
inc
int
ljmp
out
sbb
sbb
jo
lds
imul
in
jl
sub
idivl
or
cmp
out
loop
adc
cmp
mov
pop
das
aam
fwait
movsl
mov
mov
ret
inc
and
lds
mov
pop
fmulp
pop
orb
enter
out
xchg
repz
cmc
adc
pop
cli
out
cmpsb
mov
hlt
mov
andb
enter
inc
test
and
hlt
fisubl
imul
adc
gs
insb
addr16
mov
pop
inc
arpl
or
jge
mov
lea
ret
jge
cmp
test
mov
sbb
dec
mov
mov
shlb
push
sahf
pop
sub
cmp
popf
aam
loop
mov
test
mov
mov
shl
mov
jnp
scas
or
dec
pop
pop
addl
dec
cmp
addl
js
movsl
xor
mov
mov
add
dec
pusha
pop
jl
mov
push
gs
add
in
push
or
pop
dec
and
jl
mov
adc
lret
xchg
pop
and
or
mov
lds
inc
orl
or
ljmp
dec
hlt
adc
in
xor
dec
add
sbb
test
mov
cs
lock
test
aas
or
jge
lds
or
mov
ljmp
mov
pusha
fsubs
loope
or
dec
push
cli
mov
sbb
das
sbb
sbb
push
mov
into
inc
sbb
adc
mov
insl
add
sti
mov
js
in
xchg
adc
xor
and
xor
leave
and
sbb
pop
or
in
out
inc
add
xchg
iret
push
fisttpl
mov
xor
fistpl
dec
sub
xor
cmp
popl
iret
jae
pop
in
lock
jecxz
or
mov
test
cmpsl
mov
dec
dec
inc
cwtl
adc
les
inc
sub
jecxz
lods
fs
xorb
xor
inc
jg
xchg
jmp
jp
insl
push
mov
dec
and
dec
scas
jl
mov
xchg
clc
fsubrl
jmp
mov
repz
out
aaa
or
fistpll
aad
test
xor
inc
mov
cmpsb
inc
int
mov
int3
jnp
test
popf
test
jle
xor
xor
ja
jne
jge
daa
mov
mov
rorb
and
sub
notl
subb
inc
xchg
jecxz
sbb
popf
xor
cs
cltd
inc
addb
ret
mov
sub
js
fs
adc
sub
or
ret
cmp
xorb
pop
lret
mov
mov
mov
pop
outsl
push
fs
loop
fdivl
and
aaa
jb
mov
hlt
dec
and
mov
es
dec
mov
testl
jns
imul
inc
jne
outsb
or
xchg
xchg
es
push
and
or
sahf
cli
sbb
xor
xchg
mov
call
sub
fnsave
in
cli
sub
jne
and
pop
orps
loope
rorl
jmp
cld
sar
cmp
cltd
mov
jge
mov
add
pop
aam
aaa
in
mov
ds
hlt
sub
xchg
adc
out
fstpl
cmpb
sub
xchg
jmp
adc
int
jo
rorb
push
icebp
int3
xchg
xchg
cld
cld
mov
fsts
aam
in
aad
xor
subl
mov
mov
sbb
or
clc
push
or
insl
les
repnz
je
cli
ds
pop
mov
dec
out
icebp
xor
loope
inc
cwtl
jle
jg
xchg
inc
ljmp
xchg
or
aam
ja
or
sarl
xor
call
mov
xlat
shlb
pop
inc
sub
mov
and
subl
pop
and
mov
or
test
jecxz
rcrb
mov
stos
adc
fcmovnbe
das
mov
ds
adc
push
fprem1
mov
cmpsl
movsb
push
pop
scas
std
fistl
enter
insb
loop
sbb
xor
cmp
mov
pop
xchg
jmp
jb
adc
rcrb
mov
xor
or
dec
imul
in
cwtl
sarb
js
sub
aas
pop
ret
loope
push
adc
xchg
adc
ficomps
lods
out
sbb
add
or
pop
mov
hlt
out
insb
into
xchg
ljmp
pop
jo
popf
fcomps
retw
sbb
in
movsl
cmp
insl
int
lods
cmp
xchg
add
les
pop
movsb
inc
test
das
adc
in
and
mov
xor
cmp
movl
push
outsl
mov
and
sbb
cmp
mov
shll
mov
cwtl
dec
sub
test
and
xchg
pusha
sbb
nop
dec
lret
pop
jp
inc
sbb
ret
xor
ret
and
and
sbb
imul
jb
add
mov
es
mov
adc
inc
test
andb
mov
mov
repnz
out
outsl
sbb
scas
aam
pop
xchg
inc
mov
sbb
dec
pop
pop
loop
sbb
cld
jecxz
or
mov
cmpsb
out
loop
mov
push
pop
repnz
loopne
mov
pop
cmp
out
popf
aas
and
or
test
mov
pop
or
repz
test
or
out
pop
dec
ficomps
imul
sub
mov
hlt
push
mov
pop
pusha
cmp
xor
repnz
add
out
daa
add
xchg
add
shll
sbb
cmpl
stos
testb
dec
lret
pop
lods
out
out
les
loope
jmp
inc
push
test
jno
sbbb
divl
stos
or
lods
jns
ret
bnd
dec
jl
push
aad
or
jnp
mov
jne
and
in
jnp
xchg
cmpsl
push
sarl
imul
scas
cmc
lds
mov
nop
movsl
mov
push
rorb
outsl
xor
dec
xchg
add
xorb
jae
mov
ret
and
push
stc
mov
push
add
mov
adcl
ret
bound
pop
and
test
ds
arpl
and
cmp
loop
jp
mov
add
aaa
sbb
lret
insl
and
xchg
mov
lahf
and
mov
jb
sbb
fistl
and
push
scas
adc
mov
adc
sbb
sarl
dec
call
or
pushf
ss
sub
dec
xchg
daa
mov
mov
sbb
ficoms
mov
imul
fcompl
mov
pop
mov
arpl
shl
mov
je
outsb
mov
ds
adc
add
xor
and
jb
bound
dec
cmpb
mov
ds
adc
add
xor
and
jb
bound
dec
cmpb
mov
ds
adc
add
xor
and
jae
bound
dec
cmpb
mov
mov
adc
test
xor
push
jmp
lea
jg
insb
xchg
pop
mov
pop
mov
mov
or
fsubl
int3
xor
pushf
jae
subl
dec
mov
ret
sub
sbb
or
cld
add
jae
and
xor
inc
lods
push
pushf
and
into
mov
dec
roll
jecxz
repz
stos
iret
adc
fidivrs
adc
jae
andl
pop
int3
and
xor
cmp
idivl
jbe
mov
test
nop
aad
adc
adc
sub
in
mov
jmp
in
pop
and
mov
pushf
xor
sbb
subl
dec
insl
add
aas
pop
stos
in
in
leave
jecxz
into
lods
inc
jmp
cli
mov
outsl
mov
shl
insb
or
std
fsubr
jg
fdivl
arpl
lods
lods
popf
pushf
mov
andl
jl
rorl
movsb
xchg
testb
mov
stc
push
lods
scas
fs
cmp
adc
mov
ret
mov
pop
jecxz
cmp
iret
jbe
adc
cmp
xor
xchg
pushf
ja
jb
cmpl
pop
mov
push
rcrl
stos
repz
jbe
stos
and
xor
inc
cmpsb
push
scas
arpl
sub
xor
push
scas
inc
shrl
or
cld
mov
dec
test
and
popa
jmp
xchg
mov
dec
mov
xchg
pop
repz
jnp
data16
pop
lds
ret
cmp
push
int
adc
add
cmp
ret
sub
sbb
or
cld
add
adc
and
xor
mov
subl
dec
mov
ret
sub
sbb
or
cld
add
adc
and
xor
mov
or
sahf
adc
in
fistpl
fcom
sbb
jb
lods
xchg
je
cmp
mov
jl
leave
or
sbb
lret
push
sub
push
out
repnz
jb
add
push
cltd
idivb
arpl
dec
xlat
stc
in
mov
xlat
jg
ror
in
add
adc
pop
jge
cmp
repz
mov
sbb
xchg
push
loop
andl
data16
jno
mov
fisubrl
jns
out
sub
sub
icebp
out
iret
and
or
std
out
cmp
xchg
rorb
stos
jecxz
mov
ja
inc
aad
pop
xor
dec
mov
or
clc
sub
in
adc
cmp
xchg
sub
movsl
jmp
dec
icebp
sub
cmp
in
jecxz
push
outsl
fnstenv
sbb
std
cmpsl
int
adc
rcll
es
aad
inc
and
jge
insl
arpl
nop
out
and
popf
imul
sub
imul
jno
xor
xchg
lea
flds
call
cmp
loopne
fcomp
pop
sub
outsb
xchg
adc
test
jb
je
or
jmp
mov
push
stc
imul
lret
in
and
jl
mov
les
add
dec
dec
xor
sbb
pop
push
dec
popf
subl
fsubl
mov
movsl
test
push
add
enterw
ficompl
or
xchg
dec
rclb
cmpsl
push
rcll
adc
popa
addr16
insb
push
std
mov
insb
jmp
jb
sub
pop
push
test
sbb
mov
bound
mov
leave
mov
cmp
mov
fcoml
outsl
add
test
test
adc
xchg
push
in
mov
or
push
push
or
popa
or
aad
out
inc
cwtl
xor
mov
push
pop
mov
imul
dec
lods
add
inc
arpl
inc
xor
jl
lock
ss
insl
mov
ds
and
inc
int3
fstps
jg
enter
xchg
fucomip
push
cmc
test
mov
ja
sub
mov
jg
or
addr16
fs
mov
inc
mov
or
mov
scas
xor
mov
movsl
enter
nop
adc
sbb
jmp
jp
push
mov
aaa
ds
or
mov
hlt
repnz
fldl
in
sub
daa
mov
jns
bound
sbbl
or
ljmp
mov
test
lahf
push
gs
ss
in
sbb
dec
es
inc
push
pop
lahf
leave
inc
cs
ret
mov
mov
imul
mov
jl
push
jl
shl
push
xchg
cmp
sbb
cwtl
jp
testl
lds
in
rcrl
sarb
mov
lcall
jp
test
mov
xchg
addl
out
xor
cmpsb
fstpl
sub
in
lcall
mov
sub
stc
mov
pop
mov
add
in
or
mov
sbb
cmp
in
inc
out
int3
pop
shlb
loop
xchg
mov
cmp
xchg
lds
adc
mov
mov
dec
test
es
in
jg
jg
push
cltd
add
inc
hlt
aas
fs
adc
arpl
jmp
out
jp
or
lds
cmpsl
mov
and
fwait
in
out
dec
pop
push
and
std
cmp
loop
ljmp
outsb
jmp
dec
push
add
jb
add
aad
pushf
mov
leave
adc
fs
sub
lods
dec
adc
jmp
mov
lret
mov
xchg
add
pusha
arpl
loope
loop
rcrb
dec
add
aas
clc
lock
cmp
and
cmpsb
mov
in
push
and
push
adc
push
jmp
and
loopne
jg
inc
in
dec
pop
or
jg
enter
adc
pop
mov
test
popf
cmp
mov
or
jb
push
jns
hlt
cmp
jecxz
xchg
adc
lds
mov
cmp
pop
xchg
ret
outsb
rcr
insb
incl
imul
adc
aad
mov
jecxz
adc
ja
fldl
mov
jne
mov
les
push
repnz
sti
dec
dec
add
inc
ja
shrl
push
fidivrs
mov
jno
in
cmc
mov
push
test
push
mov
test
mov
mov
xor
faddl
jecxz
or
int3
jb
pop
out
in
imul
jle
sbb
jbe
add
jp
mov
jbe
push
mov
ret
lods
hlt
xlat
pop
in
xor
in
shlb
imul
lock
mov
xchg
jno
push
sub
sub
xchg
push
sbb
fwait
mov
inc
mov
sti
js
add
jne
fld
outsl
sub
fldt
sbb
idivb
jbe
insl
mov
cmp
pop
flds
jo
jns
sub
or
adcl
daa
out
dec
scas
in
popa
icebp
aaa
orb
mov
jge
int3
or
mov
cmp
mov
inc
mov
and
dec
mov
mov
mov
nop
inc
xchg
cwtl
shrb
movsl
dec
jns
imul
and
ror
lret
mov
scas
push
ss
adc
xchg
pop
arpl
je
jmp
or
xchg
fnstenv
into
fs
xorb
adc
sub
jns
inc
ret
pop
mov
mov
loope
mov
pop
clc
or
sahf
outsb
gs
dec
mov
je
jo
cmp
xorl
dec
mov
shlb
negb
pop
adc
je
push
cmp
mov
pop
and
cmp
xor
cli
sahf
lea
outsl
lock
fidivrl
push
dec
and
add
jle
jns
push
test
sub
pusha
jae
mov
inc
arpl
mov
jbe
arpl
outsl
fsub
jle
outsb
aas
ret
pop
mov
paddd
add
add
mov
int3
or
cmp
cli
jns
mov
cmp
repz
mov
pop
jge
nop
stos
cli
jns
mov
cmp
loopne
into
lret
push
adc
xor
push
pusha
mov
mov
or
or
enter
xchg
mov
scas
les
bound
arpl
pop
dec
inc
adc
repnz
jge
dec
push
add
fisttpll
loop
mov
mov
pushf
mov
cmc
mov
add
testb
aam
jl
inc
sbb
enter
jl
pusha
test
jg
pop
lods
cmp
dec
pushf
mov
fdivl
fstpl
lcall
adc
scas
gs
push
jns
xor
data16
in
test
inc
loop
cli
pop
cwtl
addr16
xchg
mov
ret
loope
test
rcrl
adc
xchg
lds
mov
add
sbb
in
ja
shrl
insl
call
mov
gs
pop
out
fiaddl
inc
sarb
mov
scas
mov
jp
cmpsb
arpl
daa
in
cmpsl
sub
int3
out
movsl
out
and
shlb
jmp
paddd
repnz
cmp
mull
std
xor
and
and
mov
cmp
aaa
cli
pop
les
or
aam
jbe
lods
cmp
shrb
fwait
inc
les
gs
movl
inc
lret
inc
push
jbe
jnp
inc
mov
dec
fcompl
out
cmp
jns
lahf
sub
xorb
and
lea
popf
fdiv
int3
xchg
cs
sbbl
sub
hlt
shl
into
daa
decl
aad
inc
and
loope
jb
out
add
mov
push
mov
xor
cmp
mov
dec
push
xlat
add
loop
out
add
jl
mov
pusha
sahf
sbb
mov
inc
mov
nop
outsl
cmp
out
subb
push
and
dec
push
inc
jecxz
in
push
xlat
ret
pop
adcl
jp
add
cmp
inc
scas
adc
in
pop
rcrl
ljmp
push
or
out
xchg
pushf
cli
push
jge
outsl
xchg
pop
shlb
or
cld
lret
icebp
inc
add
fstps
push
addr16
cmp
xchg
ss
xor
subl
data16
stc
or
lea
aad
xor
mov
mov
inc
mov
out
jl
aam
bound
cmpsb
pop
pop
xor
iret
pop
test
dec
mov
lods
add
add
fcomps
scas
mov
sub
repnz
inc
cmp
lds
cmpsb
mov
jns
loop
xor
jmp
cmpsb
lret
pxor
or
movsb
xchg
jl
js
mov
pop
out
pop
pop
mov
aam
fstps
int3
inc
push
cmc
popf
repnz
and
jns
adc
and
js
sub
fcom
dec
xor
repnz
loopne
or
sub
cld
leave
inc
inc
push
lret
or
inc
jge
push
sbb
or
pop
lds
and
cli
jmp
jle
testb
adc
outsb
lret
scas
ret
fldl
testb
add
mov
mov
pop
and
mov
int3
mov
pop
or
testb
insl
pushf
stc
xchg
lock
inc
or
inc
int
repz
and
mov
aas
mov
enter
lahf
aaa
movb
mov
stc
lcall
push
mov
sbb
outsb
add
xchg
or
dec
jnp
add
xlat
mov
xlat
push
lret
cmc
out
and
jmp
jae
lods
jne
loop
adcb
scas
mov
rorl
pop
rcl
cmp
jg
std
mov
lcall
stos
sbb
addb
cmpsb
and
jle
push
outsl
scas
xor
and
xor
ret
movsb
xchg
pop
mov
push
gs
das
sarl
cmpsl
sub
mov
aad
cmpsl
out
addr16
mov
ja
add
xchg
stos
fidivs
mov
outsb
daa
xorl
xor
dec
ss
and
fst
rcrl
xchg
pop
xchg
scas
cli
jp
leave
jo
enter
sub
or
lea
das
sbb
or
add
xor
pop
push
outsl
push
push
leave
dec
cs
and
les
cmc
mov
sbb
pop
jo
pop
test
ss
sub
sahf
and
or
add
push
les
mov
lock
cmp
inc
xchg
outsb
cli
xchg
sub
inc
add
push
inc
jb
pop
in
es
dec
idivb
notb
stos
xor
clc
push
scas
in
imul
cmp
cld
and
and
es
lahf
ljmp
in
dec
xor
fwait
test
lods
push
insb
cmpsl
shl
data16
jg
in
mov
and
inc
cmp
roll
out
xchg
icebp
cmp
pop
lods
cmc
or
jno
adc
leave
loopne
or
mov
sub
lret
insb
inc
mov
fwait
cmc
add
mov
mov
ficompl
imul
push
mov
out
push
push
aad
mov
push
mov
mov
xchg
sbbb
idivb
icebp
sub
cmpsl
inc
out
push
roll
cwtl
sub
xor
pop
ljmp
or
cmc
dec
xchg
push
dec
mov
pop
bound
lcall
scas
and
jg
push
nop
sub
ret
stc
and
xchg
das
aad
adc
cld
mov
out
aam
pop
hlt
sarb
jp
jl
and
jne
push
mov
fwait
inc
jae
sahf
jmp
sub
or
inc
and
fucom
lcall
popf
jns
push
sub
fbstp
hlt
dec
lahf
or
in
test
push
loope
mov
inc
xchg
add
xchg
dec
loopne
int3
stos
test
out
outsl
mov
add
push
mov
es
push
shlb
rclb
out
jge
ljmp
ljmp
insl
inc
in
dec
cld
adc
sarb
jecxz
push
mov
cld
add
gs
outsl
out
stos
fisubrl
mov
push
test
xorb
pop
or
in
shll
mov
scas
mov
ss
add
push
sarb
xor
in
xchg
sbb
or
sub
adc
inc
mov
push
xchg
pop
pop
mov
pusha
pop
lahf
jg
lret
cmp
mov
inc
cmc
inc
test
fildll
xchg
repnz
push
cmp
sub
imul
gs
fidivrl
lcall
bound
sahf
cmp
mov
mov
test
pop
mov
sbb
ret
mov
data16
xchg
push
nop
mov
xor
push
mov
hlt
leave
stos
outsl
sbb
rclb
pop
mov
jcxz
pop
dec
push
push
jp
sub
insl
das
jl
std
jmp
sbb
sbb
add
pop
inc
mov
outsl
push
pop
dec
mov
andl
cmp
push
stos
hlt
xlat
jl
push
in
cld
dec
add
mov
pushf
and
mov
xchg
mov
shll
push
push
popf
add
dec
pop
cmc
into
xchg
xchg
xchg
and
push
mov
pop
jo
and
stos
mov
pop
mov
jae
movsl
xchg
imul
ja
shrl
cmp
int
enter
pop
repz
imul
ljmp
scas
int3
lret
xchg
shr
fs
push
imull
push
daa
icebp
add
es
mov
sub
jge
dec
mov
enter
add
and
dec
movsl
mov
adc
call
sub
adc
push
gs
xchg
adc
mov
xor
fldl
push
daa
je
mov
je
or
mov
les
jecxz
mov
into
jp,pt
addr16
sub
icebp
push
inc
sbb
lret
cmc
lods
dec
mov
shrl
scas
xchg
mov
nop
test
cmc
pop
inc
out
cld
cmp
cs
mov
sarl
push
mov
lahf
dec
sbb
scas
inc
mov
and
ret
push
sub
cmp
jle
dec
mov
sub
mov
mov
sbb
aaa
sahf
jg
or
ljmp
rorb
jecxz
jns
add
ret
cmp
movsb
rorl
and
out
mov
lock
sbb
sbb
andb
adc
shlb
jg
xchg
jne
pop
mov
sti
adc
aam
push
mov
mov
fnstcw
cmp
mov
fidivl
sub
cmc
lret
in
push
adc
in
js
adc
iret
cli
mov
stos
js
cltd
ret
inc
or
sahf
sub
xor
cmp
dec
ljmp
mov
xchg
add
cmp
jnp
xor
inc
fmulp
lea
es
push
ss
mov
mov
mov
lahf
pop
std
out
sbb
push
mov
pop
xchg
fst
aam
jno
out
dec
icebp
xchg
cmp
pop
ljmp
cmp
sbb
dec
mov
jge
fnsave
fwait
rcrb
in
fs
dec
and
jmp
fs
cmpb
popa
xor
sub
dec
insb
mov
aad
and
aas
movsb
push
icebp
mov
push
dec
and
std
mov
pop
xchg
cwtl
push
jb
shr
fldt
movb
icebp
jbe
mov
ljmp
shr
addb
test
pop
stos
xchg
mov
shll
loope
mov
pop
sub
in
cltd
sub
jb
jns
pusha
shlb
dec
mov
adc
inc
imul
pop
push
dec
jmp
push
iret
or
in
sbb
xchg
pop
insb
add
and
lcall
dec
jo
xor
cs
icebp
imul
leave
fcoml
aam
mov
push
xor
xor
adc
pop
sub
jne
jle
fildll
stos
out
popf
sti
into
add
int3
push
mov
dec
clc
xor
pop
or
pop
xchg
pop
ret
or
adc
jo
pop
and
arpl
xor
std
sbb
xchg
jge
pop
pushf
inc
lret
rcrl
jae
movsl
shrl
dec
fs
add
lods
push
into
dec
push
movsl
mov
out
pop
test
cmp
filds
movsl
leave
das
addb
push
lahf
pop
shlb
ret
icebp
mov
and
add
jmp
aad
xchg
dec
lcall
stos
add
xchg
into
add
cmp
xchg
fnstcw
jo
leave
mov
out
ret
iret
pop
stos
mov
ret
aaa
mov
sbbl
fsubs
and
mov
fstpl
inc
repnz
adcb
xchg
mov
js
lea
cmpsl
jbe
sahf
pop
int3
mov
mov
ds
inc
mov
push
stos
loop
inc
push
jecxz
push
mov
outsb
or
aad
or
int3
jmp
fimull
outsl
les
inc
js
cmp
lods
mov
xchg
call
jnp
int3
sahf
nop
mov
mov
adc
fs
pop
xor
xchg
aad
scas
dec
push
cmp
jne
das
add
and
jp
and
jg
js
mull
inc
ljmp
sub
mov
out
in
and
fcmovnu
outsb
gs
jecxz
lahf
mov
pop
mov
scas
int3
movsb
rcl
ret
call
rclb
test
mov
mov
das
leave
add
bound
in
jecxz
dec
imul
dec
pushf
dec
and
and
ret
and
sbb
dec
pop
jmp
shrl
stos
mov
movsb
in
rorb
fimull
jns
sbb
add
jo
sarl
pusha
dec
jbe
in
inc
dec
sbb
ret
mov
or
mov
jb
sbb
mov
mov
mov
inc
pop
sub
lea
repnz
and
jnp
and
arpl
push
je
shl
scas
lcall
hlt
movsb
sbb
pop
xchg
scas
out
sub
ljmp
adc
lret
inc
sub
lahf
lods
cmp
int3
or
mov
xchg
fldcw
xlat
insl
jae
loope
out
xlat
enter
jo
syscall
int
and
cmp
test
add
push
fsubs
add
subb
pop
adc
and
testl
add
dec
sahf
push
fwait
repz
ficoms
lret
jb
les
ljmp
cmpsb
insl
add
mov
cli
and
add
dec
cmpl
jno
out
lds
sbb
insb
push
les
dec
xor
int3
mov
in
mov
lods
xor
push
sbb
dec
sbb
push
push
push
in
lods
inc
add
mov
jno
inc
xor
leave
sub
andb
cld
dec
fimull
push
sbb
mov
push
jge
adc
shl
mov
xchg
stos
loope
jno
mov
push
jbe
clc
test
sub
cmp
jl
xor
mov
xchg
ds
sbb
lods
data16
loopne
push
push
out
lcall
inc
sub
inc
adc
jg
dec
adc
cmp
adc
mov
inc
pop
lret
loope
mov
sub
cmp
sbb
and
push
add
lret
outsb
sbbl
and
sbb
jnp
ret
cmpsl
xor
daa
fadds
fnstenv
push
enter
fistps
mov
stos
add
lods
pushf
andb
jb
pop
in
mov
adcb
push
or
adc
loope
je
cltd
test
icebp
aas
xchg
xor
in
ret
pop
sbbl
in
inc
jae
mov
aas
cmp
ja
ret
and
mov
enter
xchg
in
fcomps
popf
push
mov
into
cmpsb
icebp
in
and
dec
mov
mov
mov
mov
mov
xchg
jg
adc
mov
push
push
pushf
push
outsl
cmpb
adc
mov
outsl
mov
sub
add
cwtl
dec
push
and
in
dec
arpl
pop
movsb
inc
lret
mov
push
in
pushf
sbb
or
add
in
fdivr
push
sbb
push
test
ficoml
ds
sub
lcall
inc
clc
int3
aaa
lcall
daa
mov
inc
sub
dec
mov
mov
test
cmp
xor
testb
cmpsl
cmpsb
pop
aaa
xlat
sub
cli
adc
dec
adc
into
jns
out
cmpsb
pop
je
push
stos
cmp
mov
bound
pusha
inc
inc
xlat
or
stc
inc
test
subl
mov
cli
xor
mov
bound
iret
or
stos
lods
ljmp
stos
loopne
decl
stos
lods
mov
call
adc
mov
sarl
lds
add
push
xor
cmc
push
xlat
pop
sub
push
mov
jl
inc
imul
add
int3
cli
pop
xor
mov
adc
lods
inc
addr16
xchg
sbb
sub
sbb
or
cld
add
adc
and
xor
mov
subl
dec
mov
ret
sub
sbb
or
cld
add
adc
and
xor
mov
sbbl
dec
mov
ret
sub
sbb
int3
repz
sub
sub
int3
xor
fs
xorl
push
mov
cmp
sbb
mov
cld
add
mov
lret
lret
and
arpl
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
xchg
inc
fsts
stc
je
push
ljmp
les
imul
hlt
or
mov
inc
fsts
stc
je
add
adc
and
xor
les
or
test
xchg
sub
push
icebp
fs
nop
add
adc
and
xor
cli
push
mov
push
lock
rcll
inc
fldenv
movsl
add
aad
daa
inc
xlat
mov
mov
mov
and
ss
dec
push
adc
jne
mov
data16
sub
cmpb
xchg
in
cmc
mov
dec
pop
lds
andb
cwtl
lahf
mov
add
sub
loope
xor
test
pop
mov
mov
jb
lods
add
mov
shrl
or
rclb
mov
lea
mov
andl
shll
fldcw
iret
adc
dec
out
xchg
mov
cmp
hlt
leave
jnp
pusha
leave
mov
mov
inc
fsts
out
je
add
adc
and
xor
les
jno
pusha
hlt
adc
repnz
and
push
stos
inc
aam
cmp
mov
lcall
pop
ror
add
sti
and
popa
idivl
lds
xor
sbbl
insb
jmp
sti
pop
sarl
fisubl
adc
add
push
mov
aam
in
hlt
or
mov
inc
fsts
stc
je
add
adc
and
xor
les
imul
sbb
inc
sbb
xchg
xchg
movsl
cmpsb
roll
dec
popf
sbb
jmp
inc
mov
mov
pusha
cmp
mov
push
inc
test
rcll
je
icebp
mov
aam
xchg
dec
xlat
pop
in
mov
sbb
imul
gs
mov
fwait
pop
mov
adc
cltd
xchg
test
inc
or
aam
ss
sub
ret
es
pop
ds
xchg
stos
aaa
out
in
jo
andl
mov
movsl
add
pop
sbb
test
push
adc
add
push
push
into
dec
sbb
mov
push
mov
movsb
lahf
fdiv
pop
pop
enter
adc
ffreep
ljmp
fwait
ja
mov
jno
dec
out
ss
mov
sbb
or
dec
orb
lods
push
stos
mov
movsb
push
mov
dec
fsubs
out
mov
pop
xchg
sbb
pop
push
xchg
mov
nop
inc
imul
ds
in
loop
cmp
rcll
in
mov
fwait
pop
jbe
sbb
js
shlb
sbb
xchg
fs
mov
daa
outsb
clc
inc
xor
cmp
pop
dec
jae
sahf
ds
push
adc
lahf
out
sbb
mov
les
inc
xchg
rcll
push
pop
add
pop
in
out
mov
push
out
aaa
push
add
mov
sub
out
outsl
cwtl
in
lods
xor
fs
xchg
popf
out
neg
xchg
pop
pop
fnstsw
pop
jb
insl
loopnew
mov
mov
mov
pop
inc
insb
es
sub
xchg
or
push
in
cmc
add
outsb
push
adc
sbb
jecxz
mov
push
or
insb
loopne
adc
mov
call
dec
push
xchg
lods
mov
sti
test
loop
adc
cmpsl
cld
xchg
stos
jo
jae
sbbb
xchg
or
dec
and
sub
xor
stc
mov
pop
push
scas
jns
loope
xchg
mov
mov
sti
insl
sbb
xchg
sub
mov
cmc
sbbb
sbb
sar
jae
push
sub
enter
leave
mov
jb
cmp
push
cltd
mov
js
loopne
out
imul
out
mov
insl
mov
pop
mov
stos
jge
cmp
and
lds
pop
pop
adc
pop
xor
push
mov
xchg
sbb
lds
lahf
in
lahf
jmp
inc
adc
sub
je
sub
xchg
es
xchg
andl
dec
push
mov
sbb
xchg
dec
rcl
dec
or
stos
dec
lea
enter
mov
jns
dec
jo
cmpsl
test
add
mov
stos
cli
mov
push
outsb
jnp
rcl
mov
sbb
stos
insl
enter
sub
inc
mov
jecxz
mov
or
test
scas
xchg
insb
lea
jg
popf
jmp
mov
jne
fnstenv
dec
testb
movsl
cmpsb
or
cmpsb
subl
daa
or
insb
scas
jns
aas
popa
mov
xor
cmp
arpl
aaa
lahf
add
fdivs
xchg
adc
xchg
xchg
mov
loope
xchg
rcrl
test
addr16
jnp
add
adc
pop
pop
jg
sub
repnz
xchg
push
enter
xor
xor
das
movsb
xchg
int
adc
xchg
or
push
lret
mov
inc
mov
repnz
xlat
clc
dec
adc
out
das
lods
arpl
out
cmp
inc
xchg
sbb
or
mov
fsubrp
adc
cmpsl
mov
int
dec
sbb
mov
pop
mov
cmp
out
or
jge
xor
jae
and
xor
pop
test
mov
dec
pop
lea
pop
std
jb
add
pop
aaa
daa
inc
addb
sbb
and
lret
ss
pusha
in
fnsave
fisubs
cltd
mov
mov
fildll
rclb
jge
pop
sbb
mov
addr16
or
adc
lea
xchg
xor
insl
fsubrp
mov
fsubp
out
mov
and
adc
mov
inc
notl
mov
inc
pop
in
add
lea
mov
pop
cmpsl
or
fcomp
test
xchg
and
roll
mov
sbb
vmwrite
into
xor
sub
sbb
push
hlt
icebp
xor
fidivs
adc
int
aas
pop
dec
bound
lea
jbe
pop
mov
outsl
mov
mov
inc
fstl
mov
adc
sub
in
fstpl
cwtl
dec
mov
ror
enter
lock
push
jmp
adc
ds
shlb
out
xchg
sti
mov
vpermd
mov
fisttpl
mov
xor
das
shr
mov
inc
mov
repz
repz
loopne
mov
mov
mov
dec
std
pushf
loope
xor
adc
enter
jno
pop
push
jle
push
decl
adc
add
shlb
in
xor
mull
push
pop
mov
and
pop
mov
xor
and
sbb
sub
scas
cmc
inc
adc
es
push
mov
mov
pop
mov
xchg
negl
pop
movl
pop
sub
inc
adc
imul
repz
inc
in
fnstsw
decb
sbb
sbb
stos
mov
pop
testb
das
mov
pop
push
shll
sbb
jae
shrl
xchg
cli
arpl
pop
clc
xchg
fimuls
test
sbb
sbb
jno
popa
cwtl
cltd
mov
popa
adc
adc
or
xchg
in
push
sub
xchg
mov
pop
adc
push
lret
dec
pop
dec
test
mov
adc
es
push
mov
adc
add
cmp
adcb
popa
adc
xchg
push
xor
andb
mov
mov
lods
adc
mov
in
inc
push
into
stc
xchg
mov
ret
mov
adc
popa
push
pop
xor
pop
loope
pop
jbe
sbb
add
adc
mov
push
adc
pop
sbb
push
pusha
jp
sti
and
lds
push
xchg
cmp
in
xor
pop
sub
mov
mov
adc
inc
call
xor
hlt
arpl
test
jb
dec
cmp
mov
sub
lods
mov
mov
xor
aas
mov
clc
pop
xchg
popf
lods
mov
std
inc
sub
test
xchg
adc
dec
sub
mov
roll
iret
jecxz
push
jo
sbb
push
lea
lds
stos
push
pusha
jnp
jl
addr16
adc
fmul
jb
arpl
sub
jbe
fisubl
mov
std
and
int3
push
push
cmp
mov
mov
subb
or
and
popa
mov
push
push
push
popf
or
adc
xor
mov
shl
mov
hlt
cmp
adcl
popf
xor
cmp
mov
inc
rcll
into
das
pop
mulb
dec
xor
imul
nop
xchg
push
out
push
imul
int
aas
xor
lea
ja
xor
fisttps
nop
inc
aaa
push
fcoml
or
popf
jle
ret
addr16
aam
add
je
stc
lcall
std
cmc
aad
cs
dec
xor
mov
mull
jecxz
dec
jns
std
mov
pop
pop
push
fmuls
enter
dec
jns
cmp
jns
bound
test
xor
gs
popf
dec
mov
icebp
xchg
in
pop
stos
xchg
mov
loopne
xchg
mov
imul
bsf
sub
push
cmp
and
xchg
fldt
icebp
and
sub
pop
inc
push
ret
pop
lret
mov
xor
jae
cmp
js
ds
lcall
outsb
iret
pushf
enter
and
or
push
pop
xor
xor
or
cltd
dec
xchg
mov
or
mov
adc
out
adcl
and
leave
push
cmp
shl
inc
sbb
icebp
and
test
inc
push
xor
subl
xchg
sahf
inc
cmpsb
mov
adcl
jl
mov
lret
inc
xor
mov
cmp
dec
jnp
adc
sub
pop
pop
mov
cld
mov
cmpsl
pop
sub
imul
test
sub
mov
adc
xchg
sahf
rcrl
adc
jns
fucomi
mov
lds
cltd
ds
ret
cmp
jbe
inc
push
mov
idivb
dec
neg
adc
and
je
add
cmp
outsb
out
xchg
xchg
popa
and
lahf
sub
cmp
arpl
std
sbb
imul
mov
mov
out
dec
sub
dec
jne
mov
cmp
gs
cmp
sahf
mov
les
sbb
xor
push
pushf
mov
mov
jns
jnp
movsl
pop
xchg
jbe
mov
cmp
das
pop
sbb
jae
mov
movsb
out
popa
jle
jbe
mov
mov
cmp
dec
int
or
xchg
mov
dec
les
push
or
ljmp
dec
xchg
mov
lahf
int
mov
dec
sahf
xor
js
xchg
dec
aaa
add
sbb
lds
ds
cmp
sbb
mov
in
dec
push
dec
insl
ret
dec
jmp
nop
repz
mov
adc
xor
xchg
xchg
dec
add
inc
popf
insl
push
sbb
dec
sub
idivl
jns,pt
jne
inc
push
cmpsl
mov
xchg
jno
loop
mov
push
cmp
stc
xor
test
jae
cs
daa
daa
shll
cmp
outsl
push
adc
aam
gs
flds
dec
cli
insl
xchg
mov
fst
test
or
add
fst
mov
pop
outsl
mov
xchg
and
xchg
fisubs
and
sub
add
jbe
xchg
not
test
adc
popf
xchg
adc
bound
cmp
jmp
add
inc
das
push
jge
inc
dec
mov
dec
push
xchg
mov
divl
sub
jge
dec
mov
repnz
xchg
sub
add
push
addr16
and
ret
cmpsl
stc
sub
pop
imul
push
xchg
and
push
dec
mov
push
adc
mov
add
movsb
cmp
es
mov
push
push
jbe
shrl
pusha
mov
mov
fisttps
inc
aam
and
xor
and
mov
dec
jne
mov
sbb
movsl
inc
incl
jbe
inc
cmp
std
pop
or
xchg
icebp
jno
mov
cs
loope
popa
adc
cwtl
sub
and
loop
mov
lods
mov
fwait
lods
loop
fcomi
mov
xor
adc
xchg
pop
sub
jge
cmp
adc
pop
mov
jle
je
pop
inc
push
xchg
into
enter
lock
jnp
sub
xlat
repz
cmp
gs
xor
pop
pop
xchg
inc
pop
fs
repnz
insl
ds
pop
ljmp
xorb
dec
shlb
pop
push
adc
or
loop
jmp
xchg
aam
ss
inc
cli
shlb
cmc
lret
out
sti
xchg
enter
push
xchg
jge
jg
mov
push
or
xchg
xor
push
fnstenv
jmp
cmpsb
or
cwtl
loope
xor
adc
mov
mov
jp
loopne
dec
push
pushl
mov
dec
push
inc
dec
iret
jb
add
cmp
xchg
xchg
in
mov
dec
xor
popa
adc
loop
mov
hlt
add
sbb
scas
and
cmp
push
leave
andl
mov
adc
nop
popa
xor
ficomps
cltd
mov
fidivrs
enter
scas
sub
jb
dec
push
sbb
and
add
mov
xchg
test
inc
jo
je
ret
mov
adc
mov
inc
js
gs
insl
lock
mov
jae
popa
inc
dec
pushf
dec
out
jle
push
xchg
bound
add
xchg
mov
pop
mov
les
push
ljmp
mov
xchg
lea
inc
hlt
xor
out
mov
inc
test
clc
sbb
and
xchg
aaa
fmul
imul
hlt
and
cmp
jbe
xlat
scas
lods
mov
add
stc
in
aam
mov
or
mov
sub
cmc
mov
daa
decl
loope
out
jg
jp
lods
cmpsb
and
mov
movsb
rorb
pop
fs
xchg
add
dec
xchg
or
int3
dec
jno
mov
mov
test
std
pop
dec
mov
add
pop
data16
pop
push
lret
loopne
pop
xlat
loope
mov
xchg
sbb
adc
push
lahf
adc
lock
lahf
adc
mov
pop
scas
push
mov
repnz
sbb
mov
cmp
cmpsb
xchg
or
mov
lods
push
mov
rcll
and
inc
jmp
push
or
inc
xor
pop
int
daa
jb
inc
xlat
sbb
pop
ffree
or
pop
mov
dec
mov
push
pop
adc
add
les
aam
mov
stos
lcall
pop
aaa
adc
pop
lret
dec
jp
sbb
hlt
cltd
mov
jns
jae
out
cmp
inc
cwtl
pop
fs
mov
push
pop
push
out
aad
push
fildl
jp
fsts
fsts
inc
inc
sbb
cmpsb
ss
loope
mov
aas
shrl
into
push
ficoml
add
out
rol
pop
pop
add
add
scas
cmp
pop
mov
popf
mov
and
fistpll
xchg
adc
rcl
sahf
outsl
push
insb
icebp
lret
mov
jno
xchg
jge
fsubs
stos
cmp
mov
enter
xchg
and
xchg
sbb
mov
orb
pop
or
xchg
ret
inc
movl
subl
dec
or
cld
negl
fcomp
ljmp
bound
or
loopne
dec
fdivrs
inc
iret
cmp
lahf
ds
pop
mov
sahf
mov
inc
stos
push
inc
xchg
or
jnp
add
inc
adc
imull
or
xchg
inc
mov
mov
push
popa
mov
jp
jnp
and
mov
push
sub
ja
pop
xchg
into
mov
fnstsw
enter
cwtl
sub
pop
jbe
mov
mov
mov
xor
dec
out
cmp
cmovb
add
and
mov
push
push
dec
cmp
jg
fs
pusha
test
lcall
mov
nop
aam
fists
ljmp
adcb
sti
hlt
out
push
adc
pop
cli
stos
or
test
lea
push
fsts
and
fwait
xchg
int3
ss
fidivrl
pop
lahf
dec
jbe
fsubs
mov
lcall
push
inc
stos
add
or
ds
mov
xchg
mov
mov
mov
inc
mov
jo
adc
je
and
add
cmpsb
test
dec
and
lret
mov
dec
int
repz
fmull
inc
jmp
outsb
fcomps
mov
pusha
ds
mov
pop
shr
mov
lcall
xor
int3
out
cmpsb
jecxz
and
push
jecxz
sbb
lods
push
push
and
jl
stc
pop
sbb
repnz
das
xor
std
movsb
sbb
sarb
xchg
scas
mov
test
test
lcall
mov
add
sbb
push
push
notb
fcoms
mov
sbb
in
mov
imul
jg
lahf
push
mov
cmpsl
and
enter
xchg
iret
mov
out
shrb
shl
std
in
gs
xchg
sbb
js
mov
mov
jb
lds
jle
dec
xchg
mov
aad
stos
adc
dec
add
leave
nop
loopw
test
int3
nop
js
movsb
repnz
lods
mov
loope
or
pop
jge
mov
mov
xchg
les
sbb
jmp
lods
mov
or
fs
or
ret
shll
and
sbb
pop
int
popf
mov
mov
clc
orb
mov
rcr
arpl
stos
sub
pop
mov
pop
popf
mov
ss
adc
add
out
mov
scas
lret
test
sub
fistpll
in
pop
stc
aad
inc
mov
pop
xchg
jbe
jmp
cmp
pop
push
sub
xor
movsl
sbb
std
insb
adc
push
ffreep
cmp
loope
push
lret
icebp
rolb
andb
or
insb
inc
dec
lahf
cmc
xlat
cmp
lock
std
mov
stos
mov
xor
loop
into
rcrb
mov
mov
and
sub
mov
pop
les
mull
dec
and
dec
out
shlb
loopne
loopne
popf
or
sbb
pushf
lock
sbb
cmp
sub
mov
xor
mov
or
mov
out
jne
cmp
iret
xor
jo
dec
ds
jnp
mov
test
les
sub
xor
add
jo
pop
mov
in
bound
in
and
sbb
add
push
jge
push
mov
mov
stc
or
ja
sub
add
pushw
js
out
lret
xchg
xchg
push
sub
lea
aas
dec
xchg
and
pop
mov
icebp
lods
mov
sbb
dec
cmc
pop
xor
lds
xchg
jne
and
addr16
out
shlb
shrl
sbb
int3
pop
pop
popf
add
cmp
jl
push
rorb
data16
pop
sub
mov
popf
xchg
sub
out
jl
or
loope
mov
and
or
lret
lods
sbb
dec
sub
insb
or
divb
mov
nop
in
aad
push
out
ds
mov
or
stos
scas
gs
arpl
ja
subl
push
and
jge
and
mov
loope
push
shll
into
je
pop
push
pop
inc
loopne
sbb
cmpsb
pop
int
inc
test
jge
outsl
inc
add
fcoms
pop
fdivrs
imul
pop
insb
xor
dec
lcall
mov
cmc
jge
adc
fnsave
xchg
sub
cmc
jae
in
add
cli
testl
jmp
cs
arpl
out
arpl
xchg
jmp
push
pop
inc
out
dec
adc
out
jle
sbb
xor
daa
jle
mov
and
adcl
push
cmpb
cli
lods
push
cwtl
add
mov
dec
pop
fbld
lret
inc
bound
out
sub
pop
and
sbb
mov
sbb
sahf
jl
cwtl
jne
cmp
xchg
sbb
addl
bnd
mov
mov
lea
sbb
jb
sbb
fstpl
add
les
sbb
sub
jne
pop
add
sbb
mov
sub
pusha
addb
push
idiv
xchg
rcrb
in
sti
xchg
adc
dec
xor
mov
rolb
inc
hlt
xor
in
sub
add
xchg
xchg
jge
jle
lret
jmp
inc
test
mov
pop
sbbb
insb
lods
jg
adc
adc
divl
addb
dec
imul
paddusb
cmpsl
mov
sti
jb
lcall
pushl
cmp
rcr
jmp
loop
fcomi
xchg
inc
in
push
or
iret
dec
cmp
arpl
pusha
int3
jno
cmp
int
pop
pop
ds
lods
hlt
mov
pop
push
rorb
icebp
jns
inc
jo
mov
cmp
pop
stos
mov
pop
lcall
imul
mov
xchg
out
add
sahf
sub
and
aad
fidivrl
ds
iret
repz
es
dec
enter
xchg
dec
shll
movsb
adc
in
sub
aaa
push
dec
flds
cmp
fidivs
sbb
inc
lods
or
test
xor
std
xor
cmc
sub
jle
adc
or
mov
pop
inc
and
adc
push
jno
aaa
loopne
ds
xor
mov
sbb
pop
or
imul
pop
push
sub
adc
pop
push
fsubrs
popa
rorl
pop
cmp
sbb
mov
add
xor
dec
cmp
lods
sub
or
xchg
imul
loope
filds
pushf
enter
js
fsubl
and
push
sbb
loopne
add
imul
mov
test
inc
inc
cmp
sub
mov
or
out
pop
sbb
and
mov
jmp
pop
test
aaa
pop
jae
fiaddl
push
jecxz
push
mov
xor
aam
test
xchg
push
sahf
cwtl
adc
mov
mov
inc
ljmp
jmp
in
and
adc
xor
stos
enter
fsubrs
sti
je
add
add
sub
gs
je
add
adc
and
xor
les
imul
sbb
inc
fsts
stc
je
add
adc
and
xor
les
imul
sbb
inc
fsts
stc
jne
add
adc
and
pop
aad
in
hlt
or
or
fs
jo
add
xchg
sub
jle
in
cmpl
imul
dec
push
mov
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
sbb
adc
add
int3
imul
addb
xchg
xchg
hlt
subb
mov
and
adc
add
je
je
push
and
cmpb
test
aam
les
or
sbb
insl
dec
jl
dec
fcomps
mov
xchg
mov
shrl
xor
pop
arpl
mov
stos
jecxz
ret
jmp
dec
or
outsl
cmc
sub
scas
dec
sbb
call
push
dec
cmp
jnp
xchg
adc
add
loopne
cwtl
pushl
inc
sbb
nop
mov
movsb
paddd
jnp
push
or
adcl
je
je
and
rol
xchg
pop
loopne
pop
or
sub
aad
mov
jo
mov
adc
sub
dec
nop
pop
jecxz
arpl
xor
xchg
inc
aad
inc
push
in
lds
mov
fsts
fdivrl
into
icebp
imul
adc
mov
arpl
inc
xor
or
inc
xor
and
popf
lock
sahf
cld
mov
lds
xor
push
xor
push
popa
jle
jne
and
inc
and
nop
and
les
enter
stos
imul
sub
jbe
rolb
jecxz
in
lds
jae
add
inc
push
inc
add
and
shlb
and
aam
les
inc
and
adc
add
je
xor
shlb
test
aam
les
test
fcoms
and
jnp
rorl
int3
xchg
push
sbb
stos
rorl
or
out
xchg
pop
pop
mov
stc
repnz
mov
stos
adc
mov
insb
in
ret
pop
xchg
fistpll
aam
xchg
sub
or
out
repnz
subb
int3
clc
subl
pop
or
inc
scas
fs
out
inc
fldt
addr16
dec
inc
jge
shrb
je
inc
pop
adc
lock
pop
dec
sub
loop
xor
pop
xor
add
mov
xchg
lcall
pop
dec
mov
sar
mov
ret
scas
pop
popf
nop
roll
ds
xor
repnz
repz
xor
jo
sti
in
cmp
mov
cmp
dec
sbb
push
ss
out
xor
cmp
sub
xor
jmp
sub
scas
xlat
adc
mov
push
lods
aam
mov
ffreep
pop
insb
sub
adc
and
loop
jge
sbb
mov
dec
out
aaa
mov
mov
and
lods
cmpsb
jg
dec
jns
into
fdivrs
jecxz
mov
mov
aam
scas
xor
repnz
outsl
cli
dec
insb
dec
push
sub
aas
and
lahf
jge
sbb
and
xor
and
imul
lods
sub
ret
and
cltd
pusha
outsl
xchg
int
lret
and
movsb
cld
lea
xchg
and
push
call
addl
lahf
pop
adc
test
inc
repnz
popa
aam
jnp
stos
cltd
sbb
call
sub
sub
inc
jecxz
or
aam
aas
cmp
adc
inc
or
repnz
jge
nop
daa
stc
pop
movsl
sub
xor
xor
cld
jbe
mov
nop
xchg
inc
mov
repnz
and
inc
shl
cmp
ret
xchg
mov
sahf
mov
cmpb
fsts
out
lds
mov
call
sub
es
sarl
jb
testb
aaa
ja
dec
push
fwait
and
in
xchg
sti
aaa
jno
or
les
mov
pop
popf
outsl
dec
pop
cli
add
push
cmpsb
divl
dec
and
cmpl
inc
mov
movsb
movsl
stc
out
ret
mov
xchg
pop
push
faddl
lods
jae
ret
jb
hlt
xchg
pusha
jecxz
jne
test
add
mov
mov
mov
shlb
outsb
add
int3
and
imull
fisubrl
out
add
leave
pop
popf
pop
add
daa
movsb
pop
jp
sub
test
and
jge
hlt
inc
dec
sbb
lods
incb
gs
dec
into
push
inc
repz
dec
mov
lock
lret
insb
mov
and
or
iret
push
xchg
mov
rorl
sbb
jae
fs
jb
hlt
pop
clc
imul
sbb
movsb
fnstsw
nop
es
adc
dec
data16
jl
aaa
popf
adc
out
adcb
sub
test
movsl
mov
inc
je
loope
sub
aam
pop
sarb
lock
or
cmp
cmpsl
mov
scas
jmp
cmp
and
cltd
sbb
xor
fmuls
scas
std
nop
jne
outsl
repz
adc
inc
hlt
lret
lcall
pusha
xor
ljmp
out
pop
push
icebp
pushf
dec
jbe
mov
leave
jge
pop
mov
mov
inc
push
mov
loop
lret
rorl
mov
mov
dec
sub
lock
sahf
xchg
mov
pop
stos
mov
fwait
inc
jno
in
cmp
inc
mov
hlt
movsb
sbb
push
stos
and
sbb
push
popa
mov
fistpll
xchg
imul
add
push
adc
fldt
sbb
xor
inc
pop
arpl
addb
aad
mov
es
popf
push
push
mov
mov
mov
pop
mov
aam
outsb
cmp
jg
sbb
or
popf
mov
mov
mov
sub
push
cmp
dec
insb
add
xchg
or
insl
daa
cli
outsl
pop
sub
orl
cmovne
bound
stos
sub
data16
or
pushl
push
add
cmpsb
adc
aad
cmpl
pop
cltd
push
jo
into
rcl
icebp
pusha
mov
inc
sub
xchg
daa
mov
add
icebp
mov
cmp
aad
mov
std
jno
xor
mov
xor
test
gs
or
rcrl
in
inc
out
sub
xor
mov
cmp
or
lcall
and
cmp
test
int3
sub
lahf
in
int
pop
cmp
loope
mov
xor
ret
pop
std
cmp
and
das
mov
in
jecxz
mov
lret
icebp
movsb
int
push
sbb
sbb
addr16
into
jle
shll
pop
cmpsl
inc
outsb
sub
push
jle
mov
mov
xchg
add
arpl
hlt
mov
stos
jle
stc
mov
mov
mov
add
sahf
roll
jl
stc
test
fisttpl
pop
adc
cmc
sub
stos
xchg
orb
mov
imul
sbb
ret
popf
mov
stc
dec
inc
mov
jo
aam
frstor
xor
and
cmc
sub
sti
lcall
sarl
test
mov
notb
xor
fidivs
and
mov
mov
in
mov
xor
adc
lock
roll
jo
cli
or
mov
sub
xchg
cmp
or
insl
mov
fists
dec
and
ss
sub
sub
push
icebp
arpl
add
outsb
enter
pop
das
rcrb
test
shl
lret
mov
inc
jmp
mov
pop
fucomip
mov
popa
out
mov
mov
mov
cmp
out
lret
int
fs
xor
jl
les
repnz
add
out
arpl
fmul
pop
push
inc
jge
out
cmpsb
add
andb
je
xchg
mov
rcll
adc
fimull
push
sbb
push
pushf
sub
mov
xchg
mov
fsubrs
mov
shl
fmul
lcall
sbb
push
hlt
sbb
adc
pop
vfrczss
sbb
out
popfw
push
dec
cs
int
jae
in
or
dec
or
aaa
mov
scas
sub
jne
je
pop
sbb
ret
mov
adc
push
fmuls
adc
flds
push
test
cld
add
jne
rolb
mov
in
mov
out
call
in
push
and
mov
nop
mov
ret
xchg
loopne
addr16
mov
fmull
sti
es
push
test
insb
jno
mov
ljmp
das
cmpsb
js
mov
xchg
mov
push
or
jae
inc
xchg
jmp
pop
push
push
mov
dec
andb
add
xchg
insb
jo
mov
xchg
fsts
push
ss
fcoms
loope
pop
cli
xor
inc
call
xchg
dec
dec
mov
pop
sbb
cmc
mov
fnstenv
cmp
inc
push
inc
aad
inc
mov
int3
inc
sbb
lock
xchg
scas
outsl
dec
pop
rcr
xor
push
or
add
push
and
add
icebp
lret
xchg
jno
sarl
lods
mov
adcb
test
aam
dec
jge
test
xor
inc
mov
fcmovu
mov
fs
xlat
orb
mov
mov
inc
cs
cltd
insl
mov
and
xor
sub
xchg
stos
test
or
in
nop
ret
fbstp
pop
lods
dec
mov
push
lds
sub
push
gs
sahf
insb
or
adc
ud0
or
and
fsubr
inc
cmp
lea
mov
sub
nop
push
xchg
lret
xchg
cmc
hlt
stos
cs
test
mov
mov
data16
test
adc
mov
lcall
fldenv
sbb
stos
push
test
or
inc
jne
scas
mov
lret
imul
fxch
in
sbb
adcb
mov
mov
sbb
lret
cmpsb
test
push
es
jno
lods
rcrl
jg
dec
add
pop
int3
dec
pop
repnz
nop
stos
xor
and
lods
js
mov
dec
xchg
or
repz
cmp
dec
jge
enter
xor
and
out
popf
sbb
mov
jae
hlt
inc
sbbb
aad
lea
fwait
lea
inc
jno
push
xor
cli
jp
jae
or
cmp
data16
aad
xor
lahf
fmul
pop
shl
sub
aas
dec
out
xchg
pop
mov
fadds
ss
shlb
and
add
or
cs
mov
fsubrs
popa
mov
stos
test
jmp
pop
sub
and
sub
mov
dec
push
lret
pop
cmc
add
cmp
and
cmp
xchg
mov
nop
outsl
xchg
icebp
add
adc
iret
loopne
lods
stc
movsl
sub
scas
pop
or
xchg
adc
int
test
pop
test
jp
outsb
dec
arpl
inc
xchg
cld
dec
out
adc
add
jmp
test
sbbb
jp
lods
dec
dec
ud0
in
lods
shl
add
aaa
in
push
cmp
mov
lret
ss
or
insl
rolb
imul
push
xchg
enter
pop
add
and
cmpsl
rcl
outsb
adc
sub
scas
lret
inc
fs
xchg
mov
add
ja
iret
cmp
add
mov
mov
xor
inc
stc
mov
insb
cmp
or
addr16
cmp
or
test
jmp
sbb
movsb
push
or
and
push
pop
scas
push
push
mov
fnstcw
scas
scas
sarl
imul
fstpl
xchg
test
cmp
xor
movntps
leave
jb
pushl
xor
push
mov
outsl
aad
sbb
and
arpl
sbbl
gs
pop
inc
jae
lret
sbb
mov
lds
rorl
inc
test
pop
std
mov
lds
cmp
push
filds
pop
out
loope
lods
loop
cmp
fwait
xchg
add
int
sbb
mov
sbb
test
and
ret
push
popf
or
orb
out
stos
sub
in
sbb
out
leave
xchg
enter
fisubrl
dec
mov
lds
lcall
push
jns
sbb
mov
aad
xor
add
int
xor
bnd
or
jecxz
leave
dec
xchg
ds
cmp
jae
or
mov
mov
imul
out
xor
or
mov
ret
imul
xchg
jae
pop
sbb
into
sbb
inc
pop
in
aam
inc
and
mov
inc
sbb
cmpsl
lock
lods
fstpt
add
mov
std
outsb
fwait
inc
or
add
mov
mov
jl
fwait
xchg
in
les
jp
jb
sarb
cltd
lods
hlt
stc
xor
push
lcall
mov
sbb
or
flds
aam
aam
fdivr
mov
int3
fldenv
stc
fsubr
hlt
push
movsl
mov
arpl
dec
sarb
fwait
out
fdivs
mov
into
fdivrl
jecxz
insl
push
test
xor
push
in
aad
push
cmp
xor
push
mov
ret
xchg
mov
outsl
xchg
push
sbb
push
loope
or
cmpsb
int3
jmp
sbb
gs
mov
cmp
pop
mov
sub
mov
lcall
hlt
fwait
sub
inc
js
les
in
sbb
cwtl
enter
shll
push
lcall
andb
jne
jno
mov
xor
jno
cmp
pop
jne
push
daa
insb
aad
pop
dec
adc
pop
dec
das
cwtl
sbb
cmpsb
mov
mov
pop
ja
inc
cmpsl
mov
loop
jl
push
popf
sbb
fildll
cmpsl
sub
jo
adc
int
and
pop
inc
movsb
cltd
mov
xchg
fldt
enter
popf
sbb
mov
mov
mov
fdivs
mov
fsubrl
push
xchg
and
lock
out
sub
addl
ret
data16
insl
movsl
shr
cmc
mov
std
mov
gs
stos
adc
xor
lock
mov
xlat
inc
pop
inc
aas
push
or
stos
repnz
sahf
inc
idivl
or
xchg
insl
insb
test
aad
fwait
push
std
or
lret
dec
in
jae
and
fs
sti
mov
cmpsl
lods
out
imul
adcl
jae
adc
fiadds
imul
lretw
fisubrl
dec
pop
popa
inc
pusha
arpl
inc
mov
jno
pop
testl
push
lods
mov
dec
sub
into
inc
mov
mov
data16
jns
enter
cmp
aam
inc
std
repz
jbe
sub
or
dec
test
add
aas
pop
adc
lret
jg
into
add
xchg
add
std
shrl
dec
inc
mov
xor
iret
les
xchg
cli
jl
test
jno
repz
or
lock
je
test
xor
mov
adc
sub
jne
aaa
sbb
mov
adc
cmp
loope
fcmovu
repz
xor
test
ss
lods
subl
in
mov
in
xchg
dec
cmp
aas
cmp
lret
mov
jmp
push
mov
cltd
adc
mov
mov
mov
dec
fistpl
out
lods
fbstp
ds
pop
and
cld
jp
loopne
mov
dec
cmp
pop
jl
mov
pop
aad
jno
push
es
rorb
or
push
mov
push
ss
fimuls
popf
mov
scas
add
sub
sub
inc
adc
dec
sbb
sub
inc
mov
setp
nop
std
jge
loopne
iret
dec
cmp
mov
xor
dec
mov
mov
cmp
mov
fstpl
inc
push
imul
mov
jecxz
addr16
insb
push
iret
insb
add
xor
clc
mov
mov
xchg
push
push
mov
dec
pop
ret
xchg
dec
dec
test
rorl
sti
xorl
lret
lcall
lods
push
mov
adc
test
das
xor
lds
cmp
sub
stc
jmp
and
mov
mov
adc
fdivs
insl
pop
repz
cmpsb
in
adc
je
dec
mov
mov
aam
push
pop
int3
add
xchg
xor
mov
pushf
data16
push
outsb
xor
xor
cmp
test
pop
and
mov
dec
pop
notl
and
sbbl
outsb
push
jl
aas
fidivl
add
or
aaa
adc
push
cmp
xchg
test
add
decb
outsl
daa
fimuls
xor
jbe
lahf
aam
push
cli
repz
or
fimull
sbb
rcr
rep
out
mov
push
fcomi
out
std
sbb
jecxz
cli
and
xchg
std
mov
ja
pop
inc
push
stos
fistpll
outsl
jecxz
ja
cmp
out
dec
repz
in
stos
das
add
push
mov
and
cmpb
dec
sub
cwtl
sub
ljmp
addr16
push
add
cwtl
cmp
in
mov
cltd
adc
inc
lds
dec
xchg
xchg
xchg
stos
and
imul
movsb
adc
push
test
mov
mov
jno
es
xchg
sbbl
sub
test
dec
rcrl
enter
cmp
lahf
iret
aas
stos
mov
jle
or
mov
in
jns
test
ss
mov
setbe
insb
cmp
rcll
mov
adc
inc
add
add
sub
push
cmpsl
or
xchg
out
in
adc
popl
les
xchg
mov
shl
addb
ret
mov
xor
mov
popf
outsl
jecxz
popf
ljmp
inc
sbb
adc
sub
xchg
fdivl
addb
hlt
xchg
lcall
mov
insb
push
imul
sahf
fucomp
xor
outsl
mov
mov
add
mov
popf
or
test
xor
inc
call
sysret
arpl
iret
jb
js
inc
sbb
mov
sub
cmpsl
out
mov
loope
dec
push
imul
push
mov
xchg
push
stos
mov
sbb
xchg
mov
in
pop
jmp
xor
in
adc
sub
and
lahf
sar
pop
jge
mov
mov
add
in
insb
rol
lret
in
sub
and
std
push
inc
repz
sahf
stos
jns
fdivl
stc
bound
xchg
sbb
flds
dec
sbb
std
or
mov
outsb
inc
cmp
rol
xchg
push
mov
sub
shll
mov
pop
and
popa
ret
sbb
sbb
outsl
push
mov
adc
inc
cmp
les
imul
mov
pop
mov
mov
lret
in
push
jnp
sbb
test
push
fsub
sbb
loopne
sub
mov
or
out
incl
inc
mov
addr16
lock
dec
int3
test
mov
out
add
and
rol
cmp
fs
test
sbb
inc
lret
out
xchg
into
ss
add
jp
pop
fcmovne
adcb
vaddsubpd
fs
inc
lds
jmp
mov
stc
lret
add
jp
or
clc
push
xchg
les
outsl
test
mov
jle
jle
out
sub
fidivs
dec
dec
cmp
or
jnp
xchg
xchg
xor
inc
add
mov
cmpsb
cmp
mov
pusha
add
or
cmp
xchg
adc
xorl
and
or
dec
inc
imul
inc
jns
xor
mov
xchg
mov
jecxz
adc
fidivs
cmp
out
inc
sub
insl
xor
jne
add
call
ficoml
sti
xor
in
sub
jb
loopne
pop
ret
jb
sahf
int3
xlat
jge
add
dec
stos
loop
adc
cmp
std
insb
push
pushf
pop
inc
mov
fcmovbe
mov
and
icebp
fld1
jnp
adc
push
pop
cmp
inc
xchg
fistpll
sar
aam
movsb
xlat
stos
jb
inc
stos
test
or
mov
lret
and
push
dec
shrb
rcrb
adcl
inc
pop
push
popa
imull
mov
out
pop
mov
or
cli
insb
jge
dec
repz
scas
rcrb
push
cmp
fidivs
ljmp
cltd
arpl
jl
add
mov
popf
clc
flds
iret
push
push
and
roll
shrb
adc
add
jg
cmp
mov
ljmp
jo
push
ds
jecxz
xchg
popa
xchg
mov
sbb
repz
aaa
pop
andl
dec
ja
lahf
arpl
mov
push
std
add
pop
out
add
repz
call
adc
out
lcall
mov
nop
inc
nop
lods
dec
imul
cli
popa
sub
lods
jno
push
xchg
int3
mov
lahf
shlb
mov
pop
sarb
mov
ret
dec
in
jb
in
push
jbe
inc
pop
outsb
imul
push
or
mov
pop
repnz
iret
pop
mov
add
fldenv
aad
sub
xor
dec
rclb
popf
or
es
pop
pusha
gs
xchg
mov
shlb
hlt
aad
push
aad
cli
cmp
dec
jle
pop
aam
or
adc
cli
lcall
je
jecxz
mov
cmp
sti
aad
add
orb
fwait
in
add
jg
lods
aad
shlb
inc
push
pop
ds
jecxz
jp
sub
jne
mov
sbb
andb
aam
push
mov
je
inc
ljmp
jmp
movsl
std
addl
sbbl
xor
stos
stos
cmpsl
dec
pop
sar
or
or
jns
or
aaa
mov
lods
aas
sahf
dec
icebp
and
mov
jge
cmpsl
rorb
es
sbb
cli
xchg
mov
js
mov
fldl
xchg
fsubrl
xchg
xor
and
and
add
std
and
stos
sbb
push
jg
sti
add
cmpsl
xchg
popa
ficompl
pop
rcll
add
je
xor
shlb
test
aam
les
inc
and
adc
add
je
xor
shlb
test
aam
les
inc
and
adc
add
je
xor
aam
shlb
cltd
in
rclb
and
adc
adc
xor
shlb
repz
or
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
