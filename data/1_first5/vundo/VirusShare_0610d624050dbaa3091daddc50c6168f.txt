add
add
add
add
jbe
call
push
call
mov
push
push
push
mov
push
pushl
call
push
xor
pop
mov
cmp
jb
mov
dec
jns
inc
push
push
push
push
pushl
call
mov
call
pop
xor
pop
inc
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
push
push
push
push
mov
push
mov
push
pushl
mov
call
cmp
jl
cmp
jle
xor
inc
mov
cltd
mov
idiv
push
pop
mov
mov
cltd
idiv
push
pushl
lea
push
push
call
add
push
lea
push
push
lea
push
push
push
call
lea
push
push
pushl
call
mov
pop
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
cmpl
push
mov
jne
push
call
xor
push
push
push
push
pushl
call
push
call
test
je
orl
jmp
andl
push
push
push
push
pushl
call
mov
push
push
push
mov
mov
mov
mov
mov
call
pop
xor
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
andnps
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
push
pushl
call
mov
call
mov
push
push
push
pushl
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
pushl
pushl
push
push
call
add
pushl
call
cmpl
jb
mov
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
push
push
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
mov
push
push
push
call
mov
call
push
push
push
mov
call
lea
push
push
push
call
add
mov
mov
push
push
push
call
push
push
push
push
push
pushl
call
pushl
call
push
push
pushl
pushl
pushl
call
push
push
push
push
push
call
pop
pop
jmp
lea
push
pushl
call
mov
lea
push
call
pop
push
lea
push
push
push
push
call
lea
push
pushl
call
jmp
push
call
xor
pop
leave
ret
push
mov
sub
mov
andl
andl
mov
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
andl
push
mov
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
cmpl
mov
push
je
cmp
je
lea
push
push
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
not
mov
or
mov
lea
push
call
mov
pop
leave
ret
dec
leave
mov
add
and
je
insl
and
les
push
add
add
add
add
add
add
add
in
daa
cs
add
add
or
jge
cs
add
add
lcall
sub
clc
xor
add
jb
push
pop
jnp
jb
fs
inc
and
push
ja
mov
inc
stc
add
add
xor
insb
jmp
fadds
inc
pushl
jbe
add
cmp
inc
adc
test
test
jmp
test
lea
push
xor
in
jno
inc
lock
add
adc
insb
push
cld
repz
movl
push
std
add
xor
rolb
ret
loopne
incl
lea
add
test
mov
pushl
sbbl
push
push
or
add
repz
adc
test
add
pushl
rorb
jo
mov
add
add
push
adc
inc
add
add
add
inc
add
add
cmc
fadds
push
cmp
cmp
out
mov
xor
jbe
inc
subl
adc
inc
popa
inc
inc
jo
movsl
popa
push
imul
imul
lret
insb
imul
jae
cmp
jne
push
insb
xor
gs
jb
xor
pop
insb
inc
insb
inc
dec
add
add
add
add
out
add
add
add
add
add
add
pop
dec
xchg
add
add
add
les
dec
and
push
cmp
bound
add
leave
ss
ja
not
mov
popa
andb
inc
fs
and
xchg
mov
arpl
jle
mov
daa
cmp
ds
das
inc
rolb
mov
mov
js
push
in
hlt
test
imul
mov
or
dec
add
in
sub
cmpsl
negb
push
test
in
repz
sbb
out
shrb
jb
fistpll
add
mov
cmp
mov
das
int
insl
data16
sub
add
pop
pop
stos
out
arpl
jno
stos
sbb
jge
test
or
dec
cmp
xchg
inc
enter
cmp
outsl
popa
cmpsl
cmp
jne
lods
orb
movsb
fmull
jmp
jns
in
push
jmp
loopne
adc
lds
cs
push
dec
cmp
or
sbb
and
inc
lahf
arpl
pop
jg
sbb
test
and
aad
bswap
test
fstpt
inc
pop
jnp
pop
mov
and
lahf
cwtl
int
cmc
das
cmc
cmpsb
shll
and
rorl
push
jl
sbb
pop
jmp
leave
je
mov
pop
in
mov
push
ja
jb
sbb
lock
ret
std
inc
push
push
push
inc
mov
mov
xchg
adc
xor
jae
add
in
add
cmp
ds
push
mov
popf
aas
jecxz
int
cmpsb
int
orb
pop
out
adc
rcr
xchg
out
mov
out
flds
insb
sub
xchg
cmp
adc
and
into
jmp
fldt
out
and
inc
inc
mov
dec
or
imul
fistl
mov
fidivrl
sub
fmul
into
ret
fnstcw
test
mov
sbb
stc
fdiv
sub
xchg
mov
aam
xchg
iret
fnstsw
pop
pop
andb
cmp
push
mov
adc
pop
mov
adc
push
int
es
cmp
mov
add
pusha
jb
xor
push
fdivs
ljmp
mov
dec
cs
cli
pop
pop
push
data16
pop
adc
lret
shll
dec
inc
pusha
xchg
fidivl
cmp
loop
jbe
scas
sti
inc
jb
cltd
leave
bound
fadd
xchg
adc
push
leave
add
popa
stos
test
outsl
inc
es
add
rcll
repnz
mov
imul
mov
testl
jmp
mov
xchg
xor
test
ljmp
mov
sbb
outsb
adc
test
pop
dec
stos
loop
jl
gs
orb
lret
scas
sbb
mov
xchg
inc
imul
test
mov
sahf
cli
shll
rcrb
fldl
std
or
mov
fistps
aad
movsl
jae
add
out
sarl
aam
popf
mov
pop
repnz
jge
int3
movl
xchg
inc
jmp
rclb
cs
fistl
push
sub
jecxz
rcrb
cli
cltd
sbb
dec
stos
mov
sub
gs
shrl
imul
rcr
dec
ret
and
jge
adcb
ss
push
push
mov
sbb
std
push
add
push
addr16
or
ficomps
outsb
adc
ds
ret
jo
sub
repz
cltd
mov
outsb
or
fldenv
mov
pop
xor
push
pop
stc
jge
mov
aad
adc
mov
and
dec
or
inc
mov
test
aaa
or
mov
mov
dec
insb
les
leave
mov
nop
dec
fcompl
jmp
mov
aam
bound
jp
or
xchg
jl
sti
sub
int3
inc
pop
inc
bound
ss
adc
jmp
mov
cmp
bnd
jns
icebp
push
add
fnstenv
mov
cmp
mov
fcoms
xchg
pop
or
push
jge
subb
adc
ret
mov
adc
jmp
mov
lea
cmp
popf
lahf
jg
pushf
dec
in
mov
scas
in
popa
int3
pop
pusha
es
hlt
xchg
mov
mov
xchg
ds
mov
ficoml
sti
je
fisttps
jae
rolb
icebp
push
xchg
or
loop
into
loopne
enter
inc
add
aas
sub
dec
jmp
lcall
sbb
in
pop
loop
xor
loop
hlt
daa
push
mov
add
inc
mov
pop
push
btr
prefetch
or
aaa
mov
cmp
adc
arpl
aas
into
adc
and
and
jg
test
cmc
roll
scas
testb
insl
or
add
or
sub
pusha
or
push
js
lret
fsubs
sahf
xor
icebp
jb
push
loop
in
adc
aam
pop
sbb
sub
xchg
pop
mov
mov
mov
ja
sub
decl
xor
fwait
scas
ret
mov
inc
or
add
xor
cmp
ss
pop
dec
aaa
sub
das
lret
adc
pop
js
lods
mov
ret
and
xchg
inc
insl
jae
fldenv
pop
cmpsl
addr16
jno
jmp
cmp
les
jns
xchg
add
hlt
lcall
movl
push
dec
dec
fwait
add
ss
jbe
addr16
jb
cmpl
cltd
cs
mov
push
rcrb
adc
std
inc
sub
inc
js
mov
mov
jp
pop
fcomp
and
xor
fmul
or
ds
ss
rorl
movsb
popa
dec
mov
sbb
cli
cltd
rcl
lea
repz
imulb
aad
sbb
rcl
xchg
loopne
sbb
jl
jle
sbb
daa
xor
sub
xchg
and
xrelease
xchg
dec
data16
cmp
lods
into
imul
push
repnz
add
ret
leave
mov
mov
mov
push
insb
dec
icebp
adc
adc
adc
add
adc
insb
stc
and
xor
dec
lods
pop
in
mov
push
into
mov
lods
and
sbb
or
lods
mov
cs
rcrb
add
xor
imull
shr
ljmp
icebp
js
in
dec
pusha
push
pop
jg
push
jle
and
mov
sar
rcr
out
aas
std
xchg
loope
gs
and
cmp
stos
jo
and
xlat
std
xlat
pop
sti
sbbb
outsl
rorl
sbb
add
jle
jnp
mov
imull
cmp
adc
mov
jmp
shl
mov
lret
xor
fld1
bound
shlb
push
subb
test
js
cmp
mov
xchg
imull
xchg
aam
sbb
mov
cmpsb
lret
mov
pop
imul
xchg
push
push
lahf
repz
loop
pop
mov
ret
dec
aaa
cmp
adc
ret
test
notl
repnz
rorb
adc
and
dec
inc
cmp
adc
pusha
shll
push
mov
leave
repnz
int
mov
xor
mov
pop
cwtl
mov
aam
scas
rcr
mov
and
stc
outsb
pop
pop
cmpb
mov
mov
dec
cwtl
or
jb
jo
jmp
movl
sti
xchg
push
lahf
fistpll
mov
test
fnstsw
inc
loope
pop
sub
mov
cwtl
sub
inc
and
nop
adc
mov
xchg
add
imul
fldlg2
loope
push
in
mov
das
mov
fcoms
mov
out
pop
jne
push
xor
cmp
pop
inc
jno
aas
pextrw
mov
test
mov
loopne
dec
imul
popf
mov
jl
cmp
sbb
or
jge
ljmp
mov
iret
mov
xchg
nop
ljmp
adc
mov
mov
sub
mov
sti
shll
pushf
push
or
jb
adc
pop
push
lcall
in
dec
aas
cwtl
inc
addr16
pop
fisttpll
es
popl
lea
dec
and
cmp
or
push
jmp
adc
jmp
dec
popf
push
es
jle
sti
jns
push
scas
cmp
sbb
in
repz
aaa
cmp
in
insl
pushf
cmp
adc
loope
popa
push
testb
insl
js
lret
andl
lds
test
cs
cwtl
mov
mov
jecxz
mov
popa
mov
mov
jle
loopne
lods
out
jb
fstpl
xchg
mov
es
pop
lea
mov
pop
mov
ljmp
add
or
test
into
xor
sub
sbbb
add
out
js
push
push
das
push
inc
lahf
dec
loop
int
outsb
xchg
cmc
dec
sahf
or
repnz
mov
mov
and
jnp
scas
xor
jle
rorl
pushf
add
mov
pop
stos
push
jmp
in
imul
mov
cmpsl
push
cmpsl
rep
mov
jecxz
int3
jne
cmp
or
mov
push
movsl
sbb
stc
mov
sarb
cmp
xlat
clc
mov
or
lods
mov
repz
jmp
subb
aam
stos
cwtl
dec
or
fs
mov
scas
test
rcl
add
jmp
js
xchg
dec
push
shlb
pop
daa
mov
cmp
adc
push
jg
jbe
push
fwait
sub
ja
mov
xchg
push
xchg
outsl
ret
jbe
xlat
rclb
add
cld
jge
inc
mov
jecxz
cmp
arpl
fcoml
add
ds
pop
mov
ljmp
cmp
jle
sub
cmpl
jae
push
enter
ret
jecxz
xor
jbe
add
xchg
push
push
mov
test
setp
xor
cltd
ficoms
xor
clc
sub
sbb
inc
jne
subb
dec
ret
inc
dec
mov
sub
aad
jp
stc
mov
pop
stos
test
daa
aas
cmp
rcl
dec
cmp
sti
mov
or
loopne
scas
sahf
flds
dec
call
dec
mov
adc
mov
xchg
and
mov
xor
out
mov
mov
sub
repz
lahf
mov
ss
in
ret
inc
mov
pushf
pushf
push
outsl
stos
arpl
mov
or
xlat
cld
inc
repz
jp
icebp
xchg
sbb
and
jmp
mov
ss
push
sub
fimuls
out
and
in
sahf
cmp
aas
inc
lret
orps
xchg
jle
hlt
stc
adc
push
push
pop
sub
pop
sub
gs
mov
les
repnz
add
mov
lcall
xor
push
arpl
jge
fs
fadd
lret
xchg
cmc
outsl
or
mov
out
scas
sub
pop
cltd
rorb
sub
xor
mov
pop
test
jne
out
xor
lret
add
and
push
sbbl
jge
rclb
cmp
sbb
imul
loop
test
rcll
add
test
mov
insl
mov
ds
cmp
cmp
in
arpl
xorl
sbb
push
or
pop
into
push
jne
xchg
nop
std
xchg
push
fsubs
dec
sahf
cmpsl
fld
scas
jo
or
inc
outsl
or
test
dec
in
ret
fldenv
push
cs
sub
mov
and
std
or
push
pop
movsl
xor
add
sbb
xchg
popa
pop
jne
data16
sbb
inc
ljmp
dec
scas
mov
fsubrl
ss
mov
shl
arpl
mov
int3
mov
pop
rclb
in
add
dec
xor
in
mov
jb
lahf
enter
subl
dec
arpl
aam
sbb
imul
js
jo
and
cld
mov
std
stos
repnz
and
lcall
jmp
inc
add
cmpsl
pop
je
lret
std
xchg
add
xor
ja
inc
les
out
mov
imul
mov
adc
xchg
mov
clc
testb
mov
sbb
mov
inc
leave
adc
add
mov
test
xchg
inc
movsl
call
sbb
jl
loope
mov
popa
push
pop
or
xchg
enter
outsb
or
xchg
test
leave
sub
in
scas
and
sahf
fstpl
mov
mull
xor
rorb
xchg
shl
fmul
fucom
mov
cmp
add
mov
push
mov
loop
pop
push
mov
dec
sbb
ss
jg
popa
jecxz
sbb
cmp
jge
lods
mov
xchg
xchg
jae
addr16
push
adc
xchg
adc
daa
jecxz
xor
mov
das
loop
jb
sub
loope
outsl
inc
addl
sbb
xchg
clc
rcrl
add
andb
pop
orl
icebp
rcrl
das
cmpsb
loope
mov
xchg
idivb
gs
xchg
jbe
jp
mov
aad
xor
jmp
jp
jbe
idivl
pusha
adc
mov
jae
call
jns
notb
push
lds
hlt
add
cmp
cmpsb
fsubrl
mov
in
pop
mov
inc
out
insb
stos
pushf
xor
and
mov
insl
add
xor
jecxz
loopne
or
jne
fstl
dec
in
aad
push
inc
ret
shlb
sub
dec
mov
jns
fs
repnz
std
push
sbbb
pop
and
mov
aam
or
rclb
jo
lds
inc
and
mov
jmp
sti
js
adc
inc
fsubp
fld
lock
notb
jg
test
shll
sub
mov
call
in
stc
pop
aad
dec
mov
push
cmp
xor
cltd
in
sub
mov
mov
xchg
add
js
or
cmpsb
jns
sbbl
pop
dec
pop
pop
push
mull
out
cmc
dec
sbb
mov
or
sub
pop
iret
stc
aad
lods
cmc
xor
mov
inc
out
outsb
gs
es
lds
sbb
xchg
sub
insl
inc
sbb
je
pop
hlt
jns
addr16
imulb
fs
cs
xor
add
jle
stc
sbb
shll
dec
dec
lret
outsl
out
jo
lea
jnp
movsl
loop
and
xlat
lea
jno
push
jmp
movsl
pusha
inc
adc
adc
sub
jbe
ja
aaa
mov
jmp
icebp
insl
cmpb
or
rclb
stc
lcall
sbbb
pop
lret
fwait
lcall
icebp
scas
imul
dec
xor
push
and
sbb
fdiv
lea
mov
nop
popf
jecxz
test
push
adc
stos
xchg
inc
clc
push
or
sub
in
pushf
dec
sub
lods
xchg
xor
mov
movsl
popf
lea
mov
and
jns
rorb
jbe
in
fcmovb
mov
stos
push
scas
cmp
push
cwtl
int
repnz
addl
xlat
push
stos
add
push
adc
sti
adc
jbe
ss
xchg
xor
repnz
cld
jecxz
and
in
or
push
push
test
sbb
push
lretw
clc
dec
pop
xor
or
mov
cmp
lahf
dec
pop
sbb
mov
sub
xor
inc
fcompp
xor
xchg
out
dec
push
es
add
cmp
mov
mov
push
dec
xchg
inc
cmp
mov
aad
jo
mov
pop
mov
or
ds
lret
mov
mov
cwtl
int3
popf
pusha
add
inc
clc
add
add
xchg
test
lods
inc
cmpsb
cmp
js
scas
iret
or
fs
add
int3
sbb
scas
out
lock
xor
fbstp
and
fs
xlat
xor
pop
sub
lcall
inc
imul
imul
mov
rcrb
adc
sbb
mov
jo
lods
sbb
adc
mov
xchg
add
adc
push
jnp
stos
pop
jl
jb
mov
testl
fwait
scas
push
loop
aaa
mov
jmp
ljmp
mov
mov
mov
dec
xor
cmpsb
mov
or
lock
fsubl
testl
aad
je
pushf
clc
mov
add
mov
shll
pop
jmp
fcomp
mov
jl
es
or
jo
lcall
cld
mov
mov
push
pop
add
push
sarl
call
lods
fildl
add
popf
into
pop
cltd
sbb
fdivrl
pop
test
out
mov
lods
lret
jns
and
jg
int3
mov
mov
dec
push
adc
aad
daa
loopne
dec
aaa
dec
mov
into
jns
inc
lods
enter
sbb
in
inc
mov
push
lcall
add
lods
cmp
mov
ss
std
and
jmp
adc
fistpl
std
addr16
jb
out
xor
xchg
sub
or
lods
loop
jbe
inc
test
call
aad
lods
into
push
pusha
mov
pop
inc
aad
add
cmp
xor
enter
sahf
xchg
lods
mov
or
inc
movsl
aam
xchg
imul
push
push
push
dec
lcall
test
jbe
roll
mov
shlb
mov
or
repz
mov
imul
jge
sub
push
je
xchg
or
shrl
push
adc
sub
mov
lcall
sub
jae
fstps
clc
mov
out
mov
mov
data16
cmpsb
shlb
imul
push
add
sbb
fnstcw
shrb
sbb
outsb
push
xlat
ds
jl
inc
mov
add
test
in
mov
jg
or
jmp
dec
aam
add
imul
lret
xchg
sub
dec
mov
mov
push
jbe
jae
xchg
test
xor
mov
xor
lcall
xchg
imul
test
lret
jb
icebp
mov
xor
pop
inc
xchg
xchg
xchg
fwait
repnz
mov
loopne
leave
push
mov
lea
aaa
inc
out
push
xchg
out
inc
je
push
pop
xlat
sahf
and
mov
in
mov
push
mov
in
ret
adc
mov
fisubrl
mov
jmp
bound
int3
jnp
mov
pusha
jg
add
xchg
jg
imul
aas
jp
gs
bound
mov
in
mov
into
test
push
mov
xchg
test
mov
test
cmc
adc
pusha
mov
sbb
adc
mov
adc
popf
adc
enter
and
jecxz
sbb
mov
cmp
mov
jmp
inc
xchg
add
fdivrs
dec
inc
ret
or
xchg
nop
cli
or
mov
aam
jecxz
ficompl
sub
mov
xchg
outsl
or
xchg
popa
negb
or
xchg
pusha
sbb
adc
dec
addr16
push
lahf
push
popa
int3
movsl
xchg
inc
add
outsb
out
icebp
nop
les
adc
dec
or
cmpsl
jbe
jg
nop
stos
daa
mov
push
out
imul
and
cltd
movsl
and
lret
cmp
enter
popa
loopne
movsb
cli
dec
lcall
int
cmp
pusha
in
mov
imul
add
push
shrl
fsubrl
jbe
dec
sub
pop
ds
xchg
dec
pop
mov
dec
push
and
xchg
aas
pop
sbb
pop
popf
sarl
pop
xchg
fcompl
sub
mov
scas
jmp
push
ja
mov
xor
push
jp
lret
jle
and
and
inc
test
xor
xchg
dec
sahf
and
aam
jp
jl
pop
neg
cld
cld
adcl
mov
data16
adc
adc
add
das
pop
inc
sbb
ljmp
sbb
test
sahf
addr16
popa
pop
add
ficomps
rcll
inc
lea
sbb
jae
lret
push
das
mov
sbb
mov
xor
xchg
sahf
ret
push
mov
int3
sub
leave
mov
leave
cltd
push
mov
int3
mov
or
ss
hlt
sub
jno
dec
repnz
and
insb
mov
outsl
hlt
cmp
fadds
mov
adc
cltd
add
add
add
add
add
add
xchg
int
add
add
add
add
pop
mov
add
add
push
adc
add
add
add
add
add
add
add
add
xor
dec
in
in
in
inc
add
add
cmp
ja
mov
js
js
add
add
add
dec
jae
and
add
add
into
add
add
add
add
add
pop
add
add
add
add
add
add
js
popf
add
fs
add
add
sbb
sbb
sbb
and
add
add
and
popa
das
push
dec
push
ljmp
jae
jae
dec
dec
push
cld
add
sti
jecxz
jne
leave
in
js
cwtl
cld
adc
mov
pop
insb
push
lea
movl
leave
or
je
call
push
leave
in
std
lea
add
or
dec
or
adcb
sbb
add
lea
and
adc
mov
loopne
mov
mov
add
xor
push
loopne
add
incb
jmp
push
pop
insl
je
push
mov
mov
adc
or
decl
add
lea
fs
loopne
add
mov
or
inc
adc
call
clc
add
loopne
add
add
pop
add
add
add
jge
add
add
add
add
add
add
add
add
test
gs
add
add
imul
in
add
outsb
je
inc
fs
dec
add
push
je
push
dec
insb
imul
inc
out
jne
outsb
jae
cld
push
add
inc
xor
jb
dec
js
add
add
sbb
add
add
add
add
insb
add
dec
add
add
add
cld
add
std
add
add
ret
push
das
je
adc
shll
xor
cmp
int
jbe
out
in
and
mov
push
sahf
xchg
fs
mov
or
and
cmpl
cmp
and
test
cld
imul
add
jbe
xchg
cmp
cmp
add
pop
jne
jno
jae
ret
pop
dec
iret
adc
jp
ljmp
dec
fcomp
in
and
sti
lods
out
out
jnp
sbb
mov
pop
mov
xchg
fwait
sub
xor
cs
aad
cmp
pop
dec
in
maskmovq
imull
repnz
sub
inc
pop
fsubr
shlb
in
orl
adcb
into
jp
xor
iret
xor
aas
in
das
jp
hlt
xor
icebp
mov
fwait
rcrb
ret
cmp
test
push
mov
and
arpl
out
push
mov
lods
insb
es
inc
lock
add
pop
cmpsl
jb
stos
inc
notb
sub
push
xchg
add
jg
lock
outsl
and
cmpl
mov
xor
jb
sbb
or
sub
pusha
mov
ljmp
mov
dec
cli
outsl
and
lds
mov
adc
cltd
dec
fldln2
push
pop
or
fildl
adc
int3
push
sbb
loope
pusha
mov
pop
or
in
jle
pushf
ss
dec
push
or
mov
mov
push
lcall
sarl
sarw
addr16
rcrb
nop
insl
push
inc
repz
push
push
jnp
pop
inc
mov
ret
hlt
mov
push
pushf
lea
clc
das
mov
sbb
sti
sbb
push
xchg
sbb
lods
scas
xor
mov
out
mov
mov
xor
add
stc
add
mov
push
test
xor
imul
cmp
push
xchg
inc
popf
dec
arpl
push
xor
xchg
les
jns
and
scas
add
xor
mov
sahf
mov
inc
xchg
in
jle
mov
inc
push
iret
in
cs
dec
sahf
xor
sarb
adc
mov
std
pop
fwait
push
mov
out
or
test
rcl
stc
sbb
daa
adc
int
jl
outsl
mov
ljmp
lret
and
fildll
test
scas
push
cmc
sbb
stc
sti
sub
ret
faddl
pop
pop
int3
ljmp
sub
dec
aam
cmp
mov
mov
inc
xchg
outsl
and
sar
xchg
mov
jmp
jne
mov
jmp
xor
mov
adc
fcoml
or
pop
iret
lret
stos
add
cmp
scas
mov
icebp
rcrl
inc
or
inc
push
insl
out
in
inc
push
or
leave
and
mov
cmpsl
sbbl
xchg
mov
loope
fcoml
fistl
push
dec
sahf
enter
adc
leave
fisttpll
lahf
lock
jp
and
and
lea
stos
std
shlb
jnp
mov
sub
or
lcall
sub
cld
lcall
sub
clc
push
sub
and
mov
jle
jle
sbb
pop
jnp
sub
mov
sbb
xor
mov
aad
sub
or
addl
pop
xchg
cmp
dec
push
jb
xor
xor
mov
or
sub
xor
cmp
xchg
pop
mov
sub
add
cltd
dec
addr16
jge
mov
or
add
addb
pusha
ror
enter
sub
leave
addr16
push
das
rorl
mov
pop
pusha
pop
add
xor
js,pn
inc
add
xor
jbe
mov
adc
popf
adc
mov
decb
xchg
out
mov
pop
pushf
xchg
jno
lock
sbb
sbb
dec
mov
lea
in
adc
adcl
pusha
fwait
and
cmp
sub
xor
mov
xchg
sub
icebp
enter
add
mov
mov
out
xlat
inc
daa
xlat
call
push
ficomps
mov
jecxz
adc
call
mov
mov
jno
add
int3
data16
dec
ja
mov
jg
adc
std
test
aas
sbb
add
mov
call
ja
mov
call
jg
dec
lahf
loope
push
inc
cld
vcmpsd
fisubl
mov
outsl
loopne
jl
push
add
sbb
dec
pop
add
xchg
insb
adcb
mov
faddl
ja
jl
inc
hlt
mov
pop
sbb
mov
push
jmp
and
cmp
shrl
jmp
cwtl
ret
mov
pop
mov
jb
hlt
sub
fiaddl
and
inc
gs
ljmp
dec
ljmp
xchg
pop
mov
shl
fldenv
adc
int3
daa
clc
fsubr
xchg
xor
xlat
cld
inc
mov
imul
scas
into
xchg
in
cmc
push
jp
mov
mov
and
xor
or
or
jmp
test
mov
push
cmc
and
adc
mov
jge
inc
stos
es
mov
cmp
loop
or
dec
mov
inc
mov
mov
test
insb
push
mov
mov
dec
imul
inc
out
mov
pop
subb
inc
xchg
inc
enter
mov
sbb
cli
xor
leave
movsb
push
pop
movsl
mov
lret
sub
xchg
push
pop
testb
sbb
xchg
adc
sub
mov
adc
cmpsb
fsubrs
rcr
stc
movsb
sbb
adc
and
out
and
jg
lds
jmp
push
fmul
mov
incl
push
repz
sbb
lds
add
inc
addl
inc
sti
adc
mov
fbld
dec
sub
arpl
outsb
push
xor
std
mov
mov
lods
xor
outsb
jno
out
push
push
call
pushf
cmp
mov
lds
es
pushf
cmpsl
cmpsl
cmpsl
les
fsubrl
lcall
into
shlb
xchg
popa
test
stc
out
dec
mov
nop
jo
inc
cmp
cld
stos
fistps
jnp
add
jno
and
test
pop
nop
js
test
insb
mov
in
pop
mov
dec
mov
xchg
and
jb
jbe
jge
in
add
scas
push
data16
dec
cli
cltd
adc
mov
inc
dec
jbe
gs
mov
or
ret
dec
cmp
enter
jae
sub
push
bound
test
ficomps
or
js
test
or
xchg
jg
fucom
add
jp
pop
aad
push
mov
popf
ficomps
jg
xchg
add
mov
sub
stos
mov
mov
xchg
mov
cwtl
adcl
xor
add
cmpsl
add
ds
sbb
imull
xchg
mov
inc
pop
mov
out
inc
dec
int
inc
xorl
dec
movsl
push
push
aas
imul
outsl
bound
xor
cmpsb
xchg
sbb
jne
dec
xchg
ffreep
cmp
imull
les
test
lret
fimuls
fdivrs
xchg
imull
stos
pusha
inc
xor
xorl
sbb
fwait
loop
add
sbb
mov
cmp
hlt
mov
push
push
dec
mov
mov
cmp
ret
dec
or
adc
sbbb
cs
rclb
lods
rolb
mov
cmpsb
push
or
jno
sub
movsl
frstor
imul
shll
stc
inc
sub
imul
push
pop
dec
mov
inc
adc
cmp
sub
push
xchg
push
pop
repz
mov
pop
add
inc
scas
xor
adc
outsb
daa
jns
scas
fsubrs
jecxz,pt
nop
xchg
mov
mov
push
mov
outsl
lock
push
jmp
imul
fsubrl
jbe
mov
sub
pop
pop
add
dec
or
cmp
pop
xchg
add
xchg
pop
leave
loope
and
stc
jge
notl
out
lock
int
xor
jb
popf
ljmp
mov
dec
fmull
adc
shll
sbb
es
or
pop
mov
pop
test
xor
int
pop
xor
pop
dec
cwtl
jbe
stos
jne
outsb
rol
adc
jecxz
enter
add
pop
es
push
xorl
lahf
jnp
inc
popa
nop
scas
push
dec
cwtl
bound
push
scas
andb
or
sub
lock
and
out
jb
and
sahf
xor
das
in
dec
sub
jno
jbe
mov
jecxz
in
xor
cmp
rclb
cmp
orl
sarb
insl
push
cmp
fistpll
mov
test
pop
add
cmc
bound
je
cwtl
inc
jmp
pop
rorl
js
xchg
adc
pop
flds
enter
das
test
test
outsl
sahf
xor
fsubl
add
mov
mov
jp
inc
mov
dec
adc
je
test
out
jne
mov
mov
xchg
pop
lds
in
xor
pop
int3
jl
sbb
or
xchg
xchg
or
mov
fdivs
sub
fwait
stos
adc
push
or
lods
aad
es
imul
mov
mov
jns
fcmovnu
shll
and
popa
pop
dec
std
mov
aad
add
dec
stos
push
mov
popf
mov
lcall
xor
lahf
add
mov
inc
ljmp
cltd
imul
mov
xchg
pop
jg
cmp
shlb
or
mov
cmp
cld
iret
shrb
vpshad
xor
xchg
push
cld
clc
sub
cs
pop
sub
push
xor
and
xchg
mov
daa
ds
jbe,pn
inc
jns
popf
ss
pop
mov
out
jne
jl
loop
in
arpl
push
mov
faddl
into
popa
lock
dec
dec
mov
inc
lcall
arpl
loop
inc
enter
movsb
xchg
scas
loope
mov
aas
sub
cli
repnz
aam
lods
mov
movsl
dec
cmc
rcl
cmpsb
fxam
lret
sbb
addr16
lea
or
pop
add
fistpll
scas
shl
adc
lock
ja
or
xchg
loope
jo
xor
rorb
or
mov
loopne
xor
pop
mov
or
ror
and
sti
cmp
add
sbb
add
ret
jle
in
vphaddubw
in
popf
fucomp
dec
or
test
or
clc
adc
lcall
das
loop
jge
dec
or
add
hlt
outsl
mov
adc
insl
fucomp
add
sbb
call
insl
rorl
lret
sti
jae
ret
push
ss
stc
jnp
xchg
push
xchg
mov
cmp
sbb
mov
mov
add
popf
mov
aaa
dec
inc
std
jo
fisubrs
push
add
andl
mov
dec
and
sbb
add
sub
jmp
push
push
inc
and
add
in
or
out
out
clc
in
out
cmp
push
popf
not
movsb
cwtl
scas
jns
xor
cmp
pop
xchg
jg
dec
fisubrs
cmpsb
inc
aam
pop
jae
mov
test
xor
pop
cmp
pushf
jo
xchg
scas
pop
mov
add
mull
popa
ret
bound
shlb
pop
mov
clc
subb
sti
jns
mov
ja
xchg
adc
bound
adc
cli
sub
sub
and
dec
cmpsb
and
and
stos
add
add
ffree
adc
js
or
scas
mov
sub
and
dec
hlt
dec
mov
int3
pop
jnp
lods
cwtl
sti
iret
dec
ss
outsb
jns
fdivrp
push
pop
inc
ja
xchg
shlb
jp
ss
cmpsl
scas
es
pop
in
cli
xor
push
sbb
add
sbb
jbe
aam
out
aad
adc
fwait
sbbl
mov
push
pop
inc
push
stc
jb
lea
push
fnsave
movsl
push
mov
adc
sbb
pusha
dec
fsubrp
stos
call
dec
leave
sbb
xchg
xchg
sub
and
mov
adc
mov
or
shl
cld
mov
xor
cmp
xchg
aaa
dec
neg
adc
adc
jbe
jmp
rolb
mov
pop
cmp
sbbb
cmpl
es
cwtl
sub
int3
test
mov
or
sbb
and
stos
es
mov
es
bound
mov
subb
xchg
mov
jno
and
rclb
push
repnz
xchg
aas
cli
sbb
jecxz
ljmp
xchg
stos
ja
cmp
xrelease
xchg
pusha
cld
pop
mov
aas
imul
fwait
xchg
test
xor
iret
xorb
adc
das
jle
add
dec
push
hlt
lods
fimuls
dec
std
fnstenv
jbe
lock
insb
inc
mov
xorl
test
cmp
int
dec
ja
mov
cmc
add
pop
cmpsb
jg
in
fwait
cmp
sub
test
xorb
into
imul
fldenv
mov
dec
mov
iret
and
xor
sub
and
dec
dec
divb
sti
lahf
mov
shlb
mov
mov
clc
jge
dec
shlb
mov
pop
push
or
mov
test
pop
jno
xor
std
lea
test
adc
loopne
mov
mov
fnsave
fdivrp
fldcw
ja
mul
pusha
mov
ljmp
add
push
xorl
push
jbe
test
loop
out
movsb
addr16
lret
popa
cs
mov
sbb
lds
roll
inc
jle
fcoml
pop
in
mov
jge
lret
dec
and
sbb
xchg
shlb
aad
lret
xor
xor
cmpsb
push
pushf
mov
stc
call
out
mov
add
ja
icebp
pop
mov
jmp
xor
ljmp
lds
mov
sub
pop
pusha
jle
jne
sbb
mov
jae
mov
movsb
mov
mov
pop
call
mov
adc
lea
xor
push
and
inc
cmp
stos
push
push
inc
add
or
movups
insb
cmp
dec
rolb
push
jp
lahf
icebp
push
mov
add
mov
mov
ja
loope
mov
imul
mov
xchg
cmpsl
and
dec
cmp
gs
lds
fnsave
xorb
dec
dec
das
cmpsl
nop
mov
fdivs
stos
mov
movsb
push
xor
sub
cmp
loop
mov
inc
xchg
dec
rcr
das
mov
jge
fsub
test
lcall
nop
test
fisttpll
jmp
bound
jno
xlat
fsubl
mov
ficoms
mov
mov
outsb
jmp
mov
in
mov
xor
popf
insl
add
mov
jecxz
push
insb
ret
lret
hlt
in
aaa
pop
jle
orb
mov
inc
inc
and
das
fmull
jmp
fisttpll
lret
aas
bound
and
repz
mov
icebp
dec
fwait
jno
in
push
jp
gs
pop
clc
mov
les
fdiv
jns
leave
test
jle
aas
mov
sbb
mov
mov
js
ja
aas
popa
sub
mov
js
pop
jne
adc
cli
lea
cmp
mov
jge
cltd
test
out
sbb
mov
cmp
add
and
or
out
insl
in
xchg
mov
stos
xchg
filds
stos
inc
scas
stos
lds
xor
adc
mov
fsubrl
jbe
adcb
jmp
imull
xchg
cli
lahf
roll
pop
sbb
jb
adc
lcall
nop
in
test
cs
push
mov
jmp
lahf
sahf
std
xor
daa
push
inc
sub
bound
je
lahf
or
cmp
orl
push
inc
cmpsl
mov
test
pop
push
jmp
test
pop
pusha
call
hlt
movsb
dec
pop
sbb
dec
adc
cld
pop
adc
adc
jg
loope
adc
les
mov
sub
fwait
jmp
push
cs
cmp
cmpsb
fcomps
test
jnp
jge
mov
mov
cmpsl
mov
enter
add
adc
sub
icebp
pusha
inc
xchg
add
leave
insb
sarb
lret
out
sub
shrl
das
and
das
cmpl
test
jp
aas
loop
xchg
aaa
add
cmp
cmp
adc
pop
lcall
add
fdivrl
push
sbb
jo
mov
int3
nop
mov
mov
or
cmpsb
or
fists
mov
sbb
test
add
pop
cwtl
push
call
sahf
xchg
pop
ficompl
lods
and
out
add
lods
repnz
mov
and
pop
negb
sbb
push
fwait
ret
add
gs
or
pop
sub
mov
pop
sub
jnp
icebp
lahf
mov
inc
xor
call
dec
pop
add
js
jne
cli
cmc
inc
dec
cwtl
ds
fadds
cmpl
adc
std
sbb
daa
mov
mov
cmp
stc
pushf
jno
das
daa
mov
jns
out
pop
mov
xchg
rcrb
mov
fisttpl
and
cmp
xlat
mov
pop
mov
adc
push
mov
imul
ficoml
mov
pop
shl
pop
jmp
pop
pop
hlt
inc
jo
mov
jg
xor
enter
sub
lea
aaa
jmp
rcll
mov
ret
enter
scas
push
test
add
andb
lock
insl
push
in
xchg
inc
ja
adc
outsl
loopne
lcall
movl
add
lods
cli
push
gs
push
pop
sub
push
or
add
test
add
test
sub
mov
lock
or
jo
out
nop
pop
pop
test
mov
in
fistpll
xchg
std
in
xchg
inc
inc
insl
jo
cmpsb
or
push
adc
mov
ret
xchg
cmp
xchg
pop
scas
inc
repz
add
les
bound
das
sub
sahf
stc
sbb
arpl
enter
and
stc
repnz
adc
cmp
mov
call
iret
call
stos
aam
lahf
xchg
sub
mov
mov
dec
xor
lock
cmovle
push
jbe
cld
fs
out
test
in
sub
mov
mov
out
dec
lods
sti
cld
and
dec
or
cmp
enter
mov
mov
aam
xchg
mov
cwtl
pop
cli
cltd
in
sub
mov
sbbb
and
lods
test
or
out
shrb
add
xor
cmpsl
clc
xchg
jmp
and
lea
imul
mov
sbb
inc
jecxz
insl
xor
dec
imul
ret
jmp
test
subb
inc
jbe
add
inc
adcb
ljmp
mov
push
mov
mov
mov
iret
or
mov
cs
rcrl
cmp
inc
inc
xor
imul
add
inc
cwtl
add
data16
sbb
and
sbb
arpl
call
fdivrs
adc
loop
push
push
inc
sub
lret
pop
push
lahf
mov
int3
daa
inc
xchg
in
cltd
jmp
mov
loop
inc
mov
add
xchg
xchg
sbb
inc
pop
popa
or
inc
cmc
stos
inc
loop
pusha
orl
stos
mov
hlt
xchg
mov
fwait
jo
jo
outsl
outsb
call
aaa
inc
movsl
ss
pop
cs
popf
xchg
fcoml
lea
pusha
push
call
lock
sub
lcall
in
test
mov
pop
mov
in
subl
aam
jmp
out
mov
sbb
dec
in
mov
outsl
orb
inc
sarb
out
and
inc
loope
loop
je
mov
xor
call
xchg
or
cmp
daa
gs
add
cmc
xchg
pop
jl
repnz
mov
adc
pop
inc
xchg
test
sar
inc
adc
mov
mov
and
ljmp
push
inc
add
add
add
pop
add
add
add
in
add
int
add
add
add
jge
add
add
add
add
in
add
add
add
pop
add
popf
add
add
add
lods
add
add
xor
xor
xor
add
add
add
addb
add
add
stos
stos
mov
mov
jae
incl
add
jmp
push
add
outsb
add
mov
jmp
add
add
add
add
sbb
add
add
add
add
add
add
pop
mov
add
add
add
add
jae
outsb
push
jl
ja
dec
add
push
jb
inc
mov
sti
mov
sbb
enter
mov
inc
les
push
lea
adc
notb
cs
jbe
test
add
mov
enter
pop
dec
adc
jge
out
ret
add
push
incl
push
cmp
mov
lea
adc
add
push
decl
adc
mov
shlb
cmp
add
sub
adc
cld
adc
lea
adc
push
cmp
inc
mov
rorl
jns
add
jne
cmp
add
add
pop
add
jmp
add
inc
inc
add
gs
mov
dec
je
gs
je
jo
sbb
insb
jo
dec
loop
inc
jb
add
push
dec
arpl
insb
in
cmp
cs
addr16
push
gs
xchg
jb
stos
push
imul
js
xor
add
add
mov
stc
dec
imul
add
cs
push
mov
adc
incl
out
mov
lock
out
mov
lahf
push
jle
pop
shlb
cmp
test
sub
in
xchg
dec
jno
inc
nop
and
shll
cmpl
mov
mov
cmp
push
jg
push
pop
xor
adcb
movsl
cmp
fcomp
mov
mov
push
jmp
in
imul
xchg
icebp
icebp
out
pop
roll
and
and
lods
fstpl
sub
rcrl
scas
not
shrl
test
stc
adc
fidivs
loope
negb
pop
dec
mov
xor
pop
je
xor
hlt
add
aam
mov
lret
ljmp
jge
push
scas
mov
mov
adc
dec
jmp
sub
js
xor
xchg
jmp
repz
popf
out
mov
dec
push
ret
and
dec
or
stc
add
cmp
pop
inc
mov
aas
jbe
push
in
outsb
dec
mov
clc
mov
mov
sahf
mov
decl
and
and
sarb
adc
xchg
nop
lahf
dec
add
adc
popa
jmp
pop
push
mulb
jo
cltd
mov
loop
mov
rcrl
xchg
loop
dec
push
call
int3
adc
push
push
ret
push
inc
adc
adc
and
pop
scas
pop
subl
sbb
push
enter
pop
imul
push
cmp
jne
addr16
xor
ja
out
shr
mov
push
and
test
stc
pop
lahf
ret
push
xchg
mov
inc
pop
pop
sub
repnz
or
into
shrl
addr16
xchg
jg
jl
inc
subb
inc
nop
cmpsb
dec
mov
mov
iret
outsb
cmpsb
aad
shll
and
inc
adc
iret
jno
jle
clc
jbe
jb
gs
lock
pop
jb
addr16
ds
int
push
mov
lds
icebp
je
lcall
mov
les
mov
mov
inc
mov
push
jno
roll
imul
pusha
adc
xchg
xor
cltd
fs
sbb
cmc
sbb
sbb
xor
filds
lahf
dec
inc
xlat
int3
dec
dec
cld
call
pop
rcll
enter
test
inc
inc
pop
adc
xor
out
ficomps
js
inc
adc
pop
shrb
daa
stos
je
jle
mov
testb
ret
jecxz
push
cld
cmc
pop
xchg
sbb
xchg
lea
cmp
cwtl
lret
jecxz
movb
sarl
inc
cmp
or
aaa
mov
sbb
sub
outsl
adc
pop
fdivl
testb
jns
sahf
mov
ss
xlat
es
lds
inc
jns
arpl
sub
jl
or
sbbb
dec
sub
das
push
clc
sarl
cltd
leave
int
cmp
inc
inc
dec
push
outsl
imul
mov
test
cwtl
pop
in
dec
in
lahf
cmpl
or
pop
ljmp
mov
out
fwait
pop
jp
jnp
xchg
lods
and
mov
dec
arpl
add
xchg
loopne
in
hlt
stc
data16
cmp
out
or
jne
negl
xor
push
sub
sti
mov
jno
push
xchg
fistl
pushf
or
pushf
mov
cs
push
dec
pusha
dec
sahf
sbb
add
mov
mov
mov
mov
sar
adc
jnp
jle
neg
xchg
movsb
in
pop
fldenv
stos
pushf
cmpsb
dec
or
lods
sub
insl
mov
lds
je
test
je
xor
mov
push
clc
fidivs
test
or
test
shlb
dec
sub
js
pop
add
pop
add
inc
icebp
cwtl
dec
push
push
hlt
ljmp
jb
aas
imul
jno
pop
mov
xchg
call
js
in
inc
pop
shr
movsb
cmp
xor
jae
inc
in
loop
aad
ficompl
das
sub
clc
aad
push
sub
out
push
push
xchg
mov
flds
cmp
dec
lds
lea
pop
stos
or
xor
scas
outsl
dec
out
in
inc
in
jns
lds
mov
mov
sbb
out
clc
pop
gs
lret
or
and
lock
es
rcr
fistpl
adc
push
repz
or
inc
loop
xor
scas
and
fwait
jl
pop
mov
int3
push
or
xchg
iret
ds
add
or
rcl
shrb
push
push
push
pushf
push
or
sub
xor
mov
test
sub
jg
ljmp
out
inc
jle
fistpll
or
xchg
and
jnp
and
fdivl
mov
in
into
shlb
push
mov
in
inc
push
ds
lds
mov
loop
pop
xlat
clc
mov
sbb
or
int
insl
pusha
out
jae
push
jp
pusha
xchg
cs
xchg
pop
mov
mov
dec
sub
in
mov
dec
mov
loop
cli
mov
outsl
scas
insb
aam
fsubp
push
lahf
cmc
push
dec
ror
movsb
pop
icebp
adc
sub
sbb
push
popa
xor
clc
cli
push
jo,pt
insb
xchg
rclb
hlt
dec
pop
inc
push
mov
inc
cmp
sub
adcl
inc
pusha
lods
mov
and
jmp
lret
push
daa
dec
mov
push
push
push
in
and
pop
sub
cmp
jb,pn
in
lcall
pusha
clc
test
sahf
mov
cmp
dec
sub
push
iret
cmp
jmp
mov
mov
add
ret
sahf
repz
pop
mov
push
xchg
and
in
cli
fbstp
cwtl
jle
jne
in
test
lds
das
add
fildll
push
aaa
mov
imul
outsl
mov
push
popf
test
xor
push
je
sbb
dec
fdivrs
sbb
scas
inc
repz
ficompl
into
pop
dec
je
cmp
push
jbe
dec
push
ret
addb
sub
mov
ficoml
mov
sub
aaa
mov
cltd
add
in
ja
pop
adc
mov
out
jns
dec
out
xchg
sbb
ljmp
or
xchg
outsl
shlb
aas
jb
int3
stc
addr16
loopne
lock
notb
add
add
bound
imul
cwtl
xchg
in
cmc
adc
insb
cwtl
ja
int
cmp
fstp
cmp
test
cmp
lahf
outsb
xor
mov
mov
ret
push
or
sub
or
call
aad
or
lods
pop
sub
pop
cmc
push
sub
lods
bound
lahf
adc
or
xor
fldl
mov
jns
sahf
mov
mov
ret
or
cmpl
xor
test
mov
sub
mov
aas
xchg
icebp
mov
outsl
mov
mov
jbe
pop
xor
faddl
sub
dec
fsubl
cmp
jmp
inc
add
test
ljmp
out
jne
lock
testb
jmp
aas
cmp
out
pop
out
inc
lea
lea
outsl
cmc
pushf
and
testb
in
xor
in
cmp
mov
out
andb
mov
jge
jns
add
cwtl
add
out
pop
inc
icebp
fdivl
inc
pop
cmp
add
pop
fcoms
jae
imul
out
dec
xorb
sbb
imul
enter
stc
cmpsb
sbb
or
push
xor
or
sti
loope
lds
insb
and
mov
daa
lock
aam
xchg
xchg
mov
pop
mov
push
and
push
push
fists
sahf
add
cmp
or
movb
xchg
andb
add
and
push
andb
jbe
pop
mov
pop
cltd
cmp
notl
add
cmc
sti
test
int3
or
ja
lods
rcrl
arpl
push
data16
xor
je
dec
sub
mov
adc
out
mov
addr16
xor
pop
scas
rcrb
and
mov
sarl
daa
jbe
dec
call
lock
and
stos
mov
aam
jo
mov
ja
fs
pmaxub
push
or
or
mov
ljmp
fistpll
lock
addr16
fmuls
test
jle
push
jg
sbb
push
jb
out
shlb
cli
xor
mov
xchg
out
out
shrl
aad
and
add
js
dec
pop
or
dec
sbb
push
aas
pop
ljmp
push
mov
in
cmp
out
out
ja
ja
popa
push
and
pusha
dec
stc
dec
lret
dec
jo
or
pusha
sbb
mov
mov
out
mov
clc
cmp
jg
or
dec
in
xor
in
xchg
test
add
lock
sbb
data16
repz
jge
ret
pop
pop
cmp
add
dec
out
decl
xchg
lret
bound
jl
mov
mov
push
xor
xchg
sub
pop
push
push
xchg
inc
stos
cs
dec
cmpb
push
pop
outsb
push
cmpsb
push
enter
dec
cmp
cwtl
inc
sub
cli
aam
xchg
inc
xchg
xchg
adcb
jecxz
lea
mov
xor
inc
pop
fwait
add
pop
adc
mov
and
xchg
testb
xchg
mov
pop
inc
mov
xchg
mov
lret
ljmp
mov
mov
test
jecxz
xlat
sbb
xchg
jo
and
fsts
stos
aam
dec
in
jg
in
cmp
sets
push
mov
fisttpl
into
xchg
nop
pop
sub
dec
push
jge,pn
push
push
sub
pop
xor
cmc
frstor
mov
cmpsl
addr16
repz
xor
jecxz
std
imul
xadd
ret
in
cld
mov
movsb
nop
cmp
out
in
in
rep
xlat
test
dec
pop
and
cmp
test
pop
mov
fwait
shrl
rorl
jmp
mov
subl
insl
mov
xlat
pop
add
jne
es
roll
cmc
fnstsw
xlat
sbb
jl
popf
scas
mov
jns
mov
imul
and
push
pop
aaa
mov
xchg
jns
into
sbb
push
adc
push
cli
jecxz
or
pop
movsb
jno
pop
aas
mov
pop
shll
cmpb
push
cmp
out
adc
xlat
inc
das
xchg
cmp
inc
jp
xchg
push
dec
sub
icebp
cmpsl
adcb
lods
sahf
jo
lcall
call
xor
jge
scas
in
loop
scas
add
cmp
dec
mov
cmp
push
cmp
pop
ror
xchg
inc
jecxz
mov
adc
xchg
jge
pop
dec
inc
push
icebp
sbb
cmp
or
bound
nop
pop
in
jle
orb
dec
inc
xor
test
xor
mov
rorb
or
repnz
inc
xor
jae
pop
icebp
jne
inc
outsb
mov
test
mov
mov
adc
in
mov
lock
idivl
andl
cs
jo
xchg
and
call
jnp
mov
scas
cwtl
int3
icebp
cmp
inc
pop
das
cmc
inc
pop
xchg
aas
add
std
cmp
idiv
add
and
cmp
xor
js
test
jp
jl
sbb
inc
pop
and
mov
js
loope
inc
mov
cmp
cmp
sub
imul
jmp
mov
call
sub
jns
ss
mulb
adc
test
mov
out
adc
lret
jnp
cltd
mov
fcoml
fwait
xchg
sti
jg
in
mov
loopne
repnz
pop
mov
cld
aaa
decb
scas
out
insl
xchg
ds
push
mov
call
cmp
shufps
or
push
lods
sub
inc
xor
push
cmp
cmp
lds
and
xor
xchg
inc
mov
and
cmpsl
outsb
push
sub
mov
sub
das
jne
dec
add
or
aas
fsubrs
rcr
hlt
repz
pushf
lret
std
mov
mov
push
rclb
and
enter
and
lods
enter
jae
xlat
pop
iret
jp
movsb
stos
cmp
pop
test
sub
adc
push
rolb
fs
roll
in
mov
je
or
dec
sahf
ret
cmp
adc
fpatan
or
cld
sahf
or
inc
cwtl
adc
mov
inc
inc
xchg
movsb
daa
andb
add
jnp
js
dec
sbb
hlt
mov
sahf
push
repz
cmp
std
arpl
out
rcl
mulb
or
mov
outsb
mov
xchg
fcmovnu
cmp
movsb
xchg
iret
sbb
jmp
test
aas
xchg
inc
lods
push
dec
xchg
xor
sahf
in
pop
jb
mov
incl
ds
cmp
arpl
loop
push
pop
fisubl
mov
mov
pop
and
arpl
gs
pop
jmp
xlat
pop
pop
out
repz
cli
or
push
mov
jmp
out
or
pushf
repnz
inc
das
add
or
mov
sti
in
xor
pop
arpl
ret
std
jbe
pop
push
jb
fprem
inc
xchg
mov
xchg
mov
cltd
rcrb
inc
sbb
outsb
sub
mov
js
dec
cs
dec
sbb
add
lods
rcrb
sahf
sbb
cmc
xchg
cmc
push
mov
dec
fmuls
xchg
out
dec
cmp
cmp
mov
mov
aam
adc
ret
mov
xchg
rcr
push
cmp
xor
imul
adc
arpl
jbe
out
sub
xchg
dec
jge
push
inc
jp
repnz
mov
cli
in
in
into
sub
mov
dec
or
enter
test
xor
out
orl
and
in
loop
add
std
into
mov
leave
lds
jg
pop
xor
push
xorl
addr16
popf
inc
fisubrl
lods
xchg
rcl
sbb
xor
cmp
stos
mov
fs
inc
lahf
cmpsb
cmpsl
in
enter
stos
movsl
fdiv
imul
insb
mov
ss
scas
notl
push
jno
pop
cmc
lahf
sbb
outsb
cmp
xchg
or
sahf
xor
dec
sub
sahf
jecxz
mov
adc
inc
ss
mov
movsl
push
or
pop
add
shrb
mov
out
scas
sbb
cld
mov
das
adc
shll
mov
test
and
jl
mov
scas
inc
push
inc
xchg
test
ret
xor
inc
add
add
mov
cwtl
cwtl
lods
add
mov
inc
pushf
jl
mov
mov
mov
cld
and
xchg
add
or
ret
loope
sti
xchg
pop
fucomi
add
jg
adc
out
pushl
xor
lock
cmc
sbb
fwait
mov
rcrl
mov
jo
jl
inc
lock
jne
dec
into
adc
stc
xchg
jnp
stos
stc
int
js
sbb
sarb
push
lret
cltd
imul
shrl
hlt
sti
xchg
scas
idiv
cmp
push
push
or
sbb
xlat
imul
push
pop
mov
jp
mov
sbb
aad
xlat
dec
mov
pop
test
dec
ds
pop
dec
ljmp
xchg
pop
jle
mov
stos
inc
jns
cmp
int3
cmp
sub
jae
fcomps
cmp
mov
clc
push
push
sbb
sbb
and
int3
inc
jmp
or
sub
jg
roll
xchg
pop
das
ljmp
mov
ds
shll
dec
call
ds
xor
push
imul
push
mov
pusha
cmc
repnz
push
test
std
mov
out
aad
mov
jmp
jle
lret
loopne
lahf
inc
push
mov
dec
repnz
inc
push
mov
or
leave
adc
mov
call
xor
cmp
std
add
or
movsb
call
sbb
sub
pop
or
adc
vpmaxub
pop
jg
hlt
jne
testl
mov
int
into
test
out
cmp
jns
movsb
jg
lahf
dec
xchg
xor
ficoml
xchg
les
pop
jae
sti
jns
inc
fsubl
call
cwtl
xor
dec
outsb
call
jp
and
xchg
or
hlt
mov
mov
aaa
cmc
lock
fldenv
sbb
adc
fdivrs
xor
mov
cmp
cwtl
jns
bound
mov
or
pop
inc
inc
cmpsb
pop
add
iret
pop
in
cmc
or
jns
test
enter
dec
or
arpl
and
test
fstl
sub
fdivrs
pop
jge
repnz
cmp
push
jecxz
int3
outsl
xchg
xchg
push
out
xor
mov
xor
lret
lock
pop
sar
fdivr
test
mov
mov
and
test
mov
lret
xor
das
into
cwtl
jge
lods
adc
movsl
inc
inc
xor
cmpl
cmc
xor
pushf
mov
push
dec
ds
xor
in
mov
loop
bound
movsb
lods
fstps
lock
jge
xor
nop
out
rcr
xor
cmp
nop
pop
leave
cmp
jl
xchg
cmp
inc
aad
cltd
adc
cmpsl
sub
std
push
inc
jmp
cmpsb
mov
inc
iret
mov
scas
mov
in
push
in
cmp
dec
mov
mov
lret
imul
lret
imul
adc
fidivl
repnz
pop
mov
or
mov
test
mov
pop
rcr
xchg
xor
les
add
mov
cmpb
mov
out
adc
jg
cmpsb
adc
jl
in
cwtl
cwtl
push
mov
mov
mov
in
jmp
out
push
insl
repnz
int3
decl
aam
mov
fldenv
mov
repnz
fiadds
cmp
mov
jbe
add
xor
popa
je
dec
mov
mov
call
cmp
mov
mov
fistps
dec
mov
sahf
push
xor
in
inc
inc
pop
enter
pop
data16
int3
xor
sub
sub
sub
scas
cmpsb
popf
mov
adc
into
inc
adc
test
xchg
sahf
cmpsb
mov
xor
add
pop
mov
sbb
mov
cmp
push
mov
cwtl
xchg
jb
mov
test
xchg
pop
inc
push
jl
lcall
dec
dec
sahf
mov
mov
mov
mov
xor
pop
orb
jb
cmc
insb
xor
sbb
mov
add
subb
out
jl
cmp
jb
fistpll
cmp
in
loope
hlt
add
movsb
dec
mov
pop
inc
out
outsb
mov
sbb
into
jae
lahf
xlat
outsb
push
iret
jnp
hlt
jns
mov
cmp
das
jmp
int3
cmp
mov
fisttpl
rol
jnp
push
fcomi
cmp
ret
pop
jae
stc
push
xor
insb
int3
mov
das
sbb
icebp
add
push
push
mov
xchg
or
dec
repz
mov
and
cld
scas
jo
dec
and
subl
jo
mov
xor
jmp
fimull
ss
jp
sbb
jbe
nop
lods
cmp
mov
imul
jae
outsl
push
out
mov
test
loopne
push
fldenv
push
cwtl
xor
mov
in
outsl
jp
fwait
and
clc
jns
xlat
cwtl
imul
mov
cmp
outsl
aas
fisttpl
mov
bound
cmpsb
dec
sbb
js
mov
inc
ret
xchg
xchg
or
rcrb
insl
pop
cmp
and
sub
xchg
jne
push
fstpt
outsl
xor
lds
lock
lea
cmp
xor
cmp
outsb
iret
xchg
sub
gs
das
mov
push
lahf
xchg
push
jecxz
lock
hlt
push
push
scas
jo
sahf
adc
push
std
call
incl
mov
loope
out
xchg
mov
imul
hlt
dec
rolb
repz
sbb
ret
cmpl
push
cmpsb
int3
daa
sub
lea
icebp
xchg
pop
pop
sub
aam
ds
fwait
test
sub
mov
out
repnz
inc
pushf
hlt
lods
sub
cmp
fsubs
mov
call
inc
movsl
xor
mov
sbb
mov
xchg
lahf
test
ds
pop
mov
push
imul
mov
fwait
popf
sbb
push
in
push
call
mov
jns
jmp
add
leave
sbb
add
add
mov
add
add
add
add
ja
mov
jmp
push
incl
incl
add
enter
int
popa
outsb
inc
or
add
add
add
add
add
add
add
add
add
add
shrb
add
add
xchg
add
add
add
data16
cmp
pop
add
push
outsl
imul
leave
outsb
add
push
leave
aaa
mov
popa
imul
xchg
ret
inc
cld
inc
lea
add
dec
mov
mov
incb
inc
std
and
call
addb
ret
push
add
add
mov
cmp
lea
rorb
rolb
add
add
push
add
test
int
incl
cld
incl
inc
incl
adc
incl
orl
cwtl
call
jge
push
push
incl
push
adc
std
sub
mov
ret
orl
lock
jmp
incl
addb
add
std
add
add
fiaddl
addb
add
add
add
add
outsb
inc
push
je
imul
outsl
mov
inc
gs
add
add
dec
arpl
popa
gs
gs
gs
insb
and
js
push
insb
pop
gs
push
add
add
dec
insb
popa
jne
gs
lods
inc
outsl
push
insb
arpl
add
add
add
push
add
add
lea
add
add
and
hlt
cltd
imulb
pop
ficoml
mov
sub
shrl
jmp
lahf
shlb
mov
jno
sub
pop
push
cmpsl
cli
cli
xor
aaa
cli
lahf
add
out
mov
xchg
pop
dec
pop
inc
stos
jae
insb
sbb
pop
lds
add
pop
ret
rcr
ljmp
cmp
push
enter
jnp
inc
add
outsl
ss
pop
jne
push
pop
mov
out
mov
add
add
sub
repz
fisttpl
int3
imul
daa
mov
gs
mov
xchg
mov
rcr
data16
loopne
mov
mov
add
out
fildl
jo
jnp
fistl
sbbb
movl
aaa
and
pop
add
and
popf
push
lret
sub
add
pop
xor
daa
xchg
sbb
lretw
xchg
dec
or
sub
in
pop
xchg
inc
dec
dec
push
mov
mov
xlat
or
fmuls
push
pop
clc
dec
jne
dec
fdivrl
ss
sbb
je
cmp
pop
push
loop
leave
pushf
repnz
xchg
adc
dec
aas
pushf
mov
push
mov
movsl
arpl
inc
cmp
out
ja
sbb
ret
js
gs
pop
mov
leave
lea
mov
sub
lea
sahf
xor
xor
fbstp
pop
fsts
pop
push
lcall
sub
ret
or
sti
pop
push
xchg
fcmovbe
lret
sbb
adcb
in
jo
fnstsw
subl
mov
aaa
pop
decl
shrb
mov
cli
stos
jl
call
pop
stc
cs
popa
xor
dec
sahf
mov
loope
test
lret
test
cmpb
jbe
xor
scas
aaa
cs
jno
or
dec
push
xor
aam
jne
leave
stos
dec
insl
jg
add
mov
ljmp
mov
mov
sbb
enter
fildl
popf
mov
pop
xchg
adc
clc
pop
push
or
outsb
inc
subb
sbb
lahf
push
dec
out
stos
lock
rcrl
adc
repnz
fsubl
adc
sti
aaa
mov
mov
call
lret
out
jmp
cwtl
inc
fdivp
pushf
inc
cltd
add
cmc
mov
popa
sub
sub
pop
dec
leave
xor
cmp
mov
mov
and
ja
cmp
pop
jns
int3
mov
push
mov
mov
mov
pop
sti
and
xchg
mov
addb
in
push
js
pop
inc
mov
mov
dec
leave
pop
fsts
xor
pop
ret
lock
mulb
std
jno
in
cmpsb
jge
add
push
jnp
and
sbbl
je
sub
push
sub
ficompl
int
lods
xor
sti
dec
or
cmp
shl
jmp
jae
inc
out
into
inc
testl
mov
pop
cmc
int
test
push
cmp
lock
mov
sbb
movsb
xlat
ss
mov
ss
adc
aad
xchg
inc
xor
add
cld
mov
mov
push
fmuls
cwtl
loop
int3
sub
xchg
dec
notl
jmp
add
ds
push
pop
insb
ljmp
insb
sbb
mov
repnz
nop
sbb
xchg
inc
pop
daa
push
ja
call
shl
cltd
xchg
dec
sbb
repnz
xchg
pop
imul
cmpsl
pop
dec
jo
cld
data16
mov
stos
sti
dec
ret
shll
cmc
add
inc
xor
mov
scas
or
aad
fisubrl
mov
xlat
fldcw
dec
jle
cltd
test
and
adc
fcoms
sbb
aad
sub
jbe
pop
xchg
jo
loopne
xor
je
mov
and
jne
inc
dec
xor
mov
cmp
adc
jns
in
and
xchg
negl
lahf
incb
mov
fimull
int
into
add
pop
cwtl
stos
push
push
push
je
mov
pop
xchg
out
sub
stos
cwtl
mov
cmp
mov
in
sub
in
vzeroall
or
mov
adc
stos
adc
clc
popa
inc
pusha
xor
jns
lcall
stos
adc
or
in
mov
ret
fistl
push
test
push
push
in
ja
adc
int3
adc
rcll
lea
cmp
icebp
sbb
add
int
clc
sub
fs
adc
add
gs
mov
xor
jae
sub
and
decl
inc
jmp
aas
fwait
and
int3
push
dec
push
mov
cltd
insl
into
adc
std
mov
mov
addr16
cmpsb
pop
mov
insl
jbe
sbb
dec
fdivl
inc
jge
out
lcall
add
fs
jge
fisttpll
mov
bound
shrl
aas
imul
mov
lds
mov
stos
dec
mov
mov
jle
inc
mov
shll
adcb
ds
iret
jb
add
nop
mov
inc
in
pop
in
and
inc
sub
push
inc
inc
jb
jle
sbb
jns
neg
mov
mov
sub
cmp
add
pop
bnd
lret
push
pusha
xlat
pop
add
jbe
ss
adc
aam
push
dec
and
pop
dec
clc
pop
jne
mov
mov
mov
add
hlt
out
jb
enter
dec
aam
ja
in
cmp
dec
in
cli
scas
xchg
add
mov
leave
sub
xchg
in
ljmp
ret
dec
flds
or
cmp
pop
insl
xor
jmp
push
cmp
cwtl
jmp
cmp
xchg
ljmp
sti
mov
and
xchg
or
test
sti
adc
cmc
mov
fwait
iret
inc
mov
pop
adc
jmp
fisubl
out
stc
push
jp
lcall
push
leave
dec
sti
xor
mov
inc
aad
dec
cltd
xlat
pusha
ret
mov
cmp
cltd
je
lods
lcall
sbb
lea
in
adc
loopne
mov
jge
sbb
iret
enter
mov
adc
ret
loope
push
inc
imul
enter
call
clc
lret
jg
jge
pop
pop
ds
cmp
mov
mov
or
scas
test
mov
adc
push
nop
mov
cwtl
push
gs
cmpl
rcrb
mov
dec
mov
movsb
add
sbbl
arpl
aam
sub
arpl
lahf
jae
movsb
in
xor
mov
out
cs
pop
cmp
mov
leave
dec
divb
scas
int3
cmpsl
pop
and
aas
adc
or
sti
test
push
fsubr
roll
xor
cmc
stos
lret
xor
cmp
mov
hlt
sbb
repz
and
mov
addl
out
jno
dec
into
rcrb
std
movsb
rolb
insl
jne
jb
sub
cmp
add
push
js
pusha
dec
or
divl
in
or
pop
inc
ljmp
ds
loop
shrl
adc
push
inc
ds
sbb
pop
divb
jnp
fcoms
pop
incl
dec
dec
pop
lcall
ficoml
pop
xorb
pop
add
jmp
repz
int
mov
out
jl
es
adc
xchg
loope
fldcw
pop
sti
mov
mov
jl
cltd
cmpsl
shl
outsb
cmpsb
js
add
je
and
push
cmp
outsb
pop
aam
sbb
pushl
and
insb
push
outsl
add
pop
xchg
sub
push
ret
jb
jmp
mov
mov
cs
xchg
stc
insb
mov
bnd
nop
in
add
test
inc
lret
cmp
jecxz
testl
inc
cmpsb
mov
dec
decl
jne
xor
jp
jns
scas
xor
addb
fsub
pop
js
xchg
ss
xor
cmp
out
fwait
int
dec
push
jle
sbb
ret
test
add
and
mov
mov
add
or
sbb
inc
mov
movsl
mov
mov
xlat
inc
push
pop
addr16
into
into
cmp
and
add
addb
stos
add
movsb
lret
jg
out
jl
mov
fxch
xchg
into
sbb
negl
out
data16
in
scas
pop
loopne
jg
push
dec
jl
push
xor
cwtl
fwait
mov
rcrb
jle
cmc
mov
mov
dec
outsb
dec
negb
jbe
loop
jp
fidivs
ljmp
cltd
dec
pop
repnz
outsl
and
mov
ja
sti
imul
ret
js
or
sub
lret
jbe
sbb
cmp
cld
in
repnz
movsl
lret
xchg
fidivl
lea
cltd
lock
das
lcall
nop
xchg
sbb
mov
stos
call
in
lds
mov
push
div
lods
pop
or
pop
mov
sbb
in
and
sub
imulb
inc
jp
dec
fstpl
loope
push
pop
dec
fwait
cmp
push
mov
adc
orl
cmpsl
mov
pushl
mov
mov
out
arpl
fisttpll
pop
or
mov
mov
jno
aam
xor
pusha
mov
or
and
lods
ja
pop
sbb
iret
mov
in
jo
out
mov
cmpsb
push
insb
leave
lcall
std
es
addb
je
mov
pop
iret
push
enter
adc
jbe
push
xor
adc
ja
lcall
out
push
pop
fdivp
outsl
outsb
pushf
lods
test
dec
out
xchg
mov
push
push
pushf
mov
insb
mov
or
xor
out
push
dec
dec
les
push
aam
repz
cli
pop
stos
pop
inc
add
jg
loope
push
loopne
pop
adc
xor
or
push
lea
repz
mov
lods
push
push
nop
or
in
and
mov
jecxz
sbb
xchg
cltd
aam
sbb
sub
loop
insl
xor
xorl
mov
clc
sub
mov
mov
sti
movsl
cmp
jbe
imul
test
popa
xor
dec
loopne
lea
and
lea
sbb
cs
aam
mov
and
lret
mov
mov
std
es
sbb
dec
adc
adc
neg
xchg
fstl
pop
stos
in
push
mull
inc
add
mov
mov
mov
clc
mov
jmp
stc
mov
jle
mov
or
rol
xor
push
jo
std
mov
popa
fs
rcl
imul
mov
outsb
fsubs
mov
add
shll
push
dec
xchg
shl
xchg
push
int3
or
push
xor
clc
ret
call
cmpsb
mov
cmp
pop
xchg
imul
cltd
jp
sbbb
xlat
cmc
sub
push
int
arpl
lcall
push
pop
push
jge
popf
fstpl
and
pop
or
dec
mov
inc
mov
mov
addr16
sub
xchg
shll
cmc
add
out
outsl
fdivrs
vrcpps
xchg
out
sbb
lret
adc
pop
pop
add
mov
outsb
gs
or
ss
repnz
repz
push
fiadds
in
pop
and
testb
in
jno
and
sbb
pusha
std
xchg
jp
add
sbb
or
fistpll
out
sub
mov
cmpsb
fucomi
popf
jne
int
sub
jle
push
pop
cltd
out
inc
movsb
jecxz
mov
or
pop
xor
dec
movb
outsl
outsb
jns
fiadds
aam
imul
divb
and
cmp
inc
js
loope
lods
aaa
lea
xor
push
jbe
mov
pop
and
fptan
cmc
ret
xchg
movq
cmp
scas
mov
sahf
out
shrl
lock
cld
cs
and
push
cmpsb
fistl
nop
jle
pop
mov
cli
out
les
dec
or
mov
test
and
push
adc
mov
jp
sub
repz
push
add
mov
cmpsb
pop
int3
data16
subl
jl
insl
movsb
sti
pop
mov
inc
mov
pop
jmp
adc
inc
cmp
xchg
jge
push
xchg
sbb
gs
mov
movsl
cmp
sbbl
in
mov
rol
mov
mov
cmp
mov
sahf
enter
adc
out
in
aam
mov
adc
mov
push
lret
test
mov
or
shll
test
aas
xchg
inc
pop
aad
dec
pop
mov
push
pushf
lret
sti
cmp
imul
jbe
and
fmuls
js
cli
iret
adcb
ja
mov
or
and
mov
mov
adc
jnp
adc
inc
ljmp
call
pop
jns
aaa
or
aam
sbb
mov
pop
and
rcr
sbb
adc
test
rcll
adc
adc
jb
insl
xchg
mov
fildll
xchg
lods
inc
sahf
jmp
notl
pop
enter
fs
es
jb
lahf
jle
stos
cmp
imul
cwtl
jp
inc
pop
sbb
rorb
xchg
popa
inc
mov
icebp
movb
add
sub
inc
mov
ljmp
jmp
leave
cltd
mov
inc
fsub
and
dec
push
std
mov
cmc
pop
pop
ret
xor
into
dec
add
push
inc
sub
xchg
out
xor
aad
jmp
bound
jecxz
and
lods
mov
sbb
mov
int
mov
rolb
jp
cmpsb
or
repz
mov
popa
ret
arpl
sarb
add
scas
xchg
aaa
flds
fsts
mov
cmp
xlat
cld
enter
pop
fwait
stos
cmc
dec
xchg
testl
or
scas
popl
xchg
cmpsb
cmp
dec
cmpl
xchg
int
arpl
mull
mov
pop
call
stos
sti
or
test
loop
add
mov
and
push
ret
dec
sbb
dec
lcall
mov
in
cmp
loop
andl
jae
pop
out
cs
pop
sbb
push
lret
sub
std
imul
add
aam
sub
ret
lods
mov
pop
loopne
in
dec
fldcw
in
bound
movsl
cwtl
loope
imul
iret
or
push
mov
std
mov
pop
sahf
dec
adc
stc
adc
inc
push
stos
scas
jp
repnz
inc
dec
call
adcb
cwtl
push
adc
mov
je
in
inc
dec
mov
or
push
xchg
sarl
mov
jne
aad
push
movsb
mov
push
mov
cli
rolb
xor
outsl
jp
cmp
shlb
add
cmp
push
mov
aad
lock
mov
scas
aad
stc
pop
mov
inc
dec
push
mov
jo
mov
inc
cli
es
inc
into
scas
scas
pusha
int
ss
xlat
mov
shrl
arpl
mov
cmpsl
repz
xchg
faddl
xor
das
jecxz
daa
jmp
roll
pop
jbe
xlat
stc
or
sub
in
or
mov
push
out
dec
sar
scas
sub
add
sub
dec
hlt
jle
mov
out
out
or
or
pcmpeqd
popf
cld
pop
lock
dec
adc
out
pusha
pop
mov
out
ds
or
cmp
fwait
hlt
inc
cs
gs
jb
and
mov
cs
xchg
cwtl
ljmp
nop
outsl
jns
insb
adc
or
insl
sbb
pop
adc
push
and
inc
cli
les
adc
out
unpcklps
das
loopne
ss
out
inc
adc
cmp
push
xchg
aas
and
mov
jg
aas
fldenv
mov
fsts
dec
cmp
cmp
push
and
fisubrs
arpl
mov
add
add
inc
inc
sbb
daa
lods
xor
xchg
inc
repnz
jae
jne
aam
mov
cmp
pop
std
mov
mov
dec
roll
sarl
out
jno
leave
ret
ret
lods
sbb
pop
push
push
xchg
lock
inc
xchg
push
std
xor
xchg
loopne
dec
subl
das
add
into
inc
xor
es
jge
mov
cmp
lock
ds
dec
repz
data16
pusha
push
inc
js
mov
call
or
into
mov
sub
pop
cmp
pop
movsl
mov
lods
jle
add
inc
jno
xchg
mov
push
mov
fs
lds
ds
lcall
fwait
call
repnz
sti
int
scas
mov
ja
mov
stos
or
or
mov
cmp
pop
mov
mov
mulb
inc
repnz
add
fdivs
mov
cmp
lods
mov
adc
push
inc
inc
daa
daa
pop
push
rclw
out
or
sub
inc
nop
lea
stos
mov
cs
pop
xor
cmpsl
dec
xor
les
pop
lret
xchg
mov
pop
pop
shll
push
adc
fbld
inc
popa
and
mov
stos
les
icebp
pop
inc
mov
mov
and
sbb
loope
outsb
and
fcmovne
sub
ljmp
xchg
sarl
push
cmp
imul
mov
inc
loop
ficoms
adcl
imul
mov
add
sub
pop
sub
cmc
mov
mov
int
xor
pop
cli
in
cmpsl
mov
mov
mov
jl
sub
ljmp
aas
xchg
dec
cmp
cmp
xor
sub
jle
ljmp
shlb
lods
pusha
js
xchg
xor
adc
cmpsl
and
or
dec
popf
enter
push
or
jno
fwait
adc
sub
fists
das
mov
cmp
cs
dec
pop
mov
mov
xchg
cmp
cmp
pop
and
lods
mov
push
sahf
aaa
dec
sahf
das
dec
ja
jnp
ljmp
push
in
push
jns
icebp
clc
adc
aad
inc
bound
dec
out
cmp
aaa
cmpsb
mov
aas
add
aad
push
sbb
sbb
dec
xchg
push
mov
xchg
adc
jne
stos
pop
inc
fbld
lahf
push
mov
xor
push
lds
push
mull
xchg
mov
push
jne
stos
lret
mov
out
cmp
rclb
out
adc
mov
ljmp
xchg
lea
jno
sub
outsb
into
shll
or
dec
lods
push
or
jecxz
int
ss
dec
mov
mov
jae
jge
cmp
stos
lret
add
cmp
das
jns
in
mov
fildl
movsl
mov
mov
fiaddl
lea
push
sbb
pop
fwait
jno
mov
sub
add
mov
and
or
je
test
or
and
mov
jns
mov
pop
dec
sub
dec
add
cmpsb
or
or
cmp
into
push
ljmp
fwait
mov
rcrb
jae
mov
pop
pushf
inc
test
shll
push
mov
shl
ja
pop
fistps
pusha
pusha
xchg
in
aad
mov
fiadds
adc
mov
lcall
sti
leave
inc
fbld
leave
add
sar
mov
push
cmc
mov
aas
cmp
xor
into
out
lcall
jo
mov
adc
imul
shrb
daa
and
test
dec
or
adc
cmp
pushf
inc
outsb
loope
dec
push
mov
dec
sub
mov
jmp
fneni(8087
cmp
sbb
test
les
and
testb
es
jae
pop
and
and
fidivl
aam
cmc
inc
xchg
push
shlb
stc
jecxz
cs
mov
pusha
repz
popa
lock
mov
xor
scas
lret
adc
pop
push
lea
mov
jmp
mov
pop
jge
lcall
out
mov
dec
insl
sbbb
fwait
popa
jbe
ficoml
shll
icebp
stos
add
or
and
xchg
sub
rol
add
filds
scas
sbb
inc
inc
cmp
int3
jg
cmp
or
cltd
sub
xor
mov
mov
shr
dec
inc
mov
cs
test
inc
or
mov
push
add
loopne
xor
mov
and
ja
xorl
adc
sahf
sbb
std
jae
std
and
xchg
mov
aam
stc
fmuls
adc
loope
cmc
les
add
insb
add
add
add
enter
add
pop
add
insl
add
add
add
add
add
add
cmp
and
add
add
add
add
add
add
add
add
cmp
add
ja
mov
jo
jo
add
add
add
dec
mov
jb
or
add
add
add
add
fildl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sti
sbb
and
js
add
fs
gs
add
mov
add
push
movb
roll
jecxz
sbb
dec
mov
pop
push
or
add
fmuls
incl
mov
add
test
pusha
cld
add
cmp
adc
call
inc
insb
cld
pushf
test
push
sar
cmp
push
push
add
adc
leave
add
incl
add
loopne
add
xor
adc
call
push
mov
pop
push
popf
cld
loopne
incl
sbb
dec
push
push
decl
add
cld
lock
enter
add
push
call
add
jne
lret
add
repz
or
mov
call
add
sbb
add
dec
mov
add
sbb
sbb
sbb
sbb
sbb
cmpsl
dec
sbb
sbb
add
insl
shll
je
jae
dec
lcall
insb
imul
gs
jmp
popa
dec
outsl
add
insb
add
add
sti
inc
inc
gs
add
insb
add
outsl
jbe
outsb
sbb
insb
je
je
je
insb
out
sbb
add
add
iret
cmp
add
adc
push
push
xlat
gs
xor
ja
in
xchg
lret
std
fldl
xchg
inc
jle
pop
dec
mov
aas
or
lahf
mov
popa
mov
sub
test
xlat
out
movsl
cmp
sahf
cmpsb
out
aam
fadd
repz
jns
rol
jp
cmp
and
gs
movsb
inc
xchg
or
mov
and
lea
jl
mov
fidivl
xchg
sub
das
shlb
mov
or
enter
mov
mov
mov
pop
ja
cmp
je
rcr
scas
mov
or
pop
scas
cmpl
mov
daa
fs
add
ja
pop
mov
dec
cmp
add
fwait
adc
add
repnz
cwtl
pop
xchg
test
es
jecxz
testb
xor
mov
cmpsb
mov
dec
xchg
pop
inc
mov
xchg
lcall
iret
or
push
xor
push
or
jge
pop
aaa
sbb
mov
xchg
rcl
push
inc
lret
sub
xor
dec
xor
mov
sbb
xor
es
fstpl
in
in
repz
mov
lret
inc
mov
mov
lods
sub
ljmp
scas
mov
pop
push
jnp
dec
jge
cld
outsl
int
jno
in
adc
ja
xchg
add
adc
xchg
dec
pushf
push
pop
bound
shll
lods
les
rclb
sbb
and
pop
fldt
frstor
ret
loopne
arpl
in
inc
cmp
sbb
jg
cmp
ret
adc
jno
push
mov
sbb
mov
mov
mov
arpl
jo
xchg
repnz
jge
xlat
inc
push
daa
adc
lds
mov
add
xchg
dec
pop
stos
mov
mov
pop
mov
rcrl
movsb
jmp
mov
aas
lods
push
sbb
pop
sub
mov
pop
lret
push
mov
rorl
fisttpll
fstpt
stos
jp
mov
cmp
ret
pop
add
ret
ret
lret
test
cmp
xchg
scas
push
test
add
cmp
loopne
scas
inc
hlt
clc
xchg
pop
or
or
sahf
ds
cli
mov
jmp
ret
pushf
xor
jae
xlat
xor
and
jb
xorb
dec
or
lods
add
and
sbbl
rorl
xchg
clc
ss
jle
push
das
push
sahf
pusha
ret
mov
je
jecxz
jp
xor
cltd
mov
pusha
push
or
fcoms
nop
mov
lods
xchg
movsb
push
test
aad
jle
es
adc
mov
aaa
jne
lds
jno
mov
jp
dec
jbe
xor
xchg
mov
cmp
lock
popa
inc
or
fsubl
out
into
mov
mov
faddl
jnp
xchg
jno
xchg
mov
in
cmp
xchg
stos
xor
lods
inc
scas
rcr
or
jecxz
int
mov
add
jae
xorl
and
das
pop
lahf
sbb
lcall
and
icebp
nop
movsb
and
jbe
outsb
sahf
movsb
xchg
cmp
mov
sub
jg
cwtl
into
clc
imul
fstps
mov
cmp
inc
jle
xchg
jge
test
repz
add
or
aaa
outsl
addr16
cmpb
mov
lcall
out
mov
add
cs
mov
pop
pop
fwait
jl
test
pop
xor
jl
add
inc
movsl
jecxz
dec
jbe
out
dec
sub
or
aad
rcll
imul
imul
push
and
aam
fdivrl
and
or
call
and
adc
cmp
scas
das
mov
xchg
sbb
mov
adc
mov
or
ficompl
insl
push
adc
push
out
sbb
movsl
movsb
lods
aas
add
std
pop
test
mov
jne
loope
push
mov
jmp
rcr
cmp
sbb
jg
popf
jb
adc
jbe
sbb
pop
mov
mov
xchg
mov
std
lahf
jae
mov
les
jo
subb
lcall
loop
mul
and
ljmp
dec
xorb
hlt
fimull
mov
pushf
xor
jle
mov
and
sahf
inc
lcall
mov
and
shl
out
in
test
movsb
mov
imul
mov
repnz
sub
xchg
mov
jo
loop
popf
in
xor
jne
in
cld
mov
dec
shrb
pop
pop
orl
adc
mov
aad
ss
inc
pop
cmc
mov
addr16
cmp
lcall
mov
inc
int3
loop
jo
addb
outsb
fsub
mov
out
fsubs
jnp
adc
mov
fstpl
fdivrs
xchg
xor
and
mov
xchg
mov
xchg
std
dec
push
stos
sub
lret
pop
push
push
pop
sbb
ljmp
sub
push
pop
push
arpl
mov
mov
sbb
pop
xchg
sub
xchg
cmp
jecxz
stc
dec
fstl
test
fimuls
test
hlt
pop
in
adc
adc
cld
pop
ljmp
mov
and
shl
xchg
mov
sbb
pop
mov
push
and
mov
je
les
mov
imul
lods
insb
hlt
xchg
push
inc
jno
mov
jmp
adc
xor
jne
or
adc
lds
jl
lock
mov
pop
xchg
nop
in
rcrl
pushfw
adc
lret
add
cli
pop
icebp
lret
mov
shrl
loop
cltd
cmc
adc
inc
or
pop
sbbl
mov
push
stos
cli
pop
cmp
sbb
in
test
add
adc
into
jnp
mov
add
das
push
sub
fsubl
jmp
xor
cmp
add
out
in
jno
mov
or
adc
jns
sahf
xchg
imul
pop
aaa
vphsubdq
outsb
mov
mov
cmp
and
fidivs
imul
les
outsl
arpl
push
andl
fdivrp
cmp
out
inc
mov
loop
dec
aas
mov
mov
adc
out
or
jno
pushf
sbb
push
outsb
pop
dec
mov
mov
addr16
sbb
xor
outsl
jae
pop
mov
sub
hlt
call
jns
push
sbb
movsb
test
fs
push
cmpsl
jmp
test
dec
repz
jle
sbb
jo
add
mov
lahf
call
pop
imull
jnp
fsubrl
xlat
scas
push
jge
mov
out
dec
mov
pusha
mov
into
cmp
shlb
adc
cmp
mov
test
sarl
repnz
cmpsb
insb
mov
jmp
xor
hlt
out
inc
cmc
adc
int
cmpsb
xchg
xor
das
lret
mulb
push
int3
xchg
jecxz
mov
jp
int
jbe
out
inc
mov
add
mov
adc
rclb
stos
pop
push
pop
dec
pusha
push
push
lods
mov
add
bound
jno
sub
aaa
add
mov
push
mov
jle
stos
cmp
in
imul
rcll
es
mov
dec
daa
lods
les
cltd
daa
and
ret
or
add
dec
jmp
cmpsl
sub
in
int3
push
dec
lea
dec
cwtl
fwait
jmp
test
push
ja
xchg
and
jno
mov
addr16
jmp
leave
in
sbb
cmpsl
pusha
push
pop
insb
mov
xchg
sbb
dec
call
and
neg
adc
pop
sub
sbb
fs
ja
mov
and
gs
sbb
lret
fdivrs
dec
leave
icebp
idivl
cs
jo
push
mov
and
xor
mov
repz
push
test
cmp
stos
jo
addr16
add
rorb
mov
test
xbegin
mov
ljmp
push
cmp
cmp
mov
and
xor
icebp
cmp
fs
xchg
int3
addb
pop
xor
jo
nop
jp
arpl
shll
xor
subl
push
std
pop
pop
bound
mov
icebp
enter
fbld
sarl
xor
enter
lock
fisttpl
push
mov
sbb
mov
cmpsl
inc
push
paddb
bound
pop
add
xchg
ljmp
jns
test
rolb
dec
jb
loop
adcl
mov
cmpsb
inc
insb
test
sbb
test
add
in
pop
mov
mov
jb
cmp
add
call
jb
aaa
ror
mov
dec
xor
jg
orb
xchg
repz
in
popf
cltd
sbb
mov
jg
test
push
cld
pop
in
scas
fisubs
xchg
popf
sub
cmpsl
sub
lret
mov
sbb
cmp
inc
js
subb
stc
xor
add
mov
pushf
into
add
aam
cmp
xchg
pusha
jnp
les
mov
cmpsl
inc
pop
push
push
daa
adc
and
mov
shlb
sbb
adc
jo
jl
loop
leave
les
xor
mov
sub
xchg
pop
and
xchg
cmp
xchg
inc
mov
adc
inc
insl
add
push
xchg
and
pop
pusha
ss
insb
jmp
movb
repz
adc
sub
mov
jp
jae
adc
shrl
popf
enter
xor
leave
jmp
cmp
inc
mov
ret
push
jge
xchg
push
pusha
jmp
dec
aaa
nop
pop
sbb
cmp
cmp
pop
fbstp
jg
out
test
add
lcall
bound
pop
cmpsl
xchg
aaa
add
mov
mov
mov
or
sahf
fcomp
pop
in
sbb
add
into
stc
in
and
rclb
jg
mov
out
xor
rcll
repnz
push
inc
pop
and
addr16
jne
pop
xor
loop
cmp
xchg
lods
popf
int3
add
jp
dec
xchg
fprem1
stos
mov
dec
jmp
pop
mov
or
scas
lods
xor
iret
shr
int
jns
lods
roll
stos
fsubrl
cmc
outsl
orb
cmp
popa
jmp
jne
jle
repz
dec
push
sbb
push
dec
mov
imul
orl
dec
icebp
cltd
imull
loopne
and
enter
out
inc
push
jmp
cs
int3
jg
cs
add
adc
adc
and
or
mov
mov
push
gs
fistpl
dec
adc
insb
mov
xchg
loop
sti
xor
outsl
in
pcmpgtw
sub
cli
add
pop
popf
pushaw
mov
xor
xchg
scas
out
pushf
fstpt
adc
subl
scas
stos
add
add
mov
cmpsl
popf
sub
jns
adc
push
push
lds
xor
mov
and
xchg
jae
bswap
xchg
icebp
xchg
dec
xchg
cli
jecxz
push
iret
popa
clc
fdiv
div
jg
nop
sbb
pop
mov
inc
ss
and
arpl
jg
add
push
imul
mov
push
dec
mov
das
dec
enter
fimull
sub
cli
cld
mov
cli
mov
push
pop
xchg
xchg
and
sbb
cltd
dec
adc
push
xor
pop
xchg
sub
inc
outsl
aad
std
std
sarb
mov
in
adc
mov
arpl
push
cmp
add
jp
mov
inc
sub
or
mov
mov
adc
push
ljmp
adc
mov
push
jne
pop
pop
jg
fildll
stc
jg
dec
and
jle
fcoml
cmpsb
fwait
add
xor
inc
arpl
sbb
dec
lods
fildl
addr16
outsl
stos
mov
orl
or
mov
ret
sahf
pinsrw
stos
adc
pop
pop
les
mov
adc
fs
dec
xchg
lods
push
push
pop
mov
adc
mov
enter
jno
es
test
cs
jb
sbb
or
outsl
mov
mov
mov
bswap
cmp
cs
pop
jle
push
jmp
insb
push
add
push
xor
dec
lcall
add
sub
adc
pop
daa
push
push
adc
mov
lahf
rcrb
dec
imul
cmpsb
adc
andb
fidivl
or
jo
out
adc
loope
dec
fcoml
mov
lea
out
dec
mov
add
xchg
or
mov
fmulp
lcall
stc
cmp
aam
pop
pushf
ret
subl
out
cmpsb
test
adc
mov
mov
xchg
xor
fisubl
jo
cltd
cmp
xchg
inc
adc
fcoml
add
ja
out
mov
mov
test
lret
pslld
dec
mov
and
push
add
shlb
bswap
aam
mov
jle
sti
ss
fmull
shrb
leave
js
insl
adc
addr16
fstps
xchg
xchg
mov
loope
lret
jno
jge
mov
es
leave
aad
mov
insb
movsb
mov
mov
mov
std
in
in
sbbl
pop
push
in
sahf
fs
aam
sub
cmpsb
lcall
icebp
sti
cmpsl
push
mov
cmpsl
xlat
and
hlt
roll
fcomp
mov
js
sbb
aas
rclb
call
ja
and
prefetch
inc
call
push
pop
sub
push
xchg
or
out
enter
mov
fisubl
xabort
mov
mov
fidivl
inc
iret
mov
lods
dec
repnz
imul
xchg
dec
out
jmp
shlb
jmp
pusha
int3
nop
fldenv
rol
lcall
shrl
dec
cmp
stc
loop
cmp
pushf
pop
jnp
inc
inc
or
jbe
xor
mov
pop
push
sarb
cmp
std
cld
cmpsl
mov
mov
sbb
mov
xor
mov
in
shll
js
movsl
in
or
pop
push
jb
std
subl
inc
jbe
pushl
xchg
xor
fnstenv
dec
xchg
sti
mov
xchg
xchg
dec
add
andl
push
adc
and
cs
jne
rclb
in
sub
mov
jbe
or
stos
pop
arpl
dec
xor
push
or
mov
or
cmc
jns
packssdw
clc
add
inc
ret
xchg
in
pop
fimuls
jae
inc
mov
and
xor
mov
jg
pop
cld
scas
lds
jo
hlt
inc
lret
sbb
mov
daa
mov
dec
pop
imul
push
dec
jo
mov
enter
cmpsl
jg
mov
repnz
inc
icebp
loope
fcomps
in
pushf
stos
in
inc
and
fdivrs
add
sahf
in
daa
cld
fldl
data16
or
jp
test
jle
dec
insb
push
addb
mov
popa
movsl
or
and
add
inc
add
mov
sub
jge
jne
test
push
dec
inc
arpl
mov
ja
inc
jae
jne
faddp
or
aaa
inc
mov
cmp
sbb
sbb
out
cmp
cmpsb
lds
sub
pop
clc
jge
mov
add
adc
fimuls
add
cmp
notl
sub
mov
or
mov
cs
outsl
and
mov
jmp
fldl
icebp
fwait
cwtl
and
or
push
rcrb
pop
mov
push
shlb
aam
jp
mov
fildll
mov
js
mov
mov
shrb
mov
sahf
out
ret
adcb
push
pop
inc
add
xchg
pop
fs
mov
and
pop
aad
aas
sbb
jbe
mov
call
lahf
mov
insb
orb
xchg
daa
xor
sub
daa
adc
iret
arpl
std
mov
sub
pop
jae
pop
out
gs
int
not
scas
shrb
int
push
ds
clc
jg
adc
lret
repz
adc
movsl
ljmp
bound
adc
sbb
out
jle
packuswb
andl
mov
or
mov
cmp
cmp
jb
xchg
adcl
mov
les
cmp
mov
int
mov
in
aaa
or
pop
push
repnz
cmp
inc
xchg
and
cmp
popa
pop
pushf
xor
sti
iret
sub
sub
aaa
cli
loop
in
stos
les
jns
cmp
and
out
inc
cld
in
hlt
dec
data16
jmp
cld
push
adc
je
jp
sub
or
cltd
sarl
mov
inc
mov
pop
int3
ret
enter
mov
jnp
mov
mov
pop
popf
loopne
inc
dec
sbb
test
mov
sbb
pusha
jae
imul
or
sub
adcl
fisttpl
movsb
arpl
pop
fdivl
jle
mov
fsts
cld
cmp
sarl
mov
mov
mov
cmp
inc
bts
popf
scas
dec
mov
jo
jmp
and
dec
cmp
sbb
dec
test
pop
stos
out
mov
dec
jge
addl
jno
sbb
fstpl
push
inc
lret
pop
mov
or
arpl
pop
dec
xor
ror
cmpsl
and
je
sarl
sahf
mov
lods
dec
stos
insl
dec
incl
cld
push
bnd
sub
jae
loop
push
push
push
ljmp
imul
dec
subb
pushf
pop
scas
cld
loopne
lea
es
aas
jb
jne
popfw
lcall
shrb
pop
sahf
cmp
or
push
or
jns
or
les
inc
sbb
cmp
add
les
and
loope
aam
xchg
pop
clc
adcb
pop
out
repnz
cmp
insb
shlb
int
and
cltd
add
push
push
shl
and
clc
xchg
jne
sbb
arpl
push
mov
les
sub
adc
scas
jb
das
sub
xchg
jns
add
mov
fisttpll
push
enter
xor
dec
and
push
adc
xorb
mov
push
sub
icebp
adc
jmp
cld
mov
psubusw
jecxz
xlat
sbb
in
ss
addr16
ret
lahf
out
mov
jns
xlat
adc
repnz
mov
inc
adc
jge
out
arpl
ret
jl
rcrl
aad
jmp
or
jb
mov
cmp
mov
cmp
mov
mov
push
icebp
cltd
push
ret
std
insb
popa
inc
push
mov
mov
mov
adc
int
lret
fmull
sbb
sub
int
movl
pop
cmp
sti
xchg
cld
pop
mov
loopne
sub
test
jp
sar
pop
into
cmc
pop
jne
ds
pop
leave
shrl
dec
call
in
pop
pushf
mov
es
lcall
mov
adc
test
enter
lods
jecxz
stos
adc
loopne
sbb
inc
pusha
xor
push
jecxz
or
cmpb
cmp
daa
or
mov
or
hlt
mov
push
inc
inc
xlat
mov
aam
rcrl
lret
sub
out
xor
and
sub
xchg
mov
jecxz
mov
lret
xor
cltd
xor
dec
imul
das
jo
push
lods
add
setl
test
push
adc
into
mov
ret
cmpsb
or
dec
pushf
pop
mov
or
outsb
add
sbb
enter
fcomi
inc
sub
adc
push
push
cwtl
jns
push
mov
xor
pop
roll
cmovne
and
fdivs
mov
ds
pop
sahf
int
rcr
nop
mov
adc
into
xchg
fnstcw
repz
pop
jno
test
mov
cmc
sbb
dec
push
mov
jae
rolb
sub
sbb
or
into
repnz
or
adc
jle
push
shr
sahf
shll
outsl
dec
lret
and
and
aad
in
mov
in
adc
hlt
sahf
stos
jbe
jns
cmp
lret
in
jae
inc
fwait
or
add
fildll
dec
mov
mov
add
add
add
add
add
add
add
fildl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
ljmp
ja
mov
incl
add
add
add
add
push
or
test
add
add
add
pusha
sbb
add
add
add
add
add
add
add
add
add
add
add
test
add
add
jae
inc
jb
add
pop
add
push
vmptrst
add
sahf
sub
or
test
jno
ret
incl
add
and
incb
decl
push
push
push
push
inc
shrl
testl
lret
in
mov
rolb
cmp
mov
adc
pop
add
incl
pop
popl
push
fisttpl
jns
push
clc
decl
incl
fsubs
adc
add
or
decl
mov
incl
lea
clc
cmp
stc
sub
lea
loopne
jne
add
adc
in
push
mov
add
add
sbb
imul
inc
imul
test
gs
push
inc
inc
xchg
jae
add
jbe
je
arpl
leave
dec
fs
ja
add
addr16
popa
add
cmp
imul
push
inc
push
call
add
enter
add
mov
mov
inc
ror
xor
push
rol
push
cmp
push
mov
out
sub
mov
and
add
pop
xchg
ss
xor
imul
mov
mov
or
cs
aam
clc
fnstcw
push
xlat
push
sbb
sub
out
daa
addr16
pop
xchg
add
rcrb
add
push
inc
pop
inc
mov
jo
and
fucom
lods
xlat
cmc
pop
add
jp
and
test
jo
loopne
cmc
test
bound
in
mov
jae
popa
loopne
pop
lret
in
sub
fldt
enter
outsb
jno
pop
adc
lahf
mov
and
addr16
sbb
test
lret
nop
mov
cli
pop
jnp
mov
fsubs
xor
cli
cli
fistpl
xchg
mov
lcall
test
sbb
push
inc
aas
jl
cmp
jne
jl
pop
out
jp
cmp
jb
rcl
outsl
bound
aam
mov
je
jle
test
push
jg
and
sbb
mov
mov
scas
xchg
dec
fnstcw
push
stos
sub
cmp
sub
cs
cmp
es
repz
div
inc
fstpl
sbb
mov
jns
pop
rcl
inc
sub
loop
iret
in
push
lods
sub
mov
arpl
and
clc
fldz
pop
push
and
xchg
xlat
pushf
add
cmpsl
mov
dec
mov
push
outsl
jbe
test
dec
fistpll
repnz
fadds
and
jp
inc
jns
stc
rcrb
aam
sar
ljmp
test
sub
sahf
pop
fisubl
jnp
add
leave
andl
jnp
testb
f2xm1
cmp
int
sub
and
call
dec
mov
bound
aas
cmp
lock
js
icebp
movsb
xchg
sub
xor
out
loopne
lds
jo
push
shll
js
enter
mov
data16
sbb
mov
add
jns
cmp
test
jg
in
iret
test
xlat
addb
cwtl
and
inc
lret
jb
adc
push
orb
jns
push
and
repnz
jecxz
clc
in
dec
lret
and
cmp
movsl
pop
and
and
mov
sbb
ret
ljmp
and
jnp
or
pop
push
loop
xorl
xor
sub
add
and
pop
inc
cwtl
sbb
rcll
les
std
mov
es
mov
jle
jle
add
imul
lahf
dec
in
jge
xchg
jns
addr16
push
popa
and
iret
test
notl
mov
gs
insl
push
sti
nop
fcmovnb
and
imul
push
lock
fists
adc
cwtl
mov
sarb
inc
jmp
daa
lds
pop
xchg
cwtl
jo
jg
lock
icebp
or
mov
int3
subb
sbb
inc
push
push
cmc
loopne
sbb
push
jae
jns
js
fucomi
lods
loopne
inc
shll
mov
and
sub
fucomip
adc
xor
lret
mov
notb
into
out
pushf
mov
cli
push
insb
adc
lock
imul
add
sbb
mov
xchg
scas
jb
data16
repz
sbb
aaa
sub
fidivrs
and
cli
pop
xor
fcoms
ret
add
dec
cmpsl
icebp
cltd
lret
imul
pop
cmpsb
jmp
and
in
inc
xchg
addr16
dec
dec
popf
ds
sub
idivl
dec
inc
inc
push
pop
mov
in
cmp
sbb
mov
cmp
test
xorb
movsl
mov
mov
jmp
jp
jbe
addb
mov
sub
sarl
dec
xor
adc
stos
jg
daa
stos
ds
mov
test
pop
lcall
and
mov
jne
jg
addr16
sbb
mov
movsb
push
sub
jecxz
jle
xchg
repnz
xchg
pmaxub
jl
inc
or
mov
and
xor
adc
flds
sub
fcmovbe
mov
insl
mov
test
test
cmp
nop
das
inc
add
jle
push
mov
mov
lret
hlt
pop
cltd
xchg
xchg
pop
jb
cmc
pusha
test
xchg
xchg
les
push
movsl
ljmp
xor
mov
push
incl
fsubrl
repz
dec
nop
xor
jo
daa
ja
jg
mov
cmp
ret
in
adc
jnp
mov
aas
iret
test
ljmp
jbe
daa
xchg
dec
aas
in
push
pop
sbb
int3
cmp
sbb
inc
aaa
cltd
loopne
fcoml
and
push
mov
je
fnstsw
xor
jl
cmp
in
scas
dec
adc
mov
jo
pop
push
pop
push
lods
icebp
imul
sub
and
push
jg
pop
push
outsl
cwtl
inc
pop
dec
push
inc
fnsave
pop
mov
mov
cmp
jge
add
xchg
fildll
test
jbe
mov
insb
push
movsb
and
loop
dec
jbe
scas
int3
cmp
push
out
test
push
sub
inc
push
cs
ljmp
jo
or
pop
pop
in
xchg
fadds
loop
jl
add
gs
aad
or
sti
nop
push
jp
xor
stc
rorb
sub
ds
insb
xchg
and
mov
jns
insl
sbb
push
mov
lods
or
nop
imul
rcrb
pop
sbb
decb
push
cmp
ljmp
jl
out
mov
bound
sub
ss
xchg
mov
push
mov
and
or
sub
cmpsl
jno
sbb
adc
mov
sub
xlat
add
xchg
mov
mov
sub
xor
push
xor
mov
or
rclb
jge
sub
xor
cmpsl
gs
inc
mov
sbb
or
ss
mov
dec
push
cli
inc
int3
push
daa
pop
cmp
sub
mov
xchg
mov
dec
fdivrs
dec
ss
lds
orl
add
js
in
and
xor
jle
stos
push
mov
sbb
jecxz
cmp
lret
xchg
lods
push
das
pop
insb
popf
loope
dec
fwait
jnp
ret
jmp
mov
mov
outsb
dec
mov
int
pusha
inc
incl
sbb
imul
xor
test
cmp
mov
inc
add
pop
stos
ds
in
cs
xchg
cmp
xor
add
cmp
xlat
adc
adc
dec
repz
add
in
cmpsl
xor
cmp
push
dec
stos
and
xor
ret
jno
es
xor
adc
mov
sub
jl
pop
and
lea
xor
mov
sub
pop
lds
cltd
popa
mov
jge
xor
inc
scas
mov
push
sahf
mov
out
and
pop
aam
hlt
test
dec
sub
insb
sarl
nop
das
push
xor
sub
lock
push
add
insl
xchg
jae
adc
adc
popf
mov
xchg
jl
pop
mov
sbb
xor
mov
cmc
or
fnstsw
stc
jns
xchg
cmpl
std
cld
or
jae
addr16
in
data16
jnp
adc
mov
add
lret
adc
or
mov
ficoms
gs
repnz
decl
insl
dec
aas
xchg
mov
out
cmp
push
pop
push
mov
lahf
xchg
dec
cmpsb
add
imul
test
int
aaa
leave
imul
clc
sub
aaa
cmp
mov
sub
dec
jns
xor
je
or
test
jne
jl
call
call
imul
adc
ja
jb
mov
cmpsl
push
popa
mov
rcrl
imul
xchg
jo
xchg
mov
mov
pop
jno
leave
test
movsl
jo
out
cmc
xchg
and
dec
jno
rcll
sbb
mov
xor
imul
push
nop
cwtl
ret
pop
xor
popf
xchg
jns
in
dec
or
sbbb
xorl
jmp
xor
arpl
or
jmp
enter
push
inc
fsubrl
aaa
pop
cltd
sbb
sbb
int3
aad
push
inc
mov
push
sub
xlat
pop
push
pusha
cmp
push
lds
insb
inc
hlt
popa
pop
out
xchg
icebp
inc
cmpsb
fcompl
jg
fldcw
out
je
xlat
pusha
adc
ret
jne
enter
mov
les
push
push
cmp
jg
xor
fst
adcb
neg
sti
ss
aad
bound
xchg
cmp
lcall
dec
xlat
pop
add
rclb
test
cmp
jbe
and
jnp
imul
fisttps
cmp
push
popw
or
lock
xchg
sbb
test
inc
mov
mov
lret
cmp
lret
insb
daa
jmp
lret
sub
lock
arpl
cmp
les
mov
mov
test
hlt
and
adc
add
and
pop
std
sarl
ficoml
xchg
adc
or
mov
cmp
mov
lret
pushl
cwtl
ret
stc
lret
movsl
subw
pusha
mov
flds
mov
ss
arpl
sub
and
dec
dec
pop
call
stos
ds
pop
cmp
test
inc
lods
push
mov
push
int
dec
imul
fimull
push
or
add
and
pop
testb
mov
push
adcl
jnp
fnstenv
iret
rclb
mov
loope
jmp
imul
push
adc
cvttps2pi
or
dec
outsb
fnstcw
xchg
jp
adcb
mov
int
mov
adc
and
cmp
or
jl
inc
sbb
jae
lods
mov
jp
movsl
adc
adc
push
stc
out
out
mov
jnp
jmp
xor
mov
cltd
jno
mov
cwtl
outsl
fs
lock
jns
std
fsubs
mov
mov
adc
sub
or
je
fistpll
imul
or
jbe
cmpsl
inc
aas
mov
popa
mov
dec
sarb
xor
xchg
fldenv
mov
jbe
adc
es
es
cli
mov
les
dec
ds
sub
and
mov
mov
jne
dec
adc
sti
dec
rolb
stos
inc
sub
jle
shll
and
pop
test
cltd
jae
sub
jne
push
scas
and
mov
pushf
cs
lods
inc
in
or
push
xchg
push
insb
inc
xchg
or
push
pop
inc
xlat
pop
sub
ret
adc
add
add
sbb
into
push
jns
sbb
jle
push
lea
jbe
jo
pop
jmp
test
jge
mov
insl
in
cmpsl
mov
test
and
dec
cmpsl
push
lahf
mov
jg
adc
cmc
repz
testb
xchg
and
jns
fwait
dec
movsb
xor
jg
push
outsl
negl
fldl
aaa
push
in
xchg
lcall
mov
sbb
and
scas
aas
ret
sbb
cmp
jo
fdivrs
cmpsb
fwait
mov
inc
hlt
xchg
ljmp
adc
mov
sbb
sub
inc
cmp
sub
cli
fimull
or
out
jle
sbb
jb
jmp
repz
push
aam
mov
les
xchg
or
jne
aas
sub
es
mov
lahf
lret
lret
pop
fcmovnu
into
and
adc
rclb
mov
cs
or
pop
lea
test
xchg
fnstsw
out
cmpsb
mov
pop
mov
pop
inc
xchg
pop
add
enter
jno
push
jge
test
xchg
aas
cwtl
xchg
xchg
std
popa
fbld
mov
iret
jo
incl
inc
adc
insb
sbbb
nop
sub
addb
xor
ja
mov
mov
jge
lds
imul
and
ja
mov
loop
pop
push
loop
mov
lds
or
pop
mov
dec
jg
out
add
inc
sbb
push
mov
push
xor
dec
out
jg
add
xor
sub
inc
cmp
in
jno
xchg
mov
cmp
mov
lcall
and
movsl
jns
getsec
test
push
arpl
sbb
push
mov
testl
mov
inc
jle
jp
loopne
test
push
cmp
or
sub
ljmp
xor
ds
aad
mov
daa
inc
pop
pop
jge
data16
lds
pop
and
cwtl
push
jmp
and
pop
test
jg
hlt
push
cwtl
ret
mov
out
cwtl
jg
mov
arpl
out
hlt
push
out
jo
loope
inc
jle
pop
aad
jle
cltd
fiaddl
sbb
xor
fisttpl
frstor
popf
dec
lret
stos
nop
xor
dec
out
les
stos
and
rcll
call
cmp
inc
data16
fidivrl
sbb
and
jno
and
test
cltd
add
or
icebp
lds
jb
cli
inc
bound
jmp
pop
lods
sbb
fldl
test
push
xchg
sbb
jl
call
inc
jecxz
cmpsb
xor
or
stos
out
mov
xchg
ss
cmp
mov
stc
pushf
shlb
das
cmpsl
shll
pop
lea
dec
cmpsb
mov
push
cmp
adc
xchg
in
roll
dec
mov
or
xor
sub
enter
fs
jg
movsl
mov
pop
adc
inc
lahf
mov
dec
sti
adc
leave
lods
test
push
jle
inc
push
outsl
mov
jp
clc
cld
mov
cld
add
mov
add
inc
cwtl
iret
imull
dec
xchg
insl
fsubl
add
rcrb
fwait
push
cmp
and
fcoml
mov
pusha
imulb
dec
test
mov
loope
push
pop
lret
fs
and
add
mov
fst
stos
sbb
add
loope
mov
and
or
mov
repz
or
hlt
mov
mov
es
int
out
sbb
inc
sub
jl
insl
faddl
aam
ret
sub
stos
enter
icebp
inc
xchg
mov
aas
lock
sbb
sbbb
out
cmpsb
xchg
jbe
outsb
mov
sbb
inc
dec
pop
notb
pop
ja
cmp
mov
subl
pop
lods
mov
jl
cltd
add
mov
jbe
fistpl
cld
cwtl
arpl
jno
rcr
testl
jno
xchg
mov
mov
loopne
mov
aam
outsl
add
stos
popa
gs
out
xor
cs
stos
jge
out
push
insb
call
stos
xchg
mov
inc
leave
aaa
push
push
testl
cmpsl
jbe
pop
test
roll
cmpl
movsb
jne
shrb
imul
aam
movsl
mov
cltd
gs
xchg
jno
enter
testl
cmp
jno
sti
pop
cs
adc
das
out
xor
roll
js
pop
sarl
in
movsb
or
shll
cmp
push
adc
cmp
out
jae
leave
loop
in
xchg
or
sub
xor
mov
lret
push
lcall
sti
push
insl
enter
mov
dec
loopne
dec
sarb
ret
arpl
int3
sbb
xchg
dec
mov
jne
sbb
lods
jns
mov
clc
jae
and
dec
js
sub
sub
jns
fimuls
xlat
or
pop
fwait
lea
jle
pushf
xchg
inc
out
lret
hlt
push
mov
sbb
cmp
lock
xchg
inc
std
dec
fnstsw
loopne
leave
or
sbb
fimull
pop
inc
cltd
adc
jo
fdivrs
inc
dec
xchg
push
push
popf
inc
int
jae
pop
dec
outsb
daa
or
mov
push
mull
mov
insb
gs
xor
mov
pop
sub
pop
call
lahf
mov
out
bound
in
xchg
testb
aas
jb
push
sub
and
dec
and
push
adcl
cmc
adc
sarb
lods
das
lcall
lds
mov
or
ja
mov
xor
adc
pop
cmpb
xchg
sub
stc
jnp
push
mov
dec
in
inc
into
fcmovnb
nop
and
jecxz
pop
ljmp
pop
popf
mov
leave
imul
ds
lods
cmp
sbb
stos
int3
cmc
adc
lret
mov
filds
lret
outsl
push
mov
dec
or
mov
les
mov
test
cmp
pop
add
icebp
mov
sbb
and
sbb
push
mov
mov
sub
xor
sbb
inc
data16
ja
add
les
push
inc
in
lds
inc
xor
lods
or
sti
cld
add
mov
add
int3
push
loop
std
mov
in
fcoml
cltd
fwait
adc
rorl
adc
push
sbb
dec
dec
mov
popa
add
or
mov
mov
sbb
jnp
movsl
pop
pop
push
fdivrs
adc
in
inc
popf
jnp
inc
outsl
lret
sbb
loope
pop
pop
int
mov
sbb
xor
pop
ds
jp
pop
sbb
jbe
test
mov
outsb
test
inc
lea
popa
xchg
arpl
outsl
into
inc
out
orb
imul
jle
fchs
cld
dec
fcmovne
fmul
push
dec
sbb
leave
push
mov
inc
test
ret
stc
popf
outsl
and
decl
dec
xchg
cmp
cmc
jge
daa
loop
cs
pop
idivl
lods
rcrl
shll
loopne
jno
push
loopne
arpl
out
mov
fisttps
fs
int3
nop
addr16
imul
cwtl
stos
xchg
push
push
lahf
inc
fdivp
push
sti
mul
adc
popl
out
push
or
ret
dec
popf
pop
pop
cmpsb
fdivs
or
push
pop
cmp
sti
data16
xchg
rcrl
jo
repz
ds
add
lcall
or
push
scas
or
xchg
stc
aam
pop
pop
lock
rorl
ret
jl
push
pusha
push
popf
imul
dec
setge
push
xor
je
or
add
pop
orl
cs
clc
sahf
lods
cmp
cmp
or
or
sbb
mov
xchg
dec
pop
aaa
mov
mov
xor
dec
sbb
in
push
xor
mov
es
pop
mov
lea
out
sbb
dec
or
mov
push
jbe
mov
add
pushf
ret
jnp
imul
dec
mov
cmp
mov
xor
dec
mov
xchg
xor
sbb
sahf
lds
repnz
xor
loopne
jb
mov
xchg
pop
xor
inc
push
and
icebp
mov
in
mov
repz
test
outsb
in
mov
rcrb
loop
or
mov
xchg
sub
sbb
pushf
push
int
in
insb
push
lahf
in
bound
aas
ret
loopne
push
mov
cmc
loope
fldenv
sbb
pop
clc
sahf
add
or
andl
test
inc
dec
les
loope
imul
adc
xchg
insb
xchg
insb
xor
imul
lods
cmp
into
in
bound
pop
out
adc
loop
popa
insl
test
adc
mull
mov
pop
inc
xor
aas
pop
jne
xor
dec
push
push
push
pop
bound
in
adc
repz
dec
popf
mov
loopne
das
jae
dec
out
mov
jle
mov
jnp
or
inc
xchg
insl
out
aam
mov
test
int3
inc
rclb
shll
push
mov
pop
repnz
push
push
push
out
pop
into
ret
mov
mov
lea
test
dec
loop
daa
push
test
lods
and
shl
stos
ds
sub
outsb
sahf
mov
mov
outsl
arpl
push
sub
mov
push
dec
sub
and
insl
sub
popf
jno
add
mov
adc
jae
dec
jne
mov
es
repz
sbb
push
lret
lods
ljmp
jae
xchg
test
sbb
shrb
mov
lock
ds
adc
fsubl
xor
pushf
cmp
sarl
lret
int3
sub
iret
or
xor
test
dec
jmp
aaa
xchg
popaw
stos
es
jno
repz
cmpsl
lret
test
ficoms
mov
lea
inc
inc
jns
push
test
mov
ss
push
aam
pop
cwtl
mov
lcall
mov
add
add
add
fdivr
dec
imul
add
add
sbb
add
add
add
add
addb
add
add
add
add
add
add
mov
addb
add
add
stos
stos
add
ja
rorl
incl
incl
add
add
add
and
and
insl
dec
add
or
adc
add
add
add
adc
add
sbb
add
add
pop
lea
add
inc
arpl
rolb
add
add
and
pusha
sbb
sbb
sbb
cmp
pop
lods
imul
push
push
pop
add
dec
imul
mov
sahf
sub
inc
mov
mov
lea
jmp
icebp
add
add
in
pop
cld
inc
orb
testl
add
test
add
xchg
push
fs
push
inc
add
je
in
pop
sbb
rclb
inc
add
cmp
fcoml
or
jmp
add
lcall
incl
push
add
stos
pop
call
incl
mov
push
cmp
int
and
add
lea
add
mov
clc
add
decl
popf
loopne
add
lret
cmp
lods
cmp
adc
adc
push
jne
add
adc
push
pop
add
add
in
js
add
pop
je
sbb
sbb
or
xor
add
jb
je
js
outsl
push
outsb
outsb
je
add
imul
insl
outsb
push
imul
gs
dec
popa
add
cmc
fs
insb
addr16
popa
add
jns
outsl
outsl
imul
popa
popa
push
jne
xor
add
add
out
jge
add
add
add
cmpsb
xchg
and
adc
cmp
adc
adc
daa
cmp
jle
mov
jge
mov
sub
xchg
jmp
cmp
jne
in
push
aam
rcl
aam
or
sti
cmp
jp
shlb
hlt
mov
leave
popa
mov
push
ja
or
sbb
cwtl
jns
std
push
sbb
mov
scas
adc
incl
jl
cmpsl
mov
repnz
movsb
adc
jno
xchg
mov
lret
jno
push
jb,pt
push
mov
aas
fisttps
push
and
xor
shll
ret
adc
xor
les
std
ljmp
gs
mov
cmp
mov
not
mov
ss
push
xor
sbb
pop
mov
pop
adc
lret
ret
leave
aam
adc
mov
jge
mov
inc
and
das
fdivrs
ret
outsl
in
scas
lds
xor
dec
mov
mov
inc
pop
ds
sub
lods
cmc
das
xor
xchg
and
add
test
popa
sti
shll
or
xlat
adc
rcrb
rcll
fistpll
cmp
sar
push
fsubrs
xchg
nop
dec
push
jbe
push
push
ds
mov
shll
pop
add
ss
cmpsl
in
and
dec
xchg
popa
sbb
and
jnp
pop
repz
out
inc
outsb
mov
cltd
subb
dec
cmp
les
cmpsb
inc
test
sub
rol
loop
testb
pushf
gs
dec
sbb
cmc
rol
fwait
mov
aam
test
stc
popa
cli
jb
dec
fcompp
mov
mov
adc
ss
and
mov
sub
push
xor
cmp
cmpsb
icebp
and
xchg
sub
jae
or
mov
jmp
mov
mov
adc
test
mov
mov
pop
pushf
stos
arpl
sbb
cld
mov
int
rcl
and
push
pop
loopne
dec
in
mov
pop
mov
mov
sub
pop
out
hlt
pop
mov
mov
add
adc
dec
adc
aam
jg,pn
dec
int
ret
fldcw
or
ss
stos
or
mov
sub
dec
leave
ret
int
cmp
in
faddl
xchg
push
push
ret
cmp
mov
mov
cmpsb
repnz
test
adc
sub
andl
into
cmp
pop
adc
test
stc
add
mov
mov
jno
or
add
or
dec
ja
xchg
and
sub
aam
ret
mov
test
js
jbe
and
pop
pop
out
pop
std
xor
xchg
sub
call
xchg
repz
xlat
mov
fisttpll
out
dec
cmp
dec
les
mov
cmp
jle
insl
mov
repnz
or
lds
clc
jbe
push
and
fldt
icebp
jnp
lret
pop
in
movsb
add
or
rorb
cmpsb
movsb
test
cmc
cmpsb
add
aaa
sbb
arpl
test
sahf
mov
mov
outsl
jbe
push
pop
and
jns
addr16
jns
jle
in
mov
pop
cmp
push
dec
mov
scas
out
mov
adc
pop
sbb
ret
les
sub
cmp
dec
pop
xor
mov
in
pop
std
jae
xor
inc
add
add
scas
cmp
xchg
jnp
push
cmpsb
lcall
ja
into
imul
inc
xor
aam
aam
push
fs
ds
outsb
inc
inc
or
cmp
fs
and
mull
cmpsl
xor
add
lret
push
in
push
mov
imul
enter
and
push
xor
test
pop
sbbb
push
push
pop
sbb
repz
divb
daa
cld
test
or
xor
pop
jne
adc
cs
shlb
notl
adc
push
das
pop
xchg
mov
mov
xor
insb
pop
repz
lea
pop
fdivrp
stos
push
mov
cmp
push
bound
cli
pop
jmp
lods
lgs
pop
subb
cwtl
or
stos
loopne
mov
jle
je
mov
jae
test
hlt
aaa
and
ret
and
dec
aas
cmc
lret
stos
lcall
shll
test
lds
fs
insl
rclb
jmp
push
mov
pop
mov
push
popw
popa
and
mov
pop
mov
jecxz
subb
push
leave
lods
cltd
out
imul
rcr
jmp
mov
insb
mov
pop
lods
cmc
sub
xor
stos
xchg
gs
or
sbbb
adcl
mov
jne
mov
xorb
push
mov
out
test
fs
dec
cli
push
jnp
sahf
out
idivl
mov
scas
loope
test
mov
mov
adc
aaa
mov
mov
and
inc
sub
mov
push
or
inc
mov
outsb
pop
xchg
or
or
rcrl
dec
cmpl
add
mov
cli
mov
xchg
fwait
lahf
std
mov
push
xchg
jecxz
and
pop
ret
jbe
aad
popf
lret
push
and
loope
mov
aaa
adc
std
test
movd
dec
cmpb
jns
adc
xor
scas
xor
data16
cmp
stos
sub
les
movsl
xor
or
push
mov
mov
xor
sub
hlt
mov
int3
leave
adcb
pop
and
mov
or
jp
mov
repz
mov
fsubr
sub
pop
add
add
out
add
mov
pop
dec
xor
cwtl
xor
test
cmp
mov
adcb
xor
push
cmpsl
ror
mov
aas
sub
sub
inc
cmp
je
in
dec
popl
cmp
adc
enter
sbb
mov
sub
sub
lods
jno
and
test
dec
adc
add
ja
inc
dec
and
arpl
or
push
xchg
pop
push
dec
lret
add
inc
fdivr
pusha
jmp
fmull
stos
pop
ret
and
add
mov
dec
or
pop
add
mov
js
and
push
pop
mov
pop
shrl
lock
ds
stos
fiaddl
stos
sub
inc
movb
or
push
adc
lahf
inc
pushf
icebp
out
or
int3
fs
stos
jnp
xchg
cmp
jno
aam
dec
bt
popf
inc
movsl
aaa
push
push
push
stc
mov
and
xchg
test
jmp
fistl
cli
in
and
sub
pop
int
rcrl
jnp
rolb
jge
aas
fistpl
nop
jg
lahf
pusha
adc
or
in
lds
cmp
push
sub
scas
rorb
sbbl
add
out
sbb
test
sub
or
xchg
adc
mov
scas
cmp
cli
gs
testl
sti
mov
gs
inc
pop
sbb
sub
and
not
stos
daa
inc
rcrl
cmp
aaa
xlat
cwtl
mov
out
ret
lods
jns
lcall
pop
lock
js
push
sub
cmp
push
jg
fwait
data16
or
ja
jl
pushf
xchg
in
pop
mov
fmul
sbb
mov
fdivrl
cltd
sbb
stos
jge
cli
insl
xor
cs
shll
andl
fnstcw
cwtl
push
sbb
loope
hlt
cmpb
out
int
push
call
daa
roll
std
insl
lret
push
push
pop
jno
sti
pop
sbb
inc
lock
popa
mov
sub
gs
inc
sarb
pusha
push
lods
imul
dec
pop
mov
lods
jo
mov
dec
mov
mov
idivb
movsb
sub
out
mov
or
clc
out
sbbb
or
adc
clc
fucomp
add
cmpb
jecxz
lds
shlb
mov
ljmp
lods
loop
cmp
push
jne
mov
or
add
cs
adc
or
filds
xchg
mov
sbb
popa
popf
cmp
mov
movb
or
dec
ret
dec
ja
imul
js
repz
out
out
loope
cs
mov
testb
add
shll
out
sbb
jg
dec
aaa
jns
mov
scas
andl
dec
pop
sub
sub
add
lock
std
jnp
or
cmc
pop
mov
sbb
mov
cld
scas
jb
es
rcl
aad
mov
lods
inc
cmp
push
sbb
and
push
pop
imul
inc
std
pop
cld
dec
add
pop
rcrl
aas
push
and
dec
add
dec
fimull
or
shrb
insl
pop
push
xor
mov
sbb
adc
clc
push
out
ficoml
rcrb
in
cmp
push
arpl
dec
fsubl
mov
mov
adc
repnz
xor
lods
mov
mov
push
mov
aam
sub
xchg
mov
pusha
shll
mov
jmp
aas
mov
iret
mov
into
inc
adc
cmp
jecxz
movl
sbb
adc
ret
movb
cli
cld
mov
arpl
cmp
sbb
movsl
sub
in
fisubl
xchg
fucom
or
and
jmp
xchg
sub
adc
dec
adc
sbb
add
jb
cmp
push
cmp
inc
cli
push
test
mov
cmpsl
fisttps
or
iret
arpl
push
sub
sub
cmp
add
inc
notl
fst
push
stos
jl
fs
xor
sbb
xchg
lcall
cmp
pop
lock
stos
or
sub
fidivl
bound
jbe
imul
xorb
fxch
jae
dec
mov
pop
pusha
loop
and
ds
orl
mov
adc
dec
rcrb
imul
cwtl
popa
fwait
loopne
inc
das
out
notl
pop
inc
xor
push
test
xor
inc
push
loop
divb
pop
mov
bound
adc
cmc
loopne
pop
loop
fcmovu
aaa
dec
xorl
jb
inc
stos
mov
icebp
mov
scas
mov
call
adc
jne
dec
stc
cmp
mov
imul
dec
idivb
mov
aad
inc
mov
dec
or
mov
mov
lea
sbb
inc
out
add
in
adc
cmp
fsubs
orb
insb
pop
mov
mov
mov
test
mov
loop
xor
fcom
push
insl
xchg
dec
or
adc
dec
lods
and
pushf
jl
test
test
xor
jno
jp
loopne
sub
pop
pop
int3
jno
adcl
das
mov
push
or
jmp
and
pop
int3
je
dec
popf
movsl
sub
jle
andb
xchg
daa
orl
dec
cmp
xchg
fcompl
mov
xchg
lock
scas
dec
leave
cld
fmull
lock
jg
lock
addb
jae
std
incb
mov
sub
icebp
add
imul
mov
aad
lahf
outsl
inc
sbb
out
xchg
fsubr
jle
xor
mov
addr16
sbb
add
add
cld
out
testl
sbb
ficoml
add
es
sub
sbb
in
stc
loop
and
jae
pop
mov
xchg
jbe
shrl
push
pop
pusha
adc
outsl
fisttpl
jmp
xchg
sub
cli
sbb
test
es
call
sti
insb
mov
mov
sbb
in
inc
mov
sarl
cmp
popf
imul
les
in
xor
pop
jns
iret
pusha
outsb
repz
cpuid
mov
int
test
insl
pop
jnp
push
ret
add
or
and
mov
in
comiss
jg
pop
fwait
cld
xor
jae
jb
hlt
fistl
addb
pushf
fdivs
add
cli
dec
cmp
pop
sbbl
fsubrl
jg
mov
ss
xchg
cmp
hlt
mov
pushf
pop
popa
adc
icebp
inc
cmp
fldl
cmp
orb
dec
dec
add
aas
jbe
dec
inc
sbb
stc
dec
pop
cmpsl
sbb
sub
jne
mov
and
pop
les
xchg
bound
push
in
je
mov
xchg
int3
mov
or
add
dec
mov
push
rcrl
push
pop
xchg
sarl
pop
or
inc
jp
and
fsubrl
and
pop
int
dec
jo
xchg
ljmp
fmuls
or
inc
xor
bound
fimull
jg
mov
xor
lods
push
cmpsl
lret
jg
cmp
jnp
sahf
dec
adc
lods
and
and
call
sahf
jbe
aam
addb
adc
sbb
gs
rcr
pop
pop
lret
repnz
jbe
jae
inc
push
fisttpll
add
scas
push
jecxz
xor
xor
mov
test
repnz
call
in
mov
xor
shrb
inc
jns
and
repz
inc
jae
addl
imulb
sub
cmp
out
cmp
xor
dec
push
movsb
sub
dec
lret
pop
fbld
sti
icebp
push
sbb
js
xor
mov
aaa
dec
or
addr16
sub
pop
mov
movsl
movsb
adc
stos
and
push
ret
push
rclb
dec
pop
jl
xchg
sub
adc
sub
push
insl
cmp
out
jge
in
wrmsr
es
cmc
jle
fsts
ljmp
arpl
mov
xor
add
roll
adc
xor
insb
dec
daa
daa
lock
xor
addb
pop
adc
cs
rcr
leave
jle
jmp
jl
xor
adc
neg
add
icebp
bound
les
mov
cltd
inc
sbb
dec
es
aad
fimull
scas
iret
clc
sub
jmp
sub
mov
mov
fs
outsb
mov
mov
xor
sub
daa
mov
inc
cmp
jmp
mov
adc
sbbl
mov
inc
out
push
push
inc
aas
xchg
cs
jmp
jle
sarl
and
xchg
mov
test
orb
shrl
xchg
xchg
bound
jl
into
mov
in
outsb
hlt
jno
mov
insb
and
and
mov
cmp
nop
imul
aas
je
xchg
in
xchg
sahf
fisubl
scas
dec
mov
aad
mov
adc
cwtl
ss
jg
inc
sahf
out
mov
sar
or
inc
cmp
loope
mov
outsl
sbb
inc
negb
gs
pushf
sub
cmp
aaa
mov
xor
scas
out
dec
aas
scas
mov
or
push
outsl
sbb
pusha
in
add
add
test
nop
fnstenv
inc
push
imul
xchg
or
add
xchg
adc
pop
daa
in
out
mov
outsb
sbb
mov
movsl
jp
mov
jae
pop
xchg
adc
mov
add
cmp
dec
sub
push
push
gs
push
fs
jae
sbb
mov
out
sub
addr16
loopne
sahf
inc
es
clc
adc
mov
sub
inc
xchg
cs
cmp
loopne
sbb
push
mov
mov
setp
jno
or
out
imul
inc
push
xor
adcl
mov
sub
cmpsb
sub
rcrl
ja
jmp
lea
xchg
mov
dec
stos
pop
jno
mov
pop
pushf
mov
call
je
inc
or
shrl
xor
add
xchg
mov
popa
movsb
or
push
lret
loopne
mov
ror
scas
xchg
add
mov
ss
sub
stc
mov
push
xor
dec
or
cltd
enter
in
or
ja
pop
test
pop
mov
ds
and
inc
add
roll
mov
icebp
lock
xor
jp
lock
lret
adc
scas
sbb
jnp
mov
cmp
and
mov
pop
inc
cmc
leave
mov
insl
jecxz
xchg
mov
mov
inc
sbbl
mov
lock
push
fidivrl
stc
loopne
dec
pop
cmp
daa
das
bound
cmp
xor
clc
fidivrl
or
bound
ret
mov
cwtl
cwtl
popa
lds
jmp
jmp
xor
ret
in
sbb
pop
xor
dec
mov
int3
test
mov
sbb
mov
lods
hlt
lock
cmpsb
sub
cli
subw
sub
fs
enter
int
xor
mov
xchg
shrb
int3
mov
popf
icebp
jno
leave
scas
subb
mov
push
arpl
call
sub
lods
outsb
mov
adc
mov
shrl
adc
enter
fdivrs
int3
lahf
aad
ss
dec
inc
shlb
daa
and
cmp
call
xlat
out
lret
fnsave
rcll
je
int
into
adc
fs
mov
mov
xchg
push
repnz
xor
pop
scas
and
je
pop
add
xor
stos
stc
je
sbb
es
push
xchg
sub
bound
ja
test
shll
or
fnsave
adc
push
sarl
icebp
or
test
push
xor
mov
xor
out
repz
aas
aaa
dec
icebp
mov
adc
out
dec
and
push
mov
inc
outsl
jmp
stos
aad
or
shrb
push
pop
mov
jo
jno
int3
into
arpl
dec
shlb
cmp
in
xchg
push
pop
and
sbb
daa
sub
loopne
cli
dec
out
push
popf
cmpsb
std
stos
pop
jbe
sbbb
xor
icebp
and
add
add
add
dec
rorb
sub
and
add
pop
rorb
out
xor
arpl
xlat
cmp
cmp
int
add
push
ds
sub
adc
xchg
in
mov
and
pop
jl
push
inc
cmp
insl
push
lret
xor
fistps
insl
add
push
inc
jnp
popf
popf
dec
out
test
xor
push
hlt
push
pop
xchg
pop
inc
adc
daa
xchg
cmp
mov
jno
jns
inc
inc
into
mov
and
xor
test
inc
cmpb
add
inc
mov
enter
mov
mov
pop
mov
icebp
dec
cmp
mov
mov
leave
fstp
sub
sub
xor
int3
pop
jge
popa
pop
cmc
stc
jno
mov
popf
bound
cmp
xchg
stc
jbe
ret
shll
ds
int
test
out
bnd
shlb
push
push
cmpsl
lock
inc
mov
inc
movsb
xor
dec
mov
ds
repz
sub
mov
popa
xlat
cwtl
inc
mov
ds
in
shrl
loope
dec
outsb
mov
insl
icebp
inc
mov
ss
sub
dec
push
mov
xlat
add
mov
psubsw
lret
dec
mov
jns
mov
mov
sub
test
xor
or
cmp
mov
rcrl
jmp
sub
jo
adc
aad
imul
leave
das
adc
jae
pusha
mov
mov
xchg
xor
das
add
mov
sub
cli
popf
inc
mov
sti
leave
pop
aam
adc
mov
call
in
lret
mov
sub
cwtl
divb
aad
mov
xchg
xchg
fidivrs
std
push
push
and
push
or
and
inc
cs
in
dec
sbb
dec
int3
dec
sub
jb
int
xchg
shll
pop
xor
sahf
loopne
std
pop
std
sti
push
cmp
add
ret
nop
pop
push
and
jbe
add
mov
adc
dec
mov
xor
ds
xor
and
into
aas
outsl
add
rcr
loope
in
xlat
mov
sbb
ss
mov
in
push
xor
mov
jmp
xchg
testl
popa
jmp
gs
xor
orl
ret
data16
push
mov
test
adc
lds
mov
cmp
mov
mov
xchg
loope
push
inc
sub
mov
mov
lods
mov
push
jb
xor
mov
push
lea
pop
inc
mov
mov
adc
mov
sub
lahf
and
cltd
sti
add
add
add
fisttps
add
add
ljmp
add
add
add
add
add
add
add
lock
add
add
add
add
add
pop
add
cmp
adc
add
addb
add
stos
stos
add
fidivl
mov
call
in
push
push
push
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
mov
pop
add
mov
mov
cmp
je
cmp
jg
mov
mov
mov
movb
movzbl
sub
inc
test
jne
jmp
mov
movb
call
mov
mov
movzbl
sub
je
incl
jmp
push
push
push
push
mov
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
nop
add
add
add
add
imul
adc
adc
add
adc
add
add
add
add
add
add
adc
add
shlb
add
jb
add
add
add
frstor
add
add
add
add
add
add
add
add
jns
jne
dec
imul
add
adcl
jecxz
out
sbb
push
ja
clc
xchg
mov
mov
add
push
add
imul
pushl
jne
pop
push
std
pusha
decl
lock
clc
test
pop
add
mov
mov
push
add
mov
add
repz
add
and
in
push
add
sub
loopne
add
add
call
test
decl
adc
test
sub
adc
jne
or
push
push
pushf
test
test
test
incl
je
clc
test
mov
movsl
clc
add
push
ljmp
push
decl
loopne
add
push
pop
pop
add
add
add
add
add
add
sbb
sbb
sbb
sbb
sbb
les
je
inc
jb
gs
gs
add
inc
insb
gs
outsl
mov
outsl
add
gs
dec
add
je
pop
lods
imul
fs
add
push
je
xor
gs
jae
push
addr16
je
add
add
and
inc
xor
je
test
add
adc
add
add
add
add
lahf
movsb
fs
aad
adc
push
ja
sbb
jno
dec
fwait
movl
movsl
inc
shl
and
nop
sub
gs
mov
mov
sbb
cmp
scas
leave
or
cmpsl
sub
fstpl
lea
das
or
imul
push
incl
adc
push
andb
pop
xor
add
jle
int
stc
pop
pop
push
mov
outsb
pop
ror
aaa
push
lods
sbb
std
bound
test
sahf
iret
jnp
fnstsw
add
fadd
xor
mov
inc
inc
andl
hlt
add
imul
mov
in
inc
aaa
xchg
xchg
cli
call
ljmp
sbb
scas
mov
int
mov
pop
leave
or
out
cmc
jmp
adc
sbb
test
imul
or
or
sub
or
mov
push
or
rcr
fidivl
xor
jge
pusha
fcompp
je
xor
jge
mov
pop
mov
add
inc
scas
lock
popa
xchg
mov
imul
sbb
fbld
xchg
frstor
test
sahf
lahf
jp
aad
cld
jle
xchg
mov
movsl
int
pop
sub
lcall
mov
add
sub
scas
fs
sbb
enter
addr16
add
leave
and
frndint
xchg
pop
add
bound
subl
leave
fs
or
adc
scas
jne
add
cmpsb
and
mov
dec
jg
pop
lds
mov
outsl
sar
xor
pop
adcl
cmpsl
mov
push
in
rorb
arpl
push
lods
testb
adcb
xor
and
rcr
es
jecxz
pusha
out
cmc
sbb
into
sbb
es
add
mov
push
shll
lods
add
cld
in
enter
rorl
ss
sahf
add
jae
ds
pop
add
call
mov
std
push
sub
popf
or
movsb
pushf
bound
sbb
fptan
jg
loope
push
xchg
jp
in
outsb
sub
out
push
imul
dec
ficoml
mov
cld
dec
pushf
add
sub
nop
imul
loopne
fs
fmuls
lods
je
xchg
xor
pop
xchg
cmp
das
inc
sbb
lods
es
iret
test
jno
xchg
cli
imul
xchg
ret
shlb
into
lock
push
stc
int3
sub
shl
data16
lea
push
shlb
xchg
lret
fbld
scas
popw
cmp
ss
ss
pop
es
leave
push
fimull
push
inc
jmp
stos
cmp
nop
xorb
pop
xchg
insl
xchg
jle
lods
sahf
fldenv
xor
lods
push
push
je
xor
add
push
adc
dec
shrb
mov
fstpt
fs
leave
xor
mov
lcall
sub
or
hlt
mov
lods
ret
pushl
push
bound
sbb
mov
jmp
lock
scas
mov
gs
pop
lock
mov
xchg
std
paddusw
mov
jle
stc
xor
push
jno
add
push
jge
push
xchg
and
js
mov
arpl
rclb
mov
dec
dec
int
inc
inc
fcmovu
ljmp
sar
pop
sahf
orl
mov
jl
insl
mov
cmp
push
adc
mov
inc
imul
push
mov
jbe
rcr
andb
btc
push
jle
inc
sbb
hlt
push
mov
and
sub
fidivrs
and
mov
xor
push
gs
inc
push
xlat
iret
lea
cmpsl
xchg
adc
inc
fmull
in
add
sbbl
movl
shlb
push
lcall
adc
jne
inc
sub
pop
add
arpl
fisubl
jo
sbb
pop
jne
inc
sub
je
divb
test
fsubs
dec
mov
test
jl
or
cmc
push
mov
add
mov
dec
fcoml
add
jns
xor
fidivl
jmp
or
lahf
mov
lea
lcall
addr16
xor
lret
es
out
je
movsb
dec
push
gs
inc
mov
or
jae
imul
mov
mov
test
jb
out
fwait
aam
fwait
ja
cmp
idivl
mov
pop
or
inc
sub
push
cmpsb
iret
into
mov
adc
jge
out
pushf
xchg
cmpl
push
push
ljmp
gs
xchg
mov
cmpsb
jns
jnp
fildll
dec
mov
sbb
movsl
xchg
jo
test
inc
inc
daa
adc
or
out
jg
xor
cld
pop
inc
fcmovb
jmp
mov
mov
pop
xor
jb
cmc
mov
js
cmpb
add
pop
insb
dec
and
std
xor
std
sarl
add
add
ss
aaa
out
lcall
adc
lods
sbb
aaa
outsl
fnsave
push
imulb
lea
inc
cmpsl
jo
xchg
sub
lods
jg
loope
push
lret
xor
add
push
stc
fsts
cmpsl
in
es
or
push
add
mov
aad
pop
stos
push
jo
fnstenv
dec
fnstenv
inc
pushf
jbe
cli
mov
in
mov
in
cmp
adcl
hlt
pop
lret
xor
into
je
cmp
cmp
sbb
movsl
dec
push
adc
lock
test
call
mov
insb
jnp
pop
stos
mov
mov
stos
out
mov
enter
push
dec
adc
mov
jno
push
sub
xor
std
xor
enter
pop
lock
cld
mov
shlb
popf
sbb
mov
and
arpl
cmp
stos
mov
hlt
jne
or
xor
sub
mov
mov
xor
xor
into
pop
push
cmpb
inc
in
lahf
dec
roll
shrb
adc
lret
in
ret
or
shll
mov
inc
pop
call
lods
mov
ja
pop
and
add
dec
sub
stos
jecxz
sbb
jg
iret
scas
orl
mov
cmp
cmpsb
sbb
out
movsl
mov
sti
leave
mov
sbb
pop
fnstcw
movsl
fwait
in
ds
mov
fistpl
nop
jl
push
mov
and
fdivrl
pop
dec
adc
cmp
xlat
lods
mov
or
sbb
push
jo
xor
and
and
mov
in
xchg
sbb
aas
cmovs
push
cs
xchg
test
sbb
pop
stc
and
inc
mov
imul
sub
pop
xor
pop
sbb
xor
xor
cmp
sub
gs
testb
mov
mov
les
adc
popa
lcall
jb
mov
jb
insl
push
fwait
jle
push
cwtl
or
out
imul
hlt
pop
push
rolb
iret
mov
fistpl
shll
and
xor
pusha
pusha
jg
test
cwtl
jmp
pop
loopne
sub
rcll
or
cmpsb
xchg
and
pop
outsb
cli
out
aam
cli
dec
jae
sahf
dec
pop
mov
sti
dec
cmp
fiaddl
jns
out
jg
arpl
adc
xchg
fsubrp
popf
roll
inc
adc
out
mov
mov
sub
lods
arpl
xor
es
outsb
inc
icebp
fwait
arpl
insl
outsb
sbb
pop
das
jmp
cmpsl
mov
push
out
cmpsb
sbb
das
xor
add
jmp
cmp
jno
sbb
lods
dec
dec
pop
mov
mov
inc
xor
mov
sbb
push
iret
nop
inc
add
inc
xchg
cmp
inc
popa
mov
test
addr16
fildll
inc
cmp
cs
pop
push
or
movsl
outsb
sbb
icebp
mov
sar
out
roll
inc
cmp
xchg
das
lea
aas
jg
push
in
push
cmpsl
xchg
jg
xlat
pushf
repnz
jmp
xchg
jae
push
add
fidivl
or
sub
int
mov
sarl
jns
mov
add
or
add
fidivs
loopne
cmpsb
shrb
xor
push
into
jae,pn
add
loope
ret
jne
push
cmp
data16
push
mov
fnstsw
lret
xchg
mov
or
jg
outsb
jae
popa
cmp
dec
stos
scas
jle
je
mov
xor
adc
jo
dec
jb
fwait
popf
jp
shll
call
mov
cltd
lods
push
jo
jecxz
inc
daa
xchg
push
mov
ss
and
es
xchg
inc
dec
lahf
aam
icebp
pusha
sbb
dec
jl
inc
adc
xor
imul
shrl
aas
je
inc
je
and
inc
cmp
in
loopne
pop
cmpsb
das
mov
enter
mov
lea
jo
fldl
rcrb
pop
and
mov
xchg
inc
mov
fs
xorb
jne
ret
jnp
mov
xor
out
lea
cmp
ds
sub
push
jnp
scas
jo
push
adc
sbbl
loope
lret
nop
jmp
push
dec
das
sub
add
loope
adc
outsb
jbe
cmp
dec
push
jae
shll
sub
xchg
mov
ja
movsb
and
sarb
fcomps
iret
stc
cld
xor
scas
mov
dec
cmp
jecxz
jb
outsb
in
dec
inc
je
aaa
testl
inc
ljmp
mov
inc
imul
dec
dec
mov
int
pop
fs
jo
scas
or
stos
or
push
mov
sbb
stc
cmpsl
cmp
mov
fisubrl
test
jae
leave
test
sbbb
push
cmp
inc
fcmovnbe
adc
inc
mov
test
xor
pop
push
pop
mov
cmp
and
lock
mov
jge
pop
cwtl
ds
enter
std
pop
fcomi
aam
cmp
adc
pushf
repnz
mov
mov
jecxz
push
cmc
mov
pop
out
arpl
int
mov
repz
pop
xchg
mov
and
or
mov
inc
mov
push
aas
push
loope
and
stos
jg
dec
addr16
sbb
dec
lea
cld
lret
dec
dec
outsl
dec
fs
hlt
lcall
xchg
test
cmp
and
sub
movb
mov
inc
xchg
push
jl
dec
dec
icebp
jae
je
shrb
fsubl
inc
data16
inc
mov
imull
adc
hlt
pop
enter
sub
xor
cmp
movsl
fdiv
mov
or
icebp
imul
xlat
jo
les
adc
or
mov
and
das
xchg
dec
ss
arpl
pusha
mov
mov
lret
add
push
outsb
cmp
push
jno
in
test
jnp
lahf
cmpsl
sbb
xchg
mov
fidivrl
or
or
mov
xchg
rcrl
filds
xor
add
enter
in
rcrb
push
add
stc
sbb
int
mov
insb
inc
pop
cld
std
clc
xor
jae
fs
icebp
jnp
xor
push
push
mov
inc
sub
sbb
scas
lahf
xor
and
stc
iret
and
jmp
sub
pop
out
rorb
xlat
dec
mov
popa
jge
imul
lods
jmp
in
push
incl
aaa
lea
adc
lods
lock
cmp
pusha
jne
mov
push
imul
cmpsl
lds
cmp
or
sbb
cmp
jge
add
outsl
mov
sbb
cmp
push
fmul
jo
mov
or
rcrb
sub
cmc
cli
sub
inc
roll
push
xlat
pop
sahf
xor
mov
sub
xor
jmp
pop
aaa
movsb
xchg
push
ja
push
aam
es
pop
push
xor
stc
sub
mov
mov
lret
and
cmpsl
ja
gs
mov
scas
inc
inc
loopne
stc
mov
adc
lods
pop
inc
hlt
and
dec
add
cmp
mov
sub
dec
jns
xchg
bound
icebp
int
lahf
sub
ret
mov
insl
pop
lcall
xchg
mov
aas
sbb
test
xchg
outsl
enter
adc
sti
pushf
insb
lret
outsb
outsl
mov
adc
lods
adc
lahf
pushf
jb
pop
dec
out
jnp
sbb
pop
test
mov
sub
das
adc
mov
mov
fisubrl
inc
lods
aaa
lcall
mov
aam
jnp
lock
and
push
sub
arpl
pop
andl
sub
cmpsl
hlt
jne
mov
lret
das
popa
mov
xchg
pop
sti
inc
orb
pop
xlat
dec
mov
aam
mulb
in
dec
dec
std
push
add
out
dec
push
mov
push
jae
das
lahf
cmp
fcomps
out
mov
mov
dec
jno
pop
popa
dec
mov
xchg
rolb
enter
xor
xchg
adc
cmp
mov
mov
jmp
fsubl
test
adc
lea
xchg
jo
sub
stc
iret
das
aam
adc
mov
je
sbb
cmp
xchg
xchg
popa
sbb
aam
dec
in
stos
mov
dec
dec
push
sbb
xchg
mov
in
addb
jb
jnp
cmpsl
repz
dec
mov
sbb
pop
idiv
orl
test
push
test
push
movsl
cltd
enter
jo
pop
repz
pop
cli
or
pop
in
push
repnz
fstpt
les
push
rcr
pop
jecxz
pop
inc
push
cli
dec
bound
aaa
push
jnp
mov
pop
and
mov
mov
leave
orb
icebp
cmp
push
or
addl
xchg
mov
insl
mov
add
aad
ds
movsb
mov
xor
lret
mov
cmp
adc
jae
rorb
enter
adc
rcl
xor
mov
cmpl
lret
xor
lods
mov
js
sub
insl
inc
in
addr16
js
cmp
movsl
jecxz
pop
movsb
inc
xlat
mov
nop
sbb
dec
lods
mov
xchg
mov
jo
popa
pop
ret
pusha
ja
in
outsb
adc
push
sub
mov
push
pusha
out
xchg
jne
xor
jb,pt
popf
push
fdivrs
and
xor
mov
pop
xor
cmp
movsl
mov
pop
mov
dec
jbe
dec
xchg
jmp
jge
add
enter
sti
and
xchg
ss
test
rcll
cmp
stos
imul
push
movsl
jg
adc
and
sbb
outsl
pusha
sub
or
fstps
push
cltd
dec
fisttpll
test
and
in
mov
pop
roll
lcall
cmp
jl
aad
test
imul
addr16
call
cmp
inc
mov
cltd
arpl
jb
sub
push
loop
stc
mov
cmp
dec
pop
popf
and
push
or
push
imul
add
mov
subl
add
test
mov
addb
and
ss
xor
push
shll
out
mov
repz
fisubrl
pushf
loop
cmp
cmpsb
popf
and
add
jmp
mov
mov
aas
mov
and
loopne
je
or
ret
movsb
mov
xchg
in
mov
pop
xchg
mov
fnstsw
shl
adc
stos
push
bound
push
imul
mov
add
cs
shr
fsts
ss
pop
cs
add
arpl
xchg
lret
jo
sbb
outsb
hlt
sbb
cmp
fcomps
adc
and
lea
push
fimuls
mov
cmpsb
cltd
push
fmull
and
xchg
repnz
xor
mov
push
xchg
repz
aaa
daa
sub
dec
test
mov
or
add
sub
push
sbb
arpl
loopne
stos
lret
scas
lcall
mov
out
mov
addr16
xchg
orl
jg
sub
sbb
mov
rorb
call
mov
icebp
and
push
rcl
lods
in
out
das
mov
mov
or
jb
popf
add
cmp
popa
xor
iret
cli
pop
sbbb
dec
jae
popf
popf
scas
pop
lds
push
cmpsb
sbb
nop
cltd
aad
add
popa
jg
push
movb
lock
pop
xchg
cmc
pop
sbb
mov
dec
xor
pop
mov
movsl
jno
test
and
adc
cmp
sbb
movsl
lock
xchg
jecxz
sbb
fwait
pop
int
in
mov
popf
jle
cwtl
or
fstps
push
jns
mov
cmpsb
insb
jmp
shlb
dec
clc
mov
scas
dec
xchg
pop
mov
mov
xchg
mov
dec
push
jecxz
ret
mov
xchg
adc
cmp
xchg
mov
xor
fwait
add
sub
adc
lea
pop
xchg
mov
pop
mov
out
mov
sbb
fcoms
jecxz
mov
rep
inc
rcrl
lods
bound
pop
xor
imul
push
push
push
xlat
adc
sub
sub
push
fsts
in
mov
add
jnp
dec
xchg
subb
add
lcall
es
lcall
inc
lock
adc
int
into
je
sahf
lock
sbb
sarl
add
outsl
push
popf
pop
je
mov
add
or
sbb
xor
xlat
jg
rorb
cli
shlb
imul
dec
mov
out
stos
adc
jge
cld
inc
mov
jo
pop
lret
orb
mov
rcl
mov
jl
mov
adc
xlat
dec
mov
lods
fdivr
xor
jl
add
enter
sub
inc
push
lock
xchg
xchg
in
add
cs
add
shll
daa
mov
cmp
adc
in
addr16
cld
cmp
pop
gs
dec
imul
mov
xchg
mov
dec
popf
push
clc
sarl
outsl
in
pop
fidivs
lret
imul
roll
sub
push
adc
loope
subl
imul
mov
out
test
sub
jl
fucom
adc
mov
lret
adc
mov
sub
std
fiaddl
xlat
cltd
mov
fidivl
int
or
or
push
push
mov
mov
rcrl
mov
lods
out
mov
mov
or
roll
movsl
xor
cmpsb
and
and
loope
ret
outsl
lret
divl
pop
repz
sti
jae
cli
sbb
pop
dec
inc
and
jp
lcall
mov
or
jge
jmp
pop
add
icebp
je
out
mov
sub
xchg
inc
loope
cwtl
jp
jmp
sub
pop
test
frstor
in
or
mov
shlb
nop
iret
push
and
lcall
iret
mov
and
pop
arpl
push
loope
push
inc
mov
lahf
add
popf
cmp
dec
daa
out
add
fdivrs
xchg
jbe
mov
insb
pop
fisubrl
dec
outsb
popf
add
scas
loope
dec
jae
push
insl
inc
das
dec
or
fs
rorl
xchg
push
push
pusha
icebp
psubw
and
test
sbb
pop
jb
push
lret
mov
in
dec
ret
adc
push
test
ja
mov
pop
and
dec
pop
mov
jbe
xor
ret
sbb
leave
mov
xor
mull
ljmp
jb
push
rcl
dec
pop
loop
cmpb
das
fidivl
jmp
aas
dec
imul
fimuls
std
stc
js
or
orb
add
movsl
pop
cmpsl
xchg
add
cli
sbb
cmp
inc
jge
sbb
ds
pusha
jp
xor
sub
dec
xchg
jb
nop
loop
push
mov
ss
inc
jbe
or
lods
rolb
jno
push
imul
cmpsl
sbb
lds
push
push
in
push
std
flds
sahf
mov
pop
xor
mov
aam
fwait
mov
test
lods
sub
mov
int
sbb
test
lods
sbb
ja
gs
pushf
stos
push
sti
cmp
mov
mov
push
aaa
and
mov
mov
mov
adc
mov
xor
bound
add
sub
dec
scas
xor
push
roll
add
sub
mov
push
scas
je
daa
adc
xor
adc
add
je
add
add
xchg
push
and
mov
add
add
add
add
add
add
add
add
shlb
add
add
add
add
add
add
add
ja
mov
jg
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
in
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fucomip
add
int3
in
add
in
add
mov
in
add
lods
in
add
movsb
in
add
pushf
in
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
in
add
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
in
add
mov
in
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
out
add
dec
out
add
push
out
add
pop
out
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
out
add
cwtl
out
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
add
sbb
add
inc
lock
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
mov
lock
movsb
lock
pushf
lock
xchg
lock
mov
add
test
add
jl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fdiv
add
loopne
add
in
lock
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
add
cwtl
icebp
add
shl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
repnz
push
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
add
js
add
mov
add
pushf
repnz
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
