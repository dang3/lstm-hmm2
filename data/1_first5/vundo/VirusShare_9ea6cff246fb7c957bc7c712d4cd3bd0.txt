push
mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
add
adc
and
xor
dec
mov
adc
test
xchg
shlb
aam
in
hlt
mov
inc
adc
and
xor
inc
add
and
iret
xchg
rcl
jecxz
repz
icebp
aam
in
hlt
mov
pop
adc
and
xor
inc
sbb
cmp
ret
xchg
lock
lcall
stos
rcrl
and
inc
adc
lret
push
shr
rorb
insb
out
lock
jnp
sbb
mov
popl
push
and
shl
outsl
faddl
sub
cmp
ror
push
or
fistps
sub
mov
sbb
lcall
mov
or
es
sub
sbb
mov
inc
add
push
sbb
test
test
cmp
mulb
dec
pushf
or
inc
pop
sub
xchg
aas
push
dec
dec
adc
ss
mov
aam
mov
and
arpl
stos
mov
clc
stos
aad
in
pushf
mov
push
adc
and
xor
inc
add
and
ret
xchg
lret
movsb
cli
mov
les
hlt
mov
inc
jge
inc
push
push
push
sub
sbb
push
lds
xchg
mov
int3
mov
cmp
sbb
add
pop
fs
je
loope
xchg
mov
xchg
icebp
mov
hlt
insl
inc
jo
dec
pop
xor
adc
xor
mov
les
hlt
mov
inc
adc
and
xor
inc
add
and
ret
xchg
shll
aam
in
hlt
mov
inc
mov
lahf
in
jno
mov
mulb
nop
cmp
cmp
lea
cmp
lret
mov
movsl
fwait
icebp
and
cmpsb
in
add
call
lret
xor
fisttpl
pop
cltd
out
jbe
jge
outsl
shll
les
mov
sub
xor
fists
and
movsb
test
dec
pop
mov
addr16
inc
push
cld
fists
mov
push
int3
xchg
mov
lods
pusha
jge
and
push
jns
outsl
fisubs
sbb
outsb
cli
hlt
sbb
mov
in
repnz
pop
adc
and
dec
lret
test
sbb
mov
movsb
out
push
sub
insl
shlb
xor
mov
dec
push
fwait
sub
jge
add
adc
sti
pushl
inc
pop
rorb
popf
inc
fistpl
xor
or
dec
das
jb
pop
ja
jle
push
in
ret
xchg
pushf
out
add
and
mov
push
lods
sub
je
push
xor
in
aaa
movsb
mov
enter
enter
movl
and
dec
xor
jns
pop
shlb
sub
push
push
or
push
pop
ja
xchg
inc
push
out
out
push
out
sbb
sti
mov
sbb
cli
test
stc
in
nop
mov
std
dec
mov
fmull
push
pop
jo
test
mov
in
fst
adc
inc
or
pop
ljmp
adc
mov
sti
dec
push
and
mov
jns
inc
and
jae
jae
pop
mov
sbb
pusha
or
xchg
cmp
pop
lret
flds
movsl
pop
sahf
mov
loope
loop
adc
bound
call
jecxz
in
sbb
jno
les
testl
cmp
incl
pop
dec
stos
add
push
jg
bswap
xchg
shll
jmp
mov
scas
mov
leave
popf
push
lock
mov
outsl
jmp
pop
xor
loope
mov
pop
jmp
das
jne
bnd
xchg
js
inc
push
cmpsb
jae
xchg
xchg
mov
fdivrs
fstps
je
inc
iret
leave
dec
push
jle
sahf
es
pop
mov
out
iret
lahf
mov
pop
out
dec
fmuls
jmp
dec
jl
shll
pop
cmp
icebp
ret
cmc
pop
fsubrs
push
mov
mov
pop
int
dec
shll
mov
push
out
or
xchg
fidivl
pop
dec
iret
jae
sbb
add
lahf
jo
mov
add
pop
jno
jl
out
dec
cmpsl
sub
mov
cwtl
lods
stos
cmp
hlt
or
and
sti
sub
int
lods
enter
xor
sahf
push
into
sbb
std
mov
sub
fisubs
icebp
inc
outsl
test
xchg
cmc
out
xchg
dec
xlat
int3
popf
adc
fldz
push
popa
dec
insl
clc
add
push
out
hlt
dec
sbb
jbe
icebp
xor
mov
ror
pop
jae
insl
addl
mov
cmp
sub
fldenv
inc
ss
mov
lret
out
test
loopne
adc
inc
bnd
arpl
fs
lcall
xchg
sti
lret
adc
sub
mov
lods
fcmovnbe
sbb
mov
call
movsl
xchg
movsl
addb
mov
call
sbb
repnz
mov
rol
pop
xchg
pushf
addr16
sub
mov
mov
pop
inc
dec
adc
dec
add
nop
ss
jg
dec
jmp
pop
insb
mov
ja
pop
mov
cmp
popa
pop
sarl
fstpl
inc
add
addr16
and
filds
arpl
xchg
loop
cs
sbb
push
je
adc
leave
shl
lds
or
push
push
cltd
cmp
enter
push
dec
cmpsl
out
jbe
repz
dec
popf
sahf
push
ficompl
pop
lret
xor
add
es
mov
je
sahf
mov
push
js
rclb
and
out
inc
mov
hlt
rcrl
xor
out
add
jg
int
dec
adc
sbb
sub
inc
push
xlat
sub
pop
inc
jp
sub
rorb
cmpsb
adc
sub
orb
das
sbb
mov
xor
jb
sbb
mov
push
sti
ja
xchg
inc
jo
push
pop
cmp
xchg
pop
mov
push
inc
adc
push
call
pushf
jae
loope
jae
incl
mov
dec
or
lds
inc
repnz
push
gs
test
fwait
mov
sub
pop
movsb
ret
xchg
stc
add
sbb
mov
jae
out
mov
dec
lock
lds
jo
mov
lahf
xchg
aad
sbb
mov
test
insl
fs
pop
mov
adc
push
loope
in
adc
lret
adc
test
adc
addb
shlb
mov
mov
xchg
pop
lods
push
mov
jae
jmp
shl
test
mov
inc
enter
out
icebp
dec
jecxz
mov
pop
pushf
cmpsl
mov
scas
pop
pop
popa
mov
mov
mov
cld
cli
icebp
imul
popa
jnp
mov
fistpll
out
push
lret
std
adc
jl
out
dec
add
insl
jecxz
out
and
push
dec
cmp
lret
lret
dec
dec
andl
ja
jo
cltd
cli
mov
cmp
out
pop
gs
adc
xlat
ds
jg
jl
push
cmpsb
and
adc
mov
mov
jne
jb
fs
cli
fs
loope
data16
and
mov
outsb
fnstenv
loopne
negb
stc
mov
ret
ljmp
push
adc
mov
lahf
sub
push
push
hlt
dec
sti
leave
fldz
lock
jg
in
jmp
inc
jl
and
incb
inc
dec
scas
adc
test
push
mov
enter
cmc
jp
enter
in
jp
cmp
test
orl
daa
mov
xlat
and
xchg
xchg
inc
sub
inc
jo
mov
pushf
fs
in
inc
cmpsl
fiadds
or
mov
out
mov
out
mov
add
leave
xchg
lret
out
add
sub
je
das
push
scas
and
icebp
dec
aam
ss
imul
sub
jge
aas
mov
lcall
mov
insl
inc
sub
aad
ljmp
mov
cmpsb
dec
and
scas
inc
mulb
mov
outsb
xchg
cmp
dec
mov
sbb
pushf
cmpb
or
sbb
add
push
scas
out
les
inc
movsl
mov
in
sbb
jno
xlat
push
movsb
sahf
mov
repz
or
dec
aaa
iret
lock
xchg
jb
mov
ret
test
adc
mov
rclb
jmp
add
movsl
stos
test
idivl
cmpsl
mov
movsl
adc
test
popf
mov
xor
loopne
dec
jne
std
xchg
leave
mov
pop
imul
jmp
mov
sbb
mov
mov
fwait
cmp
sets
pushf
cwtl
popa
pop
insl
xchg
or
inc
cmp
pop
ja
mov
jg
mov
adc
push
push
arpl
fadds
loop
xor
xor
push
hlt
dec
scas
test
adc
fimull
sbb
inc
mov
cmc
jecxz
inc
mov
add
fdivs
add
pop
ror
rcrl
jp
mov
inc
into
push
fmull
out
dec
cmpsl
mov
push
jge
or
xchg
fwait
incb
gs
loope
add
mov
sub
and
jne
xchg
fwait
int3
shr
sub
imul
sub
jbe
ss
in
aas
push
push
dec
xor
mov
lcall
fidivrl
cli
sbb
push
xor
arpl
add
inc
mov
dec
imul
jge
or
xlat
clc
jns
mov
adc
push
fdivrl
out
xchg
lods
andnps
pushf
push
or
jp
jl
mov
test
ds
push
jl
xor
sub
and
sbb
fidivl
jle
push
push
jns
insl
jecxz
int
jl
jns
not
in
sub
out
dec
jge
ds
mov
lods
adcl
adcl
nop
inc
adc
out
mov
flds
dec
js
mov
inc
jno
rcr
inc
pop
daa
inc
mov
push
dec
shl
mov
mov
inc
sti
sub
xor
and
inc
push
ja
jecxz
push
loop
mov
sub
mov
jp
out
add
sbb
or
jns
inc
xor
and
push
into
xchg
xchg
push
pop
dec
fs
sub
scas
dec
mov
adc
cmp
add
inc
jb
xor
mov
sub
push
jp
xor
inc
out
pusha
gs
xor
mov
sub
cmp
inc
fists
addr16
mov
pop
inc
dec
in
fisubs
into
test
aad
std
add
lock
out
mov
mull
add
push
cmp
mov
mov
pop
rolb
or
out
das
aaa
ds
xor
out
fldcw
stos
ret
data16
jl
adc
aam
push
xchg
testl
push
pop
loope
hlt
jle
mov
cmpsl
dec
rcrl
inc
and
xor
add
jge
mov
rcll
mov
mov
or
xchg
mov
pop
dec
scas
call
xorl
mov
cmp
inc
xor
mov
cmpsb
jl
mov
aas
jmp
std
outsl
setb
push
cli
das
xchg
aam
dec
mov
ja
dec
xor
sbb
ja
and
or
dec
and
cld
stos
and
cmp
stos
sub
roll
hlt
repz
out
imul
popa
in
std
mov
xchg
imul
add
gs
stos
das
imul
lds
add
sub
lret
fdivl
add
pop
jg
cmp
mov
popf
ss
mov
fstpl
mov
stos
push
mov
xor
push
stc
sti
jb
pusha
psraw
ja
int
stos
testb
mov
sbb
jge
fwait
sub
push
std
pusha
imul
xchg
andl
stos
imul
aam
stos
dec
add
xor
sub
cs
movsl
fcomps
das
pop
je
mov
imul
xchg
sub
idivb
data16
push
dec
jno
daa
inc
ds
adc
pop
or
in
daa
out
push
lods
cli
inc
sahf
xor
lock
mov
sub
adc
cmp
aas
jle
dec
test
jmp
mov
outsl
dec
and
pop
in
stos
je
movsb
lods
lret
jmp
xchg
pushf
inc
pushf
adc
mov
cmp
stos
cmpsb
xchg
fnstcw
das
data16
cmp
pop
mov
imul
aaa
mov
mov
xor
std
out
sub
jecxz
inc
pop
or
sub
popf
xor
push
adc
jns
adc
lcall
mov
mov
mov
adc
xlat
mov
stos
stc
adc
pusha
fwait
xor
xchg
and
mov
jl
mov
fcmovnbe
mov
adc
push
push
xchg
lock
ss
push
mov
sub
cs
pop
bound
das
sub
and
or
daa
mov
fstps
jecxz
mov
jg
xlat
lea
stos
push
xchg
inc
xchg
mov
scas
in
adc
rolb
cmpsl
js
enter
mov
adc
pop
es
xor
out
shl
fwait
stos
sbb
sbb
fnstcw
add
ret
in
mov
pop
sub
ljmp
ja
xor
cs
xor
stc
cmp
mov
jle
shll
frstor
in
addb
cltd
icebp
sti
outsl
jae
sub
mov
mov
rcrb
add
jecxz
pop
jg
bnd
xlat
push
pop
repnz
dec
pusha
jg
jo
mov
vpackssdw
test
mov
mov
adc
jnp
hlt
push
xlat
stos
pusha
dec
ret
sub
xchg
push
mov
scas
imul
push
into
mov
adc
sbb
out
daa
dec
push
cmp
or
or
stc
into
loopne
dec
mov
cmpsl
addb
leave
testl
outsl
je
xchg
mov
sub
in
aas
mov
sub
in
hlt
add
bound
repz
or
data16
cli
cmp
and
cmp
push
adc
mov
aaa
pop
jno
sub
jp
repz
pop
inc
or
das
stos
xchg
cmpsb
ja
push
gs
pop
mov
data16
rorl
dec
cmc
movsb
pop
inc
lods
xchg
inc
mov
xchg
add
repnz
or
jg
je
sbb
sarb
ret
pop
bound
fiaddl
inc
inc
or
push
fs
mov
adc
mov
sub
mov
in
aad
in
pop
inc
xchg
out
movl
insb
out
sub
jl
insb
imul
insb
xchg
push
bound
xlat
int3
lret
xlat
sbb
into
jno
mov
pop
popf
pop
repz
cwtl
fiaddl
jnp
add
nop
out
jo
pop
mov
add
add
mov
test
jnp
popa
push
add
fwait
mov
and
push
testl
and
lea
add
or
das
imul
stc
frstor
cmp
mov
out
sbb
outsl
cmpsb
cli
lds
dec
loope
mov
mov
pmulhuw
outsb
or
sbb
call
jl
push
dec
call
cmpsb
pop
mov
adc
add
sarl
jmp
mov
sti
xchg
les
and
decl
loop
enter
xor
push
cmpb
testl
push
mov
icebp
repnz
push
rol
jp
inc
mov
lahf
jmp
ret
sbb
mov
dec
jbe
dec
imul
into
mov
je
data16
enter
pxor
outsl
jo
jae
stc
fsubr
call
sub
popa
int3
ja
push
add
arpl
cs
dec
jg
mov
jne
jo
call
daa
push
xor
pop
je
cmp
sti
and
rcrl
repnz
in
jns
push
jecxz
fidivrs
mov
add
int
adcl
int3
icebp
xchg
or
mov
mov
cmp
push
test
mov
mov
mov
pop
push
or
xchg
ret
mov
sti
fsubs
cwtl
jbe
sub
lods
aam
jg
ret
dec
sub
sahf
cmp
pop
sub
lods
out
push
cwtl
mov
cmpsl
xor
iret
lods
pusha
mov
xchg
fisttpll
sbb
daa
add
mov
cmp
mov
sbb
cmp
test
test
pop
jno
mov
add
dec
arpl
lea
fisubrl
rolb
or
sub
jp
mov
jnp
orl
aam
clc
push
xchg
test
push
or
into
fdivr
cmp
jne
cmp
out
into
push
hlt
pop
sbb
or
fld1
sbb
pusha
mov
sub
sub
ret
shlb
xchg
jge
inc
jl
adc
jmp
mov
insl
ret
outsl
test
dec
sub
pop
rorb
movl
cmpsb
imul
dec
imulb
xchg
push
sti
fnstsw
push
or
inc
imull
mov
arpl
dec
xor
pop
sub
lods
add
jl
inc
sarl
int3
inc
push
icebp
loopne
std
xor
and
push
xlat
sbb
xchg
pop
mov
push
notl
xor
in
fadds
repnz
into
xchg
xor
sarb
pushf
stos
lea
hlt
push
jle
cli
mov
inc
push
pop
xchg
cmp
add
shr
add
daa
fs
rcr
jge
push
jge
push
mov
mov
push
xor
mov
mov
fmuls
mov
cmp
sahf
sbb
add
fcmovb
test
push
push
pop
dec
mov
push
add
and
jnp
pop
std
bound
int3
jne
and
filds
lods
out
test
xor
pop
add
push
jb
sub
mov
out
test
int
mov
jns
in
dec
fs
and
dec
ret
mov
aam
lock
xor
cmp
mov
pop
out
push
xor
shl
inc
pop
mov
sub
stos
pop
sub
xor
ret
loop
pop
in
ret
ret
das
aaa
pop
pop
dec
out
pop
je
pushf
push
cld
clc
push
mov
push
xchg
push
pop
iret
mov
dec
mov
cltd
adc
dec
inc
hlt
movsl
sub
sub
mov
jmp
pop
sahf
out
bound
push
call
cmc
in
jg
push
adc
xor
loop
mov
jmp
or
add
in
jecxz
push
mov
mov
mov
aas
xchg
push
imul
mov
mov
sub
pusha
push
cmp
lret
or
out
jge
mov
dec
jno
push
pop
lret
sbb
cmpl
ja
xor
dec
mov
popf
jne
sarl
push
fbstp
mov
out
sub
int3
out
nop
push
arpl
lds
adc
dec
out
jno
adc
pop
rep
inc
ficoml
insb
dec
fldcw
dec
call
hlt
mov
repnz
fs
pop
add
sbb
xchg
cmp
cmp
push
mov
xor
pop
cmp
jae
sub
das
or
rclb
out
dec
xchg
jp
and
scas
arpl
cwtl
jae
lock
roll
mov
sbb
inc
ds
sbb
cmp
push
push
xor
mov
les
pop
pop
xchg
pop
adc
mov
xchg
fiadds
subl
in
shl
adc
mov
xchg
fdivs
mov
pop
inc
jl
pop
lods
and
dec
outsb
hlt
mov
movsb
das
pop
cld
jnp
xor
jne
pop
jb
xor
sub
pop
pop
pop
mov
shll
sti
sbb
cwtl
loop
ljmp
fwait
xchg
ficoms
add
lods
in
aas
imul
xchg
lock
or
arpl
add
imul
xlat
mov
add
mov
mov
and
out
insb
faddp
divl
ffreep
sbb
xor
push
fldcw
xor
inc
adc
repnz
aaa
pop
gs
mov
pop
int3
outsb
mov
xor
movsl
inc
arpl
ficomps
mov
into
loopne
xchg
or
cli
stc
lods
and
ret
scas
add
dec
xlat
mov
imul
cmp
cmp
mov
aaa
mov
sub
pusha
cmpsl
pop
sub
pushf
lea
mov
push
mov
xor
mov
pop
mov
pop
inc
mov
sbb
mov
movsl
xor
fsubs
pop
test
cmc
popa
fwait
mov
dec
xor
xchg
jg
idivb
pop
sbbl
out
push
mov
hlt
repnz
mov
or
adc
and
aas
sbb
lds
fwait
pop
sbb
push
ss
repz
sbb
or
ljmp
push
fwait
sbb
adc
idivl
mov
mov
lods
pushf
xchg
mov
cmpsl
into
sti
xor
push
add
and
adc
or
pop
adc
scas
mov
not
mov
mov
inc
mov
cmp
jmp
push
scas
mov
pop
out
js
push
mov
ljmp
cld
out
test
mov
cmpsl
outsb
xchg
cli
push
cmpl
fs
popa
jmp
push
inc
loop
nop
aam
addr16
jae
inc
popa
es
xor
push
je
inc
jo
jae
push
adcb
mov
ss
add
adc
pcmpgtd
jg
nop
arpl
sub
mov
in
lods
insb
mov
outsl
repz
mov
or
sbb
testb
pop
adc
jecxz
mov
adc
and
ja
decl
pop
cld
lds
or
mov
iret
cltd
loopne
mov
into
pop
mov
aad
cmp
lods
xlat
imul
sub
dec
inc
popf
outsb
jne
mov
inc
data16
lods
inc
int3
in
ret
and
lock
out
in
outsb
scas
mov
mov
mov
sahf
add
jl
pop
inc
adc
rcll
pop
fptan
mov
sub
pop
aaa
not
stc
xor
jbe
add
adc
jb
or
mov
mov
test
andb
or
outsb
jae
std
ja
push
push
inc
data16
imul
jae
test
mov
shl
push
jne,pn
jp
inc
jmp
xor
inc
add
and
ret
xchg
shll
aam
in
hlt
mov
inc
adc
and
xor
inc
add
and
ret
xchg
shll
aam
in
hlt
mov
inc
adc
and
xor
inc
add
and
ret
xchg
shll
aam
in
hlt
mov
inc
adc
and
xor
inc
add
and
ret
xchg
jns
jecxz
test
fmull
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
mov
aaa
fildl
jmp
sti
fucom
push
hlt
and
dec
mov
xchg
jnp
or
sahf
xlat
sub
cmp
lret
aaa
fildl
jmp
sti
mov
inc
stos
push
mov
out
xchg
jnp
or
sbb
imul
fildl
jmp
sti
mov
inc
stos
push
mov
out
bnd
dec
sahf
je
pop
mov
test
inc
stos
in
dec
push
js
jno
mov
mov
jmp
arpl
jb
mov
add
or
int
and
shlb
sbb
sbb
test
xchg
ss
or
xchg
arpl
std
dec
int3
jmp
push
cmpsl
mov
movsb
shrl
aaa
fildl
mov
fidivs
pop
daa
daa
sti
sti
mov
cmpsl
and
inc
mov
jno
xchg
in
aam
mov
sub
and
outsb
add
mov
inc
mov
ret
xchg
xchg
mov
inc
aam
mov
pop
aaa
and
lea
push
mov
ds
pop
bnd
jp
push
neg
aas
cmp
aaa
fildl
jmp
sti
mov
inc
stos
push
mov
xchg
jnp
or
sbb
sub
push
push
movsb
jae
imul
fwait
add
xor
iret
cs
cmp
stos
sub
fnstenv
pop
mov
ret
adc
inc
fsubrl
mov
decl
repnz
push
enter
sbb
mov
inc
stos
push
mov
xchg
jnp
or
sbb
sub
cmp
lret
aaa
fildl
jmp
sti
mov
inc
stos
push
mov
xchg
jnp
or
sbb
sub
cmp
lret
xor
adc
push
jno
and
sbbb
inc
std
jl
lret
jl
mov
xchg
cmpb
sahf
or
cmp
ja
pushf
push
xchg
lods
cmp
push
lret
mov
lea
fucomp
sub
pop
sarb
stos
je
aam
pop
mov
xor
mov
dec
pushf
lds
xchg
vrsqrtps
jbe
stos
je
sub
push
cmpb
lods
rcr
add
fdivrl
andb
pusha
xchg
pop
jno
loope
bound
push
es
les
sbb
jmp
inc
xchg
jo
out
loope
mov
in
daa
lock
xchg
sbb
cltd
ret
je
fwait
push
js
sub
xchg
mov
pop
ds
inc
ret
push
xor
call
pop
xchg
pop
out
les
and
cmp
testl
enter
and
stos
popf
jne
xchg
jno
div
sbb
jp
xor
push
out
faddl
cmc
loop
or
fisubl
jecxz
jae
test
test
inc
jp
clc
add
add
clc
dec
push
adc
cmpsl
sbb
sbb
jb
fwait
daa
ss
push
jnp
bound
lock
cwtl
out
push
ds
push
insl
cmp
jecxz
xchg
arpl
movsl
scas
out
sbb
xlat
into
stc
dec
push
out
lret
dec
lret
mov
push
jne
xor
mov
repnz
mov
popa
jb
frstor
inc
and
inc
andb
stos
iret
xorl
inc
sarb
mov
mov
xchg
test
dec
mov
popf
pop
push
in
or
sub
pushf
pop
andl
add
outsl
mov
cs
scas
cmp
jmp
jp
or
in
xchg
aaa
push
push
pop
lds
sub
jns
dec
sub
rorl
int3
fsubrs
mov
pop
xchg
mov
out
rcr
ss
push
hlt
fsubrs
sbb
and
cmpsl
sbb
or
xchg
mov
cld
push
mov
in
int
and
jae
push
and
lds
popa
int
mov
sbb
pusha
or
or
aas
push
jns
sbb
pop
hlt
iret
mov
adc
repnz
dec
ja
cwtl
cmpsl
movsl
push
and
stos
push
inc
dec
adc
mov
lret
dec
or
call
lahf
in
shrl
ss
ja
test
inc
imul
mov
inc
test
fbld
jmp
jecxz
pop
sub
push
icebp
and
mov
cmpsl
xchg
lcall
daa
mov
jle
popa
xor
jbe
repz
or
push
aas
ret
movsb
mov
lret
push
xor
adc
ja
gs
aad
sbb
fsubrs
aaa
ds
pop
or
mov
stos
sbb
or
decl
into
jp
add
pop
adc
or
arpl
inc
mov
cmp
in
xchg
xchg
sbb
and
jb
xlat
mov
js
pop
mov
clc
bound
insl
call
in
push
cmp
mov
cwtl
add
call
push
sbb
dec
mov
sbb
push
in
dec
aas
push
pop
xchg
hlt
icebp
bound
repnz
jae
cmpsl
mov
jnp
mov
or
jge
ljmp
jg
ljmp
stos
mov
out
scas
ds
call
imul
cmc
aam
nop
jge
and
aam
jnp
cmpsl
adcl
das
aad
or
cmp
mov
call
insb
inc
add
seta
inc
jo
dec
insl
out
mov
fsub
jmp
enter
and
mov
cmp
and
lret
cli
sahf
movsb
scas
pusha
inc
fistps
call
in
sbb
jmp
out
mov
xor
and
or
out
shll
stos
jge
lcall
mov
jl
jns
xchg
dec
shlb
stos
iret
mov
popa
adc
jp
adc
jae,pt
sub
out
mov
rol
xchg
ss
xchg
sti
out
mov
std
test
sahf
pop
jnp
jo
data16
xor
lcall
lret
scas
lcall
sbb
xor
mov
aaa
mov
pop
adc
cmp
push
push
add
out
lea
push
jo
xchg
adc
in
mov
enter
es
mov
dec
pushl
addr16
push
inc
int
push
out
movsl
loopne
je
ljmp
jo
sti
ss
ljmp
aaa
pop
jge
xchg
outsb
pop
cmp
in
cmc
push
pop
mov
pop
orb
fs
loop
add
push
roll
ficomps
nop
jle
lcall
push
in
mov
sbb
jne
mov
pop
into
xor
seto
shr
jo
pusha
loop
lock
xchg
ljmp
aam
dec
sub
mov
aaa
fstpt
sbb
insb
xchg
stos
in
push
fstpt
aas
sbb
sub
mov
pop
adc
sbb
push
pop
mov
iret
fs
lods
mov
pop
pop
mov
pop
jl
fisttpl
icebp
popa
xor
lahf
subb
pop
push
inc
sub
or
insb
ljmp
jns
cmpsl
push
push
jl
pushf
and
cmpsl
vmovaps
xlat
out
xchg
xor
xchg
xor
cmp
mov
orb
cmp
xor
test
leave
insb
mov
add
ljmp
push
dec
dec
jecxz
mov
push
outsl
arpl
fidivl
push
outsl
xchg
push
and
rorl
outsl
loop
movsl
into
xchg
or
mov
fisttps
xlat
push
das
es
push
aaa
mov
mov
xor
add
or
pop
pop
xor
outsl
add
push
insb
movsl
xchg
lret
mov
es
mov
adc
mov
and
arpl
jle
icebp
and
aad
jnp
arpl
js
push
aas
xchg
push
xchg
adc
xor
jb
mov
inc
jnp
push
xchg
sub
lods
bound
or
xchg
push
lcall
sbb
xor
cs
mov
ss
mov
aam
xor
sub
loopne
jle
pop
out
shrl
mov
jne
sbb
insl
sbb
inc
movsl
loopne
or
pop
push
jge
pop
fldcw
xchg
sbb
in
dec
movsl
ret
scas
push
dec
cmc
add
js
dec
cltd
pop
add
mov
jl
fstl
pop
add
jmp
cmc
mov
and
sbb
movsb
sbb
mov
aad
or
jmp
repnz
lods
rolb
cltd
xchg
cmp
clc
pop
dec
pop
rorb
adc
xchg
push
sub
aam
and
mov
cwtl
jnp
push
loop
jge
dec
xchg
rclb
jmp
int
pop
dec
in
scas
xorb
in
shll
daa
arpl
mov
lock
cmp
repz
xchg
jmp
test
movsl
call
addr16
jmp
lock
shlb
add
cwtl
mov
int
insl
loopne
js
test
dec
and
ja
lahf
dec
pusha
fisubl
or
xlat
sub
ljmp
aad
mov
or
xor
movsl
xchg
fdivl
dec
mov
xchg
jle
adc
mov
adc
pop
sarb
fst
dec
inc
xor
lret
jecxz
push
lock
inc
sbb
int3
mov
divl
loopne
sbb
fcmovnu
outsb
imul
and
sub
dec
int3
mov
aam
or
js
ret
adc
cltd
xchg
mov
cmc
add
mov
and
jns
fists
pop
xor
cltd
cmp
cs
xor
arpl
jecxz
outsl
jg
das
add
mov
out
xchg
mov
fdivp
pop
cltd
jb
xchg
mov
mov
push
into
adc
cmp
sub
repz
cwtl
cli
inc
out
out
xlat
inc
adc
iret
adc
inc
lret
sbb
das
gs
pop
in
sub
xor
lret
iret
in
daa
xlat
mov
pop
mov
rorb
dec
mov
mov
subb
rorb
testl
ljmp
push
vpcomuw
push
fcomps
daa
test
jmp
ja
cld
out
enter
and
and
or
ss
movsb
dec
push
sarb
push
xchg
popf
pop
out
push
jle
mov
mov
add
popa
cmpsl
fiaddl
aam
pop
dec
adc
popf
psubsb
and
lock
sbb
sarb
jle
rorl
fwait
mov
and
mov
stc
cmp
push
jl
inc
add
adc
add
out
imul
and
sbb
inc
shl
cld
cmp
cmp
in
lds
into
inc
adc
stos
das
sbb
fistpll
jbe
incl
xchg
enter
call
dec
cmp
mov
add
stos
xchg
xor
iret
mov
inc
pop
loop
sbb
lods
inc
and
xchg
xor
cmpsl
jo
jne
in
push
call
into
push
cmpsl
imul
xor
ret
adc
xchg
test
test
push
jl
shrl
fnstsw
pop
add
iret
cltd
fs
fistpl
call
or
jg
sbb
mov
mov
mov
jns
sbbb
dec
data16
js
loop
xchg
push
dec
mov
in
adc
cli
fs
mov
shrb
data16
inc
out
xor
jbe
mov
pop
mov
mov
pushf
mov
lret
int3
aaa
or
vfnmsub213ps
loope
ret
repnz
cmpsl
stos
inc
push
shr
mov
stos
and
popl
hlt
rcr
jbe
dec
test
mov
inc
insb
jne
inc
dec
in
push
aaa
lds
jb
std
sbb
jbe
out
inc
aas
clc
mov
subl
dec
add
jo
pop
mov
cmpsl
icebp
jne
or
in
testb
movsb
cs
ja
mov
xor
clc
loopne
inc
xor
insb
imul
shrb
sub
push
sbb
push
test
inc
shll
loopne
inc
out
pop
fmuls
out
shll
lret
jle
out
mov
cmp
pop
fucomi
mov
and
ret
mov
xchg
fcom
outsb
push
jb
sub
scas
loope
lds
jns
rclb
dec
test
jg
cli
adc
arpl
push
std
testl
repnz
pop
jne
mov
and
inc
out
or
jno
xor
mov
stos
out
insb
mov
pop
in
out
xlat
popf
jl
adc
xor
out
fs
sub
lcall
xlat
pop
test
mov
mov
inc
dec
fldl
cmp
adc
lea
push
out
pop
and
lods
push
mov
push
push
adc
std
jnp
sub
jg
mov
out
jmp
lret
cmp
inc
cmc
fdivr
loopne
jg
test
test
sahf
sub
adc
sub
repnz
cs
cld
sbb
rep
mov
das
popa
out
out
std
cmc
or
mov
test
xchg
outsb
addb
jno
idivl
cmp
shlb
mov
and
popa
xchg
insl
fcomps
inc
shrl
mov
jns
nop
or
cmp
mov
mov
or
add
icebp
jbe
hlt
sub
dec
add
dec
stc
std
inc
ja
lahf
jg
into
mov
data16
pop
cmp
negl
jb
outsb
mov
pop
mov
push
pop
pop
js
daa
sbbb
mov
push
cmc
aas
mov
pop
mov
icebp
cmp
cmpsb
fcmovnu
cmpsb
arpl
mov
int3
roll
inc
add
xchg
les
inc
fwait
push
pushf
sub
mov
int
cmc
mov
leave
je
ss
pop
ja
pop
insl
inc
imul
xchg
test
xchg
dec
cld
lea
mov
faddl
mov
xchg
ss
pop
ja
lods
dec
inc
dec
lahf
pop
out
mov
pop
leave
rcrl
jb
mov
scas
mov
pop
enter
repnz
push
rcrb
mov
fistpll
add
cltd
cltd
outsb
cmp
and
dec
or
mov
cmpsl
lods
mov
ljmp
mov
cmc
daa
jp
mov
mov
xchg
int3
imul
mov
and
mov
mov
rcll
data16
mov
or
stos
pusha
add
xchg
xchg
in
inc
add
adcb
fs
sub
sar
fidivrs
cltd
psubusb
xchg
fstl
int3
mov
dec
repnz
test
arpl
ss
insb
and
mov
mov
or
leave
stos
inc
jo
sbb
subl
gs
pop
in
jmp
ret
push
jo
decb
rolb
sbb
push
mov
inc
or
loopne
jno
jl
arpl
testb
roll
fisubrl
xchg
inc
ficoml
imul
inc
sti
in
leave
in
insl
mov
pushf
aas
push
loope
jbe
adc
mov
push
in
pop
cwtl
cld
sbbl
xlat
mov
out
lea
out
inc
call
adc
scas
inc
imul
ja
dec
ljmp
adc
imul
movsb
jo
sbb
mov
xchg
movsl
push
fwait
iret
jo
icebp
and
out
push
sub
rclb
gs
orb
sub
ret
pop
mov
dec
shll
jecxz
jo
dec
mov
pop
dec
dec
cmp
mov
out
lret
lea
les
xchg
roll
dec
outsl
popf
fadds
movsb
ljmp
ds
hlt
mov
push
adc
aas
lahf
sub
imul
push
mov
mov
data16
cmc
cmp
sbb
cmovle
mov
xor
mov
cmpsb
js
aaa
sub
loopne
movsl
ss
and
mov
aas
adc
sub
call
xlat
pop
mov
push
pop
mov
call
or
jl
repz
mov
sbb
dec
stos
push
arpl
xor
pop
sahf
in
inc
push
int
or
pop
ja
cmp
xchg
ss
stos
xchg
sbb
aam
ficoms
frstor
pop
cwtl
lea
dec
sbb
nop
adc
push
jnp
sub
or
stc
add
cs
aaa
xlat
mov
adc
mov
dec
lahf
mov
ret
lds
sahf
mov
addl
ficoml
cmp
insl
imul
jnp
fistpll
test
lods
ja
lds
xor
fisubl
mov
mov
and
nop
add
mov
rcrl
fstps
loope
mov
or
aam
gs
sahf
loope
in
mov
aaa
adc
adcb
or
cmp
mov
fisttpll
and
sahf
popf
sub
test
pop
out
jp
sbbb
xchg
clc
mov
dec
push
mov
cmpsb
in
je
ret
lds
imul
jmp
lock
xor
orb
orb
fs
xlat
lret
cwtl
fisubs
sbb
aaa
roll
cmc
ror
sub
std
fistpl
lods
and
int3
xor
ss
pop
andl
out
cmp
or
dec
sub
jae
mov
push
shll
push
movsl
mov
cltd
pop
stos
adc
push
push
adc
sub
add
in
pop
subl
xchg
sbb
xchg
dec
in
add
pop
add
fwait
lods
adc
mov
jae
mov
in
fdiv
lcall
stos
mov
cmc
fstpt
sub
xchg
bts
fldenv
or
dec
daa
test
insb
pushf
or
xchg
ret
lock
stos
cmp
push
inc
mov
sub
jecxz
adc
sbb
push
xchg
ret
xorl
mov
pop
ja
dec
xchg
jecxz
aaa
fsts
pop
dec
clc
adc
into
inc
mov
les
dec
and
xor
xor
out
add
fsts
punpckhwd
jnp
add
mov
lock
inc
in
mov
dec
jmp
sbb
xlat
pop
adc
int
addr16
lods
mov
xchg
xchg
xor
mov
pop
ljmp
pop
in
lods
and
mov
aas
sbb
test
sbb
repz
mov
inc
jb
fs
mov
cmpsl
int
popa
xchg
les
ss
inc
shrl
dec
xchg
pop
sub
push
data16
sbb
outsl
rcll
adc
std
inc
dec
repnz
clc
sahf
mov
mov
ja
cmp
xchg
jl
scas
sbb
sbb
dec
xlat
call
cmp
jae
or
or
std
icebp
in
out
jb
popf
cmp
mov
pop
adc
push
out
push
inc
push
sub
cli
xlat
popa
inc
cmove
pop
lahf
sbb
ss
out
imul
mov
ljmp
cmp
push
and
xchg
inc
lret
test
add
icebp
leave
fldenv
jl
in
xchg
int3
mov
divl
xchg
mov
push
sbb
fwait
xacquire
xchg
xchg
arpl
popf
pop
mov
inc
jle
mov
rcrb
xor
cmc
mov
jb
insl
leave
cmp
mov
insl
dec
add
fwait
jno
mov
shlb
mov
sbb
out
sti
es
xor
sub
pop
sub
push
pop
xlat
add
les
adc
jmp
lods
jmp
bound
sub
cwtl
xor
nop
cwtl
loopne
addr16
mov
mov
jmp
xchg
xchg
pusha
std
and
mul
bound
xchg
xorl
inc
fistps
jecxz
pminsw
js
outsb
adc
mov
mov
outsb
mov
adc
movsl
adcl
dec
or
int3
test
pop
les
sub
dec
jmp
push
shl
jnp
inc
rclb
dec
mov
mov
clc
lds
sbbl
stos
dec
mov
and
jo
push
push
cld
dec
sbb
inc
xchg
out
jnp
ret
js
out
int
out
cmp
arpl
rcrb
and
inc
push
inc
in
js
roll
push
inc
ds
mov
aad
cmp
push
arpl
cmp
xor
lods
mov
mov
and
mov
or
cs
add
xor
inc
mov
add
xlat
mov
sub
aaa
cld
sub
xor
scas
fisttpl
add
fidivs
push
mov
in
mov
jg
and
ds
je
mov
lods
xchg
push
fstpl
add
xor
xchg
stos
divb
pop
cmc
into
pop
movsl
or
sub
outsb
pop
jge
pop
mull
jo
inc
sbb
add
dec
cmp
imulb
rorl
popa
nop
test
movsl
add
std
mov
xor
xchg
fmul
inc
in
les
mov
mov
xlat
iret
push
and
add
push
lretw
sub
test
bound
cmp
push
std
inc
inc
mov
movsl
sub
add
pop
ret
inc
test
mov
add
mov
fldt
rorb
dec
cltd
fs
mov
in
test
pop
pop
mov
pop
sub
in
inc
inc
popa
or
or
cmp
sub
test
jo
pop
aam
jo
jecxz
aam
clc
fcomi
test
xchg
or
sar
or
push
pop
je
int3
mov
popa
iret
add
lret
mov
jbe
xlat
pop
movsb
mov
add
mov
sub
imul
xor
je
roll
shll
ss
xor
insb
add
jmp
ja
ja
and
cmp
fwait
push
dec
popf
push
xor
push
add
in
jecxz
cmpsl
adc
std
lods
or
pop
lods
in
pop
cli
push
imul
out
inc
mov
hlt
xchg
cmp
xorl
les
incl
scas
adc
gs
push
xchg
jp
in
loope
dec
test
adc
pop
adc
gs
inc
cmp
jmp
cmp
jmp
dec
cli
popf
jbe
sub
mov
and
loop
ret
lea
aam
stos
xchg
and
out
fimull
or
imul
sub
loope
fistl
mov
sub
cmp
sahf
push
adc
or
roll
vmovapd
mov
data16
test
mov
out
sub
mov
aaa
add
sub
jo
mov
push
adc
mov
mov
jg
and
inc
mov
or
inc
jbe
jecxz
or
mov
mov
sbb
cmc
xchg
pusha
xchg
negb
mov
jo
fwait
iret
add
pop
lock
mov
sbb
movswl
mov
fnsave
stc
in
mov
test
leave
mov
push
jmp
sti
mov
inc
stos
push
mov
xchg
jnp
or
sbb
sub
cmp
lret
aaa
fildl
jmp
sti
mov
inc
stos
push
mov
xchg
jnp
or
sbb
sub
cmp
lret
aaa
pop
pop
imul
mov
inc
stos
push
mov
xchg
jnp
or
sbb
sub
cmp
lret
fildl
jmp
sti
mov
inc
stos
push
mov
sub
cmpl
aam
les
in
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
es
ss
cmpb
xor
rclb
jb
inc
out
test
mov
out
es
ss
repnz
ret
jbe
xchg
xchg
arpl
jb
inc
out
negb
push
inc
push
adc
dec
ss
inc
xchg
push
fsubl
jbe
mov
ja
or
test
bound
xor
sbb
xchg
gs
daa
shll
insl
push
aas
dec
push
dec
push
add
pop
leave
int3
mov
pop
jle
cmp
xchg
cs
inc
out
or
shl
test
adc
divl
push
jb
aaa
in
sbb
jle
ficoml
addr16
jle
sbb
shlb
and
in
dec
popf
xchg
jb
inc
sbb
pop
fwait
mov
lret
push
inc
jp
dec
cltd
pop
and
ret
mov
add
test
push
jb
mov
subl
andl
inc
sbb
lods
out
adc
xchg
cmp
and
push
idiv
push
in
andb
ss
inc
mov
data16
in
test
je
and
jo
push
mov
imul
mulb
jo
sub
and
popa
jmp
ja
adc
aaa
xchg
out
inc
xlat
pop
lock
mov
xchg
js
or
cli
add
push
sbb
adc
jecxz
roll
repnz
ret
jbe
xchg
xchg
add
jb
inc
out
mulb
es
ss
repnz
ret
jbe
xchg
xchg
add
jb
inc
out
mulb
aam
out
sbbl
mov
push
inc
cmp
push
dec
sub
imul
dec
and
icebp
adc
jg
and
shlb
insb
dec
mov
and
mov
das
mov
stc
mov
stos
test
or
les
movsl
mov
mov
cmp
add
add
jmp
adc
dec
into
loop
dec
popf
into
fucomi
mov
mov
pop
ljmp
adc
sub
fs
jmp
xorb
jg
dec
mov
pusha
push
les
inc
cmp
mov
dec
cltd
dec
rcl
cmp
mov
adc
pop
and
add
mov
ljmp
incb
into
xchg
sbb
arpl
xchg
and
out
lret
enter
jmp
pop
add
aas
or
add
push
sbb
sub
nop
pop
nop
cli
jle
inc
negb
fcoml
movsl
mov
mov
aam
mov
mov
jge
inc
mov
nop
pop
jge
cmpsl
xlat
xchg
lret
out
les
lds
xlat
scas
addr16
pop
jecxz
repnz
insb
divb
pop
aas
sahf
outsl
rcrb
movsl
movsb
nop
lcall
inc
lods
cwtl
or
popa
nop
mov
mov
inc
mov
fisubrl
cmp
leave
add
cwtl
jno
fs
cmp
xor
dec
inc
aam
jo
stos
shll
stos
std
inc
push
and
arpl
pop
nop
iret
mov
mov
dec
jl
lds
sbb
push
and
lcall
in
jno
sub
fiadds
mov
std
in
cmc
cmp
jno
cmp
scas
pop
xor
dec
scas
dec
xchg
clts
nop
add
dec
shlb
shlb
lcall
in
adc
push
les
out
mov
stos
and
and
ds
orb
xor
sbb
addr16
pushf
mov
and
lret
mov
push
cmp
shll
fisubrs
stos
jnp
push
aaa
xor
add
movsl
xchg
inc
pop
push
stos
inc
movsl
out
or
and
sbb
cmp
lret
push
dec
mov
mov
into
repz
outsb
mov
mov
inc
push
mov
pop
lret
jns
in
xor
cmp
and
leave
sbb
in
andb
sub
mov
push
arpl
dec
xor
pushf
out
aam
outsb
jmp
fcmovne
jge
jnp
rcll
std
sbb
fcoms
jne
jmp
dec
aad
push
jae
xor
xor
cltd
mov
in
fbld
cmp
out
cmp
aas
outsb
and
dec
inc
or
stc
aas
in
stos
pop
ss
and
xchg
cwtl
dec
loop
dec
lretw
sub
movsl
mov
pop
ja
and
ret
jmp
lcall
cmp
outsb
mov
imul
scas
add
loop
stc
jbe
mov
dec
sbb
push
mov
lcall
jp
push
movsb
ficomps
jnp
mulb
inc
sti
xchg
jbe
je
idivb
mov
cli
out
out
cmp
movsb
push
daa
arpl
in
cli
fstpl
push
inc
rol
pop
fistpl
mov
std
jl
aam
jmp
jno
push
bnd
insl
adc
add
call
test
xchg
daa
lods
stc
loopne
dec
sbb
mov
mov
pusha
repnz
fidivl
mov
loope
movsl
cmp
loop
loopne
push
mov
test
mov
loop
cmpsl
mov
push
je
jecxz
pop
mov
int
leave
cmc
and
mull
sub
jl
sbb
roll
dec
clc
int3
pop
mov
lret
add
stos
xlat
or
mov
popf
pop
push
push
mov
push
int3
add
stos
mov
lret
cmp
adc
dec
pop
test
es
ss
xorb
xchg
or
inc
push
push
out
aad
out
push
outsb
jo
bound
sbb
adc
adc
roll
enter
jns
cmp
mov
addb
push
pop
leave
mov
push
or
ljmp
adc
xchg
pop
aad
dec
loopne
inc
sub
xchg
push
int3
aas
in
jmp
lahf
pop
cmp
pop
inc
push
test
cs
fnsave
cmp
xchg
scas
push
mov
dec
mov
sbb
stos
mov
pop
shll
sbb
enter
xchg
out
mov
mov
mov
push
adc
cmp
std
outsl
insb
inc
pop
jo
or
pop
rcrb
movl
jo
xchg
inc
cwtl
call
mov
and
mov
xchg
js
imul
sub
jl
test
inc
pop
in
shrb
add
movsb
fst
sbb
push
lahf
dec
int3
adc
sbb
fsubrs
lock
fsubl
inc
popf
adc
icebp
sbb
and
cmp
fsubrs
inc
mov
fisubs
mov
push
xor
cli
ret
or
lahf
stc
outsb
das
and
vmovups
sarl
mov
mov
xchg
popf
notl
pop
mov
lahf
dec
pop
mul
or
ret
jns
add
mov
out
ret
mov
xchg
mov
imul
xchg
xor
test
jle
call
repnz
mov
xchg
inc
loope
dec
lods
pop
test
pop
test
shl
lds
or
pushf
add
sahf
mov
dec
leave
movl
sti
jns
sbb
test
enter
lock
sti
push
push
sbb
std
sbb
lods
loop
setne
add
notl
popf
das
cltd
shlb
popf
pop
cmpb
lock
mov
inc
repnz
mov
es
scas
lods
loopne
dec
arpl
stos
sti
push
cs
inc
pusha
scas
ljmp
xor
xchg
sar
loopne
lods
loopne
or
mov
sarl
cmc
sar
mov
test
sti
sub
aas
mov
pop
cmpsb
push
push
iret
inc
mov
pop
jl
rcrl
sbb
daa
sub
fwait
aas
in
inc
fisubl
push
pushf
mov
sub
adc
pop
add
addr16
mov
sahf
in
sbb
iret
push
inc
lret
mov
ljmp
and
dec
xor
pop
mov
jp
mov
hlt
cwtl
sub
lahf
aas
test
out
lahf
sbb
daa
add
cs
and
mov
arpl
xchg
mov
int3
jg
jo
scas
xchg
xlat
shrb
pop
pop
xor
out
int
testl
adc
sub
mov
add
movsl
xchg
xlat
ja
mov
jmp
dec
insb
sub
mov
mov
mov
mov
stos
movsb
push
daa
aas
fsub
xchg
add
fcomps
mov
es
fadds
xchg
aad
loopne
dec
icebp
inc
xchg
pusha
push
stos
ljmp
leave
clc
push
add
inc
aad
cltd
cli
in
xchg
or
outsb
pop
cs
cmpl
outsb
into
lcall
jbe
mov
pushf
pop
idivb
or
lret
rcrb
mov
in
jno
push
test
adc
push
icebp
pop
sbb
jp
sbb
xor
fsubs
pop
xchg
popa
int3
mov
mov
adc
push
add
sahf
aad
xchg
iret
das
jae
pop
in
mov
dec
dec
cmpsl
cmp
jae
pop
inc
clc
and
ret
mov
mov
pop
mov
cwtl
pop
ja
pop
push
out
adc
test
xchg
mov
aam
add
mov
scas
pusha
dec
add
ja
cmp
test
adc
test
sbb
std
aaa
sub
pusha
imul
cmc
fiaddl
mov
hlt
cmpsl
imul
andb
lods
aam
adc
fmull
xchg
xor
in
jnp
jmp
adc
mov
insb
mov
lret
xor
je
inc
jbe
mov
loopne
push
cmp
xchg
and
sbb
xor
sbb
cmpsl
repnz
test
adc
std
xchg
je
test
shrd
xor
push
test
jl
pop
pop
mov
cltd
incb
sahf
test
nop
es
jae
cmp
ljmp
dec
repz
and
mov
loop
ret
fnstenv
fs
test
mov
mov
push
jno
out
mov
or
cmp
test
std
sub
or
pop
push
clc
arpl
or
push
xor
sbb
stos
nop
aas
or
insl
mov
jmp
inc
and
xchg
pop
mov
mov
xchg
push
dec
inc
cmpsb
clc
xchg
adc
mov
inc
mov
jb
stos
sub
jno
jb
sar
aad
hlt
mov
mov
inc
add
inc
rcrb
bound
jge
xchg
leave
in
jecxz
stc
sbb
jge
cmpsb
mov
push
push
sarb
mov
dec
sub
push
mov
push
test
add
in
xchg
into
fcomip
test
dec
sbb
push
jbe
and
xor
xor
pop
sbb
push
rcrl
ror
loope
mov
mov
add
outsb
inc
mov
add
push
push
jmp
pop
fbld
and
clc
cmp
xorl
icebp
ss
jge
jmp
cmpsl
jno
pop
pop
icebp
and
push
cmp
test
lea
insl
jp
cmp
shlb
lods
add
popf
js
jbe
cld
cmp
cld
js
mov
ret
lahf
dec
data16
adc
mov
mov
inc
inc
cs
sub
insb
dec
cmc
popf
jbe
es
dec
add
adc
in
add
xlat
lcall
mov
addl
pop
arpl
xor
lods
sbb
dec
out
push
shlb
aaa
fcomps
aas
push
out
push
sub
adc
add
push
jl
shll
bnd
addr16
test
lock
popa
std
fists
mov
aas
test
in
pop
inc
sbb
dec
add
xor
movb
mov
outsb
dec
inc
xor
scas
push
cmp
sub
mov
pop
pop
adc
fbstp
mov
es
ja
lds
loopne
xchg
jmp
sbb
xor
loopne
mov
jmp
push
and
xor
push
arpl
out
sahf
clc
push
clc
push
xchg
int3
sbb
cmp
push
shll
push
cmpsl
das
inc
cwtl
adc
mov
mov
imul
and
or
lret
or
je
xchg
int3
stos
mov
aad
add
xchg
mov
sbb
dec
pop
mov
faddl
jns
cwtl
fcoms
loopne
dec
and
pop
lods
adc
or
stos
adc
xchg
loope
fisubs
dec
push
dec
fwait
inc
imul
loopne
lcall
les
xor
xor
jmp
xor
pop
pop
test
pushf
inc
es
push
dec
push
fs
es
jne
dec
aam
xorl
adc
add
cli
into
jne
lods
add
mov
fbstp
sti
rcll
and
dec
cmp
imul
test
ret
fidivrl
lret
nopl
inc
cmc
or
mov
out
mov
cli
loopne
insl
jns
mov
pop
push
insl
and
scas
stc
cmc
xchg
push
adc
ret
rorb
cmp
scas
push
insb
cmpl
or
call
ljmp
cld
das
adc
xchg
adc
inc
out
and
cmpl
mov
add
xchg
jp
xchg
leave
leave
imul
mov
cmp
aas
daa
ficoml
gs
pop
int3
sahf
movsl
shlb
in
dec
or
and
sbb
xor
mov
add
divb
mov
cli
push
ds
arpl
mov
enter
xor
mov
inc
mov
mov
adc
adc
stos
cmc
cli
mov
xchg
mov
inc
adc
sti
inc
mov
in
test
xor
dec
push
pop
loopne
cmc
fwait
ja
pop
idiv
arpl
pop
stc
cld
xchg
jg
jae
dec
jae
mov
loope
dec
mov
push
mov
push
repz
js
pop
cs
mov
inc
repnz
cmpsb
mov
push
jmp
data16
ret
aad
insb
jecxz
hlt
lret
std
dec
xlat
shr
sub
fisubrl
sbb
lea
mull
jmp
xor
int
loop
mov
xchg
dec
push
in
pop
inc
xor
xor
adc
stos
jnp
insb
addl
insl
movsl
roll
imul
pusha
jns
imul
adc
jp
popa
inc
adc
and
sub
mov
les
adc
inc
hlt
pushf
cmc
fsubl
jecxz
mov
cmpsl
fsub
cs
push
movsb
pop
leave
or
push
add
jns
andl
int
or
cmp
xchg
add
repz
in
xchg
js
iret
mov
mov
pop
fwait
cli
frstor
xchg
pop
insb
sti
orl
lahf
inc
cmpsl
cmp
lock
inc
bound
push
mov
jnp
aas
sahf
mov
sbb
hlt
mov
lods
nop
push
or
cmpsb
in
sub
mov
scas
xlat
pop
cmp
fisubs
bound
push
lahf
xchg
xchg
aam
inc
or
and
mov
inc
inc
movsl
mov
jle
mov
xor
and
mov
inc
movsb
dec
fisubrl
clc
xchg
sbb
cwtl
test
cwtl
lahf
sub
test
sub
jne
push
cmp
push
mov
pop
test
dec
jge
into
xor
xlat
jb
push
mov
sub
insb
cmpsl
or
gs
pushf
and
inc
push
push
sbb
lret
mov
sub
cmpsb
insb
xchg
jne
push
mov
iret
xor
fnstcw
mov
ss
sub
sub
sbb
sbb
in
divb
xor
mov
xor
test
inc
dec
cld
into
movntps
inc
stc
loopne
adc
movsl
addl
dec
pcmpgtb
int3
mov
cs
pop
mov
jp
hlt
jb
jecxz
lea
rorl
push
into
inc
pop
sti
scas
push
xchg
ret
jnp
mov
into
jo
es
adc
cwtl
pcmpgtd
lds
mov
mov
jne
pop
aaa
dec
std
sbb
mov
jle
or
xchg
pop
and
jns
es
or
push
push
rorl
jbe
mov
addr16
xor
cmp
adc
jmp
jp
inc
sub
mov
sub
mov
xlat
jle
mov
lds
das
movsl
adc
mov
ret
jmp
mov
les
add
repnz
xor
test
je
or
mov
cmp
sbb
into
jecxz
xchg
sub
inc
dec
inc
xor
push
out
dec
inc
push
xchg
xlat
jp
repnz
into
mov
jg
ljmp
je
push
lret
push
push
notb
mov
or
das
fucom
enter
pause
push
addl
and
fidivrl
stc
call
movsb
xor
push
inc
repz
inc
adc
out
mov
cli
mov
mov
std
test
data16
clc
add
sub
add
leave
xor
fwait
enter
popa
pop
and
fstps
dec
sub
idiv
dec
jo
das
adc
stos
push
js
sub
push
jb
por
jb
fbstp
cmp
mov
mov
rcrl
shrl
push
xchg
push
pop
xchg
xor
sub
xchg
or
mov
inc
xor
mov
jb
ret
enter
das
js
sbb
pop
dec
negb
sar
sahf
or
arpl
hlt
cmp
test
pop
inc
push
movsl
aas
push
cli
enter
sbb
jo
hlt
cmp
mov
push
cld
out
out
pushf
shrl
cmp
push
and
outsl
add
inc
cmp
add
imul
inc
xor
ds
lcall
sbb
sub
pop
or
and
pop
mov
inc
mov
popf
insb
add
ja
or
into
bound
jns
shll
cmp
fs
gs
mov
les
sahf
popf
mov
adcl
sbb
cmp
jbe
test
insl
pop
xor
stos
inc
rorb
xor
js
incb
xor
lock
jnp
mov
lods
out
jo
sub
dec
loope
jmp
mov
nop
mov
or
add
clc
lcall
bound
loopne
std
fsubs
pop
dec
nop
dec
fists
mov
inc
sbb
fistl
inc
stos
mov
xchg
movsl
pop
aas
in
bound
inc
push
jle
add
pop
cmp
out
mov
mov
xchg
stos
es
jb
test
scas
out
in
movsl
movsb
in
aad
push
jg
cmp
loope
sahf
into
loopne
fistps
xchg
mov
inc
cmp
mov
rclb
gs
mov
pop
push
int
js
sidtl
xchg
sbb
dec
arpl
sbb
repnz
mov
xor
icebp
xlat
jns
jg
in
sub
ljmp
outsb
rclb
dec
sbb
xchg
or
inc
shrb
mov
loope
out
ljmp
js
jno
or
loopne
pop
mov
fcom
dec
sbb
add
pop
leave
or
icebp
cli
call
scas
out
dec
dec
ss
xchg
or
aaa
xor
mov
jae
out
repnz
call
or
inc
cltd
int
je
lcall
loop
clc
rcll
js,pn
imul
nop
test
arpl
cmp
ss
mov
cmc
xchg
and
add
int
mov
scas
mov
dec
inc
jmp
ja
jno
xor
sbb
jg
mov
fwait
stos
scas
loop
inc
pushf
sbb
in
sub
jne
pop
adc
jb
jp
cli
mov
mov
fnstsw
sbbl
repnz
xchg
sub
int3
dec
sbb
jmp
das
xor
push
in
dec
mov
jae
sub
jp
mov
jmp
mov
xor
jg
xchg
adc
cwtl
loopne
xor
or
stos
sub
popa
and
dec
or
pop
and
repnz
mov
nop
xor
and
pop
pop
outsl
cltd
cmp
and
popf
or
clc
xchg
arpl
jbe
shlb
lock
xor
inc
inc
add
icebp
imul
test
push
cmp
pop
mov
sbb
and
pop
xor
repnz
test
push
fisttpll
int
push
jmp
or
out
or
dec
fisttpl
push
movsl
jb
dec
jo
and
enter
add
add
scas
es
test
shlb
inc
add
push
pop
aas
jns
aas
pop
inc
stos
cmpsl
jno
xor
add
and
clc
inc
bound
leave
mov
or
sub
mov
add
inc
sub
cmp
fimuls
xchg
call
sti
loop
fsts
adc
sbb
sub
xchg
jne
mov
loopne
pop
inc
and
add
cwtl
push
jbe
outsb
daa
ficoms
js
andb
mov
mov
andl
sub
and
shrl
push
arpl
pop
into
jb
loop
aam
xorb
call
in
mov
or
lods
adc
cmc
jbe
push
sahf
sbb
into
test
xor
dec
jo,pt
jno
rcrb
adc
cmovno
push
push
into
das
in
ss
adc
js
daa
inc
add
adc
into
fisubrs
xor
or
and
push
cld
andl
lods
aam
or
xchg
mov
pop
mov
in
in
and
xor
stc
mov
mov
adc
xor
es
lods
out
ss
xor
scas
ret
sbb
cmp
in
gs
and
xchg
pop
mov
mov
aas
test
jl
mov
push
cli
push
test
repnz
or
mov
int3
xor
push
cli
ret
gs
sbb
mov
cs
push
push
ljmp
jp
and
pusha
sbb
jp
sarb
xchg
adc
pushf
xor
sbb
sub
mov
adc
in
ds
jmp
out
lahf
or
adc
inc
mov
sahf
add
push
sub
or
mov
xor
add
test
cld
jo
imul
add
fdivs
mov
pusha
repz
or
xlat
fcmovnu
into
enter
jne
adc
xlat
sbb
mov
ss
xorb
xchg
ss
repnz
ret
jbe
xchg
xchg
add
jb
inc
out
mulb
es
ss
repnz
ret
jbe
xchg
xchg
add
jb
inc
out
mulb
es
aaa
jb
repnz
ret
jbe
xchg
xchg
repnz
adc
inc
out
divb
es
loop
loop
ret
mov
jns
cmp
cmpsb
adc
adc
sbb
clflush
mov
and
lahf
pop
subl
aas
lods
dec
fistps
outsb
out
jle
mov
sahf
clflush
mov
dec
out
jg
outsl
push
popf
push
cs
ds
mov
out
mov
sahf
xsave
mov
push
out
addr16
jne
jl
mov
lret
dec
sahf
xor
rcrl
cli
data16
dec
shlb
loope
scas
outsl
adc
add
mov
sbb
aas
add
movb
repnz
shll
aam
mov
cmc
add
repz
fwait
shrl
mov
pop
lcall
xchg
mov
or
orl
dec
dec
cs
sub
iret
and
or
jle
mov
pinsrw
pop
jmp
daa
nop
or
jo
pop
push
push
mov
push
xor
jne
test
jle
dec
rolb
jg
mov
das
mov
stos
cli
inc
scas
sbb
jg
jae
popa
out
insl
aas
xor
scas
arpl
loop
sahf
out
fwait
shrl
sarl
inc
pop
sahf
sbb
pop
fimuls
data16
jbe
xchg
xchg
cmpsb
ds
pop
fsubrs
jle
iret
jp
vmptrst
xlat
cs
or
push
idivb
cs
or
addr16
bswap
dec
shrb
into
sub
jge
sbb
sub
ds
dec
lods
xor
jmp
sahf
push
pop
rcrb
xor
dec
out
jg
outsl
push
lahf
push
cs
pop
iret
outsb
jle
mov
sahf
clflush
mov
dec
out
jg
outsl
push
lahf
push
cs
pop
iret
outsb
jle
mov
mov
cmp
bound
mov
rclb
pusha
aaa
xlat
lea
push
pushf
pop
mov
incb
icebp
xchg
xchg
pop
aam
dec
aas
jmp
mov
mov
push
sti
xor
pop
lret
imul
xor
sbb
adc
mov
imul
test
sbb
pop
mov
sarl
dec
outsl
and
hlt
mov
cmpsb
aaa
xor
jp
aam
jp
aas
pop
and
inc
jle
push
cmp
sti
push
push
sbb
lods
dec
jl
jle
pop
fisttps
push
and
cltd
lret
rcrb
fstp
stc
or
dec
ret
cmp
out
fnstsw
mov
cwtl
insl
out
stos
dec
outsl
movsb
inc
test
jmp
leave
mov
mov
inc
cwtl
mov
mov
or
imull
or
push
mov
sbb
adc
jg
mov
mov
shrl
into
fnstsw
std
mov
add
mov
outsl
sub
ficompl
mov
xor
gs
in
cmp
loopne
loop
dec
inc
test
repnz
leave
xor
loopne
out
or
cmpsb
dec
jno
mov
push
sti
jg
leave
shrl
jns
std
pop
cltd
push
lahf
in
inc
cltd
pop
in
shrb
outsl
or
int3
add
gs
adc
sub
dec
bound
les
sbb
jbe
dec
scas
cmpsl
mov
sub
mov
mov
cmpsb
mov
cmc
cwtl
push
das
mov
push
shrd
lods
in
clc
xchg
std
repz
in
pop
enter
push
aaa
enter
jo
mov
mov
lods
loope
mov
mov
sahf
adc
sub
jae
lret
aad
or
inc
push
lea
pop
in
arpl
sbb
xchg
test
clc
lds
xchg
dec
inc
sarb
int3
push
jne
cmpsb
nop
mov
pop
fnsave
and
sub
or
push
pop
loopne
xchg
pop
jo
mov
pop
push
or
sbb
loopne
adc
xlat
das
xor
sahf
stos
insl
rclb
daa
stos
rcll
stos
sar
imul
inc
aas
lods
mov
repz
pop
into
insl
icebp
cmp
jns
mov
testl
push
jno
xlat
fistl
rol
jg
pop
mov
jbe
sbb
aam
int
or
imul
clc
push
jns
push
jbe
or
jmp
xor
aad
xor
xchg
imul
lods
fdivl
and
shll
cld
xchg
call
loope
enter
in
lods
or
pop
mov
outsl
stos
bound
mov
outsb
rcrb
and
sbb
push
inc
add
test
mov
mov
sbb
jae
mov
addr16
xchg
or
mov
imul
sbb
pushf
orl
in
mov
pop
cwtl
ss
clc
inc
movsl
adc
aaa
or
add
dec
sub
aaa
imul
fwait
rcrb
fstpl
scas
jb
pop
mov
scas
std
xor
or
push
sbb
ret
subl
adc
movsb
popa
mov
sbbb
hlt
loope
les
mov
test
outsb
sete
mov
add
sub
push
ret
push
mov
enter
fisubl
mov
daa
fdivl
mov
mov
sub
stos
adc
test
mov
subl
mov
push
outsl
aad
jg
loop
scas
test
cmc
add
in
test
sbb
ds
insb
push
push
sbb
mov
bound
add
mov
xchg
ja
jge
out
ja
add
push
mov
cmp
out
lret
test
add
das
cs
or
ss
addr16
cmpsl
and
in
in
xchg
int3
outsl
in
mov
and
enter
call
jo
pop
testl
cmpsl
push
sbb
push
xor
push
ret
imul
pop
mov
subl
call
pop
mov
negl
fistl
aam
jecxz
outsl
mov
imul
nop
mov
inc
sub
mov
pop
das
jb
fdivrs
sub
hlt
and
mov
xor
in
pushf
repnz
sbb
rcll
frstor
xlat
ljmp
scas
ja
jl
pop
inc
and
dec
inc
imul
in
mov
aad
dec
mov
sbb
and
and
loop
fcoml
test
sub
mov
adc
and
push
xchg
mov
lret
ss
xor
ffreep
xchg
lret
jl
lcall
pop
daa
inc
ror
ret
inc
scas
int
loopne
push
jns
pop
sahf
or
jl
fwait
popa
cltd
nop
leave
mov
sbb
ret
pop
shll
ss
fiaddl
jne
xchg
add
mov
xor
pop
daa
js
scas
pusha
add
addr16
mov
sti
insl
sbb
jae
lcall
push
inc
cmpsl
out
scas
push
lret
jnp
xchg
adc
push
push
dec
mul
xor
xchg
dec
pop
push
mov
in
mov
pusha
bound
adc
push
loope
push
jns
shl
lret
into
nop
pop
or
adc
xrelease
in
jecxz
dec
rolb
ljmp
jecxz
jle
icebp
pop
pop
xchg
scas
and
inc
xchg
std
stc
dec
dec
data16
sbb
into
adc
in
sbb
enter
sti
outsb
test
add
addb
repnz
loop
mov
xchg
mov
iret
pop
daa
fld
push
xor
cmp
mov
mov
pop
mov
push
push
icebp
xchg
xor
dec
scas
pusha
cmp
dec
jb
int
sahf
jns
pop
pop
sti
jo
ss
loope
movsl
fidivs
xchg
movsl
movsl
sub
mov
xor
pop
divps
jle
rcrl
es
gs
das
aad
in
cmc
jb
mov
pop
scas
sub
and
dec
ret
cmp
mulb
pop
cmc
rcr
lock
add
imul
imull
in
mov
inc
movsl
enter
mov
sar
jmp
mov
les
movl
in
in
in
int
mov
fstps
jle
es
imul
subl
xchg
or
push
sbb
xor
les
adc
aaa
ja
lret
jl
cmpsb
dec
popf
lret
inc
and
pop
inc
jno
fsubrs
add
pop
sub
outsb
jge
nop
in
cmc
adc
mov
dec
mov
lds
xchg
jge
mov
push
cwtl
and
movsl
ret
cmp
inc
mov
ljmp
cmp
test
xor
jnp
daa
js
jle
movsl
push
push
sub
dec
scas
sahf
lods
scas
mov
mov
cmpsb
clc
aad
mov
ds
xchg
test
adc
fisttpll
or
clc
cmpsl
sub
pop
stos
adc
push
push
inc
xchg
jp
sub
mov
sub
lods
daa
mov
sbbl
adc
push
xchg
scas
stos
dec
dec
mov
cmp
mov
pop
ret
outsl
outsb
movd
mov
lret
ja
dec
sub
inc
jp
into
leave
daa
lds
iret
js
cmp
and
cmpsl
xchg
pop
push
mov
push
aad
sahf
cmp
mov
sbb
add
das
sbb
cmc
mov
jge
pop
lcall
mov
jg
rolb
insb
cmp
sbb
aaa
lock
negb
rcrl
sti
leave
pop
or
push
cmp
and
aaa
mov
xchg
cmpsl
push
cld
mov
and
xchg
fnstsw
lds
xchg
iret
scas
stos
pop
out
jg
pop
mov
ret
and
inc
jo
jo
cmp
aad
jne
lcall
loop
xchg
or
jmp
lods
lods
xor
mov
addb
xchg
xchg
add
push
adc
cmpsb
inc
jne
sub
jns
cmp
test
out
pushf
pop
insl
scas
sbb
ret
cltd
or
add
and
andb
and
xor
add
cltd
shl
pop
dec
shrb
sarl
in
movsl
cld
dec
xchg
cltd
shll
imul
scas
ss
mov
inc
pop
not
outsb
movsb
int
jmp
dec
bound
aas
rcll
jb
faddl
jae
sarb
inc
adc
enter
cmp
xor
scas
fiaddl
mov
jmp
push
pop
add
pop
jnp
mov
inc
js
mov
test
inc
jnp
pop
shrl
lods
je
outsb
loopne
lock
mov
mov
inc
into
es
in
mov
dec
push
stos
cmp
mov
cmpsb
and
mov
mov
scas
testb
lcall
cs
sarb
xchg
out
es
out
stos
jmp
sbb
lds
pop
push
enter
imul
and
sub
test
pop
inc
std
js
jge
ss
arpl
or
add
dec
xor
pop
cli
push
xor
cmpsb
push
rorl
es
pop
lret
pop
adcl
cmp
add
outsl
mov
fimuls
sbb
sub
xchg
in
lret
add
arpl
or
ds
popa
lahf
mov
jbe
sbb
rorl
sub
and
movsb
int3
jp
sti
xor
ss
add
aas
xchg
addl
sub
jl
xchg
jecxz
movsl
mov
les
fadds
pop
jg
xlat
dec
sbb
nop
out
sbbl
sbb
cmpsl
imul
fcomps
lods
xor
or
jno
stos
lahf
icebp
push
push
scas
imul
dec
ss
mov
iret
pop
add
ror
sub
nop
lock
out
insb
mov
or
jg
pop
loopne
sbb
sbb
mov
mov
aaa
cmpsl
insl
aad
insl
sub
fwait
sahf
xor
jo
cmp
jno
sub
sbb
setp
out
xchg
bound
jo
pop
sbb
jge
mov
push
push
add
jnp
mov
cmc
mov
and
pop
mov
ss
jne
notl
iret
dec
push
jmp
div
push
test
scas
iret
add
and
lret
push
add
divb
xor
lods
out
jno
mov
or
out
inc
sbb
aas
and
push
mov
xor
test
out
cwtl
add
adc
xchg
rol
xchg
arpl
cld
push
mov
mov
je
jmp
mov
dec
cs
out
xchg
xchg
imul
add
inc
outsl
ss
xchg
mov
adc
loop
pcmpgtw
push
mov
mov
or
movsl
les
jne
ss
and
pusha
es
call
sub
or
sti
fistl
bound
add
mov
mov
mov
inc
or
shlb
xorl
scas
jecxz
or
out
pop
cltd
jecxz
arpl
cmpb
icebp
rclb
or
cmp
stc
jmp
mov
int3
int3
mov
mov
pop
push
inc
dec
pop
in
das
adc
pop
inc
push
cmp
in
xchg
jl
and
jns
add
data16
push
lret
xchg
or
test
dec
jg
jg
lock
and
xchg
imul
sub
insb
add
mov
and
inc
mov
enter
insb
dec
push
xchg
cld
nop
mov
dec
pop
repnz
push
fisttps
and
rorb
je
shrl
les
cmp
and
sbb
adc
in
mov
jmp
adc
ljmp
movsb
pop
mov
add
rcrb
jno
xchg
cmp
je
and
mov
mov
inc
push
or
pushf
sbb
daa
aaa
jns
shrb
out
std
clc
cmc
xor
push
or
aad
cltd
bound
mov
iret
xor
push
mov
jo
push
xorl
cli
sbb
or
cwtl
ss
out
dec
xchg
cmovs
nop
and
loopne
or
and
out
loope
out
or
xchg
inc
movsl
xor
outsb
jl
movsb
scas
pop
pop
push
sub
je
push
pop
fcoms
inc
movsb
inc
jo
sarb
movsl
jae
push
and
push
loop
mov
xor
xor
mov
xor
out
aad
or
mul
js
aaa
sub
lahf
test
sub
xor
mov
cmp
adc
xchg
test
sub
test
xor
test
sbb
fsts
mov
sub
test
sti
mov
adcl
jno
and
mov
dec
fmuls
jo
mov
popa
repz
leave
andl
ss
int3
shlb
ret
outsb
jp
int
clc
sahf
push
shll
sbb
incb
mov
test
and
rolb
dec
rep
mov
popf
ss
cmp
jmp
jecxz
pop
sbb
jl
sbb
sti
andl
xorl
xchg
in
inc
push
sub
or
aam
fwait
jg
lret
dec
mov
mov
inc
incb
push
adc
mov
adc
pop
mov
push
push
push
jb
stos
test
in
fmuls
ss
ret
xlat
popa
in
cs
mov
lret
jne
jle
dec
js
and
nop
fwait
and
movsb
mov
mov
out
xor
out
loopne
cmpsb
add
pop
sub
adc
es
and
arpl
mov
cmp
xchg
cwtl
xor
inc
insl
sub
xchg
aad
iret
dec
shlb
sbb
or
fcoms
cmp
cmp
push
int
sub
lds
test
stos
mov
inc
scas
loop
lea
sub
xchg
cmp
lahf
test
sub
data16
es
imul
maskmovq
hlt
xor
add
into
gs
push
and
cmpsb
sahf
jns
stos
ds
out
or
push
or
rcll
movsb
int3
popa
int
mov
cmp
jmp
jmp
mov
sub
pusha
sbb
out
pusha
fcmovnb
insl
inc
out
jmp
clc
addr16
push
xchg
insb
call
pop
loope
sub
mov
rclb
mov
fiadds
jmp
jge
call
add
in
pop
sub
or
addl
cwtl
lcall
cmpsb
fcmovne
fisubl
xlat
stos
xchg
test
or
das
jne
jg
dec
mov
aas
mov
add
mov
jmp
cmp
jecxz
jns
and
outsb
add
mov
jne
insb
scas
insb
xchg
and
mov
and
fsubrs
adc
add
repnz
imul
lret
pop
nop
aaa
push
dec
and
loop
add
push
push
and
xor
jge
mov
shrl
xchg
sbb
adcb
aad
enter
adc
in
lret
test
and
mov
push
push
dec
sbb
mov
test
cmc
xlat
push
das
inc
and
movl
dec
les
imul
js
xor
mov
insl
jp
inc
rcr
fisubrl
int
cld
imul
xchg
imul
mov
hlt
stos
cs
push
shlb
mov
lea
sub
mov
ss
inc
sbb
push
test
fmulp
int3
fwait
xlat
lods
fs
fmull
pop
out
sub
mov
jne
inc
xchg
mov
jl
jne
sbb
push
mov
and
stc
shrl
out
not
ljmp
ljmp
sbb
xor
or
inc
mov
or
sub
mov
push
dec
sbb
pusha
dec
pop
std
sbb
adc
cmpsl
subb
inc
jne
xchg
sbb
into
cmc
mov
lret
popf
sub
aas
rorl
pop
lcall
lock
and
mov
iret
and
loope
xchg
jmp
fcoms
ret
lods
xchg
fsubl
fcoms
adc
pop
mov
mov
flds
jne
test
sub
das
lods
les
insl
pop
inc
in
add
loop
or
inc
int
iret
popl
in
lcall
leave
xor
jge
aad
mov
call
test
sub
ds
pop
pusha
ret
aam
scas
or
mov
popa
add
dec
aaa
pusha
andb
ds
gs
mov
xchg
sbb
or
push
cwtl
shl
mov
cmp
push
lods
mov
pushf
aaa
xor
ret
pushl
dec
cmp
push
or
fs
xor
push
push
subb
push
inc
add
mov
sbb
pop
mov
cwtl
das
add
push
sub
or
push
mov
add
shrb
xchg
repz
mov
outsb
sbb
pop
xor
mov
imul
sub
sub
pop
push
mov
jbe
rorl
mov
dec
fdivp
mov
ljmp
loopne
fiadds
fisubrs
repz
loop
into
movsl
sar
and
ret
std
add
daa
mov
mov
or
push
loop
push
shlb
aad
mov
pop
sbb
jb
scas
xor
sub
pop
sub
jg
cli
xor
mov
dec
iret
fwait
sub
sbb
dec
icebp
imul
std
jmp
mov
cmp
mov
push
and
in
xchg
sarl
out
mov
push
jns
xor
xchg
popf
out
jecxz
jbe
add
into
sbb
insl
mov
and
add
push
ret
and
cmp
jecxz
test
pop
add
ffreep
mov
pop
imull
stos
das
dec
sarb
insl
lods
xchg
outsl
cs
lods
jmp
adc
inc
xchg
sti
sbb
cmc
or
cwtl
mov
aam
xchg
or
icebp
push
cmpsl
icebp
jmp
mov
jne
cld
stos
lahf
jns
cmc
into
or
cld
jno
lahf
sahf
cmp
fildll
fwait
xor
lahf
mov
sub
cmp
adc
pop
mov
cmc
xlat
jno
loop
test
xlat
mov
xchg
push
popa
repnz
mov
push
outsl
and
or
ret
xor
js
ljmp
mov
sbb
mov
mov
sbb
je
and
cmp
cmp
lods
push
inc
pusha
pop
into
xchg
lods
sub
mov
es
ss
or
mov
test
leave
jo
sbb
adc
push
inc
or
and
add
ret
xchg
clc
push
rcrl
push
popf
and
pop
mov
sub
push
mov
or
cmp
jge
and
scas
jnp
vpsrad
mov
push
cs
cmp
sbb
insl
fnsave
test
ss
std
clc
jo,pt
inc
test
int
add
xchg
pop
or
inc
aam
lods
jmp
add
or
add
repz
xchg
data16
insb
dec
rcll
pop
test
xor
inc
inc
rcl
add
xchg
inc
subl
int3
xchg
out
jl
add
xor
arpl
movsl
pop
mov
jmp
inc
rclb
aaa
inc
jmp
in
mov
adc
lahf
add
mov
xor
push
dec
out
jb
sub
sub
in
into
int
pop
jg
dec
nop
push
adc
fdivs
dec
mov
cs
push
sbb
pop
add
xlat
fidivs
mov
xchg
sub
insl
mov
jl
pop
mov
inc
xchg
loop
pop
adc
outsb
add
push
jmp
inc
mov
in
mov
fs
mov
stc
adc
ljmp
iret
leave
lods
jmp
and
movsl
dec
cmpsl
cmp
bound
xlat
dec
jb
adc
jl
mov
jbe
cmp
add
add
shlb
lds
bound
mov
and
cs
xchg
repz
add
shlb
or
idivb
out
scas
mov
addr16
xchg
imul
xchg
enter
adc
pop
gs
pop
je
jae
loopne
scas
jno
cmp
in
lods
or
push
cmp
getsec
mov
dec
adc
lcall
inc
sub
cltd
lods
decl
jp
dec
in
cmp
xchg
push
cmpsl
rcrl
pushf
inc
sub
aaa
push
loop
clc
inc
inc
jne
shlb
jle
add
imul
sbb
cmp
cmp
in
out
inc
popa
push
in
sbb
pop
es
mov
dec
out
jg
outsl
push
lahf
push
cs
pop
iret
outsb
jle
mov
sahf
clflush
mov
dec
out
jg
outsl
push
lahf
push
cs
pop
iret
outsb
jle
mov
push
ucomiss
mov
dec
out
jg
outsl
push
lahf
push
cs
pop
iret
outsb
jle
mov
sahf
clflush
mov
dec
out
jg
outsl
push
lahf
push
and
ds
xor
add
adc
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pop
mov
push
adc
arpl
jp
cs
lret
ljmp
mov
dec
dec
jp
push
sbb
or
mov
lret
ljmp
stos
scas
or
dec
cld
lods
insb
or
inc
xor
rcl
fiaddl
cmpsb
lods
pushf
mov
out
lret
sbb
and
or
test
and
imul
je
cmp
scas
inc
iret
add
sti
fwait
lock
aad
pop
inc
and
rorb
cmc
repnz
insb
pop
sti
aaa
sahf
add
lahf
sbb
mov
pop
dec
jp
ljmp
cwtl
adc
add
mov
cmc
mov
pop
outsb
aas
sbb
cmc
cmp
sub
iret
and
adc
lahf
mov
push
push
std
fisttps
cmpsb
test
mov
bound
sbb
jmp
push
fistps
iret
push
xchg
pop
repnz
fidivs
cmpsb
sti
add
negb
lahf
mov
mov
dec
mov
sbb
dec
push
cmp
xchg
scas
sub
or
out
hlt
cmpsb
cli
mov
jbe
mov
cmp
ds
jg
sub
dec
mov
mov
cli
into
in
iret
pop
sbb
pop
mov
cmp
loop
mov
jmp
fucomip
lds
or
or
sub
cmp
sub
fcmovu
lret
ljmp
mov
dec
dec
jp
push
sbb
or
cmp
sub
fcmovu
lret
ljmp
mov
mov
push
xchg
lock
clc
sub
pop
orl
mov
xchg
mov
or
xchg
cmp
in
lock
stc
or
daa
outsl
mov
lods
jno
sub
pop
leave
and
cmp
fiaddl
add
lahf
xchg
push
subl
adc
xchg
popf
ds
out
mov
hlt
or
pop
rcll
xchg
push
outsb
mov
clc
fidivs
and
jae
cmp
pop
sub
push
andl
mov
and
int3
pusha
scas
dec
cmp
out
jb
shl
rolb
jnp
orl
rcl
mov
pop
out
pop
inc
sub
shll
ja
inc
stos
cmp
sub
std
adc
orl
loopne
stc
push
bound
push
in
mov
sub
cmpsb
add
jle
aaa
push
int
outsw
dec
jns
fmull
dec
add
cmpsl
jmp
xchg
mov
pop
and
adc
insl
pop
sub
mov
in
or
mov
sbb
cltd
mov
mov
xor
xchg
mov
or
xchg
mov
imul
fwait
push
bound
mov
push
data16
fdivrs
or
inc
shlb
dec
cltd
sub
in
inc
cmp
data16
ficoml
cmpsl
jns
daa
jp
jno
cld
xor
jae
and
pop
jmp
or
into
push
gs
or
shl
push
js
call
inc
fstpt
dec
fs
inc
jp
lret
mov
xchg
fimuls
mov
fucomi
mov
dec
jl
out
push
mov
push
mov
xchg
cmc
sbb
push
outsl
adc
fucomp
insb
iret
and
mov
add
repz
add
cmp
lret
lods
insb
int
icebp
fimull
jg
add
mov
sub
into
call
adc
push
dec
into
push
in
dec
sub
inc
lds
xchg
daa
adc
push
in
out
dec
imulb
rclb
stos
inc
push
pop
hlt
push
jo
loopne
dec
xor
or
jae
imul
sub
ficomps
cmp
jmp
cmp
push
repz
stos
jecxz
ret
enter
mov
test
push
or
pop
add
movsl
xor
jb
cmp
shll
aad
dec
xchg
sahf
cmp
pop
popf
mov
xchg
iret
and
cs
pop
movsb
pop
or
rcl
and
push
inc
mov
cmp
sub
adc
mov
jg
jge
in
xor
cs
xor
aad
cmp
shll
jo
enter
test
in
pop
out
ljmp
ret
sub
ret
pop
cld
rolb
pop
bswap
cmp
cmpsl
test
push
test
ds
dec
cmp
or
jno
movsl
xchg
leave
in
cld
or
mov
jmp
stc
out
hlt
andb
mov
dec
or
stos
lretw
inc
bound
cs
push
jmp
lahf
scas
or
test
addb
int3
jp
jecxz
sub
fwait
mov
and
sti
call
xor
data16
or
mov
lods
mov
push
lcall
xchg
or
sbb
cmc
or
xchg
push
push
xor
mov
mov
adc
subl
inc
iret
jo
dec
sub
or
push
xchg
call
jp
mov
and
ds
jb
xchg
stc
outsb
jmp
adc
dec
and
lret
sub
and
or
lcall
insb
aaa
int3
pushl
jne
pop
es
add
add
out
sbb
pop
adc
or
adc
push
lret
sahf
out
mov
sub
aas
gs
cmpsb
add
push
cli
pop
mov
pop
loop
sbb
jnp
sub
int3
cmp
xchg
cmpsl
pop
popa
add
aaa
fs
js
mov
pushf
inc
jecxz
lock
subl
dec
push
loope
push
stos
lret
outsb
shlb
and
call
pop
xor
arpl
sbb
jns
pop
lods
js
faddl
repnz
leave
fwait
test
outsb
pop
aam
outsl
push
orb
cmpsl
jmp
stos
fldt
mov
xchg
jns
movsb
cmp
fisubs
sub
nop
mov
sub
sub
sub
push
fwait
cltd
adc
bound
mov
add
rolb
cmpsl
jg
ror
mov
andb
mov
inc
jg
xchg
fs
test
sub
ret
lods
hlt
clc
or
sbb
jg
imul
add
aaa
icebp
arpl
nop
xor
jl
arpl
jae
push
into
mov
andl
fwait
add
repz
push
push
ds
movsb
adc
push
test
cmpsl
push
aaa
jg
cmpsb
mov
cs
out
mov
rolb
das
and
aaa
out
iret
dec
fisttpll
push
pop
loopne
loope
ficoml
es
fsubp
push
xchg
movsl
cs
push
jle
loop
lret
and
mov
pop
subb
mov
xchg
mov
out
jae
sub
call
scas
cmpsl
push
mov
imul
pop
outsl
ret
cmp
repnz
rcl
cmp
addr16
mov
shlb
adc
out
scas
ljmp
test
inc
sub
jp
imul
scas
and
dec
cmp
add
mov
inc
out
mov
sbb
aam
xchg
nop
mov
jae
push
ljmp
or
inc
jo
jns
ds
push
and
sub
mov
icebp
mov
sub
iret
xchg
cmc
jnp
imul
pop
dec
dec
mov
add
sub
push
or
into
mov
outsb
xchg
push
jp
adc
jno
shl
das
repnz
xchg
pop
pop
inc
pop
ljmp
fwait
sub
lea
adc
rorb
mov
and
or
inc
bound
mov
insl
pop
add
mov
inc
pop
imul
test
sbb
and
push
std
jbe
xchg
fsubrl
or
sbb
mov
popf
adc
ss
call
add
das
repz
sbb
and
aam
mov
or
lods
xor
xchg
out
fstps
js
movsb
pop
jl
push
pop
jo
loopne
fistpl
push
fistpl
add
cs
jp
add
ja
das
mov
lahf
cmpsb
or
mov
fidivl
mov
fcmovnu
fdivs
repnz
shl
movb
in
insb
fcmovnu
sub
cs
mov
add
and
xor
jmp
or
ja
pop
jmp
shlb
and
cmp
pop
push
pop
and
push
sti
adc
fdivp
fldenv
in
sbb
dec
cld
mov
cmp
xchg
push
shlb
sbb
sbb
movsl
aam
inc
xor
sbb
scas
and
push
into
nop
sub
sub
test
inc
std
cmp
ficomps
fistpl
aam
imul
mov
scas
test
pop
stos
ret
sti
pop
xor
push
push
cmpsb
and
or
pop
lea
xchg
mov
aam
sub
cmp
test
pop
jo
ficomps
cltd
jmp
fistps
stos
leave
subb
int3
xchg
mov
push
lcallw
ja
mov
test
inc
mov
pop
shl
and
jecxz
push
and
je
mov
fimuls
cld
lahf
cs
stos
ljmp
pushf
lds
cltd
fwait
sbb
pushf
int3
dec
xor
ret
fs
fcmovu
out
cmpsb
ja
cmc
mov
sub
lcall
movsb
loope
lds
jae
addr16
cmpsb
sub
test
dec
testb
or
std
arpl
xchg
xchg
idivl
subb
mov
test
lea
and
xor
xor
fcomip
dec
lock
popf
popa
jle
cltd
je
js
mov
cltd
xchg
out
ficompl
xchg
xor
xchg
call
and
mov
fsub
sbb
adcl
mov
ror
adc
call
adc
cmp
fs
mov
mov
push
fs
fbld
or
sub
fwait
inc
pop
lock
jge
scas
stos
into
cmpsb
cli
stos
add
or
or
mov
cmc
adc
dec
mov
int3
sahf
jne
mov
inc
enter
ficoms
mov
xor
jecxz
shll
daa
test
mov
sahf
test
scas
rorl
xor
xorb
aas
mov
jne
pop
push
adc
mov
hlt
cld
jb
xlat
push
addr16
inc
shrl
stos
adcb
inc
loope
data16
mov
xchg
mov
test
test
and
lods
std
insl
push
fidivrl
dec
and
test
mov
sahf
adc
mov
in
pusha
stos
scas
push
mov
mov
test
mov
cmpsl
iret
mov
xor
or
pop
jp
mov
js
lock
dec
mov
and
scas
ja
sbb
jle
mov
push
ja
push
xchg
mov
test
ljmp
xchg
and
mov
and
jb
inc
mov
or
dec
daa
inc
or
sub
sbbb
je
rorl
aas
aaa
xor
inc
clc
or
and
jno
mov
pop
cmp
jle
mov
add
jl
test
or
dec
ja
fcomip
cmpl
sub
xchg
mov
into
or
sahf
sub
mov
fidivrl
cs
jne
jmp
enter
roll
push
add
lds
pop
inc
neg
or
and
dec
push
xor
vmovaps
xchg
aaa
fisttps
aaa
lcall
fldl
loopne
jno
jae
jmp
vmwrite
adc
cmp
mov
and
lds
insl
icebp
insl
xchg
xchg
pushf
ss
pop
dec
and
test
pop
pop
lock
adc
subb
imul
jne
rol
mov
iret
ret
adc
mov
mov
adc
js
sbb
dec
push
test
sub
dec
fdivrp
mov
jne
xlat
push
sahf
xor
in
cmp
mov
cmp
pushf
xor
pop
stos
push
in
sub
es
and
ret
sbb
repz
andl
jns
fiaddl
mov
push
xchg
insb
push
dec
dec
pop
inc
movsl
cwtl
jge
and
mov
insl
mov
mov
icebp
lock
jno
mov
or
push
imul
pop
jnp
ljmp
mov
sbb
popa
push
mov
das
lods
jno
push
sub
xor
inc
jl
inc
push
push
leave
cltd
mov
mov
and
sbb
adc
enter
scas
xchg
fistpl
stc
stc
jmp
jecxz
xchg
jnp
enter
pop
lods
rorb
pop
add
data16
cmpsb
aas
and
sub
and
les
rolb
sub
mov
pop
dec
mov
mov
mov
cs
imull
push
roll
adc
ret
aam
and
mov
and
in
sbb
insb
cmp
xchg
xchg
mov
sub
sub
push
call
mov
inc
in
in
fidivs
cmp
and
rcrl
cli
sub
fadds
out
mov
es
aaa
lods
cmc
addr16
mov
xor
or
push
stos
sbb
inc
cmp
js
fs
jmp
test
popf
bound
xchg
xchg
jmp
mov
lods
fsts
je
mov
sub
stos
push
and
inc
outsl
push
loopne
ss
sbb
inc
or
aaa
imul
inc
push
aad
mov
mov
mov
dec
lcall
add
push
mov
push
cltd
hlt
and
push
ucomiss
push
ret
sub
sbb
lock
sarl
sti
inc
ficompl
test
scas
divl
sub
mov
cmc
pop
or
ja
xchg
or
les
test
xchg
shl
into
push
xchg
cmpsb
test
mov
cmp
dec
lods
jo
sbb
adc
push
lret
dec
insb
mov
jl
xor
xchg
adc
add
mov
out
leave
mov
sbb
sub
adc
dec
inc
iret
and
mov
test
rcrb
jnp,pn
pop
jmp
inc
xchg
inc
dec
pop
inc
sub
fldenv
mov
es
jae
pop
test
ret
sarb
aaa
lods
loop
jne
mov
cmc
movsb
sti
sub
cld
xor
fsubs
lret
dec
mov
push
dec
push
mov
gs
jmp
inc
push
popa
sub
cli
fxch
mov
jnp
bound
int
dec
mov
sub
xor
add
mov
scas
jne
jmp
mov
sbb
xor
jne
test
loop
mov
repz
mov
mov
mov
mov
mov
sub
xchg
dec
xchg
xchg
xchg
js
mov
loop
pushf
jb
rcrl
add
out
push
out
int3
movsl
xlat
out
jbe
mov
aad
push
enter
jl
push
mov
push
ret
jl
xchg
std
loop
iret
call
or
sbb
xchg
cmp
stos
fisttpll
xor
jae
mov
jne
inc
pop
fistpl
lret
insb
cmp
mov
lea
icebp
xor
ret
lret
jle
push
or
xorb
lds
pushl
negl
lock
push
scas
out
cwtl
lret
movsb
inc
pop
inc
mov
in
or
sbb
mov
push
push
cmovge
and
push
dec
hlt
aam
xchg
push
sbb
mov
adc
shlb
push
sbb
cmpsl
lea
mov
rcr
pop
lea
cmp
inc
mov
or
cltd
cmp
and
or
fidivrs
mov
lret
jecxz
pop
int3
arpl
dec
fisttpll
xchg
push
icebp
mov
imul
int3
decl
xchg
xor
cmp
dec
or
jl
and
cmp
out
inc
inc
fistpll
js
adc
dec
ja
into
or
repnz
test
mov
icebp
das
push
jge
xchg
cwtl
or
mov
inc
push
std
adc
or
imul
int3
jo
cmp
jo
stc
int3
addr16
pop
xlat
cli
inc
inc
popf
and
sub
push
cmpsl
lret
dec
jbe
or
in
and
sbb
ficoml
call
iret
xor
push
dec
fcmovnu
xchg
loop
cmp
int3
int
pop
cmpsl
or
inc
adc
dec
fcompl
sarb
int
sbb
fcompl
push
xchg
icebp
ljmp
or
test
and
dec
cmp
movsb
jg
pop
std
xor
cmpsb
fistps
scas
jbe
and
mov
imul
push
iret
shll
loope
outsl
gs
mov
inc
push
pop
cmp
lcall
loop
leave
cmp
inc
mov
cmc
jmp
lods
lcall
pop
outsl
fistps
divb
cld
and
push
dec
jg
mov
push
es
mov
cmp
loop
jnp
in
xchg
add
inc
out
inc
ret
movsl
sbb
sbb
push
dec
stos
out
in
data16
adc
add
mov
fsts
call
adc
aam
xchg
mov
mov
scas
jge
out
inc
and
dec
cmc
in
jmp
adc
in
outsl
or
enter
dec
ljmp
movsl
out
dec
mov
out
divl
mov
push
rorb
xlat
mov
in
jb
ret
lret
jmp
fdivrs
out
mov
and
faddl
push
push
inc
mov
imull
adc
cmp
clc
xchg
shrb
pop
aas
testl
lds
scas
ss
xor
fs
push
pop
movsb
or
jmp
add
or
cmp
jnp
aaa
xchg
sarb
lea
popa
addb
cmp
cwtl
test
repz
push
mov
test
pop
xor
bound
mov
sub
push
incl
push
ss
cmpb
outsl
in
lods
xor
leave
das
mov
fldenv
out
cli
leave
clc
cmpsl
testb
sbb
cmp
cld
stc
mov
dec
mov
popa
jmp
or
into
xor
mov
jge
pop
adc
push
call
cli
sbb
mov
insb
xchg
popf
out
sbb
rorb
sbb
add
cmp
or
fs
push
push
jmp
jecxz
sbb
cmp
push
xlat
test
push
jle,pt
rorb
cli
cmpsl
lea
es
mov
push
cmc
jecxz
push
sub
cmpsl
adc
into
pop
les
inc
jge
or
jbe
mov
fwait
les
jmp
mov
pop
pusha
jmp
dec
add
adc
mov
inc
xor
sar
jg
pop
jbe
push
xchg
shlb
negb
in
lcall
stos
scas
cmp
jo
push
icebp
loop
jnp
push
das
push
push
mov
lahf
cltd
pushf
push
xor
sub
popf
sbbb
fcoml
outsb
mov
mov
sub
movsl
das
dec
shrb
std
or
lock
mov
pop
or
hlt
rcrb
xlat
xor
adc
movsb
nop
lds
mov
push
shll
or
mov
sahf
daa
ja
mov
pop
push
cmp
xor
mov
xchg
push
jns
inc
js,pn
stos
xor
test
push
out
jg
jge
jnp
les
dec
add
lock
jns
xlat
or
sbbb
stos
daa
loopne
lret
and
dec
aam
lods
sti
lret
add
std
mov
sbb
xchg
cltd
push
mov
mov
test
pop
jle
jmp
sbb
enter
test
or
cwtl
sbb
sarb
ljmp
mov
repnz
adc
movsb
leave
pop
int3
sub
rol
cmp
push
les
and
shrb
roll
jge
out
sub
add
push
movsl
sub
or
stos
jmp
cld
push
push
mov
testb
lret
test
repnz
cld
cmpsb
es
clc
inc
cmp
jne
pop
jo
push
lds
and
push
outsb
inc
out
dec
fs
fwait
lahf
movsb
daa
jg
mov
gs
cmpsb
xchg
mov
daa
mov
dec
add
cmp
add
insl
push
enter
and
mov
or
jecxz
fldcw
jle
lods
mov
sahf
inc
xor
sub
adc
lods
insb
sbb
gs
repz
out
ss
imul
mov
sbb
push
mov
inc
mov
das
sub
inc
cwtl
sub
movsl
dec
aad
push
call
xor
pop
dec
pop
insb
fisttpl
mov
and
pop
dec
mov
insb
jp
dec
mov
push
in
push
add
jp
in
mov
mov
push
xchg
popa
mov
add
and
jg
or
pop
pop
je
add
push
xchg
enter
leave
aas
inc
addl
movsb
inc
push
test
push
inc
out
pop
cmp
fs
adc
pop
outsl
jp
movsl
int3
jne
jo
pop
loope
ds
mov
adc
adc
cmp
insl
leave
test
enter
and
ss
fstpt
mov
add
mov
fidivrl
adc
mov
sbb
pushf
cltd
shll
out
mov
push
leave
and
add
cmpsl
pop
ja
lret
add
movsb
push
cs
movsb
mov
or
xor
cmp
je
adc
fdivl
test
test
rol
dec
in
or
pushf
jle
xchg
loope
xchg
popf
inc
shl
les
xchg
sbb
push
cmp
pusha
cmp
out
arpl
int3
pop
fwait
movsb
ja
mov
std
dec
daa
fdivrl
jne
ja
imul
add
sbb
je
lods
mov
sbb
scas
mov
ds
cmp
inc
dec
gs
or
cmp
out
in
mov
aad
fmuls
inc
fimuls
dec
push
add
pop
jo
mov
xchg
insl
fucomi
test
add
xor
mov
jb
or
call
xchg
out
xchg
and
adc
sub
les
js
jecxz
sarl
add
jno
pop
aad
mov
cltd
push
hlt
lret
arpl
nop
outsl
adc
iret
rolb
dec
mov
popa
inc
nop
jne
mov
cmpsb
imul
sub
adc
sbb
or
cmp
sub
fcmovu
lret
ljmp
mov
dec
dec
jp
push
sbb
or
cmp
sub
fcmovu
lret
ljmp
mov
dec
push
push
push
sbb
push
cmpsb
cmp
sub
fiadds
lret
out
out
lcall
scas
inc
pop
dec
bnd
outsl
sbb
sbb
cmp
xor
cltd
in
push
add
inc
push
push
sbb
inc
cmp
das
pop
push
imul
imul
hlt
add
fidivl
jmp
sbb
inc
cmp
es
ss
push
jnp
push
out
testb
mov
xchg
jmp
sbb
inc
cmp
es
ss
push
jnp
imul
aad
mov
mov
cmpsb
popf
lds
adc
jnp
push
popa
movsb
in
js
outsb
cs
ja
loopne
loopne
push
cmp
das
mov
mov
mov
dec
ss
cli
repz
loope
mov
cmp
icebp
lret
mov
rolb
mov
sub
pop
in
jae
in
int3
mov
jecxz
mov
cmp
daa
xchg
push
push
test
push
jge
pop
leave
dec
pop
jae
mov
addr16
daa
jge
cs
sub
sbb
hlt
ret
les
movsb
cli
sub
sahf
dec
inc
pop
stos
testb
or
mov
or
icebp
push
loop
fwait
mov
ss
mov
fwait
inc
sti
xchg
adc
sbb
inc
cmp
es
ss
push
jnp
imul
testb
lods
add
adc
push
sbb
aas
imul
xchg
xchg
mov
xchg
scas
testl
jae
dec
inc
sbb
inc
sub
inc
xchg
xchg
stc
mov
mov
cld
mov
add
push
arpl
dec
push
jnp
imul
testb
jmp
sbb
inc
cmp
es
ss
push
jnp
imul
testb
jmp
sbb
and
push
sub
imulb
mov
cmp
pop
sti
and
mov
fsub
inc
in
in
inc
adc
push
xchg
faddl
fs
repnz
or
sarl
mov
mov
lahf
cli
fs
adc
stos
and
push
adc
inc
mov
lret
xor
dec
repz
scas
mov
xor
jne
mov
push
push
xor
aam
sub
xor
dec
push
cmpl
loope
stos
and
mov
push
stos
sbb
repnz
movb
dec
push
push
icebp
cli
ja
inc
or
cmp
add
or
das
pop
leave
insl
jmp
mov
call
test
and
popf
push
mov
xor
xor
scas
movsl
imul
xchg
fwait
push
in
add
cwtl
imul
fldl
mov
push
fcoml
mov
dec
iret
hlt
aaa
scas
fbstp
jle
mov
push
out
bound
dec
xchg
sahf
loopne
mov
lret
cmp
out
mov
sti
cs
sbb
mov
inc
mov
mov
test
imul
xorl
push
arpl
add
pop
adc
arpl
add
or
shll
clc
popa
mov
das
cmp
mov
add
jmp
xor
cmp
pop
cmpsl
data16
mov
fdiv
setno
push
mov
lcall
sub
inc
push
jp
orl
test
sar
test
js
push
arpl
ficoms
pop
fdivs
mov
sub
mov
or
xor
out
repz
ficomps
mov
lods
cmp
ss
imull
mov
sbb
aas
add
jmp
adc
in
pop
aas
fwait
xchg
adc
lahf
fsubr
mov
jno
cmp
test
loopne
popf
inc
outsb
push
fcomps
cmp
out
movsb
outsb
adc
cmp
mov
jb
loopne
push
fildl
add
sub
add
loopne
sbb
mov
int3
cltd
or
test
push
daa
rcll
cld
or
mov
sbb
pop
add
mov
push
test
xchg
out
mov
movsl
in
clc
movsb
mov
js
int3
js
inc
cmp
xchg
cmp
lea
adc
jbe
sbb
and
iret
mov
jo
dec
mov
out
pop
dec
and
or
or
adc
arpl
xor
scas
sub
cmp
mov
push
nop
mov
push
xchg
inc
mov
inc
outsl
test
cmp
fs
mov
or
cmpsb
mov
add
jle
push
les
enter
lahf
xchg
pop
xor
int3
lds
mov
arpl
xor
das
or
pop
and
mov
cmp
mov
mov
jge
mov
loop
cmp
ja
sbb
cmp
in
cmp
fst
repnz
repz
test
pop
lods
mov
mov
mov
mov
mov
sbb
or
push
and
es
sbb
adc
push
pop
fisubl
xor
adc
xor
pop
push
xchg
inc
mov
or
jmp
pusha
and
fistpll
xor
mov
push
loopne
insl
shll
test
int3
mov
adc
cli
mov
xor
adc
sub
or
xlat
jno
adc
insl
mov
inc
pop
rcrl
test
cli
mov
fs
ret
lahf
adcb
fsts
pop
add
inc
sub
icebp
jl
imul
fcomps
and
into
cmp
xchg
ret
pop
shl
stos
out
dec
pop
out
aam
sbb
fildll
lods
nop
ds
pop
xor
scas
pop
jle
loope
insb
push
js
cltd
adc
push
rcrl
outsl
outsl
lea
stos
mov
data16
je
inc
ret
movsb
sti
sub
in
push
repz
out
adc
sub
xor
inc
insl
xchg
add
lahf
and
out
inc
shl
inc
cmp
push
sti
or
adc
loopne
in
flds
testb
lods
sub
push
insb
add
jb
pop
jb
mov
jo
dec
popf
sahf
ljmp
imul
jbe
and
lods
sbb
inc
jbe
jbe
or
jns
ja
call
loop
pop
jmp
sbb
ljmp
sbb
addl
shrb
mov
and
scas
inc
lods
loopne
jp
icebp
repz
jbe
fnstsw
or
jb
loope
mov
or
inc
js
mov
and
mov
mov
sarl
or
jl
jbe
int3
iret
loopne
mov
out
data16
mov
pop
mov
les
sbb
test
lret
sbb
jnp
sbb
aad
sbb
mov
cmp
cmp
mov
xor
les
mov
test
pop
add
mov
xchg
push
rolb
lds
cli
xor
rcll
xchg
addr16
mov
aaa
loope
sub
push
hlt
orl
pop
cmpsb
loope
es
cld
mov
movsb
sub
lods
or
out
cli
xchg
push
or
jmp
inc
stos
pop
stos
jg
mov
xchg
xor
test
xchg
cmp
aam
cmpsb
dec
shll
mov
lcall
pop
std
dec
jns
fucom
inc
in
pop
lods
iret
out
int
adc
repz
icebp
adc
ljmp
jns
fld
jne
jne
sbb
dec
outsb
js
and
or
or
xchg
idivb
aad
or
adc
jno
ret
fcmovne
mov
sub
clc
enter
push
fisubs
jo
push
icebp
pop
cmp
jg
mov
ss
aam
mov
mov
int3
jno
add
cmp
push
push
out
sarl
or
pop
pushf
jp
movaps
add
mov
cmp
cmp
push
mov
add
rclb
dec
sbb
push
jnp
push
push
psllq
dec
cmpb
inc
movsb
dec
sbb
push
pop
xor
sub
xchg
mov
push
divb
pop
stc
sbb
lret
sarl
loop
dec
int
push
jp
pop
cmp
nop
fwait
cli
fidivs
xchg
mov
fmuls
insl
cmc
lds
pop
inc
jmp
fcoms
push
icebp
adc
inc
es
cli
orl
mov
inc
mov
add
in
arpl
jb
pop
dec
push
or
les
push
or
in
fisubs
jb
aas
stc
mov
lods
shr
pop
add
pop
mov
movsl
mov
sbb
jl
js
ret
aaa
jmp
mov
dec
out
test
sbb
push
push
jge
add
xchg
mov
into
xchg
jl
test
test
xchg
fwait
loop
icebp
into
dec
and
mov
sbb
imul
sub
mov
sbb
push
pushf
or
push
mov
add
dec
push
dec
add
ja
aam
adc
pop
pop
test
or
pop
pushl
das
xor
cmp
push
push
push
sahf
sbb
and
std
xchg
lret
fwait
shrb
std
js
jge
adc
add
jns
mov
push
mov
iret
je
adc
sub
aaa
fstl
in
sub
sahf
cmc
in
xchg
fsts
pop
xor
mov
adc
mov
sub
jp
psubusw
sub
int3
cmp
pop
and
rcr
mov
xchg
imul
xchg
cmpl
movsb
enter
cmp
sbb
bound
movsl
xor
sub
clc
hlt
inc
jmp
pop
shll
dec
jnp
subb
jp
xor
sar
push
jp
setno
mov
repnz
icebp
inc
push
push
rcr
dec
negl
pop
arpl
dec
decb
rcl
sub
pop
push
lahf
push
fldt
lods
iret
mov
ljmp
push
jo
or
movsl
mov
and
xchg
jae
mov
dec
stos
push
bound
sub
and
ljmp
jle
pop
lcall
ja
mov
lcall
lock
popf
enter
out
inc
inc
dec
repz
shl
data16
mov
xor
fucom
pop
sarl
push
mov
mov
push
popf
dec
inc
push
fsub
inc
push
or
mov
ret
adc
lods
les
push
jno
inc
pop
mov
mov
xlat
pop
xchg
push
test
fimull
inc
mov
pushf
test
cld
and
insb
mov
popf
mov
pusha
sahf
pop
ret
movsl
xor
xchg
and
mov
jno
push
fisttpll
jb,pn
cltd
ds
mov
popf
push
daa
inc
dec
rcr
xchg
incb
cmpsl
mov
hlt
cmp
xchg
sbb
cmc
jmp
push
xor
or
mov
xor
std
test
push
dec
inc
pushf
cmp
insl
push
sbb
dec
xchg
pop
and
cmpsb
sbb
inc
cmpsl
mov
mov
fistps
xor
repz
or
pop
push
cmc
and
xchg
add
adc
or
arpl
adc
push
cmp
divl
adc
icebp
mov
or
or
cmc
mov
out
pop
push
int3
add
fnstcw
aas
arpl
mov
xorb
fs
mov
lret
repz
xor
in
xchg
shrl
jmp
and
and
pop
add
mov
cmp
sahf
xchg
mov
sub
pop
xor
mov
daa
fstpl
jmp
cmpsl
cmp
jge
mov
mov
cmc
mov
ret
mov
repz
push
mov
test
stos
sbb
insb
sub
jae
popf
or
insl
movsl
popf
jne
add
aad
imul
outsl
es
push
xor
jmp
pop
std
push
data16
adc
out
adc
scas
fcoml
out
pop
lret
mov
push
nop
fnsave
ficoms
pop
call
xor
and
mov
in
xchg
mov
cmpsb
aas
pop
scas
clc
jmp
push
pop
xor
jp
push
xchg
test
cmp
xor
sti
pop
add
pop
scas
cmp
cmc
pop
std
mov
or
push
pop
loopne
adc
add
es
lcall
mov
cmp
bound
popw
pop
push
push
das
jb
ljmp
cmp
outsl
push
in
outsb
jns
lret
aas
pop
ror
mov
jbe
fidivrs
and
jns
xchg
adc
jnp
scas
data16
inc
push
fucomp
in
mov
fstpt
pushf
jbe
jno
arpl
arpl
shlb
adc
mov
xchg
pop
mov
xor
int
pop
jle
and
fmull
cld
js
pop
xchg
add
cmp
push
mov
adc
pop
push
popa
ja
or
xor
es
enter
cmp
push
cmp
and
cmpsl
lret
sub
std
mov
or
inc
ljmp
jp
pop
inc
gs
pop
jae
xor
outsb
repnz
push
insb
add
push
xorl
or
leave
add
and
or
mov
in
call
and
ds
xor
cmp
imul
xorl
movsl
jns
stos
inc
in
dec
pop
hlt
ja
xchg
add
mov
pop
cmp
cmpsl
ret
scas
je
shlb
mov
mov
mov
jmp
mov
std
xchg
mov
push
xchg
and
cmp
rcll
add
call
cwtl
ret
mov
xor
das
stc
std
jecxz
and
xchg
mov
pop
lock
dec
dec
in
pop
adc
mov
sub
repz
fucomi
xor
add
ffreep
test
xchg
lret
mov
pusha
mov
mov
inc
pusha
call
pop
jecxz
jl
add
push
int3
push
andb
lods
pusha
nop
ss
lret
pop
sbb
outsl
xorl
cmc
adc
cmp
rcrw
cmp
movsl
mov
int
iret
dec
popf
inc
jno
lahf
add
add
mov
out
mov
inc
or
mov
pop
xor
mov
fwait
xchg
push
adc
cltd
jns
and
sub
daa
push
xor
or
or
adc
jo
pusha
stc
sub
cmc
add
aam
std
ljmp
pop
pop
pop
sub
ret
jbe
and
insl
dec
es
test
sub
sahf
fs
and
jae
dec
mov
or
lahf
test
and
or
push
pop
push
out
inc
push
lods
hlt
push
loop
or
lret
and
add
mov
inc
sbb
jo
xchg
pop
insl
sbb
ret
int3
mov
dec
clc
mov
mov
or
sub
pop
aas
sbb
daa
adc
icebp
mov
icebp
xchg
cmp
dec
loop
cmp
pop
cltd
or
jb
rolb
stc
adcl
movsl
jle
push
push
pop
imulb
gs
scas
movsl
cmp
mov
mov
shl
xchg
pop
nop
push
xchg
sbb
mov
cvtdq2ps
mov
pushf
sbb
fs
mov
push
push
dec
jl
jl
ds
adc
pop
addr16
fists
fimuls
xchg
jnp
xor
pop
dec
ss
aad
pop
stos
mov
xor
or
inc
cmp
aaa
adc
mov
imul
adc
mov
adc
pop
pop
mov
jnp
jbe
nop
clc
stc
cmp
cltd
sub
hlt
lods
sub
mov
mov
and
dec
je
fisubl
adc
mov
mov
aad
loop
sub
inc
adc
test
mov
in
nop
cmp
jb
mov
or
sub
push
mov
sub
inc
jne
test
sahf
aad
mov
cmp
adc
jbe
adc
mov
mov
shlb
out
jecxz
setge
popf
in
adc
lahf
jmp
inc
cmp
sbb
lods
test
inc
fwait
and
ss
stos
shlb
pop
jo
ds
ret
jb
mov
popa
cli
jb
lret
jl
lods
testl
imull
cwtl
dec
pop
out
push
sti
sub
fstpt
fwait
and
sbb
jle
sub
aam
ljmp
repnz
mov
xlat
insl
je
mov
and
push
mov
pop
sti
inc
scas
jg
mov
or
mov
xchg
sahf
jg
subl
lods
movsl
test
jecxz
mov
xor
push
or
cmp
adc
ljmp
nop
push
test
adc
loop
and
cld
push
loope
adc
inc
cmp
jbe
js
or
fistpl
sub
loop
adc
in
mov
lret
and
ret
ror
fcmove
jno
push
cmp
sti
popf
xor
sub
sbb
inc
xchg
xchg
lret
inc
mov
xor
sub
jns
lcall
mov
ss
cmp
insb
shlb
or
cmc
mov
sbb
jb
sahf
lds
adc
sub
add
int
daa
pop
inc
sbb
jbe
sbb
mov
aas
pcmpgtd
out
mov
rcrl
test
fxtract
add
xor
shr
dec
xor
push
scas
jne
insl
add
les
adc
adc
mov
ss
cmp
push
outsb
pop
loope
aas
leave
and
in
aad
add
push
inc
arpl
push
jmp
push
sbb
bound
stos
sbb
jg
xchg
lcall
repnz
xchg
jecxz
icebp
add
jnp
lret
pop
push
cmp
test
push
adc
cmp
imul
push
out
sbb
out
push
adc
jne
or
inc
in
lret
fisubrs
iret
arpl
dec
pop
sahf
gs
imul
dec
or
mov
aam
lret
jnp
pop
ret
int
into
rcl
addr16
fmull
pushf
sar
mov
inc
xor
add
sbb
mov
dec
mov
sarl
cmpsl
test
or
add
ret
jo
out
pop
or
add
in
push
pop
cmp
addr16
or
mov
inc
jno
lds
jne
movsb
dec
ss
in
xor
add
adc
daa
cmc
mov
push
dec
add
xor
mov
loop
incb
je
pushf
or
mov
cmpsb
clc
mov
in
mov
dec
lahf
in
lcall
daa
adc
pop
push
lods
sbb
add
push
lret
inc
es
add
sbb
rolb
or
xchg
fst
push
push
test
mov
jne
mov
sbb
sub
add
js
cmp
add
mov
pop
dec
movsb
not
loop
popa
outsb
mov
sbbl
rcll
adc
nop
ljmp
ja
sub
push
pusha
daa
addl
push
sub
int3
dec
jne
les
out
mov
mov
push
popa
inc
mov
xchg
xchg
dec
sbb
mov
xor
or
hlt
dec
loop
fsubrp
fiaddl
mov
and
gs
xor
cwtl
inc
aad
xor
dec
or
out
jno
inc
and
js
cmp
pop
dec
call
jae
mov
mov
repz
sub
and
cmp
lahf
iret
icebp
mov
fsubp
jle
inc
dec
arpl
cltd
push
js
or
std
or
dec
ljmp
call
repz
lods
fidivrs
test
inc
push
pop
nop
lock
push
cmp
outsl
stos
mov
lret
cmp
and
leave
fsubrs
adc
outsl
enter
xchg
xor
daa
fsubl
or
add
int3
sahf
add
sbbb
in
xor
lods
or
mov
xchg
mov
adc
ljmp
xchg
insl
es
loopne
mov
popf
out
iret
dec
pop
jle
testl
jg
fwait
dec
xchg
mov
xchg
ss
adc
sub
push
xor
lret
sbb
lock
adc
movsb
dec
in
fdivrp
inc
mov
addr16
andl
leave
les
in
jne
mov
loop
inc
cltd
inc
dec
fimuls
rclb
dec
add
daa
in
sbb
mov
xchg
lret
loopne
mov
addl
hlt
mov
test
loopne
xchg
mov
cmpsb
mov
leave
push
out
lods
loopne
jmp
shl
pushf
xor
adc
arpl
popa
cmp
lcall
pop
bound
inc
iret
push
cld
scas
outsl
in
sub
lcall
push
dec
mov
mov
leave
mov
adc
or
dec
shrw
ret
pushf
and
stos
pop
and
gs
sub
imul
push
insb
mov
iret
cmpsb
sub
jl
cltd
jg
jne
adc
mov
or
mov
stos
sti
nop
loope
cs
mov
clc
pop
push
fwait
test
addl
mov
sbb
dec
decl
adc
mov
fmul
aas
stos
push
fs
xchg
and
dec
fnstcw
pop
arpl
adc
movsb
insl
jno
adc
adc
push
push
mov
cmp
pushf
sub
cmp
mov
mov
add
adc
push
mov
ljmp
scas
scas
arpl
imull
or
cli
loope
adc
insb
scas
sub
mov
cs
sbb
call
sub
call
dec
out
add
inc
int
inc
stos
enter
je
test
sbb
inc
or
xchg
xchg
int3
mov
jne
cwtl
jne
mov
and
lahf
bound
stc
jbe
test
movsb
mov
les
test
lds
sbb
mov
pop
je
out
mov
sbbb
add
pop
test
inc
adc
cmp
adc
inc
xor
int
sub
addr16
inc
pop
adc
pop
push
dec
imul
call
les
push
int
shrb
jecxz
sbb
aam
and
lds
movsl
sub
mov
imul
jge
divb
out
enter
add
and
lret
lret
btr
mov
hlt
in
add
rorl
mov
pop
pop
sbb
fs
lods
into
fstpl
mov
jbe
xchg
popf
fidivl
push
jg
mov
xorb
push
idivl
pop
mov
in
es
pop
sub
je
sub
add
imulb
cltd
cmp
mov
int
je
jns
push
sub
pop
ss
push
jnp
imul
testb
jmp
sbb
inc
cmp
es
ss
push
jnp
imul
testb
jmp
sbb
inc
cmp
es
aaa
dec
push
jnp
imul
testb
jmp
sbb
inc
cmp
es
ss
xchg
stos
sbb
push
ds
add
adc
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
roll
rcll
and
xor
inc
lods
jae
int
xchg
jno
popa
mov
ret
add
and
and
roll
rcll
and
xor
arpl
xchg
jno
outsl
mov
scas
xor
xor
and
enter
jmp
inc
cltd
push
test
andl
rcrl
rclb
xchg
outsb
test
jbe
mov
dec
xchg
xor
arpl
clc
xlat
pusha
mov
lret
sbb
adc
jg
mov
inc
adc
aam
push
xlat
inc
ret
adc
xor
fisubs
add
xor
cmp
mov
jecxz
std
shll
and
inc
shll
cmp
lds
adcb
mov
insb
inc
daa
sahf
push
out
ret
add
xorl
mov
cld
or
push
jl
fbstp
xchg
mov
nop
add
into
jecxz
or
mov
push
jae
inc
sbbl
xchg
int3
rorb
cmpsb
push
ret
push
xorb
and
sbb
fcoms
icebp
and
xor
arpl
xchg
imul
and
xchg
and
cmp
and
sub
adc
dec
mov
sahf
inc
xchg
xor
das
sbbl
adc
and
jno
and
adc
inc
pushf
mov
lods
pop
popf
push
mov
insl
adcl
addl
mov
add
xor
and
roll
rcll
and
xor
arpl
xchg
jno
popa
mov
ret
add
xor
and
roll
out
jnp
into
xchg
icebp
std
aaa
test
xchg
pop
jg
gs
lahf
gs
mov
sub
mov
and
orb
fists
inc
push
and
pushf
or
rcrl
and
push
movsl
push
rorb
jns
pop
nop
test
fsubrl
loop
dec
mov
shl
out
cmp
and
inc
inc
leave
mov
xchg
data16
js
sbb
nop
loope
xchg
hlt
fstpl
outsl
call
add
inc
add
je
mov
dec
dec
out
jecxz
and
aaa
pop
pop
lods
dec
jmp
jbe
stos
push
jg
inc
and
pop
xchg
ret
mov
scas
add
push
mov
sbb
pop
lea
dec
push
mov
pop
mov
xlat
pop
and
mov
enter
jecxz
sbb
hlt
lahf
cli
dec
es
mov
add
ds
testb
fwait
das
cmp
push
sub
lds
sarl
and
outsl
imul
pushf
fwait
lret
notb
rcl
fldcw
add
adc
jecxz
hlt
adc
leave
lock
push
lret
lds
lods
and
push
cwtl
stc
or
and
mov
xchg
jmp
jns
push
jnp
xor
test
push
les
jle
jl
jnp
stos
pop
popa
sub
xchg
jb
xchg
add
xor
data16
push
sub
mov
adcl
out
ficompl
or
lret
cmp
xchg
aaa
test
clc
xchg
aaa
loopne
cld
lock
insb
mov
sub
adc
mov
sub
jge
test
adc
out
stos
cmp
cwtl
mov
add
and
dec
sub
lahf
out
cltd
sbb
add
fs
rorb
stos
cli
adc
xor
cmp
sub
mov
sub
mov
mov
or
jbe
icebp
mov
cld
add
rcl
push
push
mov
nop
push
xor
lcall
andl
shrl
add
lds
push
mov
push
out
jnp
jae
cmpsb
cmpsl
lret
push
push
mov
int
sub
inc
in
das
jae
inc
out
out
idivb
sti
shrl
and
mov
inc
dec
insl
jmp
scas
add
mov
or
inc
mov
jnp
push
dec
sbb
lahf
fmull
adc
lea
sub
lret
loope
adc
stc
insl
adcb
mov
fwait
mov
sbb
pop
sub
or
mov
mov
inc
xlat
push
pop
insb
xor
inc
iret
cmc
dec
dec
sbb
orl
rorl
pop
lods
xor
dec
and
xchg
outsl
ficomps
popf
pop
xchg
fs
inc
xchg
add
es
and
sarb
or
cmpsb
mov
pop
sub
push
mov
xor
out
jno
mov
jmp
lock
jge
mov
or
mov
ss
call
sbb
fiaddl
or
sti
dec
je
cmp
insl
dec
std
pop
stos
cwtl
icebp
ja
sti
incb
mov
nop
test
jnp
xchg
stos
and
popf
xchg
cmp
negl
pop
push
or
lods
xchg
xlat
and
sub
repnz
mov
shr
inc
push
dec
mov
sub
inc
xor
pop
mov
adc
stos
and
in
divps
pop
in
mov
pop
lahf
adc
lcall
mov
xchg
mov
or
mov
pop
sbb
inc
test
daa
xchg
arpl
popa
push
ds
or
std
push
lock
lock
xor
aam
xchg
jmp
add
inc
xchg
xlat
mov
push
inc
pop
aad
mov
cmp
imul
ljmp
nop
mov
dec
scas
out
jmp
lds
push
push
add
je
add
adc
xchg
repz
jle
xor
add
adc
lcall
mov
sbb
movl
or
jecxz
xor
push
cmp
lea
inc
sbb
repnz
or
inc
out
inc
std
xchg
mov
scas
sub
stc
jge
xchg
push
inc
jo
aad
test
xchg
sbb
mov
lcall
mov
mov
inc
rcrb
and
mov
cmpsl
xchg
and
cwtl
jp
xorb
mov
adc
jle
xchg
add
movsb
mov
xlat
cmc
add
fcmovbe
mov
mov
sbb
push
decb
cmp
inc
dec
out
push
mov
mov
xor
cmc
testb
jns
cmp
xchg
xchg
mov
sbb
loope
sbb
push
mov
lock
sbb
insl
enter
add
jecxz
jl
dec
push
or
bound
xchg
dec
pusha
jbe
xchg
lcall
daa
push
dec
and
ja
xchg
sub
idivl
mov
sti
xorb
testl
or
xchg
lcall
aad
mov
and
or
xor
pop
push
movsb
xor
aam
jmp
clc
arpl
cwtl
push
out
sbb
gs
scas
adc
push
mov
and
mov
repnz
cltd
xor
roll
sbb
mov
mov
divl
mov
cli
jnp
pop
or
mov
ljmp
addl
pop
cmpsb
pop
xor
or
dec
add
pushf
iret
adc
sbb
dec
ss
fidivs
jnp
orb
adc
mov
lcall
xor
mov
arpl
and
xor
pusha
cli
fs
sarb
or
or
xor
add
jns
cmpsb
lods
sub
or
push
jno
cmpsb
jnp
ror
std
test
pop
popf
xchg
mov
add
dec
adc
mov
push
pop
add
mov
sbb
and
js
popf
mov
negl
int
adc
and
int
icebp
jle
cwtl
xor
sarb
jo
lock
lods
add
lret
addr16
cmp
mov
outsl
mov
cwtl
xchg
popf
jne
mov
cltd
imulb
cmpsl
dec
test
inc
sbb
stc
rorb
jbe
stos
aam
xor
imul
dec
cmp
jnp
add
xor
xchg
mov
mov
bound
ss
outsb
call
fmull
pop
xchg
js
xchg
dec
inc
push
xlat
mov
mov
pop
and
xchg
jge
nop
insb
push
xchg
or
cmp
push
pushf
jg
jg
fiaddl
push
jb
mov
cmp
lcall
stos
lds
sub
and
push
je
add
pop
insl
dec
push
dec
xchg
xchg
test
lahf
mov
lret
arpl
xor
mov
loope
mov
cmpsl
xchg
sbb
add
je
or
adc
jg
sub
insl
xor
xor
xor
push
pusha
loopne
sub
mov
out
xor
in
stos
fcomps
push
test
xor
push
pop
xor
cmp
cld
fistps
pop
lahf
lds
shl
inc
sub
roll
testl
xor
sbb
cmc
shll
or
jmp
imull
out
xor
addr16
call
add
inc
ljmp
call
xchg
adc
push
inc
pop
call
jmp
pop
jno
cmp
rcrl
jmp
xchg
xlat
ljmp
cmc
dec
xchg
add
testl
outsl
ds
loopne
jle
dec
pushaw
sbb
mov
call
xor
mov
jl
daa
lahf
mov
nop
mov
push
in
mov
stc
mov
mov
cli
fmul
dec
aaa
inc
cmp
repz
ja
mov
in
mov
pop
dec
out
mov
in
gs
cmp
into
les
outsl
sub
test
jmp
cli
mov
pop
pop
cmp
mov
cli
pop
and
mov
iret
cmp
loopne
les
jecxz
jns
and
mov
in
in
cmp
cli
xchg
ret
call
stos
adc
cs
daa
movsl
mov
sub
das
push
xor
and
lods
stos
dec
pop
xor
mov
sti
xchg
cmp
jl
stos
pop
push
cld
mov
in
mov
leave
mov
gs
imul
mov
xlat
sbb
xchg
xchg
xchg
movsl
leave
sbb
fwait
add
mov
inc
cwtl
loopne
scas
adc
ja
push
add
test
xchg
test
add
jns
xchg
cmovs
inc
jns
xchg
call
jecxz
xchg
lods
and
shll
sbb
pop
push
iret
pop
xchg
dec
cltd
mov
and
movsl
xor
shll
ja
mov
cmc
add
add
aas
je
shrl
and
jne
stos
out
std
cmp
mov
dec
or
adc
dec
js
and
push
xchg
push
push
xchg
add
incl
les
mov
push
lock
aas
dec
xchg
les
rorl
lods
cwtl
int
shll
mov
sahf
leave
and
mov
xlat
xchg
mov
add
jnp
ljmp
mov
repz
xchg
int3
out
sbb
jge
sbb
rorb
es
popa
and
lds
int3
loop
jno
les
push
inc
adc
mov
xchg
sti
fcmovne
decb
shlb
int
sub
and
or
dec
mov
orb
push
push
jecxz
jbe
insb
cmp
cmp
cmp
or
cwtl
mov
insb
lahf
xor
imul
dec
cmp
repz
mov
mov
mov
inc
rorb
scas
aaa
pop
orb
fistpl
notl
cmp
arpl
push
push
addl
mov
repnz
push
fs
push
cli
xchg
inc
loope
into
push
bound
inc
inc
push
pop
mov
cmpl
out
insb
xchg
sub
xchg
into
and
jecxz
cmpl
cwtl
cld
fs
out
repz
fldenv
mov
cltd
adc
js
cmpb
xlat
ret
mov
mov
inc
lret
xchg
stc
mov
xchg
mov
mov
test
inc
pop
adc
jle
sub
jae
lahf
mov
dec
mov
sub
and
xchg
loop
xchg
nop
leave
and
dec
aaa
ror
xchg
adc
out
lea
das
aad
sub
mov
jmp
mov
adc
ds
stos
cmp
cmp
aad
lahf
bound
cmp
pop
add
mov
enter
bound
cmc
dec
loopne
fsubp
xor
mov
loopne
sub
call
cli
movsl
pop
outsl
add
insl
mov
and
inc
scas
cmp
mov
inc
cmp
mov
lea
inc
pusha
sti
push
imul
adc
inc
xor
imul
xchg
mov
xlat
mov
dec
jns
cmp
mov
inc
outsb
mov
std
jae
push
loopne
pop
fmuls
rclb
push
push
push
lock
pop
add
cltd
andb
rolb
xchg
ss
shll
daa
inc
pop
hlt
fsubl
sti
jbe
or
nop
stos
dec
mov
int
fimuls
pop
xor
out
stc
cmp
das
adc
in
sub
push
jne
jg
inc
aam
or
dec
clc
fiaddl
or
scas
cmp
sbb
enter
fs
xchg
shrb
ret
stos
jbe
xor
daa
mov
shll
aam
jbe
xlat
les
jmp
sub
sbb
insl
dec
sbb
push
mov
add
push
mov
cmp
fdivrl
cwtl
jecxz
jge
cs
stos
hlt
ret
inc
xor
jns
add
fisubs
adc
mov
icebp
mov
pusha
mov
inc
pop
fisubrl
in
sahf
xchg
xchg
inc
clc
pop
jne
inc
mov
aad
stos
xchg
outsl
addb
jp
xchg
lret
out
movsl
mov
fxch
mov
pop
cmp
cmp
inc
adc
mov
xlat
scas
mov
cld
clc
insb
cs
add
call
mov
jne
jne
movsb
fidivl
add
les
jl
out
push
xor
cld
sub
frstor
arpl
jle
aaa
mov
xchg
and
xchg
sub
cmpb
fiaddl
or
mov
imul
cmpsb
pop
stos
andb
loopne
push
es
or
popf
jecxz
or
push
adc
adc
gs
sub
lds
dec
jle
es
pop
and
lods
push
enter
rclb
or
jecxz
mov
mov
push
add
sub
push
mov
push
push
sub
mov
fsts
mov
xor
push
into
mov
xor
inc
jbe
dec
mov
and
repnz
mov
jl
xor
push
pop
or
add
clc
sub
jle
aas
sbb
inc
das
lret
cltd
push
jmp
std
and
dec
lret
jo
test
imulb
ljmp
out
ret
sub
lds
sub
fidivrl
jmp
addr16
xchg
push
mov
mov
mov
inc
mov
arpl
adc
jns
and
rcl
inc
out
sbb
inc
or
in
xchg
in
push
lea
fwait
push
gs
ja
aas
jns
addr16
adc
int
or
mov
loopne
lods
xor
outsl
jno
jmp
mov
icebp
lea
ljmp
adc
enter
mov
ss
sub
adc
mov
lods
mov
rcrl
cmp
adc
std
movsl
pop
adc
pop
push
sti
icebp
aas
fsubrs
dec
sbb
push
xchg
pushf
push
cltd
icebp
cmp
scas
insb
lods
das
pop
dec
sbb
mov
sti
jo
xchg
xchg
dec
scas
bswap
add
int3
es
jmp
lcall
sti
fdiv
pop
cmp
shrb
lahf
leave
mov
dec
sbb
cli
filds
in
mov
mov
arpl
mov
shlb
popf
lcall
sub
sbb
cmp
xor
jg
dec
daa
fstps
nop
jle
in
jnp
scas
mov
lock
cltd
xorl
shl
dec
cmp
pop
pushl
push
pop
dec
repz
dec
divl
xchg
in
out
mov
dec
cs
scas
das
cli
daa
inc
aam
insl
movsb
ds
shlb
push
imul
es
mov
mov
dec
adc
or
mov
ret
dec
dec
pushl
lret
shlb
jecxz
lahf
loope
andb
jp
shrb
lcall
cmp
xchg
inc
dec
dec
push
mov
adc
sub
in
add
mov
pop
imul
pop
loope
loope
stos
fldenv
pop
inc
cmp
or
cwtl
lods
dec
js
or
bound
lret
popf
inc
lock
xor
mov
jge
or
mov
xor
lds
push
inc
pop
lret
mov
mov
cmp
iret
push
insl
adc
aam
xchg
jg
push
js
ss
lods
out
flds
out
mov
push
test
add
pop
dec
aad
mov
cwtl
mov
adc
pusha
jl
inc
pop
push
mov
je
daa
pop
pop
cli
dec
mov
mov
push
push
jnp
inc
movsb
fdivrs
pop
ror
cld
cld
adcl
sub
jne
int
dec
add
xchg
lods
mov
outsl
xchg
lds
fwait
jp
pop
sub
adc
mov
sub
push
sub
jns
hlt
cmpsl
fwait
orl
sbb
cmp
ret
dec
push
into
jae
adc
pop
pop
ret
out
mov
inc
xchg
jae
test
push
inc
add
jecxz
inc
sbb
sbb
adc
addr16
vminps
inc
insb
loop
sub
xchg
push
mulb
stos
jle
mov
mov
cmp
or
adc
into
inc
repnz
ljmp
fistl
lret
adc
aad
cltd
xchg
les
dec
leave
in
ja
push
mov
mov
adc
dec
push
pop
jno
sbb
pop
call
andb
sub
dec
loop
jns
daa
into
lret
jb
sub
adc
jns
sbb
aaa
push
adc
stos
mov
xchg
pop
jb
jge
out
and
clc
dec
pushf
xorl
or
les
xor
cwtl
mov
inc
push
clc
mov
cmpsb
mov
add
inc
sbb
int
add
leave
xchg
sarl
cmpsl
dec
push
ds
lea
cmc
fstl
popa
icebp
mov
stc
sar
cmp
jo
je
sub
xchg
iret
scas
in
cmp
sti
shlb
jnp
mov
jmp
scas
pop
stos
add
mov
cmp
dec
add
je
push
push
mov
sub
repnz
xsave
scas
push
sbb
fimuls
mov
push
fidivrs
std
dec
and
push
mov
cmp
sbb
popa
iret
inc
lods
into
aas
adc
jmp
lcall
inc
or
and
sbb
lret
fdivs
mov
cmpsb
dec
xor
mov
pop
pop
enter
inc
sbb
dec
imul
adcb
mov
or
cwtl
mov
hlt
pushf
orl
dec
mov
sub
test
shll
and
inc
xchg
dec
in
addr16
push
sub
sub
orl
jle
xor
sbb
adc
cwtl
daa
mov
jb
sub
lahf
icebp
xchg
xchg
cli
add
sbb
fs
in
gs
rcrb
xchg
test
and
jge
or
jae
mov
inc
jmp
push
mov
std
sbb
cmp
inc
loope
fistl
lods
add
imul
enter
mov
rcrb
outsb
jmp
jo
fcoml
mov
insl
lahf
fistl
add
xchg
pop
jle
pop
inc
dec
mov
inc
push
adc
sub
push
push
into
ja
sbb
fcoms
mov
or
leave
dec
cmp
xchg
shll
and
xor
mov
dec
jg
pop
xchg
cmp
lcall
mov
shrl
mov
or
fadd
sbb
out
push
mov
clc
cmpsl
and
xchg
add
push
scas
pop
popf
lret
and
in
cmp
sub
into
out
shlb
aam
pushf
jge
mov
sub
sti
and
ljmp
xor
int3
mov
or
mov
dec
rorl
popa
xor
mov
add
adcl
fmul
sbb
lods
repnz
mov
or
mov
inc
out
idivl
test
or
add
lret
inc
test
xor
dec
sbb
call
out
add
enter
fsubs
lret
push
cmpsb
push
hlt
sbb
inc
dec
scas
loopne
ret
dec
xor
jecxz
or
fucomp
add
pop
es
addl
push
inc
jae
sbb
add
es
push
pop
xorl
test
mov
jnp
mov
in
push
push
lret
jecxz
mov
pop
push
iret
aam
sbb
in
push
stos
push
jb
test
daa
mov
imul
clc
outsl
push
fisttpl
hlt
xchg
cmp
lret
test
lcall
mov
lret
ret
jl
test
gs
sub
lcall
test
sbb
sbb
pop
fsts
lock
mov
jp
push
stc
je
jp
out
cld
cmp
pop
and
pop
pop
pop
push
add
mov
icebp
xor
inc
outsl
lds
mov
rolb
jle
push
inc
dec
insb
inc
push
push
jnp
into
out
std
test
push
mov
push
fsubs
and
cli
adc
xchg
sub
dec
xor
imul
xchg
adc
xor
and
or
cmpsb
push
fstl
adc
adc
or
cmp
mov
test
jmp
sbbl
mov
mov
dec
mov
icebp
jp
jmp
je
int3
mov
lahf
out
mov
push
xor
decb
dec
pop
leave
test
dec
aam
sbb
dec
pushf
inc
outsl
sbb
mov
or
jns
pusha
adc
jp
mov
stos
mov
cmp
mov
pop
and
dec
xchg
cmp
inc
pop
jmp
test
rorb
sub
mov
jmp
frstor
mov
cmpsb
sub
mov
add
rolb
mov
mov
mov
fsubrl
lcall
adc
in
dec
dec
cmp
je
jns
xor
xor
adcb
sub
mov
lock
add
aaa
mov
sbb
jmp
push
mov
cmp
mov
jo
jns
popa
outsl
inc
jae
out
hlt
or
shl
pushf
adc
push
in
adc
mov
outsl
pushf
arpl
rorl
adc
and
xor
arpl
xchg
jno
popa
mov
ret
add
xor
and
roll
rcll
and
xor
arpl
xchg
jno
popa
mov
ret
add
xor
and
roll
rcll
and
xor
arpl
xchg
jno
popa
mov
ret
add
xor
and
roll
ret
adc
and
xor
arpl
jae
cmpl
dec
mov
sbb
or
lahf
mov
test
xchg
pusha
fbstp
sub
xor
imul
xchg
stos
in
cmc
lret
lds
sbb
sub
je
inc
jnp
imul
jmp
sbb
ret
sbb
sub
popa
pop
dec
or
sub
aad
mov
leave
call
or
idivb
sub
nop
int
int3
jns
rclb
mov
test
movsl
cwtl
cmp
iret
test
or
add
adc
in
idiv
les
jnp
dec
and
lock
sub
mov
int3
loop
pop
stos
aaa
hlt
xor
or
mov
sbb
sbb
ljmp
scas
xchg
lods
jne
movsl
mov
push
stos
ror
sti
sub
sahf
pop
jmp
les
loopne
movb
dec
jbe
inc
loope
mov
xor
pop
sub
fistl
pop
enter
inc
fs
lret
jnp
xchg
jle
and
dec
lret
in
adc
movsl
xor
movsl
xchg
push
add
mov
test
subb
sti
int3
jns
sbb
pop
jge
insl
movsl
inc
arpl
fwait
shl
loopne
icebp
movl
pop
xor
dec
or
and
wrmsr
add
enter
mov
fsubs
jp
jle
imul
xor
call
xchg
popf
xchg
cmc
lret
jmp
sbb
sub
jne
inc
jnp
imul
xchg
stos
in
cmc
lret
jmp
sbb
sub
jne
inc
jnp
imul
std
inc
lret
dec
add
sbb
xchg
push
mov
xchg
test
or
pop
je
jmp
push
sbb
cmp
stc
movsb
push
or
pop
loope
es
mov
mov
ret
jmp
mov
adc
mov
jg
imul
mov
int3
ficompl
lahf
es
loopne
adc
icebp
jne
pop
clc
cwtl
inc
add
js
repnz
in
mov
mov
push
int3
mov
jmp
mov
or
gs
mov
clc
outsl
fstl
push
loop
inc
cmc
movl
mov
pop
add
daa
mov
nop
dec
mov
das
mov
insl
enter
hlt
les
test
in
sbb
js
adc
outsl
mov
sub
mov
xchg
or
repz
adcb
push
idiv
jno
cmp
dec
jo
popf
test
test
das
mov
test
and
lods
cmc
cmp
jecxz
pop
lods
pop
cmp
pop
dec
or
pop
pop
fcos
cli
mov
icebp
fimuls
mov
mov
pop
repz
daa
xor
jp
push
add
and
dec
add
daa
sahf
lods
or
jp
mov
pop
lock
popa
in
xchg
addb
repz
or
and
mov
or
das
sub
jne
push
fdivl
inc
pop
xor
cmp
lods
sarb
out
cmp
mov
fwait
mov
pop
pop
mov
arpl
xchg
es
inc
inc
jp
cmp
inc
imul
or
clc
clc
sub
add
loope
jle
aad
ds
pusha
dec
jno
mov
jg
mov
xor
out
into
loope
movsb
xor
sbb
mov
icebp
call
push
divl
adc
jns
push
adc
repnz
and
pop
ret
inc
or
push
pop
push
dec
lock
jl
jmp
bound
popa
mov
jb
cmp
sub
mov
decb
or
movsl
mov
xor
pop
imul
mov
and
or
cli
xchg
inc
push
pop
or
cmp
aaa
jl
outsb
xchg
fs
ds
mov
or
fs
mov
daa
pusha
orl
dec
cwtl
jae
or
mov
or
push
test
addr16
push
das
testl
out
shll
bound
in
pop
fiadds
movsl
mov
xor
insb
lcall
pop
stos
sub
xorw
push
mov
fistps
js
ret
xlat
popa
js
rcll
arpl
push
jno
arpl
mov
int
test
popf
add
addr16
cmp
in
arpl
add
xchg
mov
jmp
vunpcklps
xchg
and
jg
xlat
adc
pop
movsl
lahf
pop
sbb
xchg
leave
stos
mov
lds
les
sbb
add
sbbb
pop
jp
or
jl
pop
fisttpll
or
sahf
sti
mov
sbb
arpl
jns
mov
adc
fnstsw
xchg
lea
sti
jge
sti
aam
mov
and
fcoml
mov
add
inc
sbb
add
inc
mov
mov
lret
adc
sbb
dec
loope
mov
out
pop
inc
push
add
ss
cmpsl
lds
mov
xlat
test
negb
inc
pop
in
dec
cwtl
int
jnp
add
mov
adc
xchg
jge
loopne
shlb
shlb
or
jp
pop
insb
xor
data16
das
and
push
dec
in
mov
cmp
sbb
xor
xor
repz
push
ss
pop
and
and
push
cmpl
addr16
push
jne
sahf
popf
cmpsb
sbbl
call
push
insl
pushf
dec
push
out
lea
fistpl
loope
cli
xor
test
divl
push
dec
inc
inc
add
push
aam
lret
sarb
jno
mov
aaa
mov
mov
sbb
pushf
sbb
subb
lret
call
sbb
imul
out
mov
sti
jno
mov
xor
sbbl
mov
mov
mov
fidivrs
negb
xchg
movsl
mov
adc
insl
add
jge
adc
iret
cmc
jo
fsub
mov
jo
test
icebp
or
push
fcom
pusha
cld
mov
mov
imul
push
jae
xchg
and
inc
dec
xlat
daa
dec
adc
loope
dec
mov
fistpll
inc
scas
and
mov
fstp
cltd
mov
mov
outsl
cmp
and
add
aam
ja
sub
mov
mov
or
dec
mov
or
xlat
push
aad
cli
dec
test
js
sub
add
repz
pop
cs
cld
pop
lea
or
mov
push
arpl
decb
shlb
ret
mov
mov
push
add
js
fcmovne
test
aam
movsb
data16
lret
push
mov
dec
mov
cltd
and
in
xor
hlt
int
fidivrs
int
int3
mov
and
fwait
push
rcl
mov
int3
scas
sbb
ret
bound
js
cmpxchg
insl
sub
aas
add
gs
out
inc
push
pushf
jmp
cmp
leave
psubw
mov
stos
push
xchg
jnp
cmpl
cmp
add
xor
mov
rorl
mov
stos
adc
fnsave
fistps
pop
negl
test
mov
loopne
or
push
insl
add
inc
in
push
inc
xor
sbbl
fcoms
movsb
bound
addr16
sahf
cmp
sbb
pop
sbb
fmull
lret
fsubl
iret
and
loope
and
cmp
sahf
xor
js
pop
mov
fisttpll
and
repz
mov
pusha
add
adc
pop
lret
js
mov
cmpsl
cmp
pop
xchg
in
int3
pop
mov
bound
mov
mov
bound
mov
push
mov
stc
in
mov
repz
push
lcall
insl
mov
call
mov
in
imulb
inc
mov
outsl
test
or
xchg
scas
ljmp
jb
lods
push
or
mov
push
cmp
lret
imul
lahf
push
mov
pop
cmpsl
ret
aam
clc
xchg
jecxz
sbb
loop
fsubrl
ret
push
cmpsl
cmp
fucomip
lcall
andl
jge
aam
shl
push
test
pop
or
xchg
mov
cmp
fidivl
cmp
cmpsb
cmp
or
inc
xchg
in
pop
insb
jl
add
push
adc
mov
mov
cmp
xchg
sub
adc
fsts
fwait
out
dec
arpl
in
out
mov
xor
push
mov
pop
push
inc
cmp
test
aas
and
pop
xlat
fwait
int
sub
lock
loopne
ds
mov
add
jno
and
popf
push
psadbw
push
dec
fcoml
xor
dec
cs
adc
lock
call
or
or
and
sahf
pop
aaa
pop
lods
jnp
fisttpll
jle
scas
push
cmpsb
cwtl
or
mov
cld
push
fwait
pop
icebp
sub
pop
xor
add
push
xchg
pop
cmp
cmp
movb
xlat
cmp
cmc
sbb
ds
jp
lods
and
xchg
or
jnp
ljmp
fcomp
xchg
jmp
bound
lret
out
rclb
xchg
xchg
pop
and
sbb
inc
xchg
mov
in
or
insb
imul
jne
leave
jo
xchg
pop
xchg
subb
mov
lcall
js
in
push
or
ret
jmp
sbb
push
shlb
adc
xor
lock
mov
mov
ja
pusha
cmp
sbb
into
out
or
mov
dec
sbb
arpl
dec
mov
cmc
mov
inc
push
push
adc
adc
in
loopne
adc
ljmp
fildl
movsb
pop
stc
xor
cmp
fisttpl
push
push
mov
loopne
cmp
and
aad
sarb
sbb
pop
in
push
push
in
mov
mov
leave
inc
cmc
popf
dec
push
lock
add
cmpsl
aam
and
fimuls
in
jle
in
mov
adc
lods
insl
and
pop
in
lock
lcall
insl
fwait
xor
adc
cmp
cmp
cmp
addl
jnp
rolb
cmp
lahf
outsl
sub
pop
or
or
fwait
das
in
xchg
xchg
cld
push
mov
loope
outsb
xor
add
add
out
adc
ljmp
xchg
imul
clc
dec
in
sahf
push
call
sbb
add
dec
and
adc
and
shl
lock
or
sbb
jecxz
mov
xchg
cmp
int
push
std
into
mov
clc
aaa
loopne
or
insl
cmp
dec
shlb
aad
stos
inc
incl
andb
or
aas
sub
or
in
cmp
jg
aas
inc
inc
sbb
cmpsl
adc
and
sub
sahf
ret
enter
jnp
in
jno
sub
mov
inc
rorl
daa
push
pop
dec
jge
data16
pop
mov
cmpsb
push
pop
cmp
push
xchg
es
repz
sbb
mov
or
cmp
xor
pop
jg
xor
out
and
inc
mov
icebp
push
add
xchg
xor
and
mov
add
cmp
push
stos
push
dec
lret
mov
inc
in
inc
jecxz
jb
out
jo,pt
inc
fs
inc
iret
mov
jmp
jo
dec
lahf
movsl
mov
pop
sbb
sub
push
les
das
pop
and
xor
jnp
test
xor
imul
rcrb
adc
mov
andb
stc
ret
cmpsl
pushf
outsb
sbb
inc
dec
movsl
adc
test
repnz
shlb
pushf
repnz
arpl
lock
lret
xchg
add
pop
push
out
mov
pop
inc
sub
addl
pop
jmp
ret
outsb
inc
mov
sbb
sti
xor
push
loope
mov
test
inc
jns
cld
jl
and
sbbb
outsl
xchg
cmp
call
inc
pop
scas
xchg
dec
mov
int
pop
or
cs
jbe
lock
add
dec
aas
sub
and
je
xor
jbe
aaa
xor
ret
or
or
aas
lds
fs
les
inc
mov
fnstsw
xchg
addr16
sub
xchg
and
daa
in
jnp
add
pop
sub
jmp
out
cltd
fmull
ficoms
and
xchg
in
pop
imul
inc
jl
popf
mov
enter
shlb
cmp
repz
or
mov
std
ljmp
sbb
enter
adc
cld
pushf
outsb
dec
dec
jb
inc
es
push
add
dec
imul
jg
cmp
jne
sbb
pop
les
scas
and
inc
les
pusha
mov
inc
mov
mov
inc
adc
adc
fnstsw
push
lds
lods
push
imul
lret
fistpll
mov
pop
loop
rorl
add
out
sub
xchg
aad
push
repz
lds
ret
cmc
adcl
pop
cmp
or
sub
or
cmp
fadd
cld
fstpl
mov
mov
fwait
lea
xchg
inc
mov
sbb
mov
jl
ret
mov
stos
inc
fists
xchg
out
dec
mov
mov
push
loopne
jp
loopne
in
sbb
cmp
sub
add
mov
jl
aam
rorl
enter
aad
sub
stos
xchg
aaa
sbb
stos
pop
insb
adc
in
jmp
lret
dec
loop
es
out
aad
xchg
mov
pop
pop
xchg
orl
mov
stos
lahf
lock
xor
mov
js
outsl
jp
call
gs
dec
xor
and
dec
repz
mov
mov
mov
or
shrb
push
or
inc
mov
mov
push
and
or
call
into
into
jo
enter
in
lods
fidivl
out
cltd
push
add
cmp
jno
and
adc
les
loopne
pop
aas
sbb
pop
test
mov
and
roll
test
push
mov
in
addl
stos
jno
inc
test
xor
sub
mov
or
movsb
jge
stos
repz
imulb
pop
mov
xor
int
sub
imul
mov
loope
addl
data16
mov
or
sub
in
inc
adc
xor
lock
scas
jno
jae
mov
add
cs
fdivrp
mov
outsl
dec
jp
sbb
xchg
jo
repz
push
andb
pushf
cmp
xchg
mov
sahf
cmp
cmp
movsl
in
pop
xchg
dec
decb
rol
pop
fs
mov
add
fmul
movsb
xchg
and
push
sub
xchg
ljmp
ljmp
adc
mov
loopne
aad
arpl
fnstenv
and
adc
mov
gs
test
sub
xchg
insl
test
sti
sti
pop
inc
xor
sarl
dec
mov
cwtl
pop
adc
mov
pop
and
sbbl
dec
mov
xchg
sub
lods
scas
sub
add
sub
add
aad
aad
mov
rcll
mov
push
dec
stc
pushf
and
mov
mov
adc
lods
jbe
arpl
out
pop
sub
dec
test
dec
je
out
adc
adc
cmp
iret
and
scas
pmaxsw
jnp
dec
mov
mov
gs
xchg
sbb
inc
repz
je
dec
pusha
push
mov
sbb
jns
cmp
xchg
push
cs
inc
xor
jbe
cmp
inc
add
or
in
andb
dec
rolb
xorb
loop
mov
mov
pop
cmc
and
xor
jns
stos
cmp
mov
outsl
aad
filds
push
cmc
dec
pop
lock
sbb
std
jbe
lret
adc
fwait
and
push
test
cmp
cmpsb
and
cs
sbb
adc
enter
lock
cmp
mov
mov
and
push
xor
adc
add
test
std
shrb
sub
pop
imul
xchg
rolb
sbb
sbbb
lret
add
xchg
insb
out
jecxz
enter
add
pop
rcll
imul
ljmp
dec
enter
mov
cmp
xchg
mov
lret
testb
mov
push
mov
ret
pusha
xchg
cs
xor
push
add
pop
jno
and
mul
pop
push
cmp
mov
dec
pop
xchg
xchg
jmp
mov
xor
mov
test
test
and
pop
mov
jo
xchg
out
ds
sub
mov
push
jge
sub
insb
xor
jne
das
and
popa
sbb
mov
call
sti
jmp
loopne
mov
xlat
shrl
xchg
loopne
adc
outsl
sub
lcall
and
push
xor
sbbl
mov
test
sahf
cmp
or
fbstp
int3
push
push
into
xor
out
dec
push
push
scas
testl
jnp
jo
sub
adc
rolb
push
xor
lcall
shrl
xor
mov
pop
xchg
and
xor
popa
nop
popl
push
pop
sub
push
add
out
aam
inc
loop
inc
lods
mov
enter
int3
test
push
out
xor
rcr
stc
adc
xchg
cmc
xor
jnp
into
je
enter
xchg
mov
lcall
in
aaa
bound
loopne
sbb
nop
lret
aam
lahf
pop
xabort
cld
roll
cld
jns
or
jae,pn
mov
adc
sbb
cli
mov
icebp
ret
sub
or
jnp
sub
or
imul
xor
popf
pusha
cmpsb
xchg
jns
xor
jns
data16
daa
pop
sahf
add
cmpsb
mov
pop
repnz
ljmp
push
cmp
aam
xor
stos
sbb
addr16
std
divb
mov
stos
mov
cmc
push
push
outsb
leave
push
call
leave
or
in
aad
inc
inc
data16
ds
mov
mov
xor
adc
out
cwtl
repnz
popf
popf
addr16
push
sahf
push
mov
sub
loopne
fldcw
in
xor
js
cmp
into
add
jne
push
xor
outsb
std
or
fsubl
cwtl
or
inc
pop
cs
jo
cltd
mov
stos
addl
aaa
leave
dec
jb
mov
push
pop
negl
sub
pop
mov
ja
dec
outsb
mov
cmpsb
xchg
aaa
and
inc
pop
cli
or
jl
cwtl
mov
bound
mov
sub
xchg
pushf
mov
cmp
lret
dec
pop
push
movl
outsl
mov
popa
mov
mov
mov
pop
inc
push
fsubrs
dec
das
cmp
jmp
movsb
repz
pop
and
jae
movsl
xchg
mov
rcll
stc
push
mov
xor
add
stos
ss
or
enter
cmp
mov
insb
push
sub
cltd
mov
push
test
xchg
or
sti
mov
push
pusha
xchg
jle
jmp
not
sbbb
clc
xchg
out
out
addr16
sub
call
stc
xchg
add
add
push
jae
leave
pop
les
pop
sti
mov
jge
mov
pusha
cmp
jno
pop
add
fwait
jecxz
sub
enter
mov
cwtl
sub
dec
mov
push
in
cmc
xchg
adc
inc
mov
xchg
xchg
adc
dec
fwait
mov
pop
mov
add
push
addr16
push
push
stc
sub
mov
inc
hlt
sub
orl
bound
cmp
in
dec
xchg
xchg
push
incb
or
push
mov
aaa
aam
mov
pushf
lret
repz
pushf
dec
sbb
ljmp
outsl
xchg
pop
shl
test
sti
dec
cld
aam
jp
xor
jecxz
mov
lahf
leave
sbb
cs
lock
loop
aaa
test
es
mov
mov
insl
mov
push
and
cmpsb
push
inc
jmp
or
pop
sub
cmp
cmp
cmp
or
addb
lea
in
add
jo
mov
movsb
mov
pusha
cmp
aaa
xchg
push
test
push
pop
inc
ficompl
cmpsb
ficoml
sahf
jecxz
lds
mov
pusha
mov
xchg
loope
push
pop
push
mov
fldcw
adc
xor
sub
jno
out
mov
jle
xchg
cltd
add
cmp
xorl
inc
xchg
aad
add
push
pusha
addr16
shl
es
iret
in
inc
sub
and
iret
sahf
mov
out
notl
mov
or
add
dec
test
pop
loopne
xor
addr16
pop
faddl
push
das
push
in
out
sub
jae
xor
insl
iret
cmpsl
out
sar
mov
mov
out
cmp
pop
xchg
adc
mov
negl
sbb
and
nop
mov
and
testb
div
push
add
out
fdivr
dec
push
lcall
or
adc
cmp
pop
adc
sub
in
or
sub
jne
xor
inc
push
ja
push
xchg
sbb
mov
jecxz
shrl
dec
pop
sbb
sbb
scas
jg
adc
test
cwtl
fdivr
xchg
test
mov
xor
es
jno
or
jge
in
mov
shrb
out
mov
lods
dec
sar
iret
cmpb
pop
subb
shl
or
mov
std
xor
mov
and
cmp
pusha
sbb
jge
lods
cmpl
sub
dec
jae
push
or
lret
cmp
rorl
inc
pop
rorl
mov
mov
dec
xchg
loopne
push
adc
push
lea
mov
pushf
je
mov
and
addr16
popa
or
cmp
in
outsb
sbb
rcrl
sarb
pushf
inc
jmp
adc
mov
dec
jb
mov
add
or
orl
imul
stos
in
cmc
lret
jmp
sbb
sub
jne
inc
jnp
imul
xchg
stos
in
cmc
lret
jmp
sbb
sub
jne
inc
jnp
imul
xchg
scas
in
cmc
mov
and
cmp
dec
inc
jb
xchg
jg
outsl
mov
xchg
jmp
fcomi
lret
inc
jnp
sub
in
mov
adc
std
xor
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
pop
movsb
and
mov
adc
les
pop
push
add
add
pop
add
add
add
dec
add
ss
add
add
add
xor
add
add
xor
faddl
movsl
add
add
add
add
add
add
sbb
or
push
add
add
add
push
pop
add
add
add
add
add
add
add
sahf
add
outsl
add
sub
pop
add
add
add
add
add
sub
xor
add
add
add
and
add
xor
int3
add
add
add
add
add
pop
add
push
mov
add
sbb
addb
add
cmp
loope
xor
add
sti
pop
lret
add
sub
pop
add
arpl
pop
add
add
add
inc
add
add
add
add
add
add
add
add
add
cmpsb
add
add
xchg
add
add
add
gs
add
add
add
adc
add
add
add
add
add
add
add
add
add
and
sub
rolb
add
add
add
add
sub
jno
add
push
add
add
add
push
add
add
add
cwtl
add
mov
add
add
jo
adc
add
add
add
loope
jl
push
add
add
les
stos
add
add
add
popa
add
add
add
and
add
push
add
enter
ret
add
jae
pop
add
faddl
es
add
add
adc
add
add
add
add
stos
add
mov
add
add
push
add
add
faddl
outsb
add
add
add
add
in
mov
add
add
faddl
pop
add
add
add
add
add
add
and
sbb
outsl
add
add
add
add
add
add
add
and
adc
push
add
add
add
in
sbb
pop
add
add
add
adc
roll
add
gs
add
add
add
add
mov
add
loope
mov
add
add
pop
icebp
add
add
add
add
jmp
add
add
pop
add
add
add
enter
push
add
adc
mov
add
push
add
add
addb
add
add
add
in
mov
push
add
add
add
add
add
add
add
outsb
add
add
jl
lods
add
lcall
add
add
lods
add
add
loop
and
arpl
add
mov
add
cwtl
add
popf
add
add
and
add
insb
add
add
jmp
add
add
add
insb
add
add
add
cwtl
add
add
add
add
add
enter
sbb
pusha
add
add
add
add
add
add
add
add
popa
add
pop
add
cs
xchg
in
lret
xchg
adc
imul
lret
pop
loop
and
inc
or
sbb
outsl
in
icebp
push
stc
xor
xlat
fsubrl
test
xlat
adc
xor
mov
sub
andl
mov
jle,pn
cmc
add
shlb
sbb
or
aaa
xchg
loop
scas
test
repnz
je
mov
xchg
es
add
pop
in
adc
sub
mov
jle
or
xor
rcrb
lret
push
ljmp
jne
shrl
cmp
xchg
dec
or
xor
push
jg
notl
negb
or
inc
sbb
push
stos
iret
shr
enter
cs
leave
sub
jl
cmp
push
in
popa
repz
jo
notb
lret
test
shr
sbb
mov
push
lret
cmp
mov
add
in
or
sahf
int
rorb
bound
call
sub
imul
enter
scas
jecxz
ds
sbb
out
or
sbb
dec
adc
sub
aaa
inc
mov
bnd
cs
pop
inc
fimull
jl
mov
ret
mov
lods
daa
lock
and
iret
fbld
loopne
icebp
cltd
fsubp
mov
xor
pop
addr16
loop
fsubr
fs
shlb
fists
xorl
shll
je
xchg
shrl
xor
stos
xor
cmp
fdivrl
stos
xlat
mov
lock
xor
insb
cmp
add
jne
jne
fwait
incl
cmc
fwait
lret
inc
xchg
adc
dec
inc
sub
push
divb
test
sbb
push
arpl
mov
icebp
dec
mov
bound
shl
mov
loopne
and
jno
xor
in
or
das
sahf
jbe
mov
scas
mov
aas
push
in
jmp
test
stc
cmpsl
imul
inc
ss
stos
in
xchg
cmpsl
cltd
lods
leave
pop
ret
cs
xchg
sbb
leave
jle
inc
icebp
fmul
push
mov
rclb
les
cli
mov
int
mov
outsb
sub
pushf
sarl
and
cmpsl
jmp
mov
fcmovbe
mov
add
xchg
inc
pop
xchg
mov
std
cmp
lret
or
inc
add
out
push
sarb
mov
inc
rcrb
mov
inc
inc
data16
push
jnp
mov
ret
or
mov
jo
getsec
out
mov
sahf
mov
mov
dec
fbld
enter
add
rorl
xrelease
xor
pop
jecxz
pushf
int
test
add
add
add
add
rolb
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
repnz
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
repnz
repnz
mov
repnz
lods
repnz
movsb
repnz
pushf
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
repnz
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
repz
mov
repz
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
hlt
add
cwtl
hlt
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
pop
add
pushf
pop
add
xchg
pop
add
mov
add
test
add
jl
add
je
add
insb
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rclb
add
fcoml
add
lock
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
sbb
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
sbb
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
sbb
add
add
js
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
