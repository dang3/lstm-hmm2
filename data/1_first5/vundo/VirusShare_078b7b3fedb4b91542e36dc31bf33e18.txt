push
iret
or
insb
lock
push
lahf
or
insb
pusha
add
push
iret
or
insb
rolb
push
iret
or
insb
loopne
add
lods
out
add
movw
pop
xor
jns
push
mov
addw
subw
pop
xor
jmp
push
xor
mov
mov
pushl
popl
mov
lods
mov
pop
ret
jmp
test
mov
jmp
pop
adc
gs
mov
pop
cmp
jmp
xchg
scas
dec
or
loope
hlt
testb
add
hlt
jno
mov
or
jmp
arpl
mov
mov
pop
and
fisubs
push
mov
xorw
jno
call
add
push
mov
mov
add
fisttpll
or
adc
mov
jmp
add
outsl
add
inc
or
test
lret
aaa
dec
mov
rcll
movsb
data16
dec
cmpsl
test
push
push
cli
das
mov
pop
stos
sbb
dec
dec
adc
leave
popl
add
push
push
push
push
mov
push
popl
mov
add
pushl
mov
jmp
lahf
subb
in
aas
loopne
mov
jge
dec
inc
mov
inc
fsubrs
push
xor
flds
sbb
mov
addl
jne
push
mov
andb
andl
orb
xorl
pop
add
xor
lea
mov
add
mov
xor
rol
movl
xor
inc
cmpb
jne
cmp
je
inc
cmp
jb
mov
jmp
or
mov
loop
push
mulb
jecxz
xorb
stc
push
sub
sahf
and
xchg
data16
mov
setle
pop
pop
dec
and
in
xchg
int3
adc
mov
jecxz
adc
ljmp
add
movzwl
mov
add
mov
add
pop
cmp
jbe
cmp
jae
pushl
pushl
push
shl
xor
shl
mov
mov
rol
shl
inc
mov
add
xchg
push
popl
addl
pushl
call
call
pop
pop
pop
pop
leave
ret
call
test
jne
push
popl
js
call
lods
mov
fs
or
addr16
xchg
ret
cwtl
mov
push
icebp
testl
push
ret
inc
jno
cltd
sub
jae
fpatan
sub
fnsave
mov
inc
scas
arpl
mov
fsubl
pop
mov
inc
mov
enter
popa
mov
sub
inc
out
dec
je
add
popf
lock
adc
add
loopne
das
cmp
adc
add
adc
push
push
mov
call
push
shl
inc
mov
sub
xchg
addl
subw
jge
push
mov
sbbw
movb
pop
push
call
push
push
push
mov
not
rol
mov
xor
pop
mov
pusha
call
mov
push
lea
mov
xor
xchg
addl
push
call
push
mov
or
popl
mov
jb
push
mov
orb
orl
pop
cmpl
jne
jmp
jmp
popa
pusha
jmp
pop
push
cltd
push
add
daa
adc
and
inc
mov
pop
cmp
jmp
outsb
das
sahf
ud1
and
lea
movsl
add
add
mov
mov
push
dec
and
decl
sarb
xor
xchg
addl
push
call
mov
mov
xor
xor
jmp
mov
pop
mov
insb
push
dec
or
int3
xchg
stos
rcll
inc
dec
jne
cmp
je
cmp
jne
popa
shl
jmp
sub
or
cmp
jge
test
cmpsb
mulb
inc
stc
imul
and
int
add
orb
shlb
xchg
inc
into
mov
sbb
cld
or
lds
call
int3
jmp
popa
shl
push
jmp
fcmovb
inc
adc
inc
push
movsl
call
fmuls
pop
out
popl
xchg
pushf
loop
cmp
push
cmpsl
jge
mov
add
xchg
sbb
xchg
cmc
jle
pop
add
add
insl
or
ljmp
mov
lret
jge
or
idivb
push
aad
xor
push
call
push
mov
push
jmp
pop
sub
jl
call
jae
stos
in
xor
inc
popa
test
cmp
xlat
pop
movsl
mov
cmp
stos
sbb
jge
loope
jo,pn
inc
pop
mov
inc
xchg
out
hlt
das
mov
xchg
push
dec
cltd
arpl
rcl
sbb
mov
mov
out
push
fcmovbe
imul
mov
add
mov
push
push
push
mov
mov
rep
subl
pop
pop
push
add
xor
inc
mov
xor
xchg
push
xor
jmp
sub
mov
add
sub
mov
add
or
jne
orw
add
jmp
mov
shr
shl
mov
jmp
sub
mov
cmp
jne
mov
push
popl
je
call
test
jl
shr
jmp
cmp
pop
push
std
push
jns
movsb
mov
inc
inc
hlt
push
cltd
rcrb
sub
cvtps2pi
lahf
xchg
enter
mov
out
loope
jmp
test
pushf
fadds
imul
push
enter
adc
pop
dec
insl
or
mov
add
add
cmpw
jne
ret
call
push
lret
jbe
js
or
xchg
push
jae
mov
outsl
sbb
lcall
jecxz
je
nop
pop
jecxz
aad
scas
mov
lds
cli
mov
insb
ret
push
jae
xchg
sbb
jg
enter
cmpsb
adc
rclb
xchg
jmp
daa
data16
pop
pop
es
mov
mov
dec
mov
nop
inc
mov
mov
lret
pop
mov
lret
push
mov
mov
mov
sbb
sub
and
and
fidivrl
xchg
adc
pushf
mov
hlt
lret
fsubl
ja
hlt
mov
adcl
cltd
push
and
mov
mov
add
jmp
mov
lret
push
faddp
mov
lock
cld
or
cmp
ljmp
jbe
inc
adc
add
lret
sub
call
out
rcrb
sbb
jae
or
jmp
sbb
test
outsb
mov
fcoml
pop
push
mov
add
jp
xor
cmpsl
dec
bound
rcr
repz
sub
enter
lods
xchg
pop
lret
jnp
mov
hlt
dec
add
clc
dec
add
pop
mov
cmp
xchg
jns
lea
aaa
test
fcom
mov
mov
daa
xlat
ss
jns
mov
push
dec
mov
subl
in
mov
push
xchg
fcoms
test
sub
xchg
out
icebp
sti
outsb
pop
repz
popf
insl
jne
jbe
fldl
mov
push
stos
pop
adc
call
or
outsb
jmp
mov
inc
and
jns
xor
and
ret
adcl
pushf
cli
movsb
hlt
add
sbbb
sub
iret
outsl
ja
call
mov
notl
mov
mov
mov
push
mov
nop
hlt
lret
sbb
mov
or
in
nop
inc
mov
pop
sbb
jge
xchg
xchg
cli
in
mov
add
pop
or
rcr
lret
push
push
jne
push
rcrb
push
xchg
hlt
mov
adcl
js
into
test
fcompl
cmp
out
pusha
jecxz
cs
mov
inc
cli
repnz
out
mov
xor
idivl
cltd
jmpw
adcl
push
xor
xchg
fcmovnbe
or
in
dec
cmpsb
shll
lret
mov
mov
add
rcrb
hlt
lret
imul
enter
arpl
push
xor
jo
add
sbb
in
jo
popa
xchg
jg
fsubrs
sbb
push
or
out
and
sub
lods
loopne
incl
mov
inc
out
popf
xor
outsl
mov
test
xchg
decb
lahf
or
adc
sub
andb
dec
adcb
mov
mov
jns
adc
inc
ds
adc
jbe
add
in
jns
mov
ret
or
ficompl
pusha
mov
lret
lcall
dec
xchg
cli
std
pop
xlat
xchg
out
jo
das
dec
mov
inc
push
push
and
pop
mov
xchg
ss
and
jbe
fucom
mov
push
mov
sub
int3
dec
dec
fnstenv
sbb
clc
xchg
pop
pop
repnz
inc
or
jno
push
jns
lret
mov
flds
sbb
xchg
test
jb
dec
ss
pop
adc
je
es
imul
jg
mov
push
fbstp
lcall
jmp
bound
rclb
mov
sbb
sbb
mov
mov
sahf
cmp
jle
scas
add
sbb
mov
out
fistpll
inc
leave
scas
outsb
pop
pop
pushf
push
push
fisttpll
insl
pop
cmc
punpcklwd
inc
into
jbe
insb
lret
jbe
fistpll
cmpsl
aad
lds
xchg
push
mov
push
addr16
clc
lret
inc
call
into
ljmp
dec
jl
enter
xor
mov
addl
out
dec
int3
aas
pop
lahf
jge
push
push
mov
cmp
popa
test
add
sub
popf
clc
imul
sub
mov
mov
iret
mov
or
sbb
xor
add
fmull
enter
and
aas
mov
and
pop
je
jl
negb
dec
std
jp
cmp
dec
sub
js
clc
mov
loope
fildll
ficoms
add
outsb
cmpsb
test
jbe
filds
cmpsl
jge
add
ljmp
repz
jo
jl
stos
mov
pop
adc
mov
pop
pop
lea
andb
adc
into
or
mov
adc
fistpl
or
aad
mov
pop
loop
std
outsb
jae
and
and
ret
shll
jno
sysret
stc
inc
stos
jl
rcll
popf
je
xor
sahf
push
clc
mov
push
repnz
hlt
lret
push
lret
jbe
imulb
cmp
cwtl
bound
inc
inc
mov
sahf
xor
int
dec
shll
fiadds
mov
pop
add
imul
test
cmp
pushf
lcall
push
lret
jbe
es
mov
add
fimuls
inc
inc
pop
push
adcb
or
cmpsb
cmp
and
inc
jle
pop
pop
leave
pop
pusha
or
and
add
faddl
ret
lea
test
jbe
sbb
mov
lds
icebp
jo
mov
pop
lret
dec
push
xchg
pop
loop
bound
xlat
push
ret
mov
adc
or
nop
hlt
lret
lcall
jle
pop
xor
sbb
pop
jp
sbb
das
adc
pushf
mov
bound
pusha
mov
and
ljmp
sub
inc
mov
mov
js
aas
add
hlt
mov
jecxz
sub
mov
into
clc
push
movsb
mov
pop
inc
lds
xchg
out
push
test
xchg
sbb
js
cmpsb
sti
dec
call
test
ret
cltd
ss
pop
scas
into
and
inc
sbb
insb
jo
imul
push
inc
cltd
and
into
mov
icebp
push
pop
rclb
lret
jbe
xlat
int
daa
aaa
pusha
pushf
lea
scas
loopne
mov
mov
dec
fistl
rcl
aas
push
mov
dec
jmp
lret
mov
sbb
out
mov
mov
xor
xchg
lcall
mov
cmp
mov
les
push
dec
push
sar
mov
scas
xor
jnp
ss
xlat
notl
adcl
ret
and
cmpsb
jno
cmc
lock
mov
mov
and
addb
and
jbe
push
push
push
je
hlt
in
xlat
in
or
sub
push
bnd
xor
lock
adc
fmull
jbe
ja
mov
scas
xor
pop
jge
mov
out
push
jbe
call
rorl
rcrb
xchg
mov
xorl
adc
jns
lret
mov
scas
lds
cmpsb
bound
in
jg
cmp
pop
ljmp
dec
movsl
js
inc
push
test
or
fstl
cmc
les
lcall
sbb
sarb
sarl
mov
adcl
pop
jle
insl
icebp
add
cmp
push
pop
movsb
mov
or
data16
js
xchg
pop
add
sbb
ja
cmpsb
mov
nop
hlt
lret
cwtl
cs
leave
jp
pop
dec
xchg
push
mov
cmp
bound
push
cmp
rolb
sub
cld
movl
scas
mov
dec
jns
jne
sbb
stc
xchg
push
js
inc
movsl
hlt
sub
dec
dec
jnp
adc
add
pusha
daa
nop
or
fwait
pusha
mov
lret
fs
push
jge
pop
jne
daa
lret
mov
or
daa
dec
xchg
inc
sub
pop
xchg
ja,pn
mov
adc
and
mov
adc
jp
inc
cmp
fsubr
subb
lret
lods
ds
mov
adcl
aas
or
jo
int
adc
xor
mov
lret
test
pusha
mov
cmp
mov
pop
cmp
jns
xchg
fistpl
adc
scas
lods
or
scas
loope
daa
pop
imul
xchg
push
cmc
dec
stos
popf
scas
or
ljmp
dec
xor
sahf
jmp
cmpsl
add
mov
mov
out
push
jmp
sbb
or
inc
xor
jl
fwait
loop
push
mov
push
cmp
or
rorl
sahf
push
inc
sarb
add
cmp
pop
mov
adc
push
por
scas
xchg
mov
jnp
pop
in
mov
mov
dec
inc
jnp
insl
push
xor
nop
mov
push
xchg
loop
adc
xor
or
xchg
mov
mov
mov
shlb
sbb
jb
push
scas
pop
push
adc
xchg
cmp
hlt
lret
pusha
addr16
sbb
jno
repz
pop
push
mov
cmp
loop
mov
or
dec
cmp
add
push
imul
les
jge
pop
stos
xor
dec
mov
cmp
mov
push
add
daa
stos
dec
add
loopne
lea
mov
lcall
mov
out
lock
shlb
leave
popf
shrb
push
xchg
imul
push
jno
out
push
cmp
push
mov
in
push
cli
jge
adc
cmp
mov
hlt
lret
adcl
sub
aad
addr16
in
test
and
inc
pusha
dec
add
mov
pop
aas
into
dec
adc
xchg
imul
inc
add
gs
cwtl
or
xlat
popa
lods
inc
add
fsubrl
or
add
stc
dec
aaa
movsl
out
lods
lahf
arpl
xlat
xchg
rclb
mov
repnz
mov
xlat
aas
jno
sbb
ret
pop
fisubrs
inc
sbb
scas
js
nop
inc
lahf
jb
mov
push
add
mov
hlt
mov
test
jge
and
cmp
loop
loopne
cmp
mov
xor
sti
lcall
push
aad
dec
jnp
push
add
aad
mov
sbb
sub
push
jecxz
call
fnstsw
insb
lret
jbe
push
imul
dec
and
mov
push
maskmovq
mull
lret
sbb
push
sub
mov
sbb
ss
test
sub
mov
test
aas
int
ljmp
nop
adcl
insb
push
scas
push
jb
stos
mov
orl
leave
jmp
pushf
mov
int
das
dec
xor
shl
mov
dec
incb
ds
stc
fidivl
push
bound
sbb
mov
xchg
xor
addr16
adc
xchg
inc
inc
add
pop
inc
xor
or
rolb
mov
adc
mov
or
ret
jp
std
xor
stos
xor
pop
jmp
lods
push
push
jb
jo
leave
mov
adc
test
lods
add
inc
jle
push
dec
cmp
cmp
push
push
add
pop
xchg
xchg
pop
daa
cmp
out
and
cmc
jnp
jo
popa
jbe
and
imul
mov
out
inc
adcl
popf
icebp
add
ss
out
shl
lahf
es
sbb
flds
decb
test
int3
mov
lods
and
adc
mov
lret
mov
jbe
sub
dec
jge
lods
cmp
icebp
add
inc
inc
jns
pop
lods
mov
and
xor
into
rol
mov
add
xchg
lahf
sub
scas
inc
add
fists
hlt
jl
fnstcw
rcll
lock
mov
mov
lret
icebp
pusha
jmp
stos
mov
cmp
mov
and
lock
scas
xchg
and
pop
test
sbb
adc
fdivrl
pop
inc
pop
pusha
lcall
pop
pop
lret
pushf
and
lret
jbe
in
and
lret
ror
iret
fidivrs
paddusw
add
adc
mov
xchg
jno
cmpsb
mov
clc
mov
std
mov
jns
lret
cltd
jp
add
fsubr
dec
call
ret
out
mul
ficomps
mov
push
lahf
mov
xor
inc
mov
nop
jg
mov
mov
bsr
jmp
shlb
adcb
dec
in
dec
sub
xor
popa
xchg
lods
shl
inc
aas
cmp
inc
sti
add
test
jbe
std
mov
lea
ficoms
push
mov
cmp
daa
inc
pop
cmp
fstl
pop
cmc
xor
mov
fs
movsb
leave
mov
xchg
mov
push
adc
cli
jne
jmp
lods
leave
mov
adc
jno
repz
mov
mov
xlat
sbb
ret
mov
and
adc
cmp
ss
mov
shl
mov
je
mov
add
nop
idivl
mov
jb
cmpsb
ficoms
inc
xor
int
mov
flds
cmp
sbb
or
scas
xlat
repnz
sbb
out
push
cld
mov
pop
jns
lret
mov
in
cltd
frstor
and
mov
cmc
fucomi
mov
in
mov
mov
js
xchg
les
mov
jbe
push
sub
mov
push
icebp
iret
and
jmp
cltd
test
pop
fsubrp
mov
push
mov
cs
fstps
xor
mov
lods
out
int3
popf
mov
scas
enter
hlt
pop
inc
insl
test
mov
push
lret
jbe
and
lock
test
fldenv
pop
push
stc
inc
xor
push
jp
in
pushf
mov
mul
mov
out
cmpsl
push
adc
sbb
fucomi
enter
dec
bound
pop
mov
nop
hlt
lret
int3
cmpb
mov
sub
enter
fdivrs
mov
mov
rcll
xor
pop
mov
pushf
push
dec
dec
adc
out
lea
nop
hlt
gs
mov
add
push
fcompl
orl
pinsrw
cmpsl
int
aas
fcmovu
gs
cli
sbb
sbb
mov
lret
inc
clc
test
or
mov
xchg
outsl
clc
ljmp
xchg
mov
and
jecxz
inc
mov
nop
jne
int
jl
negl
pop
add
push
imul
jmp
fdivrs
iret
or
xlat
pop
pop
shrl
pusha
mov
cmp
test
idivl
add
lret
push
or
adc
sti
xorl
hlt
out
test
cmpsb
mov
pop
adc
lret
sbb
jns
lret
mov
mov
inc
int
xchg
mov
sarl
dec
mov
nop
repz
lds
out
jbe
fcomip
bound
pop
xchg
or
xchg
fsubrl
fst
loope
jb
jge
adc
xchg
sbb
arpl
mov
pop
movsl
lret
js
jbe
push
andl
insb
rcrb
lds
cmp
xor
roll
nop
fisttpl
ja
hlt
sbb
aas
adc
out
lods
xchg
pop
lret
popa
mov
rorl
mov
mov
movsb
dec
adc
movsb
mov
lods
sub
xchg
movsb
add
test
jno,pt
repz
or
pop
mov
lret
mov
daa
push
mov
adcl
mov
cmpsw
fdivs
fs
mull
and
push
jge
je
push
mov
arpl
inc
stos
hlt
push
call
or
jnp
jge
mov
pusha
aam
or
data16
jp
xor
push
pop
xchg
hlt
lret
popf
fstpt
loopne
add
xor
adc
loop
ret
cmp
sub
xchg
inc
lret
lret
mov
fmul
mov
sbb
pop
dec
or
daa
call
push
mov
or
into
stc
jns
fnsave
hlt
jge
sbbl
cmp
cltd
loope
xchg
fsubl
mov
dec
ja
hlt
dec
les
jp
jbe
fucomip
push
testb
pop
inc
cmp
lods
mov
mov
rol
push
cwtl
or
pop
pop
jle
into
push
clc
aam
scas
jbe
hlt
dec
sahf
xchg
push
lret
jbe
shlb
or
and
sti
and
xchg
cltd
xor
fiadds
bound
sarl
jbe,pn
fwait
in
cmp
in
js
jno
call
insb
sub
pop
or
stos
dec
jae
outsb
ja
mov
cmpl
jl
in
sub
es
dec
mov
das
push
lcall
xchg
lret
and
xor
rorb
ficoms
stc
out
lods
xchg
pop
lret
jne
add
lret
popa
lahf
cmc
ljmp
fcompl
stc
pop
mov
mov
jae
xchg
mov
nop
dec
sbb
mov
hlt
lret
cmpsb
or
into
ret
loope
mov
imul
jb
push
pop
int
push
enter
les
daa
jge
push
fistpl
jns
lock
adc
pop
lret
jbe
mov
mov
insb
lods
adc
pop
insb
jae
mov
je
insb
mov
stc
push
sbb
lcall
pop
add
cmpsb
pop
fbstp
scas
pop
mov
adcb
jns
lret
mov
aaa
jle
or
mov
and
lcall
jae
xchg
xchg
sub
push
lahf
nop
aam
test
loope
mov
mov
xor
mov
mov
xchg
adcl
add
add
test
addr16
inc
int
adc
subb
sahf
incl
into
popa
mov
ss
xchg
jmp
ss
int3
test
loopne
scas
fisttps
imul
rclb
pushf
add
inc
cld
xchg
push
repz
insb
mov
adcl
cmp
popa
pop
xchg
or
fdivl
pop
pop
mov
or
into
shrb
add
mov
lock
test
mov
mov
mov
push
mov
insl
loope
outsb
inc
xor
in
pop
pop
sub
movsl
or
notl
xchg
cmp
daa
xchg
push
nop
xchg
cmp
adc
lret
nop
fucom
mov
push
cmp
insb
shrb
imul
add
dec
movsb
mov
pusha
test
fistl
lods
jnp
jnp
xchg
pusha
repnz
or
les
jns
lret
mov
sbb
mov
repnz
adc
test
cmp
sbb
mov
or
ja
pop
je
addr16
mov
mov
aas
fnsave
hlt
pop
lock
jbe,pt
push
sbb
lods
push
add
xor
faddl
dec
sbb
lahf
hlt
lret
pop
aam
pop
test
scas
xor
push
test
iret
int
or
mov
scas
mov
xchg
arpl
lahf
loopne
adc
add
insl
jnp
lock
or
shlb
insl
pop
pop
jnp
inc
lret
ror
mov
test
leave
jg
cwtl
cmpl
das
push
push
pop
xor
imul
jmp
mov
hlt
dec
jns
inc
sti
sub
mov
idiv
adc
insl
sub
and
mulb
sub
mov
rol
push
rorb
mov
mov
jl
lret
cli
push
or
lea
loope
nop
hlt
mov
mov
ja
rcrl
mov
mov
mov
jo
das
cmp
es
mov
cmpsl
es
xor
mov
rcr
cmpl
mov
sbb
jmp
leave
pop
pop
daa
and
mov
out
inc
push
mov
repnz
xchg
bound
aaa
add
cmp
lret
jbe
stc
cmp
adc
pop
shr
jns
lea
mov
roll
jl
jns
adcl
test
lea
jae
jbe
sub
mov
cli
push
js
xlat
hlt
ljmp
cmp
push
and
add
js
pop
test
xor
out
pop
outsl
xchg
stos
das
sbb
testl
out
push
mov
data16
nop
hlt
lret
push
add
daa
jle
sahf
in
imul
loopne
daa
int3
lea
fwait
test
cmc
sbb
and
xor
jle
pop
jg
int3
xlat
popa
mov
scas
jle
aas
cmpsb
daa
popa
in
pusha
xchg
ja
lret
push
pushf
inc
push
add
iret
and
mov
jmp
jle
mov
mov
cmp
dec
mov
sete
jo
popf
jp
std
aam
notb
push
push
sbb
adc
jl
clc
mov
out
inc
out
adc
ss
cli
pop
push
pop
sub
pop
pop
lret
or
repnz
xor
fwait
cmp
inc
lock
fs
sbb
js
in
cmpl
in
mov
test
fcmovb
or
out
cwtl
das
je
push
cwtl
sbb
adc
out
lods
xchg
pop
lret
js
out
adcl
lahf
mov
divl
es
fldl
and
sbb
sbb
jp
icebp
push
xor
popf
shlb
shl
rcll
fmul
sub
lds
pop
jmp
dec
test
xor
in
sbb
out
push
jnp
cmc
pop
fsubrp
mov
push
stos
jnp
sbb
jmp
iret
sbb
movb
pop
cmp
movsb
adc
jge
sbb
jbe
jg
popf
dec
jo
jbe
pop
and
mov
or
mov
push
daa
sbb
mov
movsb
js
popl
ds
adc
stos
fwait
push
lret
jne
add
inc
jg
xor
mov
xchg
lcall
push
mov
mov
pop
xlat
dec
xchg
nop
or
das
loopne
dec
cld
sahf
loop
sub
aam
adc
pop
xlat
mov
sub
and
jmp
mov
in
popf
repz
scas
lcall
lcall
and
mov
pop
outsl
dec
pop
jle
addr16
inc
pop
rolb
mov
adcl
out
and
xor
fidivl
push
mov
ficomps
incl
jae
inc
cmp
xor
add
sbb
dec
popa
ja
les
xchg
xor
fdivs
imul
xor
sbb
call
sbb
jnp
enter
mov
rclb
mov
jne
sbb
push
ret
mov
mov
ss
or
imul
dec
mov
mov
cmpsb
scas
fcos
sbb
adc
ds
in
pop
pop
xor
add
xchg
hlt
lret
pop
mov
mov
lret
mov
jbe
daa
es
jo
pop
cmp
loope
inc
loop
sub
dec
inc
sbb
xchg
xchg
push
jg
mov
pop
sub
xchg
lret
sbb
inc
outsb
jl
xchg
inc
out
mov
fs
jne
add
pop
ss
fdivr
int
xchg
and
aad
addb
adc
adcl
ret
xor
xchg
inc
adc
xorps
imul
xlat
lods
les
lods
outsl
sub
ja
push
and
jl
dec
jmp
mov
jg
out
mov
and
loope
sbbl
je
mov
test
call
fisubs
inc
sub
mov
loopne
sbb
cmp
cmp
rorb
icebp
and
bound
int
cld
bound
adcl
xor
cmc
push
shrb
insw
icebp
mov
jb
fistpll
sahf
test
mov
dec
push
test
jno
subl
sbb
pop
xchg
cli
push
testb
hlt
mov
adcl
mov
lahf
call
jno
std
adc
out
push
pop
into
mov
fcompp
mov
adc
xorb
gs
je
jmp
mov
adcl
add
and
push
mov
jp
jge
dec
cli
xchg
rorb
adc
ss
fwait
std
mov
jmp
jmp
mov
insb
mov
loopne
inc
push
add
or
mov
jo
jo
push
jo
out
xchg
scas
sarb
lahf
call
pop
cli
push
fcmovnu
cmp
dec
inc
push
comiss
jnp
add
add
int
fadds
pop
insl
sahf
pop
sbb
aam
or
loope
stos
out
mov
in
nop
hlt
fadds
ficompl
adcl
in
pusha
lds
aam
xor
and
hlt
lret
into
mov
mov
frndint
mov
lods
mov
add
les
test
ret
stos
cli
cli
inc
sub
mov
adc
cld
xchg
outsb
adc
data16
call
dec
xor
xor
fs
outsb
jo
je
fs
xor
in
add
stos
push
movsl
daa
pusha
test
nop
xor
dec
sbb
xchg
jbe
jg
rorl
add
cld
mov
es
or
inc
nop
lods
mov
int
ljmp
fisttpll
imull
push
mov
push
push
mov
cmp
ret
push
dec
lret
jbe
adcb
or
and
jae
icebp
ret
popa
cwtl
adc
mov
jne
stos
mov
je
scas
and
repnz
push
xchg
sahf
xchg
push
lret
jbe
sub
out
fistpl
cmp
lret
mov
mov
loope
cli
push
icebp
sbb
mov
in
movsb
add
mov
fldl
pop
mov
pop
inc
daa
lret
mov
test
jecxz
rol
push
add
xor
stos
call
lcall
lret
fdivp
dec
cmpsb
pop
add
outsb
cmpsb
test
jbe
cmc
cwtl
xor
fdivr
out
jmp
leave
push
xor
add
popf
sbb
movsb
sub
std
es
mov
xchg
push
lret
popa
mov
dec
cs
outsl
push
fimull
ffree
add
inc
dec
fimuls
sub
mov
add
nop
fldcw
cmp
call
nop
hlt
cli
fsts
adc
ds
fwait
sub
mov
push
jle
dec
test
pop
adc
dec
stos
lods
xlat
fs
xchg
mov
scas
loope
xchg
call
imul
sub
popa
sbb
jmp
inc
mov
nop
hlt
ljmp
ja
lds
int3
jbe
xor
cmp
int
inc
push
lret
jbe
add
hlt
adcl
in
adcl
mov
cmpsl
popa
adc
mov
daa
out
out
test
filds
test
mov
inc
push
adc
mov
xchg
sbbl
lods
rorb
mov
push
lret
xor
call
ret
nop
jbe
hlt
test
adcl
mov
cmp
clc
aas
mov
xor
aad
mov
dec
pop
icebp
lahf
sub
mov
push
fdivr
popf
fistl
jbe
in
loope
push
popa
lret
jbe
scas
or
nop
hlt
lret
pop
shl
mov
pop
lret
jbe
fucomp
mov
push
xor
xor
and
scas
enter
mov
out
ja
mov
stc
ffree
dec
lcall
add
rolb
adcl
dec
mov
sub
mov
sbb
cmp
rclb
lea
or
test
dec
or
push
or
or
push
adc
jnp
inc
sbb
aaa
sahf
xchg
cmp
call
in
mov
cmc
loop
sbb
adc
inc
adc
mov
pop
add
dec
mov
mov
inc
jg
dec
mov
out
outsb
das
push
xor
dec
inc
dec
inc
mov
loope
lea
add
rclb
mov
lahf
add
shlb
mov
add
mov
in
mov
adc
nop
hlt
inc
cld
xlat
popf
inc
or
scas
push
imul
int
fcoms
filds
sbb
jns
addl
push
and
lcall
inc
sti
mov
cmp
or
sub
test
hlt
pop
inc
insl
test
pusha
mov
sbb
or
inc
pop
inc
adc
ret
mov
add
mov
jne
mov
adc
xchg
jp
pop
aaa
lahf
sub
inc
sub
pop
shrb
or
shrl
push
mov
sbb
mov
cmp
cmp
lds
push
and
push
lret
jbe
push
push
sub
popf
adc
sahf
jg
mov
lret
add
lcall
rcr
fnstenv
lahf
inc
pusha
push
cmc
pop
pop
pop
jge
push
xlat
cmp
jnp
cmp
mov
out
dec
mov
popf
adc
xlat
call
xor
pop
cli
push
enter
andb
add
mov
push
por
mov
mov
mov
clc
daa
fwait
dec
push
sub
sbb
cwtl
dec
jns
lods
and
loop
fidivl
in
lea
aam
fucomi
or
incb
fnstenv
jne
xchg
sbb
lret
test
sahf
nop
hlt
lret
mov
pop
in
fstps
jp
in
sbb
sbb
in
es
jno
pop
dec
add
popf
push
repnz
daa
mov
push
lea
ds
push
mov
sti
hlt
or
inc
inc
pop
dec
cs
insb
cli
jmp
jns
mov
aad
jmp
push
jecxz
jno
push
loopne
jl
ss
add
gs
xchg
jne
lods
adcl
sub
stc
std
pop
imul
push
ss
fimuls
cmc
addr16
inc
mov
stos
cwtl
pop
arpl
inc
sbb
xchg
test
daa
hlt
outsb
pop
lods
mov
push
add
loope
nop
hlt
jmp
dec
adc
rcll
sub
loopne
popf
stos
pop
loopne
push
data16
mov
push
aad
sbb
mov
jmp
mov
nop
hlt
lret
addb
mov
scas
sub
xchg
jmp
clc
xchg
mov
add
in
adc
aas
stc
jbe
hlt
lcall
xchg
cltd
cltd
pop
xchg
mov
imul
push
lods
pop
xchg
movsl
xor
lods
add
mov
inc
enter
sbb
cmp
add
mov
movsb
arpl
in
sahf
int
push
pop
mov
mov
adc
mov
or
test
pushl
fwait
outsl
pop
adc
push
das
mov
or
cltd
out
mov
jo
cltd
hlt
jbe
add
cwtl
iret
xlat
mov
add
xchg
ffree
xchg
and
jbe
mov
push
dec
cmp
xchg
lret
jbe
lret
pop
loope
sbb
xchg
mov
aad
mov
or
mov
out
pop
test
cltd
xlat
mov
imul
xchg
mov
xchg
sahf
mov
adcb
int3
shll
cli
ror
mov
jmp
mov
inc
test
lcall
enter
cwtl
rcrb
test
cwtl
sbb
fisttps
stos
test
xchg
popa
add
sbb
mov
or
cmpb
jmp
or
in
rcrb
call
in
les
mov
mov
pop
shll
mov
sub
adc
je
jo
adc
in
push
mov
push
push
lret
jbe
dec
mov
sbb
out
xchg
cmpsb
cltd
and
mov
dec
sub
xor
loope
adc
loope
push
adc
arpl
adc
sub
in
insl
cmp
sub
xor
pop
mov
pop
xchg
xor
mov
jno
cwtl
push
stc
push
xchg
ret
and
pop
or
or
and
jns
lret
mov
jb
and
sbb
push
mov
mov
mov
dec
jl
addr16
or
xor
dec
inc
mov
or
jecxz
push
cli
mov
inc
cmpl
mov
jns
xchg
xor
dec
lret
movsl
xchg
aad
cmpsb
out
inc
arpl
in
test
mov
jg
jbe
pop
mov
nop
hlt
lret
push
fists
xor
push
dec
mov
push
popa
sub
ret
fcompl
mov
divb
adc
fbld
ja
adc
jae
sbb
jg
inc
popa
fwait
jnp
fbld
and
mov
fs
push
int3
test
movsb
sahf
xchg
push
lret
jbe
or
add
dec
sub
dec
xchg
fisubs
jno
sub
mov
adc
cmpsw
sbb
jge
roll
or
pop
cmp
mov
insl
lods
mov
push
cli
push
rcr
test
xor
aam
or
lret
into
popf
lods
dec
mov
out
mov
lds
fstl
xor
leave
cmp
mov
adcl
arpl
xchg
mov
pop
adcb
rcrb
testl
xlat
repz
jle
mov
sub
xor
arpl
jns
subb
mov
call
fisttpll
aas
clc
nop
pushf
hlt
lds
addl
testb
jnp
loope
mov
pcmpgtd
rolb
into
scas
push
jae
pop
stos
hlt
lret
rolb
arpl
repz
mov
mov
push
sti
cmpsb
nop
mov
cmc
push
mov
xchg
mov
and
xchg
mov
iret
lea
cmpsb
fstp
jle
scas
shll
or
lods
pop
mov
jb
mov
leave
nop
adc
and
mov
push
push
dec
jmp
jge
mov
jns
cs
push
xor
dec
in
jecxz
sbb
adc
lret
jbe
sub
push
sub
jae
ret
das
clc
jg
scas
aaa
arpl
in
inc
sub
sub
pop
out
mov
mov
jge
pushf
bt
js
les
inc
insl
scas
and
sbb
lahf
mov
add
push
repz
cmp
lcall
std
pop
cmpsb
adc
adc
lea
lods
shll
hlt
lret
test
cld
call
jbe
jg
sbb
stos
sbb
xchg
rcrb
aaa
sbb
js
mov
nop
hlt
lret
mov
in
add
movsb
enter
pop
das
xchg
or
les
fistl
and
sub
add
je
lea
pushw
cmp
push
mov
nop
hlt
lret
mov
pushl
sub
xchg
fildl
in
js
fisubl
pop
lret
lcall
adc
sub
loope
add
int3
out
mov
lret
xor
in
inc
and
jae
sub
inc
mov
imul
aas
scas
xorl
call
fbstp
shr
sub
popf
push
dec
pop
aam
push
push
cmp
lret
xor
jb
push
hlt
jbe
sbb
sub
loop
mov
cmpsl
sbb
sahf
outsl
popf
lods
push
lret
jbe
cmp
or
rol
push
ror
jbe
fsubrp
mov
push
xor
mov
jmp
adc
subl
xchg
add
sub
pop
mov
mov
aas
jmp
insb
or
pop
loope
xor
rcrl
pop
push
int
insl
and
stos
adc
sub
add
mov
popa
dec
jbe
nop
and
lock
repz
insb
xor
jle
pop
mov
inc
arpl
mov
adcl
inc
bound
add
push
or
repnz
and
push
hlt
cwtl
jg
shll
dec
jnp
sub
sub
mov
dec
rcrl
pop
cmp
jbe
call
jecxz
sub
xchg
in
pop
ret
jle
jne
orb
ja
ret
test
push
addr16
push
mov
cmp
ret
pop
jl
cwtl
lcall
out
cmp
loop
push
ret
xor
cmpsb
nop
aas
ret
jle
roll
inc
cmc
lret
pop
fisubrl
mov
push
rorb
pop
cmp
and
insl
sbb
outsb
jg
mov
or
mov
pop
aaa
jecxz
cmp
icebp
mov
cs
mov
push
nop
fistpl
add
pop
mov
iret
mov
sbb
and
jnp
add
jne
enter
subb
fcoml
ljmp
and
clc
jae
inc
bound
int3
jnp
mov
push
xlat
push
cmp
outsl
sbb
jl
enter
xchg
scas
push
push
rcrb
lds
jmp
mov
jecxz
xchg
loop
mov
xchg
cmpsl
pusha
lret
add
cld
push
ja
aas
shll
inc
lock
or
sub
fwait
mov
loop
push
out
mov
xlat
xor
pop
sbbl
adc
xchg
cmpsl
push
push
jno
into
dec
jnp
dec
lock
out
leave
xor
mov
adc
inc
cmp
aad
out
add
arpl
negb
and
paddusw
jo
push
push
mov
mov
nop
hlt
lret
inc
mov
gs
stos
or
aaa
kmovw
pop
inc
shll
ja
mov
mov
lret
push
lret
jbe
lock
sub
pusha
pop
dec
pop
cs
loop
in
push
push
and
enter
add
xchg
mov
mov
cmpsb
jo
jbe
sbb
or
mov
mov
mov
lret
push
sub
mov
bound
bound
cmc
add
lret
rclb
ljmp
cmp
push
mov
adcl
movsl
pop
addb
jo
outsl
int
xor
sbb
mov
sahf
jp
int
iret
cmpb
cmpsl
ret
flds
lods
pop
lds
add
test
stos
insb
jb
push
mov
push
iret
dec
in
mov
addr16
pop
cs
mov
repnz
les
mov
bound
xchg
xor
rolb
adc
daa
mov
movsl
test
jmp
dec
adc
adc
xchg
insl
adc
fcomp
sbb
cmp
decl
mov
add
or
out
adc
lret
or
out
sbb
xor
or
inc
cli
sub
push
pop
cmp
lret
xchg
ret
push
cmp
cmp
adc
fcmovnb
jp
push
jno
les
notl
cltd
je
mov
push
cmp
jno
ds
jae
hlt
push
jne
fisubrl
nop
hlt
mov
jle
lret
cld
push
add
fildl
fcomip
mov
sti
dec
jl
cs
lcall
rcrb
xchg
sahf
sbb
rolb
and
xchg
mov
mov
insb
xor
mov
gs
js
pop
inc
hlt
std
adc
dec
incb
popf
xor
lret
jbe
sub
add
fstpt
in
add
mov
xor
push
push
scas
sbb
dec
xchg
push
sbb
test
fwait
adc
mov
push
cmpsl
push
cmp
sub
adc
mov
inc
movb
lahf
js
mov
push
push
les
push
pop
or
std
sbb
scas
dec
in
je
lret
loope
add
or
push
stos
cmc
jb
clc
aaa
xchg
rorb
lret
cmp
aas
iret
jbe
hlt
nop
mov
push
adc
sub
mov
push
xlat
dec
adc
leave
in
int3
dec
mov
mov
mov
fsubl
cs
pop
and
aad
and
pop
push
es
jns
iret
mov
loope
arpl
inc
mov
nop
hlt
lret
sbb
fdivrl
mov
cmp
outsl
es
in
enter
xor
leave
adc
unpcklps
cmpsb
call
hlt
mov
push
and
xchg
sub
dec
adc
leavew
es
adc
push
cli
add
mov
mov
lcall
push
xor
cmc
insb
nop
or
inc
cmp
xor
cmp
push
inc
xchg
or
call
sbb
push
mov
pop
fsubl
aaa
jp
mov
or
bnd
gs
mov
pcmpeqb
hlt
push
lret
jbe
mov
cmp
inc
mov
jbe
pop
rclb
jns
aaa
sbb
and
dec
jge
stc
in
jae
sub
inc
pop
das
sti
mov
cltd
inc
incb
mov
jle
push
inc
in
lock
xchg
xor
mov
mov
std
xchg
fsubp
mov
adcb
xchg
hlt
lret
push
mov
xchg
hlt
lret
push
lret
jbe
xor
out
cmp
enter
push
pop
decb
ss
jg
push
mov
sub
test
ljmp
cltd
jbe
xor
insb
rolb
xchg
mul
fcmovnb
xchg
fld
jns
jns
mov
push
pop
les
mov
push
push
aaa
lahf
js
mov
push
push
les
push
push
cld
xchg
xor
loope
xchg
imul
shll
subb
adc
movsb
jne
ret
pop
data16
mov
enter
mov
jno
fdivl
in
faddl
sbb
sub
mov
mov
lcall
insb
push
test
mov
iret
loopne
mov
cmpsb
test
jmp
push
lret
jbe
fxch
mov
fnstenv
mov
sarb
add
out
jg
mov
nop
hlt
lret
push
lret
jbe
xor
or
testl
dec
dec
ss
xor
push
sbb
add
sbb
dec
xor
sbb
xchg
cmp
popa
sub
loopne
push
pop
lods
jg
push
lret
mov
lret
mov
mov
loope
rcl
push
inc
lea
mov
insl
sub
fs
scas
into
aaa
cmp
cwtl
aam
inc
clc
scas
push
loopne
jno
nop
je
mov
inc
insb
test
stos
sbb
mov
add
sbb
pop
cmp
insb
cmpb
jnp
mov
dec
arpl
jle
loope
add
xchg
push
fwait
and
inc
jg
aas
and
mov
fidivrs
ret
mov
lods
mov
sahf
imulb
mov
repz
jg
dec
ja
add
adcl
mov
int
lret
mov
jbe
add
mov
pop
lods
in
mov
aas
sub
and
daa
loopne
imull
xchg
push
mov
push
arpl
jb
mov
fcoml
sub
adc
cmp
inc
shlb
xor
adc
lret
xchg
or
push
add
inc
adcl
mov
push
and
shll
movsb
fwait
adc
fisttpl
jne
gs
ror
lds
mov
pop
adc
cmc
or
enter
fwait
loopne
into
inc
testl
adc
fldl
mov
push
or
imul
ljmp
mov
xchg
push
sbb
loopne
xor
aaa
repz
sbbl
hlt
jo
iret
repnz
fsubp
mov
adcb
cwtl
daa
rcrl
push
inc
data16
imul
decb
into
nop
jno
iret
sub
subl
mov
inc
lods
scas
fsubrl
mov
xchg
lret
mov
loope
arpl
lret
mov
pushf
xchg
cmp
daa
jg
mov
cmc
dec
sub
dec
sbbb
ljmp
inc
mov
hlt
mov
xchg
and
or
aam
push
adc
les
inc
mov
nop
hlt
lret
mov
insl
sbb
xor
adc
and
xlat
inc
pop
sub
popf
inc
cmc
mov
scas
jae
pushf
std
cmp
arpl
push
mov
inc
fldl
movsb
add
js
xor
pop
sbb
std
stos
add
ja
js
scas
adcb
and
dec
pop
pop
cmp
jg
cli
fisubs
inc
mov
stos
sbb
pop
push
fsts
push
divb
jo
lcall
push
fildl
mov
jae
cmp
data16
rcrb
shll
hlt
mov
inc
sarb
int3
out
mov
jno
leave
ds
ror
sti
addr16
and
sar
pop
scas
imul
inc
cmpsl
push
mov
pop
push
adc
jbe
lods
call
nop
hlt
rcr
xor
repnz
mov
fldenv
das
rol
sub
mov
popa
mov
sbb
or
popf
inc
add
inc
test
addr16
jo
in
push
xor
jne
xor
sbb
aaa
mov
fnstcw
dec
add
or
adc
lods
inc
dec
hlt
push
fwait
mov
les
out
adc
cmp
cwtl
mov
jbe
mov
fcoml
les
sbb
es
out
add
add
push
loop
fwait
mov
call
lahf
mov
clc
aaa
jno
aaa
les
sub
hlt
jle
arpl
push
cmc
sbb
cmp
jo
andl
out
mov
push
cmc
mov
jmp
nop
hlt
popa
in
rcr
dec
push
add
cmp
dec
outsb
shlb
push
loope
les
mov
adc
pushf
nop
hlt
lret
jb
xchg
jmp
adcl
and
cmp
push
push
xor
cmp
mov
sti
sub
loope
jns
test
test
test
sbb
inc
imul
movsb
leave
shrb
movsl
insb
test
test
loop
ficoml
data16
sbb
jg
mov
or
call
mov
ret
hlt
xlat
adc
fldl
ret
add
mov
mov
push
inc
mov
pop
ds
jb
inc
mov
fs
mov
mov
jb
add
adc
and
popf
pop
mov
dec
lret
icebp
sbb
sbb
aaa
jp
fildll
or
popf
sub
push
lods
outsb
je
in
je
sbb
in
and
xchg
fucom
addb
xor
sbb
push
loopne
jae
mov
jne
inc
icebp
push
mov
push
cmpsb
loope
mov
or
test
mov
pushf
bnd
or
or
cli
inc
lcall
hlt
fnstcw
dec
push
lret
jbe
cmp
ret
add
cmp
dec
ret
test
xor
push
adc
jmp
xor
popf
and
mov
cmpsl
push
jmp
int
cld
shr
jmp
inc
call
ljmp
lret
pusha
mov
adc
out
jae
popa
ss
sub
sti
inc
iret
in
ret
sti
and
jecxz
fsubrp
push
movsl
insl
jmp
into
and
and
flds
mov
adcl
in
dec
loop
sbb
push
loope
xor
insl
enter
jns
xchg
sbb
mov
mov
lahf
in
cmp
mov
call
mov
add
je
lahf
jb
push
clc
popf
aas
std
jbe
hlt
or
mov
repnz
dec
outsl
sahf
mov
mov
jo
inc
xchg
adc
push
mov
push
in
add
inc
loop
push
jnp
xchg
sub
jns
and
dec
jl
lret
mov
loop
imul
mov
mov
or
out
adcl
outsl
sbb
cmp
push
jp
loopew
xor
sub
inc
pop
jl
push
js
fsubrl
nop
hlt
add
ja
hlt
leave
sub
jmp
adc
xchg
movsl
sti
push
jecxz
jle
pop
fsubr
repnz
aad
dec
or
push
in
or
shll
sti
jne
and
sub
adc
mov
nop
repz
mov
nop
sarb
imul
out
mov
jno
pop
outsb
lods
cli
hlt
out
movsl
adc
and
imul
mov
push
ret
cltd
das
inc
and
rorb
data16
jo
mov
xchg
pop
test
cltd
inc
pop
adc
mov
mov
sarb
lret
mov
fistpl
xchg
inc
inc
ffree
scas
xor
cld
scas
lcall
ljmp
inc
out
adc
cmp
cmp
test
push
std
.byte
.byte
