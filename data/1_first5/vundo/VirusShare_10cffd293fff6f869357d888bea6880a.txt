ja
incl
add
mov
add
mov
jmp
jmp
mov
inc
or
add
mov
add
mov
push
push
inc
jg
sti
testb
jo
dec
cs
push
arpl
rcrl
in
inc
push
mov
mov
mov
push
dec
push
add
cli
mov
mov
fstpt
jmp
inc
inc
add
insl
mov
jb
mov
or
xor
inc
ja
in
fistpll
ret
data16
mov
cmp
fs
pushf
test
mov
adc
je
jbe
add
add
inc
and
std
pop
add
jno
dec
adc
or
aaa
popa
fcomi
iret
outsl
and
aam
jnp
inc
add
mov
push
xchg
sub
jb
addr16
jg
jae
fs
mov
sahf
or
add
aas
xchg
or
imul
inc
ret
add
jmp
mov
fcmovbe
or
mov
idivb
data16
push
call
or
push
cld
pop
mov
inc
cwtl
sbb
push
pushf
or
fs
mov
fcmovnu
mov
or
and
vmwrite
fs
pushl
loopne
movsl
int
lock
pop
gs
fs
fs
or
jge
adc
and
in
fs
lods
aas
cmp
mov
mov
fs
sbb
or
fwait
or
repnz
push
inc
dec
addr16
sbb
fs
sub
mov
inc
ja
in
cld
adc
cmp
test
or
les
mov
adc
insl
in
mov
mov
cmp
push
inc
cwtl
mov
mov
inc
int3
aam
pop
add
lret
fs
test
rolb
pushf
lods
fs
push
mov
insl
outsb
popf
add
sbb
stos
sbb
dec
or
notb
add
mov
out
push
pop
jg
cmpps
mov
push
test
fs
imul
mov
mov
xchg
sbb
dec
pusha
lock
or
out
and
dec
add
adc
pop
fisubrs
jle
inc
add
jns
ljmp
stc
pop
push
add
xor
addb
leave
xchg
repz
sub
xchg
xchg
or
insb
lcall
jb
fs
shrb
push
insl
xchg
data16
cli
adc
mov
incb
sub
decb
insl
js
mov
andl
sbb
push
mov
data16
sbb
aas
mov
je,pt
scas
inc
push
or
jl
mov
jo
xor
sbb
adc
pop
or
and
in
mov
aaa
mov
xor
je
cmp
lods
and
or
adc
ret
xchg
dec
jecxz
mov
sahf
inc
stos
xchg
sahf
jbe
ljmp
add
mov
sub
cmp
xchg
pop
lret
fs
pushf
or
xchg
add
mov
adc
xor
push
sbb
aas
adc
fcomip
fs
push
ljmp
jbe
imul
push
sub
pop
sub
and
push
repz
dec
daa
aaa
mov
pop
adc
inc
int3
leave
fistps
mov
xor
and
fs
dec
out
pop
ss
add
outsl
mov
jae
sbb
je
loope
pop
scas
jmp
popf
jb
cmp
mov
jmp
push
mov
mov
fs
mov
outsb
dec
jl
xor
outsl
inc
and
cmp
pop
cli
dec
or
and
dec
adc
inc
jb,pt
push
arpl
jg
push
mov
pop
insl
add
sub
sahf
and
adc
std
xchg
fildl
dec
cltd
dec
push
out
mov
pushl
add
fstps
sbb
lahf
add
push
push
sbb
clc
shrb
push
or
call
jnp
mov
ja
idivb
fs
ss
push
dec
subb
scas
jns
and
testl
cmpsl
mov
mov
adc
in
jae
add
je
add
arpl
add
cmp
cmp
add
in
hlt
js
inc
data16
test
pop
fs
or
fsubrs
pop
jnp
or
repnz
add
sti
out
into
rclb
sarb
dec
pop
dec
adc
dec
cmc
insl
clc
dec
fisubrl
loop
mov
mov
out
ret
fists
xchg
fistpll
movsl
sbb
xor
or
dec
in
fwait
std
hlt
enter
jge
fdivr
sbb
mov
mov
ffreep
dec
ss
test
cmp
jmp
add
adc
mov
pushf
into
adc
jmp
mov
ret
pop
jmp
add
lock
jle
mov
clc
xchg
ret
inc
xchg
push
jne
xchg
cld
fmuls
jae
adc
bound
fs
jmp
mov
xlat
icebp
int
add
jno
loope
ret
aaa
xor
or
jmp
popa
fidivrl
sti
jle
sub
mov
addr16
ret
lret
inc
sbb
add
mov
add
lea
cltd
orb
imul
idivb
add
or
push
js
lods
cmp
fnstsw
in
mov
cmpsl
add
and
push
arpl
cmc
push
add
scas
sbb
les
pop
and
cmpsl
jno
adc
test
scas
fisttpl
jg
jb
sbb
push
out
pushf
in
dec
dec
bound
addr16
xchg
push
push
adc
out
mov
cmp
xchg
fs
popf
call
mov
jp
inc
jmp
xchg
fmull
xchg
cwtl
push
inc
or
test
in
mov
push
xlat
sub
scas
sub
into
dec
sub
sbb
out
cmpsb
inc
sub
fnsave
sbb
and
push
stos
je
outsl
fdivr
xor
add
jno
dec
sbb
xor
push
or
out
ret
xor
push
daa
gs
mov
xor
push
dec
push
xchg
jns
mov
lock
jg
js
fcmovnbe
les
add
js
xor
cmpsl
mov
cmpsb
dec
in
out
inc
dec
lds
adc
pop
xor
scas
or
mov
cwtl
mov
addl
mov
insb
sbb
or
push
mov
mov
xor
and
orb
std
xchg
mov
adcl
adc
inc
pop
jp
mov
xor
cwtl
les
or
pop
cmp
push
fisubl
mov
xchg
out
mov
push
or
or
adc
push
mov
daa
mov
and
scas
bound
dec
sub
pusha
push
leave
add
cmp
dec
pop
cmp
xor
orb
cmp
out
add
test
aam
push
sub
inc
jnp
test
dec
push
push
cld
push
cmp
test
pushl
aam
xchg
cmp
pop
pop
outsb
jmp
mov
dec
cmp
push
jne
and
lock
add
jp
in
add
mov
shll
sub
or
outsb
bound
xor
inc
xchg
push
sub
out
push
paddd
inc
xlat
lret
mov
lods
lods
insl
xchg
pop
js
push
cmp
xor
cli
out
mov
stos
jbe
jbe
push
stos
dec
sub
je
xlat
into
and
fs
aaa
aas
and
das
jecxz
lcall
mov
sar
mov
lahf
jecxz
es
ss
xor
dec
push
fidivs
fldl
jge
push
rorl
xchg
xchg
xchg
push
bound
sbb
xor
xchg
and
add
jl
in
add
es
je
xlat
mov
dec
test
movsb
fs
jle
leave
es
xchg
mov
push
sarb
fs
incl
loop
popa
fsts
fidivrs
push
sub
mov
andb
sbb
and
dec
mov
imul
cmpsb
or
stos
cli
push
or
sub
test
lahf
mov
inc
and
ret
roll
std
add
mov
push
imul
ss
push
jl
dec
adc
pop
fcmovu
clc
and
popa
imul
fdivrs
sbb
dec
and
outsb
mov
test
push
jecxz
outsl
fwait
xchg
fstp
lret
leave
mov
icebp
add
mov
mov
xor
gs
das
or
adc
add
dec
das
sub
jl
xor
ror
or
push
add
jb
pop
outsl
adc
shlb
ret
xor
sbb
mov
mov
es
test
adc
jno
or
mov
int3
push
push
push
xor
sub
and
pop
lock
mov
cmp
aam
cwtl
daa
ds
push
dec
sub
fmuls
lods
pop
fdivl
js
or
arpl
out
int
adc
mov
cmp
push
sarl
lret
das
lock
mov
dec
xchg
pop
pause
andb
out
loopne
xchg
sahf
dec
adc
dec
jge
lcall
mov
xor
xchg
mov
xchg
ret
movb
notb
cmp
jmp
push
inc
ret
pop
xlat
gs
add
add
fst
je
cwtl
or
sub
sti
imul
stos
push
nop
cmp
lock
in
ss
xchg
lds
lea
insl
and
hlt
inc
jae
je
sub
arpl
aaa
inc
jmp
and
out
ret
daa
dec
push
mov
aaa
lcall
aaa
sbb
dec
push
inc
fcompl
and
add
sbb
add
cmc
movhlps
pushl
or
inc
loope
frstor
pop
and
faddp
scas
adc
xchg
pop
inc
add
sbb
jmp
push
jmp
and
mov
xlat
movsl
mov
pop
lock
test
inc
or
add
call
sub
dec
nop
inc
adc
fwait
loopne
in
add
xchg
push
pop
mov
dec
inc
rclb
nop
or
push
cmp
or
mov
dec
push
clc
repz
push
mov
ja
ficompl
repz
orb
adc
fstps
push
cmp
arpl
add
lods
cltd
dec
or
sbb
popf
in
pop
add
fsubrs
data16
and
movsb
push
inc
push
nop
bound
adcl
add
ss
or
xor
push
shrb
mov
adc
mov
hlt
jnp
inc
fadds
leave
dec
mov
hlt
cmp
push
movsb
loop
mov
or
shrl
in
inc
dec
test
andb
lods
cwtl
add
sbb
sbb
popf
test
int3
cmp
jb
fcomps
mov
push
frstor
lret
sbb
outsb
int
xor
mov
push
sbb
jmp
iret
aam
mov
jbe
mov
sbb
addr16
mov
xchg
adc
sbbb
leave
inc
push
push
or
enter
and
push
dec
adc
lret
shl
pop
add
outsb
push
fisttpl
xor
dec
sbb
xchg
cmc
push
fwait
sbb
jge
icebp
jno
in
fcmovnbe
mov
in
sbb
roll
ljmp
and
imul
out
xor
add
mov
insl
or
sub
pop
sbb
stos
or
insl
mov
mov
fstps
pop
mov
inc
push
inc
and
cs
lea
in
cmp
outsl
aaa
xchg
cltd
inc
mov
pop
andl
stos
or
divl
push
xchg
lret
test
inc
into
inc
xor
mov
test
fwait
lds
outsb
pop
xor
hlt
sub
imul
or
jo
fnstsw
outsb
push
and
xlat
ret
iret
int3
sahf
sbb
push
shll
dec
xor
xor
scas
jnp
gs
add
lea
mov
push
fwait
subl
das
pop
cwtl
fidivs
call
push
inc
jecxz
jmp
pushf
add
mov
push
xchg
jbe
fsubr
je
popl
nop
in
xchg
jnp
or
movsb
dec
adc
testb
pop
nop
in
mov
icebp
push
push
xchg
or
add
cmc
jl
ja
js
mov
mov
sti
adc
add
mov
mov
mov
fisttps
loop
and
jmp
loope
ret
push
arpl
in
das
cmp
xor
lea
cmpsl
inc
mov
sub
jo
push
arpl
rcr
loopne
xchg
cmp
adc
cmpsl
ror
pop
push
imul
stc
push
jb
pop
outsl
insb
lea
cmp
jnp
cmp
jo
mov
pop
out
insb
cmp
ret
push
nop
add
rolb
and
imul
xchg
pop
movsbl
sbb
cmpsb
divps
fsubr
jns
ja
adc
decl
pop
inc
or
push
inc
or
lds
mov
sar
mov
dec
sarl
jp
xchg
lds
imul
repz
lahf
xchg
sbb
das
rcr
mov
push
mov
dec
mov
fdiv
fisubl
cmovbe
test
movsl
inc
cmpsb
add
nop
ficoml
das
mov
cmpsb
push
stos
jp
call
or
sbb
call
je
dec
out
or
sub
movb
mov
lea
dec
mov
inc
lcall
andl
lret
or
cmp
mov
mov
movsl
and
cwtl
cmpl
adc
mov
add
pop
push
testl
sti
ret
scas
aas
inc
push
dec
aas
xchg
stc
sub
ja
pop
hlt
push
sub
inc
mov
inc
decl
pop
rorl
repnz
adc
jmp
jae
or
sub
frstor
popa
icebp
xorb
sbb
inc
fwait
ljmp
push
dec
or
mov
adcl
sbb
sub
inc
mov
pushf
mov
add
lods
aaa
pop
or
jne
and
orl
mov
add
imulb
push
push
add
popf
loop
addr16
cs
push
shlb
jbe
and
jne
dec
scas
xchg
xor
dec
idiv
data16
and
xor
data16
fimuls
xchg
mov
loope
xor
gs
adc
ret
dec
std
popf
in
push
inc
sbb
clc
ds
pop
aam
jmp
adc
inc
clc
or
add
push
pop
and
movsb
ret
stos
in
inc
xchg
jno
sub
sbb
pop
mov
jecxz
jl
pop
jmp
pushf
in
jp
xchg
cld
add
xchg
sbb
mov
inc
inc
stc
or
sub
dec
cmp
and
add
mov
loope
or
dec
pop
add
jb
mov
aam
push
xor
mov
cwtl
push
in
je
cmp
cmc
mov
fcompl
inc
xchg
fidivrs
push
jg
adc
cltd
outsb
and
imul
cmp
scas
push
xor
adc
xor
rclb
mov
mulb
cmpsb
scas
cmp
mov
scas
sahf
loopne
inc
inc
fwait
pop
cmp
jle
fbstp
mov
or
lret
push
adc
rclb
push
and
lea
adc
sbb
daa
or
movl
fldenv
push
adc
push
sbb
decb
xor
pop
sub
rolb
mov
mov
adc
dec
test
nop
in
and
lods
jb
push
or
ja
popf
cmp
dec
push
sbb
insb
and
fadds
xchg
icebp
or
andb
sbb
adc
jp
dec
mulb
int3
xchg
clc
jg
inc
sub
repz
std
sbb
cmc
rcl
jmp
adc
mov
lods
paddusw
daa
hlt
pop
sub
mov
pop
and
mov
sarb
inc
nop
fiadds
pop
mov
ljmp
mov
fistpl
jg
mov
test
dec
out
inc
insb
push
dec
sbb
mov
sbb
dec
pop
pop
pop
idiv
sbb
xchg
add
dec
in
mov
jecxz
add
enter
add
mov
cld
js
inc
pusha
in
lret
cld
gs
leave
lock
adc
push
rclb
loop
xor
ljmp
and
cmp
adc
sahf
clc
movsl
outsl
out
jne
mov
jmp
rcrl
shll
add
xchg
cli
xchg
loope
xchg
movsb
test
mov
aas
add
jl
dec
daa
repz
adc
loope
notl
icebp
xor
scas
frstor
je
mov
inc
adc
scas
mov
loope
mov
ljmp
dec
aaa
cs
stos
add
loope
jmp
outsl
jae
faddl
pop
call
fstpl
xchg
orl
push
cmp
cmpb
cmpsl
mov
pop
pusha
sbb
cmpsb
jmp
das
mov
mov
inc
mov
loop
xchg
out
pop
hlt
cmp
xchg
mov
clc
push
lahf
in
out
adc
inc
gs
in
and
push
sbb
dec
or
dec
inc
pushf
mov
and
fistpl
inc
push
call
daa
inc
or
jae
mov
mov
sbb
xor
hlt
adc
sbb
lods
push
pop
inc
lret
adc
mov
lahf
mov
adc
sub
daa
je
aaa
push
adc
jecxz
jg
in
nop
fistpll
adc
sbb
and
mov
jbe
or
push
lret
xchg
and
pushf
push
add
jne
out
sub
pushw
push
xor
sbb
insb
sahf
mov
movsb
push
les
mov
cmp
ret
xchg
sar
loopne
push
and
inc
xor
jle
jecxz
sbb
lret
push
pop
cmp
shll
sub
loop
jp
or
fnsave
fidivl
call
sub
lcall
jmp
mov
pop
or
sub
jge
push
popa
pop
pushf
gs
inc
popf
jl
cs
into
test
mov
sbb
xchg
mov
cmp
mov
insl
adcl
push
popa
dec
ror
popf
xor
mov
and
cs
fsubrl
arpl
adc
inc
inc
xor
or
xor
enter
test
push
cmp
pop
or
out
popa
xchg
xchg
js
mov
pop
pusha
fcompl
mov
lea
decl
push
mov
loopne
lcall
fstpl
out
xchg
and
xchg
sub
pop
mov
addl
and
xchg
cmp
dec
icebp
dec
pop
dec
icebp
int
and
scas
mov
cmc
pop
adc
pusha
test
loope
imul
cs
or
jmp
xchg
lods
test
pop
scas
jmp
loope
nop
pop
pop
inc
inc
mov
loope
xlat
dec
mov
fsts
pop
shlb
decl
add
lret
or
cmp
int3
or
xchg
xlat
gs
mov
xor
mov
pop
sbb
pusha
sbb
dec
cmp
fcoml
push
imul
arpl
and
test
dec
jo
outsb
mov
cld
adc
cld
sbb
and
roll
leave
sbb
fstp
ja
push
xchg
data16
jbe
pop
mov
sbb
and
pop
fwait
mov
aaa
outsb
inc
or
xor
fimuls
pop
int3
push
or
fcoms
insb
jl
adcb
cli
add
xor
sbb
push
jmp
aaa
or
inc
testl
repnz
jg
std
xchg
mov
jg
sbb
je
subb
lds
add
scas
inc
shl
lret
int
cmp
mov
testl
and
push
push
dec
lock
lahf
pop
lret
mov
push
pop
sbb
cli
out
mov
loopne
xor
pop
xor
push
jns
fimuls
je
fnstcw
pop
jg
push
insb
cld
cwtl
or
leave
mov
int3
pop
fnstsw
cli
sub
mov
arpl
ret
or
cmc
pop
fildl
jne
sub
sbb
ss
je
dec
or
add
lock
push
lds
mov
xchg
sbb
mov
pop
jp
outsl
lds
inc
jle
or
or
add
push
and
sub
clc
mov
mov
mov
leave
lret
or
ret
jmp
icebp
jnp
jno
in
ds
mov
push
jg,pn
push
mov
test
pusha
dec
push
add
sahf
test
xor
call
imul
and
js
mov
test
test
or
fists
ljmp
cmc
sub
push
les
ficoml
dec
dec
mov
jne
out
inc
ja
sub
leave
loop
mov
std
dec
xor
jno
sar
sbb
add
sbbl
sarb
pop
and
inc
mov
movsl
dec
mov
call
addb
negl
addl
clc
cmp
or
ljmp
sahf
in
and
add
or
sub
xchg
mov
call
nop
fwait
push
mov
cmp
lcall
lea
sbb
es
adc
test
mov
inc
test
in
xchg
and
jne
adc
xchg
inc
xor
xchg
fwait
add
and
lods
pop
mov
in
sbb
xchg
cli
mov
dec
push
sti
mov
mov
inc
mov
jne
sbb
or
sbb
mov
lret
add
adc
js
push
in
jl
jmp
pop
jns
sbb
fxtract
dec
xchg
mov
adc
loopne
inc
shll
int3
sbbl
in
mov
adc
lods
test
enter
push
cmp
jnp
cmp
lds
popa
push
adc
push
loope
inc
xor
fxch
sbb
inc
rolb
cmp
insl
jge
cmp
push
pop
xchg
mov
or
fs
xchg
lahf
sub
pop
dec
push
or
inc
dec
or
cltd
sbbb
push
jmp
daa
loope
insb
lret
mov
lods
cmpsl
inc
xlat
jp
push
xchg
ret
sti
cltd
icebp
jg
xchg
inc
in
addb
dec
xor
repz
pop
xor
mov
lcall
or
daa
mov
adc
aaa
push
ja
sbb
cmp
ss
push
jo
mov
movsb
mov
fwait
in
leave
inc
jg
in
sbb
popa
sbb
popa
lret
adc
sub
inc
fdivrs
xorl
xor
add
stc
pop
inc
fcoml
pusha
fwait
inc
rolb
ret
mov
xor
das
jl
pop
jle
das
inc
ds
add
sub
cld
ret
mov
add
ror
xor
sbbl
push
push
in
mov
push
adc
pusha
mov
dec
sbb
rcrl
test
mov
jnp
jmp
cmp
outsl
jns
mov
or
idivl
je
std
jnp
inc
scas
out
add
jnp
stc
sbb
jg
scas
push
xor
pop
repnz
xchg
adc
add
cli
pop
jne,pt
mov
cmpsb
push
lret
lods
xor
std
cmp
and
xchg
insl
scas
inc
cmp
mov
sbb
mov
je
int
push
add
dec
mov
lret
aaa
mov
xchg
mov
fadds
or
sbb
clc
mov
dec
lods
loope
rcrb
sbb
out
jmp
rol
jecxz
and
pmullw
insb
mov
icebp
dec
leave
push
cmp
aas
js
ret
loopne
scas
or
addb
sbbl
fidivs
jecxz
pop
push
lret
pop
or
mov
cmpsb
fcom
jbe
lock
out
add
mov
lds
lock
daa
je
mov
popa
add
xchg
jle
xor
xchg
inc
jg
insl
sbb
mov
inc
adc
add
dec
roll
lret
jb
stos
mov
mov
movsb
pop
mov
mov
pop
movsb
xchg
and
cmp
add
xchg
mov
lock
cmp
mov
fists
dec
lcall
arpl
iret
stos
mov
cmp
clc
fcompl
push
aas
or
repnz
or
mov
dec
push
loopne
mov
lds
push
test
dec
inc
aaa
hlt
cmpsb
insb
out
data16
jecxz
push
cmp
jmp
sub
mov
xor
jecxz
or
xchg
mov
in
add
testl
icebp
or
mov
pop
sbb
add
loope
cmp
ljmp
cs
neg
xor
cmp
xchg
sub
xchg
call
dec
mov
xchg
das
shll
insb
push
dec
adc
pop
test
and
jecxz
mov
sub
imul
lret
dec
std
jp
mov
adc
clc
divb
sub
inc
in
stos
cmp
inc
pop
mov
pusha
out
outsb
insb
lcall
clc
fimuls
fprem
mov
cmp
sbb
mov
mov
sub
outsl
push
clc
cmp
pusha
mov
test
clc
sarb
mov
add
mov
pop
sub
adc
cmp
inc
push
fcomps
and
scas
inc
cld
jge
or
test
adc
mov
or
hlt
xor
imul
xchg
lea
push
adc
int
mov
xchg
les
sub
pop
fisubs
cmp
adc
and
dec
in
pop
nop
xor
dec
testb
gs
mov
sbb
xlat
inc
add
cmp
pop
mov
jb
idivb
fsubr
or
aaa
adc
in
je
in
cli
adc
lret
call
mov
inc
jb
dec
fdivrl
pop
add
hlt
adc
insl
jg
xor
and
or
aad
and
mov
movsl
pop
das
mov
repnz
sub
jnp
mov
call
fucomi
and
cld
loop
cwtl
roll
dec
cwtl
push
inc
test
sbb
jl
jo
xchg
decl
fbld
out
and
daa
lret
das
xchg
xchg
inc
test
dec
movsl
leave
cmpb
outsl
mov
int
mov
mov
hlt
stos
or
adc
sub
or
fcmovbe
mov
out
sbb
mov
inc
clc
pop
cmp
fldt
add
mov
inc
sbb
push
out
lods
sbb
dec
inc
clc
cmpsl
aad
sub
dec
cmp
cmpl
out
out
jmp
xor
insl
xor
loopne
scas
lods
fs
mov
imul
cmp
adc
mov
mov
enter
push
mov
sti
dec
sbb
dec
aad
or
adc
sar
mov
out
fisubrl
mov
dec
insb
fwait
rolb
mov
cltd
ret
outsl
jl
out
nop
adc
push
pusha
mov
cld
mov
in
movsl
repz
loopne
arpl
int3
jbe,pn
cltd
arpl
clc
or
or
push
cmc
xor
lock
shlb
daa
imul
cmp
insb
clc
sub
dec
dec
push
scas
int3
sbb
cmpl
cmc
jo
lock
pusha
xchg
mov
das
in
in
testb
aas
mov
pop
lcall
sbb
adc
mov
ljmp
ljmp
fucomip
xchg
sbb
lcall
sbb
ljmp
hlt
xchg
orps
xor
push
pusha
cmp
add
inc
jne
test
cmp
js
jp
add
outsb
nop
je
sub
insb
movsl
sbb
es
les
add
pop
stos
adc
and
mov
daa
adc
push
add
mov
out
pusha
xor
fwait
adc
iret
inc
cmp
push
cmp
jl
gs
test
xchg
jl
sbb
out
aam
jbe
inc
call
pushf
mov
pop
push
ss
nop
cmpsb
mov
adc
jbe
mov
jnp
inc
dec
push
or
mov
insb
xor
inc
and
or
ja
ljmp
test
sub
push
movsl
mov
shl
dec
fistl
jns
dec
jae
jle
or
insl
adc
in
push
in
pop
in
lret
insb
loopne
dec
jmp
inc
sub
mov
repz
cs
lcall
std
push
pop
cli
call
sub
mov
loopne
rorl
scas
cmp
sahf
xchg
push
mov
arpl
sbb
loope
adc
daa
cs
ret
roll
outsb
mov
jp
test
jnp
nop
push
mov
ret
pop
sbb
arpl
mov
inc
ret
sub
lcall
sbb
xchg
add
sub
push
adc
jg
test
test
repz
push
sub
cmp
mov
shll
pop
inc
pop
cmp
dec
push
inc
dec
add
outsl
mov
pop
arpl
jno
mov
incl
cmp
dec
fidivrl
mov
ja
and
push
mov
loope
mov
cli
stos
and
icebp
je
adc
ret
push
or
aaa
push
cli
pop
xor
stos
stc
jge
dec
mov
outsb
sbb
jle
lods
lods
inc
jg
fstpl
in
jge
pop
mov
mov
mov
call
add
fistps
push
int
arpl
adc
mov
dec
aam
dec
sbb
pop
mov
lcall
jnp
mov
cld
inc
loope
sub
imul
jg
jecxz
jl
pop
sahf
push
incb
jae
xor
call
lock
and
negb
or
push
das
jle
test
inc
sbb
aas
cld
jp
mov
test
dec
call
jo
outsl
push
adc
pop
mov
dec
cld
sbb
sub
xchg
call
std
inc
pop
cld
xchg
sub
or
xor
mov
cmc
inc
inc
dec
pusha
dec
in
xorl
cli
sbb
lahf
dec
in
movsb
popa
fldenv
mov
lock
or
lret
pop
lahf
inc
xorb
test
jo
sar
mov
insl
leave
xor
mov
mov
mov
nop
cmp
faddl
movl
jl
insb
or
xor
movsl
push
sbb
mov
or
movsl
and
push
mov
flds
incb
mov
mov
and
and
inc
fiadds
pop
xlat
jge
icebp
outsl
scas
adc
movsl
add
ffreep
lods
or
test
xchg
sahf
mov
cltd
or
das
out
dec
push
mov
fnsave
clc
fwait
and
imul
or
into
imul
mov
jno
mov
lock
fstl
sub
or
sbb
lcall
popa
cmp
insl
push
dec
pushl
mov
loopne
dec
cmp
dec
jo
cmp
mov
out
mov
xchg
sbb
or
mov
and
mov
pop
inc
adc
pusha
mov
loopne
ds
cmp
sbb
lds
jo
jmp
fcmovnbe
jl
sahf
cmp
orl
fbstp
mov
and
stc
xchg
mov
mov
cmp
cmp
loopne
decb
add
xorb
dec
and
jecxz
or
add
mov
cmp
xor
incl
pop
mov
add
clc
lahf
cmp
fidivrs
mov
dec
and
in
faddp
sysenter
dec
sbb
cmp
push
adc
sub
or
mov
mov
add
dec
mull
adc
xor
adc
outsl
outsl
out
das
jno
push
mov
fidivl
into
scas
inc
and
mov
adc
or
loop
pushf
sahf
cli
pop
pop
add
sbb
adc
mov
jbe
inc
mov
and
shlb
inc
cmp
add
cmc
mov
jbe
or
sbb
sub
cmc
adc
xchg
adc
test
insb
insb
mov
aad
in
add
mov
pop
inc
xchg
sub
mov
mov
pop
sbb
gs
lret
jge
and
pop
fdivp
addr16
inc
jl
adc
lock
dec
push
loop
push
iret
movlps
stos
vsqrtpd
cmpsl
clc
add
outsb
adc
imul
loope
or
push
hlt
pop
add
and
add
outsl
or
rolb
pop
cmp
push
jno
lods
aaa
jle
xchg
cwtl
and
imul
rolb
testb
mov
xlat
push
jle
pop
imul
push
cmp
pop
jle
lea
xor
setne
sahf
pop
movsl
mov
xor
xor
push
dec
dec
jecxz
adc
and
je
rorl
inc
lret
cmpb
mov
add
push
or
out
adc
repnz
paddb
mov
mov
push
cld
inc
lcall
dec
scas
pause
lcall
dec
cmp
add
sbbl
jg
or
sbb
pop
cmpsl
out
in
xchg
cs
fildl
jns
sti
imul
stc
int3
icebp
add
outsl
sub
imul
mov
or
sahf
inc
pop
and
cmp
jle
xchg
dec
and
dec
xor
fwait
js
and
out
ja
jmp
dec
sahf
dec
cmp
aad
inc
push
or
lret
stos
in
jmp
adc
imull
clc
jmp
lahf
push
cmc
hlt
psubw
int
adc
lret
mov
cmp
aad
cmp
xorb
loop
das
fs
jecxz
mov
mov
push
rol
mov
and
insl
mov
xchg
loopne
pop
hlt
jne,pn
mov
adc
js
xor
inc
daa
insb
lods
lahf
xor
add
mov
cmp
scas
pusha
repz
mov
and
jo
pushf
cmc
repnz
mov
pushaw
inc
dec
pop
outsl
cli
inc
jg,pn
pop
aaa
movsb
add
sub
dec
lods
int
or
or
clc
out
push
and
push
dec
xchg
cmp
add
sbb
adc
pop
fldt
mov
pop
das
push
push
mov
int
lock
lods
shr
test
xchg
clc
mov
adc
dec
push
jmp
xchg
fistps
jne
cmpl
and
lds
clc
dec
mulb
mov
jp
ffreep
out
push
push
or
cltd
xor
or
pop
insb
negl
push
dec
cs
loopne
pushf
cmc
adc
mov
dec
xchg
pop
pop
mov
sbb
add
add
sub
pop
fistl
sub
push
call
lods
mov
out
clc
add
or
aam
subb
pop
push
aam
rcll
push
xchg
shlb
jmp
inc
out
lods
loopne
xor
add
cmp
rcl
mov
cmp
mov
roll
jle
movsb
push
outsb
dec
das
jl
mov
inc
cmp
sub
ljmp
in
pusha
cmp
shrl
dec
push
adc
sbb
fcomi
lods
lcall
dec
aaa
cltd
sub
push
sub
les
call
add
push
ror
loopw
or
stos
sti
ja
cs
push
jge
cwtl
loop
cld
adc
cli
sub
cld
add
cwtl
dec
enter
movsl
or
xor
imul
jo
lods
xchg
xchg
push
inc
inc
fwait
inc
roll
or
jmp
mov
icebp
ljmp
xchg
sub
aam
cli
pop
dec
insb
sbb
loop
and
pop
inc
sub
jb
mov
sub
xchg
pop
mov
loop
dec
mov
push
ret
push
sub
jmp
inc
ss
js
lret
sub
xchg
mov
or
mov
fdiv
mov
xor
jg
mov
cmp
sbb
sub
add
mov
inc
mov
aaa
mov
rcrl
jle
pop
subb
pop
mov
clc
ret
dec
inc
lret
push
mov
mov
fistl
stos
lahf
aaa
pop
jne
pop
inc
sbb
clc
out
outsb
mov
ljmp
or
push
out
call
bound
lock
les
sbb
sbb
mov
fwait
or
cmp
call
mov
clc
push
lods
cmpl
popa
scas
in
jp
int3
lret
outsl
fninit
add
push
leave
mov
stos
or
in
sbb
iret
xchg
leave
lock
fdivr
xor
and
fildl
pop
xor
inc
test
adc
jl
lds
jmp
jmp
and
add
or
sbbb
push
cwtl
mov
std
lea
dec
testl
mov
outsb
mov
inc
add
mov
or
fistps
add
fdivs
xor
push
movsl
cltd
stos
rclb
in
sahf
mov
mov
adc
mov
inc
sti
movsb
andb
or
and
sbb
int
outsl
push
cs
inc
pop
std
pop
subb
sbb
inc
and
jg
in
or
repnz
jg
call
les
add
dec
or
repnz
mov
sub
jo
cmp
mov
ljmp
int
xchg
and
push
mov
inc
xchg
pop
jl
movsl
cmp
cmp
xor
cmc
test
out
leave
movsb
cwtl
inc
add
mov
adc
loop
jp
les
aaa
hlt
loopnew
lods
sti
mov
xchg
ficompl
fwait
sub
loop
in
mov
mov
in
jne
jge
cmp
jno
or
sub
mov
sub
add
call
fistl
pushf
mov
jne
adc
rol
imul
fmul
cmpsb
and
cmpsb
xor
mov
xchg
test
aaa
mov
dec
sub
mov
out
not
mov
xchg
loop
and
in
lea
xor
clc
pusha
cmc
imul
mov
jle
repz
je
lret
jecxz
or
or
cmp
or
lods
jns
adc
fistps
jmp
cmp
dec
cmc
cmpsb
inc
inc
push
fdivrs
mov
mov
pop
fs
outsl
or
pop
imulb
add
push
inc
popa
mulb
outsl
scas
bound
xchg
adc
ds
fcomip
fsubl
or
xchg
dec
adc
loopne
les
js
lods
jno
hlt
fadd
clc
mov
cmp
repz
mov
or
sbb
sbb
call
call
addl
ds
clc
dec
dec
dec
and
xchg
pop
fisubl
sbb
mov
xor
ja
mov
sti
add
sti
or
pop
xor
push
out
cmpsb
jbe
mov
jg
scas
add
mov
pop
cld
lds
sbb
mov
ss
mov
cmpsl
pop
push
lahf
popa
or
cmc
dec
push
inc
scas
pop
sbb
sub
aaa
cmp
lea
adc
push
pop
in
push
lcall
jno
xor
push
or
aas
push
ljmp
mov
cld
fidivs
call
sub
push
jle
in
cmp
mov
daa
out
fadd
xchg
and
xlat
aaa
imul
push
and
push
sbb
mov
iret
jecxz
pop
call
cmpsl
nop
jp
out
push
jecxz
sbb
sti
adc
in
push
imul
adc
aad
lods
mov
popf
push
jb
adc
mov
pop
or
repnz
out
cli
lock
xchg
inc
rcll
xchg
push
movsb
lahf
push
pop
sbb
adc
iret
mov
jge
cmc
mov
mov
push
add
sub
push
mov
xchg
xor
pop
out
sub
dec
test
jg
jnp
nop
pop
add
adc
xchg
jg
mov
xchg
fwait
or
mov
out
hlt
push
test
push
fcmovnb
jg
pop
mov
jne
sub
stos
sbb
and
cmp
or
es
push
jno
jne
jge
subl
dec
xchg
sbb
xlat
mov
push
fdivr
inc
movups
enter
rorb
xchg
adc
pop
in
push
mov
and
ljmp
sbb
rorb
pop
lods
rclb
cmp
sbb
ljmp
mov
rorb
sub
dec
mov
push
stc
adc
sahf
scas
lret
shrb
adc
jmp
sub
xchg
mov
xchg
dec
gs
mov
sbb
sbb
mov
jl
or
aad
pop
pop
popf
out
adc
fmull
xor
sbb
insb
jne
mov
ljmp
xor
jle
inc
mov
cmc
jge
sbb
cli
sti
mov
insb
xor
and
ret
clc
ja
call
stos
push
push
pop
adc
inc
test
mov
pusha
daa
adc
in
add
mov
inc
pop
in
xor
adc
xor
mov
inc
cmpsb
or
fdivp
jno
rorl
and
or
mov
add
mov
push
notl
jo
jmp
mov
mov
rcll
fdivl
adc
mov
push
test
push
push
mov
lcall
push
filds
xchg
insl
and
jo
dec
or
xor
stos
ss
das
out
cs
sub
push
mov
adcl
test
mov
sub
and
and
jns
movsb
or
in
sub
push
mov
mov
imul
aad
and
test
das
inc
or
xor
and
incl
cld
sbb
lock
jmp
mov
stc
jbe
pop
jl
call
xor
std
lret
sub
cmp
adc
push
dec
aam
push
add
sub
mov
adc
out
sbb
cli
ss
loopne
sub
cmpb
cmc
mov
popa
or
and
sub
sbb
mov
into
pop
inc
adc
push
scas
loopne
cwtl
rorl
incl
mov
ret
xchg
insl
xlat
xor
and
nop
pop
out
jmp
movsl
xchg
mov
lret
std
fbstp
jo
pop
lret
into
mov
add
pop
inc
arpl
or
test
cmp
rcrl
pusha
cltd
mov
sbb
pop
aas
pushf
add
add
xor
mov
jmp
xor
adc
es
cmpsb
shr
add
pop
mov
or
xchg
sub
xorl
dec
add
mov
ja
or
inc
or
cmp
jl
pop
sar
jae
push
jge
aam
ljmp
aaa
pop
pushf
add
rorl
loope
ja
jb
mov
popa
movsl
cmp
xor
adc
dec
iretw
cwtl
push
jg
aas
fmul
ja
flds
jne
aaa
sahf
sbb
out
add
nop
or
aam
lcall
inc
xchg
adc
push
dec
xchg
je
lock
in
push
dec
push
push
scas
push
loopne
cmp
adc
mov
cs
lret
scas
lret
and
jmp
cltd
pop
out
pop
call
std
jl
mov
jmp
mov
mov
testb
xor
dec
xchg
add
jne
lea
fisttps
cmc
inc
clc
lea
mov
sahf
add
sub
xchg
jge
lahf
repz
mov
cltd
ljmp
xlat
out
cmp
sti
std
pop
add
jne
fnstsw
inc
jp
loope
push
pop
mov
data16
subl
push
aad
add
push
movsl
jl
cmpl
xchg
or
mov
add
sarb
or
inc
daa
sbb
mov
test
add
dec
push
rorl
fdivp
callw
out
lea
mov
movsl
iret
aam
aaa
lock
clc
in
ret
sub
xchg
push
test
add
sahf
push
push
sbb
test
sub
cld
lea
jnp
inc
sbbl
mov
in
mov
push
sysenter
shr
push
cmp
repz
pop
sbb
inc
xor
xchg
pop
push
ds
ljmp
sbb
jle
mov
pusha
xor
subb
pop
pusha
loope
push
xor
bound
aaa
out
mov
push
sbb
arpl
in
je
sub
clc
xchg
incl
in
inc
movsb
pop
add
cmpsb
lret
sbb
call
pop
in
test
test
xor
mov
clc
or
cwtl
test
sbb
aas
mov
arpl
ljmp
jne
mov
sub
jbe
in
rorb
addr16
cmp
scas
int
out
stc
dec
mov
std
ret
xorl
jg
cmpps
cmp
jmp
dec
mov
jecxz
jl
testb
aad
and
in
jmp
sarb
js
inc
cmpsb
pop
or
sarl
sub
mov
ficompl
push
jbe
pop
js
jl
shl
mov
hlt
mov
in
sbb
data16
out
sbb
comiss
mov
call
mov
cwtl
sbb
daa
cmp
or
scas
aam
push
xchg
movsb
push
mov
inc
and
dec
repnz
mov
idivb
out
and
scas
sub
mov
imul
imull
call
mov
push
cmc
adc
or
inc
std
xchg
inc
and
jmp
cld
mov
xchg
daa
or
xor
std
adc
mov
adc
mov
call
push
mov
push
aaa
mov
sub
sbb
ret
es
push
imul
push
and
add
mov
aaa
xor
rorb
jecxz
mov
mov
dec
inc
je
and
loop
enter
orl
mov
sbb
push
std
adc
cmp
lock
lret
or
xchg
test
lock
adc
dec
push
xchg
push
push
test
lods
das
sub
je
sbb
out
sub
jno
cmp
inc
fucom
es
test
jmp
xchg
push
repz
aaa
or
xchg
dec
mov
testl
mov
or
xchg
movsb
icebp
aad
fsub
inc
test
sbb
xchg
mov
push
hlt
inc
fwait
lods
and
or
outsb
lock
jne
loope,pt
mov
stos
das
sar
or
ds
dec
rcrl
inc
or
adcl
inc
jne
repnz
daa
aam
dec
scas
pop
mov
mov
outsb
cmp
mov
dec
outsl
push
into
add
pop
dec
mov
push
mov
mov
xor
insl
rcll
push
stc
fcompl
and
das
int
dec
or
pop
out
insb
adc
inc
popa
js
pusha
insb
mov
cmc
call
mov
lea
inc
adc
sarb
int
add
rcll
mov
inc
incb
and
aas
push
sbbl
push
ret
cmpsb
adc
xchg
push
mov
loopne
scas
shlb
jb
je
xor
out
xchg
cmp
cmp
mov
sbb
jne
jg
cmc
shll
enter
inc
jnp
cmp
je
sub
shlb
mov
test
cmp
pop
rcrb
and
xchg
pop
sub
xchg
pop
popw
psubusb
push
test
in
jmp
adc
mov
pop
jl
xchg
cli
mov
fsubrs
xlat
pop
stos
cmc
pop
insl
cmp
fisubs
dec
push
cmp
add
mov
in
cwtl
sbb
jg
push
mov
mov
fsubrs
enter
outsl
mov
xor
arpl
hlt
fcmovnbe
and
data16
jge
xor
push
mov
out
or
add
and
cmp
test
xor
sbb
push
insl
add
inc
loope
and
mov
mov
loop
mov
jnp
sbb
push
clc
inc
mov
dec
popa
out
in
inc
incl
cmp
dec
xor
aas
sbb
sub
test
push
fstpt
sub
sub
ret
je
in
lcall
jb
and
enter
sbb
insl
or
sub
out
gs
cmc
mov
incl
rclb
lock
pop
sub
in
gs
pusha
icebp
arpl
pusha
jg
hlt
mov
callw
gs
jnp
cld
inc
les
int
xor
dec
adc
sbb
jl
jo
mov
adc
and
fdivs
dec
insb
scas
dec
pop
stos
test
lcall
pusha
push
sbb
jne
mov
mov
inc
ret
pusha
push
ljmp
jle
mov
int
fisttps
jg
rolb
cld
out
jne
rclb
ljmp
out
inc
fcomi
insl
scas
aas
call
jns
add
sub
hlt
pop
lahf
inc
scas
add
test
cld
test
or
mov
std
or
or
ss
mov
test
shrl
lock
ja
jnp
mov
insl
fidivrs
add
mov
pop
pop
addb
cltd
mov
mov
imul
inc
mov
sub
cmp
push
imul
inc
arpl
xchg
dec
push
jne
xchg
icebp
push
cld
mov
or
or
inc
es
push
jae
mov
loopne
fdivl
jns
dec
and
or
cmp
les
inc
sub
add
dec
lods
inc
add
mov
push
pop
lret
inc
xchg
push
jmp
add
leave
pop
lahf
mov
roll
aad
add
loopne
lcall
inc
call
dec
dec
sub
fists
mov
push
mov
cltd
mov
push
sub
aad
xchg
sar
sbb
popf
dec
mov
or
push
xorl
pop
jns
mov
test
scas
fmuls
sbb
mov
mov
and
sub
jg
adc
out
adc
ret
fisubrl
ja
inc
je
add
jmp
and
stc
in
adc
outsl
jne
movsl
push
xchg
hlt
aad
push
sbb
pop
sbb
pop
clc
aaa
out
xor
mov
mov
loopne
pop
in
lret
dec
push
xchg
mov
mov
adc
hlt
mov
jne
pop
mov
cli
fsub
add
hlt
jbe
dec
imul
jo
icebp
ret
ret
popa
and
popf
movsl
pop
cmp
and
insl
mov
inc
nop
leave
push
push
imul
add
fstps
xchg
fdiv
jg
sahf
xor
push
jl
call
outsb
adc
sbb
dec
fwait
jle
inc
xchg
xchg
hlt
testb
or
inc
enter
push
fadd
cmpsb
mov
sub
fldt
sarl
inc
push
leave
adc
mov
bswap
je
jbe
inc
cmpsl
outsl
lcall
jl
clc
push
add
pop
clc
jmp
out
mov
fcmovb
lea
xlat
mov
bound
inc
call
pop
enter
notl
push
add
jne
lods
dec
gs
mov
stc
out
push
dec
sarb
sub
stos
add
jbe
pusha
incl
mov
and
mov
subb
sub
jmp
and
repnz
fs
push
cli
adc
outsb
mov
mov
sub
push
lret
pshufw
or
inc
jecxz
mov
mov
mov
xchg
lea
rcll
into
cmp
add
in
add
lock
xchg
add
hlt
cli
xor
sbb
test
fistpll
or
mov
out
inc
cmp
xor
lds
fwait
lods
pop
cmp
lods
idivb
je
lods
pushl
jmp
into
cmp
add
pop
into
push
mov
fnstcw
dec
push
mov
movsl
inc
shlb
hlt
mov
sarb
mov
xor
push
jg
mov
push
les
popa
mov
aam
push
fsubl
dec
stos
ffreep
stos
mov
pop
nop
lea
test
sbbb
and
les
das
dec
ficoml
jbe
andb
push
inc
loopne
cmp
aaa
add
pop
add
xchg
pop
adc
jbe
and
lods
rolb
in
jnp
mov
hlt
xchg
hlt
adc
jl
xor
mov
push
std
or
inc
decl
add
jne
xor
xchg
cmpsb
lret
js
ljmp
pop
add
push
dec
pop
idiv
in
or
out
mov
adc
add
pusha
mov
iret
cmp
mov
inc
jg
or
push
pop
rcrl
sbb
data16
rorl
add
inc
xchg
pusha
push
xor
pushl
mov
adc
ja
loope
dec
popf
in
cmpsb
cmp
mov
not
mov
dec
mov
ret
sbb
loope
lock
mov
cld
or
outsb
stc
pop
adc
das
hlt
shlb
cmc
adc
aam
sbb
mov
or
cmp
mov
sub
adc
xor
jb
in
out
mov
xor
pop
xor
adc
popf
pop
aad
subb
jb
mov
in
cmp
xchg
adc
pop
rorb
in
lret
bound
mov
inc
ret
sub
iret
out
add
sub
loope
push
and
dec
leave
xor
ljmp
push
mov
int3
in
std
loopne
aaa
lret
test
xchg
insl
dec
pop
mov
test
flds
pop
movsb
pop
cmp
jbe
or
pop
sub
mov
cmp
or
sub
cmp
mov
notb
shrl
push
ret
or
or
das
cli
jnp
dec
adc
idiv
mov
add
rcr
push
lea
adc
xchg
pop
pop
push
roll
shr
mov
out
inc
and
mov
test
inc
imul
pop
dec
xor
packuswb
orb
jg
arpl
stc
cmp
jge
movb
les
daa
push
dec
hlt
xchg
and
fistps
mov
jmp
repnz
mov
dec
enter
jge
cld
ljmp
pop
rep
and
or
or
in
inc
bound
pop
int
fucomip
push
mov
incl
ret
mov
mov
jl
jbe
mov
movl
fbld
adc
push
sbb
loope
xchg
dec
aaa
mov
aaa
mov
outsl
outsl
fildll
and
sbb
mov
ss
inc
cmp
ljmp
cmp
ret
pop
lcall
push
add
pop
adc
pop
imul
aam
fwait
imul
fwait
popa
mov
cmpsb
cmp
iret
jg
movsl
mov
jmp
fstpt
repnz
sub
jg
js
pop
mov
add
mov
push
bound
enter
mov
inc
push
xor
xchg
data16
ret
cmpsb
fisttps
addl
lds
lods
add
out
repz
dec
inc
mov
pop
xor
mov
stos
xor
aaa
inc
xchg
sbb
sbb
sar
out
cmp
call
lea
je
sub
mov
push
ret
inc
insl
sti
mov
insl
mov
push
dec
jne
fistpl
call
add
push
fidivrl
jmp
sbb
adc
outsl
mov
xchg
test
lock
aam
mov
push
stos
aam
sbbb
addr16
xor
mov
cmp
in
or
je
push
adc
inc
outsl
jne
inc
pop
sbb
inc
dec
test
and
lahf
loopne
mov
ret
xchg
je
push
call
shl
adc
pop
push
mov
mov
mov
cmc
cmpb
pop
xchg
jb
mov
mov
pop
jmp
clc
lret
fstpt
rol
xor
test
xlat
and
std
dec
mov
pop
cmp
or
mov
mov
sbb
and
cli
pop
call
insl
test
or
push
out
aas
insb
shll
jae
outsl
sub
cmp
mov
leave
pop
sbb
enter
xchg
jmp
outsb
out
js
insl
std
ret
add
loopne
in
scas
xor
and
movsb
call
cmp
inc
cmpsb
in
dec
in
dec
add
stos
es
adc
invd
ljmp
pop
enter
pop
or
fs
push
add
test
out
mov
shld
dec
add
leave
mov
jge
pop
add
jbe
call
mov
adc
cs
sub
out
ja
rcrl
gs
sbb
push
imul
nop
call
push
fdivs
jge
iret
and
inc
mov
ret
cld
int
sbbb
std
pop
in
shrl
das
push
jb
rep
jb
add
jmp
or
add
mov
scas
or
lret
shll
dec
aaa
mov
ja
pushf
sbb
scas
fsubp
shlb
or
les
das
dec
add
jp
notl
jmp
adc
or
and
pop
orb
or
cmp
es
outsl
pop
mov
das
sbb
xchg
je
sbb
or
pop
mov
lods
sbb
add
pop
ret
xchg
mov
icebp
cmp
ljmp
ret
arpl
sbb
push
clc
xor
xor
scas
out
jg
clc
push
bound
lea
loopne
xchg
jns
mov
jne
loop
std
daa
in
pop
cld
sar
imul
sub
dec
sbb
movsl
push
fcomi
jns
je
sbbb
int
in
cmp
imull
xor
mov
js
xchg
jae
inc
adc
jg
cmc
add
push
mov
movntq
out
out
push
push
movl
out
movhlps
das
mov
xor
sbb
xorb
add
inc
pusha
mov
adc
inc
xor
repz
fs
out
filds
xor
mov
add
jmp
loop
lea
inc
xchg
and
xchg
xor
jae
in
adc
jecxz
mov
fs
jb
cmp
les
mov
int
shll
popa
push
sbb
les
aaa
or
pop
push
scas
decb
cs
add
rcrb
sbb
loop
jle
stos
testb
jne
push
popf
add
enter
lock
inc
pop
mov
fnstsw
clc
pop
xor
test
cmc
cmpsl
ja
and
int3
jle
cmp
jg
or
popf
xchg
inc
lea
jae
mov
add
rcl
xor
das
sbb
lret
and
dec
pop
and
lret
nop
orl
add
outsl
mov
sbb
fscale
adc
gs
mov
mov
mov
sti
adc
sbb
icebp
movsb
out
call
xchg
sti
jg
fadds
add
adc
pop
push
xor
das
sarb
fdivl
and
dec
insl
aaa
mov
cmc
test
fnstsw
leave
mov
test
shrb
popa
je
cmp
sbb
mov
xchg
test
mov
icebp
adc
fwait
insb
jle
mov
je
jmp
mov
xlat
cmpl
mov
and
lcall
movl
push
dec
inc
or
stc
pop
icebp
addl
mov
dec
sbb
jo
add
push
sub
fdivrs
jae
stc
sub
inc
imul
call
pop
imul
lahf
fmull
push
lahf
inc
adc
sub
jle
jae
fbld
mov
dec
pop
cs
jg
add
xchg
test
mov
sahf
pop
mov
cmpsb
repnz
xlat
push
cmp
xor
xchg
hlt
sarb
push
dec
or
fdivrl
push
lods
loope
repz
mov
addb
shlb
xor
je
xchg
jg
test
mov
fildll
push
and
add
or
jno
dec
push
pop
inc
lahf
jb
das
cmp
int3
jg
loopne
mov
insl
cmp
ret
adc
xchg
cmp
xchg
movsl
and
out
dec
das
test
jge
imul
adc
xchg
das
movsl
enter
jmp
jno
sub
sar
je
inc
lahf
loop
les
gs
and
adc
or
jno
jnp
xchg
addl
js
lahf
test
xor
ret
testb
sbb
pop
dec
addr16
pop
iret
call
and
jnp
pushf
fists
clc
sbb
adc
mov
or
jb
clc
cld
movsb
xor
mov
sub
and
cltd
or
rcll
mov
jne
call
lret
adcb
movsl
sub
jg
jg
fildll
ret
jno
push
jl
or
xor
lods
loopne
loope
out
ss
pop
scas
lods
jmp
ror
and
and
jnp
insb
or
lock
sub
xor
push
fidivs
xor
call
mov
sub
scas
pop
iret
cmp
out
js
daa
fbstp
or
inc
jno
sahf
outsb
sub
cmp
movsb
cmpsb
lahf
cmp
stos
jno
or
and
insl
add
jbe
cltd
in
mov
cvtpi2ps
in
hlt
adc
jmp
push
in
lcall
sbb
push
mov
or
divb
cli
int
push
inc
insb
and
loopne
pop
stos
ret
scas
pop
es
aaa
pushl
rclb
stos
fs
jbe
mov
or
dec
xor
xor
in
push
and
sub
adc
je
bound
cli
aaa
fsts
pop
sbb
enter
jmp
adcb
das
mov
dec
push
or
inc
sub
shlb
gs
cmp
fildll
insb
mov
inc
push
sti
mov
push
shrb
clc
negb
inc
mov
and
pop
popa
or
mov
push
or
cmp
jp
das
sub
mov
in
xor
les
jne
daa
mov
ljmp
fmuls
inc
inc
sar
push
push
xchg
mov
mov
adc
aam
xor
pop
adc
mov
outsl
mov
addr16
dec
adc
jg
pop
pop
jo
sbb
and
cltd
add
jo
jmp
int3
in
loopne
mov
cmc
sahf
add
mov
rol
std
lea
jae
je
cmc
adc
punpckhbw
dec
pop
dec
js
loop
sbb
fadds
in
or
push
clc
adc
mov
in
jo
mov
xlat
inc
sub
cmc
mov
adc
into
incb
sbb
pop
sub
add
adc
add
mov
inc
icebp
jns
adc
inc
scas
out
jg
add
xchg
je
mov
mov
cmp
cld
jbe
fcom
stc
es
sub
mov
and
mov
pop
test
fistps
jne
shrl
xchg
hlt
or
add
jns
loopne
inc
loop
cmp
or
mov
sub
xchg
cld
mov
in
cli
cmp
xlat
adc
adc
sub
out
orb
pop
push
mov
mov
sub
add
mov
dec
testb
sbb
jnp
inc
xchg
dec
push
mov
mov
dec
pusha
mov
adc
mov
and
les
stos
fwait
fwait
sub
cmc
pop
mov
shr
cli
inc
xchg
adc
adc
je
roll
add
jmp
sbb
cltd
jns
jmp
jne
dec
and
pop
push
push
and
lock
inc
insl
add
sbb
movsl
ljmp
cmpsl
xchg
push
inc
ljmp
mov
ja
xchg
fisubrl
dec
shlb
mov
fisubrl
std
pop
cmp
jg
mov
jmp
xor
jmp
xor
je
mov
jne
add
or
icebp
ja
add
test
cmpsl
mov
or
or
pop
in
mov
xchg
cli
in
push
sbb
jmp
cli
mov
inc
cld
mov
mov
movsl
ret
xlat
divps
popa
data16
ret
mov
sbb
sub
test
xor
dec
pop
aaa
jl
fimull
xchg
or
cmpsb
decb
mov
mov
adc
call
jb
jbe
call
loop
std
mov
cmc
mov
movb
jno
je
andb
xor
xchg
je
sub
xchg
or
loopne
stc
pop
xor
mov
inc
out
test
push
hlt
jmp
sbb
push
dec
mov
dec
hlt
call
mov
mov
push
and
pop
push
lcall
loope
sub
arpl
pop
jno
add
pop
icebp
dec
mov
fisubl
test
jg
outsb
roll
sub
das
lea
in
daa
mov
orb
dec
adc
in
inc
divl
adc
icebp
in
aaa
hlt
aaa
in
push
call
lods
movsb
popf
mov
push
cld
loop
mov
push
negb
cmp
ficompl
mov
mov
loopne
lock
shrl
push
xor
xchg
lock
add
xor
pushw
arpl
add
sbbl
mov
lret
cmp
gs
std
outsl
js
xor
sti
sub
mov
adc
pop
jp
test
sbb
pop
insb
scas
popa
lcall
or
rcrb
sub
push
sbbb
scas
out
clc
cmp
popa
das
add
jne
inc
cmp
je
mov
jle
push
push
orb
sub
test
into
das
adc
adc
lods
pop
mov
dec
mov
ss
add
fcomi
in
adcl
clc
dec
xchg
adc
push
fstpt
mov
enter
test
inc
cmp
sar
lods
movsb
xor
inc
rol
push
test
dec
cmpsb
sub
loopne
incl
pop
push
inc
sub
test
fmull
movsl
cli
lods
nop
nop
decl
pop
shrb
cmp
sbb
jne
xchg
imul
add
xor
sub
xchg
xchg
or
mov
adc
ret
aaa
loopne
scas
ret
js
pop
mov
aad
sbb
shlb
mov
shlb
aam
lret
mov
icebp
aas
insb
ret
adc
repnz
xchg
aad
sahf
cli
jg
cmp
es
fidivs
mov
insl
arpl
adc
pop
inc
or
in
ja
mov
mov
mov
in
int
es
je
xchg
cmp
and
sbb
idiv
or
rcll
cmp
sub
mov
fildl
test
lods
add
xor
sar
loopne
aam
call
dec
add
ja
mov
data16
push
aaa
imul
mov
icebp
mov
shl
or
sub
lret
loop
sbb
fists
inc
adc
insb
ds
lods
out
inc
jp
in
xor
je
mov
mov
mov
jo
jmp
jp
pop
int3
push
roll
xor
out
int
js
arpl
mov
xchg
inc
xor
adc
push
and
or
pusha
leave
fidivrs
pop
mov
xor
rclb
loopne
shlb
xchg
sub
arpl
mov
push
add
cmc
hlt
in
or
das
dec
mov
xor
mov
pop
mov
cli
lcall
popa
or
enter
cld
and
add
fcoml
xchg
jmp
lcall
outsl
imul
inc
scas
and
fdivl
fstpt
orl
pop
cmp
arpl
adc
decl
loope
jmp
mov
mov
loopne
xor
sbb
push
and
pop
sbb
jb
cs
pop
sbb
add
push
mov
pusha
mov
cld
mov
ret
and
jbe
sbb
pop
sbb
add
adc
sbb
sbb
pop
out
jmp
pop
mov
arpl
sbb
dec
popa
dec
cmpsb
aaa
ljmp
inc
loop
je
mov
sbb
popf
outsb
push
sub
daa
roll
sarb
hlt
cli
jmp
in
mov
lods
jg
in
mov
cmp
cltd
push
xchg
cmp
mov
sahf
xor
adcl
pop
jmp
movsl
mov
addb
or
insb
lret
stc
mov
test
sub
sbb
adc
filds
stc
fsubl
or
dec
aam
push
fistl
xchg
push
test
pop
mov
jmp
push
insb
adc
mov
popf
mov
jge
je
pushf
mov
outsl
xor
jne
dec
xchg
test
sub
pop
js
sub
push
inc
hlt
movsl
enter
sub
push
cld
pop
push
and
jne
xchg
mul
adc
in
fst
adc
adc
ja
jl
cmp
push
out
pop
insb
jge
out
popf
js
mov
sti
sub
or
push
adc
mov
sub
mov
xchg
cmp
pop
in
jecxz
mov
addl
fiaddl
add
mov
fcomp
rcll
stos
testl
mov
adc
enter
orb
je
stc
xchg
dec
mov
and
cmpsl
push
jb
add
adc
decl
stc
cmpxchg
sbb
and
sbb
dec
aam
inc
ss
psubsw
fiadds
fcoml
enter
js
inc
ss
icebp
or
push
sub
ss
xchg
mov
icebp
cmpsb
outsb
lods
fisttps
mov
gs
adc
mov
lret
push
xchg
xchg
rorl
jg
mov
movsl
loopne
xor
negb
aas
fstpt
jp
dec
dec
iret
mov
lret
inc
imul
cli
pop
push
mov
jb
je
jbe
pop
push
add
mov
adc
xor
aad
lahf
xchg
adc
rcl
push
xchg
push
cwtl
int3
push
xchg
lods
push
mov
dec
cmp
jge
mov
jno
jle
dec
push
incb
call
lcall
es
scas
cmc
cmp
out
out
out
test
adc
xor
sbb
mov
and
dec
adc
xchg
push
movsl
call
notb
call
sbb
jle
jle
add
test
jl
test
mov
test
sahf
in
rolb
lods
jle
cld
js
mov
mov
pushf
mov
ljmp
in
lcall
test
dec
sub
rcl
std
push
mov
gs
mov
mov
push
clc
out
add
add
lock
pusha
pop
pushfw
mov
jecxz
add
cli
fildll
mov
inc
push
pop
jmp
cwtl
rorl
mov
xor
imull
push
and
and
jge
mov
pop
push
icebp
pop
pop
pop
pushf
inc
mov
jmp
lcall
fidivrs
adc
stos
xor
int
xchg
mov
push
stc
pop
stc
shll
and
fisttpl
mov
and
lret
out
pop
mov
sub
cmp
pop
rcl
lahf
mov
cmp
inc
shrl
or
mov
mov
or
popl
movsl
xor
xchg
divb
pusha
adc
jecxz
cmp
jmp
sub
pop
jecxz
and
jbe
mov
out
jns
inc
adc
mov
fbld
adc
sbb
stos
iret
mov
cli
mov
pop
nop
lea
inc
sarl
outsb
or
scas
in
pop
adcl
mov
jp
xor
or
out
mov
cmp
bound
in
mov
hlt
mov
dec
insb
mov
aas
or
mov
cmpb
out
out
arpl
cld
das
std
outsb
or
mov
stos
sbb
bound
push
js
jle
add
inc
rcrl
sub
and
mov
iret
pop
in
push
dec
mov
xlat
into
pop
inc
shl
or
repnz
mov
test
mov
xchg
or
shl
push
xchg
outsb
insb
cld
xor
pop
mov
push
insb
jb
jns
clc
add
cmp
repz
xor
push
std
fistpll
sahf
jmp
test
lret
xchg
mov
and
clc
sbb
into
mov
xor
mov
pop
ss
fisttpll
das
cltd
not
ja
insl
mov
jle
out
cmpsb
mov
xchg
int3
arpl
fs
daa
test
fldl
or
sbb
jecxz
pusha
adc
push
jo
filds
cld
xchg
mov
pop
sbb
or
es
push
mov
outsl
test
js
or
dec
pop
clc
icebp
mov
mov
cmc
xchg
loop
sbb
stos
repz
stc
inc
cmpsb
sub
dec
cmpsb
pop
sti
pusha
pop
add
cmp
inc
lret
jmp
pop
in
imul
and
lock
popa
call
cmp
movsl
ja
aas
inc
push
mov
add
call
lock
pop
mov
loopne
mov
adc
iret
fcoms
push
addr16
mov
stc
push
jg
mov
lcall
pop
pop
cltd
jge
push
adc
jmp
inc
lds
cld
insb
out
cmpl
popa
int
pop
jle
out
or
cmp
icebp
jg
fucom
test
adc
pop
cmp
js
and
xorl
mov
mov
ret
fistpll
jmp
dec
mov
cmp
ret
push
int
test
ss
sbb
lret
inc
inc
ljmp
jae
test
xor
ss
fsubl
inc
mov
in
je
add
bound
mov
push
adc
dec
adc
push
add
incb
mov
xchg
sbb
shlb
ss
sub
into
insl
dec
mov
mov
dec
bound
addr16
mov
ficoml
repnz
movsl
adc
nop
or
jne
fnstsw
pushf
popa
jb
jo
insl
scas
leave
sbb
or
ret
decl
mov
pushf
mov
and
or
dec
dec
pop
mov
add
cld
movsl
call
mov
push
cli
xor
mov
orb
push
outsl
add
and
jecxz
adc
and
lods
xchg
adc
pop
add
into
or
xor
push
icebp
idiv
xchg
repnz
jl
movsl
pop
cld
mov
sbb
mov
aaa
adc
mov
xor
pop
push
das
mov
shl
sub
outsb
nop
das
sub
es
data16
cmp
push
mov
iret
push
xor
add
negb
clc
push
sbb
lcall
push
push
aas
lods
ljmp
fwait
push
loope
mov
xchg
lock
fnsave
xchg
dec
dec
notb
arpl
lods
repz
fmuls
add
adc
add
xor
cld
inc
lcall
jp
loope
sub
sbb
cltd
mov
sbb
decl
mov
mov
fdivrs
insl
je
dec
jbe
repz
fcomip
xchg
push
clc
fmull
xor
ret
mov
mov
mov
inc
mov
outsl
add
outsl
aas
add
jns
or
jl
test
add
int
pop
push
push
add
call
hlt
add
mov
cmpl
add
adc
push
add
rcrb
movsl
fisttpll
flds
dec
fildll
fisubrl
clc
or
jnp
xor
lret
out
fwait
push
dec
push
outsl
fdiv
dec
sbb
add
fldt
sbb
jb
mul
mov
xor
and
add
dec
arpl
inc
mov
ja
filds
sti
inc
repnz
je
pandn
xor
pop
sub
sti
mov
jmp
adc
xor
dec
inc
mov
inc
dec
sbb
inc
pop
dec
mov
xor
cli
add
out
dec
xor
or
jno
jnp
add
je
popa
das
inc
push
dec
add
mov
dec
add
mov
adc
imul
outsl
popf
ja
dec
push
rorb
roll
in
divb
aaa
bound
xor
add
int
fucomi
fimuls
dec
mov
pop
les
jl
idiv
mov
outsb
fiaddl
inc
popa
outsl
inc
jo
add
mov
pop
ret
test
mov
xor
push
inc
mov
and
out
je
inc
mov
pop
push
stc
mov
lods
mov
lret
mov
dec
js
lock
ret
xchg
dec
in
sti
aaa
mov
inc
ss
adc
scas
adc
jbe
cld
adc
add
in
or
imul
sub
popa
jns
push
jno
sbb
ljmp
lock
pop
fisttps
mov
pop
cmp
loope
rolb
dec
arpl
repz
imul
dec
dec
insb
loope
outsb
fistl
push
jge
dec
inc
cmp
mov
fdivrl
movl
insl
pop
and
inc
add
dec
cs
xor
outsl
sbb
popl
dec
popa
jbe
fiaddl
inc
push
mov
inc
jecxz
inc
adc
mov
inc
pop
jae
dec
cmp
add
in
out
dec
dec
jns
pop
dec
mov
jo
jnp
in
sahf
mov
mov
popf
filds
sbb
fsubr
push
dec
add
insl
outsl
dec
xor
push
pusha
dec
shll
das
xchg
outsb
mov
mov
push
ss
sub
push
jo
xor
dec
pop
push
jbe
pandn
test
sbbb
icebp
mov
jecxz
xor
inc
fidivrl
push
js
inc
cmpb
dec
neg
mov
addr16
inc
adc
ljmp
pop
jbe
stc
xor
inc
adc
sbb
icebp
insl
movsl
inc
push
pop
outsb
shl
inc
aad
cltd
sbb
xrstors
mov
ret
out
inc
jg
ja
jne
inc
dec
inc
dec
inc
mov
aaa
sar
mov
fcmovnb
divl
inc
add
iret
adc
fsub
data16
pop
ljmp
mov
call
iret
push
lea
add
and
push
mov
inc
mov
push
push
inc
addb
je
push
enter
mov
inc
rclb
inc
jne
out
ja
sbb
sbb
mov
sub
sbbl
icebp
add
jns
mov
mov
adc
loopne
bound
push
mov
push
cmp
insb
sbb
leave
sbb
mov
mov
pop
pop
xor
adc
push
pop
sub
jmp
roll
sahf
dec
jmp
or
scas
ss
lcall
add
hlt
sub
sar
out
hlt
lret
push
je
inc
and
or
or
cmp
cld
mov
lods
and
jg
and
aaa
test
testb
dec
add
mov
mov
inc
rol
and
les
mov
pop
adc
add
repz
std
push
lds
loope
jge
push
and
add
shlb
mov
out
sbb
test
xchg
or
addr16
mov
mov
notb
in
in
call
pop
test
fnstcw
shl
movsb
or
push
push
adc
addr16
aam
sub
pop
or
dec
mov
jmp
orl
push
clc
adc
mov
mov
push
xchg
dec
sub
lods
in
pop
push
decl
pop
out
push
negb
add
cmc
push
test
inc
push
cltd
fnsave
jecxz
stos
data16
adcl
orb
in
sbb
imul
push
xchg
loopne
lock
jns
lcall
in
or
mov
or
popa
add
stos
icebp
incb
repnz
pop
insb
mov
adc
hlt
out
test
jbe
not
pop
adc
repnz
cmp
xor
pop
les
aaa
popa
outsl
hlt
call
pop
push
sti
imul
dec
lea
mov
mov
inc
pop
enter
dec
fs
rcll
inc
inc
xchg
out
call
fisubrs
ljmp
xlat
jae
les
popa
dec
sub
ret
mov
mov
pop
jbe
ret
inc
xor
lock
pop
jle
jae
and
or
jp
rclb
push
pop
cmp
nop
and
and
sbb
rcrb
lcall
pop
add
push
and
sbb
mov
dec
lahf
in
dec
add
or
rol
and
xchg
ss
fisubs
inc
adc
orl
clc
jg
jbe
inc
movzbl
lods
mov
dec
rcr
gs
sub
mov
dec
add
imul
push
mov
xchg
jnp
mov
or
adc
or
mov
lods
mov
mov
lods
xchg
call
movsb
pop
dec
cmp
sub
push
inc
loop
mov
incl
xlat
jae
arpl
xor
jle
stos
adc
push
jo
sbb
jecxz
inc
popf
negb
jge
test
clc
sarl
xchg
sbb
xchg
mov
mov
test
lods
loope
cli
stos
inc
cmp
call
push
fcmovne
loop
adc
push
lahf
mov
sub
cmp
pop
inc
je
rol
in
pop
arpl
pop
mov
jge
cltd
imul
dec
jecxz
cmp
inc
sahf
js
and
pop
jp
sti
repnz
ss
out
dec
cld
inc
dec
fisubl
lret
stc
mov
nop
or
xor
adc
cltd
mov
adcb
mov
rclb
push
lret
adc
ja
ret
out
push
loop
dec
ljmp
test
adc
and
add
push
mov
outsb
xor
je
add
mov
in
adc
xchg
mov
lock
push
lcall
mov
stos
cmp
push
jg
adc
adc
dec
out
jbe
fsts
cld
lahf
mov
pop
inc
ja
mov
daa
subb
adcb
test
mov
inc
xchg
or
je
mov
add
mov
fmuls
jge
aam
sbb
mov
in
lods
aas
call
out
cwtl
xchg
mov
sbb
mov
xorb
fdivrs
mov
dec
cmpsb
jne
shlb
shll
xchg
xchg
cld
ja
ds
or
inc
shll
adc
or
mov
add
jb
pop
pop
daa
movsl
mov
inc
mov
and
adc
inc
roll
sub
inc
inc
sbb
enter
outsb
shrb
test
and
lret
inc
xor
cli
sbb
aad
adc
pop
pop
fbstp
cmc
and
sbb
xchg
pop
andb
aaa
push
jg
scas
movsb
jl
cmpb
cmpsb
adc
loope
or
mov
jmp
or
outsl
xchg
sub
fwait
and
xor
xchg
leave
mov
call
test
jnp
jecxz
cld
icebp
inc
movsb
jl
out
or
add
jle
repz
jbe
outsb
xchg
dec
sbb
aad
cmp
or
pusha
mov
or
lret
sbb
outsb
call
mov
movsl
ret
fcompl
mov
repnz
xchg
hlt
or
sbb
out
adc
loopne
je
pop
test
mov
mov
jno
mov
std
call
mov
mov
mov
adc
and
das
ficomps
fimull
adc
inc
lds
inc
mov
pop
repnz
fldenv
pop
xor
cmp
pop
jl
mov
lock
pop
cmp
mov
push
dec
jge
mov
push
inc
lock
jle
pop
mov
decl
sbb
mov
inc
cmp
add
adc
mov
lock
pop
out
into
out
push
mov
fists
aas
std
pop
in
push
in
cmp
inc
stos
incb
imul
fwait
jmp
ja
mov
cmp
add
enter
cmpl
scas
add
daa
inc
pop
pop
inc
mov
or
cwtl
mov
cli
aaa
es
fcmovnu
call
or
jp
pop
sub
shl
stos
mov
lock
fldl
aam
push
jno
das
dec
mov
sbb
jg
cltd
cld
jnp
mov
or
jg
mov
jb
cmp
xlat
lock
call
rcll
sbb
xchg
movsl
cltd
and
fistpll
pop
lock
cwtl
dec
push
dec
jl
adc
mov
das
mov
sbbl
popf
or
fsubrs
decl
mov
push
add
xchg
jns
or
inc
xchg
ret
push
add
das
in
icebp
rclb
call
ss
iret
ljmp
out
mov
std
adc
cmp
push
repnz
lret
int3
cltd
sub
shlb
fnstcw
or
xor
in
push
push
ret
sbb
aas
in
dec
outsb
daa
pusha
jne
mov
pop
and
sub
push
and
and
mov
push
fisubrs
cs
imul
lds
aaa
push
add
jg
xor
jne
and
sbb
in
sub
aas
sub
mov
push
jp
jecxz
stos
outsb
fs
xlat
mov
out
sub
movsb
adc
dec
or
ficomps
add
xlat
cmp
fwait
pop
inc
pop
mov
sub
mov
iret
lods
mov
test
adc
clc
movsl
fwait
pop
pop
dec
decb
cmp
enter
pop
clc
in
or
inc
dec
add
das
cmp
movb
lods
push
rcrl
and
inc
in
bound
cwtl
xor
sbbb
lods
push
jle
jae
aam
pop
or
jl
mov
gs
jbe
clc
js
mov
adc
sti
mov
add
mov
fcoms
mov
cltd
xchg
dec
xor
rorl
std
popf
sub
cmp
add
mov
into
shll
xor
inc
dec
dec
mov
loop
xor
lock
sub
pop
jge
lock
cmp
int3
cmp
imul
or
fnsave
or
js
adcb
fnstcw
arpl
jg
and
jne
mov
filds
scas
mov
add
js
or
xchg
pop
push
lret
or
int3
cli
and
in
test
xor
sbb
mov
popa
addr16
arpl
lds
mov
test
sbb
call
out
push
adc
in
js
lock
testl
jg
in
imul
push
or
xor
bound
fdivrs
shlb
ja
test
cmp
xor
and
xor
lods
mov
int
dec
xchg
adc
inc
clc
adc
pop
ss
inc
js
add
js
jne
hlt
push
and
mov
int
ja
call
push
ret
mov
test
cs
xchg
dec
mov
test
jl
in
outsl
es
std
outsl
dec
in
je
add
xor
cmpb
push
fstpt
xor
sub
jl
sbb
pop
pop
add
insb
push
xor
sar
add
out
xorb
sub
cwtl
push
adc
stc
adc
in
lahf
mov
cmpsl
out
push
es
int
or
jp
mov
sub
sbb
mov
cltd
cmp
sub
and
push
sub
aad
shll
add
scas
hlt
push
and
repnz
adc
add
mov
add
into
shrl
cmp
push
sub
sbb
add
mov
push
mov
xor
mov
xor
cltd
jne
mov
popf
or
inc
movsl
cld
outsl
pop
cs
cmpsl
rcrl
mov
repnz
loopne
mov
outsl
jne
dec
inc
add
movsb
mov
dec
dec
fmull
sbb
dec
ficompl
mov
push
sahf
jge
ficoml
icebp
loope
mov
aam
push
jnp
adc
push
mov
jnp
mov
push
ret
sarl
sbb
int
and
insb
int3
push
or
test
lret
insl
sub
jle
mov
adc
ficomps
sub
lcall
das
movsl
mov
dec
pop
mov
or
xchg
mov
mov
or
mov
push
imul
shrl
in
leave
mov
hlt
mov
pop
sbb
xchg
xor
cld
pop
inc
out
push
and
rcrb
xchg
mov
mov
sub
adc
inc
add
call
ret
leave
dec
les
and
ffree
out
fwait
or
push
enter
dec
add
call
shrb
push
fisubl
cmp
mov
in
out
js
pushf
cmp
aam
test
mov
pop
xchg
movsb
cwtl
jmp
ljmp
xor
scas
jmp
dec
sub
xor
xchg
dec
iret
je
push
sbb
jo
ljmp
mov
jb
stos
push
cmpb
in
into
rcrb
sbb
lcall
push
cmpps
sub
push
or
push
cltd
or
popa
out
or
add
test
scas
lcall
or
mov
sub
push
or
ss
jmp
ljmp
xchg
scas
repz
mov
dec
pop
mov
xchg
adcb
xor
push
pop
dec
ja
movsb
adc
ret
rcl
daa
pop
cli
test
push
and
sti
ja
pushf
push
movsb
stos
mov
test
out
aaa
inc
in
ret
sub
xor
sub
inc
sbb
jo
pop
jge
cmpb
das
lock
push
stc
and
jl
mov
call
lea
or
or
jle
iret
mov
rorb
pusha
mov
jecxz
ss
rolb
jnp
mov
popf
push
mov
dec
adc
shlb
or
adc
or
addb
cmp
pop
mov
and
sbb
shrl
test
test
hlt
xchg
mov
aas
out
pusha
sub
and
dec
repz
jo
subl
fs
cmp
xor
ljmp
xor
out
aam
jmp
adc
and
jnp
vmovaps
ret
sbb
and
mov
mov
test
stos
jo
je
xchg
pop
lea
cwtl
jb
aaa
ret
jg
sbb
mov
scas
adc
stc
mov
xor
arpl
add
mov
cmpsb
dec
pop
cmpsl
pusha
add
pop
bound
push
pop
pop
mov
pop
xchg
loop
add
mov
cmpl
stc
dec
mov
dec
std
sbb
pop
add
fs
sub
mov
or
repnz
or
dec
push
inc
sub
sub
mov
hlt
mov
mov
call
shl
add
xchg
push
imul
mov
add
jnp
push
jno
add
roll
icebp
std
jbe
rcr
fwait
test
jo
dec
xchg
xor
or
push
fcompl
jmp
ret
scas
push
fmuls
pop
cmp
out
xchg
cmpsl
lock
add
sbb
ss
pop
notl
push
dec
shl
adc
movsbl
stc
mov
pop
in
sub
inc
cmpsb
nop
pusha
fwait
lcall
adc
fs
xor
ret
stos
js
mov
pop
negb
fbld
daa
mov
xor
dec
sub
loopne
or
adc
fldenv
jle
xor
inc
jecxz
into
mov
pusha
jnp
test
cmpl
imul
xchg
js
jne
dec
push
mov
cwtl
sub
adc
or
mov
adc
mov
or
fildll
sbb
clc
pop
or
sub
sub
les
mov
test
jne
or
fisttpll
cld
dec
and
pop
xor
pop
jg
inc
or
sbb
mov
mov
aam
loopne
adc
dec
and
test
daa
aam
xlat
mov
jne
sub
sbb
push
aaa
mov
mov
mov
sub
dec
jg
aad
dec
mov
inc
std
cvttps2pi
jle
insb
in
inc
shl
mov
mov
pop
insb
dec
call
sbb
inc
pop
mov
xchg
roll
enter
pop
adc
shl
hlt
ds
fdivp
xchg
mov
jnp
mov
dec
out
andl
ret
dec
dec
and
rolb
mov
push
sbb
pop
mov
push
sub
mov
shl
sbb
mov
jge
and
xchg
mov
minps
adc
lcall
xor
cwtl
pop
add
adc
negb
sbb
sbb
aam
test
stos
add
rclb
cmp
sti
outsl
mov
icebp
insb
mov
out
sti
mov
adc
xchg
mov
std
mov
mov
adcb
lock
call
popa
add
rcll
inc
add
out
jns
repnz
ss
ficomps
xchg
das
mov
pop
jmp
jecxz
add
loopne
insl
or
das
jo
inc
cmpsl
sbb
loop
daa
pop
xchg
fld1
sti
shl
outsb
rcrl
adc
push
or
and
push
xchg
mov
mov
or
in
adc
ljmp
stc
cmpsl
pop
mov
call
loopne
ljmp
repnz
je
inc
cld
out
cmp
sbb
js
loope
sbb
adc
sub
mov
push
push
test
fwait
pusha
shrl
or
mov
cmc
out
cli
push
pop
es
mov
mov
jp
das
cld
repz
stos
or
lods
nop
mov
push
stc
cmp
gs
aas
xchg
and
add
cmp
mov
sub
xlat
and
outsb
or
pop
hlt
mov
mov
mov
imul
sbb
jae
pop
lcall
push
ficoms
mov
pop
or
and
mov
shr
mov
sbb
dec
insb
inc
xchg
xchg
js
cld
cmp
adc
pop
sub
jg
mov
cmpsl
jmp
loop
std
xchg
mov
lock
aaa
jecxz
and
pop
arpl
stc
pushl
jo
cmp
xlat
enter
popa
mov
mov
fisubrs
and
add
push
sbb
outsb
call
jmp
pop
clc
and
and
push
pop
bswap
icebp
dec
adc
je
je
loope
out
push
adcb
xchg
inc
gs
pop
inc
js
clc
inc
mov
push
movsb
in
scas
ret
inc
sbb
pop
lahf
rcll
sbb
xor
aas
rol
pop
xchg
sub
jmp
repz
pop
adc
dec
inc
lods
add
fs
jge
sub
mov
xor
insl
in
dec
push
aas
jbe
aam
es
mov
shrl
and
mov
les
or
xor
es
add
out
pusha
imul
cltd
cmp
jbe
dec
dec
mov
cmp
call
imul
dec
aaa
mov
or
subb
mov
je
mov
sub
pop
dec
movsb
adc
lcall
mov
shrb
je
jg
icebp
out
mov
and
xor
push
sbb
out
xor
add
mov
pop
shl
push
fisubrs
into
fisubl
lcall
lds
mov
adc
push
add
jle
cmc
adc
fisttpl
in
jg
mov
mov
test
rorl
stos
sbb
push
sarl
or
inc
cmp
rcrl
andl
loope
loop
shrl
add
call
mov
cli
jg
pushf
adc
mov
push
repnz
test
mov
push
clc
add
xor
cmp
push
or
shll
aaa
inc
pop
adc
lret
in
icebp
in
dec
xchg
xor
xchg
xchg
jecxz
or
or
xlat
pop
inc
sbb
xchg
fisubrs
cmp
rcl
in
sub
enter
jmp
jge
mov
movsb
cmpsb
mov
leave
sbb
xorl
xor
ret
jge
in
clc
add
and
mov
fcoml
aas
dec
mov
sbb
je
shl
push
in
sub
test
es
inc
test
psubw
js
fcompl
push
mov
in
aaa
icebp
or
inc
or
adc
jno
lar
test
jae
loopne
std
jp
add
fsubl
push
adc
addb
xor
in
sti
or
insb
xor
out
out
pop
jmp
mov
push
sub
push
xor
lcall
cmp
ljmp
jbe
sub
sbb
shlb
mov
or
ret
les
adc
push
js
daa
int
jne
aaa
mov
or
push
pop
mov
push
mov
iret
popa
xor
lock
ja
cmpsb
dec
cmp
mov
fdivp
sti
repnz
ret
test
jb
insb
mov
sti
scas
or
mov
push
inc
mov
stos
bound
call
sbb
clc
es
fisubrs
adc
mov
cli
mov
or
xchg
aas
stos
sbb
inc
mov
fisttpl
xor
in
fwait
daa
mov
adc
es
scas
scas
hlt
in
loopne
xchg
loope
cmp
mov
lahf
lahf
mov
or
fbld
dec
int3
push
call
xor
xor
pop
pop
pop
pushf
or
pushl
push
out
dec
shll
fs
aad
mov
add
shr
aas
mov
adc
push
xchg
or
add
cmc
arpl
or
inc
mov
and
push
lods
jmp
xchg
mov
loop
dec
inc
mov
xchg
push
jo
inc
mov
test
lret
dec
data16
andl
mov
adc
jmp
aad
shll
adc
adc
fidivs
pop
xlat
mov
xlat
jb
outsb
add
cwtl
outsb
aaa
inc
inc
sbb
xlat
xchg
add
fcmovnb
jge
in
test
dec
mov
sub
pop
repz
sbb
es
lock
sbb
xor
push
and
lret
mov
inc
and
test
adc
lods
clc
sbb
mov
call
je
int3
pop
sbb
call
andb
test
pop
jge
std
in
or
jp
shl
inc
leave
jmp
inc
fwait
call
xchg
xchg
mov
jmp
lods
into
or
sub
ljmp
pop
adc
xor
add
pop
mov
mov
fimuls
add
mov
aam
mov
mov
clc
xor
sub
adc
jecxz
outsb
loope
jle
daa
jb
xlat
adc
stos
je
nop
pop
dec
push
out
mov
push
lret
shrb
addr16
mov
cmpsb
dec
bound
or
outsb
mov
les
dec
mov
mov
sbb
jp
pusha
shll
sti
insl
add
inc
xor
adc
je
push
ret
and
test
call
mov
sub
inc
rorb
sbb
adc
std
mov
or
jbe
mov
mov
mov
out
lock
shrb
dec
mov
and
add
lea
sahf
cmp
arpl
jg
mov
imul
fimull
lcall
sbb
cs
bound
jnp
adc
xor
push
outsl
jo
adc
aaa
mov
xchg
sarl
out
jg
jg
insb
je
sub
fs
adc
pop
inc
ret
pop
sbb
das
call
or
xchg
cld
fucomi
lock
out
sbb
and
psubsb
scas
pop
add
popf
lock
int
lock
inc
mov
jnp
imul
mov
stos
sbb
hlt
cmp
dec
push
ss
or
mov
and
stos
mov
paddsw
push
cmpb
dec
dec
jne
sbb
mov
add
js
push
pop
jnp
push
add
out
sub
jb
inc
push
push
jno
push
lcall
cltd
mov
test
icebp
sbbb
push
iret
add
xchg
push
inc
dec
pop
adcb
pop
dec
adc
add
cwtl
dec
adc
fstpl
push
inc
mov
scas
sub
sarl
xchg
cmp
sub
mov
lahf
ja
lds
add
dec
xor
xchg
addl
fsubrl
cmp
outsl
mov
jmp
add
xchg
rcrl
scas
loope
dec
or
adc
or
and
fists
cmc
mov
fcompp
aad
in
std
inc
and
cmc
mov
mov
addr16
test
adc
out
cmc
xchg
cmpsb
in
shl
aam
adc
mov
call
jecxz
push
test
lea
rcl
imul
lcall
xchg
push
or
inc
out
std
lods
jb
sbb
lock
inc
mov
sbb
test
aam
rclb
out
test
dec
adc
es
in
js
je
sbb
sub
jg
adcb
sub
ss
push
cmp
push
pop
push
ss
jg
push
inc
movsb
add
notb
xchg
jne
sbb
lea
xlat
cs
jne
pop
inc
sub
xchg
and
mov
xor
sub
and
add
shrb
outsb
inc
sbb
pop
popa
out
pop
fistps
sbb
or
sbb
sti
pop
bound
add
aas
push
jns
lcall
pop
movsl
adc
and
and
int
div
xor
ljmp
pop
push
js
daa
sbb
fdivr
push
shlb
jg
imul
sub
lds
jecxz
xchg
mov
fucomi
mov
rcrb
movl
out
xchg
cmp
es
pop
cmp
cmp
jecxz
sub
sub
push
arpl
cmpl
inc
xchg
push
xchg
and
inc
push
cmpsl
xchg
adc
mov
cs
push
and
shl
fstpl
fsubrl
sbb
call
xchg
lods
dec
popa
pusha
sbb
mov
lret
jns
or
xchg
mov
push
lock
sub
outsb
stc
mov
aas
pop
sub
xchg
mov
and
in
xlat
mov
test
in
test
or
mov
lods
lret
sbb
jmp
outsb
mov
or
mov
dec
lea
sub
test
xchg
push
dec
cs
xchg
push
jg
ja
mulb
fiaddl
pop
ds
dec
sbb
jno
mov
and
push
repnz
adc
arpl
dec
nop
popa
shll
ljmp
sbb
mov
loop
test
movsb
orb
in
mov
push
dec
sahf
or
shrb
stos
aas
ja
fldt
inc
jl
adc
cmc
xor
lds
adc
inc
popf
and
inc
sub
push
mov
dec
ret
and
sub
ja
ret
pop
add
insb
bound
inc
dec
ja
aaa
push
or
dec
push
mov
mov
jns
and
add
test
popl
test
mov
sbb
sub
bound
out
subb
xchg
mov
xor
clc
rcrb
ficomps
push
sbb
mov
jecxz
cwtl
add
mov
jbe
lret
push
hlt
insb
cmp
repnz
and
std
mov
aam
adc
cmp
push
dec
mov
lock
pop
dec
add
adc
dec
call
cwtl
lcall
pcmpgtw
lahf
aam
mov
dec
icebp
sarl
cli
mov
ficoml
pop
cmp
inc
rorb
jb
push
jecxz
cmpsb
sub
je
in
jg
mov
xor
repz
sahf
orb
notb
mov
and
outsb
fisubrs
cmpsl
pop
aam
mov
pop
lret
inc
jne
rcll
out
das
pop
int3
add
int3
sub
or
repnz
add
lds
ret
test
pop
test
inc
roll
pop
xchg
lret
mov
call
dec
mov
add
xlat
xchg
pop
popf
push
hlt
in
popf
rolb
rolb
lcall
ja
clc
rol
mov
sar
pop
outsl
fisttps
mov
xchg
and
int3
sbb
dec
out
fidivl
mov
jmp
mov
mov
mov
adc
icebp
lods
arpl
jns
test
push
or
pusha
pop
sbb
cmpsl
loop
lahf
inc
add
dec
clc
cmc
bound
sbb
fdivs
jnp
push
cli
in
dec
xor
gs
popf
mov
faddl
popa
cmp
sub
in
sahf
jae
sub
je
stc
cmpl
xor
sahf
mov
movsb
sbb
mov
cmc
arpl
add
leave
dec
sbb
mov
cmp
mov
xlat
lahf
mov
push
cmpb
adc
and
in
dec
cmpsb
push
inc
xchg
movhps
rcrl
outsl
mov
inc
push
stos
sbb
and
cltd
sbb
adc
cld
xor
dec
pop
cs
loope
add
sub
push
mov
dec
or
sub
or
push
inc
push
cmc
mov
out
pop
dec
dec
jp
lods
mov
jle
pushf
add
and
pushf
push
mov
pusha
addr16
dec
dec
or
loope
push
lret
xor
lods
jmp
outsl
cmp
addr16
sbb
cmp
jb
mov
dec
outsl
dec
dec
mov
and
or
push
loopne
xor
pop
inc
push
mov
rol
mov
cld
adc
inc
ffree
mov
lcall
lods
in
jns
decb
add
or
push
adc
mov
push
and
cmpsb
in
fildl
pop
mov
or
gs
jae
fcoml
std
pop
shrl
cli
jo
or
aam
cmp
fdivp
or
sbb
rorl
sbb
or
pop
sbb
fbstp
dec
cmpsb
repz
and
lea
hlt
push
mov
cmp
stc
sub
ret
outsl
js
push
xlat
add
sti
dec
cmp
jp
dec
add
stos
push
xchg
mov
outsb
cmp
mov
jnp
ljmp
les
push
xor
outsb
ja
push
imul
or
enter
jbe
fsts
call
aas
in
and
mov
addr16
mov
jle
pop
mov
cmp
cli
mov
fcomps
in
jle
fdivrl
shlb
into
mov
mov
or
int3
stc
lret
or
outsl
sub
cs
pop
pop
notb
idiv
out
dec
notb
aaa
jl
aas
mov
pop
mov
enter
call
mov
jmp
lock
cmp
sub
loopne
mov
xchg
xor
mov
in
xorl
in
subl
pusha
sbb
je
int
cmc
les
lret
sbb
sub
mov
cmpsb
lahf
lahf
jmp
loop
jmp
sbb
inc
mov
or
mov
pop
mov
or
out
xor
adc
dec
xchg
xorl
pop
das
lcall
xor
in
aam
lock
and
loopne
js
xor
xor
push
js
jg
lods
pop
or
or
push
loopne
cld
test
add
cmp
push
in
sahf
add
test
leave
std
push
mov
shlb
cmp
mov
arpl
sbb
and
dec
fmuls
dec
addb
mov
ds
mov
icebp
mov
aas
bound
push
inc
jne
clc
fildl
loop
nop
ja
cmc
mulb
es
mov
push
mov
je
mov
push
push
outsl
std
scas
or
rolb
push
add
pop
cmp
in
fdivrs
add
ret
outsb
dec
fstps
lds
sub
pop
lea
inc
cwtl
popl
ja
sbb
rcl
jle
sbb
pop
nop
inc
mov
ja
pop
lds
lahf
xor
pop
xchg
inc
cmp
jg
mov
and
cmpl
inc
mov
xchg
fcmovnu
arpl
imul
lahf
fsts
inc
fstps
sub
les
inc
imul
bound
inc
pop
mov
fbstp
xchg
dec
and
daa
aam
clc
daa
jno
popa
jl
jb
sarb
dec
push
inc
mov
sbb
mov
stc
mov
int3
mov
inc
mov
addr16
mov
jne
scas
adc
insl
andb
leave
and
push
cmp
ss
or
outsl
movsl
sbb
je
int
xchg
jle
push
xor
xchg
dec
inc
xor
jbe,pt
call
je
clc
call
add
jle
out
adc
sti
dec
lea
movsl
movsb
or
loopne
int3
bound
pop
push
inc
adc
or
xchg
orb
dec
push
pop
cld
aas
jns
push
cmpsb
dec
mov
xor
mov
and
std
fucomip
lods
aaa
dec
daa
or
leave
test
xor
inc
clc
mov
andl
jl
insl
test
scas
inc
es
inc
mov
xor
push
mov
faddl
sub
and
push
push
and
xor
jge
mov
lock
mov
adc
loopne
jo
lcall
enter
outsl
leave
sbb
sti
or
jne
mov
mov
clc
lods
adc
ja
push
jb
cltd
notl
test
incl
cmp
add
xchg
cmpl
sub
fmull
stc
push
lock
sbb
push
pusha
sbb
ljmp
pusha
out
outsb
iret
xchg
pop
jp
jl
loope
jno
xchg
gs
sti
push
add
lods
lahf
fildl
mov
pop
push
shl
xor
xlat
std
mov
testb
out
rolb
fs
andl
cmc
lds
jbe
les
pop
call
rorl
lods
test
or
shrl
hlt
push
in
pop
dec
or
movsl
daa
push
xchg
andl
outsl
dec
daa
fcom
push
sub
cmp
jo
rcll
cmpb
lock
cwtl
mov
mov
ror
stc
je
ja
incb
jp
jge
mov
test
out
arpl
pop
test
pop
jbe
ret
pop
jo
sub
cli
and
inc
orb
mov
jae
dec
jns
xor
xor
mov
enter
inc
ja
push
pop
mov
fcoms
rolb
lods
fcomi
and
das
lret
jnp
add
ja
lea
pop
scas
pop
clc
sbb
push
mov
orb
cli
sub
add
roll
inc
cld
popf
pop
enter
inc
jmp
loopne
inc
sbb
mov
imul
xor
and
pop
daa
sub
mov
dec
add
add
mov
js
popf
add
imul
lcall
push
lea
xchg
sbb
cmc
incl
mov
mov
dec
xor
cwtl
nop
inc
push
mov
push
ret
insb
mov
jmp
pop
push
xchg
add
rcrb
inc
pop
ja
fwait
mov
dec
cmp
push
insl
out
rolb
adc
jle
cmc
es
in
iret
pop
icebp
mov
jmp
clc
push
mov
and
dec
inc
push
std
push
sbb
mov
inc
loop
xchg
add
push
in
push
ror
scas
xor
mov
push
push
adc
sti
xor
shl
and
push
or
shll
sub
aaa
imul
subl
adcl
popf
sub
cmp
ret
stc
cmp
or
sub
lods
imul
jae
stos
cld
rol
pop
shrb
fs
pop
icebp
or
pop
sub
sti
mov
xor
daa
in
xchg
fidivrs
stos
addr16
mov
cld
cmp
lock
or
jge
shr
mov
in
mov
fwait
arpl
mov
mov
jbe
cli
inc
pop
pop
jg
add
pop
outsb
insb
aas
sahf
clc
das
jg
lods
pop
push
shll
lods
jb
adc
inc
or
dec
adcb
and
or
adc
ljmp
loop
andb
sub
aam
loope
mov
add
ror
add
leave
cmp
jne
pushl
loopne
sti
or
or
inc
push
in
adc
jo
mov
and
sahf
lds
xchg
and
enter
push
lods
ljmp
pop
jb
bound
cmp
and
push
jle
sbb
out
fmull
loop
jmp
lock
cltd
std
xchg
sti
sub
and
add
fsubr
jg
mov
xor
or
or
adc
loop
mov
call
pop
add
movsb
push
add
xlat
cmp
cmp
mov
iret
das
add
mull
es
jae
mov
orl
dec
pop
js
jnp
ror
mov
imulb
sub
cmpsb
push
negl
pushf
pushf
cmpsb
lock
or
and
or
adcl
jg
movsl
dec
cmp
or
ret
pop
jb
jl
mov
pop
bound
mov
jmp
adc
adc
int3
cld
jl
std
in
cmp
add
xchg
cmp
icebp
movsl
or
and
outsb
ret
fwait
jno
mov
dec
cmp
imull
push
pop
les
sub
and
add
ret
mov
nop
add
mov
add
mov
adc
adc
jae
imul
push
pusha
inc
xor
out
mov
pop
insb
lea
popf
jmp
imul
mov
mov
pop
xor
xor
aad
cmp
mov
mov
add
shlb
jb
cmp
push
insb
cld
mov
cmp
xor
sbb
or
or
dec
inc
sbb
adc
and
bnd
add
jp
ret
inc
and
jae
nop
addl
adc
sub
jl
add
and
insl
loope
pop
lret
scas
xor
sbb
daa
push
aaa
loope
test
pop
xchg
ss
repnz
jb
lea
xor
aaa
daa
repz
jne
es
movsb
lret
xchg
push
out
rolb
dec
mov
inc
inc
sarl
test
out
sub
shlb
jg
sbb
pop
sub
sahf
cmp
sbb
cmp
inc
roll
pop
ret
imul
xchg
adcl
push
push
inc
roll
mov
fstp
xor
fwait
aam
xor
je
bnd
test
adc
add
daa
loope
sub
pop
mov
repnz
outsb
aaa
or
imul
es
xor
fucomp
call
test
insb
leave
cmp
adc
xchg
pop
aam
xor
cmp
movsl
and
loop
popa
push
jnp
mov
call
push
fcmovu
push
fisttpl
ljmp
add
and
pop
negl
lock
sbb
stos
add
std
jl
aas
ds
and
pop
js
push
mov
mov
adc
mov
icebp
mov
in
clc
mov
ss
pop
push
iret
or
xlat
jle
aas
das
and
sbb
and
cmpsb
xchg
fwait
outsl
mov
adc
imul
pop
jne
dec
decl
push
mov
push
adc
mov
xchg
adc
mov
ret
xlat
and
mov
dec
test
pop
or
les
orl
or
and
jmp
pop
int
mov
xchg
imul
jmp
in
ljmp
repz
ljmp
xor
mov
test
push
mov
sbb
pop
arpl
cld
imul
adc
mov
hlt
ss
call
adc
int3
mov
dec
push
cmp
add
std
add
adc
jecxz
lret
mov
test
and
xor
jle
test
sahf
pop
sub
inc
or
arpl
shl
xor
adc
xor
cli
sub
mov
adcb
push
xchg
outsb
jmp
bound
fdivrl
cmp
popf
push
sbb
leave
push
add
addb
mov
jp
xchg
aas
imul
sbb
xor
lcall
pop
in
aas
dec
ss
sub
jle
and
or
mov
outsb
lcall
popa
push
add
cli
dec
xchg
add
mov
add
sub
inc
sbb
test
bnd
ss
fst
shl
lock
xor
push
in
jae
das
jl
movsl
imul
or
mul
cmp
or
mov
in
in
mov
mov
pop
data16
testb
mov
xchg
ret
fnsave
outsl
mov
aas
add
mov
out
jne
add
pop
dec
hlt
or
gs
imull
mov
jne
ret
mov
push
sar
rcrb
jno
pop
push
hlt
and
addr16
daa
aad
jge
sub
ljmp
in
cmp
lock
cmp
inc
iret
fdivrs
int
mov
imul
arpl
aaa
push
add
add
fcmovnbe
jmp
pop
aam
repz
dec
sub
test
xor
movsl
pop
xor
or
fisttpl
sbb
sub
inc
fdivrs
test
sarb
call
pop
frstor
jmp
loopne
jne
wrmsr
adc
hlt
add
mov
add
shlb
sbb
adc
push
lds
inc
int3
js
dec
push
nop
add
pusha
out
or
hlt
dec
ja
mov
sub
cmc
mov
pop
mov
pop
mov
sub
fisubrs
push
jl
or
in
cs
pop
pop
aam
push
sti
xchg
xorb
mov
fcmovnbe
mov
test
into
mov
push
mov
mov
lds
jmp
push
lret
leave
or
add
jmp
lahf
fdivl
sub
pop
lock
fistl
repnz
fidivs
adc
in
bound
mov
dec
or
outsl
int3
and
js
das
add
or
push
jmp
inc
es
jecxz
rcll
outsl
int3
inc
ja
mov
fiaddl
outsb
mov
xor
fisttpl
loope
adc
xchg
cmp
ds
iret
adc
rclb
cmp
push
aad
lods
push
dec
scas
add
mov
outsb
cmp
push
arpl
cltd
sbb
repnz
pop
dec
and
mov
in
mov
fcomip
or
pop
ja
sub
stos
jl
mov
mul
sbb
das
mov
jo
cli
lods
push
xor
icebp
repnz
subl
test
aam
mov
rorb
pop
pop
in
xor
push
aaa
rclb
push
mov
mov
lahf
push
jnp
mov
inc
push
lock
punpckhwd
inc
or
adc
xor
xchg
jnp
out
sar
sbb
ret
or
xor
bound
or
scas
cmp
push
adc
push
sub
add
std
mov
in
jg
jg
pop
nop
je
iret
add
xor
sbb
jno
cltd
stos
inc
fildll
push
mov
enter
test
push
push
sti
adc
and
shr
mov
pop
adc
add
add
and
shlb
cmp
movsl
xor
sbb
lret
xor
push
stos
push
jmp
jae
lcall
sbb
cmpsb
and
xchg
jo
cmc
fsubp
mov
inc
ljmp
fwait
xor
dec
jg
inc
pop
mov
mov
dec
sub
fmuls
imul
test
xchg
sbbb
gs
push
add
cmp
mov
mov
lock
hlt
xchg
icebp
lock
icebp
cmc
or
and
adc
fstpt
jb
rcrb
xlat
xchg
or
mov
call
pop
mov
push
aas
pop
sti
packsswb
in
push
jb
je
jo
pop
scas
and
mov
lock
sarb
cmp
jg
sub
pushf
fidivs
jmp
push
je
xchg
rcll
mul
or
arpl
xor
sub
js
pop
xrelease
rcl
negb
decb
testl
test
mov
pop
sub
sub
and
xor
push
pop
pusha
pop
out
mov
hlt
or
popf
les
test
data16
insl
adc
fsubrp
ror
insb
adc
add
add
fdivr
aad
xchg
adc
inc
push
iret
add
and
rorb
and
inc
out
sbb
and
mov
jo
js
and
pop
ficoml
adc
xlat
test
sub
mov
mov
mov
inc
cld
or
stos
add
ljmp
packsswb
push
mov
rolb
mov
mov
xchg
sub
test
imul
movsl
ss
call
mov
adc
and
mov
jp
loope
jge
cmpsl
ret
outsl
mov
icebp
adc
dec
hlt
rorb
jp
dec
fsts
push
adc
aaa
neg
and
jae
xor
adc
aas
xorl
push
clc
or
jmp
push
imulb
test
ja
pop
stos
sub
adc
aam
fiadds
shlb
dec
mov
pop
and
aam
stc
sbb
in
fidivrs
sub
jmp
and
inc
or
dec
rcll
adc
or
pop
sub
mov
jge
std
cld
dec
inc
je
push
jo
add
test
lock
inc
push
fstl
and
dec
or
mov
mov
loope
stos
test
sti
sti
pop
and
and
xchg
and
adc
and
push
outsl
xchg
jp
inc
xchg
dec
xchg
inc
shlb
jle
sub
out
dec
mov
sub
sbb
aas
jne
add
or
hlt
jmp
rcrb
xchg
inc
xor
push
push
mov
xor
scas
mov
nop
cmpb
fsubrp
mov
out
je
pop
loope
enter
push
popf
push
lret
add
and
pop
mov
stc
iret
in
pop
fstpl
jle
andb
mov
sahf
sbb
dec
jo
xchg
inc
mov
xor
push
cmp
js
cltd
add
scas
sub
jbe
js
or
or
fildl
addb
imul
bswap
push
aad
les
arpl
adc
ret
das
inc
lret
push
pop
out
sub
insb
test
stos
pop
ret
pop
sbb
fimuls
xor
jo
cmp
adc
push
mov
icebp
mov
mov
push
fsubrs
clc
add
imul
pusha
jbe
sbb
mov
mov
call
sub
call
or
mov
add
mov
sbb
shll
cmpsl
fwait
push
jnp
sbb
xchg
loop
xor
adc
fdivs
xchg
add
cmp
pand
lods
add
fldenv
lock
cwtl
cmpsl
pop
pop
fidivrl
out
pop
pop
leave
cmp
jl
adc
inc
adc
pop
mov
cmp
cld
and
xchg
push
mov
push
aam
shll
icebp
outsb
mov
sbb
mov
cwtl
sbb
out
xchg
cmpsl
daa
test
mov
mov
jo
sbb
fiadds
inc
push
or
jnp
jbe
addb
sub
xchg
cld
inc
divb
popf
fmuls
jl
int3
push
add
popf
movaps
cmp
mov
mov
std
js
add
pop
cmp
je
mov
xchg
fsub
and
pop
cmp
sub
pop
or
negl
mov
decb
jle
pop
mov
adc
push
sub
clc
sbb
outsb
daa
lcall
mov
popf
sub
push
test
xchg
subl
nop
pop
incl
ret
mov
add
adc
les
lods
add
divl
push
pminsw
ljmp
rol
cmovg
add
dec
mov
xbegin
fdivl
dec
lds
and
pop
push
push
pop
es
sbb
sbb
fidivrs
jl
movsb
ret
ds
mov
movsb
sbb
sub
das
repnz
pop
bound
dec
iret
das
frstor
ret
cmp
sahf
jge
cmp
aad
sarb
fisubs
xor
dec
nop
xchg
dec
dec
stos
inc
insb
movsl
ss
and
jnp
inc
jae
imul
dec
sbb
jnp
cmp
jecxz
jo
sub
repz
lods
jmp
sub
popf
hlt
sub
xlat
ffreep
add
jl
push
fs
sarl
cwtl
in
arpl
or
in
push
adc
xor
mov
and
je
out
or
xchg
xor
std
scas
fistl
movsl
rcrl
mov
rcll
outsb
out
sbb
scas
call
movsb
add
pusha
cli
lods
paddusw
pop
ret
and
iret
push
xor
loope
popa
inc
dec
jbe
mov
ljmp
and
outsb
cmp
xor
call
xor
fcmovbe
or
sbb
xchg
imul
adc
js
sbb
pop
frndint
aam
loope
stos
pop
sbb
sub
xchg
cmpsb
mov
xor
push
insb
pop
fldenv
push
pop
outsb
pushf
pop
xchg
dec
mov
dec
sub
add
scas
cmc
pusha
lea
call
mov
loope
mov
push
or
pop
ss
loope
fistpll
pop
fiaddl
daa
xor
loopne
jae
loop
push
pop
add
push
aaa
mov
xchg
adc
pop
stc
push
js
cld
psrlq
xor
mov
xor
mov
insb
sbb
xchg
loopne
movsl
insb
jge
imul
cwtl
mov
sbb
mov
loope
jp
aad
adc
mov
mov
das
and
mov
ds
mov
jl
dec
rcrl
scas
fprem1
inc
call
or
cwtl
sahf
and
jmp
sti
jcxz
push
dec
add
add
sbb
fisttps
jg
push
pop
jo
pusha
push
sbb
or
repz
cmc
push
sti
gs
repnz
cmpsb
stos
decl
xchg
or
insl
fucomi
mov
push
adc
ljmp
rolb
mov
mov
xchg
insb
mov
inc
mov
pop
add
rep
dec
or
lods
adc
fisttpll
pop
js
jl
adc
or
lods
idivb
das
xchg
and
pop
ja
xchg
arpl
adc
jo
pop
sbb
call
or
pop
jge
adc
dec
stc
pop
sub
sti
test
out
adc
sbb
in
out
add
cli
jbe
stos
xchg
pop
sbb
push
lcall
je
mov
push
repnz
inc
hlt
and
jno
sub
push
cmp
fidivs
les
mov
rol
outsb
mov
lods
mov
shlb
cld
inc
mov
jecxz
mov
mov
inc
dec
call
ret
je
cmp
fsubrs
pop
jae
mov
dec
mov
xchg
pop
inc
mov
fdivp
lea
and
pop
or
or
ljmp
aaa
test
mov
pusha
mov
outsb
inc
rcl
lds
cmp
in
xchg
dec
outsb
ficomps
add
roll
pop
jo
icebp
xchg
pop
jb
stc
ret
stc
lods
stos
enter
jo
daa
test
push
fs
outsl
iret
ds
fisubl
dec
or
subb
fdivrs
lahf
lds
push
fdivrl
pop
ss
cmc
xlat
stc
or
lea
inc
mov
inc
out
icebp
jne
sbb
ds
ret
cmp
icebp
icebp
test
orb
inc
ljmp
push
cmpsb
xchg
push
aam
mov
inc
pop
jno
cmpsl
shl
mov
inc
dec
cmpsl
fimull
xchg
push
dec
inc
push
mov
mov
pop
push
rcrl
mov
arpl
outsb
xchg
add
jmp
pop
ret
fisttpl
out
push
pop
push
mov
movb
jecxz
dec
xlat
xchg
out
sub
sti
cmp
loopne
loop
mov
ret
mov
sbb
push
pop
insb
mov
jnp
arpl
iret
fnsave
jno
lods
out
shll
add
add
cmp
lea
dec
adc
mov
int
call
leave
mov
pop
addr16
cmp
jg
lods
adc
jle
dec
outsb
sbb
cmc
sbb
add
adc
sbb
mov
data16
pusha
leave
inc
or
mov
int3
out
nop
fbstp
pop
ds
adc
inc
pop
mov
inc
jle
mulb
xchg
lret
adc
dec
or
cli
sub
and
in
mov
rcrb
jge
and
mov
xor
cmp
cmp
jl
xchg
or
enter
rcl
add
insl
hlt
dec
add
add
xchg
bound
xchg
std
mov
aad
and
mov
inc
jo
fs
por
aam
jbe
lods
das
test
fidivs
jl
aaa
mov
aaa
add
test
outsb
push
cmpsb
fadds
push
jne
pushf
and
mov
sahf
push
les
inc
ret
es
fwait
ss
stos
xor
cmc
arpl
out
mov
and
rcll
movsl
xor
aaa
cmp
pop
add
mov
aaa
cmp
dec
push
rorl
add
dec
nop
xor
jge
loop
dec
mov
and
jecxz
sub
fildl
jne
jbe
jl
in
xor
lds
sbb
mov
lea
pushf
movsb
imull
dec
dec
xchg
sub
mov
roll
xchg
jb
jo
in
fwait
sarl
sti
adc
lea
outsb
ds
mov
addb
cmpsb
mov
sbb
add
in
mov
stos
inc
jns
iret
es
movsb
mov
add
mov
sti
iret
xor
loope
cld
jo
lods
jne
add
xchg
mov
icebp
pop
outsl
test
add
dec
fwait
pop
adc
add
inc
mov
je
mov
mov
or
inc
and
adc
xchg
pop
dec
dec
pop
ljmp
in
scas
xchg
int
test
das
mov
stos
mov
lods
mov
test
mov
clc
movsb
xchg
ljmp
add
pusha
ja
ret
call
push
adc
xor
inc
loopne
imul
lcall
add
lahf
andps
jno
mov
pushf
lret
insl
mov
lods
mov
ret
int
and
dec
sbb
lcall
mov
pop
xchg
or
movsb
ljmp
clc
inc
xor
rorl
mov
arpl
insb
or
inc
xchg
outsb
cmp
js
sub
ffree
sub
mov
adcl
mov
lret
mov
int3
sub
fsubrs
pop
ljmp
mov
jno
dec
and
pusha
out
push
rep
xor
fisubrl
sbb
xchg
jo
dec
test
fnsave
call
mov
or
jne
ds
enter
in
xor
inc
shl
ja
and
sub
jl
xchg
int
std
sbb
stos
mov
nop
mov
out
dec
dec
xchg
xor
ljmp
popf
test
stc
cmc
fdivr
loopne
dec
mov
repz
jno
sbb
dec
incb
and
xchg
mov
jae
insb
mov
ud1
ret
dec
and
shlb
es
je
test
mov
and
repz
ds
sbb
out
jmp
lock
sub
dec
push
sbb
xor
fwait
rorl
les
jmp
repz
xorb
add
iret
imul
ret
std
sbb
shlb
arpl
lock
neg
in
inc
arpl
mul
pusha
push
sbb
cmpsl
cld
jle
mov
inc
outsb
std
add
and
in
sub
mov
mov
jle
push
jmp
jne
adc
rcrb
mov
sbb
push
mov
roll
aam
ss
mov
push
mov
add
icebp
js
adc
jnp
outsb
aaa
or
xor
jbe
mov
inc
popf
pop
push
loopne
jnp
and
lcall
xchg
or
pusha
jecxz
inc
lahf
lcall
mov
pop
shlb
fldl
hlt
aaa
sbb
push
push
inc
mov
cmp
push
shrl
sbb
mov
sti
ror
xor
adc
jmp
dec
mov
cli
rolb
cld
mov
imul
add
push
cmp
fadd
fists
testb
mov
lahf
pusha
pop
call
pop
xchg
pop
or
scas
imul
loope
jb
scas
bound
push
or
icebp
xor
mov
mov
add
pop
push
inc
jle
testl
jno,pn
add
pop
les
mov
mov
inc
in
mov
jne
ret
sbb
push
mov
stos
iret
inc
shlb
jne
or
jo
jb
stos
sbb
imul
stos
mov
mov
outsl
pop
stos
xchg
jbe
cmp
inc
pop
orl
and
jle
ss
mov
xor
js
jmp
stos
outsl
cmp
lret
clc
pop
jo,pt
sub
hlt
mov
jge
mov
and
ficoml
jl
dec
out
orl
hlt
xchg
pop
js
notl
loop
call
mov
dec
jno
pop
addr16
aaa
sub
call
addr16
add
js
inc
dec
add
orl
xor
push
adc
shr
in
out
pop
push
inc
outsb
add
imul
idiv
lret
add
sub
dec
jmp
xor
xor
icebp
call
imul
ret
loope
dec
je
gs
fmull
mov
dec
mov
aaa
mov
out
jo
mov
jo
jo
push
mov
add
inc
jmp
inc
mov
sbb
inc
sub
jmp
jno
mov
mov
xor
maskmovq
testl
mov
mov
dec
jb,pn
or
push
jb
push
dec
pop
push
in
add
neg
negb
mov
xor
dec
test
adc
fsubs
sub
inc
sub
mov
in
aas
cmp
mov
icebp
mov
ret
ja
out
push
rorl
push
add
inc
sbb
mov
push
call
inc
cli
add
test
mov
jge
idivb
dec
pop
add
pop
add
pop
xor
pop
les
in
push
clc
mov
jnp
outsl
mov
cmp
inc
stos
inc
mov
cmp
xadd
lret
or
pop
add
mov
outsl
sub
xor
aaa
dec
dec
xchg
mov
in
mov
push
xor
out
inc
dec
dec
test
mov
cmp
outsl
and
fstl
sbb
push
add
movsb
into
inc
jne
movsl
sarl
pop
xor
sub
dec
mov
call
add
sbb
loope
jae
sarl
dec
pop
jns
sbb
mov
sbb
push
enter
addr16
icebp
push
jne
push
mov
inc
xor
or
ss
out
mov
xor
and
outsb
jae
insl
lcall
jne
cli
xchg
push
xor
icebp
mov
push
gs
filds
mov
call
popa
call
dec
pop
outsb
mov
jle
lret
fcmovb
or
js
jb
or
jmp
dec
cmp
push
push
ss
in
xor
jnp
loop
push
dec
mov
add
dec
subl
inc
push
add
loop
dec
pop
imul
dec
push
pop
xor
mov
dec
int3
test
dec
fs
inc
inc
js
ret
scas
jno
inc
mov
dec
push
jno
inc
ja
out
pop
inc
sbb
push
movsb
push
jbe
lahf
xchg
nop
std
mov
mov
add
jg
add
mov
mov
dec
mov
div
popl
pop
mov
leave
or
sbb
mov
mov
dec
int
rorl
mov
dec
lds
mov
xlat
mov
sar
pop
pop
add
xchg
pop
sti
lret
nop
adc
test
arpl
mov
outsl
xorl
or
cmp
adc
or
or
stos
jnp
insl
outsl
mov
dec
orl
imul
sbb
cmp
sbb
lcall
sbb
movsb
cmp
pop
mov
xchg
out
fstl
adc
divb
addr16
cwtl
out
push
jne
nop
mov
add
jo
jae
mov
mov
xchg
pop
add
mov
lea
repz
pop
jb
and
pop
xor
xchg
sbb
ret
ret
jns
outsl
dec
add
addr16
push
or
inc
cs
jns
or
dec
lcall
lret
jmp
cli
lret
std
xchg
out
cmp
dec
test
cmp
lcall
mov
or
shr
dec
push
fistpll
fs
notl
mov
addr16
shlb
lret
out
dec
cs
sub
std
div
sbb
fildl
cld
movntq
push
sbb
mov
cmp
sbb
inc
mov
test
or
sbb
jnp
pop
jb
mov
jb
and
test
out
ja
dec
xchg
lea
add
imul
mov
sbb
lcall
sti
mov
fs
pop
jmp
mov
in
hlt
fldcw
lahf
into
cmpsl
decl
stos
ret
cli
stos
or
data16
cli
adc
out
cli
jno
jg
or
mov
lods
push
and
add
add
cmpsl
fistpl
orb
xchg
in
stc
pop
jecxz
iret
mov
or
push
and
xchg
aam
push
inc
push
adc
add
add
adc
add
mov
pop
cli
fistpll
add
mov
repz
clc
xlat
out
incl
add
aas
fsubp
mov
cmp
aas
mov
and
lea
loope
and
jecxz
pop
jb
fldenv
jbe
add
add
xchg
out
movsb
fldenv
fimuls
clc
jb
addr16
jb
jb
daa
sbb
fdecstp
frstor
pushf
fcom
adc
fldenv
rorl
xchg
pushf
xor
loop
rcll
daa
int
ja
sub
loopne
dec
ja
and
out
leave
dec
ja
jmp
inc
out
iret
and
out
int
xlat
push
and
ret
loope
aaa
add
jo
dec
sti
mov
jnp
in
mov
jg
dec
orb
cmpb
push
retw
test
arpl
sbb
mov
inc
jmp
jne
pop
or
mov
fwait
sub
dec
insb
pop
popf
fs
mov
jae
neg
pushl
jp
pop
movsb
fidivrl
jne
lahf
cmp
mov
fs
cmp
imul
fisubl
das
outsl
or
push
xchg
push
xchg
push
mov
push
add
dec
ja
fnstsw
xchg
sti
mov
adc
fsubl
push
shrb
shlb
pop
out
adc
adc
cmp
ds
bound
jp
push
mov
cmpsl
daa
fnsave
push
inc
dec
and
addr16
sbb
fwait
lea
push
push
pop
imul
pop
addr16
inc
cli
dec
adc
outsl
dec
cmpsb
xor
mov
cmpsl
mov
cld
mov
fs
in
jge
out
pop
cmp
dec
lds
int3
insl
arpl
or
out
jnp
jg
lahf
fldt
jg
lods
jl
jecxz
rcl
mov
aam
jns
add
push
cld
xchg
addr16
mov
jl
or
ret
or
pop
mov
push
mov
fadds
mov
into
cmp
xor
fcoms
ror
cltd
in
pushw
jno
out
lahf
fs
fisttpl
dec
ja
pop
fwait
mov
aaa
out
fidivrs
out
cld
or
test
push
fmul
ds
push
int3
jp
pop
cmpsl
xchg
mov
mov
fistps
arpl
das
inc
lea
fsubl
mov
arpl
mov
mov
sub
movsb
inc
or
mov
pushw
lds
lea
mov
int3
fwait
jle
fbld
add
orl
les
adc
or
cmpsl
movb
inc
pop
mov
jge
outsl
insb
dec
or
mov
mov
fstp
pop
out
pushf
and
fdivs
cmpsb
into
inc
pop
xor
fdivrl
aas
xchg
jae
aad
aam
add
dec
lahf
and
iret
and
mov
sub
adc
fs
loop
and
cli
sbb
mov
push
jecxz
xchg
fcmovnb
pop
clc
dec
out
fisttpl
sahf
adc
or
popa
outsb
push
push
jns
cltd
add
or
xor
loope
dec
ljmp
xor
sbb
pop
std
jo
fimull
rcll
out
ret
sti
mov
cmp
push
xchg
add
or
clc
out
pop
popf
test
xchg
pop
and
rcr
sbb
jle
mov
push
or
cmp
or
hlt
or
add
std
or
pop
ljmp
outsl
es
subl
iret
lea
push
mov
inc
push
jae
in
xor
xor
dec
aas
int3
xorl
jne
cs
mov
mov
imul
mov
xchg
mov
fcomps
cld
insl
cmp
int
das
scas
xchg
fdivr
jle
xchg
enter
sti
int
mov
fcmovbe
push
es
or
dec
mov
pop
ljmp
jo
jmp
loope
imul
insl
ja
mov
mov
xor
push
mov
mov
mov
mov
adcl
aam
std
dec
adc
add
xchg
mov
cli
fwait
xchg
fnstcw
xchg
add
fs
inc
decb
cli
push
inc
lahf
jmp
outsl
xchg
outsl
jmp
lcall
add
das
add
add
mov
cli
push
mov
std
mov
stos
addl
dec
mov
and
outsl
outsl
lods
out
std
xchg
push
push
dec
rcr
mov
mov
pop
in
mov
cli
xchg
int
xor
nop
test
mov
pop
sbb
mov
xchg
mov
scas
mov
into
and
and
push
jae
push
psllq
push
cmp
std
fisttpl
mov
sub
push
subb
dec
outsb
lea
mov
test
test
jp
jb
xor
or
add
clc
mov
aas
test
out
gs
mov
repnz
sub
roll
xor
data16
sub
and
pop
inc
lods
sub
sub
shlb
add
push
mov
lahf
out
call
movb
dec
enter
and
jno
mov
inc
pop
ret
adc
aaa
imul
adc
mov
sbb
add
jg
sub
push
lcall
push
loopne
test
cmp
aas
ja
cmp
and
xchg
mov
mov
sbb
add
pop
mov
addr16
push
cli
jge
xchg
inc
cmp
sub
cmp
mov
arpl
cld
jg
inc
push
push
mov
cmpsb
cmp
xchg
in
mov
fwait
aas
jnp
cmp
mov
fstpl
add
and
pop
and
in
jbe
cmp
shll
pop
xor
cmp
pushf
inc
sbb
fs
jbe
and
loop
repnz
mov
jg
lock
fdivl
clc
or
sbb
dec
jmp
divl
mov
adc
sbbb
pop
xchg
addb
lret
mov
ret
add
mov
addr16
sub
fcoms
movsb
rep
cmpsl
add
gs
mov
add
or
cmpb
pop
mov
sarb
fistpl
xlat
xlat
and
pop
testb
dec
xor
cs
dec
dec
and
enter
inc
adc
fs
add
nop
push
add
inc
inc
add
add
adc
push
add
lcall
add
stos
and
fwait
stc
jmp
add
outsl
add
imul
insl
add
insb
pop
mov
inc
daa
jb
imul
dec
xor
jmp
jae
adc
jne
out
jnp
outsl
mov
sbb
and
arpl
mov
push
add
add
dec
xlat
jne
mov
sbb
addr16
aaa
jae
testl
outsl
add
inc
cmp
inc
dec
jge
repz
pop
dec
add
mov
cmp
fildl
popa
cltd
gs
push
mov
add
es
outsl
adc
push
and
mov
cmpsb
jmp
addl
popa
and
sbb
mov
daa
jne
testw
mov
fs
xchg
sbb
outsb
test
outsb
pop
and
scas
fwait
mov
fildll
outsl
xor
adc
leave
outsb
aas
addr16
outsb
cmp
dec
jbe
cltd
adc
xchg
ret
in
and
sti
gs
in
mov
fstpl
pop
push
inc
or
push
push
cmp
fsubs
icebp
insb
sub
jae
adc
test
inc
sub
inc
aas
in
fld
popf
out
cmp
xor
sub
push
sbb
xor
jg
pusha
push
sbb
dec
and
or
push
fidivrs
jge
imul
arpl
or
mov
repz
in
stc
xor
jae
lret
jo
and
ja
pop
dec
dec
sbb
movsb
out
popa
pop
jae
pushl
jnp
cmp
jg
aas
data16
out
dec
jae
sbb
inc
shl
js
addr16
cmp
jno
lahf
lret
sub
and
push
fs
ficoml
push
popa
inc
dec
aad
out
sbb
cmp
fnstcw
xor
fldl
mull
or
outsl
sub
dec
out
pusha
adc
mov
sbb
in
arpl
mov
pop
insb
dec
xchg
roll
andl
inc
neg
sbb
adc
jmp
add
mov
inc
in
mov
es
push
sti
js
jno
mov
outsb
js
push
or
inc
ja
xor
add
xor
roll
mov
or
add
inc
mov
movsl
insb
daa
outsl
cltd
ja
bound
or
aaa
shlb
mov
dec
xchg
outsl
lret
lahf
outsl
mov
dec
or
lods
and
jb
adc
jmp
out
addr16
xor
outsl
sbb
sbb
lea
inc
scas
cmp
ss
in
cmp
out
jmp
sbb
das
jb
bound
sbb
sub
sbb
lods
sti
push
dec
sbb
out
xchg
je
lds
testl
jae
mov
repz
ficomps
imul
arpl
pop
dec
out
cmp
add
adcl
and
test
insb
dec
adc
xor
jae
inc
dec
dec
or
cmp
iret
add
push
call
push
push
xor
xor
inc
mov
dec
cmpsl
fadds
repz
or
and
daa
pop
testb
sbb
inc
mov
std
mov
mov
push
sahf
lock
xchg
sub
xchg
cmp
cmpl
pop
icebp
push
push
iret
pop
jmp
je
scas
and
pushf
sbb
arpl
jo
das
fadds
or
jp
pop
jge
xlat
xor
ss
cmp
cmp
add
jecxz
sub
es
bound
lcall
rcll
xchg
shr
pop
arpl
jp
jo
dec
imul
fcoms
jmp
inc
sti
cmpxchg
popf
sbb
aas
ljmp
addr16
sbb
dec
out
dec
lods
cmc
dec
das
xchg
xor
lahf
sub
or
jnp
lods
ja
mov
or
addr16
sbbl
dec
jae
add
sub
xlat
in
gs
and
insl
jno
sub
repz
nop
out
lds
xchg
dec
loop
push
daa
jmp
es
test
int
lret
xchg
pop
scas
xchg
inc
sbb
test
insl
ret
das
jno
movsb
outsb
lods
inc
inc
adc
fisubs
jg
addr16
jge
push
sbbl
add
sbb
mov
dec
dec
mov
xchg
mov
out
adc
xchg
pop
lret
aam
jo
add
adc
xor
pusha
imul
es
adc
rorl
pop
mov
popa
lods
out
push
sub
cmp
or
dec
dec
scas
int3
lock
or
inc
dec
lcall
dec
loop
or
add
push
fs
dec
loop
rcrb
fisubs
popa
inc
xor
xor
js
loopne
fists
aaa
xor
and
es
insb
or
mov
shrl
jae
dec
ret
add
leave
jg
jmp
xor
popa
xchg
das
fadds
lahf
lea
mov
sarl
imul
in
jb
adc
push
mov
inc
lahf
sub
inc
push
pop
adc
push
imul
xlat
mov
idivb
lock
imul
es
cltd
dec
jg
xor
adc
leave
ljmp
dec
call
popa
sbb
iret
xor
out
or
inc
mov
fwait
ja
icebp
xchg
loope
adc
jg
cmpsl
rcrl
mov
mov
jne
sbb
mov
aad
xor
push
mov
jnp
inc
add
jae
pop
jnp
inc
out
out
and
pop
sbbl
addr16
sbb
sti
aad
xor
sub
adc
aad
xchg
jns
inc
daa
pop
dec
sub
int
mov
mov
dec
jge
cs
and
insl
jb
xchg
test
xor
inc
dec
xor
es
rcll
lods
in
mov
jmp
mov
popa
lahf
dec
loopne
push
sarl
dec
leave
ljmp
das
and
outsb
leave
inc
das
adc
and
mov
adc
ljmp
scas
mov
leave
fmulp
stc
sbb
mov
jae
xchg
dec
out
sub
cmp
sbb
pop
sbb
fs
inc
mov
les
push
dec
push
pop
dec
and
mov
addr16
roll
movb
iret
and
aaa
jecxz
adc
int3
dec
dec
sti
jae
push
je
jge
dec
jmp
pop
or
add
push
loope
or
fstl
outsl
sti
shlb
nop
and
jmp
test
int
sar
in
or
cmpsl
lahf
arpl
pop
flds
or
movsl
sub
jl
lea
or
arpl
enter
cltd
leave
ja
xlat
jmp
sub
dec
push
and
add
rcl
cmp
mov
inc
xor
jne
cmp
inc
add
jo
dec
popl
xchg
dec
shr
xor
pop
insl
and
dec
icebp
push
scas
fldenv
pop
fcomp
adc
add
xchg
fmull
pop
das
jge
push
movsb
mov
cmp
popa
dec
xchg
inc
mov
xor
into
je
lods
push
sub
xor
mov
popa
rcrb
ret
sbbl
inc
and
nop
movsb
xchg
sbb
into
and
fcmovnb
dec
adc
xchg
lea
sub
xor
xchg
icebp
int
and
mov
inc
aaa
sbb
add
add
xor
sub
imul
mov
inc
aaa
jp
xorb
nop
dec
mov
es
lea
popa
xor
sbb
jnp
rolb
jae
insb
inc
pushf
rcrb
pop
or
insl
fwait
and
adc
cli
mov
xchg
outsl
pop
sbb
push
addr16
pop
inc
jae
pushl
inc
and
jne
cmp
jbe
mov
int
or
or
ret
mov
ret
adc
jecxz
mov
fwait
or
dec
and
jnp
sub
shrl
dec
addr16
ja
sbb
movsb
gs
mov
ret
or
or
xor
outsb
ret
jmp
or
dec
dec
push
push
sub
mov
pop
add
adc
pop
test
lods
or
imul
xchg
lds
fwait
push
jb
cmc
loope
sub
loopne
pop
icebp
push
ja
fcoms
adc
or
jnp
mov
dec
sub
dec
call
sub
mov
mov
mov
ljmp
adc
test
movsb
pop
jmp
pushf
and
mov
cmp
jnp
arpl
or
adc
lods
or
mov
xchg
out
jne
imul
jo
add
popa
enter
or
xor
jo
adc
adc
arpl
add
orl
ja
inc
fwait
mov
push
jae
rcll
shll
jae
stos
inc
xor
frstor
es
adc
xchg
mov
sub
jmp
inc
push
add
lea
xor
jne
jbe
mov
or
jmp
bound
outsb
push
mov
pop
addb
xlat
pop
push
cmp
ltr
dec
ret
lock
out
jge
dec
out
dec
or
pop
sti
sbb
and
dec
arpl
mov
sub
fwait
lret
mov
adc
lret
shlb
cmpsl
inc
mov
aas
dec
mov
pop
sbb
dec
xor
sub
mov
pop
sarb
shll
scas
add
stos
movsl
add
mov
push
and
ja
gs
lds
imul
and
mov
imul
mull
inc
dec
scas
or
cmp
xor
roll
arpl
adc
cmc
fimuls
dec
pop
cmpsl
inc
iret
inc
movsb
xchg
lock
mov
xor
sbb
xor
adc
popa
mov
xchg
icebp
add
push
repz
leave
outsb
jecxz
push
jno
arpl
sub
inc
dec
aaa
mov
daa
xchg
data16
dec
lods
int
inc
test
lods
jb
jbe
pusha
test
movhps
jge
into
jp
and
bsr
xchg
movsb
jnp
push
das
dec
ja
mov
out
adc
arpl
scas
xor
push
js
xchg
jns
fcompl
out
popa
cmp
pop
push
jl
push
and
xchg
and
test
or
or
fstp
out
mov
out
les
xchg
inc
fists
pop
cmp
js
out
jbe
daa
add
inc
gs
jne
xchg
pusha
imul
insl
pop
pop
jnp
add
jno
mov
insl
fists
pop
jp
jl
mov
test
aaa
mov
add
add
jb
stos
cmp
jo
push
or
je
jb
arpl
lcall
jo
gs
rcpps
je
jo
outsb
outsw
inc
fiadds
mov
jl
inc
imul
dec
popa
insl
adc
jbe
je
cmp
push
rcr
xor
outsb
addr16
sbb
fwait
stc
in
je
outsl
insb
outsb
inc
outsb
fs
imul
jg
push
pop
dec
popa
pop
add
insb
mov
inc
push
inc
pop
nop
in
xchg
jne
arpl
insb
push
jo
push
push
imulb
inc
lods
adc
gs
imul
fcmovbe
mov
imul
gs
mov
mov
jns
gs
mov
dec
in
add
dec
outsb
addr16
cmp
addr16
rcr
jnp
gs
outsb
popa
fsubl
lods
jnp
push
dec
inc
imul
mov
sbb
fldt
stc
inc
inc
or
mov
mov
jo
imul
mov
jo
push
or
bound
mov
push
arpl
jbe
arpl
es
test
insb
push
hlt
add
jae
inc
xor
into
push
iret
add
xor
insb
addr16
ret
jbe
fistpll
insl
push
gs
inc
push
jne
push
xor
add
dec
outsl
popa
fs
jne
jae
xor
arpl
imul
cltd
negb
bound
add
das
jae
xchg
jnp
inc
mov
dec
sbb
fiadds
add
xchg
inc
imul
sar
bound
outsl
js
js
ja
arpl
fsubrs
sbb
jl
push
dec
cs
inc
leave
inc
xor
or
push
popa
cmpsl
inc
push
fisubrs
push
insl
pop
outsb
test
lret
jne
inc
jne
outsb
jns
int3
mov
lods
push
outsb
jae
mov
outsb
fldenv
int
in
pusha
lods
mov
or
out
paddsw
and
insl
pop
mov
xor
push
xchg
jbe
imul
popf
push
jns
jno
pop
aaa
adc
arpl
mov
loope
dec
cmp
out
mov
jge
arpl
jae
shll
mov
mov
hlt
xchg
movsl
jno
mov
lcall
push
pusha
out
adc
jae
mov
imul
pop
inc
adc
mov
jnp
dec
add
add
add
mov
smsw
adc
fnsave
add
in
aad
adc
inc
or
scas
es
fadd
pop
ret
add
ss
xor
pop
push
add
stc
addr16
push
mov
add
sub
pushl
adc
add
mov
or
das
mov
je,pn
add
imul
jmp
imul
hlt
inc
sti
ljmp
jb
imul
inc
mov
daa
or
in
xor
lock
push
imul
rorb
out
repz
dec
lcall
add
loop
push
add
add
add
add
add
add
pusha
mov
lea
push
jmp
fwait
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
