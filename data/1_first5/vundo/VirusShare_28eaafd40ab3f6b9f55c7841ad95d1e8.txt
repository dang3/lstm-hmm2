iret
mov
out
mov
loope
dec
xor
push
adc
mov
cs
mov
push
adc
mov
fmuls
and
sub
push
adc
inc
insb
xchg
adc
js
cmp
adc
adc
pop
and
add
push
push
adc
rep
push
jl
inc
push
mov
ds
push
push
push
adc
lret
mov
pusha
push
sbb
pop
fadds
adc
fwait
pop
test
pop
push
jns
mov
popl
push
adc
sbb
loope
cmp
push
adc
pop
out
pop
push
out
sbb
js
inc
scas
sbb
pop
imul
rcrl
cmpsl
mov
xchg
or
or
fwait
sub
push
cs
mov
lcall
outsb
mov
push
mov
fs
xlat
pop
lret
ds
fs
int3
fisttpll
ffreep
pop
mov
mov
fstpl
adc
adc
sbb
xor
daa
mov
clc
lea
adc
push
adc
ljmp
pop
adc
sarl
fcompl
push
adc
push
imul
adc
pop
jae
adc
adc
loopne
addr16
adc
sbb
push
adc
out
jmp
ret
xchg
and
lea
adc
push
adc
daa
rorb
inc
and
push
adc
dec
adc
pop
adc
loope
imul
sbb
xor
push
adc
sub
push
pop
clc
enter
sbb
xor
ret
xchg
mov
pushf
scas
int3
dec
jb
push
inc
xor
xorb
add
push
mov
pop
rcl
add
js
in
adc
es
mov
mov
jl
iret
add
dec
xchg
pop
cld
mov
xchg
inc
sbb
adc
mov
js
mov
push
mov
inc
pusha
sub
decb
push
es
xor
jnp
mov
cli
push
inc
in
fsubrs
pop
iret
jae
test
and
sbb
cmp
cmpsb
loop
arpl
xchg
mov
test
mov
push
sbb
cwtl
jmp
aam
fisubs
mov
mov
mov
push
pop
lcall
roll
and
adc
adc
add
rorb
cld
stc
rcl
addr16
pushf
in
or
pusha
scas
jno
fwait
sub
mov
fs
inc
lret
mov
sub
mov
int3
xor
adc
fstl
adc
lock
into
and
inc
pop
fsub
adc
lock
sti
xor
dec
pop
adc
dec
loopne
ficoms
add
fwait
pop
xchg
and
adc
adc
loop
xchg
sub
ficoml
rclb
add
pop
int3
sub
add
push
aam
inc
pop
adc
pusha
adc
adc
jl
pop
adc
sub
outsb
xchg
fnstenv
add
sarb
leave
jno
imulb
dec
out
call
ret
jl
cmp
in
repz
push
push
adc
adc
inc
pop
test
mov
dec
push
xchg
inc
insb
cli
push
push
mov
jne
stc
popf
lret
and
dec
sbb
loopne
mov
repz
adc
adc
xchg
mov
jge
xchg
icebp
aad
les
lods
push
cmp
push
cmc
imul
mov
mov
repz
adc
and
insb
fdivrs
dec
fisubrl
roll
mov
stos
shrb
jo
sbb
insl
stos
js
push
adc
leave
test
push
adc
cmp
push
mov
xchg
fnstenv
inc
test
pop
outsb
repz
xchg
mov
jbe
dec
jbe
push
into
fwait
inc
push
int
sub
pop
jg
js
and
es
pop
int3
and
xchg
pop
jo
dec
int
ss
adc
adc
adc
dec
popa
repz
movsb
mov
mov
fbstp
mov
mov
mov
add
repz
pop
lret
mov
jne
push
inc
loop
xchg
pop
mov
rorl
mov
aas
sbb
xor
mov
xchg
or
insl
ss
xchg
iret
sbb
jns
leave
pop
loop
repnz
mov
and
rolb
sub
add
jl
out
cmpsb
xchg
xor
inc
loopne
xchg
and
cmp
ljmp
scas
js
push
adc
cli
adc
dec
loopne
popf
sub
cmp
mov
mov
cmc
pop
scas
in
sub
dec
arpl
adc
adc
cld
stc
sub
and
adc
sbb
xchg
jno
stos
std
sub
push
cltd
cltd
loope
rcrl
stos
popf
orl
lods
nop
test
adc
push
adc
mov
adc
xlat
pop
inc
leave
jbe
cmp
outsb
out
pop
xor
call
mov
fs
imul
fimuls
in
fcoml
xchg
fidivrs
lcall
adc
adc
sbb
mul
mov
push
adcl
cmp
xchg
call
hlt
stos
popf
jmp
pop
inc
adc
adc
les
mov
adc
adc
imul
push
insl
insb
sub
mov
inc
adc
adc
adc
mov
xor
lahf
and
jbe
lret
nop
adc
adc
les
insl
sub
out
push
push
movsl
push
mov
ret
mov
push
adc
push
cmp
aaa
fmull
jae
cmp
fcomps
cmp
xor
sarb
fwait
gs
jl
xlat
outsb
inc
mov
and
icebp
in
push
add
xchg
inc
mov
sbb
xchg
adc
adc
outsl
test
adc
pusha
aas
dec
in
xor
imul
mov
jnp
xor
jl
push
add
mov
in
jo
pop
adc
xlat
fs
stc
pop
jne
addr16
pop
adc
adc
mov
test
dec
sti
sub
jo
add
lahf
es
adc
adc
xchg
lcall
repz
ljmp
mov
xor
cltd
mov
xchg
data16
pop
push
lret
pushf
adc
adc
inc
arpl
mov
insl
fistpl
push
xor
dec
mov
dec
jmp
out
and
call
loopne
nop
adc
adc
xchg
das
jl
std
testb
lcall
insl
fstpt
pop
push
adc
xor
pop
in
sbb
pop
mov
pop
lods
or
mov
dec
xor
add
push
mov
shrb
pop
adc
adc
push
adc
lods
aam
sti
fdivs
pushf
jmp
mov
mov
push
adc
dec
imul
pushf
xor
and
scas
js
or
negb
mov
insl
ret
lret
pop
push
adc
xchg
mov
cmp
sbb
adc
fidivl
xchg
movsb
cltd
push
xor
add
sahf
ds
mov
inc
outsb
or
xor
xchg
adc
adc
jl
cmc
xchg
lret
pop
push
adc
push
adc
test
push
adc
xor
pop
in
fwait
movsb
push
cmp
adc
arpl
and
xchg
push
cmp
icebp
mov
int
jp
int3
scas
fwait
inc
jnp
out
pop
arpl
mov
and
adc
into
jg
rorb
push
fsubl
xor
sbb
mov
ljmp
cmp
loopne
fwait
xchg
mov
pop
ss
dec
dec
ljmp
ja
negb
into
mov
scas
in
sub
jg
mov
cli
sbb
es
mov
out
pop
test
hlt
inc
lret
or
popf
mov
xchg
outsl
sarl
xchg
mov
xchg
jl
mov
lret
mov
out
or
dec
sbb
cmpsb
ret
les
test
in
or
in
bound
cmpsb
and
repz
in
fcoms
xor
mov
subb
or
push
sub
jns
xor
shr
inc
xchg
cmpsb
frstor
out
loopne
mov
inc
js
out
mov
sbb
sbb
push
pusha
les
ljmp
dec
pop
cwtl
lret
push
xchg
inc
and
shll
cmpsl
adc
dec
push
rcll
jae
sbb
jbe
mov
push
push
jl
pop
adc
mov
xchg
jmp
pusha
xchg
shll
jne
gs
pop
test
add
lahf
xor
lret
dec
std
and
and
imul
das
imul
sbb
outsl
ror
test
addr16
lds
push
dec
xlat
cmp
xor
mov
pop
ret
mov
or
mov
xchg
mov
and
insb
xchg
subl
hlt
push
xchg
fidivrl
scas
cwtl
or
into
insl
mov
jne
mov
cli
push
dec
jo
test
cwtl
mov
cltd
das
popa
sbb
jbe
jo
pop
adc
lret
cmp
in
xor
adc
pop
ret
mov
jl
mov
xor
jp
push
mov
frstor
adc
adc
sbbb
mov
pushfw
icebp
sub
lods
dec
mov
and
mov
jl
mov
imul
or
push
sub
sbb
add
mov
stos
les
cs
or
outsl
sbb
push
adc
fcmovnb
mov
jl
das
jnp
cltd
addr16
test
jb
insl
sub
lods
lahf
popa
stos
push
insl
push
mov
sbb
and
push
int
xor
lods
data16
lcall
xchg
jnp
lock
pop
push
add
or
loop
sbb
xor
cmpsl
sbb
mov
xor
pop
push
adc
int
adc
adc
dec
mov
js
adc
add
mov
dec
out
add
mov
cmpsl
sbb
mov
xchg
xor
adc
push
das
pop
mov
xchg
xor
mov
lret
mov
pop
pop
push
rep
ds
mov
pushf
lods
jns
lcall
pop
pop
adc
sbb
dec
xor
insl
bound
out
xchg
jns
dec
xchg
mov
xor
das
repnz
pop
ret
pop
mov
or
leave
shrl
jnp
insl
cmp
adc
adcl
daa
xchg
iret
shl
adc
pusha
leave
fs
jecxz
or
loop
ret
mov
cmp
daa
dec
xchg
add
dec
sub
dec
into
movsb
cwtl
loop
xor
int
mov
cmp
mov
fdivs
xor
pusha
leave
pop
in
into
pop
inc
xor
pop
xor
shrb
shrb
fcmovnb
xchg
xchg
push
mov
enter
add
dec
fisubl
test
sahf
cmp
dec
adc
movsb
mov
out
xchg
jns
dec
repnz
inc
aam
push
pop
cli
cs
jmp
sub
movsb
int
sub
mov
mov
dec
sbb
mov
outsb
fwait
in
fwait
ss
js
outsl
add
mov
call
and
pop
mov
and
push
adc
jnp
shll
push
adc
loopne
mov
xor
lahf
cmp
pop
xchg
inc
inc
fsts
sarl
nop
xchg
pop
cld
jns
or
mov
push
adc
jp
sbb
out
lahf
mov
lods
adc
push
adc
sbb
mov
mov
pop
mov
mov
int
pop
push
push
ret
lock
rcrl
mov
lock
adc
lods
xor
jns
dec
nop
sub
fiadds
mov
sub
test
sub
mov
push
cmp
cs
mov
dec
in
aad
ss
push
jae
mov
adc
lea
pop
mov
add
adc
gs
or
sbb
add
fdivrs
popf
lcall
sbb
mov
xchg
push
ret
pop
mov
inc
add
mov
mov
add
call
ret
push
mov
xchg
lcall
inc
jb
cmp
dec
mov
cmpsl
push
dec
mov
cltd
jle
imul
rcll
mov
mov
inc
inc
mov
and
dec
mov
mov
xlat
sbb
jns
cwtl
adc
adc
cmp
insl
insl
sbb
or
inc
insl
push
out
xchg
dec
jmp
sbb
jns
dec
scas
jbe
and
xchg
dec
cmp
and
dec
lods
sub
lret
iret
shll
test
in
sarl
loopne
xchg
jb
fnstenv
pop
xor
mov
ljmp
xchg
es
or
jmp
xchg
mov
jecxz
pop
lea
dec
test
testb
gs
bound
imul
ds
int
inc
sbb
ss
dec
push
mov
adc
mov
daa
pop
lds
cmp
testb
int3
mov
aam
jmp
nop
adc
adc
and
call
imul
add
scas
test
lods
add
inc
clc
xchg
mov
adc
mov
mov
pusha
push
loopne
pop
adc
dec
lcall
sbb
jle
mov
mov
mov
lods
adc
adc
adc
cs
xor
and
adc
sbb
rcr
or
sbb
fdivl
cmp
popa
inc
insl
xchg
dec
mov
sbb
sub
and
lret
sahf
lods
dec
sbb
aas
sbb
adc
vmwrite
mov
mov
mov
mulb
pop
call
pause
lods
lcall
addr16
xlat
leave
sbb
bound
xor
mov
xchg
fcmovnb
push
int
nop
sbb
ret
shl
xchg
sbb
push
sahf
xor
rcrl
out
aas
or
addr16
and
js
stc
test
xchg
mov
scas
mov
mov
in
mov
int
imul
adc
inc
repnz
xor
lock
out
or
es
aad
jne
stc
int
xor
mov
daa
xor
mov
push
movsb
adc
int
xchg
mov
and
out
mov
ret
or
dec
rol
dec
xchg
es
mov
cs
aas
or
mov
add
pop
mov
lcall
ds
loope
add
and
punpckhwd
mov
mov
mov
dec
xchg
outsb
pop
movsb
dec
cmp
dec
sahf
xchg
or
sbb
push
mov
dec
xchg
push
pop
ret
xchg
sub
dec
cmp
outsl
or
int3
lcall
faddl
std
arpl
ss
andb
ljmp
push
mul
or
mov
and
out
lock
call
stos
dec
xchg
and
sub
dec
add
jmp
push
inc
js
cmpsl
inc
or
xchg
es
pop
xor
fistpll
inc
push
hlt
jmp
aad
adc
mov
sti
fdivs
add
dec
xor
cmp
imul
test
mov
sahf
xlat
add
fs
add
daa
or
stos
mov
lock
pusha
or
or
mov
cs
xor
testb
cmp
inc
stos
mov
fwait
out
dec
adc
stos
movsl
fdivrl
sti
sti
mov
std
mov
shr
mov
stos
xlat
out
orl
js
int3
xchg
in
in
push
push
loop
ljmp
inc
cltd
mov
push
add
cwtl
pop
cmp
test
fnsave
hlt
stos
js
pusha
dec
pop
imul
fldl
mov
insl
insl
add
incb
sahf
xor
pop
dec
pusha
inc
pop
xor
adc
pop
jbe
pop
and
sbb
jo
xor
out
sti
push
xchg
xlat
dec
stos
xchg
lret
cmc
mov
and
sub
enter
xor
js
pusha
jnp
xor
xchg
add
cld
fstpt
std
out
test
mov
and
adc
test
jmp
test
sarl
out
pop
sbb
sbb
in
xor
std
fbld
inc
fldl
data16
mov
out
xor
rcrl
cmp
sarl
int3
test
fcoml
cmp
sub
mov
in
stc
shlb
push
call
pop
push
lret
dec
in
add
push
xchg
sbb
jmp
dec
adc
loop
fcomps
movsb
leave
adc
cmp
rol
sti
and
push
dec
movsl
les
stc
pushf
sub
cmp
jmp
int
jne
fidivl
daa
adc
gs
es
lcallw
movsb
loop
xor
and
xchg
and
popl
push
fildll
mov
ret
mov
sbb
leave
imul
and
jo
cmp
daa
mov
dec
push
sti
out
jmp
push
add
xor
lret
pop
movsb
dec
in
mov
xchg
test
xlat
fsubs
cmp
loop
in
dec
xchg
push
sub
das
dec
sahf
dec
sbb
out
int
inc
paddsw
or
negb
out
sbb
dec
adc
icebp
or
sahf
cmp
cmp
mov
adc
test
dec
faddp
xchg
sub
movsb
add
lds
cmc
mul
int
dec
pop
shlb
or
mov
pop
movsb
dec
xchg
cmp
pop
jno
out
scas
inc
pop
stc
mov
bnd
cmp
push
dec
jns
dec
xchg
scas
movsb
out
js
cmp
aaa
fiaddl
inc
pop
popa
mov
dec
xor
jno
dec
xchg
xor
popf
daa
dec
ljmp
ds
fidivrl
mov
shll
or
and
and
repnz
ret
or
jnp
dec
xchg
das
and
xor
dec
jne
dec
xchg
push
cmp
sbb
out
jmp
push
repz
xchg
sub
insl
fisttpl
orw
adc
mov
mov
dec
xchg
fstl
jno
pop
sub
call
xchg
lods
xlat
ret
inc
icebp
outsl
mov
dec
repnz
dec
xchg
push
sub
sub
popf
dec
sbb
into
cwtl
inc
sbb
mov
mov
mov
dec
cmp
add
sub
dec
sbb
jmp
xor
or
sbb
xor
pop
sbb
shll
sub
out
repz
jmp
cli
mov
ss
cmp
inc
mov
cmpsl
xor
and
add
cmp
roll
pop
in
imul
mov
lods
sbb
js
movsl
loop
adc
adc
daa
mov
das
mov
jecxz
adc
ja
add
fwait
mov
or
lahf
xor
xchg
and
into
leave
cmp
jne
les
push
mov
nop
aad
adc
adc
xchg
scas
mov
push
inc
mov
dec
sbb
nop
das
inc
popf
pop
ja
jae
inc
mov
and
or
ficoms
xchg
sbb
mov
adc
adc
adc
test
in
addr16
cwtl
dec
push
fcmovnu
inc
in
fwait
cltd
add
je
test
xchg
insb
cmp
mov
dec
outsb
imul
xor
jle
shrb
call
mov
into
xlat
add
sbb
fdivs
je
fwait
xor
ficoml
sbb
push
and
ljmp
lahf
test
dec
pop
mov
xchg
frstor
pop
pushf
imul
jle
pop
and
jecxz
loop
mov
icebp
in
jecxz
sbb
cs
icebp
nop
cmpl
fisttpll
test
mov
lods
xor
aas
fs
icebp
shlb
inc
adcl
pop
cld
scas
xchg
aaa
or
jl
adc
repnz
mov
leave
adc
insb
into
pop
jnp
dec
or
andl
push
mov
pop
sub
lods
lods
mov
out
mov
fidivl
or
inc
or
imul
inc
xchg
and
call
mov
mov
adcb
mov
in
int
or
push
pop
movsb
dec
in
push
fwait
daa
dec
adc
or
adc
mov
stos
mov
inc
pop
pop
pushf
sub
sub
sub
xchg
push
sub
nop
scas
in
insl
fcmovb
or
jnp
insl
lret
loopne
cmp
daa
cmp
sub
in
je
shlb
xor
call
and
or
je
cmp
loopne
in
inc
pop
shlb
repz
pop
in
sub
xor
sub
xchg
mov
out
xor
out
mov
xchg
jl
pop
adc
push
jno
dec
xchg
push
xor
das
dec
sahf
clc
inc
jns
mov
mov
in
xlat
cmp
xor
inc
outsb
dec
fcoms
inc
xchg
daa
dec
je
adc
adc
je
out
pop
aas
cltd
femms
nop
xor
imul
cmp
das
dec
sahf
xchg
jns
rol
fwait
ss
jl
mov
xor
cmp
adc
adc
jae
inc
dec
sti
out
sbb
pop
test
pusha
shlb
int
mov
pop
sub
insb
data16
ret
push
in
ss
stos
mov
rorb
sbb
xchg
mov
sub
xchg
push
xor
dec
mov
mov
shr
push
out
and
dec
in
jp
daa
dec
pop
pop
push
sti
out
adc
sbb
push
jp
mov
and
cmp
push
inc
xchg
mov
mov
aaa
insb
push
fldenv
cmp
cmp
push
dec
push
and
lcall
lock
pop
inc
sbb
mov
xchg
bndldx
mov
cs
mov
in
mov
push
fists
mov
xchg
xlat
cmpsb
push
jno
push
xor
pop
stos
loopne
mov
arpl
xchg
das
jle
jmp
repnz
ds
or
cmp
dec
leave
and
xor
das
int
fcomps
sub
mov
cmp
notb
or
stos
clc
push
movsb
sbb
jnp
test
inc
inc
aaa
xchg
jmp
lahf
inc
ret
or
dec
lahf
ss
shll
das
push
mov
xor
aaa
data16
mov
cmp
lods
stos
pop
xchg
jns
dec
jmp
pop
lds
std
mov
test
fistl
je
jl
xchg
mov
aaa
popa
fmull
and
xor
mov
mov
insl
das
lret
jp
cmpsw
jae
nop
shlb
icebp
mov
mov
xor
movsl
mov
cmpsl
movsl
cmp
xchg
cmp
push
out
repnz
jae
inc
jns
push
pop
xchg
dec
jmp
inc
adc
dec
loope
pop
lds
push
lods
mov
ret
cmp
mov
xlat
nop
adc
adc
nop
ret
je
push
or
sub
mov
inc
or
mov
adc
icebp
xor
cmp
in
and
or
jmp
icebp
sub
mov
xchg
mull
loop
jbe
jb
cld
cmpsl
jne
shrb
xorl
out
xor
sub
add
mov
cmp
mov
xor
clc
xchg
mov
dec
into
jge
mov
add
adc
je
insb
rorb
inc
mov
movsl
or
loopne
jbe
xchg
ljmp
xor
or
je
push
mov
jne
repnz
inc
push
sub
stos
sub
inc
outsb
dec
sbb
dec
cs
fistps
ret
jb
jmp
mov
dec
mov
cmp
pop
jno
out
fcmove
xchg
scas
movb
inc
sub
mov
pop
lods
dec
xchg
pop
push
insl
sbb
dec
push
sbb
add
inc
nop
rcr
je
or
inc
pop
std
pushf
sub
xor
sbb
dec
sti
out
sbb
stos
mov
enter
sbb
sub
inc
xchg
and
loope
cmp
cmp
pop
out
mov
insl
fidivl
or
inc
pop
stc
pushf
sub
sub
mov
out
inc
sbb
loop
xchg
push
and
das
dec
sahf
cmp
mov
xchg
jbe
rorb
adc
adc
pop
mov
dec
sbb
sahf
cmp
adcl
inc
xchg
and
xchg
out
sub
addr16
cmp
icebp
clc
mov
insl
test
sbb
mov
leave
lcall
test
xchg
daa
mov
and
out
bound
std
mov
lds
xor
subb
xor
xor
insl
cmp
inc
jp
mov
fcoml
imul
xchg
sub
cmp
cmp
inc
inc
sahf
cmp
push
in
aas
inc
xchg
and
xor
add
xor
mov
dec
cmp
cmp
das
dec
sahf
xchg
or
ss
mov
jge
push
add
xchg
pop
and
int
dec
sahf
dec
inc
cmpl
mov
repz
adc
ds
mov
test
aaa
adc
ret
or
and
adc
and
adc
add
mov
add
inc
and
adc
add
clc
and
adc
and
adc
daa
add
cmp
add
lcall
dec
cwtl
pushf
xchg
addr16
gs
insl
fs
addr16
sbb
push
push
sub
mov
mov
add
rolb
loopne
movsb
repz
cmpsb
inc
std
xchg
sbb
push
movsb
and
push
adc
xor
inc
negl
daa
inc
cwtl
and
mov
jmp
in
mov
decb
nop
shrb
sub
ret
and
pop
cmp
adc
in
add
fldenv
adc
imul
pop
pop
fwait
hlt
hlt
jne
add
inc
imul
push
adc
add
push
adc
push
lret
dec
sbb
mov
mov
xchg
ret
adc
adc
mov
test
scas
mov
pop
popa
cwtl
pop
dec
sbb
adc
inc
rclb
stos
dec
dec
or
insl
cli
xor
push
xchg
mov
insb
xchg
mov
jbe
push
jl
mov
iret
or
cmp
add
cmp
paddsb
add
fdiv
loop
or
xor
in
sbb
int3
stc
jl
sbb
jne
mov
xchg
andl
popa
mulps
mov
pop
ss
add
cmp
inc
mov
pusha
adc
fwait
scas
jge
xor
clc
inc
in
push
call
sub
lret
addr16
sbbl
popa
out
repnz
xchg
repz
xchg
arpl
mov
adc
pop
test
cli
movsb
jge
insl
inc
popa
mov
push
insl
sbb
sub
mov
push
jg
fdivl
dec
cmp
shll
dec
sub
test
add
rolb
into
lret
sti
fwait
mov
repnz
stos
lds
daa
sub
mov
push
adc
dec
jbe
dec
push
and
push
adc
pusha
or
mov
xchg
rorb
jmp
pop
push
adc
dec
in
mov
call
ret
push
mov
je
push
adc
jmp
sbb
adc
aad
pop
pop
adc
sbb
adc
xor
lea
lods
fcmovnb
jb
repnz
fdivrl
and
add
insl
ds
fld
fidivrl
mov
push
inc
imul
dec
mov
pop
ss
xlat
mov
pushf
xchg
gs
add
and
inc
xor
mov
jmp
push
xchg
ret
mov
xlat
or
leave
insl
push
outsl
fwait
shrb
cwtl
jne
lods
sbb
adc
and
popa
xchg
or
leave
xchg
rorl
mov
pop
enter
jno
xor
es
call
push
inc
cmpsb
lds
adc
push
adc
int
mov
adc
fimull
sarb
scas
popf
outsl
adc
incb
dec
lahf
leave
inc
xchg
aas
iret
movsb
dec
xchg
pop
fimull
mov
out
out
and
push
push
mov
aad
push
fisubrl
inc
cmp
cmc
cltd
xchg
or
out
mov
mov
xchg
xor
sbb
lods
test
xchg
inc
xlat
sub
jb
xchg
popf
adc
fldt
pop
dec
sub
sub
dec
int3
in
mov
xchg
loop
sbb
es
xchg
imul
add
add
sbb
adc
insl
inc
push
sub
cmp
cmp
fdivrp
movsb
out
sbb
or
cltd
insl
je
push
sub
or
adc
in
push
dec
sbb
mov
rolb
fs
cmp
mov
pop
sti
out
pushf
bound
xor
mov
inc
jmp
sbb
mov
insb
jo
jle
leavew
jmp
mov
inc
dec
nop
and
jmp
addr16
cmp
imul
adc
ret
pop
aad
xchg
xor
mov
dec
pop
add
cmp
pop
push
adc
sbb
adc
cmp
mov
sbb
fwait
es
and
push
pop
pop
adc
dec
pop
pop
adc
dec
addb
add
aad
inc
ljmp
cwtl
cmp
sbb
fcmovb
sub
adc
cmp
cwtl
stos
jo
pop
adc
add
lret
jecxz
call
or
xchg
xor
lcall
adc
add
xor
lret
fwait
pop
enter
pusha
adc
adc
inc
fsubl
mov
lret
jno,pn
mov
or
aaa
pop
mov
mov
scas
inc
cwtl
movsl
jbe
adc
adc
pop
push
push
adc
movsl
push
popf
or
mov
or
push
push
adc
dec
sub
iret
mov
movsb
adc
adc
sbb
push
adc
and
adc
arpl
pop
jmp
sub
movswl
mov
inc
repnz
or
int3
std
mov
or
out
push
adc
inc
pop
adc
pop
lahf
lret
dec
in
cmp
cmpsl
cltd
stos
jns
out
loop
push
mov
fldt
xor
loope
jne
add
scas
xor
cs
in
imul
mov
sbb
shl
mov
sti
das
das
mov
add
inc
sbb
xor
sbb
pop
adc
mov
cmpb
add
sarb
lea
idivl
pop
pop
adc
push
xlat
lea
and
pop
inc
mov
cmpsb
or
xchg
inc
jp
popf
test
cld
mov
imull
push
jae
sbb
or
cmpsb
sub
adc
in
pop
mov
popa
inc
adc
pop
pop
adc
sahf
cmp
das
lods
pop
mov
xor
adc
mov
pushf
fsubs
scas
inc
xor
pop
adc
ljmp
cmp
xchg
xlat
xor
jg
sbb
insl
fiaddl
pop
mov
lcall
xchg
and
xchg
in
call
or
adc
adc
mov
repz
xchg
mov
xlat
lods
pop
dec
js
inc
pop
adc
in
js
out
loope
insb
fidivl
out
adc
adc
cs
fdivs
mov
in
jecxz
sarl
sbb
xchg
jne,pt
mov
push
jb
aam
gs
adcl
push
or
inc
jbe
xchg
sub
or
test
xchg
daa
mov
cmp
and
stc
sbb
pop
jno
dec
xchg
mov
xchg
int
adc
adc
jp
mov
pop
pop
xchg
sub
out
scas
mov
lea
fsubrl
mov
push
adc
xchg
sub
sub
cmp
ret
xchg
scas
test
insl
fcmovb
adc
mov
inc
pmullw
pop
sbb
sahf
xchg
sahf
aaa
fidivrl
mov
mov
insl
dec
jp
xchg
sub
ret
mov
xchg
mov
aaa
insl
fcmovb
or
mov
inc
psrlw
or
push
adc
repz
into
jae
mov
lds
imul
shl
gs
lock
jns
pop
pop
adc
gs
sbb
aaa
add
out
push
gs
movsb
mov
insb
fidivl
cmp
and
push
dec
sbb
cli
insb
mov
movsb
mov
fidivrs
mov
enter
iret
cwtl
xor
jge
xor
adc
xor
scas
pop
mull
cmp
out
das
xchg
push
or
mov
push
insb
mov
call
jbe
fwait
jmp
gs
and
mov
dec
or
mov
mov
sti
leave
test
xchg
imul
shlb
repnz
mov
fimull
push
pushf
lahf
lcall
adc
iret
shll
inc
jmp
ret
not
mov
mov
lret
xchg
gs
or
sbb
adc
leave
sti
xlat
fdivl
lahf
lahf
cltd
cmpsl
push
adc
dec
cs
into
jns
sahf
mov
iret
loop
subb
mov
and
stc
inc
lahf
scas
test
scas
and
lock
adc
sti
xor
bnd
pop
add
add
test
and
push
jbe
pop
cmp
sub
and
inc
pop
popa
sbb
scas
dec
imul
jmp
ljmp
mov
xor
arpl
adc
adc
int
dec
adc
xchg
daa
inc
xlat
pop
dec
pop
or
jno
mov
xlat
pop
dec
arpl
xchg
ror
leave
push
mov
lret
shlb
cmc
mov
lret
xlat
outsl
sahf
and
insb
fcmovbe
add
mov
repnz
ret
adc
jle
push
data16
popa
inc
aas
inc
mov
sbb
aam
adc
xor
xchg
icebp
and
mov
jl
add
jmp
pop
subb
adc
inc
test
cmc
repnz
sub
insl
fnsave
push
sbb
imul
aaa
add
add
jns
dec
add
scas
mov
inc
xchg
jmp
fninit
jo
add
stos
add
sbb
adc
fmul
mov
ret
jg
lds
bound
jno
and
mov
mov
mov
jecxz
mov
fdivrs
adc
or
cwtl
insl
push
mov
cld
xor
xchg
inc
sarb
popf
pop
xor
in
out
mov
xchg
das
or
or
inc
shlb
jecxz
adc
loopne
push
adc
les
push
adc
push
cmp
push
imulb
repz
xchg
xor
ss
loop
test
fsub
adc
adc
pop
out
pop
out
push
mov
xchg
dec
fwait
ss
scas
push
jae
sub
mov
inc
cltd
xchg
xchg
push
xor
or
xor
add
dec
sbb
fstpl
mov
ficoms
loopne
scas
xchg
fs
inc
adc
mov
mov
rorb
mov
mov
imul
mov
fcomps
cmp
inc
loopne
sbb
xchg
popf
out
aad
adc
loop
sbb
jnp
call
inc
push
push
out
cmpsb
jbe
push
mov
xchg
movsl
mov
dec
xor
and
pop
in
dec
test
gs
filds
test
pop
enter
lds
lahf
sub
inc
xchg
push
dec
cmp
adc
or
xor
push
mov
lds
addr16
jmp
cmp
pop
jo
xchg
adc
test
dec
aaa
cmp
insl
subb
mov
push
mov
ret
ds
aad
adc
mov
mov
repnz
sahf
int
pushf
in
push
or
ret
mov
ret
inc
pop
jne
mov
pop
mov
adc
cmp
jecxz
ss
movsb
popf
mov
test
fstps
fs
push
pop
loope
add
pop
mov
dec
xchg
pop
inc
pop
les
aam
or
push
leave
push
mov
push
cmp
pop
pop
add
jmp
dec
xor
imul
jno
pop
sub
or
loop
mov
decl
sub
fcomps
mov
sbb
adc
sbbb
pop
adc
in
aaa
sbb
push
shll
bnd
movsb
adc
inc
add
mul
ret
push
aam
mov
sbb
mov
pusha
mov
mov
roll
daa
sub
pushf
cmp
nop
roll
lods
push
jg
xchg
and
xlat
sbb
push
inc
outsl
addr16
aad
lods
enter
addr16
pop
xor
jp
pop
data16
repnz
movsl
test
mov
push
dec
jg
les
dec
cmp
or
ds
jns
stos
xor
lods
sbb
adc
xchg
lcall
mov
insl
mov
inc
fcmovne
in
pop
popa
cli
popf
xor
filds
insl
adc
es
jnp
add
sub
out
inc
xchg
mov
adc
push
adc
push
cmp
int3
cmc
push
ljmp
pop
adc
mov
jne
xchg
mov
ds
push
insl
or
jnp
jge
xor
add
loop
inc
cmpsl
dec
scas
push
dec
lock
dec
jns
mov
or
cmp
ret
mov
xlat
cwtl
imul
adcl
cmp
sarb
dec
stos
sub
ret
insb
mov
fbld
lret
push
jno
clc
shlb
and
xchg
add
es
jge
sbb
inc
fs
or
jo
or
sub
push
xor
push
adcb
or
pop
push
xchg
dec
lret
push
xor
jae
dec
sar
fisubrl
lret
fs
jo
repz
inc
push
push
mov
nop
jae
xchg
sub
cmp
mov
xor
xor
cli
xor
push
adc
int
lret
adc
adc
sbb
adc
adc
jno
adc
adc
push
jne
cmpsb
insl
and
push
stos
xchg
or
loopne
dec
cmp
push
push
adc
and
rorb
adc
adc
pop
flds
dec
sbb
ficomps
add
daa
inc
adc
adc
push
and
dec
jbe
imul
cli
jo
pop
adc
popf
dec
in
inc
out
repz
xor
pop
dec
mov
ror
mov
jo
push
adc
push
dec
pop
sbb
cmp
add
and
in
or
xchg
jo
loope
dec
jnp
or
dec
pop
adc
sub
gs
inc
out
popa
xor
sub
imul
movsb
sbb
adc
sub
sbb
mov
cli
aaa
decb
je
repz
test
stos
cwtl
nop
popa
jae
push
xchg
jg
and
mov
xchg
out
jmp
xchg
pop
or
xchg
test
les
xchg
jae
les
out
adc
mov
lcall
js
adc
adc
xchg
clc
jne
insb
adc
pop
xor
sub
aam
push
adc
loopne
dec
cmp
mov
xchg
dec
mov
adc
fstpt
gs
xor
in
repz
mov
jl
lds
repz
out
loope
out
enter
leave
pop
js
frstor
cs
rorb
dec
ret
aaa
aas
stc
fwait
cmpsl
mov
repz
adc
adc
sbb
jmp
int3
dec
mov
dec
xchg
sub
ret
inc
jo
pop
adc
mov
push
mov
inc
jns
loope
xor
loopne
mov
mov
and
mov
cmp
sub
xor
adc
dec
addr16
jne
mov
data16
ds
and
mov
push
dec
inc
lock
adc
pop
enter
mov
mov
dec
xchg
inc
popa
dec
es
jno
in
xor
sti
cld
repz
lahf
add
mov
add
repz
std
and
pop
jo
pop
adc
sbb
push
scas
test
fisubs
daa
add
test
iret
push
xor
push
push
pop
fs
insb
jnp
and
inc
fs
pop
jae
pop
mov
and
add
stos
inc
push
in
adc
cmp
shll
icebp
fisubrs
cmp
test
roll
add
xor
jge
adc
shlb
sbb
ljmp
mov
or
dec
inc
push
mov
ja
leave
mov
jecxz
cmc
insb
mov
mov
and
jno
orl
xorl
or
addr16
subl
loop
ret
xor
fldenv
dec
pop
adc
sahf
mov
out
lret
insb
adc
pop
adc
stc
js
mov
lahf
sbb
pop
adc
cld
cwtl
bound
ret
inc
sub
xchg
pop
sbb
dec
lods
sahf
sbb
fisttps
or
xlat
mov
sti
jl
add
xlat
mov
rolb
jg
test
dec
push
mov
jge
or
div
ret
add
inc
jo
push
dec
mov
or
es
movsb
or
add
repz
inc
int3
xor
in
aam
dec
pop
ss
fstpt
data16
imul
popf
lahf
xor
xlat
push
mov
adc
fwait
ret
jb
in
mov
out
aaa
lcall
cmp
sbb
fwait
lret
adc
adc
mov
push
fsub
or
out
or
xor
push
adc
xorl
cmp
sahf
mov
fmuls
sbb
fs
pop
and
mov
mov
cmp
inc
sub
mov
adc
push
stos
jle
xchg
sbb
adc
mov
mov
mov
cli
sbb
int
push
cld
dec
xchg
das
aad
aam
push
adc
data16
addb
jns
xchg
shll
insl
fidivrl
adc
imul
mov
xchg
xor
mov
xchg
pop
xchg
mov
aaa
insl
ficompl
jg
sarb
fstl
in
mov
xchg
pop
jno
sbb
adc
dec
imul
adc
adc
xor
dec
xchg
mov
gs
add
repnz
cltd
insl
nop
arpl
inc
scas
jbe
ret
push
lods
or
call
loopne
icebp
or
bound
push
cld
bound
stos
xor
int
adc
adc
insl
jne
rclb
loop
ret
insb
cmp
repz
xchg
daa
dec
mov
or
cld
aam
push
adc
cs
sahf
pop
mov
cmp
fistpll
jmp
pop
xchg
adc
adc
add
int
data16
mov
dec
xchg
mov
int3
pop
sahf
cmp
dec
mov
into
mov
rorb
add
dec
pop
xchg
and
or
xor
and
int
or
leavew
jge
adc
adc
shll
xor
xor
icebp
into
cwtl
xor
cmp
dec
sbb
mov
call
sbbb
jnp
leave
mov
inc
cltd
mov
xchg
pop
adc
pop
pop
cmpsb
inc
popf
mov
ds
lahf
adc
mov
movsl
lods
inc
mov
mov
leave
mov
repnz
mov
cwtd
push
lods
sbb
aas
aam
cmp
fsts
xchg
ja
mov
iret
mov
or
outsl
inc
cld
sub
mov
inc
pop
jmp
mov
fdivp
fnstcw
dec
xor
pop
fadd
adc
adc
add
shlb
ss
sti
repnz
xchg
jae
cli
test
loopne
push
adc
dec
jecxz
sahf
xor
loop
add
fcoml
sbb
sarl
mov
arpl
cmp
cwtl
push
sahf
mov
push
cmp
js
rcll
aam
sbb
push
adc
inc
dec
movsl
insl
out
into
xchg
jne
add
jns
repz
loop
arpl
jmp
ret
and
and
loop
add
in
xchg
inc
es
or
cmp
adc
mov
cltd
test
cmp
jns
shll
arpl
fcoml
push
adc
xchg
push
xor
cmp
push
xchg
xor
sbb
ficoml
aam
jb
dec
sbb
test
pop
mov
rcrb
imul
mov
cmp
mov
inc
jae,pt
cmpb
or
shll
mov
sub
push
cmpsb
inc
test
push
adc
dec
pop
push
sub
push
adc
in
shlb
mov
jno
add
bound
and
hlt
or
cs
jmp
fnsave
pop
adc
sar
push
xor
add
mov
in
fcmovu
shr
into
aam
in
dec
ret
jne
pop
push
mov
mov
xchg
lods
mov
sbb
mov
shrb
mov
jbe
bound
add
sbb
adc
mov
pop
lcall
fcmovb
adc
icebp
inc
xchg
jle
adc
adc
xchg
dec
test
gs
dec
iret
dec
mov
enter
jmp
sti
mov
or
or
cmp
xchg
ja
cltd
jp
rclb
lods
xchg
xchg
lock
pop
call
and
cmp
lret
leave
adc
pop
adc
sub
fucomip
cmp
gs
insl
push
repz
outsb
movsl
xorb
dec
push
xor
mov
ffreep
push
ret
es
bound
dec
push
fsubr
adc
mov
lock
shll
sbb
mov
xlat
fs
enter
lods
movsl
mov
xchg
jmp
jb
lret
and
mov
es
pusha
loopne
and
mov
fdivl
jns
sbb
xchg
pop
imul
pop
in
mov
xor
aas
xor
repz
nop
xor
cwtl
xchg
js
sbb
push
aaa
xor
jecxz
lret
xor
andb
cmpsb
out
or
lea
leave
clc
push
adc
call
out
adc
pop
movsl
mov
repnz
dec
rorb
inc
outsl
cmpsl
pushf
sbb
enter
jmp
mov
jle
adc
adc
sub
mov
js
pop
shlb
sbb
push
adc
or
jo
mov
lock
adc
jae
or
mov
pop
mov
out
shl
push
movsl
mov
push
imul
jbe
cwtl
shlb
sbb
out
cltd
ss
xchg
fcoml
push
adc
lock
adc
sbb
lahf
loope
movsb
dec
nop
mov
push
mov
and
outsb
in
ja
das
cmpl
push
pop
push
ja
jl
mov
sub
int3
clc
adc
adc
out
sbb
pop
adc
hlt
adc
adc
dec
rcr
ret
mov
cmc
outsl
xchg
xchg
sbb
sub
push
mov
in
stc
shl
popa
push
popa
out
ja
loopne
push
adc
ja
pop
paddb
out
xor
repz
push
cld
das
xor
adc
adc
sarb
push
adc
je
sbb
ss
push
jae
into
int3
sbb
adc
test
repnz
xchg
lret
rcrb
push
adc
das
pop
xchg
loopne
out
dec
mov
andb
pop
addr16
ds
xcrypt-cbc
cmpsl
adc
out
mov
daa
inc
mov
mov
push
inc
pop
mov
cwtl
add
int3
xor
ja
mov
cmc
push
push
pop
add
adc
int
dec
aam
ljmp
outsb
cli
sbb
xor
enter
mov
icebp
filds
push
adc
mov
jge
clc
adc
out
mov
out
xor
xchg
adc
push
xchg
dec
mov
xor
es
lea
adc
shl
fsubl
mov
lods
mov
xor
pop
inc
sub
add
push
dec
loopne
mov
push
inc
xlat
mov
inc
or
lds
ret
sbb
lea
addr16
or
dec
xor
scas
cmp
push
lahf
sub
test
mov
sbb
add
ljmp
push
ds
leave
cltd
dec
iret
xchg
dec
stc
stc
xchg
dec
mov
cltd
loopne
dec
insl
cmp
clc
mov
push
cs
xchg
scas
mov
mov
rep
cmp
lahf
jb
movsb
jns
insl
and
dec
pop
lods
movsb
ret
jno
ret
je
lds
repz
inc
push
cmp
stc
jno
and
lcall
jge
imull
mov
shrl
xchg
loop
popf
mov
cmp
icebp
insl
int
jl
aad
pusha
cli
dec
rol
push
mov
inc
lock
leave
sbb
xchg
movsb
pop
ljmp
sbb
sub
mov
mov
ss
adcb
mov
xchg
mov
mov
rcrb
dec
xchg
xchg
out
xchg
movsl
adc
pop
xor
aad
pop
out
fwait
sbb
jo
adc
dec
pop
sub
mov
sahf
mov
jbe
sarl
and
pop
sbb
rcrl
je
sbb
xor
mov
cmp
and
mov
mov
mov
pop
push
aas
aad
pop
jp
inc
fildl
loop
sbb
clc
cmp
cmp
and
dec
pop
push
jmp
xchg
or
pop
outsl
push
out
mov
xchg
repnz
nop
and
or
xor
daa
sub
sahf
or
aas
insb
xorb
xchg
gs
les
mov
shlb
in
int3
xor
movsb
test
ljmp
loope
popf
repz
scas
add
jp
es
mov
aas
das
fbstp
cmp
fs
mov
pop
push
cmp
mov
mov
daa
sub
nop
mov
xchg
adcl
in
mov
pop
xchg
cli
xchg
leave
adc
lods
shll
mov
les
and
fldl
fcomi
in
popf
inc
lahf
adc
sbb
xlat
ret
jle
subb
inc
insl
dec
inc
adc
jns
cmp
cmc
xchg
data16
adc
lods
mov
lea
ret
pusha
pushf
and
dec
imul
and
shrb
faddl
push
cmpsb
mov
add
aas
pop
pop
cmpsl
dec
push
or
jne
nop
mov
mov
std
cmp
or
das
jbe
mov
clc
enter
mov
add
sti
jmp
cmpsl
sbb
sahf
jbe
xchg
sti
cli
mov
xor
xchg
xchg
and
push
cs
pop
addr16
cmp
and
subw
cmpsl
sbb
xor
jge
insl
adc
sub
sbb
lret
inc
leave
pop
add
popa
cli
sbb
incl
ret
mov
out
mov
es
shlb
repz
cwtl
or
pop
sahf
iret
sub
lcall
xchg
jnp
test
sub
dec
test
enter
cmp
cmp
jnp
xchg
ret
xchg
inc
push
aaa
call
insl
ljmp
cmp
xor
pop
adc
sbb
sahf
xchg
std
xchg
jbe
arpl
cs
lock
inc
popf
jle
imul
mov
inc
cwtl
pop
and
pop
and
pop
mov
insl
inc
dec
jo
add
cmpb
negl
push
lea
imull
in
push
mov
scas
cld
mov
lock
sahf
mov
sti
addr16
rsqrtps
jp
out
jb
mov
sub
push
mov
sub
or
stc
jae
aaa
and
sbb
fstpt
push
hlt
push
popa
movsl
mov
sti
rolb
fldl
adc
mov
leave
in
pop
mov
jbe
cmp
out
cmp
daa
js
out
mov
xor
and
lcall
addr16
jl
out
push
movl
xor
mov
jbe
xchg
cmpsl
mov
sti
gs
rcll
jns
xchg
ja
add
dec
shll
insb
jno
fisubrs
in
mov
dec
inc
push
fs
out
add
pop
dec
aaa
cmp
sbb
mov
test
daa
jb
ret
rolb
jp
dec
xchg
das
test
pop
sti
out
popf
arpl
xor
jo
sbb
ss
xchg
loop
lahf
ror
sbb
adc
jo
lret
and
dec
out
pop
js
mov
xor
adc
int
push
sub
repnz
loopne
sbb
pushf
mov
adc
in
xor
sbb
hlt
ljmp
movsb
cmp
daa
dec
xchg
xchg
lahf
jp
ret
pop
jecxz
xor
ds
inc
or
popf
mov
sbb
and
shll
ret
push
fwait
out
fmuls
aas
call
jno
je
pusha
sub
cmpsb
mov
cli
or
pop
loopne
cmp
pop
jo
lds
repz
ficompl
xchg
and
jl
aad
adc
inc
jne
and
xchg
scas
mov
jns,pt
xchg
lret
sahf
mov
je
lods
mov
xlat
daa
pop
dec
out
mov
jmp
mov
fisubrs
rcll
push
cwtl
cmpsl
insb
and
dec
js
clc
roll
ds
cmp
int3
mov
or
dec
ret
sarb
fs
push
mov
les
sub
and
mov
push
jg
mov
addr16
sub
jl
call
and
cwtl
pop
int3
jae
int3
jae
in
xchg
pop
push
mov
xor
mov
dec
add
inc
jne
jno
aad
cwtl
adc
add
mov
cmpsb
inc
pop
dec
adc
cltd
mov
mov
leave
pop
call
outsb
int3
jbe
pop
push
jmp
pop
sbb
cwtl
mov
xlat
addl
repz
scas
shlb
loope
loop
fcmovnbe
or
fdiv
sbb
mov
push
xor
jno
xchg
jo
rol
sub
lcall
mov
sarl
mov
or
xchg
fsubl
enter
lods
ss
fisubs
movsl
mov
pop
lods
popa
or
jns
and
xchg
add
jp
adcb
jae
xchg
or
mov
mov
inc
add
adc
cwtl
outsb
inc
xchg
or
adc
fcomps
push
adc
xchg
mov
add
aas
jne
sahf
les
lds
imul
adc
jnp
dec
cmpsl
mov
enter
leave
sbb
arpl
xchg
into
jns
or
ret
and
dec
xlat
outsb
xchg
sub
push
xor
sub
aaa
pop
jne
jne
pop
lods
in
sbb
in
les
jne
repz
push
mov
xchg
loope
lcall
jp
mov
dec
xor
add
mov
addb
xor
add
mov
mov
cmpsb
mov
cmp
dec
and
mulb
arpl
es
repz
sbb
sub
jmp
nop
ja
lcall
sbb
mov
fcmovne
push
aaa
or
icebp
sbb
pop
xchg
sub
xor
or
adc
mov
je
fninit
out
loope
cmpsb
jp
lcall
jmp
sti
mov
fstl
loopne
sub
pop
push
and
inc
push
fwait
jns
in
xchg
fsubrl
lcall
sub
mov
and
adc
add
enter
cwtl
cltd
push
aaa
jle
insl
add
outsl
push
push
movsb
ret
dec
sub
sub
add
arpl
jle
rcl
add
sti
out
xchg
mov
repnz
fistpll
fs
mov
nop
jp
inc
lahf
je
pop
adc
hlt
jne
jmp
pop
pop
adc
dec
je
fstpt
adc
rcrl
jo
pop
adc
je
pop
adc
mov
pop
adc
mov
popf
mov
rcl
or
dec
jp
lds
add
ret
outsb
push
loopne
push
ret
testb
jnp
bnd
and
jge
call
fcomps
insb
xor
rorl
dec
sbb
popa
outsl
fwait
jl
loopne
pushl
ljmp
sbb
or
xor
das
or
inc
bound
jmp
pop
mov
pop
cmpsb
lcall
nop
je
mov
cmpsb
data16
aas
shrl
adc
pop
mov
lock
divb
mov
icebp
sbb
push
aaa
aad
pop
jo
int
and
mov
popf
xchg
out
clc
mov
test
mov
push
mov
adc
sub
adc
imul
repnz
rcll
xor
push
jno
cs
jmp
lahf
test
mov
jg
pop
jp
popf
into
je
sbb
pop
cmp
or
mov
xchg
xchg
jg
dec
jp
aas
clc
insb
mov
or
das
and
les
dec
repnz
push
add
push
mov
jmp
movsb
scas
push
iret
jns
jnp
int
inc
into
pop
std
ds
cltd
aad
xchg
jo
pop
inc
jne
ret
js
mov
test
or
cmp
and
pop
loop
mov
inc
pop
cltd
adc
push
push
or
mov
das
dec
push
std
xor
aas
lods
mov
in
lahf
jge
fwait
xor
gs
push
addr16
daa
cwtl
and
dec
loopne
ss
pop
shl
xor
subb
xchg
inc
xorb
pop
lods
jno
jecxz
ret
lcall
inc
xchg
ss
das
inc
sarb
getsec
icebp
jmp
sar
dec
mov
scas
xchg
mov
leave
or
subl
add
or
insb
repz
mov
mov
sub
dec
sbb
in
gs
xchg
insl
daa
lods
add
mov
jns
ljmp
and
mov
insl
and
cmp
js
xor
and
dec
arpl
hlt
clc
cli
sub
daa
inc
xor
fst
adc
and
popf
es
loopne
mov
les
pop
icebp
mov
imull
fdiv
out
lea
in
ret
nop
mov
mov
daa
cmp
cs
aad
adc
xor
inc
xor
add
xchg
mov
jecxz
test
test
icebp
xchg
aam
mov
pusha
xchg
push
add
push
lods
outsl
in
stc
scas
pop
in
dec
xor
mov
and
mov
push
xchg
test
sbb
add
js
mov
jne
lock
add
gs
xor
es
mov
xor
push
adc
inc
imul
jne,pt
sbb
adc
cmp
dec
sahf
cmp
andl
cmp
jbe
mov
mov
dec
xchg
push
repz
cs
fnstcw
mov
sbb
xor
mov
insl
repnz
fdivl
mov
jecxz
int
jl
push
sub
repnz
lds
inc
loope
mov
ss
outsb
mov
xchg
arpl
or
and
xor
fistpl
imul
mov
xlat
out
imul
adc
mov
cmp
mov
sub
sbb
push
aas
mov
pop
in
sbb
fisubrs
je
fsub
ljmp
rol
ds
shrb
lods
xchg
jl
leave
lcall
xor
mov
movl
pusha
inc
mov
xchg
xor
and
out
mov
add
add
sub
js,pn
lds
jge
pop
scas
xchg
push
rcrb
orb
lods
inc
fildll
inc
or
fucom
sub
pop
outsl
call
sub
in
push
inc
insl
cmp
das
pop
jne
movsl
insl
cmp
and
lods
lods
repnz
shll
cs
or
imul
int3
out
xchg
jns
dec
mov
adc
stos
fldl
adc
add
xchg
pop
fs
aam
inc
xchg
das
pop
push
mov
repz
cmp
cli
clc
sbb
mov
imul
call
fxch
pusha
fcmovb
push
mov
fiaddl
or
roll
sbb
ret
pop
cmpsl
jae
mov
dec
sarb
jbe
jbe
and
int
mov
xchg
cmpl
sub
addr16
or
aas
lock
cmpl
mov
xlat
jmp
popf
jge
xchg
sahf
in
ja
adc
lds
fnstcw
mov
call
jge
popf
dec
lea
lock
mov
fbstp
dec
push
sbb
sub
push
xor
mov
or
push
adc
jnp
jge
lcall
stos
test
and
jo
mov
adc
add
inc
lds
xor
fsub
insb
sbb
leave
push
push
jae
push
lods
mov
das
pop
xor
push
xchg
pop
ja
push
in
imul
add
cwtl
cli
lcall
dec
iret
lahf
xorl
lret
or
insb
lret
push
jl
push
ret
sub
push
mov
xor
pop
dec
jg
mov
pusha
pop
and
xor
cmpl
add
in
inc
sahf
cld
add
addl
add
mov
xchg
mov
dec
cli
add
mov
rcrb
sub
pop
mov
inc
mov
mov
dec
popf
idivl
sub
pop
incl
sbb
aad
push
pop
and
push
inc
mov
jno
popf
jo
xchg
aam
jnp
adc
adc
test
dec
pop
mov
sbb
shrl
and
adc
cmp
jl
sbb
dec
pop
mov
addr16
hlt
das
jecxz
test
stos
cld
xchg
xorb
cmc
push
data16
es
pop
jne
xor
push
mov
lock
ret
push
fs
pop
xor
mov
push
sub
mov
enter
cmp
ret
loopne
es
xchg
clc
xchg
cmpsb
bnd
cs
ljmp
loop
xchg
push
xchg
push
jnp
adc
cwtl
movsb
pop
xor
mul
cmpb
js
lret
jl
lds
pop
out
mov
fsts
aad
jne
adc
es
cmp
jecxz
push
shrl
lret
dec
sbb
jp
js
in
inc
insl
fisubrs
cwtl
mov
sub
cmp
mov
pop
adc
sub
pop
adc
pop
pop
pop
adc
push
jl
in
mov
fsubrp
mov
rorl
adc
mov
fstpt
xor
or
adc
pop
mov
fwait
popw
cltd
or
lods
mul
xor
je
xchg
scas
adc
mov
scas
popf
lahf
outsl
push
out
fnstenv
insl
out
cwtl
mov
push
adc
sub
repnz
inc
mov
pop
mov
push
mov
xchg
test
prefetch
or
mov
aas
mov
xchg
dec
insb
dec
jne
in
dec
cmp
repz
xor
out
cwtl
cmpsb
lea
repnz
cwtl
mov
mov
jo
pop
adc
inc
adc
adc
addr16
aaa
je
pop
pop
adc
sahf
mov
mov
push
pop
xor
and
movsb
adc
out
and
adcb
sub
cmp
inc
test
mov
ret
add
push
stos
aas
negl
insl
push
clc
dec
push
mov
xchg
je
inc
stos
scas
adcl
dec
pop
stos
xlat
ljmp
mov
sub
mov
es
lods
xchg
inc
xchg
shl
int3
cltd
mov
mov
aam
sub
cmp
push
pop
xor
adc
in
jl
movsl
lahf
rep
sbb
cltd
mov
shlb
dec
cltd
mov
adc
inc
lret
lods
cltd
int
mull
lcall
mov
push
fs
add
outsb
xchg
test
jno
and
xor
sub
ret
mov
mov
roll
cmp
mov
movzwl
mov
sbb
lods
fcmovu
add
pop
dec
or
jb
js
jl
or
xchg
lcall
mov
inc
inc
pop
mov
sub
cmpl
cli
sub
mov
or
push
das
xchg
outsl
popa
subl
insb
pop
mov
push
sub
rcll
in
das
mov
dec
fcoms
shll
in
test
rclb
clc
icebp
xorl
test
sbb
stos
cmc
iret
mov
rolb
push
cmp
int3
sbb
out
jns
stos
test
dec
mov
cs
and
pop
and
mov
loop
scas
and
mov
fwait
push
adc
adc
lds
jl
mov
cmp
stos
mov
int
aam
sahf
cmp
add
add
out
xor
mov
mov
push
pop
or
loopne,pt
popa
jge
xor
push
adc
mov
sub
cmp
mov
das
xchg
das
mov
out
add
ret
nop
xchg
inc
cmp
sub
aas
in
popf
or
out
sub
xchg
lock
ret
pop
lea
pop
js
add
adc
jb
insb
pop
mov
push
cld
leave
xor
sbb
cltd
xchg
loop
xchg
xor
and
repnz
or
dec
push
out
enter
add
cltd
dec
adc
add
or
lock
and
pop
out
mov
fmuls
test
out
movsb
pop
cmp
push
xchg
cmc
xor
xchg
scas
test
lods
inc
xchg
ljmp
xchg
pop
push
sub
jmp
pop
add
int3
inc
lds
js
rcrb
mov
and
daa
xchg
lods
mov
sub
int
or
movsb
sbb
mull
adc
mov
pop
add
js
mov
jo
pop
pop
xor
mov
dec
jo
lahf
mov
mov
mov
adc
ret
dec
ljmp
sbb
pop
mov
out
pusha
pop
pop
adc
cmpsb
jp
mov
lods
ds
and
adcb
mov
and
xchg
lods
stc
in
repnz
pusha
mov
xchg
int
push
and
pop
testb
jno
mov
adc
jecxz
mul
inc
out
loopne
and
pusha
pop
pop
adc
ret
icebp
cli
add
xchg
cmpsb
push
imul
icebp
xchg
sbb
sahf
xor
jno
test
in
mov
ret
xchg
fisubl
and
js
shll
fucomp
cmp
or
ret
ds
jmp
pop
cmp
inc
mov
aad
adc
mov
pop
jnp
ds
dec
xchg
mov
push
fnstcw
call
dec
dec
sbb
push
jns
sbb
lock
pop
cwtl
sub
xchg
dec
ja
sbb
inc
fdivrl
mov
adc
mov
adc
orl
movsb
dec
xor
push
pop
add
sbb
scas
push
lahf
jns
dec
lock
inc
fnsave
jmp
xor
push
adc
cmp
je
push
adc
nop
add
test
sahf
mov
insl
loop
sbb
push
lock
push
mov
pop
ss
xchg
lods
pop
xchg
sbb
int3
cmpb
mov
mov
loope
push
dec
inc
aad
mov
inc
movl
rcll
add
ljmp
jmp
cmp
addr16
outsb
and
pop
stc
pop
jae
fxch
stos
ja
test
dec
pop
ficomps
cwtl
cwtl
push
xchg
xchg
mov
fs
pop
mov
mov
imulb
out
sarb
lock
dec
adc
stos
jl
jmp
and
in
xor
mov
xchg
sbb
or
xchg
ja
addr16
dec
icebp
cmp
mov
jl
adc
adc
xchg
daa
pop
clc
enter
data16
in
mov
push
push
leave
data16
ret
sarl
mov
rcll
and
imul
mov
fldenv
cmpsl
cltd
xor
ds
adc
mov
shrb
or
mov
test
sub
popa
sub
popf
lret
cmpsl
add
pop
dec
xor
fwait
add
sbb
shl
cwtl
sbb
adc
pop
imul
int3
or
pop
inc
outsb
test
sbb
pop
cs
mov
aam
ds
inc
pop
and
gs
shrb
stos
cs
ret
sub
notl
push
jle
loope
insb
insb
xchg
div
jl
cmp
mov
lret
subb
cmp
pop
in
or
movsl
jbe
sbb
adc
out
sub
sbb
add
jecxz
sub
mov
test
add
mov
xchg
cltd
adc
addr16
adc
stos
sub
lods
in
xchg
sub
loopne
inc
inc
xchg
daa
dec
adc
or
inc
fidivl
xor
das
sbb
gs
fldcw
adc
cmpsb
push
fnstsw
push
insl
setp
pusha
dec
jmp
aad
jge
in
fnstenv
loopne
mov
out
stc
lret
gs
add
add
movsl
push
xor
andl
loopne
push
lret
fs
cmp
int
or
cmp
jmp
js
leave
jno
out
test
dec
cmp
repz
clc
and
jb
lret
gs
mov
lret
les
mulb
test
sahf
jb
jg
and
jns
and
gs
addr16
arpl
out
out
aas
sahf
inc
add
fs
mov
pop
jge
mov
fisubl
xchg
pop
adc
jb
ret
rolb
pop
in
nop
jg
fmull
out
sbb
cs
pusha
fsubr
mov
xor
out
pop
sbb
jp
das
movsb
push
aad
aaa
imul
cmp
jmp
jnp
add
and
jns
dec
lock
dec
dec
imul
xor
lret
cmp
xchg
lcall
lea
dec
xlat
leave
xchg
pop
arpl
out
inc
aas
cmpsl
lidtl
xor
out
sbb
or
lcall
cmp
jl
gs
or
repnz
xor
lods
cli
cmp
out
and
mov
pop
test
sti
sbb
inc
sub
xor
aas
xor
js,pn
and
sub
jne
ret
gs
fmull
repz
or
sub
daa
lcall
xchg
lods
movsl
insb
add
sub
xchg
dec
pusha
mov
and
call
or
mov
lcall
loope
xor
pushf
inc
lds
jg
inc
aad
out
fsubrs
push
xor
lock
xlat
shrb
cmc
mulb
loop
jno
xor
ret
dec
mov
and
xchg
test
xchg
dec
roll
shrb
roll
fsubrp
sbb
pop
adc
cmp
daa
or
outsb
pop
jne
lret
add
jecxz
xchg
inc
les
inc
das
scas
loope
mov
cmp
ss
daa
sub
add
sbb
mov
sahf
sbb
push
aas
pop
scas
sub
loopne
out
mov
test
ret
sub
stc
in
dec
xchg
mov
aam
es
repnz
dec
pop
repnz
add
out
neg
dec
test
sub
cmp
into
sub
jae
cmp
sahf
into
cmp
sti
clc
push
pop
mov
mov
pop
jns
lret
mov
sbb
dec
fisttps
mov
pushf
inc
popa
mov
loope
inc
jae
iret
pop
mov
cvtpi2ps
mov
out
sti
adc
adc
fwait
mov
int
push
outsb
fisttpll
sub
inc
xor
aam
arpl
or
dec
fnstsw
ds
movsl
insl
bound
adc
lcall
mov
xor
xchg
jae
cmp
mov
sbb
fcmovnb
fdivrs
jb
jo
stc
add
adc
pop
cltd
adc
jbe
ss
add
test
repz
pop
int
aad
in
sbb
out
jp
jae
xchg
repz
and
sub
push
sbb
dec
or
mov
loopne
es
aam
jo
xor
out
jne
ret
dec
in
movsl
insb
popa
dec
sti
lock
mov
xchg
das
mov
jns
out
pushf
mov
xchg
jbe
fdivs
pop
into
gs
pop
jge
jg
cmpsb
leave
cltd
repz
popf
shl
inc
push
sti
mov
lds
fcomps
loop
xchg
neg
mov
inc
aaa
in
pusha
jmp
test
out
cmp
or
stc
mov
mov
popf
adc
adcl
sbb
aas
out
sbb
sub
sahf
lods
pop
in
cmp
aam
adc
or
ss
cmpsb
mov
pop
inc
aas
xor
loop
pushf
mov
aas
adc
std
mov
in
out
daa
cli
insl
into
push
js
lds
cmp
jle
lcall
in
rcrb
add
popf
aaa
or
aad
adc
loopne
test
mov
push
int
sub
jmp
int
test
mov
test
inc
xlat
shll
mov
fdivs
xchg
fidivs
loop
mov
shll
jp,pt
dec
xchg
pop
jb
adc
add
ss
inc
jle
test
add
pop
mov
push
ret
fs
inc
adc
inc
inc
mov
sub
repnz
xchg
mov
sub
fsubrl
cltd
cmp
out
add
inc
pop
in
xchg
outsl
rcrb
jecxz
aaa
loopne
lods
mov
lcall
loop
aad
jno
loope
fs
jmp
sbb
jmp
mov
add
sbb
mov
sti
xor
imul
adc
push
jbe
push
pop
ds
sahf
aas
lock
inc
ja
in
mov
and
loopne
bndldx
movsl
adc
or
fwait
mov
xchg
imul
add
push
adc
pushf
jle
outsl
push
xchg
cmp
test
bound
inc
fildl
jae
adc
inc
cwtl
and
mov
push
ljmp
iret
test
push
and
ret
push
enter
push
shrb
adc
adc
negl
std
movsb
in
test
jp
arpl
inc
stos
sbb
sub
mov
pop
int
pop
roll
sbb
inc
int
adc
mov
shrl
lret
out
shr
add
add
cld
add
sub
shrb
outsl
iret
xchg
sub
sbb
push
inc
adc
addl
and
adc
test
stos
sahf
in
mov
cwtl
cs
jno
mov
enter
and
pop
cmp
push
icebp
xchg
int
mov
iret
mov
and
addr16
push
lret
dec
jae
push
sbb
jo
adc
add
popa
mov
scas
and
shll
call
fldcw
lds
dec
lcall
pop
cmp
add
ss
sbb
add
lods
xor
cltd
xor
jge
sub
cwtl
pop
arpl
push
xchg
xlat
ss
bound
test
mov
mov
or
xor
mov
push
fwait
mov
rclb
pop
jmp
xor
mov
cmp
jmp
stos
dec
jmp
pusha
fmuls
dec
push
clc
xor
xchg
subl
cltd
mov
adc
jb
pop
mov
add
icebp
stos
xchg
sbb
jo
pop
adc
das
xor
sub
push
xor
xor
ror
sub
out
pop
mov
adc
inc
pop
jnp
movsl
pop
mov
std
pop
cltd
mov
in
cmp
mov
xchg
out
andb
jbe
sti
mov
pop
js
frstor
nop
fnstenv
adc
jl
shlb
jmp
mov
data16
cmp
xchg
mov
jne
rcl
pop
mov
fs
loopne
loope
ficompl
ds
sahf
dec
lret
clc
xchg
ja
lods
sbb
dec
xchg
das
pop
aaa
xor
mov
fs
mov
mov
sarl
adc
mov
push
xor
enter
aad
push
jmp
xlat
mov
and
xor
ss
les
ljmp
cmp
push
fcom
xchg
fstpt
sub
loopne
lea
sbb
sbb
stos
xor
cmpsb
mov
jo
mov
popa
ret
dec
into
sbb
aam
gs
mov
test
xchg
aas
sub
aas
xor
pop
inc
cmp
and
aam
ds
movsb
sbb
mov
dec
xchg
jecxz
dec
enter
dec
in
pushaw
leave
jns
ret
add
mov
fiaddl
imul
adc
add
test
pop
push
mov
test
xor
pop
fs
imul
dec
sbb
push
jns
sbb
adc
pop
call
mov
fdivs
add
dec
xchg
lods
mov
das
movsb
mov
pop
js
mov
andl
inc
jecxz
sbb
ret
mov
cwtl
or
inc
cmp
aas
xor
mov
push
dec
call
jno
sbb
fwait
and
test
ret
orl
mov
push
adc
xchg
push
mov
or
pop
push
ror
or
into
push
dec
pushf
pop
gs
fs
pop
adc
jmp
rcr
movsb
xchg
xchg
and
fst
cmpsb
xor
or
fs
out
mov
pop
pop
mov
int3
mov
ds
jno
mov
bound
pushf
sarb
js
dec
inc
sub
push
mov
adc
sub
clc
stos
std
and
fimull
pop
insb
out
inc
sub
shll
xchg
mov
dec
int
mov
xlat
add
adcb
xchg
sti
outsb
add
lret
xchg
outsl
mov
push
in
fwait
mov
stc
sbb
out
and
add
pop
or
add
xchg
and
dec
mov
sti
mov
xor
pop
inc
push
inc
adc
imul
arpl
mov
lock
cmp
shlb
fisubrs
sub
fiadds
xchg
sub
mov
jge
addr16
jl
adc
stos
aad
sbb
jne
or
dec
dec
inc
mov
or
xlat
test
js
push
adc
mov
cmp
dec
cmp
repz
fistpl
dec
movsl
cld
cltd
sbb
imul
mov
cli
es
mov
xor
and
stc
pop
fisubl
cltd
jmp
fildll
push
xlat
add
or
clc
rclb
adc
fbld
cld
lahf
test
xor
push
cmp
jae
lds
loop
jle
shld
or
mov
mov
push
dec
jle
rorb
je
pusha
mov
xor
xchg
cwtl
inc
sub
mov
jne
xchg
daa
pushf
xchg
cmp
xchg
xchg
mov
fbstp
stos
dec
into
in
cltd
jmp
lret
fdivs
cmpsl
iret
fstps
mov
adc
jns
clc
outsb
shll
push
pop
fidivl
cli
pop
repz
clc
push
adc
mov
xor
sub
mov
mov
aam
cmp
push
into
fwait
inc
mov
repnz
xor
insl
ret
jno,pt
add
dec
xchg
lods
mov
sub
push
es
and
xchg
push
lods
pop
call
fstpl
push
jb
mov
je
int
mov
mov
xchg
mov
push
pop
lods
sbb
repz
hlt
and
shlb
inc
or
cmp
push
stc
gs
add
cld
out
cwtl
mov
or
xchg
into
pop
cmp
cmp
or
ljmp
in
dec
fidivl
mov
leave
lcall
adcl
or
dec
pop
and
jg
test
dec
jecxz
add
test
fdivs
out
mov
cmp
in
cld
in
xchg
outsb
int
dec
shlb
inc
xlat
jmp
dec
out
inc
xor
aas
cmpsl
lidtl
xor
in
mov
add
outsl
cs
ds
loope
sub
add
mov
dec
mov
cmpsl
push
jb
push
addr16
mov
cmpsl
mov
fdivrs
pop
mov
mov
sub
bound
push
movsb
out
loopne
push
out
pop
aaa
sbb
out
mov
pop
mov
push
mov
sahf
in
push
xchg
lods
push
bound
mov
out
shlb
push
aaa
mov
mov
or
scas
fwait
stos
pushf
pop
fs
repz
lea
inc
sbb
jns
repz
jmp
stos
or
add
arpl
insb
add
int3
xchg
inc
mov
dec
lods
dec
pop
fs
in
test
xor
and
and
mov
pop
pushf
xor
outsl
mov
sbb
lret
subb
bound
jle
js
jmp
xor
into
mov
mov
lret
xor
stos
insl
jle
xchg
sub
insl
jbe
int3
cwtl
ljmp
je
ret
add
sub
fisubrs
in
fsts
dec
add
or
fdivrs
insl
incl
ss
pop
fwait
scas
daa
jns
shrb
add
dec
sbb
add
jo
pop
adc
out
xchg
mov
loop
inc
and
adc
or
iret
dec
sbb
pop
xor
test
cwtl
jge
adc
push
les
outsb
ret
push
or
jmp
push
mov
sub
sub
inc
mov
in
mov
cld
stos
mov
jns
leave
mov
add
arpl
and
popa
mov
insb
pop
push
push
fcmovne
and
loop
sbb
scas
loop
out
icebp
cmp
mov
xor
or
popf
or
rorb
pop
sbb
add
out
pushf
lods
scas
fmuls
sbb
popf
jmp
mov
js
lret
lock
mov
test
das
test
jle
test
sub
adc
fsts
cld
scas
dec
nop
jecxz
mov
lahf
aad
add
mov
sbb
cld
cmp
jle
aam
rolb
add
xor
add
aas
in
test
and
mov
jecxz
cltd
adc
push
sbb
pop
nop
xor
xor
push
lods
mov
pop
adc
fs
ljmp
scas
les
ds
leave
dec
loope
dec
lahf
call
aam
lods
cltd
mov
repz
or
insb
fdivs
inc
fidivl
push
aaa
pop
ljmp
mov
dec
rcrl
push
dec
sahf
inc
jle
insb
xor
leave
in
pop
mov
gs
arpl
fcom
xchg
fisttpl
enter
dec
into
sbb
je
loop
aad
cli
xchg
sbb
gs
call
mov
xchg
add
ss
jle
sbb
xchg
sbb
sahf
sahf
xor
adc
mov
pop
pop
adc
dec
fidivl
ss
lcall
out
inc
jmp
ret
cld
dec
fidivl
leave
xchg
and
leave
bound
out
dec
mov
adc
mov
adc
dec
stc
bound
bound
shrb
adc
mov
xchg
push
jg
das
aad
sbb
test
fcmovb
mov
sub
out
xlat
shl
repz
aas
pusha
jnp
add
and
movsb
sub
or
xor
fsubr
ljmp
xor
es
xchg
in
int
fisubrs
insl
shlb
fsubr
aas
cmpsl
lidtl
xor
out
rcl
add
leave
lcall
cmp
in
inc
call
into
mov
mov
sbb
pushf
pushf
sbb
adc
cmp
jle
xchg
icebp
movsl
fs
xchg
test
jmp
mov
int
iret
cmp
lods
sar
cltd
push
jo
mov
or
sti
cmpsb
int
scas
or
xor
xlat
lods
pop
inc
sub
mov
sub
imul
mov
add
insb
aad
push
ds
push
rcrb
adc
xor
repnz
jecxz
jl
adc
fdivl
dec
jo
push
es
outsl
pop
dec
push
sahf
xchg
in
push
jo
jp
mov
mov
xlat
add
cltd
sub
je
add
and
dec
loopne
std
mov
shrb
out
push
imul
int3
test
pop
loope
fsubrs
xchg
sbb
data16
mov
sti
and
xor
push
repnz
xchg
sbb
adc
sti
jno
int3
fnstsw
fs
add
fisubrs
dec
jl
leave
mov
push
adc
ja
jae
jl
jecxz
pop
aas
loope
movsl
test
hlt
inc
addl
das
mov
adc
xchg
mov
xlat
xor
mov
outsl
fisubrl
cli
jne
or
pop
jle
iret
mov
rolb
neg
inc
je
inc
fcompl
loop
jb
or
adc
push
xchg
jo
mov
ds
repnz
add
shlb
jno
mulb
mov
mov
ret
cmp
xlat
sub
xchg
add
insl
mov
cs
ljmp
js
mov
ficoms
in
les
or
inc
or
push
mov
xchg
sahf
cmpsb
push
sbb
or
fadds
fadds
fdivs
int3
shr
mov
cld
lahf
test
rcr
lods
les
push
adc
cmc
repnz
sbb
adc
cmpsl
test
int3
or
xchg
mov
or
icebp
and
inc
inc
cmp
adc
cmpsb
pushf
stos
iret
lahf
pusha
fwait
jbe
sbb
fadds
push
in
mov
push
adc
fbld
outsb
ds
jne
adc
mov
mov
adc
sbb
jl
adc
jl
adc
add
xchg
and
shll
lcall
mov
pop
rcll
roll
pusha
jl
adc
push
xchg
adc
aas
aas
pusha
movl
shlb
jl
adc
adc
cltd
mov
loope
movsb
xchg
insl
test
out
cmp
mov
adc
imul
mov
xchg
out
mov
test
scas
jp
push
jno
mov
int3
mov
cmp
popa
dec
sahf
cmp
dec
or
psrld
ds
pop
mov
cmp
mov
mov
mov
out
pop
sub
lcall
loop
add
js
fwait
adc
out
fcoms
js
fstpt
sub
add
mov
pop
push
leave
xchg
js
ffree
push
add
fdivl
or
sbb
lock
push
inc
push
mov
and
jl
repnz
cmp
pop
and
lret
cmpsb
xlat
les
adc
adcl
notb
mov
jae
mov
repnz
bound
xchg
mov
mov
adc
sub
je
ss
adc
jecxz
repz
jo
pop
adc
sbb
pop
adc
sub
adc
pop
pop
adc
in
xchg
out
mov
into
pop
mov
in
and
or
dec
push
and
mov
mov
js
xor
push
dec
lahf
xchg
or
ret
dec
js
cmpsb
ret
or
adc
adc
jne
enter
jl
aas
xchg
jnp
mul
gs
fnstenv
mov
int
jp
push
cmp
jl
xchg
and
or
ror
fwait
xchg
lods
xor
dec
nop
sub
adc
stos
xor
inc
jbe
sub
or
xchg
std
fs
dec
sub
aam
mov
scas
faddl
dec
mov
jae
scas
sub
jg
adc
cmp
enter
push
sub
insb
lcall
mov
repnz
into
xor
push
into
int
repz
push
addb
fwait
pushf
and
inc
add
jmp
cmpsl
mov
jns
adc
dec
aad
pop
shrl
mov
stos
xlat
sub
orl
jge
cld
xchg
and
sub
push
adc
test
push
dec
xchg
sub
enter
imul
jl
or
mov
push
dec
fimull
jg
adc
or
cmc
dec
int3
movsb
dec
lods
or
into
pop
imul
mov
sbb
push
adc
in
pop
pop
adc
sbb
pop
adc
mov
imul
cwtl
psubq
or
cmc
int3
out
call
pop
outsl
fmuls
xchg
adc
mov
push
adc
repz
scas
dec
ljmp
pop
pop
adc
sbb
pop
adc
adc
or
stos
mov
xor
inc
stos
popf
sbb
dec
pop
mov
cmp
dec
pop
mov
loopne
mov
inc
xor
mov
push
adc
lock
adc
clc
daa
cltd
jb
test
adc
sbb
and
ja
inc
pop
cltd
adc
jmp
adc
inc
push
movsl
add
or
lcall
bound
mov
dec
dec
fcoms
push
adc
pop
les
push
adc
pop
xor
fwait
pop
adc
arpl
add
fcomp
sbb
adc
roll
insl
fisubl
mov
or
pusha
jp
adc
mov
dec
xchg
pop
jb
pop
jo
rorl
dec
shll
xor
push
adc
into
ja
or
or
pop
loope
pop
add
outsb
inc
inc
ss
pop
loope
push
xor
xor
icebp
jnp
sub
cmp
repz
or
push
adc
les
jns
out
adc
dec
js
adc
adc
int
mov
stos
ljmp
push
outsl
cs
mov
daa
dec
sahf
add
push
adc
push
push
adc
std
xor
and
mov
push
jns
lcall
pop
pop
pop
add
sbb
adc
pop
mov
push
adc
test
jl
daa
cmp
push
adc
sbb
jns
imul
mov
adc
notb
push
push
mov
pop
pop
adc
mov
inc
insb
adcb
adc
data16
lods
pop
mov
fdivrs
out
jmp
push
xor
imul
mov
into
mov
dec
aaa
ret
out
mov
loopne
inc
sub
mov
push
adc
ds
cmp
addr16
add
leave
pop
mov
aam
sbb
adc
repnz
bound
xor
add
xchg
popa
jmp
push
or
xor
pop
xchg
sub
movsb
adc
adc
shll
inc
adc
mov
rorb
push
pop
xchg
loop
push
hlt
xor
adc
aad
dec
repnz
loopne
imul
adc
xchg
pop
xchg
sub
dec
jp
adc
adc
stos
cwtl
xor
shll
es
xchg
shlb
pop
adc
cltd
jge
mov
jne
mov
stos
or
xor
adc
adc
cli
add
inc
ret
adc
adc
int
mov
push
xlat
mov
flds
mov
pushf
mov
rolb
nop
mov
xchg
loopne
int3
rorb
lcall
or
xor
es
notl
mov
push
adc
or
mov
movsl
push
inc
xchg
push
add
pop
popf
je
sti
jae
sbb
sarb
adc
pop
push
sbb
adc
push
adc
push
push
push
mov
aaa
ljmp
pop
xor
push
fsubl
sub
jns
adc
push
and
outsb
ret
jb
adc
adc
in
jns
adc
xor
jns
and
push
adc
lds
or
adc
adc
mov
mov
fmuls
or
idiv
cmp
enter
sub
dec
jbe
lret
lret
test
jmp
ffree
icebp
inc
std
xchg
test
movb
stos
pop
dec
ljmp
jle
inc
aas
xchg
or
loopne
mov
loop
inc
arpl
mov
sahf
test
xchg
sub
fwait
mov
adc
sub
mov
and
jnp
jmp
jae
add
push
adc
daa
les
push
adc
adc
outsb
ss
sbb
into
lcall
sbb
adc
div
sahf
xor
push
lea
mov
test
addr16
add
adc
cmpsb
push
insl
fwait
jbe
fnstcw
dec
sti
dec
subb
adc
or
scas
dec
out
lods
inc
jge
or
push
adc
les
push
in
adc
sysret
call
dec
and
xchg
push
add
dec
adc
jns
adc
int
xchg
das
pop
aaa
xor
insl
mov
add
insb
adc
ret
or
popf
mov
mov
pop
jle
int3
out
xor
scas
rol
push
aad
dec
mov
push
pop
aam
enter
es
repz
in
popf
mov
lcall
pusha
or
xor
fisttpl
das
pop
leave
jge
mov
xorb
fidivrs
fstps
add
loopne
sub
add
xor
test
jnp
add
fdivl
jo
pop
adc
push
xor
mov
add
xchg
sub
ds
insl
mov
sub
inc
lret
lock
jmp
push
push
jae
or
sbbb
add
mov
outsl
ret
pop
push
dec
inc
fnstcw
mov
jae
addr16
mov
xchg
and
imul
and
test
xor
xchg
les
sub
gs
and
loopne
push
jne
fstpt
inc
add
leave
pop
sbb
sub
dec
mov
es
jge
mov
test
mov
out
mov
mov
scas
test
fisttpll
add
es
xchg
loopne
mov
popf
xchg
dec
add
inc
inc
and
jg
fstpl
mul
dec
pop
cmp
sbb
popa
mov
addr16
in
push
icebp
sbb
inc
aaa
ds
or
mov
out
pop
arpl
jo
pop
and
xchg
and
mov
jo
int
or
lods
pop
cmp
lret
pop
inc
jmp
daa
in
lea
adc
pop
inc
xor
leave
xchg
fldt
mov
movsl
xchg
in
popl
dec
mov
idivb
mov
push
xor
adc
dec
ds
ljmp
mov
movsb
add
mov
lods
stos
int3
jle
hlt
scas
aas
push
lahf
xor
arpl
loopne
test
mov
sarb
aas
cmp
imul
incl
jmp
and
mov
dec
pop
push
call
movsl
mov
adcl
push
outsb
jge
rcll
and
test
inc
fs
ja
or
fsubrp
xor
addr16
testl
xor
sbb
sbb
adc
stos
inc
fwait
cmp
test
sub
imul
lock
ror
test
mov
mov
aad
mov
aam
mov
inc
or
addr16
mov
stos
or
rolb
sub
jnp
ja
xor
popa
dec
dec
or
cwtl
dec
mov
dec
andb
sahf
inc
dec
jae
popa
mov
dec
mov
cld
ja
fidivrs
add
mov
call
loopne
push
ds
cmp
or
pushf
xorl
in
in
outsb
mov
gs
cmpsl
sti
rolb
xor
or
sub
insl
and
bound
or
xor
clc
add
pop
adc
js
xorl
push
into
pop
mov
inc
adc
adc
cmpsb
sub
push
bt
and
loop
les
xchg
outsb
scas
hlt
xor
and
inc
xlat
aam
lea
jbe
cmp
lds
shll
xor
jo
pop
adc
test
xchg
bound
shll
icebp
shlb
or
sbb
adc
adc
jmp
pushf
lcall
mov
std
mov
xor
mov
push
cmc
aad
jns
add
sbb
fwait
shrb
mov
sbb
gs
push
shl
gs
jb
xchg
mov
or
sti
cmpsb
aad
jo
jnp
mov
fdivs
pop
adc
mov
sti
aas
sub
adc
or
sbb
adc
push
aaa
andb
sub
lahf
cmpsb
cmp
pop
pop
popf
orb
and
fidivrl
jns
leave
imul
addl
and
and
add
and
jno
xchg
out
mov
sbb
jmp
lods
pop
pop
jo
pop
adc
test
xchg
xlat
stc
test
test
scas
mov
fsubrp
ljmp
inc
xor
cmpsb
and
notb
fildll
inc
stos
push
shlb
cmp
adc
push
popf
inc
sbb
adc
mov
in
stos
adc
dec
mov
cmp
mov
cmp
sahf
lret
and
adc
adc
pop
jecxz
push
mov
sbb
adc
pop
sar
les
jns
xchg
add
or
dec
sub
adc
cld
sbb
and
and
adc
pusha
ss
push
es
mov
add
jmp
cwtl
dec
cmp
pop
cmpsb
xor
mov
lcall
insl
dec
ret
test
jb
xchg
and
leave
std
jle
inc
lret
into
sti
movsb
ret
jge
ret
pusha
daa
lds
repz
inc
fs
xchg
scas
push
imul
lds
lock
movsl
sbb
lret
cmp
xchg
or
pop
mov
mov
sahf
pop
mov
xchg
cs
test
ja
nop
or
adc
sub
xor
fisttpll
cld
mov
test
bound
loopne
mov
into
test
dec
lahf
mov
test
cld
and
popf
fadds
enter
push
lret
pop
adc
insl
dec
loopne
jne
xor
cmpsl
xor
lods
mov
mov
add
rol
sarl
jo
add
aam
insb
lcall
mov
int
or
jmp
mov
pop
lds
and
les
movsl
int
insb
xor
gs
or
xchg
cmp
xchg
mov
xchg
scas
xor
jmp
mov
pusha
mov
and
fistpll
insl
pop
loope
or
sub
in
xor
sub
lods
dec
jl
jmp
lods
outsb
jb
out
cmc
incl
mov
xchg
pop
js
imul
mov
fldl
rolb
pop
push
or
repz
subb
popa
push
xor
cli
mov
test
cmp
ficomps
jbe
dec
nop
popf
jmp
jb
dec
test
xchg
jle
ss
outsb
xchg
pushf
cmp
popa
shrl
lds
outsb
push
movsl
xor
inc
ds
mov
mov
scas
mov
adc
push
shlb
adc
nop
sbb
incl
ljmp
stos
jns
xchg
dec
stc
xor
lds
aaa
add
dec
mov
or
push
jmp
in
sbb
aam
push
pop
pop
sub
and
xlat
mov
lahf
sub
insb
xchg
xor
push
mov
adcb
add
fists
sub
fdivs
sarb
jne
iret
repnz
mov
adc
inc
xlat
std
lock
lcall
insl
inc
xchg
pcmpgtb
xchg
and
lods
xacquire
insb
mov
mov
xchg
fisttps
inc
test
fiaddl
cli
mov
in
sbb
repz
js
cmc
aad
inc
xchg
mov
mov
aaa
xor
insl
mov
jbe
fwait
popf
shr
dec
xor
mov
aas
sbb
push
push
lret
xchg
rcll
js
ds
xchg
xchg
ret
sahf
push
sti
mov
jns
shr
aad
imul
push
out
or
mov
insl
inc
inc
add
fidivrl
add
mov
xchg
mov
mov
cmp
lds
outsl
cmc
out
out
rcrl
outsl
sbb
pop
aas
mov
js
pop
call
xchg
xchg
add
jl
cmp
push
in
jge
mov
sub
jg
sub
sub
arpl
dec
mov
fcmovb
rorb
adc
loopne
or
repz
imul
int
xchg
dec
lret
loope
js
adc
pop
lock
sbb
fmull
mov
mov
push
push
mov
adc
push
cs
loopne
cmp
mov
sahf
mov
in
lret
fwait
sbb
cld
jge
and
pop
ret
loop
or
mov
arpl
repz
xchg
rcl
fstp
push
repz
sbb
adc
fimuls
dec
sbb
adc
lods
push
mov
rcr
xlat
icebp
aad
imul
movsl
mov
cli
sahf
xor
cmp
mov
ficomps
imul
or
xchg
mov
daa
dec
in
cmp
in
push
dec
push
add
arpl
inc
mov
out
pop
jp
dec
xchg
xchg
ret
les
xchg
inc
sti
cmc
bound
sbb
mov
inc
rcrb
mov
mov
xchg
push
xor
pop
dec
adc
cmp
lods
outsb
rolb
inc
call
inc
orl
stos
ja
or
cmp
mov
sbbb
gs
test
or
lock
mov
sbb
nop
sub
xchg
int3
and
mov
fcomps
push
mov
pop
mov
jbe
xor
imul
adc
je
aam
cmp
vcvtsi2sdl
addr16
imul
test
push
ja
inc
imul
pop
and
jmp
into
xchg
fnsave
sub
dec
add
popa
sbb
imul
mov
inc
cmp
stc
sub
sub
fmuls
xor
jo
pop
push
push
out
movsl
mov
inc
je
pop
scas
push
push
cmpsb
inc
lock
daa
mov
rcll
dec
pop
adc
mov
cmp
cmp
jle
fwait
imul
sbb
push
jae
push
mov
mov
jge
jo
movsl
push
int3
adc
push
subb
outsl
sub
and
mov
adc
push
in
or
stos
xor
and
inc
sbb
adc
and
ret
outsb
rcrl
shll
mov
adc
or
mov
mov
push
cmp
sbb
adc
add
adc
or
test
ljmp
fxch
lods
xor
jno
sub
adc
mov
cwtl
mov
pop
xor
es
mov
xor
dec
sti
pop
imul
cmp
mov
dec
add
and
push
out
lret
dec
test
cmp
enter
mov
jne
push
jns
mov
push
mov
ss
dec
adc
jns
adc
nop
aaa
push
or
xor
js
pop
call
jmp
movl
jnp
pushl
pop
adc
call
ficoms
push
adc
xor
xchg
jne
rclb
sbb
push
cs
xor
push
into
out
mov
mov
xor
sub
xchg
popa
loopne
dec
enter
repnz
lcall
sub
out
gs
arpl
or
call
je
dec
clc
add
mov
ret
pushf
mov
dec
scas
fadds
pop
mov
aaa
mov
cmpsb
jbe
insb
and
cmp
push
push
mov
sbb
sbb
es
pop
push
int
inc
jns
sarl
sbb
mov
mov
lret
xchg
pop
fstpl
sub
icebp
cmc
mov
lods
notl
lods
repz
adc
mov
xchg
les
mov
repnz
sbb
mov
jp
fstl
inc
iret
outsl
outsb
fstpt
and
and
push
dec
xchg
movsb
xchg
aas
divl
pop
lock
out
xchg
sub
shl
int
or
jle
in
repnz
test
push
movsb
aas
sub
cmp
mov
pop
out
insb
and
lods
repnz
push
push
shl
push
out
mov
pop
lock
test
insb
fstpt
fdivp
jl
or
fwait
cmp
aam
imul
and
or
push
fdivrs
loope
mov
fidivs
mov
push
mov
daa
sahf
xor
inc
sbb
xor
cmp
sub
test
sbb
iret
add
mov
xor
scas
dec
std
mov
stc
test
and
lods
push
and
mov
test
mov
shl
add
sahf
fwait
call
mov
lret
xor
sahf
sti
inc
inc
in
jmp
dec
pushf
push
mov
shr
lcall
hlt
add
fwait
int3
fnstsw
mov
lret
cmp
mov
lahf
jno
jecxz
mov
sbb
mov
scas
daa
jp
aaa
loop
jle
pop
push
adc
mov
cs
pop
repnz
push
cltd
and
daa
aam
cmp
mov
jl
cmpb
pop
sarb
idivl
fldcw
inc
jl
sbb
push
dec
ret
icebp
std
xchg
test
cld
add
xchg
dec
lahf
sub
dec
sbb
jge
push
stos
pop
icebp
icebp
xor
xorl
fwait
or
mov
or
cwtl
ret
push
sub
test
sarb
ret
and
ss
int
in
sub
adc
add
cmp
dec
push
sbb
test
cmp
cmpsb
repnz
stos
jnp
push
enter
repnz
movsb
mov
in
orl
scas
push
sub
test
xchg
in
cmp
or
lea
div
sahf
in
xchg
cmp
aaa
dec
cmp
imul
xchg
pop
test
and
push
add
inc
sub
cmc
and
sbb
sbb
push
cli
pop
push
sbb
xchg
fwait
cltd
sub
dec
insb
or
in
pusha
adc
fdiv
fs
push
mov
lds
movsl
lret
pushf
jmp
in
test
push
mov
aam
xor
gs
sbb
adc
dec
xor
mov
push
push
mov
out
pop
cwtl
push
mov
ret
xchg
inc
insb
loop
scas
test
xor
xchg
gs
mov
fidivl
test
and
mov
inc
inc
dec
pop
call
dec
out
cmp
xor
or
pop
icebp
movsb
popf
dec
sarb
dec
jnp
cwtl
jl
add
movsb
sbb
dec
ret
sbb
xor
lahf
lds
push
mov
dec
addr16
push
shrb
pop
out
fdivs
mov
fidivl
js
mov
push
movsb
pop
jne
dec
xchg
sbb
leave
sbb
lcall
int
mov
sbbb
outsb
out
pop
xchg
jp
repz
pop
adc
rcrb
add
cltd
ljmp
xlat
pop
nop
divl
xor
cli
jnp
or
or
out
pop
mov
dec
sahf
xchg
rep
cmp
shrl
insl
add
shrb
push
pop
dec
out
mov
sbb
xchg
outsb
pop
push
ss
sbb
xchg
in
xlat
cli
jne
loop
adc
pop
repz
pop
dec
fildl
repz
or
dec
lods
call
xchg
test
repnz
ss
shl
fdivs
mov
mov
rcll
pop
sbb
in
repnz
push
pop
int3
imul
adc
sahf
dec
ret
add
je
inc
in
pusha
les
cmp
outsl
into
sbb
outsb
in
jb
inc
xchg
out
xchg
mov
cmp
out
mov
xchg
xchg
mov
sbb
jle
jle
adc
lret
push
sub
mov
adc
add
cmp
inc
loopne
sbb
dec
test
xchg
sbb
sub
fbstp
dec
add
cmc
popf
lds
sub
lcall
aad
ss
popa
dec
or
mov
jl
stc
lds
js
cmp
or
shlb
ja
sbb
mov
push
nop
mov
inc
into
push
enter
and
into
idivb
into
loop
cmp
test
pop
sahf
jbe
ljmp
mov
test
pop
push
fistl
jne
fcoml
jle
mov
cmp
shl
enter
jo
mov
loop
imul
ror
sarl
mov
lret
xor
adc
inc
mov
cwtl
sahf
mov
and
insb
add
int3
rorb
mov
sub
add
clc
or
xor
cwtl
inc
mov
fldenv
jb
std
xchg
mov
adc
push
xchg
sub
ja
clc
stos
mov
xor
rcl
pop
insb
xchg
cmp
or
adc
pop
sub
in
mov
popl
loopne
scas
jnp
daa
cmpsb
and
inc
push
sub
out
test
mov
jl
xchg
or
enter
fildll
push
pop
cli
lods
nop
cmp
xchg
lds
outsb
sbb
fwait
cmp
ljmp
adc
push
jnp
pop
imul
add
mov
xchg
fcmovbe
xchg
adc
sub
popa
fwait
and
mull
push
insl
mov
push
xor
dec
mov
popa
jge
out
into
dec
ds
pop
shrb
adc
fs
push
sbb
insb
mov
xchg
lret
mov
push
xchg
daa
xor
adc
ret
cmovae
sbb
push
cs
daa
xor
mov
inc
sbb
mov
mov
sbb
jne
mov
test
ret
fadds
ss
ret
scas
push
lahf
lods
cmp
mov
fwait
pop
call
mov
jmp
adc
jns
adc
lahf
adc
mov
and
stc
jno
mov
mov
adc
sahf
inc
inc
dec
and
mov
das
mov
cmp
shll
sarb
cmpl
or
xor
pop
dec
inc
or
sbb
push
movsb
xor
pusha
fstp
add
pusha
leave
adc
mov
jo
pop
adc
arpl
mov
jmp
pop
nop
scas
js
insl
fcmovb
or
mov
jmp
mov
sub
jbe
xchg
mov
xor
cmpsb
jmp
test
and
and
adcb
arpl
xchg
push
push
pusha
leave
cli
lods
sbb
adc
icebp
lods
sbb
enter
fstp
aas
icebp
call
mov
xor
pop
dec
push
xchg
jbe
xchg
repnz
imul
fistps
stos
test
push
adc
test
in
shlb
popf
xchg
subl
push
add
out
xchg
sahf
ret
xchg
mov
mov
pushf
sbb
adc
imul
cmp
mov
in
mov
insl
jmp
ss
daa
and
mul
inc
imul
fsubrs
shlb
sbb
adc
mov
sbb
jnp
push
out
fsubr
xchg
sub
rcll
pop
pushf
orb
cmp
in
jae
pop
push
xlat
test
push
adc
jg
cmp
imull
andl
mov
es
xchg
stos
sahf
mov
pop
mov
icebp
pop
stos
inc
or
je
test
xchg
lods
bound
fstpl
add
dec
aad
lcall
cmp
pusha
data16
lea
dec
iret
les
sub
test
dec
fiadds
add
movsl
in
or
mov
sbb
adc
ret
xor
sub
pop
xor
out
cmp
mov
pop
ss
xor
sarb
push
lcall
arpl
xchg
and
sub
jl
aam
nop
aas
idivb
adc
mov
repnz
ret
cwtl
xorb
push
inc
add
mov
jl
mov
pop
xchg
inc
addl
lcall
adc
push
adc
fsubs
adc
popf
inc
repz
dec
mov
cmp
pop
adc
jbe
sbb
int
lret
shrb
adc
adc
insl
in
pop
or
xor
push
adc
arpl
cmp
je
adc
leave
cmp
dec
or
mov
xchg
xor
sbb
push
adc
adc
jno
xchg
inc
or
andb
fisttps
icebp
pop
cltd
flds
sbb
adc
jne
orl
nop
out
hlt
xor
out
dec
mov
shl
inc
cmp
aaa
cs
test
adc
adc
jnp
lods
mov
adc
ffree
out
fs
adc
ss
iret
cmp
jmp
test
mov
sbb
adc
jae
lods
outsb
mov
ljmp
mov
mov
divl
in
add
lret
gs
sbb
adcb
adc
scas
dec
adc
adc
xor
dec
xchg
push
sub
outsl
inc
out
inc
mov
fistl
sahf
mov
xor
dec
xchg
daa
data16
xchg
out
test
push
adc
shl
push
xor
push
sub
pop
ljmp
daa
ret
insb
stos
test
push
adc
test
test
mov
xor
out
push
movsb
dec
push
fcmovb
popa
mov
sbb
adc
inc
fidivl
or
jo
leave
xchg
sub
in
outsb
sahf
nop
daa
dec
sahf
adc
fwait
ss
or
xor
jmp
inc
and
and
cmp
movsb
jecxz
rorl
bound
xor
js
pop
call
aas
popa
fdivs
jmp
and
in
out
flds
outsl
sub
ret
mov
jo
pop
adc
pop
dec
add
adc
push
inc
pop
cltd
xchg
sub
add
pop
adc
adc
js
sub
sbb
movsl
mov
adc
cld
imul
push
test
in
xor
fisubl
adc
adc
cmpsl
mov
lock
daa
jecxz
ret
xchg
iret
fwait
sbb
jg
out
xchg
mulb
inc
pop
loopne
xchg
bound
add
icebp
mov
fadds
outsb
test
adc
pushf
fiadds
repz
sbb
push
jp
aaa
push
xor
jnp
xor
cltd
push
push
movsb
fcoml
cmpsl
xchg
icebp
repz
ss
jbe
xchg
mov
sbb
enter
movsl
dec
xchg
fcomip
sbb
adc
xchg
jle
and
icebp
mov
inc
in
push
adc
dec
fisubrs
add
dec
pop
nop
pop
pop
adc
daa
add
loopne
push
adc
sub
jnp
jge
push
int
and
and
push
sbb
adc
jno
push
and
sbb
adc
mov
fwait
es
pop
adc
add
sbb
jle
sbb
adc
mov
dec
add
pop
adc
adc
xchg
pop
push
push
mov
stos
fcomp
repz
in
mov
call
mov
push
mov
fdiv
or
mov
jmp
sub
sbb
out
negb
inc
add
jno
adc
adc
ficomps
cmpsb
daa
roll
inc
jne
push
adc
adc
jnp
sbb
inc
mov
sbb
adc
fisubs
mov
lret
mov
mov
shr
or
ja
adc
cmp
jg
adc
push
adc
mov
insl
pop
neg
and
jnp
cmpl
lock
jae
push
punpcklwd
push
fistpl
or
ljmp
dec
std
orl
cmp
dec
xchg
and
pop
dec
int3
inc
loop
jne
rorl
cmpsl
arpl
lahf
ja
clc
adc
jnp
sub
adc
adc
call
mov
outsb
push
test
shll
jo
or
pop
xor
stc
bound
adc
ds
clc
cmpsl
xchg
repz
aam
pushf
push
push
push
aas
adc
jle
sbb
shll
testb
push
adc
sbb
sub
scas
jle
adc
sub
push
adc
xor
sbb
adc
mov
mov
sti
loope
cwtl
stc
sarb
test
xor
mov
pusha
dec
or
clc
aas
mov
sarb
shll
sbb
call
adc
aam
dec
bound
idivb
cmp
push
es
sbb
sbb
es
jno
aas
out
inc
addr16
bound
test
popa
ret
or
mov
sub
sti
jno
and
inc
inc
dec
test
movsb
shrb
daa
dec
ljmp
or
and
les
psubq
cmp
imul
jmp
mov
or
repnz
push
fs
sub
adc
std
addr16
imul
out
out
mov
push
ljmp
call
call
pop
iret
incb
int
in
ds
sbb
push
jl
mov
pop
bound
call
rorl
jl
inc
in
sbb
jle
push
lret
out
sbb
jnp
ljmp
sbb
adc
jle
ljmp
lcall
pop
in
inc
adc
sbb
inc
aam
push
adc
push
adc
cmpsl
aas
adc
out
xchg
rcrb
xlat
sub
inc
out
lods
shrb
pop
lahf
sbb
dec
lret
clc
inc
mov
ret
pop
mov
lcall
in
in
mov
mov
ljmp
dec
pop
es
sbb
push
xchg
data16
movsl
repz
mov
adc
dec
mov
mov
je
mov
lcall
gs
clc
push
xlat
sbbl
jns
mov
and
pop
inc
xor
ret
fidivrl
gs
sbb
rcl
fidivrl
out
xor
cmp
daa
ret
imul
pop
les
lods
xchg
es
repnz
cmp
cld
in
pop
popa
cmp
pop
into
pop
fistpll
dec
jbe
cmp
adc
jne
cmpsb
inc
cmc
ret
jge
mov
push
call
pop
int3
rorb
ret
jno
pushf
and
lcall
sahf
movl
xchg
cmpsl
push
or
push
push
push
stos
movsl
xchg
mov
jno
jmp
andl
add
and
or
mov
sub
add
sbb
and
shl
pushf
inc
sub
jg
mov
adc
pop
pusha
mov
and
pmulhuw
fs
cmpsl
popf
stos
cmp
mov
pop
jl
jle
aam
xor
aas
popa
test
stos
into
xchg
sahf
enter
lret
mov
xchg
push
pop
inc
mov
or
adc
jne
jbe
dec
cmp
mov
lcall
add
adc
pop
or
lods
mov
cmpsb
cwtl
or
jnp
in
push
call
sub
dec
jne
mov
inc
insb
bound
inc
cmc
dec
xchg
cld
push
xor
sub
xor
push
adc
xchg
jle
ja
pop
lds
adc
mov
js
pop
lock
jmp
js
push
adc
pop
sbb
mov
jae
sbb
pop
push
lods
jle
iret
test
xchg
jae
shl
jo
shlb
out
dec
mov
push
mov
aaa
pop
xor
movsl
lea
rolb
dec
dec
push
pop
mov
and
out
xchg
icebp
pop
int
dec
imul
cltd
add
mov
inc
pop
std
jl
jb
jnp
int3
lods
add
sbb
mov
inc
loopne
push
jbe
lret
pop
fistpll
pop
cmp
in
mov
bound
sbb
leave
jo
outsb
cmpsb
sarb
loopne
lods
mov
xor
cltd
dec
and
sbb
loop
xlat
lret
jge
fadds
cmp
std
gs
imull
std
xchg
dec
iret
or
imul
lods
or
neg
aam
xor
xlat
inc
pop
aas
sub
cmp
or
pop
mov
nopl
add
push
lods
mov
insl
int3
add
sbb
fs
xchg
push
mov
inc
aad
jno
sahf
mov
pop
mov
sbb
mov
je
dec
ljmp
stc
mov
sahf
movsl
fcmovne
sub
ret
clc
imul
inc
lcall
mov
xorl
movsb
dec
out
mov
mov
xchg
and
xlat
daa
or
mov
and
inc
and
sbb
jbe
xchg
leave
jp
out
rcl
mov
out
and
sahf
movsl
fcmovne
sub
ret
dec
push
mov
insb
sub
imul
scas
test
dec
xchg
xor
pop
xor
fistps
insl
inc
push
outsb
sbb
pop
jne
inc
jp
xchg
and
push
and
jg
paddq
sbb
or
mov
and
imul
push
std
pusha
xor
icebp
fistpl
jl
fcmovu
aad
jno
es
les
shl
shl
gs
sti
pusha
push
cmc
imul
inc
lahf
and
jle
repz
out
adc
pop
mov
mov
js
push
adc
xchg
jbe
shlb
fwait
mov
xchg
xchg
lods
mov
cmp
out
pop
jnp
lea
or
lret
sbb
aad
rorl
push
ljmp
test
pusha
cwtl
mov
shrl
mov
test
es
xchg
sub
loopne
out
mov
hlt
imul
mov
xlat
sub
xchg
fstl
xor
imul
xchg
dec
jmp
adc
mov
push
pop
push
cmp
pop
iret
push
lea
jmp
push
rep
popf
cwtl
add
or
gs
scas
ja
lret
lods
std
pop
mov
in
mov
rcl
fistl
mov
pop
repz
mov
sbb
loopne
push
jmp
xor
scas
inc
ret
add
insb
cmpsl
outsb
jbe
cmpsl
mov
in
mov
push
mov
sahf
leave
mov
movsb
int
and
imul
arpl
in
es
aaa
mov
cwtl
das
aaa
and
inc
inc
pop
inc
sbb
fwait
mov
pop
cmpsb
jns
add
outsb
cltd
mov
cmp
leave
es
push
aam
xchg
dec
and
sbb
mov
cmp
mov
into
data16
inc
jno
dec
clc
xlat
test
scas
fisttpll
out
aad
jbe
out
jge
sbb
scas
jbe
int3
in
fwait
out
mov
xor
loope
push
nop
xchg
xor
pusha
xchg
dec
popf
inc
mov
sub
pop
lret
xchg
ljmp
loopne
js
ds
rcll
pop
inc
lods
jno
and
shl
flds
das
sahf
inc
xchg
mov
movsl
sub
lret
jno
sbb
mov
push
repz
test
cmp
dec
lret
aam
push
sub
push
cld
pop
mov
and
push
sub
lret
mov
mov
pop
imul
mov
test
inc
fiaddl
and
aad
in
shl
cmp
stc
mov
filds
inc
fdivrl
and
test
sub
xchg
sub
mov
gs
xchg
ljmp
cmpsb
add
lcall
ds
fs
in
lds
and
shlb
xorb
cmp
es
aas
sub
mov
ret
movsb
xchg
je
lahf
insl
push
jecxz
shrb
mov
mov
scas
es
pop
and
xchg
fisttpl
test
lahf
insl
push
inc
mov
sbb
test
cmp
add
sbb
in
sahf
lods
xor
nop
sub
int
lret
push
cs
xchg
scas
adc
jns
fcmove
cld
xchg
and
jns,pt
out
fdivrl
inc
or
fimuls
dec
inc
adc
in
xchg
mov
mov
push
ficoml
pop
cmpsb
loope
sbb
dec
dec
daa
push
cmp
outsb
sub
mov
xchg
sub
call
pop
aad
ret
or
bound
fidivrl
lahf
movl
pop
loopne
cmp
xchg
mov
shll
test
out
inc
xchg
mov
fbstp
and
pop
xor
aaa
and
lret
shrb
lods
lock
inc
out
cmp
pop
xchg
and
sub
cmp
mov
insl
cmpsb
mov
lcall
gs
mov
push
std
lea
fnstsw
sbb
in
mov
or
sahf
mov
pop
data16
dec
xchg
push
mov
addl
xchg
lods
dec
sbb
add
int
fwait
pop
loop
pop
and
push
jg
sub
inc
aas
add
imul
out
cltd
xchg
jo
pop
adc
cmp
loop
addr16
rolb
or
dec
xchg
les
lea
mov
dec
xchg
and
xor
dec
nop
xchg
test
push
adc
pop
dec
jecxz
data16
xor
add
mov
popf
sub
frstor
mov
leave
in
aas
dec
shrb
popf
sahf
add
clc
adc
leave
nop
cltd
add
adc
xor
push
out
sbb
xor
or
in
push
jno
out
aad
inc
int
js
nop
push
stos
shrb
repnz
into
jmp
mov
mov
shll
pop
dec
adc
xchg
add
and
jecxz
inc
fcomps
aad
enter
aaa
xchg
pop
and
adcl
pop
dec
pushl
pop
xchg
cmp
adc
fldcw
aas
or
mov
add
add
imul
test
les
jg
mov
and
sub
es
lcall
out
mov
repnz
lcall
out
jp
pushf
lret
dec
fisubs
repz
xchg
subb
pop
ljmp
ret
mov
xor
and
sub
and
enter
aaa
push
aad
out
fisttps
flds
cmp
bound
add
adc
add
mov
stos
sbb
add
data16
aam
mov
or
je
imul
sub
adc
cmp
xlat
aaa
and
stc
cmc
lahf
jne
mov
sbb
sti
xchg
mov
inc
inc
fisttps
jo
adc
xchg
mov
push
ss
imul
fistl
dec
or
mov
xor
outsl
stos
cmp
test
movb
xchg
lods
xchg
jne
dec
data16
adc
mov
sub
aaa
cmp
xor
test
je
fsub
ljmp
xchg
scas
push
fwait
adc
leave
push
mov
sbb
dec
xchg
and
sub
cmp
mov
jmp
bound
pop
pop
sbb
int
cs
sarb
jle
xchg
daa
cmp
mov
xchg
sbb
push
daa
add
jmp
dec
pop
cmp
aad
flds
orb
pop
push
js
mov
fwait
pop
adc
jo
mov
push
dec
xchg
int
adc
adc
mov
pop
mov
in
imul
mov
fsub
or
fs
pop
pusha
repz
mov
cmp
mov
pop
loopne
xchg
bound
mov
xor
jecxz
imul
icebp
lods
xchg
cmpsl
stos
pop
push
shl
xchg
xor
ret
xchg
and
inc
pop
push
sub
or
cmp
mov
cmc
sete
mov
jg
jl
mul
inc
push
popf
hlt
das
fdivrs
push
jns
pop
dec
sahf
cmp
in
jne
leave
sbb
into
inc
dec
loop
xchg
mov
std
movsb
mov
pop
jo
sarl
adc
es
shl
push
inc
insb
adc
push
adc
cmp
push
outsb
push
fdivrs
and
mov
or
inc
xlat
cltd
sbb
rorb
adc
adc
out
fchs
xchg
jne
mov
sahf
outsb
push
fsubp
sahf
call
enter
xchg
mov
dec
xor
mov
xor
fsts
jle
lods
sbb
dec
xchg
cs
ss
sbb
fwait
or
xor
les
popf
sbb
imul
fwait
pop
adc
cmc
int3
fwait
pop
adc
les
push
adc
or
mov
into
xchg
and
js
jnp
jo
lret
out
pop
push
xor
inc
mov
aam
jno
mov
ret
leave
fbld
push
sbb
nop
xor
mov
jno
pop
lock
sahf
inc
xor
pop
inc
shrb
cltd
mov
mov
rcrb
aam
mov
repz
push
adc
push
mov
rep
nop
xchg
jo
jg
pop
cmc
inc
fisttps
out
add
mov
pop
mov
add
syscall
fdivl
add
push
lods
or
push
adc
pop
iret
cmp
inc
or
fsubrl
arpl
push
push
adc
push
adc
cld
addr16
and
push
pushf
je
mov
fisubrl
lds
addr16
adc
adc
cltd
cmpsb
leave
std
daa
repnz
xchg
cmp
shlb
jbe
xor
icebp
stc
lea
mov
sbb
xchg
mov
pushf
inc
clc
shlb
int3
dec
mov
xchg
xchg
or
out
pop
mov
cmpsl
xor
repnz
js
mov
shlb
lods
cmp
ret
adc
imul
shl
in
sbb
push
xchg
push
jmp
test
dec
lock
pop
push
mov
or
jne
mov
int3
mov
pop
jne
and
cmpsb
test
ficoms
in
add
js
ret
clc
adc
jo
pop
adc
pop
clc
mov
outsl
shlb
les
push
pusha
in
stc
test
sub
inc
mov
pushf
jo
jmp
insl
rcll
sti
push
cmpb
push
in
push
mov
fptan
dec
cmp
adc
mov
insl
int3
and
call
or
fildll
loop
popf
movsb
dec
xchg
mov
loope
dec
sahf
cmp
dec
mov
add
shlb
mov
nop
sbb
adc
clc
push
cmc
popf
ret
lods
xor
loop
daa
jg
mov
gs
pop
push
adc
push
into
xchg
daa
dec
mov
repz
sbb
subb
cmp
insl
inc
stos
lret
xchg
pop
fchs
in
mov
cmp
std
adc
mov
lret
adc
lahf
jae
in
js
out
xor
xlat
sub
mov
fs
test
pop
cmp
mov
xchg
jns
jp
pop
xchg
das
xlat
or
sbb
adc
cmp
int3
xor
xchg
test
mov
sub
shll
xchg
sub
cmp
divps
dec
sahf
stos
sub
mov
mov
loop
lret
call
xor
rorb
rcrl
pop
sbb
cmp
pop
cmp
push
fldcw
cmp
loope
lock
cmp
in
fwait
ss
push
sbb
and
jo
aad
or
cmp
out
jmp
push
sbb
jne
lret
xor
and
xchg
mov
scas
int
cli
insl
jbe
shlb
and
decb
loopne
dec
xchg
daa
jbe
aas
test
repnz
fwait
ss
js
push
insl
mov
push
loopne
dec
xchg
daa
loope
ret
xchg
int
and
ficompl
adc
adc
jmp
xlat
das
out
xchg
and
jmp
add
imul
cmpsl
inc
faddl
dec
xchg
push
cmp
and
popf
sub
in
cwtl
jg
fnstenv
xchg
and
bound
pop
das
pusha
dec
xchg
and
out
arpl
lret
mov
test
rcrb
stos
inc
popf
popa
movsl
pushf
sub
sbbl
jae
pop
loopne
jns
cmp
aad
inc
call
mov
pop
xchg
jmp
sub
mov
push
pop
hlt
stos
cs
cltd
mov
in
mov
movsb
or
clc
in
mov
xor
jo
push
push
lods
mov
dec
push
cld
xor
mov
fdivrl
lret
sub
insb
outsb
shrl
in
movsb
push
xchg
and
nop
sbb
adc
cmpsl
add
xchg
sub
orb
pop
nop
sbb
adc
jecxz
adc
jno
repz
xchg
adc
add
out
dec
subl
mov
mov
jns
lods
add
movsb
pushl
pop
jb
inc
fadds
lods
repnz
mov
mov
mov
aam
xor
dec
dec
enter
jge
xchg
push
fisttpl
repnz
cmp
pop
dec
xchg
sti
fwait
xchg
xchg
jle
in
test
jb
imul
pusha
test
mov
and
jge
mov
add
andl
mov
outsb
inc
add
mov
insl
in
dec
mov
popa
hlt
mov
shr
adc
in
mov
and
cs
or
out
cmp
iret
xchg
fstpl
les
sub
push
repz
leave
push
push
jnp
addr16
inc
daa
ss
nop
subb
xchg
cld
cli
inc
fisubl
ljmp
sbb
mov
cwtl
das
sub
es
mov
aam
lcall
enter
push
dec
adc
aas
stc
jae
xor
dec
xor
ret
sub
push
dec
cli
xor
pop
sub
dec
xchg
and
loope
enter
in
lea
mov
sbb
arpl
add
dec
xchg
mov
loope
or
into
and
xchg
data16
gs
pop
jmp
aam
inc
fnstenv
pushf
or
sbb
inc
xchg
xchg
clc
inc
adcb
and
xchg
daa
cmp
idivl
out
insl
inc
xlat
test
inc
xchg
pop
mov
dec
push
fnstsw
jmp
or
ss
push
xor
push
cmp
lret
lock
mov
fadds
push
mov
shl
xor
and
mov
adc
sbb
and
or
out
pop
movsb
mov
xlat
inc
addr16
fistps
ret
mov
adc
sbb
and
or
out
or
push
xchg
inc
addr16
fistps
ret
mov
adc
sbb
and
or
out
sub
push
xchg
inc
addr16
fistps
ret
mov
adc
sbb
and
or
out
xor
xlat
inc
addr16
fistps
enter
icebp
gs
xchg
push
jp
push
xchg
daa
dec
pop
pop
mov
inc
fistps
or
sbb
jno
push
movsb
lea
push
mov
cmp
or
cmp
ss
sbb
inc
or
mov
dec
cmp
dec
ljmp
mov
push
sbb
dec
xchg
sub
jmp
xor
daa
dec
pop
mov
popf
ss
into
jge
js
icebp
rcrl
insl
fs
loope
mov
mulb
imul
and
or
xor
leave
xchg
pop
and
dec
xchg
daa
pop
lock
popf
sahf
sbb
imul
repnz
insb
shrl
pop
mov
mov
or
call
es
mov
adc
adc
mov
aas
jb
iret
mov
pop
pop
dec
adc
aaa
add
push
mov
pushf
test
les
pop
jb
std
ds
aas
addr16
movsb
or
filds
push
and
pop
insl
or
inc
jle
scas
fdivr
loope
loopne
jg
push
jne
dec
push
stos
rcll
fwait
push
jecxz
dec
mov
cli
cld
adc
adc
dec
xchg
mov
sbb
add
and
cmp
pop
adc
cmp
cmp
fwait
out
cs
add
lret
int3
leave
idiv
movsb
sub
aam
data16
xor
dec
mov
adc
xchg
sub
mov
movsl
push
xlat
jg
inc
jb
into
movsb
jl
loop
out
repnz
adc
adc
jnp
mov
mov
fxch
in
inc
mov
sbb
cli
mov
jb
push
pushf
jae
xchg
cld
or
adc
mov
lcall
mov
pushf
cmp
jp
sbb
jge
mov
mov
and
mov
je
push
outsb
adc
out
out
mull
pop
pop
adc
cmp
arpl
dec
pop
mov
mov
ret
sbb
or
sbb
das
cmp
pop
add
cmpss
not
imul
sbb
mov
cmp
out
mov
aas
jge
daa
ret
in
stc
push
sbb
push
loopne
adc
mov
repnz
inc
pop
fiadds
out
or
dec
pusha
pop
add
fnstsw
mov
mov
adc
sub
push
pop
ret
jmp
mov
jno
jbe
adc
inc
jnp
add
movsb
dec
out
add
pop
leave
pusha
mov
aas
aad
add
pop
lods
movsb
out
pop
dec
xchg
lods
scas
ljmp
add
aam
fwait
xchg
je
repz
popa
adc
hlt
shrb
mov
pusha
dec
lret
fdiv
cmp
ss
into
insl
push
or
aad
sub
in
pop
pop
adc
mov
icebp
or
enter
scas
add
jg
sub
add
sub
mov
fdivs
out
jmp
ret
loope
jp
add
std
dec
xor
dec
sahf
cmp
les
adc
fcompl
xor
cmp
push
movsb
cmp
jae
loope
or
xorl
scas
inc
add
dec
out
lret
lds
insl
fistpl
shll
jg
repnz
jecxz
imul
mov
cs
lcall
xchg
scas
or
aad
pushf
pop
adc
xchg
ficompl
lahf
lods
cmpsb
inc
jbe
mov
fildl
pushf
pop
adc
jge
sub
insl
sub
sbb
xor
xchg
add
jbe
mov
jae
xchg
sub
in
pop
pop
adc
cmp
fwait
or
adc
js
das
xlat
mov
and
adc
cmp
adc
insb
out
sahf
jbe
sbb
push
jecxz
sbb
jae
xchg
sub
add
sub
xor
ss
jle
sbb
push
cmp
cmpsb
out
int3
mov
fbstp
mov
insb
mov
outsl
and
sar
wrmsr
xor
leave
xchg
mov
push
lock
mov
js
push
adc
sbb
push
dec
sbb
push
cmp
test
pop
lds
lret
mov
pushaw
arpl
and
jb
and
xor
scas
and
in
bound
addr16
mov
loopne
cltd
adc
push
push
cmp
clc
add
mov
jp
jno
xlat
jnp
out
in
data16
push
add
stos
mov
jmp
add
sbb
sub
dec
jbe
ret
pop
into
cmc
adc
rclb
fdivrl
mov
inc
dec
into
lcall
xor
inc
or
add
stos
addb
nop
cmp
shlb
movsl
addr16
pop
pop
fwait
mov
repnz
lret
pop
inc
insb
push
out
lods
iret
lret
add
daa
shl
mov
addr16
mov
cli
mov
sub
xchg
scas
rorb
or
cmp
mov
mov
xchg
inc
mov
xchg
sbb
xchg
dec
loop
addl
cmp
mov
pop
dec
jb
adc
cld
jp
fs
subl
mov
mov
dec
xor
dec
adc
inc
outsl
mov
stc
cltd
lahf
push
enter
inc
loop
dec
loop
mov
xchg
sbb
adc
fdivrs
sub
mov
add
xor
inc
outsb
test
mov
popf
aaa
test
aas
aas
loope
mov
sarl
mov
sbb
int
xchg
nop
xchg
adc
call
bound
inc
inc
mov
les
aam
adc
mov
hlt
outsl
push
stc
and
pop
pop
repnz
mov
test
or
lods
std
movsl
fwait
psubb
add
pop
mov
or
test
pop
sub
sub
dec
pusha
push
cmpsl
xchg
bound
bound
shlb
push
lea
mov
push
icebp
lret
dec
ret
push
mov
sbb
in
pop
xchg
and
test
xchg
mov
add
mov
push
mov
sub
call
xor
sarl
pop
jecxz
mov
xor
ret
dec
and
fs
jnp
es
out
push
inc
pop
int
shlb
or
adc
xchg
scas
push
movl
xchg
shrb
mov
gs
cmp
fdivrs
popa
dec
mov
nop
inc
insb
xchg
push
jo
jnp
or
mov
leave
adc
in
movsl
movsl
push
sahf
cmpsb
sbb
cmp
int
xchg
scas
inc
jl
gs
imul
fdivr
and
cmp
popf
xchg
or
ss
scas
push
fwait
adc
lods
or
mov
fdivp
xchg
je
fisttpl
ljmp
sbb
and
mov
pop
adc
cmp
mov
push
std
mov
ret
cld
nop
scas
adc
insl
fcmovb
or
inc
xchg
and
repnz
cmp
mov
mov
call
mov
inc
jg
je
jns
imul
xchg
sub
cmpsb
xchg
and
test
sub
int
ss
imul
shlb
mov
adc
cmpsl
mov
mov
xchg
daa
jmp
dec
mov
mov
push
mov
gs
and
ss
sahf
dec
outsb
xor
cmp
data16
or
inc
pop
adc
mov
push
sbb
lret
nop
and
pop
adc
pop
adc
mov
inc
pop
adc
adc
inc
xchg
pop
adc
pop
arpl
xchg
jmp
repnz
xor
aas
shll
int3
lret
cmp
jns
pop
pop
adc
cmp
adc
cmpsl
push
in
pop
pop
adc
dec
sbb
shll
roll
mov
jle
orl
xor
add
gs
xchg
imul
data16
ljmp
popf
add
adc
adc
lock
jbe
ds
inc
mov
push
jge
aaa
jb
scas
std
and
sbb
mov
add
and
jl
stos
mov
xchg
gs
in
push
imul
add
ja
outsl
pusha
jp
adc
mov
xor
int3
dec
stos
shlb
inc
xchg
push
ss
pop
cmpsl
inc
out
adc
daa
dec
sbb
pop
aad
push
scas
fdivrl
outsb
mov
xchg
sub
gs
lods
rol
adc
mov
or
mov
test
inc
mov
lods
push
mov
pop
adc
fidivrs
shr
enter
aam
mov
and
je
mov
fcoms
push
adc
or
jbe
inc
jl
mov
push
add
sub
sub
lret
and
add
adc
mov
dec
dec
mov
jbe
jmp
xor
ret
lock
out
pusha
in
push
adc
dec
jae
arpl
jle
jp
pop
dec
arpl
mov
into
xor
mov
adc
adc
dec
sti
rcrl
ficoml
imul
pop
cltd
mull
sub
ret
lock
mov
lret
aam
les
push
adc
sbbl
sbb
prefetchw
or
sbb
or
push
adc
xor
cltd
mov
lea
fistps
out
out
adc
stos
fwait
call
es
or
lahf
mov
sub
into
stos
jmp
int3
fptan
scas
xor
and
adc
adc
dec
mov
adc
icebp
and
dec
adc
mov
push
mov
mov
pop
test
sub
out
adc
shll
add
push
adc
pop
jne
pop
sub
addr16
and
jns
adc
adc
in
pop
pop
adc
sbb
pop
adc
or
xor
outsb
sbb
or
dec
push
and
mov
in
sub
jb
mov
jmp
test
pop
les
push
adc
xor
fwait
xor
lods
insl
fstpt
jmp
sbbl
and
and
xor
mov
lods
scas
cmpsb
lcall
insl
xor
mov
cs
jl
dec
mov
mov
or
mov
push
nop
inc
mov
fwait
ss
and
mov
push
adc
pop
mov
cmp
dec
xchg
xor
cmp
mov
cmp
dec
sbb
mov
pop
dec
mov
add
jecxz
nop
out
sarb
adc
cmpsb
ret
shrb
mov
adc
push
adc
jae
inc
push
or
xor
out
hlt
mov
and
xor
out
sahf
push
push
sub
jmp
sbbl
pop
adc
mov
lret
adc
addr16
and
icebp
push
popa
sahf
cmp
mov
jecxz
ss
xor
adc
adc
gs
jl
outsb
movsl
out
ds
rcr
out
mov
push
jnp
xor
cmp
lds
jns
adc
movsb
popa
sahf
cmp
mov
and
inc
adc
adc
cs
mov
sbb
push
adc
pop
pop
adc
sbb
pop
adc
es
fs
jbe
push
repz
jge
push
sbb
inc
pop
loopne
mov
pop
add
xchg
leave
mov
push
adc
inc
orl
adc
outsl
xlat
mov
sti
or
dec
push
ss
inc
movb
into
mov
pop
adc
xchg
pop
adc
xor
and
js
pop
ret
adc
das
jle
fwait
and
in
fwait
rorb
push
shll
mov
sub
mov
fisttps
sar
sbb
adc
adc
or
pop
lods
adc
adc
negb
fwait
mov
adc
cmpsl
leave
imul
adc
scas
mov
out
xor
hlt
sbb
or
gs
mov
outsl
xchg
leave
lret
sub
mov
sub
add
cmp
mov
push
adc
xor
push
nop
cld
imul
or
movsb
jne
xchg
push
jb
jo
xchg
fcoms
push
adc
pusha
mov
mov
inc
repz
inc
mov
add
and
lock
sub
popa
push
fcmovne
movsb
rcrb
les
push
adc
xlat
pop
pop
add
cwtl
ret
or
xor
mov
mov
sahf
js
pop
in
sbb
xchg
xchg
cmp
xchg
ds
or
add
dec
lock
add
data16
pop
adc
int3
sbb
adc
push
test
mov
popf
mov
out
lret
mov
lahf
mov
sub
les
push
fldt
push
and
mov
fcmovnb
out
mov
dec
lock
cmpsb
sub
loop
fwait
pop
adc
fcompl
push
adc
push
scas
idivb
vphaddbw
es
add
adc
xchg
fs
inc
into
pop
test
shlb
in
sbb
xor
dec
mov
pop
jno
cmp
and
xchg
lock
add
sbb
inc
pop
adc
or
into
pop
adc
sub
adc
insb
adc
pop
adc
pop
push
adc
pop
adc
adc
rorl
fidivl
jo
shll
ret
cmp
or
mov
in
sbb
mov
xlat
or
hlt
xchg
aad
sbb
adc
inc
mov
fnstenv
adc
pop
adc
pop
adc
fwait
jns
sub
and
add
sbb
int
mulb
fisubl
push
adc
cli
lret
mov
dec
xchg
stos
mov
inc
lret
int
ja
sbb
adc
or
and
xor
in
sub
jb
loop
adc
dec
sahf
mov
pop
xchg
jg
and
mov
sbb
imul
dec
xchg
lret
cmp
cmp
or
sbb
bound
xor
lock
mov
dec
xor
mov
ja
xchg
and
inc
xchg
add
pop
adc
aaa
addr16
and
push
aad
and
and
lcall
jg
icebp
stc
sbb
gs
cmp
jmp
cmpsb
jl,pn
cmc
in
test
add
push
adc
or
and
xor
in
sub
jb
loop
adc
dec
sahf
mov
pop
xchg
jg
and
mov
sbb
gs
xor
lds
cmc
in
or
fs
fisubl
lock
xor
cs
inc
pop
adc
inc
pop
adc
loope
rclb
adc
push
adc
push
movsl
pop
outsl
pop
dec
xchg
pop
jne
sti
sbb
int3
lcall
mov
aad
sbb
adc
nop
and
pop
pusha
inc
pop
adc
dec
inc
pop
adc
cs
js
jge
sbb
shrl
xor
sbb
arpl
xchg
in
pop
pop
adc
out
sbb
adc
sbb
adc
push
xor
push
adc
xchg
cmp
shll
ja
lds
aad
mov
adc
imul
in
sbb
pop
rcrb
in
pop
pop
adc
push
adc
shlb
movsl
or
lock
xchg
and
jl
pop
mov
inc
pop
clc
pusha
jp
adc
repnz
jecxz
outsl
add
lods
lahf
xor
out
sub
pop
adc
push
shl
adc
test
xor
push
adc
jne
repnz
push
stos
fwait
stos
mov
pmaxsw
push
xchg
das
push
inc
add
stc
in
push
in
sbb
mov
icebp
js
sysenter
xchg
sbb
es
cmp
lock
push
inc
pushaw
rorl
cmp
xor
adc
xorb
dec
xchg
mov
adc
sub
mov
add
call
je
xlat
pop
dec
or
outsb
aaa
mov
xor
pop
adc
xchg
add
push
adc
inc
outsl
cmp
cmpsl
add
and
adc
xor
shlb
push
cld
bound
jg
cmpsb
ds
js
pushf
pop
adc
mov
push
cmp
in
mov
adc
outsl
sbb
sbb
pop
cmp
add
leave
cmp
fcompl
test
movsb
idivl
fcomps
inc
or
xchg
ret
repz
clc
pop
push
and
push
pop
testb
fstpt
push
pop
repnz
test
mov
rcll
ret
pop
xor
sub
jmp
add
pop
adc
cld
adc
adc
or
or
popa
push
lret
xor
rcr
js
jle
test
xchg
adc
cmpsl
mov
ljmp
xchg
in
pop
pop
adc
or
repz
rcrb
ret
scas
xlat
mov
mov
push
mov
ret
aad
sbb
test
and
insb
jle
out
scas
enter
movsb
mov
jecxz
outsb
inc
sbb
out
rcrb
xchg
lret
xor
sbb
cwtl
loop
mov
inc
inc
lahf
ret
out
shll
push
adc
pop
or
dec
xor
out
lret
adc
fisubl
into
movsb
xchg
push
fstpl
xor
fstp
ja
movsb
out
xor
jle
dec
sbb
xchg
fwait
ss
jl
sbb
ds
gs
and
mov
popf
pop
adc
popf
pop
adc
pop
cld
adc
adc
and
int
lret
popf
pop
adc
adc
mov
sbb
loopne
pop
adc
js
daa
inc
pop
mov
xor
les
push
xor
jns
or
repz
pop
jge
sub
xor
mov
pop
out
inc
lahf
ret
jae
sbb
mov
sbb
push
pop
xchg
and
xor
jns
inc
imul
test
mov
xor
xor
and
xor
das
repz
mov
xor
mov
jbe
je
xor
gs
movsb
dec
xor
cmp
cmp
pop
icebp
lock
insl
jl
mov
mov
ja
movsl
out
xor
dec
lahf
ficomps
xchg
lds
insb
jge
sbb
xadd
leave
xchg
pop
sub
fs
daa
mov
popf
pop
adc
xor
pop
adc
cld
adc
adc
add
addl
in
push
xchg
and
push
vpshaq
add
push
adc
jle
push
or
int3
mov
jne
shlb
jo
jns
adc
std
push
into
xchg
push
lret
das
cli
scas
jle
bound
jb
mov
mov
xchg
push
orl
mov
mov
push
addr16
push
jmp
jl
rolb
add
xor
sub
je
jecxz
daa
stos
fwait
mov
cwtl
out
pop
ss
jno
add
test
dec
push
mov
mov
xchg
mov
fidivs
mov
xchg
mov
popa
repz
in
push
enter
rcrl
imul
adc
stc
arpl
out
jg
inc
dec
insb
outsb
push
fdivrl
fmuls
jmp
mov
cmp
fnstenv
popf
pop
adc
mov
loopne
pop
jmp
add
mov
fimuls
mov
inc
and
lcall
mov
addr16
push
mov
push
jno
mov
inc
cld
xor
std
imul
xchg
stos
or
xchg
ljmp
lahf
notl
dec
pop
jne
aam
adc
ds
mov
scas
pop
loop
sbbl
sbb
imul
dec
adcl
out
inc
push
gs
mov
fldl
mov
push
orb
inc
adc
mov
jbe
es
jmp
lret
xchg
int
sarb
imull
popf
pop
adc
xor
adc
adc
push
ja
jo
out
cmpsl
or
in
cltd
loopne
cmp
jb
add
enter
sub
mov
xor
jge
xchg
fisubrl
dec
dec
and
mov
or
mov
mov
ret
cmpsb
arpl
mov
icebp
mov
xchg
sbbb
js
xchg
jne
mov
push
adc
jbe
xor
add
std
mov
pop
fbstp
test
icebp
and
xchg
jne
lods
sbb
push
gs
std
mov
pop
fbstp
movl
adc
inc
adc
mov
sbb
outsl
es
ds
mov
mov
loope
insl
fidivl
adc
push
enter
shl
movsl
and
in
xor
dec
mov
mov
cwtl
sbb
js
lret
hlt
or
inc
dec
xchg
sub
mov
mov
in
sbb
gs
std
mov
lock
xor
sbb
out
cmp
push
sbb
gs
stos
pop
mov
out
les
add
push
adc
xchg
and
mov
sahf
pop
adc
pusha
dec
in
lret
dec
outsb
inc
xor
xor
xchg
sbb
sbb
adc
xchg
mov
dec
xchg
daa
fmuls
inc
push
insl
ficoml
into
jg
or
xchg
ret
gs
movsb
dec
xor
out
mov
sahf
cmp
push
dec
fisubl
insl
fcmovb
shlb
cmp
and
xor
cmp
xchg
and
mov
call
lret
jne
mov
mov
and
fidivrs
mov
xor
and
nop
lret
test
out
shll
test
cmc
sub
cmp
adc
lock
out
insb
scas
imul
jmp
sahf
pop
adc
cmpsl
dec
xchg
daa
add
pop
adc
nop
cld
adc
adc
loop
addr16
inc
idivl
imul
dec
xchg
push
xor
and
lods
sbbb
mov
ss
nop
push
xor
shrb
lret
sub
push
icebp
shr
ret
popa
and
xchg
loopne
jns
cmp
call
mov
sahf
dec
stc
xchg
pop
sub
stos
or
jmp
pop
insb
out
jbe
in
add
add
lds
in
and
add
mov
mov
ret
andl
and
dec
xchg
outsl
add
xor
icebp
sbb
sbb
roll
shrl
mov
mov
mov
popa
and
fnstcw
mov
test
test
test
push
adc
lret
and
inc
mov
movsb
adc
adc
rorb
ret
push
add
mov
jne
add
dec
jno
cmp
repnz
repnz
adc
adc
packuswb
jle
push
dec
insl
mov
jbe
push
or
or
test
jne
arpl
pop
pop
adc
popa
aas
mov
pop
adc
inc
or
icebp
xchg
push
adc
lahf
aad
adc
cld
jnp
mov
mov
sub
inc
fnsave
add
sbb
push
mov
sub
dec
movsl
mov
jno
mov
dec
ret
adc
scas
dec
int3
push
cmp
out
push
jbe
xchg
mov
push
adc
xchg
mov
jl
lods
icebp
push
jecxz
mov
and
scas
jle
rcll
xchg
push
ret
mov
cltd
cli
das
enter
or
pop
pop
adc
loope
int
sbb
pop
adc
sub
popf
mov
ss
dec
cmp
xor
pop
mov
inc
stc
std
mov
iret
enter
ret
push
lock
pop
push
movsb
ret
jo
push
adc
mov
or
test
adc
mov
inc
arpl
xchg
xchg
dec
dec
fcomps
xchg
daa
push
popa
movl
inc
mov
sbb
push
movsb
cmp
push
dec
xchg
daa
loopne
and
or
mov
mov
xor
push
adc
xchg
sub
mov
int3
jecxz
inc
add
out
xor
pop
test
aam
or
int
sub
push
movsb
dec
mov
xor
xchg
mov
sbb
sbb
fisubrl
or
dec
push
int3
xchg
sub
mov
xor
mov
sbb
pop
pop
fucom
int
mov
shlb
lret
and
addr16
daa
cmp
int
cltd
int
mov
pop
aaa
cld
ja
xor
scas
mov
sbb
adc
and
jge
outsb
cmp
sbb
push
gs
fwait
jns
test
lock
int
jbe
insl
ficompl
jns
pop
cmp
push
adc
xlat
dec
xchg
and
cmp
xor
sbb
fs
jp
pop
xchg
das
pop
in
jle
dec
dec
lret
and
cmp
sahf
ret
xchg
lods
mov
ss
ficompl
mul
int
mov
dec
cmp
mov
add
add
test
sbb
mov
dec
dec
lret
sub
dec
xchg
and
test
popa
ret
add
mov
fidivl
and
xor
or
sub
adc
xchg
mov
sbb
cmpsb
or
and
daa
fbstp
mov
cmp
and
aam
jb
mov
push
adc
adc
nop
and
xlat
dec
push
lock
sub
jns
jmp
sbb
out
repz
mov
mov
push
insb
pushf
jnp
repz
movsl
fdivl
scas
or
lcall
inc
popf
pop
cld
incl
inc
ljmp
sbb
mov
rcl
mov
adc
repz
and
sub
sub
xor
and
pop
insb
xor
lock
jno
xchg
sub
and
mov
push
cmpps
sbb
inc
inc
jp
xor
sub
or
sbb
stos
in
loopne
pop
adc
xchg
fs
stos
out
push
clc
inc
adc
out
insb
jge
je
xor
xchg
or
add
jecxz
jmp
sahf
and
xchg
lahf
cs
data16
pop
pop
adc
stc
add
push
adc
mov
stc
inc
mov
inc
push
in
iret
push
xlat
mov
adc
mov
or
xchg
fists
xchg
and
inc
xchg
inc
gs
xor
pusha
fwait
loope
or
orl
xchg
sub
fiadds
mov
data16
int
jle
cli
xchg
fidivs
pop
pop
adc
adc
std
xchg
push
xor
lods
mov
gs
in
ljmp
in
lea
rorl
sbb
scas
dec
or
xchg
loop
shll
decl
cmp
clc
dec
xchg
aas
jae
sbb
scas
sbb
stc
sub
push
lea
fisttpl
mov
jle
ss
fldl
js
out
pop
cltd
adc
jmp
lret
xchg
cmc
sub
sbb
pop
push
in
xchg
jecxz
loope
loop
repnz
int3
pusha
shrl
cmc
lcall
lcall
call
mov
pop
jl
dec
test
in
push
repz
jmp
adc
dec
xor
repnz
xlat
loope
aam
movsb
dec
add
cmp
xchg
fwait
ss
lods
lcall
add
lret
sbb
bound
mov
jp
inc
xchg
das
pop
inc
int3
ja
xor
out
pop
jl
dec
cmp
cwtl
sti
cmp
repz
pop
pop
adc
inc
xchg
sbb
pop
adc
sbb
cmp
dec
jno
jp
out
or
pop
pop
adc
inc
xor
insl
add
nop
pop
pop
push
movsb
out
sbb
mov
jns
lcall
push
and
xor
in
popf
pop
adc
sbb
cmp
adc
lock
lods
lcall
xchg
sbb
lret
std
sarb
ljmp
push
repz
loope
inc
fidivl
out
leave
pop
push
loopne
jo
daa
mov
cmp
sbb
xor
adc
pop
adc
adc
das
ret
push
inc
into
mov
xlat
adcl
xchg
das
mov
clc
or
inc
fisttps
addr16
and
sub
mov
cmp
rclb
push
lret
lock
mov
jns
jae
jmp
imul
clc
or
es
lret
jl
dec
test
push
xchg
daa
jmp
sahf
pop
adc
xchg
adc
adc
int
add
inc
aam
xchg
and
test
jecxz
inc
add
out
xor
pop
test
pop
or
dec
dec
lret
xchg
adc
fisubs
and
lahf
adc
loopne
xchg
and
sbb
mov
sub
mov
loop
dec
nop
mov
xchg
test
cltd
cmc
imul
pop
cltd
imul
icebp
jne
pop
int
adc
add
cmp
test
mov
jno
lret
sbb
jmp
sbb
call
test
push
jge
mov
mov
jecxz
fwait
ret
fildll
adc
addr16
fcoms
xchg
and
adc
inc
data16
outsb
lock
pop
fmuls
cmp
or
call
xor
lods
imul
sub
int
adc
inc
or
jge
cmpsl
daa
mov
fnstenv
jecxz
add
lea
and
dec
xchg
cmp
cmpsl
leave
adc
inc
iret
lahf
xor
push
sbb
adc
movsb
shrb
int
mov
int3
push
notb
or
cmp
sbb
mov
imul
adc
xchg
ret
rclb
popf
and
adc
hlt
xor
or
mov
lods
mov
scas
xorb
sub
addb
mov
inc
jns
jae
into
jne
mov
mov
sbb
clc
jbe
sub
into
in
push
dec
test
cld
popf
dec
cmpsl
loope
test
loop
pop
sbb
or
push
mov
mov
jl
add
pop
adc
imul
sbb
sbb
pop
nop
daa
imul
sahf
mov
pushf
lock
divb
dec
cmp
aad
inc
cmpsl
inc
sbb
sub
jno
sbb
adc
cmp
es
nop
jns
out
jecxz
xor
stos
adc
lcall
mov
movsl
dec
dec
mov
insl
dec
popa
flds
mov
push
lods
lea
popf
and
mov
or
pop
pop
adc
ficompl
sbb
loope
cwtl
push
jge
xor
clc
arpl
sahf
jl
mov
adc
test
out
movsb
mov
push
adc
addl
dec
sbb
inc
bound
jle
ret
stc
ja
dec
jb
shrb
xor
or
xchg
or
ret
push
jae
xor
mov
call
cmp
out
fwait
jl
hlt
mov
mov
sbb
lods
fdivs
loop
adc
dec
sahf
mov
xchg
mov
inc
push
in
xchg
push
or
lcall
loopne
cmp
jns
jp
push
xchg
das
aad
std
and
xor
mov
xor
in
mov
lea
sbb
lods
sbb
gs
and
sti
mov
jns
lock
lahf
jg
les
or
inc
dec
lret
xchg
pop
mov
orb
popa
sahf
cmp
mov
test
das
in
xchg
xchg
adc
mov
sahf
or
sbb
aaa
fisubrl
dec
sbb
mov
push
push
aaa
cld
xchg
xor
out
pop
jl
dec
ds
loope
or
mov
adc
adc
mov
pop
dec
mov
insl
pop
popa
sahf
cmp
or
xor
jbe
xor
ja
xor
out
and
xchg
daa
mov
cmp
mov
int
ss
cmpsb
mov
and
outsb
jns
out
pop
mov
dec
fcomps
xchg
daa
cmp
out
mov
dec
adc
push
test
mov
xor
push
pop
sub
addr16
and
scas
scas
jmp
xchg
outsb
jge
xor
mov
inc
hlt
jbe
sbb
lret
inc
in
test
fstpt
cmp
enter
test
push
nop
xor
in
sbb
mov
inc
dec
xchg
mov
int3
lcall
adc
mov
or
pop
mov
daa
add
or
add
sbb
lock
leave
inc
test
push
lea
cmp
pusha
loope
push
stos
fdivrs
call
outsl
hlt
sbb
or
aas
sub
sub
gs
or
sbb
pop
pop
aad
sbb
sub
add
ss
jge
cli
adc
fadd
xor
pop
lds
mov
push
or
addl
pop
adc
imul
xchg
in
pop
pop
adc
cld
icebp
and
adc
mov
pop
pop
adc
add
fwait
mov
mov
xchg
cmpsb
mov
jno
mov
iret
xchg
adc
in
pop
pop
adc
sbb
pop
adc
lods
xor
mov
fmuls
pushf
lds
pop
inc
imul
adc
adc
ret
adc
call
mov
cmp
xor
mov
sbb
push
hlt
fldl
dec
test
pop
icebp
and
add
jle
sahf
inc
enter
scas
and
sbb
adc
fiaddl
scas
test
cmp
arpl
cmpsb
shlb
xchg
popf
data16
push
adc
pop
nop
pop
pop
adc
pop
mov
and
pop
pop
adc
rcrb
pop
dec
into
jbe
ficoml
enter
arpl
pop
adc
pop
mov
pop
adc
lahf
mov
adc
mov
add
mov
adc
mov
adc
or
cmp
xor
sub
inc
add
pushf
pop
adc
inc
inc
dec
xor
imul
in
pop
pop
adc
les
pop
pop
adc
rcll
in
pop
pop
adc
sahf
or
jno
cmp
mov
xchg
pop
pop
adc
pop
in
dec
rcrb
sbb
cltd
mov
rclb
lret
inc
vpaddq
sbb
imul
pop
push
sbb
adc
adc
jmp
test
sbb
imul
out
mov
inc
hlt
sbb
aaa
mov
pop
add
decb
in
mov
mov
jmp
mov
popf
pop
adc
shrb
adc
movsl
or
push
mov
or
mov
jl
or
xor
cmpsl
enter
mov
adc
int3
popf
pop
adc
adc
cmp
enter
ss
adc
adc
inc
dec
clc
popf
pop
adc
jle
adc
adc
ret
fcompl
std
fwait
ss
adc
popf
pop
adc
cld
adc
adc
jecxz
popf
pop
adc
add
push
adc
inc
js
xchg
sub
pop
adc
lahf
jg
xor
scas
aaa
xor
shrb
sahf
pop
adc
dec
push
les
cld
adc
adc
add
pop
adc
push
out
xor
int3
in
pop
pop
adc
and
or
adc
dec
xchg
out
ffree
popa
jecxz
enter
cmp
and
push
mov
loopne
xchg
pop
and
mov
lods
lcall
lret
addr16
mov
mov
insl
fdivs
out
xor
cmpsl
pusha
jp
adc
adc
cmc
fs
pop
pop
mov
push
xor
ficompl
inc
int
scas
mov
xchg
loop
repnz
lea
rep
ss
xchg
jns
and
mul
xchg
ret
mov
inc
nop
and
add
outsb
pop
adc
in
cmp
lret
jl
les
out
adc
mov
fwait
xor
pop
sub
xchg
int3
fcoms
push
adc
scas
cmpsl
mov
pop
push
fwait
adc
dec
jnp
adc
adc
pop
sub
test
adc
sbb
nop
mov
sbb
std
mov
adc
push
adc
mov
pop
push
repz
mov
mov
fnstcw
add
pop
lahf
dec
xchg
xchg
cmp
aam
cmpsl
add
ret
test
je
cmpsl
mov
push
adc
mov
data16
pop
pop
lds
fs
stos
mov
sti
mov
add
outsb
pop
mov
adc
adc
fildl
in
std
or
jo
rolb
xor
mov
dec
outsl
add
xor
sbb
pop
adc
je
pop
fs
lahf
fiaddl
push
adc
pop
adc
daa
sbb
popa
es
push
adc
adc
push
mul
enter
push
adc
lret
cwtl
cs
lret
jl
sbb
adc
ljmp
orl
lret
clc
mov
inc
movsb
jne
pop
out
push
ja
xchg
dec
clc
mov
test
jb
stos
add
push
js
jae
xor
xor
mov
inc
repnz
or
daa
xor
rorb
cmc
lock
pop
jmp
jno
jecxz
ret
hlt
jecxz
xchg
jne
movsl
dec
and
jp
popa
jne
out
dec
lcall
sti
ret
inc
mov
mov
dec
sbb
frstor
aam
jl
inc
rolb
push
adc
mov
aam
adc
adc
fldt
fistpl
jne
sbb
sub
cmc
jl
inc
popf
xchg
es
pop
or
jl
dec
inc
dec
jmp
cwtl
loopne
push
adc
mull
jecxz
aad
rcl
test
xchg
loopne
iret
in
jb
push
jle
jo
popf
jle
repz
jo
inc
dec
inc
pop
lods
or
je
fcoms
push
adc
add
fdivs
cs
mov
mov
outsl
dec
lahf
call
lods
insl
jae
dec
pop
cmc
push
fcmovb
js
push
adc
cmp
mov
rolb
push
jae
jecxz
push
aaa
mov
fwait
movsl
iret
lods
pop
xor
push
push
adc
pop
icebp
call
mov
movsl
mov
out
sub
mov
enter
jns
adc
inc
and
cmp
pop
push
adc
or
enter
push
ja
popf
fcmovne
or
je
repnz
repnz
pop
js
xchg
movsb
out
pop
jbe
aam
mov
push
adc
mov
push
loop
xor
ficoml
mov
push
adc
add
push
inc
icebp
xor
push
adc
mov
mov
lahf
movsb
ret
popa
and
fs
movsl
sbb
push
adc
cmpsb
stos
cwtl
pop
push
xchg
cmpb
or
pushf
stos
fs
dec
subb
jg
mov
adc
pop
sti
daa
and
insl
xor
aam
je
adc
adc
mov
or
xchg
xchg
sub
jb
sbb
out
cmp
jns
or
mov
shrb
cld
push
jg
mov
sub
push
adc
jbe
fldpi
scas
daa
lds
jns
adc
and
insl
fcmove
push
and
jg
movsl
mov
in
pop
adc
pop
cmp
pop
int
in
xchg
aas
mov
or
sbb
sbb
addr16
insl
movsl
ds
js
dec
push
mov
mov
in
aad
xchg
or
push
pop
cs
sbb
cmp
inc
bound
jb
sub
mov
adc
sub
push
ds
push
jo
xchg
ret
insb
pop
insl
dec
gs
dec
movsl
out
mov
repz
ror
push
push
mov
scas
lods
mov
mov
pop
dec
into
jbe
outsb
push
dec
pop
sub
inc
sub
outsb
enter
xor
mov
dec
out
outsl
inc
xlat
cltd
out
pop
mov
ss
std
insl
fisubs
mov
scas
pop
bound
cld
out
stos
xlat
scas
xchg
out
fidivl
dec
aad
int
iret
test
add
jne
cmpsl
cs
sbb
inc
jne
mov
pop
stos
fistpll
xor
and
sbbl
ret
mov
inc
pop
adc
out
jne
adc
adc
insb
sbb
scas
pop
and
fwait
ret
cwtl
xchg
inc
insb
mov
nopl
mov
push
xor
daa
dec
je
adc
fs
shrb
aam
push
pusha
dec
jge
rcl
inc
cmpsl
jmp
fwait
mov
pop
movsl
iret
roll
xchg
jne
add
pushf
movsl
inc
iret
cmpsb
xor
pushf
iret
adc
fcmovu
dec
add
fimull
dec
inc
cmp
or
insl
cs
mov
add
jge
icebp
je
mov
rcll
out
jb
and
cmpsl
out
add
mov
jbe
jl
pop
adc
js
push
adc
decb
xchg
lea
sub
mov
addr16
push
addr16
sbb
add
shll
mov
lcall
test
fiaddl
push
imul
pop
jle
mov
pop
xor
cmp
sub
aam
sbb
andl
cwtl
sub
ds
cld
mov
mov
sbb
jns
add
push
in
fidivs
fs
jl
pop
cld
jb
mov
mov
mov
push
subl
jecxz
dec
pop
std
cltd
adc
sub
insb
enter
subl
sbb
adc
pushf
inc
loope
push
cli
xchg
movsb
mov
cmpsb
lret
push
inc
out
xor
add
movsb
nop
aam
lcall
mov
mov
lods
mov
lret
repz
ss
out
rclb
insl
or
imull
clc
rcrb
xchg
mov
mov
inc
subb
cli
xor
dec
pop
cmp
push
fiaddl
rolb
arpl
in
sub
in
cmp
push
push
sub
dec
sbb
dec
adc
outsb
in
jecxz
fwait
and
mov
lret
out
aas
add
lods
pop
test
sub
or
les
pushf
mov
js
dec
mov
mov
cmp
loopne
jmp
loop
mov
rclb
mov
adc
mov
push
dec
in
repz
dec
cltd
ss
scas
push
lahf
adc
sarl
lret
std
jmp
es
dec
ret
lock
xchg
jae
xchg
pop
mov
jg
fbstp
mov
leave
xchg
and
cwtl
jge
hlt
hlt
lret
and
mov
push
mov
sbb
fs
jns
dec
repnz
mov
gs
dec
fisubrl
mov
out
cmp
lret
add
insb
aaa
mov
outsb
fidivl
lods
and
lcall
lea
dec
mov
addr16
fs
movsb
sub
lock
shll
push
xchg
imull
mov
or
inc
xchg
into
dec
push
outsb
push
xor
pop
xor
stc
jg
out
mov
mov
xchg
mov
push
pop
pop
xor
lahf
mov
mov
mov
addl
test
aas
xchg
cmpsl
pop
push
jnp
cmpsb
les
es
stos
lcall
push
xor
xor
xor
mov
movsl
push
movsl
pop
aad
xor
cmp
out
mov
sbbb
and
lods
jp
in
sarb
or
addr16
stc
imul
fdivl
sub
bound
test
or
push
xchg
bound
fsubs
out
aad
and
mov
cmp
push
in
es
pop
cmc
push
sbb
add
or
test
loopne
or
adc
mov
sub
sbb
cwtl
mov
loope
dec
sbb
and
add
cltd
cmp
push
cmpsl
adc
push
je
push
jp
in
xchg
arpl
cli
test
xchg
popa
push
movsb
push
ss
ss
shlb
pushf
fisubs
add
cmp
clc
ja
jge
push
inc
sbb
push
cwtl
inc
jns
jno
cmp
xor
outsb
jns
scas
aad
in
or
rorb
daa
lods
add
xchg
or
mov
pop
fbld
mov
lods
dec
lahf
jecxz
fwait
inc
mov
and
lret
pop
pop
xchg
stc
cmpsl
pop
icebp
ss
dec
mov
adc
fnstsw
into
cmp
mov
mov
aas
adc
mov
in
jo
push
xchg
mov
push
push
jb
rorb
jle
or
mov
rorb
mov
fst
lret
push
push
adc
mov
aam
xor
pop
mov
sbb
ds
in
fnstsw
add
mov
pop
mov
push
jmp
es
ret
inc
mov
popf
cld
push
push
sahf
push
das
mov
and
inc
inc
leave
sbb
test
cltd
divl
jbe
cltd
jne
fildll
test
or
push
out
pusha
arpl
mov
push
pop
inc
pop
jb
push
sub
je
fninit
out
out
dec
jg
push
mov
mov
rorb
mov
mov
fldz
jge
xchg
mov
push
adc
lds
repz
inc
insb
xchg
push
adc
dec
cld
add
jnp
mov
cmp
rorl
sahf
cli
rclb
push
adc
inc
push
and
out
xor
push
adc
insb
and
lahf
rorb
adc
adc
mov
stos
scas
fcoms
xchg
mov
fidivs
sahf
sbb
rclb
out
popf
gs
call
cmp
enter
jnp
adc
adc
insl
push
inc
push
or
push
adc
repz
scas
cmpsb
xchg
int
adc
adc
subb
adc
xchg
es
cmp
mov
lret
insl
sbb
mov
push
adc
or
lds
or
push
adc
inc
ret
flds
sahf
and
mov
mov
xor
fbstp
lcall
dec
cmp
or
dec
fildl
lock
int3
mov
xor
xchg
nop
mov
jns
out
mov
or
inc
xchg
cmp
push
loop
lods
pop
mov
adc
fnstcw
xor
add
mov
push
pop
aaa
mov
rcrl
dec
xchg
and
dec
push
lock
fs
and
mov
pop
push
lods
stos
scas
shlb
xor
xchg
daa
dec
aas
add
inc
fisubl
lret
out
cmp
arpl
jmp
std
push
les
xor
cwtl
dec
jo
out
mov
fstpt
cltd
add
shrl
xchg
mov
or
or
cltd
sbb
scas
mov
bound
rcrb
jo
aaa
or
jle
xchg
jno
lret
push
andb
mov
push
jmp
sub
ja
mov
jmp
mov
out
jle
xor
leave
in
sub
inc
cmp
aam
inc
cli
jg
rclb
push
adc
iret
push
sub
adcb
js
mov
push
adc
inc
fldcw
pop
jl
repz
lahf
cmp
fdivs
xchg
bound
test
or
xor
add
mov
pop
mov
mov
shrl
iret
push
sub
xor
mov
sbb
in
pop
mov
loop
xchg
je
mov
sbb
xor
dec
pop
aam
and
popf
mov
jg
adc
push
imul
mov
fdiv
or
or
xlat
stos
loope
sub
pop
jp
lock
push
aaa
scas
in
inc
or
out
dec
fcoml
int3
movsb
or
test
jbe
fs
jge
inc
dec
mov
add
xchg
test
arpl
and
dec
jle
lahf
cltd
mov
pop
mov
adc
fldcw
shll
push
imul
mov
jle
enter
dec
fmull
std
jae
jl
andl
loope
or
ds
jae
xchg
cmpsb
mov
xchg
inc
cmp
inc
push
push
data16
adc
insb
pop
cmp
dec
xchg
in
icebp
sbb
test
push
push
je
pop
stc
jnp
sbb
loopne
rorl
addr16
decb
push
adc
pop
in
fcoms
push
jp
rorb
sbb
adc
daa
lods
pop
push
and
fdivrs
shr
movl
add
jge
mov
fwait
mov
andl
out
test
cmp
int
es
fsubrs
fldl
jecxz
fnsave
adc
sbb
outsb
adc
jns
test
dec
bound
push
aas
mov
and
mov
fdivs
fistl
int
es
fsubrs
aad
insl
or
aad
idivl
aad
or
sub
insb
xor
pusha
ret
xchg
xchg
push
pop
sbb
inc
aas
and
adc
nop
xor
push
mov
rorl
out
dec
pop
jle
jp
sbb
int
xor
jb
pop
dec
jl
mov
enter
stc
out
adcb
xor
leave
jno
sub
xlat
cmp
scas
push
scas
test
mov
fmuls
xchg
jne
dec
push
cmp
js
dec
bound
pop
outsl
push
jne
lods
mov
adc
cmp
inc
jp
insl
mov
mov
xor
add
inc
mov
movsb
jp
in
jae
imul
mov
loopne
js
idivl
rorb
sbb
mov
and
adc
cwtl
dec
sbb
mov
insl
rolb
sub
xchg
das
aad
popa
jo
rcrl
jnp
test
cmp
mov
xchg
sbb
lds
push
xchg
push
mov
lret
lods
pop
xor
push
mov
lcall
jl
aad
repnz
repnz
cmp
cld
pop
jo
xor
test
xor
mov
repnz
mov
pop
scas
mov
out
dec
sbb
mov
ror
sbb
lea
mov
aam
repnz
push
dec
push
mov
inc
jge
push
arpl
imul
mov
movsb
shl
inc
mov
shl
cmp
addr16
movl
js
xor
es
lret
popa
lods
sbb
out
xor
ret
add
or
bound
int
in
fwait
push
insb
jo
mov
out
jbe
fsubl
push
sub
mov
clc
xor
sbb
shlb
pushf
and
add
mov
xchg
dec
in
adc
cs
out
jne
dec
stos
loopne
sahf
add
mov
js
jns
ljmp
cltd
pop
js
adc
or
dec
js
repz
cmpsl
cmpsb
int
addb
pop
iret
and
nop
lret
jge
fwait
enter
add
adc
jae
data16
fnsave
sub
pop
dec
pusha
mov
pop
xchg
sbb
sti
jl
mov
xchg
pop
ds
sbb
xchg
or
lret
mov
xchg
daa
negb
jno
xchg
sub
inc
in
jne
push
jp
mov
cmp
mov
mov
mov
test
addr16
pop
pushf
mov
addr16
fpatan
jmp
xlat
addr16
aaa
mov
es
xchg
mov
loopne
and
jns
ja
xchg
cwtl
lods
or
xchg
dec
or
mov
movsl
add
clc
sub
cli
cmpsb
fsubrp
xchg
mov
mov
mov
out
cmpb
test
xchg
clc
mov
ret
rcrb
push
mov
and
scas
or
mov
sub
cmpsb
dec
int
pop
sbb
jge
into
gs
shlb
pop
lcall
add
inc
cs
inc
adc
cmpsb
adc
adc
lock
dec
cmp
adc
and
popa
fnstsw
mov
test
imul
dec
xchg
lods
mov
insb
cmp
jmp
jne
movsl
insl
cmp
cmp
pop
fsts
cld
and
pop
xchg
popa
popf
inc
pop
out
inc
fstps
aam
xor
pop
mov
mov
das
xchg
jns
ret
pop
mov
jns
inc
lock
jns
aaa
add
mov
imul
das
push
movsb
cmp
push
cmc
insl
mov
xchg
or
and
inc
loopne
es
mov
adc
ret
rcrb
lret
out
popf
fwait
dec
mov
or
les
or
pop
add
orb
movsb
nop
out
rclb
sbb
shrb
push
dec
xchg
daa
cmp
idiv
xor
jmp
fwait
aaa
paddsb
mov
sarb
ret
daa
jmp
add
push
fimull
mov
sub
loopne
es
aas
imul
mov
jmp
fcmovb
shlb
fstp
test
outsl
mov
sbb
in
movsb
ljmp
mov
sbb
adc
nop
mov
icebp
inc
mov
and
pop
inc
mov
and
rol
shrl
aaa
mov
xor
je
fisttpl
cmp
add
sbb
xor
lahf
movsb
scas
jmp
xchg
and
cs
insl
push
icebp
jo
cmp
gs
inc
aad
sbb
popa
data16
movntq
and
cmp
cmc
popf
shrl
int
inc
aad
rcr
xlat
cli
or
mov
jmp
sub
pusha
ret
cwtl
xor
sbb
xor
jbe
int3
cltd
imul
arpl
mov
fstpt
les
ret
mov
test
das
inc
mov
imul
or
call
in
push
ss
mov
enter
es
loopne
mov
test
add
popf
or
mov
stos
xchg
in
sub
in
ret
cwtl
cwtl
in
fdivrl
in
cmp
jbe
ds
stc
shl
es
or
shr
stos
test
xchg
ljmp
or
ljmp
jp
pop
xor
adc
xor
or
dec
aam
cwtl
stc
shll
jecxz
enter
inc
ljmp
sub
xor
push
dec
mov
fidivs
dec
je
adc
fbstp
jl
xchg
xor
aas
jmp
rcl
mov
in
imul
ret
outsb
dec
imul
fsubr
in
shll
xor
lds
fcomp
ja
pop
or
popa
sbb
lds
cmp
or
fiaddl
add
punpcklwd
pop
xor
mov
imul
call
repz
lock
out
std
push
cmp
mov
push
mov
cmp
push
xlat
or
ret
jnp
punpckhwd
arpl
aam
jae
xor
xchg
push
or
aad
jae
pop
fsts
jne
scas
dec
sbb
out
xchg
jp
mov
cmpsb
nop
sub
stc
lods
push
out
push
ds
mov
sub
stos
xchg
xchg
inc
xchg
xchg
or
call
insb
pop
mov
inc
sub
ds
push
adc
imul
and
lds
push
fldt
stc
cmpsb
pop
std
cmc
fildll
std
sarb
lcall
sbb
ljmp
dec
push
in
jb
push
mov
xchg
mov
pop
cltd
jl
and
fsubrs
mov
out
add
or
aam
insb
pop
jo
mov
mov
inc
bound
into
dec
movsb
rorb
push
mov
vaddsubpd
fwait
out
sbb
xor
or
xor
ficoml
movsb
popf
out
dec
dec
fildl
pop
mov
lea
sarb
nop
dec
repz
icebp
cs
ss
fidivrl
fwait
lods
cmp
jle
in
jb
xchg
sub
sti
cltd
push
jo
mov
or
sti
cmpsb
rcll
mov
xchg
mov
aas
imul
nop
daa
dec
ljmp
mov
and
dec
xchg
dec
or
gs
hlt
das
mov
push
jle
sub
icebp
out
cmp
xchg
and
adc
mov
xchg
push
adc
and
pop
mov
cwtl
leave
pop
pusha
xchg
mov
fwait
xor
pushf
mov
adc
sub
stos
popf
add
adc
pop
mov
xchg
jmp
mov
add
outsl
in
mov
cmp
gs
xchg
xor
ficoml
in
pop
mov
fistpll
cmp
popf
mov
pop
and
xchg
pushf
inc
xchg
mov
sbb
xor
xchg
mov
andl
adc
pop
call
aas
sub
pop
lods
jns,pt
xchg
ja
inc
adc
dec
xchg
das
cwtl
cmp
repz
lcall
insl
pop
ja
xor
adc
pop
dec
mov
mov
das
or
mov
aam
gs
pop
cmp
out
xchg
lods
mov
hlt
repz
fwait
mov
jg
repnz
sbb
mov
pop
cmp
mov
loopne
in
shl
out
and
imul
mov
mov
xor
pop
xor
test
scas
into
adc
nop
pop
ss
imul
out
push
or
xor
adc
jle
pusha
divl
sbb
pop
stos
ljmp
and
add
aad
aaa
aad
push
fildll
add
mov
pop
adc
lods
and
jg
fwait
mov
inc
outsb
lock
push
adc
push
cltd
adc
adc
sti
dec
inc
pop
adc
push
mov
adc
push
and
rep
movsb
call
iret
dec
and
sub
loopne
pop
adc
enter
jge
aad
dec
adc
pop
loopne
push
adc
outsb
shrl
adc
imul
mul
fwait
adc
sbb
test
loope
push
or
push
sbb
les
nop
cli
and
mov
xchg
inc
mov
jg
inc
mov
xchg
loopne
int3
movsb
jne
imul
jo
xchg
adc
or
pop
test
pshufw
scas
and
mov
xchg
mov
mov
fcmovne
dec
addr16
dec
xor
jbe
fs
loope
ds
mov
ret
je
jl
repnz
xchg
add
test
ljmp
mov
add
inc
jecxz
dec
dec
inc
cmp
and
aas
mov
jb
ds
scas
fidivrl
pop
mov
mov
jne
cltd
lea
jne
pop
push
sar
lret
pop
sbb
pop
inc
xor
or
test
cld
cmp
cmp
testb
push
shll
inc
or
pop
fidivs
jle
jmp
sub
cmp
and
xor
dec
aad
rcrl
movsl
xchg
fs
and
pop
cld
orb
sbb
sbb
inc
ret
lock
mov
aam
mov
push
and
ret
push
dec
mov
mov
divps
mov
sbbl
push
push
adcl
lods
mov
sahf
bound
jge
int
dec
out
fidivl
pop
adc
inc
pop
adc
mov
adc
mov
fwait
ss
mov
push
mov
pop
adc
js
jg
xchg
daa
dec
push
dec
add
int
ss
pop
mov
rcl
jb
sbb
std
cli
sbb
loopne
es
jle
ja
repz
aaa
cltd
sbb
rcl
pop
push
dec
pushf
sbb
leave
pop
push
loopne
jo
daa
mov
or
sahf
cmp
adc
sub
fcompl
push
adc
mov
xchg
sub
pop
in
sahf
ss
jle
xchg
daa
icebp
pop
cmp
insl
jbe
xchg
mov
lcall
pop
pop
clc
xchg
jns
inc
pop
adc
fidivrl
mov
jl
stc
aad
mov
adcb
push
movsb
cmp
xlat
pop
sbb
dec
sahf
nop
in
or
iret
fldenv
sub
out
mov
dec
push
pop
les
aad
adc
adc
and
sbb
push
cmp
pop
enter
cmp
xlat
pop
divb
dec
sahf
dec
jbe
out
inc
inc
mov
jg
in
pop
pop
adc
ljmp
out
pop
mov
dec
lret
add
mov
rcrb
adc
mov
xchg
sub
stos
lea
les
mov
in
pop
pop
adc
adc
pop
in
pop
aas
sub
pop
imul
xchg
mov
and
mov
push
lods
outsb
xlat
das
sahf
mov
push
cld
insb
sub
sti
out
mov
mov
or
mov
pop
sub
jecxz
sbb
xor
aas
jp
pop
mov
dec
jl
incl
test
loope
push
lcall
dec
cltd
xchg
jmp
xchg
js
or
fimuls
dec
add
mov
das
sbb
sub
cmp
push
outsb
nop
adc
jo
mov
ret
or
inc
out
mov
mov
push
fcompl
push
lds
jb
pop
loop
int3
out
push
out
pop
hlt
fisubs
mov
pop
std
mov
lods
inc
outsl
xchg
stos
adc
not
mov
shlb
pop
mov
mov
cmpsl
in
adc
rorl
pusha
pop
sahf
lcall
inc
adc
and
pop
fadds
dec
xchg
sub
fistps
mov
lds
xor
sbb
pop
clc
push
aad
cmp
dec
data16
addb
mov
les
movsb
mov
inc
mov
mov
into
xchg
icebp
jl
xor
xor
xor
xchg
sahf
xor
or
jbe
mov
out
leave
xchg
lock
xor
push
mov
cmp
cmp
ret
pop
mov
sub
mov
xchg
pushf
ficompl
xchg
xchg
jo
arpl
mov
mov
jge
push
aad
out
test
dec
mov
call
xorl
xor
rcll
push
mov
dec
xorl
sbb
push
lods
les
aam
cmp
push
jecxz
pop
xchg
dec
mov
cwtl
cmp
sbb
test
daa
push
mov
roll
std
arpl
pushf
inc
out
and
dec
imull
mov
pop
mov
sub
aam
shlb
add
mov
dec
and
fildl
lods
fidivrs
int
xchg
push
rclb
dec
lods
mov
ljmp
jg
and
push
mov
lods
cmp
jle
adc
inc
sub
pushf
mov
adc
mov
insb
jl
adc
jle
jp
insl
mov
pop
dec
sbb
cmp
sub
repnz
fwait
mov
pop
xchg
xor
xchg
test
mov
xor
xchg
mov
jo
pop
dec
xor
les
gs
mov
cmpb
fcomi
leave
xchg
and
mov
out
pusha
loopne
test
int3
adc
lds
mov
pop
dec
gs
pop
dec
sbb
aad
jge
cmpsl
mov
mov
pop
or
lods
mov
and
rcl
cwtl
cld
add
insl
mov
sbb
insl
push
lock
dec
in
xlat
fwait
ss
lret
in
push
pop
enter
mov
es
pop
sbb
dec
xchg
push
mulb
je
mov
dec
push
outsl
es
ljmp
xchg
and
sub
cmp
pushl
loopne
insl
fidivl
imull
outsb
repz
test
je
jmp
dec
mov
xor
xor
add
cltd
xor
loopne
push
dec
in
cmpsl
mov
imul
add
push
adc
bound
xor
push
xchg
and
outsb
cmp
mov
pushf
mov
adc
pusha
sti
call
push
adc
mov
lods
shl
imul
mov
xchg
bound
cltd
jp
mov
shlb
inc
fdivl
push
daa
fsts
xor
cmp
fnstsw
js
rorb
sub
ds
cmpsl
inc
ss
neg
cld
in
and
int
push
cmp
sarb
sub
mov
enter
imul
jp
outsb
ficoms
js
pop
mov
cmp
fstpt
int3
add
mov
sbb
shrb
xchg
cmp
mov
lock
mov
push
mov
dec
in
cs
ljmp
xor
mov
push
lea
ja
das
cltd
adc
cmpsb
cmp
dec
mov
mov
loop
stos
cwtl
xchg
out
inc
mov
bound
daa
or
ja
sbb
or
push
testl
xchg
xor
xor
loopne
xlat
and
jo
or
push
and
add
adc
fs
sub
outsb
movsb
outsl
mov
scas
or
mov
jbe
push
mov
jl
pop
xor
sbbb
mov
sub
cmpsb
gs
add
fisubrl
cmp
cld
fildl
xor
fists
fldenv
mov
xor
gs
xor
push
adc
aad
cmp
inc
repz
repz
mov
pop
test
arpl
adc
scas
js
push
adc
repnz
iret
loopne
scas
pop
adc
cwtl
ret
add
mov
pop
ret
sbb
andb
mov
push
stos
ljmp
fildl
bound
push
inc
add
mov
scas
xor
es
shl
out
cwtl
xchg
test
dec
mov
repnz
xchg
outsl
cmp
dec
xlat
or
into
push
mov
sub
cmp
xchg
jns
adc
xor
movsl
into
mov
mov
daa
cmpsb
push
jae
mov
pop
hlt
pop
out
aam
lock
inc
stc
push
adc
in
sub
and
push
sbbb
pop
xchg
and
imulb
add
in
mov
out
js
ret
int
lcall
cwtl
pop
mov
enter
cli
in
ret
inc
push
stos
push
jno
clc
das
dec
mov
shl
imul
pop
or
fs
sbb
pop
xor
mov
and
and
lcall
nop/reserved
and
and
nop
js
arpl
stos
pusha
dec
sbb
sbb
xchg
hlt
and
xchg
jae
roll
pop
push
mov
sbb
adc
push
aad
mov
cmpsb
cmp
ret
xchg
jp
dec
jmp
dec
jecxz
aad
jno
lahf
loope
inc
jge
movsl
popf
testl
cmpsl
subl
insl
scas
or
icebp
mov
lods
nop
sbbl
cwtl
pushf
pusha
sub
out
out
mov
pop
addr16
pop
dec
jp
fwait
pop
jae
inc
cli
push
xchg
and
push
enter
sbb
or
or
lret
das
lods
xchg
sbbl
push
std
xchg
dec
or
dec
pusha
pop
sbb
sti
data16
xor
shlb
mov
push
std
xchg
xchg
inc
dec
xor
fidivl
jnp
loope
js
adc
ja
out
loopne
cwtl
pushf
pusha
sub
mov
pop
xor
jecxz
lock
lret
inc
dec
imul
out
inc
ljmp
xchg
in
add
outsb
push
aaa
xor
insl
mov
scas
shl
mov
fdivs
dec
xor
add
push
jae
repnz
out
pop
xchg
mov
ds
xchg
daa
cmp
dec
in
sbb
int
dec
sub
cmp
fsubp
xchg
adc
pop
or
add
cmp
xor
lock
je
out
mov
daa
mov
orl
pop
and
adc
rcrl
and
jo
repnz
inc
insl
and
imul
pop
pop
popf
cwtl
cmc
jecxz
xchg
out
mov
xchg
lea
xlat
push
rcl
aam
inc
jnp
out
mov
movsl
loop
test
xchg
movsl
mov
lret
roll
pop
shlb
mov
std
and
push
mov
aad
outsb
int3
popa
nop
out
xchg
dec
jecxz
int
fs
mov
mov
push
faddl
les
pop
adc
lahf
pop
adc
adc
subb
ja
in
or
sbb
fcomip
movsl
jae
outsb
jg
fs
add
mov
out
lods
or
movsl
int
mov
dec
aas
push
shll
xlat
jecxz
adc
fs
push
pop
mov
push
dec
jle
xchg
cwtl
cmp
xor
dec
clc
aaa
push
daa
and
dec
jb
or
adc
push
pop
inc
ja
xor
nop
mov
sub
push
in
pop
fdivr
data16
add
stos
dec
mov
mov
insb
les
mov
mov
int
mov
mov
mov
pop
mov
pop
adc
push
fstpt
icebp
or
pop
je
in
sti
push
xor
inc
adc
je
xor
mov
cmp
sahf
cmp
cmp
adc
xor
mov
mov
and
pop
addb
outsl
pop
pop
xchg
adcl
shrb
popf
repz
shrb
push
mov
lods
out
xchg
push
leave
mov
cmp
into
or
lahf
mov
push
scas
je
adcl
xor
push
hlt
ffreep
xor
cltd
test
call
and
rcl
pop
out
mov
or
xchg
std
in
or
imul
mov
add
xchg
addl
xchg
sub
ljmp
inc
pop
rclb
mov
lret
inc
clc
push
lds
pushf
lret
inc
xor
and
push
lock
orb
scas
jge
cmpsb
sub
lret
es
xchg
popa
loopne
dec
enter
repnz
lcall
xchg
or
fwait
gs
arpl
or
xor
dec
xchg
pop
je
dec
clc
add
mov
ret
pushf
mov
cmpsb
insl
and
fs
push
fmul
gs
je
lds
icebp
or
fwait
mov
shlb
lret
fwait
xor
in
xchg
clc
mov
add
and
ret
jb
mov
xchg
xchg
mov
lods
pop
in
push
jns
outsb
mov
ret
mov
mov
push
push
mov
cmc
xor
cmp
add
std
push
leave
jnp
dec
xchg
das
sar
imul
out
xor
and
mov
xor
fwait
sbb
adc
dec
out
sub
cltd
daa
gs
hlt
add
jp
repz
clc
imul
push
out
sbb
das
mov
das
sbb
xchg
pop
xchg
and
lods
sub
or
stos
push
enter
es
test
pop
xchg
daa
xor
lcall
sbb
pop
push
daa
mov
cltd
arpl
xchg
scas
mov
cmp
dec
adc
ja
pop
pusha
mov
movsb
xchg
push
cmp
sbb
adc
mov
sbb
arpl
inc
dec
cmpsb
xor
xchg
xor
xor
xlat
push
cs
daa
cmp
outsl
mov
shll
sbb
dec
movsb
insl
mov
inc
gs
stos
popa
icebp
jl
xor
fnstenv
push
xchg
mov
movsl
pop
lods
inc
std
xchg
mov
inc
cmp
imul
out
lea
scas
jno
mov
popa
dec
xor
leave
movsb
fsubrp
and
nop
mov
mov
fnstsw
adc
loopne
mov
aas
lods
movsl
adc
testl
test
shlb
test
adcb
mov
stos
popf
rcl
jmp
fadds
pop
int3
and
cbtw
inc
and
adc
lret
in
add
pop
sbbb
insl
add
or
dec
push
std
out
mov
sub
add
xor
cmpsb
and
les
adc
or
jg
out
fistl
push
jge
push
add
pusha
cmpsl
adc
sahf
push
pop
mov
inc
push
fistl
dec
xchg
pop
loop
or
notl
push
lea
popa
mov
dec
leave
mov
in
push
push
data16
dec
pop
add
cmc
fistps
cmp
mov
xchg
aad
faddl
mov
sbb
ds
mov
adc
push
adc
iret
cld
call
call
std
adc
repz
adc
ret
fwait
mov
xchg
insb
mov
pop
mov
xorl
cmpl
xchg
arpl
push
adc
into
jns
inc
ss
insl
stos
xchg
and
pop
in
aam
or
std
mov
stc
mov
repz
xchg
push
adc
mov
clc
fs
sbb
push
cmp
notb
fcmovne
out
or
push
inc
das
je
mulb
pop
inc
and
movsl
scas
xor
jnp
adc
inc
jne
cwtl
mov
popf
mov
xor
mov
jp
adc
pop
pop
insb
movsb
mov
xor
and
mov
test
pop
push
adc
xchg
dec
out
push
inc
mov
lret
dec
xlat
fcmovnu
test
xor
jno
loopne
movsl
sar
jge
mov
shl
sahf
xchg
cmpb
outsl
cmpsb
lds
fnstsw
sbb
mov
pop
mov
sbb
andl
cmpsb
rcll
adc
in
lret
cmp
or
sbb
jno
adc
push
adc
fstl
mov
xor
aad
insl
cmp
pop
xchg
mov
mov
sub
inc
lods
sti
xchg
and
cmp
adc
imul
jmp
outsb
shlb
dec
fidivl
lea
mov
lret
repz
cmp
mov
shlb
or
lret
es
inc
xor
popa
ret
xchg
icebp
fdivl
and
fwait
adc
cmp
sarl
pop
add
pushf
fdivrs
inc
jecxz
sbb
push
push
adc
sbb
in
xchg
cmp
cs
sbb
imul
pop
push
adc
push
push
mov
out
push
fsts
sbb
cmp
fisttpl
pmovmskb
dec
jecxz
aad
sub
lds
jo
push
loopne
dec
call
mov
lcall
sbb
popf
lret
mov
clc
xor
add
jb
inc
push
in
les
popf
add
faddl
aad
ficompl
mov
xchg
ficoml
and
shlb
mov
mov
mov
and
call
iret
adcl
adc
mov
lds
mov
pop
push
xor
mov
in
xchg
xchg
cld
mov
pop
aam
inc
repz
fxch
xchg
sub
dec
outsb
xor
mov
dec
loope
jns
xchg
jl
and
adc
jge
inc
push
in
stos
pop
mov
adc
lock
int
mov
mov
ret
insl
aaa
push
pop
mov
call
std
add
ds
orb
dec
mov
add
gs
dec
xlat
mov
sbb
and
in
rolb
pusha
lret
test
scas
pop
insb
out
mov
sbb
sbb
int
adc
inc
int
jge
inc
xchg
pop
mov
jge
cltd
stos
lret
adc
jno
xchg
loop
adc
pusha
popa
mov
xchg
loopne
inc
aad
pop
icebp
pop
leave
mov
dec
js
dec
sbb
insl
push
ret
push
inc
outsb
lods
js
fldl
inc
cltd
scas
test
pop
adc
jns
xchg
pushf
pop
adc
dec
ficompl
push
outsl
mov
and
cmp
mov
inc
push
sbb
pushf
pop
adc
fbstp
fcompl
xchg
sahf
xor
pop
repnz
or
test
cwtl
xchg
lahf
out
clc
pop
lret
cmpb
out
arpl
xor
jl
adc
insb
js
mov
mov
dec
add
repnz
loop
add
jo
or
lods
cmp
inc
jecxz
xor
subl
inc
fwait
pop
xlat
pop
ret
testl
imull
lahf
mov
pushf
pop
adc
jle
arpl
je
daa
mov
pop
jb
jle
or
je
mov
mov
push
mov
and
stos
push
out
xchg
repz
jge
jo
rclb
lods
lods
pop
fbld
rclb
adc
aas
pop
rcrb
sbb
dec
adc
inc
shl
cmp
jae
aas
fldl
mov
pop
pop
rcr
popa
bound
pop
adc
insb
out
mov
das
or
and
push
fwait
push
adc
dec
xchg
and
arpl
gs
xchg
pushf
pop
pop
adc
pop
call
out
xor
dec
xchg
push
jle
cld
fs
cmp
mov
fwait
adc
push
pop
adc
push
pusha
or
and
xchg
push
or
push
mov
mov
stos
xchg
int
lret
adc
adc
jle
xchg
daa
dec
popa
test
cwtl
scas
push
mov
mov
gs
pushf
pop
pop
adc
cwtl
sarl
xchg
mov
sbb
mov
mov
push
or
movsb
dec
pop
push
cmp
daa
dec
sahf
sub
dec
lret
push
js
popf
gs
adc
and
stos
popf
dec
bound
fcoms
push
adc
dec
mov
gs
xor
mov
pop
pop
adc
mov
fwait
ss
adc
sbb
sbb
stos
sub
imul
dec
test
mov
call
or
out
bound
iret
dec
dec
xchg
push
jle
inc
bound
pop
inc
pop
pop
adc
loop
aad
add
push
adc
mov
sub
jno
call
adc
xchg
iret
mov
mov
mov
sbb
adc
dec
lds
outsb
int
int
inc
xchg
push
dec
dec
pop
pop
adc
cmp
lcall
xchg
fcmovnu
xchg
daa
test
sahf
pop
adc
jmp
popf
sbbb
cs
xchg
sub
addb
xchg
ret
fwait
xchg
adc
sbb
jp
call
sbb
xchg
rcrl
aam
popf
dec
lea
outsb
je
imul
dec
icebp
int
cs
fld
xchg
and
pop
sub
les
iret
jl
dec
nop
sub
inc
rcrl
popa
pushf
pop
pop
adc
shr
pushf
pop
pop
adc
pop
push
adc
push
enter
add
add
sbb
xchg
inc
test
scas
sarb
adc
jp
aad
mov
sub
and
fdiv
stos
pop
ret
fdivl
sbb
mov
mov
mov
pop
add
mov
fimuls
js
mov
inc
xchg
ret
pop
jne
add
adc
mov
fdivrl
mov
or
mov
adc
orl
lea
push
jae
jl
test
lret
mov
sarb
sahf
pop
adc
jb
adc
adc
or
call
sub
push
bound
fnsetpm(287
repnz
inc
fadds
fimuls
inc
xchg
cwtl
test
inc
pop
adc
adc
mov
test
pop
and
dec
fcoml
xchg
push
sbb
mov
xor
pop
dec
arpl
fistps
push
add
inc
jnp
scas
mov
lock
or
sahf
sbb
in
ret
fisttpl
xchg
sub
shlb
call
push
push
aam
into
and
jb
les
imul
rorl
inc
pop
pop
adc
cs
ffree
adc
adc
adc
cmpsl
sarl
or
lea
insl
push
push
add
xchg
xor
xchg
or
sub
push
es
xor
rcr
mov
add
and
or
ja
adc
pop
pop
adc
pop
pop
adc
pop
push
adc
pushf
pop
pop
adc
xorl
ret
jge
pop
push
lods
or
sub
sarb
adc
fs
jle
shlb
mov
cmp
xchg
daa
dec
loop
lcall
scas
into
jmp
mov
xor
cmc
pop
repz
out
mov
cmp
xor
push
adc
pop
push
mov
shlb
or
add
fstpt
into
xchg
xor
test
cmp
pop
jecxz
test
push
and
adc
in
xor
popa
ret
xchg
shrl
adc
fidivrl
test
jbe
inc
xchg
cli
fidivl
or
and
hlt
sarb
push
icebp
and
pop
pop
adc
cltd
test
pop
pop
adc
ret
insl
shr
pop
adc
insl
insl
fstpt
mov
lock
sbb
mov
daa
inc
xchg
sub
loop
fdivs
cmp
lret
and
sub
js
and
std
cmp
and
xchg
xor
push
mov
push
out
mov
bnd
xor
push
sbb
xor
xor
fnstenv
out
lea
push
dec
mov
call
sub
insl
xor
ret
fwait
jnp
xor
mov
lods
jns
xchg
js
push
adc
lret
adc
adc
call
int
sbb
ficompl
adc
adc
or
push
mov
aas
sub
je
adc
adc
inc
push
sub
pop
pop
adc
mov
daa
pop
mov
fnstenv
jo
pop
push
adc
inc
xchg
mov
pop
pop
mov
popf
cmp
adc
out
in
lret
inc
sbb
xor
jns
dec
int
aam
push
mov
xchg
pop
jae
jl
push
add
mov
inc
sub
cmc
cmp
test
mov
sub
stos
aas
pop
mov
xor
mov
pop
dec
mov
sub
mov
dec
xor
shll
adc
mov
mov
adc
mov
loope
xchg
call
gs
inc
out
push
cmp
mov
sbb
sbb
push
or
mov
dec
push
std
xchg
jle
pop
xor
pop
push
dec
inc
out
xor
push
adc
adc
adc
adc
or
adc
test
adc
xchg
add
aaa
popa
int3
pop
aam
pop
adc
dec
shl
dec
outsl
in
jbe
push
push
mov
pop
adc
and
mov
add
inc
pop
adc
rol
pop
fcom
dec
fsub
int3
movsb
jne
loopne
pop
adc
sub
icebp
or
jnp
cmp
repnz
ljmp
pushf
pop
adc
dec
test
into
in
shrb
add
notb
and
pop
adc
ret
inc
mov
xor
pop
or
xor
cmpsb
es
pop
ljmp
ret
xor
pop
adc
sub
pop
iret
add
and
stc
fildll
adc
pusha
or
jb
icebp
mov
fsubrl
pop
popf
repz
push
pop
adc
adc
and
push
aas
out
pop
loope
xchg
mov
dec
sbb
pop
sub
mov
sbb
pop
adc
test
add
and
sbb
shll
inc
pop
adc
jmp
repz
pop
out
lret
cld
lds
cwtl
movsb
popa
pushf
inc
pop
adc
dec
pusha
fptan
dec
and
xor
outsl
cwtl
sub
inc
outsb
adc
adc
fimull
inc
push
and
repnz
call
lods
mov
xor
sbb
leave
xchg
test
pop
pop
adc
mov
pop
xchg
sub
sub
adc
dec
ljmp
movsl
ss
das
sub
cli
pop
cli
inc
push
mov
inc
pop
adc
orb
add
out
fwait
cltd
jp
stos
push
cltd
sbb
inc
pop
adc
mov
sub
pop
out
out
outsb
fisubl
xchg
inc
pop
xor
iret
sbb
fstl
push
in
pop
pop
adc
icebp
mov
rcrb
cmpsl
lea
in
pop
pop
adc
out
mov
cmp
data16
movsb
popf
clc
and
adc
cmp
fmul
lret
rorb
sbb
jno
call
jnp
xor
push
das
and
jns
data16
xor
mov
mov
insl
fdivs
sbb
mov
mov
mov
mov
inc
mov
mov
popf
pop
adc
sub
inc
pop
adc
inc
xchg
mov
lret
stos
fcoms
adc
xchg
fdivs
sub
jns
and
sub
push
jg
aaa
int3
sbb
gs
mov
pop
jbe
ret
xor
sbb
fs
pop
int
shlb
into
lcall
rolb
jl
pop
adc
stos
and
rol
xchg
dec
out
push
in
mov
push
cmp
outsb
jmp
int
inc
fbld
inc
pop
adc
popf
pop
adc
daa
mov
fdivs
out
imul
sbb
fwait
arpl
sbb
xchg
and
bound
js
dec
mov
mov
lods
and
adc
pop
lds
arpl
or
adc
mov
movsl
add
push
xchg
ret
call
sbb
cmp
rolb
xchg
into
push
pusha
inc
pop
adc
push
js
movsl
or
or
outsb
int3
mov
bound
mov
pop
adc
test
pop
adc
lods
lret
push
sahf
mov
sub
xor
adc
inc
rolb
mov
pusha
shrb
divb
loopne
cmpsb
lock
sbb
cmp
jge
inc
adc
push
sub
js
inc
pop
adc
xchg
adc
xor
jmp
pop
int
rorl
adc
movsl
loop
push
shlb
lret
fsubrs
jnp
lods
in
test
inc
or
mov
lahf
stos
call
pop
inc
xchg
fnstsw
test
cmpsl
mov
pop
add
jo
mov
inc
pop
adc
jnp
mov
into
enter
adc
roll
xchg
xchg
inc
repz
sti
ja
mov
push
xor
xbegin
stos
pusha
inc
pop
adc
adc
adc
or
add
or
pop
pop
adc
cmp
push
xor
mov
adc
adc
imul
and
sarl
adc
adc
sar
in
fstpl
test
mull
sub
adc
and
push
dec
je
sbb
icebp
and
les
push
adc
lods
rolb
jl
inc
daa
dec
popa
sbb
sbb
stos
xchg
idivb
test
fcoms
push
adc
inc
push
add
and
mov
loopne
jg
stos
ja
xor
call
ss
mov
mov
mov
push
fsubrs
mov
scas
dec
idivb
scas
pop
push
add
inc
cmpsb
leave
adc
mov
add
mov
pop
scas
fiadds
jae
inc
push
subl
dec
insl
ret
xchg
loop
fs
popf
mov
addl
mov
mov
xlat
xor
ret
and
gs
xchg
sub
add
pop
mov
lcall
xchg
into
add
push
adc
or
cmp
dec
sbb
inc
aaa
jns
scas
aad
jl
push
push
lret
mov
fcmovnb
and
bnd
insl
jbe
xor
and
xchg
pop
bound
lcall
insl
fcmovnb
inc
pop
dec
sti
ret
insl
push
in
data16
xchg
pop
inc
cmp
lcall
insl
fcmovnb
pusha
pop
dec
fs
mov
and
mov
negb
mov
in
arpl
rorl
aam
push
adc
adcl
xchg
das
pop
test
addr16
lcall
hlt
push
adc
lods
mov
jae
pop
mov
jmp
pop
pop
mov
jo
ljmp
xchg
and
jp
repz
jb
mov
cmp
js
jle
ret
outsb
test
int
dec
push
push
cmp
inc
aaa
jns
cmpsb
test
push
ja
std
sti
jno
inc
outsl
fdivs
and
and
adc
mov
imul
mov
imul
roll
push
jecxz
imul
xor
cmp
add
jge
sbb
sbb
fs
mov
mov
pop
in
imul
or
out
and
add
outsl
cli
fwait
ss
adc
pop
adc
cld
adc
adc
mov
int3
loopne
push
adc
sahf
and
xchg
cs
xchg
shll
xchg
cmc
imul
push
out
cmpsl
sbb
dec
subb
outsl
mov
shrl
adc
adc
out
les
xor
aas
mov
sbbb
adc
push
in
mov
mov
jnp
hlt
loope
xor
fdivrs
xlat
mov
push
testl
and
popf
ret
mov
inc
cli
dec
aam
dec
test
pop
loope
push
pop
jle
std
bound
cltd
pushf
icebp
sub
adc
int
outsb
fldenv
cs
push
inc
pop
push
jne
sub
mov
enter
into
mov
mov
cli
stos
mov
sub
sbb
fucomp
fcomps
xor
rcr
dec
cltd
cmpsb
pop
movb
pusha
ss
sub
add
stc
xchg
test
out
inc
fwait
mov
pop
adc
sbb
mov
arpl
in
xor
mov
iret
fwait
shrl
notb
popl
adc
outsb
sbb
inc
imul
leave
and
mov
xchg
or
cmp
mov
test
popf
xchg
popf
jo
push
adc
into
daa
lcall
jns
mov
hlt
js
cwtl
and
cmp
jl
cmp
pop
mov
ja
fildl
mov
ret
inc
or
push
cmpl
sub
sahf
pop
adc
outsb
cld
adc
adc
bound
add
cmpsl
shl
movsl
mov
jns
mov
adc
pop
imul
lahf
idivb
pop
push
adc
pop
fs
pop
jle
jmp
subl
rcl
ret
out
dec
or
jae
es
mov
xlat
int
shll
pop
pop
fnstsw
xor
cmp
pop
adc
into
cld
adc
adc
dec
pop
jno
fidivs
push
and
aas
ss
jecxz
adc
adc
shlb
adc
fwait
pop
mov
adc
pop
adc
cld
adc
adc
mov
pop
xchg
ret
out
lcall
push
adc
sub
push
cmp
lods
mov
cmp
cmp
push
adc
movsb
pop
jmp
or
dec
lcall
adc
fidivrs
push
adc
addr16
sbb
adc
in
or
mov
dec
xor
popf
xchg
mov
sbb
loopne
or
ret
filds
xchg
jbe
shlb
mov
pop
mov
mov
cmp
rep
ss
mov
rorb
adc
adc
push
test
test
dec
js
adc
adc
cltd
ret
xchg
cmp
test
sub
icebp
ljmp
sub
je,pt
cld
or
aad
or
adc
adc
mov
sub
xor
xor
cmpsb
in
and
xchg
fdivl
push
lret
or
jns
js
dec
gs
clc
jmp
movsb
pop
push
adc
pop
push
adc
repz
adc
adc
jecxz
test
cwtl
adc
loopne
movsl
fidivs
mov
lret
or
pusha
or
pop
push
adc
rorb
mov
mov
mov
test
sub
cmp
out
pop
fs
pop
int
push
shlb
dec
lds
mov
lea
sub
mov
fidivrl
xchg
pop
jnp
or
lret
not
push
faddl
outsl
fsub
shrb
adc
sub
pop
adc
leave
mov
rcrl
jp
stos
movsl
ret
rclb
cs
int3
loope
out
mov
es
nop
jecxz
int3
cltd
mov
jmp
push
mov
or
sbb
xchg
mov
int
jp
xor
test
popf
jne
insb
shrl
mov
sub
nop
dec
dec
jne
arpl
cli
xlat
or
cs
push
push
out
mov
xor
inc
test
popa
jb
ret
pop
jne
ret
loop
mov
cmp
xchg
aad
push
ss
xor
jl
pop
adc
in
adc
push
adc
xor
fldl
cmpsl
or
add
les
pop
adc
xor
or
jle
jmp
das
popf
pusha
addb
repz
xchg
sub
es
xchg
ret
inc
adc
nop
mov
sbb
xor
add
pusha
pop
push
adc
fisttps
pop
fidivs
mov
jle
test
insl
aad
popa
orl
ss
neg
jg
inc
enter
inc
sarb
adc
rorb
fisubrl
cmp
xor
mov
inc
addr16
sbb
adc
inc
in
inc
jno
adc
fxch
and
pop
icebp
test
inc
pop
imul
pop
fcmovne
in
xchg
or
je
inc
mov
in
repz
call
add
sbb
div
jnp
sub
adc
mov
cmpb
pop
xchg
enter
sbb
and
pop
arpl
fldl
mov
adc
incb
push
es
pop
cmp
push
adcb
pop
push
adc
cmpsb
popf
repz
sbb
ds
popf
and
in
ret
sub
cmp
idivb
dec
int
sbb
mov
jne
push
ss
mov
pusha
fistl
arpl
add
ja
sub
push
xchg
push
jge
andb
sbb
push
pop
push
adc
je
jnp
jl
pop
sub
pop
adc
cmp
pop
test
adc
mov
dec
mov
push
and
clc
scas
movsl
shll
sub
dec
fisttpl
insb
fcomp
pushf
xchg
pop
adc
out
fwait
mov
sub
cld
sub
add
mov
mov
outsl
fsub
sahf
mov
pop
icebp
sbb
js
rcrb
adc
push
in
and
mov
mov
mov
fwait
ss
fst
mov
and
std
mov
daa
and
xor
int3
repz
cmp
push
dec
in
sbb
addr16
call
jno
fdivrs
fidivs
inc
push
pop
push
adc
adc
jbe
or
leave
push
movsb
or
dec
nop
dec
sahf
stos
mov
mov
adc
inc
xchg
cmp
sbb
out
cmp
inc
sub
push
inc
bound
ret
dec
aaa
mov
mov
dec
test
mov
jns
lcall
sbb
push
stc
sbb
sbb
sub
notb
std
sahf
cmp
inc
in
push
in
les
adc
pop
into
lcall
test
ljmp
inc
push
jnp
das
imul
adc
dec
jp
xor
mov
jp
dec
pop
adc
xchg
roll
insl
lods
push
jnp
cmp
sub
gs
mov
lock
pcmpgtb
popf
ret
in
fwait
inc
pop
int
sub
mov
xor
loop
lods
pop
test
pop
adc
popf
pop
adc
les
mov
push
adc
pushf
mov
pop
pop
adc
lds
outsb
rcr
int
repnz
pop
jo
fildll
mov
adc
pop
adc
test
jae
fnstenv
mov
or
mov
mov
rorl
push
cmpsb
mov
subb
pusha
inc
and
adc
xor
add
xchg
mov
rcl
ja
sbbb
mov
dec
shr
sbb
adc
and
pushf
pop
adc
faddp
lea
pushf
pop
adc
push
lds
popf
sub
xor
bound
js
push
adc
jmp
pop
cmp
dec
mov
adc
data16
jb
in
fs
pop
adc
dec
scas
push
insb
call
lods
mov
rolb
sarl
inc
mov
out
lahf
mov
inc
jo
sbb
xor
and
jge
ja
inc
dec
dec
mov
fnstsw
sti
ficomps
pushf
lret
outsb
cmp
adc
adc
jmp
sbb
out
jecxz
sbb
mov
lods
leave
nop
aas
pop
es
xor
lret
sbb
outsb
ret
pop
dec
push
pushf
and
sbb
push
ffree
scas
push
or
loop
pop
pop
adc
mov
insb
out
out
movsl
add
incb
adc
jmp
cmp
arpl
push
adc
mov
xchg
inc
cmc
out
mov
adc
sub
mov
pop
adc
arpl
scas
jb
clc
mov
jns
iret
insb
mov
popa
and
sbb
xchg
cltd
and
jno
scas
mov
nop
ljmp
lahf
pop
pop
lods
ds
dec
pop
into
aam
or
push
mov
adc
cld
adc
adc
pop
pop
adc
or
filds
add
xor
add
push
adc
jle
adc
pop
adc
stc
enter
adc
sbb
xchg
pop
cmc
stos
cs
push
in
sub
int
or
je
adc
jo
lock
inc
and
fdivr
popf
pop
adc
aaa
lret
addr16
sbb
cmp
mov
adc
add
and
es
sahf
xchg
inc
dec
in
fwait
cltd
scas
test
daa
shll
xor
out
push
movsb
dec
cmp
jle
cmpb
or
ss
push
enter
es
adc
add
loope
dec
sahf
cmp
dec
in
fs
xchg
int
push
shlb
xor
lods
sub
test
mov
adc
mov
rclb
mov
xchg
ret
inc
outsl
pop
movsl
mov
pop
adc
rep
push
sub
xor
xchg
jg
jmp
xor
into
lcall
out
pop
cmpsb
push
sbb
gs
xchg
sbb
movsb
cltd
jp
xchg
xchg
das
pop
jmp
jle
xor
jecxz
xchg
mov
and
dec
cmp
cmc
popf
into
outsb
and
mov
push
or
js
lret
xchg
sub
mov
mov
sbb
mov
add
mov
or
pop
mov
mov
sub
xchg
mov
ret
mov
cmp
lcall
sti
icebp
xor
cs
dec
ss
shrb
jmp
aad
mov
test
xchg
xchg
push
test
xchg
daa
xor
xchg
xchg
lret
test
or
and
and
ds
and
stos
popf
dec
outsb
sub
ret
out
add
subb
mov
mov
adc
and
sub
pop
push
adc
test
int
aam
mov
adc
js
xchg
dec
xchg
jp
inc
pop
adc
adc
dec
sub
mov
mov
sbb
adc
loopne
aad
cmp
lea
xchg
sub
jecxz
dec
nop
and
daa
cmp
out
push
cwtl
xor
int
inc
test
popa
pop
popf
xor
adc
movsb
cld
adc
adc
add
mov
xlat
or
jmp
pop
xor
pop
stos
inc
jmp
or
int
cld
inc
sub
jmp
scas
dec
mov
add
pop
adc
pop
call
jne
outsl
icebp
and
insb
sub
pop
ja
arpl
add
stos
pop
test
cld
pop
or
pusha
sbb
fdiv
xlat
jp
in
push
stc
xchg
pop
mov
sahf
pop
adc
xor
adc
adc
add
cmpsl
mov
pop
pop
adc
lret
addr16
rcrl
and
pop
sbb
pop
adc
pop
adc
idiv
adc
adc
sbb
rclb
mov
aaa
lahf
cmpsb
dec
leave
and
adc
ret
push
and
and
xor
pop
adc
popf
jnp
push
pop
push
adc
sub
xchg
insl
out
in
rcl
or
andl
adc
inc
jno
dec
jne
jecxz
call
cmp
mov
sub
std
xor
sbb
add
es
pop
in
sub
mov
es
xor
in
pusha
mov
bound
xchg
into
inc
or
pushf
pop
adc
stos
call
sbb
pop
frstpm(287
iret
fdivrs
adc
jns
andl
xchg
or
call
fildll
add
sbb
stos
out
dec
ret
adc
pop
adc
add
push
adc
adc
test
mov
out
add
push
cmp
add
stos
sbb
popf
pop
adc
adc
xor
cmp
mov
xchg
lods
sbb
add
and
shlb
sub
lret
pusha
mov
addr16
sbb
cmp
mov
mov
pop
mov
push
cmp
iret
out
aaa
pmovmskb
pop
jg
sahf
mov
adc
cmp
cmp
cmp
nop
cmpsl
and
insl
fisubl
adc
mov
mov
ljmp
pop
adc
cltd
pop
test
push
int3
sbb
repnz
push
adc
cmp
shlb
cmp
lods
pusha
inc
pop
adc
pusha
inc
pop
adc
gs
dec
cmp
adc
mov
mov
movsb
xchg
push
mov
sbb
pop
mov
jo
daa
movsb
test
sahf
cmp
lret
pop
ss
fisubl
xchg
clc
popf
pop
adc
push
mov
dec
adc
pop
mov
imul
sbb
gs
dec
out
in
mov
xchg
aaa
insl
fcmovb
lcall
jns
lret
stos
mov
loopne
dec
loope
and
out
fwait
ss
adc
pop
adc
cld
adc
adc
jg
cwtl
adc
pop
adc
cld
adc
adc
adc
mov
pop
adc
outsl
nop
inc
jle
insl
inc
out
push
or
jmp
pop
adc
sub
pop
pop
adc
lcall
loopne
dec
xchg
daa
pop
inc
and
xchg
jg
lods
sbb
dec
xchg
das
pop
aaa
xor
push
cmpsb
sub
imul
repnz
fmull
push
insb
and
rcrl
insb
or
pop
and
push
adc
mov
cmp
push
fisubl
xchg
mov
into
dec
push
jnp
repnz
fxch
mov
dec
xchg
scas
xchg
jno
jno
mov
lock
or
cmc
add
and
adc
movl
jo
fnstenv
sub
gs
popf
xor
mov
pop
adc
add
adc
mov
push
adc
jb
std
out
jl
mov
mov
out
jg
aas
jns
and
adc
pop
pop
adc
jp
mov
cmp
push
xlat
push
or
mov
jb
imul
lds
movsl
insb
les
pop
pop
adc
out
pusha
ret
lods
mov
push
sub
mov
cmp
int3
mov
cmp
dec
mov
and
scas
and
out
jl
sbb
aas
shll
jnp
jo
adc
insb
mov
popf
test
sbb
popa
adcb
cs
addr16
or
out
pop
fistpl
jp
popf
cmpsb
push
lods
addr16
jmp
aam
mov
sbb
dec
popf
sbb
cmp
mov
mov
jmp
aad
dec
jecxz
sbb
scas
cmp
mov
mov
es
pop
push
test
mov
xor
adc
out
sub
or
cmc
xchg
xchg
push
sbb
je
inc
sbb
mov
cmp
repz
sbbl
mov
out
or
out
outsb
icebp
jmp
dec
in
xchg
cmc
sub
mov
inc
mov
pushfw
mov
pop
popa
pop
jmp
push
in
mov
xchg
lret
jne
xchg
sbb
dec
aad
popa
inc
and
rcrb
mov
sub
decb
arpl
adc
mov
or
icebp
xchg
scas
xor
ret
dec
popf
mov
cwtl
dec
push
or
pop
cli
push
inc
sub
ret
out
mov
cmp
rcrb
jae
xor
jbe
fsubrs
aad
iret
int3
push
mov
mov
out
pop
push
cltd
fisttpl
xchg
sbb
outsl
cltd
pop
mov
js
clc
fwait
cmp
les
lock
fdivl
fwait
mov
cmp
xor
push
cmp
adcl
mov
jmp
pop
cmpsl
lcall
cmp
dec
xchg
mov
or
or
fisubrl
push
jp
push
sub
cmp
pop
mov
xchg
and
out
mov
add
push
fwait
pop
pop
xor
or
pop
call
xrelease
imul
enter
mov
iret
mov
cmp
fdivs
or
adc
adc
stc
test
clc
sub
cmp
daa
and
adc
out
cld
adc
adc
mov
fiadds
outsb
cmp
or
bound
mov
push
and
cs
insl
pop
jno
cmp
pop
int
inc
adc
jmp
out
lcall
cmp
dec
aam
dec
ja
pop
mov
dec
sbb
in
hlt
mov
xchg
sub
sbb
in
xchg
xor
aas
add
add
sub
in
repnz
call
movsb
scas
mov
scas
jns
out
sub
das
pop
mov
fiadds
mov
pop
pop
push
jns
dec
pop
adc
gs
xor
pusha
cmpsl
sbb
cmp
dec
stos
fldcw
jne
insl
fisttpl
sarb
pop
int
dec
neg
dec
adc
mov
repnz
mov
cs
jge
ret
mov
test
lcall
dec
or
jbe
out
add
jmp
loopne
jne
xchg
outsl
push
das
int3
lcall
pop
mov
mov
adc
adc
jp
nop
pop
outsb
pop
enter
cmc
mov
shll
cli
mov
xor
pop
fisubrl
movl
push
adc
in
movsb
pop
xchg
cmpsb
inc
std
or
mov
and
adc
xor
inc
fmul
std
loop,pt
push
test
cmp
lods
or
outsl
enter
inc
mov
push
mov
mov
sub
repnz
in
pop
cltd
outsl
cmp
fidivs
lods
gs
mov
jp
lret
popf
lods
cmp
mov
jo
out
fmul
cmpsb
out
pop
xor
mov
popa
dec
mov
pop
lcall
add
pop
cmp
pop
pop
cld
adc
adc
icebp
cmp
mov
xchg
and
movsl
sub
or
xchg
cmp
sahf
and
jecxz
jo
in
lcall
call
add
dec
mov
sbb
adc
mov
xchg
out
pushf
push
jb
adcl
data16
push
adc
inc
lret
mov
pop
pop
fmul
sub
mov
aaa
and
cmpsl
fstpl
fcmove
repz
std
dec
jge
jle
jo
aas
push
les
adc
mov
inc
or
mov
popa
or
pusha
and
adc
cmpsl
fwait
mov
push
insb
jl
adc
je
insl
adc
push
pop
sub
mov
mov
mov
rol
add
into
ljmp
dec
push
mov
push
xchg
mov
stc
jmp
js
cmp
mov
rolb
daa
inc
fisttps
push
shrl
mov
sbb
inc
mov
sbb
sub
outsb
sbb
hlt
mov
xor
in
incl
rep
test
xlat
add
push
adc
enter
out
daa
sbb
dec
popf
pushf
fcmovbe
xlat
jmp
sub
xor
push
mov
mov
mov
mov
fiadds
cltd
xor
cmpsb
out
mov
ljmp
inc
xlat
leave
jo
and
lea
or
fnsave
xchg
sub
repz
out
xor
popa
xchg
ret
sbb
mov
cli
xor
push
daa
pop
fsubrl
inc
rcr
ljmp
xchg
imulb
and
and
adc
push
outsb
addb
ret
daa
jo
pop
adc
js
stc
jno
cmp
pop
lock
pop
stos
out
xchg
push
cmc
imul
cld
stos
shlb
push
adc
dec
outsl
xor
xor
cmp
push
adc
push
inc
xchg
xor
push
xchg
pop
in
xchg
xor
fdiv
pushf
dec
ss
into
dec
sbb
jp
cmp
out
insl
mov
dec
sbb
ds
pop
add
xchg
ja
loop
cmpsb
mov
jle
imul
xchg
sub
sti
mov
dec
ss
adcl
nopl
inc
pop
imul
dec
sahf
test
sbb
insl
ficompl
sbb
jp
sbb
sbb
out
lea
fstps
jg
inc
out
xchg
mov
sub
jne
dec
mov
xchg
mov
cmp
cmp
mov
mov
idiv
xchg
xor
gs
xor
dec
out
dec
sahf
lock
pop
gs
push
sbb
fs
loope
inc
jno
and
icebp
cmp
cmp
sub
dec
or
xor
andl
mov
pop
daa
dec
cmp
ds
pushf
jp
in
and
xchg
into
int
shll
inc
fcoms
adc
xor
scas
fdivl
xchg
inc
inc
inc
xchg
test
mov
jge
mov
pop
cmp
sub
xchg
rcll
out
lcall
xor
inc
mov
add
iret
inc
std
jmp
negb
lds
cltd
adc
add
stos
adc
lret
lods
dec
pop
test
sub
or
sbb
imul
call
mov
lock
adc
test
rol
aam
ret
push
mov
jle
loopne
cmp
filds
inc
orl
stos
cmp
lret
mov
jo
das
outsb
sub
adc
adc
pop
pop
push
nop
pop
fimuls
pusha
dec
cmp
push
sbb
jns
ret
push
dec
cmc
je
xchg
insb
int3
adc
add
scas
mov
test
daa
stos
popaw
jmp
mov
mov
cmp
jp
repz
bound
adc
add
pop
dec
dec
call
lock
dec
pop
sub
aam
ds
divb
push
adc
jp
scas
pop
pusha
repnz
cmp
sbbl
fwait
mov
scas
jmp
je
pop
or
sbb
fucomp
cmp
icebp
test
xor
push
xchg
rcll
cwtl
xor
inc
imul
nop
lcall
cmp
stos
mov
dec
cmpsl
int
xchg
imul
mov
inc
gs
jae
fadd
sub
test
sub
mov
in
loope
scas
bextr
adc
pop
imul
mov
add
mov
add
sub
daa
ss
outsl
gs
or
mov
call
mov
inc
gs
arpl
frstor
cwtl
xchg
cmpsl
popf
loop
adc
fs
xchg
jle
push
and
or
push
icebp
xor
imul
xchg
cmp
push
outsl
xchg
xor
repz
in
fnstcw
sbb
call
xchg
jns
in
adc
insl
push
inc
push
or
xor
icebp
jnp
outsb
jecxz
filds
ja
dec
neg
dec
les
xor
jbe
push
fisubrl
cmpsb
xchg
lods
mov
out
sub
adc
stos
jbe
push
popf
js
and
loopne
inc
sub
and
stos
in
adc
repz
jae
push
leave
jp
jecxz
das
aad
lea
lods
pop
in
movsb
sbb
out
xchg
imul
and
insl
fcmove
push
adc
pop
call
andb
xchg
jge
test
push
dec
pop
mov
js
mov
ret
adc
sahf
mov
dec
xchg
lea
jno
popa
cmp
add
mov
adc
jno
mov
jbe
xchg
mov
and
pusha
daa
lds
inc
mul
int
or
movsb
mov
xchg
xchg
mov
and
xor
cmp
frstor
lods
or
jae
push
pop
fldenv
outsl
pop
je
pop
xor
ljmp
ss
lods
cmp
movsb
sbb
shl
sti
rolb
popf
mov
push
mov
ret
or
int
inc
inc
xchg
adc
mov
test
dec
xchg
mov
jo
popa
clc
fmuls
inc
mov
adc
in
or
xchg
mov
pop
ret
push
das
cmpsl
xchg
scas
mov
push
jns
out
mov
sbb
push
sbb
push
sub
nop
and
cmpsb
rorb
filds
das
pop
cmp
cld
stos
popa
xor
xchg
sub
push
cli
mov
jecxz
inc
jae
test
add
mov
or
pop
fisttps
xor
and
pop
popf
js
cmp
cs
aad
fdiv
data16
add
aad
inc
test
jle
dec
sbb
lds
xchg
mov
sub
or
mov
stc
mov
inc
call
sbb
inc
sbb
push
add
cmp
dec
movsl
or
xor
or
lock
es
fwait
push
and
pop
xor
inc
lea
xchg
out
push
jp
ss
add
mov
aaa
jo
pop
adc
mov
xchg
stos
mov
xor
cmp
scas
pop
mov
sub
in
in
sbb
push
inc
jmp
pop
adc
cli
adc
out
pop
aas
je
ret
aaa
jo
adc
lret
pop
subl
xchg
sbb
loope
cmp
mov
fdivp
push
adc
aad
imulb
jbe
push
and
les
xor
sbb
adc
test
sub
push
push
fldcw
cmp
aam
ret
sub
test
arpl
mov
es
lods
mov
push
cli
rcr
decb
je
ljmp
sbb
sub
jae
dec
aam
mov
push
sti
inc
dec
and
mov
fsubrl
sbbb
add
mov
push
fsubrl
enter
mov
out
push
loopne
jns
cmp
jo
mov
iret
mov
shrb
pop
push
arpl
jae
push
in
push
insl
fmuls
loopne
fnstenv
sbb
adc
es
mov
rcll
jnp
push
or
xor
fdivrl
negl
and
pop
jmp
popf
sub
xor
jae
and
imul
push
or
jmp
movsb
dec
insb
test
cmpsb
jp
xchg
ja
cltd
mov
push
push
xchg
or
xor
icebp
addr16
push
sti
enter
xchg
or
cwtl
sbb
xchg
out
push
push
push
push
sbb
sbb
addr16
sub
outsl
fcomp
sahf
call
xchg
arpl
ror
imul
inc
or
outsl
mov
or
xchg
push
cmc
rcll
mov
fidivl
inc
push
mov
lret
loopne
shl
mov
fdivs
and
adc
push
mov
adc
dec
jbe
pop
xor
enter
aad
dec
mov
and
js
inc
out
shl
push
and
pop
test
mov
repz
xchg
scas
test
sarl
xor
xchg
nop
cmp
sbb
sahf
cmp
sub
xor
push
mov
lods
mov
fst
xchg
jmp
lea
insl
push
sbb
out
pop
jp
aad
das
pop
jg
or
cmp
pop
mov
and
xchg
outsb
mov
fsubl
enter
ljmp
addl
dec
xchg
daa
xor
inc
je
xlat
leave
mov
and
dec
pop
and
lock
xor
sahf
mov
in
leave
fwait
ss
pop
sbb
mov
out
out
inc
mov
ret
dec
sbb
loopne
out
repz
adc
jp
out
xchg
das
fnstsw
js
and
push
pop
outsl
in
mov
test
enter
imul
cmp
xchg
sub
mov
sbb
pop
ja
sub
bndldx
in
mov
sbb
aaa
repnz
fwait
sub
addr16
movsl
fidivl
shl
imul
es
mov
mov
lret
push
cmp
stos
out
xor
int3
jae
cli
xchg
into
mov
push
mov
lods
bound
inc
in
push
pop
mov
push
cmp
mov
mov
mov
sub
in
pop
out
in
sub
nop
test
sbb
lahf
inc
pusha
xchg
aam
out
rcrl
add
push
jns
iret
insl
mov
movsl
jnp
call
in
jmp
sub
mov
pop
mov
in
or
pop
jo
leave
adc
enter
mov
push
mov
xor
popa
mov
idivl
and
sti
sbb
adcb
outsl
rcrb
jnp
jne
into
gs
add
cmp
imul
and
in
dec
jns
dec
insl
scas
mov
push
mov
sbb
es
jge
sub
xchg
hlt
into
jge
mov
mov
in
repnz
mov
fldenv
fsubrl
xchg
fiaddl
and
xchg
add
add
cmp
sub
mov
mov
aam
or
xor
xlat
or
xchg
dec
das
xor
xor
addr16
cmp
add
gs
jge
ficoml
lock
lock
leave
mov
outsb
xchg
test
aad
int
mov
add
mov
and
movsl
js
pop
lea
es
and
inc
jnp
jecxz
enter
decl
adc
movsb
push
mov
pop
movsl
fldl
pop
inc
fiadds
test
fildl
add
rolb
lret
mov
out
mov
icebp
jbe
mov
scas
sbb
jns
sbbb
push
xchg
sub
jge
in
dec
adc
cmpsb
sbb
outsl
cltd
and
xlat
cld
jae
pop
mov
pushf
inc
mov
orb
arpl
dec
test
cmpsb
insb
fmuls
xchg
cld
pop
xabort
mov
daa
mov
orl
fdivrl
mov
mov
cmp
cmp
xchg
and
stc
jno
insl
cmp
lds
push
cs
shl
xor
in
int3
fwait
ss
adc
repnz
leave
adc
mov
fdivrl
sub
out
out
bswap
out
xchg
jp
push
repnz
fwait
gs
jg
pop
shlb
sahf
mov
xchg
lcall
cmp
outsb
mov
shlb
xchg
or
add
lret
cmpsl
sbb
pop
mov
adc
pop
loopne
test
cmp
inc
dec
cmc
cmp
ret
mov
mov
mov
es
scas
mov
xchg
icebp
out
dec
ss
jb
mov
jle
sbb
shrl
rolb
and
xchg
sub
cld
cld
inc
pop
adc
pushf
sbb
mov
jecxz
inc
pop
adc
mov
jns
loope
in
mov
imul
pop
adc
xorl
std
stc
sub
out
aaa
cmpsl
add
pop
adc
icebp
lods
xor
jmp
xchg
pop
dec
xchg
xlat
xor
ret
xchg
and
pop
adc
mov
shrb
inc
pop
adc
loope
mov
movsb
dec
out
xor
call
loope
insl
fidivl
jp
push
jb
pop
sub
dec
pop
loope
or
sub
ss
dec
dec
std
shll
adc
xor
xchg
aad
in
scas
xchg
and
dec
dec
ret
mov
mov
rcl
lock
mov
cmp
ss
mov
popf
aas
outsb
pop
xchg
jl
and
stos
push
xor
push
pop
ja
rolb
pop
xchg
and
pop
pop
inc
pop
orb
cmc
adc
clc
mov
xchg
imulb
add
push
adc
fdivl
and
add
jmp
test
fildll
add
cld
adc
adc
inc
add
decl
andl
negb
iret
mov
mov
push
push
call
adc
and
xor
into
pop
notl
filds
into
fdivs
rclb
stos
rolb
inc
sub
in
jmp
out
pop
leave
lcall
dec
mov
ror
mov
stos
cmova
mov
test
mov
xor
pop
mov
dec
adc
mov
add
lds
addr16
jp
push
out
lods
fmull
test
aad
sub
mov
or
xor
insb
dec
cmp
insl
out
into
popf
lret
adc
clc
popf
pop
adc
adc
pop
adc
pusha
inc
pop
adc
cltd
xchg
or
xor
xchg
iret
fcompl
push
xor
insl
aaa
paddsw
push
enter
push
adc
lock
mov
xchg
call
idivb
and
push
cmp
rcrl
ds
filds
sub
gs
arpl
jmp
std
ret
inc
cwtl
test
lahf
int
adc
push
and
xchg
mov
xor
testl
jb
inc
jae
pop
jle
outsb
add
jnp,pn
stc
mov
inc
js
std
lcall
movsb
pop
bound
aas
add
mov
into
or
push
out
filds
push
sub
pusha
mov
mul
adc
negl
add
push
adc
dec
xchg
and
push
daa
movsl
cld
adc
adc
test
jg
rclb
push
adc
inc
gs
inc
movsb
cmpsl
out
pop
push
sbb
cmovle
add
mov
sbb
push
aaa
cmp
insl
cmp
es
mov
push
mov
jno
and
adc
xchg
xor
cmp
jne
call
call
bound
ja
push
in
xchg
push
adc
push
jecxz
mov
sahf
push
outsb
or
xor
mov
inc
rorb
mov
xchg
and
in
or
pop
mov
push
dec
pop
cmp
push
insl
outsb
aaa
lcall
push
mov
gs
push
movsb
ret
orl
insb
fimuls
lods
cwtl
mov
xchg
dec
cmp
icebp
lcall
sbb
pop
push
jp
and
int3
mov
pop
int3
and
pop
jo
les
and
fs
xchg
scas
push
arpl
fdiv
out
lcall
out
push
cwtl
mov
xchg
divb
add
out
mov
pop
jno
lcall
out
aaa
adc
dec
sahf
cmp
jle
pop
add
push
adc
mov
push
or
dec
dec
imul
out
xchg
push
test
sbbl
xchg
sbb
out
insb
jl
adc
es
out
cmpsb
push
fmuls
xlat
or
and
mov
rcrb
mov
sub
sahf
push
fwait
mov
push
icebp
push
and
mov
lds
aad
jge
mov
mov
lock
test
out
cmp
addr16
jg
pop
mov
enter
xchg
xchg
sarb
in
push
loope
inc
call
sbb
cltd
loopne
mov
outsb
push
jnp
pop
jmp
mov
fdivrl
sbb
pop
pop
push
add
call
js
mov
cmpl
fsubrs
adc
xchg
mov
jmp
ret
fildll
fiadds
xor
or
xor
in
lea
adc
es
add
sub
call
fisubrs
outsb
inc
mov
xor
ja
pop
jne
xchg
aas
jge
xor
jecxz
push
scas
pop
imul
out
adc
mov
jb
cmp
ljmp
add
add
dec
xchg
mov
xor
enter
inc
sbb
int3
xor
push
adc
jae
mov
mov
mov
das
pop
adc
push
adc
inc
mov
js
push
adc
movl
test
arpl
or
hlt
jl
js
xor
mov
cmp
xchg
rolb
outsl
aaa
adc
dec
xor
sti
sbb
ja
pop
and
loope
mov
inc
call
test
push
lcall
lret
in
jle
repnz
into
stos
pushf
pop
sub
push
fcoml
mov
mov
rorl
sub
movsl
popa
pop
adc
movsl
ss
imul
cmp
mov
push
xor
cltd
push
ret
add
into
push
add
push
add
out
movsb
icebp
pop
iret
and
test
rclb
aas
je
subb
nop
cmp
pop
iret
int
icebp
sub
push
data16
js
pusha
cmp
xor
icebp
fisttpl
pop
aas
fs
pop
mov
movsl
dec
push
andl
mov
popf
mov
mov
lret
gs
push
arpl
cwtl
pop
xchg
lret
lods
cs
out
ss
or
aad
push
and
push
cmp
out
out
mov
mov
xchg
inc
cmp
lock
outsb
fdivrp
int
inc
aam
rcr
hlt
gs
cmp
sbb
fstps
and
in
mov
mov
xchg
dec
out
ss
mov
or
aad
push
imul
xchg
xlat
pop
jne
movsl
cmp
sub
and
mov
imulb
mov
sbb
mov
mov
int3
out
and
sahf
movsl
popf
divl
cmp
sbbl
insl
scas
dec
sbb
out
insl
subb
lret
mov
sbb
push
and
js
pop
outsb
pop
jg
scas
inc
xchg
imul
mov
cwtl
lock
and
sbb
push
xor
mov
mov
sbb
dec
cli
sub
mov
aam
scas
xchg
sbb
sub
push
fisttpll
pop
push
jns
inc
inc
sahf
cmp
in
stos
addr16
adc
xchg
jbe
inc
or
imull
clc
rcrb
mov
xor
int
pop
push
xchg
js
inc
mov
sub
fstl
mov
mov
out
leave
jns
rcl
faddp
fs
sub
dec
xchg
es
aas
and
ret
mulb
mov
mov
bound
lds
sbb
adc
pop
in
push
mov
lods
mov
or
arpl
push
jnp
mov
rcl
mov
mov
or
xor
test
cmc
imul
cmp
lea
outsl
lret
ret
insl
mov
sbb
push
mov
outsl
push
mov
mov
call
cwtl
jbe
out
cmc
sbb
pop
fstps
int3
inc
push
movl
dec
arpl
arpl
mov
lahf
dec
jmp
int
iret
fdivrl
cltd
and
shrb
xchg
cwtl
add
cmp
mov
inc
hlt
xor
xchg
jmp
shrl
sbb
mov
xchg
loope
lods
shlb
int3
push
shl
xchg
pop
jns
xor
iret
push
inc
lods
jecxz
mov
xchg
sub
outsl
mov
xor
test
add
adc
mov
movsb
sub
mov
mov
out
sbbl
xchg
test
pushf
sbbb
mov
inc
into
inc
inc
imul
daa
das
icebp
cwtl
das
xor
fisttpl
dec
aad
dec
mov
jbe
add
xor
jns
sub
xchg
dec
and
scas
mov
jb
jb
dec
jno
add
js
mov
xor
cmp
jns
stos
fnsave
dec
mov
sbb
xchg
sti
pop
xor
xor
mov
pop
call
scas
into
sub
mov
push
adc
inc
adcb
xchg
inc
inc
test
sbb
sub
adc
adc
fbld
pop
push
and
fdecstp
in
mov
mov
pop
push
je
inc
lock
adc
and
inc
adc
push
dec
push
pop
rcrb
leave
mov
cmpsb
mov
push
clc
aas
fildl
xchg
or
mov
cld
jecxz
movsb
pop
sbb
jae
fwait
sti
call
cmp
es
addl
push
mov
sub
jmp
mov
iret
push
into
dec
fs
or
lock
jp
sub
imul
pop
jg
fbstp
dec
rorb
cmp
pop
popa
outsl
fwait
jg
jb
sbb
gs
inc
insl
and
xor
movsl
mov
insb
cmp
add
lock
jbe
lret
pop
adc
loope
and
and
punpckhwd
mov
mov
mov
repz
jecxz
lods
pop
dec
sbb
push
adc
inc
mov
int
je
mov
inc
fisttps
repz
fmuls
dec
ret
enter
aad
jmp
push
stos
sbb
adc
orl
movsb
dec
jmp
cmc
movsl
xchg
jns
movsl
mov
cmpsl
push
sbb
fildll
pop
shlb
fsts
xchg
ss
test
das
notb
or
les
aas
add
cwtl
cmp
cwtl
dec
je
adc
adc
mov
fdivl
xchg
frstor
and
shl
aad
popa
ret
xchg
add
dec
enter
mov
lret
xchg
sub
pop
rclb
popa
xchg
aad
xchg
ret
xor
aad
icebp
pop
pop
jnp
pmulhuw
lcall
loopne
cmpsb
out
pop
lds
jns
xchg
je
dec
push
scas
push
cld
adc
adc
mov
ret
dec
mov
or
fisubrl
insl
fcmovb
pop
jmp
outsb
xor
loopne
inc
out
inc
xchg
and
and
aas
cwtl
loop
adc
fs
xchg
in
mov
jbe
add
cltd
xor
inc
cmp
dec
in
inc
call
cmp
mov
test
xchg
jno
fwait
mov
movsb
xchg
and
push
adc
pop
dec
mov
sbb
inc
or
loope
out
pop
ds
out
or
rolb
in
inc
pop
fstp
fnstcw
and
stos
mov
push
fbstp
lcall
mov
popa
stos
aas
mov
xchg
cmp
inc
aam
push
adc
pop
ss
sbb
xchg
inc
dec
cwtl
daa
rcrl
in
sub
mov
decl
pop
sub
mov
adc
adc
inc
push
fcomp
jecxz
gs
jb
cli
leave
push
call
roll
ret
daa
or
int3
pop
outsl
push
lcall
push
dec
push
stos
fists
push
and
sbb
sti
mov
dec
inc
add
xchg
mov
std
cmp
testl
stc
push
push
lret
rcrl
inc
jne
add
add
xchg
movsb
outsl
rcrb
cs
sbb
dec
ds
in
aam
inc
mov
addr16
into
jg
add
xor
arpl
lcall
test
jo
xchg
test
xchg
mov
test
sahf
int
fisttpl
mov
add
mov
jns
icebp
jb
aad
scas
jg
lret
pop
pop
lret
aam
ret
test
fcmovb
dec
jnp
adc
lcall
into
push
jo
incb
mov
pop
rolb
push
dec
xlat
mov
mov
insl
adc
int3
shlb
inc
add
ja
add
jle
add
adc
adc
inc
add
stos
inc
add
mov
inc
add
adc
adc
inc
add
jle
add
cmp
adc
inc
add
add
adc
inc
add
add
inc
add
jle
add
adc
adc
inc
add
push
inc
add
adc
adc
inc
add
es
int
mov
rclb
jecxz
shrl
mov
in
shl
mov
repz
ljmp
cmp
xor
lods
fidivs
xlat
fidivrs
push
adc
addr16
hlt
scas
push
imul
repnz
push
sub
popf
scas
mov
clc
lcall
pop
idivl
xchg
sbb
jg
mov
out
pop
jae
hlt
lods
dec
scas
push
out
pop
bound
mov
fidivrl
and
xor
mov
rolb
ffree
push
mov
xchg
hlt
cmp
xchg
and
aaa
jnp
insl
mov
fstl
adc
mov
fstpt
aaa
or
int
insb
dec
lods
jle
loop
imulb
sahf
fisubs
pop
lea
ret
imul
sbb
dec
push
sub
sub
arpl
cmpsb
movsl
rolb
movsl
popa
mov
test
out
mov
movsb
pop
mov
out
xor
xchg
test
mov
mov
adc
inc
xchg
lods
sbb
mul
inc
fwait
pop
or
fidivrs
dec
xchg
xor
daa
adc
jns
rolb
mov
stos
repz
outsb
shlb
push
mov
addl
stos
jge
loop
xlat
mov
leave
pop
mov
cmc
dec
ret
inc
push
out
loopne
je
sahf
out
mov
adc
test
inc
mov
cmp
fcoms
insb
push
imulb
call
sbb
pushf
sbb
rclb
mov
sti
insl
adcb
cmpsb
in
mov
rorb
pop
adc
insl
pop
sbb
out
lea
pop
cmp
loopne
dec
mov
xchg
in
xor
movsb
xchg
icebp
insl
sbb
hlt
ja
lcall
stc
xchg
js
mov
jb
add
dec
inc
stos
lret
mov
icebp
dec
fmull
fcom
pop
xchg
inc
inc
ficomps
fisubs
xchg
scas
popf
cmpsl
inc
mov
fcmovb
ror
inc
add
test
repnz
les
push
xor
mov
stc
icebp
shlb
push
fisttps
jno
mov
pop
aad
loopne
mov
pop
in
mov
shr
sub
cmp
sbb
mov
mov
add
adc
jl
mov
popf
aaa
mov
sub
cltd
mov
sub
pop
sbb
push
adc
mov
lahf
fcomi
in
lahf
pop
xchg
in
and
stos
xlat
cmpsb
and
enter
call
adc
out
pop
and
loopne
adc
xlat
cmpsb
push
mov
sbb
jg
mov
das
xor
sub
sbb
jbe
mov
jo
scas
or
idivb
gs
pmaxub
jecxz
adc
sbb
aam
xor
xor
jns
insb
fcoms
push
adc
xchg
out
push
pop
into
mov
mov
mov
cmpsb
mov
ds
insb
cmc
push
into
xor
cmp
cmp
mov
mov
mov
dec
cmp
adc
push
inc
stos
jbe
cmp
out
arpl
aad
jo
or
add
cmc
mov
push
popa
fst
mov
imul
inc
decb
sbb
inc
outsb
scas
rcr
and
sub
or
hlt
mov
cwtl
push
push
adc
stos
popa
lcall
enter
aam
or
dec
loope
add
js
popa
lods
imul
inc
add
imul
add
jae
sbb
push
sub
imul
push
cmpsb
das
std
loopne,pn
pushf
into
cli
sbb
repz
mov
neg
test
mov
mov
mov
adc
fs
test
negl
ret
sahf
pop
std
and
and
push
pop
daa
mov
lods
mov
dec
sub
cmp
push
inc
xchg
xor
stc
sub
jo
adc
cmp
or
in
push
push
sbb
jp
repnz
pushf
xchg
inc
outsb
pop
in
pop
imul
out
xchg
lock
leave
les
jmp
push
jmp
add
add
pop
ljmp
push
out
mov
push
pusha
inc
shrb
into
jno
dec
in
imul
les
shlb
or
arpl
out
ret
mov
repnz
outsl
pop
lods
mov
in
mov
movl
insl
dec
pop
push
dec
mov
mov
or
push
mov
adc
cmpsl
push
sub
js
aam
mov
shl
xor
repnz
xor
sbb
addr16
scas
ja
enter
xchg
pop
mov
mov
fmull
and
mov
in
aad
sub
cmp
shll
sbb
loopne
xor
sahf
out
mov
jae
jp
dec
lock
push
adc
fcoms
insb
push
imulb
call
inc
addr16
sbb
push
jp
push
sub
xor
jnp
fcoms
sbb
pop
mulb
sahf
inc
inc
sbb
icebp
xor
out
inc
sbb
mov
call
lret
mov
mov
push
jns
inc
lock
leave
sbb
xchg
jns
mov
add
jbe
lret
jmp
aas
sub
cmp
addr16
and
push
sub
cmp
lcall
sbb
stc
repnz
cmpl
jnp
push
jns,pn
les
ds
dec
pop
sub
nop
pop
divb
fcoml
idivl
in
cmp
and
es
fsts
push
cmp
inc
loop
ret
insb
inc
inc
add
jbe
adc
adc
out
pop
jns
hlt
mov
jns
out
pop
push
cmp
sub
lret
ljmp
pop
pop
pop
fldt
jp
add
inc
test
mov
aam
fcmovb
sub
fldt
hlt
adc
and
stc
stc
pop
jge
mov
pop
outsb
inc
mov
xor
in
jl
sbb
xlat
add
fcmovne
xor
aam
mov
cmpsb
int
insb
shlb
aad
out
imul
cmp
and
andb
lret
sub
mov
jo
pop
movsb
int
mov
outsb
sbb
popa
push
inc
and
pop
push
imul
cltd
iret
jns
popf
das
inc
jmp
adc
outsb
mov
fisubs
movsb
jne
lods
lcall
aam
xchg
pop
push
stc
sbb
add
pop
ljmp
push
mov
jecxz
add
int3
test
ja
push
scas
je
mov
mov
mov
dec
cmp
adc
push
push
scas
jle
ret
mov
xchg
sbb
pop
fcompl
jae
cmp
mov
xor
mov
int
inc
outsb
fisttpll
pop
jle
and
pop
pop
sbb
shlb
cmc
mov
mov
mov
cmp
shrl
xchg
fsub
sbb
mov
dec
ret
push
pop
repz
ds
fwait
cs
psubb
or
fldt
cltd
cltd
add
mov
mov
out
cmp
mov
fwait
push
mov
dec
lods
imulb
adc
xchg
out
cmpsb
cmpsl
adc
or
push
mov
nop
push
xchg
arpl
inc
sub
and
lret
hlt
add
push
mov
add
push
fisubl
clc
and
mov
gs
mov
fucom
xchg
mov
cmc
arpl
sahf
sbb
shlb
adc
in
imul
popa
scas
mov
shl
or
imul
mov
xchg
je
fninit
out
loope
xchg
or
cmp
mov
rcl
lret
and
pop
fisubl
push
lea
cmc
insl
sub
mov
inc
sbb
push
jecxz
sti
mov
cmp
ret
cmp
cmp
rep
push
je
pop
scas
mov
xchg
jmp
and
mov
sbb
scas
shlb
xchg
inc
pusha
sahf
sbb
mov
jne
mov
dec
push
movsb
xor
cmp
lret
insl
or
pop
jp
pop
xorb
lods
mov
xchg
test
loope
and
cmp
sub
int
imul
mov
fiadds
cmp
cmpsb
in
mov
xchg
insl
cmp
xchg
and
xor
imull
gs
outsl
mov
mov
cwtl
mov
lds
leave
sbb
adc
pop
push
loop
movsl
insl
cmp
adc
sub
clc
imul
dec
xchg
sbb
mov
xchg
out
int
idivb
pop
inc
or
daa
dec
sbb
dec
adc
jns
adc
stos
xor
fcmove
push
aas
xchg
jg
js
pushf
gs
xchg
sub
dec
dec
sbb
dec
sbb
dec
adc
outsb
ftst
int
dec
push
xor
nop
xchg
fs
loope
cli
rol
xor
mov
xchg
xor
out
fidivs
jo
and
mov
shl
jle
call
in
pop
xchg
dec
inc
mov
cmp
xor
call
bound
mov
xorl
adc
fs
xlat
cmpsb
xor
shr
inc
popf
mov
lds
adc
jmp
cltd
call
mov
popf
jl
in
add
cmp
sub
loop
mov
mov
scas
pushf
loopne
adc
out
push
mov
add
outsb
or
movsl
add
in
scas
out
cwtl
loope
mov
mov
xchg
or
stos
shlb
add
mov
add
dec
sbb
mov
test
push
pop
out
inc
mov
xchg
test
sub
rcl
sbb
ja
push
pop
fbld
jecxz
mov
cwtl
push
iret
lds
inc
mov
push
scas
inc
cwtl
mov
inc
ret
test
lret
mov
cmp
jne
push
ret
lcall
idivb
mov
mov
add
repnz
and
inc
and
pop
cmpsl
in
gs
fisubrl
pop
jno
dec
clc
std
pusha
push
push
and
cli
or
inc
xor
lret
daa
xor
loop
es
sbb
hlt
in
mov
xchg
inc
sbbb
adc
js
hlt
nop
and
add
jp
lcall
adc
shr
fcoml
cmp
pop
test
jl
popf
repz
pop
and
adc
and
push
mov
je
idiv
mov
pop
rorl
mov
fpatan
fmuls
dec
add
add
out
stc
adc
sub
lea
subl
insl
fs
jbe
xor
cmpsl
fcoml
sbb
push
push
adc
jp
adc
inc
out
int
pop
and
mov
call
bound
xor
mov
add
nopl
sahf
sbb
rcl
fstp
test
arpl
inc
pop
test
mov
in
shrl
push
rep
cmp
lds
push
adc
cmp
jo
rolb
out
mov
repnz
xor
insl
ret
ds
add
dec
xchg
lods
mov
cli
xchg
push
int
loopne
cs
insl
push
repz
push
adc
aas
xchg
movsb
pop
push
jnp
es
xchg
mov
loopne
dec
cmp
in
sti
add
push
push
adc
jg
cmp
cmp
fcoms
enter
mov
fnstsw
loope
out
rcrb
sub
outsb
mov
shl
mov
fdivs
dec
mov
ds
movsb
scas
push
jb
sbb
mov
cmpsl
ret
jbe
mov
iret
outsb
popa
int
dec
push
jl
loop
sar
test
out
inc
fdivl
loop
mov
mov
lret
fadd
fstpt
fs
loopne
adc
lock
jp
gs
data16
mov
loopne
push
std
xchg
mov
fs
push
adc
push
inc
xchg
xor
sti
shll
jne
dec
or
mov
gs
cmp
push
adc
cmp
xor
add
xor
xchg
mov
rcl
faddp
insb
repz
leave
adc
sbb
push
mov
rol
pop
inc
stc
sbb
mov
ret
aad
mov
leave
mov
ror
push
les
out
mov
dec
scas
aaa
sub
in
xor
add
imul
dec
xchg
scas
pop
pop
imul
push
aad
mov
fdivrs
mov
mov
inc
test
scas
jle
adc
les
popl
fbstp
imul
mov
out
jno
loop
inc
adc
jne
sahf
or
incl
dec
loop
dec
out
jp
aam
lea
aam
and
loop
cltd
mov
in
mov
add
and
popa
and
or
pop
mov
dec
sbb
shll
lret
adc
adc
jo
lret
out
pop
mov
push
mov
sub
mov
xlat
xor
cmp
xlat
xor
adcb
aam
push
push
and
lea
cld
mov
test
sbb
pop
lea
shrb
pop
mov
mov
data16
mov
or
push
dec
lret
pop
jecxz
push
jb
ret
sbb
add
in
add
pushf
test
js
push
scas
aaa
lcall
push
lret
cmc
popa
ja
in
out
and
mov
adc
dec
movsl
sub
sub
cltd
mov
xor
adc
je
fisttpl
inc
or
or
fs
subl
sti
sub
mov
insl
xor
rcrl
xchg
sub
cmp
in
rcrb
cmc
jl
leave
pop
dec
imul
push
cmc
xchg
cmc
repz
cmpl
filds
loope
rolb
ja
loopne
adc
add
imulb
sti
dec
std
push
cltd
pop
std
mov
popa
add
push
adc
movsb
push
out
xor
in
mov
or
push
stc
jae
pushf
mov
adc
mov
insb
jl
adc
xor
pop
cmp
enter
repz
int
popa
shlb
adc
pop
cs
lahf
mov
fisttpl
dec
out
sub
and
mov
stos
inc
jns
mov
mov
lahf
mov
mov
jns
mov
aam
mov
jns
out
xchg
mov
lea
mov
xchg
mov
scas
inc
push
outsb
dec
mov
adc
idivl
cmp
sub
aaa
push
aam
sbb
mov
mov
inc
fdivl
lods
xchg
mov
cmp
xlat
xchg
xchg
scas
test
mov
xchg
aam
loopne
imul
cmp
sub
out
out
xchg
jecxz
subl
cli
jge
cmpsb
leave
pop
jne
es
out
pop
push
xor
xchg
je
inc
lcall
es
xor
jb
pop
in
pop
cmp
int3
mov
xchg
xchg
imulb
mov
test
ljmp
fdivs
int3
sbb
adc
pop
push
repz
mov
js
dec
add
mov
adc
dec
test
insb
jl
adc
add
mov
loopne
scas
mov
dec
ret
add
xor
cli
jno
lods
xor
lret
mov
lock
sbb
cmpsl
popf
fcmovne
or
scas
push
lahf
jns
leave
insl
js
inc
pushf
mov
mov
sahf
cmpsb
loope
mov
and
fwait
sbb
pop
imul
pop
push
adc
ss
lods
dec
lahf
mov
repnz
and
sahf
jb
xchg
stos
andl
add
icebp
sub
mov
mov
scas
fwait
mov
call
xlat
pop
cmp
les
cmpsl
in
mov
iret
xchg
mov
jge
iret
xchg
loopne
out
pushf
mov
in
xorl
shlb
lock
insl
inc
and
ds
push
fdivrl
dec
cmc
cltd
mov
out
cs
popa
insb
cmp
outsb
cwtl
in
push
leave
sbb
fidivs
mov
cmp
addl
mov
jmp
fadds
loope
adc
xor
push
mov
je
int
call
nop
rcrl
shll
imul
adc
pop
mov
fs
mov
sbb
pusha
sbb
adc
mov
negb
xor
scas
ss
inc
jno
cmp
dec
aam
cmp
dec
mov
dec
icebp
mov
adc
add
pop
xchg
add
fs
and
aad
xchg
cmp
bound
mov
dec
ficompl
negl
repnz
ja
jae
xchg
mov
xchg
jbe
decl
rolb
out
movsl
insl
inc
mov
cmp
test
or
ljmp
and
sarl
adc
lcall
inc
sbb
pop
sub
dec
jmp
int
js
sub
clc
insb
test
mov
ffree
sbb
add
sub
and
hlt
fisubrs
or
push
fstps
sbb
imul
dec
mov
pop
inc
je
sbb
sub
mov
jl
push
pop
mov
lock
cmpsl
es
repz
orb
aaa
scas
dec
adc
bound
and
mov
hlt
call
and
push
hlt
xor
mov
push
fwait
mov
adc
call
dec
push
dec
mov
rcr
gs
loopne
mov
mov
cwtl
and
out
mov
lret
insl
sub
jg
mov
mov
or
gs
out
push
or
daa
dec
ljmp
sub
scas
push
lahf
cmpsb
push
loop
xor
int
arpl
daa
es
cmp
xchg
ss
fidivl
lock
cld
xor
lret
push
mov
test
scas
pusha
sbb
add
addr16
adc
push
les
leave
imul
adc
inc
leave
push
jnp
inc
insl
repz
adc
pop
rol
outsl
and
ss
out
push
movsb
vmptrld
data16
or
mov
fbstp
mulb
call
out
test
lret
imul
sub
push
pop
ja
xchg
aad
pusha
dec
push
sarb
cmp
lcall
push
push
xchg
nop
in
sbb
and
cmpsb
out
mov
daa
lds
repz
ficoml
cmp
enter
icebp
mov
incb
out
mov
mov
in
rcrb
in
rclb
sub
sub
xor
fadds
ss
mov
and
fstl
cmp
mov
cmp
cmp
adc
dec
xchg
das
mov
mov
xor
mov
imul
lret
or
mov
rcl
icebp
imul
mov
sbb
push
movsl
addr16
pop
lock
aaa
insb
scas
or
testl
add
and
movsb
sbb
sahf
ret
sbb
xchg
pushf
outsb
push
inc
jl
scas
inc
test
sahf
push
imul
loop
stos
mov
loope
cmpsl
ret
shll
leave
les
lcall
inc
push
ss
xor
mov
lcall
xchg
rol
jmp
dec
mov
ds
and
jnp
repz
test
stc
sub
add
push
call
mov
fildl
mov
and
lea
dec
mov
inc
pop
cs
sbb
hlt
cmc
fisttpll
mov
xchg
fimuls
jno
dec
jg
pop
pop
cwtl
sub
mov
shll
loopne
popf
hlt
push
pop
mov
addl
fsubl
mov
sub
fnsave
xor
pop
aam
fdivrs
push
jne
mov
ss
xor
xor
mov
in
and
js
xorb
les
insl
jl
popf
mov
scas
pop
or
ds
movsl
mov
loop
sub
ror
fs
inc
stc
xchg
test
cmp
pop
stos
pop
cmp
and
or
cli
push
dec
arpl
xchg
mov
inc
xchg
popa
jle
mov
fistl
dec
or
loopne
imul
pushf
movsl
add
cmc
pop
add
cmp
mov
jno
call
sti
mov
mov
je
in
test
cs
rol
sbb
add
pop
jbe
imul
out
aam
out
inc
outsl
mov
pop
in
and
fsts
outsb
jbe
xor
pop
mov
xor
cmp
out
pop
data16
push
int
pop
mov
or
adc
add
pusha
cmp
stos
pusha
mov
stc
minps
daa
pushf
ljmp
jp
push
fdivs
xor
cld
cmp
fnstsw
push
leave
clc
and
mov
pop
shrb
rclb
xchg
scas
mov
cmp
jns
mov
inc
push
push
xchg
mov
push
mov
dec
dec
ret
in
lcall
xchg
movsb
push
in
xchg
xor
leave
sarb
cmpl
xchg
fidivs
shll
sahf
mov
ret
lods
or
xchg
sbb
jg
lea
push
ds
xor
and
xchg
inc
lcall
adc
xor
xchg
out
rcl
test
add
push
mov
daa
cmp
or
mov
pop
mov
inc
push
fnstsw
gs
repz
lock
xchg
ja
psrld
dec
enter
and
and
lcall
mov
insl
nop
rcrb
push
xchg
mov
sub
aas
sbb
out
push
loop
inc
rol
test
stos
popf
dec
pusha
mov
rep
sub
pop
insl
push
pop
push
lcall
mov
push
movsb
cmp
push
out
add
xor
out
xchg
shrb
push
xchg
or
add
pop
pop
sahf
lods
mov
adc
pop
loope
adc
inc
pop
lret
cmpsl
fwait
jl
jmp
xchg
push
cmpsl
stos
fucomp
mov
mov
sub
call
aas
push
pusha
mov
pop
dec
inc
or
insl
add
jg
fmuls
sbb
dec
sbb
pop
xorl
xchg
jg
xchg
sbb
adc
jns
out
push
idivb
push
das
pop
test
outsb
fld1
or
in
or
xchg
call
inc
or
leave
sbb
xchg
dec
nop
and
cmpsb
rorb
mov
inc
imul
icebp
ds
push
insb
pusha
mov
clc
mov
xchg
or
dec
lret
push
pop
outsl
pop
dec
inc
or
push
mov
pop
stos
cmp
data16
adc
mov
jnp
rcl
mov
mov
cmp
add
mov
subl
stos
ja
dec
and
in
mov
loopne
arpl
mov
outsb
inc
mov
cmp
cmp
das
inc
sbb
inc
jnp
push
mov
loop
mov
sbb
xchg
aad
lods
cli
adc
pop
in
clc
add
pop
mov
mov
and
push
cltd
jo
add
cmc
jecxz
iret
mov
sub
lahf
dec
fcmovne
fcmovnbe
dec
cwtl
pop
jo
pop
push
imul
dec
aaa
outsb
ret
cwtl
popf
mov
lahf
mov
fdivr
stos
insb
dec
cmp
int3
fmuls
xchg
cli
lods
jle
jns
mov
xchg
xchg
inc
rclb
mov
popa
mov
xor
sbb
or
addr16
push
cmp
mov
xorb
or
adc
dec
mov
lea
scas
pop
push
xor
and
inc
outsl
xor
push
adc
into
hlt
push
pop
and
lcall
adc
mov
js
push
adc
add
popf
jle
fwait
push
insl
mov
lds
fstpl
xchg
ror
idivl
add
inc
pusha
mov
aam
shlb
sbb
mov
ret
dec
push
stc
cmp
mulb
in
mov
dec
popf
scas
add
aaa
and
clc
or
lahf
push
jo
and
jle
push
je
sbb
rcrb
fisttpll
es
addl
out
ds
das
pop
dec
xchg
pop
inc
sbb
and
testb
mov
adc
shlb
lea
fwait
jno
loopne
movsl
shlb
fidivrs
inc
jne
inc
xchg
inc
ret
sub
mov
mov
rolb
shll
mov
jns
mov
rcr
xlat
hlt
jno
lods
lds
je
pop
loopne
cmp
fadd
fs
or
cmp
adcb
mov
xchg
mov
mov
mov
out
enter
test
in
ljmp
jns
push
int
xor
mov
fdivrs
addr16
jle
jne
and
adc
xchg
pop
dec
jp
mov
fwait
pop
jae
inc
jecxz
xchg
and
sub
xor
mov
insb
dec
jmp
dec
loop
aad
jno
lahf
mov
inc
add
push
ss
mov
into
cmp
je
mov
or
das
mov
add
inc
fdivrl
adc
negb
ret
adc
ljmp
xchg
lea
loop
push
imul
insb
lea
mov
repz
bound
pop
dec
loop
aad
jno
lahf
mov
inc
dec
pop
movsl
fcmovne
adc
lock
or
inc
rcl
les
arpl
gs
lcall
lods
cmpsb
ljmp
inc
sbb
es
gs
ds
jbe
mov
mov
xchg
push
mov
int3
pop
jle
add
xchg
mov
lods
mov
lcall
pop
in
leave
je
mov
adc
pop
call
sti
cwtl
mov
or
sti
cmpsb
rcll
ljmp
cmp
outsb
xchg
pusha
dec
ret
int3
adc
push
mov
mov
inc
xchg
pop
jmp
dec
sbb
mov
jp
xchg
je
xchg
pop
in
xchg
jp
xor
sbb
sub
jmp
pushf
aaa
mov
out
pcmpeqb
pusha
xlat
sub
mov
mov
inc
call
decl
mov
jp
mov
jg
inc
test
hlt
pop
xchg
adc
cmp
stos
mov
xor
mov
mov
fldenv
mov
and
pusha
xlat
int3
and
sub
xor
mov
outsl
mov
adc
leave
adc
ds
mov
inc
shrb
add
cmp
aaa
mov
in
fdivrs
addr16
xor
movsb
adc
loop
or
mov
test
cmpsb
enter
xchg
pop
sub
sbb
pop
popf
sbb
pop
xchg
mov
clc
es
data16
cmp
xchg
mov
stc
and
divl
jns
aam
xchg
pop
test
pop
xor
inc
xchg
test
mov
sbb
cmc
scas
mov
inc
jns
jnp
test
mov
ja
mov
sarb
sbbl
sbb
xor
and
jl
dec
xchg
ret
je
jl
sbb
adc
fwait
xchg
loop
fsin
adc
shl
xchg
test
push
cmpsl
cli
cltd
into
shr
add
mov
cmp
loop
fsubl
xchg
add
push
adc
mov
ds
adc
inc
xchg
jecxz
jnp
push
sbb
or
pushf
mov
adc
mov
adc
or
mov
sub
and
scas
subb
push
mov
inc
sub
ficomps
in
jb
pop
jb
add
out
lods
rcrb
test
es
js
add
xchg
lods
add
test
data16
xlat
sub
xchg
inc
aam
cmp
les
and
jnp
sbb
mov
jecxz
mov
mov
out
rcll
jmp
out
inc
shll
lods
xchg
popf
pop
cmp
xor
pop
mov
jns
mov
mov
repnz
or
add
cmp
call
repz
stos
push
mov
int
test
fcoms
pushf
lea
cmp
xchg
mov
shrl
aad
jge
cmpsb
std
lcall
out
pop
rcr
mov
dec
rorb
cmp
mov
and
inc
xchg
leave
adc
pop
loopne
jo
jmp
out
mov
inc
push
in
les
pushf
lods
jns
ljmp
pop
mov
aaa
repnz
mov
ljmp
ss
push
jns
add
push
adc
adc
push
fcom
xchg
fstpt
sub
loopne
mov
in
aaa
fwait
ss
pushf
mov
adc
stc
leave
mov
jl
adc
out
mov
mov
sbb
adc
sbb
sbb
jg
icebp
orl
push
es
push
sub
popa
push
call
nop
sub
mov
push
mov
adc
in
popf
movsb
in
pop
bound
imul
mov
movsb
lods
xor
testl
pop
movsl
shl
imul
dec
xlat
or
or
xor
lret
ja
xlat
es
cmp
hlt
mov
ret
or
repnz
ds
movsb
scas
ljmp
xchg
pop
jmp
jo
divl
addl
aam
mov
sub
jae
pop
xchg
xor
push
jbe
sbb
pop
lods
mov
xlat
fcomi
mov
sub
mov
sbb
and
dec
dec
out
inc
cwtl
xor
and
push
lock
sbb
xchg
inc
mov
jo
xchg
sbb
adc
dec
shlb
pop
clc
je
neg
push
xor
int3
lahf
sub
jp
cld
adc
dec
addr16
and
cmp
or
jmp
cmp
arpl
fidivl
in
sbb
adc
sub
nop
cwtl
stc
xor
add
popf
xchg
pop
sbb
push
adc
fnstenv
mov
xchg
jge
jne
loope
adc
into
mov
cwtl
inc
cs
out
adcl
add
daa
xchg
push
sbb
je
xchg
int3
sbb
cmp
repnz
int
jecxz
in
add
stos
pop
cmpsb
enter
pop
jb
lock
xchg
scas
adc
fs
and
mov
call
shlb
cmp
pop
std
xchg
sub
jbe
inc
je
pop
scas
leave
add
mov
mov
dec
sbb
and
dec
fmull
xchg
stos
inc
sahf
mov
ret
and
jg
inc
je
pushf
mov
or
cli
pop
cmpsb
dec
arpl
xchg
enter
and
mov
ja
mov
xchg
sbb
or
lret
xchg
ljmp
subl
aam
pop
jne
mov
pop
cmpsb
movsb
jnp
push
xchg
shrb
mov
add
mov
cmp
inc
and
mov
mov
sbb
addb
hlt
mov
test
mov
adc
lcall
movsl
andb
in
push
xchg
xor
pop
ss
pop
in
xchg
jecxz
sub
fbstp
outsl
movsl
adc
and
in
pop
adc
out
mov
add
xor
lret
mov
add
pop
mov
lea
sarb
nop
dec
repz
icebp
add
ds
lods
cmp
jle
cmc
jb
xchg
sub
sti
cltd
push
jo
mov
or
sti
cmpsb
rcll
push
aad
in
sbb
pop
ja
dec
pop
adc
xchg
cmp
sbb
ret
jmp
jnp
sub
loop
xor
push
sub
insl
xchg
daa
cmp
add
xchg
ljmp
movsb
nop
push
mov
jl
repnz
jo
push
adc
mov
push
out
cmpsl
scas
xchg
and
mov
and
int
mov
mov
mov
aas
ret
lret
test
cmp
inc
inc
pusha
pop
arpl
out
mov
test
adc
push
popf
xchg
and
in
xchg
cmp
xchg
jo
daa
mov
movl
mov
sbb
xlat
stc
mov
push
xor
loop
popa
shl
lea
adc
sahf
mov
in
fwait
ss
pop
sbb
mov
pop
repnz
bound
ret
dec
sbb
loopne
insl
mov
int
add
xchg
das
fnstsw
js
add
jne
dec
in
mov
test
leave
insl
push
inc
or
push
mov
lret
fcoms
insb
pop
je
sub
or
xor
xchg
push
gs
cmp
es
sti
pusha
jno
cmpsl
cmp
test
adc
mov
repnz
out
cmp
sti
mov
sub
ja
lret
sbb
pop
push
push
orb
xor
push
xor
es
pushf
popa
xor
je
out
insl
and
fwait
mov
movsb
insb
mov
cwtl
test
fdivrs
dec
enter
aaa
and
mov
scas
cltd
mov
lock
into
jne
pop
shrb
cmp
imul
loopne
ror
jbe
mov
es
fwait
es
adc
xlat
inc
xor
push
fsubl
jbe
xchg
stc
inc
lods
popf
inc
inc
adc
sbb
cmp
cmp
jb
test
inc
repz
jb
lea
mov
dec
aaa
mov
lods
arpl
popa
add
loope
mov
xlat
mov
sbb
cld
in
movsl
lcall
arpl
xor
daa
dec
into
xchg
enter
jle
shlb
mulb
stos
mov
cli
stos
cmp
lret
stos
xor
mov
cld
and
fidivs
add
xchg
and
gs
loope
or
fidivl
shll
jecxz
jo
popf
data16
loope
mov
cmp
push
and
dec
dec
js
cmc
xor
lahf
or
push
add
stos
cmpsl
neg
sarb
bound
mov
add
mov
sbb
pop
adc
inc
fdivrs
into
add
or
lods
inc
mov
cld
jbe
aas
jne
or
push
push
xchg
xlat
sub
nop
dec
cwtl
mov
ljmp
xchg
dec
inc
scas
jne
sar
and
movsb
shrl
xchg
into
scas
jb
jecxz
xchg
bound
adc
mov
and
fstl
inc
icebp
jbe
sub
insl
lret
cmp
fcompl
gs
jg,pn
sub
test
cs
inc
xchg
in
test
pop
add
cli
dec
jge
or
pop
push
sub
out
sahf
jmp
push
xchg
fs
call
es
jbe
pushf
xchg
insb
pop
insb
xor
into
pop
jle
jmp
aad
jo
fdivp
cwtl
dec
pushw
xor
push
mov
pop
mov
cli
jae
mov
movsb
mov
mov
push
out
insl
dec
clc
add
je
and
dec
xchg
shrb
sbb
popf
or
movsb
dec
xchg
scas
push
test
fisubl
add
leave
xchg
and
jge
mov
cmpsl
cmpsb
lods
xor
push
sar
jge
lea
mov
pop
xor
jle
push
aad
sbb
adc
std
call
cmp
push
xchg
out
lret
out
pop
push
pusha
mov
add
jmp
test
and
lods
add
out
mov
mov
insl
push
inc
jg
scas
inc
xchg
shll
xchg
mov
jbe
mov
sub
test
dec
mov
sbb
cmpsl
inc
xchg
shl
add
inc
into
fisubrs
fstl
xlat
daa
popa
mov
pusha
fidivl
sti
insl
mov
xchg
out
mov
push
repz
in
ret
adc
arpl
out
push
hlt
add
xor
js
mov
push
mov
pop
loope
sbb
xchg
pop
out
xchg
jp
push
sub
loopne
es
in
mov
cmc
fbstp
enter
pushf
adc
mov
or
pop
jmp
push
pop
ret
mov
fstpt
and
push
je
xor
sub
movsb
xchg
xor
adc
in
xchg
cs
mov
insl
xor
sub
fwait
sbb
sbb
push
xchg
std
sahf
int
push
sub
push
mov
testb
or
psrld
dec
jl
aad
jno
cmpsb
leave
lcall
scas
shll
adc
jp
fs
les
ljmp
cmp
push
nop
fidivl
loope
in
mov
aaa
sbb
leave
movsl
cltd
jecxz
jnp
int3
cltd
ss
cmp
add
test
addr16
pop
push
loope
subl
jg
js
lds
cmp
mov
fiadds
or
push
mov
cmp
or
aam
call
add
xchg
inc
arpl
call
scas
les
call
movb
stc
andl
jle
mov
jp
adc
je
test
push
add
dec
or
xor
pop
or
arpl
ret
test
mov
xchg
imul
fwait
clc
push
mov
pop
dec
fsub
mov
mov
shll
add
mov
add
sbb
push
mov
jecxz
xorl
movl
rcll
adc
enter
xor
outsb
dec
lret
jle
sub
imul
mov
shlb
push
inc
mov
stos
test
mov
int
mov
mov
movd
stc
and
or
test
lcall
cld
or
movsl
xchg
xchg
xlat
sahf
mov
ja
or
xor
push
mov
jo
mov
ret
es
or
pushf
repnz
dec
jle
cltd
xchg
push
mov
jb
mov
jnp
xor
data16
xchg
mov
jae
mov
push
push
inc
inc
mov
jmp
xchg
or
xchg
in
jmp
std
imul
jae
or
aad
addb
xor
jb
cmp
ret
ss
push
xor
popf
and
pop
or
sub
pop
lea
jae
inc
jle
bound
lcall
xchg
cli
mov
pop
cmc
and
int
fcoms
dec
pushf
dec
sti
fcoml
xor
push
cmc
lahf
dec
pop
ljmp
gs
and
inc
cmpsb
fwait
adc
xlat
push
inc
mov
out
pop
mov
sbb
cld
mov
arpl
cmp
movsb
cmp
loope
insl
mov
xchg
in
mov
xorps
cmp
out
and
cmpsb
in
cmpsb
test
cmp
inc
or
das
int
and
nop
adc
mov
in
insl
mov
or
outsb
lea
mov
pusha
cmp
add
stc
mov
push
push
push
imul
jmp
xchg
and
fs
cmc
imul
or
aad
jno
sbb
stos
shl
popa
push
lock
enter
insb
and
sbb
pusha
imul
jmp
iret
mov
push
pop
aaa
xchg
or
enter
sbb
mov
stos
or
mulb
push
fisubs
xchg
lds
mov
scas
mov
out
and
jns
rcl
push
xor
mov
cltd
enter
add
aam
loope
adc
inc
xor
or
rcl
mov
sub
pop
inc
lret
pop
pusha
lds
movsb
loope
mov
icebp
pop
adc
insl
mov
mov
xchg
or
sbb
and
pop
cmp
std
test
int
lods
outsb
and
mov
js
and
es
mov
loope
js
in
pop
repnz
sub
je
xor
lcall
orl
xchg
cld
out
xor
cltd
push
xchg
inc
push
inc
fs
xor
lcall
adc
and
ret
lahf
jg
pop
test
xchg
les
shrb
adc
loopne
popa
xor
movsb
xchg
sbb
adc
push
movsb
test
mov
fisttpll
js
xchg
jle
enter
pop
push
cld
sbb
adc
mov
jecxz
add
cmpsb
dec
mov
pop
lock
xor
sbb
out
cli
xchg
or
pop
lcall
aaa
mov
xor
addl
dec
cmpsb
xor
add
add
mov
aam
arpl
jge
int3
xor
loope
adc
je,pn
cwtl
mov
mov
xchg
pop
test
jno
sub
cmp
jae
repnz
jne
mov
mov
jno
es
ja
ljmp
rep
jl
out
sub
xlat
ds
rcr
out
dec
bound
xor
out
shll
stc
jne
pop
mov
sbb
xor
loop
adc
xchg
xchg
sub
dec
lock
and
dec
pop
adc
mov
sub
pop
mov
loop
adc
pop
scas
adc
xchg
cmp
mov
in
jns
or
mov
pop
adc
ret
sub
pop
adc
mov
sbb
adc
pop
adc
mov
add
pop
adc
jnp
cltd
or
mov
in
adc
mov
ret
aaa
sbb
inc
inc
cld
or
xchg
mov
inc
jbe
aas
add
mov
ret
je
shrl
jnp
inc
test
mov
es
pop
pop
adc
scas
js
es
enter
jl
mov
jp
in
pop
pop
adc
jbe
pop
pop
adc
in
pop
pop
adc
push
inc
rorl
sbbl
adc
adc
pushf
pop
adc
mov
fdivrs
mov
cmp
cmpb
lret
gs
stc
adc
stos
mov
adc
pop
adc
cmp
adc
adc
ja
sbb
sub
add
in
pop
pop
adc
mov
or
dec
push
loop
xor
pop
xor
sbb
dec
lahf
fs
adc
jmp
pop
stos
stc
jae
rol
push
aad
fistpll
adc
bound
xchg
and
leave
clc
and
in
xchg
cmp
lods
rolb
xor
sahf
cmp
rclb
push
adc
ficompl
adc
adc
xor
lods
movsb
test
clc
xchg
pop
adc
push
lret
sbb
push
aaa
mov
orl
xor
movsb
pop
cmp
xchg
pop
je
test
out
insl
fisubl
xchg
cmpsl
lcall
xchg
and
outsl
jae
adc
or
adc
push
enter
lret
sahf
pop
adc
adc
mov
dec
call
mov
adc
mov
lret
stos
mov
push
or
movsl
add
ss
dec
dec
iret
cmpsb
sbb
jp
popf
gs
and
into
xchg
and
out
cmp
in
out
ss
mov
in
repnz
mov
xorl
dec
out
pop
or
or
push
pusha
mov
jbe
xchg
dec
fcmove
xchg
sub
popf
repz
fmuls
fcoms
push
adc
int3
fs
and
dec
xchg
dec
fnsave
xor
xor
out
xchg
push
movsb
dec
cmp
dec
sahf
movsl
inc
mov
fwait
ss
and
inc
icebp
mov
inc
pop
jne
sub
dec
js
adc
adc
icebp
mov
adc
sub
pop
adc
push
xor
dec
sahf
xchg
inc
dec
in
adc
adc
push
nop
fidivl
imul
dec
xchg
and
movsl
xlat
xor
movl
xchg
das
pop
aas
faddl
lods
shrl
repnz
mov
stos
add
icebp
push
pop
hlt
enter
inc
adc
xchg
sub
rcrb
dec
in
xor
or
or
testl
mov
pop
mov
push
fcmove
dec
push
mov
cmpsb
and
cmp
xor
sbb
fs
pop
adc
out
cmp
mov
outsl
push
adc
addb
aad
sub
aad
pop
aam
mov
pop
or
pop
adc
jbe
inc
test
enter
lock
pop
adc
add
fmuls
adc
push
adc
sbb
std
push
xor
or
lea
push
mov
rep
int
push
das
flds
shlb
pop
dec
fsub
mov
pop
in
imul
xchg
push
mov
cmc
loopne
xchg
scas
xor
dec
leave
mov
or
jge
int3
xchg
and
push
cmpsl
inc
or
out
sub
movb
and
sub
cmp
pop
xor
and
sbb
and
inc
pop
adc
int3
out
not
xchg
sbb
rcl
and
pushf
inc
pop
adc
push
adc
jb
xor
cmpsb
mov
mov
xchg
dec
lcall
jne
xchg
pushl
out
or
pop
adc
push
and
mov
xor
cmp
cmp
mov
test
inc
pop
adc
mov
test
cld
pop
scas
cmpsl
shrb
pushf
pop
adc
ljmp
stos
loopne
in
dec
sub
adc
ja
rorl
and
dec
adc
adc
addr16
inc
adc
sub
inc
add
xor
pop
adc
leave
faddl
push
lea
mov
mov
jnp
icebp
pusha
mov
inc
pop
pop
adc
and
add
sub
mov
or
sti
test
popa
cs
arpl
mov
shl
cwtl
mov
adc
adc
cmp
dec
sbb
cltd
and
xchg
mov
push
outsb
adc
add
push
adc
sbb
incl
arpl
adc
popf
pop
adc
add
dec
lret
mov
cmp
loop
addb
out
popf
pop
adc
arpl
inc
pop
adc
popf
pop
adc
stos
and
or
cltd
pop
js
ds
dec
xchg
push
repz
inc
pop
adc
jecxz
imul
stc
out
lcall
movsl
xor
addb
mov
adc
hlt
mov
xchg
sub
repz
fstpl
mov
sahf
dec
add
int
dec
sub
pop
jnp
mov
int
inc
push
lea
pop
push
push
jns
xchg
fs
xchg
loop
fdivrs
mov
call
mov
loopne
mov
popf
xor
inc
out
out
xor
pop
int
dec
shll
dec
gs
jmp
or
ds
xchg
mov
pop
pop
adc
adc
and
mov
fwait
lret
lods
pop
mov
outsb
lret
dec
mov
pop
add
push
adc
inc
xchg
adc
or
dec
push
and
test
sbb
pop
adc
sahf
pop
adc
fisttpl
adc
cld
adc
adc
and
imul
adc
dec
mov
mov
dec
in
repnz
std
mov
pop
adc
shrb
jge
dec
pop
push
pop
adc
movsb
ror
xchg
dec
push
inc
outsl
aas
pop
xor
push
xor
inc
dec
in
lcall
lahf
sarb
shll
and
daa
xor
in
lock
popa
inc
mov
adc
adc
adc
stos
xlat
iret
push
mov
push
cld
lahf
mov
or
mov
push
xchg
sub
in
cmp
add
popa
aam
movswl
sub
pop
adc
rcr
inc
mov
ret
std
mov
xlat
sbb
ret
jo
sbb
and
shrl
fidivl
inc
dec
mov
lret
fdivs
fmull
js
xor
or
mov
addb
cmp
insl
lea
lods
fstpt
mov
out
stos
mov
pop
xchg
mov
xchg
icebp
insb
fisubs
roll
mov
inc
adc
test
mov
dec
subb
repz
push
adc
sub
and
rorb
push
adc
pop
or
adc
sub
mov
aaa
cmp
stos
sbb
mov
mov
cmp
into
iret
mov
ret
xchg
sbb
adc
fldl
mov
pop
lock
inc
mov
push
and
add
into
arpl
out
pop
adc
jbe
add
adc
adc
cld
or
inc
cmp
cmp
sub
xor
lret
push
mov
addl
fwait
adc
adc
pop
pop
adc
cld
xlat
mov
push
ja
mov
xchg
ljmp
xor
in
cmp
cld
scas
icebp
or
push
push
mov
sarb
inc
repnz
push
aas
xchg
ja
les
cmp
mov
inc
sbb
mov
dec
and
mov
cltd
stc
add
push
adc
stos
ja
mov
xchg
push
push
sub
adc
sbb
sbb
push
cmp
sbb
stos
addl
push
cltd
adc
test
int
add
repz
pop
jae
dec
addr16
pop
dec
mov
and
push
jae
call
lods
pushf
xor
ret
or
ss
mov
int
mov
xchg
push
movsb
dec
insl
sbb
nop
fdivl
pushf
push
fwait
ss
es
push
stos
jb
xchg
dec
mov
xor
or
adc
ja
int3
jp
shrb
aad
xchg
or
pop
pop
and
dec
xchg
and
out
dec
sahf
dec
add
fwait
dec
push
push
dec
sbb
push
inc
sub
imul
xchg
sub
popf
repz
fisttps
fcoms
push
adc
int3
fs
and
sbb
xchg
mov
sbb
push
movsb
pop
dec
mov
xchg
pop
or
sbb
loop
xchg
and
mov
lcall
xchg
sbb
mov
cli
mov
leave
fidivl
or
ficomps
nop
push
sub
mov
int
add
jae
jbe
repz
push
ss
adc
sahf
pop
adc
pavgb
lcall
adc
popf
pop
adc
ret
inc
mov
fwait
ss
lods
into
repz
popf
pop
adc
xchg
cs
loop
and
insb
push
clc
push
add
sbbb
fs
shlb
xchg
lcall
cmp
dec
xchg
and
cmp
and
ret
xchg
mov
ss
fidivl
jnp
inc
xchg
xchg
sub
dec
pop
adc
cld
adc
adc
mov
pop
pop
inc
cld
mov
out
xchg
push
movsb
dec
call
mov
lds
rcrl
punpckhbw
mov
dec
pop
inc
insl
pop
movsl
or
rorl
orb
outsl
push
out
fwait
jno
jl
adc
aad
and
mov
jo
es
fnstenv
out
loopne
insb
xchg
andb
aam
fnstsw
fdivs
aas
jp
fnsave
stos
sub
push
pop
xchg
out
les
push
mov
les
push
imul
popf
mov
into
aad
pusha
sbb
fldl2t
popf
sub
sub
push
mov
cmp
scas
adc
scas
xor
aad
ss
test
mov
incb
mov
mov
arpl
js
in
mov
xor
mov
jno
pushf
fs
int3
inc
mov
mov
jecxz
lods
inc
inc
pop
xor
sub
adc
out
jp
leave
adc
dec
lcall
pop
mov
movsb
fs
or
adc
pop
sub
mul
addr16
pop
mov
push
mov
sarb
in
data16
shlb
lods
push
xor
rcrb
jo
add
js
mov
sub
jns
dec
movsb
cmc
into
mov
xchg
lock
loope
sbb
pop
adc
dec
ljmp
dec
loope
mov
xchg
push
fstpt
sbb
or
xchg
mov
dec
jbe
iret
xchg
jp
mov
sti
push
aas
mov
popf
aaa
push
repz
jmp
pop
shrl
mov
mov
bnd
xchg
mov
popf
pop
adc
xchg
test
push
inc
fldcw
and
lahf
and
pusha
outsb
mov
xchg
sahf
pop
adc
cmp
pop
adc
in
and
ror
sbb
cwtl
sbb
sub
loopne
mov
in
movsl
add
scas
push
inc
test
mov
ss
scas
leave
scas
bound
out
js
push
fisubl
jno
mov
imul
sahf
pop
adc
or
pop
adc
cmp
or
sub
inc
cld
fcoms
or
pop
adc
mov
sahf
pop
adc
pop
mov
jae
pop
leave
xor
mov
hlt
add
add
push
test
std
sahf
lcall
insl
fistpl
push
dec
sahf
stos
fsubl
push
adc
test
push
imul
jns
jbe
fs
inc
fbstp
and
lods
lods
nop
ljmp
inc
lahf
mov
jge
imul
mov
fdivrp
mov
xor
mov
push
push
xchg
xor
jbe
xchg
pop
push
out
hlt
mov
xchg
sub
es
jge
repz
push
pop
out
lock
xchg
and
jp
jo
fs
push
movsb
xor
mov
in
mov
sar
lcall
pop
xchg
sub
out
scas
push
mov
mov
cmpsb
inc
or
xor
xchg
and
pop
adc
add
push
adc
pop
cmp
es
ljmp
shlb
mov
arpl
gs
adc
pop
pop
adc
cmp
cmp
xor
int
push
adc
dec
xchg
das
out
jns
push
icebp
or
xchg
push
insl
add
popa
mov
lea
adc
cmp
pusha
adc
adc
in
rclb
mov
sbb
imul
sbb
insl
fistpl
push
dec
sahf
inc
mov
les
ljmp
sti
mov
lret
cmp
pop
jecxz
dec
xchg
daa
test
adc
daa
cld
adc
adc
mov
test
loopne
shl
mov
fdivs
inc
popa
addr16
int
adc
out
loop
adc
sub
data16
bound
pop
adc
lahf
lds
xor
dec
xchg
sub
push
jo
call
xor
xchg
adc
out
xchg
and
std
jp
mov
outsl
cmp
popa
lods
pop
mov
daa
dec
pop
inc
pop
pop
adc
add
push
adc
and
sbb
test
insb
shrl
dec
xchg
push
dec
pop
pop
adc
push
xchg
push
jns
pop
pop
adc
adc
movsb
scas
push
int3
outsb
adc
fldl
push
popa
add
cmpsb
inc
cwtl
and
rcl
and
aas
aas
mov
add
mov
adc
ret
add
adc
je
enter
sti
and
adc
mov
cmp
aaa
in
cmc
lods
sbb
aam
pusha
testl
adc
test
lret
sti
lods
or
sub
sbb
ja
fs
xchg
mov
and
adc
push
adc
insl
jl
mov
adc
mov
dec
filds
ljmp
lods
cmp
ret
pop
adc
fisubrl
mov
fiadds
jns
or
inc
jecxz
or
xchg
aam
xor
daa
cmp
aas
or
pop
pop
adc
dec
add
push
adc
pop
pop
pop
adc
adc
lea
adc
cld
loopne
adc
adc
adc
sbb
adc
mov
sbbl
arpl
imul
xor
push
adc
push
stc
push
jae
imul
outsb
adc
pop
pop
adc
push
ds
mov
add
mul
inc
xchg
mov
push
adc
push
pop
pop
adc
inc
fsubl
inc
pop
dec
or
mov
cmp
xchg
cs
or
push
pop
pop
adc
dec
mov
jb
scas
sbbl
push
inc
getsec
fxch
in
stc
shlb
repz
xor
clc
inc
int3
fld
pop
sub
jne
adc
add
cmp
stos
and
in
pop
mov
add
pop
pop
adc
ljmp
gs
cmp
dec
xchg
mov
test
int
stc
pop
test
imul
sbb
adc
lea
loopne
xchg
mov
xchg
and
pop
pop
adc
or
leave
outsl
lods
pop
ret
xor
push
pop
push
adc
int
lret
shlb
andl
cmp
mov
push
xor
jno
jge
adc
cmpsb
jne
mov
pop
pop
xchg
sub
jp
jle
xchg
daa
dec
xor
lods
out
out
mov
in
fidivl
mov
dec
jae
outsl
lods
loop
pop
pop
adc
icebp
aaa
ss
lods
into
iret
shll
xor
into
mov
dec
insl
arpl
inc
mov
int3
fwait
ss
and
inc
xchg
pop
pop
adc
rorb
xchg
push
cmp
dec
mov
mov
movsb
xchg
push
es
out
lds
cmp
dec
ljmp
push
out
rcrb
arpl
fs
imul
push
mov
clc
inc
jno
bound
push
push
mov
xchg
repnz
call
mov
xor
out
mov
xchg
fmuls
mov
fs
sub
dec
xchg
and
loope
rcrb
into
push
push
or
cmpsl
xchg
imul
push
push
xor
cmp
cwtl
jp
fldt
aad
xchg
mov
xor
xchg
sub
aas
sbb
je
adc
adc
push
pushf
das
sub
pop
adc
lods
pop
pop
jl
xor
daa
dec
lahf
add
gs
and
aaa
sbbb
sbb
xchg
sub
mov
popf
pop
adc
icebp
in
addr16
fsts
xchg
call
mov
popf
hlt
sub
and
xlat
cmp
mov
loope
xor
add
dec
nop
sub
ds
xor
pop
stos
int3
xor
cld
push
sahf
pop
adc
jle
adc
adc
pop
pop
mov
cli
push
inc
rcl
mov
cmp
leave
mov
push
testb
cmp
lahf
add
jb
pop
add
jp
pop
hlt
shrb
out
add
ja
out
add
fmuls
push
in
adc
add
push
push
jle
mov
push
pop
arpl
sbb
dec
inc
add
loope
out
adc
jns
test
adc
pop
mov
fs
leave
out
and
cltd
test
adc
mul
mov
cmp
cmpsb
cwtl
fiaddl
adc
dec
pop
mov
pop
adc
nop
xor
lea
push
adc
inc
push
dec
add
push
adc
pop
mov
insl
call
jns
fnsave
rcrb
call
push
jp
mov
cwtl
dec
rcl
push
into
in
daa
adc
pushf
decl
repnz
and
xchg
xlat
sub
mov
mov
loope
or
lahf
lret
fwait
mov
add
dec
addr16
xlat
jne
scas
jo
and
clc
int
dec
adc
add
cs
xlat
enter
orb
xchg
push
push
hlt
sbb
rol
outsl
cltd
icebp
mov
mov
das
pop
and
dec
adcb
vpmacswd
stc
sbb
les
or
adc
enter
fisttpll
or
jle
aas
gs
jp
lea
inc
xor
leave
cwtl
leave
movsl
mov
jmp
in
xchg
inc
jl
jno
adc
mov
push
add
idivl
fdiv
in
imul
cmpsl
push
ss
aad
sarl
xchg
adc
movsl
inc
addr16
add
add
pop
adc
ret
add
fimuls
sbb
mov
pop
pop
xchg
in
inc
pop
adc
cmp
inc
pop
adc
jp
ds
das
pop
mov
leave
es
sahf
pop
adc
mov
test
ret
mov
int3
adc
ja
and
call
in
inc
pop
adc
add
cmp
addr16
lret
lods
push
or
or
pop
adc
add
cmp
int3
fwait
inc
pop
adc
jnp
pmuludq
lcall
push
sbb
sbb
loopne
mov
insl
rcrb
adc
inc
xchg
mov
mov
jo
mov
and
adc
ret
push
lahf
sbb
gs
leave
movsl
dec
xchg
and
clc
fdivs
sbb
test
sti
shll
sbb
push
fmul
test
cmp
dec
ret
fmuls
sbb
xor
inc
xchg
frstor
push
js
adc
adc
or
or
fisubrl
ljmp
call
clc
pop
mov
lret
cmp
cmp
mov
jo
xchg
movsb
fcomi
xchg
inc
xlat
rorl
mov
cmp
mov
add
dec
das
ljmp
cltd
xor
loopne
push
dec
in
cmpsl
mov
imul
add
push
adc
bound
xor
push
xchg
and
outsb
cmp
pop
cmpl
sti
call
push
adc
and
lods
shl
push
mov
mov
xchg
arpl
cwtl
jnp
mov
jo
aas
inc
fidivs
push
and
fdivrl
sub
cmp
ret
das
out
popf
es
movsl
inc
xor
hlt
fdivrp
call
push
cmp
cmp
mov
int3
hlt
or
scas
sete
int3
mov
push
imul
outsl
jae
xorl
les
jns
cmp
sbb
push
jne
test
dec
lea
std
jb
test
mov
jno
jl
filds
xor
cwtl
adc
mov
out
into
push
outsb
enter
or
xor
sub
daa
aam
push
lods
sahf
jge
lcall
mov
bound
jmp
mov
cs
pop
inc
fwait
les
sub
jmp
lds
fwait
xchg
cmpsl
adc
pop
lret
movl
insl
fisubl
sbb
mov
pop
and
int
into
sarl
sub
hlt
cltd
lret
fnstsw
dec
push
adc
scas
mov
test
fsubrl
push
mov
int3
jo
pop
adc
inc
push
dec
pop
mov
xchg
dec
test
imul
repz
dec
repz
jl
jmp
adc
xchg
popf
in
xchg
sbb
xchg
lds
imul
lret
cmc
sbb
xlat
sub
mov
iret
stc
scas
insl
fidivl
rcl
push
addr16
mov
bound
lret
pusha
and
push
adc
pop
push
adc
nop
outsl
dec
outsb
fnsave
or
adc
mov
mov
dec
xchg
ficoml
loop
or
clc
xchg
pop
adc
popf
ret
push
sbb
arpl
jecxz
dec
fnstsw
push
les
jno
sbb
imul
inc
mov
jp
scas
jmp
in
std
cmp
jns
cmp
cmpsl
mov
adc
loop
sar
xchg
jo
es
ficomps
xchg
fadd
andl
sahf
jl
inc
adcb
mov
pop
ss
pop
mull
push
mov
dec
push
push
and
gs
nop
adc
cmpsl
mov
ret
xchg
xor
scas
dec
jl
insl
jl
sbb
xchg
xchg
lea
inc
cli
out
mov
xchg
push
or
inc
popf
fisubrs
insl
pusha
dec
sbb
cmp
xor
in
push
shll
lock
gs
push
movsb
dec
fcomps
inc
xchg
daa
pop
xchg
mov
or
divb
loop
sbb
pop
mov
out
xor
jmp
mov
mov
popa
dec
cmp
out
int
nop
lds
test
bound
cmp
mov
or
dec
push
shll
and
aam
lods
pop
cmpsb
cmp
clc
cs
sahf
xchg
or
ret
jne
or
push
adc
popf
sub
out
outsl
outsl
fcomp
gs
fidivs
ja
das
pop
push
jl
in
adc
xor
addb
sbbl
dec
xchg
int3
lcall
xor
cmp
adc
cmp
repz
adc
adc
fldenv
or
imul
lret
fistpl
add
dec
enter
cwtl
int
jne
imul
lods
xor
ss
and
jb
and
arpl
popa
ret
xchg
int
enter
push
adc
pop
ret
xchg
sub
repz
adc
dec
dec
lret
lahf
mov
sbb
or
inc
lcall
sbb
cmp
sbb
sahf
cmp
xchg
fimull
ficompl
test
pop
fmuls
sub
aam
popf
pop
adc
sti
int3
lcall
mov
and
aad
sub
cmpsl
out
xchg
add
push
jnp
and
into
push
enter
imul
adc
adc
mov
pop
mov
xchg
and
push
repz
pop
mov
xchg
cmp
mov
adc
adc
push
mov
push
imul
in
insl
lock
pop
pop
adc
fstpl
add
dec
or
sbb
push
adc
lock
adc
lds
add
mov
lahf
xor
lret
jnp
shrd
add
inc
or
lret
test
icebp
ja
pusha
or
or
inc
js
es
popf
fmul
lcall
out
xchg
loope
cmpsl
leave
mov
mov
or
xchg
and
jle
int3
gs
idivl
or
add
and
or
adc
adc
aam
inc
cwtl
out
adc
in
fs
xchg
push
fs
mov
push
out
in
lea
movsl
pop
adc
adc
fwait
jl
xchg
sbb
into
mov
pop
adc
adc
sbb
sahf
inc
repz
or
in
add
mov
mov
std
ja
jo
fs
cmc
or
cmp
filds
iret
insl
stc
icebp
mov
inc
cmp
sbb
mov
popf
pop
adc
lahf
add
push
adc
insb
movsb
test
cmp
cwtl
push
fcompl
ljmp
outsb
cs
popf
pop
adc
in
fstpt
cmp
push
fdivl
int
loopne
push
sub
fsubrl
nop
sub
inc
cmp
xchg
push
xor
inc
outsl
sbb
outsb
cmp
jl
je
ds
jnp
test
adc
cld
adc
adc
fstps
stc
shlb
mov
jbe
dec
std
arpl
dec
sar
mov
or
push
addb
mov
inc
clc
xchg
pop
adc
out
loop
push
fstl
sub
in
pop
inc
jnp
jl
mov
pop
and
out
sbb
in
inc
adc
xor
pop
int
out
mov
mov
ja
insl
cmpb
sbb
sahf
cmp
mov
scas
test
das
inc
xchg
std
adc
cmp
dec
mov
fsub
ljmp
dec
ljmp
pop
sbb
dec
pop
adc
dec
xchg
lcall
jns
icebp
jnp
lret
fwait
mov
out
adc
adcl
dec
out
jb
daa
dec
ljmp
mov
aam
push
adc
adc
stos
and
aas
call
pop
divb
repz
jmp
push
add
out
xor
out
pop
jo
cmp
xchg
mov
mov
jg
xchg
adcb
jbe
and
and
in
lea
pop
adc
in
sub
into
bound
dec
xchg
outsb
push
lcall
out
sub
push
pusha
mov
sarb
xchg
filds
or
inc
sahf
cmp
rcrb
nop
pop
mov
in
repnz
add
lret
cmc
sub
call
loopne
xchg
out
fcoms
push
adc
push
pop
in
xchg
insb
ret
mov
dec
push
adc
imul
xchg
or
xchg
pop
dec
aaa
jno
sbb
nop
add
sbb
cmp
xlat
out
clc
popf
pop
adc
repz
cld
adc
adc
ficoms
mov
adc
imul
xor
and
inc
xchg
xchg
sub
pop
fwait
es
in
inc
pop
sti
out
xor
sbb
add
xor
fidivs
push
cmpsl
cmp
fdivl
daa
mov
in
scas
and
fsubs
mov
sbb
push
dec
fcoms
push
adc
lret
imul
fsubrs
ja
out
sbb
jnp
in
or
or
push
ret
adc
loop
mov
pop
adc
mov
jb
jmp
leave
mov
das
inc
test
fcoml
add
nop
jle
mov
sub
adcl
fisubs
movsb
sbb
jo
mov
rep
pop
popf
cwtl
mov
test
fnstcw
or
js
es
xor
dec
cmpsl
pop
pop
xor
mov
ja
pop
mov
or
sbb
and
mov
sbb
or
push
fcmovne
jns
xor
push
test
rcll
mov
and
push
adc
ret
testb
sahf
mov
sub
iret
sub
outsl
mov
je
out
mov
dec
pusha
mov
dec
pop
cli
inc
pop
push
adc
push
repz
inc
mov
mov
pop
call
pop
cld
arpl
and
push
inc
enter
xchg
popf
shlb
dec
test
xchg
mov
outsl
and
sub
int
xor
scas
int
sahf
pmulhuw
mov
sub
scas
or
jbe
scas
cmpsl
ljmp
cmpsb
repnz
or
pop
sub
lea
data16
pop
jne
xchg
out
fcomps
pop
jne
inc
nop
push
push
incl
xor
in
adc
std
add
out
stos
push
or
pushf
pop
adc
mov
cmp
xchg
andb
inc
test
lcall
pop
adc
adc
adc
ret
pop
xchg
cmpsb
or
or
popf
addr16
shlb
jo
rclb
iret
push
push
jae
aas
imul
ljmp
gs
adc
dec
push
lcall
nop
sarb
insl
fcmovb
xchg
inc
pop
inc
sub
mov
sbb
push
adc
push
in
mov
ret
xchg
dec
xor
outsb
mov
lods
cmpsb
inc
or
xor
xor
adc
adc
cmp
lds
ljmp
xor
adc
jle
adc
adc
mov
ret
xchg
cmc
loop
xchg
and
mov
pop
adc
push
sub
cs
sahf
dec
sbb
cmpl
adc
inc
xor
jo
and
sahf
xchg
movb
push
into
aaa
fldenv
int
xor
jmp
fdivs
out
fwait
and
imul
push
repz
imul
in
lahf
js
dec
or
out
fwait
inc
xchg
mov
adc
sub
pop
movsb
adc
mov
xor
call
jp
subl
mov
sahf
push
movsb
dec
test
xchg
daa
mov
repnz
pop
push
adc
inc
xchg
bound
pop
push
adc
and
call
in
push
adc
inc
fcmovu
mov
sub
or
pusha
inc
pop
adc
test
inc
pop
adc
sub
cmp
out
jmp
fcompl
mov
gs
dec
xchg
push
cmp
dec
sahf
add
cmpsb
push
insb
fcmove
push
ja
sti
mov
lret
sub
xchg
and
ljmp
sbb
mov
repz
popf
pop
adc
fdivr
adc
adc
btc
mov
xchg
xchg
pop
adc
sbb
outsb
push
pop
rclb
nop
mov
in
imul
pushf
pop
adc
xor
xor
fdivs
sub
jmp
inc
xchg
and
pop
mov
pop
adc
adc
shll
inc
xchg
testl
fwait
mov
mov
test
pop
popf
mov
and
js
mov
xchg
mov
pop
jge
test
fnstcw
adc
sub
rorl
push
insb
ss
push
sahf
out
inc
mov
push
and
or
daa
js
mov
lret
adc
inc
cmp
cmp
inc
jge
push
ss
out
sbb
sub
stos
xchg
es
faddp
xchg
call
xchg
stos
mov
ss
mov
cltd
stos
sbb
jne
cs
loop
xrelease
adc
clc
ss
jg
in
dec
pop
dec
sub
push
xchg
sub
pop
jge
xchg
testl
xchg
mov
jo
mov
sahf
inc
test
dec
jmp
xlat
inc
mov
sub
jge
adc
out
leave
sub
and
mov
xchg
ljmp
xchg
cmp
dec
in
cmp
jnp
xchg
call
icebp
jb
into
repnz
iret
repz
dec
xchg
xor
jnp
out
scas
mov
in
repz
pop
push
add
push
jge
idivb
icebp
fnstenv
sahf
bound
push
mov
jne
inc
dec
lock
in
stos
stos
sbb
xor
cmp
rcl
mov
shll
inc
iret
in
push
and
dec
mov
jae
pop
or
or
adc
sub
in
jnp
in
mov
cmpsl
stc
rcr
xor
sti
loopne
cwtl
call
mov
mov
sahf
enter
int
in
lahf
inc
cmpsb
sahf
adc
insb
and
adc
and
dec
addb
mov
jg
sbb
push
fbstp
add
push
std
jno
repz
sub
aaa
insl
scas
push
xchg
mov
xchg
cmp
sbb
dec
xchg
pop
jbe
add
xchg
jl
dec
jmp
dec
les
jns
pop
push
fcoms
inc
sub
push
cmc
imul
pushf
cltd
sbb
mov
repnz
insl
mov
add
scas
xlat
mov
and
adc
and
fs
jle
sbb
repnz
mov
lret
pop
pusha
shrl
loope
mov
icebp
jp
ss
mov
hlt
dec
xor
jb
cmp
inc
in
dec
loope
push
xor
add
jg
and
ljmp
sti
mov
push
repz
out
cmp
sbb
fwait
inc
fistpll
inc
hlt
mov
xchg
sub
push
inc
xor
sub
or
xor
dec
in
adc
sarl
scas
lea
adc
pop
adc
xor
dec
sbb
xor
push
sbb
dec
sbb
jno
call
inc
sbb
pop
push
mov
mov
repz
fnsave
push
into
and
dec
in
or
cmpsb
or
lcall
jns
ficoms
test
pop
pop
adc
and
mov
leave
inc
mov
imul
nop
push
push
sbb
adc
mov
iret
ret
mov
pop
pop
adc
fs
jns
mov
mov
test
lcall
xchg
push
mov
sti
fistpl
insl
mov
adc
mov
sbb
push
lods
or
insb
fidivrl
xor
cmp
xchg
pusha
ss
pop
jne
rorl
mov
pop
pop
adc
xchg
mov
xor
sbb
cmp
xchg
es
sbb
mov
rclb
push
adc
mov
and
inc
add
jns
stos
imul
mov
xchg
pop
adc
popf
fmuls
bound
pop
mov
mov
ss
cmp
lea
sub
cltd
adc
lds
mov
mov
cltd
add
dec
add
mov
push
xor
roll
lock
sub
imul
int3
scas
mov
es
stos
inc
pushf
gs
adc
mov
mov
and
add
out
mov
pop
adc
fldenv
dec
jge
lea
mov
or
ds
mov
in
jne
imul
loopne
lcall
out
test
jmp
arpl
mov
call
enter
cmp
movsl
shll
cmc
pop
or
ds
jns
ds
sbb
or
add
mov
rcrl
dec
inc
adcb
and
cwtl
in
sahf
popa
insb
into
mov
call
ror
xlat
andl
xlat
fiadds
arpl
loop
dec
sbb
adc
paddsb
popf
jmp
cmc
int
pushf
jbe
jmp
sbb
pop
pop
jb
or
popf
icebp
orl
cld
sahf
test
pop
pop
adc
pop
jne
dec
fsubl
push
sub
sbb
stos
push
in
movsl
icebp
in
ljmp
shll
loope
and
test
sub
scas
mov
sbbl
les
mov
movsl
cmpsb
rcll
push
mov
mov
pop
cld
adc
adc
in
sbb
pop
loope
fcomp
repnz
test
push
ds
into
mov
adc
sbb
xchg
fsubs
pop
and
call
gs
lods
pop
lds
repz
xchg
pop
xchg
mov
sbb
mov
mov
gs
adc
adc
push
push
xor
in
or
cli
and
das
cltd
cmp
xor
xchg
outsb
fstpt
jmp
add
sbb
mov
sbb
inc
movsb
dec
imul
pop
rolb
jns
mov
rorb
adc
adc
and
fisubrl
call
xchg
mov
sub
xchg
addl
sbb
xor
mov
pop
jle
dec
xchg
loopne
jne
ret
lock
inc
push
pop
adc
bnd
or
lods
pop
sbb
pop
adc
mov
aad
mov
aaa
mov
inc
popa
jno
xchg
xchg
jg
and
popa
add
bound
push
pop
push
or
xor
scas
lods
insl
fisttpl
cmp
sahf
cmp
loopne
xor
int
sbb
mov
or
imul
pop
mov
and
push
movsl
fisubl
test
sbb
pop
scas
xor
mov
lret
call
inc
pop
adc
add
dec
mov
mov
stos
adc
or
int
xor
dec
loopne
add
dec
add
mov
in
hlt
mov
popf
gs
push
movsb
cmp
xlat
cmp
les
xchg
cltd
fstps
push
jbe
int
xor
dec
xchg
mov
rclb
push
adc
subb
mov
xor
push
xchg
movsl
dec
xchg
mov
loopne
pop
lahf
cmp
lcall
imul
mov
sub
subl
sarl
push
sub
jae
lock
jge
fsubrl
lock
sub
add
push
mov
xchg
and
or
loopne
pushf
es
jns
outsl
xchg
push
pop
push
adc
es
xchg
cld
sahf
fnsave
jg
xchg
xor
faddp
xchg
dec
sbb
filds
in
jns
cmp
aaa
jo
lea
stc
mov
sbb
xchg
aam
mov
mov
pop
hlt
mov
fisubrs
lods
sbb
cmpb
sbb
stc
xlat
and
fcoms
push
adc
movsb
lret
adc
and
lea
sbb
cmpl
mov
add
dec
xchg
and
and
dec
adc
pop
adc
jge
adc
adc
cmp
cmp
and
into
in
sarl
mov
cltd
iret
sbb
adc
inc
popf
sbb
mov
out
add
mov
ljmp
rorb
dec
movsb
jne
test
xor
jo
je
pushf
pop
adc
ret
repnz
imul
icebp
lea
mov
movsb
mov
in
loope
xbegin
mov
adc
call
xchg
sub
dec
dec
arpl
add
inc
fldenv
iret
or
popa
mov
pop
ret
aad
test
push
std
loope
jae
insl
pop
xchg
or
adcb
jecxz
pop
out
xor
lahf
divl
ret
pop
fstps
xor
nop
sbb
and
pop
and
pop
arpl
dec
or
cld
sub
sbb
shll
mull
jl
lds
cmpb
inc
outsl
cmovo
pop
and
mov
sahf
stos
fmuls
daa
or
hlt
pop
push
adc
xor
fdiv
in
pop
xchg
shll
in
pop
push
adc
mov
jno
and
in
int
pop
push
adc
frstor
pusha
inc
pop
adc
mov
inc
pop
adc
sbb
cmp
mov
fcompl
xlat
xchg
and
movsb
xor
sub
jns
xchg
push
lcall
mov
les
out
imul
xlat
xor
icebp
add
leave
xchg
fidivrl
popf
pop
adc
adc
fildl
pushf
pop
adc
pusha
mov
out
stc
add
mov
jb
aaa
js
sbb
mov
mov
cmp
repnz
mov
shlb
xor
mov
pop
adc
pop
adc
cld
adc
adc
mov
push
mov
gs
dec
cmp
mov
sub
adc
dec
out
into
mov
movsb
dec
sub
pop
adc
movsb
popf
mov
sub
pop
adc
dec
insb
repnz
sub
sub
es
rclb
shlb
imul
pusha
leave
xchg
test
fcmovnb
mov
ret
push
aad
xor
xor
mov
cld
test
add
xchg
movsb
es
scas
repnz
pop
pop
adc
mov
xor
sbb
jge
xchg
and
adc
xchg
sbb
sub
fisttpl
shlb
in
pop
pop
adc
adc
pop
adc
mov
lcall
out
xchg
pushf
sbb
inc
dec
push
xor
push
inc
push
sub
pop
pop
adc
sbbb
cmp
mov
xchg
mov
cli
fwait
add
pop
xchg
das
data16
cld
loopne
xor
out
icebp
dec
ret
pusha
sbb
adc
enter
outsl
unpckhps
bnd
push
dec
in
dec
cmpsb
dec
xchg
xor
stos
and
pop
xchg
je
or
fiaddl
das
sar
scas
jae
lea
jns
and
fdivrl
sbb
or
adc
addl
and
cmpsb
roll
lods
xor
inc
push
pop
cld
jae
out
xchg
xor
jmp
ja
in
sub
mov
pop
pop
adc
outsb
hlt
dec
test
fcompl
jb
adc
pop
adc
adc
adc
push
jmp
xchg
popf
push
out
in
pop
pop
adc
sti
push
imul
push
jge
dec
sbb
bound
lret
adc
fstpt
pop
sti
out
pop
fucom
xchg
movsl
dec
add
fwait
cmc
das
iret
xchg
jg
sub
push
adc
fcomi
mov
pusha
xor
inc
push
mov
or
xchg
mov
or
test
inc
cltd
jnp
imul
fsts
pop
adc
stos
cld
adc
adc
adc
jno
jg
lret
cmc
mov
ss
xchg
fildll
lret
call
fstpl
or
lea
popa
jmp
shlb
ljmp
loopne
leave
pop
sbb
scas
inc
fcmovne
adc
add
jo
adc
adc
adc
or
pop
fcompl
mov
in
sub
inc
imul
push
adc
adc
outsb
cmp
jmp
pop
adc
outsb
xchg
dec
cmp
adc
adc
enter
dec
adc
aaa
mov
pop
mov
xchg
sbb
pusha
adc
adc
addr16
adc
outsl
sub
sbb
push
adc
aam
repz
push
fwait
lds
testb
jnp
sahf
pusha
adc
adc
mov
data16
scas
imul
fnstcw
mov
pop
pop
adc
jl
popf
cli
lods
sbb
dec
inc
int3
push
mov
fildl
xorl
mov
push
pop
cmpsb
push
movsb
leave
popa
frstor
or
js
movsl
mov
divb
gs
lods
pop
pop
xchg
ret
mov
push
xor
mov
cmpsb
popl
jp
jmp
sub
pop
xchg
and
sub
bound
fdivs
fs
subb
sub
sbb
std
movsb
mov
push
xor
dec
mov
mov
das
pop
mov
lods
imul
dec
xchg
mov
mov
cmp
out
mov
jge
int
fisubs
sub
mov
and
mov
pop
sbb
xor
shr
pushf
xchg
or
inc
adc
imul
mov
leave
and
jmp
fildl
and
xchg
lods
adc
cli
dec
cli
es
mov
dec
xchg
faddp
push
int
into
out
ret
lret
adc
std
subb
mov
int3
and
or
xor
sbb
add
push
mov
cld
cmp
pop
or
pop
xchg
and
test
adc
cmp
dec
fldenv
push
push
pusha
mov
ror
xchg
sub
cmp
mov
xchg
daa
jbe
aas
xchg
in
scas
fwait
sbb
fcoms
push
adc
cmp
mov
jp
jnp
jne
fucom
test
loopne
xchg
xchg
ss
fcmovb
adc
imul
xchg
sub
pushf
xor
xor
fidivl
out
and
pop
mov
in
xchg
cmp
aad
mov
jecxz
jg
mov
sahf
mov
lods
adc
cmpsl
sub
test
mov
call
xchg
mov
xor
out
mov
xchg
test
mov
out
imul
and
adc
gs
lcall
mov
jno
js
scas
sarl
cmpsb
xor
loopne
push
lds
es
cwtl
inc
sbb
mov
rorb
std
imul
daa
rcll
and
scas
pop
cwtl
cmp
pop
xchg
mov
movsb
hlt
andb
xchg
push
fwait
es
les
add
push
adc
adc
push
fnstcw
mov
mov
cmp
dec
and
data16
cwtl
dec
sub
mov
in
loope
pushf
pop
adc
jmp
sbb
imul
scas
xor
mov
push
mov
or
mov
sub
push
das
scas
jle
pop
xor
dec
sbb
xor
dec
adc
stos
sti
fstl
xor
pop
sub
jmp
mov
in
addr16
xchg
pop
ss
pop
xchg
mov
popa
hlt
lret
push
imul
lcall
adc
and
push
sub
xchg
and
fcomi
mov
or
jns
std
xor
movsb
flds
push
shll
es
clc
sbb
std
imul
sahf
inc
cmp
popf
pop
adc
cld
adc
adc
add
aam
cmp
dec
inc
fwait
jge
xlat
pop
ret
nop
or
adc
adc
mov
call
push
shrb
ljmp
sub
sbb
adc
ss
imul
pushf
pop
adc
ret
imul
pushf
pop
mov
insl
cmp
adc
shrb
sti
je
mov
adc
aam
dec
push
aam
push
jl
shrl
fidivrs
sub
inc
dec
pop
and
push
adc
movl
or
shr
and
mov
inc
mov
pop
adc
aad
mov
in
and
icebp
mov
dec
cmc
in
je
push
xchg
inc
int3
movsl
mov
pop
adc
sub
andl
leave
adc
or
pop
adc
push
pop
lock
pop
adc
mov
call
loop
mov
shll
push
mov
ret
push
inc
sbb
out
push
jp
es
inc
pop
adc
xchg
sarb
movsl
fistl
fadds
xor
ret
jns
pop
xor
xchg
pop
adc
dec
cmp
cmp
cmp
loopne
pop
adc
push
sbb
faddp
sub
mov
ficoml
insb
fcmovb
lahf
inc
sub
pop
adc
lods
sarb
daa
cmp
xor
lea
das
aad
xchg
cli
mov
gs
pop
adc
popa
ret
outsb
imul
xor
fwait
call
adc
aad
imul
mov
xor
popa
ret
or
adc
mov
xchg
shr
loopne
and
mov
xor
xchg
jns
or
fidivrl
fwait
movsb
push
add
pop
adc
das
mov
test
mov
daa
mov
repnz
aaa
call
fsubrs
pop
push
jae
pusha
inc
lcall
pop
and
pop
adc
add
push
adc
sbbb
fwait
addb
out
add
popf
pop
adc
dec
dec
in
xchg
fwait
sbb
scas
daa
sub
adc
dec
xchg
pop
mov
movsb
or
stos
and
fildl
or
es
mov
dec
test
in
jns
out
or
inc
pop
adc
cwtl
stc
test
and
lret
lods
pop
mov
xor
daa
dec
ljmp
mov
movsb
nop
push
ret
xor
mov
ds
ja
ds
in
add
aaa
stos
jns
loop
cwtl
mov
pushf
pushw
dec
ds
pop
nop
and
loop
test
sbb
aaa
lret
cmc
sub
mov
inc
popf
xor
in
xchg
and
jne
add
das
jle
popf
repz
pop
lret
xlat
cmpsb
rcll
mov
adc
ja
xor
cmp
ja
xchg
xor
sarl
inc
cwtl
lods
aam
popf
add
xchg
aam
xor
cmp
mov
call
cmpsb
mov
enter
jge
pop
cltd
xor
add
adc
lret
mov
adc
adc
mov
dec
into
fdivrs
pop
sub
add
into
stc
mov
jecxz
ret
sub
les
pop
in
call
lahf
xchg
sub
stos
mov
lods
dec
xchg
and
jl
data16
int3
xchg
cmp
adc
jl
dec
pop
outsb
xchg
int
xor
cwtl
sub
sub
cmp
cli
fs
popf
and
in
mov
adc
push
adc
inc
inc
sbb
mov
popa
xlat
xchg
mov
pop
pop
roll
add
jo
pop
adc
jle
sahf
inc
enter
scas
and
in
mov
mov
adc
outsb
push
aaa
xchg
test
or
mov
sbb
push
adc
dec
loopne
pop
pop
adc
or
lock
pop
ljmp
mov
rcrb
mov
out
mov
push
scas
xchg
or
idivb
and
lret
mov
xchg
arpl
cwtl
adc
push
imul
adc
dec
pop
jl
pushf
arpl
push
aad
cmp
xchg
push
mov
push
jp
mov
adc
call
ss
stc
cmp
ja
or
adc
xlat
test
repz
mov
jo
add
test
popf
je
adc
adc
flds
shlb
inc
pop
adc
jae
dec
and
mov
jmp
add
adc
push
ljmp
repnz
loope
insl
fidivl
adc
pop
lret
lock
ret
mov
pop
pop
adc
or
fldcw
adc
dec
xchg
das
arpl
jns
gs
ficoms
pop
adc
mov
arpl
out
out
ficompl
adc
adc
repnz
adc
cmp
sti
pop
xchg
and
cmp
movsl
push
adc
adc
jno
adc
adc
mov
and
sbb
dec
test
cmp
repnz
aaa
call
das
pop
push
jae
pusha
inc
lcall
out
pushw
xchg
dec
arpl
add
iret
xor
fwait
call
adc
cmpsl
pushf
xor
ret
cmp
pop
adc
adc
dec
pop
inc
cmp
fcoms
rclb
push
adc
movsl
clc
adc
adc
icebp
sbb
cli
jns
xchg
das
mov
lods
fs
jo
pop
adc
popa
xchg
xlat
sbbl
push
xchg
and
inc
ret
jecxz
and
test
out
fcompl
popf
insl
fcmovb
and
mov
xchg
mov
mov
pop
adc
push
fidivs
das
pop
aam
pop
pop
adc
pop
aad
or
rcll
insb
fsub
xor
mov
int
ss
popf
mov
and
dec
pop
sub
mov
pop
adc
xchg
xchg
xor
into
pushl
xchg
inc
mov
pop
adc
jle
adc
adc
adc
xchg
pop
adc
xchg
add
fwait
lret
pop
adc
cld
adc
adc
xchg
jns
hlt
pusha
call
jle
mov
loopne
push
sahf
pop
adc
adc
into
push
push
cmp
adc
adc
popf
pop
adc
mov
repnz
pop
ret
jle
dec
jecxz
lods
popf
xor
das
mov
lock
cltd
mov
inc
push
push
jnp
adc
adc
sbbl
mov
push
xor
test
scas
adc
movl
lds
fcomp
add
cmc
stos
pop
sub
fidivrs
cmp
aaa
daa
pop
mov
lahf
jge
mov
push
pop
call
movsb
dec
xor
into
xchg
sti
das
iret
fs
sbb
fdivrl
push
add
fs
xor
pop
pop
pop
enter
scas
iret
fwait
movl
cmp
sbb
aas
dec
sbb
movsb
push
mov
adc
adc
outsb
ret
rol
inc
popf
and
adc
cltd
xor
ret
mov
mov
sub
scas
int
push
jne
movsl
call
dec
or
xchg
mov
xchg
xor
mov
push
xchg
pop
adc
push
mov
add
sub
pushf
lret
je
push
add
roll
adc
adc
jnp
std
nop
pop
mov
dec
sar
xor
push
or
lahf
mov
test
sbb
cmp
subl
adc
test
out
jns
inc
outsl
mov
mov
sub
shrb
ljmp
push
lcall
and
pop
adc
pop
jne
pop
cmpb
and
jno
nop
pop
shl
push
sbb
xor
sbb
mov
rorb
mov
or
add
int3
lods
cmp
call
jae
or
movsb
les
arpl
inc
pop
adc
jbe
sahf
pop
adc
mov
adc
cli
ds
dec
xor
mov
adc
lret
sub
fbld
push
or
dec
xchg
xchg
cmp
cmp
pushf
pop
adc
aam
dec
jg
jno
jns
push
lret
into
xor
popf
pop
adc
cld
adc
adc
add
and
adc
inc
dec
cmp
daa
ja
dec
xchg
loop
leave
xchg
sbb
add
cmpsl
xchg
push
pop
and
xchg
and
shr
dec
sahf
cmp
faddl
aaa
push
addr16
or
lret
xchg
pop
and
dec
xchg
and
sub
out
sbb
subb
addr16
loopne
add
push
xor
dec
mov
mov
mov
sbb
push
movsb
out
mov
roll
fucom
sub
sub
adc
xlat
mov
fldt
fdivs
adc
mov
add
inc
xchg
std
gs
fisubrs
popf
dec
jle
addb
jne
sbb
loopne
gs
loopne
dec
or
lods
fidivl
dec
mov
mov
jecxz
sbb
sbb
xor
dec
push
movsb
cmp
fistpll
loop
cmp
fwait
inc
pop
int
or
mov
dec
or
sub
loop
inc
pop
adc
repz
mov
mov
xchg
addb
push
cld
xor
xchg
pop
sub
dec
xchg
and
shll
sahf
cmp
scas
or
pop
adc
cld
lock
pop
adc
adc
pop
imul
cli
ficompl
insb
aas
mov
adc
bsr
in
or
mov
in
fdivrs
mov
jp
adc
inc
pop
adc
imul
mov
dec
lods
arpl
out
ret
pop
adc
xchg
mov
in
or
jge
pushf
inc
popf
dec
faddl
jmp
movsl
test
shl
mov
mov
ds
outsl
popf
repnz
sub
js
mov
and
push
cmc
aam
sub
pop
adc
xor
test
hlt
fsubp
sti
xor
es
std
mov
xchg
push
in
mov
adc
stos
ror
inc
fsubs
mov
je
pop
pop
adc
or
ljmp
mov
xor
sub
sub
pushf
pop
adc
adcl
aaa
pop
outsb
fs
fwait
out
sub
pop
xchg
mov
or
mov
loope
clc
hlt
add
pop
adc
push
and
and
inc
xor
cmpb
sbb
dec
movsb
cmc
into
mov
xchg
jb
fnstcw
sahf
pop
adc
add
push
adc
push
mov
or
push
jne
roll
into
dec
lea
adc
dec
cmp
mulb
and
adc
push
gs
push
aad
mov
adc
test
iret
jnp
mov
test
inc
ljmp
inc
sbb
jns
xchg
ljmp
adc
pushf
xchg
mov
pushf
repz
xchg
push
clc
mov
add
jl
pop
adc
sti
decb
and
loopne
sbb
lds
testb
pop
cmp
outsb
shrb
and
pop
adc
addl
push
mov
pop
cmc
stos
or
jbe
cmpsb
ficoms
mov
repnz
and
pusha
test
pop
bound
stos
out
dec
push
add
pop
adc
hlt
mov
leave
pop
mov
cwtl
cltd
mov
push
lods
push
stc
mov
xchg
fnstenv
cmp
pop
dec
mov
ret
mov
xchg
xchg
pop
arpl
adc
in
test
pop
jl
mov
jmp
push
adc
xor
pusha
rolb
push
pusha
mov
pop
pop
push
and
push
pop
xchg
and
pusha
pop
mov
pop
pop
adc
arpl
das
mov
mov
mov
lcall
outsl
aam
loop
mov
sti
fistpl
insl
mov
adc
in
or
imul
outsl
out
fisttpl
fcompl
inc
pop
adc
pop
jp
push
push
mov
rclb
push
adc
clc
adc
adc
and
leave
insl
adc
sbb
mov
pop
adc
cmp
jns
xchg
in
insb
ss
mov
jg
add
or
xchg
sub
lahf
stos
add
cmp
int
jl
into
mov
cmpsb
push
int3
inc
scas
repnz
pop
pop
adc
mov
sbb
es
xchg
and
adc
ljmpw
insl
in
insl
sbb
mov
shlb
nop
mov
adc
cmp
inc
or
fs
clc
fidivl
or
add
push
adc
cwtl
and
rorb
sbb
pop
adc
sbb
stc
mov
sahf
pop
adc
cld
adc
adc
daa
test
sahf
pop
adc
in
xchg
xchg
push
sub
pop
pop
adc
shrl
out
cmp
jno
add
icebp
cmp
jo
adc
adc
sbb
int3
lcall
xchg
jecxz
sbb
pop
test
mov
jae
pop
dec
push
fcompl
xor
add
pushf
pop
adc
out
jmp
sbb
loope
mov
aas
fdivl
xrelease
xor
pop
stos
ljmp
xchg
xor
ljmp
adc
rcrl
mov
pop
pop
adc
and
scas
xchg
pop
xchg
mov
push
mov
fcoml
lea
push
frstor
adc
out
dec
push
mov
test
or
popf
pop
mov
movsb
or
mov
inc
stos
adc
and
dec
out
jbe
test
lret
adc
fisubl
sbb
test
mov
fs
lret
movl
test
mov
xchg
aas
popa
xor
sub
push
je
and
cwtl
xorb
rolb
add
in
pop
repnz
dec
ret
sbb
pop
or
fidivrl
mov
fsubrl
cmpl
mov
rcrb
mov
push
cltd
dec
lahf
cltd
xor
cmp
xchg
and
fs
rolb
and
inc
sub
sub
outsl
ret
xlat
je
imul
lods
add
mov
js
clc
insb
mov
pusha
and
push
mov
adc
adc
xchg
inc
fcompl
lods
jle
cld
mov
cli
addr16
enter
in
std
pusha
mov
rcl
in
ret
call
xchg
adc
cwtl
mov
pop
cs
mov
jge
test
test
adc
pop
pusha
mov
jb
es
fdivs
mov
sub
icebp
mov
outsl
or
mov
imulb
pop
adc
cld
adc
adc
or
mov
repz
les
pop
xor
inc
pop
stos
pop
mov
test
sub
push
adc
and
pop
mov
jns
lcall
pop
push
adc
imull
out
lcall
xor
xor
fmull
ljmp
stc
inc
xchg
xchg
jae
imul
clc
imul
sub
push
out
out
rcrl
cmpl
sub
pop
lcall
xchg
and
popf
orb
inc
push
insl
inc
or
jo
adc
rorb
adc
adc
inc
or
mov
fstpt
xor
pop
adc
mov
repnz
subb
das
mov
daa
dec
mov
mov
jne
fidivl
loope
inc
pop
xchg
subb
or
jl
pop
adc
jmp
insb
es
pop
insl
push
pop
push
sti
push
fnstcw
xchg
out
lock
ret
mov
pop
pop
adc
or
fldcw
adc
dec
xchg
das
stc
in
jns
aad
fsubl
pop
imul
nop
or
mov
mov
sbb
push
or
loopne
data16
sbb
out
aas
xchg
and
outsb
push
loop
lods
pop
mov
push
sti
xorb
jp
xchg
imul
mov
mov
out
xor
push
adc
aas
movsl
or
pop
adc
adc
push
into
gs
xchg
mov
and
fs
movsl
inc
adc
adc
jbe
rclb
incb
xchg
ds
jp
insl
pop
jbe
scas
movsl
outsb
jge
lock
pop
adc
dec
jae
jg
jg
jns
push
xchg
jmp
shll
inc
pushf
lds
jns
das
xor
out
push
imul
pcmpgtd
mov
push
adc
roll
rorb
xchg
iret
jge
shll
into
popf
xchg
jo
pop
adc
das
and
outsl
fidivs
loopne
pushf
sahf
push
inc
outsl
cmp
fs
dec
xor
inc
popf
sub
aam
push
adc
dec
insl
scas
mov
jns
jmp
rol
sbb
mov
lcall
jecxz
ss
jg
jno
inc
jnp,pn
dec
xlat
jo
xor
or
je
jo
cmp
mov
in
jo
shll
loopne
pop
adc
sub
sbb
fwait
pop
adc
inc
jmp
movsl
dec
fcomps
sbb
adc
inc
data16
stos
arpl
pop
out
fsubl
fildl
xchg
jo
pop
adc
cmp
shlb
adc
lret
add
pop
adc
out
pop
sub
jp
loopne
pop
jb
dec
cmpl
jb
adc
stos
movsb
or
iret
bt
mov
cmp
sub
and
ljmp
xchg
sbb
lds
pop
insl
into
cmp
mov
lods
outsl
clc
scas
rclb
icebp
xchg
xchg
mov
loopne
cmpsb
pop
mov
fs
and
hlt
adc
loopne
imul
xchg
xchg
pop
test
push
repnz
jmp
add
scas
xor
sahf
loop
mov
pop
pop
mov
push
sub
sub
rorb
lea
sbb
loope
insl
sub
testl
push
cltd
inc
sbb
js
rorb
xchg
ss
fcompl
rol
and
pop
cmp
or
push
cld
or
mov
movsb
and
test
in
jae
cmp
jnp
adc
mov
cmpsl
lcall
mov
sahf
das
mov
ror
adc
outsb
push
pop
rcrl
in
cltd
push
and
and
jp
cltd
cmp
sarb
xor
daa
dec
aaa
dec
ja
outsl
mov
outsl
lahf
lods
movsb
imul
xchg
test
mov
scas
lock
lock
insl
jnp
xchg
das
out
in
adc
cs
out
mov
mov
test
out
outsb
and
adc
jle
xor
lods
rcr
and
adc
inc
sbb
mov
imul
xchg
imul
cmp
aad
popa
ret
xchg
fs
ret
xor
rorl
pop
xchg
subl
movsl
dec
xchg
dec
sbb
mov
cmpsb
nop
lcall
in
adc
int3
fstps
or
out
mov
iret
mov
pop
cmp
test
scas
xor
push
xor
lcall
clc
cmp
imul
xchg
movsb
pop
aaa
xor
insl
subl
mov
push
std
imul
mov
jg
loope
sbb
pop
loopne
cmp
es
ljmp
stc
mov
pop
mov
gs
push
mov
fdivl
dec
mov
enter
push
shll
fstl
sbb
sbb
cmp
dec
lret
ficompl
aaa
insl
fisubl
repnz
insl
test
push
fsubrl
push
js
mov
out
loop
insl
addr16
insl
lea
mov
lods
mov
ret
xchg
jae
lcall
xor
adc
mov
ds
fidivl
add
add
sub
mov
adc
andb
inc
pop
add
loop
push
jmp
imul
test
mov
into
popf
mov
mov
push
stc
jae
dec
addr16
pusha
inc
in
ffree
sarb
jl
jg
loope
insl
jp
pushf
pop
push
int
in
in
fdivrs
icebp
int3
mov
sub
sub
fsubs
jne
mov
dec
lds
cld
test
fcompl
aas
andb
jmp
pop
jl
enter
xor
lea
jb
das
dec
push
pop
out
add
aad
mov
cmp
fdivrs
xor
divl
adc
sbb
lods
mov
pop
and
mov
sub
mov
dec
lcall
cli
jno
dec
lahf
mov
dec
xchg
and
test
jl
jge
inc
xlat
aaa
imul
sub
into
inc
add
sbb
inc
push
frstor
adc
xor
sarl
fs
aaa
cmp
and
dec
pop
imul
add
cli
or
movsb
or
sbb
outsl
lret
pop
orl
int
lret
js
imul
lds
adc
dec
into
xchg
sbb
outsl
push
icebp
aad
loope
sbb
sub
or
push
out
dec
pop
mov
add
xor
or
sub
xor
mov
mov
or
push
mov
pushf
movb
adc
ljmp
out
xchg
into
mov
shll
pop
pop
adc
cmc
fimull
imulb
dec
shlb
movsb
in
adc
inc
mov
sbbl
dec
imul
mov
xor
jl
mov
fisttpl
push
mov
mov
mov
jne
and
jb
fimull
enter
mov
xchg
mov
add
scas
sbb
inc
or
testl
fadds
cwtl
xor
in
dec
adc
adc
lret
mov
adc
aam
aam
aaa
push
inc
loopne
push
mov
mov
inc
bound
call
mov
repnz
push
or
lcall
mov
cmpsl
call
dec
pop
dec
xchg
pusha
adc
inc
insb
cli
dec
scas
dec
sbb
pop
out
xchg
sub
cmp
dec
in
mov
pushf
mov
mov
sbb
xor
push
enter
xor
jno
xchg
clc
and
mov
out
scas
mov
rcll
pop
adc
cld
icebp
xchg
out
aaa
insl
scas
push
lahf
jg
jnp
lock
bound
inc
sbb
cmp
xchg
icebp
lcallw
push
push
es
in
outsb
fcmovnu
push
ret
in
dec
fstl
aad
lock
mov
push
daa
movsl
dec
out
pop
pushf
out
sub
das
aad
lea
xchg
les
fldt
jne
add
xor
jge
jo
pop
adc
movsl
aad
int
cs
xadd
mov
jmp
jmp
mov
push
adc
xlat
popf
sbb
pop
adc
or
mov
mov
fisubrl
es
mov
popf
or
mov
pop
icebp
fwait
dec
lret
adc
das
shl
rcrl
pop
push
movsb
xor
push
push
xor
push
mov
jg
jl
or
cs
or
sbb
pop
fnstsw
sahf
dec
lret
aam
idivb
leave
pop
in
shl
mov
mov
cmp
jnp
cmp
movsl
adc
push
adc
cmpsl
xchg
mov
pop
mov
inc
fnstenv
xchg
in
or
jle
and
mov
js
mov
add
adc
out
mov
rolb
lret
xchg
pop
jbe
hlt
in
in
adc
mov
xchg
push
jo
pop
adc
adc
jg
xchg
jge
cmp
jg
mov
in
aas
imul
jbe
out
cwtl
leave
sbb
out
rep
jb
sub
add
ficoml
mov
fs
push
sarl
ret
dec
test
mov
mov
outsl
fldt
sbb
lret
sbb
in
call
pushf
pop
adc
test
dec
mov
scas
mov
fdivs
ret
xor
sub
sbb
cwtl
push
addr16
dec
jg
cmpsb
sbb
add
jl
add
jb
pushf
pop
adc
push
adc
add
sti
in
cld
push
dec
pusha
push
mov
lea
cmp
xchg
push
aad
cmp
mov
insb
or
add
lea
push
xchg
xchg
inc
lret
lods
add
aas
loope
mov
pop
adc
or
or
roll
out
sbb
add
sbb
div
out
and
push
cmp
stc
mov
pop
jns
aas
aam
cs
lret
jne
aas
mov
push
mov
mov
lahf
ficoml
sub
lds
sahf
xchg
xchg
mov
fadds
dec
sub
sub
mull
and
cltd
inc
adc
popl
or
fwait
stc
clc
dec
inc
inc
xchg
inc
mov
sarb
jle
pop
dec
imul
sar
fnsave
sbb
int3
adc
lcall
push
cwtl
inc
and
imul
push
mov
rsqrtps
into
mov
inc
xchg
push
sub
or
cmpsl
iret
sahf
cmp
pop
aam
insl
dec
stc
mov
mov
clc
cs
leave
lret
scas
xchg
pop
in
dec
xchg
pop
std
popf
cmp
inc
rcr
dec
insb
fcmovb
fcmovu
add
mov
xor
jg
fbstp
adc
adc
xor
sarl
lock
push
cmpsl
fwait
push
mov
push
or
sbb
sbb
rsqrtps
fidivl
lret
xlat
loope
xchg
mov
fistpll
xchg
icebp
dec
xchg
ss
fiaddl
fwait
push
add
gs
outsb
push
bound
sub
repz
icebp
ljmp
enter
sbb
aad
jge
stos
std
mov
and
mov
mov
sarl
enter
push
bnd
xor
cmpsb
ret
add
cwtl
cmp
xor
nop
outsl
cwtl
mov
movsb
cltd
out
sub
inc
shlb
push
xchg
and
sub
xor
jns
push
shr
sarl
enter
icebp
lea
fldt
jg
aam
aaa
xchg
or
mov
xor
pop
dec
jmp
test
xor
adc
scas
aad
xchg
pop
jb
push
imulb
ret
mov
inc
xchg
xchg
cmp
add
imul
cmp
adc
sbb
leave
imul
or
imul
movsl
dec
out
mov
or
mov
inc
pop
adc
shrl
xor
adc
imul
movsb
cmp
aad
popa
ret
xchg
fimull
mov
cli
pop
scas
sahf
adc
push
push
cmp
stos
xor
push
adc
test
dec
shll
inc
fsubp
cmp
negb
jle
xchg
mov
mov
lahf
xor
jl
adc
std
in
adc
fs
push
mov
mov
test
mov
sbb
adc
insb
mov
jbe
out
cmpsb
addr16
movsb
mov
cmc
addl
gs
xchg
xchg
dec
popa
push
ficoml
imul
push
daa
mov
cltd
adc
cmp
int3
inc
cld
popf
push
cld
lahf
fnstcw
inc
and
and
pop
loope
push
pop
lea
mov
js
or
fisttps
mov
xor
insl
leave
push
jbe
fldenv
xchg
shll
pusha
divb
adc
cltd
scas
lock
lods
mov
jle
test
roll
daa
and
mov
mov
test
fsubrl
rcl
idivl
sbb
dec
dec
or
push
jbe
lcall
dec
adc
sbb
negl
je
pop
out
push
push
loopne
or
and
jle
cmpl
mov
xor
mov
mov
test
lea
loop
adc
std
aas
addr16
cs
fcmovne
outsb
cmc
push
lds
loopne
movsb
dec
sub
std
cwtl
mov
xchg
xchg
fildl
andl
mov
cltd
lcall
fidivrs
into
or
cmp
mov
into
and
push
mov
inc
xor
mov
out
mov
adc
ds
sbb
cmp
mov
dec
lcall
sbb
ljmp
fs
imul
jg
cmp
mov
icebp
xchg
or
add
jae
mov
and
pop
fs
jecxz
or
insb
cwtl
cwtl
dec
fisttpll
xor
es
jae
xor
jbe
push
cli
out
xor
test
jns
stc
xchg
mov
sub
push
or
daa
xchg
test
pop
pop
in
xor
insb
or
adc
mov
dec
scas
sbb
fstpt
in
sbb
in
mov
pop
cmp
rcrl
mov
jns
out
pop
cmp
add
dec
gs
mov
movsl
hlt
ss
pop
mov
out
pop
add
data16
imul
jne
fiaddl
sbb
and
push
cmp
jl
adc
adc
sub
repnz
data16
xor
mov
test
lret
push
mov
xor
push
dec
sbb
mov
repnz
xor
fsubs
ss
jp
insb
fdivs
sbb
cmpsl
sbb
pop
test
notl
cmp
fistpll
jb
mov
popf
mov
out
lret
sub
pop
mov
adc
sbb
mov
in
and
lea
or
sbb
lahf
and
xor
out
and
imul
pop
xchg
repz
out
test
sbb
popf
outsl
test
pusha
stc
gs
mov
sub
inc
cmp
leave
sbb
sub
iret
jge
clc
inc
fnstsw
icebp
gs
push
or
dec
pusha
mov
les
ds
cmc
out
xor
fiadds
aas
and
cmp
movl
leave
sbb
adc
mov
adc
inc
in
cmp
arpl
dec
int3
and
xchg
mov
jbe
xor
xor
fidivl
sbb
leave
sbb
sbb
negw
pop
loope
pop
pop
insl
fnstenv
out
out
mov
out
js
out
xchg
mov
aad
pop
jle,pt
bswap
xchg
popa
outsl
dec
sub
mov
jle
into
popf
mov
adc
mov
stos
scas
in
aam
mov
jb
adc
or
lds
in
je
arpl
xor
push
cmp
iret
fsubrs
lcall
leave
mov
lock
cmp
scas
jle
adc
cmpsb
sub
push
std
and
aas
push
add
push
call
sbb
loopne
adc
cmp
lods
outsb
imul
push
repz
arpl
push
lret
adc
icebp
les
mov
shr
popa
and
dec
inc
mov
fldt
movl
xchg
jne
inc
orl
icebp
out
pusha
sahf
and
stos
inc
cmp
data16
inc
sbb
sbb
fisubrl
cmp
xchg
insb
imul
xchg
popl
jns
and
sub
add
bnd
mov
ljmp
jbe
jo
add
pop
or
lods
cmp
push
cmc
sbb
jne
add
ja
out
adc
aas
mov
rcll
dec
pop
adc
mov
enter
popa
dec
fldpi
or
inc
push
cwtl
cld
aad
xor
test
aam
fstpl
std
push
mov
pushf
cmp
xchg
inc
add
push
or
lea
jp
and
nop
dec
es
inc
adc
cltd
cld
pop
add
push
lods
jge
ljmp
adc
mov
jne
popa
mov
or
mov
or
sahf
dec
stc
mov
cmp
xchg
adc
sbb
cwtl
and
hlt
test
xor
adc
repnz
out
sbb
movsl
outsb
cmpsb
iret
bound
ljmp
sub
je
jb
pop
jo
xchg
mov
dec
lret
fcoms
fldenv
xchg
cwtl
push
or
ss
rolb
push
jg
out
push
repnz
sbb
ret
sarb
push
xor
mov
filds
jno
daa
mov
fdivs
sbb
mov
jne
rcrb
in
sbb
sub
lahf
xchg
loopne
sbb
and
mov
shl
xlat
cmpl
jp
out
xor
ficompl
adc
sub
loopne
mov
leave
push
in
rorb
sub
sub
push
movsl
pop
pop
gs
sti
dec
xlat
and
push
ds
mov
dec
xor
outsb
push
mov
push
mov
sub
or
aad
dec
sub
xchg
sahf
inc
outsb
test
insl
push
ret
mov
repz
and
mov
in
xchg
shrl
mov
loop
sbb
mov
mov
and
mov
xchg
or
dec
lret
and
xor
movb
xor
or
scas
mov
popa
cld
out
lcall
sbb
mov
out
in
xor
jecxz
push
daa
pop
ljmp
xchg
sub
stos
ret
push
mov
ret
roll
insb
fcmove
push
pop
jp
pop
jmp
mov
inc
pop
cmp
fisttps
cld
mov
fs
fwait
dec
push
sub
loope
jns
or
xor
cmp
add
rolb
dec
pop
adc
movsb
add
int
das
daa
sti
movsl
out
cmp
jecxz
adc
jno
lret
aas
fs
pop
inc
or
fisubs
sub
or
aas
jp
fnsave
xchg
es
cmpsl
fisubrl
inc
test
or
and
mov
fdivrl
outsl
shlb
mov
adcl
fnstsw
add
jns
out
pushf
jp
mov
jmp
outsb
mov
jnp
fdiv
aaa
fwait
lods
adc
jns
in
repnz
lahf
mov
shlb
pop
addr16
rorb
fiaddl
ja
pusha
dec
mov
cmpsl
mov
and
es
pusha
icebp
sbb
jbe
cmp
push
add
es
js
cwtl
xchg
push
scas
push
enter
xchg
fsubs
or
mov
icebp
aaa
mov
subb
mov
addb
dec
pop
sbb
xchg
in
fsubp
cmc
subl
xchg
add
in
jge
es
mul
mov
xlat
sahf
push
jnp
ss
movsl
push
xchg
lds
leave
mov
mov
mov
fadds
or
mov
adc
push
dec
mov
xor
cld
test
daa
jo
xor
sub
or
or
xchg
add
dec
loop
mov
jl
push
out
fs
fisubrl
inc
jmp
xlat
xor
je
adc
xchg
sub
pop
cmpl
inc
push
sbb
sbb
xor
sbb
cmp
cmp
jo
pop
adc
clc
lahf
sub
negb
mov
jbe
pushf
add
push
xor
sahf
sub
mov
rol
add
stc
outsl
xor
and
pop
cmp
mov
sahf
fwait
das
mov
and
hlt
sub
insb
jle
int3
out
cmp
scas
mov
and
icebp
sbb
mov
test
adc
popa
mov
sbbb
sahf
inc
mov
jg
movsl
push
insl
cmpsb
jbe
sbb
adc
aam
orl
out
xchg
jl
inc
das
lret
sti
push
sub
out
negl
cmp
lock
mov
mov
insl
cs
push
popf
mov
fistpll
scas
sub
out
in
xchg
adc
jp
pop
out
jo
xchg
sub
mov
and
sahf
inc
inc
jns
or
int
and
pop
lea
or
mov
dec
pop
lds
mov
push
pop
mov
dec
popa
xchg
out
enter
enter
jge
inc
jg
arpl
fdivs
push
fwait
ss
enter
leave
je
mov
cs
insl
scas
lods
push
movsl
add
dec
aam
popf
mov
fildll
inc
fists
adc
fs
outsb
in
fwait
ss
rcrb
inc
js
sbb
sub
jmp
mov
ret
push
jb
xor
into
sbb
mov
repz
inc
xlat
adcl
or
and
inc
adc
sub
stc
mov
int
cmp
mov
mov
les
lods
hlt
and
xchg
cmpsb
ss
aad
mov
inc
push
push
jecxz
sbb
pop
ljmp
call
gs
and
mov
sahf
outsb
in
in
popa
mov
mov
mov
das
sub
popa
lret
call
ret
dec
mov
or
or
ficompl
sbb
mov
test
xor
and
sbb
dec
xchg
and
lods
xlat
xor
cmp
repz
int
rclb
pop
cmpsl
xchg
mov
push
out
lods
and
stos
popf
sbb
sti
fmull
mov
mov
faddp
shl
xchg
popf
push
lret
sbb
es
mov
scas
andb
mov
xchg
jle
mov
adc
test
daa
jmp
inc
dec
and
insb
push
mov
sub
mov
cwtl
xor
sbb
loopne
insb
movsb
mov
hlt
fistps
mov
das
xchg
and
sarl
lods
push
push
cmp
sub
mov
and
push
xchg
dec
rcr
iret
fstl
in
test
je
pushl
mov
out
adc
or
imul
repnz
fsubrl
popf
mov
std
xor
sbbl
inc
lock
scas
jecxz
sub
inc
push
mov
pushf
loopne
dec
xor
sub
cmpsl
leave
imul
cmpl
lahf
xor
repnz
inc
lods
and
jecxz
ds
hlt
mov
cmp
aaa
in
sbb
mov
aam
lods
xchg
int3
mov
push
movsb
mov
icebp
lret
cltd
and
xchg
push
int
jne
insl
nop
loop
repnz
mov
adc
in
inc
pop
punpckhwd
and
cmc
cmp
jns
mov
in
loop
and
sbb
mov
jbe
or
add
mov
mov
dec
pop
adc
mov
fstps
lds
test
lahf
push
and
sahf
repnz
jb
push
fisubl
andl
pop
pop
and
fs
fnsave
shll
lods
ficompl
sti
inc
popl
cmpsl
pop
nop
push
xor
inc
popa
js
pushf
into
daa
or
imul
jns
and
xchg
mov
inc
adc
mov
jge
push
mov
hlt
mov
or
ljmp
outsb
bound
out
or
mov
or
pop
dec
push
xor
jecxz
cmpsb
xchg
cmp
ds
mov
popf
cmp
sbb
sub
scas
pop
jg
sti
mov
lods
out
adc
in
fs
jle
ljmp
outsl
mov
mov
adc
insl
pop
xchg
insb
push
lds
ret
adc
stos
and
sub
arpl
xchg
mov
out
popf
pusha
xor
fwait
cltd
pop
pusha
xchg
mov
mov
cltd
xor
xor
les
mov
int
mov
mov
orl
neg
pop
xor
or
icebp
jl
lret
jae
pop
pop
aaa
cmp
outsl
aad
ss
popa
push
repz
mov
push
ss
test
das
push
and
jns
insl
subb
icebp
lods
pop
mov
sbb
add
leavew
adc
arpl
jo
pop
adc
loopne
inc
mov
dec
fdivrs
adc
or
out
pop
jp
cmp
rcl
lret
xorl
gs
loopne
mov
xchg
aad
add
fwait
ss
pop
jg
stc
test
imul
dec
out
pop
xchg
loope
lods
ljmp
inc
xlat
xor
sbb
push
out
add
xor
cmc
loopne
lea
mov
aad
loope
pusha
pop
xchg
or
jmp
scas
das
sub
sbb
push
mov
cmp
dec
lret
sbb
jp
inc
adc
jns
out
xlat
lds
ds
movsb
mov
adc
or
lahf
lret
xchg
cmpsb
cmpsl
mov
adc
pop
je
mov
mov
clc
mov
mov
sbbl
loope
mov
test
xor
andl
repnz
mov
imul
and
aad
adc
dec
push
jle
jne
rcr
mov
cmp
sbb
xchg
push
push
hlt
dec
test
call
push
xor
pop
fnstcw
pusha
xchg
sub
cmpl
inc
rcrb
in
jmp
shlb
idivl
into
add
mov
into
adc
iret
aad
fdivr
jb
movsb
fisttpl
les
in
pushf
inc
jecxz
fwait
adc
out
pop
xor
test
push
dec
and
jo
pop
adc
mov
pop
push
add
and
lods
nop
add
inc
push
sbb
push
fistl
fwait
xchg
sti
out
and
or
mov
jno
loopne
mov
pushf
leave
jg
and
je
or
mov
popf
pop
jle
movsb
jl
enter
jae
jecxz
jo
mov
rol
push
mov
adc
pop
repz
out
clc
adc
cmp
cmpb
sbb
imul
mov
xlat
adc
xor
filds
fildl
inc
inc
lods
es
inc
clc
inc
test
out
adc
div
mov
jo
pop
adc
fnstcw
in
lds
adc
ret
cs
jb
mov
adc
iret
push
adc
ret
mov
push
mov
aad
xchg
and
pop
sub
pop
cmp
cli
fstpt
jmp
aad
aaa
bndldx
mov
cmpsb
mov
inc
mov
push
aas
xchg
jae
add
pop
cmp
push
mov
jmp
mov
decb
clc
xor
pop
mov
es
out
inc
sti
push
adc
lea
jl
adc
or
jnp
sbb
mov
cmp
sbb
xchg
iret
sahf
les
mov
push
sub
jo
pop
adc
stos
insl
or
dec
movsb
push
and
mov
loop
xor
out
mov
insb
es
adc
jmp
lret
ror
mov
sub
jbe
jecxz
sub
lds
dec
in
fwait
adc
mov
fmuls
fcomps
xor
daa
dec
loope
andl
cmp
into
mov
and
pop
adc
gs
jmp
popf
pop
popa
dec
test
sub
inc
int3
lcall
shrl
loope
xchg
xchg
mov
push
or
push
leave
pop
push
loopne
sub
sub
sahf
cmp
sbb
and
mov
mov
dec
arpl
mov
scas
mov
push
pop
and
jns
cltd
dec
popa
stc
out
pop
lret
jmp
js
and
sub
shr
movsl
sbb
ret
mov
xlat
test
jns
loope
push
frstor
push
movsb
ss
xchg
fidivs
sbb
xchg
mov
int
push
dec
sbb
mov
mov
inc
xlat
test
nop
test
repz
les
pop
mov
pop
lret
xchg
pop
adc
or
mov
cmp
add
cli
mov
adc
es
shl
fiadds
sbb
fldenv
adc
mov
fistpll
scas
sub
jmp
int
mov
js
jns
out
xlat
loope
cmp
movsl
dec
cs
js
cmpsl
inc
sahf
cmp
jns
mov
mov
stos
sahf
mov
rcrb
xor
mov
mov
lret
adcl
xchg
and
data16
js
fwait
sbb
scas
xlat
loop
pop
lret
les
inc
pop
jnp
mov
jge
pop
dec
test
inc
imul
dec
pop
push
idivb
vpmuludq
arpl
jmp
or
test
repnz
je
out
addl
insb
sub
and
and
and
or
scas
imul
stos
cmp
add
aad
dec
int3
inc
cltd
push
scas
sub
adc
out
xchg
mov
jb
sub
xchg
push
neg
push
stos
lods
xor
push
xchg
mov
xor
aad
movsl
ja
push
inc
fcoml
jecxz
out
int
call
movsl
and
dec
dec
jecxz
xor
dec
out
pop
cmpsl
jae
fisubl
dec
lret
pop
popa
daa
stc
fsubrs
pop
lret
movb
adc
daa
cmp
or
in
fcompl
mov
fidivs
adc
adc
and
fimuls
enter
and
or
xchg
mov
mov
ljmp
jl
clc
out
sbb
arpl
push
mov
cmp
mov
aam
into
in
cmc
fs
inc
clc
cld
insb
and
fs
jge
sub
xchg
add
sbb
dec
xchg
jnp
aas
lret
mov
and
pop
lea
loopne
sub
cltd
repz
and
gs
ljmp
sub
shll
or
pop
cwtl
add
xor
notb
stos
mov
and
stc
int3
pop
adcl
sbb
sahf
xor
mov
cli
mov
jae
and
jnp
testb
cltd
sbb
gs
cmc
stos
jmp
repz
out
and
rep
or
and
adc
repnz
xchg
push
dec
scas
and
xor
sub
xchg
push
mov
cmp
sub
cs
jo
mov
sahf
cmp
sbb
and
dec
xchg
or
test
pop
vpmacsdd
xor
inc
xlat
xchg
lea
loop
out
xor
sbb
inc
xchg
and
adc
popf
adc
or
in
pusha
sti
sbb
mov
mov
xor
and
sbb
inc
xchg
and
lods
xlat
xor
cltd
dec
pusha
leave
out
rcrb
dec
xchg
mov
add
jo
insb
mov
cmpsl
inc
sahf
cmp
jns
mov
mov
stos
sahf
enter
jp
inc
xor
jmp
sub
insb
call
or
inc
arpl
int
shlb
not
mov
mov
shrb
pop
das
sub
inc
clc
or
dec
push
dec
imul
inc
push
fldl
push
movsb
cmp
fisttpll
jae
or
xlat
xchg
dec
jg
lods
inc
xchg
fsts
sti
addl
movsb
dec
jmp
int
ret
fsts
inc
bound
xchg
dec
loop
aad
jne
in
filds
cmp
arpl
fcomps
mov
repz
jg
inc
xlat
test
push
and
jns
insl
subb
and
lods
out
adc
mov
test
jo
pop
adc
xor
jb
dec
aad
fcoms
push
cmc
jge
outsb
out
int3
fwait
dec
neg
dec
mov
mov
std
or
cmp
cmp
pop
xchg
leave
dec
xchg
repnz
mov
dec
pop
loopne
pop
push
mov
xchg
push
cmc
jne
or
fiaddl
fcmove
push
movsb
and
mov
pop
sbb
pop
jnp
mov
inc
mov
lea
scas
repz
push
jnp
call
pop
jmp
cmp
push
clc
jg
sti
dec
enter
push
xchg
es
pop
popa
lods
loopne
sbb
scas
icebp
stos
in
out
adc
add
push
xchg
jo
pop
adc
sbb
xor
cmp
stc
mov
cld
jg
push
inc
mov
xchg
int
add
xchg
jp
and
mov
ss
repz
sub
aam
out
and
cmp
add
or
push
adc
push
push
leave
rep
jae
nop
or
int3
push
mov
jno
sbb
adc
cmc
sbb
icebp
lods
and
xchg
icebp
lret
test
add
into
push
add
cltd
movsl
pop
sub
xchg
outsl
pop
cmc
sti
jecxz
sahf
xor
xchg
inc
xor
aad
dec
shlb
out
adc
mov
sub
jo
pop
adc
pop
sti
xchg
push
push
mov
repnz
ret
sub
outsl
pop
ss
out
orb
fisttps
mov
ret
sub
fisttpl
mov
dec
jmp
pop
push
je
xchg
ja
stc
test
subb
sbb
iret
out
and
inc
and
fldt
lea
mov
mov
dec
stos
test
xchg
push
aad
push
scas
inc
lods
loopne
xchg
into
cli
das
lret
push
add
mov
mov
pop
push
fsubr
add
cs
faddp
xchg
cmpsb
lcall
sbb
repz
aam
out
std
dec
mov
mov
cmp
jo
pop
adc
jmp
pop
push
xchg
dec
mov
dec
mov
sbb
push
test
jb
push
ljmp
dec
inc
pop
adc
pop
push
adc
pop
cld
jg
rcrb
daa
repz
int
rcrb
dec
out
xor
push
adc
dec
pop
adc
adc
jbe
pop
pop
adc
mov
push
adc
movsl
xor
imul
pop
sub
mov
dec
dec
in
mov
fcmovnb
inc
inc
mov
and
mov
pop
aas
xor
je
adc
adc
dec
xchg
das
out
js
out
fistpll
repz
mov
sub
xchg
pop
dec
mov
into
aaa
sub
mov
or
jle
adc
adc
sbb
daa
push
xor
xchg
pop
lret
sbb
icebp
ret
call
out
xor
sbb
cli
sub
and
pop
mov
lret
adc
push
push
adc
dec
xchg
push
xor
fdivs
icebp
inc
out
aaa
insl
fidivrl
pop
rorb
adc
adc
out
movsl
xchg
ret
sbb
push
adc
enter
pushf
fcoms
sub
aas
sub
mov
mov
adc
add
pop
mov
sbb
push
or
mov
shrb
cwtl
insl
js
cmpsl
fwait
lret
mov
gs
out
mov
iret
jbe
pop
push
push
push
and
repnz
mov
adc
addl
pop
mov
adc
loopne
xchg
loope
adc
sbb
cmp
sti
push
jmp
lret
xchg
pop
jmp
pop
pusha
push
lock
nop
int
ss
push
push
sub
repnz
mov
adc
loopne
test
mov
shl
add
sbb
not
and
dec
loopne
mov
cmp
sbbl
je
mov
orb
mov
sbb
fs
cmp
arpl
bound
jno
cmc
hlt
fisubs
fldenv
xchg
pop
xchg
sbb
push
mull
out
or
fsub
add
sbb
sbb
mov
jmp
in
push
pop
pop
cmp
add
jl
mov
and
mov
cmp
ret
shl
adc
xor
lds
pop
adc
int
psubsb
adc
pop
add
lea
cmp
inc
jo
test
dec
ror
and
pop
stos
jb
insl
arpl
or
stos
shr
add
lea
pusha
mov
mov
inc
pop
add
push
dec
inc
aad
fidivrl
or
cltd
add
mov
mov
clc
mov
xor
out
adc
dec
sbb
sub
sub
and
les
mov
iret
adc
and
lahf
je
mov
jle
mov
mov
xor
fs
mov
aas
call
sarw
mov
or
cwtl
fistpll
fldt
mov
xlat
ret
mov
mov
sub
repz
or
xchg
pop
push
shl
inc
add
es
mov
in
or
mov
aam
xor
dec
je
mov
imul
inc
inc
add
sbb
enter
loope
popa
adc
outsl
bound
cmp
mov
xchg
sbb
xor
call
add
push
xchg
xor
xchg
push
inc
jns
arpl
outsb
inc
sbb
or
lock
roll
je
mov
out
sub
gs
sahf
add
jl
jle
aam
adc
xor
ss
adcb
lds
fists
mov
xchg
lcall
int
fstpl
lods
cmpsb
cmp
jns
outsb
lcall
imul
adc
je
xor
sarl
or
notb
insl
fisubrl
addb
in
inc
jmp
cwtl
pop
add
mov
and
sub
ret
adc
jno
xchg
arpl
dec
xchg
and
mov
outsb
push
out
xor
sub
sbb
cwtl
xor
dec
xchg
cmpb
push
mov
int3
fwait
sbb
aas
sbb
out
pop
test
lods
movzbl
stos
aas
jns
lcall
jo
pop
aaa
and
mov
sbb
dec
out
jp
daa
dec
loop
dec
repnz
insb
repnz
cmc
mov
rclb
sbb
xor
loopne
call
fdivs
inc
fidivl
cmp
pop
out
das
js
incb
xor
lods
xor
push
adc
insl
fcmovb
outsl
adc
enter
add
xchg
sub
pop
ljmp
dec
inc
push
inc
imul
xchg
icebp
out
cli
mov
xor
add
pop
adc
les
jg
xchg
inc
xchg
add
fnstenv
ret
outsb
pusha
divb
fs
jl
aaa
or
mov
sahf
xor
cli
xor
addb
add
mov
ret
rolb
inc
fidivl
adc
addb
xchg
and
add
addr16
adc
mov
xor
sbb
mov
mov
lods
or
xchg
pop
je
xchg
out
mov
adc
mov
lods
or
cmpsl
test
cmp
mov
insb
fdivs
out
aaa
mov
inc
xlat
mov
push
xor
pop
adc
mov
ret
shl
clc
loope
ss
or
inc
adc
pop
adc
addl
cwtl
jg
adc
sbbl
cwtl
cltd
imul
pop
adc
mov
pop
lds
dec
nop
mov
adc
adc
addr16
mov
stc
xor
popf
cmc
je
pop
adc
push
mov
aaa
xor
push
fcoml
xorl
add
mov
test
cld
jmp
pop
adc
mov
mov
stos
add
jbe
cli
sbb
pop
adc
in
fcompl
add
pusha
jbe
adc
add
loopne
xchg
adc
or
mov
mov
or
pop
adc
xchg
mov
lea
or
adc
out
pop
ss
jno
fdivrs
pop
adc
cmp
sbb
cwtl
fs
das
sahf
test
mov
aad
scas
push
fninit
enter
addr16
adc
sub
inc
cltd
jnp
push
in
push
outsl
add
outsl
paddusb
adc
testb
ret
xor
pop
lret
mov
insl
mov
jns
fldl
pop
adc
xchg
mov
enter
fidivs
pop
pusha
xchg
or
cmp
mov
jge
add
dec
sub
lret
dec
cmpsl
aam
pop
adc
push
rcr
and
sub
and
pop
ljmp
ret
shlb
adc
je
pop
lret
and
inc
adc
int
push
call
mov
pusha
or
jne
sbb
mov
adc
pop
add
dec
or
mov
mov
adc
adc
jmp
mov
mov
lods
adcl
mov
aad
jnp
in
jbe
adc
dec
stc
rolb
xor
xor
jp
adc
push
stos
push
insl
int
lretw
dec
sbb
movsb
or
arpl
ds
sub
dec
bound
adc
mov
iret
bound
jae
adc
jl
scas
fisubrs
out
mov
add
adc
out
inc
push
repz
or
mov
adc
sbbl
movsl
push
mov
lds
mov
adc
rcr
popa
xchg
outsb
outsb
enter
push
gs
sarb
adc
cmp
xchg
mov
and
adc
xor
scas
hlt
mov
js
jo
pop
adc
sti
mov
mov
clc
xchg
pop
adc
fs
int
inc
shlb
movsl
lock
pop
adc
out
mov
fneni(8087
test
popa
sahf
cmp
fs
pop
adc
nop
dec
xchg
das
or
sbb
leave
pop
pop
cwtl
pop
adc
fcmovnu
mov
mov
adc
dec
pop
rcrb
pop
mov
gs
in
or
dec
xchg
pop
adc
pop
icebp
repnz
insl
jbe
jp
pop
adc
xor
int
arpl
ds
xchg
pop
adc
add
push
inc
fidivl
adc
addb
xchg
and
test
jecxz
adc
leave
xchg
and
inc
xchg
adc
lea
or
nop
out
je
pop
adc
jns
jmp
or
sahf
bnd
jae
cmp
fnsave
mov
inc
cwtl
mov
test
xchg
sub
xor
adc
mov
ret
shl
cmp
fwait
rorl
pop
adc
mov
out
int3
fnstsw
push
movsb
loope
loopne
pop
adc
stos
ret
xchg
ficompl
push
outsl
or
test
pop
adc
cld
imul
or
xchg
fcoms
jb
adc
fs
xchg
jae
dec
loopne
inc
cs
enter
add
lods
pop
mov
xor
es
aaa
stos
cwtl
pop
pop
adc
rol
jb
or
add
xchg
pop
adc
or
fs
lock
cmpxchg
adc
lcall
jp
or
xchg
dec
mov
adc
mov
imul
adc
outsb
jle
loope
jge
stos
es
xlat
jge
adc
xchg
pop
adc
cs
addr16
sarb
adc
in
in
cmp
scas
add
adc
sub
fcmovnbe
outsl
inc
iret
mov
pop
adc
call
iret
inc
lods
sbb
shlb
int3
jne
adc
push
add
or
and
pop
pop
adc
repz
push
addr16
out
clc
lea
adc
add
ds
shrl
pop
adc
lcall
int3
xchg
pop
jne
xchg
and
pop
adc
rcrl
sarl
adc
xor
add
cwtl
outsb
loopne
pop
adc
push
inc
mov
rcr
hlt
dec
int3
movsb
fldl
jl
adc
push
js
mov
insl
out
loop
mov
adc
packuswb
cld
rclb
sub
loope
scas
and
dec
fsubr
or
xchg
mov
adc
insb
sub
ret
je
push
push
pusha
pop
adc
popa
bound
jo,pn
test
jo
adc
das
push
mov
or
adc
push
orl
adc
dec
sub
lret
or
adc
nop
hlt
scas
push
out
dec
jne
sub
jl
je
adc
aad
dec
mov
je
and
ds
push
xorl
jp
jo
pop
adc
sbb
adc
jnp
and
jmp
xchg
adc
mov
xor
lods
dec
pop
mov
adc
mov
push
jnp
lcall
xchg
adc
fidivl
push
ficoml
outsl
xchg
mov
das
xlat
lods
pop
loopne
push
jnp
daa
jecxz
mov
adc
enter
jg
xchg
inc
xchg
leave
pop
mov
sub
mov
mov
push
jns
dec
pop
les
adc
shrb
pop
mov
gs
pushf
pop
pop
adc
aaa
sub
shl
aaa
mov
inc
pop
mov
test
xchg
sub
lahf
idivb
mov
cwtl
pop
adc
mov
xlat
pop
fidivl
adc
addb
xchg
and
add
je
adc
inc
sbb
fs
jp
xchg
or
adc
jns
lods
or
xchg
pop
je
nop
out
in
pop
adc
jns
imul
mov
adc
clc
insb
cmp
pop
jno
xchg
pop
adc
xchg
das
pop
ljmp
add
insb
pop
adc
out
addr16
repz
mov
jbe
adc
sub
out
int3
sbb
in
mov
adc
xor
xchg
ficompl
add
sub
pop
adc
cmp
xchg
mov
inc
mov
adc
xor
iret
jmp
cld
sub
add
xor
mov
insb
mov
adc
xchg
and
jo
or
movsl
je
pop
adc
or
insl
fneni(8087
test
jl
cmp
fs
adc
jge
xchg
das
or
sbb
sbb
sub
adc
xor
outsb
push
aad
fwait
lcall
out
repz
jb
mov
mov
adc
pop
icebp
shrb
pushf
jl
adc
scas
out
fwait
bound
out
push
idivl
mov
jbe
adc
xor
pop
shll
pop
adc
aam
pop
jecxz
jb
nop
and
or
addb
pop
cmp
xchg
es
jl
xchg
inc
test
adc
mov
adc
cltd
inc
inc
dec
dec
pop
dec
fs
adc
sub
sub
mov
mov
adc
and
enter
scas
rorb
mov
cld
mov
ss
dec
lea
adc
mov
sti
inc
out
sub
adc
pop
call
mov
or
jnp
inc
lods
sbb
cmp
pusha
pop
adc
push
es
mov
out
xor
and
pop
adc
jo
sbb
out
mulb
or
sbb
fdivrl
xchg
jecxz
xor
pop
adc
and
lret
movb
adc
adc
enter
cld
popw
adc
inc
inc
cltd
sub
push
adc
or
sti
mov
lock
out
and
sub
movsb
xor
call
mov
adc
daa
dec
loop
jmp
pop
or
fcmove
in
idivb
cmp
stos
loope
imul
jb
lcall
mov
inc
mov
pushf
add
mov
outsl
imul
adc
mov
pusha
mov
mov
or
lret
jae
or
gs
outsb
jno
mov
cmpsb
bound
aam
loopne
mov
dec
and
and
arpl
adc
and
push
rcrl
js
aam
pop
adc
mov
mov
sub
push
push
test
pop
adc
xchg
mov
test
push
push
je
adc
push
addr16
stc
test
cmp
decb
icebp
inc
test
adc
and
mov
and
pop
adc
fnstsw
pusha
dec
cmp
adc
push
fidivl
in
or
push
adc
xchg
pop
adc
imul
pop
jne
mov
mov
insl
fdivs
out
aaa
mov
inc
and
call
xor
pop
adc
mov
ret
shl
js
fwait
rorl
pop
adc
push
repnz
int3
fnstsw
pop
push
movsb
xor
rorb
xor
sbb
subb
repnz
lods
or
xchg
mov
jl
pop
adc
gs
xchg
jae
out
inc
sub
add
pop
mov
xor
pop
pop
jno
mov
adc
xchg
das
pop
ljmp
add
mov
fsub
mov
dec
repz
or
cwtl
pop
adc
test
push
push
push
lret
lds
adc
jmp
mov
xchg
outsb
into
ror
fwait
dec
push
gs
shrb
fwait
outsb
int3
lcall
xchg
mov
adc
pop
adc
xor
paddsw
pop
adc
sti
mov
movsl
and
aas
mov
arpl
adc
fs
int
pop
shlb
movsl
test
pop
adc
xlat
mov
fneni(8087
test
fs
pop
adc
test
xchg
das
or
sbb
leave
pop
jo
pop
adc
jecxz
mov
mov
or
lcall
push
xor
adc
pop
adc
push
mov
lcall
mov
adc
jmp
adc
pop
adc
stos
ficoms
pop
adc
pop
adc
pop
adc
mov
adc
adc
ljmp
push
jno
fs
xchg
push
nop
sbb
mov
jae
mov
lods
xor
jbe
cmp
gs
push
mov
out
sub
pop
das
fwait
ss
pop
sub
pop
dec
mov
rcl
mov
loop
sbb
mov
rorb
dec
add
popf
pop
adc
fmuls
cmpsb
mov
fwait
outsl
xlat
or
and
or
ret
popf
pop
and
add
inc
adc
rol
dec
add
xchg
filds
sbb
cmp
idivl
jno
clc
repz
jns
stc
shrb
mov
test
adc
pop
and
adcb
xor
lods
sbb
and
fmuls
adc
pusha
add
inc
nop
cmp
xor
pop
xor
jb
mov
pop
mov
sti
add
outsb
mov
sub
scas
xchg
dec
movb
mov
hlt
lret
pop
add
loopne
aas
into
scas
aad
xchg
shrl
mov
sub
outsb
ret
mov
addr16
stc
inc
push
jo
or
inc
jne
xchg
lret
rcl
xchg
insb
ja
pop
fldl
dec
test
rolb
sub
inc
out
push
push
push
loop
cmp
stos
xchg
ret
xchg
push
test
cmp
jmp
inc
jne
inc
mov
sar
adc
jmp
sbb
push
cmc
aad
adc
push
loop
pop
es
adc
add
fisttpll
scas
adc
xchg
and
push
aaa
sbb
pop
sub
shll
test
aas
cmp
or
xchg
push
add
testl
jmp
pop
sbb
sub
hlt
jl
leave
fdivl
outsl
in
sbb
push
push
shlb
enter
cmp
adc
pushf
pop
adc
jbe
adc
mov
je
movsl
jle
add
stc
int3
and
mov
popa
mov
push
adc
aam
int3
fxam
rol
test
adc
mov
or
pusha
pop
xor
mov
in
dec
pop
mov
in
dec
push
mov
adc
push
pusha
mov
rorb
pushf
sub
mov
aaa
and
in
dec
cs
int
mov
mov
jle,pn
sub
std
mov
mov
mov
push
xor
dec
pop
stc
leave
xchg
and
inc
xchg
sub
pop
or
ds
inc
inc
sub
hlt
adc
shlb
adc
stos
sarb
mov
dec
xchg
push
mulb
mov
adc
outsl
jne
das
jle
lock
xchg
sub
cmp
or
xchg
xor
cmp
mov
rcl
push
push
xchg
mov
xor
pop
push
and
popa
xchg
and
sub
out
fsts
call
push
sbb
cmp
push
mov
xor
data16
int
and
dec
xchg
adc
in
mov
dec
jp
xchg
sub
mov
mov
mov
repz
dec
add
stc
in
ss
aas
clc
mov
xor
out
imul
jns
dec
pop
gs
pop
lea
testb
ret
lret
xchg
mov
push
cmp
cmovg
int
push
xchg
pop
adc
mov
and
fsubl
pushf
pop
adc
ret
fucom
fwait
shrb
sub
gs
lret
imul
data16
dec
jmp
xor
mov
insl
int
iret
shll
inc
dec
lret
jne
dec
xchg
mov
loope
mov
jmp
jg
cli
inc
xchg
subb
dec
out
inc
or
pusha
ret
xchg
jle
and
add
mov
mov
lods
inc
inc
pop
adc
in
out
inc
pop
adc
xchg
rol
inc
pop
adc
pop
pop
pop
xor
adc
inc
inc
pop
adc
cmp
rorb
add
pop
adc
or
pop
adc
sahf
loop
jns
lcall
add
into
mov
popf
mov
pop
adc
and
stc
lea
push
sti
sbbl
repz
stc
sbb
popf
pop
adc
mov
add
push
adc
rcrb
mov
outsl
ret
fdivrs
je
pop
es
pusha
inc
cmpps
sti
cmp
cmpsb
out
pop
xchg
dec
cmc
and
cmp
xchg
inc
adc
jae
xor
xchg
sbb
mov
sbb
add
outsb
test
imul
popf
pop
adc
sqrtps
popf
pop
adc
push
cld
adc
adc
inc
insb
ljmp
jecxz
in
repnz
test
mov
sub
js
cmp
lock
mov
addb
and
fistpl
pop
aaa
pop
inc
xchg
and
sbb
imulb
or
and
xor
mov
xchg
xchg
hlt
pop
cmpsb
cs
call
push
cltd
inc
pushf
mov
popa
loopne
out
sub
jns
arpl
in
mov
push
mov
dec
xor
xor
dec
js
jnp
outsl
fldl
sahf
not
cmpsb
xchg
int3
sbb
adc
aas
in
jle
adc
xchg
out
mov
sbb
out
adc
enter
test
out
mov
pop
pop
xor
popf
pop
adc
sahf
add
push
adc
fxtract
out
cltd
sbb
aad
mov
mov
cmpsl
loopne
pop
adc
xchg
add
xor
xor
cltd
loopne
pop
adc
add
xor
push
movsb
sahf
fisubl
sbb
js
sbb
les
jmp
call
cmp
lret
xor
mov
and
sub
dec
into
jl
test
cltd
frstor
mov
mov
gs
sbb
addr16
sub
icebp
xchg
jo
leave
adc
pop
test
xchg
fidivl
fbstp
out
mov
adc
xchg
push
cmp
pop
test
pop
outsb
cmp
jae
jmp
xchg
mov
push
and
imul
insb
pop
jbe
dec
cmpb
bound
push
stos
and
rep
pop
call
out
xor
roll
xchg
cmpsb
xor
aas
sub
repnz
and
push
cs
loopne
test
test
inc
mov
insl
and
mov
inc
sahf
push
cmp
movl
jl
shl
inc
or
and
xor
std
mov
fnstenv
lret
pop
lret
xorl
sbb
or
jnp
or
cs
and
push
int
call
adc
mov
sub
add
and
bound
cmp
rorb
fisubs
and
lcall
insb
xchg
sub
es
pop
sub
sahf
add
call
sub
add
popf
pop
jo
xlat
lods
pop
mov
lea
mov
test
rcrl
xchg
mov
fwait
andl
fadds
cmp
or
fimuls
xlat
fnstsw
enter
lret
pop
cmp
or
insl
push
mov
fwait
imull
out
sbb
int3
or
xor
mov
push
cmpsb
sub
in
ljmp
mov
nop
stc
mov
mov
adc
add
aaa
arpl
mov
clc
jo
pop
adc
add
pop
adc
out
xor
ficompl
ret
scas
fsubrl
popf
test
mov
jp
pushf
je
mov
enter
cltd
adc
ss
dec
jg
xchg
inc
mov
pop
pop
ficomps
lcall
dec
sbb
mov
or
pop
mov
sbb
jmp
push
jb
inc
cmc
and
out
xor
aaa
sub
mov
fwait
mov
mov
cmpsl
mov
mov
jb
jmp
popa
pop
cmp
pop
jbe
mov
aas
enter
andl
in
stc
push
and
add
xchg
mov
add
pusha
inc
pop
adc
fcompl
add
in
mov
mov
mov
insl
push
movsl
jo
xchg
in
lret
mov
xchg
lock
jne
sbb
aad
dec
lods
mov
addr16
add
enter
pop
jbe
sub
lret
xchg
lds
sbb
test
xchg
xor
out
xchg
lret
arpl
push
mov
aaa
dec
ljmp
outsl
gs
iret
or
scas
int3
jmp
push
xchg
ljmp
add
mull
jg
jo
loopne
mov
imul
sbbl
shr
cmp
sub
xor
inc
push
or
pushf
loope
dec
mov
mov
test
scas
adc
call
lea
std
daa
daa
or
fwait
adc
jmp
jno
push
lods
sub
mov
iret
push
or
inc
pushl
xchg
cwtl
push
mov
outsb
adc
lock
mov
ret
xor
push
idivl
cltd
lds
shlb
fsubp
xchg
and
cmp
or
ss
xchg
test
shlb
addb
mov
push
xor
dec
sahf
xchg
in
in
leavew
adc
mov
aaa
cmpsl
lcall
loopne
xchg
daa
dec
loop
and
repnz
adc
lods
bnd
xor
sbb
and
rclb
call
dec
ficompl
adc
inc
xchg
arpl
pop
xor
daa
dec
aaa
xchg
outsb
rol
xor
jns
push
jmp
int
xorb
push
movsb
cmp
inc
xor
jl
repz
in
sar
in
push
xchg
gs
std
mov
mov
mov
pop
call
pushf
outsb
fwait
ss
es
xor
xor
sbbl
mov
jbe
xchg
daa
dec
imul
cld
clc
popf
pop
adc
adc
adc
pop
bound
out
clc
sahf
cmp
test
scas
fcmovnbe
mov
int
xor
push
imul
cmp
test
aaa
inc
pop
int
xchg
shlb
xor
and
sbb
test
xor
cmc
shll
fs
lret
push
push
mov
loope
rcrb
insb
push
aaa
insl
jbe
pop
sarb
pop
jge
mov
mov
mov
ret
icebp
inc
pusha
ss
dec
mov
addr16
jns
arpl
inc
jo
xchg
and
pop
clc
popf
pop
adc
pusha
inc
pop
adc
cld
adc
adc
jns
out
lods
subb
dec
push
fcmovu
insb
push
cmp
cmp
xor
cld
das
shl
int3
sbb
addr16
add
les
jecxz
dec
nop
and
daa
cmp
out
popa
cltd
xor
rcl
lret
inc
xor
push
shlb
adc
test
xchg
and
xor
adcb
arpl
xchg
test
insl
jl
mov
pop
cmpsl
or
cld
add
dec
mov
jne
xchg
lcall
ret
dec
pop
adc
movsb
add
pop
adc
enter
jmp
mov
stc
cmpsl
mov
fcoms
add
mov
daa
imul
adc
scas
cs
or
jl
xchg
pusha
mov
movsb
and
out
icebp
movsb
fs
test
jno
sbb
lahf
jns
mov
adc
xchg
out
dec
and
push
das
mov
dec
mov
loop
dec
lret
adc
mov
add
ret
leave
inc
je
imul
pop
add
insb
adc
push
or
outsb
xor
jns
iret
clc
cmp
fldl
pop
pop
das
out
movsl
mov
jmp
add
cwtl
cmp
pop
pusha
stc
or
imul
dec
std
and
out
pop
movb
dec
popf
mov
lea
pop
dec
arpl
jbe
je
push
mov
rcll
ja
in
mov
imul
fstpl
xor
mov
lahf
mul
mov
aaa
jle
call
sti
rclb
inc
sbb
push
cmp
out
jae
sbb
inc
shl
fdivs
mov
xor
sbb
push
sub
stos
mov
scas
or
adc
push
sub
push
mov
sbb
adc
daa
xchg
pop
cmc
clc
jl
push
cmp
vcvtdq2pd
push
jmp
add
insb
xor
push
inc
out
and
shlb
sub
insb
push
mov
dec
adc
cwtl
inc
and
mov
mov
xor
dec
xchg
mov
jl
repz
imul
cmp
pop
jg
or
subb
cmp
cmp
dec
xchg
sub
xchg
sbb
dec
dec
in
lock
ss
push
cmp
or
xchg
ret
pop
xchg
sub
dec
jns
adc
adc
dec
lods
out
push
jp
cmp
aad
aad
out
inc
filds
ss
sbb
mov
pop
adc
pop
cld
adc
adc
cltd
out
xlat
addl
daa
jbe
or
incb
adc
out
adc
test
imul
in
mov
or
ficompl
pop
adc
xchg
adc
adc
mov
pushf
pop
adc
push
xchg
cs
insl
push
repz
out
out
cmp
roll
pop
mov
pop
cmc
fs
cmp
mov
cmpsb
bound
ss
test
ret
loope
popf
pop
adc
aad
xchg
dec
sub
pop
ret
out
push
popf
pop
adc
push
xor
pushf
pop
adc
or
jmp
push
adc
mov
pop
dec
pop
test
ss
inc
xlat
loope
rcrl
xor
xchg
mov
jp
lahf
test
cmc
mov
ret
enter
pmovmskb
dec
adc
push
push
repnz
sbb
lock
dec
sub
pop
clc
push
mov
pushf
pop
adc
mov
add
adc
adc
and
sub
test
cmc
lahf
cmp
cmp
dec
xlat
movsb
xchg
xor
push
out
lret
xchg
pop
out
loopne
mul
fdivl
lret
repz
and
mov
xor
mov
jno
in
pop
pop
adc
sub
push
inc
adc
inc
sbb
adc
jne
add
inc
inc
rcll
lods
loope
imul
sbb
cmp
insb
ret
call
sbb
leave
in
inc
pop
adc
add
pop
adc
inc
js
cmp
jno
mov
mov
xor
pushf
pop
adc
inc
adc
scas
popf
lahf
mov
jns
hlt
hlt
or
dec
pusha
xchg
inc
in
stc
cmpsb
jbe
pushf
pop
adc
xor
mov
pmaddwd
pop
adc
pop
adc
xor
adc
adc
out
rcr
out
dec
bound
sahf
push
call
add
mov
sbb
jo
push
in
out
push
adc
mov
rol
jmp
mov
mov
hlt
xor
push
popf
xchg
sub
fdivp
hlt
sbb
ds
in
push
inc
adc
stos
fcmovne
cltd
sbb
pop
adc
pop
xor
add
pop
pop
adc
mov
js
jg
jmp
xor
movsl
and
movsb
pop
lret
pop
andl
pop
adc
loopne
lcall
js
cmp
mov
push
mov
and
hlt
inc
and
mov
lcall
push
adc
or
pop
push
sbb
pop
adc
cmp
push
adc
adc
sub
in
sbb
mov
pop
fs
and
stc
jp
inc
enter
xor
cmp
xor
test
icebp
bound
jbe
push
std
lahf
mov
sub
into
rorl
dec
cmp
sti
cs
ds
ljmp
pop
xchg
jle
pop
sub
aas
popa
or
or
test
scas
jmp
push
sub
push
mov
dec
stc
pushf
mov
adc
in
sbb
in
mov
dec
mov
lcall
cltd
enter
sub
pop
mov
jno
mov
gs
pop
and
add
pop
adc
pop
cmp
xor
mov
test
aam
jae
sbb
adc
ds
loope
mov
sub
and
jns
insl
subb
jno
pop
mov
sbb
and
add
sbb
out
sahf
cmpsb
imul
ljmp
loop
pop
mov
das
and
xchg
dec
repz
mov
leave
xchg
and
mov
jb
cmpsb
aam
add
imul
adc
push
inc
cmpsl
mov
sub
add
cltd
loopne
mov
mov
lret
mov
xlat
sbb
sbb
pop
xor
mov
cmp
push
gs
repnz
popf
pop
adc
daa
lds
add
call
sbb
aas
cmp
mov
xchg
push
fdivrs
and
pop
adc
mov
ret
xor
fsubr
ljmp
rcrl
call
xor
insl
shr
pop
adc
push
out
xchg
mov
pop
adc
fidivrl
lahf
mov
jnp
mov
pop
adc
mov
pop
adc
lret
test
out
les
pop
adc
push
leave
pop
sbb
adc
mov
aas
aas
pusha
add
inc
add
adc
les
jg
xchg
mov
push
sbbb
loopne
aas
arpl
cmp
pop
adc
sbb
rorl
xor
sub
mov
pop
pop
in
xchg
jo
pop
adc
lret
stc
mov
push
daa
stos
or
pop
adc
inc
insb
daa
sub
mov
adc
icebp
shlb
push
mov
outsb
test
and
stc
cwtl
and
xchg
fadds
icebp
rcrb
pop
js
mov
dec
dec
sbbb
push
xchg
cld
test
imul
lret
inc
cmpsb
xchg
push
fwait
mov
cmp
lods
les
dec
sbb
mov
xchg
dec
lods
test
cmp
mov
repz
lds
stos
mov
ljmp
ljmp
or
sub
cld
in
sbbl
adc
lret
xchg
popa
rcll
xor
mov
hlt
fidivl
cmp
sub
and
pop
imul
sub
adc
ss
insl
rcrb
pop
adc
jnp
sbb
and
pop
sti
mov
adc
pop
pop
adc
rcl
aam
jl
daa
jo
je
pushf
pop
adc
adc
addr16
mov
lahf
inc
aaa
mov
fcomp
xchg
push
mov
sahf
sbb
sub
pop
pop
adc
adc
fiadds
ja
dec
je
mov
enter
pop
adc
pop
adc
inc
sahf
and
loope
pop
pop
adc
stc
insb
enter
push
add
pop
adc
add
sbb
pop
pop
adc
pop
xchg
sbb
and
pop
and
push
int
popf
pop
adc
pusha
cltd
inc
lock
pop
adc
xchg
jp
mov
xchg
fdivl
adc
xchg
outsl
lcall
xor
and
stos
push
out
lcall
lcall
nop
or
push
add
lock
mul
mov
test
data16
push
pushf
pop
adc
repnz
icebp
and
jb
lcall
cmp
cmp
loopne
mov
negl
xor
sub
pop
or
jp,pn
inc
xchg
add
pop
adc
mov
daa
out
sub
push
sbb
mov
insl
adc
imul
lods
xor
cmp
pop
testb
or
mov
jg
imul
in
loop
in
ror
sub
push
xor
xchg
hlt
cmp
push
popf
gs
cmp
int
fs
add
pop
adc
sahf
lock
xor
inc
inc
icebp
xchg
or
out
or
movsb
dec
test
dec
xchg
daa
mov
pop
adc
dec
sbb
add
pop
adc
jae
movsb
cmp
adc
xor
lcall
adc
sub
xchg
sub
push
add
pop
adc
mov
bound
fwait
test
add
pop
adc
jge
call
fildl
pop
adc
sahf
addr16
xchg
aas
add
pop
adc
les
push
mov
xor
cmp
pop
adc
ds
test
adc
cmp
add
pop
adc
jbe
sahf
mov
xchg
adc
or
xor
es
ljmp
lcall
inc
repnz
pop
adc
test
push
pop
enter
push
mov
dec
popa
push
jp
out
imul
adc
pop
inc
insb
xchg
jp
fucomi
push
mov
or
mov
ret
sub
fs
scas
push
xchg
mov
in
pop
pop
adc
scas
inc
sarb
cmp
mov
int3
popf
pop
adc
xchg
and
pop
adc
pop
adc
sub
inc
pop
adc
cmp
sub
pop
adc
mov
dec
popf
lock
data16
inc
pop
into
scas
rcl
aad
mov
adc
xor
popf
pop
adc
int3
add
adc
inc
ror
sbb
fcompl
sbb
add
fnstenv
and
insl
adc
cmp
cwtl
jns
xchg
je
jmp
leave
jmp
in
sahf
ljmp
adcb
cltd
adc
lock
gs
cmp
sub
lahf
pop
hlt
aas
pop
insb
push
push
add
adc
adc
nop
popf
pop
adc
add
daa
mov
popf
pop
adc
inc
add
push
inc
cmp
inc
pop
adc
push
in
inc
pop
adc
pop
cld
adc
adc
cmp
cmp
sbb
pop
adc
sbb
dec
push
movb
or
data16
popf
pop
adc
xor
dec
cld
mov
cs
xor
inc
jno
xchg
mov
mov
jecxz
icebp
rcll
addr16
cwtl
sbb
xor
adc
pusha
dec
fs
push
adc
xchg
xor
adc
adc
sarb
sub
enter
incl
adc
sub
push
sbb
push
sub
and
rorl
push
adc
sub
aam
test
or
sub
xchg
clc
test
mov
inc
adc
adc
mov
jns
add
xor
aad
push
push
adc
push
mov
inc
pop
adc
adc
js
jge
test
mov
push
adc
inc
adc
adc
push
int
pop
push
test
push
in
jo
pop
adc
mov
pop
popa
sub
adc
adc
adc
pop
mov
lret
inc
stc
mov
xchg
jae
mov
add
push
adc
outsb
call
inc
lahf
cmp
mov
aas
xchg
insb
mov
repnz
jecxz
lret
adc
adc
sub
lcall
adc
adc
es
sub
lods
adc
adc
out
dec
add
out
fwait
cltd
push
mov
mov
lret
xchg
sub
mov
xchg
fnstenv
cmp
or
pop
pop
adc
adc
jecxz
lods
es
adc
out
cmp
and
cmp
lds
push
movsb
es
adc
inc
push
mov
mov
ds
es
adc
jmp
dec
adc
pop
in
cli
mov
pop
fucom
ss
pop
out
out
in
scas
fdivl
or
jns
jno
mov
call
mov
mov
movsl
dec
int
in
mov
push
stos
pop
mov
les
das
repnz
fdivs
sub
ja
lock
add
loopne
xor
jo
pop
adc
jmp
and
xchg
popa
mov
test
cmp
adc
test
mov
push
mov
and
cmp
test
adcb
adc
and
cltd
pop
adc
mov
push
adc
mov
mov
dec
je
adc
adc
lcall
aaa
mov
adc
adcb
adc
and
or
popa
and
dec
xchg
jns
mov
adc
adc
sub
jbe
lcall
shl
iret
pop
or
xchg
dec
dec
jg
outsl
inc
xchg
jmp
push
movsl
dec
out
push
cmpsl
loopne
xchg
xor
jp
insb
xor
adc
adc
andb
adc
cmpsl
arpl
cmc
in
xchg
repnz
jns
mov
lock
pop
addr16
sub
lret
pop
adc
pop
dec
mov
xchg
and
sbb
mov
lds
movsl
mov
inc
or
call
pop
pusha
jp
adc
adc
adc
push
and
mov
mov
jb
aam
insb
xor
cmpsb
mov
bound
iret
loopne
lods
sbb
js
int3
fdiv
xor
es
adc
stc
ret
int
jbe
mov
push
mov
fwait
stc
aad
push
mov
or
push
and
insb
cbtw
mov
inc
adc
lods
pop
mov
jno
fs
fwait
mov
pusha
or
or
movsb
inc
or
jecxz
nop
mov
scas
fnsave
mov
nop
pop
adc
and
lds
jb
xchg
dec
mov
rorl
pop
clc
sub
push
das
add
leave
jl
fsubs
push
adc
jp
frstor
jae
mov
ljmp
mov
push
adc
test
inc
imul
jo
cmp
add
and
inc
loop
jno
rcrl
xchg
jmp
xchg
adc
js
fcoms
aas
lahf
push
aad
xchg
push
aam
pop
adc
in
mov
xchg
ljmp
pusha
mov
test
push
pop
jne
sbb
and
cmp
ret
mov
pop
jnp
imul
jp
les
shufps
fnstcw
cmpb
fsubrl
ret
fisubl
xor
add
stc
rorb
sbb
cmc
imul
mov
push
sti
push
shrl
mov
dec
loopne
test
adc
adc
pop
xchg
pop
pop
adc
push
jmp
pop
pop
adc
pop
pop
adc
pop
pop
adc
out
loopne
pop
adc
pop
adc
hlt
movsb
addl
pop
adc
movsl
mov
pop
popf
pop
adc
cmpsb
lods
ljmp
mov
popf
pop
adc
adc
adc
pop
jnp
popf
and
adc
adc
mov
dec
mov
fninit
cmp
andb
xchg
push
adc
adc
lret
pop
adc
ret
dec
je
adc
adc
jo
pop
pop
in
xchg
adc
push
push
adc
or
ss
cltd
insl
bnd
hlt
pop
pop
adc
jns
cwtl
add
pop
adc
pop
adc
adc
repz
pop
pop
adc
pushf
ss
pushf
pop
adc
and
jp
stos
insb
adc
adc
inc
rcl
repz
pop
pop
adc
cld
xor
push
push
aaa
adc
cmpsb
outsl
fnstenv
out
cld
pop
pop
adc
pop
adc
dec
mov
adc
lahf
xchg
jl
dec
push
hlt
pop
pop
adc
cwtl
adc
sub
cltd
xor
fmuls
out
hlt
pop
pop
adc
pop
pop
adc
ret
pop
pop
adc
jmp
inc
pushf
pop
adc
dec
rorb
inc
push
insl
cmp
mov
sub
das
pop
leave
outsb
cmpsb
sbb
inc
pushf
pop
adc
dec
pop
inc
pushf
pop
adc
dec
stos
inc
pushf
pop
adc
xchg
push
mov
stos
sahf
jecxz
xchg
xor
movsb
mov
daa
movsl
pusha
adc
adc
addr16
and
js
mov
mov
adc
adc
pop
pusha
jp
adc
ss
adc
mov
inc
push
pop
push
adc
adcl
adc
adc
aam
add
out
repz
xchg
add
pop
adc
adc
push
adc
adc
mov
dec
jle
adc
adc
pop
xchg
jo
cwtl
adc
stos
sub
xchg
cmp
outsl
call
pop
popa
xlat
cmp
call
push
imull
ja
jbe
cmpsb
hlt
adc
adc
mov
jne
push
ljmp
jmp
jg
iret
inc
mov
xchg
xor
push
adc
cmpsb
cwtl
cmc
pop
loope
add
push
adc
mov
std
mov
push
adc
mov
mov
pop
adc
pop
faddp
adc
adc
mov
faddl
adc
adc
push
adc
es
dec
dec
xor
xchg
jb
ss
mov
rorl
popf
adc
adc
push
ret
xor
dec
cwtl
cs
cltd
jbe
push
xor
mov
xchg
pop
jbe
mov
inc
cmp
cmpb
mov
mov
sub
push
or
repz
push
push
call
popf
adc
or
mov
inc
mov
inc
fisubl
mov
repz
inc
ljmp
out
stos
pop
jecxz
lret
bound
add
dec
cmp
lret
mov
repz
fadd
dec
popf
push
push
push
lods
insl
push
and
inc
or
sub
sahf
bound
inc
shr
inc
les
push
push
xor
in
sub
int3
orb
dec
jmp
sbb
leave
sub
into
aaa
in
in
cmp
int
pop
adc
push
fadds
dec
mov
repnz
mov
cli
aad
ds
in
pop
pop
adc
popf
sbb
inc
insl
sub
pop
int
repnz
notl
add
cmp
and
jge
adc
adc
imul
cmp
sbb
insb
push
add
jmp
or
movsl
dec
out
pop
mov
ret
jns
xor
adc
jg
popf
inc
xchg
in
pop
pop
adc
jae
test
adcl
push
adc
pop
aaa
scas
mov
xor
mov
and
dec
daa
shll
sbb
cld
cmpsb
aaa
insl
scas
inc
in
pop
pop
adc
aaa
ljmp
pop
pop
adc
sbb
xorl
pop
pop
adc
lcall
pop
pop
adc
out
roll
xor
aad
pop
pop
adc
fisubrl
insl
in
pop
pop
adc
and
and
pop
pop
adc
sahf
cmpsb
subl
insb
es
adc
es
lock
and
loop
cmpb
popa
xchg
sbb
fisubrs
adc
mov
adc
pop
inc
pushf
xor
fmul
xchg
jae
inc
fisubl
lret
out
push
pop
leave
arpl
jmp
cld
dec
lds
jmp
ljmp
leave
out
mov
imull
xchg
arpl
out
sub
icebp
mov
rorb
sbb
push
dec
sbb
pop
xchg
idivl
rolb
cmp
lods
mov
ret
nop
jae
inc
subb
repnz
inc
or
cmp
icebp
lds
test
lret
pusha
cmpsb
dec
out
js
test
push
fsubl
cmp
icebp
les
addr16
and
shrb
test
xchg
xor
cmp
and
test
roll
les
mov
jb
push
je
loopne
cmpsl
mov
or
repz
xadd
adc
or
dec
push
rorb
fwait
pop
popa
dec
ret
dec
cltd
dec
jg
jecxz
ret
stos
inc
pop
out
sub
push
adc
push
shrb
mov
iret
call
sbb
rcl
or
and
mov
xor
iret
jnp
ret
pop
pop
mov
ja
sahf
outsb
sub
out
adc
mov
xchg
rclb
push
pop
jle
lret
inc
mov
adc
push
fs
shr
xor
push
outsb
into
adc
or
imul
dec
push
mov
into
fwait
loopne
cli
cmpsb
inc
pop
loop
mov
popa
mov
and
jbe
adc
sbb
mov
repnz
push
push
imul
fdivs
fdivrl
xchg
popf
cmp
jnp
mov
fldt
repnz
or
inc
xchg
prefetchw
cmp
mov
mov
adc
adc
xchg
in
xor
mov
fdivl
sbb
ret
push
xchg
or
cmp
mov
ficoms
into
mov
inc
cwtl
popf
adc
mov
sti
jle
out
or
push
rorw
mov
xor
and
ljmp
arpl
mov
adc
enter
xchg
mov
adc
adc
subb
into
test
dec
insb
xor
lods
add
and
and
pop
mov
test
push
clc
scas
in
dec
pop
test
cmp
push
mov
and
les
push
adc
stos
in
aam
dec
inc
push
sbb
shl
and
mov
adc
adc
cmp
leave
mov
mov
outsb
ljmp
outsl
frstor
pop
scas
cld
xchg
xor
je
push
adc
in
push
adc
into
icebp
cld
ret
jbe
xchg
jbe
push
inc
sarl
sbb
dec
fwait
mov
inc
lahf
loopne
inc
and
mov
sar
cltd
pop
jb
push
dec
dec
mov
xor
bound
mov
mov
enter
imul
pop
jb
mov
xor
loopne
xlat
gs
fidivs
pop
fidivrs
dec
rorb
leave
xchg
and
lret
in
pop
dec
cmp
adc
adc
cmp
and
orl
stos
xchg
iret
adc
jl
fnstcw
jge
clc
imul
jne
rorb
jg
js
fwait
lock
mov
sub
lcall
xchg
cld
fwait
mov
shrb
mov
xchg
and
es
call
mov
ss
cli
sub
mov
loopne
scas
xchg
sbb
sub
push
fisttpll
pop
mov
gs
inc
clc
and
out
adc
je
mov
jb
xchg
sub
clc
imul
dec
xchg
sbb
mov
xchg
out
int
idivb
cmp
dec
int3
cmp
fimull
xor
enter
mov
xchg
xor
cmp
fistpll
sub
repz
out
iret
sbb
sbb
fstp
jno
outsl
int
add
fistl
scas
arpl
mov
mov
adc
icebp
mov
lret
push
pop
cmp
add
loope
add
pop
pushf
mov
adc
rcrb
insb
jl
adc
mov
adc
mov
shll
ffreep
jno
dec
addr16
inc
pop
mov
push
cli
mov
pop
sub
js
jge
gs
cld
sbb
arpl
push
mov
mov
adc
lock
jl
adc
jae
gs
dec
pop
pop
dec
aad
seto
push
std
cmp
cli
mov
xchg
and
cwtl
mov
sbb
xchg
mov
mov
push
xchg
sarl
fistps
push
fnstenv
jge
clc
push
mov
sub
stos
push
mov
mov
mov
mov
and
rolb
scas
jle
xchg
cwtl
push
sub
les
adc
fisubs
push
popf
mov
adcb
ja
xor
lods
inc
pop
xor
xor
adc
repnz
es
mov
imul
xor
xor
adc
pop
inc
cmpsb
fwait
cmp
lret
outsb
pop
push
sub
frstor
jecxz
das
or
mov
dec
loope
iret
nop
aas
adc
mov
enter
aam
mov
sbb
das
into
push
mov
cld
cwtl
test
xor
insb
movsb
jne
out
notb
repnz
push
sbb
jns
cli
loop
push
add
mov
jmp
notb
gs
scas
insb
push
mov
in
js
mov
lock
xor
push
adc
cli
dec
and
ja
sbb
sbb
cmpsb
dec
adc
out
lock
jbe
subb
js
push
adc
jb
loop
and
popf
lret
xchg
ljmp
adc
push
add
pop
mov
lahf
jns
in
das
jecxz
cmp
and
push
into
push
rcrb
arpl
push
sub
push
xchg
mov
inc
orb
fbstp
outsb
addr16
mov
or
mov
dec
jle
popf
mov
std
scas
cwtl
or
jecxz
dec
mov
je
dec
cmpsb
jb
mov
push
cmpsb
or
in
out
inc
lea
in
leave
push
lret
arpl
insl
icebp
cwtl
cmp
loopne
and
lea
rol
push
push
jae
xor
mov
pop
pop
xor
adc
pop
out
aas
sub
cmp
mov
inc
shll
mov
inc
ljmp
and
mov
nop
mov
nop
scas
xchg
in
cltd
mov
and
into
fwait
xor
mov
pop
leave
inc
fnstcw
sbb
daa
sbb
push
cmp
mov
lods
or
test
sahf
cmp
dec
adc
ss
faddp
push
repnz
les
jge
push
aam
mov
mov
and
xor
jmp
jns
mov
dec
sbb
scas
in
mov
ds
sub
lock
clc
inc
push
clc
dec
dec
lret
cld
fbstp
sbb
shr
xchg
js
fidivs
sub
cmpsb
stos
cwtl
cwtl
pusha
xchg
inc
dec
xor
mov
fidivl
faddp
push
repz
fcoms
jge
push
aam
mov
stc
cmp
ret
fbstp
leave
sbb
shl
aad
mov
leave
mov
fs
xchg
and
pop
push
mov
insb
and
sbbl
and
pop
movsb
dec
out
cmp
lock
jmp
inc
jmp
scas
dec
shr
xchg
js
mov
gs
test
test
push
outsb
fsubr
ljmp
or
jnp
loope
push
xor
xchg
mov
cmp
aad
popa
ret
xchg
fstpt
fs
sbb
rcl
fstpt
mov
in
cmp
dec
xchg
and
push
xchg
xchg
and
aas
pop
jmp
xchg
pop
bound
sti
ror
dec
mov
addl
dec
movsb
out
mov
sti
or
cmpsb
cmp
pop
jae
mov
dec
ret
or
scas
push
cwtl
jne
mov
popf
addr16
sti
xlat
hlt
jp
mov
push
inc
in
mov
mov
movsl
push
jbe
cmpsl
mov
ffreep
outsb
push
inc
insb
push
shrl
mov
pop
roll
pop
cwtl
mov
and
roll
sub
mov
push
sti
adc
nop
roll
jl
mov
test
cld
call
sbb
gs
mov
lock
das
jle
test
xor
xchg
dec
and
push
scas
loopne
cmpsb
or
lret
jmp
testb
test
or
pop
mov
inc
aam
test
mov
jg
xchg
and
inc
mov
repnz
popa
inc
pusha
pop
mov
int
mov
or
data16
leave
add
aam
es
popf
push
in
dec
cmpps
mov
test
pop
pop
or
pop
jae
lods
xchg
cmc
mov
into
int3
mov
xchg
fildl
repz
push
gs
andl
ficompl
into
cmp
jmp
imul
movsl
dec
sub
out
cmp
stos
cmpsw
adc
adc
fldl
mov
jne
push
xchg
cmp
cmp
jne
out
popf
out
pop
fwait
mov
int
dec
outsb
fnsave
bound
xchg
aaa
gs
push
jge
cmpsb
sub
insb
inc
shlb
adc
ret
sub
mov
xchg
imul
mov
mov
in
test
jbe
fidivrs
pop
fidivl
addr16
ss
adc
sar
nop
pop
jge
mov
or
push
repnz
or
movsl
adc
mov
int
cmpsb
jo
mov
cltd
movsb
xchg
cmp
or
ss
into
fsub
mov
inc
enter
in
add
pop
lds
loope
lods
dec
in
xchg
pop
imul
sbb
aad
jno
cmpsb
leave
fisubrs
push
jo
fbstp
cwtl
dec
into
adc
xor
je
sbb
aad
jge
stos
shll
cmpsb
sbb
cmp
cmp
xchg
out
sarl
fidivrl
sub
cmp
cmp
nop
mov
scas
sub
mul
int
test
mov
inc
xchg
imul
call
rol
xchg
sahf
cmpsb
cs
shl
lods
sbb
mov
mov
fstpt
cmp
xor
sub
push
jle
sbb
inc
sub
sti
cltd
push
repz
or
sti
cmpsl
and
fnstenv
js
leave
pop
ret
cmp
test
cmp
dec
ret
add
loop
pop
sarl
xchg
sbb
push
jl
mov
mov
loopne
movsl
lret
popa
mov
sub
repz
js
fs
push
sbb
push
aaa
scas
fdivs
negb
data16
or
loopne
mov
cmp
cmpsb
rcll
out
repnz
xchg
xor
cmpsb
xchg
test
push
lret
outsb
pop
loope
fwait
inc
xlat
sub
mov
adc
in
popf
or
adc
ret
arpl
pop
test
leave
xchg
jb
jl
gs
or
insl
lea
push
lds
mov
push
fcomps
dec
xorl
pop
push
push
or
js
pop
stos
idivl
mov
mov
cmpsl
cwtl
jns
rclb
imul
leave
inc
xchg
and
sub
repz
push
push
sbb
fwait
in
xor
fildll
shlb
mov
lock
and
jp
pop
sbb
out
icebp
cmp
pop
mov
mov
push
lea
dec
arpl
aas
push
fs
sbb
or
repz
mov
stos
xor
iret
addr16
nop
fcmove
mov
sti
and
or
ja
inc
imul
mov
gs
andl
jl
addl
cwtl
inc
jo
scas
mov
sbb
sub
test
fld1
pop
adc
daa
pop
or
daa
pop
inc
popf
sti
mov
fisttpll
cmp
adc
xchg
lahf
jle
sub
das
leave
adc
or
sti
shrl
adc
add
push
adc
xor
fildl
bound
or
sub
data16
push
xchg
ja
xchg
cmpsb
add
popa
sbbb
sub
pop
adc
dec
mov
or
lret
lds
int3
outsb
cmp
pop
adc
adc
and
add
add
lea
or
mov
adc
mov
arpl
adc
sarl
pop
mov
sbb
push
mov
loope
in
les
sbb
dec
movsb
cmp
and
push
sub
xor
mov
es
push
add
push
adc
fs
pop
adc
sbb
popa
jae
xchg
and
pop
pop
adc
xchg
pushf
or
outsb
cld
adc
adc
sub
xchg
ja
xchg
out
inc
cmpsl
inc
clc
scas
icebp
nop
push
dec
push
inc
and
aas
pushf
ss
adcl
lds
fsubr
in
arpl
negl
push
adc
movl
xchg
sub
push
jbe
jl
addr16
push
inc
pop
jbe
or
faddp
xlat
dec
mov
dec
mov
loope
add
jge
pop
push
jae
stos
cs
imul
adc
loope
ljmp
es
or
fnstenv
ret
mov
cmp
outsl
fsubrl
adc
out
and
push
mov
or
imul
pop
mov
fsub
push
popa
ret
xchg
push
adc
mov
dec
xor
sub
aas
xor
in
push
adc
rcll
add
cwtl
inc
pop
adc
test
adc
test
cltd
jp
adcb
mov
ds
mov
pop
jb
mov
dec
int
insl
insl
xor
adc
adc
mov
xchg
cmp
dec
xor
pop
je
inc
inc
js
hlt
and
jae
rcrl
xchg
imul
mov
push
mov
or
inc
xlat
icebp
sbb
inc
dec
pop
pop
adc
adc
movsb
mov
xor
rolb
adc
dec
inc
pop
pop
adc
mov
imul
dec
xchg
pop
je
inc
mov
iret
loopne
mov
mul
int
push
mov
insl
sub
in
sbb
xchg
sbbl
leave
shlb
cmpsl
fwait
mov
lahf
xchg
and
push
fnstcw
xor
fwait
inc
das
push
and
jns
insl
xorb
jns
pop
jmp
pusha
xor
add
iret
dec
mov
sbb
sbb
fwait
test
pop
adc
mov
and
pop
adc
adc
pop
pop
adc
adc
notb
bound
pop
mov
fsub
sahf
les
push
adc
lods
aam
pop
xor
push
adc
or
ja
inc
pop
adc
int3
push
add
pop
adc
inc
add
adc
repnz
pop
jns
sub
adc
mov
adc
xor
test
adc
adc
repnz
in
push
aad
sahf
xor
xchg
and
icebp
xor
push
adc
xchg
std
fisttpll
sub
inc
sub
push
gs
adc
adc
xor
clc
xchg
cmp
lahf
sbb
push
scas
pop
std
dec
shl
cmpsl
sub
push
adc
pop
incl
adc
xlat
fisubrs
int
adc
cltd
cmp
mov
push
push
mov
ret
iret
mov
not
xor
mov
adc
pop
adc
pusha
adc
adc
gs
popf
cltd
in
pop
adcb
rorb
out
test
xor
and
xor
fwait
cmp
jnp
hlt
sbb
push
or
ds
push
adc
data16
push
inc
je
and
dec
rcrb
mov
cmp
fisttpl
jnp
pop
pop
or
out
aam
push
adc
and
es
pop
fimuls
pop
inc
loop
enter
or
sbb
test
imul
push
test
cmp
je
mov
sub
inc
pusha
out
mov
xchg
mov
push
xor
or
repnz
andl
and
popa
cmc
pop
lret
jae
in
call
xchg
push
shlb
mov
dec
test
mov
in
push
jp
test
mov
test
push
lods
stc
jle
test
add
jl
xor
sbbl
mov
mov
push
or
bound
sub
xlat
jno
jmp
add
das
fisubrl
jbe
nop
mov
cld
adc
sbb
int3
push
in
mov
es
sub
mov
into
inc
hlt
adc
fwait
call
sbb
sbb
es
sub
loopne
push
add
insb
imul
mov
mov
sahf
mov
pop
lods
pop
mov
test
mov
or
pop
fs
ret
cwtl
adc
adc
fucomp
xor
nop
test
mov
aam
push
adc
in
mull
lret
jl
jg
aad
xchg
push
pop
xor
loope
inc
mov
outsl
fucomi
xchg
xor
fistl
int
es
shrl
push
inc
lods
jbe
mov
mov
and
or
xor
dec
xchg
cs
pop
loopne
nop
roll
push
xor
std
xchg
xor
into
inc
sbb
rep
dec
push
xor
out
scas
arpl
add
push
sbb
dec
ss
pop
adc
loop
pop
rolb
shll
dec
cmp
sub
sbb
jg
jb
xchg
icebp
adc
sbbl
dec
loopne
out
test
lahf
cmp
inc
insl
ficompl
mov
mov
fs
add
insl
xor
inc
es
in
inc
push
or
xor
push
inc
and
mov
ret
pop
loopne
jno
aaa
mov
shll
or
mov
inc
xchg
push
push
lret
xchg
sub
xor
push
jo
cmp
lret
insl
and
shlb
repz
lret
xchg
sub
mov
push
adc
nop
adcl
inc
int3
aaa
sbb
gs
dec
xchg
pop
leave
je
ret
rorl
xor
mov
mov
jns
xchg
mov
xlat
xor
scas
sub
out
getsec
shlb
mov
adc
aam
cmpsl
cmp
shl
loop
and
test
pop
cmp
jne
mov
scas
movsl
inc
push
decb
inc
stos
pop
mov
inc
lcall
lea
test
inc
sbbl
jmp
jb
nop
xor
xor
push
adc
mov
pop
add
stos
sub
push
adc
or
cmp
and
push
adc
les
jmp
mov
pop
stc
fs
push
adc
mov
in
sub
lahf
testb
push
dec
inc
int3
or
inc
sub
adc
pop
sbb
push
adc
outsl
sarl
adc
push
adc
fcoms
jecxz
orb
aaa
int
in
sbb
dec
loope
add
push
into
frstor
sarl
outsl
ret
in
inc
push
rol
mov
mov
jle
or
push
adc
dec
xchg
insb
cmp
leave
sbb
incb
leave
lods
insl
out
jne
sbb
adc
andl
in
leave
jo
arpl
xchg
mov
jecxz
flds
gs
dec
add
mov
cmpsb
call
iret
insl
sub
aam
dec
cmp
lock
jmp
mov
inc
and
push
int3
sub
sbb
rcll
fwait
scas
enter
call
inc
push
and
lahf
rep
push
repnz
push
pop
push
adc
mov
push
cmp
push
sti
out
mov
scas
push
xor
jp
adc
loop
scas
insl
jae
fcmovne
xchg
add
mov
mov
cli
push
mov
mov
movsl
es
aad
sahf
push
out
mov
mov
cld
xor
push
mov
mov
lea
daa
push
adc
or
adc
dec
xor
leave
and
sbb
adc
gs
mov
jle
adc
and
jns
js
jae
xor
sbb
bound
xor
cmp
push
adc
sti
mov
dec
sahf
mov
adcl
shll
xor
mov
and
pop
mov
dec
sahf
inc
push
xchg
ja
inc
pop
lods
sbb
scas
inc
or
xchg
sub
lahf
stos
cmp
mov
movsb
repnz
push
enter
jg
jl
xchg
ds
jp
xchg
push
sti
cwtl
mov
or
mov
jecxz
das
add
mov
pop
jg
add
mov
pop
pop
js
out
dec
jecxz
jae
fwait
cld
adc
add
push
adc
inc
xchg
sbbb
jmp
push
lds
pop
adc
push
and
xchg
das
aad
sub
mov
lods
pop
in
out
add
shlb
sarl
dec
jmp
aad
sub
cs
imul
fmul
pop
fnstcw
xor
icebp
cmpsb
mov
mov
int
xor
enter
stos
popf
dec
pusha
sub
in
int
test
rcrb
add
aad
into
adc
push
adc
imul
in
xchg
jbe
or
jns
mov
fcompl
bound
lds
dec
in
ficompl
dec
leave
mov
notb
dec
ds
out
dec
xchg
xor
xchg
mov
int
cmpsb
shlb
jne
sub
adc
ret
test
insl
out
xchg
dec
sahf
sti
fninit
push
mov
ss
ficompl
sarb
fmull
out
movsl
pop
lcall
sub
mov
shll
dec
inc
enter
insl
adc
cld
adc
adc
scas
inc
xchg
sub
mov
movsb
jmp
adc
xor
and
pop
adc
xlat
insb
adc
lret
add
push
adc
sahf
pop
adc
and
icebp
aad
addr16
aad
ja
jmp
adc
fs
pop
adc
jg
pop
in
in
xor
out
int3
test
pop
sbb
pop
insb
emms
add
pop
adc
std
into
es
push
in
push
inc
jecxz
pop
lcall
pushf
pop
xor
iret
lret
pop
repnz
mov
stos
lds
test
outsb
stc
icebp
mov
fs
pop
adc
dec
test
inc
sbbb
loop
push
sarb
pop
adc
pusha
stos
mov
jge
sub
jb
das
xor
popf
popf
xchg
jno
adc
adc
add
js
mov
sbb
fldl
dec
test
popf
jge
mov
in
push
icebp
inc
cmpsl
push
arpl
mov
dec
jmp
xor
cmp
jbe
std
scas
push
arpl
xchg
out
repz
xchg
xlat
fs
lret
loop
sbb
mov
inc
pop
fsubrs
pushf
cmp
adc
hlt
aam
sub
and
and
fistl
push
ss
cmp
fs
pop
adc
sbb
dec
pop
loopne
daa
cmpsl
fsubs
jg
addb
mov
fidivrl
mov
inc
xor
decb
cmpl
cltd
hlt
pop
mov
dec
mov
imul
inc
test
sahf
pop
adc
jl
sub
sahf
pop
adc
fscale
in
stc
shlb
adc
sbb
inc
das
inc
int3
es
adc
cld
adc
adc
out
sub
movb
jecxz
pop
rol
jnp
icebp
scas
jmp
pushf
sti
jae
mov
or
dec
pop
adc
cmp
lea
mov
dec
fidivl
mov
push
adc
push
push
cmp
pop
adc
or
fimull
std
shlb
adc
enter
inc
insb
push
adc
adc
dec
enter
xor
push
pop
and
push
sbb
enter
into
gs
xchg
scas
inc
sbb
pop
aaa
test
xor
scas
mov
loope
lds
imul
and
cmp
movsl
mov
jmp
push
jmp
push
in
stc
dec
fistl
aaa
sub
sub
pop
pop
adc
iret
lcall
enter
push
std
leave
add
enter
int3
nop
and
inc
xchg
mov
adc
in
and
cmp
pop
adc
enter
rcll
adc
adc
adc
mov
xor
push
adc
mov
jne
ljmp
pop
lods
jns
repz
adc
adc
pusha
inc
sbb
dec
jns
adc
adc
lahf
insl
xor
adc
adc
xor
mov
lods
pop
mov
xchg
pop
pop
sbb
mov
push
sbb
cmpsb
int
test
jecxz
mov
sub
push
adc
das
dec
xchg
and
xchg
int
adc
adc
popa
aaa
inc
pop
push
mov
rorb
adc
adc
push
fmuls
xchg
pusha
enter
in
lods
leavew
adc
jg
das
pop
sbb
leave
arpl
test
aas
sub
cmpl
fwait
lcall
aas
mov
adcb
pushf
adc
adc
cmp
adc
nop
mov
rorl
push
js
in
sarb
nop
xor
inc
jl
outsl
fucomip
push
xchg
xchg
mov
rcl
cmp
push
sbb
cmc
in
es
adc
jg
mov
push
xor
cmp
jbe
es
adc
jae
pop
mov
test
lahf
es
aam
outsb
lcall
into
jp
cld
adcl
xchg
call
ss
adc
lcall
adc
stc
jge
and
cld
mov
ret
imul
fstpl
ja
in
add
add
je
data16
lods
and
scas
sbb
icebp
out
cs
divb
adc
push
adc
adc
xor
leave
adc
adc
pop
cmp
insb
bound
lret
cmp
and
mov
sub
mov
lods
aam
nop
aas
into
lret
scas
popf
mov
sarl
imul
push
daa
ja
dec
add
pushl
push
pop
push
adc
mov
sbb
rorb
insb
add
shrb
inc
fs
pop
adc
pop
test
addr16
dec
loope
aam
pop
adc
jp
je
xor
or
es
xchg
dec
inc
and
dec
cmc
mov
cwtl
add
adc
xor
mov
push
jns
pop
mov
pop
adc
xchg
xchg
mov
and
inc
pop
adc
pop
cmp
sbb
push
adc
xchg
je
sbb
stos
shrb
jecxz
mov
outsb
adc
cmp
dec
cmpsb
xchg
mov
ljmp
lods
or
cwtl
pop
ficoms
cmp
mov
cmp
stos
testb
pcmpgtb
mov
fnsave
les
not
mov
in
jmp
inc
lock
mov
aas
jo
pop
adc
loop
xor
mov
fiadds
push
push
hlt
adc
adc
mov
fwait
jge
lea
fwait
push
inc
fs
mov
mov
fimull
mov
push
adc
lcall
inc
insb
int3
adc
adc
test
add
scas
mov
push
adc
or
je
push
and
int
fldl
roll
push
fnsave
setb
gs
arpl
mov
cltd
and
xchg
andl
add
pop
adc
xchg
dec
jbe
repnz
call
fnstenv
cmp
data16
popa
call
sub
outsb
iret
lcall
xchg
loopne
stos
popf
dec
pusha
ret
xchg
add
dec
xor
lretw
pop
pop
adc
pop
shll
repz
repnz
xchg
xchg
dec
mov
pop
in
nop
sub
out
outsl
push
outsb
fdivs
movsl
iret
aad
dec
pop
jnp
popf
and
pop
adc
or
push
adc
pusha
dec
sbb
loopne
pop
push
dec
fidivrl
push
and
inc
insb
add
push
adc
dec
cmp
mov
add
js
mov
mov
les
inc
daa
push
adc
pop
cmp
dec
out
sbb
sahf
notb
pushf
pop
adc
adc
push
loope
out
pop
mov
cs
movsb
out
mov
aam
add
nop
aad
or
adc
adc
ljmp
out
push
push
movsb
dec
mov
call
push
sbb
mov
xor
dec
adc
push
inc
insb
test
push
adc
rorb
pop
adc
out
xor
lds
sub
push
cltd
adc
adc
adc
insb
fstpt
mov
xor
data16
in
sbb
nop
outsb
ja
aas
jp
adc
adc
xchg
pop
adc
sub
loopne
pop
pop
adc
test
mov
leave
inc
adc
adc
lock
pop
adc
callw
adc
sub
push
dec
push
pop
stos
jle
call
insl
int3
mov
in
cli
xchg
cmp
xchg
imul
pop
mov
fwait
mov
xchg
out
roll
pop
inc
dec
mov
iret
dec
add
or
lods
rorb
les
addl
xor
call
enter
add
adc
adc
adc
aam
pop
adc
jno
movsl
sbb
push
adc
mov
aaa
sbb
push
adc
push
adc
adc
inc
pop
js
notb
push
adc
fs
pop
adc
loope
fwait
inc
inc
cmp
movsb
pop
cmp
or
add
mov
add
pop
adc
testl
aaa
dec
xchg
test
push
popa
in
cmp
xlat
scas
outsb
or
testb
xorl
aad
lret
xor
sbb
add
mov
dec
mov
mov
cmp
jo
pop
adc
xor
ret
loope
add
or
lods
mov
adc
jae
ffreep
dec
mov
mov
cmpsl
push
orb
sub
inc
pop
pop
adc
lret
cmpsl
pop
lahf
stos
jae
fsubrl
nop
sub
pop
adc
push
pop
pop
adc
jno
push
cmp
or
idivb
ret
shll
into
jg
add
rorl
out
stc
rcl
inc
jbe
rorl
adc
or
adc
adc
pushf
or
pop
adc
add
and
es
inc
pop
adc
sarl
ljmp
mov
jb
iret
enter
inc
pop
adc
popf
clc
inc
pop
adc
xor
clc
inc
pop
adc
push
adc
jns
pop
lods
leave
xchg
and
push
adc
outsl
sub
jbe
repnz
clc
adc
adc
dec
jl
push
adc
xchg
hlt
adc
adc
fstps
insb
mov
mov
lock
adc
push
pusha
jp
adc
movsl
inc
xchg
and
cmpsl
xor
daa
xor
xor
dec
mov
rorb
push
call
add
adc
adc
loopne
ficoms
in
or
pop
sub
in
push
mov
enter
push
sub
dec
mov
mov
cltd
xor
pop
pop
adc
pop
adc
test
in
rcrb
adc
sbb
and
adc
adc
stos
dec
inc
xchg
pop
or
sub
push
dec
pop
rcrb
adc
dec
add
out
fwait
inc
pop
cmp
popa
or
dec
sub
cmp
dec
xchg
daa
loopne
not
pop
pop
adc
jbe
xor
xchg
add
outsb
push
adc
adc
xchg
adc
pop
mov
ficompl
push
adc
mov
loopne
stos
xchg
daa
dec
xor
adc
add
and
sbb
gs
dec
addr16
adc
mov
mov
xor
fs
pop
cmp
fcmovu
pop
pop
adc
in
stos
xchg
daa
dec
sahf
adc
js
pop
adc
sbb
push
adc
pop
pop
adc
dec
dec
xchg
and
aas
mov
xchg
adc
adc
in
push
sbb
push
pop
pop
adc
mov
sub
out
mov
add
add
xchg
aam
into
pop
add
pop
pop
adc
mov
fldenv
fstpl
xor
aas
jp
jb
addr16
mov
inc
int3
pop
pop
adc
adc
adc
fidivs
movsb
xor
enter
mov
xchg
cmp
push
adc
outsl
lahf
ficoml
js
xchg
bound
xor
push
adc
mov
pop
dec
sar
cmpsl
sub
push
adc
pop
incl
adc
ja
stos
ss
shrl
sti
mov
ja
pop
adc
adc
ret
das
call
push
adc
mov
jmp
aaa
lods
pop
xor
stos
aas
jecxz
adc
mov
loop
dec
les
push
adc
jp
cmp
xchg
sub
sub
jnp
mov
rcrb
add
aaa
int3
mov
pop
scas
mov
jecxz
add
pop
pop
adc
insl
jno
mov
out
outsb
push
movsb
movsb
orl
jg
pop
pop
adc
sbb
adc
out
jo
fldenv
dec
insb
out
stos
enter
test
sahf
rcrb
adc
xchg
or
loopne
or
pop
adc
repnz
push
cmp
mov
add
dec
divb
inc
pop
adc
xor
dec
add
push
adc
mov
pop
iret
jnp
ret
pop
pop
adc
xor
lahf
sbb
push
inc
jns
push
xchg
dec
mov
adc
andb
adc
push
or
pop
and
jecxz
dec
test
xchg
mov
aaa
shll
imul
ljmp
inc
test
ja
jg
roll
sub
pop
adc
mov
cli
das
mov
sub
push
adc
push
mov
xor
push
mov
xchg
repz
sbb
xor
ret
test
push
adc
data16
pop
mov
test
lret
sub
mov
ss
fwait
dec
out
int
sbb
mov
jp
mov
mov
push
sti
mov
outsb
xchg
int3
fwait
mov
mov
sbb
jb
inc
sub
cmp
fwait
int3
roll
pop
adc
and
adc
adc
pop
sbb
xor
xor
push
push
adc
pextrw
xor
push
adc
nop
jmp
jns
pop
xor
push
adc
adc
adc
icebp
addr16
outsb
xor
insb
adc
xor
dec
pop
adc
outsl
push
inc
lret
xchg
sub
dec
xchg
scas
mov
cmp
pop
icebp
or
lret
xchg
dec
imul
fcmovne
xchg
popf
jb
repz
fdivs
popa
mov
fsubs
out
push
lret
lret
lods
jecxz
mov
inc
pop
dec
xchg
sub
dec
sub
call
add
adc
into
inc
xchg
inc
push
lret
xchg
sub
cs
and
in
adc
cmp
lret
pushf
sahf
lcall
xlat
sub
or
fildll
push
movsb
aas
call
cmp
pop
js
out
loope
insb
fidivl
jle
xor
cmp
and
cmp
adc
adc
mov
in
sub
push
andl
mov
cmpb
std
test
fstpl
pop
daa
dec
push
inc
add
cld
adc
xor
subl
faddl
xor
dec
fimull
push
aas
gs
hlt
jbe
xor
rol
push
pop
outsb
mov
cmp
xchg
xchg
inc
es
mov
shll
fldcw
adc
cmp
add
aas
pop
jo
xor
mov
rorl
push
adc
dec
loop
loop
push
cwtl
cmp
dec
pop
addr16
sbb
jmp
loope
adc
adc
pop
jbe
inc
popf
out
jp
inc
jl
xchg
jmp
aad
cwtl
push
pop
dec
ret
and
cmp
adc
adc
scas
jle
xor
sub
ret
loopne
dec
pop
adc
sub
arpl
std
mov
test
mov
cld
iret
fdivs
pop
sub
dec
dec
leave
jnp
fwait
hlt
xor
fs
jmp
mov
push
iret
xlat
and
cmpsl
sbb
aam
xchg
and
pushf
jle
call
mov
dec
xchg
push
fs
pop
sbb
data16
adc
xor
sub
mov
sarb
adc
adc
inc
mov
or
xlat
mov
out
mov
dec
pushf
sub
adc
rcr
xor
es
imul
test
ds
adc
lahf
adc
cmc
cmp
test
sbb
xchg
cmp
fwait
lret
movsl
lock
sbb
mov
in
sub
sbb
and
push
pop
mov
pop
aaa
mov
xchg
mov
aad
push
inc
jmp
int3
xchg
or
inc
divl
inc
add
dec
insb
adc
test
addr16
insl
popa
rcrb
pushf
sub
adc
mov
pop
and
push
adc
mov
sbb
rolb
dec
cltd
cld
add
decl
int3
or
vmovsldup
adc
mov
or
inc
sub
push
adc
push
incl
push
iret
mov
xor
imull
mov
mov
mov
mov
jmp
es
mov
ss
mov
push
add
xchg
lret
pop
call
in
inc
dec
lcall
call
movsl
aaa
sub
sbb
jmp
shrb
xchg
push
jno
add
adc
and
push
adc
insb
mov
push
adc
sub
out
adc
adc
add
cmp
sbb
fcoml
je
repz
insb
sub
adc
mov
repz
inc
xchg
pop
addr16
xor
cmp
int
gs
ret
fcoms
push
adc
out
daa
dec
call
daa
gs
xchg
jbe
push
adc
sbb
jnp
lods
pop
mov
fsub
in
xchg
pop
dec
mov
ret
mov
adc
jo
xchg
cmp
xor
xchg
dec
call
cwtl
xchg
pop
in
xchg
xor
lcall
sub
test
sub
mov
mov
push
pop
mov
lret
js
pop
lea
and
xchg
push
scas
sbbl
ror
push
aas
pop
fsubrl
notl
lds
clc
out
xor
fidivrl
insb
lds
int3
popa
mov
scas
mov
clc
inc
jnp
fldcw
mov
push
cmpsb
sbb
sub
loop
sub
push
test
adc
adc
and
scas
push
sbb
xor
mov
out
mov
repz
fwait
cmpsb
xchg
or
mov
mov
shrb
xor
out
adc
adc
adc
adc
mov
xchg
insb
aas
and
fwait
push
pop
mov
ljmp
insl
pop
pop
insb
ret
xchg
adc
shll
movsb
popf
aaa
push
nop
daa
dec
aas
and
pusha
jp
adc
and
adc
adc
movsl
sub
jne
xor
cmp
mov
pop
push
and
std
hlt
add
or
xchg
and
xor
push
adc
push
sbb
mov
mov
lcall
sbb
add
add
subb
jb
test
sbb
mov
popf
dec
xor
cmc
push
sbb
adcb
lods
repz
adc
adc
push
push
adcb
adc
dec
lock
pop
adc
aad
xor
fadd
adc
adc
sub
cli
xor
push
adc
andb
pop
stos
mov
push
mov
jecxz
movsl
call
inc
adc
mov
scas
adc
out
push
adc
inc
out
clc
incl
lds
cli
ljmp
xchg
push
popa
cmp
fsubrs
int
pop
inc
jg
pusha
movsb
cmp
and
enter
les
add
mov
push
or
jle
push
test
movsb
arpl
and
ss
pushf
sub
cmpl
cmp
test
arpl
ljmp
ljmp
adc
rorb
flds
sahf
shl
in
xchg
mov
lods
es
adc
sahf
mov
leave
icebp
sub
movsb
repnz
cld
addr16
sbb
pushf
sbb
sub
pop
jne
dec
int
mov
fadd
xchg
in
cltd
out
idivl
pop
cld
out
shll
js
in
jmp
lods
es
adc
sbb
insl
adc
scas
add
cltd
cltd
jmp
and
jnp
sbb
mov
sbb
cmc
ror
data16
pop
int3
rolb
lret
mov
mov
inc
fs
lret
jo
loop
inc
or
push
adc
negb
adc
js
inc
pop
pop
ss
out
sbbl
insb
push
sti
mov
jns
xchg
jg
lods
sbb
dec
xchg
das
pop
aaa
xor
mov
fs
cmp
test
lock
adc
mov
and
inc
dec
pop
pop
adc
adc
dec
je
adc
adc
push
int3
fwait
pop
adc
int3
fwait
pop
adc
pusha
adc
adc
pop
ret
jmp
xor
inc
dec
lcall
aam
repz
int3
lret
call
ret
mov
cmp
inc
cltd
insl
xor
adc
adc
movsl
sbb
or
push
adc
fwait
ret
repnz
es
sahf
lcall
xchg
dec
dec
xchg
das
sahf
ljmp
xchg
sub
ficoml
pusha
pop
pop
adc
jae
inc
repnz
aaa
inc
sbb
fs
pop
adc
ret
in
adc
adc
mov
sbb
iret
xchg
push
mov
sbb
inc
add
data16
mov
adc
inc
lret
lock
movsb
and
stos
dec
xchg
in
pop
mov
lret
arpl
sti
or
insl
mov
popa
ret
push
fs
pop
pop
adc
push
mov
cmp
adc
adc
gs
push
imul
sub
repz
repnz
imul
adc
in
push
adc
mov
fildl
pusha
fs
pop
adc
adc
pop
pusha
pop
pop
adc
sub
out
out
fs
pop
adc
cmp
push
xchg
adc
adc
stc
andl
loopne
into
jo
push
adc
dec
pushf
pop
adc
movsb
dec
scas
push
mov
xor
arpl
dec
pop
adc
fs
xchg
adc
jg
jp
adc
jbe
jo
ss
push
adc
daa
dec
popf
inc
inc
jp
mov
dec
xchg
ljmp
scas
repnz
and
mov
sbb
rolb
enter
sbb
inc
adc
adc
popf
pop
adc
inc
ret
out
cmp
add
xchg
into
mov
cmpsb
jo
push
adc
sbb
cmp
cmp
push
jle
fsub
xor
fistpl
mov
pop
push
adc
mov
inc
dec
adc
adc
aam
add
popf
push
dec
mov
pushf
xlat
fistpl
mov
xchg
pop
adc
adc
mov
or
pop
es
adc
adc
push
mov
adc
adc
sarl
push
sahf
xor
dec
js
adc
adc
pop
pop
adc
jbe
js
pop
cmpsl
pop
mov
data16
adc
loop
or
insb
push
les
pop
loopne
mov
pop
xchg
loopne
pop
in
fwait
ja
xchg
insb
sub
adc
sbb
push
imul
in
sub
lock
adc
adc
mov
mov
push
add
ret
cmp
adc
repz
and
jle
lahf
xchg
jns
xor
les
mov
ret
fldl
dec
inc
lds
jne
xor
push
xchg
lret
xchg
ljmp
push
push
gs
push
pushf
pop
adc
pop
adc
inc
dec
and
adc
pop
adc
mov
les
adc
adc
adc
hlt
jge
sahf
inc
stc
cmp
pushf
pop
adc
insb
ja
cld
push
lock
adc
aam
cmc
movsb
add
pop
adc
loop
rorb
lock
in
push
mov
rorb
and
mov
mov
push
pop
mov
call
arpl
add
inc
dec
inc
inc
es
xchg
das
pop
mov
cmc
mov
out
imul
pushl
fdivs
mov
fs
adc
cmc
ss
repz
xor
push
adc
jns
popf
pop
adc
fiaddl
cltd
insl
repnz
rorl
and
sub
xchg
ret
sbb
push
adc
cmp
movsl
enter
dec
int
inc
push
add
xchg
das
pop
aam
sub
adc
frstor
jno
pop
xor
mov
pusha
adc
adc
adc
dec
adc
adc
adc
shlb
dec
cmp
leave
lds
or
arpl
xchg
mov
ljmp
xchg
push
sub
fcomps
lods
fwait
jne
sbb
sarl
cmp
sub
cli
aaa
ljmp
push
cmp
mov
xor
xor
cli
xor
push
adc
int
lret
adc
adc
scas
dec
pop
xlat
pop
bound
lock
sub
adc
ds
rorb
adc
adc
cmp
cmp
jbe
mov
xor
lock
bound
xor
push
adc
sbb
repnz
and
adc
sbb
xchg
mov
mov
fs
sub
adc
inc
push
adc
xchg
cld
test
and
xchg
xchg
and
pop
pop
in
xchg
jo
pop
adc
rclb
push
int3
mov
mov
sahf
adc
mov
cmp
outsb
add
sub
movsl
mov
sahf
add
push
dec
or
push
adc
mov
or
xchg
sbb
mov
ficompl
adc
adc
or
ss
mov
aad
pop
loope
lahf
adc
mov
push
test
insb
xor
push
adc
inc
int3
xchg
pop
dec
jnp
adc
adc
xchg
sti
jbe
sahf
test
lret
push
imul
adc
adc
jmp
pop
out
mov
in
ss
lcall
nop
inc
add
push
adc
adc
adc
lods
sbbb
outsb
inc
mov
scas
hlt
sub
adc
gs
loopne
push
adc
mov
mov
push
adc
negl
es
add
faddl
in
rorb
gs
in
push
out
xor
adc
adc
push
in
inc
xor
add
cmpsb
jnp
push
cmp
xor
das
xchg
mov
jno
or
jo
adc
fisubrl
outsl
sbb
mov
fldt
pop
and
outsb
rcrb
adc
fld
leave
es
pop
in
flds
mov
nop
adc
adc
pop
xchg
or
push
adc
lods
andb
sub
adc
inc
mov
outsl
movsb
adc
adc
inc
sbb
adc
adc
jne
pop
fnsave
je
ror
mov
cmp
adc
adc
lret
push
adc
sahf
clc
adc
adc
inc
and
mov
mov
hlt
adc
adc
mov
push
adc
mov
push
adc
rclb
pushf
cmpsb
lcall
adc
icebp
sub
sub
adc
outsl
inc
push
mov
dec
mov
xchg
jecxz
and
sbb
test
cmpb
int3
or
bound
dec
mov
insl
cmp
jo
out
push
xchg
mov
and
push
mov
push
adc
sub
insl
fwait
es
outsb
ljmp
in
repnz
testb
cmc
out
sahf
jl
scas
or
mov
shlb
or
xor
sub
jae
sub
xchg
pop
xor
fcoms
dec
jno
dec
lret
push
sbb
insl
pushl
insl
cmp
jae
adcb
inc
pop
loope
lods
or
add
push
adc
fistpll
push
adc
xor
inc
in
lcall
lods
scas
jno
dec
aam
orb
or
xchg
and
adc
adc
push
out
cmp
movsb
adc
adc
daa
movsl
les
push
adc
sbb
ret
jg
or
push
movsb
dec
sbb
jns
adc
adc
popf
int
les
push
adc
pop
mov
cmp
lea
outsl
test
dec
iret
dec
mov
adc
movsb
xor
mov
pop
mov
or
lods
lods
xchg
test
faddl
push
adc
mov
loopne
jne
xchg
into
or
push
adc
add
or
mov
push
push
xlat
jg
jmp
push
adc
cmp
dec
test
pop
loopne
ss
xor
pop
adc
insl
cltd
xor
jbe
xchg
aad
mov
ret
or
ror
das
mov
das
sarl
in
out
lret
pop
and
dec
xchg
cmpl
xchg
and
mov
or
push
adc
in
mov
insb
xlat
mov
dec
ret
mov
daa
or
push
adc
cmpsb
sbb
jo
xchg
cmp
xor
inc
jns
add
push
adc
mov
in
cs
cwtl
adc
adc
call
xor
adc
xchg
scas
push
sbb
add
xchg
fisubs
fwait
mov
jae
pop
mov
sbb
out
xor
jo
pop
adc
sbb
add
adc
jae
andb
out
loopne
insl
inc
pusha
push
sbb
xor
test
test
iret
ret
push
loop
lret
push
adc
and
push
adc
push
pop
pop
or
pop
lret
xchg
cmp
daa
push
adc
clc
adc
adc
sbb
sub
cld
hlt
adc
adc
je
cmpsl
sbb
push
push
lret
cld
orl
fstp
lds
adc
adc
test
rcrb
mov
pop
pop
rolb
or
pop
adc
ret
or
sbb
mov
and
hlt
inc
add
or
sbb
fdivrl
push
jno
xchg
adc
adc
bound
adc
mov
sub
negb
push
adc
dec
jmp
rcrb
sarb
adc
adc
pushf
das
aaa
ds
mov
or
imul
adc
sbb
fldcw
xchg
fists
dec
repnz
push
adc
call
lock
into
mov
dec
das
lock
mov
adc
cld
xor
ret
sbb
pushf
xchg
cmp
pop
cli
clc
push
and
push
adc
dec
pop
scas
and
and
adc
adc
xchg
fldcw
movsb
jae
xor
or
push
adc
popa
fs
adc
loopne
test
mov
mull
js
loop
bound
fcoml
or
insl
adcl
dec
nop
inc
cmp
jo
xchg
mov
push
mov
mov
adc
mov
adc
stos
jle
cltd
stc
les
push
adc
pop
dec
mov
inc
or
inc
push
rorb
adc
adc
mov
and
les
push
adc
dec
pop
push
mov
adc
push
repnz
cmc
xchg
in
cmpsl
inc
lds
cltd
add
push
adc
push
mov
cmp
sub
ja
lock
xor
sub
fnstsw
pop
adc
xchg
dec
push
xchg
daa
dec
call
int
xchg
outsb
jbe
adc
mov
movsl
lcall
out
mov
cmp
adc
push
adc
icebp
mov
shlb
jbe
dec
int
xor
rolb
xchg
test
arpl
or
and
lcall
imul
fsubr
cmp
test
mov
das
movsb
imul
xchg
sub
mov
out
mov
inc
test
mov
aaa
insl
ficompl
push
or
xor
icebp
jg
sub
scas
lods
lods
or
dec
jmp
daa
dec
into
jbe
jl
mov
imul
push
xor
dec
popa
or
xchg
and
jl
jmp
xchg
xor
shlb
mov
jae
jge
sub
mov
mov
fdivrl
jnp
or
dec
aas
clc
mov
xchg
daa
fisubl
jno
clc
adc
stos
sub
or
cmp
mov
dec
stos
pop
ds
daa
dec
rclb
call
sbb
arpl
lret
sbb
dec
xchg
and
jmp
dec
sub
adc
pop
or
inc
pop
adcl
pop
xor
inc
sub
adc
test
imul
imul
movsb
mov
push
xor
and
adc
clc
fcmovb
rcr
push
push
pop
in
ret
adc
dec
dec
xchg
and
sahf
cmp
popa
sahf
insb
xchg
xchg
push
cmp
push
adc
dec
push
sbb
repz
ss
cltd
xor
cltd
addl
adc
adc
insl
xchg
and
lret
push
adc
sub
xor
inc
outsl
popf
addl
adc
adc
xor
lock
and
push
cmp
adc
ja
dec
inc
daa
scas
sti
sbb
leave
mov
sub
shrb
cltd
adc
inc
imul
push
mov
jecxz,pn
stc
shlb
ja
push
pop
je
and
mov
out
aad
inc
int
sbb
mov
push
pop
mov
inc
dec
sbb
inc
add
push
int3
adc
adc
repnz
cmpsb
leave
add
ret
sub
dec
lods
leave
sahf
es
fwait
imul
aad
push
rcrb
enter
sti
aad
dec
pushf
cs
leave
vcvttss2si
mov
addr16
xor
adc
adc
mov
mov
adc
adc
es
xchg
movsb
jl
dec
and
fistpl
adc
aaa
xor
adc
adc
in
push
addr16
inc
sub
adc
fwait
inc
icebp
pushf
inc
test
jle
adc
adc
jo
shlb
mov
pop
adc
adc
sbb
fs
mov
xor
push
or
adc
out
inc
scas
sbb
in
cmp
push
adc
dec
jge
lret
jae
mov
add
fst
mov
nop
out
aad
pop
sbbl
dec
lods
xor
pop
int
add
movsb
sub
cwtl
and
sbb
test
jecxz
stc
imul
insb
pop
cs
int
sbb
lcall
ficoms
sub
cmp
adc
push
adc
mov
cmpsl
rcrl
add
pop
movsl
push
arpl
push
adc
add
adc
adc
mov
nop
mov
pop
ljmp
pushf
test
adc
dec
inc
pop
ficomps
xor
xor
mov
mov
pop
adc
adc
sbb
add
cmpsb
add
mov
xor
cmp
pop
out
mov
xor
gs
xchg
jne
push
push
clc
jns
out
mov
push
adc
lods
je
adc
fs
adc
adc
and
out
xchg
mov
lods
pop
cmp
fbstp
jbe
or
xor
stos
pop
mov
jb
xchg
sub
jb
mov
aas
push
xor
dec
int
add
push
adc
gs
or
mov
mov
sbb
mov
push
sub
pushf
fdivrs
cltd
xor
dec
xchg
and
loope
mov
ret
xchg
hlt
and
mov
mov
sub
and
xor
mov
nop
in
lret
adc
jnp
pop
mov
or
adc
xchg
mov
inc
out
push
mov
xchg
int
and
inc
and
imul
add
movsb
mov
pop
jne
movl
sub
mov
adc
adcl
loopne
popf
dec
push
sbb
mov
into
fwait
shll
scas
pop
mov
out
cmp
in
and
jns
adc
adc
pop
dec
pop
jnp
popf
and
inc
xchg
fmuls
adc
adc
mov
cmp
lea
jns
dec
bound
sub
jns
arpl
addr16
std
mov
adc
mov
push
xor
dec
mov
daa
dec
adc
jp
xchg
add
push
adc
push
out
pop
nop
and
adc
adc
sbb
adc
and
adc
dec
fsts
dec
out
xor
imul
ret
jo
pop
adc
dec
ret
mov
in
cmc
ss
shrl
dec
jle
adc
adc
xor
adc
out
nop
sub
inc
imul
adc
adc
push
jge
xlat
mov
mov
inc
xchg
scas
in
and
std
leave
hlt
adc
adc
sub
jg
pop
fisttpl
dec
inc
insb
sub
test
push
adc
xchg
imul
call
sbb
js
inc
and
pop
push
les
push
adc
icebp
out
inc
inc
shlb
and
push
and
sbb
sub
mov
cmpb
sub
adc
push
push
adc
cs
test
push
adc
pop
loope
jl
cltd
in
out
adc
cmpsb
inc
cwtl
cs
inc
fwait
mov
clc
in
das
cmp
sarb
cltd
cmp
push
adc
mov
and
shlb
push
mov
adc
lcall
shll
les
fnstcw
add
popf
gs
adc
adc
add
jnp
mov
adc
popa
dec
lret
into
push
std
ret
adcl
dec
subl
adc
shlb
push
adc
push
adc
shlb
jae
push
inc
movl
sub
sahf
mov
adc
mov
mov
movsb
adc
adc
push
adc
push
mov
in
sub
leave
lahf
fstpt
jecxz
xchg
out
cmpsb
cmp
push
adc
and
cmp
jl
adcb
leave
xchg
push
lea
ds
push
adc
xchg
mov
and
push
inc
mov
nop
sub
adc
push
subb
dec
stc
in
mov
push
adc
stos
mov
pop
jo
cmp
fisubl
pop
shr
pop
xlat
xchg
gs
push
mov
and
test
imul
xchg
pushf
mov
fsub
or
jns
xorl
mov
push
aaa
imul
or
adc
xchg
lret
leave
xchg
and
mov
das
in
lods
xor
add
lcall
cltd
shl
aaa
or
or
pop
jno
aad
sub
adc
and
nop
adc
adc
xor
xchg
adc
adc
jl
ljmp
sub
adc
add
xor
sbbb
and
pop
mov
sahf
xor
adc
adc
xchg
jns
movsb
adc
adc
ficompl
adc
adc
jbe
iret
lcall
cmp
lods
xlat
xor
inc
int
dec
insl
xor
adc
adc
bnd
into
lcall
outsb
cmpsl
mov
pop
jne
rolb
jle
cmpsl
lahf
cs
mov
adc
xchg
push
or
call
loopne
movl
push
adc
xor
adc
int
sub
dec
js
adc
adc
out
fdivr
adc
adc
fwait
adc
hlt
adc
adc
les
mov
inc
jns
pop
mov
push
adc
stc
fstpt
sbb
adc
dec
js
adc
adc
pusha
xchg
jns
lock
adc
scas
push
imul
and
mov
sti
rolb
fiaddl
xchg
insl
push
jo
inc
dec
gs
das
mov
xor
fsts
lods
scas
mov
and
bound
cmpsl
dec
jle
inc
xchg
das
pushl
pop
adc
mov
ds
xchg
ret
mov
dec
xchg
jge
push
mov
mov
cltd
lods
pop
mov
push
jmp
in
out
rcrl
adc
adc
loopne
dec
mov
or
cmp
cltd
adc
jecxz
and
daa
sub
or
jnp
lods
push
in
popf
rorl
push
adc
add
and
cmc
lret
jp
sbb
add
test
andb
mov
mov
push
fmul
push
nop
adc
adc
jle
xlat
inc
fwait
push
mov
inc
les
push
adc
in
inc
and
les
push
adc
ret
or
mov
out
cld
inc
cwtl
lcall
mov
fdivrl
rcr
enter
stc
xor
dec
ret
or
push
adc
xchg
pop
xchg
and
movsb
inc
aam
hlt
lcall
adc
cmp
push
adc
leave
les
push
adc
fisubrl
adc
ss
imul
insl
insb
iret
cwtl
adc
adc
pop
mov
cld
insb
pop
adc
ljmp
dec
ret
mov
mov
pop
adc
inc
in
mov
adc
sub
insl
pop
adc
dec
dec
inc
pop
pop
adc
adc
cmpsb
in
add
int3
inc
xchg
mov
adc
pushf
ficoml
xchg
xor
sbb
fdivs
in
adc
push
adc
aas
sbb
in
pop
xchg
out
inc
ret
incb
sub
adc
mov
inc
cmp
mov
sub
cld
div
adc
push
adc
dec
xor
daa
cmp
stos
or
loope
rorb
pop
cltd
adc
or
fbstp
inc
pop
xor
jo
ja
cld
es
adc
adc
xchg
loopne
and
xchg
xlat
push
sub
lret
adc
adc
stos
dec
scas
scas
fidivrs
testl
push
lea
lods
aam
lret
fnstenv
cmp
lret
mov
xor
push
adc
jmp
and
xchg
push
fnstenv
out
or
xor
inc
cmpsl
dec
xchg
mov
out
lret
test
pop
xor
fs
movl
xchg
das
pop
aam
cs
adc
ffree
push
scas
pop
mov
fisubs
cmp
inc
lea
ficompl
lret
adc
push
adc
pop
xchg
push
fnstenv
cmp
jne
movsl
andb
mov
or
mov
aas
push
xor
addl
add
push
adc
mov
push
sub
xor
dec
mov
xchg
bound
push
adc
xor
repz
pop
mov
out
lods
pop
mov
and
add
cs
adc
test
push
pop
mov
mov
sub
push
adc
shr
insl
and
loope
xchg
pop
ret
dec
int
mov
jp
loope
or
inc
push
adc
lods
pop
out
or
sahf
mov
sub
daa
and
push
adc
cld
insb
pop
adc
mov
aad
mov
repnz
insl
pop
adc
cmp
js
fcompl
adc
adc
out
lcall
push
adc
cmp
dec
cmp
xor
lods
pop
inc
xchg
mov
pop
mov
mov
inc
sub
adc
in
xchg
mov
mov
adc
push
adc
ret
imul
push
dec
sbb
scas
xchg
int
adc
adc
xor
popa
outsl
mov
mov
int
fs
movsl
dec
xor
test
cmp
call
imul
insb
and
fstpl
jmp
push
sub
out
bound
push
sbbb
lcall
adc
js
into
in
xchg
mov
xchg
or
xor
push
adc
mov
roll
js
xlat
shrl
push
adc
mov
fstps
xor
lock
sub
dec
sub
fwait
popf
aad
adc
add
add
push
enterw
lea
and
jecxz
jbe
cltd
sahf
orb
rorb
cmp
mov
push
jmp
nop
mov
xchg
xor
imull
jge
or
xor
mov
cwtl
jns
sub
rclb
push
adc
mov
and
mov
mov
ja
in
xchg
and
push
outsb
inc
fwait
cmp
fistpll
xchg
test
outsb
jl
mov
fmull
adc
adc
pop
pop
or
mov
dec
cs
adc
or
push
adc
push
hlt
sbb
out
or
xlat
movsb
call
stos
mov
jns
in
mov
xchg
out
cmp
push
adc
adc
lock
adc
adc
in
xlat
xchg
pop
mov
fidivrl
clc
jae
daa
pop
adc
adc
dec
test
movsl
iret
insl
cmp
int3
push
adc
pop
adcb
adc
xor
in
outsl
test
pop
adc
adc
adc
arpl
xchg
adcb
adc
in
jge
jecxz
aam
dec
cs
mul
jp
in
aam
jle
pop
pop
adc
mov
or
adc
sbb
je
pop
pop
adc
dec
pusha
jp
adc
adc
inc
adc
adc
in
add
pusha
jp
adc
pop
popf
pop
adc
idiv
lea
cld
mov
mov
jae
scas
popf
or
dec
pushf
pop
adc
inc
xchg
push
cmc
pop
cmp
jecxz
inc
add
jmp
dec
jo
push
adc
pushf
pop
adc
and
or
jo
pop
adc
push
xchg
mov
push
dec
cmp
add
pop
adc
add
test
push
adc
sub
mov
hlt
push
xor
sub
mov
test
jbe
mov
data16
dec
add
loopne
jge
push
sbb
mov
subb
adc
imul
mov
lea
jmp
aad
icebp
sbb
lret
xchg
cmpsb
mov
cmp
pop
sub
adc
rclb
adc
out
jmp
push
icebp
out
pop
aad
sub
insb
cs
adc
rcrb
xchg
lret
push
mov
xchg
into
inc
xchg
cs
movsb
cmp
cmovle
or
ret
sbb
mov
sahf
leave
data16
mov
aas
pop
xor
pop
xor
xor
int3
daa
push
xor
pop
les
push
adc
dec
sahf
cmp
fcmovu
aaa
push
pushf
pop
adc
mov
mov
addr16
fdivs
xchg
daa
push
adc
movsl
clc
adc
adc
push
adc
rorb
adc
adc
pop
inc
outsb
mov
lea
lock
adc
or
xor
fnsave
xchg
mov
jmp
adc
adc
xchg
es
sahf
xchg
sqrtps
int
dec
push
pop
insb
sbb
dec
xor
push
xor
fs
push
mov
daa
cmc
jno
adcb
pushf
aaa
insl
ficompl
push
aas
inc
pop
int
sub
and
push
adc
nop
out
roll
jbe
mov
rorb
adc
adc
icebp
xor
test
dec
mov
mov
test
push
adc
sub
dec
pop
adc
mov
jmp
aad
push
cmpsl
dec
pop
add
daa
cmp
mov
in
outsl
fnstenv
adc
lock
adc
adc
aad
pop
and
in
adc
jmp
cwtl
push
hlt
adc
adc
sti
mov
xor
pop
stos
inc
xor
lods
test
push
adc
cmp
ljmp
cmp
aad
leave
xor
xor
je
push
imul
push
adc
stos
fdivrs
push
adcb
pusha
and
mov
or
inc
int
iret
das
mov
out
lahf
or
cltd
es
jae
jmp
fnstenv
sahf
inc
loope
sub
xor
out
sub
mov
aas
xchg
repz
mov
movsb
in
jge
xchg
jnp
push
stc
or
push
and
sub
mov
enter
jae
push
mov
sub
push
adc
inc
jmp
stc
cli
lock
add
in
jns
mov
mov
sbb
shlb
shl
adc
adc
push
dec
dec
and
add
mov
and
sbb
lds
adc
mov
xchg
dec
std
pop
or
cmp
lock
sbb
out
in
scas
sub
push
sbbl
test
call
jl
push
outsl
mov
pop
scas
xor
rorb
call
adc
aas
leave
fdivl
ds
or
push
test
dec
pop
fidivl
mov
inc
inc
sbb
testb
lahf
insb
rclb
dec
inc
sbb
fs
or
pop
les
push
adc
mov
gs
pop
popf
sti
shrb
stos
mov
inc
dec
les
push
adc
jo
call
dec
daa
stc
sub
lods
jecxz
gs
add
lret
xchg
xchg
imul
sahf
push
push
sbb
and
iret
xchg
adc
add
pop
adc
shll
dec
and
xchg
loopne
arpl
ret
xchg
int
in
mov
pop
nop
adc
adc
imull
repnz
loopne
mov
fcoml
push
adc
mov
or
cs
fcoms
push
adc
das
testl
adc
daa
pushf
adc
adc
push
adc
or
adc
cmp
jecxz
mov
aam
push
adc
fdivrp
ficompl
push
adc
mov
pop
pop
imul
inc
xchg
popa
xor
xchg
adc
adc
or
les
push
adc
js
adc
adc
cmp
sub
insl
cmp
jns
aaa
cmpb
jno
loopne
sub
dec
aam
xor
add
adc
in
pop
mov
dec
inc
push
sub
popf
scas
inc
or
xchg
lret
cmpsl
inc
ret
and
inc
pop
pop
mov
push
test
insl
fildl
sbb
ljmp
mov
and
xor
fdivrs
adc
rol
gs
inc
sbb
out
mov
repz
rol
outsl
out
pop
cmp
fidivs
xorb
xor
cmp
inc
mov
outsb
cmp
ret
cltd
mov
mov
stos
mov
xchg
mov
xchg
adcb
in
mov
pop
xchg
loop
fisubrs
in
push
aas
jge
hlt
push
ret
or
in
lcall
pop
out
xor
lods
pusha
repnz
lret
pmaxsw
mov
xor
jns
insl
cmp
scas
cmpsl
sbb
push
test
xchg
ror
mov
lods
pop
loopne
lahf
cmpsl
out
mov
adc
shll
xchg
lods
mov
push
stc
ror
dec
shlb
nop
scas
mov
or
mov
fistpl
cwtl
popf
pop
adc
rolb
les
sbb
pop
xchg
les
jmp
pop
rolb
cltd
cmp
mov
rcrb
add
cmp
adc
ljmp
das
movl
pop
idiv
add
mov
mov
push
cld
sbb
fdiv
jecxz
push
insb
lcall
cmpsb
fidivrl
or
std
adc
outsl
add
jge
mov
push
adc
xor
fs
pop
cwtl
xchg
adc
sub
jo
ljmp
jecxz
dec
xor
adc
inc
add
cmp
mov
pop
sbb
or
cld
pusha
inc
arpl
pop
scas
lret
pop
data16
adc
inc
das
cmp
mov
fdivr
cmpsb
mov
xorb
push
adc
jb
xchg
xchg
xor
test
fdivrs
call
loope
cmpsl
pusha
mov
add
adc
push
adc
add
clc
mov
popa
mov
dec
fs
add
sbb
mov
push
adc
sub
cmp
lcall
mov
push
xor
jp
imul
add
repnz
stos
rcrl
lds
push
inc
in
fldt
mov
out
int
es
push
test
sub
nop
adc
adc
js
cmpsl
mov
adc
pop
test
clc
xchg
idivl
cltd
std
imul
cwtl
adc
adc
clc
testb
adc
mov
cltd
in
std
rolb
fs
mov
dec
jle
xchg
lods
cwtl
cmc
dec
out
push
je
mov
movsl
sub
shl
popa
or
stos
inc
xchg
jecxz
push
lds
sbb
ret
out
mov
cld
scas
movsl
lret
pop
and
rclb
adc
gs
sub
fdivrs
and
cmp
cs
adc
dec
xchg
das
shl
cmc
fsubs
push
test
mov
cmp
mov
fidivrl
pop
rorb
adc
adc
mov
adc
adc
cmc
pop
repz
fs
in
sbb
hlt
hlt
inc
xchg
xchg
out
and
adc
fwait
mov
cmp
leave
fsubl
or
inc
fildll
inc
xchg
cmp
es
out
xor
lods
mov
jae
inc
movsb
cmpsb
cmp
and
adc
adc
lods
push
cmp
fdivs
sbb
push
xchg
movsl
fisubl
sbb
fisubrs
scas
sbb
daa
dec
sahf
dec
or
xchg
xchg
jo
out
ss
int
xor
jecxz
aaa
out
pop
aad
ret
rolb
loope
mov
push
in
hlt
mov
popf
gs
addr16
push
pop
in
es
xchg
push
inc
in
cli
xor
test
fwait
jge
inc
sub
insl
cmp
es
mov
adc
ljmp
cli
pop
inc
rcr
paddsb
adc
sahf
dec
out
loopne
xchg
mov
push
into
mov
loopne
push
adc
mov
cld
fcompl
es
xchg
test
pop
adc
sbb
out
int3
mov
es
cmp
xchg
mov
pusha
lret
mov
sbb
xor
inc
mov
pushf
pop
inc
outsb
dec
pop
or
xor
xchg
and
xor
mov
mov
adc
into
add
insb
sbb
inc
scas
mov
push
adc
clc
lock
cwtl
sub
sahf
sahf
push
rcrl
loopne
sub
sbb
in
popf
mov
fstps
cmp
or
pop
daa
sbb
loope
lds
cmp
mov
loopne
xchg
inc
iret
push
sub
in
cmp
pop
pop
outsb
int3
pusha
pop
js
out
mov
adc
sahf
push
stos
pop
gs
int
fnstcw
mov
push
mov
aad
dec
dec
push
mov
aaa
and
pop
jno
imul
stos
popf
loopne
push
adc
inc
movsl
or
push
cmp
mov
setp
xor
lds
lds
fpatan
out
jo
pop
adc
cmc
xor
inc
jb
or
pop
adc
sbb
jge
xor
int
sub
and
adc
in
or
push
pop
mov
movsb
lret
push
pop
jecxz
nop
nop
notb
das
push
adc
das
adc
adc
adc
loop
mov
ret
mov
or
imul
movntps
repnz
scas
cld
xchg
pop
cmpl
test
insb
repnz
adc
adc
adc
imul
xor
xor
mov
xor
mov
lds
pop
dec
repnz
jbe
daa
imul
dec
imull
add
adc
mov
add
inc
or
fs
ret
sub
push
cmp
mov
mov
push
mov
cmpsl
lret
popa
ret
bound
test
mov
sbb
mov
cli
mov
push
fsubrl
sahf
xchg
xchg
sub
mull
popa
mov
pop
rcrl
test
je
add
test
lret
push
sub
inc
push
popa
inc
mov
add
push
jmp
mov
push
and
es
mov
or
push
adc
inc
cwtl
adc
adc
enter
push
adc
push
jge
call
push
adc
fucomip
cmp
jnp
scas
insl
fnstenv
ret
xchg
bound
inc
fists
sub
inc
xchg
mov
shl
xchg
pop
jbe
in
xor
jmp
les
or
push
adc
das
aas
call
pop
mov
scas
sub
insl
fidivrl
xchg
add
or
imul
sbb
push
adc
or
push
adc
aam
int
cwtl
adc
adc
or
or
mov
xchg
add
fsubrs
push
adc
sub
loopne
adc
fs
xlat
std
sbb
mov
dec
xor
stos
mov
mov
aas
mov
dec
popa
fwait
mov
adc
adc
mov
add
movsb
lea
int3
adc
or
bound
xchg
push
adc
icebp
or
lret
loope
dec
xchg
xor
lds
in
lahf
cltd
ss
test
push
sahf
sbb
adc
out
xchg
movsb
dec
xchg
push
sti
add
outsb
push
roll
in
mov
js
and
adc
adc
sub
adc
test
push
jle
ret
in
xchg
xchg
mov
xor
xchg
daa
dec
loop
xchg
out
and
adc
mov
out
mov
xchg
aaa
imul
movsb
ret
jge
rcll
out
sbb
lret
jl
jl
aad
imul
xchg
mov
aad
lahf
pop
adc
out
int
inc
push
jnp
shll
pop
adc
out
call
cmp
xchg
popa
out
xchg
lcall
shll
sti
ror
fs
popa
push
hlt
push
or
xchg
inc
dec
or
mov
push
fnsave
add
xchg
orl
rorl
mov
out
into
xchg
cs
pushf
cmp
aam
dec
in
ja
add
jne
addr16
in
cmp
jb
in
lcall
inc
popf
pop
cld
imul
xlat
pop
dec
jmp
enter
stos
or
repz
pushf
lds
scas
fyl2x
mov
cmc
cmpsl
xchg
sub
or
ja
sbb
stc
cmpsb
mov
arpl
out
pusha
xor
ja
arpl
movsb
int3
adc
movsl
mov
stc
cwtl
jns
xor
outsb
or
lret
out
lock
xchg
gs
pop
mov
push
out
sbb
push
rcrl
add
mov
sbb
lret
dec
push
mov
cmc
mov
inc
fstpt
aaa
sub
xor
ds
adc
mov
adc
xchg
cmp
fcmovne
push
xchg
xchg
jno
xorb
push
aas
xor
mov
je
sub
int3
loop
fists
out
fdivrl
decb
lcall
cwtl
sub
push
mov
cld
popa
sub
xchg
mov
call
fwait
cld
jbe
stc
out
jmp
in
xchg
lahf
ret
sahf
mov
mov
dec
loopne
imul
roll
pusha
lods
pop
mov
jno
xchg
inc
adc
sbb
icebp
mov
shll
jo
xchg
xchg
or
push
jne
inc
fsub
aad
sbb
dec
pop
mov
mov
pop
les
cmpsl
lcall
test
jb
xchg
cmpb
add
data16
adc
jns
or
push
mov
sbb
movsb
and
pop
mov
or
mov
xchg
xchg
jl
xor
sub
jmp
jmp
hlt
mov
xor
dec
mov
in
mov
pop
lahf
in
ret
sub
stos
jo,pt
mov
lods
shll
int3
sub
sbb
push
sbb
xlat
lods
hlt
mov
imul
jl
fidivrl
jo
cmp
mov
adc
adc
pop
insb
pop
aam
dec
cmp
mov
rorb
inc
adc
scas
mov
outsl
or
int3
mov
inc
sbb
dec
sbb
mov
icebp
pop
xchg
ss
movsb
btr
push
mov
ret
inc
lea
mov
and
adc
jns
or
adc
insl
push
inc
jg
mov
fsts
cmp
xchg
and
stos
fisubs
das
push
adc
push
sub
adc
adc
sub
jne
cltd
mov
cmp
and
xchg
outsl
pop
cmp
mov
test
bound
cmp
push
adc
or
push
adc
js
dec
gs
addr16
stos
shlb
mov
or
or
pop
aaa
jno
push
das
push
adc
dec
das
push
adc
mov
sub
lock
xor
int
push
xlat
out
int3
out
xor
insl
cmpb
jns
cmp
sub
adc
mov
stos
mov
pop
adc
adc
sahf
pop
adc
adc
pop
sbb
pop
cmc
pop
rclb
xor
xchg
imul
lahf
pop
adc
mov
les
loopne
mov
fnstenv
mov
and
sbb
xchg
movsb
push
xor
xchg
xor
adc
roll
xlat
dec
xchg
es
push
or
mov
enter
sbb
jns
inc
cltd
mov
ss
mov
sbb
jmp
into
cwtl
inc
fbld
rcll
in
fnsave
out
and
push
clc
arpl
dec
mov
mov
movsl
pop
mov
sarb
fsubrs
adc
jmp
mov
test
cwtl
pop
jg
je
scas
mov
pushf
jp
fs
dec
push
pop
int3
inc
popa
cmp
pop
pop
pop
iret
out
adc
out
xlat
dec
cmp
cmpb
popf
pop
adc
insl
bound
add
and
jns
or
adc
int3
mov
lcall
verr
adc
jno
adc
roll
dec
pop
adc
jp
sub
adc
adc
imulb
push
arpl
cmp
pop
hlt
adc
ss
outsl
xchg
enter
mov
das
inc
xchg
mov
mov
dec
in
out
movsl
xor
adc
dec
std
and
jns
sarl
sbb
push
adc
push
fildll
xchg
jecxz
les
adc
jp
loope
jns
jl
jecxz
adc
cmp
jle
jmp
test
xchg
cs
adcb
inc
xchg
adc
inc
and
inc
aas
mov
not
test
in
lret
rolb
bound
xchg
or
xor
sub
push
adc
scas
jb
sbb
push
adc
lcall
je
bound
ljmp
jno
adc
adc
adc
sbb
dec
loopne
jecxz
adc
adc
loop
cmp
adc
jl
cmp
jnp
fdivs
and
pop
adc
aad
xorb
lahf
push
cmp
je
mov
inc
pop
fwait
sbb
in
loopne
push
adc
loop
cmp
loope
test
sbb
adc
adc
push
mov
push
or
nop
inc
inc
sbb
inc
pop
adc
sub
outsl
xlat
lods
pop
loope
or
adc
adc
fadd
adc
adc
icebp
test
imul
jecxz
ljmp
ret
add
sbb
adc
mov
mov
sbb
leave
imul
out
xchg
push
test
pushf
mov
adc
sbb
out
insb
jl
adc
popa
xor
adc
cmp
cwtl
popf
pop
adc
rcll
fisttpll
or
jo
pop
adc
out
mov
xchg
fdivrl
enter
cmp
push
aad
sub
mov
xlat
push
cmp
repnz
adc
cmp
movsb
dec
aam
mov
fcomps
rolb
and
fidivl
or
or
pop
mov
push
jno
xor
add
pop
push
loope
js
les
js
and
scas
popf
lea
pop
subb
xchg
lret
sbb
and
pop
mov
fnsave
imul
mov
pop
push
xchg
daa
dec
ljmp
xor
fidivl
or
xor
icebp
jg
and
cmp
icebp
out
out
sbbb
mov
xlat
sbb
es
pop
in
dec
xchg
fildl
addb
fldcw
mov
out
ret
test
mov
push
xor
jo
insb
lret
xchg
and
mov
push
adc
and
mov
sbb
stc
iret
fwait
ss
sub
cltd
out
add
xlat
daa
adc
rorl
push
les
lods
call
out
inc
addr16
xchg
cmp
jg
in
and
mov
dec
xor
adc
xor
cmc
push
sub
adc
and
orl
xor
aas
cwtl
rclb
popf
mov
shrl
rcrl
sub
cld
pusha
cmp
test
bound
fiaddl
jnp
xor
outsl
push
and
push
subl
add
mov
cltd
popa
jl
pop
hlt
stos
mov
or
fdivrl
nop
mov
mov
jmp
stos
and
dec
cmc
mov
or
jae
ljmp
dec
cwtl
pop
adc
ljmp
cmpl
adc
fs
cmp
mov
cmp
push
dec
mov
loop
dec
stos
add
dec
cltd
sub
add
lods
nop
mov
pop
mov
mov
pop
inc
js
mov
add
js
pop
mov
sbb
repz
ret
fidivs
shl
ss
inc
lock
inc
fcoml
inc
sbb
les
cmp
popf
dec
adc
shlb
pusha
lcall
cmovb
pushf
mov
popf
lret
push
mov
rcll
ja
mov
iret
hlt
lcall
inc
nop
lret
xchg
ljmp
js
test
sbb
and
cmp
mov
mov
sub
ret
pushf
imulb
push
test
push
sbbl
lods
jb
aaa
frstor
out
fnsave
jb
cltd
test
adc
jnp
shlb
fs
xchg
cmp
sub
mov
test
jns
roll
adc
das
push
adc
cmpsb
out
jmp
lret
or
movsl
iret
mov
push
adc
test
ljmp
or
inc
push
rcll
jb
adc
mov
sbb
scas
push
aaa
jbe
iret
jp
mov
imul
pop
mov
aaa
cmp
clc
adc
adc
insl
jbe
shlb
pop
adc
push
add
in
push
sti
aam
xorb
sub
rorb
and
repnz
rcll
jb
adc
out
mov
leave
pop
imul
pop
dec
js
adc
adc
pop
adc
cli
shll
add
push
adc
mov
pushf
pop
adc
adc
mov
daa
clc
adc
adc
sbb
pop
adc
adc
push
sti
cwtl
xchg
call
xor
test
mov
mov
outsb
rorb
pop
adc
push
test
dec
roll
xchg
test
pop
adc
sub
mov
push
adc
imul
inc
adc
adc
ficompl
adc
adc
ja
inc
lcall
xchg
and
inc
pop
adc
adc
adc
dec
mov
sbb
fadds
adc
adc
adc
adc
xchg
xchg
and
mov
adc
push
sub
push
adc
add
xchg
inc
rcrb
and
adc
mov
cmp
add
push
adc
add
pop
adc
scas
int3
lcall
ds
insb
enter
or
dec
mov
dec
adcb
adc
xor
mov
mov
loop
or
add
sbb
mov
mov
out
leave
pop
sub
adc
rclb
adc
out
mov
inc
xchg
es
fwait
sub
mov
bound
sub
adc
clc
shl
xchg
xchg
orl
push
subb
adc
xor
xchg
and
rcrb
xchg
and
stc
jmp
int
cmp
insb
cs
adc
call
add
adc
mov
jp
push
and
sub
filds
push
jns
adcb
jecxz
int3
ja
int3
push
out
sub
xor
mov
pop
inc
scas
push
sahf
mov
sbb
mov
push
adc
cmp
cmp
mov
xor
xor
mov
stos
mov
fnstcw
mov
push
adc
mov
adc
adc
fiaddl
dec
sub
in
scas
xchg
popa
mov
outsl
dec
mov
sarb
add
dec
cltd
inc
push
sarb
js
jg
xlat
mov
pop
adc
mov
adc
adc
enter
sbb
adc
lahf
inc
lock
scas
out
mov
adc
adc
push
adc
pop
adc
insl
adc
adc
inc
lahf
sub
adc
lahf
gs
or
jo
pop
adc
popa
fnstsw
sbb
xlat
sub
jnp
std
neg
push
inc
outsb
aaa
adc
pop
lret
incb
rcll
adcb
test
nop
adc
adc
mov
outsb
out
sbb
ds
adc
jp
js
out
dec
stc
ret
cld
mov
push
cmp
xor
jl
mov
mov
test
mov
nop
sub
push
adc
repnz
inc
mov
push
subl
push
adc
sbb
pop
testb
jl
repz
outsl
mov
andl
es
into
jno
dec
inc
sub
adc
addr16
push
fwait
mov
adc
fidivl
xchg
outsb
mov
push
sub
cmp
pop
mov
gs
cvtps2pd
fdivs
out
xor
sub
adc
dec
rclb
adc
call
mov
int
pushf
cmp
adcl
jns
mov
adc
js
ds
mov
xchg
push
xor
or
fcmovbe
daa
outsl
fisubl
insb
cs
adc
mov
xchg
sub
cmpsb
push
enter
icebp
out
xchg
bound
mov
xor
dec
sbb
gs
sarb
outsb
stos
pop
ret
dec
and
xor
mov
das
shlb
mov
decb
in
mov
cmp
dec
je
adc
adc
shll
fidivl
adc
sbb
shrl
push
movsb
dec
mov
bound
xchg
insl
jne
sub
adc
adc
sti
mov
mov
ret
outsb
pop
enter
arpl
and
push
adc
mov
adc
cmpsb
dec
add
cmp
hlt
iret
fwait
inc
pop
jmp
xor
push
sub
xchg
out
lock
cmp
cmpps
das
push
adc
sbb
insb
cs
adc
dec
xor
jbe
add
hlt
or
sbb
pop
ds
out
jmp
push
mov
or
inc
xchg
sub
mov
fcmovnb
outsl
push
cmc
mov
int
cwtl
pop
test
push
mov
sahf
leave
cmp
push
adc
jns
and
adc
adc
pushf
push
or
sbb
out
js
add
aas
pushf
jecxz
adc
scas
pop
data16
pop
out
pushl
cmp
dec
xchg
push
nop
and
mov
fidivl
aad
pop
mov
repnz
add
xchg
pop
pop
mov
movsb
mov
cltd
mov
adc
push
xchg
xor
mov
jge
in
rcrl
push
mov
ljmp
imul
pop
adc
xor
mov
shll
xor
sti
sti
sar
mov
cmp
int
adc
sub
out
dec
imulb
adc
mov
sbb
jl
adc
and
insb
push
sbb
shl
es
dec
ficoml
jle
shr
iret
add
test
mov
cmp
in
xlat
fidivrs
stos
aas
xchg
push
dec
adc
jge
cmp
imul
jmp
rcll
xchg
cmpsb
or
punpckhdq
movsb
mov
pop
add
in
int
add
mov
mov
and
aad
inc
lret
insb
or
cmp
fs
in
hlt
sbb
mov
int3
mov
sub
mov
xchg
xor
iret
out
cmpsb
ret
adc
add
mov
clc
fwait
lahf
push
ret
sub
loopne
mov
sbb
call
inc
test
push
test
rolb
push
imul
pop
and
jmp
jmp
shr
push
lods
repnz
in
rorl
ljmp
adc
ss
rcrb
lahf
ljmp
iret
ret
cmpsb
mov
dec
push
hlt
push
pop
add
in
mov
fwait
jbe
mov
rcrl
xchg
fistpll
sarl
bound
insl
data16
orb
mov
pop
fistps
repnz
repz
arpl
mov
test
cmpsl
jae
pop
fnstcw
lret
cmp
push
cwtl
sbb
loop
imul
loopne
sahf
andb
enter
iret
adc
xchg
pop
dec
aaa
xor
data16
xor
hlt
es
ss
mov
ret
xrelease
sbb
sbb
pop
xchg
imul
dec
movsl
lret
inc
insb
cmp
fld
ja
into
add
jae
enter
jmp
or
gs
daa
adc
out
inc
cmpsl
test
psrld
inc
xchg
imul
mov
dec
pop
sbb
cmp
daa
fstpt
mov
xchg
movsl
sar
popa
push
repz
mov
nop
aas
fs
xchg
and
out
das
movsb
insl
mov
and
cmp
cli
dec
pop
lret
or
ss
scas
jge
loopne
enter
lcall
enter
out
les
ss
sbb
lret
pop
mov
mov
cmp
nop
mov
sbb
enter
adc
mov
push
leave
lret
adc
adc
out
adc
adc
inc
jle
out
xor
inc
mov
or
xor
aad
std
mov
add
mov
fsubrp
in
inc
jle
out
xor
insl
bnd
push
xorl
gs
and
push
adc
test
mov
mov
add
pop
adc
or
popf
lock
add
pop
jo
or
mov
icebp
out
mov
mov
mov
and
xor
mov
fdivl
loope
fwait
ss
rorb
adc
adc
nop
adc
adc
xor
mov
inc
jae
mov
mov
and
mov
fwait
ss
not
xor
lock
pop
mov
dec
imul
int3
adc
int
add
sub
shll
and
mov
sub
adc
push
int3
xchg
mov
iret
push
sahf
loope
andb
adc
les
mov
dec
hlt
adc
dec
outsl
lods
pushf
rorl
mov
icebp
add
int3
fwait
pop
adc
adc
fisubrl
in
add
pop
ja
clc
xor
adc
cs
push
push
add
dec
inc
out
pop
xchg
sub
adc
lock
mov
movsb
insb
mov
xor
push
incb
dec
pushf
mov
mov
cmp
jb,pt
jae
xor
adc
sahf
jb
fidivs
sub
int
popa
int3
aaa
sub
aam
in
sbb
adc
jo
mov
mov
adc
shlb
bound
push
add
push
int3
jns
mov
xor
push
mov
stc
sub
add
test
cs
movsl
push
jbe
test
mov
pop
arpl
or
xchg
insl
inc
sbb
ljmp
js
sbb
sbb
dec
pop
adc
test
out
jns
insl
movsb
cmp
cmp
fwait
xor
cmp
mov
push
sub
pusha
jp
adc
daa
jno
jb
out
or
sub
adc
mov
jbe
insb
sbb
xchg
mov
nop
fwait
adc
push
adc
lahf
dec
and
cmpl
jl
loop
cmp
push
adc
xlat
mov
int
lret
cmp
int
xlat
cltd
adc
add
test
inc
sub
adc
sub
mov
and
cld
mov
or
fadds
testb
adc
mov
rorb
pop
xor
adc
mov
mulb
stos
and
sub
dec
fsubrs
xchg
daa
dec
mov
jle
insb
push
jmp
push
pop
sbb
jb
mov
ds
xor
sub
sahf
xchg
aad
xor
shll
stos
mov
xchg
xor
test
push
sbb
ret
or
ret
push
movsl
fsubrl
push
adc
add
jo
cmp
lret
pushf
mov
xchg
das
mov
adc
cmc
loopne
inc
adc
adc
xchg
cmp
or
pop
mov
in
adc
mov
fsubrl
push
adc
add
jo
cmp
or
inc
test
sub
mov
and
xchg
or
in
sub
adc
add
nop
xchg
cmp
sub
push
adc
mov
and
pop
xchg
and
cmp
test
xchg
mov
ds
rorb
adc
adc
pop
in
in
sub
adc
ja
repz
mov
pop
cltd
mov
cld
xor
xor
cmp
adc
insb
inc
sahf
cmp
mov
and
sub
push
adc
inc
arpl
xor
jae
mov
inc
inc
clc
out
xor
xchg
jbe
hlt
sub
adc
lret
insl
scas
dec
xchg
and
cmp
lea
mov
ret
adc
push
xor
dec
adc
gs
inc
movsl
dec
xchg
mov
aas
mov
sub
adc
lods
xchg
sub
mov
adc
adc
push
fmuls
aaa
dec
xchg
daa
fcoms
sub
adc
or
xchg
and
enter
sub
adc
adc
push
adc
or
pop
or
push
adc
xchg
test
push
cmpsl
out
xor
and
mov
add
sbbb
lds
shlb
cmc
add
push
adc
xchg
push
add
xor
loope
sub
push
adc
push
xchg
sbb
push
adc
pop
stos
out
xor
pop
aam
jmp
rcrb
daa
cmp
push
adc
jecxz
xchg
call
push
adc
mov
js
inc
sub
jecxz
adc
adc
adc
addr16
jp
add
push
xchg
ljmp
arpl
adc
jle
push
xor
pop
sbb
mov
jno
jbe
add
cmpsl
leave
in
or
add
fs
test
sub
push
adc
cli
outsl
movb
adc
mov
inc
addl
cwtl
mov
imul
lahf
inc
insl
sbb
mov
and
push
adc
in
bound
pop
jnp
xor
mov
jle
xchg
popl
test
mov
xchg
sbb
in
jae
jmp
gs
xchg
cwtl
push
arpl
pop
cld
arpl
rclb
adc
out
out
and
xor
enter
and
jle
jp
das
push
adc
pop
imul
push
leave
pusha
and
xchg
sarl
and
sub
adc
and
adc
push
adc
pop
pop
sub
mov
loop
jne
adc
dec
in
cwtl
mov
jne
adc
pushf
push
out
gs
add
bound
jne
adc
mov
inc
test
push
add
ror
dec
mov
jle
mov
addr16
stc
add
lock
sahf
jo
and
pop
imul
pop
adc
pop
lods
sub
dec
adc
jge
or
in
push
mov
data16
mov
sub
and
mov
sub
aas
mov
sahf
jbe
clc
out
in
jl
shll
push
adc
pop
inc
jbe
sub
loope
pop
lahf
cmp
pop
icebp
fcomps
lret
xchg
mov
cmp
repnz
leave
data16
and
cmp
jecxz
nop
aad
out
fdivrs
subl
adc
adc
push
xor
mov
push
sub
nop
scas
sarb
stos
inc
xchg
push
outsb
lret
lock
pop
or
dec
xchg
loope
int
jns
nop
scas
movsb
cmp
mov
sbb
push
movsb
out
mov
jmp
sbbl
inc
xchg
pop
outsb
lret
sbb
inc
xchg
and
flds
sahf
cmp
sbb
adc
adc
mov
in
hlt
jle
cmp
addl
dec
loopne
outsb
xchg
daa
dec
xor
mov
int
xchg
push
adc
xor
mov
and
call
ret
add
in
int
cltd
insl
xor
dec
inc
adc
adc
pop
sub
push
ss
mov
int
ss
scas
into
aaa
cmp
addb
dec
cmp
gs
rolb
mov
mov
int
subl
out
pop
jo
cmp
or
dec
dec
shr
jl
or
xor
mov
in
pop
jbe
daa
dec
imul
movsb
cmp
mov
inc
pop
test
repz
or
cmp
repz
adc
adc
sub
mov
adc
adc
fcmovnu
insb
pusha
cwtl
popf
pop
adc
mov
imul
std
mov
mov
xchg
inc
xor
dec
sub
test
fldenv
inc
pusha
lods
push
nop
cmpsl
push
out
sub
ljmp
out
and
fistpl
mov
into
push
inc
inc
nop
jno
loop
mov
out
sub
adc
jge
int3
adc
loopne
jne
mov
jb
loope
mov
fs
stc
cmp
pop
adc
in
push
mov
lcall
mov
lahf
inc
inc
popf
jno
add
in
add
inc
popf
icebp
mov
jp
pop
scas
out
adc
sbb
adc
nop
and
and
sbb
int
in
cmp
ljmp
adc
jecxz
lahf
xor
sub
fidivs
cli
sub
jne
push
mov
cmpsl
add
or
push
mov
inc
xchg
mov
std
in
inc
divl
mov
cmp
cli
pop
pop
negl
insl
pop
cmp
or
mov
xlat
xchg
sbb
test
xchg
fwait
imul
mov
ljmp
lock
xchg
ret
imul
push
lea
in
fs
ds
jle
sub
pushw
cmp
xchg
fstps
jge
sub
in
push
mov
icebp
push
bound
pop
int3
data16
or
pop
popf
mov
int3
fwait
pop
adc
shl
int3
fwait
pop
adc
shlb
adc
mul
and
xchg
push
repz
xchg
sbb
ds
add
push
adc
sbb
push
stc
out
adcb
adc
adc
lret
inc
test
fnstsw
les
jb
or
sub
inc
cli
js
inc
jecxz
mov
jmp
repz
sbb
gs
int3
pop
xchg
lods
or
mov
jmp
adc
add
mov
pop
jle
mov
test
movsb
mov
or
in
pop
xor
sbb
cmp
jae
pop
les
push
adc
aad
insl
cmp
xlat
sub
aaa
mov
test
cmp
pop
mov
gs
and
mov
fistpl
sbb
nop
roll
push
fdivs
sbb
packuswb
cmp
out
je
daa
jecxz
dec
enter
cmpsb
xor
jbe
sbb
mov
mov
shll
aas
aas
pusha
sub
repnz
insb
fidivl
push
sbb
adc
xor
xchg
and
out
xor
xchg
jo
pop
adc
shll
lcall
pop
insb
roll
adc
adc
pusha
jp
adc
xlat
lods
pop
cmp
and
daa
loopne
cmp
xchg
adc
adc
inc
sub
shll
push
shll
sub
mov
cmp
into
stos
nop
and
inc
cmp
outsb
dec
xchg
int
sub
xor
dec
mov
ret
add
or
xchg
and
pop
adc
pop
adc
pop
adc
pusha
jp
adc
lock
ss
fidivrl
jp
adc
mov
dec
add
loopne
mov
mov
mov
pop
adc
push
movsb
mov
xor
pop
adc
mov
cli
pop
add
mov
and
push
adc
xor
pusha
ret
xchg
insl
dec
xor
push
adc
xchg
faddl
hlt
das
xchg
loopne
mov
stos
mov
sahf
sbb
push
adc
pushf
pop
adc
mov
insb
push
xor
and
push
adc
xchg
stos
lahf
in
std
cwtl
ss
adc
adc
adc
mov
out
xchg
lods
dec
xor
loope
pop
mov
jnp
mov
xchg
jmp
dec
pop
pushf
xor
pusha
xchg
pop
adc
adc
mov
fisubrs
ja
adc
jge
lea
push
adc
sahf
pop
adc
cmpsl
clc
adc
adc
cmp
pop
adc
fiaddl
adc
adc
adc
lar
pushf
pop
adc
dec
sub
out
fcomp
sti
pusha
popf
pop
adc
adc
adc
xchg
adc
bound
in
jb
popf
pop
adc
push
and
sti
mov
outsb
cmp
adc
adc
or
sahf
pop
adc
xchg
ljmp
adcb
pushf
pop
adc
xchg
fimull
fildll
pusha
fwait
jb
lds
pushf
pop
adc
jb
mov
ss
mov
sbb
xchg
mov
and
push
cmp
mov
push
adc
jo
adc
jae
xor
aas
js
adc
jmp
adc
out
sbb
dec
mov
dec
xchg
sti
pop
jmp
js
jns
xchg
inc
ret
dec
test
xor
insl
aaa
or
mov
insl
cmp
pusha
and
sub
xchg
inc
mov
and
push
sbb
test
sahf
sahf
push
pop
xchg
xor
pop
mov
adc
outsl
jle
add
dec
fisttpll
cli
inc
adc
aas
sub
sbb
rclb
mov
in
bnd
neg
aam
push
invlpg
mov
push
jecxz
push
stc
mov
and
fidivrl
bnd
inc
pop
push
mov
pop
notb
sahf
xchg
shl
jne
sbb
fimull
cli
pop
push
rclb
pusha
jg
cmp
push
sbb
adc
mov
xor
cmc
pop
test
adc
or
nop
ss
aad
push
add
mov
fildl
jne
add
int3
cmp
lcall
xchg
xchg
ss
aad
push
add
mov
fildl
cmp
imul
push
cld
push
int3
cltd
lds
aad
adc
cwtl
push
jo
or
nop
cmp
or
rcll
sbb
dec
mov
fstpl
jnp
xchg
and
out
jno
rorl
or
scas
cmpsl
jle
shll
fwait
int
mov
insl
scas
stos
lcall
xchg
sub
mov
mov
insl
mov
adc
movsl
cs
out
cmpsb
mov
xor
add
scas
push
lahf
out
mov
lock
pushf
pop
call
dec
out
cmp
push
test
aaa
push
adc
mov
cmp
mov
sbb
push
adc
pop
xor
and
aaa
jge
mov
pusha
jo
mov
mov
mov
ss
mov
in
mov
adc
insl
aad
shl
xchg
aam
and
cmp
mov
jg
push
inc
or
ds
sub
das
push
adc
mov
push
lods
push
imul
stc
xchg
dec
mov
in
imul
mov
pop
int
sub
push
das
push
adc
dec
imull
cmp
adc
stos
pop
inc
in
dec
arpl
lahf
dec
mov
popf
xchg
xchg
movsb
and
mov
inc
hlt
or
push
sub
jb
iret
add
pushf
es
iret
mov
inc
lahf
mov
xor
adc
inc
mov
shl
shlb
push
adc
aam
adc
cmp
adc
insl
das
cmp
daa
mov
push
mov
inc
and
outsb
mov
mov
mov
inc
inc
andb
das
push
adc
test
push
ret
cmp
adc
jge
push
pushf
pop
fistpll
adc
mov
popf
pop
lret
dec
xorb
das
push
adc
addl
cmp
xchg
sbb
clc
rolb
mov
sti
pop
jmp
sbb
push
ret
mov
xor
adc
std
mov
aas
mov
mov
sub
das
push
adc
mov
sbb
mov
or
mov
sahf
sub
jmp
xchg
or
mov
and
mov
int3
insb
cmpsb
add
push
pop
inc
stos
in
xchg
push
cmc
xorl
inc
popf
and
jecxz
aaa
ret
push
out
and
jle
pop
add
call
fisttpll
ficomps
enter
sbb
jg
lea
stos
or
cmpsb
lahf
pop
out
cmpsl
xchg
xor
pop
test
or
mov
in
popf
mov
dec
lcall
pop
fwait
push
mov
sbb
xlat
pop
sbb
mov
popa
jo
addr16
adc
pusha
flds
mov
popa
pop
repnz
jecxz
mov
sahf
out
mov
push
out
mov
jno
adc
ret
sbb
sbb
cwtl
aad
sbb
in
dec
push
cmp
push
mov
stos
movsl
mov
or
lea
add
adcl
rcrl
cmp
test
mov
ja
mov
and
jne
push
insl
stos
and
stos
mov
mov
xor
pusha
aaa
sbb
fists
fnstenv
pop
inc
rcrb
jecxz
cmp
in
xchg
cmpsb
ret
adc
icebp
adc
ret
jno
ja
inc
jg
daa
pop
lock
ffree
pusha
lcall
ss
sbb
cltd
rclb
mov
mov
movsl
dec
xchg
movsl
lods
push
popf
inc
ljmp
xor
or
mov
jnp
xor
xor
xchg
push
rol
inc
clc
ret
fs
icebp
pop
int3
xor
imul
inc
loope
mov
mull
xchg
pop
call
mov
pop
out
aas
cwtl
dec
iret
dec
fs
cmp
imul
cmp
orl
pop
cmp
ret
push
push
jmp
insb
push
and
shll
aaa
pop
xchg
fimull
mov
subb
adc
movb
add
sbb
xchg
lea
sub
mov
loop
adc
movb
and
pop
loop
mov
xor
mov
scas
fcompl
lock
daa
adc
je
jmp
xchg
data16
mov
mov
daa
cmpsl
or
inc
push
cs
shlb
xor
popf
or
popa
ret
out
xor
daa
roll
scas
or
incl
add
cli
aaa
ljmp
mov
xchg
arpl
ljmp
add
push
pop
jp
mov
and
dec
loopne
out
and
mov
xor
pop
add
xchg
inc
xor
addb
aad
ror
xchg
push
mov
cmpsl
mov
int3
add
aam
dec
rorl
repz
mov
in
addr16
cltd
push
sti
nop
scas
mov
xchg
jp
dec
into
loope
out
js
les
xchg
mov
test
pop
in
xor
fcmovnb
pusha
mov
cmp
pushf
aaa
insb
iret
pop
adc
mov
pop
cmp
push
repnz
push
notb
inc
fwait
xor
imul
lcall
imul
cmp
stos
push
insb
jl
cmp
mov
imulb
lds
mov
sahf
mov
addb
push
mov
inc
jmp
fidivl
mov
imulb
or
or
xchg
cwtl
dec
and
sub
push
or
mov
or
or
xor
or
xor
fdiv
shll
xchg
testl
pop
push
pushf
mov
mov
aam
mov
pusha
repnz
cmp
call
pop
jbe
push
jb
int
jb
jecxz
adc
cmp
lds
hlt
cs
aas
popa
test
xchg
cmp
adc
pusha
pop
jb
jecxz
in
dec
mov
decb
or
mov
insl
xor
fs
jle
sub
cmp
sbb
icebp
mov
sbb
ds
cwtl
dec
jmp
sbb
scas
mov
pop
scas
jg
andps
shlb
stos
pop
mov
pop
movsl
outsb
add
xchg
mov
or
arpl
cmp
stos
mov
add
mov
fimull
sti
and
cmp
and
mov
pop
aas
rcl
jp
pop
jne
into
pop
lret
mov
inc
test
push
aas
lcall
cmp
stos
lahf
or
pcmpgtb
push
push
ret
push
jno
arpl
mov
stc
mov
adc
negl
es
dec
and
inc
cli
or
pop
push
add
adc
and
out
sbb
push
or
enter
cmp
or
cwtl
pop
jb
inc
pop
push
mov
out
ss
fdivs
adc
out
pop
jp
mov
rcr
js
sbb
dec
arpl
push
fldcw
mov
stos
xor
popf
cmp
test
out
lret
adc
js
push
mov
cmp
fadds
jge
dec
cli
movsl
mov
sub
insl
arpl
and
es
jnp
mov
aam
sahf
inc
push
sbb
xor
pop
sub
push
nop
insb
push
adc
sbb
lcall
insl
fcmovnbe
xchg
pop
ret
xchg
scas
repnz
rcrb
adc
cmp
push
nop
imul
push
xor
pop
mov
sbb
dec
movsb
out
test
imul
lcall
inc
popf
ficoml
enter
inc
jne
cmp
es
xlat
cli
and
test
rcrl
cmp
call
push
lret
xchg
adc
pop
fildll
ficoml
shr
js
out
mov
push
mov
dec
shrb
dec
inc
fcompl
aaa
aas
mov
andl
aas
jns
dec
and
or
imulb
in
jle
lds
or
sub
sub
mov
cmp
aam
mov
repnz
loopne
xor
and
into
mov
movsl
add
inc
add
dec
xchg
movsb
enter
out
sahf
and
push
xor
add
or
push
fwait
leave
sbb
mov
fisttps
and
mov
xor
cmpsl
add
push
mov
xor
fcmovb
fnstcw
jne
hlt
insl
mov
imul
lcall
push
enter
repnz
sbb
repz
or
cmpsl
ds
mov
in
cmpsl
xchg
iret
jnp
push
cmpsl
adc
cmp
shrb
mov
sbb
pop
sti
scas
push
push
add
sbb
testl
mov
mov
fs
inc
xor
xor
and
jmp
push
push
cwtl
push
pop
xor
sub
sbb
lods
jl
outsl
repz
cltd
adc
mov
test
insb
adc
nop
mov
sbb
scas
fimull
and
inc
adc
shll
sbb
arpl
xlat
ja
dec
push
stos
jmp
les
in
mov
or
mov
test
sub
cmp
lcall
movsb
loopne
shrb
aad
cmc
mov
scas
adc
out
pushf
and
or
mov
mov
into
fimull
adc
js
shlb
inc
cwtl
jle
push
aam
push
mov
inc
ror
inc
xor
test
dec
and
insb
aam
jle
movsb
fmuls
daa
scas
or
in
fistps
in
and
jae
andl
rcll
or
pop
mov
pop
and
je
mov
test
xchg
add
sub
dec
xchg
xor
lds
mov
arpl
loopne
lods
xor
jp
xchg
push
xchg
sbb
pusha
or
cmp
fnsave
push
mov
dec
ffree
arpl
inc
nop
sbb
sbb
dec
pop
ret
lds
jle
mov
in
mov
pop
mov
lcall
jg
xchg
sub
sbb
nop
insb
push
adc
push
push
insl
push
cli
and
pop
add
icebp
fpatan
stos
mov
pop
push
nop
push
adc
adc
and
nop
imul
aad
addr16
jl
cltd
and
scas
fimuls
xor
pop
lret
add
imul
sbb
out
subl
or
fcmovnb
rcrl
cli
sbb
loopne
lcall
out
pushf
mov
or
test
sbb
repnz
or
mov
loopne
mov
dec
jge
and
sbb
cwtl
cwtl
pop
std
repnz
maxps
jg
out
testb
movsb
and
pop
repz
inc
adc
das
lods
aam
cli
sbb
jae
aam
pop
mov
pop
arpl
shlb
lret
inc
fcoml
mov
int
lret
ds
mov
push
lock
xor
and
sub
imul
xchg
in
add
xor
add
add
aam
rcr
aam
jno
insl
inc
add
imul
int
jnp
mov
push
lods
sub
xchg
rdmsr
fs
sbb
pop
xchg
das
mov
mov
cmp
pop
cmp
pop
cmp
xchg
insl
jb
mov
mov
aam
push
sbb
jmp
lods
xor
jge
dec
sbb
jne
jg
jae
jns
mov
pop
stos
fdivs
xor
cltd
daa
dec
sahf
test
repz
pop
lea
imul
mov
xor
lods
mov
xchg
and
push
xchg
adc
mov
inc
push
repz
sbb
jge
lods
shlb
push
mov
push
push
sbb
xor
lds
lahf
xor
jne
int
xor
call
jecxz
sbb
xor
movsb
std
ffree
pop
out
loop
psadbw
pop
cli
ds
mov
inc
dec
ret
pop
push
in
mov
scas
dec
adc
push
sbb
adc
push
lea
xchg
jae
mov
in
gs
js
mov
shrl
stc
mov
rcrb
sbb
and
dec
insl
mov
jne
mov
or
sbb
and
sbb
push
xchg
cs
in
xchg
push
popf
inc
mov
aad
fdivrl
dec
add
cmp
cmp
mov
mov
mov
dec
add
sbb
leave
pop
jmp
in
lds
push
aad
mov
mov
loope
out
mov
int3
orl
add
in
inc
inc
insl
inc
push
mov
mov
add
stos
push
ds
insb
adc
insb
into
rclb
cli
test
scas
xchg
ja
sbb
push
and
cmp
das
dec
or
aas
shrl
add
inc
cmpsl
in
sub
enter
lcall
dec
divl
mov
jmp
jecxz
jnp
push
xchg
ret
pop
aad
dec
clc
movsl
jnp
dec
in
or
xorb
dec
pusha
jl
sub
or
idivl
js
mov
test
lret
cld
inc
and
call
push
ja
insb
jne
pop
fcmovnbe
add
stc
in
test
xor
out
jge
sbb
lea
fsubs
cmp
test
ffree
inc
sub
pop
xor
add
nop
and
lret
in
repz
movsb
xor
adc
push
test
mov
and
cmpb
mov
fldcw
test
xor
and
cmp
cmp
psubusw
outsb
push
lods
ds
cld
xorb
push
inc
mov
push
sbb
push
and
xchg
out
in
pop
mov
roll
mov
in
sarb
jno
in
or
mov
lock
pushf
cli
xor
mov
pop
mov
lock
lea
xchg
jle
sahf
sbb
xchg
scas
push
dec
data16
icebp
mov
and
es
push
adc
clc
lret
clc
push
mov
leave
xchg
and
icebp
mov
es
fstl
ret
sub
dec
andps
test
push
outsl
add
push
inc
mov
and
inc
out
inc
out
imull
dec
xchg
jns
mov
push
movsb
adc
adc
and
dec
out
inc
sub
lret
hlt
xchg
and
pusha
pop
adc
push
not
rcrl
test
inc
out
inc
sub
lret
hlt
xchg
and
pusha
fcmovb
xlat
icebp
mov
in
xlat
pop
fmuls
cli
loope
dec
or
mov
inc
lds
adc
stos
mov
adc
sub
mul
int3
cmp
lahf
clc
jmp
ja
and
fst
lock
inc
mov
shr
cmpsl
sub
es
sti
clc
sbb
arpl
sub
sbb
xlat
and
ljmp
cmp
fcmovnu
push
pop
mov
sub
shlb
lea
mov
stos
fwait
scas
push
pop
push
adc
xchg
cli
fcoms
adc
push
and
das
pop
push
je
cmpsb
aad
pop
push
adc
lods
insl
sub
lret
inc
movsb
out
aaa
test
stos
rorl
pop
addr16
xchg
clc
loopew
mov
lret
or
mov
lahf
mov
jp
leave
adc
std
fidivl
fidivl
dec
ret
add
xor
sbb
leave
je
jg
mov
push
sbb
mov
lahf
test
in
cltd
fwait
lods
sbb
repnz
mov
mov
mov
dec
add
add
movsl
adc
movsb
arpl
pop
out
js
cmp
adcb
push
xor
leave
add
mov
shrb
push
mov
in
dec
sbb
adc
fiadds
clc
lret
add
pusha
mov
movl
add
push
je
adc
inc
jp
sti
adc
push
cmpsl
mov
out
les
mov
outsl
enter
mov
inc
or
js
lcall
sbb
shll
sbb
fstps
sbb
mov
ret
lahf
outsb
pop
jg
sbb
push
icebp
xchg
hlt
mov
insb
ss
sbb
test
imull
ljmp
mov
arpl
adc
adc
cmp
push
jae
mov
ret
push
arpl
inc
jae
jg
fs
loop
mov
sbb
inc
pop
stc
jo
inc
jge
frstor
out
cmc
cmp
movsb
mov
call
test
shld
or
mov
div
push
sub
pop
mov
fwait
xchg
jns
add
das
pop
mov
mov
fsts
mov
scas
xor
push
out
inc
enter
test
jmp
mov
insl
lahf
fisubl
pop
push
jne
sbb
xlat
sub
scas
scas
cmpsl
fwait
add
orl
sti
fcmovnb
repnz
push
xor
iret
rorl
cltd
dec
adc
add
xlat
aad
adc
aam
xor
jg
lret
iret
mov
push
stos
cli
das
leave
insl
fwait
jbe
push
jp
pushf
cmpsb
mov
xchg
shlb
sahf
jl
mov
push
outsl
mov
push
and
ss
shlb
outsb
ror
js
adc
add
push
mov
push
inc
push
jo,pt
sahf
fdivs
loop
push
shl
mov
in
xchg
dec
ret
in
nop
jg
and
and
cmp
mov
adc
dec
arpl
fdivs
imul
insb
fcomps
inc
sti
lock
dec
sbb
cmpsb
mov
repz
dec
pop
outsb
xchg
sahf
dec
in
inc
loop
mov
sbb
aas
sub
stc
inc
lcall
cmp
dec
rcrb
xor
mov
rol
inc
jp
sbb
in
and
out
pop
scas
pop
add
daa
xlat
sqrtps
cmc
enter
sbb
push
aaa
jg
push
rcll
movsb
fcoml
jns
inc
loopne
sbb
dec
xchg
das
aad
pop
or
int
hlt
mov
es
ja
shll
adc
sti
call
scas
mov
cld
insl
mov
arpl
adc
add
mov
mov
adc
inc
adc
pop
xchg
out
outsl
nop
push
fs
call
adc
adc
add
xlat
lds
or
cmp
mov
adc
xorb
mov
mov
xchg
inc
iret
cmp
bound
adc
aad
popa
inc
sti
lock
dec
sbb
cmpsb
mov
repz
dec
pop
outsb
xchg
sahf
dec
in
inc
loop
mov
adc
inc
push
jno
enter
aad
arpl
adc
insl
fildl
cmp
insl
add
adc
bound
adc
inc
xchg
das
test
jnp
movb
add
and
pop
lods
xor
cmp
sbb
mov
insl
scas
push
lahf
lods
lcall
pop
xchg
adc
pop
jb
int3
pushf
ret
dec
ds
cltd
cwtl
pop
inc
xor
imul
mov
sbb
dec
or
adc
sbb
mov
cli
xchg
jnp
pcmpeqw
in
inc
aam
xorb
das
cltd
pop
xchg
push
movsb
les
dec
push
ss
lahf
mov
bound
jle
aam
outsb
int3
bound
scas
test
xor
je
aad
xor
jno
adcb
xchg
nop
stc
cmp
inc
mov
cmp
shrb
dec
mov
fstpt
mov
push
int
xchg
ljmp
fistpll
push
je
pushf
inc
test
aam
shrl
push
lea
mov
repnz
cmp
push
test
cld
subl
xchg
stc
mov
fcmove
pop
xor
or
mov
mov
mov
add
outsl
test
jle
les
pop
cmp
xor
cmp
cwtl
xor
mov
xorl
pop
and
test
mov
test
addr16
push
jp
stos
push
adc
jmp
and
xchg
cmpsl
imul
sbb
jae
arpl
bound
mov
je
cmp
imul
push
lcall
in
xchg
adc
pop
mov
fnstenv
push
xor
cmp
xchg
aaa
and
jno
dec
mov
jmp
mov
sub
xchg
out
and
es
lret
jb
pop
jne,pt
les
xchg
inc
xlat
xor
into
pop
push
pop
out
lret
cmp
jl,pn
movl
or
lods
push
fdivs
mov
mov
in
mov
jp
cs
push
repnz
pop
into
out
ljmp
fadds
aam
mov
sbb
adc
sbb
xlat
pop
test
aaa
test
push
sbbl
dec
adc
pop
scas
fidivrs
xor
xor
es
insl
aam
jbe
mov
dec
ret
hlt
push
test
fld
pop
cld
mov
xor
push
xor
push
divb
jns
sbb
pop
adc
sub
adc
pop
nop
xor
jmp
call
xor
fwait
inc
fildll
std
dec
jo
rcrl
lods
pop
pop
inc
daa
dec
xchg
pop
int
ret
mov
sbb
cwtl
cltd
pop
inc
xor
insl
add
push
in
inc
out
pop
mov
sarb
xchg
movsb
xchg
jge
jecxz
or
cld
loope
pop
lcall
jno
add
dec
or
js
call
out
in
imul
inc
mov
mov
xor
pminsw
int
test
pop
mov
aaa
ljmp
shlb
cmpsb
mov
leave
xchg
dec
pusha
leave
out
rcrb
mov
pop
xor
lods
pop
aas
xor
pop
loope
dec
sahf
inc
sti
lock
dec
sbb
cmpsb
mov
repz
dec
pop
outsb
xchg
sahf
dec
out
pop
mov
lds
lcall
gs
lods
das
repnz
mov
pop
sub
pop
push
adc
sbb
or
pushf
stos
popf
repnz
push
adc
inc
adc
fs
push
arpl
lock
push
adc
xor
mov
fistpl
pop
mov
ret
xchg
fldenv
sbb
fadd
mov
add
aam
add
les
inc
repz
push
std
xchg
rclb
inc
repnz
sub
push
fnstenv
pop
dec
dec
push
in
nop
mov
xchg
mov
mov
cs
jl
loop
or
mov
pop
push
adc
mov
repz
xchg
xchg
popa
adc
mov
movsl
mov
pop
out
test
out
mov
mov
inc
rcl
aad
pusha
decb
into
out
push
push
mov
sub
cmp
out
ret
jne
jne
and
testb
mov
imull
mov
xchg
in
push
cld
rolb
mov
stos
data16
jb
pop
add
call
sub
in
mov
add
or
jecxz
pop
enter
dec
lahf
in
mov
and
rcrb
je
or
sub
in
jecxz
lds
xor
mov
shlb
leave
or
pusha
mov
sub
mov
addl
mov
pop
push
adc
dec
xchg
lock
sahf
mov
push
out
mov
mov
cmp
or
xchg
push
pop
pop
iret
sbb
pushf
subb
insb
sbb
pop
jo
jo
push
adc
out
and
jns
cmp
popl
pop
cmp
test
icebp
inc
jns
and
iret
aas
fdiv
fimull
mov
icebp
pop
jo
push
adc
popf
stos
sub
dec
fisubrl
dec
addr16
lcall
arpl
push
add
mov
in
cmp
imul
push
rorl
cmp
jecxz
pop
ss
push
movsb
adc
icebp
jge
sar
call
pop
push
adc
cwtl
sarb
sbb
sub
aas
call
loopne
cs
dec
jnp
or
lret
test
mov
test
in
addr16
mov
xor
dec
cld
cmp
sub
cli
sbb
call
repz
push
mov
fldt
add
sub
cmpsb
sahf
into
loop
adc
insb
adc
adc
lret
out
sub
xor
mov
adc
add
push
sti
lcall
pop
push
in
xchg
int3
push
xchg
das
pop
leave
and
push
add
js
cmp
fstpt
ret
or
leave
insl
push
pop
repnz
cs
mov
and
mov
shrb
xor
in
lret
cmp
subb
lret
shl
mov
jne
cmp
repnz
xchg
dec
xchg
das
cmp
add
test
pop
xlat
xchg
xor
inc
adc
sbb
out
mov
std
xchg
rclb
inc
repnz
sub
push
shl
popf
pop
jno
pop
jo
clc
jle
into
mov
and
popf
aas
cltd
hlt
gs
inc
pusha
xor
pop
call
pop
lret
xchg
fiaddl
imul
loopne
pop
fdivs
pop
jbe
jecxz
adc
mov
iret
and
mov
mov
push
lods
add
mov
ljmp
add
sub
adc
mov
push
outsb
or
and
jns
mov
pop
xchg
imul
dec
test
sub
jno
ret
mov
leave
or
sarl
pop
cmpsl
jns
out
sbb
outsb
lods
clc
or
in
hlt
in
push
outsb
push
sbb
ss
aam
sbb
shrb
in
repz
int
xor
fsubrl
imul
loop
sahf
mov
mov
rcl
cltd
cld
popa
pushf
pop
push
adc
insl
int
pop
mov
aaa
inc
xchg
daa
cmp
nop
je
inc
add
dec
xchg
das
or
aas
mov
adc
sub
pop
jb
lea
xchg
and
sbb
ljmp
mov
lods
test
adc
bound
sbb
mov
xchg
scas
and
cmpb
stos
pop
ret
cmp
arpl
cmp
jmp
jge
inc
fmul
shl
xchg
inc
fadd
in
xchg
cmpsb
add
cmp
xor
jbe
popf
js
dec
ret
sbb
out
or
std
mov
dec
enter
mov
mov
xchg
popa
lcall
imul
lret
fdivs
fwait
outsb
into
push
insl
mov
push
mov
sub
mov
add
sub
lds
data16
pushf
jl
hlt
cmp
mov
movl
or
mov
loop
pop
mov
outsb
inc
pop
rolb
mov
sbbb
add
and
dec
das
js
fcoml
es
sarl
adc
bswap
lea
mov
loopne
inc
mov
pop
xchg
ror
shlb
bnd
add
idivl
rorb
aas
je
jp
bound
xchg
ss
adc
mov
and
cmp
xlat
dec
xor
mov
xchg
add
pop
lahf
outsl
xor
movsb
sbb
out
data16
mov
icebp
out
cltd
int
inc
outsb
rcl
cmp
jmp
test
cmp
sbb
jge
jp
cmpsl
dec
shrl
adc
jb
popf
jo
cwtl
outsl
inc
orl
fstp
cld
daa
push
mov
xor
sub
push
cmp
ret
mov
pop
inc
in
cmp
jge
mov
pop
lret
add
jg
adc
mov
sub
popf
bound
and
mov
add
cmpsl
adc
mov
jmp
test
mov
inc
stc
shll
lcall
xor
stos
cltd
or
stos
xchg
jle
cmp
sbb
gs
mov
xlat
sarl
xchg
sbb
push
outsb
pop
sbb
outsl
adc
dec
dec
add
out
jg
jmp
inc
push
mov
ds
xor
inc
push
push
sbb
out
mov
std
xchg
rclb
inc
repnz
sub
jne
jno
fsubrs
popf
dec
push
add
psrlq
test
insl
push
into
mov
and
bound
outsl
adc
outsb
test
add
pusha
insl
movsb
or
cmp
sbb
jmp
lods
mov
pop
push
adc
mov
dec
xchg
and
icebp
jo
ret
push
pop
jmp
jno
into
mov
fdivrs
daa
addl
insl
maxps
loope
enter
mov
mov
int
mov
mov
xchg
dec
out
arpl
ljmp
pop
xorb
mov
or
mov
xchg
dec
call
push
dec
mov
push
ja
sbb
xorb
push
adc
stos
fisubs
fisubs
lret
dec
xchg
das
aad
cltd
fsubs
in
gs
sub
cmp
or
cmp
emms
icebp
fsubs
xchg
pop
pop
ja
xchg
mov
inc
call
fldcw
xlat
shll
adc
shl
inc
sti
cltd
lods
mov
xchg
inc
dec
mov
push
fsubrp
test
push
arpl
add
lret
in
movsb
sti
cltd
push
mov
sti
xchg
pushf
rclb
test
pop
mov
fs
cmp
insl
push
cld
test
xor
fmulp
ret
pop
scas
js
out
les
outsb
xlat
xor
addr16
lds
cli
cmp
into
bound
pop
gs
push
imul
xor
int3
push
mov
out
out
aad
jb
xchg
cmc
mov
pop
andb
mov
call
addr16
inc
jno
imul
pop
push
je
cmp
ds
es
sbb
or
mulb
inc
sub
add
inc
adcb
in
fldcw
repz
rcrb
adc
jmp
mov
xlat
in
mov
push
adc
inc
mov
cmpsl
icebp
in
dec
and
add
in
pusha
mov
dec
jecxz
cmpsl
mov
subl
dec
and
das
mov
pop
out
nop
test
add
shlb
dec
or
push
jle
cwtl
bound
adc
push
adc
cwtl
push
sbb
pop
mov
idivl
ja
jnp
in
dec
notl
inc
cmp
add
push
pusha
cmp
jno
dec
fcmovne
in
pop
cltd
repz
inc
clc
bound
popa
in
out
cmp
pop
lcall
insl
dec
ds
in
jns
insb
cmp
mov
pop
pop
dec
loopne
dec
aaa
add
lahf
and
shlb
mov
fildl
push
imul
in
sub
sub
add
data16
jnp
ficomps
in
adc
js
lahf
insl
inc
adc
sbb
lea
movl
add
popf
cld
and
bound
out
push
push
or
mov
clc
aas
mov
adc
insb
lea
stos
aad
and
sbb
movsl
jge
sbb
sub
jo
call
repnz
insb
jl
mov
xor
fistpll
inc
jmp
mov
dec
add
xchg
xor
shr
add
push
mov
je
movsb
dec
add
add
lret
adc
movsl
add
push
movsl
add
push
cmpsb
add
jge
add
fsubl
add
lahf
cmpsl
add
cmpsl
add
shll
add
fisubrs
add
imulb
add
fldcw
adc
scas
add
adc
add
les
add
repz
adc
mov
adc
add
ljmp
pop
out
sbb
inc
push
incb
dec
js
mov
aas
lahf
jg
lret
aaa
xchg
ret
lret
push
sub
out
mov
aas
fldcw
insb
jge
push
jp
push
clc
pop
data16
xor
adc
push
jmp
mov
or
cmovns
add
test
dec
cmp
mov
sbb
loopne
repz
dec
popa
cmpb
xlat
cmp
in
mov
or
sbb
out
and
jmp
lods
push
and
enter
adc
or
sbb
imul
and
lods
inc
addr16
xlat
xchg
shlb
mov
stos
adc
inc
imul
and
clc
jno
add
sbb
out
inc
and
aaa
or
int
mov
xchg
dec
test
insb
fcomp
arpl
add
sub
icebp
sub
mov
mov
inc
out
cmp
xchg
mov
lcall
and
pop
mov
pop
push
or
sub
fcmovbe
std
frstor
and
out
cmp
adc
inc
jle
loope
dec
stos
lahf
cmp
arpl
adc
push
adc
repz
sub
mov
adc
or
jmp
adc
pop
lods
addr16
xchg
mov
repz
stos
xchg
ss
mov
fdivrl
imul
add
lret
inc
ror
and
add
adc
add
subl
addl
rcrb
jae
adc
incl
popa
pop
mov
notb
sbb
inc
or
sbb
aas
xchg
mov
xor
ja
jp
xchg
fldcw
mov
pcmpgtb
inc
jo
adc
js
pop
jo
popf
xor
sbb
dec
je
int
sti
jmp
push
popf
xchg
jl
adc
dec
dec
push
adc
rolb
test
ljmp
mov
or
das
pushf
sbb
das
cmp
repz
scas
adc
dec
int3
enter
xchg
out
jl
mov
mov
mov
jmp
mov
jl
pop
push
movsb
orl
repnz
repnz
cmp
rcrl
or
push
int
ljmp
aas
push
aad
mov
cwtl
push
arpl
jmp
push
pushf
adc
cmp
out
or
cli
sub
test
test
or
pushf
pop
xchg
arpl
jle
jb
ret
mov
xlat
inc
cmp
sbb
mov
or
mov
es
shll
dec
outsl
cmp
dec
fwait
lea
cwtl
and
cmp
mov
jl
dec
xchg
sbb
push
cmp
inc
sbb
jmp
pause
and
lods
mov
xchg
in
pop
mov
xor
push
das
shll
mov
mov
andb
fnstenv
sbb
insl
movb
inc
mov
jns
cmpsb
fimuls
adc
mov
jne
shlb
cmp
rcll
pop
pop
push
jmp
cltd
in
add
mov
and
pop
arpl
insb
mov
inc
sahf
dec
inc
push
inc
sbb
lahf
mov
sub
arpl
imul
imul
xor
xlat
xchg
ret
sahf
aaa
xor
mov
lret
jg
lea
in
mov
ret
cmp
sbb
fs
fs
ret
lahf
mov
test
mov
mov
gs
sti
jae
jmp
xchg
jne
xor
rolb
pop
sbb
aas
fdivrl
popa
ret
bsf
xchg
roll
jae
leave
lcall
out
out
xchg
mov
adc
fs
fld
pop
addr16
mov
push
cmp
push
lods
pop
mov
lret
pop
push
add
fwait
lea
mov
dec
xchg
dec
aad
into
xchg
insl
inc
ret
jne
and
movsb
popa
ret
or
leave
xchg
pop
fists
test
mov
and
out
dec
or
mulb
pop
sbb
or
test
popf
mov
out
lret
mov
leave
xchg
scas
fcmovnu
cmp
lock
mov
out
dec
out
mov
adc
add
sarb
xchg
repnz
imul
in
ret
cmp
dec
lret
aam
jp
inc
rcr
aad
imul
gs
or
shll
xchg
mov
fstl
shlb
sub
mov
pop
scas
pop
cmp
fidivl
xchg
gs
xchg
jae
and
int
adc
pop
loope
mov
push
cli
adcl
sbb
push
sub
or
in
mov
sar
xchg
daa
lock
loopne
orb
jl
sub
xchg
pop
add
dec
sti
in
push
push
pushf
rcll
lcall
aas
test
push
mov
cmc
adcl
add
sbb
mov
popf
dec
lahf
leave
sub
lcall
ret
jle
in
sahf
rclb
mov
stc
scas
push
sub
inc
mov
adc
jecxz
add
sbb
imul
xor
movlps
adc
roll
stos
push
dec
aaa
adc
inc
pop
xchg
sbb
popf
repnz
jg
loope
dec
push
push
pop
or
inc
and
fcmovnbe
inc
sub
stc
aas
push
jb
cs
add
orl
sbb
cmp
mov
mov
cld
in
adc
xor
xorl
mov
dec
pop
cmp
dec
xchg
cmp
mov
dec
fstl
push
icebp
movsl
and
mov
iret
lods
aas
in
scas
jne
fidivl
lahf
mov
push
mov
jecxz
and
cltd
lahf
dec
fdivs
test
je
xlat
mov
add
seta
push
aaa
or
add
jnp
mov
aad
dec
sub
sub
pop
popa
and
cltd
pop
sbbl
arpl
jp
idiv
inc
mov
cltd
mov
xchg
rclb
fs
dec
pop
adc
sub
xlat
leave
ja
je
arpl
push
in
les
and
or
into
into
cmp
rcll
loop
jmp
aam
inc
jno
scas
sbb
dec
test
icebp
in
call
mov
xchg
pushf
and
pop
dec
xchg
push
pop
pop
add
cmp
in
leave
push
mov
xchg
jmp
xor
push
mov
sub
jne
xlat
shl
inc
sar
cltd
aam
gs
in
test
inc
ret
and
xor
xchg
test
loopne
mov
fdivrs
adc
fs
sbb
lods
and
cmp
push
dec
cmp
sbb
es
mov
push
data16
or
pop
and
dec
xchg
movsb
push
test
imul
xor
idivb
js
loopne
dec
push
mov
mov
pop
fwait
dec
mov
sub
pop
loopne
mov
mov
sbb
jl
cmp
in
xchg
lcall
fxch
mov
mov
or
xor
subl
jmp
sub
insl
mov
xchg
addr16
push
mov
xchg
das
push
or
arpl
pop
sbb
insl
mov
aaa
rep
pop
or
pop
push
test
pop
out
dec
xchg
movsb
mov
js
sti
mov
out
mov
ret
xchg
scas
add
imul
xor
es
mov
daa
lock
xchg
rcll
pop
imul
jp
jge
xor
pop
ja
cmp
ret
xchg
shr
inc
xor
dec
push
and
in
int
cli
and
insl
fstpt
sbb
jnp
push
sbb
out
inc
xor
inc
dec
out
sub
push
adc
test
push
add
outsl
mov
adc
push
cmp
shrb
pop
xchg
das
aad
insl
jns
jge
xor
dec
sub
cmp
jb
or
mov
inc
sbb
ljmp
test
addr16
adcb
push
std
imul
test
scas
aas
push
dec
fcomi
dec
push
cltd
ss
push
dec
ds
fstpt
pop
xor
dec
push
dec
mov
arpl
mov
push
xlat
arpl
fbstp
xchg
push
test
mov
inc
fnsave
out
inc
adc
bound
pop
daa
fcmovu
mov
jmp
add
mov
add
test
je
push
and
sub
fidivs
pop
sub
filds
test
data16
mov
gs
pop
xor
mov
stc
scas
jno
mov
adc
sbb
and
ret
pop
mov
mov
adc
mov
xor
shll
cmp
popa
leave
stos
inc
test
or
add
jbe
xchg
cmpsl
das
mov
mov
push
xchg
pop
fwait
cmp
sbb
jmp
or
xchg
dec
scas
inc
adc
jb
and
mov
repz
imul
xorb
mov
add
mov
aad
and
insb
or
push
jne
add
pop
pop
push
popa
xor
pop
inc
dec
jae
insb
inc
push
xchg
cmp
jo
fs
fwait
cmp
pop
inc
or
mov
or
dec
sub
sub
addr16
jge
xchg
lock
lods
dec
arpl
mov
pop
daa
xchg
mov
out
aam
ficoml
popa
sub
pop
fstp
out
es
popa
pop
fcmovnu
fldenv
test
mov
push
xor
shrb
popf
js
subl
pop
jne
pop
and
aas
dec
push
mov
adc
or
pop
xor
daa
lods
push
push
in
in
xor
jge
sbb
cli
stc
rorb
pop
mov
mov
xchg
adc
dec
mov
int
aad
pusha
lods
sbb
shr
jae
addb
ficoml
push
out
loopne
xor
cmc
ljmp
xchg
pop
and
imul
lcall
mov
and
sub
outsb
movl
shrl
into
mov
cmp
sbb
mulb
jbe
sbb
dec
rorl
insl
ja
or
add
ret
mov
lcall
push
mov
mov
mov
in
or
pusha
xchg
adc
xchg
rclb
push
jbe
inc
ss
notb
cmp
xchg
lret
outsl
lcall
loope
xchg
dec
pop
lret
push
shlb
cmp
aas
loopne
mov
shll
cmp
repnz
xchg
xchg
mov
cs
mov
dec
add
jne,pn
add
cld
insl
js
xor
and
pop
out
sbb
dec
add
ret
xchg
adc
xchg
and
mov
xor
xor
mov
mov
pop
jno
dec
push
mov
sbb
inc
jb
mov
pop
jnp
push
out
mov
lret
rdmsr
fs
or
in
jno
cli
fsubl
jg
in
cmp
push
insb
fdivrs
xor
push
adc
mov
dec
push
xorps
mov
or
cwtl
push
es
mov
movsl
bsf
xor
ret
outsl
fwait
xchg
out
pop
sub
imul
lcall
mov
dec
xor
sbb
out
sahf
pop
sbb
pop
mov
inc
shlb
loop
push
cmp
insb
fdivrs
stc
jae
or
mov
pop
push
out
push
sub
imul
or
dec
add
ret
xchg
pop
es
xchg
outsb
xchg
pop
mov
jo
cmp
movsb
faddp
lods
pop
shl
push
jnp
mov
xlat
or
loopne
scas
lcall
mov
and
popf
cmpsl
xor
mov
dec
or
dec
push
test
adc
inc
fcoml
push
addr16
out
mov
aam
ds
mov
mov
fwait
cltd
mov
icebp
jbe
and
sarl
and
or
scas
repz
shlb
pop
add
xchg
inc
icebp
push
pop
cli
push
sbb
cltd
jne
popf
lret
rorb
aaa
negb
xchg
cmc
insb
sbb
xrelease
dec
pop
je
xchg
or
mov
loopne
and
inc
sti
lods
lds
clc
cwtl
xor
pop
inc
dec
mov
cld
in
iret
adc
fcompl
xor
mov
sbb
inc
movsl
jmp
adc
leave
cmp
and
insl
aad
pop
pop
sbb
pusha
ja
imul
inc
xchg
fwait
jno
ja
push
gs
aam
scas
rol
add
add
mov
and
hlt
jp
push
les
icebp
fwait
inc
call
and
or
mov
cmp
mov
cwtl
testb
xchg
fisubrl
scas
push
repnz
lret
test
jecxz
xor
lds
mov
dec
sub
jae
xor
or
dec
cmp
lock
pop
add
xchg
lock
add
bsf
jp
xchg
in
cmp
insb
cmp
insb
push
adc
add
xchg
sbb
gs
pusha
push
repnz
push
lds
pop
dec
ss
jp
stc
mov
jl
and
fsts
imul
mov
repz
push
imul
loope
and
in
ud1
shrl
sub
sub
cmp
inc
popf
and
loope
xchg
xchg
enter
int3
push
push
loop
outsb
pop
mov
or
dec
shlb
shll
inc
int3
add
adc
xchg
and
dec
fs
adc
dec
mov
popf
fcoml
jmp
pop
je
mov
adc
scas
and
sarb
mov
int3
cmp
jae
or
mov
pop
sbb
dec
aaa
sub
insb
push
sub
imul
inc
cmpsl
out
add
mov
adcl
inc
lret
rcr
shl
jae
addb
lods
mov
mov
add
xchg
sarl
dec
fsubrs
out
xchg
cmp
pop
nop
push
adc
mov
les
push
adc
jge
icebp
imul
cmp
pushf
scas
xor
xchg
dec
ljmp
add
push
mov
jge
or
xor
js
and
lret
push
es
mov
push
loopne
dec
push
mov
mov
xlat
cmp
hlt
insl
js
lds
lods
fcmovb
lods
pop
jno,pt
cmp
ret
jns
or
inc
cwtl
jns
adc
in
cmp
mov
dec
xchg
ljmp
pop
and
dec
xchg
movsb
or
insl
nop
xchg
mov
mov
dec
shlb
adc
pop
in
push
loop
or
adc
daa
fcoms
push
dec
cmp
mov
mov
lret
rdmsr
fs
ret
setg
jns
cli
fsubl
jg
in
cmp
push
insb
fdivrs
adc
or
sbb
inc
cmp
push
fnsave
sar
xchg
push
cli
data16
call
xor
sahf
xchg
out
stos
jns
in
adc
cmp
inc
cmpsb
popa
ret
mov
popf
xchg
fcoms
jnp
fistpl
jno
push
adc
cmp
iret
cmp
xor
sbb
cltd
je
pop
mov
scas
pop
stos
nop
cmpsb
fadd
scas
pop
ds
aas
imull
rorb
sbb
push
mov
outsb
mov
mov
mov
fbstp
push
pop
test
frstor
aam
je
xchg
mov
mov
or
mov
jo
sub
fdivrs
ret
ret
dec
mov
test
imul
jle
and
mov
shlb
jae
and
xor
or
div
adc
mov
mov
xchg
xchg
xchg
lds
scas
es
adc
mov
sbb
add
push
pop
xchg
pop
dec
mov
cli
sbb
clc
andb
sbb
je
popf
in
adc
sbb
pop
sbb
in
push
aas
push
add
cmpb
mov
cmp
push
cwtl
push
push
mov
push
sub
js
dec
in
stos
int
in
and
outsb
adc
les
lods
mov
pop
fwait
push
xchg
sahf
inc
lock
sbb
sbb
dec
movsl
push
inc
cli
pushf
inc
clc
std
push
and
xchg
dec
adc
pop
xlat
push
std
dec
in
mov
in
insb
xorl
stos
cltd
jmp
jg
lret
lcall
lret
jl
xchg
js
nop
cld
int3
mov
and
cltd
stos
rcr
in
imul
pushf
dec
shr
sarl
sub
enter
or
pusha
jo
pop
adc
sub
outsb
cmp
mov
fwait
aas
and
push
mov
loop
rolb
jo
mov
addr16
push
ret
fisubrs
sub
fcomi
rclb
out
sbb
iret
xor
sbb
push
lret
xchg
jle
fdivr
outsl
andb
addl
push
push
lods
insl
push
rorl
sarb
pop
outsb
or
daa
sbb
dec
dec
sti
mov
and
adc
push
loopne
dec
ds
scas
pop
sbb
nop
jg
inc
adc
pop
xchg
das
cltd
cmp
aaa
imul
aad
insl
ret
repnz
mov
fstl
dec
mov
into
ds
push
dec
stos
pop
xchg
mov
ret
insl
or
add
and
shlb
stos
movsl
movsb
repz
push
repz
xor
push
es
sbb
xor
lcall
or
push
fnstenv
or
stos
jmp
das
pop
cmp
jno
aam
fstl
jnp
mov
data16
jne
xchg
gs
out
mov
or
repz
mov
loopne
jl
pop
mov
stos
xor
cmp
push
push
mov
enter
rcl
xlat
stc
lea
test
fucom
data16
ret
xchg
sub
xchg
and
xor
lcall
jecxz
mov
fwait
lea
imul
fidivs
dec
xchg
cmpsb
ret
clc
out
gs
cmp
fdivrs
in
rolb
sbb
jmp
addr16
aad
hlt
out
stos
cltd
aas
loop
inc
cmp
cwtl
mov
nop
pop
bound
xchg
scas
iret
xchg
jg
mov
lahf
cmp
adc
sbb
push
xor
xchg
xchg
or
mov
add
jp
iret
adc
testl
std
xchg
sub
ja
xor
sub
sbb
gs
mov
cli
js
mov
dec
fiadds
sbb
in
inc
adc
inc
xchg
das
aad
jno
xor
push
das
dec
loope
andl
jmp
outsl
scas
in
lcall
aam
repz
cltd
ss
and
outsb
mov
sub
or
adc
addr16
pop
cmpsb
inc
xchg
sub
push
je
sbb
adc
xorb
and
enter
cmp
inc
test
adc
pop
lock
xchg
cmp
fucomip
xlat
inc
popa
test
jg
pop
mov
pop
jg
je
adc
std
je
aam
sub
xor
and
shll
cwtl
dec
and
inc
mov
lret
popaw
bound
je
adc
add
repnz
dec
scas
xor
xchg
jmp
and
daa
mov
stc
push
sbbl
or
sub
test
sti
jno
test
mov
enter
arpl
mov
xchg
mov
das
das
jl
push
rcr
insb
cmp
inc
push
xchg
adc
nop
sbb
ret
mov
adc
ror
gs
mov
cld
pop
nop
ss
mov
outsb
cmp
xor
out
mov
test
pop
and
shl
mov
sub
add
packuswb
out
jb
inc
xor
ret
inc
sbb
iret
xor
push
js
dec
ret
popf
mov
sub
mov
je
xor
mov
fisubs
dec
popa
mov
aad
outsb
cmp
mov
arpl
mov
add
cwtl
fs
f2xm1
push
sub
xchg
inc
aad
adc
adc
sub
lcall
dec
xchg
loopne
imul
and
inc
gs
popa
popf
ss
fstp
or
xchg
lock
jb
sub
add
push
adc
cwtl
gs
adc
ficomps
subb
fdivrl
movsl
hlt
pop
lret
movsl
fst
or
adc
push
mov
push
mov
int3
lock
mov
and
mov
pop
adc
pop
xor
mov
sarb
jge
or
leave
insl
arpl
aas
je
pop
and
pop
loop
sbb
insl
mov
popa
ret
insl
push
lret
rolb
jp
push
xchg
std
shlb
dec
shlb
inc
xchg
pop
sbb
and
sbb
mov
hlt
jne
les
xlat
mov
out
pop
dec
xor
jo
push
int
jl
mov
xchg
lds
mov
mov
xchg
and
xor
cmc
or
mov
fstp
xchg
rep
mov
cs
jp
sahf
mov
dec
ret
fcoms
pusha
xchg
sbb
aam
das
push
adc
fstpl
test
clc
ss
ret
les
xor
pop
repz
movsb
cmpsb
aas
xchg
mov
xchg
or
cmp
xchg
pop
dec
arpl
lahf
mov
das
sub
lock
shl
mov
mov
popf
js
sub
jmp
int
xchg
int3
in
mov
jp
jbe
mov
shrb
dec
sbb
mov
sbb
pushf
sbb
sbb
jns
leave
jno
loopne
adc
pop
loopne
test
xor
lret
dec
mov
pop
pop
inc
jle
loopne
xchg
or
push
in
jecxz
sbb
lock
mov
and
jbe
jmp
pop
push
inc
leave
mov
fisttpl
repz
and
jp
clc
out
lods
mov
pop
mov
jo
ret
pop
ds
iret
sbb
mov
inc
repz
in
fstpt
or
xor
xchg
cmp
enter
aam
pop
xchg
mov
ds
mov
dec
leave
xchg
es
xchg
mulb
mov
pushf
std
push
mov
out
adc
or
xchg
push
dec
sbb
in
scas
sub
popf
cmp
popf
xchg
xor
jo
or
cwtl
cmc
lds
push
inc
pop
inc
inc
pop
push
adc
xor
jge
scas
les
mov
repz
pop
pop
movsl
outsl
ror
mov
cmpsb
loop
testb
outsb
movsb
mov
hlt
lahf
and
jecxz
das
or
jl
dec
and
push
push
xor
outsl
push
adc
jmp
sti
clc
and
icebp
out
cmp
outsl
push
adc
shll
cmpb
insl
sub
test
mov
mull
imul
scas
pop
in
test
jbe
negb
adc
push
cmc
clc
mov
pop
dec
out
and
lea
hlt
cmp
pop
cwtl
jp
pop
fdivp
rcr
sub
xor
mov
ja
incb
aaa
push
jle
mov
rsqrtps
in
negl
jp
movsb
icebp
sub
or
test
xor
hlt
pop
dec
cmp
test
out
out
cmpsb
xor
cmovnp
mov
clc
cmp
sahf
into
dec
jp
out
mov
lahf
xor
pop
outsb
lods
push
lods
push
and
xor
push
lods
sahf
mov
enter
cmp
or
gs
mov
aas
stos
and
nop
adc
adc
jbe
imul
mov
mov
jge
pop
mov
rcrl
cmp
fs
into
test
push
ffree
ja
lret
in
adc
adc
or
push
out
inc
dec
int3
push
mov
mov
idiv
aas
or
pminub
cmc
popw
adc
pop
lock
jb
xchg
dec
nop
insl
push
dec
mov
cmp
adc
insl
or
mov
sub
sbb
out
sahf
out
out
aaa
push
aaa
cmp
and
shll
adc
loop
or
ss
ret
and
inc
pop
pop
mov
push
test
lcall
inc
js
xchg
jae
mov
sub
ret
and
sub
cmp
mov
int
and
xchg
sbb
out
adc
cmp
out
adc
ret
sub
hlt
sbb
out
popl
push
iret
jp
mov
fistpl
in
test
lea
and
push
into
jnp
out
inc
cmp
std
mov
push
mov
mov
xor
fwait
sbb
adc
push
xchg
mov
pop
xchg
sub
jmp
sbb
sbb
xor
scas
push
fwait
push
adc
mov
fisubs
dec
xor
sarb
jno
xlat
or
js
sbb
jp
push
mov
leave
adc
fisubrl
lods
cmp
lods
les
int
nop
and
aaa
xor
inc
jns
jmp
xchg
pusha
push
mov
sbb
scas
btr
jne
pop
divl
es
mov
dec
aam
adc
and
adc
inc
xchg
jmp
or
cli
rorb
ficompl
pop
jo
mov
pop
leave
out
lret
insb
adc
mov
jno
jmp
xchg
mov
push
cmc
imul
ds
popa
mov
jbe
out
jae
push
aad
push
or
pop
cmp
test
fwait
pop
mov
mov
lret
sub
jmp
jle
add
dec
push
push
pop
pop
imul
sbb
outsl
jno
aaa
mov
pop
call
push
xor
inc
in
pusha
cli
sub
push
adc
fwait
adc
mov
xchg
out
pop
rclb
outsb
pusha
pushf
test
stc
dec
lea
lods
cltd
aam
xor
and
int3
adc
sub
mov
cmp
xor
mov
hlt
pop
sarb
out
add
rorl
mov
and
jmp
dec
inc
nop
jecxz
or
scas
push
inc
iret
adc
ret
shll
cli
je
lret
sar
jb
push
stos
nop
adc
shll
inc
sub
lret
arpl
jno
jge
in
lcall
inc
sbbl
loop
lcall
pop
adc
loopne
jg
and
or
cwtl
das
xor
mov
leave
cli
xchg
movsb
xor
cmp
inc
and
mov
mov
xchg
cmpsb
out
mov
ljmp
or
std
or
cmp
xchg
xchg
push
adc
xchg
sub
mov
inc
cmp
cmp
std
rorb
sub
movsl
mov
lret
ja
fbstp
sbb
or
and
or
popa
mov
add
cmp
iret
clc
ret
imul
mov
stc
aas
lods
adc
test
xor
pop
push
pushf
aas
loope
aaa
pop
mov
xchg
sbb
dec
aad
popa
pop
adc
and
inc
imul
out
arpl
adc
mov
fcmovnbe
enter
insl
mov
add
fcomi
sub
fidivs
mov
int3
aaa
or
test
cld
pop
sub
sbb
ret
push
mov
push
data16
scas
or
in
fildll
hlt
jmp
fld
or
mov
cmp
sbb
shlb
call
arpl
fiadds
dec
xchg
and
test
jns
xchg
or
add
rclb
adcb
mov
xchg
pop
mov
cmpb
or
sbb
mov
repnz
lds
inc
outsl
pop
movsl
add
cmp
imul
lahf
insl
xor
adc
adc
mov
or
lods
das
rorl
loope
mov
push
xor
leave
cli
fsubrl
adc
mov
adc
push
adc
jbe
sahf
cmp
ret
or
adc
xchg
aaa
cmp
or
xchg
xor
outsl
push
adc
add
daa
inc
adc
adc
adc
adc
arpl
mov
test
push
inc
lock
leave
xor
pop
adc
aaa
mov
lahf
pop
adc
push
mov
push
out
mov
and
std
das
xor
xchg
add
xor
call
push
mov
addb
fisubrl
mov
mul
cmpsl
ret
xor
outsb
push
mov
mov
inc
xchg
out
mov
xchg
pop
js
arpl
lods
imul
add
sub
xchg
into
pop
pop
xor
pop
cld
pop
aam
pop
jne
fwait
pop
lock
mov
inc
inc
push
insl
xor
leave
pop
insl
dec
adc
sub
adc
sbb
cmpsb
dec
loopne
stos
test
xor
out
bswap
out
sarl
pop
jecxz
mov
xor
ret
jbe
shlb
es
out
push
sahf
jp
dec
xchg
das
faddp
push
inc
jne
fimull
pop
jmp
adc
sahf
negb
xor
and
ja
sbb
cmp
dec
addr16
rorl
inc
out
pop
adc
push
jp
fiaddl
inc
dec
dec
pop
ljmp
adc
addb
mov
aas
xor
cmp
popa
push
mov
sbb
or
inc
rorl
mov
pop
arpl
loopne
andps
or
sub
inc
mov
shrb
enter
sahf
popf
adc
aad
adc
adc
cmpsb
push
fiadds
addr16
adc
jp
mov
and
jno
icebp
call
or
mov
jnp
call
xchg
mov
push
das
push
fwait
imul
adc
popf
mov
aas
mov
stos
int3
add
fwait
mov
push
push
and
sub
jg
mov
jnp
or
enter
mov
sbb
jmp
adc
inc
cmp
lret
js
in
and
scas
sbb
pop
fistl
inc
decl
in
dec
mov
mov
arpl
xor
add
dec
lock
cmp
xor
inc
or
inc
cmp
jns
mulb
sbb
xchg
inc
or
xorl
in
fmul
repz
add
adc
mov
add
insl
jnp
aas
mov
popf
cmp
add
jns
xor
sub
mov
outsb
or
mov
lock
mov
out
outsb
inc
fstpl
mov
jle
mov
enter
insl
jno
sbb
or
jle
mov
cmp
dec
sbb
aas
inc
stos
mov
loopne
push
mov
imul
or
ss
mov
pop
dec
lods
jle
xor
cmpl
cmp
arpl
lret
dec
data16
das
std
inc
fsubp
lcall
and
or
jae
outsl
xchg
xchg
iret
fptan
xchg
lock
sub
jmp
jne
sbb
aas
add
or
stc
and
loopne
inc
mov
xchg
and
sub
mov
icebp
jnp
enter
push
jno
mov
out
addr16
pop
or
test
mov
gs
pop
jp
inc
imul
or
or
xchg
pop
jo
lcall
mov
pop
mov
lret
arpl
call
inc
mov
or
repnz
std
mov
pop
pop
adc
sub
pop
adc
push
dec
repz
xor
loopne
push
jg
test
xchg
mov
and
cwtl
mov
rolb
xchg
dec
into
movsb
scas
xlat
iret
insl
or
imul
aaa
xor
lock
fnstcw
mov
test
std
jne
scas
frstor
and
ret
xor
xlat
xchg
jle
mov
pushf
adc
inc
xor
sbb
ja
insb
cs
xchg
scas
dec
xchg
lods
dec
sahf
mov
in
sahf
gs
adc
inc
enter
daa
cmp
pop
cmp
out
lods
dec
sahf
test
sub
jp
ds
xor
adc
imul
movsb
call
xor
cmp
pop
xchg
fidivs
adc
inc
lods
cs
aad
and
cmp
jle
pop
cli
icebp
out
push
inc
xlat
fstpl
movsb
nop
push
sbb
xor
imul
push
shrl
sahf
mov
in
into
fwait
sbb
ret
aad
cli
xchg
out
int
xor
shlb
cmp
mov
int3
repnz
sub
sbb
js
cmpsb
leave
adc
ds
mov
add
pop
xchg
dec
inc
les
test
and
fldcw
xchg
lods
sbb
cmp
cwtl
and
lret
pusha
jae
out
daa
out
mov
cmp
jecxz
int
xor
leave
outsl
pop
push
in
cmc
cmp
ds
lds
jns
out
psraw
dec
into
push
imul
sub
jp
jo
sarb
dec
in
jbe
fistps
lea
pop
lds
push
or
mov
cld
jo
das
jge
popa
in
xlat
or
add
jge
add
jmp
inc
fidivrl
ret
push
mov
push
inc
pop
lods
es
call
in
adc
js
pop
inc
lahf
lcall
mov
pop
imul
je
mov
mov
sub
xchg
imulb
nop
mov
fsubrl
inc
cltd
scas
addl
sub
insl
addb
dec
bound
int3
movsb
or
imul
dec
lock
rcll
cmp
mov
sub
mov
mov
imul
xchg
jg
mov
jnp
mov
cmp
stos
push
mov
data16
push
pop
and
mov
pop
mov
ret
pushf
mov
pop
fldt
repnz
pop
rorl
or
out
repz
xor
es
sub
sti
bound
cld
adc
ret
mov
and
aam
jmp
mov
insb
in
sub
faddl
fcoml
or
pop
loop
pop
into
les
pop
aam
xlat
test
popa
mov
inc
insb
les
cmp
add
pop
imul
enter
push
lahf
ret
fwait
cmp
les
repz
sbb
pop
or
mov
lock
aaa
xorb
repnz
pop
xchg
dec
icebp
pop
std
jae
or
andb
pop
pop
orb
xor
inc
add
int
shlb
leave
test
and
or
adc
test
mov
outsb
fidivl
mov
mov
repz
fidivrl
clc
clc
sub
mov
adc
out
mov
lcall
cmp
cmp
enter
fwait
enter
push
and
pop
ficomps
cli
ror
dec
call
adc
or
xor
into
push
pop
jns
pop
rcll
into
imul
insb
push
outsb
out
pop
movsb
pop
mov
and
int
adc
mov
lds
inc
mov
out
pop
cmp
loopne
sbb
adc
xchg
movsl
push
xor
or
imul
xor
loope
fwait
dec
hlt
sub
aaa
mov
jmp
adc
inc
insb
cmp
or
bound
mov
push
and
cs
insl
push
icebp
dec
mov
nop
iret
fwait
inc
aad
sbb
popa
bound
movntq
es
out
inc
in
call
pop
outsb
out
mov
lods
or
lock
xchg
adc
xor
insl
xchg
or
inc
out
add
shrb
cwtl
popa
movsl
mov
mov
xchg
sub
lahf
cmpsb
loopne
inc
xor
arpl
add
dec
xchg
lods
mov
sub
rcrl
jp
sti
or
and
ret
xor
push
adc
sbb
mov
dec
mov
popf
push
jns
aas
jnp
dec
xchg
mov
mov
sub
jbe
js
push
adc
test
js
stos
shlb
aam
sarl
scas
mov
mov
and
adc
xchg
pop
pop
xor
sbb
inc
fdivrs
push
adc
and
pop
stos
xor
mov
mov
jle
mov
mov
es
iret
sbb
pusha
xor
xor
mov
pop
cmp
call
push
jb
aas
sub
scas
lods
stc
adc
jno
xlat
outsl
fsubr
in
cmp
xchg
jge
sbb
or
stos
adc
and
sbb
pop
insl
pop
mov
xor
lods
dec
push
ja
or
in
rorl
cmpb
popf
mov
scas
mov
movsb
jnp
jne
xchg
jmp
xor
cmp
cltd
cmpsl
sbb
fcmovnbe
rcl
inc
scas
out
fwait
mov
pop
out
inc
mov
shll
out
dec
adc
adc
push
arpl
xlat
sbb
cmc
jb
rcrb
or
aam
mov
xchg
psubusb
repnz
mov
cmpl
push
pop
and
adc
cmpsl
cld
sbb
push
fstpt
adc
popf
gs
cmovne
adc
ror
clc
jp
sbb
sahf
mov
sub
mov
fwait
in
int3
add
sbb
ret
jne
mov
movsb
sub
sub
xchg
inc
cmp
popf
mov
lock
cmp
xchg
fwait
push
aad
push
adc
sbb
sub
xor
fisubs
movsb
xchg
data16
dec
sub
or
push
mov
scas
add
imul
mov
enter
les
pop
jbe
mov
punpcklwd
ljmp
shrb
inc
or
jbe
sbb
jmp
xor
sbb
mov
sub
insb
mov
dec
sub
add
imul
popa
mov
nop
popa
stos
xchg
mov
jnp
add
push
cmp
aad
popa
ret
xchg
fstpt
fs
repnz
js
gs
cmp
mov
xchg
daa
adc
out
add
push
adc
mov
cli
xchg
sbb
pop
jo
xchg
push
push
test
pushf
mov
adc
sti
insb
jl
adc
mov
cmpsb
pop
fisttpl
int3
cmp
or
xchg
fimull
movsb
xchg
ds
cmp
test
scas
out
mov
fldl
jno
xor
les
cmp
shrb
mov
outsl
aad
cmp
mov
lods
mov
fwait
mov
jnp
dec
xchg
das
aad
repnz
mov
imul
ret
repz
xchg
cmp
aad
pop
aaa
jno
scas
leave
pop
je
es
cmp
jecxz
imul
push
xchg
das
aad
jge
cmpsb
fstpl
sbb
push
mulb
testb
std
mov
mov
sbb
xchg
jl
add
fsubl
stos
loopne
adc
sbb
dec
sahf
dec
rorb
jb
enter
sbb
pop
jp
jecxz
inc
fdivl
xchg
cmpsb
test
stos
insl
fdivrs
cltd
dec
je
popf
mov
aaa
imull
sahf
mov
cmpsb
insb
push
xrelease
jns
aas
fs
xchg
and
aaa
cmp
loopne
cs
mov
aad
loope
mov
scas
jge
out
mov
das
cwtl
jmp
adc
lods
and
ror
gs
inc
cmp
xchg
sub
mov
int
lods
outsb
and
xor
out
push
bound
leave
xchg
pop
jmp
cmp
cs
out
jmp
fldcw
ds
push
sub
repz
insb
mov
and
in
shlb
call
test
xchg
loopne
int
inc
jl
jne
jp
fistl
in
lret
cltd
test
fistl
push
fs
popf
sub
mov
or
mov
out
xor
mov
and
shlb
lret
stc
repz
inc
push
jb
xlat
dec
cmp
sub
hlt
or
daa
test
lret
out
int
sub
pop
xchg
jae
push
inc
xchg
lret
jp
dec
incb
pusha
xchg
shrl
jne
mov
nop
call
arpl
and
xlat
sub
push
jl
xchg
cmp
cwtl
jmp
adc
pop
xor
or
sahf
xchg
pop
push
test
jmp
sarl
mov
mov
dec
cmp
js
cwtl
das
mov
pop
xchg
lahf
xorl
cwtl
jmp
adc
das
bound
jns
imulb
dec
enter
pop
scas
cmp
push
push
jno
inc
jnp
cmp
mov
pop
es
xor
mov
add
xor
lds
aaa
sbb
int
jmp
adc
xlat
lds
dec
subl
test
aas
insb
lret
sahf
cmp
push
xor
movsb
sub
into
mov
lcall
jae
loopne
data16
and
out
mov
aam
adcl
lea
sbb
pop
lahf
sbb
mov
nop
jmp
dec
dec
adc
rorb
mov
add
push
cmp
into
ds
sub
jb
pop
fs
lods
jle
in
mov
jb
stos
ja
jge
mov
add
pop
insl
lret
adc
loope
repz
incl
adc
arpl
adc
xor
imul
mov
adc
mov
mov
push
mov
or
cwtl
jecxz
aaa
fsubrl
jne
repz
inc
push
dec
fldenv
dec
pop
and
adc
pop
rcll
xlat
xchg
repz
mov
push
jne
mul
cwtl
adc
cmp
cmpsl
mov
sbb
insb
fdivs
icebp
cs
insl
scas
push
lahf
out
mov
lret
mov
sub
mov
mov
sub
outsb
repnz
iret
fwait
inc
xlat
sub
jmp
dec
imul
mov
out
mov
out
and
pop
out
xchg
jp
push
sub
xor
sar
xor
and
fs
sbb
sbb
mov
lds
ljmp
je
fsub
ljmp
dec
push
and
sbb
push
push
jmp
sbb
adc
pop
outsl
pop
mov
push
pop
cmp
add
test
mov
setle
xor
sbb
icebp
outsb
in
insl
scas
push
lahf
out
mov
lret
mov
sub
cmp
inc
jnp
xchg
ja
add
dec
ret
in
repnz
dec
dec
imul
mov
adc
sub
outsl
outsl
sbb
fs
push
ds
inc
adc
adc
mov
pop
adc
repz
mov
adc
lahf
adc
pop
leave
jle
cwtl
arpl
adc
sbb
fdivrp
je
adc
cmp
cli
movsb
pusha
pop
adc
mov
pop
adc
pop
dec
popa
lods
mov
mov
cld
dec
push
ds
inc
les
adc
mov
pop
adc
repnz
jo
insb
pop
adc
cmp
mov
icebp
in
pop
adc
in
and
mov
adc
ret
imul
aam
pop
adc
out
mov
jb
mov
adc
push
xor
iret
push
sub
pop
adc
inc
es
stos
cmp
inc
mov
adc
add
xchg
cmp
rcrb
sub
pop
ja
adc
aad
xor
mov
adc
clc
cs
jl
adc
adc
jbe
adc
add
movsb
hlt
imul
xor
or
mov
dec
in
pop
adc
sbb
jecxz
js
inc
cmp
addb
mov
sbb
inc
fsubl
cmpsb
and
xchg
pop
adc
inc
sbb
push
sub
dec
lea
adc
push
pop
mov
add
mov
inc
and
jmp
adc
mov
lea
inc
xchg
push
std
aad
int
cmovge
jmp
insb
cmp
ficoms
cmp
lcall
rorl
ljmp
les
ficompl
test
testb
push
cmpsb
scas
cli
repnz
les
sub
dec
mov
add
lret
jg
fisubrs
arpl
imul
mov
add
fistl
sbbb
jo
pop
adc
inc
adc
xchg
ret
sbb
push
push
mov
stc
jne
fwait
push
xlat
bound
imul
mov
sbb
fldl
nop
out
adc
xor
pop
nop
adcl
cs
or
ss
mov
mov
add
cmp
jo
pop
adc
cmpsl
xchg
adc
std
in
sbb
mov
mov
push
fmul
adcb
hlt
jno
xchg
in
aad
xor
cmp
jecxz
push
xor
jae
dec
adc
pop
imul
adc
ret
loop,pt
add
dec
xchg
fstps
sahf
pop
adc
int3
loopne
adc
sahf
pop
adc
dec
pop
mov
sbb
test
xor
push
adc
out
xchg
dec
xchg
cmpl
push
push
dec
movsl
out
mov
jns
out
push
fstpl
sub
xor
or
dec
push
and
sbb
push
aas
add
idivb
inc
pop
cmp
insb
mov
ljmp
dec
push
push
pop
sbb
push
dec
pop
sbb
adc
push
aad
cmpsb
stos
sahf
dec
insl
fdivs
pop
adc
sbb
in
sub
and
sub
fs
jnp
ret
icebp
out
sub
adc
mov
xchg
es
mov
inc
test
inc
xchg
daa
andb
cmp
das
pop
jne
mul
jne
stc
add
insb
dec
pop
adc
mov
aam
or
dec
enter
in
push
xchg
pop
mov
mov
dec
xchg
dec
insb
setne
mov
lcall
out
mov
ljmp
int
mov
push
adc
push
mov
cmc
xor
sbb
loop
mov
aas
pop
out
ret
imul
shl
jge
mov
sbb
icebp
out
sbb
ffree
xchg
jecxz
mov
mov
jmp
push
dec
loope
jl
dec
lret
fdiv
push
sub
ret
imul
sub
pop
jae
mov
jo
adc
int3
fidivl
repz
dec
stc
xor
sti
xor
jo
adc
xchg
mov
icebp
in
cmpsl
mov
jmp
mov
jbe
add
jo
adc
xchg
cmpl
imul
mov
pop
mov
mov
pop
adc
sbb
xchg
out
sub
scas
mov
lods
xchg
sar
mov
add
sub
test
lahf
push
cmp
lcall
and
pop
jae
stos
arpl
mov
jo
dec
mov
xlat
fsubrs
push
std
mov
pop
div
push
inc
adc
test
fmuls
jmp
adc
inc
sub
loopne
dec
inc
mov
mov
inc
sbb
and
dec
lahf
mov
dec
sbb
jle
xor
addl
lcall
notb
inc
pop
and
shll
in
xchg
cmp
adc
jne
pop
je
out
mov
jge
sub
les
test
jo
mov
mov
fisubrs
jns
and
into
sub
adc
cmp
xchg
xchg
xchg
add
pop
dec
jno
loopne
and
repz
cmpsl
sub
and
sub
xchg
xchg
in
js
cmc
data16
mov
adc
repz
cmp
sbb
inc
xchg
or
pop
paddsb
loop
push
popl
xchg
subl
mov
dec
mov
sbb
inc
and
aam
loop
dec
pop
mov
cmp
mov
cmpsb
not
sbb
pop
test
stc
movsl
nop
and
js
iret
cmp
adc
incl
dec
adc
pop
jl
push
out
bound
sbb
lods
xchg
xor
mov
loope
jbe
push
sub
outsl
cmc
adc
mov
mov
stc
minps
mov
adc
or
shl
sub
mov
rorb
sbb
pusha
mov
mov
push
xchg
push
imul
fwait
dec
sbb
loopne
ret
div
out
mov
xchg
mov
test
gs
imul
push
and
push
xchg
hlt
cmp
das
pop
mov
iret
mov
jmp
lea
dec
or
scas
mov
push
mov
mov
push
and
daa
adc
adc
xor
mov
sub
mov
int
cli
loop
mov
mov
loopne
addr16
shll
fnstenv
fildll
mov
repnz
push
aad
inc
in
and
nop
push
cmc
insl
xchg
or
ss
scas
inc
sbb
push
jp
mul
es
mov
mov
test
in
jmp
add
cwtl
les
aaa
xor
ffree
out
es
xchg
mov
pop
sbb
sahf
dec
rorb
cmp
jecxz
or
cmpb
jb
jnp
lods
or
sub
out
push
pop
aas
xor
xchg
jg
repnz
stc
jno
out
xchg
push
mull
adc
pop
repnz
xchg
jae
inc
sub
jp
push
imulb
sbb
lds
push
adc
and
pop
sub
jnp
lcall
mov
fwait
xor
pushf
mov
adc
sub
stos
popf
add
adc
cli
or
mov
outsb
push
aaa
xor
addb
lods
xchg
je
fisttpl
cs
sbb
out
scas
or
dec
sub
push
cmp
xchg
test
pop
call
adc
aad
fistpl
push
sar
mov
test
mov
adc
rclb
jl
adc
sub
pop
mov
push
jg
mov
push
mov
fdivl
jl
repnz
and
sbb
adc
ja
xor
inc
popf
push
fcompl
loope
mov
adc
jb
in
xor
jl
adc
xchg
scas
mov
daa
in
add
cmp
dec
lock
jno
xor
scas
out
scas
movsb
xor
test
pop
sub
mov
in
popa
notb
lods
jecxz
xchg
fnstcw
pop
xor
mov
push
ss
mov
mov
dec
xchg
js
xchg
dec
dec
jae
lcall
add
inc
orl
test
cmpsb
adc
and
fs
stc
and
push
adc
xchg
jae
push
jno
repnz
test
mov
icebp
aad
pushf
mov
adc
mov
sub
lock
jl
adc
mov
inc
xchg
rcrb
mov
xchg
pushf
clc
cs
xor
jle
lret
decb
and
pushf
insb
icebp
xchg
clc
xlat
push
and
push
adc
add
ja
test
pop
mov
unpckhps
push
pushf
mov
adc
aam
insb
jl
adc
cli
xor
xlat
mov
stc
push
out
push
jl
popf
repz
pop
and
shl
repnz
sub
sahf
inc
adcb
sub
pop
mov
jecxz
lret
fsubrl
and
push
adc
jnp
push
inc
cli
test
scas
and
pop
leave
cltd
lcall
mov
adc
sub
insb
jl
adc
mov
mov
sbbb
out
fsubp
sahf
jl
xor
iret
push
mov
cs
in
pop
mov
pop
int
cmp
jg
fists
or
adc
pop
add
push
adc
xchg
outsb
test
pushf
cmp
imul
jne
ficompl
sbb
and
push
cmp
jl
adc
cld
xor
lods
or
jp
int
xor
mov
cs
xchg
fisubs
inc
shrl
add
lds
repz
cmp
outsl
iret
fwait
dec
neg
dec
sbb
in
hlt
mov
xchg
sub
pushf
mov
adc
sub
cmpsb
xchg
insb
jl
adc
push
rorl
pushf
xor
outsb
push
loop
lods
pop
mov
adc
in
das
rcrb
dec
insb
sahf
sbb
mov
std
xor
pop
cmp
push
mulb
repz
lret
lds
pop
mov
cli
lock
js
cmp
daa
xor
mov
sub
xchg
scas
or
aas
negl
mov
jb
dec
xchg
pop
jb
daa
lds
dec
in
in
fwait
ss
adc
jb
mov
dec
aas
in
add
pop
mov
aaa
mov
cmpsb
jbe
pop
fidivl
repnz
mov
push
sub
sbb
dec
adc
or
ss
mov
repnz
xor
insl
ret
jns
cmc
fimull
das
xor
xchg
cs
cs
insl
fdivs
lea
xor
les
xchg
mov
adc
jmp
push
adc
xchg
outsb
test
lds
jmp
ficompl
sbb
and
pop
cmp
repnz
adc
sti
xor
push
lods
or
jnp
int3
cltd
ss
cmp
add
orb
xor
shll
mov
push
cld
test
sbb
test
or
xchg
jae
inc
popf
jb
sbb
jg
and
fwait
es
and
xlat
cmp
enter
xor
xchg
stos
mov
cmp
cmp
aaa
enter
and
int3
adc
or
ja
lret
out
fs
call
daa
pushf
push
pop
push
in
add
pop
idiv
cwtl
adc
or
lds
sbb
out
fdivl
fimuls
bound
xchg
sti
rcrl
fs
mov
pop
jae
cmp
and
sbbl
in
add
fidivs
addl
jae
jmp
enter
sub
xchg
ss
lods
sbb
outsb
push
addr16
mov
sbb
ljmp
push
jp
rol
fsub
mov
jns
mov
jge
add
add
loop
cld
popa
xor
xor
mov
nop
adc
stos
xchg
push
fstpt
cld
or
jle
inc
pusha
sub
push
outsb
inc
movsl
cld
js
aaa
dec
xor
cwtl
filds
popf
cli
adc
pop
sub
enter
xchg
xor
and
scas
in
test
in
and
icebp
pop
data16
fdecstp
jns
icebp
pop
xchg
jne
lahf
shrb
sti
stos
dec
shll
lret
call
push
cmp
stos
adc
mov
cmp
pop
test
outsl
push
sbb
shl
icebp
xchg
xlat
mov
pop
pop
fcmovnb
inc
out
stos
popf
lea
out
sub
scas
ja
xor
and
jge
mov
sbb
inc
sbb
mov
out
daa
iret
dec
fdivrp
pop
lcall
fchs
pusha
mov
bound
sub
bound
push
mov
push
lret
popf
call
adc
fsubp
xchg
mov
cmp
iret
in
or
cld
mov
fidivl
xlat
ljmp
mov
out
mov
fiaddl
test
fstl
movsl
push
push
ja
xchg
in
fcoms
mov
jl
in
mov
push
je
mov
outsb
adc
mov
sahf
mov
clc
imul
or
fwait
lahf
jp
stos
xchg
das
mov
mov
inc
in
scas
shll
dec
mov
and
ss
xchg
icebp
mov
movsb
addb
ds
inc
mov
in
add
xchg
das
paddsw
mov
dec
dec
imul
aas
or
cmp
mov
lahf
insl
push
pop
jg
mov
xchg
frstor
arpl
push
ret
xorb
ljmp
dec
push
sbb
dec
adc
mov
jb
mov
lods
sar
cltd
push
repz
out
add
xor
out
xchg
add
int3
lcall
or
mov
mov
adc
roll
jle
ds
pop
insb
ljmp
xchg
sub
push
cmpsb
add
mov
inc
fsubl
mov
cli
xor
push
es
pop
fsubrl
inc
mov
mov
mov
pop
and
xchg
imulb
and
and
adc
insl
insb
cmp
jecxz
sbb
inc
out
sbb
dec
scas
xor
xchg
inc
pop
adcb
test
pop
xchg
daa
xor
mov
cmc
jns
shl
mov
repnz
xchg
push
push
mov
lret
mov
or
outsl
xchg
xor
rcl
add
sbb
ljmp
fwait
or
xor
roll
lret
icebp
rcrb
mov
in
xor
test
push
mov
orps
xlat
divb
inc
jns
mov
jle
push
sbb
nop
lea
push
inc
pusha
fdivrs
popf
jnp
inc
in
push
ljmp
inc
inc
cs
cltd
pop
adc
stos
dec
jmp
test
aam
push
add
dec
outsl
cmp
hlt
jecxz
adc
add
or
aas
sbb
test
arpl
xchg
mov
rolb
jne
lret
cwtl
loopne
das
jle
or
in
pop
mov
outsl
addr16
xchg
sti
fwait
call
fwait
adc
pop
sbb
lock
mov
stos
stos
cltd
bound
mov
popw
fcmovnu
pop
scas
inc
cwtl
lds
out
xor
cld
aam
adc
mov
lahf
inc
jb
repnz
fptan
mov
push
add
sub
pop
jns
sub
sub
cmpsl
out
xchg
sahf
xchg
into
mov
lds
jo
adc
xor
scas
pusha
lods
and
mov
pushf
ret
cmp
dec
pop
data16
mov
lock
pop
ret
pop
xlat
enter
pop
insb
add
sarl
push
loop
into
fdivs
push
sbb
mov
dec
xchg
or
loopne
and
sbb
test
popf
ret
push
fwait
or
jnp
aas
out
pop
or
lea
sub
mov
push
dec
dec
iret
fadd
sbb
int3
xchg
jae
call
pop
add
nop
push
mov
pop
inc
xchg
in
xchg
and
dec
xor
jne
adc
push
hlt
jmp
test
popf
inc
push
lds
adc
jmp
cmp
jb
movq
mov
subl
adc
call
jae
mov
lret
in
sbb
addr16
les
mov
inc
pop
jo
xlat
lods
pop
mov
rorl
ret
ljmp
cld
rol
gs
lea
imul
xor
fisubl
dec
in
push
cltd
ss
fisubl
xchg
shrb
mov
cmp
stc
repz
jo
adc
jns,pt
pop
ds
ss
and
aaa
mov
rep
addr16
data16
pop
es
out
mov
lcall
insb
inc
mov
int3
adc
cmpl
cmpsb
dec
xor
test
orb
mov
daa
mov
scas
or
dec
pop
inc
sbb
es
mov
or
or
aaa
insl
dec
mov
das
mov
and
jns
insb
push
jns
jge
pushf
cmp
dec
adc
cmpsb
xor
js
leave
jno
call
gs
insb
mov
xor
aam
push
adc
imul
sbb
cmpsl
ss
lods
cs
sbb
xchg
dec
mov
dec
loope
imul
jl
insl
jl
scas
and
lcall
loopne
mov
cmp
int3
push
mov
leave
xchg
and
les
jmp
cli
ror
gs
dec
sbb
fiaddl
xchg
insb
fisubl
push
ljmp
jb
add
push
xor
mov
jns,pt
pop
ds
mov
cld
jge
in
pop
xor
rol
xor
push
adc
test
arpl
add
mov
das
ficoms
js
rcrl
jae
fistps
sub
jo
test
push
adc
int
mov
arpl
lods
pop
aaa
out
mov
mov
xchg
mov
adc
dec
sbb
in
adc
out
cltd
pop
push
ds
mov
inc
inc
jp
into
adc
outsb
xor
adc
adc
jb
mov
mov
mov
mov
flds
outsl
jo
pop
adc
xor
mov
sub
insb
popf
sub
fdivrs
sahf
int
add
ds
pusha
and
jmp
cli
imul
lods
scas
cmc
adc
aad
test
ss
adc
test
hlt
aas
lret
add
aam
mov
pop
adc
test
arpl
xchg
mov
xor
push
adc
mov
or
cmp
add
mov
pop
ss
adc
sbbb
js
jecxz
fsub
dec
jl
iret
push
and
adc
fistl
ret
push
pusha
dec
push
leave
adc
lahf
jmp
cltd
cs
sbb
xchg
adc
aaa
aaa
push
sti
imul
jg
dec
xor
xchg
pop
or
push
pop
addr16
mov
scas
xor
dec
jg
dec
test
pop
add
jmp
test
push
decl
jmp
cmpsb
push
cmc
cmp
xor
mov
popa
lea
sbb
sbb
es
cmp
adc
push
adc
xor
xor
stos
mov
call
stc
shrb
lahf
adc
adc
adc
jbe
ljmp
and
out
inc
fmull
aaa
pop
mov
mov
push
ret
das
out
push
outsb
into
pop
sti
add
ret
aaa
jge
leave
in
cmpsl
pop
mov
pop
lods
mov
xchg
sbb
xor
jbe
shlb
cltd
insl
sub
mov
lcall
dec
scas
cltd
jbe
fldt
cmc
insl
jae
pop
ficomps
push
mov
xor
dec
add
xchg
dec
sbb
push
adc
repz
add
dec
dec
inc
push
and
jb
add
fstl
test
cmp
mov
pusha
dec
lret
fdiv
pop
ss
jbe
xchg
mov
mov
gs
stos
xchg
es
inc
xor
popa
ret
xchg
daa
std
dec
xchg
out
mov
imul
pop
jecxz
cmc
test
gs
daa
xor
xchg
dec
inc
fprem
pop
sbb
mov
sbb
sbb
fistl
mov
dec
or
aad
ficompl
loope
ffree
popa
jecxz
mov
inc
pop
xor
sbb
adc
fs
push
jl
loop
insl
addr16
js
xchg
pop
xor
mov
add
fnstenv
cmp
dec
pop
adc
stc
mov
ret
push
lods
clc
xor
mov
mov
shll
daa
shl
rcrl
movsb
addr16
mov
cmp
or
loopne
jnp
xchg
dec
fsubs
lcall
enter
cmp
push
repz
in
mov
test
lcall
and
sbb
out
add
sti
movsb
ret
fldenv
loope
add
xchg
outsb
repnz
iret
fwait
inc
out
std
enter
loope
addb
and
mov
xor
jns,pt
dec
int
inc
xlat
xchg
sbb
mov
test
add
sti
aad
adc
fsts
add
mov
or
adc
insl
add
or
push
xor
fstpt
sub
ljmp
mov
loope
imul
jae
shll
push
outsb
xchg
lcall
int
lods
cltd
outsl
fisubl
xchg
inc
pop
xor
push
jo
leave
xchg
pop
push
mov
sbb
sub
or
arpl
test
pop
mov
and
in
add
fnstenv
rolb
ret
dec
jnp
dec
rep
sub
out
lods
cmp
or
xor
push
gs
xor
fs
sbb
xor
loopne
xchg
imul
call
xor
sbb
addr16
aad
ja
jmp
and
push
lea
xchg
dec
sti
rolb
sub
ja
add
xchg
push
sub
ret
call
scas
out
pop
sahf
inc
int
inc
movsb
sbb
hlt
in
mov
cmp
push
adc
pop
clc
cmp
outsb
jbe
lods
pop
icebp
inc
cmp
leave
add
and
add
bound
xchg
aas
jno
cmp
mov
mov
out
push
jo
ljmp
pop
adc
push
dec
pop
cmc
sarb
imul
push
and
out
inc
push
add
mov
pop
adc
mov
dec
clc
xchg
pop
mov
incb
in
push
addr16
fcoml
mov
pop
adc
imul
xchg
push
test
cwtl
outsl
fldt
push
ss
sub
push
movsb
xchg
enter
adc
jnp
ret
push
dec
jmp
xchg
into
jns
inc
ds
or
les
scas
or
pop
lods
out
test
es
out
pop
xchg
movsl
in
fmuls
sub
gs
or
repnz
cmp
mov
dec
jge
insl
jns
int3
jge
imul
lods
decb
add
repz
stos
jae
scas
rcr
adc
je
push
ror
push
mov
mov
sbb
cmc
call
mov
adc
in
push
rcrb
add
fdivrs
inc
iret
push
mov
in
js
cwtl
inc
and
dec
jb
or
push
or
insb
push
cmp
dec
sahf
dec
fcomi
icebp
pop
sub
aad
mov
mov
cmp
push
adc
xchg
bound
inc
leave
mov
mov
jno
pop
xor
inc
outsl
fldcw
xchg
and
and
cmp
add
cltd
rorl
bound
xor
js
pop
call
aas
popa
fdivs
jmp
and
pop
in
pop
mov
adc
or
sbbl
loopne
mov
push
push
xor
sub
cs
mov
add
and
aaa
fidivrl
fstl
movsb
gs
adc
nop
and
sub
cmp
jbe
popf
pop
gs
xchg
jbe
cltd
stc
xchg
cld
out
lcall
sub
xor
aas
xchg
pop
mov
sub
pop
mov
nop
pop
mov
mov
mov
dec
xchg
das
fldl
in
movsl
sub
inc
lret
stos
inc
imul
lea
and
leave
jle
in
pop
adc
sbb
fiadds
pop
adc
in
loope
adc
cli
insb
mov
adc
mov
pop
adc
pop
dec
inc
lods
mov
call
and
adc
popw
adc
mov
pop
adc
repz
bound
adc
imul
xor
pop
adc
sbb
fdivrp
mov
adc
mov
cli
call
icebp
lods
sbb
xchg
lretw
add
and
jne
in
repnz
mov
pop
cs
test
dec
mov
push
call
xchg
rolb
into
idivl
xchg
sub
out
movlps
jmp
je
mov
inc
pop
xor
imul
pusha
push
insl
test
outsl
inc
xlat
sahf
pusha
xchg
fisubl
stos
mov
hlt
out
pop
aam
fdivrs
ret
jae
in
das
mov
and
lea
pop
enter
and
xchg
shrl
inc
in
add
lds
fdivrl
lods
nop
cmp
mov
xchg
int3
fdivrs
and
stc
add
movsb
int
push
jo
pop
adc
ljmp
jo
adc
subl
addr16
pop
repnz
xchg
or
xlat
lds
pop
mov
lea
cmp
mov
sub
adc
insb
ret
xor
repz
loopne
jno
nop
insl
in
xor
cmp
push
adc
cld
test
lcall
cmp
in
loopne
lock
loop
add
shll
in
sti
loopne
sahf
mov
pushf
inc
clc
add
pop
jp
shl
lcall
mov
add
sub
jo
pop
adc
cmpsb
inc
pop
movsb
jnp
scas
push
jo
adc
rorb
lods
push
pop
push
clc
inc
call
fiadds
push
xchg
inc
add
mov
bound
cmp
bound
gs
enter
jmp
adc
dec
jo
adc
sbb
rclb
mov
adc
xor
int3
mov
enter
xchg
pop
adc
mov
insl
stc
rolb
inc
repz
jnp
shlb
adc
loopne
sahf
idivl
pop
imul
or
das
xor
repnz
mov
lds
movsb
mov
je
xchg
dec
or
jmp
sbb
adc
inc
fwait
inc
sub
loopne
movsl
repz
pop
or
or
cmc
outsl
mov
movsb
adc
mov
xchg
les
fldt
sti
pushf
sbbl
xchg
lock
leave
adc
push
jo
adc
test
xchg
repnz
jl
adc
xchg
loop
mov
jbe
adc
or
mov
popw
adc
aam
add
dec
sahf
stos
movsb
jae
adc
test
sbb
shlb
adc
js
ds
dec
xchg
mov
aas
push
cmc
mov
or
fiaddl
and
int3
jb
xor
push
xor
mov
and
cmpsl
lahf
jnp
jae
push
enter
jg
add
xchg
shll
jecxz
mov
adc
popa
push
enter
pop
jb
push
fnstcw
fistpll
lods
movsb
dec
xchg
arpl
cmp
sbb
dec
pop
adc
lds
out
jns
repz
xor
or
pop
aas
ret
and
pop
pop
xor
pop
jo
pop
call
cmpsb
pop
fstpt
adc
test
sahf
shlb
adc
mov
mov
out
cmp
jb
mov
pop
lods
xlat
sub
dec
fstl
push
movsb
xor
pop
ja
clc
clc
dec
insb
fucomi
xchg
cltd
jbe
xchg
mov
scas
xor
and
push
mov
aad
popa
ret
xchg
ljmp
jle
jns
mov
dec
xchg
push
sti
pusha
mov
xor
mov
enter
inc
pop
xor
outsb
nop
addr16
lahf
push
movsl
cmp
outsb
out
pop
pop
test
js
xchg
jle
mov
imul
data16
and
xchg
and
daa
lret
test
sahf
mov
add
pop
mov
jo
pop
adc
or
pop
and
lcall
out
mov
mov
xchg
mov
aaa
push
and
lret
pop
adc
add
adc
add
mov
push
jne
and
fsubr
dec
ja
sub
add
and
ljmp
pop
mov
fcoms
fwait
adc
push
sub
sti
push
sbb
loop
push
xor
jmp
cmp
cmpsl
cli
cltd
out
pop
jg
int
in
pop
dec
push
imul
out
test
cs
leave
adc
cld
sub
sbbb
jg
sub
rcl
icebp
mov
cwtl
jbe
aaa
and
aad
inc
push
inc
enter
arpl
shl
mov
imul
and
sbb
mov
adc
dec
inc
les
cmp
arpl
add
xor
fbstp
jo
pop
adc
push
das
dec
clc
sbbl
std
scas
adc
jnp
xchg
andl
mov
dec
lcall
jp
adc
xchg
jno
xchg
daa
push
stc
xchg
jno
sub
dec
cmp
dec
sub
daa
out
pop
dec
fmull
jmp
js
rolb
ja
test
leave
cmp
rcr
add
cld
loopne
inc
fsubrl
gs
sbb
sub
adc
inc
or
jne
aaa
push
testl
enter
enter
lds
ret
and
adc
push
push
dec
into
mov
je
or
push
sbbb
insb
pop
adc
push
cld
xorb
hlt
stos
push
jmp
push
mov
cld
int
sub
addl
mov
pop
jecxz
sub
ljmp
pop
ss
arpl
add
mov
lret
push
dec
pop
adc
les
pop
loopne
aas
sub
aas
xor
ja
das
mov
xor
loope
loope
sbb
add
lret
mov
mov
test
pop
adc
inc
int
call
jo
adc
mov
xchg
sub
sbb
loope
mov
pop
cs
mov
sub
cmp
and
divps
mov
jae
adc
loop
cmp
loope
je
cmpsb
dec
add
pop
push
inc
jge
insb
es
and
mov
sbb
repnz
pop
adc
sbb
xchg
jg
and
inc
mov
inc
jo
pop
adc
dec
fisttpll
mov
movsb
cmp
lahf
mov
repz
jmp
and
mov
das
push
sbb
jmp
out
xchg
bound
jae,pn
jmp
rcl
aaa
dec
enter
in
inc
pop
cmp
divps
mov
addb
insl
fidivl
mov
xchg
sub
sar
gs
repz
jnp
jae
push
enter
jg
sbb
js
cmp
jo
mov
sarb
push
std
xchg
cwtl
outsb
xchg
shlb
add
dec
das
and
insb
or
cli
jo
pop
adc
mov
xchg
jg
inc
xlat
aad
lret
stc
xchg
cld
out
lcall
xor
aas
xor
push
mov
leave
xchg
and
adc
mov
xchg
sub
jns
insb
push
sti
mov
jns
out
jmp
mov
cs
sbb
loope
pop
lds
or
or
popf
outsb
imul
orl
fisttps
loop
mov
repnz
and
stos
push
aam
mov
test
xor
hlt
xchg
fstpl
mov
xchg
jmp
xchg
js
inc
enter
insb
movsb
inc
repz
lcall
inc
popf
mov
and
dec
inc
ljmp
lret
dec
push
cmp
lahf
jns
dec
lea
ret
xrstor
dec
out
stc
cmpsb
fiadds
jg
fcomp
push
lcall
xchg
cmp
jb
scas
sbb
pop
adc
scas
add
lods
sbb
in
cmp
pop
fpatan
mov
stos
push
and
int3
sbb
pop
push
lds
pop
adc
pusha
fldenv
fs
jno
ror
inc
xchg
and
mov
or
in
aas
loope
dec
bound
inc
orl
pop
js
pop
adc
jecxz
jo
adc
ds
rcl
sahf
mov
push
in
inc
paddd
dec
gs
and
in
mov
in
pop
adc
mov
movsb
fnstsw
and
ss
and
jno
rcl
mov
adc
sti
sarb
add
pop
jo
jns
orl
lods
jmp
dec
mov
sbb
inc
sub
repnz
push
popl
fstpl
jmp
js
rolb
ja
mov
or
cli
inc
push
xchg
rorb
test
sahf
cmpsl
stc
sub
ljmp
mov
fisubrl
ret
dec
incb
xchg
jns
fsubs
jg
adc
mov
pop
jmp
push
jb
faddl
dec
push
mov
adc
loop
mov
scas
jne
inc
dec
xchg
mov
sbb
pop
pop
out
cmp
int3
rcl
lea
sbb
sbb
std
ljmp
lds
push
repnz
fstps
adc
push
adc
ror
mov
adc
cmpsl
inc
lds
js
dec
sbb
rcl
lds
xchg
push
adc
pop
push
insb
xor
push
inc
ljmp
leave
sbb
push
outsl
pop
aas
pop
sti
out
in
pop
iret
shrb
adc
xchg
outsb
daa
shll
fs
and
sbb
sub
lods
mov
sar
rolb
adc
dec
enter
push
jl
arpl
aas
ljmp
mov
push
pop
jno
rcl
mov
adc
imul
xchg
test
repz
mov
lea
out
aaa
loope
xchg
inc
aam
ret
xlat
cli
jne
loop
pop
fimuls
push
push
ret
shrb
mov
fwait
in
int
daa
cs
mov
adc
and
mov
sbb
mov
mov
cli
jge
mov
mov
std
aaa
xchg
cld
stc
repz
lock
fidivl
cli
push
int3
lcall
sub
out
in
mov
fs
aaa
add
xor
psubd
push
fnstcw
stos
dec
jbe
rcrl
push
dec
sbb
pop
jecxz
ret
mov
andb
pop
shlb
sub
scas
xchg
and
inc
or
fstpl
lods
pop
out
cmp
cmp
int
or
mov
mov
and
xor
daa
dec
or
or
and
mov
pop
pop
aaa
aas
idivl
adc
pop
push
das
in
add
ret
cmc
ds
mov
aad
repnz
lcall
rcrb
xor
aas
loopne
sbb
inc
adc
mov
andb
pop
cmpsl
dec
xchg
sahf
cmpsl
loopne
jmp
lock
shrl
rcrl
insb
shrl
or
xor
inc
addr16
dec
leave
dec
xchg
lock
sub
loop
daa
mov
sbb
cmpl
mov
pop
jge
adc
in
pushl
test
lods
and
fsubl
fidivl
jno
iret
rolb
fcoms
hlt
ss
cmp
sub
xchg
xchg
sahf
out
aad
sub
addb
jecxz
ffreep
lods
test
dec
enter
daa
jg
mov
lahf
aaa
ljmp
push
pop
pop
vmovapd
shlb
mov
sbb
mov
into
sbb
jmp
rcrl
es
push
iret
jo
and
sub
mov
test
pop
xor
shrl
pop
cwtl
dec
iret
mov
in
jge
mov
in
mov
dec
pop
lods
andl
mov
cwtl
cmp
in
cmp
jg
test
mov
outsl
ficompl
repz
and
sub
fistpll
arpl
mov
xchg
inc
andb
mov
and
push
xchg
into
jns
cvtdq2ps
cmc
stos
adc
adc
add
fadds
add
fnsave
jno
jl
mov
movsb
mov
mov
in
icebp
dec
fs
jg
add
cmp
or
xadd
inc
and
fsubs
cltd
addr16
ret
cltd
adc
cwtl
loope
jmp
fnsave
inc
sbb
aaa
movsl
or
fldt
jne
dec
ds
push
lret
adc
dec
in
stc
pop
inc
mov
lret
pushf
popa
ss
mov
jmp
push
js
fstpl
push
jns
icebp
call
insl
mov
out
adc
mov
xchg
in
movsb
jecxz
adc
mov
repnz
sbb
mov
jp
fstl
inc
roll
outsl
mov
outsl
push
xchg
movsb
xchg
aas
divl
xchg
jne
and
test
cmp
dec
mov
mov
jns
inc
psubq
mov
push
movsb
xor
xor
push
jns,pt
loope
and
pop
in
nop
jg
jl
repnz
adc
aad
shl
popa
push
mov
push
imulb
fmuls
lock
add
repnz
push
pop
int
in
push
sti
popa
lds
test
ret
jg
popf
inc
xchg
lds
icebp
jnp
loopne
out
adc
call
stos
and
sbb
cmp
cmp
pop
jae
clc
pop
jns
fsts
sbb
push
enter
sti
mov
out
cmp
dec
xchg
scas
mov
mov
pop
icebp
jno
xor
cmpsb
mov
fstl
ss
sbb
jmp
iret
xchg
mov
xchg
das
paddsw
movsl
mov
imul
stc
jg
daa
dec
adc
add
pop
jp
subl
icebp
lea
fldt
jg
fdivl
popa
rcrb
xchg
sahf
jg
repz
fsubs
sbb
dec
adc
outsb
or
int
dec
push
xor
enter
ret
fs
dec
daa
xchg
pop
push
cmp
pop
ja
stc
repz
mov
jg
enter
fsubl
fs
push
pop
cwtl
cmp
pop
ja
or
xchg
fnsave
xor
cmp
lret
nop
jne
mov
push
fbstp
adc
inc
int3
push
je
or
push
push
lds
push
xor
jo
pop
cmp
mov
jbe
ljmp
addr16
pop
pop
xchg
sbb
add
in
push
sar
ss
pop
pop
pop
and
pop
ret
ds
in
sub
pop
in
add
push
out
push
jbe
cmp
and
je
or
and
jmp
pusha
cwtl
das
push
fucomi
rol
stc
ja
jecxz
add
push
add
mov
mov
gs
cmp
pop
iret
push
sbb
sub
push
jl
jecxz
cmp
imul
sbb
adcb
outsl
rcrb
in
add
aaa
jae
mov
mov
bound
jecxz
xor
add
mov
mov
sub
divb
or
dec
in
test
push
jns
xchg
or
scas
lret
mov
mov
bnd
cmp
inc
push
dec
jne
cmc
sbb
roll
and
mov
rcrl
add
sub
sub
cltd
imul
lahf
int3
jnp
sub
inc
mov
jno
lahf
xchg
std
pop
cmpsb
imul
xor
in
call
test
push
es
sub
mov
loop
lret
enter
adcl
outsb
insb
mov
inc
jl
scas
enter
mov
stos
cmp
jbe
cmp
lret
hlt
adc
sub
inc
cld
mov
cmpsb
mov
push
arpl
add
les
pop
inc
imulb
pop
les
add
push
sub
outsl
cmp
fistl
xlat
adc
push
dec
dec
push
fimuls
mov
pop
gs
arpl
push
xchg
dec
xchg
and
pusha
pop
cmc
imul
out
mov
loope
shlb
push
sbb
or
movsl
cs
pop
fcmovnu
insb
xor
push
cmp
das
pop
mov
jns
add
insb
aas
xchg
mov
cmpsb
adc
xchg
imul
and
pop
loopne
mov
sub
hlt
out
out
lcall
push
inc
jl
aad
xchg
sbb
inc
fistpll
sti
adcl
sbb
repz
add
mov
das
xor
xchg
dec
es
lcall
in
mov
fdivs
sbb
mov
sub
push
sub
mov
dec
ret
loopne
inc
push
loop
mov
cwtl
or
dec
fbld
jo
xor
lods
pop
mov
or
ss
cmpsb
lea
repz
and
xor
mov
xchg
inc
out
mov
adc
fs
xchg
jle
push
xchg
xchg
in
add
xor
push
inc
sbb
jo
pop
adc
lds
ret
cld
xchg
jg
and
jmp
mov
mov
imul
lods
dec
xchg
push
sti
pusha
push
cmc
aad
outsb
pop
out
int
inc
fists
inc
repnz
imul
pop
cmp
addr16
or
out
inc
rcrl
rcl
aad
jge
scas
loopne
test
out
xor
int
int
add
push
jo
leave
cmpsb
mov
cmp
sarb
cmpsl
popf
inc
or
addr16
and
les
xchg
adc
xor
ret
nop
fnstenv
loope
jge
cld
je
insb
xchg
in
ror
mov
movsl
mov
repz
cmc
in
cmp
sub
clc
jnp
pop
pop
xchg
insl
mov
in
cmp
icebp
mov
xor
adc
mov
mov
inc
insl
pop
mov
stos
or
sbb
push
mov
cltd
ret
mov
inc
jmp
xchg
sub
add
movsb
pushf
aas
sbb
iret
push
stos
mov
cmp
jmp
sbb
mov
xchg
outsl
jl
aaa
jle
cltd
xchg
and
inc
lea
push
add
sub
xchg
out
cmpsl
jle
popa
aad
add
sti
push
adc
fsts
cvtdq2ps
push
mov
std
xchg
pop
arpl
jecxz
cli
nop
lcall
pop
movsb
les
ss
pop
out
pop
mov
lods
test
ss
shrb
scas
fs
add
lea
lods
lret
lods
xchg
jp
dec
cmpsb
sbb
adcl
or
fwait
das
xor
outsb
inc
out
sti
in
mov
test
fnstcw
add
add
mov
push
pop
fistpl
mov
lea
cmp
movsl
and
mov
repnz
pop
and
aad
pop
cmp
subl
loopne
popf
aaa
jns
loope
sub
icebp
mov
fldt
imul
push
ds
inc
cmpl
pop
push
ret
and
dec
lahf
call
jnp
js
and
out
fimull
aam
in
fidivl
pop
adc
sbb
mov
xchg
xchg
jecxz
mov
push
push
aas
lcall
xor
imul
fdivs
mov
test
in
xchg
fbld
cmp
stos
cli
orb
out
out
nop
insb
or
mov
les
orl
adc
insl
arpl
adcb
inc
fidivrl
outsb
int
enter
imul
push
dec
roll
fidivrs
clc
sub
lods
pop
jg
fbstp
adc
mov
gs
mov
arpl
mov
and
pop
adc
mov
fcmovnu
icebp
mov
mov
mov
xorl
dec
pop
and
loope
fdivl
dec
lret
fdiv
adc
mov
sub
sbb
insb
or
mov
aas
push
aaa
jmp
mov
add
or
xor
push
imul
xchg
pop
call
incb
repz
jmp
imul
xor
sbb
insb
sub
push
add
xchg
or
lods
out
push
jp
mov
shlb
sub
sub
dec
aas
mov
in
int
outsl
fcmovb
rcrb
push
push
jge
xchg
mov
daa
mov
push
std
mov
add
aaa
lahf
pop
push
push
stc
sbb
repnz
xor
mov
and
push
xor
push
nop
scas
enter
scas
cmp
mov
or
mov
clc
sub
pop
jne
mul
jne
in
add
insb
dec
pop
adc
xor
push
nop
ljmp
sbb
jo
pop
lock
xchg
dec
xchg
data16
jg
inc
iret
fldenv
adc
lods
or
and
pop
test
inc
int
negb
bound
xor
lret
sub
mov
loope
mov
shl
fs
shlb
inc
aam
xorb
in
push
cld
mov
ret
fcmovnb
outsb
fstpt
jge
jmp
mov
orb
jecxz
add
push
jl
scas
js
in
cwtl
cltd
shrl
js
nop
mov
aas
xchg
adc
scas
sbbl
out
or
cmpsb
roll
cmp
out
adcb
inc
pushf
test
jecxz
cmp
mov
sbb
push
insl
into
and
dec
iret
in
dec
in
cmpsl
xchg
inc
pop
nop
fs
push
jnp
fwait
pop
shlb
int
sub
sbb
lods
push
or
mov
stos
jle
adc
xchg
xor
out
add
repnz
cli
xchg
jno
dec
pop
adc
lea
and
add
cmp
mov
jae
push
xor
adc
pop
jg
out
or
mov
cwtl
adc
nop
sub
jl
dec
mov
movsb
scas
stos
xor
mov
mov
insl
aam
jecxz
popf
push
xchg
jb
add
cli
nop
lods
push
les
jne
xlat
fildl
xlat
xchg
lea
sbb
cmp
fstps
mov
out
mov
cmp
dec
lahf
pop
out
inc
fisttpll
add
sub
push
lret
adc
cmpsb
dec
dec
cmp
add
loop
test
arpl
orl
jnp
cmp
or
or
jo
aam
scas
popa
enter
inc
ss
and
call
ret
sahf
mov
mov
popf
testl
jne
sbb
sbb
lahf
mov
sbb
dec
push
or
inc
mov
sbb
push
xchg
pop
into
lret
mov
cmp
mov
xor
or
add
movq
dec
xchg
dec
aaa
lret
push
mov
jne
mov
mov
dec
std
in
xlat
orb
sbb
lahf
icebp
hlt
mov
shlb
sub
fcoml
mov
cltd
dec
xor
lds
outsl
test
jo
roll
pause
and
xchg
mov
ss
lret
mov
outsl
cwtl
and
pop
mov
mov
test
jb
xchg
push
xor
mov
and
and
mov
pop
ja
shll
xchg
loope
sbb
jmp
out
adc
mov
fcomps
xor
cltd
pop
push
mov
in
xor
cmp
loopne
pop
js
dec
xchg
push
cmc
mov
add
sbb
push
iret
jp
mov
pusha
scas
pop
out
out
mov
dec
lret
fdiv
fcoms
insl
scas
push
arpl
fdiv
out
lcall
ss
aam
mov
add
add
cs
in
sub
cmp
push
sarb
mov
mov
rorb
out
push
fidivrl
insl
sbbb
mov
mov
xor
fwait
dec
push
xor
icebp
lea
xchg
les
fldt
jg
fdivl
ret
jno
ss
and
add
repz
mov
mov
ret
or
enter
loop
aad
xchg
pop
movsl
xor
fcmovnbe
lods
pop
in
adc
ret
popf
mov
dec
dec
xchg
fcmovb
mov
jle
maskmovq
negl
mov
inc
push
ja
and
test
cmp
xor
xchg
sub
mov
popf
mov
sbbl
mov
jecxz
push
out
or
pop
jp
push
xchg
das
mov
push
iret
add
cmpsb
dec
out
mov
xchg
rcrl
lret
fnsave
insl
cmpsb
mov
mov
mov
dec
pop
inc
insl
xchg
insl
out
pop
dec
xchg
and
mov
stos
lahf
leave
pusha
jns
enter
pop
rcrl
mov
xchg
or
mov
ret
push
jb
mov
int
pop
pop
ss
lcall
test
mov
pop
shlb
or
lret
clc
pusha
fxtract
add
fwait
cmp
daa
mov
and
pop
pusha
mov
es
add
cmp
jge
test
mov
imul
xchg
and
inc
sub
fidivrl
adc
cmp
movsb
mov
repnz
mov
bound
scas
out
lods
cmc
fisttpl
adc
pop
push
adc
pop
jae
adc
pop
int
sti
and
jmp
adc
adc
adc
cmc
rcrb
jl
adc
cmp
push
and
jns
imul
pop
hlt
lahf
lahf
aas
popa
fcompl
cmpsb
enter
popf
push
mov
cmp
mov
out
enter
inc
push
or
pop
cmp
negl
add
xchg
mov
mov
inc
mov
setp
push
xchg
jp
popa
xor
ljmp
fwait
outsb
loop
into
mov
imul
mov
jns
mov
ret
dec
aas
sbb
sub
mov
cmp
add
clc
addr16
mov
test
shr
les
into
cs
mov
pop
push
stos
xor
lret
ljmp
adc
loop
dec
mov
in
ret
sbb
scas
inc
nop
loopne
mov
pop
test
push
mov
or
leave
fistl
jl
sbb
push
les
aad
mov
inc
test
mov
test
shrb
andb
ja
and
stos
push
movsb
pop
lods
dec
and
loope
mov
mov
or
fs
dec
jmp
xchg
pop
in
cmpsl
inc
lds
outsb
jbe
sbb
push
mov
js
jg
les
mov
mov
mov
cmp
out
out
cmp
arpl
movsb
xor
mov
push
lret
push
mov
movsl
mov
shl
fmull
ss
jb
mov
pop
mov
adc
push
aas
testb
push
repnz
fsub
ljmp
inc
pushf
jne
fldcw
mov
mov
inc
pop
imul
mov
and
adc
jns
or
adc
insl
push
inc
jg
scas
inc
xchg
fsts
ds
inc
or
daa
dec
sbb
dec
adc
jns
adc
or
insl
cmp
sub
cmpsl
dec
sbb
dec
sbb
dec
adc
outsb
jnp
int
dec
push
xor
push
sub
xor
jnp
fcoms
sbb
pop
ljmp
dec
sahf
inc
inc
sbb
icebp
xor
add
and
add
lcall
ret
lds
fidivs
loop
mov
lds
cltd
sub
jb
adc
push
pop
xor
lock
je
out
mov
daa
mov
dec
or
mov
cmp
ret
nop
daa
lds
repz
inc
insb
and
lcall
fs
mov
and
jl
lds
repz
mov
ss
cmpsb
popl
jecxz
addr16
lret
inc
out
add
fnstenv
adc
sbb
lock
dec
out
imul
ret
fs
mov
jns
push
ds
lcall
or
or
sbbb
dec
out
sbb
or
repz
xor
bound
rcrb
je
push
pop
cmp
les
jne
out
mov
es
mov
mov
xchg
lods
mov
mov
lock
cmp
xchg
shll
clc
data16
out
add
fidivs
loope
push
ds
push
inc
sbb
push
ja
or
fs
cs
lret
cld
or
mov
mov
ret
cmp
mov
dec
imul
sub
add
fdivrl
pop
jle
pop
out
ja
in
pusha
push
adc
cmp
jne
adc
xchg
pop
jmp
imul
jge
cli
mov
cmc
clc
bound
cmp
add
mov
das
jl
add
jge
bound
xor
adc
pop
adc
pop
xchg
jb
xchg
adc
es
lods
sbb
pop
sahf
mov
mov
inc
pop
adc
jle
dec
aaa
jns
rol
aas
in
inc
pop
adc
xor
insl
xchg
dec
sub
push
mov
push
pop
mov
dec
lcall
pop
aam
or
and
fs
addb
xchg
sbb
inc
and
jnp
sbb
jmp
inc
pop
sbb
xor
filds
int
adc
cli
hlt
sub
push
xchg
dec
mov
je
push
inc
jns
and
ljmp
pushf
or
jmp
dec
pop
pop
pop
jmp
adc
ds
xor
inc
outsl
stos
and
hlt
mov
mov
call
sbb
cmpsl
lea
shrb
or
in
stc
adc
fisubs
sub
push
push
test
add
jge
and
mov
cmp
shlb
icebp
ja
push
jp
test
subl
rorl
mov
or
ljmp
jnp
push
mov
je
mov
enter
pop
scas
jg
dec
pop
adc
test
or
sub
cmp
ret
xchg
jge
and
mov
pop
jmp
es
out
mov
ljmp
int
test
aaa
shll
xor
pop
pop
loopne
aas
sbb
pop
fsubs
dec
sahf
dec
add
pop
test
test
xchg
shll
sub
pop
sub
xorl
insb
xchg
xchg
das
push
xor
jb
test
fwait
stos
cmp
push
and
jns
fidivs
std
rcl
pop
aaa
cmpsl
and
in
loopne
and
push
cmp
rclb
jns
sub
jnp
push
ljmp
call
jo
adc
xchg
mov
repnz
movsb
xchg
out
push
fwait
mov
adc
adc
xchg
xchg
and
lods
lods
mov
sbb
fs
dec
insb
jo
adc
xor
push
mov
insl
cs
fdivs
fs
adc
push
inc
xchg
mov
lods
pop
mov
xor
dec
ret
aam
xor
mov
mov
and
jge
xor
bound
orb
fs
data16
scas
or
lods
sahf
test
mov
fucomp
xor
xchg
test
mov
xor
fldcw
mov
push
dec
push
push
fdivrs
out
out
arpl
out
outsb
push
repz
lret
add
inc
aam
push
adc
jg
sub
cmpsl
fwait
mov
pop
and
dec
xchg
push
jbe
shll
imulb
repnz
xchg
jne
fimull
arpl
add
sbb
out
mov
adc
movsl
into
nop
daa
sbb
pusha
push
andb
test
or
cld
adc
pop
adc
insb
push
outsb
push
xor
test
mov
xor
dec
clc
or
pop
adc
fs
pop
cmp
mov
test
cmp
dec
lock
pop
adc
je
jbe
sub
mov
lock
push
sub
pop
loopne
mov
adc
push
imul
xchg
ljmp
jle
loopne
xchg
rep
sbb
sub
dec
repz
std
test
jnp
push
movsl
adc
mov
jo
vmovupd
outsl
in
mov
jbe
mov
leave
cmpsl
test
mov
xchg
mov
faddp
gs
jmp
fmull
and
rcrb
mov
sbb
push
jg
xor
sub
xchg
push
mov
xor
shl
or
rorb
movsb
pop
jno
in
cmpb
push
aad
or
add
aaa
notb
ljmp
aam
mov
mov
jnp
test
iret
in
test
repz
add
adc
insl
mov
rcll
clc
adc
mov
arpl
add
jmp
pop
add
adc
inc
or
dec
dec
sub
pop
in
sbb
adcb
jecxz
mov
jbe
adc
mov
jno
pop
ljmp
dec
inc
jne
inc
cwtl
pusha
mov
rorb
jo
inc
adc
es
mov
or
dec
daa
cmpsb
call
out
add
andb
adc
sub
xorb
out
clc
or
addr16
push
jb
pop
je
push
xchg
sahf
mov
cltd
in
lods
sbb
sbb
popa
push
mov
popa
and
mov
data16
mov
sub
sbbb
dec
lcall
mov
insb
adc
ret
add
sub
ficompl
add
mov
aas
sub
cmp
lret
or
lds
bound
imul
mov
scas
out
stos
in
lods
in
test
and
shll
mov
inc
fldl
loop
cltd
shl
push
push
lock
push
negl
shlb
jne
inc
aam
rcl
xlat
cli
cmp
jae
mov
popf
call
push
inc
ss
cli
sub
scas
or
cmpsb
sbb
fdivrl
lock
push
icebp
jl
divb
rcrl
je
inc
aad
ret
shll
aad
gs
rcll
jb
xchg
adc
xchg
daa
cmp
repz
mov
jg
push
insl
mov
sbb
in
mul
lahf
hlt
call
jp
fidivrl
push
jno
mov
int3
loopne
inc
scas
insb
fstpt
cmp
pushf
ss
rcrb
js
nop
lds
fildll
push
shl
xor
dec
ret
add
fimull
leave
jb
mov
lret
cmp
pushf
mov
test
ljmp
and
leave
jne
cmp
sub
xchg
lods
mov
cmc
insl
setb
in
pusha
dec
jecxz
fidivrl
outsl
mov
ljmp
lods
mov
pop
ds
pop
int
arpl
mov
lds
cmp
pop
inc
push
sti
nop
xor
enter
insb
into
fwait
mov
jg
jle
push
sbb
insl
xor
mov
and
dec
ret
add
enter
jo
mov
jne
aas
pop
pop
mov
jb
dec
in
cmp
into
pop
xor
inc
pop
loop
mov
icebp
sbb
push
mov
push
icebp
outsb
xchg
or
push
mov
fnsave
jp
mov
jns
fwait
lods
mov
int3
outsb
sub
imul
cwtl
xor
push
xor
push
movsl
test
mov
shll
sub
mov
and
jno
loope
test
sti
ds
in
jmp
imul
mov
addl
fidivrl
insl
jno
repz
addl
mul
adc
test
add
adc
jns
mov
jae
cmp
lods
xchg
mov
int3
out
pop
mov
adc
jbe
cmp
test
jo
pop
adc
xor
out
jecxz
jg
outsl
scas
adc
lret
lods
dec
orl
jle
mov
jnp
mov
ret
xchg
dec
fisttpl
nop
sbb
mov
jnp
xchg
lock
mov
push
mov
lret
pop
arpl
in
adc
fildl
idiv
aad
cld
mov
push
pop
inc
jp,pn
sub
popa
mov
int3
stos
adc
xchg
inc
test
jle
lret
and
pusha
push
ljmp
dec
xchg
push
adc
jle
push
aaa
jb
add
out
pop
and
rcrb
xor
rorb
cltd
shll
mov
mov
jge
cli
cld
pop
and
hlt
sahf
arpl
dec
cmc
test
add
cmp
and
mov
pop
les
imul
je
dec
push
jecxz
cmp
cld
inc
or
xchg
ljmp
ret
aaa
and
sub
add
add
es
paddw
sahf
jge
iret
test
mov
frstor
mov
xor
js
icebp
ja
push
pop
sub
imul
jb
or
aad
or
test
push
xchg
daa
cmp
lret
lods
dec
adc
inc
inc
in
add
inc
push
repz
shlb
cmp
or
lcall
int
int
int3
lret
inc
sub
and
test
pop
aaa
dec
ret
add
sbb
mov
xchg
ss
xchg
inc
xchg
and
test
fisubl
xchg
lock
movsb
xchg
push
sub
and
push
cmpsb
in
mov
xchg
outsb
dec
cld
int
inc
xlat
xchg
sbb
add
gs
and
add
cmp
loop
adc
fs
xchg
scas
push
jnp
outsb
adc
repz
fisubrl
adc
loopne
xor
jo
pop
adc
cmp
pop
sti
in
push
repz
cmp
repz
mov
ss
cmpsb
imul
jb
and
mov
cmp
fnstenv
into
xchg
fwait
sub
je
cmp
add
xor
test
pop
xchg
daa
mov
clc
pop
add
scas
mov
out
test
push
mov
xchg
mov
push
jle
pop
daa
repz
mov
sbb
mov
fmuls
inc
inc
ss
jbe
in
inc
cmp
cmp
rcrb
insb
inc
pop
pop
mov
rorb
xor
gs
out
sbb
in
mov
pop
dec
out
pop
sbb
push
popf
nopl
adc
cmp
insl
int3
sahf
cmp
pop
out
insb
and
mov
lods
lcall
lret
xchg
aam
shl
push
out
mov
pop
lock
xchg
ficoms
mov
dec
add
mov
dec
fildl
xchg
dec
outsl
inc
xlat
and
test
xor
xchg
fs
mov
adc
dec
cltd
sub
stc
loope
pushf
jnp
fnsave
jg
bound
test
call
sub
xor
in
dec
lret
sarb
adc
mov
scas
movsl
aas
push
stos
and
andl
fimuls
incb
shl
andb
push
and
jo
sbb
push
adc
pop
test
xchg
add
jae
arpl
std
das
push
ret
clc
loope
out
pop
dec
fdivs
adc
adc
fists
stc
push
in
inc
xchg
loopne
jle
mov
out
mov
adc
aam
sub
mov
mov
or
jl
mov
jo
jb
iret
ret
dec
popf
and
adc
mov
mov
mov
jle
bound
ret
inc
lods
jl
mov
sbb
into
cmpsl
inc
mov
jae
insl
mov
fcmovu
cwtl
sbb
cmp
insl
int
loop
int3
pop
clc
lret
fs
mov
pop
out
dec
inc
pushf
mov
out
xor
push
loopne
mov
add
cmc
mov
push
popa
fst
adc
xchg
and
xor
and
sub
andl
out
push
insl
or
add
aas
mov
fmull
faddp
outsl
jno
mov
cwtl
ret
and
dec
pop
mov
xchg
out
stc
push
rolb
fdivs
cltd
imul
imul
sub
jnp
in
dec
xor
and
test
daa
nop
std
cwtl
adc
or
adc
add
cld
mov
mulb
in
add
out
sbb
scas
dec
push
mov
in
or
decb
push
loop
cmp
dec
lret
push
xor
jae
dec
sar
shrb
xorb
or
jp
enter
sbb
aad
jno
sbb
stos
shl
popa
push
lock
enter
insb
and
sbb
sub
imul
push
pop
xor
lock
jo
out
mov
and
cmp
lret
mov
mov
cmp
mov
add
dec
xchg
jle
icebp
jno
stos
cmp
sub
pusha
xor
lahf
cmp
xchg
inc
lahf
and
jg
js
inc
fistpll
push
xchg
movsl
das
mov
lret
lret
jns
or
mov
shlb
push
and
out
add
fidivl
mov
insb
cmp
test
cmpsl
andl
mov
and
cmp
lret
cmove
insl
pop
jg
scas
inc
xchg
jmp
das
cwtl
dec
xchg
push
sti
cwtl
push
cmc
imul
push
sbb
fstl
js
aad
mov
lret
jno
jno
lods
cmp
sarl
inc
push
scas
inc
push
addr16
aas
xchg
out
or
movsb
ret
jge
mov
mov
sbbl
or
push
fdivs
push
sti
xorb
mov
ds
adc
lods
sub
xor
mov
shrb
sahf
mov
in
ret
sbb
adc
jle
cld
repz
adc
in
aad
leave
or
mov
das
xchg
xchg
add
loop
xlat
mov
xchg
inc
shll
jecxz
movsb
sar
pusha
push
stc
jge
stc
jo
ret
fisttpl
push
shl
xchg
sbb
leavew
xchg
mov
daa
sarb
outsb
nop
insl
push
into
cwtl
xor
cmp
leave
jle
shll
call
mov
push
lret
dec
adc
jle
adc
out
push
daa
outsl
adc
jbe
and
push
lcall
out
add
pop
cmp
or
and
pushl
decl
mov
cli
iret
push
or
adc
rorb
fiadds
pop
add
sub
enter
jecxz
pop
insb
lcall
inc
aas
inc
int
inc
scas
jl
adc
and
addb
xor
jnp
inc
sub
adc
popl
inc
lea
cld
ljmp
xor
test
xor
push
out
xor
push
or
popa
int3
imul
xchg
mul
xor
stc
jmp
sub
adc
push
imul
jecxz
outsb
ret
mov
inc
pop
std
mov
or
dec
jns
jle
mov
fiadds
add
jae
and
push
arpl
fsub
fsub
cmp
xor
xchg
add
pop
cli
add
ficompl
sti
sbb
push
mov
cmp
mov
inc
mov
adcb
sbb
ds
inc
and
inc
das
sub
mov
sub
mov
lock
iret
icebp
loopne
fcmovb
scas
xor
loopne
sub
xor
scas
sbb
sbb
sbb
sub
push
cmp
out
test
push
ret
sbb
das
xchg
insl
inc
shll
jns
and
scas
push
arpl
sahf
inc
rclb
xchg
fs
aaa
add
ljmp
or
xor
flds
js
xor
popf
mov
pusha
push
adc
movsb
movsb
aas
sub
cmovno
pop
in
push
arpl
add
pop
cld
xor
push
test
adc
je
inc
enter
addr16
dec
leave
cltd
push
fmuls
stc
jae
dec
fadd
push
lods
dec
shll
pop
adc
cld
test
loope
add
fnstenv
push
ret
lcall
repnz
outsl
test
lret
and
dec
sbb
aas
and
dec
adc
cmove
mov
outsl
push
addr16
push
mov
icebp
dec
pop
loopne
pop
push
sbb
push
std
xchg
dec
ret
add
mov
dec
pop
in
or
xchg
jo
fsts
jo
andb
xchg
cmp
jo
ja
mov
inc
or
and
push
movsb
push
xor
mov
shll
ret
jl
mov
push
ss
sbbl
testb
cmp
mulb
push
std
lea
push
mov
int
mov
shrb
test
xchg
popf
jb
xchg
push
movsb
ret
jns
sarb
cmp
rep
cmp
push
aas
mov
xor
lea
mov
cmc
es
or
aaa
mov
xor
and
gs
pusha
push
jno
into
sbb
ja
cltd
jp
mov
rcr
js
jle
and
aam
push
movsb
ret
jns
repz
lds
repz
leave
and
and
lret
nop
leave
add
and
xchg
xlat
jns
or
adc
jp
mov
shlb
lds
icebp
addr16
push
aas
push
test
movsl
sbb
loope
add
enter
pop
cmpsb
adc
out
inc
xlat
leave
call
in
inc
xchg
lods
mov
adc
push
inc
push
addr16
xor
mov
add
and
test
cmp
cmpsl
int
inc
rcl
cmp
fwait
std
test
out
mov
sub
clc
sbb
rol
pop
xchg
je
mov
add
xchg
xor
cmp
and
repz
scas
fwait
cmp
stc
repnz
inc
jl
popa
mov
jnp
ret
shl
pop
fstps
pop
dec
inc
or
or
jns
fwait
push
out
cmp
jl
inc
gs
loopne
test
add
cmp
loopne
add
mov
and
push
rcll
test
outsl
pop
dec
or
adc
jo
pop
jle
popa
sbb
add
ljmp
sbbl
push
out
lahf
add
mov
xor
stos
inc
push
mov
add
pop
icebp
or
leave
adc
sahf
fs
xor
scas
lret
test
or
xor
idivl
fmull
push
lcall
mov
dec
pop
imul
in
in
out
cwtl
mov
les
cwtl
jbe
push
enter
mov
fsubs
jns
movsb
or
dec
push
xor
pop
xorl
push
pop
sbb
mov
jp
cmp
loope
sub
bound
cmp
popf
ja
mov
movsb
xchg
adc
repnz
dec
mov
or
dec
mov
adc
movsb
jae
xchg
outsl
and
imul
test
push
iret
subl
jnp
jmp
mov
bound
sti
inc
jp
cmpsl
push
rep
pusha
aam
xchg
out
xchg
in
enter
jl
inc
adc
and
mov
fadd
fadds
mov
dec
mov
sub
mov
xchg
sbb
loopne
mov
and
lret
cmp
push
xchg
jl
push
xchg
out
data16
mov
adc
jmp
jnp
add
cmpsl
mov
cld
fbstp
inc
dec
adc
scas
pop
push
pusha
push
fiaddl
mov
mov
mov
call
and
push
ret
cmpsb
xchg
lods
mov
out
dec
adc
outsb
fdiv
int
inc
xlat
sub
cmp
out
fsubl
xlat
out
aas
and
xor
sti
in
lods
mov
andl
test
adc
nop
mov
icebp
fistpl
mov
adc
ficompl
gs
and
scas
xchg
scas
cmpsb
xchg
lods
mov
out
fwait
mov
shrb
mov
xchg
fnstsw
loope
ret
js
lds
repz
xor
ss
dec
mov
movsb
sbb
cmp
out
repnz
out
add
or
shll
js
leave
mov
rcll
jg
fsubs
inc
jecxz
jns
mov
mov
shl
gs
sahf
jb
mov
push
fdivs
xor
xor
mov
push
sbb
push
aaa
mov
inc
jnp
popf
rol
imul
dec
into
sbb
ja
sahf
ret
pusha
shlb
or
es
xlat
or
ss
ret
mov
leave
adc
pop
fstl
adc
dec
sahf
inc
inc
sub
jg
and
adc
mov
xchg
les
fldt
jg
pusha
repz
add
gs
adc
push
les
dec
jp,pn
cmp
lock
aas
sbb
lea
enter
fistl
int
or
mov
shr
cmp
orb
jne
xor
cmp
out
out
scas
into
lcall
insl
or
push
data16
dec
ds
push
imul
xchg
jnp
inc
clc
sbb
xchg
lods
cmc
and
xchg
popf
aas
push
jecxz
mov
mov
xor
vprotb
adc
push
sbb
cmp
iret
pop
jle
jle
popf
icebp
inc
inc
fdivrs
movsb
xchg
cmpsb
inc
cmc
mov
cmp
aam
arpl
add
sub
dec
loopne
iret
pop
xchg
or
test
dec
and
shlb
push
cmp
jo
mov
fdivr
ds
adc
sub
pushf
cwtl
ss
push
ja,pt
gs
arpl
fs
testb
cli
mov
or
pop
pop
repz
shlb
mov
xor
mov
and
in
aas
adc
scas
mov
in
bound
inc
jmp
sbb
pop
data16
lds
sbb
jb
jecxz
cmp
lds
fwait
subb
mov
stos
sub
jmp
fwait
adc
lock
movb
stc
in
mov
sub
js
out
add
mov
mov
and
repz
add
lds
jo
adc
mov
jl
movl
ret
call
cltd
and
scas
add
lret
pop
add
enter
lods
loope
out
jmp
pop
inc
popf
or
movb
cs
ret
cs
push
mov
push
stos
push
int3
push
xor
jne
andl
stc
clc
ljmp
fwait
push
push
cmpsl
cs
sub
pop
mov
and
push
outsl
popa
shll
pop
test
dec
insl
scas
dec
insb
mov
add
stos
roll
mov
adc
sub
jnp
xor
test
mov
andl
inc
xchg
repz
add
cwtl
adc
and
jmp
rcll
cld
pop
iret
mov
es
mov
imul
pop
out
mov
adc
test
inc
out
fcomps
jno
mov
jbe
ret
jp
pop
cmpsb
dec
mov
mov
aam
adc
nop
inc
pusha
inc
loop
ret
xlat
hlt
imul
into
push
movsb
dec
out
cmpsb
out
sbb
in
mov
fs
mov
ret
dec
aaa
mov
inc
jae
popf
or
sarl
sbb
cmp
lret
adc
shlb
jle
shll
shrl
push
sar
cltd
push
repz
add
xor
out
rorl
pop
ljmp
out
test
lahf
xchg
daa
cmp
fs
cmp
imul
add
cltd
out
fwait
mov
cmpsl
nop
and
insb
mov
ljmp
xchg
push
popf
shr
add
out
sbb
adc
pop
pop
jo
pop
adc
aas
ret
test
lods
push
addr16
out
jb
jp
push
fmul
jne
cmp
aas
repz
jne
repnz
pop
cmp
mov
push
pop
or
inc
cmp
cmpsl
dec
xchg
daa
loopne
test
inc
dec
mov
std
push
pusha
mov
out
js
sbb
lret
and
mov
out
popf
cmp
cmp
jg
pmovmskb
dec
jg
jge
xchg
frstor
out
sub
xchg
and
pusha
daa
add
icebp
imul
xchg
jl
sbb
inc
xchg
cmp
outsb
dec
xchg
loop
mov
xchg
jl
and
mov
movsb
cmpsb
xchg
lret
sub
insl
fstpt
int3
add
sbb
fs
rclb
pusha
push
and
pop
js
out
xchg
mov
xlat
lods
pop
bound
insl
fdivs
sbb
sbbl
insl
lea
lcall
push
mov
arpl
enter
xorl
stos
sbb
push
cmpsl
pop
cmp
mov
push
jb
add
into
cwtl
adc
mov
rcr
jle
ret
sbb
adc
cs
subl
pop
inc
lds
inc
shlb
fmuls
mov
adc
sbb
jle
enter
mov
jbe
test
xchg
add
pushf
repz
sub
push
mov
dec
lahf
sub
cmp
mov
outsl
push
adc
ja
mov
jecxz
inc
inc
imul
mov
mov
sbbl
sub
jne
adc
pop
cmp
daa
or
mov
movsb
pop
leave
lret
adc
sarl
mov
jge
inc
js
fs
sub
imul
mov
test
or
ss
aad
int
add
data16
adc
js,pn
push
mov
push
mov
cmp
es
adc
cli
cwtl
mov
lods
pop
jle
mov
xor
mov
mov
aaa
dec
and
fisubl
cmc
push
dec
roll
add
push
jae
dec
jmp
sbb
fimuls
inc
shll
test
imul
mov
int
fs
jecxz
out
mov
adc
inc
cltd
stc
addr16
mov
mov
push
ljmp
cmp
inc
cmpsl
mov
xchg
push
jecxz
std
push
mov
repz
addr16
icebp
lea
bound
in
dec
daa
lock
lret
jb
jbe
movsb
shl
xchg
scas
mov
popa
add
int3
and
nop
out
hlt
in
loopne
dec
jge
jns
pop
stc
sbb
call
inc
icebp
xchg
xchg
fcmovnb
cmpl
mov
fldcw
jnp
xor
sub
pop
push
sub
insl
fwait
cmc
push
adc
jle
mov
xchg
mov
pop
mov
pop
add
or
pop
adc
mov
inc
lods
sbb
arpl
orl
xchg
and
je
jle
push
fs
mov
xchg
and
push
inc
repnz
jae
insb
lods
jmp
aam
mov
lret
sbb
lods
lock
cmpsb
ss
aas
aad
lds
push
and
out
xchg
test
inc
inc
sub
fnstcw
xchg
fidivrl
andl
xor
pushf
inc
pop
adc
and
sub
mov
mov
aad
pushf
inc
pop
adc
jae
mov
ret
dec
sub
pop
jno
repz
repz
xor
dec
add
xchg
popf
jb
sub
jb
mov
aas
mov
in
mov
fdivs
cmp
xor
sub
dec
push
daa
jecxz
xchg
pop
xchg
std
mov
push
xchg
sub
lea
pop
arpl
jo
fidivs
std
cmp
mov
fistpll
es
xchg
out
pop
mov
test
mov
jp
push
push
or
push
jb
sub
fsubrl
mov
jns
xor
js
cwtl
stos
fwait
mov
mov
xor
push
repz
pop
loop
jnp
xchg
ja
cltd
pop
push
push
imul
xor
dec
xchg
es
stos
sahf
dec
gs
mov
out
pop
pop
pusha
xchg
push
stos
and
or
mov
and
outsb
loopne
mov
sub
sbb
int
sub
and
or
std
pop
jo
cmp
dec
out
push
fidivs
test
dec
inc
loopne
pop
adc
xlat
xchg
cltd
out
xor
pop
jo
lret
xor
test
mov
xchg
aad
cmpsl
dec
ds
clc
xlat
xor
dec
cmp
aaa
inc
fdiv
mov
rclb
scas
in
sbb
into
pop
insl
pop
daa
pop
dec
xchg
and
and
loope
pushf
dec
push
daa
sbb
mov
cltd
and
or
movsb
mov
loope
popf
jae
repnz
ljmp
xor
scas
cmpsb
sbb
cli
incb
out
push
sub
pushf
inc
pop
adc
sub
xor
pop
out
aaa
pushf
inc
pop
adc
cltd
mov
inc
or
cltd
mov
and
push
lahf
mov
push
or
xor
pushf
and
inc
add
mov
mov
adc
repnz
xchg
push
add
cmpsb
mov
mov
pop
cld
and
push
test
fcmovne
arpl
je
sub
jl
xchg
jb
nop
adc
sarl
xor
stc
in
dec
out
xor
pop
push
sbb
push
mov
sbb
repnz
jmp
fwait
xchg
mov
xchg
cli
mov
insb
mov
sbb
and
pop
pusha
jno
inc
mov
int3
add
std
jecxz
lods
mov
inc
clc
mov
mov
mov
xor
pop
inc
mov
cmpb
arpl
movsl
jnp
imul
or
jne
popa
jo
mov
enter
arpl
lret
cwtl
adc
jg
loop
add
rorl
xor
fnsave
call
sti
ds
dec
leave
mov
dec
fwait
out
sbb
aas
fs
ja
cltd
inc
adc
mov
mov
mov
push
clc
xchg
arpl
inc
fists
or
xor
push
sub
inc
mov
inc
mov
xchg
andl
xchg
cmp
xor
mov
push
push
sub
scas
xor
loop
mov
or
or
mov
dec
pop
stos
dec
adc
jle
add
lods
push
xor
dec
loopne
ret
xor
popf
mov
aam
and
adc
arpl
add
jbe
add
pop
adc
adc
xor
sysret
push
movsb
cmp
daa
dec
sahf
xchg
xrelease
jmp
mov
into
lcall
xchg
pop
jo
pop
pop
jno
dec
test
mov
repnz
inc
adc
lods
mov
xchg
es
test
adc
cmpsl
inc
insl
fcmove
outsl
sub
out
gs
addr16
loopne
pop
stos
cli
dec
xchg
push
imulb
jns
dec
mov
mov
dec
cmpsl
test
stos
jne
jmp
test
sahf
cmp
out
mov
aaa
push
pop
idivb
and
ret
dec
cmp
std
mov
fwait
sbb
out
add
push
or
std
pop
jo
cmp
dec
out
push
fidivs
test
dec
inc
loopne
pop
adc
xchg
cwtl
out
xor
lret
out
movsl
pop
jno
lret
aam
xor
test
mov
fldl
xchg
out
push
movsb
dec
cmp
inc
inc
jns,pt
out
xor
fcomip
rcl
pop
push
or
pop
push
and
xchg
and
sub
out
fwait
dec
push
and
push
in
hlt
mov
xchg
sub
add
repz
stos
mov
xchg
pop
icebp
dec
int3
enter
std
cs
in
mov
sub
mov
daa
jecxz
dec
lret
fdiv
sub
xor
dec
pushf
inc
pop
adc
xor
push
bound
inc
or
cmpsb
xchg
lock
jg
insb
cmpsl
cmpsb
mov
outsb
imul
mov
dec
and
popf
aas
jp
repnz
aaa
outsb
movsl
mov
test
pop
ja
flds
test
and
add
cmp
fdivrs
loope
xor
cmpsb
roll
push
push
dec
jmp
iret
lret
push
inc
decl
xchg
inc
cmp
out
das
iret
sbb
mov
mov
inc
sti
push
fs
das
stos
lock
lea
movsl
mov
jle
test
call
push
mov
mov
fadds
je
adc
int3
dec
and
popf
out
cmpsl
or
cmpsl
lret
adc
or
push
pop
mov
mov
jo
or
push
adc
fdivl
je
push
pop
xlat
arpl
add
add
pop
lret
jns
xor
cld
pushf
inc
pop
adc
xchg
sahf
leave
inc
popf
pop
inc
push
pop
lret
or
jg
mov
inc
jp
bswap
xchg
sbb
xor
add
fstps
mov
inc
xchg
pop
or
xor
dec
fadds
push
mov
dec
into
dec
mov
cmp
push
in
mov
out
dec
movsl
adc
mov
insb
sti
jae
dec
arpl
mov
jns
ret
fisttpll
out
shlb
push
fcmovu
cmpsb
cs
inc
pop
adc
sbb
adc
mov
lods
or
insl
mov
sbb
sbb
sub
cmp
push
xchg
hlt
fsubl
dec
jne
dec
leave
pop
mov
stos
push
sbb
movsb
movsl
xchg
fcomps
lds
aaa
mov
ljmp
jnp
lea
xlat
push
sti
adc
cmpsl
or
adc
out
in
and
lods
stc
into
testb
std
pop
pop
push
inc
push
cmp
mov
iret
mov
dec
or
mov
rcll
lcall
xor
cmp
arpl
fimuls
dec
lret
clc
jge
imul
bound
int
imul
outsl
jnp
out
sbb
cmp
in
out
add
dec
xchg
lods
mov
fdivs
pop
adc
pop
rclb
bound
xchg
insb
andb
das
mov
mov
cmp
mov
fsub
ljmp
fxch
push
jp
popa
push
push
mov
cmc
sbb
push
subl
insl
setp
pusha
cltd
jp
out
xchg
das
xlat
mov
lcall
insl
dec
enter
loop
insl
mov
cli
imul
loopne
test
mov
xor
pop
lea
and
inc
nop
push
loop
lcall
and
pop
add
sahf
inc
inc
jp
mov
push
in
aad
jge
in
pop
xor
cmpsl
mov
push
icebp
fs
gs
xchg
std
and
lods
cmpsb
mov
and
lods
mov
imul
adc
or
fiaddl
insl
fcmove
push
pop
inc
aaa
aas
jecxz
xchg
addb
in
pop
pop
outsb
pop
jbe
mov
xchg
nop
jne
and
test
sbb
leave
lcall
loopne
mov
cmp
int3
outsl
sub
popl
pop
aaa
cmp
or
xchg
adc
sub
pop
xchg
rolb
xchg
and
mov
xchg
mov
lods
pop
cmp
xlat
pop
rcrb
inc
inc
add
fidivrl
xchg
inc
cli
xor
sub
mov
mov
xchg
out
mov
scas
jae
mov
out
in
or
and
test
out
add
cwtl
mov
imul
pusha
int
adc
push
adc
xchg
arpl
mov
mov
ret
aas
rcrl
jo
adc
ja
xor
stos
inc
popf
push
jns
fidivrs
clc
mov
push
cmp
jo
adc
mov
aad
or
dec
outsb
xor
scas
xchg
out
icebp
mov
pop
adc
out
mov
jecxz
mov
arpl
xchg
mov
pop
adc
out
icebp
movsb
or
mov
push
cmpsl
lds
fdiv
out
pop
jg
imul
int3
lret
jnp
and
lea
into
ficompl
inc
add
fwait
cmp
rcrl
adc
cmp
cmp
inc
rcll
scas
lcall
xor
pop
and
enter
aad
sbb
xchg
xlat
imul
pop
inc
inc
pop
inc
pop
mov
add
mov
sbb
pop
imul
lds
jns
in
popf
push
sbb
lods
add
xor
adc
stc
xor
xor
sbb
out
cmpsl
push
in
cld
les
xor
xor
cmp
lea
out
repnz
call
mov
sar
dec
test
shll
bound
movsl
jmp
push
lods
or
fstpt
lahf
fcmovbe
and
jl
jnp
lret
lock
cmc
push
fnsave
fildll
gs
in
ljmp
es
and
movsb
add
xchg
mov
test
adc
sahf
outsl
lret
mov
xchg
mov
xorb
mull
aam
xchg
mov
mov
push
loop
clc
rolb
in
jle
jae
paddd
push
les
faddl
sbb
icebp
enter
dec
and
sarl
fildll
addl
jnp
lods
inc
adc
cs
pop
mov
rol
leave
pop
jmp
movsl
inc
push
mov
data16
aad
xchg
aas
sub
dec
jb
in
lea
ss
in
mov
stos
mov
inc
pop
xor
sbb
adc
fs
aas
mov
pop
xor
jmp
mov
inc
mov
out
insb
fdivs
cltd
in
mov
pop
imul
faddl
jbe
ret
push
lods
movsb
sarb
aam
mov
jns,pt
inc
loop
mov
loop
imul
mov
filds
or
xchg
add
pusha
ljmp
inc
xlat
mov
push
or
sbb
repnz
fldenv
loope
mov
or
fwait
dec
push
xor
insb
arpl
adc
mov
xchg
sub
fwait
ret
push
orb
jo
adc
mov
rcr
jl
cli
and
lods
mov
add
cmp
in
fwait
ds
ds
outsl
xlat
sti
inc
jle
jne
dec
xchg
sub
dec
pop
scas
xchg
loope
mov
out
movsb
mov
push
push
movsb
or
insl
lea
pop
out
mov
insl
fdivrs
subl
lret
mov
add
xchg
or
mov
mov
cwtl
mov
rolb
xor
push
push
push
stc
out
adc
cwtl
mov
dec
jmp
rcrb
jl
xchg
scas
or
divl
and
xor
and
add
mov
pushf
in
ss
jle
fcmovu
add
lock
out
lcall
cs
mov
adc
ret
ds
add
dec
xchg
jle
aaa
mov
sub
lretw
out
mov
jb
daa
dec
out
xchg
push
paddsb
movsl
cltd
jecxz
jnp
int3
cltd
ss
out
add
arpl
push
jecxz
mov
cmp
mov
adcl
cld
ret
jnp,pn
in
loope
pop
cltd
into
xchg
and
mov
loopne
mov
aam
fbstp
sub
jmp
in
cmp
xorb
dec
mov
ss
outsl
jl
cmp
jb
test
fs
add
cmp
adc
lahf
add
sub
push
in
add
loop
cmp
mov
je
inc
popf
sbb
lahf
jge
mov
jle
add
js
fnstenv
push
clc
fcomps
jo
dec
xchg
icebp
cmp
in
cmp
add
sarl
push
jmp
xchg
and
xchg
mov
cmp
shll
dec
sbbb
xchg
cwtl
roll
sub
outsl
push
adc
or
adc
cmp
aad
stos
ret
lcall
jns
lret
push
inc
pop
mov
push
movsb
loopne
mov
sbb
std
dec
sub
roll
mov
adc
adc
xor
pop
add
lea
hlt
out
movsb
push
enter
roll
adc
leave
xlat
cmp
negl
xchg
pop
and
inc
cmpsb
pop
jno
mov
mov
fldl
inc
in
ja
outsb
dec
lea
mov
enter
scas
js
stc
test
pop
out
sub
stos
outsb
ds
cmp
adc
cmp
test
test
rcr
inc
adc
adc
inc
xor
std
outsl
data16
fstpt
push
inc
push
jl
out
dec
jmp
aaa
popa
mov
ret
adc
enter
push
sbb
sti
loopne
sahf
lea
lea
or
xchg
push
out
sahf
mov
mov
lock
fidivl
insb
mov
in
pop
xor
hlt
loopne
cltd
popf
dec
fcoml
les
mov
cmp
shl
test
and
cmp
imul
scas
push
dec
scas
in
hlt
mov
xchg
sub
faddp
xchg
and
cmp
in
popf
sub
scas
out
out
scas
jne
fiaddl
out
lcall
and
cmp
je
in
xchg
fbstp
lret
jp
xchg
push
sbb
shlb
pop
fldenv
xor
or
int
mov
jne
andl
enter
push
das
out
add
inc
test
mov
sbb
ret
dec
cmp
in
popf
sub
out
out
scas
jne
fiaddl
out
lcall
and
cmp
je
in
xchg
fbstp
int3
jp
xchg
push
sbb
addr16
fldenv
xor
xchg
bound
xchg
mov
push
gs
inc
inc
cmp
cmp
dec
xchg
push
cmp
mov
inc
push
xchg
imul
lods
jle
mov
rcrl
jns
push
pop
or
xchg
pop
sub
dec
xchg
and
in
dec
mov
mov
cmp
sbb
repz
jb
cli
sub
sti
gs
repz
pop
into
insb
and
mov
mov
ljmp
movsb
dec
in
dec
test
mov
sub
push
aaa
adc
inc
aaa
mov
jp
xchg
and
and
add
movsl
dec
jecxz
dec
mov
mov
das
pop
mov
gs
dec
cmp
dec
sarl
fisttpll
xor
fisttps
mov
or
xchg
pop
loope
cmp
jbe
loopne
push
xor
icebp
adc
add
insb
fcmovnb
fildl
sbb
inc
xchg
sub
call
es
jmp
inc
jecxz
xlat
retw
lods
pop
movsl
lret
push
jae
rclb
mul
mov
sar
bound
inc
insl
pop
xchg
icebp
ljmp
sahf
incb
shr
dec
pop
stos
xor
mov
out
jne
outsl
popf
xchg
cmp
out
js
lods
sbb
mov
adc
and
aam
lea
jnp
ljmp
mov
imul
push
cmp
call
fstpt
iret
fadds
add
cmc
jecxz
xchg
xor
inc
int3
lods
setns
cmp
jecxz
mov
pop
repz
arpl
iret
xchg
mov
xchg
ja
xor
sahf
mov
imul
iret
subb
xchg
sub
cmpb
fcmovnu
dec
scas
inc
cwtl
mov
jnp
je
imul
and
movsb
lahf
push
pop
fs
push
int
scas
adc
jnp
rorb
inc
movsb
jne
in
push
xor
sub
sbb
pushf
xchg
icebp
mov
inc
js
cmp
jnp
rcr
mov
adc
jbe
inc
cmp
sub
in
jbe
iret
test
xor
inc
loop
je
sarl
sub
mov
int
addr16
sub
lahf
fidivrl
inc
xor
inc
ss
mov
ljmp
std
aaa
fldt
pushf
sbbl
dec
sub
test
aad
jp
imul
lret
mov
aad
movsl
loop
sub
push
rclb
testb
sar
imul
jae
xchg
sbb
mov
mov
pop
mov
mov
lds
pop
inc
mov
movsl
or
lahf
xor
dec
test
push
lret
inc
in
pop
notb
sahf
jl
std
test
in
cmpsb
pop
mov
leave
mov
ror
movsl
or
pop
xor
and
ret
push
mov
pop
and
xchg
and
adc
dec
sahf
dec
lret
clc
inc
insb
add
and
jne
mul
sahf
adc
fdivrp
rolb
sub
ret
or
ss
mov
jb
pusha
mov
lods
pop
loope
adc
mov
xchg
fisubl
insl
fidivl
pop
jae
maskmovq
negl
mov
inc
insl
or
mov
in
out
mov
inc
xchg
outsl
aas
and
mov
push
jge
adc
sahf
cmp
ret
mov
fdivs
js
leave
adc
andl
dec
xchg
lods
mov
and
sahf
filds
cs
sti
mov
leave
bound
out
pop
stos
xor
hlt
ljmp
lahf
insl
push
inc
mov
sbb
lods
pop
xor
xor
sbb
pop
xchg
cld
mov
mov
inc
sarl
out
mov
rorl
inc
inc
sbb
je
xchg
sbb
adc
nop
in
xor
fsubrl
push
movsb
loopne
push
dec
test
sahf
cmp
int3
insb
ss
aas
jns
rcl
dec
xchg
testl
jmp
cmp
sub
fisubrl
sbb
fisubl
popa
pop
pop
lret
jge
mov
out
cltd
mov
push
mulb
inc
js
fs
mov
in
inc
xchg
push
cs
cmpsb
out
mov
imul
cmp
scas
cmpsl
shrb
lods
xchg
xorl
dec
out
mov
pop
xchg
subps
cmp
sahf
and
push
push
mov
xor
hlt
pop
rcrl
repz
leave
lcall
xchg
xor
aam
loop
dec
ss
out
in
adc
jae
dec
xchg
mov
add
les
shrl
outsb
out
cli
iret
in
xchg
jp
dec
icebp
mov
dec
pop
inc
jns
push
sub
and
mov
jecxz
mov
into
push
out
adc
mov
push
pop
push
jmp
cmp
dec
arpl
fildll
inc
test
testl
scas
std
mov
ret
or
add
mov
add
fiadds
in
mov
dec
mov
inc
xchg
add
or
mov
dec
popf
cmp
insb
test
jle
hlt
sbb
pop
ds
aaa
shlb
inc
mov
pop
push
dec
jle
frstor
push
fwait
aaa
popa
xor
jbe
orl
hlt
mov
mov
out
push
pop
inc
cmpsl
in
cwtl
sti
out
pop
sbb
push
popf
and
pusha
xor
adc
ds
mov
pop
adcb
imulb
rcrb
lds
cmpsl
jo
aas
jo
push
mov
inc
lock
add
xchg
push
mov
dec
into
cmp
add
fcmovne
xchg
jno
dec
or
cmp
loop
dec
pop
push
ja
inc
or
aam
ret
and
in
adc
and
es
xchg
ljmp
movsl
in
les
and
xchg
pushf
mov
pop
es
movsb
ds
jne
mov
call
in
mov
mov
dec
or
sbb
dec
adc
lahf
js
adc
lea
xchg
js
lock
mov
ds
xor
push
push
mov
adc
jl
push
mov
mov
push
scas
sahf
in
pop
mov
out
pop
loope
outsl
lds
xor
fstps
xchg
cmpl
js
xchg
ret
jecxz
dec
daa
ss
push
out
jae
mov
jae
jno
pop
mov
bndstx
mov
pop
stos
lret
jmp
jle
push
std
imul
fnsave
insl
cmpsb
fwait
inc
pop
jns
fidivl
mov
cmp
mov
or
out
je
aam
shl
or
xor
cs
std
pop
dec
cmp
sahf
inc
inc
and
xor
enter
jg
and
xchg
cmp
mov
mov
xchg
pop
test
push
inc
sti
cmpsb
lds
adc
out
sbb
cmp
dec
pop
adc
xchg
cmp
sbb
ret
jmp
jnp
sub
xchg
add
xor
push
sub
pop
xchg
daa
cmp
add
xchg
ljmp
movsb
nop
push
or
jno
xchg
test
cmp
call
repz
cmp
adc
mov
and
int
mov
repnz
stos
mov
aas
ret
lret
test
sub
lock
inc
inc
pusha
pop
arpl
out
mov
test
xor
xchg
stos
xchg
and
in
xchg
cmp
divl
daa
mov
push
or
mov
sbb
xlat
stc
aad
in
gs
add
lock
je
sahf
mov
in
mov
sbb
mov
sbb
bound
ret
dec
sbb
loopne
or
repnz
adc
jp
aaa
xchg
das
fnstsw
js
gs
lret
jne
dec
in
mov
test
leave
insl
push
out
push
pop
push
push
xchg
lret
xchg
sub
repz
fldenv
jno
sbb
out
xchg
push
inc
push
cmp
daa
cli
popa
jo
cmpsb
cmp
sarl
mov
daa
lcallw
xchg
mov
out
ds
mov
fists
sub
je
leave
mov
push
push
aas
and
fs
fcoml
and
out
jb
loope
imul
and
xchg
mov
sub
xchg
test
pop
lock
aas
inc
les
adc
es
sbb
add
xor
enter
dec
xchg
and
jno
mov
sub
into
cmp
outsb
mov
stos
pop
push
and
add
jbe
mov
inc
int
enter
stos
popf
mov
subb
inc
push
stos
shlb
inc
pop
dec
and
int3
sbb
movsl
sub
sub
add
fwait
xor
adc
ja
pop
inc
mov
adc
and
pop
in
add
in
movsl
bound
shll
in
mov
mov
jb
enter
sarb
stc
stc
in
xorl
xchg
hlt
ss
mov
cli
fldl
mov
es
and
ret
enter
dec
jae
lods
lds
bound
and
cmp
pop
lea
lods
jecxz
ret
dec
mov
insl
cmp
xchg
sbb
movsb
mov
icebp
pop
dec
stos
data16
stos
cmp
push
shll
cmp
int
add
adc
sbb
inc
enter
cltd
sub
dec
imul
movsl
push
sbbl
sbb
repnz
lea
jg
jo
mov
lea
pop
and
mov
clc
sub
xor
push
and
cmp
fsubr
faddl
jmp
aaa
fcomip
xor
daa
xor
rolb
arpl
xor
jns
movsb
or
jae
xlat
sbb
fsubl
mov
fnstcw
add
and
adc
hlt
inc
and
notb
sbb
xchg
shlb
shr
mov
mov
inc
dec
or
jnp
or
push
push
cmp
mov
dec
lret
loopw
jb
loope
mov
stos
or
int3
les
rcll
loopne
xor
rep
cmp
jmp
push
das
js
rcll
iret
mov
xchg
mov
mov
and
push
jns
out
pusha
dec
push
movsb
mov
outsl
cmp
int
out
fwait
mov
movsb
sub
lret
call
loope
xor
pusha
cmp
jmp
xchg
shlb
inc
xchg
xor
sti
xorl
ds
ffree
fstpt
fs
cwtl
imul
mov
xor
out
insb
inc
push
mov
cli
aaa
incb
xor
jmp
scas
aaa
sbb
adc
ret
push
sbb
leave
arpl
enter
lret
cmp
dec
ret
loopne
inc
shlb
mov
inc
jns
sub
es
xlat
xor
ret
xchg
cld
mov
imul
jge
notb
movsl
movsl
test
jb
and
test
lret
and
imul
dec
xchg
movsb
popf
insl
xchg
dec
mov
push
xchg
nop
lds
insl
xchg
mov
dec
dec
in
inc
fwait
ss
loop
dec
pop
push
aaa
mov
push
mov
scas
test
mov
in
mov
inc
sbb
sub
xor
data16
rcrl
dec
out
pop
mov
xchg
xchg
mov
lcall
mov
jnp
movsl
ret
inc
fsubs
dec
jecxz
xchg
xchg
fstpt
mov
movsl
sbb
iret
leave
push
mov
es
nop
lods
mov
lods
std
push
sbb
loopne
shll
mov
ds
mov
outsb
imul
cltd
mov
hlt
imul
cwtl
cmpsb
inc
or
in
cmp
inc
push
jmp
mov
inc
dec
sub
add
add
mov
test
cs
mov
ret
and
std
das
mov
mov
test
xor
cmp
addr16
mov
cmc
popa
imul
lea
int
add
cmp
test
push
xchg
sbb
out
pusha
jbe
jecxz
xor
lods
and
out
adc
out
outsb
outsl
dec
cmpsl
loope
xchg
fisubrl
dec
push
jb
or
orb
or
pop
push
rolb
or
dec
inc
jb
jno
jo
mull
mov
in
in
xor
push
sub
push
mov
inc
mov
imul
inc
sbb
cwtl
test
and
cmc
leave
mov
xchg
sbb
je
mov
in
test
add
push
icebp
add
inc
repnz
lods
test
jo
pop
adc
int3
dec
sbb
jmp
sub
sub
cmp
pop
mov
or
pop
xchg
mov
add
aas
add
lahf
fcmovu
mov
scas
aaa
inc
in
sbbl
inc
subb
out
adc
es
jns
pop
mov
push
aaa
in
js
sbb
out
outsb
rcrl
jo
push
stos
sbb
mov
jecxz
push
movsl
add
adc
inc
test
xor
push
subl
out
fistps
inc
rcrl
push
movsl
xchg
fs
imul
notb
add
or
sub
fcmovnbe
xor
pop
in
inc
push
shrb
adc
inc
jno
xchg
mov
cmpsb
xor
jae
gs
arpl
and
sbb
pop
das
mov
or
divb
lea
push
or
xchg
mov
mov
add
insb
fmuls
addr16
mov
adc
and
shlb
mov
mov
mov
xchg
mov
adc
push
leave
shlb
inc
xor
mov
jo
pop
jb
insl
push
push
mov
sub
mov
lcall
hlt
mov
xor
mov
nop
fistpl
adc
lret
fimull
daa
aad
jno
xorl
mov
inc
cmp
fs
pushf
jns,pt
fnstsw
lahf
sbb
sbb
cli
xlat
mov
cmp
sti
fdivs
xor
fs
push
leave
clc
and
mov
adc
cmp
jb
pop
mov
lds
rolb
insb
lcall
xor
mov
bound
xchg
pop
jb
push
std
shrl
cld
lock
out
test
ret
pop
mov
jb
sbb
lods
add
adc
or
add
enter
mov
pop
adc
es
cmpsb
out
cmp
push
jns
fisubl
repnz
mov
add
addr16
mov
mov
ret
or
ss
pushf
psrlq
xchg
mov
sub
inc
outsb
ds
dec
xchg
xor
add
dec
bound
leave
xchg
and
add
mov
push
sbb
xor
pop
out
addr16
test
nop
push
or
in
imul
xor
mov
rcrb
loop
cmpsl
sbb
mov
out
fldcw
push
push
clc
fisttps
xchg
popl
imul
xor
sahf
cmp
fists
insl
dec
xchg
pop
jae
dec
dec
jecxz
pop
pushf
xor
fdivrl
loope
xor
mov
iret
addr16
nop
sbb
mov
xor
mov
or
jl
hlt
inc
inc
lods
les
and
mov
cmp
mov
mov
movsb
mov
push
in
sbb
add
dec
xor
lods
pop
loopne
in
ss
mov
std
negl
popf
hlt
xchg
dec
mov
sbb
dec
dec
ds
xchg
or
scas
sub
or
or
int3
xchg
fsubrp
gs
rorb
insb
loopne
loop
jae,pn
pop
adc
movsbl
lock
and
xor
mov
cwtl
jno
fisttpll
int
push
test
or
xlat
out
and
mov
dec
jns
ret
push
lds
lods
xchg
mov
fisubrs
fs
repz
inc
jp
aas
push
pop
push
mov
clc
and
je
in
int
mov
or
inc
mov
dec
cmp
dec
pop
xchg
xor
mov
mov
out
push
sbb
sub
aas
lock
es
mov
mov
scas
ficomps
pop
movsl
push
push
insb
or
sbb
cmp
add
pop
sarl
loop
pop
mov
push
dec
add
inc
inc
xor
fidivs
fs
sub
rcrl
repz
test
mov
fisttpll
xchg
mov
call
adc
jmp
jnp
call
inc
jp
out
dec
insb
fwait
cmc
enter
call
inc
lods
sbb
call
or
lods
ret
in
ljmp
push
leave
cltd
push
fadd
stc
jae
call
push
cltd
arpl
stc
jae
push
push
idivl
push
cs
test
or
in
or
jp
enter
test
add
int3
lcall
mov
cmpsb
jbe
fimuls
movsb
xchg
push
negl
xor
cmc
pop
lret
mov
popf
mov
cmpsb
jp
dec
arpl
jp
in
rcr
js
jp
lds
js
pop
push
call
fdivs
sbb
int
shlb
cltd
out
inc
inc
push
popa
shl
dec
fnstsw
out
cmp
inc
or
and
repnz
call
pop
es
out
sbb
out
out
and
les
xor
mov
pop
lret
cs
cmpsb
jns
jo
jecxz
insl
mov
xchg
xchg
push
jo
jnp
aad
jne
xchg
call
and
xor
push
jns
out
adc
out
rcl
add
mov
mov
mov
scas
mov
mov
popa
inc
shlb
push
cmc
pop
fisubs
sbb
xchg
cmp
xlat
fiaddl
push
pop
jge
cmpsb
jo
icebp
int
movsl
js,pt
dec
xchg
pop
jbe
aaa
mov
push
xor
ror
pop
shlb
or
hlt
in
xor
inc
push
xchg
jg
inc
xlat
cmp
aas
xor
lcall
cmp
push
std
jne
ret
adc
cli
sbb
sbb
lods
gs
mov
pop
out
lcall
bound
insl
fdivs
xchg
repz
loop
hlt
mov
fbstp
lds
jno
adcl
xchg
lods
mov
out
out
lock
pop
sbb
cwtl
fistl
rcll
inc
sahf
lods
or
cmp
lock
sbb
ret
shrl
mov
mov
xor
cmp
push
and
push
sub
stos
dec
push
pop
pop
push
int3
aad
sbb
xor
loopne
insl
imul
mov
push
inc
aad
or
aad
addr16
lods
dec
add
mov
jl
mov
cmp
xorb
cmp
cmpl
pushf
xor
sub
xor
arpl
push
add
mov
out
lahf
push
xchg
pop
ss
push
push
movsl
sub
xor
out
cwtl
xlat
dec
sbb
stos
mov
or
mov
push
mov
xor
mov
loope
mov
lret
sbb
ficoml
arpl
popf
jl
incb
adc
in
in
mov
leave
push
in
dec
jge
repz
xchg
js
mov
mov
push
push
dec
dec
push
xchg
push
mov
adc
test
mov
sbb
inc
scas
mov
add
in
into
in
pop
in
dec
sub
cmp
jae
dec
out
into
ljmp
push
sub
inc
xor
push
cld
jne
test
sub
mov
dec
das
push
inc
mov
push
shll
hlt
and
inc
xchg
je
fsubr
jmp
push
aad
push
enter
sub
in
out
push
xchg
js
xchg
dec
int
rolb
mov
std
pop
cmpsl
leave
xchg
jmp
mov
jnp
stc
cmpsl
movsl
cmp
jne
mov
mov
test
enter
ss
scas
jnp
stc
std
sub
push
or
insb
repnz
adc
push
lock
xor
int
mov
cwtl
or
jmp
or
stos
dec
testb
jge
sub
mov
push
lea
imul
and
cmp
loopne
push
jns
clc
and
jo
test
dec
in
mov
iret
or
fs
dec
out
mov
jl
leave
test
xor
push
cs
daa
cmp
lods
dec
in
sub
sbb
push
bound
mov
and
sbb
imul
aas
adc
mov
out
adc
sbb
jg
xor
ja
ret
imul
movsb
ret
popa
and
xor
int
jns
inc
fcmovnbe
leave
xchg
and
mov
mov
loopne
sahf
xchg
aas
or
dec
sbb
cmp
repz
jp
inc
fisubrl
imull
scas
fstl
jo
xchg
jg
and
test
cmp
xchg
int
ss
ror
mov
aad
inc
addr16
pop
dec
pop
mov
adc
sahf
sub
xchg
out
rcrl
dec
adc
dec
aaa
mov
sub
mov
nop
mov
mov
addb
sub
roll
sti
mov
lret
out
dec
sahf
mov
xchg
fwait
mov
shrb
or
sbb
movsb
dec
out
pop
scas
xor
xchg
mov
loope
push
out
hlt
out
dec
pusha
aaa
cmp
insl
lds
shrl
or
ret
imul
shl
jge
hlt
pusha
xlat
ds
xchg
repz
sbb
sarb
lea
cmpsb
ss
fisubs
dec
cmp
jl
cmc
xchg
cmp
add
xor
scas
lods
lcall
pop
push
dec
hlt
lods
dec
in
dec
xchg
sub
push
hlt
xchg
lret
scas
es
cmpsb
sbb
or
rcll
xchg
fsts
test
int
cmp
inc
sbb
fwait
dec
jbe
ja
inc
icebp
mov
inc
fsubl
inc
nop
push
or
and
sub
jecxz
aas
lock
into
pop
pop
shll
xor
lret
pop
or
aam
dec
and
dec
les
xor
ss
imull
dec
push
push
out
mov
in
imul
ret
or
jmp
and
aad
mov
inc
inc
and
test
mov
xchg
sbb
in
stc
je
aas
cmp
add
mov
mov
dec
sbb
push
je
int
add
mov
cwtl
sub
scas
pop
fwait
out
or
push
or
mov
mov
inc
loop
js
sti
sti
mov
pop
pop
aas
xchg
fidivrs
lret
movb
jecxz
cmp
sbb
cmpsb
dec
sti
cmp
mov
xor
mov
dec
fnstenv
in
fwait
scas
jmp
mov
shrb
jg
lds
jge
outsl
test
jne
xchg
xchg
loop
aam
xchg
test
out
sub
sti
cmpsb
inc
repz
pop
cmp
dec
cwtl
sbb
ficoml
or
ja
push
xor
mov
ret
xchg
jno
movsb
cmp
fsubrp
jns
fdivp
cld
cltd
test
sub
mov
pop
ljmp
xor
fwait
push
inc
outsb
add
pushf
or
sub
hlt
push
xor
jnp
insl
pusha
jmp
nop
fwait
pop
sub
dec
aam
mov
sbb
xchg
add
int3
loope
lahf
ljmp
sub
mov
mov
inc
dec
jg
inc
psubusw
jae
inc
and
scas
jle
push
outsl
cmp
andb
ljmp
inc
fimuls
xchg
xor
lods
sub
fstpt
pusha
fnstcw
dec
sahf
scas
shrb
in
adc
mov
iret
or
xchg
and
enter
dec
push
mov
loop
mov
in
mov
pushf
sub
lahf
movsb
adc
gs
fldcw
sahf
mov
fisttpl
aam
adc
outsb
jmp
lret
int3
clc
xchg
das
pop
aaa
cmp
insl
lds
jge
push
inc
dec
cmp
mov
test
int
rcrl
dec
push
addr16
xor
mov
cmp
dec
loop
cmpsb
adcl
push
jecxz
mov
push
cs
jmp
mov
dec
repz
xor
xor
mov
pop
push
mov
sbb
aas
fs
lds
into
or
sub
fdivrl
xlat
hlt
imul
push
push
movsb
xor
add
inc
jns
out
je
leave
xor
stc
popa
or
xor
cmp
push
dec
xchg
pop
je
pushf
fcoms
icebp
xor
cmpsb
cmpsl
mov
mov
sahf
pop
and
push
pop
loopne
aam
xchg
mov
dec
fistl
repnz
test
xchg
ret
jne
mov
mov
scas
mov
fstpt
iret
mov
test
lahf
and
adc
add
xchg
pop
ret
gs
repz
mov
rorl
dec
jmp
int
loope
mov
fstl
repnz
xchg
mov
inc
xchg
push
cmc
popf
sub
xor
frstor
push
jp
xor
lret
and
pop
xchg
scas
mov
cmp
xchg
mov
fstps
jecxz
shlb
xor
loopne
adc
jo
pop
call
in
lods
dec
call
int
lds
pusha
mov
mov
sbb
fldenv
xchg
lods
mov
out
and
mov
dec
ss
xor
ss
fidivrl
ret
cmp
enter
loop,pt
outsb
fnstenv
aaa
cld
or
push
push
xor
and
push
hlt
add
les
push
adc
jle
mov
xchg
cmpsb
xlat
push
jbe
jge
push
ss
jbe
sbb
shlb
sti
jle
mov
inc
cli
push
and
sbb
fwait
aaa
andl
ss
gs
ja
mov
ret
inc
gs
jge
es
insb
lods
push
jge
rep
sbb
nop
ss
leave
pop
pop
repz
rcrb
pop
mov
lret
idiv
sub
nop
cld
out
jle
fldcw
mov
shrb
mov
inc
shrl
inc
js
ljmp
add
pop
aas
jmp
cmpsl
fisttpl
lock
sarb
mov
pop
fists
inc
out
pop
adc
adc
add
cs
sbb
addr16
inc
fldl
and
sub
push
adc
dec
xchg
xor
out
sar
scas
scas
ds
mov
jnp
inc
jno
arpl
pop
cmp
cmc
inc
sub
cmp
stos
data16
adc
ror
jne
sub
or
mov
cs
sbb
mov
shrl
repnz
adc
mov
stos
push
fildl
insb
test
xor
jmp
or
push
out
shlb
test
lahf
dec
cmc
jnp
add
jecxz
add
ds
inc
sbb
ret
jl
lock
push
lea
push
xlat
icebp
xchg
aam
mov
fcmovbe
mov
aam
sbb
push
cld
jge
cmpsl
mov
or
test
std
popf
add
sub
arpl
xor
dec
add
outsb
lahf
cs
sub
jnp
in
fstl
pop
mov
push
push
push
xchg
cmp
loop
dec
xchg
pop
jb
xor
shlb
ret
push
shlb
nop
pop
lea
lods
mov
jge
rcrb
outsl
inc
inc
sub
inc
hlt
idiv
neg
sbb
jecxz
add
das
xchg
sbbl
mov
or
outsl
cmc
lret
fs
test
into
pusha
push
shlb
dec
shll
pop
fidivl
fldt
inc
mov
xor
cmp
test
xor
lock
or
cwtl
cli
pop
repnz
sbb
cmpsb
in
mov
mov
add
insl
push
inc
sbb
ret
jne
mov
push
xchg
sub
lahf
xchg
xchg
fnsave
aad
dec
add
enter
icebp
mov
lret
mov
dec
out
inc
ds
loop
adc
fs
xchg
jle
push
jp
push
repnz
jg
test
leave
pop
mov
xchg
xchg
in
cli
and
and
adc
sub
cmp
ss
dec
xchg
push
mov
popf
mov
pop
sub
or
movsb
xchg
shrl
mov
and
pusha
cmpsl
mov
test
fwait
dec
push
xor
cmpb
sahf
lret
orl
scas
aaa
test
xchg
icebp
add
xchg
and
ljmp
arpl
jnp
xchg
push
mov
jecxz
dec
dec
sti
lock
test
inc
ffreep
loopne
and
pop
xchg
scas
inc
in
loope
dec
decb
nop
dec
insb
inc
ljmp
cmp
mov
icebp
cld
xchg
sub
sub
xchg
imul
mov
aaa
sbb
sbb
test
shr
dec
pop
pop
jnp
out
dec
dec
inc
xchg
out
mov
scas
xor
insb
stos
mov
sbb
daa
sbb
shl
cmp
inc
cmpsl
cmp
ficoml
jo
repnz
sub
or
pop
lds
das
or
aas
push
inc
xchg
inc
les
imul
insb
jg
xlat
push
jmp
add
and
and
enter
push
ds
repnz
add
ret
push
enter
cmpsl
mov
push
out
pop
mov
dec
lods
push
jge
rep
jl
xchg
xor
mov
jo
push
das
out
enter
jae
dec
pushf
nop
add
mov
or
dec
lcall
mov
fs
jecxz
add
and
shrl
aaa
sbb
scas
insl
xchg
icebp
add
rcrl
jns
les
into
sarl
mov
hlt
outsb
mov
lret
test
repnz
jns
push
stos
loop
xor
mov
mov
jp
test
push
mov
sub
xchg
jne
les
xor
dec
mov
jmp
push
mov
jg
cwtl
jno
dec
inc
dec
mov
lret
adc
shlb
inc
push
adc
out
in
lahf
fsubl
pop
sub
mov
xor
fldl
mov
cltd
pushf
sub
lcall
cmp
xor
loop
test
test
push
push
hlt
adc
je
jns
lret
sbb
rclb
aas
mov
scas
pop
push
or
stos
mov
out
push
dec
inc
or
push
jns
xchg
es
out
mov
sar
rcl
cmc
and
push
jb
xor
mov
mov
cmp
aam
cmp
mov
mull
test
shl
and
adc
popf
repnz
inc
pushl
clc
cmp
mov
xchg
icebp
add
pusha
ret
add
sahf
sbb
sbb
push
aaa
or
aad
pop
xor
call
leave
cmp
pop
lcall
rcr
aad
lock
or
out
cld
or
adc
cmp
iret
or
mov
mov
repnz
pop
sbb
ret
dec
xor
xchg
or
jbe
enter
sbb
jg
lock
test
enter
add
dec
pusha
inc
stos
lods
cs
mov
mov
cmp
dec
xchg
pop
jb
xor
ret
popa
aaa
fwait
ret
push
shlb
addb
test
lret
pop
shlb
clc
inc
insb
add
and
jne
cmpsb
insl
and
js
test
push
mov
popf
test
not
xchg
gs
scas
fidivrl
xchg
loopne
lret
pop
call
jbe
daa
cmp
ret
sbb
ss
xlat
cmp
stc
popa
js
mov
push
out
lock
dec
sbb
cmp
rorb
stc
add
mov
aas
fidivl
cwtl
cmp
test
or
sbb
pop
je
cwtl
fcmovne
mov
int
int3
cs
in
repnz
fwait
adc
loop
and
sbb
cmp
cmovge
mov
inc
push
push
enter
shll
sub
sti
cltd
push
jo
mov
or
sti
cmpsb
rcll
aaa
mov
lds
mov
xchg
jecxz
sahf
mov
xchg
inc
imul
or
fbld
ljmp
xor
mov
outsb
cmpsl
int3
xchg
int
jbe
mov
fwait
adc
adc
cmpsl
dec
in
ds
xor
aas
jp
loop
adc
sbb
cmp
clc
or
pop
in
push
pop
addr16
mull
cmp
int3
shl
mov
jl
push
sub
push
js
push
xor
dec
gs
sub
mov
or
jns
mov
inc
repnz
ljmp
push
fnstsw
mov
jae
fstl
inc
jl
data16
insl
cli
ds
adc
cld
out
fsubl
mov
rclb
fmuls
jbe
mov
lock
pop
pop
inc
mov
adc
cmp
push
inc
and
fwait
stc
add
sbb
jnp
test
adc
or
lahf
xor
shrb
daa
pusha
push
dec
in
cmp
xchg
arpl
adc
xor
push
inc
adc
cmpsb
es
jecxz
jo
adc
inc
xchg
ss
xchg
adc
movsl
adc
daa
add
mov
iret
imul
stos
xchg
jno
xchg
test
cmpl
push
sub
scas
push
test
or
and
mov
xor
lret
xchg
cmc
inc
std
dec
dec
mov
xor
gs
pop
lret
sub
ret
add
pop
push
dec
arpl
imul
mov
jo
sahf
fiaddl
adc
rcll
test
and
cltd
sbb
mov
cmp
pop
and
in
pop
jne
cmpl
ds
sahf
cmc
lods
mov
and
std
in
fcom
xchg
out
enter
jg
inc
inc
out
outsl
adc
mov
loope
sbb
cwtl
xchg
test
stos
jb
sbb
push
in
imul
rolb
mov
sub
pop
cmc
std
inc
out
cmc
enter
jge
pop
cld
int
ror
bound
shll
pop
repnz
mov
shl
mov
sub
jb
or
dec
pop
xor
pop
lods
sub
outsb
es
or
test
mov
popa
lds
scas
imul
icebp
lea
lods
pop
jg
fwait
mov
mov
mov
xor
scas
mov
dec
mov
xor
push
ficoms
lods
aas
push
out
imul
sahf
insl
fisubl
jns
aaa
mov
sub
gs
mov
jl
and
push
sub
ja
roll
pop
lret
sbb
mov
sub
and
mov
daa
cmp
fsts
mov
dec
pop
in
push
mov
adc
sub
adc
add
in
adc
data16
xchg
cmpsb
imul
dec
and
and
inc
adcl
repz
fcmovb
jl
lds
dec
rep
ds
mov
shlb
inc
pop
imul
mov
in
movsl
sbb
pop
cmp
xchg
jl
xchg
inc
pop
push
daa
scas
out
push
in
icebp
add
mov
pop
pop
insl
nop
rcrb
push
xchg
mov
cs
aas
sbb
out
push
loop
inc
rol
test
stos
popf
dec
pusha
mov
rep
and
pop
insl
push
inc
push
sbb
xor
js
mov
popf
call
fdivs
adc
int
lret
in
repz
jb
xor
lods
xchg
push
cs
ret
cmc
jbe
lahf
lds
inc
xchg
mov
push
adc
and
pop
pop
xor
lock
push
daa
pop
dec
test
pushf
mov
adc
jmp
stos
sahf
push
insb
jl
adc
sub
mov
pop
inc
or
insl
add
bound
aas
dec
mov
xchg
and
jmp
xorl
inc
push
shrl
movsl
repz
daa
xchg
mov
fisttps
add
imul
iretw
jb
out
lds
out
daa
pop
mov
dec
mov
fistpll
dec
rorb
xchg
daa
pop
add
ja
shrl
jbe
fwait
xchg
dec
jle
stos
xchg
clc
jle
jg
lret
mov
adc
sub
popf
mov
pop
pop
cwtl
lret
cmp
iret
lcallw
and
fcomps
sbb
nop
mov
mov
pop
jnp
arpl
sti
sbb
aam
and
aaa
imul
scas
push
gs
insl
nop
cmp
fwait
loopne
lcall
out
or
and
jno
mulb
lods
cs
imul
jge
int3
adc
jno
das
add
fwait
cli
stos
push
scas
inc
cwtl
mov
inc
pop
jb
std
mov
pop
dec
jmp
and
jns
cmp
inc
insl
cltd
xchg
aad
repnz
mov
sbb
lods
mov
or
sahf
cmp
mov
push
sahf
push
ja
pop
or
pop
addb
dec
cmp
nop
out
cld
rcll
in
inc
hlt
adc
sbb
jne
pop
adc
mov
jbe
scas
stos
sub
pushf
mov
push
into
mov
push
sbb
sub
enter
std
ja
pop
decl
cli
int3
or
imul
shll
dec
xchg
ret
sub
or
add
sub
imul
xor
jl
rolb
mov
mov
fs
jle
sub
sahf
cmp
jnp
push
bound
stc
je
lahf
mov
out
rorl
or
out
int
xchg
add
or
scas
mov
loopne
mov
gs
xchg
inc
fwait
in
fucomi
fcmovbe
aam
sbbl
xchg
mov
rorb
jns
icebp
movsl
xchg
ss
es
jmp
xchg
lcall
rcrb
pop
lret
jl
cmp
rcrb
sub
mov
mov
out
lret
ds
movsb
clc
xor
cmp
mov
pop
icebp
xchg
mov
insl
jl
std
sgdtl
adc
pop
jmp
cmp
push
clc
gs
add
dec
mov
enter
aas
sbb
out
cli
cmp
jecxz
aas
or
dec
sbb
cmp
sarl
adc
out
cmp
mov
aas
aad
imul
arpl
fstpl
pop
xor
cwtl
daa
dec
bound
fldz
mov
out
jmp
out
dec
pop
call
lods
out
mov
mov
jb
jg
mov
xchg
push
cmp
mov
daa
dec
cmp
sbb
in
jb
loop
aad
imul
sahf
test
cmp
inc
out
sbb
sub
jp
xor
addr16
in
dec
sbb
pop
push
sub
sahf
cmp
sbb
je
lret
mov
daa
mov
and
scas
movsb
xor
enter
fadd
fisubl
and
pmullw
jno
mov
cmpb
loopne
ss
ss
outsb
test
int
xchg
jl
push
pop
mov
or
mov
jecxz
xchg
sub
add
dec
test
dec
repz
fidivrl
xchg
or
adc
call
imul
loop
mov
jl
inc
neg
mov
and
hlt
imul
sub
ret
icebp
jge
dec
aaa
cmp
popa
aaa
mov
mov
hlt
mov
pop
jmp
sbb
in
loop
mov
outsl
pushf
pop
push
pop
pop
dec
jle
cmc
push
sar
or
cwtl
cmp
xchg
out
aas
dec
inc
jle
lret
jbe
cmpsb
loop
sahf
rcll
jbe
pushl
mov
mov
cmp
jno
iret
pop
mov
in
ret
jl
xor
dec
lret
in
pop
imul
xor
cltd
jmp
pop
les
push
sbb
fmuls
movsl
je
and
add
sbb
repnz
cmpsl
lret
xchg
dec
rorl
add
insb
call
adc
cli
test
cmpsb
sbb
mov
leave
push
push
outsl
repz
shr
sbb
xchg
sub
and
dec
mov
movsl
push
sub
popf
jl
mov
enter
cmp
and
adc
mov
sbb
add
pop
mov
push
test
aam
fsub
or
scas
adc
add
pusha
les
ljmp
testb
pop
js
std
push
and
fs
inc
adc
popf
and
and
mov
xor
mov
mov
test
jl
jne
subb
xchg
popa
jle
add
and
ret
divb
mov
lds
imull
ljmp
stos
loopne
mov
dec
and
and
sbb
mov
outsb
push
dec
and
dec
jge
ljmp
bound
fisttpl
mov
push
les
inc
sti
call
adc
aad
jb
inc
imul
adc
mov
dec
out
sbb
push
popf
clc
pop
xor
fildll
addb
add
xor
sbb
int3
push
sub
out
aas
test
jmp
push
dec
clc
repz
outsl
out
mov
adc
push
inc
xor
popa
ret
xchg
fstpt
fs
push
into
cmpsl
das
arpl
add
fwait
xor
jo
pop
adc
push
lds
mov
cmp
fdivrl
lahf
lods
xchg
inc
nop
cmpsb
in
lcall
ja
adc
xor
cmpps
out
mov
jo
lret
imul
mov
in
call
lds
in
cltd
call
out
pop
xor
pop
rcr
mov
add
fs
push
sub
push
pop
push
jnp
out
lcall
insl
fcmovnu
push
sub
pop
icebp
fmuls
enter
fwait
stos
sahf
leave
ja
loope
lcall
rcr
mov
mov
or
adc
jmp
adc
push
cmp
and
lods
fdivs
xor
insl
fdivs
jno
adc
das
fnstsw
jbe
mov
lods
pop
mov
sbb
popa
ret
in
add
or
xchg
pop
adc
js
or
pushf
mov
xchg
xchg
popa
or
mov
adc
cmp
js
or
pushf
mov
lret
fstpl
and
inc
pop
mov
pop
inc
arpl
stos
jno
insl
fistpl
mov
or
outsl
pop
adc
jmp
adc
push
cmp
sbb
lods
mov
xchg
and
push
into
fcom
popw
adc
insl
movsb
xchg
and
jl
std
and
stos
xor
mov
fcomp
insl
stos
int3
pusha
pop
adc
and
dec
xchg
lods
lcall
xor
pop
xor
aam
fnstenv
and
pop
adc
int3
cli
das
pop
ds
cmp
mov
xor
xchg
and
xor
xor
ss
dec
xchg
scas
cltd
mov
xor
shrl
dec
xchg
mov
push
clc
mov
adc
inc
stc
and
push
ds
or
mov
or
xlat
call
aad
stos
pushf
sub
pop
sub
jae
test
lds
andb
stc
xchg
xchg
pop
adc
cmpsb
mov
cld
or
ss
addr16
lcall
pop
pshufw
iret
cmp
out
or
xor
gs
cmp
add
pop
dec
das
xchg
addr16
rorl
sarl
or
fwait
mov
inc
or
lds
dec
pop
loopne
fwait
orl
fidivs
out
sbb
cmp
dec
adc
lret
jle
jl,pt
xchg
cmp
xchg
mov
and
xor
adc
mov
jo
adc
mov
xor
repnz
xchg
push
fxch
testl
mov
xchg
cld
xor
ds
xchg
cwtl
pushf
sub
dec
cs
and
inc
jmp
xchg
shlb
aam
dec
sub
inc
cmpsb
rolb
xorb
rolb
fldt
adc
jbe
mov
inc
test
test
sbb
aas
addb
jns
loop
rcr
adc
inc
and
mov
add
cli
inc
pop
leave
arpl
add
rorb
lret
stos
frstor
jecxz
enter
jge
sbb
insb
and
cmpsb
or
rcl
arpl
adc
push
fistpl
cmp
cld
pop
add
adc
jp
jnp
push
inc
aam
mov
pop
stos
shr
pop
and
ficomps
adcl
push
rep
orb
cmp
pop
add
repnz
addr16
sub
inc
push
push
fists
xor
and
int3
jp
lcall
movsb
xor
fcomp
pusha
dec
lret
fdiv
pop
scas
xor
sub
mov
pop
loopne
pop
inc
nop
dec
xchg
das
push
push
mov
das
push
and
jns
das
setb
adc
xor
pop
adc
inc
push
aam
je
adc
mov
pop
mov
je
inc
inc
js
mov
ss
dec
xchg
das
sar
gs
les
push
arpl
ror
test
jo
ret
xchg
cmp
dec
roll
ljmp
mov
jbe
out
bound
insb
fdivs
adc
xor
out
add
fimull
sbb
cmp
test
cmp
outsb
or
into
fwait
lahf
clc
and
fimull
xor
es
outsb
pop
sub
jno
repz
mov
dec
sbb
xor
jbe
sbb
and
outsb
in
data16
jo
dec
lret
fdiv
enter
dec
sub
aas
sbb
pop
jo
sub
mov
test
outsb
nop
daa
xor
jmp
jl
mov
orb
sub
andb
mov
xchg
mov
pop
adc
test
subb
pop
mov
cmp
mov
cmpsb
int
push
mov
je
sbb
jne
repnz
insb
cmpb
daa
jo
pop
adc
js
lods
das
fwait
add
pop
adc
xchg
pop
rorb
push
and
fdivs
movsl
iret
add
push
mov
enter
push
aas
sar
sarb
pusha
shr
xor
fnstenv
adc
gs
rol
aaa
jns
fmull
shrb
jle
xor
loope
lea
sbb
loopne
mov
inc
test
push
jle
sbb
mov
xchg
aaa
jae
cmp
je
out
cmpl
xor
or
out
shll
loopne
mov
mov
push
pop
push
adc
lcall
inc
xlat
cmp
loop
cmp
cmp
adc
sub
jo
mov
push
adc
notl
pop
cmp
push
mov
lret
scas
rep
inc
out
lahf
bswap
popf
daa
or
mov
cwtl
inc
sub
inc
add
jo
pop
hlt
test
inc
les
cmp
pop
pop
shrl
xchg
cmp
popa
mov
nop
lods
int3
test
fistpll
ljmp
fsubs
cltd
ss
in
dec
fmul
pop
lock
hlt
pop
xlat
iret
sarl
in
inc
movsl
xor
mov
jno
into
lret
sti
dec
jp
lret
mov
js
inc
lock
cltd
repnz
repz
adc
bound
dec
ds
mov
xor
imul
push
cmpsb
ret
mov
pop
arpl
call
xchg
adc
mov
test
cmp
outsb
cmp
jae
jmp
adc
sbb
push
adc
mov
hlt
call
dec
jg
ds
dec
add
adc
and
mov
cmc
fs
adc
loop
repnz
movsl
and
sbb
leave
mov
cwtl
push
ret
mov
sbb
out
lret
xor
push
jno
lret
shlb
xchg
std
jmp
and
icebp
jmp
and
or
push
mov
movsl
loope
ds
loope
push
adc
push
ss
pop
push
pop
cmpsl
in
pop
xchg
fisubrs
cmp
clc
mov
mov
ljmp
nop
xor
sub
jns
insb
cmp
pop
jp
movsl
push
mul
cwtl
adc
cmp
sub
sub
inc
out
fwait
mov
es
xchg
ds
inc
or
out
aaa
mov
sub
lods
dec
jecxz
icebp
sbb
ss
fidivrl
lahf
movsb
nop
push
and
xor
cld
test
orl
nop
push
cwtl
and
mov
cmp
xchg
mov
insl
mov
cmp
les
or
mov
mov
int3
adc
loopne
inc
pop
rcll
cmp
flds
lcall
pop
out
mov
and
xor
ret
xchg
ret
cmc
fidivl
idivl
adc
pop
push
arpl
add
ret
cmc
jp
inc
iret
sub
in
xor
jp,pn
cmp
sbb
bound
imul
jne
fiaddl
sbb
and
sbb
jl
adc
push
xor
sub
repnz
data16
xor
mov
shlb
sbb
xchg
mov
push
fwait
adc
aaa
add
xchg
mov
sub
fdivrl
sub
or
int
and
out
sub
leave
adc
adc
and
push
rol
inc
stc
adc
inc
pusha
inc
inc
into
pop
sbb
aad
xchg
imull
adc
jmp
mov
ret
cmpsl
out
inc
ljmp
mov
pop
push
xchg
pop
pop
aaa
scas
sbb
inc
fdivrl
add
cmp
push
cmc
gs
leave
jge
repz
xchg
bound
leave
lods
or
leave
movsb
in
xor
and
lds
ret
or
push
mov
rcr
hlt
jb
movsb
lret
pushf
pop
jecxz
mov
fadd
outsb
push
mulb
popl
loopne
lds
cld
push
xchg
mov
pop
movsl
call
mov
insl
and
sbb
inc
cwtl
and
inc
cli
ss
aaa
mov
jb
and
push
or
add
lea
dec
jo
mov
movsb
jecxz
jo
lcall
mov
xorb
cmpsl
jne
neg
adc
loope
loopne
pop
int3
lods
fwait
insb
add
sub
inc
sbb
add
fcomip
repz
fisubs
fidivrs
rcrl
fs
sub
addr16
mov
rcr
sub
mov
inc
dec
xchg
ds
sti
adc
fidivrs
pop
clc
test
xor
jp
imul
mov
lds
nop
pop
data16
add
sub
je
sbb
jns
jg
cmp
fwait
add
mov
fldenv
cmc
jge
jns
xor
jo
dec
fiaddl
inc
dec
xorl
push
fstpt
lock
jmp
test
inc
insl
jle
testl
push
rolb
jae
mov
add
addr16
push
adc
clc
lret
popa
iret
cmp
popf
test
push
fldenv
fnstcw
jbe
mov
add
add
mov
fldt
rclb
dec
xor
stos
cmp
push
push
lds
xor
dec
pop
imul
leave
aaa
push
cltd
adc
sub
insl
add
in
sbb
imul
push
in
add
ljmp
frstor
mov
inc
xor
dec
in
or
shrb
mov
jl
or
push
sub
pop
outsl
push
lock
dec
out
loopne
icebp
jne
incb
xor
fcomps
cmp
sub
outsb
inc
iret
fwait
inc
fildll
rcl
gs
gs
xchg
pop
call
pop
je
dec
sahf
dec
mov
xchg
and
nop
movsb
sbb
imul
notb
cmp
mov
fs
dec
scas
mov
jno
sub
sub
insl
cmp
daa
dec
sub
sbb
in
and
bound
lods
mov
xchg
mov
xchg
scas
xchg
jl
inc
call
and
xchg
outsl
push
xchg
cs
in
das
or
jmp
and
adc
lock
in
xchg
call
daa
flds
shlb
cmpb
mul
cmp
cmp
lods
test
dec
or
mov
fwait
cmpsb
sbb
lret
inc
clc
dec
xchg
and
sub
fwait
cmpsb
nop
rep
ds
mov
mov
sahf
gs
jnp
push
cs
xor
cmp
movsb
mov
cmp
gs
fcoms
sbb
pop
jecxz
dec
sahf
lcall
xchg
shlb
mov
xor
fadd
fs
insl
nop
rcrl
inc
insb
mov
int
jns
mov
or
gs
mov
lea
ss
sahf
sub
sbb
mov
xchg
inc
fisubs
aas
cmp
dec
xchg
pop
jae
mov
rcl
repnz
aas
xor
out
mov
sti
call
sti
rcrl
popf
movsl
in
and
push
into
adc
jns
lahf
imul
out
xor
xchg
std
lds
pushf
cmpsl
mov
or
jne
pop
int
sub
and
in
sub
xchg
ret
mov
stos
inc
jmp
in
ds
setg
nop
jne
stos
fistpll
pop
push
cmp
cltd
cmp
cmp
jg
ljmp
test
sbb
ja
push
hlt
cltd
cltd
cmc
test
pop
add
lods
dec
dec
mov
lods
loopne
mov
cwtl
lea
shll
out
mov
xchg
dec
sti
or
nop
or
mov
aas
pop
shll
sbb
repz
mov
cltd
pop
das
lods
pop
shlb
sub
sbb
adc
test
popl
adc
cmpsl
push
test
loopne
sarb
sub
daa
lret
sbb
in
repnz
ror
sub
test
cs
mov
call
lods
or
aas
stc
pop
rep
inc
jns
inc
jp
pop
incl
xchg
sub
mov
dec
cmp
and
dec
xorb
sbb
mov
in
inc
fwait
sbb
cmpl
mov
arpl
mov
mov
xchg
xor
inc
lock
push
push
repz
cmp
mov
lcall
loop
in
mov
mov
stc
xorl
adc
jmp
inc
xor
cs
pop
or
mov
pop
out
mov
mov
or
jle
jbe
inc
jb
icebp
cmpb
pop
in
lret
inc
std
pushw
cmp
and
push
imull
loope
pop
push
cmp
ds
inc
jb
push
fs
ss
pop
xor
repnz
push
scas
pop
shlb
push
mov
lock
loopne
sub
imul
mov
in
xchg
jb
push
jae
add
sbb
loop
jns
jmp
push
enter
jno
jle
pop
into
gs
push
xchg
dec
xchg
das
ffree
popa
jecxz
enter
cmp
mov
loope
dec
sahf
cmp
gs
int
mov
sbb
sbb
gs
loopne
jo
daa
mov
repnz
sahf
cmp
data16
or
sarl
aad
sbb
mov
movsb
jo
daa
mov
aam
aam
js
out
jl
xchg
and
aas
mov
cmp
mov
fdivrs
sub
mov
sbb
sub
std
jge
mov
xchg
repnz
and
lahf
adc
out
jmp
addr16
sub
or
dec
pop
sub
adc
xor
daa
dec
sahf
dec
repz
and
xchg
out
enter
ret
xchg
lret
loop
pop
mov
in
inc
loope
inc
xor
shl
cld
ss
cmpsb
lea
mov
mov
std
sti
mov
push
stc
cmp
test
xchg
push
lods
push
push
shrb
movsb
repnz
call
mov
pop
sbb
repnz
mov
out
idivb
xor
js
sub
xor
cmp
xchg
mov
das
push
and
jns
das
jle
add
insl
fdivs
lea
push
adc
scas
leave
jle
es
xor
cli
clc
xor
push
daa
dec
in
mov
sbb
push
jb
xor
addr16
pop
in
pop
out
mov
loopne
and
sub
daa
cs
mov
jmp
jecxz
stos
mov
jecxz
mov
push
ds
jp,pt
repnz
xor
popa
std
jns
or
arpl
cld
mov
pop
out
xor
dec
pop
bound
andb
inc
xor
lds
ds
inc
popf
adc
lahf
lret
bound
cmp
call
adc
jns
scas
jg
es
push
insb
rol
and
rolb
out
jp
loopne
push
movsb
ds
aas
xor
mov
loope
add
lods
lea
mov
pop
sbbl
push
push
lahf
jge
or
jo
pop
and
pop
and
das
dec
sbb
xor
aaa
leave
jbe
adc
push
sub
lods
or
fsts
scas
ret
cmp
sub
mov
nop
daa
push
push
pop
push
jge
add
pop
lock
fsubs
add
mov
and
pushf
mov
xchg
sahf
xor
call
andl
sub
jns
cmpsl
je
aas
dec
mov
jl
fdivl
cmp
inc
cs
pop
jg
arpl
mov
mov
jnp
stc
jb
pop
sbb
out
dec
imul
or
mov
out
sub
mov
bound
push
into
or
arpl
jge
xchg
clc
mov
or
and
push
lret
xchg
ljmp
pushf
notl
pop
push
and
ficoml
pop
lcall
cmpsb
adc
into
sbb
xchg
inc
cmp
imull
dec
popf
push
fdivrs
shufps
imul
inc
adc
fldl
sub
cmp
mov
xchg
jns
pop
xorb
sub
insb
jg
dec
dec
and
or
mov
jmp
lea
dec
or
ljmp
sbb
addr16
add
mov
xor
cltd
in
std
push
xchg
adc
idivb
imul
ss
lcall
sub
inc
push
dec
push
movsb
loope
call
aas
filds
int
mov
jns
inc
or
adc
ficompl
mov
pop
dec
das
dec
sahf
test
xchg
and
sub
adc
mov
push
pop
cmp
add
shrl
pop
push
or
lds
repz
insb
fdivs
xchg
inc
push
ljmp
mov
pop
mov
lea
jecxz
adc
or
lds
push
jns
mov
fcmovbe
jns
and
aas
sbb
pop
lret
repz
jg
inc
xchg
sbb
fwait
push
push
aaa
cmp
data16
xor
pop
mov
mov
or
lds
aad
imul
loopne
xchg
sbb
shlb
sbb
xchg
xor
and
je
xchg
shrb
mov
cmp
mov
xchg
pop
call
cmp
and
ljmp
inc
lcall
daa
test
setbe
cmp
fistpll
sub
iret
sbb
sbb
fstp
jno
outsl
int
add
fistl
scas
arpl
mov
mov
shll
dec
scas
sub
outsb
ljmp
cmp
xor
adc
add
fbstp
enter
loop
aad
xchg
subl
inc
xor
aas
cmpsl
lidtl
xor
in
mov
sbb
lcall
test
insb
fnstcw
dec
repz
xchg
and
jp
aam
je
mov
mov
scas
dec
jecxz
push
in
in
sbb
lock
add
xchg
stos
or
paddb
mov
push
mov
es
pop
pop
lcall
icebp
stos
inc
nop
sub
mov
pop
dec
repz
mov
pop
cli
out
or
push
lahf
add
mov
xchg
mov
mov
and
pushw
lds
jb
xlat
dec
and
out
xchg
mov
fisubs
call
xchg
add
add
je
xchg
mov
mov
jg
out
inc
pop
inc
inc
in
call
out
mov
push
jno
mov
imul
mov
jnp
stos
stos
sbb
adc
in
movsb
inc
orl
hlt
xlat
dec
repz
das
inc
sbb
push
pop
jae
shrb
mov
xchg
and
add
jecxz
cltd
cmp
ret
cmp
rol
rorl
sbb
or
cmp
inc
jno
pop
push
in
into
lret
mov
xchg
in
call
adc
sbb
repz
stc
mov
inc
xor
jo
lahf
and
in
out
cmp
push
das
out
hlt
pop
or
lds
push
pushf
mov
enter
pop
js
mov
cld
mov
cmp
inc
xor
xchg
pop
mov
and
dec
xchg
stc
mov
mov
imull
test
shrb
rcl
popf
and
aas
scas
and
inc
pop
lods
push
aas
xchg
jne
inc
sbb
or
pop
pop
repz
jnp
fisubl
pop
push
pop
stos
mov
stos
add
xchg
push
add
inc
sub
pop
xor
xchg
cmp
sub
call
dec
add
stos
mov
mov
sbb
shl
fnsave
pushf
gs
enter
in
add
movsl
lret
pop
scas
test
cmp
xor
out
adc
mov
cmp
lods
nop
ljmp
inc
fsubl
rclb
push
mov
lret
inc
insl
mov
and
jmp
inc
insb
in
ror
out
xchg
jp
push
js,pn
inc
iret
insb
inc
testb
push
inc
push
scas
sbb
jae
push
lods
fmuls
scas
mov
or
rolb
fwait
and
and
xchg
lods
cmpsb
mov
xchg
mov
dec
xchg
xor
insl
fdivs
push
int
lds
ljmp
mov
int
mov
rcr
push
dec
sbb
cmp
cmp
in
xor
fldl
and
and
inc
or
lds
repz
int
hlt
shlb
int
int
mov
push
jns
dec
push
sahf
cmp
sub
xor
sub
mov
sub
or
ficoml
mov
cmp
cmp
or
xor
ds
sub
fwait
push
movsb
pop
popf
mov
xchg
jg
cmp
cli
or
mov
es
pop
xchg
xchg
dec
xchg
xor
ret
xchg
insl
push
inc
sbb
mov
aaa
or
and
xor
xchg
sbb
dec
sbb
cmp
ds
ss
int3
jmp
das
pop
aas
adc
jnp
bound
xchg
xor
inc
je
pop
int
aad
mov
in
cmp
pusha
hlt
xchg
daa
mov
lcall
jg
popa
inc
xchg
mov
test
add
cmp
mov
gs
ds
into
adc
xchg
mov
xor
pop
and
out
outsb
push
cltd
dec
jae
jecxz
ret
xchg
pop
xor
mov
cmpsb
test
jno
lret
xor
fadds
int
push
cmp
loopne
jg
jbe
in
ss
lret
push
or
shll
jno
in
std
jmp
jns
push
enter
add
pop
pop
outsl
insb
mov
lcall
repz
cmp
jge
data16
pop
jo
pop
adc
dec
ja
sbb
mov
scas
je
ret
dec
jl
or
jmp
xor
jp
insb
jmp
xor
out
sub
add
mov
dec
adc
pusha
xor
push
je
or
mov
sub
shll
notl
push
and
sbbl
or
popa
adc
sarl
imulb
and
sbb
pop
ret
mov
sub
jle
push
lds
iret
mov
out
mov
xchg
pop
orl
fnstenv
jae
inc
jns
cmp
mov
push
xor
arpl
iret
insb
and
mov
cmp
out
jle
push
dec
xlat
pop
dec
call
sbb
jle
adc
pop
mov
mov
setg
mov
ret
imul
or
inc
out
sub
ficoml
mov
lock
pushl
dec
dec
icebp
sub
nop
pop
jne
clc
mov
or
push
jbe
adc
aam
loop
dec
rolb
daa
dec
or
data16
sbb
and
adc
sub
test
fdivl
lea
mov
cmp
push
adc
std
jmp
cmc
and
inc
and
hlt
push
shll
lods
sub
xor
mov
out
subps
sbb
inc
pop
pop
ss
pop
push
xchg
sub
into
imul
outsb
inc
fmull
fbld
stc
lret
nopl
call
mov
movsl
add
icebp
xor
out
loope
insl
fidivl
pmulhw
arpl
pop
sbb
sahf
test
sbbl
std
cs
xchg
push
sbb
gs
cs
xchg
and
xchg
push
xor
insb
daa
out
lcall
mov
lret
cmp
cmpsl
lods
pop
pop
scas
repz
adc
stos
mov
enter
in
lret
lods
pop
mov
cltd
test
adc
scas
dec
ss
fidivrl
lahf
push
ret
cwtl
xchg
mov
push
movsb
dec
xchg
xor
fistpll
ss
jb
or
in
lret
stos
shlb
inc
and
xchg
push
xor
dec
mov
mov
push
ret
cwtl
xchg
mov
fnstenv
and
ficoms
nop
ret
out
test
sbb
sbb
fwait
mov
adc
dec
or
cmpsl
mov
pop
dec
test
xchg
lock
add
es
pop
inc
sbb
push
std
jno
jns
xchg
ja
cltd
jp
imul
js
stos
push
jb
fisubrl
push
sti
in
xor
cmp
xchg
scas
into
mov
mov
ret
arpl
scas
mov
daa
xor
xchg
or
ljmp
cmp
sbb
fwait
push
xchg
test
push
bound
mov
sub
mov
mov
pop
mov
adc
cmp
xlat
icebp
jo
shll
cld
mov
js
sub
adc
ret
mov
mov
ss
jmp
xchg
ljmp
cltd
dec
outsl
leave
in
mov
out
sbb
bound
mov
aam
ja
sub
jle
imul
outsl
pop
jge
sti
fcompl
xor
mov
stc
pop
xchg
mov
aam
sahf
ds
jmp
scas
dec
mov
mov
dec
scas
mov
mov
inc
inc
mov
stc
rorb
fdivs
sub
les
sub
push
dec
ja
sbb
add
mull
data16
ljmp
adc
flds
ljmp
xor
xor
lcall
adc
ficoms
jg
mov
mov
pop
cld
and
push
in
orb
push
fcmovne
insb
aaa
je
sub
jl
xchg
jb
nop
adc
shrl
cmp
push
adc
insl
ret
in
lods
scas
pop
and
das
pop
orl
mov
or
mov
xor
subb
ficompl
ljmp
push
xor
jmp
ljmp
cmp
sbb
je
jg
clc
push
jbe
test
or
xchg
or
shl
pusha
xor
mov
push
in
sub
mov
or
addr16
add
xor
scas
das
popa
addr16
js
lret
lock
jecxz
sub
jmp
sbb
sbb
aaa
cltd
jne
cmc
aas
pushf
repz
les
in
mov
mov
pop
pop
and
les
pushf
sti
or
in
cmp
xchg
lods
idivb
mov
ds
jb
test
fcompl
mov
push
shll
stc
scas
out
push
jmp
aas
mov
add
fiaddl
dec
outsb
jb
addl
cltd
ficompl
outsl
jo
dec
icebp
bound
ss
mov
xchg
sbb
sub
ret
push
mov
lcall
push
sahf
mov
jmp
repz
insb
lock
outsb
into
xor
xor
es
inc
cwtl
sahf
cmp
jns
or
in
insl
fidivl
or
lret
adc
cmp
lret
dec
xchg
daa
loopne
or
fwait
lock
scas
ljmp
mov
adc
adc
in
or
insl
fisubl
hlt
jle
xor
call
pop
ficompl
jne
sahf
cli
fildl
cmp
mov
outsb
aas
add
out
xchg
or
push
movsb
dec
sbb
cmp
rorb
cmp
xchg
ficoml
clc
insl
fcmovb
lahf
lods
cmpsl
inc
repnz
inc
pop
sub
and
push
xor
inc
mov
ret
pop
mov
rcr
loop
pop
jg
xlat
mov
push
pop
xor
out
sahf
lods
or
andl
cmp
ret
cmp
aas
jns
pop
es
out
ret
aad
popa
jp
stc
adc
pop
jmp
cmp
and
out
pop
dec
bnd
lcall
rcl
push
aaa
mov
paddw
xchg
mov
scas
mov
cmp
lcall
xchg
movsb
xchg
aaa
mov
lret
es
in
movsb
sbb
add
gs
adc
pop
sarl
jno
pop
and
push
call
pop
adc
jg
leave
adc
pop
adc
sub
std
or
fcmovbe
cmp
out
mov
clc
scas
jns
add
ret
xlat
stc
mov
das
sub
xchg
and
jo
enter
popa
inc
mov
mov
pop
xchg
insb
mov
mov
rolb
fadd
pop
push
scas
pop
sbb
cmpsb
inc
pusha
lods
or
subb
add
or
xor
dec
sub
repz
xchg
cmp
xor
xorb
pop
icebp
inc
mov
adc
into
jmp
nop
movb
xchg
fwait
pop
push
lea
sub
cmp
push
sub
test
mov
iret
int3
out
addb
pop
hlt
fisubs
call
xchg
aas
mov
fdivrs
jp
pop
popf
or
pusha
out
add
lret
daa
cmp
dec
pop
adc
and
ds
mov
xchg
sub
testl
xor
push
hlt
sub
movsb
scas
daa
mov
and
pop
scas
sub
push
adc
clc
add
sub
cwtl
pop
stc
push
fwait
jb
jb
xor
xorb
pop
xchg
dec
add
std
sub
inc
mov
les
ss
loop
push
sub
in
std
fs
subb
cld
xchg
xor
fidivrs
sti
pop
jbe
outsl
fndisi(8087
ficompl
repnz
jns
cmc
jb
clc
push
push
sahf
dec
fs
xlat
sub
dec
xchg
cmp
adc
std
adc
pop
dec
call
push
ss
dec
sub
push
add
add
xchg
into
cli
sti
lahf
shlb
pop
adc
stos
enter
outsb
dec
sbb
icebp
mov
js
mov
pop
jmp
xlat
sub
enter
cmpsb
mov
out
rorb
icebp
sub
inc
xor
jmp
and
dec
imul
mov
mov
scas
and
mov
inc
sub
inc
mov
dec
add
out
xor
jmp
int
sub
mov
cmp
in
jnp
pop
xchg
jo
pop
adc
in
cmp
repnz
push
pop
mov
gs
add
pop
add
in
mov
test
mov
dec
xchg
das
mov
rorl
sbb
popa
push
nop
cmc
popf
repz
fidivrl
sub
les
dec
ret
mov
and
xchg
cmpsb
sbb
lcall
movsl
inc
dec
or
xor
jbe
and
xchg
aas
aad
cmp
jo
movsb
movsl
shlb
jge
mov
xor
sbb
fwait
mov
shlb
xor
cltd
cmp
cld
movsb
add
std
imul
addr16
push
xchg
stos
xchg
push
adc
pop
lock
aas
xor
orl
add
loop
pop
sarl
add
mov
jo
daa
mov
push
mov
add
add
mov
inc
xlat
test
pop
rclb
dec
xchg
mov
pusha
dec
lret
mov
ja
lret
jp
loop
rcl
stc
in
imul
mov
nop
and
loope
sub
add
out
loope
insl
fidivl
mov
xchg
sub
push
insb
adcl
sbb
in
hlt
mov
outsl
ds
nop
dec
xchg
mov
insl
push
std
loope
ret
lock
dec
pusha
outsb
fcmovb
shlb
sub
and
sub
fisubrl
ret
rorb
and
jg
xchg
cmp
xchg
popa
or
and
pop
sbb
ret
mov
sub
pusha
mov
push
ja
or
cmpsl
fwait
mov
dec
outsl
xor
and
in
xchg
pop
jae
out
push
jp
mov
rcl
icebp
in
mov
and
cmp
rcrb
aaa
dec
lahf
xchg
in
or
jle
and
mov
mov
sbb
lea
xchg
out
mov
rolb
or
in
mov
dec
js
add
pop
mov
xor
fbstp
adc
inc
loopne
iret
out
xor
divl
popa
push
cld
push
push
popa
pop
out
pop
cli
ret
int
out
cmp
je
gs
loopne
ja
sub
xchg
mov
cmp
lods
stc
hlt
xchg
xorl
sarb
cwtl
test
popf
mov
mov
pop
loope
fdivl
mov
adc
daa
sbb
or
popa
push
mov
sbb
mov
out
add
add
int3
mov
cmp
jae
xchg
cmp
jecxz
test
push
adc
les
mov
and
mov
hlt
mov
cmp
test
xchg
xor
pop
stos
in
into
fld
sub
mov
cmp
sarb
or
xor
shrb
mov
aad
push
cmc
jo
xchg
sbb
ds
push
pop
icebp
daa
movsl
enter
pop
in
repz
inc
xor
enter
dec
mov
gs
xor
xchg
outsl
scas
pop
outsb
stos
adc
outsl
push
adc
cwtl
ret
je
loopne
adc
adc
dec
xor
arpl
push
ljmp
adc
out
cmp
add
mov
sti
xchg
pop
out
sub
gs
jl
movaps
aam
jbe
dec
ja
xchg
test
das
xorb
or
xchg
lahf
or
and
in
mov
lock
movsl
les
test
scas
and
xor
xor
cltd
nop
ret
mov
inc
loopne
push
push
in
inc
test
mov
push
cmpb
mov
xchg
movsb
leave
adc
add
dec
sbb
push
cmp
repz
gs
inc
xchg
and
push
cmc
rcll
gs
lret
jne
or
pop
mov
filds
dec
xchg
and
cld
dec
sahf
dec
add
fwait
cltd
pop
push
mov
gs
and
into
xchg
and
stos
popf
dec
arpl
stos
stos
in
jmp
andl
pop
mov
sub
out
adc
lods
inc
dec
sahf
dec
lret
xchg
icebp
insb
xchg
xor
shll
xor
pop
shrl
push
or
insb
push
sti
mov
jns
pop
cmp
mov
movsb
scas
aaa
aas
divl
pop
jmp
aas
sub
mov
mov
out
sbb
mov
sbb
fwait
xor
cmp
xchg
mov
push
je
mov
outsb
adc
mov
sahf
mov
clc
imul
or
fwait
lahf
jp
xchg
das
mov
mov
inc
in
scas
shll
adc
xor
cmp
sbb
push
ljmp
inc
sub
inc
push
lods
mov
fistpll
clc
rolb
jbe
test
sbb
inc
cmp
xor
ret
add
mov
dec
jg
mov
xchg
inc
xlat
jmp
pop
iret
xchg
dec
xchg
pop
std
popf
cmp
inc
icebp
subl
xor
jecxz
xchg
mov
mov
sbb
xchg
rolb
sbb
lods
daa
sub
xchg
mov
dec
xchg
push
lock
mov
sahf
sbb
fisubl
mov
add
sbb
daa
xchg
pop
ja
dec
xchg
push
cld
insb
stc
lret
sarl
inc
sub
sahf
jo
jg
repnz
push
cmpsl
dec
sbb
pop
push
divl
sbb
or
jo
imul
icebp
mov
fisubl
push
aaa
aaa
dec
xchg
mov
in
sti
testb
mov
rcll
add
xchg
pop
jmp
mov
popf
add
xor
cmp
ret
fildll
fisubrs
inc
test
sahf
icebp
daa
pop
adc
sub
test
inc
leave
adc
mov
ja
and
stc
xorl
cs
sbb
test
popf
xor
mov
sub
or
mov
mov
pusha
push
dec
jae
adc
cli
add
adc
jno
xor
dec
lods
gs
cmp
negb
mov
subl
fistpll
mov
aas
sub
push
jmp
cwtl
das
cmp
pop
ljmp
push
dec
sub
aam
xlat
xchg
fs
inc
loope
inc
dec
sub
insl
sbb
cmp
inc
je
jae
mov
ljmp
adc
adc
mov
enter
lds
push
jle
iret
and
andl
je
jge
fisttps
jne
push
clc
popa
pop
push
lahf
cmp
or
in
popf
xor
adc
out
insl
pusha
mov
sub
sahf
aad
mov
or
mov
cli
imul
pop
jne
mov
mov
xchg
mov
add
adc
jo
pop
adc
test
xchg
add
pop
jb
dec
mov
aaa
push
shrb
xor
insl
inc
mov
shrl
sahf
xor
mov
aaa
movsl
mov
sub
cmc
push
xchg
movsb
fbstp
fnstcw
mov
inc
cld
cmpsl
inc
cmc
mov
adc
cmpsb
push
or
add
cmp
outsl
adc
in
mov
mov
loope
mov
push
enter
jg
cld
inc
xchg
jp
mov
aas
pusha
xor
in
sbb
pop
out
xchg
jns
dec
hlt
mov
imul
xor
push
clc
adc
pop
es
jns
mov
int
mov
pop
cmp
lcall
cmp
cmp
loope
jns
nop
ja
inc
iret
movsl
mov
cli
xchg
sbb
pop
mov
sub
out
nop
ret
sub
cld
cmp
jmp
mov
xor
cmp
fstpt
xor
orb
insl
inc
bound
mov
fwait
jge
into
ds
cmp
xor
xchg
cmp
cmp
pusha
test
or
ds
push
out
sahf
push
movsb
dec
sbb
cmp
jns
out
imul
jo
jg
inc
xchg
bound
cltd
xor
mov
pop
jne
fdivs
or
fs
pop
test
push
movntq
cs
ficoml
xor
xchg
mov
rcl
pop
push
pop
fistpl
xor
nop
adc
push
movsb
mov
pop
ret
dec
ljmp
pmovmskb
dec
cwtl
stos
add
xchg
gs
jns
mov
popa
dec
add
int
cltd
pop
push
mov
mov
out
jo
and
mov
sbb
ds
dec
dec
hlt
xor
hlt
jle
xor
xchg
adc
xor
and
in
or
inc
push
mov
push
in
xchg
jbe
xor
mov
push
jno
and
icebp
out
mov
call
jns
gs
add
mov
fsubl
add
ret
pop
dec
mov
sti
push
jge
push
in
cs
or
pop
jp
dec
cmpb
mov
lods
pop
inc
orl
fwait
and
or
inc
xchg
inc
add
jmp
inc
jo
push
dec
mov
jp
mov
idivl
cmp
rclb
cmpsb
mov
call
stc
pop
cltd
outsl
adc
lea
lea
arpl
add
iret
xor
or
mov
inc
lahf
aaa
das
xor
or
lds
das
dec
xchg
jecxz
jbe
test
out
pop
stos
cwtl
push
lods
dec
shrl
std
mov
aam
push
dec
lcall
fidivrs
sbb
or
sub
lahf
iret
sbb
scas
inc
daa
movsb
jo
adc
sarb
and
jns
shrb
or
rorl
stos
push
add
push
jnp
xor
adc
test
dec
or
test
sar
daa
loop
ficoml
in
divl
sbb
dec
lcall
add
xor
xchg
movsl
lock
in
sbb
movsl
insl
js
cli
dec
or
rolb
mov
in
jne
clc
sub
jnp
fdivs
dec
sub
xchg
pusha
jp
std
mov
lds
jecxz
aaa
out
shl
sub
in
idivb
sub
adc
int
fldenv
sbb
inc
cmpsl
inc
es
mov
dec
insl
and
sub
or
sbb
rol
loope
aad
test
or
test
fcompl
and
js
mov
xor
push
in
stc
rcrb
fistl
cmc
inc
add
in
int
push
push
imulb
sub
xchg
jns
xor
cmp
xchg
dec
sbb
cmpsb
ss
mov
or
sub
das
dec
xchg
and
loope
dec
sahf
cmp
dec
in
mov
mov
push
cmpsl
aaa
leave
xchg
mov
xchg
bound
lret
xchg
in
out
lcall
pusha
lret
lods
pop
or
gs
cmp
cmp
push
mov
das
xor
hlt
mov
xchg
sub
insl
lea
mov
add
mov
int
das
sarl
or
xor
mov
cmp
fstpt
das
test
in
mov
in
mov
leave
pop
and
mov
xchg
int
lret
push
movsb
dec
out
pop
repnz
dec
or
fwait
and
pop
mov
mov
sbb
and
ds
sahf
dec
insb
xor
in
xchg
dec
test
aaa
shll
xor
es
sarb
push
std
xchg
dec
inc
in
adc
int
adc
out
cmc
add
push
cs
cmp
sub
out
fwait
mov
cs
jo
mov
js
pop
adc
mov
fdivs
movsl
roll
int3
insl
aaa
out
insl
into
cs
pop
push
ret
insl
mov
pusha
sahf
sbb
cli
call
cwtl
leave
shrl
xchg
pop
loop
cmp
cmp
xor
inc
out
out
out
into
sbb
lcall
add
lods
fdivr
xchg
and
and
cmp
mov
fwait
ss
add
cmp
imul
mov
jg
shlb
adc
push
xchg
and
mov
pop
adc
sbbl
jmp
mov
mov
arpl
std
push
sbb
data16
not
call
fwait
and
out
cwtl
xor
push
pop
mov
cltd
int
movsl
rcr
outsb
fdivl
cmp
or
ss
js
inc
inc
or
xor
mov
ljmp
jmp
mov
or
and
sahf
fbstp
jp
cmp
aas
add
and
out
push
or
pop
push
cli
das
test
iret
mov
loop
or
decl
or
daa
add
sbb
xchg
jno
out
lahf
ror
inc
cwtl
or
mov
push
mov
xor
jl
in
pop
xor
cmpsb
std
mov
cmp
fdivrl
mov
fisttpl
xor
mov
fs
fnstsw
xchg
mov
mov
aaa
popa
cmc
sub
xor
orl
mull
shll
cmp
mov
data16
adc
xchg
cmp
pop
sti
repnz
add
mov
jns
and
lds
sbb
sbb
jno
pop
fcomip
inc
loopne
cmp
lea
repnz
leave
popf
mov
imul
movsl
dec
loope
sbb
fildl
loopne
xor
dec
fdivl
inc
dec
cmp
sarb
xor
xchg
inc
cli
into
sbb
cmc
in
xchg
test
loop
mov
add
testl
lods
test
dec
or
xor
es
shl
pop
pop
add
xor
mov
sub
pop
mov
ret
rclb
imul
sub
loope
outsb
pop
xchg
mov
jbe
mov
push
cmc
jl
xlat
jnp
movb
int3
jo
imul
cs
rolb
lret
xor
sub
xor
mov
push
pusha
lret
cld
adc
loope
dec
ja
shll
clc
push
add
mov
add
mov
in
mov
mov
pushl
jmp
and
cli
es
cmp
xchg
daa
loopne
shll
ficompl
jmp
push
data16
lods
cmp
and
xchg
xor
sti
aas
jns
inc
mov
xchg
push
lods
push
pop
rcrb
aam
mov
cmpsl
nop
mov
jo
daa
mov
ret
add
add
shlb
xor
out
mov
dec
cmp
dec
sahf
add
push
jne
ficompl
std
shll
and
jo
faddl
das
xchg
and
bound
sbb
pop
dec
dec
push
jge
jmp
mov
xor
and
cmpsb
dec
out
cmp
jo
sahf
cmp
fsubrs
mov
mov
hlt
jle
xor
sbb
cmpsl
dec
xchg
pop
push
xchg
daa
dec
or
or
bound
push
repz
cmp
and
xchg
xor
aas
jns
pushf
outsb
fwait
ss
jne
sbb
inc
xchg
iret
insl
push
movsb
in
fidivrl
loope
dec
sahf
cmp
dec
in
mov
and
cmp
pop
jl
insb
add
aaa
dec
xchg
push
cmp
icebp
lods
xorb
xchg
in
sub
les
sub
adcl
xor
scas
sbb
gs
shll
pop
pop
js
repz
pop
gs
pop
jns
push
decl
xor
leave
xchg
pop
mov
dec
xchg
mov
jne
inc
push
icebp
mov
ss
test
jmp
mov
xor
fidivs
push
movsb
dec
loopne
jp
mov
in
sbb
adc
inc
sbb
in
hlt
jle
xor
and
dec
cmp
cmp
es
lahf
add
icebp
pop
cld
das
shlb
and
sbb
pop
jae
flds
sub
push
ss
aas
jp
dec
pop
dec
dec
push
jle
mov
mov
dec
xor
fbstp
xor
stc
and
mov
inc
adc
push
adc
push
xor
imul
out
nop
mov
and
stos
ljmp
in
sub
dec
and
ret
dec
mov
scas
cmp
adc
and
test
xor
cs
pop
sub
outsl
lcall
data16
inc
int
cli
sbb
scas
cwtl
mov
mov
loop
push
pop
imul
sub
adc
push
inc
mov
gs
push
and
scas
fwait
or
testb
and
jp
dec
fwait
cmp
jo
pop
adc
mov
xchg
pop
jmp
cld
out
outsb
stos
in
mov
leave
mov
shrl
push
clc
push
mov
dec
or
mov
xchg
mov
int3
movsb
jne
lock
or
mov
cmpl
adc
imul
repz
inc
repz
xor
aas
mov
mov
inc
adc
in
push
dec
mov
or
sub
pop
aas
mov
dec
int3
inc
sub
lds
mov
dec
xchg
leave
jne
cmp
addl
mov
xor
inc
ja
pop
fisubl
shr
test
icebp
sub
jnp
dec
adc
and
push
cwtl
xor
adc
xor
sbb
aas
out
int
xchg
les
sbb
imul
push
adc
scas
jb
scas
pop
cli
mov
pop
js
imul
fsubrs
adc
sub
loopne
and
mov
cld
adc
je
or
icebp
xor
fptan
in
scas
stos
xor
movsb
leave
imul
jo
mov
call
jb
dec
pop
jo
xchg
push
and
imul
ss
fisubl
std
xor
dec
lods
xor
es
cmpsb
xchg
and
push
insl
rcrb
mov
mov
xchg
ret
inc
xchg
xchg
sub
xchg
and
in
call
push
movsb
cwtl
ss
and
xlat
fprem1
movsl
imul
xchg
sub
repz
mov
sub
sahf
jbe
repz
mov
xchg
sbb
loop
gs
sub
dec
xchg
and
fldenv
sahf
cmp
adc
fidivl
jle
xor
lods
xchg
push
pop
pop
pop
dec
xchg
push
cmp
icebp
pop
inc
ss
jbe
xchg
mov
sbb
push
xchg
push
add
daa
dec
sahf
dec
sti
add
int
add
mov
mov
lret
inc
inc
dec
xchg
push
repz
loope
inc
add
inc
dec
in
cmp
ret
jge
in
pop
xor
pop
shll
nop
nop
mov
and
fnstcw
in
cmp
ret
jge
in
pop
xor
and
dec
xchg
and
movsl
jmp
sahf
cmp
jo
int
inc
fsubl
add
dec
pop
adc
mov
push
lret
dec
loop
jbe
iret
adc
push
repnz
movsb
in
fidivrl
and
outsb
push
jp
xchg
cmp
insl
fcmovb
sbb
mov
xor
int3
sub
adcb
in
fcomps
mov
ss
test
sti
shlb
test
pop
mov
fdivrs
in
lahf
jns
out
xchg
pop
pusha
ret
lods
lahf
call
mov
pop
cmp
ret
adc
jns
mov
mov
and
xchg
and
jp
aad
scas
dec
add
ret
popf
aas
jp
sub
repnz
ret
push
bndldx
push
clc
sbb
jb
outsb
mov
jne
movsl
mov
sbb
cli
xor
psubw
shl
cmpsb
inc
or
fidivrl
dec
loop
cmc
dec
push
fs
xor
mov
lods
push
jbe
leave
adc
adc
jp
icebp
or
test
and
inc
or
lock
inc
repz
cmpsb
shrl
pushf
gs
lcall
add
mov
cmpsb
or
push
insl
xchg
ficoml
sub
insb
inc
inc
pushf
xorl
sub
push
ret
mov
fdivr
pop
sahf
out
popf
jmp
xchg
mov
ficomps
push
arpl
mov
cmp
hlt
xchg
rorb
cmc
jecxz
add
push
mov
sarl
mov
sbb
das
clc
or
and
or
jne
sar
add
std
lea
loopne
mov
scas
cmp
pop
subl
or
add
lret
push
das
mov
mov
enter
pop
dec
cs
sub
inc
cmpsl
addr16
dec
icebp
xchg
xchg
dec
test
sbb
dec
arpl
enter
imul
ret
jle
clc
adc
rcll
ja
fdivrl
xchg
outsb
adc
stos
inc
outsb
fucom
push
das
pop
sub
or
lahf
divl
cmp
mov
or
jge
fdivrs
jg
imul
popf
shr
out
push
scas
xchg
push
cmp
xchg
jne
andb
or
stos
push
dec
jl
inc
mov
insb
les
ffree
cmp
les
dec
shrl
iret
cwtl
pushaw
mov
mov
mov
jb
out
lret
or
mov
sbb
inc
mov
xor
lcall
adc
add
sbb
das
sbb
jg
ljmp
cmp
fwait
dec
xchg
daa
jbe
aas
mov
jb
cwtl
sbb
sbb
in
adc
in
jb
mov
push
sti
in
xor
mov
dec
or
or
bound
and
push
push
add
int
icebp
addr16
call
notb
sub
out
loope
insl
fidivl
mov
shlb
sub
fsubrl
sub
dec
sahf
add
insl
pop
outsb
fcmovb
fldcw
sar
stc
mov
addl
dec
loopne
test
mov
pop
pusha
xchg
mov
push
mov
push
cmp
pop
out
push
lock
cmp
in
cwtl
cwtl
ss
pop
jmp
push
jle
lret
lods
cmp
cmc
popf
leave
outsb
mov
fsubl
shrb
sub
es
xchg
daa
dec
xor
dec
in
mov
push
lods
in
mov
jbe
xor
cmp
das
xor
push
sti
js
jnp
iret
in
repz
mov
repnz
jmp
push
out
cmp
sub
lock
mov
jp
sahf
dec
enter
mov
insl
test
adc
inc
xchg
pop
inc
xor
es
inc
shrb
and
lcall
xchg
mov
mov
repnz
imul
pop
cmp
xor
jbe
xchg
imul
xchg
cwtl
cmc
int3
lcall
int3
jo
pop
adc
aaa
lock
nop
ja
inc
imul
inc
mov
gs
stc
movsb
dec
xchg
and
sub
sub
pause
inc
cwtl
and
out
mov
cmpsb
jmp
xchg
inc
cs
xchg
sub
add
and
and
popa
out
lcall
mov
int
ss
loop
dec
xchg
push
xor
and
popf
dec
rcr
outsl
outsl
lcall
inc
stc
lea
ficoms
ja
pop
out
mov
out
stos
dec
cltd
cmp
xchg
js
inc
sbb
outsl
xlat
fcmovb
xchg
in
leave
sbb
push
daa
sub
popf
sub
xchg
inc
xchg
xor
mov
sbbl
mov
adc
pop
mov
aad
ss
or
push
mov
sbb
and
push
lds
dec
and
mov
jmp
cwtl
ja
and
sarb
jl
push
cwtl
or
jmp
sti
or
and
xor
pop
and
sub
fwait
mov
aaa
xchg
mov
cltd
push
scas
pushf
mov
xor
hlt
jg
fldt
and
jge
int3
xchg
and
pop
and
jl
jecxz
aas
sub
mov
cmp
fcoml
push
adc
jns
sub
dec
add
shr
push
jl
lods
or
shrb
push
xchg
sbb
xor
sub
push
mov
inc
push
icebp
inc
cmpsl
push
gs
stos
inc
dec
jmp
push
mov
dec
loope
mov
inc
adc
xchg
inc
cmp
mov
inc
rep
xor
mov
ret
je
inc
or
aas
ds
cmp
mov
fld
je
jnp
cmp
mov
out
cld
pop
scas
cltd
and
jmp
icebp
sub
bound
lahf
notl
dec
pop
jne
loop
or
or
shlb
loope,pn
cmp
xchg
xor
orb
adcb
and
shlb
loope
mov
test
inc
pop
inc
and
shl
scas
jle
jmp
lds
xchg
rorb
sbb
lds
jle
push
out
dec
pop
adc
adc
add
mov
add
sbb
push
ret
stos
sub
adc
leave
inc
cmp
in
pop
xor
shlb
sub
jo
adc
out
mov
push
sti
mov
jns
sub
xor
mov
mov
xchg
test
mov
lock
dec
out
in
sahf
cmp
xchg
popl
mov
mov
lods
scas
mov
pop
out
out
adc
jns
sbb
xchg
inc
aad
xorl
cmp
test
mov
xchg
mov
fnstsw
push
movsb
dec
loopne
out
xchg
daa
dec
mov
jmp
jg
lret
inc
xchg
cmp
mov
mov
xchg
inc
test
movsb
pusha
ret
fsts
sti
cmpsl
jno
testl
sub
dec
pop
adc
cmp
inc
ss
ret
cld
xchg
lret
in
jl
fidivl
or
inc
das
popa
xchg
sub
add
cmp
nop
inc
cwtl
and
loop
push
or
inc
das
push
xchg
sub
add
and
xchg
push
aaa
and
xchg
ss
fcmovb
cmpsl
adc
jp
movntq
out
push
mov
xor
and
xchg
push
xor
xchg
ja
inc
int3
sub
bound
sbb
fnstcw
call
mov
sarb
in
jns
out
insl
inc
ret
mov
and
cmpl
mov
in
jns
out
jmp
add
mov
adc
pop
sub
dec
pop
push
xor
dec
sahf
cmp
je
int
cltd
jp
shrb
fnstsw
fwait
mov
fwait
jns
jg
es
jmp
incl
fildl
mov
lods
and
mov
aam
push
ds
mov
imul
aaa
insb
fcmovne
jmp
dec
into
jnp
mov
sub
in
xchg
or
aas
in
sub
pop
mov
shll
xor
aas
addl
scas
lret
cmp
jl
xchg
lret
aad
sarl
loopne
fadds
inc
mov
in
add
int
cmpsb
mov
loopne
push
or
add
dec
mov
cmp
stc
mov
stos
dec
jne
mov
pop
sbb
insb
lcall
jno
js
int
repz
mov
xor
fstpl
movl
mov
pop
xor
pop
push
loopne
xchg
jno
dec
xchg
stc
cmp
and
hlt
es
movsb
enter
mov
or
adc
cmp
xchg
stos
aas
aas
popa
sbb
sarl
lods
jp
mov
xlat
xor
gs
cmp
clc
and
mov
sbb
pop
dec
mov
int3
sub
or
inc
loopne
les
fxch
and
mov
pop
jns
mov
mov
mov
push
push
fiadds
rorl
clc
add
jp
mov
pop
cld
or
sub
or
aam
lds
push
lahf
xchg
test
out
xchg
enter
push
and
jmp
sbb
sbb
pop
dec
sub
push
ljmp
and
test
dec
ss
aad
outsb
jae
sbb
dec
into
mov
adc
imul
xchg
aam
out
clc
sti
fs
idivb
xchg
ds
pusha
sarb
jb
test
and
adc
cld
mov
pop
mov
xchg
lcall
inc
lcall
mov
sbb
adc
int3
fxam
ljmp
adc
mov
insl
inc
adc
int3
adc
xor
out
mov
test
in
xchg
sub
jns
dec
repnz
dec
pop
inc
jle
push
sub
mov
dec
sahf
mov
in
and
adc
pop
adc
pop
mov
sbb
repz
loopne
scas
xchg
pusha
cmp
inc
inc
rol
jb
push
leave
mov
dec
pop
and
call
xor
adc
adc
cmp
sarl
mov
fstl
out
jne
ret
xorl
loop
jp
xchg
cld
mov
push
push
cmp
ljmp
lods
sarb
fdivrs
dec
add
cli
pop
push
sbb
cmp
or
and
pusha
outsb
bound
insb
fdivs
mov
push
subl
iret
cltd
in
loopne
inc
popf
mov
jecxz
adc
or
ss
scas
xchg
xchg
lock
leave
lods
pop
cmp
daa
lds
ret
sbb
mov
mov
sbb
or
or
or
out
aas
sub
pop
je
jns
nop
ja
inc
aam
sbb
xchg
xchg
sub
lahf
cmpsb
out
pop
or
jle
pop
ss
out
sbb
xchg
mov
xor
sbb
insb
rorl
add
lods
ret
xlat
bnd
mov
lods
movsb
ret
andl
sub
jmp
or
xchg
pop
aas
mov
xor
cmp
mov
clc
cwtl
jno
nop
jg
lahf
test
pop
mov
push
sub
push
dec
pop
cmp
in
mov
adc
xchg
jne
jecxz
sub
push
ds
mov
scas
lahf
sub
xchg
jae
and
inc
and
popf
mov
out
iret
cwtl
xor
pop
push
cmp
or
inc
fsubr
cmp
pop
or
aam
and
cltd
inc
inc
pop
cmc
imul
jl
shl
jbe
in
push
fisubl
push
xor
fdivrl
sub
xchg
stc
lods
popf
inc
inc
jo
pop
mov
jno
jge
mov
clc
pop
sbb
fwait
aam
andl
cmp
mov
adc
pop
loope
add
mov
or
sti
in
and
in
in
aas
fsubl
inc
aad
out
push
lock
adc
testl
out
roll
add
adc
nop
inc
in
sarb
sbb
orl
or
das
jecxz
mov
xchg
lods
int
or
leave
jb
clc
stos
paddd
xor
mov
mov
cmpsb
dec
mov
adc
sbb
cmp
sbb
mov
setnp
mov
mov
sub
sbb
mov
xor
adc
pop
push
xor
lock
loope
xor
mov
lea
in
repz
xchg
lock
pop
iret
out
les
aam
add
jle
addr16
jbe
mov
mov
push
out
jnp
xchg
data16
jl
sahf
fimull
adc
jge
enter
and
sti
pop
fstpt
xlat
daa
loop
push
mov
rorl
in
fisubrs
fcomi
inc
andb
sbb
and
fidivrs
and
aas
push
pusha
pusha
mov
popf
les
bound
int3
or
mov
xchg
cs
aaa
dec
xor
dec
mov
je
pop
shrl
outsl
inc
inc
push
mov
xchg
jae
xor
mov
sub
push
mov
ja
test
fs
jo
mov
in
shr
imul
les
and
mov
lock
xchg
in
dec
test
inc
in
push
leave
les
cmp
mov
lret
out
fcoml
sahf
out
lods
into
or
fs
cwtl
stos
or
or
lret
xchg
mov
mov
xchg
mov
inc
inc
add
sbb
jns
es
ret
cmp
clc
push
movsb
dec
inc
sbb
subl
int
dec
push
sub
mov
mov
mov
arpl
out
xor
in
or
pop
adc
and
repnz
pop
cmp
push
fadds
push
adc
std
mov
or
xor
arpl
push
stc
sbb
sub
mov
pmulhuw
sbb
add
xchg
mov
mov
sbb
sub
loop
fwait
lcall
mov
in
xor
mulb
sbb
fs
gs
addb
or
out
gs
es
xchg
jge
call
lret
xchg
not
fwait
les
outsb
das
mov
out
xor
inc
push
cmp
lahf
mov
xlat
pop
push
out
lret
out
cmp
outsl
andl
sbb
sub
fistpll
push
or
inc
lcall
testl
loope
cmpsb
mov
dec
addb
test
lahf
jg
bnd
xchg
cmp
push
shl
jne
rcll
roll
mov
xchg
mov
inc
pop
push
pop
mov
jle
fnsave
adc
jo
xchg
and
jge
ljmp
sbb
xchg
daa
ss
mov
mov
test
in
insl
es
idivb
hlt
inc
popf
arpl
andl
dec
xchg
push
cli
xchg
fwait
or
inc
push
ljmp
nop
jns
hlt
push
jns
faddl
pop
stos
shll
mov
int3
inc
mov
jne
inc
cltd
and
cmp
hlt
pusha
jne
adc
int3
push
push
lret
inc
push
and
lea
mov
aaa
push
mov
inc
push
push
out
add
mov
mov
mov
js
imul
jae
fs
or
leave
push
mov
rcll
jae
cltd
lock
and
repnz
popa
jae
xchg
cmp
xchg
dec
adc
pop
mov
insb
mov
mov
mul
enter
shll
int
hlt
popa
xchg
aas
popa
scas
push
cmpsb
sbb
sar
xor
add
cmp
fisubrl
pop
adc
aam
rcl
mov
sbb
xchg
sub
nop
dec
test
out
jbe
outsl
hlt
incb
mov
in
xor
dec
xchg
lock
arpl
fcmovne
in
fmull
cmp
xchg
repnz
out
or
aam
mov
mov
int
in
sub
int
cmp
outsl
mov
xchg
test
iret
or
cmpsl
xor
jb
xchg
ljmp
mull
test
jb
fsubrs
cmpsb
adc
lock
mov
mov
inc
inc
xchg
push
aas
jns
out
add
mov
les
outsl
mov
inc
test
leave
mov
push
gs
inc
aaa
push
mov
aas
adc
mov
mov
das
mov
push
aad
sahf
inc
add
adc
xchg
gs
cmc
push
xchg
sbb
out
inc
int3
int
xchg
lock
fildll
mov
mov
xchg
inc
mov
and
pop
xor
and
mov
pop
sub
mov
push
dec
add
fwait
lcall
aas
mov
gs
cmc
movsb
dec
xchg
xor
enter
ret
in
or
aad
mov
les
ljmp
into
scas
push
movsb
dec
cmp
dec
loop
lcall
fidivl
psrad
and
lret
dec
stos
popf
dec
arpl
insb
adc
int
inc
loop
mov
rcr
rolb
inc
xchg
sub
cmp
cmpsl
dec
xchg
daa
loopne
xchg
icebp
cmp
ss
test
jmp
mov
xor
imul
nop
fstps
inc
jp
xchg
add
mov
shll
xor
out
in
dec
xchg
xor
xlat
daa
dec
ljmp
jl
fidivl
sbb
mov
imul
scas
aaa
dec
enter
jno
insl
mov
lret
arpl
and
test
dec
xchg
daa
xor
or
je
xor
out
xchg
mov
cmp
jno
and
xchg
dec
jecxz
imul
mov
outsb
sahf
xor
sbb
push
outsb
in
into
xchg
daa
dec
loop
push
push
jmp
call
mov
sbb
jecxz
push
xor
insl
enter
repz
mov
jg
psadbw
sbb
imul
je
clc
pop
js
popa
jmp
adc
cmp
sub
int
dec
xchg
scas
pop
xchg
out
inc
repnz
xor
scas
aam
inc
repnz
mov
lods
xlat
cli
mov
pop
iret
inc
jnp
xchg
add
iret
rcl
mov
xor
cmpb
movsb
dec
jecxz
std
nop
and
mov
or
ds
scas
inc
xchg
sub
mov
ja
insl
shl
add
mov
lret
inc
enter
ret
jge
dec
nop
mov
push
xor
sub
pushf
outsb
outsb
int3
mov
repnz
fisubrl
xchg
jmp
mov
cmp
jnp
fdivrs
jo
stc
shrb
pusha
dec
popf
pop
cltd
outsl
cmp
mov
stos
mov
loop
sar
cmp
scas
or
mull
aam
lcall
sub
xor
adc
inc
dec
mov
push
mov
dec
cltd
pop
mov
xchg
enter
outsb
rcr
out
sbb
inc
shlb
rcl
ds
sbb
sub
inc
push
leave
push
sub
inc
push
inc
sarl
je
in
inc
push
sub
pop
push
mov
push
mov
fst
sub
jo
sahf
mov
andb
jne
cmpsb
push
adcb
and
gs
xor
sbb
jns
test
jbe
push
pop
leave
in
xchg
dec
mov
cli
jb
mov
sahf
or
xchg
xlat
sub
xchg
and
int
imul
aam
popa
jno
adc
push
adc
push
jge
sub
sub
mov
and
mov
push
aam
in
or
or
or
cmp
in
aam
mov
or
sbb
sbb
mov
or
das
fwait
xor
arpl
jecxz
dec
xlat
in
xor
imul
pop
sbb
mov
add
mov
jne
adc
leave
xor
inc
daa
ss
mov
insb
cmp
cmp
loopne
pop
sbb
jnp
orl
cwtl
sub
mov
xor
roll
mov
out
pop
roll
fcomps
je
lods
push
test
in
sub
pop
xor
fcmovbe
dec
adc
and
push
add
fnstenv
dec
mov
shlb
int3
lcall
out
xor
add
sbb
fs
iret
rol
xlat
loope
cltd
testb
or
test
add
dec
xchg
lods
cwtl
lods
stc
int
mov
and
push
cmp
pop
sahf
cmp
cld
and
imul
dec
xchg
imul
int3
pop
js
ds
push
sti
pusha
mov
aas
xchg
push
fwait
ss
push
inc
xchg
sub
or
insb
push
dec
pop
cmp
push
insl
pop
in
xchg
inc
lods
push
dec
cmpsb
add
xor
out
call
mov
adc
push
loop
mov
mov
sub
lods
xchg
push
pop
pop
clc
cmpsb
dec
xchg
push
cmc
mov
aad
push
lcall
bound
mov
ss
sub
sti
shll
movsb
and
in
mov
adcl
das
out
inc
stc
int
ret
xchg
sub
jo
xchg
inc
xor
or
xor
sub
push
hlt
mov
xchg
sub
push
jp
add
ret
xchg
arpl
aas
imull
mov
in
mov
ret
sarl
out
sbb
sbb
jecxz
xor
xchg
jp
int
insb
loopne
and
mov
and
imul
insl
into
dec
movsb
out
mov
xor
mov
frstor
dec
xchg
xor
push
cmp
jnp
push
and
jns
das
jae
dec
xor
pop
xchg
js
dec
fucomi
int3
xchg
and
enter
xchg
mov
sbb
xchg
lods
mov
aas
push
lret
or
movsb
jb
clc
add
jp
mov
push
ja
push
iret
mov
push
xlat
loopne
mov
pop
mov
xlat
sub
xchg
sti
sbb
mov
mov
xor
and
popf
repz
mov
add
pushf
xor
sub
leave
pop
push
stos
jae
and
xor
int3
dec
bound
sar
sbbb
clc
add
call
mov
add
dec
ficoml
or
mov
cmp
repz
sub
pop
scas
inc
or
in
pop
adc
mov
enter
push
insb
inc
xchg
jp
in
lods
or
and
or
test
mov
and
fs
and
std
movsb
dec
xchg
ss
and
mov
add
push
adc
push
cmc
sub
pop
inc
pop
add
ljmp
testl
scas
xor
enter
insl
aaa
dec
imul
scas
in
sahf
or
pop
mov
imul
add
or
lahf
loopne
stos
out
outsl
insb
add
mov
clc
cli
sbb
mov
adc
inc
mov
les
xchg
into
mov
jae
mov
add
shrl
mov
mov
adcl
jl
xchg
out
dec
adc
cli
jle
imul
loop
imul
shll
testb
push
js
je
or
or
frndint
xor
out
jo
andb
out
rcr
sbb
pop
std
sti
lahf
adc
push
xchg
mov
es
std
fldenv
aam
mov
jno
xor
or
xchg
mov
adc
fdivrl
cwtl
inc
clc
push
pop
or
and
fldt
sbb
dec
sbb
pop
jle
jns
out
push
into
jbe
pop
xacquire
es
mov
dec
xchg
pop
jo
jecxz
imul
dec
xchg
movsb
adc
lods
addb
lods
add
lea
leave
or
ss
cmpsb
lea
xchg
xchg
pop
pusha
loopne
cld
movsb
ret
xchg
and
js
lds
repz
inc
insb
and
fdivs
xor
stc
add
mov
pop
pop
xor
mov
bound
pop
adc
test
sbb
push
aaa
cmp
mov
insb
mov
cli
shrb
scas
jp
pop
lahf
addr16
xchg
aam
ja
inc
jo
pop
adc
cs
mov
sahf
testb
in
xor
es
xchg
adc
sbb
fwait
xor
jbe
aam
stos
pop
xchg
xor
std
sub
mov
jb
jb
lods
fdivs
pop
jbe
aad
bound
mov
xchg
inc
pop
aam
pusha
pop
adc
fstl
iret
lods
pop
xor
lods
popf
loop
subb
pusha
repz
push
xor
mov
sub
jmp
mov
in
negb
xchg
das
xor
adc
jo
adc
out
mov
mov
pop
mov
inc
inc
add
ja
enter
jl
xor
adc
or
pop
mov
pop
mov
inc
inc
or
ja
lret
dec
jl
xor
adc
cwtl
pop
adc
das
mov
mov
pop
mov
inc
inc
or
ja
lret
xchg
and
inc
xchg
pop
adc
mov
je
mov
sbb
add
hlt
dec
xchg
cs
push
sub
add
je
adc
xor
ja
mov
add
mov
inc
push
sar
pop
mov
int
mov
pop
adc
daa
jle
orl
and
lret
imul
mov
cmp
sbb
cmp
test
das
shlb
cmp
pop
scas
push
lea
ret
je
les
adc
arpl
lea
imul
out
mov
in
xchg
pushf
pop
pop
adc
test
or
sbb
les
cmpsb
lret
clc
add
jecxz
xchg
jns
lods
insb
pop
adc
fsubrp
dec
and
xchg
xor
xchg
test
xchg
and
mov
xchg
pop
call
dec
cmpsl
xchg
or
stos
int3
sbb
sub
test
std
push
xchg
ss
mov
outsb
ret
or
pop
adc
out
lods
das
jo
add
dec
xor
inc
xor
out
fldenv
xchg
pop
push
aam
inc
mov
adc
jns
add
movsl
mov
mov
add
sahf
push
stc
mov
inc
sbb
dec
pop
ja
adc
ret
neg
into
repz
pop
mov
mov
cmp
out
sub
mov
adc
fs
jmp
pop
sub
sbb
and
or
jmp
jge
outsb
fucom
fadds
dec
lea
adc
out
or
clc
cli
mov
test
ss
dec
pop
pushf
inc
mov
scas
in
pop
adc
sub
xchg
cmp
and
cltd
sub
dec
push
mov
jp
mov
cmp
clc
imul
fldl
xchg
stos
cli
inc
jbe
data16
out
mov
or
xchg
std
dec
mov
fdivl
fptan
dec
mov
bound
decb
test
jbe
adc
jae
pop
cmp
mov
mov
rclb
insb
mov
or
addb
gs
shlb
adc
push
cmp
xor
fistpl
daa
dec
sahf
test
pop
adc
int
test
pop
aas
mov
mov
aam
pop
xor
or
push
int
sbb
shrl
pop
mov
push
out
lods
pop
cmp
cmpl
xlat
sub
inc
or
push
fcoms
xchg
pop
call
add
xchg
xchg
in
dec
mov
dec
dec
rolb
xor
insl
cmp
inc
mov
xchg
and
sub
xor
movsb
js
add
push
in
xchg
out
push
movsb
dec
test
xchg
daa
fisubl
jns
adc
jne
sbb
mov
orl
xlat
mov
repz
fistpl
xor
dec
lret
mov
in
movsb
xor
jg
testl
loopne
jmp
repz
cmpsb
repz
mov
pop
inc
or
and
es
pop
and
push
cmp
nop
ja
pmovmskb
dec
jg
mov
xchg
in
lret
and
fs
mov
or
cmp
mov
bound
or
lods
pop
mov
push
cli
xchg
daa
dec
mov
jbe
out
adc
pop
lcall
xor
dec
out
xchg
dec
xchg
push
cmp
nop
ja
and
iret
mov
mov
sbb
es
lods
jl
or
in
enter
fnsave
repz
push
xor
jb
mov
icebp
js
gs
in
mov
lods
aaa
mov
mov
pop
gs
lock
fidivs
ss
and
push
xchg
pop
sbb
loopne
cmp
fisttps
push
inc
cwtl
cmp
push
lds
pop
push
jge
or
lcall
inc
popf
pop
xor
sub
inc
int3
lret
sarb
shlb
addr16
mov
push
cmp
dec
leave
in
mov
inc
repz
data16
lea
pop
int
cld
stos
cwtl
jmp
gs
hlt
mov
cmp
shrl
inc
cmp
sarl
inc
lea
in
ud0
daa
or
or
int
sub
out
pop
inc
xchg
sbb
or
cmpsl
mov
inc
inc
adc
je
push
xor
iret
fcmovnu
mov
je
push
xchg
popa
int3
add
shrl
xchg
pusha
loop
xchg
mov
lds
xor
mov
aam
out
mov
jne
in
mov
loop
repnz
dec
ss
fadds
push
add
test
cltd
and
movsb
incl
xchg
mov
popa
mov
xchg
in
cld
mov
into
in
fmull
adc
fcmovne
cltd
cld
fs
adc
jl
push
iret
out
les
mov
or
out
sub
add
jle
addr16
lahf
mov
ret
mov
into
dec
outsb
fstp
cmp
out
inc
and
cli
clc
jnp
aas
out
sahf
push
xor
cmpsb
xor
insl
inc
aad
push
and
lea
or
sbb
adc
insb
sub
idiv
idivb
icebp
xchg
mov
jle
fdivl
adc
push
leave
aad
dec
fs
test
mov
add
fwait
jbe
sbb
push
mov
sbb
lcall
loop
adc
jmp
mov
mov
xchg
inc
in
rol
jmp
es
push
lock
push
stc
add
insb
fsub
xor
sbb
sbb
ret
sub
jo
adc
inc
xchg
daa
cmp
pusha
into
fwait
inc
ret
xlat
ret
cwtl
test
dec
daa
mov
popf
call
fdivs
sbb
mov
sub
push
stos
mov
inc
sbb
ja
xlat
les
adc
ss
mov
hlt
mov
xchg
sub
push
inc
in
and
mov
mov
in
mov
lods
xor
daa
xchg
outsl
rcrb
mov
push
pop
sub
leave
clc
and
fnstenv
mov
or
sbb
imul
arpl
add
xchg
fiadds
dec
pop
adc
inc
lock
cmpsl
lcall
aas
jns
jl
mov
movsb
xchg
push
pop
add
xor
xor
out
pop
push
test
clc
jge
imul
bound
push
insl
xor
mov
cmpsl
dec
xchg
daa
in
das
xlat
rep
and
lahf
roll
or
mov
lahf
cmpsb
outsb
sahf
mov
jnp
stc
add
and
out
das
movsb
outsl
test
lret
es
cmp
sbb
sbb
push
push
cwtl
leave
sbb
mov
repnz
dec
gs
mov
fstpt
cmp
mov
mov
nop
iret
jl
mov
gs
pop
movsl
dec
outsb
sbb
mov
xor
icebp
mov
sub
inc
sub
inc
cmp
aad
cmpb
pushf
daa
dec
arpl
out
push
jnp
mov
jnp
mov
mov
xor
pop
mov
xchg
mov
mov
or
or
popf
loopne
push
bndldx
es
push
out
push
jg
lcall
mov
inc
xlat
sub
or
pop
xlat
jge
pop
ja
sub
xor
inc
pop
pop
push
into
fbld
mov
jp
mov
les
cltd
mov
add
mov
fst
cmp
mov
call
sbb
pop
sbb
dec
adc
movsl
cmpb
sbb
jp
dec
push
and
mov
iret
loope
in
mov
add
loop
lahf
inc
xchg
fldenv
push
lock
add
mov
xor
jmp
pop
and
xchg
jno
mov
in
mov
test
lds
push
mov
mov
sbb
push
fistpl
push
cmp
daa
and
xor
iret
fiadds
mov
mov
arpl
loop
testl
jge
xchg
push
popf
inc
repz
add
xchg
mov
cs
cmp
outsb
cmp
xor
dec
add
pushf
cmp
add
arpl
cmp
inc
aas
and
mov
dec
push
iret
jnp
jo
xor
call
dec
xchg
pop
mov
and
inc
adc
push
pop
xchg
fadds
cli
outsb
mov
lea
mov
add
stos
inc
frstor
cmpl
lahf
inc
or
aam
mov
movsl
dec
xchg
fiaddl
jb
stos
jge
aas
cmp
mov
sbb
cmpsb
mov
jbe
lret
sti
mov
movsl
or
loopne
cwtl
add
das
sub
sbb
aad
repnz
or
add
and
adc
loope
test
xor
pop
scas
pop
pop
cmc
jae
mov
stc
add
xchg
roll
jp
xchg
xchg
das
fstp
test
insl
cmp
and
pop
call
mov
sarl
or
mov
daa
mov
xchg
inc
xlat
shll
mov
fdivs
sbb
adc
das
pop
jns
out
pusha
shrl
jecxz
stc
add
popa
ret
xlat
pop
dec
fs
mov
movsb
nop
xor
jbe
ret
cmp
out
adc
xchg
repz
sahf
inc
inc
js
mov
inc
sbb
pop
aas
sbb
out
lret
gs
xchg
pop
jb
push
imull
lret
clc
xchg
cmc
cmp
das
pop
mov
lcall
xchg
and
insb
mov
mov
or
xor
jae
sbb
mov
xchg
or
xchg
ds
mov
xchg
loopne
xchg
lods
mov
jae
fwait
mov
shlb
rclb
arpl
xor
xchg
daa
dec
ds
fcmovne
sbb
fidivrl
mov
aad
pop
out
mov
inc
mov
and
insl
push
jnp
xor
adc
and
shrl
add
xchg
xor
adc
xor
pop
adc
lods
xchg
inc
stc
enter
jge
mov
pop
lea
lods
mov
adc
fs
les
mov
cmc
or
int
mov
sahf
bound
insl
fdivs
pop
pop
clc
xchg
pop
adc
mov
mov
pop
cmc
push
fldcw
popf
mov
fdivs
sbb
push
cli
mov
adc
push
push
sbb
push
insb
das
mov
pushf
mov
icebp
fsubs
xchg
dec
dec
and
cwtl
scas
aaa
push
scas
lods
mov
test
and
dec
xchg
inc
pop
xlat
mov
adc
ficompl
stos
pop
xor
mov
pop
cmp
movsl
xor
stc
mov
pop
arpl
cmp
xchg
xchg
or
mov
test
inc
pushf
jl
adc
lcall
rcrb
jae
clc
adc
mov
lods
arpl
cs
icebp
cmp
xor
pusha
addb
cltd
in
and
popw
adc
dec
fdivs
lcall
and
add
mov
jae
adc
jg
jns
and
pop
xor
insb
xor
xor
aas
sbb
outsl
repz
stos
sbb
lret
lds
cmp
and
jl
mov
add
repz
std
mov
insl
int3
xor
dec
jb
mov
mov
shlb
jl
popf
mov
scas
lock
repz
popa
int
fadd
scas
test
jne
fstl
push
ss
gs
pop
fldt
cmp
lds
push
andl
jl
mov
ja
lods
mov
xchg
test
push
jno
in
pop
pop
icebp
out
sbbl
dec
pop
mov
jge
adc
shrl
popl
adc
jg
shrb
sbb
fwait
stc
out
pop
jl
mov
mov
cmc
sbb
add
xor
roll
push
adc
cld
shr
xlat
pusha
sub
cs
push
imul
loop
sti
cmpsl
mov
enter
mov
pop
pop
mov
in
pusha
adc
lret
imul
stc
add
movsl
lret
xchg
inc
xchg
outsb
sbb
inc
addr16
pop
or
xchg
movsl
mov
xchg
sbb
aad
xchg
das
fiadds
add
pop
test
mov
int3
add
adc
ss
insl
jl
jbe
int
mov
fdivs
cmp
popa
nop
or
mov
and
enter
aad
mov
sti
icebp
push
repz
mov
sub
sti
out
out
xchg
push
in
repnz
pop
lretw
loopne
dec
loopne
sub
dec
sbb
cmpsb
mov
or
mov
shrb
inc
cmp
das
add
addr16
out
test
inc
movsb
out
addr16
jno
jae
rcr
push
and
jmp
into
xchg
xor
in
out
add
int
mov
ljmp
push
mov
pop
icebp
fcoms
shlb
lock
cmp
mov
mov
pop
jbe
cmpl
jae
mov
xchg
inc
inc
test
adc
cs
mov
pop
js
sub
or
fwait
jbe
dec
movsl
pop
incl
outsl
mov
cmp
jo
pop
mov
stc
in
mov
pushf
int
nop
popf
mov
xchg
mov
loope
out
cmpsl
dec
pop
and
mov
loopne
ljmp
fnstenv
cltd
out
xlat
loope
das
lds
dec
lods
stc
es
dec
enter
adc
pop
in
ja
int3
lcall
and
xchg
sahf
test
fs
test
pop
das
pop
mov
mov
sub
pop
dec
xchg
mov
cmp
sub
gs
call
callw
adc
inc
aam
rorl
daa
in
ss
sahf
rolb
push
hlt
pusha
pop
adc
xchg
xlat
iret
popf
mov
pushf
les
mull
shlb
xor
rorb
lcall
movsl
xchg
jmp
jo
cld
jmp
cltd
inc
cwtl
and
into
jle
xchg
test
ret
mov
and
mov
push
inc
jg
lret
mov
add
jecxz
or
sub
loopne
xor
adc
add
stos
inc
push
inc
outsl
pop
adc
jp
mov
jl
pop
movsl
or
lcall
out
push
dec
mov
cmc
fsub
mov
sub
ficoms
ds
mov
mov
loope
scas
xchg
inc
orl
sti
shr
dec
adc
lret
fadds
jg
cmc
mov
shlb
inc
faddl
into
gs
xor
jns
fadds
pop
or
xchg
mov
daa
stos
sub
mov
xchg
ror
and
jl
xchg
xor
testl
divb
sbb
addl
repnz
js
movsl
xchg
test
xorb
and
scas
pop
jo
cltd
ret
loope
outsb
imul
mov
stc
jae
pop
subl
mov
jo
adc
movsb
daa
lret
and
sub
sub
sbb
arpl
aas
rcpps
mov
popf
repz
mov
in
loope
pop
jne
mov
leave
cltd
cmp
sbb
jmp
jecxz
icebp
and
cld
mov
mov
sbb
aad
ss
out
adc
jo
ror
fistps
fs
sub
sbb
sub
pop
adc
mov
shl
pop
pop
ret
pop
mov
or
dec
pop
mov
nop
jae
dec
subl
nop
loope
push
add
gs
xor
loop
ret
xchg
jae
rcl
subl
mov
popf
mov
cmp
mov
jb
adc
pop
mov
ret
insb
fs
pop
pop
mov
mov
loope
dec
or
je
adc
ss
push
cmp
bound
call
xor
ret
xchg
cmc
and
lds
inc
xchg
or
lods
pop
cmp
lahf
out
in
scas
or
insl
jl
cwtl
stos
sarb
nop
mov
mov
divl
pushf
repnz
sub
mov
adc
hlt
loopne
jo
adc
cmp
and
leave
adc
mov
dec
push
in
js,pn
and
sub
fs
es
outsb
sarb
fs
push
mov
jbe
call
arpl
imul
out
nop
cltd
insl
fdivs
movsl
iret
add
insb
ljmp
jl
xor
inc
imul
fwait
enter
mov
cmpsb
cmp
adcl
mov
out
and
adc
mov
aas
aas
pusha
movl
shrl
or
inc
jp
inc
fdivl
loop
test
lea
fadd
js
or
clc
fidivl
repz
fdivs
aam
stc
add
xor
sub
repnz
das
js
ror
push
es
pop
in
pop
push
lods
mov
cmc
mov
ds
sub
or
sti
adc
cmp
xor
mov
xchg
mov
mov
mov
lods
xor
fnstcw
sub
mov
dec
int
popf
lods
js
insb
cmp
push
cmpsl
ret
push
movl
movsb
and
mov
xchg
add
xor
movntq
inc
out
mov
jecxz
ficomps
nop
xlat
sub
cmc
mov
fs
in
xor
shlb
jb
mov
fcom
pop
cmp
iret
aad
push
cmp
sub
pop
pusha
mov
test
push
data16
stc
inc
jnp
rclb
xor
xor
andl
test
push
mov
mov
mov
jo
adc
ds
out
lahf
wbinvd
fnsave
decl
and
inc
ja
jne
sbb
jmp
insl
in
in
push
clc
dec
lahf
movsl
xchg
inc
push
sub
xchg
lahf
cmc
fidivs
lret
aaa
popa
int3
sar
stc
add
or
ds
lods
clc
popa
repz
into
movsl
mov
pop
mov
imul
fdivl
adc
push
adc
push
dec
aad
dec
mov
mov
mov
xchg
jno
cmp
orl
mov
repnz
repnz
push
or
ljmp
lret
je
or
lods
lock
xchg
cmp
fcmovb
jne
dec
xchg
sub
cmp
addr16
mov
xlat
aaa
dec
out
mov
adc
lahf
and
in
stc
xchg
es
test
shlb
xlat
push
sbb
or
icebp
pop
scas
push
xor
dec
pop
xor
cli
add
out
nop
sbb
and
mov
aaa
xchg
fidivs
xchg
aad
gs
jo
adc
push
adc
sbb
leave
mov
sub
sub
mov
shrl
lret
adcb
xchg
xor
sti
and
pop
push
xor
or
arpl
xchg
xor
lcall
daa
leave
pushw
ret
idivb
mov
dec
pop
stc
push
int
jae
dec
pop
mov
pop
sbb
or
or
jp
sub
xor
adc
imul
imul
or
xchg
and
insb
mov
in
out
in
push
cwtl
ss
mov
aas
stos
lds
cmp
dec
xchg
push
js
add
cmp
mov
loope
push
dec
or
cli
add
das
xchg
sbb
sbb
pop
scas
enter
ror
push
adc
es
mov
sahf
cmp
imul
jne
fnstcw
mov
add
sbb
sbb
jecxz
jo
daa
mov
sbb
popf
cmp
inc
in
insl
out
bswap
inc
ret
pop
mov
lcall
inc
and
xchg
pusha
imul
fs
ret
je
rcrl
int
push
es
pop
sbb
jno
aam
jo
adc
pop
push
jo
adc
ljmp
nop
gs
push
outsb
loopne
ja
xchg
mov
mov
xor
aad
mov
imul
or
loopne
out
stos
popf
dec
pusha
sub
out
out
out
mov
lods
or
sub
mov
inc
jb
xchg
and
stos
push
mov
ret
roll
xchg
jecxz
imul
add
sbb
shll
mov
or
mov
out
pop
mov
test
rolb
push
ret
pushf
push
in
lea
in
jo
adc
adc
xchg
data16
arpl
out
inc
mov
repnz
or
imul
cmpsb
add
push
adc
fs
clc
xor
ja
sbb
xor
push
fidivs
leave
jnp
stos
imul
push
icebp
lock
push
and
loop
aaa
rolb
xchg
es
rcrb
or
int3
shrl
adc
mov
cmpl
push
mov
pop
mov
xchg
cmp
test
mov
and
mov
arpl
mov
and
mov
jmp
sub
push
icebp
add
andl
sub
ja
gs
ljmp
fwait
in
into
push
or
aam
out
sub
mov
pop
and
loopne
cmpl
popf
out
hlt
xor
scas
inc
push
mov
mov
mov
jecxz
mov
cli
add
mov
dec
jge
add
sbb
inc
mov
cmp
or
std
iret
mul
xchg
inc
xchg
in
push
inc
in
ds
leave
push
cmc
adc
inc
popf
push
out
rorl
lea
stc
lahf
mov
movsb
inc
test
into
lret
aad
xchg
sbb
sahf
call
outsl
cmpb
loopne
fdivrs
inc
bnd
xor
int
mov
sbb
mov
xor
dec
jmp
nop
xor
outsl
mov
cmp
jp
scas
mov
jecxz
cmp
sbbl
xchg
add
jl
mov
mov
pop
sub
int
inc
nop
mov
stos
jne
inc
movsb
lea
sti
and
and
jmp
sub
cmp
and
in
jg
aaa
sbb
mov
push
insl
mov
pop
call
outsb
sub
xor
bound
gs
subb
sub
xor
sbb
insl
enter
push
mov
mov
sub
mov
je
jge
xchg
mov
mov
fmuls
std
in
adc
xorb
cmp
jg
out
loope
and
xchg
je
inc
pushf
lods
inc
sbb
pop
aaa
jg
scas
leave
adc
xor
movsb
dec
cmp
test
mov
jbe
fxch
jnp
je
mov
dec
ss
add
pop
mov
aaa
push
insb
fdivs
adc
cli
fs
rcr
aad
lock
stos
xor
loop
std
movsb
dec
xchg
push
add
daa
dec
sahf
cmp
add
mov
ret
mov
out
or
inc
das
imul
add
xchg
jne
inc
daa
dec
mov
rcl
mov
and
sub
insl
push
xor
daa
dec
sahf
dec
add
fwait
inc
xlat
icebp
leave
daa
push
aaa
mov
fwait
ds
inc
dec
cmp
and
adc
jns
jns
xlat
xor
dec
xchg
ficomps
sub
aas
jmp
or
ret
inc
dec
flds
add
sub
das
dec
xchg
and
pop
push
xor
out
sbb
insl
ficompl
jg
xor
jo
fptan
mov
sti
mov
dec
in
or
mov
jne
jg
mov
fstl
push
mov
sarl
icebp
mov
add
pop
pop
mov
rcr
shrl
xlat
pop
sub
dec
xchg
and
loope
or
pop
sub
push
mov
inc
pop
dec
xchg
sub
out
jge
nop
daa
xor
jmp
push
or
int
xor
fwait
adc
dec
xchg
xchg
mov
mov
fisttps
or
and
cs
xchg
and
and
rcrl
shll
and
iret
xchg
sub
dec
nop
pop
fistps
inc
cwtl
xor
push
mov
mov
test
dec
out
int
and
mov
arpl
sbb
jg
mov
out
cltd
and
sub
jns
cld
jmp
aad
addr16
add
aad
mov
cmp
in
cmp
xchg
inc
subb
cmp
adc
push
adc
scas
pop
ljmp
and
mov
rep
cmpsl
daa
aam
loopne
lahf
jge
or
jle
mov
push
mov
adc
inc
jno
dec
xchg
icebp
cmp
mov
cmc
jo
xor
jns
rcr
dec
in
ret
push
inc
orl
and
call
mov
jg
popf
scas
add
mov
jnp
adc
movsb
insl
ret
jno
cld
hlt
stc
in
mov
or
jns
or
xlat
out
scas
es
repnz
rolb
ss
cmp
out
mov
pop
mov
ret
sbb
fisubrs
jle
or
jg
test
cmp
mov
lock
mov
cmp
sub
mov
lret
ljmp
cli
xchg
push
mov
dec
pop
or
cmc
or
js
iret
or
pusha
and
imul
std
pop
int
fsubrs
push
sahf
lcall
aam
inc
sub
subl
push
xor
mov
lcall
jo
pop
adc
lds
imul
test
je
clc
out
test
add
or
cltd
adc
pop
icebp
aad
xchg
mov
aaa
jmp
roll
jmp
jg
push
out
out
iret
jns
or
mov
sub
cmpb
jmp
test
leave
adc
mov
mov
call
cs
sbb
imul
outsl
test
sahf
cmp
out
mov
aas
push
pop
idivb
and
into
xchg
and
loope
hlt
sahf
cmp
pop
xchg
jg
and
mov
inc
sub
out
lret
push
imul
mov
aam
jns
out
mov
cli
fnstenv
jo
adc
js
cmpsb
push
dec
xchg
pop
jbe
adc
sbb
mov
fiaddl
ljmp
mov
sbb
and
into
xchg
and
xchg
cmp
popa
int
adc
xchg
and
imul
xchg
sub
sti
aad
aad
and
or
shll
pop
sarl
add
xor
cmpl
mov
dec
or
fwait
and
mov
inc
pop
js
stos
jne
scas
xor
push
mov
cmp
jo
je
data16
repz
xor
adc
mov
lods
mov
repnz
outsl
push
std
sarb
sahf
dec
push
jns
xchg
dec
fwait
ss
jecxz
imul
inc
pop
inc
xchg
sub
xor
and
xchg
pop
xor
and
fidivl
sbb
shll
and
or
in
or
xlat
or
inc
xchg
imul
add
movsl
dec
xchg
and
add
dec
sahf
dec
or
fwait
and
mov
push
or
inc
das
jns
sub
loopne
add
xchg
daa
mov
mov
cmc
test
shl
mov
lret
fmuls
sbb
cmp
mov
sahf
cmp
adcl
mov
jmp
fisttpll
out
out
nop
cwtl
roll
pusha
mov
ret
int3
arpl
xchg
mov
inc
out
scas
nop
push
pop
push
sub
and
popf
sub
jmp
and
and
shr
push
ret
xchg
mov
or
fwait
jge
jbe
out
add
call
les
lds
gs
pushf
pop
and
xor
popf
mov
pop
xor
imul
mov
add
push
testl
rolb
mov
push
subb
add
pushf
ja
outsb
mov
xchg
mov
inc
mov
jmp
cmp
inc
out
enter
cs
fnstenv
sub
pop
xor
push
mov
cmp
stos
sahf
sti
jno
std
xchg
stos
sbb
push
mov
lretw
cmp
xchg
push
lock
sub
inc
push
dec
cmp
aas
sub
cmpsl
push
sbb
enter
in
mov
dec
sub
subl
sti
add
cmp
xor
xchg
jo
pop
adc
inc
in
dec
inc
mov
or
mov
jns
xor
jns
push
fisttpl
movsl
je
add
in
jae
fwait
add
fwait
pop
imul
sub
cmp
cli
imul
xor
jle
adc
fistpll
push
ljmp
mov
in
cltd
inc
cmp
mov
clc
aaa
fstl
cmpl
pop
mov
pop
dec
cmp
fs
adc
push
mov
cs
sahf
data16
pop
ja
adc
jnp
xchg
mov
and
roll
xchg
addr16
jne
xor
test
fsubr
popa
mov
jnp
lcall
popf
cwtl
inc
sub
xchg
fwait
push
in
insb
xchg
movsl
mov
enter
pop
fildll
ja
jo
repz
xchg
mov
pushf
jae
pop
xor
inc
je
adc
jl
adc
xchg
es
movsb
jp
mov
ss
jne
repz
push
repz
outsb
lock
into
fwait
mov
shrb
and
ret
imul
mov
or
dec
out
sbb
loope
lea
cs
mov
nop
nopl
inc
addr16
lret
mov
ret
or
jmp
jle
mov
ret
fwait
xor
mov
xor
test
mov
dec
ret
sbbb
cltd
inc
pop
aaa
mov
aad
gs
xor
cs
push
std
stc
xchg
inc
dec
in
mov
jle
mov
xlat
mov
push
lcall
out
test
jns
fcmove
adc
and
mov
lcall
insl
aam
iret
fdivs
pushf
int
fistpl
ljmp
sbb
mov
pop
out
out
loope,pn
or
sub
out
int
mov
xor
stc
test
xchg
enter
cmp
push
repz
pop
int
shl
sete
inc
xlat
movsl
sbb
out
mov
out
add
movsb
ret
stc
and
loope
mov
jp
fwait
dec
push
xor
mov
mov
xchg
sub
fwait
ret
jle
sti
hlt
xor
cmp
rep
stos
mov
dec
and
aaa
cmp
outsl
mov
sti
aad
pause
fstps
xchg
jp
xchg
cld
mov
outsl
fidivl
repz
pop
js
pop
pop
jo
cmpsb
pop
sahf
mov
outsl
push
sbb
push
into
cli
lods
xchg
pop
adc
push
out
in
out
sbb
addr16
insl
cs
add
insl
push
cmp
xchg
xor
popa
outsb
aaa
sub
mov
pop
jno
shrl
xchg
xor
inc
cwtl
aaa
insb
int3
push
shll
mov
mov
andl
ljmp
repnz
xor
imul
inc
out
stos
rcl
mov
push
filds
je
adc
inc
rclb
jnp
jno
lret
xchg
cmp
das
flds
mov
out
popa
js
ret
ret
push
iret
shll
loop
aaa
xchg
je
mov
cld
cmp
mov
push
adc
stc
rolb
mov
std
test
inc
pop
add
ja
pusha
dec
das
ljmp
repz
lods
sbb
push
and
pop
leave
push
mov
fsub
mov
and
out
lods
movsb
fs
movl
aam
mov
leave
out
insb
test
inc
fistl
nop
sub
push
inc
sbb
fwait
fdivl
sub
mov
icebp
adc
fcompl
outsb
hlt
jo
adc
enter
repz
jo
repnz
lock
mov
dec
insb
sbb
test
push
pop
mov
inc
push
fcmovne
in
je
sbb
clc
mov
daa
popa
mov
test
adc
lock
and
xor
inc
scas
cli
into
sbb
or
pop
dec
mov
loope
jne
dec
push
into
in
ljmp
jl
xchg
push
mov
lcall
mov
jle
add
pop
adc
test
fdivrs
jo
nopl
sahf
sub
sbb
cli
ds
jbe
outsl
dec
pop
and
sbb
xchg
testb
imul
sbb
arpl
testb
dec
test
je
wrmsr
test
mov
test
icebp
cmp
cmp
mov
xor
in
stc
mov
mov
mov
sbb
adc
loope
stc
mov
pop
jo
repz
adc
jp
js
shlb
sahf
xor
stos
add
dec
or
jge
mov
mov
adc
jb
ja
lods
fdivs
pop
jbe
cmp
xchg
jl
inc
xlat
mov
mov
pop
cmp
sti
push
movsb
dec
stos
pop
push
insb
fdivs
out
push
cli
subb
or
out
sbb
addr16
insl
cs
lahf
lea
mov
dec
mov
dec
push
push
jp
repz
clc
mov
cs
sahf
es
fdivs
xchg
ja
inc
xchg
into
dec
sbb
mov
push
adcb
push
xchg
daa
cmp
int
pop
jp
mov
aad
xchg
fsubrs
xor
movsl
mov
sti
cwtl
push
cmc
icebp
pushf
fsubrs
aas
fs
xchg
and
push
push
sub
int
imull
inc
dec
dec
xchg
and
sbb
mov
lret
out
insb
leave
scas
cmpsl
lods
cmp
jo
fstpl
pop
jno
xor
adc
and
test
mov
dec
and
aaa
cmp
outsl
mov
xchg
je
fstpt
sti
std
pop
xchg
ret
adc
insl
push
inc
xlat
shrb
mov
fwait
xor
jbe
fidivs
dec
rolb
cmpsb
int
jo
jnp
lahf
aaa
xor
outsl
lds
js
pop
in
cmp
sarb
sub
or
inc
fistpll
cld
push
xor
insl
push
andl
mov
and
data16
xchg
inc
mov
pop
mov
mov
mov
inc
xchg
jle
sbb
jp
inc
mov
loopne
mov
jl
cmpsb
out
mov
xchg
orb
sub
std
jge
scas
leave
sbb
xlat
flds
cmp
mov
lret
mov
into
cli
or
scas
mov
repnz
and
push
in
mov
mov
test
mov
fistl
pop
xor
hlt
insb
mov
xchg
or
loop
mov
lret
sbb
jb
xchg
stos
dec
jnp
sar
jbe
icebp
inc
xlat
cmpsb
frstor
bound
scas
sbb
add
inc
dec
lea
push
mov
pop
je
cmp
and
xor
aad
mov
mov
sub
xchg
mov
or
inc
mov
ds
mov
sub
out
add
std
scas
sbb
dec
add
fdivrs
pop
leave
mov
movsb
xchg
mov
mov
shlb
cmp
add
insb
rcrb
leave
adc
xor
dec
out
cmp
push
test
cmp
enter
rcl
movsb
int
mov
outsb
sbb
popa
push
inc
and
pop
push
imul
cltd
iret
jns
cltd
das
inc
jmp
adc
outsb
cli
stos
movsb
xor
inc
sub
movsb
decb
push
mov
test
push
lret
insl
in
mov
mov
test
enter
jno
adc
pop
cld
addr16
jae
test
or
and
xor
data16
pushf
fwait
ret
add
addr16
xor
xlat
or
xchg
lods
imul
mov
int3
jnp
cmp
jle
mov
mov
mov
push
aaa
out
push
aad
gs
pushf
icebp
sub
push
push
cmp
aas
cmpsl
or
movsb
mov
add
mov
cmpsl
xchg
xchg
pop
sub
dec
or
and
jle
sub
inc
push
mov
push
jae
push
push
add
stos
add
or
in
test
sub
imul
push
mov
pushf
push
xor
sti
loop
cwtl
push
cld
mov
cmp
xchg
jmp
sbb
pusha
mov
pop
mov
cmp
push
push
fs
sbb
insl
fidivrl
clc
mov
push
xchg
sub
ss
sub
push
int
mov
out
sti
add
imul
mov
ds
loope
and
push
lret
js
out
push
sti
cli
add
push
adc
icebp
mov
lret
push
pop
cmp
add
loope
add
pop
pushf
mov
adc
rcrb
insb
jl
adc
out
mov
lods
mov
or
jne
mov
mov
inc
inc
mov
ret
pusha
push
out
push
sahf
xchg
xlat
adc
xchg
pop
push
xor
mov
inc
pop
arpl
fs
mull
testb
in
xchg
lcall
in
repz
adc
movsb
push
adc
cmp
gs
aam
cltd
dec
je
out
rcrb
movsb
fstpl
pop
jo
lret
mov
fdivrs
adc
insl
insl
and
mov
movsb
xchg
push
lcall
adc
dec
mov
popf
mov
cwtl
mov
adcl
loop
rcrb
outsb
xchg
fldl2e
lea
out
out
or
jge
int3
fwait
inc
aam
xlat
aas
pop
aaa
aas
imull
sahf
repz
lods
shl
imul
push
jp
out
and
sbb
mov
lods
sbb
gs
mov
xchg
inc
stos
cwtl
mov
inc
mov
ret
pop
mov
lcall
or
mov
pop
pop
and
insb
lahf
sub
dec
ljmp
mov
push
adc
and
pop
jl
dec
sahf
inc
jecxz
sbb
push
daa
mov
pushf
mov
adc
ljmp
push
adc
or
sbb
data16
gs
sbb
jmp
int3
cltd
mov
clc
sti
add
rolb
sbb
adc
popa
test
xchg
sbb
push
push
nop
shll
sbb
push
cld
cmp
cmp
pushf
mov
adc
addr16
shr
or
adc
mov
mov
add
int3
mov
shlb
jecxz
push
in
jne
xor
sbb
sbb
jge
test
andb
jbe
sub
fld
pushf
test
mov
push
and
and
js
push
adc
cmc
or
jp
pop
popf
dec
jmp
jge
pop
mov
dec
bound
mov
push
lods
dec
fs
sti
add
in
jae
imul
loopne
subb
dec
loop
rcl
divl
sbb
dec
dec
mov
jne
rcl
dec
adc
mov
or
in
mov
mov
cmp
add
faddl
inc
push
mov
jo
dec
or
stos
add
fisubrs
mov
jl
mov
inc
repz
lods
or
aaa
xchg
mov
push
and
and
cmc
pop
jnp
inc
jae
loop
pop
jb
inc
lahf
dec
mov
out
cwtl
mov
sbb
adc
insb
jno
jnp
or
and
add
lahf
xor
aam
push
push
mov
add
cmpsl
xor
es
push
mov
pop
sub
pop
xor
push
xor
xor
lcall
xchg
movzbl
dec
pop
cmc
xchg
push
sbb
stos
dec
sbb
cmp
insb
test
pop
ds
inc
shrb
mov
xor
hlt
sub
pop
in
in
stos
xchg
sub
int3
and
ds
sarl
ja
or
mov
int
sub
arpl
jne
xchg
push
cmp
jo
pop
mov
fldenv
xor
inc
mov
cmp
or
test
lahf
cmp
or
xor
fbld
faddp
imul
jmp
mov
idivb
lahf
dec
lock
and
sub
inc
or
xor
loopne
sub
mov
adcb
push
gs
xchg
fildl
or
lret
adc
pop
in
cmp
enter
ror
pop
and
mov
sbb
xor
inc
out
mov
cwtl
lock
and
sbb
push
xor
mov
mov
sbb
add
fs
adc
jae
jns
leave
jno
insl
adc
jno
sub
dec
xchg
scas
mov
test
add
xchg
das
pop
jmp
shll
mov
sbb
xor
cmc
dec
cmpps
divl
cmpsl
gs
popf
cmp
std
jge
ret
nop
xor
jns
push
into
fwait
lahf
clc
and
mov
xor
sbb
xor
call
mov
cmp
shrb
xchg
mov
nop
lret
push
mov
mov
xchg
sub
movsb
test
cmp
in
sbb
jns
icebp
lds
clc
test
loopne
xchg
mov
xchg
add
xor
and
das
cld
add
lcall
cmp
pushf
push
ss
xchg
int
cli
dec
push
mov
push
mov
popf
gs
pop
mov
fisttpl
lret
repz
cmp
sahf
pop
stos
arpl
mov
out
mov
add
and
sub
gs
push
shlb
mov
cmp
sub
sti
pop
xor
inc
int
sbb
jno
lods
xor
and
push
mov
or
xor
mov
push
xchg
mov
xor
lret
cmpb
xor
ds
mov
mov
in
dec
test
ja
repnz
sub
aad
pop
and
add
cltd
cwtl
leave
movsb
ss
and
into
xor
fwait
adc
stos
test
or
mov
add
sub
pop
mov
pushf
lar
mov
mov
inc
sbb
sbb
adc
pop
ss
stos
leave
pop
inc
pop
mov
push
test
test
xor
sbb
cmp
imul
jge
push
mov
into
cmpsb
mov
popa
xor
xor
sahf
mov
xchg
mov
xor
dec
repz
or
push
add
xor
xor
lcall
sahf
xchg
sbb
adc
dec
xchg
dec
arpl
popf
sbb
inc
sub
jnp
jnp
lods
adc
scas
and
cmp
pushf
mov
shlb
cmpsb
jae
mov
xor
icebp
mov
dec
mov
jne
mov
xor
xor
push
inc
outsb
mov
pop
xchg
scas
xor
std
decl
sbbl
loope
or
push
fnstcw
jae
push
scas
jp
push
sbb
xchg
pop
stos
popa
xchg
inc
fidivrs
bound
sbb
movsl
in
mov
cmp
push
mov
mov
fwait
insl
test
or
pop
sbb
add
mov
imul
cli
mov
clc
rcr
xor
negb
jbe
loopne
out
ret
or
out
inc
pop
push
mov
das
xchg
inc
js
fcomip
insb
mov
jecxz,pn
ss
jae
aad
cmp
dec
adcb
rcrb
stos
aaa
xchg
stc
jae
mov
and
mov
mov
push
fcomps
push
xchg
je
inc
iret
sub
jge
lock
adc
sbb
cmp
push
std
imul
mov
imul
jb
loopne
xchg
xchg
loopne
or
fs
xchg
int
inc
shll
mov
push
pop
cmp
inc
cmp
repz
shlb
lahf
pop
jp
fwait
push
fiadds
jns
and
sbb
cmp
lret
jns
adc
add
push
in
jp
mov
jb
lahf
sub
jb
push
sti
cwtl
xchg
add
xor
out
xchg
jp
push
cli
pop
negb
addr16
adc
pop
sahf
pop
adc
call
in
leave
cli
dec
fs
adc
sbbb
imul
cs
mov
push
sbb
jno
int
xor
das
push
inc
or
outsl
mov
and
pop
mov
pop
cmpsb
jmp
ret
lock
mov
test
pop
adc
push
jmp
push
and
pop
sub
adc
fsubs
mov
outsb
fidivl
mov
repz
ret
jo
gs
aaa
adc
ret
or
fnstcw
mov
xchg
pcmpeqw
add
insl
dec
pop
adc
xor
dec
scas
mov
jb
out
hlt
mov
lods
xchg
inc
push
mov
fistpl
pushf
dec
sahf
stos
andb
ficompl
pop
adc
cmpsb
add
pushf
xor
lcall
sbbb
ret
xchg
mov
call
pop
adc
sbb
cmp
mov
jl
push
adc
jbe
cwtl
sbb
mov
repz
neg
and
les
outsl
push
clc
mov
jp
outsl
loope
xchg
data16
shlb
inc
shl
test
popa
inc
pop
jno
inc
jg
jno
adc
sub
imulb
lds
sub
mov
xchg
insl
xor
std
xor
jbe
jl
out
dec
ret
fsubrl
xchg
dec
test
mov
xor
flds
sub
add
and
jb
hlt
pop
fsubrs
pusha
popa
sbb
add
ss
in
imull
in
int
lods
mov
fbld
dec
adc
or
popl
ror
sbb
pop
jno
xchg
je
pop
inc
push
pop
cmp
mov
mov
repnz
les
sub
mov
inc
add
add
cwtl
cs
cmpsb
mov
inc
adcl
lea
in
inc
bound
imul
or
cmp
xor
cmpsb
leave
out
test
dec
sahf
sub
pop
xchg
std
es
loop
mov
jo
aaa
subb
addr16
imul
ss
repnz
test
ret
xchg
push
cmpsl
xchg
pop
xor
push
push
ret
ret
subl
pop
xchg
or
adc
pop
dec
stos
add
bsr
adc
fcoms
mov
nop
addr16
insl
push
lahf
mov
cmp
bound
aam
shlb
mov
test
sub
mov
add
pop
cmpsl
imul
xor
fidivs
pop
loope
inc
xchg
mov
inc
xor
pop
mov
andl
aam
lcall
xchg
lahf
or
cmc
bound
lahf
inc
sbb
jb
leave
movsb
gs
adc
aam
xchg
stc
jns
sbb
repz
cmpsb
fdivrl
mov
mov
push
pop
jno
or
jae
pop
scas
stos
xor
mov
movsb
das
xor
push
insl
xchg
outsb
pop
mov
fwait
inc
out
inc
jle
pop
mov
test
pop
adc
mov
popa
fidivl
add
cmp
arpl
movsb
pop
aaa
xor
in
jb
aas
lods
rcrb
ss
ret
or
leave
pop
pusha
dec
jns
pop
lods
or
inc
out
sbb
stc
xor
adc
mov
lea
pop
in
loop
sar
jle
insl
lret
outsl
aad
mov
cmp
mov
xor
xchg
lcall
jg
cmpsb
test
inc
out
sbb
mov
mov
fstpt
call
or
mov
ss
dec
movsl
pop
cmp
lret
imul
iret
jmp
xchg
mov
int
cmp
adc
dec
jbe
lret
pop
adc
loope
and
pop
adc
test
push
cmpsb
add
xchg
dec
mov
sbb
xchg
in
dec
mov
fdiv
out
and
scas
test
mov
cltd
sbb
imul
insb
xor
cmp
xor
in
xchg
outsb
int
shll
and
sti
sti
mov
dec
in
xchg
pop
xchg
std
mov
or
or
leave
imul
mov
insl
push
std
lock
cmp
mov
and
sbb
xchg
imul
repz
pop
cmc
sub
pop
dec
mov
mov
movl
pop
loopne
xor
pop
mov
or
xlat
popf
sbb
push
inc
xchg
daa
add
dec
push
dec
xor
xor
orb
rcl
xor
repnz
adc
rolb
daa
fists
push
leave
pop
int
and
jne
imul
aaa
dec
insl
xchg
popa
ficoml
xchg
push
mov
imul
and
push
into
pushf
xor
fstpl
shlb
int3
jge
aaa
and
cltd
add
mov
or
jmp
adc
aad
mov
dec
enter
data16
push
pushf
push
mov
sub
ja
add
cld
cmp
push
call
or
xchg
aas
mov
add
adc
stos
lea
dec
pop
adc
xchg
lret
sub
enter
in
adc
jae
mov
ljmp
dec
jmp
int
addr16
fimuls
jbe
xchg
and
sub
push
push
inc
enter
lahf
lret
idiv
mov
mov
add
cwtl
pop
mov
idivl
lea
cld
fwait
push
insl
scas
cmp
jp
push
in
xor
cld
test
and
sub
int3
ljmp
loop
mov
jl
push
out
movsb
mov
push
mov
in
into
add
mov
ljmp
add
loopne
add
dec
mov
pop
rcll
xbegin
imul
ror
js
outsl
fidivl
loope
add
lret
jae
or
sub
popa
and
pop
lahf
cwtl
scas
stos
cmp
adcl
mov
or
xchg
inc
sbb
cmpsb
ffree
arpl
fs
in
cmpl
mov
imul
pushf
loope
mov
pop
repnz
std
pop
jno
ffree
int3
fcmovnb
sub
gs
rolb
iret
jmp
jne
xor
inc
out
call
jbe
jno
adc
adc
ja
push
xchg
dec
repnz
sti
sti
mov
shl
mov
repnz
mov
mov
cs
stc
jae
in
jo
pop
adc
or
loope
dec
sahf
cmp
dec
jmp
fcmovb
sbb
arpl
gs
jbe
aas
xor
pop
insl
loopne
sahf
dec
ret
mov
push
lret
mov
sub
push
pop
lret
pusha
mov
xor
fs
push
pusha
mov
sub
test
push
imul
insb
xor
inc
and
xor
adcl
or
push
rclb
pop
fstpt
cmp
lods
push
or
aaa
out
jecxz
int
fisubrs
cmp
insl
fcmovnu
xchg
push
testb
loope
insl
fidivl
repz
andb
lods
pop
in
xor
iret
stos
xchg
scas
push
fwait
adc
mov
push
outsl
nop
ds
sbb
shr
xchg
insl
rcrb
cmp
test
xor
mov
imul
outsb
xor
mov
mov
fbld
inc
sub
insl
pop
jo
rolb
jmp
mov
ss
lret
mov
ja
lret
jbe
rcl
xor
repz
pop
jo
xchg
jne
mov
std
shrl
test
int
dec
fidivl
aas
mov
das
jno
sub
stc
pop
fidivl
xchg
xchg
jg
and
jo
push
jle
insl
pop
jo
roll
jmp
push
std
loope
ret
lock
cmc
outsb
fcmovb
sbb
mov
ds
dec
xchg
push
sti
int3
xor
mov
mov
and
push
push
out
xchg
xor
mov
pop
ss
das
xchg
fs
cmp
popf
dec
insb
xor
pop
cmp
test
or
xchg
out
xor
and
xchg
ss
and
cmp
cli
sub
aaa
loop
out
inc
rcr
outsl
rorb
popa
cmp
aam
call
shr
scas
ljmp
push
call
std
add
sub
fsubrs
dec
pop
adc
cli
adc
cmp
lcall
xorb
push
and
das
push
adc
or
ret
push
xchg
call
into
nop
dec
jp
cmp
push
das
scas
push
fs
xor
sub
fs
add
in
adc
adc
fs
lahf
popf
rcl
jmp
xchg
fidivs
mov
adc
xchg
out
addr16
pop
mov
outsl
dec
xchg
scas
int
mov
push
and
adc
push
std
cld
push
inc
or
adc
inc
and
or
mov
fdivrs
mov
loop
pop
xor
dec
test
adc
sbb
aam
jno
adc
lret
in
lock
dec
sbb
and
aam
push
adc
aam
add
sub
inc
xchg
adc
dec
shlb
push
repnz
push
pop
dec
cwtl
sbb
dec
loopne
push
adc
jp
push
push
push
out
test
cmp
idiv
xchg
into
es
nop
mov
incl
test
jmp
nop
testl
push
adc
aad
enter
popl
dec
scas
push
jle
dec
sub
or
cmp
cmp
xchg
mov
mov
pop
shll
mulb
xor
jb
cs
stos
xor
sub
scas
andb
mov
pop
js
mov
stc
cmp
mov
aad
pop
push
push
in
daa
pop
loopne
or
xor
outsb
sbb
ljmp
jno
adc
daa
cwtl
dec
int3
shll
enter
jecxz
ret
xor
push
push
xor
es
lret
mov
sbb
push
pop
dec
cmp
repz
mov
ss
fcmovb
lahf
jg
in
jno
mov
cmpl
adc
add
scas
push
add
sahf
adc
loopne
push
adc
stos
pop
lret
dec
imul
jno
adc
pop
aam
push
adc
cmpsb
jb
adc
pop
call
pop
jl
dec
in
jbe
repz
shrl
push
enter
lret
push
mov
and
icebp
dec
mov
insb
inc
xlat
mov
lahf
mov
int3
jno
adc
sub
xchg
daa
dec
ljmp
mov
jg
in
pop
or
dec
gs
arpl
movsb
dec
xchg
aam
sbb
dec
sahf
lock
aaa
test
ss
sub
or
pop
mov
gs
clc
iret
in
aaa
cmpsb
out
cmp
or
aaa
add
mov
aas
xchg
jecxz
or
dec
xchg
sub
mov
xchg
out
cmp
out
shrl
movb
stc
in
js
inc
cmovge
jno
adc
add
scas
into
out
shlb
cwtl
push
cmp
cld
imul
pop
xchg
mov
cmp
xor
pop
adc
out
mov
cli
aaa
ljmp
movsb
dec
out
mov
ret
or
pusha
xor
ret
or
xor
mov
lods
fidivs
aam
fsubs
fsubr
xor
mov
leave
cmc
sbb
sub
pop
adc
xor
cmp
adcb
dec
into
jg
xchg
inc
int
xchg
ret
push
adc
test
xchg
sub
push
and
mov
mov
es
jp
lock
fidivl
dec
rcr
jl
dec
in
cs
pop
push
aad
lcall
jecxz
dec
jecxz
xor
stos
xor
mov
int
leave
pusha
and
and
mov
lds
fdiv
frndint
imul
or
fbld
in
stos
xchg
lods
push
cmp
mov
mov
or
adc
filds
push
and
add
sbb
adc
sbb
jns
inc
mov
out
pop
xor
arpl
adc
es
xor
ret
adc
aas
sti
add
xchg
sub
push
mov
je
dec
addr16
jae
xor
imul
imul
jmp
jmp
popf
jnp
sub
jmp
fisttps
icebp
fcoml
adc
pop
out
xchg
mov
movsl
jo
xchg
jns
cmp
clc
sbb
xchg
jge
push
inc
lock
push
and
add
or
aaa
xor
movsl
fisttpll
xor
dec
xchg
loope
sub
inc
xor
sub
js
cmp
add
daa
aam
lahf
dec
xor
test
call
in
ret
push
dec
shrb
xchg
xor
or
pop
mov
xchg
adc
pop
cmp
pop
pop
cmpl
sbb
bound
pop
jmp
jne
add
lahf
pop
pop
cmp
push
leave
xchg
jne
adc
adc
adc
mulb
push
dec
mov
movzbl
xorl
mov
lea
pop
cltd
mov
add
clc
decl
fmuls
or
push
fptan
movsb
test
insl
mov
notb
push
adc
hlt
std
pop
test
inc
mov
mov
mov
push
inc
out
test
andl
insb
pop
enter
or
cmpsb
mov
repz
lret
mov
mov
mov
dec
dec
sahf
inc
inc
js
mov
aaa
push
jle
adc
and
push
xorb
and
xchg
push
xor
nop
ja
inc
xlat
in
xchg
and
inc
xchg
push
sbb
test
xchg
daa
cmp
in
sbb
outsb
fcmovb
mov
jbe
xor
loopne
dec
pusha
jne
pop
push
insl
fdivs
jmp
fisttpl
test
insl
cmp
cs
shr
mov
mov
ret
outsb
inc
leave
int3
fwait
inc
xlat
std
pusha
push
and
dec
jns
out
xchg
mov
lods
pop
and
pop
popa
ret
pop
sti
out
and
pop
and
jns
mov
cmpsb
test
outsb
jge
push
xchg
pop
xorl
adc
xchg
lods
lahf
mov
mov
mov
rclb
sbb
cmp
mov
adcl
mov
ja
jnp
and
int
xor
ret
outsb
push
jmp
cs
mov
repnz
jg
and
mov
pop
add
jmp
movsb
ds
mov
sbb
cmp
sbb
mov
fnstenv
sti
sbb
inc
fldl
and
jae
push
int
xchg
cld
in
xchg
lcall
mov
cmp
nop
test
ja
mov
repz
cmp
mov
into
or
dec
mov
mov
xrelease
nop
xor
sahf
cmp
xchg
shrl
mov
jb
xchg
sub
mov
push
cli
adcl
int
mov
popa
pop
jnp
push
in
imul
jecxz
sbb
xchg
dec
mov
in
sub
sbb
in
les
xor
hlt
xchg
fistps
lcall
js
inc
enter
sbb
inc
cmc
mov
xor
sbb
xor
inc
ljmp
lret
dec
push
cmp
pushl
leave
in
sub
xor
insl
dec
pop
cmpsl
mov
mov
inc
mov
sbb
std
add
in
rorl
sbb
mov
adc
dec
mov
sbb
mov
push
outsl
sbb
lret
adc
inc
pushf
add
hlt
cld
mov
dec
pop
jge
adc
mov
insl
pop
ds
xchg
and
out
xor
fdivs
cmp
sarl
add
inc
loop
cmpsl
push
adc
cs
sub
stos
mov
das
inc
movsb
lahf
push
dec
fs
push
les
cmp
movd
or
sbb
cmp
ljmp
in
jl
inc
repz
xlat
inc
jecxz
push
jmp
jmp
inc
insl
out
stos
xchg
out
es
sub
outsl
fldt
and
in
sub
mov
pop
xchg
in
ret
or
xor
xor
push
inc
jns
cmc
shrl
aad
cwtl
xchg
pop
mov
mov
iret
xor
cmpsl
add
popa
mov
mov
aam
cmc
sub
jecxz
inc
rol
hlt
iret
push
fdivs
loope
jg
test
ret
filds
fcmovne
shr
das
mov
lds
mov
adc
sbb
pop
adc
push
iret
mov
cwtl
scas
test
sub
test
xchg
testl
pusha
rorl
jle
shll
enter
mov
dec
imul
pop
in
pop
cs
out
mov
movsl
ret
add
mov
push
jnp
movntq
out
lcall
out
xchg
dec
xchg
push
std
daa
jno
int
dec
xor
mov
xor
inc
fdivl
lods
xchg
movsl
dec
mov
fstpt
sub
in
mov
in
js
sbb
lods
lahf
mov
mov
iret
lcall
xchg
push
sti
clc
mov
or
outsb
add
into
fwait
inc
adc
cmpsb
push
mov
xlat
lds
insl
adc
cmp
icebp
not
aaa
insl
mov
in
or
fldl
push
movsb
pop
mov
mov
jl
fs
sbb
mov
hlt
mov
add
mov
mov
add
xchg
gs
xor
bound
sbb
xlat
sub
mov
adc
xchg
daa
cmp
imul
mov
mov
les
fldt
jg
pusha
cmp
into
andl
insl
inc
inc
mov
inc
imul
fnsave
clc
jno
adc
fs
cmp
pop
popf
pop
xchg
adc
push
sub
mov
pop
pop
sti
jp
xchg
mov
mov
adc
xorl
mov
push
jle
xchg
mov
in
adc
clc
and
ja
mov
or
push
pop
aas
jmp
mov
fcomps
pop
xchg
mov
jo
jmp
out
cmpsl
fstsw
jg
movsb
pop
outsl
call
and
test
xchg
int
or
pop
in
xor
adc
aam
ds
pop
outsl
ljmp
xor
dec
aaa
and
xchg
jae
js
mov
fsts
mov
rcr
arpl
inc
in
mov
mov
aam
shl
in
ret
into
aad
push
mov
push
jne
les
fwait
incb
dec
nop
stos
mov
sub
insb
push
push
xchg
pop
les
clc
jno
adc
call
dec
cmp
aad
xchg
int
mov
inc
cmp
xchg
std
sti
cmp
xchg
add
dec
fildl
lods
outsl
pushaw
int3
jnp
push
mov
cmp
pushf
mov
pop
add
push
daa
or
dec
and
push
pop
enter
sbb
sti
cltd
adc
sbb
sub
lret
dec
fimuls
cwtl
inc
push
dec
add
fidivs
push
insb
xor
jg
insl
aad
or
push
pop
ljmp
dec
adc
jg
inc
cmp
shll
in
stos
dec
mov
cmp
mov
adc
cmpsl
lea
repz
xor
divl
fucomip
test
and
call
adc
sbb
in
sar
add
imul
dec
or
jne
ret
or
aam
mov
lret
add
rcl
cmp
sub
mov
sarl
dec
xor
xor
xchg
push
lods
out
push
cs
les
loopne
and
xor
ljmp
mov
pop
pop
mov
sub
out
ds
push
clc
movsl
push
repz
aam
dec
inc
adc
test
dec
fdecstp
push
push
push
cmp
mov
xchg
xlat
jnp
lds
insb
js
les
push
push
or
cs
cld
js
stc
or
adc
adc
jb
xchg
and
insl
fwait
jbe
shlb
push
int
mov
pop
jge
icebp
add
ficompl
mov
out
mov
shl
mov
cmp
sti
jmp
mov
inc
shrb
and
sub
lods
pop
pop
xchg
inc
mov
pop
aad
ret
or
and
fstps
frstor
jnp
arpl
xor
sahf
cmp
xchg
inc
push
jnp
push
and
jns
mov
sub
mov
jns
mov
sbb
adc
sbb
insl
js
jmp
es
pop
dec
xchg
daa
fisubl
dec
xchg
fisubrl
insl
fcmovb
loopne
aad
jge
outsl
std
les
fisubrs
dec
sbb
cmp
icebp
pop
scas
aaa
insl
jl
das
incb
lcall
insl
loope
and
pusha
dec
or
fwait
and
fdivs
jle
xchg
adc
xchg
sarb
push
dec
xchg
daa
xor
jns
xchg
jp
ss
int
imul
insl
mov
lret
and
test
mov
ss
fcmove
pop
shlb
subb
mov
push
mov
inc
cli
sub
xor
lea
sub
cmpl
rcr
pop
push
in
fs
pop
in
loop
aam
sub
or
sti
rol
dec
rorl
mov
inc
icebp
in
mov
dec
loop
adc
enter
inc
fs
mov
iret
cwtl
fdivs
repnz
and
pop
dec
mov
insb
dec
adc
cwtl
loopne
scas
xchg
xor
push
je
ja
jne
fstp
pop
mov
jbe
insl
and
jbe
sbb
ljmp
fstps
sarb
sub
ret
xor
pop
cmc
das
mov
loope
dec
leave
mov
es
mov
push
jo
call
xchg
mov
mov
sahf
mov
pop
sub
mov
sbb
icebp
mov
inc
faddl
xor
mov
add
subb
ja
cmp
aas
lods
pop
pop
out
mov
fxtract
loope
jmp
je
cmpsl
data16
mov
enter
ljmp
enter
jbe
push
jmp
cmpl
push
scas
std
xor
fidivrs
fisttps
add
sbbb
outsb
rcrb
lock
loop
sbb
loope
arpl
mov
cltd
out
fisubrs
pop
xor
sti
inc
cmpsb
mov
dec
dec
aas
add
add
xor
cmp
sbb
dec
dec
imul
jmp
rolb
inc
push
mov
orb
cmp
sub
adc
mov
adc
and
jmp
xchg
aas
test
stos
lret
inc
rclb
cli
jl
int
add
push
xchg
bound
lods
xchg
test
mov
sub
es
mov
and
addr16
push
mov
sbb
push
xchg
sbb
cmp
pop
xor
mov
imul
pushw
adc
adc
sbb
andb
into
or
adc
imul
push
ret
pop
fwait
and
scas
popa
push
jmp
imul
jmp
sahf
pop
adc
push
popf
lods
cmpsb
shll
int
incl
sbb
dec
push
mov
popa
dec
imul
fs
int3
popa
xor
push
adc
dec
mov
test
push
adc
in
stc
pop
or
cmp
pop
pop
cltd
cwtl
dec
xor
jb
xchg
jbe
sbb
fidivl
add
leave
jns
sub
stos
mov
sbb
bound
sbb
in
xor
enter
cltd
mov
xor
inc
pop
pop
and
jl
adc
push
pop
xor
push
or
push
cmpl
popf
lret
shlb
add
cmp
jns
adc
push
adc
in
mov
sbb
xor
xchg
test
mov
daa
lds
push
adc
out
mov
sbb
push
adc
and
lcall
out
cmp
xchg
orb
sbb
add
fisubl
cs
push
les
pop
xchg
repnz
jg
outsb
inc
xchg
in
pop
mov
je
fisttpl
and
add
sbb
xor
sub
aas
inc
repz
out
lock
mov
push
jle
xchg
mov
pushf
sti
adc
clc
and
inc
xchg
icebp
aad
adc
loopne
pop
xor
mov
ret
xchg
fisubl
and
ds
imul
loopne
mov
cmpsb
sub
cmc
insl
mov
xchg
or
jae
sbb
jp
repnz
inc
stos
push
fwait
pop
je
movsb
loopne
mov
sbb
out
push
repnz
jns,pt
add
mov
les
out
mov
sahf
mov
add
jae
adc
mov
or
or
imull
sti
rolb
popf
out
jmp
cli
sub
xor
lds
pop
outsl
fwait
das
sub
cwtl
push
mov
cmp
ret
loopne
dec
jbe
sbb
ds
movsb
cwtl
push
jnp
es
pop
cmp
xchg
lea
dec
xchg
fdivl
aas
orb
xchg
subb
xchg
cltd
ret
icebp
pop
es
mov
repnz
mov
push
push
or
mov
xchg
sub
ss
mov
aad
add
dec
xchg
scas
movsl
inc
and
xchg
and
xchg
out
cmc
push
faddp
jl
iret
sbb
insb
insb
sbb
shlb
cmp
mov
pop
push
mov
in
enter
int3
loopne
mov
and
dec
test
imul
cmpsb
mov
jecxz
xchg
mov
pop
mov
xor
or
fcom
or
dec
jg
cs
out
xor
cmc
mov
repz
adc
sbb
sub
mov
incl
mov
dec
jge
add
es
lods
add
dec
push
cmp
mov
pop
adc
aad
mov
pop
adc
jl
mov
ss
adc
outsb
dec
cs
dec
push
fisubs
mov
inc
sahf
jge
mov
mov
mov
push
ret
inc
bound
push
or
in
jmp
xchg
test
pop
adc
popa
push
arpl
aaa
popa
aam
and
cltd
jns
cmp
dec
sbb
insl
jmp
cmp
out
std
jmp
mov
cmp
inc
pop
mov
pushf
mov
enter
lahf
and
cmp
cltd
xor
xchg
mov
sahf
clc
out
arpl
mov
popf
dec
xor
les
cmc
jmp
jmp
mov
rcrb
pop
clc
mov
popf
hlt
test
sbb
dec
push
jmp
mov
sbb
cs
pop
mov
mov
dec
mov
clc
fistps
jecxz
ljmp
and
xchg
ss
es
insl
fwait
std
jecxz
es
sbb
push
mov
mov
std
fwait
and
fsubs
cs
inc
jmp
add
pop
cs
xorl
fbstp
out
sahf
dec
cmp
dec
ss
clc
xchg
je
cltd
insl
jbe
adc
pop
enter
xlat
sarb
nop
es
insl
stos
fwait
ljmp
repz
jl
aad
xor
aad
inc
outsb
pop
in
pop
pop
outsb
push
imull
in
call
mov
pop
push
push
xor
out
sbb
xchg
mov
dec
out
adc
mov
inc
xlat
ficompl
jns
or
adc
fnstsw
sub
insl
sete
inc
ljmp
xchg
loopne
mov
sbb
imul
popa
ret
fists
int
and
add
mov
mov
out
adc
pop
mov
nop
and
xor
or
out
cmp
xchg
and
adc
arpl
daa
cs
xchg
lods
mov
insb
cmp
jmp
cmp
gs
inc
jl
xchg
and
sub
loopne
or
fwait
dec
neg
dec
mov
mov
in
push
movsb
dec
loopne
cmpsb
test
popf
cmp
lret
push
or
push
mov
repz
push
mull
adc
pop
bnd
popa
inc
push
mov
jbe
sbb
insl
addr16
lods
fiaddl
fs
sbb
insl
jecxz
and
xor
ret
xchg
xor
ss
jne
les
xor
push
jg
enter
cmpsl
loope
cmpsb
pop
jl
in
dec
inc
jg
mov
rcr
aad
hlt
scas
ss
adc
aad
or
loopne
out
daa
out
inc
outsb
or
cmp
jle
mov
xlat
xor
stos
inc
dec
cmp
add
outsb
push
hlt
mov
lret
adc
adc
xchg
push
inc
leave
push
les
xor
loop
jo
out
push
loopne
aaa
mov
dec
fiaddl
in
mov
xchg
in
insb
or
jmp
xchg
js
es
mov
mov
push
lret
push
ja
xchg
fnsave
repnz
xchg
popa
mov
pop
xchg
add
adc
pop
jmp
mov
mov
fwait
in
andb
data16
sbb
jb
push
adcb
in
push
das
dec
push
std
xor
pop
roll
cli
jl
xor
aam
mov
lcall
mov
dec
xchg
dec
outsb
mov
pop
and
ds
incl
dec
fwait
mov
adc
mov
shll
dec
ret
lret
shl
lods
jo
xlat
sarb
ljmp
sarb
dec
sbb
add
aad
xchg
mov
iret
pop
bound
outsl
popf
inc
in
dec
call
fidivl
jae
push
xchg
dec
inc
lock
mov
adc
int
cmp
leave
push
xchg
mov
lret
repz
push
sbb
ss
scas
cmpsl
pop
dec
cmpsl
xor
popa
or
lcall
push
push
cli
xor
movb
or
dec
xchg
push
decl
cli
xchg
test
cmpsb
loope
sub
push
lock
es
cld
aas
in
push
jns
aam
sub
insl
inc
leave
and
and
dec
push
xor
loop
outsb
sub
sarb
xorl
mov
cltd
push
xchg
out
lret
inc
repz
gs
mov
cltd
adc
dec
shrl
mov
mov
mov
xchg
adc
pop
inc
std
push
adc
push
inc
int3
fptan
inc
xchg
pop
je
add
es
jnp
mov
imul
inc
push
add
outsb
insl
cmp
sub
repz
sub
xchg
sub
dec
sbb
xor
xor
mov
cwtl
stc
test
push
aam
enter
fmuls
scas
mov
ret
xchg
sbb
sbb
mov
jno
scas
leave
cltd
std
loopne
movsl
xor
xor
aas
jns
sub
push
scas
jnp,pt
and
sub
adc
test
pop
outsb
adc
inc
jecxz
repz
jg
inc
inc
xchg
cmp
repnz
leave
sarb
cmpl
xchg
add
and
out
das
movsb
insl
cmp
push
fwait
mov
push
sti
mov
lea
in
insb
pusha
and
mov
pop
add
scas
sbb
in
pop
cmp
popf
dec
pusha
sub
xor
addr16
push
mov
mov
push
cmp
push
icebp
imul
mov
xchg
fildll
add
and
or
xchg
lods
pop
bound
sbb
outsb
fcmove
fcmovbe
mov
jp
leave
xchg
pop
loopne
jmp
push
mov
inc
sti
cmpsl
lahf
insl
push
outsl
xchg
inc
aam
xchg
mov
and
pop
jo
or
lret
or
icebp
mov
jge
xchg
sub
cltd
mov
add
or
mov
in
jo
pop
adc
ss
xchg
pop
rolb
faddl
ret
xchg
lds
mov
loopne
cmpsl
repnz
inc
mov
mov
xchg
sarl
dec
into
or
jns
rcl
gs
ja
int3
fwait
xor
test
aad
scas
mov
push
xchg
lret
xchg
das
pop
mov
cltd
ss
xchg
cmp
out
lock
pop
outsl
inc
fdiv
mov
repz
dec
loopne
jl
out
test
fistpll
and
fistl
scas
adc
out
idivl
cltd
mov
adc
frndint
mov
xor
add
jecxz
fsts
push
cmc
inc
adc
jbe
push
test
dec
iret
test
stc
xorl
adc
push
andl
lret
lahf
cli
pop
loope
stos
sahf
lret
xor
push
mov
push
pop
mov
jl
sbb
das
mov
push
test
add
in
movsb
push
push
xor
pop
cwtl
jnp
inc
push
push
xchg
push
mov
pop
mov
sbb
fs
lahf
dec
imul
fs
imul
enter
in
xor
rorb
jl
fsubrl
fmull
les
arpl
leave
clc
aas
pop
leave
ret
pop
repz
or
stc
nop
lock
cmp
cmp
add
mov
jns
bound
loopne
jle
pop
jne
imul
cmp
mov
jne
lds
cmc
xor
dec
enter
lock
cmp
sar
es
sbbb
xchg
mov
and
int
jbe
mov
das
dec
call
jb
out
ds
or
gs
xor
cmp
xchg
inc
in
mov
mov
lret
xchg
ljmp
aas
xor
inc
xor
shll
stos
push
xchg
outsl
clc
push
push
add
data16
pop
shl
jecxz
int3
out
lds
mov
lahf
pop
xchg
rcr
sbb
lea
mov
xchg
rclb
mov
cld
subl
fadds
std
jmp
cmc
insl
pop
stc
test
test
sbbb
add
out
xor
test
bound
cmp
mov
push
push
fs
mov
loopne
dec
hlt
pop
jmp
cmp
dec
loopne
sub
xchg
pop
sub
mov
iret
or
rcrb
xor
stos
fldcw
mov
fstpt
sub
loopne
mov
in
aad
leave
pop
in
into
pop
and
f2xm1
xor
mov
xor
mov
mov
xlat
fstpl
push
adc
int
cmc
xor
xchg
xor
lcall
jne
mov
mov
push
xlat
fmuls
and
aas
insl
push
incb
xchg
aam
enter
mov
mov
inc
in
gs
push
fcoms
push
std
popf
dec
into
add
fidivrl
jnp
adc
mov
xchg
sub
push
mov
fsub
aaa
dec
ja
ret
xchg
out
mov
std
xor
ds
out
insl
pop
jbe
lods
xchg
ljmp
test
pop
imul
loop
push
lods
sahf
pop
adc
nop
std
cli
lods
sahf
pop
adc
sahf
lock
fldenv
push
jnp
push
xchg
cwtl
incl
xor
pop
jo
pop
adc
adc
mov
dec
add
push
fisubs
push
in
dec
in
pusha
call
add
xchg
mov
es
sti
mov
mov
ret
rcrb
bound
xchg
and
adc
adc
out
adc
shlb
push
jp
mov
cmp
rep
loop
mov
dec
xchg
das
mov
adc
mov
push
adc
push
fnstcw
add
shrl
push
and
jns
insl
subb
lock
popa
stos
incl
gs
cmpsl
sub
hlt
adc
adc
mov
pop
xor
ficomps
jp,pt
xchg
jg
dec
pop
push
dec
sub
sbb
into
xchg
pop
fs
dec
and
xchg
inc
cmp
arpl
pop
loope
sbb
mov
orl
insb
fcom
push
out
mov
sbb
or
rcll
cmp
xor
hlt
jb
fyl2xp1
jne
lods
mov
xchg
and
cbtw
xor
or
clc
aam
imul
add
mov
mov
add
mov
dec
arpl
cwtl
and
cmc
push
jae
adc
pusha
ret
dec
jae
adc
je
sbb
adc
pop
dec
and
fistpll
push
add
insl
rcr
cmpsl
xlat
and
adc
out
inc
jae
adc
daa
pop
mov
in
sarb
dec
cwtl
cs
cltd
in
nop
ss
lock
mov
adc
push
cmp
push
int
xor
push
adc
out
aam
push
jge
in
xchg
pop
pop
cmpl
cltd
jp
push
fidivl
call
mov
cli
incl
repnz
adc
cmp
bound
pop
jo
dec
adc
dec
or
mov
cltd
inc
and
and
or
cli
push
mov
pushf
inc
test
out
mov
call
adc
push
xor
andl
mov
aam
or
and
jbe
mov
jne
add
outsb
shll
popf
xor
sbb
ret
dec
rolb
out
dec
or
cmpsl
sbb
mov
test
push
adc
and
or
jne
jo
pop
adc
outsb
pop
jle
outsb
popa
mov
or
mov
inc
mov
cmpsb
cmc
es
mov
mov
gs
mov
cmp
scas
jl
pop
sbb
mov
mov
adc
push
jae
fmuls
dec
inc
loop
pop
push
adc
sub
lahf
call
rolb
sub
fmuls
mov
scas
lock
xor
out
shl
or
xchg
loop
xor
scas
xchg
es
pop
push
insb
fdivs
xchg
ja
mov
movsb
add
and
inc
xor
mov
ret
mov
ja
ficompl
jg
mov
xchg
out
loopne,pn
inc
push
or
out
scas
push
popa
ret
add
inc
inc
jne
xlat
int
stos
pop
pop
enter
and
shll
mov
popf
dec
cmp
repz
sarb
xchg
or
dec
pop
insb
xor
cs
add
test
pop
sahf
cmp
cld
pushf
les
rol
push
xchg
or
and
dec
xchg
cmp
cmp
push
cltd
mov
sar
mov
imul
movsb
cmp
push
cmc
insl
dec
or
ret
les
sar
push
push
inc
aam
xor
dec
stos
pop
call
mov
cmp
or
xor
test
cs
mov
add
scas
jmp
fdivs
jmp
and
mov
adc
sub
movsb
dec
fwait
lahf
xchg
fs
xchg
outsb
pop
mov
jecxz
push
sub
add
adc
lock
lods
or
out
aas
sbb
xor
xchg
jecxz
mov
das
xor
repnz
xchg
pop
loopne
call
fdivs
dec
gs
mov
xor
shrb
aad
inc
add
out
and
nop
mov
dec
sbb
mov
jns,pt
xchg
add
mov
jno
mov
into
mov
cmp
pop
enter
js
repnz
xchg
fstpt
sahf
fcoml
or
outsb
aam
pop
ds
out
xchg
and
adc
sbb
inc
les
cmp
pop
imul
fsub
cmp
orl
mov
or
stos
cltd
mov
movsb
or
or
arpl
mov
jmp
inc
inc
jno
push
mov
jno
into
aad
pushf
repz
sub
lcall
stos
add
and
pop
in
insb
loope
or
jbe
cmp
nop
mov
inc
es
movsl
or
fwait
in
fdivl
clc
push
jnp
pop
dec
fsub
mov
movsb
sub
mov
cmp
pop
mov
fwait
jno
jle
cli
addr16
mov
lcall
dec
sbb
in
ljmp
inc
pop
dec
jl
xchg
pop
adc
mov
in
out
lahf
push
sbb
leave
sti
bound
cmp
mov
inc
ljmp
adc
push
in
mov
jle
xchg
mov
fiaddl
imul
xchg
ret
adc
fisubl
cmp
pop
call
je
inc
cltd
dec
js
popf
pop
jae
adc
sub
dec
cmpsl
xor
test
xor
xor
add
mov
push
add
push
ljmp
flds
xchg
adc
pop
lret
and
int
jae
and
pop
bound
pop
cmp
pop
sub
add
ja
sbb
sbb
xchg
and
lahf
lods
in
add
aad
lahf
insb
shr
icebp
sub
inc
xor
test
rorl
xchg
out
push
lea
iret
aas
sahf
sti
pop
test
jae
adc
push
cmpsb
stos
into
pop
dec
xor
outsb
sti
in
jo
pusha
add
inc
xchg
mov
arpl
divl
pop
repnz
sub
fsubrp
jno
push
leave
inc
jg
cmp
sahf
mov
scas
sahf
xor
adc
xor
inc
insb
inc
imul
shlb
leave
out
daa
out
mov
pop
aas
ja
sahf
inc
inc
push
inc
inc
das
mov
call
out
jb
jge
push
fcom
xchg
fstpt
sub
sahf
mov
adcl
jns
stc
mov
xchg
xlat
inc
or
xchg
and
pop
push
std
std
sub
clc
and
mov
outsl
nopl
shll
jae
or
insb
fdivs
sbb
mov
clc
pop
push
int
xor
adc
lea
adc
xchg
es
ss
lods
push
addr16
adcb
pop
mov
into
jns
hlt
or
cmpsb
lea
repz
pop
mov
pop
and
dec
xchg
push
xor
xchg
jb
inc
push
and
shlb
incl
or
lods
pop
xor
out
ss
lret
mov
inc
mov
fnstenv
mov
js
icebp
lods
jp
and
jle
push
popf
repz
fstps
fnstenv
dec
mov
mov
cmp
or
dec
mov
xchg
sub
sbb
daa
dec
sahf
inc
inc
push
inc
cmp
dec
aas
sub
mov
out
int
outsb
inc
lcall
and
push
sti
lds
or
out
fwait
and
xlat
mov
lods
cmpsb
inc
or
mov
dec
out
mov
inc
mov
cmp
repz
mov
leave
xchg
and
leave
test
jnp
lcall
call
loopne
xor
out
loope
insl
fidivl
idiv
xor
adc
add
fstps
data16
mov
xor
les
lock
xor
jl
fidivs
push
cmpsl
ss
daa
rcll
mov
dec
pop
dec
mov
push
push
bndldx
jne
popf
cs
fisttps
test
jecxz
add
inc
xchg
hlt
loope
call
xchg
xor
inc
addl
hlt
push
cld
mov
push
mov
ret
rclb
es
add
dec
add
mov
dec
iret
jmp
fistl
and
sub
imul
jb
push
test
xchg
push
jnp
pushf
scas
sbb
pop
sbb
jo
int
repz
push
in
and
sbb
mov
mov
push
int3
sbb
adc
xchg
movsl
int
cmp
nop
mov
fldcw
mov
pop
sub
sub
arpl
cltd
mov
push
adc
ljmp
fbstp
incb
dec
mov
cmpsl
push
sub
mov
adc
adc
sarb
mov
add
inc
fsubr
xchg
pop
in
cmp
or
xor
inc
in
test
out
dec
imul
inc
movsb
addr16
or
std
mov
sbb
or
xchg
push
int3
inc
std
lret
fs
std
pop
or
cmp
pop
std
xchg
lret
pop
dec
push
popa
dec
shrb
paddsw
outsl
xchg
mov
jne
jmp
inc
test
pop
add
push
xchg
xor
mov
outsb
lret
xchg
ljmp
lahf
mov
movups
and
and
jg
xchg
pop
sub
pop
xchg
sub
jae
loop
dec
pop
xorb
test
decl
aas
cmp
adcl
sub
repnz
push
sub
push
cld
mov
pop
arpl
es
adc
ljmp
es
ja
mov
sub
ret
cmpsl
lock
mov
lds
adc
movsb
outsl
mov
fadds
ret
adc
bound
cmp
pop
js
ds
dec
xchg
push
sti
lods
pop
cmc
mov
fisubrl
fcmovu
add
repz
lods
add
fbstp
adc
lea
fs
jle
sbb
movsb
xchg
lock
push
and
sahf
lods
cmp
aas
sbb
jp
dec
fs
cld
in
adc
adc
mov
push
jnp
jbe
sahf
pop
sbb
loopne
push
push
or
imul
jg
inc
scas
or
cmp
mov
test
in
xor
jl
push
adc
pop
cwtl
jb
adc
cmc
dec
xchg
push
repz
or
ss
scas
push
arpl
aaa
mov
xor
jne
mov
lock
iret
xchg
jae
loop
in
xchg
in
xor
adc
push
push
mov
xchg
adc
mov
inc
scas
lock
and
sbb
enter
mov
add
adc
and
xchg
mov
jl
fs
pop
push
inc
push
or
xor
js
mov
push
mov
add
adc
test
leave
xchg
cmpsb
cmpsl
roll
sbb
adc
inc
fstl
call
xor
popf
push
icebp
jnp
xor
push
adc
cmp
mov
filds
pop
sahf
dec
mov
adc
ss
cli
sub
jb
data16
or
xchg
jo
sbb
xchg
or
shl
enter
aaa
xor
and
movsb
dec
push
scas
mov
rcr
push
fimull
mov
sub
movntps
cmp
nop
dec
ret
inc
imul
sbb
es
mov
xor
scas
pop
mov
out
push
xchg
decl
pop
ljmp
call
or
push
cmp
sub
aam
push
jp
outsb
into
xchg
and
lcall
xor
lods
xchg
cmp
pushf
sub
or
mov
je
int
mov
cmp
mov
xchg
mov
push
std
sbb
add
adc
mov
xor
fiadds
in
mov
lds
daa
jp
or
or
mov
inc
xchg
out
fadds
xchg
dec
dec
das
lcall
out
xor
imul
sub
adc
xchg
and
fcmovnbe
adc
jecxz
sahf
xor
push
jb
pop
shlb
loop
mov
cmpsl
push
rcrb
in
or
sub
insl
cwtl
movsl
inc
popf
scas
mov
dec
jge
cmc
xor
iret
fiadds
xchg
dec
jge
or
mov
test
adc
push
inc
or
incb
test
pop
in
pop
inc
scas
scas
xor
push
mov
addl
shlb
data16
popa
xlat
xlat
mov
je
jl
xor
rcr
mov
sub
xlat
xor
ljmp
cmpsb
push
ficoml
orb
dec
pop
adc
push
mov
lret
push
popf
pop
lahf
cwtl
scas
ret
loop
adc
dec
pop
or
fsubr
clc
shlb
outsl
mov
jg
stos
xchg
data16
dec
or
in
repz
jle
xchg
je
push
inc
test
loopne
add
data16
stc
pop
inc
clc
lcall
push
sub
pop
pop
jo
outsl
cwtl
scas
es
push
in
pop
add
sbbb
popa
xor
int3
stc
mov
fbstp
fdivp
es
shr
push
add
lret
inc
fwait
clc
cmova
xor
ss
fdivs
push
sti
mov
dec
test
les
mov
push
aaa
aas
sti
mov
out
std
cmp
fcoms
lret
and
jno
dec
in
into
fwait
ss
ffree
shrl
fstpt
mov
in
cmp
dec
xchg
and
push
xchg
sahf
mov
pop
mov
adc
pop
repz
pop
mov
mov
daa
lds
inc
mov
push
sub
scas
movb
fstpt
lret
or
xor
dec
ljmp
outsb
pop
mov
pop
dec
es
sahf
dec
rolb
je
fucomip
sbb
jne
jno
mov
roll
js
mov
cmp
push
adc
mov
mov
adc
ds
cmpsb
dec
xchg
pop
jb
xor
ljmp
inc
fldt
je
js
lds
movsl
dec
xchg
pop
jb
mov
or
outsb
inc
lea
fs
sbb
mov
push
xchg
cmpsb
mov
xchg
sub
dec
aas
sub
cmp
sub
mov
dec
imul
xor
icebp
inc
mov
xchg
jp
jmp
inc
in
push
in
les
adc
jle
int
push
lea
insl
loope
and
cmp
pushf
repnz
mov
sub
pop
lret
outsb
sub
jg
out
fsubrl
les
outsb
mov
add
leave
pop
mov
stos
imul
push
lock
shl
outsl
cmp
rcr
push
insl
jb
fwait
mov
das
cmp
insb
pop
shll
xor
into
xchg
data16
and
jae
addr16
mov
xchg
xorb
dec
push
and
sarl
lods
mov
gs
adc
jns
mov
rcl
stc
jb
call
pop
out
push
loope
orb
call
push
lea
add
adc
sbb
xchg
cmp
jo
pop
adc
pop
pusha
ljmp
mov
bound
mov
lahf
aam
ret
and
push
lea
outsl
imulb
and
push
pop
test
pop
xchg
daa
push
adc
xbegin
gs
and
mov
mov
cld
push
in
push
xlat
and
loop
dec
push
and
hlt
adc
adc
jmp
sub
adc
mov
nop
sub
adc
inc
adc
test
and
sub
adc
jae
ss
int3
xchg
or
jo
push
adc
sbbb
mov
cwtl
xchg
stos
sbbb
pop
adc
xchg
xor
fs
adc
in
jno
add
inc
mov
add
movsb
mov
jmp
cmpsl
mov
mov
clc
sbb
mov
aaa
icebp
stc
jb
mov
loopne
packuswb
xchg
std
and
xorb
pop
jbe
scas
and
in
cmp
xchg
push
pop
inc
enter
loope
sbb
cwtl
ret
or
pop
sbb
testl
adc
push
aam
xchg
jge
gs
lret
test
cmp
inc
sbb
dec
popf
icebp
sub
enter
mov
aad
mov
xchg
push
mov
pop
and
dec
push
rol
adc
adc
imul
mov
cmp
fildl
inc
test
mov
cwtl
add
push
adc
mov
sahf
pop
adc
mov
or
mov
popf
clc
add
push
nop
xor
inc
cmpsb
fldenv
jne
adc
mov
mov
outsb
popf
push
xlat
insl
les
xor
iret
mov
stos
rclb
xchg
sub
add
dec
out
sbb
mov
ss
test
repz
sahf
pop
adc
lret
xchg
mov
or
or
jp
inc
imul
mov
and
adc
adc
insl
mov
loope
fs
mov
out
sub
shll
int
mov
dec
xor
call
xor
test
mov
mov
insb
dec
xor
xchg
sub
push
xor
push
adc
filds
xchg
outsb
movsb
sbb
test
addb
mov
lea
and
pop
push
roll
leave
clc
fidivl
or
add
push
adc
rcrb
lahf
loop
sahf
sbb
aaa
out
xchg
pop
aas
pop
jmp
mov
inc
pop
cmp
insb
mov
in
mov
stos
sub
in
lcall
sahf
pop
adc
pop
inc
pop
cmp
dec
pop
mov
sbb
adc
adc
ljmp
xor
rclb
pop
outsl
jmp
sahf
dec
lret
in
icebp
aas
je
xchg
jnp
push
je
icebp
lea
lods
xchg
jne
cmp
cli
dec
xchg
arpl
mov
or
iret
adc
pop
pop
or
sbb
pop
sti
scas
mov
lcall
inc
add
push
movsb
sub
int
inc
xlat
shll
into
jbe
push
mov
cwtl
dec
into
sbb
push
adc
aad
jns
mov
fistpll
in
mov
fstpt
add
or
and
das
pop
xor
movsl
inc
add
outsl
rol
sbbb
push
cld
xchg
popf
flds
repz
and
xchg
cs
mov
adc
pop
fs
outsl
fdivl
mov
dec
hlt
in
outsb
inc
xchg
cmpsl
mov
hlt
fimuls
std
pop
mov
xor
movsl
and
in
int
pandn
addr16
push
pushw
mov
out
cltd
lds
std
scas
mov
loopne
mov
lcall
adc
inc
sbb
push
ljmp
and
pusha
movsl
and
and
notl
dec
sub
sbb
jb
pop
cld
repnz
out
aam
test
stc
daa
test
lret
or
mov
mov
jne
fwait
push
pushf
and
bound
or
mov
gs
and
inc
fcmovnb
cmpsl
pushf
dec
movsl
imul
test
popa
add
cltd
ds
aad
popa
adcl
dec
rclb
addr16
pop
pop
inc
cmpsl
negb
sub
xor
out
lods
mov
fimuls
cmp
pop
js
mov
cmpsb
insl
out
sbb
popa
mov
and
xchg
movsb
cwtl
test
xor
inc
jae
fldcw
loope
ret
lds
scas
xor
daa
std
insb
movl
insb
sbb
pop
ret
add
push
jnp
dec
call
or
inc
xchg
stos
mov
scas
and
mov
lahf
int3
cwtl
pop
imul
sahf
fisttpll
lds
lea
push
xor
popa
mov
int
mov
add
and
mov
and
mov
jl
inc
imul
cs
cmove
mov
inc
or
pusha
or
push
or
jecxz
aad
roll
iret
cwtl
mull
adc
aad
dec
mov
call
add
xor
push
aas
jmp
test
outsl
fs
inc
mov
jae
adc
loopne
cli
cmpsb
dec
out
stos
lods
cmp
imul
pop
lea
mov
clc
jle
sbb
stos
xchg
jg
mov
repz
inc
mov
fcomps
lods
xor
cmc
aad
stc
iret
fwait
ss
adc
cli
aaa
testb
ficomps
je
fdivs
mov
int
lahf
sbb
fnstcw
mov
xchg
xor
and
mov
mov
insl
sub
sbbl
and
aaa
mov
xor
sahf
movsl
sar
popa
push
jl
clc
jne
into
adc
jb
enter
push
daa
popf
aas
add
loopne
mov
pushf
scas
mov
stos
rorl
mov
les
mov
arpl
repnz
int
jnp
insl
cs
pop
daa
nop
daa
xor
mov
mov
js
enter
sti
jb
stc
lods
fdivs
test
ret
or
xor
sbb
fisubrs
mov
out
addr16
push
cs
out
xor
mov
xor
lret
cmpsb
sub
jno
or
mov
loopne
sbb
pop
outsb
xchg
or
leave
xchg
mov
cli
jge
sub
push
fs
and
cmp
dec
cmp
gs
int3
out
xchg
movsb
sbb
int3
loopne
fstps
sub
cmp
cmp
adc
out
sbb
fdivrl
push
outsl
cs
push
cmpsb
mov
sbb
into
inc
shlb
push
cmc
pop
int3
es
movsb
mov
outsl
dec
or
ficoml
insb
ficoml
into
cmpsb
and
pop
cmp
andb
xchg
pusha
pop
dec
sbb
out
mov
add
ljmp
xor
sub
mov
pop
adc
inc
rorb
in
inc
fidivrl
mov
rcl
jns
xor
into
and
mov
in
fdivl
xor
xchg
inc
jmp
vpaddq
lds
scas
ficomps
in
mov
pop
shrb
xchg
mov
imul
loopne
mov
bound
cmp
mov
mov
adc
in
rorb
mov
dec
ljmp
dec
in
xor
mov
fstpt
imull
jae
mov
movsb
lea
fwait
fwait
imul
cmp
add
mov
mov
pop
imul
sbb
mov
fiaddl
inc
adc
divl
stos
lds
fdivrs
das
mov
addr16
das
adc
idivb
outsb
ret
jecxz
lret
gs
clc
sub
test
mov
movsb
mov
lret
mov
out
rcrl
jl
lret
xchg
sub
sbb
gs
inc
lahf
inc
lock
lock
pushf
fisubrl
push
int3
mov
pop
cmpsb
dec
outsl
scas
jb
in
mov
push
cmp
out
mov
cmp
into
std
jno
or
pushf
xorb
scas
pop
sub
call
into
adc
pushl
jp
fwait
decb
push
inc
outsb
fisttpll
adc
push
and
aam
push
aam
shlb
cmp
data16
mov
popf
cmpsb
movsb
jnp
call
outsl
xchg
dec
lock
push
lods
rclb
xorl
sbb
aam
fmull
mov
outsb
pop
stc
or
imul
fyl2x
iret
mov
je
jl
sbb
js
sbb
out
test
repnz
pop
mov
adc
sbb
pop
ret
mov
cmpsl
iret
orl
push
movsl
lret
and
push
in
ss
enter
pop
repz
cmp
sbb
mov
cmp
sarb
cld
dec
add
fstp
mov
loopne
loope
sbb
cmp
mov
or
loope
xchg
in
lods
das
inc
xor
sahf
mov
lcall
or
mov
inc
xlat
int
lret
popf
cmpsb
out
dec
ss
inc
or
fdivl
mov
outsl
cmp
fdivs
test
repz
mov
xchg
jg
jb
in
xor
es
fdivs
xor
xchg
daa
dec
ljmp
sbb
sbb
mov
inc
and
movsb
dec
out
mov
xchg
dec
sahf
testl
leave
sbb
sbb
mov
inc
ffreep
add
movsb
dec
out
aas
sub
pop
insl
cmp
xchg
jg
inc
rol
xlat
mov
gs
mov
xor
xor
loope
fwait
inc
shlb
rcr
xlat
mov
gs
push
shr
popa
mov
cmp
xchg
jb
inc
mov
inc
repnz
inc
xlat
leave
cmp
insb
pop
aas
sub
pop
shlb
sahf
dec
or
aad
fwait
lods
mov
xchg
inc
fdivrl
loopne
push
or
lods
fistpll
sub
pop
call
jb
inc
rclb
js
gs
mov
xor
xor
loope
fwait
inc
shlb
rcr
mov
fs
and
cwtl
fwait
xor
sqrtps
cmp
dec
movsb
rcl
ret
fs
ljmp
dec
xchg
push
cld
pushf
xchg
add
sbb
inc
xor
sub
mov
pop
sub
push
in
inc
mov
cmp
or
mov
into
xchg
mov
das
push
mov
call
jbe
loope
aad
push
loop
sbb
mov
cmp
hlt
xchg
adc
fs
dec
or
cmp
cmp
sbbl
push
inc
mov
mov
nop
sub
fdivs
icebp
rolb
enter
jecxz
push
pop
hlt
stos
arpl
cltd
and
mov
mov
sub
adc
fimuls
in
in
lds
pop
xor
mov
les
mov
sbb
lret
adc
int
in
popf
xor
insb
mov
imul
jne
int3
jbe
lahf
and
xchg
mov
jb
iret
sbb
adc
into
scas
test
cmp
data16
ret
sahf
jg
mov
cld
inc
pop
dec
jno
mov
pusha
imul
xchg
and
mov
aaa
inc
xchg
sbb
out
sti
in
push
push
xchg
dec
lods
adc
pop
add
push
lods
je
mov
xor
dec
xor
sub
out
dec
lret
dec
cmpsb
cmp
mov
sub
data16
out
mov
sub
into
and
push
xchg
sahf
fwait
mov
out
jmp
lret
outsb
adc
clc
sub
icebp
dec
add
sub
mov
mov
test
sbb
xor
stos
out
or
and
lahf
call
aam
xor
push
mov
add
les
fstp
enter
ss
jb
sub
roll
lcall
es
data16
push
mov
addb
jae
je
roll
xchg
lock
sarb
shll
enter
negl
pop
insl
iret
cmp
push
aas
and
loopne
mov
xor
sub
in
int
inc
shlb
rcr
mov
and
es
cmp
gs
ret
in
notb
xchg
movsb
adc
daa
leave
adc
andl
dec
xchg
daa
cmp
rorl
or
ret
or
add
jo
cmp
test
gs
shl
nop
jbe
int
arpl
bound
inc
andl
aas
sub
pop
or
jg
inc
rol
xlat
mov
gs
push
shr
gs
iret
jo
lds
repz
inc
insb
lahf
jp
mov
imul
fisubrl
cmp
lret
repnz
mov
movsb
out
add
and
and
lcall
out
mov
sahf
mov
rep
cmp
and
shlb
xor
aad
push
aas
jne
repz
jecxz
imul
js
outsl
mov
add
adc
dec
add
inc
dec
add
add
adc
dec
add
mov
dec
add
pop
dec
add
orl
fisttps
adc
dec
add
fisttps
adc
dec
add
orl
adc
add
jbe
add
pop
dec
add
fisttps
adc
dec
add
xchg
dec
add
mov
add
loop
add
sbb
add
add
aas
dec
add
bound
loop
add
orb
mov
rorl
loop
add
sub
add
leave
arpl
stos
inc
loope
mov
sub
popf
in
out
test
or
inc
addr16
xor
insb
cmp
pop
pop
jl
rcrl
dec
insl
inc
xchg
scas
mov
ds
outsb
mov
shll
pop
in
lods
add
insl
mov
into
cwtl
inc
dec
mov
mov
es
popf
pop
jl
fs
xchg
and
pop
mov
push
mov
xchg
rolb
push
hlt
in
andl
loop
mov
push
push
dec
push
ret
fildll
mov
push
pop
enter
inc
push
aam
adc
inc
test
push
sub
addr16
lods
nop
je
test
shlb
movsl
or
and
fucomip
fiaddl
dec
pop
sbb
popf
popf
jmp
stc
int3
xor
push
sar
arpl
push
add
aam
pop
test
leave
push
imul
jge
rclb
insb
push
imul
mov
mov
mov
outsb
ja
sti
inc
scas
cmp
aad
stos
and
pop
fcompl
cmp
aas
rol
and
jns
jg
daa
xchg
imul
imul
mov
dec
inc
lahf
adc
int
jecxz
add
je
push
inc
push
aaa
imul
mov
shll
mov
dec
mov
or
cli
adc
mov
cltd
aaa
insb
inc
xor
ljmp
push
int3
fstpt
jge
clc
int
pusha
push
push
sub
jb
add
push
cmp
jmp
test
or
pop
push
aaa
mov
lock
adc
stos
sbb
xchg
pushf
repnz
mov
fistl
stos
les
sub
inc
or
sub
je
sti
push
out
fldl
adc
sub
add
adc
out
sbb
arpl
arpl
pop
cld
int
fstpl
enter
mov
mov
pop
mov
leave
cltd
push
mov
jno
loopne
adc
adc
repz
lcall
subb
xchg
mov
ljmp
aas
insl
fcmove
push
push
adc
repnz
xchg
sub
cmpsl
cmp
adc
cmp
dec
sbb
lods
or
or
or
arpl
xchg
lods
dec
ljmp
ss
scas
or
jp
leave
jb
popf
sub
jbe
fidivs
cmp
cld
xchg
cld
jmp
data16
mov
xor
mov
add
pop
push
jae
dec
lods
sahf
mov
gs
sub
popa
mov
ljmp
dec
push
pop
dec
adc
mov
fwait
pop
jle
ds
stos
dec
xchg
mov
push
fsub
call
mov
leave
sbb
adc
push
push
inc
iret
mov
fscale
repz
out
pop
and
repnz
popf
fwait
ds
les
xor
insl
or
push
out
cmp
lret
xchg
dec
push
mov
test
pop
ss
es
repnz
insb
pop
js
sub
fadds
lods
inc
lcall
lock
test
adc
mov
mov
mov
pop
leave
sbb
ds
lods
xchg
inc
xchg
mov
inc
cmp
andl
dec
xchg
pop
jo
xchg
ret
rcrb
mov
sbb
xor
pop
push
xchg
pop
ret
jle
xor
adc
dec
movsb
out
push
xor
js
rol
xor
cmp
out
xor
aaa
test
cmpsb
cmp
cmpsb
sbb
sti
gs
lods
pop
in
test
ljmp
sbb
das
aam
nop
push
xor
test
jmp
enter
nop
xor
test
cli
mov
bound
xor
sbb
fs
sahf
and
pop
and
add
mov
add
mov
push
icebp
mov
dec
stos
inc
popf
mov
xchg
and
in
jmp
inc
push
adc
fdiv
jb
fidivs
jp
icebp
or
dec
sub
scas
jle
in
pop
jecxz
mov
iret
mov
scas
mov
test
push
in
add
mov
mov
lods
out
mov
cwtl
pop
mov
mov
pusha
cmp
out
pop
mov
xor
icebp
xor
xchg
push
leave
ret
mov
mov
andb
push
stc
add
inc
push
fldt
xor
sub
mov
ret
xchg
jno
cmpsl
and
popf
cmpsb
add
sub
xor
xor
scas
andb
mov
dec
push
in
and
inc
shr
or
lret
and
push
sbb
xor
lahf
inc
lock
dec
xchg
scas
cmpsb
aad
lea
xor
pop
inc
js
inc
fisttpl
pop
sbb
or
dec
lea
sbb
das
stc
cwtl
and
test
cltd
sbb
xor
mov
sub
ss
cmp
test
push
mov
and
test
push
sub
pop
jnp
pop
add
pop
xchg
loopne
rorl
and
cwtl
dec
and
das
jae
cltd
pop
or
mov
loopne
jo
imul
mov
scas
push
xor
stc
mov
push
cld
pop
cmp
or
je
push
sahf
mov
adc
fstps
jb
xchg
mov
jl
int3
dec
or
sub
addr16
adcl
adc
dec
inc
sbb
push
fnstsw
and
movsb
cmp
push
idivb
mov
icebp
clc
out
xchg
scas
mov
js
mov
repz
inc
mov
hlt
cs
dec
mov
ret
shl
insb
cmp
and
mov
shl
dec
pop
and
aas
xor
pop
inc
sub
dec
jle
out
mov
xlat
scas
jno
jb
jecxz
shll
cltd
sub
jbe
gs
sub
pop
push
fwait
in
rcrb
mov
mov
adc
movsb
mov
addr16
xchg
daa
xor
repz
jp
cmpsb
push
cmp
imul
mov
pushf
and
jmp
jns
out
cmp
out
sbb
sub
jns
insl
lret
lds
pop
outsl
push
mov
lahf
xchg
push
idiv
xchg
ret
xor
mov
mov
movsb
cwtl
loop
mul
cwtl
adc
cmp
pop
mov
dec
sub
out
pop
out
mov
and
push
fimuls
sbb
jae
imul
xor
daa
dec
in
or
mov
shlb
int
pop
xor
and
lods
push
jle
int
jns
gs
insb
fidivl
mov
mov
lods
aam
cld
fdivs
cmpsl
xor
rcrl
repnz
addl
lods
movsl
in
loop
xchg
pop
addr16
pop
int
shlb
jbe
mov
data16
test
dec
out
mov
sbb
into
jp
push
bound
fwait
sub
outsb
call
mov
leave
rcrl
int
xchg
scas
mov
jmp
xchg
out
fstpl
xlat
lods
pop
xor
and
mov
jge
and
daa
mov
into
mov
dec
xchg
pop
jne
dec
pop
int3
push
rorl
xor
mov
jb
sbb
jmp
sub
ljmp
mov
mov
sbb
es
pop
rolb
orl
sbb
sbb
fwait
lock
inc
push
outsl
int3
cld
sbb
jne
mov
imul
xchg
inc
cmpsl
cmp
pop
cmc
inc
lea
sub
ret
scas
xchg
clc
repz
lds
imul
frstor
fmull
ja
insl
adcl
shll
clc
je
mov
lret
cli
popl
inc
loopne
mov
mov
jecxz
sub
dec
inc
xchg
adc
test
fsubp
mov
adc
mov
xchg
mov
mov
hlt
popa
cmpl
cmpsb
cwtl
and
cwtl
sub
adc
sub
rcll
aam
daa
push
int
scas
mov
js
ror
shl
in
pop
ret
and
and
sbb
push
mov
mov
test
xor
xchg
add
xchg
int3
adc
xchg
cli
jae
xchg
cld
or
jns
sbb
fstl
or
jle
rcr
rorl
lcall
iret
add
fidivl
pop
leave
fdivrl
xchg
into
adc
inc
mov
inc
adc
sbbb
jecxz
mov
add
test
xor
cltd
cltd
and
out
int3
rclb
pop
jmp
pop
push
leave
nop
rol
adc
dec
mov
mov
xor
and
adc
mov
add
xor
mov
pop
add
aaa
test
sti
push
add
xor
dec
imulb
jmp
xor
addb
adc
lret
jno
push
mov
mov
and
aam
xor
fistpll
cmp
fcoms
mov
jg
cmp
mov
cmp
dec
sbb
push
cmp
repz
movsb
sbb
jns
sub
insl
sub
or
ror
jge
mov
inc
push
popw
int
mov
cmp
xor
pop
out
mov
sarl
mov
xchg
and
sub
aas
push
jle
fs
repz
pushf
ds
ds
lock
sbb
adc
insl
add
insb
ss
dec
push
sbb
mov
xchg
or
dec
pop
mov
fdivrl
js
adc
cmp
int3
nop
ja
mov
fidivrl
fwait
movsb
xchg
push
inc
sbb
xor
xchg
pop
data16
popa
xor
addl
lcall
arpl
sbb
gs
xchg
pop
data16
popa
xor
cmp
xchg
out
test
jge
je
sub
sub
xchg
xor
xchg
mov
jp
mov
bound
mov
es
pop
mov
dec
push
cmp
mov
loop
das
pop
aaa
cmp
lcall
test
pop
xchg
daa
xor
gs
mov
cwtl
mov
gs
shll
push
fadd
jae
jns
insl
aaa
out
cwtl
push
inc
push
sub
jns
or
push
scas
pop
xor
pop
dec
imul
xchg
add
outsl
xchg
sahf
ficomps
mov
pop
xchg
daa
cmp
pusha
fwait
ss
fidivrl
lahf
mov
ljmp
movsl
dec
out
mov
sub
test
mov
mov
icebp
push
out
cmpsl
sbb
popa
cmp
adc
or
jno
insl
xchg
cmp
adc
pop
mov
lds
jbe
dec
orb
fstl
into
jne
mov
jg
xor
out
xor
fsubr
call
jbe
xchg
std
push
into
pop
sub
pop
lods
add
sub
jmp
cmp
ds
stc
xchg
sbb
stc
cmpsb
push
fimuls
int3
pop
or
inc
mov
nop
adc
adc
movsl
xchg
xor
push
out
xchg
lds
mull
in
sub
sahf
push
hlt
fldt
fbstp
cltd
loopne
adc
pusha
jno
dec
push
mov
push
imul
jmp
ja
cmp
loope
int3
xchg
push
mov
lods
push
inc
negl
dec
mov
cmpsl
push
enter
jno
mov
sub
mov
sbb
mov
hlt
push
ficompl
fildl
dec
push
mov
arpl
pop
lret
mov
adc
shll
cli
mov
mov
adc
imul
mov
dec
sub
into
outsl
int3
adc
cmp
pop
icebp
mov
js
enter
sub
inc
scas
stc
aad
mov
dec
xchg
add
adc
scas
cmc
in
cmp
in
ret
adc
or
xor
into
inc
jecxz
loop
cmp
mov
push
xor
scas
mov
icebp
ret
aam
insl
add
cld
cmpsl
lods
cwtl
ret
and
inc
aam
into
jecxz
enter
adcb
iret
insb
cwtl
jno
insl
or
decl
add
adc
jp
aam
and
and
jbe
movsb
daa
sbb
test
rcrb
sbb
mov
push
jne
je
ret
je
jbe
or
xor
push
sub
leave
stc
nop
adc
adc
dec
adc
ss
mov
in
lods
pop
dec
sbb
cmp
adc
adc
inc
dec
in
mov
fidivl
repz
pop
jo
xchg
push
adc
std
lods
sub
out
int
or
pop
rcl
jne
sarl
lret
inc
pop
xchg
and
pop
push
jg
xchg
icebp
fcompl
xchg
iret
jb
adc
push
push
pop
popf
cmp
or
jmp
and
jg
xor
push
scas
jae
xchg
sub
dec
push
jns
push
and
or
push
imul
mov
rorl
arpl
dec
sti
loopne
inc
pusha
inc
filds
inc
hlt
mov
xchg
sub
lods
mov
push
std
lds
pop
jmp
int
test
cltd
jno
mov
cmp
imul
mov
in
movsl
sbb
arpl
mov
cmpsb
mov
dec
adc
movsb
mov
cmp
push
lock
dec
lret
lock
ja
and
cwtl
stc
test
mov
int
push
ficomps
insl
sbb
cmp
xchg
ss
cltd
jp
ret
fldl
mov
pop
test
ret
push
mov
ss
mov
or
sbb
jmp
out
jmp
int3
inc
imul
mov
scas
aas
add
out
cmp
add
shll
aaa
or
mov
sub
and
add
adc
out
xor
shlb
adc
sahf
mov
shl
lods
jp
cmp
jmp
mov
dec
pop
fwait
cmp
bswap
sbb
int
sub
ja
inc
int3
cltd
add
xchg
popa
xchg
mov
push
mov
and
push
sti
out
mov
dec
xchg
and
adc
mov
es
fbstp
jle
insb
xchg
xor
inc
xchg
add
xor
xchg
cli
ja
jecxz
xor
sbb
sahf
in
cmp
scas
mov
andb
in
das
mov
cmpsb
add
stos
arpl
out
mov
jmp
pop
hlt
aas
pop
stc
gs
test
mov
rclb
je
pop
and
push
out
jecxz
pop
mulb
out
stos
mov
mulb
cmc
cmpsb
xor
aam
and
add
pop
or
xor
ds
sbb
push
mov
data16
cmpsb
dec
jl
sub
lcall
xor
xchg
add
cmpsl
sub
sarl
add
ret
in
mov
jae
sarb
es
ret
mov
mov
jmp
jo
cli
shld
pop
and
xor
add
mov
int
dec
pop
xchg
push
lahf
loope
int3
xor
scas
cmpb
sub
cwtl
push
repz
icebp
popf
adc
sbb
mov
inc
sub
mov
xchg
gs
cli
or
pusha
cmc
test
shl
mov
fstpl
les
popa
push
push
mov
or
es
sbb
pop
adc
test
aam
test
mov
jno
int
sub
stos
popl
inc
dec
repnz
push
cli
cli
xchg
in
ret
mov
int3
ljmp
loope
imul
loop
push
std
pop
mov
pop
hlt
lret
jmp
fldl
xchg
mov
pop
pop
jl
fwait
and
je
sbb
fstps
xchg
push
push
in
xchg
mov
jle
xor
and
push
aaa
xor
pop
pop
mov
cmpsl
inc
pop
and
dec
adc
mov
xor
fdivs
sbb
into
pop
pop
pop
xor
jb
xor
lods
fidivs
scas
mov
fdivrs
insl
xor
enter
data16
pop
ss
inc
xchg
and
and
pop
pop
xor
xchg
hlt
cmp
sub
add
adc
dec
jbe
lret
pop
adc
loope
popf
inc
ljmp
lcall
xor
jae
xchg
test
push
in
pop
test
orl
leave
test
pop
enter
sbb
mov
repz
js
sahf
dec
ret
mov
and
adc
dec
gs
and
push
test
xchg
daa
jecxz
ret
adc
int
imul
stc
into
lods
mov
lods
pop
cmp
daa
fbld
dec
into
add
int
imul
out
fdivl
loopne
repz
loopne
sub
es
sahf
inc
loopne
sbb
adc
xchg
xor
xor
or
imul
xor
out
fwait
dec
hlt
sub
aaa
mov
les
out
mov
gs
inc
push
fisubl
sbb
shlb
adc
push
lret
push
mov
movsl
mov
shl
fmull
ss
jb
je
pop
mov
adc
push
aas
testb
arpl
add
adc
arpl
sahf
sbb
sbb
cmc
imul
rol
popf
xor
and
loop
jp
xchg
jne
cltd
pop
imul
pop
inc
xchg
icebp
int3
mov
dec
insl
xor
insl
and
push
xchg
cmc
cmp
pop
je
mul
je
add
adc
fisubrs
in
xchg
mov
jg
addr16
pop
push
inc
imul
bndcu
push
jg
mov
push
mov
fdivl
sub
mov
arpl
sahf
dec
nop
sub
xor
cld
or
out
jo
sarb
dec
in
call
mov
inc
leave
stos
sbb
sahf
int
jp,pt
xor
jnp
lods
jb
and
data16
jo
xchg
sar
cmp
inc
mov
das
cli
fisubrs
insb
mov
mov
mov
add
int3
rcrb
add
add
xchg
mov
movsb
adc
xchg
inc
mov
push
cmp
push
adc
mov
fwait
xor
adc
insb
xchg
jle
dec
addr16
call
mov
cmp
gs
cmpsb
xor
pop
pushf
mov
adc
jmp
enter
insb
jl
adc
lock
push
adc
out
adc
push
lds
arpl
or
push
frstor
arpl
or
aam
xchg
dec
and
sbb
cmp
cmpsl
jecxz
cmpb
jge
inc
andb
dec
xor
icebp
lds
add
dec
cmp
inc
sub
std
jmp
mov
cmp
cmp
orl
mov
into
paddsb
popa
jp
mov
or
jmp
mov
test
lcall
sbb
sub
icebp
mov
imul
shlb
jo
and
dec
pop
and
dec
cmc
mov
rol
pushf
ret
cmpsl
stos
sub
stos
mov
or
enter
push
push
sub
mov
test
gs
xchg
or
and
in
outsb
sub
stos
sti
call
adc
dec
sbb
sub
push
out
sbb
repnz
add
shll
mov
into
push
mov
mov
adc
cmpsl
mov
dec
add
adc
dec
xor
push
cmc
jno
rolb
shlb
sbb
bound
cmp
inc
mov
pusha
pop
dec
ljmp
leave
sbb
mov
rorb
test
mov
push
ficomps
es
sahf
sub
out
addr16
test
pop
mov
jb
xchg
sub
popf
movsl
loopne
pop
faddl
sarl
push
sub
push
fstpl
push
movsb
cmp
sbb
rcl
insb
fs
adc
xchg
cmpsb
sbb
inc
jnp
fcoms
test
fsts
or
arpl
cltd
sbb
mov
repnz
xchg
mov
and
ljmp
lret
or
insb
js
lds
call
sbb
dec
sbb
pop
fxsave
fstps
sub
jne
outsl
adcl
mov
fisttpl
enter
xchg
pop
mov
das
pop
aaa
aas
sti
insl
nop
xchg
mov
dec
outsb
loopne
in
mov
repz
sbb
xchg
in
in
sub
mov
movsl
fdivs
push
sti
test
int
xor
lds
pop
call
out
jb
pop
sub
repz
fs
imul
lahf
ror
add
mov
dec
mov
mov
cmpsb
mov
sub
mov
shrb
mov
sbb
gs
inc
or
xor
sahf
cmp
enter
cmp
and
jns
mov
andl
mov
dec
dec
in
into
lcall
jnp
or
pop
add
adc
mov
daa
enter
xor
scas
sub
stc
jmp
movsb
mov
arpl
lea
int3
leave
test
pop
mov
je
das
and
lcall
mov
es
cmpsb
mov
aas
push
imul
addr16
jle
cmp
jmp
or
iret
inc
and
fmull
in
add
pop
ja
clc
xor
sub
sbb
fiadds
std
pop
xchg
fcoml
dec
je
inc
and
pushf
jge
imulb
out
sarb
push
imul
adc
in
jno
int3
cmc
nop
dec
jo
pop
adc
push
pop
pusha
or
je
adc
inc
test
lretw
ret
mov
out
cwtl
jo
cmc
hlt
push
outsl
cmp
dec
cmpsl
stc
mov
stc
lods
xor
mov
mov
lahf
mov
rcl
jle
and
mov
ror
out
or
xchg
sbb
mov
adcb
jmp
data16
rorl
xor
pop
test
lods
adc
adc
xchg
adc
mov
int3
mov
jo
sbb
pop
dec
arpl
rcrb
adc
nop
call
xor
add
adc
sahf
push
sbb
jmp
dec
adc
and
iret
inc
add
outsb
adc
decb
jge,pt
xchg
leave
jge
push
adc
popa
rorl
mov
jo
pop
adc
movsb
dec
loopne
xorl
mov
imul
cmp
pop
push
mov
iret
jbe
jbe
fs
mov
mov
ja
push
and
stc
mov
add
es
xor
adc
push
inc
int3
fptan
das
inc
mov
mov
adc
fdivrp
lods
leave
adc
lock
inc
xor
cmp
stos
pop
ret
adc
mov
ret
pop
pushf
and
dec
rorl
ds
inc
add
cmpsb
push
loop
jmp
cwtl
adc
cmp
fsubs
sbb
dec
adc
jns
adc
int
insl
fcmove
push
cmp
pushf
gs
xchg
sub
dec
dec
sbb
dec
sbb
pop
jno
jns
lcall
add
adc
out
lret
fs
adc
mov
push
inc
call
cmc
bound
jne
adc
popa
pop
push
adc
push
xchg
and
xchg
daa
cmp
in
mov
popa
jbe
cmp
in
rolb
sub
push
inc
out
call
ret
xchg
lock
leave
les
push
cli
push
sbb
pop
jnp
ds
sti
dec
xchg
push
clc
jl
ret
sarl
and
test
push
adc
xor
inc
in
inc
test
imul
int
outsl
shlb
subb
mov
popf
call
fdivs
sbb
mov
sub
fwait
push
enter
xchg
out
test
sahf
cmp
ret
getsec
insl
scas
push
arpl
xor
lcall
adc
sub
fdivs
sbb
lds
pop
adc
movsb
scas
xor
cmp
xchg
sub
sub
xor
xchg
insl
jne
and
mov
lock
dec
xchg
and
sub
mov
mov
shll
int
out
mov
push
cmp
iret
sub
xor
mov
mov
xor
sub
jle
and
dec
sbb
dec
adc
int3
adc
insb
push
inc
jle
pop
inc
xchg
xor
in
push
cmpsl
dec
in
pop
in
dec
popf
dec
enter
push
xchg
es
pop
popa
lods
xor
scas
or
sbb
mov
cli
add
adc
cmpsb
orl
xchg
and
jo
pop
adc
jg
push
in
mov
daa
nop
xor
mov
rolb
push
mov
jno
bound
mov
vorps
cltd
repz
in
stc
shrb
pop
rol
mov
aas
mov
sub
xor
scas
out
cmp
inc
int
pop
jp
mov
call
sub
mov
popf
pop
stos
pop
out
pop
xor
enter
jno
pusha
pushf
or
cmpsl
leave
xlat
cmpl
jno
dec
adc
repnz
push
inc
fs
or
pusha
int3
xchg
aaa
inc
das
sub
inc
push
pusha
xor
push
inc
sbb
data16
push
add
pop
ret
cwtl
pop
repz
push
cs
jb
in
addr16
mov
or
movsl
out
sub
xor
ja
and
sub
mov
sub
stc
xchg
mov
lock
mov
xor
je
xchg
ja
daa
bound
icebp
cmp
xorl
pop
lret
and
xor
jbe
jne
lret
addr16
hlt
loopne
mov
sub
je
xor
fsts
into
nop
dec
ss
pop
push
add
adc
or
cmp
jo
pop
adc
testl
fwait
cmpsb
rclb
in
adc
mov
mov
sub
cmp
and
or
iret
xor
cs
push
fisubrl
jb
shlb
test
pop
cwtl
adc
subb
stos
cs
aam
lret
mov
stos
fimuls
jecxz
repnz
lods
insl
stos
pop
cmp
inc
int3
fnstcw
cmp
shll
add
mov
cmp
in
pop
xor
xor
push
mov
or
popf
repz
fnstcw
xor
mov
sbb
dec
sahf
sbb
pop
mov
jge
popf
dec
int3
or
sbb
fs
rcr
jb
xor
sbb
xor
mov
inc
inc
xchg
mov
in
js
out
imul
mov
dec
push
lret
xchg
sub
mov
inc
mov
add
and
dec
or
frstor
fnstenv
fwait
mov
mov
cli
sbb
mov
into
pop
shll
xor
stos
cs
shlb
icebp
and
ljmp
ss
push
pop
sbb
mov
aad
andl
dec
jmp
cmc
imul
fwait
mov
shll
ss
out
lret
dec
out
sahf
xchg
daa
dec
call
inc
lcall
mov
inc
fs
adc
dec
xchg
and
icebp
lods
dec
sahf
cmp
in
in
fwait
inc
pop
or
test
push
add
xchg
pop
xchg
pusha
enter
mov
dec
sahf
dec
cmp
imul
mov
gs
insb
mov
in
mov
sbb
jmp
push
jnp
push
fs
sub
dec
xchg
and
insb
fdivs
out
loope
insb
fidivl
repz
sarb
out
pop
lods
pop
mov
xchg
ret
add
ret
xchg
xchg
repnz
mov
repnz
adc
mov
dec
xchg
outsb
jge
push
xchg
pop
xorl
sbb
xchg
lods
lahf
mov
jle
xor
xor
dec
sbb
cmp
jns
lahf
cmp
popa
and
adc
lock
sub
cltd
ss
mov
dec
ljmp
xchg
jbe
inc
fsubrl
dec
push
scas
and
xor
ds
xchg
mov
pop
dec
orb
les
insb
jmp
rcrl
cmpsl
fsubrl
cmpsb
xor
or
insb
scas
stc
imul
mov
cmp
test
inc
add
cmp
mov
jle
bound
dec
cs
and
fcompl
cli
sub
fistpl
cs
pop
sub
xchg
lea
arpl
mov
ret
mov
fucom
mov
out
xor
lret
repnz
shr
sub
and
xor
mulb
lcall
add
push
call
dec
jg
mov
push
jnp
and
xor
hlt
xchg
rorl
repnz
add
push
mov
mov
cmp
pop
push
cltd
and
sahf
mov
and
scas
aas
iret
jns
lret
aam
in
repnz
testb
mov
test
mov
ret
push
adc
xchg
mov
pop
adc
fwait
push
push
and
mov
sub
in
xor
inc
test
jle
outsl
fcmovnu
mov
push
data16
lock
ljmp
ret
ljmp
pushf
add
inc
outsb
lret
xchg
ljmp
mov
fnstcw
ja
bound
nop
jne
add
mov
insl
scas
add
jle
in
mov
cmp
stos
pop
sub
ja
mov
sbb
sub
out
xchg
mov
ss
xor
mov
jae
pop
or
mov
aaa
cmp
xchg
ret
mov
std
arpl
pop
cld
mov
dec
pop
mov
and
or
into
insb
in
dec
adc
jmp
jp
cmpsl
iret
loop
lret
and
pop
repz
cmpsl
mov
cmp
inc
outsl
ds
cmp
push
cmc
in
test
push
sbb
xor
jnp
push
push
push
xor
lcall
sbb
sbb
inc
jp
out
call
xchg
lods
lcall
mov
popf
sub
fdivl
jmp
cmp
inc
or
loope
rcl
aad
adc
mov
xchg
mov
cwtl
and
out
mov
frstor
jmp
iret
jbe
dec
cmpb
push
sbb
pop
lret
sahf
ret
xchg
inc
insb
dec
neg
dec
sbb
in
push
add
lret
dec
out
pop
mov
iret
or
xchg
ret
scas
add
mov
subl
cmpsl
dec
out
pop
mov
sub
ss
dec
jle
arpl
sbb
mov
ret
fs
mov
and
es
jns
js
or
dec
pop
sbb
mov
xchg
inc
add
xor
leave
mov
lods
mov
cmp
dec
test
pop
xchg
daa
xor
out
fldcw
add
push
mov
sub
jg
out
fsubrl
les
outsb
mov
fs
loopne
aad
pop
mov
fisubrl
loope
sub
jns,pn
xchg
cld
out
xor
cmpsb
push
xchg
inc
push
inc
fs
xor
xchg
daa
dec
call
mov
push
lahf
jg
cmp
push
ja
fidivl
out
in
int
and
xchg
das
fistpll
repnz
lret
rep
mov
xchg
and
fs
jmp
sbb
out
pushl
push
in
ds
in
clc
or
xchg
ja
inc
shll
lret
repnz
test
xchg
xlat
into
mov
adc
push
les
inc
outsb
push
movsl
lret
ja
js
jg
and
fwait
es
and
xlat
cmp
enter
ds
jno
std
fcoml
or
jmp
iret
jne
xor
adc
mov
stc
cmpsb
mov
mov
push
sub
insb
lcall
repnz
aas
sbb
or
dec
shrl
sub
inc
add
add
ficomps
mov
outsb
push
and
aam
push
or
xlat
mov
push
jge
lods
mov
pop
push
test
or
test
scas
inc
cwtl
mov
inc
ret
je
mov
inc
out
xchg
jmp
pop
repz
sbb
ljmp
mov
mov
push
frstor
scas
xor
or
test
nop
xor
in
test
adc
popf
lret
sbb
xchg
xchg
inc
ret
imull
cmp
or
and
repz
iret
push
jbe
out
pop
xor
aad
mov
es
pushf
cmp
ljmp
ljmp
xchg
lods
mov
push
das
pushf
cmp
inc
in
and
sbb
push
xchg
push
mov
aam
jbe
out
xchg
push
mov
push
pop
jne
sbb
call
mov
lock
inc
imul
mov
shll
cs
mov
xchg
mov
test
loop
push
adc
aas
in
stc
adc
and
jo
xchg
mov
push
jl
cli
sbb
push
adc
int
mov
add
adc
fs
test
mov
mov
push
into
dec
mov
negl
dec
cli
loopne
call
mov
mov
fstl
push
movsb
cmp
fsubrl
jg
xchg
icebp
das
lcall
cmp
pavgw
cli
cmp
cmc
popf
lds
in
int
inc
sbb
dec
xchg
das
xlat
and
repnz
jb
mov
push
or
push
mov
mov
dec
xchg
imul
data16
push
jno
fdiv
out
lcall
push
add
adc
int3
cmp
xchg
fs
cmp
lods
movsb
and
cmp
lods
das
movsb
out
pop
imull
movl
into
mov
out
test
jge
cmp
mov
or
mov
leave
lret
dec
dec
std
shll
sub
mov
test
mov
push
cmc
popf
lds
in
int
inc
faddl
data16
and
and
xchg
daa
cmp
in
fwait
inc
fcoml
push
cmc
or
add
and
xchg
daa
xor
jns
xlat
ficoml
insl
fcmovb
fcmovu
add
and
imul
cwtl
loopne
sub
loop
mov
ret
inc
or
push
adc
adc
rcl
xor
out
xor
push
clc
imul
lock
or
insl
jae
inc
pop
xor
mull
lret
dec
jne
adc
dec
xchg
and
loop
mov
ret
outsb
into
repz
inc
sbb
dec
xchg
das
mov
xchg
or
cmpsl
lcall
test
insb
fsubr
cmp
push
fisubl
and
sbb
out
sub
imul
sbb
sarl
xor
je
adc
adc
outsl
pop
xor
xchg
stos
icebp
cmp
push
adc
addr16
and
ret
jb
mov
or
pop
push
shll
iret
jae
rolb
xor
jns
scas
popf
mov
adc
add
dec
push
daa
dec
mov
inc
jg
mov
xor
cmpsb
into
xchg
hlt
les
push
adc
mov
cmp
jl
inc
gs
lret
pop
adc
lods
fnstenv
lods
sub
cmpsl
xor
sub
mov
push
std
sbb
mov
mov
mov
dec
es
pop
insb
out
inc
outsb
lds
mov
jl
sbb
int
cmp
dec
and
cwtl
pop
adc
lret
jp
push
dec
push
xor
jl
lcall
fimuls
rcrl
data16
arpl
or
insb
jb
mov
js
enter
fidivs
je
inc
xor
sub
cwtl
mov
sub
inc
xchg
rorl
addr16
jl
bound
adc
xor
fiadds
add
xchg
fnstcw
outsb
xchg
sub
xor
xor
cmpsb
ljmp
mov
dec
xor
push
inc
test
loopne
and
push
adc
scas
js
and
loopne
mov
pop
adc
shr
aad
xor
aaa
and
lret
pop
adc
cmp
inc
pop
adc
xchg
in
bound
adc
inc
pop
adc
shrb
inc
pop
adc
mov
in
aas
pop
jge
mov
sahf
push
faddl
pusha
loopne
pop
adc
pop
adc
fstp
into
and
mov
loope
loopne
pop
adc
icebp
cmp
jae
ds
stc
jno
icebp
xor
cmc
addr16
in
xchg
dec
jle
popf
and
jo
or
push
xchg
mov
adc
adc
fadds
test
mov
push
in
sbb
adc
jmp
xor
leave
cltd
push
iret
hlt
loopne
push
adc
push
dec
dec
data16
add
adc
cwtl
xor
lret
ljmp
mov
jns
dec
pop
adc
jmp
ret
mov
jle
cltd
dec
lret
and
out
mov
xorb
fcomi
xchg
scas
adc
insl
fidivl
jbe
mov
jnp
dec
jge
mov
pop
mov
jns
dec
add
shl
jno
arpl
imul
daa
dec
pusha
ret
xchg
daa
mov
push
adc
or
inc
xchg
xchg
dec
lret
mov
jbe
pop
bound
xchg
insl
jne
adc
inc
xchg
imul
sarb
adc
pusha
ret
xchg
fcmovb
or
inc
xchg
adc
push
adc
outsb
push
xor
adc
out
leave
xchg
and
cmp
mov
dec
cmp
dec
sahf
xchg
aad
add
adc
out
stc
mov
sbb
loop
fisttpll
add
dec
sahf
cmp
sub
push
adc
das
inc
popf
push
xor
add
aas
call
jbe
mov
repz
xor
popf
push
movsl
sbb
jecxz
sub
mov
mov
cmp
inc
adc
adc
daa
pop
popf
push
adc
adc
add
repnz
pop
cmp
outsb
cld
leave
leave
fwait
dec
out
add
push
jp
movntq
xor
mov
sahf
testb
pop
adc
adc
xor
out
out
scas
pop
mov
push
cmp
push
dec
sahf
xchg
or
ret
dec
pop
xchg
das
jle
lock
mov
fs
xchg
ret
push
adc
or
xchg
xchg
and
cld
shll
nop
sbb
adc
cmp
in
ss
and
pusha
lret
jge
lahf
dec
cltd
xor
sub
mov
push
adc
push
mov
or
sub
hlt
je
and
sbb
shlb
enter
and
in
adc
lahf
aam
ljmp
mov
mov
arpl
in
xor
mov
sbb
jbe
adc
outsb
cmp
push
adc
and
mov
pop
fnstenv
xor
pusha
clc
test
jno
jo
mov
xchg
lea
in
and
sbb
mov
mov
xor
int3
ret
dec
dec
jg
mov
addb
jnp
shl
mov
mov
push
sbb
test
sbb
push
adc
adcl
dec
hlt
lret
into
mov
orl
into
aad
test
roll
cwtl
mov
outsl
ljmp
fs
icebp
ret
mov
rcll
sbb
pop
or
add
out
jns
mov
out
hlt
sbb
add
leave
mov
adc
pop
stc
aas
fcmovne
outsb
inc
and
jl
imul
cmp
jne
dec
repz
xchg
xlat
repnz
sub
sub
adc
adc
mov
mov
push
pop
adc
or
pushf
jmp
and
and
xchg
fnstsw
cmp
cmpsl
push
aas
shlb
test
xor
push
adc
cli
out
inc
ss
popa
add
ljmp
xchg
jecxz
pusha
jp
adc
or
sbb
mov
rcrl
lock
cmp
aad
xlat
inc
pop
jge
repnz
test
lea
clc
sbb
sti
mov
jl
push
cmp
xor
cwtl
push
int
xor
sbbl
adc
adc
sub
imul
fsubr
les
mov
and
sub
xor
push
dec
sahf
ret
sbb
jno
adc
adc
sub
push
add
cmc
push
cmpsl
and
into
mov
scas
popa
roll
adc
xchg
das
fidivs
gs
adc
adc
sbb
es
sbb
pop
push
in
mov
pop
inc
jmp
jbe
sbb
cmp
pop
adc
jns
or
adc
adc
pop
incl
jns
adc
mov
lret
mov
dec
fldenv
sbb
adc
adc
push
in
xchg
and
ss
and
test
jnp
daa
jecxz
ret
adc
fcmovb
fcmovu
aad
jno
addb
lods
sar
popf
sbbb
mov
or
test
push
adc
sbb
mul
int
jo
pop
adc
test
cmp
roll
popf
fisubs
xchg
scas
ds
adc
mov
adc
int
lret
inc
mov
insl
lods
cmpl
lret
and
mov
xor
int
data16
jns
repz
push
push
jge
jae
or
jbe
adc
cmpsb
add
add
scas
fisubrl
fwait
ret
pop
push
xor
es
sahf
xchg
out
or
xor
mov
push
adc
cmp
or
add
pop
xchg
and
stos
fsubp
in
mov
lods
fistpl
xchg
das
xor
adc
jbe
adc
cmp
out
pop
mov
stos
orb
adc
adc
add
lds
jbe
adc
test
popa
ret
add
mov
das
pop
xor
inc
sbb
fs
ret
push
adc
fldenv
dec
lahf
xchg
or
and
adc
rdtsc
shll
mov
aad
nop
daa
dec
es
add
es
adc
push
orl
or
push
mov
jbe
adc
sub
popf
push
xor
mov
jnp
ds
xor
mov
inc
jbe
adc
adc
mov
cmpsl
or
pop
lea
fs
xor
mov
loop
aas
sub
test
and
dec
lods
inc
dec
pop
loopne
es
adc
push
dec
iret
mov
pop
or
lods
sbb
call
and
push
adc
adc
inc
dec
dec
sbb
bound
fistl
cmpsb
lret
inc
sub
inc
add
aaa
pop
icebp
mov
xlat
xchg
cmp
jno
pop
fnstenv
rcl
gs
sbb
outsl
das
pushf
out
hlt
int3
xchg
lret
push
adc
outsl
iret
sahf
jae
sub
or
push
adc
cld
push
dec
xchg
out
push
mov
push
inc
sar
xchg
ror
dec
add
push
adc
jo
hlt
dec
adc
cmp
jp
push
es
mov
fwait
inc
repz
scas
les
push
adc
pop
jp
dec
loope
sbb
clc
mov
jge
add
out
add
mov
in
hlt
scas
push
movsl
aas
add
rol
je
mov
inc
in
sub
fildll
cld
adc
jnp
insl
ja
pop
inc
outsb
popa
sbb
jmp
sbb
lods
es
adc
xchg
es
and
and
outsb
push
shrb
mov
in
test
lods
sbb
sub
and
push
bound
ljmp
dec
cmp
push
sub
jle
lcallw
stos
cmp
notb
sub
sub
pop
scas
xlat
fsubrl
pop
inc
add
sbb
dec
sbb
jb
testb
push
adc
add
push
mov
mov
push
dec
sbb
push
adc
imul
pop
dec
lcall
xchg
and
sbb
xchg
test
fwait
ss
sbb
mov
xchg
sub
or
fadds
xchg
daa
out
rclb
push
adc
or
cmp
or
push
pusha
lret
fmuls
out
push
dec
xchg
pop
je
inc
inc
js
hlt
and
xchg
pmullw
int
insb
cmp
push
adc
dec
fildl
lock
xchg
push
mov
js
inc
hlt
mov
popf
pop
js
adc
push
ljmp
xchg
inc
js
insl
jmp
rcl
sub
inc
xlat
fucomp
stos
movsl
movsb
ljmp
adc
fdiv
inc
xorb
cmpsb
ss
aas
aad
lds
out
popf
pop
out
xchg
bound
pop
repnz
xor
mov
and
and
cwtl
mov
rolb
xchg
jmp
jle
aaa
gs
mov
loope
mov
fbstp
xchg
jp
subl
cli
or
cs
dec
call
fstpt
sbb
fs
insl
xor
adc
adc
inc
inc
push
sbb
cmp
dec
ret
mov
bound
adc
sbb
and
bound
mov
or
lock
cmp
repz
adc
adc
pusha
inc
sbb
dec
sbb
out
hlt
adc
adc
out
mov
jns
test
jno
push
mov
sahf
outsb
push
fucom
xor
adc
push
adc
adc
outsb
adc
push
mov
mov
loopne
or
pusha
bswap
push
imul
jb
pop
adc
push
mov
dec
enter
sub
xchg
jns
iret
in
pop
ret
adc
shrl
jo
pop
adc
push
pushf
cmc
dec
stos
or
pop
mov
cmp
scas
add
xlat
xchg
faddl
push
pop
aam
push
adc
xor
mov
mov
mov
fwait
jno
jle
data16
movsb
data16
int3
jg
mov
loope
add
add
pop
rcrl
push
js
xor
or
sbbb
adc
and
xor
aaa
pop
popf
imulb
in
aam
cwtl
clc
jns
mov
pop
add
cli
and
dec
pop
xor
cmc
int3
lahf
sbb
out
dec
sub
mov
sub
xchg
jl
add
lcall
repnz
stos
aam
push
push
and
dec
mov
mov
adc
call
xor
lods
ja
in
dec
popa
push
int
scas
lock
fisttps
jne
xchg
notl
xchg
xchg
enter
cmp
es
jo
pop
xchg
mov
jmp
pop
ljmp
icebp
or
cmp
int3
and
iret
fs
mov
mov
daa
add
dec
cli
sbb
pop
add
pop
dec
jbe
adc
pusha
and
inc
es
xor
int3
cli
call
out
push
in
out
dec
or
dec
insl
clc
inc
pop
mov
ja
jle
cmp
clc
and
in
and
loop
dec
pop
sbb
inc
pop
imul
mov
inc
cmp
loope
je
mov
and
iret
and
scas
mov
inc
mov
inc
mov
pop
dec
inc
scas
stos
pusha
mov
and
sbb
in
xlat
scas
pusha
pop
or
cmp
push
sbb
fnstsw
fptan
outsl
add
ss
adc
adc
fists
iret
in
mov
aam
push
adc
mov
js
adc
adc
mov
mov
lods
mov
add
out
out
call
add
xor
mov
lods
pop
cmp
addr16
popa
ret
dec
iret
mov
int
fildll
pop
aas
xchg
jecxz
test
xor
jbe
loope
mov
or
xor
rcll
cmpsl
xchg
mov
sbb
imul
fwait
mov
fcomp
sahf
cmp
adc
add
push
adc
sbbb
push
ficoml
adc
xorb
aas
xchg
fcoml
mov
repnz
imul
iret
mov
lods
xlat
cmp
ret
xchg
ja
repnz
int
mov
add
push
stos
xor
pop
adc
or
mov
les
push
pop
push
adc
call
pop
adc
cld
adc
adc
pusha
pop
adc
fisubl
mov
movsb
or
inc
xlat
shl
movsl
add
or
insb
fdivs
out
push
jl,pn
pop
adc
loope
lretw
and
mov
aaa
in
cmp
adc
adc
push
push
mov
gs
dec
xchg
and
hlt
add
adc
pop
dec
sbb
in
jbe
dec
xchg
mov
pop
adc
ficomps
repz
int3
add
sbb
fs
jp
sbb
cld
bound
xor
lea
mov
sti
fistpl
fidivl
adc
cmpsb
movsb
mov
push
std
lds
lock
add
les
pop
push
adc
xor
das
sub
dec
push
sbb
sbb
shrl
mov
mov
push
xchg
xchg
and
push
aad
mov
addr16
add
orl
xchg
inc
push
pop
mov
push
cld
ret
aaa
sub
push
xor
add
dec
nop
sub
not
sbb
inc
outsb
lds
push
push
push
das
sub
and
pusha
decl
arpl
xor
jnp
jno
out
jp
mov
or
dec
in
add
sbb
inc
test
pop
adc
icebp
xor
je
pop
hlt
stos
mov
test
lods
imul
adc
or
out
in
lahf
aad
adcb
sahf
in
push
xchg
out
bound
cmpsl
ds
jl
pop
adc
dec
arpl
inc
pop
stos
pop
rcr
sbb
cmc
orb
mov
dec
xchg
sub
repnz
ljmp
frstor
xchg
leave
data16
push
adc
movsb
lods
xorb
mov
push
clc
push
sbb
add
js
xor
jge
adc
into
and
out
fld
cs
inc
pop
mov
aam
dec
cld
ljmp
jg
in
aam
inc
shlb
lock
cld
adc
adc
and
and
mov
or
pop
and
shrl
aaa
mov
push
fldenv
arpl
adc
adc
popa
leave
or
dec
pop
adc
js
mov
pop
pop
adc
movsb
and
mov
inc
adc
aam
adc
aas
xchg
ja
stc
test
push
cmp
idiv
mov
pop
js
mov
les
fs
add
and
icebp
sub
adc
inc
fisttpl
sub
pop
adc
push
xor
sub
pop
adc
xchg
inc
pop
adc
sub
cwtl
push
adc
push
leave
cmp
xor
pop
or
jae
mov
lret
lcall
movsl
xchg
and
out
and
cmp
call
inc
vcvtdq2ps
adc
xchg
lcall
push
mov
loope
insl
lcall
xor
pop
pop
adc
les
in
inc
xchg
in
pop
pop
adc
int
pop
pop
adc
in
test
xchg
das
pop
xchg
inc
pop
adc
or
mov
ss
sbb
addb
int
inc
aam
aaa
and
insl
into
gs
jg
or
pop
adc
pop
pushf
inc
pop
adc
cmpsl
movsb
imul
pop
adc
push
orb
sbb
sbb
call
pop
mov
ss
leave
jns
js
jg
addr16
repz
lret
out
pop
aas
call
cmp
mov
int
sub
xchg
mov
dec
xchg
aas
shll
in
pop
fs
ret
out
shlb
xor
orl
out
sbb
pop
add
or
in
jg
xor
lret
imul
mov
adc
adc
sbb
loop
fwait
jl
fidivl
rep
lret
pop
xor
inc
pop
adc
and
cmp
or
inc
pop
adc
into
scas
dec
faddl
movsl
sbb
loopne
pop
adc
leave
jns,pn
xchg
xor
sub
mov
repz
pushf
pop
sub
pop
adc
xchg
dec
jbe
fdivs
pushf
pop
adc
das
pop
aaa
jg
xor
pop
adc
insl
adc
outsb
inc
push
or
xor
pop
insl
jae
pop
inc
cmp
or
mov
add
and
call
push
cwtl
pusha
int3
lcall
pop
mov
mov
inc
jb
daa
ds
in
test
inc
pop
adc
xchg
or
xchg
sbb
pop
data16
xchg
mov
sbb
cmp
hlt
sub
sahf
pop
adc
pop
add
push
adc
mov
lcall
addb
sahf
pop
adc
add
adc
adc
test
adc
and
cld
push
adc
adc
xor
incb
andl
outsb
push
adc
adc
iret
push
les
push
adc
mov
ja
test
imul
xor
fdivr
in
in
xor
xor
mov
jmp
adc
sub
sahf
pop
adc
fs
adc
adc
adc
popf
pop
adc
dec
jmp
addb
jno
push
inc
orl
ja
popf
pop
adc
out
dec
je
cmc
jecxz
loop
popa
fsubl
adc
loop
ds
popl
outsl
call
lods
xor
cmp
cwtl
rcrb
mov
jbe
fidivrl
sub
jae
mov
mov
jp
jg
mov
je
cmp
pop
ljmp
push
addl
xorl
push
fstpt
dec
add
popf
push
jne
ret
iret
loopne
cmpsb
loope
add
jmp
xchg
enter
pop
int
mov
and
int
xchg
leave
jae
gs
inc
outsb
jb
pop
jmp
sbb
sub
ret
je
test
in
add
aad
cmp
rcrb
add
fmuls
pop
jmp
loop
inc
inc
push
aas
out
jecxz
cmp
adc
adc
out
mov
sarl
pop
aad
mov
roll
adc
adc
xlat
aad
dec
imulb
lds
pusha
inc
pusha
inc
pop
adc
fcompl
push
pop
addb
pop
push
adc
adc
pushl
mov
test
adc
pop
push
pop
adc
mov
mov
xchg
sub
mov
mov
ret
add
inc
pop
adc
fcompl
xchg
xor
or
pop
adc
ja
int
pop
push
jne
adc
inc
xchg
pop
addl
test
xor
xchg
add
push
and
inc
inc
dec
sbb
pop
adc
test
push
adc
cld
adc
adc
xor
xchg
push
ret
add
push
adc
popf
pop
adc
or
fwait
dec
push
push
push
sbb
mov
iret
or
inc
xchg
mov
sub
jbe
roll
pop
adc
pushf
sbb
fidivrs
mov
jecxz
bound
sbb
shl
aad
popa
ret
xchg
and
jne
js
cmpsl
subb
sarb
fadd
insb
dec
or
and
push
outsl
popf
mov
xor
push
rorl
jl
hlt
xchg
cmpsl
mov
adc
shll
jmp
hlt
and
nop
sub
cmp
nop
inc
push
adc
lock
jb
and
movsl
inc
mov
cmp
stos
fistpl
pop
dec
xchg
push
loopne
dec
subb
fdivrs
add
aad
repnz
popf
xchg
mov
and
jmp
xor
xor
cmp
bound
lcall
cmp
lods
mov
xchg
lret
out
mov
repnz
testb
pop
outsb
sbb
loopne
cmpsb
cmp
out
jno
outsb
aas
daa
int3
fwait
inc
xlat
fxch
push
and
jb
mov
and
daa
pop
dec
xor
movb
stc
es
or
nop
loop
les
daa
cmp
cld
push
xor
sti
sahf
aas
push
iret
or
dec
pop
sub
or
cmc
mov
cmp
incl
dec
fnsave
xor
cmpsl
mov
sbb
das
cmp
mov
mov
or
lds
loopne
int
shll
scas
in
mov
jmp
iret
orl
pushf
xchg
cmp
jae
inc
inc
pop
ja
gs
in
and
inc
pop
hlt
stos
arpl
fstp
or
lods
aad
lock
mov
push
out
mov
adc
sti
bound
lret
pop
and
daa
ss
clc
es
cmp
sbb
call
dec
lahf
xor
fwait
push
inc
sbb
cmp
imul
test
mul
mov
int3
popa
push
push
and
data16
iret
imul
in
jmp
fs
in
mov
pop
fbld
dec
fistl
xlat
xchg
mov
das
inc
aam
int3
xor
dec
sarl
fimull
push
aaa
loopne
sahf
xor
lods
pop
inc
clc
xor
push
adc
cld
cmpsb
lds
cmpsb
dec
dec
test
cmp
daa
into
imul
insb
mov
jb
cmp
movsb
xor
sbb
pop
sub
sahf
hlt
pop
cmp
aaa
gs
mov
test
push
aas
cmpsl
pop
fdiv
cmpsl
cltd
ss
push
adc
inc
sbb
sbb
cmp
and
sub
repnz
pop
cmp
pop
cs
inc
jae
xor
mov
push
sti
push
fdivl
adc
sub
mov
lahf
cwtl
jnp
xlat
icebp
sub
push
adc
dec
cwtl
sub
std
push
daa
out
add
jmp
jp
call
movsb
cmpsb
lds
sub
jge
sbb
xlat
std
cmp
dec
adc
cmp
clc
xchg
pushf
mov
mov
and
fs
hlt
inc
lret
add
nop
xor
mov
rorb
mov
sahf
xor
xchg
popa
push
inc
out
out
xchg
mov
loope
fwait
mov
dec
test
push
adc
sbb
in
lcall
imul
mov
inc
inc
lds
outsl
fwait
fsubr
jns
or
or
xchg
and
dec
enter
jl
pop
adc
xchg
adc
jg
xchg
lds
dec
ficoms
xchg
jne
ret
fisubl
xchg
jl
pop
adc
push
adc
dec
lret
xor
addr16
and
mov
jo
pop
adc
lahf
sbb
js
push
inc
xor
lcall
insl
fstpt
jmp
repnz
xchg
out
and
mov
mov
pop
mov
shl
sbb
dec
aam
test
sbb
add
xchg
and
mov
lcall
loopne
ss
fdivs
adc
and
and
aaa
jg
out
inc
iret
movsl
cmp
sahf
es
sbb
lock
in
xor
sub
aam
and
adc
lret
call
dec
cmp
or
fwait
ret
shll
jp
adc
push
in
pop
mov
xchg
xor
addb
jne
push
or
outsl
imul
pop
mov
out
adc
adc
lcall
xlat
test
add
adc
sbb
shl
add
mov
sahf
xchg
incb
xchg
push
mov
repz
mov
in
xor
hlt
shrb
and
fidivrl
adc
enter
cmc
outsb
fcomp
test
push
adc
std
addr16
jns
adc
and
mov
sahf
jne
sub
stos
shll
repnz
cmp
fs
out
or
sbb
clc
inc
jns
adc
xlat
enter
jmp
int3
add
mov
sbb
push
adc
call
pop
jbe
sub
leave
in
shrb
xor
sub
sub
push
mov
out
mov
push
or
push
adc
repnz
lret
ret
fdivrs
clc
in
mov
push
repnz
push
mov
sbb
push
adc
and
int
inc
mov
jmp
xor
ljmp
adc
cwtl
js
adc
movsb
int
dec
xchg
jnp
icebp
cmp
pushf
out
aaa
mov
sub
pop
pop
dec
enter
push
adc
cltd
and
test
push
adc
int
in
sub
int
lds
lret
insl
out
pushf
sbb
or
pop
stos
dec
lock
sbb
pop
sbb
xchg
lock
insl
mov
add
es
int3
jmp
and
in
cmp
mov
dec
clc
mov
jbe
xchg
rcrb
pushf
lret
daa
lret
cmp
lock
add
ds
add
shlb
jmp
pop
xchg
test
xor
push
rep
shlb
aam
or
mov
and
ljmp
rorl
pop
sbb
into
inc
int3
dec
sbb
idivb
xlat
out
imul
inc
or
imul
into
adcl
pop
mov
in
adc
cs
add
xchg
push
mov
push
lahf
sub
pop
mov
enter
adcb
pop
insb
pop
insb
xor
ss
dec
pop
ljmp
mov
enter
cmp
pop
xchg
dec
fildl
das
aam
mov
pop
stos
add
fdivrs
and
mov
inc
jle
xchg
repz
inc
insb
jo
hlt
sbb
lea
xchg
or
xor
pop
enter
cli
jne
cld
negb
imul
mov
xor
ret
xchg
out
mov
bound
leave
pop
push
pop
lds
mov
xor
sbb
cmpsb
mov
out
gs
or
insl
xor
scas
or
loop
insb
push
push
sbb
fidivrl
xchg
pop
sbb
ds
push
jl
scas
call
insl
cmp
das
mov
int
inc
dec
into
push
das
xchg
jns
jns
daa
dec
mov
push
pusha
leave
les
lock
jmp
out
loopne
xchg
adc
ret
cld
mov
icebp
sbb
mov
jbe
mov
jno
call
gs
jl
dec
inc
ret
xchg
sbb
jne
icebp
outsl
int3
pop
pop
addr16
js
insl
pop
jbe
lods
mov
ret
or
lods
mov
jns
dec
js,pn
leave
mov
icebp
insb
mov
es
sahf
inc
inc
jns
pop
push
xchg
movsl
mov
repnz
imul
mov
mov
xlat
cmp
test
or
mov
inc
or
loopne
cs
out
mov
sahf
mov
in
lds
push
movsb
sbb
mov
pop
cmp
xchg
mov
and
fwait
ss
adc
repnz
mov
push
lret
in
mov
pop
out
mov
js
aaa
insb
cmpsl
sub
cs
sti
jl
and
and
lds
insl
inc
loop
cwtl
lods
sbb
test
mov
mov
lcall
mov
addr16
push
adc
leave
add
push
into
inc
ret
jle
xor
add
jge
inc
fldenv
xor
add
mov
inc
in
xor
cmp
mov
push
clc
mov
push
pop
dec
bound
sar
subl
icebp
outsb
call
mov
std
je
jo
sarl
xchg
scas
mov
ret
out
cs
jg
fs
popf
push
adc
dec
xor
out
bound
shl
ret
push
fidivs
and
xchg
scas
xchg
lods
sbb
movsb
aam
or
pusha
out
cmc
adc
in
adc
insb
add
xchg
icebp
and
adc
rorb
mov
jb
cmc
xor
xor
shll
jl
xchg
sbb
sbb
xor
mov
mov
insl
out
js
sub
jp
ljmp
movsl
jmp
fistps
or
pop
scas
and
fidivrs
lds
repz
rcll
inc
out
and
icebp
nop
inc
sbb
xchg
hlt
aad
rcr
mov
rcll
fs
jns
iret
mov
arpl
xor
lock
jno
jae
xchg
repz
or
dec
rcrl
cmpsb
inc
jle
push
stc
in
mov
xchg
int
jae
sbb
sub
and
mov
fstp
fcoml
fnsave
aam
vmwrite
xor
sarl
aaa
adc
xchg
test
add
cmpsb
mov
pop
jns
inc
shll
inc
mov
pop
pop
xchg
fwait
adc
push
xor
sbb
insb
out
mov
adc
xlat
scas
leave
adc
idivl
mov
ret
int
and
enter
mov
popf
and
insl
and
push
pop
mov
jns
inc
mov
btr
aad
das
movsb
insl
xor
add
sahf
pop
fcomps
loopne
sbb
xor
iret
xchg
mov
push
les
jmp
adc
loopne
inc
mov
scas
enter
insl
pop
out
nop
inc
pop
jne
lcall
xchg
pop
xor
pop
dec
sbb
mov
jp
pushf
repnz
jecxz
push
aaa
mov
push
and
xchg
mov
mov
lahf
xchg
push
idiv
xchg
ret
xor
mov
mov
movsb
cwtl
loop
mul
fwait
adc
fisubrs
lods
loope
and
push
shl
cld
insb
fs
lret
jne
sbb
mov
test
xchg
imull
sti
rolb
popf
mov
push
mov
ret
or
int
inc
inc
xchg
adc
mov
test
dec
xchg
mov
loope
popa
clc
fmuls
inc
mov
adc
in
or
repnz
ror
lcall
icebp
push
or
leave
sub
jno
repz
int3
mov
xor
popf
mov
in
out
mov
push
in
mov
outsl
pop
loopne
xor
popf
cmp
inc
in
mov
inc
xchg
das
pop
mov
and
xor
xchg
or
inc
out
enter
aas
pop
mul
or
leave
push
mov
mov
sub
adc
jnp,pt
nop
push
add
sbb
adc
mov
aas
aas
pusha
add
pop
xchg
ret
push
and
dec
inc
jecxz
or
pop
ret
test
mov
movsl
lds
dec
lahf
repnz
xchg
xor
lret
int
mov
and
popf
xchg
sub
ss
scas
mov
push
cmp
mov
inc
pop
loope
xor
shll
out
and
inc
dec
setne
ljmp
shl
jp
das
and
rcrl
aam
pushf
cwtl
mov
inc
int
push
bound
nop
and
out
clc
fildl
add
add
inc
xchg
int3
mov
or
test
cmp
pop
sub
hlt
stos
sahf
xchg
lea
in
roll
icebp
lahf
mov
push
adc
add
adc
stos
mov
out
ret
inc
mov
pop
aam
push
imul
loopne
inc
or
and
adc
jnp
mov
sbb
pushf
iret
sbb
icebp
rcr
movsb
addr16
mov
adc
jbe
jbe
gs
jl
adc
lods
pop
rcrb
movsl
push
insl
dec
int3
cltd
ss
in
push
push
cmp
mov
push
adc
repnz
mov
mov
cmp
movsb
jne
inc
pop
leave
sub
push
dec
cmpsb
and
push
adc
ffreep
in
mov
inc
sbbb
popa
aaa
dec
mov
cld
fstl
xor
push
adc
mov
subl
sbb
jbe
dec
aaa
push
inc
and
ds
lret
mov
test
cltd
xchg
jns
xor
jp
arpl
or
adc
popa
jae
push
push
inc
xchg
or
cli
xor
push
mov
mov
test
xor
sub
test
cmpsl
jg
mov
lea
jb
sbb
xor
dec
dec
mov
mov
adc
mov
mov
mov
xor
jl
add
shrl
jnp
stc
cli
nop
or
lret
test
sbb
mov
movsl
xchg
outsb
repz
sub
rol
rcrl
sub
faddl
adc
jns
mov
lcall
sarb
cmp
aas
sbb
xchg
out
cmp
mov
add
mov
xchg
and
pop
sbb
mov
mov
inc
lock
leave
scas
cmpsl
jns
aaa
cmpb
adc
in
sahf
mov
loope
aam
add
xchg
mov
int
mov
hlt
lods
out
sbb
add
in
dec
mov
add
incb
or
std
jno
loopne
xchg
sub
sbb
out
fcoml
add
push
cmpsl
movsl
inc
aad
adc
movsb
lahf
jne
sti
out
lds
xchg
out
sub
pop
adc
xchg
mov
pop
adc
loop
mov
fstl
xor
fstpt
cmp
mov
inc
outsb
ss
rcrb
dec
xchg
mov
sarb
adc
ret
outsl
mov
int
jno
add
mov
mov
gs
addr16
pop
rol
popf
xor
es
sahf
mov
jl
fs
pop
int
push
mov
xor
cmp
dec
xchg
and
and
cmpsl
popf
loop
adc
fs
xchg
in
mov
or
jmp
mov
outsl
cmp
imul
scas
inc
int
push
mov
mov
add
loopne
enter
xchg
ret
lret
push
pop
push
cmp
xchg
mov
es
xchg
push
jbe
add
push
adc
cmp
pushl
test
pusha
enter
pushf
push
int
mov
sbbl
mov
stos
sahf
leave
jae
call
enter
out
cmp
cmp
add
add
sub
jl
or
xor
xor
lcall
in
mov
ret
fidivl
gs
add
xchg
js
and
or
in
mov
dec
enter
icebp
in
cmp
cmpsl
adc
mov
sahf
bound
cmp
xchg
stos
mov
neg
ja
shrb
mov
sub
notb
sarb
out
int3
outsl
mov
add
adc
or
xlat
push
jmp
add
test
adc
repnz
adc
mov
add
fiadds
sub
adc
js
push
mov
in
sbb
out
sub
lods
jmp
or
gs
pop
jno
pop
inc
sti
cltd
cmp
adc
sub
mov
jl
xchg
out
push
dec
adc
cmc
mov
sbb
pop
loope
push
dec
rol
popa
out
inc
in
jp
fsubs
stc
in
mov
mov
pop
lea
dec
call
lret
ret
jp
adc
lret
add
test
jo
repnz
clc
mov
lcall
add
xor
inc
dec
push
ffreep
dec
jmp
fildl
push
xchg
inc
leave
fildl
mov
adcb
leave
push
adc
dec
cmp
sub
out
xchg
inc
cmpb
ljmp
jb
mov
mov
enter
js
push
adc
test
xchg
and
xchg
adc
xchg
mov
icebp
bound
into
xchg
add
inc
pop
loopne
int
fildl
xchg
dec
lock
jl
jp
adc
sub
and
sti
xchg
mov
into
dec
in
jp
adc
imul
jo
mov
cli
mov
push
sub
or
push
fwait
push
mov
mov
imulb
pop
cmp
scas
adc
adc
push
sbb
mov
lahf
xor
xchg
dec
pushl
adc
dec
adc
jne
out
movsl
dec
inc
lods
mov
adc
cmpsl
push
mov
adc
push
cmc
xchg
test
int3
nop
ja
aam
nop
loop
mov
js
out
out
imul
movsl
mov
fstpt
leave
mov
adc
inc
cwtl
stos
cmpb
arpl
call
mov
mov
loopne
adc
hlt
cmpsb
xor
pop
jo
lret
jmp
and
loope
mov
push
mov
leave
xchg
and
leave
addr16
gs
inc
push
ror
enter
jl
xor
lret
bnd
mov
jae
pop
es
or
test
sub
jp
xor
shl
cmp
mov
dec
fldl
int3
or
sbb
loop
cmpb
lcall
pop
jo
mov
jecxz
ret
fs
lock
xor
bnd
popf
scas
popf
mov
loop
xchg
mov
sub
cmp
fst
out
loopne
outsb
inc
mov
out
out
cmp
mov
rcr
rorl
sub
stos
mov
popf
shr
out
outsb
inc
loopne
out
aas
ss
fcmovb
mov
mov
inc
out
fnstcw
push
adc
dec
mov
int
sub
rorb
adc
adc
loope
xchg
push
pop
pop
push
popa
dec
xchg
push
xchg
sub
cmp
int
test
adc
jns
out
pop
cmp
push
adc
mov
mov
xchg
or
andl
in
xchg
sbb
movsl
dec
out
mov
nop
xchg
or
lock
lods
sahf
dec
nop
mov
and
or
outsl
sbb
popf
outsb
push
insb
andb
lret
cmp
jmp
dec
xchg
mov
loopne
cmp
sub
repz
ljmp
rorb
xchg
andb
adc
mov
lcall
insl
ret
fisubrs
cmpsl
jns
inc
ss
leave
in
dec
aam
das
and
sub
adc
notb
or
rolb
push
orl
mov
mull
pusha
les
inc
push
shlb
popf
lods
or
data16
lret
xchg
gs
imul
fisttpll
in
pop
arpl
cwtl
leave
in
pop
leave
push
lret
cmp
les
repz
push
adc
loope
pop
outsl
rcrb
add
aaa
xchg
mov
xchg
ss
sub
rcrl
out
fsub
cld
stos
sbb
dec
repz
jg
iret
cmc
push
or
or
out
iret
add
es
mov
dec
hlt
repnz
mov
in
inc
repz
push
adc
inc
loope
shll
into
sub
and
adc
adc
int3
lock
ret
jbe
rcr
and
mov
dec
mov
int
mov
push
or
imul
xchg
mov
cld
shrl
lock
ret
cmp
lock
data16
data16
test
inc
rorl
mov
sub
or
pop
jne
dec
lods
outsb
pop
ror
adc
fistpl
sti
jae
push
adc
shrl
pushf
test
push
inc
daa
je
movsb
xchg
push
lea
xor
jle
out
or
mov
loop
or
leave
add
fcomp
out
jne
inc
xchg
sub
jmp
mov
repz
cmp
mov
cs
adc
push
out
sahf
sbb
push
int3
cmp
xchg
pop
pusha
movntq
mov
leave
pop
add
push
insb
and
inc
fnsave
mov
addr16
mov
jmp
xchg
gs
inc
push
and
push
lods
mov
test
push
adc
aas
scas
scas
inc
dec
loop
cmp
pop
testl
jge
enter
pop
clc
repz
adc
icebp
adc
mov
fdivl
push
and
push
lods
mov
movsb
jp
adc
jg
scas
inc
dec
loop
cmp
pop
notl
ror
fmuls
mov
inc
jmp
fcmovb
pusha
les
adc
fwait
ds
cmpsl
dec
xchg
xor
mov
sub
jp
mov
xchg
or
cmp
add
dec
xchg
mov
pop
push
adc
mov
int
fwait
ss
daa
sbb
push
adc
out
and
cmp
push
adc
xor
ficoml
sbb
scas
aas
pop
pop
out
lea
inc
xchg
and
sbb
cmp
rorb
push
mov
bound
and
and
nop
daa
cmp
fsts
mov
dec
pop
in
pop
mov
jbe
cmp
add
daa
sqrtps
cmp
dec
sbb
shl
mov
xchg
xchg
shl
popf
loopne
arpl
ret
xchg
iret
jns
out
popf
gs
out
lock
xor
mov
ret
or
inc
loope
sbb
out
sub
rcrl
cmc
pop
lret
fmul
test
cmc
lods
clc
inc
js
mov
sbb
mov
sbb
adc
pop
movsb
or
sarb
and
adc
mov
pop
mov
adc
cmp
call
xor
jnp
sahf
dec
enter
cwtl
xor
cmpsl
push
out
test
out
jbe
hlt
adcb
push
ljmp
pushf
inc
xchg
scas
add
cld
push
lcall
inc
aam
or
push
jmp
aam
push
adc
and
mov
mov
mov
or
mov
or
loopne
push
adc
dec
pop
arpl
add
adc
daa
or
jl
xchg
and
push
adc
and
dec
cld
mov
cwtl
clc
or
ret
dec
std
xchg
dec
xor
test
lea
and
dec
pop
sbb
shl
out
ds
sub
sbb
mov
sub
pop
pop
mov
ljmp
adc
mov
push
std
dec
aam
in
fsubr
popf
mov
sti
add
in
aam
mov
sub
daa
mov
mov
movsl
mov
outsb
lret
adc
push
xchg
xchg
mov
punpcklbw
in
pop
sbb
ret
loopne
push
adc
jmp
mov
jo
stos
inc
or
and
hlt
cmp
inc
popa
mov
xchg
out
xlat
inc
out
xchg
xchg
fimull
push
mov
inc
cwtl
or
xchg
push
push
and
adc
std
icebp
scas
ljmp
sbb
jp
lahf
jge
lock
data16
mov
mov
nop
inc
add
adc
jl
sbb
sub
cmp
mov
scas
and
adcl
movb
mov
gs
dec
out
fwait
inc
jne
out
stc
rcl
mov
inc
inc
inc
push
lods
sbb
popa
pop
pop
mov
aaa
push
je
adc
xchg
out
dec
adc
dec
daa
ss
adc
insb
push
neg
leave
pop
mov
pop
pop
jno
mov
mov
dec
clc
push
movsb
jno
aas
mov
fdivs
fnstenv
out
xchg
lods
push
jnp
sbb
insl
mov
add
out
cmpb
xlat
sbbl
push
aaa
ljmp
add
and
call
ret
xchg
lock
leave
sub
push
adc
pushf
lret
cmp
stos
aas
or
aas
sbb
shrl
jns
lcall
sbb
push
aas
sbb
out
fdivl
loopne
test
out
mov
scas
sub
stc
out
out
test
rclb
xor
lcall
and
pop
shrb
sahf
test
ret
loope
and
aas
xchg
xlat
mov
adc
pop
or
xor
xchg
daa
dec
or
inc
xor
fidivl
icebp
mov
mov
or
in
out
imul
test
xlat
stc
movsl
cld
push
out
lock
cmp
and
sbb
mov
rcr
sbb
inc
or
push
jno
lret
gs
xchg
xchg
out
cmp
xor
dec
das
pop
mov
adc
scas
xorb
push
decb
or
push
movsb
inc
stos
out
mov
mov
lea
mov
ret
jns
loope
mov
sahf
int
cwtl
das
pop
aaa
cmpl
xchg
inc
pop
jne
test
xchg
pop
bound
xchg
cmpsl
mov
popf
pop
jnp
pop
shrb
xchg
push
cmc
xchg
mov
dec
loope
and
flds
mov
loope
sbb
mov
sub
ret
jmp
insl
lret
call
push
shll
xorb
dec
xchg
push
clc
mov
xchg
aas
enter
push
jne
push
test
imul
cmp
dec
xchg
push
jns
push
pop
cltd
cmp
jbe
mov
inc
adc
or
gs
mov
ret
or
call
fmulp
fst
push
stos
repz
mov
dec
xchg
mov
mov
cmc
lcall
add
push
and
test
pop
insb
and
je
pop
jno
lods
push
flds
or
jl
sub
cwtl
mov
xchg
adc
jmp
inc
std
pop
push
out
add
daa
leave
incl
fs
mov
fs
pop
les
mov
ja
daa
add
mov
sub
int
test
dec
fsubs
jnp
cs
aam
lock
in
stos
inc
arpl
inc
out
dec
mov
xlat
aad
xchg
pop
xchg
add
test
aas
dec
mov
outsb
or
push
lds
push
aas
js
orl
mov
cmp
movsb
pop
mov
outsl
xchg
and
mov
cmp
stc
loope
xchg
ret
mov
adc
rol
paddsw
dec
pop
add
add
insl
inc
loopne
daa
jbe
push
adc
add
jns
lcall
sbb
pop
adc
push
vpshufhw
jbe
repnz
dec
sub
sar
mov
jp
ret
arpl
sub
mov
dec
push
cld
push
push
dec
hlt
xchg
dec
test
inc
outsl
sbb
sbb
iret
loope
jl
test
ret
fcomip
jg
repnz
ljmp
mov
mov
ret
cltd
adc
out
loop
push
push
adc
mov
jbe
hlt
jl
push
int
mov
loope
mov
cs
lret
loope
xchg
push
ss
jae
cmp
int3
rcl
int
cmpsl
mov
test
in
or
movsb
lret
call
sub
out
fwait
stc
jp
insl
xchg
das
adc
add
mov
pop
dec
inc
mov
sbb
xchg
daa
ficompl
xor
add
mov
hlt
mov
cmp
pop
xchg
and
and
xchg
jg
pmovmskb
dec
jg
mov
and
es
pop
test
xchg
daa
cmp
int
test
adc
jns
out
push
not
leave
push
push
adc
xor
add
lret
cmpsb
cmp
or
lods
push
xor
mov
push
repz
pop
dec
mov
pop
mov
insl
mov
out
cmp
fdivs
lds
inc
out
stc
mov
jae
stc
movsl
enter
sahf
imul
jecxz
mov
adc
cmpsb
xchg
nopl
imul
jmp
es
push
sarl
cmp
xchg
xor
int
aad
in
cmc
dec
ffree
xchg
xchg
adc
in
push
loop
sarl
cmp
loop
mov
fcomps
pusha
out
daa
push
inc
sub
insl
mov
sarb
mov
adc
rcrl
sbb
push
test
xchg
gs
xchg
popf
cmc
or
dec
sahf
dec
ret
loopne
jno
leave
sbb
inc
cmp
insl
mov
push
cs
and
pop
in
mov
cmp
xchg
mov
ret
xlat
rcrl
sbb
data16
fcmovnu
enter
movsl
inc
dec
lods
cmp
aam
push
adc
jmp
daa
mov
xor
lret
push
aam
and
mov
dec
loopne
push
adc
fsubp
cmpsl
in
push
lock
insl
inc
je
sbb
in
ret
test
inc
int3
jno
adc
xor
lea
add
shll
rol
or
andl
cld
mov
arpl
mov
popf
sub
int
add
lcall
inc
loopne
xlat
dec
mov
int3
adc
mov
jae
lahf
add
iret
adc
lods
xchg
cmp
or
add
lahf
aam
insb
mov
js
jl
xchg
and
xor
in
pop
mov
dec
bound
pop
cwtl
rol
lret
and
bound
ds
or
fidivrl
lock
jae
rcl
mov
mov
shl
cmpb
sub
pop
testb
adc
adc
jle
enter
mov
mov
push
push
ret
cwtl
xor
and
xor
push
jbe
insl
out
loop
jp
dec
xor
rcrl
cmp
sbb
jg
xor
xor
and
sbb
xor
or
int3
xor
fwait
inc
mov
pop
lret
mov
sahf
stc
cmpsl
insb
push
scas
xor
mov
xor
push
pop
popa
pop
mov
stos
mov
fdivl
lock
int3
and
cltd
cmpsl
dec
cmpsl
push
jecxz
xlat
push
into
pop
das
add
mov
hlt
ljmp
int
sub
pop
mov
dec
and
movsb
jo
add
xor
out
fdivl
out
cs
push
dec
push
mov
sbb
add
lret
mov
mov
nop
push
and
cwtl
inc
aad
xor
popf
sahf
nop
jle
dec
mov
imul
adc
testb
scas
fs
sub
bound
mov
jmp
ds
adc
clc
add
int3
push
mov
in
sbb
hlt
ret
and
sahf
bound
mov
jecxz
push
adc
dec
inc
mov
pop
pop
js
out
dec
jg
inc
push
aaa
inc
ffreep
mov
repnz
inc
stos
mov
sub
cmp
clc
dec
test
out
pop
imul
mov
inc
xlat
movsl
or
test
shrb
mov
mov
and
sub
mov
xchg
sub
cmp
aaa
pop
jge
dec
sahf
xchg
jns
std
mov
mov
mov
xorb
imul
insl
xor
dec
and
ljmp
inc
shll
rcr
xlat
idivl
stos
and
out
push
aas
sarl
and
dec
icebp
mov
mov
lea
pop
mov
jg
fdivl
xchg
ret
mov
insb
fidivl
repz
jmp
in
mov
push
pop
insb
cmp
repz
aad
push
pop
sbb
mov
es
push
cmpsb
out
dec
sbb
pop
adc
cmpsb
lds
or
pop
not
push
cltd
dec
arpl
addr16
xor
inc
sarl
aam
push
adc
adc
jb
sub
imul
lods
mov
out
fwait
paddq
push
loopne
push
adc
dec
xchg
push
jno
push
out
sub
xor
push
adc
adc
in
push
adc
adc
pop
adc
mov
ret
xchg
bound
and
adc
inc
mov
jp
dec
adc
pop
adc
adc
adc
cmp
repz
adc
adc
add
pop
adc
cmp
adc
les
clc
int3
inc
add
pop
adc
or
adc
cmp
leavew
xchg
lock
adc
nop
les
push
adc
mov
xor
adc
add
jbe
aad
pop
loope
leave
mov
rolb
adc
mov
xchg
sbbl
pop
jmp
xor
adc
xchg
fisttpll
push
loopne
mov
pop
cmp
mov
inc
inc
iret
in
push
aam
jnp
push
das
aam
in
pop
insb
pop
cltd
push
push
loop
mov
adc
lret
and
push
popa
lods
push
in
push
insl
mov
hlt
push
das
pop
or
mov
cmp
int
aas
mov
cli
shrl
inc
jnp
adc
rolb
lahf
shlb
mov
cmp
iret
push
and
add
ja
xor
loop
leave
pusha
sub
divb
push
adc
or
jbe
add
scas
sub
push
adc
adc
push
stos
mov
cli
adc
jno
or
xchg
pop
xchg
or
outsb
adc
mov
push
xchg
cmc
scas
xor
jnp
xchg
inc
repz
fisttpl
mov
mov
int3
xchg
push
fcmovne
in
cmpl
cmc
sbb
jge
inc
loope
sub
pop
dec
arpl
dec
popa
jne
mov
outsb
mov
dec
stc
adc
cli
mov
dec
aas
push
xchg
movsb
jns
fidivs
adc
jp
sbb
jecxz
test
sbb
jnp
jo
add
adcb
adc
inc
arpl
mov
lods
popa
pop
and
cmc
fldl
jecxz
in
dec
idivb
adc
bound
xor
inc
jge
sub
push
adc
jecxz
jb
inc
andl
jl
jb
sub
sbb
pop
repnz
push
mov
mov
jge
sub
test
jmp
mov
cltd
in
and
shlb
mov
xor
inc
push
fdivr
cmp
dec
adc
outsl
scas
and
xor
stos
mov
fsub
mov
or
mov
int
and
jns
push
mov
bound
pop
aas
sbb
dec
jns
adc
adc
mov
push
sbb
adcb
adc
sbb
cmc
adc
push
out
outsl
dec
xchg
daa
andl
imul
jno
aaa
pushf
scas
and
lcall
insl
mov
fbstp
xor
or
out
push
or
push
mov
les
xor
cltd
mov
mov
and
popa
ret
xchg
insb
ss
adc
dec
sbb
mov
mov
xor
add
sbb
sub
push
xlat
fnstenv
fwait
call
out
push
movsb
dec
pop
sbb
into
xchg
xor
xchg
leave
scas
scas
lret
mov
lcall
pop
fcmovnu
insb
daa
movsl
js
push
adc
das
mov
pop
aaa
dec
adcb
adc
dec
mov
dec
mov
mov
iret
pop
fwait
ss
and
cmp
sbb
xor
loopne
pop
add
out
shl
aad
popa
ret
xchg
xlat
cmp
xchg
and
jo
aas
sub
sbb
jnp
jmp
xchg
je
dec
and
adc
push
popa
outsl
lahf
push
jnp
adc
jmp
mov
mov
fdivs
sbb
test
pop
jmp
jo
aas
sub
adc
sar
rolb
fstl
push
adc
mov
cltd
lcall
jno
mov
fstps
mov
fdivrl
cmpsl
popf
inc
or
fs
cmp
and
push
pop
push
in
xchg
sbb
dec
xlat
cmc
push
mov
add
cmp
loopne
out
sub
sub
mov
sti
push
sbb
insb
aad
pop
fildll
mov
push
mov
add
jl
push
adc
ret
mov
mov
pop
in
insb
cmp
cmp
inc
pop
xchg
out
mov
adc
adc
cli
lret
shr
es
stos
in
jmp
xor
inc
iret
sbb
cs
mov
xor
bound
idivl
mov
in
push
lea
cmp
add
pop
xchg
loopne
lds
jno
cmp
sti
in
pop
mov
nop
mov
inc
int
push
jo
pop
adc
cmp
ret
inc
inc
add
add
fdivrl
ss
cmp
pop
dec
stos
and
or
cmp
lods
sarl
xor
mov
outsl
shlb
adc
adc
pushf
mov
sbb
jae
ret
xchg
fcmovnu
pop
idivl
cmc
aaa
xchg
inc
jne
mov
lahf
xor
mov
jnp
adc
inc
mov
sbb
lret
pop
pop
adc
jne
lods
test
or
dec
xchg
lds
adc
push
lret
call
xor
adc
repz
and
sbb
jne
push
xor
outsl
inc
mov
loope
jge
lret
mov
fidivrl
adc
pusha
jb
addr16
sub
rorl
cmp
mov
bound
cmp
jmp
push
adc
into
sbb
stos
adc
xchg
push
pop
adc
adc
jecxz
js
clc
imul
test
jge
imul
and
addr16
mov
jb
push
sbbl
pop
mov
adc
imul
add
push
mov
in
fisubs
cmp
pop
mov
jg
shlb
adc
xor
xchg
mov
lock
shll
mov
mov
or
stos
jno
mov
adc
xchg
outsb
inc
add
fs
sbb
adc
repnz
lds
repz
mov
cmp
mov
push
ss
enter
cmp
push
outsl
and
jno
xlat
mov
fdivs
inc
lock
leave
sbb
or
or
cmp
pusha
bound
enter
aam
insl
push
push
push
pop
pop
repnz
pop
cmp
es
xor
mov
aas
lret
mov
sahf
sbb
into
push
jecxz
or
std
movsb
out
pop
sarl
mov
inc
test
rorb
adc
adc
xor
cmp
enter
mov
push
push
and
das
pop
jnp
testl
nop
movsl
test
pop
adc
aam
and
adc
push
push
ss
in
nop
jmp
adc
lds
mov
lret
insl
sbb
fidivrl
push
jbe
mov
lcall
call
out
mov
mov
mov
sub
inc
or
cmp
mov
xchg
mov
fidivs
xchg
mov
loopne
lcall
insl
push
lock
lahf
pop
adc
jecxz
mov
leave
xchg
inc
mov
pop
aas
pop
pop
jl
pop
adc
mov
repnz
movsb
lahf
pop
adc
mov
pop
arpl
lods
rolb
pop
dec
xchg
daa
cmp
filds
int3
insl
cmp
out
das
pop
cmp
kmovb
lods
lods
mov
xchg
sub
push
fistl
sbb
xchg
int3
push
ds
xor
push
adc
inc
movsb
lahf
pop
adc
movsb
lahf
pop
adc
xlat
jg
dec
dec
xchg
and
loopne
std
push
call
imul
push
inc
in
loope
int3
cmpsl
vphaddubq
mov
lret
push
adc
adc
cvtps2pd
jmp
fld
inc
and
aam
incb
loop
loopne
sub
adc
adc
mov
push
mov
mov
ljmp
xor
nop
test
fs
push
out
repz
lret
popf
call
jnp
adc
fs
movsl
lea
pop
out
push
mov
andb
fwait
iret
cmp
jmp
ljmp
movsb
pop
or
inc
cmc
imul
and
data16
adc
test
sarb
mov
dec
mov
xchg
mov
mov
dec
cmp
push
sub
roll
jg
mov
xchg
sbb
sub
hlt
jnp
adc
idivb
and
mov
int3
int
inc
and
into
in
fimuls
mov
movsb
and
adc
fstpl
repz
fdivrl
adc
add
jno
shrb
pop
sti
test
sbb
bound
push
aaa
adc
jb
xchg
inc
outsb
inc
pop
ljmp
shll
mov
movsb
and
adc
and
frstor
adc
mov
pop
push
adc
adc
int3
or
shr
test
mov
lret
mov
mov
inc
and
or
vrcpps
out
xor
mov
jl
lods
add
fnstcw
or
je
lret
xchg
testl
sub
mov
lock
xor
adc
adc
call
sub
inc
adc
adcl
mov
flds
or
sbb
push
arpl
sub
repnz
lcall
adc
aas
adc
pop
std
cmp
cmpsl
lahf
clc
cmp
inc
xchg
inc
pushf
fstl
xor
jo
sbb
ljmp
leave
xchg
fidivrl
sub
mov
ds
push
mov
xorb
pop
xchg
leave
xchg
icebp
xor
cmpsb
cmpsl
xchg
leave
jne
adc
lods
pop
cmp
sub
cmpsl
xchg
cmp
iret
sbb
sbb
pop
aas
add
out
ffreep
push
lret
es
mov
push
sbb
xchg
xor
pushf
nop
imul
lcall
insl
fidivl
flds
cli
insb
aas
aaa
and
jno
xchg
stos
sahf
in
clc
or
and
aas
xor
jno
cmp
leave
sbb
rcl
push
or
mov
fld
pop
ds
ds
jbe
int
push
repnz
sbb
push
push
mov
out
push
xor
aam
ss
clc
icebp
addr16
xchg
cmpsb
mov
sahf
leave
jge
and
xlat
fcomps
fistpl
xlat
mov
fnstcw
adc
jno
jg
out
mov
jl
adc
adc
insl
xor
or
mov
cmp
mov
out
dec
xchg
stos
sahf
enter
test
xor
adc
adc
pusha
xor
ja
enter
jl
fstp
popf
repz
xor
mov
fwait
mov
popf
mov
or
mov
dec
xchg
das
or
out
ret
or
lcall
mov
xchg
js
rcll
cwtl
clc
cwtl
repz
cltd
frstor
cmp
pop
add
inc
out
fcoms
mov
clc
outsb
cmp
mov
mov
popa
adc
xchg
lods
xchg
and
sbb
loope
push
rclb
adc
fcom
and
and
adc
cmp
mov
sub
dec
lds
lahf
lret
cmp
mov
mov
and
outsl
pop
scas
orl
testl
adc
adc
fidivrl
imull
push
adc
push
stos
mov
mov
cmpsl
lret
adc
xchg
fs
jl
out
push
leave
lahf
pop
lret
adc
cmp
and
in
mov
leave
inc
xchg
and
jl
push
dec
fcomps
mov
rorb
hlt
jae
rcrb
dec
inc
cltd
jge
add
sti
sub
xor
inc
or
push
adc
jle
cmpb
push
adc
cmpsb
jmp
lods
xchg
lret
mov
rclb
adc
out
push
mov
mov
lret
and
push
addr16
mov
push
xchg
pusha
inc
adc
pop
cmp
andb
xchg
dec
mov
into
cmp
dec
dec
arpl
jae
pop
mov
mov
in
cmp
repz
xchg
into
sub
faddp
adc
adc
push
inc
pop
adc
adc
adc
pop
mov
pop
adc
sbb
nop
out
inc
lea
adc
mov
repz
dec
fcomi
add
inc
pop
adc
adc
push
aad
cmp
fstp
jmp
push
lea
adc
push
mov
out
push
lret
cmp
repz
lahf
pop
adc
dec
test
fldcw
push
fs
icebp
mov
mov
pop
adc
in
add
push
add
pop
mov
gs
clc
clc
scas
mov
mul
xchg
mov
gs
jg
leave
pop
in
jge
pushf
repnz
sbb
inc
imul
inc
jbe
add
and
dec
test
xchg
daa
fcomps
mov
fwait
ss
jl
fcmovbe
mov
xchg
add
mov
cmp
pop
adc
movsb
add
ret
inc
or
pop
adc
pop
in
mov
leave
cmp
mov
fs
loop
fmull
xchg
jae
inc
xchg
mov
xchg
sbb
cmp
and
ret
mov
aam
imul
and
pop
jmp
lcall
xchg
and
adc
pop
adc
js
fs
cmp
and
mov
gs
inc
int
insl
fistl
adc
pop
adc
push
insb
sarb
inc
mov
mov
gs
pop
adc
mov
adc
pop
xor
sub
inc
cld
xor
adc
pop
adc
sarl
sbb
pop
arpl
inc
scas
adc
pop
adc
out
dec
pop
push
adc
cmp
scas
pop
stos
fimuls
adc
mov
mov
das
pop
mov
gs
dec
outsl
xor
dec
mov
sbb
insb
rcr
jl
sti
insl
xor
push
push
dec
xor
mov
sbb
test
push
imul
out
or
cmpsl
lcall
cwtl
push
dec
xchg
push
std
xchg
add
inc
jl
adc
das
pop
mov
int3
mov
call
cmpsb
in
mov
xchg
or
jl
imul
out
ret
and
test
xchg
es
ret
or
fcmovne
inc
push
shl
pop
sbb
leave
cmp
xor
out
dec
jmp
rcrb
les
movlps
lods
or
int3
mov
xchg
lcall
push
adc
mov
xchg
push
in
mov
pop
sub
add
mov
lret
push
adc
insb
push
mov
jl
adc
xor
in
lea
pop
dec
xor
cmp
xor
mov
push
adc
fisttps
out
mov
and
popf
jge
inc
xchg
imull
ljmp
test
dec
xor
jae
jnp
lods
mov
pop
data16
fwait
xor
jg
in
xchg
leave
movsl
jmp
dec
ret
jge
and
xor
rorb
jl
xchg
mull
pop
xchg
add
ss
xchg
movsb
sub
mov
aam
dec
inc
popf
push
out
rorl
or
inc
mov
xchg
lahf
xorl
mov
das
xchg
jns
icebp
fstpl
mov
jo
adc
jp
add
in
inc
lock
pop
sbb
loop
xor
mov
roll
lcall
repz
jl
das
lock
loop
sbb
hlt
pop
inc
xor
ret
add
sbbl
addr16
sub
lahf
ficoml
push
adc
mov
popa
xor
out
cs
scas
sbb
pop
adc
and
pop
adc
bound
addr16
pop
cmp
mov
pusha
orl
stos
sbb
or
in
lea
fdivrl
pop
adc
stc
je,pn
mov
xchg
fdivs
xlat
test
loopne
and
pop
jge
ds
mov
pop
pop
cmc
stos
std
push
jb
out
in
xor
push
mov
mov
sahf
jl
mov
ja
cmp
sub
fistpll
xor
adc
dec
adc
lret
xor
hlt
fidivs
cmp
test
and
push
outsl
out
and
ret
xchg
lcall
bound
lcall
jae
in
mov
sbb
test
popf
repz
fcomi
push
aaa
or
pop
addr16
ret
fwait
jg
mov
jb
cmp
lods
fdivs
pop
jbe
inc
xor
test
xor
bound
xor
xchg
jne
xlat
ficoms
push
adc
pop
push
sbb
out
mov
and
out
fidivrl
xor
mov
inc
mov
mov
jl
jg
mov
xchg
sarl
mov
xchg
xor
mov
add
adc
das
cmp
xchg
jne
add
push
adc
imul
pushf
repz
mov
fcomps
inc
jecxz
sbb
mov
daa
mov
xchg
xchg
ret
mov
dec
xchg
xor
xchg
leave
push
cmpsb
ss
sub
xor
pop
movsl
xchg
rclb
adc
fmul
pop
push
adc
pop
mov
repnz
sti
mov
icebp
and
cmpsb
jp
xchg
ja
cltd
pop
push
inc
xchg
out
sbb
js
push
adc
fmul
pop
push
adc
pop
mov
repnz
jl
adc
sti
mov
xchg
and
cmpsb
jp
xchg
ja
cltd
pop
push
inc
xchg
out
sbb
insb
jl
adc
decb
push
xchg
lds
sbb
lods
shl
dec
into
xor
or
sub
sub
sahf
mov
push
adc
dec
std
xor
or
rcrb
lock
adc
inc
jl
mov
ret
cmp
mov
imul
xor
rolb
sahf
xor
or
sub
jno
sub
add
and
jae
dec
aam
push
adc
inc
push
pop
mov
rclb
sarb
leave
pop
sub
mov
test
mov
push
adc
stc
push
inc
pusha
xchg
bound
std
jg
mov
cwtl
inc
pop
adc
fldcw
daa
jmp
pop
dec
cmp
pop
dec
add
shlb
xor
adc
cmp
int
ss
jecxz
push
add
push
jmp
adc
adc
outsl
testl
xchg
sub
dec
frstor
stos
rcrb
sub
shlb
mov
clc
or
cmp
pop
mov
pop
rorb
mov
xor
mov
pop
adc
adc
and
mov
arpl
pop
adc
popf
sbb
adc
lcall
push
adc
int
mov
cmp
mov
xchg
and
and
pop
adc
mov
daa
mov
imul
and
into
xchg
test
push
adc
pusha
scas
je
xchg
sub
or
mov
ljmp
adc
adc
adc
ljmp
rol
push
out
or
adc
adc
push
adc
aas
bound
pop
adc
inc
pop
adc
popf
cmp
inc
pop
adc
and
or
xchg
sub
adc
xlat
in
sbb
sub
add
jb
dec
jmp
daa
insb
scas
in
mov
push
dec
xor
and
in
pop
imul
movsl
dec
push
fimuls
mov
inc
jno
add
inc
movsl
out
insl
fucomi
scas
mov
popa
cmp
jl
pop
adc
xchg
adc
push
iret
mov
repz
pop
jbe
push
cmc
popf
cmpsl
or
leave
sbb
das
xor
pop
mov
adc
pop
into
cmpsl
cmp
cmpl
xchg
pusha
in
insl
lds
sbb
paddsw
movsl
mov
adc
imul
pop
aas
sbb
jno
and
add
sbb
adc
insl
push
mov
pop
push
push
and
jo
pop
in
pop
xor
aam
and
loop
and
fs
xchg
scas
push
imul
int
xor
je
fninit
out
xor
into
in
mov
mov
jg
inc
or
sbb
push
cs
in
popa
ret
add
xor
push
aaa
pushf
scas
and
fisubs
adc
pop
adc
ss
xchg
sub
jns
sbb
pop
dec
sbb
xchg
xchg
test
sahf
mov
sub
or
xchg
cmpsb
mov
or
xchg
jo
stc
leave
mov
fimuls
movsb
aam
int3
add
or
cli
push
mov
cli
xchg
ds
jo
ror
adc
jo
pop
adc
and
or
sub
push
aaa
cmp
outsl
mov
mulb
inc
out
mov
cltd
ret
add
lods
data16
outsl
dec
mov
fucomip
out
jne
adc
pop
cmc
lods
ret
sbb
fwait
sbb
dec
xor
dec
gs
movsl
movsb
xchg
dec
xor
test
adc
xchg
pop
dec
fdiv
out
out
fwait
xor
aam
pop
outsl
in
shl
les
adc
dec
xchg
cs
ss
arpl
cmp
or
popf
mov
lds
pop
adc
fstpl
arpl
insb
pop
cmp
clc
outsb
adcl
icebp
sbbl
fistpll
int3
or
mov
test
sub
sti
pop
cmc
loope
xchg
or
pop
cld
outsl
sub
jbe
int3
psubsw
dec
fsubs
mov
mov
mov
sub
sbb
scas
std
sbb
scas
test
xor
cltd
cltd
cmc
cmp
stos
pop
stc
gs
in
jo
into
ja
jns
lods
sbb
les
les
mov
neg
lods
test
sub
das
jle
sub
or
push
fsts
int
inc
out
fdivr
pop
sbb
ret
out
xor
into
pusha
ss
inc
insl
aaa
pop
push
aad
int
sbb
imul
fistl
mov
lock
adc
inc
das
and
data16
mov
ret
int3
lret
add
out
ljmp
js
inc
and
loop
mov
aas
aaa
or
loopne
movsb
cmp
outsb
cmp
lcall
mov
xor
icebp
lock
or
inc
insl
sub
aam
popf
cmp
dec
arpl
dec
into
xor
call
add
das
push
or
loopne
fistpl
outsb
adc
and
cmp
sub
xor
mov
std
ljmp
sbb
shlb
mov
aaa
in
or
out
movsl
orb
fidivrs
lcall
mov
jb
mov
ret
aaa
sbb
inc
cmp
xor
cli
mov
cmp
pop
addr16
fptan
movsb
adcb
push
adc
cli
fistpll
shl
shrb
in
pop
mov
std
adc
dec
adc
lock
clc
mov
int3
bound
mov
hlt
into
add
dec
adc
outsb
les
fs
int
adc
add
mov
outsl
shrb
mov
fadd
outsb
dec
ret
mov
dec
das
sub
mov
int
das
repnz
cld
into
add
add
xor
add
das
pop
aaa
cmp
cmp
dec
xchg
scas
cwtl
push
lods
xchg
inc
mov
subl
xlat
hlt
jne
lcall
pop
mov
fstpt
addl
lcall
jns
out
pop
cmp
negb
popa
fdivs
sbb
push
pop
sbb
push
aaa
sub
fistps
pop
mov
sbb
cmp
adc
adc
jb
dec
pop
adc
inc
fnstenv
loop
mov
mov
adc
sahf
xchg
loop
sbb
fs
ret
mov
cmp
lcall
dec
xlat
out
lea
lea
add
xor
mov
push
dec
and
pop
adc
xor
mov
fucomp
test
inc
adc
and
sbb
fstpt
lea
arpl
mov
or
vmovaps
shlb
hlt
out
cmp
fsubr
cmp
jmp
ret
add
test
mov
test
xchg
negb
inc
mov
jge
adc
mov
subb
insb
test
fsubrl
mov
inc
jecxz
sbb
loopne
dec
into
cmpsb
sbb
mov
push
lods
shl
mov
sbb
xor
mov
dec
fwait
push
subb
fdivrl
jno
cmp
pop
push
pop
adc
push
sbb
or
push
inc
sub
xchg
pop
mov
cmc
scas
mov
dec
fistpl
cmp
fwait
cmc
cmp
and
into
jge
sub
mov
addr16
pop
jl
stc
mov
mov
and
movsl
sub
pop
jmp
lahf
jl
cltd
cwtl
repnz
addr16
enter
iret
push
dec
adc
adc
jg
arpl
mov
lods
repz
adc
adc
mov
lahf
jne
out
fcomps
ret
out
daa
clc
shl
and
or
mov
into
cwtl
adc
cmp
mov
sar
sbb
or
dec
adc
adc
sbb
das
add
pop
lret
ljmp
jne
enter
ror
pop
cld
filds
rcl
and
inc
adc
cwtl
mov
sub
add
or
ficompl
iret
sub
jbe,pn
js
adc
adc
das
mov
out
in
rcll
lea
subl
and
xor
adc
adc
push
jnp
inc
std
pop
or
jl
jbe
iret
insl
js
repz
cmc
mov
aam
cld
mov
jb
js
add
scas
int3
inc
test
mov
cmp
scas
rolb
loopne
scas
jns
outsl
jge
out
jecxz
aad
push
mov
push
adc
std
loop
mov
ret
jp
or
mov
daa
dec
pop
mov
adc
adc
loop
jle
aam
faddl
sub
and
imul
push
andb
mov
hlt
xor
in
or
mov
adc
add
dec
and
jae
xchg
fdivs
ljmp
xchg
sub
push
cmpsb
mov
adc
add
mov
aaa
call
push
lock
xchg
and
stos
daa
dec
xchg
push
mov
dec
lds
xchg
jbe
shll
pop
sbb
dec
mov
shl
cmp
xchg
adc
mov
out
jns
out
pusha
out
mov
inc
xchg
daa
dec
loop
mov
xor
js
leave
je
pop
and
mov
adc
test
divl
cmp
repz
mov
xchg
jecxz
jo
aas
sub
cmpsl
xor
mov
pop
jo
inc
xchg
ret
test
mov
fists
jecxz
int
xor
mov
call
gs
jae
inc
sbb
pop
in
mov
jge
adc
dec
xchg
and
or
or
in
or
xchg
jl
jl
insl
jl
xor
jb
sub
mov
into
pusha
adc
adc
pop
adc
mov
pusha
jge
adc
mov
dec
xchg
push
inc
stos
ficomps
push
adc
fcmovb
cwtl
xchg
and
mov
insb
inc
insb
addb
xchg
and
out
xchg
dec
sahf
sub
out
insb
fidivl
mov
cmp
xchg
and
lcall
dec
fisubrl
and
jle
repz
jbe
xchg
es
mov
orl
xchg
dec
test
aaa
lods
push
outsl
movsb
sbb
ffreep
cmp
fsubrs
sbb
dec
je
adc
adc
add
dec
pop
jecxz
jo
aas
sub
adc
fisubl
pop
xchg
imul
dec
ret
gs
xor
fisttps
push
test
mov
stos
fnstenv
pop
pop
insb
lods
inc
jmp
inc
in
adc
movsb
inc
pop
in
xchg
add
mov
or
gs
mov
pop
test
bound
sahf
xor
aam
or
stos
xlat
cmc
dec
fcom
call
cmc
add
dec
scas
and
push
clc
xchg
pop
in
shl
push
jmp
cmp
mov
dec
xor
loopne
mov
aaa
cmp
test
dec
icebp
or
mov
ss
mov
pushf
mov
pop
jns
pop
push
dec
pusha
rorb
mov
out
stos
pop
stc
jno
nop
jge
adc
cmp
lock
or
or
insb
adc
stos
inc
jmp
xchg
jmp
out
dec
add
inc
add
je
xchg
icebp
add
jae
fldenv
mov
cmc
addb
cltd
das
in
lods
loop
fsubp
jl
jecxz
adc
or
outsl
aaa
outsl
or
das
xor
iret
sarl
in
dec
in
in
push
mov
lahf
mov
pop
fidivrs
push
enter
push
or
push
jne
jns
add
lret
into
mov
insl
lock
pop
xchg
js
popa
cmp
mov
inc
and
icebp
dec
imul
dec
pop
cld
arpl
into
in
pop
scas
insb
imul
loope
out
stos
test
pushf
dec
test
dec
lea
cld
sub
in
ss
mov
mov
mov
jns
dec
dec
subb
mov
push
xor
lock
mov
mov
push
mov
adc
inc
inc
das
cwtl
lret
std
fisubs
mov
insb
test
add
leave
movsl
or
dec
inc
dec
xor
imul
in
and
jo
pusha
adc
inc
adc
push
ficoml
pushf
xchg
push
outsb
xchg
inc
mov
and
xchg
movsb
or
mov
lods
fnsave
es
lods
rorb
leave
scas
jge
test
ljmp
sbb
hlt
push
inc
bound
jl
pop
adc
push
repz
jae
loopne
dec
in
in
mov
in
aad
sub
aad
pop
loope
scas
push
test
popa
ret
add
xor
das
pop
test
xchg
out
mov
lods
lock
sbb
call
popa
fwait
cld
jl
pop
adc
dec
pusha
adc
adc
loopne
dec
pusha
jne
mov
pop
adc
push
dec
ficompl
adc
push
cmp
pop
or
cmpsb
mov
mov
or
fldt
or
aad
fsubl
test
jl
pop
adc
adc
fiaddl
lock
mov
mov
sbb
lcall
pop
sbb
and
add
pop
push
push
sbb
jp
das
movsb
insl
aas
adc
cmpsb
mov
jno
popa
ret
xchg
mov
adc
pop
aas
mov
inc
jbe
mov
ret
sub
pusha
dec
rorl
adc
dec
adc
pop
aas
xchg
icebp
xchg
lds
pop
fcoms
sbb
lods
fwait
xchg
repnz
fnstenv
pop
dec
test
stos
cmp
arpl
ret
xchg
fldcw
adc
mov
out
sub
in
ret
push
xor
mov
sbb
mov
xchg
mov
leave
xchg
fimull
int
mov
out
cld
call
scas
mov
add
jge
adc
loopne
fwait
cli
push
lods
push
ja
sbb
mov
inc
push
xchg
mov
mov
xlat
test
mov
scas
jl
cltd
stc
cltd
repnz
fwait
mov
sub
mov
dec
dec
lahf
cmp
sbb
xchg
push
pop
imul
mov
inc
and
daa
jbe
and
lods
mov
sbb
cltd
test
pop
adc
outsl
lods
mov
lcall
adc
xor
dec
sbb
pop
jne
movsb
or
bound
movsl
jmp
pop
adc
sbb
mov
push
daa
test
pop
adc
adc
mov
jns
xorl
push
mov
popa
add
pop
std
push
mov
rep
jb
inc
lods
mov
mov
mov
xchg
mov
cmpsl
and
push
adc
jae
push
iret
xchg
scas
xor
sbb
inc
jle
mov
cmc
mov
dec
ror
xchg
aaa
mov
in
hlt
stos
xchg
aas
popa
loopne
bound
andb
nop
fmulp
push
adc
data16
adc
and
inc
lret
cli
xchg
movsb
cmp
pop
repz
rorl
sbb
insb
mov
mov
jge
or
movsl
pop
mov
or
pop
sub
adc
push
iret
pop
dec
loopne
mov
popf
out
xor
jns
je
sub
pop
repnz
mov
in
xchg
pop
adc
pop
mov
les
popa
jge
out
sbb
mov
and
or
mov
mov
push
loope
xchg
xchg
sahf
scas
sub
dec
iret
pop
lods
les
mov
mov
testb
xchg
sbb
aad
adc
mov
scas
inc
adc
loop
das
es
dec
jmp
adc
jb
pushf
fildl
fildl
gs
stc
rolb
shlb
hlt
das
mov
test
fiaddl
xchg
mov
adc
fildl
xor
fiaddl
in
fiaddl
adc
add
cmp
movsl
fdivrl
mov
fwait
cmp
xchg
push
adc
imul
and
addb
dec
pop
push
or
std
inc
enter
pushf
fildl
push
das
enter
xchg
cmpsb
lea
xor
dec
arpl
dec
dec
dec
pushf
fildl
in
mov
sbb
adc
add
jo
add
push
fildl
pop
fildl
push
fildl
xchg
addb
scas
sbb
rclb
imul
push
repnz
cmp
mov
mov
lock
xor
and
cmp
mov
ret
test
sbb
fwait
in
pop
pushf
fildl
aad
lods
fildl
mov
add
rcr
adc
fildl
cmp
fcoms
icebp
hlt
inc
xchg
lods
dec
sbb
push
loop
cmp
shll
sbb
out
mov
xchg
jnp
inc
xchg
lods
dec
sbb
repnz
mov
push
mov
dec
cmp
or
xchg
das
sub
js
call
nop
sub
nop
daa
xchg
hlt
cmp
add
mov
outsl
sbb
faddl
jle
int
repnz
lods
pop
mov
and
shrb
faddl
push
add
pop
dec
faddl
jo
add
cwtl
faddl
cmp
shlb
jl
mov
fstl
jo
xchg
and
dec
cmp
add
in
mov
sbb
bound
imul
mov
aam
mov
out
and
data16
cmp
adc
sbb
jnp
into
adc
pop
jmp
cmp
fstpt
daa
ret
add
sbb
inc
cltd
lods
or
or
xchg
icebp
cmp
fldl
cmp
fucomi
faddl
hlt
faddl
cld
faddl
add
add
or
add
adc
add
sbb
add
das
fldl
cmp
dec
popf
sbbb
inc
shrl
cmc
mov
ficomps
jmp
sub
aaa
jb
std
in
xor
inc
test
fldenv
std
mov
sti
int
inc
and
les
and
aaa
xchg
cmp
add
mov
dec
fldl
push
fldl
pusha
fldl
je
add
outsb
int
mov
mov
scas
nop
xor
inc
xchg
rep
push
adc
push
movsb
inc
push
cmpsl
inc
pop
mov
lods
mov
lods
push
test
mov
mov
shrb
adc
jmp
into
mov
jne
call
out
nop
mov
jl
adc
sbb
cmp
push
stc
gs
mov
xor
mov
pop
mov
pop
dec
adc
push
or
mov
call
sub
xchg
inc
push
lods
mov
lods
jbe
lods
ja
stos
jp
popf
mov
xchg
push
scas
pushf
adc
fmull
in
xlat
loope
push
add
shlb
add
mov
or
add
xor
pushf
dec
push
xchg
xor
sarb
sbb
push
in
outsb
cmp
fs
cltd
adc
adc
add
or
test
dec
inc
push
or
jbe
mov
daa
mov
inc
xchg
fbld
mov
popa
jecxz
xchg
js
shr
xchg
cmp
dec
mov
into
mov
mov
adc
lods
movaps
sub
add
pop
insb
sbb
dec
lahf
movsb
fsubrs
push
ja
cmp
repnz
notb
cltd
mov
int3
push
psllw
inc
cmpsb
lahf
adc
add
mov
daa
push
and
lods
sahf
mov
cmp
mov
scas
and
dec
fcompl
ret
xchg
repnz
sub
mov
pop
pusha
loopne
cld
or
sub
out
int
adc
adc
outsb
dec
dec
xchg
das
fidivrs
fwait
pop
add
aam
mov
test
popa
ret
or
mov
jle
jne
js
jmp
scas
lods
outsb
scas
mov
xchg
or
int
and
adc
mov
sbb
int
dec
arpl
outsb
push
xor
fidivl
roll
enter
lahf
adc
mov
cmp
int
arpl
out
mov
adc
push
mov
lcall
inc
push
pop
adc
out
push
inc
jl
push
ret
xchg
push
std
popf
sub
sbb
pop
aam
push
pop
adc
dec
jbe
outsl
int3
lcall
insl
pop
jbe
xlat
xor
ret
mov
mov
stc
andl
cmp
clc
mov
ret
xchg
dec
xor
int
adc
pop
test
pop
adc
fldenv
test
lcall
pop
adc
rclb
jp
jg
push
mov
popf
lods
shlb
dec
call
adc
xchg
and
icebp
sbbl
loopne
or
push
pop
adc
fdivrs
lret
outsb
jbe
stos
js
push
or
mov
push
xor
pop
cmc
cltd
pop
add
mov
shrb
inc
xchg
pop
dec
lcall
xchg
inc
mov
mov
dec
mov
mov
sbb
mov
fnsave
pop
fldcw
lcall
dec
movsb
inc
shl
out
pmuludq
imul
int3
adc
jecxz
cmpsb
rorl
fstpt
enter
rcrb
jl
inc
in
fisubl
inc
xor
dec
bound
inc
cmp
xor
daa
pop
in
jge
dec
pop
jnp
loopne
mov
shlb
icebp
inc
mov
and
add
xchg
lds
jl
lock
mov
lcall
ljmp
jne
mov
push
fisubrs
ret
pop
adc
in
inc
mov
movsb
or
xchg
out
int
in
dec
insl
dec
add
mov
outsl
dec
incb
mov
pop
ret
push
mov
jecxz
cwtl
lock
fs
mov
jae
sarb
int
iret
sahf
mov
lahf
add
inc
adcl
sbb
push
mov
xchg
mov
inc
jne
mov
lret
loopne
rol
rcr
adc
fcoml
xlat
subb
ja
aam
mov
push
iret
sub
mov
jg
push
push
loop
out
cmpsb
test
inc
or
sbb
mov
lea
jo
cmpb
xchg
clc
fcmove
in
imul
pop
adc
jo
fs
lcall
decl
test
movsl
xchg
in
addl
jne
repz
dec
adcl
in
insl
movsb
jns
cmpsl
je
loopne
sub
xchg
jae
cmp
nop
jecxz
fisubs
fadds
jg
rep
loop
popl
sbb
pop
push
pop
inc
dec
push
inc
cmpsl
jns
inc
adc
mov
ljmp
cmp
cld
pop
out
fldl
cmp
fcoml
add
or
mov
sub
cltd
adc
icebp
push
arpl
mov
mov
or
in
cmp
sahf
jl
inc
fimuls
ret
stos
shrb
test
push
mov
mov
adc
xor
pusha
and
lods
pop
aas
xor
in
aas
ret
jae
fcmovnbe
xchg
and
cmp
xchg
movsb
xchg
aaa
ds
insl
aas
add
pop
movsl
mov
test
xchg
jne
inc
pusha
mov
out
adc
mov
jb
jb
lods
sarb
fdivrl
rclb
inc
cmp
mov
push
outsl
pop
sbb
out
cmp
push
pop
adc
mov
das
cmp
sub
jo
jle
ljmp
jecxz
aad
pop
enter
dec
inc
out
cmc
jnp
dec
jp
push
pop
adc
ret
xchg
ja
cltd
xorl
in
inc
xchg
out
inc
ffreep
cmp
mov
mov
loopne
xor
jle
adc
adc
mov
pop
push
lea
sub
mov
fstps
jns,pt
inc
icebp
test
pop
jmp
jo
aas
sub
iret
mov
ret
popa
push
sti
jl
int
dec
inc
xchg
xor
lods
xlat
push
ds
repnz
jns
pop
outsb
pop
push
bound
add
sbb
or
add
repnz
into
lcall
popa
pop
push
outsl
fstpt
out
and
add
ss
sbb
add
sub
xlat
imul
in
adc
adc
enter
xchg
scas
or
repz
or
aaa
jecxz
scas
fdivs
pop
jno
pop
dec
imul
add
mov
insb
lret
adc
loope
lods
lcall
jbe
inc
inc
push
lcall
push
add
pop
mov
pop
xor
fidivl
cmpsb
ret
adc
cmp
fisubrl
or
add
jle
int
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
jb
xor
sbb
mov
loope
cmp
dec
insl
test
mov
test
dec
repz
ds
jbe
and
push
cmc
in
and
sbbb
inc
shrl
mov
cmp
add
call
adc
add
inc
in
adc
mov
mov
cmp
jne
in
jnp
lock
or
lret
cmp
iret
xor
out
mov
sbb
sbb
sbb
push
outsl
into
push
outsb
leave
pop
ja
xor
adc
neg
mov
punpckhdq
push
daa
loope
adc
cmc
mov
loopne
popf
push
lret
sbb
fistpll
and
test
add
sbb
mov
pop
out
adc
jo
jge
jb
xor
xor
pop
sbb
aas
mov
adc
addr16
out
adc
mov
in
adc
out
adc
inc
adc
mov
pop
pop
inc
fstps
fcompl
shll
inc
and
xchg
out
adc
mov
mov
mov
mov
stos
lock
mov
xlat
xchg
out
mov
adc
pop
rcll
sub
sub
sahf
inc
and
add
pop
sbb
sub
repnz
cmp
ret
cmc
mov
out
adc
dec
loopne
out
adc
adc
adc
adc
adc
add
lahf
out
adc
shrb
add
and
cmp
add
cmpsb
fldt
outsb
sbb
mov
xchg
add
fadds
fcmovnb
lods
bound
pop
andb
pop
imul
test
add
std
push
mov
out
adc
out
adc
out
adc
stos
xchg
and
cli
in
nop
repz
test
push
or
push
fbstp
lea
outsb
adc
cld
test
daa
sbb
out
mov
test
xchg
scas
push
lahf
jno
jne
aas
sub
adc
fidivs
mov
sbb
cmp
and
ss
and
test
pop
movsb
cs
sbb
inc
scas
lcall
insb
out
mov
ss
jnp
jb
lods
xor
push
add
mov
pop
lods
out
jo
leave
call
nop
or
dec
loop
jns
mov
int
les
cs
cltd
js
xor
mov
je
pop
jl
jnp
iret
mov
insl
xor
push
or
sub
repnz
cltd
dec
xor
insb
sbb
and
push
adc
mov
adc
fisubl
stos
jno
loopne
push
adc
sub
out
and
jp
mov
and
popa
sub
dec
xchg
sub
sbb
fs
sbb
adc
repnz
adc
cmp
dec
rolb
out
data16
and
hlt
add
sub
ret
gs
outsb
mov
int
nop
lret
into
dec
sbb
pop
xor
pop
imul
loopne
push
adc
add
movsb
mov
jbe
aaa
cmp
arpl
jge
adc
mov
push
int
ss
and
jle
adc
mov
arpl
xor
xchg
daa
dec
cmpsb
lds
jle
adc
bswap
out
xchg
call
adc
lret
xchg
sub
roll
inc
dec
xchg
es
and
or
xor
and
aam
es
int3
iret
mov
dec
xchg
cs
dec
shll
jo
cwtl
xor
out
pop
mov
adc
aam
insb
add
pop
adc
fcoml
adc
dec
loopne
pop
adc
imul
push
call
imul
jo
add
sub
test
lea
or
pushf
sti
dec
scas
jnp
push
fcoms
stos
and
mov
mov
add
ds
inc
pop
jge
adc
inc
ret
ret
mov
dec
fstps
pop
movsl
dec
fnstsw
insl
mov
icebp
daa
in
pusha
adc
or
sbb
sbb
testb
pop
adc
imul
outsl
popa
rclb
sub
loope
adc
jns
addb
adc
adc
cmp
inc
fcomps
repz
pusha
mov
pop
insl
out
fdivl
cmp
add
insl
add
pop
adc
xor
dec
movsl
jmp
jb
adc
adc
dec
push
jno
inc
lea
sbb
inc
add
mov
loopne
pop
adc
mov
sbb
dec
pop
adc
stc
rcr
inc
loopne
pop
adc
inc
pop
mov
push
sahf
mov
pop
adc
jge
insl
mov
pop
adc
dec
pop
adc
mov
xorb
pop
es
add
fcompl
ret
das
lds
jne
inc
lcall
inc
mov
rclb
inc
ljmp
mov
or
push
shll
int3
shrl
xor
shll
mov
and
push
call
call
loopne
jle
inc
lcall
sbb
push
in
fcompl
sub
sbb
jecxz
imul
test
fucomp
lahf
jne
inc
push
mov
inc
ret
push
scas
fimuls
clc
and
cmc
pop
hlt
xchg
cmpl
out
mov
repz
fidivrl
jmp
aaa
ljmp
sbb
pop
jns
enter
cs
pop
in
loop
ffree
test
insl
ss
cmp
add
cwtl
inc
sbb
popf
xchg
dec
adc
jns
or
push
push
and
inc
xchg
inc
push
xchg
pushf
les
lret
xchg
xor
cmpsl
xor
cltd
jp
and
stos
mov
fisubs
sbb
in
dec
push
les
in
fs
xchg
mov
inc
xchg
lea
stos
lock
or
iret
insl
cld
lcall
jl
xor
adc
jle
adc
xor
sbb
pop
sahf
stc
mov
lcall
xchg
ds
sub
push
lret
xchg
sub
lahf
cmpsb
in
push
out
xchg
dec
sahf
sub
mov
das
jno
mov
and
hlt
cwtl
loopne
scas
xchg
fs
xor
mov
std
int
mov
pop
ljmp
imul
dec
pop
or
insb
pop
je
inc
inc
jno
mov
ss
rcl
fstpt
mov
icebp
jmp
sub
cmp
or
mov
add
push
ficompl
mov
cwtl
pop
xchg
mov
fwait
ret
insl
ret
or
sub
fimull
jns
mov
addb
xchg
and
in
push
loop
jp
icebp
aaa
fs
xchg
into
pushf
sbb
push
ljmp
test
mov
adc
pop
lahf
xor
ror
pop
push
push
pop
out
int
xor
xlat
lods
pop
test
pusha
xchg
js
or
adc
insb
push
inc
jle
fstpt
adc
push
jecxz
dec
xchg
mov
fstpt
daa
and
dec
cwtl
or
lods
jl
jl
jp
movsb
sbb
cmpsb
mov
and
inc
inc
pop
frstor
es
and
inc
leave
sub
pop
adc
fimuls
andb
fwait
pop
lret
dec
rorb
ds
jo
push
dec
repnz
in
pop
outsl
ret
mov
pop
dec
and
out
std
cmp
xchg
pop
js
data16
ds
and
push
adc
xchg
dec
sub
push
testb
add
mov
cmpsl
pop
and
mov
pop
push
es
bound
lcall
sti
jno
jl
inc
jge
add
fidivl
scas
mov
xchg
adc
adc
pop
rol
push
or
leave
dec
fcomp
imul
shll
pop
inc
pop
fbstp
cmp
ja
and
jge
or
xor
xchg
xor
mov
fs
push
jo
pop
add
xor
xchg
sbb
cli
jp
popa
mov
dec
enter
cwtl
or
pop
test
bound
bound
sbbb
mov
xchg
xchg
ds
or
shrb
js
in
cmc
js
aad
imul
dec
mov
ljmp
sti
fcmovbe
push
into
test
lcall
aaa
aam
fnstsw
sub
fnstcw
jo
nopl
xchg
jmp
imul
jmp
js
int
inc
iret
xchg
dec
mov
popa
shr
outsl
push
sbb
je
cmp
pop
insl
mov
pop
adc
jmp
jb
fists
out
mov
in
stc
rolb
lods
push
popa
xlat
mov
iret
mov
lods
pop
add
pop
test
aas
lcall
shll
cmc
leave
add
pop
mov
cltd
data16
xlat
fcmovnbe
mov
lock
fsubrl
fwait
ret
sahf
test
xor
jo
dec
orb
int3
jmp
ja
mov
imul
scas
or
cltd
mov
add
adc
push
fwait
dec
push
daa
jae
pop
adcl
push
adc
push
xchg
insl
fstpt
sub
out
cmp
xchg
push
jmp
jo
aas
sub
adc
fidivrs
pop
and
fdivs
xchg
inc
inc
frstor
dec
xchg
das
pop
aaa
add
hlt
adc
fidivs
insl
inc
inc
or
xchg
cmpsb
mov
mov
ss
cs
out
ja
fcmovb
add
and
iret
adc
dec
pop
sub
jnp
ja
mov
fdivs
aaa
xchg
mov
xor
lods
dec
adc
pop
aas
nop
bnd
pop
pushf
mov
add
insb
inc
in
into
adc
dec
adc
pop
leave
ficoms
arpl
sbb
out
xor
out
sbb
es
adc
mov
dec
pop
xor
lods
pop
aaa
sbb
xor
repnz
lock
insl
and
mov
pop
mov
push
xchg
and
insb
push
cmpsl
mov
pop
out
out
fs
sbb
mov
outsb
jo
leave
test
das
mov
pop
ja
inc
outsl
or
xchg
sub
loopne
mov
ffree
imul
inc
sbb
out
aad
fisubrs
out
lock
mov
imul
adc
mov
out
xorl
cwtl
mov
movsb
imul
rol
push
outsb
push
jp
dec
fs
jno
sar
or
scas
dec
pop
sbb
aaa
push
js
fucomp
arpl
sub
loopne
adc
lret
orb
in
and
jnp
dec
pop
add
je
xor
negl
xor
jle
lds
mov
movsb
pop
pop
push
out
jmp
inc
popa
inc
test
inc
dec
sub
test
stos
push
ret
in
inc
outsb
mov
cmp
addr16
gs
scas
cmp
pop
stos
incl
fisubrs
push
movsl
xchg
pusha
mov
filds
adc
xor
or
cmpb
imul
cmp
mov
movsl
inc
dec
cmpsb
jo
je
dec
and
mov
jmp
and
dec
fwait
xchg
lahf
enter
jb
xchg
and
cmp
sbb
jecxz
movsb
inc
lret
inc
push
jae
fisubrl
and
aaa
sub
xchg
mov
cmc
gs
sub
into
rorl
add
mov
xchg
outsb
mov
mov
cli
xor
cltd
notb
dec
and
loop
lds
mov
packuswb
in
xchg
add
sbb
jge
adc
jle
fisttpl
or
cld
lods
rcrl
pushf
lret
xchg
sbb
insb
dec
lds
mov
out
dec
xor
mov
mov
scas
mov
push
jae
loopne
sub
xchg
and
jbe
pop
push
movaps
dec
mov
hlt
sub
dec
or
repnz
and
cmp
xchg
out
int3
jnp
pop
sub
mov
cmp
sub
lahf
pop
aad
xchg
adc
je
inc
push
lea
push
paddb
jecxz
push
icebp
stos
js
icebp
mov
pushf
cmc
mov
push
jge
cmp
mov
loop
jl
outsb
ffreep
xlat
ja
mov
lods
pusha
and
mov
pop
xor
push
int3
data16
lock
dec
and
push
and
sbb
insb
mov
xchg
ret
lds
sub
sbb
pushf
aaa
insl
push
push
pop
adc
out
mov
xor
xchg
fldenv
pop
dec
out
movsl
xchg
lret
andb
dec
pop
fistpl
es
sahf
cmp
sbb
addr16
mov
adc
test
push
sbb
xor
push
sbb
mov
dec
xor
mov
push
adc
dec
adc
push
pop
fbld
dec
xor
cmp
fcomps
dec
ret
adc
and
icebp
gs
jge
xor
mov
movsl
mov
push
adc
int3
xor
push
adc
stc
test
mov
je
in
or
dec
aad
jg
add
lahf
sub
lock
pop
stos
adc
mov
push
jbe
push
in
mov
xchg
push
in
pushf
push
inc
ret
or
xchg
cmp
pop
mov
leave
xchg
and
leave
test
into
sbb
xchg
ds
test
push
roll
push
into
fwait
and
aad
xchg
sbb
adc
pop
sub
push
dec
xchg
push
jmp
jmp
pop
cmp
mov
es
mov
jbe
inc
inc
or
cmpsl
xlat
lods
pop
mov
cmpsb
push
lods
fs
in
xchg
ja
cltd
les
adc
out
iret
in
in
imul
xchg
movsb
loop
xchg
mov
rorl
adc
push
insb
and
insl
lods
mov
sub
out
cmp
push
fs
repz
adc
pop
jmp
aas
pop
jl
xor
pop
fmuls
jp
fisubl
ss
stos
sub
addr16
loopne
test
hlt
mov
dec
xlat
adc
inc
pop
jle
mov
xchg
cmp
jae
out
mov
std
adc
test
xor
sub
fs
adc
cs
cld
xchg
shl
adc
je
push
dec
dec
add
repz
dec
add
fwait
rclb
pushf
mov
cld
inc
lods
xchg
lret
std
jle
rorb
scas
sbb
push
xchg
scas
xlat
out
push
jae
es
adc
test
push
mov
push
shl
inc
out
faddp
add
pop
cmc
mov
or
movsl
jnp
dec
fwait
push
pusha
jg
adc
fcmovne
mov
ret
inc
jl
mov
ret
pop
jle
push
push
sub
xchg
aaa
sbb
add
mov
insb
in
pop
mov
pop
dec
xor
mov
mov
mov
jns
cmp
das
lds
daa
cmp
aaa
dec
lcall
mov
int
out
sbb
xor
adc
adc
mov
cld
repz
dec
xor
cmp
call
data16
sbb
scas
pop
dec
call
mov
cli
jns
imul
daa
cmp
lret
jae
movsl
ret
test
push
cmp
aad
push
adc
mov
mov
inc
xchg
ja
xchg
out
inc
mov
sbb
movsb
inc
test
adc
adcb
adc
pop
movsl
push
inc
lret
xor
std
adc
mov
aas
xchg
arpl
and
ja
xor
and
in
add
sbb
add
pop
or
push
cltd
repnz
call
shrb
bound
mov
fs
stos
dec
aad
fidivrs
gs
inc
xor
push
mov
fimuls
sub
icebp
popf
xchg
lcall
adc
mov
movsb
sub
mov
add
test
mov
std
insb
fstl
and
shr
movsb
mov
lods
jae
xchg
pop
rorb
sbb
pop
enter
les
lods
xchg
jne
mov
aas
jecxz
out
or
and
mov
js
out
pop
jo
fwait
inc
dec
cmp
xchg
les
lret
pop
ljmp
enter
adc
or
jne
ret
jno
ret
jl
lds
pop
xchg
fiaddl
xor
enter
jl
jl
or
push
sar
lea
arpl
ljmp
shll
cmp
cmpl
mov
or
mov
daa
mov
xchg
and
ja
push
aaa
cmp
insb
lds
cld
fs
inc
cmpsl
dec
xchg
xor
daa
dec
xor
push
xchg
ja
dec
push
jb
ljmp
inc
loopne
mov
adc
fdivs
nop
ja
adc
dec
xchg
das
aad
insl
jns
dec
pop
inc
push
ljmp
arpl
xchg
xchg
or
out
cmp
sbb
repz
xchg
adc
pop
lods
movsb
repz
and
jo
mov
mov
push
mov
jns
dec
xor
mov
or
daa
cmp
daa
lds
fistl
dec
mov
mov
rcr
js
jbe
mov
mov
sar
lret
jo
jae
ret
add
xor
xor
lods
cli
mov
int
aaa
xchg
lcall
insl
ljmp
data16
and
fwait
pop
xchg
cs
sbb
loop
dec
pop
adc
fdivs
mov
lock
and
pushf
jl
mov
bndldx
sub
adc
pop
dec
push
clc
movsl
xchg
stos
xchg
jb
cmc
das
or
pop
ljmp
cmp
mov
mov
sub
sub
dec
dec
add
in
sub
sbb
sbbb
jb
stos
stc
add
push
insb
mov
push
inc
push
jle
sub
jle
pushf
cmp
xchg
mov
push
ret
test
jle
cmpsl
fisttpl
mov
aad
sub
xchg
xchg
jae
scas
xor
inc
inc
adc
out
add
popa
icebp
ss
add
sbb
pusha
dec
test
mov
dec
iret
pusha
xchg
cmp
mov
aam
and
test
loope
and
ss
mov
add
outsb
push
mov
jge
lcall
xchg
bound
adc
push
adc
in
gs
mov
into
xchg
mov
xchg
loopne
sub
loope
fwait
lds
lahf
jle
adc
ret
pavgb
shll
and
jo
in
rcll
adc
inc
sbb
mov
inc
add
int
xor
mov
pop
mov
xchg
rclb
gs
nop
lahf
pop
mov
outsb
fisubs
popf
jo
mov
mov
cmp
xchg
mov
and
mov
fwait
add
icebp
das
adcl
pusha
cs
movsl
mov
xchg
lret
push
enter
adc
test
cmpl
pop
lds
jo
pop
adc
iret
inc
lea
jo
fwait
mov
and
or
fptan
das
pop
inc
ficomps
call
es
adc
and
mov
inc
push
mov
push
das
xchg
pushf
xor
mov
data16
fwait
mov
mov
lcall
xchg
je
cmp
clc
mov
cli
into
lock
pop
adc
std
pusha
gs
cmp
movsl
mov
mov
push
mov
pop
lret
xchg
push
cs
jl
mul
sahf
mov
xor
pop
dec
gs
sbb
pop
inc
insb
js
push
adc
test
in
jmp
scas
cmc
push
test
pushl
fs
pop
pusha
mov
repnz
js
push
adc
sub
cmpsb
ds
push
mov
xchg
bound
sbb
push
addr16
out
ds
ret
adcb
adc
push
lods
fisttpl
cmc
fs
and
aaa
xor
mov
push
push
movsb
jg
push
repz
mov
sahf
div
push
pop
adc
mov
rcl
xor
xchg
outsl
sub
jne
sahf
pop
sbb
mov
repz
ds
repnz
cmp
sbb
xchg
and
popa
push
mov
test
dec
xlat
xor
into
sarb
add
mov
enter
jns
inc
inc
sbb
jl
xchg
lret
push
dec
js
push
adc
mov
out
cmp
popf
mov
hlt
nop
test
pop
pushf
lods
pop
cmp
sub
pop
adc
or
push
dec
leave
xchg
fidivrl
mov
mov
mov
test
jl
jl
cmovp
fiadds
pop
pushf
out
lock
call
rcrb
je
frstpm(287
fwait
cmp
mov
lds
in
xchg
xchg
sbb
jp
mov
in
shl
xlat
stc
rcrl
push
loop
mov
push
xor
int
in
pop
xchg
dec
xchg
cs
insb
leave
cmp
sbb
ror
data16
jnp
lcall
addr16
pop
xchg
in
mov
roll
movsl
fadds
push
mov
popf
cmc
pop
pop
repz
notl
jns
adc
adc
push
fwait
mov
pop
inc
adc
jg
dec
lsl
cmp
push
adc
add
sub
outsb
test
cmp
faddl
dec
mov
ja
mov
pop
repz
pop
pop
pop
xchg
int3
sbb
or
loopne
ffreep
mov
mov
add
xchg
insb
push
daa
xchg
sbb
rcr
mov
gs
and
sti
sub
sub
dec
cmp
jp
lret
mov
push
pop
cld
sub
je
push
adc
sti
sbb
rcr
mov
out
daa
mov
adc
xor
ret
adc
mov
scas
popl
jb
xor
ss
ret
mov
sahf
sarb
insb
scas
rcr
test
mov
ret
sbb
mov
mov
packuswb
addl
popf
xor
add
fists
or
jne
sar
or
in
nop
lret
adc
add
hlt
data16
sbb
pop
aam
adc
ret
pop
insb
adc
lock
rol
jo
imul
ficompl
shrb
cmp
sub
adc
leave
rcrl
pop
call
imul
xor
imul
push
cmc
movsb
sbbb
sub
xor
mov
jns
int
push
inc
sbb
sub
sub
mov
pop
nop
dec
and
insb
cmp
in
add
dec
in
xor
add
adc
push
fptan
outsl
mov
ss
push
adc
xchg
push
stc
stc
mov
inc
in
rol
incl
ret
push
lock
push
loopne
dec
test
mov
fdivrs
and
outsb
inc
lret
or
pop
jg
push
mov
adc
fisubs
sbb
sbb
mov
inc
outsb
dec
insl
and
xchg
lods
mov
sub
and
mov
mov
popa
ret
xchg
es
pop
mov
pop
insb
adc
cs
xchg
sbb
xchg
movsb
adc
aas
push
and
nop
call
out
int
pop
repnz
add
fdivs
adc
mov
fisubs
iret
lcall
insl
pop
jle
xchg
mov
jg
adc
cltd
push
sbb
rcrb
mov
scas
cmpsb
xchg
lods
mov
push
int
ss
inc
push
push
aas
xor
sbb
es
push
test
sahf
mov
in
cmp
leave
lret
out
sbb
pxor
movsb
push
pop
fdivl
lea
dec
pop
adc
sub
sbb
out
cmp
push
mov
fwait
mov
lods
push
add
loopne
sub
jg
xor
test
push
aaa
das
mov
call
sbb
cmp
lahf
pop
mov
jge
insb
xor
test
movsl
xchg
or
insb
rcr
mov
mov
fdivs
cltd
ret
sub
fs
adc
outsl
cwtl
mov
arpl
mov
dec
pop
scas
mov
ret
xchg
sbb
into
scas
pop
aas
lcall
fstl
inc
aas
and
and
lds
jge
insb
cmp
into
scas
pop
aas
xchg
adc
leave
jge
insb
rcr
mov
sub
cmp
movsb
dec
pop
adc
fst
mov
cmp
fnsave
pop
cltd
mov
lods
imul
and
push
int
hlt
pusha
dec
outsl
lds
in
lret
jge
mov
jne
cs
pop
sti
push
pushf
mov
movsl
arpl
repnz
mov
sub
mov
sbbl
sahf
pop
cmpsb
and
and
mov
leave
push
push
dec
cwtl
push
push
cmp
hlt
push
jns
lahf
sbbb
pop
lea
push
or
mov
fucomp
sub
test
mov
fs
shl
cltd
je
call
mov
or
imull
jle
es
xor
push
adc
arpl
jo
push
rorl
sbb
aaa
ret
jo
insb
in
pushf
inc
aam
mov
leave
push
push
dec
adc
dec
ss
mov
xchg
mov
cmp
nop
mov
xor
rcrb
aaa
mov
inc
rolb
mov
repnz
xchg
fiadds
cwtl
bound
dec
cs
mov
sbb
les
insl
dec
mov
pop
adc
test
shlb
mov
jo
fnstcw
fldcw
lds
jne
pushf
mov
cmpsl
sub
mov
dec
pop
adc
fdivl
clc
out
adc
xchg
xor
loop
fcomps
popf
jns
lret
sub
mov
js
jecxz
mov
xor
xor
repz
sub
pop
adc
sub
xchg
pop
dec
inc
mov
decl
adc
loope
inc
out
push
xor
std
mov
cmp
jnp
adcl
outsb
mov
jp
mov
js
in
rorb
fcoms
fists
out
xor
not
out
sub
mov
push
push
xlat
xchg
popa
push
int3
cmp
movsb
cmpsb
into
pushw
imul
dec
sbb
fidivrs
sub
sub
dec
pop
int
repz
xchg
and
mov
cmpsb
insl
pop
fildll
cmpsb
mov
rcll
pop
mov
pop
dec
ss
sahf
mov
cmpsl
sbb
push
sub
cmp
or
inc
push
and
mov
inc
in
xor
aas
and
aas
sub
cmp
fs
andl
jo
pop
mov
inc
inc
loopne
mov
insb
fdivs
push
mov
ss
pushf
das
pop
aaa
mov
push
fiadds
test
icebp
add
ja
repnz
lds
mov
sbb
push
mov
fcoms
lods
loopne
subb
icebp
inc
bound
xor
xor
leave
lea
cmp
inc
cld
dec
xchg
and
movsl
adc
dec
jmp
pusha
mov
das
mov
xor
xchg
sub
repz
sti
xchg
jo
adc
mov
and
mov
cmpsb
adc
push
inc
ffreep
xorb
dec
adc
popa
ret
push
jns
lcall
pop
push
test
xchg
aam
xor
stos
pop
pop
sarl
out
adc
hlt
xor
fidivrl
xchg
mov
pop
mov
scas
mov
inc
lret
clc
out
jb
xlat
xor
es
mov
outsl
nop
outsb
fisubrs
stos
dec
in
inc
out
mov
xchg
jg
inc
lcall
repnz
inc
xlat
rcrl
aas
sub
cmp
or
cmp
and
jl
icebp
outsl
aad
hlt
pop
add
sbb
insl
lds
jns
and
sbb
mov
psllq
xchg
mov
cld
movsl
nop
scas
xchg
jb
repz
in
and
jae
cmp
add
mov
int3
bound
loopne
test
fwait
loopne
imul
pop
orb
arpl
fcompl
cmp
dec
bound
cwtl
and
call
pusha
mov
inc
test
push
push
cmp
out
in
lea
bound
or
out
add
call
shll
jnp
xchg
sbb
shlb
out
hlt
popf
hlt
loopne
jno
les
xchg
inc
call
fistl
pop
xor
bound
xlat
inc
ja
and
pop
adc
mov
mov
mov
pop
loope
add
aaa
sbb
popa
push
push
push
ss
movb
mov
sbbb
lret
addr16
out
inc
inc
lds
cli
stos
mov
cmp
int3
rclb
aas
sbb
pop
fldl
mov
insb
dec
or
or
mov
dec
imul
fcmovnbe
dec
sub
sub
lcall
xor
sbb
js
rclb
mov
mov
xchg
jmp
mov
sbb
jecxz
imul
fsubl
push
outsb
ret
push
lret
jae
cwtl
inc
xchg
xchg
pop
adc
adc
test
arpl
pop
cwtl
addl
add
sbb
cmp
sub
xchg
mov
cmp
dec
pop
mov
jle
sub
loop
les
adcl
cmp
shll
pop
jne
jno
outsl
daa
test
mov
enter
push
pop
sub
in
movsl
jbe
mov
outsl
inc
cs
pop
test
sbb
push
sbbb
xchg
es
add
xchg
inc
lahf
jle
adc
cmp
out
inc
into
fcmovnbe
popa
mov
andb
cmc
lea
cmp
test
jle
rcrb
fmul
aad
test
pop
jmp
jo
aas
sub
adc
shlb
pop
xchg
gs
outsl
fdivs
sbb
gs
or
xchg
jle
jbe
inc
dec
mov
ret
jne
jo
sarb
push
and
push
sub
and
test
fwait
lea
insl
sbb
ret
sbb
inc
nop
cmpsb
mov
jo
int3
nop
cmc
pop
or
mov
roll
pop
das
mov
jmp
and
jle
push
insb
pop
pop
in
loopne
lods
xchg
insl
dec
rolb
cli
in
xchg
push
nop
pop
pop
leave
inc
xchg
dec
lds
push
loope
in
xchg
pop
dec
pop
in
pop
out
je
sbb
xchg
lods
lcall
jae
push
insl
and
sahf
mov
adc
jp
shll
fstp
jge
outsl
lret
les
cmp
xor
sahf
cmp
mov
imul
adc
mov
in
test
je
xchg
ret
jnp
lock
ret
jo
add
mov
pop
mov
sbb
gs
push
ficompl
lds
in
xchg
inc
out
jo
mov
imul
ja
test
fsub
ja
lahf
jo
adc
jae
in
pop
mov
fdivrs
pop
adc
iret
jo
lcall
xchg
fiaddl
int
mov
xor
xlat
jo
sbb
cltd
jp
mov
rolb
aas
orl
pop
shll
insl
lahf
pop
out
js
insl
rol
pushf
test
out
jmp
xchg
loop
cltd
outsl
xor
sub
cmpsl
outsl
xchg
je
mov
les
test
movsb
pushf
fisubrl
stos
pop
call
mov
sbb
lret
arpl
cmp
out
xor
pop
and
xlat
out
mov
orl
aad
shrl
cmp
mov
in
xchg
sub
mov
in
sbb
xchg
jg
lea
loop
test
mov
pop
or
push
adc
aam
mov
iret
inc
pop
imull
jge
leave
mov
out
fsubrs
out
mov
add
cmpsl
mov
mov
and
addr16
mov
xchg
sub
sub
jae
pop
fnsave
mov
lds
push
das
stos
add
adc
adc
mov
sbb
dec
into
cmp
into
cmp
inc
mov
dec
and
mov
dec
and
repnz
mov
sbb
lods
xchg
leave
idivw
adc
ficoml
andl
pop
adc
je
sub
in
jo
sar
out
or
mov
sahf
mulb
mov
pop
test
xlat
sub
adcl
mov
xchg
fisubrs
pusha
and
xchg
into
cli
fbstp
mov
cs
ljmp
shl
shrl
jno
popf
fsubr
xchg
daa
lea
push
sub
scas
and
inc
icebp
lods
jnp
test
push
int
pop
sub
cld
mov
mov
push
paddb
lcall
mov
sbb
or
pop
or
push
sub
sub
push
dec
aaa
sub
xchg
daa
adc
sbbb
sbb
das
pop
adc
ds
dec
jb
outsl
ja
cmp
es
xor
jo
or
repz
repz
cmc
popf
dec
ret
hlt
xchg
jg
lret
adc
jne
fdivrs
adc
xchg
scas
mov
ret
fisttps
out
mov
and
sub
js
sub
mov
fstpt
add
repz
adc
jp
dec
xchg
das
pop
jg
hlt
jg
adc
jle
adc
adc
sbb
jp
in
push
adc
hlt
adc
adc
push
pop
pop
inc
or
lret
test
push
adc
imul
cmp
cld
ss
mov
push
pusha
pop
stos
fidivs
pop
jbe
clc
repnz
inc
mov
pop
adc
mov
adc
jge
loopne
bound
inc
pop
adc
sbb
pop
adc
movsb
repnz
scas
mov
or
insl
ret
pop
cld
pop
aam
mov
stos
pop
in
repz
jle
adc
test
mov
adc
repz
inc
pop
adc
out
pop
xlat
cmp
inc
js
int
dec
push
and
pop
scas
mov
cmp
adc
fisubrl
unpckhps
xor
imul
inc
cld
mov
push
cs
push
adc
cmp
movsb
adc
adc
clc
mov
imul
stos
mov
lods
mov
daa
test
pop
adc
and
test
pop
adc
lods
mov
es
lea
pop
subb
and
adc
mov
xor
pop
adc
inc
pop
adc
inc
xchg
daa
dec
cmp
lock
jl
xchg
and
popf
lock
cld
mov
movsb
mov
xchg
and
xchg
test
mov
cs
in
sbb
mov
lods
xchg
arpl
sbbl
movsb
mov
sub
sahf
test
sbb
ds
jo
mov
cmp
xchg
jle
ja
push
pop
xor
adc
mov
out
out
outsl
pushf
test
imull
adc
adc
add
hlt
sub
sbb
pop
adc
jnp
orl
dec
add
and
adc
pop
adc
test
daa
mov
pop
mov
int
xchg
dec
xor
adc
cmp
es
and
xchg
and
or
pushf
mov
mov
cwtl
inc
jmp
dec
mov
dec
pop
adc
inc
adc
orl
cmc
hlt
mov
rorb
icebp
or
in
mov
pop
adc
pop
push
test
mov
pop
cmpsb
adc
pop
imul
leave
das
jno
fsin
lds
iret
dec
mov
out
fisttpll
insl
mov
incl
es
mov
imul
jb
adc
adc
dec
and
adc
push
es
orb
je
xor
mov
cmc
cmp
lret
or
mov
push
adc
test
and
cld
insl
ja
inc
inc
outsb
popa
push
inc
cmp
shlb
mov
push
adc
xor
push
ss
fistps
repz
xchg
gs
dec
sub
fs
stos
inc
out
rcll
test
cmp
mov
or
and
out
mov
inc
xor
lds
mov
popa
and
sub
cmpsb
movq
dec
push
das
fcomi
imul
icebp
je
pop
jle
inc
jns
inc
dec
int3
sbbl
pop
sub
jne
jae
or
ret
out
pop
out
or
sbb
mov
dec
pop
sbb
jecxz
out
adc
lods
cs
insl
pause
xor
repnz
lods
outsb
mov
inc
sbb
out
dec
and
aaa
adc
movsb
mov
sbb
sub
pop
adc
jl
jo
lcall
test
dec
xchg
daa
jmp
pop
push
adc
add
mov
jle
aas
sbb
out
int3
mov
movsb
ret
xor
shlb
cmp
loopne
jg
inc
xlat
leave
adc
dec
xlat
mov
repz
sar
push
enter
push
syscall
adc
cmovp
pop
subl
xchg
ret
cmc
loope
mov
out
ja
sarb
xor
xor
push
pop
sbb
lret
aas
mov
cld
lods
je
sbb
xchg
repz
les
xchg
sbb
loope
xchg
pushf
in
pop
inc
outsb
and
cmp
ret
sub
out
xchg
movsb
stos
xchg
cs
cmp
fwait
xor
mov
fidivl
ret
xchg
inc
mov
push
in
aad
test
ds
inc
arpl
cld
xor
xchg
xor
inc
jno
push
push
xchg
scas
repz
jno
xor
sbb
cs
ds
inc
sbbl
aad
add
and
mov
jbe
shrl
push
pop
mov
loop
pusha
lods
loopne
inc
sti
add
xor
inc
out
cmp
pushl
cs
mov
mov
daa
out
pusha
inc
xlat
fldenv
xchg
jg
mov
repnz
sarb
pop
fdivs
fsts
sahf
push
dec
icebp
movsb
sbb
cmp
xlat
daa
sbb
push
fildll
pop
adc
outsl
or
xor
filds
dec
lock
cmpsb
inc
xchg
stos
push
dec
mov
iret
shr
and
adc
jecxz
jecxz
adc
sahf
xchg
mov
in
jge
jne
and
int3
bound
test
fists
addb
idivb
mov
sbb
push
pop
shl
push
dec
add
mov
push
sub
pop
adc
fs
adc
cmp
mov
mov
rorl
lcall
mov
or
je
pusha
push
jp
sti
das
xlat
inc
push
or
popa
sub
enter
inc
xchg
mov
in
and
fisttpll
inc
int
add
imull
insl
popl
pop
aaa
mov
les
inc
inc
js
addr16
stc
dec
pop
mov
movsb
in
add
adc
pop
cmpsl
adcb
loope
rcll
mov
dec
out
cwtl
pop
mov
xchg
mov
fsubrl
mov
icebp
ss
pop
sub
dec
mov
mov
add
dec
xchg
mov
ret
push
out
xor
movsb
cld
cmp
jo
mov
insl
add
and
pop
out
adc
lods
scas
and
outsb
notb
enter
mov
mov
cs
dec
lock
lock
fisubrs
dec
loope
push
cld
bound
cmp
dec
push
rolb
adc
mov
imul
xchg
inc
ss
inc
mov
pop
movsl
mov
xchg
aad
pop
mov
sbb
xlat
xchg
test
js
mov
jl
adc
lcall
cmp
lea
pop
xchg
xor
mov
cltd
test
mov
jg
nop
cmp
in
jnp
jl
bnd
pop
adc
int
cmp
enter
je
test
push
pop
adc
jmp
movsl
nop
scas
out
and
mov
and
xor
mov
sub
sub
xor
add
lods
mov
pop
scas
push
insl
loope
xchg
mov
mov
inc
pushf
and
outsl
sub
cmpsl
pop
jno
nop
jae
mov
lods
aas
pushf
jns
xlat
inc
pop
push
lea
cli
dec
rcl
out
loope
ljmp
mov
movsb
dec
and
mov
mov
ljmp
and
mov
fistl
ljmp
push
fadd
jo
shrl
and
hlt
mov
jl
lods
and
sbb
rcrb
aaa
xchg
out
cmp
mov
sub
sti
or
sub
adc
insl
das
mov
scas
mov
push
in
xchg
and
inc
xchg
dec
dec
xor
xor
add
repz
ss
pop
enter
call
lcall
lcall
jnp
push
cmp
cmp
mov
insl
decb
outsb
sub
pop
adc
ficomps
int3
mov
inc
and
dec
ja
xchg
and
xchg
shrb
cwtl
jno
push
jae
xor
jne
fwait
out
xchg
gs
xor
push
pop
addr16
jg
insb
mov
mov
adc
push
mov
mov
push
enter
lahf
jg
ds
pop
cmp
and
mov
outsb
mov
inc
or
inc
sti
xchg
and
mov
out
xor
out
mov
or
jns
cmp
jp
xchg
lods
lcall
jns
shlb
push
outsb
sbb
xacquire
jb
repnz
sub
pop
adc
mov
fwait
mov
ljmp
dec
sbb
mov
sbb
out
lahf
out
data16
pop
imul
jp
jle
xor
jmp
push
sti
subb
adc
sub
cmp
fsub
mov
pop
fs
cmp
add
inc
flds
dec
lahf
sahf
pop
repz
adc
or
sub
addb
mov
inc
hlt
out
pusha
jnp
data16
mov
inc
clc
mov
dec
cmp
jnp
jbe
lret
pushf
in
sbb
cmp
and
cwtl
addr16
sub
xor
sbb
fistpl
rcr
or
pop
inc
jne
dec
cmp
stos
aam
and
in
fs
fsubs
aaa
jo
pop
mov
push
and
out
mov
push
pop
jae
cmp
mov
mov
cli
fmuls
jmp
xchg
fiaddl
mov
in
jecxz
jo
pop
insl
push
cmpsb
inc
jae
ret
inc
xchg
ss
mov
dec
fsubrl
out
sahf
cmpsb
jmp
mov
cmp
xchg
jl
scas
mov
ret
in
xchg
sbb
es
ret
pop
cmpl
xchg
rcll
sub
and
js
stos
test
mov
popa
jae
ja
sahf
xor
and
sbb
add
inc
dec
jae
test
out
push
cmpsb
mov
fisubs
mov
sbb
ja
push
xchg
dec
pop
lret
push
das
cli
inc
arpl
add
iret
fidivl
add
ror
cli
mull
lret
jmp
sub
adc
add
add
jne
mov
sbb
sbb
cwtl
enter
mov
into
cmc
fstpt
jecxz
cltd
dec
cmp
inc
or
pop
movsl
mov
imul
test
dec
leave
cmp
jae
xchg
jmp
push
inc
addb
rcrl
push
mov
iret
sti
clc
addr16
push
jb
adc
scas
or
int
jnp
loop
mov
arpl
cltd
clc
pop
test
pop
mov
clc
stc
jae
cmp
loopne
and
mov
imul
xchg
fs
loope
dec
push
das
dec
ss
enter
lods
ljmp
mov
ficoms
arpl
xchg
jecxz
sbb
out
and
sbb
pxor
mov
sub
pop
adc
fistps
rolb
mov
and
test
xchg
xor
and
ret
xor
pop
mov
pop
fs
mov
and
jg
mov
iret
jecxz
sub
dec
bound
cmp
testb
mov
xchg
xor
cmpsl
ret
pause
xchg
sub
aas
add
sarb
aaa
and
addr16
shr
mov
mov
cltd
mov
mov
xchg
pop
adc
roll
subb
cmpsl
sbb
dec
lret
push
xchg
outsl
outsl
dec
ljmp
xchg
lret
gs
addr16
pop
cmp
daa
out
fidivrl
sbb
repz
xchg
and
jl
das
orb
imul
ret
jo
sub
ss
jl
pop
in
xor
adc
push
adc
mov
push
movsb
test
stc
dec
ret
xchg
jbe
jle
dec
pop
adc
xor
ret
mov
js
jae
repnz
scas
stos
cmp
mov
adc
popa
mov
addr16
inc
in
jg
jne
roll
mov
push
leave
repz
gs
outsl
test
xor
scas
mov
ret
in
pop
fs
adc
push
sbb
xlat
shll
push
lods
shr
nop
push
mov
pop
jno
inc
addr16
lock
fbstp
insb
lods
das
jle
xorl
or
cwtl
cmc
lods
push
rolb
jp
shll
jo
and
sub
addl
loopne
jo
and
or
xor
mov
sub
call
popf
push
push
mov
pop
xchg
std
pop
int
aad
nop
enter
add
leave
movb
cmpsl
sbb
sahf
arpl
xchg
shll
xchg
jb
addb
add
cltd
adc
sub
pop
outsb
mov
xchg
ficoms
enter
shl
inc
lock
adc
sbb
cmpsl
cmp
out
dec
pop
adc
dec
adc
jns
pop
mov
sbb
jl
xchg
notb
gs
and
adc
xchg
sub
ret
sbb
cmpsl
notb
jge
mov
dec
sti
add
sarl
fcomps
push
loope
cmp
xchg
movsb
push
cli
sub
inc
fnsave
mov
ds
imul
dec
in
outsb
daa
xchg
mov
xor
je
push
jbe
sub
std
inc
mov
lods
insb
adc
inc
rcr
lods
add
cmpsb
addr16
es
cltd
cwtl
pusha
addb
mov
fmulp
jne
fsubl
add
in
cmp
sbb
scas
sti
sub
pop
adc
int
mov
and
and
pusha
pop
test
cmp
ss
imul
and
xchg
out
adc
loope
scas
daa
mov
scas
inc
rcll
push
dec
dec
add
subl
xchg
pop
mov
and
push
ror
push
test
rolb
in
outsb
dec
push
mov
bound
andb
addr16
test
repz
ljmp
xorb
add
jle
repnz
lods
fcoms
mov
mov
fisttpll
aam
sbb
addr16
inc
push
pop
out
fs
movsl
gs
movsb
dec
xor
outsb
stos
popf
push
pusha
ret
xchg
jmp
dec
sarb
xchg
movsl
lcall
test
fdivs
movsl
filds
int3
insl
cmp
ss
mov
and
pop
sar
mov
ret
xor
jecxz
icebp
cmp
ss
out
sbb
fstl
push
jo
pop
adc
push
repz
outsb
pop
jbe
mov
jg
leave
jne
fldt
gs
push
shl
popa
pop
jb
xor
fnstcw
out
and
pop
pop
mov
cmp
sti
jge
movsl
or
pop
inc
inc
js
push
pop
lret
out
or
insl
sbb
xchg
cld
push
int3
xchg
andb
push
jne
fdivs
out
in
pop
fs
lret
jl
ret
aaa
cmp
gs
dec
pop
mov
arpl
insb
fdivs
out
nop
lahf
push
and
xchg
das
pop
inc
insb
jo
push
adc
mov
fstpt
mov
and
xor
mov
jno
repz
mov
push
aaa
mov
insb
fdivs
cwtl
rorl
shlb
pop
das
fidivrs
pop
adc
dec
push
mov
mov
iret
les
pop
xor
jl
adc
pop
mov
lcall
lds
ret
xchg
fs
insl
xor
push
adc
xchg
test
sbb
lods
clc
sub
pop
adc
int3
gs
mov
and
pushf
xchg
int3
mov
lcall
test
pop
xchg
daa
xor
out
sub
das
pop
mov
fmul
lods
pop
pop
repnz
ja
cmc
mov
mov
aaa
sahf
sub
clc
mov
sbb
cmpsl
dec
xchg
sbb
test
repnz
jp
xchg
int
pop
aam
lret
imul
inc
push
shrl
cmp
cmc
daa
dec
lret
push
pop
adc
lods
mov
ret
dec
jo
cld
jge
bound
push
adc
dec
adc
loop
jbe
lods
jmp
scas
dec
das
iret
sub
xchg
test
ret
jb
lods
pop
scas
daa
out
pop
push
mov
mov
clc
pop
mov
test
xchg
popf
popa
call
pusha
pushf
xor
cmp
popf
popa
addl
pusha
pushf
mov
popf
popa
sub
pusha
pushf
mov
popf
popa
addr16
pusha
pushf
or
not
popf
popa
mov
pusha
pushf
push
add
popf
popa
mov
pusha
pushf
xor
add
popf
popa
mov
pusha
pushf
push
push
add
popf
popa
dec
pusha
pushf
and
push
add
popf
popa
jne
pusha
pushf
xchg
popf
popa
xor
mov
dec
sub
cmp
dec
pop
repz
ror
cs
sbb
int
add
mov
jbe
push
xchg
dec
adc
jp
dec
fcomps
mov
xchg
loopne
enter
xchg
xchg
sub
out
ret
jne
fwait
mov
stos
test
cmpsl
aam
push
jle
push
xlat
cld
xor
pop
adc
inc
lahf
ds
sarl
mov
cmp
lret
mov
and
loopne
lea
sub
dec
pop
adc
mov
xchg
push
mov
sub
mov
cwtl
push
ffreep
clc
jns
addb
stos
cltd
or
xor
pop
adc
inc
xchg
add
jl
push
adc
andl
xchg
sub
push
adc
bswap
push
adc
inc
mov
xchg
mov
loopne
aam
or
push
in
push
ret
push
push
ds
inc
fs
cltd
push
jbe
xchg
inc
pop
ror
sbb
push
inc
mov
cwtl
cmp
or
call
add
aaa
xchg
and
shrl
cmpsl
out
lock
gs
movsl
pop
adc
xchg
pop
movsb
out
loopew
cld
jae
pop
xor
cmp
movsl
je
push
adc
push
mov
jns
and
lods
mov
pop
jbe
pop
push
popf
sub
lods
jp
push
push
aas
xor
sbb
addl
roll
dec
push
sbb
push
std
mov
xor
movsb
sub
add
std
mov
fsubl
xor
inc
add
loop
pop
cs
mov
jle
push
ret
cmpsb
pop
fimull
clc
dec
je
adc
adc
dec
xchg
das
or
sub
addr16
push
dec
js
adc
adc
cltd
dec
sti
fsubs
leave
imul
dec
xchg
fstps
mov
xchg
hlt
sub
pop
mov
loopne
jo
aas
into
ret
xchg
inc
js
out
sbb
or
sbb
adc
adc
and
test
xor
int
cmpsb
mov
push
xor
push
ds
aas
sub
xor
fdivs
lods
jp
scas
daa
shlb
sub
es
out
push
test
fisttpl
or
bound
cmpsb
sbb
xchg
lea
cmpsl
xlat
lods
pop
mov
and
mov
jns
int
shrl
adc
adc
mov
or
lret
in
xor
mov
pop
out
test
cmp
push
adc
mov
movsl
ret
push
les
dec
cmp
fcmovb
insb
cmp
aas
shll
xchg
cwtl
ss
xchg
push
call
mov
scas
cmp
inc
lods
jno
lret
dec
movsl
pop
adc
xchg
mov
sbb
mov
dec
lret
popf
int
mov
or
jle
movsb
ljmp
ljmp
sbb
frndint
arpl
inc
sbb
dec
cmp
and
add
daa
lcall
jg
fidivl
mov
adc
adc
mov
push
or
shlb
mov
add
mov
xchg
cli
inc
mov
and
jecxz
mov
sub
mov
add
mov
movsb
leave
shrl
inc
pop
jmp
sub
aas
inc
push
push
or
int3
jmp
mov
orl
enter
fsubrl
mov
ds
xor
push
adc
xchg
bound
fimuls
lock
push
mov
rol
in
or
xlat
sbb
sbb
fs
inc
mov
xchg
or
out
adc
mov
test
xor
fildl
out
leave
xchg
out
xor
push
adc
ret
xchg
xor
xchg
jle
dec
pop
fwait
lds
push
cmp
clc
sub
das
push
dec
cltd
jo
pop
adc
movsl
pop
adc
xchg
pushf
sahf
ljmp
loopne
dec
movsl
pop
adc
cwtl
xchg
movsl
pop
adc
dec
movsl
pop
adc
fnstcw
sbb
mov
mov
mov
addr16
cmp
pop
inc
enter
inc
test
mov
pop
push
cmp
pop
enter
je
jbe
stos
jbe
mov
shlb
repnz
sub
sub
ja
sbb
or
out
repnz
xor
sahf
jl
or
push
sub
xor
sbb
es
repz
pop
mov
daa
dec
movsl
pop
adc
sub
adc
adc
cmc
fs
pop
pop
mov
pop
lret
test
mov
sbb
mov
mov
push
pop
adc
fnstenv
sub
jl
bound
int
jg
into
inc
sbb
mov
ret
sub
addr16
adc
mov
sbb
inc
or
dec
xchg
das
or
inc
jmp
out
int3
add
sub
dec
xchg
das
cmp
pop
repz
pop
adc
insb
lods
test
xchg
or
std
push
or
mov
mov
mov
outsb
jne
dec
pop
jo
add
aam
lret
cld
stc
mov
int
sti
add
lods
pop
mov
pop
mov
fdivs
scas
int
inc
xlat
vrcpps
xlat
mov
cmp
mov
sahf
mov
in
xchg
fwait
ss
scas
leave
je
mov
xchg
xor
aad
jle
movsb
dec
cmp
adc
daa
dec
cmp
jo
pop
fnstcw
pop
adc
lock
test
mov
cmp
ftst
mov
out
lret
mov
lahf
sub
pop
adc
mov
push
mov
fdivrs
and
inc
in
adc
gs
lods
sub
pop
adc
lods
fdivs
sbb
cmp
inc
fimuls
pop
adc
pop
adc
sub
dec
pop
adc
xor
fldt
imul
adc
and
aas
xchg
lcall
cwtl
xor
pop
adc
inc
out
popa
out
aam
adc
adc
mov
pop
adc
fmuls
adc
mov
aam
lahf
adc
in
xchg
lcall
cltd
mov
or
dec
pop
adc
adc
in
mov
xor
mov
scas
fwait
mov
push
rorb
adc
aaa
hlt
pop
jb
push
pop
loopne
mov
dec
pop
adc
xorb
cld
mov
pop
clc
inc
popf
pop
int3
imul
mov
pop
adc
mov
sbbl
cmp
fwait
push
rorb
dec
inc
jmp
push
mov
scas
jb
cltd
adc
adc
fsubl
push
mov
sbb
cmp
ror
xor
add
push
cmp
cmp
pop
lcall
mov
dec
push
stos
mov
fwait
stc
or
js
push
rorl
add
sub
sub
dec
test
inc
xchg
and
or
rorb
sbb
hlt
cmp
std
test
xor
sub
enter
mov
pop
adc
adc
and
outsb
ret
loop
out
rol
pop
fs
jmp
mov
mov
outsb
cwtl
sub
mov
and
mov
incb
test
pop
jno
push
push
mov
mov
xor
lods
fidivrl
or
inc
cmp
hlt
movsl
pop
adc
or
xlat
pop
shll
pusha
fdivrs
out
pop
ficoml
jmp
pop
adc
cld
insl
ja
hlt
mov
xchg
fdivrs
push
int3
mov
ljmp
lahf
testl
pop
adc
ffree
mov
addr16
lahf
push
dec
dec
cli
cmp
and
mov
sub
pop
mov
sbb
jle
or
movsl
pop
adc
dec
mov
loop
cmp
xor
add
mov
sti
lahf
cmp
pop
jnp
pop
or
xchg
ret
fsubs
inc
shrb
add
cmp
mov
dec
pop
adc
or
pop
hlt
mov
arpl
xchg
inc
stc
test
repz
ror
call
dec
movsb
cmp
sbb
sarb
and
fs
xor
pop
adc
cli
sbb
adc
adc
dec
and
xor
sub
pop
adc
js
stc
gs
adc
sbb
cmp
repz
mov
sbb
xlat
pop
push
aaa
cmp
dec
pop
adc
mulb
and
fcomp
mov
clc
dec
js
or
popf
movsb
mov
dec
pop
adc
lret
xchg
sub
shl
or
inc
iret
add
sub
inc
out
pop
adc
pop
inc
dec
or
jmp
push
movsb
stc
xor
ret
addl
mov
dec
fistl
movsb
push
adc
lret
fcoms
imul
pop
jo
out
and
xchg
movsl
jae
pop
jle
jbe
imul
imul
mov
stos
and
out
sbb
cmpsl
inc
or
xor
int3
int3
xchg
das
pop
aas
sbb
out
jno
call
push
jmp
jae
mov
jne
lahf
out
inc
sbb
shrb
mov
lret
gs
xor
lds
mov
xchg
xchg
xor
movsb
mov
enter
leave
cmp
fucomp
or
or
test
lret
orl
dec
push
shlb
ss
dec
push
jbe
test
scas
mov
addb
push
fidivl
ja
add
lock
test
les
shl
insl
push
push
push
lret
out
ret
inc
jg
lds
daa
les
outsb
int
dec
push
xor
mov
lds
xchg
sbb
push
adc
outsl
lds
mov
push
xor
cld
and
mov
lahf
xchg
sub
push
pop
mov
xor
cmp
out
int3
cwtl
xor
popa
mov
into
popf
mov
sbb
pop
nop
aas
jle
inc
test
push
pop
adc
sbb
std
imul
mov
out
out
insb
push
pop
adc
fwait
pop
jns
iret
out
mov
leave
js
pop
adc
dec
jbe
adc
pop
adc
push
pop
adc
jnp
iret
mov
adc
iret
inc
arpl
push
sbb
adc
adc
mov
jns
daa
lahf
mov
push
add
mov
xchg
es
xchg
inc
ret
pop
cwtl
and
push
pop
adc
sub
jno
xor
pop
adc
adc
adc
inc
insb
push
pop
adc
push
pop
adc
fcmovne
aas
popa
mov
adc
test
adc
movsb
das
xchg
sbb
out
sub
stos
call
daa
push
cmc
xor
mov
mov
dec
inc
lret
push
xchg
insl
and
push
stos
jl
and
data16
pop
mov
adc
cli
leave
test
or
cmp
cmp
cmc
xchg
rcrb
cmp
sbb
xor
cmp
pop
dec
pop
adc
outsl
loopne
pop
adc
push
xor
pusha
pop
nop
sbb
aaa
adc
pop
lret
and
inc
outsb
cmpsl
dec
mov
popa
lcall
pop
mov
pop
mov
les
ds
and
adc
aas
sbb
add
ss
aam
push
cmp
push
cltd
leave
pushf
mov
mov
loope
test
dec
pop
adc
push
jns
lea
ja
out
xchg
inc
out
xor
or
ret
movsl
push
pop
push
adc
push
adc
pop
adc
arpl
sub
cmp
sub
aas
mov
test
xchg
push
out
lock
sbb
test
dec
jmp
bound
push
mov
daa
xor
pop
adc
fsubr
inc
xchg
xor
cmpsl
call
daa
jns
xchg
or
mov
dec
xchg
mov
pop
adc
ljmp
xchg
mov
jmp
sbbl
loope
mov
dec
pop
cmp
lahf
scas
pop
mov
push
stos
sbb
push
arpl
inc
xlat
leave
sbb
test
jbe
xchg
ret
inc
pusha
pop
cs
push
pop
adc
fidivl
dec
fisubrl
mov
arpl
jno
dec
xchg
aam
insl
fidivl
push
pop
adc
shlb
movsl
pop
adc
shll
jb
and
loope
in
mov
mov
mov
jns
lret
inc
fcompl
xchg
and
dec
movsl
pop
adc
aam
int
inc
xlat
leave
sbb
addb
push
shrb
xchg
pop
cs
push
pop
adc
cmp
test
pop
bound
mov
rorb
inc
int3
sbb
xor
and
movsb
xor
fidivrl
sbb
mov
and
pop
adc
jb
xchg
sub
adc
push
dec
pop
adc
mov
int3
fwait
sub
dec
pop
adc
sub
and
dec
call
cmp
or
out
fwait
inc
pop
cltd
mov
rcl
in
jge
scas
leave
adc
xor
dec
pop
adc
fsub
int
mov
into
data16
mov
xchg
or
push
cmp
dec
pop
adc
xor
pop
adc
mov
jle
xor
lahf
test
or
push
xchg
sub
test
inc
xchg
xor
cmp
push
adc
test
cltd
cmc
jnp
push
push
js
in
fstpl
aas
sbb
sub
push
and
cwtl
mov
imul
jmp
insl
cmc
loope
or
test
adc
shr
orl
mov
pusha
out
call
adc
adc
xor
adc
pop
xor
pop
adc
add
adc
cmp
cmp
stc
mov
adc
adc
cmpsb
mov
ja
push
push
lods
sbb
jle
push
pop
adc
and
hlt
insb
int
push
das
fldcw
movsl
pop
adc
fcoml
lock
dec
pop
adc
sti
cmp
lahf
xor
lret
into
stos
iret
insb
push
pop
adc
jge
mov
dec
out
adc
popl
xchg
pop
dec
dec
pop
iret
int3
scas
inc
cwtl
jo
pop
adc
pusha
clc
or
sbb
iret
xor
push
push
push
cmp
jge
push
pop
xchg
pop
pop
sub
insb
pop
insb
push
pop
adc
les
arpl
add
pop
packuswb
pusha
inc
push
inc
repnz
stc
lret
into
xor
xor
mov
and
ret
xchg
adc
pop
cmpsb
mov
cmp
cmp
fcomp
lea
imul
in
mov
fistpll
xchg
into
mov
loopne
adc
adc
insl
sahf
cmpsb
out
xor
loop
cmp
shll
xchg
pop
nop
or
jg
scas
ds
xor
sbb
test
outsb
and
movsb
push
pop
adc
mov
push
adc
sbb
outsl
cmp
shlb
jmp
aaa
xor
pushf
data16
mov
movsl
insl
push
push
imul
mov
repz
or
icebp
pop
dec
mov
sahf
or
mov
leave
fisubrs
out
es
dec
outsl
mov
fildl
jmp
aad
jne
sbb
mov
xor
cld
dec
mov
fidivl
enter
mov
adc
pop
les
mov
pop
ret
jne
mov
stos
sahf
in
xchg
inc
ffreep
cmp
dec
mov
xor
outsb
out
int
and
scas
movsl
test
pop
adc
shlb
xchg
daa
dec
sahf
imulb
adc
cmp
shrb
pop
xor
adc
add
push
movsb
adc
mov
cmp
cli
lock
fwait
ss
dec
pop
lcall
outsl
gs
movsl
push
loopne
mov
ret
add
stc
xchg
and
inc
mov
xchg
adc
out
lock
ret
jb
jg
addps
ret
pop
pusha
mov
xchg
xchg
adc
adc
pop
mov
pop
push
jns
sahf
lcall
popa
push
inc
push
jb
push
mov
js
pop
jp
add
popf
push
pop
add
leave
sbb
ljmp
loop
dec
movsl
pop
adc
sub
xor
loope,pt
movsl
pop
adc
arpl
mov
sbb
add
adc
pop
adc
daa
jmp
clc
movsl
pop
adc
or
cld
movsl
pop
adc
mov
insb
hlt
movsl
pop
adc
pop
adc
daa
sti
daa
test
sbb
nop
test
cmpsb
insb
mov
repnz
movsb
dec
pop
adc
daa
mov
lock
pop
adc
imul
lock
insb
sub
pop
adc
dec
pop
adc
fwait
ss
lods
jle
dec
pop
adc
or
mov
outsb
stc
cmp
cltd
aaa
jnp
dec
xchg
cs
pushf
sbb
cmpsb
xchg
fimuls
push
cmpsl
in
lods
jmp
xchg
test
or
fldl
shlb
push
adc
dec
xor
cmpsl
mov
jle
fisubrs
mov
dec
xchg
pop
pop
dec
js
xchg
rcrb
jle
push
adc
mov
lds
add
popf
rcrb
xorb
dec
stos
shrl
push
lcall
adc
cmp
pop
mov
test
push
adc
sub
sub
xor
in
loop
sbb
adc
mov
dec
popf
rcrb
pop
xor
rolb
xor
in
ss
ljmp
pop
cmpsl
data16
ja
or
dec
fwait
cmp
out
ljmp
movsl
inc
sbbl
addr16
ljmp
inc
sbb
xchg
test
das
inc
mov
arpl
cmp
mov
repz
repnz
mov
stos
and
or
into
fwait
or
rcll
sbb
dec
imul
xchg
fcmovb
inc
repz
popa
mov
dec
icebp
mov
dec
sbb
mov
sub
insb
and
sbb
mov
add
cmpsl
rolb
ret
je
jl
jne
mov
loop
mov
and
int3
test
mov
xor
xor
add
push
jns
loop
xchg
bound
jbe
push
call
iret
jnp
loop
jp
jo
pop
jo
xchg
out
rol
popa
or
sub
movsl
add
push
jns
inc
adc
sub
pop
cs
push
push
push
aaa
mov
rolb
cmpsl
scas
jle
mov
pop
jp
notb
cwtl
inc
rcl
mov
jmp
stos
es
es
cld
pop
xchg
push
mov
loope
testb
jbe
in
cmpsb
jmp
cmpsb
pop
mov
pop
ss
mov
cmp
pop
scas
push
jno
cli
out
int
xor
mov
sahf
dec
insl
fdivs
out
jl
insl
push
pop
rol
daa
xchg
ss
insl
xor
insb
fdivs
sbb
scas
push
pop
cmp
cld
adc
push
aad
mov
repz
xlat
cmpsb
or
pusha
scas
push
push
dec
popf
jl
mov
and
fnstenv
fidivs
leave
xchg
and
jg
xchg
push
inc
xlat
and
xchg
movsl
shl
mov
imull
ret
aam
arpl
icebp
js
cmpsb
or
mov
pop
inc
es
loopne
add
add
xor
je
mov
test
xchg
cmpsb
sbb
ss
sahf
mul
xchg
jne
out
sub
pushf
cmp
frstor
in
mov
movsb
sub
daa
imul
shl
lea
repnz
dec
mov
dec
push
shl
xlat
sti
test
or
icebp
sub
pop
jecxz
mov
push
std
mov
mov
leave
xchg
scas
push
sub
out
movsb
push
sbb
movsl
cmpsb
outsl
lods
mov
test
shl
and
sub
movsl
or
gs
xor
push
insl
scas
lods
xchg
scas
test
and
repz
loope
out
mov
sub
xchg
hlt
cwtl
fsubl
call
jno
repz
xchg
inc
xlat
sub
insl
movsb
add
cmp
lahf
lods
pop
mov
mov
pop
ret
xchg
jp
dec
pop
push
inc
popa
outsl
pop
cmp
ja
int3
lcall
imul
aas
xchg
int
sarl
sub
enter
xchg
push
hlt
gs
push
pop
mov
mov
cmp
dec
adc
xchg
movsl
pop
leave
dec
xchg
cs
pusha
jnp
inc
xlat
sbbb
out
pop
mov
mov
orl
ja
jb
es
int
fdivrs
je
into
popf
xor
sar
mov
push
fdivl
lret
add
xor
ss
xor
push
mov
push
insl
push
es
mov
sbb
scas
mov
fisubrl
jmp
sbb
sbb
clc
xchg
cmpsb
in
adc
je
push
dec
dec
cmp
push
cs
jb
mov
lcall
jno
cmp
lods
sbb
xchg
mov
movsb
punpckldq
mov
mov
fs
inc
xor
sub
popa
adc
dec
dec
xchg
fs
mov
mov
fnstsw
outsb
xchg
push
aaa
popa
fdivrs
add
sub
jl
add
xchg
fsubl
push
cltd
sub
adc
outsb
ret
movsb
jecxz
and
and
out
sahf
sub
aad
stos
xor
js
push
add
test
and
pusha
les
lcall
je
fs
repz
inc
cmp
fidivs
arpl
mov
xor
lret
out
fnstsw
cld
orb
adc
and
dec
jmp
sbb
add
push
popf
cmp
nop
cmp
push
gs
adc
push
and
into
jns
mull
xor
push
mov
imull
test
shl
ljmp
fistpll
and
dec
cmpsb
icebp
sub
inc
out
sbb
ss
adc
add
cmp
dec
push
rcrb
push
nop
mov
clc
and
ret
xor
sub
and
push
mov
adc
es
add
mov
or
adc
test
push
ficomps
cmpsb
iret
push
enter
jbe
mov
pop
inc
push
push
pop
sti
in
dec
and
repz
jne
push
pop
out
xor
ljmp
xor
push
push
out
inc
xlat
sub
mov
mov
ljmp
movsb
jb
sbb
stos
cld
mov
mov
aam
test
scas
bound
insb
fdivs
fiadds
hlt
mov
fmuls
out
out
jmp
pop
xor
pop
fsubs
xchg
cmp
push
aaa
push
pop
push
push
pusha
cld
out
adc
fsubrl
sub
jbe
cmp
in
inc
fs
pop
in
into
pop
pop
push
jge
out
sbb
or
ljmp
add
aad
gs
lods
call
jecxz
addl
call
mov
fstpl
rolb
dec
test
push
cmp
out
sbb
aad
fiadds
add
pop
and
popa
pop
mov
into
jae
pop
mov
cmp
scas
out
and
dec
daa
lds
push
cltd
out
out
test
popl
mov
ret
imul
mov
out
push
push
call
or
or
and
jne
xor
xlat
fstl
out
mov
lret
nop
addr16
inc
xor
repnz
sbb
inc
fmull
and
lods
add
lcall
call
or
and
shlb
inc
daa
lds
sti
hlt
out
inc
inc
mov
aaa
mov
mov
pop
pop
es
xchg
push
in
imul
mov
push
arpl
inc
fmulp
gs
rep
dec
xchg
pop
lret
lds
xchg
pushfw
aaa
insb
jge
leave
jo
je
jns
les
dec
je
fstpt
sbb
dec
sbb
dec
pop
and
jp
into
adc
outsb
push
pop
imul
xchg
mov
test
inc
mov
int3
mov
mov
xchg
or
mov
mov
aaa
out
jnp
clc
icebp
push
dec
popa
xor
inc
mov
and
push
std
sbb
inc
outsl
jmp
push
pop
xchg
push
xchg
jp
pusha
ss
dec
inc
pusha
cmp
mov
aaa
iret
nop
js
jnp
fnstsw
inc
adc
shrb
jns
sbb
or
dec
in
push
jne
das
xlat
push
outsb
imul
mov
inc
push
add
out
shr
jecxz
out
adc
dec
lcall
or
jae
popf
xor
xchg
cmpl
mov
mov
jne
call
mov
je
sbb
jbe
jae
mov
addr16
pop
je
and
cwtl
mov
out
lahf
dec
pop
fsubr
or
jo
xor
xor
fisubrl
xor
add
pop
cmp
mov
pop
rcl
enter
cmp
adc
leave
push
adc
adc
sub
jno
push
into
in
fidivrs
ret
jne
into
sbb
sbb
pop
ja
mov
dec
xor
mov
xor
sbb
xor
aad
or
mov
ja
cmpsb
xchg
enter
sbb
ror
xchg
mov
ljmp
jno
or
inc
xchg
testb
mov
adc
gs
pop
adc
ljmp
in
mov
adc
popa
jnp
mov
dec
mov
add
jl
pop
adc
insb
adc
adc
fnop
test
subb
sub
pop
adc
push
adc
adc
pop
adc
fcoml
push
adc
cmp
mov
pop
sbb
scas
pop
cmp
sbb
lods
lret
fistpl
insl
and
jl
pop
adc
fbld
daa
repnz
fs
lods
sbb
push
pop
dec
pop
jl
pop
adc
sahf
sub
test
insb
adc
adc
xor
jl
pop
adc
adc
pop
adc
xchg
in
aad
pop
mull
pusha
test
xchg
fs
jo
pop
adc
repnz
les
adc
pop
je
pop
adc
lcall
test
xor
push
push
ret
or
sub
addr16
lcall
lods
iret
lea
inc
pop
xchg
fsubp
and
movsb
pop
lods
das
js
ror
xchg
std
aam
xor
xlat
cmp
xor
and
xchg
das
pop
xor
rol
stos
xlat
and
dec
bound
outsb
fdivs
xchg
and
pushf
data16
sbb
repnz
adc
pop
xor
mov
mov
pop
dec
pop
mov
es
xchg
push
add
rcrl
lcall
mov
mov
adc
shl
rcr
jg
xchg
out
imul
pop
mov
or
ret
xchg
adc
inc
fildll
loope
js
lds
outsb
outsl
pop
loopne
mov
das
aas
fdivrl
xor
or
rcrl
inc
push
bound
leave
shlb
fcoml
cmp
ret
in
cmp
dec
mov
or
ss
pop
push
pop
fcoms
xor
push
ror
xchg
jecxz
xor
adc
icebp
insl
sbb
pop
mov
test
adc
lea
xchg
movsb
cmp
add
sub
loop
mov
stc
ds
xchg
push
sub
and
lock
lock
and
mov
xchg
mov
push
xor
adcb
mov
out
lods
scas
mov
loopne
dec
outsb
mov
out
inc
popf
sub
mov
fwait
andl
clc
mov
dec
sub
test
add
out
mov
scas
enter
push
xchg
lods
rcrb
mov
lods
fwait
cmpsb
inc
lcall
out
xchg
and
cmc
and
aad
xchg
jnp
imul
bound
push
push
and
test
cmp
sub
ja
dec
xchg
and
dec
shl
jb
or
xor
mov
test
fcmovnbe
cmpsl
cmpsb
dec
sbb
in
test
sahf
mov
push
cmpsb
js
pop
adc
adc
pop
xor
rclb
popa
pop
repnz
and
lahf
pop
stos
dec
mov
xchg
pop
adc
mov
mov
mov
test
push
jns
js
pop
adc
fwait
lds
pusha
test
data16
mov
pop
adc
je
gs
ret
sub
enter
adc
adc
lahf
and
xor
test
lock
scas
inc
movsb
jl
pop
adc
mulb
adc
test
push
cltd
jae
ja
test
push
xlat
icebp
cli
dec
push
mov
fsts
jmp
and
adc
adc
push
push
push
pop
cwtl
cltd
push
jo
pop
adc
andb
lcall
xor
mov
pop
adc
push
je
pop
adc
cmp
adc
xor
in
sbb
adc
push
leave
fnstcw
adc
cltd
pusha
adc
adc
bound
cmp
arpl
adc
push
push
fs
push
cli
loope
xchg
das
xor
xchg
jl
pop
adc
shrb
mov
clc
inc
test
adc
mov
pop
aam
shl
int
xor
dec
js
adc
adc
insb
and
mov
or
adc
adc
and
push
push
into
gs
fs
xor
jp
lods
and
xchg
push
mov
mov
adc
sarl
ret
sbb
into
push
push
cmpsl
aaa
mov
xor
repnz
cmp
test
in
mov
sub
imull
repnz
push
fmul
pusha
mov
loope
xchg
daa
loopne
push
adc
push
pop
push
aas
mov
lcall
insl
fisttpl
mov
xchg
sbb
sarb
pop
aas
xor
sbb
fldenv
movsb
cmp
daa
mov
dec
push
lock
push
rcr
mov
sub
and
cmp
pop
push
mov
fidivs
mov
xchg
mov
mov
das
pop
xor
ljmp
sahf
mov
mov
cltd
mov
cmpsl
sbb
add
push
das
pop
mov
push
lret
stos
push
insl
shl
gs
clc
das
lods
mov
mov
fs
sbb
cwtl
jge
mov
lds
pop
outsb
push
cmp
push
std
imul
mov
and
imul
dec
pop
and
add
mov
fdivs
sbb
fs
rcr
fstpl
mov
push
sub
inc
ds
xor
or
pushf
mov
mov
push
or
clc
xchg
sbb
xor
inc
popa
mov
aam
loopne
lret
mov
sub
xor
lds
int3
repz
jns
lret
insl
int3
mov
movl
dec
cmp
repnz
inc
lds
adc
mov
cwtl
and
jg
out
dec
enter
mov
out
dec
divb
idivb
pop
lea
pop
hlt
xor
lds
push
addr16
fincstp
push
out
rorb
add
and
or
push
subl
scas
xchg
add
sbb
adc
push
stos
mov
cltd
pop
add
add
mov
mov
cltd
aaa
sbb
xor
movsb
xor
rcrb
es
andb
pop
out
inc
je
lret
jb
in
aaa
push
adc
icebp
or
push
fbstp
add
push
cmp
scas
cs
lods
add
xor
jo
mov
sub
lahf
add
inc
mov
adc
xchg
and
sub
add
sbb
clc
aaa
ret
jbe
inc
xor
ret
sub
lods
and
cmp
les
aad
mov
mov
sbb
xchg
dec
jae
loopne
fiaddl
fmull
js
or
mov
inc
fldl
mov
or
repz
xchg
data16
rclb
adc
push
into
fs
jge
popa
arpl
pop
mov
inc
inc
test
cmpsb
mov
stc
ds
sub
std
pop
fldenv
mov
lea
jle
adc
ljmp
mov
jbe
or
lods
push
test
adcb
pusha
das
sub
in
dec
call
dec
mov
jmp
ret
lock
cmpsl
stos
imul
dec
adc
sub
dec
push
cli
push
ret
jge
sti
add
inc
push
pop
lcall
js
lds
pop
cmp
movsl
mov
push
rcr
leave
xchg
and
icebp
jno
lahf
leave
pop
mov
adc
push
fdivs
adc
out
mov
inc
inc
dec
xor
adc
aaa
mov
fs
push
out
dec
aas
cwtl
add
das
test
loope
pop
dec
inc
dec
mov
mov
cmpsb
test
mov
xor
sbb
xchg
mov
ss
dec
pop
sub
cltd
bound
pop
adc
adc
push
mov
repnz
es
out
sbb
cmp
cs
aad
xchg
loop
xchg
mov
sbb
xor
outsl
insb
mov
stos
lret
rep
shlb
pop
adc
sbb
daa
cmp
repnz
and
clc
pop
mov
movsb
mov
inc
jecxz
sbb
push
xacquire
mov
lods
pop
mov
mov
popf
dec
loop
addb
push
mov
mov
das
leave
cwtl
xor
repnz
push
dec
sub
inc
pop
out
rcrb
lcall
pop
dec
mov
xor
shll
mov
or
xor
shrl
lcall
arpl
fcoms
scas
iret
lea
aaa
roll
popf
fbstp
jp
vcvttsd2si
aas
sbb
es
cmp
les
push
add
xchg
mov
int3
cltd
out
xchg
sub
fwait
push
out
les
add
pusha
out
nop
fiadds
jns
ss
push
out
hlt
addr16
gs
mov
fbstp
push
cmp
insb
sub
pop
mov
pop
jmp
xor
in
mov
and
lcall
cmp
adc
lea
jg
sahf
leave
out
pop
inc
clc
mov
push
adc
push
sub
push
jg
pusha
mov
dec
jle
arpl
insl
add
or
jbe
cmp
jge
imul
push
mov
pop
pop
ret
pop
and
movsl
int
repz
push
sarl
pop
lds
lret
sbb
sub
xchg
sbb
sahf
push
adc
jne
repnz
dec
pop
call
mov
lret
sahf
push
push
adc
cs
adc
xchg
jnp
dec
jb
js
cmp
push
insl
lea
mov
jp
jl
testl
mov
mov
in
xor
shl
repnz
xchg
xchg
sbb
add
loope
loop
mov
lds
or
pusha
stos
sti
add
push
scas
inc
ljmp
adc
sub
std
imul
es
jle
mov
mov
nop
and
adc
aam
jp
lret
test
outsl
sbb
pop
adc
fdivs
lock
inc
xor
mov
fstpl
int3
shll
mov
dec
aad
mov
adc
mov
lods
aaa
js
aam
pop
pop
fucomi
xchg
loopne
pop
adc
push
cmp
js
sbb
adc
adc
mov
push
jecxz
cltd
test
pop
adc
sbb
and
pusha
sbb
ja
aam
jno
ds
fwait
ret
and
mov
int3
lods
mov
and
pop
cmp
loopne
pop
adc
inc
sub
ss
movsb
and
push
adc
dec
mov
loop
sbb
out
or
push
sub
push
adc
jo
xorb
fdivr
xchg
adc
cmp
ss
scas
ds
sbb
xchg
xor
lea
iret
loop
jns
xchg
je
repnz
push
dec
mov
mov
adc
pop
out
mov
ljmp
cltd
jp
enter
aaa
aas
mov
or
xor
ds
nop
mov
or
ss
jl
sarl
loopne
pop
adc
movsb
dec
xor
mov
cmp
test
repnz
push
jae
cltd
enter
mov
cmpsl
pop
adc
fsub
test
xor
into
fwait
and
and
push
test
sbb
ret
repnz
or
cmp
insb
lock
xchg
fbstp
in
dec
fs
pop
lods
mov
mov
mov
and
fildll
mov
mov
imul
pusha
mov
dec
pop
adc
adc
lock
push
dec
mov
mov
lea
insl
lea
pop
dec
sahf
lcall
xchg
and
mov
decb
or
xchg
outsb
rol
gs
test
sahf
cmp
iret
xchg
aas
mov
outsb
shrb
lahf
repnz
leave
pop
cmc
push
sar
movsb
mov
mov
cmp
fwait
cld
mov
dec
lods
mov
shll
sbb
pop
mov
dec
sahf
lock
iret
dec
gs
daa
push
adc
pushf
adc
adc
pop
lret
outsb
hlt
adc
adc
mov
adc
repz
pop
and
push
adc
movsb
mov
movsl
sbb
test
pop
adc
push
adc
lods
mov
lods
bound
cmp
popf
iret
or
push
adc
test
pop
adc
test
adc
adc
movsb
mov
add
pop
adc
ljmp
mov
adcl
cwtl
xchg
stos
shr
aam
arpl
add
mov
inc
imul
or
dec
inc
mov
popa
lods
mov
jmp
adc
adc
adc
sub
push
pop
mov
lea
sbb
roll
sarb
dec
inc
mov
adc
fsubl
out
lahf
push
xor
or
xor
movsb
aas
dec
jne
lret
stc
scas
xor
inc
add
or
popa
aaa
lret
inc
dec
jb
pop
idivl
outsb
sarl
push
adc
ds
adcl
pop
adc
pop
lds
sarl
repz
arpl
push
shrb
or
stos
sbb
scas
push
test
fcomip
and
insb
mov
mov
xchg
xchg
mov
fdivr
in
loopne
sbb
mov
push
ljmp
push
and
repnz
xor
and
dec
fdivrl
inc
xchg
test
cwtl
mov
imul
ret
mov
repnz
adc
hlt
xor
add
xor
sub
pop
bound
cmp
push
mov
out
mov
xor
pop
adc
jle
cmp
pop
adc
sub
cmpsl
pop
adc
test
adc
inc
out
inc
mov
sbb
pop
adc
push
inc
mov
jle
psrlw
inc
test
adc
adc
jne
call
sub
loope
rolb
daa
inc
mov
sub
and
pop
mov
sahf
sahf
push
out
xorl
pop
pop
push
sbbl
cmp
shl
pusha
in
xor
out
add
iret
push
sti
lods
mov
outsb
dec
imulb
nop
push
pop
repnz
insl
and
and
in
int
cmpsl
inc
test
adc
ljmp
cmp
mov
fmuls
inc
test
adc
mov
jg
xor
sbb
xor
cmp
pop
adc
or
test
test
adc
inc
das
mov
xchg
sub
fisubrs
mov
daa
test
cmpsl
pop
adc
daa
mov
insl
cmpsb
lret
sbb
jg
and
insb
pop
ret
ds
cmpsl
pop
adc
or
sbb
cltd
ss
lods
ret
pusha
test
adc
inc
jnp
and
xchg
out
mov
aas
jns
repnz
adc
push
xchg
push
stos
push
push
sbb
je
dec
ss
movsb
loope
inc
cmpsl
pop
adc
movsl
mov
pop
adc
test
xor
pop
cmp
pop
adc
mov
mov
test
adc
fimull
lods
movsb
adc
sti
xchg
test
pop
dec
sahf
or
or
mov
adc
adc
push
push
inc
lret
cs
insl
xor
xchg
daa
dec
ljmp
test
sbb
pop
adc
fstl
ret
push
pop
or
daa
and
pop
adc
inc
shlb
xchg
sub
call
data16
cs
out
out
mov
movsl
xchg
stos
and
cmp
adc
mov
adc
mov
and
in
mov
inc
adc
mov
pop
or
enter
sbb
pop
xor
inc
xlat
int
rcl
sub
push
adc
xor
mov
mov
pop
sbb
sbb
inc
cmpsl
pop
adc
loope
cmpsl
push
test
adc
and
sbb
outsl
pop
into
mov
mov
sbb
cmpsl
push
cmp
dec
into
popf
xor
jmp
mov
fbstp
fisubrs
cmpsl
pop
adc
aam
sub
add
sbb
xorb
fcoms
adc
aam
popf
daa
mov
adc
or
loopne,pn
add
xchg
mov
rclb
jnp
inc
cmpsl
pop
adc
ljmp
mov
mov
mov
imul
mov
and
pop
out
sub
loopne
sub
adc
jmp
daa
or
ror
pop
adc
sbb
pop
adc
pop
adc
add
mov
inc
cmpsl
pop
adc
gs
push
and
imul
inc
pop
mov
inc
cmpsl
pop
adc
outsl
mov
test
inc
and
cmp
cmpsl
pop
adc
hlt
sub
aaa
jg
cmpsl
pop
adc
pop
adc
sbb
insl
cmp
pop
adc
jmp
xchg
sub
repz
movsl
test
aas
loope
cmpb
cwtl
jg
cmp
cmpsb
jo
push
adc
xchg
les
jbe
jecxz
into
jo
jae
scas
cld
or
mov
mov
pop
adc
outsl
mov
aaa
pop
mov
pop
adc
imul
adc
adc
scas
outsl
lds
inc
subb
pop
adc
lret
jae
pop
xor
adc
in
in
pop
jnp
movsb
or
mov
sub
pop
adc
lahf
fldl
inc
test
adc
shll
and
pop
adc
outsl
int
sbb
inc
push
pop
cs
loope
adc
test
mov
and
and
push
sub
nop
mov
rcl
cmpsl
mov
test
adc
push
imul
and
cmpsl
pop
adc
add
or
imul
adc
jo
stos
xor
je
movsb
lret
pop
rcl
mov
inc
cmpsl
pop
adc
pop
test
jbe
popf
push
pop
ret
xchg
dec
je
sbb
pop
adc
xor
out
lcall
cmpsl
pop
adc
movsl
push
sahf
mov
aaa
sub
cmpsl
pop
adc
rol
movl
push
dec
xchg
xor
xchg
adc
inc
jg
mov
stos
and
pop
adc
jg
dec
test
sahf
cmp
lret
sbb
mov
xchg
das
insl
jl
cmpsb
insl
and
sti
rol
gs
call
mov
push
xchg
lods
push
lahf
movsb
sbb
mov
lea
jo
xor
mov
cmpsb
mov
pop
push
mov
xor
jecxz
push
jne
shlb
cwtl
cmp
add
clc
imul
dec
xchg
lods
es
fistpll
lea
mov
pop
lret
outsb
sub
mov
pop
mov
xorb
or
mov
pop
push
popa
xor
sub
loope
in
aaa
jb
lcall
fs
inc
adc
adcl
mov
repz
xor
xor
fidivl
pslld
jg
scas
adc
int
fildl
fisttpl
push
sub
mov
pop
sahf
pusha
ret
xchg
dec
jl
xchg
sub
mov
pop
mov
loop
imul
adc
xlat
ss
ret
xchg
jae
repnz
push
inc
sbb
push
mov
pushf
ret
sub
sub
fimuls
mov
pusha
adc
adc
into
push
inc
mov
daa
mov
jg
mov
les
insb
cmp
dec
jnp
iret
inc
push
stos
cmp
insl
push
push
rcrl
mov
addr16
enter
sbb
or
push
fwait
and
lret
jl
lods
sbb
pop
adc
data16
or
pusha
adc
adc
les
or
or
loope
lods
fisubrl
pushf
sub
lret
push
adc
push
or
movsl
xchg
mov
jp
dec
jl
mov
rol
mov
stc
test
stos
popf
add
enter
cwtl
cli
pushf
rcrb
out
jne
stos
cmc
cmc
push
cmpsb
sub
stos
jl
sbb
outsl
insl
lcall
imull
mov
push
popf
add
rclb
pop
adc
cmp
sbb
nop
iret
ja
bound
sbb
iret
jp
jmp
dec
pop
adc
ljmp
rorl
aad
pop
iret
aas
aas
mov
adc
pop
mov
and
cwtl
lds
push
adc
stc
push
add
push
adc
mov
sbb
mov
adc
mov
dec
sub
dec
pop
adc
loope
jo
pop
adc
xchg
mov
jb
ldmxcsr
mov
adc
xchg
rolb
lret
pop
adc
mov
stc
mov
shl
gs
dec
jmp
sbb
fsubrs
mov
push
stos
repnz
fsubrs
mov
rcrb
xor
inc
mov
adc
ficompl
ficoml
mov
adc
adc
mov
mov
adc
rorb
out
rol
xchg
addb
frstor
jecxz
xchg
out
cmpsb
mov
jns
inc
push
mov
push
dec
inc
test
fcmovnu
and
smsw
cmp
cmc
cmp
jle
sbb
cmp
jle
inc
test
xchg
cmc
jge
mov
or
mov
adc
jo
dec
adc
jmp
mov
cmpsl
imul
lret
and
push
mov
outsb
bound
xchg
fs
push
adc
xchg
outsb
add
mov
adc
mov
int3
fstl
cmp
inc
out
dec
sahf
jbe
repnz
xor
jne
mov
inc
dec
pushf
js
mov
adc
sub
mov
int
lahf
sbb
lahf
movsb
pop
cmp
jp
ja
aad
mov
int
sub
lea
adc
call
sub
insb
adc
ret
pop
mov
insl
cmp
xchg
mov
dec
xor
xor
add
adc
adc
adc
or
adc
mov
push
adc
add
lds
push
adc
cmpsb
dec
sahf
inc
mov
lret
and
or
dec
dec
imul
loopne
inc
push
xchg
daa
jmp
flds
inc
in
enter
leave
popf
sbb
inc
out
shr
fwait
push
movsb
pop
dec
ret
repz
out
insb
mov
test
pop
adc
adc
es
pop
pop
movsl
dec
xchg
sbb
adc
in
or
jecxz
ss
jl
ret
out
das
js
rcll
addr16
shr
jge
xor
movb
fsubl
lea
cmp
fidivrl
dec
fstl
pop
cmp
cmp
rolb
je
dec
hlt
and
dec
push
mov
push
aaa
or
sub
ret
dec
pop
dec
inc
dec
pop
adc
in
pusha
dec
pop
adc
out
xchg
addr16
fcomps
loop
insb
fsubr
pop
xor
add
xor
mov
movsb
pusha
xor
repnz
ret
adc
cld
push
adc
xchg
push
stc
imul
enter
jge
faddl
xchg
inc
push
notl
and
loope
lcall
int
sub
push
pop
adc
movsl
lret
popa
mov
xor
dec
fbstp
pop
cmp
inc
jnp
push
cmp
aaa
xor
jge
pop
cli
cmc
hlt
cmovns
inc
shll
fs
jle
push
ret
lahf
shlb
mov
andb
shl
insb
ja
stc
cmp
icebp
cmp
inc
adc
stc
sbb
push
ljmp
js
ja
fwait
or
sub
xchg
cwtl
jge
into
shl
and
adc
lods
daa
inc
sub
push
scas
jno
insb
mov
mov
lods
mov
xor
call
push
xlat
or
mov
mov
mov
into
das
add
ficoml
cmpsl
loop
xchg
movsl
mov
mov
sarb
in
in
lcall
shrb
jb
adc
or
dec
pop
adc
bnd
mov
sub
sbb
ljmp
or
xor
push
jg
mov
dec
imul
imul
ret
int
outsb
enter
dec
mov
popf
inc
mov
lods
adc
mul
push
out
fiaddl
mov
adc
jno
imul
shrl
mov
enter
dec
sub
dec
clc
outsl
add
aas
outsl
inc
insl
ret
arpl
mov
sbb
sub
int
addl
xchg
inc
data16
adc
fisttps
push
push
jbe
test
mov
and
mov
add
ret
stos
ja
repz
cwtl
cli
enter
sub
sbb
fwait
cmp
fcomip
movsb
mov
sbb
xchg
xor
push
sub
mov
shll
dec
mov
lahf
mov
lret
iret
loopne
jbe
imul
fsts
nop
cmp
cmp
cltd
pusha
call
xor
leave
adc
xchg
sub
jns
data16
dec
push
sub
out
push
pusha
ret
xchg
sbb
cwtl
mov
sbbb
lahf
stos
pop
mov
sahf
jbe
data16
movl
inc
xlat
in
mov
or
mov
mov
jle
dec
push
int3
add
pop
xor
loopne
jle
pop
mov
mov
popa
shrb
xchg
test
mov
ret
or
and
pop
dec
mov
jae
or
mov
mov
aas
mov
fmuls
xor
andl
dec
fwait
ret
lock
push
int3
lcall
push
mov
popa
ret
mov
int3
xchg
and
or
out
cmp
jg
pop
mov
mov
popa
ret
mov
int3
xchg
and
aaa
je
dec
pop
adc
add
xor
xor
push
lcall
or
inc
test
imul
insl
push
cmp
repz
outsl
fidivl
cld
pop
push
sbb
or
and
mov
inc
xchg
mov
xchg
popf
stos
xchg
xchg
das
pop
mov
xor
int
mov
xchg
mov
mov
nop
les
mov
js
mov
lds
pop
fimull
inc
outsl
push
loopne
mov
and
aas
repz
sbb
rorl
pop
fimull
mov
mov
fwait
dec
in
or
inc
ret
xor
or
sub
adc
mov
inc
fimuls
mov
ficompl
sbb
gs
adc
daa
int3
adc
mov
jecxz
mov
orl
xor
repnz
jnp
clc
nop
lret
test
imul
outsl
mov
add
and
cmc
daa
out
andb
notb
adc
cmp
mov
les
push
popf
sub
add
cmpl
ds
stos
or
jnp
push
addr16
ss
mov
and
push
call
in
push
insl
aam
mov
jp
sbb
clc
sub
sbb
push
arpl
arpl
cmpsb
lret
adc
mov
aaa
mov
mov
add
xchg
cmpsl
pop
pop
leave
push
push
popa
sbb
or
adc
pusha
mov
cwtl
sbb
xchg
nop
aaa
cmc
mov
scas
inc
cwtl
cs
xor
inc
xchg
mov
pop
in
xor
rcrb
mov
inc
scas
push
inc
lds
lret
cmp
jae
iret
call
fs
les
or
add
jno
lds
in
repz
xchg
in
dec
lods
loope
mov
lods
je
inc
pushf
dec
cmp
jbe
mov
sub
dec
pop
data16
mov
addr16
aam
xchg
imul
je
in
inc
mov
adc
insb
fcoms
adc
imul
ss
out
adc
lea
push
pop
adc
jae
lock
or
jge
mov
adc
xor
enter
jge
lret
popa
add
mov
xchg
mov
inc
aas
divb
test
cmpsl
shr
stc
ror
notb
ja
imulb
nop
out
cs
jno
jmp
fs
repnz
pop
subb
push
in
adc
jl
xor
dec
push
shrl
sub
mov
sub
pop
popa
pop
dec
adc
popf
mov
jo
pop
call
ss
fadd
addl
insb
dec
mov
int3
adc
cmp
out
int
xor
repz
mov
popf
sub
push
movntps
jp
inc
inc
filds
insl
fistpl
es
sahf
xor
and
and
dec
test
dec
xlat
lock
pop
xor
jo
fstl
out
dec
jbe
dec
xchg
movsb
push
inc
or
orl
shlb
pop
xchg
xor
adc
mov
cmp
loopne
dec
pop
mov
scas
movsb
lcall
pop
into
std
and
mov
xor
cmp
ret
bound
sar
or
enter
data16
mov
scas
pop
jne
dec
sbb
test
sti
add
xchg
and
fnstcw
xor
enter
lods
push
jae
add
or
nop
mov
xor
sbbb
test
sbb
dec
push
cmc
fstps
pop
dec
popa
mov
and
aas
or
nop
push
mov
mov
xchg
cs
decb
xor
jecxz
popa
push
mov
out
mov
into
es
ss
jmp
push
jns
movsl
mov
jnp
cmpsb
sbb
mov
xchg
mov
lods
pop
cmp
cwtl
les
inc
or
and
mov
or
push
sbb
cwtl
mov
shlb
push
or
out
pusha
loop
jne
roll
bound
mov
push
repnz
cmc
out
out
lahf
fstpt
cmp
out
faddl
or
mov
fnstenv
and
sbb
and
mov
sbbb
xchg
sub
aaa
dec
xor
inc
xchg
push
pop
push
mov
xchg
xchg
std
xor
and
es
jbe
cmpsl
mov
das
cmp
mov
fadd
rol
sub
sbb
mov
out
add
sub
or
mov
out
pop
std
xor
xlat
inc
adc
dec
dec
movsl
push
out
sbb
and
xor
es
mov
sbb
sub
js
fs
aas
xchg
sbb
stos
or
jns
cmpsb
dec
orl
or
js
fistl
adc
add
adc
add
adc
add
adc
sti
mov
xor
mov
inc
bound
push
sbb
mov
insb
push
lods
sbb
aaa
dec
pop
xchg
ljmp
testl
xor
mov
xchg
adc
adc
push
adc
nop
xorb
xchg
sub
push
pop
enter
loope
adc
xchg
push
lds
lock
subb
add
add
fcoms
mov
add
out
mov
aad
push
test
loope
pop
gs
es
js
fwait
add
lods
push
in
add
pop
ja
add
daa
and
test
xchg
jne
and
es
jp
push
cmp
cmpsb
fcmove
lds
scas
mov
nop
mov
adc
adc
jo
in
fnstenv
fisubl
pop
out
pop
in
scas
mov
mov
fcmovu
hlt
dec
push
out
xchg
mov
inc
out
mov
loope
cli
and
sub
cmp
bound
in
or
stos
cmp
aam
nop
dec
push
out
mov
pop
sbb
jp
repnz
rorl
or
sarb
sub
xchg
dec
jbe
jge
jl
pop
scas
btr
test
ret
mov
push
les
repnz
aam
pusha
lea
xchg
push
xor
inc
mov
adc
sahf
movsb
aas
adc
fsubrl
cld
cmpsl
cmp
push
nop
dec
cwtl
inc
adc
loope
jp
fsubl
fs
pop
adc
aad
push
pop
adc
jno
mov
adc
add
das
pop
in
add
inc
push
pushf
fldcw
jecxz
insl
push
fdivrs
sbb
jo
pop
jg
das
sbb
jmp
adc
mov
adc
ret
std
shlb
mov
lret
inc
pop
xchg
and
xor
adc
fidivrs
dec
sarl
pop
or
xchg
ret
mov
sub
fildll
push
sahf
notb
pop
adc
jmp
sbb
pop
jne
cs
mov
in
sbb
ja
and
lahf
jp
push
jecxz
int
xchg
rclb
add
repz
inc
add
sbb
mov
mov
mov
scas
mov
cmp
push
nop
pavgb
mov
inc
adc
adc
cs
push
xor
and
fsubl
mov
sbb
push
pop
adc
jmp
mov
out
test
push
or
rclb
cmp
adc
jbe
mov
sbb
cmp
push
pop
adc
pusha
test
arpl
enter
jb
loope
les
adc
enter
dec
shr
or
adc
pop
adc
test
cmp
push
adc
xor
push
lds
push
pop
adc
ret
push
pop
adc
xchg
ss
push
pop
adc
aad
mov
push
adc
ljmp
iret
or
adc
fldcw
jae
push
push
pop
adc
inc
mov
push
pop
mov
or
jbe
out
adc
xor
inc
xchg
mov
out
cmp
repz
inc
inc
pop
lods
xor
jmp
rclb
movsb
sbb
daa
xor
outsb
xor
in
adc
movsb
lock
mov
jnp
sahf
rclb
and
sub
jl
je
push
adc
ljmp
adc
push
pop
adc
push
dec
jnp
mov
push
pop
adc
or
je
daa
push
push
pop
adc
cli
js
push
pop
adc
les
loop
repnz
imul
xchg
test
push
mov
nop
inc
testl
out
nop
xorb
add
jl
sub
xlat
test
dec
or
mov
mov
pop
mov
xchg
sub
test
mov
pop
into
test
jne
repnz
insb
push
pop
adc
shrb
jp
mov
mov
faddp
aad
sbb
adc
rcrl
and
sbb
idiv
dec
pop
mov
out
jge
jns
ret
shlb
cmp
out
sub
cmp
pop
leave
mov
or
sub
inc
and
cs
xchg
pushf
adc
fst
jno
lret
clc
add
stos
jbe
add
add
data16
test
test
decb
sbb
mov
and
int
mov
shll
enter
pop
adc
and
jo
pop
adc
dec
push
push
inc
pop
pop
pop
pop
fs
cmp
lds
sbb
jg
or
pop
mov
out
add
repnz
push
pop
adc
gs
das
icebp
cltd
js
mov
shll
out
cmp
adc
in
mov
xor
outsl
lock
push
pop
adc
pusha
push
pop
adc
push
pop
adc
adc
in
lcall
push
pop
adc
fisubrl
sbb
pop
sub
je
cld
int
fdivrl
in
push
fs
pop
adc
xchg
leave
in
mov
sbb
test
pop
adc
in
add
cmp
jne
mov
adc
sub
fs
pop
adc
bound
lcall
pop
adc
ret
loopne
sub
mov
xchg
mov
rcl
pop
adc
push
add
mov
je
shlb
xor
int3
mov
xchg
subb
pop
adc
mov
pop
adc
les
cwtl
cwtl
pop
lret
adc
push
push
add
mov
into
jl
pop
adc
or
je
pop
adc
mov
fcmovu
jle
pop
adc
mov
add
adc
jp
pop
adc
bound
fstps
pop
jbe
pop
adc
xor
pushf
cmp
fstl
repz
xchg
dec
jp
pop
adc
movsl
mov
int3
fimuls
cmp
arpl
sub
sarl
adc
mov
int
push
test
dec
xchg
xor
pop
adc
push
insl
repz
mov
adc
mov
clc
adc
iret
in
push
movsl
test
dec
sub
and
push
hlt
outsb
scas
inc
aaa
sbb
push
dec
xchg
inc
cltd
push
jge
loope
pop
dec
imul
outsl
mov
fsubs
scas
inc
dec
call
cwtl
insb
push
pop
adc
mov
push
test
inc
push
mov
adc
test
mov
pop
inc
jmp
push
icebp
out
mov
aas
mov
popf
ds
pop
adc
pop
or
mov
adc
mov
adc
scas
adc
cmp
out
pop
xchg
ror
shll
adc
pop
in
mov
ret
xor
lcall
mov
xchg
xor
cmp
xor
mul
hlt
add
push
mov
rol
and
mov
xorl
fdivrp
push
pop
ds
add
mov
out
f2xm1
sub
xor
xchg
cltd
mulb
pop
loop
push
cmc
push
pusha
mov
cwtl
mov
in
pusha
add
jmp
mov
pop
pushf
icebp
inc
mov
lret
call
outsb
mov
bsf
cli
into
mov
dec
mov
imul
ljmp
push
mov
push
icebp
inc
add
inc
push
imulb
push
xor
dec
dec
xor
sbb
sarl
sub
fwait
daa
test
lahf
jns
cltd
test
in
pop
shlb
inc
jns
cmc
scas
push
jecxz
jmp
test
push
imul
push
pushf
jl
ss
cmp
push
inc
cmpsb
mov
std
daa
jecxz
mov
out
mov
fsubrl
add
das
pop
loop
jle
jge
inc
mov
stos
pusha
pop
and
adc
or
mov
out
mov
iret
imul
mov
mov
inc
pop
call
out
fwait
and
pop
into
popa
movsl
xchg
and
mov
pop
out
shrl
dec
insb
test
xchg
inc
aam
sbb
cmp
inc
xchg
repnz
mov
test
hlt
or
dec
out
fisttpll
jo
pop
adc
pop
adc
sbb
push
lcall
or
out
fcomip
pop
jle
mov
mov
loope
lods
shl
popa
push
repz
jns
icebp
mov
ss
dec
dec
adc
pop
in
add
incb
add
mov
inc
cmp
jns
sbb
sbb
push
inc
scas
dec
xchg
popf
jb
ljmp
push
or
mov
sahf
mov
pop
icebp
dec
cmc
ss
lods
or
push
or
adc
pop
imul
cmpl
dec
pop
dec
add
pushf
out
and
xchg
ret
ja
outsb
insl
push
repnz
enter
mov
push
pop
pop
sbb
jp
mov
adc
sbb
imul
scas
in
xchg
js
jo
fmuls
lea
scas
aaa
cmp
mov
iret
and
in
add
sub
push
je
add
les
adc
pop
stos
cmp
shlb
cmpsl
mov
test
push
into
ja
mov
std
jmp
xchg
je
hlt
inc
iret
popf
pop
cmp
rclb
jns
mov
pop
fnstcw
bound
cmp
inc
in
jns
loope
pop
aam
cmc
xchg
jg
push
rorb
dec
pop
insl
pop
es
cmp
adc
outsb
test
or
sub
out
dec
xor
xor
pop
mov
push
pop
adc
loope
push
mov
mov
test
lret
push
sbb
dec
fs
sbb
sub
loope
xor
jge
mulb
sub
ss
mov
mov
dec
cmp
xor
repz
inc
sbb
adc
mov
and
inc
cmp
add
test
and
jnp
push
or
in
or
or
xor
out
mov
pop
jmp
sub
mov
call
mull
pop
jns
dec
jmp
dec
inc
sarb
and
jmp
add
and
xor
stos
daa
addr16
leave
adc
dec
into
cmp
addr16
push
movsl
loop
fidivs
sub
jl
lods
cli
jmp
pushf
bound
int
or
mov
cmpsl
push
sbb
adc
out
xor
test
sbb
add
push
inc
mov
hlt
push
pop
adc
popl
xchg
mov
jge
insb
mov
adc
popa
jg
mov
lcall
addb
popa
jecxz
ljmp
push
mov
repnz
jge
call
out
xor
in
pop
les
jbe
cmpsl
or
pop
sbb
xchg
lcall
mov
imul
push
jmp
inc
mov
inc
mov
imul
inc
inc
ss
mov
ljmp
sahf
cmpsb
push
sub
or
push
loopne
xor
mov
dec
cli
ja
jle
inc
mov
xchg
inc
sub
data16
and
fstpl
mov
mov
mov
cmp
xor
sbb
scas
andl
inc
test
cld
js
test
mov
ljmp
inc
push
bswap
cwtl
mulb
adc
xchg
pop
jl
adc
mov
and
lahf
in
shll
loopne
sub
push
sub
imul
xor
inc
sub
adc
loopne
in
loop
xlat
rcl
mov
fwait
sbb
popf
sbb
fsubrs
movsl
mov
fcmovu
push
aaa
insl
hlt
push
pop
adc
lock
mov
sarb
mov
lret
jl
lds
add
in
mov
movsb
popf
push
cmp
pop
test
fists
cmp
fsts
outsl
cmpsl
pushf
sbb
enter
jo
pop
adc
cmp
loopne
bound
cmc
imul
ja
and
xor
mov
fucomip
push
out
cmpsb
bound
and
rol
dec
fimull
xchg
and
leave
jne
mov
sub
sti
xchg
push
repz
pop
je
popf
outsb
ss
fwait
add
sarb
nop
fdivs
pop
adc
pop
call
push
cmp
cmc
mov
or
int
adc
mov
and
lret
mov
mov
iret
or
cltd
shll
imul
pop
sub
in
pop
push
sub
pop
add
adc
and
out
sub
mov
cmpsl
fwait
xchg
mov
xor
shr
or
xlat
icebp
sbb
push
push
daa
push
sbb
adc
push
imul
mov
pop
xchg
fsubp
mov
inc
aas
movsl
lods
and
and
ret
jns
ret
pusha
daa
lds
addr16
out
sahf
js
push
out
mov
inc
jbe
xchg
and
jge
lds
repz
inc
push
daa
shlb
nop
pop
pop
imul
pop
fisubrs
mov
xor
sub
xchg
icebp
xor
cmpsb
cmpsl
repnz
orb
mov
js
push
adc
ljmp
cmc
les
adc
aam
lret
movb
sbb
scas
jno
lods
mov
sbb
stos
add
movsb
mov
adc
pushf
adc
adc
jmp
push
adc
and
inc
jg
pop
arpl
inc
loope
pop
xlat
cmpsb
inc
mov
sub
std
mov
jns
int3
xor
repz
in
lods
out
pushf
aaa
push
outsb
pusha
nop
xlat
mov
sub
mov
mov
dec
jmp
aam
cli
xlat
imulb
inc
inc
mov
xchg
xor
shrb
jns
add
mov
fnstenv
call
dec
arpl
ret
cmpsl
ret
pop
cmp
inc
add
jg
les
or
fistpll
sti
emms
nop
fs
xchg
lea
pop
adc
imul
imulb
add
push
sub
add
sub
and
enter
cltd
sub
cli
in
adc
js
inc
mov
mov
movsl
and
pushf
pusha
xor
pop
jg
lock
mov
aad
or
add
xchg
cli
or
mov
stos
mov
push
loop
push
mov
inc
jns
in
sti
mov
popa
mov
lock
sbb
push
dec
pop
xchg
arpl
mov
inc
sbb
mov
repz
outsl
call
jge
clc
jo
adc
icebp
out
ficompl
inc
arpl
mov
lahf
std
movsl
mov
movl
imul
dec
dec
lock
mov
and
mov
outsl
add
xor
mov
in
adc
adc
sbb
inc
sbb
mov
pop
cwtl
xchg
addr16
cmp
pop
sbb
mov
cmpsb
mov
cwtl
adcb
adc
les
or
mov
cs
iret
mov
pop
add
loop
pop
sahf
mov
inc
vpslld
data16
xchg
shll
lcall
in
movsb
addl
loope
ss
in
adc
adc
or
push
jns
cli
sbb
adc
cmp
adc
adc
cmc
sub
rep
cmpsb
mov
add
mov
les
add
pop
fldenv
ficomps
outsb
mov
repnz
das
inc
mov
or
xchg
pop
xchg
fdivrs
xor
cwtl
or
leave
int
fdiv
shlb
int
cld
test
mov
adc
push
adc
jns
cmpsb
pop
adc
push
aad
mov
mov
cmpsb
pop
adc
push
test
xor
dec
jecxz
or
int
mov
sub
xchg
les
repz
inc
push
push
jp
sub
or
movsb
dec
stos
fstpt
fcoms
out
inc
leave
adc
push
sbb
int
xor
xchg
out
mov
ret
xchg
fimull
xchg
es
mov
gs
lods
fdivrs
xor
push
daa
dec
mov
cmp
lahf
jp
pop
xchg
das
fldl
xchg
icebp
sbb
push
test
dec
outsl
scas
mov
rolb
xor
pop
xchg
das
gs
stos
xchg
ror
fnsave
lods
pop
out
cmp
push
adc
jns
int
adcb
adc
mov
dec
or
and
es
ja
fidivrs
pop
adc
lret
test
popa
jmp
xchg
ror
sbb
movsb
out
out
adc
fiaddl
jae
or
mov
adc
aas
inc
xchg
lds
adc
add
mov
incl
and
cmpsb
stos
mov
in
pushf
ret
test
ret
and
pop
mov
add
in
out
iret
gs
jp
das
sub
leavew
xor
pop
popa
xor
and
movsl
rorb
fxch
fnop
mov
into
push
ja
cmp
pop
pop
into
mov
popf
inc
jecxz
movsl
pushf
xor
inc
nop
sub
mov
push
xor
push
push
push
mov
pushf
adc
in
lods
or
pop
pop
xor
and
sub
jae
ss
iret
jle
push
inc
pop
div
ficoml
push
push
movsb
cmp
add
adc
xor
movsb
pop
adc
out
cmc
pop
outsl
popa
cmp
lret
cmpsb
xorl
cmc
dec
dec
ret
dec
scas
stos
shll
lret
sti
stos
clc
fsubs
add
dec
sbb
popa
sub
mov
test
mov
push
mov
addb
xor
loope
inc
jo
xchg
cmpsb
leave
scas
inc
cwtl
pop
push
gs
sbb
jae
sub
mov
sbb
adc
dec
cmpl
sbb
pop
xchg
fadds
test
aam
mov
sbb
jl
jns
sti
out
xchg
ljmp
loop
or
fcmovne
push
shlb
jge
push
xchg
das
stc
icebp
bound
sub
mov
fwait
sub
fucomp
shlb
les
pop
mov
jmp
shrb
insl
scas
mov
andl
push
shrl
sub
aas
imul
mov
fdiv
sub
into
into
inc
mov
sub
loop
dec
push
mov
pop
pop
cmp
lahf
jno
xchg
sub
xchg
push
enter
cmpsl
icebp
nop
lahf
leave
dec
add
xor
fldenv
out
hlt
jo
mov
add
fcmovb
inc
dec
popf
rorb
inc
mov
stos
xchg
cld
iret
mov
cwtl
movsl
loope
push
je
mov
and
rolb
mov
sub
xor
loop
test
mov
sub
adc
sbb
imul
mov
out
cmp
add
pushf
test
data16
mov
mull
xor
pop
adc
sub
jecxz
push
ljmp
xor
xor
lods
ds
sti
outsb
aad
int
nop
sbb
pushf
test
std
inc
pushf
test
pop
lea
mov
cmp
sbb
fstpt
test
sub
dec
xchg
adcl
nop
bound
mov
pushf
sub
mov
pushf
test
push
int
clc
jge
or
inc
push
jo
xor
sbb
sub
push
dec
xchg
xor
add
xchg
fwait
or
pop
scas
std
cs
enter
pop
pusha
loopne
cld
shl
popa
push
insl
pop
dec
popa
ret
xchg
jg
mov
and
mov
adc
stos
sub
or
adc
mov
mov
mov
adc
clc
daa
ret
rcl
jmp
lcall
pop
sbb
and
repz
test
cltd
jle
xor
mov
fldl
lods
pop
xor
lods
mov
add
mov
xchg
jo
aas
sub
iret
mov
cmp
rolb
sahf
dec
jns
flds
inc
xchg
cmpsb
lea
repnz
out
fildl
xchg
inc
lods
movsb
pop
push
dec
fidivl
addb
xor
in
lret
jbe
pop
jge
mov
sub
mov
mov
xchg
test
push
adc
push
push
or
pop
adc
loop
pop
push
cmp
dec
sub
adc
jo
adc
adc
out
sub
pop
adc
adc
adc
and
pop
lret
or
pop
adc
or
pop
adc
lahf
cmp
mov
sbb
les
repz
cmp
xor
test
or
mov
dec
movsl
pop
adc
jnp
jmp
arpl
pop
push
movsb
pop
fs
mov
jb,pt
call
ss
pop
push
addr16
push
adc
push
in
adc
push
xor
push
mov
in
das
enter
out
scas
or
cwtl
push
mov
pushl
stc
inc
fnstsw
lret
pop
push
das
int
and
shrb
test
push
push
sub
adc
sbb
movsl
xchg
les
dec
xchg
js
sbb
sbb
cmpsb
sub
cmp
rcll
jl
pop
outsb
aas
jmp
cmpsl
mov
sbb
xor
xchg
outsb
dec
outsl
das
stos
clc
adc
adc
orb
mov
mov
hlt
xchg
cmpsl
mov
movsl
pop
adc
je
pop
pop
dec
movsl
pop
adc
sqrtps
xchg
dec
loope
imulb
imul
cmc
dec
in
cmp
adc
and
xlat
jno
mov
int3
push
adc
jns
daa
jne
or
xchg
cld
adc
adc
mov
das
lcall
and
sbb
inc
cmp
xor
push
cmp
pop
mov
xlat
jmp
jne
inc
outsl
lods
pop
jecxz
xchg
in
lret
rclb
jne
push
fdivrl
sub
lcall
pusha
xor
std
pop
add
test
sub
sub
sub
push
add
jbe
jmp
pop
subb
fwait
mov
fcompl
pop
pop
repnz
setnp
cmpsb
pop
adc
int3
les
xlat
fnsetpm(287
cld
add
adc
push
and
mov
push
xor
loopne
pop
enter
popa
ret
repz
sub
mov
xorb
and
push
pusha
orb
inc
icebp
xchg
adc
fnstsw
mov
cs
dec
xor
jecxz
xor
iret
add
mov
and
ljmp
push
lods
shl
gs
jle
cmp
sub
and
mov
mov
mov
pop
es
fdivs
cmp
push
sbb
aam
dec
negb
orb
in
sbb
xchg
fnstenv
sub
outsb
mov
jg
leave
imul
sub
xor
adc
adc
int3
int3
push
loop
mov
repz
or
mov
out
dec
in
pop
jno
jle
push
mov
enter
jg
xlat
inc
xchg
jb
lods
pop
cmp
fprem1
cltd
xor
imul
dec
xchg
stos
sahf
enter
out
loopne,pt
and
xchg
mov
les
dec
sub
in
imul
or
jo
pop
loopne
mov
fdivrs
and
or
and
and
enter
mov
jnp
and
insl
xchg
and
ret
jne
ret
sbb
mov
ret
out
enter
push
and
fnsave
xchg
xchg
mov
inc
cmp
mov
xchg
xchg
xor
pop
rclb
push
adc
xor
adc
adc
lods
scas
lock
movsl
inc
popa
mov
xchg
les
stc
xchg
insl
aas
test
xchg
fistpl
addr16
mov
pop
inc
loop
insb
mov
lea
outsl
mov
lds
jns
sbb
in
cmpb
mov
mov
leave
sbb
inc
jno
cmp
cmp
jbe
out
pop
sbb
push
ret
push
rolb
sbb
ds
mov
insl
mov
xchg
lret
popa
lods
sbb
pop
shl
mov
adc
dec
xor
dec
xor
pop
adc
cmp
push
icebp
and
sub
pop
cmc
add
jl
leave
or
inc
sbb
mov
lea
add
inc
inc
aaa
repz
sti
push
mov
add
mov
mov
xor
popa
lret
sbb
stc
fwait
mov
xchg
out
fstpt
lods
mov
mov
adc
mov
adc
jl
mov
and
aad
inc
orl
sbb
js
rclb
or
imul
jb
jecxz
push
pop
mov
jae
data16
ja
xor
mov
jne
scas
mov
lods
stos
ss
pop
or
lods
pop
insl
or
aaa
stc
stc
jae
iret
add
scas
adcb
adc
fidivs
dec
test
push
xchg
push
jge
ror
jo
repz
fdivl
and
ljmp
xchg
mull
hlt
loopne
outsl
add
ret
or
cmpsb
pop
adc
push
mov
cmpsb
pop
adc
in
cmp
mov
sub
iret
mov
in
pop
jne
jle
frstor
sbb
insb
xchg
aaa
sbb
or
sbb
rcrl
ret
lret
dec
cmp
cmp
sbb
adc
push
movsb
sub
mov
dec
repz
pop
cmc
and
jo
es
jle
lock
sbb
test
push
out
jl
fldt
jbe
pop
adc
and
rcrb
mov
jmp
push
mov
out
xchg
fs
inc
ljmp
fstps
in
rclb
cwtl
imul
mov
out
xchg
pusha
push
hlt
inc
lret
push
in
jmp
inc
pop
pop
stos
dec
mov
cmp
adc
gs
dec
lret
inc
mov
popa
adc
mov
shl
jo
or
jo
int
mov
dec
test
stos
xor
lds
movsb
lea
mov
imul
adc
jns
xchg
outsl
insb
repnz
cmpsb
pop
adc
hlt
repz
adc
stos
cs
mov
and
inc
adc
rclb
xchg
mov
lods
pop
out
out
mov
xchg
xchg
lcall
in
xchg
hlt
adc
adc
push
fcoms
js
adc
adc
and
insl
or
pop
scas
xchg
pop
inc
push
xchg
jbe
xor
js
pop
movsl
mov
call
mov
push
fwait
dec
mov
daa
pop
mov
jno
loopne
movsl
or
fnsave
jno
repz
rclb
push
movsw
sbb
pop
mov
sahf
loopne
imul
xor
imul
adc
mov
repnz
mov
pop
adc
sti
mov
fdivrs
sbb
jp
lcall
cmp
out
fidivl
popa
pop
mov
xor
inc
orb
movsl
mov
mov
sbb
dec
adc
adc
fmul
dec
popf
mov
pop
pop
popa
ret
xchg
push
sub
dec
das
pop
mov
lahf
mov
xchg
jl
mov
fnstenv
xchg
lret
pop
cmc
add
add
pop
adc
fisubrs
adcl
push
pop
mov
cmpsb
pop
adc
mov
dec
xchg
sub
test
std
cmp
pop
mov
pushf
mov
push
mov
aad
mov
xchg
adc
pop
adc
lahf
add
push
inc
adc
loopne
push
sarb
jbe
sub
icebp
data16
xor
adc
adc
cmp
dec
mov
arpl
xchg
cmpsb
pop
adc
ret
std
xor
pop
clc
out
sbb
fsubs
shlb
aas
pop
mov
pop
icebp
aam
dec
jl
clc
dec
or
cmpsb
pop
adc
neg
xchg
int
pop
mov
dec
iret
inc
cmp
bound
pop
bound
mov
daa
aaa
inc
cmp
mov
adc
add
outsb
dec
pop
xchg
push
adc
adc
jg
inc
mov
jle
aam
inc
pop
or
cmpsl
sbb
or
jp
movsb
cld
mov
dec
in
in
mov
lods
or
ds
ds
pusha
clc
and
in
pop
adc
mov
jmp
and
ja
xchg
cmp
out
add
pop
adc
adc
dec
mov
adc
and
add
pop
ficoms
test
push
mov
pop
mov
incl
mov
push
adc
or
flds
movb
cltd
sbb
or
adc
add
enter
mov
mov
ret
and
sbb
mov
sahf
mov
push
pop
stos
mov
imul
lods
inc
paddd
pop
or
jg
inc
into
sahf
cmp
sub
mov
mov
adc
mov
push
adc
leave
nop
lods
push
adc
fistl
inc
leave
jge
in
rcl
shr
xor
mov
push
adcl
dec
out
sahf
push
push
aad
out
push
fsqrt
inc
mov
adc
inc
out
cmp
aas
sbb
xor
jns
fs
out
jb
cs
subb
mov
fldcw
mov
out
push
pop
fisubrs
adc
cli
clc
and
and
fwait
xor
fstl
in
push
out
xchg
dec
sahf
sub
or
xor
mov
mov
leave
cltd
cltd
out
jb
sub
jb
pop
dec
sbb
out
lret
jns
jl
pop
adc
push
xorl
mov
loopne
sbb
sahf
cmp
mov
cmp
mov
and
leave
jne
loop
fsts
cmp
daa
dec
mov
mov
adc
sbb
insl
lock
add
push
movsb
out
in
dec
push
fucomi
call
mov
sbb
jnp
pushf
test
stos
pusha
jne
cltd
inc
sub
xor
pop
fwait
ss
cmpsb
mov
pop
pop
inc
cmp
xor
test
push
jo
xchg
jns
mov
push
adc
pushf
test
jg
mov
pushf
test
push
pop
incb
lock
insl
leave
xchg
and
mov
lock
jbe
movsb
dec
xor
cmp
into
add
loope
rclb
mov
cmpsb
pop
adc
fcoms
push
subb
and
cmpsb
jbe
mov
insl
xchg
mov
mov
sbb
lcall
sar
adc
aad
in
fldcw
shlb
xchg
dec
adc
adc
shlb
in
xchg
pop
jae
js
fbstp
insb
enter
xchg
out
push
leave
aaa
mov
stc
dec
fmull
adc
pop
imul
sbb
fsubs
cmpsb
pop
adc
mov
into
daa
push
fnsave
inc
push
dec
lods
fnstsw
mov
pop
adc
loopne
push
sbb
int
sahf
lret
jecxz
std
xor
inc
enter
arpl
push
adc
push
inc
add
gs
cmp
and
push
and
rol
or
mov
sbb
or
sbb
lods
push
fimuls
mov
call
sbb
adc
mov
adc
mov
push
stos
icebp
fwait
mov
mov
pop
ss
nop
pusha
dec
pop
rcll
push
adc
push
push
dec
push
push
xchg
xor
cmpsb
pop
adc
lods
push
fwait
aam
jae
popf
andl
jo
dec
xor
call
or
xlat
fildl
cltd
sub
stos
pop
dec
push
push
inc
pop
jp
inc
fnstenv
addr16
inc
dec
imul
js
into
in
flds
out
fstpt
pop
adc
dec
jns
cmp
adc
insb
je
cli
or
cmpsl
fs
enter
scas
adc
or
pop
and
bound
inc
ja
insl
popa
cs
fstpl
int
ja
jo
push
adc
pop
cmp
bound
ds
lock
daa
ja
xor
aas
out
ljmp
lahf
mov
and
and
pop
or
push
andl
adcb
pop
cltd
adc
push
insl
fwait
sub
ja
jle
jp
sbb
lods
mov
sub
iret
daa
or
and
cmp
pop
mov
int
in
dec
cld
dec
xlat
fcmove
push
push
and
push
movsb
out
xor
jle
xor
xchg
pop
cmp
xchg
outsb
int
xchg
das
pop
xor
pushl
push
adc
jb
dec
je
adc
adc
mov
rcl
shll
adcl
movsb
dec
xor
xor
call
pop
adc
dec
outsl
into
fsubs
enter
xchg
dec
fmul
mov
xor
repz
mov
leave
xchg
jae
bound
sub
and
and
loop
add
andl
lods
in
sub
int
cmp
mov
pop
jo
dec
ret
in
repnz
jae
mov
test
xchg
pop
cmc
push
shrb
push
push
xchg
pop
sti
nop
daa
pop
push
ja
and
mov
in
xor
xchg
aad
xor
test
mov
rorb
sahf
cmp
xlat
sub
and
sbb
pop
adc
mov
mov
push
adc
pop
mov
frstpm(287
xchg
int
adc
adc
scas
sbb
pop
adc
adc
adc
cs
mov
pop
adc
xchg
outsl
jo
scas
push
andl
out
cmp
xchg
xchg
nop
ret
cltd
pop
jg
pop
js
call
lds
pop
adc
cli
xor
sub
ret
jge
ret
pusha
daa
lds
xchg
sub
push
adc
sub
xchg
lods
cmpsb
mov
out
popa
loop
jno
jmp
push
jmp
loope
imul
inc
scas
jb
leave
jno
dec
movsl
pop
adc
xchg
lea
fdivs
insl
cmp
xor
dec
push
push
out
sub
xchg
mov
cli
dec
js
adc
adc
dec
clc
or
jg
pop
mov
sbb
imul
pop
sti
xchg
dec
nop
push
mov
xchg
in
insl
fldenv
mov
or
cs
outsl
push
adcl
jle
daa
push
cmp
push
testl
in
pop
add
xor
lret
cld
out
dec
jg
call
jno
arpl
push
adc
test
cmp
sahf
and
idiv
pop
ja
clc
xor
adc
pop
rcr
outsb
sbb
fistpl
mov
lock
loop
mov
je
or
add
clc
shl
or
mov
fwait
jl
xchg
fstpt
lods
test
aam
pusha
lds
stos
sbb
mov
stos
mov
fnstcw
repz
cmp
loop
sahf
xor
mov
xor
imul
dec
xor
push
adc
pop
pop
or
jae
std
cwtl
fcomps
dec
mov
nop
jo
sbb
cli
stos
pushf
imul
sub
movsb
or
popa
or
loopne
ds
repz
das
mov
out
repnz
push
mov
imul
lcall
popf
adc
and
lret
rcrl
jne
lret
ret
xlat
adcl
negb
xchg
jno
repnz
inc
add
arpl
jne
psrlw
call
sahf
or
imul
cmp
lret
sub
ret
test
pop
adc
out
push
mov
gs
movsl
adcl
jp
icebp
lods
fidivl
das
xchg
gs
sahf
add
jbe
dec
fisubs
push
mov
mov
xchg
jno
sbb
xorb
test
pop
adc
jns
outsl
inc
loopne
adc
ljmp
pop
stos
rcrl
mov
adc
xchg
adc
leave
and
dec
pop
adc
and
push
pop
imulb
into
xchg
in
fptan
cltd
jno
or
and
add
icebp
inc
push
mov
gs
pushf
jecxz
cmp
outsb
cmp
pushf
divl
cmpsb
insb
fcomps
inc
iret
add
fs
push
outsb
inc
mov
fstpt
aas
insb
sbb
out
xor
mov
pop
movsb
out
addr16
jge
xchg
xor
test
loopne
lahf
sahf
popa
ret
or
dec
pop
scas
xchg
push
jb
xor
xchg
mov
xor
imull
xchg
mov
xchg
mov
aad
repnz
sti
fwait
xor
loope
push
jle
adc
sub
or
lret
rorb
jge
imulb
pop
and
jb
mov
movl
repnz
push
inc
pop
push
push
leave
jp
mov
movsb
pop
shr
popf
shr
cwtl
lods
xchg
ljmp
leave
xchg
and
push
jge
sbb
pop
xor
xor
xor
ret
xchg
pop
ds
push
xchg
dec
xchg
das
aad
jge
das
mov
inc
mov
fistpl
xchg
int3
pop
cmp
and
gs
es
ja
flds
fidivs
pop
mov
movl
or
jns
cmp
ret
jno
imull
lret
add
cli
pop
adc
stc
jno
fisttpll
popf
xchg
mov
mov
lods
inc
sahf
mov
rep
lret
mov
pop
mov
mov
sar
popa
sub
xchg
push
cmpb
and
sbb
sbb
test
jg
loop
cltd
lret
es
mov
test
ret
lock
mov
push
arpl
out
xor
adc
xchg
lods
mov
out
out
outsl
and
jecxz
mov
xchg
mov
and
xchg
mov
rorb
cli
mov
add
sahf
inc
psubb
mov
cmp
cmp
enter
inc
adc
ss
outsl
pop
push
cmp
lds
ret
xlat
pop
lea
bound
bound
xchg
cmp
add
push
xchg
insl
dec
or
dec
iret
out
jle
imul
gs
and
sbb
scas
mov
push
in
lods
xchg
sahf
mov
sbb
jmp
shl
inc
push
dec
and
inc
and
dec
fidivs
int
mov
out
mov
cmc
sbbb
popl
adc
xchg
test
inc
jg
enter
sbb
sbb
mov
sbb
pop
xor
aas
sbb
jl
push
shrb
xorb
cwtl
inc
popf
sbb
out
and
jl
dec
cld
xchg
dec
call
jns
fdivs
in
insb
iret
jl
fists
mov
cmp
cmp
in
repnz
nop
push
mov
leave
xchg
xchg
adc
xchg
imul
sbb
es
sbb
mov
aaa
or
hlt
and
push
mov
iret
ror
jne
clc
cwtl
xor
mov
adc
into
or
mov
sarl
push
push
cltd
pop
mov
aad
and
stc
cmp
jbe
loopne
ret
pop
cld
iret
sbb
int3
bound
in
std
in
fidivl
dec
jo
testl
and
leave
nop
xlat
jnp
sbb
dec
inc
pop
jne
imul
mov
xor
push
dec
ficoms
push
fidivrs
sbb
daa
push
jl
cld
xor
push
mov
loope
sbb
push
into
dec
xchg
outsl
xor
mov
ret
cmp
sub
pop
adc
in
mov
jge
or
xlat
ljmp
cmpl
js
dec
sub
pop
mov
fmul
xchg
pop
push
pusha
dec
xor
mov
mov
ror
xchg
sbb
sub
pop
adc
xchg
fnstenv
sub
mov
in
in
xor
pop
dec
out
pop
or
lods
dec
jecxz
or
xchg
pop
mov
gs
xor
pop
mov
jecxz
sbb
dec
push
sub
pop
adc
pop
imulb
ret
mov
or
pop
mov
fildl
popf
out
fsubl
adc
mov
push
mov
cmp
cmp
mov
and
sahf
sbb
shrb
mov
xchg
mov
mov
loopne
adc
mov
pushf
loopne
pop
push
rolb
push
push
or
dec
gs
outsb
pop
movsl
sarl
outsb
imul
pop
adc
out
mov
stos
mov
inc
test
push
fs
popa
scas
test
or
fldl
sub
aaa
in
fwait
push
stc
adc
sub
sbb
sub
pusha
insb
fdivs
cmp
dec
imul
outsl
mov
xor
pop
dec
mov
pop
mov
pop
lret
fs
push
ja
int
sbb
xchg
sbb
decl
or
out
icebp
das
dec
in
jecxz
sbb
inc
mov
dec
cwtl
leave
out
fildll
fiadds
pop
fisubrs
jbe
jg
xchg
dec
arpl
mov
repz
mov
sub
lret
rolb
pop
movsl
fistpll
xchg
xor
leave
push
cmc
cmp
dec
imul
stos
test
push
jbe
mov
pop
fadds
pop
adc
mov
int
dec
out
out
rcrb
or
mov
inc
cmpsl
pop
adc
ficompl
xchg
fimuls
fwait
pop
or
jp
lahf
into
adc
push
and
rcrl
daa
cld
or
int
pop
out
push
xor
test
call
ficoms
divb
inc
jns
sbb
or
adc
inc
or
mov
movsb
pop
adc
movsl
pop
adc
cld
mov
xchg
test
cli
repnz
mov
lods
inc
push
loop
mov
test
fistpl
dec
mov
add
mov
inc
mov
and
inc
xchg
push
movsl
and
pop
and
mov
out
jbe
pop
sbb
pop
fnstsw
sti
add
xor
mov
jno
mov
test
cmp
adc
pop
dec
pusha
in
jo
push
adc
sbb
xchg
imul
adc
sbb
pop
and
outsb
sbb
adc
jno
adc
dec
dec
adcb
adc
insb
aaa
jp
movsl
pop
adc
sub
dec
xchg
sarl
stc
imul
ret
loop
outsb
jne
dec
icebp
pop
rcll
or
enter
adc
jnp
dec
fcompl
jge
in
add
mov
fistps
jecxz
into
js
repz
mov
imul
xchg
push
push
mov
push
insl
adc
clc
fstl
and
sub
movsb
sub
clc
popa
jl
out
adc
adc
mov
roll
mov
cwtl
push
imul
aas
add
adc
adc
in
adc
lret
filds
dec
mov
mov
cmp
dec
jnp
fs
mov
jb
mov
inc
xor
int3
inc
push
push
jmp
in
dec
adc
adc
call
es
add
das
out
fs
mov
push
sarl
stc
fs
pop
adc
push
mov
cmp
sub
xor
jbe
inc
test
sbb
imul
cli
repnz
sub
loope
popf
mov
aaa
and
arpl
adc
fldcw
pop
mov
inc
out
sbb
movsb
mov
dec
xchg
das
fldl
cld
bound
lcall
sub
cmp
fwait
or
rcrl
aaa
insb
pop
push
pop
adc
scas
loopne
adc
cmp
sbb
jae
das
aad
pop
push
pop
adc
sub
adc
outsb
add
lods
aam
mov
xchg
rclb
lds
scas
xchg
les
aaa
push
lods
pop
mov
mov
popa
add
add
xchg
and
inc
call
cmp
nop
icebp
fbstp
pop
dec
bnd
xchg
insb
cmp
xchg
das
mov
clc
or
lcall
out
cmp
or
repnz
push
arpl
adc
pop
mov
or
jno
xchg
fdivs
adc
mov
sbb
jl
fstp
jno
mov
dec
mov
lock
mov
or
adc
adc
int3
out
add
orb
fcoms
sbb
mov
cmp
push
inc
icebp
push
or
cmp
sub
or
and
jo
pop
adc
ret
aad
nop
mov
leave
xchg
and
jl
jmp
push
stos
sbb
push
inc
mov
push
into
subb
mov
adc
imul
insb
inc
mov
enter
xchg
das
pop
cmp
fwait
cmp
cmp
fidivs
inc
xlat
pop
nop
cmpsb
loope
xchg
and
andl
mov
mov
xchg
popf
aas
fcoml
dec
out
push
jbe
jo
mov
repnz
insl
or
mov
dec
jmp
add
xchg
fisubl
mov
adc
sbb
xchg
push
out
mov
push
xlat
pushf
inc
pushf
sub
insb
push
pop
adc
aad
adc
jg
rcr
xchg
xor
cmp
scas
scas
cwtl
xchg
push
adc
xchg
aaa
sub
pop
pusha
repz
mov
adc
add
sub
sbb
insb
push
pop
adc
movsl
lahf
mov
jl
push
adc
stos
push
loop
sti
mov
mov
insb
push
pop
adc
fdivrl
ret
stc
sti
fsubrs
adc
fstpl
adc
adc
ljmp
movsb
inc
and
jne
aas
sarl
xchg
inc
cltd
in
xor
inc
imul
cmp
sbb
dec
pop
xchg
mov
int
jne
sub
pop
adc
loop
mov
test
sbb
and
xor
loop
add
jo
pop
adc
fnstenv
xor
inc
xchg
add
push
nop/reserved
insl
mov
adc
and
sub
fildll
inc
orb
mov
mov
push
jo
pop
adc
sbb
pop
adc
push
pop
cmp
aas
in
out
es
ja
xchg
out
dec
push
mov
into
sub
push
adc
jge
loopne
into
es
pop
cltd
cld
xor
sbb
pop
aaa
cmp
cmp
pop
mov
push
shll
and
mov
sbb
imul
outsb
mov
lret
jg
sbb
mov
and
hlt
jge
inc
repnz
adc
adc
fs
xlat
scas
inc
mov
mov
lret
dec
notl
mov
fucom
or
push
loopne
cmpb
mov
repz
mov
push
mov
inc
fldl
pop
and
mov
std
popf
cmp
jns
or
xchg
mov
or
xchg
adc
push
or
pop
test
mov
xchg
or
rcr
push
shrb
lods
adc
sbb
adc
adc
sbb
ret
mov
sahf
mov
sub
cmp
pop
jbe
mov
dec
aad
cmp
out
loope
cmpl
lcall
adc
adc
adc
sbb
cmp
insl
ficoml
into
cmpsb
sbb
xor
dec
bound
xchg
scas
mov
push
adc
fiadds
ss
mov
and
add
call
addr16
sti
js
mov
rorb
out
sbb
push
mov
push
jp
push
push
test
mov
jns
fisubl
and
das
pop
sbb
leave
arpl
cs
mov
sbb
je
fidivl
rep
or
lret
and
mov
dec
cwtl
popa
ret
or
repnz
push
push
push
adc
loopne
xor
sbb
dec
sbb
pop
adc
ret
xchg
mov
aam
sbb
adc
push
sub
loope
lods
mov
sbb
fs
mov
repnz
mov
cwtl
mov
out
xchg
jecxz
cmp
sbb
js
jecxz
or
sbb
ret
sub
pop
dec
xor
cmp
xor
imul
sbbb
push
xchg
push
mov
pop
adc
imul
paddb
push
outsb
dec
xor
test
loopne
mov
adc
xor
fdivrl
xor
xchg
mov
dec
push
jp
in
and
inc
pop
movsl
pop
adc
ljmp
add
test
push
adc
jb
imul
arpl
sti
leave
adc
adc
arpl
fstpt
mov
adc
jno
pushf
adc
adc
les
fdiv
adc
adc
xchg
mov
sbb
movsl
pop
adc
ljmp
dec
mov
aam
mov
xchg
test
lds
mov
or
mov
or
aas
add
adc
adc
imul
lds
cmp
in
cmp
xor
inc
cmp
jbe
pop
adc
pop
adc
ret
rcrb
loop
adc
mov
mov
clc
sub
std
sbb
jb
inc
xchg
jle
and
sbb
idivb
out
sub
pop
fs
push
sbb
leave
mov
andl
outsl
arpl
les
xchg
adc
and
fwait
xor
inc
adc
pusha
shrl
movsb
dec
call
xchg
push
inc
outsb
je
in
pusha
pop
add
popf
mull
jo
cmp
stos
mov
add
rol
push
xchg
cmp
mov
pop
push
insl
loop
shr
fnstsw
pop
mov
outsl
adc
mov
add
jl
lds
sub
inc
fcmovne
pop
push
out
scas
hlt
fbstp
jns
es
out
ss
jae
or
cmc
imul
push
sub
xchg
mov
xchg
test
adc
rorl
adc
insb
add
sbb
mulb
add
ret
repnz
or
cs
xor
pop
movb
mov
or
xchg
add
xor
xchg
pop
jmp
out
pushf
dec
sbb
mov
jp
out
pushf
inc
aam
sbb
addr16
mov
xchg
fstl
lock
popf
nop
outsb
mov
int
dec
push
gs
outsl
mov
lods
xor
leave
cmp
pop
cmpsl
dec
xchg
rorb
sahf
in
test
aaa
and
fnstenv
stos
mov
lret
mov
xchg
and
and
daa
lahf
push
int
xor
shlb
xor
adc
test
hlt
xchg
je
cltd
clc
push
loop
or
xor
or
push
and
nop
mov
aas
jns
adc
jmp
scas
shrb
inc
sub
xor
call
loopne
cmp
mov
cs
ss
cs
imul
mov
push
movsb
dec
and
sub
jns
popa
mov
imul
cli
add
inc
xchg
test
dec
xchg
and
test
mov
sbb
fs
clc
sbb
or
xor
pop
mov
mov
push
daa
lds
int
ret
int
das
pop
mov
out
leave
cmp
pop
mov
loope
cmp
ret
xchg
fwait
mov
aam
inc
cli
aaa
cmpsb
bound
mov
mov
xchg
lods
dec
xor
stc
mul
int
xor
mov
in
adc
cmpl
cmp
inc
mov
ret
xor
adc
shlb
push
fwait
xor
xchg
jae
sbb
in
lcall
cmp
xchg
cs
addr16
inc
cs
cmpsl
mov
in
lahf
cltd
jns
mov
rcll
divl
into
popf
xor
test
les
jle
xchg
push
lret
pop
mov
xchg
cmp
mov
mov
loopne
jmp
add
push
in
sbb
jmp
int
add
jnp
xor
jb
fbstp
lock
and
jo
xchg
cmpl
sub
aam
ja
sbb
inc
push
mov
add
push
adc
rcrb
mov
xor
or
push
xor
shr
stc
test
jecxz
add
dec
cmpsl
add
jle
shll
jns
pop
mov
push
js
and
movb
xchg
and
in
dec
mov
mul
enter
lret
push
add
add
adc
out
popl
aas
out
fimuls
mov
jg
or
mov
mov
xchg
pop
sbb
jnp
cmpl
and
lock
ja
les
pop
pop
mov
xor
lds
lods
mov
int3
mov
push
outsl
sbb
cmp
sbb
arpl
jle
fs
mov
push
cmp
popl
js
mov
lods
ret
push
inc
outsb
rol
incb
loopne
scas
push
fstl
jb
xchg
mov
out
push
mull
test
cltd
sbb
or
push
pop
popf
shll
and
hlt
mov
out
dec
or
icebp
inc
adc
or
sbb
xchg
mov
mov
loopne
cmp
shrb
dec
jbe
sub
pop
pop
xor
das
mov
inc
cmp
sub
dec
inc
movsl
pop
adc
movsb
rorb
pop
mov
hlt
jge
add
repnz
sbb
fildl
sub
outsb
and
popa
mov
popf
call
mov
mov
xchg
hlt
mov
in
lock
pop
adc
testb
adc
andb
lock
pop
adc
dec
pop
adc
push
les
add
insl
out
iret
sbb
les
adc
lahf
xchg
dec
pop
adc
mov
xor
inc
daa
dec
cmp
or
adc
sub
mov
negb
sar
mov
inc
and
xor
les
adc
lcall
pop
adc
stc
push
movsb
out
xor
jecxz
xor
xor
push
inc
movsl
pop
adc
pop
adc
adc
ja
movsl
pop
adc
jo
cli
mov
cwtl
xchg
dec
pop
adc
or
sbb
pop
test
cwtl
xchg
daa
jmp
movsl
pop
adc
clc
movsl
pop
adc
xchg
dec
pop
adc
movsl
pop
adc
push
call
out
out
out
adc
jnp
dec
les
adc
mov
test
test
hlt
cmp
cwtl
jl
sub
or
xchg
test
pop
mov
push
xchg
inc
movsl
pop
adc
popf
fwait
fs
xchg
dec
dec
jg
push
xchg
and
cs
sub
push
int3
xor
jb
pop
adc
dec
inc
roll
lret
add
xor
jo
pop
out
pop
out
aam
push
fstps
xor
repz
inc
jmp
or
js
jbe
gs
popf
push
repz
scas
xchg
aas
xor
lahf
cmp
push
lcall
push
sbb
jecxz
lret
es
pop
lret
rorl
cltd
lret
push
mov
movsl
mov
push
push
cmp
ret
outsb
push
xlat
fnstenv
push
lods
inc
jmp
or
mov
mov
mov
add
adc
insl
cld
movsl
pop
adc
fcoms
cwtl
dec
pop
adc
dec
pop
adc
movsl
pop
adc
mov
scas
loopne
sub
pop
adc
pop
sbb
ffree
lret
xlat
cmpsb
inc
dec
test
hlt
pop
stos
loopne
pop
cld
fwait
je
movsl
pop
adc
adc
adc
jmp
daa
hlt
push
pop
adc
adc
scas
jle
stos
rcrl
and
dec
insb
adc
es
jecxz
sbb
add
dec
pop
adc
sbb
mov
scas
inc
mov
insb
push
push
and
les
adc
push
mov
adc
adc
call
fdivrl
pop
add
les
adc
xor
test
pop
adc
repz
xchg
mov
add
pop
adc
sbb
lods
dec
pop
adc
test
cwtl
mov
les
adc
pushf
dec
dec
mov
dec
pop
adc
fcmovb
ror
or
out
sub
dec
pop
adc
dec
push
cmp
xchg
dec
pop
adc
jmp
clc
lcall
mov
ret
stc
dec
fisubrl
or
mov
repnz
sub
xor
mov
scas
jge
pop
int
xor
jge
or
movsl
pop
adc
cmp
movsl
pop
adc
movsl
pop
adc
out
clc
movsl
pop
adc
les
adc
test
pmullw
in
or
fcmovu
dec
pop
add
hlt
les
rorl
add
sub
mov
xchg
aad
fs
jmp
mov
cs
ds
adc
leave
ret
push
lea
cmp
shrb
aas
mov
hlt
movsl
pop
adc
shr
jbe
stc
rorb
fs
inc
xlat
lcall
pop
adc
add
test
repnz
dec
adc
pop
stc
or
adc
stc
xchg
cmpsl
pop
inc
iret
fldl
jmp
cltd
mov
int
xchg
mov
fdivrl
fsubrl
mov
cmp
fnsave
xor
push
movl
and
xchg
fstl
cmc
dec
mov
cmp
fisubl
pop
clc
out
outsl
xor
outsw
movl
add
xchg
fstl
cmc
inc
mov
jbe
fisubl
cmp
out
out
shrb
mov
insb
ja
adc
mov
lcall
xchg
push
cmc
inc
mov
xor
scas
nop
ss
cs
insb
jne
adc
out
push
movsb
mov
mov
aaa
xchg
in
or
dec
nop
ss
cmpsb
xlat
and
xor
fidivs
inc
xor
and
xchg
push
repz
xchg
in
pop
dec
pop
fs
shll
fdivl
inc
adc
and
test
mov
icebp
mov
ss
jbe
inc
add
sbb
cs
mov
movsl
cmp
fildll
xchg
cmp
xor
addr16
je
paddw
cmp
ret
test
pushf
in
and
xchg
dec
gs
popf
lods
inc
sbb
fiadds
js
addr16
adc
sub
pop
adc
dec
pop
adc
dec
pop
adc
xchg
test
les
adc
orl
outsb
lods
push
les
adc
clc
movsl
pop
adc
pop
sbb
xor
loopne
repnz
cli
dec
gs
and
cli
das
movsb
arpl
mov
je
sub
and
push
repnz
push
xchg
movsl
scas
push
xchg
outsb
push
cld
out
out
pop
cmc
xor
lret
xor
sub
mov
jno
xchg
cwtl
jae
push
push
sub
out
in
mov
movsl
pop
adc
adc
adc
movsl
pop
adc
mov
sbbl
popa
jo
pop
adc
inc
pusha
mov
lret
dec
jo
into
jmp
push
adc
mov
add
push
push
or
mov
pop
fldl
arpl
icebp
enter
and
or
push
cmpsb
orl
fbld
pop
adc
adc
imul
stc
xchg
sbb
in
stc
je
fwait
jno
mov
scas
das
lret
sbbb
xchg
add
adc
push
mov
sub
adc
mov
jecxz
xchg
fwait
sti
fistps
mov
es
arpl
xchg
push
adc
loop
fcmovu
mov
and
out
jno
inc
stos
movsl
sbb
mov
sbb
pop
push
push
sahf
lds
mov
rcrb
fnstsw
mov
cs
dec
pop
push
push
data16
test
gs
jno
pushf
je
mov
in
repz
and
push
adc
mov
mov
xchg
push
adc
cmp
into
aaa
orl
ror
dec
mov
xchg
push
adc
scas
jne
ficomps
inc
ss
ficompl
sahf
adc
fsubr
jae
xchg
push
adc
ja
dec
pop
ret
je
mov
xor
lcall
fcoms
nop
stos
xor
mov
lret
xor
sbb
data16
sub
sbb
imul
xchg
loope
scas
outsb
mov
mov
mov
js
push
sbb
mov
xchg
xlat
mov
fbstp
movsl
lea
push
inc
and
sub
push
ror
das
lods
pop
push
jo
pop
adc
inc
push
jnp
mov
cli
mov
xchg
pusha
std
in
push
insl
cwtl
movsl
pop
adc
fwait
mov
and
or
and
lock
dec
daa
mov
dec
mov
inc
pushf
movsl
pop
adc
call
scas
aaa
sub
repnz
loope
lret
push
pop
adc
mov
scas
nop
movsl
pop
adc
orl
pop
adc
icebp
xor
sbb
mov
xor
test
sbbl
pop
adc
pop
pusha
iret
movsb
sbb
pop
push
lods
pop
mov
mov
test
pop
adc
int3
insl
add
pushf
push
int
imul
xchg
in
dec
addr16
fnstcw
xchg
out
movsb
movsl
pop
adc
mov
adc
movsb
scas
push
lea
xor
xchg
test
ss
fwait
add
sarb
rcr
dec
pop
adc
repz
xor
daa
dec
ljmp
cltd
xor
bound
ret
enter
shrl
loopne
int
movsl
pop
adc
xchg
mov
mov
out
sub
dec
pop
pushf
movsl
pop
adc
flds
nop
sub
mov
imul
imul
xor
loopne
xor
xchg
movsl
pop
adc
shrl
ljmp
test
pop
cmc
fs
pusha
pop
mov
push
repz
movsl
pop
adc
stos
rclb
pop
leave
push
movsl
pop
adc
movsl
pop
adc
xor
adc
out
ljmp
xchg
lret
push
std
movsb
andl
cmp
fnstsw
loope
out
mov
movsb
movsl
pop
adc
mov
outsb
nop
movsl
pop
adc
or
push
bound
sbb
insl
xor
sbb
loope
push
dec
lahf
cmp
push
pop
adc
dec
nop
movsl
pop
adc
adc
fdivs
sti
dec
add
dec
xor
imul
pop
adc
mov
push
jb
sbb
cmp
pop
adc
pop
mov
xor
and
cmp
adc
movsl
pop
adc
sbb
cmp
test
push
jle
jnp
movsl
pop
adc
dec
hlt
xchg
movsl
pop
adc
movsl
pop
adc
rorb
movsl
pop
adc
jne
cltd
xlat
cld
mov
out
loop
push
mov
pop
adc
lods
mov
outsb
gs
ror
mov
jge
movsl
pop
adc
mov
or
cmp
add
sbb
inc
movsl
leave
adc
cli
mov
insl
mov
stos
mov
mov
mov
movsl
pop
adc
inc
je
lahf
xlat
outsb
lahf
lds
or
data16
sub
rcrb
jno
dec
pop
adc
inc
mov
and
mov
aaa
mov
xchg
movsl
pop
adc
mov
inc
test
sbb
in
push
test
ds
adc
pop
adc
test
add
movsb
movsl
pop
adc
outsl
add
popf
add
mov
daa
lret
pop
adc
lock
mov
dec
push
xchg
mov
icebp
repz
test
movsb
movsl
pop
adc
movsb
addr16
andl
fldl
sub
into
lea
jl
clc
xor
mov
adc
adc
mov
test
adc
mov
xchg
sbb
xor
movsl
pop
adc
aad
cmp
dec
lods
xchg
xchg
mov
movsl
pop
adc
adc
scas
mov
jno
cmp
int3
sbb
adc
int3
adc
fadd
xor
xchg
movsl
pop
adc
sbb
ja
cld
jp
mov
cs
movsl
pop
adc
ret
pop
adc
push
xchg
mov
mov
adc
movsb
movsl
pop
adc
and
jnp
movsl
pop
adc
pop
xchg
mov
jl
push
adc
movsl
pop
adc
fwait
pop
mov
fcompl
data16
cmp
movsl
pop
adc
movsl
pop
adc
mov
lret
inc
pop
inc
mov
jbe
adcl
insl
mov
adc
testb
movsl
pop
adc
iret
mov
or
adc
pop
jl
push
adc
adc
stos
fcoms
fdivs
lock
xor
adc
mov
iret
out
cmp
push
test
pop
adc
add
test
pop
adc
adc
jp
inc
add
dec
cmp
notb
cmp
movsl
pop
adc
push
push
adc
mov
xor
xchg
daa
dec
ljmp
pushf
movsl
pop
adc
push
xchg
pop
adc
xchg
lea
repnz
scas
lcall
mov
mov
xor
fsub
fwait
push
adc
sub
stos
sahf
enter
movsl
pop
adc
fsts
jne
mov
mov
pop
icebp
rcrb
lods
in
sub
jb
xchg
sub
mov
cltd
dec
xchg
daa
mov
pop
adc
cli
push
int3
xchg
das
pop
jmp
jge
int
xor
dec
out
lea
xchg
test
adc
adc
mov
xor
mov
movsl
pop
adc
movsb
adcb
adc
and
xchg
movsl
sbb
xchg
mov
or
nop
movsl
pop
adc
aaa
enter
nop
cmpsl
sub
lret
push
in
jmp
mov
mov
jl
loope
cmp
jle
mov
push
test
pop
adc
mov
sub
bound
nop
movsl
pop
adc
movsl
pop
adc
mov
scas
sub
test
ss
jo
mov
dec
cltd
and
test
sahf
sub
xor
loopne
les
stc
inc
xor
pop
popf
push
cmpsb
jmp
pop
stos
pop
and
rcl
ret
int3
adc
xchg
shl
leave
pusha
push
sub
jo
sbb
shlb
jae
mov
out
mov
pop
sub
icebp
test
jl
in
push
adc
jecxz
lods
jo
movsl
test
out
adc
push
cmc
fbstp
outsb
dec
inc
fdivr
popf
iret
and
push
adc
lret
int
add
mov
fisubrs
sbb
mov
push
adc
or
xchg
sbb
adcb
adc
daa
cmpsl
lea
adc
dec
je
pop
lret
testb
xchg
sbb
fcmovbe
fwait
jmp
ret
xchg
jne
ds
mov
sbb
dec
sub
fidivrl
popa
outsl
clc
aaa
test
lret
pop
fmuls
sbb
cmp
into
int3
and
scas
dec
push
and
in
in
loope
shl
rcl
or
lock
sub
cmp
xchg
jp
push
scas
add
mov
mov
je
push
mov
dec
pop
lods
push
xchg
mov
fs
pop
adc
aam
int
mov
aad
aaa
mov
fwait
or
mov
jb
imul
inc
dec
push
pop
cld
jne
push
mov
ret
pop
fwait
hlt
xor
inc
pusha
mov
mov
pop
scas
xor
pop
inc
lret
shr
in
stos
lods
cmp
inc
out
stc
jae
mov
pop
adc
mov
pop
adc
data16
pop
adc
adc
jae
mov
fstpt
xchg
out
cmp
or
sarl
push
xor
mov
movsl
pop
adc
in
movsl
pop
adc
pop
gs
xchg
and
rcrl
movsl
lods
pop
lea
adc
cmpb
mov
inc
xlat
leave
loopne
movsl
fmuls
scas
mov
movb
sarl
sti
xlat
mull
jo
loopne
icebp
shl
mov
mov
ret
add
push
cmpsb
sbb
pop
push
pop
adc
jecxz
push
pop
adc
pusha
push
sbb
outsb
dec
xchg
dec
xchg
inc
xor
mov
xlat
les
xor
jae
lods
pop
xor
dec
adc
cmp
ja
add
cmp
cmpb
xchg
into
xchg
and
scas
daa
lds
push
push
xchg
ja
dec
push
aas
popf
lods
cmpsb
mov
mulb
sahf
inc
jp
loopne
aas
xorl
ret
fcoml
int
mov
mov
dec
jbe
cmp
jbe
stos
shlb
scas
out
mov
clc
adc
adc
inc
inc
or
dec
or
hlt
adc
adc
mov
iret
mov
push
movsl
pop
adc
aam
mov
mov
adc
cmp
and
mov
enter
or
mov
push
adc
js
movsl
pop
adc
push
adc
movsl
pop
adc
int3
movsl
pop
adc
addr16
cld
pushf
xchg
in
add
and
movsl
pop
adc
in
xor
ja
mov
mov
add
jp
jnp
push
and
pop
adc
test
xchg
mov
xchg
enter
leave
push
pop
pop
call
push
je
xlat
pop
inc
pop
fsubr
pushf
ret
pop
adc
mov
pushf
sbb
pop
adc
cmp
ret
push
and
dec
xor
and
out
movsl
lahf
xor
loop
lahf
push
hlt
mov
mov
and
pause
fs
stos
jecxz
mov
xchg
inc
inc
test
pop
in
cmp
cmpsl
inc
jb
sti
lahf
dec
jne
adc
adc
jecxz
ds
rorl
sbb
pop
xor
mov
push
insb
mov
mov
out
daa
mov
adc
xor
ret
adc
mov
scas
popl
out
outsb
mov
add
dec
jae
mov
pop
fsubl
adc
std
pusha
and
xor
je
in
pop
adc
packuswb
aam
xchg
inc
rcr
mov
mov
lahf
out
out
repz
inc
xor
inc
dec
mov
ljmp
pop
sti
rclb
jmp
jne
leave
ds
jle
xor
std
jmp
roll
mov
mov
and
xchg
push
adc
cli
pop
daa
sub
or
and
dec
lret
xchg
test
push
cmp
inc
add
lea
cmpb
test
inc
and
shlb
xchg
inc
push
and
push
add
rcl
mov
shll
mov
ss
repz
xchg
popf
inc
insb
jno
adc
and
push
daa
shrl
add
push
sub
lds
in
aam
xchg
xor
fsubl
mov
enter
sbb
mov
outsl
cmp
fistl
iret
call
push
scas
xchg
les
cltd
in
sbb
add
and
add
addl
mov
arpl
cli
movsb
ret
gs
xchg
daa
dec
cmp
and
adc
mov
loope
pop
adc
mov
in
je
mov
adc
pop
into
cmp
imul
mov
xor
gs
insl
pop
jo
mov
stc
inc
icebp
push
or
imul
xchg
lea
int
stos
pop
push
lods
sbb
ljmp
sbb
verr
adc
push
bound
or
xchg
fstps
xor
gs
aad
cli
js
out
push
mov
adcl
rol
popf
dec
mov
xchg
inc
nop
sbb
outsl
sub
leave
test
loopne
xchg
dec
loopne
cmp
les
and
push
aas
nop
mull
out
xor
notb
out
xor
ljmp
lcall
inc
clc
adc
dec
lcall
imul
push
clc
arpl
xor
shlb
fidivl
das
fists
int3
out
sbb
push
push
movsb
aas
sub
cmp
sub
sub
jns
add
push
jbe
int
xor
sbb
xor
popa
ret
xchg
dec
mov
popf
jb
xchg
sub
jb
pop
jbe
fincstp
ljmp
shrl
xor
dec
xor
push
in
push
and
inc
sbb
xchg
push
cmc
mov
mov
fidivl
sbb
fs
xchg
mov
mov
daa
dec
lahf
dec
roll
arpl
lea
mov
sti
ss
incl
in
out
nop
cmpsl
ret
bound
xor
movsb
mov
sub
jl
xor
outsl
iret
rep
jno
pushf
pop
jge
jmp
popa
mov
xchg
js
cmpsl
inc
subl
mov
mov
and
jle
or
sub
mov
lds
inc
decl
daa
cmp
sub
outsl
aaa
xchg
nop
clc
or
pop
add
push
std
cmp
push
pop
adc
pop
sbb
jbe
leavew
add
movsb
enter
xor
adc
xchg
inc
sub
fnstenv
shl
inc
lock
dec
pop
adc
jae
popa
jecxz
push
fmulp
dec
adc
icebp
rcl
sbb
std
inc
fwait
cmp
ret
cmp
adc
into
cmc
lahf
repz
sub
pop
jnp
jne
test
pop
adc
jns
jecxz
xor
pop
mov
xor
mov
inc
or
xor
mov
xchg
pop
testl
inc
enter
push
xchg
test
ret
dec
into
xchg
and
xchg
repz
icebp
pop
std
sub
decl
inc
movsb
push
bound
or
rorl
fildll
mov
push
aaa
pop
ljmp
xor
inc
pop
jo
testb
lea
pusha
sbb
xlat
test
mov
mov
pop
mov
and
out
lea
shlb
sbb
xchg
dec
jg
mov
jl
inc
adc
fmull
aam
or
cli
aad
adc
mov
mov
leave
push
sub
fbld
sub
cmc
stos
std
inc
and
rcrb
jbe
cmp
cmp
jl
outsb
into
pop
data16
js
sub
inc
mov
aaa
rcrl
gs
mov
inc
sbb
pop
push
push
jns
mov
inc
pop
sti
loop
test
cmp
dec
pop
repz
cltd
testb
cltd
inc
xchg
out
dec
mov
ret
sti
pusha
sarl
dec
into
add
insb
aas
add
sarb
nop
fdivs
pop
adc
sub
out
popf
inc
xor
scas
repz
cmp
movl
rcll
fwait
pop
push
adc
jle
xchg
mov
dec
repz
dec
jo
aam
inc
sub
xor
dec
mov
outsb
cmp
dec
sahf
dec
lret
lock
push
push
pushf
xchg
xchg
push
testb
inc
iret
fcoml
jo
add
xchg
fs
jecxz
fnsave
and
push
test
mov
adc
sbb
dec
jecxz
push
mov
xchg
cmpb
xlat
mov
sti
jle
jl
nopl
fxch
nop
and
inc
jns
out
out
and
das
lods
push
mov
scas
mov
enter
cmp
xchg
das
pop
lahf
scas
xchg
testb
fldt
mov
fdivs
or
xchg
out
inc
xchg
das
pop
mov
pop
and
jne
scas
mov
adc
mov
shll
sub
je
add
call
insl
fstpt
or
xchg
and
mov
mov
pop
mov
int
mov
repz
adc
push
lcall
rcrb
aaa
mov
mov
fadd
insl
inc
jg
sbb
fs
sub
out
lahf
xor
mov
fidivl
xchg
aam
rorl
into
fsubs
repz
sarl
sti
lock
imul
and
dec
dec
inc
pop
out
push
jbe
jnp
ljmp
loope
test
arpl
or
cmp
inc
divb
inc
jns
sbb
cmc
sub
pushf
mov
out
jmp
inc
mov
jae
xor
int3
jmp
daa
lods
xor
mov
loopne
test
lahf
loopne
xor
cmp
xchg
adc
xor
cltd
stc
adcb
adc
sub
push
lods
sbb
aam
xor
int3
adc
xor
jo
adc
adc
push
fwait
cmpsl
es
cwtl
mov
pop
inc
jo
cwtl
adc
sub
sbbb
lods
lahf
xor
jno
lcall
leave
push
cmp
or
insl
push
call
sbb
fists
pop
cwtl
outsl
movsl
lcall
aaa
pop
pushf
mov
das
out
mov
in
inc
fiaddl
xchg
iret
sub
test
or
fisubrs
cmp
add
push
into
lods
test
push
shrl
jmp
sti
into
data16
mov
or
push
fcmovnu
adc
adc
loope
inc
shlb
arpl
pmullw
push
dec
arpl
adcl
jnp
pushl
dec
mov
xchg
xchg
daa
outsl
mov
aam
add
arpl
pop
adc
rorl
mov
jbe
call
dec
pop
mov
mov
sbb
xlat
repz
movsl
pop
adc
fbld
mov
xchg
ss
jge
xchg
jae
xorb
in
sbb
rolb
aas
mov
sub
fwait
imulb
loop
fcomps
pop
and
pop
or
fwait
test
mov
push
sub
leave
adc
add
stc
outsb
mov
dec
fwait
clc
xor
mov
dec
lcall
insl
cmp
leave
xchg
push
mov
das
pop
mov
and
and
sbb
lea
repnz
leavew
xchg
push
add
xchg
or
shrl
pop
pop
daa
sbb
cwtl
fdivl
nop
outsl
nop
and
pop
enter
lret
lcall
dec
xor
es
dec
cmpsb
ret
nop
or
xor
pop
fnsave
int3
lcall
insl
fistpl
pop
cmc
xchg
ret
sbb
cmc
pop
das
pop
mov
mov
mov
mov
movsb
pop
inc
jae
dec
push
loope
mov
mov
cs
xchg
dec
push
test
out
lcall
das
pop
mov
stc
dec
fucomp
xor
sbb
int3
cmpsb
daa
dec
ljmp
mov
shlb
int
fisttpll
fstpt
ret
xchg
fidivrl
arpl
pop
mov
fistpll
loop
and
push
cmp
lds
daa
fcoms
push
adc
addr16
enter
fcoms
push
adc
fwait
ret
jnp
dec
jns
adc
adc
adcb
adc
int
mov
xor
loopne
testb
gs
lret
repz
adc
js
or
xor
lret
cmpsb
pop
adc
dec
mov
xchg
ja
nop
lret
scas
inc
push
leave
pop
xor
or
test
jge
xchg
mov
jbe
lock
and
test
pop
mov
out
mov
dec
arpl
jecxz
pop
das
sahf
test
xchg
xor
xchg
out
fisttpl
and
lds
xor
xor
test
cmp
inc
sbb
rcl
pop
push
xor
xor
mulb
push
cmpsl
ljmp
mov
pop
mul
insl
into
xchg
mov
iret
insb
sahf
loope
xchg
insl
mov
stos
inc
loope
mov
das
inc
sbb
jmp
mov
fildll
mov
stos
mov
jae
lret
data16
push
fidivl
pop
add
test
inc
add
ja
dec
inc
outsl
lret
cmpl
fsub
push
imull
bound
daa
xor
stos
movsb
das
xor
inc
and
cmp
inc
daa
mov
bound
ds
js
dec
daa
mulb
adc
rol
sbb
push
jl
push
adc
int3
jge
adc
adc
xchg
add
adc
adc
adc
insb
dec
push
repz
aam
pop
adc
movsl
pop
adc
cmc
sub
dec
js
push
jne
gs
clc
adc
adc
adc
mov
push
jns
jbe
leave
push
repz
mov
jns
cmpb
sbb
cmp
out
movsl
xor
dec
movsl
pop
adc
andb
add
scas
iret
cmp
xor
mov
mov
cmpsb
inc
orl
inc
xchg
js
push
adc
fstps
mov
dec
mov
dec
loope
scas
xor
fiadds
adc
aad
lea
mull
repnz
pop
sub
xor
into
movsl
jg
les
ds
mov
push
pop
and
fisubrl
imul
pop
push
mov
mov
test
loopne
out
and
xchg
jle
aas
mov
xchg
pop
adc
or
inc
stc
pop
xchg
fiadds
xchg
out
jp
in
mov
gs
push
adc
lea
jecxz
xor
cmp
aad
daa
fidivrs
leave
adc
push
or
ret
push
addr16
pop
and
pushf
push
jl
clc
add
push
fcom
cmp
xchg
aas
stos
push
stos
loop
sar
and
loopne
sbb
jns
inc
insb
push
cmpsb
sbb
gs
mov
pop
mov
lea
out
aaa
ss
mov
daa
mov
cld
adc
adc
xchg
shr
movsl
dec
xchg
daa
les
pop
xor
int
fadd
fidivrl
ja
sub
gs
fiaddl
xor
movsl
fs
mov
rep
rorb
sbb
test
xchg
les
mov
stos
push
dec
xchg
cmpb
outsb
cmpsl
bswap
fwait
or
cmp
adc
push
xchg
in
sbb
adc
dec
xchg
rcrl
int
mov
push
adc
out
sub
adc
adc
adc
and
adc
inc
or
movsl
pop
adc
fsubs
out
and
and
pusha
daa
lds
xchg
mov
push
adc
push
and
mov
out
sbb
lret
mov
lret
je
mov
adc
mov
and
push
call
mov
sbb
ret
xchg
dec
cwtl
dec
push
es
popf
outsb
or
inc
fucom
and
outsb
out
xchg
dec
xchg
xor
xchg
push
mov
push
xor
jo
xor
mov
xchg
lods
ret
jg
ret
mov
sub
xchg
ret
out
ret
mov
mov
push
dec
push
sbb
jle
sti
sbb
sahf
jns
mov
cmp
fwait
enter
push
dec
je
push
adc
pushf
push
pop
mov
lea
sahf
cmc
xchg
sub
and
push
loopne
push
adc
aad
lock
pop
fsubl
jmp
lret
les
pop
xlat
ds
fsubl
xor
fiaddl
sub
pop
adc
aam
fsubl
add
mov
jg
das
aad
jbe
jmp
jecxz
xor
mov
dec
mov
or
cmp
pop
adc
and
fmulp
xor
cltd
cltd
icebp
sub
adc
push
fidivrl
pop
into
js
orb
and
jnp
xchg
pop
adc
mov
inc
jne
inc
in
sub
les
push
xchg
sbb
popa
aaa
lret
sub
cmp
push
mov
cs
repnz
cwtl
jbe
jnp
dec
xor
pop
jge
jge
lock
lahf
and
adc
shll
xchg
shlb
pushf
leave
data16
push
adc
mov
outsb
daa
xor
mov
fs
out
adc
adc
cwtl
std
shlb
out
inc
and
and
out
inc
jp
dec
popa
inc
and
jmp
mov
push
adc
inc
std
bnd
xchg
das
and
sub
xor
xlat
sub
pop
adc
sbb
push
ljmp
repnz
icebp
in
xchg
insb
scas
mov
das
pushf
mov
mov
addb
dec
sub
fisubrs
insl
repnz
jmp
aaa
aas
sbb
popl
pop
popf
sbb
adc
pop
inc
repz
out
nop
ljmp
adc
inc
dec
jg
jge
pop
mulb
ror
add
lcall
in
stc
rolb
jae
sbb
lcall
sub
call
cli
scas
cmpl
pop
xchg
adc
mov
add
lods
mov
fmul
out
mov
inc
push
mov
popa
jb
add
inc
cmc
repz
je
xor
aad
inc
mov
fisttpl
repz
lea
xchg
popf
aas
xchg
fcoms
les
mov
bound
insb
fdivs
lock
gs
xchg
dec
dec
iret
call
out
jno
call
outsl
sbbl
jo
inc
jge
nop
ja
mov
movsl
mov
push
stc
xchg
pop
adc
mov
testb
xor
push
dec
imul
mov
pop
ss
sahf
enter
add
or
xor
inc
inc
sbb
mov
sub
imul
xor
fdivs
lcall
sbb
mov
shlb
push
pop
adc
movsb
ss
jmp
jmp
mov
pop
fldt
insl
fimull
repz
iret
ficoms
sub
ss
cmp
insl
ja
inc
lea
and
push
push
aad
sbb
pop
cmc
xor
push
pop
adc
repz
movsb
mov
pop
adcl
dec
mov
loopne
cmp
pushf
ss
call
fs
jge
sahf
fimull
pop
scas
mov
icebp
in
mov
leave
ljmp
mov
inc
inc
push
insb
out
in
mov
mov
ret
xchg
sub
movsl
xchg
and
arpl
xor
movsb
sbb
fs
jp
pop
push
cld
bound
xor
das
insl
mov
push
repnz
adc
jb
mov
jmp
std
mov
mov
nop
mov
sbb
cld
xchg
das
pop
jno
jle
fwait
xor
xchg
or
insb
ficompl
scas
daa
inc
jl
insb
lret
in
mov
retw
cmp
outsb
mov
scas
shl
bound
pusha
pop
jecxz
rolb
pop
push
pop
adc
mov
mov
xchg
xchg
outsb
aad
mov
mov
push
fsubl
imul
mov
psubusb
in
mov
jecxz
sbb
jle
roll
inc
in
push
pop
or
or
inc
incl
loope
xor
jns
jne
pop
jo
stos
loop
sbb
adc
sub
adc
scas
sbb
xchg
inc
int
test
cmp
loop
int3
out
lahf
jge
mov
pop
stos
shlb
clc
out
ficomps
sbb
xchg
mov
leave
xor
push
pop
rorb
or
les
mov
movsb
mov
push
xchg
jo
ret
enter
jae
fistl
dec
inc
or
pop
cmp
add
lret
mov
add
stos
pop
inc
mov
ret
cwtl
das
rep
and
sub
js
loopne
repz
rol
jecxz
bound
lret
pop
and
psrlw
rol
punpckldq
pop
pop
sti
mov
scas
and
cmpsl
push
push
iret
into
in
movsl
cmp
cltd
dec
sub
insl
mov
mov
push
xchg
adc
dec
add
mov
pop
ljmp
inc
lahf
inc
outsb
cmp
lret
add
and
enter
jecxz
out
cmp
mov
cltd
shll
sub
mov
jg
add
push
push
cwtl
inc
inc
sahf
add
stos
fdivrs
add
adc
mov
add
adc
rolb
pop
roll
adc
add
jae
cs
daa
pop
adc
adc
or
roll
test
sbb
or
jne
xchg
shrb
adc
jae
mov
call
cmp
lock
rcll
jmp
pop
jo
sahf
inc
pop
xchg
fidivs
popa
js
and
inc
xchg
pop
stos
pusha
jo
mov
push
adc
pop
dec
fs
ss
push
mov
mov
mov
out
in
dec
adc
inc
pushf
cltd
clc
fidivl
jbe
mov
sti
or
xlat
mov
pop
jo
lcall
sahf
fidivrl
imul
mov
out
leave
call
push
sbb
ds
ffree
fcmove
adc
rolb
aas
mov
or
sar
rol
dec
xlat
cmp
andl
stos
mov
movsb
or
pop
arpl
mov
cmpsl
xchg
jl
dec
push
cmp
in
int
ss
inc
adc
sub
lock
out
in
dec
xchg
and
test
xor
pop
cmp
xchg
jne
loopne
mov
xor
scas
fisubrl
fwait
ret
lock
imulb
jns
adc
push
and
lcall
adc
imul
enter
adc
cs
scas
xor
dec
aam
sbb
rol
imul
xchg
inc
fisubl
sbb
mov
jl
pusha
sbb
mov
shll
popa
mov
dec
insl
in
cltd
lcall
xchg
jo
fnstcw
jo
pop
adc
cmp
push
cmc
popf
dec
ret
add
lock
outsl
pop
mov
sahf
mov
aas
sub
cmp
and
fimull
insl
ficompl
jg
mov
cmp
push
movsl
dec
aas
xor
xchg
es
jmp
popl
cmpsb
xor
lods
addr16
repz
pop
xor
add
imul
xchg
pop
jno
and
push
enter
push
sbb
les
scas
lret
andb
pop
mov
sbb
sahf
dec
addb
ret
pop
fstps
inc
out
in
fcmovbe
xorl
faddl
arpl
outsb
daa
xchg
aam
cmp
add
mov
movsl
insb
mov
pop
cltd
scas
cmp
inc
stc
mov
cltd
leave
negl
jne
jb
xchg
fnstsw
pop
jo
pop
adc
cltd
add
cmc
fcmovnu
mov
mov
jae
imull
pusha
mov
mov
push
dec
sbb
mov
push
push
inc
add
sti
sbb
mov
sbb
sub
dec
ficomps
or
rcrb
ror
mov
jl
leave
and
dec
xor
mov
add
push
sbb
and
and
cltd
mov
mov
in
xor
push
dec
fisubrl
inc
leave
fiadds
loopne
pop
xchg
mov
adc
into
mov
cli
add
push
adc
cli
incl
scas
lea
popa
pop
pop
mov
mov
imul
mov
sbb
stos
hlt
mov
imul
cli
enter
xchg
xlat
add
mov
in
mov
cmpb
jnp
enter
shrb
jp
outsl
rorl
xchg
xchg
aad
rcll
cmp
adc
fwait
or
arpl
jmp
mov
roll
mov
and
in
sbb
inc
adc
adc
dec
mov
imul
add
xchg
mov
jb
repnz
inc
cwtl
cwtl
jnp
cmp
cwtl
bound
leave
imul
sub
push
lds
or
or
es
lods
rclb
ret
and
outsl
cmp
pushf
xchg
mov
dec
lahf
loopne
inc
inc
inc
push
mov
daa
sub
in
ds
popa
ret
xchg
mov
jns
shlb
inc
aad
out
pop
and
mov
sahf
data16
jns
mov
rcr
push
sbb
mov
arpl
push
dec
fimull
xor
fisttps
push
nopl
adc
pop
loopne
mov
pop
jb
daa
cmc
mov
lret
sbb
xor
and
test
int3
pop
pop
out
lret
mov
lret
inc
or
jp
or
jo
pop
pop
cld
pop
or
xor
shl
outsb
aam
lods
push
hlt
jns
xchg
outsb
jp
int3
outsb
mov
or
push
sbb
lea
mov
xchg
mov
leave
mov
jle
cmp
out
fnstenv
imul
push
pusha
enter
or
out
lds
pop
adc
jns
mov
out
cmp
jae
and
out
adc
pop
mov
fidivrl
mov
stos
movsl
mov
int3
lret
inc
std
pop
xchg
and
test
mov
xor
pop
inc
mov
mov
mov
dec
andb
mov
iret
jns
jno
in
xchg
fidivrl
lahf
cli
mov
repz
movsb
dec
push
and
add
sbbl
stos
fmull
dec
pop
cmp
cs
das
mov
cmpsl
push
fldt
and
fwait
dec
stos
and
pushf
sbb
xchg
xor
dec
xchg
outsb
inc
andl
sahf
mov
in
cmp
jl
fists
jns
xchg
shll
stos
jmp
xchg
and
fdivrs
xor
push
adc
dec
sub
cmp
es
pop
sub
nop
and
int
nop
xchg
repnz
fld
insb
rorl
adc
adc
pop
insb
cs
movsb
pop
xchg
and
xlat
pop
fdivs
popf
icebp
outsl
inc
push
jge
xchg
mov
mov
es
popf
jp
pop
push
loopne
xchg
iret
jo
pop
adc
fwait
xchg
mov
cmpb
mov
dec
in
orl
push
fsubr
pusha
cmpsb
cmp
xor
mov
pop
sub
push
in
outsl
sbb
shr
mov
je
sbb
ja
jnp
mov
jo
dec
push
stos
mov
xor
sbb
xchg
pop
int3
sbb
popf
lock
lock
jmp
testb
inc
inc
les
dec
lahf
mov
xor
in
movsb
loope
shrb
mov
cmp
xchg
ret
cmpsl
xor
aam
inc
mov
jp
cmpsl
mov
fcompl
ss
adc
nop
inc
shr
pushf
mov
fdivs
and
and
insl
adc
jno
cmc
test
jbe
jns
and
jo
lret
push
xchg
fiadds
test
xor
cmp
cmp
mull
stos
and
addr16
sub
lock
out
cmc
fcmovb
call
mov
in
les
push
xor
cmp
insb
adc
pop
sub
dec
cmp
leave
mov
loopne
sub
cltd
and
negb
jnp
xchg
nop
pop
xor
dec
pop
or
das
icebp
gs
dec
pop
or
and
and
adcl
adc
adc
leave
fidivrs
test
ret
mov
and
dec
iret
push
jb
mov
jge
ror
cld
adc
pop
das
sub
sub
fstpl
sub
fwait
neg
adc
jmp
inc
int3
in
and
push
nop
mov
int3
pop
movsl
push
lock
pop
push
pusha
ds
jae
out
mov
lods
lods
shr
and
jns
push
cmp
xor
xchg
mov
fnstsw
xor
adc
pop
loopne
aas
and
mov
leave
insl
pop
jg
mov
xchg
das
fistps
repz
sbb
imul
xor
sarb
sub
fsts
shrl
push
jp
push
cli
pop
imulb
pop
adc
loopne
push
pop
adc
xor
mov
ss
fadds
mov
test
pop
adc
cmpsb
sbb
cmp
lret
mov
lahf
lds
mov
jo
lret
aas
in
insb
das
nop
loopne
mul
in
xor
inc
mov
inc
out
aad
xor
xchg
cmp
inc
add
xor
mov
insl
cmp
fsts
jg
push
inc
xchg
and
push
fs
mov
lods
mov
inc
dec
jns
jnp
lea
popf
cmp
or
movsb
dec
int3
jo
pop
adc
and
mov
sub
and
scas
in
pop
adc
mov
dec
jl
push
adc
cmp
loope
into
test
push
adc
add
add
pop
in
pop
adc
adc
adc
dec
push
fsubrl
in
pop
adc
mov
cli
sti
sbb
fwait
mov
filds
or
inc
fbld
loopne
mov
jno
out
popf
test
scas
jns
out
in
mov
pop
adc
icebp
mov
out
scas
pop
mov
adc
call
mov
lret
xchg
and
rol
fwait
or
movsb
sarb
push
std
inc
cli
sti
sbb
pop
push
popf
mov
test
xchg
lret
xorl
mov
sbb
loop
mov
ret
or
insl
mov
sub
mov
inc
dec
sub
xor
test
and
mov
test
aas
es
xor
add
or
out
push
lds
mov
push
inc
addr16
pop
push
in
jmp
cmpl
and
add
cmpb
mov
ljmp
mov
shrb
call
in
mov
test
into
xchg
jbe
xchg
sub
and
mov
repz
or
les
ja
icebp
ja
mul
push
add
adc
sbb
adc
jno
cmp
ja
dec
push
stos
pop
pop
aaa
popf
mov
lahf
pop
pop
cltd
cmp
xchg
stos
test
or
lea
xchg
loope
sbb
movsb
jle
dec
fs
call
xchg
and
xor
mov
cmp
mov
sub
adc
inc
imul
jo
or
arpl
stos
sar
inc
push
xor
js
je
push
adc
or
fists
insl
adc
cmp
or
je
push
adc
pusha
inc
adc
jge
inc
clc
dec
cs
and
rorl
sbb
in
daa
sbb
xchg
mov
out
inc
cmp
jge
stc
iret
outsb
mov
add
icebp
call
pop
mov
std
in
and
fdivr
push
jne
jno
fnsave
in
data16
mov
or
jnp
loop
jne
insl
aad
jmp
xchg
sbb
mov
je
push
adc
sbb
xchg
jecxz
or
cli
sbbl
lods
test
push
adc
imul
sub
dec
inc
test
aad
cld
push
cmc
sub
rorb
mov
adc
sub
adc
movsl
pop
adc
inc
dec
inc
test
lahf
daa
jecxz
dec
dec
movsl
pop
adc
push
add
rolb
adc
icebp
mov
movsl
mov
test
adcw
out
xor
sbb
inc
xlat
cmp
push
sbb
push
gs
mov
rep
pop
jbe
shl
mov
jno
pop
pop
sbb
xchg
xor
xchg
push
into
push
mov
lods
mov
or
adc
adc
lods
sbb
mov
and
cmpsl
dec
jecxz
xchg
jg
and
and
or
fwait
adc
fsubl
mov
xchg
lods
xchg
jno
test
or
and
mov
cmpsl
inc
ja
insl
das
scas
out
sbb
mov
sbb
mov
cmpsb
mov
pop
push
outsb
fsubl
dec
outsb
sbb
ljmp
inc
push
push
dec
pop
in
fldl
pop
xor
push
xchg
pop
ret
lcall
ret
xchg
ficoml
insl
fcmovb
stos
test
lock
mov
cwtl
adc
imul
rcl
in
xor
and
push
sub
jg
js
xchg
pop
cmc
push
cmp
daa
call
dec
push
cmc
and
mov
popf
jmp
scas
push
mov
inc
cmp
out
lea
aad
and
mov
mov
mov
xchg
push
int
mov
fmuls
popa
loopne
pop
adc
bound
and
push
fsubl
lods
in
sahf
mov
or
mov
mov
mov
dec
pop
inc
push
push
movsb
call
loope
cltd
mov
aas
xchg
mov
shlb
fsubl
shrl
pop
adc
fs
insb
pop
mov
in
pop
adc
test
jae
xchg
daa
rclb
adc
mov
mov
xlat
add
cmp
sti
mov
push
push
into
and
sahf
popf
hlt
push
xchg
jo
inc
xchg
test
push
sbb
into
sbb
and
push
cmpb
adc
into
frndint
and
mov
pushf
fildll
mov
rorl
mov
jae
xchg
test
jg
test
push
mov
xchg
fsubl
push
pop
insb
pop
dec
or
add
fildl
and
jmp
dec
inc
rcll
pop
adc
jnp
divb
pop
and
and
dec
pop
jnp
enter
cli
not
ret
xor
rolb
dec
sub
popa
faddp
and
mov
xchg
push
lahf
cwtl
shr
dec
or
jne
mov
sbb
xor
xchg
jns
lahf
cs
cmp
divb
lea
dec
lds
lods
outsb
test
push
xor
fiaddl
in
fimuls
sbb
ljmp
test
cmpsb
pop
adc
pop
lret
cli
dec
mov
xchg
movb
sbb
push
cwtl
ret
negb
or
ret
jne
out
cmp
dec
leave
pop
loop
aaa
lret
lahf
daa
or
mov
rcl
mov
and
jns
xor
add
jnp
push
adc
cmc
push
aad
lea
push
sbb
pop
xchg
movsl
hlt
loope
or
popf
inc
mov
lahf
inc
dec
clc
sub
or
rcll
and
add
add
in
xor
fidivl
fcmovne
daa
in
mov
rcll
mov
xchg
adc
cmpsb
or
test
outsb
dec
std
jmp
jmp
iret
adcl
adc
adc
lods
mov
sbb
jae
jg
in
pop
mov
push
sbb
sub
iret
es
loopne
insb
jmp
es
mov
mov
popa
scas
inc
repz
adc
adc
mov
pop
mov
adc
jne
and
or
inc
push
in
mov
mov
cltd
repnz
mov
pusha
pop
das
add
add
aas
sub
pop
push
xor
cmc
ljmp
fisttpll
and
adcl
out
or
inc
ret
or
popf
mov
sbb
pop
cmc
pop
fsubs
push
or
mov
or
cltd
inc
jns
dec
int
add
clc
adc
adc
xorl
adcb
adc
sahf
push
in
movsl
pop
adc
int3
insl
cmp
test
je
xchg
rorb
mov
and
mov
mov
or
out
jb
pop
movsb
xchg
adc
stc
mov
xor
dec
js
adc
adc
sub
mov
inc
std
outsl
mov
adc
cmc
pop
iret
and
mov
call
lret
and
and
adc
adc
movsl
pop
adc
push
and
bound
sarl
and
sarl
ljmp
cmp
nop
inc
lods
cli
mov
scas
pushf
aaa
push
mov
insb
fadd
jnp
lret
lock
mov
pop
push
aaa
cmp
insl
adcb
ret
es
mov
adc
adc
jo
cmp
mov
in
movsl
pop
adc
lods
scas
mov
test
mov
sbb
xor
xchg
gs
xor
insl
mov
xchg
int
adc
adc
sahf
lods
push
lock
pop
adc
mov
lods
xlat
cli
rorb
mov
fcmovbe
out
out
or
jp
pop
in
push
mov
push
adc
adc
mov
dec
mov
lods
push
adc
mov
sahf
push
sbb
je
xchg
sub
and
ss
cmp
pop
scas
push
adc
outsb
xlat
aam
cmpsb
add
xor
pop
fnstenv
and
cmp
ss
fwait
popa
pushf
cmp
ds
scas
ds
sbb
cmp
dec
mov
mov
inc
sbb
sti
and
mov
jmp
gs
xlat
lahf
ja
push
mov
cld
enter
pop
push
in
inc
repnz
jne
scas
push
adc
mov
fdivs
jmp
clc
aam
out
inc
dec
scas
push
adc
scas
enter
int
sub
scas
push
adc
scas
dec
movl
lea
pop
mov
nop
dec
shrl
mov
inc
arpl
into
adc
mov
out
cmp
test
mov
scas
push
adc
xchg
jns
sub
dec
jne
xchg
mov
nop
imul
call
stc
test
sahf
inc
lock
mov
push
adc
mov
arpl
add
push
adc
mov
lret
xor
pushf
fadds
mov
adc
xchg
ret
dec
sbb
sub
xorb
adc
cmp
mov
adc
inc
xor
dec
mov
or
inc
inc
outsb
lcall
and
push
adc
adcl
test
sbb
jns
mov
adc
push
pop
das
lret
cmp
or
mov
adc
test
stos
les
and
ret
push
adc
jns
test
add
adc
push
mov
adc
cmp
adc
scas
mov
inc
cmp
popa
mov
cltd
jns
mov
loopne
xchg
jno
push
enter
iret
lret
out
dec
adc
pusha
cmp
scas
ror
adc
and
sbb
sahf
push
movb
js
push
adc
xchg
scas
mov
cmp
iret
mov
int3
lds
mov
jp
lret
xchg
pop
loopne
pop
ret
xchg
push
std
fldcw
and
int
lods
mov
adc
stos
inc
xchg
cmp
push
jecxz
mov
adc
jns
adc
adc
jp
int3
imul
in
dec
sbb
pop
movsl
dec
loopne
push
cmp
inc
std
fistl
push
push
adc
mov
ds
and
and
aaa
mov
repz
int3
inc
arpl
mov
inc
adc
xchg
pop
loopne
pop
push
test
xchg
pusha
pop
mov
adc
in
rcrl
add
stos
sbb
movaps
sti
lds
mov
mov
in
push
lcall
mov
mov
or
movsl
dec
loopne
lret
dec
mov
repnz
les
fsubl
push
adc
enter
cmp
fnstcw
sbb
push
jnp
lahf
mov
gs
cmp
inc
xchg
daa
cmp
outsl
cmp
cmp
push
adc
xor
addb
mov
movsb
push
mov
push
adc
jmp
add
push
adc
mov
mov
int3
xchg
mov
lods
pop
xor
xchg
pop
loop
mov
xor
ss
scas
push
jnp
lahf
mov
mov
sub
push
std
sarb
int
test
je
shll
adc
cwtl
sub
sti
shll
push
and
mov
in
push
lcall
cmp
mov
pop
movsb
dec
loope
push
test
aam
cmp
adc
inc
mov
xchg
test
push
adc
or
xchg
insl
clc
mov
popf
and
out
push
cltd
xor
icebp
aas
inc
test
mov
pop
mov
adcb
enter
loop
outsb
xlat
aam
testb
xor
pop
in
pop
mov
dec
nop
xor
inc
out
mov
xchg
scas
dec
cwtl
and
adc
dec
enter
out
lcall
ds
mov
loop
pop
pop
pop
out
lea
sub
addb
pop
sub
sbb
jb
pop
test
push
adc
adcl
push
out
fdivs
push
adc
ret
push
pop
imul
test
push
aaa
push
mov
or
mov
xor
jno
in
mov
push
mov
lods
add
cmpl
popa
int3
xchg
ss
das
pop
lret
into
and
out
mov
dec
mov
adc
outsb
aad
mov
popf
push
es
jb
in
roll
cmp
outsb
fdivrs
je
loopne
outsb
daa
jo
nop
roll
repnz
push
mov
xchg
dec
jmp
xchg
data16
lcall
jp
fmulp
in
push
sub
lcall
or
pop
dec
jmp
sbb
fdivs
stos
cld
mov
je
mov
jp
test
mov
adc
lcall
inc
sbb
jne
xchg
ljmp
in
inc
es
pop
jmp
mov
xchg
ds
roll
mov
cmp
mov
icebp
and
std
sti
subl
idivb
lock
je
shl
jb
mov
scas
sub
pop
rorl
int3
fbld
mov
test
loope
cltd
test
mov
loopne
test
bound
push
inc
int3
ftst
in
aad
test
movsb
leave
add
mov
and
sub
pop
inc
pop
pop
aaa
out
lea
sub
or
aam
mov
jmp
aad
aam
mov
aam
push
adc
sub
dec
xchg
push
sti
pushf
pop
jno
sub
mov
scas
inc
xchg
cmp
push
sar
popf
pop
ja
xor
add
out
stos
int3
xor
shll
adc
fwait
sub
sti
popf
xor
or
dec
fprem
mov
cmp
fisubl
mov
sbb
addb
bound
or
jnp
sub
shll
pop
or
xor
or
push
cmp
dec
xchg
xor
push
mov
mov
sbb
pop
js
aas
mov
fdivrs
imul
insl
push
mov
xchg
mov
andb
mov
in
mov
ss
jl
das
mov
and
fwait
jne
data16
push
adc
test
inc
fcomip
mov
shrl
push
movsb
cmp
das
dec
sahf
jnp
mov
jge
mov
bound
iret
addr16
xchg
pop
loopne
xor
and
sahf
dec
lret
cld
lcall
push
xor
sub
push
inc
out
sbb
test
inc
jmp
and
inc
xchg
cmp
lods
pop
pop
and
inc
inc
aam
xor
jp
push
adc
lret
jne
xchg
pop
loopne
xor
and
sahf
dec
lret
cld
lcall
push
adc
sub
xchg
pop
loope
pop
push
es
xchg
push
cld
mov
cmc
icebp
loop
fldl
mov
xchg
fs
imul
aad
cs
dec
nop
xor
popa
cmp
mov
push
adc
cmpsb
push
shlb
push
bndldx
je
adc
push
sarl
and
ss
jle
fadd
push
adc
outsb
xlat
aam
jbe
pop
xchg
imul
xchg
jbe
or
inc
fisttpl
roll
pusha
jbe
ret
xchg
dec
adc
fistpll
push
push
dec
or
ss
lods
and
mov
xchg
das
jmp
jb
stos
pusha
xor
push
ret
jp
lods
sbb
add
sub
movsl
jp
daa
mov
mov
sbb
daa
or
enter
fdivs
gs
pushf
std
xor
inc
adc
popf
mov
or
ret
push
adc
push
std
hlt
es
stos
pop
rcr
movsl
add
mov
mov
ljmp
cld
jmp
notb
jge
push
into
adc
lods
add
push
popa
mov
data16
bound
les
adc
pushf
and
or
mov
lret
cmpsl
js
push
les
adc
inc
xor
inc
loopne
cmp
int
neg
shrb
inc
mov
les
adc
mov
outsb
mov
mov
push
test
cmp
clc
xchg
mov
mov
arpl
mov
push
vorps
leave
lret
mov
xor
xchg
sbb
call
js
inc
sbb
jmp
loope
cltd
icebp
pop
in
andb
rcrl
and
push
movsl
mov
fistpl
aam
rcl
cmp
adc
lds
adc
imul
and
ret
push
adc
popa
lds
push
xchg
add
push
js
sub
adc
loope
movsb
or
pop
mov
mov
movb
scas
sbb
cmp
addl
movb
pop
sub
movl
mov
or
lcall
mov
js
aas
jg
dec
xchg
push
cmp
daa
dec
sahf
sub
out
jmp
lret
shll
jp
lret
xchg
pop
and
dec
xchg
and
rolb
int
and
jns
push
or
and
imul
xor
sahf
jnp
movl
sbb
mov
xor
adc
cmp
push
adc
cmpsl
imul
adc
fsts
push
adc
xor
sahf
dec
lret
mov
insl
popf
xchg
leave
push
adc
pop
sbb
and
lret
mov
xchg
push
adc
repnz
fwait
inc
fcomip
mov
hlt
mov
nop
sub
push
test
in
stos
jns
out
addr16
insb
movsb
lret
nop
cmp
mov
dec
test
enter
lock
xchg
push
cwtl
xor
xor
adc
xor
jnp
lret
push
adc
sbb
push
ret
test
xor
xchg
lret
push
adc
loope
pop
mov
mul
mov
sbb
ror
adc
ficoms
test
or
outsl
inc
out
into
fwait
inc
fistps
inc
shrl
push
adc
sub
sub
mov
dec
lret
cld
lcall
push
xor
and
outsb
xchg
sub
pop
ja
dec
sahf
dec
lret
cld
lock
xor
or
adc
sbb
xor
fwait
sbb
aam
int3
push
adc
repz
fwait
inc
mov
ror
push
adc
mov
rorb
sub
mov
cmpsb
jo
int3
push
adc
xchg
push
xchg
sbb
push
cmpsl
or
xor
mov
jp
push
cmp
mov
xor
push
adc
inc
and
int
pushf
jb
popa
xor
dec
rcrl
push
adc
hlt
lret
pushf
inc
fdiv
movsl
jb,pn
inc
jl
push
adc
out
pop
stos
add
int
adc
movb
adc
data16
mov
loopne
mov
aas
or
scas
test
iret
push
adc
jle
sub
and
dec
mov
cs
push
or
sub
or
mov
jns
pop
fldenv
push
dec
cmp
fmul
push
adc
jae
rolb
adc
inc
add
jl
push
adc
push
fcoml
adc
and
mov
lock
adc
cmp
xchg
push
cld
mov
mulb
mov
push
sub
clc
out
int3
mov
rolb
adc
es
out
jmp
and
sub
push
adc
mov
int3
cld
test
stos
daa
jo
xor
dec
je
dec
test
pop
rolb
adc
pop
call
loopne
into
out
imul
xchg
mov
push
adc
add
dec
cmp
mov
xchg
roll
xor
or
mov
in
pop
rorb
pushf
cmp
adc
jnp
aam
shrb
daa
ljmp
adc
fs
sub
test
mov
roll
push
mov
pop
and
inc
push
aas
test
stos
push
push
sbb
mov
aaa
shlb
imulb
dec
subb
jnp
push
jp
shrl
cltd
add
decl
mov
inc
mov
in
rcl
mov
mov
enter
dec
aam
xor
jg
movsl
movsb
sbb
cltd
xchg
imul
inc
mov
rclb
pop
mov
mov
iret
insb
into
mov
add
pop
xor
loop
aad
test
push
movsb
pop
and
dec
xchg
push
cmp
lock
xor
and
mov
ss
dec
test
mov
daa
cmp
push
leave
fwait
inc
pop
mov
sub
sbbl
push
je
cmp
in
sahf
ss
push
inc
xchg
jge
lret
loop
dec
xchg
push
cmp
cs
sahf
sub
int
inc
or
mov
dec
mov
mov
xchg
sub
xchg
and
push
adc
nop
in
int
test
loop
aad
xor
daa
iret
xchg
outsb
or
push
adc
dec
mov
dec
in
dec
inc
out
int
imul
arpl
xchg
sub
pop
bound
stc
sub
inc
push
or
inc
scas
lret
inc
stos
loope
and
loope
pop
sahf
cmp
out
jmp
fwait
inc
pop
pop
mov
shlb
inc
pop
dec
xchg
sub
data16
sahf
cmp
in
push
lahf
ss
test
jl
mov
xor
mov
pop
inc
mov
cmpl
pop
lds
ss
dec
test
mov
daa
cmp
out
sbb
push
mov
xchg
push
enter
fwait
insl
mov
lahf
and
xchg
add
stos
shl
out
jmp
jle
or
jle
lods
gs
test
dec
xchg
push
cmp
dec
sahf
sub
mul
int
test
mov
xor
pop
and
movsb
cmp
daa
pop
enter
xchg
mov
mov
hlt
jle
xor
sti
movsb
dec
loope
lret
xchg
es
mov
shl
out
call
jg
pop
inc
xchg
or
xchg
cmp
pop
dec
xchg
push
cmp
xor
loop
loope
ljmp
mov
xor
cmp
push
mov
xchg
and
aas
jnp
xchg
js
daa
aam
mov
movsl
aam
xchg
or
and
lret
sahf
es
sbb
cld
mov
push
xchg
cmp
data16
jp
icebp
jle
stc
test
push
decb
jmp
lds
cltd
addr16
dec
hlt
stos
add
jae
pop
mov
push
adc
xchg
pop
inc
xchg
dec
push
out
fcom
fadds
adc
ret
push
pop
imul
std
scas
jmp
jne
flds
adc
aad
or
and
inc
mov
fidivrs
sahf
lret
movl
xorb
mov
jns
fs
int3
flds
adc
mov
inc
cwtl
push
mov
cld
xchg
insb
aam
insb
mov
push
adc
mov
or
cs
cmpb
insb
fiaddl
adc
call
stc
int
pop
mov
jne,pt
sbb
daa
and
loopne
jg
nop
adc
aam
push
adc
clc
push
sbb
das
cli
jl
enter
xorl
xchg
xchg
mov
in
adc
adc
add
subl
popf
mov
push
adc
jmp
sbbl
es
aam
push
adc
mov
das
movsb
mov
iret
dec
jle
loop
mov
icebp
and
std
sti
mov
les
andb
sbb
push
adc
imul
push
pop
leave
std
fwait
in
mov
push
push
mov
push
add
push
out
cmp
push
adc
and
lods
push
adcl
mul
or
fists
enter
pop
stos
loope
addr16
imul
inc
cwtl
mov
mov
shlb
xchg
sub
xchg
and
loope
addr16
cmp
lret
fwait
ss
std
pushf
push
or
add
xchg
and
loope
addr16
cmp
stos
dec
int3
fwait
inc
pop
test
daa
sub
popf
mov
cmp
mov
jns
pushf
lcallw
inc
shlb
xor
mov
pop
add
fldl
adc
sub
test
push
mov
pop
js
aas
decl
dec
xchg
arpl
vpmovw2m
rcl
icebp
mov
lret
fldl
adc
sub
outsl
sub
fwait
inc
pop
pop
mov
shlb
inc
xlat
addl
daa
dec
mov
shl
out
sub
and
or
push
adc
xchg
sub
push
data16
in
jecxz
repz
or
push
mov
sub
push
adc
xchg
and
fiadds
adc
adc
out
jmp
shll
xor
push
stos
push
movsb
cmp
arpl
mov
dec
lret
mov
xchg
aaa
aaa
insl
popf
add
push
adc
adc
xor
push
filds
adc
loope
rcrb
lcall
mov
lcall
movsl
movsl
dec
aad
filds
adc
and
out
xchg
and
push
pop
push
adc
xchg
outsb
jecxz
filds
adc
ds
loopne
adc
add
push
lret
lea
adc
cmp
push
std
mov
mov
nop
loopne
adc
mov
jns
and
sub
cmp
xor
adcb
lret
mov
clc
loopne
adc
and
addr16
jecxz
adc
cmp
cmp
in
in
iret
xchg
shlb
xor
lods
in
inc
jecxz
and
out
dec
cltd
cmp
lret
mov
sbb
ja
mov
pop
fbstp
sub
push
jle
int3
mov
lcall
leave
and
scas
dec
idivl
popf
pop
loopne
push
stc
dec
adc
sbb
xchg
stos
mov
xchg
dec
sbb
pop
sub
insb
lcall
fs
adc
adc
movsb
or
push
in
dec
xor
xchg
daa
push
sbb
xchg
xor
or
cmpsl
mov
add
fs
loope
adc
rcr
mov
outsb
test
dec
lea
pop
sub
jl
jecxz
cmp
fs
and
push
adc
mov
push
adc
xchg
inc
out
xchg
adc
cld
xchg
push
aam
loope
jns
pushf
loop
adc
mov
or
xor
cmpsb
pop
test
clc
es
incb
sahf
loop
loop
adc
jbe
loopne
jg
lods
add
sbb
lret
push
mov
mov
xchg
rcll
pop
or
rorb
in
outsl
mov
push
adc
push
fsub
push
adc
fsubl
fisttpll
mov
call
adc
jo
jb
and
or
popf
icebp
insb
and
push
adc
addl
push
adc
in
mov
cmp
dec
mull
aam
push
jg
push
stc
ds
jnp,pt
xchg
mov
lds
shlb
push
dec
test
shl
fs
int3
mov
jnp
hlt
in
adc
push
mov
or
mov
push
in
sbb
push
adc
nop
sub
or
je
adc
hlt
out
cli
dec
dec
adc
inc
in
adc
insb
push
shlb
loop
mov
push
xchg
sbb
lahf
sub
nop
push
and
mov
push
adc
stc
int3
fwait
inc
mov
repnz
andb
dec
out
inc
out
sbb
mov
adc
push
inc
xchg
cmp
aas
or
push
sti
pushf
pop
jno
ret
xchg
mov
aaa
insl
scas
push
scas
lahf
adc
out
in
gs
sub
push
inc
in
sbb
fdivs
out
call
mov
insb
out
adc
dec
ss
movsb
push
mov
test
push
ret
xchg
int3
je
shll
or
fcompl
push
movsb
push
pop
out
adc
dec
mov
ret
ret
das
loopne
push
adc
add
fs
movsl
movsb
ret
popf
xor
lcall
jnp
xchg
imul
lds
lret
out
adc
dec
sahf
pop
adc
sahf
pop
adc
shl
jno
or
lretw
out
adc
sub
outsl
lret
fwait
inc
fildll
inc
repnz
xchg
sub
push
pop
out
sbb
cmp
cwtl
out
adc
loop
mov
shrb
push
xchg
xchg
sub
add
lock
adc
sbb
repz
mov
out
mov
and
push
adc
xchg
and
and
pop
or
push
adc
gs
shll
lcall
pop
and
push
adc
or
push
inc
xchg
call
jb
dec
aad
jmp
sbb
jmp
dec
shll
adc
mov
push
xlat
cli
aam
mov
push
in
jl
aaa
push
imul
xchg
jmp
jo
dec
jecxz
popa
xchg
std
pushf
aas
or
fadds
adc
inc
test
cmp
pop
fisubl
and
aad
loope
mov
fdivl
orl
fwait
popa
pop
ljmp
inc
jecxz
pop
ljmp
lock
pop
dec
mov
jbe
mov
mov
push
adc
and
jmp
adc
fucom
stos
ja
xor
cltd
cltd
adc
jp,pn
pop
lret
jmp
jmp
adc
and
lahf
mov
pop
ja
lahf
cmp
in
push
adc
insb
enter
pop
in
push
adc
mov
test
push
adc
xchg
adc
adc
mov
in
push
adc
mov
fdivl
cmp
in
push
adc
pop
mul
mov
push
push
mov
or
lret
cwtl
in
push
adc
mov
inc
popf
push
out
lcall
mov
mov
ror
xchg
jg
cmp
cwtl
sbbl
aam
push
adc
adcb
mov
lahf
inc
subb
std
xchg
xchg
xor
ds
std
sbb
or
pushf
fsubrs
dec
dec
icebp
insb
cmp
cmp
out
dec
arpl
test
je
setg
xchg
enter
add
mov
mov
push
adc
aas
fistps
ficoml
nop
out
push
adc
sub
sbb
push
adc
loope
rorb
rcrb
sbb
mov
jp
jecxz
dec
xchg
cmp
out
dec
pop
cmp
adc
mov
out
push
adc
jmp
inc
fildl
fwait
test
mov
je
cmp
dec
and
inc
xrelease
dec
shll
adc
xchg
cmp
and
adc
mov
add
push
adc
mov
mov
and
mov
lea
push
adc
pop
dec
xchg
push
std
jge
icebp
or
int
pusha
icebp
push
adc
addb
stos
jne
andb
push
cmp
and
xchg
xor
test
jns
xchg
ds
mov
data16
xchg
pop
loopne
pop
loop
dec
xchg
push
std
std
sub
inc
out
jmp
push
or
orb
lcall
xchg
daa
pop
or
in
repz
int3
jns
sub
push
mov
daa
cmp
out
daa
test
mov
xor
or
xchg
and
mov
lret
mov
mov
xor
inc
xchg
push
jae
daa
sub
sti
in
xor
dec
lret
mov
vfmadd231ps
xor
js
aas
pop
adc
push
cmp
es
sahf
sub
out
faddl
adc
test
jle
sbb
and
push
sti
aad
jnp
es
fnstenv
push
adc
notb
insb
fcmovb
fimull
sbb
repnz
adc
xchg
and
and
ss
jl
mov
int3
and
xor
cvtps2pd
lret
xchg
pop
and
dec
xchg
and
push
mov
sahf
dec
lret
mov
insl
scas
push
addr16
and
xchg
inc
out
lret
inc
jg
xchg
and
and
scas
jl
xchg
jg
and
outsb
mov
mov
sbb
pop
xchg
sub
push
sbb
sub
outsl
dec
push
int3
fwait
inc
pop
push
mov
shlb
inc
xlat
cltd
xorb
mov
test
sti
lahf
cmp
subl
and
shl
aad
sub
lcall
loopne
lds
pop
lahf
aaa
push
imul
xchg
cmp
ret
and
push
aad
sbb
dec
nop
xor
or
jp
push
popf
mov
fdivl
mov
mov
pop
call
cmp
jle
testl
repz
adc
cs
xor
jb
inc
popf
insb
and
push
adc
mov
jbe
jns
fucomip
lods
hlt
push
adc
loopne
mov
aas
or
fwait
test
mov
pop
cmp
push
adc
jle
sub
sbb
fldcw
pushf
adc
cmc
push
adc
sarb
loop
xchg
xor
inc
mov
push
adc
scas
push
out
in
iret
mull
cwtl
sbb
push
adc
mov
imul
fsts
cmpsl
outsl
mov
fwait
xor
push
adc
adc
testl
mov
mov
out
sbb
into
xchg
addr16
push
adc
in
outsb
mov
test
push
adc
cmp
outsl
ret
ljmp
jae
lock
dec
mov
inc
mov
aam
sbb
dec
clc
push
adc
out
fnstcw
push
inc
je
fs
lock
loop
movsb
push
mov
and
mov
pusha
shl
fcmove
xchg
jns
inc
mov
mov
jp
stc
push
adc
xlat
outsb
bound
cmpsl
enter
clc
push
adc
addr16
add
out
push
adc
les
xchg
inc
ds
or
inc
outsb
scas
shrb
stos
lock
and
push
adc
dec
out
pop
pop
xchg
aad
std
mov
adc
mov
adc
mov
loop
dec
pop
sbb
cmp
mov
rcr
push
shlb
test
push
push
dec
pushf
jne
shlb
jb
test
mov
push
adc
sbbb
push
adc
lret
orb
jmp
repz
mov
pop
pop
punpcklwd
cli
push
adc
sbb
push
adc
jno
test
push
jnp
mov
lea
mov
sub
push
and
and
aas
pop
mov
aam
nop
or
jns
pop
sti
push
adc
xchg
imul
sbb
addr16
dec
mov
push
and
push
sub
cmp
in
call
jmp
xchg
mov
or
push
jecxz
sti
push
adc
jns
cmc
int
and
and
pop
in
dec
clc
sti
push
adc
loopne
push
test
mov
cmp
sbb
push
adc
mov
insb
cld
push
adc
jmp
lret
xchg
pop
and
dec
xchg
and
and
mov
jbe
aaa
insl
test
pop
hlt
xchg
addb
pop
sahf
push
movsb
cmp
maxps
dec
sahf
dec
or
out
fwait
and
roll
or
and
jge
sub
lcall
lahf
cmp
adcl
add
out
cld
push
adc
loop
sub
push
push
test
in
daa
or
cld
push
adc
xorl
orl
dec
fdivrl
and
push
adc
sub
mov
sbb
push
ret
mov
xor
dec
std
push
adc
loope
test
lret
pop
push
inc
xchg
push
jae
ret
sub
sti
in
xor
sub
dec
in
mov
in
jne
ss
push
inc
xchg
std
push
adc
loopne
bound
or
jnp
mov
rcl
icebp
loope
and
pusha
lret
aad
dec
xchg
xor
sub
dec
in
dec
repz
lea
fdivr
push
adc
loope
fs
inc
mov
inc
es
loope
push
out
or
push
adc
rcrl
adc
mov
push
movsl
cmp
bound
sahf
dec
lahf
dec
lret
aaa
and
insb
pushf
or
push
adc
sbb
adc
call
repz
dec
nop
push
ljmp
inc
cmc
fnstenv
xchg
push
cs
inc
out
xchg
and
or
cmpb
mov
movsl
outsb
cmpsl
inc
repz
lcall
inc
mov
mov
ret
xchg
cmp
mov
aad
test
lods
cmp
push
decb
andl
test
push
ja
popa
dec
pop
pop
cltd
popa
je
pop
hlt
stos
add
add
adc
je
repz
jp
in
push
clc
outsl
in
xor
incb
adc
lock
dec
mov
inc
add
sbb
push
adc
push
loopne
lods
scas
dec
lock
dec
mov
test
add
enter
mov
je
pop
mov
xchg
push
xchg
sub
sbb
loop
add
cltd
and
xchg
sub
imul
das
inc
mov
out
mov
lds
aas
dec
xor
xchg
pop
add
lret
ja
loopne
or
jo
pop
sub
addl
sbb
sbb
sahf
inc
in
icebp
cwtl
cmp
pop
xor
or
jne
xchg
push
fcmovnu
lods
jno
cmp
mov
cmp
icebp
cwtl
and
loopne
decb
xor
or
dec
sub
leave
jne
mov
pop
ret
pusha
bound
lods
jmp
ficoml
js
repz
cwtl
outsb
cli
sub
test
xor
bound
add
pop
test
in
and
xchg
pop
push
cmp
or
outsl
fadds
mov
push
negl
leave
mov
mov
mov
add
testl
cmp
mov
mov
test
push
in
and
pop
cld
scas
lret
pop
test
movsl
je
adc
std
int
adcb
test
jo
mov
sbb
adc
xchg
sub
jge
sub
cmpsl
adc
dec
loope
call
ss
sahf
ss
push
inc
xchg
jne
subb
push
sarb
adc
sbb
dec
fwait
ss
int3
sbb
aad
xor
cvtps2pd
lret
xchg
outsb
pushf
add
adc
ljmp
repz
lea
out
fdivs
or
sub
iret
xchg
pop
loopne
pop
add
fldcw
loope
out
out
inc
ljmp
xchg
inc
out
xchg
sub
xchg
and
and
sub
add
adc
inc
inc
shll
dec
aad
xchg
outsb
jl
pop
adc
dec
mov
add
adc
xchg
sbb
mov
cmp
mov
aad
push
pop
adc
adc
xchg
jg
dec
push
sub
inc
shl
pop
adc
test
push
movsb
push
inc
add
adc
or
ret
lcall
xor
gs
faddl
insb
add
adc
sub
jp
ss
int3
dec
ljmp
xor
jne
push
movsb
cmp
maxps
fwait
dec
sahf
dec
lret
mov
xchg
daa
aaa
insl
scas
out
shlb
xor
out
push
movsb
dec
test
sub
outsl
mov
fwait
jno
add
adc
adc
cmpb
jb
movsb
cmp
addr16
aad
dec
sahf
dec
lret
fdiv
cld
shlb
test
sbb
add
xchg
xorb
lret
movsb
push
add
pop
adc
test
insb
mov
dec
pop
adc
out
sub
pop
xchg
or
dec
lret
cld
lock
stos
xor
fidivrl
jae
jmp
or
push
and
mov
mov
out
cmpsb
jo
add
adc
xchg
outsl
xchg
adc
mov
push
clc
out
cmp
xchg
stc
cltd
xor
shll
sbb
int3
xchg
pop
daa
and
xchg
and
cmovp
lret
or
mov
movsl
aam
orl
cltd
es
sbb
sub
jecxz
ja
jmp
aad
adc
adc
int3
test
adc
and
xor
iret
enter
test
pop
adc
or
adc
dec
loop
or
add
or
xchg
addr16
add
adc
pop
jnp
lahf
sbb
movsb
movsl
mov
adc
add
adc
ret
pop
xor
lahf
in
push
test
jo
dec
adc
dec
or
fnsave
faddl
loop
and
sub
pop
adc
int
nop
dec
rcrl
ror
aam
lods
popf
je
push
popa
mov
aad
pop
inc
popf
bound
pop
adc
mov
sub
mov
test
pop
adc
inc
or
roll
pop
adc
out
sahf
push
pop
pop
adc
ljmp
and
test
popf
test
xchg
push
jl
pop
adc
test
test
cmpsb
cltd
jecxz
out
push
xor
orb
test
pop
adc
add
iret
pop
int
sbb
ljmp
pop
adc
insb
jle
outsb
test
or
sub
inc
and
leave
xchg
xchg
out
push
pop
jne
cmp
push
xor
js
cmp
aad
sbb
fcmove
xor
xchg
push
jle
or
adc
lods
xchg
mov
int3
or
adc
fidivs
aad
pusha
mov
jb
je
mov
inc
imul
stos
push
insl
jb
in
in
daa
push
andb
out
fptan
dec
or
sbb
or
adc
loope
in
adc
shll
mov
mov
mov
pop
adc
or
jmp
mov
movsl
jb
or
push
add
scas
arpl
pop
adc
mov
mov
shll
inc
xchg
xchg
gs
mov
dec
xchg
push
sti
mov
jns
push
mov
sbb
es
xchg
pop
fcmove
xchg
pop
and
dec
xchg
and
push
mov
fdiv
mov
aaa
insl
popf
pusha
or
adc
and
xor
mov
pop
frstor
cmp
repz
lds
insl
test
inc
movb
xchg
andb
aas
xchg
push
movsb
cmp
daa
pop
sub
sbb
insl
fisubl
hlt
mov
xchg
sub
pop
xchg
pop
dec
sahf
dec
or
int
and
adc
ljmp
inc
int
xchg
and
scas
push
std
fldcw
orl
mov
mov
test
inc
mov
repnz
pop
mov
js
out
call
push
add
xor
pop
push
movsb
push
sbb
pop
adc
sub
ljmp
cmp
pop
adc
popa
add
fwait
jne
push
push
and
mov
repnz
push
cli
loopne
inc
repnz
xchg
sub
push
inc
out
sbb
cmp
xchg
or
adc
ret
push
adc
mov
xchg
pop
loopne
pop
add
dec
xchg
pusha
cmp
pop
adc
sub
push
inc
xchg
cmp
push
or
xchg
push
sti
pushf
pop
jno
sub
jo
pop
adc
xchg
inc
xchg
sbb
push
sub
sti
aad
fwait
push
es
in
mov
in
or
repz
popa
inc
xchg
jne
and
push
xlat
cli
aam
mov
aas
in
or
aaa
sub
or
adc
inc
aam
andl
xchg
add
cmp
and
call
sbb
mov
pop
adc
adc
push
cmp
jle
testl
and
in
orb
xchg
stos
xor
je
jne
inc
xchg
inc
les
bound
lea
ret
loopne
dec
mov
adc
divb
std
xchg
push
mov
stos
add
adc
xor
icebp
stos
gs
popa
cmp
jbe
imul
adc
or
repz
or
adc
scas
jl
inc
xchg
das
push
jecxz
push
das
stos
inc
jo
xor
dec
xor
sub
lock
cmpsb
leave
addr16
gs
in
cmpb
cltd
sbb
pop
adc
mov
sbb
adc
outsb
mov
dec
xchg
aas
popa
lret
mov
sarl
adc
sub
pop
adc
mov
cwtl
pushf
leave
sarb
mov
fisttpll
pop
in
ffree
test
pop
out
sahf
aam
pop
adc
ljmp
and
test
popf
test
xchg
and
ljmp
ds
dec
cmp
inc
mov
iret
insl
sub
mov
jmp
sub
pushf
mov
fists
inc
adc
dec
and
sbb
loopne
xchg
adc
xor
pop
adc
sub
sbb
cmp
mov
push
or
shrl
dec
xor
lahf
adc
adc
pop
and
pushf
test
adc
inc
xchg
mov
pushl
mov
jecxz
xchg
outsl
pop
enter
jb
mov
fdivrl
das
push
cmpsl
mov
aam
push
mov
pop
adc
adc
pop
repnz
push
in
sub
dec
sbb
je
mov
iret
cli
es
adc
pusha
sub
pop
jg
jae
enter
dec
fistl
ret
mov
orl
push
and
pop
adc
adc
out
jmp
push
or
inc
sysret
adc
sub
dec
xchg
push
sti
pushf
xor
cmp
pop
adc
xchg
mov
sbb
adc
adc
adc
sahf
dec
lret
loopne
mov
aaa
insl
popf
mov
pop
adc
aas
sbb
pop
js
aas
rclb
dec
xchg
arpl
sysret
adc
mov
lock
rcl
icebp
popf
sbb
jl
pop
adc
sub
outsl
icebp
mov
adc
adc
push
jo
or
cmpb
insb
push
movsb
push
sub
pop
adc
dec
stos
cmp
jmp
sbb
push
fs
pop
mov
cmp
dec
aam
adc
adc
ror
fwait
inc
xlat
aad
ja
push
cmp
out
sbb
sub
push
pop
out
sbb
test
fwait
cmp
xchg
or
mov
adc
mov
popf
pop
pop
xor
push
and
jns
mov
stos
subb
lock
adc
xchg
sub
push
or
sub
outsl
stos
and
fwait
jno
adc
adc
xor
subb
in
push
movsb
push
sbb
pop
adc
jmp
push
ljmp
inc
adc
adc
mov
fwait
jns
push
and
mov
out
insb
adc
adc
hlt
jle
xor
subb
movsl
dec
loopne
push
test
inc
int
daa
repnz
mov
sti
sub
mov
dec
test
xchg
pop
adc
shrl
movb
or
xorb
lret
inc
xchg
xchg
and
adc
push
out
lcall
dec
jecxz
or
adc
pop
adc
dec
nop
push
mov
into
fistpll
adc
adc
xchg
inc
test
adc
adc
rcr
adc
adc
push
jg
xchg
js
daa
push
sbb
pop
adc
dec
pop
les
popf
sub
test
inc
xlat
lcall
leave
cld
fisubrs
cmp
xchg
cwtl
adc
adc
push
push
mov
sahf
xor
ret
mov
jl
pop
cltd
push
or
pop
adc
pop
adc
aaa
inc
int
inc
stos
je
pop
pushf
sbb
jge
subb
es
decl
fdivs
jmp
xchg
fs
movsl
mov
adc
cwtl
fnstsw
lret
imul
inc
fadd
fisubl
jle
je
lds
mov
pop
adc
push
sti
xchg
frstor
mov
cmc
adc
scas
mov
jns
jae
xor
pop
adc
dec
mov
fsubs
xlat
aad
push
pop
adc
leave
pop
pop
orl
jnp
xor
mov
icebp
mov
repz
neg
mov
scas
and
mov
pop
adc
adc
aam
jb
inc
std
or
push
mull
pop
push
pop
adc
lock
in
mov
sbbl
push
pop
adc
cltd
mov
nop
push
add
pop
adc
leave
sbb
pop
adc
xchg
pop
pop
adc
das
and
pop
adc
sub
cmp
adc
pop
adc
outsl
sbb
idivb
insb
sbb
adc
test
push
jbe
psubw
jl
push
pop
leave
fyl2x
add
sahf
movsb
mov
fnstenv
lcall
mov
mov
aam
xor
jns
stc
mov
les
pop
adc
fistpll
test
movsb
leave
add
mov
sbb
inc
repz
pop
adc
push
xchg
and
test
andl
jae
shl
sbb
pop
adc
std
xchg
sub
push
xchg
and
test
andl
jae
rcl
xor
or
xor
cmp
dec
xchg
xor
xchg
push
ss
int3
xor
shll
xor
pop
out
push
movsb
cmp
orl
pop
or
js
mov
int3
gs
shll
push
dec
leave
xchg
outsb
cld
sbb
adc
stos
movsb
es
ljmp
mov
scas
aas
mov
lret
xchg
pop
loopne
xor
mov
sahf
jnp
sbb
adc
sbb
scas
push
pop
nop
sbb
adc
push
insb
dec
pop
dec
xchg
push
std
xchg
inc
inc
cmp
call
aaa
insl
scas
push
lods
lahf
adcb
es
cmp
add
mov
jge
sbb
mov
sbb
adc
sub
outsl
ret
fwait
inc
enter
pop
dec
or
call
pop
and
loop
mov
sbb
adc
push
push
push
js
push
insb
maxps
stos
dec
xchg
push
std
xchg
inc
inc
push
insl
scas
push
scas
lahf
push
jns
out
xor
xchg
sub
push
inc
in
sbb
insl
fdivs
out
call
mov
cmp
pop
adc
dec
adc
cmp
xlat
pop
and
dec
sahf
dec
lret
mov
jbe
aaa
insl
test
inc
bound
and
pop
loope
movsb
cmp
inc
pop
inc
out
dec
sahf
jnp
sbb
adc
sbb
push
arpl
sbb
push
jns
ds
test
pop
adc
mov
jge
rcl
lock
sbb
cli
addr16
rcl
sbb
adc
or
pop
adc
andb
lds
punpckhbw
int
cs
xchg
pusha
nop
and
iret
dec
cltd
cmp
sub
pushf
jbe
sbb
adc
sarb
or
rcll
pop
stos
xor
fs
cmp
inc
xchg
inc
les
bound
dec
lahf
in
cmp
stc
xchg
dec
mov
mov
and
mov
js
ja
in
or
pop
adc
xchg
sbb
inc
scas
sbb
xor
hlt
fpatan
movsl
sbbb
out
lahf
fildl
decl
shll
out
shlb
fwait
push
inc
ja
lods
sbb
ret
cmp
mov
mov
insb
mov
mov
sbb
sbb
pop
jmp
int
js
push
pop
adc
mov
iret
adc
sub
adc
lea
cwtl
xlat
dec
sarl
outsb
mov
add
test
dec
in
out
in
adc
dec
fstps
jae
scas
arpl
push
pop
adc
es
int
xlat
enter
xlat
sbb
fwait
mov
jp
pop
pop
adc
xlat
jb
xor
mov
pop
adc
jne
inc
pop
pop
adc
imul
adc
imul
adc
insb
push
outsb
lcall
adc
pop
mov
and
push
cli
in
inc
fsubs
and
jmp
jecxz
loope
aaa
sub
in
hlt
pop
pop
adc
icebp
cwtl
arpl
test
jae
sbb
adc
out
dec
jg
jo
cmp
movsl
jle
out
pop
and
push
out
in
jmp
or
lods
sbb
cmp
pop
adc
loop
in
cmpsb
xchg
les
and
adc
imul
and
push
leave
xchg
outsb
mov
sub
dec
mov
and
adc
vphaddubq
leave
sbb
fs
sbb
dec
loope
fcompl
push
lcall
mov
mov
lds
aad
and
adc
pop
js
xchg
jg
and
ds
movsb
adc
xor
and
add
test
and
pop
adc
add
addr16
and
adc
mov
pushf
xor
fidivrl
out
xchg
int3
je
shll
or
fcompl
push
movsb
cmp
in
dec
idivl
xchg
jg
dec
push
jge
mov
mov
pop
adc
mov
sub
arpl
cmp
loopne
mov
mov
mov
and
fs
jne
inc
pop
and
pop
adc
fcmove
fwait
jno
and
adc
cmc
jg
or
add
jo
pop
adc
or
adcl
fcmove
push
add
adc
popl
stos
inc
js
pop
adc
adc
or
lcall
adc
out
inc
shll
pop
adc
add
or
adc
jmp
inc
pop
adc
adc
std
and
pop
adc
add
pop
adc
or
adcl
fimull
mov
adc
push
adc
das
pop
push
movsb
out
scas
bound
pop
pop
adc
pop
pop
or
adc
and
mov
or
adc
xorb
loopne
xchg
jns
inc
adc
adc
inc
pop
pop
adc
pop
adc
jo
push
movsl
out
iret
mov
lahf
notl
adc
iret
lea
pop
adc
pop
data16
push
adc
cmp
inc
arpl
push
adc
cwtl
push
add
adc
push
adc
test
push
mov
pop
pop
adc
pop
orl
cmpsl
inc
daa
aaa
rorb
lds
es
adc
adc
cmp
pop
adc
loope
or
adc
or
mov
mov
mov
adc
adc
sub
add
dec
test
pop
adc
repnz
jae
or
adc
push
out
inc
pop
adc
pop
lods
sbb
icebp
js
pop
adc
movsl
or
adc
push
out
cmp
or
add
adc
push
movsl
sub
xor
cmpsl
pop
pop
or
dec
dec
lahf
xchg
push
pop
xchg
icebp
sbb
ficomps
adc
adc
pop
pop
sbb
xchg
jge
inc
hlt
pop
add
jae
push
push
inc
adc
adc
cmp
popf
pop
adc
and
es
and
push
adc
jmp
xlat
arpl
jp
popf
pop
adc
int3
popf
pop
adc
jnp
mov
aam
or
scas
inc
lock
xchg
mov
adc
adc
popf
pop
adc
mov
jmp
cwtl
aas
mov
or
insl
dec
arpl
imul
push
adc
popf
pop
adc
push
jl
pop
adc
arpl
adc
or
xor
outsl
ljmp
push
adc
sahf
pop
adc
mov
or
mov
jmp
or
and
inc
mov
push
adc
xchg
pxor
add
or
adc
xchg
lret
or
adc
addb
clc
loope,pt
push
adc
jno
pop
sub
or
adc
push
in
stc
je
popf
decl
adc
inc
mov
xchg
or
adc
push
lods
sbb
xchg
push
cwtl
popf
pop
adc
mov
dec
adc
push
or
and
mov
cli
inc
add
push
sahf
pop
adc
pop
sub
pop
adc
jmp
adc
push
or
jne
push
adc
sahf
pop
adc
adc
push
dec
sahf
lcall
adc
out
pop
shll
pop
adc
xchg
jecxz
inc
pop
adc
and
pusha
rcrb
cmpsl
cwtl
inc
pop
adc
xchg
cmp
sahf
pop
adc
pop
adc
or
fcomps
jecxz
jo
aas
sub
repnz
and
in
pop
adc
in
leave
aaa
insl
dec
xchg
or
cmp
xchg
ret
pop
adc
adc
cmpsb
and
push
adc
and
pop
adc
adc
scas
xchg
dec
xchg
xorb
lahf
pop
adc
sub
pop
adc
dec
mov
push
adc
sub
xchg
outsb
loop
lahf
pop
adc
mov
push
adc
inc
call
add
jb
push
xor
arpl
cmp
iret
jno
or
pop
shll
mov
sbb
push
adc
push
js
inc
icebp
or
or
xchg
inc
xchg
add
adc
inc
pop
adc
cltd
dec
sahf
add
pushf
pop
pop
adc
dec
sbb
push
inc
sub
and
adc
fwait
ret
mov
add
dec
pop
pop
adc
insl
jge
push
adc
imul
inc
pop
adc
cmpl
mov
pop
adc
sbb
pop
mov
pop
adc
iret
dec
xchg
popa
sbb
in
mov
popf
pop
adc
jl
cmc
insl
cmp
outsl
xor
inc
pop
adc
sub
int3
cmpsb
mov
adc
adc
jns
arpl
stos
mov
sub
pop
adc
cmpb
pop
addr16
dec
inc
pop
adc
mov
xor
insb
mov
pop
adc
inc
popa
push
pop
bound
inc
pop
adc
cmp
test
and
pushf
inc
pop
adc
and
popf
pop
adc
and
inc
nop
jg
int
popf
pop
adc
push
sbb
cmp
jb
fcompl
xchg
add
pop
adc
int3
popf
pop
adc
pop
lock
dec
jl
pop
adc
data16
mov
pop
adc
cmpsb
aaa
out
pop
cmp
mov
sahf
pop
adc
jecxz
fnstsw
enter
or
inc
pop
adc
fcoms
push
adc
push
test
pusha
int3
stos
data16
pop
adc
and
xor
mov
pop
adc
fimuls
pop
adc
and
in
adcl
adc
js
in
mov
fisttpl
es
mov
push
test
pop
adc
into
jb
add
enter
add
pusha
pushf
and
popf
popa
mov
pusha
pushf
inc
popf
popa
call
pusha
pushf
xchg
popf
popa
pop
pusha
pushf
sub
popf
popa
add
pusha
pushf
and
popf
popa
mov
pusha
pushf
and
popf
popa
xor
pusha
pushf
mov
popf
popa
ret
pusha
pushf
mov
popf
popa
popl
pusha
pushf
xor
popf
popa
add
pusha
pushf
mul
popf
popa
push
pusha
pushf
xor
popf
popa
push
pusha
pushf
mov
popf
popa
push
pusha
pushf
dec
popf
popa
push
pusha
pushf
popf
popa
jmp
fistpl
and
popf
popa
call
pusha
pushf
mov
popf
popa
subl
pusha
pushf
and
popf
popa
mov
pusha
pushf
popf
popa
mov
pusha
pushf
xchg
popf
popa
and
pusha
pushf
xchg
popf
popa
add
pusha
pushf
xchg
popf
popa
mov
pusha
pushf
popf
popa
mov
pusha
pushf
push
add
popf
popa
movzwl
pusha
pushf
mov
popf
popa
add
pusha
pushf
imul
popf
popa
cltd
pusha
pushf
mul
popf
popa
mov
pusha
pushf
cmp
popf
popa
div
pusha
pushf
mov
popf
popa
xor
pusha
pushf
or
popf
popa
xor
pusha
pushf
push
add
popf
popa
ror
pusha
pushf
mov
popf
popa
inc
pusha
pushf
mov
popf
popa
cmp
pusha
pushf
imul
popf
popa
jl
pusha
pushf
or
popf
popa
call
pusha
pushf
popf
popa
pop
pusha
pushf
xchg
popf
popa
test
pusha
pushf
mov
popf
popa
je
pusha
pushf
xor
popf
popa
dec
pusha
pushf
cmp
popf
popa
je
pusha
pushf
neg
popf
popa
dec
pusha
pushf
and
popf
popa
je
pusha
pushf
mov
popf
popa
xor
pusha
pushf
or
popf
popa
ror
pusha
pushf
xor
popf
popa
xor
pusha
pushf
cmc
popf
popa
cmpw
pusha
pushf
mov
popf
popa
je
pusha
pushf
cltd
popf
popa
sub
pusha
pushf
push
add
popf
popa
and
pusha
pushf
or
popf
popa
jmp
pusha
pushf
push
add
popf
popa
add
pusha
pushf
mov
popf
popa
mov
pusha
pushf
cmp
popf
popa
cmpw
pusha
pushf
mov
popf
popa
jne
pusha
pushf
test
popf
popa
and
pusha
pushf
mov
popf
popa
pop
pusha
pushf
and
popf
popa
mov
pusha
pushf
sub
popf
popa
jmp
pusha
pushf
add
popf
popa
xor
pusha
pushf
mov
popf
popa
jmp
pusha
pushf
or
popf
popa
xor
pusha
pushf
popf
popa
jmp
add
mov
jnp
subl
xchg
mov
dec
sti
cmp
mov
arpl
repz
xchg
or
int
xchg
cmpsb
sub
cmp
nop
ljmp
mov
popf
and
fbstp
xchg
xlat
popf
sarb
in
xchg
push
aaa
ja
loopne
or
js
xchg
fnstcw
sarl
leave
fcom
mov
xor
push
sbb
mov
mov
push
sub
mov
pop
stc
test
mov
mov
dec
xchg
inc
pop
insl
mov
repz
popa
pushf
cmp
mov
mov
xor
fdivp
mov
ret
xchg
inc
sub
and
js
mov
xor
push
xchg
dec
mov
mov
adcl
xchg
cmpsb
push
inc
xchg
mov
jns
lret
aam
stos
pop
mov
outsl
sbb
in
decl
adc
stos
sub
jbe
sub
mov
mov
push
adc
loopne
mov
dec
repz
popf
xlat
push
cli
xor
bound
and
lods
loopne
inc
fwait
xchg
iret
cmpsb
cmp
xchg
mov
push
inc
movb
jp
and
ljmp
cmc
loop
out
dec
add
out
es
push
xchg
js
pop
outsl
pop
xor
xchg
adc
inc
mov
sub
repnz
xchg
or
and
inc
pop
cmp
test
xchg
xchg
push
aam
mov
outsb
in
xor
xor
rcrl
xchg
cs
pop
ss
or
mov
lds
ljmp
out
mov
ljmp
loop
out
dec
add
out
es
xlat
pusha
hlt
pusha
out
xchg
sub
mov
fisttps
out
xor
mov
jns
ret
pop
js
aad
iret
shll
xchg
adc
andl
arpl
jns
inc
push
xor
insl
shll
mov
or
push
cmpsl
push
sbb
pop
add
and
mov
sbb
scas
xchg
jmp
xor
mov
mov
scas
mov
mov
ret
fld
std
mov
out
sbb
sbb
nop
aam
popf
add
dec
mov
xchg
cltd
adc
push
ret
mov
and
sub
mov
xor
pop
sbb
inc
or
mov
xlat
int
cmp
cmp
adc
push
mov
imul
arpl
dec
xchg
sub
out
popa
shlb
addr16
fidivl
addr16
aam
mov
das
add
xchg
xchg
push
ja
mov
sbb
sub
fsub
outsb
fisttpll
xor
cmpsb
dec
jae
sahf
xchg
gs
pusha
imul
cmp
imul
jge
loopne
ret
and
aas
fbld
add
push
ds
ja
popa
pop
mov
push
or
xor
call
rclb
push
and
and
adc
repz
sbb
mov
clc
mov
jno
or
push
in
in
repz
cmp
popa
idivb
jecxz
movsb
pop
arpl
pop
mov
dec
or
push
or
and
nop
fdivs
rcr
mov
xchg
adc
fcmovne
dec
or
sbb
fisubrl
sub
mov
pop
fs
push
mov
imul
cmp
jle
xchg
idivl
out
popa
lods
add
or
sbb
test
pop
push
mov
lods
fucomi
test
test
adc
xor
aaa
and
loopne
shlb
lcall
fs
add
nop
and
push
pop
fbstp
and
xor
jo
lcall
push
push
push
cmp
pop
inc
adcb
cmc
inc
push
mov
and
xchg
or
pop
js
aam
and
call
adc
mov
xchg
repnz
rolb
flds
pop
fbld
pop
js
or
add
insb
imul
andl
cld
sahf
sub
repz
popa
es
cmp
jle
insb
xor
movntq
out
inc
push
push
out
push
and
repz
ret
jns
mov
ds
mov
mov
jno
or
push
in
sbb
insb
dec
mov
idivb
jecxz
les
test
ret
gs
cmc
pop
test
xor
aaa
sub
mov
sbb
aad
push
data16
pop
dec
lcall
mov
dec
in
lea
addr16
mov
sub
mov
push
lret
aaa
xor
push
mov
push
add
push
in
xchg
std
push
out
leave
add
popf
fwait
ss
jns
outsb
push
loop
cs
add
cs
adc
ret
mov
xor
jnp
mov
mov
sarl
adc
in
out
or
cmpsb
mov
es
jno
mov
shll
cmpsb
pop
pop
pop
shr
fcmovne
dec
xchg
lcall
imul
insb
loopne
mov
push
sbb
insl
inc
push
ljmp
cmc
pop
mov
pop
push
mov
xchg
or
xor
and
mov
jne
pop
mov
sbb
xchg
xchg
push
inc
loope
push
outsb
aas
mov
sbb
mov
fs
sbb
notb
cltd
aas
dec
out
ret
inc
add
xor
xchg
sarb
xor
xor
xlat
ja
call
test
jb
push
mov
jb
and
icebp
shrb
push
xchg
jecxz
add
xlat
pop
jle
out
js
shufps
clc
std
and
pop
stc
loopne
sbbl
mov
fs
lcall
pop
stc
scas
mov
lock
out
popf
sti
aad
mov
addr16
xchg
rol
pop
xor
jecxz
repz
xchg
stos
lock
push
es
xchg
std
sub
shll
lahf
add
rol
or
sarl
or
mov
jbe
sbb
insb
mov
mov
in
xchg
mov
int3
add
mov
cld
es
sbb
mov
sarl
adc
in
out
or
cmpsb
mov
es
jno
mov
shll
cmpsb
pop
pop
pop
shr
fcmovne
dec
xchg
mov
sbb
ror
lods
mov
inc
xchg
xchg
rclb
das
cltd
add
repz
sbb
js
push
and
mov
xchg
pop
xor
xchg
rep
movsb
inc
sbb
xlat
xchg
inc
mov
fs
add
inc
and
mov
sub
arpl
fisttpl
lret
xor
mov
xor
or
pop
mov
push
jnp
es
jecxz
ds
nop
repz
ficoml
fisttpl
cmpsb
js
mov
inc
mov
mov
sbb
push
cltd
mov
ret
into
sbb
fcomps
enter
fwait
daa
sub
adc
mov
xchg
inc
push
das
addr16
mov
jnp
mov
icebp
test
dec
mov
xlat
adc
mov
out
xor
cmpsb
jb
sub
ss
sub
xchg
xor
push
in
ret
out
leave
add
popf
xchg
clc
sub
mov
add
xchg
aas
sbb
push
push
in
scas
xchg
jp
sarb
movsl
push
xchg
dec
mov
mov
push
pop
out
cmpsb
sbb
rolb
mov
or
push
mov
mov
movsl
pushf
lods
gs
add
sbb
cmp
inc
pop
push
push
xchg
xor
mov
mov
jge
nop
cmp
push
notb
icebp
jns
popf
cld
mov
push
xchg
fidivs
lea
inc
bound
cmp
sbb
and
jo
mov
std
call
sub
aad
inc
ss
test
push
sub
mov
sbb
inc
mov
fs
loopne
mov
repnz
mov
and
or
ss
fnstenv
loope
xchg
mov
nop
xor
push
out
xchg
sbb
ret
shl
and
mov
xchg
or
push
repz
fcomip
pusha
mov
stos
test
jo
popf
lods
sahf
mov
sahf
stos
mov
mov
lret
xor
mov
xor
xchg
insl
dec
push
cli
je
sub
insb
sbb
out
icebp
les
mov
mov
xlat
icebp
es
mov
aaa
xor
inc
adc
out
sbb
xchg
or
cmp
inc
aad
insl
sahf
pop
repnz
inc
fcom
push
test
inc
xchg
ret
aaa
pop
insl
popa
pop
xrelease
dec
mov
pop
ror
xchg
xchg
push
scas
mov
in
xchg
push
dec
xor
xchg
cmp
sbb
daa
sub
int
mov
sbb
insl
int
add
sbb
cmp
mov
ss
sub
flds
sub
negl
pop
jns
sbb
ret
mov
adc
mov
and
pop
fldt
xchg
rclb
gs
out
lds
mov
sahf
movsb
js
inc
scas
cld
cmp
sub
jmp
mov
addr16
pop
and
pop
repz
mov
cmp
push
pop
loopne
xchg
xchg
jne
mov
and
ja
jae
cmp
or
outsb
es
orl
xlat
mov
lret
xor
xor
jg
pusha
xor
ljmp
in
popf
es
out
iret
sbb
imul
inc
mov
add
mov
mov
mov
xchg
xchg
mov
cmp
gs
insb
inc
into
xchg
out
insl
dec
push
jns
lret
mov
fsin
clc
rcrb
dec
andl
es
pop
or
sahf
es
fwait
xchg
mov
or
jle
insb
xor
ja
pop
mov
inc
insl
sahf
pop
jns
pop
gs
rcr
call
fcomps
cwtl
mov
insl
int
int3
add
mov
dec
push
xchg
xlat
lock
adc
dec
lret
push
fbld
test
rorb
jp
inc
es
pop
push
mov
dec
push
adc
jnp
test
ror
aaa
enter
lea
sub
fstp
jno
lret
dec
cwtl
jmp
push
dec
pop
jns
sbb
jne
jbe
adc
xchg
in
mov
mov
pushf
cmc
lret
push
pop
pop
jns
xor
sub
lods
jns
fcoms
cmp
dec
mov
push
inc
loop
ficompl
sub
ss
sub
mov
lret
cltd
xchg
or
mov
into
xor
jbe
sahf
push
xchg
es
loopne
ret
and
aas
fbld
sahf
sub
pusha
and
outsb
inc
cmc
inc
jge
pop
adc
mov
jo
lret
sahf
jp
xchg
scas
inc
ficompl
insl
sahf
fdivs
enter
fwait
daa
sub
insb
imul
cmp
or
mov
mov
xor
jne
xlat
push
in
popf
xchg
xchg
push
test
out
pop
fmuls
insl
int
sti
jle
sub
lock
popa
imul
dec
sub
push
out
pop
int
lret
xor
pusha
repz
dec
xchg
pusha
or
jne
cmp
adc
jle
xchg
rcrb
mov
xchg
mov
lcall
pop
in
popa
shlb
inc
push
xchg
push
adc
lds
cmp
out
mov
in
mov
mov
repnz
pushf
and
push
call
imul
adc
xor
pop
add
sahf
inc
fmulp
mov
aaa
loope
pushf
mov
push
inc
gs
jns
insl
mov
sahf
xor
and
sub
out
xor
or
xor
je
imul
inc
xor
cmp
xchg
push
insb
mov
stos
dec
and
push
xor
sbb
push
jo
test
jo
pop
xchg
inc
fwait
xchg
push
xor
and
xchg
xchg
mov
pop
add
sahf
cs
xchg
daa
xchg
xlat
mov
dec
adc
dec
sub
mov
and
jo
pusha
das
ds
xor
push
sahf
xor
out
imul
lret
lahf
insl
mov
stos
dec
loopne
inc
sbb
pop
repz
cmp
cmp
push
lret
push
shlb
xchg
inc
fiadds
xlat
fiaddl
xchg
sbb
mov
jae
lret
sbb
fwait
lret
mov
dec
out
imul
outsb
sbb
mov
inc
loope
fldt
xor
pusha
repz
into
lcall
in
mov
cmp
sub
adc
mov
rol
inc
pusha
xor
pop
push
cmc
dec
jns
fcom
aaa
mov
pushf
mov
sub
lcall
jle
gs
push
xchg
push
push
mov
mov
stos
sub
sar
mov
rcl
mov
mov
es
test
stos
xlat
ja
fdivrp
xchg
xor
push
inc
mov
lea
mov
fcoms
aaa
and
out
idivb
insl
bound
repz
sbb
mov
inc
xor
push
add
fwait
xchg
mov
dec
aaa
pop
jg
out
cmpsl
adc
in
push
pop
jns
es
icebp
das
sub
sub
xor
fistpl
out
or
outsl
pusha
and
leave
mov
mov
push
fwait
lret
jbe
push
mov
cmp
dec
or
in
ja
ss
xchg
hlt
pusha
stos
test
shl
mov
cwtl
mov
bound
dec
repz
dec
cld
jle
sub
fcom
mov
leave
cmp
gs
or
mov
mov
js
mov
fistpl
xchg
xchg
xchg
xor
test
popf
sbb
lea
pusha
xor
mov
loop
js
cmc
ss
sbb
dec
sub
pop
test
aaa
sbb
lea
jb
pop
jns
pop
int3
inc
fwait
daa
aas
pop
iret
xchg
xchg
lods
movsb
bnd
pop
pop
rorb
xchg
popa
pop
cld
inc
pop
push
xchg
arpl
pop
sbb
adc
jb
test
cmp
rcrb
pop
xchg
fcom
mov
lds
lods
adc
sub
xor
movsb
repz
test
pusha
pop
adcb
mov
push
sahf
lcall
in
mov
dec
add
mov
sbb
insl
mov
bound
inc
jg
subb
inc
push
xchg
sbb
pop
sbb
xor
and
xchg
or
dec
jmp
insl
mov
decb
xchg
push
fsub
and
adc
lcall
dec
push
dec
popf
in
inc
in
xor
shlb
mov
ret
jno
lahf
sti
and
dec
xchg
into
int3
cmp
xchg
lods
xor
int
cs
push
add
xor
xchg
mov
gs
movsb
js
mov
sahf
mov
jo
fistl
xchg
xchg
sbb
popa
cmp
jecxz
dec
push
or
xor
aaa
loope
pushf
mov
nop
pop
xchg
pusha
repz
es
or
stos
js
test
and
fsubrs
mov
dec
adc
sbb
xor
test
sub
jns
inc
pop
xor
int
movsb
pushf
mov
push
psubsb
sarb
gs
lods
or
mov
imul
es
jae
adc
addr16
int
fbld
mov
arpl
cmp
std
std
push
mov
sbb
lcall
dec
sbb
int3
shlb
xchg
push
xchg
xlat
xor
int
mov
out
dec
gs
jp
inc
push
push
push
cmp
pop
inc
adcb
cmc
inc
push
mov
xchg
mov
out
mov
mov
sub
push
adc
xchg
popa
pop
add
cmp
cltd
mov
xchg
imul
fisubs
xchg
pusha
jns
dec
mov
aas
arpl
xchg
movsb
or
or
shlb
xor
mov
xchg
inc
push
jbe
pop
fidivrl
repz
jl
and
ds
xchg
jne
fcmovne
dec
mov
xor
or
xchg
push
test
adc
outsl
out
out
dec
lret
iret
insl
mov
in
xor
repz
push
mov
inc
jl
outsl
sbb
ret
mov
dec
cmp
ljmp
or
mov
pop
jl
ret
stc
mov
xor
push
jno
sbb
inc
pop
xchg
pop
pop
inc
fwait
daa
loopne
sbb
mov
add
dec
or
in
mov
dec
xor
mov
xchg
sahf
ret
push
pop
arpl
xor
mov
mov
inc
das
sub
and
push
fwait
mov
fildll
and
adc
sahf
fmuls
inc
push
xchg
lods
xchg
aaa
and
lret
pop
bound
xchg
inc
into
jle
sbb
inc
arpl
out
es
xor
inc
out
xchg
lahf
pop
jp
mov
push
jb
ljmp
movsb
cli
or
sub
movsl
mov
adc
rcrb
scas
mov
sbb
and
ja
loopne
std
mov
das
int
lahf
adc
insb
inc
xor
fimull
pop
xchg
pop
ds
int
mov
jmp
bound
mov
add
leave
mov
stc
mov
scas
mov
pop
pop
shr
fcmovne
dec
xchg
arpl
xor
out
mov
out
insb
imul
inc
mov
mov
bound
sub
insl
loop
repnz
xor
push
add
lcall
dec
sub
cltd
out
mov
call
es
cmp
and
jp
lock
inc
test
jecxz
repz
xchg
pop
lock
push
and
xor
mov
shl
xor
sub
daa
inc
or
popa
sub
jge
pop
adc
mov
jo
out
adc
jb
xor
dec
sti
push
xchg
sub
pushf
or
xor
pop
loopne
dec
pop
sbb
jp
add
stos
shll
negl
cmp
pop
stc
xchg
dec
xchg
mov
rcrl
jae
add
sbb
ret
pop
daa
int
push
inc
pop
loopne
xchg
mov
mov
sbb
mov
dec
xchg
sub
lea
fidivrl
repnz
mov
xchg
or
push
repz
fists
ficoml
push
data16
mov
jecxz
icebp
sbb
xor
scas
es
or
mov
in
mov
repz
or
lcall
mov
adc
cli
or
pop
sub
cmp
xchg
and
pusha
daa
shlb
leave
mov
mov
int
mov
fwait
daa
lcall
ret
mov
arpl
into
movsl
aas
dec
push
push
imul
les
mov
mov
rclb
sarl
out
jae
mov
jno
out
xchg
es
shll
xlat
pop
inc
fdivrp
xchg
popa
jns
inc
push
and
dec
mov
fstpl
push
mov
xor
dec
cli
xchg
xor
xor
lods
lock
push
xchg
xchg
lret
movsb
adc
loopne
and
hlt
and
xchg
pop
cmp
dec
xchg
daa
sub
jg
push
sub
xchg
xchg
rolb
pushf
jecxz
out
xchg
stos
jp
push
es
nop
sub
and
mov
inc
call
out
popa
pop
sbb
daa
sub
movsb
insl
loop
out
lret
dec
popa
repz
leave
cmp
cmp
or
popa
mov
mov
outsb
mov
or
xor
insl
jmp
sbb
mov
add
adc
mov
ds
dec
sub
cltd
out
aad
push
in
push
call
dec
cli
movsb
fstps
shr
push
mov
dec
aaa
pop
jg
out
cmpsl
adc
in
push
pop
push
cmc
dec
jns
fcom
push
adc
in
out
lcall
aas
mov
sbb
mov
fs
fcmovnb
lcall
dec
lret
out
mov
pushf
jecxz
repz
xchg
stos
lock
jl
inc
fwait
xor
aad
mov
fstl
jns
dec
cwtl
cmovo
insl
popa
sub
mov
ret
push
fdivrs
jo
out
adc
jb
xor
dec
js
or
xor
sbb
mov
mov
imul
movsl
cmp
xchg
add
enter
xchg
daa
xchg
fisttpll
mov
test
jb
push
mov
jnp
loope
and
sbb
and
add
shufps
clc
cltd
out
pop
and
xchg
loopne
in
mov
aas
test
popa
jns
jne
ret
mov
mov
mov
jns
popf
es
fwait
xchg
imul
std
out
lock
cmpsl
inc
pop
imulb
je
jb
sahf
lods
jns
mov
loopne
rcrb
fwait
movsb
into
push
inc
stos
jo
sbb
mov
pop
insl
test
pop
xlat
ja
loopne
stc
xor
jp
sti
in
push
aam
mov
inc
std
inc
test
rcll
xor
stc
mov
das
or
pop
inc
jo
xor
add
or
xor
test
imul
pop
xor
pop
push
cli
xchg
xor
ret
pop
outsl
mov
ljmp
fwait
daa
loopne
rcrb
addr16
andl
popf
xor
pop
nop
push
lods
mov
int
imul
mov
adc
sub
int3
lods
inc
pop
adc
shlb
out
popf
xor
stc
mov
das
or
fildll
or
dec
int
insl
shlb
mov
fcom
dec
xchg
in
ljmp
pop
and
xchg
xor
outsb
mov
mov
loop
int
dec
sub
lods
fnsave
xchg
sti
push
in
rorb
ret
popf
or
xchg
in
ss
es
fdiv
xchg
push
repz
lret
unpckhps
psubb
cmp
or
aas
dec
push
cli
mov
pop
cmp
or
loope
out
cmpsl
add
scas
sub
and
insb
lock
pop
mov
ret
shl
push
xlat
sub
sub
js
shufps
clc
cltd
inc
cmc
and
int
mov
out
dec
gs
sub
mov
insl
out
je
xor
push
iret
sbb
call
push
test
xchg
add
js
out
mov
pop
rorb
and
xchg
daa
sub
out
repnz
dec
lret
ficoml
add
fwait
xor
inc
js
inc
jl
ret
stc
xchg
out
mov
pop
cmp
ljmp
or
sub
lea
jno
stc
mov
cs
xchg
repz
repz
dec
mov
cs
mov
cmp
jno
lods
imul
rcll
adcl
adc
sub
out
mov
push
xchg
fstps
sahf
lcall
cltd
ja
push
add
scas
sub
and
insb
lock
pop
stc
test
stos
pop
mov
cmp
cmpsl
inc
pop
stc
scas
mov
lock
test
imul
jo
cmp
gs
or
jp
inc
test
sub
js
lea
je
cmp
pop
xor
fadds
insb
mov
bound
lock
pop
int
or
cmp
sub
push
ds
test
dec
mov
aas
mov
mov
mov
push
jnp
es
push
ds
nop
sahf
jbe
dec
int
xchg
or
outsb
adc
and
call
sub
gs
aam
cmp
sbb
sahf
sarb
cmp
jl
daa
sub
ja
loopne
movsl
inc
lret
sahf
jp
add
es
call
push
nop
ljmp
xlat
pop
inc
mov
jnp
sub
scas
in
add
jne
xchg
test
sub
adc
test
gs
dec
ficomps
sahf
push
cli
and
xchg
mov
out
lcall
test
scas
mov
jae
lcall
pop
and
stc
mov
addl
or
cmp
ror
mov
mov
xchg
xchg
mov
cmp
gs
insb
inc
into
addr16
sbb
loop
push
fs
push
jns
lret
mov
fsin
clc
rcrb
dec
andl
sarl
js
subl
aad
pop
out
cmp
inc
push
data16
shll
scas
jp
movsb
and
test
sub
out
hlt
ja
push
pop
jmp
xchg
xor
int3
cmp
or
pop
lods
lock
and
out
out
dec
lret
test
shlb
xor
lcall
popf
cmp
jl
jmp
sbb
lcall
cmp
sarl
cld
sub
sahf
mov
fwait
daa
jecxz
mov
test
sub
inc
in
aad
repz
mov
roll
out
icebp
test
jnp
inc
in
leave
add
push
xchg
popa
pop
repz
push
xchg
xchg
xchg
fstp
xchg
mov
push
cmp
mov
leave
out
xrelease
xchg
popf
jp
jecxz
out
xchg
or
dec
dec
xchg
sti
and
jae
xchg
popa
shlb
adc
xor
sbb
dec
dec
xchg
and
aam
movsl
fidivl
mov
fstl
stos
lahf
fisttps
xor
xor
pop
sahf
mov
shrb
adc
insl
in
out
fwait
adc
fdivrs
iret
xor
xchg
fs
les
xchg
adc
cmpl
nop
xor
mov
xchg
sbb
imul
and
xor
