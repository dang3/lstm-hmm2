in
divl
cmp
sub
test
enter
ret
pop
push
nop
jmp
es
jge
xor
pop
in
rolb
or
in
repz
fildl
mov
mov
test
in
mov
inc
xor
ljmp
int3
stos
push
repnz
mov
mov
push
iret
xchg
fwait
ss
test
gs
lcall
cmp
cltd
jne
das
test
addl
and
dec
fwait
push
add
fdivl
or
jae
out
add
pop
das
mov
sbb
cmp
and
lcall
aaa
popa
inc
jg
jo
mov
jae
and
into
iret
out
cmp
cli
mov
jg
out
push
pusha
es
push
stc
or
push
sub
xchg
pop
enter
ljmp
out
in
mov
rcll
ja
and
imul
jp
fwait
popf
std
test
pop
lahf
and
lret
aad
mov
loopne
mov
jnp
gs
xchg
leave
xchg
nop
add
xor
pop
pushf
ret
push
repnz
adc
jae
dec
incb
or
cmc
add
cmpb
add
lret
addr16
mov
xor
sub
enter
sbb
sbb
pop
mov
dec
mov
add
out
push
gs
sbb
xor
icebp
cmpsb
in
loopne
lahf
sub
fistpll
cmpsb
cmpsl
xor
outsb
iret
daa
lds
and
or
xchg
xor
sahf
mov
dec
je
out
xor
sbb
push
fstps
pop
xor
clc
test
mov
sahf
lahf
test
leave
lret
pop
orb
scas
and
rcll
cwtl
js
insb
and
stc
mov
mov
xchg
cltd
push
jbe
xchg
jl
jl
notb
cmpsb
mov
aas
sub
pop
jb
je
stos
not
lods
lcall
test
test
pop
movsb
cmc
adc
or
rolb
or
pop
push
xchg
mov
pop
js
adc
jne
pop
mov
adc
jae
mov
mov
mov
or
sub
or
xchg
pop
or
jge
shl
andl
sub
movsb
popa
or
imul
sub
repz
mov
push
mov
adc
sbb
test
or
mov
mov
nop
sbb
out
xchg
inc
mov
cmpsl
jno
movsl
or
add
cld
outsl
dec
xor
sub
dec
push
pop
out
ret
int3
push
or
pushf
pop
or
nop
jne
inc
sbb
lret
insl
cwtl
imul
mov
dec
sub
sub
ja
cmp
inc
xlat
or
mov
int3
sbb
mov
aaa
imul
test
loopne
mov
imul
imul
push
mov
arpl
dec
ror
sbb
mov
loop
pop
mov
pop
movsl
mov
sbb
mov
xchg
mov
cmpsl
pop
stc
add
orb
sbb
mov
mov
inc
push
pop
pop
stc
jmp
mov
pop
bound
jo
add
leave
and
lods
rclb
adc
mov
push
xchg
sahf
cwtl
jne
loopne
fstpt
pop
imul
pushf
dec
mov
xor
in
jns
pushf
jle
cmc
or
popa
mov
fwait
push
xor
bound
int3
test
sbb
sub
xchg
inc
shlb
mov
adcb
stos
jo
clc
lret
ss
into
mov
outsb
jne
repnz
jmp
xchg
cmp
and
push
cmp
sub
xchg
in
inc
fldenv
rcrb
push
inc
or
cmp
repnz
xlat
sub
lock
push
dec
test
fsubl
sub
jnp
push
lods
shl
adc
lret
leave
lea
sbb
adc
aad
xor
sub
dec
jecxz
adc
test
outsl
popa
jg
lea
cmp
jg
add
mov
jb
push
mov
jmp
mov
cwtl
in
mov
shrb
xlat
xlat
sub
sete
fidivl
xor
mov
mov
in
mov
out
std
pop
xchg
mov
or
bound
mov
mov
and
and
stos
repnz
jae
cmp
mov
pop
xchg
cltd
mov
cmp
int3
push
mov
stos
test
jne
in
sub
lret
cwtl
or
mov
adc
pop
es
mov
scas
mov
subb
js
jp
fucomp
dec
cmp
or
and
pop
sub
or
cs
push
jmp
push
dec
push
or
mov
ds
and
jle
cmp
pop
jmp
jmp
cld
cmp
pop
mov
insb
popf
outsb
push
mov
repnz
nop
sub
lea
test
lcall
shll
ret
ja
fcomi
addr16
xchg
sub
cmp
in
cld
pop
jecxz
cmpb
frndint
and
mov
dec
inc
loop
and
push
add
sbb
sbb
lods
aas
or
dec
stos
push
mul
jmp
popa
or
cmp
test
lret
mov
dec
or
push
jge
mov
scas
jbe
jg
loope
divb
mov
in
or
fmulp
roll
or
sbb
jg
cltd
or
shl
mov
push
sbb
or
movups
decl
mov
sub
gs
sahf
xchg
inc
or
dec
sbb
or
push
out
addr16
movsb
movsb
jle
leave
nop
mov
adc
jno
mov
xchg
sbb
ret
insb
bnd
xchg
xor
in
fidivl
or
or
pop
rcr
outsl
nop
cs
or
repnz
pop
pushf
pop
jne
push
insl
das
rcr
aas
add
and
xchg
gs
mov
add
sbb
adc
mov
test
lahf
jg
fsubp
adc
adc
sub
out
add
inc
mov
fs
aam
xor
hlt
xchg
mov
and
in
lods
sti
movsb
xchg
fcoml
jbe
and
mov
xor
push
imul
imul
xor
sub
inc
cmc
jb
push
mov
or
sahf
sbb
mov
adc
mov
sub
fstl
jo
into
push
mov
add
cmp
push
mov
xor
or
mov
push
shll
rcll
cltd
push
out
addr16
dec
mov
adc
sub
ret
cli
push
adc
inc
popa
out
jmp
scas
ret
or
add
enter
ljmp
out
push
orb
xor
out
mov
leave
pop
mov
push
push
push
mov
push
inc
shlb
push
repz
jnp
andl
rcrl
pusha
lret
loop
vzeroall
pop
sbb
xor
fwait
and
adc
in
lcall
mov
lea
mov
das
adc
dec
and
mov
pop
add
mov
sahf
jbe
in
outsb
jle
jns
and
add
pop
movsl
push
add
jb
in
stos
fsubl
and
lcall
dec
push
mov
sbb
clc
cli
jmp
cwtl
or
dec
flds
or
jno
stos
not
xor
mov
and
or
popa
pop
jb
push
cmpsl
rclb
mov
lods
mov
aas
inc
stos
mov
xor
mov
dec
or
ret
dec
jmp
add
test
imul
xchg
pop
ret
sub
sub
je
push
aas
mov
jnp
xchg
clc
dec
jo
call
fmul
and
fmuls
fcomps
fnstsw
loopne
push
popa
in
scas
incb
push
jb
sub
push
andb
pop
lret
mov
sub
lret
add
lret
mov
push
test
nop
fisttpl
jne
jno
lds
sub
push
test
lock
cltd
xchg
or
inc
out
mov
stos
lret
rorb
adc
push
xor
push
mov
fmull
imul
out
adc
add
jb
jecxz
dec
mov
ja
and
or
stos
and
test
cmpsb
rcrl
ljmp
inc
dec
cwtd
ret
rcrl
mov
jns
push
cmp
push
inc
xor
daa
loope
int3
cmpxchg
mov
push
and
cmp
mov
cli
adc
inc
or
pusha
adc
sbb
fsts
or
cld
add
sbb
inc
sub
lahf
mov
scas
cmp
aaa
shrb
in
lahf
ss
dec
push
sarl
jno
popa
in
pop
adc
xchg
fdivl
dec
aas
and
push
xor
iret
pop
fidivs
repz
call
pop
fdivs
pop
add
xchg
sub
pop
mov
and
push
jge
ret
and
ffreep
add
mov
ret
inc
aas
push
add
pop
and
icebp
shll
out
mov
sub
jo
cmp
pusha
aad
movsl
or
mov
out
mov
cmp
inc
pusha
xor
stos
and
add
xor
jb
add
lcall
mov
sub
repnz
mov
out
pop
dec
pop
arpl
cmc
push
push
mov
repnz
mov
cmc
xchg
aad
sbb
and
test
imul
loope
subl
lock
push
jbe
adc
lea
hlt
jno
dec
adc
in
push
add
pop
fs
mov
jmp
push
sbb
pop
aam
or
pop
clc
lods
sub
inc
xor
pop
outsb
sub
ret
cmc
stos
xchg
hlt
and
adc
pop
mov
xchg
mov
push
in
dec
setne
rclb
adcb
and
rcrb
outsl
jp
dec
inc
cmp
sub
adc
inc
push
sub
adc
dec
outsl
sub
in
daa
mov
lods
rolb
and
add
leave
push
xchg
jae
lods
pop
add
mov
js
out
push
dec
and
test
loopne
cmp
cmp
movsl
push
jae
inc
lret
icebp
sub
inc
sub
addl
and
aas
fs
aas
sarl
icebp
mov
stos
test
mov
and
int
mov
mov
jae
orb
jp
fldenv
xlat
call
mov
scas
add
jo
mov
cld
lock
cmpsl
xchg
inc
sub
pop
arpl
test
inc
stos
and
dec
stos
and
push
in
pusha
repz
aam
inc
inc
mov
push
jecxz
adc
cmp
xchg
sahf
aam
into
ss
mov
scas
adc
push
xor
sbb
in
mov
mov
xor
scas
sub
push
stos
xor
pop
les
iret
push
xchg
jmp
pop
push
fstps
mov
mov
pop
scas
dec
push
lods
out
jno
jbe
jmp
ss
sbb
cmp
jmp
push
dec
repz
xchg
out
addr16
das
addr16
mov
out
xor
ret
adc
mov
fildl
mov
sub
push
xchg
in
pop
push
pop
mov
repz
out
mov
xor
jge
icebp
pop
inc
mov
gs
mov
mov
insb
stos
inc
cmp
in
fdivrp
insb
mov
push
lahf
mov
jecxz
int
test
xchg
mov
jae
inc
rcrl
cwtl
roll
dec
sahf
cwtl
int3
cmp
inc
cmc
add
les
mov
mov
aad
mov
jb
jmp
lods
in
movsl
inc
imul
out
inc
iret
sub
shl
shr
cltd
jg
rol
adc
pop
mov
push
mov
xchg
dec
jae
inc
cld
paddusb
sub
or
xor
mov
aad
imul
jmp
clc
inc
dec
cmp
sbb
mov
dec
sub
fwait
mov
or
inc
les
popf
mov
dec
mov
sbb
mov
fisubrs
fs
add
adc
js
loopne
sub
popa
mov
repnz
pop
rorb
mov
lods
add
rcr
sarl
out
push
shlb
mov
loope
mov
adc
stos
jns
clc
fldl
and
push
xchg
xor
mov
sbb
mov
pop
insl
shrb
push
inc
les
pop
mov
ret
inc
cs
pusha
lret
mov
cmp
sarl
pop
jb
sti
in
lea
clc
jecxz
xor
fwait
sub
inc
xchg
xor
xchg
fwait
lret
ret
lods
in
add
dec
sbb
ss
cmpsb
jb
inc
adc
dec
lcall
dec
aad
jns
sbb
cmp
enter
decl
cli
and
xlat
cmpl
adc
data16
mov
lahf
rclb
mov
inc
bound
js
int3
fisubs
jnp
dec
dec
dec
mov
mov
mov
lret
sub
or
lahf
jmp
int
iret
pop
movsb
testb
vpminsw
push
xlat
fstpl
ja
xor
rcll
loope
leave
jp
pop
and
repnz
pop
pusha
inc
mov
mov
and
aas
mov
pusha
enter
mov
add
sbb
insb
push
dec
dec
mov
push
adc
mov
and
shrl
arpl
imul
loop
mov
out
cmpsb
adc
push
sub
sti
nop
cltd
ds
jns
pusha
popa
out
push
cmpsl
ficomps
mov
std
std
sub
ss
sarl
adc
out
mov
cmpsl
fwait
in
sub
pop
ds
xchg
cs
jb
daa
mov
mov
int3
jg
add
cmc
dec
jb
mov
lahf
cmc
push
andb
xchg
pop
sbb
std
pusha
scas
icebp
fisttpll
cmpb
mov
sti
sbb
push
push
mov
stos
add
loop
jge
arpl
pusha
in
mov
int3
add
fwait
inc
dec
mov
pop
test
inc
addr16
fsubrs
ss
inc
dec
xor
or
inc
pop
aam
fadds
insb
clc
push
fwait
aaa
negl
mov
les
push
jae
out
add
push
dec
push
mov
test
mov
outsl
mov
jg
faddl
imul
dec
push
inc
insb
js
stos
or
and
nop
jmp
addr16
rorl
imul
jle
sahf
je
lods
adc
cli
dec
push
adc
adc
sub
jnp
sub
out
insl
sbb
or
jb
cmp
fs
sbb
sbb
cld
aas
popa
inc
out
outsl
ja
cmp
aam
pop
hlt
out
xchg
pop
inc
setno
xchg
ds
inc
inc
push
pop
std
jmp
and
jge
jbe
add
jge
mov
dec
push
and
adc
or
shll
xchg
out
push
gs
sbb
stc
lods
lds
jp
lock
cmp
mov
push
mov
addr16
ret
test
pop
mov
dec
std
in
xchg
fcom
arpl
imul
out
mov
mov
dec
outsl
xor
rcrl
xchg
call
dec
cli
test
fistpl
in
fidivs
xor
pop
push
mov
not
cmp
or
repnz
ss
nop
aaa
sub
ja
ror
sub
loope
leave
ret
push
mov
cmp
clc
cmp
call
fwait
jmp
xchg
popf
pop
sti
jp
dec
rcr
mov
fnsave
pop
insb
mov
into
jns
out
das
push
lds
mov
out
dec
addb
cmc
push
test
aas
lcall
pop
pop
shl
std
cmp
pop
xlat
add
add
arpl
ss
sbb
ret
popa
cltd
cld
jmp
and
jl
push
pushf
loope
imul
clc
ror
xor
les
scas
dec
add
fninit
aam
idivl
nop
jne
lcall
ja
fs
sbb
lret
loop
fimuls
sti
jmp
push
push
jae
adc
sbb
pop
and
ljmp
mov
fisubs
ss
shll
aam
cmpb
stos
xchg
stos
pusha
and
xor
cmp
jbe
add
or
or
stc
mov
xchg
jne
sub
fwait
mov
xor
mov
sar
stos
mov
popa
scas
mov
push
andb
fldl
mov
sti
fisttps
test
lods
and
mov
jo
jg
loopne
shlb
fsubrp
int
xchg
lods
lret
mov
inc
xor
ss
mov
loope
adcl
lret
rcl
out
xchg
mov
outsl
in
fucomip
push
repnz
fimuls
fidivrs
mov
push
sub
and
sbb
add
and
dec
mov
jge
rcl
shll
push
xchg
shlb
call
daa
push
lcall
adc
adc
fisttps
lret
cmpsb
adc
sub
fisubrl
adc
lock
addb
adc
js
iret
sahf
fsubl
xor
push
sub
xchg
ret
pusha
lcall
or
add
add
out
mov
into
ficompl
pushf
sbb
or
adc
das
xor
or
adc
xchg
xchg
pop
cmc
dec
aam
xchg
sbb
dec
mov
sub
add
jp
out
popf
inc
mov
lods
stos
lahf
jne
in
add
mov
aam
adc
push
lock
movl
pop
jnp
lret
fucomp
insl
cli
rolb
std
push
cmp
jo
test
and
mov
test
stos
mov
lock
sub
adc
fildl
inc
sub
sub
lock
jecxz
mov
jne
push
lods
les
popf
jnp
repz
jmp
dec
jno
sti
add
cs
jnp
insb
pop
movsl
in
push
xorl
rclb
mov
adc
jb
sbb
or
in
pop
andnps
ror
mov
push
inc
mov
cmp
xor
mov
mov
cmp
mov
test
sbb
dec
pop
nop
mov
cwtl
fimull
sub
aas
cmp
cltd
pop
dec
vmread
gs
sbb
and
xchg
xlat
jno
test
lcall
mov
movsb
sbb
cs
xchg
fcmovbe
mov
bound
jl
insl
inc
push
sbb
in
lods
pusha
and
jle
jg
dec
sub
movsb
std
rclb
nop
call
jo
and
test
in
and
insl
leave
fs
xchg
lods
push
jg
add
push
into
xor
scas
imul
aas
push
mov
or
xchg
mov
loop
pop
add
sbb
in
pop
fildll
pop
lea
dec
jmp
fsubrl
mov
xor
xchg
and
fldl
mov
fstpt
fcmovnu
negl
xchg
int3
pop
fistpl
jl
mov
cmpl
mov
lret
popf
lret
cmp
jne
and
push
pop
dec
scas
out
and
rorb
orb
popa
jns
iret
xchg
lahf
es
and
stos
aas
test
xchg
into
mov
mov
jbe
in
pushw
ds
and
ja
lahf
or
fld
mov
cwtl
nop
jno
adc
inc
into
icebp
jno
mov
lret
push
shl
imulb
addb
ljmp
dec
adc
inc
jmp
hlt
pushf
pop
mov
jp
and
scas
rcrl
add
test
outsb
or
clc
fsubrl
adc
xchg
push
imul
adc
fs
jp
push
adc
jo
ret
pop
adc
fistpl
cmp
push
out
jmp
sbb
adc
add
and
pusha
mov
js
mov
lea
xchg
push
jne
pop
adc
adc
imul
sub
push
add
pop
push
popf
pop
mov
push
push
and
cmp
push
dec
clc
mov
sub
aam
mov
pop
and
add
dec
popf
repnz
cmp
roll
xor
inc
pop
insl
cmp
xor
push
inc
mov
in
pop
in
stc
cmp
nop
push
nop
xor
mov
sahf
mov
sbb
in
xor
push
das
push
jns
xorb
xlat
addb
fwait
mov
mov
push
bound
adcb
mov
and
push
add
pop
daa
dec
inc
jno
lret
pop
imul
add
xor
xlat
movsb
pop
arpl
cmc
sbb
xchg
outsb
lds
mov
andb
stos
inc
push
cmp
daa
cmp
inc
out
sub
pop
lods
fwait
bound
xlat
or
pop
lcall
xchg
bound
lods
insl
int3
subl
mov
xchg
mov
into
ja
jnp
ret
addr16
jae
cmp
mov
dec
out
cmp
cmpsl
loope
aas
inc
sub
lods
xor
test
mov
dec
hlt
popf
push
pop
jg
idiv
push
push
dec
clc
dec
inc
movsb
dec
sbb
push
jb
int3
mov
push
or
jo
mov
aad
adc
lods
into
pop
lcall
sti
dec
loopne
pop
mov
pop
insb
lret
xor
sbb
xor
lea
in
icebp
sbb
mov
gs
lods
pop
fdivrs
scas
cmpsl
pop
xchg
bound
das
fsubrs
add
aad
pop
or
test
fyl2xp1
mov
and
inc
sub
fcoms
sbb
push
mov
or
in
lock
fimull
jl
sbb
mov
adc
rorl
lods
push
and
js
sbbl
jnp
lret
mov
iret
imul
dec
cmp
mov
add
icebp
inc
push
or
shlb
cmp
mov
push
imul
sbb
pop
sbb
movsb
notb
mov
pop
inc
out
cli
icebp
call
jo
nop
idiv
aad
out
push
shr
and
mov
lret
aam
pop
mov
vmwrite
int
rcr
sarl
fmull
push
mov
fmull
sbb
jnp
addr16
jo
nop
loopne
scas
sbb
cmp
cmp
sub
or
orb
mov
jg
clc
cmp
jo
sarl
inc
cmpb
int3
leave
popl
in
addr16
sbb
cmp
scas
push
or
shlb
test
inc
or
lret
lods
out
mov
xchg
pop
pop
lret
or
mov
add
out
inc
push
daa
sub
push
into
loop
pop
push
mov
sti
mov
cld
stos
jmp
nop
or
into
aam
push
fwait
sbb
ret
pop
xor
mov
and
pop
sti
sub
xor
adc
push
cmp
fstps
mov
je
adc
sahf
mov
push
stc
cli
pop
xlat
cmp
pop
xchg
cmp
xrelease
lods
fidivrs
cs
mov
lock
inc
mov
ds
xchg
xor
test
cmp
popf
inc
bound
push
cmp
in
bound
pop
arpl
aaa
mov
xchg
sahf
fcoms
call
js
inc
out
and
inc
cli
sbb
add
adcb
jmp
movsb
lods
or
mov
push
jno
cld
jmp
imul
and
jp
mov
sub
and
in
xchg
adc
push
xchg
or
adcb
inc
popf
add
xorl
xor
lahf
leave
fnsave
lahf
lret
test
jnp
das
int3
xchg
and
pop
add
add
cmc
in
xchg
lock
mov
mov
mov
xchg
sbb
xchg
fmul
adc
cs
add
mov
add
and
jne
and
sub
add
aam
sub
sbbb
in
mov
clc
mov
xchg
pop
or
xchg
or
scas
rclb
fildll
inc
sub
insl
pop
xor
shlb
cmp
mov
or
and
cld
sub
test
int
sub
xor
insl
mov
jmp
inc
push
sbb
jbe
pinsrw
fnstenv
jbe
adc
imul
clc
nop
cmp
mov
jbe
cltd
cmpl
inc
push
add
pushf
mov
dec
push
sub
fstps
lahf
popf
inc
sarb
xchg
mov
pop
in
cmpsb
dec
loope
dec
imul
cmp
mov
pop
dec
or
ljmp
jae
adc
int3
push
loope
mov
add
imull
or
inc
mov
and
jecxz
cltd
lcall
scas
mov
sbb
ds
sahf
daa
cmp
xchg
mov
into
mov
in
and
iret
or
xor
pop
pop
jge
sbb
stos
fisubrs
jmp
or
and
lds
subb
cmp
sub
std
sub
shlb
aaa
pop
add
mov
push
aad
jmp
sbb
test
popf
adc
lea
sub
ret
inc
xor
imul
cmp
mov
jno
dec
sbb
movsb
xchg
repnz
mov
and
pushf
fcmovnb
stos
jp
xchg
pop
inc
push
xchg
mov
pusha
loope
xorl
scas
mov
jo
loope
xchg
mov
clc
ret
aaa
fwait
adcl
cmpsl
jae
mov
leave
stos
mov
and
lret
or
pushf
fbld
fdivl
out
js
and
sbb
push
test
idivl
mov
sahf
clc
loopne
fcoml
xchg
jle
xchg
pop
xor
test
inc
mov
sub
or
sub
enter
and
filds
add
int3
aas
in
mov
xorl
into
and
push
xchg
or
adc
rcr
jle
inc
or
iret
faddl
gs
ljmp
fbld
lods
ret
lock
call
shlb
mov
sub
mov
fisubrs
xchg
and
int3
push
xchg
push
dec
shlb
push
call
jne
mov
orb
bound
bound
iret
pop
loopne
outsl
mov
movsl
push
scas
cmp
fbstp
adcl
lret
adc
test
jno
jp
aas
push
aam
push
push
call
hlt
push
mov
xchg
pop
leave
popa
or
mov
in
or
mov
push
cli
adc
jle
adc
std
dec
adc
inc
hlt
js
imul
sub
incb
mov
insl
sub
xchg
or
sbb
fdivl
mov
xor
and
cld
test
push
and
xor
nop
cmpsl
loope
testl
push
repz
sub
lock
adc
fisttpl
insb
jae
insb
push
out
lahf
pop
dec
inc
mov
pop
xchg
gs
mov
sar
jbe
push
repz
xor
add
in
mov
fisubrl
jmp
and
jp
mov
push
je
ret
mov
arpl
xchg
push
repz
dec
call
data16
jne
idiv
into
jmp
lods
cli
ss
xor
daa
fsubrs
sub
mov
mov
or
mov
repnz
mov
inc
cs
out
aaa
push
bound
inc
jmp
or
add
sbb
xor
cmpsb
or
mulb
xor
fwait
xor
hlt
mov
xor
mov
stos
js
mov
pop
sub
inc
rorb
mov
dec
adc
ret
inc
dec
addr16
lock
add
lahf
sbb
sbb
dec
pop
mov
sar
jmp
jae
mov
aas
mov
cs
loop
lds
sbbb
lcall
pop
pop
cmp
and
cmp
outsb
xchg
nop
add
or
push
aam
push
repnz
xchg
push
xchg
jae
repnz
insb
dec
mov
int
sbb
add
mov
out
out
in
rclb
cmp
mov
shll
mov
loopne
mov
and
mov
rclb
dec
xchg
adc
loopne
std
call
out
jmp
push
dec
jae
inc
dec
ret
pop
stc
jecxz
mov
iret
xor
jae
pop
push
icebp
movsl
and
jecxz
mov
fisttpl
xchg
sbb
iret
inc
pop
psraw
shlb
movsb
sbb
adc
pop
aas
mov
aad
js
fbld
cmp
xor
cli
push
repz
fstps
movsb
pop
mov
cmpsl
jmp
cmc
lods
mov
hlt
shlb
popa
or
aas
mov
pop
imul
test
dec
dec
mov
sub
outsl
repnz
mov
ja
jmp
mov
dec
mov
loope
dec
gs
xchg
loop
mov
pop
and
fisubl
mov
cmc
xchg
jle
cmp
fbstp
scas
and
inc
lds
test
mov
scas
dec
push
daa
std
lcall
nop
push
jle
mov
dec
or
sub
cltd
stos
loopne
or
in
or
pop
sbb
xchg
inc
pop
pop
or
push
jns
jns
lcall
leave
mov
test
repnz
dec
and
frstor
out
stc
mov
jbe
inc
inc
std
sub
cmp
rclb
rclb
pop
loope
out
pop
sbb
lods
aaa
dec
xchg
mov
fistpl
add
add
roll
ja
mov
sbb
xchg
jp
and
push
xchg
mov
pop
mov
leave
adc
aam
sub
jns
push
popa
cmp
mov
imul
fsubrs
pop
or
pop
mov
add
mov
push
lods
mov
and
add
imul
cmpsl
pusha
les
dec
mov
jo
cmp
in
xchg
mov
test
add
sub
lds
xchg
cmp
mov
adc
mov
mov
sub
dec
push
xor
push
and
jo
in
inc
in
mov
sub
imul
in
pop
sbb
cli
insb
cmpsb
adc
xchg
jbe
and
sti
push
fildll
divb
jb
divl
mov
adc
je
dec
push
stos
jge
je
bound
inc
xor
pop
pop
cmc
cmc
sahf
je
cmp
push
mov
jno
and
sbb
adc
or
mov
pop
dec
je
hlt
loopne
mov
out
or
or
lret
movsb
xorb
cmc
inc
cwtl
jmp
cwtl
mov
shrb
cmc
jnp
sbb
movsb
and
movsb
out
dec
cmpsl
dec
lods
jmp
xchg
ds
int
mov
jl
cmp
jp
lret
xor
jle
and
xchg
push
sti
push
aad
mov
pop
iret
push
test
sub
jmp
mov
repnz
inc
jae
pusha
lcall
cwtl
shl
xchg
jnp
addb
sbb
add
stos
jbe
sbb
push
inc
pusha
dec
add
pop
adc
scas
jg
mov
jg
mov
dec
fnstsw
in
mov
pushf
xchg
dec
mov
cmp
xchg
jae
pop
sbb
lcall
int3
fwait
adc
sbb
lds
stos
orb
sub
and
lea
and
inc
xchg
lock
adc
jg
fdivl
sbb
or
and
jle
loop
xchg
pop
inc
mov
and
jbe
std
jecxz
inc
iret
sbb
ja
fstpl
xor
cmp
pop
inc
ja
iret
fwait
sub
aaa
xor
daa
or
mov
or
call
sub
xchg
push
cmpsl
repz
and
adc
push
cmpsb
adc
js
inc
jne
mov
cmp
add
fwait
sub
add
adcb
inc
push
cli
sahf
dec
fadds
stc
jmp
xchg
push
fdivrl
mov
mulb
push
xchg
ficomps
cmp
jg
fadds
mov
outsb
mov
ss
in
bound
add
push
jl
xchg
dec
sbb
mov
sbb
push
push
jg
inc
mov
mov
add
cmpsb
adc
lods
call
add
inc
jg
and
and
cwtl
in
int
mov
pop
sbb
sub
shrb
sbb
pop
das
aad
inc
ret
inc
xlat
out
loop
int3
cmc
and
addb
pop
push
add
out
mov
jl
adc
pop
pop
pop
ret
xor
push
or
sahf
jp
mov
jo
lcall
int3
cld
test
cld
std
ror
adc
mov
or
adcb
and
push
pushfw
je
and
inc
aaa
rorb
or
fimuls
dec
xor
call
lods
aas
mov
stos
dec
lret
mov
cmp
and
pusha
rorb
int3
mov
cmpsl
aaa
sbb
or
test
lret
fistl
jg
adc
inc
mov
sti
into
inc
dec
mov
idivl
fistps
das
out
pushf
arpl
xor
add
insl
mulb
mov
test
lock
add
pop
in
jp
stos
lcall
push
shll
mov
out
fwait
popf
hlt
aam
in
xchg
dec
into
leave
and
orl
cmpsb
in
adcl
ret
mov
push
dec
or
popf
out
sub
mov
out
ret
hlt
mov
push
enter
mov
dec
push
in
repz
loopne
inc
jb
popf
dec
loopne
lret
cmpsl
lods
or
arpl
iret
jmp
cmp
lcall
jbe
aaa
inc
aaa
lods
std
outsb
sub
push
jmp
sbb
xlat
test
sbb
mov
movsl
ret
mov
mov
or
jp
cmp
fwait
imul
dec
adc
out
xor
stc
and
pop
icebp
repz
jl
and
adc
js
cmp
pusha
addr16
test
push
mov
dec
lret
pop
adc
mov
xchg
jno
call
xor
push
xchg
xor
mov
mov
in
mulb
loop
icebp
movsb
scas
push
jnp
xorb
inc
jns
loope
jp
mov
cmpsb
in
sbb
lods
or
dec
jl
movsl
pop
or
inc
jecxz
mov
push
pop
aas
mov
inc
push
sub
popf
lcall
mov
andb
data16
rcll
mov
push
lret
dec
fistpl
jbe
imul
rcl
or
mov
sbb
pop
xor
and
mov
in
loope
das
iret
mov
dec
leave
xor
subl
lcall
lods
data16
imul
loop
dec
sub
mov
pop
call
sti
add
jnp
add
dec
push
pusha
test
xor
adc
jge
adc
adcb
push
pop
and
dec
or
pop
je
cli
adc
inc
xlat
xchg
and
rcl
mov
fcompl
push
or
pushf
xor
jg
je
test
push
mov
jb
rcrl
outsb
sti
sub
push
scas
int
and
imul
ja
cmp
xlat
cmc
in
dec
js
dec
ja
lds
lcall
repnz
cs
fidivrs
and
sub
jne
mov
push
lods
je
xor
nop
mov
test
xchg
cmp
shlb
outsb
sbb
and
in
movsl
inc
or
rcr
dec
mov
in
fs
insl
test
mov
ss
aad
mov
lods
int
add
xor
shlb
sub
push
movsb
in
pop
fisubrs
lcall
xchg
stos
scas
mov
int3
pop
js
mov
jne
or
xlat
popa
mov
mov
enter
xor
icebp
and
pop
push
adc
mov
leave
call
lea
cmp
mov
mov
cmp
pop
mov
and
xchg
sbb
sarb
cmp
inc
fwait
jecxz
mov
nop
fadd
stos
ja
and
push
xchg
or
imulb
add
pop
sub
or
test
mov
push
clc
pushf
jns
arpl
out
aas
mov
in
push
in
pop
mov
or
inc
inc
xorps
testl
sub
dec
push
cmp
or
push
mov
ret
pushf
call
adc
movsb
dec
adc
fwait
loop
push
mov
stc
jecxz
fs
xor
fdivrs
lds
jge
mov
pop
fwait
mov
outsb
xlat
pop
sub
icebp
arpl
mov
fisttps
movsl
xchg
sub
or
rclb
arpl
mov
sbb
and
mov
pop
pop
mov
xchg
push
ficomps
dec
lds
repz
addb
jno
cmp
mov
sbb
sub
cmp
and
es
jbe
xor
fdivrs
cmpsb
insb
pop
jp
ss
in
mov
orb
cmp
arpl
cmp
mov
fistps
dec
cs
sub
xchg
sub
xor
jnp
pop
mov
and
rolb
mov
movsl
pop
mov
xchg
fisubrs
mov
add
test
out
arpl
pusha
cmp
popf
mov
mov
loop
jecxz
mov
fdivrs
daa
insb
pop
mov
ss
adc
sub
shll
inc
fcomi
arpl
mov
fbstp
lea
nop
cmp
xchg
sub
scas
lds
out
mov
and
loop
mov
mov
inc
lods
and
push
push
fiadds
cmp
repz
ret
fxch
inc
arpl
ret
pusha
cmp
scas
les
shlb
and
dec
jecxz
lcall
jge
dec
insb
pop
sahf
aas
ss
fistpl
sub
arpl
pop
xchg
mov
filds
mov
dec
