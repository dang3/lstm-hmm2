xchg
add
xchg
add
add
jl
add
adc
add
push
xchg
add
jl
add
add
add
aaa
lcall
js
add
bound
add
add
pop
lcall
jno
add
sbb
add
sub
add
add
add
add
add
outsb
add
xchg
add
das
add
jl
add
lret
cltd
add
jl
add
jl
add
jl
add
cs
gs
jne
je
add
add
add
js
add
bound
add
add
push
sub
add
add
sbb
pushf
add
jl
add
jl
add
jl
add
inc
outsl
add
jl
add
xchg
lahf
add
xchg
add
lahf
add
jl
add
adc
add
mov
sub
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
add
imul
add
jo
add
inc
add
jb
jae
outsl
add
inc
add
add
imul
add
je
add
add
add
add
and
dec
add
ja
and
push
add
insl
add
outsb
add
add
add
outsl
add
popa
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
inc
add
imul
add
add
nop
hlt
inc
adc
adc
fisubrs
pop
out
rclb
cwtl
mov
pusha
xchg
fisubrs
add
push
mov
call
pop
pop
ret
xor
and
adc
add
mov
add
mov
mov
mov
sar
sar
mov
adc
add
jo
pusha
pop
push
outsl
inc
sbb
scas
cmpb
out
sar
mov
adc
add
jo
pusha
pop
push
outsl
inc
jg
popl
shl
mov
mov
inc
outsl
adc
mov
insb
mov
arpl
hlt
inc
hlt
mov
movsl
stos
adcl
stos
cmovl
mov
pop
pusha
shrb
lahf
and
stos
pandn
test
pop
sub
pop
std
jne
sti
add
mov
nop
test
popf
jecxz
shlb
andb
jp
add
dec
jne
aad
inc
lahf
cmp
imul
aas
push
lcall
lock
xor
les
sarl
add
mov
pushf
pop
iret
addb
or
xchg
mov
mov
xchg
aam
in
mul
push
fwait
outsl
fisubrl
xchg
out
inc
add
mov
adc
add
jo
pusha
pop
push
outsl
inc
jg
mov
mov
shr
sarb
outsb
imul
or
mov
lds
icebp
mov
xchg
jne
insb
pop
jo
and
push
aad
icebp
in
xchg
enter
stos
mov
mov
dec
jg
insb
inc
cmp
pusha
pop
push
outsl
inc
jg
mov
mov
shr
sar
mov
adc
add
jo
pusha
pop
push
outsl
inc
jg
mov
mov
shr
sar
syscall
aaa
lea
clc
mov
iret
pushf
mov
lock
add
outsb
xchg
jbe
xchg
fidivs
xchg
pop
or
les
and
xchg
mov
inc
add
mov
lods
loop
and
xor
cmp
mov
fadd
adcl
lea
jbe
jo
jo
pop
jge
mov
fstpt
mov
stos
xchg
inc
push
outsb
pop
test
in
lock
xchg
push
lods
int3
mov
cmp
dec
cs
notl
and
les
mov
sti
cmp
mov
in
ja
add
jecxz
mov
adc
and
push
dec
pop
or
or
dec
push
cmp
shlb
ljmp
push
push
push
or
adc
jnp
mov
xlat
xor
mov
xorb
push
xchg
test
insl
loope
sbb
mov
lret
sbb
xor
and
lods
lret
inc
inc
xchg
enter
pop
adc
std
out
ret
jne
mov
mov
pop
fstpl
push
mov
inc
dec
and
ror
push
xor
in
dec
xlat
mov
outsb
jae
sarl
icebp
lcall
fidivl
test
mov
pop
in
and
lret
xchg
nopl
shll
add
rcrl
adc
ds
cmp
pop
leave
pop
jno
adc
dec
sbb
add
ljmp
lahf
sub
adc
icebp
dec
jmp
scas
in
inc
jnp
test
sub
xchg
shll
cwtl
scas
mov
sub
pop
test
adc
nop
testl
mov
test
jl
icebp
mov
arpl
shr
and
int3
dec
dec
push
ss
inc
shrl
cmpsb
cmp
enter
mov
imul
sbb
add
jne
cmp
sbb
xchg
out
mov
pop
jecxz
jge
test
jle
cmpsl
popl
jg
shl
jmp
mov
xchg
inc
sub
call
and
addr16
out
out
insl
mov
jbe
cmp
sub
jbe
xlat
negb
mov
pop
movsb
popl
jge
ja
sub
inc
rorb
xchg
das
jno
xchg
fmuls
xchg
mov
inc
adc
shrb
xor
xorl
pop
adc
lea
addr16
pusha
rcrl
ret
rcl
jg
jle
enter
push
xchg
push
sub
sub
testb
out
mov
rcrl
mov
ret
pop
fs
out
cmpsb
addb
lahf
inc
into
pop
stos
ljmp
adcl
daa
out
mov
popa
nop
out
xor
sub
jmp
jl
mov
pop
lcall
inc
cmp
imul
arpl
mov
repz
sti
cmc
push
lock
xchg
sbb
inc
psubusb
cmp
mov
xor
cmpsl
jg
inc
xchg
data16
cmp
dec
add
cmp
jno
sbb
mov
decb
pushl
cmp
mov
movsl
arpl
and
and
insl
jne
xor
mov
test
ficoms
mov
loope
xchg
cld
movb
into
test
sub
push
and
je
sub
cmpsl
dec
ficoml
clc
push
jb
cmc
or
adc
popf
xchg
arpl
push
inc
lret
inc
mov
and
addr16
out
cmp
cmpsb
push
dec
fldcw
movsl
fimull
pushf
pop
smsw
or
inc
push
sub
jle
outsl
adc
mov
fcomp
mov
cld
cmp
inc
sub
sbb
push
push
std
add
in
xlat
push
mov
xchg
sbb
xchg
xchg
cmp
ja
cmpsl
jo
mov
xor
into
or
push
push
add
stc
mov
dec
mov
stc
icebp
sahf
mov
push
ja
jae
cltd
xchg
loope
popf
sub
xchg
or
mov
dec
das
mov
dec
xchg
push
loope
cmp
out
ja
ss
mov
xor
cmp
jg
cltd
add
imul
aaa
mov
xchg
stos
es
xchg
fwait
and
movsl
int3
or
ja
cmc
sub
iret
loop
mov
or
inc
add
fdivrs
lods
iret
mov
jp
cld
in
xchg
imul
into
hlt
imul
inc
jbe
cltd
enter
stos
sub
dec
cmpsl
inc
leave
pop
dec
imul
cld
push
dec
leave
dec
jae
cmpsl
in
lea
inc
cmp
push
and
add
paddb
cmpsb
out
out
jnp
jnp
repnz
ret
test
shlb
inc
cli
loope
pop
mov
xchg
ret
xlat
test
repnz
loope
xacquire
fs
lahf
adc
sbb
xchg
test
cld
xor
lock
push
and
shlb
push
in
push
mov
cmpl
dec
loop
mov
pop
and
add
add
shll
mov
in
adc
mov
pushf
xchg
pop
mov
outsl
xchg
push
sbb
and
arpl
xchg
cmp
push
pop
mov
jbe,pt
cs
js
aam
popa
movsl
jo
mov
inc
sbb
ror
mov
mov
mov
lods
jecxz
fisubrs
int
sub
xlat
jo
das
inc
frstor
sub
es
xor
adc
mov
and
and
xor
out
push
inc
mov
fists
mov
pop
idivb
inc
insl
popf
addr16
out
jp
and
neg
test
aas
dec
xor
and
sbb
mov
mov
nop
mov
cmp
xor
iret
xor
jg
push
or
pusha
sub
rol
xchg
jp
push
mov
inc
js
xor
add
ret
jmp
gs
clc
call
nop
fs
pop
push
pop
stos
test
or
lock
out
addr16
fwait
pop
jecxz
cs
xchg
pop
cmp
adc
scas
xor
sbb
adc
insb
mov
jo
sub
push
clc
pop
ficoms
orl
out
or
dec
pop
aam
or
xor
popa
cmp
lds
sti
ds
mov
cmp
pop
jl
ds
sub
push
xor
adc
sbb
dec
xlat
popa
clc
mov
xchg
xchg
cmc
in
xchg
ss
int
or
mov
mov
pop
inc
lock
dec
rclb
mov
fimull
sbb
test
cmc
fistl
sti
inc
mov
iret
push
jmp
rcrl
stos
mov
mov
lret
pop
shrb
ljmp
or
mov
pop
movsb
pop
ret
ja
xchg
jnp
or
push
in
push
xchg
mov
push
lods
mov
push
arpl
cmp
xchg
cmovp
pop
and
push
ds
xchg
insl
das
push
cmp
rol
xor
xlat
cmp
jmp
jl
pop
fcmovu
scas
cmp
inc
xchg
in
mov
scas
pop
test
js
xchg
pop
popf
lcall
xchg
sub
int3
loopne
xlat
cmpsb
xchg
inc
sbb
mov
pop
lods
pop
test
smsw
es
sub
or
fimull
pop
int
mov
adc
fcoms
insb
add
lcall
icebp
xor
cmp
aaa
cmp
sbb
adc
cltd
call
jo
xchg
sub
popf
scas
push
push
push
inc
adc
cmp
outsb
pop
jo
std
int3
mov
mov
pop
mov
push
les
pop
es
cmp
loopne
mov
fwait
xchg
movsl
enter
movsl
aaa
xor
add
mov
leave
pop
fsubrp
or
fcompl
std
fmull
fs
stc
sub
into
stos
insl
add
pop
jmp
fisttpll
xor
ljmp
jmp
scas
add
loopne
pop
lods
adc
sub
jge
jnp
nop
sarb
pusha
jge
xchg
xchg
xor
mov
inc
aam
stc
stos
arpl
inc
in
sub
mov
push
lock
cltd
push
push
sub
movsl
push
mov
lods
jno
and
sub
xor
sub
xlat
sarl
je
adc
pop
inc
adc
sti
jno
test
flds
scas
mov
gs
lcall
pop
mov
aad
dec
xchg
sub
cmp
loopne
xchg
cmp
mov
std
pop
and
insb
add
adc
out
shrb
std
les
out
jo
sbb
imul
inc
fnsetpm(287
inc
mov
les
or
inc
add
cmp
pop
inc
dec
xchg
mov
jae
std
add
push
lods
push
inc
test
leave
add
nop
dec
mov
jne
popf
jl,pn
push
repnz
mov
mov
dec
push
push
inc
mov
stc
xor
pop
xlat
bound
clc
out
iret
pop
push
aas
jecxz
add
les
sbbl
jbe
outsb
sub
jns
mov
cmp
add
fldenv
inc
mov
ss
or
cs
leave
push
xchg
ss
add
sbb
cmpsl
hlt
jg
xor
sbb
mov
pop
out
outsb
add
mov
js
adc
adc
arpl
xor
stos
sub
push
push
xchg
in
push
bndstx
pop
or
push
cmpsb
loopne
or
mov
cmp
jmp
mov
mov
fistps
and
pop
daa
ret
mulb
stos
and
and
jbe
xchg
xor
sub
outsl
int3
ffreep
pop
inc
loopne
imul
bound
sub
inc
inc
cmp
movups
pop
out
into
sub
lret
mov
pop
sbb
inc
mov
loop
andl
in
mov
inc
adcl
sbb
hlt
mov
mov
ljmp
push
sbb
dec
and
loop
pop
faddl
pop
mov
mov
push
mov
push
fwait
movsb
mov
inc
mov
jbe
aad
and
hlt
in
aad
fldl
or
xchg
cmpl
sub
jo
addl
lcall
lea
movsl
dec
in
das
and
sbb
jb
aas
xor
or
mov
mov
popf
pop
filds
cwtl
js
out
fidivrs
sti
xor
add
xchg
outsl
mov
aaa
insl
idivb
add
ljmp
mov
or
jnp
dec
sti
mov
push
movb
imul
int
aas
mov
shrb
mov
cmpsl
test
in
cmp
dec
xchg
pusha
xchg
addr16
lds
mov
lds
sbb
shrl
xchg
jl
inc
cmp
imul
cs
pop
add
mov
or
cwtl
pop
push
outsl
mov
fsubrs
sbb
cmpb
push
jb
add
stos
jmp
and
xor
mov
lret
dec
mov
lahf
js
xchg
jp,pn
lret
dec
fmul
int3
dec
nop
je
sub
adc
sub
pop
push
lods
sub
ss
cmpb
cltd
cmpb
lret
sbb
xor
sti
out
sahf
mov
push
and
addr16
adc
xchg
test
push
insl
data16
fsubs
int3
pushf
in
jne
imul
icebp
sbb
addb
rcrb
cmpsl
les
adc
push
xchg
xchg
mulb
lret
jmp
dec
std
jo
lahf
test
or
inc
and
inc
lahf
push
jecxz
jecxz
and
and
fs
popf
jo
je
jmp
imul
sub
out
cs
mov
mov
jp
jp
jae
iret
cmpsb
xlat
jno
imul
fwait
stos
sarl
and
cmp
push
adc
aas
aas
ss
lret
mov
iret
adc
outsb
call
jb
mov
jae
int3
jno
or
sahf
sbb
inc
stos
mov
movsl
sahf
lea
int3
repz
shll
movsb
and
pop
xchg
ret
outsb
mov
shr
nop
iret
mov
cmp
push
xchg
add
sbb
out
call
fbld
lahf
xlat
enter
inc
push
outsl
pop
mov
daa
pop
nop
cwtl
iret
cltd
pop
inc
stos
aam
dec
es
fsubrl
outsb
dec
out
cmp
sbb
outsb
mov
hlt
popa
scas
fwait
jl
mov
fiaddl
xchg
mov
xchg
sahf
frstor
push
push
jmp
mov
sti
inc
or
jecxz
loop
dec
out
mov
frstor
cmp
dec
pushf
mov
repnz
ja
xor
sbb
int
xor
pop
cltd
mov
popa
xchg
scas
mov
mov
les
cmp
lahf
and
mov
in
arpl
int
pusha
outsb
xor
popf
jp
push
stos
jbe
sbb
jecxz
dec
jbe
into
mov
mov
and
daa
imul
aad
push
fs
pop
popa
les
in
sub
scas
out
jp
fistpll
lock
daa
push
hlt
jns
insl
das
dec
les
and
cmpsb
outsl
ja
inc
mull
movsl
cmc
adc
push
lock
test
xlat
jnp
mov
xor
rclb
ret
stos
sti
cltd
movsl
adc
mov
jbe
pop
jne
xchg
into
mov
outsl
jbe
jle
dec
and
pop
je
cmp
inc
out
cmpl
ret
sbb
inc
in
sbb
mov
mov
test
mov
inc
pushf
mov
jno
sti
and
test
xchg
mov
repz
push
loope
add
lret
pop
aaa
jg
xchg
xor
push
xchg
arpl
popl
shll
shll
fs
je
inc
rcll
inc
add
fldenv
rorl
or
lcall
loope
push
push
fisttps
ret
mov
aas
cmpsb
sti
test
daa
mov
les
lock
and
push
daa
arpl
js
push
mov
cmpps
xor
lea
adc
bound
add
xchg
into
add
push
or
mov
mov
push
ja
jo
lahf
test
sbb
sub
dec
adc
cmp
mov
xor
clc
fisubs
sti
arpl
lock
push
cmp
mov
popf
inc
add
cmpsb
jbe
lret
stos
pop
je
and
pop
mov
mov
xchg
push
xchg
sbb
sti
and
mov
ljmp
and
xor
clc
dec
int3
adc
mov
jns
or
add
jp
mov
rclb
mov
mov
call
pop
pop
jae
jp
pop
fldenv
leave
mov
repnz
insb
push
imul
lods
cmpsb
xorb
pop
push
pop
sarl
dec
push
xchg
mov
pushf
movsl
insl
movsl
xor
jmp
jne
jne
popa
shll
jmp
imul
inc
int3
inc
std
mov
dec
push
rep
loop
divl
test
rcrl
les
xchg
fwait
or
jl
cmp
scas
movsl
pusha
jb
mov
shll
jge
sbb
cs
nop
inc
sub
jecxz
icebp
dec
in
sbb
les
in
in
into
or
fbstp
mov
or
cmp
sub
leave
in
lock
imul
sbb
das
fnstenvs
sub
outsb
pop
enter
cmp
ds
sub
push
inc
enter
ss
inc
test
xchg
sbb
fsubrl
inc
icebp
popf
jle
loope
nop
repz
in
and
ret
gs
cmp
ret
icebp
adc
popf
xchg
out
mov
repz
mov
idivb
scas
outsl
xor
push
cli
xorl
xlat
ss
mov
cmc
jmp
jp
pop
sbb
pop
cmpb
cmc
pop
sbb
sub
xchg
out
test
pop
cmc
xchg
inc
popa
jl
inc
jno
cwtl
mov
pop
enter
ds
pop
sbb
xor
and
into
imul
mov
mov
xor
fsubrl
xor
iret
pop
aaa
insl
cmp
imul
pop
and
jb
mov
gs
cltd
jecxz
mov
lret
adc
in
mov
les
sti
dec
fneni(8087
or
dec
add
test
xor
pop
mov
sub
dec
lods
mov
loopne
movsb
lods
mov
je
mov
mov
test
shlb
shrl
mov
mov
mov
fsub
jae
insl
fwait
mov
ss
stos
inc
rep
or
scas
arpl
rcl
dec
sbb
es
jmp
orb
pusha
repz
mov
mov
cmp
repz
fiaddl
lea
pop
mov
test
mov
out
and
mov
jne
ficomps
loop
rclb
es
lods
adc
mov
xchg
lds
je
lods
inc
icebp
iret
jmp
jg
jp
mov
ja
xchg
andb
xor
mov
cmp
jae
sub
jg
outsl
jne
mov
das
push
cs
test
jmp
jns
in
negb
mov
test
sub
lahf
xchg
sarb
mov
jno
or
cli
mov
push
ss
or
fs
inc
adc
push
data16
add
adc
and
js
jecxz
sbb
shrl
sarb
shll
dec
and
and
shlb
or
popa
scas
mov
mov
mov
fucomi
xchg
das
cmp
rorb
sbb
xlat
mov
dec
jnp
xchg
xchg
imulb
cltd
mov
mov
jns
loop
call
sbb
mov
push
imul
ret
mov
xor
sti
mov
mov
scas
roll
pop
push
sti
sbb
pop
mov
mov
pop
shlb
mov
mov
or
or
stos
imul
sub
stos
subb
addr16
mov
ja
add
cmp
cwtl
divl
sbbl
xchg
xor
filds
or
ss
sbb
sti
lods
out
push
pop
jmp
daa
mov
aaa
mov
mov
ss
aam
lcall
iret
adc
mov
out
bnd
add
shlb
inc
push
mov
subb
sub
ja
lds
mov
ss
aaa
mov
imul
addr16
inc
lods
adc
mov
mov
pop
fcmovne
mov
add
cmp
lahf
push
fcmovb
nop
push
notl
jge
push
xor
scas
pop
push
ja
decb
mov
xchg
dec
push
outsb
mov
mov
mov
loop
call
mov
mov
inc
mov
push
xchg
sbb
lret
dec
or
int3
in
pop
imul
mov
in
lock
fldenv
pop
iret
cmp
enter
add
xchg
inc
or
test
mov
xor
dec
insl
in
rclb
mov
in
mov
pop
mov
sub
push
sti
mov
mov
mov
ljmp
jno
pop
mov
adc
es
or
add
pop
add
scas
rorl
sbb
jecxz
mov
pop
pop
cli
scas
push
mov
and
insl
ljmp
int3
mov
xchg
testb
fldenv
test
fld
jmp
sub
imull
fcom
bound
inc
lcall
and
das
into
and
stos
mov
loop
rorb
bound
movsb
outsl
ja
addr16
mov
pusha
inc
jg
mov
stos
pop
jae,pn
mov
lods
and
and
icebp
cwtl
daa
clc
test
sub
sar
sbb
add
jle
jbe
dec
mov
add
in
inc
inc
adc
mov
mov
inc
sbb
ss
out
dec
sbb
loop
lret
movsb
dec
xchg
mov
push
fs
call
inc
clc
add
imul
mov
loop
adc
jns
jge
in
es
adc
mov
sub
pop
icebp
sbb
test
sub
xchg
mov
clc
pusha
jge
or
popf
scas
sbb
xchg
arpl
repnz
in
lret
mov
subb
out
leave
mov
jp
sub
mov
hlt
cmp
jle
stos
sbb
pop
xor
aam
pop
lods
jmp
popa
stos
xchg
dec
popa
lret
dec
or
push
pushf
ret
fdivr
out
ret
ds
mov
adc
lods
dec
jmp
adc
mov
jno
incl
movsl
mov
pop
jbe
push
push
adc
outsb
repnz
xchg
dec
sbb
add
pop
fstl
ret
loope
pop
int
rcl
xchg
movsl
andl
push
roll
adc
adc
cmp
mov
sti
jb
lahf
jae,pt
jo
cmpsb
sti
jnp
fldpi
sub
mov
adc
ds
ljmp
cmp
lea
dec
xor
stos
or
sahf
hlt
sbb
out
scas
add
je
movsb
pop
rclb
sbb
std
dec
and
push
cmc
jmp
mov
into
mov
inc
addl
ss
lret
cltd
xchg
loop
push
mov
out
out
lds
push
add
lods
and
fstpt
in
and
pop
push
push
cmpsb
jl
dec
sub
pop
dec
push
jnp
loope
ja
or
sbb
lods
data16
push
in
daa
sub
sub
cwtl
loop
xchg
mov
xor
in
dec
pop
dec
loop
aad
das
xor
or
add
popf
lds
mov
cmc
pop
push
out
in
out
xchg
lret
lods
ja
sub
jecxz
xchg
xchg
cmp
inc
nop
fwait
ror
outsl
arpl
pushf
dec
pop
popa
in
xor
sbbb
scas
nop
add
push
out
sbb
testb
lahf
push
xor
out
or
mov
shll
push
mov
cmc
daa
push
adc
cmc
xor
ret
dec
fidivl
int3
les
sub
fisubrl
add
jbe
lods
or
pushf
sahf
outsl
or
jmp
ja
scas
jmp
cmp
inc
aaa
or
ja
mov
in
mov
in
aad
loopne
insb
pop
sbb
addr16
push
iret
outsl
mov
outsb
scas
dec
sti
jbe
and
inc
test
and
jge
loope
dec
test
aam
enter
mov
ret
push
lret
test
call
or
pusha
nop
cltd
cltd
in
bnd
cmp
out
pop
cli
pop
adc
add
jo
pusha
pop
push
outsl
inc
jg
mov
mov
shr
sar
mov
adc
add
jo
pusha
pop
push
outsl
inc
jg
mov
mov
shr
sar
push
pop
nop
das
add
lock
pusha
pop
push
outsl
sarb
mov
mov
shr
sar
mov
adc
add
jo
pusha
pop
push
outsl
inc
mov
cmp
nop
and
int3
int3
int3
int3
mov
xor
mov
mov
mov
mov
push
movl
movl
movl
movl
mov
movl
movl
mov
movl
call
ret
push
mov
sub
push
xor
push
push
call
pushl
mov
call
mov
movl
pushl
mov
mov
pushl
mov
mov
movl
movb
mov
mov
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
add
add
inc
and
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
mov
and
add
add
xchg
and
add
add
jl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fsubs
add
and
add
and
add
and
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
add
cwtl
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
add
js
add
mov
add
pushf
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
sub
add
add
mov
add
test
add
jl
add
je
add
insb
sub
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shrb
add
fsubrl
add
lock
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
sub
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
sub
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
sub
add
add
js
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
push
andl
mov
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
nop
nop
nop
nop
nop
nop
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
xor
mov
mov
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
mov
xor
add
adc
fldt
aaa
and
xor
xchg
cmpb
stc
sar
and
xor
add
adc
popa
dec
jno
inc
imul
loopne
xchg
mov
shr
stc
and
xor
add
adc
popa
push
jno
inc
jno
arpl
fdiv
mov
loope
mov
jo
pop
inc
mov
cmpsb
push
cmpb
mov
mov
gs
adc
mov
lds
jle
lret
jecxz
icebp
aam
dec
jno
mov
push
mov
jmp
xor
gs
sti
pop
lret
xchg
mov
adc
xor
inc
pop
xchg
stc
out
xor
and
std
or
pop
cltd
mov
fnstenv
orb
add
fistl
push
add
mov
movsl
inc
cmp
leave
add
cltd
shr
xchg
mov
inc
jmp
xor
mov
xchg
repnz
hlt
pop
mov
hlt
mov
icebp
lods
rclb
jmp
add
adc
popa
dec
jno
inc
jo
pusha
mov
mov
mov
shr
popf
push
insb
jne
insl
sub
and
adc
push
add
add
out
cld
cmc
xchg
movsb
mov
xchg
jle
jb
jne
pop
cmp
cmp
adc
stc
cli
stos
mov
into
pushf
push
dec
pop
jl
dec
xor
jno
inc
imul
subl
sar
and
xor
add
adc
popa
dec
jno
inc
imul
subl
sar
and
xor
mov
inc
sub
je
ret
and
pop
inc
and
xor
movsb
jo
pop
adc
adc
aaa
sbb
mov
ljmp
push
inc
rorb
adc
adcb
xchg
cmp
enter
insb
js
dec
sti
xor
popa
cmc
stc
fptan
cld
testl
mov
cmc
ss
rep
or
in
hlt
cmc
cld
roll
stos
mov
sub
jmp
jb
sbb
clc
push
sub
mov
je,pn
movl
test
dec
pop
hlt
cmp
addr16
in
cmpsl
shll
out
mov
dec
fwait
test
es
or
sub
pushf
pushl
out
xchg
mov
fucomp
inc
push
push
out
sbb
adc
jge
add
mov
xchg
xor
add
mov
in
in
sbb
mov
pop
sbb
loop
mov
out
scas
es
add
hlt
cmp
mov
sti
out
dec
mov
inc
mov
movsl
adc
iret
call
sbb
cmpsl
jbe
cmp
iret
mov
push
fidivs
js
xchg
imul
fstpt
sbb
enter
clc
push
push
ficomps
pop
mov
xchg
scas
int
jnp
aad
andnps
pop
mov
sbb
cli
jb,pt
fwait
imul
das
mov
in
bnd
add
xor
lea
dec
ss
test
sahf
decb
fcmovne
dec
xorb
movsl
dec
inc
mov
xchg
inc
inc
push
sub
sahf
add
scas
pusha
push
loope
jmp
fmuls
int
push
dec
sub
pop
divl
int
repnz
mov
sub
idivb
push
scas
mov
pop
ds
push
or
clc
or
fwait
dec
stos
orb
aam
mov
outsb
cld
subb
ja
sbb
add
sbb
cmp
xchg
nop
es
xor
xchg
inc
faddl
mov
xchg
mov
das
cmp
test
rolb
rdpmc
add
ret
shll
xlat
stc
ret
xor
sub
bnd
popa
push
out
push
repnz
xor
ljmp
push
rorb
movsl
pop
test
fcomps
shlb
icebp
repz
lock
and
and
pop
jo
dec
sahf
mov
sbb
jl
jle
add
ret
xchg
rolb
push
add
and
shll
xor
dec
push
imul
jne
das
pusha
int
dec
mov
ljmp
pusha
stos
fs
inc
jae
jmp
in
imul
sarb
mov
add
shrb
stc
and
push
ror
xor
mov
cmpsl
test
mov
stos
adc
mov
xchg
mov
mov
ja
xor
xchg
jb
cmp
jns
xchg
jno
mov
push
pop
sahf
jo
int
aam
lods
cmp
xor
mov
dec
mov
jmp
lret
cmp
imulb
mov
outsl
jg
ret
sbb
sbb
test
jp
or
push
mov
std
leave
pop
loopne
pop
jle
xor
mov
mov
push
dec
or
inc
or
mov
xchg
cltd
das
pop
mov
repnz
mov
clc
sbb
pop
lcall
adc
push
daa
fnstsw
add
mov
push
mov
push
mov
xor
jmp
xchg
mov
lahf
xchg
gs
mov
iret
lahf
jg
pop
fisubrl
lds
push
stos
leave
inc
movsb
mov
data16
xor
repz
rcl
xchg
or
xor
fdivl
mov
movsb
outsb
mov
bound
fiadds
mov
mov
iret
daa
xchg
sarb
cmp
insb
test
addr16
sbb
cs
mov
in
in
dec
add
pop
sbb
rcrb
nop
in
shld
add
into
push
pop
cld
std
pop
lods
imul
xor
inc
push
xor
repnz
addr16
inc
mov
cltd
pop
cltd
aam
jne
arpl
fdivp
or
sub
fdivs
mov
or
jge
mov
aaa
push
scas
xorl
es
movsb
inc
pop
es
xor
mov
fiaddl
shl
out
je
stc
xor
xlat
icebp
notb
push
push
jmp
test
push
dec
pop
sbb
push
pop
push
mov
cmpsb
into
pop
inc
mov
leave
xchg
in
arpl
xor
or
xor
ds
lock
out
imul
fwait
and
nop
repnz
mov
inc
sbb
test
sti
jmp
clc
xchg
leave
out
cmpxchg
lods
push
mov
and
out
call
add
lock
lcall
jge
mov
loop
cmpsb
inc
push
xor
dec
pop
push
jno
in
fldt
push
addr16
fbld
fs
add
gs
dec
mov
cmp
sub
dec
xor
je
dec
pop
cmp
adc
arpl
rcrl
test
orb
iret
in
xor
cli
popf
pop
call
mov
or
pushf
push
inc
test
stos
cmpsl
xor
dec
jp
cmp
lods
mov
cmpsb
mov
fstl
mov
mov
out
out
fs
mov
fsubrl
ss
mov
sub
and
dec
movsl
ja
sub
dec
mov
outsb
xchg
call
js
lcall
shl
lret
adc
xor
scas
and
cld
xchg
push
sbb
test
ljmp
ljmp
jo
sarb
lret
inc
inc
loope
sbb
cmp
insl
ret
cmp
inc
fcmovbe
xchg
xchg
sub
mov
push
dec
mov
lea
cmp
sti
ljmp
lock
mov
shll
push
inc
push
pop
cmp
xchg
push
loop
or
clc
dec
jge
cmpl
iret
add
sbb
fwait
pop
ja
mov
out
out
push
repz
add
jns
loope
mov
loop
cltd
mov
push
inc
sub
cld
bound
cld
fstpt
or
xor
out
mov
xor
cmp
cltd
jecxz
mov
out
test
dec
fwait
fwait
jmp
jb
dec
adcl
popa
iret
pop
mov
popf
mov
fsubrs
repz
lret
adc
clc
pop
mov
jl
dec
mov
test
sahf
fxam
mov
add
adc
and
push
test
xor
in
iret
les
loopne
cmp
outsl
repnz
je
pop
aas
fisttps
mov
jne
insl
lock
mov
mov
jns
ljmp
daa
dec
mov
inc
jo
clc
outsl
jmp
movsl
jp
xchg
sbbl
dec
xor
dec
xor
inc
pop
shll
mov
push
xchg
nop
rol
mov
mov
addr16
repz
mov
sbb
mov
inc
mov
inc
cmp
pop
flds
cmp
in
xor
fcomi
bound
rclb
add
aad
fwait
mov
repz
and
inc
nop
int3
cmc
fisttps
add
in
mov
mov
dec
fists
mov
cltd
stc
add
loopne
nop
movsl
lcall
sub
fwait
jne
movsl
cmp
or
in
inc
mov
xor
lea
nop
and
outsb
retw
pop
push
incb
jb
popf
mov
sarb
and
dec
and
mov
or
mov
rol
mov
aad
dec
xor
xor
ljmp
outsl
push
xchg
shll
inc
xchg
fisubl
cmp
or
cmpsb
mov
hlt
mov
push
sbb
mov
fldenv
or
sub
int
leave
jns
sub
mov
jne
dec
bound
xlat
lret
rcrb
mov
int
sarb
sub
mov
add
add
push
nop
fcmovne
roll
adc
ja
mov
sbb
pop
push
lock
lahf
sti
add
sub
es
neg
movsb
shr
xchg
imul
test
jmp
popa
je
in
mov
aam
push
mov
orl
mov
lcall
fisttps
sti
arpl
mov
sub
sbb
cli
popf
push
adc
mov
sub
or
pop
adc
inc
pop
lea
fdivrl
lock
cli
fisubl
pop
popf
xchg
fmuls
inc
adc
xchg
out
daa
aam
mov
jae
aas
add
test
cli
and
ds
sbb
mov
and
dec
mov
add
cmp
adc
mov
sub
cmp
fsubrl
add
pop
dec
test
shr
jl
sahf
std
xor
fisubs
sub
sub
cltd
lds
jns
sahf
or
push
imul
sub
je
call
je
cmp
and
pop
out
leave
movsb
mov
inc
clc
jnp
mov
push
dec
add
pop
xchg
xor
mov
xor
sbb
sbb
subb
std
jbe
pop
call
mov
je
add
sbb
add
in
cmp
addr16
mov
or
sbb
out
ret
sahf
sub
or
add
mov
or
clc
pop
fists
loope
xchg
stos
fwait
pop
imul
cmp
jns
pop
jo
push
cmpsb
xchg
and
add
sub
and
sahf
daa
or
imul
icebp
xchg
jne
pop
out
arpl
lds
mov
xchg
in
or
sbb
add
arpl
notb
sbb
dec
sub
ficoml
dec
es
push
inc
cmp
push
add
repnz
fs
mov
mov
mov
push
sti
in
mov
jge
jnp
adcl
shl
sarb
int3
mov
adc
nop
mov
mov
outsb
mov
xor
xor
dec
sbb
dec
pop
into
add
dec
lds
add
stos
cmp
rcrb
jl
repz
js
popa
sbb
lods
in
mov
xor
stos
scas
aas
cmp
or
jnp
sbb
pop
rcl
out
lret
sbb
insb
jecxz
xchg
mov
xor
sbb
jae
lret
inc
cmp
cmp
adcl
das
sbb
mov
sub
movsb
pop
add
loope
xor
gs
mov
test
mov
push
push
lea
cmp
jnp
xchg
and
add
push
xchg
cli
ja
xchg
popf
and
movsb
ja
out
jecxz
loopne
xchg
sbb
lahf
mov
and
cmp
jns
xchg
adc
pop
das
and
add
add
xchg
out
mov
xchg
mov
popa
lods
arpl
mov
adc
mov
out
imul
outsl
mov
test
lcall
sub
in
cmova
or
and
pop
cmpsb
mov
mov
stos
jae
sub
mov
xchg
pop
sbb
out
xchg
imul
jnp
clc
jae
in
inc
mov
xchg
stc
mov
and
mov
es
sti
call
daa
addl
or
mov
dec
jle
sub
popf
adc
loopne
das
pop
es
daa
inc
aaa
xor
mov
sub
and
js
cwtl
mov
lods
jae
sbb
sbb
push
pop
mov
pop
test
setb
xor
stos
in
push
outsb
jbe
mov
test
stos
movsl
sub
test
adc
lds
out
add
cs
ret
insb
cld
pmaxub
mov
out
pop
outsb
fisubl
inc
dec
std
jp
outsl
mov
fnstsw
sub
xchg
dec
imul
dec
cmpsb
test
dec
pop
inc
push
or
mov
hlt
pusha
cmp
adc
fwait
in
outsl
aad
push
add
jne
iret
jge
dec
mov
sub
xor
mov
sub
sub
out
xor
lahf
inc
ljmp
xor
or
fcomps
inc
inc
xor
into
xchg
andb
sub
out
lods
addr16
pop
mov
out
pop
test
std
and
fmul
sarb
add
pop
cmc
outsl
mov
fistpl
daa
and
mov
jge
cwtl
in
bound
nop
push
repnz
inc
adc
jb
das
sub
xchg
inc
stos
xchg
aas
addl
repnz
pop
dec
jle
decb
adc
addr16
mov
jnp
mov
push
pop
daa
popl
in
aam
dec
mov
mov
jmp
bnd
popl
std
ss
add
dec
sbb
fs
mov
xchg
xor
arpl
inc
push
inc
sbb
iret
mov
and
xor
int
es
xchg
test
adc
push
pop
xchg
or
adc
mov
dec
add
mov
sbb
mov
les
cwtl
mov
xchg
mov
mov
sbb
fcmovbe
lahf
sbb
jp
pop
loopne
movsl
aam
icebp
cld
adc
call
jp
hlt
mov
mov
and
dec
out
idivl
js
mov
lds
add
test
sub
mov
in
nop
movsb
test
outsb
jo
pop
addr16
jno
and
clc
fs
push
push
jnp
add
sub
test
dec
bound
in
pop
iret
push
cmp
fwait
shl
jmp
jg
add
cmp
cmc
dec
inc
insl
in
int
stos
pop
popf
or
pop
mov
and
mov
dec
add
jg
das
int3
shl
sbb
das
add
in
jbe
cmc
cmp
xchg
and
int3
and
sub
xor
push
mov
jnp
mov
ja
cmp
mov
lret
cli
adc
in
std
inc
mov
scas
push
add
ret
jle
fwait
push
stos
enter
mov
mov
xchg
xchg
sub
ret
xorl
lcall
xor
inc
dec
fwait
stc
out
lret
cs
or
movsl
inc
jp
jae
inc
jno
out
into
lcall
xchg
jnp
dec
das
es
sbb
shr
cmp
fs
xor
mov
adc
add
jmp
cwtl
repnz
pop
jne
test
lcall
outsl
jbe
add
sub
adc
mov
test
xchg
sarl
or
mov
cli
and
push
fldl
test
dec
cmp
xlat
xchg
sub
mov
pop
and
mov
fnstsw
nop
xchg
imul
dec
outsl
inc
pop
nop
pop
and
pop
push
jp
pop
pop
xor
out
xor
rolb
push
mov
shlb
inc
mov
or
testb
fstpl
cmovp
lds
cmpb
xor
pusha
pop
int3
imul
dec
sub
jno
ds
mov
call
inc
jecxz
jl
mov
sbb
adc
shll
jp
out
mov
jnp
cli
fsubrs
lcall
popa
xor
jo
dec
add
enter
lods
sbb
jbe
adc
stos
mov
and
sub
sbb
cmp
lahf
mov
xchg
ds
out
incl
inc
push
adc
imul
cmp
xchg
stc
jmp
loopne
or
inc
or
mov
inc
test
lds
das
mov
lds
sbb
jbe
dec
popf
lret
push
dec
and
mov
movsl
pop
int3
xor
mov
mov
mov
pop
lea
clc
fs
fdivrp
lds
in
mov
dec
rclb
pop
clts
jne
xchg
mov
mov
mov
jb
cmc
in
cmpsb
xor
cmp
lods
mov
sbb
sbb
jmp
push
add
mov
xor
pop
lea
push
stos
daa
stos
loope
gs
push
arpl
pop
and
inc
testb
add
stc
in
sarl
rcl
mov
call
xchg
lea
test
repz
mov
jp
hlt
mov
pop
add
iret
mov
sub
push
dec
jle
aaa
mov
jmp
in
repnz
cmpsb
dec
inc
jae
sbb
gs
mov
mov
out
psllw
xchg
or
dec
cmpsl
cwtl
ret
pop
pop
add
stos
pop
and
lods
mov
mov
or
ret
movsb
shrb
pop
adc
jmp
xchg
add
gs
adc
mov
es
mov
mov
iret
mov
jmp
sarl
stos
sub
loopne
push
into
leave
sub
cmp
mov
mov
out
cmp
loope
pop
sbbb
gs
mov
aas
jo
push
into
inc
mov
cwtl
insb
ds
sbb
das
add
jg
cmpl
lret
out
pop
ja
fwait
push
push
cwtl
push
cmp
push
adc
mov
xchg
ret
in
inc
push
imulb
arpl
inc
lods
daa
pushf
pop
inc
arpl
push
sbb
pop
out
add
outsb
inc
scas
dec
mov
repz
lods
out
arpl
fstps
outsl
es
loope
idivl
int
mov
in
movsb
sbb
mov
lock
sbbl
lret
adc
fidivrs
test
pop
std
dec
sbb
imul
xor
ret
lods
add
mov
or
inc
xchg
sbb
mov
popa
mov
stos
xchg
mov
pushf
xlat
inc
jg
lret
loopne
addr16
std
xchg
pop
lahf
aas
mov
sub
pop
mov
xchg
outsl
jne
push
cs
push
inc
lcall
add
or
cmpb
int3
or
xor
inc
std
cld
push
pop
movl
adc
lods
fucomi
and
push
je
pop
pop
mov
ret
mov
test
std
ret
in
lock
mov
inc
out
ret
jns
jl
sbb
cmp
mov
jb
mov
cmp
jno
inc
push
jl
sbbl
mov
in
cli
or
inc
jmp
cltd
adc
popa
test
movsb
jo
inc
dec
or
popf
mov
and
sub
xchg
sbb
aam
or
cltd
xchg
imul
add
jle
movsl
mov
gs
lret
dec
loope
ja
cmp
or
add
mov
add
outsl
popa
pop
jg
jge
test
cmp
nop
jb
cmp
mov
cltd
mov
jp
inc
iret
inc
nop
and
test
sub
xor
mov
lcall
fmull
hlt
cmp
mov
cmp
jbe
mov
sub
stc
xor
rcrl
adc
loope
enter
std
notl
jg
cltd
xor
daa
cwtl
jecxz
and
pop
aaa
adc
ds
pop
and
fstpt
fsubl
add
stc
mov
jmp
nop
fsts
xlat
and
scas
enter
test
jbe
jo
stos
fs
fmull
xchg
mov
call
sbb
or
cmc
dec
lds
out
sti
andb
ja
add
xor
jg
aam
cmp
cmpsl
mov
enter
mov
cmpsl
and
ljmp
dec
in
scas
out
gs
cmp
int3
out
push
rep
sarb
es
test
and
sub
decb
pop
orb
cmc
xchg
jbe,pt
fnstcw
daa
inc
or
mov
jecxz
jmp
lcall
shlb
inc
je
jge
outsb
or
icebp
cli
out
leave
pushf
mov
ret
adc
mov
or
lret
aaa
pop
cmpsl
push
and
jmp
aad
sbb
cmc
xchg
mov
fbstp
jle
xor
adc
andb
sti
dec
pop
cmp
insb
xchg
xchg
ss
cld
cld
repnz
pop
xchg
mov
jle
inc
sub
dec
shl
mov
dec
jbe
lock
insb
out
test
idivl
or
mov
cld
mov
insb
sbb
cmp
fsub
test
sbb
cmc
jnp
ret
decl
and
outsl
shrb
ficoml
mov
push
ret
scas
sub
das
out
pop
or
es
cmpsl
shll
repz
mov
leave
out
add
orl
xor
aam
setp
pop
cmp
out
sub
xchg
push
pop
xchg
pop
xchg
loop
lock
push
sti
jns
rcr
xlat
jo
cli
push
adc
je
lret
fildl
xlat
cltd
mov
sbb
sbb
push
pushw
sbbl
inc
shlb
push
sahf
jnp
lods
jmp
repz
inc
or
in
leave
leave
lret
mov
sub
xchg
pop
mov
xor
pushf
or
enter
ficomps
jecxz
jae
lret
mov
pop
sub
mov
stos
mov
mov
loope
push
xor
adc
and
iret
inc
adc
jbe
xchg
out
stos
in
pop
or
call
push
jle
mov
stc
or
push
in
mov
jno
pop
repnz
xchg
pop
dec
push
lods
mov
das
adc
jbe
stos
shl
add
and
in
inc
call
jmp
and
cmp
lret
std
cld
and
cmp
push
std
sarb
aam
xchg
pop
xor
jl
fnstsw
xchg
and
and
mov
dec
sti
nop
cmpsl
cmpsb
jne
and
xchg
sub
adc
ja
lock
push
mov
cld
js
aad
roll
dec
mov
jl
xchg
imul
scas
sbb
pop
outsb
cmp
dec
xor
xchg
repnz
inc
btc
dec
xor
push
jg
xor
push
dec
push
and
sub
fdiv
adc
adc
and
jne
pop
movsl
or
ret
add
jecxz
cltd
gs
mov
cvtpi2ps
fdivl
sti
int3
mov
js
rolb
shl
cwtl
jbe
aam
divl
mov
les
add
mov
loope
push
fbstp
ret
scas
das
inc
sub
jbe
push
std
jno
adc
lahf
int
cmp
and
bound
addr16
rep
sub
dec
scas
in
clc
xchg
and
ja
mov
adc
enter
repz
push
loopne
bound
mull
mov
leave
incb
xor
xchg
dec
inc
in
jnp
sbb
adc
popa
dec
jno
inc
imul
subl
sar
and
xor
add
adc
popa
dec
jno
inc
imul
subl
sar
and
xor
add
adc
popa
dec
jno
inc
imul
subl
sar
and
xor
add
adc
popa
dec
jno
inc
imul
sub
jns
ds
cs
int3
int3
int3
int3
int3
mov
push
faddp
mov
push
repz
dec
aad
lds
mov
cmpsl
push
xchg
push
test
jne
gs
push
fiadds
xor
sahf
jno
cmc
jle
pusha
aad
lds
ficompl
push
aad
test
jle
dec
std
sbb
or
sbb
sub
xchg
mov
mov
loop
int3
jns
insl
test
and
scas
mov
popf
fstpl
jge
inc
pop
aad
cmc
dec
jnp
dec
shrb
fnclex
test
stc
xor
fldenv
rolb
aad
mov
data16
xchg
xchg
or
dec
pop
imul
iret
sbb
js,pn
pusha
mov
mov
movsl
std
push
inc
xchg
stos
mov
jne
inc
mov
scas
xor
pushf
cli
jnp
sub
cmp
jge
imul
xor
push
rclb
pusha
lret
add
mov
pop
vcvttpd2dqy
movsb
pop
test
imul
jg
jb
cmpsb
or
stc
xchg
cmc
xchg
stos
mov
pop
dec
xchg
push
add
jne
xchg
into
shll
and
pushf
jae
and
cltd
and
xchg
jp
pushf
daa
mov
push
mov
rolb
popf
jl
pusha
btr
mov
inc
ficoml
jp
pop
in
xor
mov
push
loop
in
imul
xor
jnp
pop
out
pushf
and
and
push
mov
add
dec
aad
lds
mov
movsl
push
xchg
push
test
jne
gs
push
fiadds
xor
sahf
add
dec
aad
lds
mov
movsl
push
xchg
push
test
jne
mov
testb
jmp
test
adc
subl
sub
and
cmp
mov
push
test
adc
stos
jne
adc
in
pushf
outsl
push
fdivrs
lods
popa
mov
xor
ljmp
shll
xor
dec
mov
ret
lret
mov
mov
das
bnd
shrb
push
je
adc
mov
lahf
cmc
and
bnd
mov
aam
aas
rcll
icebp
cmp
cmp
neg
xchg
xchg
and
cltd
jne
sarb
iret
pop
movswl
pop
in
mov
xchg
pop
xor
movsb
int
icebp
xor
rcrl
mov
lods
popa
into
pop
mov
xor
lods
pop
pop
mov
mov
shrl
push
and
mov
shlb
inc
int
push
daa
int3
adc
and
push
loop
shl
cmp
popf
arpl
fstl
cmp
or
cmpl
mov
scas
mov
loopne
ljmp
jnp
stc
cmpb
sub
repz
ljmp
leave
or
daa
mov
faddl
sub
test
lret
aaa
fiadds
add
add
inc
stos
mov
mov
movsb
int3
adc
add
sbb
bound
cwtl
inc
out
js
xchg
movsb
ljmp
adcb
addr16
sbb
shrb
fcoms
add
inc
arpl
lods
xor
ret
inc
sbb
fwait
pop
dec
negl
rorl
subb
lea
push
xor
int
sarb
push
loope
call
outsb
aam
out
and
popf
dec
cmpsl
es
in
pop
gs
leave
sbb
mov
push
push
lret
dec
cmpl
dec
and
aam
inc
loope
test
out
jg
ljmp
insb
aaa
ret
push
leave
cmp
xchg
and
mov
arpl
xor
test
cmpsl
dec
repz
addr16
aas
addr16
mov
mov
push
out
mov
and
inc
sub
jnp
xchg
cmpsl
out
cld
jmp
jno
mov
clc
or
mov
pop
mov
ljmp
pop
fcompl
jnp
sub
push
data16
stos
mov
push
in
aaa
and
inc
sbb
pop
inc
mov
pop
push
outsb
cmp
or
mov
cmp
add
xor
sub
xchg
loopne
sarl
pop
lea
call
leave
push
insb
or
test
mov
inc
ret
xor
out
pop
emms
dec
pop
test
fwait
jnp
and
dec
cmp
icebp
lcall
cmc
and
xchg
jo
mov
testl
or
cmp
arpl
je
adc
sbb
xchg
dec
imul
jns
loop
push
fcmovne
shlb
imul
push
cmp
int3
xchg
adc
out
mov
pop
insb
sbb
and
push
test
or
xchg
pop
lret
fidivl
jae
in
dec
stc
inc
dec
mov
js
adc
push
sub
fs
xlat
mov
out
or
and
cmc
cmp
int
push
test
js
xlat
jnp
int3
xor
repnz
and
dec
fbld
mov
cmp
mov
lea
movsb
mov
xor
jae
loopne
push
cmp
gs
or
ja
or
jecxz
cmp
push
mov
mov
in
mov
lcall
sub
enter
out
ljmp
mov
mov
mov
mov
roll
xlat
jmp
push
pop
sbb
cmpsl
stos
outsb
xor
push
insl
jmp
or
shll
dec
mov
roll
hlt
add
sbb
loopne
inc
jbe
lea
mov
lahf
ret
push
inc
insl
cwtl
mov
push
stos
cli
cmpsl
aam
test
data16
mov
sti
pop
mov
scas
movsl
pop
in
jbe
sub
dec
shrb
dec
ja
push
xchg
sahf
push
aas
mov
ret
subl
xchg
push
adc
add
mov
icebp
push
mov
mov
cmp
xchg
cmp
jg
int3
xchg
outsl
push
mov
popa
cmpsl
xchg
push
push
push
lods
xor
add
push
xchg
in
lcall
push
pusha
mov
pusha
inc
adcl
mov
xchg
scas
out
inc
adc
cmp
fwait
sbb
inc
adc
out
and
jp
and
xorl
je
loop
std
mov
mov
adc
xchg
sbb
or
inc
mov
push
cmp
adc
lea
icebp
adc
mov
inc
mov
es
in
pusha
out
into
std
dec
jge
sbb
fidivl
or
divb
sub
dec
pop
sub
outsl
inc
xchg
push
lds
lds
add
sbb
fs
js
shlb
cmp
in
mov
lods
fs
push
dec
popl
and
ja
mov
or
inc
xor
scas
in
in
push
xchg
ljmp
out
cs
nop
jg
add
cmp
fsubs
iret
insl
into
push
jno
loope
arpl
inc
mov
jg
push
mov
cli
dec
jb
outsl
mov
dec
push
cli
add
sub
aad
dec
push
lret
sbb
jo
ljmp
and
shrl
lahf
lret
xchg
push
rcrl
test
mov
dec
fcomp
test
test
xor
pop
and
lret
aam
ds
pop
xchg
fmull
outsb
inc
addr16
inc
sbb
iret
dec
adc
mov
mov
dec
dec
or
mov
fstl
repnz
push
pop
push
repz
mov
les
ds
pop
xlat
je
cmpsl
aam
dec
adc
mov
dec
jae
test
fwait
sub
mov
stos
stc
lock
dec
jp
mov
cmpsb
sbb
mov
mov
push
je
fdivr
lahf
or
ss
add
sbb
jmp
movsb
outsl
daa
adc
ror
test
loop
push
xchg
mov
es
cmp
inc
sub
ljmp
and
xorb
pop
rcrb
mov
imul
jg
inc
sub
sbb
fcompl
cli
xor
jge
testb
pop
lcall
out
ret
pop
daa
mov
inc
sub
lods
or
xchg
push
lret
add
insl
lock
nop
aad
das
xchg
sub
fldenv
or
jecxz
out
dec
or
gs
xor
mov
fucomp
dec
iret
xor
addr16
lret
shll
adc
cld
nop
add
lea
dec
pop
pop
les
fwait
mov
cmpsb
incl
popa
aas
scas
jp
pop
pop
imul
fs
add
fs
cltd
push
and
adc
dec
adc
jne
pusha
mov
aas
sti
and
push
scas
push
dec
out
jns
mov
cmp
push
push
xor
and
dec
nop
mov
ljmp
loope
mov
out
or
mov
les
ret
and
dec
ret
out
ja
dec
pop
xor
jl
int3
popf
inc
or
insb
xor
ds
add
fsubrl
xchg
xor
fmull
push
pop
add
xor
mov
cltd
subb
dec
or
mov
movsl
out
mov
out
pop
sub
shr
push
popf
mov
mov
sarb
xchg
mov
inc
int3
jecxz
test
repz
movsb
lods
mov
imul
sub
xchg
xlat
mov
testb
mov
sub
cmpl
out
or
jl
int
sahf
int
push
in
subl
add
xchg
inc
es
stos
xor
les
mov
dec
ja
lret
lret
pop
fmul
or
xlat
dec
xor
leave
mov
pop
fst
mov
gs
repnz
outsl
cmp
pop
imulb
cmpsl
popa
xor
mov
pop
je
shll
mov
push
stos
cmp
cmp
je
or
pop
cwtl
nop
jl
jl
test
dec
cmp
and
push
cmp
cltd
icebp
xchg
sub
push
int3
pop
imul
add
sub
and
out
ss
xchg
and
fwait
push
into
sub
jg
jp
mov
inc
pop
xchg
cmpsl
or
mov
out
pusha
movsl
rol
xor
in
test
push
adc
fcompl
icebp
hlt
inc
repz
push
adcl
mov
mov
mov
pop
and
jo
int3
aaa
aas
shll
sub
ret
int
adc
nop
push
arpl
mov
or
cltd
lods
insl
std
pop
push
lds
ds
or
stc
and
stc
sub
pop
orb
inc
and
lret
xor
jae
xchg
mov
shrl
push
aam
jg
shlb
mov
add
adc
cmp
adc
dec
push
imul
das
fmull
mov
popf
fsubrl
addr16
xchg
cmp
or
jne
mov
pop
inc
dec
loope
dec
jnp
adc
mov
mov
movsl
cmp
loopne
sub
mov
push
xchg
push
bound
popf
lret
das
jnp
sbb
frstor
push
lods
sbb
inc
test
xor
dec
ret
push
xor
xchg
out
jg
xor
adc
mov
jmp
dec
mov
pop
mov
bnd
je
add
iret
jo
repnz
adc
fcmovne
mov
gs
cmp
xor
jb
xor
fldl
clc
cmp
aam
dec
xor
nop
sub
ja
cmp
push
jg
jae
adc
hlt
sub
mov
jmp
fsubr
xchg
cmp
add
rorb
into
movsl
jl
pop
dec
jmp
sbbl
shll
sub
repz
data16
into
xchg
ret
lcall
add
inc
addr16
add
sti
sbb
add
inc
mov
mov
sti
pop
jle
cmp
adc
push
movsb
pop
aad
or
sbb
mov
in
out
jns
push
cmp
orb
mov
aaa
mov
mov
lds
xor
cltd
xchg
push
inc
insl
mov
lret
sahf
adc
ficompl
inc
loope
sbb
xorl
shrl
dec
inc
sbb
enter
insl
icebp
sub
lret
mov
adc
testl
hlt
dec
cwtl
inc
dec
cli
dec
jb
mov
repz
fldenv
jecxz
cmp
add
add
or
movsb
out
pop
pop
xchg
aad
fmulp
mov
jb
mov
mov
sub
add
mov
nop
mov
sbb
dec
fcoms
dec
cmp
sub
rcr
imul
xchg
cld
rorl
sbb
movsb
imul
push
pop
inc
lods
push
pop
aad
movl
lret
dec
gs
mov
mov
insl
adc
adcb
les
lock
aad
les
xchg
dec
scas
push
and
in
or
je
das
push
or
or
xchg
jo
gs
mov
nop
jmp
mov
push
loope
xor
and
in
adc
decl
stc
jmp
popf
ret
leave
arpl
sub
shll
lds
stos
xor
paddsb
test
rorl
xchg
jle
cmp
xchg
scas
ljmp
dec
pop
fildl
in
test
inc
dec
sub
je
push
dec
inc
test
shll
cltd
fs
jp
jecxz
loop
icebp
xor
fcomps
xchg
dec
test
or
lret
and
sarl
cmp
data16
cmp
into
xorb
repz
or
and
xor
clc
in
leave
jno
cli
mov
es
movsl
int3
lret
rcl
pusha
or
fcomi
sbb
adc
stos
ficoms
jg
daa
xor
in
mov
js,pt
les
and
sub
sbb
jmp
and
inc
dec
jnp
fwait
jmp
jb
cwtl
jbe
and
mov
mov
sub
iret
out
xlat
rorl
add
rorb
inc
pushl
fldt
test
clc
cmp
ret
and
xor
fsubrl
xlat
sbb
jo
jecxz
push
xchg
scas
testl
adc
dec
cmp
loopne
mov
or
aad
cs
test
loopne
adc
lods
adc
cmpsb
pop
push
enter
addr16
and
push
mov
adc
sti
cltd
inc
jmp
cwtl
rorb
jne
mov
inc
inc
loopne
jg
arpl
ret
mov
imul
aas
scas
fists
xor
in
lret
loopne
dec
inc
jne
scas
jle
mov
ret
jmp
stos
loop
loopne
notb
sub
jbe
fildl
push
ljmp
mov
sahf
dec
or
lcall
aaa
mov
in
and
and
rcll
cmp
jnp
jno
pushf
adc
push
fldcw
cmp
inc
xor
push
dec
ret
dec
mov
lea
out
mov
loope
xchg
out
test
loop
sub
pushf
jmp
popf
icebp
cmp
dec
xorl
mov
xor
xor
cmp
xlat
push
sbb
lock
push
test
vaddsd
inc
push
nop
cmpsl
mov
mov
mov
cs
clc
sti
icebp
fmul
scas
xor
adcb
mov
ds
pushf
jg
jo
mov
enter
loopne
or
mov
and
cmp
bound
sbb
out
dec
cld
or
mov
adc
mov
cmpsb
stos
mov
jo
cli
fsubl
sub
ds
or
fnstsw
cmp
push
jp
mov
aam
jp
mov
or
adc
fs
cli
mov
pop
loopne
and
stos
ds
test
ret
pop
imul
mov
adc
fmull
pop
popf
negb
mov
xor
out
or
jns
lret
pusha
cmp
and
jnp
outsl
lock
je
in
loope
or
xor
clc
jno
cltd
scas
addr16
ss
aas
push
gs
add
test
int3
ror
rcr
ja
orb
xor
jnp
sbb
pop
jl
push
mov
jbe
iret
insb
aad
jns
inc
sbb
inc
gs
scas
adc
addr16
mov
push
or
mov
inc
xchg
jecxz
pushf
or
mov
jmp
inc
mov
mov
stos
int3
pusha
pop
pop
adc
adc
inc
sahf
jae
insb
push
test
mov
enter
xor
adc
add
or
mov
xor
mov
sub
daa
push
ret
icebp
out
sub
cmpl
ret
nop
fs
mov
loope
clc
push
mov
inc
mov
add
cwtl
ret
pop
pop
add
adc
cmp
cmp
shlb
es
cltd
push
je
pop
pop
jbe
push
stos
ljmp
loop
jnp
ret
ds
jo
ljmp
mov
test
xchg
test
cmpsl
jo
push
push
cmp
xlat
movsb
scas
jae
mov
sbb
jle
pop
loope
inc
imul
lcall
xlat
jle
outsl
imul
lahf
pusha
out
inc
jb
fsubr
jns
xchg
dec
cmpsl
or
notb
inc
data16
sbb
jns
sub
xor
pop
add
mov
enter
or
cmp
push
push
aad
aad
fwait
test
or
imul
imul
sub
icebp
pop
mov
out
pop
nop
js
xchg
jecxz
xchg
mov
mov
sbb
ds
push
mov
inc
jp
cmp
shl
aam
pop
shlb
out
gs
pushf
jge
cmp
aad
sti
dec
hlt
and
inc
cwtl
pop
push
inc
nop
push
and
fdivrs
push
test
sub
push
mov
xor
xor
adc
test
and
mov
jle
and
pop
jne
cmp
and
loopne
into
sarl
push
test
cmp
rclb
jae
cwtl
stos
out
dec
inc
test
cli
ja
jg
loope
or
shrb
insl
std
in
daa
std
or
stos
movsl
loop
out
mov
repz
dec
add
add
add
cmpsb
das
in
xchg
test
sbb
xchg
jmp
test
iret
out
in
dec
dec
fbld
sbb
xchg
rclb
cmp
and
aad
jae
int3
push
jb
loope
pusha
mov
sbb
cli
mov
test
xchg
push
jmp
push
pusha
xchg
mov
and
sbb
jne
push
aas
pop
dec
fildl
sbb
pop
push
push
sbb
clc
cli
cmpsl
hlt
push
jg
lds
cltd
aad
push
nop
xlat
js
mov
pop
incb
xchg
dec
lret
mov
mov
push
fadds
sub
notl
dec
lret
mov
aaa
outsl
xor
push
xlat
xorb
inc
mov
andl
ficoml
adc
add
enter
int3
jecxz
jb
or
stos
mov
dec
jbe
scas
add
jno
adcl
stos
push
xchg
add
sbb
adc
cmp
dec
mov
popa
mov
adc
ds
cld
pop
mov
add
and
ljmp
xor
test
ss
sbb
cmp
adc
adc
mov
jne
stos
mov
or
adc
and
sub
or
add
jecxz
mov
or
inc
fwait
jmp
loop
and
and
outsb
mov
adc
cmp
wbinvd
adc
leave
sbb
insb
jl,pn
push
pushl
fistpl
sahf
dec
xchg
push
mov
iret
add
loop
jno
stc
cmp
cmpl
insb
cltd
jno
ret
bound
js
sbb
adc
jge
push
cmc
cltd
fcmovnb
jnp
ja
dec
ja
fdivl
movsl
xchg
xor
rcrl
test
jno
test
clc
add
add
sbb
notb
mov
mov
pop
loope
loope
push
jo
and
lea
xor
shlb
sub
mov
or
sub
dec
stos
pop
and
cli
cmovo
subl
sub
fisttps
mov
daa
repnz
aam
hlt
fst
mov
das
or
jb
or
out
xor
ss
lods
lods
dec
xlat
imul
mov
insl
arpl
dec
addl
mov
sbb
cmp
icebp
mov
lahf
out
movsl
fisubrs
lods
lret
in
mov
call
in
aaa
sti
xchg
ja
push
jp
sbb
cmc
dec
cmpb
jnp
imul
mov
lret
ja
ja
inc
mov
and
mov
stc
movsl
cmp
mov
jmp
or
andb
in
rclb
cwtl
fprem
stos
ds
push
pop
popf
mov
push
xor
paddsw
mov
shlb
mov
int
rorb
mov
sbb
out
and
ret
xchg
mov
push
jb
xchg
out
shrb
sti
sbb
shll
sti
test
dec
stos
mov
adc
mov
add
aas
pop
sub
or
xchg
das
into
nop
cmp
sub
cltd
lds
fsubrp
jnp
mov
push
shrb
jne
cmp
adc
push
in
ljmp
mov
jg
movsb
mov
int
or
mov
pop
repnz
mov
mov
mov
lret
sub
pop
sarl
scas
lahf
je
int3
push
cmp
ja
imul
sub
popf
movsl
mov
sbb
push
pop
or
call
inc
lahf
pop
div
inc
or
cs
jb
xor
or
cs
or
push
testl
mov
in
pop
gs
in
jb
out
test
push
in
fidivrs
inc
add
jmp
and
stos
std
or
or
sub
adc
mov
andl
xor
lds
mov
in
and
xchg
fistpll
cmp
mull
push
shlb
and
jmp
rcl
push
mov
fadds
adc
xchg
rorl
inc
popf
stos
mov
inc
cmpsb
repnz
mov
lea
sbb
add
dec
xchg
pop
cmp
js
or
scas
mov
xchg
fcmovbe
jnp
jnp
dec
jno
lods
idiv
int3
or
cld
mov
fidivrs
xor
mov
imul
mov
pop
sti
push
int3
push
jae
pushf
imul
shlb
loope
push
dec
add
insb
scas
mov
cmp
xchg
rorb
imul
test
dec
dec
je
sub
cmpl
fdiv
fsts
mov
dec
movb
mov
into
scas
lock
repz
gs
fs
imul
cmp
jg
mov
mov
stos
cwtl
or
cld
jl
fstps
out
mov
cwtl
mov
and
pop
addb
fistps
stc
add
fwait
pop
jl
xor
add
popf
loopne
and
js
sbb
pop
subw
fcoml
popf
mov
mov
inc
cmpsb
jl
data16
sarb
test
popf
jns
in
aas
pop
pop
inc
inc
push
scas
dec
aaa
lret
fcom
or
sbb
cmp
ss
leave
mov
pop
jecxz
mov
insl
push
xchg
xchg
xchg
fs
test
mov
dec
mov
pop
hlt
sub
adc
and
push
jne
push
sbb
push
xor
out
sbb
inc
stos
pop
hlt
pop
push
sbb
push
xchg
hlt
in
into
xor
xchg
sub
fmulp
daa
mov
inc
push
push
xchg
insb
dec
dec
je
arpl
out
sub
cld
mov
arpl
flds
xchg
je
adc
or
enter
inc
ret
adc
pop
push
scas
xor
std
or
mov
lea
xchg
fildl
int3
loopne
dec
mov
add
insl
aaa
enter
loope
jge
fdivr
bound
fdivl
rolb
mov
xor
sahf
add
dec
aad
lds
mov
movsl
push
xchg
push
test
jne
gs
push
fiadds
xor
sahf
add
dec
aad
lds
mov
movsl
push
xchg
push
test
jne
sub
scas
xor
lahf
add
inc
aad
lds
mov
movsl
or
shlb
push
testb
and
outsb
or
mov
cmp
loope
int3
int3
int3
int3
int3
cmp
sub
sbb
or
jb
sbb
cmp
sub
mov
xor
fdivl
pusha
cmp
sub
sbb
or
jl
insb
rcrb
mov
xor
fdivl
int3
pusha
cmp
sub
sbb
or
jl
insb
rcrb
mov
push
mov
das
xchg
add
fildll
jle
cmp
insb
and
sub
or
movsl
ja
cld
lret
push
js
mov
jmp
push
call
mov
adc
or
frstor
xor
enter
inc
test
and
adc
mov
or
in
jmp
out
pop
push
cmpb
sub
mov
mov
lret
mov
jo
cmp
ret
jo
jg
xor
addr16
in
arpl
add
mov
ret
push
adc
pop
in
pop
test
movl
fs
and
inc
in
xchg
movsb
popa
bound
or
jl
insb
rcrb
mov
xor
fdivl
or
inc
cmpb
leave
adc
mov
jne
je
pop
loopne
cltd
xor
and
nop
pop
orb
cmp
dec
loopne
push
leave
dec
cltd
xor
xor
dec
shll
or
rcrb
mov
xor
fdivl
pusha
cmp
sub
sbb
or
jl
insb
rcrb
mov
xor
fdivl
pusha
cmp
mov
cmpsl
add
out
sbb
and
mov
mov
ffree
cmp
dec
ljmp
lret
mov
push
rol
js
movsb
push
cmc
daa
out
adc
ja
addr16
jg
dec
adc
orb
mov
arpl
fisubs
push
pop
sub
mov
xor
call
ja,pn
xor
mov
inc
sbb
xchg
cmp
fcmove
ds
imul
repnz
movsl
mov
jnp
jns
cmp
cmp
movsb
test
pop
sub
outsb
sub
movsb
push
int3
adc
jns
push
maskmovq
testl
in
inc
pusha
inc
mov
or
xchg
shll
stos
aas
fmull
fsts
dec
cmp
adc
sbb
mov
in
add
mov
xchg
add
dec
outsb
pop
pop
inc
es
jmp
xchg
enter
out
hlt
popf
orl
aaa
xchg
xlat
xchg
faddl
loope
jl
fldcw
adc
data16
pop
jae
sarl
adc
cmp
jle
js
xor
pop
push
shr
jg
pop
daa
popa
inc
lea
gs
rcl
in
nop
mov
dec
push
pop
into
popf
adc
xchg
pusha
lahf
je
orb
pop
sub
jbe
data16
iret
mov
add
rorb
insl
enter
mov
dec
or
jmp
movsl
pusha
pop
in
aam
mov
pop
pop
fsub
pop
arpl
inc
or
sbb
rcrl
mov
or
sbb
lret
faddl
xor
mov
mov
sbb
cmp
cli
cmp
hlt
sahf
mov
pop
push
xchg
stc
dec
push
es
jecxz
mov
ja
inc
fwait
lret
scas
inc
fidivl
xchg
xor
in
daa
sbb
xlat
cltd
xchg
add
sar
arpl
dec
mov
test
pop
xor
sbb
mov
movsl
gs
pushf
rorb
cli
mov
and
mov
and
imul
outsl
jl
adc
popa
ffreep
outsb
pop
push
dec
out
mov
cmp
addr16
pusha
cwtl
xlat
mov
adc
into
aas
fadds
gs
pop
push
jmp
xorl
pop
cmp
aad
mov
pop
stc
and
addl
mov
in
jnp
mov
add
xor
scas
xor
mov
insl
dec
inc
pop
mov
sub
fstp
pop
in
mov
xlat
out
subb
sti
int
and
inc
adc
daa
testl
test
imul
icebp
psubw
pop
lds
jge
inc
pop
popf
mov
lods
inc
sub
pop
mov
ficompl
shlb
sbb
ja
or
jns
stc
and
sbb
pushf
adc
mov
ja
mov
fiadds
sub
mov
jns
icebp
push
inc
nop
mov
int
sbb
les
test
cmp
fildll
popf
inc
test
in
aad
jo
mov
out
testb
pop
push
sbb
inc
insb
xchg
orb
xchg
call
lods
dec
out
aam
fcos
shlb
or
sti
xor
movsl
sbb
and
add
add
xchg
ret
test
nop
push
inc
add
out
mov
mov
cwtl
push
sbb
rcrb
jl
faddp
cmp
mov
sbb
adc
jne
ljmp
js,pt
push
pop
or
push
mov
push
jg
test
mov
pop
push
adc
in
int3
adc
xchg
inc
aam
cmp
sub
xor
push
pop
inc
push
inc
dec
jl
inc
dec
mov
out
pop
icebp
inc
aas
mov
cld
inc
inc
jp
and
rcll
fnstsw
push
sti
lods
aaa
mov
jns
mov
xor
roll
cmp
lcall
and
inc
fs
dec
outsb
mov
loopne
int
out
aad
mov
jl
ja
mov
inc
add
rcrl
mov
push
mov
sahf
std
push
int
aam
push
jno
adc
out
into
cmp
cmc
int
out
negb
das
sub
data16
pusha
pop
fdivs
sbb
cmc
imul
inc
cs
daa
filds
xchg
sub
fisubs
mov
or
dec
xchg
outsb
clc
lock
je
pop
stc
inc
xchg
dec
and
add
inc
jns
aam
fisubs
adc
or
hlt
push
pop
xlat
push
adc
aam
popa
js
int3
dec
leave
or
push
gs
mov
push
adc
ror
scas
jmp
push
and
sub
or
or
int
adcb
ret
dec
daa
xor
dec
stos
cli
fcoml
jb
pop
add
test
out
push
adc
push
cltd
sti
sub
mov
nop
stos
mov
xchg
ss
add
add
mov
pushf
iret
mov
mov
ja
push
mov
inc
test
jg
push
inc
xchg
sub
push
stos
lahf
ljmp
and
inc
and
orl
and
scas
dec
mov
test
jo
ljmp
cmp
outsb
cmp
xchg
mov
ja
bound
pop
sub
out
jns
dec
ret
jecxz
orb
outsl
arpl
outsb
mov
mov
fs
in
daa
mov
cwtl
jmp
ss
xor
fiadds
stos
xor
cmc
and
lret
jge
jl
fwait
push
sub
es
jb
xor
or
mov
pushf
pop
icebp
jle
inc
ficoms
jecxz
jge
ljmp
mov
jae
inc
gs
loope
mov
push
cltd
sbb
xchg
pop
sbb
push
xchg
mov
fstpl
push
lds
push
shll
cmp
push
cmp
pop
or
scas
mov
mov
data16
mov
push
es
mov
mov
mov
mov
mov
ud1
mov
jmp
push
pop
aad
cmpsl
lds
test
shlb
cmp
test
sar
adc
sbb
fidivrl
pushf
xchg
nop
mov
out
mov
pavgb
out
lock
mov
fmull
jge
inc
test
xchg
rcrb
lods
xchg
lret
or
cmp
rcll
mov
xchg
xchg
sbb
pushf
mov
es
cmpsb
mull
stos
jno
mov
leave
mov
inc
lods
int
push
jmp
rorb
fldcw
je
pop
lret
mov
cmpsb
inc
movsb
mov
rolb
test
jmp
lahf
jmp
imul
lret
pop
push
stc
addr16
push
cmp
icebp
fdivs
ds
js
pop
mov
int
mov
test
add
cs
shrb
loope
or
cmpsb
xchg
xchg
loop
adc
ja
pop
dec
lods
sahf
mov
subb
jg
inc
sbb
fisttpll
xor
push
or
cmp
jl
imul
pop
negb
adc
push
cltd
test
insl
or
jo
imulb
pop
mov
jbe
and
fsubs
mov
cmp
inc
or
insl
aaa
lods
arpl
out
mov
jnp
insl
pusha
pop
add
pop
jae
rorb
or
push
dec
out
sbbl
lock
inc
mov
icebp
pop
add
in
sbb
mov
dec
mov
push
sub
data16
mov
or
mov
inc
mov
or
fs
jo
jno
or
loop
push
scas
pop
mov
fstps
stos
jp
js
out
roll
roll
insb
arpl
and
cmp
xor
cmp
into
and
dec
dec
bound
or
ret
lret
add
fsubs
outsl
cmp
xor
int
adc
in
negl
inc
xchg
pop
mov
adc
mov
scas
mov
add
or
xlat
outsb
cmp
push
mov
ds
and
add
fiadds
and
dec
jp
lods
ret
mov
std
test
ss
in
pushf
xor
mov
aam
sbb
lcall
mov
cld
push
in
or
insb
movsl
mov
mov
xchg
dec
sub
xor
inc
scas
mov
lock
gs
add
out
xchg
pop
dec
jp
scas
push
jnp
sbb
daa
xlat
push
fcmovu
inc
pop
adc
scas
cmc
pusha
pop
dec
pop
scas
sti
jg
add
or
sbb
lret
aas
sbb
jae
data16
mov
mov
scas
jo
xchg
in
jbe
mov
mov
jo
dec
sti
test
jmp
xchg
cmpsl
cmpsb
cmp
ficomps
fldenv
and
add
jecxz
pop
xchg
cmp
sbb
enter
jo
sbb
arpl
pop
rolb
out
mov
js
push
loope
and
aam
pop
orb
out
mov
sbbb
mov
stc
stc
and
xor
mov
add
insb
mov
mov
mov
dec
decl
push
lret
xor
cmp
cmp
fwait
mov
or
adcb
add
push
mov
jg
cmp
fildll
adc
mov
dec
aad
inc
in
dec
mov
dec
repz
ficoms
jge
push
rcll
scas
mov
frstor
cmp
test
cmpl
fstpt
mov
adc
aaa
fisubs
jns
and
cmpb
es
lret
inc
cmpsl
mov
push
jno
shrl
jbe
repnz
add
addr16
adc
das
mov
mov
adc
outsl
fadds
clc
mov
push
inc
mov
clts
adc
loop
inc
pop
or
cltd
movl
pop
mov
dec
shlb
sbb
mov
xchg
dec
dec
movsb
push
dec
inc
imulb
stos
mov
inc
out
jne
xchg
scas
lea
aam
inc
jle
inc
filds
loop
pinsrw
daa
sbb
push
mov
addr16
iret
sub
push
ds
hlt
mov
xchg
test
push
xchg
lods
rorb
dec
and
out
cld
out
flds
gs
pop
pop
cmp
fxch
ljmp
lds
mov
lods
xchg
sbb
jnp
repz
adc
cmp
cwtl
test
popa
insl
lret
pop
testl
clc
xchg
push
into
and
fwait
loope
xchg
or
jnp
out
inc
mov
cmp
outsb
or
aas
sbb
cmpsb
flds
repz
or
inc
cmp
lcall
out
loop
loopne
mov
fnstcw
es
jecxz
fldenv
sbb
mov
outsb
test
jl
inc
inc
stos
cli
in
and
or
cs
or
shrl
dec
xchg
loope
and
fstpl
in
add
dec
cmc
popf
jl
inc
aaa
xchg
in
aam
mov
fcom
in
and
rcrw
gs
cmp
adc
pop
xor
popf
mov
fdivrl
dec
shll
or
incb
push
sbb
lods
sub
cmpsl
sbb
add
adc
aam
mov
jge
dec
add
stos
inc
fldcw
cmc
jne
pop
fildll
pop
fnstsw
adc
mov
pop
jno
mov
jg
mov
out
mov
push
adc
and
mov
cmp
aam
adc
xor
roll
or
cltd
fwait
sbb
jmp
bound
sbb
insl
dec
push
popa
data16
jne
push
mov
adc
gs
fsts
out
add
add
insb
mov
adc
pop
push
mov
jmp
mov
test
loop
add
scas
cmp
loop
push
jmp
dec
in
inc
sub
mov
leave
pop
push
orb
mov
jecxz
jbe
or
xor
mov
sti
data16
in
or
xchg
leave
xor
push
push
inc
push
push
cmp
out
popa
loope
ret
ret
insl
call
out
inc
pushl
jl
roll
adc
inc
xchg
mov
sub
mov
jge
mov
shrb
pop
xor
jg
stos
adcl
xchg
imul
jecxz
adc
mov
mov
inc
nop
aas
mov
pop
fistps
hlt
gs
lds
or
scas
imul
xchg
stos
rclb
and
mov
sbb
add
xor
sbb
push
mov
shrl
cmpsb
pop
mov
add
orl
sbb
shl
int
pop
popl
iret
into
push
ficomps
fldenv
sbb
out
jno
js
sbb
stos
jmp
scas
pop
ss
sub
xchg
xchg
or
data16
jnp
mov
adc
adc
xorl
xorl
cmpsl
pushl
je
lahf
lea
xchg
out
push
jnp
jmp
add
push
adcb
imul
push
leave
sbb
out
jecxz
push
xchg
xlat
dec
adc
or
mov
adc
pop
in
cmp
out
int
nop
cmc
les
cmp
push
lcall
lds
pop
push
lret
pop
mov
xchg
je
movb
ds
inc
cmp
testb
out
rcrb
jnp
dec
cli
mov
in
xor
mov
mov
loope
add
jge
repnz
xchg
pusha
lods
push
push
or
push
subl
sbb
cmpb
xchg
ret
inc
scas
xor
sbb
lods
or
mov
jne
adc
xor
arpl
into
mov
sbb
cwtl
push
and
fwait
push
cmpsb
aam
fiadds
and
inc
es
je
stos
push
dec
ja
clc
cmp
in
les
fiaddl
ret
xchg
fcmovu
pop
pop
arpl
sahf
mov
scas
cmp
out
pop
out
iret
cmp
movsl
shll
mov
sahf
imul
cld
stos
repz
scas
jb
inc
sbb
out
and
sub
or
fsubs
shrb
popa
cli
gs
cmp
jo
outsl
pusha
and
inc
out
push
cli
inc
out
hlt
shlb
inc
adc
and
push
nop
adc
outsb
or
mov
push
lods
sti
daa
cltd
in
mov
push
add
add
or
pop
push
cld
inc
std
and
dec
cmp
adc
xchg
cmp
rol
aaa
xor
fsubrs
adc
xchg
jl
jne
xchg
cs
faddl
icebp
incl
adc
dec
inc
sbb
adc
add
pop
lret
shll
cltd
mov
es
insl
mov
jnp
sbb
sub
sub
push
sub
mov
pop
inc
shll
sbb
das
pop
jbe
mov
fwait
dec
inc
push
cmp
push
ds
add
adc
movsl
cmp
popa
xchg
fdivrs
mov
scas
lock
jo
mov
inc
mov
jae
lahf
cmp
sub
pop
out
stc
cwtl
inc
pmuludq
leave
jne
les
cmp
fwait
mov
xor
push
xchg
and
ja
imul
out
xor
jo
andb
flds
dec
bswap
cmp
ret
test
jo
cmp
push
subl
rcr
movsb
mov
fninit
mov
xchg
jne
jb
lds
push
cld
shrl
mov
test
shll
arpl
or
scas
xor
out
lods
insl
mov
push
ljmp
arpl
xor
repz
test
gs
or
xor
notb
xor
pop
rorb
iret
pop
adc
dec
adc
pop
cwtl
xor
sub
stos
adc
xlat
das
cmp
cli
es
cltd
in
pop
dec
push
into
gs
cmp
cmc
or
mov
es
rcll
popa
out
orl
mov
cmp
sub
addb
push
sbb
dec
pop
inc
inc
mov
mov
mov
paddusb
cli
sub
cmpl
pop
in
outsl
roll
mov
outsb
push
int
aas
push
lcall
jge
or
or
cmpsl
adc
cmpsb
mov
jne
mov
push
lahf
rcll
jecxz
fsubl
nop
mov
pop
lahf
div
push
xchg
dec
dec
push
imul
xor
das
inc
sub
fcmovnbe
mov
aad
mov
std
call
cwtl
jae
sbb
and
repnz
iret
pop
imul
in
pop
adc
inc
nop
pushf
sub
inc
movsb
mov
push
lea
xor
mov
inc
mov
js
dec
pusha
mov
rol
sub
sbb
out
insb
lods
cmp
add
cmp
lds
dec
push
fistps
pop
leave
dec
cli
lock
push
pop
test
or
int
cli
mov
repnz
pop
cld
sbb
ss
pop
push
xchg
dec
sbb
xchg
scas
jge
mov
dec
pusha
sbb
stc
adc
movsb
jnp
push
jne
hlt
add
push
xchg
or
cs
fs
push
mov
push
outsb
jg
decw
cmc
xchg
pop
ret
dec
out
adc
cmp
sub
data16
jge
adcb
push
jge
and
jae
repz
xchg
rcll
mov
mov
mov
es
inc
jl
push
sbb
gs
jge
pop
xor
loopne
rcrl
push
mov
push
mov
add
sub
std
addb
into
stos
js
xor
outsb
or
sub
sbbl
insl
movsl
sbb
mov
dec
ficomps
pusha
scas
fsubrs
aas
push
test
xchg
jbe
les
mov
mov
movsl
jle
mov
inc
mov
out
mov
mov
xor
adc
inc
lea
gs
or
std
cmp
mov
xor
dec
test
push
mov
lods
mov
push
push
jle
push
push
mov
fidivrl
andl
rcll
daa
ljmp
in
mov
inc
or
add
jge
clc
pop
lods
mov
jo
pop
out
icebp
out
lahf
cld
push
std
rorl
mov
out
sub
mov
inc
fcoml
mov
cli
xchg
xchg
add
lods
stc
mov
loope
adc
loop
xor
xlat
out
adc
add
idivl
sbb
xchg
ret
in
xchg
lahf
jecxz
and
ja
daa
xor
jo
mov
jle
lods
fidivrl
sub
addr16
sahf
gs
dec
push
jne
xchg
iret
sub
loope
dec
adc
test
mov
or
or
sub
out
sub
push
and
push
scas
cmpsl
clc
enter
movsb
aad
mov
imul
sub
icebp
sbb
addl
and
int3
lret
push
repz
and
les
jne
mov
mov
sub
xor
dec
adc
inc
jo
jb
cmp
or
nop
fwait
inc
sub
push
loop
out
mov
adc
inc
test
outsb
xorl
inc
outsl
fwait
test
cmpl
inc
out
push
jl
sub
jne
push
dec
mov
adc
or
pop
scas
sti
lahf
jo
data16
arpl
mov
insl
push
out
aas
xor
inc
adc
push
fs
insl
cmp
mov
xor
add
arpl
or
inc
mov
arpl
hlt
dec
je
lret
xchg
cmpsb
cli
fcomps
aad
or
test
and
out
imull
jno
inc
jns
mov
clc
rolb
imul
mov
mov
inc
pushf
jns
leave
gs
sarl
cmp
push
rolb
dec
les
pop
sarl
outsb
ror
insb
pop
into
test
or
in
aas
loope
adc
or
sub
adc
fcoms
mov
stos
loopne
mov
mov
in
lret
out
adc
or
push
inc
lods
cli
repz
ds
mov
xchg
leave
lcall
lret
daa
stos
test
inc
faddp
pop
or
inc
addr16
out
in
out
mov
filds
inc
in
jb
movsl
push
or
adc
push
inc
add
repz
fs
negb
js
sahf
in
call
jle
push
xchg
pop
jns
shrl
bound
or
out
addl
push
out
sbb
out
in
dec
mov
inc
ret
scas
add
clc
pusha
dec
cwtl
xchg
adc
dec
test
add
mov
faddp
mov
and
sub
mov
dec
rcl
add
aad
movsl
cmp
pop
in
mov
pop
data16
pusha
xchg
out
push
adc
cmp
rolb
mov
xor
jge
adc
cld
cmp
push
xchg
aad
stos
xor
add
add
xchg
lods
jnp
lret
mov
inc
je
inc
xchg
mov
outsb
mov
mov
lock
adc
dec
lahf
divb
add
sbb
sub
mov
mov
sub
in
sbb
xor
and
addr16
cmp
popa
pushf
push
cwtl
test
out
sbb
mov
mov
or
xor
mov
cwtl
mov
pop
out
pop
jg
out
pop
jnp
mov
roll
fs
testl
shrl
pop
jnp
pop
into
subl
fcomi
adc
enter
jl
mov
inc
and
cmp
loop
inc
pop
in
rcll
or
adc
mov
push
scas
in
out
insl
or
lea
mov
mov
sub
gs
mov
fwait
jne
and
jns
sub
xor
ret
push
sub
mov
jl
push
ret
adc
jg
sub
outsl
dec
adc
out
lret
jo
jb
pop
mov
add
ja
mov
je
lret
data16
arpl
pusha
adc
cmp
je
stc
sub
sub
push
add
pushf
lahf
cs
rolb
int
sbb
pop
mov
mov
insl
cmp
lds
jg
jg
call
sub
lock
and
sbb
or
jl
insb
rcrb
mov
xor
fdivl
pusha
cmp
sub
sbb
or
jl
insb
rcrb
mov
xor
fdivl
pusha
cmp
sub
sbb
or
jl
insb
inc
pop
lock
loopne
nop
lods
add
in
inc
fdivl
pusha
cmp
sub
sbb
or
jl
insb
rcrb
mov
xor
and
int3
int3
int3
push
mov
push
push
xor
mov
call
mov
mov
mov
push
add
push
mov
push
mov
push
add
push
mov
mov
mov
mov
mov
mov
push
push
push
push
pushl
pushl
push
call
mov
mov
mov
movzbl
sub
je
call
mov
add
inc
cmp
mov
jne
movzbl
jmp
pushl
pushl
call
pushl
call
push
pop
pop
pop
ret
cmp
sub
sbb
or
jb
or
fiadds
mov
arpl
mov
aaa
lret
daa
cmp
sub
sbb
or
jnp
imul
pop
stos
inc
fwait
ja
addr16
gs
into
sub
sbb
or
jnp
imul
push
mov
out
adc
pop
cwtl
jae
inc
mov
mov
xchg
bound
mov
rorb
orb
jae
fs
pusha
mov
enter
xlat
aam
in
divb
cmpsl
dec
mov
mov
lods
ja
pop
lcall
les
cs
lods
xchg
test
add
sbb
pusha
mov
cmp
or
adc
dec
and
es
stos
sub
andb
inc
aaa
push
or
xchg
test
repnz
mov
mov
fisubrs
fs
mov
and
hlt
insl
push
sbb
pop
idiv
aas
out
sub
pop
aas
mov
and
shrb
sbb
or
jnp
imul
push
stos
pop
fwait
outsb
mov
por
fldt
dec
mov
xchg
dec
sbbb
add
xor
iret
ret
into
inc
call
jb
add
dec
mov
dec
mov
xchg
and
push
ret
push
xchg
leave
and
and
adc
pop
mov
mov
pop
xchg
outsb
mov
pop
mov
cmpsl
mov
ja
addr16
pop
jmp
lret
daa
cmp
sub
sbb
or
jnp
imul
push
stos
inc
fwait
ja
addr16
pop
jmp
lret
daa
cmp
dec
aam
jo
in
sbb
and
lea
inc
out
pusha
jle
repz
aam
mov
cmp
repz
lock
in
fmuls
push
xchg
mov
out
data16
cli
enter
mov
mov
inc
test
aaa
sub
jne
add
sub
sub
insl
cmpsb
icebp
aas
int3
add
jecxz
and
cmc
shrl
mov
insb
adc
add
ficompl
fldt
mov
incb
jbe
stc
mov
sub
sub
sbb
jmp
popf
hlt
inc
push
clc
lea
xor
repz
push
mov
lds
jne
ja
mov
bswap
jae
fs
cs
mov
cmp
lods
addr16
sbb
fwait
in
bound
jge
lret
imul
adcl
inc
out
scas
mov
shr
add
xor
ffree
fs
cltd
jecxz,pt
push
adc
mov
cltd
imul
das
fldt
call
out
jne
mov
adc
jl
inc
jp
sbb
test
scas
popa
mov
ljmp
data16
sahf
sbb
xchg
imul
or
xor
and
push
insl
jl
frstor
fdivrs
test
fstpl
popa
jl
and
aaa
insb
sub
inc
or
lods
lods
jae
out
test
xchg
pop
pop
movsb
mov
mov
outsb
jecxz
aaa
outsb
mov
out
out
xorb
jmp
fprem
fisubs
iret
fisttpl
push
or
mov
movsb
into
mov
and
enter
sbb
xchg
adc
or
sub
jo
inc
cs
mov
sub
dec
mov
cmp
idivl
jbe
mov
out
arpl
loop
mov
pushf
pop
jmp
lcall
es
jg
ljmp
pop
push
arpl
push
fmuls
pushf
xlat
sbb
out
sti
or
xchg
lahf
sbb
and
dec
mov
scas
add
mov
aad
das
lret
jbe
mov
adc
ljmp
mov
add
call
push
pop
mov
mov
cmp
and
std
test
fwait
add
mov
jge
test
jno
pop
mov
fs
lcall
inc
and
rolb
in
pop
mov
jecxz
inc
insl
push
lret
jae
int3
or
xor
mov
fcoml
mov
pop
and
xchg
pop
outsb
xchg
push
and
testb
pop
call
pop
adc
mov
inc
ljmp
arpl
dec
dec
movsb
cmp
push
sub
gs
inc
push
cmp
or
xlat
cmpb
stos
fs
mov
mov
dec
bound
std
jae
sub
scas
or
mov
mov
adc
mov
in
cmp
ljmp
outsl
xadd
xor
ror
lods
and
dec
lock
jl,pt
sub
mov
ds
xchg
xchg
insb
cmpsb
jecxz
ret
nop
mov
xor
imul
jae
outsl
push
test
jg
cli
hlt
scas
fsubl
or
ror
add
out
adc
pop
cmpsb
shlb
mov
mov
inc
fsubrs
repz
push
lret
sbb
add
jb
or
sub
ss
push
adc
dec
dec
divl
sti
lcall
pop
push
fistps
cli
push
lock
inc
call
imul
xchg
xor
mov
repnz
xchg
sub
push
test
or
int3
das
addr16
add
daa
mov
jbe
enter
cmp
jmp
sub
sbbl
pop
sub
aam
jo
sahf
dec
mov
mov
push
jl
out
int3
loopne
test
in
inc
mov
dec
in
add
mov
pop
push
mov
mov
test
ss
fidivl
sub
int
jo
cmpsb
xchg
xchg
fs
or
mov
push
ret
xchg
sarl
jns
xchg
popfw
dec
stos
mov
adc
outsb
mov
in
out
jnp
out
xlat
push
sbb
div
inc
add
cmp
mov
mov
das
push
push
add
xorb
call
pop
cld
mov
mov
dec
or
or
inc
rcll
adcl
pop
cmp
out
insb
aas
cmc
add
ss
testb
sti
cmp
fsubl
jmp
shrl
sub
push
scas
lock
xor
bound
orb
mov
add
dec
push
push
xor
or
xor
jo
mov
adc
lahf
adc
subl
out
sub
dec
outsb
loop
xor
lret
jae
adc
cmp
add
scas
push
sbb
sbb
mov
fisttpll
test
xchg
insb
mov
xchg
xchg
inc
in
pop
scas
mov
in
cmc
pop
out
mov
cmp
fmull
xlat
pop
dec
shll
leave
dec
and
mov
lock
push
jo
adc
lret
insl
inc
mov
dec
cmp
sub
stc
loope
cmp
inc
mov
or
out
in
dec
pop
cltd
nop
je
pop
add
pop
mov
pop
lcall
sbb
aad
imul
sub
divl
rorl
adc
fstpl
sbb
sti
outsb
pop
popa
xlat
adc
in
mov
xor
pushf
pop
add
push
orb
add
xchg
rcll
dec
lret
mov
pop
push
sub
mov
rclb
mov
jmp
js
add
jns
mov
push
and
mov
je
jg
arpl
out
and
fdivr
sarb
lds
fs
cmp
mov
cld
jle
mov
test
add
lea
jg
mov
adc
ja
push
push
mov
cmp
xor
out
imul
inc
and
lea
mov
sbb
bound
cmp
pop
mov
popl
mov
sbb
pop
out
fs
jnp
into
and
xor
out
mov
mov
insb
loop
repnz
xor
sbbb
jae
mov
out
mov
jo
out
data16
sbb
add
inc
nop
adc
adcb
movsb
or
cli
mov
push
pop
lods
cmp
xchg
lds
sub
mov
outsl
push
fs
xor
popa
pop
rep
pusha
mov
sbb
dec
inc
jae
xchg
cmpsb
clc
add
insl
dec
mov
jl
xorl
dec
movsl
push
bnd
iret
adc
jp,pn
cltd
mov
xor
imul
sub
xchg
add
into
into
xor
cmc
jmp
push
js
jmp
lds
into
inc
sbb
jbe
pop
mov
mov
les
fistpll
cmp
out
ret
andl
imul
nop
push
push
adc
sbb
adc
and
and
and
xchg
outsl
js
fidivrl
aad
and
sbb
lret
stos
jo
insb
adcw
push
sbb
loopne
int
jg
jo
data16
lret
mov
mov
out
push
mov
adc
adc
nop
stc
mov
int3
adc
sub
or
call
sarl
jnp
dec
mov
jmp
stc
movb
or
jo
test
adc
cmp
mulb
inc
mov
xchg
fnstsw
ror
dec
call
sbb
dec
xor
or
mov
insl
nop
std
xchg
push
outsb
arpl
stc
bound
addr16
or
dec
lods
push
and
xchg
mov
mov
shll
fdivl
cs
cmpsl
adc
sub
ficoml
inc
sub
cmp
sti
je,pt
stos
xchg
cmp
push
lahf
mov
clc
xor
test
jl
fidivrs
rcrl
jle
lea
inc
leave
jbe
iret
lods
lahf
xchg
push
lret
mov
pop
repz
test
mov
stc
pop
adc
loope
cmc
fcompl
sub
cmp
cltd
mov
cmp
out
leave
movsb
cwtl
stc
and
adc
es
cmpsb
or
aad
mov
sbb
es
jmp
or
icebp
pop
jl
push
das
cmpsl
pop
sub
popa
addb
add
mov
and
stos
sbb
cmp
mov
cmp
or
fadd
xor
sbb
mov
fimuls
cwtl
sub
dec
repz
das
je
xchg
js
mov
repz
add
push
inc
xchg
inc
stos
xchg
mov
cs
pop
cmp
add
pop
loopne
ds
fnsave
xor
mov
mov
aam
or
push
xor
push
add
test
xchg
iret
pop
jge
mov
add
sarb
imul
pop
pop
jae
popf
or
or
cmpsb
pop
mov
add
dec
sbb
add
in
sbb
lret
arpl
sub
and
dec
adc
jge
push
in
inc
lahf
pop
loope
sub
insl
adc
repz
add
adc
inc
sbb
xchg
mov
xor
add
sub
int3
add
insl
shll
insb
mov
pushf
jmp
ja
xor
repz
fs
in
fidivl
fstpl
ja
adc
call
jmp
aas
sub
cmp
and
inc
insl
divb
rclb
adc
sbb
adc
push
jl
repz
xchg
call
pop
int3
in
mov
dec
subb
inc
lock
add
or
outsb
imul
push
sbb
gs
mov
jns
adc
xor
sbb
or
lcall
dec
xor
jp
pop
shrb
mov
lds
adc
jno
push
add
movsl
mov
cltd
push
push
in
mov
xchg
fwait
and
daa
fsubl
arpl
mov
jb
jl
cmp
push
stos
js
pop
jl
inc
popf
mov
pushf
sub
aad
sub
sbb
push
hlt
xchg
push
mov
clc
fmull
mov
xchg
cmpb
mov
gs
cmpsb
fidivrl
sbb
xlat
shlb
gs
mov
push
pop
jg
xor
jl
lahf
push
cli
ret
mov
iret
mov
xchg
les
mov
push
cld
ljmpw
push
outsb
push
test
or
inc
cmpsb
pop
cs
ret
rcrl
sbb
or
test
sub
cwtl
out
popf
jmp
push
int3
rcr
sbb
lods
int
push
adc
pop
xor
faddl
mov
or
jle
and
push
adc
sbb
jo
into
into
cltd
sbb
into
lds
pop
negl
sub
pop
jmp
xchg
jnp
and
aas
xor
cmp
out
int3
femms
jne
inc
imul
adc
sub
stos
loop
repz
mov
out
not
insb
mov
lcall
arpl
es
push
scas
hlt
push
dec
daa
das
pop
sti
mov
repz
sbb
hlt
or
imul
mov
std
add
cld
lea
daa
jmp
inc
into
daa
out
insl
ss
cmp
sbb
sarl
les
popw
arpl
pop
mov
loope
and
jecxz
enter
sub
fwait
jb
adc
mov
mov
retw
push
sub
sub
xchg
stc
lea
cmp
mov
and
call
shll
xchg
test
xor
in
enter
sub
lods
jno
in
cld
mov
sbb
sbb
and
mov
xor
add
ljmp
gs
icebp
movsb
and
lods
mov
mov
inc
dec
xlat
xor
stos
jo
xor
mov
inc
pop
mov
jge
js
push
or
pop
pushf
push
call
lret
ljmp
imul
lahf
add
and
and
pop
pop
sbb
adc
in
sub
jl
jne
xor
stc
outsl
cli
add
out
add
test
dec
lret
scas
dec
cltd
sarl
test
xchg
test
orb
rcr
xchg
fwait
add
adc
fcmovu
rcl
ret
enter
dec
repz
test
sub
add
push
pop
cmp
out
fstpl
add
mov
inc
jmp
xor
mov
imul
stos
sbb
adc
imul
mov
movsb
xorb
mov
mov
aas
shrl
movd
sbb
test
xchg
ret
lcall
ja
mov
adc
xchg
fdivrl
cld
push
push
pop
and
out
cmp
mov
and
daa
mov
mov
cmp
test
ret
mov
cmp
andb
cmpsb
xor
pop
inc
lahf
movsb
xor
int
dec
push
lods
out
enter
jb
scas
lods
xor
push
push
cmp
lock
popa
push
adc
xor
xor
fabs
jp
cltd
add
rorb
ss
cli
xchg
out
scas
jmp
nop
pop
push
dec
outsb
stc
daa
push
iret
fyl2x
sahf
mov
push
lahf
aad
sub
mov
pop
in
fwait
mov
jle
in
push
push
sub
lahf
mov
fldl
clc
add
mov
mov
dec
lcall
push
sub
movsb
js
test
mov
jne
jnp
sub
repz
insl
inc
mov
mov
mov
popa
push
jge
mov
fnstsw
ljmp
jb
imul
data16
loopne
mov
cmpsb
add
iret
mov
pop
out
sbbl
xchg
fcomip
lret
push
cmp
cmp
push
inc
adc
and
in
mov
and
sbb
dec
push
ja
sub
add
fwait
xor
insl
popa
push
sahf
mov
mov
add
add
cld
adc
sbb
inc
addr16
xchg
into
xor
in
int
loop
ljmp
pop
pop
adc
and
push
icebp
sarl
jbe
inc
into
push
xor
dec
pushf
ja
jp
xor
pop
scas
xor
sub
in
hlt
iret
pop
fs
pushf
fldt
cmpsl
fimull
flds
jmp
inc
ret
test
ja
fnstcw
insl
aad
and
xchg
pop
jb
out
scas
sahf
jns
and
shll
mov
pushf
insb
xchg
dec
cwtl
ja
rcll
insl
push
and
cmp
and
or
cli
dec
mov
out
jbe,pn
jne
pushf
mov
xor
stos
cmp
imul
adc
lods
cltd
jmp
or
mov
or
lret
mov
dec
je
stos
mov
rorl
in
cld
jecxz
andl
sub
ljmp
pop
inc
mov
jg
sub
mov
mul
jne
in
stos
loopne
out
arpl
jno
arpl
scas
ds
or
test
adc
fsts
test
jno
popf
bound
xor
imul
pop
movsl
icebp
sbb
aas
outsl
in
jnp
into
fisubl
sub
jmp
out
xor
jg
add
into
mov
adc
dec
clc
sarl
mov
fisubrl
ret
jl
push
pop
sub
inc
dec
andl
push
fsubrs
push
dec
icebp
push
rcl
sub
sbb
aaa
ror
test
sahf
push
mov
dec
jp
in
fdivr
add
dec
cs
push
mov
push
xchg
pusha
lea
and
repz
es
out
lea
sbb
scas
lea
shrb
ror
mov
pop
stc
inc
jmp
daa
cli
push
fstp
ja
loope
loope
jae
jp
push
ret
ds
insb
fs
mov
adc
lds
xchg
adcb
xchg
xor
cmc
cmp
imul
ja
lahf
pushf
push
scas
lcall
mov
mov
rcll
cmp
fcmovnu
inc
jl
xchg
add
andl
inc
js
xchg
int3
lods
dec
pop
ret
xlat
cld
add
mov
gs
cli
cmp
fildl
pop
sar
xchg
adc
aaa
call
xchg
fcomps
cmpps
sub
pop
fdiv
addr16
jbe
xchg
pop
pop
mov
lock
mov
cltd
inc
fimull
mov
les
inc
cmc
jae
jae
dec
pop
pop
mov
imul
push
loopne
ds
push
int
into
into
les
mov
cmp
nop
test
in
mov
fisttpll
ds
stos
sub
cmc
mov
movsl
push
mov
ljmp
ffree
in
sub
mov
hlt
push
sbb
jge
sub
sub
lods
sub
adcl
loop
xchg
or
sbb
xchg
mov
cmpl
fnstsw
jbe
iret
sti
cmp
xor
ss
push
xchg
aas
jno
push
test
mov
push
or
flds
pushf
fs
sub
rcr
pushf
incl
adc
push
shll
in
or
leave
cmp
daa
lea
incb
push
push
lock
aaa
mov
push
aas
sti
sti
jmp
lea
fisubrs
pop
jbe
movl
mov
out
test
xchg
loopne
sub
xchg
cwtl
push
mov
ret
data16
xor
mov
pop
flds
dec
das
clc
loopne
ret
dec
dec
dec
xchg
pop
mov
add
les
xor
test
mov
lods
frstor
cmpb
cmp
loopne
inc
mov
shrl
or
hlt
push
rorl
insl
mov
push
push
js
mov
pop
jge
int
cmp
adc
scas
jno
dec
jle
xchg
daa
aaa
outsl
sbb
jge
xchg
pop
bound
add
fwait
and
adc
or
pop
sbb
ljmp
fsts
cltd
stos
cld
mov
call
cwtl
insb
lods
or
shl
xor
or
push
or
or
pop
in
inc
pushl
mov
mov
push
lods
mov
or
icebp
test
dec
jle
push
hlt
jo
dec
xchg
stos
shlb
loopne
scas
mov
daa
aaa
mov
dec
xchg
adcl
ja
imul
cld
call
dec
mov
lret
inc
add
dec
pop
or
dec
jbe
adc
xor
fisttpl
sahf
aas
fsubrs
or
cmp
push
jl
pop
and
imul
pop
mov
xchg
cld
sub
lret
jmp
lret
mov
xor
adc
shll
pop
lret
lret
cli
or
fcmovu
push
iret
sub
ljmp
fidivl
mov
dec
mov
sbb
xor
lahf
insb
sbb
mov
and
xchg
and
cwtl
popa
subl
es
scas
dec
and
fisubl
pop
fistpl
insl
insl
dec
decb
enter
aaa
jmp
shlb
mov
xchg
mov
fldenv
sub
or
inc
dec
idivl
sbb
inc
push
sbb
pop
xchg
enter
sti
ja
jge
mov
mov
mov
test
jbe
jnp
movl
pop
and
push
mov
sbb
mov
andl
popf
sub
and
adc
xor
sahf
repnz
pop
cmp
pop
ja
gs
in
mov
push
int3
xchg
lds
cmp
lcall
sbb
leave
lcall
xor
add
ja
push
imul
mov
jl
nop
cmp
adc
stc
sub
mov
aad
inc
lods
jmp
jno
mov
addl
stos
adc
xchg
dec
cs
xchg
sar
mov
xchg
add
fistl
xchg
inc
xor
lcall
sub
cltd
or
movsl
nop
les
ds
mov
or
push
out
cmp
lret
xchg
mov
stos
cld
push
cli
sarl
scas
repz
fstpt
incl
xchg
xor
xor
pop
sbb
mov
dec
push
jb
xor
cmp
cmp
mov
imul
adc
sub
push
jl
je
les
sbb
mov
aaa
sahf
jne
ret
pop
and
faddl
pusha
rcl
cmp
aaa
push
andl
mov
sbb
cwtl
imul
out
sbb
fisubs
cli
mov
je
stos
dec
dec
xor
outsb
xor
repnz
adc
cld
in
rcrl
jne
push
stc
loope
mov
aad
scas
loopne
xchg
into
mov
xchg
dec
lods
icebp
ja
jmp
into
int
ljmp
imul
push
or
dec
sub
scas
sbb
add
imul
scas
outsb
mov
dec
push
pop
sub
in
jns
jge
or
push
das
das
lds
adc
push
leave
repz
das
fdivrs
and
mov
sub
add
out
pop
mov
sub
fbstp
fistl
ret
loop
mov
adc
xor
roll
mov
inc
sbb
xlat
les
cmp
adcb
rcrl
cmp
test
loope
mov
movl
andl
iret
sbb
pop
lods
les
hlt
popa
pop
push
pushf
movl
pusha
sub
dec
sub
nop
in
mov
int
sbb
mov
and
or
shlb
lahf
adc
in
pop
push
mov
sub
je
stos
pop
add
cmp
xlat
mov
jg
les
stc
mov
add
popa
jecxz
sbb
fimuls
repnz
in
xlat
mov
pop
cmp
fistpll
out
stos
push
sub
adc
hlt
aad
repz
out
daa
in
test
dec
xlat
aam
or
push
lret
cmc
cmp
movsb
cmpb
cmpsl
xor
xor
push
pop
int
sbb
cmp
inc
icebp
out
xor
gs
inc
ret
cmc
icebp
mov
scas
aad
movsb
enter
in
and
add
mov
xor
sbb
rcrl
dec
jnp
insl
add
leave
xchg
mov
int
mov
mov
testl
xchg
dec
cmpsl
mov
ja
addr16
pop
jmp
lret
daa
cmp
sub
sbb
or
jnp
imul
push
stos
inc
fwait
ja
addr16
pop
jmp
lret
daa
cmp
sub
sbb
or
jnp
push
pop
mov
cmpsl
mov
ja
arpl
pop
jmp
fidivl
lret
and
shrl
ret
sbb
or
jnp
imul
push
push
in
xor
adc
xor
int3
int3
int3
int3
add
adc
and
xor
lock
cmp
test
movsb
or
hlt
dec
hlt
pop
add
adc
and
xor
inc
ljmp
xchg
sub
les
in
in
hlt
pop
sbb
mov
pop
ljmp
popf
sub
jnp
ds
sub
jnp
and
inc
lcall
mov
add
outsl
dec
sub
das
aad
cmp
lds
pop
mov
outsb
ljmp
add
lds
dec
jle
push
mov
dec
or
sti
stos
call
pushf
xchg
sarb
cmp
pushf
push
cmp
jg
jp
iret
hlt
loop
out
add
in
mov
push
sti
fwait
mov
xchg
lds
push
test
hlt
pop
push
ficomps
pop
mov
mov
push
jbe
cmc
inc
push
cmp
aam
sbb
movsb
in
das
hlt
aaa
arpl
push
xor
cmp
imul
push
sub
dec
hlt
dec
int
or
lcall
insl
ficompl
or
jp
dec
hlt
xor
jno
inc
mov
aaa
xor
test
cmp
outsl
shrb
sub
adc
iret
jne
dec
out
inc
lcall
daa
mov
movsb
pop
cmc
jg
add
jnp
sbb
xor
dec
clc
pop
decl
push
cli
fs
test
xchg
cmp
aam
in
hlt
pop
add
adc
and
xor
inc
ljmp
test
xchg
cmp
aam
in
hlt
pop
add
cmp
fwait
addr16
pop
sub
inc
ret
jo
mov
pop
sub
mov
mov
arpl
pop
xorl
sub
dec
inc
stc
sub
test
repnz
jmp
xchg
or
xor
fisubs
and
lods
pop
sbb
mov
repz
or
mov
mov
out
sub
xchg
subl
jo
punpckhdq
adc
add
cld
mov
inc
cmpsb
pop
xor
data16
fs
lds
data16
lds
jmp
mov
inc
ret
test
push
ss
sub
sub
in
pop
sub
or
sbb
in
js
jp
sub
dec
shlb
test
filds
adc
divb
fcompl
sbb
mov
rcll
dec
cmp
pop
jl
lahf
jle
cltd
out
jnp
insl
test
cmp
inc
adc
das
je
aam
cli
addr16
fsubrl
xchg
mov
movsb
mov
out
test
sti
in
es
adcl
and
or
popa
push
stc
sbb
rorb
xlat
call
out
jecxz
daa
mov
xchg
decl
mov
dec
and
xor
imul
mov
leave
lret
mov
outsl
cmp
insl
out
scas
fucomi
dec
clc
push
pushf
fs
lahf
popa
mov
inc
arpl
push
inc
cmpb
pop
notl
clc
mov
sahf
push
xchg
arpl
cmpsl
in
leave
fmul
xchg
inc
aad
scas
lahf
jns
roll
iret
mov
mov
imul
mov
fildl
fldl
dec
lret
mov
cmc
test
or
jmp
pop
lods
in
sub
lret
jo
inc
and
std
cmpsl
shll
dec
int
jmp
sbb
add
pop
lods
mov
push
std
scas
xor
adc
je
mov
mov
out
cmc
mov
stos
pop
adc
xor
pop
cwtl
imul
adc
rclb
jnp
or
inc
jp
leave
xor
pop
sub
cli
add
scas
cmpl
fidivrs
addr16
lea
jle
pushf
mov
in
mov
pushf
outsl
stos
xchg
and
mov
xor
mov
inc
inc
inc
ljmp
dec
adc
ja
into
iret
sarb
fwait
ljmp
sarb
test
out
popa
sarb
lret
inc
outsb
mov
int3
xor
and
iret
sub
popa
in
xchg
add
insl
xor
xor
dec
mov
mov
addl
jo
adc
sub
jmp
pop
fdivrl
push
je
push
jmp
fstl
lret
mov
lcall
xorl
xchg
lods
adc
dec
lcall
mov
scas
mov
lcall
ficoms
mov
fcom
std
dec
jb
cmp
xor
cmc
pop
jbe
mov
mov
adc
hlt
sbb
test
inc
pusha
outsl
loop
iret
xor
loop
divb
gs
xchg
inc
dec
lret
push
clc
pop
popl
mov
inc
inc
push
mov
popa
or
xor
lahf
addr16
jecxz
jo
adc
stos
out
ret
lds
popf
xor
out
out
das
or
xor
mov
test
into
push
loope
dec
push
pusha
sub
xor
push
pusha
fsubrl
mov
xchg
xor
cld
leave
add
orb
pushf
mov
cmp
sub
inc
stc
outsb
and
outsl
jne
sbb
out
decl
bound
xchg
loopne
cmpsb
xchg
and
sbb
jo
fbld
jecxz
sub
mov
inc
std
fisttpl
pop
and
xchg
arpl
add
jl
imul
cmp
iret
pop
bsf
jb
movsb
sti
repnz
add
cld
fwait
scas
loop
mov
setns
xchg
push
pusha
dec
scas
or
stos
imul
jp
add
mov
popa
mov
adc
idivb
test
fisubrs
add
jp
push
fadd
inc
xlat
and
call
and
mov
cmpsb
xor
and
je
out
sahf
mov
cmc
push
in
insl
neg
cmpb
orb
mov
movups
push
outsl
cwtl
lret
and
cmp
mov
or
xchg
add
nop
adc
pop
push
and
pop
add
xor
outsl
mov
addl
dec
or
bound
cmp
pop
add
addr16
leave
or
call
cltd
xchg
cwtl
jge
sbb
rorb
or
pop
mov
xchg
jo
inc
xorb
cwtl
push
xor
xchg
fisttpl
icebp
cmp
decl
push
dec
test
mov
inc
test
outsb
push
dec
out
sub
jecxz
add
or
outsb
jbe
data16
push
daa
ficomps
xor
mov
push
xchg
lret
jp
add
jbe
push
pop
mov
popa
or
push
sti
outsb
cli
fcoms
test
stos
enter
or
pop
add
or
dec
je
sbb
cmp
inc
aam
loopne
xchg
pop
pop
inc
mov
in
and
or
jo
aam
pop
xchg
lods
xchg
dec
daa
in
imul
mov
push
pop
mov
xchg
adc
iret
and
mov
lods
sub
pop
mov
jmp
outsl
scas
inc
mov
out
jecxz
fwait
mov
fs
pop
xchg
lret
jl
hlt
pop
sub
cmpl
adc
mov
je
sub
pop
cltd
bound
test
cmp
xor
test
out
push
xchg
push
add
fnstenv
jmp
push
jle
mov
add
call
scas
mov
stc
mov
sar
test
push
and
pop
dec
lock
leave
fidivs
inc
daa
sub
adc
repz
pusha
arpl
jne
lock
scas
and
into
cmp
xorl
xchg
outsl
mov
xor
pop
aam
bound
lret
mov
push
dec
lcall
cld
jmp
jo
ljmp
push
mov
notb
ss
inc
push
mov
push
int3
outsb
lcall
pop
cmp
add
das
sbb
pop
jl
std
clc
mov
mov
cmp
xchg
out
jns
dec
xor
fucomi
outsl
cli
test
dec
lea
pop
fistpl
jb
hlt
push
shl
andb
prefetch
ja
shrb
dec
sti
imul
pop
aas
and
xchg
xchg
mov
sub
push
inc
xor
sti
xchg
movsl
mov
dec
pop
mov
jle
pop
insb
jns
mov
pop
mov
loopne
sbb
sbb
pop
insb
dec
inc
sbb
push
add
sbb
and
cmp
lods
insb
bound
scas
dec
xchg
cmpsb
loopne
sub
pop
or
daa
movsb
pop
or
mov
push
xchg
test
icebp
push
bound
rcl
pop
sub
push
or
popf
movsl
mov
fsubs
cmc
in
out
call
inc
call
jbe
call
dec
shlb
imul
add
cwtl
jge
popf
fnstcw
inc
cld
cmp
in
lea
cwtl
xchg
cltd
enter
fstl
icebp
ret
rcll
pop
or
lods
jae
lret
jb
out
clc
cmpsl
inc
cwtl
dec
mov
cmpsb
fsubrl
insb
fs
lahf
push
cmp
lcall
mov
xchg
sbb
xchg
cwtl
icebp
and
scas
icebp
cwtl
xor
or
ret
sub
lea
cli
leave
lahf
mov
push
lret
push
push
push
lds
lahf
shll
dec
mov
and
jmp
pusha
loopne
fsubr
movsl
jmp
pop
out
js
jge
je
fisubl
dec
jo
rorb
fidivs
test
enter
insl
negl
pop
lret
xchg
pop
lea
repnz
lock
loopne
scas
sbb
das
leave
ja
stos
or
add
daa
outsb
popf
jnp
xchg
xor
mov
or
and
loope
mov
pusha
pop
clc
inc
jp
jp
das
aam
shl
movsb
xchg
mov
mov
inc
jge
push
loopne
pop
or
or
aad
xor
jbe
popf
rcrb
arpl
fs
xorb
inc
enter
cmp
fstpl
fdivl
jecxz
daa
outsl
xchg
lds
mov
jae
mov
aam
inc
adc
in
xchg
rorb
jne
testl
out
fadds
repnz
pop
mov
add
movsl
sub
jge
pusha
aaa
jo
mov
roll
testl
or
adc
inc
pop
jge
shll
pusha
push
xor
out
aam
repz
subl
dec
cmc
xor
mov
add
dec
cmpl
sbb
cmp
jle
shll
push
mov
jnp
aas
cmpsl
lcall
xor
pop
std
fldenv
decb
lods
cltd
xchg
and
fwait
std
jo
fidivl
cmp
rol
push
cmp
cli
push
repz
adc
cs
ljmp
je
xchg
dec
adc
fistpl
push
insb
push
fs
jle
sbb
jle
push
stos
cmp
inc
jmp
and
lock
in
fdiv
or
sub
and
aaa
rcrl
pop
enter
js
and
insb
sbb
fbld
iret
scas
jbe
mov
nop
jmp
and
leave
fsubrp
sub
ret
sub
test
in
mov
lods
inc
lahf
dec
and
imul
mov
and
mov
outsl
fidivl
ficoml
lcall
jg
and
sub
mov
adc
lods
and
es
ficompl
push
out
enter
sbb
sub
lahf
repz
loopne
pushf
jl
mov
imul
inc
and
sahf
adc
fldt
pop
out
fldcw
xchg
dec
rol
jmp
push
inc
ficompl
sub
mov
sub
fnsave
enter
and
fadds
mov
ljmp
mov
ror
mov
adc
imul
inc
adc
aam
inc
ljmp
ficompl
xchg
push
adc
fstps
rcrl
movsl
push
movsb
inc
iret
stc
cmp
xchg
mov
add
add
incb
fsts
sarb
leave
jge
sub
sbb
sbb
scas
aaa
sub
sahf
or
or
mov
mov
aas
dec
xchg
sub
push
cmp
mov
jecxz
jmp
shrb
ja
mov
icebp
rolb
imul
mov
xchg
and
push
and
pop
inc
mov
dec
pop
jns
jo
pop
push
add
call
aam
sbb
rclb
push
scas
bound
sub
das
mov
sbb
rcll
cmp
fwait
jae
pusha
mov
cmp
and
adc
xchg
push
xchg
aaa
idivb
adc
clc
pop
and
xchg
fmul
inc
add
shrl
xchg
jle
lret
loopne
push
cmpsl
pop
insl
mov
add
adc
sar
mov
mov
aaa
pop
push
adc
mov
sahf
and
lcall
mov
pop
or
sub
sti
and
ds
repz
push
xchg
push
mov
mov
ds
jl
mov
add
push
inc
outsl
mov
inc
ljmp
lock
pop
pop
ljmp
test
cmp
std
adc
daa
mov
pop
fdivp
movsb
out
push
mov
es
inc
lahf
in
in
mov
push
mov
sbbb
in
dec
xchg
pop
pop
and
or
mov
adc
sbb
mov
cmp
cmc
ljmp
inc
push
pop
jle
dec
fcomi
lea
stc
rolb
mov
mov
loopne
adc
jecxz
loope
xchg
sub
fldenv
daa
lcall
sbb
or
mov
mov
or
mov
popa
in
jmp
test
mov
push
insw
dec
cmc
add
pushf
dec
sbb
jnp
mov
enter
stos
xchg
stos
mov
je
or
push
xchg
dec
dec
fildl
insb
xor
nop
int
int3
lea
loop
lods
jmp
loop
cs
sbb
pop
hlt
repnz
cltd
ret
and
cmp
popf
jns
in
pop
and
in
cmp
xchg
ficoml
imul
add
mov
xlat
orb
inc
sub
icebp
push
fmuls
xor
mov
jbe
adc
js
bound
fwait
mov
sbb
in
or
leave
xor
mov
sbb
dec
or
push
loop
inc
mov
in
mov
test
and
insb
outsl
cltd
fwait
xchg
or
mov
movsb
jl
stos
pop
mov
fists
std
cmp
clc
add
ret
xor
pop
sbb
or
ret
pop
cmp
push
cmp
xchg
fs
mov
push
int
fistl
mov
lods
lods
jns
dec
sahf
mov
cwtl
adc
jmp
lods
repz
out
sti
test
insl
cmp
xor
popa
loope
sbb
mov
lds
and
xchg
es
sbb
adc
repnz
repz
push
xor
mov
arpl
jmp
cli
cli
cmpsb
xor
insb
pop
aas
pop
sbb
dec
dec
gs
xchg
insb
push
fwait
bnd
xchg
icebp
pop
call
stc
mov
pop
xchg
lods
repnz
and
stc
pop
pop
inc
std
sub
aaa
xorb
push
insl
lock
sub
inc
ficomps
outsl
and
mov
cld
in
jne
movsl
xchg
push
rorb
cld
mov
repnz
sbb
scas
fxch
sub
sub
push
lea
mov
add
inc
xchg
outsb
dec
pop
daa
mov
addr16
jae
jne
and
jge
arpl
push
roll
add
or
sbb
sub
stos
sub
fldt
or
mov
lea
add
push
loop
adc
cmpb
or
cmpsb
or
mov
dec
les
push
xorl
jns
loope
rolb
pop
add
pop
push
mov
xor
aam
stos
or
andb
shlb
pusha
pop
dec
icebp
pop
sub
and
and
js
sub
mov
icebp
sahf
dec
icebp
stos
mov
sbb
ljmp
mov
add
sub
inc
mov
sarb
mov
pushl
sbb
repz
sub
inc
shrb
out
pop
dec
push
shll
data16
sub
cli
mov
movsb
sbb
inc
mov
push
popf
or
mov
aaa
inc
jle
mov
push
mov
pop
add
loopne
push
rol
sbb
pop
cmpsl
sbb
xlat
xchg
roll
sbb
cmp
add
imul
mov
and
ds
cmp
cld
lods
mov
sub
jmp
sbb
sbb
mov
mov
xor
jg
out
dec
test
dec
popf
inc
bnd
imul
pop
rorb
imul
insb
dec
dec
and
pop
aad
mov
ss
mov
loope
cmpsl
iret
dec
ffree
dec
cmp
movsb
push
mov
aam
in
mov
sbb
popa
jg
mov
xchg
ja
xor
xlat
cltd
pop
stos
push
cmpsl
sar
sbb
push
std
movsl
shl
jmp
loope
or
jnp
cli
jle
lods
and
leave
fisubl
jne
leave
pop
mov
cli
aaa
dec
ss
and
aam
xchg
in
punpcklwd
jbe
inc
mov
insl
mov
push
stc
aaa
movsb
loope
jb
push
pop
push
push
rcr
orl
test
cmp
fs
xor
push
leave
stos
lods
xchg
aas
dec
imul
out
ss
daa
in
aaa
mov
xor
popf
lods
shl
lods
mov
push
fadds
adc
rol
add
imull
mov
xchg
add
xchg
push
jmp
icebp
test
lret
mov
out
sbbl
sahf
mov
cmp
inc
cmp
cmp
cwtl
pop
mov
xor
dec
sbb
outsl
inc
sub
jnp
imul
xchg
dec
aam
fiaddl
aaa
sbb
ret
bound
add
movsb
mov
mov
adc
mov
repz
or
sbb
mov
frndint
cmp
testl
cli
add
je
or
push
push
or
nop
inc
and
shll
push
dec
dec
loop
mov
xchg
add
lcall
push
push
mov
xor
sub
movsl
mov
arpl
das
mov
jl
jp
test
inc
mov
adc
pop
cmc
stos
jle
add
outsl
mov
out
push
adc
lods
sbb
popa
push
in
ljmp
test
stos
xor
xlat
loope
pop
mov
out
pop
in
insl
movsb
test
dec
stos
mov
mov
roll
test
lret
rcr
leave
enter
or
or
rep
pop
adc
js
mov
mov
mov
imul
stos
pop
fs
mov
inc
push
jo
stc
cwtl
adc
in
dec
adc
lcall
leave
adc
cmpsb
mov
xchg
fdivrs
add
sarb
xchg
push
push
and
out
into
adc
test
mov
inc
jecxz
add
xchg
inc
cmpsb
daa
or
mov
mov
sub
push
jl
dec
inc
lods
je
dec
movsb
push
xor
push
hlt
sub
xchg
push
jbe
jns
test
sbb
cmp
jne
jno
push
movsl
sarl
push
dec
sbb
into
enter
scas
mov
ja
popf
andl
pop
cmp
or
ret
pop
adc
sub
outsb
sub
lea
and
rcl
loope
sbb
xchg
jle
rolb
aaa
or
call
ret
pop
sbbl
pop
fmulp
push
xor
pop
add
adc
push
std
inc
aaa
subl
lret
mov
iret
scas
test
out
xor
fs
test
out
pop
popf
sarb
inc
mov
sbb
iret
add
pop
mov
ret
dec
inc
mov
out
cltd
mov
dec
sbb
or
icebp
add
xor
add
dec
jno
scas
push
mov
jl
inc
sarb
repnz
jp
ror
xor
jecxz
std
jl
pop
rcll
push
jne
inc
mov
into
in
pop
lret
xor
je
decl
lods
xor
mov
mov
lds
lds
mov
mov
push
sub
jo
jne
or
mov
out
aad
push
add
adc
add
lea
cmpb
dec
sub
sbb
in
add
imul
das
pushf
xchg
xor
fildll
fbld
adc
pop
mov
dec
cmp
insl
adc
cmp
or
pop
test
mov
icebp
push
add
fwait
iret
jne
call
mov
pushf
sub
cmp
inc
pushfw
jb
nop
fbld
sbb
cmp
xor
fcomps
xor
cmp
aad
pop
scas
adc
mov
sbb
cwtl
out
bound
sub
shll
pushf
js
in
lods
cmpsl
inc
rcll
cltd
mov
ret
mov
inc
test
aam
call
add
jg
sub
test
mov
mov
or
test
pop
jl
mov
dec
mov
into
testb
xchg
jne
mov
sbb
and
and
sbb
sub
ds
adc
lods
repz
dec
mov
sbb
lret
xor
lock
inc
mov
movsb
imul
addr16
lcall
fisttps
scas
inc
add
mov
rolb
das
mov
mov
or
jmp
sub
cmovne
bsf
jmp
dec
out
fwait
lods
adc
sub
das
hlt
cwtl
mov
leave
fcmovb
lahf
cmp
dec
pop
test
cli
iret
shlb
sub
adc
icebp
lods
dec
and
pop
sub
pop
jns
jno
ja
out
adc
xchg
mov
sub
ds
mov
mov
popf
dec
mov
sub
dec
insl
and
clc
dec
pop
lods
cmp
dec
pop
ret
scas
mov
js
adc
mov
sbb
aas
loop
mov
pop
je
mov
push
add
xlat
sbb
cld
dec
dec
fcomps
xlat
mov
arpl
insb
mov
bound
cmp
lods
mov
xor
pushf
push
cmc
stos
jl
aas
mov
les
mov
aas
cmc
pushf
jle
out
rcl
sar
loopne
rcrl
in
mov
imul
sbb
or
les
dec
pop
aad
inc
sahf
cmp
icebp
sbb
inc
sbb
ss
data16
loope
push
idivl
cli
and
cmpsl
aaa
inc
fiadds
cmp
sbb
or
jne
or
ret
jnp
dec
xor
wbinvd
xchg
jo
cmp
push
int
andb
stos
test
mov
jecxz
std
dec
dec
xor
leave
lds
mov
popa
cmp
mov
cmpsb
mov
jge
cwtl
xlat
jne
lock
lret
repnz
or
pop
or
shl
dec
xchg
pop
mov
sbb
in
push
fimuls
cmp
cmp
mov
cs
push
fcomp
ss
cmp
sub
mov
adc
faddl
ret
xor
sarb
mov
iret
je
sub
push
dec
sbb
and
or
into
aam
add
inc
lds
lods
fwait
movsl
imul
mov
fidivs
add
aam
and
jbe
and
and
dec
sub
out
inc
or
pop
xchg
cs
dec
cmp
pop
loopne
lret
loope
and
sbb
je
cmpsl
add
mov
les
lahf
rorl
jmp
pushl
stc
xchg
aas
push
rcrl
xlat
cli
icebp
inc
popf
out
movsl
xor
ficompl
xchg
sbb
je
and
sub
mov
cmc
and
lret
cwtl
stos
sbbb
mov
clc
in
sub
lock
fbld
mov
and
loope
push
xor
in
add
push
mov
inc
ljmp
test
xchg
cmp
aam
in
hlt
pop
add
adc
and
xor
inc
ljmp
test
xchg
cmp
aam
in
hlt
pop
add
adc
and
xor
inc
ljmp
test
xchg
cmp
aad
in
negb
stos
push
mov
inc
ljmp
jnp
imul
loop
test
mov
movsl
int3
int3
int3
int3
int3
push
mov
sub
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
mov
mov
mov
add
push
pushl
call
mov
call
cmpl
movl
jne
call
call
call
push
lea
push
push
call
pop
push
lea
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
xor
mov
push
push
push
push
call
call
mov
push
push
call
push
push
push
push
push
mov
call
push
push
push
push
push
push
push
push
call
mov
push
push
pushl
call
pushl
mov
call
jmp
mov
mov
mov
andb
incl
jmp
lea
push
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
push
pushl
call
lea
push
call
pop
push
lea
push
push
push
push
call
lea
push
pushl
call
pop
xor
pop
leave
ret
cvtpi2ps
jne
gs
or
pop
adc
push
mov
mov
lds
mov
movsl
fiadds
inc
ds
push
gs
adc
dec
and
mov
xchg
rolb
mov
xchg
jge
or
sbb
sub
scas
into
popf
cltd
out
xchg
in
mov
mov
inc
jg
pop
or
popa
stc
xchg
int
lahf
cs
or
ss
mov
sub
jne
sarb
cmc
lds
cmp
jno
into
sub
shlb
fadds
addr16
cmpsl
out
pop
addb
mov
cmp
push
rolb
sbb
test
push
ds
or
push
xor
dec
fisttpll
lods
pop
cmc
jno
lahf
adc
jae
xor
clc
mov
loope
pop
lds
xor
jmp
aas
test
mov
inc
sarl
call
aad
push
pop
sub
cmp
or
hlt
push
xchg
mov
mov
jb
add
dec
cmp
int3
scas
fstl
in
mov
mov
mov
mov
push
adc
jb
lret
push
sbb
sub
xchg
sarb
inc
js
jge
jb
cmp
sub
daa
pusha
insl
xlat
iret
fcoml
inc
stos
movsl
lods
cmp
ja
adc
jb
and
pop
aad
lds
xchg
out
test
mov
movsl
ficoms
inc
jne,pt
gs
adc
dec
and
mov
xchg
out
test
mov
movsl
ficoms
xchg
jae
lock
and
jne
xchg
inc
adc
lahf
mov
mov
dec
xchg
xchg
pop
jp
std
xchg
inc
in
out
in
xchg
pop
jle
jecxz
dec
bnd
popf
std
fdiv
or
pop
or
sti
stos
faddp
or
test
fimull
cmp
outsb
pushf
orl
push
xor
push
pop
inc
push
ja
jmp
arpl
cli
mov
sbb
sub
ljmp
aas
xchg
add
sarl
jne
jne
dec
mov
outsl
pushf
sbb
push
xlat
ja
sahf
frstor
repnz
mov
xor
jl
lret
or
jae
subb
adc
lods
xor
out
gs
fnstcw
and
lods
ljmp
jp
scas
jns
adc
ret
or
stos
rclb
sahf
xor
sub
cmpsb
imulb
repnz
inc
jecxz
imul
xchg
xor
imul
jae
fildll
je
cmp
imul
outsl
jle
cmpsl
mov
cmp
fiaddl
lcall
test
stos
sub
or
jb
cltd
int
adcb
add
mov
ljmp
movsb
loopne
loopne
sbb
orl
mov
sarb
insl
mov
adc
push
mov
pushf
cltd
clc
adc
sub
movsb
jmp
arpl
xor
test
cwtl
cmc
mov
lock
or
xorb
push
adc
loope
inc
out
lea
int3
loop
fnsave
jb
jnp
das
int3
insb
cmp
arpl
xchg
push
popf
xor
and
sbb
fs
cmp
lahf
out
stc
je
cmp
lahf
xor
daa
loopne
fidivl
rorl
jp
push
dec
adc
xchg
outsl
mov
repz
ds
mov
daa
movsb
test
sti
stos
enter
mov
mov
mov
aaa
pop
movsb
ds
mov
jnp
pop
fwait
das
cmp
lods
leave
ja
fsubr
frstor
outsb
sbb
mov
je
data16
cwtl
icebp
stos
xlat
shr
call
aaa
daa
and
mov
mov
out
outsl
das
xor
cmp
xlat
xor
inc
mov
inc
dec
mov
mov
insl
sub
rcrl
jo
lsl
pop
cld
mov
add
push
mov
jae
pop
iret
xlat
cmp
inc
incl
mov
ficomps
push
adc
out
call
inc
repz
or
mov
push
and
pop
loopne
lods
adc
pop
or
mov
mov
in
pop
pop
aad
mov
int3
dec
or
lea
fwait
adc
scas
lahf
imul
insl
jecxz
lcall
rorb
into
test
jmp
sbb
icebp
add
push
sbb
aas
pusha
dec
adc
xchg
or
mov
les
push
lds
pop
popa
or
ss
divl
mov
xchg
aad
test
sahf
movsb
stc
into
jecxz
lods
mov
sbb
test
add
jecxz
or
fadds
int3
jp
jg
and
fwait
ds
mov
mov
gs
push
loop
push
cmp
fsubrl
dec
sub
mov
push
push
fistl
loop
push
jecxz
mov
inc
dec
movsl
mov
adc
test
orb
sahf
xchg
cltd
roll
test
push
xchg
push
enter
dec
ss
mov
loopne
imul
mov
dec
test
scas
inc
iret
mov
loope
jle
sbb
imul
movsl
imul
dec
or
adc
lret
sbbb
lods
sbb
jno
call
mov
enter
mov
mov
mov
cli
adc
and
repz
mov
jecxz
pop
or
jb
or
inc
pusha
aas
or
ja,pt
jbe
xor
xchg
xor
cli
stos
mov
in
mov
pop
inc
jecxz
cmpb
dec
jp
push
loop
lret
add
in
or
cmp
out
outsl
stos
pop
cmc
sub
and
arpl
cmp
popa
incl
sub
je
sub
pop
movsb
or
cmpsl
es
dec
sti
inc
out
pop
pop
adc
test
and
jno
mov
pop
cmp
rcrl
daa
ss
pop
ja
in
clc
pop
fcomi
sbb
pop
call
jecxz
icebp
xorb
push
out
popa
sbbl
cmp
stos
jne
lds
cmpsb
sub
adcb
insl
orl
pop
xchg
repnz
idivb
mov
in
xor
jl
dec
test
and
out
mov
mov
iret
ret
push
xchg
xor
fwait
and
and
inc
mov
pop
xor
xchg
movsb
dec
insb
sti
aad
mov
lods
cmp
mov
out
and
imul
fsts
imul
loop
shlb
mov
mov
mov
xchg
jp
out
outsl
stos
pop
pop
and
mov
push
mov
xorl
notb
or
jl
shll
jno
daa
and
jmp
lock
mov
pop
mov
and
push
lods
push
enter
and
push
out
add
aaa
cltd
sub
dec
mov
lret
lret
orb
ffreep
lods
fsts
mov
xchg
cwtl
and
outsl
push
dec
das
sub
jnp
stc
scas
push
test
ret
xlat
lret
rolb
cmc
ja
inc
pop
jns
pushf
cld
addb
shlb
mov
sub
dec
ret
icebp
mov
jg
inc
jmp
push
mov
xor
pop
mov
in
pusha
scas
or
outsb
clc
jg
mov
jno
lds
mov
leave
fs
fwait
movsl
push
mov
xor
fimuls
cmp
test
pop
sbb
fiadds
fldt
jmp
xor
jmp
adc
stos
frstor
mov
inc
test
adc
pop
fs
mov
xor
enter
push
jle
inc
mov
test
and
mov
test
pop
fistps
cwtl
jb
insb
xchg
ret
movsb
add
pop
adc
mov
inc
sbb
mov
out
test
inc
inc
gs
iret
pusha
pop
and
adc
jbe
dec
lods
mov
mov
fiaddl
pusha
dec
fstl
in
jecxz
push
dec
ret
jb
into
sub
mov
ja,pt
and
pop
and
mov
test
cli
lret
sbb
in
cmc
pop
cmp
push
pop
out
mov
fildl
imul
jg
das
fistps
inc
sti
filds
lods
dec
nop
or
ficompl
pop
cltd
pop
dec
fldenv
inc
js
mov
and
loope
pop
sbb
hlt
mov
and
cli
into
xchg
inc
movsb
and
cmp
push
pop
lods
cmpsl
cwtl
ds
mov
jae
in
scas
js
idivb
in
out
mov
xchg
lret
xor
dec
rolb
adc
and
sub
jl
ds
dec
shrb
pop
test
mov
jl
in
lds
ljmp
inc
sub
push
decl
push
cmpsb
movl
inc
xchg
or
in
push
fwait
add
push
int
pop
mov
and
es
xchg
mov
or
lea
jns
in
mov
push
fnstsw
jne
or
outsl
ss
mov
lret
add
in
and
mov
inc
push
sub
addb
fdiv
out
or
mov
mov
outsl
xchg
imul
fidivrs
sub
push
fcomps
pop
ds
sub
jbe
jb
pop
cmpsb
mov
ljmp
inc
mov
xor
mov
test
sbb
in
pcmpeqw
or
inc
mov
lret
lea
outsl
xchg
stos
out
pop
push
dec
add
jl
push
dec
mov
xlat
dec
je
push
add
xor
rcll
adcb
or
jnp
inc
imul
mov
in
fcoms
call
fs
icebp
cld
inc
repnz
out
jmp
mov
add
dec
les
fwait
add
insl
jg
hlt
fcmovu
and
repz
jp
dec
xor
dec
in
leave
fs
mov
dec
call
fdiv
cmpsl
stos
fists
pop
dec
push
out
xchg
dec
rcrl
push
dec
enter
add
into
loopne
imul
push
jmp
lock
leave
sbb
shll
mov
jo
adc
bound
xchg
loope
xchg
dec
aaa
dec
mov
dec
mov
and
outsb
shll
scas
ret
sbb
push
int3
ficompl
leave
jae
push
pop
mov
push
adc
jle
call
pop
out
rcl
pop
xchg
pop
mov
in
rorl
and
jp
stc
mov
add
pusha
jbe
ret
mov
imul
and
repnz
testl
adc
ds
and
adc
inc
loop
xor
in
mov
mov
hlt
sbb
jp
adc
hlt
and
pop
cmpsl
out
loope
xchg
sub
ss
sub
in
les
pop
out
mov
ds
jecxz
jp
fidivrl
das
push
lcall
lret
mov
fsubr
jne
push
cmc
fadds
sub
lock
and
out
adc
cli
repz
inc
mov
sahf
pusha
mov
aad
adc
into
lods
mov
xorb
enter
enter
xchg
inc
dec
stos
inc
mov
xchg
or
sbb
mov
gs
ret
mov
fcoms
xchg
xor
mov
es
adc
mov
push
in
jg
fldenv
jno
insl
xor
cli
adc
push
orl
mov
jmp
jns
mov
ret
xchg
cs
es
push
push
push
je
jns
test
push
push
pop
les
daa
cmp
xchg
insb
insb
fdivl
mov
sub
out
int
mov
sbb
mov
out
lcall
aad
xchg
stos
or
and
sbb
mov
lods
mov
mov
repnz
inc
mov
xchg
mov
mov
add
test
cmpsb
insl
fnstcw
lea
mov
inc
jl
sub
mov
int3
mov
loope
jge
fdivrs
push
in
inc
in
fbld
adc
and
sub
fucomi
mov
pop
adc
call
mov
mov
dec
dec
lcall
push
sub
lods
sbb
mov
sbb
jecxz
push
lods
scas
icebp
ds
sbb
jmp
mov
incb
push
pop
shr
ret
cli
jae
movsb
mov
cmc
clc
inc
jne
ret
stc
gs
mov
scas
lds
shrb
aam
dec
cli
mov
dec
shr
sbb
mov
cmp
xor
cmp
sub
xor
out
sarb
outsb
adc
clc
and
sub
ljmp
ret
nop
sbb
adc
dec
adc
decb
or
jmp
lods
pop
jp
cltd
lahf
lahf
sbb
mov
xor
and
fs
mov
cltd
xchg
lret
and
fdivp
es
mov
stos
into
test
lcall
imul
je
push
jmp
xor
dec
insb
daa
aas
loopne
sbb
xchg
and
or
cmp
inc
sbb
sti
das
mov
lods
bound
fistps
dec
es
ja
popf
adc
pop
loop
cmc
cltd
jl
imul
pop
xor
out
jmp
orl
sbb
adc
xchg
mov
pop
fmull
sub
popl
data16
sub
movsb
fs
mov
push
push
sub
ret
sub
andb
xchg
ja
mov
xchg
add
cmc
xchg
ja
xchg
aaa
cs
add
xlat
shlb
test
jns
les
sti
shrl
or
mov
sub
sarb
cmp
xchg
jp
xchg
pop
lahf
insl
sub
xchg
inc
push
nop
data16
test
pusha
sbb
push
repnz
fs
out
clc
stc
ss
xor
inc
js
sub
sbb
push
int3
rol
mov
mov
rol
cmpsl
pop
jb
jo
xchg
push
out
push
push
lcall
lret
arpl
mov
imul
push
jo
add
mov
dec
push
jno
xor
pop
rclb
sub
shrl
mov
out
jnp
or
adc
in
and
mov
pop
rcrl
push
mov
mov
pop
leave
loopne
sarl
and
mov
out
jbe
xchg
sbb
xchg
jnp
arpl
mov
imull
nop
adc
js
sub
mov
sbb
mov
daa
jl
jl
pop
mov
ds
inc
out
inc
mov
nop
in
je
loopne
jl
and
adc
xor
insb
mov
es
fldcw
imul
inc
roll
int
loop
mov
int
in
mov
sti
imul
sbb
push
push
cmpsb
cs
ret
mov
mov
test
lret
loop
repz
fcomps
add
popf
mov
shlb
xchg
mov
push
lret
lret
bound
mov
xor
les
es
es
mov
xor
fcomi
pop
mov
xor
daa
push
retw
aam
cli
popa
les
mov
shll
outsl
popf
pop
or
pop
adc
cmp
sub
ss
loope
in
xchg
add
sbb
ficoml
in
test
cmc
push
sub
or
sub
int3
jns
jnp
roll
cmpsl
pusha
je
xor
sarb
dec
mull
xchg
xchg
mov
or
xchg
insb
ds
push
cmp
sbb
in
pop
adc
repz
icebp
add
and
inc
jmp
dec
mov
adc
lret
cltd
push
mov
fcmovb
jmp
ja
xlat
shll
inc
jp
jmp
mov
outsw
push
lock
xchg
dec
insl
daa
mov
sub
insl
out
xor
aam
or
dec
jb
rorl
in
inc
push
xchg
faddp
nop
shlb
jmp
mulb
jmp
pop
lods
into
pushf
and
mov
mov
lds
inc
lahf
out
lods
je
mov
cmp
mov
in
xor
inc
jg
push
jno
inc
cmp
mov
scas
arpl
hlt
add
mov
adc
lcall
repz
addr16
pop
dec
add
lds
mov
out
xchg
and
mov
sbb
xchg
outsl
das
push
jmpw
mov
inc
std
and
fs
cmpl
pushf
scas
mov
dec
jl
inc
jne
cmpb
iret
mov
aad
leave
mov
cmp
test
rolb
and
fwait
xchg
push
into
mov
mov
out
adc
jo
push
lret
lcall
jo
sbb
jbe
filds
shlb
rclb
popa
out
cld
xchg
test
adc
xchg
mov
adc
call
pop
pop
adc
or
xor
cmp
fiadds
dec
jb
and
stc
jg
pop
jl
mov
popa
push
mov
fstl
pop
xchg
ss
xor
lret
jecxz
fstpl
lds
dec
in
add
xchg
and
cmp
sbb
pop
imul
std
dec
mov
or
mov
jle
pop
push
inc
test
mov
das
inc
push
loope
lea
push
into
inc
push
out
into
lahf
sub
cmp
test
test
inc
add
mov
pusha
mov
insb
adc
mov
adc
mov
xchg
push
pusha
outsb
in
in
ficompl
mov
mov
mov
mov
cmpsl
test
testl
popf
jae
subb
int
mov
mov
sbb
jno
mov
push
sub
cmp
mov
cmp
xchg
test
adc
int3
push
xor
lea
or
subb
or
call
je
icebp
hlt
data16
sarb
jae
fwait
stos
in
clc
xchg
dec
aad
lahf
sbb
lcall
imul
test
sahf
inc
fsubl
adc
mov
push
orb
je
dec
movsl
repnz
jnp
lahf
out
insl
fisubrl
inc
mov
fsubrl
ljmp
test
jl
push
push
int
mov
mov
pop
lret
jne
mov
inc
jne
or
push
xchg
pop
push
xchg
fstl
dec
lds
jecxz
rclb
inc
mov
das
fcomps
scas
lods
rolb
pop
lret
adc
or
dec
inc
lods
pusha
mov
nop
stos
push
movsb
into
xchg
aas
movsb
pop
daa
mov
test
in
jne
mov
cli
push
cmpsb
addb
das
js
sub
fsub
lret
and
or
aas
stos
clc
mov
push
aaa
mov
adc
add
cmp
stos
or
mov
xchg
call
jae
repz
stos
cmp
xor
push
fdivs
sahf
aas
iret
push
cwtl
jg
inc
dec
mov
ljmp
out
push
mov
repz
pop
dec
dec
in
lods
out
dec
jns
adc
in
inc
push
mov
lds
daa
jb
daa
fiaddl
push
adc
pushf
popa
lcall
jp
mov
sbb
fbstp
negb
mov
and
stos
push
fisttpl
test
sbb
ds
ror
or
xchg
repnz
aas
xchg
fcmovnu
aam
mov
daa
es
mov
ds
std
mov
sbb
movsb
cmpsb
mov
outsl
movsb
mov
mov
jge
mov
insb
dec
jge
sbb
lahf
enter
testb
jl
push
cmpsb
add
in
fnstsw
mov
loope
fnstcw
add
and
adc
dec
adc
fwait
jp
pushf
repnz
leave
fucomi
sar
enter
jae
xchg
jbe
xchg
jmp
fisttpl
pop
inc
pop
add
das
push
inc
push
lea
fwait
mov
mov
dec
es
ss
testl
xchg
or
fdivp
sub
icebp
fsubs
and
inc
jnp
xchg
add
movsl
bound
mov
fwait
das
push
pop
test
add
jl
xchg
test
pop
ss
dec
push
out
sbb
push
jl
mov
jmp
and
ret
incl
adc
cmp
pushf
loop
dec
jl
jle
je
and
sti
sbb
inc
and
and
loopne
out
int3
lret
loope
insb
push
int
mov
pop
fsubrs
sub
push
inc
loopne
scas
int
fistpll
in
inc
cmp
cs
fiadds
adc
xor
dec
jp
out
data16
push
add
scas
ss
pop
pusha
in
jne
rorb
mov
add
pushf
sub
test
sub
popf
insb
sbb
dec
cmc
outsb
addb
stos
pushf
out
mov
inc
lods
call
push
pusha
cmp
xor
and
int
xchg
xchg
mov
inc
mov
movb
push
push
in
mov
ss
into
xor
cltd
outsl
and
sbbb
data16
dec
mov
addb
pop
or
pop
or
inc
dec
xor
test
daa
adc
xor
sub
lret
push
mov
cmpsl
mov
pop
fimuls
jl
pop
imull
mov
out
xor
push
cmp
insl
adc
rcrl
pushf
xor
mov
adc
sbb
js
push
cs
pop
or
cmpsb
ss
mov
xchg
lahf
jbe
mov
test
add
jo
mov
adc
arpl
loop
repz
pop
mov
and
mov
sti
roll
ljmp
std
scas
inc
mov
pop
pop
mov
gs
call
scas
test
push
ficompl
enter
mov
fldt
mov
in
push
insl
fisttpll
notl
aam
push
mov
mov
or
pop
xchg
pusha
push
xchg
inc
add
sahf
daa
jmp
and
lret
enter
ja
jmp
xchg
mov
imul
xor
insb
sbb
iret
push
cli
aam
mov
jmp
add
daa
add
addr16
mov
xchg
shrl
adc
add
jecxz
mov
dec
rcrb
cmp
call
adc
sub
movsb
mov
arpl
mov
inc
outsl
decl
jns
rorl
lret
dec
mov
sar
dec
shlb
out
mov
pop
out
stos
fsubrp
fnstenv
lcall
or
jle
je
mov
pop
adc
test
sub
and
insb
sahf
mov
aaa
and
mov
or
cltd
jno
rdpmc
test
inc
lret
les
aaa
mov
inc
adc
push
pop
out
ja
lea
sti
in
jmp
fistpll
jge
pop
sub
lea
popa
fbstp
rorl
lcall
in
js
das
sub
bound
dec
xchg
test
popf
mov
into
mov
pushf
mov
jg
sbb
fistl
ds
inc
inc
dec
bsr
sub
and
int
loopne,pt
clc
sub
les
jae
mov
push
push
or
inc
repnz
push
adc
pusha
dec
mov
xor
clc
or
mov
and
and
push
and
push
fimuls
testl
jmp
loop
pop
in
movsb
fnsave
lods
jns
sbb
out
push
call
loopne
lock
cwtl
adc
xor
cli
scas
mov
cs
or
jmp
mov
rolb
mov
mov
push
xchg
cmp
sbb
mov
or
and
mov
sysret
adc
adc
shrl
or
inc
cmpl
jno
sbb
jle
jge
aad
cmp
xchg
pop
add
push
dec
ja
ds
loopne
gs
or
out
inc
pop
daa
jae
movsb
inc
arpl
inc
fs
sbb
dec
iret
data16
sub
jle
xor
mov
pop
sub
jae
add
xor
or
or
and
insb
out
data16
or
jp
fisttpl
popa
shl
scas
sub
jae
jb
fs
iret
test
pop
lcall
xor
mov
jp
mov
fiadds
outsl
xor
sbb
call
push
repnz
enter
inc
or
adc
dec
and
mov
xchg
out
test
mov
movsl
ficoms
inc
jne,pt
gs
adc
dec
and
mov
xchg
out
test
mov
movsl
ficoms
inc
xor
sbb
dec
and
mov
xchg
ljmp
popa
lret
inc
ljmp
mov
movsl
sahf
sub
adc
mov
jmp
dec
mov
cmpsb
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
mov
add
push
pushl
call
mov
push
push
push
pushl
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
pushl
pushl
pushl
pushl
pushl
call
call
mov
pushl
call
mov
pushl
call
mov
pushl
call
pushl
call
mov
push
push
push
pushl
call
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
mov
sub
movzbl
sub
test
je
call
call
call
movl
movl
movl
andl
jmp
movl
movl
movl
movl
movl
movl
andl
jmp
mov
inc
mov
mov
sub
mov
add
mov
movzwl
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
mov
xchg
xor
xchg
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
pushl
push
push
call
add
pushl
call
cmpl
jb
mov
pop
pop
pop
leave
ret
dec
xlat
pop
outsb
idivl
push
ret
insb
jmp
adcb
out
ja
mov
sahf
inc
scas
aaa
scas
daa
sub
pop
movl
xchg
push
xchg
mov
cmpsl
into
push
fiadds
ja
addr16
pop
sahf
pop
scas
aaa
mov
cld
mull
xchg
mov
cmpsl
stos
imul
addr16
in
arpl
push
loop
and
adc
or
inc
hlt
mov
inc
mov
adc
adc
out
mov
out
sbb
outsl
sahf
js
mov
stos
daa
imul
jno
ret
aaa
inc
add
mov
or
mov
sahf
pop
enter
sub
mov
xchg
repz
xchg
push
xchg
rcrl
test
mov
cwtl
jno
sahf
push
scas
leave
mov
cmp
jecxz
repnz
xchg
js
dec
mov
out
adc
out
mov
inc
push
ss
mov
ret
aas
outsl
testb
sarl
std
test
push
addr16
addr16
int
scas
and
outsb
idivl
ljmp
cmpsl
or
inc
cwtl
ja
addr16
pop
xchg
pop
pushf
aaa
mov
adc
mov
mov
pop
sarb
xlat
into
cmp
or
jp
jle
mov
inc
add
pop
mov
bnd
fcmovnu
imul
and
push
and
sub
xchg
mov
cmpsl
into
push
fiadds
ja
mov
sahf
pop
scas
aaa
mov
outsb
idivl
push
xchg
push
xchg
mov
cmpsl
into
push
fiadds
ja
mov
sahf
pop
scas
aaa
mov
shrb
or
inc
shrl
jb
addr16
enter
push
dec
xchg
push
jp
testb
jmp
test
pop
sub
out
fdivrl
sub
js
mov
int3
xchg
push
rcrl
arpl
cs
cli
inc
push
xchg
sahf
sahf
mov
or
lret
lds
cmp
xor
lods
mov
xlat
pushl
mov
mov
jl
sbb
and
lcall
into
and
test
push
dec
aam
add
inc
and
out
icebp
popf
jb
movups
lret
xorl
dec
or
xlat
lcall
mov
push
leave
outsl
cmp
pusha
shlb
or
test
xchg
xchg
mov
popa
add
ljmp
cmp
stos
mov
mov
cmp
pop
mov
jns
test
sti
pop
iret
dec
leave
dec
push
push
inc
mov
std
test
loopne
mov
push
and
mov
bnd
push
test
and
outsl
jl
jbe
imul
out
xchg
bound
shl
cltd
bound
insl
stos
add
mov
mov
sub
push
jg
dec
fiaddl
cmpsb
popa
sub
ficoml
mov
insl
lods
mov
pop
jno
mov
mov
jo
xchg
lea
roll
pop
lods
lods
scas
inc
jno
leave
mov
imul
xor
jge
xlat
repz
jmp
sbbb
and
sub
dec
lock
push
aam
mov
arpl
sbb
pop
jmp
adc
popf
dec
loope
sub
gs
cli
or
mov
pop
sar
bound
add
or
ret
mov
mov
pop
dec
sbb
ss
mov
or
xchg
jns
or
cltd
das
xchg
xchg
adc
pop
cmpsb
xchg
mov
pop
sub
shrb
and
push
lcall
out
bound
iret
imul
pop
cmp
dec
xlat
push
xor
fsub
inc
bts
aam
imul
outsb
arpl
mul
dec
clc
sbb
or
dec
sbb
cmp
cltd
int3
push
ret
xchg
lods
and
push
inc
clc
cmp
aad
push
pop
and
out
clc
sbb
mov
es
sub
mov
lahf
or
mov
repnz
fcoml
insl
and
xchg
movsb
xlat
inc
sbb
push
jle
dec
aad
push
mov
gs
daa
or
negl
cwtl
or
dec
test
inc
jb
es
orl
test
sub
jno
add
arpl
mov
xchg
movsb
call
add
aam
sbbl
jae
add
leave
inc
pushf
xlat
in
cld
push
jl
mov
mov
movsb
inc
gs
add
mov
push
cmp
dec
jnp
jae
inc
add
hlt
mov
jmp
ret
clc
or
out
into
and
pop
xor
mov
pop
mov
mov
shll
inc
pop
movsl
outsl
jl
mov
mov
cs
mov
cmc
frstor
push
fiadds
pop
clc
jg
iret
push
push
mov
pop
sti
nop
sbb
mov
outsl
movsl
sub
pop
ja
add
popa
lahf
inc
dec
push
stos
outsl
xchg
add
xor
xlat
pop
stos
dec
pop
jge
push
test
lods
out
cmp
pop
ljmp
fwait
mov
jge
mov
out
loopne
and
add
hlt
cmpsl
and
arpl
xchg
or
shll
mov
mov
es
lret
jl
cmpsl
jae
mov
jae
mov
cmp
arpl
sbb
and
test
and
push
cmp
mov
mov
mov
loope
lds
mov
cmp
and
mov
or
mov
int
jno
inc
aas
test
dec
or
push
cwtl
arpl
loopne
and
push
and
push
or
hlt
cmpsl
call
sbb
jnp
push
mov
adc
iret
push
sbb
loope
inc
aam
pop
ret
cli
insb
sbb
or
pushf
testl
dec
bound
pop
push
push
nop
fmulp
jno
jnp
adc
push
jbe
sti
clc
lea
xchg
xchg
js
push
jle
mov
hlt
mov
dec
jle
fs
jmp
jle
js
jp
scas
pop
shr
inc
mov
push
sub
xchg
sbb
push
sahf
jle
test
and
sbb
mov
out
dec
notb
push
std
mov
fdivp
jmp
mov
xor
pusha
mov
lcall
jo
test
xchg
cmp
adc
scas
push
cs
xor
dec
aam
lcall
jns
sub
sbb
mov
xchg
push
loopne
xor
aas
pusha
add
jp
xor
lret
sub
or
cmp
out
fnsave
out
sub
ret
js
adc
push
dec
jmp
mov
push
in
sbb
rorl
jg
hlt
push
add
enter
mov
in
cmp
xor
lret
imul
out
pop
xchg
push
add
out
movsl
sbb
popf
push
mov
mov
add
aaa
pop
inc
inc
imul
je
addr16
into
mov
cmpsb
bnd
sbb
mov
lock
dec
pusha
pop
xchg
pop
sub
enter
rclb
stc
adc
dec
sbb
sbb
fdivr
xor
mov
and
cmc
mov
sahf
fdivrp
push
int3
roll
jnp
lea
lods
sbb
push
in
mov
cmc
inc
add
lods
inc
mov
pop
in
loop
ret
cmpsl
pushf
hlt
push
std
vmptrst
sub
mov
icebp
enter
lods
mov
sbb
jg
test
adc
sar
push
xlat
dec
xor
popf
jns
pushf
or
rclb
test
fs
call
xor
dec
addb
fwait
jg
cmpsb
add
and
subb
mov
and
jb
gs
test
mov
jbe
jb
add
cli
enter
ror
inc
jge
jg
ljmp
xlat
dec
out
fmul
fmul
and
lock
jmp
lock
out
or
fnstenv
outsb
fimuls
ret
sbb
std
add
test
push
sub
xor
xor
ffree
sbb
fdivl
je
addb
sahf
sbb
inc
insb
lea
repz
jge
loop
adc
push
clc
sbb
icebp
push
and
lret
imul
mov
shrb
push
jo
aas
sub
sbbb
or
arpl
cld
mov
dec
mov
cmp
and
sbb
test
mov
std
lret
pop
repz
push
pop
inc
out
lcall
testl
push
push
cli
pop
pop
call
pop
sub
mov
dec
pop
sbb
dec
cmp
sbb
jle
pop
xchg
xchg
fisttpl
iret
xchg
mov
xor
enter
lret
sbb
test
and
inc
pop
sahf
lahf
rolb
clc
jp
lods
ror
sub
daa
lret
mov
pop
pop
inc
lahf
test
repnz
and
roll
mov
shl
jo
in
repz
out
pop
mov
mov
jmp
popl
mov
push
mov
inc
add
std
int3
iret
dec
js
pop
push
inc
sti
add
inc
mov
push
insb
out
jns
and
or
and
mov
addr16
jb
out
movl
rcr
xchg
xchg
fmuls
push
ja
mov
mov
push
cmc
sti
clc
xor
inc
xchg
movsl
jae
dec
xor
rorb
or
std
add
test
cmp
lods
add
adc
je
xchg
sti
push
add
cmp
fsub
pop
add
push
cwtl
rcl
jns
sbb
imul
pop
mov
fsubrp
pop
leave
inc
or
fcoml
pop
push
mov
inc
loop
and
xchg
outsl
jnp
mov
pop
or
lods
pop
test
addl
pop
es
daa
cs
mov
mov
lods
das
xchg
sbb
mov
pop
lods
data16
lock
xor
pusha
cld
stos
clc
adc
lods
jbe
or
push
mov
das
dec
mov
insb
jb
jbe
fucom
sub
cmpsb
movsl
lret
cmp
jmp
loopne
ljmp
inc
xor
icebp
adc
lret
subb
or
and
call
js
and
arpl
push
leave
xor
jns
mov
jl
call
cli
sbb
pop
jb,pt
fs
add
sub
scas
inc
lods
adc
testb
inc
inc
insl
call
leave
fsub
pop
cmpsb
adc
dec
inc
dec
add
cmc
cs
sub
jae
push
subb
fcomps
push
ja
jns
fs
cmp
adc
lods
leave
mov
fld
das
pop
dec
mov
mov
cld
enter
ss
push
ud1
push
xlat
mov
adc
jnp
cmp
loopne
int3
stc
push
movsl
leave
xchg
lahf
dec
sub
inc
shlb
push
out
mov
xor
repnz
push
lret
lods
jns
push
ficomps
push
daa
adc
mov
rcrb
cmp
mov
dec
mov
jnp
mov
xchg
inc
mov
sub
adc
loopne
cs
es
sbb
sti
scas
ljmp
mov
cmp
fsubrl
dec
sub
xchg
pop
sub
test
sbb
mov
int
and
and
add
dec
loopne
in
lods
push
pop
adc
in
xchg
pop
je
inc
or
repz
mov
pop
push
dec
lcall
xchg
mov
xor
insb
push
imul
jbe
and
inc
sbb
popf
rclb
repz
lea
or
push
inc
and
push
jo
das
aad
arpl
addl
adcl
cli
in
movsb
and
jno
call
outsb
xor
int3
outsb
or
pop
pushf
cmc
pop
cmpsb
out
push
clc
js
loopne
fs
mov
jae
frstor
push
pop
gs
popa
jg
adc
dec
lahf
push
frstor
jecxz
mov
fnstcw
inc
xor
pop
or
pop
dec
sub
loopne
dec
shlb
xchg
out
pop
ljmp
imul
xorb
in
fldenv
fstl
inc
pop
mov
lret
lock
cli
push
dec
or
ja
sbb
mov
bound
std
shl
fwait
insb
push
push
dec
je
fildl
cmpsl
pushf
movsl
pop
mov
flds
aad
aam
cmpsb
test
movsl
xchg
test
rorl
cmpsb
xorb
xor
decb
inc
js
xchg
icebp
pop
inc
lods
andl
out
mov
cmp
push
lcall
in
xor
and
jbe
mov
and
mov
inc
push
push
pop
pop
repnz
xchg
mov
mov
inc
and
xchg
lods
adc
cli
insl
xor
add
push
les
or
out
push
repz
mov
push
js
add
clc
daa
jge
sub
sub
out
push
in
mov
insb
sti
stos
iret
test
sub
dec
adc
mov
lahf
test
sahf
cmp
pop
cmc
xchg
leave
or
inc
dec
lods
cmpsl
subl
add
je
push
sub
push
jge
mov
cmp
cmp
ret
data16
jecxz
push
inc
int
dec
rolb
iret
lods
ret
std
xchg
pop
pop
mov
sbb
inc
hlt
fnstsw
popf
movsl
scas
xor
aam
xor
das
mov
dec
inc
stos
shll
mov
mov
shll
mov
lcall
jle
fs
or
lock
clc
or
addr16
fwait
adc
and
repnz
mov
adc
jne
repz
cmp
pop
sub
xchg
jae
and
sub
ficomps
inc
add
in
xchg
jl
mov
push
mov
cmp
bswap
xchg
add
ret
xchg
or
add
cmc
repnz
stos
movsb
scas
jne
outsl
shrb
scas
int3
mov
xchg
cs
insb
xor
pop
xchg
jae
jns
negb
in
fdivs
out
repz
xchg
inc
shl
push
shrl
out
sti
adc
popf
dec
inc
pop
leave
adcl
mov
fidivl
jne
and
sub
fildll
loopne
inc
fwait
dec
ss
pop
jbe
pop
push
daa
neg
int3
mov
pop
lods
xchg
sub
jge
and
mov
xchg
xor
daa
cmp
movsl
cmc
test
mov
decb
adc
dec
mov
pop
mov
push
aad
xchg
fstpt
push
push
xor
xchg
fdivs
aam
bnd
sbb
pop
push
inc
and
jbe
mov
mov
push
adc
mov
xchg
cld
cmc
lret
cmpsb
in
in
xchg
fdivrp
in
es
js
xchg
pop
lea
fisubs
adcl
sbb
jns
pop
outsb
jecxz
mov
push
shrb
or
fdivr
and
jae
jmp
pop
loopne
dec
cld
xchg
in
bt
mov
jp
repnz
sbb
mov
in
and
scas
cli
jecxz
adc
xor
outsl
or
aas
mov
xchg
jg
pop
testl
mov
ja
cli
xchg
insl
hlt
in
adc
mov
enter
stos
adc
test
sub
scas
push
data16
mov
jmp
mov
aas
inc
or
lcall
dec
push
idivb
testl
out
shrb
imul
lret
out
inc
inc
lock
leave
mov
ret
sub
shll
sub
mov
test
dec
or
cmp
push
xchg
jp
mov
rcrl
xchg
icebp
lods
xor
ja
xchg
or
dec
xor
and
clc
sub
adc
pop
push
sub
dec
pop
aam
stc
into
xchg
jae
neg
das
popf
jae
movl
add
or
fldl
dec
mov
mov
mov
and
movsb
or
mov
cmp
xchg
nop
add
xchg
pop
pop
inc
shlb
pop
clc
sbb
test
sbb
push
roll
outsl
sbb
add
or
je
xchg
aad
int
jge
inc
lea
ljmp
jmp
fdivr
fwait
loopne
jnp
add
pop
mov
mov
sub
pop
jne
sub
jecxz
dec
adc
xchg
mov
call
mov
lret
sbb
aaa
sbb
mov
rcrb
ljmp
cmpb
test
dec
mov
test
cltd
mov
clc
inc
xor
xchg
xor
adc
sbb
outsb
std
in
gs
lods
out
cmp
dec
push
jns
rclb
add
mov
sbb
fwait
mov
ror
mov
iret
jne
jp
in
jno
popf
push
imul
sub
in
out
sbb
mov
xchg
inc
sarl
popf
jp
outsb
fmuls
sub
mov
or
ret
data16
mov
push
push
inc
dec
mov
xor
xchg
pop
in
pop
push
in
fildl
arpl
push
fsincos
dec
in
shlb
les
mov
in
in
mov
mov
xchg
push
lods
fcompl
pop
cmp
fs
pop
jno
int
jo
out
test
std
inc
jecxz
aas
cld
stos
xor
scas
jle
aas
pop
jne
bound
sbb
add
xchg
iret
mov
idivb
mov
or
enter
mov
aam
xchg
mov
fmull
das
push
mov
push
mov
and
and
scas
addr16
ja
lret
arpl
pop
push
push
mov
sub
sub
adc
sbb
jae
data16
jno
mov
rorb
shll
and
sub
xchg
mov
outsb
je
cltd
mov
pop
adc
adc
pxor
mov
icebp
adc
and
xchg
ret
cmp
sub
pop
shll
andb
lea
mov
dec
inc
mov
popa
jb
sbb
in
je
outsb
cwtl
hlt
div
daa
and
push
sub
push
ss
inc
dec
aad
mov
cmpsl
loop
stos
xchg
xchg
call
and
in
push
mov
or
rclb
jmp
dec
ss
iret
jmp
push
ret
push
mov
sub
js
jp
add
mov
movsb
mov
popa
pushf
inc
jnp
mov
test
aas
xchg
inc
pop
xchg
and
test
and
les
inc
mov
dec
adc
mov
jl
and
and
and
cmp
cmpsl
xchg
or
clc
aaa
mov
push
std
mov
jae
scas
jmp
stos
adc
repnz
xor
mov
dec
pop
xchg
mov
stc
out
add
ret
stos
mov
xor
and
aas
and
insl
mov
insb
lds
push
cmp
shl
pop
mov
fildll
inc
aam
pop
mov
cltd
add
jmp
jo
in
call
push
push
xchg
inc
stos
js
outsb
pop
xlat
fcmovnb
js
xchg
nop
jbe
loopne
ret
and
aaa
cmp
add
cmp
pop
fdivrl
sub
lock
flds
inc
mov
sarl
adc
cmp
mov
sbb
cmc
movsl
add
and
and
xchg
fdivs
mov
dec
jmp
out
nop
sbb
in
mov
ret
scas
jmp
addl
xor
push
push
pop
push
les
dec
jnp
fldt
cld
jae
mov
jp
jge
pop
pusha
or
loope
fcomps
in
or
ss
stc
imul
cli
fxrstor
ja
adc
push
neg
jl
cmpb
fsubr
ds
jns
xchg
fisttps
andl
dec
xchg
adc
stos
mov
icebp
int3
das
cld
call
xchg
push
xchg
mov
pop
inc
and
mov
shlb
popf
movsb
xchg
data16
pop
outsl
xlat
mov
shr
xchg
iret
pop
xchg
ret
xchg
push
add
dec
pop
test
add
ja
popf
scas
sub
dec
sbb
sub
pushf
mov
test
in
out
das
adc
aad
sarl
jge
les
sub
push
je
mov
mov
mov
aam
icebp
push
xor
loopne
mov
shrb
divb
into
jle
mov
cmpsb
ret
iret
in
test
lea
xor
mov
fwait
mov
sbbl
xchg
mov
push
xorl
cmpsl
xor
push
mov
or
lahf
or
cmc
jg
or
inc
loope
dec
jo
bound
call
scas
aam
push
sbb
mov
test
inc
mov
stos
aam
cmp
sbb
xchg
add
push
add
sahf
jae
jbe
daa
int3
mov
jmp
add
and
gs
fwait
testl
jl
hlt
xor
in
rcrb
mov
xor
pop
dec
xor
hlt
mov
fdivs
outsl
sti
mov
or
add
aad
adc
pop
jecxz
xlat
sub
out
add
fnstenv
sarl
ss
or
and
fbstp
pop
mov
shl
pop
mov
xor
in
cli
xchg
popa
cmpsl
push
xchg
mov
pop
fdivp
lds
mov
leave
subb
lcall
lods
test
loopne
stc
cmp
cmp
or
dec
adc
xrelease
testb
fwait
adc
mov
aaa
pusha
or
movzwl
ret
pop
jns
mov
inc
add
je
sbb
rorl
shll
ret
mov
inc
mov
cmc
jl
mov
shlb
adc
dec
daa
push
and
mov
rorl
outsb
mov
sti
and
mov
push
int3
add
fisttpl
xchg
pop
add
stos
dec
ret
pusha
inc
daa
ret
cmp
iret
mov
les
shlb
xlat
sub
fsubrs
out
scas
push
mov
jecxz
aam
push
dec
js
xor
inc
in
xchg
or
cmp
daa
and
cltd
sti
push
sub
mov
enter
xor
clc
imul
xchg
dec
mov
std
push
cmp
pusha
fisubl
adc
pop
std
inc
int
push
inc
cmc
test
add
inc
adcl
or
mov
add
repnz
aam
and
push
push
jmp
nop
cmp
push
iret
movsl
lods
push
mov
loope
mov
imul
notb
rcr
fdivr
rcr
gs
into
jo
push
adc
cmpsl
daa
push
push
sub
push
and
int
aas
sarb
xchg
xor
push
mov
inc
call
inc
xlat
mov
xchg
sbb
in
mov
into
pop
xchg
mov
les
outsl
fnstenv
and
xchg
xor
mov
push
jno
and
xor
in
pop
insb
push
sbb
jnp
or
jmp
into
les
inc
popf
mov
sub
sbbl
popf
jne
push
xchg
and
xor
inc
push
sbb
adc
push
aam
xchg
and
fdivs
and
jns
in
inc
and
shrl
rcrb
jmp
out
sbb
rcrb
sahf
ja
push
jbe
in
push
arpl
jg,pn
and
arpl
imul
in
xchg
decl
mov
cmpb
out
sbb
shlb
pop
leave
pop
mov
push
int
out
fstpt
aam
jne
dec
ficoml
cmp
or
outsb
stos
test
mov
adc
push
cmpb
popf
mov
push
loope
test
xchg
ljmp
pop
mov
popa
into
scas
cmp
lret
in
or
stc
mov
out
sbb
pushaw
mov
clflush
shll
fildll
ret
pop
xchg
sub
jle
push
xchg
push
xchg
mov
cmpsl
into
push
fiadds
ja
mov
sahf
pop
scas
aaa
mov
outsb
idivl
push
xchg
push
xchg
mov
cmpsl
into
push
fiadds
ja
mov
sahf
pop
scas
aaa
mov
push
idivl
sahf
xchg
push
xchg
mov
cmpsl
into
push
fiadds
ja
mov
scas
aaa
push
daa
pop
xlat
add
xor
pop
jecxz
xchg
push
pop
cs
mov
in
inc
ja
adc
lahf
push
clc
push
enter
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
push
push
call
mov
lea
push
call
movzbl
push
mov
pop
cmp
sbb
and
add
cmpl
mov
je
cmp
je
call
mov
mov
movzbl
movzbl
sub
je
call
incl
mov
jmp
mov
push
mov
call
movzwl
mov
mov
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
not
mov
or
mov
lea
push
call
mov
pop
pop
leave
ret
