jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
sub
pushf
shll
inc
jp
mov
or
pop
add
add
add
and
int
dec
add
hlt
add
add
or
mov
add
aad
addb
add
pop
test
jnp
fldl
sbb
or
dec
add
add
ret
add
add
add
cmp
jnp
cmpsb
add
inc
add
add
and
mov
add
add
add
add
fiadds
add
add
add
sbb
pop
add
jnp
push
add
outsl
add
add
add
add
add
add
add
jnp
sub
mov
jnp
into
add
push
add
mov
call
add
add
add
add
add
inc
add
add
add
add
add
or
jnp
cmpsb
add
pop
add
add
add
add
add
add
add
add
push
add
add
inc
add
add
add
add
cwtl
add
add
popa
add
add
into
add
add
add
popl
rolb
add
add
xlat
add
add
imul
adc
jnp
xor
jo
test
les
call
add
add
add
out
add
rolb
add
add
pop
add
add
add
pop
add
je
xor
pop
add
aam
popa
add
hlt
add
into
add
cmpsb
add
add
aas
add
add
add
add
add
add
add
add
cmp
jo
loope
outsb
add
add
pop
add
add
or
ret
add
add
add
out
add
add
add
xchg
add
inc
add
add
dec
add
add
aas
add
sbb
xchg
add
add
ret
add
add
add
inc
add
add
jno
aaa
add
call
add
add
add
add
add
mov
jno
popa
add
aaa
add
xor
testl
sub
jnp
aas
add
add
pop
add
add
jnp
jnp
add
dec
add
add
add
and
sbb
cwtl
add
and
sub
add
jnp
sub
imul
test
jnp
fldl
jo
jnp
sbb
add
aam
popl
mov
add
rolb
add
xchg
add
add
out
add
add
add
add
out
add
sub
sbb
ret
add
add
jno
out
add
jnp
jo
push
add
add
add
add
fiaddl
pop
add
jnp
mov
cmp
pop
add
lcall
add
dec
add
add
add
add
add
add
add
add
add
or
add
add
add
sahf
add
into
add
add
add
aad
into
add
add
add
add
jmp
sahf
add
add
add
cmp
adc
outsb
add
add
add
cmp
mov
je
dec
add
add
outsb
add
add
xchg
add
or
pop
add
jnp
xlat
add
add
add
cmp
add
add
add
add
sbb
add
test
into
add
add
add
inc
add
xchg
add
add
add
aad
rolb
add
mov
add
inc
add
movsb
add
add
pop
add
or
movsb
add
dec
add
add
pop
add
add
mov
add
add
add
ret
add
test
add
aad
addl
add
add
add
add
add
add
mov
ss
aam
cli
ret
test
pop
sti
insl
lock
pop
jno
sbb
pop
and
pop
inc
stos
repz
cli
loop
scas
add
jg
lret
or
sbb
adc
xchg
or
inc
loop
sub
leave
lea
adcl
jmp
jp
mov
aad
push
nop
push
pop
push
leave
insb
xchg
stos
loopne
push
pusha
mov
push
outsb
sbb
aad
mov
ret
jle
adc
movsb
push
loopne
inc
mov
ds
push
inc
mov
repz
pop
test
add
fnstcw
test
jae
adc
push
mov
lret
mov
pushf
call
sub
cmp
mov
scas
fsubrl
or
scas
push
dec
leave
ret
or
dec
bnd
mov
push
out
scas
jle
pushf
stos
pop
icebp
scas
lea
mov
jo
arpl
std
clc
push
jg
mov
popf
sub
in
cwtl
leave
subl
cltd
or
pop
jae
andl
insl
push
sarb
in
xor
dec
or
test
sbb
pop
mov
shrb
stos
jp
lahf
enter
mov
or
xchg
inc
mov
cwtl
fs
dec
out
mov
inc
cmpsl
shl
pushf
or
sbb
and
in
cmpsb
pop
pop
push
jo
das
xor
or
mov
inc
and
loopne
cli
dec
and
cmpsb
lret
xchg
add
lds
add
cmc
ror
jbe
insl
mov
ffree
jle
call
loopne
cli
stc
cmp
inc
fwait
cs
faddl
xchg
sbb
ss
fildl
lods
test
sub
lea
fcoml
mov
push
jae
in
dec
mov
jp
mov
lea
mov
xchg
rclb
mov
js
push
push
jae
push
jae
xchg
shr
movsl
js
gs
faddl
mov
ds
aas
ljmp
sbb
xchg
pop
js
cmp
icebp
push
in
fidivrs
inc
fistl
mov
adc
mov
inc
call
repnz
shrl
add
jo
or
stos
sub
rolb
fiaddl
rolb
dec
push
roll
je
xor
cmpsl
mov
or
aaa
mov
xchg
push
push
scas
mov
xchg
mov
push
push
out
insl
sub
sub
sub
shlb
adc
in
pop
out
sbb
jno
movb
sub
imul
jne
push
fidivrl
fsubl
push
daa
iret
out
adc
add
add
add
add
rolb
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
iret
xchg
jg
outsl
mov
jg
mov
fbstp
iret
push
xor
daa
sahf
inc
mov
scas
scas
ja
xchg
jle
outsl
mov
vmptrst
out
sbb
iret
pop
sahf
daa
out
aaa
lahf
xor
scas
ja
sahf
dec
mov
outsl
scas
pop
fimuls
iret
aas
ljmp
in
filds
iret
xor
pop
mov
or
and
lret
dec
out
ret
xchg
comiss
les
sbb
int3
pop
lock
fsubr
cwtl
and
or
cs
mov
and
sbb
stos
clc
xor
cmpsb
ja
enter
or
sbb
jo
push
call
mov
pop
stos
filds
lahf
pop
test
loop
out
cmp
ljmp
pop
and
and
fists
or
fadds
mov
scas
cwtl
movsl
addr16
push
testl
das
lahf
mov
mov
mov
inc
out
cmp
repnz
js
jecxz
pop
ljmp
out
cmpsl
and
jge
fsubs
jmp
mov
gs
jno
nop
dec
xchg
outsl
mov
aas
out
out
filds
iret
ud0
out
cs
pop
dec
mov
xchg
in
ret
pop
lds
js
dec
xchg
mov
jge
nop
and
push
rorb
fistpl
add
or
or
daa
fdivrs
imul
jae
jb
inc
mov
out
add
xchg
sbb
dec
repnz
hlt
aas
out
neg
pop
iret
pop
jmp
out
aaa
lahf
inc
push
mov
xchg
jg
outsl
mov
aas
out
neg
pop
iret
pop
jmp
out
aaa
lahf
inc
push
mov
xchg
repnz
adc
add
push
mov
sbb
test
addb
xlat
and
mov
fists
lret
lds
movsl
in
sbb
push
test
or
pop
aad
test
nop
push
pop
leave
in
cmpsl
les
xchg
and
jecxz
sbb
pop
adc
lret
adc
sub
into
cltd
dec
pop
out
test
push
movl
push
shll
subl
jbe
adc
mov
sahf
or
cmp
or
repz
fsubp
in
imul
ds
pop
lea
xchg
and
int
pop
cmp
add
mov
in
adc
push
pusha
cmp
sbb
pop
imul
rclb
fdivs
bound
loope
repnz
std
pop
inc
insb
cltd
inc
mov
fxam
pop
ja
in
jp
jmp
jp
js
sub
dec
sub
stos
push
in
jecxz
push
test
shl
and
and
js
ficomps
sub
dec
sub
or
push
ds
arpl
jg
aaa
leave
and
push
xor
and
adc
iret
sub
mov
lahf
sar
jmp
mov
repnz
xchg
inc
or
pusha
xor
pop
xorb
and
jg
call
std
addb
aam
adc
pop
push
fsubs
in
mov
rorl
sub
subb
adc
clts
add
pop
pusha
bound
xchg
xchg
sbbl
add
imul
sub
cmpsl
inc
pop
cmpsl
pusha
or
fwait
push
push
rcrl
mov
sbb
sbbb
xchg
aaa
jae
jl
jno
test
jmp
sbb
out
test
popa
test
in
mov
mov
jg
jb
pop
or
std
ljmp
cwtl
jle
xlat
ret
jg
xchg
sti
pop
mov
pop
fimull
int
jmp
in
loop
jne
sahf
cld
mov
jle
adcb
xorl
test
pop
pop
jecxz
xchg
mov
adc
mov
cmp
popa
adc
jnp
push
inc
jne
push
mov
stc
shrl
mov
mov
fnstenv
cmovns
je
scas
xchg
cltd
mov
icebp
cmp
mov
and
mov
mov
rolb
mov
es
push
mov
push
aaa
insb
sti
sbb
popf
mov
and
daa
stos
insl
leave
push
push
outsl
sahf
fsubrp
loopne
imul
orb
mov
stc
mov
mov
lcall
dec
dec
fistl
scas
add
inc
test
movsb
mov
jne
jge
addr16
lcall
movsl
xor
xchg
xor
sub
shrl
imul
js
cmp
aas
push
shll
lcall
or
jg
inc
leave
popa
js
push
xor
add
fisubrs
push
mov
inc
dec
movsb
inc
jmp
jmp
std
sbb
ljmp
movsl
jl
sbb
xchg
mov
mov
popf
sbb
mov
xchg
mov
orb
pop
faddl
adc
jl
in
mov
xor
cmp
or
xor
xchg
jno
stos
imul
xchg
pusha
in
push
sub
lods
dec
add
mov
inc
sti
mov
cmp
idivl
out
mov
or
imul
pop
pop
in
push
lods
push
cs
mov
loop
es
mov
inc
lds
mov
mov
cmp
popl
mov
popf
sbb
mov
ljmp
mov
aas
out
ds
sub
not
adc
lods
daa
mull
cmp
dec
cmp
daa
inc
icebp
add
int3
test
shlb
push
dec
fdivr
dec
dec
or
xchg
mov
cld
in
mov
xchg
scas
cmp
sub
loope
iret
or
xor
fcomi
inc
loop
and
or
incl
sbb
std
lret
cmp
or
pop
push
lret
in
sbbl
add
cli
mov
inc
mov
test
or
icebp
pop
lods
dec
daa
inc
dec
inc
jo
test
and
mov
addr16
pop
mov
jnp
imul
xchg
xor
mov
add
dec
in
jle
ret
push
inc
rclb
dec
or
rol
dec
pop
jbe
push
ljmp
ja
lods
cs
cmp
pop
add
push
sar
mov
inc
sarb
fcmove
xchg
loope
xchg
cmp
cmp
insl
imul
mov
cmp
iret
sbb
pop
jg
adc
mov
imull
cmc
cmp
jmp
lahf
aaa
pop
or
add
loop
lahf
push
stc
mov
and
leave
cmc
fisubrs
mov
mov
fsub
fmulp
jecxz
stc
addb
dec
iret
push
pop
dec
lret
fimuls
jnp
mov
mov
jmp
enter
std
mov
inc
roll
or
idivl
scas
int3
sub
inc
outsb
adc
or
jp
movsl
daa
jl
xchg
repz
pop
jae
movsl
inc
mov
std
mov
scas
ds
imulb
and
pop
repnz
sbb
rolb
adc
pop
sbb
sub
sti
nop
lret
ja
rcll
nop
fdivs
stos
xchg
cmp
clc
repz
or
jno
cmp
xchg
in
jp
or
loopne
ljmp
ret
xchg
inc
leave
cmp
jmp
out
xchg
cmp
enter
je
adcb
mov
lahf
cmp
popf
cwtl
jl
mov
jecxz
std
adc
xchg
enter
jbe
mov
mov
stos
fs
das
mov
xchg
pusha
stc
inc
lret
sub
mov
nop
push
xchg
dec
inc
stc
push
call
lods
jns
mov
aad
adc
iret
pop
shll
movsl
sbb
mov
jge
add
rcll
jp
push
jg
out
add
mov
cwtl
jbe,pn
cld
fcmovnb
fcoml
insb
test
push
push
fnsave
out
pop
std
sbb
outsb
push
stc
decl
test
push
push
dec
fisttpl
jno
inc
xor
inc
pop
popa
mov
scas
shll
and
js
in
lods
stc
add
arpl
bound
fdiv
lcall
fisubrs
in
sarb
cmpsl
mov
lcall
sub
into
int3
pusha
mov
fwait
push
push
mov
imull
loopne
stos
mov
pushf
loopne
inc
imul
call
outsb
cmp
mov
xor
loop
mov
xchg
mov
xchg
fwait
mov
dec
sbb
pop
cmp
pusha
movsb
pop
sub
push
push
push
test
sub
xchg
xchg
rcr
pop
pop
xchg
lahf
out
adc
inc
into
add
add
aas
mov
inc
or
mov
adc
or
or
jo
adc
ret
jb
call
sahf
lds
add
fs
and
subl
movsb
pop
jge
pushf
sub
or
adc
push
jecxz
cmp
jns
mov
push
pusha
cmpsl
mov
jnp
jb,pt
out
adc
add
movsl
add
add
mov
push
nop
add
scas
inc
jb
fnstenv
mov
in
mov
jle
xchg
std
xchg
inc
jl
loope
xchg
add
ja
cmp
in
fisttpll
aam
into
pop
mov
add
inc
mov
insl
nop
pop
push
add
mov
push
xor
xchg
push
mov
cmp
hlt
mov
cmp
in
es
inc
mov
repz
or
mov
push
das
vmovaps
mov
xchg
jne
outsb
iretw
out
cmp
xchg
sbb
sbb
add
jl
mull
test
fdivl
dec
das
jno
lea
test
addr16
adc
lock
popf
shl
lods
in
daa
repnz
movsb
xchg
xchg
pop
or
psllq
mov
push
gs
inc
push
cmpsb
shl
fmulp
add
sub
pop
push
inc
movsb
sub
push
popa
outsl
call
jbe
mov
dec
lahf
push
into
or
cwtl
stos
in
test
inc
cmp
xchg
jo
mov
mulps
adc
outsb
pop
lock
xchg
ja
pop
mov
pop
ds
rolb
outsb
ret
cs
bound
mov
sub
xchg
jns
leave
sub
fisttps
adc
ja
fdivrl
mov
or
mov
sbb
loop
sbb
cmp
mov
rol
test
imul
push
outsb
mov
imul
sub
xchg
mov
outsl
cs
fcompl
xchg
jmp
push
in
sbb
lds
add
dec
jp
cli
add
arpl
das
test
add
add
pop
xor
and
fsubrl
xchg
iret
fdivrs
in
xor
sbb
mov
sub
push
rolb
pop
orl
dec
sti
shr
movsb
push
lahf
mov
rcll
jg
jno
and
xchg
jb
mov
into
push
pop
imul
loopne
in
sarl
mov
les
cmp
pop
mov
sbbb
xor
insl
mov
out
les
sub
stos
mov
sbb
push
jp
das
fldcw
adc
pop
push
mov
add
jge
pusha
leave
mov
jae
stos
out
and
xor
mov
push
xor
jnp
pop
nop
out
mov
loopne
inc
aam
cmp
cmc
push
std
add
push
xlat
aas
mov
inc
sbb
mov
mov
insb
dec
sbb
lahf
pop
arpl
adc
stc
fcoms
shlb
jns
cs
in
cmp
or
arpl
dec
pusha
ja
xor
push
adc
jg
mov
adc
mov
adc
inc
insl
stos
lret
mov
rolb
pop
cmpsl
in
pop
push
pop
mov
popa
mov
sti
rol
jle
dec
jnp
xchg
dec
sbb
fwait
aaa
or
int3
adc
inc
mov
bound
xchg
pop
jno
loope
mov
jl
cltd
lcall
loope
leave
stc
iret
addr16
xchg
push
js
xchg
outsb
mov
test
fwait
jle
push
xchg
clc
fwait
xor
popf
jp
push
push
pop
or
test
es
push
and
mov
dec
repz
and
mov
sub
and
dec
aad
jl
lods
and
insb
popf
into
popf
data16
insl
or
pop
lea
std
repz
pop
iret
jnp
nop
jecxz
jnp
inc
pop
cwtl
out
cmpsb
fldt
lahf
and
mov
mov
pop
sti
mov
lock
push
inc
ficompl
aam
xchg
and
jmp
mov
pushl
cmp
popf
out
call
loope
adcb
and
xchg
hlt
scas
cltd
movsb
aaa
pusha
sbbl
lea
cmp
pushf
bsf
out
or
or
pop
lods
jg
sub
xchg
outsb
cld
fists
es
cmp
mov
pushf
in
push
push
loopne,pt
aas
bswap
jne
push
sub
imul
outsb
pop
pushw
std
in
mov
jecxz
sti
jo
push
sbb
xor
movsl
sub
xchg
mov
mov
xor
ret
and
icebp
or
mov
fstpt
sbb
sub
xchg
cli
ficompl
dec
sub
repz
int3
scas
cmp
mov
les
in
jmp
sub
fldl
xor
push
adc
into
adc
xor
movsl
and
fstl
mov
roll
push
pop
iret
sbb
loopne
fsubs
or
and
xchg
sarb
iret
lea
aad
ss
push
pop
ret
and
loope
mov
or
insb
cld
cld
test
adc
jno
dec
pop
adc
jecxz
xlat
out
push
ret
ss
fldt
dec
in
jmp
jp
flds
or
mov
nopl
xchg
cli
pop
pop
or
imul
fcompp
mov
adc
mov
in
fs
sub
das
and
inc
into
pop
rorb
mov
cwtl
dec
orl
imul
jge
out
in
ret
adc
adc
or
cld
jmp
mov
je
inc
scas
push
bound
pop
inc
push
iret
pop
lret
testb
int3
rol
lds
adc
mov
and
dec
arpl
loop
int
inc
inc
sbb
sar
es
jo
pop
icebp
mov
ja
loope
pop
fmuls
repnz
add
cmp
push
xchg
adc
inc
pop
inc
xor
fwait
test
shl
xor
test
sbb
cwtl
lahf
scas
mov
bound
and
dec
pop
subl
xchg
inc
push
dec
dec
inc
xchg
inc
or
test
pushf
mov
hlt
pop
js
push
xchg
jmp
xchg
pusha
inc
cmp
icebp
dec
stos
dec
lahf
inc
xchg
enter
bound
mov
xorb
add
jb
mov
or
or
int3
pop
test
shl
fstl
cmp
mov
jmp
mov
int
je
or
or
inc
sahf
dec
rolb
movl
xor
xor
repnz
shlb
mov
lds
xchg
xor
mov
mov
fidivs
add
push
stos
and
jno
insl
lahf
test
and
repz
call
test
iret
pop
clc
or
sub
mov
push
fstps
mov
pop
xor
sub
sbb
add
jge
ret
add
pusha
push
cmp
call
adc
inc
jns
mov
scas
mov
xchg
int3
idivl
in
dec
imul
jl
addb
sbb
mov
js
push
pop
adc
cmpsb
lods
xchg
inc
jmp
add
pusha
rcl
gs
adc
lcall
push
mov
repz
stos
add
je
lea
push
int
loop
push
call
dec
movsl
cmp
in
jle
aas
data16
cmp
adc
mov
pop
cmp
sbb
cmpsb
xchg
pop
push
mov
dec
pop
sub
pushf
sub
or
xchg
or
and
mov
and
jecxz
jle
cld
inc
in
pop
add
jecxz
dec
cmp
or
pop
nop
mov
stos
lcall
fmul
or
out
sbb
lods
or
add
xchg
dec
pop
outsl
shlb
fldl
leave
in
xor
inc
push
pop
repnz
shrb
xor
jns
fsts
mov
adc
test
and
jecxz
and
jp
adc
push
enter
inc
or
ds
mov
lea
ljmp
pop
pushf
and
addl
rorb
in
lds
movsb
test
cmp
shlb
rorb
jbe
cmp
push
clc
sbb
dec
dec
arpl
mov
mov
xchg
dec
mov
ds
add
into
add
shl
je
mov
pop
in
or
xor
cmp
cmp
ljmp
test
or
movsl
jge
or
out
dec
arpl
push
mov
xor
add
insb
fwait
sub
or
outsl
add
pusha
in
push
arpl
push
cmp
dec
add
xchg
or
jmp
jb
jno
divb
fistps
cli
in
out
lahf
push
pusha
loop
popa
sbb
ret
jle
mov
adc
and
push
adc
push
lret
push
pop
ret
aaa
loope
cli
loope
add
push
push
ret
aam
mov
mov
pop
push
jge
push
daa
pushf
xchg
lahf
dec
mov
sbb
shl
xchg
add
enter
push
shrb
xchg
mov
iret
jb
mov
shrl
jmp
mov
scas
dec
mov
or
out
clc
sub
adc
inc
mov
inc
jb
adc
arpl
inc
shlb
movsl
cmp
push
cli
test
mov
mov
testl
ljmp
mov
cmp
lock
addr16
nop
cmp
mov
inc
enter
add
jae
cltd
pushf
test
test
cmp
js
outsl
call
popf
push
mov
sub
lcall
das
int3
dec
mov
fldl
scas
push
cmp
cmp
pop
ficoml
and
xchg
adc
jl
mov
lock
and
out
stc
dec
inc
ret
inc
mov
mov
xor
dec
and
fcmovb
mov
jno
cmp
add
pop
aam
jbe
cmp
adc
xor
in
js
jge
aas
mov
orb
dec
or
xlat
ficoml
or
sbb
xchg
inc
ja
cmpsb
mov
aaa
inc
xor
jle
bound
xchg
pushf
cltd
jns
pop
jle
cmp
dec
aad
add
inc
adc
sub
adc
repnz
push
pop
xor
jo
inc
cmp
scas
cltd
in
jmp
push
or
mov
pop
ds
fsubr
addr16
rorl
cwtl
mov
adc
int3
mov
lea
dec
push
xor
fwait
lods
fistpll
xchg
lock
ret
bound
cmc
inc
sahf
sub
stos
sti
daa
pop
or
xor
movsb
mov
lock
jns
add
rcl
sub
inc
sub
push
adc
pop
out
ds
lahf
mov
xchg
push
mov
and
divl
dec
add
fbld
into
lods
push
in
shrb
test
enter
push
or
stos
mov
cmp
fisttps
or
cld
hlt
es
mov
nop
mov
cld
pop
inc
xor
roll
jne
dec
into
jno
fcom
sub
xor
lds
pop
mov
call
xchg
out
inc
xchg
cmp
pop
xlat
aam
movb
push
cld
dec
jle
push
xchg
lods
insb
or
mov
pop
outsl
cmp
pusha
mov
jo
dec
mov
pop
aam
pop
add
shll
mov
adc
adc
sub
imul
dec
lock
sarb
and
mov
fs
jl
mov
out
inc
daa
mov
xchg
mov
mov
shrl
sbb
pop
adc
roll
jge
pop
jns
shll
sbb
cmp
push
scas
idivl
arpl
adc
add
iret
dec
js
outsb
push
push
pop
out
cltd
das
pop
cltd
xor
lret
or
mov
push
out
jge
push
xor
cmp
in
xchg
dec
cmp
inc
push
test
aas
lock
mov
push
cld
mov
adc
mov
stos
jnp
sarl
mov
xchg
cmp
and
insl
enter
in
xlat
mov
or
jmp
fimull
pop
pop
movsl
mov
out
jns
scas
int
mov
xchg
mov
add
sub
cmp
inc
jl
aam
sub
dec
adc
pop
mov
bnd
cli
mov
mov
sbb
mov
stos
and
dec
sbb
fidivl
int3
test
xchg
and
bswap
stos
cmpb
out
dec
xchg
dec
test
dec
cmpsb
imul
push
and
ljmp
adc
or
mov
into
xchg
or
jecxz
les
xchg
arpl
mov
shll
jno
test
fimull
jmp
in
or
addr16
adc
lock
mov
addr16
jbe
inc
inc
sub
sbb
lea
jg
cmp
or
imul
movsl
and
insb
mov
or
jae
shr
call
mov
pop
cltd
rcl
dec
jbe
addr16
imul
bound
scas
repnz
xchg
cmp
add
jb
sbb
fsubl
xchg
bound
or
sub
mov
ret
mov
int3
filds
lahf
ret
jnp
xchg
sbb
xchg
push
cli
xor
push
dec
fsubr
jnp
dec
call
cwtl
sbb
adc
cmp
mov
loopne
add
sub
mov
fdivrs
sub
lds
lret
inc
add
mov
fcmovnb
sbb
pusha
mov
sub
sbb
mov
and
and
dec
push
add
push
xchg
sti
mov
sbb
inc
mov
jns
push
out
pop
push
cmp
push
sti
lahf
out
popf
inc
lods
in
xor
sub
cwtl
lock
xchg
loopne
outsl
mov
aas
out
neg
pop
iret
pop
jmp
out
aaa
lahf
inc
push
mov
xchg
jg
outsl
mov
aas
out
neg
pop
iret
pop
jmp
out
aaa
lahf
inc
push
mov
xchg
jg
outsl
mov
aas
out
neg
pop
iret
pop
jmp
out
xor
arpl
xchg
jle
outsl
mov
aas
out
aaa
filds
iret
mov
call
sbb
rcrl
dec
repz
outsb
daa
jbe
popa
rcrl
cs
fiadds
jae
arpl
adc
and
repz
outsb
xchg
push
orl
mov
scas
jae
insl
out
adc
and
jmp
sti
outsb
mov
fwait
push
stos
mov
into
sub
sbb
adc
insb
loope
int3
je
mov
adc
in
jb
fs
inc
mov
imul
add
push
or
mov
pop
xchg
mov
cmp
outsb
ss
lcall
bound
out
fdivr
sub
aas
pop
add
pop
fistpll
jle
ret
mov
adc
lahf
decl
inc
and
rorb
int
mov
outsb
insb
pop
orb
mov
rcr
add
pushf
mov
mov
mov
add
sub
push
and
cs
add
inc
xor
cmp
and
insb
imul
lods
stos
into
into
push
out
xor
push
mov
xor
fimull
jle
outsb
test
xchg
push
mov
mov
into
imul
out
or
and
mov
pop
xchg
pop
loopne
in
jo
jle
mov
pop
test
jmp
inc
mov
mov
sbb
push
subl
lock
and
inc
fildl
mov
scas
sbb
fistpl
orl
mov
into
jae
arpl
adc
and
repz
outsb
xchg
push
orl
mov
into
jae
arpl
adc
and
dec
int3
nop
sub
shl
call
cmp
rclb
jo
cmp
popa
in
pop
sub
scas
ret
mov
fwait
out
cs
cwtl
cmc
filds
mulb
inc
inc
cwtl
ret
ret
icebp
aam
cmpsb
jge
push
push
ret
cmp
fcomip
dec
jmp
std
outsb
pop
test
pop
adc
popa
mov
mov
shll
adc
xchg
enter
loopne
xchg
fsubs
xor
xor
data16
push
dec
sub
add
pop
bound
cmp
inc
cmp
out
pop
and
orb
xchg
push
stos
clc
jmp
pop
add
pop
into
ljmp
push
stc
push
cmp
mov
imul
outsl
push
sub
cs
push
and
mov
and
sub
pop
fstpl
cmp
mov
inc
mov
adc
mov
loope
scas
sub
gs
lods
adc
aad
pushf
outsl
mov
popf
xchg
jecxz
cmpb
sarb
mov
nop
repnz
and
test
bound
ss
mov
pop
and
mov
or
add
fdecstp
dec
stos
lock
adc
xchg
jne
jne
dec
addr16
shlb
mov
test
mov
loop
outsb
aam
dec
sti
jl
imul
sub
iret
adcb
push
test
pop
repz
stc
xchg
shll
mov
mov
dec
fs
cmpsb
outsb
cmpsb
jnp
inc
xchg
es
cmpsb
mov
mov
negb
js
add
enter
andb
shll
ss
mov
add
mov
cmpsl
adc
mov
mov
call
mov
add
push
push
mov
js
xchg
inc
or
mov
pop
sbb
in
clc
sbb
and
lahf
and
xchg
jbe
fld
lea
dec
ffree
aad
jmp
add
dec
decb
cmp
and
cmp
sti
push
dec
clc
pop
xchg
shr
negl
pop
pop
int3
rcll
xchg
scas
pavgw
dec
repnz
nop
mov
loop
fxch
cmp
insl
insb
cltd
push
mov
push
cmp
sub
fsts
cmp
into
cli
fwait
pop
xchg
sub
cmpl
mov
hlt
mov
leave
pushf
sub
ja
dec
imul
int
sbb
cmp
sti
lret
lret
sbbb
dec
mov
sub
pusha
insl
dec
jno
into
xor
fsubl
dec
sbb
jle,pn
lods
roll
cld
rolb
imul
nop
add
mov
mov
jl
or
loopne
mov
jne
aas
fadds
inc
popf
xlat
adc
fiadds
xlat
push
push
sbb
movsl
pusha
scas
mov
xor
lret
cmpsb
fisubrs
cmp
movb
fsub
shrl
dec
or
dec
hlt
pop
das
adc
mov
movsl
in
movsl
test
xorl
mov
filds
imul
and
adc
mov
inc
mov
fildll
idivb
jns
es
mov
mov
mov
pop
pop
into
aaa
sub
jg
mov
pop
inc
jne
jge
add
jne
sbb
adc
dec
or
jle
pop
dec
jne
rcrl
jg
cmp
and
adc
mov
mov
push
outsl
scas
sbb
sbb
ds
and
lret
or
ret
lods
push
jbe
xchg
movsb
pop
out
int
clc
mov
sbb
add
lahf
xchg
je
mov
xor
push
mov
std
ds
jo
repz
adc
mov
pop
adc
fcom
dec
or
sti
mov
dec
inc
popf
bound
dec
inc
cld
arpl
enter
jbe
pop
jp
into
adc
sahf
in
movsb
mov
inc
sub
dec
cmp
fsubl
inc
cmp
shll
push
js
lret
lcall
mov
out
clc
in
lds
icebp
leave
mov
call
mov
and
orl
andb
aad
rcrb
mov
xchg
jo
jnp
fimull
inc
or
mov
lahf
negb
lock
sahf
shll
popf
xchg
rcl
pop
je
sbb
xor
and
inc
dec
dec
in
shrd
outsl
xor
mov
ficoml
stos
add
adc
out
pop
das
shr
dec
add
jle
ja
clc
or
je
dec
mov
jne
dec
pop
mov
clc
add
push
std
mov
fisubrs
sti
popa
imul
icebp
and
adcl
dec
cwtl
push
dec
sub
xchg
jo
ret
xchg
adc
xchg
mov
pop
and
test
loopne
and
pop
pop
test
and
jle
sahf
ss
jne
jnp
fs
inc
js
add
cmc
out
ljmp
sub
stos
cmpsl
scas
fimuls
jb
add
movsb
xchg
sub
lds
cwtl
inc
jge
nop
mov
cmp
jl
push
fucom
sti
inc
jecxz
sub
xchg
push
mov
ficompl
in
in
das
test
xchg
int
out
add
cmp
pop
cmc
xchg
jp
ret
fsubrs
ljmp
mov
arpl
scas
pop
jecxz
pop
ror
dec
xchg
clc
test
jns
xbegin
and
pop
inc
and
pop
mov
jle
dec
lods
loopne
movntps
adc
daa
mov
pop
stos
push
cmpsb
insl
xchg
lds
adc
xlat
mov
xchg
bound
mov
int
pusha
cli
es
daa
adc
and
or
xor
cmc
mov
fsts
call
and
inc
inc
dec
dec
div
int3
and
fsts
inc
aaa
push
out
mov
test
push
arpl
push
in
sbb
adc
mov
xchg
fwait
xor
sti
pop
pop
push
add
xor
jle
mov
negb
sub
ficompl
mov
jns
out
pop
inc
inc
inc
enter
and
or
sti
mov
fidivs
ror
adc
das
xor
ror
add
mov
imull
pop
lret
mov
fmull
mov
dec
pop
push
outsb
xchg
dec
xchg
mov
daa
cmp
push
ja
xor
mov
ja
sub
cmp
mov
push
and
insb
and
mov
adc
dec
push
pop
push
mov
pushf
lret
sbb
scas
fcompl
xchg
test
dec
mov
roll
cmpsl
or
mov
or
jp
int
jle
ljmp
inc
incb
mov
cmp
lods
sub
or
dec
leave
out
mov
or
or
jb
add
lret
mov
xchg
out
jle,pt
insl
dec
mov
cmc
fsubr
push
lcall
fnstcw
in
sbb
sti
mov
mov
jge
scas
lret
popf
std
inc
pop
push
or
mov
int
popa
imul
mov
adc
jno
sbb
and
out
jns
ficompl
mull
inc
int
add
jae
sub
lds
or
xor
mov
outsl
mov
xchg
push
bound
pop
cmc
add
lea
test
repnz
std
jge
lret
add
mov
fstpt
sbb
outsl
mov
inc
out
imul
jle
fwait
add
out
xchg
dec
ret
push
mov
cmp
lods
sbb
lock
insb
sbb
je
xchg
aas
das
push
loope
dec
pop
dec
sahf
push
out
clc
jmp
pop
cmpsb
xor
fnsave
push
jae
not
stc
inc
popf
ljmp
test
popa
xchg
jmp
push
lods
rcll
cmpsb
in
xchg
sub
lahf
sbb
test
lods
nop
jns
mov
sahf
cmp
mov
repz
clc
pop
dec
jle
ds
pop
mov
cmp
cmc
pop
sahf
test
mov
add
sub
push
jae
jne
push
lods
xor
vmwrite
shl
aam
pop
xor
xor
push
gs
xchg
movsb
xchg
push
in
lahf
nop
push
sbb
ljmp
xchg
pushf
lret
aam
aam
jmp
mov
xchg
sbb
int
add
push
push
or
repnz
jae
insl
sti
fisubs
cmp
add
pop
add
or
pop
cmp
imul
ror
sar
pop
jge
repnz
pushf
pop
jbe
das
hlt
push
jmp
ss
add
pusha
add
mov
aas
jmp
loope
cmpsb
add
test
and
pushf
movl
push
popa
ret
testb
fisttps
in
loope
or
inc
int
inc
add
push
cs
clc
imul
pop
std
add
dec
sbb
pop
adc
adc
xlat
test
pop
adc
popa
mov
clc
test
adc
xchg
stos
lcall
nop
inc
in
mov
call
shlb
add
xorl
cmp
jp
push
lahf
cs
jbe
sbb
dec
pop
arpl
pop
lcall
mov
mov
lcall
movsb
adc
outsb
mov
xor
das
xor
mov
add
push
daa
xchg
mov
stos
test
pusha
out
pop
jle
je
into
dec
jo
sbb
fmull
adc
xchg
sub
call
mov
inc
push
int3
lock
ds
push
fidivrs
orl
mov
lret
xchg
mov
xor
or
sub
and
mov
addl
push
out
cli
pop
popa
ret
stos
lahf
push
es
imul
repnz
insb
fdivrs
or
xor
mov
mov
mov
shll
sub
cld
outsl
mov
fcompl
loop
dec
mov
push
add
mov
dec
push
mov
insl
xchg
and
jb
mov
pop
mov
lds
mov
or
push
jbe
pusha
inc
mov
or
jo
in
xor
and
pop
mov
mov
movsb
bound
adc
sub
lcall
pop
dec
xchg
mov
clc
inc
test
mov
fiadds
fwait
inc
nop
xor
and
sub
mov
xor
mov
mov
sbb
js
scas
dec
add
push
lea
imul
xchg
or
mov
add
gs
pop
scas
and
dec
shll
shlb
loop
adc
cmp
adc
dec
add
sbb
out
aam
stos
xchg
jmp
and
push
sti
aam
sahf
push
out
pop
ret
test
fwait
xchg
out
sub
incb
loope
bound
fsubp
mov
ljmp
call
rcr
cmp
icebp
mov
xor
xor
inc
lret
stos
shrb
fimuls
and
cwtl
mov
xchg
mov
insl
and
pushf
or
or
pusha
mov
loope
cwtl
mov
in
pop
push
cmp
popf
sub
mul
cmp
mov
xor
dec
lret
ret
call
ret
lods
or
movb
push
push
sti
push
dec
clc
jae
adc
push
dec
mov
fwait
test
push
mov
jno
pop
fistl
jnp
shrl
ljmp
sbb
pop
adc
aas
cmp
mov
dec
in
movsl
xor
xchg
mov
test
pop
clc
dec
imul
lcall
and
push
mov
add
or
push
adc
ret
call
ds
mov
mov
mov
push
in
add
jp
lahf
dec
add
data16
scas
imul
loop
push
leave
add
repz
out
dec
and
or
add
cltd
lods
xor
rorl
inc
dec
add
sbb
sbb
ljmp
jae
shl
sbb
xchg
and
mov
dec
push
push
push
inc
lret
cltd
mov
or
pusha
js
addr16
sub
imul
jg
js
imul
push
lret
jnp
jbe
test
pop
fcomip
outsl
mulb
sub
fstpt
inc
cwtl
dec
or
push
aaa
inc
sbb
xchg
or
cmpsb
and
hlt
lcall
insl
sar
cltd
xchg
sub
mov
popf
call
loopne
mov
out
pop
loop
sub
addr16
jae
mov
loopne
call
add
mov
cwtl
fcoml
movsl
dec
push
cmc
stc
cltd
orl
pop
xchg
scas
out
lea
aaa
inc
aaa
cmp
psadbw
xor
pop
movsl
pop
lcall
xor
cltd
xchg
push
pop
imul
andl
and
jle
aam
mov
cmp
lret
in
xadd
icebp
mov
movsb
call
aad
and
insb
jo
jge
dec
in
cmpsb
adc
hlt
xchg
subl
leave
pop
stc
daa
xor
fstps
fsub
sti
xlat
jo
pop
push
inc
xchg
pop
ljmp
mov
xor
pop
popf
jo
in
sub
push
das
pop
mov
push
scas
ret
sbb
or
mov
mov
or
or
mov
pop
mov
lock
add
sub
ret
cs
lahf
pop
rcll
xor
iret
push
or
xchg
xor
push
aas
mov
sbb
fistpll
cmp
enter
hlt
xchg
push
cmp
pop
data16
lods
aas
xor
pop
mov
fisubs
dec
cmc
mov
out
aam
loope
and
insb
fdivs
add
movsb
jmp
xorb
xor
pop
push
jle
push
fs
inc
aaa
inc
dec
ss
out
xor
sahf
movsb
fstps
sbb
int
dec
les
popa
loope
jp
mov
jmp
out
aaa
mov
xor
mov
mov
mov
mov
into
movsl
sub
adc
add
pop
bound
pushl
mov
jae
scas
sarl
and
cli
push
pop
pop
xchg
inc
inc
rolb
push
add
sbbl
les
xchg
inc
movsl
mov
push
or
lock
fcoms
pop
dec
jmp
or
icebp
pushf
lds
clc
lock
jnp
sub
sub
je
nop
adc
in
lret
sbb
stos
shr
bound
and
mov
fwait
sub
mov
ljmp
movsl
in
pushf
push
or
out
jp
sub
adc
xor
jno
out
xor
xchg
clc
adc
gs
mov
lret
iret
push
mov
jae
arpl
jecxz
adc
movsb
dec
xor
dec
shll
push
mov
lret
punpckhbw
mov
pop
mov
mov
sbb
inc
mov
mov
push
jmp
ss
xchg
jbe
add
inc
mov
arpl
xchg
in
sti
push
outsb
fnstenv
pop
and
in
sarl
fmul
lods
and
pop
pop
ljmp
add
dec
adc
cmp
dec
clc
hlt
sbb
push
push
andl
aad
sarb
pusha
dec
xchg
rcrb
dec
punpcklwd
sub
lds
arpl
aaa
adc
mov
sbb
cmp
add
sbbl
jb
or
aad
lret
xchg
subl
dec
xor
sbb
mov
pop
fcmovnb
stos
insl
scas
repz
mov
mov
cmp
mov
mov
loope
repz
and
cs
add
in
rcll
pop
mov
adc
movsb
and
xchg
outsb
mov
xor
inc
pop
pop
inc
xchg
mov
loopne
test
shlb
mov
pusha
icebp
insb
sbb
inc
insb
rcll
clc
pop
pop
or
xor
ret
mov
pop
adc
cwtl
arpl
data16
add
mov
xor
push
xchg
cmc
lret
push
cmp
jae
scas
dec
shrl
loope
add
paddd
mov
fcmove
out
in
cmc
not
mov
sub
cs
jmp
mov
push
pop
ret
jecxz
push
xor
test
mov
cmp
dec
cwtl
add
cmpsl
and
cmpb
test
adc
das
jle
out
push
jne
test
xlat
mov
cmp
jne
mov
fstl
data16
adc
inc
xchg
loope
cmp
xchg
push
mov
and
pop
push
movsl
stos
fprem1
pop
and
in
arpl
xchg
test
imul
pusha
dec
out
add
mov
cmp
movsb
pushf
mov
fdiv
sbb
jl
adc
push
and
fldcw
call
loopne
int3
addr16
inc
mov
add
pusha
mov
loope
ja
and
inc
cmpsb
aad
fadd
movlhps
xchg
mov
jnp
mov
out
push
int
and
andb
out
xchg
jge
and
push
xchg
js
enter
pop
xor
fs
or
stc
mov
fisubrl
movsl
fbstp
mov
cli
pop
and
fisubrs
sbb
pop
gs
xchg
repz
sbb
ja
jp
pop
popl
mov
pop
rolb
dec
dec
or
jb
sbb
incb
push
mov
sbb
push
jne
out
out
test
mov
aas
jmp
outsl
xlat
dec
sbb
jb
jp
mov
xchg
insb
lds
sbb
mov
sbbl
sarb
pop
push
repnz
fs
or
cs
int3
pop
in
aad
loop
andl
jmp
jnp
sbb
mov
dec
pop
dec
or
xor
mov
gs
mov
adcl
test
xor
lahf
pop
lret
push
jecxz
cmp
cltd
push
stc
cmp
xlat
sub
hlt
aam
mov
inc
jl
cmp
sub
loope
jg
pop
inc
cmc
inc
mov
inc
imul
rclb
jno
or
sub
pop
xchg
cmp
cmp
pop
sub
xor
xchg
iret
stos
pop
xchg
push
cs
dec
and
jae
stc
sub
pop
out
fstpl
jb
inc
mov
sarb
xchg
or
outsb
popf
in
lds
pop
jae
pop
call
fs
push
fsubrp
cmpsb
iret
es
pop
push
pop
outsb
ss
out
mov
mov
dec
inc
ret
jl
test
sarl
in
push
shr
mov
lcall
mov
arpl
mov
xchg
insl
push
add
sbbb
mov
inc
mov
and
mov
inc
sbb
jle
incb
lea
xor
xchg
sbb
cli
dec
popa
es
sub
js
pop
dec
and
imul
jb
insb
sbb
mov
mov
dec
in
mov
jg
lcall
insb
pop
jb
stos
inc
lcall
fbstp
mov
fwait
test
lods
jle
xchg
jg
std
aas
add
xchg
xchg
jge
push
push
pop
mov
and
cmp
fcmovne
daa
xor
aaa
scas
push
sub
adc
push
mov
imul
cmpsb
dec
add
daa
ficoms
or
arpl
xor
in
mov
pusha
xchg
pop
mov
popa
jno
cmp
inc
popf
push
es
and
gs
inc
cmp
mov
sub
jl
outsl
mov
xor
push
shll
inc
push
mov
adc
pop
sti
shrl
frstor
subl
mov
lea
mov
fildl
sub
orl
jmp
pop
pop
data16
push
enter
fs
xor
jmp
dec
mov
mov
adc
loopne
out
rcrl
sbb
mov
in
inc
push
sarl
jnp
inc
jmp
fdiv
lcall
cmpsl
xor
jge
mov
mov
jns
andl
lds
shrb
pop
ss
inc
adc
insb
sub
fwait
sub
xchg
xor
or
gs
pop
loope
test
inc
push
imul
sbb
jns
test
aam
xchg
adc
jmp
pop
outsb
dec
in
js
adc
adc
call
into
loop
fstl
jb
mov
cmpsb
mov
xor
sub
test
fs
sti
mov
mov
leave
push
bound
inc
jle
loopew
xor
push
test
sbb
xor
adc
test
and
sahf
pop
or
imul
inc
negl
dec
xchg
dec
stc
jle
outsb
xchg
push
orl
mov
into
jae
arpl
adc
and
repz
outsb
xchg
push
orl
mov
into
jae
arpl
adc
and
repz
jecxz
xchg
push
orl
pop
inc
into
jae
arpl
adc
and
bnd
outsb
xchg
push
orl
and
lods
fidivrs
fs
mov
inc
fcoml
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
movsl
jp
xchg
test
test
and
xor
jne
inc
jne
jne
test
mov
vpmullw
in
cmc
and
add
jne
inc
gs
jne
pushf
mov
test
cmc
int
std
aad
and
push
cmp
or
cmp
test
movsl
sub
or
jnp
xor
mov
sahf
int
inc
arpl
scas
gs
fmuls
aam
sub
jno
into
outsl
and
test
std
mov
pusha
add
cmp
adc
sbb
aad
xchg
cmp
and
cltd
jg
lds
push
and
mov
rep
adc
in
in
cmp
and
lret
sbb
pop
pop
mov
lods
push
pop
in
sub
mov
hlt
xor
pusha
pushf
xor
movsl
gs
mov
lea
movsl
jne
sbb
fistps
jne
pop
add
xor
pop
push
je
inc
lcall
test
cmc
aad
cld
aad
and
cmp
sub
pop
jne
inc
gs
adc
loopne
xchg
loopne
lock
xchg
mov
cwtl
fs
xor
jo
pop
add
sbb
add
sbb
aad
mov
mov
out
adc
je
push
push
jbe
aaa
and
aaa
or
int3
shl
in
les
vpmullw
and
and
jne
inc
gs
jne
test
mov
vpmullw
in
cmc
and
and
jne
inc
gs
jne
test
adc
test
jecxz
add
mov
and
inc
inc
jle
dec
adc
imul
fwait
cmp
jmp
cmp
mov
outsb
add
mov
arpl
add
mov
xchg
xor
jb
push
dec
cmp
lods
adc
in
xor
fists
imul
dec
and
add
jecxz
test
jo
push
sub
ret
jo
dec
outsb
test
orl
lahf
jno
enter
jg
inc
in
addps
arpl
out
fs
sub
pop
fldl2t
lahf
aad
es
divl
xchg
mov
dec
in
sub
test
jno
inc
and
mov
cli
dec
sub
rolb
bound
xchg
scas
mov
lcall
cwtl
cmp
push
jns
pop
mov
aas
mov
mov
mov
sub
cmc
iret
and
inc
lret
scas
mov
pop
jne
shlb
sbb
lret
xor
add
xlat
popf
bound
addb
mov
xchg
jp
cmp
mov
fnstcw
das
push
ja
call
aad
dec
lea
popf
rorb
xchg
outsb
rorl
xor
dec
mov
xor
or
or
mov
notb
orl
jae
int3
xchg
scas
lock
dec
mov
daa
jge
push
lea
cmc
test
cmc
jo
jge
popf
shll
insl
and
test
xchg
ret
test
cmc
imul
pop
pop
mov
notb
addr16
jecxz
mov
add
jb
mov
rcl
popl
or
out
push
xchg
or
push
lods
lods
xchg
dec
roll
das
fists
int
out
out
cmpsl
cmpsb
in
pop
stos
dec
jb
or
xchg
sti
outsb
cltd
test
mov
xor
adcl
push
xorl
test
fs
int3
lret
xor
and
cmc
in
mov
mov
inc
cmp
stos
stos
enter
cmpsl
push
sbbb
outsb
out
push
aad
sbb
mov
vmwrite
xchg
addr16
sub
or
and
or
mov
iret
sub
push
lock
sahf
adc
or
pop
fwait
imul
inc
movsb
out
pop
ja
add
push
add
push
mov
fcomps
jae
scas
inc
rclb
xor
lahf
jnp
in
lret
jl
mov
push
push
addr16
sbb
sbb
call
mov
xchg
push
aas
test
andb
out
scas
push
xchg
jle
gs
aam
push
loop
cmp
mov
mov
jo
out
inc
sti
add
xchg
mov
clc
pop
shrb
dec
mov
ja
xchg
test
mov
mov
mov
push
xor
mov
pop
aam
imul
push
shlb
ds
imulb
je
ret
lret
or
sub
pushf
lea
cwtl
hlt
or
mov
out
or
rclb
repz
inc
lock
hlt
mov
cmpsb
dec
mov
iret
mov
lods
cmp
pop
mov
mov
repz
push
ds
shr
dec
cmp
movb
rcll
jno
int3
pop
lds
add
mov
push
data16
bound
mov
add
loop
and
inc
js
sub
lock
inc
jmp
adc
jecxz
int3
lods
icebp
lret
lods
mov
inc
sti
stos
dec
inc
add
lock
mov
ljmp
push
add
dec
cmpb
mov
stc
and
cltd
pop
shrb
rol
lret
cltd
out
stos
je
add
push
lret
jbe
nop
cmpsb
mov
jno
dec
in
lcall
stc
cmp
jecxz,pn
repz
fadds
cwtl
push
jno
or
call
pusha
lock
rolb
pop
xor
fwait
shlb
loope
dec
sbb
out
dec
mov
fnstsw
cmp
mov
jle
lods
in
lea
jge
test
jo
or
data16
das
subl
cmp
push
in
cmp
lods
or
ret
sub
mov
push
decl
add
xchg
xchg
xor
jo
sub
insb
dec
jns
jg
inc
shrb
jbe
inc
icebp
sbb
aad
movsl
inc
ret
popa
cltd
stos
push
fbld
repz
das
lret
jge
fwait
loop
xor
popf
mov
sbb
xor
add
mov
sub
xlat
jbe
sub
mov
nop
call
mov
dec
inc
adc
cmp
icebp
std
push
in
inc
mov
mov
xchg
inc
xchg
les
popl
sbb
mov
cld
add
xor
fs
mov
dec
stos
fimull
fwait
and
lods
push
sub
stos
scas
insl
fiaddl
pop
pop
cli
in
mov
sub
mov
jge
xor
popa
repz
xchg
aam
ljmp
leave
cmp
stos
sub
lret
jnp
push
fs
cmp
mov
pop
sub
xor
lock
mov
fcoms
stos
cmp
imul
sti
jae
cmp
add
jbe
cmpsb
xchg
dec
repnz
imul
jge
int3
push
ss
or
aad
call
jae
xchg
lods
mov
out
cmp
push
jecxz
subl
lods
stc
in
mov
jmp
xchg
inc
adc
and
insb
sbb
jb
xchg
stos
pop
ret
or
sub
iret
out
jae
scas
aam
andl
mov
mov
or
insl
cli
mov
pop
aad
adc
imul
mov
inc
mov
dec
test
jns
pop
pop
and
faddl
sub
jb
add
sarl
and
inc
dec
fwait
jnp,pn
bound
sub
mov
sahf
sahf
sbb
es
pop
cmp
push
mov
ss
add
sub
dec
mov
in
outsw
movsl
push
xor
inc
stc
mov
bound
in
rclb
je
jns
mov
subl
sbb
inc
outsl
push
fnstcw
rclb
xor
stc
mov
into
or
inc
mov
rolb
add
mov
fldenv
inc
xchg
iret
shrb
fs
fistpll
dec
mov
js
pop
div
pop
push
pop
dec
or
xchg
mov
orb
inc
mov
repnz
sub
cld
jecxz
inc
imul
cmp
mov
ret
mov
xor
testb
stc
pop
mov
push
mov
repnz
hlt
shll
mov
adc
jl
cld
shrb
inc
mov
adc
nop
and
imul
pop
pushf
add
ss
mov
or
movsl
xlat
mov
cld
sub
lcall
and
cltd
out
push
repz
adc
cmp
repz
mov
sbb
stc
orb
inc
jb
loopne
sti
testb
in
or
into
push
mov
adc
scas
nop
mov
stos
and
xchg
test
dec
sarl
repz
jmp
adc
outsl
xor
cmpsl
ret
cmp
inc
cmp
out
pop
setle
pop
xchg
push
clc
lods
das
add
aas
shlb
lods
stos
pop
xor
in
lock
mov
sbb
loop
pop
lret
mov
nop
jnp
mov
int
mov
jns
in
jg
daa
dec
jge
popa
mov
and
mov
jbe
xor
push
jnp
cmp
mov
popf
enter
xor
cli
sbb
stos
xor
xor
decl
push
int3
inc
movsl
dec
push
sti
jl
jg
add
and
imul
and
and
sbb
mov
and
testb
pop
adc
sbb
lods
popa
je
or
pop
adc
je
xor
adc
or
popa
iret
cld
imul
sbb
lcall
push
aaa
lds
inc
cli
jle
inc
inc
mov
mov
out
mov
sub
jmp
nop
mov
pop
cmp
sahf
cmc
push
lock
sahf
mov
adc
ja
xchg
es
mov
iret
outsl
faddl
or
pop
fdivp
dec
pushf
push
cltd
int3
push
push
inc
shll
add
movsb
inc
push
cmpsl
in
data16
jp
test
mov
imul
sbb
stos
sub
sub
push
leave
ljmp
cmp
dec
gs
fdivrp
and
dec
mov
push
das
lret
mov
test
lods
add
lock
cmp
and
push
inc
imul
mov
aas
jb
jbe
lock
push
rolb
das
insl
pop
adc
sahf
in
jle
cmp
pop
hlt
xchg
leave
movsl
leave
rolb
adc
and
push
mov
nop
stos
mov
mov
cltd
cmp
cltd
mov
jb
popf
xchg
std
jb
mov
or
mov
fnsave
mov
adc
lods
stos
jnp
test
scas
arpl
out
ja
out
in
mov
cs
loope
mov
icebp
push
pop
icebp
leave
mov
fwait
pusha
cld
vfixupimmps
mov
jg
je
lcall
cmpsl
mov
jecxz
stc
or
add
adc
xchg
lods
test
inc
loop
cmc
aaa
rcll
push
loop
xor
mov
outsb
imull
out
call
xor
pop
in
loop
mov
xor
test
adc
jl
jecxz
fbstp
cmc
rcl
and
sti
out
and
enter
inc
out
insb
xor
ja
int
pop
es
repnz
lret
mov
lods
inc
sahf
aad
aaa
in
mov
sbb
shl
cmp
lods
pop
iret
jb
or
iret
in
cmp
out
pop
test
movsb
fstp
repnz
lock
lods
dec
loopne
ret
movl
mov
add
daa
xchg
ret
or
sarb
lds
push
int3
xabort
and
rolb
ds
jg
inc
test
and
xor
jmp
int
jns
pop
jmp
leave
lock
test
inc
lea
bound
jmp
jp
mov
xchg
hlt
fs
fsub
sahf
outsb
test
xlat
xchg
or
and
stos
ss
or
data16
je
jmp
popf
lea
jg
add
mov
jle
mov
mov
shrl
adc
mov
fcomip
and
ret
mov
mov
loope
sbb
int
cmc
sbb
pop
mov
fwait
adcl
adc
fcomip
loopne
repz
or
xchg
adc
xor
push
lods
pop
sti
mov
sbb
into
adc
insl
not
jne
cs
in
jae
std
jae
mov
inc
int
add
inc
xor
sti
or
sbb
pop
and
fcmovne
inc
rcrl
inc
daa
cmc
call
sub
mov
mov
xchg
mov
cltd
pop
mov
jmp
dec
call
pop
mov
imulb
jb
adc
xchg
add
jbe
sub
fsubl
jo
push
mov
adc
test
scas
fwait
xchg
movsl
xor
aaa
es
or
mov
repz
pushf
pop
mov
inc
jne
pusha
cmp
out
lret
inc
bswap
add
repz
sub
ret
outsl
dec
inc
cld
push
dec
mov
push
in
leave
mov
push
mov
sarb
xchg
mov
push
inc
loopne
mov
push
bound
lret
jb
pop
xchg
sub
or
repz
sub
loop
jne
cmc
aam
sbb
or
stc
outsb
aam
imul
mov
jecxz
sub
pushf
push
xor
inc
stc
dec
dec
xor
lods
mov
xchg
sub
jl
inc
cmpsl
repnz
dec
cld
inc
jb
mov
movsb
lock
inc
jg
mov
cmp
mov
ds
popf
mov
test
push
mov
inc
cmp
inc
mov
mov
inc
inc
xchg
fdivrs
test
mov
scas
push
or
data16
adc
popf
stc
sbb
filds
ret
test
and
int
jae,pn
in
out
mov
in
push
dec
push
in
xchg
dec
inc
ss
or
xorl
mov
ret
xor
fisubs
ficompl
icebp
repz
ljmp
cmp
push
pop
ljmp
pop
les
addr16
inc
decl
test
iret
bound
jmp
and
jge
pop
dec
cltd
jg
insl
dec
je
outsb
pop
mov
sbbb
cmpsl
seto
pop
xchg
mov
mov
push
adcb
add
mov
push
out
or
aas
hlt
add
cmpsb
dec
jg
sub
cmp
mov
mov
mov
rorb
push
movsb
jb
andl
cmp
popf
fs
je
std
ficoms
fsubrs
xchg
push
inc
push
cmpsb
cmp
lret
xchg
push
sub
je
jo
or
mov
ja
inc
adcl
sub
shrb
xchg
inc
pop
stos
xor
pop
rcrb
sub
and
push
jo
cmc
mov
dec
fldcw
push
push
mov
xorb
repnz
dec
nop
test
clc
cmp
adc
dec
dec
adc
xlat
jl
ja
negl
pop
xchg
scas
dec
sub
repz
aas
in
xchg
jp
mov
dec
jns
outsb
data16
ja
sub
aam
xchg
xchg
adc
mov
out
fbld
pushf
inc
int3
pop
andl
and
loope
xor
call
aas
inc
xchg
push
mov
scas
pop
cltd
ret
lret
pop
push
adc
adcl
mov
pop
mov
adc
lahf
stc
js
popa
and
mov
test
mov
push
lods
out
cld
pop
test
ja
xor
sub
test
and
sub
adc
arpl
jecxz
insl
mov
lret
sbb
mull
add
xor
lcall
in
dec
and
xlat
in
inc
adc
stos
mov
jmp
inc
stos
outsb
push
sbb
fs
and
cld
das
pop
xchg
iret
mov
or
outsb
std
sbb
mov
rclb
cmp
rorb
pop
push
test
jb
xchg
lret
dec
inc
push
mov
iret
dec
or
and
mov
mov
sub
mov
sahf
scas
pop
jbe
cmp
dec
pop
or
insb
mov
cmp
lahf
jle
or
and
ds
jne
test
xchg
aas
xor
xor
jecxz
rolb
ja
daa
int3
roll
fisttpll
js
lods
jbe
jl
push
ja
adc
flds
inc
and
sub
stc
xchg
mov
out
inc
xor
mov
jns
add
out
lret
mov
lods
sbb
mov
add
sub
pop
fdivrs
insl
adc
aad
cmpsl
repnz
xor
push
in
mul
repz
mov
dec
es
ds
int3
movsl
scas
jb
jecxz
push
push
ja
out
jg
cmp
inc
iret
rcll
jg
inc
xor
adc
in
fsubr
and
jo
test
je
xor
mov
mov
aad
push
ss
bound
lea
daa
mov
mov
fstps
push
inc
out
push
adc
push
and
sahf
stos
popf
in
jbe
in
push
insl
cmc
in
das
dec
adc
inc
push
adc
mov
test
adc
xor
xor
je
xlat
or
rcrl
mov
jo
imul
fadd
or
and
jns
jecxz
nop
mov
or
in
mov
cli
test
loope
xchg
xlat
mov
nop
xchg
aas
add
ss
jp
imul
jle
aam
xor
mov
std
cmpsb
out
js
dec
scas
mov
push
call
push
inc
fldpi
sub
sbb
xchg
fwait
mov
jne
es
cld
loop
xchg
jl
ret
xor
xchg
pop
xor
cmc
lret
add
mov
loop
in
add
push
mov
push
aad
nop
mov
clc
xor
add
scas
daa
insl
cmp
lret
nop
sbb
int
test
shl
xor
sbb
pop
sbb
rclb
scas
data16
lret
outsb
lea
sbb
inc
cmp
ljmp
fldenv
lret
dec
xor
inc
js
pushf
sar
in
adc
cs
jge
mov
cmp
test
xchg
popa
hlt
int3
call
xchg
mov
sub
mov
mov
xchg
repnz
or
sbb
xor
xchg
jbe
inc
ja
adc
jnp
idivl
jb
mov
scas
fiadds
rcl
push
lcall
mov
imul
mov
es
fs
adc
push
add
cmp
aam
push
popa
insb
or
jge
pop
xchg
shlb
cmp
movsl
jg
outsl
daa
or
ret
popa
pop
mov
sub
aas
xchg
pusha
mov
lret
shrl
xor
sbb
lock
je
sub
add
lds
test
inc
inc
lret
out
dec
inc
mov
rcrb
fst
fwait
xor
stc
lret
repz
jne
rcll
lds
lock
mulb
in
dec
aam
ror
stos
daa
bound
sub
ja
sti
mov
jnp
or
push
pushf
jnp
mov
add
push
sub
mov
js
cmpb
cltd
xor
cltd
sub
sbb
pop
stos
sub
repz
int3
js
and
fidivrl
adc
ret
jge
mull
jp
ret
in
cmp
lods
sbb
mov
pop
mov
add
jle
xor
icebp
sbb
push
xchg
int
cmpsl
decl
or
cmp
popl
sub
sbb
mull
idivb
xchg
das
rsm
gs
fsubrs
dec
pop
enter
cmp
push
call
mov
aad
sbb
jl
jle
outsl
cmpsl
inc
out
jno
shll
jmp
inc
push
scas
mov
mov
xchg
addl
jnp
nop
add
in
sub
mov
jne
out
sub
jp
add
cmc
mov
push
jecxz
lock
lret
mov
xorb
ljmp
leave
lods
pop
dec
sbb
or
fs
shll
call
lcall
xchg
cmp
mov
adc
ja
jge
inc
dec
aad
add
das
xor
in
push
mov
jmp
test
movsl
repz
xchg
mov
mov
lock
mov
and
mov
std
mov
adc
scas
dec
push
cld
fwait
inc
hlt
sbb
test
add
int3
add
jecxz
or
push
call
lret
add
mov
dec
sahf
adc
bound
xchg
cmp
xchg
jns
popl
lret
or
adc
mov
jbe
xlat
js
gs
jmp
jne
jnp
xchg
ret
leave
pop
inc
sub
sub
add
mov
sbb
and
cmp
mov
push
scas
icebp
pop
or
push
arpl
aad
cli
sbb
ljmp
add
rcr
adc
inc
dec
fnstcw
test
mov
mov
gs
or
sahf
int3
int3
dec
repnz
clc
lcall
fsubs
pop
in
stos
sub
jecxz
push
mov
loopne
dec
jo
push
sub
divl
fs
push
aad
test
inc
or
test
mov
jo
arpl
daa
or
jmp
mov
lret
xor
movsb
aas
data16
xchg
dec
dec
ljmp
lea
mov
and
mov
iret
adc
in
dec
push
jg
fmuls
aaa
sbb
call
out
cmc
push
cmpsl
xchg
insb
stos
cmpsl
sbb
jo
addr16
and
mov
lcallw
push
pop
outsl
mov
addr16
insl
out
fcmovnb
sub
js
sbb
fsubrl
jb
xchg
pop
mov
xor
jb
mov
or
adc
les
aaa
inc
mov
lret
mov
jecxz
xor
dec
fldt
cltd
xchg
jp
insb
pop
pop
sbb
mov
dec
lret
clc
push
add
test
mov
addl
xor
xchg
cmp
cld
outsb
xchg
lock
pop
lahf
lahf
pop
daa
inc
test
mov
repnz
test
into
sub
jbe
mov
sbb
push
arpl
fstl
dec
inc
jecxz
xchg
jmp
push
jmp
aad
mov
ja
mov
and
or
aaa
fsubs
mov
dec
or
arpl
in
cmc
aad
in
cmc
and
and
jne
inc
gs
jne
test
mov
vpmullw
in
cmc
and
and
jne
inc
gs
jne
test
mov
vpmullw
in
cmc
and
and
jne
inc
fs
jne
test
mov
vpmullw
in
cmc
and
and
std
stos
mov
push
arpl
push
jae
arpl
xor
jge
or
repz
loop
rol
ret
xchg
mov
mov
push
jae
arpl
adc
add
xor
or
sar
ret
jecxz
mov
andl
jmp
and
cmp
adc
rol
loopne
xchg
ret
xchg
mov
int3
in
shr
sub
pop
add
das
push
cli
sbb
cli
sbb
sub
pop
mov
or
dec
out
ret
call
sysret
mov
mov
int3
fmull
sub
aas
sub
cmp
dec
xchg
out
and
imul
sub
xchg
mov
ret
pop
js
shlb
sbb
mulb
fs
arpl
ja
arpl
xor
push
and
xchg
push
adc
mov
mov
add
lock
push
adc
xchg
ret
loopne
mov
mov
pop
shl
sahf
inc
add
movsb
adcb
sub
jmp
jecxz
cs
pop
add
mov
pop
inc
arpl
adc
add
xor
mov
shl
imul
ret
fbstp
stos
adcl
pop
sub
xor
add
xchg
mov
mov
lret
push
add
xor
push
imul
xchg
mov
mov
mov
int
call
not
push
and
cmp
das
movq
add
xor
and
shl
ret
shl
ret
jecxz
xchg
mov
mov
push
jae
arpl
adc
add
xor
and
shl
ret
shl
ret
jecxz
xchg
mov
mov
into
push
insb
int
push
loopne
repz
negl
jnp
nop
xor
int3
mov
insb
mov
adc
pop
cmp
xor
lahf
and
into
push
imul
xor
enter
inc
inc
ret
xor
imul
mov
cli
cld
inc
mov
mov
pusha
mov
push
mov
push
and
stos
scas
mov
jae
sub
mov
into
mov
iret
jne
pop
fwait
jg
pop
cmp
cmp
shll
out
sub
pushf
cmp
clc
ss
scas
js
add
lcall
add
mov
sbb
xor
adc
shll
and
mov
cmpsl
pop
and
lcall
or
xchg
or
xchg
fisubl
pop
dec
dec
adcl
mov
stc
scas
sub
imul
mov
rclb
sti
jne
psllq
sarl
adcb
movsb
sbbl
rolb
arpl
xchg
inc
xor
into
and
push
andl
aam
stc
mov
inc
dec
xor
loope
push
pushf
iret
jmp
in
and
call
in
jl
jae
pop
and
and
idivl
cwtl
sbb
mov
or
or
push
pop
stc
shrl
jo
mov
sbb
cld
daa
add
out
push
and
xchg
mov
sti
inc
adc
dec
mov
mov
push
int3
les
into
arpl
mov
in
cmp
rep
add
mov
push
movsb
and
add
int
gs
cmc
mov
aam
movsb
into
lock
movsb
lahf
pop
jns
xchg
orb
cmpsl
add
jp
nop
inc
mov
shl
fisttps
dec
aas
cmp
imul
push
fcmove
sbb
jp
in
in
scas
mov
xchg
sti
jmp
fs
mov
jo
jp
ss
or
loope
in
ljmp
pop
gs
inc
push
iret
sub
push
pusha
lret
jne
es
sub
pop
xchg
cmp
fmuls
mov
aas
insl
fistpl
mov
in
and
cli
push
pusha
pop
shlb
stos
mov
or
mov
popa
cli
pop
aam
inc
lds
clc
scas
out
out
or
ja
cs
push
js
ds
loope
cmp
sbb
fs
test
cmpl
mov
repz
mov
add
dec
ljmp
out
cwtl
xchg
push
sbb
lret
es
add
mov
nop
dec
arpl
sub
add
cld
push
xor
adcb
cmpsl
push
and
sub
xor
out
rcrl
sbbl
lock
mov
lods
test
jb
xchg
pusha
outsl
push
lret
fstps
leave
pop
out
push
cmp
cltd
int
xchg
sub
lock
ret
mov
iret
jg
repz
ret
outsb
mov
and
or
mov
xor
lea
sarl
subl
scas
loope
call
jne
pop
cmp
mov
inc
dec
sbb
pop
imul
inc
popa
ret
pop
inc
decl
push
inc
mov
adc
xchg
mov
xchg
xor
outsb
lcall
repz
push
pop
shlb
fmull
mov
adc
mov
mov
es
sub
sub
or
fistpll
and
aas
test
dec
jno
cmp
jmp
cmpsl
mov
int3
idivl
cmp
rcll
pop
repnz
popf
imul
xchg
ds
jnp
cmc
lcall
test
icebp
jecxz
cmp
out
ljmp
push
in
jecxz
push
mov
mov
mov
jp
add
push
pop
addr16
dec
push
gs
icebp
cmp
jbe
aas
push
push
pop
jae
subb
push
ss
pop
call
js
frstor
inc
aam
push
fnstsw
xor
lods
jbe
mov
push
movsb
cltd
stos
mov
jb
mov
gs
lret
sub
jmp
outsb
leave
frstor
outsb
push
or
adc
xor
imull
sub
sahf
das
inc
data16
in
and
cltd
xchg
decl
inc
ljmp
js
xchg
cltd
nop
xchg
xor
hlt
inc
int
fcmovu
test
sbb
mov
fs
nop
sub
mov
xor
mov
sbb
mov
subb
mov
inc
ds
mov
pop
xchg
and
add
dec
mov
es
jne
clc
add
jbe
jns
gs
mov
inc
pop
push
inc
xchg
ds
inc
push
repz
fmul
in
inc
icebp
icebp
test
leave
lcall
cmpsb
lods
test
jge
loop
mov
lds
add
ljmp
push
sub
pop
lret
ljmp
mov
add
pop
lret
sub
inc
aad
fldenv
scas
das
sbb
sub
jbe
inc
imul
imul
xchg
stos
fldt
bound
jno
jle
inc
ficoml
insb
je
loopne
lds
xchg
pushf
xlat
ja
sub
ds
cld
xchg
add
test
lock
ss
push
or
mov
dec
sub
push
jl
mov
shrb
fsubs
imul
lods
lods
movsb
mov
mov
cmp
insb
fmull
stos
push
adc
mov
xchg
xor
outsl
mov
in
push
adc
imulb
mov
insb
mov
repnz
jns
sbb
mov
subb
and
ds
das
lcall
leave
jmp
fsubrp
xchg
imulb
mov
test
pop
andl
dec
cld
imul
aaa
pop
iret
jb
nop
inc
iret
cmp
dec
jmp
movsb
dec
inc
sub
and
dec
push
push
fs
inc
inc
cmp
in
into
mov
mov
xchg
addl
or
fidivl
fisubrs
pop
cmc
and
pop
jmp
jg
jg
cmpb
pop
or
xchg
xchg
popf
in
adc
lock
xchg
enter
mov
push
das
jmp
test
push
pop
in
xor
sahf
lret
cmp
sahf
jb
ljmp
jl
pop
jl
mov
js
clc
jo
adc
push
and
sub
cmpsb
in
fsubrs
pop
jo
xor
lods
dec
lahf
lahf
inc
mov
push
fdivr
add
mov
push
push
aam
adc
xor
les
push
arpl
mov
xchg
enter
mov
mov
mov
test
mov
aam
push
subb
inc
rcll
pop
pushf
xchg
mov
int
sar
jmp
and
roll
push
inc
cmp
stos
sub
xchg
xor
movsb
loope
xchg
jno
cmp
and
pusha
out
stos
pusha
jbe
cmpsl
into
mulb
inc
repnz
leave
inc
in
imul
xchg
pop
xchg
scas
insl
or
add
jmp
into
sub
push
pop
popa
xor
fdivl
or
jmp
mov
popf
dec
repz
das
jp
xchg
add
fs
cmp
add
cmpsl
add
hlt
jb
lock
je
xchg
les
out
insb
icebp
xchg
orl
inc
out
sbb
cmc
ljmp
pop
idivl
test
insb
xor
addr16
in
pop
sub
xor
in
int
scas
xor
dec
ja
sub
sbb
ljmp
jg
movsb
pop
in
mov
pop
sub
xor
sub
enter
fs
jge
stos
fisubs
incb
cmp
mov
popf
enter
mov
int
mov
sti
fcoml
jl
adc
gs
mov
mov
dec
dec
xor
and
inc
in
shlb
jl
dec
xchg
mov
sub
dec
stos
je
orl
xor
testb
repz
cmp
out
sbb
xchg
and
fsubs
je
add
pushf
xlat
ja
in
dec
fidivrl
fsts
sub
or
mov
cs
jb
not
ds
pop
iret
imul
pushf
fldcw
adc
or
jecxz
pop
jl
fildl
cmp
inc
sub
sbb
imul
xor
inc
into
dec
pop
adc
cmp
and
ret
inc
aam
cmp
xchg
test
inc
xor
cmp
imul
mov
fidivs
ret
xor
addr16
inc
out
nop
add
popa
dec
test
mov
lods
ret
rorb
mov
push
dec
mov
insb
movsl
ljmp
push
sbb
pop
mov
jno
push
inc
or
xor
inc
fstpl
movsb
imulb
ja
in
pusha
pushf
incb
in
mov
repz
sub
movsl
sbb
or
inc
or
xchg
add
arpl
pop
jp
int
out
cmp
mov
stc
push
and
les
enter
inc
lock
popa
push
ficomps
sub
int
cli
mov
loope
add
push
lds
adc
stos
xchg
adc
fsubrs
sbb
dec
je
or
add
or
sub
js
lret
shl
cwtl
cmp
scas
jle
insb
sub
fneni(8087
lds
nop
mov
cmp
sbb
sbbl
out
add
cmpsl
mov
mov
aad
outsb
test
push
xlat
adc
push
fpatan
cmp
cmp
mov
add
fmulp
loop
lds
lea
stos
mov
add
imul
cmp
call
fs
popf
push
stos
mull
fcompl
jbe
jp
jmp
fwait
sub
add
in
enter
jge
lock
dec
mov
cmp
addr16
fsubrl
insl
pop
inc
pop
mov
push
add
xchg
jae
leave
mov
in
nop
enter
aad
and
pop
loopne
sub
adc
outsl
bound
mov
out
jmp
pop
jecxz
repz
push
bound
test
push
filds
push
lea
inc
loop
add
out
ret
push
or
pop
jne
dec
jbe
cmc
mov
jb
stos
pop
sbb
das
pop
jge
idivb
mov
jg
mov
test
inc
call
fiaddl
ret
insb
in
int3
sub
lret
rcr
and
in
movsl
aas
out
shll
ficoms
popa
mov
rcrb
ljmp
jle
stos
dec
rcll
lds
mov
xlat
fsubrp
inc
aam
mul
add
gs
mov
adc
clc
xor
push
xchg
xchg
popl
xchg
mov
push
in
cmpl
aad
cmp
lods
aas
iret
mov
out
mov
int
jb
cmp
lods
mov
sub
dec
xchg
les
cmp
scas
fsts
push
jne
cmp
aad
mov
scas
add
cmp
dec
mov
pop
data16
out
mov
cmpsl
insl
pop
lahf
mov
sub
arpl
inc
add
add
jmp
adc
mov
jo
push
fistps
mov
test
iret
mov
mov
daa
ret
pop
mov
loopne
imul
ja
and
gs
inc
add
aad
andl
enter
or
mov
mov
shrl
sti
push
adc
sub
sbb
dec
xchg
lea
fnstsw
in
aad
daa
fs
dec
jb
cwtl
mov
dec
scas
mov
sti
in
outsb
adc
sub
xor
inc
andb
scas
cmpsb
inc
adc
jns
in
addr16
scas
fwait
and
dec
sub
lods
pusha
or
dec
and
sahf
add
pop
inc
xor
sub
mov
je
adc
push
jl
ret
fcomps
mov
fstpt
xchg
sbb
cmc
aam
fstpt
xchg
xor
scas
mov
mov
fldcw
cmp
and
in
jno
push
int3
xor
fldt
dec
sarb
sarb
jno
call
xchg
mov
imul
loop
push
insb
out
mov
lods
dec
sub
adc
and
aam
outsl
jle
add
xchg
push
push
iret
scas
adc
pop
mov
and
push
jp
outsb
jb
mov
cmp
sub
scas
add
cwtl
mov
lea
push
call
push
mov
dec
dec
push
test
fnstenv
loope
push
pop
dec
repz
subb
mov
push
sub
movsl
jp,pt
inc
jmp
repz
jmp
leave
stc
mov
scas
adc
in
hlt
mov
addr16
in
lods
or
xor
ja
icebp
lods
imul
lods
mov
and
ss
sub
pop
sub
dec
dec
push
sbb
push
mov
or
lock
out
fidivl
jno
mov
fs
fsubrl
or
xor
das
mov
xor
pop
and
inc
xchg
inc
add
and
dec
xchg
insb
cli
int3
call
fdivr
sbb
jmp
imul
int
out
aas
lds
loopne
ret
inc
faddl
pop
stos
push
daa
mov
lret
cltd
jns
and
inc
mov
inc
mov
sub
arpl
pop
adc
test
inc
rolb
hlt
outsb
aas
cmp
fnstcw
cmp
faddp
fisubrl
test
lcall
jmp
mov
out
clc
js
cmp
fstl
cwtl
dec
push
call
lea
shlb
ficoml
into
popa
jle
mov
inc
cmp
cli
dec
sbb
xor
mov
jns
in
mov
mov
ljmp
outsb
pop
mov
sub
and
pop
mov
add
push
mov
stc
out
rorl
je
imul
cwtl
nop
icebp
stos
fadd
xchg
mov
in
xchg
cmp
xchg
out
add
cmp
pop
mov
dec
scas
mov
xchg
push
xchg
ja
das
xchg
cmp
xchg
fnstcw
xchg
sub
cmp
int3
jno
pushf
pop
push
xlat
xchg
inc
bound
rcr
push
lds
jmp
xor
push
sub
jge
add
fidivs
adc
pop
inc
cmp
movl
push
push
adc
dec
push
aas
mov
lcall
insl
sub
testb
xchg
mov
pop
and
dec
lods
pop
scas
push
xlat
in
add
pop
jmp
xchg
and
ljmp
fwait
push
call
dec
add
dec
mov
ja
cltd
int
mov
cmp
adc
dec
fnsave
adc
mov
cmp
pop
inc
mov
movsl
aad
mov
ret
push
xlat
das
cltd
cwtl
enter
cmpsb
insb
cmp
jmp
imul
jae
into
movsl
insl
adc
and
pop
jmp
dec
add
fnstsw
out
jno
dec
jp
mov
insb
orb
stos
das
roll
arpl
jecxz
inc
push
nop
into
in
cli
adc
idiv
mov
inc
call
mov
mov
scas
push
mov
and
mov
xor
popf
mov
mov
rcrl
and
mov
repnz
jb,pt
push
mov
add
xchg
jbe
movsb
lock
cmc
push
ficomps
lret
hlt
lods
rcl
jg
int
testl
and
dec
xchg
lcall
enter
test
push
pushf
jle
sub
push
mov
dec
out
dec
fistl
dec
stos
mov
lods
sub
dec
push
imul
jo
mov
lea
pop
mov
push
xor
sbb
mov
imul
push
fiadds
imul
or
sbb
and
mov
out
pop
dec
mov
xlat
sub
inc
xchg
jmp
mov
xchg
aas
lds
insb
inc
scas
movsl
push
sbb
sbb
lock
xchg
repz
insb
in
and
andl
xor
in
or
push
mov
xchg
add
mov
enter
pop
cmpl
xor
dec
rcr
mov
js
mov
sbb
adc
cmp
daa
popf
sarl
jmp
sti
subb
aad
mov
insb
and
pop
in
jbe
pop
adc
mov
xchg
and
pop
call
shll
jo
xchg
inc
jb
lret
pop
loopne
aad
jns
fidivs
cltd
fdivrs
lods
add
mov
mov
leave
loop
imul
dec
popf
loopne
dec
in
das
cmp
enter
jg
cmp
pop
or
and
dec
mov
xchg
sbb
push
fldl
lret
loop
sbb
xchg
in
or
idiv
xchg
fistps
movsl
aam
mov
imul
lds
adc
or
or
repz
xchg
cli
movsl
mov
fmuls
pop
xor
pop
sarb
pop
data16
adc
call
orl
xorb
outsl
mov
dec
sti
fstpt
lret
jbe
or
pop
inc
sbb
data16
jns
xor
testl
push
fisubl
into
ret
or
jecxz
lea
dec
xchg
push
lods
movl
iret
leave
test
mov
lods
xor
dec
push
xchg
test
insb
fiaddl
stos
add
popf
dec
lea
pop
movsl
push
mov
rolb
fisubrs
push
xor
popa
push
jg
mov
repnz
insb
out
adc
push
jmp
jecxz
jp
mov
cmc
mov
mov
xchg
sbb
mov
and
jae
fadd
xor
xchg
xor
cld
jnp
insb
int3
xchg
pop
or
dec
insl
push
leave
enter
pop
insl
and
mov
push
cmpb
sti
popf
popf
xor
rcrl
movsl
iret
dec
jne
and
dec
icebp
jns
call
adc
mov
sbb
aam
test
sarb
stos
pushf
xor
pop
jg
fstpt
sarl
pop
adc
mov
imul
sbb
mov
mov
push
aad
and
inc
jo
add
mov
in
pop
lcall
hlt
inc
add
adc
ljmp
aas
popf
and
orb
std
sbb
out
fsubr
out
call
inc
add
or
cwtl
add
daa
adc
ret
loope
inc
jg
jb
imul
xor
out
imul
and
scas
push
mov
frstor
je
mov
movsb
sbb
test
les
push
test
inc
mov
sbbb
mov
outsl
mov
fwait
inc
data16
mov
mov
stos
outsl
jmp
orl
pop
add
nop
mov
clc
adc
xorl
mov
pop
repz
jle
dec
ret
cld
pop
jge
adc
push
fcompl
lret
cmp
xchg
and
int3
notl
fisubrl
adc
sarb
jne
dec
ja
mov
sarb
sti
fcomip
in
nop
mov
and
push
sub
push
mov
add
fwait
sub
and
and
inc
cs
fldcw
adc
sub
dec
arpl
roll
add
jae
mov
sub
outsb
out
inc
call
daa
push
mov
adc
ficoms
sub
das
lcall
lods
jns
loope
inc
je
pop
push
cmpsl
mov
fidivrl
call
mov
fistpll
sub
out
inc
je
repnz
pop
testb
dec
mov
test
testb
adc
popf
in
jne
dec
xchg
jns
ret
push
adc
mov
lock
jo
adc
sbb
test
adc
test
push
sbb
or
ss
cs
mov
pop
adc
sbb
cmp
stc
and
pop
push
js
jo
fs
xor
insb
or
mov
out
das
mov
mov
ds
das
xchg
outsl
test
jno
mov
sub
dec
out
or
add
cmp
mov
push
movsl
push
mov
clc
fwait
arpl
dec
jne
repz
push
pop
jns
arpl
cmp
cmpsl
pop
out
xor
and
mov
adc
add
lock
jle
rcrl
mov
xchg
iret
mov
call
ss
push
or
sub
adc
mov
dec
ret
pop
es
mov
push
mov
dec
sub
add
pop
sub
dec
push
xchg
out
leave
sbb
push
mov
cmp
fcoms
and
mov
cmpsl
push
pop
pop
sub
jo
stos
hlt
xchg
mov
cltd
std
xchg
cmc
xchg
sub
adc
cltd
aad
mov
mov
xchg
pop
push
movsb
imul
das
mov
xlat
out
fisubl
jg
ret
mov
popf
es
sub
idivl
dec
insb
enter
push
jecxz
cmp
arpl
and
xchg
dec
xor
arpl
adc
add
xor
and
shl
ret
shl
ret
jecxz
xchg
mov
mov
push
jae
arpl
adc
add
xor
and
shl
ret
shl
ret
jecxz
xchg
mov
mov
shrl
addr16
and
aaa
andl
shl
shl
ret
ljmp
addl
arpl
xor
and
adc
jecxz
jns
ret
xchg
ret
jmp
sti
jecxz
repz
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
push
popa
fistl
inc
mov
ret
xor
add
mov
dec
sarl
sub
repz
popa
fistl
inc
mov
adc
loope
rorl
cmp
dec
mov
and
popa
pop
push
or
and
icebp
pop
ret
sub
insb
js
mov
cmp
lahf
lcall
push
sbb
mov
pop
sbb
fdivp
and
jmp
push
movsb
mov
ud2
incl
mov
push
stos
jno
insb
fstpt
dec
inc
xor
fisubl
cmp
mov
les
cmp
jns
push
mov
jnp
ljmp
cmp
dec
push
mov
mov
sub
fwait
hlt
cmpb
xor
or
inc
mov
ret
and
cs
sub
jle
jmp
and
outsb
add
xor
push
sbb
and
mov
sub
mov
xchg
sbb
push
cmpsl
inc
mov
adc
add
rcll
pop
mov
mov
mov
and
push
fimuls
push
ljmp
mov
mov
repnz
les
dec
iret
sti
adc
add
xor
inc
rcrb
insl
idivl
gs
mov
daa
movsb
dec
fisttps
outsb
dec
out
mov
mov
pop
stos
and
icebp
imul
rorl
cmp
or
fistl
inc
mov
adc
loope
rorl
cmp
or
jae
xchg
xor
mov
adc
push
movsl
in
cli
and
push
xchg
cmp
cmp
out
mov
adc
and
cltd
jmp
adc
sbb
stc
cmpsb
jge
xchg
jge
adc
lea
in
stc
mov
call
scas
sub
ss
mov
xor
add
ds
cmp
and
bound
imulb
sar
pop
lods
enterw
ss
dec
inc
mov
mov
pop
sub
sub
int3
pop
aad
inc
mov
inc
adc
jnp
pop
push
jp
jne
outsl
xchg
xchg
push
rcrb
mov
pop
push
lock
or
out
ljmp
sub
or
test
push
inc
int
mov
outsb
push
or
cmpsb
xor
sbb
jae
or
popa
inc
leave
or
push
inc
fildl
pop
negb
xchg
jmp
pop
mov
pop
flds
adc
adc
inc
push
jle
jne
jnp
cmp
pop
inc
mov
mov
inc
xchg
sti
inc
sub
or
mov
lcall
xor
xchg
cmp
mov
hlt
mov
loope
addr16
out
fs
jnp
sti
jl
sub
xor
out
push
push
outsb
addb
sbb
mov
inc
jg
fucom
sarb
imul
push
out
xchg
cmp
or
cmpsb
pop
push
ret
call
mov
es
push
add
sar
xor
xchg
xlat
push
ja
loop
add
push
sub
pushf
sbb
arpl
adc
mov
mov
add
inc
dec
mov
inc
rcll
addr16
pop
inc
adc
cli
or
cmp
cmp
mov
sbbl
xchg
movsl
and
cmpsb
mov
cmp
mov
outsl
pusha
das
je
push
in
in
add
fs
or
lcall
aaa
scas
into
mov
daa
outsb
imull
xchg
lret
call
addb
lahf
xor
push
dec
xchg
mov
mov
xchg
icebp
push
int3
pop
and
xlat
push
test
enter
xorl
sti
lds
out
and
xchg
ret
mov
adc
sub
stos
imul
mov
xchg
xlat
cltd
sbb
dec
push
and
mov
lods
in
shl
sbb
and
repz
sub
xor
sbb
jge
dec
xor
push
or
in
in
pop
cmp
mov
fs
cmp
js
or
dec
addr16
aaa
mov
in
lret
dec
ror
outsb
mov
pushw
pusha
pop
iret
mov
cmpsb
stos
insb
pop
int3
daa
mov
adc
outsb
sub
in
dec
fmull
nop
xchg
daa
rcrl
jp
int
loopne
dec
mov
test
xchg
leave
clc
jecxz
jp
cmc
mov
inc
pop
mov
ret
sub
mov
adc
arpl
cmpsl
insl
sub
es
jle
xchg
xchg
add
sahf
aad
and
push
insb
mov
adc
adc
iret
add
les
insb
add
out
dec
ret
sub
push
pop
or
xchg
outsb
jge
notl
jmp
fcmovnb
add
mov
mov
ja
mov
pop
fildll
cmpsb
mov
filds
mov
adc
sbb
cmp
movsl
push
jmp
lods
fsubl
fs
xchg
lods
mov
and
scas
sbbb
js
mov
pop
sub
cmp
cmc
sub
testb
dec
lods
shrl
cmp
and
pop
inc
dec
out
sub
and
rclb
aas
in
dec
cmc
dec
mov
ret
mov
dec
adc
sub
imul
mov
mov
movsl
mov
loop
sti
insb
and
or
xor
sub
dec
scas
cmc
and
mov
cwtl
lret
push
test
dec
stos
arpl
and
hlt
push
sbb
sub
jp
jle
cmpsb
faddl
dec
xlat
cltd
mov
add
ret
mov
out
fs
pop
in
movsl
add
xchg
jne
mov
hlt
das
jge
inc
je
and
cmp
jb
adc
inc
push
xchg
pop
rcll
lods
mov
pop
icebp
pop
sub
mov
and
outsl
xchg
add
cmp
cmp
mov
push
sbb
mov
xchg
lret
jae
scas
sti
in
sbb
jge
mov
ret
inc
repz
cmpsl
xor
mov
cld
cmp
test
dec
imul
mov
pop
xchg
mov
data16
std
jbe
js
add
call
ror
in
xchg
xlat
in
pmulhw
mov
sub
xchg
stos
faddl
inc
int
mov
cmp
push
mov
sub
inc
push
cmp
fisubs
mov
jmp
bound
loope
xchg
sbb
fdivrl
xlat
cltd
mov
std
shrl
pop
enter
rorb
repz
pop
mov
stc
ljmp
cld
push
dec
pop
lea
leave
sahf
mov
pushf
stc
sub
shrb
sbb
push
hlt
xor
xchg
mov
xor
loop
fimull
sti
int3
movsl
xchg
jle
xor
mov
imul
mov
pop
dec
push
sbb
sub
cmpsb
and
orb
xor
call
test
jge
jo
adc
es
ret
mov
and
sahf
addl
push
fsubrl
ret
mov
push
int
jb
sub
ja
and
mov
adc
ss
shl
xor
rolb
inc
stos
or
ss
xchg
sub
lahf
and
popf
icebp
mov
fisubl
jno
push
shrl
pop
and
pop
mov
test
mov
push
fmulp
adc
jns
sbb
xchg
xor
scas
popa
cwtl
adc
or
lock
loop
rorl
push
adc
mov
scas
fwait
adc
push
je
scas
cmpsl
xchg
push
push
jne
fistpll
lods
jg
je
jno
add
dec
xor
outsb
or
xchg
mov
leave
fldenv
pop
xchg
mov
fwait
xchg
pop
daa
ret
add
xor
mov
lock
int3
test
pushf
xor
mov
sbbl
xchg
cmc
insl
jmp
imul
jnp
outsl
movsl
sub
imul
aaa
movsb
lock
loop
xchg
adc
ja
filds
push
mov
dec
fsubs
mov
andl
imul
jb
xchg
scas
iret
jp
in
jg
cmpsl
addl
inc
xor
andl
bound
sub
mov
gs
int
push
xor
stos
xchg
sbb
fwait
xor
xor
mov
rclb
nop
dec
out
scas
pop
sbb
xlat
lock
or
mov
inc
clc
fcoms
cmc
out
push
xchg
lds
fsub
or
enter
sub
leave
or
sti
jns
inc
js
push
rorl
out
ja
movsb
inc
ja
or
sub
orl
pop
pop
lcall
mov
lret
scas
pop
or
push
es
xor
cmp
lcall
in
or
inc
movsl
and
hlt
dec
int3
and
adc
push
cs
jae
fsubr
add
add
out
xchg
ret
inc
pop
jo
int
outsb
add
fiadds
jo
jp
call
mov
in
cmpl
lods
xchg
icebp
mov
pop
in
and
xchg
sbb
enter
outsb
xor
cli
aas
lcall
add
jns
shlb
stos
negb
mov
addr16
rcll
cmc
adc
inc
inc
push
mov
out
lds
pop
add
lods
push
lret
sahf
inc
sub
mov
push
xor
sbb
push
jbe
gs
push
mov
jns
pop
in
adc
addr16
mov
cld
mov
sub
mov
mov
out
in
divl
adc
inc
mov
pop
imul
fcoms
mov
inc
adc
sub
pop
sbb
pop
sbb
cmp
das
scas
roll
inc
adcb
fsts
mov
mov
test
xchg
dec
xchg
mov
sahf
cmp
xor
adc
pop
sbb
es
ficomps
and
mov
loopne
mov
push
nop
lret
push
cwtl
pop
cwtl
sbb
movsb
inc
xor
mov
cld
lea
push
jne
jne
sbb
xlat
fs
imul
pop
popa
jg
xor
sbb
mov
sub
and
and
xor
nop
pop
add
cmc
xor
pop
xchg
cmp
lret
movsl
call
lea
outsb
xor
out
daa
icebp
cltd
jmp
dec
xchg
xchg
xchg
cmp
stos
out
cmpl
daa
push
dec
je
and
sub
jmp
into
sti
sub
lahf
sbb
cli
xlat
xorl
lods
lods
sbbl
cmpsl
sbb
rol
les
or
mov
sbb
imul
mov
push
out
mov
test
mov
fucomp
xor
mov
ret
popa
in
jmp
std
adc
cmp
inc
or
xchg
in
fwait
sbb
dec
adc
sub
in
jno
xor
push
push
sbb
ror
sub
mov
jmp
insb
xchg
push
xchg
push
jb
gs
ljmp
and
mov
sbb
mov
imul
cmp
mov
push
test
jnp
test
cmpl
cmpsb
xchg
pushf
int
in
push
or
push
xchg
inc
ret
aam
mov
lret
push
mov
dec
inc
adc
jge
movsl
xor
stos
jmp
out
in
loopne
sbbl
int
shlb
pop
shr
clc
pop
test
lock
pusha
push
call
gs
and
xor
lods
mov
cwtl
mov
jg
mov
inc
inc
sub
cmpb
pop
dec
and
pop
aam
daa
inc
xchg
pop
push
inc
je
fsts
lahf
jno
je
adc
pop
dec
dec
inc
mov
fisttps
shll
sbb
jle
in
pushw
in
dec
mov
mov
xchg
xlat
orl
push
shl
inc
into
cs
xchg
mov
jns
push
shlb
nop
sbb
outsb
jb
xor
enter
xchg
adc
cli
pushf
fistpl
lahf
in
pop
xchg
into
jo
push
or
lea
test
jo
sbb
imul
cmp
jl
add
push
or
test
out
in
inc
addr16
ss
dec
mov
sbb
imul
aas
fldcw
pop
inc
scas
jno
jbe
movsb
es
lods
mov
sbb
lcall
dec
aam
mov
xor
and
jle
or
inc
mov
xchg
mov
std
mov
push
loopne
push
movsl
stos
inc
or
mov
sub
mov
xchg
bound
dec
test
cwtl
push
shlb
clc
push
adc
arpl
arpl
call
xchg
aam
adc
out
std
and
scas
dec
imul
push
push
and
aam
or
and
ret
xchg
fwait
mov
mov
in
add
inc
cmp
dec
out
cwtl
sahf
cmpsl
and
xor
mov
hlt
pop
data16
mov
pop
xchg
xchg
cmc
jo
inc
test
xor
rcl
out
inc
iret
nop
dec
xchg
mov
cmp
add
jge
mov
ror
lahf
outsb
mov
outsb
push
ljmp
fcomps
or
test
out
xor
icebp
sub
loopne
nop
lret
rolb
xchg
cmp
nop
rorb
popf
jo
daa
jl
jge
mov
sbb
adc
fmuls
adc
mov
scas
notb
stos
nop
xor
in
lret
mov
inc
into
into
test
movsb
popf
xor
push
xor
pop
hlt
dec
xchg
mov
imul
addr16
shll
stos
mov
push
ja
mov
shll
push
push
xchg
into
mov
nop
jno
mov
xchg
xchg
lock
push
inc
xchg
test
sub
pop
xlat
dec
fbld
mov
movl
jbe
out
movsl
subb
stos
jne
outsb
hlt
dec
out
jmp
xor
and
push
testl
clc
xchg
adcb
aas
lret
cmpsl
or
inc
js
xchg
mov
xchg
jno
sub
bound
dec
or
add
stos
es
je
cmpsl
xor
pop
out
jae
adc
subl
or
pop
xchg
and
insb
dec
push
sti
pop
mov
rcl
das
or
aas
imul
add
rcrl
imul
mov
cmc
and
mov
inc
push
loopne
sbb
push
sub
mov
mov
es
out
sarl
and
or
dec
jg
in
lea
push
jp
aaa
push
cmp
pop
or
dec
jmp
scas
mov
sub
roll
xor
cmp
lods
xor
loopne
pop
adc
or
inc
inc
mov
addr16
insl
mov
cmpl
push
dec
jbe
out
xorb
dec
pushl
mov
repnz
adc
pop
popf
cmc
xor
addb
insb
je
cmpl
fwait
lcall
in
cmpsl
and
push
test
xchg
lret
xchg
xor
aas
cld
lret
mov
sbb
je
xchg
adc
stc
cmpb
sbb
cmc
out
mov
push
xchg
in
cmp
cmpsb
push
jecxz
xor
add
fs
sub
push
addr16
or
jns
pop
mov
cmc
sbb
mov
std
pop
dec
lret
popa
push
jmp
xorl
push
pop
es
sub
sahf
add
int
mov
sahf
movsl
cmc
fidivl
inc
adc
pushf
adc
cmpsb
inc
icebp
jg
push
mov
mov
sub
mov
cmp
idivl
lret
jmp
xchg
pusha
push
dec
shrl
mov
aam
imull
xchg
rcrb
ficompl
adc
leave
pusha
cmp
loopne
cld
lret
jbe
out
rcll
inc
loopew
or
jge
adc
stos
dec
xchg
aas
adc
add
xchg
push
sbb
push
or
mulb
scas
xchg
inc
lret
jge
xor
popa
xor
cmp
cltd
cmp
packuswb
iret
enter
roll
xor
mov
das
mov
xlat
cmpsl
cmpl
cs
mov
mov
in
pusha
mov
adc
add
nop
inc
daa
pop
jo
sub
mov
shr
sub
ret
mov
fistpl
jno
xchg
adc
and
fsubl
scas
mov
lahf
sahf
dec
cmpsl
stos
pop
fst
mov
repz
and
adc
jae
sbb
mov
mov
stc
mov
cltd
jbe
mov
fiaddl
stos
xchg
push
jb
es
inc
mov
scas
pop
js
xor
inc
xor
ljmp
fisubs
sahf
ss
cmp
xchg
fwait
sub
adc
pop
mov
jb
pop
std
xor
dec
sbb
dec
pop
mov
inc
fisttpl
mov
jae
push
cli
and
stos
xchg
lahf
dec
subl
or
dec
ret
fidivrl
in
idivb
lret
mov
jnp
je
cmp
inc
sarl
xor
sbb
cmp
iret
insb
xchg
outsb
cmp
and
and
iret
stos
inc
jo
push
rorl
leave
sti
gs
xchg
inc
in
add
dec
mov
adc
mov
jbe
push
fcmovb
fcom
sahf
mov
dec
iret
jl
mov
mov
xlat
push
jo
adcb
in
jnp
mov
adc
das
lcall
xchg
xlat
test
mulb
mov
jns
or
cmp
jbe
imul
lcall
mov
pop
bound
mov
xor
jns
pop
stc
pushf
lock
rcrl
pop
subl
enter
clc
adc
and
pop
clc
xor
jnp
cmpsl
js
add
fildll
add
int
fstl
jno
push
jb
push
inc
sbb
add
popa
into
inc
shr
fimuls
js
push
xchg
icebp
arpl
imul
dec
push
mov
clc
sbb
shr
arpl
pusha
jnp
jae
ret
into
ljmp
jae
dec
sarl
xchg
push
adc
add
dec
inc
jbe
or
mov
mov
ds
shrb
lret
aaa
aas
mov
or
or
stos
test
dec
out
push
fucomip
jmp
jno
in
enter
gs
out
jl
ret
sub
pop
jl
sub
repz
sub
ret
test
aad
adc
imull
stos
ljmp
push
or
test
pop
aaa
and
inc
inc
data16
sbb
sub
mov
dec
mov
iret
mov
out
push
xor
push
js
into
pop
pop
mov
ljmp
les
xor
cmp
sbb
mov
or
sub
lock
movsl
pop
xchg
cmc
icebp
in
mov
pusha
inc
add
adc
sbb
sbb
or
sbb
ss
enter
mov
subb
sub
or
cltd
inc
adc
xlat
xor
mov
push
jecxz
cmovp
inc
icebp
pop
rol
lds
icebp
sub
jne
pop
mov
test
xchg
je
xchg
aad
shll
les
sub
inc
js
in
out
and
call
add
fidivs
insl
iret
pop
test
lahf
dec
out
pop
add
push
mov
enter
cmp
mov
mov
push
les
jo
pop
mov
mov
add
in
mov
xorl
or
mov
fwait
xlat
mov
fisttpl
dec
inc
lea
notb
jp
loopne
movsl
lahf
je
push
sbb
inc
mov
and
xchg
add
or
cmp
and
enter
mov
leave
insl
repz
repnz
jge
mov
pop
jo
push
cwtl
jl
ret
adc
loopne
adc
in
xor
or
dec
push
loopne
mov
in
sbb
mov
inc
sti
add
fs
pop
sti
loopne
pop
fcoms
and
inc
test
xchg
and
aaa
fstpt
loopne
push
jb
insl
orb
divb
mov
cwtl
jnp
adc
inc
jnp
mov
sarl
xlat
mov
push
cmpsl
push
shll
ljmp
dec
add
xor
adc
into
add
lds
mov
test
inc
xor
dec
test
fiaddl
rcr
or
sbb
lods
call
rcll
nop
loope
jns
fdivr
cmp
clc
insl
pop
xor
out
push
cmpsl
lea
xchg
mov
inc
cmp
or
sbb
lds
insl
or
jns
push
push
es
sub
mov
rclb
dec
aaa
test
test
sub
mov
int
push
lret
icebp
iret
xchg
push
xchg
mov
jmp
sbb
test
lfs
sub
andb
jecxz
aas
mov
add
sub
fdivrs
add
ja
ss
adc
addb
imul
push
push
pop
sbb
xchg
mov
push
pop
scas
repnz
xchg
cmp
aad
lock
shlb
popf
mov
cmpsl
mov
fsubrl
fdivl
test
addb
mov
sub
aad
stos
test
push
les
xchg
and
aam
or
push
and
mov
and
int
push
fcmove
adc
mov
and
push
out
xor
lock
rolb
dec
fisubrl
scas
push
lods
daa
xor
lcall
fisubrl
or
out
pop
or
scas
filds
sarl
imul
mov
jne
test
inc
lds
inc
lcall
jnp
lea
fdivrs
push
dec
test
mov
cmp
xchg
inc
push
xor
cld
cs
in
gs
push
mov
push
into
xor
mov
sbb
pusha
sub
testb
inc
test
pop
fstl
gs
iret
in
xor
and
jge
jnp
push
jecxz
pop
inc
mov
mov
in
aas
xchg
addr16
dec
dec
pop
lcall
push
inc
xlat
inc
imul
dec
popa
inc
push
xlat
inc
mov
adc
loope
rorl
cmp
or
fistl
inc
mov
adc
loope
rorl
cmp
or
lret
push
lret
inc
mov
adc
loope
rorl
cmp
cmp
push
push
jecxz
mov
adc
add
xchg
dec
icebp
rorl
dec
cmp
jle
xchg
cmp
jne
or
adc
and
push
mov
bound
mov
mov
dec
repnz
loop
adc
and
push
sti
inc
lret
bound
xchg
and
jae
arpl
push
repnz
loop
sub
pop
out
out
and
add
bound
cmp
inc
je
bound
add
mov
push
inc
xor
sahf
push
push
lcall
mov
or
test
arpl
xchg
and
lods
leave
es
sahf
cmpsl
xchg
push
inc
inc
fmul
and
jnp
pop
cmc
inc
arpl
aaa
gs
push
mov
arpl
insl
sub
dec
shrl
mov
and
pop
mov
test
inc
lret
jle
outsb
pop
cmp
mov
mov
push
inc
add
lcall
lret
jp
mov
xlat
xlat
sbb
shrl
inc
adc
fwait
and
lods
ljmp
xchg
cmp
jp
pusha
ret
inc
loop
adc
and
push
loop
lret
and
lcall
outsl
hlt
jle
push
mov
aaa
xchg
fidivrs
imul
hlt
dec
xchg
sahf
cmp
sarl
enter
cmc
push
mov
in
es
pop
loop
push
mov
dec
cmp
fimull
ret
outsl
sbb
adc
pop
loop
adc
and
push
cli
inc
lret
bound
xchg
cmp
push
jp
dec
repnz
loop
adc
and
push
cli
inc
lret
bound
xchg
stc
xchg
push
inc
jb
inc
pop
data16
pushf
je
test
stc
sub
mov
jbe
jae
jnp
icebp
imul
sbb
pop
clc
scas
rcrb
int3
add
dec
rcl
ror
ss
jnp
cmp
and
jge
jne
push
cld
out
lret
faddl
sbb
or
cld
xchg
enter
pop
xchg
imul
jp
xchg
or
jle
imul
rorl
das
pop
pop
xor
sub
test
clc
sbb
pop
imul
jmp
jne
add
call
dec
scas
xchg
xchg
mov
outsl
lods
les
inc
cwtl
shrb
jmp
das
das
outsb
std
repz
movsb
xor
cmp
ds
sti
dec
stos
push
cmpl
mov
lret
pop
push
mov
pop
test
ja
push
inc
push
cmp
mov
jb
fiadds
inc
int3
push
outsb
mov
aaa
lods
dec
push
in
jle
pop
ret
stc
pop
or
mov
clc
sub
inc
test
sbb
movsl
mov
pusha
xor
jnp
mov
rolb
ljmp
jne
sbb
or
jmp
xor
xor
jle
xchg
dec
push
xor
int3
mov
pop
dec
inc
dec
mov
sub
lcall
aam
call
mull
dec
lret
inc
ud2
aas
jmp
addr16
imul
xchg
jmp
xchg
jecxz
imul
cmpsb
mov
sbbb
fcoml
pop
xchg
jno
sbb
jmp
pusha
cltd
add
mov
or
stos
mov
sbb
jecxz
into
out
pop
leave
push
dec
add
loop
cmpsb
call
out
inc
int3
loope
adc
nop
jbe
das
clc
aam
iret
test
std
pop
ss
cmp
les
out
mov
imull
addb
out
ljmp
sub
dec
dec
xor
sahf
cltd
inc
test
lea
inc
jp
mov
push
insb
adc
daa
adc
pop
and
lret
sti
bound
sbbb
add
and
mov
lds
mov
out
dec
dec
dec
xchg
es
lret
jmp
scas
adc
cmp
inc
jbe
out
in
or
pop
ljmp
pop
inc
lcall
xchg
jnp
dec
and
sbb
sub
scas
pop
ret
dec
data16
movb
lods
mov
jle
adc
pop
and
setae
cmpsl
addr16
sub
sub
fcmovnu
pop
jns
lcall
sti
dec
shl
push
sbb
movsb
adc
push
add
lods
add
sub
repnz
cwtl
cmp
push
mov
into
and
sbb
inc
std
arpl
inc
adc
and
mov
jae
dec
loop
mov
push
dec
rol
mov
inc
fmull
jge
iret
jns,pn
test
icebp
inc
mulb
enter
je
cltd
scas
out
mov
jo
jae
push
cmovge
add
into
insl
cmp
bound
push
popf
inc
inc
dec
cmp
jp
dec
jbe
mov
xchg
mov
pop
fldcw
mov
add
or
adc
mov
jle
int3
lahf
xchg
roll
mov
loop
shrb
arpl
mov
pop
andb
or
test
sbb
loop
fildl
or
xchg
jns
call
lock
jp
jp
fldenv
rorb
cmp
cmpsl
jg
mov
dec
int3
ja
xchg
sbb
nop
pop
outsb
adc
orl
xor
add
jno
iret
pop
mov
jecxz
adc
xchg
inc
je
test
pushf
gs
cmp
mov
jg
xor
daa
gs
fwait
testl
xor
adc
jo
jae
jnp
add
shrb
xchg
fstl
xor
fcomp
jb
mov
scas
pushf
int
push
push
std
gs
cs
lods
jns
xor
scas
lret
out
push
push
pop
inc
pop
ret
cltd
insb
pop
clc
pop
sti
push
int3
sub
lods
fwait
mov
inc
mov
lods
stos
sub
inc
mov
movsl
mov
notl
push
ficoms
inc
cld
aam
push
repz
pop
mov
pop
dec
inc
out
push
push
push
sub
and
movsl
or
ror
out
fnstenv
mov
in
push
divl
xchg
call
mov
push
or
leave
sbb
sbb
test
push
xchg
lock
jp
pop
aas
mov
lods
shrb
std
je
test
adc
mov
mov
pop
loop
push
fisttpll
in
in
int3
pop
xor
in
adc
cmpsl
push
ss
stc
arpl
or
enter
ja
enter
call
push
pushf
and
in
and
out
jmp
addb
mov
lods
jle
jg
xor
cmp
arpl
xchg
stos
fstpl
push
dec
lret
js
pop
mov
dec
lods
outsb
cmpsl
daa
pop
cld
jbe
lods
sub
add
addr16
mov
fstl
push
insb
sbb
xor
mov
jo
push
add
loope
and
lea
ret
adc
je
inc
ja
call
jmp
out
mov
movsl
xchg
and
stos
mov
jmp
ljmp
inc
stc
adc
pusha
inc
and
jns
mov
mov
jae
or
aaa
sub
mov
pop
sub
sub
and
iret
ja
mov
arpl
cmp
mov
dec
psubb
sub
inc
mov
aam
sbbl
aad
adc
xor
jl
add
repz
lret
sbb
add
jle
pop
inc
jg
dec
nop
rolb
jmp
push
and
sahf
clc
fbld
inc
stos
shll
jns
ret
mov
add
jnp
pop
cmp
cpuid
push
loop
mov
cmp
jp
movsl
dec
nop
out
ja
jge
out
or
cld
pusha
out
mov
test
imul
inc
xor
cmpsb
ds
lcall
pop
mov
xchg
push
loop
das
out
dec
dec
loope
xchg
mov
test
xor
mov
mov
stc
sahf
std
fwait
sarb
cli
out
and
in
sbb
in
cmc
dec
mov
xorl
cld
inc
or
dec
xchg
push
in
sub
ret
adc
push
dec
lods
shlb
and
jge
pop
sbb
cwtl
cmpsb
inc
mov
adc
ret
jmp
mov
enter
xchg
mov
push
imul
cwtl
pop
cmp
insl
test
pop
add
or
mov
dec
mov
adc
cmpsb
shrd
sarl
std
gs
adc
sbb
out
imulb
add
shlb
mov
xchg
lods
lea
dec
fadd
pop
push
fisubrl
fmull
lcall
inc
add
shlb
mov
shlb
xchg
jno
lods
mov
and
lods
jne
fs
repnz
xor
dec
nop
jp
xor
or
js
shll
ds
cmp
orb
cmp
loope
loope
xchg
in
outsl
dec
jmp
jnp
or
xor
inc
mov
xor
pushl
fwait
sbb
dec
cli
pusha
das
cwtl
int3
inc
in
mov
jg
fnstenv
mov
sub
adc
jne
imul
cwtl
or
stos
push
cmp
push
adc
cmpsb
pop
xchg
aaa
xchg
lret
mov
xchg
mov
add
xchg
adc
mov
stos
or
rorl
jae
jae
sub
jecxz
inc
or
sub
push
and
dec
mov
xchg
in
test
push
out
xlat
call
jmp
cli
inc
and
outsb
sahf
sbb
leave
shrl
jg
cmp
and
adc
ret
ficomps
aaa
mov
dec
lret
inc
jg
ret
dec
scas
movzwl
pop
cmp
pop
mov
bound
stos
sub
sbb
cmp
dec
rorl
mov
push
outsl
fdiv
popa
idivb
adc
imul
fdivl
mov
pop
les
in
fisttpl
jae
jg
icebp
dec
add
into
push
lock
jle
rcll
adc
cmpsl
fldcw
shl
cmpsl
das
xlat
mov
inc
pop
adc
sbb
sub
in
cmp
and
cs
push
jmp
mov
pop
cmp
mov
push
loopne
sbb
push
lea
stos
movb
cwtl
and
sbb
popa
cld
out
xor
mov
out
sbb
cmp
pop
xor
pop
mov
inc
jns
pop
cwtl
call
das
js
insl
inc
popa
loop
mov
or
mov
es
inc
in
adc
sbbb
inc
mov
pop
adc
pop
popa
adc
iret
aaa
lea
loope
push
pushf
inc
dec
mov
pop
test
push
mov
inc
aad
cmp
shl
test
push
ljmp
arpl
dec
shlb
cmp
dec
icebp
mov
push
and
in
ljmp
shrl
cltd
jmp
addr16
mov
pop
fwait
dec
dec
hlt
mov
cmp
and
testl
jecxz
rorb
inc
xor
mov
shrl
xor
sbb
lahf
dec
sbb
or
mov
repz
std
push
jb
js
push
shrb
pop
cmp
xchg
push
test
flds
jae
pop
arpl
push
cmpsb
lods
fldt
add
punpckhwd
pop
ret
andb
outsb
jb
xchg
imul
dec
cmpsb
and
xchg
dec
clc
gs
dec
pushf
dec
mov
jg
add
cmp
push
and
add
jnp
nop
js
out
sbb
stos
xchg
scas
std
mov
popa
sub
icebp
inc
mulps
out
cmc
mov
jo
enter
cmp
or
into
mov
and
lock
fadd
xor
mov
mov
push
inc
xchg
insl
jge
mov
in
les
fucomi
sub
scas
cmp
insb
test
jecxz
les
int
jb
pop
push
dec
pop
scas
mov
dec
stos
push
jns,pt
dec
sub
sbb
push
jecxz
cmp
mov
loop
push
aas
jmp
mov
or
mov
scas
aas
adc
jbe
enter
gs
sahf
inc
vprotq
test
sbb
add
xor
fsubs
push
cs
xchg
cmp
aaa
jle
mov
fiaddl
cltd
xor
mov
jmp
add
popf
dec
pop
pop
dec
push
jno
lahf
xchg
in
jae
popf
fs
push
or
cmc
dec
rorb
sub
insb
sbbb
lret
adc
mov
jae
test
cmp
in
popa
push
xor
add
rclb
add
lods
jne
push
aaa
adc
out
pop
fisttps
adc
sub
repz
mov
adcb
loopne
push
rcrb
fidivl
stc
or
sub
mov
test
xor
mov
adc
stos
mov
cmp
je
pop
and
fsubl
cmpsl
sub
jno
addr16
mov
or
cmp
shrb
ret
mov
lret
jmp
jle
and
sbb
pop
lds
mov
xor
pop
jp
push
ljmp
sti
adc
aas
leave
xchg
xchg
add
jp
ja
xor
aad
je
sub
add
ret
adc
add
push
mov
jge
int3
push
or
test
ret
adc
pop
in
xchg
push
push
movsl
dec
je
adc
daa
sub
aad
add
into
add
mov
push
fnstcw
mov
mov
dec
daa
jbe
pop
mov
cwtl
icebp
mov
cs
and
cltd
mov
xor
pop
cmp
dec
jge
hlt
lret
pushf
inc
jb
rcrb
xor
dec
mov
dec
mov
xchg
push
fsub
jp
nop
aas
test
push
repz
ficompl
lahf
fstp
sarb
scas
cmpsb
and
into
ror
mov
push
push
in
in
dec
push
inc
sbb
fs
cs
pop
cmp
dec
sbb
callw
stos
xor
mov
lods
pop
mov
jb
xchg
sbb
movsl
aam
aas
mov
xchg
mov
fucomip
repz
cwtl
inc
sub
push
adc
mov
mov
xor
icebp
sbb
mov
xchg
or
xlat
jo
in
aas
scas
mov
notb
stc
dec
into
jb
in
cmp
int3
pop
or
cmp
mov
int3
fwait
sbb
mov
mov
sbb
cltd
rcrl
insb
scas
add
hlt
pop
sub
and
jmp
fdivp
pop
in
add
int3
lcall
fldl
xchg
ficomps
movsl
xchg
jns
push
loope
insl
push
push
movsl
add
push
cmpsl
and
push
adcl
and
push
inc
pusha
pushf
sub
mov
pop
scas
faddl
sub
add
lret
inc
mov
sub
in
cs
fidivl
push
mov
mov
leave
icebp
inc
jmp
aaa
push
mov
cmp
lods
push
pop
push
or
sbbl
pop
jbe
pusha
add
lods
rol
jne
div
mov
push
decb
in
aas
andb
add
test
das
cmp
xor
inc
pop
pushf
int3
mov
inc
sti
into
lock
add
xor
fstpl
cmp
adc
sbb
in
lds
xor
fists
sub
pop
in
in
adc
xor
mov
jge
xor
xor
mov
adc
xchg
scas
out
push
pop
sbb
cmp
dec
std
enter
daa
jno
scas
mov
scas
jecxz
sbb
ljmp
je
in
hlt
or
ss
call
and
mov
icebp
and
mov
ficoml
sbb
out
adc
jge
mov
inc
ss
fcoms
xchg
sbb
popa
mov
aaa
cmc
adc
lock
mov
push
int
movsb
xchg
cmp
shr
xor
xor
cs
mov
pop
push
mov
mov
xchg
ds
mov
or
pop
sbb
push
xor
push
jmp
icebp
pop
ja
jo
mov
cmp
imul
push
add
enter
lret
xor
in
imul
dec
cld
inc
mov
dec
dec
repnz
sub
pop
gs
imul
out
out
add
mov
cmp
xlat
pushf
mov
loop
lahf
mov
fildll
and
lcall
mov
push
mov
rolb
les
cmp
mov
or
mov
cmp
fwait
ljmp
cmp
and
mov
xchg
xor
ret
mov
mov
adc
hlt
sbb
lcall
adc
repnz
jmp
jnp
or
daa
xchg
sti
loope
test
lea
mov
out
fildl
dec
or
xchg
notb
sarb
push
push
mov
repz
push
or
sbb
fidivrl
lea
xchg
pop
lds
sub
jg
jl
outsl
dec
shrb
cmpl
mov
push
pop
lods
fisttps
mov
fistps
fldcw
je
fcmovnu
popa
dec
mov
cmp
lcall
xlat
ret
mov
inc
loopne
in
iret
mov
lret
jmp
add
adc
cmp
mov
insl
data16
push
cmp
neg
jb
mov
mov
mov
negb
cmp
xchg
xor
out
jp
cmp
sub
jnp
pop
sbb
or
inc
or
mov
popf
pop
sub
out
aaa
mov
ret
insb
push
sahf
incl
sub
mov
mov
popf
jbe
lods
pushf
push
faddl
imul
in
icebp
mov
data16
mov
cmp
dec
outsl
test
enterw
adc
loop
mov
in
adc
call
inc
sahf
je
call
sub
pop
or
mov
cmp
cld
loopne
imull
push
pop
stos
pop
call
shrb
aas
aam
pop
xchg
sub
cld
sub
cmc
mov
or
lea
jns
lock
adc
xor
push
pop
cmp
je
pop
repnz
jne
jecxz
jno
mov
mov
dec
and
adcl
sub
popl
iret
jmp
mov
adc
mov
sbb
test
in
bound
rcrl
mov
sbb
push
adc
scas
and
sbb
dec
xor
sbb
notl
push
xor
adc
pop
and
fistpl
and
daa
push
lcall
push
pushl
popa
int
cld
pop
fisubl
cmp
out
dec
push
shl
mov
mov
lock
cmp
push
mov
sbb
jle
test
adc
in
out
sub
es
les
dec
scas
cli
xor
pushf
std
pop
pop
push
je
fldl
mov
pop
cmp
inc
add
jmp
sub
test
or
cmp
outsb
repnz
push
mov
push
push
movsl
testl
fsub
mov
cmp
and
add
sbb
lea
add
mov
cltd
filds
orl
pop
xor
mov
or
or
mov
xor
imul
hlt
lds
fnstcw
mov
in
loop
daa
add
outsl
mov
push
jle
js
stos
scas
cli
lahf
es
and
out
xor
leave
test
mov
pushf
icebp
gs
icebp
imul
cmpsb
dec
xchg
rcrb
jno
dec
mov
lock
adc
dec
mov
xchg
push
inc
mov
frstor
les
mov
adc
pop
mov
jle
call
mov
lcall
inc
test
stos
inc
and
dec
popa
call
aam
sbbb
add
xor
lret
or
std
dec
je
jbe
fwait
in
mov
jae
jecxz
sub
mov
cmpl
xor
sub
aam
jo
cmpsl
rol
outsl
iret
mov
mov
cs
loope
scas
add
out
je
push
xchg
push
out
mov
mov
ds
mov
cmp
pop
inc
pop
cmpl
push
mov
xchg
or
jg
lods
xchg
xchg
movsb
add
dec
add
push
popf
ja
sub
jmp
pop
adc
hlt
jns,pt
add
jmp
jl
cld
test
xor
std
lret
into
test
stos
push
pop
int
lods
jmp
dec
insl
xlat
pop
or
pop
jb
mov
mov
inc
bound
xor
dec
sbb
in
fmuls
loopne
lret
fiadds
jns
adc
pop
inc
or
mov
pop
scas
mov
mov
rcrl
or
push
xchg
pop
rolb
jp
pop
fistpll
cld
lods
jle
inc
pop
in
cwtl
mov
mov
nop
lret
adc
jl
ljmp
cmpsb
out
js
inc
pusha
inc
enter
adc
rcll
xlat
in
lret
xchg
inc
or
in
cmp
mov
sahf
xchg
lcall
jge
les
cmp
scas
mov
gs
in
xchg
or
pop
push
dec
es
ljmp
aad
dec
adcb
inc
xor
add
popf
fs
pushf
cmp
mov
inc
cmp
or
cwtl
adc
incb
mov
in
inc
jecxz
lods
add
and
jne
negl
xchg
pop
hlt
pop
out
cli
aas
inc
pop
cmp
in
cmp
fldt
rolb
cld
loopne
movsl
fwait
in
sbb
mov
lods
mov
or
pop
lahf
cmc
pop
lret
les
nop
fwait
pop
push
popa
iret
push
cmp
shrl
jle
inc
adc
inc
cmp
adc
cs
std
jbe
sub
or
outsl
xor
inc
adcb
dec
ret
mov
testl
push
inc
adc
movsb
push
cmp
repz
xchg
gs
add
ja
xlat
mov
add
xchg
push
mov
inc
add
jmp
cmpsl
mov
call
adc
lret
js
insl
enter
fbstp
fcoml
cmp
nop
cmp
sbb
cmovns
and
hlt
push
rcrb
fwait
ret
mov
lcall
dec
sbbl
fs
jle
mov
mov
je
shll
iret
pop
cmp
inc
pop
add
mov
mov
xchg
scas
push
lret
mov
jl
push
fnstcw
mov
inc
or
pop
jmp
xor
and
add
fs
fildl
lods
loopne
add
leave
outsl
insl
pop
pop
int
cmp
aaa
cs
out
or
mov
shld
jne
sbbb
sbb
dec
repnz
loop
adc
and
push
cli
inc
lret
bound
xchg
cmp
push
jp
dec
repnz
loop
adc
and
push
cli
inc
lret
bound
xchg
cmp
push
jp
dec
repz
loop
adc
and
push
incb
jb
bound
xchg
push
cmpb
cmpsb
push
jp
lret
sbb
and
lcall
lea
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
xlat
or
out
out
sahf
jnp
mov
jbe
data16
addr16
pop
ss
and
push
daa
push
xlat
test
not
out
xchg
mov
sub
jbe
inc
ja
addr16
pop
pop
push
es
push
daa
push
xlat
fs
out
jle
les
js
sahf
push
test
add
je
dec
push
mov
mov
shrb
lahf
jne
fdivrl
pusha
push
lcall
pop
cmp
testl
mov
pop
dec
dec
jmp
lret
ds
push
inc
aaa
pop
in
pop
jbe
sub
lods
jecxz
int3
scas
call
jge
clc
or
addr16
lret
push
push
mov
mov
daa
push
xlat
ss
xor
loopne
pushl
cmpsl
jns
mov
ss
arpl
fxch
lods
push
test
inc
push
jb
sbb
xchg
cmpsl
jecxz
sahf
sub
push
and
in
inc
inc
xchg
enter
jmp
aas
pop
int
sbb
mov
mov
adc
push
xchg
push
f2xm1
push
and
push
notl
int3
xchg
mov
cmpsb
mov
cmpsl
push
push
lock
mov
pop
sbb
fidivs
push
daa
push
mov
mov
leave
fdivr
and
daa
xor
and
and
xchg
pop
inc
push
push
push
push
addr16
cmpsl
xchg
mov
jecxz
fxch
xchg
repnz
loop
and
xor
loopne
bound
ja
insl
mov
mov
rcl
xchg
push
jbe
data16
addr16
pop
ss
es
push
daa
push
xlat
test
not
out
xchg
mov
cmpsb
mov
cmpsl
xchg
inc
data16
addr16
pop
ss
es
push
daa
push
xlat
mulb
ljmp
sbb
iret
and
push
sahf
clc
movsb
mov
xchg
dec
adc
cmp
inc
inc
mov
in
mov
push
mov
jno
sahf
data16
scas
cs
and
repz
mov
push
mov
or
inc
lea
mov
jp
fistpll
cmp
dec
hlt
sbb
push
es
cmp
fldt
rolb
rclb
push
add
inc
sarb
outsl
or
mov
cli
pop
cmp
and
loopne
dec
ja
add
into
repz
pop
incl
add
push
sbb
xchg
pop
fistl
arpl
push
sti
cmp
cltd
jns
dec
int
dec
push
inc
cltd
push
sbb
pop
pushf
adc
and
fdivl
enter
repz
push
mov
dec
or
or
cmp
and
cmp
outsl
rorl
dec
das
mov
add
rorb
and
mov
fsincos
mov
lretw
clc
push
xchg
movsb
out
rclb
mov
mov
ljmp
push
jns
push
mov
push
adcb
sbb
divl
add
xchg
mov
idivl
xor
xchg
movsl
arpl
jns
xor
lds
sbb
lahf
movsb
arpl
out
xor
negl
jmp
push
sub
addl
popf
push
loop
and
stc
jb
scas
in
adc
sbb
adc
aaa
out
test
xchg
adc
and
cwtl
pop
mov
dec
loope
cmc
add
mov
ss
mov
ljmp
xchg
xchg
pop
or
pop
or
mov
jns
repnz
sub
repz
xchg
in
bound
test
jb
sbb
and
sbb
addr16
ja
and
mov
xor
repz
cmpsl
rcr
test
xor
mov
clc
sub
aas
fisttps
bound
pop
dec
in
in
jnp
mov
sbb
pop
in
push
or
cmpsb
nop
testl
inc
insb
roll
fidivs
inc
cmp
cmp
mov
test
xchg
jp
xchg
add
pop
loopne
mov
xor
or
jo
and
inc
add
popf
push
sti
in
mov
in
xor
stos
int3
pop
mov
js
mov
push
decb
and
and
xchg
pop
cmp
ss
or
mov
lret
pushf
sub
jmp
jae
lcall
sbb
int3
shll
fucomi
test
push
and
sbb
rcrb
xchg
test
mov
bound
dec
xor
repz
cld
xor
stos
xor
mov
test
and
cltd
or
sub
push
cmp
jmp
mov
in
mov
sub
xchg
lret
repz
or
ss
cmp
out
or
dec
test
nop
jg
cmc
inc
inc
mov
mov
sbb
jns,pn
insb
add
das
test
xor
push
pop
daa
in
dec
and
out
fnstsw
lds
xor
out
pop
loopne
popf
jns
loop
out
mov
mov
arpl
enter
cltd
das
pcmpeqw
jne
sbb
cmpl
pop
test
jg
push
fadds
pusha
inc
mov
or
mov
jle
pusha
fs
xchg
jecxz
fxch
int
mov
sbb
xchg
xor
add
xchg
jns
js
lahf
mov
mov
arpl
sbb
jge
jmp
lahf
jg
imul
addr16
loop
cld
mov
popa
adc
push
sub
sbb
ficomps
xchg
mov
and
sti
lds
adc
xchg
push
fsubl
cld
mov
push
insb
xchg
xchg
xorl
mov
push
iret
es
cltd
stos
int
xchg
pop
out
cmp
test
mov
jno
fstps
lret
pusha
fcmovnbe
push
cwtl
mov
aam
sbbl
cmp
cmc
in
ret
js
aaa
jl
cmpsl
push
xor
xchg
outsl
pop
inc
iret
jle
and
sbb
or
scas
fwait
js
jb
dec
sub
mov
imul
dec
stc
repnz
enter
loop
shll
inc
push
jo
pop
gs
arpl
aaa
add
push
test
jmp
cmp
lret
pop
call
iret
leave
je
lods
clc
iret
pop
push
mov
and
test
push
mov
pop
sbb
xchg
push
mov
or
xchg
jns
fstpt
xor
mov
push
sub
stc
inc
jecxz
aaa
loopne
dec
rol
out
ror
icebp
int
or
mov
xchg
and
cmp
cld
adc
jns
xor
shlb
sahf
fisttpll
add
cmc
push
or
pusha
test
adc
inc
jmp
inc
mov
imul
inc
sbb
es
inc
int3
mov
test
jb
hlt
jg
gs
aad
es
adc
sub
cmp
sub
xchg
pop
push
jb
jae
aad
pop
inc
lds
xor
push
filds
daa
insb
fldcw
push
shl
mov
divb
sbb
and
test
es
lcall
xor
mov
inc
inc
cld
rcrl
sbb
pop
mov
out
push
add
imul
jmp
pop
inc
pop
mov
push
mov
or
xor
pop
pushf
pop
rol
mov
mov
movsb
std
push
push
push
test
je
outsl
std
das
pop
popa
and
jmp
int3
lret
jo
fdiv
jl
pop
sub
rcrl
xchg
movsl
jg
rcl
dec
imul
dec
xchg
mov
popf
mov
popf
roll
mov
add
cld
mov
adc
ja
push
and
cs
and
popf
pop
enter
mov
jp
inc
aaa
dec
lds
pop
lret
push
dec
test
push
mov
inc
fs
loope
insl
adc
mov
fmull
fsubrp
nop
sbb
and
shll
mov
pop
in
sarl
call
adcb
imul
mov
sbb
mov
repz
ret
dec
xchg
xlat
add
add
mov
enter
push
inc
jmp
fucomip
sbb
xchg
or
and
sbb
jb
or
jns
adc
ret
or
sub
repnz
in
int
imull
jmp
jae,pn
repz
iret
add
fidivrl
lea
imul
and
push
out
push
stos
fbld
push
arpl
mov
mov
fimull
mov
addr16
loopne
rcr
sub
int3
cmpb
adc
sub
jecxz
ds
push
inc
fmul
mov
jno
sub
lock
data16
aas
popf
fidivrl
dec
add
inc
xchg
fistpl
adc
xor
push
insl
insb
or
mov
or
cmp
or
addr16
jns
test
mov
add
fidivrl
neg
pop
push
ds
orl
in
cmp
mov
loopne
xchg
mov
push
adc
addb
fcmovne
and
ficomps
in
les
mov
pop
xchg
adc
test
insb
test
jo
pusha
inc
cmp
jge
inc
jns
dec
sbb
or
push
int
out
mov
push
sub
and
das
xchg
out
testl
dec
shl
nop
insb
test
mov
jp
pop
addb
cmpsb
dec
xor
mov
xchg
addr16
orl
xchg
cmp
xor
xor
cmpsb
mov
hlt
cld
shlb
fidivs
insl
and
lock
push
and
sar
arpl
inc
in
mov
arpl
mov
inc
leave
jg
inc
or
lods
or
int
cmp
mov
rcll
inc
xchg
or
dec
push
pop
pop
out
mov
stos
adcb
sub
lret
bound
bound
nop
test
imull
mov
divb
mov
ds
pop
ljmp
mov
popf
adc
mov
call
jne
jae
imul
scas
mov
jb
insb
dec
test
fcmovnu
fsubp
cld
adc
aas
fisubrs
jge
movsl
or
fnstsw
mov
getsec
flds
xchg
outsl
xabort
testl
inc
cwtl
push
push
movl
inc
int
mov
xor
fadds
and
push
imull
mov
jae
cmp
jne
mov
sub
stos
lock
push
xlat
xlat
mov
stos
sbb
out
out
enter
add
iret
aas
es
jno
jecxz
lret
dec
sbb
mov
cmp
mov
sbb
or
jl
out
adc
shll
out
je
xchg
pop
xor
mov
sub
shlb
aaa
lea
aaa
ret
insb
dec
pop
je
mov
shrb
pop
sub
in
sbb
and
imulb
sub
bound
movsb
lret
cmp
lods
sarl
lcall
mov
int3
mov
cltd
scas
add
rcrb
xchg
popf
ljmp
inc
jle
dec
mov
inc
shlb
push
lcall
out
adc
shll
mov
into
js
repz
fsubp
mov
mov
add
add
cmovbe
mov
mov
lahf
stos
push
scas
orl
xchg
or
cmp
dec
lahf
push
iret
outsb
in
cld
add
sbb
sbb
pop
fiaddl
lds
cmp
mov
jbe
mov
and
mov
sbb
fstp
push
mov
in
mov
test
sub
adc
or
das
mov
mov
xor
ds
mov
adcb
adc
jmp
ds
sarl
shlb
movsb
out
sahf
fdivl
xchg
inc
fsts
dec
mov
push
jge
es
repz
ds
data16
scas
in
test
add
out
push
lea
mov
sbb
pop
loopne
jge
mov
sub
scas
xchg
dec
jnp
insb
sub
cmp
sbb
pop
push
orl
clc
and
dec
cltd
sbb
xchg
data16
mov
xchg
xlat
sti
push
jl
pop
sub
jbe
ficomps
push
add
daa
lretw
cwtl
sahf
mov
add
mov
adc
adc
cs
std
out
and
into
dec
mov
jae
cmc
mov
cli
lret
mov
jb
jb
imul
xor
xor
adc
push
cmc
jp
cmp
rcr
sbb
cmp
jns
dec
adc
dec
rclb
pop
imul
pop
mov
daa
mov
in
jnp
pop
test
dec
dec
mov
cs
aad
int
jbe
les
add
nop
cmp
js
jge
mov
jbe
jae
inc
pop
lahf
push
mov
xchg
fcomps
lea
mov
jp
out
or
or
inc
dec
sub
mov
call
jmp
int3
fmul
jnp
imul
cmpsb
inc
jge
das
mov
xor
xor
push
notb
std
lock
ret
popf
cld
pop
repz
jecxz
mov
push
and
add
sub
xor
or
cwtl
loopne
loopne
xor
out
push
jecxz
nop
dec
scas
repz
add
stos
sub
out
adc
imul
mov
fwait
pop
movb
jl
dec
inc
dec
pop
sub
cmp
shrl
repz
nop
ss
adc
loopne
test
loope
or
aaa
cltd
fwait
jae
popf
jl
xchg
dec
xchg
popa
mov
stos
sub
jbe
loope
push
rcll
mov
lret
dec
xor
xor
xor
mov
jge
imul
cs
pop
cmp
loopne
outsb
xlat
xchg
loope
xor
jns
insb
loope
repz
lret
cmp
lret
enter
mov
push
adc
xor
sahf
and
and
jmp
inc
cwtl
and
lret
ficoml
sbb
jo
mov
xchg
cmc
int
lods
mov
and
mov
add
pop
ljmp
mov
std
mov
sti
or
jle
int
mov
mov
mov
cmp
sbb
mov
push
lock
cmpb
push
gs
rep
mov
mov
inc
imul
fldt
mov
sub
hlt
fs
stc
dec
scas
lahf
jns
lea
lock
mov
fbstp
loopne
pop
xor
and
jbe
movb
xchg
loope
mov
out
lret
mov
cli
scas
and
stc
out
js
adc
and
in
mov
sub
rclb
and
call
jb
out
adc
inc
inc
lock
inc
fdivp
pop
addr16
sub
add
push
sub
sub
cs
jo
add
push
popa
insl
bound
jne
pop
subl
subl
jp
xor
cmp
push
mov
add
mov
jp
push
pushf
outsl
int
or
dec
lret
sbb
mov
pop
or
jmp
pop
dec
fcomps
js
or
int
cmp
mov
adc
add
jle
sub
sub
mov
and
sti
lds
lods
test
xchg
cmp
pop
pop
gs
and
faddl
mov
xor
sub
inc
cs
add
adc
pop
push
and
mov
adc
jbe
sbb
in
int3
cwtl
xchg
sbb
iret
lds
enter
mov
outsb
push
leave
frstor
inc
jge
dec
mov
sbb
lds
stc
in
insb
jb
xor
sub
dec
sbb
test
push
sbb
jae
cmc
xor
cld
jle
inc
jmp
fld1
sbb
inc
scas
movb
les
hlt
push
fnstcw
xor
fdivs
inc
lahf
and
cmp
cmc
int3
aaa
adc
sub
sbb
push
je
mov
mov
popf
sbb
jmp
mov
push
test
orl
cwtl
lcall
mov
xor
fildll
mov
mov
sbb
cmp
fstl
xor
push
and
push
xor
pop
lret
movsl
test
adc
mov
mov
dec
repz
push
mov
xchg
cltd
mov
dec
xchg
in
push
mov
movsl
test
lret
mov
dec
cmp
push
jge,pt
mov
mov
repnz
fidivs
or
sbb
xchg
adc
cmp
push
cmp
or
out
cmp
jg
adc
data16
pop
sahf
pop
xchg
or
test
xchg
or
or
cli
clc
inc
mov
mov
gs
push
inc
pop
jl
cmp
cmp
cmp
movsb
ss
int
dec
lret
loopne
lret
outsl
pop
sub
push
pop
pop
dec
mov
rcll
xlat
gs
enter
jnp
pop
mov
hlt
and
dec
les
jle
insb
repnz
out
sbb
push
pop
sub
jnp
test
ret
rorb
mov
jg
cmpsb
pusha
xchg
mov
gs
or
add
lcall
jp
or
pusha
sub
cwtl
cmp
xchg
inc
mov
adc
adc
subl
mov
popf
xchg
mov
in
enter
or
lods
shrb
jge
xor
push
or
xchg
adc
and
lea
sbb
add
sub
xor
fcoml
or
or
mov
and
lret
and
xchg
ljmp
sbb
sbb
stc
push
xorl
xlat
push
adcl
sbb
scas
push
mov
mov
cmp
push
fdivrs
and
mov
fwait
jbe
cmp
add
cmp
pusha
mov
sbb
xchg
pop
popa
scas
lods
jle
out
mov
js
push
enter
nop
or
adc
jmp
enter
mov
test
pop
xor
push
jmp
xchg
or
test
push
mov
mov
js
inc
dec
mov
sbb
popa
inc
dec
hlt
adc
xchg
sahf
or
rcrl
xchg
lcall
mov
sahf
pop
jl
and
imul
dec
and
out
in
mov
add
loopne
pop
aam
enter
repz
xchg
lret
mov
add
and
in
sbb
outsb
mov
fdivs
push
cmp
dec
rorb
arpl
push
mov
iret
test
cltd
popf
lahf
aad
inc
cmpsl
push
lods
push
aad
pop
xchg
or
fisttpl
mov
xor
jge
jle
cmp
xchg
stos
cli
int3
arpl
int
push
movl
lahf
repnz
shlb
lret
or
add
in
jecxz
mov
pop
sbb
xchg
sub
inc
addr16
iret
jno
out
sti
jno
les
and
fwait
bound
ljmp
arpl
out
add
or
ficoms
cmp
cmovno
or
movsl
popf
jp
add
sarl
jo
inc
insb
mov
xchg
cs
sub
push
cmp
mov
mov
lods
mov
sbb
fs
xchg
or
pop
push
call
in
mov
lods
lcall
push
lahf
sub
je
stos
stos
in
xchg
dec
xchg
or
cs
sub
test
push
aaa
in
leave
add
xor
lods
in
andl
inc
adc
data16
cmp
cmp
jecxz
jg
dec
push
xor
sahf
into
sbb
sbb
push
loope
pop
imul
and
out
inc
add
in
ss
dec
pop
jne
int
cmp
outsb
imul
ret
fildl
cld
dec
cli
and
ret
and
xchg
jo
pop
pusha
insb
inc
jg
mov
adc
xchg
jp
int3
pusha
cmp
cwtl
inc
rcr
dec
lock
cmc
fdivr
mov
sbb
mov
nop
mov
sub
push
insb
xchg
incb
mov
cmp
and
int3
push
add
roll
dec
or
sti
fwait
mov
sbb
mov
stos
mov
insl
adc
mov
cmp
pop
cmpsl
ja
stos
cli
inc
adc
scas
add
daa
movsl
out
xchg
int
mov
idivb
orl
in
fwait
stos
movsb
ficoml
push
mov
inc
sarb
mov
addr16
pusha
sbb
scas
cmp
push
add
notl
or
movsl
notb
stos
mov
push
xchg
lret
sbb
pop
xchg
daa
popf
mov
pop
subb
lock
fucomp
mov
arpl
jmp
pop
sbb
cli
sub
adc
jmp
fnstenv
and
ja
scas
ficomps
sub
mov
pop
rclb
dec
push
hlt
push
test
sub
daa
dec
loopne
xlat
outsb
mov
xchg
lret
push
int3
outsl
or
je
imul
add
and
addl
imul
mov
mov
jbe
imull
test
cltd
sub
enter
push
sti
in
shr
sub
insb
sub
sub
or
push
sub
out
or
xor
or
mov
popa
jmp
xchg
jae
sar
mov
ret
lock
mov
push
outsb
mov
lcall
xchg
pop
dec
hlt
dec
repnz
cmpsl
das
testb
test
rcl
jmp
or
push
fdiv
inc
and
xor
sti
lret
test
xchg
out
idivl
sbb
jg
add
fwait
pop
xchg
or
out
jbe
out
jp
mov
sbb
xor
add
loopne
aad
out
into
mov
clc
push
push
xchg
adc
adc
push
dec
mov
pop
dec
stc
jl
insb
sbb
dec
adc
jbe
mov
push
bound
or
cmp
in
scas
scas
xor
arpl
jecxz
sbb
lds
dec
push
pop
xchg
dec
out
daa
inc
in
imulb
in
fistpll
pop
pop
mov
ds
sbb
fdivrs
ret
aad
xorb
ljmp
jae
out
sub
mov
and
cwtl
push
jb
notl
jo
test
pop
test
lret
test
lret
sbb
mov
mov
mov
mov
aad
push
pop
test
test
pop
mov
jbe
out
mov
xchg
push
jbe
data16
addr16
pop
ss
es
push
daa
push
xlat
test
not
out
xchg
mov
cmpsb
mov
cmpsl
xchg
inc
data16
addr16
pop
ss
es
push
daa
push
xlat
test
imull
xchg
mov
cmpsl
xchg
inc
data16
inc
pop
ss
es
push
xlat
test
not
out
xchg
mov
cmpsb
aaa
push
daa
xchg
push
xor
fxch
jmp
in
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
fwait
dec
mov
insl
test
fmuls
cmp
push
jae
xlat
cmp
sub
pop
mov
js
js
cld
dec
mov
insl
test
fmuls
call
fstpl
sub
sbb
dec
popf
js
push
pop
sub
jge
or
call
push
mov
xor
cmp
sub
xor
testb
sub
fdivl
ret
cmp
cmp
addr16
mov
add
call
je
je
cmp
sub
nop
jne
gs
fnstsw
adc
call
js
xchg
in
pop
int
int
mov
shl
neg
decb
or
sub
jb
mov
inc
shl
pop
js
sub
or
sbb
sbb
or
mov
popf
dec
jge
fsubrs
lea
xchg
xor
bnd
arpl
cmp
insl
std
sbb
lds
adc
dec
mov
inc
and
sub
or
mov
faddl
aad
sbb
js
imul
ficomps
insl
test
cmp
mov
clc
sub
xchg
fisttpll
sbb
adc
push
and
sub
cmp
dec
cmpsb
imul
dec
lea
stc
ficoml
fisttps
xor
and
lods
pop
or
test
scas
cmp
daa
or
enter
or
push
sti
add
clc
sub
or
cmp
sub
pop
lea
js
push
pop
mov
or
call
fnstsw
in
sub
pop
lea
js
push
jne
add
pop
clc
mov
add
aas
xchg
xor
and
mov
adc
or
lods
inc
pop
jge
xor
ret
int
inc
int3
popa
push
mov
mov
xchg
ret
pop
cli
jp
inc
inc
sub
xchg
lods
sbb
and
je
dec
mov
iret
and
adc
out
xchg
dec
outsl
daa
mov
mull
cmp
pop
leave
lods
mov
adc
imul
xchg
cli
push
xchg
xor
sbb
call
imul
jae
cmpsb
adc
xchg
loope
cmp
rcrb
addr16
inc
add
scas
jne
push
pop
inc
push
out
addr16
out
mov
adc
leave
insb
rorl
and
adc
dec
xor
jnp
rolb
push
popf
adc
xorl
inc
sub
push
lret
jp
pop
stos
push
notl
je
jl
cs
out
roll
test
or
test
and
push
mov
xchg
sbb
adcb
mov
jmp
or
and
fildll
clc
hlt
in
xlat
shll
sbb
ret
adc
leave
sbb
fnstsw
or
subl
push
lods
fcoml
mov
or
dec
inc
lods
push
mov
cmp
xchg
lods
jb
adc
push
xor
rcr
mov
inc
mov
inc
cwtl
or
pop
jg
sub
xchg
or
loopne
mov
movsb
pop
dec
mov
adc
loope
std
jbe
pop
dec
xor
test
in
aad
mov
fimuls
stos
inc
mov
jnp
xor
std
lods
loop
imul
loope
inc
inc
push
pop
mov
je
and
ljmp
insb
and
dec
push
ret
add
hlt
push
jp
push
cli
mov
pop
into
or
mov
stc
xor
push
sti
or
push
jecxz
pushf
fbstp
into
mov
dec
imul
sub
fidivs
or
fisubrs
lock
jle
shrb
test
mov
mov
xchg
out
pop
sbb
sbb
cmpsl
jns
sbb
adc
xor
push
sti
sti
xor
xchg
or
xchg
negl
or
xchg
mov
leave
lret
repz
movsl
xor
pop
andb
xchg
clc
push
test
jae
pop
aas
sub
aaa
mov
and
cmpsb
mov
sbb
adc
clc
sbb
jmp
std
imul
sarl
fs
andb
mov
jle
daa
mov
pusha
std
mov
sub
jbe
rolb
cltd
or
aam
mov
push
sarb
mov
sbb
enter
stos
inc
xor
mov
hlt
push
push
imul
and
ds
imul
flds
sub
cmp
testb
or
xchg
pop
cli
jb
iret
roll
mov
shll
add
mov
test
divb
mov
sbb
cld
inc
push
pop
jp
loope
mov
jns
insl
cs
loop
mov
jb
stos
xchg
mov
lock
shlb
sarl
out
and
cmp
clc
mov
outsb
repz
cmp
push
add
pop
test
enter
xor
arpl
hlt
push
and
jae
or
popf
xchg
cmp
loopne
sti
mov
mov
fisttps
pop
clc
in
je
fstpl
ret
pop
push
cli
jl
cmp
add
mov
pushf
fwait
jnp
mov
sbb
adc
mov
mov
xchg
sbb
sub
addl
pop
sbb
cmpsb
dec
cltd
leave
outsl
sahf
jge
movsl
enter
jnp
sbb
in
jmp
cld
cmp
cld
pop
bswap
adc
fchs
push
popl
mov
in
adc
out
add
sub
lods
cmp
rcll
add
push
enter
int3
push
xchg
and
lea
xchg
push
dec
mov
push
adc
aaa
xchg
arpl
inc
push
sahf
mov
push
push
es
div
test
fsubl
dec
xchg
stos
outsb
vmwrite
int
cwtl
mov
push
aaa
pop
lock
lods
xchg
cmpsl
xor
sbb
sub
jp
adc
jbe
dec
dec
xorl
xor
push
rcr
jbe
push
rorl
xor
insl
pop
xchg
pop
xchg
jge
in
mov
jae
xchg
xor
mov
jp
or
pushf
frstor
inc
inc
andb
pop
push
mov
xor
add
shrb
push
adc
stos
push
add
dec
dec
cmp
mov
out
insb
xor
mov
mov
in
xlat
xorb
jg
xor
push
bound
mov
insl
mov
sbbb
leave
pop
fisubl
or
jmp
jp
lret
jnp
or
lods
and
test
shll
xchg
mull
mov
cli
jo
sbb
cli
pop
daa
ljmp
adcl
testl
pusha
ljmp
xor
in
stos
movsl
xor
and
pop
imul
fwait
jmp
push
int
aas
dec
push
loop
lock
sbb
sub
jno
test
cld
jp
cmp
sub
cli
dec
lds
jnp
mov
jge
or
inc
pop
sub
jns
push
xchg
stos
jno
adc
cmc
fmulp
xor
mov
lods
push
nop
adc
or
mov
jns
testl
xorl
ja
mull
inc
xor
mov
pop
ficompl
cmp
cmpsb
xor
test
sti
mov
stos
dec
jecxz
in
xchg
dec
xor
fcoml
enter
inc
call
stos
xchg
push
incl
inc
or
and
adc
mov
inc
jno
stos
mov
sub
sub
xor
aaa
sarb
mov
loopne
movsl
sub
cmp
mov
pop
cmp
push
mov
fidivs
repz
and
jg
xchg
insb
sbb
imul
lcall
out
ficoms
cmp
sbb
lock
sbb
cs
adc
adc
shrl
xor
push
aad
push
xchg
in
inc
aad
pop
inc
ss
pop
mov
scas
in
pop
in
mov
or
mov
loop
inc
sub
cmp
int3
aam
add
fwait
shlb
cli
aaa
aad
fildl
cmc
rcrb
jo
dec
dec
cmp
ja
inc
loopne
rcll
cmp
daa
inc
aad
pop
xchg
andl
ret
lock
std
adcb
cmp
push
pop
jmp
mov
lods
mov
es
or
dec
cmc
xchg
mov
ljmp
outsl
adc
out
in
das
aam
lea
loope
mov
or
mov
and
daa
notl
push
jge
dec
shr
or
popf
stc
mov
fwait
mov
fmuls
mov
notb
cmp
dec
std
mov
mov
scas
js
xlat
imul
pop
push
ret
and
cs
icebp
cmp
adc
mov
in
lahf
jno
fisubrl
in
dec
dec
mov
mov
sbb
fcomps
sub
adc
addb
add
cmpsl
cmp
test
subl
sti
loop
loop
movsb
cld
std
dec
or
hlt
subl
fstpt
mov
icebp
loop
imul
movsb
cmp
fs
sahf
dec
test
clc
cmp
fdivrs
std
fcompl
test
push
sbb
or
push
sub
jne
add
inc
int
pop
sub
repnz
pop
inc
fsub
in
in
jp
pop
and
adc
add
or
outsb
xchg
stos
lea
out
sub
fwait
push
into
cmp
cmp
repnz
mov
push
and
sbb
ret
stc
out
mov
mov
mov
bound
sub
aaa
dec
xor
outsl
inc
rcrl
xor
add
mov
mov
arpl
jnp
dec
daa
repz
or
or
cld
movsb
dec
jns
fcmovnbe
sbb
jbe
in
adc
add
adc
pop
lods
stos
xor
outsb
dec
imul
shrl
fisttpl
mov
aam
jp
mov
cmp
mov
dec
aad
mov
xchg
pop
mov
cmp
ljmp
hlt
scas
sub
dec
psubusb
cltd
fnstenv
iret
inc
aad
nop
push
addb
lea
jle
push
cvtps2pd
jle
lods
imul
in
dec
jnp
inc
sbb
pop
cmp
pop
iret
jo
jl
out
sbb
pop
in
repz
mov
sahf
stos
sahf
xor
mov
cmpsl
inc
dec
cltd
add
dec
pop
sub
insl
frstor
loope
rorl
push
jp
aad
mov
jne
cmpsl
adc
repz
lods
or
mov
xchg
das
in
stos
es
bound
shl
pop
pushf
fnstsw
xor
stc
test
cmpsl
dec
lods
pushf
jge
push
fistps
js
lea
js
mov
mov
push
imulb
ret
sbb
xlat
push
aaa
xchg
add
inc
repz
mov
xor
aas
enter
jns
dec
data16
jo
outsl
sub
push
lret
fiaddl
add
cmpsb
and
jecxz
in
sbb
pop
mov
and
add
call
into
push
shrl
lea
pop
pop
loope
inc
pushf
cwtl
icebp
int3
pop
inc
and
push
mov
movsl
sbb
push
pop
pop
and
add
out
rcrl
adc
imul
cmp
ljmp
arpl
add
xchg
dec
push
sbb
or
cmp
rorb
arpl
leave
scas
imul
ret
leave
cmp
insb
mov
cli
adc
dec
xchg
sub
loopne
add
movb
ret
sub
ds
sbb
cmpsb
xorb
ja
insb
jb
sbb
mov
call
cmpxchg
ret
jp
mov
push
jp
cmpsl
shr
and
stos
mov
fstps
jne
jecxz
setne
xchg
lods
and
sub
or
test
add
popa
pushf
jmp
add
insl
mov
adcl
xchg
std
mov
mov
popa
popa
cmp
pushf
out
pop
mov
idivl
fisubs
cs
jb
jmp
lret
mov
out
arpl
mov
and
fs
or
fs
pushf
iret
xor
jmp
add
jecxz
fstp
outsl
pop
xor
aam
adc
cmpsl
mov
or
mov
clc
push
rol
ret
andb
js
or
push
add
andl
daa
in
sub
and
out
fs
cld
hlt
aaa
add
mov
shlb
or
pop
outsb
daa
or
xor
loope
mov
mov
pop
mov
inc
push
cmpsl
pop
sub
xlat
xor
enter
nop
pop
mov
fs
sbb
pop
daa
mov
lds
rcr
ret
mov
pop
in
cli
lret
daa
jl
test
sub
inc
out
push
cmp
push
xor
stos
bound
mov
and
je
int3
or
fistl
cmpsl
or
or
mov
cmp
adc
imul
mov
xor
ljmp
shl
xor
mov
ja
cwtl
mov
test
fidivl
xchg
pop
je,pt
in
mov
sti
mov
xchg
jg
cmp
jbe
jl
movsl
fmuls
mov
cmpsl
xchg
inc
out
and
push
loope
cmp
repz
test
sub
lahf
nop
adc
xchg
idivl
stos
in
and
mov
xor
jge
sbb
sbb
jae
sub
cld
jo
addr16
addr16
dec
dec
xchg
push
nop
in
fsubs
sbb
scas
pop
mov
pushf
jne
mov
fiaddl
dec
aam
inc
inc
add
pop
mov
sarl
sti
sbb
or
cmpsb
inc
mov
pop
test
rcr
mov
push
jnp
xor
mov
cld
shrb
mov
pop
ret
insb
lret
xchg
or
lods
mov
cli
push
sub
je
cmp
and
mov
cltd
mov
cmp
pop
jne
daa
add
push
cmp
icebp
mov
out
pusha
mov
jmp
cli
mov
mov
mov
subb
stos
je
or
insl
inc
andb
ja
test
sbb
xchg
icebp
lods
push
jne
xor
pop
ja
test
mov
mov
jl
ljmp
xchg
sbb
aas
dec
fucom
add
add
jnp
jge
insl
shlb
lcall
mov
mov
xchg
imulb
dec
pushf
hlt
jo
add
out
into
inc
testb
cmp
sub
cmp
fwait
dec
dec
jo
jle
imul
scas
popf
or
or
inc
in
mov
imul
ret
adcb
or
sub
pop
sub
and
cld
xchg
popf
inc
or
pop
jae
mov
jmp
mov
fldcw
xchg
movsl
xor
push
push
xlat
inc
cmp
aaa
mov
cmpsl
test
dec
les
test
pop
das
jo
pop
pop
dec
stc
or
xor
js
mov
es
mov
push
fwait
push
pop
cld
gs
push
cltd
mov
inc
pop
push
mov
lcall
pop
dec
in
les
jno
mov
loop
das
cltd
shl
fimull
in
mov
fbstp
dec
push
sbb
mov
jge
mov
cmc
or
scas
jl
jnp
mov
in
xchg
inc
xchg
lods
pusha
aas
popl
push
pop
sub
adc
cmp
add
jno
sub
aaa
rcrl
xchg
sahf
adc
sahf
push
stos
and
cmp
fwait
nop
xor
adc
test
inc
int
hlt
aas
jp
test
out
pop
cld
cmc
movsb
xor
shl
mov
stos
dec
int
fsts
pushf
imul
popf
xor
rorb
shll
push
jmp
dec
and
pop
inc
and
add
and
add
mov
outsb
mov
adc
lock
xor
clc
jnp
mul
inc
xchg
xchg
jge
pop
jl
aas
inc
jne
pop
pop
mov
xor
sbb
add
jl
sbb
out
ss
aaa
and
fsubl
or
loop
inc
xchg
scas
xor
xor
imul
pop
out
add
jo
cs
test
hlt
mov
lret
nop
fs
loopne
mov
icebp
lret
xlat
fs
or
mov
mov
out
into
roll
mov
lcall
imul
jno
lods
cwtl
stos
lods
xorl
movsb
pop
mov
clc
pop
jnp
jmp
mov
mov
pop
push
inc
jg
xor
call
shl
inc
push
cld
adc
movsb
inc
push
jl
gs
or
stos
xchg
fisttps
sbb
jno
xor
pop
das
fsubrs
mov
xchg
dec
cmpsl
adc
sub
jb
push
adc
fadds
inc
and
roll
dec
mov
addr16
mov
inc
mov
push
rorl
inc
adc
add
xlat
loopne
icebp
mov
imul
call
xchg
and
add
mov
add
jne
orb
lea
loop
cmp
sti
jae
popf
vmread
or
mov
aaa
mov
jns
xchg
xor
and
faddp
lahf
pop
mov
insl
mov
or
andl
cmp
stos
stos
jp
adc
stos
jb
repz
mov
xorl
inc
mov
mov
ret
into
std
lods
stos
xor
mov
sbb
loope
pop
mov
pop
sbb
ds
lret
nop
adc
ss
xchg
into
clc
adc
and
jle
sub
leave
ret
popf
popa
mov
je
inc
rclb
adc
xchg
lahf
mov
inc
adc
cmpb
cmp
sub
xor
xor
lret
stos
inc
and
push
push
ret
push
pop
add
xchg
out
jb
mov
lea
outsl
add
push
xor
push
call
andb
fldenv
inc
cmp
xor
adc
push
mov
clc
jb
ret
jp
addr16
pop
adc
sbb
int
xchg
nop
loope
mov
ds
mov
dec
in
sarb
jge
pusha
retw
inc
and
movsl
lods
sub
cmp
xchg
mov
jo
adc
test
or
mov
mov
inc
xor
repnz
sub
in
inc
out
push
inc
imul
xor
dec
pop
xor
cmp
mov
bnd
repz
cmp
out
mov
lret
mov
xchg
xorb
and
add
sbb
and
outsl
add
outsb
mov
pop
dec
outsb
jo
imul
aaa
pusha
xchg
cmpl
cli
mov
sarb
imul
cmpsl
fldenv
cli
jp
mov
shll
push
in
sahf
cld
cmp
out
insb
push
jb
jmp
popa
das
fimuls
imul
mov
xlat
xchg
lret
test
sub
mov
rorb
pop
lods
xchg
dec
push
jge
mov
idivb
in
adc
mov
adc
sbb
or
cli
popa
mov
insl
stos
and
repnz
sbb
inc
inc
adc
nop
imul
xchg
out
cld
call
xchg
pop
dec
lea
mov
lods
mov
shl
jmp
fwait
repz
and
test
enter
test
daa
sub
divb
mov
xchg
repnz
in
mov
adc
fcmovu
aad
jo
out
dec
fldl2e
cmp
inc
mov
push
fdivr
mov
or
mov
jle
push
mov
outsl
sarb
int
mov
leave
aam
add
inc
jecxz
cmpsl
aad
cmpsb
popw
inc
inc
adc
cli
dec
es
mov
push
adc
sub
and
cmp
or
jns
push
xor
inc
fldt
inc
cli
mov
pop
push
inc
mov
nop
xchg
out
and
je
add
dec
xchg
fsqrt
popf
dec
orb
sbb
xchg
or
repnz
aas
popf
andl
jb
loopne
adc
cmp
insb
jle
pop
inc
add
test
icebp
mov
adc
pop
hlt
fs
scas
dec
push
ds
into
dec
cs
fs
ja
xor
cmc
and
cld
and
xchg
jo
je
push
dec
jns
nop
push
das
pminsw
cld
in
insl
scas
pushf
shl
test
popa
out
push
pusha
arpl
xor
dec
cmpsb
xchg
adc
push
loop
jmp
mov
imul
call
xor
dec
outsb
dec
xlat
idivl
xor
add
aam
shlb
mov
inc
add
popa
addr16
adc
sub
or
in
stos
adcb
or
jo
iret
push
ja
and
cmp
nop
ret
jg
pop
sub
jae
xchg
and
mov
cmp
bound
mov
cmp
subl
jne
ja
xor
sti
sarb
rep
nop
sbb
jbe
mov
inc
mov
imul
add
adc
hlt
stc
cmp
mov
sbb
xchg
pop
das
and
mov
mov
jno
push
aad
mov
fwait
mov
xchg
lahf
test
adc
in
test
sub
push
xor
ds
add
push
pop
in
dec
push
out
inc
jo
push
fildl
push
enter
cmp
ror
jle
xchg
rcl
jp
cmp
cld
movsl
out
push
clc
movsb
sub
dec
lret
jge
loop
and
mov
inc
stc
loop
lahf
add
imul
notl
sarb
stc
push
sbb
mov
imull
xchg
movsb
cltd
and
sub
push
mov
mov
jnp
test
ja
in
popf
cli
jns
sbbl
sub
cld
stc
and
ljmp
roll
jle
mov
and
sarl
cmp
mov
or
inc
daa
or
in
outsb
mov
mov
or
movsb
mov
daa
xchg
es
cmp
adc
imul
addl
aad
gs
xchg
inc
jl
adc
jp
sub
decl
test
pop
cmc
inc
lods
and
push
lret
push
into
jl
popa
loope
insb
pusha
aam
ret
testb
popf
jl
mov
pop
jae
inc
js
push
mulb
mov
fistpll
in
je
js
xor
lret
cmp
dec
xor
jg
push
sahf
push
fistpl
mov
outsl
jle
ljmp
jge
or
call
fnstsw
in
sub
pop
lea
js
push
pop
mov
or
call
fnstsw
in
sub
pop
lea
js
push
pop
fsubrs
jge
or
sub
enter
pop
lea
js
cmpb
insl
mov
or
push
ja
in
sub
xchg
inc
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
