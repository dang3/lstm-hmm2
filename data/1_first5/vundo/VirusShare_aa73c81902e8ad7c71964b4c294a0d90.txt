jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
lods
adc
xchg
push
sbb
add
add
push
pop
add
pop
add
add
add
add
sub
roll
out
or
lahf
add
add
gs
add
add
add
add
insl
add
add
add
add
scas
add
mov
mov
in
add
add
add
add
add
cmpsb
add
add
add
lahf
add
add
add
add
in
jno
inc
add
faddl
roll
xchg
repz
dec
add
add
add
add
add
add
add
add
add
add
add
pop
add
nop
add
add
in
jno
inc
add
mov
roll
xchg
repz
add
add
rolb
add
add
add
in
xchg
inc
add
addb
add
add
add
add
add
faddl
xchg
in
xchg
cmp
inc
add
add
add
mov
rolb
xchg
jmp
mov
add
add
add
add
add
add
add
jno
gs
add
xchg
addl
xchg
ret
add
add
add
add
add
add
add
repz
add
push
add
add
add
filds
int3
add
add
add
add
rolb
pop
add
add
add
add
add
add
add
mov
in
push
add
mov
filds
xchg
xchg
insl
add
add
add
add
add
add
filds
cmpsb
add
add
add
add
add
add
test
xor
filds
lahf
add
add
add
add
add
add
add
gs
add
xchg
mov
out
or
js
dec
add
add
add
add
add
add
add
add
add
add
mov
add
loop
add
add
add
add
add
add
add
add
add
add
add
add
add
lahf
add
add
add
add
add
add
add
add
cld
add
add
loope
aaa
add
add
add
add
adc
adc
mov
in
lcall
add
dec
add
in
out
lcall
add
add
add
add
add
add
add
cmp
hlt
add
add
add
add
add
add
add
add
add
add
popl
xchg
hlt
add
add
popl
pop
add
add
add
add
add
add
add
add
add
add
add
xchg
xchg
imul
add
add
add
add
add
add
add
add
lahf
add
add
add
add
add
rolb
add
nop
add
add
insl
add
add
add
xor
add
movsl
add
add
add
out
rolb
add
add
add
add
add
add
add
add
pop
add
cltd
inc
add
fadds
les
inc
sub
push
pop
mov
imul
in
in
fistpl
popa
aas
fistpll
xlat
pushf
xor
ds
jl
addr16
mov
xchg
xchg
cmp
scas
dec
out
mov
fists
adc
inc
call
cs
xchg
movq
in
icebp
fwait
mov
pop
mov
rorl
mov
mov
test
sub
inc
lcall
jnp
sbb
in
in
inc
jle
cmp
push
movsb
add
into
and
sbb
pop
fildl
sub
jno
mov
sub
jno
sbb
cmp
aad
daa
mov
inc
ror
pop
movsw
push
std
roll
addr16
cmp
or
add
js
js
push
jge
rorl
loopne
mov
sahf
mov
out
pop
push
push
mov
add
mov
or
daa
outsl
in
adc
repz
pop
xor
jecxz
mov
loope
int
roll
icebp
inc
mov
lahf
sar
xor
mov
mov
rolb
aam
push
popa
mov
insb
addr16
jbe
xchg
cld
inc
test
and
inc
dec
jp
cmp
dec
in
mov
test
ds
sahf
and
push
jecxz
lea
adc
mov
fsubrl
test
dec
orb
imulb
xor
stc
sub
jnp
lcall
pop
fmuls
aas
dec
cmp
cmp
jne
adc
sub
into
stos
adc
subb
stc
inc
ret
sbb
pop
jp
push
sbb
ret
pop
scas
cmp
jg
sbb
rorl
xchg
inc
mov
cmp
imul
int3
addr16
cltd
in
popl
xor
pop
xchg
xchg
jp
rclb
jecxz
adc
ja
call
add
pop
mov
hlt
out
jecxz
fisubrs
test
pop
or
hlt
add
or
pop
imul
mov
pop
fldl
enter
imul
push
out
mov
test
fdivl
pop
outsb
shr
popf
add
inc
push
inc
mov
inc
xchg
jl
pop
setbe
mov
push
daa
mov
mov
xlat
dec
mov
subl
push
bound
mov
fisttps
rorb
sbb
cwtl
int3
arpl
cmp
add
add
xchg
push
or
jge
sbb
lods
adc
ret
ds
cmp
dec
pop
outsl
add
ljmp
xchg
add
or
dec
cli
xchg
cmp
lret
mov
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
cmp
dec
mov
push
mov
mov
lret
or
sbb
imul
mov
push
sbb
sbb
cmp
pop
sub
cmp
imul
js
dec
mov
mov
jb
add
adc
and
xor
fidivrl
jmp
or
adc
push
push
mov
or
xor
jmp
test
decb
fs
in
add
inc
rcl
std
pop
xor
cmp
push
stc
inc
lds
xor
stos
xchg
adc
inc
dec
mov
and
xchg
jb
inc
or
lret
out
aas
mov
out
outsl
add
mov
test
sbb
sbb
dec
fsubrs
or
sub
pop
inc
push
mov
fildl
lock
xor
inc
inc
es
xor
cmp
cmpsl
das
push
movsl
mov
loopne
nop
xor
xlat
mov
mov
sbb
js
dec
mov
mov
push
sbb
or
cmp
xor
fidivrl
rorb
jecxz
repz
mov
cld
cmp
pop
bts
popf
imul
mov
addr16
jl
sbb
xor
and
xor
and
or
add
enter
jp
push
scas
jo
jge
and
or
ficomps
dec
jmp
mov
or
cmp
sub
fidivrl
lret
sbb
push
mov
mov
push
sbb
or
cmp
sub
fidivrl
lret
sbb
push
mov
mov
push
sub
aaa
out
xchg
mov
and
fstpl
or
jae
nop
pop
rol
jmp
lods
orl
inc
xlat
in
loope
sbb
jge
adc
repz
mov
out
mov
sub
inc
jg
xchg
push
cltd
xchg
icebp
xor
lahf
popf
sahf
andb
test
rcrb
add
push
push
sub
or
dec
pop
js
pop
or
mov
sub
dec
mov
sbb
cmpsl
add
jbe
pop
imul
push
fwait
cmp
mov
sub
out
sti
les
jbe
and
shlb
sti
scas
sub
cmp
inc
cmpsb
jmp
popa
loope
add
jle
pop
cmc
xor
mov
lds
inc
in
xor
sti
arpl
push
scas
sub
and
push
movsl
dec
cs
jg
es
lock
rcrl
leave
dec
add
jne
dec
rorb
test
fldenv
dec
dec
dec
lods
mov
jg
or
out
or
call
mov
into
cld
aaa
cmp
sub
fisubs
js
inc
stos
cmp
test
pop
aaa
lock
aad
and
mov
adc
adcb
inc
or
fs
icebp
fs
loope
dec
lea
mov
push
and
cmp
gs
das
sbb
jns
jnp
out
sub
xchg
cmp
or
sbb
or
push
or
jl
sbbb
xor
shl
add
mov
xor
dec
out
mov
fbld
shlb
dec
imul
pop
pop
bound
cmp
xor
push
xor
inc
jle
xchg
loope
jmp
xchg
sub
push
ret
cwtl
repnz
dec
xorl
ds
pop
or
mov
hlt
pusha
xor
xor
lret
or
xchg
push
xchg
mov
mov
sti
lret
push
int
adc
aaa
jle
and
test
mov
call
adc
movsl
cs
imul
adc
ds
cltd
mov
mov
jo
lcall
cmp
add
pop
movlps
dec
xor
dec
and
sbb
js
imul
js
jo
dec
inc
repz
xor
bound
inc
cmp
popf
dec
xchg
mov
lods
fcmovb
sbb
stos
pop
push
pop
push
fdivrl
inc
inc
cmp
or
lcall
call
stos
push
mull
push
ljmp
mov
dec
pop
sbb
jecxz
shll
std
cmpb
mov
xchg
add
mov
mov
repz
xor
in
ret
mov
cs
dec
xchg
jecxz
loope
cwtl
enter
and
test
push
in
sub
push
jo
sub
roll
mov
pop
test
or
jl
xchg
test
adc
sub
pop
enter
sbb
xor
ficomps
pop
sub
popa
xchg
add
fldcw
stos
pushf
xchg
push
push
fsts
and
lret
jl
jns
xchg
xchg
rcr
aas
lea
and
inc
les
adc
cmpsb
push
pop
out
cli
addr16
add
loope
hlt
ret
arpl
es
loop
in
cld
out
dec
out
aad
sbb
jo
pop
imul
jae
lea
lea
cmp
sub
ss
sub
popa
loop
call
add
shrl
loop
fs
xor
pop
xchg
outsl
mov
je
shrl
mov
arpl
ja
and
mov
into
push
sub
jge
ficompl
rolb
scas
hlt
mov
adc
xor
sbb
mov
mov
ss
adc
scas
decb
ss
leave
jle
push
shlb
mov
jb
sbb
cmpsl
jns
mov
sbb
mov
stos
es
dec
into
lods
repz
push
cmp
xchg
shrb
fwait
push
cmp
mov
or
jmp
pop
push
xchg
addr16
filds
cmpsl
fucomp
rol
xchg
pop
aas
dec
popa
ret
inc
ffree
xchg
out
cmp
adc
addb
in
fisttpll
popa
insl
add
mov
mov
cwtl
lods
lahf
int3
dec
int
sbb
mov
dec
cmpl
mov
cmp
repnz
or
clc
cmp
imulb
addr16
push
popa
rcrl
cli
cmpsl
or
out
leave
sub
jb
sub
jno
mov
jb
in
xchg
xor
push
into
jl
mov
frstor
lret
push
stos
daa
mov
mov
lds
repnz
mov
push
mov
jl
pop
or
xchg
popf
xchg
cltd
lret
outsb
push
popf
mov
sub
inc
outsl
xor
xor
sti
lret
mov
mov
jns
pop
daa
adc
popf
xorb
or
lods
xchg
mov
xchg
insb
adc
adc
fiadds
test
in
outsb
lahf
mov
mov
sarl
xchg
and
sbb
jle
adc
adc
jl
sbb
xchg
inc
inc
mov
push
xchg
jmp
fildl
ficoml
mov
test
sbb
out
stc
adc
jp
sub
aad
dec
jg
dec
or
testb
hlt
arpl
or
sbb
hlt
test
add
test
insb
push
aam
sti
daa
cmp
movsl
stc
enter
cmp
dec
loop
lea
lcall
stos
in
adc
mov
or
dec
inc
push
xor
jmp
outsl
or
sbb
and
and
and
sub
mov
ret
xor
mov
mov
xchg
sbb
sbb
push
out
sbb
shrl
in
cmpsb
pop
mov
sbb
mov
pushf
loopne
scas
sub
push
mov
xchg
fcoms
mov
daa
lds
movsb
mov
mov
insb
inc
stos
stc
in
or
in
inc
or
seta
mov
and
jo
fxch
cltd
mov
and
fsubrs
or
shll
mov
xchg
popa
mov
out
std
test
cmp
jno
jmp
xchg
scas
or
shl
clc
loope
adc
xchg
pusha
xor
add
sarl
pop
stos
lds
loope
cmp
mov
mov
xchg
jmp
jno
pop
or
jmp
jg
dec
imul
std
cmp
popa
inc
insl
int3
pop
xchg
call
std
into
pop
cmc
mov
lahf
push
lret
inc
xchg
mov
iret
imul
shrd
push
mov
cmpsb
inc
imul
subl
faddl
loope
dec
pop
mov
imul
pushf
mov
jp
xor
lret
or
cmp
movsb
into
repnz
xor
cmp
sti
and
jecxz
xor
cmp
sub
nop
insb
sbb
inc
ja
fwait
shlb
pop
aam
mov
lock
aad
or
sbbl
jmp
call
addr16
test
sbb
sub
jmp
out
cmp
pushf
mov
or
mov
push
rcr
inc
or
les
sbb
inc
sbb
xchg
int
sbb
mov
jg
fwait
sub
or
testb
mov
inc
dec
fadd
fldt
stc
or
lock
mull
xchg
iret
ljmp
add
mov
imul
and
and
jle
adc
rcll
aam
rcrb
loopne
andb
mov
imul
sub
push
mov
cld
scas
jnp
lods
and
fdivs
mulb
ja
js
std
and
sbb
pop
pop
sub
jmp
out
in
inc
dec
imul
mov
adc
mov
mov
in
ljmp
xchg
or
stos
and
sub
addl
int
aam
in
incl
stos
andl
mov
scas
dec
shlb
and
or
push
test
scas
or
outsb
mov
cmc
pop
daa
xor
adc
xor
inc
lods
mov
sarb
cmp
sub
xor
je
mov
mov
mov
push
push
in
dec
cltd
lea
sbb
fwait
dec
sbb
jno
jl
mov
xchg
stos
add
adc
call
jno
sbb
mov
mov
std
jae
clc
mov
sub
out
aaa
push
xchg
mov
popa
and
outsl
push
iret
mov
mov
xchg
xchg
pop
push
cmp
rcll
out
cmp
ja
cwtl
mov
sub
cmp
andb
in
nop
mov
adc
push
mov
or
dec
repz
inc
mov
adc
imul
stc
jns
pop
lret
les
cmpl
int
xor
fistl
cltd
adcb
lret
test
or
inc
stos
push
iret
cmp
and
dec
js
lcall
dec
rclb
fcomi
mov
sbb
mov
repnz
pop
push
xchg
push
mov
or
push
push
test
incl
adc
shlb
jne
les
jns
nop
ds
jecxz
negl
cmpb
test
adc
testl
sbb
adc
arpl
adc
lods
dec
in
inc
in
loope
dec
mov
icebp
push
out
call
lcall
sbb
mov
test
jbe
or
scas
pop
mov
mov
pop
std
aam
pop
add
cmp
in
sub
xchg
ffreep
xchg
orb
cmp
movsl
mov
testb
inc
cld
mov
scas
in
dec
jns
or
pop
add
mov
mov
insl
popa
sbb
sbb
mulb
ret
cwtl
scas
rolb
shll
int3
cmpsb
iret
sub
push
fsubl
mov
sbb
ss
sti
add
sbb
outsb
xrelease
push
stc
std
out
imul
lea
add
jg
stc
mov
int
sbb
insb
vpabsd
dec
jo
pop
or
fcomps
inc
xchg
add
sub
cmpsl
mov
out
sub
in
les
loopne
push
mov
rclb
out
xrelease
mov
adc
hlt
mov
dec
outsb
icebp
pusha
mov
or
and
adc
and
iret
into
push
xor
pop
pop
add
push
addr16
sub
cmp
cmp
in
test
cwtl
stc
jl
jp
pop
sbbl
xlat
or
push
shll
xchg
mov
xchg
mov
cwtl
sub
cmp
movb
xor
orb
stos
cmpsl
nop
insb
mov
sub
icebp
mov
test
inc
cld
cmp
xchg
cmpsl
sahf
sbb
cmc
test
add
hlt
xor
pop
xor
inc
mov
call
jp
ja
mov
in
xor
in
lock
rcrb
mov
jnp
cmp
js
icebp
xchg
push
fs
xchg
adc
fidivl
loop
adc
aam
or
inc
imul
push
aas
push
inc
jmp
sub
dec
xor
pop
negl
push
rclb
in
filds
mov
dec
sbb
inc
xchg
int3
cmpl
fs
filds
mov
pop
je
xchg
cmp
fmull
enter
pop
lds
sahf
inc
test
jae
mov
movsl
push
outsb
ljmp
fs
or
cmpsl
inc
jo
out
and
jne
mov
or
pop
adc
jecxz
or
je
mov
incl
sub
add
loopne
xlat
call
mov
mov
fscale
outsl
dec
ja
sahf
mov
mov
pop
insb
push
push
repnz
into
jg
cmp
ss
lods
cmp
push
pop
xor
es
xchg
cli
mov
out
ret
xor
cmp
jbe
jno
add
movsl
shll
loop
shrb
inc
ucomisd
mov
cmp
xlat
push
mov
lahf
pop
int3
push
and
xchg
add
add
and
or
shll
and
mov
mov
data16
js
sub
rcrl
dec
push
push
jb
jne
pop
fbstp
aas
sub
movsl
adc
mov
cli
mov
jb
daa
stos
cmp
push
sbbl
adc
in
ljmp
sbb
nop
sarb
in
leave
dec
out
stc
sub
imul
sbb
insb
movsl
xchg
xor
mov
insb
mov
jmp
mov
bound
dec
leave
fwait
jo
inc
cmpsl
mov
sbb
push
pop
ljmp
pushf
out
and
pushf
sahf
cmp
cltd
pop
jmp
cli
ss
lret
adc
adc
xchg
jecxz
adc
aas
inc
xchg
enter
xchg
cltd
clc
in
data16
in
xor
sti
sub
jnp
push
loopne
insb
dec
scas
aam
loop
sub
mov
add
mov
movsb
test
jbe
push
inc
push
adc
fs
loop
mov
push
fisubrl
test
std
push
pop
imul
jmp
mov
int3
sub
faddl
cmp
dec
fsubl
mov
dec
loopne
std
je
mov
in
push
inc
cmp
aad
add
lea
push
out
xlat
sbb
pop
mov
mov
imul
pop
or
mov
adc
dec
pushf
jnp
outsl
imul
sarb
add
mov
mov
jecxz
pop
outsl
add
pop
aas
fsub
daa
clc
jb
push
push
xor
inc
push
dec
rcr
xor
in
test
jg
sbb
inc
mov
sub
xchg
dec
mov
in
xchg
dec
inc
std
lret
fisubrs
fisubs
xor
rclb
imul
dec
mov
outsl
or
outsl
inc
lret
shrb
xlat
xchg
or
cmpsl
pusha
test
ret
lcall
int
push
lahf
scas
cld
fwait
sbb
inc
fwait
push
and
rclb
pop
int3
test
mov
push
push
push
sub
and
xor
iret
pop
imul
fstpt
mov
sbb
shrl
mull
xchg
das
bound
hlt
jb
push
lcall
out
push
test
stos
cmp
mov
out
add
test
or
iret
lret
xor
shlb
xchg
dec
mov
mov
mov
mov
push
test
cmp
xchg
pop
or
pop
and
mov
adc
dec
addl
mov
lahf
mov
negl
xchg
adc
add
je
hlt
mov
rolb
cld
pop
push
fwait
mov
ret
add
xchg
sbb
cmp
dec
mov
inc
mov
clc
and
mov
dec
mov
scas
loop
pop
mov
push
add
lret
fisttpll
int
addl
pop
cltd
lahf
mov
push
sbbb
push
das
arpl
fstp
lds
std
in
imul
add
aam
std
jge
mov
jbe
pushf
xchg
adc
test
pop
mov
iret
fnstcw
push
hlt
enter
jb
jg
es
inc
xchg
add
adc
negl
cmc
stc
jbe
jo
adc
jo
cwtl
ja
jecxz
mov
ret
sub
lock
push
mov
lock
adcl
xchg
mov
ss
lret
hlt
add
xchg
cli
lea
cmp
cs
ljmp
add
sbb
push
or
pop
cwtl
push
into
or
es
jo
imul
nop
shrb
mov
test
std
jno
push
push
sbb
sahf
sbb
arpl
fldcw
mov
aas
adc
pop
cltd
mov
scas
mov
cmp
mov
pop
out
sub
shll
cmp
or
icebp
jmp
xchg
out
push
xchg
into
subb
out
sahf
jb
pop
ret
add
mov
into
mov
pusha
xchg
iret
jbe
cmpsb
jge
mov
aas
add
stos
add
adc
cltd
jge
cmp
cwtl
sbb
push
add
mov
lock
cmp
push
mov
inc
jbe
sub
sbb
jle
cmpsb
mov
mov
adc
mov
add
fildll
and
push
nop
inc
sub
aaa
stc
xchg
imul
mov
repnz
adc
inc
gs
jl
mov
pop
aaa
mov
ficomps
arpl
mov
popa
xor
test
fs
in
enter
push
xlat
roll
movb
push
dec
mov
ficompl
xor
push
dec
cli
jge
push
lods
xor
and
inc
push
adc
mov
imul
daa
clc
cmp
test
cmp
jp
in
outsl
add
stos
icebp
add
push
fnstsw
dec
je
mov
add
leave
sbb
ja
mov
popf
jno
mov
jg
sub
fld
push
dec
push
push
xchg
push
xor
ds
sbb
lret
inc
inc
dec
pop
push
stos
adc
insl
out
imul
lds
incb
inc
stos
inc
add
daa
addr16
mov
scas
pop
sub
pushf
dec
cwtl
jmp
mov
lea
or
out
push
pusha
stos
xchg
xor
add
mov
pop
pop
aaa
pop
xchg
and
inc
dec
pop
mov
ret
jae
mov
mov
repnz
mov
pop
icebp
push
sar
rolb
mov
or
lcall
loop
or
dec
mov
xor
xor
shr
xchg
xchg
inc
hlt
jp
sub
add
aad
hlt
dec
mov
push
add
cmp
dec
fwait
ja
cmp
xchg
mov
lcall
test
scas
mov
push
sahf
aad
repnz
mov
repz
subl
adc
inc
mov
push
dec
inc
test
xchg
pusha
test
push
pop
int
int3
stc
jno
lods
in
clc
adc
pop
cmpsb
leave
insb
in
loopne
push
pop
movl
dec
out
adc
push
pushf
cs
push
pop
fsubrl
sub
adcl
sub
adc
jb
out
mov
push
mov
cmp
push
movsb
pusha
cmp
sub
ret
stc
xchg
jecxz
fldl
push
lods
mov
imul
in
int
pop
arpl
int3
inc
dec
fbld
test
loope
in
in
outsl
lret
int3
xchg
ss
jg
cld
test
jp
fsub
or
cld
loopw
pop
daa
mov
xchg
rcll
add
push
fxch
cld
cs
cmp
sar
lock
repz
pop
cmpsl
inc
pop
test
or
mov
sbb
xchg
mov
scas
xor
add
mov
inc
mov
and
mov
cmpsl
mov
popf
in
pusha
xchg
mov
nop
pop
leave
das
sub
leave
pop
jne
fistpl
mov
scas
inc
jg
mov
popa
adc
ja
push
mov
call
pop
les
mov
fs
hlt
mov
fiadds
test
push
fdivl
outsb
xchg
mov
ljmp
dec
test
fcomps
dec
cwtl
xchg
in
rcrb
sbb
cmp
cmp
sbb
ret
and
lret
adc
xchg
sbb
add
inc
pushl
xlat
mov
mov
lret
addr16
sbb
pop
lods
bound
and
outsl
mov
pop
repnz
adc
or
mov
scas
lcall
inc
fistps
mov
loopne
add
and
mov
hlt
daa
out
sub
adc
inc
cld
mov
xchg
leave
les
test
and
ficomps
xor
sub
mov
mov
jge
push
in
inc
jne
inc
outsb
mov
ljmp
add
rolb
aad
add
xchg
jns
pushf
cmc
mov
cmp
addr16
outsl
loope
push
jns
sub
test
xchg
std
push
dec
cltd
and
lods
das
add
ljmp
ja
cmp
mov
or
pop
fsubs
iretw
pusha
push
roll
pop
fstl
mov
mov
lods
jns
mov
cmp
mov
sub
sub
dec
dec
push
scas
jno
repnz
rcr
outsb
push
inc
xor
xchg
movsl
clc
loopne
stos
pop
dec
insl
jo,pn
mov
push
dec
pop
sahf
addb
sub
aas
sti
and
dec
pop
scas
psraw
adc
jg
adc
fcmovbe
mov
mov
cmpsl
mov
xor
cmc
and
rcr
loopne
and
inc
or
push
xchg
jge
jns
and
push
add
sahf
arpl
add
fadd
fistpll
aaa
fsub
sbb
jnp
add
add
jnp
inc
pusha
rorl
jp
push
sbb
or
cmp
sub
fidivrl
lret
sbb
push
mov
mov
push
sbb
or
cmp
sub
fidivrl
lret
sbb
push
mov
mov
push
sbb
or
cmp
sub
fidivrl
lret
sbb
push
mov
mov
push
sbb
or
cmp
ljmp
sbb
mov
cmpsl
aad
int3
xchg
cwtl
cmpsl
call
cmpsl
stc
orb
push
daa
pop
aaa
js
or
ja
xchg
xchg
fsubs
mov
cwtl
out
notl
push
pusha
aaa
js
es
sbb
ja
xchg
push
cmpsl
jb
mov
mov
testl
das
pop
xor
sub
pop
into
mov
popf
xchg
or
cmpsl
out
sub
rolb
ljmp
sbb
cmp
in
popf
push
adc
push
add
mov
movsb
stos
xchg
mov
mov
mov
sbb
outsl
mov
or
pop
sbb
pop
dec
jge
fsubrs
xchg
sti
fsubp
add
mov
ret
fcom
in
ss
pushf
test
push
pop
mov
mov
xlat
jne
js
jecxz
int
popl
jl
fcompl
pop
imul
aaa
mov
or
js
scas
daa
loopne
push
sub
push
imul
jl
push
sbb
fistpll
push
pop
les
push
flds
cmpsl
pushf
mov
mov
cwtl
out
imull
pop
dec
pop
lock
push
inc
inc
xor
mulb
ja
ror
mov
test
xchg
stos
sub
mov
inc
or
sub
sbb
dec
ja,pt
pop
and
mov
sahf
negl
mov
mov
adc
dec
and
sbb
mov
mov
mov
idivl
daa
push
push
sbb
ja
xchg
xchg
fsubs
mov
cwtl
out
idivl
daa
push
push
sbb
ja
xchg
xor
sbb
in
aam
jo
sub
scas
xor
xchg
mov
divb
sahf
scas
push
in
shll
insl
mov
out
sub
int3
xchg
and
or
mov
sub
and
push
aam
imull
add
mov
sbb
fs
test
sarl
stos
dec
mov
xor
pop
outsb
sub
or
shll
adc
mov
jns
xchg
sahf
ret
sahf
nop
int
xor
std
jp
jmp
ljmp
loop
sbbb
and
repnz
add
addl
aad
lods
pop
scas
mov
ljmp
iret
andb
lds
mov
sub
imull
xchg
and
mov
lods
fcmovb
and
sbb
sbb
cmp
aas
add
sbb
int
imul
mov
je
int3
xor
jno
dec
jno
mov
pop
xchg
jecxz
mov
insb
popf
pop
xchg
cwtl
mov
and
sub
lea
adc
mov
bound
and
fmul
mov
in
push
mov
mov
scas
aad
fucomp
inc
insb
repnz
sbb
mov
inc
test
and
fldt
mov
dec
divl
cli
movsb
cmpsb
mov
mov
or
in
in
xchg
add
mulb
pushf
cmp
inc
int
mov
enter
mov
add
adc
jl
push
cmpb
mov
ds
xchg
mov
sahf
mov
mov
das
dec
push
nop
cli
jnp
aam
lock
rol
lret
shrl
pop
jl
test
push
cmc
fsubrl
int3
cmc
outsl
xor
repnz
mov
test
out
fwait
dec
xor
lods
daa
daa
push
aad
inc
clc
addb
inc
add
jecxz
xor
push
xor
push
xor
add
fiadds
lock
jle
pop
mov
fcomip
rclb
mov
or
xchg
inc
push
loope
cmp
sti
data16
sub
leave
sub
add
push
sbb
stc
cmp
aas
mov
jle
sbb
test
and
in
les
les
popa
adc
out
cltd
hlt
sub
out
inc
cmpsl
pushf
nop
into
mov
out
jge
or
pop
and
js
xchg
sub
sar
out
mov
je
scas
mov
xor
movsl
inc
cmp
mov
int
pusha
pop
mov
adc
push
cmp
fstp
xchg
shl
sbb
sbb
std
add
jns
and
mov
jo
ja
jbe
lds
leave
insb
sbb
or
mov
sbb
adc
adc
pop
aas
aaa
add
inc
es
mov
adc
adc
cmp
dec
insb
bound
aas
fsubs
in
nop
pop
js
pop
sbb
xor
lret
dec
test
pop
fcompl
cwtl
in
insl
mov
mov
mov
mov
sub
in
jecxz
and
pop
xor
pop
or
push
sahf
jp
jo
or
insb
pop
ljmp
loopne
dec
and
mov
dec
mov
dec
rclb
mov
push
jbe
ljmp
xacquire
cs
mov
inc
ljmp
mov
and
dec
xchg
push
and
cmp
adc
mov
testb
sub
xchg
in
mov
mov
jae
xor
pop
pop
es
dec
lahf
mov
push
mov
ljmp
or
xchg
mov
test
jnp
fisttpll
loopne
shrb
popl
adc
add
or
and
idivl
fimuls
sub
test
rorb
or
add
into
popf
imul
ljmp
call
dec
pop
fnstcw
xor
push
movsb
fiaddl
sbb
stos
xlat
xchg
pop
mov
scas
loop
sarl
or
aas
sbbb
cltd
xor
cmc
sub
sbb
lahf
sti
adc
push
out
xchg
cld
fwait
dec
stos
xor
mov
sub
and
inc
lods
and
mov
mov
ja
cmp
adc
or
and
lock
xor
movsb
sbb
out
xor
adc
push
stc
xor
fwait
cli
call
and
jbe
mov
fisttpll
add
shl
pop
stc
mov
xchg
mov
xchg
sbb
jne
sub
mov
push
scas
add
sbb
xchg
add
mov
add
enter
call
inc
dec
push
push
dec
icebp
scas
fwait
and
mov
inc
add
fcmovbe
or
cs
sub
mov
jmp
mov
adc
popa
int
mov
lock
pusha
mov
cmc
loop
add
pop
insl
fs
dec
cmp
addr16
jl
jl
xchg
mov
add
adc
dec
mov
xor
pop
sti
fiadds
sub
push
out
pop
rorl
ljmp
lods
mov
pushl
pop
ljmp
mov
xor
xor
clc
xchg
mov
loope
cltd
pop
fld
sbb
aas
std
cwtl
mov
push
fisubl
fisttpl
pop
sbb
das
insb
in
xchg
fistpll
cmp
lret
or
or
dec
add
out
add
dec
repnz
mov
jb
inc
cli
fwait
gs
int3
mov
gs
and
loopne
aam
adc
sbb
push
iret
lea
cld
push
lods
sub
jmp
dec
add
xchg
jb
sbb
je
sbb
out
cmp
fldcw
push
push
pop
cmpl
push
sarb
jno
aad
pop
lcall
mov
mov
add
mov
cmp
insl
jns
hlt
cmc
icebp
movl
pop
dec
out
ds
xchg
xlat
pop
sbb
testb
dec
sub
xchg
adc
xor
lock
pop
jnp
loope
push
pop
xor
cmpsl
xor
test
add
loope
mov
dec
pop
push
xchg
in
mov
adc
pop
cwtl
sbb
mov
rclb
pushf
mov
sub
push
xor
mov
jecxz
pop
out
xchg
notl
fcoml
pop
pop
and
xchg
and
ret
mov
mov
xor
das
adc
cmp
pop
mov
cwtl
jns
cmp
mov
push
sbb
das
xchg
jecxz
test
mov
mov
jp
pop
subb
out
int3
enter
fistl
pop
test
inc
movsl
push
movsb
add
jno
dec
shll
and
fyl2x
je
mov
push
sbb
sub
adc
pop
sbb
mov
mov
push
movsl
xor
fcmovu
xchg
pushf
mov
shlb
cmp
inc
cmp
mov
dec
insb
pop
or
cltd
jno
insl
pop
jp
fstps
xchg
and
inc
and
sbb
das
mov
sbb
mov
add
lock
bnd
shl
ret
cmp
jno
cmp
rorl
sub
pushf
sub
sub
inc
jae
sub
and
mov
cmpsb
push
or
sub
cmc
and
call
lea
or
and
bound
ds
sbb
push
dec
jb
sbb
out
inc
jne
xchg
mov
push
out
sub
push
rolb
es
add
in
outsb
inc
xor
cmp
je
imul
adc
xchg
imul
xchg
sub
sbb
aaa
mov
or
mov
pop
xchg
aas
pop
pushf
fldt
in
es
add
in
dec
jl
lds
mov
test
mov
mov
mov
push
inc
call
daa
pop
jo
sub
lcall
pusha
mov
in
rorl
mov
xor
ljmp
jl
add
int3
jno
xchg
arpl
mov
push
out
jb
js
xchg
mov
out
sub
sbb
imul
pop
xchg
es
fmull
mov
scas
into
mov
in
add
push
leave
mov
stos
dec
data16
pop
scas
add
sub
arpl
in
iret
mov
pop
lods
jno
jo
std
inc
aam
cmpsl
jo
inc
fwait
sub
lcall
rdtsc
mov
xorb
or
sbb
or
push
into
xor
cmp
xchg
mov
cmp
inc
cmpb
cli
in
adc
and
or
cmc
mov
fs
cmp
add
test
cmp
jns
xor
and
jbe
movsb
pop
inc
sti
and
push
sbb
shl
inc
stc
mov
pop
xor
fsts
or
dec
in
push
and
shll
hlt
jle
and
mov
clc
push
ja
xor
mov
adcl
stos
xor
sbb
add
rorl
adc
dec
insb
repz
cmp
mov
cmpsb
push
mov
dec
mov
mov
xchg
sub
mull
jecxz
out
stos
mov
test
mov
sub
cmp
test
mov
in
leave
aad
xor
cmp
xchg
rclb
mov
inc
mov
aad
pop
xorl
sub
sub
xchg
mov
ja
adc
sbb
push
repz
ljmp
mov
cmp
dec
into
into
xchg
jmp
adc
xor
sbb
fs
inc
cmp
daa
pop
scas
jl
adc
faddl
mov
int3
outsb
and
idiv
pop
out
ja
xor
or
enter
mov
xchg
jge
lahf
xor
jnp
xor
out
push
sub
jmp
push
repz
test
ret
dec
fnstsw
mov
nop
push
sbb
inc
xchg
add
and
xor
stc
dec
cmc
es
repnz
andb
int
push
ljmp
mov
sub
stos
mov
mov
adc
fcoml
lahf
sbb
js
std
xchg
xchg
xor
daa
idivb
bnd
fcom
sahf
fwait
dec
arpl
or
pop
imul
mov
rcl
inc
int
mov
out
aaa
xor
ss
jmp
imul
outsl
in
push
push
addr16
out
pop
pop
jg
push
sbb
lock
dec
adc
ret
and
xchg
shll
jp
inc
adc
jne
inc
leave
int3
mov
imul
stos
aam
pop
mov
dec
cmp
push
sub
pop
test
arpl
mov
in
pop
cmpsl
rclb
and
dec
ss
loopne
add
xchg
std
scas
inc
es
enter
jne
aas
lds
xor
movsb
js
fwait
add
out
dec
cmp
mov
mov
ljmp
aad
out
sub
out
pop
mov
sbb
inc
lock
or
aaa
jecxz
ret
mov
push
lock
and
xchg
shll
add
mov
imul
xor
ret
xor
out
sub
cmp
mov
push
mov
roll
scas
movsb
rcll
add
js
sbb
push
fisubrl
pop
cmc
jo
int3
ljmp
stc
arpl
cmp
fstl
fmull
or
xlat
mov
mov
lret
gs
movsb
hlt
inc
fldt
pop
mov
mov
mov
fldcw
enter
and
add
push
cmp
outsb
adc
cwtl
and
testb
sub
fstl
jb
cmp
xlat
pushf
or
push
inc
pop
nop
lret
and
inc
add
jge
fnstenv
jmp
enter
jne
es
lcall
mov
repz
cmp
add
inc
dec
xchg
outsb
std
test
cs
push
and
lea
mov
adc
out
andl
jo,pn
shrb
push
in
ds
adc
dec
sbb
dec
pushf
fwait
add
and
jns
dec
lret
and
dec
push
adc
in
jl
pop
cmpl
xor
popa
decl
push
sub
mov
lret
inc
mov
push
adcl
mov
pop
cmp
in
xchg
jge
sar
outsb
lret
jo
jg
fldenv
inc
pop
popf
mov
dec
mov
call
add
mov
out
clc
imul
jl
fldenv
push
ljmp
mov
ror
scas
add
inc
pop
scas
or
dec
add
outsb
push
adc
jo
pop
mov
cmp
mov
loopne
repnz
cmp
push
ret
and
mov
lcall
cmpsl
adc
ja
daa
into
push
adc
lret
jb
adc
fs
mov
pushf
xchg
je
addb
je
mov
add
push
and
int
repnz
cmpsl
leave
into
sub
pusha
fcoml
lahf
cli
push
rorb
and
pop
jno
mov
or
inc
imul
and
sub
pop
adc
fxch
hlt
out
adc
cmp
scas
and
pop
mov
sub
sahf
arpl
and
jmp
cmp
ss
inc
jnp
out
pop
leave
testl
cmpsb
cs
int3
test
pop
or
add
movsb
ja
test
inc
dec
sarb
lods
dec
ret
outsb
lahf
xchg
xchg
enter
mov
push
adc
sub
insb
jbe
jmp
sar
sti
cmpsb
sub
inc
andl
jb
xchg
popf
scas
jae
mov
repz
test
pop
fdiv
inc
xchg
mov
insb
xchg
push
in
push
mov
sbbl
pop
pop
int3
int
cld
lahf
in
dec
rorl
cmp
xlat
js
and
jno
or
ret
loopne
xchg
dec
stos
dec
xchg
push
mov
sub
cmpb
test
mov
scas
out
adc
fucomip
sahf
cmp
popf
adc
lahf
ret
sub
in
jmp
cmpsb
pop
shlb
adc
xchg
fists
dec
nop
stc
enter
sub
sbb
jo
add
daa
ret
cmpsb
jecxz
lods
pop
pop
jmp
repnz
mov
mov
cmpsb
push
mov
push
cmp
xlat
imul
xchg
inc
idivl
jae
dec
xchg
f2xm1
or
mov
js
pop
shll
in
cmp
lods
clc
add
cld
and
sub
and
movl
fldcw
outsb
stos
push
xor
push
in
imul
js
jl
addr16
jp
pushf
out
xor
adc
out
mov
mov
dec
push
lahf
or
jmp
mov
int3
jns
pusha
rcrl
mov
je
pop
ss
sub
dec
inc
enter
push
adc
cmp
cmp
popf
das
shll
loop
les
repnz
in
cmp
outsl
out
and
cmc
and
xlat
popf
xchg
icebp
loope
ret
cld
mov
add
jb
jg
pushf
cmp
sbb
aad
xchg
xchg
add
jne
scas
mov
subb
jno
ret
xchg
lea
sbb
cmc
xchg
shll
adc
mov
push
repz
add
popa
stos
pop
std
or
lcall
cmp
or
sub
jle
cmp
pusha
shlb
adc
jl
cmp
or
aad
jecxz
aam
cwtl
pop
cltd
popa
pop
fnstenv
sti
pop
int
add
pop
cltd
mov
xor
mov
push
ljmp
lahf
mov
icebp
pop
jl
push
jbe
dec
add
fists
ror
xor
and
adc
mov
or
jg
jmp
sbb
mov
sub
mov
movsl
test
jne
mov
movsb
mov
ret
testb
xchg
jbe
ja
and
mov
adc
jmp
rcr
jno
ss
and
add
pop
stos
aaa
aam
cs
mov
cld
xor
fs
jnp
sti
sahf
data16
les
outsb
sbb
aaa
or
jb
aaa
mov
lods
out
dec
add
lret
mov
cmp
dec
lods
fs
out
data16
out
push
jb
out
out
dec
jbe
iret
mov
and
xchg
xor
jne
imul
ficoml
cmp
stos
out
sub
mov
daa
jbe
push
addr16
or
mov
into
rcr
xor
cltd
fs
sub
xchg
adc
scas
aaa
mov
out
sub
add
lret
push
inc
stc
dec
popa
pop
xchg
or
shl
inc
arpl
mov
std
mov
sbb
stos
adc
daa
push
sbb
dec
lods
dec
repz
and
inc
pop
test
xlat
jl
gs
sbb
sbb
nop
js
fcomi
push
test
scas
lock
int3
xchg
add
xchg
loop
popf
pop
outsl
xor
outsl
shlb
cli
imull
dec
aad
mov
loopne
jnp
jb
add
popf
sbb
andl
mov
push
jnp
jnp
aam
xchg
sahf
or
hlt
jno
popl
out
out
cmp
and
imul
add
jge
adc
mov
mov
mov
xchg
pusha
jp
in
jmp
add
sub
sbb
mov
push
insb
mov
mov
fsubrl
outsl
popa
cmp
inc
pop
mov
cmp
cmp
out
cmp
ret
push
test
lods
sahf
fsubs
arpl
lods
xor
mov
andb
and
pop
push
aam
mov
test
mov
mov
cmp
add
inc
mov
sbb
ret
leave
scas
push
sarb
aas
rcrl
es
or
jl
jg
dec
es
out
jmp
or
test
cmp
leave
jecxz
xor
mov
mov
popf
or
mov
roll
xor
imul
push
mov
and
or
out
inc
pop
jl
repz
out
shrb
jmp
dec
jmp
std
inc
sti
mov
cwtl
cmpsl
pop
mov
pop
lahf
ljmp
cmp
mov
inc
dec
push
lds
aam
or
repnz
sarb
dec
jb
test
lret
cmp
push
movsb
jne
xlat
out
mov
std
cmp
and
sub
sbb
sub
in
push
daa
sbb
mov
jno
jecxz
inc
adc
sub
dec
adc
popf
jno
jns
cmc
int3
outsb
xchg
mov
xor
fdivl
shlb
cwtl
xchg
sub
stos
cwtl
outsl
push
sbb
inc
xchg
mov
inc
mov
inc
jl
inc
push
lods
sti
dec
testl
fisttpll
test
fbstp
mulb
adc
inc
inc
sub
mov
pop
daa
xchg
jns
mov
ds
imulb
int
test
pusha
inc
and
xchg
adc
dec
loopne
mov
cwtl
pop
sbb
or
mov
fucomp
lret
fwait
dec
or
push
dec
adc
xor
inc
jge
rcl
inc
mov
in
cmpsb
test
sub
jp
sub
clc
push
out
imul
call
pusha
mov
cld
sahf
idivb
sbb
or
sub
mov
and
mov
fistps
and
iret
or
xchg
aam
ljmp
sub
cmp
jle
mov
cld
cld
sahf
and
rcr
call
clc
jle
lea
mov
or
jno
enter
negl
sub
xor
addr16
lods
adc
vsqrtps
lods
sub
cmpsl
sti
nop
sar
pusha
icebp
dec
test
push
insl
mov
adc
mov
in
mov
jno
dec
rcrb
loop
mov
add
insl
hlt
xchg
jecxz
xchg
pop
out
dec
leave
gs
pop
jle
push
insl
mov
call
ljmp
cs
pop
mov
inc
or
pop
sub
xor
push
imul
mov
shll
mov
jne
sarb
or
add
jns
icebp
js
ret
adc
frstor
cmp
test
mov
xchg
jmp
mov
inc
mov
sbb
jno
push
imull
xor
jbe
push
xchg
subl
movb
mov
clc
push
ret
notl
mov
xor
mov
test
push
sub
call
pop
sti
cs
outsl
push
aam
adc
sub
out
out
xchg
insl
push
dec
mov
movl
mov
cwtl
out
idivl
daa
push
push
sbb
ja
xchg
xchg
fsubs
mov
cwtl
out
idivl
daa
push
push
sbb
ja
xchg
xchg
cmpsl
lock
mov
repz
idivl
daa
push
push
sbb
ja
xchg
cmp
or
mov
out
idivl
mov
repnz
wrmsr
jo
pusha
cwtl
push
mov
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
loope
add
mov
pushf
or
das
xchg
add
jl
cmp
or
sbb
imul
pop
lret
movsb
cmp
in
jnp
imul
fmull
mov
sbb
insb
sti
sbb
dec
fistpl
cmp
or
pop
or
jnp
imul
and
sub
push
imull
jge
dec
test
das
lret
in
cmp
addr16
fildll
add
cmp
or
add
or
xchg
out
pop
inc
test
ror
fwait
testl
cld
lods
std
mov
sbb
fs
loopne
pop
in
insb
jnp
push
repz
loop
xchg
sti
icebp
fdivrs
les
icebp
sbb
pop
in
jp
jnp
mov
sbb
mov
sbb
jecxz
loope
jle
pop
and
inc
xlat
jae
pop
notb
jnp
xchg
mov
stos
repz
mov
sbb
sub
jae
cmp
mov
push
aam
les
jmp
into
dec
lret
lahf
cmp
in
jnp
imul
fs
fidivrs
add
dec
fstpt
ficoms
clc
enter
adcb
fistpll
mov
ret
jge
add
pop
sbb
lret
sbb
test
popf
inc
mov
jge
imul
sbb
imul
test
pop
fmull
mov
sbb
insb
sti
jl
dec
fistpl
cmp
in
jnp
imul
fmull
mov
sbb
insb
sti
jl
dec
fistpl
cmp
and
ret
fisubl
ret
loopne
faddp
mov
addb
add
inc
sbb
inc
sbb
cmp
aam
imul
add
imul
mov
cmpsb
or
mov
cmpsl
and
fistpll
repnz
fs
cmp
pop
push
push
in
xchg
mov
insb
sub
out
inc
or
js
cmp
repz
outsl
xor
cs
push
fwait
addl
ds
out
mov
mov
das
and
cmpsb
test
movsb
xchg
scas
jae
push
in
fwait
add
pop
in
push
mov
pusha
add
test
pop
push
jb
dec
cmp
dec
call
mov
jmp
aam
mov
xor
in
push
mov
lret
fs
mov
dec
jmp
sub
sub
pusha
test
aam
pop
jnp
lret
lret
or
push
in
sbb
inc
movups
and
in
and
sbb
je
adc
mov
arpl
pop
repnz
or
into
lahf
mov
in
imulb
fwait
inc
jp
inc
popf
xorb
mov
fwait
cs
arpl
rcl
gs
aad
jp
cmp
inc
into
xchg
repnz
std
mov
adc
sub
cmp
insb
pop
icebp
mov
sub
iret
lret
ja
lods
sarl
aam
test
mov
dec
dec
lods
hlt
cwtl
xor
pushf
pop
daa
outsl
sub
inc
xor
push
in
test
fildll
cmp
out
xor
sub
xor
out
push
dec
btrl
aam
push
popf
adc
insb
xchg
fcoml
stos
jge
jl
add
jg
mov
xchg
jg
fldl
mov
std
push
jbe
lock
mov
mov
xchg
mov
mov
or
pop
aad
das
xchg
test
sub
mov
je
test
bound
xor
sub
jns
mov
sub
scas
add
call
adc
xchg
mov
add
dec
mov
dec
in
push
push
sbb
ss
ja
xor
gs
sub
jnp
inc
popf
dec
or
call
nop
xor
pop
cmpsl
push
inc
and
mov
insl
cmc
icebp
addr16
sti
subl
scas
inc
fst
and
movsb
lahf
popf
inc
pop
mov
pop
shll
out
and
sub
mov
test
shll
js
subl
lcall
mov
mov
mov
adcl
faddp
inc
or
pop
scas
pusha
sbb
cmp
int3
sti
cmp
das
mov
sbb
ds
pop
iret
mov
into
add
adc
or
xchg
mov
testl
out
xor
stos
sbb
inc
clc
in
sbb
test
jle
mov
xor
xchg
mov
add
sub
sub
ja
cwtl
add
add
mov
clc
or
jge
stos
jp
movsb
add
pop
add
imul
jle
mov
shll
cmp
pop
dec
sbb
mov
mov
push
pop
fadds
aaa
mov
or
daa
push
ja
mov
clc
insl
arpl
ljmp
sub
dec
stos
jl
loopne
dec
movsl
lea
sahf
cltd
dec
icebp
xchg
das
add
je
inc
xlat
nop
mov
data16
fcompl
int
push
lock
divb
das
xchg
sbb
cltd
xchg
xchg
pop
and
inc
xor
pop
jmp
jecxz
push
cs
push
inc
jnp
jecxz
cmp
pop
mov
xchg
leave
xor
lods
movsb
or
xchg
loop
pop
call
test
pop
dec
adc
mov
or
inc
mov
gs
das
xor
or
cmp
test
test
icebp
inc
mov
and
dec
mov
ret
mov
add
popf
test
push
sub
xchg
and
lea
mov
stc
xorl
leave
in
jo
xor
mov
mov
bound
dec
push
jge
testl
adc
bnd
xchg
cmc
push
xchg
imul
push
push
sbb
jnp
push
jecxz
inc
lret
mov
daa
xchg
xchg
fisttpll
mov
push
lahf
or
addr16
loopne
cmp
jae
sub
push
xchg
inc
fwait
ror
mov
out
mov
iret
inc
inc
sub
ss
mov
push
and
negb
inc
lret
in
mov
mov
jns
cmp
bound
xchg
cs
xor
filds
lret
inc
clc
mov
lds
jecxz
iret
rorl
mov
out
jg
popa
mov
aas
lea
out
mov
mov
nop
std
jo
lods
cmp
mov
clc
out
add
adc
stos
jbe
add
mov
adc
das
xor
and
mov
push
push
inc
inc
loope
xorb
ds
je
xchg
adc
in
sti
mov
xor
xchg
dec
adc
dec
js
and
xor
imul
push
gs
shll
mov
jae
cli
pop
inc
or
ret
mov
xchg
inc
xchg
mov
loope
or
jb
bound
outsl
mov
xchg
aaa
sub
je
dec
shlb
stos
xor
dec
or
mov
mov
pusha
frstor
repz
nop
push
test
xchg
pop
fwait
push
xor
jo
cs
and
js
mov
fildll
xor
dec
pop
jle
je
mov
sub
or
dec
fwait
addr16
cmp
test
xor
sbb
sbb
and
ffree
enter
call
int3
out
cmc
ret
xor
mov
push
jmp
or
or
xchg
jns
sbb
shrb
in
popf
mov
mov
push
cmp
les
mov
xor
xor
xchg
es
pop
les
push
add
lret
jge
loop
out
dec
xchg
movsl
add
sbb
loop
push
or
mov
mov
pushf
mov
push
test
mov
push
js
xor
repnz
and
dec
mov
add
dec
sbb
mov
or
mov
loope
popf
mov
lret
adc
xchg
and
xorl
or
in
push
sbb
fwait
or
dec
sbb
or
lods
xchg
xchg
mov
js
jns
aas
out
mov
push
ljmp
sub
push
scas
mov
dec
mov
or
mov
jbe
mov
je
or
sbbb
clc
mov
adc
push
mov
data16
ljmp
pushf
add
jecxz
mov
dec
mov
test
fistl
jnp
out
mov
or
data16
paddsw
xor
pusha
dec
add
cld
shrl
mov
cmp
sti
lret
cld
and
out
mov
xor
pushf
xchg
xchg
mov
push
cs
data16
cmp
fsubrl
xlat
sub
sarl
ds
mov
nop
mov
cmp
jae
loop
adc
jl
cmpsl
pop
cmp
int
inc
mov
incb
mov
scas
jmp
cmp
je
jl
lock
inc
cwtl
push
add
out
test
jle
pop
outsb
fcompl
mov
mov
out
pop
popa
ds
aad
mov
out
mov
subl
adc
movsb
xchg
jne
enter
pop
sbb
lds
aam
xor
and
rcrb
push
mov
call
sub
push
cmp
inc
dec
mov
cld
pop
jg
lret
leave
lahf
pop
xor
jnp
xchg
insl
sbb
jno
xchg
imul
sahf
mov
insb
dec
test
and
add
dec
sbb
and
addr16
jmp
lret
jb
jno
loope
sub
jb
or
xchg
xchg
loope
addl
mov
test
xor
xchg
call
repnz
jle
push
lods
jne
push
inc
sub
mov
sahf
jmp
in
jge
fistl
push
cmpsb
xchg
jnp
and
adc
xchg
add
cld
dec
sub
data16
data16
gs
fildll
inc
sub
pusha
jnp
popa
xlat
mov
or
lods
stos
or
and
dec
cmp
xor
nop
sub
nop
leave
jge
sahf
xor
dec
jnp
and
cmp
ret
adc
inc
int3
inc
adc
dec
push
or
js
jp
nop
cmpsb
mov
fldl
sub
ror
pop
jl
insb
repz
fstpl
mov
cmc
pop
mov
pop
sub
rcr
mov
xchg
jmp
cltd
lcall
xchg
ss
pop
xor
push
sbb
out
jle
jecxz
inc
lcall
push
ret
sbb
ss
cmp
ret
push
fiadds
jno
rorb
sbb
mov
inc
fs
push
mov
insl
pop
cmpsb
clc
mov
inc
xor
movl
repnz
iret
pop
js
mov
mov
in
imul
mov
outsl
and
inc
sahf
inc
testl
sub
jns
lods
pop
add
jb
dec
mov
out
jns
lods
mov
imull
mov
mov
in
xlat
xor
fcoms
sub
out
leave
mov
outsb
repnz
mov
pop
enter
pop
sub
mov
sub
lcall
lods
sti
or
push
mov
cltd
rorb
cs
repnz
stc
loope
xchg
sub
call
xchg
cmp
sahf
or
xor
xchg
mov
int3
imul
jbe
sti
mov
mov
scas
or
mov
xor
sbb
test
mov
repz
sbb
add
inc
imul
lret
lcall
sbb
inc
bound
mov
fdivl
dec
inc
mov
lock
and
sbb
pop
pop
push
adcb
cmpsb
xchg
mov
nop
int
jg
dec
xchg
mov
xchg
test
xchg
lods
sbb
shrl
outsb
scas
cltd
pusha
adc
mov
ss
imul
dec
lret
jmp
mov
call
push
incb
mov
adc
aad
jae
dec
dec
jne
in
lea
in
push
ss
stc
and
adc
push
pusha
pusha
xor
jnp
xchg
xor
es
pop
jl
mov
adc
sbb
adc
mov
scas
ret
mov
outsl
cmp
sbb
xor
adc
call
dec
sti
lods
inc
shrl
scas
fnsave
sbb
daa
gs
test
mov
and
dec
mov
mov
xor
das
jmp
xchg
push
data16
cmp
push
fdivrs
lock
adc
mov
or
lods
ret
lret
popa
stos
aaa
inc
lds
jmp
inc
jns
lock
mov
repz
xchg
roll
dec
xchg
ljmp
inc
movsl
ret
mov
fwait
xor
rol
inc
dec
jmp
jb
xor
and
fstps
ret
test
jle
ljmp
mov
xlat
lret
sbb
jecxz
pop
outsl
mov
mov
lcall
testl
jns
ret
call
sub
mov
loop
fnstsw
lods
enter
cmp
or
jae
xchg
mov
loope
push
sub
jo
test
xchg
pop
orl
jns
adc
push
cmp
mov
scas
mov
ud0
adc
popa
mov
jp
xor
rcrl
push
in
xchg
pop
adc
stos
nop
sbb
mov
mov
fdivrl
fdivrs
loopne
dec
or
xor
cltd
outsb
and
lock
or
fs
outsl
fnstcw
push
dec
js
faddp
or
push
fsubrs
inc
cmpsl
mov
jnp
jge
cmp
sbb
or
test
insl
pop
cmpl
adc
push
cli
loope
push
popa
ret
int3
movsl
or
fwait
loop
cmp
int3
mov
dec
jp
and
mov
cmc
mov
in
push
push
push
cmp
mov
out
mov
and
jnp
jp
inc
cmp
je
fimuls
mov
test
xchg
xchg
pop
in
or
pop
cmp
pop
cwtl
scas
pop
dec
xor
std
jl
sbb
or
lea
push
cmp
test
stc
lods
das
fdivl
pop
outsl
jle
add
and
or
mov
jne
jnp
push
jg
cld
in
adc
call
and
inc
add
inc
in
sub
xchg
xchg
in
jmp
je
scas
jno
jno
or
iret
lock
or
mov
enter
cltd
iret
sbb
mov
imull
adc
insl
lcall
imul
push
or
cmp
sub
repz
shll
and
push
xchg
or
and
jb
push
sub
mov
jmp
dec
pop
int3
sub
dec
stos
dec
dec
pop
std
or
pop
sbb
and
mov
and
int
add
adc
pop
fsubrs
pop
stc
cltd
daa
jle
insl
xor
jo
lods
daa
mov
out
in
mov
sbb
xchg
dec
movsb
jg
iret
fstl
aam
inc
fisubs
mov
push
js
push
filds
cli
mov
add
add
cltd
imul
test
dec
cmp
aam
sbb
scas
int3
sub
insb
mov
adc
mov
hlt
shl
xchg
fld
mov
sbb
dec
xlat
adc
outsl
call
adc
jecxz
inc
repz
cmp
push
cmp
dec
dec
fs
dec
adc
xlat
call
lods
cwtl
push
adc
orb
dec
scas
sub
repz
aam
decl
fld
stc
out
add
mov
push
mov
mov
ret
adc
or
mov
add
jo
pop
ret
inc
add
dec
add
fwait
xorl
test
dec
sbb
notb
or
jbe
jecxz
repnz
mov
mov
pusha
xor
inc
fdivrs
pop
ds
and
out
cli
ja
dec
leave
xor
inc
bound
ret
mov
jo
pop
mov
xchg
and
cltd
fnstcw
mov
mov
push
in
add
ljmp
lret
jp
xor
xchg
clc
sbb
orb
xlat
mov
add
add
cmpsl
mov
jb
or
sbb
cmpsl
ficoms
mov
mov
lcall
aas
cltd
mov
pusha
loope
sti
movsb
inc
mov
test
iret
leave
add
outsb
aas
mov
or
add
fwait
xlat
mov
movsb
mov
sbb
pop
loop
popf
cwtl
xchg
xor
das
mov
ret
adc
dec
icebp
rcrb
jnp
dec
loope
sbb
mov
mov
ljmp
fists
fwait
rcr
fdivrs
pop
pop
data16
push
hlt
in
mov
leave
mov
adc
add
sbb
push
out
jmp
xor
mov
cmp
xchg
dec
cmpl
jnp
jbe
andl
xor
xchg
jl
jmp
aam
xchg
fistps
mov
mov
cmp
mov
xor
dec
mov
and
dec
sbb
les
test
and
jmp
jnp
mov
rcrb
lahf
daa
scas
mov
push
subb
sub
scas
xor
nop
je
enter
loop
mov
sbb
pop
sbb
jp
xchg
in
jg
jle
fldl
push
mov
in
cwtl
mov
setge
dec
jne
mov
ret
lods
jo
push
push
mov
lds
dec
rcrl
add
shl
pop
clc
mov
jb
xchg
pop
mov
fcmovnbe
adc
dec
std
jbe
inc
test
rcr
or
bound
test
cmp
decb
les
in
push
or
clc
movsb
ret
cs
loopne
and
fs
xchg
pop
cwtl
sbb
mov
ret
pop
into
icebp
cmp
dec
fcmovnbe
test
arpl
and
xor
push
aad
sbb
jo
and
fstl
shll
js
jb
push
in
jmp
adc
inc
cs
sub
movsl
pop
in
dec
stc
jl
adc
in
test
test
ss
mov
jecxz
jle
mov
stc
clc
es
lods
fwait
lcall
dec
jne
sbb
xorb
sbb
adc
mov
shl
xchg
cmp
loop
sbb
jno
cli
jns
in
ret
inc
and
repz
scas
xchg
fsubrp
dec
test
xorb
adc
insb
and
dec
or
shr
xchg
inc
jne
call
mov
xchg
mov
xlat
adc
sub
aas
jecxz
and
scas
out
sbb
sub
aad
fnstenv
stos
dec
dec
xor
xchg
jae
insl
pop
mov
icebp
xchg
push
out
fstl
inc
mov
rorb
add
cmp
jo
pop
dec
xchg
mov
enter
sbb
pop
call
stos
cmp
xor
pop
sbb
xchg
cs
adc
inc
fsubr
dec
add
cltd
psrld
push
sbb
outsl
scas
es
decl
scas
mov
in
stc
test
bound
std
adc
fwait
lock
push
fimuls
outsl
cmp
adc
mov
adcb
lock
arpl
inc
jno
jae
mov
lcall
or
shlb
je
mov
lds
inc
repnz
outsb
fcomip
xor
loopne
arpl
xor
test
cmpsl
daa
xchg
jp
or
hlt
and
rclb
fistps
push
cltd
adc
adc
sar
shr
sbb
add
idivl
fwait
shrl
jge
jb
rclb
add
repz
jecxz
push
js
js
mov
adc
nop
mov
imul
cmp
in
addr16
btr
jge
mov
push
jle
pop
push
push
sbb
push
pop
fwait
clc
lret
dec
adc
popa
ret
adc
mov
ljmp
mov
mov
dec
dec
pop
xor
jg
xor
rorb
pop
mov
mov
and
mov
cmp
jno
push
xchg
aas
negb
out
outsb
push
dec
lods
lods
fimuls
data16
rcrl
pop
jl
arpl
push
jl
aad
add
mov
les
orl
inc
or
out
lahf
jne
movb
popa
rcrl
dec
and
mov
ret
add
mov
adcb
or
repz
xor
movsb
or
pop
dec
cmc
into
dec
insl
stos
mov
movsl
ret
fsubrs
addr16
call
dec
add
add
test
imul
mov
lods
mov
imul
xchg
clc
mov
test
js
dec
dec
in
xorl
sub
add
stos
xchg
sahf
lods
dec
mov
adc
push
cmp
in
test
fs
xchg
push
sub
jb
ss
std
cmp
mov
sub
adc
icebp
jge
jmp
lret
into
inc
mov
mov
out
xchg
xor
je
lret
ret
fldl
clc
jbe
data16
dec
push
fwait
imul
pop
icebp
xchg
ror
sbb
jmp
sbb
pop
add
push
cmp
loopne
movsl
ljmp
dec
xor
leave
test
outsb
loop
hlt
pop
jecxz
xlat
xor
ror
mov
aas
fnstsw
push
jns
les
loope
lds
and
pop
mov
scas
xchg
stos
enter
cld
jae
rcr
sub
lret
lds
lcallw
sbb
syscall
inc
push
xorl
adc
sub
pop
cmp
jb
std
ret
pop
sbbl
imul
outsl
push
insl
add
dec
xchg
pop
mov
or
std
dec
fxch
scas
sub
push
cmpsl
cwtl
add
push
out
mov
mov
or
mov
adcb
in
out
mov
jg
sbb
repnz
bound
mov
aas
or
sub
add
std
jno
sub
shlb
rcr
stc
jle
pop
xchg
testl
aas
fwait
dec
add
mov
psraw
loopne
andb
adcl
nop
and
mov
cmp
xchg
sbb
imul
fmull
mov
sbb
insb
sti
jl
dec
fistpl
cmp
in
jnp
imul
fmull
mov
sbb
insb
sti
jl
dec
fistpl
aas
mov
or
jnp
imul
fisttpll
mov
sbb
dec
fldt
cmp
paddsb
jmp
fistpl
inc
ret
add
jae
adc
and
xor
mov
mov
or
mov
cs
adc
and
xor
inc
sahf
push
mov
jno
sbbl
outsb
rcrl
push
loope
icebp
cs
adc
and
xor
cmp
jno
addl
ja
pop
rcll
loope
icebp
xor
cmp
xor
inc
fistpll
loopne
call
cmc
daa
mov
icebp
pop
xlat
ljmp
inc
test
lock
xor
cmc
leave
add
paddw
dec
xchg
ds
shl
pop
mov
cmpsb
cld
pop
xchg
es
into
out
mov
mov
cltd
leave
cmpsb
and
or
movsb
push
push
scas
ret
inc
push
and
imul
sub
add
jno
orl
mov
out
into
fs
rorl
pop
adc
xor
les
jno
inc
orl
bound
das
jmp
mov
scas
add
mov
outsb
scas
bound
movsl
add
out
insb
add
mov
fsubrp
sbb
adc
fdivr
and
icebp
mov
mov
push
rorl
loope
icebp
aaa
add
adc
and
xor
inc
xchg
popa
mov
in
enter
rorl
test
inc
add
dec
addl
aaa
ret
in
hlt
dec
les
insl
xchg
cmp
pop
mov
scas
and
aas
loope
rolb
in
xchg
sub
pop
fstpl
lea
push
loope
icebp
cs
adc
and
xor
inc
sahf
push
mov
jno
sbbl
outsb
rcrl
push
loope
icebp
cs
adc
and
xor
inc
sahf
push
mov
jno
sbbl
jge
and
aaa
fists
jbe
dec
cwtl
adc
aad
jle
xor
decl
incl
rclb
inc
cmp
mov
inc
dec
insb
clc
xor
es
shll
testl
loopne
sbb
scas
lds
push
pop
lock
mov
scas
std
dec
loop
pop
mull
cmp
call
jbe
in
cmp
mov
inc
push
mov
mov
ds
out
xor
push
jb
push
ljmp
jnp
adc
mov
loope
cltd
mov
popa
pop
dec
mov
jecxz,pn
in
xchg
lds
imul
mov
arpl
cli
jmp
lahf
push
repnz
inc
cmpsb
jo
je
iret
mov
cmp
and
pop
add
lcall
enter
xchg
mov
rcl
movsb
mov
cmc
adc
mov
cmp
or
lods
dec
sbb
jmp
dec
ds
scas
in
jp
jp
cltd
mov
mov
sarb
inc
ret
ja
xor
pop
repnz
dec
shrb
cltd
push
xchg
int
int3
inc
sbb
and
sub
lret
mov
jmp
fstps
outsl
mov
mov
or
daa
aad
mov
js
xchg
push
sbb
adc
subl
inc
and
test
mov
adc
push
xchg
movsb
jmp
fwait
je
jns
imul
mov
movsb
or
xor
lock
cmp
dec
push
sub
sarb
stos
daa
mov
inc
repz
dec
pop
cmp
add
mov
pop
imull
out
repnz
addb
rolb
arpl
push
cld
lcall
push
inc
mov
adc
ljmp
inc
sub
cmp
ret
in
pop
cmp
inc
pop
cmp
and
scas
add
leave
pop
fcmovu
popa
pop
jnp
push
in
mov
xchg
mov
adc
jae
mov
inc
push
insb
add
cs
jge
cmc
sbb
pop
fnstenv
lcall
in
test
mov
mov
test
scas
leave
fsubrs
xor
sbb
mov
aad
sbb
sbb
gs
push
adc
jmp
push
cmp
mov
imul
scas
stos
clc
inc
mov
dec
scas
mov
cmp
cmpsb
dec
les
push
es
xor
cmp
mov
mov
addr16
mov
pop
mov
adc
incb
dec
inc
pop
inc
cmp
gs
ja
cmp
leave
out
add
sbb
sahf
cmp
add
xchg
pop
jb
push
cwtl
jae
rclb
sbb
pop
push
pop
rolb
sub
aaa
iret
mov
mov
rcll
push
sbb
gs
push
pop
popw
dec
mov
out
arpl
inc
pop
jmp
mov
mov
xchg
mov
sbb
adc
mov
fisttpl
loopne
xlat
fdivr
jge
out
mov
add
data16
xor
mov
subl
sub
lods
or
xor
mov
dec
sahf
sarb
and
dec
push
sahf
cwtl
or
mov
jmp
dec
dec
cmp
xchg
mov
cmp
and
popf
stos
iretw
insl
notb
add
shlb
and
mov
cmp
cmp
mov
pop
lret
jbe
mov
or
aad
cmp
cmp
shrb
test
xchg
inc
loopne
or
pop
and
stc
pop
mov
ds
push
add
stos
ret
cmc
lods
lods
sbb
push
je
cmp
xchg
shrb
cmp
repnz
lods
lods
mov
or
movsb
or
and
mov
sbb
xorb
push
adc
jbe
and
lret
enter
push
cmpsb
cmp
xchg
movsb
cltd
pushf
adc
pop
sub
mov
shlb
popa
add
push
fs
push
cs
dec
subb
sti
push
xlat
sub
hlt
jbe
add
pop
or
cmp
push
jnp
xchg
dec
push
pushf
xor
pop
test
ja
add
nop
push
ja
fs
bound
inc
xchg
pushf
sub
push
decb
dec
xchg
jmp
mov
stos
mov
mov
mov
in
jnp
stos
dec
mov
and
andl
inc
adc
mov
dec
mov
orl
pop
divl
stc
jmp
stc
mov
or
push
and
stos
stc
mov
ljmp
and
imul
lock
int3
test
push
fisttpll
rcrb
and
pcmpgtb
int3
pop
cmp
icebp
fcmove
dec
adc
push
pop
mov
std
andl
fwait
ret
jecxz
xor
sbb
add
cmp
mov
movsb
shlb
pop
insl
add
add
inc
outsl
push
std
js
leave
add
movsb
aad
xchg
and
and
xchg
je
mov
stos
es
mov
data16
jbe
jecxz
aas
in
es
dec
dec
mov
adc
add
push
adc
insl
mov
in
jbe
xor
and
lret
add
std
jb
pushf
lds
push
dec
leave
leave
inc
xchg
loop
jl
cmp
sub
jno
xchg
mov
xchg
pop
lds
andl
fstpt
js
xchg
dec
inc
bnd
inc
pop
rcrb
testl
sbb
add
pop
inc
les
xorb
dec
pop
sbb
mov
test
pop
pusha
ficoms
lods
mov
jmp
cmp
addb
icebp
adc
cmp
pop
subb
hlt
mov
mov
icebp
pop
xchg
sbb
mov
das
ss
fwait
and
inc
loope
mov
dec
xorb
aam
dec
cmpsl
sub
add
dec
xchg
jnp
lret
and
movsb
mov
mov
insb
shl
es
icebp
cli
pop
sbb
sbb
lock
sbb
aaa
xchg
xor
cmp
mov
adc
addl
sub
jge
sub
pop
add
outsb
fildl
push
or
adcl
adc
lcall
loopne
mov
lcall
mov
test
xchg
je
pop
rcrl
ds
dec
add
pop
js
xor
push
in
addr16
mov
popf
cli
dec
adc
loop
or
aad
mov
imul
leave
pop
fucomp
enter
inc
sub
pop
inc
lods
scas
mov
pusha
add
and
sub
loopne
jns
sub
shlb
lret
fs
test
imul
cmp
popf
sub
add
push
imul
xchg
xor
and
pushf
sti
enter
pop
sti
out
sub
jg
xchg
mov
inc
das
test
xor
adc
scas
xchg
stos
sub
dec
and
mov
in
leave
adc
pusha
jg
call
xchg
xor
xor
fisttps
inc
aas
repnz
xchg
pop
or
lret
daa
mov
pop
mov
ret
dec
sbb
push
xor
loop
xor
loop
sarb
adc
mov
repz
mov
leave
lock
aas
sub
inc
mov
dec
mov
adc
adc
mov
test
and
int3
enter
xor
cmp
mov
adc
mov
insb
adc
xor
and
idivl
imul
ljmp
int3
subb
add
in
push
ds
inc
aas
sbb
mov
lods
lods
es
xchg
scas
loopne
cmpsl
jo
xchg
add
inc
xchg
outsb
push
mov
push
repz
in
popa
arpl
mov
push
stc
inc
sub
mov
jnp
fs
push
or
in
int
mov
dec
imul
faddl
or
daa
jbe
xchg
jmp
mov
divl
repnz
leave
xchg
cs
test
mov
cltd
inc
xchg
sbb
movsl
or
mov
jns
bound
rcr
xor
mov
test
repnz
adc
adcb
ret
and
scas
xchg
xor
test
mov
out
mov
xchg
adc
xchg
insb
dec
shr
aaa
daa
mov
adc
mov
es
xchg
jb
stos
cwtl
loopne
cld
dec
mov
adc
sahf
jp
shl
in
mov
dec
fcom
orb
nop
cwtl
pop
mov
push
in
cmc
push
cmp
and
or
mov
xchg
aam
jmp
inc
mov
pop
xor
ficompl
sub
icebp
fsts
mov
arpl
mov
lret
sbb
mov
push
push
mov
ds
jg
shrl
fisubs
pop
cmp
in
and
mov
pop
das
sbb
rcr
popf
xchg
lret
jo
adc
and
cmpsl
jg
mov
cmc
dec
mov
pop
xchg
cmp
jnp
fucomi
aam
aaa
push
xchg
rcll
sbb
pushf
jmp
clc
ret
dec
inc
ss
inc
mov
pop
adc
arpl
or
pop
pop
insl
push
das
test
ds
cmp
js
and
cs
cmpsl
insb
into
stos
cmpsb
sbb
pop
mov
fists
add
adc
jns
push
push
mov
sbb
aam
gs
lahf
nop
jns
mov
mov
xchg
fs
mov
xor
add
or
jg
inc
push
add
out
cmp
cli
lods
jb
jne
sbb
jmp
int
mov
push
ja
in
xor
pop
jnp
fiaddl
lock
inc
ja
fmuls
enter
jne
inc
inc
iret
call
mov
dec
sbb
test
cmovg
and
add
cmp
hlt
and
fadds
mov
pop
push
sub
dec
and
sbb
dec
or
cld
mov
icebp
imull
add
push
ret
subl
ds
roll
mov
push
or
ret
insl
and
popf
add
aad
xchg
int
cmp
xor
loope
cld
insl
dec
mov
repnz
mov
frstor
pop
and
xlat
xchg
int
icebp
sbb
xchg
daa
xor
sub
jle
bound
dec
subl
mov
pushw
push
lea
aad
jae
movsl
jno
mov
xchg
adc
stos
mov
push
xor
icebp
call
jle
lret
mov
mov
xor
xlat
ret
and
sbbb
cli
loop
cld
xlat
cmp
xchg
sub
cld
fcom
and
lods
loop
pop
or
daa
push
cli
outsl
inc
pop
mov
stc
daa
push
push
int3
cmp
popf
push
fsubrs
or
insl
out
sbb
pusha
insl
gs
pop
lea
mov
inc
mov
sbb
or
lahf
mov
aam
jge
add
into
rol
push
and
cmp
cmpsl
or
fwait
pop
mov
clc
and
jnp
int
add
jnp
pop
mov
movsl
push
inc
jecxz
test
int3
and
push
adc
add
lcall
mov
inc
int3
into
xor
fcmovne
lcall
outsl
jbe
xor
insb
shll
and
fisubrl
sub
sbb
or
cmp
pop
into
lds
add
adc
dec
into
xorb
mov
insl
jbe
ss
movsb
jb
sbb
adc
dec
sub
mov
ret
jmp
mov
lods
imul
jle
sub
cmp
push
fs
cmpsl
adc
call
daa
xor
hlt
daa
out
pop
rorl
jmp
jmp
dec
sub
jb
addb
xor
dec
dec
push
cmp
notl
cmc
jmp
xchg
enter
mov
test
loope
lds
xchg
mov
test
scas
aaa
adc
cmp
add
jbe
sarb
test
xchg
push
push
mov
aaa
cmp
sbbb
ljmp
shl
fmull
pushf
jns
mov
dec
jl
lea
je
das
or
out
enter
cmpsl
and
shll
add
and
daa
mov
xor
movsl
sbb
and
aaa
out
insb
test
push
sbb
sub
pop
push
test
xlat
sahf
mov
jmp
movq
js
mov
sbb
rcrl
add
pushf
mov
cmpsb
test
test
inc
pushf
mov
push
pavgw
mov
mov
movsb
in
push
pop
xlat
xchg
jp
outsb
push
mov
adcl
adcb
fs
jbe
jo
push
mov
pand
in
add
dec
pushw
mov
mov
cwtl
jb
xchg
or
xchg
psrlq
cmpl
jne
cld
arpl
push
and
hlt
xchg
not
test
pop
pop
pop
call
std
popa
fldl
jne
or
jmp
or
jo
lret
lds
and
jp
repz
loop
insl
lds
xchg
dec
xor
push
lods
mov
adc
sub
dec
sub
mov
test
lahf
adc
xchg
lods
in
outsl
jmp
sub
fnstcw
shll
sub
scas
mov
adc
pop
andb
mov
sub
aas
movsl
mov
sub
inc
dec
mov
stc
push
or
aaa
mov
mov
sbb
arpl
jae
data16
sub
xchg
jnp
push
dec
daa
mov
ljmp
pop
mov
xchg
push
add
je
jmp
pop
rcrb
and
add
test
pusha
insl
scas
scas
test
lahf
fwait
out
fs
inc
xchg
repz
stc
mov
sbb
push
pop
ret
test
test
jg
fists
xchg
pop
sarb
iret
mov
dec
jne
sub
mov
mov
add
movsb
xor
and
popf
ret
clc
xlat
push
lods
ljmp
pop
divl
push
mov
ja
imul
test
arpl
call
jno
inc
xchg
xor
lds
call
dec
stos
jne
shlb
in
repz
pop
sub
dec
mov
dec
out
sbb
push
xor
mov
fidivrl
dec
mov
lret
dec
mov
sahf
mov
jbe
pop
lods
mov
imul
jne
outsb
cmp
shrb
lret
es
push
cmp
inc
out
in
loop
leave
or
inc
mov
cli
mov
popf
aaa
in
xorb
out
addr16
mov
jmp
push
ds
movsb
push
and
cmc
in
dec
rorb
movsl
test
andl
mov
lea
mov
sti
adc
mov
pop
ss
fisubrl
repnz
mov
fistps
and
sahf
pop
stos
das
je
inc
scas
pop
xchg
aaa
rcl
std
push
fiadds
pop
xchg
ja
pop
rolb
dec
inc
stos
in
push
cltd
orl
jb
add
jmp
mov
push
dec
jno
xchg
or
lcall
jne
or
sub
sbb
inc
push
orb
test
jns
loop
aaa
pusha
lods
int3
movsl
sbb
fsub
iret
mov
cmp
dec
xchg
jmp
or
dec
clc
fnstenv
cmp
add
rorb
insl
mov
mov
les
addb
les
jl
or
out
lret
pop
sbb
fwait
mov
lret
addr16
scas
mov
inc
lcall
mov
xchg
xor
and
scas
lret
in
mov
jns
xor
pop
aas
mov
push
dec
cmp
dec
pop
adc
out
stos
data16
movsl
mov
daa
cli
jmp
dec
adc
iret
inc
mov
push
mov
dec
push
push
in
scas
cwtl
push
push
xor
and
and
mov
fadds
cmpsl
orb
fwait
rorb
xlat
cmp
mov
loopne
lods
cmp
aaa
leave
imul
ds
je
test
sub
inc
aaa
not
sub
adc
push
adc
pop
push
cmpsl
test
insl
lcall
sbb
dec
adc
les
sub
add
xor
fstl
xor
adc
sbb
pop
pop
cmp
push
xorb
inc
mov
aas
adc
push
and
pushl
aad
cld
incb
inc
cvttps2pi
sbb
maskmovq
sub
ljmp
cmc
sbb
enter
push
or
jp
jbe
popa
ret
pusha
and
xor
sub
fst
and
mov
xchg
dec
mov
push
sbb
pop
mov
notl
rorb
jb
or
addr16
mov
lds
or
sbb
mov
jno
xor
addr16
enter
mov
je
dec
pop
jo
movsb
cmp
std
leave
repnz
sbb
repz
loop
call
hlt
xchg
mov
add
sub
push
fmuls
iret
out
cwtl
clc
std
mov
loopne
mov
movsb
dec
push
mov
lea
jl
popa
push
mov
xlat
popf
jmp
popf
iret
les
leave
sub
popa
lahf
rclb
sbb
dec
and
cmp
cmc
cmp
adc
enter
loop
jg
ret
test
push
and
mov
add
popa
inc
pop
pop
cmp
scas
scas
cmp
or
loopne
int
xchg
lods
or
out
push
or
iret
jge
ret
int
or
mov
loopne
inc
fwait
push
imul
and
sbb
or
fiaddl
xorb
test
mov
aaa
call
daa
fidivl
insl
or
pop
inc
mov
outsl
fstps
inc
mov
inc
dec
and
ret
clc
jo
lock
add
fwait
out
cltd
pop
inc
mov
leave
dec
scas
in
int
nop
into
arpl
cld
or
cmpsl
stos
sbb
jp
push
add
push
cmc
bound
out
aad
or
inc
push
or
ret
mov
pop
pushf
sub
sub
sub
ret
push
and
mov
dec
mov
jmp
mov
out
les
lods
xchg
inc
inc
jle
mov
in
sub
jbe
and
mov
lret
xor
add
fadd
cld
into
fcomps
or
push
jl
repz
add
push
cmp
movsb
and
mov
jmp
cmp
xor
loope
into
push
test
mov
inc
push
les
sbb
push
cltd
test
or
xor
sbb
cwtl
dec
push
repnz
push
xor
rol
xchg
cs
pop
jmp
out
dec
mov
xchg
jg
cmpsb
les
notb
xchg
push
mov
imul
mov
pop
mov
iret
sbb
pop
lret
adc
gs
test
push
push
ss
push
pop
mov
aaa
movsb
jl
movsb
lods
cmp
es
and
push
jae
js,pn
rorb
imul
fsubs
dec
mov
aaa
iret
and
adc
mov
dec
jp
mov
sub
push
std
outsb
dec
inc
mov
add
dec
xchg
test
adc
xchg
xchg
faddl
fs
mov
push
stos
sub
xlat
int3
test
pop
push
sub
inc
mov
mull
and
jb
xchg
fisubl
ss
push
push
inc
mov
aad
pop
jns
nop
incb
sar
mov
test
scas
adc
adc
addr16
lods
xchg
sarl
jg
cmpsb
mov
push
daa
aas
sbbl
out
push
or
jne
adc
lcall
push
fildll
cld
in
adc
jbe
ds
imul
mov
mov
pop
movsl
jg
push
sub
pusha
aaa
insb
pusha
movsl
mov
rcll
jne
out
popf
mov
mov
inc
in
addr16
insl
push
popa
mov
sub
xchg
sub
cmpsb
pop
bsr
imul
int3
jecxz
cmp
mov
testl
sbbb
sti
xchg
sub
xchg
inc
enter
push
add
loopne
inc
xor
xchg
mov
or
mov
dec
sub
mov
divb
mov
inc
mov
cmp
add
pop
dec
mov
dec
fnstcw
int3
out
in
ficoml
pushw
bound
sbb
lret
testb
jno
lret
dec
cli
rcrb
mov
and
inc
enter
cwtl
push
les
push
imul
lret
cmpsb
sub
cmp
jmp
cld
neg
loop
mov
cmp
out
loop
add
lcall
es
iret
movsb
lods
inc
mov
popa
push
fwait
mov
negl
js
popf
clc
outsb
dec
and
adcb
mov
push
or
sub
decl
pushf
xchg
fstpt
dec
outsb
in
mov
xchg
mov
rcrl
push
loope
icebp
cs
adc
and
xor
inc
sahf
push
mov
jno
sbbl
outsb
rcrl
push
loope
icebp
cs
adc
and
xor
inc
sahf
push
mov
jno
sbbl
outsb
inc
push
rorl
loope
jno
add
adc
and
xor
inc
sahf
push
mov
jno
sbbl
outsb
rcrl
push
loope
icebp
cs
adc
xor
adc
push
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
enter
call
cmp
xchg
xchg
mov
dec
ss
es
jbe
sub
inc
enter
call
negb
mov
ss
push
push
sbb
data16
cmp
and
cmpsb
call
lret
test
mov
inc
sbb
jne
and
imul
inc
mov
jecxz
roll
lret
xorb
inc
test
jg
and
daa
mov
int3
add
sbb
test
adc
jbe
jle
push
pop
ja
movsl
jle
imul
orb
bound
dec
idivb
std
mov
push
xchg
stos
xchg
cmp
jbe
mov
xchg
loopne,pt
addr16
sub
aad
mov
xchg
pop
ja
cltd
sarb
pop
dec
insl
lds
mov
dec
gs
ss
repz
pop
and
cmp
rolb
adc
xchg
test
sbb
push
in
ja
cltd
out
push
cmp
or
clc
mov
or
inc
dec
mov
loopne
push
js
or
sahf
sub
sub
aad
test
xor
mov
cmp
outsl
mov
pop
adc
dec
daa
mov
idivl
aad
mov
aas
jo
jae
popa
jmp
jge
inc
aaa
push
sub
scas
popf
in
xchg
cwtl
out
mov
es
jbe
data16
inc
enter
call
negb
dec
ss
es
jbe
data16
inc
enter
jne
xchg
mov
or
test
ja
lret
pop
pop
xchg
loope
sub
and
mov
dec
xchg
stc
cld
into
stos
sahf
pop
jmp
mov
sub
inc
or
jno
sbb
xor
ror
loop
jno
push
addr16
lret
cmpb
mov
push
test
jno
fildll
mov
loopne
lock
insl
mov
push
sub
inc
xchg
imull
ja
test
int3
xlat
enter
xchg
aam
fldt
push
mov
mov
push
jbe
xor
out
popa
imul
inc
sbb
push
out
inc
sarb
sbb
rolb
xor
jnp
out
lahf
loopne
inc
stc
mov
imul
vpaddb
push
xchg
mov
add
lock
cltd
or
adc
jae
andb
lock
mov
fisubrs
dec
sarb
cmpsb
sub
add
dec
test
shll
std
stc
adc
inc
aaa
inc
popf
xor
int
and
xor
dec
xor
jl
jbe
mul
mov
lcall
mov
loope
mov
jo
inc
test
aas
scas
inc
fidivl
scas
sbb
adc
xchg
mov
jle
sahf
jl
iret
jle
test
xchg
movb
sti
nop
dec
pop
jg
inc
xchg
fsubl
repz
mov
ret
lds
stos
fld
lods
mov
sarl
rorb
pop
cmp
sub
lods
test
out
test
addb
push
cmp
enter
jns
add
cmp
pop
mov
dec
bound
fstl
bound
stos
xor
aad
mov
sub
and
mov
sbb
pushf
sub
sub
or
dec
adc
push
xlat
mov
xchg
and
gs
idivl
repz
aad
imul
mov
jne
xor
loop
mov
xchg
cmp
adc
sub
lods
enter
aaa
outsb
cmpsl
xchg
and
mov
push
test
cmp
addr16
dec
fsts
mov
rol
and
jns
movsl
ds
cli
jmp
clc
popf
mov
jo
pusha
movsb
ds
mov
jbe
out
jg
sub
out
outsb
lods
jno
push
mov
mov
xchg
push
jo
int3
popa
lea
inc
and
push
lock
lcall
dec
add
xor
mov
daa
rcrl
xchg
adc
xchg
adc
mov
movsl
rorl
mov
pushf
xchg
xchg
push
xchg
mov
xchg
out
cwtl
jmp
adc
push
pushf
test
inc
dec
pop
xchg
in
inc
cli
int3
mov
and
lea
add
xchg
add
dec
jne
out
stc
out
push
cld
mov
and
ja
test
mov
loop
in
push
or
xchg
or
inc
jno
mov
fadd
loope
or
or
push
in
sbb
in
rcr
add
jb
dec
sub
int3
lahf
pop
shll
xlat
pop
and
push
movsb
jns
test
fwait
pop
cltd
test
stos
test
xor
mov
cmp
mov
push
add
rorl
fcomip
sbb
sbb
int
ret
adc
lret
scas
cmp
test
shll
mov
cmpb
dec
jnp
dec
ficompl
pusha
inc
sahf
subl
lock
js
xor
dec
xchg
pop
imul
enter
push
sbb
movsb
sbb
jmp
dec
pop
int3
mov
inc
loop
dec
fsubr
outsb
insb
cmp
in
aaa
push
xor
test
or
es
sub
xor
and
jle
fimuls
idivb
xchg
adc
les
dec
lds
xchg
mov
inc
loope
and
and
mov
mov
xor
mov
dec
jp
xchg
cld
scas
mov
fnstenv
push
push
and
loope
ret
dec
loopne
mov
lret
loope
push
ja
push
cmpsb
jle
sub
test
lret
stos
out
inc
push
insl
jecxz
imul
jg
sbb
std
pop
in
lret
xchg
rorb
prefetchw
or
cmp
mov
mov
fwait
add
in
data16
ret
aam
rcll
out
mov
lret
sbb
dec
xchg
in
out
push
test
cld
fwait
rcr
add
pusha
jecxz
jo,pt
rolb
daa
mov
lcall
std
adc
xchg
xchg
jbe
dec
sub
and
sbb
mov
jnp
push
dec
add
push
xchg
xlat
jbe
mov
jecxz
mov
lea
cmp
inc
ficomps
or
jnp
xchg
xchg
sahf
fiaddl
mov
add
pop
call
adc
pop
adc
or
iret
es
sbb
pop
add
adc
pop
add
xlat
fs
int
mov
mov
mov
inc
inc
dec
and
iret
aaa
fiaddl
pop
icebp
hlt
test
sub
decl
mul
xor
repnz
xor
fisubrs
fsubrs
adc
push
add
jno
es
add
daa
push
out
dec
and
shlb
clc
xor
out
inc
jg
cli
js
adc
sbb
pop
push
in
push
clc
inc
adc
ja
insl
xor
adc
scas
lret
hlt
subb
xor
imul
jle
lods
lret
popa
and
push
arpl
mov
cld
into
fwait
icebp
xchg
fsubrl
or
inc
stos
push
mov
add
or
xchg
aaa
inc
ss
movsl
adc
sbb
jmp
cmpsl
out
cli
stos
lock
xor
in
xchg
imul
dec
jle
call
pop
cmpsl
pop
movsl
loope
sbb
fucomi
xchg
sub
mov
int
test
jp
mov
mov
pop
lahf
loope
sub
mov
mov
in
iret
push
mov
push
in
jecxz
push
sbb
lcall
es
mov
pextrw
fsubrs
cmc
imul
cltd
push
das
cwtl
jb
mov
ljmp
mov
test
push
aas
cmpsb
push
loope
and
and
shl
push
inc
fs
ss
jbe
xor
sbb
dec
or
imul
jp
jbe
inc
sbb
stos
cmp
rcll
xor
je
insl
scas
pop
sbb
push
jge
adc
and
mov
je
jge
mov
mov
cmpsb
mov
push
mov
lcall
adc
xchg
loopw
and
int
sbb
fwait
pop
loop
lret
out
sarl
or
test
jne
dec
outsl
mov
and
sub
in
push
addr16
fwait
cmc
adc
icebp
jno
dec
dec
xchg
stos
push
jns
adc
je
movsl
movsl
lret
int3
pop
inc
and
push
inc
andl
aad
add
pusha
cwtl
insb
or
imul
icebp
cmp
dec
std
test
sarl
clc
jle
sahf
arpl
cmp
mov
pop
push
push
insl
mov
sub
bound
cwtl
pop
insl
xchg
xchg
jbe
call
jns
test
add
popf
test
mov
mov
mov
inc
sub
cwtl
dec
test
cmp
sub
push
push
fsub
in
jo
leave
or
xchg
inc
insb
in
arpl
mov
call
setne
lods
mov
daa
sub
bts
mov
mov
add
cmc
fistl
pop
pusha
popa
mov
jb
lock
sbb
and
xchg
repz
imul
enter
adc
jo
sbb
cmc
mov
dec
pop
xor
pushl
lahf
adc
popf
test
popf
rorl
mov
dec
mov
leave
into
push
jns
movsl
xor
addr16
lods
mov
jmp
inc
pop
pop
pop
sub
ficoml
dec
push
push
lcall
jp
mov
push
shll
and
jnp
fmull
dec
mov
ret
repnz
adc
cmpb
sub
mov
lcall
cmp
imul
add
aad
pop
aad
vpextrw
lds
push
scas
icebp
int3
adc
inc
add
dec
cmpl
cli
pop
stos
pop
loop
push
out
mov
push
ficoml
xor
shll
fbstp
mov
test
add
cmpsb
pop
sbb
outsb
loop
lret
and
int
adc
sub
mov
xor
ds
ret
push
mov
xor
lret
or
fcoml
leave
into
test
imul
in
pusha
jecxz
fdivrp
dec
aad
out
add
fldl
xchg
cmc
or
iret
outsb
add
cmp
or
bound
loope
xchg
test
mov
cltd
out
loopne
cmpl
bound
pushf
stc
jg
ja
ss
or
or
xor
cmpsl
cmpsl
mov
testl
add
dec
je
push
fnclex
das
push
and
in
pop
out
leave
jne
aad
push
or
pop
lea
cmpsb
sub
jns
fdivrl
gs
xchg
xchg
cmp
mov
scas
fstps
out
and
roll
ret
cmp
leave
pusha
mov
sbb
ret
inc
rol
daa
jns
xchg
lret
jle
xchg
add
xlat
popa
xchg
rcr
sti
fdivrs
xchg
jp
std
or
cmc
xor
fimuls
inc
push
xchg
pushf
rcl
xorb
sbb
dec
scas
ret
mov
xor
decb
xchg
pop
mov
fisubrs
cmpsl
pop
jne
jge
ret
insl
and
popf
mov
mov
imul
add
scas
and
xchg
std
cld
jae
jns
and
cmpsb
lock
arpl
jno
and
shlb
into
or
outsb
ss
sbbb
sub
lock
jns
aaa
xchg
push
pop
pop
sub
mov
push
in
enter
cmpl
gs
not
xchg
iret
jae
enter
scas
inc
jecxz
rorl
shlb
and
movsb
pop
jmp
push
push
jmp
clc
mov
add
call
mov
push
lods
sub
loop
fwait
das
dec
test
fisttps
fcmovne
incb
mov
mov
or
or
or
or
divps
mov
outsl
or
test
cmc
stos
sbb
repnz
addr16
or
stc
imul
pushf
in
in
hlt
sub
mov
sub
xor
repz
mov
mov
popa
inc
mov
inc
outsl
and
cmpsl
mov
fisubrs
sbb
ljmp
push
inc
cmpsl
stos
xchg
es
mov
hlt
std
arpl
shlb
push
dec
or
stos
mov
adc
daa
nop
xlat
nop
xchg
sahf
fprem
jp
mov
dec
outsb
js
pop
aas
sbbb
sbb
sarb
sub
adcl
push
stc
mov
ljmp
push
repz
mov
sub
add
xlat
sbb
xor
sbb
aas
xchg
lea
cmp
leave
andb
lahf
push
mov
es
ret
push
lods
mov
es
xchg
xchg
mov
popf
mov
imul
pop
lcall
repz
cmp
push
xor
jp
fisttpl
lods
imul
xchg
cmpl
outsl
cmpb
push
push
js
add
adc
jns
pop
ds
test
outsb
shrl
sbb
lods
add
pop
jg
and
fwait
mulb
dec
inc
pop
pop
dec
mov
ljmp
iret
xchg
imul
test
test
cmp
pusha
xchg
lret
mov
sub
pop
and
mov
js
jnp
add
fnstsw
ja
repnz
sub
pushf
add
out
pop
jmp
es
push
test
or
pop
or
and
cmpsl
jp
ret
aaa
js
shrl
pop
or
add
negb
add
push
les
lds
daa
sub
mov
add
lds
and
inc
mov
mov
mov
rcl
add
dec
dec
cmc
mov
mov
adc
sbb
lret
sub
add
cmc
lahf
in
and
bound
push
cmpl
nop
mov
sub
mov
shll
jecxz
dec
pop
jno
sbb
mov
clc
and
jae
or
insb
push
ss
lods
mov
arpl
mov
scas
dec
stc
scas
jns
sti
andb
xlat
adc
cmp
mov
pop
xchg
outsb
mov
lods
xor
stc
add
mov
nop
imul
push
out
mov
adc
into
jb
aad
movsl
fdiv
push
cwtl
mov
in
iret
sub
mov
xor
jge
rcl
sarl
add
hlt
and
mov
mov
and
push
lea
mov
jne
test
sub
inc
test
xchg
xor
outsb
xlat
stos
insb
popa
rcl
inc
pop
mov
out
or
mov
in
cltd
inc
adc
stc
mov
xchg
aad
outsl
push
lcall
mov
cmp
lea
repz
out
mov
addr16
jmp
or
pop
push
movsl
lods
fildl
rorl
add
pop
in
out
mov
mov
movsb
mov
inc
push
icebp
mov
fcoms
in
sbb
test
push
jge
pop
arpl
fs
cli
int
addr16
xor
ds
adc
divb
fs
inc
sub
inc
jbe
lds
out
lret
rcrb
out
lret
popf
fnstenv
pop
ret
fdivrl
shlb
out
inc
stc
sub
adc
gs
icebp
cmp
mul
mov
out
cmpsl
cli
pop
movsl
aas
icebp
xchg
cli
xchg
and
loopne
fsubp
cs
jge
sarb
addr16
cltd
push
mov
test
sub
mov
mov
fstl
mov
inc
movsb
scas
sub
into
and
lods
roll
testl
repz
sub
xor
dec
dec
xchg
sub
mov
add
pop
or
popa
movsl
insb
popf
loopne
xor
inc
leave
daa
xlat
lahf
mov
jne
add
fistps
stc
jecxz
cwtl
sbb
daa
add
xor
movsb
aaa
fsts
packsswb
dec
pop
mov
xchg
and
inc
inc
scas
cld
imul
imul
and
inc
inc
or
or
pop
jnp
cmpsl
dec
pop
js
movsl
pop
pushw
xor
mov
std
adc
inc
cmp
sbbb
imull
or
xchg
mov
mov
mov
mov
sbb
xchg
sti
rcrb
lock
add
adc
and
mov
andl
sbb
aad
cmp
stc
mov
cmp
mov
lret
jae
mov
repnz
cmp
adc
dec
fstps
dec
mov
cmp
rcr
in
xor
icebp
xchg
lea
and
pop
mov
mov
jb
sti
aad
sbb
pop
push
int3
jae
movsb
dec
clc
push
in
sbb
outsl
xchg
mov
jmp
cmpsl
jle
sbb
sbb
outsb
push
cmpsl
ret
repnz
stos
outsl
roll
ds
jl
mov
shr
loopne
popf
dec
rcrl
call
xor
sbb
out
dec
test
mov
shl
test
xor
or
pop
xor
push
aas
or
push
clc
call
es
sub
adc
js
jp
mov
sub
das
enter
lahf
mov
mov
adc
es
fwait
add
out
pushf
loopne
jnp
adc
dec
or
lahf
mov
imul
push
and
add
mov
int
jno
js
xchg
int
sbb
ljmp
sbb
test
lahf
jno
xchg
fdivs
mov
insl
sub
pop
shlb
andb
inc
cmp
sbb
mov
sarl
sti
enter
shlb
sbb
xlat
ljmp
push
sbb
sbb
sahf
mov
sbb
icebp
fcomi
jne
mov
cltd
repnz
jle
aad
cwtl
mov
imul
pop
ds
mov
add
adc
je
out
sbb
push
imull
cwtl
ljmp
repz
sub
imul
pop
mov
and
and
mov
lea
mov
sarb
and
out
dec
ret
sbb
inc
sbb
in
jge
gs
xor
loop
lods
test
insb
pop
rcrl
icebp
pop
sub
je
xlat
jo
push
inc
test
push
frstor
leave
lcall
adc
jmp
jl
push
push
xchg
test
repz
jne
add
stos
adc
adc
inc
ficoms
inc
stos
mov
mov
mov
je
aad
sbb
adc
pushf
std
das
int
mov
out
jge
lock
cmc
cli
cmp
push
or
inc
jb
xchg
inc
xor
adc
rep
lahf
mov
loope
sbbl
imul
dec
dec
mov
jns
and
imul
sbb
arpl
icebp
push
sub
jnp
into
xchg
movsl
gs
mov
cld
shl
pop
add
jnp
inc
out
pop
pop
cs
aas
loop
push
das
loope
in
insl
das
in
adc
pop
push
cmpsl
neg
cmp
shrl
mov
cmc
jnp
fwait
in
dec
pop
dec
call
enter
xchg
pop
pop
aaa
movsl
inc
sub
adc
inc
pop
rcl
movsl
push
sub
std
rcll
mov
je
into
xchg
xchg
mov
cmpsl
hlt
movsl
js
and
add
out
jmp
es
jae
out
mov
xor
arpl
ret
scas
lcall
outsl
jle
jbe
push
lock
addl
sbb
mov
mull
xor
ljmp
pusha
ja
icebp
cmp
loopne
cmp
add
repnz
mov
adc
xor
in
dec
out
ret
cmp
aas
lods
mov
cmp
inc
or
ljmp
fisttpl
fstpt
sub
sbb
sti
testl
add
sahf
pop
mov
cmp
xchg
inc
movsb
push
lock
mov
pop
and
jmp
lock
stos
rorl
cmpsb
int
jb
sahf
lahf
sub
mov
lahf
push
inc
xlat
aas
into
or
cwtl
hlt
xchg
cmpsl
push
mov
je
jg
xchg
rorb
mov
rclb
js
xlat
in
sbb
loop
push
xlat
and
push
xor
lea
pop
xchg
jbe
in
sbb
scas
sahf
jno
pop
jl,pn
cmpxchg
inc
sub
push
popa
int
insb
imul
or
mov
pop
cmp
int3
mov
sbb
mov
add
add
pop
inc
rcll
jne
pop
mov
cmp
or
sbb
mov
bnd
jmp
ret
jp
push
or
ljmp
sbb
daa
inc
push
xchg
dec
ret
mov
add
je
inc
imul
insl
jnp
pop
push
xchg
movsl
mov
jg
mov
push
fcmovb
dec
popf
cmp
push
and
inc
add
sbb
out
inc
into
dec
mov
pop
jg
insl
lock
and
add
or
js
add
mov
jo
loopne
push
push
pop
frstor
jecxz
dec
add
arpl
fs
hlt
shll
cltd
pushl
jno
lcall
cmpsb
es
flds
xor
add
sbb
int3
xchg
sbb
lret
dec
jl
lret
and
outsb
and
pusha
fadds
mov
cmpsl
cmp
sub
call
sbbb
adc
andl
xor
daa
ja
clc
int
mov
mov
jg
insb
out
adc
cwtl
sbb
xchg
push
mov
xchg
pop
xchg
cmp
cmpl
mov
adc
mulb
dec
test
insl
mov
pop
fisttpll
fbld
sti
push
push
leave
inc
dec
and
sub
jo
ja
jno
into
sub
aad
mov
mov
pop
arpl
ds
mov
sub
popa
fiaddl
dec
stos
aam
int
mov
add
outsl
call
inc
mov
push
fisubrl
out
sub
push
xchg
jae
add
cli
inc
and
sub
pop
ret
xchg
test
jmp
pop
sub
cmp
mov
scas
lahf
adc
add
int3
test
or
lret
sbb
leave
fsubl
roll
sbb
aad
addr16
push
push
andb
adc
cmpsb
into
cmp
popa
mov
jb
adc
leave
mov
xchg
xor
fsubrs
fidivrl
andb
xchg
xor
bound
mov
cli
clc
xchg
mov
es
jbe
data16
inc
enter
call
negb
dec
ss
es
jbe
data16
inc
enter
call
negb
dec
out
pop
es
jbe
sub
inc
enter
call
negb
mov
cmpsl
mov
push
js
jg
nop
cltd
shrb
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
ljmp
aad
int
fisubrl
gs
jne
inc
pop
push
sub
or
movsl
vpmullw
test
adc
imul
or
pop
lds
aad
movsl
fnstenv
or
and
pop
ja
adc
leave
stos
mov
lods
bound
xchg
cs
dec
jge
adc
shrb
mov
add
mov
cmp
adcl
inc
movsl
fcom
push
push
out
pop
mov
iret
mov
add
jns
pop
test
cmp
cmc
sar
pushf
xor
or
mov
or
sbb
mov
cmp
or
sbb
jmp
movsb
xor
dec
cltd
cli
and
sbb
insb
xor
adc
or
mov
push
cmp
lods
jne
adc
rclb
movsb
xor
or
sbb
in
cmc
leave
vpmullw
shll
gs
aas
inc
imul
add
mov
mov
leave
xlat
mov
lret
cltd
lds
sub
sub
cmp
pop
inc
push
inc
pusha
pop
jl
movsb
in
idivl
in
jl
int3
xchg
push
sbb
and
push
inc
push
pop
pusha
pusha
pop
inc
test
mov
movsl
mov
xchg
imul
push
sub
sbb
leave
vpmullw
test
jne
inc
pop
push
sub
sbb
or
xchg
imul
or
divl
sub
addl
fisubs
sub
lahf
sub
outsb
js
lods
pop
ret
and
push
mov
dec
fimull
cmp
pop
test
and
aad
xchg
in
jp
mov
es
adc
int3
cli
push
pop
dec
or
movsl
xchg
cmpsl
sub
fadd
mov
pop
mov
add
inc
jle
adc
mov
jnp
test
sbbl
push
push
jmp
enter
and
clts
inc
ja
push
jbe
adc
mov
jne
hlt
hlt
sub
lock
jecxz
ficompl
xchg
xlat
push
mov
jo
fidivrl
mov
test
adc
pop
xchg
out
popa
fdivp
mov
js
or
cmp
pushf
push
inc
andb
fs
mov
loopne
scas
int3
mov
arpl
enter
add
pop
int3
add
pop
cmp
fstpl
adc
xchg
jecxz
lods
sub
es
mov
xor
xor
push
arpl
pop
int
sub
repz
in
loopne
add
xchg
cmpsl
aaa
cwtl
jo
jae
in
pop
mov
lcall
jl
test
les
xchg
xor
dec
test
and
push
push
fistpl
sbb
les
mov
jmp
decl
jb
movsl
sub
cmp
pushf
lock
xchg
sbb
outsl
xchg
mov
inc
mov
loopne
sbb
sbb
xchg
cmp
into
xchg
lret
push
jb
mov
jbe
pop
add
jg
jecxz
cmpsb
aad
push
sbb
dec
fadd
mov
mov
add
dec
insl
adc
push
and
das
pop
xchg
pushf
xor
pop
lahf
mov
out
xlat
bound
hlt
or
daa
push
hlt
jb
xchg
xor
and
mov
or
leave
or
adc
aad
in
bound
push
inc
pusha
jge
add
out
test
sbb
sub
push
mov
mov
inc
call
ds
aam
add
je
xchg
sub
popa
push
cmp
mov
pop
inc
imul
leave
cltd
cmp
xor
jo
shrl
imul
mov
adc
mov
push
dec
push
sub
mov
or
in
sbb
arpl
ds
insb
pop
fisttps
fimull
rolb
and
jb
adc
out
orb
jnp
sbb
mov
pop
or
push
jle
xchg
or
jp
and
lods
xchg
push
push
sbb
in
sbb
jle
fs
add
mov
cmpsb
out
ret
sub
jne
aas
fwait
lahf
clc
inc
push
sub
lea
aad
sub
dec
cmpsl
int3
aam
or
cmp
mov
int3
pop
sbb
fildll
out
or
hlt
sub
sbb
or
out
cwtl
push
aas
adc
lods
push
popa
negb
out
and
push
lods
pop
cmpsb
xor
mov
push
pop
pop
jo
jns
daa
js
out
dec
lods
mov
jp
add
into
and
lret
jle
jae
adc
mov
movsl
push
lods
aam
xor
shll
out
fstpl
ja
sbb
pop
je
mov
jmp
out
adc
movsb
test
jecxz
xchg
mov
add
push
cld
int3
pushf
mov
jns
pop
cs
sbb
lcall
inc
imul
sub
xor
loopne
insb
pop
movl
dec
cld
in
stos
or
in
and
sub
cmpsl
test
jns
lret
ss
mov
stos
cmovge
punpckldq
popf
fwait
rorb
sbb
data16
add
mov
add
inc
push
sub
movsl
xor
mov
das
push
out
adc
mov
jecxz
push
add
popa
cmp
enter
push
out
inc
xor
or
fistps
hlt
and
pop
adc
jbe
rclb
or
inc
xchg
jle
and
or
ficoml
mov
cld
dec
pop
popa
dec
sub
adc
aad
test
iret
mov
adc
adc
loopne
jmp
xor
mov
jae
jbe
push
mov
pop
adc
scas
xor
movsl
stos
out
int3
enter
add
iret
fildl
push
addr16
mov
stos
sbb
imul
stos
inc
cmpsb
lds
adc
jo
and
mov
sbb
mov
and
movsl
mov
jbe
scas
inc
mov
xchg
popf
call
pop
fildll
es
mov
inc
iret
in
cmp
and
dec
mov
xchg
cmp
movsl
repnz
jge
dec
jecxz
jmp
cmp
mov
mov
clc
out
jo
test
scas
ja
mov
mov
adc
pop
and
sbb
sub
mov
cltd
push
pop
fnstenv
add
into
call
icebp
xor
aaa
push
inc
push
lods
pop
and
stos
xor
lods
out
xchg
or
lret
std
es
xlat
push
pop
sub
mov
dec
sarb
out
cmpsb
subl
ljmp
push
mov
pop
dec
out
into
ds
mov
pushf
imul
xchg
inc
or
sbb
mov
add
cmp
adc
mov
fadd
imul
addb
jnp
sub
jle
xchg
clc
pushf
dec
mov
cltd
aaa
fwait
popf
outsl
jmp
sub
sbb
ret
mov
mov
test
sbb
arpl
fucom
cld
xor
jg
lock
ss
jnp
ret
push
les
add
sbbb
dec
or
dec
xchg
mov
pop
mov
fnstenv
mov
sbb
loope
pop
cmc
xchg
gs
or
scas
push
into
cmpsb
rorb
cmp
adc
jp
aaa
data16
test
push
jo
mov
ret
jb
pusha
jne
lods
sbb
jne
or
jno
mov
jmp
pop
mov
cmp
call
cmp
xchg
cli
cmpsl
dec
xchg
and
hlt
pop
fsubl
lods
lods
aad
or
aam
dec
ss
sarb
out
jg
mov
pop
mov
out
test
pop
xor
in
or
call
fwait
shlb
inc
dec
inc
jp
loopne
jo
and
mov
cld
scas
jbe
inc
lea
sub
pushf
push
data16
std
jmp
pop
and
in
add
out
jle
ret
fisttpll
dec
clc
pop
jo
dec
push
cmp
sar
div
inc
aad
or
arpl
xor
fwait
push
movsl
stos
pop
sub
pop
arpl
mov
lret
jg
pop
scas
mov
ds
sub
adc
mov
int
push
sbb
es
jae
ljmp
jne
mov
in
mov
iret
cmp
jne
push
cmpsb
xor
pusha
inc
mov
push
push
xchg
addl
inc
jp
outsb
rorb
adc
ss
cmp
cmpsb
nop
in
inc
dec
lock
and
xchg
mov
test
insb
lcall
xor
fiaddl
jbe
pop
arpl
sti
pop
sub
adcl
mov
faddl
pop
dec
cltd
adc
xor
repnz
xchg
or
mov
int3
dec
cmp
push
mov
pop
cwtl
daa
pop
xchg
xchg
es
fistpl
aam
push
pop
xchg
decb
shll
pop
or
ljmp
pop
lcall
in
test
addr16
hlt
cs
dec
pop
dec
dec
pop
pop
sub
push
push
lea
imul
dec
je
negl
in
mov
cld
add
shll
in
imul
stc
in
mov
mov
mov
repz
inc
mov
in
leave
mov
jmp
add
ja
and
stc
sar
shll
les
mov
push
cmp
add
mov
fstl
call
jmp
push
pop
das
mov
push
dec
setl
arpl
movsl
stc
mov
jns
ds
push
mov
adc
cmpsl
mov
es
fnsave
movsb
add
out
rcrb
xchg
icebp
xchg
icebp
cmp
inc
fildll
adc
scas
and
mov
xchg
xchg
out
push
fstpl
pop
jle
scas
sbb
scas
add
ret
push
or
xchg
inc
mov
popa
hlt
nop
cmpsl
js
das
adc
fisubrl
adc
jecxz
adc
mov
dec
mov
jle
jge
or
loop
sub
stos
out
mov
jbe
cltd
xchg
mov
inc
mov
inc
cmpsb
dec
std
ret
shl
cmp
je
dec
adc
aam
xchg
pop
popa
mov
and
in
das
shll
into
or
stos
jg
lods
inc
jmp
pop
or
sub
add
dec
jne
push
pop
sahf
jb
sti
xor
out
cld
push
scas
and
or
sarl
dec
push
jp
dec
push
lea
mov
mov
ds
sub
adc
cmpsl
orb
sub
adc
xchg
out
pop
fstps
xchg
out
jae
imul
addr16
jmp
mov
sbb
sub
dec
nop
and
mov
fldcw
xchg
pop
mov
add
iret
test
fwait
jnp
js
adc
sahf
push
xchg
fiadds
mov
jno
in
sbb
lret
push
jl
xchg
mov
mov
mov
hlt
mov
pop
cmp
in
jmp
insb
mov
ds
movsb
cmpsb
xchg
adc
movsb
xchg
jae
adc
stc
inc
xchg
sub
sub
mov
sub
aas
inc
or
inc
out
jo
in
fistps
mov
das
dec
xchg
mov
add
loopne
sahf
sbb
roll
and
mov
mov
xchg
push
nop
adcb
cs
loopne
push
scas
mov
mov
aaa
daa
inc
stos
icebp
cmp
mov
orb
xchg
pop
mov
lods
and
xor
mov
es
push
cwtl
test
pop
les
fsub
sub
pusha
sbb
out
pop
xchg
imul
fdivr
and
daa
mov
sbb
xchg
ss
mov
push
lods
in
daa
mov
push
mov
shrl
sahf
mov
sub
lret
shrl
ja
push
ja
cli
cmp
push
mov
or
xor
ja
push
icebp
cmp
add
xchg
aaa
jnp
in
xor
and
xor
mov
or
loop
jae
xchg
ret
add
push
mov
pushf
popa
push
scas
pop
in
dec
dec
pop
xchg
mov
xchg
jmp
stc
push
aaa
shlb
mov
mov
pop
inc
cmp
lods
daa
leave
mov
or
sbb
test
insb
stc
mov
sti
mov
cmp
loop
daa
fwait
cltd
cmc
lret
jmp
gs
testl
out
jbe
dec
adc
xchg
or
dec
add
add
and
cmp
add
in
clc
jb
mov
xor
mov
fstps
xor
lds
lods
jae
int3
inc
popf
inc
movsl
xchg
jle
xchg
imul
into
callw
push
outsb
movsl
aam
outsb
imul
or
stos
pop
push
lcall
push
popa
inc
dec
ficoml
or
push
lea
lods
xor
in
pop
aad
fcoml
loope
xchg
movsl
inc
loope
push
and
mov
out
std
rorl
imul
adc
xorb
aad
out
cltd
mov
push
or
pop
mov
mov
sbb
push
mov
or
add
jle
mov
sti
sti
push
into
add
push
mov
sub
push
cmp
ja
cmpsl
test
rcll
or
mov
sbb
outsb
cli
cmpsb
jne
dec
push
arpl
jns
sub
push
outsl
add
nop
push
mov
sbb
stos
imul
insb
scas
jle
aaa
testl
jae
ret
pusha
dec
pop
xor
add
sahf
and
or
enter
jmp
adc
ljmp
cmp
fbstp
sbb
shl
adcb
test
cmp
sbb
push
dec
or
and
mov
out
xchg
jge
xchg
mov
repz
orl
xorl
lock
pop
push
sbb
cmpl
cmp
xor
loope
notl
in
ret
sub
rolb
lret
dec
mov
fnstsw
sti
inc
mov
mov
mov
into
and
popf
pop
push
xchg
mov
ss
mov
sub
lcall
lods
cmc
xlat
sbb
jno
or
pop
test
add
lretw
and
adcl
out
stos
stos
pop
popa
and
jae
scas
adc
rolb
push
dec
jo
repnz
jl
sbb
adc
lods
mov
popf
sbb
adc
icebp
mov
outsb
and
dec
pop
or
lahf
sub
push
dec
push
ja
push
xchg
xchg
js
inc
or
clc
mov
jne
xor
scas
scas
ficoml
mov
mov
in
sub
loopne
xor
push
out
rcll
push
incl
xor
test
imul
or
movsw
adc
daa
out
addr16
scas
mov
divb
ret
nop
inc
sub
xorb
push
lods
out
int
cs
sub
mov
int
jb
fsub
pop
pop
rcr
movsl
data16
iret
add
sbb
fistpl
mov
neg
lods
pop
pop
das
in
mov
lods
js
cld
sub
push
loopne
into
jae
push
cmpsl
das
stos
cmpsl
ret
push
dec
adc
movsb
mov
xor
dec
xchg
and
lahf
xor
pop
data16
lret
and
dec
inc
cmc
mov
xor
dec
out
jg
shl
test
movsb
andl
insl
test
scas
xor
negb
hlt
pop
rcrb
sbb
xor
adc
mov
insl
pop
or
ss
xlat
mov
outsb
stos
cmp
lahf
cwtl
jne
nop
adcb
roll
sarb
das
aas
cmpsb
sti
push
sub
in
and
pop
ret
testb
add
lret
popf
test
out
add
jo
mov
mov
inc
jns
call
jge
jns
shrb
push
inc
shll
insb
cmp
sub
mov
and
inc
pop
fwait
or
mov
popa
push
push
imul
add
pop
cmpb
test
es
mov
sbb
enter
in
sbb
cltd
punpckhbw
adc
iret
inc
pop
adc
or
jle
fidivrs
mov
repnz
jp
mov
popf
mov
pusha
lret
push
pop
pop
jb
mov
jle
mov
cli
mov
subb
sahf
popa
rcl
and
ss
jno
xchg
mov
idivb
mov
pusha
dec
dec
adc
mov
push
cmpl
mov
out
mov
push
mul
das
dec
mov
inc
xchg
ljmp
jnp
ljmp
call
call
jmp
lock
loope
loop
sbbb
flds
adc
jecxz
or
add
ret
mov
push
cltd
adc
jmp
add
xchg
je
push
jns
pop
stos
enter
imul
adc
das
mov
in
add
stc
jns
inc
cwtl
jp
sbb
leave
push
xor
lods
ret
shlb
mov
cmc
mov
sbb
icebp
xlat
adc
les
jbe
fldcw
enter
lock
testb
cld
adc
jb
mov
add
lock
pop
add
cmpsb
xor
lahf
xchg
ljmp
insb
ror
cmc
lret
xchg
push
mov
dec
dec
aam
shrl
and
jo
les
mov
stos
imul
pop
movsb
loop
int
adc
mov
push
lds
imul
pop
and
dec
pop
fisubrl
and
adc
rolb
add
push
sbb
xor
push
jns
sub
loopne
inc
aaa
insb
cmp
dec
dec
push
mov
sbb
inc
sbb
or
test
xlat
pop
adc
cmp
je
mov
adc
enter
lds
jmp
and
jnp
imul
xchg
inc
test
add
mov
rolb
sub
subl
xchg
push
scas
jnp
ja
jge
sub
cld
jg
inc
and
jge
xchg
adcb
fiaddl
aam
fwait
mov
cmp
iret
enter
and
xor
mov
mov
inc
sbbb
lcall
jb
mov
fcomps
add
repnz
arpl
lahf
outsl
mov
int
cld
pop
mov
inc
adc
mov
out
dec
mov
jmp
je
xor
les
mov
inc
pushl
sub
out
arpl
test
imul
pop
test
sbb
iret
in
cld
push
and
pushf
and
push
sbb
push
mov
mov
neg
popa
test
aaa
scas
sahf
sub
cld
subb
dec
aad
or
loope
sbb
sbb
push
jge
or
cmc
adc
std
mulb
jg
inc
cmpsl
mov
movl
mov
pop
mov
adc
sbb
cli
mov
das
test
mov
adc
out
leave
jl
out
xchg
mov
push
push
push
cwtl
xlat
cwtl
jns
in
jbe
roll
sbb
mov
shlb
and
test
loopne
mov
insb
pop
inc
jecxz
bound
push
mov
lret
nop
xchg
fwait
cmp
and
test
pushf
push
mov
sub
pop
popl
enter
sbb
xor
iret
popf
test
out
hlt
mov
mov
sti
sub
mov
dec
lret
pusha
inc
sbb
pop
inc
aam
push
xchg
push
das
popa
stos
jns
mov
stos
mov
jb
push
push
push
fs
add
push
sbb
iret
mov
scas
mov
adc
dec
xchg
jns
mov
pop
cmovl
pop
mov
and
mov
cs
mov
lock
pushf
push
add
push
push
shlb
or
xchg
xchg
cmp
in
adc
dec
mov
push
mov
enter
push
inc
lock
ja
inc
dec
jp
sub
aas
jae
in
jae
mov
push
mov
pop
testb
in
in
adc
sbb
fcomip
xchg
idiv
jo
call
mov
jg
pop
stc
pop
push
pop
inc
adc
iret
xlat
inc
and
inc
or
out
das
cmp
das
repnz
fs
or
pop
jecxz
sub
outsl
sub
cmpsb
pop
cltd
lahf
cmpsl
lds
jnp
push
dec
or
hlt
in
dec
dec
fcompl
fsubrp
push
lret
stos
sub
dec
dec
fs
ja
or
pop
sbb
imul
mov
sbb
xlat
jns
inc
dec
ss
lret
push
scas
dec
sbb
push
pop
std
or
jl
sub
stos
push
and
testb
repnz
outsb
lods
addr16
hlt
dec
xor
xor
inc
lock
in
and
xor
call
pop
push
les
mov
stos
xor
xor
jmp
addr16
mov
cmp
inc
jmp
test
jne
idivl
in
scas
in
push
testb
stos
loop
xor
ds
leave
fcoml
add
jle
bsr
cmp
cmpsb
shlb
xchg
jns
adc
jns
xor
cmpb
lahf
xchg
xor
cmp
inc
xor
jo
and
fdivr
jp
aam
lock
cmp
in
adc
or
dec
orl
lea
and
ftst
mov
dec
mov
sbbl
and
hlt
iret
add
cwtl
or
scas
shlb
sbb
xor
cmp
out
jle
sbb
imul
fs
sbb
stos
jnp
addr16
rcrl
or
add
loopne
stos
ja
std
das
inc
mov
sbb
adc
hlt
clc
lahf
mov
orl
inc
jecxz
mov
adc
push
nop
cmp
pop
or
xchg
adc
push
add
subb
adc
scas
imul
jmp
sbb
mov
add
jae
in
mov
out
jle
pop
xor
pop
pop
pushf
xchg
out
gs
into
mov
out
or
or
add
sub
add
pushf
test
sub
loopne
dec
dec
test
mov
test
test
jne
inc
pop
push
sub
sbb
leave
vpmullw
test
jne
inc
pop
push
sub
sbb
test
movsl
mov
xchg
imul
pop
push
sub
icebp
adc
xchg
vpmullw
test
xchg
imul
and
mov
idiv
out
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
mov
orl
jecxz
sarl
add
jl
outsb
jae
inc
dec
push
mov
orl
ret
int3
stos
sub
sub
sbb
add
jl
pop
jae
inc
dec
push
movsl
mov
xchg
xchg
in
hlt
repz
and
jno
jb
aaa
add
sub
ret
cli
pushf
jmp
xchg
scas
ret
in
negb
rcl
xchg
lret
je
insl
arpl
push
cmp
fbstp
push
jecxz
jbe
lret
pop
fnstcw
push
bnd
arpl
inc
mov
inc
mov
lret
jmp
jae
xor
imul
and
addl
dec
jmp
out
xchg
push
stos
test
add
repnz
sub
repz
xlat
dec
dec
push
in
xlat
and
adc
insb
push
add
jp
test
ljmp
xor
inc
pop
lods
push
es
fistl
out
cmp
lret
les
popa
sti
pop
push
cmp
and
inc
jne
mov
pushf
orl
ret
aad
and
add
jae
inc
dec
cmp
cmpsl
leave
repnz
cmp
popl
int3
xchg
inc
xor
push
push
cmp
sbb
repz
xchg
nop
in
mov
jg
dec
dec
sbb
dec
jbe
or
sub
out
sti
lock
in
mov
in
repz
int3
sarl
sub
sbb
or
jl
insb
jae
inc
dec
push
mov
orl
ret
int3
sarl
sub
sbb
or
jl
insb
jae
inc
dec
push
mov
outsb
call
xchg
call
out
or
idivl
insl
leave
adc
ret
push
ja
sbb
add
pop
loop
daa
pop
shl
outsl
or
les
ffree
pushl
xchg
fldl
shl
imul
mov
add
sbb
push
sub
sbb
scas
jo
ja
orl
scas
dec
pushf
jnp
push
fs
sub
xchg
insb
inc
mov
lods
cmc
je
out
sub
dec
and
inc
mov
cmpl
jle
jle
popa
and
add
cmp
out
jge
hlt
fldt
dec
xchg
in
lret
shll
sbb
adc
fsubl
mov
stos
insl
iret
std
std
daa
subb
push
mov
stos
xchg
jb
sbb
mov
shll
pop
mov
int
movsl
jge
fldl2e
cmp
pop
xchg
hlt
sub
jge
rolb
adc
lea
lret
mov
xlat
add
outsl
push
out
jno
dec
lahf
xor
arpl
add
arpl
pop
jnp
sub
xchg
dec
sbb
jae
daa
mov
lds
add
pop
push
adc
stos
imul
cmp
xchg
inc
xchg
xchg
cmc
mov
xor
lret
loop
mov
mov
sbb
jae
aaa
aam
test
imul
mov
aam
in
pushf
mov
add
movsl
nop
cld
mov
mov
outsb
std
pop
mov
pushl
stc
jne
sarl
bound
les
pop
sarb
mov
sahf
lahf
and
jge
xor
cli
push
jne
addr16
in
rolb
mov
ss
dec
loope
cmp
out
mov
iret
push
fucom
xchg
add
add
push
inc
ss
mov
inc
gs
lahf
pop
xlat
loopne
pop
mov
mov
dec
in
xchg
mov
adc
test
jae
and
add
dec
pop
test
lahf
ljmp
jne
sub
jmp
test
cmpsl
cmp
lcall
xchg
mov
pusha
adc
jno
repnz
add
pop
out
mov
jg
dec
pop
inc
cltd
cwtl
jmp
and
xchg
pop
rcl
cmpsl
leave
sbb
ja
dec
std
or
inc
call
mov
sbb
imul
mov
xor
jmp
or
push
add
stc
pushl
xor
sarb
outsb
push
lods
std
push
xor
dec
sbb
push
inc
shlb
or
pushf
dec
dec
gs
xchg
mov
icebp
mov
mov
dec
pop
mov
jns
xchg
insb
je
jecxz
push
rorl
xor
iret
mov
mov
inc
pop
jg
hlt
test
adc
adc
xor
mov
add
push
mov
test
pop
roll
test
jae
pop
dec
scas
test
xchg
rcrb
lds
aaa
and
and
mov
mov
aad
fnsave
push
mov
sbb
pop
push
mov
aam
andb
repz
fsubr
xchg
adc
dec
mov
jne
test
push
adc
rol
xorb
push
push
bound
pusha
lret
js
cmp
aaa
push
push
push
push
clc
sbb
lods
lock
lea
xchg
pushf
adc
aas
testb
ljmp
pushf
lods
cld
sbb
addl
ja
in
sti
lock
rcl
push
or
loop
pop
mov
jnp
mov
mov
loop
cmp
js
sub
sbb
adc
test
dec
repz
rclb
cmpsl
xor
cltd
push
insl
subb
mov
pop
rcrl
std
insb
xor
mov
lods
cmc
out
lds
dec
movsl
push
in
push
aaa
jge
mov
movsb
shrb
xor
bnd
xor
je
xor
sbb
jno
clc
cs
sbb
int3
mov
mov
pop
popa
pop
fldcw
faddl
mov
mov
hlt
jmp
lret
adc
fstl
iret
cmpsl
sub
dec
int3
inc
mov
ret
sahf
ffree
aam
cmp
fwait
imul
lcall
in
push
lcall
mov
clc
movsl
xchg
pop
pop
adc
gs
jl
mov
dec
mov
or
mov
jle
sbb
xchg
xor
pop
sbb
in
scas
mov
test
fwait
pop
lret
cs
test
jg
xor
inc
mov
xchg
push
popf
xor
push
adc
mov
clc
jmp
and
cmpsb
push
xchg
jnp
mov
lea
std
jmp
movsb
subl
inc
pop
dec
xor
retw
mov
mov
cs
scas
push
pop
xchg
xlat
notl
push
dec
dec
in
test
sbb
out
imull
add
addl
stos
sub
je
sahf
pop
mov
stos
enter
mov
xchg
mov
ror
loopne
pop
inc
push
inc
stc
dec
mov
mov
ja
sbb
adc
bound
orl
test
cmp
cld
ret
or
mov
stos
pop
sbb
push
cwtl
jecxz
cmp
testb
mov
sub
ret
adc
ret
fimuls
xchg
cmp
fwait
jno
aam
fsubp
repnz
out
inc
and
scas
rcrl
jne
adc
xchg
lds
pushf
movsl
add
test
mov
psubusb
test
rclb
or
fidivs
xor
xchg
push
shl
aas
sub
jae
mov
add
mov
mov
or
sub
cmp
repz
jnp
jecxz
das
pshufw
sbb
icebp
and
dec
into
lret
shll
sub
mov
pop
xchg
les
or
out
cmp
mov
and
ds
inc
aad
inc
shl
int
rorb
shlb
push
mov
add
in
les
test
pop
lea
mov
inc
shr
sub
lahf
mov
pop
jb
pop
mov
sub
jl
cmp
mov
mov
rcrl
ja
int3
inc
xchg
jle
adcl
stos
inc
xchg
jp
je
jecxz
pop
mov
faddl
mov
inc
bound
push
leave
adc
notb
sub
mov
push
sbb
testb
inc
out
fsubs
idivl
pop
outsl
mov
in
mov
adcb
inc
xor
jg
aad
outsl
jecxz
scas
incl
push
movsb
xchg
das
imull
jo,pt
mov
push
das
push
pop
jb
jnp
mov
dec
jns
adc
sarb
stos
push
insl
sahf
imul
into
les
push
mov
stc
push
cmpsl
rcl
add
aam
insb
inc
and
fsub
mov
ljmp
mov
add
mov
repnz
fbld
sbb
ljmp
adc
cmc
push
test
stos
repz
pop
push
aas
popl
inc
dec
adc
repz
imul
sbb
arpl
inc
add
popf
in
nop
jno
xor
mov
sub
push
shrl
packssdw
inc
loop
popf
xor
xlat
repnz
int3
mov
test
mov
mov
jno
andb
in
xlat
pop
pop
std
popa
cmp
push
lock
scas
rcrb
mov
sub
rolb
xor
inc
addl
mov
adc
jle
mov
loopne
std
inc
popa
xchg
xchg
or
pop
push
arpl
mov
movsl
inc
jo
and
add
shlb
push
in
andl
mov
sub
loope
dec
cltd
mov
sbb
enter
scas
in
cmpsb
and
leave
pop
jmp
jo
jecxz
sar
jb
addr16
repz
jbe
dec
xor
loop
sbb
push
daa
sbb
aaa
jo
cli
xchg
jno
pxor
inc
mov
iret
js
pop
push
lea
jo
sti
pusha
mov
pop
xchg
xchg
scas
cmp
jno
jp
or
outsb
roll
pusha
popa
sub
ror
xchg
mov
jmp
shll
cmpsb
xlat
sbbl
pop
xchg
std
notl
cmp
fwait
mov
or
xchg
out
xchg
push
movsl
ret
gs
test
pop
inc
inc
jno
pop
clc
fcoml
int3
xchg
movsb
dec
mov
mov
pop
push
scas
mulb
cmc
rcr
add
push
rclb
roll
jbe
outsl
cld
jae
push
ret
lds
mov
rcll
gs
fsubrl
xchg
sarb
dec
mul
insb
sbb
outsl
xor
push
push
mov
icebp
dec
outsl
scas
cmp
stc
push
shlb
jne
push
pop
nop
jg
outsl
loopne
adc
out
push
imul
cltd
push
add
sbb
add
imul
std
shlb
xchg
repnz
popa
and
dec
cmp
clc
lret
imul
fisttps
stos
lahf
mov
jbe
addl
inc
andb
int3
mov
aam
or
shl
scas
stos
out
add
and
adc
dec
imul
lret
push
neg
test
pop
loope
out
jecxz
je
add
jecxz
ja
cmp
or
mov
lods
aaa
push
imul
sub
cmp
lret
xor
push
in
jnp
dec
jne
xchg
xor
mov
lret
cmovg
in
lods
aam
lock
mov
repz
dec
adc
adc
and
mov
dec
jge
icebp
or
out
add
pop
or
xchg
xchg
pop
ljmp
xor
and
mov
cmp
cld
leave
lea
andl
out
xchg
xor
in
xchg
cmp
shrb
lods
mov
sti
insb
ficompl
dec
jne
and
rorb
insl
aam
fsub
sahf
xchg
inc
mov
pop
leave
or
mov
lods
inc
mov
jae
mov
jbe
repz
ds
mov
addr16
outsl
scas
pop
add
repnz
mov
push
leave
cltd
push
adc
scas
add
xorl
decb
push
je
mov
push
cltd
insl
mov
mov
mov
std
cmp
mov
cmp
add
addl
cmp
jne
jmp
sar
push
inc
test
sbb
loop
out
out
loopne
jns
enter
mov
mov
push
call
push
and
enter
lods
pushf
lahf
int
adc
xchg
inc
hlt
shlb
jl
or
dec
xor
mov
ds
jno
adc
scas
js
das
out
xchg
xchg
mov
push
shlb
jp
jo
jo
and
pop
stc
sbb
and
mov
sub
int3
add
dec
push
push
out
jg
testb
add
mov
or
aad
addr16
stos
stos
pop
in
loopne
insb
adc
cmp
push
cmp
arpl
subl
cld
movsb
dec
push
sub
fistl
arpl
add
mov
leave
mov
imul
loop
int
xlat
jl
arpl
jmp
mov
cmc
or
out
jb
or
repnz
sbb
in
rolb
in
imul
sbb
das
push
pop
mov
cwtl
leave
addr16
mov
jno
stos
mov
mov
stos
xchg
outsl
xor
sbb
faddl
add
adc
in
add
fbld
movsl
sub
sbb
enter
aaa
cltd
inc
insb
sub
fistpll
int3
mov
sbb
inc
ljmp
enter
les
mov
addr16
sti
adc
inc
and
mov
mov
mov
enter
insb
xchg
test
lea
mov
push
add
mov
pusha
popf
mov
mov
dec
movsb
push
sarb
arpl
push
loop
test
adcb
mov
rorb
repnz
and
lret
push
mov
push
cmpsl
dec
sub
insb
out
loopne
aas
add
test
lret
es
xchg
sub
fistpl
or
pop
movsb
pop
xor
icebp
lods
outsl
xor
cmp
lock
out
mov
dec
jge
mov
mov
pushf
push
test
or
jb
in
bt
push
sub
jp
out
dec
sbb
pusha
push
fistps
cld
or
imul
inc
cmp
test
sbb
push
push
cmpsl
pushf
mov
or
lahf
push
dec
mov
mov
mov
scas
mov
fcoml
xor
scas
mov
xchg
ret
push
push
mov
add
dec
shll
xor
nop
nop
lock
dec
mov
fcmovne
mov
jo
cmp
in
es
jno
sets
or
pop
js
stc
mov
adc
inc
int3
repz
xchg
ss
pop
iret
inc
adc
stos
xor
adc
adc
aad
sbb
and
mov
pop
add
iret
mov
jo
add
adc
push
mov
loop
fistl
lds
daa
int
fsubr
aas
mov
jl
or
inc
cltd
push
ss
jae
cwtl
leave
outsl
dec
xor
mov
lea
mov
outsl
mov
mov
loop
jmp
fdivrs
fistps
jo
test
xlat
stos
xor
and
mov
cmpsb
int3
out
xchg
insl
jnp
lea
dec
fisubrl
loopne
mov
insb
jmp
jae
add
xor
xchg
aam
or
mov
cltd
scas
add
icebp
push
pop
sar
jmp
fwait
aam
inc
xchg
jmp
xor
rorb
xchg
xor
aam
sbbb
mov
sub
repz
std
pop
lods
dec
mov
xchg
or
cmc
and
or
enter
fistps
or
lret
jo
loopne
sbb
jo
andl
adc
leave
es
sub
jle
mov
and
or
mov
mov
cld
jns
jb
stos
rcr
dec
cmp
inc
push
mov
iret
out
mov
pop
pop
push
imul
shll
es
scas
ja
data16
cmp
push
out
sub
inc
int
pop
jo
repnz
test
pop
or
rcrl
xor
cmp
cli
test
fdiv
shrb
lret
cwtl
push
and
pusha
call
xor
lock
rolb
gs
cmp
lcallw
mov
mov
push
and
xor
in
js
inc
mov
dec
enter
or
hlt
mov
in
sahf
popa
sbb
cld
adcl
subl
sbb
das
mov
xor
sti
push
shll
sub
in
xchg
imul
xor
sub
cmpb
adc
pop
sub
jnp
lds
fmull
out
andl
lods
pop
push
inc
ret
inc
int
jmp
xorl
mov
xor
hlt
rcrl
arpl
add
xchg
stc
inc
cmp
in
push
lcall
adcb
fadds
roll
pushf
lea
les
jmp
insb
dec
shrl
rorl
pop
test
iret
or
mov
mov
and
dec
xlat
test
mov
push
in
sub
cmp
scas
cmp
fwait
insb
roll
jns
cltd
mov
adc
and
sub
sub
xchg
cli
mov
add
or
adc
jnp
push
lock
cmp
loopne
roll
mov
adc
xor
xlat
adc
cli
andb
lock
push
stos
cmp
and
fcmovnbe
jge
mov
popa
mov
sbb
push
inc
icebp
into
add
xor
mov
cmpb
adc
test
mov
clc
mov
pop
mov
sub
cmpsb
movsb
mov
popa
jp
inc
and
mov
subb
in
cltd
xchg
jo
addb
jb
leave
fdivr
ja
addl
sahf
jmp
sub
mov
lret
adc
xchg
hlt
subl
or
add
mov
rcrb
mov
lret
stos
loopne
or
insb
pop
sub
mov
in
push
pop
xchg
mov
iret
fdivl
xchg
ljmp
xlat
je
or
add
cwtl
jecxz
sub
sti
push
iret
aas
sbb
popa
arpl
imul
out
sub
sub
dec
sbbl
popf
inc
mov
fnstcw
mov
bound
test
xchg
pop
shll
cmp
leave
add
inc
std
xor
fs
xor
mov
clc
aaa
mov
lahf
nop
mov
mov
stos
data16
decl
mov
xor
imul
jo
cmpsl
push
add
inc
sub
xor
and
add
ljmp
jb
adc
imul
imul
stos
lret
in
mov
mov
mov
add
fsubrl
jp
fcmovnbe
push
int3
xchg
mov
mov
lock
hlt
cmp
lock
jo
inc
cmp
sub
mov
lds
sbb
outsl
loopne
push
xor
stos
sub
inc
and
fistps
ret
or
les
sbb
pop
out
insb
sarl
leave
insb
test
int
std
jno
iret
arpl
xchg
mov
mov
enter
xchg
outsb
cmp
cltd
xor
popa
fnstcw
test
jns
push
push
mov
mov
sub
mov
fs
mov
std
adc
and
neg
pop
jp
pop
shrb
ret
push
xorl
or
adc
sbb
test
aaa
lret
pop
in
mov
xchg
add
pop
scas
pop
dec
dec
sbb
ljmp
ja
pushf
imul
jmp
mov
or
and
mov
add
jl
out
push
push
sbb
inc
das
lahf
add
lcall
lea
sahf
and
or
cmp
fcmovne
push
cmp
roll
jle
into
cltd
push
xchg
imull
cmp
xorl
jo
xor
ja
sbb
pushf
mov
mov
jae
shr
push
ja
dec
adc
js
adcl
jnp
cmp
incl
fs
jae
mov
mov
and
jb
test
div
sbb
push
jmp
hlt
jl
cmp
enter
leave
ljmp
or
adc
jp
jbe,pt
mov
inc
lock
loope
mov
and
out
mov
mov
aad
leave
jnp
lahf
inc
roll
adc
scas
fcmovnb
lret
and
int3
fstl
add
push
mov
mov
xor
cmp
cltd
cmpsl
jb
fadds
arpl
push
xlat
sti
xor
call
dec
dec
add
loop
rorb
out
in
mov
dec
and
test
cmp
cwtl
cmp
inc
add
adc
mov
daa
jmp
pusha
ret
sbb
xor
xchg
in
test
sub
add
jecxz
insl
jns
mov
stos
rol
sahf
int
sub
sub
push
push
fdivr
mov
xchg
aam
imul
push
xchg
test
xor
fwait
and
es
inc
mov
stos
cmc
mov
dec
jne
mov
in
and
inc
mov
push
ret
idiv
pop
jmp
sub
in
mov
pop
add
sbb
cmp
mov
mov
add
hlt
add
xchg
lret
sti
ret
pop
aam
xor
sbb
pop
dec
stc
inc
test
xor
in
pop
inc
je
push
fs
mov
sbb
repnz
sbb
pop
or
push
hlt
mov
lea
mov
jbe
sarl
shll
lret
push
mov
adc
lcall
push
jle
out
cmc
pop
xor
adc
dec
test
inc
jnp
mov
mov
sub
scas
icebp
and
divl
mov
rcl
mov
mov
je
inc
loope
pop
fwait
mov
daa
cmpsl
sahf
push
lods
outsb
mov
add
push
cmc
pop
test
sub
bswap
popf
es
cwtl
sbb
dec
fldt
mov
push
cltd
cltd
leave
mov
aas
inc
inc
mov
xor
or
jle
mov
and
fwait
push
xchg
ret
lods
mov
pusha
xchg
and
mov
orl
ret
int3
sarl
sub
sbb
or
jl
insb
jae
inc
dec
push
mov
orl
ret
int3
sarl
sub
sbb
or
jl
insb
jae
inc
dec
push
mov
orl
ret
int3
sarl
sub
sbb
or
jl
insl
jae
inc
dec
push
mov
orl
ret
dec
rol
and
cltd
mov
or
or
in
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
dec
adc
add
xor
and
xor
sbb
orb
rolb
jecxz
adc
add
xor
and
inc
inc
jb
bound
cwtl
xchg
addb
mov
ret
repnz
or
sbb
sub
cmp
dec
push
pop
inc
push
jne
xchg
xchg
mov
std
xchg
lahf
adcl
dec
inc
pop
jmp
fwait
imul
jnp
dec
call
cli
or
daa
adc
adc
pop
xor
cmp
jmp
dec
dec
scas
mov
ret
xchg
cwtl
push
dec
outsl
mov
add
ret
jnp
loopne
sbb
inc
lea
jp
nop
xchg
jge
loop
pop
pop
sub
jle
das
ret
push
shlb
test
inc
lcall
jl
jne
es
ret
xchg
and
sar
cld
imul
cs
subb
jge
cmpsl
dec
mov
sarl
sbb
repnz
add
out
sbb
enter
ljmp
mov
xchg
adc
loop
rclb
add
xor
xor
inc
jb
jnp
mov
mov
ret
repnz
movsl
popa
adc
push
jb
bound
adc
aaa
jo
out
sbbb
cmpsl
cmpsb
test
jg
outsl
push
jnp
inc
adc
push
and
dec
nop
testb
mov
mov
adcb
push
push
push
and
popa
inc
inc
jb
bound
xchg
addb
rol
ret
repnz
adc
add
xor
and
push
push
inc
inc
jb
bound
xchg
addb
rol
ret
repnz
adc
shrl
pop
dec
in
cmpsb
aad
mov
outsl
xchg
jl
lods
in
xchg
push
pop
sub
cwtl
pop
jae
xchg
mov
arpl
inc
outsb
arpl
insl
rorl
fucomp
jge
sbb
dec
int
or
sub
lods
mov
cmp
ret
sbb
daa
std
inc
enter
sar
out
je
push
mov
mov
lds
xor
sar
loop
daa
xchg
into
aam
inc
sub
outsb
ficoml
pop
cmpsb
pop
pop
scas
outsb
dec
xchg
mov
lcall
test
cwtl
jbe
and
stc
pop
es
andl
inc
movsl
mov
lods
xchg
fsts
out
pusha
rcrl
hlt
or
lock
in
orl
notb
lea
cmp
jge
call
jmp
mov
pop
sub
mov
dec
outsl
jge
sub
mov
dec
jns
in
xor
data16
xlat
enter
add
daa
jmp
std
mov
daa
or
mov
lret
and
jge
imul
or
push
push
add
mov
xchg
xor
popf
ret
dec
mov
insb
hlt
push
pop
adc
mov
jno
mov
mov
cmpb
ret
testb
sahf
cmp
dec
in
enter
lods
fisubrs
xor
jne
lea
cmp
push
or
sbb
mov
out
adc
ret
cltd
orl
outsb
inc
mov
fiaddl
cmp
shll
push
and
mov
sub
loope
push
or
xor
clc
xchg
cmpsb
mov
pop
mov
ljmp
jge,pn
dec
addb
xchg
jb
pop
mov
bound
scas
sub
push
adc
and
push
mov
inc
adc
or
leave
or
aas
push
sbb
push
insl
out
mov
subb
shlb
dec
cmpsl
test
mov
mov
xchg
and
call
mov
sub
leave
bound
adc
aad
stos
and
test
out
repnz
xchg
daa
stos
ficoms
mov
pop
sbb
shlb
xor
outsl
test
leave
movsl
cmpsb
inc
adc
xor
out
aaa
dec
push
xchg
inc
out
imulb
fs
mov
jb
clc
sub
push
sbb
adcb
inc
push
pushf
fistpl
loope
xchg
in
sti
pop
mov
in
pop
jle
xor
adc
and
pop
jno
incb
lret
pandn
dec
or
es
mov
insb
rcrl
add
adc
sub
sbb
push
int
imul
pushf
stos
sbb
arpl
adc
add
ds
in
push
add
fldcw
jl
ret
lock
xchg
jo
mov
imul
test
push
mov
mov
es
push
xchg
mov
fwait
pop
jbe
push
out
mov
imul
jns
adc
in
mov
sahf
mov
lds
test
mov
jo
in
xor
imul
sub
daa
loope
inc
js
outsb
jmp
ret
pop
ja
add
aad
push
xchg
dec
insl
lods
xchg
xor
aad
cmp
jl
idivl
and
clc
stc
data16
fld
push
pop
push
adc
pop
cmc
loope
rcrb
push
and
cmpsl
adc
mov
xchg
cmp
xorb
aas
add
xor
mov
jne
inc
sbb
mov
jno
or
sarl
sti
imul
icebp
loopne
fwait
adc
cmp
subl
in
pop
out
inc
test
ret
shrl
repz
or
in
bound
mov
xor
les
push
ficomps
cmpsb
and
pop
sbb
xchg
push
mov
aas
or
fwait
add
mov
sub
xchg
add
mov
in
push
int3
dec
sarb
sub
and
inc
mov
ret
adc
inc
clc
leave
xor
cmc
pop
inc
outsl
popa
enter
imul
popf
fdivl
push
stos
test
adc
aas
jno
mov
push
adc
shrl
hlt
cmp
js
jne
stc
dec
mov
popa
push
test
scas
stc
mov
fs
adc
jae
cli
out
jl
jno
inc
push
or
pop
ds
cmp
jl
push
or
shll
mov
adc
adc
iret
mov
scas
int3
inc
sub
vmread
xchg
xchg
in
iret
mov
mov
sbb
imulb
pop
pushf
fsubrl
pushf
mov
mov
push
repnz
addl
rclb
nop
jg
adc
hlt
push
in
les
mov
cmp
mov
lea
xchg
pop
pop
pop
xor
mov
std
ret
jno
js
cmp
inc
inc
adc
into
pop
cmp
jecxz
xchg
data16
inc
jl
movsl
inc
xchg
cli
inc
fldcw
out
loope
je
cmp
push
scas
adc
pop
iret
adc
and
jge
mov
push
push
loope
add
cs
fldenv
icebp
int3
adc
and
lret
fmull
pop
popf
ljmp
mov
fwait
jmp
fsubp
dec
movsb
mov
jb
out
mov
das
iret
xchg
lahf
push
mov
shlb
xchg
enter
mov
mov
lea
addl
test
data16
clc
xchg
xchg
cltd
jle
ds
stc
popf
punpckldq
add
dec
xchg
lcall
push
repz
div
and
mov
popf
lea
push
jno
out
pusha
pop
push
inc
nop
sub
cmp
add
jg
lods
cmp
dec
mov
xchg
movsl
pushf
bound
and
leave
fwait
in
clc
aaa
cmp
dec
loopne
pop
sbb
stc
mov
sbb
mov
mov
pop
xchg
in
lods
jmp
cmp
lods
push
popf
jecxz
popa
shlb
cmp
pop
je
pop
adc
je
xchg
hlt
fstp
cld
stos
cmc
pusha
idiv
jne
push
sbb
adc
push
sbb
adc
sub
sub
mov
fimull
or
iret
cmp
shl
and
mov
mov
mov
cs
insl
mov
cmp
ja
ja
sub
xchg
call
mov
xchg
popf
test
pop
imul
add
and
outsb
sub
dec
adc
mov
rorb
fimull
sbb
loop
dec
xor
aaa
ljmp
lcall
mov
lret
mov
pop
pop
dec
mov
pop
push
jmp
mov
lods
inc
jl
push
mov
xchg
cmova
movsb
arpl
mov
ja
sub
das
pop
cs
push
inc
lods
rorl
or
and
mov
or
jns
ds
es
cmpsl
fidivrl
lock
lcall
dec
iret
in
inc
dec
fwait
xchg
and
xchg
shr
aas
das
and
jecxz
xchg
aas
popf
cmc
in
or
mov
aas
lock
mov
std
cmp
cmp
xorb
adc
mov
cltd
out
xchg
sub
enter
rorl
popa
or
add
sub
and
xchg
fsubrs
or
lods
mov
out
pushf
dec
outsb
mov
subl
movsb
cmp
pop
sub
jg
push
xchg
mov
cmp
nop
lds
mov
fstpt
decb
lock
jno
or
cmp
add
or
fistpll
sbb
cmp
cli
outsb
push
mov
movsb
xor
enter
loope
and
ret
icebp
mov
push
cmp
jle
pop
dec
mov
mov
daa
sbb
incl
pop
push
fidivrs
sar
pop
adc
xor
push
push
dec
lods
fstp
add
test
add
or
icebp
into
push
mov
pushf
pop
std
dec
fdivl
mov
cwtl
scas
pop
std
push
mov
mov
add
and
bound
jmp
pop
push
mov
pop
pushf
mov
inc
mov
shlb
test
jno
and
xchg
gs
sub
jae
es
cmp
jmp
enter
sub
ds
shll
dec
adc
imul
int
inc
sbb
and
mov
mov
mov
loop
jg
clc
add
mulb
cmpl
or
rclb
adc
orl
adc
adc
xor
lahf
outsb
shl
stos
fcomi
lahf
cvttps2pi
jl
xchg
scas
pop
inc
pop
and
inc
xor
call
inc
inc
xor
inc
loope
xlat
in
mov
ret
push
and
pop
jecxz
movsb
dec
or
dec
mov
fs
filds
int3
enter
repnz
mov
ficoml
movsb
imul
daa
lods
push
sarl
int
sub
pop
lret
push
jecxz
daa
sub
jge
xchg
xor
fmul
clc
push
in
data16
mov
insb
xchg
out
cs
inc
imul
pop
aad
mov
pusha
add
cmpsl
jge
jnp
out
adc
jno
xor
scas
xchg
sub
sbb
dec
iret
lret
inc
mov
push
inc
sub
jmp
lcall
adcb
jne
or
js
push
push
cmp
jl
or
dec
sub
jge
idivl
ret
inc
sub
lret
stos
shl
lret
cmp
clc
loope
sbb
sub
movsl
mov
dec
xor
dec
in
and
fistpll
repz
das
rcll
cmp
jne
and
push
dec
cmp
push
sub
inc
xor
push
lcall
xchg
xchg
bound
out
in
out
insl
pop
pop
les
nop
out
mov
add
or
in
xorl
ss
andl
mov
lods
movsl
cmp
mov
imul
fsts
out
push
jb
xorb
jnp
pop
mov
js
lahf
dec
adc
jno
inc
xor
out
adc
mov
fnstsw
pop
aam
subb
xor
xor
push
xlat
jmp
in
and
mov
mov
xchg
push
sub
mov
es
inc
popf
dec
out
gs
std
arpl
mov
mov
shll
repnz
out
jnp
sub
fimull
outsb
pop
adc
mov
mov
mov
aam
sahf
xchg
mulb
fstpl
leave
pop
mov
push
jmp
lahf
mov
mov
movsl
out
xchg
insl
fbstp
stos
stos
movsl
lods
mov
out
xchg
mov
cs
sbb
shlb
push
add
xchg
push
sahf
das
int
es
scas
push
mov
adc
xchg
pop
adc
pop
dec
ret
push
nop
jg
jbe
pop
or
lock
outsl
xchg
inc
icebp
loope
push
mov
jae
inc
cmp
xchg
sub
jnp
imul
outsl
bound
lds
mov
cld
rol
fisubl
jb
and
ret
int3
jg
es
sbb
fidivl
std
or
mov
dec
or
sub
subl
sbb
dec
repnz
or
fnstsw
ja
mov
xor
cmpsl
bound
idivb
negb
fs
frstor
jl
mov
mov
aas
sbb
es
pop
into
pop
adc
xchg
add
pop
sahf
out
xor
adc
jmp
add
inc
call
fdivl
mov
popa
xor
sbb
inc
cmpsb
imul
xchg
pop
sub
and
push
and
aas
pop
out
or
xchg
out
sbb
dec
lea
add
sbb
imul
xchg
repz
dec
pop
lret
and
push
pushf
ret
xlat
pop
adc
divb
push
icebp
sbb
ja
cmpl
inc
cmc
adc
mov
rolb
lea
mov
mov
out
add
movsl
xchg
add
cmpsl
inc
and
sub
les
rcrb
sbb
xor
and
into
sahf
cmpsb
mov
fprem
jb
in
hlt
subb
dec
push
mov
jae
jge
mov
xor
or
ret
ss
sbb
fwait
shll
inc
out
fwait
je
dec
clc
jmp
add
dec
fdivs
push
adc
mov
int
fcmovb
pushf
adc
lea
pop
ret
sarb
mov
and
cwtl
lcall
mov
sahf
adc
inc
mov
aaa
fs
xchg
inc
xchg
add
fnstcw
mov
inc
sub
adc
dec
lds
pop
jge
push
in
and
inc
pop
inc
pop
adc
call
push
pusha
sub
xor
add
push
cltd
pop
lret
mov
dec
fcoml
sbb
mov
push
stos
fildl
stos
out
call
jns
shl
dec
dec
mov
inc
scas
filds
cmpsb
inc
jmp
adc
jns
push
in
gs
mov
pop
sbb
clc
mov
insb
pushf
inc
lret
ficoms
jb
lcall
or
xor
jns
fistpll
fwait
cmp
push
aam
dec
shrl
mov
pop
or
sbb
pop
cmpsb
inc
fadds
mov
mov
and
sub
inc
add
push
sbb
fistpll
dec
mov
loopne
dec
shll
sti
pop
push
arpl
or
out
inc
pusha
push
lret
jecxz
xor
mov
movsl
push
pop
loop
mov
adc
ss
mov
enter
notl
imul
cmp
jno
inc
int3
cmp
test
test
pop
adc
push
mov
test
inc
lret
in
lcall
cmp
sahf
sbb
scas
xlat
clc
cmc
daa
xor
pop
inc
adc
inc
pop
lcall
pop
je
mov
dec
pop
push
xchg
xchg
daa
sbbl
jmp
adc
movsb
sarb
shll
mov
rcll
add
lret
out
pusha
sub
aaa
arpl
cmp
inc
pop
stos
pop
jge
test
cmp
push
adc
lods
adc
lret
mov
jae
dec
ds
pop
stc
pop
sub
notb
pushf
cmp
xchg
dec
gs
and
in
mov
cmc
cltd
mov
mov
jb
inc
jmp
xor
dec
sbb
dec
cmp
test
jg
shrl
add
call
das
xlat
cs
sub
push
int
mov
inc
mov
dec
mov
sub
xlat
stc
jl
pop
subl
mov
out
or
inc
or
sub
pop
xorb
inc
push
cmp
out
mov
sahf
push
adc
cs
inc
sbb
cmp
mov
sub
add
aad
xor
push
movsl
cmc
push
bnd
pop
push
pop
aas
inc
push
popa
or
cmp
cmpsb
add
repz
imul
loop
push
lods
dec
mov
push
out
jne
push
push
and
loop
fwait
dec
lds
add
repz
sbb
or
sbb
or
in
push
insl
sub
aad
aas
cmpsb
repnz
in
cmpsb
dec
shrb
push
int
xchg
cli
jg
faddl
adc
push
ficomps
and
not
push
loope
mov
into
sub
icebp
out
mov
adc
push
cli
mov
sbb
test
sarl
popa
jl
arpl
rorb
add
push
xchg
jge
pusha
orb
addr16
sbb
addr16
dec
adc
rclb
sbb
testb
mov
es
not
outsl
inc
ret
xchg
popf
das
ss
lods
inc
or
negb
cmp
sbb
inc
jbe
and
std
shlb
push
mov
add
cmp
popf
stos
insl
movsb
and
stc
in
ja
push
inc
outsl
inc
mov
mov
inc
adc
stos
adc
inc
cmpb
std
iret
gs
cmp
jne
mov
and
or
ret
les
ds
in
ljmp
mov
outsl
dec
test
add
lret
leave
insb
jmp
dec
loopne
adc
stos
jb
fs
loop
cmp
jbe
push
pushf
jp
mov
ret
cltd
adcb
into
nop
jns
int
adc
pop
fmull
dec
dec
mov
bound
push
mov
adc
stos
and
cmpsb
push
ret
sahf
dec
mov
addl
dec
mov
sbb
push
and
fstl
or
popf
test
inc
and
add
cmp
je
inc
cs
in
push
pop
movsl
loop
aam
movsb
sub
enter
fdivrl
lds
outsl
dec
pop
mov
scas
cmpsl
mov
pop
sbb
fcmovnu
mov
loopne
mov
mov
cmp
inc
dec
in
dec
aas
sbb
aaa
ljmp
int3
les
inc
mov
fnstsw
or
fs
jns
out
test
add
inc
sbb
lods
xchg
or
add
cmp
dec
movsb
popa
shll
adc
pop
inc
aas
xor
jbe
dec
xor
rcrl
jo
mov
imul
orb
dec
fs
je
mov
jg
push
cmp
and
ss
gs
sub
repz
xor
push
push
pop
and
or
pop
sub
aam
in
cmp
inc
mov
loop
xchg
mov
in
adc
ret
push
jecxz
mov
jecxz
pop
gs
adc
ss
int3
add
xchg
cwtl
lea
ret
ja
sub
lret
mov
shll
push
aas
sti
aaa
test
adc
call
mov
adc
mov
pop
sbb
inc
cmp
mov
stc
fsubr
sbb
or
xor
scas
test
adc
in
lahf
or
aad
xor
inc
cmpsb
mov
test
xor
mov
rorb
jp
mov
out
ficomps
sbb
mov
roll
sti
leave
inc
mov
add
cwtl
rclb
das
lahf
pop
call
lahf
ss
mov
sub
mov
in
lock
stos
pop
xchg
sbb
xchg
mov
mov
xor
jl
dec
dec
in
sub
and
orl
mov
fmul
jge
cmp
cltd
int
xchg
adc
mov
pop
push
daa
incb
dec
data16
pop
lods
ret
imul
dec
loop
push
bound
xchg
notb
and
inc
mov
lahf
test
mov
nop
mov
dec
sbb
and
pop
jmp
scas
push
lods
xchg
scas
pop
jmp
out
movsl
mov
pop
mov
shrb
stc
lret
fsubrl
mov
adc
xor
imul
adcb
outsb
enter
out
fisubrl
fmul
insl
in
aas
dec
mov
ficomps
push
in
imul
mov
add
aaa
imul
pop
add
popa
mov
fcoml
and
cmpsl
jl
or
pop
gs
xor
es
jbe
scas
lds
jge
inc
adc
sahf
pusha
pop
lods
push
inc
into
fsts
dec
xlat
dec
mov
mov
orl
scas
cltd
addl
repnz
add
leave
loopne
lea
inc
push
mov
inc
fstps
adc
out
cmp
lea
and
icebp
fldt
pop
xchg
cwtl
and
cwtl
ret
clc
lods
shl
push
cmc
pop
cld
dec
jmp
sub
enter
shrb
pop
add
out
int
aas
inc
test
pop
jecxz
lock
mov
fidivrs
mov
jecxz
jp
int3
inc
int3
in
ds
sub
into
stc
orb
out
and
mov
push
pop
inc
stos
cmp
dec
xlat
mov
dec
jnp
mov
adc
xchg
push
stc
cmp
std
sub
sub
jae
idiv
repz
jl
mov
push
push
push
js
xchg
aam
jecxz
movsl
jns
jl
pop
inc
outsb
lahf
test
les
cli
add
rcrb
bound
fwait
je
dec
leave
add
mov
sti
jmp
jne
shrl
fsubs
fwait
adc
push
cmpsb
push
je
pushf
lods
lahf
jne
xchg
loopne
outsb
push
pop
pop
mov
xchg
pop
inc
jo
data16
jl
cmp
jne
pop
jo
into
inc
push
bnd
ljmp
push
adc
out
and
movsl
call
jecxz
push
clc
addr16
jb
cmp
cbtw
in
aas
jl
xor
mov
and
xchg
push
xchg
lods
ficoml
or
mov
sbb
mov
out
xor
jns
adc
add
das
sbb
xchg
mov
jecxz
sub
mov
xchg
les
inc
rcrl
ds
add
inc
mov
pop
push
push
lock
jmp
icebp
mov
cwtl
add
mov
aam
dec
mov
dec
das
repnz
and
pop
lea
call
push
inc
inc
jb
bound
xchg
addb
rol
ret
repnz
adc
add
xor
and
push
push
inc
inc
jb
bound
xchg
addb
rol
ret
repnz
adc
add
xor
and
push
push
inc
inc
jb
bound
xchg
addb
rol
ret
repnz
adc
add
and
push
push
inc
inc
bnd
mov
sbb
dec
cmp
or
sbb
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
