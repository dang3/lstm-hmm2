add
add
outsb
add
add
push
add
ja
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
jb
outsl
add
or
iret
fcomps
insb
or
add
or
pop
add
add
add
or
ret
add
int
xor
xor
imul
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
pop
mov
add
sbb
bound
dec
add
sub
add
sbb
mov
jl
call
add
add
add
sbb
cmp
jl
mov
test
call
add
mov
sbb
cwtl
add
add
test
call
add
add
jl
cltd
add
xchg
add
add
add
int
addb
add
add
add
test
add
add
add
jl
push
add
add
add
add
loop
test
add
add
add
cmpsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
int3
add
add
add
cltd
add
mov
add
inc
add
add
add
mov
mov
add
add
push
add
add
add
add
add
add
add
jl
mov
add
add
add
add
inc
add
add
add
add
add
add
add
mov
mov
jne
and
loop
jb
roll
pop
add
add
add
add
pop
pusha
add
add
inc
add
add
aad
mov
int3
add
add
add
add
add
add
flds
sbb
bound
lcall
add
add
add
aad
inc
add
add
add
incb
jnp
incb
das
add
lahf
add
loop
pop
add
add
add
add
add
xchg
add
add
add
add
test
add
mov
add
add
sbb
flds
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
pop
push
add
add
add
add
add
add
add
fiaddl
loop
mov
add
add
pop
or
add
add
add
add
add
or
push
add
mov
add
add
add
add
add
mov
add
add
dec
add
add
add
add
sbb
test
add
cmp
add
add
add
xor
in
sbb
mov
addb
add
add
add
mov
test
xor
add
add
add
add
add
add
pop
mov
add
add
add
add
add
add
add
je
mov
mov
sbb
flds
dec
add
add
pop
jmp
add
push
add
add
int
jns
pushf
add
add
add
add
lret
add
insl
add
add
add
add
loop
cwtl
add
add
add
add
add
pop
mov
xor
bound
test
mov
flds
incb
loop
out
add
pop
movsb
add
and
pop
jno
and
dec
je
addb
pop
sbbb
loope
dec
rolw
addr16
mov
inc
mov
icebp
inc
outsb
mov
mov
jp
outsb
sbb
add
xlat
lahf
cmp
push
and
out
loop
lahf
mov
xchg
andl
sub
cmpsl
shll
inc
or
lret
fadds
dec
fwait
cmpsl
sbb
xchg
test
inc
cltd
mov
push
push
mov
sar
mov
adc
mov
loop
jb
lods
inc
clc
mov
je
sbb
cmpsl
xchg
out
sbb
and
xchg
insl
xchg
inc
sar
cld
adc
insl
fwait
cs
lds
cmp
mov
shrb
xor
mov
or
push
cmpl
cmpsl
xchg
dec
lcall
pop
sbb
in
pop
mov
mov
imul
dec
cmpsb
je
push
or
scas
jge
mov
scas
lods
sbb
shll
mov
subb
sub
xchg
dec
and
aad
mov
pushf
loope
and
arpl
jp
jnp
push
out
mov
lock
ja
insb
insb
lret
mov
mov
mov
dec
out
dec
inc
aas
sub
stos
or
sbb
dec
mov
and
movsb
mov
pop
xchg
je
jo
nop
icebp
cmc
mov
dec
ljmp
xor
mov
cmpb
lea
icebp
xor
adc
jns
pop
idivb
xor
outsb
xor
xor
leave
adcl
testl
mov
scas
aas
lret
sub
mov
shll
aas
jecxz
lea
shlb
adc
adc
mov
mov
cli
add
mov
fwait
jmp
xor
test
les
mov
xchg
jb
pop
pop
mov
xchg
fldenv
push
or
iret
data16
or
fs
out
lret
aaa
xchg
mov
cli
nop
jp
sti
fs
imul
imul
adc
loopne
leave
imul
pop
int3
xchg
dec
ljmp
rcl
mov
mov
and
mov
mov
cld
and
sub
adc
jecxz
rorb
xor
xchg
mov
rorb
mov
test
inc
adc
in
jmp
shlb
add
in
daa
adc
mov
fcoml
adc
gs
mov
jge
sub
pop
mov
test
dec
scas
mov
jnp
fdivrs
cmp
and
mov
popa
sub
mov
push
enter
dec
jno
test
jno
clc
xchg
addb
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
out
idiv
cmpsb
pushf
idiv
xchg
xchg
jb
into
pop
push
push
push
ja
add
pop
daa
pop
aaa
fcmovb
scas
xlat
repnz
idiv
xchg
xchg
fisubs
cs
jg
push
ja
sub
pop
daa
dec
aaa
push
popa
pop
adc
mov
shrb
je
push
imul
push
adc
and
sahf
mov
xchg
cli
mov
outsb
add
in
jns
sbb
pushf
cmp
outsb
sbb
dec
jl
les
push
xchg
or
rclb
inc
dec
enter
fwait
cwtl
repnz
adcl
mov
inc
scas
jmp
jmp
cwtl
pop
aaa
imul
push
pushw
mov
sub
xchg
repz
mov
testl
addr16
cmp
ret
lcall
lcall
mov
or
mov
xchg
push
inc
dec
push
lods
add
xchg
cmp
add
cmp
sub
enter
xlat
sti
mov
adc
pop
xchg
mov
sbb
pop
lret
dec
pop
in
clc
negl
xchg
and
push
cmp
aas
dec
add
ljmp
cli
stos
ror
lock
daa
jnp
imul
add
push
sub
or
fwait
xchg
aad
lds
into
fwait
test
jl
push
xor
add
aaa
inc
cmove
mov
aaa
decl
out
xchg
fisubs
cs
push
addr16
ja
pop
outsb
pop
pop
daa
dec
aaa
mov
out
idiv
xchg
xchg
fisubs
cs
push
addr16
ja
pop
outsb
pop
pop
daa
dec
aaa
mov
lcall
es
arpl
adc
mov
push
lock
jno
enter
cltd
inc
xchg
push
inc
mov
xor
daa
scas
mov
inc
sub
xlat
cmc
inc
jge
icebp
addr16
nop
idiv
dec
lods
sbb
je
sub
gs
cmp
mov
cs
test
xchg
daa
jmp
cwtl
mov
insl
jg
f2xm1
stos
cld
sbb
movsl
dec
shlb
mov
out
rclb
adc
inc
std
or
aas
dec
nop
sub
or
push
lods
adc
dec
mov
or
outsl
mov
cli
or
imulb
push
pop
adc
mov
cmp
popf
int3
xor
jmp
pusha
cli
xchg
and
fisubrs
into
ljmp
imul
int3
inc
test
roll
ja
sahf
and
pusha
lock
xor
jle
pop
sbb
popf
in
cwtl
add
rorb
add
roll
daa
packsswb
mov
add
mov
push
lret
or
lds
sbb
or
jl
int3
mov
add
add
rcrl
roll
mov
inc
dec
xor
mov
repz
dec
push
arpl
add
mov
cmp
repz
jp
sub
and
ficoms
pushf
in
cli
jecxz
jns
mov
in
subl
ja
dec
gs
into
sbb
fwait
imul
imul
jge
sti
scas
mov
and
or
pop
jae
push
push
dec
das
fsts
jo
mov
and
ss
cli
sub
insl
xchg
test
addl
addb
mov
ja
mov
mov
mov
ret
push
cmp
jp
scas
jne
fisubs
gs
int
pop
and
je
jge
pop
cltd
das
lds
push
scas
leave
inc
pop
mov
jge
sbb
adc
popa
jnp
jle
adc
or
cmp
push
jp
enter
jg
adc
mov
sub
lahf
sub
cld
mov
cmpsl
lods
sbb
hlt
aam
inc
ss
stos
enter
int
push
mov
je
pushf
add
jl
loopne
test
and
and
jno
gs
pop
cmp
sub
int
loop
daa
leave
xchg
je
jp
mov
inc
cld
repnz
cli
mov
aaa
enter
insb
push
sub
adc
and
jle
add
jns
stc
lret
jl
rcll
dec
mov
xchg
inc
lods
pop
cs
fsubrl
das
jl
pop
adc
adc
mov
lods
cwtl
lods
icebp
imul
rcll
push
adc
xor
and
daa
pop
and
inc
inc
pop
ljmp
xor
jp
lret
sub
push
int
mov
jmp
icebp
push
jbe
adc
dec
out
sub
mov
jecxz
and
xchg
jns
jg
inc
jle,pt
aas
inc
ja
xor
pop
push
outsb
lret
insb
dec
aad
in
cltd
imul
scas
dec
xor
je
inc
dec
lret
xor
inc
ret
pop
add
xorl
test
mov
popa
mov
scas
inc
es
mov
adc
pusha
jnp
insl
outsl
in
dec
xchg
xchg
dec
das
idivl
xchg
inc
or
pop
jno
in
sub
sarl
xlat
ja
mov
mov
mov
fwait
sbb
fdivs
jle
xchg
lret
xor
inc
sub
les
stc
and
sbb
mov
daa
cmp
xchg
xchg
addr16
nop
inc
lock
cwtl
add
dec
je
jle
dec
push
jae
orb
pop
adc
ret
dec
mov
mov
dec
push
push
inc
or
test
lret
xor
test
stc
fidivs
xchg
inc
divl
dec
adc
rorl
lahf
pushf
pop
je
dec
mov
cs
ds
xchg
call
in
jno
sub
aad
jbe
shrb
in
nop
mov
aam
insl
in
stos
fildl
loopne
aad
out
sahf
cltd
cmp
loop
sub
push
adc
aad
mov
xor
mov
outsl
mov
int
jnp
push
pop
mov
sub
xor
inc
lret
and
popa
xchg
cmpsb
xor
add
adc
lods
xor
ret
and
push
push
pushf
aas
mov
xor
lcall
test
pop
stos
inc
sahf
bound
aam
add
pop
fistl
divl
stos
leave
pop
and
lcall
inc
movl
mov
clc
xchg
aad
inc
in
mov
jae
jp
adc
fsts
lahf
mov
ja
andl
jp
and
xchg
sbb
jnp
pop
in
stos
in
mov
sub
ja
insl
ret
push
sbb
es
mov
jecxz
inc
sub
out
jmp
cmp
sub
insb
jl
inc
push
sbb
divl
inc
or
push
sub
insb
mov
aas
lret
std
jp
repz
loope
flds
add
or
addr16
pop
stos
sbb
lds
cmpsl
jecxz
push
adc
out
ds
mov
incb
data16
xchg
pop
enter
push
adcl
movsl
sbb
push
or
add
jmp
or
orl
inc
jno
loope
ret
nop
fwait
pop
scas
adc
outsb
unpckhps
test
push
cmc
test
repz
stos
loopne
and
sbb
fwait
and
sti
push
mov
cmpsl
in
sub
inc
ret
xchg
cmp
dec
mov
mov
test
in
test
push
imul
arpl
pop
nop
clc
pop
jmp
pop
ljmp
mov
or
push
popf
sub
fsubrs
in
pop
pop
xchg
mov
adc
add
adc
pop
pop
cmp
std
ret
aas
jmp
in
xlat
cmpsb
scas
pop
jge
and
mov
ret
jnp
pusha
add
sbb
xchg
test
lahf
icebp
mov
ja
call
lock
mov
into
dec
jnp
mov
and
dec
popf
test
in
jae
adc
or
jnp
push
lds
jno
lds
push
lret
adc
inc
out
push
dec
scas
or
push
xchg
enter
call
sub
jmp
sbb
inc
mov
ljmp
fsubrl
jge
orl
test
add
in
gs
xchg
dec
xchg
jecxz
jb
pop
loop,pt
pop
mov
ss
pop
adcl
push
loop
lock
shll
jne
pushf
mov
fisubl
enter
das
mov
cmp
xorl
mov
mov
xchg
mov
and
fwait
clc
je
xor
cltd
dec
dec
sbb
ret
pop
shrb
jl
lods
jns
mov
ror
clc
sbb
and
add
mov
fwait
dec
push
dec
fnstenv
icebp
fmull
loop
pop
enter
lret
push
inc
dec
pop
loop
lods
add
xor
push
dec
aas
test
xchg
ficoml
mov
sub
or
cmp
outsb
xor
lret
jl
fists
mov
xchg
jo
aaa
mov
pop
les
out
push
or
loop
inc
push
and
sub
mov
mov
and
jecxz
mov
push
xchg
push
fdiv
mov
push
stos
lock
mov
rcrb
xor
add
pushl
incl
lahf
pop
pop
and
imul
adc
adc
push
xchg
nop
call
clc
and
repz
lret
mov
xor
ss
sub
fwait
xor
adc
ja
std
jge
stos
clc
mov
dec
add
jecxz
sub
vcvtpd2psx
clc
outsl
dec
outsl
outsb
nop
xor
movsl
push
mov
jnp
ret
orb
xchg
push
mov
pop
repnz
inc
jg
es
mull
dec
jno
out
jl
inc
mov
mov
xchg
and
lret
andb
mov
push
mov
out
mov
inc
pop
xlat
dec
sbb
push
jne
jb
iret
or
xchg
inc
shll
push
fadd
notb
hlt
mov
mov
xchg
add
sub
mov
add
out
xchg
xor
movaps
jns
mov
sub
sti
jmp
sbbb
push
add
jmp
mov
insb
xchg
mov
cmp
xor
sahf
adc
pop
inc
mov
rcl
push
jmp
popa
cmpsb
out
addb
jnp
scas
cmp
lods
cs
inc
lea
and
rcll
out
in
fdivl
ficomps
inc
jmp
jp
mov
call
jno
insb
ret
test
and
in
andl
repnz
or
sub
pop
dec
mov
sub
loopne
mov
push
sahf
pop
mov
mov
test
sub
mov
cmpsl
in
inc
pop
in
fwait
mov
std
mov
popa
dec
push
cs
daa
fildll
arpl
xor
cld
icebp
int3
repz
je
sbb
lea
insb
notb
sbb
jle
stos
dec
lahf
add
cwtl
pop
or
inc
cmc
enter
js
ljmp
sub
lock
aas
push
mov
aam
xor
repz
pusha
push
int
sub
cwtl
aas
push
sub
aad
outsl
ja
or
inc
std
arpl
cli
pop
xchg
mov
in
stos
std
inc
and
dec
xchg
ljmp
std
jl
jmp
mov
push
popf
pop
pop
out
stos
enter
out
lret
jmp
jb
imulb
js
jns
sub
daa
imul
jnp
xor
shll
sbb
pop
push
push
mov
pop
sbb
movsl
jno
adc
jbe
push
lds
int
pop
sbb
sub
lret
cmp
cmc
xchg
hlt
xchg
xor
fs
cmpsb
mov
pop
cmc
dec
out
push
or
pop
repnz
aaa
jecxz
jle
test
jmp
repnz
lahf
or
hlt
in
mov
push
in
dec
mov
scas
fimuls
sbb
pop
mulb
push
jp
add
push
push
mov
push
push
in
leave
xchg
gs
mov
enter
in
inc
sbb
scas
test
and
mov
mov
pop
adc
mov
pop
or
adc
mov
fcoml
cld
push
dec
jg
loopne
dec
jl
mov
sbb
andl
inc
lret
xlat
mov
jns
jnp
xorl
and
jecxz
add
stos
test
aad
popa
adc
js
test
pop
fwait
inc
rcrb
inc
subl
mov
sbb
iret
cmp
aam
addb
push
int3
push
xor
dec
arpl
sbb
fsub
jmp
pop
mov
imul
xchg
cli
jmp
in
dec
jg
stc
jl
pop
cltd
and
mov
cmp
inc
hlt
les
add
rolb
pop
xchg
outsb
outsl
inc
out
test
movb
push
loope
repnz
loope
mov
cli
pop
sbb
dec
push
lds
arpl
rol
test
lret
jp
ret
xchg
push
jecxz
inc
mov
push
fcomps
jl
mov
sub
cmp
push
shl
rcrl
add
dec
imul
or
mov
nop
mov
sbb
inc
into
popa
testl
pop
inc
adc
push
dec
jbe
cmp
inc
cmpsl
ret
in
mov
adc
leave
push
xchg
lea
pop
adc
jnp
inc
adc
xor
xor
and
push
repz
test
inc
push
push
inc
adc
inc
push
or
in
cmp
dec
loop
mov
jno
in
arpl
jl
push
push
imul
fstpt
mov
cwtl
leave
mov
jb
inc
lea
test
inc
mov
jl
pusha
lock
stos
mov
and
daa
inc
in
add
push
add
movsl
pop
adc
test
adc
add
mov
mov
sarb
lods
sub
aad
and
les
sub
daa
dec
call
fcomps
and
repz
je
xchg
pop
lods
cmpl
fbld
cltd
mov
and
rorl
add
dec
jp
dec
shll
mov
outsl
loope
clc
jns
cld
pop
mov
aam
push
test
dec
add
xor
mov
mov
shlb
and
push
icebp
inc
push
sub
in
inc
push
or
sub
ja
ljmp
sti
cmpb
sub
out
cmp
lcall
mov
dec
dec
push
pop
xor
lock
lea
sti
jl
lahf
insl
mov
mov
sub
jg
cli
dec
cmp
mov
cmp
dec
adc
xor
xchg
sbb
mov
mov
jns
dec
pop
fs
mulb
rorb
movsb
mov
rcl
mov
cld
sbb
icebp
push
gs
xor
sbb
jno
adc
xchg
push
sub
lock
jnp
or
addr16
xor
outsb
aas
jno
and
or
mov
loope
fimuls
cwtl
insb
in
hlt
or
repz
sbb
ja
out
and
stc
out
xor
and
xchg
push
inc
and
scas
into
pop
mov
lcall
repnz
pop
push
xchg
jg
jecxz
sbb
push
sbb
pushl
xlat
outsl
xchg
fimull
push
jp
idivb
mov
int3
test
movsl
cmpsl
mov
sbb
pop
outsb
or
jp
lds
out
xchg
leave
jne
pop
out
cmp
jl
cltd
add
scas
lea
mov
clc
mov
imull
or
popf
cs
push
roll
inc
add
sub
mov
lods
mov
sbb
adc
insb
iret
sbb
cmp
or
es
pop
je
mov
jnp
and
lds
sub
jo
mov
mov
mov
dec
leave
dec
cmp
lcall
fisubs
lret
cmp
in
sub
pop
mov
test
gs
mov
aas
rclb
adc
in
mov
add
or
stos
cwtl
mov
xchg
pop
add
cmpl
sbb
xchg
das
xchg
out
pop
in
push
adc
sar
inc
es
mov
dec
ret
fs
and
push
shrl
insb
mov
cmp
mov
movsl
jg
xor
jg
jns
jp
imul
pushf
cmc
mov
aad
jns
ss
addb
hlt
sbb
rorl
jbe
test
xchg
int
and
xchg
pusha
push
scas
insb
jecxz
fdivs
jns
sbb
mov
adc
dec
mov
outsb
inc
out
push
outsb
jg
jg
inc
add
ljmp
test
cwtl
cmp
dec
sub
call
int
adc
push
push
xchg
mov
cmp
lock
sbbl
xor
mov
divl
sub
inc
pushf
cli
xor
cltd
push
in
rcrb
mull
or
or
rclb
data16
push
cmc
mov
xchg
sbb
stc
popa
aad
popf
test
push
sbb
push
in
es
vpsllw
loopne
stos
push
push
and
aad
cmc
xchg
jno
ss
test
inc
loop
xchg
test
mov
xchg
sbb
mov
xchg
popf
data16
xor
insl
and
sete
int
jno
out
jno
fstps
jae
imul
fistpl
mov
mov
mov
ret
add
cmp
fildll
rorl
rcll
rcll
jno
jl
xor
or
jg
push
pop
je
cmp
adc
push
mov
jae
ja
inc
cmp
and
xchg
mov
xchg
es
mov
adc
sub
mov
mov
cmp
fwait
xchg
outsl
and
pusha
test
out
or
cmpsb
imul
ja
or
pop
stos
jl
in
insb
fiaddl
and
leave
gs
xchg
push
mov
sbb
sub
xor
insl
addr16
gs
fst
mov
out
cmp
shrb
and
movsb
xchg
out
out
inc
add
in
cmp
push
lods
sub
call
push
bound
jmp
insl
push
mov
xor
rorb
xorl
mov
sub
inc
fwait
sbb
inc
lds
loop
ret
adc
cmp
in
psubusb
and
sub
andl
cwtl
push
xchg
out
xchg
push
and
push
jns
out
das
lret
fimull
sub
pop
add
inc
inc
xlat
in
ja
daa
fidivrl
push
or
int
ret
fisttpl
push
enter
xor
out
dec
and
jmp
add
fwait
jo
push
iret
cmc
mov
popa
pop
aam
cmp
icebp
shlb
push
lea
dec
pop
adc
les
inc
xor
jae
imul
pop
pop
lods
pop
test
mov
jnp
push
and
dec
mov
inc
inc
pop
cmp
movsl
popl
inc
jne
cld
mov
das
xchg
out
mov
aad
cltd
jp
jle
cmp
xchg
repnz
movsb
stc
fcoml
adc
sub
inc
popf
xchg
push
inc
xchg
dec
mov
cmpl
sub
cmp
mov
xor
push
pop
outsb
insl
ja
and
cmp
hlt
pop
imull
insb
inc
xchg
adc
sub
aaa
ret
mov
insb
js
aad
stc
mov
stc
fs
cmp
shll
out
int3
mov
or
mov
ss
mov
push
and
push
pop
lods
push
dec
icebp
sbb
repz
sbb
jle
mov
mov
enter
jno
push
lret
xor
mov
inc
ljmp
mov
add
inc
dec
data16
mov
inc
in
sahf
sub
cmpsl
xchg
cltd
push
pop
xchg
mov
andb
mov
in
test
sub
jnp
sub
sbb
lea
mov
mov
cmp
rcl
out
cmp
adc
inc
mov
outsl
mov
pop
into
dec
js
add
sbbl
dec
fwait
subl
aad
sbb
jns
mov
adc
add
cmp
repz
cmp
insb
jg
loope,pt
cmp
lds
inc
xlat
adc
ds
mov
movsb
inc
add
lret
push
fimull
sbb
and
shll
cmp
add
outsl
cmp
stc
xchg
nop
aad
fidivl
sbb
test
nop
sbb
mov
int3
pop
push
ss
loope
pop
push
mov
mov
and
mov
and
arpl
mov
fists
jle
jbe
pop
adc
test
jecxz
shrb
mov
add
sbb
dec
in
in
mov
push
dec
jnp
inc
jmp
sub
sub
test
pop
pop
int3
test
jns
pop
fidivl
outsl
pop
out
popa
adc
outsb
push
mov
sub
cs
mov
out
jno
enter
dec
xchg
sarb
add
fyl2x
add
outsl
inc
hlt
cwtl
cmpsb
or
filds
fwait
leave
fwait
add
cmp
mov
or
std
in
loopne
aad
dec
or
imul
inc
frstor
adcb
movsl
ret
xor
mov
pop
xchg
xchg
and
mov
jp
xchg
mov
jb
cld
adc
mov
push
sahf
adc
pop
xor
sub
bound
adc
ret
cmpsl
addr16
movsb
testl
mov
leave
outsl
dec
cmp
add
sbbb
mov
stc
jecxz
inc
fistl
ret
and
pop
pop
scas
xor
xchg
and
xor
jno
fsubrl
inc
dec
mov
adc
stos
xchg
mov
xchg
aaa
scas
out
pushf
loop,pt
hlt
test
flds
mov
mov
sub
mov
daa
mov
test
cs
xor
xchg
and
jns
mov
push
lock
rorl
movsl
mov
ss
add
mov
lret
cwtl
push
push
int3
decl
cmpl
aad
jmp
xor
test
cmpl
in
shrb
sbb
cmp
insb
nop
cmp
mov
mov
xchg
cmp
adc
jne
push
in
push
push
stos
das
sbb
cmp
std
fadds
mov
xor
mov
jp
imul
inc
xlat
pop
fdivs
stc
sbb
mov
dec
xchg
sub
stos
cmp
xchg
stos
xchg
mov
shll
add
mov
mov
incb
into
mov
inc
cs
push
addr16
ja
pop
outsb
pop
pop
daa
dec
aaa
mov
out
idiv
xchg
xchg
fisubs
cs
push
addr16
ja
pop
outsb
pop
pop
daa
dec
aaa
mov
decl
cld
fisubs
cs
out
addr16
jle
add
pop
cmpsb
shrl
add
xchg
fisubs
dec
ja
mov
push
add
jg
outsl
mov
shll
inc
icebp
push
mov
push
aam
mov
mull
jno
add
xor
loope
icebp
push
andl
mov
inc
out
mull
jno
add
adc
shll
loope
icebp
push
andl
mov
inc
out
aam
mov
mov
repz
loopne
jmp
mov
loope
cwtl
push
mov
xor
cmp
push
jbe
mov
lcall
xor
lcall
sbb
andl
pop
sbb
lahf
rorb
jle
xchg
ds
push
aam
inc
mov
hlt
out
inc
pushl
hlt
xchg
mov
mov
add
das
shll
push
and
add
test
clc
insl
mov
mov
fmull
addb
push
cmpsl
adc
lea
daa
fs
or
jle
mov
pop
insl
cmp
inc
sbb
in
cmp
rcll
xchg
mov
xchg
imul
push
push
pop
stos
es
add
notb
xchg
aas
sbb
in
inc
in
xchg
addb
shll
inc
icebp
push
andl
mov
inc
out
mull
jno
add
xor
movsb
arpl
push
in
pop
into
inc
xor
notb
mov
push
rolb
fnstenv
and
jnp
outsb
hlt
jae
lods
mov
jno
test
mov
rcrl
cmpsb
and
aas
cmpsl
xor
xchg
aaa
mov
out
mull
jno
add
xor
loope
icebp
push
andl
mov
inc
out
mull
jno
add
xor
jl
mov
inc
decb
jp
push
cltd
dec
inc
mov
dec
popa
les
mov
repnz
mov
add
mov
or
lock
xor
jno
inc
and
fsubrl
jae
dec
pop
repz
push
jns
pop
lds
nop
shrd
pop
jbe
div
ljmp
pop
aam
inc
pop
or
pop
push
out
inc
je
add
sub
mov
cmpsl
dec
lret
add
or
in
ja
ss
jo
ffreep
cmpb
int3
adc
and
mov
push
mov
jo
add
sub
dec
dec
test
cmp
jbe
je
xchg
xchg
lcall
xlat
lret
aaa
test
shlb
adc
sbb
sbb
aaa
mov
jbe
mov
and
inc
xchg
cmpsb
jnp
add
cmp
xor
test
push
xor
mov
clc
xor
in
bound
jecxz
dec
inc
push
cmp
push
or
mov
shrb
rcrl
aad
sbb
or
scas
ret
dec
cmpsl
ja
imul
out
outsl
xor
push
add
lahf
test
jns
imul
out
pop
mov
mov
rclb
mov
test
adc
cmp
test
mov
dec
scas
pusha
mov
jmp
adc
std
out
jl
leave
or
xor
push
mull
sti
jecxz
jne
dec
ljmp
test
dec
xchg
xchg
pop
mov
hlt
jo
jbe
mov
icebp
jmp
lret
fmull
outsb
lods
or
inc
fdivs
popl
xacquire
mov
outsl
cltd
mov
sub
pop
es
loop
insl
nop
negl
pop
xlat
stc
call
aam
adcb
mov
jbe
loop
loop
daa
cld
mov
repz
arpl
cmpsb
adc
sbb
hlt
lea
xor
and
adc
push
xor
cmc
inc
cmp
add
jb
push
in
xchg
xchg
push
pop
dec
stc
loopne
mov
movsl
mov
mov
xchg
stos
inc
data16
and
fstpl
inc
sub
stc
push
pop
mov
sub
arpl
xor
sbb
mov
mov
and
cmc
dec
cmp
mov
sub
cmp
push
jno
movsl
xchg
enter
inc
mov
jmp
fdivl
rorb
pop
adc
nop
int3
mov
push
mov
dec
xor
inc
cmp
jmp
xor
mov
push
and
mov
mov
jmp
dec
jge
mov
mov
pop
nop
add
lock
dec
loop
ds
jo
ljmp
insb
int3
std
pop
add
jne
lds
sub
arpl
jp
add
pusha
push
add
scas
mov
or
rorl
ret
stos
jno
adc
mov
test
push
loopne
aaa
pop
and
sub
push
xor
mov
int
cmpsb
cmc
out
xchg
test
pushf
dec
fsubrp
sbb
mov
adc
mov
xor
imull
push
es
push
sbb
or
scas
pop
pop
or
ljmp
data16
jecxz
push
out
sar
push
ret
add
bound
pop
pop
stos
popa
test
rorl
cli
outsb
fistl
add
cmp
xor
lret
inc
jo
ret
int
dec
adc
imul
ljmp
cmp
add
js
and
adc
int
fisttpll
sti
addl
push
sbb
call
push
cmp
pop
shll
cltd
xor
adc
shl
pop
stos
in
adc
or
push
sbb
xchg
das
pop
add
cmpb
arpl
loope,pn
add
adc
dec
sti
mov
insl
add
je
out
adc
daa
mov
movsb
xor
dec
ds
loop
mov
cmpsl
jl
out
into
pop
adc
inc
and
pop
sub
sub
nop
stos
sub
stos
dec
clc
mov
dec
daa
and
mov
cmc
add
and
sub
and
jbe
inc
hlt
icebp
mov
filds
pop
incb
jbe
je
push
ret
mov
push
add
movsl
fisubrs
pop
ljmp
cwtl
sti
dec
xor
call
add
xor
stc
pop
fisttpll
xor
cmc
repnz
push
add
mov
adc
call
icebp
gs
mov
scas
inc
mov
cmp
push
ror
das
dec
sar
sbb
sbb
mov
imul
nop
xorl
and
loop
sbb
pusha
repz
mov
lock
stc
pop
add
sub
push
xor
out
adc
xor
icebp
pop
arpl
or
dec
into
adc
scas
mov
in
dec
dec
dec
cld
dec
push
sbb
add
push
cli
cmp
xchg
pop
shrl
popa
popa
push
addb
xlat
inc
cmp
imul
dec
pop
les
adc
movsl
jno
arpl
lock
mov
pop
sub
int3
and
xor
and
xchg
in
mov
mov
mov
push
and
out
mov
out
or
aad
cli
cld
xor
stos
ljmp
das
out
into
cmp
lods
jns
cld
fstl
fwait
sub
fsts
rorb
jg
jmp
mov
mov
sub
nop
aas
or
lods
pop
xchg
xchg
lods
inc
dec
jbe
outsl
and
scas
adc
stos
mov
js,pn
popf
push
addb
mov
push
shlb
adc
es
add
aas
imul
shrl
jg
or
sbb
and
imul
test
popa
inc
dec
mov
dec
test
rolb
mov
cmp
xchg
std
xchg
push
mov
movsb
sub
outsl
hlt
out
int
jl
adc
cmpsl
adc
pop
sbb
popf
xor
xchg
or
pop
clc
shlb
movsl
in
xor
aad
xor
and
mov
sti
inc
negb
inc
out
and
push
inc
sub
mov
xor
gs
fldl
ret
stos
mov
pop
push
ror
jg
movsl
gs
xor
adc
sbb
inc
inc
xor
xchg
nop
or
jmp
or
subb
jl,pt
sub
scas
jbe
repz
clc
xor
dec
outsb
imul
xor
dec
dec
jbe
mov
int3
mov
add
xchg
lods
and
mov
cmp
sbb
lret
inc
in
lds
cmp
jle
xchg
test
sub
inc
pop
mov
incb
and
cwtl
daa
adc
enter
ret
das
fdivrl
mov
inc
out
sbb
repnz
popf
out
jmp
in
movsl
push
cmp
xor
nop
or
jnp
mov
adcb
lock
sarl
out
int
lcall
int3
out
xor
dec
out
fdivl
neg
adcb
mov
and
dec
daa
inc
cmp
and
lret
dec
pop
inc
lds
pop
stos
outsl
add
test
jo
dec
inc
and
dec
dec
test
jp
ret
xchg
fwait
mull
nop
dec
pop
scas
fs
mov
mov
dec
or
inc
push
sub
sub
xchg
pop
lcall
leave
cli
test
pop
xchg
mov
aam
cli
repnz
jmp
inc
ljmp
or
inc
testb
push
dec
sbb
pop
daa
pop
sub
sub
push
sbb
ljmp
pop
mov
frstor
mov
xlat
sbb
inc
rclb
nop
jge
das
lods
push
push
sub
jecxz
jg
sti
pop
mov
sbb
fsubs
addr16
or
loopne
rolb
or
cs
inc
sbb
jge
or
dec
adc
sarb
fucom
push
fists
or
pop
mov
ret
inc
mov
lahf
fdivs
mov
jb
xchg
mov
or
packssdw
pop
shlb
dec
mov
fs
jl
ret
dec
dec
xor
negb
outsl
xchg
cmpsl
out
pop
lods
inc
dec
mov
outsl
cld
xlat
inc
add
loop
pop
adc
push
iret
testl
cmp
cmp
sbb
dec
and
xor
repnz
mov
or
jmp
inc
ret
sub
je
mov
mov
pusha
inc
mov
dec
xlat
or
dec
andb
inc
dec
imul
mov
sub
je
push
roll
call
sbb
in
cmp
add
pop
adc
xor
jbe
mov
mov
gs
movsl
mov
sahf
cltd
movsb
mov
mov
push
dec
xchg
icebp
call
pop
cmp
stos
pop
xor
mov
cmpsb
mov
fs
mov
or
test
addr16
push
adc
inc
or
adc
and
rol
lock
sub
pop
sbbb
fcomps
push
mov
mov
mov
jg
cmp
inc
xlat
sbb
imul
or
or
lea
mov
adc
pusha
pushf
or
daa
pop
pop
es
je
fbstp
mov
adc
adc
and
test
push
cmpb
ja
insb
pop
jns
lret
jns
out
inc
and
inc
pop
add
pop
add
lahf
pop
adc
scas
pop
sub
dec
in
dec
andb
push
sbb
fnstcw
imul
mov
and
fstl
push
push
fwait
cmpsl
pop
hlt
mov
xchg
or
cmp
imul
inc
pushl
hlt
repnz
push
in
mov
push
xor
fnstcw
lahf
lods
or
popa
adcl
add
and
ficomps
aas
or
xor
int
cli
pop
push
sub
enter
dec
inc
scas
lock
xchg
lods
outsl
ret
inc
es
xchg
decl
fsub
lods
dec
loope
lds
mov
adc
repz
fwait
movd
push
loop
loopne
in
xchg
or
jb
aam
push
imul
mov
and
int3
push
dec
push
jo
jo
stos
mov
pop
sbb
sbb
sub
and
ret
pop
in
xor
mov
inc
aam
ljmp
cmpb
pusha
lahf
inc
or
push
orl
sbb
fdivs
jno
mov
mov
leave
cmpsb
std
divl
pop
cmpsl
in
data16
xchg
push
xchg
pop
frstor
insb
das
adc
das
divb
adc
adc
scas
imul
cmpsb
mov
mov
ds
xlat
scas
mov
sahf
push
cmp
shrb
inc
je
push
sub
xchg
xchg
xchg
sbb
loopne
mov
imul
inc
or
lea
sbb
gs
dec
iret
sbb
out
xchg
mov
nop
inc
out
cltd
and
mov
jp
pop
cmpb
or
pop
subl
cmp
mov
push
push
ds
mov
sub
and
sarl
pusha
ss
push
rcrb
and
movsb
jl
push
ja
sarl
test
int
cmp
icebp
sbb
jl
repz
add
or
popf
cmp
xchg
out
pop
cwtl
aad
pop
insl
dec
jp
es
mov
jne
iret
movsl
sub
add
and
cmc
push
cmp
push
or
mov
sar
movsl
cmp
sub
aaa
in
mov
shrb
mov
mov
insb
push
ret
call
sub
out
push
shll
clc
pop
aaa
jne
or
mov
add
pop
jb
fdivl
pinsrw
mov
xchg
fwait
shlb
xor
fs
lret
cmp
xchg
sbb
aaa
fisttpll
dec
xchg
outsl
out
mov
fsts
cld
lods
movsl
lahf
in
jbe,pt
and
push
mov
sub
push
xor
jmp
imul
add
push
dec
aad
pop
leave
notb
cmpsb
adc
xor
and
sbb
je
jb
mov
fldl
inc
sbb
xchg
stc
cmc
inc
shr
or
lahf
repz
xchg
sub
sbb
in
sub
aam
mov
inc
jle
shrb
in
imul
jo
dec
and
pusha
rclb
jp
mov
xchg
jns
fildll
pop
cmp
stc
cmp
mov
test
hlt
imul
sub
push
mov
xor
js
add
inc
bound
xorl
add
push
mov
orb
leave
outsb
add
push
mulb
out
mov
cmp
lds
cmp
push
outsl
and
xchg
lahf
shr
xor
xchg
sti
cmp
mov
mov
shlb
das
dec
xor
pushl
push
pop
inc
ret
in
inc
add
fstl
icebp
cmp
fs
xchg
lret
das
int
xchg
pusha
addl
in
adc
fstpl
mov
inc
xor
fst
cmp
push
daa
cmp
add
adc
push
push
mov
ss
cmp
fwait
out
mov
inc
and
mov
ds
jns
sbb
int
add
cli
jbe
jno
outsb
fstps
cmc
ret
mov
or
ffree
xor
outsb
out
xchg
xor
int3
bound
mov
pusha
les
add
jb
jns
pop
mov
pop
pop
lahf
or
pushf
enter
adc
negl
cmp
jnp
out
cmp
xor
mov
fmull
imul
mov
xor
xor
xchg
mov
cmpsl
movb
push
aad
fstpt
cmp
dec
lret
sub
lock
cmp
lret
out
inc
jp
mov
dec
out
arpl
hlt
push
jnp
mov
sarl
cmpb
jno
or
sbb
add
mov
scas
stos
lds
mov
sub
out
outsl
stc
xor
lret
mov
sahf
cmp
add
inc
jnp
sub
out
jecxz
jae
push
leave
in
mov
shlb
sub
and
push
pop
into
in
insl
xchg
addr16
fs
cmp
subb
and
fwait
pop
xor
or
mov
push
into
jp
inc
pop
int
into
dec
adc
daa
lahf
shrl
cld
mov
gs
adc
into
sub
movsl
or
adcb
ret
dec
mov
cmp
ds
sti
cmp
jne
roll
sbb
jg
pop
outsb
rorb
loop
movsl
jnp
das
mov
inc
fwait
adc
aas
sbbl
sub
sbb
pushf
mov
push
mov
stos
adc
fsubrl
mov
add
sub
lcall
and
cmpsb
mov
sarb
out
adc
stc
fidivl
int3
int3
nop
xor
jp
js
add
movsb
andl
jns
cmpsb
rolb
cltd
les
je
mov
loopne
mov
jno
xchg
mov
mov
pusha
mov
pop
xorb
sbb
push
sbb
rorb
enter
pop
fmulp
jo
pop
mov
lods
or
in
ret
sub
mov
mov
fdivp
mov
jmp
in
xor
cwtl
mov
adc
in
and
mov
pop
cmp
lods
repnz
jns
jbe
pushf
fisubrl
mov
adc
sbb
jnp
mov
or
pop
scas
xor
std
xor
xchg
mov
xchg
out
and
jne
sbb
hlt
xlat
outsb
dec
test
addr16
out
sub
dec
push
fstps
stos
jae
mov
push
fidivs
add
cmpl
mov
flds
aam
xlat
popf
push
pop
add
sti
notb
push
stc
jle
lods
filds
outsl
push
out
jb
inc
insb
rorl
inc
dec
or
push
push
jbe
gs
and
fbld
loop
daa
lret
or
xlat
testb
adc
push
out
push
pop
pushf
dec
fwait
cs
imul
add
inc
push
mov
lret
movsl
aas
in
push
cmc
ja
enter
jae
jns
adc
xorb
fmuls
push
pop
dec
lret
stos
xchg
into
movsl
cmpsb
orb
add
adc
sub
cld
jecxz
fidivrs
fwait
pop
out
adc
fnstcw
inc
repz
int
idivl
cs
scas
dec
mov
in
sbb
enter
loope
out
ret
divl
faddl
jle
cmc
ss
or
nop
loop
dec
push
stos
mov
daa
xor
and
mov
mov
leave
jb
push
ss
lods
mov
in
leave
sarl
repnz
les
enter
sub
sub
mov
out
jmp
sarl
das
cmp
mov
loop
inc
xor
sub
bound
lret
lcall
mov
lret
lods
sbb
imul
jo
pop
out
push
and
dec
mov
adc
rcll
mov
or
xor
cmp
in
mov
in
filds
mov
mov
addr16
xchg
lcall
jnp
ss
ja
cmp
rorl
icebp
icebp
push
or
dec
mov
int
cmp
mov
mov
scas
clc
shll
subl
fmuls
mov
jo
pop
int3
dec
leave
je
mov
mov
adc
fsubs
rcrl
inc
and
hlt
les
fs
jle
dec
idivb
sahf
outsl
lock
xor
lahf
ss
out
mov
ja
mov
sbb
jp
repnz
mov
call
and
jbe
ja
in
mov
mov
stos
idivl
or
and
test
sahf
sti
mov
mov
mov
js
mov
ljmp
stc
cltd
push
test
daa
pop
pushl
lea
aam
jmp
fcmovnb
andb
fstpl
cmp
jmp
or
pop
gs
shlb
fwait
jp
std
mov
iret
inc
dec
sub
sbbl
dec
and
jg
xchg
sahf
fucomp
inc
cwtl
mov
and
mov
inc
ret
jno
sbb
pop
fdiv
lds
or
sbb
lahf
push
cs
jle
cwtl
lret
dec
or
inc
inc
xor
mul
xor
mov
xchg
out
mov
mov
lds
fwait
mov
sub
or
outsl
ret
inc
mov
fldcw
cmpsl
cmp
xchg
test
in
xchg
addr16
dec
mov
mov
pop
pop
and
mov
push
fwait
xchg
fdivr
fildll
push
mov
mul
jnp
out
push
les
sub
push
lods
shlb
test
sarl
pusha
cmp
fcompl
enter
or
and
or
lcall
jp
mov
cmpsl
in
and
lret
push
cli
sbb
gs
lods
mov
push
outsl
gs
fs
ret
push
push
out
movsb
push
jo
sub
adc
dec
std
dec
inc
cmpsl
call
mov
das
jnp
and
mov
inc
xor
or
lcall
sbb
decb
sub
push
loopne
xor
cli
pop
or
dec
or
dec
sub
xor
sub
sar
cmc
ret
mov
icebp
push
les
dec
and
adcb
xor
mov
popf
and
imul
outsb
adc
fcoms
dec
cmp
xor
hlt
sub
pop
rolb
fs
pop
loopw
mov
inc
pop
loopne
int3
lahf
inc
movsl
cmp
pop
aaa
cld
cltd
insl
and
push
jnp
cli
daa
and
mulb
mov
aaa
ljmp
es
sbb
jmp
fwait
dec
add
jmp
insb
xor
mov
out
sub
and
fsubrp
fisttps
std
or
int3
xor
outsb
jo
fidivl
jg
dec
push
inc
and
bndstx
push
aam
jb
jno
aad
int3
mov
inc
add
imul
sbb
out
fisubs
daa
rcl
cwtl
and
dec
mov
shlb
loope
mov
pop
dec
mov
xlat
push
pop
insl
movsb
push
xor
out
xchg
sqrtps
dec
or
push
sbb
dec
jp
nop
repnz
mov
rsqrtps
cld
shld
stos
nop
dec
sahf
pusha
push
xor
js
imul
out
mov
movsl
cmp
int
and
adc
xor
shr
xchg
sbb
or
sub
imul
scas
xchg
mov
inc
dec
aaa
mov
and
je
rcrb
stc
cmpsl
cmpsb
repz
or
adc
jne
stos
sbb
mov
test
inc
outsb
in
das
adc
xor
ja
inc
icebp
push
andl
mov
inc
out
mull
jno
add
xor
loope
icebp
push
andl
mov
inc
out
mull
jno
add
xor
loope
icebp
push
andl
mov
inc
out
mull
jo
add
xor
loope
icebp
push
andl
xor
mov
jno
jbe
cltd
dec
fnstcw
push
in
xor
mov
push
pushl
movl
movl
movb
push
push
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
mov
mov
lea
push
movl
movb
movl
movb
movb
movb
movl
call
pop
pop
leave
ret
xor
and
adc
add
aas
and
mov
mov
shl
shl
shl
add
adc
and
xor
popa
fstl
inc
add
xchg
mov
loope
shll
and
adc
popa
insl
push
popl
mov
xor
incb
mov
outsb
add
adc
mov
jge
test
sbb
icebp
mov
movsb
pop
andb
dec
jnp
lea
and
outsb
leave
jle
push
shl
xchg
dec
jl
add
adc
cmp
adc
fcmovb
pop
cli
mov
cmc
adc
sub
cmp
loope
shll
and
jnp
add
aam
inc
mov
and
outsl
xchg
jmp
push
shlb
into
adc
stc
icebp
jb
mov
gs
adc
imul
adc
cld
mov
xchg
push
rolb
rcr
shlb
mov
mov
xchg
rcr
and
out
push
stc
outsb
pop
test
cs
loope
jne
add
loope
movsl
add
jno
popa
push
push
mov
mov
stc
icebp
in
loope
shl
rcrl
bound
jno
adc
xor
mov
fdiv
scas
loope
mov
xchg
je
insl
adc
cs
sub
adc
xchg
les
popf
mov
push
and
jno
push
cmp
popa
inc
jno
andl
rcl
loope
icebp
xor
and
adc
add
jno
popa
push
push
popa
inc
jno
andl
rcl
loope
icebp
xor
add
mov
adc
push
cmp
sub
das
mov
pushf
pop
push
xchg
in
jbe
cmp
xchg
fldenv
add
or
mov
push
nop
add
mov
cmp
xchg
mov
inc
aaa
pop
sarb
repz
movsl
loopne
aas
inc
test
scas
mov
hlt
pop
mov
xor
or
js
cmp
fistpl
aad
inc
imul
arpl
push
inc
pop
and
inc
xchg
subl
jmp
movsl
inc
test
dec
rorb
es
mov
push
out
lret
xchg
push
jl
int
pop
xor
cwtl
addr16
adc
cmp
and
not
out
test
jbe
push
popf
loop
jbe
xchg
xchg
add
enter
ljmp
jp
cmc
jns
sbb
and
out
mov
sbb
mov
inc
or
cld
mov
mov
cmc
pushf
mov
mov
xchg
mov
xlat
sub
lret
jecxz
xchg
pop
push
into
test
dec
fs
cli
cwtl
lds
cmovge
xorl
stc
ss
rcll
out
sub
jne
pop
lcall
lock
cld
or
imul
cld
in
popf
aam
lahf
inc
ret
lds
xchg
rorb
pop
cmp
xor
mov
sbb
dec
jl
ficoms
pop
arpl
inc
test
stos
push
je
mov
sbb
in
ja
out
mov
ds
fdivrp
pop
jbe
sbb
mov
sub
rcrb
add
insb
sarl
sbb
and
loop
xor
dec
xchg
es
int3
aad
sbb
into
pop
popa
pushf
or
xchg
xchg
pop
mulb
mov
adc
push
adc
ja
repz
cmpsl
mov
popa
xor
fisttpl
push
or
push
test
scas
jns
sub
lock
sbb
popa
jo
fidivrl
orl
dec
or
pushf
mov
sub
mov
stos
mov
dec
push
inc
dec
sub
stos
clc
pop
mov
movsb
cmp
ds
rorb
xchg
fadds
push
push
add
cli
xchg
dec
mov
into
sub
pop
fimuls
ja
ljmp
xlat
sbb
cli
ret
adc
mov
and
aad
mov
dec
and
js
inc
dec
popa
and
and
or
and
jnp
test
vmovntps
dec
cwtl
dec
adc
or
movsl
jbe
xchg
lcall
inc
inc
cltd
std
fidivl
xor
sub
push
xchg
rcll
cwtl
ss
xchg
int3
push
and
add
lock
ljmp
je
xchg
loopne
je
test
movsl
lds
dec
inc
lea
or
cmpsb
and
aam
int
test
pop
daa
nop
cmp
mov
inc
mov
repz
adc
pop
sub
jmp
dec
or
xchg
jne
sti
jns
jb
stc
ret
ljmp
mov
or
add
inc
push
mov
aaa
pushf
jecxz
inc
scas
in
pop
ss
aaa
repz
mov
cmp
out
push
pop
adc
cmp
mov
adcb
stos
xor
xlat
shl
cmp
or
int3
sbb
test
movsl
bound
movsl
fimull
xchg
rcr
call
or
push
or
xchg
dec
add
push
es
mov
inc
xor
lahf
xchg
mov
dec
insl
out
pop
or
in
std
adc
pop
xor
rorb
and
sub
mov
mov
rcll
fst
mov
pop
push
push
inc
xor
out
pop
sub
popa
rclb
xlat
sbb
outsl
add
dec
mov
dec
xchg
xchg
es
out
cmp
adc
xor
mov
jle
or
jnp
sbb
in
jle
sbb
xor
sub
addl
mov
popa
xchg
repnz
jno
mov
rcll
cmp
xchg
inc
pushf
pop
movsb
stos
into
lahf
mov
les
push
or
cmpl
aaa
ja
or
push
in
sub
or
fiaddl
mov
inc
cmp
mov
mov
sbb
out
dec
dec
cs
lods
push
iret
adc
aas
rolb
insl
add
out
push
mov
push
out
push
adc
mov
cmp
sbb
add
sti
movsb
insl
sbb
adc
cmp
cmp
mov
scas
lret
push
add
mov
jne
rol
pop
cmp
sahf
xchg
mov
or
lret
or
fdivrs
inc
jg
xor
lret
dec
mov
insl
jbe
pop
lret
mov
movsb
or
cli
sti
xor
xor
push
popf
push
out
and
outsl
inc
sub
mov
add
mov
mov
popf
xchg
fidivrs
movsb
mov
jle
push
dec
adc
cmpsl
dec
ljmp
aas
rorl
push
and
lea
xchg
lds
cmp
sub
data16
xchg
push
out
subb
adc
mov
cmp
pop
mov
dec
dec
mov
add
les
adc
inc
mov
call
mov
or
mov
dec
inc
mov
mov
aad
fsubrl
fsts
cmp
movsl
icebp
enter
inc
dec
or
or
arpl
out
test
pusha
and
xchg
or
cmp
push
rcr
imul
ja
adc
lea
mov
sahf
insb
and
inc
pushf
outsl
and
test
fnstenv
popf
pusha
adcl
into
dec
aad
push
fwait
sbb
jmp
fildll
mov
pop
sarb
mov
xchg
xchg
adc
or
aas
cwtl
jno
out
enter
sub
and
in
out
push
aas
push
and
ffreep
ja
adc
cmp
ror
mov
cs
push
lret
loope
std
cmp
out
cs
push
jmp
hlt
push
pop
and
xchg
push
pop
jmp
es
dec
and
add
push
mov
push
adc
mov
movsb
inc
imul
cmpsl
pinsrw
mov
dec
in
push
dec
push
pop
xlat
enter
dec
in
leave
in
xor
sbb
inc
pop
sarl
notl
cwtl
insl
aas
dec
sarl
pop
movlps
jmp
adc
test
das
jge
jae
add
mov
test
sub
popf
and
jne
fidivrs
pop
push
repz
rorl
cmpb
pop
inc
imul
xor
outsb
rcr
nop
imul
sbb
or
sub
lahf
imul
test
and
orb
repnz
std
mov
mov
stos
and
adcl
mov
mov
in
inc
fcoml
bt
out
push
scas
dec
xor
dec
adc
inc
jns
movsl
repnz
inc
jle
cmc
les
xor
pop
pop
sahf
mov
test
push
imul
test
or
push
jo
scas
dec
sub
sbb
cmp
sbb
stos
push
lret
xchg
in
mov
js
xor
bswap
fstpt
jne
mov
inc
scas
call
shll
push
imul
fidivrs
add
jl
push
jns
lcall
aam
jo
data16
pop
and
out
mov
test
adc
sbb
stc
pop
mov
mov
dec
movsl
aam
sub
shll
fistl
or
je
addb
sub
out
or
inc
cmp
imul
in
ret
stc
and
insb
xchg
jnp
mov
jns
dec
mov
dec
leave
dec
dec
test
rcrb
sub
push
int
push
inc
mov
shrl
enter
pop
inc
fcmove
addr16
lret
xor
nop
cs
mov
mov
jg
sbb
fwait
xchg
pop
pop
popa
out
fdivrl
lret
imul
ja
cmp
and
fstps
jmp
ja
fsqrt
mov
xor
mov
mov
cmp
sub
fdivrs
in
pop
xor
xchg
test
movsl
imul
mov
and
popf
fcmovnb
xor
push
outsl
mov
fldt
stos
cltd
inc
jno
inc
push
and
call
fstpt
mov
into
lahf
lods
lods
or
jmp
cmp
mov
pop
insl
je
stc
xchg
rclb
push
andb
jecxz
gs
xor
jbe
inc
dec
xchg
jae
inc
cmpl
ret
imul
mov
ficompl
test
dec
push
imul
mov
sbbl
test
inc
jg
inc
or
sarl
cmp
push
clc
sub
rclb
sub
cmp
movsl
daa
out
lds
add
decb
mov
fwait
sub
mov
cwtl
mov
and
fs
xlat
outsl
mov
lret
xor
xor
inc
test
pop
lods
mov
ss
out
inc
outsl
inc
inc
jmp
or
cvtps2pi
cmp
jmp
xchg
out
mov
sbb
ja
mov
jle
lods
mov
pop
imull
push
xor
out
mov
aad
sbb
mov
sahf
dec
jp
fmul
lods
ret
fisttps
push
add
daa
mov
add
rcll
outsl
iret
mov
mov
cltd
mov
shr
and
addb
insb
adcl
adc
cld
in
movsl
ljmp
jmp
mov
in
shll
stos
fildll
push
inc
popa
push
gs
push
cmp
pop
xchg
or
mov
cmp
push
ja
aaa
inc
xor
test
iret
in
xor
inc
mov
jle
inc
fwait
mov
push
cli
mov
adc
popf
out
sub
enter
fdivl
cmpsb
add
inc
inc
inc
idivb
aam
add
mov
cltd
inc
pushf
mov
xchg
mov
push
popa
lds
push
shll
repnz
lods
pop
ficompl
std
lods
push
push
cwtl
mov
mov
push
sub
sbb
mov
push
xchg
xchg
add
cmpl
dec
sbb
push
mov
cli
int
inc
dec
in
lcall
pop
cmpsl
iret
sbb
rcr
mov
dec
fdivrs
mov
imul
cmp
fnsave
adc
lret
sub
xor
shll
scas
clc
insb
mov
repz
push
loop
mov
out
xchg
xchg
int
inc
jns
jae
lahf
lahf
rorl
lock
sbb
js
ja
lock
sub
mov
scas
xchg
movsb
stos
test
and
pop
mov
jns
jecxz
pop
xchg
jecxz
gs
push
xchg
dec
jl
iret
xchg
inc
shrb
add
clc
or
sub
push
cmpsb
lret
sbb
lret
sti
mov
aaa
outsb
and
and
lods
in
and
push
adc
mov
push
insb
lock
subl
sarb
pop
pop
add
cmp
jns
dec
push
mov
test
fwait
orb
jnp
gs
adc
loopne
mov
push
jne
std
inc
xor
insb
adc
fs
shlb
cli
scas
fwait
jmp
aas
lock
xor
mov
and
mov
cwtl
push
mov
hlt
pop
dec
push
mov
repnz
in
mov
in
or
sub
pop
jg
inc
repnz
lcall
adcl
jl
arpl
ret
add
inc
xchg
sub
cld
pop
aam
in
shlb
jecxz
ficoml
mov
ljmp
loope
cwtl
mov
js
int
xor
mov
sub
aad
xchg
ja
cli
insb
mov
scas
gs
push
dec
inc
fcmove
push
pop
fptan
imul
fs
and
inc
or
fs
and
jle
or
dec
sub
add
add
adc
mov
mov
and
fldt
pusha
testl
mov
repz
pop
shrb
jns
mov
jecxz
jecxz
sbb
push
idivl
add
or
bound
sbbb
push
scas
dec
lcall
outsl
xchg
int3
add
movsl
nop
int
divb
sbb
mov
jae
aaa
xor
mov
push
xchg
sbb
pop
sbb
stos
leave
sub
push
fldcw
xchg
add
push
pop
mov
or
inc
jle
jp
jmp
sbb
cmp
fidivl
adc
scas
adc
in
or
and
xchg
outsb
push
nop
mull
call
adc
or
mov
scas
test
xchg
call
mov
enter
mov
data16
icebp
or
test
mul
gs
pop
inc
movsl
call
sub
push
roll
inc
fstl
cmp
gs
and
in
inc
outsb
cltd
scas
movsl
lods
ja
mov
dec
lods
xor
ss
cmp
aas
dec
mov
daa
sub
sti
sub
data16
jp
mov
xor
jbe
decb
loopne
pop
cmpsb
mov
xchg
pushf
std
mov
and
push
shll
out
mov
fildll
hlt
ficompl
movsb
push
clc
mov
mov
sub
dec
int
sbb
push
out
fsubs
cmc
mov
pusha
std
ret
test
or
fmul
adc
jl
push
dec
dec
or
xchg
pusha
cmp
xchg
outsl
divb
scas
std
adc
sbb
jbe
nop
mov
mov
dec
jnp
or
lret
mov
add
xor
fs
or
mov
popa
jg
xor
shll
xor
and
pop
aam
aam
int
out
shl
push
xor
insl
imul
movsl
in
jnp
sbb
sub
out
push
pusha
rcll
mov
cmp
cld
pop
xor
rcll
movsl
xchg
sub
aad
movsb
sarl
add
adc
jge
jae
xor
aas
inc
cltd
pop
sbb
rclb
in
mov
push
pop
jns
and
or
push
pop
rcr
mov
insl
pop
sbbl
test
add
push
dec
xchg
rcll
push
test
dec
cmp
scas
inc
out
jmp
push
pop
inc
aad
cmp
cmp
jl
cltd
loop
and
imul
or
in
insb
mov
cmp
or
pushf
add
cmp
inc
mov
or
stc
inc
dec
cld
in
jns
insl
ja
cmp
notl
push
jno
push
adc
mov
lods
xchg
fwait
pop
shll
test
outsl
xlat
adcb
out
xchg
dec
sub
imul
les
rorl
pop
inc
inc
rol
mov
leave
push
xchg
mov
jl
movsb
lock
enter
scas
mov
jns
fnstenv
ljmp
jne
mov
js
push
mov
dec
lds
inc
icebp
add
dec
outsl
jecxz
adc
adc
adcl
sub
in
ret
insl
mov
mov
pop
aam
hlt
ds
es
push
xlat
lcall
sahf
jmp
clc
pop
dec
bound
fisubrl
mov
fwait
inc
jb
or
pop
xchg
dec
jl
jecxz
sub
pop
jecxz
imul
stos
fidivs
cs
dec
adc
sar
loope
or
push
andl
mov
mov
xchg
mov
jb
test
push
fildll
pusha
addr16
cltd
dec
sbb
push
js
scas
test
in
loop
jp
ljmp
loop
shll
xchg
mov
pop
add
into
std
mov
pop
xor
adc
pop
pop
mov
adc
mov
cmp
leave
push
xlat
cs
xchg
sub
lock
inc
push
aam
dec
mov
jnp
stc
push
mov
mov
dec
dec
or
mov
or
sbb
mov
fwait
xchg
jp
xor
ja
imul
ficompl
out
dec
cmp
enter
insb
push
sahf
fstpt
xor
punpckhbw
lret
jbe,pt
aas
enter
decb
out
in
fwait
add
sub
clc
mov
dec
cmp
ret
jo
lahf
loopne
and
xchg
cmp
aam
hlt
es
in
pop
aam
addb
pop
inc
mov
arpl
add
mov
adc
lret
lods
bound
xchg
out
aaa
jo
jmp
push
xor
push
lret
mov
jns
lock
lea
out
incl
out
and
jnp
mov
xor
fcomip
rorb
cmc
test
or
sub
add
repz
mov
fistps
ret
xchg
lods
inc
fdivr
jbe
and
adc
add
jp
in
mov
push
jne
sbb
or
mov
imul
ds
jbe
push
movsl
andb
lcall
je
pop
and
outsl
pop
pop
sarb
fldenv
aad
testb
inc
addl
pusha
sti
movsl
mov
pop
xchg
mov
mov
in
scas
dec
out
in
and
jnp
xchg
jne
fiaddl
scas
stc
lods
push
into
jo
loope
lret
add
xor
dec
xchg
mov
icebp
mov
shlb
mov
mov
pop
xchg
loopne
pusha
cmp
jl
dec
cmpsl
repz
mov
emms
into
and
and
xchg
addb
loope
lcall
cmp
or
enter
push
out
jne
or
aad
mov
inc
inc
lret
xlat
jbe
out
cmp
mov
pop
in
dec
in
cmp
mov
stos
jns
sti
adcl
lret
pop
pop
sub
lock
pop
out
inc
js
xor
mov
test
mov
ret
cmpsb
adc
pop
sar
cld
dec
jmp
out
jns
adc
repnz
negl
jbe
fcomi
into
or
loopne
adcl
dec
push
std
jmp
or
jno
xchg
push
mov
xchg
push
lea
pop
pop
aaa
or
jge
imul
inc
loop
out
inc
sub
dec
xchg
stc
adc
fbstp
jns
int
lret
mov
lcall
mov
mov
cmpsl
ja
shlb
jmp
pop
or
movsl
jbe
shlb
insb
push
fstps
push
sbb
mov
jmp
nop
lret
cmp
add
jae
and
movsb
cmp
outsl
movsl
mov
pop
mov
mov
nop
mov
push
popf
ret
push
arpl
pop
jmp
cltd
sahf
rcrb
test
mov
adc
cs
pop
dec
outsb
into
les
divps
clc
pushf
nop
cmpl
dec
ss
stos
jno
pop
test
aam
mov
pop
sub
imul
adc
inc
sqrtps
jno
ret
mov
push
icebp
cmp
mov
sahf
out
stos
stc
push
dec
das
add
ret
das
pop
push
mov
jae
sbb
and
mov
shl
sub
popf
test
push
mov
jecxz
faddl
sub
lret
je
ret
fadd
jge
dec
sbb
xor
fiaddl
shlb
or
jns
and
test
inc
jno
cmp
push
cmp
jae
lods
cmpsb
push
cld
mov
and
add
jae
lcall
in
dec
dec
pop
es
sub
lods
repz
dec
push
mov
pop
popa
pop
jns
cmp
fstl
dec
arpl
pop
fisttpl
mov
or
mov
sub
xlat
out
xlat
mov
ds
cli
testl
jge
cmpsb
mov
dec
test
cmp
mov
out
dec
adc
inc
je
push
push
repz
pusha
and
int
bound
imul
xchg
ficoms
push
popf
pop
loop
insl
enter
cwtl
aam
mov
cwtl
and
iret
xchg
pop
mov
daa
mov
adc
cmp
sbb
lods
lea
loop
or
sub
and
fndisi(8087
icebp
xchg
mov
lahf
nop
mov
aad
mov
jg
fisubrs
and
outsl
fs
lock
dec
fs
dec
and
xchg
mov
adc
clc
add
xlat
sub
shl
add
sub
mov
jno
inc
dec
jbe
push
push
popf
adc
fcoms
aas
lahf
xchg
push
pop
pop
fists
aad
mov
mov
or
inc
repnz
cmp
xorl
add
bound
fcmovnb
sub
stc
mov
inc
or
arpl
mov
pop
or
xchg
push
jmp
adc
xchg
xchg
add
fisttpl
ss
adc
dec
add
jno
popa
push
push
popa
inc
jno
andl
rcl
loope
icebp
xor
and
adc
add
jno
popa
push
push
popa
inc
jno
andl
rcl
loope
icebp
xor
mov
xor
inc
popa
stc
push
popa
shll
mov
mov
shl
rol
shl
add
adc
and
xor
popa
push
push
loope
jno
jle
cmp
mov
xchg
mov
call
lret
jbe
sub
xchg
push
pop
cmpsl
push
cmp
push
sbb
or
in
pop
ljmp
push
stos
inc
lcall
xchg
xchg
mov
sbb
or
jecxz
repz
ret
mov
outsl
popf
jge
je
mov
adc
mov
ljmp
mov
jae
sbbl
icebp
dec
cmp
sti
adc
add
inc
fidivrl
push
mov
mov
xchg
outsl
movsl
cmpsl
inc
cmpsl
xchg
xchg
div
xchg
xchg
push
stos
inc
mov
xchg
mov
xchg
inc
or
mov
mov
int
sub
pop
cmp
inc
pop
lahf
ja
xchg
mov
pop
push
push
pop
mov
jge
lea
das
adc
ljmp
data16
xchg
xchg
dec
cmpsl
nop
mov
repnz
sbb
out
aaa
inc
in
pop
insl
and
test
dec
mov
test
mov
or
idivl
pop
ljmp
push
mov
lcall
lahf
inc
scas
push
mov
sbb
adc
mov
add
sub
push
sub
and
push
mov
outsl
mov
outsl
ljmp
and
jne
adc
or
push
pop
ret
aas
in
movsl
pop
test
fwait
or
mov
cmp
addr16
push
pop
mov
cmpsl
cmp
sub
sbb
or
cli
pop
ljmp
push
stos
inc
lcall
xchg
dec
cmpsl
cmp
sub
sbb
or
cli
pop
sub
xchg
push
jno
xchg
movsb
sub
mov
mov
rcrl
sub
push
leave
lods
es
mov
sbb
in
insl
mov
mov
dec
bnd
push
sbbb
mov
push
jecxz
pop
inc
push
mov
xor
dec
jp
hlt
aam
pop
jo
xchg
adc
sub
lahf
pop
mov
sub
cs
lods
adc
out
cmp
xor
sub
xor
repnz
sbb
xchg
cmp
fistpll
outsl
lcall
orl
add
rolb
in
cli
xor
addr16
push
adc
or
js
mov
lds
roll
aam
pop
maxps
cmp
out
or
cli
subb
push
sbb
push
mov
sbb
rcll
inc
dec
cmp
dec
mov
or
pop
fiadds
pop
popa
lahf
mov
mov
out
loop
jbe
xchg
xor
jnp
sub
dec
cmp
adc
loop
cmp
xor
outsb
scas
iret
inc
sub
lock
mov
mov
or
xchg
pop
cld
add
inc
or
fiaddl
mov
repz
fdiv
movsb
dec
sbb
add
xor
gs
xchg
adc
add
sbb
movsb
sub
or
loope
das
mov
popa
cmp
adc
loope
dec
mull
imul
lock
push
pop
outsb
sbb
cli
sub
data16
jns
mov
and
ljmp
jge
pusha
in
sar
mov
push
xlat
das
arpl
shrb
xor
lret
addr16
jp
jno
jecxz
mov
inc
inc
std
jno
insl
cmp
xchg
ljmp
es
ja
rol
pop
imul
addr16
jmp
jl
cmp
cmp
cli
jg
pushf
dec
fdivrs
lret
pop
sbb
mov
inc
dec
jmp
cli
jns
and
and
cwtl
lock
cmp
adc
enter
sub
cwtl
cmc
fwait
add
je
loop
mov
xor
cmc
add
inc
fisttps
loope
ret
in
cld
or
mov
or
mov
jb
jl
sbb
dec
xchg
scas
mov
gs
fldcw
add
negl
xchg
pop
movsl
adc
jbe
jne
pop
stos
sub
xchg
pop
mov
out
push
mov
into
jecxz
jns
or
stc
roll
adc
mov
mov
add
dec
sbb
outsl
jmp
pop
mov
cmpps
inc
dec
xor
xchg
stos
mov
xor
xchg
dec
ret
push
push
adc
mov
ljmp
repnz
lcall
cwtl
jg
aas
scas
in
insb
divl
and
adc
aas
inc
ja
outsb
bound
test
outsb
pop
and
jnp
in
adc
pop
lods
mov
rorl
xlat
adc
aas
dec
xchg
data16
adc
sbb
leave
ret
push
mov
mov
adc
push
dec
pop
mov
and
pop
dec
inc
rcl
mov
push
cmp
mov
dec
and
test
int3
push
scas
mov
mov
add
jmp
and
test
pop
sbb
outsb
es
mov
inc
push
shl
xchg
xchg
add
shr
mov
mov
adc
push
dec
sbb
xor
lods
test
out
mov
adc
jbe
or
xchg
push
pop
inc
call
push
pop
out
xchg
popa
cmp
out
pusha
int3
mov
mov
push
jl
adc
testb
int
mov
and
and
dec
cwtl
xor
dec
pop
sub
mov
fnstcw
notb
in
mov
aas
enter
adcl
sbb
pop
scas
or
dec
aaa
sbb
outsl
cs
gs
adc
das
cwtl
xchg
mov
lea
icebp
test
fsubrs
jb
aad
lret
call
and
lods
fsubs
mov
int3
or
bound
stos
in
pushf
mov
pop
push
std
add
and
pop
mov
push
mov
adc
xlat
faddp
pop
rcl
aas
fistpl
mov
rorb
jg
arpl
jmp
jb
fldt
dec
sbb
test
xchg
dec
cmp
mov
dec
add
pop
jle
in
mov
jbe
and
mov
xchg
sbb
leave
in
imul
inc
movsb
loop
repnz
push
stos
cmp
in
fistps
cmp
mov
mov
imul
sbb
sbb
lods
cmp
loop
and
add
fldcw
popa
cmp
sub
jns
jge
inc
sbb
sub
dec
and
inc
roll
aad
aas
out
fnstsw
push
jp
inc
pop
push
pop
and
movb
mov
stos
in
neg
das
adc
jne
and
ljmp
mulb
add
xchg
mov
pop
xor
inc
cmpsl
add
lcall
in
sub
fildll
or
icebp
pop
sbb
dec
aam
mov
pop
and
aad
imul
xchg
lret
call
insb
cmp
push
cmp
pop
inc
imulb
das
dec
xchg
mov
int3
mov
rorb
xchg
jp
sti
test
jl
xchg
jb
stc
mov
or
test
push
inc
pop
xor
fs
mov
repz
scas
js
mov
lock
jge
or
cmp
inc
fdivl
jge
pop
mov
outsl
xchg
adc
les
loope
add
xchg
cmp
out
fldl
pushf
imul
scas
lock
in
cltd
inc
jae
cmp
mov
inc
pusha
std
lds
pusha
push
push
push
std
sub
daa
cltd
aas
enter
stos
and
mov
xchg
mov
adc
adc
adcb
adc
adc
bound
pop
push
inc
leave
in
add
ret
xchg
sub
or
mov
cmp
add
sbbb
dec
enter
imulb
lea
lods
cwtl
pop
pop
shll
movsl
inc
leave
sysret
xchg
xchg
loopne
inc
sub
add
push
cmp
test
add
ret
mov
cmp
aam
test
mov
xchg
shll
pop
jne
scas
ljmp
outsb
mov
mov
xlat
lret
mov
push
push
sti
cli
add
inc
and
cmc
push
leave
push
imul
push
push
cmpsb
imul
and
xchg
xlat
jbe
loop
ss
mov
cmpsb
addb
lds
add
shll
xchg
mov
push
bound
hlt
loop
dec
pop
scas
sub
or
mov
leave
bound
cmp
inc
mov
jl
pop
inc
xchg
das
mov
push
sub
int
sbb
daa
push
aas
fnstcw
gs
sub
cmp
int
adc
xchg
fdivs
mov
xor
lods
jnp
mov
sbb
add
test
sub
lret
pop
adc
sbb
fs
push
leave
pop
mov
aad
in
enter
sti
mov
pop
mov
sbb
fiaddl
or
push
jnp
mov
dec
push
cs
in
ljmp
and
pmuludq
and
aaa
mov
loope
in
inc
mov
pusha
fcoml
mov
sti
mov
out
cmp
and
push
dec
jns
adc
or
cmp
fcmovne
out
xor
mov
call
mov
push
push
xchg
mov
stos
mov
xor
orl
divl
adc
aaa
es
aad
in
pop
jle
adc
enter
lret
and
mov
mov
sbb
xchg
andl
jae
adc
aaa
dec
imul
imulb
push
ljmp
lea
xchg
xchg
leave
test
pop
push
push
cmp
pop
pop
das
add
repnz
lods
cli
fsub
test
fbstp
mov
out
dec
dec
mov
lods
stos
adc
mov
in
pop
jb
repnz
enter
add
aam
jb
mov
push
xor
daa
push
imul
dec
dec
mov
push
xchg
mov
insb
stos
mov
inc
gs
xchg
mov
jp
fildl
out
ljmp
std
movsb
shrl
imul
hlt
fwait
sarl
and
out
hlt
testl
and
movsl
pop
and
adcb
xchg
dec
ror
lods
xchg
and
mov
loop
mov
jbe
sbb
sbb
inc
out
sub
jns
mov
or
call
push
fsts
cmp
rclb
std
xchg
sbb
jp
jbe
leave
jg
sbb
xor
and
push
enter
cmpsl
xlat
lds
sub
xchg
loop
and
inc
push
sbbb
daa
add
add
fdiv
mov
pushf
jo
xor
jg
adc
push
dec
mov
lods
adc
dec
sub
add
inc
or
jnp
aam
mov
and
pop
or
mov
or
pop
adc
pop
imul
cltd
sub
adc
pop
inc
repz
in
adc
inc
jo
js
outsl
shll
add
lds
in
aas
push
ja
sbb
int3
cmpsl
add
loope
out
cld
xor
adc
testl
push
punpckhbw
dec
out
push
pop
xlat
push
test
repnz
xchg
mov
mov
jno
rorl
sar
je
adc
lcall
popa
mov
into
pop
aaa
iret
cmp
lds
cmp
leave
ja
sahf
int
popa
push
adc
sbb
mov
pop
sub
testb
cmpl
xchg
xor
repnz
inc
test
xor
cmp
stos
rcrb
push
sbb
addr16
mov
adc
pop
sbb
clc
imul
cltd
sub
inc
test
mov
pop
stc
push
leave
xor
mov
adc
pop
pop
cmp
arpl
cmp
sub
int
cmp
mov
mov
ret
aaa
inc
pop
jnp
push
push
lods
mov
std
notb
icebp
fsubrl
pop
adcb
pop
inc
mov
push
add
inc
adc
mov
loopne
push
or
push
daa
nop
mov
stc
fincstp
push
push
out
sbbl
push
add
lahf
cmp
enter
and
imul
imul
sub
repnz
cmpsb
jbe
negl
push
push
inc
jne
jmp
jmp
scas
sub
jmp
insb
cmp
fstpt
fucomip
mov
jae
cltd
ret
mov
mov
scas
adc
sub
fildl
pop
jne
xor
cmc
push
lods
idivb
and
stos
cmc
paddsb
inc
cli
push
das
xor
adc
xchg
jbe
xlat
rol
imul
cmc
in
xor
pop
test
pusha
jbe
mov
adc
stc
imul
jp
xchg
push
push
push
es
mov
add
mov
mov
sahf
inc
icebp
repnz
push
stos
out
jl
mov
fnstsw
sbb
int
sub
mov
pop
push
or
pop
mov
add
mov
jne
push
les
cmp
sbb
popf
mov
push
sbb
adc
roll
mov
push
jbe
jns
jecxz
cmpsb
popf
mov
push
iret
inc
xchg
push
mull
cmp
int
fs
rclb
mov
cli
sub
adc
jne
dec
or
lea
out
mov
push
aam
test
cmp
out
mov
mov
out
call
cmpsl
pmaddwd
push
pop
popf
jmp
jmp
xchg
xchg
fistl
jmp
pop
popa
and
mov
mov
scas
jl
push
push
sub
dec
outsb
xor
inc
nop
ss
sti
sbb
cld
mov
outsb
clc
sub
dec
jl
mov
lahf
cmp
pop
jb
xor
gs
lods
ret
xor
xor
dec
mov
and
movsl
mov
add
ja
in
lock
scas
insb
dec
rclb
aad
ja
outsb
adcb
data16
aas
mov
imul
cmc
popf
sub
jecxz
adc
xchg
neg
jl,pn
loop
mov
cmp
inc
push
cs
shlb
in
scas
roll
loopne
stos
push
imul
adc
out
sahf
dec
sub
sbb
xchg
jns
jno
mov
dec
push
push
iret
and
cmp
mov
add
mov
ljmp
mov
test
push
dec
push
and
int
in
imul
cmp
or
adc
fcmovnu
pusha
cwtl
fdivr
jne
fwait
outsl
loope
adcl
popa
inc
cmp
push
lods
add
insb
jmp
insb
shll
cld
iret
push
shl
in
enter
mov
inc
dec
cltd
mov
mov
loop
ss
xchg
mull
and
sub
outsl
xor
push
push
inc
out
in
xchg
nop
fistpll
rol
jo
cmp
sub
imul
aas
sub
jge
lahf
pop
loop
test
enter
or
sahf
xchg
mov
outsb
inc
and
or
dec
popf
test
xchg
mov
ret
vpunpckldq
test
std
push
subb
jne
lahf
jae
inc
fisubrs
addb
test
lods
fs
pop
inc
push
xor
lcall
fcomp
xlat
cltd
mov
and
jnp
frstor
enter
inc
in
cmp
out
jno
jge
or
cmp
subl
push
dec
pop
rclb
mov
cmovle
mov
add
out
push
outsb
push
jle
or
das
lods
xor
dec
lahf
mov
mov
push
stos
adc
sarb
mov
imul
inc
inc
int3
mov
scas
insb
or
mov
inc
jns
insb
cmpsl
inc
xor
xchg
xchg
mov
je
sub
sub
and
jb
jnp
xchg
jl
outsl
jge
inc
and
mov
cmp
fisubrl
test
ror
push
mov
inc
inc
add
inc
inc
push
pusha
mov
jbe
push
add
hlt
les
stc
sbb
xchg
fisubrs
fldcw
leave
sbb
adc
inc
or
gs
jbe
out
shl
lcall
loope
inc
mov
xchg
fwait
testl
mov
fsubl
adc
rcll
sub
inc
sahf
aaa
fisubrs
imul
je
adc
pop
inc
pop
and
jecxz
scas
nop
mov
mov
mov
pop
shrl
adc
and
mov
mov
outsb
mov
clc
adc
dec
jbe
ss
je
or
mov
xor
push
xor
sbb
mov
mov
mov
mov
popa
nop
in
and
mov
adc
pop
jo
leave
or
out
dec
sub
mov
xlat
push
adcl
lods
add
popa
xchg
inc
cs
mov
aas
jb
mov
lock
add
push
sbb
mov
test
cmpsb
or
mov
mov
inc
pusha
mov
jmp
push
aaa
inc
addr16
or
js
jge
shlb
xchg
leave
incl
lahf
push
cli
mov
pop
cmp
mov
enter
aam
adc
js
pop
dec
cmpsb
cmp
test
or
adc
ret
inc
popa
popf
mov
lahf
push
sub
xchg
or
pop
add
imul
mov
pusha
inc
imul
popf
loope
jmp
stos
mov
mov
fidivrl
addb
mov
pop
push
lock
out
stos
sarb
cmp
out
gs
add
adc
jmp
jmp
jg
fwait
stc
add
ljmp
int
inc
loopne
mov
cmp
add
cmpsb
sbb
adc
aad
loope
jl
xorl
sahf
mov
popf
inc
sub
add
rclb
rcr
das
movsl
sbb
jl
pop
call
pop
xor
add
sub
filds
and
pop
mov
jl
fnstsw
inc
mov
repz
jl
pop
sub
mov
cltd
shll
repz
shlb
lcall
jecxz
aad
cmp
in
decl
push
xchg
shl
sbb
inc
mov
lcall
fnsave
mov
and
add
xchg
add
in
pop
jle
arpl
push
test
or
test
inc
je
pop
lahf
cmc
test
xchg
mov
fwait
jl
arpl
xor
jae
xchg
cmpsb
mov
xor
call
pop
mov
mov
xchg
ffreep
lods
call
lock
testl
adc
scas
sbb
mov
push
aad
jl
push
rol
stc
movsb
push
jge
jo
cltd
daa
inc
mov
stc
sbb
mov
sub
xchg
icebp
test
push
pop
jg
popf
inc
and
scas
push
popf
xor
sbb
lea
cmp
mov
popf
mov
lret
andb
mov
out
lds
jns
loop
leave
push
inc
push
cmpsl
rcrb
dec
push
call
pop
jnp
movsl
mov
cmp
dec
mov
xor
aaa
loope
and
mov
sub
scas
call
cmpl
and
rolb
pop
push
adc
cmp
std
stos
pop
rcrb
je
or
xchg
test
push
enter
imul
dec
in
stos
inc
out
sub
movsb
ret
in
dec
fidivrs
sbb
mov
sub
dec
xchg
subl
xorl
mov
jp
pop
cmc
mov
loop
sbb
xchg
xor
mov
mov
xchg
adc
ret
into
mov
clc
loopne
or
xchg
push
shlb
jbe
in
push
xor
push
xlat
outsb
xchg
cmp
push
arpl
pop
pushf
pop
nop
add
mov
dec
stc
xor
jle
and
adc
lds
in
pop
fiadds
cmc
pop
cwtl
stc
repnz
sbb
out
cld
jns
rcr
jo
cmpsl
xchg
cmp
inc
add
inc
out
sub
dec
or
mov
add
cltd
mov
stc
inc
popa
inc
fsubl
cli
orb
pop
lret
imul
and
pop
push
xchg
rcrl
adc
insl
push
ud1
add
push
push
aad
es
hlt
push
paddusw
movsl
rcrl
int3
cmp
xchg
mov
and
cmp
lea
inc
pop
mov
in
xcrypt-ecb
cmpsl
mov
daa
xor
pop
cli
jbe
and
mov
xchg
add
outsb
fisttps
add
inc
pop
in
xchg
pop
pop
mov
xchg
xor
pop
adc
les
iret
mov
add
rcrb
pop
lock
aam
test
mov
cli
cld
jp
lret
xor
mov
adc
mov
aam
and
mov
scas
cmpsb
cmpsb
xchg
lret
sub
lods
lret
pop
stos
xorb
in
mov
mov
add
push
aaa
hlt
adc
lods
fldenv
xchg
data16
pop
int3
mov
pop
stc
inc
push
int3
jecxz
inc
nop
popf
shll
xchg
fs
xchg
mov
into
add
cltd
rclb
outsl
sbb
cmp
mov
lods
add
xor
and
movsl
pusha
int3
and
imul
aaa
dec
mov
xchg
jns
cld
and
push
push
adc
clc
scas
dec
lret
mov
fistpl
das
fmull
xor
cmpsl
inc
xor
fnsave
xchg
mov
jmp
sub
aas
xchg
jle
repnz
xor
inc
aad
pop
test
ss
lea
jmp
fcompl
data16
jmp
pop
cmp
loop
fdivrl
fs
imul
or
sbb
lods
push
nop
sub
sbb
in
push
or
bound
icebp
into
negl
ds
xchg
or
and
cltd
inc
dec
inc
xor
lcall
cld
xlat
repnz
sub
mov
inc
orb
adc
sub
push
cmp
stos
in
push
movsb
or
enter
inc
out
ss
xor
out
push
mov
leave
adc
mov
testb
adc
xchg
and
out
xlat
aas
sub
pushf
add
jmp
outsb
test
fmull
lds
push
and
inc
pop
add
jecxz
cltd
xor
cmp
lcall
push
sbb
pop
jmp
lret
push
stos
inc
lcall
xchg
dec
cmpsl
cmp
sub
sbb
or
cli
pop
ljmp
push
stos
inc
lcall
xchg
dec
cmpsl
cmp
sub
sbb
or
cli
pop
ljmp
push
stos
inc
lcall
xchg
dec
cmpsb
cmp
cs
sbb
cmp
into
pop
fiadds
in
aaa
lret
push
stos
inc
sbb
test
lock
rorb
mov
sbb
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pop
adc
add
jp
add
jae
pop
pop
push
popa
lcall
mov
stos
loope
loope
adc
push
jp
or
inc
sub
add
xchg
fiaddl
mov
loope
adc
add
xor
push
jno
popa
lret
mov
stos
xchg
popf
fstl
jno
bound
scas
jb,pn
fs
adc
jge
ljmp
out
push
mov
push
pop
rep
pop
inc
in
add
mov
jle
dec
adc
dec
aaa
mov
add
push
cli
out
sbb
pop
stos
add
adc
cs
std
pop
jl
sub
pop
and
ja
push
in
sub
sbb
ja
and
rcrl
iret
shll
sub
ficompl
popa
or
xchg
adc
sbbb
iret
dec
pop
pop
xchg
fildll
xchg
loop
scas
sti
ret
call
jmp
cli
pop
xadd
push
jns
pop
add
push
and
push
pop
inc
sub
popa
cmp
in
ljmp
cmpsl
cmp
sub
jo,pn
pusha
fs
outsl
xor
stos
loope
cwtl
mov
movsl
hlt
xchg
cmp
dec
jge
insl
sub
adc
inc
es
dec
repnz
fwait
repz
xchg
repz
mov
push
fists
push
sbb
dec
arpl
inc
sub
popa
lret
sub
rcrl
loope
adc
push
jp
or
inc
sub
popa
lret
sub
rcrl
loope
adc
out
movsb
cmp
popa
aas
leave
test
and
rcl
cmp
jno
lods
add
xchg
adc
gs
jbe
cmp
lods
or
jne
sub
sar
cmp
and
mov
push
sarb
into
icebp
cmp
jmp
jmp
lret
test
incb
sti
outsl
jnp
jecxz
faddp
rcl
lock
inc
mov
push
stos
dec
les
inc
inc
jmp
mov
outsl
sti
cmpsl
inc
mov
mov
jge
cmp
subl
test
adc
xchg
movsl
push
or
cwtl
or
or
mov
or
stos
outsl
in
jge
mov
popa
out
sarl
inc
hlt
das
xor
shll
jmp
sti
dec
loopne
incl
data16
mov
adc
cmpsb
orl
mov
dec
ret
push
mov
lret
and
pop
sbbl
push
mov
int3
lahf
push
daa
sbb
push
mov
cmp
adc
or
daa
jp
push
test
or
cld
out
test
mov
and
mov
add
mov
fmul
sbb
jo
pop
jno
pushl
push
mov
xchg
inc
into
pop
xor
in
out
hlt
dec
je
mov
in
je
int
in
mov
xchg
mov
cmc
out
sarb
fwait
mov
mov
inc
mov
dec
push
jns
pop
mov
push
add
pop
movb
add
pop
ds
xor
popf
negb
rolb
gs
pop
mov
inc
aam
jge
dec
pop
mov
data16
es
scas
push
gs
pop
pushf
aad
popf
mov
and
jg
repnz
sub
inc
inc
lea
loope
dec
aad
sti
jb
cmp
lea
sub
les
push
nop
xorb
mov
xor
pop
inc
pushf
inc
mov
lret
daa
mulb
mov
mov
ljmp
out
aas
push
aaa
mov
adc
inc
mov
lods
imul
mov
mov
adc
mov
gs
and
mov
scas
dec
pushf
fwait
inc
inc
pop
sbb
mov
pop
imul
cltd
insl
sti
jne,pn
cmp
test
mov
dec
pop
jmp
xlat
aas
xchg
xchg
nop
or
mov
pop
jg
sub
adc
cmpsb
pusha
sub
fwait
cwtl
mov
fsave
jle
out
or
pop
push
testb
mov
inc
sbb
in
and
scas
pushf
jae
jmp
insb
lahf
mov
lret
movsb
push
fists
pop
repz
jmp
add
fcomps
inc
shl
aam
enter
insb
daa
xor
sbb
testb
rsqrtps
scas
cli
test
dec
mov
mov
lods
fcos
xchg
jns
mov
in
mov
test
mov
dec
push
push
cwtl
push
adc
or
mov
jle
das
jb
fidivrs
jge
ss
cmp
out
stc
gs
inc
mov
mov
shlb
dec
and
mov
pushf
jmp
cmp
push
pop
and
sub
lret
add
add
negb
lret
pop
or
ss
dec
out
sub
repz
pop
das
sub
push
sub
popl
scas
cli
jb
add
cli
or
mov
movsb
adc
sbb
nop
jmp
bound
cltd
clc
jmp
dec
pop
hlt
pusha
push
in
movntps
test
mov
jo
dec
push
push
push
addl
xor
add
jns
scas
out
adc
nop
sub
jl
mov
mov
adc
rcll
mov
xchg
adc
push
pop
jp
dec
jmp
lahf
aas
sub
hlt
dec
and
cmpsl
pop
das
outsb
stc
or
js
mov
adc
mov
and
sbb
out
cli
pop
mov
cs
in
sub
fwait
cmp
add
outsb
dec
lods
or
mov
in
addb
into
push
sub
inc
call
mov
in
inc
inc
sbb
out
push
pop
sbb
fcmovnu
fcoms
lods
int
xchg
arpl
popa
gs
jle
je
fimuls
ret
jg
aaa
sbb
jnp
stos
mov
outsl
pop
jmp
add
mov
xchg
adc
push
insl
mov
fldt
roll
push
mov
mov
and
std
push
xor
repnz
int3
popw
incb
fmuls
scas
data16
lods
xchg
cmp
testl
lods
popa
loop
sti
icebp
nop
jne
mov
jg
mov
fcomi
adc
add
dec
push
or
sbb
and
addr16
int3
into
out
sub
pop
inc
imul
sub
pop
movsb
mov
std
stc
pop
pusha
clc
mov
push
jae
cmc
loop
enter
or
cld
xor
jae
push
sub
sbb
call
ja
push
or
hlt
xlat
push
cmp
leave
outsb
in
xchg
into
xor
cmpsl
jne
inc
adc
loope
subl
fimull
mov
sub
lods
div
add
lods
loopne
pop
adc
mov
divb
js
cmc
jle
jp
cmp
jo
add
sub
fisttpll
dec
fisttpl
pop
dec
cli
pusha
cltd
mov
sub
push
xor
out
bound
mov
cmc
mov
decl
mov
and
js
in
test
add
fsubl
stc
enter
dec
aam
icebp
fstpt
mov
lock
sarb
pop
out
pop
lcall
or
cmpsl
sub
js
push
jb
add
test
mov
adc
sub
fidivl
leave
sub
sub
scas
popf
icebp
mov
dec
mov
pop
jno
sub
jecxz
lods
push
pushf
rorl
pushf
mov
or
lock
sub
inc
mov
aam
daa
mov
scas
fcom
enter
sub
cmp
jo
les
inc
add
std
inc
xor
adc
sub
push
add
imul
mov
xor
cwtl
lods
outsl
movsl
das
mov
cmp
stos
ss
sub
lds
cmp
data16
stos
xor
imul
shrb
cwtl
add
dec
call
jmp
mov
push
pop
sub
xchg
and
jo
lods
mov
into
stos
stos
fdiv
ret
pop
ret
adc
adc
dec
pushf
aad
dec
xchg
adc
les
xor
outsb
add
sub
mov
push
out
lds
je
fs
dec
cmp
or
cmp
and
xchg
loope
adc
xor
pop
fwait
mov
xor
adc
sbb
sarl
mov
int
out
add
sbb
mov
pop
cmp
and
icebp
fisttps
es
lds
loopne
aam
stc
mov
and
out
fs
jne
jl
dec
sbb
lahf
bound
es
add
xor
rcll
pop
add
push
dec
adc
cmp
faddp
ss
xor
xor
push
add
adc
jae
jmp
sub
jbe
mov
xchg
in
enter
xchg
sarb
les
jae
xchg
std
fwait
and
test
pop
adc
sub
push
jl
inc
add
imul
mov
gs
fs
push
sti
inc
xchg
xchg
jl
dec
nop
out
inc
sub
mov
add
in
insl
sub
lea
fdivl
fstpl
sub
sbb
sahf
aam
mov
aam
jmp
out
sub
sti
fnstenv
cmp
loope
mov
mov
adc
in
and
jo
stos
ds
xor
arpl
lret
xor
lcall
push
shll
mov
cmc
movsl
pushf
mov
hlt
ret
pop
out
into
adc
call
outsb
sub
adc
pop
inc
jb,pt
xor
adc
std
cmpsb
pushf
or
inc
xchg
out
loop
inc
les
out
in
and
rclb
out
jo,pt
push
add
mov
mov
xor
je
dec
clc
les
fsubrs
jmp
xchg
pop
mov
sub
ss
and
xor
inc
xchg
notb
push
push
and
mull
pop
outsl
adc
or
in
mov
jle
inc
movsb
bound
sub
adc
aas
in
dec
outsl
push
push
cmc
repnz
iret
xor
push
es
bnd
movsb
sbbl
test
sub
mov
dec
popf
es
jb
xlat
bound
decl
mov
pop
pop
and
dec
call
mov
push
in
addr16
cmpsb
shll
jbe
out
out
fldt
sub
or
jmp
sub
jmp
shlb
xor
cli
lods
xchg
sti
ds
xlat
xchg
mov
out
hlt
cs
mov
jbe
add
pop
js
addb
pop
pop
cmpb
mov
dec
out
xor
in
mov
cmp
dec
push
sub
ds
add
fistps
pusha
and
sub
js
xor
fidivrl
sbb
scas
cli
push
test
insb
movsb
jg
mov
notb
mov
mov
or
imul
iret
test
sub
fidivrs
cmp
jmp
cmp
repnz
mov
shlb
sbbb
mov
test
out
or
inc
cmp
loopne
jl
sbb
pusha
xchg
dec
mov
ja
pop
and
pop
mov
test
adc
jno
mov
imul
and
rcrl
in
loope
dec
rclb
in
in
clc
repnz
jmp
adc
popa
mov
adc
not
mov
and
cmpsb
out
popf
dec
lcall
xchg
add
mov
loopne
out
loope
or
movsb
cli
jp
push
cmpsb
test
add
pop
pop
pop
jns
mov
imulb
mov
adcb
ljmp
leave
sub
in
lcall
negb
test
lock
lret
sub
pop
es
test
pushf
jp
repnz
dec
iret
fdivrp
sbb
push
aam
out
outsb
stc
jb
shrl
pop
pop
jle
jno
push
fsubs
rcrl
cwtl
xchg
xor
mov
jp
je
orl
cmp
psrad
dec
stc
cmpl
push
dec
lcall
arpl
dec
sub
rorl
in
test
push
mov
out
sbb
fdivr
les
fisttpll
test
mov
jb
adc
and
and
cmp
fnstsw
pusha
scas
push
lret
hlt
sub
dec
je
arpl
in
sbb
cmp
stos
cmpsb
dec
sbb
dec
or
cmp
push
mov
mov
js
int
mov
pop
and
sub
lret
jns
add
int
push
add
lret
cmp
lea
sbb
aam
je
movsl
xchg
clc
jg
cwtl
sbb
xchg
xor
scas
push
inc
sub
leave
sub
in
gs
cmc
cmp
popf
jge
repz
out
push
ror
push
rclb
lcall
push
movsb
mov
dec
or
ret
dec
push
adc
sbb
mov
das
repnz
cmp
loop
xchg
adc
hlt
sbb
sbb
idiv
push
xchg
shrb
lock
popf
mov
in
cs
dec
dec
out
scas
js
push
mov
mov
sbb
xor
inc
imul
insl
sbb
sub
ds
loop
mov
and
adc
push
es
int3
ret
xchg
into
or
xchg
and
movb
sub
psrld
sbb
dec
jns
xchg
adcl
add
jecxz
xlat
nop
sbb
ret
jl
loop
in
mov
addr16
sub
mov
cmp
shll
push
subb
daa
js
xchg
clc
test
xor
mov
dec
dec
push
xor
aaa
push
lret
lds
jg
add
jbe
out
adc
loop
mov
shlb
sbb
popf
popa
into
out
fnstcw
in
inc
push
enter
or
daa
pop
cmp
aam
rcrb
fdivl
mov
clc
adc
dec
mov
vsqrtss
adc
movsb
insb
out
cmp
aad
xchg
movsl
dec
xchg
mov
fidivl
sbb
mov
sub
mov
lcall
insl
imul
xchg
cmpsl
stos
or
xor
adc
sahf
addr16
out
sbb
sbb
xchg
mov
adc
mov
jnp
jbe
dec
push
sbb
fstl
sti
dec
das
lds
add
pop
cwtl
push
outsl
adc
es
mov
dec
fadd
xor
push
insb
fisubl
push
pop
testb
test
cmp
inc
adc
int
xor
daa
sbb
sbb
dec
inc
add
mov
stos
cmp
cmc
repnz
das
lahf
xor
sbb
mov
out
lea
adc
rclb
mov
insb
inc
in
rol
mov
pusha
push
cld
outsl
jg
mov
je
jne
les
decb
or
xor
mov
push
movsl
mov
adc
ss
fisubl
mov
idivb
sbb
jp
jle
aad
into
out
outsl
mov
loop
pusha
jl
lods
sub
mov
add
and
icebp
and
mov
mov
inc
ss
mov
mov
push
push
fldcw
xchg
movsl
or
push
adcb
pop
xor
fmulp
leave
pop
push
insl
testl
xchg
loope
pushf
push
mov
loop
sub
aas
es
dec
dec
in
pushf
lret
jmp
out
orl
dec
inc
loope
lcall
pop
mov
xor
pop
add
int3
rclb
test
ljmp
xor
add
pop
push
in
fbld
cld
push
ds
push
loop
test
mov
js
adc
je
push
push
fnstenv
mov
or
mov
or
sbb
das
iret
movl
cmp
in
dec
mov
das
or
mov
add
bound
xor
dec
shrb
xor
out
sar
dec
mov
repz
mov
ret
dec
jbe
popa
hlt
pop
jno
push
psadbw
rcr
cmp
ret
pop
daa
into
xchg
jmp
popf
popa
mov
shlb
jecxz
ljmp
sub
dec
cs
push
out
test
loop
adc
out
xchg
or
ja
jns
jns
idivl
imulb
pop
add
jecxz
sahf
dec
sub
push
push
mov
shlb
push
mov
icebp
rorb
xor
jmp
pop
icebp
cli
shrb
je,pn
in
push
mov
test
arpl
pop
inc
xchg
or
test
dec
outsb
sarb
test
xor
rorl
fiadds
xorb
fcoms
clc
div
inc
adc
sbb
fs
jne
sub
dec
and
shll
pop
sbb
adc
xchg
adc
mov
mov
or
or
int3
imul
fistpl
out
out
jns
mov
xchg
or
mov
test
in
jp
adc
mov
fnstcw
cmp
mov
xor
xchg
in
jmp
and
xchg
popa
or
cmc
xor
ss
pop
int
leave
mov
xlat
mov
inc
imul
ficoms
or
ds
outsb
aaa
push
jmp
cmpsl
jno
jp
insl
jbe
movsl
and
mov
bound
mov
jae
xchg
xchg
repz
dec
jle
mov
iret
adc
das
lods
test
jns
xchg
or
jle
lret
pop
pop
dec
mov
mov
loope
and
js
pusha
lcall
and
jnp
xor
daa
pushf
out
test
dec
rorl
icebp
add
bound
push
lcall
jle
cmpsb
push
push
mov
shlb
dec
stc
dec
dec
and
rcpps
aam
fwait
ss
pop
sub
xchg
cli
lods
shll
icebp
sti
jne
fidivl
mov
movsl
ret
into
pop
sti
jmp
mov
leave
mov
mov
sbb
sub
call
lcall
ret
scas
std
add
mov
cmp
js
add
xlat
mov
and
stos
pop
fisttpll
dec
push
aam
test
sub
popa
cmp
pop
pop
stos
inc
icebp
sbb
cmpb
and
mov
and
orl
add
stos
inc
fmuls
testl
jnp
mov
mov
nop
mov
incl
cld
outsl
inc
test
and
in
in
adc
xlat
bound
add
mov
cmp
inc
sbb
xor
sub
jae
add
movsl
popl
adc
mov
inc
or
dec
enter
dec
sub
out
les
je
cmp
flds
repnz
pop
popl
aas
fcomip
inc
negb
lock
mov
adc
mov
movsb
test
push
scas
push
inc
popf
int3
xchg
fildll
pop
add
mov
mov
adc
insl
pop
fwait
rcll
in
or
xchg
sqrtps
scas
xchg
iret
dec
pop
and
bswap
push
int
add
icebp
les
sahf
fwait
xchg
mov
rorl
subl
test
add
rorl
std
mov
icebp
mov
mov
jp
pop
outsl
mov
pop
push
aad
sbb
div
jl
insl
add
ret
mov
lods
sbb
pop
shlb
test
lods
push
jmp
xchg
push
popa
push
daa
inc
xor
pop
mov
sbb
mov
loopne
cmpsl
xor
mov
aad
out
pop
add
jb
or
mov
cmp
or
repz
cmp
lods
fbld
mov
insb
push
mov
or
movsb
loop
iret
mov
jb
and
mov
cmp
pop
test
and
mov
inc
push
cmpsb
jge
cmpsb
mov
je
sbb
mov
sbb
movsb
in
cmp
iret
dec
mov
outsl
arpl
pop
adc
jmp
aaa
jle
sbb
xor
dec
and
mov
add
mov
stos
inc
xchg
pop
and
mov
sti
mov
adc
xlat
jbe
idiv
stc
insl
jo
dec
gs
int
and
mov
sub
fsts
es
or
adc
xor
faddl
int3
or
sub
mov
and
sbbl
dec
arpl
shrl
sti
sarb
pop
xor
jo
es
shlb
es
mov
and
adc
bound
les
stc
jb
jmp
xorb
addr16
add
scas
mov
hlt
and
sbb
aas
or
mov
inc
and
cli
rcll
dec
aas
xchg
cmpb
ficompl
mov
jmp
lea
adc
stc
stos
xchg
ljmp
movsl
daa
add
sub
inc
mov
inc
das
or
push
dec
idiv
and
jl
testl
clc
mov
in
cmp
shl
inc
and
flds
adc
repz
sbb
add
mov
dec
in
mov
or
aas
addr16
xchg
mov
or
pop
fstps
pop
test
jnp
jmp
push
test
or
fdivl
stc
cmp
pop
and
fs
in
xchg
or
in
movsb
scas
adc
cmp
mov
mov
cmpsl
scas
jl
fwait
mov
popa
iret
adc
pushf
lock
xlat
xlat
xchg
xchg
dec
jns
mov
sbb
push
pop
cmp
mov
inc
push
push
cmc
lea
out
push
iret
ret
xchg
or
xor
mov
push
push
mov
fsubrs
sbb
cmp
xor
push
sub
inc
sub
or
add
xor
or
inc
sub
popa
lret
sub
rcrl
loope
adc
push
jp
or
inc
sub
popa
lret
sub
rcrl
loope
adc
jp
jp
or
inc
sub
popa
into
xchg
fiaddl
mov
add
icebp
mov
push
adc
loop
push
and
push
or
jno
mov
inc
mov
std
pop
adc
push
push
inc
push
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
cltd
rcrl
shrl
cmp
repz
or
sbb
inc
test
mov
mov
xor
and
rcrl
shrl
cmp
dec
xchg
pop
xchg
imul
mov
add
xor
and
enter
jmp
pop
cltd
imul
fcoml
pop
mov
leave
inc
xchg
dec
jns
sbb
ret
inc
xchg
push
dec
dec
or
call
mov
rcll
dec
loope
jb
dec
or
cld
scas
mov
xor
xor
es
loope
add
mov
stos
es
dec
sbb
stos
loop
or
mov
inc
lcall
inc
sahf
ja
sbb
into
sbb
or
aad
dec
xchg
jne
mov
jns
cltd
mov
mov
sub
repz
push
out
jp
sub
mov
mov
in
mov
lcall
movsb
icebp
sbb
test
mov
icebp
jbe
dec
sub
mov
mov
xor
daa
push
sbb
sub
cmp
dec
xchg
pop
subl
cltd
pop
test
or
sbb
sub
and
pop
mov
xchg
ja
or
sbb
loope
sub
jne
add
je
add
pop
test
xorb
xchg
cmp
xchg
fsubl
popa
stos
add
shll
rorl
movsb
or
jns
mov
inc
test
adc
add
xor
and
rcrl
shrl
cmp
dec
xchg
pop
subl
cltd
inc
test
adc
add
xor
and
rcrl
movsb
jbe
jecxz
sbb
add
mov
cmp
and
lds
ljmp
dec
xchg
xor
adc
pop
ficomps
fs
aam
popa
jne
pushf
sub
cmp
xchg
or
lods
push
xchg
out
cs
dec
dec
add
jb
jecxz
jg
dec
lahf
push
pop
jae
and
mov
xchg
pop
pop
enter
das
repz
jnp
pop
sti
movsb
mov
fcomi
out
inc
sbbb
or
fwait
xchg
lods
ret
lods
imul
jg
je
pop
inc
daa
xchg
xchg
stos
pop
adc
mov
iret
mov
pop
mov
arpl
subl
fwait
dec
xor
mov
scas
rcrb
xchg
pop
jg
cmp
je
xor
dec
sbb
jecxz
mov
mov
xchg
pop
sbb
shr
push
jle
mov
mov
js
hlt
je
in
xchg
mov
mov
inc
loop
orl
jmp
push
jbe
test
dec
pop
jns
mov
aas
mov
mov
xchg
mov
sub
push
shr
test
gs
jne
mov
mov
xor
inc
or
dec
sbb
sbb
dec
jo
mov
mov
xor
xor
scas
jl
xlat
cmp
stos
nop
pop
andl
fimull
pinsrw
insb
jmp
cmc
sub
mov
cmpsl
int
out
movsb
lahf
inc
inc
pusha
in
pop
pop
enter
inc
and
gs
js
xor
clc
leave
in
in
sub
xchg
cmp
push
in
inc
out
jle
sub
xchg
push
xchg
dec
xor
jns
xchg
aaa
std
fcmovnb
pop
andb
mov
lock
stc
fs
shlb
mov
lret
fisttps
sub
outsl
push
roll
bound
and
int3
pop
xorl
testl
sbb
pop
sbb
cmpsb
outsl
imul
loopne
ds
lret
nop
clc
insb
jmp
xor
push
jae
mov
sub
daa
or
push
lods
fimull
insb
add
mov
cmp
xor
adc
in
in
dec
xchg
and
mov
rclb
dec
arpl
xchg
in
cmp
lret
inc
stc
jmp
push
popw
inc
std
outsl
push
pop
cli
test
xchg
jb
fistpl
add
jge
xor
divb
cmc
cmp
ret
fcomps
adc
popa
gs
sbb
cmp
mov
outsl
mov
mov
jp
or
cmpb
cmp
leave
loop
add
inc
out
adc
dec
jge
fcomip
in
lahf
cmc
inc
xor
xlat
inc
jg
je
pop
in
fcoml
dec
mov
std
jnp
xor
rorl
mov
iret
test
push
mov
packsswb
push
inc
test
fldenv
in
add
lret
iret
addl
daa
jmp
adc
xchg
cmpsb
ret
fwait
and
pop
pop
loopne
filds
pop
add
xchg
bound
mov
pushf
inc
jo
movsb
and
int
cwtl
pop
add
int3
mov
mov
data16
imul
idivb
out
es
loop
call
add
subb
mov
mov
adc
imul
aas
scas
jge
push
xchg
adc
cmp
out
inc
int3
push
daa
ja
imul
and
push
repnz
sar
mov
push
xchg
insb
push
pushf
cld
inc
push
rorl
out
daa
fwait
lods
in
fwait
daa
xchg
xchg
sbb
mov
pop
dec
jnp
push
mov
mov
int
adc
lcall
pop
jmp
rcrb
mov
imul
sbb
sub
faddp
push
call
shll
loop
jns
mov
xchg
bound
sahf
push
adc
out
rcrb
mov
lods
scas
test
sbb
pop
gs
test
xor
mov
pop
and
arpl
mov
ret
add
sub
adc
or
push
jne
pop
imul
sbb
lds
push
rcrb
out
add
stos
push
js
mov
push
add
jg
adc
loope
jmp
xchg
loop
fsubrs
sub
hlt
push
sub
cmp
mov
out
lret
xchg
lods
or
mov
insb
scas
std
inc
xchg
sub
hlt
or
sti
andl
pop
lea
push
push
cmp
out
xlat
mov
xlat
push
jmp
es
push
aad
jne,pt
mov
ret
fidivl
and
sub
or
jmp
and
stos
test
mov
jle
jge
pop
dec
ds
in
cld
out
test
out
sbb
stos
jmp
jg
rcll
ja
lret
push
fcomip
mov
mov
or
lcall
sbb
test
and
jge
stos
jmp
xchg
mov
int
aam
pop
pop
fisttps
fwait
or
rcll
lret
mov
mov
jle
mov
out
adc
add
shll
loopne
mov
fldl
sbb
mov
mov
xor
ja
mov
sub
sub
and
dec
cmpsl
inc
xor
inc
arpl
cmp
ret
or
out
popf
in
dec
icebp
add
mov
subb
notb
imul
sbb
xor
popf
cmp
xor
lcall
je
dec
lods
jne
es
push
bound
mov
cs
inc
push
push
out
ja
aas
imul
daa
add
ret
cmp
cli
jmp
loopne
int
cli
jle
pop
orl
pop
cwtl
xor
stos
clc
enter
in
movsb
jg
rclb
pop
push
pop
ds
cmp
cmp
push
and
xor
negl
loop
call
jns
cmp
xchg
push
or
es
dec
scas
das
repz
sub
ret
addr16
xor
lods
insl
es
sahf
cltd
adc
inc
testl
loop
in
mov
sar
sbb
push
push
and
xchg
insb
xchg
jbe
mov
popf
jo
hlt
test
and
inc
mov
mov
sbb
inc
xlat
clc
add
dec
pop
test
arpl
outsl
dec
dec
sub
or
cld
jb
call
scas
lcallw
js
fwait
ret
sub
cmp
or
adcl
mov
cwtl
jle
mov
pop
orl
or
dec
pop
jns
mov
or
pop
xchg
inc
jns
in
mov
mov
aad
es
rcrl
mov
and
jns
cltd
shlb
xchg
inc
insl
pop
mov
pop
pusha
xchg
push
aad
ds
fidivrs
fcmovu
test
cli
stos
jno
xor
fs
std
imul
inc
jle
loope
pop
xchg
loopne
push
outsl
sbb
jg
int
js
push
push
inc
and
or
add
in
std
add
fistpll
sub
cmp
push
fucom
dec
dec
test
cmpsl
movsl
test
fcoms
pop
inc
test
jmp
jbe
xchg
aaa
sbb
clc
les
insb
jne
rorl
in
xchg
pop
mov
mov
jnp
gs
or
mov
xchg
xor
in
add
fcomps
pusha
add
cmpsl
cmc
in
sbb
pop
mov
out
and
pop
outsb
adc
cmpb
jnp
xchg
test
in
repz
mov
sub
pop
xchg
adc
negb
lret
popf
xlat
adc
loop
mov
push
sub
lods
sbbl
lcall
pusha
cltd
sti
add
arpl
cltd
mov
shlb
es
flds
adc
stos
aas
push
sbb
repnz
jle
in
mov
add
cmp
dec
and
push
dec
cmpl
pop
stos
int
pop
xorl
sbb
outsl
ds
xchg
mov
iret
pop
mov
sub
jg
mov
inc
sub
les
jo
push
pop
push
cmp
in
addb
loop
mov
push
ljmp
int3
enter
stos
mov
shl
stos
cs
daa
lock
insb
aas
ds
lock
xor
ret
sub
in
jmp
fldlg2
jmp
test
repz
sahf
xchg
rcr
fidivrs
pusha
jge
inc
pop
or
or
popa
push
mov
incl
jb
enter
in
sahf
mov
stos
push
bound
sub
repnz
mov
clc
aam
jle
pop
inc
dec
mov
sbb
daa
iret
xchg
out
imul
cmpsb
jo
xchg
sbb
sbb
xchg
sbb
jmp
pop
and
stos
sub
mov
iret
das
shrl
xchg
push
bound
sub
jp
test
add
in
push
mov
subl
mov
and
out
push
insl
jmp
xor
adc
jno
pop
push
inc
leave
shl
ret
notb
or
and
mov
jecxz
jo
mov
or
ficoml
mov
add
je
mov
outsb
fisubrl
sub
add
inc
and
in
dec
insb
inc
pop
testl
dec
lret
xor
cmp
cmp
mov
out
insl
aaa
add
shlb
add
inc
cmpsl
xchg
jg
fstl
cs
imul
add
adc
popf
movsl
data16
and
sbb
push
xor
cmpsb
data16
dec
adc
pop
push
dec
adc
push
mov
mov
dec
inc
enter
jne
out
sahf
jno
sub
push
jns
add
stc
xorb
xor
popa
mov
enter
in
push
xchg
pop
sub
in
sbb
leave
decb
lds
loopne
jb
mov
inc
pop
mov
add
xchg
cli
cltd
push
arpl
jmp
shrl
xchg
jnp
mov
sbb
rcll
jns
lret
mov
sbb
cltd
gs
cmpsb
add
jge
cltd
adc
repz
sahf
test
subl
std
sbb
xchg
sub
mov
or
ds
cmp
jnp
jmp
out
or
cli
loope
pop
mov
mov
daa
in
dec
and
jp
pop
fadd
push
movsl
lret
xchg
sub
sub
scas
adc
test
sub
insb
aam
out
leave
fs
pop
cmp
add
sbb
cld
out
adc
fidivrl
or
xor
je
sub
sub
dec
mov
push
lret
dec
mov
sbb
cltd
iret
lret
inc
fmuls
xorb
rcr
jae
sbb
inc
adc
ljmp
inc
cmpsl
sbbb
mov
sbbl
lea
cmpb
fisttpl
push
psrlw
xchg
push
cld
imul
add
xchg
lds
push
movsb
js
lock
dec
lcall
xchg
cmpsb
xor
mov
push
dec
ja
insb
sub
inc
leave
movsl
out
jle
mov
in
lock
dec
cmp
pop
xchg
push
jb
pop
aaa
jo
bound
cmp
adc
movsl
ret
xchg
cmp
test
dec
xlat
hlt
pop
cmp
stos
test
sbb
and
mov
or
dec
push
popf
jmp
dec
pop
jb
and
mov
mov
or
lea
call
pop
hlt
xor
or
fbstp
xor
sbb
xchg
adc
shld
inc
dec
xchg
adc
lds
mov
pop
adc
int3
mov
add
mov
mov
rclb
xchg
push
xchg
das
fnsave
jb
lods
loope
stc
cli
pop
sbb
lcall
or
jl
push
addl
loop
dec
fsts
orl
push
mov
mov
push
in
negl
and
lcall
mov
cwtl
enter
inc
cld
loope
mov
lds
fwait
stc
scas
rorb
mov
jnp
push
add
xchg
cmp
cmp
push
mov
into
dec
ja
arpl
sbb
xor
sbb
jne
xchg
push
pop
mov
mov
int
ret
aam
push
cmpsb
pop
call
push
lea
stos
adc
rorb
ljmp
cltd
jae
sbb
jmp
test
mov
es
test
mov
mov
imull
or
lods
sub
add
push
lret
sub
push
xor
and
lret
nop
mov
xor
int
out
pop
popf
xor
jle
movsb
jno
into
rol
adc
mov
pop
outsl
xor
arpl
adcl
mov
dec
jb
es
nop
movsb
mov
es
push
or
sub
and
vpmacssww
scas
mov
cmpb
xchg
aaa
sbb
mov
mov
popl
lret
daa
fnstcw
inc
adc
mov
push
xor
xor
jne
insb
pop
push
push
subb
inc
out
popf
mov
hlt
jge
sub
sub
outsl
outsl
int3
cmc
adc
out
fxch
mov
mov
ficompl
dec
mov
dec
xchg
inc
sahf
sti
lahf
mov
mov
fistpl
hlt
pop
pop
imul
test
int
adc
es
xor
movsl
push
enter
mov
xchg
jo
push
loope
add
sub
mov
cmp
push
lea
loopne
push
std
cli
cwtl
push
pop
xchg
adc
les
fists
cmp
ret
lods
pushw
ret
ret
rorl
pop
cmp
xchg
mov
adc
or
mov
fisubs
xchg
cmp
jmp
das
std
mov
cmp
pop
add
sbb
jne
jl
fnstenv
sbb
icebp
sub
pop
push
add
cld
and
cmpsb
mov
or
xlat
mov
cmp
in
inc
xchg
mov
pop
pop
int3
mov
add
idivl
iret
sbb
fdivl
ljmp
or
fucom
jnp
sbb
jmp
pop
lahf
dec
push
icebp
or
adc
bound
stos
inc
push
ret
rcrl
rcrb
xor
outsl
mov
push
out
adc
pop
xlat
push
cmp
pop
ss
sub
cmp
aaa
adc
in
sbb
call
sti
mov
pushf
pusha
xchg
lahf
sbb
adc
imul
cmpsl
pop
inc
adc
sbb
lret
push
xor
leave
push
or
or
pusha
out
movsb
pusha
sahf
sahf
adc
fxch
imul
movsb
push
jle
xchg
inc
jge
clc
pop
je
fwait
repz
jnp
sub
mov
test
out
sbb
movsb
dec
pusha
pop
jmp
aaa
popa
out
shlb
xor
fisubs
stos
stos
push
lods
adc
jl
cmp
xchg
gs
lret
adc
dec
pop
and
adcb
pushl
repnz
test
jmp
and
enter
jb
ror
icebp
cwtd
fnstsw
or
lret
divl
dec
insl
cltd
xchg
fisttps
xchg
xchg
adc
scas
push
in
stos
jecxz
outsl
sbb
loopne
loopne
push
insl
xor
pop
mov
push
repz
adc
mov
dec
dec
insb
icebp
fdivl
sbb
dec
mull
xchg
jne
jge
loopne
fists
icebp
jbe
push
xchg
cmp
int3
out
pop
sbb
sti
loopne
mul
imul
sbb
clc
mov
call
or
push
sub
fistl
imul
cmp
pusha
out
lods
xor
decb
pop
insl
out
fucom
xchg
sub
in
or
into
add
mov
cs
gs
leave
mov
aam
std
fadd
xchg
pop
jp
and
aas
hlt
adc
movsl
pop
or
outsb
push
xchg
inc
jnp
xchg
push
dec
mov
xchg
out
cltd
fldcw
cltd
es
lret
mov
cmpsb
cmp
sub
movq
inc
jl
and
std
push
mov
mov
dec
aam
or
sub
or
sarb
mov
lods
stc
mov
cmp
pop
out
mov
out
cmp
jg
xchg
xchg
lret
xchg
push
jmp
xorl
sbb
or
mov
fs
push
sub
jns
xchg
rcr
div
int3
testl
mov
loopne
leave
les
fmull
mov
decb
xchg
cmp
xchg
inc
cmpsl
lods
add
sub
jns
decb
sbb
jp
aaa
mov
dec
or
fistpll
imul
dec
addb
je
or
int
sub
sub
cmp
test
gs
icebp
xor
mov
sbb
mov
mov
cld
mov
mov
dec
inc
pop
push
in
call
jae
cmp
mov
ljmp
mov
adc
loop
push
mov
pop
cmp
ja
push
xchg
push
xor
jo
andl
inc
xor
or
xchg
pop
jmp
jecxz
adc
imul
mov
sub
xor
test
adc
pop
inc
push
jne
rcl
push
mov
jg
out
xchg
mov
lahf
cmc
outsl
bound
or
fcompl
add
or
sbb
lods
jge
xchg
cmpsl
dec
test
pop
mov
mov
repnz
xchg
push
pop
loope
icebp
inc
and
psraw
cli
lods
fs
sbb
sub
inc
cmp
sbb
fcompl
cmp
dec
cwtl
pop
cmpsl
ljmp
outsl
or
addr16
mov
cmp
cmp
in
cmp
fwait
out
xor
ret
leave
imul
mov
es
mov
sarl
jb
mov
dec
outsl
outsl
mov
mov
dec
xchg
outsl
or
fsubl
loope
lods
xor
inc
dec
std
push
in
js
movsb
js
cmpsb
icebp
jl
test
fnstsw
out
fpatan
and
stc
mov
jbe
jg
in
add
dec
push
or
adc
dec
push
adc
pop
bnd
cmp
outsl
xlat
stos
jmp
add
push
or
and
mov
push
mov
cmp
loopne
std
or
out
stc
test
dec
fsubr
les
sub
inc
adc
dec
jbe
lds
int3
dec
sar
dec
stc
fdivl
mov
notb
hlt
sar
mov
push
hlt
lock
xlat
push
cmpsb
pop
gs
gs
lods
cmpsb
mov
xor
orl
and
add
mov
lods
fisubrs
aas
cmp
jecxz
push
lret
test
jbe
leave
sbb
or
int3
iret
in
mov
sbb
jnp
cmp
pop
and
push
lods
scas
lcall
imul
dec
lods
sub
out
sbb
pushf
add
fwait
cmpsb
in
cs
repnz
and
cmp
push
cmp
lea
pop
outsl
xor
cmpsl
sub
mov
pop
lock
ja
sbb
iret
xorb
outsb
clc
aaa
outsb
mov
add
ss
mov
call
jl
inc
sbb
adcl
xor
cmp
sbbb
lods
in
jno
mov
subl
popa
test
out
inc
ja
or
xchg
outsl
iret
xchg
in
cmpsb
insb
lods
mov
ja
stos
mov
aas
cmpsb
pop
sub
adc
xchg
xchg
mov
outsb
scas
mov
sbb
hlt
sti
add
xor
mov
or
inc
push
sbbl
imul
cltd
andb
inc
mov
dec
cltd
adc
mov
sub
call
mov
rorl
aas
jns
iret
lock
in
mov
testl
or
xchg
jle
push
push
jb
lods
mov
or
in
mov
aaa
leave
ss
xchg
mov
jle
push
push
xor
test
push
inc
frstor
cmp
push
inc
scas
cmp
mov
sbb
mov
aam
push
add
mov
adc
cmp
xor
jo
clc
mov
jp
test
mov
cltd
call
repz
sbb
insl
cltd
sbb
mov
mov
fcompl
loop
xchg
cmp
icebp
mov
lock
sub
sti
push
lret
and
inc
dec
into
adc
pop
ljmp
mov
inc
mov
dec
call
es
xchg
add
cmpsl
pop
mov
movsb
sub
call
ds
pop
dec
push
fcomps
loope
adc
lcall
jg
out
mov
mov
and
add
icebp
lret
in
mov
sti
xlat
lds
inc
xor
jmp
jb
insl
cmp
clc
add
pop
jmp
sbb
mov
push
xchg
call
pop
adc
outsb
or
punpckhbw
mov
mov
adc
ss
imul
push
inc
decl
xor
and
dec
aam
mov
ret
push
push
and
xor
test
fnstcw
sub
and
scas
icebp
cmp
dec
xchg
pop
subl
cltd
inc
test
adc
add
xor
and
rcrl
shrl
cmp
dec
xchg
pop
subl
cltd
inc
test
adc
add
xor
and
rcrl
shrl
cmp
dec
xchg
pop
subl
cltd
inc
test
adc
add
xor
sbb
sub
cmp
dec
xchg
pop
subl
cltd
jmp
jno
push
mov
dec
push
pop
push
mov
mov
dec
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
in
hlt
repnz
sti
cld
icebp
mov
push
bound
add
push
xor
xor
in
hlt
repnz
mov
push
inc
push
push
bound
add
and
and
xor
ffree
int
cld
loop
repnz
orb
jl
push
cmp
or
add
jnp
js
arpl
lods
ret
in
sbbb
inc
xchg
push
mov
scas
pop
in
bound
cld
test
sub
scas
jp
insl
and
jge
cwtl
bound
cltd
and
lret
into
cmp
sub
adc
adc
das
movsl
je
adc
stc
mov
add
and
shrl
adcl
iret
jno
inc
push
pushf
mov
scas
fdivl
xchg
pop
pop
imul
insl
jmp
pop
xchg
push
gs
test
lret
and
sub
xor
mov
dec
xchg
xchg
push
imul
inc
std
inc
out
aaa
xor
or
loop
repnz
addb
inc
dec
push
jl
insl
jb
add
and
test
mov
andl
ret
cmp
pop
or
sbb
outsl
jno
push
mov
mov
mov
test
movsb
int
mov
pop
xor
fs
push
add
jg
push
push
push
pop
mov
xchg
pushf
xchg
out
xchg
xchg
movsb
mov
push
push
bound
add
and
xor
in
hlt
repnz
mov
inc
inc
push
push
bound
add
and
xor
pop
adc
insb
int3
lea
mov
hlt
int3
or
jne
fstpl
mov
mov
rolb
xor
test
jb
push
xor
int3
inc
and
inc
aas
data16
xor
mov
icebp
pop
into
test
xchg
mov
insl
mov
aam
and
pop
dec
out
mov
cmpsb
or
in
jg
cmp
repnz
mov
add
test
xchg
repz
lds
mov
fcomps
xor
sub
icebp
sbb
inc
stc
mov
fadds
les
out
pop
push
lock
adc
lcall
mov
add
inc
push
pop
mov
sbb
cmp
inc
dec
push
aam
loopne
stos
lea
add
data16
adc
and
imul
dec
and
mov
bsr
fucomi
push
mov
cld
iret
or
hlt
pop
std
mov
mov
ret
loop
mov
mov
pop
fstps
je
aas
ljmp
xchg
xchg
mov
mov
sub
aam
inc
das
push
das
gs
jmp
sbbl
scas
mov
jno
ficoms
xchg
push
int
pop
dec
pop
jno
je
jecxz
adc
pop
repz
mov
jl
adc
scas
std
pop
ja
nop
lret
cltd
pushf
and
adc
mov
sahf
movl
jl
cmpsl
xchg
push
imul
or
xchg
stc
sub
and
mov
ds
xchg
push
pop
pushf
scas
xchg
adc
bound
and
shl
lahf
xchg
cld
add
inc
mov
icebp
xor
dec
lock
and
fs
mov
mov
ficoml
ljmp
mov
enter
sub
fcomp
push
insl
and
loop
outsb
lahf
dec
mov
and
dec
fucomi
dec
xchg
ret
add
push
mov
cmp
mov
cmpsb
mov
icebp
and
sub
cmp
push
ds
pop
lea
push
fld1
adc
loope
das
jbe
mov
cli
xor
or
repz
jg
jbe
repnz
pop
lods
fucomi
xor
out
out
sbb
das
jns
jmp
roll
pop
into
call
lods
xchg
sbb
inc
mov
xchg
fcmovb
jp
mov
movsl
jae
sub
sub
popa
pop
or
mov
pop
test
daa
inc
call
inc
push
adc
aas
jnp
push
shl
pop
aam
xlat
mov
cmp
outsl
fldl
pop
lock
jmp
fiadds
ja
or
mov
insl
fldl
mov
mov
or
mov
sub
sbb
js
and
and
xchg
dec
shll
pop
aad
shl
stos
inc
repnz
int3
mov
xchg
clc
mov
add
shlb
or
mov
mov
lods
xlat
fwait
sbb
popf
daa
push
mov
or
push
mov
enter
jge
fdiv
data16
xchg
sbb
jge
dec
sbb
jl
adc
inc
nop
mov
mov
daa
fcoms
mov
inc
pop
xchg
test
repnz
jo
adc
jne
mov
inc
dec
ja
sub
dec
mov
mov
cltd
push
aam
sub
and
xor
sbb
jg
push
sbb
inc
addb
adc
xchg
cmp
fsubrp
mov
xchg
mov
dec
cli
fs
scas
cmp
xchg
add
das
push
cmp
xor
lcall
sbb
loop
imul
pop
fnstenv
lods
fcomps
rclb
or
inc
imul
lcall
mov
fucomi
adc
inc
hlt
sub
es
lcall
inc
cmp
int
dec
add
out
adc
decb
test
mov
popf
sbb
mov
sub
sbb
mov
imul
mov
fildl
jle
cmp
sub
mov
and
add
lds
xor
lods
insb
mov
jmp
and
jp
adc
mov
inc
addr16
xor
dec
mov
cld
les
xchg
fisubl
pop
test
ja
sub
inc
imul
pushl
std
xchg
adc
jno
ret
mov
mov
cmp
pop
aaa
and
xchg
popf
es
arpl
lds
in
shlb
pusha
int3
sub
jnp
enter
fisubs
cltd
fidivrl
ret
fwait
jmp
pcmpeqw
std
cmpps
sub
adc
lea
stc
adc
or
jno
aam
jb
cmp
jo
mov
inc
stos
cmp
mov
fwait
sarb
pushf
cld
mov
mov
sahf
sbb
fmuls
aaa
dec
adc
or
xchg
and
mov
mov
inc
stos
inc
sub
mov
xor
loop
inc
dec
jno
inc
jns
dec
mov
or
xchg
xchg
jge
cmp
mov
xor
adc
clc
or
pop
mov
icebp
mov
inc
jb
cmp
mov
mov
shl
xchg
push
test
bound
call
rorb
mov
out
shrl
pusha
jle
mov
stc
test
adc
jnp
sti
loope
popa
sarb
roll
loopne
sub
pop
lea
pop
xor
push
repnz
in
movsb
mov
inc
jp
pop
and
or
xor
cltd
and
outsl
dec
stos
or
dec
lds
mov
les
xor
pop
cmc
insl
fildl
sti
or
dec
dec
les
imul
imul
ss
inc
into
jo
movsl
aad
repnz
sub
inc
mov
push
add
aas
add
inc
dec
test
push
arpl
ret
rcrb
mov
add
adc
int
dec
fs
add
push
sbb
imul
xchg
shll
or
adc
imul
pop
fcoml
stos
out
xor
std
lret
adcl
add
or
js
dec
into
push
rcll
push
cmp
pop
sahf
in
test
mov
out
sbb
pop
pop
fdivs
fildll
hlt
movsl
push
loopne
sub
xchg
in
push
jnp
add
sbb
sub
cmp
jmp
es
popf
ret
loop
shlb
or
pop
or
lds
cs
gs
add
sub
pop
jp
jnp
cld
cmp
sub
xor
pop
mov
loopne
out
dec
repz
push
adc
mov
sbb
mov
jbe
ret
dec
cli
jbe
dec
dec
xor
mov
mov
lods
xlat
mov
jo
enter
sub
loopne
and
loope
xchg
outsl
inc
add
push
jl
xor
xchg
push
mov
adc
outsb
fcoms
push
cmc
inc
movsl
mov
adc
dec
stos
push
sub
mov
cmp
push
sub
jmp
loop
xchg
inc
cmp
outsl
cmp
leave
mov
iret
jae
ret
or
cltd
cmp
sub
xor
sbb
das
inc
pop
in
arpl
lds
mov
out
xor
stc
sbb
and
inc
mov
test
cmpsl
fistpl
test
cs
sbbl
fidivrl
fiadds
dec
jno
and
cs
add
sub
les
std
out
mov
inc
adc
push
mov
popf
mov
cltd
fildl
rorb
mov
sbb
mov
test
add
das
ja
out
jg
hlt
rcrb
pop
ret
imul
shlb
inc
lds
sbb
loope
cmp
xlat
pop
mov
mov
popf
jmp
mov
stc
loopne
ffreep
pop
out
fstp
pop
fistl
jmp
popa
rorl
out
cmp
push
iret
sbb
or
dec
mov
jecxz
sbb
mov
add
jbe
jb
add
sub
adc
inc
mov
push
xorb
int
mov
sub
mov
hlt
lea
pop
sarl
shlb
int
cmp
stc
popa
mov
fdivrl
xor
adc
lea
inc
sub
add
icebp
pop
cmp
push
popa
mov
bound
int3
pop
mov
or
ljmp
fs
mov
inc
mov
cmpsb
mov
add
cli
jmp
pop
adc
push
imul
jge
cltd
int3
lock
cmc
loopne
insb
push
adc
mov
mov
dec
pop
add
inc
movsl
fs
cld
sbb
dec
imul
imul
into
jne
and
push
or
stos
aam
push
insb
aad
mov
jle
lret
or
add
lods
test
push
lahf
sbb
mov
in
mov
mov
mov
stos
roll
push
std
mov
or
enter
stos
cmp
mov
dec
mov
dec
pop
jmp
mov
xchg
sbb
fs
add
sar
mov
stos
sbb
bound
lret
lock
push
mov
and
out
jno
push
cwtl
mov
test
lds
ljmp
xor
pushf
cmp
xor
popf
lock
je
xchg
push
into
ret
mov
je
mov
or
int3
es
pushf
cmp
mov
xchg
push
pop
mov
in
stos
btc
add
mov
fcoms
loopne
adc
fwait
mov
imulb
clc
xrelease
cwtl
iret
test
mov
dec
in
mov
nop
in
sbbb
ja
adc
push
call
sbb
cld
push
leave
push
in
incl
jmp
cld
lods
pushf
repnz
push
mov
je
call
repz
jns
or
insb
iretw
mov
repnz
ljmp
xchg
mov
sbb
jg
fldcw
sub
push
je
scas
push
fwait
ss
xorl
fmulp
adc
jae
lahf
push
sarb
pop
jmp
mov
xchg
adc
je
and
ds
sti
cmp
mov
sbb
clc
mov
push
sub
sti
push
adc
fs
mov
orb
mov
in
jecxz
fstpt
into
inc
popa
push
xchg
rcrb
or
jne
sarb
jae
pop
cmp
aaa
push
sub
mov
adc
or
xor
adc
outsl
rcl
aam
dec
dec
pop
adc
mov
jbe
popf
dec
inc
pushf
out
je,pn
add
mov
xchg
notl
mov
mov
push
scas
stos
xchg
sahf
adc
xchg
push
stos
lods
jbe
jmp
jnp
xchg
push
leave
push
fistps
outsb
mov
or
jl
xchg
and
push
leave
cmp
dec
mov
fistps
adc
sahf
adc
sbb
shll
dec
imul
jg
cmp
add
sti
loope
push
scas
xchg
jae
leave
outsl
ret
call
xor
mov
xor
sub
cmp
push
xchg
inc
enter
inc
xchg
push
dec
pop
shll
cmp
imul
cmp
push
and
jmp
mov
jnp
loop
adc
xlat
loop
inc
jp
hlt
adc
sbb
pop
lods
add
xor
dec
mov
subb
or
dec
leave
aaa
sub
pop
imul
test
repz
mov
mov
fcompl
and
sub
scas
mov
sbbl
stc
or
jo
jmp
add
cs
movsl
push
xor
adc
xchg
cmp
jle
test
xorb
add
cmp
mov
xor
out
dec
lea
mov
or
push
lea
xor
mov
iret
dec
adc
mov
add
scas
sar
addr16
out
addr16
cwtl
in
or
test
dec
aas
and
out
scas
fldl
sbb
or
mov
outsl
je
stc
aaa
cmp
push
mov
or
cltd
jle
push
movsl
pop
xor
je
cvtps2pi
push
int3
daa
sbb
mov
loope
lds
jecxz
jmp
mov
jae
ret
sub
int3
jl
out
push
xchg
clc
aas
lahf
xchg
inc
les
out
nop
xlat
xchg
dec
pop
aad
sbb
ja
in
sbb
jns
lds
fcomi
dec
push
repz
add
and
dec
adc
rcrb
pop
fldt
lds
enter
jnp
or
inc
xchg
in
adc
push
js
stc
cs
test
add
adc
and
jl
mov
js
sbb
pop
and
mov
stc
sub
fwait
test
loope
pop
xor
test
sub
pop
in
inc
sarb
adc
dec
and
jbe
loopne
push
cmpsl
xor
add
dec
xchg
xchg
in
cli
sbbb
hlt
insl
rcrb
mov
fs
mov
cmp
stos
dec
insb
push
pop
aas
stos
mov
cs
scas
hlt
pop
jnp
xchg
inc
mov
out
scas
rolb
or
ds
or
sub
insb
xchg
js
out
rcll
inc
loop
sbb
scas
sub
out
lds
xor
and
pop
cmc
xchg
cld
xor
sbb
bound
lods
les
xchg
into
jbe
je
xchg
xchg
cmp
xchg
jne
bound
enter
push
ljmp
aam
or
adcb
pushaw
pusha
sbb
add
xor
mov
lahf
xchg
inc
mov
leave
mov
ljmp
stos
mov
sbb
push
insb
mov
fisubl
cltd
xchg
push
mov
inc
outsl
xchg
sub
imul
sbb
fs
push
inc
sub
mov
fstp
lds
push
iret
adc
insl
and
sub
subl
fisubrl
enter
cmp
xlat
push
scas
push
insb
cmp
addl
pop
jl
test
fistpl
fnstsw
shlb
negl
loopne
fsub
lea
fwait
pop
mov
das
pusha
push
push
mov
and
dec
scas
popa
push
mov
and
push
imul
popf
lret
pop
jmp
sub
dec
call
outsl
lcall
call
inc
in
mov
cmpsb
add
cmp
pop
dec
fimuls
sub
rcr
jns
push
enter
push
insl
testl
adc
jne
dec
arpl
push
aas
lahf
ss
mov
adc
xchg
movsl
out
pop
pop
cmpsl
push
dec
mov
xor
sti
jns
and
dec
cld
xchg
fists
cwtl
mov
jae,pn
sub
cmp
lock
decb
call
jns
cltd
mov
pop
pop
in
or
ja
scas
mov
adc
in
sbb
jp
add
mulb
inc
outsb
inc
out
aaa
sbb
fwait
mov
xor
push
mov
cmpsb
jnp
and
je
jns
inc
xchg
subl
insb
adc
test
mov
push
lahf
jl
loop
dec
adc
push
and
pop
insb
popa
xchg
inc
fwait
outsl
mov
fnstcw
and
pop
xor
aam
inc
arpl
pop
mov
and
mov
dec
mov
push
sub
xor
mov
mov
mov
and
cmp
or
adc
inc
in
es
xor
sbb
jp
cmpsb
add
scas
pop
add
inc
mov
test
push
in
data16
adc
lods
mov
add
inc
int
into
cmc
push
mov
xorb
sub
loope
mov
mov
cli
imull
mov
mov
fldcw
adc
xchg
xorl
add
aas
push
in
xor
clc
adc
inc
push
fldenv
xor
cs
adc
scas
hlt
je
iret
inc
inc
push
mov
je
or
xchg
push
pop
out
out
pushf
jb
lea
xchg
inc
mov
mov
dec
fldenv
mov
adc
xor
cwtl
push
out
ds
jecxz
inc
adc
in
loop
cmpsl
out
add
cld
or
mov
aam
mov
rcll
add
in
add
or
fwait
pop
add
into
sub
xor
hlt
jne
popf
pop
dec
clc
jbe
jae
ficomps
inc
shll
mov
push
jmp
test
shl
sbb
not
in
scas
cmpsb
movlps
arpl
cmp
fidivl
sbb
dec
sub
movsb
push
outsb
stos
incb
popa
and
popa
inc
mov
jg
inc
mov
mov
mov
mov
fstpl
pop
or
jns
adc
inc
push
inc
arpl
xchg
cwtl
gs
pop
insb
jno
or
cmp
scas
xchg
lret
movsl
test
jbe
dec
pop
pop
jp
inc
pop
rclb
test
movsb
push
fs
gs
lds
xor
or
ja
jae
bnd
ret
cld
mov
getsec
movsb
shll
insl
rorb
imul
lahf
mov
or
sbb
icebp
fildll
jbe
out
cmpsl
or
lcall
cmpsl
in
roll
sub
stos
call
ret
inc
mov
scas
or
arpl
insb
dec
ja
pop
pop
cli
shl
mov
push
iret
ja
push
mov
pop
mov
lods
cltd
sbb
movsb
jmp
jmp
or
mov
push
jnp
xor
xor
add
pusha
pop
or
add
fbstp
mov
mov
out
shrl
popf
dec
cmp
stos
test
hlt
jp
fs
and
jnp
rolb
adc
scas
push
shll
or
stc
ss
mov
pop
mov
loop
roll
mov
pop
xlat
and
jle
out
cwtl
inc
sti
mov
mov
mov
sbb
push
inc
ljmp
xor
push
lea
cmpsb
xor
das
ret
push
loopne
push
lcall
or
jg
pushf
push
xchg
les
shlb
xchg
daa
adc
insb
test
xchg
sbb
loope
and
and
or
loopne
repnz
add
push
inc
mov
pop
inc
jbe
and
and
push
jle
push
xlat
add
xor
in
sub
in
dec
fstps
xor
insl
pop
dec
and
cmp
pop
aaa
loope
add
pop
das
sbb
jne
ja
data16
out
js
and
sbb
adc
stos
xor
xchg
adc
jecxz
pop
jns
sub
pushf
push
roll
gs
shl
cmp
in
jb
pop
das
xchg
xor
pop
popa
xchg
jle
sbb
nop
sub
push
test
pop
lods
mov
xlat
daa
cmpsl
xchg
cmpsb
cli
xchg
int
dec
sub
xchg
add
je
fsts
add
inc
inc
dec
sbb
sub
popa
imul
mov
cmc
adc
fcmovnb
dec
xor
sti
ss
sbb
xchg
fildll
lea
pusha
mov
jbe
in
sbb
push
add
xchg
push
dec
out
adc
sbb
or
sbb
mov
adc
incb
dec
mov
aas
mov
push
daa
and
sub
loopne
ds
cmp
shrb
aam
mov
jne
xchg
add
jno
jbe
leave
jae
lret
and
mov
pop
adc
push
rcr
int3
xchg
outsb
loope
std
cmpsl
data16
add
jge
dec
add
xchg
cmp
mov
add
clc
dec
insb
scas
daa
repz
push
pop
pop
lahf
jg
mov
sbb
into
push
xor
or
adc
iret
mov
jecxz
dec
xor
and
scas
mov
imul
cmp
inc
incb
ja
xor
add
adc
xchg
lods
fsubs
push
sahf
jecxz
xchg
lods
adc
fidivl
pop
pop
sub
lea
mov
aaa
mov
pop
xchg
jb
pop
imul
aam
out
pop
aaa
mov
in
arpl
loopne
mov
in
jg
or
addr16
cs
repnz
movsb
gs
jmp
popf
mov
roll
sti
mov
push
out
roll
fbld
or
xchg
lock
mov
sbb
push
or
mov
inc
cs
bound
leave
sbb
pop
add
mov
outsb
xor
push
and
and
pusha
add
and
pop
or
sbb
lds
adc
or
lods
push
jle
fadds
imul
or
push
stos
cld
cmp
iret
jns
lock
pop
mov
lret
cmp
popa
test
xchg
imul
out
daa
daa
mov
popf
inc
inc
icebp
adc
xchg
inc
mov
jge
arpl
pop
or
jecxz
or
xorb
jb
cmp
repz
call
shll
das
cmp
dec
cmp
inc
mov
mov
mov
scas
lock
addr16
repnz
mov
inc
inc
push
push
bound
add
and
xor
in
hlt
repnz
mov
inc
inc
push
push
bound
add
and
xor
aam
in
hlt
repz
mov
inc
inc
push
push
bound
add
xor
ret
in
hlt
testb
xor
mov
bound
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
mov
mov
andb
sbb
or
cmp
sub
jo
inc
jp
push
lcall
loopne
lock
shr
and
xor
cmp
sub
jo
inc
cmp
mov
mov
lock
shr
and
sub
pop
adc
jmp
aad
sti
mov
and
out
loop
ljmp
popf
pusha
ror
adc
jne
sbb
xor
repnz
cmc
lea
xchg
cmpsl
lahf
das
cmpsb
inc
sub
cwtl
dec
dec
sbb
mov
mov
pop
cmc
cli
jp
rcrb
and
mov
divb
stos
loopne
loopne
jne,pt
adc
lds
jp
xor
mov
test
pop
jp
jne
aas
test
pop
ffreep
out
shrl
out
pop
adc
cltd
ljmp
inc
out
or
jne
fdivl
sbb
pop
or
pop
or
sub
pop
dec
jno
inc
outsb
cmp
lcall
loopne
lock
shr
and
xor
add
adc
pusha
pop
jo
inc
jp
add
cmc
mov
xchg
mov
arpl
insb
add
js
sub
mov
pushf
scas
rorb
jg
pop
push
inc
add
pop
push
cmp
rcl
fldl2t
rclb
lret
shr
and
xor
add
adc
pusha
pop
jo
inc
jp
push
lcall
loopne
lock
shr
and
xor
add
adc
pusha
pop
jo
inc
jp
push
lcall
cmp
push
inc
lods
rcl
jl
sti
xor
push
insl
stc
cs
popf
push
scas
out
and
mov
inc
xor
movntps
add
das
sbb
jge
or
imul
jo
popf
inc
lahf
dec
enter
push
cld
loope
mov
jnp
in
mov
out
or
adc
push
ret
daa
sbb
mov
jb
cld
mov
pop
adc
addr16
pop
test
push
shll
mov
mov
dec
inc
mov
rolb
add
aas
xor
mov
arpl
mov
out
mov
xchg
jae
xchg
les
jge
push
inc
cwtl
jg
rolb
scas
cmpsb
xorl
sti
in
std
push
negl
mov
or
jne
mov
jae
mov
mov
bound
mov
add
xchg
inc
fcompl
gs
mov
xor
xchg
cmp
imul
xchg
push
jmp
shrb
pop
cmpsb
mov
sarl
or
mov
lea
stos
icebp
mov
jo
and
lcall
scas
into
fimuls
je
jmp
into
nop
sub
push
lahf
fimuls
adc
push
popf
or
clc
jne
jg
jmp
lea
imull
mov
pop
inc
adc
push
in
arpl
sbb
sbb
test
rolb
inc
inc
jno
test
sub
inc
jno
mov
std
test
xor
mov
insb
scas
cmp
add
add
clc
jb
add
pop
push
mov
roll
mov
cmp
cmp
pop
shrb
xor
je
push
pop
mov
out
cmp
addr16
enter
je
inc
cli
leave
addr16
inc
ss
arpl
cmp
cmp
in
outsb
push
mov
and
jno
sti
or
and
add
push
push
mov
cli
add
dec
pop
lcall
cmp
out
mov
roll
add
icebp
ret
popf
nop
mov
cmp
and
in
push
addr16
adc
mov
add
xor
jnp
cld
nop
jl
std
arpl
popf
popf
aaa
mov
pop
mov
inc
mov
loopne
out
in
mov
jmp
leave
push
mulb
or
pop
jns
inc
movsb
cmp
inc
adc
jg
and
pop
mov
jo
roll
sbb
xchg
mov
cmpsl
push
sarl
push
jae
popf
pushf
push
adc
shrb
fcmovne
xchg
sub
sar
out
fs
fnsave
adc
xchg
cmp
and
fbstp
xor
call
mov
pusha
xorb
and
call
in
pop
xchg
sbb
push
xlat
xchg
mov
mov
pop
lds
push
xchg
xchg
push
rorl
jae
mov
je
ret
mov
push
cmpsb
pop
dec
outsb
push
sbb
cmc
ret
push
inc
cmc
mov
push
dec
mov
sub
dec
data16
sub
jbe
mov
outsb
mov
mov
sbb
popa
shr
mov
cltd
pop
js
js
js
jb
sub
das
ss
push
dec
lahf
jmp
int3
jns
dec
es
shl
sub
es
inc
sbb
fwait
icebp
cmpsl
addb
mov
lds
aam
pop
cmc
popf
sub
jle
inc
out
mov
or
mov
test
xor
xchg
pusha
pusha
nop
jmp
xor
sbb
jecxz
aam
rcll
in
sub
sbb
movsl
cwtl
xor
push
mov
xchg
popa
loop
aam
sbb
mov
cmp
stc
adc
pushf
into
out
loope
push
fnstenv
jp
cmp
sbb
jno
push
dec
inc
repnz
or
xchg
or
fs
jae
rcrl
negl
inc
and
dec
pusha
insl
xchg
loopne
xchg
outsb
pusha
mov
cmp
lret
cmc
jmp
ret
nop
ss
push
jl
xchg
push
test
fistl
push
mov
pop
push
jmp
aaa
mov
ljmp
cmp
aas
xchg
xchg
icebp
ret
push
jns
xchg
call
mov
add
hlt
aas
push
ja
cli
pop
icebp
mov
aad
mov
fldt
add
inc
mul
cmp
mov
das
sbb
mov
pop
pop
popf
jmp
push
add
pushf
in
inc
lods
shlb
lock
out
ret
dec
xor
push
xor
mov
popa
int3
cmp
aad
push
inc
mov
jl
imul
rolb
outsb
mov
cld
push
pop
nop
pop
add
dec
scas
sub
cld
adc
inc
das
mov
out
fisubs
fmulp
mov
mov
call
mov
lods
inc
mov
lods
and
in
cmp
cli
in
outsb
or
in
jp,pt
push
jns
mov
sub
or
cld
xchg
sbb
lods
cmp
arpl
fsubr
fs
jmp
adcl
jle
test
cmp
and
pop
dec
cltd
fistps
aaa
hlt
ja
mov
add
out
fadds
fimull
xor
sbb
lds
sub
dec
cltd
es
test
fisttps
mov
lods
das
xchg
test
pop
outsl
dec
dec
jg
xchg
mov
xorb
xchg
pop
loope
or
mov
xor
and
mov
or
pop
imul
dec
xchg
enter
adc
sbb
mov
mov
mov
pushf
sbb
leave
das
cmc
vpunpcklwd
rcrb
mov
popf
adc
xor
hlt
je
inc
inc
push
xor
int
pop
or
cmp
adc
jle
jae
stos
adc
sbb
mov
lret
and
shlb
js
sub
xchg
pop
mov
xor
mov
mov
loope
js
pop
jp
orb
pop
shlb
pop
loop
cmp
cmp
mov
push
subl
mov
sbb
repz
lods
js
sub
mov
sub
jno
loop
lock
orb
cmc
push
sti
cwtl
ds
mov
hlt
jno
jg
xchg
xlat
in
stos
push
push
mov
and
xchg
mov
dec
xchg
fnstcw
pop
imul
es
jo
aad
sarb
std
mov
shll
ljmp
in
xor
lods
scas
sbb
or
out
push
popl
cmp
dec
or
and
inc
out
dec
in
dec
pop
pop
icebp
jo
inc
pop
ds
rorl
arpl
lods
adc
pop
push
mov
pop
push
xchg
fnstsw
enter
xchg
les
cmc
iret
aad
mov
xor
push
lds
push
vmread
adc
inc
and
xchg
and
or
stos
jns
pop
ja
xlat
sahf
in
pop
cmp
add
dec
lret
outsb
cwtl
and
adc
addr16
mov
daa
fstpt
int3
stos
es
mov
and
xlat
icebp
into
popa
and
data16
fcoms
add
jge,pt
jne
enter
lcall
lret
movsb
dec
xor
pop
sub
sbb
sub
aaa
test
call
ficompl
mov
or
mov
dec
add
pop
push
aad
mov
jo
dec
fdivl
mov
mov
sarl
jbe
or
mov
xor
cmp
jge
push
cld
or
jo
movsl
aad
xchg
ss
adc
jge
mov
xchg
in
jecxz
sbb
or
cmp
sub
out
push
movsl
fwait
push
add
or
outsb
dec
pop
mov
pop
addr16
and
cmp
inc
stos
les
scas
cs
sbb
and
mov
stc
xchg
sbb
xchg
push
fwait
les
lret
push
push
jp
imul
pop
lods
sub
arpl
subb
cmpsl
imul
ret
mov
dec
jecxz
shlb
pop
inc
lahf
hlt
xchg
mov
mov
mov
jae
icebp
mov
call
test
or
xchg
push
movlps
mov
int3
lahf
mov
xor
jecxz
mov
push
sub
rorl
into
sub
cmpsb
mov
adc
mov
std
stos
mov
movsl
jbe
jp
or
mov
pop
mov
mov
mov
pop
dec
mov
data16
jns
push
add
adc
mov
and
shlb
cmp
leave
fnstcw
add
gs
xor
es
fsubl
jb
scas
clc
mov
cmc
and
fwait
repnz
inc
mov
dec
test
add
push
mov
sub
pop
repz
cmp
mov
in
mov
loop
mov
mov
arpl
outsl
scas
cli
cwtl
jmp
ret
jle
pop
push
push
pop
ret
decb
add
dec
scas
ret
mov
jnp
mov
loopne
stos
mov
jae
aad
stc
cmpsb
mov
xchg
adc
lret
adc
xlat
cwtl
imull
pop
es
js
pop
inc
lock
stos
adc
bound
push
out
pop
push
sahf
cmp
adc
or
mov
jmp
push
dec
inc
mov
jmp
cwtl
xchg
lret
insb
pop
stos
stc
push
sbb
adc
xchg
mov
and
or
and
cmp
sarl
jnp
mov
scas
mov
push
mov
cld
into
mov
xchg
push
xlat
in
inc
pushl
lds
divb
inc
xchg
pop
cmc
cmp
lods
fsubrs
xchg
push
mov
sub
je
mov
movsl
push
insb
aad
inc
pop
ficomps
loop
mov
imul
and
pusha
in
cs
ret
sbb
daa
cmp
xor
mov
jecxz
pusha
addr16
loopne
outsb
or
pop
aas
add
mov
add
scas
loop
fisttps
stc
sub
dec
cmp
jecxz
lcall
sbb
lret
rorl
jbe
pop
add
lahf
fbstp
push
jge
sub
rcl
lds
out
mov
xchg
cmp
push
dec
push
pushf
testl
stos
mov
cltd
add
cmp
xor
ds
in
scas
sbb
loopne
inc
imul
inc
lahf
mov
test
movsl
jb
inc
sbb
je
dec
cmpsl
imul
stos
popa
mov
adc
lcall
and
jg
imul
aaa
jae
test
xchg
orl
adc
out
fs
or
cmp
xor
adc
push
or
dec
movsl
xor
jne
xchg
or
ds
and
or
jns
out
iret
jg
and
mov
dec
jecxz
decl
add
mov
addr16
push
xor
jge
push
aam
test
xor
mov
adc
push
insl
dec
cmpsl
jne
adc
negl
mov
jg
loopne
mov
iret
mov
scas
int
cmp
cmp
sbb
xchg
ds
sbb
scas
subl
xor
imul
lret
xchg
out
or
dec
data16
xor
sti
sub
mov
js
or
leave
pop
adc
xorb
lock
cmp
adc
cmpsb
jbe
cmp
arpl
call
insl
inc
and
out
out
testb
adc
out
pop
dec
rcll
mov
or
rol
inc
pop
cli
cmp
pop
bound
xor
test
sbb
fsubrl
pop
mov
add
cmc
test
adc
scas
leave
stos
jno
enter
movsl
ret
imul
or
add
push
sbb
lods
in
xlat
mov
std
cltd
test
cmp
ss
pop
insl
lret
dec
cld
fists
mov
dec
je
jge
or
sti
jp
mov
std
push
jne
pop
repz
cmpsl
loop
gs
out
push
pop
shr
dec
fisttps
lock
mov
ja
fidivrs
iret
push
rol
adc
fiadds
mov
test
jb
push
push
xchg
ljmp
in
mov
lahf
aas
ss
movsb
nop
mov
pop
aas
aaa
xchg
dec
cmp
inc
dec
sbbb
push
movsl
lret
popf
hlt
pop
xor
push
lods
outsl
outsb
sub
cmpsw
jb
rcll
pop
rcl
testb
pop
in
lahf
cmp
mov
leave
jno
cmp
jle
sub
lods
in
mov
cmp
mov
gs
es
addr16
out
mov
dec
test
cmp
pop
test
xchg
dec
setb
out
add
repnz
push
ret
test
out
popf
xchg
test
push
lahf
mov
mov
sbb
cmp
xor
shl
mov
and
push
and
daa
pop
xor
imul
rcrb
cmp
test
jmp
scas
xchg
or
hlt
adc
add
mov
xchg
fisttpll
xchg
lea
mov
sub
inc
pop
sub
xchg
push
adcl
nop
lcall
shll
cs
je
xchg
ret
pop
jle
jge
ja
leave
jo
mov
je
inc
pop
or
add
mulb
ret
icebp
daa
rolb
xlat
leave
xor
dec
cmpsl
or
adc
cmp
insb
jb
mov
shr
push
pop
adc
loopne
sbb
out
mov
xchg
fisttps
push
cmp
cmp
insl
shll
outsb
xor
or
mov
dec
pop
cmp
mov
cmpsb
je
xchg
jp
or
out
out
mov
mov
ret
std
cmpsl
mov
loop
mov
fdivrp
and
out
pop
mov
add
imul
pop
pop
pop
test
ds
pop
outsb
or
pop
push
pop
insl
add
mov
fucomi
aas
sbb
jg
cli
mov
and
lea
adc
sbb
mov
mov
dec
and
or
cltd
stos
add
mov
dec
pop
cmc
jle
rclb
sar
mov
pop
push
aad
xchg
test
cli
add
dec
mov
ficomps
insl
jle
push
in
shrl
mov
lahf
cmp
jns
cmp
les
jno
jbe
mov
sbb
mov
int
xchg
inc
add
pop
push
pushf
or
add
sahf
add
lcall
pusha
mov
mov
jecxz
in
push
add
sbbb
mov
std
dec
dec
xchg
jb
repz
inc
mov
negl
stos
pop
and
cmp
push
mov
dec
aam
cmp
mov
insl
lea
pop
add
imul
scas
jo
fisubs
jnp
jno
pop
sahf
adc
adc
jge
addb
sbb
mov
loopne
pusha
in
repz
and
lret
mov
fs
sbb
dec
int
repz
xor
cmp
dec
mov
dec
sbb
test
xadd
cmp
int
int
sbb
test
rcr
scas
call
aaa
inc
pop
inc
icebp
add
inc
adc
mov
fs
fdivrl
sti
fcmovnb
dec
in
imul
dec
jp
and
int3
sar
push
cmp
and
out
xor
jl
jnp
mov
inc
imul
inc
subb
jle
lea
pop
push
sbb
cmp
pop
jmp
sub
test
xlat
push
sbbb
jecxz
sbb
jl
shrd
int3
dec
repnz
mov
dec
pop
fwait
adc
mov
nop
int
int
movsl
jge
adc
nop
mov
scas
and
push
xchg
cmpsl
or
outsl
or
in
mov
es
push
repnz
cmp
xchg
xor
movsb
sbb
push
xor
aas
stos
pop
mov
pop
xor
jmp
add
cld
xchg
and
sbb
jnp
dec
mov
int
xorb
pop
ljmp
jnp
stos
jmp
lcall
xor
cmpsl
pop
adc
andb
hlt
test
int
add
rcl
stos
fwait
cld
movsl
inc
outsb
cltd
gs
xor
mov
pop
ljmp
xor
dec
test
push
xorb
roll
cmpsl
stos
aas
in
out
mov
test
pop
pop
push
push
mov
mov
mov
adc
jge
sub
mov
xlat
fxch
sub
push
aam
mov
sbb
sbb
cmpsl
insb
out
cmp
cmpsb
push
adc
or
inc
pop
lahf
jmp
outsb
pop
fwait
add
cwtl
pop
mov
and
push
push
inc
frstor
dec
push
gs
xor
inc
jb
das
mov
test
fisubrl
aad
ljmp
pop
xor
xor
rclb
sahf
js
inc
adc
aam
mov
sbbl
mov
sbb
add
push
cmp
in
imul
js
mov
pop
sbb
stos
fisubrl
push
fcoms
lock
pop
rorl
dec
cmp
scas
mov
sbb
neg
cltd
pop
cmpsb
cmpsb
jmp
add
in
sbb
pop
dec
test
call
mov
repnz
xchg
pop
rclb
sbb
shrb
iret
aaa
fimull
loopne
dec
mov
jge
xchg
test
mov
rolb
lahf
iret
jo
icebp
adc
fcomi
fwait
sbb
in
push
adc
dec
mov
xor
popf
test
inc
push
sub
jmp
pop
pusha
add
dec
mov
hlt
in
daa
lcall
xor
sbbb
sbb
mov
rcrb
add
add
dec
mov
and
aas
adc
outsb
clc
loopne
sbb
pop
mov
jb
inc
jo
aas
jp
fisubrl
mov
inc
inc
lret
loope
jb
js
push
mov
lcall
xor
cmpsb
sbb
dec
pop
ljmp
mov
insl
pushf
mov
push
push
lahf
push
push
xlat
mov
jbe
test
movsl
dec
shrl
rclb
mov
ja
enter
jle
jle,pt
dec
rorl
adc
fs
in
mov
push
outsb
mov
sti
test
jmp
lahf
mov
mov
sbb
lods
xchg
mov
add
dec
out
test
pop
dec
pop
mov
push
xchg
movsl
xor
pop
test
pop
xchg
in
lock
add
sbb
or
imul
rorl
add
ret
nop
rcr
pushf
mov
pop
fwait
add
push
pop
sub
jnp
in
push
fdivrs
xor
and
fimull
cmp
and
jne
mov
mov
xor
aaa
cmp
sbb
xchg
pop
loope
ss
js
test
jo
dec
aad
rorl
mov
lds
fldt
imul
fisubrs
das
pop
adc
push
jge
roll
aas
daa
pop
icebp
call
outsl
add
push
sub
in
cmp
pop
je
ret
inc
inc
and
sub
mov
sub
xor
xchg
inc
inc
mov
mov
mov
shrl
jne
jae
push
pop
fisubrl
mov
in
adc
mov
add
stos
mov
push
sub
sub
mov
push
add
ss
sarl
xorb
xchg
test
cld
xchg
call
test
sub
ret
mov
xor
jns
hlt
scas
pusha
repz
ljmp
sar
mov
out
add
repnz
sbb
lock
sub
lret
adc
fisttpl
stos
sar
shlb
loope
shl
jns
jmp
outsb
test
and
xor
shlb
pop
push
jge
mov
mov
or
xchg
mov
mov
rcrl
add
and
fdivs
fsubs
sub
xor
mov
push
jno
push
cmc
fsubs
or
adc
mov
cli
adc
cmpsb
insb
std
sbbl
sub
jnp
dec
inc
push
into
je
add
pop
in
xor
bound
cltd
cmc
inc
lcall
dec
lret
cmc
pop
push
popf
pop
push
scas
sti
or
adcl
mov
pop
dec
insb
orb
sbb
xor
push
ss
mov
repz
mov
in
xlat
add
jnp
cmp
jmp
lcall
sub
add
xchg
xchg
mov
jae
xor
into
inc
jne
cli
adc
adc
xchg
add
jecxz
xchg
test
notl
and
stos
mov
mov
mov
lock
shr
and
xor
add
adc
pusha
pop
jo
inc
jp
push
lcall
loopne
lock
shr
and
xor
add
adc
pusha
pop
jo
inc
jp
push
lcall
loopne
lock
sar
ljmp
adc
pusha
pop
jo
inc
jp
push
lcall
loopne
lock
shr
and
xor
pop
sar
mov
test
in
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
