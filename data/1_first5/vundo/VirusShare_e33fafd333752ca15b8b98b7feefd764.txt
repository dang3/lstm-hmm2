add
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
call
mov
push
mov
push
mov
push
mov
mov
push
lea
push
pushl
pushl
call
push
lea
push
pushl
pushl
call
pushl
lea
push
lea
push
push
call
mov
pop
pop
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
push
mov
push
push
lea
push
lea
call
add
mov
rep
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
lea
push
lea
xor
push
mov
inc
push
mov
call
cmpl
je
push
pop
push
pop
push
mov
mov
pop
push
mov
mov
mov
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
add
add
lods
sub
add
add
add
sub
add
add
jl
add
add
mov
add
add
fsubrl
add
add
add
dec
fildl
add
push
xor
sbb
sbb
adc
sbb
and
pop
js
add
test
je
insb
push
add
add
jge
push
aaa
add
sbb
fadds
ret
repz
add
orl
imul
inc
xchg
scas
ds
jne
push
add
fildl
decl
repz
mov
pop
mov
mov
jl
add
rolb
cmp
adc
leave
lods
das
mov
movsb
sti
add
mov
stos
push
xor
add
decl
adc
loopne
clc
jae
dec
or
in
mov
sti
jnp
clc
push
add
adc
call
adc
xchg
test
xor
inc
cld
incl
lea
push
sbb
mov
call
add
or
pop
add
int3
pop
ficompl
sbbb
mov
sbb
sbb
sbb
sbb
insb
push
mov
je
jae
or
mov
dec
out
imul
inc
insl
popa
outsl
outsl
popa
jo
pop
outsl
add
add
gs
fwait
gs
add
orb
pop
pop
push
insb
inc
insb
in
arpl
fs
pop
add
add
sbb
add
add
sub
add
add
jl
add
add
mov
add
add
fsubrl
add
add
mov
cmp
add
add
dec
fildl
add
add
adcb
bound
add
inc
addb
and
mull
adc
jnp
inc
call
pop
pop
inc
pusha
lret
out
pop
and
iret
out
adc
cmp
iret
jmp
lock
call
sub
bound
cmp
add
aam
jmp
push
push
add
leave
xchg
arpl
pop
push
lea
mov
xchg
push
or
lahf
mov
popa
dec
mov
in
sbb
adc
or
cmpl
xchg
enter
push
fs
inc
inc
cmpsb
mov
and
or
add
dec
mov
cld
adc
xor
inc
lods
adc
mov
pop
pop
sub
dec
hlt
and
dec
and
pop
and
and
sbbb
mov
xchg
xlat
xrelease
arpl
rcl
mov
lcall
push
lods
test
pop
sti
out
inc
rcll
sub
sbb
dec
jae
stos
adc
jne
pop
int
rcrl
sbb
testb
les
jmp
hlt
stos
data16
adc
lahf
call
or
fmull
sub
xor
lods
xor
ret
jl
cmp
adc
push
movsb
sbb
mov
mov
pop
jmp
jnp
mov
rorl
into
inc
and
daa
fcmovnb
inc
inc
notb
test
and
imul
pop
ja
movsl
xchg
dec
cmp
stos
popf
std
jae
sbb
jp
inc
or
ret
sbb
fs
daa
divl
sbb
addl
mov
cmpsb
in
aaa
aas
fsubrl
or
mov
and
mov
aam
cwtl
pusha
jo
mov
mov
fucom
js
xlat
imul
adc
rcr
movsb
mov
test
jge
ss
repz
rclb
cmpsb
cmp
hlt
cmp
stc
ljmp
mov
pop
pop
jb
add
addr16
and
adc
sbb
das
xor
imul
fwait
or
lret
xor
fdivrl
popa
lcall
outsb
cltd
scas
add
ret
leave
leave
mov
mov
dec
cmp
or
cli
arpl
mov
add
mov
lods
and
adcb
fidivrs
lahf
and
mov
scas
cmp
push
out
add
int
loop
les
pop
pop
jno
mov
pop
and
jbe
or
out
push
ds
movsb
mov
push
loope
rcl
rcrl
movsl
popa
cmpl
repnz
pop
mov
cmp
jmp
vmaxss
lcall
adc
mov
stos
jp
outsb
loopne
xchg
pop
lods
ljmp
ss
icebp
cmp
aad
mulb
lcall
xchg
ja
mov
push
shrl
jl
loop
jmp
jmp
push
dec
jle
outsb
repz
pop
ficomps
call
fbstp
jle
pop
jp
cmp
ja
fistpl
add
insl
into
fadd
les
cltd
js
ja
mov
loope
push
fisubs
es
inc
lods
orb
or
loopne
jnp
stc
push
insb
xor
mov
popa
or
lea
adc
inc
ficompl
imulb
mov
xchg
add
push
shlb
pop
add
inc
sahf
sub
mov
push
jno
aam
test
inc
inc
and
xor
pop
stos
subb
pusha
je
je
in
push
ret
xchg
sub
push
push
pop
xor
adc
addb
scas
loop
hlt
cltd
add
xchg
xchg
or
or
mov
push
or
iret
cli
outsl
mov
or
sbb
adc
or
insl
das
mov
or
xchg
adc
mov
int3
lret
dec
inc
lods
mov
inc
in
sub
cmpsb
mov
and
mov
push
adc
jne
or
inc
pop
xor
add
push
add
push
adc
push
cld
fsubr
mov
jmp
call
xor
add
es
les
push
dec
cmp
js
mov
lds
fisubs
not
xchg
iret
sub
push
insb
outsb
jo
xor
and
scas
ror
inc
imul
dec
adc
movsl
ret
mov
lock
pop
push
inc
or
dec
jmp
cmp
fidivs
inc
sbb
dec
in
pop
cld
and
test
push
lds
fsubl
jne
sbb
add
rolb
sbb
pop
insl
or
fwait
push
push
inc
test
fidivrs
sti
arpl
mov
jle
rclb
sub
mov
xchg
xchg
mov
xchg
adc
test
push
jne
adc
mov
sahf
mov
cmpsb
out
ds
sarl
fcoml
jle
lea
xchg
ret
insl
add
inc
mov
addl
fmull
xchg
mull
filds
or
cltd
addb
das
ror
push
sbb
dec
ds
orl
negl
sbb
sti
mov
not
cltd
and
xlat
sbb
inc
inc
repnz
lods
les
repz
aam
push
test
fsubrs
push
dec
stos
scas
inc
sub
mov
outsb
sub
aam
push
push
mov
jp
add
frstor
xchg
xor
add
jb
jne
test
mov
scas
mov
mov
dec
shll
or
adc
cmc
leave
xchg
rorl
xor
adc
in
fwait
xor
out
sbb
in
cmpsl
out
jg
bound
faddl
push
lcall
cs
stos
lea
rclb
and
adc
mov
add
shrl
adc
mov
ret
aaa
and
pop
dec
pop
sbb
or
mov
scas
add
ljmp
pop
xor
adc
jmp
pop
adc
mov
in
inc
xchg
pop
add
adc
push
sbb
adcl
out
pop
ret
pop
sarl
ds
leave
pusha
jbe
arpl
sub
lret
push
movsb
and
in
stos
pusha
add
pop
adc
lea
les
inc
test
aas
sbb
mov
and
cmp
pop
sti
arpl
mov
and
data16
pop
push
xor
test
or
imul
push
mov
cmc
or
lods
cs
cmpsb
push
sub
jecxz
int3
cmp
mov
and
loope
jno
cmp
jno
xchg
fimuls
out
mov
lahf
pop
mov
adc
cmp
lods
mov
adc
jl
pop
adc
es
cli
iret
rol
movsb
mov
mov
cmp
sbb
and
mov
sub
rcr
dec
gs
inc
sbb
or
pop
xchg
lds
ret
pop
jg
cmc
cld
xchg
cmpsl
mov
jno
push
inc
insb
test
inc
mov
xchg
in
inc
dec
fdivl
lock
push
jecxz
adc
push
inc
dec
mov
mov
movsl
pop
push
push
or
shll
fldcw
repnz
and
mov
push
add
adcl
mov
mov
daa
adc
adcb
inc
int3
xor
pop
pop
sub
dec
sbb
lcall
lahf
test
icebp
fimuls
push
das
jo
gs
imul
ds
dec
clc
dec
fsts
or
xchg
std
dec
xor
push
and
and
dec
call
pop
cwtl
adc
ficompl
aad
xor
mov
mov
cmp
in
jne
cmp
andnps
push
cmpsb
outsl
fdivrp
mov
popf
bound
add
mov
leave
inc
mov
fld
imul
mov
sub
lret
movsl
fsubs
inc
stos
in
lret
adc
rcrl
scas
mov
in
pop
inc
cmpsl
fistpl
pop
fmul
cmp
mov
cltd
sti
idiv
insl
leave
dec
jmp
cltd
push
mov
sbb
sub
jae
add
inc
je
in
enter
js
fldenv
sti
fnstcw
mov
inc
lret
push
sub
sti
imull
inc
icebp
cld
push
dec
pushl
int
inc
popa
sbb
lea
testl
push
imul
cmp
cmpsb
push
movsl
lcall
pop
sbb
in
push
out
or
cmpsb
dec
mov
xchg
std
icebp
mov
addl
xor
inc
out
sbb
jae
into
adc
gs
les
mov
stos
mov
ret
adc
and
push
add
dec
in
dec
push
rolb
nop
mov
shll
inc
aam
cwtl
sub
and
dec
popf
or
cmp
test
sub
inc
paddusw
push
push
js
or
adc
loopne
mov
je
ljmp
pop
and
je
dec
jno,pn
mov
pusha
popl
push
jb
jecxz
fldenv
adc
test
cmp
xlat
or
cmpsb
dec
adcl
je
jns
sbb
popa
mov
xor
lcall
sub
mov
xchg
dec
sbb
inc
push
sbb
addr16
mov
mov
jl
lock
int3
jns
pop
adc
xor
test
icebp
adc
lods
mov
mov
jle
iret
mov
inc
dec
insl
push
aas
iret
mov
push
fnstenv
addr16
mov
ds
leave
lret
sub
jl
mov
loop
clc
push
jmp
cmpsl
bnd
mov
mov
fcom
xchg
and
sbb
mov
sub
or
mov
bound
aaa
mov
adc
inc
push
bound
aas
xchg
lret
ret
and
cmp
push
jno
out
jae
loope
adc
push
pop
rorb
sbb
push
fs
add
test
shrl
test
mov
pop
xchg
push
pop
test
sbb
mov
popf
cwtl
mov
xchg
xchg
fwait
pushf
sub
fwait
pop
dec
jbe
mov
sub
or
mov
outsb
outsb
jecxz
cltd
push
and
popf
dec
ja
sbb
in
in
pop
mov
js
test
mov
loope
xchg
mov
or
aam
and
mov
orl
or
faddl
in
sub
jle
fisubl
sbb
int
ljmp
ds
sub
pushf
outsb
pop
push
adc
adc
jo
mov
mov
pop
inc
movsl
je
jge
inc
jmp
cmp
and
rorb
jecxz
rorl
frstor
jmp
jl
out
insl
adc
mov
jne
ret
jnp
pop
shll
popf
inc
jae,pt
dec
loope
rorl
push
clc
add
jno
stos
jl
cld
jp
cs
inc
hlt
arpl
adc
cmp
sub
cmp
push
or
jp
adc
xor
je
adc
cmp
xchg
daa
aam
addl
sbb
std
or
std
pusha
xchg
push
push
xor
out
out
mov
cmpsl
mov
pop
mov
clc
or
xor
push
mov
imul
jo
inc
dec
in
or
sarb
mov
dec
jg
jecxz
sub
sub
jg
mov
adc
xchg
push
mov
xchg
sbb
arpl
repnz
lock
and
fldenv
cmp
xchg
xchg
loope
test
mov
popa
cmp
and
pop
iret
dec
outsl
xor
xchg
scas
mov
lods
inc
adc
adc
jo
pop
repz
xchg
stos
aas
in
mov
daa
mov
arpl
test
mov
clc
or
test
mov
xlat
fbld
dec
ffree
loopne
sti
xor
cli
push
xchg
aad
mov
cmp
pop
jmp
xchg
sti
pop
and
fcomi
adc
mov
dec
jp
mov
xchg
lea
std
loope
fsubrp
nop
das
test
popa
xor
lods
cmp
adcl
mov
dec
popf
in
fdivs
pop
fdivr
pop
mov
and
or
cmc
daa
jmp
mov
repnz
jns
stos
jnp
and
add
pop
nop
jle
dec
mov
and
call
sti
dec
sub
push
pop
dec
dec
fs
jnp
push
adc
xlat
xchg
lcall
sub
jne
push
arpl
sub
and
push
sbb
subl
fdivp
loope
or
movsl
inc
repnz
hlt
rcrl
insb
pop
add
xlat
and
and
ffreep
sti
rclb
fnstenv
xchg
sahf
fs
inc
fidivrs
jp
arpl
ficoms
pop
push
cmp
stos
in
enter
jg
sbb
lods
in
dec
mov
lret
out
adc
lods
movsl
subb
push
ljmp
std
pop
inc
std
push
add
xchg
sbb
add
insl
andb
ja
pusha
je
in
sub
imul
test
sub
movsb
push
dec
clc
sbb
push
push
clc
jne
lret
sar
enter
mov
ret
pop
fs
push
pop
dec
xchg
jae
dec
cmp
mov
loop
mov
mov
inc
pop
icebp
pusha
jge
or
mov
dec
push
lret
ds
stc
mov
xchg
xor
ss
push
pop
movsl
out
and
push
mov
jge
in
mov
pop
xor
sbb
adc
sub
ljmp
mov
or
addr16
cmp
and
loope
cmpb
adc
movsl
js
dec
cmpsb
out
ret
insb
or
pop
ss
and
mov
xor
pop
inc
xchg
push
pop
je
push
pop
sub
jns
and
aaa
mov
xor
mov
sub
mov
aas
pop
pop
sbb
pop
stos
cmp
jle
sub
xor
lret
into
adc
jno
psubb
mov
mov
in
shll
bound
je
cli
jae
mov
sub
sbb
jb
leave
out
jns
in
push
jl
pop
inc
mov
stos
daa
lret
mov
pop
mov
dec
fs
movsb
jb
mov
rol
aaa
or
dec
sub
cltd
mov
arpl
jnp
mov
mov
push
insl
je
mov
test
insl
mov
dec
imul
lret
aad
fnstenv
arpl
test
jp
mov
mov
jecxz
bound
mov
fsts
xchg
mov
pop
ficompl
movsl
xor
aad
cmpsl
xchg
jmp
fwait
xorb
xor
xchg
clc
fldl
cli
enter
mov
int
mov
pusha
in
sub
jb
insb
stc
nop
push
jmp
ret
mov
sarb
popf
sbb
cld
cmp
xchg
inc
in
push
cmp
add
dec
fs
inc
xor
xor
mov
push
aas
cmp
out
add
ljmp
pop
adc
push
test
fs
movsl
jo
push
lcall
or
stos
ficompl
mov
sbb
sub
adcl
sub
ja
jecxz
dec
lret
cmc
addb
pop
mov
mov
add
cld
insl
testb
sahf
or
xchg
mov
scas
xchg
shlb
xor
dec
loope
test
xor
jp
pop
out
imul
rcrl
push
arpl
mov
xor
adc
icebp
add
aas
or
add
fcomps
mov
cmpsb
ret
cmpsl
jl
jmp
out
cmpsb
loopne
in
loopne
shl
mov
or
push
icebp
cmp
dec
subb
in
dec
movsl
loope
adc
pop
mov
cmc
mov
sub
inc
into
dec
test
adc
out
stos
stos
sahf
inc
mov
call
mov
mov
aad
add
mov
mov
data16
jnp
in
fcmovb
mov
mov
test
sti
sub
add
and
lcall
lods
sbb
lahf
call
jge
lret
pop
xchg
enter
push
test
sub
jp
pop
xor
jecxz
insb
xorl
push
jle
addr16
mov
and
pop
test
fidivs
dec
pop
cmpsb
aam
cmc
notb
dec
fmul
xor
dec
pop
sbb
test
mov
lret
mov
add
andb
sbb
push
lahf
and
xor
hlt
stc
or
mov
inc
adc
gs
stc
sub
adc
mov
mov
icebp
popf
inc
sub
lcall
adc
mov
add
lods
scas
jo
mov
push
adc
into
xor
les
pop
std
and
push
shlb
popa
mov
ret
mov
jbe
sarl
inc
cmp
insb
cmpsl
ret
pop
lahf
fiadds
jb
idivl
xlat
lret
dec
mov
push
fisttpl
inc
add
xchg
xor
and
jo
cmpsb
mov
in
outsl
into
scas
push
push
fbld
rcl
repnz
popf
sbb
jle
jo
mov
mov
fcmovnbe
mov
popa
pop
mov
jae
pop
xchg
lret
add
scas
jnp
int
adc
cmp
push
mov
push
xor
jle
mov
push
mov
loopne,pn
jecxz
rcrw
sti
pop
fwait
pusha
ret
add
aam
es
cmp
mov
ss
mov
cmp
xor
sbb
push
popf
std
outsb
imul
shll
cmc
aam
int3
loop
adc
jae
pop
push
sarl
imul
and
fnstcw
xchg
sbb
scas
sbb
cmp
mov
fwait
xor
cmp
cs
or
sbb
mov
lret
pop
lock
lds
js
mov
sbb
inc
clc
outsb
mov
adc
ret
mov
dec
int3
gs
add
lea
xchg
aad
cmc
pusha
nop
xor
xor
icebp
frstor
int
adc
mov
sub
sbb
mov
xchg
mov
pop
cld
and
mov
aas
repnz
flds
insl
jnp
cld
inc
cld
sub
stos
fdivrs
jecxz
cmpsl
lahf
data16
mov
push
and
repz
enter
imul
ja
adc
mov
sub
in
out
mov
jnp
in
ret
sub
inc
jno
cli
stc
rorl
outsl
add
mov
out
mov
mov
jle
sbb
pushf
cmp
test
pop
lcall
sub
jle
out
mov
pop
test
out
jmp
sarl
jp
push
test
clc
jl
xor
mov
sub
jl
xor
imul
jnp
jo
xor
popf
mov
cwtl
push
hlt
lret
mov
sub
adc
adc
mov
mov
mov
and
icebp
sbb
in
or
push
pop
adc
ja
xchg
loopne
sbb
push
bound
scas
nop
cmp
mov
imul
mov
data16
ja
push
dec
inc
mov
cmp
pop
mov
iret
and
mov
leave
sub
add
inc
sub
mov
adc
into
sti
ja
jns
loopne
ljmp
mov
fmul
imul
paddusb
inc
mov
mov
or
add
add
pop
add
add
sbb
add
add
sub
add
add
jl
add
add
mov
add
add
fsubrl
add
add
mov
cmp
add
add
dec
fildl
add
add
lods
jnp
add
add
add
add
add
pop
ljmp
add
add
mov
add
fildl
push
stos
stos
add
pop
mov
xor
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
push
push
pushl
call
cmpl
je
mov
cmp
je
call
movl
call
cmpl
jne
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
mov
push
push
push
push
push
pushl
call
pushl
call
call
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
xor
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
pushl
pushl
pushl
push
push
call
add
mov
cmp
jbe
andl
cmpl
jne
call
mov
add
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
jmp
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
push
pushl
call
mov
pushl
call
cmpl
jb
call
mov
pop
pop
pop
leave
ret
add
testb
add
fisubrl
jb
outsb
stos
pushf
add
dec
add
add
add
sub
add
add
sbb
add
add
lret
add
add
add
add
add
pop
out
add
add
push
add
add
cli
movb
add
stos
mov
add
add
insb
cmp
add
jae
outsb
jae
cltd
xchg
dec
add
fisubrl
mov
popa
jecxz
bswap
leave
sarl
jae
push
mov
pop
xchg
sub
js
std
or
push
repz
call
add
push
or
test
mov
pop
iret
push
push
lea
adc
cmp
add
push
add
test
xchg
decb
test
ljmp
jbe
orl
sbb
je
push
loopne
sub
add
xchg
and
jge
jne
incl
push
or
std
test
ja
adc
enter
fbstp
adc
push
pushl
lea
add
add
add
fisubl
mov
jp
add
add
sub
add
add
jae
add
inc
imul
jb
loop
add
adc
add
cs
inc
add
jae
dec
gs
mov
repz
js
push
incb
dec
push
jns
sbb
add
cmp
jne
gs
testb
insb
mov
add
add
add
add
sub
add
add
sbb
add
add
lret
add
add
add
add
add
pop
add
add
or
add
add
ret
mov
jmp
neg
adc
xor
in
lcall
lcall
pop
ljmp
in
push
popf
and
out
adc
pop
pop
pop
es
cmp
insl
in
fld
mov
das
xor
decl
add
jl
shl
fldt
push
out
lret
mov
ret
jnp
in
je
lcall
inc
lods
js
movsb
sahf
ds
cmpsl
addl
xchg
pusha
js
jmp
xchg
mov
clc
dec
inc
jmp
xchg
cmp
cmp
stos
jno
stos
imul
pusha
cld
sbb
je
pop
dec
sbb
in
jb
addb
xlat
sbb
push
daa
cmc
push
or
lds
mov
ds
push
xchg
dec
and
sub
push
sahf
nop
mov
out
fiadds
and
das
adc
je
xchg
adc
mov
jno
pop
xchg
in
scas
addr16
fdivr
incb
sbb
shlb
ljmp
neg
sub
pop
arpl
mov
aas
xlat
cltd
andl
pop
add
scas
push
das
mov
xchg
inc
lret
sar
dec
or
mov
popf
js
fs
hlt
add
insl
aam
cli
fwait
lock
clc
xlat
fistl
cmpsl
dec
mov
inc
xor
pop
push
pop
adc
arpl
scas
icebp
ja
test
mov
mov
outsb
jle
out
mov
fstpl
into
fistpl
stos
jae
pop
jge
inc
mulb
push
sbb
or
lock
and
out
xor
aad
shlb
push
jnp
or
and
jbe
pop
jmp
in
jae
outsl
out
mov
pop
xchg
sti
int
in
mov
sub
out
testb
jmp
pop
out
in
shlb
xor
adc
jb
mov
xchg
cs
mov
or
aaa
push
mov
repnz
sub
jb
insb
cmpsb
pop
add
mov
sahf
ret
sbb
out
test
jmp
adc
sub
push
dec
inc
test
pop
fsubs
jmp
pop
jmp
cmp
cmpsb
pxor
sbb
mov
pop
xor
mov
fsubr
push
adc
inc
mov
jg
repz
daa
movsb
jp
push
mov
and
sbb
mov
sbb
int
pop
bound
mov
sbb
iret
adc
push
iret
inc
push
loop
dec
mov
clc
in
fidivrs
and
dec
data16
pop
addr16
and
push
push
adc
xchg
mov
fcompl
in
mov
inc
scas
push
pop
aas
stos
shr
pop
or
add
push
cmpsl
das
pop
clc
dec
out
aas
xor
dec
mov
mov
scas
fidivl
or
and
aaa
insl
dec
jecxz
in
shll
add
aaa
rcr
mov
inc
or
mov
repnz
mov
and
out
mov
cmpsl
or
dec
push
sbb
mov
in
out
addl
push
jecxz
mov
mov
insb
ret
mov
iret
mov
jae
mov
push
data16
dec
lds
ret
cmp
jecxz
inc
jbe
push
inc
jge
mov
xchg
js
loop
jmp
sar
jnp
adcl
mov
pop
add
divl
into
lods
jmp
cmp
jns
shlb
fucomp
sbb
inc
nop
and
dec
and
icebp
xchg
mov
mov
cmpsb
add
or
cmp
leave
push
lds
repnz
add
dec
sar
rcl
test
movsb
cmp
xchg
sbb
lret
push
inc
and
aad
push
pop
cs
fwait
sub
pop
jecxz
das
cltd
fistpll
pusha
xchg
pop
pusha
adcl
sbb
xchg
xchg
jno
dec
aad
dec
dec
gs
lcall
mov
bound
test
mov
scas
nop
lcall
lahf
jle
bound
ret
mov
and
jle
xchg
or
and
adc
sub
fldt
fcoml
movl
push
in
decb
mov
pop
or
xchg
add
scas
dec
sbb
add
jnp,pn
or
push
ret
jle
fwait
lock
push
cltd
mov
sbb
repz
sbb
repnz
out
or
lea
pop
mov
leave
xlat
fstpl
fstpl
cmp
cmp
add
mov
xchg
xchg
jmp
fildl
adc
sbbb
pop
mov
insl
add
pushl
shlb
rcrb
leave
ljmp
mov
push
sbb
push
xchg
cmp
jbe
mov
push
fdivp
sbb
jne
filds
push
out
clc
movsb
fxch
insb
jae
add
pushf
notb
push
mov
xor
or
or
sub
pusha
rolb
xor
pop
mov
jmp
jo
mov
movsb
rclb
out
mov
hlt
mov
push
movsb
aad
adc
imul
sbbb
int3
pop
imul
lcall
in
sub
loopne
movsl
lock
add
mov
pop
shll
aam
fnstsw
mov
test
test
idivl
cltd
stc
mov
mov
push
sub
dec
inc
test
rcl
insb
jg
cwtl
sbb
jp
pop
mov
mov
imul
adc
push
das
cmp
mov
mov
test
mov
movsb
cld
nop
and
and
sbb
fdivp
jge
roll
nop
adc
test
lret
add
inc
fwait
loop
fwait
push
push
push
sub
cld
jle,pn
test
inc
jo
adc
or
pusha
sbb
popa
rcrb
cmpsb
loop
xor
jnp
mov
loop
sbb
shl
clc
xlat
push
js
pop
xchg
mov
push
xor
adc
inc
lahf
sub
daa
inc
aad
inc
subl
jmp
push
mov
mov
inc
fsqrt
ljmp
sbb
cmc
lock
fcmove
inc
mov
jns
adc
lods
inc
cmpsl
push
popf
push
or
fsub
xchg
xchg
movsb
pop
or
push
cmpsl
in
jo
pop
pop
inc
ret
ror
sub
jno
out
js
or
jmp
test
add
lcall
into
sarl
dec
aad
lcall
shrb
dec
out
cmp
daa
pop
les
in
fisubs
mov
inc
dec
jo
scas
jns
ss
je
aam
jl
rolb
mov
mov
xor
test
jo
xor
xchg
imul
cs
je
pop
or
js,pt
adc
pop
pop
and
pusha
dec
cld
jge
fcoml
adc
lods
xchg
sti
add
cltd
push
dec
in
dec
cld
pusha
pop
mov
movsb
shrb
call
push
push
add
push
ja
call
mov
or
ficompl
sbb
cmp
add
or
fadd
mov
outsl
mov
imul
inc
push
std
jge
mov
sub
es
push
outsl
cmp
pop
lds
xor
int3
push
ljmp
outsl
repnz
add
shl
xchg
stc
xchg
pop
scas
sahf
xchg
cmp
sub
out
enter
xor
movl
es
xor
fxch
push
xchg
dec
andb
xor
inc
push
or
or
lods
cmc
mov
mov
inc
xor
nop
iret
fists
call
pcmpgtb
hlt
push
push
mov
xor
test
mov
dec
jnp
or
mov
jle
aad
and
pop
dec
cmp
pop
pop
adc
in
pushf
aaa
in
add
arpl
icebp
mov
jp
sbbl
cld
xor
fnstenv
cmc
push
mov
push
or
xor
sbb
bound
and
mov
xchg
jmp
call
cld
add
leave
adc
mov
xchg
and
lds
jbe
adc
or
xchg
sti
out
cmp
and
mov
lahf
scas
xor
mov
add
xchg
cmpb
fwait
std
lds
or
lret
mov
loopne
jl
mov
arpl
xchg
aas
nop
sbb
xchg
inc
test
ds
ss
dec
mov
sbb
int3
pop
inc
inc
inc
push
jp
movsb
xchg
dec
inc
test
jge
jp
xor
fldenv
or
scas
nop
fsub
and
test
imul
mov
inc
jp
sti
int
sahf
cli
popa
scas
ds
in
pushf
orb
sub
lret
adc
fidivl
mov
test
lret
mov
xchg
mov
xchg
mov
mov
aas
and
pushf
sahf
xchg
fs
stos
lock
mov
or
aad
push
movl
out
cli
inc
adc
adc
cld
fsubs
decb
gs
lret
cmp
icebp
fisubl
jae
pop
xor
mov
mov
mov
cli
mov
push
js
mov
push
sti
insb
inc
sarb
imul
xchg
mov
out
andb
xchg
lcall
sahf
rolb
sahf
fmuls
xchg
jp
out
lcall
dec
hlt
sahf
or
in
stos
inc
ret
je
das
mov
push
into
inc
stos
incb
pop
xchg
iret
xchg
js
or
jmp
movsb
push
pop
add
sub
or
mov
aad
lods
or
pusha
out
inc
scas
sbb
push
or
pop
movl
xchg
inc
js
mov
xor
jge
adc
filds
movsl
cmc
inc
sbb
mov
ljmp
inc
aaa
ret
fimuls
mov
lahf
stos
lcall
jns
xchg
enter
jo
pop
mov
jb
lret
imul
mov
xchg
das
fdivrs
sbb
pop
add
pop
fisubrs
and
mov
imul
pop
mov
sbb
xchg
add
mov
jbe
es
add
xchg
or
jns
test
subl
fs
add
and
dec
dec
repz
cmpsl
cmpsl
shl
and
mov
enter
lock
fs
lret
rolb
iret
or
mov
test
mov
addr16
mov
adc
out
dec
fldt
cld
mov
jg
enter
rcl
pop
scas
popf
sub
xchg
xor
cmp
jp
mov
pop
and
dec
out
ja
adc
dec
xchg
mov
mull
fs
push
daa
push
mov
jno
mov
leave
inc
cmp
sbb
mov
mov
int
and
jb
jmp
lret
popf
inc
xchg
push
sub
stos
sub
or
int
rep
xchg
outsl
pop
cmc
push
xchg
roll
mov
hlt
fisubrs
ret
inc
fiaddl
mov
cmpb
add
mov
inc
and
loop
mov
ret
mov
mov
pop
rolb
cli
pop
daa
shlb
shll
outsb
inc
mov
cmp
das
jbe
or
icebp
inc
cmp
cmp
pop
subl
repz
movsb
or
sub
dec
imul
fstpt
and
xchg
scas
push
or
inc
divb
push
pop
sar
jl
and
mov
cltd
test
lret
incl
jb
and
jb
pop
pop
xchg
clc
sti
jne
jne
jo
sbb
out
or
hlt
imul
bnd
inc
xchg
in
add
mov
iret
cmp
and
xchg
cmpsb
sub
mov
das
iret
fidivrs
dec
int3
xchg
sarl
mov
add
push
cwtl
lods
sbb
add
xor
in
orl
out
scas
aad
das
fisubrs
inc
push
or
fimuls
popa
and
sbb
scas
insl
cmp
cmp
loope
jl
lret
lret
inc
or
jp
cltd
pop
sbb
lds
jl
push
in
fldenv
jnp
sbb
mov
sub
lret
test
xlat
xchg
mov
ds
ret
into
mov
sbb
cs
xchg
ret
and
into
push
das
xchg
or
jne
faddl
pop
xor
sbb
subb
out
lods
cmpsb
inc
sub
int3
mov
cld
xchg
jmp
pop
push
lock
into
lods
dec
xchg
xchg
enter
test
cmp
hlt
cmp
inc
icebp
repz
sbb
mov
out
and
xor
ret
stos
insl
lcall
and
or
push
popf
lods
cmp
jns
jmp
in
hlt
inc
dec
and
inc
push
jle
repnz
jmp
verw
mov
xor
dec
in
push
pushl
test
pop
js
dec
sub
cli
sbb
stc
stc
adc
ret
sub
arpl
out
xchg
sub
cltd
stc
inc
mov
outsl
mov
movsb
es
hlt
rorb
push
into
xlat
fcoml
dec
inc
pop
sub
nop
outsl
lods
cli
fsts
insb
xchg
xchg
cld
mov
jp
orl
inc
and
and
mov
addr16
dec
adc
cmp
adc
pop
or
lds
cmp
xor
adc
push
mov
popa
sub
mov
cli
pop
or
insl
or
movsl
outsb
les
cmp
sub
sbb
faddp
or
or
cmc
push
testl
pop
aad
sub
or
idiv
dec
movsl
addr16
mov
shrl
and
sbb
insb
movsb
ja
fs
aaa
dec
dec
adc
std
push
aas
mov
enter
iret
add
sbb
cmp
adc
jle
adc
aad
xor
xchg
cwtl
mov
xor
jmp
add
jb
or
pop
pushf
in
sbb
mov
aam
cmpsb
ss
cwtl
lds
icebp
xor
shrl
int
or
xchg
adc
push
into
int
push
add
pop
leave
push
or
out
mov
fmuls
dec
cwtl
pop
mov
xchg
insl
mov
outsb
out
ret
les
roll
mov
and
repz
xorl
out
pop
push
push
in
push
scas
sub
sbb
mov
les
or
inc
sub
cmc
fwait
in
and
js
insb
sarl
test
js
ror
in
cmpl
rol
clc
outsl
adc
xchg
push
xchg
call
pushw
mov
dec
mov
jp
mov
xchg
inc
push
jecxz
cltd
push
push
leave
mov
into
cmp
iret
cmpsl
jb
and
shl
dec
cmp
bound
out
fildll
nop
insb
repnz
inc
add
and
aas
fidivs
clc
scas
xor
test
orb
aaa
and
mov
inc
and
jle
sbb
sub
fildl
js
xchg
jge
xchg
jnp
imul
orl
mov
clc
sahf
repnz
mov
in
xchg
mov
repz
mov
adc
xchg
iret
sbb
scas
dec
jmp
cmp
movsl
cld
xchg
ds
stc
pop
xchg
jmp
add
js
inc
mov
dec
xorb
jae
cmp
sub
jmp
push
ljmp
notb
cs
out
clc
out
jge
inc
cli
mov
sub
mov
imul
jecxz
mov
out
sahf
mov
mov
shrl
xor
and
mov
lock
fldcw
sub
in
lds
insb
mov
aad
mov
or
out
mov
mov
icebp
fistps
es
sub
push
pop
popf
fmull
in
xor
jl
insl
lcall
rcrl
ja
adc
ret
cld
dec
mov
add
test
fisubrl
inc
jp
cltd
inc
insb
push
push
imul
xchg
lock
in
inc
dec
shl
in
rorb
popf
pop
fisubrs
lock
inc
xchg
pushf
nop
fbld
dec
mov
stc
popf
pop
mov
arpl
nop
add
add
sub
dec
push
ss
adc
cmp
xor
into
loope
mov
pop
out
pop
repnz
sbb
rclb
jbe
dec
push
add
js
fsubs
std
gs
movsb
ds
or
or
xor
fnclex
and
xor
push
xchg
inc
ret
fs
sbb
repnz
ret
mov
into
inc
je
jg
xor
push
mov
or
jp
cmp
ljmp
mov
and
cmp
test
sti
sbb
inc
xchg
shlb
cmp
push
push
ss
xor
nop
cvtps2pi
mov
fwait
lea
aam
sbb
fiaddl
fwait
les
mov
push
mov
push
insl
ds
icebp
or
and
out
out
dec
mov
scas
cs
pop
lds
ret
jp
jp
mov
mov
lock
addr16
mov
dec
xor
insl
aaa
sub
out
inc
pop
mov
push
and
imul
je
insl
lods
ss
out
and
cmpsb
sub
xor
lahf
sub
es
or
stc
jb
mov
aaa
xor
xchg
xchg
jg
js
jae
popf
xlat
xchg
push
shl
pop
sahf
lods
iret
add
jmp
sub
push
and
cltd
data16
movsl
xlat
push
cmc
arpl
or
mov
xlat
cmp
xor
out
cmpsb
cli
mov
mov
rorb
and
inc
xchg
mov
cmpsl
add
mov
pop
fsts
addl
push
xchg
cwtl
mov
add
popf
push
pusha
cs
shl
pop
jbe
pop
sbb
fnstcw
push
scas
sahf
add
pop
pop
test
das
mov
popa
mov
push
lock
dec
dec
xchg
int3
jl
sbb
inc
imul
lods
pmulhuw
jl
loop
rcrb
cs
lods
lods
inc
jbe
addr16
mov
jne
mov
scas
lock
xor
mov
aaa
ficomps
adc
and
jl
push
mov
jno
dec
sub
out
movsl
mov
int3
stos
fisubs
call
inc
daa
test
mov
fsub
icebp
aas
and
pop
xor
jg
mov
push
push
arpl
cmpl
int3
push
dec
testl
or
mov
sbb
inc
jp
xchg
mov
pusha
cmc
mov
enter
inc
mov
mov
mov
prefetch
or
push
loope
pusha
nopl
outsl
mov
popa
xorl
das
enter
xor
dec
jnp
test
and
wbinvd
ja
inc
out
lcall
fbld
mov
jmp
push
fcompl
pop
push
ror
lret
fs
mov
popf
pushf
hlt
push
addb
lds
loopne
and
pop
pop
jge
push
xchg
lock
ja
fistpll
repz
out
push
xlat
popa
mov
mov
lods
push
sub
dec
test
sbb
testl
dec
or
stos
pop
xor
jge
test
dec
imul
jl
stos
cmpsl
scas
adc
push
out
clc
mov
imul
mov
daa
daa
popf
pop
push
stc
ja
mov
xor
push
mov
jae
cli
xchg
pop
jg
sub
in
sub
xor
lret
lea
sahf
insb
jge
jb
add
add
fisubl
mov
jp
add
add
sub
add
add
sbb
add
add
lret
add
add
add
add
add
pop
add
add
or
add
add
add
add
add
dec
push
add
add
cmp
add
add
ljmp
cmpsb
add
add
mov
shr
add
ja
mov
jo
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
or
and
and
les
mov
add
add
dec
add
lret
mov
add
add
push
add
add
add
add
add
test
lcall
leave
or
js
add
and
gs
push
jae
inc
jb
fs
popa
inc
mov
outsl
stc
jmp
mov
loope
sub
inc
push
jmp
and
sub
outsb
std
jmp
pushl
mov
ficoml
jns
push
push
push
dec
push
push
shl
push
xchg
sar
add
pop
adc
fwait
test
push
aam
movl
add
or
push
xor
add
loope
out
push
out
add
push
cmp
test
std
call
xor
imul
push
cld
add
mov
push
adc
xchg
clc
aad
jne
shrb
xor
adc
push
jl
lock
push
lea
scas
in
pop
push
mov
and
add
add
pop
add
add
sbb
movb
dec
sbb
clc
gs
outsl
inc
jbe
insb
mov
pop
inc
jo
gs
movsl
inc
jmp
gs
jo
filds
insb
arpl
insb
sub
mov
jns
popa
pop
jne
enter
dec
gs
add
iret
insb
gs
dec
stc
add
pop
add
sub
add
add
add
dec
add
lret
mov
add
add
push
add
add
mov
add
add
add
test
jge
out
rcrb
lahf
jne
dec
ljmp
pop
jae
lods
out
roll
push
pop
cmp
pop
in
repz
cmp
push
mov
push
mov
call
xchg
adc
push
push
mov
ret
xchg
mov
test
fwait
pop
enter
xor
dec
xchg
pop
pop
mov
pop
stc
ss
pop
sub
fcomp
cmc
imul
mov
into
jae
inc
out
test
imul
push
jb
pop
das
sub
mov
adc
cmp
xlat
imul
test
mov
dec
das
lahf
loop
fs
std
test
push
mov
xchg
cmc
stos
mov
inc
and
icebp
sbb
add
ret
lea
mov
pusha
pop
mov
fisubrs
or
pop
push
pop
and
sbb
add
enter
into
push
cmp
and
into
xor
xchg
inc
rcrl
loope
cmpsl
xchg
cmpsl
cltd
decl
xchg
fimuls
jb
dec
inc
cmp
push
leave
ljmp
cmp
pop
call
mov
pop
adc
sub
xor
sub
lock
cmp
adc
cmp
mov
mov
adcl
mov
in
je
adc
ds
icebp
scas
mov
mov
adc
and
or
push
cmp
popa
and
stc
mov
orl
mov
jp
lahf
das
inc
pop
cmp
xorb
out
fisubrs
inc
jp
adc
add
mov
loop
adc
cmp
mov
loop
inc
in
in
repz
mov
icebp
or
lds
popf
sbb
lea
inc
call
mov
repz
mov
adc
repnz
aam
dec
mov
xor
sahf
or
into
sub
scas
lods
ret
or
add
jbe
or
lock
push
xchg
test
rcrl
mov
out
add
jmp
imul
xor
nop
mov
lcall
stos
and
shr
mov
scas
bound
pop
rorl
add
stos
js
jno
out
cmp
xchg
adc
inc
push
inc
in
jecxz
jp
push
pusha
xor
sub
mov
insb
jae
cld
adc
rcll
jg
ss
mov
repnz
xchg
lcall
scas
arpl
call
nop
subl
stos
outsb
sti
insb
push
or
cmp
loopne
fwait
mov
bound
stc
aas
fwait
jbe
mov
cmp
push
loopne
sbb
mov
fisttpll
jae
lock
lock
std
mov
aad
dec
cmp
test
and
mov
sub
fcoms
sub
stc
ret
or
insl
outsb
dec
sbb
and
jp
sub
orb
out
addr16
jge
jecxz
dec
aam
lcall
imul
xor
xor
mov
sub
pop
lret
fimull
fldenv
nop
cmp
xor
loopne
jmp
push
shrl
xchg
mov
adc
data16
xor
cs
repnz
imul
pop
ret
mov
mov
and
or
pop
enter
and
leave
movsl
inc
dec
lret
sbb
mov
mov
pop
nop
std
mov
push
jge
in
sub
add
jne
cmp
iret
sub
sub
mov
dec
inc
ljmp
je
push
push
sbb
fisubrs
les
add
push
xor
shlb
imul
jno
test
mov
negb
pop
icebp
jno
cmpl
or
lock
xor
push
or
bound
inc
scas
stos
sbb
inc
and
loope
xchg
je
fldt
outsb
cmp
pop
lret
push
sbb
pop
repnz
jo
adc
int3
ja
fsubrs
sbb
jp
mov
ja
cld
lds
inc
int
lret
pusha
test
adc
sbb
adc
or
lea
mov
fildl
out
mov
add
mov
ss
sub
nop
iret
adc
cmp
mov
or
in
add
inc
pop
dec
sub
pop
movsl
mov
mov
and
cmp
imul
in
cmpsl
push
addr16
push
ja
sarb
ljmp
mov
xchg
or
mov
dec
adc
fsubr
ret
fucom
and
push
data16
es
dec
mov
adc
cwtl
adc
cmp
ffree
jbe
nop
or
lods
das
mov
push
mov
out
in
leave
mov
or
loop
cltd
adcl
mov
pop
sbb
and
hlt
out
xchg
sub
scas
outsl
xchg
popf
pop
sbb
push
pop
xor
sbb
mov
loopne
nop
imul
pop
out
leave
sarl
dec
inc
inc
nop
mov
in
pop
popa
push
cmpsb
in
dec
cltd
stc
or
push
jle
lret
jnp
scas
enter
insl
outsb
lret
loop
mov
mov
insl
lock
leave
mov
adc
sbb
andl
ret
pop
pop
xchg
icebp
aad
jle
leave
dec
ljmp
or
sbb
mov
or
xor
dec
je
sub
sbbb
adc
add
cmp
int3
mov
lret
pop
sbb
out
xchg
inc
aas
bound
jb
jae
dec
xor
push
popa
pop
pop
add
jb
pop
mov
cmpl
mov
push
push
repnz
mov
in
das
and
mov
sub
xchg
xchg
rclb
xor
xor
xor
xor
ss
sbb
rorl
pop
jecxz
js
inc
stos
mov
push
adc
and
cs
jbe
clc
pop
nop
scas
mov
cmc
aad
outsb
in
inc
adc
aad
xchg
mov
jp
xor
fwait
popa
lock
jnp
sub
sub
jge
jae
push
stos
hlt
int3
test
sbb
xchg
into
sbb
andl
bound
push
ljmp
insl
stos
outsl
cli
mov
in
in
stos
cmp
fwait
push
mov
or
shll
hlt
push
mov
pop
loop
and
sub
rorb
push
mov
jno
das
inc
fiaddl
aam
lds
sbb
std
adc
pop
mov
je
frstor
push
sbb
je
pop
int3
jo
jbe
pop
jo
rolb
adc
or
mov
ja
leave
push
jp
dec
pop
inc
xchg
stc
adc
out
sbbl
int3
and
out
jno
icebp
sbb
mov
enter
pop
pushf
cwtl
pop
les
repnz
andl
stc
mov
sub
inc
jl
in
imul
pop
sub
mov
aas
jecxz
lret
pop
mov
push
lret
mov
pop
shlb
xchg
nop
in
sub
push
faddl
out
adc
stc
inc
leave
sub
push
sbb
inc
sub
jg
lds
outsb
and
jns
mov
or
stos
mov
mov
add
jl
push
xchg
repz
sahf
test
push
test
ljmp
cmp
sti
xchg
sbb
fstpl
pop
add
pop
lds
xchg
in
add
int3
sub
pusha
cltd
stos
shr
iret
aas
jle
mov
fs
pop
adc
fidivl
push
sub
jge
pop
test
test
aam
and
ficompl
adc
dec
movsb
push
addr16
xchg
add
cmp
mov
adc
into
xchg
dec
fsubrl
sub
inc
xchg
rcll
dec
sbb
call
shlb
xchg
inc
xor
ds
loope
and
adc
pop
ljmp
inc
jle
in
xor
gs
stc
cmp
cmp
into
inc
fwait
clc
push
sbb
adc
imul
inc
xchg
xorb
mov
sub
mov
jg
xchg
or
xchg
adc
push
mov
cmpsl
or
test
test
cmp
mov
jnp
inc
xchg
insl
addr16
lds
aas
pop
mov
push
int3
fadd
xchg
xchg
sbb
jns
std
pop
mov
mov
sbbb
adc
inc
push
push
mov
aad
cmpb
stos
jge
aam
dec
out
shlb
cli
movsl
cmp
in
mov
push
push
push
scas
in
fcoms
sub
mov
sub
pop
nop
cmp
adc
push
xor
test
dec
or
leave
les
jnp
aam
or
sub
rcrb
rolb
sub
cmp
loopne,pt
clc
push
shlb
bound
mov
and
xchg
pusha
outsb
xchg
fbld
sbb
stos
es
icebp
jb
out
dec
fwait
inc
enter
and
push
push
and
stc
int3
rcrl
bswap
stos
hlt
cmp
xor
fsubrs
hlt
insb
shlb
cmp
and
xor
rclb
lahf
mov
pop
sub
loopne
and
dec
and
push
or
mov
cmc
mov
cmp
aas
push
nop
jae
popf
mov
enter
xchg
xor
xchg
sahf
stos
mov
sahf
pop
xchg
mov
xchg
mov
es
test
sub
pushl
inc
mov
pop
adc
xchg
cmp
or
dec
mov
ss
and
shl
mov
mov
incb
mov
mov
int
jbe
adc
and
push
outsl
fcoml
mov
pop
add
push
mov
mov
dec
das
popa
pop
mov
push
shl
jle
push
mov
in
add
mov
sub
mov
pushf
dec
jmp
test
lds
leave
or
jecxz
and
dec
imul
pop
das
hlt
andb
loop
adc
rcr
cmp
ror
jl
cmc
adc
jns,pt
out
sbb
dec
or
es
xchg
cmc
add
iret
aas
stc
repz
sbb
cmp
push
mov
mov
in
lret
loopne
adc
jne
scas
lret
pop
sub
out
jnp
xorb
xchg
dec
add
adc
cmp
or
and
push
dec
xlat
push
sub
push
push
inc
xchg
push
add
sub
jbe
imulb
pusha
cli
imul
lahf
cmp
inc
xor
les
push
stos
cmpsb
push
pop
dec
and
or
cwtl
mov
cmp
dec
jp
popf
mov
fwait
sub
aad
les
or
xchg
sbb
imul
fidivs
cltd
out
xor
test
data16
mov
xchg
movsl
js
or
stos
cmp
inc
fisttpl
push
loope
mov
mov
jbe
loope
push
inc
shlb
push
mov
adc
rcll
dec
xchg
and
jne
adc
ficompl
pop
pop
hlt
dec
mov
scas
aad
cli
mov
je
adc
icebp
aad
outsb
xchg
pusha
rcll
sbb
js
orl
adc
jne
jecxz
mov
xchg
outsb
je
mov
inc
mov
push
add
popf
in
fsubrs
ret
adc
mov
dec
jmp
push
ljmp
daa
pop
bound
orb
xor
int
iret
dec
and
jne
push
push
bound
fsubrs
call
rcr
in
mov
fs
mov
jle
int
fstl
imul
add
std
jae
xchg
cmp
sub
cmp
mov
notl
pop
push
push
lods
loope
outsb
xor
push
daa
sbb
inc
insb
inc
icebp
and
xlat
xchg
test
push
dec
mov
mov
mov
adc
in
call
jmp
mov
dec
lds
jno
dec
dec
inc
js
in
sub
adc
insb
fs
inc
aaa
jb
cld
mov
scas
sarl
xchg
sub
out
jne
movsb
add
loopne
mov
sub
in
popf
and
sysret
pop
dec
adc
mov
pushf
lea
mov
xor
mov
pop
es
fadds
add
imul
xchg
pushf
push
or
imul
pop
adc
mov
daa
mov
fcoms
push
lret
ror
scas
mov
movsb
xchg
mov
out
sub
pop
insb
mov
jl
push
test
das
out
gs
inc
sbb
mov
out
cmp
mov
por
not
pop
clc
inc
sbb
fimull
xchg
sahf
mov
dec
mov
andl
cmp
scas
adc
flds
dec
pop
test
sbbl
insb
dec
stos
or
dec
hlt
cli
mov
icebp
xchg
dec
pop
sub
push
cld
gs
cmp
xchg
dec
add
inc
push
in
mov
and
hlt
mov
mov
or
pushf
lea
orb
push
inc
sbb
cmp
xchg
inc
lds
cmc
push
stc
icebp
xlat
jp
inc
mov
loop
dec
insl
inc
or
mov
lretw
xor
pop
adcb
xor
fs
ds
jbe
dec
xchg
js
jle
push
sub
data16
clc
sbb
mov
sbb
jb
rcll
jmp
jo
xchg
out
sub
cltd
cmp
les
xchg
jle
adc
ss
fdivrs
xorb
out
push
divl
push
mov
cmp
pusha
call
arpl
xor
sbb
sbb
push
xchg
mov
cmp
and
sbb
xchg
imul
jecxz
pop
ror
cmp
leave
lds
cli
jnp
or
insl
and
fsubl
addr16
in
in
sub
sub
mov
pop
cmpsl
xor
ret
hlt
icebp
push
fdivr
and
scas
sbb
test
sti
xchg
adc
outsb
or
add
xchg
adc
mov
mov
sub
xchg
data16
inc
lcall
add
push
xchg
or
fimull
jnp
lods
lods
sbb
xchg
pop
rorb
repz
xchg
and
fbstp
push
sbb
mov
pop
xor
mov
add
cmp
cwtl
or
or
inc
std
mov
pop
jbe
insb
lea
xor
out
sbb
nop
xor
imul
sub
cvtps2pi
push
je
repz
in
pop
insl
mov
push
imul
and
dec
inc
lret
mov
pop
inc
cmp
fcmovnu
push
outsl
and
or
outsb
roll
movsl
xchg
mov
into
push
js
data16
xchg
add
cli
inc
divl
mov
sbb
push
sbb
push
push
in
mov
cltd
xor
jbe
hlt
mov
cmp
jbe
dec
inc
mov
mov
pop
cwtl
js
aam
lea
in
or
pop
iret
js
out
dec
movsb
lret
mov
in
push
add
jg
inc
rcrl
mov
mov
xchg
sbb
movsb
les
jg
das
push
cmp
lret
ret
addr16
cmp
arpl
gs
ret
xchg
daa
into
or
push
sbb
in
and
fldcw
jle
xchg
hlt
mov
andb
jo
dec
mov
cli
cmp
sbb
xor
cld
jge
test
and
repz
rclb
xlat
les
push
and
sub
mov
clc
sbb
loop
clc
cmp
jg
stos
dec
stos
sub
mov
shl
sbb
pop
popl
and
jno
sub
dec
lock
pop
test
mov
inc
pop
xor
cmp
xchg
cld
pop
xlat
icebp
adc
xor
mov
pop
stos
add
add
fsubrp
insb
inc
inc
ret
fisubs
sub
adc
push
repz
fldenv
es
sbb
fiaddl
xchg
xchg
pop
and
push
fwait
pop
jns
and
xchg
pop
push
jle
mov
mov
test
dec
je
jle
stos
or
fwait
push
xor
or
sub
pop
cltd
mov
sub
push
js
sub
subb
xor
inc
outsb
mov
pop
push
ss
sub
arpl
fiaddl
pop
inc
mov
aas
mov
xchg
in
lar
inc
pop
cld
dec
pop
ret
mov
imul
or
shlb
push
add
shll
lods
inc
or
xor
mov
mov
lret
add
or
outsb
xor
fs
push
jns
dec
outsb
add
ss
leave
daa
xchg
test
adc
sbb
jns
jns
sti
or
loope
sarb
sub
cwtl
je
jmp
int3
in
mov
xor
sub
ja
frstor
mov
icebp
push
xchg
shlb
sbb
and
jno
ret
pop
push
mov
fxch
add
lds
xchg
sti
sub
or
mov
mov
cmp
xchg
out
push
popa
push
mov
xor
push
dec
fadds
rolb
dec
loop
xlat
xlat
sub
pop
jno
mov
inc
cld
sti
adc
test
stos
ja
cmpb
les
das
bound
mov
and
jns
xor
fsubl
ret
inc
mov
mov
in
outsb
or
pop
outsb
in
push
cmc
js
jecxz
mov
push
xchg
cs
sub
test
jp
xchg
jmp
cmp
adc
mov
mov
cmpl
out
cmp
xlat
gs
insl
fldcw
ficoms
lret
mov
push
fsts
ret
jp
fadds
addr16
std
push
dec
ss
psubw
xor
sbb
fnstsw
stc
jno
cmc
shl
jns
mov
add
decl
movq
aam
cli
sbb
sub
push
pop
outsb
lahf
shll
jge
cmpsb
fs
out
pushf
mov
push
aam
ds
mov
or
inc
rorl
lret
push
pop
pop
adc
xchg
aaa
cli
mov
inc
xlat
cmp
mov
adc
push
lods
mov
sbb
aas
div
addr16
loope,pn
mov
daa
cld
loop
bound
pop
stos
sub
or
es
lock
fsubrs
pop
mov
and
jb
xchg
adc
pusha
enter
cltd
inc
or
in
xor
push
jle
xlat
pop
clc
and
mov
test
push
jecxz
push
mov
lods
mov
insl
jno
mov
lods
gs
pmuludq
es
adc
pusha
aaa
ficoms
adc
arpl
cwtl
std
sbbl
mov
sub
pushf
mov
popa
int
inc
inc
add
cmp
sbb
sbb
cwtl
fidivs
inc
ss
mov
dec
jmp
sahf
les
inc
jecxz
mov
outsb
dec
xor
pop
pushf
mov
cld
push
cmp
andb
dec
loope
test
js
stos
enter
inc
dec
inc
pusha
outsl
xchg
fadd
cmp
mov
gs
mov
mov
and
mov
jmp
push
in
mov
jge
jl
mov
iret
fsubrs
fdivl
shlb
or
outsl
mov
movsb
repz
xor
loopne
add
jne
test
js
or
imul
mov
add
add
stc
add
pop
add
sub
add
add
add
dec
add
lret
mov
add
add
push
add
add
mov
add
add
add
test
sbb
imul
add
add
add
lcall
add
pop
in
fiadds
in
in
dec
add
stc
add
incl
stos
add
ja
orb
int3
int3
int3
int3
int3
int3
int3
int3
add
movb
mov
add
and
add
add
add
push
test
jno
add
add
add
roll
add
add
popa
xor
add
add
inc
add
add
mov
push
icebp
add
xor
add
imul
bound
popa
outsb
add
push
xchg
movl
add
xor
sub
movsb
inc
movl
ret
cld
add
push
cmp
push
lea
test
cld
jmp
push
fsts
leave
inc
adc
rorl
mov
in
add
add
adc
push
inc
sar
cmp
fcoml
in
add
add
decl
add
jno
push
incl
mov
lea
loopne
jle
test
cld
rorb
bound
cld
lds
into
inc
rclb
mov
incl
popf
push
data16
pop
pushl
incl
add
inc
push
ss
pusha
pop
add
add
js
add
add
adc
and
or
xor
imul
mov
add
gs
gs
fs
outsb
xor
inc
inc
dec
xchg
add
jecxz
cmc
xchg
xor
je
popa
push
outsl
jns
outsl
imul
xor
push
popa
fsts
lds
add
add
cmpsb
add
adc
add
add
add
push
add
jno
add
add
addl
roll
add
add
add
add
push
add
inc
add
add
xchg
cmpsb
dec
xor
shl
int3
outsb
mov
aas
loop
jl
jge
mov
cmc
int3
daa
add
mov
mov
and
movsl
sbb
lea
aaa
add
pop
dec
les
cmp
mov
out
cwtl
inc
and
insl
mov
stos
fmulp
jnp
orl
movsl
je
rclb
es
or
fcmove
pop
andb
adc
dec
lahf
push
pop
rclb
loop
ret
test
lods
jp
add
mov
outsb
repz
test
repz
cmp
push
mov
aas
dec
pmulhw
mov
cmpsl
stc
aaa
das
cli
or
ficoml
xchg
fisttpll
push
nop
inc
add
mov
into
stc
in
xacquire
repz
mov
daa
in
mov
ljmp
xchg
mov
enter
pop
stos
int
repz
insb
aam
mov
xlat
pop
adc
jbe
push
cld
cmc
or
rcl
xor
push
aas
inc
mov
sub
andb
call
dec
cs
lret
jnp
xor
xor
rcl
or
jo
insl
ret
mov
adc
jo
mov
or
adc
daa
sub
or
sti
fdivr
mov
ret
push
xchg
mov
lret
mov
lret
adc
cmpsl
pop
in
jne
push
jmp
insl
pusha
rcrb
push
lcall
je
mov
cltd
rorl
jg
and
test
pusha
ret
cld
ss
cmpsb
in
loopne
push
ror
popa
mov
add
lcall
xor
jmp
push
lock
in
or
mov
les
pop
xor
add
pop
pushf
cmpsl
arpl
adc
cmp
stos
push
xchg
loope
adc
out
fs
mov
push
jp
mov
push
adc
sbb
inc
fdivrs
push
inc
pop
cmp
clc
and
out
push
xlat
cltd
adc
adc
outsl
inc
push
xor
outsb
mov
insb
and
in
stos
lret
sub
mov
aam
stos
dec
insl
xchg
dec
mov
cmp
jbe
jb
sub
jmp
xor
js
test
inc
add
and
inc
xchg
jbe
test
xchg
mov
jae
inc
and
jbe
xchg
pop
xor
in
repnz
loop
ja
sub
mov
pop
jnp
dec
stos
test
sub
mov
push
jnp
shlb
mov
imul
or
and
mov
xchg
pop
cwtl
fmuls
add
mov
mov
jno
push
sbb
push
adc
mov
and
sub
ljmp
or
std
dec
leave
daa
add
ja
push
movsb
movsb
inc
or
shl
cmp
pop
push
pusha
jns
jo
std
lahf
add
nop
test
ret
dec
iret
fyl2xp1
in
mov
cmc
dec
into
fadds
cli
mov
xchg
pop
sub
cli
inc
test
inc
pop
jmp
pusha
ret
je
add
cld
inc
xor
mov
aam
xchg
and
push
fsubrs
sbb
aam
nop
fimuls
cmpsl
xchg
imul
mov
dec
fistps
xchg
inc
cld
jne
xor
xchg
mov
dec
mov
dec
sub
call
dec
xchg
add
mov
movsb
and
cmp
aas
insl
mov
faddl
rclb
mov
push
aaa
and
or
mov
rcll
xor
cmpsl
pop
inc
sub
cmpsb
sub
ret
mov
mov
mov
adc
icebp
xor
aad
lods
hlt
nop
iret
inc
fistl
mov
nop
clc
test
dec
out
sbb
fadds
push
js
jbe
int
cmp
push
pushf
nop
push
hlt
xchg
xchg
jno
scas
repz
mov
int
sub
data16
cwtl
movsl
pop
jge
lods
push
adcl
push
or
imul
ds
xchg
mov
xor
adc
mov
fadd
in
insb
sub
or
std
sbb
in
lret
iret
add
stos
inc
jnp
outsl
into
cmp
mov
imul
pop
push
test
push
hlt
jmp
out
push
add
or
arpl
rorb
sbb
out
xor
mov
mov
add
and
sti
adc
dec
sarb
push
cmp
pushw
push
sbb
mov
gs
std
fisttps
icebp
mov
rol
fisubrs
call
pop
or
gs
nop
and
pop
and
jo
sub
push
push
xor
sti
inc
mov
mov
pushf
mov
int3
pop
inc
lret
stc
gs
arpl
mov
sub
mov
mov
inc
jmp
push
and
fdivl
in
test
cld
call
in
jb
mov
jno
adc
jnp
cld
dec
mov
std
stos
maxps
int
jno
pop
jo
jae
cltd
inc
into
addl
adc
mov
cmpsl
jno
push
pop
sbb
cmpsb
dec
jbe
popf
mov
jmp
dec
pop
es
btr
add
jg
int3
stos
sahf
and
popa
out
inc
inc
scas
mov
jg
pop
push
movsl
jl
fcmove
inc
and
sbb
pop
movsb
mov
loopne
mov
fsubp
and
cltd
add
and
jno
out
mov
fnstcw
dec
enter
cs
pop
les
fildll
fisubl
mov
lahf
sbb
and
sbb
xchg
test
shll
dec
mov
jno
xor
xor
int
out
xchg
mov
in
dec
and
nop
lea
mov
sbb
mov
ret
inc
pop
inc
cmp
lret
pop
test
negl
loope
dec
and
xchg
out
jmp
shll
mov
imul
sub
lods
and
dec
xchg
rorb
ljmp
and
mull
cmc
mov
test
pop
xor
xor
mov
mov
loope
fiaddl
inc
test
idivb
add
pushl
jge
dec
mov
mov
mov
pop
arpl
imul
adc
or
out
xchg
data16
mov
lahf
fwait
xchg
mov
imul
inc
xchg
sbb
push
and
cwtl
add
sbb
dec
cmpsb
adc
push
sub
jo
inc
out
jo
adc
inc
and
loopne
loope
add
popa
jns
mov
dec
mov
sarb
int
aas
cmpsl
add
pop
cmp
jo
mov
jmp
xor
ljmp
mov
out
xchg
lods
sub
xchg
icebp
push
cmpsl
js
repz
les
cli
stc
inc
inc
pop
push
scas
shl
emms
push
mov
aam
clc
les
dec
jnp
or
push
xor
jne
sbb
mov
pop
or
fidivs
loopne
sbb
push
mov
jo
lods
in
or
mov
mov
pop
mov
mov
or
jae
mov
pusha
push
ret
aad
jle
mov
mov
movsl
mov
fs
cmp
dec
test
jns
ljmp
hlt
scas
stos
gs
pop
push
add
pop
lret
xchg
jl
mov
ja
je
push
sti
lret
mov
lds
test
cmpsb
and
cmc
insl
mov
not
cmp
push
bound
lret
mov
cmp
add
lock
cmp
inc
mov
ficomps
sbb
and
sbb
mov
arpl
jle
mov
iret
rolb
lods
pop
inc
out
mov
gs
mov
inc
mov
mov
mov
pop
test
ret
call
adc
fistpll
es
push
subb
mov
adc
mov
out
data16
jbe
into
orl
test
sahf
adc
lahf
jbe
mov
mov
adc
mov
xor
movl
add
xor
xchg
xor
mov
pop
mov
into
mov
cli
jp
dec
loope
arpl
xor
mov
inc
les
adc
and
and
inc
shll
xchg
push
jg
push
mov
jl
fldcw
std
sub
icebp
push
call
cwtl
pop
sbb
push
cld
fldenv
cmpl
add
jnp
lret
std
leave
sub
adc
das
into
scas
fsubrs
ds
mov
aas
sub
inc
xor
insb
xor
adc
cmc
cltd
mov
sahf
dec
mov
pushf
push
cmpsl
popf
movsb
mov
push
ror
add
add
xchg
sbb
out
mov
adc
xchg
fidivrl
repz
shr
xchg
push
std
cs
adc
xchg
imul
mov
mov
pop
loopne
imul
sarb
lcall
or
inc
aaa
xchg
adc
fsubp
test
and
shl
mov
dec
mov
xchg
jns
add
daa
cmp
add
adc
jmp
lret
fwait
insl
sbb
add
sbbl
adc
jl
movsl
xorl
or
adc
in
dec
or
xor
data16
push
stos
push
sbbl
push
and
mov
xchg
lret
aas
and
add
lock
mov
adc
scas
mov
cli
and
xchg
mov
cmpsl
jl
jno
in
ror
and
xchg
or
push
imulb
scas
inc
adc
mov
aaa
add
dec
pop
mov
movsl
xor
cld
cmp
movb
popa
es
int3
stc
bound
pop
pop
loopne
pop
fistpl
push
rclb
sti
xor
push
outsb
in
dec
sbb
sbb
rorb
add
leave
mov
adc
nop
push
sarb
sub
lds
lods
fcmovnu
hlt
cwtl
push
cmp
inc
movsb
scas
orb
push
icebp
jecxz
shrb
adc
push
add
cwtl
mov
xlat
repnz
push
jne
aaa
and
inc
cwtl
or
xor
sub
adc
daa
xchg
xchg
ja
fstps
inc
icebp
lock
inc
imul
shrl
mov
pop
hlt
loope
int
lock
notb
mov
jmp
xchg
shll
data16
cwtl
mov
jbe
mov
jb
into
in
scas
pop
movsb
hlt
adc
out
cltd
lcall
pop
pop
mov
push
mov
xor
lahf
mov
aaa
and
sub
xorb
lea
xor
mov
ljmp
sbb
mov
cmpsl
ret
movsl
nop
xchg
mov
stc
fs
xchg
dec
mov
add
lret
popa
fld
jg
bound
gs
push
mov
jmp
mov
add
iret
mov
sbb
sbb
and
out
pop
imul
adc
ds
dec
xor
or
mov
mov
out
ret
lahf
xchg
mov
clc
sbb
fnstenv
dec
rcll
inc
sub
sahf
cmc
aad
je
repnz
jg
push
aaa
add
into
std
inc
jg
cmp
pop
in
fiadds
add
add
or
jp
xor
jecxz
add
adc
pop
dec
shll
xor
pop
sbb
or
sbb
add
ret
aas
popf
sub
arpl
pusha
and
scas
mov
mov
movsl
jae
cmp
fs
mov
mov
mov
nop
mov
jns
inc
fstl
imul
xor
xor
xor
adc
jmp
or
lods
int
jno
lahf
scas
testb
push
and
rorl
sbb
pop
lds
add
outsb
insl
inc
sub
cmp
cmp
xchg
jecxz
iret
jns
jmp
jnp
adc
add
imul
and
sar
aas
icebp
clc
stos
cmp
push
lea
pop
fmuls
xchg
mov
mov
cmc
sbb
test
lock
cmp
pop
xlat
sbb
mov
popw
pop
dec
and
mov
outsl
mov
test
or
out
rcrl
idiv
aaa
arpl
sub
jl
lock
and
into
jno
xchg
pop
add
cmpsb
adc
dec
dec
out
int
cmp
sbb
jge
jp
mov
out
dec
or
imul
or
or
or
ret
ret
out
sti
lods
adc
or
jmp
data16
dec
mov
pop
fildl
mov
mov
insb
push
cmp
push
inc
ret
imul
dec
roll
cmpsb
aas
jecxz
cld
xor
xor
stos
cmp
ret
ret
dec
jmp
add
jbe
xlat
or
xor
mov
cli
push
ds
popf
sub
cmpsb
ret
divb
dec
stos
cmc
jge
fwait
fwait
mov
dec
sbb
push
add
data16
sub
pusha
jecxz
icebp
rcl
xchg
cli
insb
lret
jo
xor
mov
js
add
sbb
push
cmp
sub
stos
stos
mov
mov
gs
loop
push
adc
movsl
jno
rcl
xor
jne
jb
arpl
aas
test
and
add
data16
cmp
jae
pop
lods
push
out
roll
out
aam
sub
stos
inc
xchg
push
inc
les
xor
das
mov
or
dec
dec
ja
mov
pusha
mov
push
insl
sub
cmp
jno
adc
cmp
cmpsl
mov
aad
enter
jge
xor
lds
rclb
and
bound
mov
inc
adc
adc
sub
call
or
pop
pop
dec
jo
mov
syscall
add
or
cwtl
fisttpll
push
sub
sbb
out
repz
push
adc
imul
mov
inc
mov
pop
sub
pop
mov
insb
mov
out
pop
shlb
aas
push
aad
cmpxchg
dec
repnz
cmp
into
mov
mov
mov
jge
pop
sbb
mov
adc
mov
xchg
gs
dec
roll
cld
mov
daa
sub
fcmove
mov
jmp
push
push
pusha
xor
rcrl
mov
adc
repz
pop
dec
lcall
push
aas
push
jmp
jns
leave
xor
out
cli
js
jne
std
mov
jmp
mov
lds
add
xor
inc
mov
cmp
int
nop
out
pop
popf
enter
pop
pop
xor
inc
out
mov
dec
inc
dec
inc
in
push
outsb
dec
andl
cmpsb
das
mov
mov
push
pop
repnz
jns
xchg
cld
scas
lahf
mul
fildll
mov
and
std
mov
cmpsb
mov
test
pop
cmp
mov
mov
ret
gs
sbb
sbb
lret
enter
test
mov
jno
pop
pop
in
mov
rcll
push
sar
dec
inc
mov
xor
mov
repz
bound
jge
cmp
push
mov
out
push
pop
ja
mov
and
dec
xchg
xlat
lret
xor
mov
fistl
ret
daa
cltd
or
fnstsw
sbb
stc
shrb
sbb
push
adc
call
shll
imul
mov
sbb
out
je
dec
or
adc
mov
fs
sbb
daa
aam
rorl
pop
jge
pop
mov
or
lock
bswap
mov
jmp
inc
fisttps
mov
cmpsl
jne
ss
into
mov
sbb
insl
pop
out
cmpb
fwait
repz
test
mov
add
cmp
dec
mov
xorl
rol
mov
mov
shll
sbb
push
cmp
pop
sbb
bound
xor
cli
mov
lahf
inc
cltd
mov
sbb
outsl
fld
inc
and
cmc
dec
inc
movsb
push
je
or
fiaddl
mov
jl
into
xchg
aam
sti
jg
adc
or
pop
test
jne
jmp
and
stos
popl
pop
xchg
mov
mov
pop
add
mov
rorb
or
test
andb
lahf
push
xorb
sti
dec
out
cmp
mov
pop
fwait
dec
dec
out
sub
icebp
in
inc
and
mov
mov
jb
icebp
push
int3
clc
cltd
mov
icebp
mov
or
sbb
out
ds
add
mov
aaa
add
iret
enter
push
movsl
sub
cs
xor
jle
cmp
xchg
jae
mov
int3
ja
mov
and
cmp
mov
mov
pop
pop
pop
push
cmp
mov
push
sbb
daa
movsl
dec
xlat
scas
mov
cmpsl
cmpsb
mov
xlat
pop
mov
fdivl
incb
mov
mov
out
mov
push
mov
stos
sti
pop
adc
stos
mov
and
cwtl
lods
ret
fsubrl
fsubrl
xchg
jae
mov
out
stos
outsl
mov
out
mov
pop
mov
fs
dec
out
add
int
push
and
add
pop
pushf
loopne
inc
insl
popa
les
mov
sub
subl
push
sar
in
xchg
nop
imul
xchg
inc
popa
mov
push
add
cli
aaa
add
popw
xchg
dec
lock
jmp
mov
pop
or
xchg
mov
add
or
cmp
out
push
or
mul
push
sbbb
push
inc
shrb
fsts
loope
aaa
add
sub
lods
mov
outsl
imul
mov
lret
add
xchg
sub
loopne
pushf
mov
or
test
or
outsl
and
cmp
mov
push
out
pop
pop
add
scas
pop
or
xor
push
push
sub
add
outsl
and
or
shrl
sbb
lret
mov
data16
cmp
outsl
adc
icebp
insl
fcomi
cmp
xor
popa
pop
dec
cmp
xchg
daa
jnp
movsb
sub
jnp
aad
pop
mov
pop
nop
mov
mov
dec
imul
cld
cli
add
mov
mov
out
mov
out
dec
cmp
nop
sbb
ret
xor
fistl
lret
lret
sub
mov
mov
ss
pop
jmp
into
dec
xchg
dec
fistps
jno
sti
stc
add
out
and
mov
stos
sbb
xor
ljmp
mov
loop
dec
cld
sbb
sti
jge
pop
in
xchg
shl
mov
aad
ss
jns
cmpsl
jnp
popa
jge
in
in
mov
pop
jle
jne
divb
push
xor
lea
or
sub
add
lahf
sbb
add
sub
mov
int
in
divps
inc
mov
cmovs
outsb
cli
mov
lock
aam
inc
dec
mov
adc
fistps
jno
sbb
movsb
add
push
pushf
movsb
inc
xchg
push
in
shlb
bound
mov
add
jns
int3
hlt
mov
dec
jmp
int3
or
or
imul
out
cmp
rclb
xchg
pop
jnp
fst
xor
arpl
xor
sub
rcrb
pop
adc
xorb
stos
fistl
sarb
or
leave
je
fsts
imul
xor
add
add
xchg
add
roll
cmpsb
add
adc
add
add
add
push
add
jno
add
add
addl
roll
add
add
add
add
push
add
inc
add
add
xchg
xor
nop
add
add
add
lock
add
add
add
popa
adc
lcall
add
roll
add
adc
stos
faddl
add
mov
dec
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
mov
push
movzbl
mov
sub
je
call
push
push
pushl
incl
pushl
pushl
call
lea
push
call
mov
movzbl
jmp
cmpl
je
cmpl
je
call
mov
xor
call
mov
mov
mov
push
mov
call
push
mov
call
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
not
mov
or
mov
call
mov
inc
push
pushl
call
mov
mov
pop
pop
leave
ret
push
mov
mov
mov
mov
push
add
mov
mov
add
mov
mov
mov
call
mov
push
mov
mov
pop
movzbl
movzbl
sub
je
addl
push
push
call
pop
pop
push
push
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
ret
jecxz
add
add
inc
hlt
mov
mull
add
push
add
add
mov
add
add
add
add
add
and
inc
add
popa
add
je
add
add
add
add
add
xor
mov
add
add
lret
outsl
add
les
je
adc
mov
and
call
sbb
add
add
mov
mov
std
push
or
incl
clc
sub
mov
pusha
pop
add
std
sar
fwait
and
cld
test
popa
insb
aaa
rorl
xor
test
sarb
inc
add
scas
loopne
add
repz
add
xor
call
push
push
adc
mov
add
adc
imul
add
add
push
cld
ret
inc
push
enter
and
arpl
add
add
lret
lds
call
adc
jmp
add
add
add
inc
hlt
add
add
adc
push
add
add
mov
add
add
xorl
inc
sarl
mov
inc
aad
gs
sub
sbb
jns
cmpsb
je
pop
inc
and
push
loope
add
mov
inc
insl
insb
stos
xor
dec
outsl
sarb
jne
outsb
add
je
addb
add
movsb
add
add
jecxz
add
add
mov
add
add
xorl
add
push
in
add
add
xchg
add
add
repz
add
add
ret
je
add
add
add
repnz
roll
or
jb
test
sub
sti
xor
adc
jle
and
adc
shll
popa
imul
push
push
ss
not
loop
cmpsl
ja
xchg
sub
outsl
lods
dec
push
xor
or
sbb
pop
nop
jg
push
xchg
es
in
sub
push
loope
adc
rorl
shrb
cmpsl
sub
cmp
mov
ret
cmp
or
lret
inc
adc
scas
inc
cmpsl
bound
scas
xorl
and
xchg
mov
cmp
and
pop
ret
inc
xorb
jnp
imul
inc
out
lock
pop
inc
mov
popf
add
fildll
rcrb
jl
pusha
mov
xchg
adc
ja
call
aaa
outsl
fnsave
int3
bound
mov
xor
lcall
push
repz
stos
inc
daa
sub
sbb
cmp
nop
fisubrs
add
stc
push
in
sahf
bound
sbb
data16
xchg
aaa
jae
std
stos
lcall
in
fsubrp
cmp
pop
add
push
fdivl
add
add
jl
cmp
xchg
xchg
mov
mov
mov
test
sbb
outsl
jle
mov
dec
cmp
dec
lret
mov
ja
jp
ss
or
sub
ljmp
xchg
xchg
jg
jne
cs
sti
push
insb
dec
sbb
mov
mov
xorl
sbb
jo
lods
or
mov
inc
test
mov
repnz
add
xchg
ret
dec
cmp
pop
push
imul
stos
dec
movsb
push
mov
lret
notl
push
xchg
add
adc
cld
sahf
fdivrl
ss
aaa
jnp
pop
cli
les
addb
out
mov
lock
andl
fbld
pop
add
scas
out
jbe
adc
push
jmp
mov
pop
and
mov
adc
mov
or
movsb
shrl
test
out
mov
shl
repnz
mov
sub
xchg
push
lcall
arpl
push
or
lods
pop
xor
sarl
xor
fnsave
add
lcall
xchg
mov
push
cmp
cmp
fucom
shlb
jl
ror
cmpsb
rorb
leave
and
and
sbb
shrb
test
sbb
lret
xchg
mov
cmp
ss
repnz
jp
ljmp
out
cwtl
cmpsl
mov
jns
or
cld
das
mov
sub
adcl
fcmovbe
test
pushf
bnd
dec
imul
aam
jg
xchg
adc
sbb
push
adc
sub
test
fdivrl
lods
pushl
sar
fs
xlat
cmpsl
xchg
xchg
xor
outsb
nop
xchg
mov
jns
push
adc
pop
addr16
out
into
xchg
ficoml
sahf
mov
lock
mov
sub
roll
stc
outsb
and
xchg
ja
mov
dec
xchg
bound
fsubs
test
pop
popf
mov
mov
xor
movsl
adc
jmp
and
out
xchg
xchg
cmpsl
and
jmp
negl
push
dec
jmp
mov
aam
arpl
push
cmp
inc
adcl
outsl
lods
dec
cli
mov
test
mov
cmp
ljmp
sub
or
push
outsb
pop
dec
fwait
push
testl
xor
iret
cmp
insl
inc
xor
add
stc
sarb
scas
js
lret
jmp
xor
mov
aam
rorb
ficoms
imul
lods
inc
rcl
into
lret
mov
mov
inc
scas
inc
repnz
mov
dec
pop
push
push
sub
sar
lret
test
mov
test
push
ja
test
rorb
inc
iret
mov
mov
pop
pop
mov
in
mov
add
insl
cmpsb
dec
fisubrl
xchg
aaa
call
stc
pop
xor
adc
dec
sub
and
sbb
out
out
lods
aaa
jg
cmpsl
icebp
test
pop
sub
sti
arpl
xchg
test
push
mov
dec
or
jge
insb
addl
mov
dec
andl
fcomip
scas
shrb
jae
cmp
or
add
inc
shll
movsb
pop
ss
in
mov
xor
jnp
xor
fcmovne
dec
cmp
mov
lret
adc
aad
adc
mov
xlat
stos
cmp
jmp
sub
cmpsl
pop
xor
pop
adc
or
ss
push
test
shrl
dec
int3
int3
push
dec
inc
les
in
lds
mov
mov
xchg
fs
movsb
xor
dec
into
mov
cmp
loope
xor
sti
or
stos
and
pop
dec
xchg
bound
pop
jg
int
add
lds
jb
push
repnz
add
add
shrb
fistpll
add
shll
or
and
addr16
insl
fnsave
sarb
in
or
leave
xchg
mov
xchg
push
fdivl
lods
cmp
xor
rolb
cmp
cmp
xor
lds
fmull
mov
and
movsl
xchg
aaa
inc
aam
ficoml
lea
push
decl
jbe,pn
lods
xor
ds
cltd
jl
mov
adc
cmpsb
dec
xor
faddl
mov
push
adc
in
in
fchs
lcall
js
mov
lods
sub
arpl
leave
mov
add
mov
cmp
mov
scas
sbb
add
popa
test
push
insl
jmp
je
movb
stc
mov
loopne
icebp
insb
add
pop
lcall
sub
stc
int
add
push
add
mov
sub
sbb
jne
in
and
int
inc
push
inc
test
cmp
cmpsb
jnp
stc
movsl
add
in
xlat
cmpsb
push
cwtl
mov
xchg
or
and
aad
decl
sub
fs
fistps
mov
stc
addr16
and
mov
jge
stos
dec
add
jle
adc
out
cmp
or
pop
repz
mov
int3
jl
jecxz
lods
cmpsl
pop
data16
das
adc
mov
add
cmp
test
or
push
mov
das
je
xchg
shll
xchg
mov
test
mov
push
or
out
test
popf
popf
hlt
add
push
xor
or
in
dec
xchg
lods
cmpsl
xchg
jno
xor
cmpsb
mov
mov
jg
sub
aad
hlt
mov
push
insl
gs
jle
mov
pop
scas
jge
fs
dec
add
gs
push
dec
mov
push
mov
stc
sbb
mov
mov
cltd
mov
inc
push
mov
jo
mov
fwait
pop
push
clc
inc
cmc
test
adc
fildll
popa
pop
add
sbb
scas
stc
out
out
or
jne
xor
cltd
jne
ss
push
fcomps
in
imul
jae
iret
and
fsts
mov
adc
xchg
icebp
cmpsb
lds
ss
or
add
fnstcw
adc
imul
loop
xor
or
movsb
xchg
pop
inc
inc
pop
aad
pop
fstpl
dec
popa
ljmp
ja
lret
sbbl
mov
xlat
and
aad
jmp
xchg
sbb
mov
je
sbb
and
and
jge
pusha
mov
arpl
cmp
fs
cld
mov
les
jbe
addr16
aam
pushf
out
fildl
cli
sti
cld
push
out
dec
call
out
mov
je
jecxz
cmp
dec
jo
loop
dec
lods
pop
and
add
xor
or
or
sahf
sub
cmpsl
dec
les
rcll
inc
loopne
xor
adc
mov
mov
mov
push
lret
push
repnz
xlat
imul
pop
pop
mov
das
js
lret
jne
jecxz
cmp
inc
rolb
dec
out
outsl
js
mov
lahf
arpl
sbb
cmp
prefetch
xor
idivb
test
inc
jp
in
xadd
clc
dec
movsb
jns
xlat
popf
push
pop
aam
scas
mov
mov
pushf
jge
mov
popf
jae
add
enter
iret
daa
sarl
and
aam
pop
repnz
loop
xchg
jge
inc
mov
xor
pop
test
mov
push
pusha
dec
xor
push
cs
clc
and
fsubrl
dec
notb
xchg
aam
imul
scas
sbb
shrb
jo
scas
adc
push
nop
jne
push
add
sbb
inc
insb
sbb
mov
mov
mov
mov
inc
ljmp
add
push
ljmp
repnz
xchg
jg
inc
mov
jo
lret
call
lea
sbb
popa
aaa
movsb
or
mov
add
mov
shl
fmull
sbb
in
iret
mov
into
ficoms
inc
and
das
jecxz
jne
dec
mov
jne
fisubrl
mov
xchg
clc
pop
add
push
adc
pushf
hlt
sbb
adc
les
and
adc
test
stos
popa
sbb
mov
adc
shrb
data16
jle
lret
pop
xchg
sbb
cltd
gs
test
mov
notb
inc
fidivrs
repz
cmc
jmp
shrb
popf
sbbl
divl
xchg
mov
push
lret
inc
sub
inc
sahf
adc
pushf
xor
testb
adc
xchg
lcall
mov
sahf
les
jecxz
lret
adc
and
xor
mov
xor
mov
in
ds
ficoms
negl
push
adc
lret
inc
or
test
or
dec
jg
mov
xchg
mov
in
push
push
jecxz
or
inc
xchg
xchg
movsb
sub
loop
das
jb
icebp
sbb
outsb
ss
xchg
cmpsl
mov
sarl
sahf
xchg
in
or
data16
jle
sub
sbb
sub
jle
test
fists
aaa
inc
adc
or
rorb
iret
iret
test
cs
cmp
loopne
cld
adcl
push
push
hlt
cmpsl
push
call
sbb
dec
movsb
mov
in
xchg
dec
test
cmp
dec
lret
mov
add
pop
mov
lods
jle
mov
fsts
adc
dec
pop
push
daa
xchg
pusha
in
mov
cvtpi2ps
outsl
cmp
push
mov
test
in
rcl
jbe
dec
lret
aad
iret
jecxz
and
lods
and
cs
arpl
jge
or
sbb
sub
jp
jge
and
sub
outsb
jbe
xor
dec
fcompl
mov
dec
cmpsl
out
cmp
out
pusha
aaa
lds
mov
push
dec
and
mov
fldl
push
mov
aad
adcl
popl
jnp
popf
and
mov
insb
sub
hlt
or
scas
sbb
mov
pop
sbb
inc
pop
jno
dec
lods
mov
push
lret
sahf
loopne
rcrl
dec
dec
dec
cmp
xor
jne
out
cmp
ficomps
lods
sbb
divb
cmp
popa
daa
mov
fistpll
mov
mov
rorb
and
pop
fidivs
fisubl
int
lea
mov
jae
jle
fs
in
orb
lfs
prefetch
es
iret
ret
int
mov
inc
jle
adc
adc
fistps
jae
out
insl
push
test
fs
push
xchg
or
sub
in
and
push
andb
jmp
scas
dec
into
lahf
call
fnstcw
jns
mov
das
jmp
nop
xchg
push
jo
lds
icebp
xor
and
ret
lods
in
lcall
js
lods
and
push
movsl
mov
outsl
fsts
into
or
imul
mov
sub
ret
mov
mov
mov
stos
cmp
and
repz
sbb
ret
and
xchg
cld
or
ljmp
gs
hlt
mov
push
insl
sub
pop
add
pop
aad
out
lcall
mull
les
xchg
push
push
or
xor
mov
cli
and
test
sbb
inc
cmc
mov
or
jl
jecxz
inc
nop
mov
mov
push
inc
fsubrs
fistpll
push
or
clc
xor
out
bound
mov
loop
mov
jbe
leave
inc
loope
adc
nop
fidivs
mov
insb
fwait
xor
mov
imul
pop
xchg
bound
lods
xchg
icebp
sub
adc
xchg
cltd
out
xchg
jb
stos
shll
popa
stos
mov
mov
mov
arpl
adc
pop
inc
test
inc
fs
shlb
mov
and
bound
sbb
sbb
push
sub
mov
pop
cmp
xor
daa
imul
mov
shlb
mov
arpl
bound
loopne
jae
rcrl
mov
negb
sbb
jle
scas
ret
push
pop
jp
and
jle
into
sbb
cltd
inc
lret
push
arpl
push
hlt
or
jb
outsl
scas
imul
pop
inc
stc
inc
jno
mov
lds
inc
adc
xlat
sbb
fmul
cmpsl
into
insb
push
hlt
pop
adc
jmp
xchg
mov
inc
sbb
or
rorl
cmpsl
cmpsb
lcall
bnd
shlb
cld
outsl
fisubs
cs
pop
ljmp
sub
or
dec
lods
xchg
stos
fisttpl
xor
mov
xchg
test
stc
mov
out
xor
xlat
mov
pop
cld
cli
inc
cs
jne
inc
es
or
out
movsl
or
mov
inc
add
or
pop
ljmp
mov
sub
daa
xchg
mov
adc
addr16
xchg
inc
and
adc
inc
insb
or
inc
dec
int
sti
fidivl
and
jecxz
fs
out
in
scas
mov
paddsb
xchg
push
ret
inc
out
fidivrs
ljmp
or
sbb
ret
cmp
enter
mov
fildl
data16
fwait
xor
repz
push
adc
or
int
insb
mov
popf
int3
push
fcoml
iret
cwtl
out
lds
xchg
bound
push
mov
into
sub
stc
push
in
ljmp
pop
jo
pop
xor
data16
aad
add
mov
xor
test
mov
ret
pushf
es
lret
lock
in
gs
jmp
pop
cmp
push
mov
jno
es
pop
xor
filds
iret
fisttps
orl
sbb
push
mov
inc
or
xor
sbb
add
int3
and
pushf
daa
dec
stos
insl
sarl
ror
sub
jecxz
aas
sub
mov
dec
xor
push
push
pop
in
jnp
mov
aaa
shlb
lret
negb
lods
cld
insb
lods
xchg
stos
xor
jge
push
add
mov
clc
mov
testl
orb
sub
rorb
bound
fs
inc
into
push
sub
push
mov
lds
loope
idiv
es
push
jg
mov
shl
insl
xchg
js
mov
outsb
push
cltd
in
xchg
or
xchg
sbb
or
fmuls
lahf
xor
xor
sbb
mov
jno
fcompl
leave
lea
fstpt
cmc
mov
cltd
pop
sahf
lods
leave
sub
fstpl
stos
mov
inc
pop
ss
xor
aam
or
sahf
ja
enter
xor
ljmp
mov
mov
jp
enter
scas
mov
adc
pop
sbb
xor
inc
ljmp
mov
ficomps
mov
in
sbb
xchg
lahf
repz
movsl
roll
lret
push
pop
dec
pop
pop
lret
jecxz
mov
add
div
mov
negl
pop
xor
pop
xor
leave
adc
xchg
jmp
pop
jno
dec
and
out
pusha
push
ds
cmpsb
popa
cmp
xor
xor
mov
icebp
test
ja
movswl
mov
ret
adc
xchg
je
cmp
mov
or
adc
movsb
ss
and
into
dec
icebp
mov
mov
iret
xor
dec
pop
lods
mov
pop
xor
add
into
mov
sarl
inc
mov
cmp
insl
push
mov
push
xchg
inc
je
cld
sti
mov
fiadds
push
add
xchg
and
xor
cmp
cli
fstl
pop
or
addb
lahf
jns
sub
jno
repnz
mov
in
mov
fcom
dec
cli
jmp
adc
add
fwait
in
inc
shll
cmpsl
inc
jb
insl
arpl
inc
in
jnp
jp
imul
sbb
lret
lods
mov
shrb
push
insb
dec
add
push
sbb
lods
popf
hlt
in
mov
ja
lret
hlt
adc
jno,pt
popa
ficompl
xlat
je
and
sbb
mov
sbb
lea
mov
jne
jl
cmp
xchg
pop
enter
loope
test
add
or
repz
and
iret
xchg
leave
ja
das
call
icebp
cld
movsb
js
repz
loope
xor
push
sbb
lds
xorb
dec
inc
out
insb
xor
scas
stos
cmp
mov
sub
mov
ss
test
stos
cwtl
out
stos
hlt
add
pop
loop
ror
stos
mov
in
out
ljmp
push
xchg
cmp
outsb
and
ficompl
in
xlat
jne
jg
jb
repz
pop
mov
mov
push
xchg
lds
push
les
loopne
fwait
js
nop
push
xlat
mov
orb
jp
daa
das
xor
fucomip
inc
add
push
mov
mov
or
cwtl
repz
xchg
pop
mov
mov
jb
addr16
imul
jmp
jae
les
xchg
shll
xchg
pop
jle
mov
pop
and
jae
sbb
xchg
sti
out
out
jge
cmp
insb
jp
lods
outsl
clc
daa
xchg
dec
fdivr
pop
inc
dec
pop
sub
mov
flds
push
pop
cwtl
pop
test
lods
cmc
lock
dec
sub
orl
sar
mov
orl
push
mov
data16
in
or
jmp
shr
adc
pop
pop
andl
aam
sbb
test
decb
lea
lea
outsb
adc
lock
inc
insb
pop
dec
jp
aad
imulb
jecxz
xchg
add
jnp
int3
sub
aaa
sub
mov
sbb
clc
movsl
mov
cmpsl
jno
mov
xchg
cltd
js
xlat
lds
adc
stos
aas
xchg
push
test
and
hlt
fldt
repnz
sarb
fucomip
ret
in
push
sub
sub
sub
pushf
sub
aam
lods
and
mov
add
rcrl
mov
scas
adc
cmp
adc
js
orl
dec
dec
pusha
ja
sbb
inc
hlt
add
add
adc
push
add
add
mov
add
add
xorl
add
push
in
add
add
xchg
add
add
repz
add
add
ret
je
add
add
add
aam
add
add
test
add
add
mov
add
add
add
add
mov
add
add
add
inc
lock
add
add
jecxz
stos
add
ja
mov
lret
int3
int3
int3
int3
int3
int3
int3
int3
add
add
push
inc
jbe
gs
gs
add
or
xchg
out
add
add
mov
add
add
add
add
add
add
mov
and
add
xchg
aad
sbb
add
sbb
add
sbb
sbb
inc
cmp
cs
incb
outsb
dec
xchg
enter
add
jb
inc
mov
mov
mov
xorl
pop
mov
inc
cmc
mov
decb
iret
rorb
jnp
test
jmp
push
add
cwtl
scas
decl
fs
push
adc
je
in
add
lods
sar
push
adc
add
add
add
sar
push
decl
push
push
push
sbb
cmp
lods
and
cld
add
cld
mov
inc
mov
lea
adc
loopne
add
rcll
lods
adc
adc
add
cmp
adc
add
jbe
add
add
add
sbb
dec
sbb
sbb
pushf
out
add
add
mov
add
das
add
gs
push
dec
outsb
sub
inc
imul
inc
add
js
add
add
ss
les
je
repz
outsl
jb
cmpsb
imul
jne
or
add
add
push
add
add
test
add
add
cmc
mov
add
add
add
add
add
add
mov
add
add
in
add
add
aad
add
adc
cmp
pop
call
fwait
xchg
mov
adc
adc
ret
inc
fcompl
jge
les
sbb
rorl
rcl
movsl
lahf
xor
mov
sbb
xor
jle
cltd
cmp
jne
test
enter
push
and
ss
push
les
jbe
aam
add
add
aad
les
push
leave
in
mov
cmp
push
loopne
pop
shlb
inc
xlat
imul
mov
pop
mov
inc
cmpsb
test
lock
ret
decb
mov
inc
cmp
pop
xor
xchg
and
sbb
fcomps
pop
imul
call
stos
xor
fnsave
pop
shl
pop
lea
add
push
sahf
xchg
and
loopne
add
add
xchg
sahf
mov
mov
inc
xor
xchg
pop
sbb
movsl
cmp
fdivl
pop
mov
mov
divl
and
mov
xor
cmp
cmp
pop
mov
stos
rcll
mov
xchg
fmuls
mov
jo
dec
and
out
pushf
fwait
bound
adc
movsb
lcall
push
cmp
cltd
mov
mov
shlb
lcall
cmp
xchg
xlat
xor
mov
ficoms
adc
or
movsl
xor
je
jmp
sub
mov
andb
xchg
jmp
test
add
in
xchg
scas
push
jle
rorl
lret
pop
mov
shrl
push
subl
or
popa
pop
in
cwtl
push
subb
sbb
test
mov
loope
enter
ja
inc
int
jecxz
jmp
fmuls
cmp
insl
push
std
movsb
sbb
pop
loopne
push
mov
sbb
imul
sub
push
mov
pop
call
cld
mov
loopne
movsb
cmpsl
data16
pop
mov
mov
or
div
outsl
imull
in
and
movsb
test
fstps
out
inc
mulb
inc
xchg
addl
nop
mov
xor
lods
mov
scas
js
xchg
pop
test
xlat
or
xor
push
dec
popa
xor
lods
or
cmpsb
and
adc
dec
enter
push
rorl
stos
sbb
push
fs
sti
xchg
pop
scas
hlt
in
test
and
xor
ja
xchg
ljmp
fldcw
aam
fsubrs
xchg
imull
dec
test
xchg
in
sarb
ss
pusha
les
int3
je
mov
jmp
pop
inc
testb
xchg
scas
fwait
lock
das
xor
adc
mov
and
test
outsl
xchg
fs
pop
or
mov
jmp
add
cmp
dec
out
xchg
in
gs
push
adc
mov
jae
jbe
jne
ja
int
inc
fdivs
add
int
inc
popf
jecxz
fabs
cli
cltd
loopne
jecxz
or
out
call
dec
pushf
add
dec
mov
inc
xchg
es
sti
fldenv
jno
dec
pop
rcrl
jge
ss
dec
jo
cld
jmp
popa
nop
cmc
lret
and
daa
leave
mov
mov
popa
cmc
adc
mov
xor
push
nop
cmpsb
jecxz
out
cmp
push
insl
pop
stc
in
adc
retw
out
and
je
movsb
dec
test
mov
xor
sbb
jo
sbb
adc
lods
push
add
in
lods
andb
inc
fnstenv
lock
or
rcrl
pop
pop
sub
mov
xor
mov
ret
repnz
ffreep
clc
rclb
mov
inc
ret
shl
andb
jmp
aad
sub
pop
ror
push
stc
fs
push
jnp
in
sub
pop
sbb
mov
sbb
gs
push
sbb
push
sbb
mov
pop
or
push
out
mov
sete
pop
daa
and
aad
sub
test
adc
and
into
incl
jge
adc
dec
mov
cmp
mov
fwait
push
push
dec
push
insb
ret
je
sub
movb
mov
addr16
out
jne
lock
sbb
dec
push
inc
and
push
popf
and
jge
push
imull
lahf
push
in
adcb
iret
lods
dec
movsl
add
inc
jge
mov
xchg
inc
xchg
inc
sub
mov
loopne
pop
push
inc
test
vpaddusb
pop
cmp
rol
mov
addr16
imul
cmc
lcall
dec
fists
stos
mov
ja
or
stos
cli
sbb
loopne
fwait
xchg
sbb
ss
mov
and
or
cltd
mov
push
pop
pop
fisttps
stc
sub
test
out
and
popf
dec
clc
pop
adc
and
sarb
sbb
sbb
inc
mov
jbe
das
test
clc
fdivr
dec
sub
add
ja
movsl
cld
cwtl
xchg
in
rol
daa
loopne
popa
cmpsb
inc
sbb
incl
adc
adcl
repnz
add
mov
rclb
in
fimuls
fwait
nop
mov
jns
mov
mov
and
lcall
call
or
or
xor
push
std
xchg
pushf
lret
xor
jo
or
mov
imul
mov
cmp
sbb
iret
jne
aaa
push
out
push
jbe
hlt
add
movsb
inc
inc
or
out
push
mov
popa
jl
inc
pop
and
out
ret
scas
cs
clc
mov
add
push
ss
lock
and
test
inc
rcll
dec
ds
rcrl
movsb
pop
fisubrs
cmp
out
daa
icebp
loopne
call
outsl
sub
xor
cld
leave
dec
pop
pop
popl
pop
imul
and
out
test
sub
ret
xor
mov
aas
das
adc
pop
dec
shlb
dec
stc
mov
inc
add
cmpsb
cmpsl
pop
scas
subb
adc
in
out
sbb
imul
mov
outsb
jo
mov
rcrl
cmpsb
and
popf
aam
mov
mov
hlt
sbb
sbb
pop
aam
xchg
jmp
in
sub
gs
cmp
push
mov
fs
mov
ss
or
xor
loopne
mov
outsl
aad
addr16
mov
xchg
inc
xor
sub
or
mov
in
test
push
test
fsubl
add
pop
gs
in
rcll
xchg
dec
lods
hlt
xchg
nop
dec
pop
xor
repz
loopne
push
sbb
push
mov
xlat
repnz
daa
cmpsb
icebp
xchg
jb
rorl
and
xor
xlat
push
int
mov
int3
in
cmp
push
jle
and
into
int3
xchg
add
jle
popa
push
rolb
xchg
sbbb
lcall
aaa
pop
cwtl
push
mov
xchg
xchg
repz
test
sub
stos
jp
mov
cmp
sbb
xor
nop
jne
cs
fs
and
in
sub
sbb
out
cmp
test
iret
inc
in
loope
dec
ja
add
or
cmp
pop
push
sub
inc
rcll
dec
aad
xlat
pop
lods
jle
push
ljmp
mov
lods
data16
push
mov
rcrb
stc
adc
mov
xor
mov
inc
or
cmp
jge
pop
jp
jo
mov
mov
cs
inc
sbbb
mov
dec
orb
mov
je
call
es
ret
jecxz
sub
sbb
lock
call
into
push
and
mov
pop
cmp
mov
inc
int3
cld
push
mov
add
cmp
push
jnp
mov
les
lret
ja
jnp
loope,pt
add
adc
inc
push
push
xor
cmpsl
nop
cmpsl
or
and
outsb
andl
sbb
mov
jmp
ss
aad
sbb
std
aas
aaa
pop
jl
mov
xchg
pop
lret
or
nop
pop
outsb
shld
or
ljmp
es
fwait
jle
or
fbstp
data16
iret
int3
repz
xor
stc
fsub
sarl
xchg
mov
fisttpll
mov
dec
out
dec
adc
xor
push
xchg
cmpsl
and
popf
test
popa
aam
out
cs
inc
arpl
jge
pusha
dec
movsl
sbb
aad
inc
adc
mov
lock
inc
lcall
inc
mov
decl
mov
sbb
rcr
call
sbb
lret
cmp
adc
jo
hlt
and
out
inc
jae
pop
bswap
ss
pushf
lahf
popf
sti
xor
fcmove
lahf
inc
stos
aad
insl
xchg
mov
pop
bound
mov
insb
add
movsb
cmpl
lret
out
iret
xchg
sbb
jge
adc
dec
mov
in
mov
dec
test
push
xchg
jmp
pop
sub
fsubrs
fidivrl
stos
sub
hlt
xchg
or
lea
cmp
push
test
pop
jo
arpl
adc
adc
lcall
lds
lret
sub
ret
cs
call
dec
insl
ret
call
cmpl
push
ss
push
jae
mov
jno
inc
cs
add
push
sti
push
in
xchg
or
es
ss
push
cmp
xchg
mov
inc
es
or
cmp
movsb
xchg
popf
int
shrl
xchg
mov
jle
push
in
inc
rcrb
mov
and
jb
stos
inc
adc
repnz
mov
pop
mov
out
out
ljmp
mov
or
popa
repnz
sbb
jnp
insl
fs
movsl
add
ds
jns
sbb
push
movsb
adc
xchg
nop
sub
ficomps
push
pop
jno
inc
pushf
fs
jecxz
pop
test
fsubr
sbb
call
rcpps
push
lock
dec
sbb
fcmovnbe
sbb
mov
or
lods
aas
rorb
mov
mov
test
dec
and
mov
aaa
sub
shl
xchg
sbb
rcll
sub
ret
and
dec
xchg
lods
or
mov
sbb
hlt
les
jl
scas
and
xchg
fistpl
jecxz
xchg
adc
push
sbb
mov
xchg
cmpsl
xor
inc
leave
and
push
dec
adc
out
stc
leave
jnp
add
mov
es
icebp
add
mov
sub
lock
xchg
and
ret
out
push
test
xor
das
in
sub
dec
push
sbb
or
mov
ds
mov
add
lret
and
ss
testb
js
and
inc
cmp
dec
cmp
jo
std
or
loopne
call
fstps
jnp
es
xchg
ret
ljmp
les
outsl
loope
mov
xor
pop
mov
sub
cli
loop
ljmp
mov
insl
cmp
in
test
jecxz
out
mov
cmc
mov
jge
pop
int3
arpl
inc
jae
addr16
mov
mov
inc
jae
cwtl
sub
mov
decb
mov
mov
xchg
fcmovnbe
adc
inc
imul
es
xor
subb
mov
cld
hlt
fwait
rorl
xlat
or
pop
aam
test
jecxz
out
outsb
mov
pushf
mov
jb
pop
aaa
call
sahf
sub
leave
imul
popf
xor
stos
test
mov
pushf
and
adc
pop
mov
in
mov
or
sbb
add
popf
stc
shr
jbe
scas
jnp
and
xchg
dec
or
mov
sub
mov
lahf
lods
inc
jge
sbb
and
jp
sbb
iret
je
out
mov
test
imul
or
pop
test
pop
aaa
outsb
mov
bound
xchg
sahf
cli
mov
xchg
jp
add
aad
push
mull
dec
pushf
loope
call
out
jne
nop
pop
loop
and
cmp
dec
stc
jecxz
daa
imul
popa
xlat
pop
mov
inc
ds
fdivs
sub
insb
mov
pop
test
adc
xlat
add
in
or
fistpl
sbb
addr16
mov
call
dec
es
clc
push
les
cli
push
roll
jl
sbb
mov
xor
jbe
mov
jle
pop
fisttpll
push
jge
imul
jnp
pop
lods
jle
mov
jne
in
push
and
pop
sbb
repz
sub
add
iret
shlb
jbe
test
je
lods
scas
xchg
gs
xchg
sub
pop
mov
rcr
nop
mov
pop
fs
cmp
or
cmp
mov
nop
insl
rclb
movsb
xor
fwait
jg
lret
jp
data16
movsb
sti
pop
pop
stos
push
jle
xchg
or
mov
dec
adc
adc
call
rorb
push
or
aad
mov
stos
sub
data16
and
loop
jb
mov
sbb
jmp
and
out
cmpsb
push
in
testl
mov
xor
and
sub
dec
int
add
sub
push
and
cwtl
lock
mov
mov
loopne
aam
int
pop
in
push
and
xchg
test
in
aad
or
pop
jno
ds
or
icebp
dec
or
sbb
jl
push
jge
pop
mov
cmc
pop
clc
and
cmpsl
or
push
imul
adc
and
sbb
test
fldl
adc
or
lahf
inc
cld
sub
jns
pop
js
and
inc
enter
in
xchg
aad
push
in
ds
lret
pop
push
lods
call
testb
in
jns
jmp
mov
jo
mov
and
mov
cltd
dec
adc
jle
imul
sti
imul
lahf
add
xchg
out
movsl
or
mov
loopne
jnp
dec
and
jns
pushf
nop
outsb
ja
jns
and
test
and
and
subb
imul
mov
jbe
push
or
pop
fiaddl
add
xchg
test
faddl
inc
shrl
out
xlat
and
rolb
loopne
mov
std
xor
aaa
out
push
xchg
cmp
push
jo
test
loope
das
jae
fs
cltd
fldcw
ret
add
out
popf
add
out
rcrl
and
adc
repnz
sbb
popf
in
cmp
lock
sub
ds
pop
push
sbb
or
in
cmp
pushf
dec
and
bound
inc
out
lods
jbe
out
cmp
jl
cmc
shlb
aaa
lock
mov
sbb
sbb
je
loope
xor
mov
dec
das
xchg
xchg
cli
fwait
cmp
xchg
and
sahf
xor
incb
mov
repnz
and
sbb
aad
sti
cmc
gs
add
add
mov
or
sub
xor
lret
fimull
cld
lock
cmp
cmp
and
icebp
in
mov
jle
fnstcw
mov
loop
lea
pushf
push
jle
pushf
outsb
dec
pop
leave
sub
xor
lea
xchg
scas
loope
lret
sar
mov
and
xor
outsl
scas
cmp
idivl
mov
mov
out
jge
jecxz
rorl
sti
dec
add
sub
adc
xchg
in
pop
mov
cmp
push
out
fadds
push
dec
xchg
mov
adc
mov
push
pop
mov
outsb
add
inc
sbb
xlat
subb
and
ss
in
or
js
push
stc
dec
cmp
dec
cwtl
aam
int
jns
jle
lahf
iret
mov
enter
push
add
cmp
or
lar
jmp
jns
into
cmp
inc
dec
pop
inc
mov
scas
shlb
push
stos
jbe
pop
gs
push
mov
sbb
and
fistpll
mov
mov
imull
jl
or
cmp
fsubr
cmp
mov
dec
pop
sub
pushf
xorl
movsl
inc
mov
xchg
icebp
pusha
mov
sbb
std
leave
xlat
hlt
xor
jle
mov
fptan
addr16
sub
xchg
adc
inc
mov
mov
jmp
push
inc
lds
movsb
push
std
and
arpl
adc
mov
inc
pop
mov
imul
outsb
jge
imul
movsl
cmc
or
pop
in
push
mov
cmpsb
jns
adc
mov
xchg
add
mov
push
and
pop
mov
xor
arpl
sbb
out
push
fmull
aad
sub
sbbl
add
inc
fcompl
psrad
shll
cmp
int
xor
dec
daa
sub
ret
test
inc
cmp
xchg
into
fcmovnu
xchg
int
or
push
dec
xchg
inc
fistpl
or
mov
push
jb
shll
mov
mov
in
iret
data16
pop
pop
mov
cmp
call
stos
cltd
jo
mov
mov
ss
mov
aad
push
call
push
fsubrs
jle
push
cmc
sub
movb
test
cwtl
scas
and
cmp
test
mov
sbb
pop
flds
xor
and
nop
cmpsb
mov
push
xchg
jecxz
cmp
nop
add
and
fldenv
fs
adc
cmp
jae
inc
push
add
jle
jno
ja
je
pop
and
xor
icebp
hlt
mov
out
add
sahf
cltd
cwtl
mov
outsb
pop
sub
mov
add
bound
mov
mov
repz
lahf
and
loopne
dec
lgs
jl
inc
xor
inc
lds
cmpsl
dec
out
push
xchg
inc
ljmp
repnz
int
fxch
movsb
jnp
sbb
mov
adc
insb
push
pop
add
jecxz
pop
jmp
xor
idivl
mov
cmp
xorl
pop
cmc
insl
test
sbb
aas
inc
cmp
loope
pop
loopne
shlb
mov
fs
out
mov
scas
js
mov
cmp
fwait
js
cld
add
jl
sbb
push
sbb
push
int3
or
fstps
or
push
push
mov
xor
inc
icebp
aaa
bound
xor
mov
ret
push
and
rcrl
fdiv
add
jl
in
insl
loopne
jmp
in
or
fcomip
rolb
fcmovne
xor
nop
adc
lcall
jge
cmp
pop
and
leave
insl
mov
mov
sub
frstor
jmp
repz
or
and
pushf
movups
mov
loopne
test
xchg
adc
shrl
cmp
popf
movb
dec
jo
dec
arpl
push
clc
xchg
mov
jns
out
cmpl
lret
xor
xchg
xor
push
scas
repnz
adc
inc
fnstsw
cmp
ret
movsl
jge
mov
aaa
aam
add
enter
out
add
add
add
add
push
add
add
test
add
add
cmc
mov
add
add
add
add
add
add
mov
add
add
in
add
add
aad
add
add
add
add
add
add
movsl
movb
add
xchg
xchg
add
add
les
xor
add
add
add
push
add
stos
stos
test
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
pop
add
mov
mov
jae
and
fiaddl
add
je
and
add
inc
jnp
adc
add
stos
add
xor
out
add
add
mov
add
add
add
add
es
sbb
sbb
out
mov
add
add
add
or
insb
adc
dec
pop
inc
das
imul
push
outsb
gs
push
cld
out
xor
pop
cmp
mov
mov
invd
decl
stos
lea
add
pop
adc
lea
leave
mov
adc
adc
in
mov
add
mov
dec
xchg
fistpl
ret
push
sub
add
cltd
in
incl
pushf
mov
scas
loopne
mov
jmp
add
or
pushl
pop
test
jne
add
push
lcall
xchg
xchg
push
mov
out
cmpsb
fwait
adc
or
mov
add
fidivrs
mov
dec
or
mov
jne
in
adc
push
dec
add
rolb
mov
xchg
sbb
add
mov
add
sbb
sbb
push
jp
add
inc
movsl
stos
gs
inc
sbb
inc
insl
je
scas
insl
je
jo
and
outsb
jo
push
fs
gs
aas
add
xchg
ret
je
call
cs
dec
add
adc
gs
inc
das
add
hlt
jmp
out
fadds
add
add
add
add
add
push
jp
add
add
stos
add
add
out
add
add
mov
add
add
inc
cmp
add
add
push
add
add
pop
add
ret
sub
cmc
stos
jns
push
pop
in
cmp
popa
and
dec
sub
lock
mov
ss
clc
lcall
dec
repz
mov
pop
mov
enter
mov
cld
inc
fldcw
xchg
jae
in
test
jp
add
push
vpunpckhqdq
pop
mov
dec
mov
push
gs
mov
and
adc
addl
sarb
mov
dec
push
cmp
xchg
xchg
push
pop
mov
add
in
dec
ficomps
mov
in
data16
int3
jmp
push
idiv
fistl
jmp
jmp
xorl
rcrb
xchg
jecxz
movsl
xchg
in
cltd
mov
rorl
add
daa
push
and
fildll
std
stos
repnz
inc
loope
adc
jne
xor
cmp
cmp
mov
cltd
pop
pop
add
mov
push
dec
lahf
dec
scas
xor
test
fsubr
scas
lahf
loop
jae
dec
dec
out
scas
inc
das
mov
cmpsb
dec
cmpsl
and
mov
sbb
and
popf
mov
ja
repnz
fmul
push
sub
ror
inc
adc
adc
cmp
mov
mov
mov
jl
pop
inc
mov
cwtl
fistps
imul
mov
add
mov
pop
push
lock
gs
sub
push
push
fidivrl
inc
mov
fists
xor
mov
icebp
jnp
out
jb
fs
mov
adc
sub
cs
mov
and
ret
lods
cmpsl
mov
fcoml
xor
pop
xchg
and
testb
repz
sub
fs
int3
mov
jo
outsb
int3
sbb
push
add
daa
sbb
dec
and
jnp
nop
outsl
xchg
mov
jle
lcall
shll
inc
sbb
pushf
mov
push
leavew
fldt
and
sub
sbb
jmp
or
mov
dec
and
sbb
inc
pop
rcl
ja
xor
je
fstpt
cmp
stos
sahf
es
dec
test
sti
pop
bound
lret
and
push
mov
xchg
inc
ret
lcall
mov
mov
mov
fs
stos
jmp
fisttpl
cmp
rcrb
pop
hlt
inc
fs
cmp
popf
leave
loop,pn
in
jecxz
xchg
in
sbb
nop
std
iret
mov
imul
out
push
pushf
pop
cmp
pop
add
insl
lret
test
ret
pop
iret
or
xchg
stos
imul
fsubl
sahf
addb
loope
scas
pop
or
mov
insb
adc
dec
add
gs
and
nop
sbb
sub
mov
cmp
pop
adc
cmp
pop
adc
or
imul
sub
mov
dec
lods
cmp
subl
aam
cmp
pop
sbb
jecxz
push
das
jno
dec
push
fsts
std
test
sub
jns
shrb
inc
mov
aaa
scas
mov
dec
gs
das
mov
in
loop
testl
dec
push
push
mov
pop
inc
cmp
xor
arpl
add
dec
ret
aaa
adc
xor
test
rorb
and
aad
jb
sarb
mov
or
jno
out
fbld
mov
in
inc
es
adc
lods
push
add
fadd
sub
bound
cmpsb
mov
arpl
popf
mov
xor
int3
outsl
jge
imull
sbb
push
jne
test
xor
mov
pusha
lret
fisubrl
cmp
dec
ror
jo
mov
cmp
movsb
adc
dec
pop
and
push
jecxz
stos
mov
xor
nop
fcmove
cld
sti
fldcw
in
mov
ljmp
bound
in
jo
popa
aad
dec
cmpsl
dec
arpl
add
imul
mov
mov
rcl
in
cmp
pop
icebp
pop
and
jb
pop
jo
data16
pop
and
push
mov
dec
out
inc
out
push
repz
test
adc
xlat
test
xchg
shl
xor
outsl
dec
imul
out
mov
popf
adc
clc
mov
push
jmp
mov
out
inc
aad
jp
jnp
or
lahf
mov
imul
xchg
or
addb
xchg
mov
cmp
aas
add
test
and
shrb
pop
adc
or
mov
cli
pushf
ret
sub
test
xchg
mov
sarl
sbb
ljmp
test
add
pop
and
jne
es
pop
repnz
lea
push
xor
leave
das
and
gs
adc
xchg
cmp
jle
in
jne
test
loopne
jne
push
cs
insl
enter
test
sti
aam
dec
test
and
test
jge
push
imul
xlat
test
fldl
push
jmp
xorb
jp
scas
les
js
stc
xor
jl
cmpsl
mov
cmpl
mov
mov
mov
add
adc
pushf
lea
movsl
js
mov
cs
pop
nop
bound
fsts
mov
int
xchg
scas
sub
sbb
sub
shl
cmpsl
ja
mov
lret
pop
add
lea
sub
sbb
pop
push
insb
roll
or
mov
jb
popf
std
xchg
mov
mov
xor
push
push
sti
jle
add
add
stos
xchg
and
pop
aaa
pop
pop
mov
js
mov
mov
scas
fs
dec
popa
sahf
out
lret
cmc
dec
lods
pop
es
inc
cmp
das
lods
dec
jl
jg
fsubl
xor
pop
xchg
mov
divl
mov
bnd
rolb
dec
outsb
lea
mov
lock
rcr
adc
cmc
push
sahf
adc
add
fs
cltd
and
mov
loope
xor
and
xor
fnstcw
and
pop
test
and
sbb
mov
cs
loop
insl
sbb
test
dec
shl
test
xchg
add
sahf
stos
xchg
jo
dec
movsb
sub
cmpsl
pop
inc
jae
push
cmp
xchg
pop
out
jns
les
imull
filds
push
cmp
pop
mov
fcompl
xchg
mov
inc
insl
push
daa
cmp
push
mov
add
xchg
inc
adc
jnp
stc
xor
dec
push
test
jecxz
adc
flds
mov
pop
test
jne
inc
sbb
shl
pop
pop
fcoml
movsb
ljmp
sub
sbb
mov
jmp
loopne
pop
jae
repnz
pop
ret
jecxz
pop
outsb
pop
xor
into
loope
jge
lds
out
pop
cli
pusha
or
inc
inc
mov
outsb
pushf
cmpsb
pop
dec
xor
jmp
cld
scas
inc
push
cmp
adc
cltd
inc
daa
jmp
pop
cmp
dec
xorl
mov
jnp
in
mov
adc
das
hlt
imul
cld
stc
xchg
dec
adc
inc
mov
inc
paddb
je
push
je
xor
lock
push
mov
scas
rcrb
xor
mov
jg
movsb
dec
jne
pop
gs
adc
iret
test
jmp
mov
aad
add
lods
nop
sub
bound
mov
hlt
stos
fs
jle
add
jp
fsub
jle
add
cmpsl
out
pop
ret
hlt
in
or
xchg
les
out
sub
shl
push
mov
clc
nop
jbe
dec
push
sub
outsb
sbb
jle
pop
push
or
test
sbb
mov
jne,pn
out
bnd
movsl
cli
xchg
shr
fwait
xor
sbb
push
lods
in
fldcw
cmpsb
lcall
mov
jns
test
repnz
xchg
loop
loopne
jge
lret
popl
mov
cmp
sahf
ret
dec
push
or
add
mov
cmc
jg
mov
or
shrl
inc
cld
aaa
push
mov
mov
rcll
stos
roll
cmp
pop
shlb
out
inc
dec
and
loop
inc
jl
sub
mov
lods
pop
dec
test
dec
pop
ds
mov
scas
mov
jo
mov
xlat
paddsw
xchg
jp
jo
out
jo
sub
in
loopne
inc
jns
pop
shrl
test
jl
add
cld
rorb
mov
cmpsl
ds
xchg
push
cmp
imul
lock
sahf
add
lods
xchg
xor
test
push
pop
sub
mov
push
xor
shr
push
std
bound
xor
jmp
inc
mov
mov
push
gs
jp
mov
pop
out
pushf
dec
sub
cmpsb
inc
jmp
and
out
fiaddl
mov
lock
xchg
sbb
subb
mov
out
and
insb
fiaddl
loop
fisubrs
addb
insl
sahf
pop
mov
cmpsb
daa
ja
rcrb
popf
mov
xor
cmpsl
mov
dec
or
repnz
xchg
rclb
sub
xchg
jmp
xchg
adc
cs
cltd
adc
mov
icebp
cmp
ret
push
clc
shl
rdmsr
std
hlt
enter
mull
clc
nop
test
fstpl
jae
sbb
fwait
pop
jno
mov
out
jo
dec
jbe
jb
jnp
roll
roll
mov
adc
push
xchg
int
push
push
cmp
cmp
orl
add
xchg
pusha
jb
or
cli
jp
sbb
ret
gs
pop
sbbb
lahf
mov
inc
test
xchg
mov
mov
mov
pop
dec
lret
pop
jecxz
jmp
mov
push
arpl
pop
cmp
adc
jg
popl
mov
push
mov
into
loope
mov
loopne
lds
or
in
mov
shll
pushf
shl
pop
mov
jl
leave
push
push
jns
add
sbb
lahf
mov
dec
test
sub
or
and
sbb
loope
dec
and
iret
mov
out
out
add
das
cmp
pop
mov
test
mulb
sbb
adc
jecxz
mov
dec
out
pop
scas
cmp
cmpsl
sub
add
mov
pop
pusha
mov
mov
lret
jne
out
in
xchg
sbb
cltd
loopne
mov
lret
lahf
and
int
push
jge
push
pop
push
fs
out
add
das
sbb
sub
lods
pusha
pop
push
mov
scas
call
jp
icebp
push
or
out
push
pop
outsb
mov
push
jge
lock
and
mov
xchg
adc
test
aad
popa
dec
mov
push
xchg
hlt
js
stos
xor
dec
pop
dec
std
sub
mov
popf
xchg
pushf
jge
dec
idiv
mov
cmp
test
xor
out
xchg
jg
dec
mov
xlat
cmp
lcall
push
popf
cs
imul
add
jl
movsb
addb
repz
ss
ret
jnp
out
cmpsl
aas
enter
xor
add
xor
lods
outsl
xchg
paddsb
dec
lods
stc
js
pop
mov
lret
pop
or
enter
mov
lahf
popf
ljmp
mov
sahf
cmp
push
in
mov
loopne
movsb
cmpsl
mov
xchg
repz
out
mov
or
push
lods
arpl
cltd
push
adc
lods
dec
sub
mov
ljmp
cli
xchg
std
testw
adc
add
pop
push
lods
jns
outsl
shlb
xchg
jge
or
rcrl
stos
jnp
push
or
pop
jo
in
sub
mov
or
dec
jmp
cmp
adc
int3
mov
lock
es
cmc
mov
sub
jg
mov
call
lods
xor
into
test
std
add
xchg
cwtl
inc
hlt
mov
ret
and
subl
in
or
outsb
xor
dec
xchg
jmp
add
divl
xchg
xlat
lea
mov
jl
or
nop
dec
aaa
ret
imul
cmp
push
dec
cmc
sbb
push
pop
jns
iret
cld
loop
in
data16
pop
and
out
add
aas
movsb
xor
mov
adc
jno
pop
pop
pop
enter
bound
nop
or
add
outsl
push
mov
sub
das
pop
pop
mov
stos
repnz
push
lcall
scas
aam
in
clc
or
pop
push
leave
mov
orb
cs
shl
xchg
xor
and
cwtl
cld
dec
add
adc
rorl
stc
add
lret
jb
cltd
cmp
in
pop
add
js
cmp
aad
jmp
or
dec
inc
sar
lea
fcompp
mov
xchg
mov
add
pop
and
mov
adc
add
push
ja
cld
leave
mov
push
inc
mov
in
mov
sub
in
mov
leave
adc
std
and
jge
cmpsb
dec
packssdw
enter
push
stos
ljmp
jne
aam
xchg
into
out
dec
xchg
pop
mov
cmpsb
shlb
cmpsl
mov
lea
imul
fwait
loope
dec
lock
in
jns
sub
pop
ss
iret
cmp
aas
bound
dec
in
and
jecxz
push
dec
addr16
dec
das
rcl
sbb
and
fnstcw
rcll
sub
in
pop
jl
int3
xor
not
in
or
ret
inc
jecxz
lods
mov
sub
les
in
mov
mov
es
lods
add
push
ret
jne
pcmpgtw
push
sbb
sbb
sbb
or
fldenv
inc
lds
mov
adcb
pop
test
add
or
ss
in
xor
mov
or
jns
imul
push
lock
cmp
outsl
popf
and
leave
rorb
mov
mov
sbb
lods
mov
cmp
jge
fmull
hlt
push
fistl
hlt
ljmp
push
pusha
push
xchg
insl
roll
stc
inc
enter
push
dec
jo
pusha
into
std
add
mov
push
mov
mov
arpl
data16
rclb
test
pop
pop
cmp
out
sbb
sahf
mov
add
fldenv
jbe
lret
xor
pop
int
jecxz
cwtl
sub
add
push
jo
fcoml
jb
push
mov
lcall
jns
and
lds
imul
sbb
sbb
or
fldcw
pop
cwtl
sbb
in
jmp
or
into
cwtl
pop
push
or
pop
xchg
rorl
xor
sbb
xchg
stc
mov
gs
lods
mov
imul
lods
scas
in
dec
push
push
mov
out
lea
lods
lods
push
dec
xlat
push
dec
test
ds
inc
stos
inc
ret
gs
stos
dec
out
cs
stc
inc
lahf
pop
sbb
inc
and
mov
xchg
test
cmp
push
jecxz
aam
hlt
jo
ss
sbb
add
gs
mov
cmpsb
in
dec
push
iret
or
ja
mov
fisubrl
test
pusha
xchg
dec
sub
lahf
adc
xorl
fsubs
cmp
pop
fiaddl
mov
mov
mov
pop
inc
pusha
or
push
jne
push
leave
mov
test
push
dec
inc
lock
lock
arpl
iret
push
pop
lret
add
xchg
les
imul
push
push
push
mov
loop
outsb
push
negl
mov
add
mov
in
xchg
sub
sarb
jmp
insb
push
loop
fisttpl
add
mov
or
lcall
pushf
cmp
pop
inc
mov
imul
jnp
imul
adcl
aad
mov
lock
mov
mov
inc
cmp
pop
in
or
fprem1
mov
faddp
push
xchg
sbb
mov
xor
ja
xchg
inc
or
mov
mov
mov
mov
fcompl
and
stos
rorb
ficomps
pop
out
pushf
mov
cwtl
lret
enter
int
inc
fwait
add
out
js
jnp
adc
xchg
mov
xchg
fildl
jne
add
ljmp
lahf
aad
sbb
iret
outsl
xlat
fs
inc
inc
pop
push
xchg
push
jmp
out
lcall
fcmovb
cmp
in
mov
dec
jl
das
sbb
xor
sbbl
and
in
mov
in
rcl
inc
push
pop
fisubl
lret
mov
jbe
mov
push
push
xchg
inc
pop
lret
adc
jge
mov
jae
sbb
popf
lmsw
push
cmp
in
push
into
movsb
movsl
pop
mov
fmull
in
jno
add
cmp
fnstsw
fldenv
cwtl
dec
ds
out
mov
sub
leave
sub
xor
hlt
imul
icebp
inc
adc
jo
cmp
xor
stc
lea
je
lcall
mov
sub
ja
sbb
adc
jg
add
lcall
jae
jmp
sub
pushf
xchg
out
jle
out
aam
jge
shll
ret
cld
jl
sti
out
xlat
mov
xorl
fwait
cld
repnz
orl
jg
bound
scas
in
cs
jns
push
jg
lcall
leave
fmulp
lahf
lods
js
cwtl
jo
cmp
in
loopne
aam
add
ror
push
inc
bound
popf
push
mov
jne
jbe
cwtl
push
mov
popl
daa
xor
subl
push
in
xor
jne
pop
popf
cmp
divl
imul
shr
inc
jnp
cmp
push
cmc
push
and
lahf
aas
mov
movsl
jg
or
push
stos
xor
mov
lods
call
add
xchg
sub
addr16
adc
push
dec
mov
xchg
scas
or
lret
dec
popf
sbb
inc
in
push
xchg
and
out
cltd
and
mov
loope
push
add
pop
repz
or
lahf
addr16
mov
insl
int3
push
int3
mov
stos
xor
cmc
movsl
fcomp
test
jg
jns
sbb
add
fistl
sbb
push
cmpb
cmp
gs
xchg
mov
dec
inc
in
jecxz
and
mov
inc
outsb
mov
leave
je
nop
lds
mov
xor
popf
in
repz
jne
lods
mov
xor
shll
pop
leave
in
xchg
mov
jo
jecxz
ret
xor
and
jnp
mov
test
loope
xchg
mov
adc
adc
cmp
xchg
leave
cltd
mov
andl
and
and
popa
rcl
inc
cmp
lock
cmp
loopne
xor
cmp
mov
inc
xor
rolb
jge
iret
mov
pop
scas
xchg
pop
adc
dec
push
sbb
cmp
call
mov
vpmacswd
aaa
mov
add
repz
int
loopne
adc
cmp
mov
xor
dec
lea
cmp
aam
ret
out
push
push
sbb
add
add
add
add
add
push
jp
add
add
stos
add
add
out
add
add
mov
add
add
inc
cmp
add
add
push
add
add
pop
add
add
testb
cli
add
add
push
sub
add
data16
add
ss
xor
xor
repnz
xchg
ljmp
incl
ljmp
ja
mov
int3
int3
int3
int3
int3
int3
int3
int3
dec
add
add
mov
insl
add
adc
lds
test
add
add
add
add
add
xor
or
add
lds
add
jb
mov
add
add
sbb
sbb
mov
jne
ljmp
inc
dec
and
and
mov
push
hlt
add
add
repz
add
add
inc
mov
jp
jns
add
cmp
mov
push
push
sub
mov
test
std
pop
xchg
jmp
test
jmp
lock
clc
adc
adc
xor
or
cmp
add
cmc
ljmp
jg
lea
inc
pop
js
sbb
add
and
aad
push
adc
addps
jp
adc
inc
je
in
jne
or
sar
lcall
cmp
nop
movsl
push
push
jne
lds
aad
lea
stc
push
clc
push
add
add
add
adc
insb
add
add
add
sbb
sbb
int3
pusha
sbb
sbb
add
pop
inc
outsb
outsb
daa
jne
adc
popa
outsl
inc
add
gs
mov
outsl
inc
insb
inc
or
imul
popa
dec
dec
jno
xor
je
nop
gs
add
aad
add
icebp
loope
add
add
and
inc
xor
xor
shl
add
add
aad
add
add
add
add
add
add
xor
loopne
add
add
nop
mov
add
add
les
test
das
push
dec
mov
inc
lret
fs
inc
cltd
popa
popf
in
jmp
mov
and
dec
call
orb
xor
in
out
pop
icebp
mov
dec
lahf
mov
ljmp
mov
mov
ret
sbb
loopne
dec
push
pop
in
mov
or
adc
mov
negb
aaa
push
fisttpl
sahf
mov
sbb
imul
data16
ja
xorl
aad
imul
int3
int3
call
pop
cmpsl
and
mov
mov
loop
fidivrs
outsb
sbb
adc
daa
push
mov
in
lds
pop
jle
mov
loope
sahf
ja
insb
mul
sub
outsl
dec
mov
pop
sub
cli
xchg
xchg
orl
mov
fcoms
xchg
enter
scas
push
xchg
fwait
xor
dec
es
push
imull
or
push
popf
add
or
add
jb
out
cltd
es
lods
iret
mov
dec
xchg
push
xor
sub
dec
adcl
cs
outsb
and
notb
sbbl
adc
ds
sbb
push
xor
adc
inc
fmull
jns
loopne
mov
add
inc
into
test
popa
movsb
sbb
imul
data16
fnstenv
ss
mov
mov
mov
push
test
xchg
cltd
sub
push
jp
ss
lds
sub
mov
fsubrl
lods
bound
mov
jb
ficompl
sub
pop
addb
cltd
lahf
push
dec
xor
jge
mov
repz
daa
sbb
shrb
inc
mov
fstl
dec
loopne
jl
lahf
repnz
pop
popa
mov
sti
and
add
xchg
daa
popf
sbbb
mov
or
lods
daa
aad
dec
ficomps
pop
in
or
cmp
lods
daa
xchg
subl
sub
mov
orl
ret
sub
mov
mov
test
dec
out
stos
imul
sub
stos
mov
pop
adc
js
sbbb
xchg
mov
xchg
adc
rolb
imul
jmp
les
cmpsl
and
push
and
cld
dec
lock
aaa
mov
test
repnz
mov
dec
inc
fsubl
jno
mov
adc
or
cld
mov
or
mov
cwtl
push
addl
shlb
adc
imul
sbb
xchg
cmc
mov
cwtl
cmp
jge
xor
inc
cmp
scas
add
lea
push
lea
mov
test
dec
add
and
hlt
out
mov
addl
int3
stos
add
jo
push
mov
shr
lock
in
nop
dec
xor
in
push
pop
fs
dec
dec
mov
adc
add
mov
pop
push
lods
jge
loope
test
cli
jns
push
dec
lcall
or
loopne
push
push
ret
stc
movsb
int3
std
lahf
mulb
sub
mov
mov
adc
add
push
leave
sti
js
fnstcw
and
dec
mov
sub
add
ss
mov
cld
adc
mov
rcr
lret
dec
cmpsl
sbb
inc
mov
ret
cmc
shlb
or
mov
pop
mov
cmp
test
subl
jo
pop
pop
jne
adc
pop
mov
or
jp
pop
fldl
mov
push
inc
cmp
and
jp
lahf
stos
dec
fildl
fld
imul
addr16
cmc
je
add
cmp
gs
jp
mov
bound
mov
inc
pop
ret
xor
pop
stc
push
loop
movsl
and
sbb
jmp
fmull
insb
repz
push
sahf
adc
out
subl
ja
repnz
add
dec
bound
sti
and
mov
sbb
loopne
les
pop
push
dec
fstl
push
enter
in
sub
leave
adcl
mov
jecxz
xchg
lahf
jl
xchg
mov
lods
cmp
out
xchg
in
test
cmpsb
ss
lcall
sbb
jne
and
loop
jle
jmp
adc
mov
jle
mov
int
cmp
out
and
ljmp
in
or
xlat
std
cs
sbb
enter
ss
aad
aaa
jp
xlat
mov
sub
adc
sbb
mov
xchg
jmp
xor
je
addr16
icebp
bound
loopne
lods
aaa
mov
jmp
lods
gs
jno
jbe
pop
mov
mov
addb
push
in
inc
bound
and
icebp
or
imul
xchg
cmpsl
push
jle
out
mov
enter
repz
xor
adc
mov
xlat
pop
jo
mov
jns
ja
scas
jmp
jne
jp
dec
sub
out
je
repz
mov
xor
out
sti
call
pop
adc
fsubrs
xor
notb
pop
mov
xchg
ret
sbb
jb
aaa
loop
xlat
dec
push
jnp
in
aaa
and
sbb
push
dec
int
or
xor
lods
push
jmp
push
in
sub
and
test
xchg
xor
fdivl
enter
mov
stos
jnp
pop
jb
bound
lret
pop
ljmp
xchg
data16
sahf
test
xor
jbe
add
push
push
jecxz
xor
fiadds
insl
lret
add
jecxz
js
and
in
mull
bound
gs
call
jnp
test
cmpsl
test
iret
push
enter
pop
xor
rclb
lcall
int
add
adc
xor
jmp
les
jo
gs
jo
aad
inc
jne
mov
ffree
andl
ja
repz
dec
and
arpl
outsl
jmp
ss
mov
js
into
sbb
mov
ja
pop
sub
leave
push
jne
orb
fwait
shl
push
pop
mov
sbb
shll
add
jle
adc
and
ds
cmp
rcrb
enter
pop
or
shr
clc
addr16
mov
push
mov
loopne
ret
xchg
lret
stc
and
add
inc
dec
cmpsl
xchg
sbb
push
jns
fmul
jg
sbb
cwtl
and
jl
sbb
push
dec
std
in
adcl
pop
xor
test
or
leave
repz
aas
outsl
fsubl
icebp
or
sbb
sub
mov
pop
pop
cmpb
cld
mov
sub
fdivl
jbe
mov
icebp
jg
cmpsl
aad
sbb
mov
cs
or
int
sbb
lret
sarb
ds
negl
inc
xchg
iret
ljmp
inc
bound
sub
pop
ja
popf
push
in
dec
insb
fistl
xor
mov
fdivp
add
adc
ja
mov
pop
adc
sub
mov
mov
out
and
aad
or
jnp
or
jmp
xor
ja
push
dec
cs
divps
stos
or
mov
ja
xchg
loope
inc
mov
mov
stc
mov
or
repz
xchg
push
cltd
push
bnd
lcall
cmc
jno
aaa
icebp
popf
enter
push
or
imul
jb
and
push
cs
in
mov
or
dec
push
cmp
scas
and
mov
mov
sub
cmp
in
and
pushf
shr
pop
mov
cwtl
out
jns
cmpb
add
cmpsl
mov
stos
push
dec
or
dec
jb
cmp
pop
inc
andb
lret
or
movsb
mov
push
and
std
xchg
mov
shlb
aad
enter
jmp
and
push
test
loope
lret
sbb
jl
dec
lods
jnp
jmp
push
inc
sbb
add
cltd
push
mov
fldt
adc
sbb
inc
dec
sbb
push
flds
out
push
gs
mov
cmp
dec
shlb
pop
jno
stos
das
xchg
rcll
mov
scas
pop
das
int
xchg
sti
push
aam
fdivrs
leave
arpl
mov
xorb
pop
mov
rcrl
daa
xor
cld
fidivs
adc
pop
mov
add
xchg
mov
enter
mov
shrl
fstpl
pop
dec
pop
aam
ret
or
enter
sti
jecxz
add
out
loop
xor
push
mov
jb
push
loop
test
fmull
mul
shlb
xor
adc
inc
xlat
es
xchg
cmc
in
jns
ret
insl
repz
lcall
dec
mov
push
push
scas
cs
ljmp
and
inc
and
or
scas
loope
dec
cmp
pusha
or
or
xorl
xbegin
sbb
repz
fdivrl
loopne
xor
flds
mov
mov
div
pop
mov
or
nop
in
xchg
adc
inc
jb
pop
popf
in
mov
mov
clc
adc
enter
mov
nop
mov
lds
or
clc
dec
mov
iret
push
mov
stc
addl
add
pop
loope
pop
push
aam
hlt
stos
loope
bound
in
sbb
fstpt
lret
cli
xor
inc
inc
or
mov
int3
test
mov
mov
cmc
mov
push
addr16
mov
or
hlt
push
aam
mov
cmp
cmp
mov
pop
push
jmp
imulb
push
push
dec
pop
jae
outsl
aaa
add
addr16
outsb
lea
int3
cli
arpl
adc
mov
scas
push
out
out
jp
adc
movsl
rcl
sbb
pop
dec
xor
and
data16
add
sahf
imul
cmp
movsb
scas
mov
rolb
in
insl
adc
insb
lock
ja
scas
mov
in
inc
cmpsb
cmp
push
fwait
ljmp
xor
mov
mov
mov
loopne
jo
mov
and
cli
pop
xchg
cs
sub
movsl
inc
fwait
repnz
mov
sti
nop
fisubs
jmp
adc
decl
push
jl
push
and
xor
rolb
jmp
cmp
mov
scas
mov
jmp
cmp
cld
cli
jmp
add
repz
std
xchg
add
sbb
stc
jns
mov
adc
cmp
xor
fstpl
xor
mov
out
add
dec
xor
xchg
jge
mov
xor
adc
adc
mov
xchg
sbb
sub
mov
sahf
xor
xchg
sub
gs
shrb
dec
adc
mov
mov
mov
xor
scas
cmc
mov
movsl
cmp
pusha
mov
jmp
push
out
push
add
out
mov
xor
pusha
jnp
push
cli
xor
shrb
bound
insl
jecxz
fwait
aad
inc
pop
mov
test
das
in
into
cs
outsl
sbb
lock
dec
cs
and
loope
fwait
or
in
cmp
xor
out
clc
leave
clc
repz
int
mov
jl
fsts
ret
sbb
mov
cmp
mov
dec
inc
out
cltd
gs
repz
xor
and
mov
jbe
jecxz
mov
je
and
xor
int
push
insl
jno
xchg
testl
notl
xchg
js
xchg
sub
in
xor
mov
clc
pop
xor
add
pushf
adc
popf
sbb
scas
out
lret
cmp
xchg
mov
aam
int
call
enter
mov
or
mov
mov
xor
adcl
fs
cmp
inc
out
dec
cli
aad
mov
cmp
outsl
ljmp
fiadds
xchg
jb
mov
jo
mov
ja
sti
test
ds
push
outsl
jp
inc
imul
xchg
sub
ss
xor
or
mov
xlat
or
dec
mov
adc
or
mov
dec
cltd
xchg
push
cli
or
hlt
xor
xchg
sub
gs
add
inc
pop
mov
push
call
or
ds
sahf
mov
cmp
jne
je
mov
mov
or
sti
jno
lret
mov
fists
pop
push
iret
xor
mov
fmulp
into
stos
test
ret
push
mov
rclb
cmp
cmp
mov
pmaxub
xor
addr16
into
andnps
cmp
add
leave
outsl
in
sub
push
push
mov
daa
adc
mov
cmp
push
cmc
or
mov
pop
loope
jo
or
and
push
inc
in
sbb
or
mov
add
dec
js
xor
orb
mov
inc
shl
lret
inc
and
popf
add
cmc
in
cmp
fcmovnbe
sbb
data16
xchg
cmpb
sub
and
xor
xchg
xchg
nop
dec
sub
in
mov
mov
aad
push
mov
xor
jae
insb
pshufw
xorb
clc
mov
mov
push
es
es
sbb
shl
sbb
mov
das
sbb
push
inc
iret
jno
pushl
xchg
mov
sub
xor
dec
adc
pop
jb
daa
and
leave
cltd
fistl
loope
ss
mov
jne
fsubrl
add
xchg
jmp
jns
sbb
nop
inc
push
inc
lods
enter
pop
sbb
test
cmp
and
imul
iret
sub
mov
stos
sbb
mov
in
xor
insl
repnz
sbb
sub
jb
mov
cmp
shll
inc
in
mov
in
sub
jg
leave
mov
adc
lret
dec
jg
cmp
into
jl
aad
jae
fists
push
dec
push
xchg
repnz
loope
pop
and
inc
add
bound
push
insb
clc
mov
pop
dec
dec
or
les
imul
cmpsb
stos
mov
push
out
xor
sbb
push
adc
xchg
in
enter
sbb
mov
adc
mov
not
cmp
rol
add
or
xchg
test
mov
ja
mov
jl
add
clc
push
dec
ja
pop
fs
jge
dec
or
inc
mov
adc
adc
mov
sahf
iret
mov
xchg
mov
nop
pop
das
fmull
mov
icebp
add
rcrl
xor
out
jo
xor
mov
mov
out
stos
adc
jnp
mull
lods
sahf
out
jge
push
call
add
mov
xchg
repnz
sbb
lods
inc
jns
dec
into
dec
in
sbb
shll
jne
imul
cmp
sbb
fistps
pop
subl
xchg
dec
mov
ljmp
push
imul
gs
push
jg
add
mov
add
xchg
mov
lods
pop
xchg
or
sbb
out
xchg
pop
add
xchg
jb
imul
mov
inc
out
out
fimull
and
imul
addr16
imul
sub
add
and
adc
pop
cmp
das
pop
in
mov
lea
or
or
inc
loope
push
or
dec
rcrb
inc
push
push
fwait
push
push
mov
add
pop
xlat
fisttps
add
dec
jb
sub
push
sarl
sbb
es
lods
test
aaa
jecxz
mov
dec
inc
cli
mov
lods
mov
cmpsl
mov
lods
inc
adc
loopne
push
data16
bound
cwtl
mov
push
or
orb
sete
jae
add
dec
pop
dec
pop
push
out
into
mov
js
lods
pop
popf
test
jp
mov
push
lret
icebp
fldt
and
sbb
pop
adc
wbinvd
jnp
sub
sbb
pop
pop
pop
ds
test
test
nop
daa
mov
add
enter
rolb
bound
push
jae
loopne
daa
out
and
fs
insb
cmpsl
cmp
insl
pop
or
setge
hlt
mov
jle
aad
mov
fwait
arpl
sbb
daa
fisubl
js
test
or
adc
jnp
adc
xor
sbb
push
sbb
ret
outsl
decl
mov
divl
cmp
out
add
insl
rcl
mov
rorb
lahf
aam
mov
ret
push
or
frstor
sbb
xor
or
arpl
rcr
adc
xchg
dec
test
xor
add
and
shrb
scas
icebp
loope
roll
fsts
cmpl
sti
xchg
add
mov
xlat
bound
jbe
mov
movsl
and
dec
fldl
mov
popa
jp
mov
clc
dec
dec
insl
xchg
mov
xlat
sub
dec
jb
adc
inc
scas
movsb
popf
gs
pop
int3
fcompl
addb
dec
sbb
mov
adc
xchg
pushl
mov
out
jbe
lret
div
fmull
push
adc
mov
jnp
fwait
adc
dec
mov
in
push
pusha
xor
je
pop
movb
pop
xchg
lods
sbb
or
outsl
cmp
lds
add
cli
mov
loopne
jmp
mov
pop
incb
mov
push
pop
je
mov
xchg
in
lret
cli
leave
imul
sbb
out
or
dec
es
dec
movsl
xchg
jns
fimull
jns
or
and
adc
call
pusha
mov
data16
out
jns
jmp
jnp
lds
cs
pop
push
ds
ljmp
idivb
dec
jge
dec
mov
loopne
mov
fwait
loop,pn
ss
jmp
xor
xchg
mov
lods
inc
and
xrelease
ljmp
jecxz
mov
add
inc
frstor
addr16
xor
mov
mov
mov
lods
pop
xor
inc
in
mov
adc
sahf
xchg
or
push
mov
sbb
data16
or
mov
sbb
decl
sub
inc
push
inc
loope
shlb
push
fstps
cmp
int
sbb
sti
mov
sub
cmpsl
and
inc
and
icebp
mov
pusha
cmp
xchg
test
inc
icebp
mov
jb
mov
mov
es
xchg
loop
mov
mov
sbb
xchg
pop
jnp
xor
dec
xlat
mov
data16
les
popa
jmp
mov
mov
repz
jno
pushl
mov
mov
andb
cwtl
or
sbb
ds
lret
repnz
jmp
dec
movsb
or
notb
mov
andl
cmp
jns
mov
pop
add
add
xor
shl
add
add
aad
add
add
add
add
add
add
xor
loopne
add
add
nop
mov
add
add
add
adc
jo
add
add
and
shl
or
add
andb
xchg
sbb
add
inc
sub
add
add
shl
stos
stos
add
mov
pop
cli
jg
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
push
pushl
call
mov
pushl
xor
movl
pushl
mov
mov
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
push
call
mov
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
push
push
push
pushl
call
call
push
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
rolb
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
rolb
add
add
lods
rolb
add
add
xchg
rolb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
rolb
add
rolb
add
roll
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
rcl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
aam
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
add
aam
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
aad
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
add
sbb
add
adc
add
or
add
add
add
cld
aad
add
aad
add
aad
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
add
push
add
pop
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
xlat
add
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
xlat
add
pushf
xlat
add
movsb
xlat
add
lods
xlat
add
mov
add
xlat
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
xlat
add
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
