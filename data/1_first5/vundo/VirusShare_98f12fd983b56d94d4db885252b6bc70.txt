dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
inc
or
or
add
in
jnp
add
add
pop
push
add
add
push
testb
add
and
add
lock
and
add
jbe
jbe
out
add
add
add
add
in
add
add
popf
add
add
add
or
xor
testb
add
lldt
add
add
xor
add
add
add
add
ret
add
add
add
add
add
add
add
add
ja
xchg
add
add
add
xor
inc
add
jbe
pop
add
push
add
add
add
add
add
add
fs
add
push
add
add
add
add
sub
jbe
xor
sub
push
add
add
call
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
lcall
add
add
mov
jbe
test
les
jmp
add
mov
add
add
add
jbe
push
add
dec
add
add
xor
add
add
or
mov
add
jbe
xlat
add
add
add
add
add
les
sub
ja
sub
test
push
add
mov
dec
add
add
xor
add
add
add
add
add
push
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
xor
dec
add
jbe
push
add
add
add
add
add
add
add
add
add
add
add
insb
add
xor
push
add
sbb
add
add
mov
dec
add
add
add
pop
add
pop
add
add
add
add
and
jbe
pop
add
add
add
add
jbe
push
les
xor
dec
add
add
add
add
and
add
enter
add
add
jb
xor
sub
in
add
add
pop
add
add
xor
add
jbe
xor
add
out
add
add
add
add
add
add
dec
add
sub
push
add
add
push
add
add
or
mov
jge
mov
add
add
add
or
adc
adc
push
add
sub
xor
and
pop
add
insl
add
add
push
add
add
mov
push
add
add
add
add
add
add
mov
or
lldt
add
add
or
inc
add
add
roll
dec
add
cmp
add
add
add
add
add
add
movl
jbe
js
mov
inc
add
add
inc
add
add
add
add
push
add
dec
add
add
xor
aad
adc
inc
add
jbe
adc
aad
sbb
inc
add
jbe
je
aad
add
add
mov
ja
pop
add
add
je
testb
add
add
add
xor
add
cmpsl
add
add
add
js
inc
add
jo
and
mov
add
add
inc
add
verw
push
add
add
add
add
add
add
loop
cli
dec
sub
push
and
mulb
popa
sub
jb
push
adc
cltd
rclb
mov
into
jbe
mov
mov
in
jg
and
out
mov
test
xor
popf
pop
or
popfw
inc
xlat
lds
aam
outsl
jne
aad
ja
inc
jnp
adc
jmp
xchg
imul
xor
add
sub
or
add
repz
add
xchg
sub
insb
jns
mov
stc
sbb
rclb
popa
data16
test
mov
jg
test
fisttpl
pop
dec
or
mov
xlat
stc
inc
rcrb
cmc
nop
mov
mov
xor
mov
inc
jnp
notb
stos
sub
decl
jbe
ds
stos
ficomps
subl
push
dec
int
or
sub
push
pusha
mov
jle
imul
jp
add
mov
and
inc
lods
xchg
nop
dec
loope
push
and
jb
inc
icebp
and
call
scas
mov
push
jne
mov
inc
inc
inc
dec
dec
jmp
fildl
jbe
dec
inc
mov
jbe
dec
fisubs
jle
fdivl
dec
pop
jo
xchg
jp
sub
outsl
adc
loope
xor
xchg
cltd
xchg
push
sahf
and
jbe
cmp
leave
stc
sbb
fldt
jno
pop
inc
lret
sti
cmc
or
jge
orl
aam
jecxz
lock
insl
insb
jne
sbb
addl
stc
fstl
and
rol
jns
sarb
shlb
jnp
or
cmpsl
gs
mov
fistl
cmp
jns
scas
jbe
sub
mov
xchg
pop
pop
or
loope
cs
or
in
push
out
adc
lods
mov
icebp
or
add
or
push
popf
imul
pop
ljmp
nop
rcll
pop
ja
or
mov
cmc
jns
je
daa
lret
loope
in
lds
adc
and
or
mov
ljmp
rolb
or
mov
out
xchg
lea
adc
xor
inc
ss
xchg
cmp
int
rclb
aas
and
ret
xchg
dec
sub
jno
adc
sub
cmp
pusha
mov
jg
gs
mov
sub
sarb
repnz
sbb
lret
xchg
and
outsl
lock
clc
lods
or
pusha
dec
loop
insb
clc
cwtl
rol
mov
mov
mov
in
mov
lock
stc
xchg
mov
arpl
inc
add
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
dec
repnz
std
sub
lods
cmp
sub
jge
lea
jl
insl
mov
sub
or
in
cmp
mov
lea
sbb
insl
mov
cmp
lahf
int
std
test
aas
popf
jno
popa
mov
push
dec
sbb
or
jle
fs
cltd
inc
std
lods
or
mov
inc
jno
movsl
fmull
cmp
adc
cltd
push
push
cmpsb
mov
mov
sbbl
mov
and
loopne
loopne
repnz
xor
or
sbb
aaa
mov
cltd
push
pop
gs
fdiv
pop
add
xor
sub
int
fnstsw
mov
orb
int
cwtl
test
int3
pop
and
sbb
cmc
scas
jle
mov
mov
fidivrs
lea
sahf
fdivrl
int
mov
jge
inc
fiadds
imul
push
loopne
imul
sub
orb
aaa
popf
dec
lea
mov
std
pop
or
jge
insl
cmc
sbb
in
sub
sbb
fidivrs
call
sbb
aam
mov
pop
pushf
orb
mov
clc
and
outsb
mov
call
or
push
popf
jle
insl
mov
xchg
stos
pop
jecxz
sahf
jge
pop
fsubrl
lea
insl
lods
jge
lea
jge
insl
mov
cmp
or
in
cmp
mov
lea
jge
insl
mov
cmp
or
mov
dec
pop
fwait
inc
add
stos
int3
rcrl
lret
mov
pushf
pop
das
sub
jbe
xchg
inc
jecxz
out
pop
fists
adc
xor
mov
jo
push
mov
jecxz
sahf
data16
addr16
call
sub
push
pop
push
jb
jbe
jb
add
sbb
xchg
nop
add
outsb
sarb
les
push
cltd
cwtl
enter
cmp
add
sti
aad
dec
aam
lret
push
pusha
call
int
mov
nop
push
int3
andb
loop,pn
xchg
out
hlt
jg
push
adc
aas
mov
data16
mov
cli
dec
dec
mov
insb
mov
or
mov
cli
cld
je
push
subb
in
outsb
in
rcr
xchg
mov
hlt
ret
das
adc
dec
shlb
mov
mov
stos
jns
jb
stos
mov
ja
mov
push
xchg
lods
and
les
push
push
testb
shrb
cmpb
bound
push
add
mov
jno
xor
mov
rorl
sar
pushf
rolb
xor
mov
popf
xchg
clc
xchg
cmp
mov
xor
iret
sarb
jnp
mov
add
pop
sub
cmp
jnp,pt
or
ret
add
jnp
sbb
xchg
pop
test
std
adcb
test
into
dec
dec
cltd
mov
and
repz
test
movups
dec
inc
mov
test
inc
dec
insb
xor
inc
rcll
push
in
mov
icebp
jne
add
adc
sbb
xor
jge
adc
neg
adc
nop
sub
xor
mov
repz
jno
data16
xchg
mov
cmpsl
dec
push
jnp
out
inc
or
sbb
jmp
cmc
aam
sbb
mov
xor
mov
and
mov
add
jge
cmc
xchg
push
cmpsl
rcl
push
push
cmp
fidivrl
push
sbb
cli
mov
adc
aas
jmp
fstpt
sbb
add
fmuls
mov
test
in
sbb
pop
inc
sub
arpl
dec
loope
sub
xor
daa
mov
xchg
fadds
adc
rol
gs
dec
pop
mov
fadd
dec
into
enter
pop
mov
rolb
test
insl
cli
mov
loopne
cmp
push
test
mov
lahf
or
popa
pop
mov
sbb
outsb
xchg
sbb
jmp
lock
hlt
scas
test
daa
xor
mov
fnstcw
movsb
ss
stc
adc
mov
add
dec
aad
mov
cmp
sbb
sarl
dec
push
xchg
bound
jns
jle
adc
xchg
shl
aad
or
fs
xor
jae
les
aaa
mov
jnp
xchg
pop
loope
inc
test
jp
fsubl
pop
aad
loop
shll
repnz
and
or
inc
lods
jns
jne
test
mov
in
lcall
sub
incl
jmp
ret
icebp
xchg
or
fisubrs
mov
fisubrl
xchg
adc
or
jne
das
jbe
ficomps
jb
mov
nop
mov
test
loop
nop
cmp
mov
scas
ret
mov
test
fcompl
xor
xor
bound
cmp
jmp
fwait
xor
movd
sbb
xchg
cmpsl
aad
cmp
add
insb
pop
push
adc
sbb
inc
notl
add
mov
sbb
cltd
popf
out
push
push
loop
pop
test
jae
xchg
jne
fidivl
fistps
dec
lock
sub
and
push
mov
scas
cmp
sarb
aad
mov
insl
negb
pusha
ljmp
fwait
ja
gs
insb
jae
outsb
sbb
aam
push
outsl
add
sti
adc
push
cmp
icebp
ja
scas
cmp
aad
push
pushf
lock
inc
xchg
imul
andb
movsl
sbb
div
ret
jge
dec
cmpsl
mov
shrl
or
inc
mov
and
repz
imul
call
mov
popf
fimull
pop
jo
leave
cmp
outsb
add
lods
mov
adc
testb
pop
into
in
pop
fwait
pop
fdivl
mov
ds
shlb
pop
fmull
dec
xchg
negb
add
int
mov
roll
jg
add
fs
xor
pop
mov
dec
mov
je
inc
and
jbe
pop
hlt
mov
call
and
test
stos
test
aaa
aaa
jmp
fcompl
mov
sbb
or
fcompp
xor
or
test
mov
out
jns
call
sbb
mov
stc
and
sub
lock
insb
es
xchg
cltd
and
and
xchg
lret
sub
loopne
ss
push
pop
lds
sub
xchg
shr
pop
pop
push
imull
gs
mov
loope
xor
jecxz
in
inc
fsubrl
ljmp
sti
cmpsb
mov
and
arpl
mov
sub
hlt
in
je
fsubrl
sbb
or
fcmovb
push
js
fmuls
and
sub
jmp
jmp
push
faddl
scas
push
popa
inc
jmp
jp
stos
iret
pop
pop
mov
adc
stos
mov
stc
pop
iret
jmp
jbe
lea
jb
adc
mov
adc
mov
insl
mov
imul
dec
sub
subb
push
mov
sbb
jae
cmp
pop
and
andl
mov
or
push
inc
stos
push
pusha
mov
pop
lcall
cltd
fisttpl
push
out
mov
div
mov
push
fucomi
test
arpl
xor
and
in
loop
sbb
or
jbe
aad
cs
iret
push
dec
xchg
mov
jns
fcoms
xchg
repnz
sbb
push
xchg
adc
jl
rcr
sti
ljmp
dec
xchg
stc
or
aaa
add
in
insl
movsl
leave
stos
scas
mov
pop
xchg
icebp
stos
out
mov
pop
aas
nop
adc
adc
pop
sbb
cltd
jle
rcll
pop
insl
inc
leave
jp
cmp
dec
push
xchg
jns
ljmp
cwtl
sub
or
and
pop
popa
cmp
lods
dec
xor
iret
in
adc
lods
xchg
inc
loope
rcll
sbb
ret
mov
pop
mov
imulb
or
mov
push
cs
data16
pushf
testl
loopne
cltd
shlb
mov
popa
outsl
ja
inc
pop
push
fsubl
mov
roll
and
inc
cmc
mov
jnp
lea
xor
test
stos
ja
in
in
jb
and
or
sub
mov
mov
mov
hlt
dec
or
mov
add
jl
iret
push
and
sub
dec
add
pop
cld
dec
in
enter
sbbb
mov
sbbl
gs
push
push
push
fdivrl
add
out
add
int
push
and
inc
fwait
insl
jg
mov
iret
xor
or
mov
adc
and
adc
ja
test
lods
insl
test
and
cwtl
add
jb
fs
ds
shr
cmpsl
js
gs
add
rcr
je
jle
mov
and
nop
mov
jo
fsubs
rolb
mov
and
pop
in
mov
jnp
push
ror
imul
popf
and
add
movups
mov
ret
dec
in
mov
xchg
daa
and
xchg
insb
negl
pop
pop
and
xor
sub
mov
mov
rcrb
dec
mov
jno
aad
scas
xchg
ficoml
aaa
scas
or
cmp
xchg
mov
cmp
sbb
push
mov
mov
xchg
fwait
mov
jb
scas
into
jle
dec
pop
sahf
jecxz
dec
push
test
gs
fs
fwait
je
test
aaa
pusha
jp
gs
scas
add
std
es
pusha
hlt
inc
push
jle
lahf
sbb
dec
adc
shrl
fstpl
mov
popa
movsb
add
xor
clc
bound
pop
jae
mov
aaa
loop
mov
lods
ret
push
mov
ror
jae
movsl
leave
xor
cmp
xor
fdiv
ret
movsb
and
fisttps
push
int3
xchg
push
inc
pop
int
xor
mov
in
test
jge
fdivl
mov
push
fs
int3
push
fucomp
dec
or
add
fidivs
ljmp
sbbb
add
cwtl
outsl
mov
sub
cmp
movsb
push
add
insb
imul
je
sbb
daa
subl
push
nop
mov
popf
incl
xchg
cmpsl
movsl
inc
sti
cs
imul
xchg
leave
iret
ret
xlat
xchg
mov
jmp
stos
pop
jne
and
aas
incl
sahf
mov
imul
ret
hlt
or
ror
rcr
pop
shll
adc
dec
cmp
testb
sbb
xorb
jno
adc
dec
rorl
sbb
inc
lcall
xlat
rcr
jns
mov
test
dec
jle
mov
jecxz
inc
loopne
lret
or
xchg
mov
sbb
and
sahf
xchg
xor
inc
lcall
test
cli
jp
sub
add
push
sarl
aad
fsubl
cmp
xor
xchg
aaa
clc
cld
scas
movsb
mov
jge
aam
cwtl
xchg
lods
ja
xor
mov
xchg
or
pop
dec
or
push
lret
repz
fildll
xchg
pop
fidivrl
pusha
xlat
jmp
insl
inc
add
add
ljmp
xor
push
jg
mov
inc
push
jno
addr16
ljmp
js
mov
out
jge
push
and
push
xor
int
into
pop
out
xchg
aaa
fwait
mov
xor
cmp
movsl
jp
dec
stos
mov
negb
add
jg
pop
jbe
test
fdivr
cmp
gs
aad
in
movsl
mov
cmc
mov
push
ret
cmp
cmc
add
and
sub
cwtl
mov
in
je
jle
sub
lret
arpl
cmpsb
imul
les
cmp
jo
repz
orl
lods
fisttpl
test
fldcw
sbb
cmpl
sbb
adc
scas
lcall
push
lcall
push
pop
sub
sbb
mov
mov
add
and
sub
lcall
leave
jmp
in
movsl
rolb
jne
in
out
aas
dec
cltd
int3
add
or
stc
sub
pop
das
aam
fcomip
sbb
or
pop
mov
jmp
pop
sbb
shlb
add
lea
xchg
stos
decb
adc
mov
stos
push
clc
sub
test
cli
unpckhps
test
outsb
sbb
lcall
sbb
stos
divb
or
pop
pop
add
jle
inc
cli
test
repz
lods
int3
xlat
mov
aas
add
sahf
scas
mov
idivb
imulb
push
dec
movsl
jle
cmpb
push
aad
insl
pop
inc
add
sbb
dec
push
int
scas
aas
scas
mov
dec
or
clc
jp
fmuls
repz
mov
pop
repnz
inc
cmp
jnp
cmpsl
arpl
sbb
aad
dec
jb
fisttpl
adc
mov
sbb
push
ja
pop
ret
sbb
popf
fnsave
and
cwtl
add
fmuls
pop
and
mov
mov
sarb
sub
xor
loop
lcall
repnz
pushf
test
ljmp
fidivs
mov
pop
mov
or
movsl
and
inc
in
inc
push
jge
push
stos
cwtl
xchg
sti
dec
adc
iret
push
sarl
fidivrl
insl
xchg
lods
cmp
sbb
subl
push
fucomp
inc
mov
dec
call
aas
aas
sbb
cmc
and
stos
push
cmp
sti
mov
pop
or
pop
mov
xchg
imul
inc
xchg
shrb
pop
push
incl
lods
cs
mov
imul
and
loope
iret
jle
iret
sbbb
popa
pop
push
aaa
and
cmp
test
bound
pop
leave
cmpsl
ret
test
xchg
xor
mov
jecxz
fcoml
stos
push
dec
xor
rep
mov
mov
loop
scas
and
fnsave
mov
fcmove
adc
mov
add
add
xchg
and
push
mov
mov
popa
aad
inc
ret
shlb
push
loop
aad
out
jecxz
cmpxchg
icebp
fcmovu
xor
dec
or
cmp
popa
rsm
push
or
mov
unpcklps
lods
cmpsb
inc
enter
or
and
cmp
adc
xor
ja
inc
stos
mov
cltd
or
pop
ret
subl
mov
push
push
aaa
movsb
sahf
dec
lock
fwait
mov
mov
cwtl
inc
into
int3
add
add
jecxz
mov
sbb
adcl
hlt
xchg
cmpsb
mov
and
sbb
dec
fstps
movsl
lahf
push
lea
ss
inc
repnz
push
push
mov
mov
dec
cmp
out
jns
xchg
jmp
cmp
mov
add
adc
add
dec
adc
aad
lret
cltd
dec
std
iret
and
xchg
mov
jno
jmp
lods
pop
and
imulb
lods
mov
push
sti
add
inc
jmp
popa
cmpb
mov
sbb
cmp
inc
xchg
mov
pop
add
cltd
pop
pop
jmp
or
adc
fsub
popa
jl
or
pop
add
pop
or
mov
leave
js
fistl
pushf
lock
notb
pop
mov
add
sbb
and
mov
scas
add
jns
pop
std
dec
leave
scas
loope
xor
push
cmpl
lret
jle
sub
mov
js
and
jp
or
negb
mov
push
or
in
xor
jcxz
pop
mov
and
cmpsl
cmpsl
add
rorb
sti
mov
stc
inc
jnp
lea
xor
ficomps
xor
sbb
xor
sbb
repnz
sbb
sub
fisubl
xor
lea
xchg
push
cmp
dec
push
jb
outsb
jmp
int3
and
jne
cmp
loop
lea
inc
in
gs
mov
push
inc
inc
les
ret
ss
mov
loopne
fwait
sub
mov
mov
mov
mov
push
mov
mov
jns
std
add
ret
push
dec
xchg
or
cmp
test
mov
mov
mov
into
push
cs
pop
and
xor
sahf
loopne
cmp
stos
inc
jmp
sti
das
dec
call
push
cmp
in
or
cmp
daa
sti
push
fldenv
or
stos
leave
xchg
jmp
sub
xlat
adc
mov
inc
sub
adc
mov
or
dec
adc
sbbb
out
or
dec
sar
pop
inc
cmc
push
push
addr16
pusha
xchg
mov
sbbb
test
xchg
sbb
idivl
into
dec
das
inc
sbb
mov
lahf
testl
xor
or
aad
imul
popf
lods
lret
or
add
iret
cwtl
pop
rcrb
mov
shrl
mov
test
ds
ficoml
ret
or
mov
cwtl
jmp
repz
inc
pop
dec
addb
sub
pop
out
pop
dec
ss
pop
stc
dec
or
das
outsb
pop
sub
enter
push
icebp
add
ds
mov
dec
push
ss
std
dec
imul
in
pop
mov
mov
push
subl
jne
lea
cvtpi2ps
push
pop
pop
mov
ss
je
cmpsb
jns
pop
addr16
sub
insb
and
mov
out
dec
rol
call
movsb
xor
push
lods
sub
lahf
add
cld
daa
sbb
inc
and
dec
insb
dec
es
mov
repnz
push
orb
inc
stos
cmpsl
xchg
xor
cwtl
sub
mov
cmc
loop
cwtl
mov
jg
or
test
mov
out
pop
xor
pop
sub
fwait
xchg
add
stc
push
push
lds
movl
loope
cmpsl
mov
iret
arpl
jge
sbb
dec
fbld
outsl
jne
js
in
push
cltd
mov
mov
jl
outsb
xchg
jnp
call
faddl
push
jb
push
rcr
or
enter
xchg
int3
out
mov
lea
ret
bound
cmp
movsb
push
cmpsb
int3
bound
sub
in
ljmp
xchg
pop
int
xor
rolb
inc
popf
mov
popa
es
inc
popa
fpatan
xor
ja
mov
out
or
das
arpl
sub
xchg
mov
pop
fcompl
imul
mov
cmpsl
int3
fwait
div
xchg
add
in
dec
mov
ret
push
inc
xor
or
push
adc
out
mov
inc
push
jge
inc
shl
mov
pushl
test
jbe
jecxz
xchg
xchg
jb
cmp
inc
mov
lcall
push
adc
mov
and
ror
arpl
xor
addr16
sub
cmp
lcall
scas
add
xlat
in
out
inc
push
mov
jge
enter
and
jecxz
cli
sbb
daa
xchg
aad
popa
js
xchg
stc
jp
add
pop
mov
dec
imul
sub
xchg
jns
jnp
loop
incl
gs
stc
push
mov
xor
daa
sbb
jl
jmp
js
mov
outsl
subl
jne
cs
into
mov
cmp
inc
dec
add
inc
push
or
pop
mov
jne
outsl
dec
jno
je
aaa
fs
ja
push
lods
or
fldt
lods
les
mov
push
jbe
outsb
outsb
ds
mov
and
cmp
cmp
or
movsb
lods
push
xchg
pop
mov
testl
ds
add
sbb
fs
arpl
xlat
mov
cld
push
lar
in
insl
jae
cmpsl
lcall
push
popf
mov
js
jp
add
es
sti
dec
lods
scas
or
mov
xor
mov
lods
push
aas
je
lahf
dec
sbb
or
stos
add
and
bound
xchg
push
sti
mov
mov
popa
addr16
arpl
ja
push
sub
dec
neg
ficoms
jp
dec
lret
xor
js
jb
xchg
fdivl
or
jg
mov
sub
cmp
fistps
repnz
xchg
divb
sub
jge
out
cmp
jecxz
add
int3
mov
dec
xchg
or
mov
mov
or
test
pop
aam
lock
fcmovne
outsl
into
bound
shlb
decb
or
shrb
sub
adc
rep
test
out
jb
ljmp
aaa
mov
je
mov
stc
cmpsl
lret
or
sbb
test
lock
mov
adc
add
fldpi
push
mov
test
scas
xor
mov
xlat
cmp
popa
mov
xchg
cmp
inc
or
pop
pushf
xor
dec
add
inc
dec
inc
fcmovb
movl
sbb
stc
or
scas
adc
push
and
fnsave
mov
push
lret
into
sub
and
add
icebp
orl
mov
js
inc
jp
xchg
adc
imul
add
mov
xchg
xchg
jae
fs
outsl
mov
pmaxsw
je
roll
sub
leave
movsb
mov
mov
mov
inc
cmp
ja
xor
xor
lods
lds
gs
loopne
sbb
jae
jae
xchg
outsb
lret
movsb
xor
cmp
and
mov
mov
imul
pop
lcall
in
mov
jp
jb
mov
cli
shl
sarb
das
push
les
adc
pop
rclb
or
xor
lds
or
xlat
std
add
mov
inc
xor
nop
xor
jno
jb
sti
ret
idiv
fmul
pop
pop
fs
es
stos
fadd
inc
rcr
mov
cltd
lahf
dec
leave
scas
leave
cmp
data16
mov
jmp
cs
mov
dec
leave
jne
pop
aam
push
sarl
bound
fcomps
push
aas
scas
and
push
push
cmp
cli
add
inc
aaa
in
jg
pop
int
mov
adc
jns
adc
mov
mov
mov
and
sarl
mov
pop
popf
into
push
aad
loopne
cmp
lds
or
loop
shl
lods
mov
dec
sub
inc
out
int3
jle
jmp
sti
pop
push
pop
mov
xchg
sarb
bound
sub
push
dec
add
jbe
ret
jecxz
jbe
cld
int
fildl
js
sbb
xchg
bound
sbb
pop
mov
fdivs
cwtl
roll
dec
in
insb
jl
shlb
scas
dec
dec
dec
pop
cmp
lahf
test
mov
add
sub
xor
inc
lea
imul
lahf
fsts
std
inc
jb,pt
pop
aam
sub
push
or
dec
cs
les
cltd
xchg
pop
add
sub
out
and
dec
adc
mov
mov
cmp
and
stos
mov
addb
les
xchg
mov
in
mov
ficomps
inc
jl
stc
mov
or
cwtl
bound
mov
push
lds
adc
xchg
jo
fiadds
dec
sub
sub
pusha
and
movsl
rcrl
adc
sbb
lea
stos
sbb
outsb
fadds
test
clc
loopne
mov
ret
imulb
out
movsl
mov
lea
xchg
cmpsb
inc
stos
stc
push
jae
imul
add
adc
push
and
mov
jae
lock
jbe
add
les
pop
mov
cmp
je
jae
xchg
xor
outsl
popa
mov
gs
sbb
popf
testb
mov
inc
sbb
popf
dec
lea
insl
lods
jge
lea
jge
insl
mov
cmp
or
in
cmp
mov
lea
jge
insl
mov
cmp
or
in
cmp
mov
push
dec
popf
jge
insl
mov
cmp
or
in
cmp
dec
lea
in
lods
jge
jb
aaa
xlat
lods
insl
lret
test
ret
add
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
insb
test
push
cltd
imul
cmpsb
cmp
cmpsb
jns
dec
pop
and
push
cltd
jbe
data16
push
leave
inc
mov
repnz
add
pop
das
test
push
cltd
outsl
jmp
push
fnstenv
jnp
js
cmp
scas
sub
es
loope
cltd
jle
lcall
lret
pop
shrb
sub
imul
cli
stos
xor
aad
sbb
jmp
sarl
pop
imul
mov
dec
dec
or
jecxz
lahf
cmp
addr16
cmp
mov
pop
mov
push
jns
or
jl
add
out
ss
mulb
jae
mov
into
xchg
jae
mov
xchg
inc
das
pop
fstp
jmp
es
cmpsb
jo
mov
pop
jne
testb
pop
dec
cmpsl
sub
xor
cltd
mov
lret
call
insl
pushf
dec
cmp
imul
imulb
ss
dec
imulb
adc
push
leave
pop
fldcw
or
jns
dec
fbstp
inc
lods
inc
clc
jae
bound
push
sub
in
call
sbb
xor
fdivl
add
add
add
rcrl
jl
pop
xchg
js
pop
ss
in
adc
jae
push
cld
push
data16
push
leave
inc
fnstenv
or
jns
dec
pop
ss
push
cltd
jbe
data16
push
leave
inc
fnstenv
or
jns
dec
pop
ss
outsb
pop
pop
popf
icebp
mov
dec
mov
rcrl
ss
or
out
stos
sub
jmp
dec
pop
mov
dec
cmpsl
leave
ja
test
inc
loope
sub
cld
mov
pop
out
xor
dec
fmuls
jg
and
lods
arpl
add
add
xchg
rcrb
mov
rcrl
xorb
mov
and
negb
jp
notl
lds
stos
and
xchg
mov
push
add
pop
cmpsb
bound
popa
pop
pop
xor
icebp
das
addr16
shll
xchg
ret
sub
mov
xchg
or
fsubrs
cmc
jns
xchg
iret
in
jae
fldl
inc
cmp
and
push
adcl
jl
call
mov
stos
jns
outsl
jg
inc
pop
repnz
jnp
or
int
jnp
ss
das
cltd
in
scas
adc
push
aad
je
adc
cmp
xchg
pop
int
sbb
cmc
and
fnstenv
dec
daa
sub
cmc
cmp
push
outsl
jmp
mov
lret
jg
xor
push
incl
push
pop
push
xchg
lret
daa
sub
sbb
sbb
or
and
cmp
lock
insl
pop
dec
in
or
ret
push
mov
out
sbb
outsb
mov
nopl
notl
das
mov
or
out
mov
mov
xchg
push
pop
push
out
adc
xor
js
sub
cmp
mov
adc
imul
push
or
iret
xor
jp
xor
jle
and
pop
and
or
jg
push
mov
and
adc
pop
inc
dec
inc
pop
xchg
cs
inc
push
inc
and
or
adc
sbbb
loope
cmpl
mov
cmp
xchg
jo
mov
sub
xor
outsb
and
fwait
sub
inc
mov
testb
push
dec
cltd
adc
popf
sbb
out
mov
aaa
jp
mov
jo
inc
popf
mov
cld
or
mov
sbb
dec
addl
or
mov
int
sub
jmp
imul
push
xchg
xchg
and
add
dec
adc
cli
jo
popl
out
pop
jecxz
rclb
push
repnz
mov
lods
push
ficoml
test
inc
mov
sub
pop
dec
mov
lahf
push
sbb
std
ret
xor
jae
mov
mov
cmp
cmpsl
sub
rcrl
push
out
mov
sahf
hlt
mov
xchg
mov
sub
insb
xlat
pusha
push
jp
xor
insl
iret
adc
mov
push
push
leave
mov
stos
cmpsl
enter
inc
rolb
mov
xor
ret
jnp
pop
in
loope
std
rolb
add
aas
dec
bound
mov
lret
mov
pop
shrl
out
mov
or
and
stos
cs
xchg
jmp
or
mov
xchg
cli
icebp
fsubr
inc
and
ret
sbbl
iret
sub
sbbl
inc
push
xchg
push
push
push
xchg
inc
iret
and
inc
and
jmp
xor
jle
rolb
outsb
pop
mov
inc
test
dec
pop
xchg
in
sbb
into
mov
loope
jmp
or
xor
stc
inc
xchg
xor
popa
ljmp
jae
adc
inc
dec
repz
or
xchg
jo,pn
jecxz
std
gs
test
aaa
hlt
imul
mov
sub
inc
arpl
lret
adc
pushf
sbb
adc
repz
xchg
xchg
mov
sbb
cmp
jb
sti
stos
adc
cmpsb
push
mov
aaa
cwtl
jnp
or
call
stc
push
int
pop
jne
push
jbe
xchg
xor
jg
xchg
sbb
cmpsb
cli
and
xchg
xlat
mov
mov
xchg
cmp
sbb
sti
lcall
or
lock
lods
idivb
je
sti
in
inc
stc
fistps
push
mov
in
out
into
ljmp
pop
inc
movsl
data16
push
xchg
leave
dec
mov
mov
jmp
lds
aam
push
lock
jo
sbb
mov
aam
nop
out
rorb
dec
fidivrs
adc
xor
out
rcl
dec
sbb
test
mov
int3
inc
dec
and
insb
inc
in
jle
cmovne
xchg
subb
mov
jecxz
and
enter
daa
add
push
and
inc
lock
mov
shrb
in
inc
in
dec
push
hlt
rcll
mov
add
mov
movsb
nop
inc
sbb
in
arpl
fstl
pop
pop
push
jl
out
and
cs
sub
cs
sbb
ljmp
pop
pusha
pop
pop
outsb
sahf
dec
loope
cmp
lods
je
mov
test
out
ret
out
xor
and
jle
xchg
xor
jmp
mov
nop
in
or
mov
fiaddl
outsb
push
dec
mov
push
jns
jl
mov
arpl
loopne
je
lea
pusha
pop
xchg
dec
mov
jmp
sub
jge
cmpsb
mov
inc
loope
push
fmull
bound
push
sbb
pop
outsl
int
xchg
mov
aam
xchg
cs
ds
mov
and
mov
std
pop
fistl
mov
inc
sub
cli
rorl
iret
jg
and
sub
inc
das
dec
mov
cmc
or
add
mov
enter
mov
cmc
out
stos
cli
cmpsb
cmp
out
test
movsl
repz
psllw
sbb
hlt
sbb
or
jns
sub
dec
clc
mov
int3
leave
adc
mov
jne
jno
popa
cwtl
leave
or
or
mov
mov
cld
cmp
pop
xchg
lahf
cld
ret
inc
es
push
sbb
jge
xchg
xchg
roll
mov
mov
mov
pop
out
or
lock
pop
inc
adc
adc
pop
jl
icebp
pop
xor
dec
jae
cs
frstor
aad
and
jb
test
stc
rcrl
adc
push
loopne
push
jge
push
mov
jb
mov
jo
aam
jo
dec
cmp
and
and
dec
pop
mov
push
shlb
xor
sti
imul
mov
jb
add
imul
jne
sub
add
and
mov
mov
and
jae
add
cmc
or
xchg
xchg
jmp
jno
pop
ret
subb
enter
subb
sub
test
mov
add
jb
xchg
mov
or
and
incl
pop
lods
lahf
fstl
dec
divb
push
push
sbb
into
movsb
mov
int3
test
pop
cmp
xor
clc
add
dec
sub
aad
jbe
fucomip
adc
and
and
pop
pop
push
ss
mov
int
jae
pop
lods
cli
dec
push
data16
lahf
fcompl
je
xor
jo
dec
nop
insl
and
repz
hlt
out
and
add
pushf
mov
pushf
inc
xor
pop
clc
pusha
adc
mov
pop
loope
adc
sbb
inc
inc
adcb
adc
sar
lret
lahf
cli
adc
outsl
or
and
and
mov
push
hlt
test
fcomi
aaa
pop
sub
lds
mov
add
inc
out
and
xor
or
inc
dec
out
insb
dec
mov
inc
out
call
pop
or
dec
test
shlb
fistpl
ret
xlat
pushf
pop
push
fsts
enter
fdivrl
xchg
jae,pn
lods
mov
test
or
addr16
jbe
imul
push
dec
add
push
stos
sbb
ret
ljmp
push
into
cmc
dec
sub
adc
inc
jmp
push
mov
xchg
cmpsl
mov
std
adc
or
cmc
or
mov
fstl
cmp
push
pop
fldcw
ja
inc
nop
ss
lock
roll
mov
ss
dec
cld
insl
aad
mov
pop
dec
das
call
sbb
enter
sub
mov
icebp
dec
sub
and
jbe
setle
cmp
hlt
lahf
push
cld
lock
xchg
ljmp
les
aaa
repz
cmp
sbb
and
adc
imul
dec
js
js
test
in
dec
and
stos
cltd
jmp
xor
mov
sahf
cwtl
int
es
pop
fisubs
add
mov
shrl
push
adc
xchg
xchg
mov
fsubp
pop
subl
cmpsl
insb
adc
and
pop
inc
pop
cli
outsl
xchg
aam
daa
lock
sub
aad
mov
fidivl
lea
pop
push
jb
xchg
fiaddl
sub
dec
loopne
mov
adcl
cmp
mov
sub
and
and
sub
sub
jecxz
int3
icebp
jnp
out
add
pop
and
mov
adc
js
and
and
adc
mov
pusha
les
rcrb
adc
and
jg
bound
jecxz
mov
adc
xchg
movsl
fwait
bound
xchg
rcrl
lods
daa
lret
test
out
and
idivl
inc
jo
out
adc
aad
mov
aas
mov
fldl
sbb
in
mov
mov
ret
sub
jg
ret
es
lds
sbb
imul
jbe
dec
ret
loop
adc
arpl
adc
imul
cltd
mov
repnz
dec
pop
arpl
pop
loop
sbb
sbb
mov
aas
fwait
addr16
pop
jl
or
jne
jbe
jns
sbb
pop
stos
lds
sub
add
xchg
dec
inc
aas
lods
out
test
rorl
mov
add
ss
int3
int
test
cmp
jno
sub
leave
out
lahf
rorb
repz
loope
ret
gs
jecxz
or
decb
gs
cmp
fsubs
adc
aam
sub
stos
dec
data16
movsb
push
fcoml
sub
add
addr16
sbb
mov
fstl
pop
ljmp
out
mov
xchg
sub
std
cltd
xor
out
xlat
push
pop
pop
sbb
push
call
insl
mov
rcll
jae
mov
xor
scas
xorb
xchg
xchg
cmp
or
fdivrs
scas
arpl
enter
jae
cld
sbb
mov
popa
aad
int3
fistpl
and
ljmp
sbb
aaa
sub
test
mov
push
int
scas
lods
cltd
jmp
jmp
test
jno
in
loope
sub
call
cld
fistps
inc
xor
sarb
mov
data16
push
or
loopne
ss
mov
or
jnp
xor
outsl
pusha
lret
or
pusha
pop
inc
mov
cltd
mov
dec
dec
addr16
fcmovbe
xchg
iret
mov
push
imul
inc
in
addr16
nop
push
mov
mov
and
lea
inc
outsl
jmpw
xor
mov
lcall
dec
loopne
lods
cmp
insb
cmc
stos
xor
aam
daa
aas
int
out
xor
shlb
xor
mov
sbb
or
push
adc
xchg
dec
sarb
inc
int
lea
cmp
fiadds
outsb
add
xchg
nop
das
sbb
sbb
inc
jb
gs
dec
adc
cld
dec
jecxz
cs
test
repz
cltd
push
fwait
mov
xlat
add
fbstp
aaa
xor
mov
cmp
xchg
cld
ficompl
pushf
add
enter
repz
inc
or
iret
ja
push
jmp
ret
dec
xorb
mov
xchg
inc
xchg
loope
outsl
fninit
sub
shlb
pop
fisttpll
or
pop
dec
clc
dec
aaa
repz
pusha
shll
std
sub
mov
or
outsl
repz
xchg
dec
aaa
into
jb
fsubs
mov
rolb
imul
fbstp
shrd
sub
mov
mov
add
jmp
push
popa
outsb
mov
rorb
test
xor
add
pusha
xchg
add
rcrb
lods
outsb
dec
lods
sti
xchg
mov
push
mov
jae
ret
mov
jns
xorb
repnz
dec
shrb
pushf
fdivs
stos
scas
add
fsubr
inc
fcompl
shld
or
xchg
inc
enter
movsl
rolb
jecxz
decb
push
cmp
dec
lcall
mov
pusha
test
lret
jmp
cmp
cmp
orb
es
je
ret
xor
jae
insl
out
repnz
cwtl
aad
jns
sbb
jp
subb
bound
pushf
push
mov
cld
and
add
stos
mov
mov
and
jge
dec
pop
adc
pop
stc
daa
mov
add
mov
fcomp
cmp
das
mov
xor
leave
xorb
mov
cs
mov
jg
pushf
xor
gs
sub
pushf
and
push
pop
dec
loope
scas
fwait
std
push
daa
xchg
cwtl
popf
loop
call
or
or
outsb
mov
daa
orl
lock
jno
enter
mov
int
add
pop
xor
and
and
add
dec
sbb
jg
or
lret
add
inc
rcl
jo
ror
inc
insb
jnp
addb
dec
mov
popa
inc
mov
dec
in
ret
mov
adc
and
jo
nop
xor
push
xchg
mov
bound
rcrl
or
std
xlat
sub
mov
cwtl
mov
int
adc
cld
mov
mov
stos
mov
mov
mov
fidivs
sbb
stos
aad
es
jecxz
jno
test
scas
andb
ljmp
mov
in
dec
lds
jnp
rorb
mov
pop
mov
adcl
mov
loop
add
mov
lahf
sbb
cmp
lea
dec
cs
jmp
or
pop
loop
loop
jne
out
xor
push
rorl
jb
loopne
pop
daa
jle
call
fdivrl
imulb
inc
xchg
cmpsb
sbbb
inc
mov
dec
lds
std
loopne
fdivp
jle
js
loop
dec
xor
rclb
dec
call
mov
orb
cmpsb
or
adc
jmp
mov
inc
inc
mov
insb
mov
lea
test
out
xor
aas
nop
or
mov
les
jne
add
pop
shlb
mov
les
mov
push
xchg
test
int3
aam
jecxz
sub
mov
jno
test
rolb
pop
lods
mov
pop
push
cmp
pop
in
cs
cltd
xchg
mov
push
pusha
mov
add
add
sbb
sub
pusha
sub
push
xchg
pop
test
cmpsb
js
movsb
call
add
ret
iret
jle
inc
xchg
mov
pop
dec
jns
rorb
dec
ja
add
xor
sti
pop
jbe
sbb
addr16
sbb
push
jmp
psubq
adc
ja
decb
mov
lods
divb
xchg
cmp
jns
dec
inc
jno
cwtl
cmp
imul
xlat
movsb
push
sbb
adc
fisttpl
mov
xor
mov
jo
mov
inc
ss
nop
mov
push
mov
cmpsl
push
pushf
inc
cld
insb
outsl
test
inc
popa
inc
mov
fidivrs
test
and
mov
lcall
stos
mov
stc
or
into
inc
adc
xor
iret
push
aad
push
inc
in
pop
jbe
cmp
lds
sbb
les
stos
or
test
mov
add
push
push
test
dec
adc
test
addb
xchg
into
and
fs
test
cld
stc
pop
lds
aas
adc
daa
into
fnstsw
cmpsl
cli
sub
mov
inc
loope
fidivl
xor
cmp
mov
ljmp
pop
cmp
jl
mov
or
je
jbe
xor
enter
popf
push
outsl
add
mov
fstps
xlat
and
xor
sbb
leave
lcall
clc
pop
add
sbb
xchg
add
imul
and
aas
js
ret
jmp
dec
fldl
mov
or
test
out
jecxz
outsb
jge
pop
dec
popa
dec
out
and
fsin
outsl
and
and
mov
scas
and
mov
fisubrs
mov
xchg
testl
xchg
call
adc
mov
inc
xor
les
das
push
xchg
xchg
sbb
addb
mov
jl
inc
or
push
push
adc
data16
xchg
add
mov
bound
pop
stos
out
repz
pop
adc
hlt
pop
lret
cmp
mov
adc
xlat
test
adc
leave
jp
inc
inc
and
cmp
xor
mov
mov
cmp
jle
jmp
sbb
imul
pop
in
push
xor
or
mov
data16
and
insl
pushl
push
out
iret
inc
xchg
scas
cli
xchg
lea
in
mov
lret
cmp
push
pop
fstpl
and
jne
cld
lock
mov
cli
loop
xor
adc
lea
mov
pop
cmp
loopne
cmp
mov
xchg
pop
loop
jns
dec
jnp
mov
xor
stos
mov
xchg
lods
fcoms
arpl
mov
push
jno
repz
jne
in
je
or
adc
rcrb
adc
cmpsb
xor
les
inc
mov
sahf
inc
cmp
and
imull
in
shlb
push
jle
repnz
outsl
lock
popf
push
pop
or
sub
jmp
fwait
lcall
repz
dec
jbe
and
lret
enter
es
push
mov
inc
mov
es
mov
push
push
inc
arpl
pop
dec
cmp
add
xor
fildll
jbe
push
int
dec
ljmp
push
mov
int
fistpll
out
insb
sbb
outsb
enter
fdivp
mov
stos
sub
push
xor
mov
xchg
int3
movb
enter
addr16
mov
cmp
push
jae
pop
scas
into
pop
call
lds
call
xchg
mov
loopne
push
stc
dec
cld
cmp
sub
xor
pop
outsl
in
test
ret
mov
pop
aam
pop
aam
popf
shlb
adc
dec
imul
test
loopne
gs
lods
sub
dec
ret
sbb
arpl
sub
mov
jo
or
cli
push
inc
mov
adc
clc
xchg
mov
mov
cmpsb
adcb
stc
js
sbb
cltd
mov
push
loopne
mov
stc
cmc
fwait
jl
or
dec
xchg
push
inc
xor
aad
btcl
adc
jmp
xorl
push
pop
rcrb
jno
sbb
add
xchg
ret
push
ret
dec
pop
add
fs
imul
stos
shrl
cmp
cli
cmp
popf
add
pop
ljmp
insl
or
rorb
js
decb
aaa
xor
bound
popa
aam
out
mov
push
pop
jle
sub
and
rcl
pop
or
push
push
ja
mov
xor
cmpsb
out
pop
ret
jl
nop
push
jg
inc
mov
sub
andb
les
in
pop
test
sub
sub
xchg
xor
or
cs
xchg
xchg
cld
cmp
jle
xchg
fwait
jmp
loopne
add
add
or
inc
pushf
dec
xchg
jmp
outsb
in
mov
inc
xchg
pop
push
addr16
dec
xchg
pop
fsub
push
outsl
test
and
rorb
mov
xor
inc
test
nop
ljmp
pop
ret
xor
fsubl
mov
add
pop
pusha
push
jl
jno
sbb
cmp
jp
sub
sub
jo
popf
out
int
in
jmp
mov
sub
fwait
sub
ss
mov
or
scas
icebp
cltd
mov
jle,pn
int
sub
jnp
adc
popf
out
mov
xchg
adc
add
push
inc
idiv
int3
es
push
iret
js
fs
adc
pop
shl
test
push
mov
push
into
lds
popa
push
dec
adc
pop
or
scas
aam
test
sti
inc
jb
aaa
or
fnstcw
in
test
inc
adc
push
and
das
int3
mov
pop
mov
add
jmp
adc
scas
mov
inc
inc
enter
jp
shl
cmc
enter
das
or
cs
mov
repnz
sbb
enter
dec
sbb
pop
in
mov
movsb
cmc
sahf
inc
pop
lea
xchg
jmp
adc
or
rcrl
cmp
mov
shrb
stos
aam
insb
andl
sub
cmp
mov
fwait
dec
sbb
imul
xor
mov
frstor
jnp
mov
jmp
pop
pop
pop
mov
mov
inc
inc
jge
pop
cltd
jnp
sti
adc
clc
xor
popf
sbb
push
fnstenv
inc
mov
mov
jl
insb
cmpsl
add
pop
sbb
cmp
mov
data16
jo
mov
insb
lahf
ss
out
bound
dec
sbb
pusha
jne
sbb
cli
add
push
cmpsb
adc
lret
ret
push
jge,pt
cmp
pop
loope
fimuls
xlat
add
adc
inc
adcl
push
lcall
dec
hlt
mov
sub
pusha
inc
pop
mov
add
fnstcw
adc
lahf
leave
cmp
push
cltd
jbe
data16
push
leave
inc
fnstenv
or
jns
dec
pop
ss
push
cltd
jbe
data16
push
leave
inc
fnstenv
or
jns
dec
pop
ss
push
cltd
jbe
data16
push
leave
inc
fnstenv
or
jns
dec
negl
test
push
cltd
jbe
data16
leave
pop
xchg
cmp
xchg
loope
xchg
mov
cmpsb
int3
int3
int3
int3
int3
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
mov
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
mov
push
mov
movl
movb
movl
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
mov
movb
movb
call
mov
lea
push
movl
call
pop
pop
leave
ret
or
out
repz
jbe
or
jg
push
rcrb
xchg
arpl
jae
inc
notb
and
adc
push
repz
jbe
push
mov
ss
xchg
arpl
jae
inc
notb
and
xor
jecxz
repz
mov
push
mov
into
xchg
pop
mov
push
cmpsb
jno
push
shll
adc
jecxz
xchg
cmpsl
add
lea
jb
xorb
jmp
and
jmp
mov
mov
sar
sub
pop
jmp
fwait
inc
fisubrs
adc
inc
sbb
mov
push
testb
xor
mov
push
test
adc
inc
or
push
cld
jmp
repnz
and
pop
mov
xor
rcll
data16
xchg
arpl
jle
setns
xchg
dec
bound
push
xchg
mov
xchg
jbe
add
inc
ret
push
or
push
iret
push
ds
cs
out
notb
fcoml
adc
push
repz
sbb
push
mov
mov
ds
call
xor
mov
and
test
xchg
push
out
jecxz
seta
mov
xchg
cmp
rolb
fidivrs
outsl
ja
dec
in
inc
xchg
es
pop
adcl
pop
shll
jge
mov
xchg
mov
cmpsl
inc
iret
push
mov
xorl
arpl
jae
inc
notb
and
adc
push
repz
jbe
push
mov
ss
arpl
jae
inc
notb
and
adc
xchg
out
xor
add
ja
in
sbb
push
or
mov
pop
sbb
jl
popa
call
ds
fs
pop
pop
jl
adc
xchg
mov
rcll
and
or
pushf
ret
out
xchg
loopne
jle
mov
inc
mov
mov
cld
stos
cmc
shlb
scas
fisttpll
fs
aad
ss
mov
push
test
add
mov
arpl
enter
lods
push
sahf
cli
mov
scas
xchg
data16
xchg
insl
in
repnz
mov
mov
inc
in
lahf
jne
mov
sub
sbb
repz
out
add
adc
or
daa
adc
pop
jmp
lods
sbb
cmp
in
fsubl
sub
insb
adcl
nop
mov
fdivrs
dec
mov
sbb
inc
xchg
in
jle
loop
lods
push
xchg
andl
add
test
xchg
into
aam
adc
in
xchg
outsl
mov
push
mov
nop
cmc
jb
arpl
cld
shrd
xchg
or
cmp
or
push
mov
jge
sti
cwtl
dec
push
sub
sub
in
loope
push
aas
mov
jp
mov
fcmovnbe
gs
call
xchg
inc
jle
jmp
call
ret
xchg
leave
sarl
push
loop,pn
xor
and
mov
mov
adc
in
out
rcrl
mov
mov
jns
mov
sbb
popf
push
enter
adc
sbb
inc
jns
xor
mov
stc
lds
gs
jmp
outsl
lret
jg
outsl
dec
loopne
sti
fisttpl
into
negb
pop
dec
sub
out
nop
loope
xchg
dec
stos
cli
leave
mov
dec
fwait
int3
sahf
pop
xchg
cmp
dec
add
xchg
xor
popa
pop
and
mov
push
dec
or
out
mov
scas
xchg
jno
mov
popa
jb
scas
imul
icebp
test
mov
fmuls
mov
imul
inc
sub
xchg
mov
ret
int
mov
imul
bound
pusha
jmp
ficoml
jmp
movsb
lods
clc
mov
test
fdivrs
sbb
mov
cwtl
fwait
in
out
mulb
insb
iret
adc
das
std
cmpsb
lods
sub
outsl
jl
aad
add
xchg
xor
mov
sbb
xrelease
ret
imul
xchg
inc
lcall
cmp
sbb
rolb
inc
pushf
or
jmp
jecxz
inc
test
xchg
nop
jp
inc
mov
inc
or
stos
push
cmp
out
jmp
lods
inc
pop
test
or
lret
shlb
jecxz,pt
pop
rolb
in
movsb
cmp
iret
adc
fstpl
sbbb
push
push
push
aam
js
pop
adc
pop
mov
jo
mov
adc
es
ret
addl
enter
cld
cmp
mov
dec
ds
dec
sub
mov
mov
add
in
push
popf
lods
stc
fwait
xor
dec
std
enter
push
stos
dec
int
pop
bound
push
and
push
into
inc
movsl
stc
stos
or
bound
subl
cmpsl
movsl
sbb
xchg
std
cmp
inc
dec
push
mov
addl
fdivl
xchg
pusha
jnp
pop
sti
adc
pop
flds
jno
scas
sub
xchg
mov
cmp
std
sbb
push
jnp
xlat
loop
xchg
daa
sbb
jl
add
int3
testb
xor
fcmovnb
mov
out
inc
loopne
mov
pop
sbb
mov
fs
mov
test
jge
mov
aad
popf
es
dec
aam
mov
ss
js
bound
jnp
dec
xchg
stos
daa
es
xor
loop
lods
jmp
xchg
or
adc
daa
sbb
sti
dec
xchg
add
repz
cmp
pushf
lret
jp
sahf
mov
add
cld
dec
or
mov
sub
add
push
push
loop
dec
mov
enter
in
ja
push
imul
sbb
popa
mov
cmpsb
in
movsl
loope
mov
leave
pop
pop
push
pop
stos
insb
sub
dec
xor
clc
aaa
mov
loopne
scas
test
lret
mov
cmc
xor
pop
loop
push
push
lea
mov
push
cmpsb
push
xchg
jg
add
and
mov
add
add
dec
jmp
ss
cmpsb
push
add
addb
push
pushf
loopne
add
insb
sub
sub
loope
int
test
push
add
dec
int3
inc
shlb
and
jl
pop
xor
dec
dec
and
inc
ljmp
outsl
add
lods
fs
std
dec
aas
or
mov
movsb
ja
lcall
jmp
jle
mov
daa
sub
rorb
xchg
pop
xchg
int3
insl
cmc
mov
fistl
fmuls
or
add
and
dec
xchg
in
fwait
js
in
push
dec
xchg
test
in
iret
mov
fsubl
stos
nop
cmp
aaa
lcall
jp
lret
sbb
xor
in
and
sub
ds
popa
popf
fmuls
push
jbe
sbb
or
adc
addr16
xchg
loope
jl
mov
xor
lret
fdivs
mov
cltd
push
js
add
mov
cli
push
leave
inc
jp
stc
push
add
cmp
fimuls
pop
xor
adc
adc
aad
push
sub
adc
adc
xlat
outsl
lods
pop
jg
adc
xlat
pop
inc
jg
jle
es
or
test
jno
sub
pop
push
js
pushf
test
cmc
mov
cmp
test
xchg
pop
cmp
pop
rorl
lret
xchg
ds
adc
popf
mov
mov
call
test
sbb
nop
incb
repz
pop
mov
bound
dec
add
leave
inc
mov
ret
lcall
fidivs
enter
mov
pop
adc
pop
fcmovnbe
mov
pop
push
ss
xchg
enter
or
stc
outsl
sbb
or
setg
icebp
in
mov
rcll
das
jno
adc
cs
int3
clc
dec
add
push
xor
pop
pop
and
ja
pop
mov
sub
es
iret
push
incb
lret
cmpsl
sbbl
and
mov
add
jno
mov
repz
xlat
addl
hlt
shlb
incb
ja
lret
les
shrl
add
shrb
xchg
cmpsl
std
jmp
push
loop
sub
pop
inc
aad
dec
sbb
mov
mov
lahf
int3
pop
mov
outsb
pop
imul
mov
push
dec
hlt
rolb
movsb
push
int3
jg
push
loopw
push
hlt
ret
js
push
jl
jns
xor
push
xchg
mov
dec
mov
cmpsb
scas
rolb
loope
ret
xlat
movsb
jle
in
adc
dec
jns
xor
sti
icebp
insl
jge
or
xchg
lods
sub
push
xchg
xor
imul
adc
sti
pop
stos
mov
push
stos
outsl
es
mov
je
cwtl
and
lret
out
test
ret
imull
imul
roll
lock
imul
push
rclb
fimull
xchg
fwait
or
addr16
or
popf
and
dec
movsb
movsb
movsb
mov
push
inc
testl
fsubs
xor
mov
pop
fisttpll
pop
mov
data16
cld
mov
test
and
push
ret
mov
in
lret
icebp
and
sar
jl
insl
or
sbb
jbe
testb
jnp
call
es
pop
push
js
lds
mov
out
mov
push
movsb
pop
pop
and
repnz
pmulhuw
aaa
js
mov
movsl
cld
pop
inc
add
and
imul
inc
push
sti
sub
aad
gs
movsb
xor
stos
data16
jecxz
enter
adc
jmp
pusha
imul
mov
and
xor
dec
int3
lret
push
fistl
pop
push
sub
xchg
cmpsb
ficompl
shlb
shrl
rorb
xchg
ljmp
push
ret
pop
ror
xor
mov
or
sbb
add
or
adc
in
inc
xchg
add
push
into
xor
addr16
mov
data16
sbb
add
or
call
xor
pop
jae
dec
pop
pop
jmp
lret
shrb
mov
mov
mov
adc
or
mov
scas
sti
pop
out
push
pop
jmp
xchg
fmull
jb
sbbl
hlt
mov
sbb
cmp
lock
push
arpl
cmpb
xchg
pushf
mulb
inc
sbb
daa
cmp
jg
ret
cmp
lods
and
out
add
sub
and
enter
scas
pushl
add
sub
aaa
fistps
lods
std
insl
mov
dec
inc
dec
sbbb
inc
sub
daa
loope
adc
pop
repnz
std
repz
xor
fiaddl
call
cwtl
out
movsb
jbe
sub
imul
mov
sub
xor
imul
mov
insl
xchg
ljmp
inc
cmp
lcall
push
mov
jno
cmp
add
xchg
inc
lods
or
cmp
jge
fsubr
push
sbb
xor
ljmp
cltd
fcmovbe
adc
dec
xchg
rcrl
out
hlt
sbb
mov
test
inc
pop
repnz
xor
pusha
or
sarb
jbe
data16
cld
imul
fcoms
mov
lods
sub
shlb
gs
scas
dec
ficomps
dec
loope
gs
sti
fwait
std
or
add
out
cmpsl
shll
xor
lcall
les
mov
pop
add
inc
jge
fidivl
cmpsl
ja
repz
pop
push
pop
in
insl
subl
mov
mov
into
lret
inc
insb
test
int
ljmp
mull
and
cmc
mov
js
leave
push
ljmp
movsl
ja
gs
cmp
aas
xor
or
push
adc
mov
add
push
ficomps
and
mov
daa
inc
and
cwtl
stos
clc
insl
add
xchg
std
mov
mov
jb
mov
repz
ss
and
mov
inc
and
mov
push
popa
stc
lahf
inc
mov
sti
ss
push
inc
cmp
xor
mov
adc
sub
inc
push
add
cmp
and
jg
ss
pop
inc
in
sub
sub
pop
inc
or
fwait
and
dec
xchg
sub
mov
imul
add
sbb
test
int
mov
jmp
xor
inc
stos
mov
ret
shrl
and
fmulp
xor
mov
push
je
mov
push
jecxz
sbb
cmc
mov
jno
or
dec
jmp
cmpb
mov
sub
add
push
scas
pop
jmp
mov
enter
movsb
pop
pop
aad
sbb
cmp
ljmp
mov
lahf
mov
fs
cmp
sbb
pop
pop
and
cmp
jmp
adc
jns
mov
push
popa
add
xor
pop
add
rcll
stos
or
push
push
popf
fwait
jo
ljmp
jno
pop
mov
xchg
pop
mov
ss
popl
xchg
jge
mov
in
popf
popf
je
lret
das
inc
cld
test
pushf
dec
and
out
pop
jns
lods
shrb
cmp
xor
jg
inc
lret
xor
add
popa
cmp
jne
cmpsb
push
jmp
mov
push
pop
frstor
outsl
cs
inc
push
pushl
cmpsl
xor
ds
iret
adc
dec
pushf
cmpsl
loop
sub
imul
outsl
pop
inc
fcomps
push
popf
xchg
xchg
jno
leave
push
out
sub
adc
fdivl
aaa
lock
jo
loope
and
push
scas
adc
add
subl
pop
es
ljmp
xchg
jle
ficomps
loop
pusha
gs
cmp
adc
add
fldt
pop
mov
jo
decl
and
sti
test
xchg
mov
jp
stos
xor
or
popa
call
xchg
xchg
in
les
mov
out
xchg
mov
enter
jecxz
add
loop
int3
xor
jmp
mov
sbb
add
cwtl
int
jnp
sahf
mov
cmpsb
cld
fwait
shll
stos
cmp
cmpsl
in
std
fidivl
out
in
nop
jle
mov
cwtl
imul
mov
ret
xor
gs
or
sbb
cmp
mov
dec
inc
pushf
and
lret
fs
loopne
mov
xchg
sbb
mov
stos
fidivl
es
addr16
insb
icebp
mov
sbb
dec
sub
das
or
xchg
adc
push
add
add
mov
mov
orl
cmc
gs
and
mov
sbb
add
xchg
inc
xor
or
fucom
repz
or
int3
ss
notb
cmp
into
push
stos
and
dec
mov
or
mov
adc
lcall
cmp
cmpsl
mov
jns
lds
or
dec
sub
adc
vprotb
xchg
mov
dec
mov
push
xor
ss
sub
jno
mov
sbb
stos
shrl
cmp
mov
xchg
mov
mov
rorb
sbb
jns
inc
jae
inc
or
sbb
gs
mov
int3
cwtl
pop
shll
insl
aad
imul
lock
cmp
int3
int
out
inc
ds
aad
js
or
mov
fldt
ja
icebp
sub
test
jbe
enter
bound
in
icebp
xor
sbbl
addr16
xchg
dec
in
inc
out
pop
pop
and
int3
ds
push
adc
mov
test
loopne
clc
stos
movlps
mov
adcl
inc
and
push
mov
out
flds
aaa
sub
jno
int
and
rcr
out
lds
cli
and
jb
adc
and
pushf
pop
fcmovnb
jecxz
add
inc
imull
insb
mov
cld
push
dec
push
bound
int3
or
test
jecxz
mov
test
js
loop
in
mov
fsts
xchg
mov
mov
inc
push
jmp
sarl
ja
add
in
mov
shrd
and
popf
icebp
loop
jp
mov
aaa
pop
sahf
adc
test
cmp
je
mov
sub
xor
in
clc
pop
jg
cmpsl
mov
mov
jnp
cmp
and
push
lods
inc
aad
pushf
repz
test
int
in
popa
mov
inc
xchg
ljmp
jecxz
hlt
popf
dec
aad
call
mov
lret
mov
mov
cmp
mov
adcb
adc
in
pop
mov
xchg
mov
pop
mov
add
xchg
pop
inc
in
out
pop
int
data16
fwait
addb
popf
inc
mov
lea
xor
imul
sbb
lea
pop
and
jo
pusha
push
fidivrs
jbe
test
ret
cmp
push
adc
lret
push
lock
jo
enter
daa
pop
mov
cmp
sbb
jae
mov
cmp
push
adc
add
fcmovnbe
mov
adcl
das
dec
insl
jecxz
fistpll
ss
xor
and
add
dec
pop
sbb
pop
xor
fldl
cmp
cmp
fwait
inc
mov
loopne
pop
push
vdivss
movsl
test
jb
lahf
sub
rcl
add
fcmovnbe
fildll
sub
jns
shl
and
xchg
les
and
call
fisttps
adc
dec
fbld
mov
shrl
xchg
xchg
jbe
sub
enter
xor
sub
mov
daa
enter
add
shrb
outsl
inc
hlt
mov
pop
rorb
jno
inc
jb
outsb
rsqrtps
mov
cmp
stc
pop
rol
mov
jg
popa
das
outsb
loopne
jns
jmp
es
es
xchg
jp
insb
cld
fsubrs
leave
cmpsl
data16
sbb
dec
gs
jecxz
cmc
lcall
xchg
mov
in
push
sbb
push
cli
js
jmp
jmp
push
sbb
sub
popf
sub
sbb
add
adc
lods
stos
sahf
add
inc
lahf
inc
cmp
rcll
mov
sbb
or
xchg
insl
mov
into
inc
jg
ret
sbb
leave
mov
pop
sahf
jg
or
add
inc
cmp
movsl
mov
out
push
lahf
sub
leave
movsl
into
es
out
addr16
xor
lahf
adc
into
scas
jnp
dec
sbb
rclb
pop
and
inc
sarb
mov
pop
ss
and
aaa
repnz
or
ficoms
jp
stos
xor
setns
das
insb
fcmovnbe
fcmovb
aas
mov
and
rcll
lahf
adc
fs
test
test
mov
and
jae
stos
sub
sub
add
and
nop
call
mov
push
push
pop
addr16
mov
ja
push
rcl
std
mov
jmp
mov
jmp
int
inc
pop
cltd
xchg
and
push
ds
mov
cmp
in
add
sub
int
scas
mov
call
dec
push
adc
mov
adc
popa
sub
add
test
xchg
mov
lcall
pushf
lret
sub
mov
push
xchg
dec
dec
dec
dec
aaa
inc
xchg
xorl
or
insb
sahf
ja
insb
in
icebp
or
fmull
dec
mov
or
pop
rcll
imul
sub
fimuls
push
mov
mov
stos
adc
dec
cmp
mov
movsl
icebp
mov
xchg
std
dec
sbb
test
push
inc
std
icebp
sub
mov
imul
lock
imul
xchg
pop
cld
idivb
aaa
stc
sub
popf
lods
jecxz
mov
pop
ret
push
fs
pop
cmp
adc
jne
out
adc
rcr
jno
adc
inc
dec
out
sbb
and
and
or
or
fmul
cli
insb
jp
ss
mov
repnz
mov
mov
aaa
arpl
xlat
int
stos
repnz
mov
int
xchg
into
cli
test
jns
repz
fldenv
mov
jo
jne
sub
insl
xchg
jecxz
pop
mov
loope
popa
dec
enter
push
push
in
adc
mov
xchg
shl
xchg
pusha
test
or
sub
mov
pushf
in
and
bnd
roll
mov
cli
mov
jl
xchg
outsl
or
dec
inc
outsl
mov
fiadds
xchg
dec
jae
testb
adc
and
xor
add
dec
push
orb
jae
jmp
mov
mov
mov
xchg
sbb
pop
test
mov
add
sub
pop
push
pop
clc
or
mov
or
inc
mov
cmpsl
in
aam
pop
test
pop
or
jo
rcr
or
das
xchg
cmp
pop
xchg
push
bndldx
enter
movsl
adc
inc
lcall
lahf
fists
dec
push
mov
mov
push
into
mov
daa
bound
das
xor
dec
dec
data16
aad
mov
mov
pop
pop
mov
cltd
aaa
and
push
push
out
xchg
lock
push
jge
cld
sub
cmp
or
orl
cld
and
push
xchg
or
movsb
push
mov
shll
mul
fwait
sub
lock
dec
js
inc
fs
and
or
aam
sbb
and
jno
out
mov
arpl
push
std
ficompl
push
mov
and
mov
es
test
outsb
imul
inc
adc
shlb
dec
stc
jno
pop
lods
dec
sub
sub
dec
pop
cmc
xchg
mov
loopne
out
and
nop
adc
or
dec
mov
inc
pushf
test
and
dec
pop
xchg
outsb
mov
mov
fcoms
repnz
and
ret
ja
loope
mov
out
adc
jb
and
dec
es
add
push
stc
cmp
gs
lds
and
in
sub
mov
xchg
adc
lret
push
loopne
stos
pushf
cli
push
popl
data16
ss
add
addr16
enter
cmp
bnd
sub
mov
in
incb
loop
and
xchg
repnz
jecxz
imul
clc
push
xor
xor
pop
in
and
ss
pop
push
or
sub
imul
xchg
push
ds
pop
fisttpl
lods
pop
das
gs
cmp
adc
adc
out
pop
mov
sub
adc
adc
adc
out
jnp
xor
jb
out
lcall
cmc
cmp
cmpl
add
mov
stc
std
push
and
inc
lock
addr16
xor
pop
fistpll
imul
add
cmp
inc
icebp
and
push
jne
adc
pop
pop
sbb
shrl
lahf
sti
mov
sbb
leave
scas
cmp
nop
pop
xchg
call
dec
lcall
cmpsb
mov
test
adc
or
jle
addr16
inc
mov
cmp
adc
sbb
xchg
test
lods
cmp
push
cmc
sub
pop
testb
or
loope
ja
mov
fadds
cltd
mov
adc
mov
popa
je
sbb
push
xor
jo
xchg
cmpsl
ja
js
cmp
nop
adc
sets
or
jae
push
stos
ret
testl
lock
pop
loopne
jnp
jg
imul
xor
ss
mov
test
fstps
pop
sub
mov
mov
adc
pop
pop
in
insb
enter
pop
xchg
imul
and
imul
cmp
adc
push
push
mov
ss
arpl
jae
inc
notb
and
adc
push
repz
jbe
push
mov
ss
arpl
jae
inc
notb
and
adc
push
repz
jbe
pop
mov
aaa
xchg
ret
jb
inc
repnz
xchg
xor
jecxz
repz
ret
pop
xlat
push
mov
mov
pushf
sub
dec
inc
mulb
stos
push
int3
pop
cld
dec
in
int3
int3
int3
int3
int3
inc
or
je
or
push
xchg
jbe
push
inc
hlt
inc
test
xchg
movsb
push
mov
inc
notb
je
add
adc
and
xor
les
nop
jbe
inc
test
movsb
push
mov
inc
out
push
out
into
je
add
adc
and
xor
les
fiaddl
ja
dec
ljmp
pop
mov
adc
scas
or
inc
push
std
push
in
sub
cmpsl
adc
fldl
iret
stos
call
cmp
cmp
ret
idiv
mov
jno
jnp
xorl
or
popa
lods
mov
mov
pop
loop
push
repz
ret
and
sbb
push
add
cmc
testb
data16
pop
jns
les
jp
cld
fldenv
and
push
sub
xchg
pop
pop
and
sti
sub
adc
or
stos
inc
push
mov
push
and
xchg
or
fldt
jb
inc
mov
mov
jmp
push
icebp
fs
je
add
adc
and
xor
les
jle
dec
hlt
pop
test
xchg
xor
cmp
push
cli
jne
test
rcrb
xchg
cwtl
sub
pop
std
jne
push
loopne
inc
mov
out
cmpsb
adc
inc
lds
and
xor
mov
and
dec
jp
arpl
mov
mov
ficoml
and
xor
les
data16
hlt
inc
test
xchg
movsb
push
mov
inc
notb
je
add
adc
and
xor
les
data16
hlt
inc
test
xchg
movsb
push
mov
inc
div
popa
fcomip
push
aad
mov
cs
lahf
and
and
dec
cmp
stos
ficompl
movsb
sub
cld
in
lret
xchg
mov
bound
push
int3
push
cli
shl
or
insb
cmpsl
fs
cs
xor
imul
sti
cli
lcall
addb
push
cmp
push
lods
ret
sub
shrb
mov
xchg
in
ret
adc
mov
adc
or
jge
into
sub
sbb
inc
imull
jge
adcl
inc
or
repnz
xchg
stos
xchg
xor
inc
sub
pop
mov
into
xor
fs
ja
idivb
sbb
and
push
dec
pop
pop
pop
test
xor
out
rcl
sub
pop
in
dec
sbb
pop
sub
add
xor
push
or
mov
or
jb
sahf
adc
fildll
sbb
or
or
push
into
test
pop
out
mov
sub
arpl
addl
xor
repz
push
repz
fsubrp
mov
loope
pop
mov
test
into
arpl
cwtl
jo
xor
jae
cmp
add
jp
daa
enter
xchg
pushf
cmpsl
push
dec
cmpsl
jp
xchg
nop
xor
shrb
xor
add
fstpt
jnp
out
mov
or
scas
xchg
int
ret
outsb
cmp
jo
mov
adc
lods
push
mov
mov
pop
test
out
lods
or
aas
jo
sub
add
in
ja
les
xchg
fs
mov
mov
jno
inc
push
test
dec
sti
jmp
or
adc
clc
push
mov
push
jecxz
mov
push
mov
dec
cmp
xlat
xchg
pop
jb
mov
cmp
nop
inc
lea
xchg
loop
xlat
jne
addr16
cmp
stc
outsl
enter
cmc
out
xor
xlat
pop
dec
mov
faddl
movsb
pop
push
out
inc
ds
jo
mov
aad
in
and
outsb
insb
pop
in
mov
pop
push
jae
in
cmp
sbb
icebp
add
jmp
xchg
stos
loop
in
jp
js
push
int
sub
mov
mov
test
fdiv
loope
mov
arpl
xor
jb
mov
movsl
add
push
lock
faddl
daa
mov
pop
mov
aam
add
pushf
jae
int3
dec
mov
shll
dec
inc
lea
jl
add
dec
loop
jle
jge
int3
adc
and
push
dec
fsubrl
andb
lods
jb
xchg
cwtl
mov
adc
dec
jmp
pushw
in
sub
inc
jge
icebp
out
cmp
push
adc
adc
mov
stos
or
cs
fstps
inc
rcrb
jmp
pop
push
cli
leave
dec
mov
adc
cmp
repnz
ret
mov
jmp
pop
lret
sbb
pusha
sub
aas
test
xchg
push
scas
pop
push
cmp
imul
jle
loope
test
cmp
jg
in
aad
inc
fs
lds
test
sbb
inc
add
loopne
jno
push
outsl
mov
daa
sarl
test
cmp
mov
jns
jl
jo
xchg
inc
add
add
aas
popf
mov
xchg
push
dec
adc
fwait
or
or
jb
pop
adcl
adc
lcall
and
aaa
ljmp
and
pushf
insl
dec
mov
fs
mov
jae
push
pop
mov
pop
ret
in
mov
push
push
jmp
xchg
sub
dec
sbb
sbb
mov
mov
push
dec
fidivrs
rorl
call
lret
imul
mov
mov
iret
mov
gs
xchg
mov
mov
mov
lds
retw
rclb
xor
mov
jp
std
incb
or
lea
sbbl
lods
xchg
xchg
loope
shrb
push
sub
testl
in
or
mov
mov
call
sub
cwtl
inc
ljmp
xchg
jns
inc
ja
insb
int3
fdivr
add
cltd
out
cwtl
or
mov
fst
call
xchg
cwtl
aam
push
xchg
fwait
test
je
cli
mov
push
sbb
int
pop
out
fimuls
jge
add
add
push
shrl
aas
dec
call
cmp
cli
push
ja
aad
and
cwtl
test
icebp
lcall
rolb
dec
shll
aam
xlat
mov
ljmp
fwait
out
dec
lret
lcall
fcmovnbe
fstpl
je
lods
aaa
inc
add
gs
sarb
cmc
subb
pusha
jle
nop
aam
fsts
popa
pushf
iret
aaa
pop
push
inc
mov
scas
stc
or
pop
mov
mov
aam
aad
insl
imul
mov
sub
sub
mov
sub
jbe
call
sub
xlat
inc
push
mov
je
adc
xor
outsb
cmpsb
outsb
xlat
adc
adc
push
dec
mov
lcall
jae
inc
lahf
jl
mov
mov
xor
mov
add
es
cmp
push
les
jl
inc
loop
inc
scas
mov
out
sbb
push
ret
pop
cmc
lahf
icebp
xchg
in
inc
jecxz
sub
scas
or
sub
sbb
jne
push
and
ret
jno
addb
jno
mov
push
insl
pop
xchg
push
jg
daa
push
jecxz
test
xor
cmp
add
fwait
ljmp
into
xchg
cmp
dec
mov
inc
pop
shrl
pop
or
enter
movsb
inc
jne
fs
test
testl
dec
faddl
add
pop
aam
fwait
imul
xor
pcmpeqw
ds
jle
sub
mov
ret
lret
xor
sbb
and
insb
and
adc
add
in
pop
jge
rcl
push
pushf
mov
jae
lea
xor
sub
gs
scas
pop
sbb
movb
add
mov
jno
xchg
lods
repz
xor
js
push
stos
add
ret
jno
mov
xor
cmpsb
imul
or
imull
jmp
faddp
sub
mov
add
push
pop
cld
dec
bnd
mov
fsubrs
movsl
sbb
shl
loopne
jns
addr16
loope
xchg
jne
sub
ss
jg
incb
fmull
js
xchg
enter
add
cmp
lods
loop
pop
test
cmp
add
insl
popf
cmp
push
jl
pop
gs
sbbl
rclb
test
xchg
cwtl
mov
fs
lock
lea
dec
es
add
mov
out
lret
mov
and
test
popf
les
jb
adc
je
dec
rorl
sahf
pop
ret
int
into
icebp
fs
packuswb
gs
jge
cwtl
inc
xchg
insl
call
jnp
enter
cltd
je
jle
adc
outsb
jg
mov
movsb
mov
stos
push
out
lahf
ljmp
dec
lret
xor
ja
jno
pop
dec
and
and
es
sbb
pop
pop
mov
pop
dec
add
inc
jp
and
dec
mov
push
cltd
shll
sub
cwtl
sarb
inc
xor
mov
loopne
fwait
fidivs
test
data16
mov
mov
add
shr
js
data16
sarl
in
cmpsb
jae
pop
adc
pop
std
jne
movsbl
xchg
rorb
mov
mov
ficoms
das
pop
mov
xor
cmp
out
inc
in
shlb
xor
cmp
ja
into
mov
nop
stos
idivl
jb
sarb
stos
mov
das
jae
xchg
jns
adc
push
cmpsl
mov
ss
dec
out
aad
addr16
pop
push
jmp
mov
inc
lods
ja
iret
mov
andb
das
arpl
inc
rol
iret
add
mov
pusha
push
out
test
mov
test
out
outsb
ljmp
js
mov
sbb
mov
jb
sub
pop
mov
fs
cld
or
out
jo
adc
sub
pop
div
cmpsl
dec
ret
aam
je
loopne
pop
push
mov
xor
sub
adc
jns
sar
adc
push
mov
jb
xchg
jg
fbld
push
jo
mov
inc
loopne
push
jl
xor
or
icebp
mov
nop
push
mov
das
fmul
dec
out
mov
xor
testb
inc
cwtl
adc
aaa
push
call
and
jle
sub
adc
push
imul
in
das
mov
xchg
xchg
out
ret
sahf
sub
pop
sbb
mov
and
inc
out
arpl
xor
in
jo
mov
data16
or
mov
push
jnp
je
hlt
gs
or
fists
sbb
mov
mov
icebp
sbbl
mov
inc
jo
lods
cs
bound
adc
aas
xchg
es
lea
dec
lea
lds
add
loope
pop
mov
js
xor
std
lock
jge
push
mov
scas
mov
or
cmp
call
ficoms
pop
insl
pop
fstpl
fcmovnb
xchg
mov
mov
sbb
sti
icebp
nop
or
aaa
or
popa
out
push
es
push
ret
jnp
testb
sbb
mov
xchg
mov
xchg
jo
pop
pop
sbb
sub
add
cmp
cmp
in
int
jecxz
xor
cmp
rorb
adc
icebp
push
adc
xchg
lods
jle
js
cli
push
nop
jo
mov
dec
xchg
dec
in
pop
jno
in
mov
cmp
xor
mov
cmpsl
push
fstps
test
jecxz
out
lods
dec
inc
out
and
stc
or
enter
sbb
add
repnz
scas
jae
sub
sbb
or
xchg
mov
mov
rol
fcomip
push
loope
pop
notb
lcall
icebp
mov
imul
mov
pop
cmc
add
icebp
cmp
inc
push
jne
call
lock
sbb
sbb
inc
or
sub
inc
xchg
imul
pop
sbb
std
ja
and
jecxz
jge
dec
repz
push
sub
aam
outsb
push
aad
xchg
cmp
loopne
sub
xchg
xchg
mov
sahf
mov
imul
sbb
add
push
daa
divw
test
iret
mov
dec
rclb
and
sarl
aad
xor
xchg
ret
mov
pop
sbbl
xor
aad
nopl
pop
xor
leave
lods
sub
je
cmp
jmp
inc
push
or
outsl
mov
xchg
pop
shr
add
fistps
pop
pop
xor
fisttps
leave
xchg
sti
cmp
es
or
stc
mov
lahf
xor
lret
shll
nop
add
cli
fidivrl
mov
aad
arpl
mov
data16
gs
mov
and
jnp
int
repz
loop
jns
shlb
int
filds
leave
jge
jae
fmul
js
loopne
loopne
inc
data16
mov
sbb
imul
aad
xchg
arpl
out
ja
jge
divb
pop
sbb
addr16
jbe
lahf
mov
lret
insl
jns
cld
lock
and
adc
out
jns
fnstcw
enter
pop
jle
or
xor
jmp
sbb
xchg
pop
jl
mov
add
sub
xchg
xlat
sub
repz
stos
sub
sar
mov
js
movsb
and
push
loopne
mov
popf
lods
pop
inc
or
and
cmp
cld
orb
test
inc
xchg
adc
cmp
repz
cmc
shrl
mov
hlt
lods
sub
push
imul
pop
in
jl
ret
aad
or
sub
mov
pop
rorb
adc
les
sti
cmpsl
in
lret
xor
dec
scas
xor
dec
lods
xlat
add
xchg
pop
and
mov
sbb
mov
sub
ror
lahf
rolb
sbb
pushf
and
lods
leave
sub
clc
bound
add
fldcw
pusha
fsubrs
mov
jg
cmp
mov
push
fcom
push
pop
pop
mov
and
lock
jno
clc
xchg
sbb
adc
sbb
pop
loopne
inc
add
xor
insb
adc
pop
arpl
cmp
jne
sub
loope
jbe
cmc
in
mov
jb
mov
lea
stos
xchg
jne
mov
je
jge
add
adc
cmc
xor
jg
sub
into
mov
push
js
lcall
ret
mov
inc
jno
ret
pcmpgtd
stc
sub
push
push
fmul
stc
ljmp
jo
std
insl
xchg
cmpsb
imul
push
out
or
lods
fs
popa
cmp
jbe
mov
popf
push
std
mov
jg
add
seto
addr16
ffreep
pop
bound
cmpsl
xchg
pushf
jns
mov
les
cmp
in
inc
add
scas
adc
xchg
clc
and
cmp
das
lcall
or
mul
insb
add
mov
cmp
and
mov
cmp
int3
out
jno
xchg
pop
mov
pop
aas
pop
dec
je
scas
xlat
insl
dec
add
in
mov
dec
adcb
out
gs
jnp
loopne
lcall
inc
mov
cmpsl
call
sub
dec
loop
fwait
cmpl
popl
mov
in
jle
fbld
cmp
loope
arpl
push
faddp
inc
fcomps
and
cmpsl
rep
cs
enter
popf
sbb
cmp
xlat
push
imul
lcall
outsl
dec
insb
shll
adc
add
xchg
or
stc
adc
sar
icebp
and
gs
mov
ljmp
push
mov
jmp
insb
cmp
dec
iret
or
add
xor
sbb
adc
xor
in
mov
lods
lds
xchg
xor
ss
out
dec
std
sbb
push
rolb
clc
sbbl
rcrb
test
mov
push
dec
xchg
and
test
das
adc
ret
or
jns
mov
adc
push
xor
daa
hlt
mov
xorb
in
iret
mov
jmp
jle
dec
ret
or
jl
lret
jp
xchg
push
cmp
mov
push
jns
pop
pushf
sbb
lret
icebp
testb
cmpsb
cmpsb
ja
fistps
fucompp
xor
pop
int3
push
mov
dec
sub
js
fcmovnu
movsb
data16
cmc
dec
andl
mov
lock
cmpsl
adcl
adc
mov
fldt
add
xchg
lcall
mov
bound
les
mov
scas
in
js
mov
cmpsb
shlb
je
mov
out
jp
dec
xchg
pop
dec
dec
daa
mov
loopne
xlat
mov
imul
lcall
inc
xchg
and
mov
cmp
loop
dec
sbb
jecxz
cmp
addb
cwtl
xchg
aas
int3
cmp
movsb
ret
addb
call
add
andb
push
xchg
popf
sbbb
dec
mov
xchg
cmp
insl
lods
cwtl
je
cmpsb
das
in
or
pop
test
adc
xor
fimull
nop
mov
cld
adc
outsb
sbb
fidivrs
and
dec
aaa
push
mov
iret
jno
push
sahf
lds
dec
adc
aam
icebp
divb
in
clc
pop
in
sub
mov
sahf
rep
dec
cmc
lcall
insb
shll
inc
les
mov
lds
cwtl
cmp
mov
mov
mov
vpshab
inc
dec
fmuls
mulb
aad
fstpt
add
push
into
mov
fisubrl
ret
sub
add
int
xor
fidivrs
jg
xchg
test
add
mov
push
sbb
loopne
repz
mov
cmp
int
fst
hlt
mov
xchg
test
cmp
test
xor
xchg
xor
mov
add
nop
shl
mov
imul
mov
sbb
push
adc
push
stc
mov
ss
ucomiss
je
push
loope
clc
dec
push
add
adc
dec
pushf
mov
in
jp
jmp
mov
std
sbb
invd
add
popa
lods
mov
dec
or
in
inc
pusha
clc
fisubl
xchg
or
loopne
lds
rcrb
add
mov
lock
xor
fisubrs
mov
cmp
data16
int3
mov
test
out
and
adc
int3
xchg
mov
push
jns
ss
aas
shrb
pop
mov
push
xor
add
scas
mov
andl
push
push
test
and
pop
ret
shl
int
add
add
pop
jo
ss
mov
mov
pop
in
add
cmpsb
bound
inc
je
sub
fcmovu
fstpt
inc
test
xchg
bound
inc
xchg
stos
mov
repnz
inc
xchg
subb
pop
movsl
add
push
loop
loop
pushf
in
sub
sahf
ret
scas
add
inc
or
fwait
jle
xchg
nop
pop
inc
lahf
mov
pusha
shrd
les
jg
gs
scas
out
int3
jbe
sub
out
out
shl
xor
sub
aam
orl
pop
sahf
mov
stos
shll
jle
daa
adc
ret
pop
mov
and
insl
xchg
andl
push
rcl
iret
dec
cmp
jo
pop
cld
test
and
imul
pop
push
jns
mov
addl
cmc
pop
insb
xlat
enter
cmp
imul
mov
jns,pn
jecxz
aad
xor
fnstcw
jmp
rcrb
dec
imul
and
mov
jge
sti
cltd
xchg
jbe
daa
adc
stos
or
fstps
mov
icebp
arpl
pop
mul
pop
adc
or
sub
out
cmp
fdiv
data16
push
xor
xor
stos
sahf
bound
xchg
mov
arpl
jg
mov
pop
jo
cmp
inc
push
inc
sar
dec
mov
xchg
adc
fnstcw
or
adc
int3
mov
mov
cmp
das
sub
lret
inc
ljmp
insb
jge
xor
imul
mov
aam
sbb
jb
andl
loopne
or
sub
sub
pop
sub
pop
jle
pop
dec
jg
addr16
imul
das
push
fstl
inc
push
das
inc
ss
push
adc
push
dec
xor
xchg
cmp
scas
mov
mov
and
cmpsb
cmp
test
insb
cmp
pop
or
sarl
enter
pop
push
push
inc
adcl
leave
xor
add
mov
mov
mov
ja
jns
push
mov
ds
sbbl
pop
lods
addr16
movsl
icebp
sub
ficompl
in
xchg
movsl
xchg
mov
jge
mov
inc
sbb
cmp
push
test
adc
sysret
aad
cmpsb
sbb
cmpsb
sbb
imul
jnp
jg
mov
inc
jnp
insl
pop
imul
rcr
loop,pn
pop
stos
icebp
arpl
cmp
rcrl
int
xor
adc
pop
clc
test
mov
mov
outsb
jbe
jnp
incl
sar
mov
idiv
push
int3
mov
fistl
xchg
jle
std
xchg
arpl
ds
xor
dec
dec
dec
adc
and
pop
mov
popa
ja
push
adc
mov
into
ljmp
ret
dec
cmp
inc
ret
mov
push
pop
testb
jne
fs
mov
mov
sbb
adc
cltd
pop
xorb
mov
dec
into
loop
pop
mov
sbb
add
push
movsl
lea
idiv
stos
xchg
pop
pop
sbb
fidivrs
aas
pop
test
fdivrs
ss
fistpll
sub
fs
pop
rol
or
test
jae
fstps
and
addr16
fstpt
rol
popf
push
jle
inc
cld
push
repz
dec
orl
mov
push
adc
mov
mov
cmp
test
mov
cmpsb
adc
jae
cwtl
inc
sbb
push
and
or
dec
pop
cmpsb
les
or
rorb
addb
add
pop
mov
roll
mov
adc
cli
int3
ret
fdivrs
repnz
pusha
dec
shll
sub
pusha
push
jmp
or
arpl
imulb
loope
popa
insb
pop
jg
jmp
out
push
or
xor
adc
insl
add
mov
mov
cltd
rorb
inc
js
xchg
xchg
sahf
dec
push
in
daa
xchg
sahf
mov
or
xor
and
std
test
sbb
subb
push
mov
repnz
add
push
cs
outsb
in
sarb
add
imul
push
sub
pop
jns
sbb
popf
pop
mov
fldt
or
dec
xorl
add
mov
addr16
test
jmp
mov
sbb
jno
cld
std
shrl
xchg
movsl
push
sub
sub
cmp
sbb
aam
or
mov
inc
and
pop
cld
mov
shll
push
adc
push
sahf
jg
mov
fildl
lea
pop
adc
mov
and
push
dec
mov
cmpsb
es
incl
xchg
pop
push
mov
pop
clc
or
cmp
and
add
out
loope
out
rolb
imul
cs
ror
and
push
jge
xchg
pop
test
fidivs
xchg
ficompl
popa
outsb
das
insb
gs
mov
loop
fldcw
pushf
jae
mov
repz
sbb
dec
in
mov
fwait
adc
jmp
or
aaa
push
and
cmp
push
jnp
jne
xor
in
lods
out
cmp
mov
cmpsb
and
xor
les
data16
hlt
inc
test
xchg
movsb
push
mov
inc
notb
je
add
adc
and
xor
les
data16
hlt
inc
test
xchg
movsb
push
mov
inc
notb
je
add
adc
and
xor
les
data16
hlt
inc
test
xchg
movsb
pop
mov
inc
notb
je
add
adc
and
xor
les
int3
dec
push
hlt
xor
mov
dec
stc
int3
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
or
sub
xchg
and
loope
lds
xchg
fimull
ljmp
inc
sub
dec
adc
adc
xor
push
mov
lcall
out
xchg
mov
movsb
or
pop
sub
dec
or
jp
mov
mov
xchg
lret
lock
xchg
lret
push
sbb
sub
push
add
xlat
or
push
push
mov
lock
mov
mov
push
xchg
into
jbe
lds
lret
xchg
ja
pop
cmp
inc
sbb
inc
ja
pop
enter
inc
dec
cmp
lahf
das
das
loope
and
mov
into
les
xor
loope
or
mov
insl
adc
adc
inc
jp
pop
xor
cmp
imul
sar
mov
adc
pop
jno
cmp
dec
bound
int3
cmp
or
pop
cltd
xchg
and
and
stos
in
jmp
sahf
test
out
jp
fnstsw
sbb
mov
mov
sub
fs
adc
add
xor
cmp
stos
in
mov
pushf
ljmp
ss
adc
dec
push
sub
pop
js
mov
ret
icebp
fiaddl
outsl
cmp
push
or
pop
dec
adc
push
out
mov
mov
test
push
sbb
push
and
daa
pop
add
xor
and
aam
les
xchg
fiaddl
push
sbb
cmp
pop
add
xor
and
aam
les
xchg
fiaddl
push
aas
push
mov
adc
jmp
in
push
pop
mov
fildl
xchg
int
in
leave
scas
jnp
je
mov
dec
push
add
mov
jns
or
push
pop
add
and
and
cltd
sub
shrl
xchg
jns
pop
adc
push
mov
test
pusha
outsb
in
test
das
mov
mov
xor
xchg
jno
aad
iret
ss
mov
pop
addr16
lods
dec
mov
leave
into
bt
nop
sbb
arpl
data16
sbb
adc
push
sub
sub
mov
push
mov
addr16
jae
les
aas
lods
insl
hlt
mov
std
es
popa
fsubp
or
adc
fldpi
jecxz
out
mov
popf
mov
inc
inc
sbb
faddl
adc
jg
mov
and
inc
cmp
add
sbb
mov
dec
push
call
movsl
dec
rolb
scas
xchg
pusha
pop
cwtl
push
and
mov
fcomps
add
out
xchg
sub
pop
jp
xchg
pop
mov
movl
popa
mov
imulb
jl
xor
cmp
fcomp
sbb
xchg
movsb
mov
or
loope
dec
push
mov
cmpsb
sbb
xchg
lods
sbb
lret
fisubrs
fwait
and
fstpt
xorl
sbb
loop
lret
jle
idivb
adc
outsl
pop
jne
arpl
int3
jne
adc
jmp
xor
mov
mov
push
cwtl
jle
mov
adc
pop
add
xor
das
push
add
psubq
ret
add
mov
jne
cmp
push
mov
in
dec
jp
jo
jb
sbb
popf
dec
and
xchg
mov
pop
aam
dec
mov
leavew
rol
xchg
jge
inc
or
rcrl
jp
in
xchg
pop
xor
sbb
pop
xor
xor
pop
insb
je
mov
lret
xchg
fisubl
adc
xchg
jge
xchg
insb
adc
movsl
mov
jo
mov
aas
adcl
in
pushf
or
lds
and
jns
xchg
xchg
jg
jns
fstps
xchg
leave
xor
stc
pop
push
add
ret
push
push
bound
add
mov
imul
frstor
jne
in
je
mov
call
shl
jecxz
xchg
push
mov
je
test
pusha
sub
repz
data16
aas
aam
stos
std
ss
add
gs
mov
adc
shl
mov
mov
cmp
loop
inc
adc
pop
xchg
js
lods
xchg
daa
mov
jecxz
or
sbb
xchg
inc
mov
insl
push
repz
stc
cmpsb
mov
sub
aam
dec
or
insl
pop
addl
jns
cmp
outsl
popf
adc
shr
xor
and
out
lret
xchg
lret
inc
call
xchg
lcall
andb
mov
test
movsl
push
jecxz
push
pusha
imul
arpl
dec
push
shlb
arpl
push
lahf
test
mov
fs
adc
mov
xchg
jo
aas
jae
pop
enter
addb
jle
adc
nop
dec
pop
stos
push
or
int3
mov
shll
repz
leave
sarb
insb
and
loope
and
xor
bound
shrl
xchg
fcoms
dec
cs
and
sbb
mov
cmp
mov
push
scas
sbb
data16
fst
jbe
outsb
and
icebp
icebp
imul
sbb
aaa
mov
lcall
mov
push
xchg
test
test
outsb
je
rolb
call
in
adc
fisubrs
insb
rcll
hlt
lods
push
data16
leave
mov
xchg
sub
ljmp
inc
jb
pop
pop
dec
subl
es
lock
lock
insl
push
sub
push
scas
cmp
and
fisttpl
jo
arpl
and
rcr
pop
mov
lods
mov
in
sti
sbb
outsl
pop
and
cmc
lods
mov
xor
int
mov
lods
xchg
ror
testb
push
dec
inc
repz
mov
lods
and
popf
scas
cmp
mov
subl
movsl
fwait
adc
in
hlt
jle
xlat
fisttpll
notl
lcall
daa
jle
lods
je
stc
push
cmc
jp
iret
inc
ljmp
cwtl
push
cltd
xor
es
int
in
lods
cmp
in
rorl
add
adc
test
pop
cmpsb
dec
lret
push
loope
test
cmpsl
sbb
sub
add
fwait
mov
les
mov
add
sbb
adc
hlt
or
lds
clc
sbb
ret
and
outsl
inc
pop
mov
jmp
push
lds
sub
mov
adc
movsl
push
in
xor
cmpsl
roll
enter
rcll
jnp
and
shll
cmp
ss
mov
mov
jno
push
mov
cmc
into
lock
xchg
cld
mov
pop
mov
or
push
adc
loope
out
idiv
pop
adc
push
cmc
lret
mov
sub
test
dec
aam
cmp
xor
ret
ljmp
jecxz
add
pusha
lea
mov
and
pushf
cwtl
aas
scas
dec
jnp
or
jno
leave
or
adc
sbb
out
ja
and
dec
or
mov
sub
fsubs
pop
mov
cmp
xlat
iretw
or
sub
aaa
add
inc
adc
jl
jo
stos
shlb
adc
or
xchg
pop
push
jb
jmp
and
in
das
fwait
xor
xchg
jge
ja
sbb
fstps
mov
mov
xor
addr16
mov
sahf
cmc
xchg
lcall
loope
mov
mov
js
xchg
jge
xor
scas
sbb
in
cltd
enter
cmp
push
xor
std
pop
negl
mov
out
mov
mov
sbb
stos
xchg
push
jge
fldl
jp
cld
pop
aas
ret
sbb
pop
or
pop
cmp
repz
jmp
out
xor
push
movsb
icebp
lods
in
jb
or
dec
maxps
xchg
push
fdiv
movsl
sbb
pop
dec
inc
push
gs
and
pop
arpl
cld
sbb
sbb
add
ljmp
pop
and
int3
cmpsl
pop
mov
sti
cltd
sbb
xchg
pop
cwtl
dec
pop
andb
cli
hlt
or
mov
mov
and
or
punpckhdq
pop
xorb
xchg
sbb
aas
and
or
clc
dec
mov
pop
xchg
icebp
test
xorb
sahf
gs
sbb
fs
addr16
idivl
daa
js
and
fs
call
hlt
adc
outsb
bound
repnz
pop
mov
outsb
stos
sub
movntps
pop
jb
out
dec
inc
jg
out
data16
or
stc
test
xor
jle
xor
lret
inc
fwait
jmp
jo
repnz
andb
cmc
mov
add
movsb
fucom
pop
ja
ret
pop
cmp
push
inc
loop
push
pop
cmp
jp
or
ss
out
daa
mov
pusha
outsl
stos
imul
xor
dec
and
mov
enter
fisttps
shrl
add
int
cs
scas
rcrl
add
aas
mov
lods
in
ljmp
stc
sbb
cli
jle
mov
mov
lods
sbb
cld
jp
mov
clc
cmp
xchg
mov
sbb
out
sbb
fidivl
stos
inc
lock
ret
sbb
mov
fldt
sbb
adc
ret
fimull
push
mov
push
shlb
popf
mov
pusha
ja
leave
mov
sub
pop
std
push
insl
cmpsb
das
jg
hlt
push
xor
cmp
icebp
mov
rol
xor
addr16
mov
adc
or
push
out
jge
xor
adc
mov
xlat
das
push
xor
xchg
pop
mov
adc
xchg
adc
out
jmp
inc
mov
stos
sbb
mov
bound
mov
mov
and
enter
mov
mov
pop
xor
fstl
adc
pop
mov
nop
jbe
pop
ljmp
pushf
pop
xchg
mov
enter
mov
cmp
bound
adc
sub
sub
jle
mov
xchg
mov
out
je
jne
std
jae
loop
push
insb
popf
je
cmp
loop
sbb
loopne
fwait
sbb
push
sbb
push
fimuls
aam
bound
xchg
xchg
popf
rolb
nop
xor
mov
ret
sbb
inc
or
andl
push
cmp
ja
or
aam
cs
or
in
push
mulb
add
add
xchg
inc
dec
sub
add
push
out
std
loope
push
xchg
jg
jl
mov
cmc
cmp
mov
push
xor
xchg
ret
mov
push
into
add
in
fistpll
mov
fldl
packuswb
dec
jg
sarl
idivl
or
arpl
pop
xor
jge
pop
cwtl
push
outsb
out
ret
mov
icebp
ss
idiv
ret
je
and
fistps
cltd
push
add
sbb
outsb
mov
shl
int
ror
scas
js
xor
sbb
lods
and
cmpsl
loope
subb
xor
xchg
rclb
and
mov
rolb
mov
mov
leave
test
popa
jge
mov
pop
lods
pop
add
je
pop
mov
mov
add
push
ds
mov
push
sub
push
jbe
add
jns
jmp
jmp
mov
in
push
movb
sbb
adcl
dec
dec
lods
pop
fmuls
cmp
inc
cmc
mov
mov
andl
fdivr
imul
sub
jne
lcall
test
adc
or
fisubrs
ret
iret
jl
xchg
sahf
jbe
or
loope
fcmovnb
ret
dec
and
test
loopne
movsb
jle
les
or
and
jge
stos
jae
subl
stos
movsl
js
add
imul
pop
mov
adc
rolb
push
cmpxchg
das
push
and
mov
pop
xlat
popf
or
xlat
adc
sub
fisttpl
test
mov
jge
xor
xchg
xor
jne
psraw
ja
fldcw
push
mov
adc
mov
shr
cltd
mulb
mov
mov
mov
push
jae
xchg
aad
dec
popa
pop
sbb
inc
loop
stc
insb
pop
xchg
imul
add
lret
inc
das
adc
insb
mov
arpl
out
and
cmp
into
xchg
aas
clc
icebp
or
adc
loope
in
jmp
lods
jg
mov
inc
mov
mov
push
outsb
in
mov
xchg
mov
sbb
xchg
clc
movsl
les
xchg
dec
ret
push
sbb
cmp
or
pop
sub
xchg
or
fdiv
cmpb
clc
dec
mov
pop
adc
mov
add
mov
test
xchg
bound
pop
shr
or
out
inc
into
xchg
xchg
xlat
sahf
inc
push
xlat
bound
pop
scas
movsb
mov
out
pop
mov
xchg
mov
cmc
push
outsl
lret
jp
or
icebp
jo
mov
pop
pop
mov
xor
adc
dec
lcall
repnz
xor
sti
push
test
das
inc
ds
repz
jb
nop
jb
mov
push
or
in
push
std
lds
das
dec
fdivrl
sub
clc
stos
int3
addb
dec
ja
imul
mov
fwait
jo
push
repz
enter
out
fnsave
dec
insb
mov
add
andl
xchg
xchg
cmp
gs
and
nop
adc
in
bound
lods
stos
push
mov
mov
sti
pop
stc
jne
sbb
lods
mov
rorb
pop
adc
xchg
and
addr16
ss
xor
in
dec
and
mov
jns
lods
ss
mov
adc
lods
xlat
stc
push
push
xor
mov
psubd
and
hlt
jnp
push
insl
out
fimull
repz
clc
insl
fstpl
repz
scas
in
and
add
icebp
cmpb
fmuls
addr16
mov
out
xchg
imul
jl
jecxz
jns
into
sbb
std
mov
mov
cmc
xor
push
outsl
sub
and
and
out
nop
jno
mov
ss
nop
into
sbb
or
fsub
mov
push
and
or
or
pop
sub
in
movsb
inc
and
cmpsb
pushf
jle
stos
cmpsb
mov
and
out
cmp
or
jge
cmpsl
cwtl
orl
int3
sbb
jle
int
add
out
std
js
mov
jl
cli
sub
adc
arpl
into
std
inc
test
sahf
push
cld
adc
loopne
lcall
out
lcall
sub
jge
inc
dec
and
sub
stc
in
aas
add
mov
movsb
sbb
mov
push
fucom
jne
rcrb
xor
movsb
faddl
xlat
imul
mov
popa
push
jae
jns
pop
adc
mov
mov
adc
mov
jno
dec
xor
das
je
dec
popl
sub
mov
adc
mov
pop
les
icebp
inc
or
test
sbb
popa
xor
lods
iret
sbb
in
iret
or
loopne
add
sub
push
pushf
adc
add
daa
sbb
push
test
sbb
ljmp
ficoml
repz
xchg
rorb
rcrb
dec
jb
lds
pushf
pop
push
push
out
in
imul
fmull
mov
nop
inc
inc
popf
bound
xchg
lds
scas
adc
mov
adc
cmp
inc
inc
aaa
add
cmpsl
subl
mov
aad
mov
mov
mov
ds
push
sbb
into
mov
mov
mov
or
push
push
xor
imul
lods
loope
sarb
jl
outsb
movsl
js
ficompl
push
stc
pop
jl
mov
fcomip
repnz
jle
outsl
loop
test
aad
mov
push
and
mov
cmpsl
bound
sbb
shll
push
lea
xor
lcall
add
scas
stos
lahf
stc
jb
push
ja
sub
inc
fcmovbe
pop
roll
adc
hlt
int3
nop
rclb
in
out
jns
sbb
lds
aaa
dec
adc
cs
cld
in
icebp
mov
pop
push
adc
icebp
mov
adc
les
push
mov
inc
xchg
jae
out
push
add
push
mov
lods
cltd
cmpsl
dec
cmp
push
out
and
sbbl
ds
sub
out
test
insl
mov
incl
cli
out
js
mov
pop
sahf
cmp
lret
jns
scas
add
add
sub
inc
loopne
sub
frstor
bound
mov
jae
xlat
sbb
pushf
shrb
ljmp
xchg
push
mov
gs
arpl
adc
dec
addb
fidivrs
orl
cmpsl
cltd
ficoms
adc
lock
fmull
movsb
sbb
outsb
loop
jg
icebp
jmp
sub
dec
mov
inc
mov
pusha
push
fisubrs
fs
inc
pop
lret
out
or
cmc
dec
dec
sub
out
pop
push
mov
cmp
adc
adc
xor
mull
lcall
incl
stos
inc
lods
test
jp
in
jg
leave
mov
add
jp
lahf
cmp
mull
fdivr
xchg
outsl
mov
outsb
push
sub
add
imul
pop
jno
xchg
icebp
cmp
xchg
push
inc
fidivrl
int
arpl
pop
scas
mov
add
rcrl
push
xchg
ffreep
add
loop
jp
imul
mov
pop
and
push
sbb
mov
xchg
dec
rorb
mov
add
xor
cmp
lods
ss
fcmovnb
lret
mov
jae
jmp
aam
aad
fidivrl
js
cwtl
xor
imul
sub
adc
xchg
add
daa
mov
cmp
mov
jae
insl
test
jmp
jns
cmp
xor
stc
test
jae
pop
xor
fldl
inc
aaa
fmul
aad
into
je
in
pop
js
lock
movsb
inc
js,pt
adc
movsb
adc
or
mov
in
hlt
jne
out
add
iret
bound
cwtl
mov
sub
and
call
xchg
stos
add
sahf
pop
in
faddp
pop
pop
jne
and
sahf
xchg
pop
repz
and
in
outsb
push
lcall
mov
push
dec
stos
repnz
mov
lods
movsl
lea
adc
lahf
adc
sbb
pop
xor
jb
repnz
sub
push
mov
jne
jo
adc
test
jg
push
dec
fcomps
sub
sbb
push
adc
xor
dec
jg
sahf
xor
xor
xor
std
arpl
inc
dec
add
jae
sub
or
je
out
inc
inc
xor
mov
push
pop
mov
mov
stos
popa
rcrb
sub
imul
jo
inc
mov
ret
mov
pusha
gs
add
mov
adc
shll
mov
cmp
push
shrl
mov
lea
adcb
test
fs
ret
sub
pop
pop
and
aad
movl
mov
push
or
test
inc
insb
es
cmp
arpl
push
leave
sub
add
sbb
pop
xchg
push
mov
or
outsl
xchg
pushl
add
lds
add
aaa
cmp
icebp
and
cmpsb
mov
in
mov
addr16
add
cmp
shll
mov
push
dec
divb
mov
dec
cmp
sbb
popf
sbb
pop
mov
js
push
ficompl
inc
lods
jecxz
shl
xor
std
jle
inc
popa
out
loope
in
cli
std
into
pop
mov
add
shlb
xchg
je
mov
inc
sbb
pop
adc
jnp
mov
dec
fadd
dec
outsl
sub
jp
mov
ds
mov
aam
test
inc
in
aam
xlat
flds
je
les
rcrb
mov
leave
jns
frstor
mov
dec
mov
mov
sarl
rolb
xor
cltd
push
rcrl
lds
test
stos
dec
sub
fdivr
jmp
fsubrp
fwait
ljmp
fmuls
bnd
adc
dec
pop
xchg
lret
sub
inc
fs
push
sbb
mov
fwait
or
rcrl
sub
pop
mov
lock
sti
test
sbb
push
jb
dec
clc
inc
fs
sbb
dec
jg
imul
xor
mov
sub
mov
das
inc
test
jne
adc
adc
mov
jmp
imul
inc
sub
cmc
xchg
push
lock
jecxz
enter
test
or
movsb
cmp
jb
into
flds
or
sar
les
popl
xchg
ja
add
adc
in
sub
mov
jnp
scas
imul
enter
dec
ret
inc
mov
or
les
in
jns
sub
jns
fucomp
and
ds
fiaddl
xchg
call
psubusb
test
aad
push
pop
call
mov
add
or
add
or
insb
cmp
movsl
xor
les
xor
sub
gs
jp
inc
mov
push
mov
ret
stc
sub
pop
lea
fsubrs
mov
xchg
mov
mov
and
xchg
testb
ljmp
ja
sti
pop
jae
push
js
pusha
push
imull
jae
insb
mov
arpl
fidivs
ret
and
into
push
jge
sub
mov
dec
mov
insl
std
movsl
js
rcr
mov
pushf
aaa
enter
andl
bound
loopne
imul
addb
cmp
cmp
pop
and
fiaddl
lock
inc
inc
add
jb
stos
mov
dec
es
jae
ss
and
cmp
scas
cmc
push
shll
jp
sub
pushf
xchg
mov
adc
stos
mov
cmpsb
mov
inc
sub
jb
inc
icebp
push
lret
pop
and
add
adc
mov
shll
arpl
xchg
stc
pushl
popf
loop
test
shlb
cli
test
test
repnz
add
lcall
dec
in
inc
xor
pop
dec
inc
sbb
aaa
push
sbb
and
push
push
mov
adc
cli
lret
adc
adc
ds
jecxz
lret
lcall
in
test
cwtl
aam
outsl
xchg
add
lea
das
lock
and
cwtl
or
mov
or
scas
add
push
fs
dec
pop
rcll
fisubl
sbb
push
clc
inc
fcmovne
leave
and
dec
and
sub
or
mov
jb
dec
push
movsb
lret
add
mov
xchg
lds
and
push
rcrl
push
mov
sub
push
cltd
out
and
fnstcw
push
pop
jg
ret
mov
lock
test
dec
vsubpd
mov
out
gs
aad
or
in
ss
pop
ss
pop
xchg
push
sub
imul
mov
adc
inc
int3
repnz
adc
jp
orb
push
ret
sub
xchg
in
mov
repz
les
popf
inc
scas
lret
push
pop
inc
insl
xor
inc
shlb
push
cmc
les
pop
xchg
mov
sarl
popa
mov
mov
mov
scas
ja
ja
mov
jmp
data16
inc
loopne
loop
loope
cli
inc
dec
add
or
std
aam
jb
incb
outsl
mov
fadds
mov
sbb
dec
movsb
test
out
pop
cmp
and
adc
dec
test
mov
jno
scas
lods
cmp
mov
inc
sub
dec
adc
add
xor
and
aam
les
xchg
fiaddl
push
sbb
cmp
pop
add
xor
and
aam
les
xchg
fiaddl
push
lcall
adc
add
xor
and
aam
les
xchg
fiaddl
push
sbb
jo
fs
adc
add
xor
in
aam
outsb
add
mov
sti
lcall
int3
int3
jno
popa
fs
push
inc
inc
cmp
fs
add
hlt
jecxz
rcl
rol
mov
and
je
fs
push
inc
inc
xor
and
adc
add
hlt
loope
rcl
rol
mov
movsb
xchg
addl
xor
and
adc
add
pop
ret
mov
les
out
test
cmp
adc
cli
into
mov
cmp
in
fildl
sub
jns
movb
sahf
in
xor
in
adc
inc
dec
sbb
sbb
aad
dec
out
mov
aad
sub
jbe
mov
repz
fistl
dec
or
sbb
adc
cmp
imul
xchg
cwtl
inc
inc
pop
xor
add
add
insb
mov
sub
xchg
loope
mov
or
xchg
in
aam
mov
xor
add
mov
sub
loope
and
imul
imul
mov
mov
adc
mov
movsb
in
les
arpl
addl
push
inc
inc
xor
and
adc
add
hlt
loope
rcl
rol
mov
movsb
xchg
xchg
sub
pop
cmp
dec
and
pop
test
test
aaa
aad
xlat
hlt
xchg
icebp
lds
je
data16
push
jl
inc
push
arpl
mov
stos
inc
xlat
iret
clc
icebp
jmp
push
cmp
and
je
and
adc
add
hlt
loope
rcl
rol
mov
movsb
xchg
xchg
addl
xor
and
adc
add
hlt
loope
rcl
rol
mov
movsb
xchg
xchg
addl
clc
and
setp
lahf
shlb
pop
cmc
lds
inc
xchg
push
xchg
jecxz
cmpsb
xorl
cmp
stos
jecxz
mov
shlb
push
sti
ds
dec
in
mov
xchg
outsl
pop
enter
dec
mov
mov
jg
push
outsb
clc
xchg
jecxz
jp
jmp
sub
pop
mov
push
jae
xor
jmp
sub
test
pop
aam
rclb
sbb
sbb
push
cwtl
mov
inc
scas
dec
xor
pop
and
push
outsb
adc
lcall
arpl
ret
jb
xchg
xchg
fbstp
aaa
inc
clc
jmp
sarb
cmpb
xchg
adc
ja
add
adc
sbb
push
sbb
lret
stc
pushw
sbb
in
mov
sub
fcmovbe
lret
je
in
cmc
pop
jno
fistpll
ljmp
cwtl
xchg
sub
add
daa
push
mov
mov
stos
dec
mov
and
popa
pop
inc
ljmp
sbb
sbb
jbe
loope
mov
loope
cmp
fsts
bound
stc
fldcw
xchg
dec
in
push
jmp
pop
cli
and
adc
ds
out
xor
aad
add
jecxz
aaa
imul
jmp
or
scas
subl
inc
push
cs
stc
pop
imul
cmp
cltd
jecxz
jnp
popa
jbe
pop
call
xchg
xor
jmp
sarl
cmp
jg
sub
jmp
out
mov
fidivrs
rorl
fisubl
and
pop
lahf
call
push
repnz
cwtl
jo
cld
and
inc
or
cwtl
mov
inc
out
movsb
push
ret
cmp
subl
popf
cmpsl
ss
mov
adc
out
push
xchg
nop
and
sub
push
inc
mov
xchg
cmpsl
push
jb
xchg
cmpsb
xor
gs
or
mov
add
pop
mov
popa
cmovne
pop
bound
inc
or
mov
cmpsb
mov
stc
push
pop
pop
lea
movsb
sub
mov
repz
mov
addr16
push
pop
xchg
mov
or
pop
scas
inc
enter
jnp
sbb
mov
cmp
rcl
stc
aas
pop
ja
fs
push
int
nop
push
dec
sub
stos
cmp
mov
push
imul
sub
dec
jno
sti
test
negb
xor
cmp
out
mov
xchg
push
loope
pop
cmc
out
xor
int
iret
movsb
jmp
cmc
loope
adc
lods
test
xor
stc
movsb
into
shlb
xchg
mov
ss
js
jge
cmc
xchg
loope
dec
mov
stc
adc
and
mov
orb
jg
or
popa
in
out
cltd
hlt
and
orl
fs
iret
addr16
mov
inc
fisubs
addr16
mov
nop
inc
mov
jbe
adcb
inc
lret
subl
sub
ret
sub
cltd
ret
dec
mov
sub
sub
push
les
orl
and
lods
adc
jo
mov
scas
lea
add
pop
scas
xchg
and
or
sub
imul
cmpsl
jns
xor
xchg
mov
test
sub
or
sbb
scas
xchg
dec
or
push
push
cmpsl
jb
mov
enter
mov
clc
fcoms
xor
cwtl
dec
aad
jmp
jno
shll
sbb
dec
fimull
push
outsb
jno
add
call
xor
lret
adc
mov
enter
mov
mov
roll
aam
pop
pusha
jmp
mov
cmpsb
mov
push
outsb
xor
sti
incl
imul
or
xchg
or
push
mov
cmp
out
sbb
add
sbb
mov
cld
sub
and
mov
adc
xchg
mov
out
stos
pushf
xor
out
aaa
sahf
sbb
rorb
mov
or
scas
sbb
sub
sahf
sub
sahf
sub
jae
imul
pop
jno
aad
lahf
aas
add
mov
adc
add
daa
jmp
cmpsl
loopne
jno
into
ficoms
sub
bound
inc
pop
popa
in
add
and
jnp
sbb
jecxz
sub
outsl
adc
mov
lret
sahf
test
mov
pop
add
bound
sbb
push
sahf
jge
xchg
cld
leave
dec
add
addr16
mov
adc
adc
and
jl
cmp
lret
mov
pop
lds
jno
mull
inc
inc
jle
rol
and
xchg
adc
or
aas
cwtl
es
pop
out
movsl
mov
add
mov
dec
dec
sub
in
sti
fidivrl
mov
lcall
jecxz
mov
bound
add
cli
lods
jecxz
jmp
insb
add
ret
js
jle
cld
movsb
adc
sbb
dec
push
adc
clc
pop
sbb
mov
pop
add
aaa
arpl
cmp
jl
inc
ljmp
fsubs
aas
xchg
outsl
sahf
jge
dec
adc
push
mov
or
lret
lcall
jne
fstpt
sub
sub
inc
imul
sbb
scas
fldenv
jg
mov
scas
dec
adc
xchg
mov
jp
ss
arpl
sbb
sbb
xorb
mov
fucomip
sub
jbe
pop
push
pop
and
test
shrb
cmpsl
add
aam
ds
pshufw
jecxz
inc
scas
cltd
cltd
jo
xchg
jmp
cmp
cld
sbb
push
cmp
movsl
in
mov
jmp
sbb
aam
popf
or
pop
loope
dec
jno
cmc
les
insl
es
sub
pushf
jmp
xor
fldl
aam
or
loop
inc
xchg
ret
xor
xor
scas
es
lock
push
dec
pop
push
js
test
imul
bound
sar
push
pop
mov
push
add
push
lea
add
push
mov
sub
jns
adc
jp
sbb
cmpsl
cmp
bound
xchg
mov
outsb
mov
jno
push
pop
out
cs
movsb
out
sbb
push
in
xchg
xor
mov
das
leave
cmp
mov
das
jp
mov
in
xchg
repz
xchg
dec
fwait
ljmp
mov
es
dec
cmp
and
cmpsl
xor
and
xor
wbinvd
jae
push
cmp
push
xor
and
push
cltd
sti
das
push
les
mov
mov
adc
loope
daa
pop
outsb
xchg
ret
jb
pusha
jecxz
leave
mov
mov
push
push
fsubs
xor
dec
dec
mov
outsl
jge
fsub
sub
lret
jmp
rcr
xor
mov
hlt
jl
jae
jno
fstl
xor
inc
xlat
xor
cld
and
sti
mov
pop
mov
jno
aas
insb
mov
push
jge
daa
std
jge
push
jb
pushf
lods
aad
std
xchg
ja
addr16
scas
xchg
movsl
int
mov
push
pusha
sarb
sbb
pop
dec
fildll
mov
add
mov
xor
fildll
sbb
les
lods
push
pusha
mov
das
data16
xchg
cmpsl
lret
nop
and
call
movsl
negl
jns
in
int
xchg
xlat
sbb
addl
push
mov
xchg
lahf
cmp
adc
cmpsb
adc
loop
popa
push
or
fdivs
sbbb
xchg
mov
push
subl
fldenv
sbb
sbb
add
mov
inc
movl
cmp
aas
mov
sub
push
jp
inc
movsb
jmp
std
repnz
std
movsb
fistpll
mov
nop
daa
fs
cmp
mov
je
push
fstl
xor
imulb
cmpsb
mov
xchg
adc
shll
or
call
fiadds
mov
lods
std
mov
push
test
inc
out
mov
xchg
ds
xor
clc
dec
outsb
add
pop
mov
cmpxchg
out
cmp
mov
or
inc
ss
enter
cmc
jb
cmpsb
jle
inc
dec
sti
gs
cmc
mov
mov
in
pop
adc
adc
inc
mov
and
mov
pushf
inc
jecxz,pn
or
imul
je,pt
nop
or
fcoms
imul
pop
cwtl
jp
and
andb
icebp
add
xor
cmp
sbb
mov
mov
rorl
xor
movsl
enter
pop
je
mov
dec
outsb
ds
add
adc
orl
mov
fdivrs
dec
push
adc
or
xlat
lret
aas
cmp
ret
std
jo
in
notl
mov
stos
push
sub
fdivs
xchg
out
frstor
fwait
pushl
xchg
test
pop
xor
sbbb
outsb
xchg
xchg
jnp
jne
lods
push
xor
mov
psraw
lods
mov
mov
or
into
call
sbb
sub
jecxz
pop
jecxz
imul
rcl
mov
and
add
jmp
pop
jecxz
aam
mov
xor
mov
mov
mov
pushf
dec
lcall
and
xchg
aam
popf
xor
lods
popf
mov
cmpsb
xchg
adc
dec
sbb
or
push
sub
jnp
push
push
inc
cmpsl
rcrb
xchg
rcr
pusha
or
mov
mov
clc
std
stc
outsb
cmp
fcoms
dec
sbb
sub
les
icebp
mov
and
xor
dec
sub
push
test
inc
sub
sub
mov
mov
repz
and
cmp
sub
sub
sahf
and
aas
and
xlat
js
xchg
scas
movsb
add
out
cmovo
pop
inc
jmp
cwtl
dec
and
arpl
aas
push
sbb
repz
cmp
aas
sub
dec
sub
ret
sarb
decb
sbb
out
jne
ljmp
stos
hlt
mov
sbbl
test
add
add
scas
add
dec
add
ret
or
jmp
icebp
mov
xor
popa
cmpsl
leave
roll
inc
mov
sub
clc
sub
insl
mov
pop
jg
sbb
ds
jmp
cmp
ret
jno
adc
or
outsb
out
jecxz
xor
and
lds
into
lods
les
pop
test
pusha
jge
jnp
in
dec
or
imul
or
fsubrl
sbb
into
test
cli
sbb
scas
fidivrl
xchg
test
int
dec
inc
push
pop
inc
fldcw
pushf
mov
cwtl
in
xchg
neg
jne
in
mov
or
mov
adc
daa
in
push
nop
neg
loopne
inc
cmp
int
outsb
push
adc
lcall
ss
pop
adc
imul
scas
out
aaa
sbb
movb
pop
xchg
mov
icebp
mov
stos
jle
insl
mov
mov
hlt
inc
popf
movl
xchg
xchg
pop
in
xor
push
mov
or
xrelease
leave
adc
call
mov
add
inc
jp
dec
or
jmp
lahf
sti
cmpsl
movb
es
sub
cmp
arpl
cmpsb
lahf
and
aaa
imul
rol
bound
or
sub
mov
mov
vmovupd
test
shl
dec
push
clc
xor
loopne
rcll
xor
lds
cmp
add
lret
add
add
mov
or
in
lods
jle
jecxz
mov
fnstenv
pop
xchg
push
sarb
adc
jo
cmp
subl
int3
xchg
out
in
adc
or
stos
inc
sbb
sarl
dec
ds
mov
push
xor
cld
add
out
into
into
and
test
xchg
inc
add
fwait
inc
push
jb
paddd
sub
cli
pop
cwtl
test
adc
inc
es
clc
loope
adc
xlat
push
into
mov
pushf
cmc
imul
cmp
jmp
mov
xor
inc
data16
out
cmp
adc
jnp
insl
adc
rcll
lock
shll
mov
scas
test
shll
cltd
and
daa
popf
mov
inc
push
adc
sub
pop
rcrl
ja
lahf
mov
dec
xchg
ficomps
mov
mov
orl
mov
adc
in
xor
dec
in
shll
lcall
sub
shlb
movsb
adc
sub
and
loope
mov
xchg
cld
add
cld
out
and
push
aas
hlt
fwait
enter
jge
outsb
cmp
in
loop
dec
shrb
mov
sub
test
and
mov
jnp
pop
daa
mov
lods
out
test
jg
mov
mov
mov
and
imul
xchg
ljmp
push
mov
out
xor
add
cli
cmp
int
and
test
or
and
in
xor
pop
xor
adc
cmp
inc
or
lret
mov
mov
es
testb
sub
js
in
add
cwtl
inc
aad
data16
lret
inc
cwtl
outsb
sub
sbb
lea
mov
push
push
dec
jbe
xchg
lcall
mov
mov
fistps
fisttpll
neg
fldenv
outsl
xchg
arpl
mov
rol
fwait
shlb
cmpb
jno
mov
xor
call
xor
stc
imul
push
push
sbb
pushf
out
inc
add
fwait
sbb
or
add
jo
xchg
pop
sub
pop
lahf
mov
cmp
lock
mov
es
jmp
mov
inc
repz
repnz
xchg
lret
inc
mov
shl
lods
push
xor
xchg
jle
inc
jae
fisttps
je
adc
mov
mov
pop
pop
mov
in
xchg
push
dec
arpl
xor
jo
inc
test
sub
sbb
mov
and
mov
mov
mov
sub
cmpsl
cmpsb
icebp
test
mov
rorb
and
into
jecxz
lock
jnp
leave
xchg
xchg
push
xorl
pop
and
jl
imul
cmp
jecxz
fidivrl
mov
orb
inc
jns
mov
mov
jmp
mov
push
mov
xor
jb
outsb
mov
fsubr
mov
or
mov
xchg
popf
out
in
mov
or
std
insb
popa
test
cmpsl
jae
flds
sti
dec
lods
cli
push
adc
test
cmpsl
pop
xor
xchg
seto
sub
adc
fistl
inc
push
fists
add
mov
adc
outsl
pop
movsl
jnp
cmp
adc
subb
add
adc
lcall
insb
sub
shrl
xor
and
pop
sub
sbb
es
add
sub
scas
cmp
es
add
dec
stos
scas
mov
sub
push
lods
and
push
hlt
dec
dec
xor
or
cli
lret
xlat
push
add
adc
mov
icebp
push
jmp
movsb
std
in
std
mov
fistl
mov
leave
sub
mov
rcrb
shrl
cmp
xchg
fs
inc
or
xchg
pop
clc
cmpb
gs
xlat
xchg
xorb
pop
cmp
mov
adc
in
lock
xchg
mov
push
mov
cmp
repnz
push
push
loope
lods
stos
daa
frstor
aad
pop
out
cmpl
divb
outsl
shrb
pop
xchg
dec
jae
cltd
lret
cmp
lahf
mov
pop
jecxz
in
scas
rorb
call
hlt
fsubl
jno
sbb
lcall
sub
andl
cwtl
cs
popf
dec
adc
jno
icebp
cwtl
cmp
mov
rol
dec
sub
pushf
inc
xor
inc
adc
add
fisttpll
cmp
jge
aaa
push
rclb
lock
cld
rcrl
dec
pop
jb
in
cmp
mov
ss
test
leave
fildll
in
imul
call
mov
inc
dec
adc
out
add
xor
popf
mov
stos
mov
add
or
sub
sti
and
neg
mov
fadd
lock
imul
xor
jl
push
cmovl
and
ds
inc
mov
mov
xchg
lret
dec
cs
pusha
aas
fidivrs
dec
popf
mov
ljmp
ss
outsl
icebp
and
pop
xchg
push
cmpsl
js
inc
push
dec
aas
cmp
shr
repz
push
popf
das
cmpsw
jg
jbe
add
add
int
cmpb
push
es
sub
shr
and
xchg
dec
lcall
ss
cmp
mov
es
sub
rcrb
jb
lret
push
pop
sbb
adc
or
cmp
cwtl
das
mov
out
rcll
add
fsubrs
inc
pop
iret
lds
adc
sub
xchg
jne
in
les
dec
rcll
fidivs
inc
mov
dec
sbb
inc
in
test
xor
mov
bound
sbb
add
xor
cmp
cmc
push
push
fisttps
mov
scas
xchg
lods
add
fwait
push
inc
shlb
cmpsb
pop
or
negb
scas
dec
ret
mov
sub
hlt
je
insl
or
cltd
es
jecxz
es
orb
cmp
xchg
lock
arpl
fisttps
adc
inc
movsl
xchg
adc
sub
arpl
pop
pusha
xchg
mov
inc
out
mov
popf
xchg
push
adc
cmpl
push
pop
sti
jge
jns
ja
pop
pusha
cmc
jle
xlat
push
js
loopne
mov
xchg
and
lea
push
sbb
sub
mov
inc
imul
inc
out
pop
call
adc
movsb
test
pop
jne
fistpl
push
inc
popf
sbb
out
jl
push
adcb
inc
lock
mov
in
mov
test
cmc
mov
push
pop
jae
icebp
mov
lret
mov
dec
mov
es
mov
lods
int3
loope
jecxz
push
lods
mov
push
xchg
insb
jae
insb
xchg
outsb
or
loop
fstps
cltd
adc
sub
psubb
imul
and
ret
pop
fstpl
fiaddl
stos
xor
ror
xchg
cmp
push
lret
xchg
jge
out
fwait
sbb
aaa
jbe
xchg
jo
add
pushf
icebp
int3
ds
xchg
out
sbbl
aam
aas
fsub
pushf
les
dec
sbb
out
jecxz
add
js
pop
aad
into
add
inc
xchg
imul
mov
lock
lock
jmp
mov
adc
and
shl
insb
adc
and
or
inc
push
cmpsl
popf
pop
fnstcw
cmp
inc
lret
push
enter
lcall
lods
pop
xor
inc
xor
xchg
bound
mov
xchg
add
mov
fimull
jg
jne
stc
push
lret
inc
sub
outsl
xor
dec
arpl
lahf
sbb
mov
outsl
stos
sarl
lods
jecxz
mov
fistps
mov
pop
cmc
pop
lahf
jecxz
int
imul
insb
pop
add
mov
popf
icebp
stc
movsl
bound
rolb
mov
and
outsb
push
cmp
push
in
xor
mov
call
fsubr
sahf
sbb
in
in
data16
scas
fildll
mov
pop
jecxz
dec
orb
ja
in
pushf
stos
jne
jmp
gs
sbb
lcall
leave
cmc
lock
popa
mov
adc
push
xchg
std
jb
push
fsubrs
sbb
inc
fisubs
daa
jns
xchg
pop
xchg
xlat
push
pusha
push
add
lock
xchg
or
push
jg
mov
xchg
lds
es
xchg
dec
enter
mov
and
pop
cmc
xor
add
push
ljmp
add
popf
ret
xor
jle
sub
and
cmp
lds
push
and
cltd
inc
mov
out
icebp
pop
or
xor
push
xchg
inc
lods
sahf
out
rclb
mov
adc
repz
mov
insb
push
or
mov
movsb
ret
mov
fmuls
push
adc
mov
mov
insb
test
mov
imul
jns
sarl
adc
add
push
xchg
add
in
stc
fiaddl
mov
jb
enter
mov
fidivrl
and
fdiv
push
insl
xlat
push
mov
je
in
cmp
push
mov
push
add
aad
and
push
lods
mov
push
out
mov
jns
push
outsl
fsubrl
add
aas
movsl
xchg
lret
jno
mov
out
add
jae
add
aad
cld
xor
arpl
adc
test
or
cmp
in
outsb
jo
cmp
xor
cmpb
mov
xchg
fsubl
das
xchg
loopne
fisttpll
adc
mov
add
cmp
mull
imul
cli
jmp
aaa
rorl
subl
in
movsl
js
cmp
lea
dec
mov
cltd
aas
or
pushf
push
testb
mov
jg
jg
mov
arpl
stc
pop
pop
js
out
je
push
mov
punpckhdq
jg
inc
pop
jecxz
add
push
daa
movups
into
negb
mov
xchg
and
pop
sbb
bnd
iret
jnp
xor
push
les
fildl
mov
out
push
xor
xchg
out
inc
lods
mov
movsb
push
dec
test
orl
outsb
dec
pop
push
jecxz
and
pop
and
add
ja
mov
add
mov
ret
test
xchg
cmpsb
xchg
test
cmpsl
xor
jmp
lods
jmp
sbb
in
out
clc
popf
data16
mov
test
jle
scas
adc
aas
sbb
xor
ljmp
pop
and
les
inc
lahf
insb
call
sahf
mov
loope
imull
jg
xor
movsl
lods
dec
add
jg
scas
mov
jns
mov
and
sub
out
and
test
lret
xchg
ret
adc
push
fsubr
mov
outsb
push
inc
inc
xor
and
adc
add
hlt
loope
rcl
rol
mov
movsb
xchg
xchg
addl
xor
and
adc
add
hlt
loope
rcl
rol
mov
movsb
xchg
xchg
addl
xor
movsb
adc
add
je
in
aam
les
xchg
addl
xor
and
adc
add
hlt
push
dec
jnp
shll
imul
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
pushl
pushl
call
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
jae
arpl
pop
inc
pop
xchg
push
popa
addr16
jae
arpl
mov
mov
mov
xlat
jae
arpl
push
pop
inc
pop
xor
ja
inc
add
cmpsl
jecxz
rorl
xchg
notl
cmpl
sub
aas
or
gs
in
mov
xchg
iret
mov
mov
arpl
push
push
xor
mov
les
pop
lds
sti
dec
cmp
hlt
sub
call
xchg
mov
lret
js
jecxz
mov
xchg
dec
jl
mov
outsb
mov
mov
or
cmpsb
sbb
jmp
dec
imul
daa
jae
lcall
inc
in
xchg
fidivrl
loop
out
cmp
dec
repnz
stos
and
out
lret
mov
jbe
xchg
stos
repz
addr16
lea
pop
fadds
int3
sub
test
aaa
or
hlt
outsb
out
push
xchg
std
testb
mov
push
jae
pop
and
xor
inc
sbb
ljmp
stos
stos
fstpt
in
daa
push
pop
imul
inc
ret
pop
xor
adc
in
mov
mov
out
mov
cmp
xor
xor
push
fs
xchg
rcl
andb
mov
aas
imul
jnp
and
inc
add
cmpsl
jecxz
roll
mov
xlat
jae
arpl
push
pop
inc
pop
xor
ja
inc
add
cmpsl
jecxz
roll
mov
xlat
jae
dec
popa
in
jp
stc
pop
add
hlt
xor
fnstsw
lahf
cltd
mov
cmc
inc
jnp
mov
into
daa
sbb
pop
mov
ret
lods
pop
inc
scas
mov
cltd
addr16
xchg
jo
inc
daa
jp
mov
cmpl
ror
sahf
aad
or
add
in
mov
lods
aaa
sbb
mov
xchg
lods
push
scas
leave
mov
jb
cmp
mov
pushf
jae
cwtl
stos
cmpsb
fcoml
xor
sub
cmp
or
jns
add
lret
loopne
push
nop
inc
mov
jl
jmp
movsl
mov
jae
xchg
movsl
pop
cmp
add
inc
lds
out
mov
cmpsb
test
push
adc
rorb
mull
dec
xchg
hlt
mov
popf
adc
adc
fcmovb
pop
add
fldcw
and
aad
hlt
mov
lds
lods
sub
mov
aas
push
mov
or
sbb
fcmovnb
repnz
rcll
xor
test
xor
inc
push
push
or
fidivl
sbb
lahf
cmp
imul
enter
cmp
das
jmp
and
mov
scas
jle
ss
pop
pop
inc
or
cltd
testl
lock
call
fmuls
leave
fisttps
sub
test
imul
and
xchg
sbb
mov
les
test
dec
inc
enter
aad
jns
in
jg
scas
inc
sti
mov
xchg
mov
clc
mov
push
into
ret
lahf
jo
dec
mov
pop
stos
pop
mov
ja
lret
xchg
out
jge
push
icebp
xlat
stos
sbb
nop
lods
pop
jecxz
fwait
iret
lds
aaa
cmp
cmp
push
push
ljmp
jmp
mov
sub
out
fdivrs
xor
pop
call
jmp
sti
inc
cmp
loopne
dec
hlt
pusha
jl
pop
xor
add
xchg
xlat
sub
idiv
dec
jecxz
cltd
std
jmp
movsb
xchg
cs
push
lea
aad
sub
xchg
test
addb
ds
add
daa
push
cs
shrl
mov
adc
pop
or
insl
lret
inc
sub
fildl
pop
pop
rclb
js
sub
jmp
iret
fcmovne
and
divb
sub
sub
outsl
dec
arpl
pop
stos
push
aas
decb
lahf
mov
into
fistpl
scas
and
sbb
or
and
vpminsw
and
outsb
jle
push
jns
dec
pop
pop
jae
inc
ret
pop
out
push
inc
xor
mov
mov
mov
ror
aas
jp
out
dec
clc
je
insl
push
fiaddl
adc
cmp
adc
ja
fcompl
jo
push
aad
lret
dec
jb
loope
ret
ret
add
cmp
add
out
add
push
insb
out
int3
fmuls
sbb
add
xor
inc
nop
cmovae
movsl
sbb
iret
push
xchg
std
call
or
stc
cmpsl
pop
mov
and
add
out
roll
push
scas
inc
mov
jo
test
pop
dec
xor
sbb
repz
cmc
out
cmp
and
insb
jp
mov
pop
sub
mov
adc
and
add
stos
add
xchg
adc
jb
stc
jg
sti
pop
jg
aas
mov
and
mov
rolb
sbb
pop
sbb
pop
add
hlt
mov
cmpsb
xor
xchg
jbe
pusha
jg
sbb
enter
inc
lret
dec
and
dec
cmpsb
test
lods
sahf
push
adc
add
leave
and
and
cmp
sbb
push
inc
sarb
cmp
pushf
test
mov
pop
xchg
mov
or
mov
push
xchg
nop
jbe
mov
out
iret
ds
mov
shr
mov
mov
movsb
mov
pop
mov
insl
mov
adc
or
pushf
fwait
orl
push
imul
sbbb
adc
push
and
ss
jno
fiadds
lods
jae
pop
pushf
loop
and
lcall
jne
cld
movsl
out
jns
sarb
lea
mov
push
sbb
pop
lret
mov
lds
je
push
or
push
xchg
scas
mov
push
pop
push
adc
fiadds
ret
dec
mov
iret
movsl
pop
xor
xchg
lcall
jne
or
push
loope
fwait
add
es
and
test
sbb
pop
mov
jl
and
sbbl
dec
push
loope
jmp
lock
push
and
jne
pop
push
das
push
xor
das
out
sub
insl
clc
cmp
dec
mov
mov
jmp
enter
loope
mov
push
xchg
and
das
lds
fisttpl
xchg
cmp
cmpsl
lret
shlb
aas
dec
repnz
dec
sbb
jbe
fucom
jae
out
sub
push
in
fadds
inc
inc
and
jnp
push
and
xchg
or
xor
push
dec
std
xchg
or
scas
cwtl
jbe
push
imul
and
adc
inc
cmp
in
scas
sahf
arpl
dec
cmc
dec
sbb
ja
sbb
insb
les
sub
daa
stc
fsubl
fmuls
jo
add
insb
or
je
and
xchg
dec
lahf
jnp
fmul
ljmp
xlat
loopne
inc
icebp
mov
mov
jle
push
sbb
fisttps
cmc
mov
int3
int3
das
xor
fsubrs
inc
adc
or
mov
orb
aaa
xchg
or
nop
mov
jnp
sub
push
or
sbb
lods
xor
sbb
xchg
push
in
nop
pop
add
and
mov
adc
push
pop
mov
sbb
aas
sub
and
xchg
xchg
push
cmp
mov
lahf
mov
xor
mov
inc
sub
testb
cmp
lods
shrb
cmpsb
sbb
in
push
dec
push
aad
les
lcall
mov
jmp
or
call
cmp
push
das
lock
cwtl
sub
mov
mov
jne
cmp
scas
nop
or
lea
jge
std
shl
xchg
fstps
xchg
jmp
fst
fwait
mov
lods
pop
inc
push
mov
sub
sbb
pop
pop
dec
xor
aam
addl
loop
nop
stc
lahf
test
fbstp
and
loop
xchg
movsl
call
xor
aaa
das
mov
sub
mov
enter
mov
mov
dec
add
shrl
leave
or
jl,pt
push
les
push
jmp
dec
ret
or
mov
sbb
stos
out
nop
pop
aad
test
cmp
push
in
push
xlat
call
enter
daa
push
lcall
fiaddl
mov
fwait
pop
and
jg
push
movsl
adc
pushf
out
subl
in
jns
sub
fwait
push
mov
lret
dec
mov
mov
in
pusha
test
xchg
jae
or
mov
ja
movsl
fwait
loopne
push
add
outsb
outsl
jne
test
cmpsl
aad
pop
cwtl
pop
add
es
sub
sahf
cmpsb
jge
mov
hlt
cmp
call
sbb
xchg
vunpcklpd
mov
shll
insb
pop
cmp
xchg
jp
addr16
lret
ss
jb
stc
cmp
fmul
push
repz
or
popa
inc
lret
stc
jnp
adc
xchg
fs
movsl
iret
xchg
inc
cmp
fsubl
fidivl
stos
xchg
testl
divb
aam
inc
mov
lcall
push
sbb
aam
out
jnp
rcll
cmp
ret
stos
sbbl
js
mov
xorb
pop
jle
mov
pushf
test
dec
sbb
mov
lret
rorl
pop
ja
negb
iret
push
mov
dec
out
es
cmp
adc
daa
test
cmp
adc
enter
mov
jne
mov
inc
inc
add
movsl
mov
xchg
pop
add
push
dec
int
inc
gs
xchg
aam
rcl
sbb
cs
leave
ds
das
or
fstpt
imul
sub
sbb
insb
add
cltd
xchg
pop
mov
pop
addb
xchg
lds
fidivl
adc
add
mov
lahf
push
rol
or
testl
mov
aad
les
mov
push
cld
mov
call
push
sub
out
adc
jb
lret
push
sbb
xor
mov
mov
sub
pop
mov
andl
dec
pop
inc
icebp
imul
fs
fcomp
test
cmpsl
test
into
mov
ret
lret
sub
fucom
push
rolb
insb
pop
dec
movsl
adc
ret
jae
sti
nop
imul
dec
add
push
mov
dec
cmp
xor
and
cmp
push
inc
push
mov
test
test
aaa
dec
push
sub
lahf
mov
lret
or
je
mov
inc
je
ret
jnp
push
dec
dec
or
psadbw
imul
mov
icebp
imul
enter
iret
xchg
xlat
xchg
rcll
test
or
in
add
dec
xlat
add
sbb
imul
mov
xchg
push
jp
in
mov
aam
test
arpl
fistpl
push
jp
inc
xlat
and
dec
jb
xlat
mov
mov
enter
cmpsl
cwtl
push
jb
movsl
in
xbegin
cmp
rolb
mov
fdivp
notl
in
outsb
push
mov
xor
out
push
sbbl
mov
xchg
sbb
ret
xchg
xor
fldln2
jne
rcr
sub
mov
clc
jns
test
sub
ret
fdivr
push
andb
pop
out
mov
sub
es
mov
adc
rcll
adc
jg
pop
mov
das
gs
shr
les
cwtl
out
popf
adc
arpl
jge
push
les
and
fcoms
rcr
jecxz
data16
xor
sahf
mov
adc
push
pushf
sub
and
jmp
test
adc
subl
jne
jle
dec
sbb
jnp
xchg
mov
mov
sub
mov
mov
sbb
dec
loop
cmp
xchg
jl
adc
dec
loope
xchg
xchg
sub
cmp
xchg
add
or
pop
sub
cmp
or
xor
sub
pop
call
out
cld
push
sar
cmpsb
mov
cmp
in
movsb
out
cmpsb
pop
sbb
pop
pop
js
jle
mov
mov
adc
mov
jg
xlat
fsubs
push
bound
cmp
xchg
xchg
mov
call
ret
adc
jno
jbe
xor
dec
sub
mov
lahf
inc
cld
test
adc
sti
stc
ljmp
dec
popa
mov
inc
push
add
fdivs
cli
ret
pop
or
push
push
hlt
xor
ljmp
push
test
les
scas
and
sbb
cmp
and
out
testb
add
or
aam
adc
mov
jg
push
sub
sbb
xchg
dec
mov
push
mov
mov
sbb
jne
test
ja
add
dec
imul
xchg
pop
es
mov
mov
lret
daa
stos
aad
cmp
sub
sub
aad
xchg
hlt
mov
push
int3
cmpsb
sub
xor
and
dec
fucomip
mov
push
jg
adc
add
inc
mov
notl
nop
jne
pop
mov
and
pop
shl
fstl
xor
mov
mov
pop
inc
cmp
pop
push
cmpsl
adc
jae
sbb
sbb
cltd
pop
sarb
mov
cwtl
pushf
mov
pop
push
out
pop
sbb
js
dec
push
gs
pop
xor
flds
or
sub
test
scas
push
mov
out
xchg
pop
push
jge
adc
daa
imul
add
xchg
mov
jo
gs
sub
lcall
loopne
jns
in
add
pushf
ret
add
fldcw
mov
out
jecxz
cwtl
xorb
daa
mov
or
ss
pop
out
idiv
push
ds
scas
cmp
movsl
or
shll
loopne
je
int
add
loopne
pop
jp
sbb
icebp
out
int3
push
cmp
fistpll
nop
hlt
or
inc
pop
xchg
call
inc
scas
fimuls
call
insb
outsl
ja
jl
add
mov
cmpb
or
push
pop
ljmp
mov
cmp
addb
fldcw
mov
dec
loope
repz
jbe
lea
imul
or
hlt
or
xchg
pop
ds
addr16
int3
jns
cmp
stos
pop
in
testl
mov
sub
mov
mov
pop
mov
outsl
sarl
jbe
inc
push
xor
test
mov
xor
cmp
popf
es
xchg
push
xchg
adc
jle
inc
pop
pop
ret
sahf
and
dec
leave
fwait
mov
mov
or
cmp
into
cwtl
iret
adc
add
sub
pop
inc
adc
scas
scas
xor
fs
loope
rcll
test
mov
fwait
or
cmc
and
arpl
cs
mov
test
cwtl
sahf
aas
dec
cs
xor
push
mov
xchg
negb
xchg
add
inc
mov
or
mov
jge
push
xchg
popf
inc
int3
fs
xchg
stos
xorl
hlt
add
fistl
clc
mov
sti
enter
shr
lea
push
dec
xor
pop
int3
add
daa
push
jno
xlat
jae
sbbl
mov
mov
sbb
or
sbb
or
stos
call
add
test
shl
out
xchg
dec
mov
sub
jnp
dec
jg
lcall
mov
lahf
or
add
cmp
mov
cld
xor
ficoms
imul
and
adc
loope
or
pop
jns
je
ss
aaa
test
sub
mov
in
mov
push
bound
sub
shr
dec
inc
jno
sbb
lcall
mov
lock
dec
xchg
out
fldcw
mov
int
pop
push
push
pushf
jae
sub
aam
mov
enter
dec
enter
adc
pushl
lret
sahf
daa
xchg
outsl
cwtl
lods
test
dec
je
data16
mov
out
sub
ss
lret
ds
shl
or
lret
popa
inc
adc
lds
push
sbb
inc
mov
jno
in
mov
mov
jb,pn
in
inc
test
divb
sbb
lods
sbb
sbb
adc
xor
jbe
pop
aad
cmpsl
cmpsl
jns
dec
xchg
xchg
ja
or
lret
jmp
push
lret
mov
fstps
shlb
and
ret
xchg
outsl
push
shr
pop
mov
sti
pop
jl
sbb
pop
mov
in
insl
lahf
lahf
pop
xchg
lahf
imul
add
scas
push
mov
cmp
mov
mov
and
into
cmp
dec
add
shll
mov
xchg
bound
adcl
dec
jo
xchg
xchg
stos
cwtl
fbstp
fmuls
push
inc
call
sub
pop
xor
cmp
jno
lods
sbb
jno
push
cs
loopne
sbb
movsb
sti
arpl
push
xchg
mov
ret
movsb
lods
outsb
or
sbb
jnp
test
insb
push
rcrl
lret
insl
test
icebp
mov
jge
pop
push
push
push
jae
sub
mov
data16
pop
inc
or
enter
std
arpl
xor
clc
lret
out
test
xchg
jnp
ss
push
inc
in
sbb
pop
lahf
cmp
cltd
or
outsb
or
mov
inc
stos
mov
subl
mov
or
or
sub
mov
push
arpl
mov
cmp
sub
in
in
xor
cmpsb
mov
fisubs
inc
jmp
les
adc
jae
dec
xorl
stos
xor
and
outsl
into
dec
and
dec
ret
mov
and
mov
ret
lret
xchg
pop
in
add
jnp
mov
sbb
lea
cld
int
and
pop
popf
hlt
dec
or
fs
push
mov
inc
and
pushf
or
loope
fdivrl
xor
daa
js
hlt
dec
loopne
sub
out
cmp
daa
push
push
dec
popa
shll
and
mov
and
insl
cmp
bndldx
lea
lcall
mov
test
lret
ftst
ret
cmc
cmpsb
push
mov
jnp
mov
popf
pop
mov
outsl
std
add
lods
ret
cmp
pusha
mov
fwait
adc
xchg
addr16
pop
cmpsb
cmp
insb
add
mov
xor
std
add
loope
lds
mov
scas
cmpsl
mov
xchg
popa
out
jmp
adc
jp
leave
add
insb
and
pop
xor
mov
adc
data16
xor
sbb
js
pop
lock
mov
push
cmp
add
sarl
js
repnz
xor
daa
sub
shlb
pop
mov
cld
fdivrs
cwtl
xor
loopne
push
add
mov
sub
dec
mov
dec
lds
mov
cld
jb
add
xor
mov
cmpsb
dec
pop
sbb
inc
je
pop
mov
inc
out
loop
iret
dec
sub
xor
push
ret
mov
sub
jns
sub
insb
je
out
push
cli
mov
imul
cld
mov
add
in
popf
cmp
popa
adc
add
pop
movsb
dec
sub
pop
scas
push
push
dec
addl
daa
aaa
add
xor
xor
imulb
add
sbbl
ret
hlt
mov
shl
jbe
ficompl
cmc
mov
push
int3
cli
mov
and
ret
lock
scas
xchg
nop
dec
test
mov
repz
jp
sarb
push
out
push
gs
mov
arpl
mov
data16
mov
jo
test
lret
adc
pop
ja
out
pop
mov
fcomp
sub
jecxz
and
xor
xchg
shll
sub
pop
push
xchg
dec
nop
pop
add
shl
adc
sbb
ds
cmp
xor
stc
mov
sub
std
cmp
mov
and
cltd
ja
in
xchg
push
out
and
lods
cmp
inc
ljmp
test
xchg
xorb
push
inc
ja
in
ror
inc
xchg
and
xchg
or
aam
or
mov
mov
ss
jecxz
fimuls
xchg
cli
inc
scas
lcall
push
imull
es
inc
mov
mov
jmp
or
pop
ja
iret
aam
cmpsb
in
outsl
adc
imul
xor
jb
mov
xchg
imul
insl
jecxz
in
aaa
or
fldl
adc
sahf
add
movsl
std
test
sbb
mov
mulb
out
cmp
or
adc
mov
sarl
pushf
xor
int3
bound
inc
std
outsb
arpl
or
jne
add
push
test
cmp
es
orb
nop
cmc
push
and
lret
or
add
jno
fucomp
adc
shlb
daa
mov
adc
cmp
lret
repz
pusha
hlt
stos
dec
push
sahf
push
or
mov
xor
push
loopne
rolb
fcoms
inc
mov
sbb
stos
loop
xor
jne
xor
add
cwtl
sbb
or
loopne
loopne
or
jg
inc
fs
xor
dec
std
push
jnp
cld
lahf
mov
add
sbb
sbb
movb
lahf
xchg
jne
inc
cmp
stos
cmp
das
and
aaa
mov
jg
inc
fldlg2
gs
lods
lcall
mov
mov
cmp
pop
push
test
clc
jecxz
sti
aas
repnz
xchg
or
mov
pop
mov
pop
insl
cwtl
aas
pop
ficompl
pop
fwait
dec
cmpsb
pop
xchg
ja
xchg
fisttps
inc
and
lods
dec
out
sbb
sbb
in
push
outsl
cli
pusha
xchg
fcomps
jo
pop
ja
insb
cmp
lcall
pop
dec
nop
pusha
pop
push
or
fildll
jg
mov
or
hlt
ret
inc
jmp
adc
fisttpl
inc
and
dec
aas
or
inc
add
mov
or
dec
hlt
push
cld
aas
into
int
push
les
or
cmp
or
test
stc
xchg
cmpsb
shlb
adc
jns
mov
inc
je
out
daa
stc
int
decl
movsl
lret
out
mov
scas
jnp
mov
dec
shrb
mov
push
mov
and
aad
ljmp
loope
xor
and
add
adc
int3
sti
in
and
cld
sti
popf
std
sbbb
rep
aaa
fcompl
xchg
mov
in
and
inc
add
rol
inc
xchg
lock
out
add
je
cld
ret
push
jecxz
jne
into
popf
pop
ror
mov
inc
xchg
jg
ss
out
mov
and
pop
into
jmp
adc
lods
dec
jge
jl
mov
mov
pop
sub
lahf
mov
mov
jns
mov
outsl
sarl
daa
push
bound
rcl
xor
leave
push
fstpl
push
mov
push
imul
movsb
lret
mov
iretw
xlat
push
sbb
fldt
ljmp
xor
cmp
cli
add
xchg
push
sbb
push
mov
inc
enter
sbb
push
cmp
pop
and
icebp
aam
ss
scas
mov
aad
out
pop
andl
pop
or
push
mov
scas
mov
cltd
ja
cld
shr
pop
sub
or
dec
shll
sbb
nop
push
mov
cmp
cmp
push
jge
addr16
mov
notb
mov
fisttpll
mov
mov
loopne
cltd
and
inc
popa
call
std
out
ror
jecxz
sub
push
shl
xchg
clc
xor
cmp
fs
stc
push
jnp
add
bnd
gs
xor
aaa
pop
add
xor
ja
inc
add
cmpsl
jecxz
roll
mov
xlat
jae
arpl
push
pop
inc
pop
xor
ja
inc
add
cmpsl
jecxz
roll
mov
xlat
jae
arpl
push
pop
inc
adc
and
adc
push
repz
jecxz
roll
mov
xor
popa
rcll
inc
push
xor
ja
movl
loopne
lahf
sub
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
or
and
xor
sub
dec
or
jb
cmp
cwtl
scas
mov
out
repnz
repnz
push
adc
xor
pop
push
outsb
bound
mov
mov
shr
loop
repnz
in
adc
ds
jo
jle
ljmp
fsubl
xchg
bound
jno
push
dec
clc
pop
mov
leave
add
stc
mov
cmpsl
ljmp
add
push
jecxz
repz
js
ljmp
rolb
mov
pop
lock
xchg
pop
pushf
mov
fadds
mov
out
outsl
ret
jbe
lret
aaa
shlb
pop
push
xchg
push
xchg
jle
insl
sub
xor
fidivs
out
xchg
repnz
ret
push
frstor
mov
scas
jge
xchg
xchg
faddp
push
mov
adc
pop
addl
sarb
or
dec
sti
mov
xlat
dec
dec
inc
rorl
or
and
xor
fdivs
addb
mov
aam
fsub
mov
add
arpl
and
jle
mov
int
lret
icebp
fcmovnb
mov
nop
fwait
xchg
inc
outsb
jnp
pop
push
push
daa
add
pop
fwait
xor
int3
loopne
mov
mov
xchg
jb
dec
inc
insl
dec
sbb
bound
mov
mov
shr
loop
repnz
add
adc
and
xor
pop
push
outsb
bound
mov
mov
shr
loop
repnz
add
cmc
xorl
int
add
rcrl
mov
mov
test
test
xorl
or
mov
std
cmpsl
push
cs
sbb
xor
dec
cmpl
push
out
sti
push
and
stc
pop
pop
test
adc
or
outsl
int3
popa
add
cmp
ret
into
mov
mov
fnstcw
and
push
out
outsb
lods
cmp
std
mov
stos
xor
push
adc
subl
or
mov
sub
fwait
movsb
push
aad
pop
clc
sub
cmp
lods
xor
mov
push
icebp
inc
nop
push
pop
jmp
stos
popa
sub
cmp
push
cmp
gs
xor
adc
js
pop
or
push
enter
mov
aaa
div
jne
lcall
aas
pop
xchg
es
aad
sub
in
loop
stos
addb
loopne
xchg
push
xchg
faddp
shrb
dec
leave
mov
shll
jmp
xchg
popf
inc
test
pop
push
and
mov
mov
jge
addr16
enter
test
loope
add
sub
std
movsb
addr16
icebp
enter
cmc
test
popf
sbbb
int3
xor
out
lcall
fistl
icebp
lahf
movb
dec
bound
pop
ficompl
lcall
or
xor
jge
mov
seto
lahf
mov
jp
adc
and
lock
push
fwait
testl
pop
test
or
fisubl
pop
inc
push
jl
inc
loopne
push
imulb
or
sbb
sbb
stc
das
les
js
rcrb
les
fwait
in
das
sbb
sbb
dec
mov
pop
clc
cltd
movsl
aad
and
pop
pop
aam
out
jns
pop
adc
ror
mov
mov
imul
subb
popf
pop
out
outsb
inc
stos
mov
rcll
add
dec
mov
mov
pop
popf
cld
aam
jmp
movl
repnz
push
inc
xlat
jg
mov
pop
fcomp
xchg
xchg
xor
mov
lock
test
outsb
pop
fcmovb
in
sbb
and
push
mov
mov
cmp
ss
pop
sub
fsubrl
popf
and
mov
jmp
rcrb
add
sbb
lahf
sbb
outsb
aaa
push
scas
dec
xchg
mov
dec
lcall
pop
and
adc
mov
and
gs
mov
sti
mov
rcrb
es
into
movsb
inc
sbb
fstpl
adcb
in
xor
and
jle
pop
add
and
repnz
add
add
xlat
pop
ljmp
pop
dec
stos
call
movsl
push
aad
int3
int3
or
mov
mov
or
js
mov
pop
xorb
mov
xor
fsub
dec
mov
dec
fisttps
jmp
outsl
or
gs
inc
das
pop
mov
push
push
xchg
les
out
inc
aas
imul
xchg
fs
mov
stc
mov
jp
inc
jmp
pop
push
jne
pusha
inc
mov
arpl
nopl
scas
xchg
or
mov
or
mov
in
lret
sbb
jmp
scas
add
adc
jo
pop
mov
cmp
popa
push
popf
or
outsb
loop
leave
fs
lods
ljmp
movsb
or
push
or
pop
jg
scas
test
fisttpl
sub
mov
xlat
or
mov
cmp
xlat
xor
sahf
inc
cltd
rcll
pop
insb
mov
scas
inc
gs
mulb
mov
sub
xchg
cmp
jle
int
into
jecxz
cmp
sbb
or
sub
pop
sbb
mov
shr
jge
inc
xor
call
iret
cmp
dec
fs
xchg
cld
hlt
into
xor
and
pusha
push
cmc
pop
sbb
adc
adc
gs
push
stc
dec
int
inc
das
push
fmulp
pop
imul
mov
sahf
or
fnop
or
testl
aaa
daa
test
sub
jb
cmp
inc
outsl
movsl
ret
inc
xor
mov
arpl
dec
mov
cli
jbe
sub
sub
lcall
sbb
out
iret
mov
test
pop
ror
clc
cmp
push
cmpsl
imul
outsb
adc
icebp
cmp
or
adc
adc
push
out
xchg
in
dec
std
pop
test
sub
dec
es
pop
or
mov
jle
movsb
xor
incb
movsb
fldenv
push
sbbl
fmuls
lods
sbb
insl
sbb
and
inc
arpl
mov
das
xor
repnz
fdivrl
pop
cltd
jl
pop
mov
sub
jmp
test
or
dec
add
pop
adc
cmp
cli
loopne
sbb
ljmp
imul
ds
mov
pop
cmp
lret
or
sahf
sbb
xchg
aaa
inc
rcrb
and
test
data16
orl
jmp
gs
popa
nop
das
adcl
adc
mov
and
cmp
pop
mov
cmp
or
adc
push
sub
int
or
test
testl
xor
in
ss
and
mov
add
mov
pop
aaa
xlat
jmp
inc
sbb
mov
pop
mov
fildll
mov
enter
test
jno
out
jg
push
push
data16
sub
cli
or
xor
pop
sub
jbe
and
repnz
in
ret
jge
cltd
add
loopne
test
mov
pop
mov
sbb
push
scas
adc
xchg
jne
std
push
dec
bound
or
sahf
out
rclb
cli
push
loope
pcmpgtd
sub
jge
fs
in
mov
add
inc
mov
mov
mov
in
xor
or
pop
mov
xchg
pop
insl
in
xor
sbb
in
aam
jns
jp
and
add
lea
xor
inc
pop
testl
icebp
cmp
call
or
out
jae
lock
xor
xor
test
fcompl
das
das
and
je
leave
iret
push
sbb
dec
push
aaa
lahf
jmp
arpl
jle
ss
cmp
shll
push
cli
jb
jmp
scas
add
lahf
cmpb
or
push
sbb
mov
lret
iret
add
lods
pop
fisttps
dec
in
out
sub
stos
add
jbe
lret
jle
pop
mov
pop
pop
xchg
and
arpl
jne
cmp
adc
add
mov
fucom
xchg
jecxz
stos
and
clc
dec
push
ret
push
and
push
mov
ficompl
scas
test
sub
les
xchg
pop
cmp
or
xchg
inc
inc
mov
xor
ja
push
cmpb
popl
mov
into
loop
mov
test
mov
add
in
push
xchg
pop
adc
sahf
jo,pt
lea
and
mov
add
pop
outsl
xchg
adc
lret
sbb
jb
sub
jmp
dec
jecxz
sub
mov
movsl
mov
in
push
adc
insl
rcll
push
lret
cmpsb
stos
jns
or
jo
out
xchg
jne
data16
sub
jae
jbe
out
pop
insl
out
loop
je
scas
mov
xor
into
lods
cwtl
pop
out
insl
push
cld
adcb
nop
push
roll
leave
ljmp
push
lcall
adc
mov
shlb
aaa
movsb
and
and
stos
iret
xchg
and
ret
scas
sbb
mov
push
jecxz
jo
add
jno
dec
add
and
movsb
addr16
enter
arpl
and
and
mov
push
fnstsw
scas
jae
notb
add
fldt
mov
xor
mov
jo
pop
xchg
jns
int
out
mulps
sbb
adc
test
xor
bnd
popf
fwait
shl
xchg
rorl
or
xchg
xor
sub
mov
sbb
pop
in
mov
pop
stos
ja
outsl
shrl
shrb
mov
hlt
pop
test
sahf
push
orb
int
in
push
xchg
rcl
cmp
in
cmpsb
inc
bound
dec
mov
mov
ss
sbb
movsl
fs
enter
ljmp
cmpsl
inc
xlat
stos
ret
rcl
subl
adc
les
fmulp
dec
ljmp
xor
gs
aaa
mov
cmp
cs
scas
loope
inc
test
outsb
divl
dec
sbb
fs
xchg
in
fstpl
add
jp
fwait
xchg
jne
or
sahf
fnsave
dec
in
push
mov
mov
das
lret
xchg
lcall
jl
iret
cmpb
pushf
xchg
mov
ror
push
jne
sbb
mov
cltd
dec
lret
insl
add
aaa
pop
cmp
pop
loope
inc
data16
cld
scas
out
call
cmp
xchg
or
cmp
mov
push
lea
movsl
dec
pop
or
aaa
enter
stos
cld
stos
imul
dec
inc
sbb
sub
andb
scas
sbb
les
addr16
lods
cmc
insb
xchg
mov
in
mov
or
fstl
cmpsl
mov
insl
pop
shll
aaa
sub
jl
push
gs
jne
add
daa
call
in
lea
or
dec
movsl
xor
xchg
push
aas
call
arpl
fdivs
lds
jbe
add
xor
inc
cmc
dec
and
sub
inc
in
pusha
fwait
push
test
add
pop
repnz
pusha
lret
mov
cmp
sub
xchg
sub
popa
icebp
imul
pop
fcompl
adc
pop
xchg
loop
std
repz
push
loope
sub
dec
lods
decb
or
add
nop
mov
iret
and
sbb
push
in
add
dec
xchg
push
push
inc
and
mov
push
lret
push
insl
mov
enter
gs
lock
and
aas
push
sar
fwait
mov
insl
loope
rolb
dec
cmp
test
lret
xor
inc
rolb
cmp
mov
mov
dec
jae
lods
add
outsl
lahf
push
jno
leave
xlat
mov
adc
or
add
sbb
loop
loope
sbbb
inc
or
xchg
call
mov
outsb
int3
pop
push
adc
cmp
adc
insb
loop
cmp
pop
xor
sbb
or
add
test
adc
hlt
popa
mov
scas
sbb
sub
scas
adc
xchg
push
and
lahf
je
out
cld
pushf
jno
pcmpgtd
pop
push
inc
loopne
push
mov
cwtl
mov
ret
shrb
xor
xor
sti
loope
test
xor
das
fimuls
mov
test
in
and
push
js
xor
mov
cmp
jecxz
inc
pusha
inc
sub
addr16
leave
adc
ljmp
pop
cld
xor
int
inc
push
fsubrs
sub
push
xchg
mov
fsubrs
loopne
jp
mov
mov
adc
aaa
pop
inc
dec
out
popf
xor
loop
push
mov
lcall
in
sbb
fistl
lods
mov
sbb
cltd
jno
aas
and
repz
mov
gs
mov
mov
and
addr16
mov
mov
and
adc
arpl
fcomps
dec
inc
jo
f2xm1
adc
dec
orb
add
loopne
sbb
or
mov
mov
lods
loopne
push
xchg
rorl
push
pop
es
rorb
cltd
mov
je
xchg
gs
xchg
adc
dec
jbe
shll
or
xor
es
dec
add
or
paddw
pop
and
sub
mov
cs
inc
sahf
testl
push
sub
es
les
insb
mov
xor
sub
out
inc
push
scas
add
pop
mov
lea
loope
xchg
or
sub
repnz
adc
bswap
test
int3
fistpll
clc
mov
out
adc
jle
js
xchg
xor
sub
gs
icebp
mov
dec
jns
jae
or
jb
push
inc
push
sbb
sub
enter
loop
dec
dec
add
gs
or
mov
mov
insb
pop
mov
dec
into
pop
fucom
xor
daa
dec
jne
lret
out
repz
ret
into
icebp
jne
insl
xor
mov
inc
aas
insb
into
jle
mov
cmp
dec
or
daa
mov
inc
enter
out
lret
push
adc
mov
inc
pop
mov
xchg
inc
and
ja
sub
or
push
popa
sbb
xchg
mov
cmp
cmp
xor
adc
push
pop
pop
aaa
mov
inc
jb
aad
mov
push
ljmp
pop
pop
adc
les
xchg
xor
xor
and
push
aaa
cmp
sbb
pop
push
cli
dec
pop
iret
inc
and
enter
sbb
add
push
data16
mov
mov
add
xchg
popf
xor
dec
leave
cwtl
push
pop
repz
decl
cltd
arpl
lahf
jo
ret
int3
push
mov
mov
pusha
popf
jge
mov
pushf
xchg
aaa
mov
nop
add
add
mov
mov
stos
pop
mov
movsl
mov
mov
sbb
mov
jb
mov
out
cwtl
push
out
sbb
imul
or
cmp
sub
sbb
xchg
push
adc
add
inc
jle
mov
cmpsb
push
fdivrl
mov
je
push
pop
into
popa
mov
cmpsb
rcll
cld
jae
daa
mov
ret
jne
xchg
insl
in
add
dec
jp
push
add
stos
test
lods
movsl
mov
xlat
xchg
add
pavgw
and
gs
add
pushf
add
cltd
jecxz
pop
lea
sti
sti
mov
xchg
in
mov
sub
out
xchg
iret
add
int3
pop
lcall
imul
add
bound
sbb
fsts
paddw
cmp
rcrl
insb
loop
push
cld
jmp
ja
xor
rcr
pop
lret
lahf
fdivs
pop
adc
call
mov
or
dec
fs
or
out
xchg
mov
fldenv
scas
cwtl
pop
addr16
and
cmp
imul
test
lods
jns
icebp
mov
xchg
jbe
or
icebp
cwtl
arpl
jns
shrb
xor
in
mov
and
pop
sub
mov
mov
sar
xchg
loopne
lods
mov
ljmp
shll
push
fcoms
je
mov
rorb
sub
rclb
and
nop
xor
mov
push
cmp
negb
xchg
cs
test
jmp
sub
das
sbb
outsl
lret
test
data16
inc
js
cmp
pop
imulb
pop
push
xchg
jecxz
arpl
pop
insl
fistps
mov
inc
rorl
or
insl
arpl
out
dec
and
mov
testb
out
bound
in
push
mov
adc
jae
push
push
add
add
xor
cmp
lret
dec
xor
out
pop
imul
es
lret
or
adcb
xchg
or
and
sub
sbb
out
mov
jne
in
add
xorl
jecxz
pop
lods
mov
or
adc
sarl
daa
fidivrl
fidivl
in
xchg
xor
pop
cmp
jl
mov
cmp
mov
and
test
ljmp
cmc
adc
icebp
pop
cmp
sub
xchg
cmp
or
lret
jg
push
mov
dec
idivb
add
cmp
test
and
jg
inc
daa
lds
fsubrs
add
jge
aaa
jmp
in
dec
lds
or
mov
xor
or
std
test
hlt
or
into
sarl
imul
out
mov
cs
je
aam
outsb
dec
mov
add
mov
sbb
cld
je,pn
gs
inc
insb
add
in
push
pop
in
inc
int
ljmp
mov
lds
xchg
adcl
rorb
mov
inc
push
adc
adc
mov
and
push
inc
mov
es
test
push
mov
inc
jbe
jae
sub
sbb
js
insl
pop
add
or
call
nopl
mov
test
nop
popf
loopne
xchg
xor
xchg
ror
ljmp
addr16
out
clc
jg
imul
daa
mov
insl
cmp
enter
xchg
movsb
imul
fstpl
cmp
scas
pushf
cmp
mov
sub
dec
or
ja
cmpsb
out
mov
mov
cmp
sub
outsl
scas
jne
lret
scas
mov
pop
jno
jle
cmp
mov
mov
loop
int3
fbld
push
mov
mov
popf
mov
pop
lock
sahf
inc
shrl
push
mov
mov
loop
jbe
outsl
movsb
test
aaa
mov
xchg
cld
sub
and
cmp
popf
xor
roll
scas
ss
and
rcll
pop
stos
repnz
add
scas
nop
push
bound
add
imul
aad
adc
cmp
xchg
sub
mov
jno
xchg
or
fs
or
shr
inc
sar
jg
xchg
leave
lcall
cltd
sbb
inc
inc
xchg
das
fisttps
jle
jmp
cwtl
arpl
cmp
into
pop
bound
ficoml
sbb
mov
jl
jns
fcmove
add
aam
cli
outsl
aad
sub
dec
add
sub
sbb
add
in
lcall
mov
rdpmc
inc
ljmp
loop
test
iret
pop
sbb
out
mov
xchg
out
fcomp
pusha
pop
inc
inc
dec
dec
dec
or
iret
sahf
xchg
push
in
push
jecxz
inc
pop
push
ror
cmc
aas
push
popa
push
jge
and
xchg
pop
fadds
ds
inc
jno
push
jecxz
and
cwtl
sub
fstps
notb
iret
jecxz
fs
fistl
mov
push
push
push
mov
xchg
adc
movsb
je
sub
xchg
inc
sti
fsubrl
sbb
lret
addr16
or
pusha
test
outsl
pop
dec
push
adc
sti
sub
hlt
cmpsl
mov
lock
pop
std
jp
mov
ret
jecxz
mov
adc
dec
xchg
fs
das
rorb
ja
std
fimull
push
push
aaa
sub
inc
divl
popa
jbe
jnp
in
rcll
adc
add
js
into
push
push
sbb
xchg
sbb
xchg
mov
cltd
aam
pop
xor
cmp
add
fs
clc
lods
insb
pop
cmp
loop
jns
imulb
fsub
push
fstpt
jmp
xor
repnz
repz
test
lods
inc
leave
scas
into
das
test
out
inc
testl
lret
jo
addr16
or
dec
ficoms
jecxz
dec
xchg
rcr
sar
aad
pop
lods
insb
rcr
dec
xor
pop
sarw
sbb
jae
pop
shl
rcrb
cmpsb
xchg
out
clc
xchg
cmp
cs
ds
rcll
xchg
mov
push
imul
cmp
sbb
mov
mov
add
jo
pop
jl
or
sub
cmp
test
test
adc
dec
imul
int
push
add
aas
mov
push
cltd
jae
mov
pop
pop
sbb
push
pop
xchg
cmp
cltd
test
shlb
insl
push
lahf
inc
sbbl
sbb
fldcw
scas
in
or
push
test
les
and
pop
outsl
sbb
push
sbb
xchg
jne
xchg
cli
or
ffreep
or
cwtl
adc
inc
cmpsb
sub
or
faddl
xchg
mov
xchg
mov
pop
cli
jo
mov
xchg
dec
sub
jne
mov
inc
mov
add
adc
xor
shr
cs
dec
or
xor
jp
cmpb
sbb
inc
lret
scas
jae
int
ja
sub
dec
fldcw
stos
dec
stos
cmpsl
cwtl
and
xchg
xor
sbb
add
pop
mov
mov
mov
or
adc
push
aam
lcall
pop
sub
es
and
scas
icebp
in
mov
mov
push
and
lods
test
inc
mov
xchg
cmp
push
cmp
cmp
xchg
mov
jne
iret
test
mov
push
fistl
cmp
lret
ljmp
imull
xchg
cmp
fst
mov
push
sbb
jle
mov
sbb
and
scas
leave
xor
loopne
sbb
and
push
pusha
mov
jmp
test
cmp
fcoms
mov
je
xchg
adc
in
ficoms
inc
add
and
mov
inc
push
bound
push
pusha
fidivs
dec
in
stos
aad
ret
ret
cltd
or
cltd
jb
adcb
mov
rcrl
mov
lahf
jmp
xor
aam
mov
stos
rclb
ret
xor
jbe
or
adc
lods
add
sbbl
sbb
test
mov
push
xchg
cmp
xorb
mov
lahf
aaa
data16
inc
cmpsl
nop
iret
arpl
lock
xor
scas
popf
stos
js
es
xchg
mov
in
int
lock
rcrb
stos
mov
adc
xchg
scas
cmp
cmp
sub
jae
pavgw
and
lcall
mov
je
mov
cmp
cltd
pusha
scas
repz
aaa
test
test
scas
ret
fdivr
jb
jne
jae
sub
daa
push
jo
xchg
fldcw
sbb
lds
jl
cmpsb
dec
mov
adc
lock
lods
inc
test
mov
and
pop
adc
stos
cwtl
orb
push
in
and
dec
pop
jge
push
fs
shrl
dec
add
pop
push
test
xor
xor
lea
ja
je
fiadds
outsb
mov
test
test
mov
add
xchg
shl
mov
adc
push
stos
iret
adc
xor
pop
push
outsb
bound
mov
mov
shr
loop
repnz
add
adc
and
xor
pop
push
outsb
bound
mov
mov
shr
loop
repnz
add
adc
ds
inc
pop
push
outsb
bound
xchg
pop
mov
into
shr
loop
repnz
inc
adc
xor
dec
push
outsb
mov
andb
mov
push
sub
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
cld
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
add
add
jl
add
je
add
insb
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
add
add
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
add
add
add
add
add
adc
add
sbb
add
and
add
aaa
add
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
add
add
push
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
faddl
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
pop
add
fs
add
pop
pop
add
push
pop
add
dec
pop
add
inc
pop
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
pop
add
mov
pop
add
rolb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmull
add
in
add
in
or
add
or
add
or
add
add
pop
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
