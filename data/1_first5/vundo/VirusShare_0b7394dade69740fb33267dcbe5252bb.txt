jl
add
fcoms
add
imul
add
lds
add
jl
add
add
add
aaa
lcall
js
add
bound
add
add
pop
lcall
jno
add
sbb
add
sub
add
add
add
add
add
outsb
add
xchg
add
das
add
jl
add
lret
cltd
add
jl
add
jl
add
jl
add
cs
gs
jne
je
add
add
add
js
add
bound
add
add
push
sub
add
add
sbb
pushf
add
jl
add
jl
add
jl
add
inc
outsl
add
jl
add
xchg
lahf
add
xchg
add
lahf
add
jl
add
adc
add
mov
sub
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
add
imul
add
jo
add
inc
add
jb
jae
outsl
add
inc
add
add
imul
add
je
add
add
add
add
and
dec
add
ja
and
push
add
insl
add
outsb
add
add
add
outsl
add
popa
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
inc
add
imul
add
add
nop
hlt
inc
adc
adc
fisubrs
pop
out
rclb
cwtl
mov
pusha
add
add
push
mov
call
pop
pop
ret
dec
mov
add
add
orl
shrb
insl
add
add
and
add
add
add
inc
or
jmp
add
add
add
add
add
dec
add
push
add
and
andb
repz
add
ds
add
push
pop
pop
ja
jp
inc
mov
je
fs
mov
in
roll
jecxz
sbb
jbe
add
push
pop
mov
mov
mov
jmp
or
or
jmp
test
mov
cld
test
testl
in
pop
cmp
rclb
movb
push
repz
inc
dec
js
movsb
add
add
push
adc
cmp
push
insb
xor
adc
mov
lea
add
jmp
popf
adc
incl
std
inc
add
push
shlb
cmpsb
cld
add
repz
push
jne
jl
add
add
cmp
add
stc
inc
clc
call
add
sbb
xor
insb
addl
in
add
sarl
and
add
pusha
jae
add
add
insl
lahf
roll
inc
xlat
outsl
jne
adc
jo
pop
inc
imul
insl
inc
jns
roll
stc
inc
mov
inc
add
push
imul
sub
insb
insb
dec
outsl
gs
jne
outsb
jb
xor
inc
testl
add
jns
add
add
dec
add
jae
add
add
inc
add
jmp
add
add
add
add
add
sub
add
add
add
mov
repnz
rorl
lret
push
cltd
sbb
int3
lds
sbb
popa
mov
adc
iret
mov
sub
sbb
or
daa
cmpsl
mov
pusha
push
test
mov
loop
inc
outsl
into
jp
stc
cmpsb
pop
out
cmp
ljmp
and
or
rcrb
in
cmc
hlt
push
push
vpperm
jmp
add
lods
imul
pop
mov
shr
pushf
mov
xor
cmpsl
mov
inc
cli
sbb
pop
cld
xor
cmp
cs
loope
or
lods
ja
rcll
jge
in
gs
inc
aaa
adc
lret
mov
mov
or
mov
inc
push
mov
les
jg
mov
div
xchg
and
das
jb
push
data16
cmpsl
inc
stos
inc
mov
popf
xor
repz
lahf
push
je
out
pop
int
in
cmp
orb
sbb
fsubrs
int3
rcrl
and
mov
mov
pop
cld
lret
xlat
mov
js
xchg
adc
jle
aam
sub
xchg
inc
loop
insb
dec
push
sub
clc
bound
xor
or
xchg
lock
or
and
and
in
xchg
cmp
cmp
push
insl
push
pop
sub
inc
mov
pop
adc
sub
inc
jle
inc
rclb
push
mov
cmp
inc
sahf
mov
xchg
ret
test
call
cmc
movsb
or
xchg
dec
pop
adcl
push
out
cmpsb
push
jbe
jge
loope
ss
cmp
mov
mov
or
imul
dec
bound
pop
cld
mov
push
jmp
mov
test
mov
scas
cwtl
mov
cmp
jae
pop
add
cmp
int3
cmpsl
push
icebp
rcll
mov
add
stos
std
dec
arpl
mov
je
idivl
out
mov
out
sub
add
mov
inc
call
cmpsl
enter
dec
stos
scas
cmpsl
dec
pusha
pop
dec
fwait
and
inc
adc
ret
cld
push
fists
sbb
hlt
push
je
xor
sub
scas
test
call
aam
add
lock
xlat
push
dec
ss
aad
out
enter
loope
xor
xor
mov
aas
into
pop
add
push
out
stc
mov
scas
push
daa
ret
pop
aas
es
iret
outsb
lods
shlb
nop
xor
or
lret
mov
cmp
or
inc
cmp
jg
dec
adc
dec
jle
aas
sbb
sub
cmc
or
mov
hlt
call
insl
cmpsb
fyl2xp1
cmp
mov
xlat
jg
int3
subb
loope
inc
mov
lods
or
vpcmpgtb
mov
stc
cmc
jne
xchg
es
jne
cli
dec
cmp
sub
loop
addb
int3
arpl
lock
push
mov
rcll
int3
jmp
sub
imul
js
test
bound
fwait
addl
popl
mov
insl
gs
fisubrl
mov
pop
loope
xchg
inc
insl
jo
inc
jecxz
outsl
xor
mov
pmulhw
repz
mov
lahf
and
aad
sbb
sti
sub
in
cmp
push
enter
add
and
and
add
dec
xchg
jle
mov
jns
das
jp
adc
in
dec
xchg
lea
mov
cmpsl
addb
stc
fldl
gs
ret
imul
push
int
adc
pop
aas
xor
adc
subb
movl
mov
adc
mov
notb
adc
pop
sub
fldenv
jmp
inc
aam
mov
jp
adc
push
cmp
pop
icebp
jo,pt
push
fs
arpl
lret
clc
dec
ret
mov
ss
mov
xor
fdivr
add
jo
dec
call
xor
cmp
adc
icebp
mov
rolb
fildl
pusha
mov
pop
pop
push
das
arpl
stc
rolb
inc
testb
jae
mov
pop
mov
and
xor
mov
dec
fcoms
jne
dec
nop
movsb
punpckhbw
popa
xchg
add
push
sbb
out
push
in
dec
mov
adc
jg
repz
cwtl
xor
pop
cli
aam
push
fwait
pop
cmp
add
aad
sub
sub
lods
mov
push
sbb
xor
ds
ret
adc
and
ret
xchg
repnz
sbb
pop
mov
leave
insb
ficomps
cmc
pop
fstl
sahf
andb
mov
setbe
andl
testl
inc
bound
mov
jno
xchg
scas
add
push
into
sub
mov
test
testl
cmpsb
xor
add
sub
mov
sti
inc
mov
push
add
jnp
jg
mov
pop
sbb
fadd
inc
inc
mov
cmpsb
push
push
cmpsb
das
dec
aas
jbe
xchg
inc
mov
std
popf
inc
ds
rcll
fildl
mov
fs
jae
sar
test
push
js
cmp
xorb
xor
and
push
leave
add
jno
sbb
sbb
pop
or
cmp
es
stos
cmp
push
jnp
jge
pushf
shll
and
jl
sub
in
mov
sub
inc
push
shlb
or
scas
push
inc
mov
andl
adc
pop
ret
xor
and
icebp
push
push
mov
push
push
or
xchg
push
add
lods
mov
das
jae
or
push
cmpsl
lods
lea
inc
xlat
ds
mov
mov
add
xor
sbbb
add
dec
icebp
xlat
std
cmpsb
inc
arpl
mov
lea
jns
aaa
and
ret
jne
mov
scas
sub
je
mov
enter
pop
imulb
pusha
adc
ss
add
inc
mov
mov
add
and
mov
int
xchg
idivb
xchg
andl
leave
mov
mov
sbb
jge
mov
xchg
in
and
shl
cmpsl
add
shrl
cmp
xchg
dec
sbbb
jo
test
mov
add
jl
pop
lret
mov
mov
dec
push
sub
das
or
dec
clc
inc
mov
dec
pushf
mov
dec
lds
in
push
mov
out
pushf
xchg
imul
clc
ss
mov
repnz
cmc
subb
mov
cmpsb
loopne
ljmp
push
pop
lahf
adc
push
mov
ljmp
cwtl
mov
ljmp
xor
jp
mov
mov
daa
pop
push
dec
std
sub
out
test
xchg
push
call
push
jg
xchg
pop
inc
pop
push
mov
into
xchg
dec
test
jle
jl
mov
ret
fs
rcl
mov
ljmp
jle
mov
push
dec
sub
inc
mov
stc
sub
lods
mov
push
daa
or
sarb
mov
or
jecxz
test
aam
loopne
mov
dec
pushf
outsb
add
and
mov
mov
icebp
mov
aad
movsb
push
cmc
push
clc
lret
adcl
sbb
inc
setbe
mov
in
pop
into
xchg
xor
das
or
push
and
fstl
insl
rcrl
mov
into
sbb
and
cmp
dec
mov
jbe
loop
xor
cmp
ret
aad
inc
dec
mov
xchg
add
or
in
sbb
xor
out
jb
js
rcl
xchg
fstpt
cltd
pop
xchg
ficompl
xor
call
movsb
mov
aaa
ret
or
fdivrl
xor
xchg
shll
pop
gs
pusha
lahf
cltd
xchg
out
filds
mov
sub
jecxz
ds
fnstsw
fs
and
pop
call
xor
stos
add
push
mov
into
std
xchg
jne
sbb
icebp
movsl
add
int3
xchg
adc
cmpsb
inc
cmpsl
push
aaa
mov
push
mov
scas
je
inc
add
mov
hlt
mov
cmp
iret
sbb
mov
jbe
xor
add
sub
in
popf
pop
ja
hlt
sbb
jno
pop
jno
cmpsb
mov
fcos
mov
adc
xor
pop
inc
or
cmpsb
in
jne
sar
pop
mov
push
ret
jg
dec
aas
cmp
jge
xor
cmp
in
xchg
mov
lret
pop
int
mov
loope
outsb
cwtl
dec
cmp
and
sbb
cmp
inc
xor
or
and
enter
pop
mov
mov
mov
lds
int
sub
outsl
mov
jno
loop
sub
nop
out
add
add
jp
out
das
xor
cmpsl
fcompl
std
mov
int3
out
jb
xor
xor
adc
ret
jmp
mov
scas
pop
in
arpl
loope
jg
fisubs
mov
push
mov
call
push
jle
out
inc
push
in
sub
inc
out
lods
dec
mov
inc
pusha
neg
out
or
cmpsb
xchg
adc
rcl
push
in
or
push
in
jb
pop
mov
mov
sub
stc
lahf
sbb
sub
rolb
std
mov
ret
jg
jns
test
mov
jmp
fisttps
fistpl
out
cmpsl
fs
mov
mov
fbstp
dec
mov
jnp
imul
enter
cli
dec
pop
scas
mov
hlt
push
adc
ficoml
adc
in
je
mov
mov
lock
sbb
stos
fistps
cmpsl
cmp
cmp
iret
stc
xchg
pop
or
fs
jae
dec
and
sbb
push
xorl
xchg
out
jl
arpl
call
int
in
pop
mov
es
xor
shll
xchg
xor
jp
stos
fcmovne
mov
insl
imul
xor
fs
mov
div
push
xchg
xlat
test
add
popa
aad
mov
nop
xor
ja
insl
outsl
fstpt
pop
mov
jecxz
jnp
push
push
adc
adc
fidivs
and
repz
pop
fmuls
sbb
inc
pop
std
js
sbbb
mov
stc
pop
cltd
inc
or
mov
leave
push
jmp
ss
jle
lret
add
negb
cltd
sarl
pop
mov
pop
inc
jb
fsubl
jmp
push
mov
aas
mov
add
mov
pushf
xorb
jbe
icebp
xchg
loopne
sbb
pop
inc
pop
js
in
stos
repnz
in
mov
fcomip
mov
dec
xor
mov
shl
popf
xchg
imul
sbb
sub
sub
sub
faddl
je
in
fwait
lsl
fildl
lods
orl
dec
add
lret
loopne
scas
lea
jecxz
push
loopne
les
in
push
dec
xor
lret
hlt
ret
lock
aad
in
sub
sub
and
jle
into
mov
out
dec
in
mov
mov
push
sbbl
pop
outsl
cmpsb
mov
cltd
or
std
jb
mov
mov
clc
lea
jbe
mov
xchg
into
xor
inc
mov
push
pushf
push
dec
mov
sbb
clc
inc
cmp
cmp
inc
and
out
loopne
cmp
das
jne
aam
mov
sbb
pop
imul
test
inc
stc
sbb
adc
aam
lock
insb
es
shrl
bound
push
imulb
or
cltd
pushf
out
vpaddb
xlat
cmp
or
je
mov
xchg
add
loope
add
pop
andl
and
movsl
inc
or
fbstp
xchg
dec
roll
mov
push
test
outsl
es
jno
call
fcoml
pop
pop
jae
les
cmp
pop
cmpsb
loope
dec
push
add
clc
icebp
push
jg
lea
fisubrl
imul
inc
mov
add
jae
lcall
lods
xchg
mov
in
imul
data16
jle
mov
les
push
in
adc
test
out
outsb
dec
dec
sub
add
xor
imul
ret
pop
pop
les
cmpl
push
stos
popa
xlat
cmp
rorb
loop
jae
cmc
test
orb
pop
cmp
sbb
test
or
test
stos
test
dec
test
jno
aad
clc
pop
rcrl
mov
adc
sub
sub
cmp
mov
ja
or
int3
arpl
push
aas
mov
push
std
testb
xchg
pusha
outsb
shrb
fidivrl
xchg
add
bound
lret
movsb
cmp
jae
jbe
mov
sub
cmc
xor
dec
enter
mov
arpl
adc
scas
rclb
xor
xchg
inc
inc
jmp
and
imull
pushf
nop
jbe
xor
movl
ret
insl
insb
imul
adcb
jecxz
mov
in
dec
sub
xor
test
int3
pusha
fldcw
loope
adcl
clc
adc
mov
dec
cmp
dec
cltd
jge
xlat
pop
mov
ljmp
aad
scas
and
jno
std
or
test
adc
in
out
jl
decl
cli
mov
pop
lods
loop
fwait
inc
cmpsb
dec
jnp
xchg
xchg
sub
add
push
jp
leave
push
mov
xchg
notb
sub
add
imul
insb
pop
pop
xor
dec
pop
xor
iret
popf
sbb
sub
outsb
cli
mov
lret
dec
jbe
jecxz
test
insb
shll
push
add
jecxz
leave
fsts
ljmp
xor
pop
sti
and
lods
shr
mov
jp
pusha
inc
clc
dec
mov
jae
cmc
and
xchg
fadds
pop
and
xchg
out
or
add
out
inc
sbb
loope
in
inc
sarb
aas
aaa
lcall
xor
movsl
cltd
add
inc
cs
jmp
push
arpl
pop
gs
xor
repnz
and
sbb
add
out
mov
roll
dec
push
and
repnz
mov
ret
adc
out
test
pop
or
pushf
out
jg
testl
sub
xchg
mov
or
dec
cmp
in
jle
mov
sbb
stc
hlt
mov
jecxz
or
insl
lea
pusha
xor
or
ficoms
jnp
mov
stos
mov
pop
or
mov
popa
repz
push
dec
cwtl
pop
push
cmp
out
mov
lret
xchg
xchg
push
scas
arpl
dec
cmp
cmp
or
stos
fstps
scas
push
push
mov
movsb
mov
loope
das
mov
pop
in
outsl
mov
mov
pushf
sbb
iret
hlt
jne
mov
adc
xchg
jns
mov
pop
xor
add
sub
popf
pmaxsw
mov
sub
mov
or
xchg
repnz
adc
pop
pop
xchg
ljmp
fwait
or
jge
fldcw
jmp
jle
dec
jp
scas
insb
sti
mov
aad
shll
fnstcw
arpl
mov
ljmp
cmpsl
push
roll
iret
scas
rcrb
call
daa
dec
sti
es
cmc
cmc
mov
mov
das
movsb
inc
jno
xor
cltd
xchg
cmc
fs
fidivrs
push
or
mov
sbb
push
fstps
cltd
popa
push
fs
xchg
fwait
cli
inc
add
add
cmc
les
in
mov
mov
out
roll
stos
fmull
mov
jecxz
pop
jmp
mov
lcall
xchg
mov
xor
lret
in
repz
or
dec
push
push
ficompl
dec
mov
popa
dec
hlt
sub
cwtl
mov
cltd
lcall
xor
stos
add
sbb
xor
stos
mov
cli
pop
outsb
push
rcrb
adc
dec
xor
inc
in
or
cmp
cs
dec
bound
xchg
xor
cmp
inc
out
mov
sub
clc
dec
push
rclb
sbb
jns
out
lods
cli
push
testb
cli
fs
arpl
pop
pop
in
stos
adc
lcall
jae
inc
jae
out
daa
pop
fisttpl
dec
xchg
sbb
mov
mov
popa
ljmp
adc
sub
daa
sbb
divb
xor
les
clc
and
stos
cmp
add
mov
add
ficompl
xchg
or
lahf
cld
in
ret
lods
cld
jae
sti
lret
test
push
jl
xor
sub
les
or
mov
add
test
adc
pop
sub
clc
bnd
subb
mov
push
ret
dec
lahf
xchg
repnz
push
aas
aaa
adc
xor
inc
push
jecxz
mov
pusha
sub
cltd
cmpsl
mov
or
outsl
push
iret
pop
ljmp
mov
push
mov
jl
dec
leave
add
sub
xchg
aam
in
and
lds
lahf
inc
mov
dec
sbb
adc
pop
xchg
sahf
add
add
dec
lds
sahf
fidivl
and
test
cs
lcall
inc
mov
inc
aaa
lahf
and
dec
sub
push
mov
jns
xchg
push
lods
jecxz
xchg
insl
enter
push
jbe
cmp
fcmovnu
cmc
out
push
sbb
mov
out
test
cwtl
mov
and
jno
or
outsb
fistpll
cmp
dec
inc
mov
sbb
jmp
into
adc
xchg
sub
jae
pop
mov
adc
pushf
push
inc
cmp
iret
adc
int
std
add
enter
adc
mov
and
imul
inc
je
jp
aam
cmp
insb
or
cmp
xchg
sub
jmp
lods
mov
inc
sahf
fwait
push
fildll
pusha
daa
push
je
cltd
inc
mov
pop
popa
in
lea
dec
adc
or
jecxz
insb
push
jno
stos
rcrl
iret
push
xor
daa
outsb
mov
push
ret
out
dec
cltd
jecxz
sti
es
mov
iret
mov
divl
test
mov
xchg
insb
jecxz
nop
imul
fsubr
test
mov
loopne
test
xchg
je
mull
hlt
fcoml
mov
cmp
ja
adc
lea
push
enter
stc
iret
lret
imul
ja
nop
fcoms
or
xchg
mov
comiss
mov
sbb
mov
jge
jl
or
xor
daa
mov
stos
add
cli
xor
data16
pop
cld
add
cmpsb
or
sbb
mov
push
int
into
pop
cmp
xor
aaa
ja
lds
leave
ds
xlat
and
int
mov
inc
ss
cmp
fnsave
push
xchg
jmp
ss
lods
xor
test
push
add
sbb
mov
add
add
add
add
sub
add
add
add
mov
add
add
cltd
add
ret
add
imul
cmp
add
add
add
mov
add
add
addb
lods
add
rolb
add
add
or
dec
add
jb
add
add
add
add
arpl
orb
add
ljmp
ja
mov
dec
int3
int3
int3
int3
int3
push
mov
sub
lea
push
push
push
pushl
call
cmpl
je
mov
cmp
je
call
movl
call
cmpl
jne
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
mov
push
push
push
push
push
pushl
call
pushl
call
call
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
xor
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
inc
inc
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
jmp
call
call
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
push
pushl
call
mov
pushl
pushl
pushl
push
push
call
add
pushl
call
cmpl
jb
call
mov
pop
pop
pop
leave
ret
add
add
or
add
gs
add
add
add
ret
add
add
cmp
add
add
imul
daa
add
add
std
addl
add
repz
add
mov
add
test
adc
cmp
cmp
lods
add
add
mov
jae
mov
imul
add
jbe
push
inc
aaa
jns
mov
fsubrs
fidivrl
mov
adc
mov
lea
inc
scas
adc
and
test
incl
in
xor
add
shll
mov
pop
push
adc
xor
out
mov
shll
decl
mov
rcrb
inc
rolb
jg
cmpl
test
xor
push
push
call
cmp
add
pop
push
adc
adc
push
sti
repnz
adc
mov
clc
inc
roll
add
incl
aad
add
add
mov
pop
add
lock
jns
add
add
add
cltd
fildl
sub
clc
leave
ret
add
push
push
xor
gs
imul
inc
ljmp
xchg
popa
sub
inc
push
popa
jl
inc
outsl
insb
xor
add
mov
mov
jb
fnstcw
pusha
push
add
fs
add
add
test
add
add
ret
add
add
cmp
add
add
imul
push
add
add
mov
stc
repz
add
sub
movsl
xlat
mov
cltd
adc
and
fsubrl
jmp
mov
scas
mov
dec
cld
sub
jge
movsb
cmp
aam
mov
gs
fcoms
xlat
call
jnp
shr
jmp
dec
jp
or
insl
jle
fdivs
addr16
fcomps
daa
cmc
addb
pop
enter
test
fwait
inc
insl
lret
imul
stc
cs
in
loop
mov
scas
cmp
cwtl
inc
push
fwait
push
in
lahf
popf
adc
pop
ja
pop
mov
call
cmp
cmp
cmp
or
mov
mov
aad
cmp
sub
hlt
push
or
fnstenv
cmp
outsl
aad
loope
and
jne
dec
jl
inc
int
dec
into
in
incb
pop
mov
imul
mov
pop
outsb
fbstp
adc
dec
ja
cmp
xchg
jl
jns
or
mov
movsb
jp
aad
in
pop
lret
adc
jno
push
adc
push
popa
and
pusha
mov
sub
addr16
xchg
push
or
mov
aam
pop
dec
cli
mov
mov
add
cmpsl
std
daa
lods
adc
in
and
imul
arpl
lea
adc
gs
fisttpl
les
xchg
ror
fwait
into
in
inc
in
xchg
push
out
and
jb
stos
outsl
jnp
pop
aad
lock
xor
cli
xchg
inc
ds
jp
mov
and
aam
in
rolb
ja
adc
int3
xor
xchg
fimull
fldenv
xchg
mov
mov
jo
mov
daa
push
sub
scas
test
jnp
mov
mov
fcoms
in
pop
pop
sbb
xchg
imul
pushf
fsubs
lods
inc
mov
clc
lcall
aas
sub
hlt
scas
xchg
pop
scas
fcoms
jmp
outsb
adc
ljmp
push
fs
lahf
inc
bnd
outsb
xor
fwait
jecxz
mov
ljmp
inc
dec
sub
aad
in
mov
mov
stos
adc
inc
and
lea
xor
adc
jecxz
jp
fsts
fcomps
push
xchg
hlt
add
jae
push
sub
sti
lods
inc
jp
pop
or
loope
adc
cmp
arpl
add
jl
loop
push
cmpsb
mov
rcrb
pop
arpl
or
lcall
repnz
mov
stc
ja
jp
sbbl
out
inc
mov
mov
movsl
push
cmp
mov
mov
jbe
insl
aad
scas
ret
jno
cs
out
fbstp
aam
or
jl
insl
dec
out
adc
adc
out
lods
out
gs
jbe
in
jb
popa
push
dec
pop
jg
xchg
in
hlt
arpl
aaa
dec
mov
cld
lahf
ret
fwait
mov
ret
rcrb
dec
cmp
and
cmpsl
fsub
push
mov
sti
cmpsb
jmp
or
sbb
jge
ss
inc
movsl
lods
popa
lret
sub
sbb
fwait
adc
mov
push
sti
jle
ret
roll
mov
fdivrp
rdtsc
negl
repz
repnz
test
xchg
je
or
jbe
pop
out
shrb
arpl
xorl
cmp
out
mov
push
mov
push
add
cwtl
or
fidivrl
leave
mov
add
mov
pusha
and
and
mov
scas
sar
mov
aaa
lods
pushf
mov
push
nop
cmp
push
imul
sub
adc
ss
mov
or
clc
dec
fsubs
fs
jbe
adc
gs
int
adc
adc
mov
aaa
stos
out
mov
add
jl
aam
jp
into
sti
add
inc
fsubrp
test
cmp
mov
clc
cli
push
dec
insb
stc
nop
pop
fdivrl
cwtl
push
mov
xchg
ss
enter
push
mov
sub
lods
mov
push
gs
sub
in
sbbl
lahf
sahf
bnd
pop
movsb
stos
lea
jmp
jbe
popa
mov
fists
push
xchg
popf
movsl
movl
arpl
and
test
xchg
pop
js
and
jl
daa
pop
leave
cmp
dec
aaa
pop
cld
sbb
fdivrl
mov
les
push
adc
xchg
lret
sub
fwait
jno
mull
out
sti
fisttpl
xor
add
pop
add
or
test
int3
sbb
cs
push
cli
out
shll
xchg
mov
aam
movsb
aad
dec
lahf
dec
stc
pop
push
das
and
push
jae
adc
test
adc
icebp
pop
rclb
or
sbb
inc
cld
dec
outsl
ret
xlat
mov
hlt
sub
clc
js
int
scas
popf
data16
fwait
cmp
insb
xchg
inc
jbe
cld
in
mov
inc
insl
les
aas
or
lock
mov
pop
xchg
pop
push
sbb
pop
data16
aad
jp
lods
mov
stc
mov
outsb
inc
xor
xchg
cmc
jle
fsubs
sub
mov
jg
add
fcoml
xchg
mov
es
dec
pop
cmp
push
mov
ror
lods
je
jbe
pop
test
lea
adc
out
mov
and
in
roll
movsl
cmp
leave
aas
mov
add
movl
sbb
aas
cmp
data16
jnp
out
sbb
mov
cmp
adc
push
adc
inc
push
cmpsb
out
in
je
cli
fsubl
hlt
jbe
sub
xchg
add
pop
addb
add
or
aam
dec
jg
sub
add
cs
mov
ret
push
hlt
stos
jecxz
mov
ret
pop
ds
xor
push
and
sti
sub
xchg
cmp
mov
aam
dec
and
mov
insb
add
lret
aam
dec
adc
mov
jecxz
imul
das
inc
mov
into
in
push
daa
dec
xchg
stos
mov
outsb
jle
fwait
sbb
push
cltd
out
bound
ret
daa
xor
xorl
and
imul
push
or
int
xorl
mov
les
movsb
test
pop
ds
dec
out
ret
aas
xchg
dec
stos
popf
iret
loop
push
sub
out
aaa
sti
mov
mov
mov
cmpsb
addl
insb
cmp
cwtl
into
jg
jb
fnstenv
and
ljmp
dec
inc
xchg
mov
fnstenv
mov
cmp
jl
rcl
mov
mov
fistpl
jecxz
mov
jge
sbb
jo
imul
adc
dec
test
scas
xchg
leave
mov
push
adc
idivb
stc
aas
mov
push
push
mov
into
int3
xchg
and
jle
or
pop
andl
lock
cli
or
subb
leave
loopne
bound
call
in
stc
in
xchg
ficoms
push
adc
lcall
jle
rorb
lds
pop
gs
sahf
jb
and
cmp
stos
repnz
xchg
es
aam
lret
add
nop
insl
sub
inc
aam
test
imul
hlt
lods
jl
pushf
aas
inc
dec
mov
inc
pop
out
push
daa
jb
sti
sbb
enter
xor
adc
aam
cmpsl
hlt
fldl
clc
popf
jg
stc
ret
addl
jae
idivl
inc
ljmp
pop
in
and
stos
xchg
and
rcll
sbb
bound
push
inc
jecxz
in
lcall
leave
add
pushf
out
lea
add
aad
xchg
cmc
cmp
xchg
cli
pop
xchg
inc
insl
inc
add
adc
pop
mov
lahf
test
in
dec
pop
in
sbb
in
popf
lea
pop
in
popf
iret
rcrl
pop
inc
xchg
jno
sti
and
and
add
negl
jecxz
mov
test
mov
cmpsl
cmpl
sbb
jle
adc
imul
cmp
mov
adc
dec
jge
aad
sahf
lret
sub
sub
inc
daa
ss
arpl
inc
mov
push
stc
xor
icebp
and
mov
and
mov
test
call
sbb
imul
cmp
lahf
inc
xchg
or
cmp
or
sub
insb
and
push
mov
pusha
fdecstp
xchg
jg
hlt
adc
imul
fildll
outsl
jbe
mov
nop
xorl
andb
pop
push
pop
pop
sti
loope
inc
add
outsl
cmp
jb
shlb
pusha
cmc
mov
test
int
repnz
push
outsb
mov
mov
sub
testl
xchg
nop
loopne
push
test
fbld
pop
or
mov
lret
xor
and
fwait
jbe
mov
setge
lods
push
and
shll
or
out
mov
dec
fsubl
loope
mov
int
lahf
push
test
push
fdivrl
lods
mov
inc
inc
aas
mov
sbb
sbb
pop
mov
adc
aas
sub
call
mov
rolb
push
sub
pop
mov
dec
adc
test
les
mov
popa
ds
lret
imul
pushf
repnz
andb
inc
pop
shlb
jnp
xchg
leave
lods
aas
mov
loop
pop
imul
pop
je
jb
or
jle
pop
fstps
xor
mov
pop
test
out
test
rorl
outsl
pop
mov
je
dec
sahf
les
iret
mov
movsb
sub
sarl
mov
hlt
pop
imul
lret
out
loopne
dec
xchg
scas
adc
lds
pop
stos
cmp
movntps
and
jne
sbb
cmp
addr16
add
push
and
outsl
jecxz
gs
dec
out
add
stos
adc
ljmp
jnp
inc
push
sbb
dec
andl
mov
jns
addr16
xor
inc
mov
in
push
pop
into
lahf
mov
cmp
jecxz,pt
mov
lock
add
fwait
push
gs
cmp
pushf
xchg
lods
pop
push
shrb
bound
std
test
clc
sub
sub
inc
cmpl
xchg
and
imull
shl
inc
xchg
and
cwtl
ret
push
add
or
sbb
push
fsubl
xchg
cmp
pop
scas
scas
ds
jg
push
imul
shll
andl
lods
fdivl
xlat
jp
out
mov
insl
shl
in
inc
push
xchg
jg
push
mov
add
fsubrp
sbb
lret
fmull
aam
clc
dec
and
out
and
out
dec
push
and
sbb
cmp
iret
hlt
hlt
or
call
icebp
sbb
jae
ret
pop
leave
insb
in
add
push
les
jb
xchg
clc
jmp
out
leave
xchg
mov
pop
adc
sub
push
notl
stc
mov
inc
add
cmp
pop
mov
cld
cmp
movsl
add
xchg
mov
pop
add
repz
inc
shlb
mov
lret
sub
dec
cmp
push
cmpsl
fildl
and
lods
pop
mov
bound
mov
ja
pop
lea
mov
in
add
sub
jl
jl
and
addr16
push
xor
xlat
and
cmp
test
jmp
sub
ficoms
jp
push
and
xchg
push
mov
inc
jne
cld
jp
xchg
cli
mov
mov
xor
add
aad
sbb
into
mov
fildl
mov
mov
inc
lcall
push
pop
mov
pop
push
call
push
loop
aas
push
push
gs
loopne
dec
sub
mov
lds
cmp
mov
test
adc
addr16
lea
pop
lock
or
fst
in
sub
push
cmp
es
inc
addr16
and
cmp
mov
push
imul
mov
and
dec
ds
ja,pt
sub
sbb
loop
aaa
mov
jle
add
or
fcoml
out
pop
orb
push
aas
jp
fcmovne
dec
xor
mov
stos
loop
shrb
scas
idivb
test
sbb
push
cmpsb
jge
push
xor
inc
insl
mov
divb
push
idivl
ja
loopne
stos
iret
imul
bound
xor
and
or
call
pushf
inc
xchg
cld
jnp
repz
adc
sarl
mov
int3
fimuls
mov
xchg
push
mov
fistl
dec
inc
popf
stos
adc
or
cmp
sub
stos
xchg
fistpll
fnsave
jmp
leave
shl
inc
pop
push
cltd
into
cli
fildll
mov
inc
cwtl
pop
pop
inc
daa
jno
dec
xor
xchg
lcall
dec
lcall
mov
xchg
andb
adc
and
push
push
sub
divl
push
jge
and
lret
pop
pop
aad
and
mov
in
into
dec
mov
xchg
add
out
sub
rcrl
mov
gs
arpl
in
sub
loope
and
repnz
mov
xor
ja
es
pushf
add
out
inc
rclb
cwtl
and
enter
pop
jle
dec
pop
test
mov
ret
jb
pusha
or
xor
jno
aaa
andl
mov
pushf
shlb
inc
js
imul
out
sub
adcl
xchg
xchg
aas
cltd
aam
xchg
add
and
or
jle
and
popa
lret
movsb
mov
fdivl
lret
lret
add
mov
out
fisubrl
div
sarb
aaa
divl
adc
cltd
ret
dec
sub
lock
or
mov
inc
rorl
jmp
mov
sub
std
adc
in
mov
and
fisttps
jmp
lahf
sahf
push
insb
jno
adc
ret
or
xor
jle
mov
mov
je
xor
movsl
dec
nop
sub
cmp
es
or
jbe
js
mov
hlt
xor
xchg
lret
mov
xchg
mov
shlb
mov
mov
into
aas
pop
adc
sbb
mov
into
lahf
mov
pop
sbb
mov
movsb
fmull
mov
out
push
rcll
test
xchg
ficoml
fwait
aaa
test
jecxz
loop
xor
mov
test
add
das
mov
or
repz
mov
add
cmpsb
sahf
adc
sub
jge
lods
pop
sub
inc
lahf
sti
and
mov
aas
jg
cs
fistps
fidivrl
mov
sub
call
fsubl
jne
xor
mov
jae
jecxz
mov
xor
pop
cwtl
call
test
icebp
lahf
mov
inc
add
xchg
xchg
jb
mov
loope
shrl
ja
cmpsb
lods
mov
cmp
jl
xchg
dec
rclb
xchg
dec
push
dec
mov
or
push
xor
cmp
pop
mov
jmp
xor
iret
in
test
cli
in
bound
ss
jb
gs
dec
mov
xchg
jae
sarl
jg
out
jmp
pusha
cmc
xchg
stc
dec
into
jb
inc
cwtl
mov
mov
cmc
fxtract
push
push
mov
jnp
jl
fs
inc
xlat
pop
push
mov
jp
daa
aaa
mov
mov
or
mov
pop
leave
test
imul
ja
jnp
xchg
int
sub
pushf
add
mov
sub
sub
add
sti
push
sti
jmp
shl
and
lods
sti
insb
dec
inc
dec
push
pop
daa
filds
push
pop
fs
xor
jno
into
and
movsl
jmp
jns
mov
inc
lret
sbb
ja
push
mov
jmp
cmpb
xor
and
outsb
push
rolb
popa
xor
ljmp
or
xchg
sbb
or
jbe
imul
lods
out
or
adc
jbe
adc
dec
push
inc
push
fildl
mov
sub
jle
aas
pushf
push
mov
add
mov
adc
orl
lock
inc
movsb
iret
add
scas
div
push
cwtl
add
loopne
dec
lea
cmp
jns
cmp
pop
testl
adc
xlat
stc
xor
jne
outsb
pop
enter
dec
mov
mov
sbb
bound
ss
rol
jb
scas
inc
es
sbb
jge
mov
or
loope
mov
gs
or
ror
fwait
push
cmp
mov
movsl
ljmp
popf
out
daa
xchg
outsb
test
lret
fst
into
in
mov
ret
pop
mov
push
mov
loope
into
adc
mov
test
sahf
scas
mov
aas
scas
iret
pop
sbb
jg
stos
inc
pop
enter
cmp
mov
add
pop
mov
dec
loope
or
fisubs
mov
hlt
cmc
sub
jno
lea
and
sbb
and
push
ret
inc
fidivs
in
xor
aaa
xlat
jne
inc
xchg
ret
loop
jns
repz
fcmove
lds
bound
iret
out
addr16
mov
bt
mov
in
xchg
repnz
out
arpl
out
and
pop
mov
ret
add
lret
sub
cmp
cmpsl
ret
sbb
xchg
inc
mov
mov
adc
jbe
arpl
rclb
inc
fdiv
jp
xchg
sahf
mov
int
lods
into
jb
sbb
hlt
je
adc
sbb
xchg
aad
mov
icebp
insb
dec
jl
fiaddl
sub
cltd
jb
les
mov
jne
jnp
push
js
into
inc
mov
inc
in
xchg
rorl
inc
in
cmp
clc
mulb
mov
jle
in
hlt
aaa
push
cmc
add
cmp
mov
incl
pop
mov
enter
loope
test
out
mov
lret
mov
jmp
or
push
adc
scas
ret
cmc
xlat
fstps
popa
repz
adc
inc
xchg
xchg
or
push
push
test
fwait
js
inc
and
mov
scas
mov
push
aas
mov
dec
cltd
xchg
insb
adc
push
and
dec
aas
scas
adc
inc
jge
xor
test
jno
daa
pop
mov
movsl
dec
xchg
sahf
sbb
into
popf
pop
inc
sbb
push
fistpll
adc
add
fstps
popa
scas
push
scas
ror
aaa
add
pop
pop
nop
subl
inc
jns
cmp
loope
mov
or
fs
icebp
out
pop
inc
test
and
mov
arpl
fcmovb
movsb
das
mov
or
jae
popl
lods
hlt
test
popf
xchg
jne
mov
pop
jmp
cmp
call
push
jmp
dec
cmp
sub
out
jp
mov
dec
jns
gs
ja
cmp
mov
outsl
sbb
add
in
sub
fcmovnu
mov
aam
xchg
cwtl
cmp
jp
add
xor
insb
in
adc
popa
insl
xchg
fists
cmp
loopne
add
imul
push
add
add
mov
stc
repz
add
sub
add
add
sbb
add
add
dec
inc
add
add
mov
add
jecxz
add
add
roll
add
dec
or
add
add
add
add
test
add
add
jecxz
add
add
xor
add
add
add
add
add
ja
jno
dec
int3
int3
int3
int3
int3
add
add
and
js
dec
loopne
xchg
add
add
in
add
adc
add
add
add
add
repnz
add
add
mov
popa
or
adc
inc
add
lcall
push
or
loopne
add
and
repz
push
jb
xchg
jb
outsb
out
inc
add
mull
add
fiaddl
roll
int
inc
jmp
mov
add
lret
ret
xor
ljmp
adc
push
ffree
cld
test
cld
inc
sbb
sub
push
push
lock
push
aaa
stc
or
xor
adc
repz
mov
aam
fsubl
in
xchg
cltd
adc
xor
add
add
incb
pushl
lea
incl
cs
or
cld
xor
cld
and
xor
loop
push
adc
lcall
sar
lods
lahf
repz
rcll
aam
push
push
add
cs
and
je
xchg
addb
add
ret
movb
lcall
cld
out
xor
add
add
je
outsb
insb
outsl
movsl
outsb
lahf
xor
inc
add
jo
movsl
gs
inc
outsb
outsl
imul
gs
je
popa
insb
imul
push
jne
push
out
xor
outsl
jb
gs
jae
rcrl
popa
insb
push
xor
ret
add
add
xchg
add
add
add
add
push
add
add
adcb
add
add
inc
add
add
and
adc
add
add
inc
add
add
out
iret
test
orl
push
or
fcomi
movsl
mov
out
cwtl
js
jmp
xor
sub
add
cmp
and
je
aam
daa
cmc
inc
xorb
cmp
ffree
mov
in
movsl
pusha
mulb
and
cli
push
out
pushf
sub
popa
sbb
inc
mov
jne
dec
sbb
add
loop
lods
aaa
add
jnp
jo
and
xchg
sub
xorb
iret
ljmp
add
push
insb
pop
push
in
xor
sbb
push
andb
mov
pop
and
xor
cmp
lahf
push
xchg
aam
push
pop
add
xor
mov
ficoml
bound
mov
add
lods
dec
rorl
cmpl
jle
dec
inc
movsl
xchg
jnp
shr
insb
jb
jns
adc
mov
imul
jbe
mov
movsl
jb
lods
cmpsb
loope
push
out
mov
in
jp
cs
pop
ds
stc
addl
dec
les
fcmovnu
std
cltd
cwtl
mov
sbb
aas
add
and
daa
sub
mov
fstl
sub
xchg
or
jne
xchg
shr
dec
sbb
nop
push
xchg
add
mov
lods
pop
aam
pop
insl
cmp
dec
sti
arpl
out
call
sbb
sbb
mov
adc
lods
outsl
xor
pop
pop
pop
jle
dec
call
dec
cmp
lret
cld
add
push
mov
dec
mov
jne
cmpsl
mov
sbb
and
or
icebp
jne
xor
mov
cmp
push
adc
xor
push
clc
hlt
jle
xchg
adc
xchg
xor
lea
cmp
xchg
add
ds
and
or
aam
xchg
cwtl
rorl
ljmp
jae
xchg
xchg
sbb
mov
xor
adc
subb
lea
lods
nop
arpl
lret
sbb
daa
mov
or
dec
out
and
popa
fs
xchg
cmc
ret
push
popa
pushf
inc
popa
lahf
sub
sbb
in
das
sarl
push
cmpsl
cmp
cmpsl
xchg
fmull
hlt
ja
fmuls
inc
push
jne
dec
call
push
enter
repnz
inc
pop
imul
xchg
mov
cmp
les
aam
sub
leave
jecxz
push
or
push
roll
cwtl
cli
or
cmp
or
jae
andl
add
pop
sar
jns
mov
sbb
xchg
sub
push
jge
xchg
xchg
and
xor
mov
je
arpl
cmp
xchg
xlat
sti
adc
push
test
test
pop
push
stos
and
xchg
pop
pop
push
adc
mov
dec
sub
pop
and
cmpsl
lret
cmp
aas
jge
cmpsb
movsl
in
mov
in
or
mov
xor
cli
js
in
xchg
bound
sbb
or
dec
xor
test
addr16
cmp
mov
int3
imul
nop
lea
mov
fsubrs
bound
insl
inc
call
or
js
dec
mov
lahf
xchg
fsubr
in
mov
mov
jmp
mov
outsl
gs
jne
or
xorl
cld
fisttpl
adc
iret
pop
pop
nop
inc
adc
xchg
cmpsl
lret
in
scas
mov
ds
sbb
dec
mov
inc
mov
sbb
lcall
cld
sarl
mov
or
mov
adc
movsb
mov
fstpt
lret
mov
or
outsb
inc
adc
data16
add
dec
je
iret
cmc
addr16
fsubrl
xchg
mov
arpl
push
or
add
sbb
mov
lcall
cwtl
lods
jnp
sbb
jb
xor
repz
xor
popa
pushf
imul
dec
std
repnz
xchg
ret
int3
cs
xor
xchg
push
out
arpl
inc
fwait
mov
or
sti
ficompl
jmp
popf
pop
cmp
xor
out
leave
movsl
addr16
in
mov
push
jns
fisubs
pop
push
arpl
in
add
sbb
push
mov
ficompl
sbb
jb
jnp
inc
mov
loope
adc
cld
inc
mov
aas
stc
push
mov
mov
in
scas
push
pushf
pusha
call
pop
adc
test
faddl
mov
cmpb
mov
mov
pop
add
push
idivb
xchg
jge
mov
add
aam
and
mov
dec
jl
mov
mov
repz
inc
mov
js
insl
in
lahf
sub
add
jecxz
mov
xor
cvttps2pi
pop
rcrl
xor
pop
setp
mov
lcall
test
cs
jb
and
dec
jne
lahf
xlat
xor
jb
pop
xchg
lods
jo
gs
sbb
cmp
mov
aad
orb
mov
and
sti
mov
cmp
pop
aad
insb
xchg
pop
popl
dec
dec
inc
sub
ss
jl
inc
mov
out
aam
cwtl
jbe
mov
mov
testl
and
and
xchg
or
pop
mov
pop
mov
mov
loope
cmp
ja
adc
sbb
pop
bswap
adc
xor
xor
or
mov
imulb
dec
je
add
xor
cld
adc
mov
je
mov
or
or
pop
mov
icebp
jno
fwait
dec
push
jmp
push
xchg
xchg
adc
xchg
loope
and
rep
jo
mov
fldt
mov
aaa
inc
lret
jg
jmp
add
cmp
jl
lahf
rcl
add
lcall
lcall
cwtl
dec
xchg
dec
movsb
out
jmp
lahf
std
sub
jle
int
mov
int3
mull
dec
jno
mov
dec
cmpsb
loopne
sub
mov
sarb
adc
fs
dec
or
inc
mov
scas
mov
outsb
and
hlt
xor
mov
movl
mov
inc
adc
fadds
cmc
cmp
jbe
push
insl
xchg
xor
mov
mov
sti
icebp
int
inc
sbb
xchg
cs
sub
ljmp
sub
in
pop
loope
out
sbb
lods
addr16
add
pop
imul
out
mov
int3
fists
sub
imul
jecxz
inc
and
adc
jne
and
pop
cmp
ds
mov
mov
movsl
adc
insb
inc
and
lock
ljmp
fsubrl
lods
mov
dec
fmuls
jge
js
ja
and
sbb
inc
mov
lcall
inc
pop
sti
frstor
push
leave
cwtl
ds
mov
adc
mov
pop
aam
jecxz
insl
cmp
mov
scas
mov
mov
das
mov
fcmovnu
ficomps
ds
push
dec
jb
dec
mov
fdiv
mov
ds
sbb
dec
cmp
pop
xlat
fisubrs
or
xchg
dec
aam
hlt
inc
orb
cmpb
icebp
and
push
shrb
rolb
scas
in
mov
sbb
pusha
mov
or
mov
je
pusha
out
test
inc
insl
inc
inc
jl
pop
iret
je
mov
cmp
jmp
and
adc
repz
mov
push
add
cwtl
popa
push
aas
test
mov
mov
cmp
ret
cmp
mov
cmpsb
movsl
push
ljmp
test
push
xor
inc
push
cltd
subb
fsubrs
jg
sub
pushf
dec
lea
push
out
mov
pop
mov
cmp
mov
or
mov
and
and
fs
or
fbstp
add
js
cmp
xor
pusha
sahf
xchg
fmulp
mov
adc
jmp
ud0
lret
push
das
xor
mov
fucom
or
mov
inc
out
and
stos
mov
es
mov
inc
out
sbb
push
jmp
stos
sti
addr16
inc
mov
cli
mov
es
xchg
sub
stc
mov
or
add
xchg
cwtl
inc
mov
jno
adc
sub
loop
in
scas
jle
test
lock
xor
sub
and
push
cli
int
adc
adc
popf
daa
adc
xor
ret
push
cmp
cmpsl
icebp
push
mov
and
aad
xchg
pop
mov
pop
dec
push
push
mov
jecxz
lahf
bound
push
scas
xchg
outsb
inc
imul
scas
xor
and
scas
xchg
jp
xchg
mov
enter
mov
loopne
insb
mov
push
mov
xor
inc
addr16
push
and
leave
clc
es
xchg
dec
in
jecxz
mov
jge
pop
adc
shrd
and
pop
add
and
das
insb
or
stos
xchg
add
clc
adc
push
mov
dec
insb
stos
push
mov
xor
mov
inc
and
es
push
fsubrs
xor
adc
mov
dec
or
pusha
jo
mov
fs
sahf
mov
test
mov
mov
add
adc
out
add
xchg
clc
leave
mov
dec
xor
fwait
adc
stos
loope
jp
decb
int
cmpsl
sub
fcmovb
lock
frstor
jo
push
push
jp
movsb
adc
pop
pushf
cld
mov
ljmp
inc
addb
mov
mov
sub
adc
xor
gs
mov
std
jp
pop
mov
dec
fwait
inc
push
pop
nop
imul
test
hlt
fidivrs
into
push
ja
xorl
xor
mov
cmp
or
sub
cmp
je
xor
stc
sub
aas
inc
sbb
and
int
repnz
ds
and
scas
scas
or
mov
add
rorb
fisubrs
dec
dec
inc
mov
xlat
lcall
push
and
or
sub
push
pop
dec
fcomip
repz
xchg
fs
aas
aaa
jae
pop
and
push
ja
icebp
ds
int
jle
dec
adc
in
push
enter
fmull
add
mov
subb
and
lock
pop
and
dec
stos
xchg
sub
jno
aaa
jecxz
fmul
sahf
mov
into
jle
pop
sbb
jo
mov
mov
inc
add
jbe
pop
scas
sbb
call
dec
dec
push
pushf
int
jae
cltd
mov
fiadds
xchg
mov
and
mov
inc
and
xchg
loopne
sbb
les
xor
sub
or
or
push
mul
dec
and
or
push
or
fwait
ja
ret
orl
loope
push
mov
pop
insb
dec
fistpll
and
inc
arpl
stos
cmpb
loopne
cltd
les
xchg
sub
mov
mov
popa
cld
loop
out
test
jecxz
int3
loope
mov
sbb
inc
mov
popa
sub
sarb
push
mov
insl
xchg
movsb
inc
leave
jo
mov
push
mov
lret
inc
sbb
push
stc
aaa
scas
mulb
push
scas
stos
push
dec
and
into
movsl
test
inc
lahf
sbb
out
add
mov
push
xchg
cmpsb
add
mov
inc
sub
sbb
mov
cmp
mov
mov
loopne
shll
pop
lret
cwtl
adc
jne
dec
dec
push
inc
mov
adc
in
adc
and
mov
pop
out
outsb
mov
neg
sub
outsl
add
mov
mov
lcallw
mov
mov
push
cs
leave
in
testl
xchg
fs
jbe
jo
and
jbe
cmpl
inc
sbb
mov
shrb
mov
pop
test
adc
in
xor
add
adc
dec
sub
inc
jl
mov
jmp
test
enter
mull
fildl
jg
aas
mov
and
mov
cmp
or
negb
inc
aaa
cmpsl
data16
cli
out
adc
add
mov
in
mov
repz
out
mov
mov
cmp
sub
sbb
xchg
or
in
popl
pop
mov
adc
cltd
mov
adcb
jle
pusha
arpl
push
das
cmpsl
fnsave
xor
xchg
aad
and
dec
mov
mov
movsb
addr16
dec
and
leave
sbb
fnstenv
mov
test
xor
into
mov
sbb
and
and
aad
push
popl
and
cli
sub
adc
shl
in
fmul
fwait
hlt
jg
iret
sbb
or
roll
imul
adc
add
pop
imul
adc
jne
and
push
test
jo
push
out
lods
xchg
pop
xor
ljmp
ja
loope
pushf
pop
or
jae
sub
inc
pop
loopne
inc
fs
mov
movsl
subb
in
dec
cmp
lea
and
ja
cmp
fildl
cmp
mov
sub
pushf
leave
adc
xor
sti
mul
loopne
and
rol
xchg
call
data16
roll
mov
inc
mov
fidivs
pop
call
in
hlt
and
xor
sub
shrb
pop
hlt
cmp
pop
out
xchg
push
outsb
mov
jns
and
dec
lds
addl
mov
sbb
out
insb
fstps
bound
outsb
mov
mov
inc
push
aad
adc
mov
push
lcall
jnp
mov
sub
inc
mov
aam
cmp
loop
mov
push
pushf
dec
cmp
mov
repz
jmp
fidivl
push
test
inc
jbe
and
jg
or
enter
and
into
insb
lea
shll
leave
mov
sub
fwait
push
scas
xor
mov
adc
inc
mov
fstpt
sbb
out
loope
or
or
insb
sbb
test
es
stc
fnop
jle
jp
mov
push
in
fs
or
in
lock
mov
and
movsl
fldenv
fwait
adc
push
fisubrl
scas
pop
adc
mov
push
push
rolb
nop
cmp
add
inc
cmp
data16
mov
mov
popf
xchg
rcll
xchg
pop
sbbl
mov
sbb
call
out
leave
stc
sbb
push
cwtl
mov
mov
or
push
push
jo
ljmp
and
sub
sub
jecxz
mov
pop
lds
inc
bound
pusha
hlt
ret
mov
cmp
inc
push
frstor
cmpsl
arpl
aaa
call
xchg
movl
mov
rorb
mov
cmp
and
cmp
mov
mov
test
icebp
insl
mov
jp
sub
jae
dec
jle
jbe
push
sub
ror
cld
push
rcl
repnz
pop
sbb
lock
dec
push
pop
add
popa
lock
pusha
mov
addb
xor
das
and
mov
mov
test
repnz
or
std
jns
jle
stos
lds
int
xorb
repz
dec
insb
pop
outsb
jmp
cs
popa
mov
mov
enter
sub
jp
sub
or
mov
ljmp
add
mov
dec
push
fcompl
cmc
daa
dec
loop
out
xchg
pop
andb
xchg
shl
data16
out
int3
movsl
cmc
dec
repz
mov
nop
out
pop
icebp
pop
popf
or
clc
mov
stos
fwait
dec
pop
mov
mov
push
insl
lahf
loop
push
mov
clc
xor
jae
lret
push
arpl
roll
test
cmp
cmc
push
and
add
push
pushf
cmp
stos
jmp
mov
sahf
iret
mov
scas
push
inc
adc
enter
in
test
mulb
xchg
xor
fldz
xchg
push
scas
xorl
and
and
psllq
insb
pop
xchg
or
push
xchg
push
loopne
sub
xchg
sbb
mov
inc
sbb
dec
loop
dec
push
dec
cmp
push
subl
out
add
movsl
mov
insl
cmp
sub
cltd
dec
cs
jle
das
mov
cmp
bswap
out
push
xchg
pop
fistl
pop
jns
popa
xchg
je
sub
fsubrl
mov
cwtl
mov
jb
testb
mov
enter
repz
movsb
inc
fcoms
pop
fldenv
fisubs
jnp
dec
jne
btc
push
std
mov
sbb
fucomp
pop
icebp
xor
int
push
inc
adc
shll
insb
out
mov
push
push
dec
outsl
testl
nop
stos
sbb
sub
in
sahf
ret
add
cmpsb
pusha
test
das
daa
push
xor
pusha
fs
mov
pop
pop
mov
add
das
pop
pop
push
push
pop
movsb
fs
adc
cltd
notl
lret
xlat
mov
fdivs
int3
aas
xchg
jns
mov
cmp
push
rcrb
sub
outsl
lret
push
imul
jp
xchg
stos
push
outsl
mov
push
jno
xchg
push
shrl
or
push
cmc
mov
fdivrl
mov
stos
adc
scas
mov
imul
cmc
das
add
pop
mov
sbb
fldenv
lods
fcomps
push
mov
or
inc
mov
add
jecxz
xor
xchg
sbb
inc
cs
sub
sarb
cmp
push
or
out
ja
jne
push
mov
push
fistpl
cli
sub
xor
or
xchg
sbb
ret
repz
jl
and
scas
sarl
or
mov
jb
or
insl
lods
lret
mov
dec
push
dec
int3
inc
sbb
popa
enter
addr16
stc
pop
test
mov
paddusw
es
push
mov
mov
mov
push
jg
lods
mov
int3
xchg
push
xchg
outsl
xor
jecxz
popa
sti
mov
fwait
and
cmpsb
jns
aaa
and
cld
ret
addb
lock
in
add
mov
sub
or
pop
dec
adc
inc
or
mov
inc
cmp
xor
or
add
aam
mov
jle
mov
sar
mov
ret
xor
ret
pop
add
inc
sub
leave
nop
sbb
in
aas
add
add
enter
push
test
xor
mov
test
imul
push
pop
shll
mov
mov
fists
shrl
xor
gs
push
push
add
add
mov
stos
jne
aam
cmp
cmp
mov
pop
push
mov
mov
inc
ret
ja
rcr
cmpsl
push
cwtl
adc
lahf
movsb
xchg
and
mov
or
sub
nop
push
sti
push
adc
into
inc
mov
add
lea
ljmp
jne
add
push
add
add
repnz
add
add
and
adc
add
add
inc
add
add
mov
add
add
loop
add
add
shlb
add
jb
add
add
cmpsb
push
push
pusha
sbb
xchg
testb
imul
xchg
add
add
ss
add
add
add
or
mov
in
in
ss
add
adc
inc
addb
stos
add
gs
js
js
cmp
js
int3
int3
int3
int3
int3
add
add
adc
add
jne
or
add
adc
and
add
shll
add
add
xchg
add
add
jae
add
add
inc
test
or
add
jb
push
add
add
xor
add
push
stc
add
add
xorb
jns
jne
push
jae
inc
jb
push
je
popa
jo
les
bswap
xor
jmp
mov
jnp
sub
add
xor
sahf
inc
jns
add
sbb
or
push
jae
add
cld
ljmp
insl
jno
call
jecxz
push
lock
clc
int3
sbb
dec
out
push
mov
sub
add
push
in
mov
add
call
pop
pop
push
push
je
test
loope
jl
push
cmp
test
sahf
mov
push
test
je
add
jne
or
cltd
add
or
push
inc
call
test
jle
je
clc
cld
cmp
mov
push
inc
push
push
pop
imul
ret
pop
add
adc
arpl
add
add
mov
add
add
subl
sbb
sbb
jnp
add
inc
jecxz
gs
gs
ret
outsl
popa
outsl
insb
xchg
jo
gs
and
mov
insb
inc
call
inc
fisubs
dec
dec
push
xchg
inc
xor
les
add
add
add
test
add
gs
inc
xor
add
add
mov
add
add
xorl
add
add
popa
add
add
and
jae
add
add
inc
icebp
add
add
xchg
and
add
add
push
add
add
xor
jl
rorb
mov
sub
pop
inc
notb
pop
fdivrl
ljmp
mov
gs
es
or
int3
fists
out
repz
iret
lods
pop
clc
inc
jmp
pop
mov
xchg
scas
inc
sbb
inc
ret
push
jg
or
and
and
cmp
or
inc
sub
xor
xchg
in
gs
cmp
mov
mov
jb
movsb
jb
lea
pop
scas
xchg
std
test
push
xorb
xor
adc
mov
and
jns
xchg
mov
ret
push
dec
mov
or
outsl
psllq
mov
sahf
leave
fnstenv
stos
add
sbb
push
into
fildll
shr
add
jmp
and
push
das
mov
xchg
dec
push
inc
ret
test
rorl
imul
ss
mov
mov
jne
shlb
sbb
and
push
shl
cmp
sub
sbb
and
mov
js
andl
xchg
adc
fdivrs
cmp
outsb
fnstenv
inc
scas
fcomip
iret
arpl
jp
lret
mov
movswl
or
daa
fs
cltd
push
sub
inc
lods
dec
sbb
sub
dec
cwtl
lahf
clc
loopne
gs
sub
mov
inc
iret
inc
adc
or
cmp
js
jb
imul
cmpsl
jo
mov
imul
cmp
popa
lods
or
mov
leave
jp
and
and
les
and
andl
lret
es
add
push
sbb
jne
loope
sub
cs
scas
cmp
sub
jo
jo
xchg
shl
xor
add
add
dec
xor
pop
mov
xor
xchg
int3
mov
std
outsl
inc
stos
cmp
xor
mov
in
mov
pop
mov
ret
mov
sub
test
dec
mov
outsb
js
jnp
and
xor
sbb
push
or
mov
sti
pushf
mov
insl
stc
xlat
adc
inc
js
or
lret
or
jbe
push
movsb
pushf
dec
xor
in
xchg
push
pop
push
push
jne
iret
cmp
push
mov
jmp
cltd
mov
stos
push
addr16
fcmovb
xchg
das
and
or
pop
inc
loopne
adc
out
mov
js
out
fsubrl
mov
push
lods
push
fwait
jl
add
add
loope
inc
xchg
sub
jg
fwait
jmp
lods
sbb
jecxz
cmpsl
mov
pop
cli
outsb
sbb
ret
pop
fistps
lods
mov
jnp
cmp
mov
stos
or
sbb
pop
jp
sbb
stos
das
inc
ss
sub
lods
adc
mov
movsl
mov
incl
insl
pop
movsb
icebp
jmp
jg
aas
std
and
add
ljmp
mov
mov
xor
xor
sub
jmp
popf
addr16
adc
inc
arpl
popf
push
jnp
xorl
loope
mov
or
fcoms
or
cli
in
and
adc
mov
jo
or
mov
ljmp
insl
pop
cli
ret
fstpt
into
mov
outsb
movsl
jne
test
sti
lret
jae
xchg
mov
xor
and
pop
mov
push
fnsave
in
lret
push
loop
cmp
insb
rclb
imul
movsl
pop
ss
cmpsl
and
test
hlt
cmp
shr
inc
and
stos
fists
add
arpl
or
les
push
fdivr
testl
xor
sbb
icebp
adc
rorl
add
shrb
into
scas
rclb
cld
iret
dec
outsb
in
xor
sar
push
xor
cmp
addr16
sub
mov
movsl
lock
fstl
imul
movhps
xchg
pop
sub
mov
cmpsb
insl
rcrl
lds
lock
pop
das
add
and
out
push
lcall
stos
test
inc
pusha
dec
scas
mov
push
sbb
out
mov
cli
inc
std
pop
mov
popf
cld
mov
rolb
xor
fs
add
push
mov
sti
jo
pop
mov
test
movsb
xchg
push
insl
pushl
test
movsb
fwait
stc
aad
jp
mov
movb
xchg
std
inc
insb
fcmovb
loope
popa
xchg
pop
pop
xchg
mov
and
cmp
das
leave
cmpsb
mov
adc
adc
sahf
stc
mov
push
aas
outsl
lods
ja
js
or
lock
lret
inc
and
jl
fwait
mov
sub
sbb
dec
xchg
xor
and
aas
das
push
jg
cs
and
push
lds
sbb
jg
push
sbb
out
sub
dec
js
jmp
addr16
xlat
mov
cli
xor
xlat
outsb
and
aam
mov
lret
jae
fwait
push
fsubl
cwtl
sub
push
fwait
movl
cmp
push
pop
jl
insb
push
mov
mov
jle
jo
adc
push
pusha
imul
cmp
lods
sti
xchg
inc
sbb
sbbl
jo
pop
test
mov
loope
addr16
daa
shlb
loopne
adc
cmpsl
mov
gs
rcrb
cld
das
sbb
pause
stos
test
frstor
cmpl
jl
xchg
jg
mov
mov
test
shlb
stos
sahf
mov
lahf
or
xor
cmp
xchg
dec
dec
mov
sub
idivl
adc
mov
fstps
scas
mov
ret
mov
xor
addr16
mov
lret
je
in
fidivrs
mov
cld
mov
mulb
cmpsl
sti
push
mov
cmp
negl
cmovge
aad
outsl
xchg
movsb
cltd
dec
fidivl
push
lods
cs
and
and
dec
aad
fwait
adc
xorb
imul
pop
mov
or
lock
and
mov
inc
icebp
fcoms
pop
sub
mov
cmpsb
xchg
out
pushf
aas
or
and
pop
aaa
test
add
xchg
pop
movb
push
nop
loope
mov
inc
not
or
mov
or
pop
jae
and
and
sub
push
adc
jle
push
xlat
cmpsl
test
push
popa
cmp
inc
sbb
dec
sub
pop
mov
push
cltd
int3
lcall
xchg
lret
mov
mov
daa
jns
xchg
mov
jb
xchg
jo
movsb
push
jno
negb
add
sub
or
adc
scas
mov
test
leave
arpl
popf
bound
and
xchg
test
aas
adc
mov
push
movsl
in
movsl
sub
mov
jae
stos
lods
loopne
inc
mov
jnp
jecxz
icebp
and
sbb
or
imul
jg
xor
sbbl
in
stos
jmp
ljmp
cld
or
aad
jecxz
push
leave
xchg
sti
cmp
int
push
outsb
negl
xor
inc
xchg
mov
int3
push
mov
fistpl
push
int3
fsubl
jmp
shll
jo
mov
xor
sub
stos
pop
inc
jae
lods
xchg
pushf
mov
mov
insl
jl
lods
xchg
lea
cmc
loope
out
add
cmp
jle
xor
shrb
fadd
push
shlb
sub
pop
pop
inc
mov
pushf
jmp
push
pop
jmp
int
imul
cmpsl
jmp
dec
inc
out
insb
out
push
sbb
mov
je
popf
movsb
pop
xor
mov
shll
int3
dec
filds
xor
vmptrst
xor
mov
in
sbb
lods
xor
push
jmp
inc
test
pop
cmp
lret
leave
leave
xor
mov
sub
mov
imul
cmpsb
repz
jnp
mov
sub
xor
mov
pushf
insb
lds
clc
hlt
sub
xor
add
iret
or
jbe
fs
jmp
aam
push
pusha
les
hlt
mov
jbe
inc
cmp
mov
outsb
or
shll
scas
sbb
shrb
sbb
aas
inc
ds
div
daa
mov
dec
fwait
outsl
in
leave
or
jnp
adc
pop
stos
sbb
ja
mov
or
lods
jle
out
repnz
jae
mov
jle
xor
js
inc
jo
xor
mov
loope
dec
and
sbb
mov
push
stos
loope
xchg
add
push
mov
shl
call
mov
leave
fbstp
movsl
mov
dec
push
daa
decl
cmp
cwtl
cltd
dec
stos
test
aad
test
adc
xor
popa
jp
outsb
movb
mov
xor
sbb
jb,pn
pushf
std
xchg
jne
pop
pushf
std
mov
rcll
idivb
out
cmp
dec
cmp
or
cwtl
jne
push
daa
insl
cmpl
adc
inc
inc
cmp
jae
mov
arpl
dec
sub
jecxz
sub
aad
mov
cmpsb
mov
xchg
or
xchg
lcall
mov
sbbl
jg
mov
push
inc
or
scas
fidivs
ficompl
jns
mov
mov
fimull
jae
sbb
rolb
test
testl
dec
jmp
imul
das
cs
cmp
stos
xchg
mov
pop
outsb
push
dec
or
ret
inc
add
fistpll
mov
and
rorb
xor
out
jg
cwtl
cs
aam
fsubrp
mov
lea
ljmp
rol
cld
xor
dec
lret
pushf
stos
aam
mov
pop
stos
in
xchg
mov
mov
push
aam
cmp
je
xor
jne
fildll
dec
repnz
mov
pop
fsubrp
int3
adc
pop
rolb
mov
jge
dec
out
shlb
fwait
adc
xor
push
outsl
push
mov
stos
and
push
dec
in
fnstsw
inc
inc
xor
cmp
mov
hlt
mov
out
nop
inc
je
mov
in
pop
jns
mov
mov
out
inc
in
js
sbb
and
add
push
or
rcl
jge
lods
fnstsw
cmp
mov
add
stos
pop
movsb
enter
scas
jae
xor
push
push
and
mov
cmc
jbe
inc
out
mov
or
jecxz
insb
fmull
sub
mov
and
cmp
mov
adc
gs
cmp
and
cmp
scas
cmc
cs
nop
mov
sub
jmp
popa
jns
add
imul
jae
xchg
adc
mov
mov
jb
cmp
notb
fidivs
push
shrb
push
jne
pushf
inc
push
dec
sub
divl
inc
inc
lcall
int3
xchg
cmc
sti
stc
push
fisttps
pop
jmp
cmpl
mov
push
stos
fwait
sub
lea
insl
ret
aas
push
aas
loop
xlat
cmc
fcmovu
nop
xor
and
sub
dec
mov
iret
mov
sub
mov
mov
shll
lods
aad
dec
mov
push
outsb
nop
inc
xor
add
stos
test
js
test
cs
jno
jne
pop
adc
cwtl
jo
stos
mov
adc
adc
push
ljmp
sbb
clc
push
and
test
in
std
ss
aaa
cmpsl
loop
mov
xor
out
cs
jl
sub
mov
cli
push
pop
lret
jl
je
push
xchg
leave
ret
jbe
or
stos
adc
pop
dec
fmulp
mov
loopne
and
mov
aas
pop
int
sahf
lea
nop
sbbl
sub
aad
lret
aaa
pop
sbb
sub
adc
es
jo
add
stos
xor
push
xchg
mov
xchg
mov
dec
xchg
filds
nop
jne
cmpsb
insl
dec
push
movsb
sti
mov
add
adc
pushf
enter
cmp
mov
pop
mov
dec
push
mov
orl
fs
fmull
mov
dec
into
lods
or
inc
scas
test
jns
pop
loopne
arpl
jno
inc
nop
aam
xchg
leave
xchg
les
cmp
mov
mov
inc
stos
sahf
adc
aas
push
mov
ret
repnz
lods
push
addr16
pop
rcrl
addr16
int
inc
andb
stc
xchg
stos
push
fdivr
stc
pop
test
das
xor
iret
mov
inc
fldlg2
loope
jns
pop
push
xchg
xlat
nop
inc
pop
xlat
add
sti
cmp
and
push
sbb
hlt
mov
dec
jo
jnp
fisttpl
sbb
mov
or
and
fs
inc
mov
arpl
adc
repz
ss
push
leave
je
mov
test
mov
cmpsb
js
sbb
fcoms
pop
jb
rcrl
pop
pop
int
ret
jge,pn
inc
nop
movsbl
rcl
js
shll
add
adc
jo
or
out
leave
cli
jcxz
cmp
scas
into
jmp
adc
lret
mov
inc
jle
lret
test
pmovmskb
push
mov
sbb
push
or
test
insb
stos
mov
sbb
jge
add
lahf
push
push
repz
jecxz
in
sub
sbb
daa
cmp
xchg
test
xchg
or
cmp
rcrl
es
cwtl
push
aaa
fldcw
test
lret
jno
dec
ss
lds
mov
loop
mov
pop
adc
frstor
repz
bnd
inc
imul
mov
pusha
sbb
cld
enter
mov
lea
lea
fsubrs
loope
popf
lds
push
mov
push
loop
dec
pop
out
int
insl
pushf
movsb
mov
cmp
xchg
or
and
fistpll
pop
xchg
cli
jb
jns
iret
call
out
jl
jle
or
out
mov
test
jge
sub
inc
mov
in
out
cmp
test
sti
ja
push
mov
mov
js
pop
lret
shll
dec
jl
sbb
add
insl
jnp
xchg
mov
andl
push
mov
movsl
jg
jns
sub
dec
sarl
cmpsl
cwtl
jne
cmp
scas
in
mov
dec
outsb
push
sbb
std
mov
xor
lods
xchg
fcom
or
lods
xchg
mov
inc
adc
adc
scas
inc
testl
pop
adcl
jns
or
push
test
adc
adc
das
test
and
or
mov
ret
int
in
lcall
xchg
loopne
or
div
xchg
cmp
icebp
jns
mov
inc
pusha
sub
ss
outsb
pop
insl
xchg
jmp
leave
jno
cmp
lods
push
popa
dec
js
push
or
int
roll
add
mov
in
js
ljmp
jge
xchg
cli
adc
pop
xor
das
add
inc
test
mov
pop
cltd
sbb
ds
nop
test
das
dec
push
mov
sbb
fnstsw
xchg
test
cli
ret
pop
lret
shr
or
idivb
testb
xchg
sbb
into
dec
xchg
adc
cwtl
push
push
cld
jns
adc
insb
mov
daa
stc
jb
jae
push
push
ja
xchg
scas
and
mov
pop
insl
jbe
mov
mov
aad
js
sub
dec
adc
jle
or
call
and
xchg
imul
xlat
and
push
sbbl
add
test
data16
cmp
loopne
jb
movsb
mov
adc
les
add
addr16
sub
sub
ror
lods
mov
aad
sarl
ret
ja
mov
mov
jae
and
aam
push
cld
loopw
jp
push
mov
and
or
inc
sbb
int3
add
push
push
lcall
ja
mov
xchg
cmp
jg
xor
js
cmpb
or
push
lea
hlt
aas
or
call
jmp
xchg
rclb
outsb
popf
xchg
mov
mov
daa
mov
sub
test
pop
rcl
andl
aas
scas
mov
or
add
mov
fnstcw
mov
out
inc
cmpsl
je
and
das
in
dec
ljmp
mov
out
lahf
mov
aad
fiaddl
cltd
pop
lock
push
in
frstor
dec
add
mov
sbb
aas
mov
iret
je
cli
fs
push
mov
sahf
sbb
xchg
mov
aas
pop
sub
xor
aas
setle
iret
pop
push
dec
and
and
mov
cmpsb
jecxz
xor
mov
aas
test
and
es
fsubs
pop
out
mov
pop
cmp
shll
ljmp
pop
imul
mov
out
fisubl
stos
clts
cltd
mov
lods
dec
cmpsl
xchg
pop
in
rorb
out
test
jnp
clc
outsl
jmp
jge
ret
push
mov
push
cmp
xor
inc
or
sub
pop
popf
pop
addr16
fbld
aad
das
stc
scas
int3
pop
in
mov
iret
xchg
xchg
jae
or
lods
mov
dec
into
gs
in
or
fwait
mov
rcrb
data16
mov
setle
dec
pop
fwait
test
scas
mov
xor
jno
ficoml
in
push
in
mov
enter
lods
mov
nop
es
cld
inc
inc
test
or
jle
xchg
push
lock
mov
test
cmp
cwtl
xchg
shr
dec
mov
cli
mov
cld
out
shlb
and
lcall
lock
inc
imul
adc
jbe
andb
or
mov
fisubrs
pop
leave
pop
bound
pop
mov
js
imul
sub
xlat
int
int3
jno
jg
mov
sbb
cmpsb
pop
push
divb
push
je
bound
mov
dec
inc
pop
push
stos
in
and
lds
lahf
addr16
sbb
call
xchg
mov
xchg
aam
and
mov
add
or
pop
stos
xor
and
ja
loop
or
jg
push
icebp
xchg
mov
sub
pusha
lcall
mull
push
xchg
adc
addr16
mov
push
sbb
sub
xlat
pop
in
adc
addr16
xorb
mov
xchg
xor
jne
leave
sahf
rcll
mov
and
addr16
mov
push
mov
popa
incl
loope
addr16
lock
mov
dec
cwtl
lods
mov
adc
inc
or
cli
mov
ficompl
mov
inc
in
fnstsw
cltd
pop
loop
cmp
sbb
mov
popl
in
push
int3
add
out
das
les
lock
outsl
stos
sbb
mov
xorl
xor
arpl
and
xchg
mov
shr
and
arpl
pop
mov
sahf
out
adc
sahf
dec
mov
stos
sbb
push
test
sub
pop
scas
mov
push
aad
dec
cmp
lcall
jp
pop
xchg
shlb
shlb
xchg
adc
and
add
add
add
inc
icebp
add
add
xchg
and
add
add
push
add
add
xor
add
push
loope
add
add
add
inc
add
add
ret
jno
add
add
mov
add
add
mov
add
add
xorb
add
add
xchg
add
add
add
addb
xor
add
stos
cmp
add
mov
clc
jg
jg
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
movzbl
movzbl
sub
je
call
incl
lea
push
call
jmp
cmpl
je
cmpl
je
push
call
mov
xor
call
mov
mov
mov
push
mov
call
push
mov
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
not
mov
or
mov
call
lea
push
call
mov
pop
leave
ret
push
mov
mov
mov
mov
push
add
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
add
push
pushl
call
mov
mov
movzbl
movzbl
push
sub
pop
je
addl
push
push
call
pop
pop
push
push
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
ret
and
add
arpl
dec
and
add
add
add
add
add
xchg
faddl
add
add
lods
add
add
jl
add
add
add
add
add
movsl
in
add
add
cmc
mov
lds
cs
arpl
and
jae
popl
dec
dec
push
and
and
push
js
jns
adc
into
push
push
push
lea
add
ljmp
or
lcall
mov
std
add
leave
pop
sbb
push
test
movsb
loope
push
push
icebp
mov
orb
push
lea
call
adc
inc
mov
and
imul
adc
jecxz
add
adc
dec
or
mov
and
pop
xorl
incl
add
sbb
clc
test
inc
adc
or
leave
call
push
pusha
movsb
lea
add
add
add
test
add
add
aad
add
add
and
add
add
add
inc
gs
inc
inc
stc
fmull
inc
gs
inc
gs
pop
add
popa
cmp
cmp
dec
pop
gs
je
dec
add
imul
gs
outsb
push
sub
ret
mov
movsl
test
aad
add
add
and
add
add
add
inc
or
add
add
add
lods
add
add
xor
add
add
add
add
mov
ret
and
cmp
mov
adcw
outsb
pop
dec
stos
mov
scas
jae
gs
inc
aas
push
jmp
into
push
aas
mov
stos
lea
sbb
push
mov
test
add
mov
mov
loope
jp
pushf
xchg
sub
jne
in
outsl
inc
sbb
fcomp
adc
xchg
lea
inc
repnz
out
dec
xor
out
mov
or
cmp
inc
mov
and
movsb
push
or
mov
xor
push
dec
jbe
pop
sbb
aas
xlat
scas
mov
cmp
xchg
mov
data16
fwait
das
sub
data16
test
inc
ret
int
je
popa
push
sbb
jns
je
jge
cmpsb
cmp
flds
lds
jnp
cmc
out
repnz
xor
imul
in
push
pushf
stc
lret
mov
push
int
fidivl
icebp
push
push
sbb
js
arpl
lds
sbb
bound
cmpsb
sbbb
lea
xchg
daa
jbe
pop
idiv
inc
mov
mov
cmc
cli
pop
cwtl
or
cli
lret
jnp
mov
out
mov
outsb
jmp
add
mov
fwait
dec
jns
dec
jle
add
xor
iret
shrb
test
pop
fwait
mov
scas
push
dec
sbb
insl
and
push
cli
das
leave
decb
repnz
aas
rcrb
insl
sub
xchg
mov
clc
cmp
sbb
inc
insl
daa
dec
pop
leave
subb
jbe
or
adc
lea
lret
or
popa
and
adc
mov
adc
xor
mov
cmpsb
ret
aam
jbe
movsb
push
addr16
stos
dec
push
aad
into
pop
jns
sti
loop
jecxz
ret
jno
pop
mov
mov
pop
cmp
adc
mov
fbstp
fistpll
inc
pusha
test
call
movsl
cmpsl
fstpt
dec
sbb
push
shrb
mov
clc
jne
aam
inc
or
xchg
push
rorl
aas
test
stc
xchg
jmp
stc
decl
push
shll
mov
fwait
cmp
mov
mov
int
gs
fcomps
mov
notl
sbbl
and
stos
mov
push
in
fidivrs
lret
pop
sub
loopne
ds
sbb
mov
sub
les
lods
icebp
fadds
test
cs
repz
testl
push
daa
sbb
adc
or
pop
jge
xor
lret
in
testb
fldt
fs
arpl
mov
icebp
cmp
fdivr
loope
int
into
xchg
rorl
mov
int3
stc
push
push
pop
scas
cmc
stos
cmc
and
repz
and
pop
stc
mov
jmp
ror
and
and
dec
loopne
or
roll
hlt
bnd
jno
ja
lret
mov
scas
lods
cltd
arpl
clc
in
sbb
sti
imul
or
jle
mov
sub
loopne
stos
les
xor
lret
push
shlb
inc
pop
xchg
adcl
js
pusha
out
cmp
push
and
push
repnz
dec
jecxz
iret
jne
ja
xchg
mov
es
std
sub
stos
jno
mov
add
imul
mov
or
aam
out
loopne
dec
nop
sar
mov
sub
daa
xor
gs
cmpsb
lahf
push
fadds
jmp
popf
mov
or
adc
es
hlt
lea
mov
in
cli
gs
lea
mov
mov
arpl
mov
xchg
imul
lret
push
clc
mov
xor
outsb
pop
fsub
sub
mov
sbb
leave
rcrb
xchg
lcall
cwtl
repz
pop
das
call
push
and
pop
jns
ss
stos
testb
fdivrp
lds
outsb
clc
std
insl
in
mov
push
loopne
faddl
jne
loop
jl
cmp
xchg
adc
xchg
sub
fbld
push
cld
cs
movsb
lock
adc
xchg
fisttpl
rcrb
ret
push
das
sti
push
outsl
pop
xorb
clc
mov
jno
add
xchg
imul
jae
sub
and
dec
inc
and
xchg
ja
cmpsl
mov
ljmp
fistl
aaa
jno
xor
imul
cltd
cmp
push
jg
jae
loopne
and
cmc
pop
and
cmpsb
cli
fstps
dec
out
outsb
popa
stos
xor
push
rcrb
jns
out
pop
pop
movsb
xchg
stc
dec
gs
mov
arpl
cmp
lods
hlt
lods
and
sbb
xor
pop
decb
sar
pushf
icebp
mov
and
dec
mov
and
bnd
xchg
push
ds
gs
popf
jmp
dec
inc
sbb
xchg
jmp
inc
push
xchg
xorb
pushf
xchg
push
adc
adc
mov
out
lods
mov
xchg
sti
xchg
and
cmp
dec
fsubr
das
sub
out
and
sbb
dec
shlb
imul
add
adc
in
mov
pop
xlat
inc
mov
xchg
dec
arpl
push
pop
cmp
rolb
jl
adc
fisttps
jo
pusha
ljmp
jmp
push
je
scas
cmp
xchg
adc
test
cmpsb
insb
cli
or
sub
push
mov
leave
dec
fs
adc
mov
xchg
cmpl
loopne
pop
cmpsb
call
imul
push
add
add
fsubl
xchg
and
clc
int
das
out
aas
hlt
pop
sti
lods
lret
mov
add
jmp
mov
mov
sbb
add
call
pop
or
pop
nopl
mov
fldl
push
xchg
xchg
adc
and
lea
stc
shrl
xor
pop
cmc
mov
sbb
lcall
faddl
or
dec
loopne
xchg
adc
out
fistpl
outsl
pusha
sub
sub
cmpsb
xchg
cmpb
cmp
fxam
outsl
insb
lahf
cwtl
shlb
inc
movl
push
mov
shll
sub
xchg
or
mov
mov
orl
mov
flds
pushf
sub
cs
pop
lret
sbb
jle
mov
jne
dec
std
cmpsl
outsl
outsl
or
jns
xor
imul
pushf
lahf
mov
lods
insb
xchg
in
mov
xchg
mov
divb
fldenv
jb
cmp
push
fisttps
push
jne
cmp
rclb
cmp
out
pop
scas
in
mov
stos
das
sub
lods
popa
pop
xlat
dec
ds
divb
ret
ficompl
in
xor
jne
pop
add
mov
lea
inc
in
jne
mov
or
pusha
adc
inc
dec
stos
insl
or
mull
sbb
and
adc
pop
in
cmp
je
dec
cmp
push
sub
pop
sbb
movb
gs
scas
mov
pop
cmp
dec
lahf
pop
sub
jge
adc
gs
outsb
and
mov
iret
xchg
icebp
repnz
and
repnz
xchg
jbe
gs
fcoms
dec
mov
adc
inc
cmpsb
inc
dec
sbb
mov
rcr
xor
push
jno
sbbb
fs
push
adc
cmp
push
jns
pop
sbb
lea
mov
fimuls
das
xor
nop
shld
and
es
lret
data16
push
cmp
fucomip
cmpsl
mov
sti
mov
mov
je
mov
cld
xchg
stos
nop
add
cld
or
ret
imul
mov
test
cmpsb
jno
mov
push
jne
xor
leave
out
insl
pop
movsb
cmp
popf
cld
push
popa
add
or
xchg
mov
push
call
out
push
clc
shll
cmp
or
push
daa
js
inc
iret
mov
mov
mov
xchg
lret
mov
mov
rorl
lods
lods
repz
inc
icebp
mov
faddl
and
adc
pop
sbb
out
enter
or
pop
mov
rorl
and
jmp
xchg
sub
ror
and
lcall
dec
or
push
lds
jbe
mov
pop
movsb
add
dec
and
int
push
les
cmc
jae
stos
mov
jnp
in
aas
and
lods
and
add
pop
mov
iret
lret
xchg
inc
testb
push
popf
fimull
and
aam
mov
xlat
outsl
add
xor
fwait
clc
push
cmp
hlt
xor
in
mov
jb
pop
inc
push
jno
in
pop
jnp
iret
push
xor
jge
push
push
lret
loop
adc
xor
dec
popf
mov
dec
fisttpll
mov
push
lock
jecxz
fwait
mov
mov
jo
lods
xorl
sbb
flds
mov
out
sbb
in
shlb
out
cld
pop
mov
cmpl
cs
es
xor
jbe
or
scas
aaa
test
xchg
or
xor
cltd
insb
xchg
xchg
mov
xor
pushf
inc
bound
adc
hlt
fwait
mov
cmpb
insl
mov
filds
push
xor
cmpl
mov
dec
in
stos
das
pop
xor
test
fstpl
xor
and
hlt
xchg
sub
dec
jno
xor
jb
arpl
lret
xlat
or
and
movl
mov
lea
mov
or
xchg
xor
jno
rcl
adc
mov
in
add
pop
fldl
js
in
mov
mov
dec
lcall
loope
inc
mov
jmp
fs
and
insb
lcall
imul
out
pushf
mov
lods
xchg
push
mov
bound
pop
arpl
scas
jg
mov
mov
jbe
sahf
les
call
fcmovnu
pop
mov
sbb
mov
xchg
xchg
fst
inc
add
cmp
test
iret
jg
xlat
repnz
flds
int3
jmp
pop
jecxz
in
in
shlb
jg
push
xor
cmp
out
enter
adc
xor
push
sbb
add
cld
ret
mov
rolb
pop
daa
sti
xor
mov
cmp
stos
mov
cmp
nop
cmp
rcrl
cmp
sti
ss
or
addl
xchg
sbb
nop
mov
test
fldl
and
xchg
push
pop
jg
or
push
sub
jp
stos
pop
adc
inc
mov
inc
fisubrl
lret
jo
adc
ljmp
or
fs
fdivs
pop
push
lods
and
add
lods
mov
fmuls
xchg
lea
mov
sbb
bound
mov
xchg
ficoml
in
mov
repz
mov
push
xchg
test
pop
xchg
es
enter
mov
movsl
jnp
in
lods
test
mov
js
shl
movsb
cld
jnp
mov
test
sbb
push
jo
sbb
xor
aam
lret
lock
mov
cmp
lods
push
je
lret
mov
inc
rolb
gs
xchg
ss
int
insl
repnz
pop
out
jb
push
push
fildl
xchg
std
insb
mov
xchg
leave
or
sarb
stc
pop
add
loopne
adc
jns
cmpsl
mov
sti
dec
icebp
push
mov
test
cmpsl
cwtl
pusha
dec
cmpl
mov
jne
loopne
xlat
rcrb
mov
jmp
cmp
aaa
test
mov
sbb
subl
mov
add
addr16
aad
das
cmp
rcl
cltd
dec
imul
inc
cmpl
push
scas
sbb
xor
pop
mov
dec
test
ror
xchg
mov
ja
nop
mov
mov
xor
int3
das
fldl
jmp
add
push
js
adc
pop
aam
rorb
jle
push
add
cmp
into
out
xchg
cltd
cmp
fsubrl
xor
out
out
sti
or
stos
loopne
push
push
pop
pop
nop
and
jp
js
fidivs
enter
cwtl
lods
inc
pusha
adcl
xchg
push
ss
imull
adc
negl
mov
imul
dec
mov
mov
xlat
add
pop
add
lret
adc
inc
jnp
lahf
mov
jecxz
stos
call
jo
loope
das
xor
sub
add
cmp
clc
sahf
inc
aas
push
incb
iret
stos
adc
push
jmp
xor
mov
int
mov
sbbl
popf
pop
mov
insb
sub
enter
data16
lock
in
mov
adc
lahf
insb
int3
dec
sub
shlb
mov
sbb
sub
loop
aad
mulb
int3
mov
mov
repz
repnz
ror
mov
pop
push
cld
enter
dec
or
add
outsl
add
push
inc
or
shll
push
daa
sbb
or
test
cwtl
dec
stos
pop
jno
xchg
mov
lods
pop
xchg
add
idiv
jmp
out
scas
shll
ss
jle
into
sub
jb
or
test
scas
imul
dec
jl
hlt
jno
repnz
inc
cmp
sbb
and
cmc
push
cwtl
icebp
cmpsl
mov
add
and
pusha
pop
fdivs
aam
icebp
mov
dec
movb
shrl
mov
popa
xor
stos
adc
cmp
cltd
or
and
ds
and
push
shlb
push
pop
cmp
push
ja
cwtl
fcomip
pop
ljmp
das
pop
scas
jbe
mov
cmpsb
fucomi
ljmp
les
bound
adc
testb
stc
cmc
gs
mov
jae
aad
pusha
sbb
or
je
mov
leave
andps
js
sbb
out
dec
cmp
stos
cmc
data16
cli
sbb
or
add
mov
push
dec
fcmove
xchg
js
jnp
lret
adc
xchg
roll
ret
jle
decl
jns
push
or
adc
adc
not
cmp
sub
xchg
fistl
pop
js
fmuls
clc
and
push
int3
loopne
mov
mov
scas
jnp
aam
rolb
dec
sub
jno
inc
insl
sub
test
notb
xchg
lds
or
lret
imul
jo
add
add
mov
jne
inc
jo
cs
out
push
cmp
rcl
test
stc
rcr
pop
sub
outsl
ds
push
icebp
rorl
lods
pusha
push
dec
icebp
jg
bound
xor
xchg
push
adc
mov
fdivrl
pop
fsubs
shl
push
push
int
mov
loope
jecxz
xlat
lcall
dec
fnsetpm(287
add
mov
lock
shrl
jnp
cltd
ss
mov
out
push
cmpsb
nop
aam
sbb
std
mov
mov
mov
push
in
mov
jmp
or
inc
out
xor
cs
mov
xor
pop
add
xor
in
add
bound
inc
rorb
faddp
dec
xchg
sbb
pop
pop
push
xor
test
cld
popa
ljmp
in
loopne
scas
or
mov
or
inc
mov
lock
cld
in
jb
sbb
dec
add
test
cli
mov
mov
pushf
push
cs
xchg
mov
add
js
fcmovu
jne
and
lret
mov
pusha
or
pop
pop
pop
daa
xchg
mov
mov
mov
daa
sbbb
xchg
push
adc
pop
jge
push
ret
cwtl
scas
mov
mov
xor
idivb
gs
push
sbb
cmp
jmp
inc
sbb
pop
insb
movsl
or
fadd
pushf
stos
or
jp
dec
test
mov
push
and
imulb
sub
orl
jle
nop
mov
xchg
inc
mov
sbb
dec
fistpl
xlat
pop
jl
cmpsl
cmpsb
and
stc
jecxz
cltd
imul
test
ret
add
xor
push
xor
mov
add
cmp
sub
std
pop
add
test
inc
adc
xor
das
lcall
jmp
push
cmp
mov
sub
mov
fmul
pop
pop
gs
mov
in
mov
movsb
cmp
sahf
das
xchg
xchg
jbe
mov
push
dec
mov
mov
sbb
jp
lea
fwait
sub
and
cld
leave
repnz
stc
es
aaa
shrb
gs
mov
pop
int3
push
inc
push
addr16
lea
call
xor
ret
je
inc
cmpb
mov
imul
ss
shrl
movsl
int3
sub
add
out
xchg
xchg
jl
ja
xor
jno
gs
js
push
xor
je
int3
cmp
dec
es
jmp
loope
cli
adc
fstpl
call
in
adc
imul
cmp
fbstp
ret
pop
das
xchg
lds
jp
jg
sub
test
push
inc
cmp
in
aas
jecxz
and
cmp
jns
dec
lahf
or
sbb
inc
imull
cld
jp
jne
sbb
leave
sbb
push
cld
sbb
out
push
mov
inc
mov
xchg
xor
adc
gs
les
cmpsb
mov
popa
insl
fs
lods
mov
add
cmp
hlt
sub
subb
adc
cmpb
xchg
ljmp
inc
jp
mov
in
lods
jno
mov
in
movsl
fldt
incb
test
call
jo
lea
xor
sbb
mov
dec
jl
adc
mov
sbb
fistpll
loopne
loope
es
pop
aad
mov
mov
inc
and
adc
out
xchg
adc
std
pop
mov
sub
je
ljmp
push
mov
fldcw
lahf
stc
xchg
cs
lret
fisubrs
inc
and
enter
lret
enter
cwtl
jge
mov
movsl
or
jmp
cmc
push
shrl
cli
sahf
lods
sub
leave
pop
scas
stos
cmp
fsubrl
push
stos
push
in
movsb
cmc
adc
sbb
cltd
xchg
leave
adc
dec
ret
inc
mov
push
fs
gs
xor
mov
jbe
flds
testb
adc
xor
test
std
mov
add
int3
rclb
cmp
inc
sub
jmp
jbe
inc
add
pushf
shll
jge
mov
push
cmp
lcall
test
fs
pop
fsubrs
mov
ret
mov
in
sub
cmpsb
add
pop
repnz
roll
push
sub
psubusw
jmp
stc
dec
pushf
jno
inc
or
scas
loopne
call
jle
icebp
mov
xor
xlat
faddl
add
add
lods
add
add
xor
add
add
add
add
movsl
in
add
add
cmc
mov
lds
pop
add
add
gs
add
add
add
add
pushf
add
add
and
add
add
add
inc
or
add
add
in
add
add
xor
add
ljmp
int3
int3
int3
int3
int3
sbb
ret
or
add
add
dec
fldl
add
add
add
cmp
mov
add
add
add
add
sub
sbb
adc
sbb
sbb
inc
add
add
popf
insl
add
test
insl
loop
js
add
outsl
pop
jb
or
add
add
fcmovb
add
jecxz
or
movl
ret
ljmp
mov
ds
incl
call
push
lea
adc
std
push
call
movsl
icebp
adc
testl
mov
lods
in
push
std
call
add
rolb
add
adc
add
add
lods
orb
insb
xor
push
decl
loopne
adc
mov
lock
popf
cld
push
add
add
add
adc
inc
pushw
jne
repz
lea
adc
inc
sub
or
add
add
lods
jge
sbb
sbb
add
add
dec
lds
sbb
sbb
gs
pop
imul
dec
add
popf
gs
je
xor
gs
popl
insl
inc
outsl
std
insb
add
jo
xor
fs
add
sbb
pop
cmpsb
imul
pop
js
insb
push
insb
mov
gs
add
lods
jge
add
add
add
add
dec
fldl
add
add
add
cmp
mov
add
add
add
add
sub
add
and
mov
mov
int3
add
and
mov
xor
jp
xor
subl
jmp
sub
pop
ss
cmp
sub
rol
push
repnz
pop
jecxz
jb
decl
jecxz
dec
sbb
inc
lds
leave
popf
insb
xchg
jno
lock
or
stos
lods
stos
xor
pop
outsb
lods
pushf
fcoms
jecxz
and
mov
sub
mov
add
add
test
mov
jge
das
sub
stc
data16
outsb
sahf
les
into
mov
xchg
adc
enter
xor
pushf
dec
cmpsl
push
fildl
cli
sahf
push
push
pushw
or
ljmp
push
fcom
arpl
test
mov
cmp
and
fsub
push
outsb
and
mov
jge
xor
popf
mov
sahf
inc
jmp
adc
add
xchg
mov
in
movsl
pop
std
out
addr16
add
pop
jmp
or
push
sahf
inc
sbb
in
xchg
jne
aas
or
sbbl
pop
adc
pop
es
push
gs
push
fstps
andb
ja
and
and
xor
and
inc
nop
je
loopne
xor
push
loopne
fbstp
mov
mov
imul
loopne
arpl
jno
clc
orl
and
loopne
or
in
cltd
mov
jbe
cwtl
ljmp
les
add
gs
adc
inc
pop
int3
pop
sbb
and
jge
xor
loop
pushf
mov
sarl
scas
stc
repnz
mov
daa
lahf
pop
scas
cmp
cld
pop
mov
repnz
xchg
sbb
js
scas
out
inc
xchg
pop
mov
sti
pusha
fsubrl
sbb
or
sbb
jmp
pusha
aam
jnp
push
loop
sub
and
pop
divl
pop
mov
clc
aad
out
into
cmp
repnz
or
add
andb
cmp
pushl
in
leave
mov
mov
sbb
js
pop
sahf
arpl
pusha
out
push
ja
stos
pop
inc
repnz
movsl
loope
jmp
aad
cmp
mov
cmc
sahf
dec
or
push
pop
popf
shrl
iret
adc
push
adc
adc
xor
je
cmc
push
mov
stos
sbb
xor
add
pop
jle
in
lahf
hlt
into
hlt
lahf
mov
sahf
mov
add
xchg
mov
add
loope
cmpsb
rclb
loop
cmp
testl
sti
sbb
cmpsb
cmc
mov
dec
stc
sbb
push
call
xchg
pop
push
cs
cmp
xchg
mov
inc
adc
test
xchg
xchg
xor
cltd
mov
sub
enter
in
sub
jo
pop
push
inc
shlb
gs
adc
arpl
ret
pushf
or
xor
pop
xchg
in
and
popl
shr
jno
adc
mov
pop
mov
aas
pop
iret
mov
arpl
sbb
mov
and
arpl
rorl
fldt
icebp
mov
jmp
test
xor
stos
sub
pop
cmp
push
pop
push
push
sti
jmp
sahf
xchg
cmc
and
fsubrs
push
push
clc
in
insl
add
movl
fnstcw
inc
pop
scas
mov
lods
pop
stc
and
jle
dec
lahf
mov
in
push
pop
test
adc
in
add
pop
int
pop
stos
mov
push
imul
mov
dec
adc
ljmp
jnp
xchg
and
xor
pop
clc
jbe
dec
or
jle
lods
loop
push
adc
lcall
xlat
sub
jae
push
push
loopne
mov
push
push
movsb
jne
mull
cmp
inc
and
stc
push
mov
inc
repnz
nop
jb
lret
fcoms
lock
cmp
pop
cmp
leave
inc
lds
mov
jg
mov
or
loopne
fsubs
testb
xorl
pushf
js
ljmp
std
sub
faddl
push
outsb
xchg
xchg
dec
mov
inc
and
into
sbb
popa
xchg
mov
test
sbb
xor
lret
je
hlt
pop
push
mov
cli
cli
jno
mov
fcoml
scas
add
cmp
dec
xor
loopne
mov
fcoms
jge
and
fwait
push
or
push
cmpsl
pop
mov
in
pop
ss
aas
dec
mov
pop
mov
pop
lret
pop
shrl
push
add
repz
sbb
loopne
mov
insb
leave
add
mov
mov
int
add
cmc
imul
data16
lods
add
mov
loop
mov
rolb
shlb
mov
mov
push
xor
test
test
add
add
in
cwtl
add
out
sub
pop
imul
xchg
pushf
loope
ficoms
and
dec
inc
gs
scas
xor
sbbb
lds
clc
add
es
xor
adc
mov
mov
cs
sbb
ljmp
or
ja
mov
jecxz
cmp
mov
andb
jns
xchg
push
xor
clc
sbb
dec
test
int3
clc
pop
je
lds
movb
xchg
add
cli
inc
cmc
mov
repnz
clc
dec
lods
ds
leave
aas
and
pop
mov
cltd
bound
sbb
dec
inc
adc
cmp
lock
xor
pop
xchg
aaa
mov
pop
inc
xor
dec
nop
cmp
in
mov
jnp
inc
mov
xor
dec
adc
clc
test
in
and
xor
out
std
lret
out
pop
aad
jb
lcall
adc
mov
bound
outsb
cmpb
mulb
sbb
insl
push
fnstsw
dec
mov
push
dec
sbb
sub
sbb
fnsave
sub
imul
mov
call
cmp
and
loope
or
jb
jg
inc
adc
mov
xchg
add
stos
test
int3
lret
sub
not
sbb
add
cmp
or
into
dec
sbb
inc
fwait
imul
scas
sbb
outsb
cli
push
push
and
jno
insb
mov
xchg
mov
jae
repnz
push
aas
adc
lods
pop
mov
loope
enter
inc
mov
pop
push
mov
add
push
push
inc
inc
lret
xchg
and
leave
cmp
pop
pop
ds
cmp
mov
and
xchg
jmp
sbb
movsb
test
mov
inc
push
lods
cs
test
push
add
mov
fadd
cwtl
movsb
mov
or
mov
clc
sbb
adc
mov
mov
call
mov
rcr
add
cs
outsb
lcall
jno
xchg
sub
sti
out
inc
ds
xor
mov
add
insl
inc
sub
jle
filds
and
aaa
mov
cmp
dec
xorl
pop
scas
in
fwait
xorb
out
out
test
cmp
mov
xor
pop
pop
lds
mov
or
in
push
pop
ret
xchg
xchg
push
or
popf
push
loopne
mov
sahf
adcl
icebp
and
sahf
loope
mov
dec
dec
xchg
scas
sub
pop
xchg
jbe
bound
push
std
insl
int3
loopne
lea
out
in
inc
jb
cmpsb
rep
add
mov
or
mov
aad
into
and
sbb
rclb
add
adc
mov
clc
sbb
sarl
fsubl
pop
fdivrs
mov
mov
push
clc
xchg
stos
add
or
out
mov
sbb
fisttpll
outsb
xchg
cmp
push
adc
pop
cmp
mov
jg
mov
out
jge
cmp
add
xchg
ret
stc
xchg
popa
outsl
lahf
test
sbb
movsb
push
jo
sub
push
mov
inc
dec
rcrb
xchg
lea
or
mov
les
pop
or
aam
arpl
rcll
or
outsl
mov
imul
dec
xchg
jg
mov
mov
lods
pushf
lds
scas
sub
pop
test
imul
cmpsl
push
es
cs
add
repz
cld
dec
loop
scas
sarb
jae
loopne
outsl
lea
mov
mov
jmp
out
pop
sar
movsb
lahf
adc
addl
arpl
jb
imull
and
jmp
dec
adc
pushl
cs
push
jp
stos
dec
dec
xor
les
and
dec
mov
mov
sub
dec
or
iret
mov
test
adc
js
mov
fwait
aas
jge
insb
mov
stos
mov
sub
test
mov
clc
pop
daa
out
ja
and
loop
push
in
xor
jg
cmp
mov
ret
add
xor
push
cli
lods
mov
dec
popf
push
int
mov
inc
pop
sti
xor
jle
daa
mov
mov
add
xchg
adc
adc
push
imul
scas
imul
pusha
in
mov
sbb
ret
sub
mov
cmp
stos
lock
xchg
cmp
aad
stc
cltd
repnz
pop
dec
out
orl
inc
out
insl
xchg
in
sbb
dec
outsb
pop
sub
fildll
mov
cmp
gs
mov
xchg
les
xor
into
popa
movsb
add
aam
rcll
push
shrl
push
pop
cwtl
clc
pop
cmp
adcb
push
sub
fidivrs
add
cmpsl
in
mov
lods
cmp
xor
mov
nop
push
push
pushf
adc
test
add
std
loopne
jecxz
adcb
int3
mov
or
or
jae
adc
dec
pop
iret
shll
sbb
jg
fbstp
lea
insb
cmp
xchg
imul
cmc
add
xchg
cmp
push
fsubs
push
es
push
dec
jo
ss
imul
mov
imul
daa
out
xchg
mov
jno
xlat
jmp
jmp
pop
insl
inc
dec
pop
lret
jmp
jge
aam
push
les
mov
pop
jb
pop
std
fsubl
jmp
xor
and
ret
icebp
out
add
cmpb
imul
mov
fildll
dec
and
or
mov
or
aaa
imul
popf
sub
fcomip
out
push
adc
shll
mov
jg
icebp
dec
push
jl
cltd
das
xchg
cli
adc
scas
mov
pop
popa
jmp
dec
std
test
pop
lea
leave
lods
push
mov
jge
fwait
hlt
pop
jnp
adc
int3
ja
dec
xchg
lea
icebp
sub
lods
shl
mov
push
imul
cld
push
cmpsl
jns
dec
ficomps
sti
adc
lock
loop
xor
mov
fdivrl
jmp
ss
fisubrs
or
jne
adc
ja
ss
xor
dec
jae
gs
sbb
push
iret
lea
push
cmp
daa
rorb
sbb
sub
mov
ret
fstpt
jmp
test
fnstcw
cmp
mov
cmpsl
push
cmpsb
xorl
popl
insl
pop
jmp
xchg
push
jp
cli
push
repz
loopne
push
or
aam
cmp
insb
jmp
test
jbe
xchg
mov
stos
mov
jae
and
dec
and
cmc
mov
jp
jmp
add
icebp
push
pop
mov
xor
dec
std
pop
adc
out
inc
je
pop
lret
fchs
mov
mov
mov
mov
in
cmc
test
aaa
lea
pop
lret
push
jnp
sbb
arpl
mov
inc
sub
cld
movsb
sahf
aaa
je
jmp
sub
aam
ja
xor
jge
push
sub
jge
out
mov
mov
dec
movsl
or
imul
jmp
add
imul
cltd
add
in
push
aas
pop
insb
jae
or
push
test
nop
orl
out
pusha
xor
scas
in
lret
or
cmp
push
in
pop
shrl
addr16
std
pop
mov
and
int
adc
sarl
mov
cmp
mov
notb
sar
pop
dec
pop
ret
inc
mov
ja
inc
and
xchg
call
popa
mov
lret
inc
xchg
popa
rcrb
into
or
push
aam
shll
cmpl
mov
cwtl
dec
push
loop
and
and
mov
mov
and
add
sub
addps
push
ljmp
jge
add
dec
sar
imul
aad
pusha
int3
outsb
mov
xor
pop
jg
lahf
test
jge
pop
mov
jmp
push
pop
xorb
loop
jns
push
cwtl
int
xor
dec
arpl
or
stc
mov
jnp
or
cs
xchg
or
inc
movsl
xor
xchg
sahf
cmpsl
inc
aam
mov
pop
xchg
in
sahf
push
lods
aad
pop
sub
mov
add
lds
int
mov
das
cmpl
sub
jne
push
ret
mov
inc
daa
dec
lea
dec
xor
enter
pop
inc
inc
fadd
push
jb
xchg
rol
daa
je
inc
lcall
push
xor
mov
push
shlb
adc
mov
pop
xchg
jbe
push
xchg
in
mov
mov
xlat
inc
jecxz
push
inc
push
push
jbe
add
jge
jae
adc
mov
pop
adc
push
testb
mov
and
aas
xchg
ja
adc
push
cmp
aaa
adcb
fwait
std
jecxz
hlt
testb
inc
fs
adc
movsl
testl
stos
xor
mov
ja
in
inc
or
lds
iret
jmp
mov
cmp
xor
jns
adcl
adc
inc
fstpt
mov
ret
push
pop
mov
call
push
lret
rcrb
adc
add
jge
and
daa
mov
fisubl
mov
inc
and
push
xchg
fstl
fldl
aaa
into
adc
std
fwait
cli
push
scas
adc
hlt
push
or
lds
inc
xor
add
or
push
ret
data16
push
inc
je
xlat
and
push
scas
iret
movsl
popf
xor
stos
jecxz
push
js
insl
mov
xlat
mov
jmp
lods
addb
dec
pusha
jns
jle
push
jl
addr16
cmp
jmp
arpl
xchg
cmc
dec
jo
adc
pop
mov
adc
movsb
dec
es
aas
rcrb
popa
pop
aam
inc
insb
push
addl
mov
pop
xor
inc
xchg
je
jno
dec
loopne
fwait
popf
jmp
ret
sub
and
nop
test
adc
sub
clc
or
imul
cmp
adc
insl
stos
pop
rorl
lret
cmp
xchg
sahf
xor
adc
or
mov
subb
sarl
sbb
in
mov
inc
shrd
in
stc
sub
bound
movsb
ljmp
addr16
adc
pop
call
es
test
pop
subl
pop
insb
mov
lods
loopne
rolb
jecxz
std
mov
clc
xor
push
mov
dec
mov
or
mov
icebp
xchg
xchg
cs
test
jne
or
outsl
outsb
arpl
sub
test
jbe
fsubrl
addr16
sub
cld
cmp
jne
imul
hlt
and
jae
xchg
add
push
mov
andb
mov
cmp
insb
mov
inc
mov
pushf
hlt
mov
push
dec
add
xor
jg
xor
mov
xchg
in
jno
rclb
xchg
and
mov
cmp
cmpsl
daa
pop
and
cli
xor
cmp
jnp
cmpsb
cmp
inc
loope
mov
std
or
add
imul
push
movsl
fisubrl
sub
repz
ret
or
lret
stos
add
lcall
notl
pop
mov
cmpsb
mov
sbbb
out
clc
test
call
xchg
mov
adc
sub
mov
inc
sub
jg
cs
jmp
cmp
orb
jle
out
mov
and
in
movsb
push
cmp
mov
add
pop
mov
lods
xor
inc
add
mov
or
adc
mov
lcall
jns
add
popf
cmp
inc
out
pop
out
push
aas
sub
lahf
adc
filds
mov
addr16
xchg
add
cmp
mov
cmc
adc
dec
js
call
sahf
popa
push
jmp
lcall
pop
cltd
mov
adc
pusha
enter
sbb
and
push
flds
out
popa
hlt
inc
call
in
push
stc
cmpb
nop
jmp
fidivs
inc
jmp
stos
sti
mov
lret
sbb
rcrb
and
mov
lret
das
cs
cli
pop
dec
mov
pusha
pop
sbb
pop
mov
push
je
dec
mov
mov
and
mov
outsb
push
sub
int
mov
xchg
rorb
xor
loope
pop
out
cmpsb
mov
scas
shll
lea
roll
add
movsb
adc
fwait
pop
sub
dec
cmp
leave
stc
mov
adc
adc
fcmove
mov
clc
mov
mov
cltd
loopne
in
mov
loopne
cwtl
dec
add
in
mov
enter
xchg
mov
fidivrl
inc
sub
push
pop
add
cld
movsb
sarl
es
mov
lcall
sbb
cmp
lock
dec
into
jmp
or
mov
fs
cmp
clc
imul
imulb
fcomi
aam
int
fmull
arpl
xchg
pop
test
jnp
cmp
fcomip
adc
std
lock
in
add
sar
sub
lock
pusha
lret
das
jno
adc
jnp
cmpsl
clc
inc
gs
mov
mov
dec
popf
das
mov
movsl
jns,pt
mov
data16
jl
js
data16
mov
mov
in
add
mov
stc
adc
push
movsl
cmpsb
xor
fmul
insl
cmp
outsl
pop
leave
cmp
add
sub
fmulp
fldcw
mov
push
adcl
test
add
imul
aaa
imul
xchg
je
cs
loope
mov
pop
cmpb
adc
cmpsb
addb
mov
push
aad
xchg
jb
icebp
fidivrl
mov
mov
pop
xchg
movsb
out
pop
cmp
cwtl
cmp
dec
popl
xchg
lock
xchg
ret
sbb
sub
rcrl
sbb
shl
adc
stos
pop
lock
jae
mov
xor
in
outsb
insb
jns
fsubl
add
jl
in
aaa
add
add
mov
add
add
add
add
sub
add
or
int
add
add
popf
insl
add
add
insl
mov
cmp
add
add
add
add
sub
add
lea
add
add
add
add
sbb
add
cmp
add
add
orb
pop
lods
ja
mov
dec
int3
int3
int3
int3
int3
add
bound
fidivl
outsb
dec
or
add
add
or
add
add
add
add
add
inc
mov
add
add
fildl
add
add
sub
and
add
add
add
orb
add
push
addl
add
and
add
add
repnz
cmp
or
inc
outsl
outsb
out
outsb
add
push
ret
insb
mov
adc
sahf
cli
or
iret
mov
rcll
out
push
cld
add
cmp
mov
mov
in
push
std
mov
andb
adc
add
add
add
push
push
decl
xchg
jne
mov
jmp
je
in
repnz
add
mull
bound
adc
pop
add
sti
push
call
xchg
orl
loope
mov
cld
xchg
mov
call
inc
jge
loope
decl
std
ud0
xchg
fwait
mov
ret
or
cmp
adc
adc
lea
movsb
adcb
add
add
add
xor
add
add
add
add
add
rolb
add
add
mov
fs
je
imul
jb
jbe
add
imul
push
arpl
les
gs
add
jmp
add
js
push
insb
xchg
inc
push
popa
add
add
outsl
aaa
jne
gs
into
outsl
popa
insb
jne
xchg
add
add
add
add
add
rcrb
add
add
mov
add
add
add
inc
mov
add
add
fildl
add
add
sub
add
add
add
xchg
mov
xchg
or
jg
xchg
leave
or
lcall
mov
or
jg
jae
out
pop
cmpsl
cbtw
in
in
sbb
xchg
sahf
out
mov
add
mov
sub
adc
dec
repnz
ret
add
fcomps
adc
lods
jnp
pop
popa
fdivs
cmpsb
icebp
xor
pminub
clc
popl
pop
mov
sbb
dec
out
imul
dec
inc
test
push
imul
inc
in
js
arpl
jg
xor
mov
aad
push
jbe
sahf
mov
mov
test
add
out
mov
icebp
das
inc
repz
mov
sub
pop
push
cmp
outsb
mov
repz
mov
pop
push
insb
inc
les
jnp
fcoml
out
or
lea
and
inc
dec
repz
test
ds
stos
add
in
mov
cmp
shlb
mov
popa
inc
fwait
pop
fs
cmp
popa
add
sub
popf
scas
mov
inc
cs
ja
and
dec
popf
mov
ret
jg
xchg
pop
loope
outsl
jge
sbb
rolb
push
test
repz
test
scas
sub
and
in
xlat
or
mov
inc
add
lods
lock
mov
adc
and
add
call
pushl
pop
sub
jns
arpl
mov
outsb
mov
mov
bound
mov
jge
arpl
mov
das
xchg
xorb
arpl
je
jae
or
jae
xlat
xchg
dec
fisubrl
xchg
int3
outsb
dec
add
mov
aam
inc
adc
mov
jl
add
sub
outsb
xor
std
cmc
sub
xor
je
in
in
ret
jmp
imul
sarl
mov
insl
adc
and
inc
sub
push
out
mov
mov
fdivrl
inc
insb
pop
push
xor
sahf
arpl
mov
les
loopne
cmp
cmc
and
xchg
int
xor
in
sbb
mulb
lret
scas
jnp
mov
dec
xchg
ficompl
inc
packsswb
aas
repz
in
mov
stc
test
cmp
and
fucomp
or
xchg
xor
test
sub
xor
xchg
push
stos
mov
insb
jle
xor
pop
inc
sub
outsb
psubd
xchg
push
jle
cmpb
arpl
out
sbb
scas
icebp
mov
mov
outsb
jne
push
jge
ljmp
push
xchg
sub
mov
fisttpl
sbb
test
jecxz
push
aaa
cli
sub
pop
adc
insl
lret
imul
dec
call
dec
lahf
into
jns
mov
xchg
fstpl
and
or
add
sti
mov
pop
jmp
cmc
or
cli
xor
js
movsl
out
push
mov
mov
or
pop
inc
inc
shrl
cmp
push
jae
jge
cmp
mov
movsb
pop
std
jns
adc
dec
fstl
aas
aaa
pop
aaa
insl
pop
pop
fsqrt
test
inc
adc
jp
out
cmc
pop
cmp
mov
mov
and
mov
adcl
sub
mov
imul
mov
sub
xor
insb
dec
sub
cmp
jg
mov
push
push
and
push
mov
pop
in
mov
jmp
and
push
adc
enter
mov
add
mov
pop
scas
and
test
pop
push
ljmp
push
mov
jno
test
mov
addps
mov
mov
sbb
pop
repz
lock
sub
add
or
mov
mov
out
jge
dec
cmp
mov
fidivrl
cmp
inc
stos
and
and
into
mov
jno
mov
lds
push
xchg
jle
fwait
xor
dec
int3
nop
dec
sbb
test
xorl
adc
xor
lock
mov
into
jne
mov
mov
into
outsl
andb
loope
mov
push
dec
je
leave
adcl
fs
jge
adc
ljmp
gs
inc
sub
mov
ds
and
and
push
in
scas
test
xor
adc
daa
xchg
jecxz
push
aam
hlt
and
icebp
repz
jbe
sahf
loope
pop
in
into
jns
scas
sar
jg
pop
sub
sbb
sti
cmpsl
mov
out
in
aad
popa
sbb
jle
add
outsl
mov
dec
loop
ds
mov
cli
shlb
lret
xor
sub
xor
int3
xor
mov
call
stc
sti
sub
mov
je
ja
mov
test
and
movsb
jo
jns
cltd
inc
xor
movsl
sub
call
out
fsts
clc
add
adc
lock
inc
dec
sbb
pop
sbb
push
pop
pop
xor
mov
xchg
negl
movsl
pop
pop
jge
jmp
leave
mov
and
jns
jae
jbe
pop
mov
scas
lret
sbb
cmp
pop
out
shl
xlat
out
mov
sbb
jmp
jae
in
jbe
sbb
pop
les
ret
arpl
mov
lods
adc
das
movsb
out
and
lret
push
mov
mov
lods
inc
mov
test
ss
sbb
into
lret
cmp
cmp
mov
ss
xchg
add
fmul
pop
stos
stos
push
hlt
pop
adc
xor
leave
out
inc
inc
icebp
dec
int3
sub
jmp
xor
mov
push
sbb
xor
lock
fucomi
cmp
sbb
repnz
adc
pushf
shrb
mov
scas
addb
xchg
xor
push
out
mov
adc
push
mov
scas
inc
lahf
cmp
sti
xor
sbb
dec
cld
cmp
fnsave
not
mov
andl
mov
bnd
sub
fnstenv
dec
or
imul
inc
mov
fisubl
mov
rcrb
mov
rcl
mov
inc
dec
movsl
imul
push
dec
dec
inc
dec
cmp
test
mov
das
imul
adc
jns
dec
aaa
add
ret
pop
mov
lret
xchg
stos
xchg
push
jns
jb
outsl
adc
mov
and
leave
stc
jmp
and
movsl
cmp
faddl
out
daa
rol
popa
sti
int
mov
sbb
subb
cmpsl
outsl
and
pop
stos
bound
lock
in
pop
mov
pop
xchg
xchg
xchg
popf
out
cmpsl
les
mov
hlt
mov
sbb
xchg
popa
push
jl
sbb
cld
test
mov
ja
push
and
add
pop
xchg
sbb
mov
sub
mov
mov
lahf
fdivr
aaa
out
fildll
sbb
lahf
or
je
addr16
lods
pop
mov
push
sbb
dec
push
mov
mov
mov
sahf
rorb
jns
fs
mov
or
jg
popa
push
xor
stc
lahf
inc
lods
or
dec
xchg
push
es
and
mov
and
test
popf
mov
test
lds
mov
or
inc
jb
xchg
cmpsb
pushf
pop
jmp
loope
loopne
sbb
dec
push
and
int3
pop
shrb
pushf
es
push
dec
jp
testb
adc
cmp
sub
lea
cli
push
adc
shrb
xchg
scas
insb
clc
pop
movb
jge
rol
jo
mov
sbb
and
cmpsl
inc
jo
lret
jle
cmp
mov
xchg
dec
enter
jns,pt
mov
rclb
pop
mov
mov
cld
ljmp
lods
arpl
mov
leave
jne
ret
mov
popf
xchg
stc
push
movsl
xor
fcompl
bound
cmp
aam
in
std
push
rolb
jl
push
aaa
hlt
cmp
sbb
scas
xchg
and
scas
in
stos
sub
or
rcll
cmp
sub
out
mov
test
jmp
inc
cld
mov
lea
xor
fs
mov
imul
jno
movsl
lods
pop
cs
in
inc
push
loopne
mov
dec
push
sub
xor
leave
lcall
cmp
lock
xor
or
fcoms
inc
adc
ret
sub
push
lock
test
fisttpll
in
pop
mov
and
add
push
mov
sahf
jb,pt
mov
addr16
mov
add
jns
ret
mov
xchg
mov
jae,pt
fnstcw
or
mov
xchg
xor
xchg
loopne
mov
movsb
mov
or
jb
aad
adc
mov
mov
or
lret
cmpsl
sub
jle
xchg
mov
or
subb
xchg
fcmove
adc
addb
lahf
sub
mov
jo
pusha
xchg
or
push
or
lahf
popa
lcall
mov
and
mov
inc
out
hlt
bound
out
dec
lea
adc
adc
out
push
push
imul
mov
and
xorb
and
call
sahf
pop
sub
shll
add
loop
fnstcw
rcrl
cmp
lcall
repz
or
inc
rclb
lock
mov
aad
cmpsl
fldl
pop
jmp
mov
mov
inc
fimull
rorl
popa
sub
cli
xor
and
fmuls
std
ljmp
pushf
ja
adc
dec
aaa
xchg
jl,pn
mov
jbe
jg
mov
jbe
cld
ss
adc
or
rclb
je
mov
fwait
outsl
stc
bound
or
in
rorb
mov
jmp
inc
out
shlb
cmp
push
ss
repz
and
imul
fsubrl
push
cmpsb
pop
jl
xor
decl
enter
fildll
mov
mov
test
add
or
ret
pushf
jnp
adc
and
cmpb
subb
rcl
push
fisubl
mov
aaa
repz
out
lahf
xor
mov
push
rorb
or
fimull
xchg
sub
inc
add
mov
xor
jp
mov
adc
sub
xchg
cmp
sub
mov
mov
push
jecxz
push
aad
out
repnz
repz
ja
push
cmp
xchg
das
jno
mov
ss
inc
inc
xor
xchg
sbb
or
jp
and
enter
jbe
addr16
lahf
dec
sahf
mov
lea
or
ret
ljmp
mov
or
gs
inc
aam
popf
test
xchg
inc
xlat
or
xor
mov
pop
xor
fidivrl
sbb
fcoml
push
pop
adc
cmp
into
cmpsb
in
dec
sub
pusha
stos
add
or
dec
pop
inc
push
mov
cmpb
adcb
leave
lcall
cld
mov
pop
xor
or
scas
les
out
jl
test
fwait
dec
stos
fistpl
stc
nop
mov
aaa
cli
outsl
mov
aam
je
sbb
imul
test
inc
xchg
mov
repz
rorb
cs
xchg
mov
daa
js
adc
ljmp
inc
inc
rcrb
and
or
loop
movsl
xchg
pop
test
outsb
ja
out
xchg
dec
mov
mov
sbb
adcb
jp
mov
daa
add
mov
insb
fdivrs
scas
inc
jp
fmull
dec
scas
sbbb
inc
xor
testl
arpl
into
ret
mov
push
decb
xchg
mov
jns
arpl
or
roll
out
dec
outsl
pop
push
add
fwait
mov
rcl
cltd
and
push
int3
data16
out
fdivrl
sbb
push
jne
mov
aad
and
movsb
dec
push
push
lods
inc
aaa
fistps
ficomps
jmp
jnp
sbb
sub
sub
sti
rcr
jnp
sub
or
cmpl
sub
dec
push
push
outsb
pusha
aad
xor
and
cmp
xchg
jno
adc
imul
mov
out
xor
inc
aad
mov
das
push
outsl
fstpl
cmp
mov
pop
mov
mov
mov
outsl
das
filds
dec
xor
mov
mov
xor
fisubs
push
xor
push
jl
in
push
add
lahf
xorb
ret
dec
push
mov
jl
out
mov
push
subb
test
rcrl
inc
mov
jno
lock
fistpll
mov
repz
xor
out
push
mov
mov
xchg
fdivp
jge
add
sarb
ja
pop
daa
out
rcll
pop
sbb
inc
pop
cmc
or
jno
jnp
and
fisubl
out
jg
popl
into
mov
cwtl
inc
fwait
lret
cmc
dec
push
xchg
mov
popa
stos
sbb
mov
mov
xlat
sbb
xor
and
push
adc
jno
repnz
into
push
cmp
push
aas
movsb
pop
or
aam
leave
std
lods
sbbl
push
cmp
fnstsw
fnstsw
jnp
or
in
sbb
aaa
call
mov
movsb
push
xchg
jo
cmpsb
movsb
jnp
xor
and
lods
lcall
ja
cmp
sbb
jmp
xchg
push
add
pop
jp
out
shl
bound
jge
jge
push
and
test
and
popa
outsb
insl
fwait
xchg
xchg
push
loope
cltd
adc
imul
test
jnp
jle
jo
push
inc
adc
orb
jmp
sarl
jge
add
insw
push
nop
inc
mov
repnz
xchg
dec
mov
std
and
and
dec
xor
dec
lret
xor
movsb
mov
sbb
jbe
or
cmp
inc
rclb
leave
pop
ret
repz
fs
js
sbb
ret
daa
mov
cmpsl
adc
scas
sbb
xchg
ss
sbb
je
pop
sub
lods
in
mov
das
cld
in
lock
subb
pop
sub
or
dec
mov
sbb
jmp
in
dec
test
dec
xchg
fidivs
push
dec
js
sub
psubd
and
ss
jle
push
jae
jecxz
and
icebp
mov
popa
push
pop
inc
fnstsw
mov
push
cmp
xorl
or
enter
mov
add
sahf
aad
aam
gs
insb
add
pop
or
cmpsl
cmpsb
push
je
int
es
pusha
pushl
push
insl
shl
in
ret
mov
push
cmpsl
test
and
sbb
aaa
jb
xor
fcompl
into
ljmp
add
aad
test
test
push
hlt
mov
cmp
push
push
jg
je
jmp
xchg
inc
dec
sbb
jb
jne
mov
addr16
lahf
mov
cmp
clc
out
cld
xchg
test
xorl
add
xor
outsl
and
scas
pop
xchg
and
add
sbb
std
mov
mov
jne
test
outsl
imul
aaa
mov
nop
pop
adc
pop
mov
aas
add
add
rcll
lods
rol
and
je
cwtl
movsb
outsl
or
cltd
mov
mov
cmp
aad
dec
push
mov
fildl
je
ja,pt
mov
mov
add
shl
and
jmp
pop
movsb
das
sub
jo
jecxz
mull
aaa
cmp
or
bound
sbb
or
xor
jb
inc
pop
dec
fsub
mov
test
push
ret
fwait
mov
pop
ret
in
mov
mov
mulb
iret
mov
test
pop
imul
into
and
fcomp
mov
mov
and
mov
shlb
sub
dec
out
adcl
mov
lods
sbb
imul
cld
push
and
inc
ror
push
loope
bnd
xchg
out
shll
insb
sbb
inc
pop
dec
inc
pop
push
jp
jge
jmp
and
cli
aam
mov
loopne
cmp
test
enter
pop
jge
push
pop
push
fimull
stos
sti
lcall
loop
adc
cmp
shl
in
pop
cmp
dec
pushf
dec
stos
dec
dec
inc
test
mov
sub
dec
test
pusha
das
mov
mov
adc
rclb
and
repnz
mov
jmp
or
cmp
or
jb
pop
daa
icebp
in
aad
add
idivb
sar
dec
cmp
nop
push
cmc
xchg
add
cld
mov
ret
jg
and
inc
add
lock
adc
jle
cmp
unpcklps
insl
in
sub
cmp
stc
push
js
mov
scas
jns
rcll
and
mov
neg
xor
ja
mov
outsl
mov
xchg
inc
jnp
ljmp
inc
pop
and
mov
or
and
mov
sti
pop
mov
clc
push
push
insl
xchg
lds
cmc
out
ds
adc
xchg
in
mov
and
aam
scas
xchg
ret
lret
pushf
fwait
cwtl
or
and
aam
push
out
mov
jae
scas
sbb
cs
les
jbe
fmull
sub
pop
sub
xchg
popa
test
add
popf
cltd
ss
test
sbb
push
mov
adc
push
repnz
mov
mov
stos
pop
repz
xor
std
jbe
fisubrl
pushf
js
mov
aaa
aad
out
jb
daa
sub
and
add
push
ljmp
sub
pop
fs
adc
add
mov
loope
xor
inc
mov
imul
fmuls
dec
inc
pop
xor
push
scas
mov
cmp
jmp
ret
mov
pushf
lods
dec
ss
les
sub
push
pop
cmp
cmc
or
dec
sarb
cli
cld
cmpsb
in
dec
add
sub
scas
adcl
mov
and
call
in
mov
enter
xor
je
inc
inc
cwtl
setns
add
cmpsl
cmpsb
out
sbb
stos
inc
dec
pop
adc
mov
fld
js
sbb
mov
shrl
aam
pop
out
fistps
insb
jg
popf
fxch
aad
aas
mov
dec
push
xor
in
add
sbb
push
and
jp
scas
xorps
movsl
jno
lods
ja
popa
icebp
std
mov
movsl
pusha
mov
push
orb
or
daa
pop
xchg
and
out
inc
dec
stc
fdivs
jp
mov
idivl
stos
repz
fwait
icebp
test
stc
nop
les
out
jno
jl
xchg
mov
lods
ja
jnp
movsl
sub
push
pop
sbb
mov
or
jl
jnp
jecxz
mov
fnsave
mov
pop
and
js
or
movsl
or
stos
add
dec
ds
aam
aas
push
and
hlt
push
insb
inc
aam
sub
cmp
mov
rcl
dec
sbb
mov
xchg
xchg
fldcw
add
xor
sbb
push
sar
xor
mov
or
in
sub
fcmovnb
and
xorb
xor
loope
xor
pop
push
call
mov
add
add
fildl
add
add
sub
add
add
add
add
add
add
and
add
add
repnz
add
add
or
add
add
add
stos
addb
add
add
add
sbb
add
add
add
add
add
inc
mov
add
add
fildl
add
add
subl
push
mov
int3
int3
int3
int3
int3
pop
add
mov
inc
ljmp
inc
mov
and
add
mov
adc
add
add
fwait
add
add
jp
add
add
add
push
add
add
ljmp
mov
add
add
sbb
pop
add
fidivs
inc
dec
pop
mov
imul
push
outsb
gs
push
cld
out
xor
xchg
fdivrp
cmp
jae
in
dec
je
ss
or
pinsrw
lea
add
push
adc
lea
adc
decl
pop
in
mov
add
jae
ret
dec
dec
xor
cwtl
sub
add
push
in
incl
push
mov
rorb
mov
ljmp
xor
push
test
jne
add
imul
pop
lcall
push
mov
out
push
adc
or
jne
adc
cmp
adc
pop
add
jne
lea
mov
mov
mov
incl
jne
in
adc
push
sbb
inc
add
mov
dec
jmp
add
add
sbb
sbb
mov
add
jnp
add
inc
imul
insl
je
scas
insl
je
jo
and
outsb
jo
pop
fs
gs
add
pop
ret
add
inc
and
insb
push
inc
cs
dec
add
fisttps
gs
mov
add
cmp
gs
flds
add
add
add
add
mov
add
jnp
add
add
stos
add
add
sub
jp
add
add
mov
add
add
fisubrl
add
add
pop
add
ret
sub
push
push
cmp
hlt
je
cs
mov
ret
push
mov
loope
mov
fstp
or
sti
adc
dec
mov
inc
gs
dec
cmpsb
mov
push
sub
pop
ficompl
idivl
dec
outsb
jg
adcl
push
sbb
jg
addr16
rcpps
jne
pop
adc
out
dec
imul
in
insl
push
jno
hlt
fneni(8087
jp
incl
movsb
fstpl
cmp
std
loopne
push
add
mov
repz
adc
pop
and
cli
test
sub
mov
lea
sbb
mov
fmuls
mov
xor
out
cmp
mulb
sbb
xchg
pop
orl
mov
mov
stos
loop
pushf
ds
inc
mov
ret
sbb
push
rcr
adc
std
popf
cmp
int
jle
and
or
adc
dec
das
sub
lahf
and
jmp
sub
lcall
daa
push
pop
adcb
fsubrl
mov
sub
jg
mov
ret
cwtl
push
pop
jl
pusha
add
fs
push
daa
lret
lods
mov
mov
push
fcoms
sub
adc
mov
mov
xor
sbb
push
insb
push
inc
mov
cmpsl
fsubrl
nop
pop
aam
mov
add
pop
mov
xlat
fstl
xchg
mov
sahf
push
fdivl
loopne
sbb
shl
cmpsb
mov
push
xor
hlt
cmp
loopne
fidivs
sub
mov
lret
pop
mov
icebp
mov
add
out
arpl
jecxz
aam
xchg
test
imul
adc
outsl
jne
jnp
sub
xlat
addr16
out
std
aad
out
xchg
rcr
scas
sub
push
xchg
pushf
arpl
cmp
scas
ret
or
lods
pop
cmp
cmp
fwait
lcall
add
and
pusha
lds
pushf
add
inc
mov
sbb
and
rcrl
xchg
mov
mov
add
pop
ljmp
jns
dec
jge
or
outsb
inc
lods
sahf
mov
push
sub
push
dec
sbb
jp
push
decb
fstpt
sahf
push
insb
add
or
or
xchg
pop
pop
arpl
and
nop
popf
jbe
inc
stos
popf
loop
loope
inc
mov
mov
dec
add
popf
test
loop
xlat
leave
sbb
testl
and
enter
xorl
jo
loopne
fisttpll
xchg
cmp
in
adc
add
jecxz
lcall
popa
inc
lahf
imul
dec
xor
or
add
add
or
jl,pt
lcall
mov
fwait
mov
mov
daa
sete
adc
test
icebp
pop
clc
sub
dec
or
sahf
aaa
into
or
aaa
inc
scas
fnstsw
sbbb
shr
fstps
xor
pop
mov
mov
mov
stc
xor
mov
sbb
xor
hlt
scas
in
or
jg
lcall
pop
sbb
xor
mov
jge
out
push
mull
dec
call
xor
push
cmpsl
in
inc
clc
ret
fildll
bound
mov
and
jns
jo
jp
out
xchg
test
adc
movsb
and
dec
test
cmp
imul
push
cltd
add
mov
incb
jg
jg
in
hlt
imulb
fucompp
xchg
xchg
aas
fxch
cmp
sarb
popf
xor
out
pushf
cmpsb
sub
or
stos
mov
sbb
clc
stos
decb
out
mov
icebp
outsb
fs
shlb
jnp
dec
ret
cwtl
jbe
push
rorl
xchg
push
mov
push
inc
out
lds
inc
sbb
jae
inc
bound
xlat
mov
adc
inc
les
mov
cwtl
rolb
aas
sbb
insl
dec
push
les
aas
xor
dec
int3
adc
and
js
pop
pop
push
gs
mov
fs
shll
movsl
and
push
jne
ljmp
ljmp
lea
mov
jg
lods
sbb
int
movsb
xchg
sub
int
repnz
aad
push
adc
jnp
jle
inc
push
sbb
popa
outsb
inc
call
jmp
and
mov
ja
imul
nop
sub
test
jge
das
push
adc
shll
jne
add
pushf
inc
repnz
ss
mov
stos
dec
ss
jp
ja
les
mov
imulb
push
mov
hlt
or
pop
pop
sub
js
cwtl
pop
xchg
pop
mov
insl
and
or
jns
aam
inc
fs
adc
cmpsb
push
out
das
fnstcw
xor
inc
and
cmp
jae
jmp
hlt
jns
mov
imul
popf
xor
sbb
mov
and
dec
cmp
sahf
ss
xlat
jbe
inc
sbb
lods
aam
lock
mov
push
inc
push
es
mov
pop
packuswb
push
gs
aam
xor
xchg
dec
or
jae
adc
out
aas
inc
pop
lea
cld
pusha
pop
and
jmp
in
ja
repnz
mov
lock
clc
or
xchg
imul
stos
or
jbe
sahf
xchg
aad
jle
mov
fbld
push
sbb
ss
push
test
cs
nop
xchg
mov
lods
pop
stos
idivb
sbb
les
mov
inc
mov
push
loope
repnz
rep
add
xor
andb
shlb
fsubr
sub
mov
cmp
in
aaa
cmp
dec
lods
jge
movsl
jno
and
cmpsl
insl
iret
push
test
mov
std
push
mov
jge,pn
inc
push
imul
inc
and
pop
sbbl
push
nop
in
fldl
sub
call
or
daa
pop
inc
inc
sti
jle
pop
in
xor
and
dec
int3
mov
shlb
into
hlt
in
js
fdivl
push
lock
inc
testl
adc
mov
dec
call
dec
adc
stc
cmp
ret
jb
push
test
cmp
testb
loope
fidivrl
sub
sub
loop
call
dec
mov
aaa
test
cmpsb
ret
and
push
ficoml
sub
pop
jo
scas
fimull
add
fistps
mov
lcall
or
jecxz
in
mov
dec
inc
test
mov
in
out
mov
pop
adc
lock
cmp
jmp
daa
pop
push
jnp
fldcw
cli
sbb
mov
mulb
jns
dec
adc
test
sub
test
fidivrs
sbb
dec
inc
xor
cltd
aaa
pushf
out
das
push
and
sbb
pop
iret
mov
orl
pushf
scas
and
pop
mov
sbb
scas
call
xchg
scas
xlat
cwtl
cmpsb
vcvtsd2si
and
fs
push
div
push
add
int
daa
mov
ja
lcall
lea
push
xchg
sbb
repnz
es
cmp
ja
mov
stc
or
cs
popa
adc
adc
or
jb
pop
js
cs
test
out
inc
mov
mov
lea
push
sbb
or
xchg
jl
sbb
add
test
sbb
xchg
cli
sub
pop
mov
pushf
mov
cwtl
lods
pop
out
outsb
sti
add
mov
dec
mov
push
jnp
mov
mov
das
fisubrs
push
and
insb
testb
popa
mov
inc
clc
sti
mov
cmp
cmpsl
psubsw
mov
cli
cmpsl
cld
mov
fistpll
icebp
in
int3
mov
dec
or
jmp
or
push
dec
xor
movsb
dec
xor
cltd
and
mov
in
inc
loope
loopne
mov
sahf
icebp
int3
and
divl
imul
call
punpckhdq
push
add
pop
sub
pop
outsb
and
loope
inc
and
mov
sub
stc
xchg
fwait
mov
movsb
xchg
inc
xchg
mov
data16
cmp
sahf
xor
and
xor
cs
hlt
int3
lods
imul
jmp
pop
enter
or
subl
mov
into
aas
or
jns
jnp
and
pop
sti
rcll
xchg
sbb
sbb
js
jle
scas
mov
fsubrl
test
mov
xchg
fneni(8087
push
lcall
mov
insb
ret
mov
pop
shrb
add
cld
hlt
mull
rol
cmpsl
xchg
insl
pop
add
xchg
repz
xorl
sub
sub
popa
fs
sbb
fwait
mov
jae
cmc
mov
addr16
and
sub
mov
pop
adc
scas
mov
mov
jl
aaa
push
jmp
add
int3
gs
in
xchg
xchg
mov
sub
aas
lcall
xchg
jno
ja
ss
in
and
cmp
or
adc
dec
in
sbb
mov
dec
mov
mov
cmp
sar
jmp
outsl
sbb
cs
sti
mov
xor
and
mov
scas
pop
adc
je
loop
popf
stos
fwait
mov
loopne
test
les
sbb
jns
imul
sbbl
cmp
push
leave
pop
loopne
mov
pop
repz
movsl
adc
sbb
sub
das
ret
sub
inc
inc
into
sbb
sti
insl
adc
cld
jne
mov
iret
jns
pop
movsl
pusha
xor
or
lahf
xor
rolb
sarl
outsb
repz
sbb
cmp
movsb
and
jo
and
icebp
or
fstps
movsl
iret
stc
push
insl
sub
cli
xor
call
pop
and
ret
gs
xchg
cmc
xor
xchg
mov
out
add
orb
stc
push
sub
add
insb
jmp
popf
stc
dec
pusha
lea
int
mov
ret
xchg
add
cmp
rol
jge
xor
sub
or
pop
es
rcrb
mov
inc
or
push
add
mov
loopne
shll
imul
js
mov
jle,pt
das
mov
cmp
lock
jnp
cmc
mov
xchg
fists
sub
lock
and
jno
into
leave
push
aaa
push
add
xor
pop
in
cmove
lods
lods
xchg
jge
dec
ret
jne
pop
daa
xlat
lret
dec
xor
int
cwtl
sahf
daa
aam
out
xchg
fcoms
xchg
pop
cmp
xor
pop
rorl
jl
mov
aaa
loop
imul
pop
aam
mov
scas
pusha
aaa
rcrl
or
scas
mov
or
vfmaddps
insb
loopw,pt
mov
mov
add
addl
movsl
dec
sbb
mov
dec
out
jg
mov
iret
xlat
aaa
stmxcsr
scas
xchg
int
xlat
aas
mov
pop
lods
xor
cmpsb
test
mov
vprotq
xor
jbe
mov
insl
push
test
stos
cld
sub
jle
in
sbb
pop
shr
bound
cmp
popa
ds
jmp
bound
test
jns
ret
mov
lret
fisubrs
jecxz
pop
pop
push
sbb
out
jp
xlat
out
push
add
xchg
cmp
pop
scas
adc
dec
mov
and
fisttpll
xchg
and
imul
and
js
filds
pop
add
lret
pop
or
and
and
mov
into
mov
sbb
sub
mov
test
outsl
sbb
pop
scas
adc
aaa
inc
push
aad
addb
sub
xchg
cmp
je
js
mov
inc
rcr
cmpsb
lock
cmpsl
outsl
or
dec
aas
and
lock
xchg
ljmp
jg
clc
fdivrp
jb
push
dec
jmp
pop
rolb
sub
sub
sub
mov
popa
outsb
int
and
jno
xorb
insb
or
mov
dec
cs
fs
pop
leave
insb
das
sub
sbb
or
bound
inc
add
rclb
xchg
filds
neg
loop
iret
shrb
dec
cmp
jns
stos
pop
mov
lods
imul
xor
push
and
dec
ret
rorb
add
popf
orl
scas
xor
js
jecxz
loope
rorb
xor
shlb
inc
xor
sbb
lock
scas
cli
jo
mov
cmp
stc
les
inc
add
sahf
aad
fmull
xorb
xchg
insb
notb
xor
cmc
or
xlat
cmp
jge
pop
pop
pop
pop
enter
pusha
test
outsb
pop
int3
das
aas
cmc
loope
adc
xor
popf
repnz
jg
xchg
and
adc
ja
ret
cmpsb
adc
or
mov
sbb
and
scas
out
dec
fcomip
jns
loopne
dec
outsl
and
cmp
daa
pushf
dec
imul
sbb
mov
std
pushf
ljmp
pop
ja
adc
or
mov
push
fcomps
lcall
jp
test
xchg
mov
in
gs
inc
xor
pop
cmp
dec
cli
mov
jmp
jmp
add
jne
imul
lret
push
push
shll
repnz
dec
sbb
ja
mov
hlt
loopne
or
fnstsw
inc
shll
scas
jecxz
dec
xor
cwtl
inc
or
fisubs
xchg
xor
xchg
fcmovne
sub
mov
mov
shll
sub
ret
inc
sub
dec
mov
xor
xor
lret
in
rorl
and
jno,pn
dec
scas
sbb
fcmovnbe
lcall
pop
addb
pop
and
push
push
mov
mov
xor
jb
inc
jl
aaa
loopne
mov
mov
push
lahf
inc
ret
mov
dec
pushf
fbld
push
mov
aad
outsl
and
loope
jns
sbb
fnstsw
pop
push
sub
mov
mov
and
push
jno
xchg
dec
mov
out
cmp
adc
xlat
mov
jle
add
shr
cmp
xlat
out
cmp
jno
sub
mov
out
out
fnstenv
mov
sub
jno
imul
ja
in
loopne
pop
jne
movsl
xor
ret
popa
jp
push
jmp
out
pop
push
bound
add
aas
fnstsw
ret
hlt
inc
popf
lock
xchg
loop
sub
addb
fs
sbb
mov
popa
stos
sbb
shrb
inc
lret
cmpl
shr
xchg
jle
pop
mov
cmc
inc
scas
sub
faddl
jo
cmpsb
hlt
sbb
mov
mov
cs
fdivs
sbb
adc
shrl
pop
cmpsb
ja
cmc
pop
jne
lret
cmp
in
inc
pushl
sbbb
mov
in
jnp
outsb
sarl
out
jl
cmp
xor
maskmovq
negl
leave
xchg
sarb
add
inc
sub
out
mov
test
cmpb
movsl
nop
cmp
fwait
mov
xor
xor
sub
push
xor
hlt
and
inc
jno
cmpsb
adc
out
cmp
pusha
outsl
shl
ret
dec
inc
add
clc
shll
lock
notb
nop
js
dec
jecxz
inc
mov
cmp
call
add
call
push
mov
test
icebp
push
pop
pop
push
cmpb
inc
mov
sub
xor
xor
jge
test
jns
cmp
gs
inc
adc
pop
int3
jne
add
out
mov
and
mov
lret
push
in
sti
imul
cmpsl
lds
pop
push
test
pop
insl
mov
mov
push
xor
mov
aaa
sbb
icebp
pop
insb
add
dec
or
lret
cmp
adc
ret
add
call
mov
lret
lods
pop
xchg
push
out
mov
nop
cmpsb
das
sti
leave
faddl
test
ljmp
lods
sub
sbb
stos
mov
test
inc
jp
call
and
test
test
xchg
push
ret
cmpsl
gs
cwtl
pushf
add
push
int
into
pop
cmpsb
inc
leave
leave
dec
je
test
mov
punpckhbw
cmp
aam
das
lea
dec
rolb
inc
sub
out
mov
mov
pop
addr16
ds
scas
jl
cmpsl
mov
rcrl
lret
lods
push
lods
jg
out
test
inc
aad
xor
sub
push
daa
fisubs
cmp
mov
lock
xlat
xor
inc
push
sbb
mov
mov
cmp
jne
test
sti
movsl
cld
shrl
inc
adcl
out
and
adc
cmp
out
aas
scas
sbb
dec
mov
in
scas
ret
lea
sar
cltd
inc
jno
lods
ss
or
jmp
lods
xchg
in
ds
xor
or
or
mov
inc
ja
push
pop
xchg
in
cli
fwait
ds
push
or
xor
cltd
in
das
pushf
loopne
outsl
and
xor
cli
mov
jnp
and
jo
cmpsb
push
mov
repz
sub
jle
dec
sti
push
jg
inc
addr16
es
idivl
movsb
pop
mov
iret
dec
int
inc
in
inc
cmpsb
sbb
lcall
imul
mov
mov
jmp
adc
inc
jae
mov
leave
lret
in
sub
out
out
sub
js
and
add
shlb
js
inc
fwait
andnps
jbe
add
sub
xor
std
pop
popf
pop
arpl
and
loopne
mov
xchg
ret
icebp
outsl
sub
lret
stc
mov
jne
ret
mov
les
inc
xchg
adc
aas
mov
lock
or
fdivrl
lods
and
mov
or
inc
pop
aas
mov
cmp
push
xchg
aam
dec
ret
mov
jns
es
mov
xchg
cltd
mov
jo
pop
pop
mov
mov
mov
js
jle
push
jae
lods
jmp
repz
pop
or
ret
mov
jns
xor
push
cmp
add
add
mov
sbb
push
jp
fdivrs
sub
ret
into
inc
lret
mull
insb
mov
popf
adc
mov
xchg
xor
insl
add
lock
shl
xchg
lds
mov
jbe
cmpsl
mov
jecxz
popa
cmp
pushl
push
push
adc
mov
iret
push
scas
mov
test
or
mov
out
or
xor
mov
in
xchg
sbb
je
and
cltd
jno
stos
xchg
ret
mov
push
pop
loop
pop
aaa
push
jnp
adc
cld
jns
sbb
or
sbb
aam
cli
xlat
fisubrl
jl
mov
rcrl
shll
inc
outsl
adc
or
test
fsts
jg
fadds
ret
cld
aam
lds
cmpsb
orb
mov
out
xor
cmpsl
fcomi
movsb
inc
ds
mov
push
scas
add
rcrb
stos
rorb
icebp
cmp
insl
xorl
sub
mov
lods
cmp
ds
push
daa
jno
test
and
fistpl
or
inc
sub
out
mov
jle
cwtl
sbb
aas
xchg
cltd
dec
stc
popf
repnz
imul
add
jp
add
add
mov
add
add
fisubrl
add
add
pop
add
add
cmp
dec
sti
add
add
lcall
sbb
add
add
dec
add
add
or
pop
jmp
add
add
add
add
mov
add
jnp
add
add
stos
xor
add
fwait
add
add
cli
lret
add
add
stos
add
ja
jecxz
call
int3
int3
int3
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
push
pushl
call
mov
pushl
xor
movl
pushl
mov
mov
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
push
call
mov
leave
ret
jae
jb
jo
add
adc
add
xor
call
push
push
push
call
push
imul
jb
je
arpl
adc
mov
call
mov
xor
push
push
mov
call
call
push
push
push
push
push
push
mov
call
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
rolb
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
roll
add
add
add
add
cld
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
roll
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fcom
add
clc
roll
add
rolb
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
rolb
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rcl
add
fcom
add
call
rolb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
aam
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
aam
add
aam
add
aam
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
aad
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
add
in
add
in
aad
add
aad
add
aad
add
add
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
add
pop
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
