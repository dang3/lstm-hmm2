and
inc
mov
or
ror
ror
add
sub
mov
mov
push
lea
mov
mov
sub
test
jne
jmp
lcall
cli
rol
mov
movzbl
add
mov
jmp
sub
jmp
push
shr
mov
and
jmp
std
sbb
in
sbb
or
rol
sub
add
mov
mov
push
push
mov
shr
mov
mov
jmp
push
jmp
push
call
jmp
int3
leave
inc
int3
addl
push
jmp
mov
movb
movb
movb
movb
jmp
add
ret
mov
and
cmpw
je
jmp
lea
xor
shr
mov
jmp
push
jmp
nop
push
push
push
call
leave
addl
push
jmp
inc
nop
int3
dec
call
push
pop
addl
call
ret
add
add
add
add
add
pop
and
mov
jmp
push
jmp
push
call
int3
xorl
call
shl
mov
push
push
jmp
push
jmp
call
xorl
call
jmp
mov
and
shr
sub
mov
jmp
test
push
mov
movl
mov
jne
xor
ret
test
jmp
mov
movl
movl
call
lea
addl
call
jmp
mov
movb
mov
movb
call
cmp
push
jae
jmp
mov
mov
movb
call
test
je
lea
cmp
je
jmp
pop
popa
decl
adc
fldenv
fisttpl
push
or
mov
or
add
rol
or
mov
jmp
cmp
je
shl
mov
and
mov
jmp
jne
push
jmp
call
call
call
call
subl
pushl
jmp
xor
ret
mov
mov
pop
ret
add
add
add
add
add
add
add
sahf
add
add
test
or
add
push
jmp
jne
push
jmp
dec
leave
dec
push
push
push
push
ret
pop
inc
addl
call
ret
add
add
add
adc
push
jmp
nop
push
nop
push
dec
xorl
push
jmp
leave
leave
pop
int3
addl
call
lea
jmp
sub
test
jne
or
mov
movzbl
add
jmp
mov
jle
jmp
add
in
in
and
mov
sub
mov
push
push
push
push
jmp
call
leave
call
dec
subl
jmp
cmpw
jne
sub
or
sub
mov
mov
xor
and
cmp
sete
mov
jmp
cmpl
jne
cmpb
jne
nop
nop
inc
sub
mov
jmp
and
and
mov
jmp
lea
sub
test
mov
mov
mov
jmp
test
jne
shr
shl
xor
ror
mov
mov
jmp
call
pushl
ret
shl
sub
mov
mov
or
xor
shl
mov
xor
mov
shr
jmp
nop
push
nop
jmp
pushl
call
add
pusha
mov
jmp
add
add
push
add
push
push
jmp
mov
jmp
push
call
cmpb
je
push
jmp
call
jmp
addl
call
add
ret
add
add
add
ror
mov
mov
shr
and
add
jmp
xor
sub
and
mov
sub
test
jne
jmp
add
ret
or
shr
mov
test
je
mov
add
jmp
lea
push
movb
jmp
call
pop
add
add
mov
call
jmp
lea
shl
dec
add
mov
shr
and
lea
sub
sub
inc
mov
mov
add
jmp
mov
mov
jmp
add
add
add
add
insb
and
mov
sub
push
jmp
mov
movl
mov
push
mov
mov
push
mov
jmp
lea
shr
mov
add
push
call
sub
inc
add
and
add
mov
jmp
mov
or
mov
ror
dec
dec
sub
and
mov
test
jne
add
ret
sub
and
mov
jmp
lds
movl
sub
jne
jmp
add
push
xor
mov
xor
add
shl
mov
sub
mov
push
jmp
lea
nop
movzwl
and
mov
xor
mov
and
cmp
jne
and
jmp
xor
inc
mov
and
mov
test
jne
add
ret
dec
add
mov
push
jmp
push
int3
ret
addl
jmp
out
or
inc
hlt
add
add
jle
add
jmp
mov
ror
or
xor
mov
jmp
xor
sub
and
dec
mov
lea
and
mov
add
test
je
jns
jmp
call
jmp
add
jmp
add
sub
mov
mov
mov
jmp
shr
xor
shl
ror
mov
sub
test
jne
jmp
mov
xor
and
add
dec
mov
mov
sub
cmpl
lea
je
push
push
jmp
push
rol
mov
jmp
jmp
jmp
add
push
sub
and
mov
sub
mov
mov
mov
mov
mov
jmp
sub
shr
test
lea
jle
shr
mov
jmp
jmp
movzwl
push
jmp
jmp
add
add
add
jmp
jmp
call
call
nop
push
push
push
dec
subl
push
jmp
call
dec
leave
push
xorl
push
jmp
call
ret
call
push
xorl
call
test
je
jmp
ror
mov
jmp
add
jmp
add
jmp
add
add
jmp
ret
leave
nop
inc
subl
call
test
jmp
add
add
call
mov
call
call
call
pop
call
add
jmp
push
jmp
dec
call
call
int3
call
leave
push
push
dec
xorl
push
jmp
call
ret
jmp
call
pop
subl
call
ret
add
add
add
and
jmp
call
ret
add
lahf
cmp
jmp
add
add
call
jmp
add
add
lea
lea
cltd
and
add
sar
test
jle
and
xor
or
mov
jmp
call
popa
jmp
mov
ret
add
add
add
idiv
decl
or
add
add
add
mov
add
mov
lea
mov
sub
mov
shr
and
jmp
add
add
mov
inc
mov
add
add
xor
cmp
mov
jmp
mov
ror
sub
dec
or
add
mov
add
mov
add
shr
inc
mov
inc
mov
or
sub
inc
rol
sub
mov
sub
mov
rep
jmp
add
cmpl
jne
pop
pop
pop
mov
pop
jmp
inc
mov
test
jle
shr
add
xor
shl
and
mov
jmp
mov
sub
shr
and
mov
mov
add
add
mov
sub
mov
lea
push
push
jmp
pop
push
call
jmp
pop
ret
addl
push
push
jmp
add
test
je
inc
shr
or
or
mov
sub
test
jmp
shl
mov
jne
movzbl
add
add
and
or
rol
mov
mov
jmp
movzwl
shl
xor
and
and
and
mov
add
add
sub
add
cmp
jmp
ret
pop
mov
pop
ret
mov
ret
add
add
add
adc
jmp
or
sub
sub
jmp
aas
cmp
call
push
jmp
call
leave
push
call
xorl
mov
call
push
jmp
push
ret
xorl
mov
call
jmp
mov
in
add
add
mov
or
xor
add
xor
mov
add
test
jne
add
jmp
mov
jne
sub
jmp
push
jmp
call
push
call
call
call
call
subl
mov
call
push
jmp
jmp
call
call
addl
mov
jmp
mov
sub
mov
shr
and
add
test
jmp
dec
leave
not
call
and
mov
mov
add
jne
add
ret
mov
xor
jmp
push
movsl
clc
mov
mov
jl
inc
dec
mov
mov
jmp
sub
push
mov
je
sub
shr
mov
add
mov
sub
test
jne
movzbl
add
mov
jmp
test
je
movsbl
rol
add
xor
mov
test
jmp
mov
push
mov
push
add
mov
shl
mov
call
add
xor
or
or
mov
jmp
cmpl
jne
pop
pop
pop
mov
pop
ret
add
add
add
cmp
incl
mov
jle
inc
add
and
mov
and
mov
add
jmp
call
add
mov
call
push
jmp
push
inc
call
jmp
call
push
dec
inc
dec
addl
jmp
lea
xor
mov
shr
mov
shr
and
add
test
jmp
jne
cmp
je
add
cmp
jl
pop
jmp
call
push
jmp
pop
push
call
push
leave
addl
push
jmp
ret
int3
call
call
push
nop
jmp
inc
addl
push
call
shl
shl
mov
call
sub
shr
sub
and
inc
mov
jmp
push
jmp
ret
xorl
push
jmp
jmp
call
call
push
addl
jmp
push
sahf
xchg
sub
jne
test
mov
jle
inc
ror
xor
mov
lea
push
shr
and
xor
and
mov
jmp
call
test
je
add
jmp
je
xor
movl
rol
or
inc
mov
sub
jmp
ror
sbb
rcrb
sub
add
or
mov
mov
pop
ret
or
ror
mov
movzwl
or
shr
mov
mov
jmp
movsl
fcomi
call
movl
lea
call
jmp
xor
test
add
mov
jmp
mov
dec
pop
add
pop
dec
mov
pop
ret
add
add
add
ret
dec
xor
mov
or
mov
mov
mov
mov
jmp
ret
pop
pop
mov
pop
inc
mov
and
add
shr
mov
pop
ret
add
add
add
pop
sub
mov
mov
jmp
std
pop
mov
dec
add
mov
mov
mov
xor
add
sub
jmp
sahf
adc
add
rolb
jmp
xlat
jbe
jne
mov
add
pop
mov
jmp
loope
lock
pop
pop
pop
dec
or
and
add
mov
pop
ret
add
add
add
mov
incl
sbb
test
add
add
and
rorb
add
add
hlt
pop
dec
sbb
in
mov
mov
pop
ret
add
add
add
rorb
mov
add
jmp
jmp
sbb
add
jmp
movzbl
or
inc
shl
mov
shl
mov
jmp
icebp
mov
and
add
jmp
shr
mov
mov
je
test
je
and
mov
sub
add
jmp
mov
pop
sub
mov
mov
jne
shr
add
add
mov
mov
mov
jmp
addr16
xor
inc
and
add
add
jmp
movl
mov
movl
jmp
lea
jmp
fistpll
call
cmpl
jne
cmp
jne
jmp
ljmp
incl
sbb
test
add
add
ret
repnz
mov
sub
add
sub
jmp
add
testl
decl
mov
add
sub
jmp
in
gs
add
add
sub
or
mov
movzbl
shl
add
add
lea
inc
mov
ror
or
mov
jmp
cmc
xchg
lods
mov
call
cmp
jb
add
cmp
jb
jmp
imul
incb
addl
add
add
test
jmp
mov
and
je
lea
add
mov
mov
sub
mov
mov
add
sub
jmp
test
or
decl
je
adc
add
lret
mov
and
sub
or
inc
or
mov
sub
add
or
or
mov
movl
jmp
loop
in
pop
add
add
add
lret
roll
movb
je
sbb
inc
and
add
add
mov
cmpl
je
jmp
xor
negl
add
call
shrl
add
add
pop
pop
shl
mov
pop
ret
add
push
and
add
add
insb
and
add
add
mov
add
add
add
push
and
add
and
add
and
add
add
add
add
add
and
add
and
add
add
jp
add
insb
and
add
add
mov
add
add
add
push
and
add
and
add
and
add
add
add
add
add
and
add
and
add
add
add
add
outsb
inc
jb
jbe
jb
add
add
outsl
jae
inc
jb
jbe
jb
add
add
je
push
jne
je
push
jo
arpl
inc
add
cmp
push
popa
je
inc
gs
push
jo
inc
add
xor
push
popa
je
inc
imul
inc
outsl
insl
jo
outsb
outsb
je
add
push
add
gs
je
inc
imul
js
je
jb
arpl
jae
mov
je
push
add
filds
inc
gs
imul
je
add
push
jb
arpl
fs
jae
mov
fs
imul
add
adc
add
add
add
add
lock
add
add
inc
or
add
add
add
push
xor
xor
xor
gs
ds
cmp
cmp
cmp
and
cmp
and
xor
xor
cmp
cmp
mov
mov
xor
ss
lea
cmp
xor
lea
and
addr16
xor
fdivs
out
cmp
lea
mov
add
add
xor
xor
cltd
xor
xor
xor
add
add
add
and
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
inc
rolb
rcrb
dec
ffreep
jmp
mov
and
test
dec
xchg
pusha
test
push
sbb
pop
pop
pop
pop
pop
pop
cs
inc
xchg
popf
ss
xchg
mov
in
rcrl
add
lods
ret
neg
int3
mov
fisubrl
pop
aad
adc
pop
imul
push
add
scas
and
sbb
xor
out
testb
dec
dec
add
jbe
icebp
xchg
icebp
stc
lods
inc
adc
movq
jno
mov
iret
into
sbb
out
cli
pusha
mov
and
lock
adc
cmp
fs
movsb
lcall
mov
jecxz
pushf
inc
rorl
bound
cmp
mov
ret
shlb
push
pushf
pushf
pushf
pushf
pushf
pushf
jle
sub
pop
sub
sbb
pop
.byte
