push
mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
test
xchg
cmpsb
cmc
mov
mov
and
xor
pop
sub
lret
xchg
aam
in
hlt
mov
and
xor
test
push
sbb
cmp
mov
les
hlt
mov
dec
sbb
inc
pop
cmp
dec
sbb
fcmovne
lock
movsb
fcoms
or
test
pop
gs
fisttpl
lods
imul
add
ret
xor
ret
pop
fwait
clc
cli
dec
add
jae
sbb
xchg
cmp
imul
mov
sub
aam
pushf
or
dec
fsubl
cmp
inc
movsl
and
hlt
mov
add
je
test
fcmove
ljmp
popa
inc
hlt
jmp
js
dec
ficoml
adc
out
inc
sbb
je
inc
cmp
aam
addr16
mov
in
push
inc
pop
mov
ret
stos
pop
xor
jne
jns
imul
ljmp
imul
dec
fldt
jnp
hlt
and
hlt
cmp
xchg
aam
in
hlt
mov
and
xor
inc
or
sub
cmpsb
loopne
int
fnstsw
or
lret
add
jno
and
dec
adc
pop
test
icebp
xchg
shr
lods
out
xchg
mov
les
aaa
es
cmp
add
fwait
xchg
scas
lret
lahf
fmuls
in
hlt
mov
and
xor
inc
or
sub
lret
xchg
aam
in
hlt
mov
and
xor
inc
or
sub
lret
mov
cmp
fwait
sub
dec
jno
mov
mov
pop
test
add
cmp
mov
fwait
lret
ret
ds
xor
mov
inc
mov
loopne
mov
sbb
ret
xlat
loopne
fsubs
lahf
cmp
jge
mov
cld
push
xchg
addb
cmp
enter
push
xlat
jbe
pusha
lock
sub
sbb
xchg
cmp
inc
mov
dec
int
xchg
jg
out
dec
aad
or
mov
cmp
xor
ret
pop
cld
push
mov
adc
shlb
or
fstpl
dec
imul
repz
and
dec
add
arpl
shrb
jl
xchg
pop
daa
push
test
jno
jbe
mov
xchg
cmp
inc
icebp
popa
movsl
sbb
repz
ss
stc
push
pop
add
stc
and
xor
mov
lcall
pop
js
add
aas
inc
cmpsb
lcall
popf
popf
ljmp
roll
pop
es
lcall
cld
push
popf
aam
out
in
rcrb
mov
and
push
fwait
mov
in
fsts
aad
popf
xor
dec
xchg
adc
pop
pop
mov
je
fs
jae
pop
movsb
addb
lock
data16
cwtl
addl
mov
xchg
ror
jmp
adc
cltd
leave
pop
mov
lock
pusha
in
out
xchg
mov
cmp
lahf
popa
push
pop
sbb
std
cmp
push
and
mov
sbb
aas
cld
gs
mov
lahf
subb
and
jne
inc
loope
out
dec
in
add
dec
jnp
jbe
shll
mov
jle
loope
hlt
mov
cld
loope
and
pop
ret
inc
imulb
or
adc
lea
ja
jge
push
es
mov
xor
mov
shlb
jbe
aad
fistpl
xchg
push
loope
xchg
lret
imul
pop
shll
and
push
inc
and
push
cli
js
mov
and
jbe
shll
xor
cmpsb
jnp
mov
push
fisttps
repz
sub
xlat
mov
dec
jbe
mov
push
mov
int3
out
je
push
cmp
cs
repnz
movsb
xor
ret
cmp
jbe
mov
out
inc
fmull
ret
sbb
xchg
xor
clc
mov
das
ret
mov
xchg
pushf
pop
sub
outsl
lret
setns
mov
and
into
je
lods
dec
outsb
mov
decb
ljmp
fucomp
pop
mov
testb
pop
xlat
xchg
mov
inc
mov
psllw
fnstcw
adc
out
aas
in
push
lahf
xor
mov
xlat
jle
shl
fimull
sub
sbb
ret
inc
test
shrb
dec
outsl
lret
sti
aas
lret
int3
scas
pop
lea
fsub
xchg
gs
dec
lret
scas
test
ljmp
add
and
ret
adc
fbstp
add
dec
fiadds
clc
test
ljmp
mov
rcrl
fbld
xchg
mov
fdiv
push
lock
js
push
jecxz
cs
das
mov
pop
bound
cmp
mov
cmc
imull
aas
add
icebp
int
jge
jle
jno
mov
dec
jle
inc
jle
xchg
cmp
shl
sti
mov
ljmp
sub
adc
jecxz
rcll
adc
sub
pop
pop
jmp
js
or
scas
push
je
insl
pop
push
sbb
mov
fsubrs
pop
push
inc
popf
jnp
das
pop
iret
repz
adc
cmp
fwait
bswap
push
mov
inc
loop
push
pop
jae
in
aad
enter
addr16
inc
push
push
jl
xor
pusha
es
or
sbb
sbb
xor
pop
ss
inc
and
sub
je
lcall
add
jae
mov
pushf
fs
outsb
fistpl
mov
add
aad
lods
sbb
cmp
or
in
lods
daa
pop
and
das
or
in
cmpsb
mov
lods
loop
shrb
rorb
ja
lods
das
sub
push
add
dec
push
je
fcmove
sub
addl
stos
stos
jmp
loopne
or
insl
jns
sub
out
mov
mov
std
test
fmul
dec
stos
pop
push
xlat
inc
mov
inc
imul
stos
add
fimuls
sub
push
cmp
mov
cmp
dec
cli
shll
or
ds
inc
xor
mov
notl
cmpl
dec
mov
out
adc
sub
adc
push
mov
shrl
pop
dec
pop
mov
jmp
fs
jle
imul
in
adc
loope
push
dec
enter
cmpsl
in
push
ds
hlt
in
jge
push
mov
lock
mov
lods
hlt
push
insl
cmp
add
xchg
movsb
sar
jb
adc
in
push
sahf
mov
fisubl
scas
inc
data16
pusha
push
mov
sub
jnp
sbb
mov
lret
push
outsb
fstl
enter
adc
inc
and
rol
daa
rorb
jecxz
test
divl
push
pop
push
pop
xor
xchg
in
out
and
fcmovu
xchg
sti
jg
push
sub
cltd
jl
js
sbb
mov
ja
aas
bound
insl
jmp
mov
and
push
mov
push
jp
sub
mov
add
push
not
fsubl
add
jbe
jo
adc
mov
sbb
and
adc
lods
pop
cmpsb
fisttpl
sub
cmc
push
or
into
jp
imul
cvtpi2ps
or
test
aad
xchg
xchg
cmp
insl
shl
push
push
jne
sub
inc
jecxz
dec
leave
pushf
nop
sub
sbb
pop
js
lcall
dec
pop
stos
fwait
arpl
push
aam
int
mov
hlt
sbb
mov
ljmp
imul
dec
inc
cmc
lgdtl
adc
add
xchg
les
shrl
sbb
push
inc
insb
aas
add
lret
jmp
jp
sub
dec
sarb
inc
cmpsb
adc
mov
test
xor
sub
insb
jl
aad
sbb
and
iret
jle
ja
js
and
push
bound
mov
push
jl
xchg
mov
outsl
aam
jl
enter
imul
and
adcb
dec
sbb
sbb
out
mov
cmp
stc
pop
call
sub
roll
sub
xor
sbb
fadds
or
mov
cmp
test
sbb
sub
or
xchg
xchg
mov
mov
add
or
mov
pop
lret
mov
jmp
jae
push
mov
out
mov
push
orb
adc
jae
mov
xchg
jmp
sbb
xor
loope
scas
fnstenv
xchg
movups
jns
or
loopne
xor
jl
xchg
loop
jle
mov
mov
jae
aad
movsl
sbb
dec
mov
push
xor
add
adc
jg
mov
dec
push
push
ja
dec
xchg
add
mov
fs
cmpsb
repnz
int3
aam
lods
lcall
mov
rdmsr
out
pop
bound
and
fdivrs
pop
xchg
xchg
popf
cmp
ja
sahf
mov
sti
loop
pop
pusha
les
rclb
out
fiadds
nop
popf
test
imul
adc
jbe
and
cmp
icebp
mov
mov
sbb
sbb
sub
lods
aam
loop
inc
jmp
mov
mov
xor
fwait
in
fcompl
in
sub
add
ljmp
adc
cmp
jnp
lret
sub
cmp
add
sbb
mov
jecxz
in
mov
sarl
xchg
es
andps
cmp
iret
sbbl
sbb
push
jp
movsl
sbb
and
pop
les
movsl
jp
divb
add
cmp
pop
inc
ljmp
subb
inc
ja
jmp
ret
cwtl
dec
or
cmc
orb
test
divb
loopne
pop
inc
out
lods
inc
sar
pop
cs
fistpl
jmp
jmp
das
fidivrl
and
pop
dec
mov
iret
pop
jmp
icebp
loopne
popf
ficoml
orb
inc
sub
add
cmp
and
jae
repz
and
sbb
dec
inc
cmpb
inc
and
inc
cmp
out
adc
movsb
cmpsl
lcall
mov
into
cs
and
test
push
leave
sarl
loopne
pop
insl
loop
rcrb
or
pop
cs
sahf
aad
xchg
ret
lahf
mov
fnstcw
or
and
push
pop
jle
xchg
mov
push
mov
aas
push
rcr
xchg
push
sub
stos
xor
sub
pop
js
adcl
push
movsl
sbb
adc
stc
pop
notb
nop
add
cmc
aam
mov
scas
lods
push
or
popf
mov
lods
mov
cltd
xchg
rcl
inc
mov
sub
mov
xor
mov
xor
out
insl
data16
mov
adc
aaa
mul
jle
jns
rcrb
cmp
outsl
pop
das
adc
push
enter
cld
clc
add
data16
jle
and
sub
pushf
das
cmc
popa
fldenv
gs
bound
subl
mov
ja
add
cs
lret
jg
xlat
or
ljmp
push
dec
inc
cmp
adcb
stc
insb
sbb
popa
sar
lods
outsb
adc
pop
repz
or
add
inc
hlt
js
push
or
sub
xsavec
out
jns
cmpsl
loope
xchg
jbe
jl
jne
rcrl
cmp
arpl
dec
pop
push
ret
lea
dec
push
shrl
repz
xchg
sbb
xorb
shll
jnp
jp
aad
mov
subl
and
loop
ret
rolb
push
ljmp
dec
jge
xor
lea
pop
cmovl
les
in
or
dec
mov
movsb
sub
mov
push
dec
push
test
iret
dec
and
out
pop
lock
add
xchg
mov
mov
push
mov
rcr
xchg
mov
pop
and
rcrb
dec
push
cmpsb
push
inc
push
sub
je
jp
std
pop
ljmp
dec
pop
cmpsb
push
jecxz
mov
pop
xor
mov
cli
sarb
lcall
jge
ret
xchg
pop
push
sbb
loope
dec
mov
jp
inc
mov
mov
xchg
mov
mov
sbb
out
mov
pop
and
ret
sbb
mov
pushf
add
or
iret
and
sbb
daa
mov
lds
stos
or
push
dec
adc
in
pop
sbb
add
cwtl
mov
rclb
cmp
and
mov
ret
or
push
push
insb
out
test
fildll
adc
pop
lds
ja
cli
push
int3
int
cmp
ljmp
dec
repnz
call
repnz
mov
addr16
jg
add
jbe
lods
roll
mov
cmp
mov
arpl
mov
clc
lods
sub
ljmp
popa
ss
dec
pop
dec
insl
rcrl
and
jmp
pop
shlb
out
nop
daa
jns
imulb
ja
sti
int
mov
adc
ss
je
xchg
jo
test
push
adc
lock
dec
push
jmp
filds
sbb
gs
mov
aaa
pop
fistps
and
sbb
outsb
loopne
xor
mov
shlb
pushf
arpl
xchg
ja
sbb
bswap
cwtl
int3
or
incl
jmp
cmp
xchg
out
adc
inc
or
iret
je
sub
push
pop
sbb
outsb
mov
fdiv
pusha
out
fwait
cmp
test
iret
mov
jns
jmp
lea
xor
jbe
jle
test
pop
or
adcl
movsb
pop
jb
cmp
je
xchg
pop
mov
xchg
xor
addr16
cld
mov
lcall
loope
jecxz
xchg
nop
cmp
pushw
and
push
into
cmp
into
shll
mov
pushf
mov
push
xchg
int
dec
push
pop
bound
adc
int3
fldenv
fdivs
xlat
test
and
loop
in
rorl
dec
fdivr
pushf
lea
out
bound
pop
cmp
sub
outsb
out
int
mov
inc
bound
insb
cld
nop
orb
adc
pop
lock
dec
mov
jp
test
outsb
dec
and
sub
insl
sub
and
xchg
icebp
xchg
mov
fadd
aad
mov
mov
cwtl
gs
xor
or
cld
in
jb
stos
insl
leave
adc
lretw
gs
adc
sbb
sbb
mov
push
push
push
mov
mov
add
adc
rep
mov
fstpl
sbb
int
jecxz
mov
ljmp
xor
jb
popa
add
jne
stos
fcoms
ret
arpl
mov
or
mov
outsb
bound
sbb
sbb
xchg
pop
pusha
push
ret
test
mov
xchg
das
mov
add
ljmp
xchg
xor
mov
test
mov
in
sahf
mov
adc
adc
das
fimull
or
mov
add
int
pop
add
sbb
xchg
dec
mov
stc
jne
pusha
and
adc
lret
adc
and
mov
hlt
mov
cli
dec
mov
and
mov
gs
lock
jle
and
ftst
or
popa
mov
dec
inc
push
pop
out
mov
call
or
mov
test
jge
loopne
xchg
repnz
lcall
sbb
jo
cltd
pop
iret
nop
pop
mov
mov
cmp
and
rorb
fcoms
pop
cmc
xor
push
fimull
pop
lret
pop
pop
les
sbb
jne
pop
fwait
mov
inc
lea
sti
or
or
sti
jnp
push
aad
add
sti
test
pop
mov
jp
fwait
and
mov
and
shr
fiadds
pop
pop
movsl
pop
imul
addr16
idivl
mov
or
sub
add
repnz
faddl
gs
testb
mov
aad
xchg
push
fs
mov
adc
or
popa
inc
int
mov
pop
cmp
cmp
mov
cmp
imul
ret
mov
leave
lods
jbe
mov
mov
xchg
orb
aam
sti
std
jo
jbe
mov
or
shrb
repz
mov
cmpsl
cmp
lea
sbb
pop
mov
sbb
push
add
mov
out
mov
push
out
out
jnp
into
mov
and
push
sub
lret
ss
cwtl
lea
divb
inc
cmp
negl
adc
repnz
fwait
jo
adc
mov
rclb
mov
in
push
movb
fimull
sub
fdivrl
cmp
icebp
das
movsl
leave
imul
push
dec
ja
push
shlb
xchg
xor
xor
cmp
cli
fistpl
roll
mov
jne
jne
pop
or
mov
iret
xor
pop
mov
xchg
addr16
pop
cmp
adc
cmpsl
sbb
dec
cld
cmp
jp
pop
push
loopne
cmpsb
popf
scas
xchg
test
jb
cli
data16
out
pop
iret
das
mov
xchg
xchg
mov
loop
insl
in
iret
mov
and
aam
fadd
pop
mov
adc
or
and
jae
sahf
popa
sub
inc
xchg
mov
mov
cmc
xor
notl
mov
cmp
push
dec
mov
mov
pusha
cmc
mov
testb
jp
inc
sbb
push
and
js
scas
push
or
test
les
mov
in
pop
jae
sbb
in
ja
dec
lods
lods
lahf
mov
sbb
inc
imul
imull
loop
push
mov
xchg
pop
ret
sub
adc
sub
pop
ds
test
out
xlat
dec
pop
pop
push
jno
jne
cmp
scas
pop
lods
pop
pop
cmp
mov
cld
mov
jno,pt
push
mov
sbb
repz
les
pusha
and
add
inc
mov
loop
inc
xlat
ret
cmp
xchg
push
movsb
fimuls
pop
cmp
test
data16
adc
stos
jb
rcl
xchg
shr
or
loop
mov
push
push
insl
arpl
lods
dec
mov
inc
push
or
push
sbb
xor
sahf
dec
push
stc
adc
xor
aad
insl
loopne
mov
jp
xchg
inc
sub
stos
loop
mov
inc
cs
pop
push
and
sbb
in
xchg
jne
inc
mov
aaa
fstps
popa
jmp
xor
pop
xchg
nop
jmp
jg
mov
jmp
mov
repz
and
inc
push
test
js
mov
out
mov
or
imul
add
mov
cli
dec
jg
stc
push
imul
pusha
je
imul
push
ds
fcoml
cwtl
xchg
sbb
adc
xor
shl
xchg
sbb
xor
dec
add
andl
adc
stos
fwait
mov
lods
std
jne
test
int
mov
lret
xor
mov
xor
and
nop
push
add
fcomps
ljmp
stc
mov
cmpsl
out
push
jmp
jne
jbe
enter
insl
ljmp
lods
mov
mov
ljmp
cmp
outsb
pop
ds
adc
pop
add
cltd
mov
sub
into
in
add
sub
jne
cmpsl
scas
cltd
push
and
enter
scas
lahf
xchg
inc
push
pop
or
outsb
or
pushl
mov
testb
mov
or
lock
mov
jle
loope
sbb
mov
mov
sbb
sbb
lea
or
in
rol
arpl
lcall
pop
or
ja
iret
push
leave
rorb
and
repz
dec
mov
sbb
push
xchg
inc
ret
dec
fsubs
sub
xor
add
mov
jae
rolb
inc
push
sbb
fmul
imul
repz
sbb
scas
dec
ret
jb
or
outsl
imul
jns
pushf
dec
sub
cli
icebp
stc
adc
ds
sub
push
sbb
int
aas
xor
and
push
mov
rol
and
sahf
mov
mov
xchg
mov
add
dec
pop
stos
pop
dec
jbe
push
dec
fsubrl
xchg
sbb
dec
fisubrs
stos
or
pop
cs
adc
jae
cmc
mov
aad
movl
sub
dec
scas
mov
call
std
xor
xchg
dec
adc
or
in
movsl
jmp
xchg
shl
fisttpl
sbb
mov
into
imul
inc
popa
nop
popa
xlat
mov
or
out
xlat
xor
fucomi
cmpsl
xchg
insb
or
icebp
out
xchg
push
insl
out
test
dec
icebp
dec
ja
into
sub
jae
or
repnz
xor
aam
icebp
fldt
cli
sbb
fnstenv
andb
test
icebp
test
sub
xor
int3
xchg
test
out
mov
fdivs
sub
popa
iret
fstpt
movsb
adcl
xchg
fwait
testb
adc
dec
int3
je
adc
add
adc
sbb
xor
sbb
test
or
in
ja
fnclex
inc
xchg
gs
jmp
js
mov
xchg
dec
pushl
xor
lret
mov
ret
jp
mov
into
shll
add
push
pop
jbe
xchg
jo
adc
fwait
hlt
mov
add
cli
cvttps2pi
add
mov
mov
into
and
aam
mov
adc
xchg
jle
out
jg
cli
lret
out
sbb
sub
fmulp
mov
cmp
jmp
fimull
push
pop
sub
push
add
aaa
or
aam
es
mov
loope
push
pop
cmp
rolb
sub
out
sbb
outsl
cmp
cs
stos
mull
loop
incb
xor
inc
insl
iret
mov
adc
int3
add
jle
in
jb
dec
pop
xchg
mov
out
sti
shll
test
mov
mov
pop
mov
dec
data16
xchg
js
xchg
xchg
dec
fs
aaa
adc
mov
mov
outsl
neg
sbb
sub
jo
mov
jae
jp
adc
cmpsb
add
aam
inc
cmp
cmp
mov
out
shrl
pop
test
ds
ljmp
in
hlt
mov
and
xor
inc
or
sub
lret
xchg
aam
in
hlt
mov
and
xor
inc
or
sub
iret
adc
and
mov
inc
mov
fwait
in
je
add
adc
and
xor
inc
or
sub
lret
xchg
aam
in
hlt
inc
add
adc
mov
or
andl
aam
les
in
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
adc
add
push
xor
fs
adc
pusha
into
mov
mov
push
je
add
jne
gs
adc
pusha
or
std
mov
test
mov
movsl
test
repnz
and
aas
pusha
pop
hlt
aad
out
xchg
lds
movsb
mov
add
es
add
cld
stos
mov
in
pop
mov
out
mov
push
xchg
dec
rorb
push
cld
xchg
add
mov
lret
data16
cmp
sbbb
cmp
ss
cltd
stc
add
js
push
jle
aam
aad
hlt
mov
jns
popa
fsubl
push
push
gs
add
cmc
pusha
test
push
andb
add
icebp
dec
loopne
out
orl
lods
es
jmp
mov
add
xchg
inc
nop
or
in
sub
stos
popf
mov
scas
pop
test
and
xchg
pop
std
xchg
shl
jecxz
dec
fsts
xor
and
adc
mov
aad
insl
notl
imul
loopne
jns
jb
inc
sbb
aas
mov
push
nop
xchg
shll
mov
roll
inc
push
inc
or
inc
and
push
divl
aad
fisubrl
jl
insb
movsl
push
sbb
add
add
nop
aad
lds
xchg
rolb
push
add
jne
gs
adc
pusha
and
mov
mov
test
mov
movsl
adc
adc
or
mov
jns
dec
push
in
rcll
out
jne
lret
ljmp
sub
out
push
les
loope
outsl
mov
or
scas
lods
int3
cmp
movsl
shrb
add
adc
mov
ret
pushf
nop
dec
int
scas
or
and
ljmp
aam
lret
push
movsb
stos
stc
add
mov
or
mov
mov
dec
mov
mov
sbb
pop
cmpsb
and
xor
fisubl
cld
sbb
xchg
mov
and
or
fsubrp
ljmp
adc
mov
cmpsb
mov
stos
mov
jp
push
decb
sub
aaa
iret
xor
xchg
icebp
je
jno
lret
mov
lret
jnp
mov
jge
test
push
in
or
dec
cltd
stos
cwtl
and
fildl
sub
add
jle
sbb
divl
outsb
mov
mov
mov
cltd
stos
xchg
mov
mov
sub
loopne
adc
mov
jns
jle
out
movsl
and
gs
mov
jmp
jle
xor
xchg
lods
or
xor
push
insl
sarb
addb
adc
in
mov
or
cmp
inc
out
pop
xor
mov
js
pop
dec
jno
lcall
mov
lcall
ljmp
iret
or
pop
stos
xlat
loopne
jbe
xchg
aas
xchg
add
inc
inc
push
mov
test
lds
lds
add
adc
xchg
pop
aas
push
aad
testl
jnp
cmp
push
jp
movsb
mov
mov
rcr
jecxz
xchg
outsb
lock
mov
jmp
lret
xor
rcl
mov
loope
jle
cmp
enter
or
dec
xlat
jg
ret
pop
loope
jge
fwait
xor
jmp
push
pop
popa
push
insb
sub
mov
pop
sar
sub
gs
pushf
pop
mov
adc
xchg
in
lock
lret
mov
js
cltd
pop
pop
daa
ret
sub
dec
jg
jb
cmp
or
push
enter
sbbb
jle
lea
or
test
sub
xor
das
inc
mov
outsl
xor
sub
jne
cmp
andl
and
pop
sbb
mov
clc
insb
push
pop
fs
cld
xorb
addb
loop
outsl
rcrl
sbb
add
clc
jle
adc
inc
inc
push
adc
or
mov
outsl
loope
cld
sbb
push
mov
fcmovu
fcomps
rorb
sbb
inc
repz
mov
push
mov
add
cmp
push
leave
jg
leave
das
jle
mov
sub
es
sti
cmp
pusha
pop
mov
ds
mov
mov
fstl
pusha
or
inc
aas
mov
div
xor
ss
xchg
mov
cmp
rcll
sti
test
fcmovbe
pop
sub
xorb
out
imull
mov
gs
sub
fs
cmc
jo
sub
xchg
mov
mov
scas
inc
inc
notl
push
lahf
jae
mov
das
add
ret
inc
mov
xor
cmp
hlt
repz
aad
fldt
add
lret
dec
xchg
dec
cs
xchg
loope
in
jg
mov
scas
jo
push
fsubl
xchg
popa
ja
add
es
loopne
punpckhbw
adc
mov
adc
mov
cs
data16
inc
jbe
xor
and
fsub
mov
push
cs
jecxz
jmp
cmpsb
js
jne
dec
jno
sbb
push
pop
jp
xorl
pop
imul
les
mov
push
cs
push
out
shll
test
dec
bound
xlat
or
inc
addl
mov
mov
cmp
scas
jmp
sbb
fsubp
inc
add
unpckhps
pop
jecxz
sbb
lock
mov
popa
jl
les
jno
fistps
sub
in
adc
xor
into
lahf
push
mov
nop
loope
xchg
jnp
sti
icebp
push
aas
xor
out
cmp
push
es
fistps
mov
mov
push
mov
sub
mov
add
sbbb
fwait
lret
pop
xchg
in
aam
ret
jmp
mov
outsb
mov
dec
sub
and
inc
lret
sbb
mov
popf
xchg
jno
and
sub
jb
inc
push
in
xlat
cmp
outsl
out
dec
jp
cld
or
lock
sti
int
mov
aam
adc
call
or
push
xchg
pop
and
outsb
int3
aad
dec
mov
mov
mov
cmpb
fmull
mov
mov
and
insb
jp
pop
push
pusha
dec
sbb
fildll
jl
clc
sbb
sub
into
jl
inc
xchg
add
mov
cmp
orb
js,pn
xchg
clc
jb
shr
sbb
mov
stos
sbb
jecxz
add
idivb
sahf
mov
adc
retw
pop
lock
jmp
lds
popa
sub
rcrb
cmp
mov
jb
sub
mov
xchg
sbbb
in
flds
in
xorb
xchg
and
cmc
jnp
movb
pop
pop
push
jle
sbbl
inc
mov
inc
push
jecxz
xchg
xchg
cltd
adc
and
jne
adc
les
movsl
pop
adc
popa
and
mov
rcll
inc
xor
jmp
js
popf
xchg
xchg
sub
push
jo
jl
hlt
movzbl
fucomp
popf
xor
cmp
and
sub
sub
popf
or
lret
arpl
es
std
out
push
pusha
push
iret
xorl
pop
int3
into
add
je
pusha
stos
adc
dec
arpl
sub
andb
rcl
sub
mov
xchg
mov
and
pusha
orl
das
adc
ljmp
in
jp
ja
stc
jmp
loop
rcr
mov
add
aad
outsb
mov
push
add
jno
or
inc
add
adc
insl
cs
subb
sti
loope
sbb
repz
jmp
pop
cmpsb
pop
scas
adc
nop
xchg
xor
pop
js
mov
insl
and
ret
cwtl
cmp
jae
pop
fcoml
lahf
in
dec
aas
fidivs
mov
cmp
stos
sub
mov
jne
add
je
fs
test
mov
inc
jecxz
sub
fiadds
ja
movsl
pop
and
fsubrs
cli
add
inc
sbb
push
pop
popa
test
jns
xchg
hlt
push
add
push
jne
aaa
shll
ret
sub
jo
or
jae
mov
lcall
jmp
or
std
into
push
mov
inc
and
movsl
xorb
imul
into
pusha
or
pop
ret
stc
mov
mov
jbe
test
xor
mov
sub
pusha
pop
sbb
cmp
aam
fsub
shrl
out
mov
sbb
pop
xlat
jo
mov
es
orb
loop
xchg
mov
int3
fimuls
mov
in
sbb
out
arpl
pop
cwtl
imul
dec
cld
mov
sub
lds
cmp
out
xchg
jne
xchg
add
mov
inc
daa
pop
xor
xor
sbb
xor
sbb
mov
mov
inc
push
pop
xchg
push
or
jg
iret
andb
xor
sub
ss
lock
out
and
subl
out
mov
pop
jb
filds
xchg
pop
adc
add
add
jg
xlat
push
ja
jbe
leave
imul
mov
push
inc
mov
sti
cmpsl
sbb
xor
xchg
cmpl
xchg
in
adc
movsl
lock
xchg
push
xchg
call
test
hlt
shll
add
js
jbe
sbb
in
loopne
xor
push
loopne
imul
rclb
insl
andb
mov
shl
je
popf
stc
jg
push
lret
push
enter
lods
xchg
mov
pop
pop
inc
pusha
ret
lods
rclb
mov
xchg
sub
pop
addb
inc
xchg
out
ss
adc
ja
add
dec
pop
out
loopne
push
xor
cmp
and
inc
pop
add
popf
cmpsl
push
sbb
call
inc
dec
outsb
sbb
add
decl
inc
shlb
popa
cmp
sub
gs
clc
pop
bound
adcb
pop
subb
xor
push
xchg
loopne
faddl
lahf
push
imul
sub
dec
call
addr16
movl
pop
mov
lret
lods
jl
add
aad
xor
outsb
mov
pop
jo
dec
out
mov
mov
jge
int
cld
inc
pop
lahf
inc
adc
xchg
test
je
dec
sub
cmp
scas
fstpt
les
sti
push
cld
iret
inc
lods
inc
pop
cld
arpl
xor
orl
push
aam
sub
out
ljmp
pop
loop
jb
xchg
sub
jnp
enter
dec
and
cltd
fidivrs
das
les
dec
outsb
dec
sub
mov
int
cmpsb
test
stc
lods
and
mov
and
xchg
dec
cmp
hlt
mov
mov
pop
dec
ljmp
lea
jle
xchg
aam
dec
sub
shl
xchg
fwait
adc
adc
cmp
enter
dec
mov
fistl
cmp
int
shlb
xor
push
into
call
roll
inc
jns
sub
aas
jo
fmuls
imul
xchg
lahf
in
aad
nop
in
mov
cmpsb
fsubl
cmp
in
sbb
fisubl
lcall
lock
dec
adc
push
adc
je
sub
sbb
daa
jns
pop
sub
add
test
outsb
inc
adc
sub
jnp
push
dec
sub
and
ss
imul
adc
ret
lret
pop
pop
mov
cmp
das
arpl
lods
jmp
jge
ror
sub
stc
pushf
dec
call
mov
lods
cwtl
lods
repz
push
pop
addr16
daa
and
jne
xor
ds
jbe
sub
hlt
mov
mov
in
mov
cmpsb
mov
stos
push
and
lock
push
fsubl
aaa
mov
xchg
xor
call
mov
divl
adc
pop
ljmp
nop
xchg
jo
push
iret
inc
insl
lret
mov
std
aaa
popf
outsb
fbld
xchg
movsb
call
repnz
adc
mov
jle
xchg
sahf
fsubl
cmp
cmp
jmp
fcmovnbe
or
push
out
cmp
imul
dec
cmpsb
inc
mov
mov
popf
cld
repz
adc
inc
pop
pop
adcl
ja
xor
stos
call
aaa
gs
or
and
push
das
pop
add
repz
xchg
leave
mov
sti
sbb
pop
jmp
sub
in
or
mov
rorl
mov
insl
dec
lods
cwtl
pushf
mov
in
or
daa
adc
mov
incb
jge
jae
cmp
pop
ja,pn
test
xor
aaa
sbb
sub
lods
dec
movsb
scas
adc
mov
clc
adc
aas
push
iret
push
add
iret
das
pop
jne
mov
or
inc
push
xor
xlat
mov
stos
neg
add
or
test
mov
mov
xchg
xchg
test
cmp
push
scas
jle
xchg
push
or
mov
add
hlt
adc
cmp
pop
test
mov
xlat
aad
xchg
repnz
mov
outsb
ja
pushf
cmp
lods
cld
in
cmp
or
sbb
ret
out
pop
pop
inc
mov
cld
add
jne
fucomi
fbld
fxch
inc
push
in
mov
lret
stos
std
pop
cmpsb
inc
movsl
clc
push
rcrl
in
xchg
mov
icebp
sub
xchg
inc
push
mov
pusha
mov
and
sub
es
test
loopne
xchg
xchg
sbb
testb
sub
and
dec
stos
or
jne
and
lcall
push
lcall
inc
xor
sbb
addr16
mov
jo
xor
das
xchg
ljmp
mov
pusha
xor
jg
mov
es
jmp
push
aam
pop
inc
mov
xlat
mov
xor
in
add
pop
pop
sub
stos
adcl
inc
pusha
push
push
fisubrl
je
call
jns
jae
and
test
pop
and
adc
das
adc
ss
sub
and
call
or
mov
adc
es
jg
ret
lea
lret
push
mov
pop
fnstsw
scas
lret
clc
xchg
xchg
push
pop
shr
mov
repz
int
and
xor
jmp
movsb
fistl
loop
mov
sub
push
and
data16
fisubrs
push
inc
cltd
jnp
arpl
cs
add
arpl
ja
push
push
icebp
mov
push
inc
sahf
xor
push
mov
push
loopne
push
leave
sbb
dec
xor
adc
or
push
xor
sbb
inc
and
pop
ds
sbb
scas
imul
push
add
pop
sbb
out
movsl
imul
pop
xor
addb
sub
and
and
nop
inc
mov
fcomps
adc
stc
mov
enter
mov
insb
mov
out
fs
sbb
or
cmpsl
gs
push
jnp
sbb
sub
aaa
lret
push
inc
insl
out
in
cs
add
push
repnz
scas
test
mov
outsl
mov
push
out
stos
cmc
adc
dec
push
icebp
xchg
cmp
push
stos
xor
shrl
dec
pop
int
mov
add
sbb
hlt
test
icebp
mov
add
imul
test
mov
pop
lcall
cmp
imul
mov
out
pop
push
int
imul
mov
iret
push
mov
adc
pop
cmp
je
mov
add
enter
xor
pop
and
xchg
and
or
in
loopne
xor
in
dec
ret
inc
test
push
imul
mov
call
jecxz
xchg
sbb
bound
mov
cs
nop
imull
in
pop
arpl
mov
jae
in
mov
push
in
xchg
or
repz
push
mov
jne
bound
push
jae
push
or
xchg
mov
lahf
or
mov
ja
mov
outsb
inc
arpl
scas
imulb
push
inc
push
bound
cmp
rolb
or
xorb
push
inc
mulb
ret
imul
xchg
mov
test
cmp
cmp
fidivrs
sbb
sub
dec
mov
mov
adc
and
movsb
xchg
mov
aas
xor
pop
dec
inc
outsb
push
lahf
add
sbb
mov
and
mov
jmp
pop
sbb
cmp
int
push
mov
dec
loopne
stos
jmp
fmull
ret
pop
add
dec
jo
lods
ja
adc
rcll
sub
mov
repnz
sub
test
test
loopne
mov
out
push
sahf
pop
pop
mov
mov
pusha
aad
rorb
push
add
mov
sbb
jg
scas
sub
mov
adc
clc
pop
sbb
xor
mov
ja
jmp
mov
fnstenv
dec
adc
add
mov
xchg
or
mov
xlat
and
test
pop
notl
scas
dec
pop
or
or
addr16
mull
dec
insb
mov
aaa
xchg
jl
addl
fmull
lea
test
lea
leave
sbb
pop
enter
sbb
imul
mov
push
cmp
or
out
cld
mov
pop
aas
cli
cs
ficomps
cmpsb
sbb
addb
or
jae
add
cmpsb
inc
repnz
faddl
lea
xlat
dec
xor
mov
rolb
pop
xchg
sbb
shll
dec
in
cmpsl
bound
push
mov
adc
out
sbb
test
mov
dec
xchg
xchg
xlat
add
addb
adc
mov
loopne
xchg
adc
mov
int
jmp
call
mov
cli
push
lds
into
adc
inc
in
imul
mov
and
dec
lea
mov
mov
cli
subl
push
lea
arpl
push
push
mov
jbe
icebp
push
add
adc
mov
enter
lea
or
xchg
push
fisubs
mov
mov
adc
mov
cmp
xchg
mov
leave
cmp
mov
sbb
shrl
cmp
push
je
jmp
or
lcall
jno
jl
sbb
dec
mov
lock
ljmp
mov
jo
rol
pop
std
mov
lods
fsubl
movsb
ss
xchg
inc
fadd
cmp
mov
mov
fidivl
loopne
movsl
negl
enter
outsl
ds
test
scas
lret
ret
pop
inc
jns
push
xchg
xchg
xchg
nop
ljmp
dec
adc
iret
out
xor
pop
movsb
insb
insb
adc
or
pushf
jmp
pop
imul
cmp
mov
scas
in
or
js
mov
mov
in
xchg
ficompl
insb
call
imul
and
cmc
xchg
push
jmp
aad
dec
fcmovne
push
pusha
inc
mov
pop
out
pop
movl
mov
pop
bound
aam
inc
test
xchg
jmp
or
pop
sub
mov
add
xor
xor
imul
add
and
sbb
sub
inc
add
lods
loope
pop
dec
jnp
push
dec
mov
repz
fistpll
mov
inc
sub
cmp
stos
out
loope
roll
cs
fisttpll
cmp
push
imul
movsl
mov
dec
das
imul
outsl
push
int3
hlt
inc
icebp
mov
ret
mov
or
test
mov
rorl
mov
jmp
idiv
mov
lret
xor
daa
mov
jl
test
lods
cmp
xchg
and
xchg
iret
icebp
and
mov
inc
arpl
xchg
sbb
lea
pushf
popa
cltd
jmp
sbb
lret
scas
jne
inc
insb
adc
xor
jae
or
jecxz
mov
inc
mov
or
push
pop
jecxz
jno
outsl
jnp
mov
sbb
imul
call
insl
jp
jnp
iret
insl
in
inc
mov
fidivrl
ljmp
cmp
fstl
jle
mov
add
xchg
cs
jae
sahf
scas
mov
add
pushf
jg
add
scas
or
pop
stos
lret
cmp
insl
xchg
cwtl
jmp
dec
jecxz
inc
cmp
aad
xor
mov
add
jl
clc
ljmp
dec
cmp
test
ljmp
dec
test
loopne
call
and
ljmp
jg
dec
cmp
sbb
pop
push
data16
sbb
call
mov
scas
test
mov
add
jb
notl
inc
mov
dec
mov
je
jecxz
gs
mov
pop
xchg
test
jle
sub
cmpsl
nop
orb
dec
pusha
ficoms
push
cmp
in
inc
fstps
and
leave
movsb
mov
mov
jbe
jg
sub
push
inc
cli
or
movsb
xchg
add
jecxz
push
lcall
movsl
pop
mov
adc
add
xchg
mov
into
add
and
mov
sub
int3
inc
mov
and
enter
dec
sarl
fmull
lods
add
pop
mov
mov
daa
hlt
popf
fsubrl
out
nop
pop
rcr
cwtl
filds
jl
adc
stos
jp
das
mov
lahf
out
scas
addr16
test
mov
jnp
in
adc
inc
lcall
repz
push
in
out
or
arpl
xchg
les
and
in
lods
jl
pushf
sub
cltd
xor
and
push
flds
adc
rcll
cmp
adc
mov
mov
xchg
mov
pop
stos
inc
mov
sub
push
push
and
or
jg
push
test
sbb
or
jae
stc
in
xchg
out
mov
dec
jge
dec
out
scas
jmp
sbb
cmp
rorb
ja
and
adc
pusha
and
mov
mov
test
mov
movsl
adc
inc
xor
gs
adc
pusha
and
mov
mov
test
mov
movsl
adc
dec
push
insl
and
adc
mov
roll
in
rclb
or
mov
mov
push
adc
loopne
nop
sub
sbb
mov
std
bswap
pop
fstl
in
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
add
xor
adc
movsb
mov
cmc
shrb
aad
lds
xor
xor
pusha
push
jo
nop
mov
mov
out
aad
lds
sub
cmp
or
dec
jge
dec
jo
cltd
mov
xchg
in
enter
mov
stos
imul
bound
mov
mov
push
outsl
imul
xchg
call
outsb
cmp
sarl
mov
add
in
add
lds
nop
xchg
sarb
test
jbe
cmp
dec
jmp
mov
xlat
mov
movsl
cwtl
cmp
pop
loopne
lock
add
jmp
jne
jne
and
or
pop
xchg
push
or
leave
shlb
sub
aad
mov
fisubrl
mov
adc
dec
push
pop
mov
not
cmc
pop
xchg
inc
call
in
iret
mov
push
js
jg
sbb
jp
fldl
ret
leave
and
xor
push
jne
gs
push
imul
test
std
cli
iret
lock
push
inc
jo
pusha
xor
add
cmp
sbb
movsl
rcll
mov
xchg
mov
jno
dec
inc
push
jne
sub
and
shl
mov
test
mov
xor
pop
inc
or
gs
push
jo
xorb
test
cmc
shl
loopne
lock
xor
xor
pusha
push
jo
xorb
test
cmc
shl
loopne
lock
xor
inc
pop
sub
push
mov
scas
xorb
dec
std
xchg
lcall
hlt
testl
or
pop
lea
and
jbe
js
mov
pusha
mov
sbb
inc
xor
lea
inc
scas
rcl
dec
sbb
test
push
or
and
jmp
mov
cmpl
add
out
mov
sbb
mov
mov
call
imul
sbb
sub
xchg
es
pop
iret
ret
cmp
or
stc
clc
dec
pushf
mov
jmp
jg
jb
pop
push
ficomps
jo
fs
clc
and
mov
cltd
add
in
adc
lahf
pushf
mov
push
outsb
negb
mov
cmpsl
xchg
add
dec
outsb
push
inc
fsubrl
jmp
scas
or
andl
mov
insl
cli
xchg
cmp
inc
sub
roll
xchg
or
inc
jns
cmc
xor
lret
mov
inc
pusha
inc
lea
dec
xor
stos
cmp
movsl
lds
or
inc
and
arpl
push
adc
movsb
shrl
faddp
and
and
jge
addr16
push
xchg
and
out
xchg
hlt
push
pop
mov
neg
sbb
jecxz
or
pop
cmp
int3
xor
inc
xchg
addb
add
ja
and
loopne
dec
sbb
and
jmp
fimull
fdivl
ljmp
sub
mov
or
jns
movsl
sub
dec
fisttps
arpl
in
aaa
in
push
sbb
mov
mov
push
hlt
jg
add
cmp
arpl
cmp
push
loope
adc
shl
lret
xchg
mov
mov
mov
or
cld
test
jmp
xor
push
imul
add
je
rcl
push
and
imul
mov
cmp
jp
subb
adc
adc
adc
sub
push
es
mov
out
mov
mov
ja
hlt
sbb
mov
lahf
fisttps
and
mov
insl
divb
add
xchg
jne
out
or
push
sar
sbb
fcmovnu
lock
lahf
mov
lret
fwait
bound
or
jecxz
movsl
fsubl
push
adc
lahf
cmpsl
mov
rclb
jae
mov
add
cmpsb
xor
and
hlt
mov
sarb
mov
pop
push
xchg
in
lret
fwait
inc
jns
push
inc
xor
gs
xor
clc
push
inc
push
push
rcll
xchg
sub
shlb
addr16
mov
mov
jge
sbb
and
mov
add
loopne,pt
dec
xchg
pop
dec
pop
sub
rcrb
sub
push
mov
cmp
cld
xchg
xor
push
sub
mov
outsl
hlt
fsubr
shlb
sub
push
push
jno
jl
out
jae
fidivrs
in
xchg
mov
stos
aam
movsl
movsb
lcall
fs
dec
push
push
adc
out
dec
mov
mov
test
lea
push
pop
cltd
push
in
jp
jmp
sub
out
pop
mov
ret
in
test
lret
sub
inc
cmp
fcompl
cmp
insl
rclb
bound
call
mov
add
cmp
xor
pmaxub
xchg
leave
test
and
push
nop
call
lea
xor
lock
push
sarl
mov
add
outsl
xor
lahf
xor
jno
sbb
aad
roll
and
je
aam
cmp
jle
mov
pop
insb
and
and
pop
mov
pop
out
mov
cmp
dec
push
sbbb
jb
push
imul
cld
out
fisubrl
adc
mov
int3
clc
cmp
sub
icebp
cmp
push
jnp
xchg
imul
and
mov
imul
pop
aad
inc
sar
arpl
jmp
std
popf
lahf
sub
mov
movsb
stos
bound
cld
roll
mov
lcall
fsubr
fcoml
test
rorb
loope
call
enter
and
sbb
mov
sbb
insb
push
jae
lea
lea
cld
adc
test
outsb
icebp
mov
mov
ss
shrl
xchg
and
cmpsl
call
pusha
aaa
pop
fsubrl
sub
repz
mov
sahf
addr16
sub
sbb
ss
pop
xchg
bound
clc
pop
mov
nop
cmpsb
js
push
out
popa
in
popf
push
mov
insb
repnz
test
adc
sub
jmp
and
mov
pop
mov
push
cs
cltd
imul
ds
xchg
add
leave
pushf
jno
mov
xchg
jnp
mov
std
les
inc
sbb
pop
xchg
fldl
sbb
aam
lahf
cmc
cmp
sahf
hlt
inc
pop
das
addr16
stos
das
mov
pop
jl
or
es
dec
lcall
jecxz
cmp
mov
pushf
sub
xor
sbb
jb
mov
dec
mov
cmc
out
and
into
adcb
push
loop
sub
stc
cmpsl
dec
repz
out
dec
sbb
decl
loop
lahf
cmpl
fmulp
popf
pop
scas
das
and
or
pop
pop
daa
in
int
repnz
aam
leave
sub
cmp
sub
rorl
out
das
mov
fwait
adc
lods
push
stos
repnz
or
xchg
lret
pusha
loope
cmp
lcall
add
mov
aas
outsb
mov
push
xor
jb
call
lret
shl
cmp
pop
add
movsl
jae
bound
add
jmp
aas
mov
outsb
push
bound
clts
xchg
mov
loope
repnz
or
movsb
mov
enter
cmc
leave
inc
je
push
movsl
and
and
pop
sbb
dec
inc
sub
mov
pop
cmp
add
sub
test
mov
scas
nop
xchg
jne
ja
lods
addb
sbb
push
lahf
arpl
push
cmp
mov
hlt
mov
cmp
sahf
and
jne
ja
subb
jns
mov
shll
shl
xchg
push
out
push
cmp
cmc
sbb
or
cmp
dec
cmp
inc
add
add
cmp
xlat
sbb
lret
ret
pop
mov
jb
insb
lret
jae
movsb
xchg
add
and
rol
pop
pop
jae
cmp
jb
sub
les
mov
xchg
aas
stc
shr
fsubrs
push
mov
pop
in
adc
mov
sub
lcall
xchg
pop
mov
mov
adc
jns
pop
inc
jno
mov
fcoms
mov
fnstcw
pop
xor
nop
adc
shrb
inc
mov
xor
mov
mov
pop
xchg
mov
mov
test
push
shrb
imull
stos
dec
sbb
pop
aaa
pop
add
cmpl
mov
add
popa
repz
fnsave
mov
pop
std
fscale
pop
add
inc
lret
sub
adc
shll
push
dec
cmpsl
xor
dec
jnp
mov
ds
xor
or
imul
les
dec
dec
int3
ds
mov
dec
xchg
insb
xor
gs
cmpsb
mov
mov
sbb
in
aam
adc
mov
pop
out
mov
mov
mov
hlt
cmp
xor
hlt
adc
imul
xchg
imul
sub
sbb
xor
or
dec
stos
daa
adc
movsl
xlat
into
stos
aas
stc
fiaddl
jl
xor
std
push
or
pop
imul
fs
mov
adc
les
lea
mov
sub
xchg
loope
call
pop
icebp
jns
lcall
imul
out
sub
addb
pop
push
push
jae
pop
lods
imul
jge
cli
push
xor
shll
aam
repnz
in
leave
mov
in
cs
adc
or
add
fcmovnb
xchg
mov
mov
stc
mov
das
dec
inc
jle
in
rorl
adc
andl
sub
aad
xchg
scas
push
in
mov
or
mov
cwtl
xor
jmp
pop
xchg
xchg
mov
mov
jnp
cmp
jp
daa
mov
jmp
pop
jns
add
addr16
jno
dec
jae
or
inc
jb
flds
mov
mov
inc
sbbl
add
push
push
fsubl
xchg
inc
cmpl
push
dec
stc
xor
mov
cli
out
mov
test
fildll
xchg
mov
pop
and
fsubl
arpl
inc
addl
sbb
pop
arpl
dec
js
arpl
bound
test
out
mov
out
dec
inc
fistl
xor
ja
pushf
mov
and
inc
mov
mov
mov
shr
orl
add
frstor
jecxz
cmp
mov
andl
mov
or
ja
outsl
xchg
lret
lahf
mov
movsl
push
out
outsl
data16
daa
mov
nop
out
ss
gs
jl
lds
test
mov
scas
mov
call
arpl
jo
sbb
push
xor
and
sbb
inc
mov
ds
xchg
aam
sbb
stos
mov
adc
cmp
mov
aad
mov
jno
sbb
push
push
sbb
arpl
es
dec
jno
inc
or
xlat
push
sbbl
int3
aas
lea
cli
mov
mov
in
pop
cltd
sbb
xchg
jb
dec
pop
push
mov
mov
xor
iret
sbb
inc
movsb
adc
inc
cltd
push
and
insl
test
iret
push
inc
stos
lret
xor
pop
rorl
mov
add
jae
adc
arpl
xor
xorb
xchg
mov
jmp
push
lret
pop
adcl
xchg
cltd
xchg
jmp
insl
xchg
push
enter
xchg
test
or
inc
and
loopne
ljmp
xchg
mov
mov
inc
mov
fninit
in
dec
idivl
leave
out
cmp
and
dec
push
sbb
bound
insl
mov
pause
int
cwtl
subl
dec
es
out
sbb
dec
sbb
jecxz
push
shl
add
pop
rorl
mov
and
add
dec
test
mov
or
test
push
addl
testb
push
dec
push
aas
lcall
mov
test
xor
lret
bound
sbb
mov
sub
mov
add
jb
lcall
sub
xor
cmp
ficoms
fstpt
fxch
sbb
xor
nop
cmp
add
stos
adc
pop
add
xor
jp
push
jno
out
sub
je
and
pop
push
rol
lcall
sub
xor
push
in
popa
sbb
shlb
mov
adc
push
jge
pop
cltd
outsb
sub
pusha
and
inc
mov
mov
jecxz
fsubl
sbb
dec
fdivs
test
add
xchg
dec
pop
cmc
jnp
leave
xchg
jmp
nop
movl
cs
inc
movsb
push
cmpl
jle
inc
jnp
inc
inc
arpl
jl
out
aaa
clc
insb
mov
mov
mov
popa
mov
mov
xchg
mov
lcall
test
jle
xchg
mov
xor
roll
lahf
push
data16
mov
push
mov
dec
inc
adc
mov
ja
inc
fisttpll
add
add
lret
jb
ss
movsb
and
jmp
imul
aaa
stos
enter
adc
hlt
xchg
add
std
mov
mov
sbb
pushf
aaa
inc
sbb
vmwrite
sbb
stos
sub
push
adc
sbb
leave
iret
inc
ret
mov
cmpsb
movsb
cltd
xor
std
daa
mov
jge
push
addr16
jno
sbb
pop
sarb
fsubr
lret
sub
fstps
loop
test
sbb
jb,pn
add
insl
xor
lret
jge
mov
push
pop
pop
mov
ljmp
push
adc
cmp
push
les
cltd
clc
aad
out
adc
or
movsl
aas
mov
icebp
repz
push
mov
inc
sub
dec
popa
std
adc
cmp
xor
testl
mov
popa
aas
lret
sub
jne
sub
iret
pop
or
cmpsb
sub
xchg
sub
jne
testl
fdivs
sbb
cmpsl
cmp
sub
and
sbb
clc
lods
inc
out
leave
or
lahf
dec
mov
push
aaa
and
jbe
movsl
or
imull
rcl
xor
mov
mov
outsl
adc
mov
cmp
shrl
dec
dec
add
icebp
das
jg
rol
xor
inc
andl
adc
and
rcr
icebp
dec
imul
mov
test
xor
inc
push
movsl
and
and
repnz
jecxz
xchg
cli
push
out
pusha
push
push
fwait
stc
push
insb
mov
pop
mov
jecxz
stc
mov
sbb
xor
loop
lcall
inc
adc
fadds
dec
mov
pop
cld
dec
dec
or
negl
lcall
hlt
insl
jl
std
lods
mov
sbb
icebp
push
jo
outsb
repz
mov
mov
dec
inc
ds
stos
dec
popf
sub
xor
lea
dec
inc
std
insb
arpl
in
push
in
fsubp
in
jle
fists
fwait
dec
add
nop
adc
test
in
scas
loop
add
dec
inc
lret
xchg
scas
cmc
sti
pop
loop
push
add
out
sub
test
xor
lret
and
and
int
or
out
gs
xchg
mov
hlt
inc
xchg
iret
or
mov
push
fisubrl
pop
mov
xor
daa
pop
std
cmpsl
sub
enter
mov
mov
cmpsl
jae
pushf
aas
ficomps
fistpll
ljmp
xor
mov
add
mov
or
cmp
je
shlb
jl
test
mov
jmp
test
clc
nop
mov
inc
cld
ljmp
ficoms
mov
push
das
jnp
ds
shlb
adc
ret
add
incl
add
push
fstps
mov
lods
sbb
mov
test
jmp
mov
pop
out
or
mov
arpl
add
cmpsb
mov
or
ss
mov
aaa
outsb
mov
xchg
sbb
adcb
repnz
dec
xor
xchg
push
mov
ja
mov
js
jp
out
bound
xchg
mov
rcll
ret
xorl
jnp
pop
lcall
sarl
sti
pushf
mov
cs
fldz
push
jl
sbb
out
mov
lods
ja
popf
cmp
nop
divb
jnp
ficoms
out
sbb
mov
mov
pushf
sub
pop
stos
movb
and
dec
pop
sahf
inc
mov
popa
push
pop
mov
movsl
cmpl
scas
stc
sbb
repz
and
in
push
in
aam
mov
lea
test
daa
pop
aad
push
testb
aas
sbb
or
in
loop
add
cmc
jg
jle
aam
mov
pushf
push
jae
cmp
mov
in
arpl
fistpl
pushf
dec
push
cmp
inc
lea
repz
xor
push
sbb
das
cwtl
stc
sar
and
iret
xchg
or
lods
cmp
mov
xchg
cld
jnp
out
sbb
push
ret
int
mov
repnz
in
inc
jp
lds
cmpsl
stc
and
imulb
mov
mov
std
into
mov
daa
inc
stos
push
lret
rcrb
movsl
lcall
push
stos
mov
bound
cmp
out
imul
jp
inc
aam
cltd
clc
inc
cmp
mov
xor
mov
mov
sbb
sbb
nop
or
xlat
push
cmp
popf
int
sbb
mov
mov
push
cmp
push
push
cmp
sub
cmp
enter
pop
lods
daa
jp
lcall
pop
clc
call
inc
pop
addr16
mov
movq
je
inc
mov
leave
cmp
popf
xchg
inc
popf
pop
lcall
pop
out
mov
in
inc
adc
push
mov
out
cmp
lds
dec
add
sarb
dec
aad
and
push
push
fimull
jbe
dec
mov
sarb
cmpsb
inc
jg
je
mov
rolb
jge
mov
test
or
sbb
cmp
add
pop
mov
cmc
fidivrs
dec
insl
sub
push
pop
mov
pop
test
dec
cmp
adc
dec
insl
sbb
fwait
lcall
incl
xor
dec
rorb
ja
cmp
add
cmpb
inc
cmp
pop
mov
clc
rorl
sbb
js
mov
or
mov
or
dec
or
mov
sub
lret
out
xchg
cltd
popf
jbe
daa
jl
les
xlat
enter
sub
pop
pop
repnz
or
lods
dec
adc
push
xlat
xchg
jecxz
jo
ljmp
out
cltd
imul
pop
dec
cmc
fbld
ffree
aam
stc
mov
orl
orl
fimull
inc
shlb
mov
lods
addr16
cmp
aad
dec
xor
xor
pushf
mov
lret
or
in
dec
xchg
fisubl
std
icebp
inc
add
rcrl
sub
adc
mov
leave
out
js
mov
xchg
jno
and
icebp
fidivl
xchg
cmp
dec
cmp
and
pop
test
pop
inc
inc
cld
push
aam
or
dec
add
in
inc
mov
int
jbe
jmp
popf
pop
cmp
cmp
pusha
sbb
and
add
push
pop
in
xchg
lock
fsubl
dec
cmpsb
adc
popa
rcrl
lret
scas
loopne
repz
pop
ss
stos
test
ret
imul
push
out
fadd
adc
paddusb
cmp
bound
rcll
movsl
cmpsl
clc
jbe
in
pusha
dec
test
lods
adc
fs
jo
mov
jno
js
add
shl
push
fdiv
jmp
jbe
xchg
popa
lret
jge
adc
mov
jl
inc
jg
mov
or
xchg
adc
in
push
adc
js
ret
mov
or
sub
inc
pop
js
repz
das
lds
mov
xchg
loope
adc
cmp
out
jb
movl
adc
jecxz
xor
cmpsl
pop
nop
jge
sbb
loopne
fdivr
aam
lahf
cmp
inc
les
scas
insl
addb
jp
lret
cmp
sar
test
or
test
xlat
or
icebp
loop
aad
icebp
xchg
mov
xchg
lock
sub
dec
test
sbb
mov
ret
pop
inc
pop
cs
fsubrs
outsb
sarb
xchg
popf
popf
lods
ja
std
loopw
fs
in
mov
pop
inc
add
repz
gs
enter
and
push
addl
inc
aaa
fisubrs
enter
push
cld
xorl
or
cmp
sub
jnp
lcall
bound
fldt
ja
aad
mov
pusha
shrb
pop
rcl
testb
filds
lea
pop
pop
mov
sahf
push
fldt
cltd
and
mov
leave
mov
inc
xchg
es
filds
jg
popf
mov
add
cmpsb
adc
fiadds
jae
inc
jns
pop
dec
jo
cmc
sub
aas
add
rcrb
rorb
cltd
dec
sahf
jns
xor
enter
and
cli
not
adc
test
loopne
dec
inc
fwait
add
add
fs
cwtl
ljmp
adc
xchg
lock
jne
dec
in
add
fcmovne
and
inc
jne
gs
push
jo
xorb
test
cmc
shl
loopne
lock
xor
xor
pusha
push
jo
xorb
test
cmc
shl
loopne
lock
xor
xor
pusha
push
jo
xorb
add
shl
roll
adc
and
xor
loopne
lock
outsl
xchg
mov
mov
pop
lcall
push
out
xlat
lret
mov
ret
fsub
xchg
ja
imul
inc
ds
sub
sbb
or
repz
out
xlat
lret
mov
xchg
mov
jne
dec
inc
cmp
sbb
or
and
imul
iret
or
mov
jnp
pop
pop
cmp
jbe
dec
insb
inc
js
mov
mov
out
jle
or
in
push
push
rclb
fsubrl
pop
jmp
pop
imull
inc
cmp
cmp
pop
mov
ud0
xchg
movsb
inc
mov
jb
pop
xchg
or
pusha
fisttpl
fisubl
cmp
xchg
cmpsl
movsb
jmp
ret
cmpsb
daa
call
cmpsl
xchg
out
xlat
sahf
idivl
iret
mov
daa
cmp
mov
sub
push
popf
hlt
insl
jle
push
push
and
or
inc
xchg
sub
mov
movsb
adc
enter
dec
pop
jle
jle
jmp
and
outsb
or
lea
push
lods
jb
xorl
pop
inc
dec
push
mov
call
jmp
fcmovnb
cmpsl
fnstsw
mov
sahf
mov
jg
dec
push
pop
pop
das
xor
arpl
movsl
aad
fmulp
mov
ljmp
add
sub
inc
je
pop
dec
push
arpl
pushf
cmpsl
add
rol
lret
repz
jmp
push
sub
and
add
inc
dec
dec
outsb
jnp
bound
mov
mov
fldt
xchg
imul
dec
inc
cmp
sub
sbb
or
sti
imul
out
xlat
lret
mov
xchg
mov
pop
push
dec
inc
cmp
sub
sbb
or
sti
imull
pusha
jae
xchg
aam
mov
das
push
sahf
xchg
clc
mov
mov
js
data16
imulb
mov
imul
pop
rolb
and
sarl
loop
fisubl
call
aas
and
pop
jno
inc
test
aam
push
cli
dec
or
test
sub
mov
cmc
adc
jno
repz
dec
mov
cmp
mov
sub
add
mov
push
call
popf
lock
xchg
test
push
mov
ljmp
div
mov
lahf
data16
cwtl
pop
lret
ret
mov
inc
dec
dec
loope
pop
mov
frndint
addr16
mov
lret
shll
lcall
mov
arpl
mov
sub
ret
sbb
sub
push
sbbl
out
imul
xor
mov
push
iret
andb
lock
clc
cmp
inc
sub
adc
or
iret
fisubrl
push
or
sbb
es
xor
fsubl
lahf
xor
aas
inc
repnz
outsl
das
loop
cmp
test
dec
push
xchg
push
dec
pop
inc
fidivs
push
nop
sbb
cs
fwait
and
mov
sub
repnz
xor
pop
lahf
cmp
cmpsb
inc
inc
mov
stos
addr16
sbb
push
push
or
fstl
popa
push
jg
lods
popa
andb
pop
dec
shl
cmp
xor
xor
add
mov
pop
mov
add
pop
sub
mov
out
mov
xchg
mov
insl
sbb
push
dec
xor
dec
sbb
sub
mov
out
mov
enterw
lds
add
push
push
leave
add
and
loop
adc
orb
adc
lret
movsb
mov
loop
cwtl
loope
mov
insl
mov
jmp
insb
jle
sti
mov
das
push
mov
jmp
or
sarl
sahf
push
loop
pop
int3
push
enter
pop
mov
cwtl
aam
push
jecxz
sbb
cwtl
dec
adc
mov
dec
stos
or
aas
in
aad
push
adc
xor
mov
jnp
test
adc
mov
xchg
fnstsw
out
bound
sbb
std
xlat
mov
push
and
jecxz
add
mov
sub
sub
inc
shr
sbb
imul
gs
fimuls
imul
sbb
sub
popf
sbb
outsb
cmp
push
and
fisttpl
lea
enter
mov
jmp
ret
mov
pushf
jp
sbb
jp
sbb
pop
mov
mov
push
sub
clc
mov
and
xor
repz
mov
dec
aam
hlt
add
mov
hlt
insb
or
pushf
xchg
and
mov
mov
dec
ret
mov
cmp
inc
loop
clc
xchg
push
movsl
xor
push
pushl
fdiv
pop
ret
pop
into
pop
ljmp
cmp
loop
mov
cmp
cmp
sub
sbb
jge
mov
loopne
jle
mov
stos
sbb
loope
cmovae
std
call
pop
mov
out
pop
dec
div
add
mov
add
sbb
cs
jle
mov
mov
inc
xchg
xchg
push
inc
fdivrl
test
cwtl
dec
mov
sub
hlt
in
cmpsl
dec
sub
cld
rorb
pop
lea
out
jns
pop
lahf
jns
cmpsb
sbb
ljmp
aad
inc
xor
mov
push
aam
jbe
adc
inc
into
mov
jb
cmpsl
mov
sbbl
cmp
dec
cltd
das
fwait
stos
les
inc
push
mov
fistpll
add
jg
ds
cmp
out
push
cmp
adc
xor
jb
leave
stos
cmpsl
inc
aas
push
push
inc
insl
xchg
jg
and
xor
roll
inc
fidivrl
push
and
stos
imul
inc
loopne
cld
nop
and
ja
pop
sbb
pop
lret
sub
sbb
adc
jo
cmpsb
push
add
sahf
sbb
ret
mov
add
stos
or
mov
stc
jnp
mov
mov
in
imul
push
in
cmc
add
mov
xlat
mov
loop
cmp
jb
jae
bnd
pushf
mov
and
mov
mov
sbb
js
and
mov
ja
icebp
jg
repz
movsb
in
and
jne
inc
cltd
test
pop
dec
lods
daa
call
or
xor
mov
push
addr16
pop
mov
adc
xor
cmpb
int3
enter
fadd
mov
jo
in
push
mov
aas
in
push
mov
cli
lock
cmpsl
cwtl
fisubrs
mov
pop
daa
cwtl
hlt
pusha
mov
aas
inc
notb
adc
and
loope
or
std
repnz
mov
mov
add
stos
cmp
sbb
pop
and
je
popa
and
bswap
mov
push
std
push
jge
xchg
mov
cmp
shlb
mov
sbb
xchg
push
jmp
cmp
dec
mov
lahf
into
cmpsl
xchg
mov
shr
mov
jle
in
int3
call
or
xor
sbb
hlt
addr16
loope
add
sub
icebp
push
sbb
sbb
xor
jae
xorl
lret
adc
imul
jae
push
ja
mov
inc
jge
mov
mov
sub
mov
rclb
pop
es
ret
jae
fwait
testl
xor
mov
mov
sub
push
push
sarb
xchg
stos
xor
sbb
adc
add
rclb
or
xor
sti
xorb
enter
fsubl
jmp
sbb
jmp
add
iret
push
add
lods
test
adc
push
cmc
js
mov
cmpsb
out
sbb
movsl
out
inc
test
aas
shrb
aas
jge
cmp
or
mov
push
push
add
push
aas
push
insb
sbb
push
mov
sbb
pop
adc
add
mov
lea
sbbb
cmpsl
data16
sub
mov
loope
or
imul
jnp
dec
xchg
push
adc
add
sbb
dec
mov
and
cmp
xchg
xchg
cmpsl
sbb
and
sbb
shlb
fwait
scas
inc
rorb
sbb
fldt
pushfw
pusha
cmpsl
imul
mov
pop
xlat
jb
inc
repnz
popf
push
sti
lret
mov
enter
dec
pop
push
xlat
loopne
dec
jae
out
es
fwait
shll
fsubrs
add
jb
out
arpl
lcall
jno
jno
xchg
ljmp
shlb
push
jns
int
dec
cmpsl
add
popf
and
push
push
jns
clc
out
mov
xlat
movsl
lret
in
cmp
lea
lea
lock
mov
xor
mov
mov
xlat
inc
mov
outsb
je
sub
pand
cmp
mov
push
rorb
adc
push
jae
test
mov
ljmp
mov
jle
in
jb
inc
icebp
jle
es
rclb
fidivrs
adc
test
clc
jb
xchg
sbb
stos
mov
fisttpll
ds
mov
pop
rclb
pop
xor
lea
dec
mov
pop
or
scas
mov
iret
mov
popf
fisubl
or
out
pop
mov
aam
gs
xor
out
ljmp
ret
push
insl
stos
test
and
sahf
cwtl
mov
test
inc
dec
scas
call
inc
les
clc
jb
lahf
bound
scas
insl
jge
pop
and
inc
test
xor
jp
rolb
push
sahf
scas
sub
call
pop
ret
sub
daa
movsl
shlb
mov
jns
mov
ret
xchg
call
xor
int
jno
shrb
cmp
rclb
pop
mov
fnstenv
out
shlb
sarl
push
lcall
sub
sbb
sarl
sbb
mov
hlt
or
pop
sub
rorb
sub
inc
cmpsl
xchg
testb
rcrb
inc
mov
dec
cmp
cmp
loopne
dec
push
call
fisttpl
mov
adc
pusha
in
nop
insb
iret
jle
dec
subb
dec
inc
mov
jne
int
xchg
fidivrs
add
add
mov
push
jo
cld
lret
cmpsl
inc
inc
push
mov
or
and
in
lds
lds
jmp
push
dec
or
and
xor
clc
bound
dec
sbb
jmp
sub
dec
test
xchg
jp
xchg
mov
js
andb
lods
clc
dec
xchg
adc
std
cli
or
sub
lds
and
mov
test
rolb
pop
divb
or
dec
popf
add
daa
dec
cmp
jp
ljmp
fstpl
sbb
fistpl
xor
inc
inc
insb
out
cmp
ljmp
xor
sbb
cmp
pop
lahf
es
divb
xchg
add
and
lcall
xchg
mov
mov
mov
sbb
es
cmc
iret
add
or
adc
mov
adc
xchg
push
inc
int3
out
push
lea
inc
outsb
inc
aad
xchg
and
popa
or
mov
notb
sub
test
loope
mov
push
mov
fs
jb
inc
pushf
fwait
loop
jle
and
cld
imul
mov
or
inc
ljmp
lock
loope
sub
leave
pcmpgtd
nop
fwait
pop
jmp
es
mov
fs
xchg
stos
sub
loopne
lods
imul
and
daa
clc
sub
mov
pusha
add
push
sbb
sbb
push
movsl
mov
or
jmp
cmpl
cmpsb
jb
pop
add
jmp
xchg
xchg
enter
inc
sub
xchg
sarl
sub
sub
mov
xchg
sub
or
mov
lods
ja
xchg
mov
test
or
out
addr16
sti
mov
mov
bound
mov
cmp
mov
imul
insl
jge
inc
mov
pop
sub
sar
or
cltd
xor
or
adc
cmpsl
das
xchg
fadds
xchg
jnp
arpl
pop
das
loopne
dec
xchg
pop
outsl
xchg
lahf
in
push
pop
xor
sete
sbb
or
dec
xchg
orl
shlb
ja
ljmp
test
test
push
adc
out
orl
sbb
mov
dec
js
cmp
pusha
mov
adc
aam
inc
cmp
mov
sbb
pop
mov
mov
push
aas
xor
pop
push
push
xchg
loopne
jae
loopne
inc
daa
xor
push
insl
cld
inc
push
lcall
stos
int3
leave
je
xchg
xor
sub
loop
outsb
test
add
mov
dec
jmp
lcall
add
mov
cmpsb
repnz
or
jg
push
leave
push
imul
pop
jge
test
lahf
pop
hlt
adc
pop
mov
jbe
repz
cmp
xchg
fwait
xchg
sub
pop
daa
sbb
dec
push
mov
stos
call
in
jae
in
into
out
xchg
adc
push
jp
loopne
sub
iret
sbb
out
mov
movsb
inc
ds
in
aam
pop
int
xor
sub
lret
stos
adc
xchg
sar
cmp
jmp
fcmovb
fwait
jae
inc
jp
pop
push
dec
push
ljmp
hlt
mov
dec
mov
xchg
sub
push
addl
jp
xchg
in
int3
in
pop
ss
call
xor
xor
pop
adc
mov
dec
jo
xchg
push
lods
push
les
jb
sahf
sub
mov
fisttpll
xchg
pop
push
or
dec
cmp
std
imul
xor
and
dec
outsb
xchg
pop
pop
mov
push
jmp
rolb
sbb
outsl
je
jbe
icebp
loope
inc
sarb
add
mov
mov
js
lock
sbb
xchg
ds
cmp
test
cmp
testl
out
xchg
push
cwtl
mov
or
pop
sbb
mov
push
sub
xor
cld
test
aaa
cmp
lods
stc
xor
jo
aas
mov
movsb
fnstcw
add
aad
xor
in
mov
push
arpl
dec
sbb
dec
sbb
xchg
mov
mov
cld
iret
daa
hlt
lcall
ror
mov
push
es
in
and
hlt
mov
inc
adc
roll
icebp
lcall
rcrl
adc
leave
push
jecxz
dec
scas
pop
daa
xor
repz
xchg
and
sub
mov
sahf
jp
js
xchg
jp
jmp
push
push
sbb
cmp
ljmp
jo
pusha
cmc
in
mov
dec
mov
int3
cmpsb
enter
adc
shrl
sub
and
and
push
rorb
lock
popa
in
lcall
dec
mov
mov
inc
nop
jge
in
icebp
lods
mov
leave
rol
xlat
sbb
jno,pt
xlat
lahf
decb
and
pop
jne
and
sub
adcb
imull
dec
pushf
adc
sub
sub
arpl
enter
or
and
mov
and
ret
sub
arpl
mov
sbb
sbb
test
roll
jge
fs
or
cmpsb
sub
mov
push
jmp
cmpsb
xchg
adc
lock
xchg
lock
mov
or
pop
test
lods
jno
mov
lahf
cs
bound
ret
icebp
lahf
push
shr
adc
adc
cmp
and
inc
dec
scas
cmp
stos
int
lea
jp
mov
incl
daa
and
cwtl
mov
out
mov
mov
pop
nop
jo
fucomi
cmp
or
inc
and
pusha
lds
adc
or
jbe
and
xlat
cmc
popf
and
test
cmp
shlb
in
mov
arpl
gs
loope
sub
mov
mov
gs
mov
or
fstpl
mov
and
and
push
or
repz
mov
pop
or
push
test
jnp
cltd
add
nop
pusha
vpsrad
aam
sbb
jno
dec
andl
fcoml
ss
int3
adcb
mov
mov
enter
dec
test
pop
ret
cwtl
iret
testl
inc
adc
rorl
in
jae
test
in
dec
xlat
or
sub
movsb
mov
lods
sub
loop
push
xchg
out
mov
idiv
fildl
adc
cmp
mov
mov
scas
mov
inc
das
ficoml
adc
lret
mov
sub
push
inc
push
mov
aad
loopne
in
mov
push
pop
cmp
test
adcb
js
cs
in
push
ljmp
jp
sbb
jns
cwtl
mov
lret
jb
imul
xorb
loopne
out
xchg
in
scas
fcmovnb
pop
dec
mov
xchg
aad
popl
movsb
mov
aad
push
clc
dec
xchg
push
lahf
or
mov
int3
xchg
inc
mov
jns
clc
test
testl
emms
aaa
sbb
or
std
sbb
sar
fs
sarb
jmp
xchg
lcall
movsb
ljmp
divl
cmp
in
shl
add
cs
shl
fidivrs
mul
and
sahf
sahf
mov
xchg
mov
arpl
in
ljmp
subb
in
xor
aad
push
xor
scas
leave
jno
mov
outsb
pushf
and
jecxz
scas
rorl
imul
popaw
mov
insl
sub
mov
xchg
push
cld
cwtl
in
sti
testb
inc
lods
pop
or
sub
sub
jne
aas
stos
dec
sbb
sti
std
ja
push
jb
test
aam
test
inc
jb
and
mov
dec
subb
repz
cli
xchg
or
lods
jbe
inc
scas
mov
das
mov
mov
or
js
push
or
mov
add
repnz
add
rclb
push
sub
pushf
mov
mov
sub
jmp
xchg
push
repz
mov
inc
mov
mov
scas
pop
adc
lret
mov
pop
ds
cmpsl
dec
rorl
dec
push
dec
mov
je
aam
xor
jmp
cmp
or
ss
lcall
or
rolb
fidivl
sub
ret
sub
dec
lea
subl
xchg
mov
cmp
sarl
xchg
lods
mov
das
cmp
xchg
gs
ljmp
rclb
aad
pusha
mov
ja
sub
mov
push
lods
pop
xchg
call
andl
cmc
mov
sahf
cmp
test
aam
sahf
popa
jnp
pop
inc
scas
es
sbb
sbb
inc
pop
mov
sbb
negb
insb
sbb
dec
push
xchg
lahf
ss
test
pop
sub
cmp
fildl
xor
xor
sbb
and
mov
sbb
dec
xor
movsb
fdivr
insl
push
icebp
xchg
sbb
pusha
in
or
cmp
dec
out
mov
lahf
shlb
popf
xor
xor
rsqrtps
xor
fisubrl
aas
fbstp
or
rol
push
sub
in
in
pop
pop
pop
xor
addr16
mov
aaa
fistps
sbb
jae
arpl
dec
clc
orl
xorb
jns
sub
sbb
rcr
lcall
adc
sti
sub
mov
and
adc
sub
daa
out
pop
sub
cmpsl
out
jge
stos
data16
fs
bswap
xchg
lods
fsubl
xor
ds
or
fidivrl
mov
mov
pop
cmp
xor
pop
out
rcl
mov
stos
pop
mov
fstl
sbb
loopne
sbb
lret
outsl
push
jns
pop
mov
hlt
jge
mov
aaa
mov
bound
int3
jp
in
test
mov
lods
loope
add
or
mov
dec
mov
out
mov
and
sbbb
sub
fists
clc
fistps
aad
call
or
out
and
movsb
lahf
sti
push
shrb
push
mov
cmpsl
ret
mov
push
aas
xchg
sub
fisubl
jp
lock
or
lods
cmpsl
out
cli
loope
mov
inc
add
dec
mov
fwait
in
push
cmp
lods
insb
jne
push
inc
repz
daa
jbe
inc
fs
pusha
adc
in
xor
loopne
xchg
ret
out
cltd
cmp
xchg
lret
int3
mov
imul
iret
repnz
xor
sub
adc
sub
das
sarl
lret
sbb
or
sbb
sbb
pop
push
lret
pop
mov
aam
std
mov
mov
test
clc
pop
cmpsl
pop
adc
and
xchg
mov
xchg
cmp
lods
aaa
and
dec
xor
xchg
shr
fwait
xchg
popa
pop
pushf
cwtl
inc
pop
add
sub
push
mov
loop
or
pop
repnz
mov
data16
mov
ffreep
xchg
add
in
push
out
clc
sub
dec
sbb
les
shlb
xchg
xor
inc
cmp
push
pushf
and
ja
xchg
and
jle
loop
ds
hlt
js
and
push
loopne
pop
xchg
sub
xor
mov
mov
es
xchg
stos
pop
xor
mov
mov
cwtl
movsb
fisubrs
repnz
movsl
aad
jecxz
scas
add
pop
lcall
clc
std
push
pop
out
mov
leave
sbb
aad
mov
jns
dec
cli
outsb
or
pop
adc
stos
enter
fnstcw
jmp
mov
ror
add
dec
aas
xor
aaa
push
lahf
and
fcmovu
nop
gs
aad
xor
call
mov
jae
repz
xchg
outsb
mov
xchg
adc
xor
adc
loope
pop
mov
mov
mov
sub
cmp
and
xor
xchg
test
add
sub
mov
jb
pop
loop
into
cmp
mov
xchg
mov
pop
push
dec
inc
cmp
sub
sbb
or
sti
imul
out
xlat
lret
mov
xchg
mov
pop
push
dec
inc
cmp
sub
sbb
or
sti
imul
out
xlat
lret
mov
xchg
mov
push
push
dec
inc
cmp
xor
pop
push
cmp
jecxz
out
xlat
jecxz
mov
xchg
or
icebp
push
dec
xor
fsub
call
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
lds
imul
jne
dec
sarb
mov
jmp
add
cltd
xor
imul
cmp
jno
stc
push
jmp
add
cltd
xor
imul
cmp
or
jbe
adc
in
data16
negw
or
mov
ret
xchg
orb
jb
mov
sahf
mov
sub
sub
sbb
xchg
lods
pop
adc
stc
fcoms
fwait
int3
mov
jae
fdivrs
jns
fs
xor
outsl
ljmp
jne
lock
add
sahf
test
lds
dec
es
push
in
lcall
mov
fcoms
test
sub
adc
mov
or
les
mov
pop
jae
sub
movsl
call
ljmp
stc
cld
sub
or
adc
mov
loope
inc
cli
loop
aaa
pushf
push
jns
imul
cmp
or
push
jmp
add
cltd
xor
sub
pop
cli
inc
lret
pop
xor
mov
push
int3
inc
loopne
mov
mov
dec
loopne
fisubs
jo
insl
aaa
mov
nop
sbb
jo
dec
iret
pop
out
cmp
nop
sub
pop
xchg
sub
stc
push
jmp
add
cltd
xor
imul
cmp
or
push
jmp
add
cltd
xor
add
mov
mov
lahf
fs
out
clc
hlt
push
pop
xor
pop
test
fnsave
sbb
xor
xor
adc
adcl
inc
mov
pop
std
lcall
mov
push
mov
popa
lods
jne
or
adc
mov
jbe
mov
imul
xor
mov
sub
jnp
push
aam
xchg
icebp
sbb
push
loopne
xor
in
mov
xor
add
fnclex
sub
mov
aam
test
pop
aaa
sub
hlt
sti
push
insb
outsl
or
lret
fcmove
add
jno
cs
cld
mov
pop
std
cmpsb
inc
dec
sub
dec
outsb
jp
adc
add
push
or
add
jo
lds
inc
inc
popf
adc
push
ss
mov
aaa
sbb
pushf
aam
or
mov
jle
mov
mov
sub
into
sbb
pop
sarl
sbb
xor
xor
mov
lock
jne
lock
inc
in
add
ja
mov
xchg
mov
cmp
decb
bound
xchg
int3
or
cmpsb
or
into
mov
sahf
jge
in
pop
jg
movsl
les
andb
and
inc
aad
and
mov
lcall
jl
popf
fdiv
nop
cmp
pop
push
out
fdivrs
xor
idiv
leave
sub
lods
xchg
and
lret
lret
or
pop
mov
dec
rorb
or
mov
sbb
imul
inc
aaa
ja
pop
test
push
scas
je
add
outsb
sahf
cmpsb
jae
mov
dec
js
ljmp
xor
add
dec
inc
push
arpl
jg
ds
out
mov
pop
push
lea
icebp
sub
lret
out
xlat
sbb
aam
dec
cld
mov
push
mov
add
in
jb
xor
shl
in
xchg
cmp
dec
jo
test
rclb
test
fsubs
xor
rorb
outsb
int3
sbb
inc
and
push
outsl
xchg
or
push
pop
test
js
lds
fadds
dec
cltd
adc
lret
jmp
loopne
icebp
out
aam
push
dec
hlt
mov
adc
inc
mov
mov
shll
pop
push
fwait
and
sbb
outsl
shr
dec
pop
inc
cmp
ficomps
jl
mov
gs
call
aaa
add
push
hlt
jl
jb
dec
aad
nop
in
popa
fwait
add
sub
pushl
xlat
es
daa
ret
sbb
cmc
dec
stos
in
mov
ret
ja
pop
push
pop
dec
int
mov
lahf
dec
sub
cmp
lret
adc
arpl
xorb
dec
add
mov
adc
cmpsb
enter
gs
mov
push
scas
mov
mov
cmp
pop
add
inc
scas
dec
sarl
out
pop
js
stc
test
pop
decl
in
lahf
pop
popf
mov
pop
push
shlb
neg
pop
in
xchg
mov
ret
adc
es
jbe
adc
test
daa
inc
push
pop
pushf
insb
mov
jecxz
cltd
pop
xchg
add
fstps
xor
test
stc
lret
fnstcw
fcompl
bound
cmp
stos
int3
std
mov
sahf
addb
or
jmp
xor
xchg
inc
inc
pop
loopne
movsb
and
lcall
in
es
out
pop
dec
xor
mov
inc
sbb
enter
lret
stos
vmwrite
push
and
push
stos
popf
push
jmp
xchg
fisttpl
fwait
outsb
rcrl
cmp
xchg
xchg
call
daa
jl
and
lcall
lds
jmp
xchg
stc
dec
rorl
shll
ljmp
mov
sbb
cltd
ret
jne
addr16
shrl
dec
addr16
xchg
int
int
inc
addr16
pop
jo
cmp
pop
xor
adc
jle
pop
pop
adc
outsl
sbb
test
xor
vpshuflw
xchg
movsl
repz
aaa
add
cld
push
js
cmpsl
cltd
jae
rcl
mov
inc
inc
hlt
rcr
stc
push
shr
fdivr
lods
and
imul
pop
cmp
mov
dec
cs
jo
push
mov
and
lds
or
mov
push
arpl
dec
sbb
int
int
inc
adc
jl
jne
aaa
mov
push
fdivrl
xor
lahf
loop
or
adc
add
sub
jl
shrb
imul
outsl
rcll
clc
das
insb
pusha
clc
shrl
or
adc
push
jb
sub
lret
adc
lahf
and
orl
fisubs
dec
aas
out
lods
dec
dec
fnstsw
dec
sbb
xor
and
push
pop
push
push
das
cmp
push
adc
dec
ljmp
cmc
jle
push
xchg
clc
and
pusha
sub
sbb
xor
lock
cmp
push
lret
arpl
outsb
clc
cmc
mull
sbbb
lahf
leave
adc
int3
lock
mov
in
adc
xor
pop
loopne
lock
adc
mov
pusha
mov
push
adc
sbb
xor
sbb
out
aaa
ljmp
jns
jp
pop
jl
jns
mov
dec
ficoms
mov
mov
sbb
pop
addr16
pop
fidivrs
cmc
iret
fdivr
loop
cmpsl
loopne
ret
inc
xor
mov
mov
dec
cmp
test
inc
xchg
mov
mov
cmp
addr16
sbb
xchg
mov
mov
or
dec
and
shl
xchg
inc
mull
sbb
xchg
es
dec
ja
out
inc
xchg
pop
and
or
inc
mov
test
mov
and
mov
sbb
cmc
stc
inc
enter
lea
mov
ljmp
shrb
mov
or
jbe
xor
cmc
jno
scas
repz
mov
sbb
sub
std
rcl
ljmp
sahf
in
cld
push
add
xchg
repz
rcrl
cld
sti
lods
les
xor
sub
lahf
mov
adcl
jmp
dec
nop
loope
stos
xor
jle
lret
hlt
int3
jb
mov
lret
push
or
mov
and
fs
sbb
stos
loop
push
ret
inc
xor
or
insb
xorl
popf
adc
ja
or
mov
fimull
out
and
inc
and
aad
and
sbb
push
xchg
adc
cmpsl
out
fldcw
push
sub
mov
mov
aad
dec
and
imul
dec
in
sbb
sub
pop
mov
aas
subl
call
out
mov
movsb
lods
test
in
mov
jge
lea
sbb
inc
pop
cmp
sti
les
jg
mov
dec
push
shl
negl
aam
shlb
mov
outsb
out
dec
outsl
repz
out
xchg
xchg
cwtl
mov
or
adc
mov
xor
xor
scas
mov
xchg
jnp
adc
mov
xor
lret
ret
pop
ds
add
add
imul
add
std
jb
leave
pop
mov
add
fldenv
inc
jecxz
outsb
jg
pusha
test
insl
adc
stos
loopne
lds
fwait
rorl
data16
cmpb
test
adc
stos
movsl
pop
push
cmp
add
push
sub
lds
std
insb
sbb
dec
jae
cmp
pop
pop
std
jg
mov
data16
adc
push
and
xor
mov
and
mov
das
cmp
jno
add
loop
cmpsb
xchg
kmovb
loopne
rcrb
mov
outsb
and
mov
pop
pop
js
lods
dec
inc
and
int
jge
cmp
out
mov
mov
idivb
arpl
shll
outsb
aam
sub
xchg
ret
cmp
aas
sbb
push
dec
test
inc
dec
push
jns
push
sub
mov
sarl
mov
mov
fs
scas
sub
stos
loope
lock
jno
hlt
loope
in
lods
dec
xor
dec
cwtl
loope
pop
popw
cwtl
mov
mov
xor
inc
sub
jge
out
idiv
adc
pop
mov
sbbb
pop
cs
pusha
pop
sbb
dec
mov
orb
sub
mov
xlat
mov
cltd
mov
fsts
pop
cltd
gs
jmp
jg
out
xchg
sti
or
add
lock
pop
sbb
push
les
mov
in
adc
incb
ljmp
mov
sbbb
cld
xchg
mov
dec
stos
mul
int
xorb
fidivs
sbb
andl
fistps
mov
sub
in
and
fldt
inc
icebp
jae
mov
dec
mov
cwtl
mov
mov
loope
and
int3
sub
add
adc
lret
addl
lods
addb
pop
call
mov
aad
arpl
pop
aas
or
and
mov
push
adc
stos
lahf
xor
ret
pusha
stos
fadds
xorb
ds
add
pop
fdivl
jp
mov
insb
daa
fdivr
xchg
mov
test
imul
lea
in
in
mov
mov
fmul
rcr
xor
outsb
pop
pop
addb
sbb
add
push
ds
push
xor
mov
xchg
adc
xor
jb
pop
stc
inc
loopne
cmpsb
jecxz
mov
xchg
jnp
dec
int3
xor
dec
ljmp
int3
jl
out
mov
insb
xor
imul
adc
or
imul
std
cmp
or
push
adcb
pop
divl
pop
mov
js
mov
mov
scas
imul
lcall
push
push
jmp
jl
or
mov
loope
mov
cmp
aam
scas
out
fsts
pop
in
jo
test
popf
add
push
push
ficompl
sahf
aad
pop
xor
lods
gs
or
and
cltd
jmp
ds
xchg
lret
nop
and
mov
lahf
mov
int
add
jg
inc
out
mov
outsl
xorb
lods
orb
dec
mov
or
inc
xor
xor
jmp
aad
or
sub
scas
sub
xchg
bound
adc
jbe
pop
flds
jmp
lcall
call
cwtl
cmp
lock
movsb
mov
in
fimuls
popa
loop
and
movsl
iret
xor
sub
dec
imul
dec
popf
movsl
mov
cwtl
pop
test
dec
movsl
adc
std
push
es
pop
scas
jle
aaa
fdivrs
mov
push
test
mov
lcall
sbb
shrl
decl
push
fwait
repnz
lret
icebp
cmp
sbb
and
test
dec
jo
mov
mov
les
rcrb
int
pop
mov
dec
jo
mov
stos
rcr
dec
xor
jg
es
inc
push
jbe
inc
pop
mov
ret
xor
lcall
xchg
mov
in
push
outsb
vandpd
jno
loope
and
adc
add
out
hlt
leave
ljmp
enter
mov
lock
loope
push
xor
setl
mov
mov
push
add
pop
adc
xchg
hlt
fnstcw
aaa
sbb
fildl
push
adcb
jne
jo
xchg
dec
data16
call
fdivr
dec
jae
dec
imul
pop
or
scas
sbb
fsub
aad
push
jp
std
mov
mov
sarl
lock
movsl
inc
insl
or
xor
shr
mov
sub
ret
enter
mov
cmp
xchg
dec
pushf
jae
adc
loope
insl
call
imul
mov
dec
push
add
mov
test
ljmp
jnp
pop
push
icebp
movsl
cltd
lcall
jns
stc
and
loopne
test
mov
adc
mov
arpl
push
ffree
cmpsl
xchg
dec
jbe
xor
add
lock
xlat
loop
add
sbb
insl
xchg
popa
mov
push
test
push
sarb
pop
aaa
std
dec
mov
arpl
mov
pxor
icebp
lock
test
mov
pop
push
fnstcw
pushf
fwait
movsb
and
cltd
sti
cwtl
cmp
sahf
outsb
mov
cmp
sbb
push
cmc
cwtl
push
dec
sbb
push
es
mov
jbe
sahf
dec
xor
mov
mov
inc
rep
mov
pusha
jnp
sti
sbb
test
xchg
fs
in
test
push
ret
in
je
stc
mov
mov
cli
add
ljmp
sub
cmp
dec
pushf
fidivl
adc
in
loop
int3
or
mov
cmp
mov
hlt
sbb
repz
inc
add
jl
loopne
rorb
add
cmp
or
and
out
test
ss
ja
stos
jmp
xor
das
xchg
cmp
iret
mov
ss
dec
mov
subl
divb
sub
pop
lret
or
add
je
sbb
lcall
push
inc
aas
inc
sti
loope
lds
sbb
lahf
dec
scas
test
xchg
sub
jae
xchg
stc
js
les
mov
outsb
mov
fwait
test
jp
int3
cmpb
test
push
fnsave
orl
cmc
cld
jecxz
fwait
lock
cmp
jge
test
jg
sbb
push
cld
mov
out
adc
pop
adc
push
movsl
jecxz
lea
scas
jno
fdecstp
mov
ret
int3
cli
xor
and
adc
mov
fcoml
add
mov
add
movsl
pop
stos
push
sbb
jbe
divb
push
enter
out
ljmp
int
mov
test
lds
inc
insb
das
bound
and
cmp
pop
negb
push
adc
cmpsl
test
daa
push
pop
mov
and
loop
inc
xchg
lods
out
mov
pusha
imul
add
or
aam
jp
ljmp
in
stos
xor
std
push
mov
ljmp
pop
cmp
or
leave
mov
adc
lcall
dec
inc
es
push
dec
fwait
mov
gs
lcall
add
jo
sub
cld
addl
leave
mov
bnd
into
pop
lock
cs
and
or
adc
mov
out
rcll
pop
leave
sahf
movsl
mov
in
add
mov
imul
cwtl
and
fadds
sahf
push
stos
mov
call
loop
test
or
jo
xchg
push
jle
stos
arpl
mov
pop
mov
je
push
dec
bound
jp
lods
or
sbb
jecxz
add
fidivs
pop
mov
loope
fstps
mov
cmp
lods
push
mov
std
jge
movsl
adc
mov
cmp
sbb
mov
les
outsb
adc
cmpb
cmp
jns
shll
dec
flds
stos
inc
add
test
loop
fistpll
push
test
pop
jb
adc
mov
and
adcl
pop
iret
data16
into
fmull
mov
js
int
lret
adc
xlat
in
int3
int3
shrb
sahf
js
add
dec
sub
cmp
ffreep
movsb
popa
movsb
push
lret
rcrb
inc
popa
mov
rcll
and
ja
pop
test
hlt
mov
xchg
fcomp
cltd
pop
sbb
adc
cmp
addr16
fisttps
mov
xor
gs
dec
into
icebp
add
ret
adc
pop
fldt
add
stos
inc
rorb
mov
xchg
inc
je
pop
xor
pop
lret
iret
pop
pusha
dec
or
jl
call
adcb
dec
inc
jnp
or
push
add
ljmp
movsl
imul
dec
loop
mov
cs
cmp
leave
push
sbb
out
mov
fsubrs
icebp
jbe
icebp
fistpl
inc
xor
sub
shrl
sub
add
push
pop
pop
mov
mov
pop
mov
out
mov
add
mov
insl
sbb
push
inc
mov
je
sbb
test
stos
sar
inc
sub
xor
in
pusha
add
add
and
push
fwait
dec
adc
jne
inc
into
lea
lret
test
insb
and
sarl
add
or
jp
lahf
test
xorl
xchg
outsb
jmp
mov
ret
sub
data16
test
daa
or
push
call
iret
jg
push
add
sub
push
shll
out
lret
out
addr16
dec
sbb
notl
pop
pop
or
cli
cmc
pop
pop
scas
shlb
mov
icebp
add
dec
or
out
add
fnstenv
add
jp
arpl
jmp
add
mov
data16
pop
shl
or
mov
decb
cmc
stc
push
dec
inc
into
icebp
jae
push
mov
pop
subl
mov
std
repnz
push
pushf
add
cmp
fucomp
pusha
push
out
inc
stos
lods
xchg
mov
xor
movsl
adc
sbb
xchg
mov
negb
mov
mov
mov
adc
xor
ret
cs
cmpsl
arpl
mov
daa
hlt
cmp
jne
xchg
test
negl
jp
lds
aaa
insb
popa
cmp
mov
cmpl
fidivl
andl
push
bound
fsubl
pop
movsb
lods
mov
xchg
loop
jne
pop
xchg
daa
add
lcall
je
addr16
repnz
mov
fisttpl
loope
ffree
bnd
in
dec
bound
cmp
mov
icebp
push
pop
lds
ret
iret
lret
xor
and
mov
or
cmc
mov
inc
loope
and
jmp
js
js
loopne
dec
call
push
ss
sti
and
xor
sti
cmpsb
cmp
jmp
fimull
cmpsb
dec
lret
bound
rcrl
mov
xchg
cli
imul
ds
jbe
js
in
in
out
mov
dec
loop
mov
test
and
es
jbe
cmpb
idiv
adc
sti
add
push
xchg
and
mov
mov
dec
adcb
aad
popa
pop
int
sti
mov
xchg
dec
cmp
cmp
cmp
clc
fdivrl
xor
daa
ljmp
jae
cmp
pop
mov
aad
mov
int3
imul
mov
sub
xor
push
add
mov
ret
inc
sub
or
pushf
out
mov
adc
sti
in
sub
sbb
fld
dec
fldenv
js
pop
leave
jo
sbb
sbbl
int
xchg
popf
in
xor
lea
outsb
into
add
fisubrl
xchg
inc
xchg
push
adc
lock
xor
xchg
outsb
hlt
sti
jecxz
or
jmp
and
mov
leave
lea
repz
mov
push
lods
cs
cwtl
dec
lods
cwtl
lahf
adc
cld
add
mov
dec
es
arpl
mov
push
bound
rclb
push
push
int
mulb
insb
mov
pushf
hlt
jae
lcall
push
repz
cmp
fisttpll
das
data16
dec
mov
lods
dec
cld
push
jp
mov
inc
pusha
sbb
mov
in
dec
adc
stc
jbe
push
hlt
or
pushf
movsb
xor
xchg
mov
notb
push
mov
iret
in
xchg
or
jl
int
aas
in
inc
fldl
mov
jns
mov
fs
les
lods
push
out
sahf
divl
mov
adc
inc
fcmovnbe
cmp
loope
cld
pop
std
and
dec
out
loope
addb
mov
inc
xor
sbb
jecxz
rclb
mov
cs
add
daa
aam
lcall
imul
hlt
cmc
lea
lds
pop
push
mov
mul
pop
movl
cmp
sbb
movsb
stos
cmp
jnp
cmp
dec
fcoml
sbb
popa
jbe
sbb
cmp
rorb
dec
sar
adc
arpl
test
hlt
test
aas
pop
adc
je
or
jae
movsb
lahf
pop
aam
xchg
mov
inc
mov
shlb
movsb
addr16
xor
mov
ss
pop
dec
clc
mov
or
adc
push
xlat
mov
outsb
or
xchg
shrb
jbe
fwait
iret
test
movsl
and
xor
or
jae
cmpsb
sbb
add
loope
sub
xlat
fs
push
cmp
inc
xchg
orb
mov
cwtl
jbe
test
mov
mov
dec
test
xchg
sub
stc
push
jmp
add
cltd
xor
imul
cmp
or
push
jmp
add
cltd
xor
imul
cmp
inc
stc
push
jmp
add
cltd
xor
imul
cmp
or
fnstenv
jb
popf
push
frstor
jbe
sub
cmp
or
sbb
add
pop
jp
push
pop
mov
cmp
sub
or
cli
sub
cmp
or
sbb
dec
mov
test
dec
cltd
cmp
sub
sbb
ljmp
imul
mov
pop
lods
inc
xchg
cmp
ljmp
scas
mov
sti
aaa
imul
dec
roll
scas
outsl
mov
mov
dec
lcall
cmovno
adc
pushf
aad
adc
jmp
aad
stos
jne
in
test
or
mov
push
cmp
dec
mov
test
ljmp
cmp
mov
mov
mov
pop
jbe
leave
fiaddl
add
adc
out
push
mov
adc
out
or
pop
imul
cmc
push
add
dec
loopne
sbb
hlt
bound
mov
das
cltd
cwtl
dec
cld
sub
sbb
or
movsl
sub
cmp
or
sbb
dec
mov
test
dec
cltd
cmp
sub
sbb
or
mov
test
add
out
or
int3
fmul
xor
mov
ja
jle
movsl
sub
imul
into
sbb
sub
pop
int3
and
das
divb
pop
xchg
dec
lods
adc
push
popa
ljmp
dec
mov
test
dec
cltd
cmp
sub
sbb
or
cli
sub
cmp
or
sbb
dec
mov
test
dec
cltd
cmp
sub
sbb
or
cli
sub
jo
mov
mov
sar
shrb
pop
mov
add
pop
sub
mov
cmpsb
fdivl
adc
sub
sub
test
adc
mov
pop
repz
add
mov
icebp
pop
mov
inc
lds
sub
xchg
inc
shrb
or
lahf
xchg
xchg
xchg
inc
mov
je
cmc
pop
imul
ds
cmpsb
test
lret
ret
mov
xor
mov
mov
pop
xchg
pusha
inc
fbld
or
xchg
adc
dec
mov
jecxz
popf
outsl
pop
mov
jmp
push
push
mov
mov
iret
mov
mov
and
push
loopne
bound
and
adc
xlat
scas
shl
xor
xor
sub
sub
jg
or
cmpsb
push
sub
aaa
pop
push
test
mov
add
dec
xor
jge
dec
cltd
daa
xor
mov
lret
jp
data16
dec
xchg
and
outsb
pop
sbb
fwait
lahf
push
mov
ret
sub
pop
pop
fistps
add
mov
cmp
sbb
inc
cwtl
arpl
ds
adcl
or
popfw
or
lahf
inc
mov
sti
push
xor
jl
aas
xor
inc
dec
out
loop
pop
xchg
jmp
inc
pusha
orl
jmp
fwait
mov
jo
das
jno
xor
mov
cs
in
sbb
xor
call
jmp
or
mov
loope
inc
mov
lds
pop
sub
sarb
test
cmp
jbe
clc
fwait
scas
mov
bound
addr16
cmc
sbb
popa
mov
cmpsl
jbe
mov
clc
testl
ret
adc
cs
popf
inc
das
dec
pop
mov
int
fbld
jns
mov
aas
shlb
sarb
push
push
daa
xchg
call
gs
or
pop
into
cltd
les
jbe
mov
clc
dec
push
mov
leave
push
jle
mov
lea
mov
stos
xchg
testb
inc
adc
jg
mov
xchg
in
out
adc
js
ficomps
lods
dec
les
mov
jp
cmp
lods
jne
mov
rclb
sarl
push
and
leave
inc
mov
scas
cmp
nop
ljmp
adc
push
pop
cmpb
fcmovne
push
in
xor
gs
mov
out
mov
push
neg
xchg
and
cmc
lods
jl,pt
sub
ret
out
ljmp
enter
loope
dec
add
call
lds
sub
push
add
and
in
inc
out
sarb
pop
leave
sub
sub
pop
mov
push
mov
fistpll
pop
int3
xchg
sbb
enter
fistpll
stc
push
or
pop
push
fisttpll
lock
add
mov
or
in
jecxz
mov
or
cltd
mov
sub
xor
loop
mov
pop
arpl
in
cmp
sub
call
or
fstps
jae
out
cwtl
pop
aad
ja
adc
les
stos
mov
sbb
sbb
pop
xor
cmp
mov
mov
xor
adc
icebp
xor
adc
leave
gs
das
push
jp
push
outsb
mov
int
fadd
mov
arpl
int
test
adc
xchg
aad
mov
in
movb
mov
insb
rcrb
dec
je
xchg
adc
test
jp
adc
subb
iret
inc
jo
bound
out
or
pop
das
mov
inc
jne
xchg
cs
js
mov
xor
hlt
inc
push
andl
lods
xchg
imul
clc
push
push
mov
mov
outsl
mov
aad
or
inc
pop
fwait
out
or
ret
cli
jp
sub
enter
paddsw
rorb
mov
decb
mov
mov
or
aam
outsl
dec
xor
dec
jae
pop
cmc
bnd
pushf
testb
xor
dec
push
adc
mov
jg
jmp
push
xchg
subl
jecxz
icebp
test
sbb
icebp
xor
and
mov
cmp
fbstp
inc
mov
mov
test
xor
sbbb
lods
cmpsb
xchg
fldenv
mulb
popa
lods
adc
cwtl
repz
in
fstpt
pop
cwtl
add
std
mov
push
sbb
aas
jbe
fs
dec
xor
fimull
pop
xchg
insb
mov
xor
or
stc
mov
js
outsb
xchg
clc
ds
add
jge
cmc
sarb
sub
out
adc
dec
jb
adc
loop
cmpl
daa
and
ljmp
mov
loopne
imul
ss
jmp
inc
movsb
adc
pop
push
add
arpl
mov
inc
xchg
repz
test
repnz
leave
xorl
sti
sub
push
xchg
lea
push
dec
lods
cwtl
repz
or
sbb
pushf
mov
mov
mov
sub
repnz
fadd
fs
or
test
inc
jbe
jno
mov
fnstenv
push
movsb
xchg
inc
subb
popa
push
outsb
jo
call
adc
xchg
loop
into
aam
inc
icebp
cmpb
ljmp
pop
out
arpl
pop
lock
jns
aam
xlat
ljmp
jbe
dec
lcall
popa
sbb
pop
add
or
sahf
rorl
cmpsb
adc
mov
adc
mov
enter
and
lret
pop
dec
mov
aas
icebp
adc
mov
cmpsb
dec
out
pop
test
dec
je
adc
xchg
push
gs
f2xm1
fists
arpl
scas
push
cld
imul
addl
decl
jl
inc
loop
mov
sub
xchg
int3
sahf
fsubs
imul
mov
daa
pop
ja
rorl
adc
testb
xlat
lret
lret
addps
sar
xor
and
movsl
lea
jg
or
cmc
mov
lcall
pop
mov
fsts
stos
mov
mov
je
dec
jns
xchg
xchg
mov
inc
jns
imul
sbb
out
xor
cmp
leave
scas
bound
ret
cmp
push
sbb
xor
pop
jb
inc
das
dec
in
cmc
push
iret
cmp
cmp
fiadds
inc
pop
cmp
sbbb
rolb
push
sub
jp
jp
jne
sti
mov
enterw
imul
les
fdivrs
stc
frstor
and
mov
sbbl
loope
add
mov
dec
and
or
loop
adc
mov
pop
xchg
rcll
pop
adc
addr16
jae
cmc
xchg
imulb
mov
xchg
cltd
push
pop
js
pop
popf
ficoml
dec
mov
push
jl
aam
aad
in
shlb
cwtl
jp
cmp
ret
and
arpl
and
sub
jae
cmp
push
fucomp
sub
fdivr
cmp
xchg
insl
adc
std
stos
cmpsb
in
mov
add
jecxz
pop
jmp
dec
and
popa
jecxz
mov
cmp
data16
stos
lahf
sub
shl
cmp
mov
xchg
cld
jmp
scas
scas
cltd
sbb
vmaxps
lahf
jbe
push
mov
adc
jne
mov
sub
mov
adcl
push
push
mov
add
push
in
in
mov
lods
repz
inc
mov
pusha
jne
int
and
xor
dec
gs
maxps
fstpl
pop
es
dec
mov
enter
sub
or
mov
xor
cwtl
pop
cmp
popa
pushf
insl
ficoms
repnz
fstl
cmp
mov
mov
pusha
leave
arpl
jo
fisttpll
es
test
mov
add
cmc
jo
addb
or
xchg
pop
push
sub
sub
sbbb
mov
jg
bound
mov
mov
pop
jns
scas
out
cmc
sar
jns
sahf
mov
cmp
icebp
jmp
mov
sbb
cmpsb
sahf
or
aad
jmp
sbb
inc
xor
div
jecxz
adc
adc
mov
or
cli
push
test
jb
mov
mov
push
jle
pop
or
js
test
cwtl
sbb
mov
lea
cmp
in
mov
popf
lock
mov
adc
mov
jmp
test
cmp
push
negl
mov
int3
das
in
adc
call
cs
cmpsb
and
add
out
push
jmp
mov
inc
mov
test
inc
push
lods
cs
gs
hlt
popa
jne
jne
dec
sbb
jg
shl
movsb
out
out
mov
stos
in
das
add
lret
aas
movq
andl
xor
insl
jecxz
inc
mov
in
pushf
mov
rcll
pop
aaa
cmp
sub
iret
inc
push
mov
adc
js
repnz
dec
call
sbb
mov
and
lahf
test
out
ds
sub
add
inc
mov
push
ret
sbb
inc
dec
pop
inc
and
enter
pop
push
shlb
mov
inc
jnp
dec
fisubl
sahf
pop
jnp
xchg
mov
xchg
and
in
out
outsb
jne
mov
je
das
aaa
rcll
imul
jnp
cmp
fiaddl
sub
jle
xchg
or
testl
loop
push
jl
mov
add
ds
ljmp
and
or
addr16
and
mov
cmp
xchg
xorb
add
push
test
call
cmp
bound
sub
clc
mov
pop
stos
and
sbb
rolb
lds
fcmovnu
je
xchg
sbbb
std
call
ja
les
rcl
add
or
jo
adc
mov
out
lock
das
push
and
cs
call
xchg
inc
jo
or
sub
push
inc
test
xlat
arpl
gs
jbe
ret
xchg
add
out
out
fwait
addr16
int3
clc
mov
stos
ljmp
repz
pop
push
xlat
mov
pop
or
ss
sub
add
cmp
pop
sbb
cli
jo
push
pusha
movsb
push
test
in
out
lcall
dec
xor
lock
mov
dec
call
dec
pop
leave
dec
icebp
stos
adc
inc
push
jmp
push
daa
jecxz
xchg
xchg
loopne
test
and
cld
jmp
lods
lret
in
daa
sar
jo
jae
push
pop
fnstenv
ret
mov
sarb
sbb
sbb
in
add
je
ret
inc
push
cltd
test
jp
hlt
lods
dec
and
rcl
mov
sbb
pop
flds
adc
popf
dec
imul
add
or
testl
adc
jecxz
xor
push
out
mov
rcrl
addr16
adcl
dec
push
adc
lods
push
adcb
sbb
and
rcrl
sub
cmc
push
adc
ret
call
stos
dec
inc
jg
jp
pop
mov
lcall
cmpsl
adc
pushf
and
pop
push
into
clc
aas
shlb
fdivrl
clc
add
test
loope
adc
int
xor
mov
dec
dec
add
mov
xchg
pusha
rcl
lods
mov
lock
scas
xchg
xchg
fwait
pop
jge
push
fisttpll
inc
jae
jg
mov
xor
mov
rcr
jg
fs
dec
data16
enter
xor
imul
and
jmp
add
adc
mov
popa
xor
ljmp
stos
data16
call
out
jo
dec
add
jmp
or
mov
out
inc
sub
outsl
xchg
mov
addr16
add
mov
fistl
and
fwait
lcall
in
jp
lret
dec
nop
push
gs
gs
fiaddl
mov
pop
xchg
mov
and
mov
push
push
bound
add
mov
mov
fistpll
je
sbb
push
inc
push
idiv
fidivrs
jle
inc
pop
iret
fiadds
mov
fstp
cltd
faddp
mov
lods
stos
stc
shr
fwait
fs
sub
add
jg
hlt
mov
in
mov
and
sbbb
out
cmpsl
mov
dec
jge
pop
dec
mov
xlat
and
mov
outsl
mov
sti
aam
in
xchg
sbb
jp
mov
xor
xor
jl
pop
inc
inc
aaa
push
pop
push
cmp
cmp
mov
adc
jle
jge
xor
out
cmp
mov
and
loopne
test
ficoml
les
ret
push
aam
out
je
jns
maskmovq
mull
enter
xchg
sbbl
mov
adc
addr16
icebp
jae
aam
das
or
dec
cltd
and
mov
cli
popa
lds
xor
mov
fs
mov
and
jo
mov
ret
jl
push
cli
add
sbb
xor
inc
push
mov
clc
pop
nop
lret
or
es
jmp
ljmp
xor
mov
outsl
or
enter
or
andl
fistl
mov
ljmp
push
ficoml
scas
xorb
shll
push
push
loopne
mov
or
clc
int
testl
stc
mov
pop
pop
clc
int3
stos
pushf
faddl
jns
xor
sub
rcl
mov
imul
stos
cmpsl
and
push
ljmp
add
sub
insl
jb
setnp
loope
lods
jecxz
sbb
or
fists
repnz
loopne
dec
mov
rcr
mov
and
nop
mov
pop
call
icebp
xchg
and
iret
sub
mov
in
cmp
ljmp
push
push
test
xorb
pushw
fs
sub
sbb
enter
and
pop
jg
test
or
xchg
imul
repz
int
fmul
pop
mov
add
and
or
daa
xor
and
sbb
or
adc
cmp
mov
mov
cmpsl
flds
mov
mov
hlt
xor
rolb
cmp
pop
mov
rcrl
rcll
addb
mov
ljmp
pop
or
aad
cbtw
imul
mov
js
pop
push
adc
pusha
imul
aad
test
repnz
xchg
sbb
jp
ret
jl
sbb
popa
jne
iret
fsubl
mov
push
gs
sbb
jle
incl
pop
pop
into
xchg
jae
mov
lods
xor
jno
and
inc
movsb
mov
shlb
cmpsl
popf
pop
pushf
or
jge
or
das
jmp
pop
aad
pop
int
mov
loop
outsb
cmp
fwait
iret
jmp
mov
cld
cmp
repnz
add
mov
mov
inc
pushf
loop
rcrl
ret
daa
add
xor
cmpsb
mov
ljmp
mov
adc
imul
push
nop
or
outsb
adc
lcall
xchg
jmp
cmp
repnz
push
sti
std
repnz
orps
mov
scas
inc
pop
adc
idivb
mov
push
jg
push
mov
lahf
scas
mov
outsb
mov
mov
jns
sub
add
aaa
push
mov
xchg
cmp
into
fsubs
inc
cmp
and
in
pusha
pop
sarb
or
in
mov
clc
int
xor
test
jo
cmpsb
das
repnz
or
mov
xor
in
pushf
and
sar
jbe
in
xchg
push
or
and
push
inc
out
mov
xchg
push
sub
jo
rorl
inc
cmp
mov
push
dec
pop
rcrl
sbb
adc
test
xchg
push
pusha
mov
or
rcrl
scas
jg
imulb
mov
push
out
and
cmpsb
aam
mov
cmpsb
daa
dec
fnstcw
mov
cmp
out
bound
sbb
xchg
insl
push
xor
add
in
movsb
push
xlat
push
cwtl
hlt
aas
xchg
add
std
add
adc
cmpsb
pop
decb
xor
push
cmc
test
push
dec
mov
mov
not
mov
mov
mov
mov
mov
mov
sbb
adc
enter
roll
ficoms
dec
adc
in
inc
cmp
inc
scas
bound
mov
int
mov
bound
scas
xchg
mov
iret
jg
sahf
sbbb
xchg
mov
jmp
push
repz
xchg
test
popf
jb
mov
sbb
sahf
movsb
and
mov
xchg
fistl
mov
hlt
in
call
xchg
in
push
out
cltd
adc
vmwrite
jp
mov
ds
cmp
in
daa
rclb
mov
mov
mov
aam
mov
dec
jp
jecxz
push
divl
sarl
shlb
inc
dec
mov
fbstp
pushf
mov
icebp
cs
nop
in
and
sbb
sub
pop
xchg
sbb
ljmp
rcrb
cmp
mov
lods
sahf
je
mov
adc
out
sbb
ds
mov
icebp
dec
and
lcall
out
jo
mov
jae
adcb
out
aam
xor
dec
sub
xor
in
sbbl
xchg
jl
mov
add
lcall
cmp
push
sbb
popa
and
out
or
lret
xlat
bound
addr16
mov
mov
and
pop
dec
mov
mov
inc
push
je
lods
dec
mov
scas
push
cli
loop
adc
fcomps
outsl
adc
outsl
pop
adc
and
popa
push
and
jb
dec
jge
test
mov
pop
sti
add
inc
mov
lea
add
sbb
push
popf
cmp
adc
cmc
stc
dec
xchg
xchg
mov
sub
mov
or
cld
je
icebp
dec
xchg
push
leave
das
push
push
pop
addl
push
mov
outsb
push
cli
fcmovnu
loopne
test
js
addr16
dec
mov
lret
inc
sarl
rol
lcall
fucomp
stos
ds
push
push
les
sbb
xchg
shll
rcl
push
es
sub
xor
sbb
push
outsb
sarl
lahf
test
shlb
add
mov
inc
cltd
pop
icebp
mov
pop
cmpsl
push
adc
ss
dec
pop
xor
cmp
and
ficompl
in
mov
jp,pt
lcall
daa
lock
cmp
fs
mov
adc
push
adc
test
pop
ds
sub
mov
test
mov
cmpsb
mov
inc
xchg
loop
fnstsw
sbbb
push
cmp
out
lcall
jo
pusha
push
xchg
gs
call
adc
pop
fdivrl
sbb
jno
in
or
xchg
jnp
aam
in
test
aas
ficoms
imul
test
fisttps
hlt
pop
int
ljmp
or
or
ds
or
and
or
and
test
mov
mov
dec
dec
push
and
cmpsb
enter
sub
movsl
fcmove
call
mov
sub
inc
pop
push
clc
lret
pop
fucom
sub
sbb
jl
xchg
ret
xor
leave
rol
xchg
mov
push
jb
jecxz
add
enter
mov
push
dec
iret
lret
mov
in
xchg
cmp
je
fcoms
push
imul
xchg
data16
imul
scas
inc
aas
add
fidivs
movsl
mov
xor
cltd
mov
movsb
and
test
dec
sub
xor
insb
sbbb
enter
jae
fldz
mov
das
jge
inc
test
mov
pushfw
xchg
inc
dec
pop
jb
sbb
nop
or
vpaddsw
lahf
add
into
jne
push
aas
cmpsl
in
or
les
pop
mov
dec
mov
ss
mov
xchg
push
and
mov
jmp
and
lret
imul
mov
cmp
sub
sbb
or
cli
sub
cmp
or
sbb
dec
mov
test
dec
cltd
cmp
sub
sbb
or
cli
sub
mov
mov
dec
mov
sub
pop
mov
cmp
sub
sbb
or
sti
sub
cmp
or
sbb
dec
mov
test
dec
out
dec
popa
mov
es
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
push
lret
inc
and
adc
test
jb
push
adc
shlb
test
aam
les
inc
and
adc
add
je
call
shlb
test
xchg
mov
and
mov
add
mov
ret
lret
int3
idiv
mov
int3
les
xor
dec
add
push
push
inc
add
mov
mov
push
cmp
les
or
lcall
out
mov
cmp
push
and
in
hlt
jg
addr16
insl
cmc
xchg
daa
mov
pop
dec
stos
xor
ljmp
repnz
iret
sarb
test
or
aam
in
adc
aam
hlt
inc
xor
add
mov
int3
scas
dec
mov
jg
les
cmc
ljmp
and
int3
sbb
subl
out
mov
push
imul
mov
lods
hlt
jp
xor
xor
out
adc
mov
or
pushf
scas
cmc
sbbl
aam
inc
or
inc
aam
nop
bound
adc
xor
ret
test
int3
xchg
fadds
stos
adc
sub
push
pop
sub
dec
or
arpl
xchg
repnz
loope
loopne
in
negl
mulb
and
and
push
xor
and
mov
shl
icebp
cmpsl
jecxz
movsb
test
mov
scas
cmp
arpl
inc
arpl
adc
xor
shlb
test
aam
les
inc
and
adc
add
je
xor
shlb
test
aam
les
out
leave
mov
sub
in
cld
ja
mov
pop
leave
xor
std
inc
icebp
cmp
xchg
or
dec
hlt
xchg
pop
and
call
push
and
aad
aas
inc
xorl
pop
pop
pop
stc
jne
inc
icebp
cli
jle
cwtl
cwtl
daa
rcl
fs
lret
sbb
xchg
push
push
adc
rcll
sbb
imul
je
pop
xor
call
xor
push
jbe
cmp
pop
or
or
js
js
call
sbb
dec
xchg
das
lods
out
xchg
sti
sub
fistps
mov
cmp
sub
aam
iret
movsl
mov
lock
jnp
push
sahf
adc
aam
enter
lds
pop
jmp
into
leave
dec
scas
ljmp
std
push
pop
inc
xor
pop
inc
adc
bound
sbb
pop
pop
cmc
mov
mov
js
scas
fwait
shrb
mov
outsb
xchg
stos
mov
ja
lock
mov
lcall
mov
mov
xchg
jecxz
sub
xor
inc
ficoms
aad
mov
test
lahf
es
cmpsb
jno
rorb
dec
mov
imul
mov
loope
jge
in
filds
fisubrs
loope
popf
adc
lods
xchg
test
cmp
inc
add
in
shlb
cmp
mov
mov
das
adc
mov
inc
pop
inc
clc
or
repnz
push
jmp
adc
int3
lods
mov
xchg
sbb
xchg
bnd
cltd
jne
dec
int
data16
jo
ret
jnp
lahf
push
ret
or
mov
stos
sub
inc
mov
jecxz
push
mov
imul
call
aaa
jmp
daa
loop
sti
decb
and
div
sub
scas
lcall
fsts
sub
addr16
fmull
add
mov
and
add
xor
test
scas
movsl
mov
mov
inc
inc
ljmp
and
sti
outsb
inc
and
rcl
into
sbb
mov
inc
loopne
push
aaa
repz
scas
out
call
push
aaa
and
shlb
int
xor
and
shll
inc
mov
dec
xchg
mov
cmp
push
jge
cmp
inc
pop
adc
cmp
sbb
iret
insl
add
idivl
lods
mov
jmp
ss
hlt
je
cmpsl
out
cmp
out
loope
inc
stos
cld
int
rolb
push
jo
sub
push
xchg
scas
and
jo
mov
and
mov
mov
cmp
out
test
xchg
insl
jnp
inc
imul
pop
push
leave
jge
push
lret
jb
rcrl
call
sub
cmp
push
xchg
mov
push
aad
cmpsb
xor
sti
mov
push
mov
pushf
gs
xchg
pop
pop
subl
mov
jmp
push
mov
loopne
mov
mov
mov
test
iret
aaa
mov
sub
aaa
mov
cs
aad
sti
sub
mov
xor
repz
sub
out
sti
xor
shl
scas
popf
mov
mov
xchg
ret
mov
sbb
in
data16
shrb
repnz
bound
cmp
lods
out
cli
pop
push
decb
pop
arpl
mov
mov
int
sub
and
dec
rcl
cmp
xor
sub
adc
push
btr
mov
inc
inc
add
stos
lods
adc
sub
dec
test
mov
and
or
cmp
add
les
dec
je
popf
call
push
fimull
or
ljmp
les
fmuls
jae
sbb
fistpll
negb
insb
mov
dec
or
fs
cmp
das
xor
and
xchg
notl
and
stos
hlt
jmp
xor
shlb
push
push
gs
xchg
jo
scas
lret
iret
ljmp
cld
pop
sbb
ds
inc
xor
xchg
cmpsl
add
cli
scas
xor
inc
dec
test
lcall
cmp
cmpsb
dec
push
rorl
test
and
and
cmc
sahf
stc
leave
push
test
sub
arpl
ficoms
mov
mov
adc
sub
inc
xchg
test
cmp
mov
clc
push
in
mov
cmp
mov
into
icebp
out
cli
mov
ljmp
test
add
jmp
std
outsb
lock
sarb
in
sbb
or
pop
jae
loope
loopne
movsb
setbe
cmpsl
loope
imul
and
shll
mov
jge
dec
dec
push
arpl
insb
jae
push
mov
hlt
leave
jns
mov
lret
scas
inc
popf
out
mov
dec
sub
xor
adcl
add
hlt
loope
xchg
outsl
xor
out
dec
mov
and
sub
xor
rcrb
or
mov
jno
sub
mov
shrl
ret
pop
pop
sti
fadds
cmpb
fwait
std
mov
mov
out
mov
out
mov
pusha
int
loop
inc
popf
in
push
in
jne
pop
push
subb
or
lods
cli
push
adc
nop
jbe
fs
adc
mov
xchg
lahf
mov
mov
push
popa
cmpsl
pop
pushf
jmp
pop
adc
mov
sti
xor
lea
pop
fnstcw
cmp
pop
shll
je
loopne
dec
movl
sub
lret
mov
cmpsb
pop
add
lcall
pusha
push
hlt
push
repnz
or
leave
imul
push
mov
dec
cli
es
cli
xor
jo
into
jae
xchg
stos
mov
pop
inc
fs
lds
imul
rorb
bound
mov
inc
imul
enter
add
and
mov
stc
addl
nop
in
clc
mov
mov
or
xchg
mov
cmpsb
dec
cmp
pop
loopne
inc
push
repz
imul
imull
sbb
xchg
inc
dec
aad
ret
ljmp
imul
mov
sbb
cmp
test
in
int3
aad
lea
jle
sub
movsl
mov
jmp
movsb
ja
lds
push
push
into
call
pusha
push
jnp
jno
dec
cmp
sbbl
sti
pop
dec
rcr
inc
test
xor
stos
inc
jne
jg
cld
dec
int
add
push
cmp
nop
jle
clc
mov
and
mov
popf
out
decb
popf
je
pop
jb
mov
mov
mov
dec
adc
mov
popf
insb
xchg
jg
sbb
xchg
add
sbbl
push
int
pop
jecxz
xlat
mov
dec
out
repz
movsl
mov
inc
push
dec
and
les
mov
inc
testl
mov
aaa
mov
sbbl
mov
mov
test
enter
xchg
mov
mov
cmc
cmp
testl
inc
cmp
aam
into
ret
xor
nop
jecxz
mov
std
jne
mov
mov
leave
cmpsb
xchg
dec
inc
outsl
xchg
mov
and
mov
fstpt
sbb
pop
push
adc
xchg
nop
xlat
fnsave
loope
outsb
xor
push
jnp
jns
cmp
adc
jne
pop
movsl
pushf
out
xchg
jg
clc
jl
test
adc
jb
test
lcall
push
mov
jl
xor
lea
sub
pop
xor
mov
std
incb
push
xchg
inc
rcrb
mov
lcall
loop
mov
sub
dec
adc
aad
adc
or
test
and
clc
ljmp
add
pop
adc
add
xor
mov
adc
mov
pushl
jge
ret
inc
pop
aam
es
test
jnp
dec
xor
mov
inc
dec
addl
adc
fldcw
xor
fimuls
jge
sbb
sbb
dec
or
cmp
ret
stc
fimull
push
push
adc
lods
mov
jnp
loope
mov
lcall
add
adc
ret
mov
xchg
test
lods
xor
mov
ficompl
and
retw
out
jo
sub
imul
mov
mov
push
and
xor
or
sub
addl
bound
and
adcl
loop
pushf
adc
adc
pop
out
push
shl
cmp
andb
xchg
dec
jecxz
add
shll
jl
mov
mov
pushw
daa
cmc
je
dec
lret
lahf
neg
mov
inc
movsb
push
and
ds
daa
pop
mov
dec
test
inc
loope
xchg
xor
push
mov
dec
pop
push
imul
loopne
loope
cld
sub
imul
ficoml
push
lcall
out
aam
cmp
mov
cltd
mov
inc
jno
outsl
inc
rcrl
notb
aas
stos
inc
mov
sub
add
inc
mov
in
jg
and
cwtl
xchg
aad
in
cs
fldl
mov
call
imul
xchg
push
pop
mov
nop
cwtl
mov
call
cmp
repnz
and
and
cltd
imul
push
dec
jg
cmpb
arpl
lret
jns
and
outsl
imull
out
push
pop
pop
dec
test
mov
aaa
mov
sbb
jge
repnz
adc
inc
mov
in
push
das
cmp
adc
and
out
fldcw
lcall
fcomip
mov
jb
cmp
hlt
aaa
imul
hlt
enter
lods
pop
cmc
cmp
mov
mov
jge
jg
pop
xchg
les
fcmovu
push
mov
xor
push
cmp
inc
out
pminsw
cltd
sub
int3
cvtps2pi
jge
and
xor
mov
aas
push
pop
mov
push
mov
js
clc
shrl
out
and
lods
test
pop
inc
mov
adc
sbb
cld
push
sbb
sub
xlat
sarb
sub
clc
inc
inc
mov
or
rclb
fnstenv
out
pop
cmp
mov
or
imul
sub
adc
fsub
int
and
enter
and
inc
inc
jl
and
xlat
mov
in
insb
dec
fldcw
dec
add
jg
popa
pop
mov
test
lds
dec
cmc
dec
sti
jp
mov
jge
xor
add
dec
ja
lods
sti
xchg
cmpsl
dec
aad
fs
push
xchg
dec
sub
xlat
xchg
shll
or
ret
xchg
pop
cld
les
adc
pop
sti
movsb
cmpsl
arpl
or
rorb
mov
popa
test
and
ret
aam
hlt
lds
pushf
mov
cmp
inc
pop
lds
push
imul
clc
hlt
lods
fst
flds
xchg
out
sub
in
dec
cmp
scas
mov
ret
imul
in
cmp
shlb
fiadds
push
jo
push
and
push
inc
inc
rcll
mov
adc
je
or
js
loopne
push
dec
loope
lea
mov
jne
rcrb
xor
ret
fmuls
lods
out
fsubp
mov
leave
dec
push
in
in
sbb
adc
fcmovbe
push
dec
lret
mov
push
push
xor
notl
leave
test
mov
xchg
stos
lock
lcall
imul
ja
sub
clc
cmp
fwait
testb
xlat
add
xor
leave
iret
jge
dec
xor
push
add
xor
repz
sbb
movsl
mov
mov
hlt
repz
lock
mov
sub
out
out
std
mov
movsb
loopne
mov
mov
orb
adc
push
jae
ficoml
insl
dec
push
ret
add
xor
jno
repnz
push
enter
lret
sbb
jge
xchg
ja
repnz
int3
dec
rcl
dec
subl
movsb
fs
fnstenv
enter
push
mov
scas
add
xchg
in
jmp
arpl
into
insl
dec
inc
repz
jmp
fsubrs
mov
insl
push
aam
dec
pop
sti
stos
push
test
testl
enter
es
mov
enter
test
add
sub
xor
dec
cmpl
int3
out
dec
fwait
sub
enter
push
pop
movsl
loopne
addr16
lock
jle
gs
mov
int3
mov
add
xchg
push
adc
cltd
cmc
jne
fcom
icebp
cmpsb
push
std
test
ret
jns
cltd
inc
push
xchg
inc
jnp
xor
pop
shr
jbe
push
stos
test
sub
add
cmp
cmpsl
mov
clc
xlat
mov
inc
push
mov
and
cli
in
inc
insl
dec
iret
mov
cmc
inc
push
cld
lods
push
cmp
sub
mov
fisttpl
nop
dec
add
adc
ret
shll
push
jl
movsl
bound
mov
pop
xor
adc
cs
icebp
and
pop
loop
iret
pushf
mov
dec
shlb
lods
push
adc
mov
pop
cld
stos
xor
pop
jecxz
icebp
and
notb
add
icebp
cmp
call
sub
stc
orb
push
clc
sub
mov
in
push
pop
jmp
sbb
xchg
test
test
add
rorl
dec
inc
adc
fdivs
in
cld
jo
mov
xchg
imul
and
sbb
dec
pushf
xor
pusha
nop
aam
jns
in
push
mov
cs
test
out
or
sbb
loope
fisubrl
test
push
xorb
je
or
push
lock
lret
repz
add
pop
popf
arpl
mov
and
adc
push
addr16
and
test
cmp
sub
daa
adc
jbe
sub
std
sbb
pop
hlt
std
std
inc
or
push
xlat
in
or
aad
jp
lea
adc
jae
scas
pop
push
xchg
ds
mov
mov
sbb
jnp
adc
push
adc
out
mov
lret
jb
jno
pop
sbb
lahf
rcll
push
jnp
mov
mov
jno
pusha
in
push
je
adc
and
or
into
xlat
push
sub
cmpsb
xchg
testl
cmp
mov
clc
fsts
or
push
dec
jecxz
lock
inc
stos
outsl
mov
mov
adc
ss
int3
xchg
mov
xchg
test
xchg
std
test
out
pop
pop
xchg
in
int
lahf
idivb
pop
push
iret
fildl
xor
sarl
hlt
mov
sbb
add
sub
aam
inc
aam
xor
pop
loope
xor
mov
jecxz
xor
mov
pop
in
mov
dec
mov
cmp
mull
sub
scas
push
jl
mov
inc
jecxz
je
ret
in
jmp
js
add
sbb
lods
and
pop
insl
push
sbb
int3
enter
shl
popf
iret
or
sti
insb
jmp
aaa
xor
sub
aaa
rcl
jmp
xchg
mov
fisttpl
mov
xchg
jnp
mov
es
in
mov
stc
std
popl
mov
xchg
or
or
xchg
and
or
or
push
in
test
adc
pop
call
cmc
insb
insl
imul
in
jp
mov
sbb
lret
ficompl
fimuls
cmp
mov
inc
gs
inc
dec
add
jae
push
dec
cmc
jne
or
aaa
push
outsl
jb
aad
sub
inc
lret
pop
pavgw
stos
sahf
push
mov
lret
mov
mov
pop
addr16
mov
and
or
roll
cmc
mov
dec
jmp
cs
insl
lds
or
enter
sahf
loop
push
insb
movsl
enter
sbb
push
xor
pop
push
pop
mov
repz
negl
or
sahf
dec
pop
mov
es
test
imulb
je
add
pop
aam
push
cli
pop
mov
sti
pop
push
and
cmpsl
xchg
sti
lea
add
pop
lods
in
mov
mov
fbstp
jns
push
mov
sbb
aaa
pushf
and
mov
cmp
fwait
inc
mov
test
and
cmp
outsb
enter
and
hlt
pop
inc
mov
jecxz
lea
hlt
jo
es
ss
les
add
shll
mov
xlat
dec
pop
adc
sbb
push
or
xchg
or
jb
jecxz
das
sbbl
xor
fucomi
aaa
in
jmp
add
les
shll
xchg
adc
xchg
jne
mov
fisubl
sbb
arpl
loop
push
cmp
xchg
jl
push
mov
cmp
mov
fisubl
cmpsb
aaa
dec
jp
pop
mov
outsl
int
loop
xchg
pop
adc
mov
jg
add
mov
enter
int
fisttpll
leave
mov
mov
popf
cltd
dec
std
jl
jle
dec
mov
scas
mov
lret
mov
mov
outsb
pop
test
jo
out
mov
dec
ja
popa
lods
inc
popa
pop
rclb
bound
iret
pop
or
adc
fistl
cmp
jle
jbe
shrb
push
add
push
fwait
int3
xor
fistpll
cmp
push
inc
iret
mov
mov
jnp
and
daa
imul
add
fmul
loopne
shll
dec
jl
xchg
mov
inc
sarl
ljmp
lds
out
lret
stos
push
add
addr16
cltd
mov
jnp
jno
adc
mov
lds
popa
jns
leave
adc
out
pop
push
jecxz
cmpsl
insb
dec
or
jne
dec
lods
outsb
rcll
or
mov
fists
fisttpl
adc
loop
dec
sub
clc
mov
and
jo
or
mov
es
adc
ds
dec
mov
cmp
sete
test
inc
cmp
and
rcrl
stos
pop
scas
mov
xchg
lds
dec
jmp
mov
sbb
stos
movsb
or
mov
mov
loop
mov
push
xchg
sbb
adc
rorl
inc
fsts
movsb
out
sti
daa
push
xor
mov
xlat
inc
cs
inc
addr16
pop
dec
or
incb
dec
cmp
mov
enter
stos
jno
mov
pop
adc
enter
pop
push
xchg
xchg
int
xchg
cmp
sbb
xor
roll
xchg
mov
int3
andb
loopne
inc
mov
cltd
insl
push
jmp
divl
fucomip
fldl
cmp
stos
daa
xchg
lret
mov
mov
inc
dec
jae
les
cmp
cmp
in
mov
dec
jmp
ror
xor
add
shl
push
clc
jl
test
xor
cli
shrb
mov
in
daa
ret
leave
mov
push
sub
sub
fwait
xchg
adc
jecxz
pop
push
inc
jl
pcmpgtb
fwait
cmp
mov
fwait
xor
push
jae
cmp
dec
lret
ds
jecxz
sbb
mov
jns
push
mov
pop
sbb
inc
jb
mov
cmp
push
jae
pop
mov
es
cld
into
insb
pop
pop
and
test
outsl
mov
loop
add
push
imul
jb
push
xchg
mov
push
sub
in
jg
push
xor
inc
ret
inc
jne
nop
fidivs
adc
cmp
mov
cmpsl
adc
out
cmp
loope
push
dec
fdivs
xor
mov
mov
jmp
dec
stos
test
pushf
push
aaa
fdivs
and
insl
ljmp
imul
mov
aaa
and
call
pop
pop
lret
test
or
adc
aam
jge
mov
dec
cmp
test
or
jp
add
in
das
lahf
adc
push
mov
mov
push
aaa
xlat
xchg
js
push
cli
sub
xor
push
push
popf
insl
loopne
lods
test
add
add
sbb
fwait
push
pop
aas
test
sub
leave
flds
outsl
jge
adcb
adc
testl
out
cmpsb
mov
pop
mov
adc
mov
inc
outsb
push
dec
icebp
xchg
ljmp
in
lcall
pop
daa
dec
test
mov
stc
lods
shll
fsubs
sbb
jl
mov
xchg
or
sahf
lret
pop
daa
mov
inc
loopne
and
call
xor
mov
fldcw
xor
mov
scas
cmp
and
js
add
je
xor
shlb
test
aam
les
inc
and
adc
add
je
xor
shlb
test
aam
les
inc
insb
jb
bound
je
int3
xor
shrb
repnz
loop
xchg
hlt
and
hlt
mov
and
adc
add
xor
and
ret
xchg
loop
in
or
dec
sub
cmp
pop
push
dec
cmp
js
mov
fdiv
int3
cmpsl
mov
xchg
mov
ja
ja
push
dec
daa
cmp
sub
sbb
imul
fstl
lods
xchg
insb
pop
pop
dec
dec
ds
sub
sbb
or
cld
cld
iret
stos
mov
cli
lock
stc
sti
pop
xor
or
cmp
das
xchg
ret
xor
out
or
movups
xchg
xchg
xor
cwtl
dec
addr16
jl
ss
shl
enter
fiadds
cmp
fcmovu
sbb
fucomp
insb
ja
push
mov
loop
bswap
in
or
xchg
fisubrl
xor
repnz
sub
icebp
addr16
dec
fcompl
add
pop
in
roll
lahf
adc
sbb
dec
jmp
mov
ja
test
out
add
stc
shlb
xlat
int3
or
hlt
outsl
insb
xchg
fiaddl
mov
test
cld
or
cmp
cmpsl
cld
addr16
xchg
jae
jl
insb
inc
pop
inc
dec
aaa
cmp
sub
sbb
or
cld
out
in
into
int3
mov
pushf
mov
adc
adc
inc
jnp
pop
add
mov
cmc
mov
mov
jmp
out
bnd
and
imul
negl
ret
cmp
stc
xchg
fmuls
cmp
push
xor
push
aaa
sub
sbb
or
cld
imul
int3
cmpsl
mov
xchg
mov
ja
inc
pop
push
dec
daa
cmp
sub
sbb
or
cld
imul
int3
cmpsl
mov
xchg
mov
mov
push
xor
mov
leave
mov
clc
or
pop
inc
orb
cltd
mov
mov
js
aas
cmc
push
adc
nop
sub
cmc
loope
stc
cmp
fistps
xor
jo
repz
xlat
and
jmp
cmp
out
mov
cmpsl
fistpll
and
inc
lahf
outsb
int
adc
inc
push
idivb
pop
xor
jmp
mov
es
ss
adc
add
lahf
out
cltd
pop
adc
stos
adc
sbb
icebp
popa
inc
in
push
leave
leave
or
mov
popf
mov
xor
das
lahf
cmp
mov
mov
inc
inc
mov
or
mov
pop
int
xchg
sub
aas
dec
leave
xor
sbb
inc
sub
stos
mov
dec
mov
inc
ficoms
js
mov
inc
sub
sub
pop
sbb
out
repz
out
cmpsl
out
popa
xchg
mov
test
adc
cmp
das
sub
ja
test
or
incl
fidivrs
test
lret
les
cmp
jb
mov
orl
pop
in
sbb
mov
hlt
cmp
add
mov
mov
imul
xchg
cltd
xor
jae
lds
pop
loop
fistl
xchg
mov
or
sub
jno
xchg
mov
adc
mov
mov
add
push
inc
sub
ret
icebp
ds
idivb
cmp
or
inc
xchg
fldt
xor
fstps
lcall
dec
jmp
ja
push
shll
mov
or
cmp
or
xor
rcll
js
int
inc
lods
ffree
hlt
pushf
adc
add
or
outsl
jnp
inc
sbb
iret
loopne
sahf
jmp
fbstp
mov
sub
cmpsl
cld
jns
fcmovb
xchg
enter
repnz
xor
push
into
mov
pushf
loope
lods
sub
imul
add
es
add
sub
mov
and
mov
out
push
repz
ljmp
sbb
ficoms
aad
js
mov
mov
inc
outsb
mov
rorb
subb
jp
jge
lods
in
lods
in
fs
dec
mov
int
clc
popa
mov
in
mov
in
test
push
mov
int
adc
test
pop
mov
mov
int
cmp
leave
or
sbb
cli
xchg
sub
push
movsb
jb
mov
mov
stc
scas
mov
xor
sbb
outsl
sbb
sub
mov
jle
cmp
push
aad
jl
jno
jle
jecxz
fsubl
imul
lcall
jp
mov
adc
jns
lcall
and
fwait
lods
aaa
sub
cli
add
jp
leave
sti
in
push
clc
or
dec
mov
jae
xor
fdivrl
add
jb
icebp
mov
jb
outsb
rcrb
sbb
mov
lods
and
inc
mov
fiaddl
inc
inc
addr16
popa
jne
push
jo
out
and
mov
inc
stos
out
shlb
outsb
inc
mov
dec
js
lret
mov
repnz
popa
aaa
mov
shrb
jl
jno
mov
cmp
test
in
xchg
lods
loope
inc
sbb
imul
enter
inc
aaa
and
adc
fmuls
sub
cmp
sbb
mov
rorb
scas
cmp
mov
dec
or
outsl
testb
daa
jbe
dec
fcmovnbe
push
sub
hlt
jo
add
sub
ret
scas
fisttpl
out
jnp
jae
push
xchg
xlat
lods
sbb
pop
add
loope
shlb
ljmp
test
stos
pop
add
loop
out
test
jbe
fxtract
cmpsb
outsl
imul
jbe
pop
mov
and
pusha
add
imul
jo
lds
or
cmp
cld
notl
xor
cli
leave
outsb
test
std
xor
xor
cli
lock
jno
inc
dec
mov
add
lret
push
push
movq
mov
xchg
pop
mov
pusha
fmull
adc
lods
popf
xchg
psrlq
in
add
js
stc
sarl
and
push
out
inc
xchg
or
adc
mov
xchg
scas
mov
loop
movsl
jbe
or
mov
dec
testb
ficoms
dec
rcll
xchg
adc
or
je
lahf
dec
adc
or
mov
mov
mov
xor
adc
dec
cld
fcmovnb
repz
test
dec
decl
xchg
lret
in
outsl
xchg
or
or
filds
iret
cltd
cmpsl
in
fcoml
or
daa
push
mov
adc
adcl
imul
lds
inc
and
into
dec
les
nop
cmp
sub
out
addr16
out
xchg
lds
push
orb
lea
ds
ljmp
mov
subb
sbb
jecxz
arpl
dec
cmc
mov
mov
inc
adcl
adc
sbb
pop
pop
jg
fstl
push
cmp
mov
loope
fisubl
xchg
shrb
cmp
aam
cmp
mov
mov
sbb
pop
and
inc
sbb
xor
lea
bnd
mov
bound
cltd
cmp
inc
sub
xor
lods
divb
dec
adc
andl
add
int
cmp
cmpl
jge
dec
xor
lea
mov
inc
loope
dec
cmpsb
dec
mov
lahf
sub
add
movsl
mov
pop
jp
add
std
xor
fs
mov
jle
mov
call
push
or
jns
mov
or
push
sbb
cld
pop
fists
out
fbstp
pushf
fs
xor
aad
shll
or
xchg
insl
sbb
out
sbb
mov
pop
mov
mov
xchg
mov
int
inc
enter
sub
jl
testl
out
out
std
frstor
mov
sub
mov
cltd
test
jge
iret
mov
sub
mov
popf
enter
push
fidivrs
push
sub
and
pop
xchg
sbb
imul
xor
or
push
add
gs
fsubrs
rorl
xchg
shll
ret
pop
movsb
aas
xor
ljmp
dec
adc
sub
lods
stos
neg
mov
add
or
shlb
add
cmp
dec
addr16
fldl
push
nop
mov
lods
dec
adc
jmp
or
bound
jg
fisubrl
or
xor
jno
sbb
movsl
cmp
cmp
sbb
jl
xor
mov
dec
lods
xchg
hlt
bswap
inc
push
pop
pop
mov
mov
test
cmp
cs
mov
ret
inc
adc
push
jle
movsl
dec
cld
pushf
dec
movb
cmpsl
arpl
in
mov
add
or
mov
popf
xchg
enter
sbb
arpl
out
push
and
imul
inc
stos
inc
insb
fists
push
pop
pop
xchg
imul
cmp
mov
adc
sub
repnz
xchg
xor
les
outsl
fiaddl
imul
fdivs
xlat
push
pop
out
add
mov
fcmove
xlat
pop
sbb
jbe
mov
stos
test
inc
push
sub
icebp
pop
pop
fsubrl
cmc
sahf
addb
or
mov
stc
push
dec
mov
int
dec
jnp
sub
inc
repz
xor
pop
rclb
dec
lds
sub
mov
and
mov
int
lcall
lahf
enter
fs
repnz
repnz
jmp
andb
pop
sbb
insb
test
xor
sbb
mov
iret
pop
fs
adc
mov
or
std
mov
hlt
mov
mov
sub
fnstsw
sub
add
xor
and
jno
sub
js
cmc
addl
stc
mov
xor
mov
jmp
sbb
ret
sbb
or
aaa
call
or
mov
push
inc
subb
mov
mov
fisttpll
les
push
mov
add
xchg
fwait
ror
mov
or
xor
inc
pop
mov
push
push
xchg
out
ficoms
fstps
outsl
xchg
xor
xor
arpl
jmp
hlt
xchg
mov
fucomip
das
push
fs
js
sti
hlt
sub
jns
sbb
push
lods
repnz
int
sub
lret
sub
jp
adc
xor
movsl
dec
daa
aam
nop
xor
int
es
orl
ss
sarb
lods
in
push
in
mov
xchg
aam
jae
adc
out
shrl
cmpl
jno
imul
jne
daa
cli
jbe
dec
arpl
add
jg
aaa
rcrb
sub
fwait
adc
aam
movsl
dec
and
nop
and
popf
push
and
scas
xchg
iretw
and
mov
or
cld
das
pop
xchg
xor
fs
repz
out
mov
mov
sbb
in
jge
lods
aas
adc
fwait
inc
pusha
shll
pop
inc
imul
xchg
mov
dec
cli
xchg
mov
scas
ds
dec
inc
add
pop
xchg
ret
sbb
xchg
faddl
cltd
pop
mov
loope
js
adc
push
popf
sub
fnstsw
pop
add
mov
inc
shrb
ljmp
das
adc
lock
cmp
xor
pusha
xchg
and
pushf
mov
loope
mov
or
adc
mov
popa
pop
ret
fdivrl
lds
popa
dec
dec
xorl
int3
lock
mov
lods
ds
add
shrb
dec
inc
jb
and
scas
shl
insl
jns
outsl
aas
push
aaa
fmul
dec
fcomps
movsl
cmp
icebp
mov
popf
add
xchg
outsb
pop
jmp
incl
lea
adc
xchg
sahf
sbb
mov
iret
fnstsw
lret
mov
mov
xchg
clc
fistpl
pusha
dec
mov
enter
insb
pop
mov
pop
sbb
xor
mov
pop
or
or
bswap
adc
test
sbb
fidivrl
jae
push
mov
mov
mov
pop
mov
xchg
cwtl
fcoms
or
or
push
clc
ss
adc
cmp
and
test
out
subb
mov
call
add
dec
cmpsb
arpl
clc
inc
incl
movsl
lcall
mov
sbb
hlt
popf
add
sub
push
fisttpl
dec
ss
rorb
push
gs
sub
xchg
jle
pop
sub
aas
test
cmp
inc
xor
push
xchg
jmp
cld
inc
in
cmpsl
rolb
push
or
sub
xchg
xchg
test
xchg
lret
xor
fisttpll
inc
pop
imulb
insb
jnp
xor
inc
sti
add
cmp
mov
mov
divps
mov
stos
xchg
scas
dec
mov
mov
incb
xor
or
adc
xlat
in
test
mov
jl
lea
les
and
jg
mov
and
cmp
aad
xchg
sub
in
ljmp
push
add
adc
mov
decl
insl
xlat
shlb
sbb
sbb
enter
pop
xchg
lret
icebp
pop
loop
mov
push
aam
sbb
out
loopne
or
jmp
mov
adc
dec
mov
inc
dec
and
lock
pop
jbe
xor
rorl
ror
lret
jb
xor
or
js
cwtl
sbb
mov
xor
jle
cmc
out
mov
sarl
out
add
sti
out
pop
jecxz
repnz
mov
jae
jle
lods
pop
cltd
xchg
or
call
push
lret
pop
int3
clc
adcb
and
cmp
mov
mulb
sub
adc
sbb
xor
push
daa
test
call
std
push
icebp
leave
jbe
stos
das
or
xchg
mov
xor
shrl
aad
cmp
mov
inc
or
call
movsl
pusha
shl
stos
or
jb
xchg
cmc
add
pop
movsb
mov
shrl
adc
jle
ja
lea
xchg
cmp
pop
inc
lcall
sti
rolb
mov
or
int
mov
xchg
pop
dec
std
pop
xchg
mov
stos
fsubrs
adc
popa
cmp
hlt
clc
fs
fwait
int
and
pop
mov
or
imul
mov
imulb
repnz
cmp
in
ds
es
jge
xor
mov
ret
rorl
ja
fwait
in
xchg
or
push
pop
faddl
dec
loopne
cmp
and
mov
jae
mov
mov
pusha
sub
adc
inc
mov
sarl
add
ds
mov
jns
mov
sub
rcrl
jbe
inc
cli
fwait
mov
push
sbb
gs
inc
lcall
or
jae
negl
rcll
and
out
mov
jae
das
mov
xor
outsl
cli
jl
push
je
sbbb
rcrl
and
loopne
or
subb
mov
pop
xchg
jecxz
popa
ret
adc
sbb
cwtl
scas
test
imul
hlt
cltd
movsb
lds
dec
insl
push
mov
lcall
fdivrl
sarb
les
enter
rolb
mov
fsubl
jg
test
add
sbb
negl
fdivl
jmp
movsl
inc
xor
faddl
adcb
dec
xchg
mov
and
pop
ljmp
fnstenv
jne
mov
adc
xchg
inc
fldl
mov
mov
or
lret
sbb
insb
ds
loope
add
out
jne
test
das
bound
pop
orl
jne
xlat
lods
js
inc
rolb
mov
xor
mov
adc
fsubr
dec
sahf
jmp
dec
mov
ja
fcompl
xchg
aam
cmc
clc
pop
emms
fadds
mov
js
mov
mov
ljmp
cmc
jg
outsb
pop
xchg
cmpl
sub
pop
fs
mov
cltd
dec
jns
loop
sbb
addl
fnstsw
or
sbb
pop
arpl
or
inc
lret
aaa
lods
pusha
push
pop
gs
cmp
movsb
xlat
and
mov
in
cmp
jmp
jle
andb
xor
add
repz
push
push
xorl
sbb
shlb
divb
shrl
icebp
jmp
inc
and
cmp
in
xor
and
scas
mov
cltd
jg
in
mov
pushaw
push
dec
fnstcw
cmc
rorb
jnp
shr
mov
xor
add
popf
mov
movsl
xchg
and
mov
fsubs
and
inc
cli
test
sub
xor
inc
out
cmpsb
aaa
pop
push
mov
inc
jg
and
add
add
mov
sbb
inc
or
inc
test
and
cmpsb
pop
fstps
pop
sub
add
test
jae
mov
stos
xlat
test
and
dec
and
adc
adc
xor
add
faddp
popa
stos
cmc
repz
xchg
mov
inc
daa
sub
fdiv
fsubrs
cs
jo
arpl
out
ljmp
inc
sbb
test
cmpsb
sbb
les
pop
enter
inc
push
test
sub
inc
inc
not
lret
inc
sub
jne
mov
mov
das
fs
push
xchg
in
inc
ds
sub
push
cltd
push
add
or
mov
sbb
jle
pop
or
adc
sbb
adcb
sbb
movsb
and
sbb
nop
or
add
cmp
sbb
dec
sahf
xchg
inc
pop
add
xchg
lods
out
mov
add
dec
aas
into
aas
mov
test
xor
cmp
ret
ljmp
mov
popf
push
cmc
mov
push
std
push
outsb
pop
mov
jns
push
lds
sub
dec
cli
cli
fcmovnbe
and
jo
std
add
insb
mov
mov
bound
lock
mov
cs
or
add
adc
pop
sbb
adc
jmp
in
outsb
js
jge
out
mov
xor
sbb
jo
mov
inc
insl
adc
and
in
ja
and
cmp
jecxz
dec
mov
cmp
popa
sub
and
or
lea
lods
fstpt
mov
test
in
rcrl
out
jb
xchg
ret
ds
aam
fbld
int
mov
loopne
mov
imull
scas
insl
pusha
fidivl
sub
mov
mov
movsl
pushf
and
pushl
mov
fisubrs
mov
repnz
adc
pop
jne
adc
test
xor
cmp
cli
xor
xchg
outsb
lret
dec
setbe
sarb
int
cs
shl
ja
jo
lods
daa
pop
mov
pushf
mov
into
lods
xchg
lock
nop
mov
rcrl
dec
lret
cmp
daa
arpl
es
movsl
and
movsl
mov
lods
sbb
jo
cld
into
adcb
je
mov
and
mov
push
mov
scas
adc
jp
xor
incb
cmc
mov
and
push
out
arpl
into
jae
lea
xchg
ljmp
sbbl
sub
mov
xchg
inc
mov
imul
out
call
jecxz
sahf
pusha
jno
mov
and
adc
std
adcl
pop
xor
stos
cwtl
mov
dec
add
pop
sbb
inc
jmp
and
scas
mov
in
and
and
addr16
xor
cmp
xchg
pop
and
jno
jp
ljmp
fisubl
pop
mov
xchg
sub
test
repz
into
sbb
cmp
cmpsb
std
jns
cmpsl
out
in
loopne
cmpb
fisubrs
sbb
add
fwait
pushf
repz
mov
pop
mov
in
jl
jb
mov
xor
sbb
lea
shlb
adc
sub
sahf
cmp
adc
inc
dec
leave
push
inc
xchg
push
and
out
and
xchg
push
push
add
ficomps
scas
mov
shrl
adcb
jnp
stc
iret
jmp
bound
jp
add
jle
in
fistpl
sti
jae
pusha
adc
lahf
ret
paddw
mov
mov
or
sub
adc
jns
inc
cwtl
aad
jle
cmpsl
inc
push
cmpsl
lea
or
or
inc
cmp
pop
mov
stc
movsl
mov
sbb
jno
adc
leave
loopne
xor
xchg
insl
rcll
mov
leave
out
cld
int
shll
ss
mov
jp
nop
mov
idiv
lcall
sbb
and
push
pop
test
fwait
mov
jmp
ljmp
inc
loop
cpuid
lret
inc
push
clc
cltd
inc
or
insb
cmp
jecxz
popa
or
fcomp
int3
add
push
sbb
jmp
mov
fstpt
lahf
jnp
pop
dec
leave
xchg
xchg
jp
sti
push
sti
je
xor
xchg
mov
push
dec
mov
pop
mov
sub
ds
test
leave
mov
pop
shlb
stc
dec
dec
mov
lret
test
mov
sub
xchg
adc
int3
adc
cmp
nop
mov
xchg
jl
push
loop
aaa
sbbb
xchg
pop
xorb
das
cmc
jae,pt
and
fwait
cwtl
jge
cmp
xchg
add
insb
or
jp
sarl
outsb
jb
fiadds
mov
mov
push
mov
movsb
jb
mov
sbb
push
mov
scas
daa
gs
je
pop
mulb
xchg
cmp
cmp
scas
in
jbe
add
add
and
orb
mov
rorl
enter
cmc
lea
inc
hlt
dec
inc
insb
std
pop
push
dec
daa
cmp
sub
sbb
or
cld
imul
int3
cmpsl
mov
xchg
mov
ja
inc
pop
push
dec
daa
cmp
sub
sbb
or
cld
imul
int3
cmpsl
mov
xchg
mov
ja
inc
pop
push
dec
daa
cmp
sub
sbb
or
cld
imul
ret
int3
cmpsl
mov
cmpsb
mov
inc
insb
jno
push
dec
daa
cmp
sub
sbb
int3
sbb
or
mov
js
push
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
sti
data16
push
adc
ret
sbbl
jb
cli
lds
add
push
pop
add
add
add
inc
add
add
add
add
add
add
addb
add
add
dec
add
add
lods
add
add
add
jnp
addl
inc
add
add
add
add
add
add
pop
add
jne
inc
add
add
add
add
add
add
addl
add
add
add
testl
mov
enter
sub
dec
add
add
add
bound
mov
add
ljmp
add
add
add
add
add
add
add
jns
add
rolb
add
add
inc
add
add
add
push
add
add
add
xlat
add
add
add
add
add
add
add
add
add
add
pop
add
sbb
add
push
add
add
add
add
add
sub
mov
sub
dec
add
sbb
roll
enter
jo
and
ja
jne
adc
in
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
and
add
add
inc
add
add
add
push
add
add
add
add
add
add
sahf
add
ret
add
mov
push
add
add
add
add
enter
pop
add
add
add
add
sbb
sahf
add
add
add
add
add
clc
add
add
add
rolb
or
add
fiaddl
sub
pop
add
add
add
dec
add
add
bound
push
add
add
add
add
push
movsl
add
add
mov
add
add
add
add
testl
inc
add
add
sub
insl
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
mov
xchg
add
add
pop
add
inc
add
add
mov
fiadds
jno
and
add
jno
in
add
add
aad
sahf
add
add
add
add
add
add
add
add
add
inc
add
sub
ret
add
adc
adc
jno
xor
in
add
mov
add
add
add
add
add
dec
add
imul
jno
scas
add
add
add
add
scas
add
add
add
add
or
add
add
add
add
add
add
add
add
push
add
add
add
add
popl
sub
ret
add
add
add
add
cmp
mov
add
add
add
add
add
add
ja
testl
jnp
roll
insl
add
rolb
add
mov
inc
add
add
add
dec
add
add
add
sti
add
rolb
add
sub
add
add
ljmp
add
add
pop
add
add
xor
add
out
sahf
add
add
add
add
add
add
add
sbb
add
add
add
sbb
add
add
add
sar
fs
rcrl
repnz
mov
sti
and
xor
aaa
insb
jns
push
sub
mov
and
cmc
repz
push
mov
ret
sbb
inc
popf
jmp
rorb
or
nop
jb
push
fsubrs
push
test
inc
cld
jns
mov
pushf
mov
adc
popa
aad
loop
sub
test
popa
and
iret
movsb
add
lods
push
loop
push
jo
cmpsl
dec
inc
repz
mov
into
push
adc
and
cmp
mov
inc
dec
xchg
and
or
add
test
mov
shl
dec
dec
femms
mov
push
test
sub
daa
add
pop
pop
movsb
sub
inc
mov
sub
xchg
call
int
or
lea
imull
hlt
fcomps
cmpsb
xchg
aas
nop
mov
or
sub
sub
fnstcw
cmp
and
mov
sti
dec
adc
jne
lds
or
jg
mov
lahf
sub
jecxz
outsl
iret
xor
popa
jmp
das
push
adc
xor
jno
lcall
or
movsb
lods
loope
ss
ret
add
mov
sbb
lret
mov
add
push
jo
mov
aaa
sti
push
mov
and
gs
push
inc
xchg
or
jno
movsl
outsl
bound
inc
mov
or
mov
push
test
lret
inc
push
int3
test
inc
xchg
popf
add
inc
add
add
adc
lods
sbb
mov
fdivrl
xor
mov
leave
das
adc
jnp
add
iret
ss
fnstenv
sub
xchg
mov
cmp
lods
test
nop
mov
movsb
xor
mov
and
imul
imul
js
test
adc
mov
test
jl
add
sahf
shl
lods
inc
adcl
loop
xchg
popa
jmp
jl
xor
in
jne
cmpsl
fisubrl
xlat
sahf
cmovs
fisubl
push
jle
imul
pop
fwait
adc
mov
cmp
lock
push
mov
insl
pop
inc
imul
fwait
jo
movsl
fs
pop
cmp
stos
xchg
stos
mov
mov
or
into
inc
icebp
leave
ret
mov
sub
pminub
mov
std
aaa
xor
cmpb
lahf
js
xchg
add
xor
scas
mov
push
lret
shll
push
push
add
mov
adc
mov
mov
cltd
insl
into
dec
out
mov
rcr
hlt
popa
bound
xchg
ret
enter
fwait
imul
bound
roll
lods
jns
jns
loopne
dec
sbb
cmpsl
bound
sti
add
add
add
add
rolb
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
repnz
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
repnz
repnz
mov
repnz
lods
repnz
movsb
repnz
pushf
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
repnz
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
repz
mov
repz
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
hlt
add
cwtl
hlt
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
pop
add
pushf
pop
add
xchg
pop
add
mov
add
test
add
jl
add
je
add
insb
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rclb
add
fcoml
add
lock
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
sbb
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
sbb
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
sbb
add
add
js
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
