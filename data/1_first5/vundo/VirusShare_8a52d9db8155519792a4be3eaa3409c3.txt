xchg
lret
in
idiv
ljmp
pop
jge
pop
inc
push
sub
mov
adc
gs
xchg
lret
in
adc
les
ds
in
add
mov
add
mov
pop
pop
jge
jg
pop
test
jmp
inc
leave
aad
outsb
mov
stos
shl
xlat
pop
imul
outsb
push
loope
fnsave
lret
jae
sub
jb
in
pop
inc
jo
movzbl
lret
repnz
int
ret
decl
adc
sbb
je
out
outsb
mov
jne
adc
jmp
jne
imul
push
or
jmp
fisubrs
jae
pcmpeqw
or
adc
push
fucomip
out
adc
adc
and
insl
push
jmp
pop
jmp
jmp
and
dec
outsb
out
cmp
jne
adc
pop
fcmovnu
enter
pusha
add
lea
shll
imul
lea
fdivl
jge
negl
jae
jmp
ja
into
mov
cmp
call
adc
xchg
jbe
aaa
ljmp
and
lds
cmp
xor
cmp
in
in
fsubr
ja
loope
ret
and
pop
iret
cmp
pop
test
data16
in
idivl
adcb
and
insl
mov
sub
xor
cmp
add
ret
adc
jo
or
ret
ljmp
aas
cli
push
outsl
imul
aaa
xor
out
adc
outsl
aaa
fsubr
je
mov
fistps
clc
into
and
jg
mov
mov
outsl
jmp
inc
adc
out
jmp
or
ret
jle
jmp
adc
inc
push
mov
outsl
mov
movsl
repnz
jbe
cmp
inc
fldcw
fidivs
xor
push
jmp
fistpl
sbb
jmp
xor
sbb
adc
adc
add
mov
adc
xlat
in
xor
adc
outsl
cmp
test
lret
add
pop
pop
dec
popa
or
push
mov
or
out
xchg
lock
daa
clc
jle
add
jbe
sbb
xlat
mov
js
jo
dec
clc
mov
push
mov
cwtl
bound
add
sub
xlat
lods
loop
mov
out
divl
rcr
js
lret
xor
outsb
inc
movsb
arpl
push
adc
sub
push
loope
je
add
xor
mov
mov
and
dec
cmp
clc
mov
pop
jns
sub
aaa
ret
in
xlat
aaa
xor
loope
js
idiv
mov
jns
insl
adc
inc
fwait
and
or
jnp
adc
stc
push
sahf
jo
mov
in
and
push
je
sti
or
scas
push
daa
jge
xor
cmp
push
adc
leave
and
jns
add
xlat
xor
repz
xchg
adc
mov
adc
or
and
fiadds
into
fsubrl
inc
cmp
pop
adc
imul
out
push
std
adc
pop
insb
pop
adc
fstpt
stos
xchg
pop
test
negb
sub
adc
mov
arpl
out
lea
push
sbb
idivl
jno
test
in
arpl
daa
jne
lock
out
mov
int
out
sarl
out
push
insl
xchg
sti
mov
jp,pt
arpl
jge
jp
mov
mov
pop
add
pop
dec
xchg
out
pushf
or
out
mov
jnp
or
inc
pop
fucomip
jae
dec
mov
arpl
mov
jmp
push
sub
mov
jae
fs
sbb
cmp
fsubrp
jo
jno
stc
test
jnp
cmp
mov
sarb
sbb
xor
pop
inc
xchg
cmp
js
les
repz
lods
jge
das
gs
jne
sbb
jmp
mov
sub
jnp
loopne
lock
in
sbb
xlat
mov
idivb
mov
xor
iret
inc
sti
mov
mov
mov
packsswb
cmp
sti
mov
popf
pop
lock
xor
xchg
mov
sbb
fwait
sbb
pop
shll
mov
fstpt
push
fucomip
icebp
add
pop
in
pop
sti
push
lock
cmp
sbb
push
outsl
xor
fmul
push
aaa
jp
and
push
outsl
idivl
movsl
jge
pop
sbb
icebp
sbb
pop
mov
jnp
icebp
sub
sbb
inc
imull
lock
into
xor
std
je
decl
xchg
mov
ja
call
sbb
sbb
test
add
outsl
je
nop
sbb
fwait
sbb
mov
mulb
enter
stos
inc
lods
cmp
jge
mov
sub
lods
out
fidivs
xlat
sbb
xor
cs
jge
or
jge
xor
jle,pt
adc
xor
sbb
fcomp
bound
sbb
push
sbb
daa
in
decb
jle
fsts
repnz
xor
fmull
push
iret
out
lods
jnp
push
jmp
repnz
imul
std
jbe
bnd
bnd
or
icebp
scas
ja
dec
pop
and
sbb
sbb
aad
outsb
insb
jge
ds
sbb
jno
mov
je
out
adc
mov
into
adc
pop
enter
aaa
mov
sbb
or
in
sarb
loope
jle
push
mov
sbb
je
mov
sti
test
jg
je
jmp
sbb
mov
in
or
sub
es
sub
sbb
ret
div
les
aas
jg
push
jo
push
jnp
cmp
dec
testb
subb
outsl
mov
dec
icebp
rcrl
insb
or
addr16
or
sbb
mov
mov
test
repz
xchg
test
xchg
mov
push
repz
js
and
repz
mov
ss
or
std
mov
push
dec
mov
aas
sti
das
repz
icebp
or
mov
jno
cmp
mov
lret
scas
and
push
push
jnp
jae
and
lcall
mov
dec
adc
outsl
loopne
jg
inc
sbb
fs
jnp
fdivrp
adc
inc
lcall
sbb
mov
sbb
sub
pop
adc
fsubr
fwait
int3
fcmovne
sub
test
jp
in
sbb
sbb
sbb
or
push
imul
and
fbstp
popa
sbb
outsl
sub
mov
hlt
lea
push
dec
call
xchg
sbb
jbe
mov
subl
rcrl
inc
loop
sbb
es
push
faddl
imul
daa
sbb
andl
clc
adc
and
or
outsb
popl
add
aad
xor
or
cmc
mov
test
mov
insl
mov
hlt
hlt
adc
cmp
divl
cmc
filds
cmc
sbb
fistpl
sbb
js
xchg
push
sbb
adc
adc
popa
std
data16
imulb
shl
bound
subl
ret
jnp
fiaddl
jge
out
repz
sbb
pop
mov
and
push
test
negb
mov
and
mov
adc
xchg
push
inc
add
inc
cmp
in
in
mov
pop
fwait
push
sbb
out
subb
arpl
shl
jge
sbb
mov
push
xchg
imul
adc
stos
lret
mov
pop
in
jae
jge
pop
loopne
mov
inc
pop
aaa
movsb
por
call
jnp
clc
outsl
lea
repnz
stos
in
or
scas
mov
orl
mov
and
das
popf
sbb
mov
xorl
and
push
out
call
mov
arpl
pop
push
testl
adc
dec
push
clc
or
and
pop
cmp
push
cmp
clc
fwait
out
jmp
push
pop
pop
add
pop
int3
jbe
mov
insl
bound
clc
push
sub
push
fisubrl
adc
icebp
or
xchg
out
int3
dec
popa
sbb
mov
xor
or
outsl
and
mov
aad
push
push
mov
adc
dec
lret
test
jbe
push
imul
les
int
pusha
fisubrs
in
add
and
outsl
push
mov
jg
pop
cli
fsubrl
pop
cmp
cmp
ljmp
inc
mov
dec
fstpl
and
add
mov
cmpsl
cmp
jbe
cs
add
or
test
frstor
orb
xorl
leave
insl
and
dec
stc
scas
out
or
es
xlat
cmp
xor
sbb
cmc
and
imul
xor
addr16
push
xlat
lahf
andb
fsubr
imul
test
dec
adc
fistpll
pop
je
and
mov
xlat
xchg
push
adc
inc
sbb
sub
pop
lock
test
pop
sbb
add
ds
cmp
int3
test
arpl
xor
daa
xor
stos
in
lock
mov
and
sbb
cli
daa
lods
out
test
add
pop
dec
cld
lds
fdivp
cli
fcoml
into
sbb
cmpsb
std
dec
out
sbb
lcall
adc
mov
sahf
or
or
insb
ja
mov
cli
mov
push
or
mov
inc
and
rolb
adc
inc
clc
cmp
in
mov
int
add
xlat
outsb
arpl
int
add
movsb
and
fnstsw
or
sub
dec
mov
xor
adc
and
xor
clc
les
mov
lret
mov
test
stc
and
in
testl
mov
frstor
and
and
push
xchg
data16
out
cmp
in
and
xor
sbb
aaa
jno
mov
xchg
sarl
xchg
xlat
inc
and
outsl
idiv
in
jl
jge
and
mov
repnz
idivl
xchg
mov
jge
int
aam
sbb
sti
mov
pop
jle
testl
add
inc
jle
and
mov
int
fsubs
in
gs
pop
cld
fsts
sub
dec
mov
ret
push
and
test
movsl
and
shlb
jno
or
ja
lods
daa
jecxz
lahf
mov
push
out
fcmovnu
lods
je
jb
cld
ss
stos
fs
cld
shll
xor
fdivrl
mov
xchg
mov
rcrl
pop
mov
xlat
mov
sbb
idiv
jbe
mov
jae
and
mov
sbb
std
mov
xchg
sbb
out
inc
mov
js
adc
pushf
std
lcall
mov
jp
jg
and
mov
fwait
insl
adc
sbb
imul
push
mov
xor
and
xchg
mov
das
js
out
or
ss
arpl
inc
jb
out
ret
push
jae
fmuls
push
adc
test
push
ljmp
push
add
add
adcb
or
shlb
mov
and
fucomip
fwait
dec
and
sarb
cmp
jbe
js
loop
mov
in
dec
jbe
in
lret
inc
fsubrs
fstp
movsb
out
in
push
outsb
dec
sub
sub
js
icebp
cmp
mov
imul
daa
daa
jae
pop
in
scas
xchg
mov
jae
mov
mov
iret
jmp
jae
daa
push
or
jge
les
add
add
or
mov
inc
jle
mov
sti
in
decl
call
jnp
jnp
lds
cmp
out
fisttps
ret
lock
fucomip
jnp
adc
aad
push
jb
lcall
cmpb
je
incl
xchg
ss
rorb
mov
dec
mov
mov
jle
cmp
and
inc
mov
add
pop
cmc
daa
ljmp
fs
mov
gs
cltd
adc
lahf
pop
fcmovne
fcomi
jmp
add
int
jbe
sub
pop
insb
stc
mov
push
sub
mov
insb
ret
dec
mov
fdivr
and
sub
jge
insb
add
push
sub
sub
jl
cmp
mov
add
sub
sub
out
xchg
sub
aas
outsb
adc
js
mov
mov
je
xor
add
sub
sti
pop
jae
jne
fimuls
pop
outsb
cmp
or
sub
and
mov
and
sbb
sub
pop
pop
lea
int
add
add
inc
scas
add
daa
cmp
push
adc
imul
push
sub
aaa
in
mov
mov
stc
jo
fildl
push
or
out
ret
mov
cli
adc
jecxz
and
sbb
stc
mov
inc
arpl
inc
inc
add
add
sub
out
cmpsb
mov
xchg
inc
push
pushl
add
fsubs
sub
push
mov
xchg
mov
sub
adc
stos
cmpsl
out
insb
adc
cmpsb
ficoml
mov
ret
sub
mov
mov
add
call
mov
mov
adc
cld
mov
daa
inc
add
jmp
mov
test
adc
sub
pop
les
sti
les
rclb
dec
lret
fmull
sbb
inc
out
sahf
mov
xchg
outsl
add
fwait
mov
movsb
cmp
or
fcomip
fstpt
and
add
fwait
mov
jbe
mov
sub
fwait
jb
pop
ss
jbe
add
sub
vpmacssdqh
or
adc
fldl
mov
jae
jmp
xchg
sahf
hlt
jbe
add
fidivrl
or
aas
mov
mov
iret
adc
push
ret
wrmsr
je
pop
fstp
negb
int3
pop
scas
rorl
cld
add
loop
mov
sub
ret
mul
pop
mov
insl
mov
xchg
fidivrl
add
pop
or
nop
xchg
lahf
add
jae
mov
jge
or
sub
push
sub
push
mov
inc
mov
fsts
sub
push
imul
je
fcomps
aad
jle
nop
in
out
sbb
orl
fabs
fwait
call
or
popf
ja
out
jge
xchg
sbb
add
das
xchg
pusha
idivb
add
aad
pop
push
repnz
mov
or
stos
fstpl
mov
out
cmc
xchg
push
insb
es
add
std
cwtl
cmp
nop
mov
xchg
xchg
adc
push
jbe
push
sub
cmp
jnp
iret
mov
or
testb
add
mov
aam
mov
sbb
adc
sub
sti
pop
jge
idivl
xchg
mov
in
insl
xchg
mov
jmp
cmp
pop
push
push
sbb
sub
mov
lds
or
sbb
push
lods
jae
sbb
push
arpl
jmp
std
cmp
in
sub
pop
daa
add
fstp
lea
ret
filds
xchg
test
aad
xchg
mov
fistpll
add
mov
mov
push
dec
pop
in
leave
dec
hlt
popa
xchg
pushl
xchg
insl
lds
jbe
sbb
push
int
sti
mov
add
xor
je
sbb
sbb
dec
dec
xchg
dec
scas
jnp
or
xor
in
jge
push
xor
pop
mov
or
out
pop
bound
in
mov
fisttps
add
or
xorl
repz
push
jge
test
inc
cmp
fildll
push
xlat
and
jl
pop
imull
push
pop
cmc
clc
cli
into
decl
out
popa
hlt
das
loope
out
insl
jbe
dec
out
pop
jg
xlat
sbb
mov
js
add
xchg
and
ds
dec
repnz
scas
jge
push
cmp
xor
cmp
push
lds
daa
addr16
mov
xor
das
in
push
jl
mov
mov
out
or
gs
sub
adc
xor
pop
aaa
jmp
jne
or
or
popa
xor
pusha
sbb
and
jae
jnp
pop
mov
fcom
xchg
fists
and
hlt
hlt
popa
adc
lock
or
pop
divl
sub
xchg
fsubr
cmp
cmp
or
xchg
decl
fsincos
sahf
rclb
mov
lock
outsl
ret
int
or
and
sbb
fstp
xchg
sahf
decb
xor
bound
jne
imul
mov
sub
add
mov
test
xor
imul
lods
jne
push
adc
out
cmp
cmc
xor
xor
pusha
push
gs
jb
mov
pop
mov
mov
pop
xchg
add
fisttpll
loop
adc
aas
stos
test
loop
pop
xchg
dec
mov
push
mov
mulb
ds
ljmp
adc
mov
cli
ljmp
bound
movl
fdivl
test
je
sbb
addr16
arpl
fwait
add
xchg
loop
lcall
inc
lods
or
mov
push
xor
adc
jb
fistl
sub
je
pop
aaa
sbb
idivl
add
xchg
or
add
add
xlat
sbb
dec
push
xchg
daa
xor
mov
xchg
jns
int
jae
std
push
sbb
jne
jp
or
arpl
xor
sub
xchg
jmp
xor
xchg
test
xchg
mov
aad
or
fwait
popa
fwait
mov
push
pushf
xor
mov
sub
loope
jg
mov
mov
or
cs
mov
int
fwait
adc
in
or
mov
adc
icebp
jl
loope
fdivrs
or
xor
outsl
or
jle
adc
mov
xor
xor
adc
or
test
decl
andl
or
dec
clc
mov
loopne
or
cwtl
fs
imull
cwtl
push
sti
mov
jnp
cwtl
or
or
adc
cwtl
cmp
mov
cwtl
sbb
jne
lahf
stc
dec
sub
xor
pushl
mov
negb
cltd
dec
and
in
xlat
je
cmc
mov
or
aas
jle
in
xor
orl
cmc
testl
fildl
pop
rorb
in
lds
xchg
mov
mov
gs
pop
mov
jecxz
fwait
or
xor
lahf
or
ja
xor
xor
pop
mulb
fistpl
add
in
or
lods
xorb
divl
mov
sbb
ss
insb
aaa
mov
fdiv
dec
jecxz
jmp
add
pop
dec
into
shlb
fwait
cmp
jbe
negl
xor
pusha
ret
mull
or
lcall
out
cmp
adc
pop
sub
jge
ret
fs
mov
repnz
fdivl
lcall
sahf
rcl
clc
repnz
mov
and
mov
adc
insb
idiv
fisubrs
mov
lcall
xlat
xor
mov
adc
lahf
jnp
xor
out
inc
fwait
jge
out
rcrl
fnsave
and
adc
jbe
sti
ss
lock
or
out
sti
mov
cmp
test
rcl
aaa
das
pop
fwait
sbb
sbb
popf
lcall
dec
notl
js
fwait
cmp
out
in
fsub
out
aaa
popa
push
call
cmp
adc
icebp
dec
pusha
jp
cmp
rorb
pop
aaa
jae
clc
dec
lock
mov
add
jp
lods
aaa
mov
aaa
dec
sub
lds
dec
xlat
insl
inc
clc
mov
cmpsb
jnp
jbe
out
sti
adc
adc
sub
fwait
xor
mov
mov
cwtl
pop
lea
stos
sbb
shll
dec
lcall
sub
dec
push
cmp
cmp
arpl
cmp
insl
jge
sarl
mov
adc
add
or
jbe
xchg
pop
xlat
jnp
xor
pushf
sub
pop
jo
fstpl
adc
fwait
in
jl
int
cmp
in
popa
xor
repnz
sbbl
sbb
dec
aam
adc
and
incb
push
adc
cld
adc
lahf
cmp
cmp
pop
add
inc
jno
and
fwait
cmp
xchg
pushf
outsb
sub
sub
in
sbb
pop
popf
outsb
cmp
cmp
orb
adc
ljmp
or
pop
pop
stc
cmp
xor
xor
pop
aaa
popa
insb
mov
mov
popf
sbb
mov
adc
dec
adc
xor
fisubl
mov
cld
jle
mov
sahf
or
adc
mov
mov
push
popf
mov
mov
adc
or
inc
or
imul
roll
imul
gs
negl
jnp
cmp
mov
sahf
mov
xchg
jge
int
adc
cmp
mov
adc
push
add
xlat
stos
cmp
cmp
rcrb
mov
xchg
pushl
mov
add
jge
pushw
xor
adc
addr16
push
lahf
sub
mov
pop
cmp
lahf
dec
cmp
pop
fisttpl
dec
add
pushf
pop
mov
repz
outsb
cmp
push
pushf
dec
lcall
xlat
jge
adc
cmp
jge
fbld
movsl
cmp
ss
cmp
mull
adc
jnp
jl,pt
or
ficompl
aam
push
out
jbe
call
and
in
mov
incl
pop
xor
outsb
pushf
push
cmp
imul
push
repnz
mov
aaa
adc
inc
addr16
xchg
fisttps
xor
js
hlt
repnz
aaa
jp
jmp
cmc
adc
dec
mov
xchg
mov
leave
or
repz
add
adc
mov
mov
cmp
inc
pop
rcrl
bound
mov
std
clc
or
adc
cmp
mov
or
aam
sub
cmp
mov
cmp
pop
mov
xor
mov
cmp
mov
jmp
push
cmovl
les
mov
loopne
cmp
sbb
mov
jge
in
adc
adcl
mov
out
xchg
cmp
mov
mov
rcll
xor
sbb
icebp
ss
popa
jae
in
test
in
xchg
mov
sbb
cli
sbb
pop
jbe
push
lds
mov
mov
xor
mov
jb
mov
xchg
cmp
push
cmp
push
js
aad
fstpt
adc
mov
scas
ds
mov
or
sbb
push
and
cld
mov
cmp
sub
mov
and
ss
je
mov
fwait
adc
out
in
jge
ffree
sub
jmp
sbb
cld
mov
push
mov
or
js
jge
ss
sbb
popa
jnp
dec
mov
push
push
and
jne
loopne
cmp
push
jae
insl
je
fisttpl
ret
xlat
aas
loopne
pusha
jmp
sbb
pop
and
mov
xchg
aas
or
inc
scas
movsl
mov
adc
jnp
mov
icebp
mov
mov
scas
lds
jae
arpl
cmc
mov
aas
daa
aas
add
push
loop
clc
dec
or
pop
jmp
jmp
aas
jg
or
push
mov
dec
mov
mov
and
inc
xor
xor
inc
lret
insl
ret
fdivrs
jb
inc
dec
es
movsb
pop
and
mov
shrb
ljmp
sbbl
add
add
add
sbb
lahf
xchg
inc
jbe
jle
xlat
add
mov
sub
movsl
push
rolb
mov
ja
adc
ja
les
pop
jl
mov
sbb
jne
jb
daa
cmp
je
mov
out
mov
movsb
mov
in
mov
movsl
daa
adc
sbb
mov
daa
sbb
movsb
pop
mov
sbb
add
mov
movsb
repnz
insb
negl
inc
add
jp
and
jle
cmpsl
shld
mov
inc
mov
mov
outsl
mull
xor
jl
add
rorb
push
je
jl
pop
addr16
aaa
outsb
sub
add
mov
andl
and
inc
or
sbb
push
push
add
cld
sbb
sub
inc
mov
push
cmp
jno
inc
idivl
jl
mov
aaa
imul
iret
addb
sub
rorl
add
lds
jecxz
imul
fcomps
inc
ja
in
ljmp
lret
pusha
cmpsb
daa
inc
xlat
sub
jl
add
sbb
hlt
mov
jge
sbb
and
ja
sbb
aas
xchg
out
sbb
inc
es
dec
gs
mov
inc
jmp
dec
mov
int3
push
jbe
aaa
mov
insl
xor
js
loope
cmpsb
out
sbb
enter
ds
movsl
inc
cltd
cmp
jns
cmpsl
or
lods
jge
arpl
pop
sbb
sbb
jp
icebp
int
fildl
mov
inc
sahf
shll
sbb
push
inc
mov
cmp
adc
popa
sub
and
data16
inc
jno
inc
daa
scas
ret
ret
outsb
mov
hlt
xchg
in
daa
ffree
addb
add
cmp
xchg
sbb
inc
dec
ret
xor
mov
xchg
call
outsb
pop
sbb
addb
or
jecxz
xchg
vmread
in
ljmp
sub
int
inc
jne
inc
incl
jae
mov
sti
sbb
sbb
adc
sub
jge
call
aaa
aas
inc
cmp
mov
mov
inc
aaa
mov
fbstp
and
sbb
dec
fcompl
pop
mov
and
xor
out
inc
xchg
cmp
fisubl
dec
jae
fdivl
js
jae
sbb
fistps
jae
xchg
imul
dec
sti
jle
ljmp
out
ficompl
out
mov
xchg
and
mov
sbb
mov
test
outsb
dec
add
test
shrl
xor
adc
mov
femms
fwait
adc
mov
test
adc
sub
jmp
orb
rolb
lcall
aam
cmpsb
push
sbb
stos
sbb
out
ret
outsl
test
mov
mov
inc
cmp
dec
or
push
push
clc
es
jno
je
popa
jnp
insb
or
sbb
and
stos
push
outsb
imull
subl
loop
xchg
lods
test
fwait
mov
aaa
test
out
inc
fwait
scas
lock
std
mov
je
push
sub
add
out
mov
mov
fstps
mov
jnp
in
lds
push
sbb
mov
stos
lcall
add
xchg
add
mov
pop
sub
xlat
push
gs
jbe
push
rcrb
pop
cltd
out
jnp
ss
movsl
pop
addr16
insb
bound
jecxz
fistpll
aam
adc
jle
and
inc
sub
mov
ss
jbe
inc
scas
jne
mov
inc
inc
fucomp
pop
jnp
dec
jmp
xlat
repnz
sbb
in
jge
aad
inc
add
or
adc
push
out
mov
and
ds
fists
dec
or
lods
ud2
adc
jno
inc
push
stos
movsl
and
ljmp
test
ret
clc
fstpt
mov
ja
lods
push
rcrb
shr
out
xchg
fdivr
mov
mov
stos
fisubs
int
adc
jl
and
out
packsswb
je
stos
test
cmp
and
jae
punpckldq
and
pop
loopne
lea
aaa
dec
or
and
inc
dec
and
mov
dec
xchg
sbb
inc
lahf
jp
mov
imull
dec
jmp
js
lds
or
cmp
daa
or
lahf
sti
popa
fmull
ds
testl
les
adc
out
lods
jns
arpl
loop
stc
cmp
and
lods
dec
jge
xor
daa
data16
stos
sbb
out
lods
mov
mov
mov
mov
and
fwait
fs
mov
jb
ja
imul
mov
inc
dec
sub
scas
add
jl
xor
decl
out
mull
scas
xor
mov
cmc
insl
pop
enter
and
mov
lods
arpl
push
or
test
out
jge
mov
decl
and
mov
mov
decl
lahf
jmp
and
shll
cmpl
cmp
jle
and
ds
scas
shlb
pop
push
sbb
in
in
out
jmp
mov
adc
sbb
dec
and
add
adc
dec
xor
arpl
loope
dec
adc
cwtl
scas
sbb
dec
cmp
fsubs
scas
ret
or
scas
gs
aam
scas
dec
loope
fs
sub
aam
xchg
mov
out
dec
and
push
idivl
pop
gs
fwait
mov
clc
fisubrs
scas
and
negl
dec
test
aad
lds
cmp
out
sbb
inc
scas
clc
icebp
dec
xlat
dec
fimuls
inc
and
sbb
jne
lock
clc
in
jae
pop
sub
mov
jle
adc
mov
movsl
mov
mov
shll
sbb
dec
les
aas
mov
lea
mov
cld
and
imul
or
xchg
dec
cmp
push
loop
outsl
and
arpl
pop
fdivp
sbb
pop
dec
inc
mov
sub
int3
sub
dec
sarl
and
dec
inc
imul
jp
pop
mov
dec
pop
je
rcll
popf
stos
popf
arpl
pop
out
ja,pn
push
aad
lea
or
mov
je
xlat
xor
fisttps
dec
iret
adc
dec
sti
and
psubsb
imul
mov
cltd
fstpt
mov
sub
inc
insb
in
or
jne
mov
dec
jl
lea
sbb
cmp
xor
and
mov
mov
dec
add
add
imul
jae
push
jecxz
mov
mov
mov
fwait
xchg
mov
cvtps2pd
jge
mov
and
es
adc
out
inc
decl
cmp
inc
je
mov
xchg
fwait
sub
das
ss
aaa
arpl
call
inc
cmp
in
and
push
cmpsl
ljmp
xchg
js
mov
add
mov
les
jne
sti
insl
mov
adcl
clc
fmul
push
mov
cmc
dec
cmp
fcmovnb
xchg
mov
sahf
es
enter
jmp
les
push
es
inc
or
es
dec
aam
cmp
outsl
jns
xor
dec
and
mov
dec
sub
adc
rcrb
xor
mov
lret
sbb
jbe
mov
fwait
jne
inc
je
daa
dec
lods
mov
fsubr
push
hlt
stos
mov
dec
pusha
nop
jno
jnp
fists
mov
push
adc
xchg
mov
test
in
sahf
mov
es
sub
daa
cmpsb
out
idiv
es
cmp
mov
sub
repz
jmp
enter
cmp
std
sbb
push
outsb
jne
out
xor
and
add
addb
fiadds
sbb
cmp
cmp
mov
lcall
imul
and
pop
into
sbb
fistps
enter
imul
repnz
cld
movb
add
dec
lcall
andl
xchg
mov
sbb
mov
mov
ljmp
xor
inc
push
inc
jle
jbe
sub
sub
dec
in
ret
mov
arpl
cli
pop
push
gs
push
or
in
js
jge
mov
dec
dec
out
fcmovnu
repz
mov
push
cwtl
sub
stos
mov
add
cmovns
cmp
sub
lcall
push
cmp
pop
arpl
xchg
ss
jns
push
in
jmp
adc
fwait
pop
push
mov
mulb
mov
pop
sub
inc
lea
mov
jne
scas
cwtl
jae
fcomip
outsl
jb
push
mov
adc
push
push
idivb
scas
std
adc
add
mov
adc
push
sub
sbb
out
in
mov
xchg
or
jge
loop
push
adc
mov
xor
sub
push
and
out
mov
sub
or
decl
cmp
aam
fiaddl
mov
sbb
add
dec
xchg
push
je
push
xlat
mov
jns
call
movsb
adc
lea
and
sub
cmp
and
ljmp
xchg
fisttps
ds
inc
inc
out
pop
repnz
jbe
dec
dec
sub
fidivl
adc
sub
mov
dec
mov
dec
out
adc
jg
es
adc
pop
stos
mov
je
push
jmp
bound
sub
pop
shrl
sbb
mov
std
sbbb
pop
push
iret
fildll
xchg
dec
mov
lods
adc
ja
shr
imull
push
pop
and
add
mov
jmp
sahf
adc
or
xchg
push
scas
xor
mov
xlat
add
testl
and
jo
rolb
push
adc
mov
mov
pop
xor
or
sbb
and
shrb
filds
pop
xor
or
mov
inc
stos
jae
push
xor
pop
scas
sbb
cmp
sub
leave
daa
mov
mov
or
jo
jne
mov
idivb
cmp
ret
sbb
xchg
inc
push
ret
dec
push
xor
scas
fdivrs
mov
pop
mov
sbb
jb
fsts
jmp
xorb
shll
sub
dec
push
std
mov
or
xchg
nop
adc
idivl
arpl
daa
sbb
inc
out
mov
push
mov
sub
test
xor
adc
pop
ljmp
xor
mov
stc
sti
and
adc
xchg
or
sbb
ss
mov
shlb
stc
mov
arpl
and
adc
adc
xchg
cvtps2pi
mov
loope
xchg
mov
mov
call
or
adc
push
pop
pop
sub
mov
or
fists
testl
in
divb
sahf
addr16
cmp
jle,pn
mov
push
arpl
push
and
sub
push
das
adc
inc
fcomip
mov
mov
cs
mov
out
add
lods
sub
xlat
xor
add
mov
movsb
dec
mov
int
mov
arpl
movl
lcall
mov
sbb
jmp
fildll
and
aaa
dec
mov
lahf
mov
insl
adc
ja
add
mov
xlat
icebp
push
popa
mull
addr16
into
push
mov
pop
push
stos
adc
mov
sahf
shl
outsb
sbb
mov
mov
mov
stos
loope
sarb
fwait
lods
add
xchg
das
daa
or
mov
mov
mov
jae
sbb
dec
push
xchg
pop
add
std
cli
cmpsb
xchg
push
xor
pop
das
cmp
push
sbb
cmc
mov
insl
das
push
movsl
das
pop
fbld
mov
pop
inc
imul
push
sarl
ret
dec
mov
ret
xchg
pusha
add
mov
pop
ss
scas
add
mov
sub
sahf
mov
cmp
out
xor
pop
mov
mov
mov
xor
xor
push
pop
fistpll
push
ljmp
out
test
xor
pop
popa
fs
add
out
js
aam
adc
fstpl
fwait
xor
or
or
inc
xlat
sbb
sbbb
xor
sbb
daa
test
pop
ss
pushl
cmp
pop
jb
pop
frstor
jae
adcb
pushf
xor
fists
lock
lahf
push
or
pop
or
xchg
scas
add
sbb
pop
xchg
aaa
test
lcall
adc
mov
out
in
dec
mov
pop
add
lock
mov
rdtsc
add
add
negl
sbb
sub
fimuls
xor
xor
aad
clc
lods
lret
mov
fbstp
xor
bound
pop
add
sub
jge
out
jae
orl
pop
icebp
sbb
fidivs
jbe
stc
pop
mov
cmpsl
cmp
pop
mov
xor
mulps
mov
inc
into
xor
jae
cmpsl
pop
and
insl
cmpsb
pop
incl
mov
dec
xchg
call
inc
clc
dec
inc
cmp
add
loope
pop
xchg
testb
sbb
or
xor
jno
arpl
adc
pop
fwait
aaa
mov
pop
movsb
paddusw
cmp
or
fisubl
jge
bswap
mov
inc
rolb
xlat
add
mov
inc
jge
pop
pop
or
xchg
mov
adc
test
jle
mov
mov
std
cmp
stos
int3
pop
mov
fucomi
pop
scas
fdivl
in
ds
mov
shlb
insb
outsl
xor
xor
or
xor
fstpl
pop
sbb
divb
pop
test
add
xor
fwait
sti
fisttpl
mov
inc
ret
mov
sti
lock
xor
lds
lret
sub
fiadds
fadds
jecxz
mov
jbe
sahf
pop
arpl
push
fists
push
movsl
ds
ds
pusha
idivl
mov
add
pushf
ja
lret
xchg
add
jl
dec
les
fistl
cmp
mov
idivl
cmp
cmp
loopne
pop
jne
dec
mov
rcrb
pop
add
in
mov
add
dec
xor
jp
out
sbb
inc
xor
pop
push
add
pop
stos
fimull
adc
inc
jl
enter
xlat
test
jge
mov
es
into
in
test
xor
cli
sahf
in
ss
xor
sub
sarl
enter
scas
xlat
rolb
sub
out
jae
fadd
popf
movsl
inc
stos
in
aaa
ds
out
fmul
rcr
adc
xor
jbe
pop
adc
xchg
or
test
mov
push
mov
popf
sbb
ret
rcrl
and
int3
call
pop
aaa
mov
shll
jnp
jbe
sub
push
push
shl
addl
jbe
and
bnd
pop
mov
mov
mov
pop
sbb
ret
test
jbe
outsl
pop
mov
dec
mov
shr
jmp
sti
bswap
jle
mov
mov
mov
stos
jnp
scas
out
das
fildl
mov
sub
jne
ds
fwait
lret
aaa
mov
cli
mov
and
mull
mov
addr16
shlb
push
outsl
cmp
pop
negl
dec
push
clc
xchg
cltd
sahf
push
je
push
pop
pop
das
ret
aaa
jae
in
dec
push
loope
popf
pop
mov
movsl
jecxz
ss
in
cmpsl
pop
add
ret
inc
pop
aaa
dec
insb
out
fldt
aaa
lret
ljmp
popa
inc
pop
mov
mov
jo
sbb
pusha
je
push
pop
aaa
sbbl
es
inc
cmp
cmp
and
les
pop
dec
jle
push
daa
jmp
jne
ret
pusha
inc
or
xor
ret
jge
ret
out
cmp
adc
les
cld
inc
js
add
xor
or
xchg
sbb
les
xor
add
sub
imul
pusha
stos
je
test
ss
sbb
popf
mov
jge
in
sbb
push
int
rclb
cmp
sub
popf
fimuls
mov
push
lret
aas
cli
pop
mov
cmp
xor
adc
fucomip
sarl
sbb
les
push
daa
das
sbb
cmp
cmp
out
pop
fisttpl
fisubrl
adcb
pop
or
dec
xchg
cmp
loopne
out
decl
fwait
cmp
incl
add
mov
sub
mov
jmp
add
add
push
add
add
jle
incl
mov
mov
jb
jbe
and
fldt
flds
sarl
xor
add
sti
decl
adc
cmp
add
roll
outsb
jg
decb
decb
mov
xor
mov
idiv
pop
roll
jae
repnz
data16
enter
fscale
push
jbe
add
push
jp
push
lock
dec
dec
xlat
lcall
jecxz
clc
sub
mov
cmp
and
add
dec
mov
sti
sti
mov
pop
push
jae
aaa
jb
ss
mov
and
add
add
outsl
pop
cmp
xor
mov
mov
dec
inc
ja
mov
push
adc
roll
mov
push
insl
imul
dec
in
mov
add
out
add
inc
ret
add
mov
in
add
mov
bound
pop
sti
inc
pop
pushl
or
bound
pop
inc
xchg
add
jae
push
fs
push
aam
mov
push
pop
sub
clc
dec
cmp
ja
aaa
inc
test
fdivrp
dec
mov
inc
ss
jno
mov
mov
das
fbstp
dec
and
ret
adc
jl
mov
jo
jb
addb
jge
test
clc
mov
push
shll
xor
mov
imul
add
inc
push
pop
jb
inc
mov
mov
cmp
nop
test
mov
mov
mov
pop
dec
test
lock
xor
loopne
lock
inc
ss
add
ss
out
push
push
mov
bound
outsl
leave
movsb
inc
dec
ss
out
imul
repz
mov
out
sub
insl
xor
add
jg
sarl
loope
clc
jmp
pushf
fadds
ja
fistps
ret
xor
ja
add
sub
inc
mov
ret
mov
aaa
outsl
mov
cmp
mov
xor
js
jg
cmp
mov
jmp
pushf
out
push
inc
xor
lods
std
in
cmc
mov
lret
ret
mov
dec
jae
xor
mov
mov
xchg
in
inc
mov
push
or
fadds
nop
inc
add
loopne
xlat
cs
clc
mov
add
je
inc
jmp
jae
pop
jnp
and
xchg
mov
faddl
jmp
or
outsb
pop
push
sbb
inc
dec
in
add
fsubrs
cltd
push
dec
dec
push
out
add
je
mov
enter
jmp
inc
outsl
jae
outsl
stos
lret
dec
adc
in
mov
jo
call
mov
or
fidivl
add
jge
inc
addr16
insl
lahf
inc
fdivrp
add
mov
bound
inc
mov
xor
fucom
in
xchg
jo
add
xor
jo
testb
push
inc
dec
push
pushf
ja
xchg
in
out
sub
xchg
mov
xor
js
xor
push
aaa
jle
sbb
in
outsb
cld
cli
inc
mov
sbb
popa
test
mov
inc
mov
pop
iret
cmp
xchg
imul
add
xchg
jg
jmp
inc
and
lahf
push
xor
or
or
or
inc
or
or
call
ljmp
test
adc
imul
fsubl
incl
inc
outsb
and
pop
fbld
and
sub
loop
pushw
and
pushl
xchg
inc
je
and
fimuls
or
cmpsl
int
sbb
adc
lcall
and
or
pop
stos
fwait
jle
adc
int3
lock
ljmp
mov
clc
mov
sbb
cltd
out
pop
mov
incl
xchg
xchg
fsubl
mov
adc
mov
incl
dec
add
inc
adc
adc
jmp
pushl
inc
adc
js
or
mov
filds
or
cmp
push
js
inc
addr16
clc
decl
mov
and
push
cmp
xor
call
jmp
call
stc
push
sbb
push
add
xor
incl
mov
rclb
and
jnp
call
pop
sub
jo
repnz
push
sbb
outsl
lock
inc
add
adc
sub
ret
cld
je
in
testb
or
adc
mov
fs
dec
jecxz
push
outsb
call
je
pusha
out
loop
adc
nop
dec
mov
sarl
xor
pop
ror
xchg
and
adc
mov
ds
mov
inc
xor
movsb
push
add
jb
repnz
notb
loop
fmull
mov
sub
fcomi
testb
je
inc
repz
xor
pop
shlb
outsb
repnz
push
and
or
jmp
mov
mov
mov
or
sbb
je
mov
loop
das
inc
add
call
andl
bound
es
lahf
push
imul
dec
add
leave
icebp
sub
adc
xchg
and
decl
adc
das
leave
imul
cli
int
adc
imul
and
test
outsl
incl
pop
push
ljmp
push
mov
mov
mov
aam
hlt
ljmp
lcall
addr16
fcomp
sub
out
cld
es
jg
sub
nop
in
lock
in
xchg
xor
cwtl
aas
rolb
popf
je,pt
je
rcrl
push
xor
lock
fisubl
je
daa
dec
idivb
xchg
mov
xor
or
loopne
fisttpl
inc
or
orb
call
mov
call
sub
mov
ud0
inc
jo
je
adc
add
xchg
je
sbb
icebp
jge
das
hlt
dec
pushf
pop
add
push
fisttpl
dec
das
out
aaa
aad
sbb
insl
cmp
inc
mov
inc
jmp
aam
iret
call
add
test
adc
mulb
js
dec
push
inc
mov
decl
adc
inc
rcrl
dec
xchg
fdivs
xor
push
sar
mov
mov
mov
inc
enter
mov
jl
push
cwtl
pop
inc
jae
icebp
fcmovnu
add
and
aas
cmove
xor
outsl
pop
clc
mov
insb
decb
xor
out
fidivs
jo
push
int
pop
mov
popf
and
je
add
inc
sbb
imul
je
or
mov
mov
gs
fs
sbb
jecxz
jmp
inc
inc
jg
push
jl
add
loop
add
jo
mov
adc
pop
clc
xchg
xchg
mov
inc
jo
adc
or
push
cmp
mov
movl
mov
scas
and
inc
inc
lea
sbb
and
rolb
xchg
test
jns
rcl
pop
dec
daa
fbstp
in
cmp
int3
sub
in
or
decl
sbb
or
call
sbb
shll
mov
mov
add
cmp
push
pop
sub
or
ljmp
or
ja
inc
fadds
sub
call
aad
jle
popa
cmp
mov
and
aaa
insl
cltd
mov
popa
push
jb
je
jge
outsl
jl
xorl
inc
mov
lock
fisubrl
cmp
push
inc
lds
or
popa
xchg
xor
and
sub
push
sub
icebp
sbb
mov
test
cmpsb
sahf
fldl
subb
idivb
mov
sub
fstl
or
iret
adc
and
add
insb
call
pop
or
jg
inc
pusha
adc
mov
and
icebp
dec
ljmp
mov
ret
cmp
and
lcall
popf
mov
cmp
lea
push
pop
push
hlt
shrl
outsl
mov
fsubr
pushf
leave
jle
adc
mov
push
incb
lret
pop
inc
fs
jb
lcall
repz
and
xchg
into
outsl
xor
or
inc
ja
mov
rcl
mov
arpl
aas
dec
and
gs
popw
adc
pushl
dec
into
xor
push
inc
push
call
sub
fsts
das
jge
outsl
pop
enter
push
je
cwtl
fsubrs
or
mov
sar
mov
lea
addl
xor
xchg
sub
data16
push
and
sub
pusha
adc
inc
lret
cmp
in
jmp
daa
dec
add
out
xor
pop
sub
adc
cmp
mov
sub
push
and
iret
sbb
jg
cmpb
ret
rorb
jmp
cwtl
jae
cli
or
pop
out
les
mov
mov
ljmp
std
jmp
pop
mov
or
rolb
hlt
or
sahf
sti
imulb
dec
mov
rorb
sbb
je
add
pop
add
leave
inc
ss
jge
nop
insb
and
test
lea
jbe
insl
adc
adc
jg
adc
repnz
or
sub
pop
stos
adc
sbb
mov
push
dec
icebp
inc
xor
ret
dec
decl
daa
and
jge
fiadds
sbb
dec
jmp
fisubl
dec
cmp
mov
jnp
adc
xchg
test
shll
adc
stos
push
ljmp
loopne
cld
fisttpl
adc
inc
inc
xchg
push
call
and
jnp
ljmp
in
sbb
adc
out
sub
or
push
js
gs
dec
inc
xchg
test
movsl
xchg
leave
jmp
mov
loope
loopne
icebp
ljmp
xor
xchg
jno
adc
sub
call
pop
jb
jmp
adc
xchg
call
cld
arpl
je
or
cmp
rcrb
stos
jnp
inc
or
adc
jmp
movsb
subl
mov
jbe
cmp
flds
testb
das
fs
enter
and
push
adc
dec
and
insl
xor
dec
int
aas
cwtl
lock
das
rorb
xlat
movb
mov
lock
dec
push
call
xchg
cs
push
push
loopne
scas
push
mov
aad
maxps
add
ja
notb
inc
sub
jmp
sub
int3
cwtl
jb
or
sbb
mov
push
movsb
jbe
push
adc
cld
lock
cmp
jg
mov
imul
nop
mov
aaa
push
js
call
and
je
dec
lea
pop
cmp
sbb
sbb
adc
cs
lods
int3
and
xchg
xchg
cltd
cmp
xor
pop
jg
adc
ljmp
add
rol
in
ret
cmp
arpl
sti
mov
out
pushf
push
add
cmpsb
rcl
or
fwait
mov
sarl
jl
sbb
mov
sbb
les
push
pop
xchg
inc
sahf
gs
adc
push
push
ds
ljmp
xchg
mov
and
push
hlt
inc
jecxz
repnz
les
bound
cmp
xorb
jg
push
ljmp
adc
mov
pop
mov
icebp
pop
mov
dec
pop
test
je
xor
incl
lock
cltd
je
lock
cmpsb
je
jge
test
push
jmp
mov
sub
mov
fimull
outsl
sbb
lods
lahf
xchg
aad
dec
jo
cmc
test
cwtl
les
push
jmp
outsl
pop
aaa
mov
arpl
in
or
je
loope
xchg
mov
mov
popa
inc
push
rolb
mov
sbb
mov
mov
pop
sahf
sub
lea
sti
adc
rcrb
fistl
xor
stos
sub
adc
dec
shrb
push
cmc
mov
call
inc
call
daa
enter
jno
and
scas
adc
call
fildl
sarl
lea
add
inc
mul
stos
fcomip
mov
adc
and
push
clc
jbe
ss
lea
mov
push
push
adc
hlt
filds
jno
divb
loop
mov
xchg
inc
adc
mov
std
fisttps
push
outsb
das
and
or
int3
adc
call
push
ss
jb
adc
data16
mov
repnz
lock
or
pop
enter
sbb
call
insb
push
call
pop
cmc
imul
test
and
push
cmp
hlt
sbb
mov
jne
mov
sub
rcll
jmp
popf
push
popa
pop
inc
sbb
add
fstps
and
out
inc
xor
cld
das
jne
je
add
sbb
mov
rcrb
push
sti
adc
dec
and
jl
jecxz
xchg
sub
xchg
xchg
add
fisttps
or
daa
inc
and
push
jbe
inc
pop
jnp
dec
jne
jle
mov
icebp
and
jmp
jle
out
idivb
push
mov
movsb
mov
jge
mov
jne
test
inc
or
mov
push
xor
cld
inc
ds
and
fucomip
decl
sbbb
jne
or
in
js
pop
or
mov
and
gs
mov
cs
lcall
xor
inc
mov
add
mov
sub
loop
bound
mov
outsl
aaa
pop
or
leave
dec
callw
ljmp
push
mov
jmp
dec
lock
jecxz
adc
mov
loopne
lret
or
enter
test
fldcw
sbb
add
lods
add
stc
push
lods
mov
jg
mov
stc
or
lea
fnclex
mov
lcall
xor
sbb
jg
and
or
incl
jne
dec
movsl
ja
push
mov
or
sar
jo
sub
add
add
in
add
pop
test
jecxz
sub
incl
inc
jmp
cmp
or
mov
test
adc
repnz
mov
mov
jo
push
imul
jbe
fmuls
mov
addr16
pop
loopne
js
arpl
sub
movl
cmpl
addr16
adc
adc
rol
dec
adc
data16
add
pop
mov
mov
cli
mov
lods
sub
dec
pop
cmp
xor
sub
mov
push
repnz
xlat
mov
lret
jnp
in
add
icebp
inc
mov
adc
outsl
and
pushl
stos
lods
cmp
sbb
push
popa
mov
mov
push
and
data16
lods
lcall
icebp
jl
int3
push
inc
fidivrl
pop
enter
pusha
test
stc
divb
pop
jle
adc
mov
loope
xchg
dec
sub
ret
mov
popf
dec
fistpll
push
clc
enter
mov
shlb
outsl
xchg
adc
pop
clc
sbb
inc
add
pop
pop
inc
xor
lods
loopne
pop
pusha
call
in
stc
loop
sub
or
or
sbb
mov
lahf
test
rolb
jle
fists
jecxz
pop
stc
adc
jle
cmpsb
mov
sbb
test
cmp
addr16
add
push
xchg
icebp
outsb
add
loopne
jmp
add
mov
pop
loopne
add
adc
mov
xchg
xchg
mov
ss
mov
or
pop
adc
lods
jne
sub
call
cmc
sub
jne
test
xlat
cmpsl
xor
repnz
inc
and
push
aam
pop
adc
je
popa
push
bound
pop
test
outsl
pop
mov
push
pop
test
lock
incb
dec
fdivs
sub
push
ret
stos
das
rcl
lcall
and
out
and
or
not
fstpt
rolb
pop
sub
sbb
fmull
xor
neg
adcb
jge
sub
mov
xor
inc
mov
jecxz
jle
push
add
ret
lods
inc
faddl
push
jp
xchg
mov
fildl
push
ds
jg
sti
call
fdivrs
push
adc
rolb
mov
das
or
sub
adc
sub
movd
mov
mov
xchg
jmp
icebp
je
mov
std
inc
repz
adc
or
add
jle
sbb
test
push
mov
and
pop
stc
aaa
and
inc
mov
aad
ljmp
hlt
ljmp
shll
outsl
scas
xor
fsubs
je
cmp
lock
xlat
stos
lock
mov
int
push
mov
jmp
js
mov
insb
pushf
icebp
mov
rcrl
sbb
adc
cmpsb
adc
jno
and
pop
jbe
pop
insl
into
lock
loopne
test
adc
inc
or
outsl
sub
clc
sbb
adc
pop
or
icebp
sbb
mov
rcrb
pop
repnz
clc
jle
push
add
clc
mov
adc
inc
pop
iret
inc
sub
test
test
jmp
lcall
fwait
and
call
inc
mov
mov
jno
jle
lahf
and
cmp
pop
pop
fisubl
call
sbb
or
jecxz
and
xchg
je
in
dec
ret
and
inc
add
sub
test
or
jmp
ficompl
cld
inc
push
sub
call
xchg
sub
test
jmp
lock
lock
sbbb
mov
push
add
or
cs
cmp
gs
and
xchg
call
or
inc
xor
sbb
dec
inc
push
call
loopne
hlt
cmpsb
push
aam
stos
sub
inc
scas
push
sbb
aaa
inc
xor
jl
call
sub
add
mov
pushf
pop
dec
sub
mov
mov
adc
inc
and
mov
mov
push
mov
or
outsl
incl
cltd
scas
mov
inc
mov
cmp
cmpsb
call
or
pop
aas
inc
and
inc
sbb
loope
inc
dec
mov
fucomi
or
jns
call
mov
mov
clc
dec
sub
sub
les
xchg
mov
xchg
iret
dec
mov
mov
lds
ja
fcmovnb
lods
jae
inc
or
add
enter
scas
ljmp
and
mov
testb
push
jecxz
mov
add
je
ds
sarb
xor
mov
lcall
iret
xchg
dec
mov
mov
xor
push
call
fucomi
je
movsb
lret
mov
lret
loop
fdivrs
icebp
add
pop
lcall
push
stc
fcompl
icebp
xchg
pop
push
cld
aam
mov
mov
and
mov
testl
mov
divb
adc
insl
and
xor
sbb
mov
pop
or
xor
jg
clc
jmp
and
test
mov
sbb
dec
pop
add
inc
cli
outsl
mov
js
mov
xlat
xor
cmp
sahf
jae
dec
test
fistpll
jmp
xchg
sarb
and
loop
jle
push
push
in
cwtl
cmpsb
mov
mov
movsb
push
cmpsb
or
push
lods
jmp
mov
mov
sbb
stos
fsub
cltd
enter
daa
jmp
adc
adc
and
or
loop
jl
mov
jle
inc
dec
stos
lea
push
sti
andl
adc
dec
or
shll
mov
call
push
push
fucomp
pop
stos
dec
stos
pop
mov
mov
movsl
push
xchg
fisubrs
dec
pop
rcl
gs
xchg
jbe
cld
or
dec
call
pop
call
into
add
and
das
jge
dec
lahf
repz
pop
inc
and
sbb
xor
sar
lea
clc
or
test
arpl
sti
shl
les
dec
das
adc
sub
fsubrs
cmpsb
jle
inc
or
add
insb
sub
mov
pop
call
pop
add
inc
inc
pop
xchg
negb
ljmp
es
cmpsb
xchg
loopne
xchg
or
incl
mov
lret
mov
loopne
jbe
pop
mov
insl
shrb
and
dec
in
lds
fildll
lock
repz
push
mov
aad
fbstp
lods
fists
bound
repz
dec
lcall
notl
subb
mov
call
pusha
inc
pushf
adc
loope
ret
mov
pusha
je
inc
cmp
mov
mov
dec
add
lock
xchg
xchg
lcall
xor
ja
mov
inc
mov
std
sub
cli
mov
sbb
mov
insl
stos
jg
pop
fwait
cld
inc
mov
pop
push
adc
sbb
lcall
leave
fs
sub
and
sub
fs
movsl
shrb
pop
out
ds
mov
pop
clc
fmull
adc
sarl
push
stos
jg
add
or
xor
pop
sbbb
dec
call
lds
cli
outsl
inc
or
out
mov
mov
clc
jnp
adcl
shrl
shr
inc
xchg
test
lea
and
xor
inc
mov
adc
mov
dec
pushl
sti
cmpsb
cwtl
in
adc
bound
and
or
clc
dec
icebp
cld
les
mov
xor
mov
roll
mov
jmp
adc
cld
xchg
lahf
or
jle
dec
jp
cmpsb
call
cmp
push
out
cmp
movsl
decl
ret
push
popa
stos
xor
nop
daa
hlt
mov
lock
outsl
mov
incl
fisttps
mov
rcrb
jp
outsl
dec
incl
adc
cmp
lock
push
xor
adc
mov
and
test
pop
jle
sub
nop
nop
das
imul
popa
mov
js
adc
inc
out
scas
inc
mov
and
inc
decl
pop
xor
inc
out
inc
addb
push
test
jmp
dec
lahf
add
add
scas
sbb
pop
sub
call
adc
lods
std
cli
movsb
xor
testb
sbb
inc
nop
fucomip
mov
mov
icebp
jnp
adc
aad
jae
and
jl
fbstp
pop
xor
mov
shl
leave
std
notb
into
or
pop
or
push
push
int3
jo
push
mov
aas
iret
and
mov
pop
pop
ss
push
imul
testl
push
fimull
and
dec
in
lods
add
cli
push
movsl
mov
adc
cltd
xor
test
sahf
ss
je
test
and
sbb
scas
addb
daa
jbe
std
dec
xchg
ds
add
aam
and
ljmp
push
pop
pop
adcl
mov
incl
sti
or
sbb
inc
xor
lret
or
je
or
cmpsb
outsl
and
bound
xor
jne
dec
jae
and
in
mov
call
and
in
sub
push
dec
dec
and
inc
stc
add
loop
inc
call
and
das
cld
notb
lods
mov
xchg
cmp
jge
and
ljmp
push
repnz
mov
mov
xor
sbbb
push
push
int
stos
ss
pop
sti
cmpsl
test
push
cmp
adc
ret
and
int3
shlb
xchg
push
mov
dec
repz
pop
push
and
mov
sti
sub
leave
sub
loop
loop
leave
stc
mov
dec
cwtl
lock
jns
je
pop
jne
dec
lret
and
mov
hlt
dec
call
std
jg
out
mov
jg
call
sbb
clc
int3
sub
mov
shll
fsubs
mov
push
push
stc
jno
aas
inc
sub
aaa
sbb
je
xor
cmp
jnp
sahf
cltd
jecxz
jg
loopne
mov
jg
sbb
out
mov
adc
pop
cmp
and
or
insb
or
imul
xor
pop
mov
aad
sub
inc
xorb
push
out
or
xchg
or
or
mov
ds
fnstenv
and
scas
scas
ret
pop
out
cld
lock
adcb
aaa
and
pop
mov
cmpsl
or
push
dec
cmp
sub
mov
and
repnz
add
pop
bound
and
pop
push
pusha
test
mov
push
or
xor
lock
fimull
xchg
mov
aas
movsl
dec
mov
add
stos
xchg
pop
add
adcl
cmp
cli
rolb
lret
in
mov
loope
loop
jge,pn
les
mov
call
jg
and
or
add
and
and
jae
ja
jb
mov
lock
sbb
test
add
sub
jle
test
dec
pop
loopne
stos
push
jmp
sbbl
inc
mov
dec
cwtl
in
shrl
sbb
mov
push
cwtl
call
mov
pop
or
imul
jo
pusha
mov
sub
loope
push
jl,pn
xchg
outsb
or
push
aas
add
lods
loopne
xorl
sub
push
pop
mov
xor
mov
clc
outsb
stos
sbb
and
adc
inc
sub
fistl
aad
or
rolb
sahf
adc
add
rcr
jge
aad
sub
mov
loop
ss
sub
mov
movb
add
stos
cli
sub
js
clc
insl
pop
push
xchg
mov
mov
cmp
xchg
sbb
push
cmp
loop
or
mov
shrb
mov
adc
mov
sbb
mulb
dec
bound
ljmp
mov
adc
xchg
shl
jg
jl
mov
rcpps
pop
mov
jmp
inc
movsb
in
outsb
sbb
push
sub
dec
mov
les
movsb
insb
ficompl
es
xchg
and
outsl
aad
or
inc
popa
xor
adc
aam
call
xor
sub
add
fucomi
bound
enter
negl
jg
xchg
cld
je
call
scas
xchg
pop
mov
pop
loopne
lahf
pop
out
pop
insb
adc
mov
lcall
mov
aam
pop
popa
les
xor
cld
push
or
mov
push
mov
or
ljmp
mov
daa
dec
add
neg
sub
jge
xor
or
jmp
sti
je
or
or
or
ret
mov
and
sub
incb
pop
jle
adc
adc
adc
adc
add
packsswb
sarb
pop
addr16
icebp
pop
bound
nop
sbb
mov
dec
mov
outsb
aam
popf
xchg
imul
loope
mov
in
xchg
push
adcl
cld
sub
fcompl
and
and
outsl
rcll
xchg
push
into
pusha
lock
mov
lods
nop
sti
xor
lahf
push
add
pop
insl
hlt
xchg
lahf
mov
je
push
test
add
lock
js
or
xchg
push
test
loopne
insb
cmc
inc
je
jp
mov
sbb
or
sbb
mov
lods
ret
xchg
mov
mov
imul
mov
mov
ds
jae
jmp
inc
addl
pop
xchg
add
or
outsl
fildl
hlt
or
mov
adc
lcall
js
cmp
sub
xor
fdivr
jl
idivl
loop
repnz
mov
shlb
xor
call
into
dec
cmp
mov
adc
ret
or
pop
push
popa
flds
mov
inc
into
mov
clc
inc
mov
imulb
dec
insl
sub
mov
cmp
icebp
loop
mov
mov
inc
je
inc
out
cwtl
dec
mov
mov
xor
imul
in
mov
xor
por
xor
dec
mov
iret
hlt
pop
in
lea
test
jge
test
sub
ss
aam
cwtl
cmpsl
mov
or
xor
outsl
movsl
mov
and
cmp
gs
jae
mov
dec
dec
mulb
adc
js
xor
sub
rorl
clc
add
jg
movsl
lret
aas
call
lea
inc
pop
clc
mov
sbb
stc
or
jmp
pop
loop
mov
dec
jns
in
ret
pop
dec
fucomp
lcall
mov
and
iret
or
leave
ja
hlt
jae
sub
and
mov
push
gs
mov
fisttpll
dec
test
data16
in
neg
insb
jp
call
into
xchg
and
sarl
fildll
xchg
lret
cmp
xchg
je
call
ja
in
outsb
mov
xor
shrl
add
xchg
push
adc
inc
adc
lcall
fcoml
pop
lds
fistl
stos
sbb
jg
std
fdivr
sbbl
lahf
cltd
divb
mov
adc
jl
push
outsl
mov
shr
int3
mov
inc
call
mov
outsl
xchg
aam
cltd
in
mov
mov
mov
and
or
jg
das
sub
inc
add
push
or
jae
push
adc
stos
inc
or
enter
sbb
mov
out
mov
mov
outsl
cmp
inc
stc
push
test
add
test
add
xchg
mov
test
outsb
jo
inc
movsl
mov
sbb
jb
adc
aam
pushl
push
jnp
fs
aaa
cli
sar
adc
dec
addr16
pushl
jge
pop
decl
xor
scas
sbb
push
xchg
mov
in
outsl
cld
das
lock
pusha
xchg
mov
sahf
iret
add
call
test
xchg
das
adc
xchg
adc
cli
pop
mov
and
cmc
jp
test
fidivl
add
test
pop
cli
test
jmp
cli
incb
std
mov
std
divl
add
or
pusha
push
fdiv
push
in
aad
mov
inc
out
mov
adc
mov
mov
inc
pop
arpl
insl
sub
clc
jl
popa
cwtl
stc
cli
xchg
enter
mov
aam
or
mov
repz
sbb
xor
in
mov
imul
test
or
call
xchg
xor
loop
rcrl
mov
pop
js
aas
out
pop
bnd
call
jge
ret
push
fs
lcall
adc
mov
mov
dec
and
enter
push
orl
xchg
sub
mov
call
mov
divb
xor
imul
mov
cmpsb
les
sti
sbb
jle
pop
call
fsubs
sbb
xor
icebp
test
shlb
lods
adc
mov
push
dec
or
inc
adc
bound
adc
inc
cmpb
scas
mov
sbb
nop
add
adc
test
cmp
outsl
mov
out
mov
inc
testl
add
cmp
jg
xor
and
call
les
insl
std
xchg
pop
lods
int3
xor
push
sbb
add
jo
xor
in
sub
decl
call
mov
push
mov
or
in
sti
dec
cmp
cmpsl
mov
lcall
inc
xchg
cmp
inc
test
jmp
sbb
inc
xchg
test
stos
mov
jns
test
mov
shl
inc
cwtl
push
inc
mov
add
lds
lods
xchg
mov
mov
jmp
popa
cmp
je
orb
lods
repz
mov
icebp
nop
enter
lock
mov
adc
insb
mov
test
push
and
pop
mov
lds
cmp
andnps
das
int
cmp
lcall
xchg
clc
push
push
dec
icebp
cli
fs
cmpsl
imul
or
dec
xor
out
inc
xchg
nop
jg
pushl
movsl
call
cmpsb
xchg
add
inc
pop
jp
rclb
loop
hlt
and
push
lcall
repnz
push
add
data16
xchg
ljmp
push
push
out
pop
ret
sub
mov
sub
mov
sub
jmp
xlat
ret
jne
mov
outsl
shl
pop
call
jae
lret
and
pusha
rclb
rcl
pop
out
pop
les
das
xor
and
das
push
sbbl
cmp
mov
xchg
cmp
call
jae
not
mov
roll
lcall
lcall
or
jne
or
sbb
jo
lea
stos
dec
and
je
jmp
jo
push
or
lods
lods
inc
xchg
outsb
out
inc
mov
std
sub
add
mov
jmp
or
adcb
or
mov
pop
fldl
fsubl
push
ljmp
rcr
ret
add
inc
pushf
pop
mov
sub
xchg
push
jb
adc
adc
decb
gs
jnp
add
push
loope
or
inc
stos
mov
jo
shll
adc
adc
push
add
cmp
shll
sbb
jb
lahf
xor
add
mov
fs
inc
xor
inc
jne
xor
sub
lock
jmp
mov
sahf
imul
sub
lock
in
add
dec
out
or
mov
gs
insl
loope
push
fucomi
popf
xchg
mov
pop
jge
and
ds
mov
clc
and
call
jb
xor
pop
mov
push
call
mov
and
mov
push
mov
pushf
cmp
or
mov
call
mov
lds
sbb
imul
sbb
dec
andb
mov
stos
in
int3
jo
add
sub
sub
aam
lods
sbb
jmp
jecxz
push
lods
jmp
jb
hlt
lcall
je
fisubrl
sarl
jge
out
jecxz
mov
fdivr
shlb
xchg
pop
cmpl
sub
data16
lock
adc
push
sahf
sahf
jmp
inc
mov
rorl
mov
or
jge
and
in
ja
rclb
dec
sub
adc
sbbl
or
pop
jae
call
pop
ficoms
inc
cmpsb
lea
push
jmp
lods
push
mov
or
lods
pop
inc
jmp
jecxz
push
mov
in
mov
std
das
sub
lcall
insb
aam
pop
hlt
pushf
add
fsubrs
xchg
and
sub
dec
and
std
das
pop
or
or
mov
push
jmp
xor
inc
adc
add
pop
in
aaa
bound
adc
and
hlt
mov
xchg
mov
xor
or
out
sbb
jecxz
pop
js
pop
inc
mov
sbb
mov
rclb
and
inc
icebp
pushl
ss
shr
dec
cmp
test
jecxz
aaa
clc
in
ljmp
dec
jmp
add
inc
in
rcrb
dec
mov
pop
push
mov
jne
aad
mov
and
dec
xchg
cmc
insb
daa
and
pop
pusha
and
lds
or
in
bound
cltd
adc
xchg
sub
jns
cli
sbb
mov
mov
mov
jg
arpl
clc
add
adcl
sbb
aas
hlt
and
sahf
test
je
testb
add
mov
bnd
sahf
mov
out
je
fcomp
loopne
xchg
popa
aaa
or
cmpsb
pop
cmp
adc
movsl
pop
test
pop
and
mov
fcmovnbe
incb
mov
adc
cmp
fbld
mulb
and
or
jmp
lret
movsb
gs
jle
xchg
cld
fsts
test
sub
pop
insb
sahf
adc
jg
ret
sub
fcomps
mov
lock
cmpl
sbb
iret
fs
xor
sbb
enter
xor
push
jbe
sub
jmp
jne
je
sub
ret
fisubl
mov
pop
xor
cwtl
xlat
outsl
fbld
stos
xchg
hlt
or
stc
inc
pusha
or
push
dec
gs
pop
icebp
test
adc
xchg
flds
ja
push
push
shlb
adc
movsl
arpl
sbb
into
cli
jg
or
orb
adc
adc
aad
rcr
cs
jl
arpl
push
sub
jecxz
data16
and
push
cmpsb
ss
mov
and
scas
bound
sub
xorl
ljmp
vmread
call
or
sub
cmpsb
push
inc
or
fcmovnbe
lea
in
je
sbb
push
in
pop
push
test
test
sbb
adc
mov
clc
pop
mov
inc
bsf
push
mov
je
idivb
add
or
inc
mov
cmp
movsb
dec
lods
jnp
sahf
lahf
mov
dec
stc
aam
pop
jle
pop
mov
fisttpl
les
sti
negl
test
xchg
loop
and
shll
sub
in
push
jae
enter
fistpll
test
sub
nop
push
or
clc
mov
jg
outsl
pop
mov
or
dec
inc
sbb
jl
cmp
mov
inc
push
add
adc
sub
cmp
inc
push
mov
das
jle
fwait
test
nop
and
mov
fdivp
pop
xchg
inc
inc
test
jg
pop
int
cwtl
out
mov
mov
ss
flds
inc
mov
or
nop
fs
xor
ds
mov
mov
add
inc
cld
pop
mov
or
or
push
xchg
aaa
dec
adc
xchg
rorb
adcl
jbe
adc
add
jmp
jno
mov
cld
sub
gs
xor
mov
imul
mov
sub
and
fsts
add
xchg
sti
in
rol
mov
jae
pop
pop
adc
jno
outsl
loopne
shll
cltd
movsl
mov
add
mov
ret
xchg
mov
cli
jae
cmpsb
adc
dec
popa
gs
sub
adc
insb
shll
jnp
hlt
sbb
mov
movsl
pop
je
rclb
jg
pop
inc
dec
push
das
mov
push
ja
roll
mov
outsl
pop
fsubr
jb
gs
cmp
outsl
into
adc
fistpll
push
dec
jle
dec
and
jns
xchg
jg
sti
ret
xor
getsec
daa
cmp
fwait
mov
xor
or
mov
and
das
push
adc
andl
adc
xchg
sbb
mov
mov
or
sbb
scas
adc
ds
outsl
jl
push
leavew
leave
mov
loop
ret
call
les
call
ss
mov
push
test
cltd
repnz
fisubl
test
out
jecxz
mov
fildl
pop
inc
pop
fisubrl
and
pusha
cmp
jp
mov
gs
in
mov
push
dec
pop
mov
dec
adc
loopne
jle
fs
inc
pop
aam
jge
pop
je
in
outsl
jg
ss
pop
je
js,pn
outsw
sbb
sahf
add
push
dec
call
roll
adc
push
sti
jl
out
imulb
jg
hlt
pop
adc
leave
imul
aaa
mov
push
fistpl
mov
out
add
daa
push
leave
mov
xchg
dec
mov
outsl
hlt
pop
jle
and
mov
add
and
das
mov
fdivrs
inc
jecxz
inc
lods
ret
clc
outsl
sub
lea
jo
mov
adc
test
sbb
push
or
pop
sub
pop
xchg
sarl
adc
insl
out
push
movsl
mov
test
faddl
jecxz
mov
inc
or
insb
push
sub
jmp
cmpb
test
fdiv
rcll
fcompl
push
loope
in
decb
int3
ljmp
dec
push
cli
pop
aam
mov
inc
pop
js
push
and
mov
xchg
mov
xchg
repz
xchg
ja
lea
daa
mov
and
add
lea
inc
shlb
jle
cmp
mov
popa
hlt
mov
movsb
add
or
nop
and
sti
call
hlt
or
sbb
or
pop
inc
push
sbb
adc
pop
aam
jle
std
fdivr
jl,pt
roll
addr16
testb
test
adc
sti
sbb
xchg
sbb
call
jle
add
pushf
cmp
je
outsl
push
pshufw
lock
test
mov
jmp
jne
mov
cmp
outsl
adc
aad
jno
test
and
inc
or
push
je
fisttpl
cli
inc
add
stos
inc
les
and
sbb
mov
mov
mov
pop
or
arpl
and
adc
imul
sbb
pop
push
mov
jmp
outsb
and
repnz
mov
mov
jge
or
and
ficoml
cs
add
aam
fbstp
jbe
inc
imul
decb
movsl
push
daa
mov
ljmp
adc
fidivs
lods
mov
mov
in
sub
in
mov
outsb
mov
dec
stos
je
xlat
inc
add
outsl
insl
fs
lret
mov
pop
dec
mov
push
sbb
clc
and
in
or
clc
pop
xchg
cwtl
cmp
je
shlb
loope
or
pop
mov
jg
sbb
pop
pop
data16
push
xchg
push
xor
imul
adc
mov
imul
adc
scas
inc
sub
xor
stos
aad
hlt
lods
pop
lea
movsl
sbb
mov
hlt
add
jne
cltd
adc
stc
out
test
aas
cmpsb
push
test
in
mov
adc
mov
and
lock
xor
push
repz
xchg
sub
jb
movsl
rclb
mov
adc
jmp
xchg
stos
jecxz
dec
push
or
jge
addr16
pop
test
inc
stos
movsb
bound
pop
push
sti
ret
mov
push
adc
sub
orb
into
push
mov
adc
test
call
jbe
push
fmuls
sub
imul
xor
sbb
call
fldt
inc
insl
mov
aaa
mov
outsl
clc
mov
imul
xor
hlt
add
ss
xor
cmpsb
mov
out
push
push
jg
stc
xor
pop
call
and
xchg
arpl
vcmpsd
addb
fisubrs
or
and
dec
jmp
xchg
clc
or
sbb
shll
out
mov
inc
adc
lock
mov
loope
lcall
xor
add
and
jo
xchg
lcall
jnp
jbe
or
pop
std
or
outsl
mov
rcrb
lods
rclb
jl
or
dec
pop
sbb
call
sarb
or
jmp
cmpsl
loop
pop
push
enter
push
call
ret
icebp
call
sub
sub
cmc
mov
inc
cmp
sar
fbstp
jb
cmp
call
adc
or
inc
mov
lahf
fcomp
or
test
sub
sbb
xchg
hlt
call
sti
pop
fildl
in
jmp
mov
stos
jne
or
xchg
insb
fwait
mov
insl
addl
jge
in
jne
pusha
call
testb
push
adc
daa
pop
and
add
shll
mov
dec
jp
fnstsw
inc
or
bound
mov
insl
or
push
pop
data16
or
push
and
clc
lods
rol
xchg
ss
loope
adc
add
das
xchg
loopne
xchg
out
cmp
std
adc
inc
xorl
add
stos
hlt
pop
aad
mov
iret
cmp
or
call
pushf
je
cmc
cmc
mov
sub
mov
or
fbld
out
outsl
outsl
xchg
imul
jae
jmp
sti
clc
dec
shll
sbb
scas
mov
dec
mov
add
ss
jae
imul
jge
inc
arpl
push
dec
rorl
dec
in
adc
mov
lret
lods
je
mov
das
clc
inc
into
imul
adc
outsl
push
push
lods
rolb
cli
adc
fdivr
ret
fwait
insl
aam
pusha
cwtl
inc
dec
or
pop
fisttpl
add
cmp
insb
loopne
push
pop
lods
jg
pop
add
push
stos
dec
test
ljmp
je
scas
je
jns
cmpsl
jo
ret
mov
test
loopne
mov
jg
popa
shl
incb
and
and
je
scas
js
aaa
inc
pushf
or
adc
and
pop
roll
xchg
gs
icebp
in
mov
xchg
lds
mov
push
mov
xchg
pop
andl
es
push
mov
dec
adc
xor
loopne
sub
sub
call
push
loopne
dec
lret
lds
and
add
pop
cmp
adc
ja
push
cmp
jne
sub
daa
cmp
js
dec
repnz
fidivrl
call
bswap
push
pushf
loopne
xor
mov
icebp
mov
or
add
cmp
add
inc
sbb
mov
lods
mov
fwait
call
std
orb
cmp
sub
pop
das
sub
scas
sub
or
jmp
xor
sub
jmp
pushl
int3
lds
jl
pop
addr16
arpl
call
stos
pop
mov
push
hlt
pop
add
mov
popf
pop
pop
enter
pop
ds
xchg
and
testl
movb
cmp
fistpl
push
fldt
push
sbb
icebp
add
push
lret
xor
xor
xor
mov
outsl
mov
loope
xor
inc
xor
ja
fwait
sti
mov
je
out
jle
pop
fcoml
dec
stos
push
or
mov
xchg
xlat
jne
dec
xchg
decb
mov
ja
fldt
mov
lahf
mov
or
test
pop
jo
pop
or
filds
inc
mov
lea
lret
mov
jl
and
push
add
jmp
clc
dec
cmpsb
dec
and
add
lret
mov
fucom
xchg
sub
das
insl
or
jecxz
pushf
fwait
cmp
xor
push
cmc
inc
jmp
gs
movsl
xchg
sub
push
ds
adc
fcmovnbe
mov
insb
jno
iret
in
inc
into
call
jno
add
mov
fcmovbe
cwtl
popa
cmpsl
lcall
push
xor
adc
outsl
sbb
inc
mov
xchg
les
push
push
jnp
movsl
cmp
test
jb
sub
lock
pop
mov
fmuls
xchg
dec
out
rolb
mov
cld
and
dec
cwtl
mov
mov
or
mov
add
adc
shrb
dec
adc
pop
ja
or
or
push
stos
mov
fisttps
arpl
pop
push
and
pop
cli
push
std
sub
aas
sub
int
mov
test
xor
shlb
cs
dec
dec
inc
jmp
outsl
mov
push
and
or
int
cwtl
or
aaa
orb
pop
jge
xchg
sahf
lret
lds
rorb
cmpsb
xchg
insl
mov
ljmp
add
pop
leave
mov
jmp
xchg
and
mov
dec
int3
in
dec
das
loope
movl
arpl
repnz
xchg
mov
push
arpl
pop
sub
cltd
xor
jge
ss
cmp
mov
loope
mov
mulb
bound
mov
mov
jge
ret
xor
jno
mov
jo
adc
dec
in
pop
les
icebp
xor
insl
dec
sub
jo
jno
and
cmp
clc
ret
sti
and
cwtl
xorb
clc
xchg
jg
lret
int
adc
mov
les
dec
jne
jp
mov
aas
cmc
in
or
cmc
jno
pop
adc
mov
cmp
jg
push
push
dec
dec
dec
pop
outsb
cmp
loop
icebp
rcr
adc
lods
cld
pop
scas
push
int3
lods
push
decb
add
iret
jne
jno
push
mov
dec
pusha
and
stos
inc
int
or
notb
xor
jg
xchg
inc
in
jne
outsb
shl
jecxz
fists
imul
push
jb
orl
scas
ret
jg
das
loope
out
xor
mov
pop
inc
mov
stc
sti
push
outsl
je
rcrl
mov
pop
mov
inc
inc
push
out
sub
push
jl
and
ljmp
adcl
test
mov
aaa
mov
pusha
ljmp
inc
je
mov
fstp
in
mov
sub
cs
pop
clc
lea
and
test
inc
fucomp
cmpsb
outsb
sub
cwtl
inc
jg
mov
mov
pop
shlb
dec
or
mov
or
jecxz
movsb
rcll
push
rol
jle
shrl
add
int3
insl
xor
push
in
mov
mov
out
sub
push
enter
scas
mov
mov
test
popa
fwait
add
adc
shl
jmp
test
cmpsl
adc
or
xor
pop
call
fstl
enter
add
fbstp
push
stos
jg
push
int3
jp
stos
push
xchg
or
je
dec
adc
dec
fwait
aad
dec
jbe
add
scas
aam
mov
inc
sti
sbb
mov
stc
addr16
test
mov
xchg
mov
ret
ret
sbb
je
ficomps
int
ds
test
and
adc
mov
push
insb
mov
iret
imul
pop
xorb
orl
fcmovnu
sbb
test
ds
jo
mov
push
in
das
sub
add
inc
adc
dec
mov
push
les
iret
jmp
pusha
sti
add
test
daa
mov
inc
fcmovnu
ljmp
lds
fisubs
pop
mov
push
inc
mov
and
sub
pop
js
jbe
aaa
mov
push
lret
out
stos
mov
sub
mov
jns
in
imul
stos
or
xchg
jge
cmp
mov
or
cmc
jo
out
aad
xchg
jne
xchg
mov
lods
inc
add
inc
add
mov
outsb
add
inc
sub
adc
xorb
lret
ja
mov
xor
sbb
push
daa
or
mov
or
inc
fisttpl
popa
inc
orl
jo
sbb
addl
inc
ret
jo
mov
loope
inc
mov
scas
and
int
jmp
aaa
hlt
jbe
iret
es
mov
mov
jbe
es
jae
addb
fsubr
sub
cltd
je
inc
ret
sbb
js
push
adc
mov
sbb
inc
mov
sub
mov
movsl
pop
shlb
mov
cmpsl
dec
pop
xor
es
aaa
je
adc
aaa
mov
pushl
pop
mov
dec
push
lock
jle
adc
insb
repz
vmread
jbe
adc
arpl
jne
insb
push
std
jne
fwait
gs
je
cmpsb
and
dec
test
push
nop
lea
sub
aam
imul
jbe
inc
loope
dec
dec
das
mov
sub
push
dec
ret
iret
test
fs
adc
push
pop
sub
outsl
mov
mov
pop
push
sbb
ljmp
mov
lods
mov
and
test
adc
jne
dec
ret
and
popf
in
cltd
push
xchg
mov
mov
mov
ret
test
rolb
sti
mov
call
das
std
adc
adc
out
call
jne
mov
call
xorb
fnsave
out
adc
fs
inc
dec
jge
mov
addb
call
sub
push
nop
cmp
lahf
lea
in
scas
mov
or
dec
sbb
sbb
mov
and
adc
adc
mov
push
sbb
xor
cmp
adc
mov
jno
xchg
jg
aad
mov
xchg
adc
sbb
stos
fidivl
inc
lea
xchg
lcall
and
in
sbb
mov
cmp
mov
loop
aam
stos
push
cwtl
sbb
mov
divb
and
mov
imul
int
subl
mov
rolb
fcomip
test
add
inc
sbbb
cmp
pop
mov
push
mov
adc
sti
cld
cld
mov
jo
add
pop
popf
cli
push
sti
jg
aas
or
adc
call
es
xchg
push
mov
adc
cmp
call
adc
outsl
mov
movsb
mov
mov
mov
adc
in
rcrb
call
mov
xchg
mov
mov
adc
enter
das
adc
imul
push
push
add
cli
push
mov
inc
cmp
outsb
pop
pop
mov
jp
mov
fisttps
xchg
lahf
add
cmpsb
iret
adc
aam
dec
xchg
add
lods
xor
jmp
push
sbb
pop
movsl
stos
aad
leave
in
lcall
call
sbb
jns
cmp
pop
or
das
add
lea
sub
mov
add
lret
mov
mov
inc
cmc
or
xor
jg
in
aad
ljmp
jp
loopne
pop
sbb
or
adc
arpl
mov
mov
orl
cmpsl
aaa
mov
inc
stos
push
cmpsl
adc
mov
adc
xchg
jp
sahf
shrl
out
pop
push
cmc
xchg
and
jmp
pop
test
loopne
movsb
imul
push
repz
inc
inc
test
shll
test
cmpsb
lahf
ret
mov
push
pop
js
hlt
lret
push
push
add
sbb
mov
jmp
pop
and
outsb
insl
xchg
push
fstpt
outsl
mov
lds
mov
cld
adc
mov
arpl
mov
sub
xadd
inc
inc
fidivs
ljmp
xchg
shlb
in
jg
rcr
cmp
sub
ss
xchg
movsb
mull
xchg
xor
adc
shll
push
arpl
lea
out
cmpl
xor
pop
pushf
pop
xor
xor
sbb
push
inc
ja
dec
aad
call
ss
call
outsl
mov
insl
push
mov
mov
xor
pmovmskb
push
call
outsl
ljmp
loopne
jge
notb
test
in
cli
push
pop
adc
mov
inc
fistpll
cltd
lcall
adc
jne
pushl
movsl
pop
movsb
aam
push
xlat
inc
mov
js
push
bound
push
mov
mov
loop
test
ljmp
push
and
mov
jne
arpl
pop
call
aaa
mov
lret
cli
fsubp
sub
pop
loope
and
jne
mov
je
pop
add
push
in
cmp
or
aaa
pop
mov
push
jns
cli
mov
or
nop
mov
sahf
ficoms
pop
into
enter
pop
je
sbb
testb
jno
sbb
cltd
inc
sbbl
scas
or
push
je
jmp
pop
mov
lock
inc
add
xor
shlb
sub
inc
mov
adc
sub
add
loopne
sub
add
into
or
or
shlb
add
les
les
cmp
fisttps
cmpsb
mov
insl
in
nop
sub
imul
cld
ret
and
scas
out
xchg
gs
mov
stos
adc
push
dec
andb
jo
fwait
push
and
xchg
inc
test
mov
jp
shlb
jne
sbb
jb
daa
push
and
jmp
clc
jg
add
mov
xchg
or
call
je
in
in
fdivr
into
xor
cmp
mov
jp
sub
insb
mov
sub
out
mov
out
dec
xchg
pop
sbb
ret
mov
jg
stc
out
shr
das
cltd
sbb
sub
mov
pop
in
addb
mov
movsb
divl
clc
sar
push
jge
rolb
and
dec
stos
cmc
inc
stos
mov
pop
rcr
add
push
out
jb
mov
dec
mov
bound
fdivr
incl
mov
call
iret
paddb
adc
adc
ficoms
cld
fstpl
xchg
jl
jmp
or
insl
lea
adc
push
arpl
add
sbb
jp
cmc
sbb
mov
call
push
pop
mov
in
mov
mov
xor
jmp
xor
imul
mov
mov
stos
repz
ret
ljmp
cmp
hlt
mov
int3
xor
cmp
aaa
lock
imul
outsl
je
xor
inc
arpl
sar
mov
stc
or
fwait
jg
insb
cmp
pop
in
stc
inc
or
shr
mov
shlb
jp
dec
aad
fimull
movw
xor
loopne
cmp
shll
mov
or
add
sub
push
in
adc
fbstp
sahf
mov
leave
pop
aam
outsb
inc
mov
or
xchg
and
mov
push
dec
add
mov
jno
jno
and
and
mov
mov
mov
inc
sbb
enter
cmpsb
cli
lods
in
aaa
aad
fcoms
push
fwait
push
mov
mov
or
adc
mov
mov
jb
aaa
jns
andl
push
pop
xchg
and
mov
aaa
test
icebp
xchg
aam
cmpb
fldt
mov
ficompl
pusha
cltd
mov
sbb
cld
popf
pop
sub
aaa
cmp
and
adc
in
in
outsl
xchg
popf
mov
adc
or
add
call
xchg
cmp
out
jbe
test
scas
inc
das
lea
mov
mov
loope
cmp
add
cli
adcl
jle
dec
stos
call
and
xchg
aad
loop
insb
jg
ljmp
test
jo
mov
xor
jge
or
in
push
sub
imul
cld
jbe
cs
or
push
mov
ljmp
insl
aaa
mov
data16
popa
inc
or
push
cmpsb
adc
cmp
sbb
cmp
dec
mov
lock
or
mov
mov
loope
add
mov
or
xchg
jle
mov
loop
js
pop
xor
js
mov
es
jo
dec
ret
sub
or
test
sbbb
dec
pop
sbb
pusha
sti
fstl
jmp
mov
cmc
les
or
xchg
dec
orb
inc
mov
or
and
pop
mov
jb
mov
jne
shrl
les
jbe
das
lods
out
add
add
mov
mov
stc
jp
xor
cmp
pop
mov
adc
jb
xor
dec
adc
outsl
sahf
xor
inc
jnp
fildl
bound
adc
sbb
loopne
pushf
call
adc
or
jl
imul
xor
shll
sti
test
push
mov
int
mov
cmp
roll
push
loopne
pop
xor
incl
inc
adc
adc
lea
sbb
xchg
add
push
dec
dec
fists
pop
sbb
lock
push
scas
test
jmp
adcb
jo
add
inc
add
and
jge
mov
adc
xchg
hlt
clc
scas
mov
rolb
or
adc
jecxz
outsb
mov
mov
je
les
testb
lret
hlt
pop
les
mov
jo
pop
jbe
insl
lahf
outsl
jge
lret
daa
xchg
aad
jge
fistps
add
pop
jg
add
and
push
push
and
ret
sub
mov
loop
and
push
int3
sub
pop
shlb
das
mov
cmp
dec
inc
data16
insl
xchg
sbb
mov
out
cmp
jae
icebp
roll
pop
cmpb
mov
in
pop
jnp
mov
jp
pop
call
push
imul
pop
cmp
fsubrl
xor
mov
xor
cmp
call
lods
mov
fsubr
jle
xlat
add
decl
dec
or
pop
loop
add
and
test
mov
mov
pop
or
mov
dec
std
xor
pop
inc
in
mov
nop
fnstenv
and
add
mov
dec
inc
fsub
sbb
scas
mov
add
mov
adc
cmp
adc
in
jg
cmpsl
popf
std
or
aaa
push
enter
fsubrp
or
xor
mov
loop
iret
and
cld
fstl
xchg
ljmp
or
add
out
mov
lods
adc
clc
fcoml
mov
push
sbb
adc
stos
scas
inc
push
mov
outsl
ret
sbb
lds
cmp
enter
push
xor
mov
loope
js
pusha
stos
or
lcall
mov
loopne
or
jno
or
or
mov
jl
push
cmp
mov
push
loopne
dec
dec
mov
pop
jno
and
adc
divl
mov
test
inc
lods
je
mov
or
push
mov
movsb
ret
mov
loopne
pusha
mov
ja
push
xor
dec
cmc
pop
fisubs
andl
pop
mov
mov
adc
js
ret
cli
jb
call
orl
push
adc
or
xor
and
ret
mov
adc
mov
ljmp
insl
dec
icebp
pop
pop
std
out
flds
inc
subl
jb
and
xor
xor
fildll
add
mov
sti
push
push
orl
pop
mov
fisubrl
repz
jp
loop
sub
lods
orl
fisttps
filds
mov
pop
icebp
jb
push
lock
lea
add
dec
sbb
stos
mov
mov
xor
mov
mov
adc
jl
pop
adc
cs
push
dec
cmp
dec
fmull
push
ss
testb
out
pushf
add
jno
mov
mov
outsb
daa
outsb
pop
data16
xchg
mov
add
cmp
inc
cld
test
dec
insl
add
or
out
pop
outsl
scas
and
cmpsb
imul
lock
insb
xchg
loope
inc
sub
inc
jne
aad
cmpsl
xor
ja
cmp
pop
fs
clc
stos
mov
fwait
cmp
or
loopne
arpl
mov
cmp
mov
dec
adc
mov
dec
int
push
sti
jbe
pop
xchg
sbb
push
or
sub
pop
stos
push
insl
das
in
outsb
xor
fs
test
mov
push
mov
sbb
sub
roll
adc
push
and
mov
adc
jmp
push
std
out
jbe
or
inc
add
adcb
test
jae
punpcklbw
mov
insl
jb
call
inc
pop
mov
pop
insl
insl
mov
stos
sbb
test
and
add
inc
mov
lcall
lods
mov
mov
or
jb
or
subl
jbe
dec
test
jg
dec
mov
or
mulb
pop
mov
mov
dec
sub
fcomps
jno
shr
insb
pop
mov
pop
sbb
loop
mov
inc
adc
jl
scas
xor
xchg
dec
hlt
adc
outsb
sbb
test
sarb
xor
add
jmp
lcall
adc
mov
jle
pxor
bound
je
jp
inc
jno
aaa
cld
ret
inc
test
inc
and
int3
fdivl
enter
test
lea
xor
invd
sub
xchg
push
je
sbb
in
lods
rorb
mov
push
push
fwait
push
or
push
stos
pop
ret
mov
fadds
clc
fbstp
xchg
and
int3
jg
rorl
xchg
enter
lock
sbb
pushl
or
inc
int
sahf
sub
inc
mov
sbb
jb
divb
and
jne
rcrb
je
enter
fstpt
xchg
loop
test
sbb
jg
movsb
data16
test
lods
pusha
outsb
sbb
cmp
movsb
add
outsb
je
mov
mov
bound
lods
mov
mov
mov
add
dec
push
push
mov
xchg
outsl
push
mov
subb
push
rcrb
or
push
jle
repz
xorl
jl
and
push
mov
dec
shll
test
pop
out
dec
jo
add
es
ret
push
test
lds
push
hlt
inc
jnp
add
adc
pop
xchg
push
cld
pop
jmp
shl
lret
and
test
add
push
aam
subb
hlt
inc
mov
dec
inc
mov
ljmp
call
jg
mov
push
bnd
insl
mov
inc
dec
mov
mov
int
int
adc
push
mov
popa
fnstenv
mov
insl
xorl
test
test
outsl
out
lahf
leave
mov
jp
mov
sbbb
inc
and
adc
mov
shll
lea
scas
lcall
fstpt
sti
jecxz
outsl
sub
mov
in
xchg
pusha
mov
sbb
incb
outsb
rcl
cmp
stc
loopne
fldl
adcl
loop
cmp
test
call
pop
mov
sub
or
adc
sub
xchg
dec
in
lods
shlb
pushf
scas
dec
inc
pop
dec
lret
adc
test
sbb
or
dec
jmp
pop
fisubrl
std
inc
and
xor
lret
call
sbb
dec
jg
push
push
loop
shrb
adc
mov
hlt
mov
xchg
adc
xor
sbb
inc
and
in
fcmovnbe
loopne
sbb
ds
leave
mov
mov
stos
mov
lock
cmovge
incb
adc
lret
and
lcall
sti
or
mov
mov
cld
push
sub
jns
lea
jmp
and
and
jg
or
jge,pn
call
mov
mov
push
mov
push
sub
jg
and
adc
es
dec
cmp
or
das
or
xchg
and
lock
lods
enter
jmp
jmp
subl
pop
sbb
jb
pop
xor
lret
inc
mov
pop
or
pop
call
in
call
hlt
mov
je
mov
add
testb
mov
adc
js
stos
icebp
inc
and
cmp
mov
ficoml
pusha
inc
outsl
sub
inc
in
lods
mov
xchg
inc
push
mov
mov
sub
mov
sub
add
xchg
in
hlt
aas
nop
cmp
jo
cld
or
fiaddl
inc
dec
mov
pop
ljmp
adc
insb
stos
mov
movsb
pop
or
fildl
outsl
ja
push
sbb
or
addl
in
jns
add
insb
icebp
sbb
insl
int3
mov
outsl
int
inc
test
shlb
jecxz
sub
or
and
pop
lcall
jb
bound
popa
or
push
je
jl
loop
daa
xchg
xchg
adc
and
mov
xor
incb
shr
push
aas
in
mov
repnz
scas
aam
and
mov
mov
mov
dec
add
in
xchg
aad
add
jne
add
insl
test
inc
test
addb
sub
lods
loope
mov
add
cmp
cmp
or
aad
addr16
add
lods
test
clc
inc
jl
adc
cli
add
int
push
movsl
mov
push
pushf
shrl
mov
fistpl
daa
or
out
adc
pop
sbbb
sub
sbb
aam
and
aaa
nop
mov
mov
sbb
add
fldt
lds
mov
loop
sbb
dec
add
add
jle,pn
dec
push
jmp
xlat
push
or
jnp
js
lock
push
push
jmp
or
jmp
cmpsb
or
sub
dec
sub
std
mov
dec
repnz
dec
pushl
je
jle
pop
adc
mov
insl
imul
pop
fdivrl
xorl
or
mov
push
mov
xlat
mov
mov
adc
mov
addl
mov
adcb
aas
inc
out
fldenv
outsl
and
sbb
sub
push
aaa
icebp
jmp
mov
cmpsb
adc
aaa
insb
fbstp
inc
popa
adc
orl
aaa
lock
jno
mov
popa
out
inc
push
fs
add
push
cmp
das
inc
mov
dec
inc
inc
cld
pop
js
adc
push
clc
inc
cmpsb
mov
data16
add
popa
sub
dec
sub
pushl
mov
adc
jo
sbb
mov
mov
imul
enter
xlat
out
sahf
sbb
xlat
mov
push
sbb
shr
cmp
cld
movsb
clc
jns
je
mov
adcb
push
call
push
push
or
mov
inc
or
mov
add
sub
xor
dec
mov
cmpsb
and
sub
das
jl
mov
int
or
call
stc
insl
add
inc
push
add
test
jmp
insb
std
xor
iret
rcll
in
js
jle
stos
lods
imul
pop
inc
jo
pop
cmpsb
outsl
xchg
xchg
sub
jmp
mov
and
shr
dec
and
mov
mov
inc
jns
add
stos
mov
xchg
in
xchg
ret
arpl
fisttps
or
imul
call
inc
fwait
or
push
sti
std
mov
filds
mov
das
stos
in
inc
je
add
cwtl
inc
shrl
cmp
inc
and
incb
adc
loopne
push
clc
add
movsl
mov
push
cmp
sbb
jle
push
and
mov
call
dec
pop
call
iret
or
das
shlb
xor
out
ljmp
pusha
sub
xor
xorl
loope
sub
call
inc
adc
cmpsl
aad
loope
lds
in
dec
int3
adc
shl
mov
push
and
push
cmp
pop
xor
cmp
mov
cmp
and
cmp
in
inc
aam
je
mov
mov
xor
jb
popa
jb
outsb
xchg
sub
jo
test
sti
push
adc
dec
jle
fldt
pop
inc
push
imul
das
add
mov
xor
std
call
das
lret
and
or
dec
dec
lea
outsl
mov
add
mov
push
repnz
fildl
dec
fmul
and
and
les
clc
jg
mov
call
sub
push
pop
fsubl
pop
mov
fsubrl
dec
jl
aad
push
push
fcmovne
dec
sbbb
je
push
inc
dec
call
sub
shrl
xlat
movsl
push
inc
mov
clc
adc
lcall
je
sbb
cs
cs
inc
xor
inc
xor
int3
or
in
pusha
push
lods
cmp
push
mov
mov
ds
int
std
lea
lods
in
or
call
mov
jl
push
mov
lds
mov
nop
mov
loopne
rcr
jle
xchg
cs
or
aas
arpl
or
loop
loope
adc
adcl
and
cli
stos
outsl
imul
mov
jo
lock
lods
stos
inc
loop
adc
sub
xor
inc
mov
and
lods
icebp
and
les
lods
repnz
adc
pop
xchg
add
jl
xchg
fbld
insb
insl
sbb
xlat
jle
mov
testl
mov
shll
popa
fmull
mov
or
mov
test
into
cmpl
mov
pop
es
lahf
jl
sub
fucomi
stos
test
add
mov
mov
int3
mov
fs
les
cmp
ja
sbb
mov
xor
dec
inc
lcall
popa
sbb
outsb
dec
adc
jb
inc
in
jp
jecxz
repnz
mov
stc
imul
push
add
pop
loop
inc
call
scas
jmp
sahf
xchg
lds
loop
aad
lret
shrb
jne
mov
push
add
cli
sbb
bound
insl
gs
add
enter
pop
out
mov
mov
mov
adc
rorb
mov
xor
mov
and
sub
sbb
pushl
call
cltd
adc
mov
push
inc
jnp
in
scas
aad
inc
aaa
pop
add
adc
inc
lods
bound
ss
testl
leave
jmp
push
je
jno
xchg
xchg
inc
movsb
xchg
inc
insb
int
lret
test
int3
jle
cmp
mov
sti
mov
fistl
loop
call
test
lea
xor
mov
rcll
and
int3
js
jo
and
mov
loopne
lock
jecxz
mov
sarb
mov
xchg
xchg
call
sbb
pop
js
popa
or
mov
adc
repz
mov
icebp
sbb
xchg
sbb
in
mov
out
push
xor
and
add
cmp
out
fucomip
dec
fwait
mov
sub
std
mov
or
push
loope
jbe
rclb
mov
or
mov
xchg
hlt
clc
dec
in
xor
je,pn
loope
movsl
or
mov
or
push
pop
lock
stos
mov
mov
pop
or
je
push
shl
push
aaa
push
pop
andb
sbb
jmp
lock
insb
adc
mov
or
rorl
mov
nop
test
or
push
mov
push
adc
and
arpl
or
cwtl
cmp
dec
mov
leave
andl
add
add
mov
jg
mov
nop
cmp
inc
subb
mov
mov
push
stos
mov
mov
lret
mov
lods
scas
sbb
or
jb
pop
out
cli
inc
push
jle
lcall
and
xchg
and
dec
adc
mov
nop
pop
mov
or
pop
push
rclb
pop
ret
popa
adc
push
lret
in
es
pop
jecxz
cli
pop
dec
xor
mov
add
xchg
push
stos
in
rcrb
push
mov
or
mov
fistl
stc
daa
in
inc
adc
push
jbe
pop
insl
pop
test
rcll
mov
xchg
push
outsb
into
sbb
mov
jne
add
in
inc
in
cmp
addr16
into
pushw
fwait
cmp
xor
and
or
aaa
mov
int
sbb
call
pop
adc
cmp
mov
das
jge
stos
hlt
jmp
mov
aaa
jmp
pop
mov
pop
dec
dec
push
or
sbb
mov
or
sbb
repnz
add
test
popa
pop
fsubr
xchg
jbe
or
pop
mov
sbb
pop
ficomps
insl
enter
insl
out
add
mov
dec
clc
adc
movsl
loop
add
mov
xor
dec
push
into
popf
shl
adc
jns
mov
ss
add
pop
mov
loope
test
push
or
mov
dec
outsl
movsl
das
fst
cmp
cmp
jmp
jmp
mov
jbe,pt
lods
mov
fsubs
shll
push
push
outsb
ljmp
jge
push
shrl
add
dec
pop
or
mov
je
sar
testb
jl
inc
and
ret
inc
mov
mov
mov
push
enter
in
fildl
nop
dec
mov
mov
push
fcmovnbe
cmp
add
or
or
and
adc
jge
rcrl
dec
cmp
loopne
js
mov
fiadds
popf
ss
lock
test
mov
popa
cmp
in
cmp
rcll
push
popf
fs
imul
add
clc
movsl
arpl
testb
mov
inc
jbe
cld
add
jp
sbb
clc
pushl
negl
in
arpl
dec
and
jp
sbb
iret
repnz
mov
andb
fildl
hlt
mov
insl
je
mov
ficompl
mov
iret
xor
aam
cli
shrb
je
dec
shll
mov
sbb
add
pop
test
push
insl
imul
mov
xor
or
fwait
pop
and
mov
mov
lret
leave
stc
and
cmp
xchg
jns
mov
or
sbb
je
inc
fiaddl
lds
repnz
adc
mov
mov
and
adc
je
fisubs
pop
aam
std
inc
rorb
cmp
ret
mov
mov
and
sub
movsl
jg
push
push
pop
jge
mov
add
adc
mov
pop
lret
add
shl
pop
sub
xchg
and
lcall
inc
sbb
push
into
insl
mov
aas
shlb
js
outsl
mov
adc
fbld
xchg
mov
adc
push
pop
pusha
lds
mov
ret
jle
xor
mov
xor
ret
outsl
rolb
roll
or
pop
jg
mov
mov
mov
xor
push
add
outsl
fildll
mov
ficoms
inc
icebp
pop
push
into
mov
fisubrs
mov
or
out
stos
pusha
leave
aam
ja
call
adc
shll
nop
and
dec
xor
aam
sub
sub
push
pop
outsb
shr
xchg
mov
shrb
and
adc
sahf
mov
mov
cmp
dec
and
dec
xchg
outsl
outsl
sti
cli
rorl
push
push
push
inc
gs
mov
testl
or
push
adc
and
adc
loopne
xlat
repz
es
xor
pusha
js
push
inc
push
pop
dec
add
testl
imul
lods
mov
rorb
loop
jge
clc
lea
pop
cmc
xchg
loope
and
mov
or
xchg
and
dec
outsl
shl
and
hlt
mov
js
aas
std
or
jne
cltd
and
dec
sbb
or
inc
mov
scas
sub
test
add
or
clc
xchg
pop
xor
sahf
and
shlb
mov
outsl
ret
inc
enter
dec
in
xchg
out
cli
inc
ss
mov
mov
insb
sub
ret
mov
push
pop
lret
mov
jle
fbstp
rcr
shlb
movl
pop
ljmp
call
fldenv
imul
cs
aad
mov
jno
and
adc
pop
push
aad
shrb
jecxz
movsl
ss
mov
dec
jnp
adc
adc
arpl
or
fistpl
mov
dec
es
pop
push
std
or
and
test
pushl
sub
je
divps
pushf
nop
dec
push
and
jbe
cmp
sub
mov
imul
mov
inc
int
adc
xor
cld
in
jg
or
pop
adc
jae
and
scas
mov
pop
pop
sub
clc
or
or
adc
adc
call
adc
add
mov
add
rolb
or
es
add
cmp
stos
adc
loopne
mov
and
pop
test
and
push
or
jno
and
scas
mov
mov
and
dec
inc
and
xor
cmp
jno
push
and
sub
fildll
mov
sub
rcrl
rorb
out
lock
cmp
xor
pusha
pop
imul
jno
adc
movsb
es
je
lret
hlt
pop
jns
cli
pop
fmull
shr
add
pop
adc
ds
jge
fistl
lea
aad
fists
adc
lock
or
mov
dec
dec
add
push
ss
pop
adc
or
repnz
xor
jbe
movsl
sbb
adc
add
mov
mov
and
insl
int
mov
push
mov
xor
cmp
ss
das
fistpl
bound
nop
gs
fidivs
pop
xchg
pop
mov
pop
or
movsl
fiadds
add
fmull
mov
mov
mov
push
mov
das
mov
xchg
push
jge
in
or
icebp
and
mov
mov
and
jns
movsl
and
test
mov
sub
xchg
pop
inc
repnz
mov
mov
dec
pop
adc
or
inc
out
cmp
shlb
cmc
cs
fcmovnbe
mov
test
sub
or
dec
shll
movsl
push
mov
fistl
outsl
notb
adc
dec
add
dec
fsubp
fistl
jecxz
inc
and
jge
call
add
sbb
and
mov
push
lahf
pushf
push
notl
aam
fcmovnu
testl
std
or
loopne
mov
das
pop
cmpb
jno
jns
shrl
xchg
adc
js
nop
and
das
fisubrl
dec
out
mov
mov
stos
and
sub
xchg
mov
dec
mov
pop
or
nop
shr
dec
shl
jbe
call
std
push
sti
push
push
pop
icebp
mov
or
orl
fisttpl
or
dec
rol
shr
add
in
inc
es
add
inc
cmp
outsb
pop
sar
dec
inc
push
push
jmp
mov
aam
lods
pop
mov
or
jecxz
push
pop
bound
inc
rorl
loop
scas
fildl
outsl
and
jne
rorb
sbb
inc
fsubrl
popf
xchg
daa
lret
test
mov
mov
pop
and
xchg
fiaddl
add
mov
push
push
sub
in
aad
jg
push
shlb
popa
cmpl
xor
mov
and
dec
mov
xor
fnsave
push
jne
jae
push
push
mov
dec
fwait
incb
fwait
lahf
or
in
add
and
daa
or
fsubrl
imull
push
daa
fidivs
push
std
jae
leave
je
movsb
xchg
xchg
sub
arpl
fbld
add
pop
xor
enter
sbb
cmpsb
test
push
sbbl
outsl
mov
sbb
pop
cmp
stc
lods
xchg
ds
sarl
or
call
pop
mov
or
je
or
pop
or
add
push
mov
jno
mov
jle
bound
inc
insl
fwait
outsl
add
sbbb
jge
mov
aam
aam
pop
imul
out
mov
or
push
inc
stos
aam
push
mov
lock
loope
mov
mov
ss
rorl
add
lcall
imul
mov
jmp
push
subb
in
cmp
push
enter
inc
mov
mov
ret
sub
mov
insb
sub
sbb
pushf
fwait
leave
paddusw
aaa
ficoml
les
push
mov
cmp
adc
adc
mov
add
ficomps
inc
mov
cld
insb
and
add
lea
pop
inc
push
popa
insb
push
dec
hlt
push
cvtdq2ps
and
aas
jbe
push
aam
fbld
jl
lret
mov
xchg
lcall
xchg
jmp
aam
add
mov
ljmp
loope
jecxz
popa
dec
ja
adc
shlb
mov
insl
mov
sarl
or
test
aad
test
rorb
push
mov
fists
clc
das
or
lds
adcb
xchg
aad
sbbb
movsb
dec
or
fnstcw
push
mov
push
mov
dec
filds
dec
nop
and
in
call
cmp
test
mov
fildl
je
aad
add
push
dec
pop
jae
iret
mov
dec
jge
pop
pop
xor
sub
insl
mov
mov
je
cmp
inc
jmp
pop
int
cmpsb
jecxz
dec
or
fsubr
xlat
das
xchg
fcomps
adc
sbb
add
pusha
gs
mov
popf
clc
push
outsl
mov
sub
insb
cmp
or
mov
call
fimull
xor
lods
dec
sar
xor
fimull
sub
sub
mov
inc
add
into
and
ret
mov
or
mov
dec
sbb
rcrb
adc
fists
jb
sub
out
into
test
pop
cs
loop
inc
int
imul
inc
je
pop
sti
test
outsl
pop
test
xor
sahf
dec
push
fs
sar
jne
call
orb
jb
fisubrl
jae
mov
fisubl
jge
cmpb
cmp
pop
pop
mov
mov
mov
push
sbb
test
xchg
xor
cmp
mov
jnp
sub
sub
adc
inc
and
xor
sahf
and
pop
fimull
dec
jo
fistps
insb
mov
popl
mov
jmp
lods
fisubs
mov
push
cmp
inc
inc
mov
mov
inc
adc
aas
aam
cmp
rorl
movsl
std
push
push
das
jo
mov
pop
inc
outsl
push
mov
push
mov
push
sar
je
mov
es
jae
in
cmp
fildl
cmpsb
stos
lcall
sbb
mov
out
dec
inc
dec
ljmp
dec
in
dec
sti
sub
movsb
call
loope
fs
sbb
fst
dec
mov
jge
sbb
jno
insl
lahf
aam
push
mov
inc
cmp
mov
inc
jno
xchg
xor
add
adc
shlb
xchg
adc
inc
call
mov
int
jne
xchg
jne
ss
fnstsw
push
imul
or
xor
mov
pop
cwtl
in
add
ret
in
xor
insb
mov
cmc
or
push
stos
jns
mov
lds
pusha
or
mov
iret
or
and
pop
fstp
pop
mov
cmp
pop
cs
cli
push
je
sbb
xor
sbb
insl
lret
daa
push
sbb
insl
add
lea
test
xor
jmp
sti
lea
cwtl
sbb
lahf
mov
and
jl
cs
jg
adc
fidivrl
test
rcl
lods
adc
xchg
cmpsb
pop
subb
mov
mov
cld
popa
fadds
push
lcall
sub
in
add
lods
stos
jo
lcall
in
fcmovnu
xor
jne
push
fldl
pop
das
pushf
or
sarl
stos
loop
or
push
cmp
jmp
faddp
sub
push
lea
lea
sbb
pop
inc
and
loope
add
push
aaa
or
or
sub
or
push
mov
ss
inc
je
sti
lock
fstpl
and
fwait
les
inc
sub
pop
arpl
sbb
roll
sub
fsubrs
inc
movsl
mov
int3
sbb
or
rcll
fsubrl
pop
mov
stc
sub
cmp
or
mov
aaa
sub
jne
pop
imul
loopne
mov
fcmovb
push
cltd
popf
adc
adc
pop
jnp
and
add
xchg
or
push
sbb
je
ret
and
call
fwait
jle
push
test
xor
loopne
cld
cmp
xchg
rcl
sub
mov
shrb
mov
jae
ficomps
icebp
adc
pushf
sub
cli
adc
cld
cmp
xchg
inc
out
add
xor
jbe
outsb
stos
inc
and
xor
push
scas
or
or
sbb
pop
or
sub
jnp
movsl
pusha
jmp
xlat
inc
adc
add
push
loopne
push
push
out
js
loopne
adc
inc
mov
adc
xchg
insl
call
jno
shlb
in
mov
cltd
divps
mov
cmp
imul
dec
dec
sub
scas
mov
pop
mov
mov
push
xchg
cmpsl
or
fiaddl
jae
add
cmp
decl
std
sub
shrb
loope
cmpsl
push
inc
mov
mov
cs
or
imul
aam
cmpsb
mov
xor
dec
sbb
fldt
jae
and
add
addl
mov
pop
shll
adc
hlt
xchg
sbb
mov
insb
lret
push
adc
or
in
stc
jmp
les
jo
out
pop
cmc
sub
mov
xchg
push
insl
aam
push
je
cmp
data16
loope
pop
mov
cmp
cs
jle
outsl
mov
fldl
inc
sub
mov
mov
cli
or
mov
aad
add
xlat
mov
inc
mov
xor
jge
std
sbb
inc
test
aam
sarb
xor
sti
sub
sbb
fistps
add
lock
fimuls
adc
ss
mov
inc
dec
shrl
repnz
inc
mov
mov
add
mov
pop
sbb
sub
add
or
fmull
jb
sub
mov
adc
sub
push
ja
and
out
jo
inc
and
les
lahf
push
filds
ret
ss
cmp
sbb
inc
push
sbb
xchg
jns
insl
imul
add
aaa
pop
dec
xchg
adc
add
test
cmp
mov
shl
movsl
sub
xchg
out
or
and
jo
jae
outsl
push
fidivl
xchg
mov
fisttpl
mov
sub
xor
ficoms
xchg
jl
pop
pop
icebp
jmp
repz
das
adc
inc
dec
push
pushf
aad
pop
enter
xchg
adc
xor
orb
movsl
mov
mov
mov
jb
das
mov
push
es
and
scas
inc
or
loope
je
icebp
in
data16
test
fxch
xor
int
pop
imul
addps
mov
sbb
inc
cmpsl
xor
loope
inc
loope
inc
pop
mov
jno
mov
xor
mov
mov
jmp
loop
fstp
mov
jp
insb
pop
dec
xchg
movsb
andl
mov
pop
jo
pusha
repz
mov
fmuls
adc
push
cmpl
or
mov
dec
sahf
aas
push
xchg
mov
das
pop
pop
jne
or
je
sub
or
mov
into
mov
movsw
mov
ss
mull
daa
xor
and
flds
adc
xchg
push
push
fxch
or
imul
pop
mov
adc
into
imull
mov
lcall
and
or
repnz
push
adc
cmc
dec
shlb
mov
daa
inc
pop
insb
or
adc
or
push
and
dec
loopne
or
push
les
imul
fildl
inc
inc
popf
mov
fnsave
inc
mov
xchg
aas
cmpsb
into
rcrl
stos
xorb
jl
lock
loop
mov
or
in
inc
xor
pop
push
stos
cmpl
push
nop
xor
orb
mov
mov
or
push
gs
das
loope
dec
stos
outsb
jmp
shll
dec
jne
mov
loop
in
out
insl
dec
out
xor
imul
popf
fcoms
cmpsb
ja
add
mov
pop
aaa
xchg
loope
pop
nop
out
or
cmc
push
cmp
cmpsl
push
mov
inc
mov
sbb
stos
js
gs
add
call
and
and
mov
nop
mov
sbb
insl
icebp
mov
mov
adc
sbb
mov
lds
sbbb
pop
xlat
adc
or
inc
fwait
add
into
mov
fisttps
fstps
test
arpl
call
adc
ret
cmp
out
sbb
mov
jo
add
and
fsubr
aaa
mov
aad
adc
shrl
cli
or
pop
jecxz
pushf
or
les
or
or
cmp
inc
xor
dec
loopne
mov
mov
sub
rclb
dec
and
cli
pop
mov
iret
and
lea
call
mov
jp
pop
hlt
push
adc
scas
aaa
lcall
cmp
add
and
pop
cmp
enter
mov
push
ss
cmp
sbb
mov
push
xor
in
je
jo
rorl
mov
es
sub
pop
dec
jge
push
test
adc
inc
loopne
mov
push
ficomps
cmc
and
test
aam
lcall
lcall
je
add
std
int
fistpll
mov
push
push
jmp
jl
ja
push
lahf
or
and
cmp
shlb
mov
push
sbb
test
mov
or
ja
pop
mov
inc
scas
adc
fstpl
add
gs
cmp
lock
insl
sub
and
rcl
mov
push
mov
jns
jmp
inc
ror
insl
or
fstl
call
ret
mov
and
mov
test
or
push
and
imulb
je
fs
orb
shrl
fs
insl
mov
pop
pushf
jae
in
xchg
jo
mov
imul
rcrl
adc
rol
jp
dec
adc
sub
out
je
inc
or
xor
lds
sti
xchg
test
jne
inc
orl
jae
cmp
or
jp
movsl
fildl
je
in
push
incl
pop
clts
ret
mov
hlt
mov
mov
mov
mov
inc
negl
add
mov
std
or
jg
push
mov
cmpsb
into
lahf
dec
daa
cs
outsl
or
inc
sarb
insl
xchg
xchg
xor
push
shrb
mov
xor
lea
stos
pop
cmpl
movsl
aaa
mov
pop
in
cltd
jle
int
xor
sub
in
rcl
xchg
sub
ss
in
push
or
cmp
outsb
call
ja
xchg
sbb
inc
insl
sti
into
aam
add
jle
fmuls
dec
test
push
lcall
pusha
mov
js
or
sub
out
mov
inc
pop
and
ret
adc
mov
inc
push
stos
adc
leave
mov
sbb
jmp
xchg
sub
lock
mov
popf
and
insl
sbb
aaa
mov
and
rorb
xchg
dec
iret
cs
adc
out
cmp
test
gs
sub
or
xchg
cmp
xchg
loope
cmp
xor
enter
outsl
das
shr
std
and
cld
in
sub
mov
cmp
int
lret
lahf
pop
push
out
loopne
lret
ret
stos
cmc
aaa
jl
mov
push
push
aaa
mov
sub
mov
cmp
outsb
mov
push
in
cli
popa
cmp
and
addb
or
or
fcoms
mov
push
cmp
pusha
sub
loopne
mov
sbb
or
pushf
mov
in
mov
dec
jmp
arpl
cltd
mov
push
cmp
xchg
push
push
xchg
push
mov
jmp
xor
incl
stc
and
and
gs
add
inc
inc
and
das
movb
sub
movsb
push
aaa
or
imul
idivb
sahf
add
dec
dec
hlt
outsl
jb
adc
addl
fwait
mov
or
test
call
dec
and
jg
pop
jmp
mov
or
call
pop
imul
xchg
push
idivb
dec
repz
cli
call
jg
jl
and
cmp
int
jl
pop
outsb
rorb
jno
sahf
and
int3
movsb
ficomps
fisubl
rol
in
inc
mov
jno
push
mov
mov
fisttpll
jno
sub
mov
adc
mov
mov
mov
xor
js
gs
stc
sbb
mov
xor
dec
sbb
mov
aad
pop
push
push
add
inc
in
mov
or
mov
call
aaa
aad
mov
rorl
or
in
mov
ds
je
xlat
push
fcom
or
aam
sub
add
imul
or
int
mov
adc
adc
push
sbb
aaa
ljmp
mov
and
push
lret
adc
test
pop
insb
cmp
cli
inc
int
test
jg
notb
or
xor
sar
jg
cmp
mov
adc
shlb
or
push
pusha
fisubs
bound
or
cwtl
push
mov
xorb
out
lcall
into
and
or
js
lds
add
mov
push
push
fbstp
mov
push
jmp
cltd
dec
ss
out
lcall
or
pmulhw
xor
and
lods
pop
js
or
lods
cmp
insl
subl
shrb
lods
je
xchg
fisubrs
movsb
js
cmp
add
or
add
cs
in
xor
pushf
dec
and
mov
mov
and
int3
rcrl
adc
mov
fistpl
sub
xchg
and
mov
jmp
in
pop
ljmp
sbb
cmp
jmp
or
inc
outsl
in
jnp
lods
call
notl
scas
repz
sarl
or
repnz
cmpsb
jbe
xlat
or
mul
fcomps
xor
dec
sahf
pop
adc
lods
fneni(8087
xchg
sahf
addl
jmp
sarb
fidivs
ret
sub
adc
sbb
fsub
push
test
std
cmp
iret
and
pop
jg
xchg
mov
shr
and
outsb
ljmp
pop
jo
inc
sub
push
add
sub
addr16
ljmp
test
fmuls
sub
pop
inc
ret
pop
xlat
inc
lods
cmp
ljmp
hlt
xor
push
xchg
filds
inc
adc
push
outsl
mov
fimuls
mov
push
lcall
add
and
mov
mov
pop
jmp
add
xlat
xchg
fdivrs
test
and
mov
mov
add
xchg
or
stos
and
mov
or
inc
sbb
xor
push
and
fs
pop
and
fdivrs
or
aaa
pop
adc
adc
sub
mov
mov
xchg
in
faddp
cli
je
aaa
ljmp
fldcw
in
push
scas
pop
cmp
push
add
je
fldt
dec
mov
dec
lods
or
mov
jo
bound
xchg
testl
mov
dec
inc
inc
loopne
push
or
mov
add
pop
popf
js
jb
out
mov
outsl
adc
je
std
loopne
ss
call
aam
inc
push
rorl
jle
or
fidivrl
inc
push
mov
insb
mov
pop
sbb
mov
mov
hlt
lcall
pop
mov
inc
cmpsl
adc
mov
mov
mov
cmp
ds
outsb
fcomps
push
add
das
xor
jne
cmp
sub
roll
test
dec
push
cmp
xchg
je
lret
jno
js
mov
rcl
inc
inc
movsb
test
inc
clc
push
mov
add
mov
cmp
mov
cmp
or
sbb
adc
sti
push
mov
insl
sub
adc
aad
out
ss
mov
jno
sub
mov
push
add
mov
cmp
jg
adc
pop
xchg
cli
cli
push
or
dec
leave
dec
push
je
dec
insl
outsl
mov
jmp
jno
ss
cmp
out
imul
mov
jno
add
push
pop
outsb
inc
cli
inc
mov
fiadds
fwait
jl
inc
insl
movsl
bound
jle
sbb
pushl
lods
inc
cld
jbe
cmc
adc
imul
xchg
or
jns
fsubr
sub
hlt
mov
cmpsl
ffreep
sbb
push
in
out
andb
xlat
je
pop
aad
mov
add
sbb
pop
sub
mov
jo
xchg
pop
movsb
adc
and
push
flds
lods
inc
je
or
or
add
fcoms
in
sbb
mov
jo
outsb
fiaddl
loope
aas
mov
inc
in
notb
stc
std
pop
loop
or
stos
and
lods
loopne
pop
ds
and
and
fists
adc
push
cld
insl
arpl
push
mov
xor
add
aaa
sub
xor
sbb
pusha
fisttpl
in
jae
pushf
cmp
outsb
jmp
call
jo
insb
xchg
dec
mov
jb
ret
push
mov
sbb
lret
jge
and
sub
mov
imul
mov
loope
xchg
mov
add
fiadds
lahf
shll
fsts
das
cmp
inc
xor
jmp
aaa
adc
bswap
xchg
inc
jns
mov
push
aaa
aam
mov
jb
push
inc
cltd
jle
test
or
pushf
sarl
sbb
mov
xor
and
sub
mov
cmp
adc
or
xor
shll
or
loope
sbb
stc
pusha
dec
incl
push
push
and
lret
call
mov
inc
mov
insb
loop
aam
push
shr
sub
pop
pusha
xchg
add
mov
jno
lods
dec
xchg
mov
add
sbb
inc
call
stos
mov
movsl
pop
mov
bound
je
das
jbe
xchg
inc
jb
js
fs
or
cwtl
stos
push
and
das
test
pop
mov
mov
icebp
or
aam
pop
lcall
jg
test
mov
cmp
inc
pop
push
cmp
xchg
jmp
add
xlat
outsb
cmp
mov
or
ljmp
push
mov
lods
push
sbb
dec
mov
mov
mov
jmp
adc
xchg
mov
dec
fidivrs
pop
mov
cmpxchg
cld
jbe
jmp
mov
jb
jns
fwait
mov
cli
imul
fnstcw
and
test
outsl
outsl
mov
adc
inc
inc
in
mov
mov
mov
push
inc
sbb
push
sub
xor
or
call
xchg
mov
ss
call
inc
and
rolb
sbb
add
cmp
inc
cltd
mov
lret
mov
dec
mov
dec
mov
and
pop
movl
push
loope
add
push
icebp
repz
sub
sub
cmpsl
inc
sub
push
ljmp
int
mov
and
data16
in
dec
in
sub
sub
ja
in
mov
adc
out
dec
or
inc
xchg
pop
xor
mov
pushl
out
adc
adc
leave
mov
inc
jle
fnstcw
sub
and
daa
inc
jno
jecxz
addl
sbb
mov
repnz
dec
pop
lret
mov
inc
imul
cmp
loopne
and
mov
repnz
mov
lods
jns
pop
das
mov
pusha
inc
pop
and
push
fldl
test
movsl
test
outsl
mov
push
es
repnz
mov
fwait
rorb
add
and
jecxz
jp
in
fisubs
mov
dec
aad
pop
and
vdivsd
inc
daa
sub
mov
mov
inc
lods
movmskps
je
je
adc
push
jmp
adc
add
pop
and
fs
jge
inc
jmp
xlat
add
or
or
dec
xor
je
push
loopne
push
adc
repnz
add
cmp
mov
stos
sub
icebp
stos
sub
repz
cld
and
push
or
xchg
push
ss
mov
shr
xchg
les
mov
push
sbb
fbstp
mov
add
call
stos
cld
popa
jmp
enter
adc
incl
leave
push
popf
mov
push
nop
sbb
cmp
mov
loope
imul
out
mov
mov
js
pop
loope
test
sub
or
dec
and
int3
lock
jp
flds
cli
pop
pop
cli
in
mov
or
sub
leave
adc
xor
and
push
fnstsw
cs
loop
push
or
add
pushf
ds
das
xchg
imul
je
adc
dec
add
adc
fs
out
mov
call
decl
cmp
loopne
mov
sub
cmpsb
mov
fcoml
mov
callw
aam
cmc
pop
gs
int3
xor
or
xchg
pushf
call
stc
mov
jle
loopne
or
inc
mov
sub
cmp
sarb
and
popa
sub
loopne
and
jge
mov
ljmp
inc
push
ret
outsl
xchg
call
mov
push
push
sarb
push
cmp
imul
lahf
cli
imul
stos
adc
sbb
sbb
jg
push
sbbl
js
test
loope
loope
lods
adc
jns
push
push
mov
and
pushf
add
loopne
pop
loopne
test
xchg
ret
pop
inc
and
shr
dec
inc
mov
das
xor
mov
pop
pop
lsl
lea
sub
add
adc
cmp
fildll
mov
or
push
call
pop
incb
mov
cmpsl
paddd
ja
cmp
mov
xchg
mov
mov
or
pop
add
mov
sahf
inc
and
leave
je
repz
ret
push
out
testb
icebp
rorl
mov
mov
test
inc
cmc
mov
rcr
fld
lds
fiaddl
push
adc
or
push
lods
jbe
fcmovb
cmc
inc
pop
push
add
cmp
push
shll
das
subb
inc
push
fcompl
out
sbb
lds
fisubrl
lock
je
aas
popa
pop
ljmp
imul
lret
gs
negb
xor
mov
mov
pop
stc
fnstsw
lea
mov
xchg
inc
ret
mov
cmpb
je
andb
mov
xor
adc
dec
push
aaa
lock
sub
out
in
je
or
add
inc
stos
imul
or
xchg
js,pt
sarl
icebp
or
xchg
ljmp
dec
aaa
mov
inc
xor
mov
lret
js
adc
imul
bound
inc
push
outsl
mov
sub
xchg
sbb
pop
cmpsl
and
lods
insl
sti
push
add
fs
mov
imul
clc
sub
jge,pn
int3
mov
rorl
nop
push
dec
test
js
pop
and
sub
cmp
roll
pop
fcom
push
xor
stc
and
fnstsw
adc
push
negl
push
adcl
divl
cmp
fldenv
loop
jne
add
inc
jecxz
inc
clc
dec
cmpsl
test
add
push
je
xchg
clc
sub
mov
js
mov
in
pop
loop
pop
push
add
jge
adc
mov
push
xor
je
pop
rorb
pop
jge
fadd
roll
xchg
and
and
js
data16
rsqrtps
or
sar
pop
or
mov
je
jno
adc
call
loop
nop
mov
pop
in
es
mov
or
sar
pop
and
and
dec
jne
dec
or
xor
sbb
and
jmp
in
pop
pop
add
cmp
or
out
pusha
mov
das
aam
fmuls
push
adc
dec
mov
fidivs
out
xor
and
cmpl
fldl
in
mov
and
cld
popf
jle
lock
aaa
mov
ret
sbb
cmp
mov
ljmp
push
cmc
imul
jg
push
lock
aam
xchg
in
adc
mov
call
mov
into
leave
jnp
jl
and
add
loope
in
repz
fistl
jp
leave
popa
adc
pop
push
sub
push
sbb
xchg
aad
in
add
or
fldl
dec
cltd
inc
dec
outsl
xchg
imul
xchg
and
daa
in
jl
loopne
add
sbb
call
dec
sbb
mov
cwtl
test
ljmp
fimuls
pusha
push
je
and
out
loopne
push
insb
sbb
sub
ljmp
mov
xchg
jne
sub
je
jns
mov
mov
jg
js
sbb
inc
add
cmp
or
cld
pop
push
add
jne
test
cmpsb
sbbb
or
sub
jge
jne
jmp
shlb
push
xor
pushf
cli
das
cmpsl
js
aaa
scas
mov
xlat
push
jb
adc
lcall
cld
cli
push
inc
addl
fisttpll
call
arpl
adc
inc
aaa
imul
mov
pusha
int3
call
out
out
fmuls
dec
jb
mov
test
imulb
adc
push
jne
mov
sbb
mov
ret
test
stos
mov
popa
push
dec
cmpsb
mov
aam
mov
xchg
adc
std
or
ret
loopne
sbb
inc
sbb
mov
pop
push
jecxz
push
mov
pop
loop
inc
lret
ds
or
repz
lret
dec
sbb
mov
cmp
jo
dec
addr16
xor
dec
je
jbe
movsl
pop
cmpl
inc
add
mov
add
mov
mov
out
adc
mov
outsb
std
rorb
and
sti
call
call
mov
add
and
sti
cmp
sbb
pop
or
les
push
mov
sti
inc
lds
and
lahf
add
add
inc
das
test
lcall
mov
in
adc
add
mov
xor
jmp
xchg
push
ret
movsb
and
dec
jle
push
sub
inc
sub
lock
pop
inc
aad
or
cmpsl
pushf
jecxz
or
leave
cmp
pop
xchg
repz
lock
pusha
pop
add
and
and
xorl
jg
mov
sub
insl
movl
aas
xchg
jo
out
mov
pop
adc
or
push
roll
pop
push
and
in
hlt
lahf
xlat
sub
inc
aas
ficompl
mov
xor
mov
ret
jge
cld
outsb
mov
inc
inc
rolb
xor
addl
sbb
je
inc
sbb
sbb
adc
loope
cld
lea
das
jmp
call
add
add
mov
sub
loope
insl
mov
imull
mov
push
cmp
cld
jl
aam
or
je
je
test
xchg
push
imul
mov
push
push
out
mov
push
dec
mov
mov
arpl
call
add
and
push
fisttpl
std
pop
repnz
push
or
sub
bnd
pop
stos
sbb
dec
mov
push
out
cmp
pop
push
mov
mov
stos
fisttpll
insb
and
clc
js
bound
leave
loope
sbb
mov
sbb
cmpl
call
iret
ret
into
cli
mov
rcrl
cmp
xor
dec
sub
daa
fistps
insl
jne
dec
mov
call
push
fcmovnb
push
pop
push
icebp
iret
enter
sahf
lea
movsl
push
adc
sub
test
xor
jge
int
sbb
decb
mov
hlt
xor
nop
arpl
dec
and
test
shll
xor
outsb
adc
sahf
lods
sbb
and
pop
and
loop
dec
std
ret
iret
inc
sbb
xchg
mov
cs
pop
imul
lahf
mov
and
push
mov
pusha
xchg
mov
cli
mov
add
fdivrp
insl
mov
mov
je
insl
mov
xor
and
je
paddd
loop
or
ret
fistpll
sti
pushf
adc
and
loop
jns
sbb
ret
orb
inc
loop
lahf
xorl
in
enter
xor
and
sbb
mov
mov
mov
ret
or
push
popa
dec
pushf
das
mov
insl
adc
cmpsl
lcall
ss
pop
pop
pop
inc
ja
in
cs
lock
lea
movsl
and
dec
mov
test
popa
sti
push
mov
pop
aas
rolb
push
addr16
lods
mov
dec
and
mov
je
cs
roll
mov
push
or
shlb
sub
xor
shlb
inc
mov
and
fists
mov
mov
lds
jecxz
or
and
inc
je
push
sbb
test
cmp
pop
sbb
adc
push
sbb
sbb
hlt
or
mov
lock
and
rorl
arpl
xor
mov
dec
push
inc
add
jne
xorl
into
dec
push
xor
aad
dec
icebp
insl
ss
mov
aam
xchg
rorb
in
fwait
cmpb
lds
sbbb
pop
rorb
notl
push
outsb
daa
sbb
in
pop
int3
sbb
adcb
fistpl
in
push
icebp
jl
push
in
cmp
sub
and
stos
jbe
push
ss
xor
call
push
mov
inc
xor
lock
or
dec
cmp
xor
pusha
out
iret
inc
fistps
jmp
dec
loopne
in
rcrb
fildl
adc
pushf
in
push
mov
xor
in
mov
add
daa
push
mov
in
into
jg
or
fcmovu
mov
cmpb
sub
and
and
cmp
add
les
push
and
aam
adc
pop
mov
xchg
xchg
adc
ret
push
push
push
adc
mov
jno
data16
aas
push
mov
in
test
ds
mov
jns
outsb
adc
js
out
jle
or
xor
cli
or
mov
daa
fiaddl
and
icebp
popa
xchg
pop
add
mov
mov
mov
push
loopne
sbb
cmp
jns
push
push
outsb
mov
jae
cmpsb
and
es
cmp
out
adc
mov
push
sbb
arpl
mov
ds
stc
pop
sbb
xor
mov
ret
cmp
jbe
icebp
xor
mov
cmp
lds
lea
push
out
daa
lret
call
add
rorl
pop
pop
mov
push
inc
shr
in
and
adcl
out
sub
arpl
mov
outsl
sub
mov
call
lds
mov
aad
sub
insl
vxorps
push
mov
sbb
add
in
jo
or
add
in
rclb
xor
mov
jmp
rep
and
or
or
or
out
inc
jb
das
sbb
loop
and
inc
cmc
sub
inc
and
lret
add
cmp
sbbb
and
xchg
insb
lea
lahf
ret
xor
inc
lods
xchg
je
adc
ss
jo
or
push
shrd
insl
imul
jp
push
pop
pop
pop
aas
add
inc
imul
out
addr16
xchg
mov
push
sbb
lahf
sbb
cs
jmp
cmpsb
adc
pop
or
mov
test
add
out
daa
dec
xchg
cmp
jns
add
fsubr
inc
fs
inc
ja
ret
mov
push
add
roll
mov
add
mov
ss
xchg
sub
cmpl
insb
add
sbb
ret
dec
mov
sbb
aam
das
out
in
inc
shrl
ja
add
jmp
sbb
mov
enter
cmp
aaa
inc
xor
add
std
inc
adc
sbb
add
inc
push
mov
int3
push
or
mov
loope
fcoms
leave
xchg
les
sbb
es
jno
gs
jl
inc
jp
sub
shlb
add
out
mov
jge
dec
push
shrl
cmpsl
fisttpll
imul
xor
push
xchg
inc
sub
mov
mov
rep
ss
xor
incl
jmp
push
pop
mov
or
mov
dec
mov
lds
dec
add
cs
scas
push
cmp
mov
jp
and
leave
cmp
or
or
and
sub
lds
sub
add
mov
std
push
addb
enter
insb
pop
dec
push
push
lret
jne
mov
fcmovnbe
xor
sahf
sbb
push
loope
clc
adc
insl
xor
or
pop
jmp
popa
mov
pop
mov
stos
sbb
adc
into
mov
push
inc
adc
call
in
enter
mov
fdiv
xchg
dec
and
pop
jns
outsl
rcll
jbe
and
inc
adc
mov
add
push
insl
sbb
test
test
or
inc
push
cmpsl
pop
lret
insb
mov
adc
loop
shlb
push
jnp
jmp
stos
xchg
shlb
imul
cli
stos
sub
call
add
xchg
adc
ljmp
frstor
shrb
cli
jnp
jbe
jno
adc
jle
pushf
xor
pop
sub
adc
call
loopne
mov
cmp
and
mov
mov
fmull
addr16
xor
cmpsb
push
push
out
je
or
lods
stos
adc
mov
icebp
clc
pop
jae
cmpsb
add
push
jae
in
jne
jnp
push
loopne
ja
fs
pop
fildl
or
jne
pop
push
fistl
inc
scas
jg
adc
sti
out
arpl
test
out
adc
sbb
mov
lock
and
rcrl
mov
cmpsb
pop
and
imul
test
mov
negb
fisttpl
push
adc
push
lods
jmp
call
mov
ljmp
icebp
mov
hlt
add
dec
sbb
sbb
imul
shr
or
sub
insl
mov
lret
jne
fwait
pop
leave
aam
push
test
mov
fcom
fstl
or
pop
fmuls
xchg
arpl
nop
rorb
mov
pop
mov
adc
push
xchg
loopne
sub
lods
inc
xor
rorl
lods
or
mov
and
sub
mov
bound
push
inc
pop
cmp
repz
daa
dec
push
xchg
or
aad
adc
push
push
fcomip
add
fst
or
adc
repnz
inc
lods
ss
jnp
or
repnz
fwait
cmpl
sbb
sbb
adc
and
mov
or
push
cmc
sbb
outsl
sbb
ss
ret
inc
call
push
scas
incl
call
js
mov
mov
into
or
jb
and
sbbb
lods
out
inc
push
movsb
call
lods
add
or
icebp
adc
pop
mov
cmc
sub
mov
xchg
or
sub
popf
mov
sbb
test
push
inc
insb
stos
imul
cmc
add
mov
ss
ficoms
lret
je
out
andb
in
out
sbb
jbe
push
pop
cli
jb
jp
jl
negl
std
pop
mov
and
scas
inc
into
ret
fwait
xor
sbb
jmp
adc
xchg
insb
pop
aad
sbb
adcl
fisubl
hlt
jmp
push
adc
inc
pop
gs
jmp
insl
fcmovnb
scas
pop
or
aaa
sarl
popa
sbb
push
and
ror
add
int
testb
inc
sub
add
insb
and
sahf
in
cmp
je
scas
jne
or
mov
lahf
mov
cmp
or
and
cmp
sub
xor
push
movsb
sub
sbb
andl
mov
and
jl
sahf
push
imul
je
mov
das
push
jno
fisubrl
test
sub
arpl
jne
dec
add
and
or
insl
es
into
call
mov
bound
fs
or
add
pop
or
or
hlt
jo
cmpsb
fwait
mov
mov
test
mov
mov
ss
inc
push
sbb
lods
aad
inc
sbb
jge
in
sbb
orl
jbe
pop
inc
insl
or
and
ss
cmpsl
xor
fucom
insb
je
mov
jmp
mov
jge
mov
inc
sub
mov
test
hlt
scas
pop
lds
adc
xchg
imul
pop
mov
add
or
sbb
addb
jbe
jg
es
fimuls
hlt
dec
repnz
mov
pop
out
lcall
and
aad
mov
js
lahf
pop
iret
or
xor
inc
and
mov
mov
dec
iret
push
cmp
lea
pop
jg
adcb
popf
jnp
push
mov
dec
sbb
xchg
sub
outsl
xor
pop
test
pop
or
xchg
pop
mov
aaa
mov
into
lds
fcomi
and
dec
push
sbb
adc
std
sbb
scas
mov
adc
aas
sub
pop
imul
cli
jnp
popa
xchg
sbb
add
dec
jno
push
push
adc
mov
call
xor
pop
xchg
test
outsb
push
lret
pop
xchg
push
xchg
loopne
arpl
or
aaa
push
stc
jecxz
jbe
xchg
dec
adc
cs
repnz
xlat
push
in
outsl
cld
mov
imul
adc
or
cmpsl
and
sbb
iret
testb
popa
xchg
or
subb
xor
insl
popf
dec
push
jmp
fdivrs
nop
inc
add
aad
jo
push
sbb
push
sbb
test
je
jg
inc
in
std
inc
rolb
jge
das
call
pop
fisttpl
ljmp
outsb
idivl
inc
jmp
jo
mov
inc
inc
insl
icebp
mov
mov
les
lret
jmp
add
lock
or
lods
gs
cld
or
addr16
test
jmp
sub
mov
sub
hlt
rclb
sub
test
mov
imulb
sub
inc
mov
daa
clc
push
jbe
adc
out
fs
push
add
xor
add
mov
clc
jl
lock
dec
sbb
cmp
stos
jmp
dec
sub
adc
cmp
or
icebp
inc
test
fcompl
clc
jne
push
clc
cmpsb
sub
ja
adc
adcl
ljmp
pop
je
jg
nop
call
adc
dec
js
jecxz
fdivl
jns
and
mov
adc
sub
scas
int3
jne
and
push
fwait
pop
stos
sbb
and
shrl
push
aaa
or
cmpsl
push
add
ficoml
imul
ljmp
dec
lods
fucomip
inc
xor
hlt
dec
icebp
popa
je
add
pop
call
inc
mov
daa
push
mov
push
sub
popf
outsl
mov
and
inc
imul
sarb
sub
adc
add
rclb
pusha
mov
pop
mov
jg
sbb
pushf
push
xor
sbb
mov
dec
sarb
and
push
shufps
jg
and
mov
xor
mov
xchg
data16
jge
or
loopne
in
lock
jnp
or
pushf
dec
cld
xchg
outsl
sbb
mov
inc
mov
clc
filds
daa
push
and
and
iret
jle
pop
hlt
movsb
push
adc
jge
mov
sub
cmp
inc
dec
imul
jbe
test
cld
aaa
pop
call
aaa
insl
adc
push
pop
adc
lods
sub
mov
or
test
shlb
mov
rorl
push
adc
inc
ja
imul
mov
out
sub
xchg
lods
pusha
out
mov
or
insl
mov
inc
mov
pop
enter
adc
xorb
inc
push
mov
nop
xor
and
pushl
fisttpl
sti
icebp
and
clc
inc
pop
mov
push
jne
cli
adc
int3
lret
pop
shr
ja
roll
lds
push
rolb
mov
fcom
mov
pop
ds
fidivs
stos
fsubrs
aad
cmc
fsub
fs
ret
push
push
lods
xchg
dec
das
sbb
mov
neg
cli
out
mov
rol
test
pop
mov
adc
or
cmp
idivb
jo
mov
inc
frstor
cmp
fs
call
cmp
sub
ret
in
xchg
cs
shll
lahf
or
pop
sar
pop
orb
jl
ror
inc
lods
je
jne
mov
adc
call
lahf
inc
mov
jne
stos
jne
nop
pop
inc
mov
subl
insl
les
cltd
fdivrs
xor
jmp
pop
xchg
loopne
xor
aaa
push
jno
pusha
mov
or
mov
cmp
das
add
add
test
or
jno
je
cmp
dec
pop
pop
mov
pusha
or
push
negb
out
mov
sbb
inc
imul
mov
cltd
mov
mov
inc
lret
hlt
pop
cmp
adc
jo
jns
fdivrl
pop
adc
test
dec
lock
mov
mov
cmpsb
daa
rclb
mov
pop
or
cltd
xchg
je
inc
lock
mov
sbb
lret
pop
scas
movsl
jmp
or
int
in
jle
std
xorb
sub
mov
add
xor
loopne
das
loopne
pop
xor
cmp
mov
test
in
push
or
call
aam
hlt
xorl
inc
inc
pop
rcl
sub
movq
mov
mov
inc
cwtl
add
insb
insl
add
adc
sti
push
dec
repz
xchg
sub
jecxz
fisubl
and
jmp
lret
cwtl
test
jbe
fidivs
pusha
test
jne
push
loope
rcrb
cmp
pop
rcrb
lds
xor
dec
mov
sbb
dec
lahf
inc
arpl
mov
cmc
pop
jle
dec
bound
shll
ret
bound
adc
out
leave
es
mov
lret
xchg
inc
xchg
sbb
or
fwait
jmp
imul
push
mov
lcall
in
add
mov
mov
sbb
in
out
lret
jp
addb
fidivl
adc
shlb
push
mov
lea
dec
sbb
pop
mov
imul
js
pop
xorb
lods
adc
aaa
cmp
js
lea
xor
dec
cld
das
aam
and
hlt
push
sub
adc
mov
addr16
clc
and
pop
xchg
xor
inc
push
xor
and
imul
js
jo
imul
movsl
lret
outsl
sbb
xchg
adc
in
xchg
mov
and
notb
pop
inc
sti
jecxz
negl
test
mov
push
ret
loope
add
xlat
pop
fwait
arpl
push
addr16
adcl
add
sub
insl
xor
dec
lock
cwtl
imul
add
cmp
xchg
push
jecxz
push
dec
cmp
jle
jno
mov
xchg
mov
sbb
ret
sub
icebp
or
adc
push
repz
arpl
cmp
aad
mov
pop
icebp
xchg
mov
cli
and
icebp
inc
push
push
cmp
outsb
xlat
push
xchg
dec
adc
mov
xor
mov
shrb
mov
mov
loope
xchg
test
je
call
jg
dec
ffreep
ja
arpl
scas
stc
push
xor
fidivs
ds
loope
addl
icebp
lods
mov
stos
imul
jnp
lret
lahf
push
outsl
xchg
sub
jp
sbb
clc
and
dec
and
lock
insl
mov
or
clc
jle
inc
push
shr
mov
pop
inc
mov
orl
cmp
fcoms
std
add
popa
mov
xchg
jmp
inc
cltd
cmp
or
sub
jo
sbb
jl
or
outsl
aaa
add
xor
cmp
out
mov
push
or
jne
outsl
test
fadds
or
or
fs
inc
cld
fisttpl
fdivrs
sub
or
and
push
push
fisubrs
adc
push
stc
and
inc
adc
dec
shlb
test
inc
rcll
inc
call
les
sub
jno
out
and
in
mov
iret
in
cmc
inc
push
in
loop
fwait
cmp
cmc
cmp
je
add
and
adc
xchg
lret
xor
enter
push
push
enter
sub
gs
and
cmpsl
outsb
adc
aaa
fmuls
ret
jl
dec
add
sub
add
cmp
jo
mov
cmc
sbb
lahf
dec
outsl
jae
mov
pop
jmp
cs
popf
mov
mov
out
mov
in
fnstsw
outsl
sar
mov
mov
call
icebp
mov
jle
mov
insb
test
sub
dec
adc
clc
pop
lahf
cld
or
push
dec
xchg
les
mov
pop
cmc
xchg
sub
add
dec
fucomip
and
shlb
mov
jnp
adc
and
pop
jp
dec
hlt
fildl
cmp
or
loopne
pop
jo
in
add
and
push
enter
divl
and
jne
je
xchg
or
xor
fcmovu
je
ret
mov
mov
cmpb
sub
lcall
cltd
add
push
push
adc
icebp
push
or
aam
inc
imull
clc
dec
cmc
scas
mov
adc
mov
dec
fsubrs
push
das
xchg
lock
cs
mov
xchg
nop
push
clc
ret
je
test
jge
sbb
xor
fsts
bound
mov
loop
ret
sbb
shll
je
mov
cmp
and
adc
and
in
testb
cli
insb
dec
ror
jmp
push
jge
es
adc
mov
decb
aad
bound
push
data16
xor
mov
mov
inc
addr16
shll
jne
ljmp
adcl
lret
ds
mov
in
and
add
shlb
mov
ja
mov
sub
xor
mov
ljmp
jmp
dec
mov
inc
sbb
ficompl
fists
lods
mov
sbb
or
fsubl
test
stc
js
or
mov
mov
sarl
xor
pop
call
loop
inc
mov
aaa
xlat
and
mov
xor
dec
cmp
xor
ljmp
into
sahf
call
pop
xlat
cltd
add
xor
pop
mov
push
mov
push
and
push
sub
sbb
sub
jp
mov
in
inc
shrb
sbb
and
mov
mov
inc
sbb
out
sbb
dec
dec
imul
mov
mov
insb
mov
dec
push
xchg
pop
inc
mov
pop
push
cmp
cmpsl
cmp
mov
adc
xor
fadd
and
mov
pop
pop
les
lods
jge
cmovbe
mov
je
mov
xchg
sub
inc
push
rolb
or
insl
xchg
sbb
outsl
aad
pop
adc
rorl
std
xchg
incb
lods
dec
int
sbbb
or
push
dec
jle
jge
cmp
lock
and
in
filds
sbb
enter
mov
push
mov
shll
inc
pop
push
and
or
mov
sub
xor
push
sub
cmp
sub
xor
sbb
cmp
into
xchg
inc
es
adc
xchg
add
loopne
sbb
call
and
fadd
stos
mov
sbb
add
das
mov
aad
out
inc
xorb
loopne
fnstsw
imul
mov
inc
sub
cmp
fsubr
cmpsb
push
js
and
dec
mov
mov
je
add
pop
shl
pop
xchg
and
test
or
cmpsb
add
xchg
je
test
fmull
loop
rorl
push
jne
mov
push
or
outsl
add
or
mov
or
popf
je
or
stos
div
inc
xchg
cwtl
aam
push
adc
fnsave
sub
push
cmp
lea
cmp
adc
cli
or
dec
in
ret
fcompl
add
test
subl
push
jne
cmovle
adc
dec
rolb
pop
add
repz
lret
pop
and
mov
mov
scas
jmp
inc
and
popa
pop
je
rolb
insb
arpl
add
decl
mov
sbb
sbb
outsb
adc
pop
scas
lods
or
fistpl
ss
xchg
cmp
loope
fucomip
pop
jle
xchg
ljmp
mov
or
sbb
add
pop
cmpsb
pop
scas
pop
cwtl
jmp
pop
inc
inc
pop
or
push
movsl
lahf
xchg
push
and
ss
inc
jb
jecxz
dec
insl
aas
sub
push
fucomip
mov
push
test
out
lea
pop
or
mov
xor
push
pop
and
mov
int
mov
pop
adc
out
xor
mov
mov
mov
sub
das
push
aaa
sub
insl
mov
mov
enter
jo
xor
montmul
cmpsb
add
arpl
mov
pop
fs
les
pop
mov
xchg
sahf
sahf
jmp
inc
nop
push
lods
xchg
imul
mov
push
lret
movsb
cmp
fiadds
aaa
pop
fstpl
fstpt
jmp
leave
repz
movhps
ret
rorl
push
imul
movsb
popa
jnp
loop
in
dec
adc
jg
ficompl
arpl
push
aaa
popa
fcoms
push
dec
sbb
scas
and
cmp
aaa
sub
roll
mov
mov
call
or
mov
push
jo
dec
in
std
mov
lods
pushf
sbb
fucomi
adc
loopw
hlt
jl
sub
ljmp
rclb
mov
mov
outsl
in
scas
add
cmp
push
fdivrs
je
sub
pushf
mov
lock
fcomps
pop
in
ss
pop
inc
imul
cwtl
or
and
int3
jne
xor
outsl
hlt
or
das
lock
ljmp
jmp
adc
hlt
or
adc
lods
push
jae
push
imull
add
push
out
jl
jp
adc
adcb
or
jno
push
push
or
mov
shlb
dec
dec
cli
mov
mov
and
push
dec
pop
outsb
push
je
mov
xor
push
std
push
insl
pop
add
insl
arpl
pop
imul
pusha
loope
and
push
fnsave
jp
mov
xor
push
sti
ret
das
call
add
sbb
inc
push
ds
mov
popl
mov
cmp
fsubl
test
mov
sbb
cmp
stos
cmp
or
iret
loope
pop
adc
rorb
xchg
mov
push
lea
test
jecxz
enter
inc
outsb
pusha
and
sbb
aad
pop
and
jne
push
xchg
push
xor
ficoml
dec
inc
or
pop
std
and
hlt
jmp
or
mov
fsub
cs
or
ljmp
insb
sub
jmp
push
or
hlt
push
call
adc
outsb
jae
jae
out
imul
xchg
push
ficoml
nop
ret
shlb
packssdw
jns
jge
push
xchg
sbb
ret
aas
and
les
mov
iret
lds
mov
addb
loop
jae
jecxz
mov
dec
cmp
jmp
cwtl
inc
or
mov
cs
adc
scas
or
fimuls
das
xor
pcmpeqw
test
int
push
clc
mov
push
xchg
int3
cmp
rcrb
mov
jle
shrb
mov
hlt
push
jnp
jg
or
jge
and
jb
fidivrs
ret
and
and
mov
add
jns
cmp
jne
and
inc
cld
cmp
call
push
push
out
add
dec
push
adc
aas
insb
lods
popa
push
sahf
add
ret
jecxz
xchg
or
push
shll
xchg
daa
daa
mov
fxrstor
call
or
add
or
icebp
sub
icebp
cmpsb
mov
es
lock
adc
cs
mov
xor
push
pop
add
sbb
push
js
xor
loope
test
std
mov
fs
ss
jae
add
call
out
lods
int
inc
or
call
jecxz
or
insl
pop
mov
lret
je
mov
fbld
ret
in
or
mov
jmp
movl
jns
jecxz
xchg
fwait
push
std
ljmp
nop
negl
or
add
ja
xchg
push
xchg
sbb
jo
inc
jge
call
ds
mov
sbb
cmp
mov
dec
dec
xchg
mov
and
stos
cmp
andb
sahf
and
mov
fdivl
xchg
mov
push
add
stos
jb
inc
loopne
and
push
dec
and
pop
xor
xchg
stos
or
or
sti
push
ret
scas
or
mov
loop
hlt
clc
cmp
fiadds
add
xor
es
add
xor
fidivrl
dec
or
enter
inc
push
push
in
jo
in
push
ss
outsb
fistl
nop
adc
inc
xor
rcrb
jnp
loopne
push
sub
push
addl
sarl
and
and
scas
mov
insl
or
pop
mov
outsl
mov
dec
call
cmp
mov
mov
or
mov
movsb
fdivrl
push
in
mov
loopne
stos
pop
clc
and
inc
add
dec
xor
out
jb
sbb
mov
inc
adc
xchg
mov
adc
pop
and
or
push
pop
add
imul
mov
add
adc
pop
mov
pop
clc
xor
and
roll
adc
ud0
xchg
xor
arpl
sub
rol
mov
sbb
bound
ljmp
cmp
out
lcall
imul
fst
push
add
dec
adc
inc
test
mov
out
or
jmp
xchg
sahf
mov
sbb
shrl
sbbl
sub
shlb
out
jne
cmp
les
inc
push
jle
xchg
inc
inc
std
clc
adcb
roll
je
fucomip
call
adc
inc
dec
out
outsl
clc
test
out
ja
mov
rcrl
cs
and
jl
rcr
loope
jl
or
lret
mov
out
mov
dec
push
push
jae
sbb
fcomi
mov
jbe
add
fxch
inc
lods
sarb
inc
scas
je
popa
mov
call
and
gs
inc
mov
mov
sub
test
orb
cs
scas
test
inc
mov
or
dec
sbb
jmp
push
or
cmp
add
nop
ja
adc
fwait
insl
mov
dec
bound
outsb
fidivl
and
leave
or
leave
sub
fdivrl
out
inc
lea
adc
jp
cmp
jle
aas
jnp
push
xor
xchg
mov
lods
pop
add
mov
dec
pop
adc
sub
dec
sbb
ja
popa
test
xchg
adc
dec
call
mov
ds
add
mov
pop
jo
addr16
mov
enter
out
aas
push
inc
arpl
loope
shlb
pop
into
xlat
adc
mov
call
jo
outsb
push
test
sbb
testb
data16
jl
push
jbe
xchg
sbb
xchg
xchg
dec
xor
xchg
mov
adc
cmpsl
fistl
into
pop
ljmp
xor
and
lods
jb
and
lret
mov
arpl
sub
adc
je
mov
pop
pop
js
fidivl
dec
lahf
imul
outsl
jg
mov
inc
sub
jnp
fbld
jne
inc
sti
lcall
test
dec
add
call
jno
xchg
out
and
fnstsw
loope
std
xor
pusha
xchg
fcmovnu
dec
jecxz
cmpl
fcmovu
mov
sbb
out
sub
test
inc
pop
stos
test
pop
adc
adc
hlt
test
shr
addr16
inc
cmp
adc
fdivrp
out
adc
roll
out
and
mov
and
fs
movsl
and
lods
bound
push
pop
mov
jne
adc
dec
adc
mov
or
imul
cltd
cli
fistl
data16
call
mov
or
inc
or
xchg
mov
mov
mov
mov
sub
cmp
filds
cmpsl
shrb
add
call
outsb
icebp
in
outsl
out
in
push
mov
jle
je
adc
test
add
lods
jmp
push
pop
stc
inc
outsl
mov
addl
lods
dec
jae
jmp
call
dec
cmp
mov
adcl
gs
add
adc
addl
add
jmp
xchg
mov
xchg
ret
xor
jbe
je
sbb
cmp
repz
hlt
mov
test
fisubs
insb
ret
fdiv
pop
fwait
mov
mov
xor
ja
add
out
test
inc
adc
ss
mov
mov
cmp
fistpll
sbb
mov
mov
fs
mov
sti
in
or
or
sbb
pop
sbb
daa
cmp
sub
test
mov
adc
and
push
jmp
sbb
mov
mov
arpl
cmpsb
daa
xchg
ds
jbe
jo
enter
shrb
push
adc
xor
cmpb
mov
pop
aam
sti
stos
movsl
adc
push
hlt
adc
repnz
int3
imul
notb
in
push
lods
ja
cmpsl
adc
pop
scas
and
xchg
rorb
data16
xlat
fistpll
rclb
les
push
shrl
je
clc
jecxz
out
mov
cmp
orb
push
sub
jp
icebp
sahf
or
in
lods
test
cmp
mov
jmp
out
push
mov
or
mov
sub
pop
adc
cmp
cmp
jle
loopne
xor
inc
je
mov
push
or
mov
jecxz
xchg
and
xor
jns
xor
cmp
dec
sarb
pop
cli
adc
insl
sbb
cmp
or
icebp
push
test
and
xor
es
pushf
or
jecxz
inc
aad
push
adc
mov
outsl
inc
orb
test
call
xchg
mov
jecxz
push
sbb
and
inc
or
out
and
adc
pop
fdivrs
rclb
push
and
mov
mov
or
add
test
adc
fnstsw
mov
or
dec
jne
add
popf
icebp
sub
xlat
push
sbb
pushf
stos
ss
clc
or
repz
mov
and
jmp
insl
pop
sysexit
paddw
jbe
pop
mov
inc
insb
mov
xor
mov
adc
aad
stos
cld
imul
insl
dec
cmc
cltd
adc
or
insb
aaa
push
int3
inc
mov
inc
jmp
jns
pushf
or
js
and
outsb
xchg
adc
jmp
mov
insb
aas
cmp
inc
adc
leave
imul
sub
jne
xchg
lcall
jns
scas
outsb
ja
aas
xor
imul
test
scas
and
push
out
push
jns
js
inc
fmuls
in
ljmp
push
in
in
sbb
add
and
rclb
push
sub
inc
sbb
xor
rorb
adc
and
push
std
push
sbb
adc
sbb
push
sub
and
inc
pushl
add
je
insl
or
jo
out
clc
outsb
pop
xor
add
pushf
bound
sub
cmpsb
mov
pop
push
das
jmp
inc
xor
sbb
sub
pop
ja
xlat
push
or
push
loope
les
xorb
dec
mov
xchg
insb
add
js
push
jmp
add
or
repnz
jns
and
push
sbb
movsl
mov
mov
pop
orb
pushf
movsl
jne
push
dec
add
jmp
jnp
rcr
dec
inc
cmp
jnp
and
mov
daa
xor
add
clc
push
scas
cmp
and
inc
pop
pop
cmp
xor
or
dec
pop
jle
cmp
cmp
sti
pop
inc
push
or
xchg
loopne
out
dec
jb
and
jno
in
push
aaa
insl
and
je
ljmp
sti
cmp
xchg
mov
mov
stc
dec
jnp
roll
adc
lea
mov
ud1
inc
out
adc
mov
xor
popa
inc
test
sub
or
xchg
jns
movl
xor
xlat
inc
pop
mov
sub
loope
or
dec
adc
mov
xor
mov
mov
stos
rclb
push
stc
xlat
fwait
sti
jl
and
or
fs
repz
add
xchg
jmp
xor
call
mov
jmp
popa
mov
test
push
aaa
int3
adc
je
adc
mov
fimull
gs
in
pop
rep
xchg
hlt
mov
aaa
mov
pop
sub
adc
imull
les
aam
jl
insb
sbb
sbb
jne
je
je
dec
daa
push
xchg
jb
mov
cmp
mov
or
je
jae
addl
push
mov
cmp
out
adc
push
test
add
add
mov
das
insb
xor
sub
into
lock
dec
les
mov
sbb
call
aaa
push
fwait
or
sbb
sbb
or
idivb
sbb
adcl
pop
pushf
inc
ds
popa
mov
pusha
pop
jl
insl
adc
pop
les
jnp
xor
xor
and
mov
mov
jg
push
dec
jmp
shrb
adc
xor
loop
sub
rcpps
pop
mov
adc
cltd
jo
mov
fadd
mov
mov
or
pop
or
jbe
loopne
add
cmp
pushf
jno
jg
add
sbb
pop
push
sub
inc
sub
icebp
testb
lret
jmp
imul
cmp
incl
and
adcl
shll
call
stc
inc
fcoml
add
das
pop
adc
cmpb
cmp
out
xchg
cs
or
xor
in
les
jo
or
dec
fmuls
add
jg
inc
fistps
xchg
sub
cs
mov
push
sbb
or
je
je
xlat
repz
mov
out
inc
cmp
adc
inc
outsb
mov
cmp
cmc
test
ljmp
jg
mov
sbb
ljmp
fldl
inc
inc
enter
adc
cmc
in
cmpsb
subb
xor
add
sbb
pop
jb
clc
jge
aas
or
jmp
divb
mov
das
nop
mov
shll
in
sub
xor
adc
outsb
ret
add
hlt
lods
lds
mov
dec
push
out
fsubrp
cli
scas
aaa
push
mov
aam
cmp
mov
bnd
mov
mov
lock
sbb
iret
jg
shrb
mov
cwtl
or
push
ss
dec
mov
pop
mov
call
jle
pop
push
hlt
jo
lods
ret
fists
cmp
sbb
push
filds
aaa
mov
push
xchg
adc
or
cld
mov
adc
inc
or
das
clc
sbb
and
sti
add
cwtl
int
leave
push
sti
imul
int3
scas
mov
jmp
imul
scas
inc
push
movsb
fdivrp
aad
adc
ljmp
imul
push
jl
adc
pop
cs
or
adc
mov
push
lods
sub
das
or
loope
adc
lahf
insl
out
pop
cmc
or
cmc
sbb
pop
inc
mov
inc
xor
xchg
add
xchg
and
jl
inc
mov
movsb
jle
xchg
cmc
fs
stos
and
int
js
jle
adc
fmull
fdivrs
hlt
daa
jle
fdivl
jge
jl
lret
stos
mov
mov
int
mov
test
stos
in
and
je
push
mov
sbb
in
call
push
push
xchg
add
addr16
sub
mov
push
inc
xor
xor
pop
inc
aaa
loop
in
in
sbbl
imul
notb
rorl
nop
je
jmp
lock
subl
cli
or
pop
or
mov
mov
mov
mov
jo
loopne
mov
push
and
in
fsubrl
add
scas
insb
imul
adc
sub
jmp
jns
xchg
stos
les
arpl
neg
xor
and
cmpb
and
cmpsb
scas
sti
mov
ds
inc
sbb
mov
pusha
repz
fisubrl
push
mov
in
lock
cmp
dec
inc
dec
push
push
push
fistpl
pop
mov
inc
stos
pmaddwd
dec
xchg
xchg
fdivrs
add
test
sbb
outsb
or
shl
sbb
lret
pop
rclb
test
xorb
jne
je
pop
jge
sbb
leave
ret
sbb
in
loope
pop
icebp
mov
in
xor
pop
loop
movsl
add
lock
bound
jmp
clc
and
jl
xchg
sti
jne
loop
push
std
sub
into
push
push
lret
mov
gs
stos
mov
lds
push
pop
push
ret
jb
les
xchg
lcall
call
arpl
or
add
fdivl
pop
mov
adc
mov
mov
popa
push
testl
aam
push
enter
jbe
or
and
aas
or
inc
mov
lret
jbe
mov
sub
dec
pop
sbb
inc
mov
push
sub
mov
or
inc
push
mov
shl
push
push
cmc
sbb
hlt
leave
je
mov
fdivr
ret
xchg
cmc
xchg
aaa
push
aaa
xlat
adc
pushl
arpl
or
mov
les
fisttpl
push
fs
stos
inc
xor
xor
mov
and
jecxz
sub
cvttps2pi
inc
mov
xchg
insb
or
add
add
mov
xlat
out
or
call
and
insl
clc
fisttpl
push
in
subb
xchg
popa
cmp
mov
or
rolb
push
das
push
or
roll
test
daa
xchg
jb
mov
fdivl
inc
and
or
adc
xor
pop
sub
or
fcmovbe
sbb
mov
rcll
pop
loop
in
std
cmp
mov
test
test
or
andb
imul
cmc
inc
in
test
clc
cli
pop
ljmp
pop
lock
fstp
ds
call
out
clc
mov
outsb
xorb
enter
orb
lcall
mov
in
or
enter
outsl
hlt
sbb
add
and
adc
jge
inc
enter
cmpsl
lea
js
fisubrs
out
sahf
jge
inc
std
cmp
push
adc
and
push
faddl
int3
test
and
pusha
or
jp
add
adc
repnz
sbb
jb
das
and
xor
push
clc
mov
or
mov
cmpl
jbe
mov
jb
arpl
lods
pop
add
dec
sbb
adc
push
jnp
add
or
adc
mov
or
cmp
push
and
adcl
jecxz
push
in
mov
nop
sahf
pop
jg
pop
inc
inc
adc
pop
pop
sub
xor
sbb
popa
shlb
sbb
int3
call
scas
push
mov
or
adc
lods
sub
lahf
mov
jbe
fbstp
sti
jl
fsubl
ds
cmp
sub
mov
dec
push
cmp
or
adc
dec
rcrl
std
and
xchg
or
lret
sbb
and
insl
decl
push
push
dec
adc
and
mov
jg
in
push
sbb
sbb
adc
fbstp
sub
push
scas
outsb
jl
cli
fdivrl
rclb
mov
push
je
imul
addr16
stos
cmp
pop
adc
or
call
in
and
xorl
fpatan
inc
fistpl
sbb
add
push
cmp
fimull
icebp
sub
bound
push
sarb
mov
cli
stos
repz
and
jecxz
icebp
pop
rorb
ds
repz
subl
outsl
pop
aam
stos
cmp
ds
adc
xchg
cld
sub
push
push
lock
jge
mov
xchg
out
lods
adc
mov
pop
sbb
sub
out
cmpsl
or
add
in
shlb
popa
test
mov
lods
jmp
sbb
adcl
aaa
inc
push
call
aas
jo
jbe
push
nop
inc
daa
mov
mov
xchg
out
cmp
hlt
pop
sbb
fs
push
mov
cmpsl
ret
jne
xchg
inc
push
jp
ss
stc
add
sbb
stos
fisubrs
add
sub
mov
pop
jae
push
mov
inc
push
out
ljmp
or
jo
sub
mov
mov
xor
js
mov
out
push
in
jmp
cld
dec
divb
and
lock
bound
xchg
and
aad
es
mov
xchg
int
cmpsl
jns
inc
daa
mov
loopne
sbb
or
push
bound
push
inc
or
cmpsb
add
addb
mov
fbld
stc
jge
int3
push
add
aaa
ficompl
add
inc
cli
push
mov
lods
test
scas
and
jno
xchg
push
and
xchg
sar
in
lea
push
mov
mov
push
xchg
or
add
mov
push
push
fadds
add
push
test
cld
mov
lahf
jne
jno
inc
dec
lds
sti
inc
or
push
imull
mov
cmpsl
ds
push
sub
xor
enter
pop
mov
inc
pop
iret
fs
and
insl
add
xchg
inc
inc
fwait
mov
arpl
mov
in
roll
xlat
jmp
inc
xchg
mov
and
hlt
push
and
sti
aas
fstpl
push
jmp
test
inc
sub
jnp
outsl
aam
and
mov
jno
push
mov
cmp
fsub
call
rorl
enter
inc
inc
jl
mov
mov
sbb
enter
push
ja
cmp
inc
pop
mov
aaa
hlt
add
inc
scas
insl
push
xchg
and
imul
adc
and
or
insb
mov
mov
aaa
addr16
mov
shl
fdivrl
cmc
popf
and
gs
xchg
jg
pop
inc
sub
popa
cmp
push
fcompl
adc
fbld
shl
in
inc
cmc
sub
inc
lret
mov
adc
sti
adc
pop
pop
popf
repnz
cld
call
jl
sbb
and
test
inc
imul
push
daa
je
pop
sub
clc
shlb
pop
insb
push
or
lds
mov
insb
cmp
and
mov
outsb
les
insl
push
or
ss
test
jp
fistps
mov
test
mov
fiadds
in
and
aam
sub
out
stos
cmpb
jne
pop
adcl
mov
push
and
mov
js
add
xchg
mov
paddusb
insl
sub
cmp
popf
cmp
and
jne
xor
and
fucomp
pop
out
inc
push
in
int3
pusha
andb
cmp
int
or
sti
inc
lcall
lret
call
cld
inc
mov
clc
imul
pop
imul
and
pop
repz
lcall
aaa
data16
mov
pop
je
dec
aam
movsl
in
pop
dec
inc
clc
inc
pop
dec
mov
fst
cltd
das
mov
mov
xchg
clc
ret
jne
mov
lea
ret
mov
bound
hlt
sub
mov
orb
faddl
ss
pop
rorb
push
stos
aaa
lock
daa
into
call
in
js
imul
jmp
mov
mov
jne
fdiv
mov
out
ret
add
adc
or
mov
fsubrl
cwtl
in
es
lahf
xchg
lea
in
insb
mov
popa
loopne
testb
sub
sbb
out
inc
adcl
cli
lea
jecxz
inc
cmp
aam
popf
jo
sbb
jns
in
sub
mov
mov
jne
and
add
jbe
lods
jns
ds
pusha
dec
in
jp
mov
jbe
or
mov
movsb
xlat
in
sub
fwait
or
scas
inc
mov
or
pop
incb
jne
xchg
and
pop
scas
adc
ss
adc
xor
push
add
fcmovnb
lods
pop
lcall
add
xchg
pop
jb
insl
push
mov
std
inc
xchg
int3
mov
inc
inc
cmp
ret
cmp
mov
lods
cli
add
lahf
xor
repz
dec
xchg
fnstenv
and
jne
push
mov
inc
in
call
xor
lods
out
out
jb
dec
pop
mov
mov
xchg
cmp
stos
inc
lea
imul
cmpb
andb
sar
pop
loope
jg
xor
push
bound
mov
mov
or
sbbb
rcrl
ficomps
fucomip
sbbl
or
adc
rolb
rcl
pushf
lds
sub
sub
addl
cmpsb
lret
divb
push
and
mov
mov
pop
imul
pop
sbb
pop
in
xlat
adc
dec
pcmpeqd
adc
out
ret
xchg
mov
or
sarb
dec
and
adc
loopne
je
frstor
jbe
rol
addr16
into
in
test
push
data16
or
aam
xchg
and
xor
daa
aaa
inc
mov
mov
dec
das
seto
xor
bound
cmp
imull
lret
mov
test
dec
lret
stos
mov
enter
push
pop
push
add
loop
cld
insb
loope
add
test
mov
mov
and
and
and
adc
push
mov
pusha
repnz
inc
mov
ss
dec
xchg
stos
mov
int
sbb
into
jb
mov
xor
cmpsb
mov
mov
hlt
mov
or
pusha
mov
jns
and
mov
adc
aad
push
and
sbb
stos
outsl
int
inc
add
sub
jo
or
pop
pop
add
jae
sub
daa
scas
pop
clc
fadd
jbe
xlat
mov
out
pop
pop
test
insl
imul
or
test
dec
rclb
test
and
push
pop
pop
clc
sbb
leave
test
call
hlt
mov
mov
ds
call
mov
mov
out
sub
add
pushf
rol
adc
loope
je
pop
push
testb
loopne
sti
pop
mov
push
xchg
cmpsl
iret
dec
mov
les
jae
aad
mov
sbb
pop
test
push
inc
iret
xor
adcl
dec
push
inc
mov
sarb
xorb
enter
mov
push
inc
shrl
push
inc
lea
aam
cmc
je
ret
mov
inc
push
call
pushl
cs
jae
movsl
pop
test
dec
in
ds
push
imul
mov
lods
ficomps
mov
adc
insb
cmpl
inc
sbb
add
lea
inc
adc
ret
imul
push
das
push
outsb
jp
jno
mov
sub
clc
ds
aad
inc
sub
xchg
xchg
outsb
jb
xchg
aaa
sbb
sub
jl
out
orb
xchg
fs
mov
mov
lcall
dec
jne
mov
or
sub
insb
cld
or
loopne
pusha
packsswb
cltd
pop
lahf
sub
sar
rcr
cltd
jae
cs
ja
in
loope
jl
lea
push
mov
js
pop
pushf
sbb
add
adc
xchg
fisubs
stos
or
mov
xchg
dec
inc
mov
inc
lea
popa
repz
jp
mov
icebp
ds
lcall
je
jbe
andl
sbb
push
and
das
nop
negb
inc
inc
jp
int
jge
je
dec
scas
cwtl
inc
mov
cs
cwtl
insl
xchg
jle
or
aad
sbb
mov
mov
leave
cli
je
dec
mov
mov
pop
imul
sub
sub
insb
or
pop
dec
andl
and
cmp
addr16
loopne
push
pop
xchg
mov
aas
test
inc
adc
xlat
outsl
pop
sbb
and
and
and
shlb
inc
jg
jnp
les
push
inc
inc
scas
push
mov
leave
adc
insb
mov
mov
fsts
icebp
and
aas
mov
mov
mov
xchg
push
test
fdiv
popa
add
pop
lock
loop
cli
aas
jmp
mov
jle
mov
xchg
or
mov
lea
push
lock
outsb
lods
mov
lret
sub
pop
push
fstps
fimull
mov
ret
and
lret
xchg
clc
add
pop
je
shl
je
jge
out
xchg
mov
test
cmpsl
clts
imul
mov
and
jg
inc
lcall
sbb
fimuls
daa
dec
xor
dec
mov
rorl
mov
inc
pusha
xchg
push
lea
and
ficoml
pop
lock
jge
sbb
ds
outsl
test
ja
fwait
push
pushf
sub
or
xchg
xchg
xor
mov
mov
adc
mov
inc
ja
insl
int3
pcmpgtb
lahf
and
or
add
lods
outsl
and
std
je
jne
inc
pop
ret
mov
mov
pop
arpl
out
sub
decb
lods
outsb
inc
inc
xor
add
dec
lea
mov
push
fildl
pop
xor
lret
mov
add
pop
mov
aaa
imul
mov
add
pop
das
jmp
xchg
adc
inc
xchg
jp
jge
call
jb
sub
cltd
push
in
pusha
inc
pop
mov
shrl
fcomip
mov
das
mov
inc
loope
jg
ds
sub
mov
je
nop
mov
hlt
pusha
inc
pop
outsb
je
out
outsl
dec
sbb
xchg
scas
popf
movd
pop
xorl
and
sbb
and
insl
mov
js
sub
xchg
rolb
insb
pushf
call
inc
mov
bound
mov
hlt
shl
call
push
mov
mov
sub
sbb
cmp
dec
inc
jmp
pop
and
add
mov
inc
and
clc
aad
loopne
iret
aam
xor
sbb
cmpsb
sub
xchg
push
mov
cmp
les
jb
pop
and
fbstp
lock
pop
aad
fucomip
movsb
or
dec
inc
push
pop
and
dec
ljmp
adc
dec
mov
sub
cmp
movsl
lret
shlb
mov
rcrl
dec
rorb
hlt
fistl
push
pop
inc
cmp
bound
or
add
pop
dec
jp
add
lods
jno
fsubrs
in
in
mov
js
xlat
jae
lods
mov
adc
pop
xchg
xor
inc
aaa
mov
mull
insb
call
out
and
adc
cld
iret
je
inc
mov
movsl
sbb
mov
mov
pusha
pop
insb
shlb
push
pop
fdiv
daa
icebp
daa
inc
cmp
xorb
decb
loop
js
or
fisttpll
lcall
pusha
jle
mov
xlat
xor
call
mov
js
cmp
inc
test
push
and
xchg
inc
ret
xor
mov
popa
mov
xchg
lea
push
mov
inc
jmp
pop
mov
and
xchg
or
sub
jmp
cmp
cmp
lret
jge
outsb
rcrl
int3
mov
or
xchg
test
shlb
adc
inc
aaa
push
inc
aaa
xchg
out
xchg
mov
lea
je
adc
and
test
push
or
or
leave
pop
insb
xchg
out
mov
push
shrb
inc
xor
xchg
jnp
cmp
call
insl
add
cmp
push
fdivs
mov
sub
sbbb
inc
push
push
or
jae
sub
subb
adc
push
movl
lahf
shrb
xor
mov
cmpsb
fisubrs
and
mov
push
adc
inc
xchg
xor
mov
popf
mov
adc
mov
push
jo
pop
es
outsl
add
jle
or
adc
fcmovnu
inc
inc
fists
aaa
sbb
pop
mov
testb
dec
dec
sub
and
jg
pop
sbb
inc
in
icebp
sbb
inc
xor
testl
outsl
pop
cmp
dec
or
ret
je
or
enter
inc
pop
ds
and
push
pop
or
mov
push
inc
dec
test
jbe
jbe
outsb
dec
mov
mov
pop
call
push
out
mov
sub
add
push
mov
outsb
push
test
add
jl
addr16
fdiv
pop
cld
sub
push
shll
mov
mov
xor
inc
rorb
repnz
cli
rolb
dec
adc
mov
shr
aas
and
dec
dec
fildl
lds
out
js
shrb
and
jge
pop
push
pop
sbb
dec
inc
call
test
fbstp
or
sub
mov
sbb
add
and
dec
ficoml
shrb
xor
mov
jecxz
sub
pop
decl
mov
fs
mov
dec
imul
jno
rorl
cmp
and
ss
cli
push
mov
cmp
call
in
mov
in
fists
adc
and
or
adc
inc
andl
push
push
mov
pop
mov
mov
mov
mov
and
cmp
test
pop
enter
je
es
xor
or
fmul
andl
inc
incl
or
addl
cs
mov
inc
ja
dec
int
dec
pop
test
push
sbb
push
jne
cmp
loope
fidivrs
fwait
adc
hlt
mov
fwait
xchg
test
xchg
push
inc
add
mov
sub
std
xor
or
xor
push
insl
insl
dec
fs
enter
std
push
dec
stos
dec
inc
jmp
rcll
mov
cltd
add
repnz
or
repnz
adc
ds
sbb
rcrb
sarb
scas
adc
adc
mov
push
insl
shlb
sub
and
sbb
pop
subb
mov
pop
gs
cmp
xchg
push
cld
pop
pop
inc
adc
outsb
mov
jmp
push
lock
test
mov
add
sub
dec
xor
and
inc
ja
mov
push
ljmp
xchg
or
arpl
or
inc
sub
dec
dec
insb
or
mov
mov
mov
fimuls
call
xor
in
mov
hlt
lods
je
pop
int3
rcll
ja
or
leave
xlat
xor
cmp
or
loopne
dec
xor
fldt
push
fildll
inc
and
ljmp
xchg
insl
add
or
adc
in
push
xchg
push
push
loop
push
shrl
pop
jmp
mov
jmp
or
jecxz
mov
jbe
mov
mov
adc
or
pop
add
jbe
lret
sbb
add
mov
imul
shlb
lea
pop
xchg
pop
xor
in
push
ljmp
icebp
test
in
mov
push
dec
mov
flds
mov
jp
pop
das
ljmp
cli
lahf
call
jecxz
push
lods
and
and
adc
adc
lcall
subb
cwtl
subb
test
jo
jle
cmp
or
mov
jp
mov
ret
loopne
push
addr16
insl
inc
jno
in
das
mov
push
add
or
pushf
lcall
jno
xor
push
bts
push
dec
in
stos
mov
test
jp
push
cmc
xor
icebp
mov
aaa
mov
sub
add
adc
push
inc
xor
and
pop
mov
jbe
push
and
cmpsl
daa
movsl
adc
adc
call
roll
mov
fwait
mov
or
in
push
jl
mov
push
lret
lcall
dec
bound
lock
shll
dec
push
mov
xchg
or
ljmp
ret
pop
push
insl
jne
inc
rcrl
push
or
ret
xor
lcall
pop
or
or
es
jne
pop
insb
rorb
jp
adc
or
push
and
mov
mov
cmc
test
add
fildll
test
cmc
pop
or
test
pop
or
add
es
insb
das
sahf
mov
fidivs
sbb
jecxz
or
add
lahf
mov
inc
ja
xor
orb
jg
rcrl
pusha
stos
int3
jl
std
insl
sti
idivb
es
outsb
js
pop
or
mov
push
jmp
lea
and
insb
sub
cmp
inc
movsl
test
subb
xlat
pop
cmp
xchg
iret
lods
push
sub
cmpsb
lds
pusha
and
shl
jge
shr
cmpsb
dec
adc
sub
pusha
push
call
push
adc
inc
stos
mov
adc
xchg
push
lds
fwait
fildll
adc
lcall
insl
xchg
cli
std
test
xor
mov
sbb
insl
insb
shr
or
mov
mov
pusha
mov
lret
fiaddl
fldt
int3
dec
inc
xor
push
jg
adc
ret
in
or
mov
ret
sub
insb
call
add
mov
inc
push
push
sbb
xchg
mov
cwtd
in
jne
push
mov
insl
xchg
jo
jne
add
mov
into
and
mov
sarb
cmp
sub
shll
mov
out
push
lret
add
rol
fldl
shll
cmp
jg
and
les
nop
mov
fistl
add
subb
in
sahf
inc
cmp
divl
sbb
push
add
cmp
std
shrl
fsubrl
insb
or
or
adc
je
outsb
sbb
push
aad
cmp
outsb
es
pop
adc
cmp
inc
and
adc
mov
fdivrs
adc
mov
das
inc
pop
mov
ret
cmp
call
ja
inc
test
push
pop
adc
jns
pop
lret
outsb
xlat
in
data16
mov
add
cwtl
jbe
das
xchg
loope
push
add
adc
mov
andl
inc
repnz
sarl
jmp
sub
cwtl
int3
fldt
add
hlt
sub
add
xor
hlt
adc
lods
sbb
push
adc
push
aam
outsb
xchg
or
and
in
sti
adc
sbb
add
mov
cmpsb
or
inc
aam
out
jb
inc
sbb
sbb
stc
mov
stc
adc
daa
mov
popa
sub
fdivl
inc
movsl
jl
push
xlat
sub
cmp
jb
dec
sub
dec
jl
mov
push
lahf
or
xor
xchg
pusha
jmp
out
and
dec
das
add
ljmp
adc
fcomi
mov
in
mov
dec
and
adc
daa
pop
adc
sub
mov
inc
mov
orl
fiadds
fisubrl
adc
fucomip
out
adc
ret
lods
adc
push
pop
mov
cmpsb
imul
jl
sahf
push
ds
into
mov
out
je
push
or
loopne
stos
fdivrl
fildll
inc
and
sbb
push
ljmp
dec
sbb
mov
sbb
sub
mov
in
test
fidivl
ret
inc
stc
popl
fisubrs
out
and
mov
or
fs
cmpsb
jne
pop
mov
leave
imul
or
mov
or
or
push
rcr
popf
sbb
cli
fwait
and
fwait
dec
jo
fistpll
cli
into
lds
clc
mov
xchg
cs
add
add
mov
inc
out
lea
movsb
push
add
mov
ljmp
insl
mov
inc
fstps
mov
push
stos
fiadds
outsl
mov
je
js
jno
push
mov
pop
orl
and
lods
sti
push
mov
hlt
adc
xor
xchg
rorl
add
loope
pop
add
pushl
push
adc
call
fmull
mov
popa
scas
arpl
jb
xor
push
inc
inc
int3
pop
dec
das
jno
ljmp
push
adc
sbb
test
push
jge
sbb
es
jno
mov
lds
sbb
inc
lock
mov
jbe
and
mov
sub
xchg
insb
mov
or
xlat
pop
pop
daa
jge
or
sahf
stos
mov
enter
fdivl
insb
push
mov
jmp
or
fcomi
adc
popf
dec
push
mov
int
stos
cmpsb
jo
out
sbb
mov
incb
adc
les
notb
mov
mov
jg
mov
sbb
rorl
lret
dec
cmpsb
cmp
clc
pop
jne
test
ret
sub
inc
jge
sbb
adc
push
and
inc
ds
sub
pop
inc
adc
insb
jg
cmp
or
and
adc
pushf
and
ss
jae
int3
xor
movsl
mov
ss
inc
loope
es
mov
push
pushl
dec
push
mov
cmc
inc
cld
icebp
pop
inc
pop
inc
imul
mov
dec
fwait
jb
repnz
jae
jne
test
fiaddl
lret
push
mov
testb
push
mov
add
mov
loopne
push
cltd
iret
shll
mov
test
xchg
or
mov
sbb
xorb
les
or
cltd
hlt
mov
sbb
dec
inc
mov
jno
popa
push
idiv
pop
stos
es
outsb
add
adc
aas
repz
dec
sbb
jl
cmovge
repnz
sub
fsubs
push
inc
outsl
jae
pop
ljmp
movsl
inc
and
jae
and
lea
repnz
fwait
stos
jmp
xor
out
and
mov
jge
pop
insb
dec
mov
mov
enter
push
sbb
ret
daa
xchg
push
or
push
and
or
lret
xor
ljmp
push
pop
jne
push
or
arpl
xchg
mov
aam
enter
adc
stos
push
sti
outsl
adc
xor
or
push
je
add
outsl
cmp
mov
mov
lods
subl
mov
mov
sub
or
push
ret
and
sbb
sbbb
js
movsb
dec
inc
adc
mov
jbe
shlb
in
or
or
inc
loope
push
loopne
jg
add
jl
mov
fadd
aaa
mov
and
movsb
dec
push
mov
inc
and
cmp
xor
mov
push
sub
jl
adc
xchg
mov
or
mulb
sub
jo
mov
test
in
inc
jecxz
loopne
cli
orb
cmp
mov
and
dec
or
stos
insb
mov
add
cwtl
and
xchg
stos
fcompl
rorl
inc
in
mov
cmp
inc
or
xchg
sbb
hlt
movsl
mov
jbe
xchg
insb
sub
lock
add
out
leave
pop
jge
mov
ds
xor
push
rclb
pop
adc
sub
sbbl
mov
ja
adc
push
popf
jmp
mov
subb
sub
movsl
xchg
cmovae
notl
mov
push
push
jmp
pop
cmc
push
jbe
xchg
push
ret
jae
addl
push
pop
jmp
outsb
je
and
iret
jne
add
nop
jmp
jmp
hlt
push
push
imul
clc
jbe
rclb
lea
dec
rcr
mov
cs
sbb
adc
ss
mov
fwait
sub
scas
xor
gs
xor
imul
outsb
pop
adc
push
adc
xlat
mov
mov
je
and
rorl
push
inc
sub
mov
movsl
std
test
mov
inc
cmp
in
fldt
jae
cmp
or
dec
enter
in
inc
cld
in
ret
orl
or
lods
cmp
dec
call
inc
adc
mov
sub
adc
xchg
dec
and
sub
add
fidivl
andb
mov
mov
or
sbb
xorl
jl
push
cmpsl
mov
push
jge
ret
fildl
insl
sbb
fcoms
cmc
aas
and
pushf
repz
sub
mov
imul
xchg
jge
cmpsb
or
sbb
cmpb
je
dec
mov
mov
andl
xor
stos
test
xlat
shl
inc
incl
das
adc
sub
dec
adc
packsswb
sub
inc
or
call
adc
push
orb
outsb
testl
test
sbb
mov
aaa
cmpsl
into
incb
mov
repz
mov
pop
adc
sub
adc
scas
scas
imul
inc
and
lock
in
cmp
call
mov
rcr
inc
inc
test
bound
jmp
push
push
jo
sub
sbb
jns
mov
add
lret
lock
scas
mov
jle
pop
inc
out
ja
push
fdiv
rcrb
jg
fsubl
addb
and
je
pop
mov
scas
hlt
or
jp
adc
cltd
inc
pop
inc
cmp
sub
je
jbe
and
or
jl
mov
test
and
sbb
bound
std
test
das
adc
adc
aaa
push
in
or
or
lds
mov
pop
add
xchg
and
mov
adc
rorl
cmpsb
push
add
mov
dec
add
jecxz
and
or
fidivs
mov
insl
add
fdivl
gs
and
xor
add
inc
cmpsb
inc
mov
pause
add
lods
ja
aaa
xchg
mov
cmp
ja
mov
inc
in
outsb
push
fidivl
lods
pushf
jmp
icebp
fldl
or
mov
lret
xchg
and
aad
cmp
imul
add
stc
out
inc
sbb
je
cld
outsl
je
push
or
xchg
stos
jae
jne
dec
adc
loopne
xor
stos
movsb
mov
and
lods
loop
je
ljmp
inc
sub
hlt
aaa
cs
push
repz
or
mov
and
inc
loopne
sbb
mov
pop
push
daa
or
and
sub
adc
push
adc
mov
xchg
xchg
cmp
add
pop
test
ror
jb
ja
insb
mov
mov
pop
dec
fcoml
unpckhps
int3
jbe
cmp
repz
mov
dec
cmp
jg
adc
out
xor
repz
inc
les
cmpsl
xchg
mov
call
push
and
jmp
sbb
mov
or
insl
movsb
jo
push
leave
cmp
cmpsb
aad
pop
aaa
andb
in
or
ja
ds
xor
and
push
pop
imul
adc
inc
in
or
inc
sbb
adc
mov
mov
ret
sbb
cmpsb
movsl
pop
test
jbe
outsb
cld
jl
sarb
inc
sbb
push
or
xor
or
aas
icebp
fistpll
dec
push
fucomp
lcall
xchg
ljmp
les
mov
shl
lock
movsl
stos
dec
dec
rcrl
or
out
mov
mov
inc
jne
pop
das
mov
xor
push
or
push
or
mov
dec
pop
popa
dec
jl
jo
divb
icebp
popf
in
mov
add
add
pop
lods
adc
cld
push
sub
lahf
mov
ja
jmp
aad
cli
jmp
enter
add
loopne
mov
stos
push
and
xlat
lock
jp
adc
cs
add
pop
mov
mov
or
movsb
pop
and
or
push
scas
inc
pop
dec
scas
and
pop
cmc
inc
push
call
outsb
js
mov
dec
sbb
movsb
pop
in
ficoms
mov
push
pop
push
in
mov
andb
icebp
dec
jle
mov
fstpt
sbb
dec
adc
pop
repz
push
mov
adc
jmp
jnp
cmc
dec
inc
sub
xor
inc
cs
fisttpl
cmc
xor
pop
dec
lcall
fdivl
stc
cld
rolb
rclb
or
roll
in
ret
mov
adc
push
mov
sti
xchg
inc
movsb
iret
cmpsb
pop
push
dec
and
outsl
add
pop
cwtl
fwait
mov
mov
and
dec
push
mov
ret
pop
out
or
add
sbb
sbb
scas
and
jnp
mov
and
or
or
insl
jg
and
cmp
mov
sbb
addb
outsl
sub
lods
js
cmp
ljmp
mov
and
mulb
addb
fdiv
push
jns
or
mov
mov
inc
mov
mov
pop
push
jg
rorb
jnp
xchg
add
scas
mov
rclb
xlat
ss
outsl
mov
loope
pop
push
repz
or
or
dec
in
cwtl
lods
mov
jns
inc
pop
in
and
adc
loopne
rol
je
push
fs
std
adcb
or
rcl
adc
or
xor
loop
mov
or
and
jae
rolb
cmp
insb
jmp
mov
add
lea
mov
das
mov
jp
push
jne
fbld
call
xchg
add
sub
stos
pop
lods
mov
shrl
push
icebp
je
mov
add
add
mov
cmp
sub
inc
lock
mov
push
movsl
ljmp
shll
pop
push
test
add
mov
inc
mov
jge
mov
stos
fistps
pop
test
outsb
xor
adc
cmpsb
scas
sub
cmpsl
std
sarb
fstpt
inc
out
push
hlt
mov
jbe
and
popf
pop
call
inc
mov
xchg
xor
loopne
cmc
rolb
or
add
dec
fldl
insl
daa
pop
inc
daa
je
adc
out
mov
je
jle
enter
notb
add
xor
lret
out
mov
jmp
nop
sub
pop
stos
sbb
pop
mov
arpl
xchg
fcmovnu
outsl
lret
jle
jns
adc
sbb
dec
in
loopne
pushf
incl
sbb
jns
inc
dec
mov
sbb
mov
lret
push
xor
inc
sbb
jge
mov
aaa
jne
xchg
xchg
push
ss
xor
mov
push
je
dec
decb
fidivrs
jne
ffreep
add
in
das
adc
lahf
daa
and
inc
dec
js
outsb
adc
mov
mov
fnstcw
test
adc
or
xchg
add
clc
xchg
mov
cmc
and
inc
cwtl
ljmp
repz
push
add
lahf
dec
pop
subl
cmpsb
mov
push
mov
das
cmp
rcrb
pop
and
adc
inc
enter
fistl
test
ss
pop
pop
mov
sbb
and
and
jb
mov
or
dec
add
dec
push
jg
out
clc
in
lret
outsb
mov
add
sub
jg
ljmp
sbb
mov
sub
in
das
mov
adc
lret
loop
mov
add
fwait
mov
pop
sub
js
sahf
dec
into
adc
aaa
push
sub
je
adc
repz
aaa
inc
cltd
aad
sbb
orl
imul
xchg
pop
sub
add
pop
and
xlat
and
jp
sbb
pop
mov
add
call
cmp
les
push
sub
sarl
sub
leave
mov
jno
je
stc
mov
xor
les
mov
stos
subl
lds
sub
in
and
movsl
add
push
ljmp
adc
mov
adcl
insb
inc
fidivrl
cltd
xor
xor
pusha
std
push
in
insb
or
jae
xlat
jmp
mov
sub
cmp
loopne
aam
xchg
adc
cmp
mov
add
jne
mov
mov
add
fidivs
push
lds
lret
cmc
push
mov
fdivs
fsubrp
jne
mov
xor
clc
or
loopne
inc
nop
lods
es
dec
sbb
or
or
scas
roll
int
sub
push
cmc
cmpb
xchg
dec
xchg
fsubr
sub
ja
and
pop
ss
stc
popa
push
mov
jbe
pop
push
fimull
subb
cld
cmpsb
jbe
scas
jno
imull
cmp
xchg
lahf
in
inc
loopne
outsl
pop
rorl
mov
jmp
fisubs
or
stos
and
rclb
mov
xchg
inc
and
or
xchg
fisttpl
ret
cmp
shrl
sub
mov
mov
ljmp
notb
push
lds
bound
aaa
and
cmp
add
pop
dec
subb
mov
fidivl
inc
push
jmp
aam
imul
dec
xor
mov
call
push
mov
inc
push
sbb
roll
sti
icebp
adc
je
jb
clc
sarl
aad
ret
dec
stc
push
and
ret
mov
mov
adc
insl
pop
stos
lret
jnp
inc
pushf
mov
jg
movsl
outsb
push
lret
ret
pop
jns
nop
and
and
adc
mov
add
adc
xchg
add
sbbl
push
mov
push
adc
and
inc
inc
mov
cmpsl
inc
sub
or
sbb
xchg
pop
mov
jns
sbb
and
fcoms
or
rorl
outsb
cmp
xchg
cwtl
adc
push
mov
or
sub
subb
push
lcall
loope
xorl
push
pop
mov
inc
aas
or
fcoms
jb
push
outsl
ljmp
pop
ljmp
mov
jb
das
mov
push
rcrl
jmp
pop
or
orb
scas
loope
jl
push
lds
lcall
cs
pop
sbb
cmp
push
mov
mov
push
jne
cmp
and
scas
mov
cli
insb
jecxz
hlt
mov
sub
in
and
sub
cmp
std
iret
std
shll
push
scas
sub
aam
mov
inc
push
adc
mov
arpl
stc
mov
sub
mov
movsl
call
and
or
jno
or
push
jne
jp
or
xor
pop
add
pop
sub
mov
jo
or
jecxz
xchg
aas
insb
xor
mov
aam
cwtl
enter
jle
inc
dec
or
mov
fs
push
inc
insl
test
fs
out
xchg
xchg
loope
jecxz
xchg
sub
es
pop
pop
pusha
or
xchg
test
shlb
test
outsb
inc
mov
sub
repz
aaa
and
fistpll
pop
adc
sbb
pop
data16
and
mov
inc
shl
inc
adc
adc
add
ljmp
sub
mov
xchg
aam
fwait
inc
sbb
push
bound
inc
xor
in
pop
loopne
adc
mov
jmp
sub
sbb
aaa
int3
adc
pop
aad
fs
adc
call
xor
inc
adc
aas
push
push
aaa
fcmovb
xchg
mov
add
cmp
movups
test
mov
icebp
mov
inc
and
xchg
sub
mov
mov
adc
inc
ret
cmc
insl
sub
shl
dec
lahf
mov
jge
in
pop
and
dec
mov
inc
push
lea
in
pop
sbb
inc
sub
adc
pop
mov
sub
inc
int
add
sahf
pop
sub
adc
inc
dec
lods
lds
movsl
fildl
ljmp
sbb
jle
adc
push
and
xorb
lds
ficoml
lods
movsb
or
subl
outsl
outsl
mov
call
mov
or
or
adc
sub
mov
ja
mov
sub
call
add
add
adc
cld
sub
cli
pop
pop
inc
data16
jns
dec
cmp
mov
sbb
in
cmp
lcall
mov
xor
pop
dec
sbb
jo
inc
inc
dec
addr16
fmuls
out
xor
sub
fcompl
and
add
sub
lret
in
pop
sti
inc
pop
mov
mov
mov
mov
jnp
sub
shrb
movb
je
fbstp
outsb
movsb
movsl
cmp
xchg
inc
sub
jecxz
add
inc
je
dec
xchg
div
or
mov
or
push
mov
push
fisttpll
or
clc
fiadds
inc
decl
call
jae
adc
mov
dec
or
cmp
roll
fucom
testl
call
call
sbb
jle
inc
xchg
pop
add
addr16
inc
fisttpl
fdivrl
and
stos
aas
push
insb
test
rolb
add
mov
mov
jge
xor
mov
xchg
rcrb
sbb
mov
and
insl
fldt
dec
loopne
sahf
cmpsl
sub
hlt
imul
filds
adc
or
sbb
adc
or
bnd
movsl
aad
adc
mov
std
push
mov
iret
cmpsb
ja,pt
and
push
sbb
or
pop
mov
mov
cs
or
push
inc
or
cmp
je
movsb
fs
or
push
xor
sbb
mov
adc
or
ds
sub
frstor
push
add
sub
mov
addr16
mov
fisubrl
repnz
out
push
out
pop
pop
loop
adc
stos
rclb
mov
lcall
adc
bound
mov
pop
add
sub
adc
dec
push
push
sbb
and
xor
mov
push
roll
pop
sub
imul
mov
les
aas
adc
jle
adc
aaa
inc
loope
xchg
fwait
cli
push
ss
push
dec
xchg
push
or
jecxz
sub
je
or
lods
je
push
push
fcomps
mov
js
pop
cs
cltd
and
xchg
std
hlt
and
lret
adc
outsb
cwtl
jmp
je
push
add
adc
outsl
clc
mov
sbb
cmp
aas
mov
dec
xor
test
jne
inc
pop
or
aad
xor
dec
cld
push
mov
inc
mov
out
mov
mov
lock
sub
lds
push
popa
pop
outsb
mov
inc
mov
pop
mov
out
or
repnz
sbb
jmp
and
shrl
sbbl
sbb
pop
rcll
or
out
mov
or
add
mov
ret
sub
cmp
pop
iret
lods
xor
cmpsl
leave
mov
push
aad
call
and
mov
mov
xor
mov
mov
pop
sub
mov
arpl
inc
popf
lret
lock
enter
call
sub
pop
pushl
fsubrs
loopne
jl
cli
incl
std
je
inc
inc
jle
adc
xchg
insb
cltd
out
adc
nop
iret
inc
jo
push
pop
bound
or
mov
pop
jp
cmp
clts
out
fidivrl
mov
out
mov
pop
pop
inc
mov
fsubl
lahf
push
mov
fldt
xlat
jg
mov
adc
jnp
dec
je
imul
add
mov
imul
xchg
jbe
mov
mov
add
mov
mov
pop
leave
inc
das
ret
or
iret
in
adc
mov
stos
mov
mov
adc
leave
cli
fcmovnu
adcb
adc
stos
or
call
mov
inc
imul
scas
ja
xor
sarl
hlt
pop
sti
pop
sbb
call
jge
pop
inc
push
or
mov
xchg
adc
sub
and
mov
adc
mov
cmpsl
mov
or
inc
into
adc
xorl
sub
mov
inc
movsl
push
mov
or
inc
adc
jge
inc
sub
xor
xchg
add
filds
mov
or
add
adc
mov
mov
aas
ret
repnz
les
jne
jg
and
push
std
inc
xchg
mov
sbb
popa
mov
aad
sahf
push
out
lods
popf
adc
push
mov
mov
test
xchg
jl
or
pop
fcomp
cmpsb
push
adc
or
jo
mov
aad
add
ljmp
rcll
adc
dec
rorl
test
jp
jb
les
adc
lods
inc
jbe
in
mov
or
dec
xlat
jno
ja
in
adc
lods
inc
xchg
push
fsubl
inc
mov
push
adc
jge
into
inc
fiaddl
mov
jno
mov
or
mov
and
and
inc
mov
loopne
and
xchg
and
or
pop
mov
or
ss
stc
jp
loopne
lcall
mov
jp
int3
es
and
movsb
in
sub
add
push
loope
pop
shlb
dec
ljmp
ja
rclb
rolb
outsb
stc
sbb
mov
lahf
dec
decb
jne
lea
mov
xchg
sbb
outsl
aad
shlb
call
inc
outsb
cmp
mov
fnstenv
push
xchg
iret
push
adc
or
in
nop
mov
mov
mov
out
push
adc
or
orb
add
imul
outsl
cmp
jp
out
fsubs
jbe
adc
pop
loope
push
addl
outsl
or
xchg
les
sbb
or
cwtl
rclb
mov
insb
jl
sahf
xchg
jb
loope
jge
pop
ret
xacquire
adcb
aam
sub
add
mov
fldcw
push
jl
dec
jge
mov
scas
push
xchg
call
mov
ja
fisttpll
repz
cmp
push
fs
lods
out
dec
loopne
mov
lea
insb
adc
xchg
sbb
add
xchg
mov
outsb
xchg
scas
pop
int
imul
and
cmp
adc
sbb
cmp
xor
xchg
fistl
inc
testb
outsb
or
test
fists
mov
inc
mov
cs
jbe
lock
adc
lret
mov
xor
or
cmp
repnz
or
loope
call
gs
mov
jle
jo
pop
xchg
push
pusha
add
and
adc
xchg
outsl
adc
xchg
int3
sub
bound
pop
sbbl
dec
aad
mov
add
dec
rclb
push
mov
out
or
mov
mov
lods
ficoms
out
push
adc
scas
inc
pop
mov
test
scas
faddp
shll
out
jmp
mov
xchg
jmp
mov
sub
sub
sbb
lock
mov
mov
inc
mov
xor
mov
loopne
pop
inc
dec
jp
pop
ja
xor
les
call
call
sbb
adc
jbe
xchg
test
mov
pop
movsl
xchg
push
imul
and
shlb
xor
movsb
jp
mov
dec
std
ret
std
aam
addl
inc
mov
mov
es
test
loopne
outsl
movsl
or
xor
insl
mov
in
mov
arpl
nop
pop
add
add
loopne
jp
and
jbe
arpl
pmuludq
stc
fistl
push
jmp
adc
adc
outsl
xchg
loopne
ja
adc
jmp
or
mov
cs
sub
xchg
test
xorl
sbb
push
push
fcom
cmp
dec
dec
sub
negb
insl
ret
fstl
test
loopne
lods
xorl
out
stc
in
imul
mov
cld
and
orb
lods
xchg
test
inc
fildl
sub
add
rcl
sub
bound
cmp
xor
and
sub
add
loope
out
ror
leave
std
mov
icebp
jl
or
push
fadd
xor
adc
aam
dec
jl
sbb
jne
inc
shll
sbb
movsl
leave
or
sbb
in
pshufw
push
imul
xor
fsubl
push
jg
push
shll
ret
cmpsl
push
and
call
je
jbe
addr16
adc
or
or
into
push
js
add
sbbl
pminsw
mov
lods
bound
cltd
mov
add
call
cmp
cltd
jp
mov
rorl
adc
and
sbb
adc
mov
and
andb
pop
faddl
jb
xorb
push
ffreep
add
popf
stos
and
sbb
mov
inc
int
push
and
pop
add
test
ss
push
test
push
movsl
sbb
push
loopne
pop
mov
aaa
sub
sbb
inc
pop
and
push
sub
mov
sbb
shll
test
fdivr
test
outsb
test
dec
push
adc
ss
mov
or
das
inc
aaa
loop
push
dec
push
lock
pop
stos
cltd
jno
push
add
push
jns
mov
lods
call
shlb
adc
fs
scas
mov
add
inc
rclb
xor
jne
dec
lret
ja
adc
sahf
add
lret
mov
cld
in
sub
popa
push
in
xchg
add
inc
ret
cmpxchg
ret
cs
add
inc
es
ret
inc
movsl
pop
xchg
jp
mov
mov
jp
pop
div
cmp
xor
pop
mov
ret
adc
jne
out
aad
inc
outsl
clc
mov
add
stc
rcll
outsb
cmp
xor
adc
ret
das
push
sbb
inc
jo
std
cmc
inc
jns
cmp
cmc
or
rcr
and
xchg
push
mov
ret
jbe
and
push
cmp
sub
imul
xchg
loope
dec
pop
sbb
in
pop
sub
int
mov
fnstcw
ss
or
add
cmp
arpl
push
pop
xchg
inc
pop
ss
in
xchg
jne
outsb
mov
cmc
mov
mov
dec
xor
push
mov
mov
pop
xchg
mov
int
and
or
jge
sub
inc
mov
pushf
icebp
lods
add
mov
dec
or
in
sbb
push
pop
mov
mov
std
xor
in
push
ja
mov
add
repnz
testl
lock
dec
cmp
rcll
dec
mov
je
scas
and
arpl
loopne
aad
aaa
xor
sub
decb
shrl
cmp
sub
inc
in
mull
movsl
or
or
rdmsr
cltd
xchg
imul
push
popa
aam
ljmp
and
dec
sub
icebp
push
sahf
les
inc
sbb
pop
sub
sub
shl
dec
pop
pop
lret
sbb
lahf
add
pusha
insl
mov
fstpl
xchg
xchg
popf
fs
pop
inc
sbb
or
sub
sub
das
adc
data16
mov
je
or
push
popa
mov
push
jg
mov
fisttps
and
stos
sbb
dec
sbb
mov
dec
mov
icebp
aaa
add
dec
movsb
in
sti
ljmp
repz
inc
add
mov
push
mov
roll
jmp
cmp
sub
pushl
inc
add
push
push
push
inc
mov
movsl
stos
stos
mov
cli
add
inc
add
in
inc
imul
repz
jmp
add
mov
adcl
xchg
mov
and
add
testl
rcrb
iret
addps
add
dec
and
in
add
ret
adc
inc
adc
cmp
fldt
add
sub
or
dec
sbb
mov
imul
inc
ja
filds
mov
ss
inc
js
xor
ja
outsb
inc
cmp
mov
jns
push
inc
bound
in
outsl
cmp
rolb
pop
sbb
call
ret
push
insb
inc
mov
push
pop
add
arpl
clc
in
divb
lret
outsb
push
sbb
sub
cli
dec
mov
lock
xor
jns
clc
push
mov
shlb
add
adc
or
cltd
inc
jne
and
add
push
add
push
fs
add
popa
imul
adc
or
mov
jge
outsl
sbb
test
out
push
jmp
ret
js
in
outsl
jg
fbld
jne
shrb
pop
pop
pop
dec
je
mov
add
add
mov
push
testb
fucomp
xchg
push
jno
push
in
dec
inc
aam
fmull
mov
push
xor
adc
lods
sti
mov
jne
call
dec
jne
ret
inc
in
pop
mov
jo
push
ja
popa
loop
stc
add
add
ret
movsl
xor
xchg
dec
test
mov
mov
mov
jns
pop
adc
imul
mov
outsl
adc
add
add
nop
inc
mov
ja
lea
je
push
pushf
testb
gs
movsl
ss
negl
lock
push
jae
ret
outsl
int
mov
add
ret
bound
pop
sub
aas
cld
fstpt
xor
jno
dec
outsb
dec
dec
add
inc
push
mov
pop
dec
outsl
inc
xor
outsb
dec
aaa
dec
push
dec
mov
insl
jbe
adc
mov
call
shlb
jg
dec
js
mov
out
fwait
dec
mov
mov
push
ljmp
cmp
inc
cmp
inc
fs
into
inc
or
lods
lock
jbe
add
xor
pop
ds
cltd
inc
cmp
leave
jno
lea
or
mov
xor
mov
ret
inc
cmp
in
push
mov
ja
shll
sbb
inc
jne
movsl
sbb
jae
lds
cmp
ja
and
dec
loopne
mov
stc
jbe
out
add
xor
cmp
xrstors
inc
mov
inc
add
push
dec
or
test
outsl
in
loope
dec
push
jae
inc
insb
cmp
push
mov
dec
inc
sub
inc
into
jmp
rolb
test
imul
loope
dec
xor
jl
sub
daa
movsl
adc
pop
mov
dec
dec
jl
xor
add
add
ficomps
xor
mov
negl
ja
inc
push
div
iret
pop
add
xor
in
sar
xchg
xlat
dec
mov
sbb
sbb
xor
push
das
hlt
or
xchg
test
sub
xchg
add
popa
sbb
lea
adc
aaa
sub
push
inc
mov
inc
inc
and
mov
sbb
pop
adc
cmpsb
shrb
mov
ret
shll
sbb
mov
and
dec
sub
xchg
movsl
add
adc
sbb
jmp
std
adc
pop
movsb
test
add
jmp
fucomip
mov
out
fldenv
dec
daa
jo
inc
mov
pop
and
ds
out
push
sbb
stc
daa
leave
popf
or
xchg
mov
cmp
xchg
daa
adc
repnz
cmp
push
mov
jle
pushw
loopne
pop
cmpsl
inc
push
push
inc
mov
jns
and
ja
lcall
ss
adc
cld
cmp
xchg
push
pop
mov
or
jo
push
mov
push
imul
call
or
and
es
pop
inc
fbld
or
and
xchg
inc
lods
mov
xchg
or
lret
sub
test
insb
pop
add
aas
lock
ljmp
mov
cmp
enter
pushl
or
mov
and
dec
lcall
add
test
sbb
adc
or
mov
sbbl
call
add
clc
lea
or
dec
loopne
xor
das
test
lcall
int3
xchg
add
incb
outsl
scas
roll
pop
adc
icebp
push
rorb
test
mov
loopne
call
or
movsl
icebp
dec
lock
cmpsb
cmp
adc
inc
adc
mov
adc
dec
cmp
sbb
fs
les
stc
jg
cli
dec
jne
jl
aad
sub
and
cmp
push
fists
fisubrl
jl
cmp
jl
fists
mov
inc
es
std
test
xorl
lock
fsubrl
push
in
sbb
ds
push
stc
jne
cmp
add
out
cmp
test
mov
inc
ss
test
inc
xor
aam
or
cmp
ret
lret
ljmp
or
in
mov
fdivp
call
sarl
call
pop
enter
mov
push
and
cmp
push
xchg
pop
std
out
fadds
sbb
dec
mov
jg
push
fiadds
mov
mov
xor
decl
add
mov
and
jecxz
xor
xor
mov
mov
or
pop
jns
xchg
sub
or
inc
mov
incb
sbb
lcall
leave
inc
das
push
add
mov
inc
jns
xchg
clc
push
or
jno
cs
leave
adc
pop
cld
pop
mov
and
jno
sbb
test
inc
jo
mov
notl
mov
test
fadd
or
fdivs
lds
outsl
inc
es
rclb
jg
test
test
sub
cmp
mov
mov
cmp
jl
aad
push
push
sub
adc
sub
dec
sar
aaa
cli
jb
and
jno
jne
push
sbb
and
sub
pushf
stos
es
ja
repnz
lock
or
adc
es
sbb
adc
sbb
add
lods
ret
cli
dec
nop
inc
add
mov
fists
add
pop
xor
adc
jmp
popa
pushf
xchg
cmp
inc
push
lea
or
cmpsl
jle
mov
popa
lea
iret
cltd
push
mov
xchg
fildll
outsl
imul
lret
mov
mov
adc
and
xchg
repnz
decl
sub
daa
pusha
aas
xchg
push
cmp
mov
mov
adc
inc
or
sub
aaa
jns
xor
faddl
shrl
pop
xchg
cmp
or
leave
inc
adc
or
mov
inc
cmp
sbb
inc
lea
cmc
lahf
push
aam
std
pop
jle
sbb
testl
sti
jo
mov
cli
inc
sti
outsl
sbb
add
popa
inc
clc
mov
mov
add
test
xchg
inc
push
dec
inc
aad
sub
inc
lahf
xlat
sarb
push
call
and
dec
xor
jo
fcomps
mov
cwtl
sbb
sbb
inc
or
xor
xor
incb
hlt
outsb
sbb
and
mov
adc
lods
mov
int3
test
shr
je
push
mov
jle
or
cmp
cld
jg
rorl
push
lret
push
inc
scas
pushf
testl
mov
sahf
cwtl
mov
adc
sbb
inc
sar
enter
mov
xor
dec
sar
jg
call
cld
outsb
fnstenv
dec
nop
insl
dec
mov
je,pt
mov
sbb
ss
cmp
adc
dec
sub
and
leave
or
aam
sbb
and
das
push
hlt
xchg
and
movsb
adc
call
lods
es
push
subl
scas
add
lock
aam
push
call
into
mov
mov
fdivr
decl
push
dec
pop
int
adc
je
jge
adc
pop
push
fnstcw
or
push
lret
push
mov
nop
mov
ficoms
adc
adc
mov
pop
pop
cmpb
outsb
sbb
mov
adc
pusha
addl
cmc
jne
addr16
jns
shll
cs
test
add
xor
pop
out
test
push
sub
je
test
call
in
inc
aaa
mov
ret
repz
jmp
push
lea
lea
aam
fs
cmp
or
jp
rolb
aas
jnp,pt
sub
sub
repz
cmp
sar
mov
or
loope
mov
adc
rorl
inc
sti
pop
mov
movsl
aaa
sti
idivb
and
xlat
adc
sub
mov
or
cmpsl
jge
pop
add
bound
je
adc
in
call
aam
mov
pop
mov
adc
aaa
js
fsubrs
mov
invd
xchg
inc
out
fs
mov
sub
bound
mov
mov
sub
inc
enter
outsl
adc
pop
cltd
dec
leave
cmp
jnp
push
sub
cmp
sbb
les
sbb
and
and
ret
insl
lds
inc
adc
fmull
adc
icebp
outsl
icebp
inc
loopne
xor
inc
and
jmp
push
or
adc
sbb
or
mov
mov
add
and
popf
jl
mov
arpl
lods
and
not
adc
push
ss
enter
jg
mov
data16
stos
and
mov
dec
outsl
mov
lret
loope
push
or
fldz
sbb
mov
cmc
or
insb
in
jbe,pn
popa
dec
adc
or
jnp
call
leave
test
rclb
lret
std
xchg
mov
pop
mov
mov
xor
fisttpll
fmuls
out
mov
jecxz
jmp
jo
cmpsl
pop
int3
cmp
idivb
stos
aad
cmp
icebp
mov
jle
in
pop
inc
xlat
or
movsb
inc
frndint
dec
clc
inc
adc
sub
dec
and
test
or
iret
sub
mov
mov
pop
std
inc
lcall
cwtl
out
or
dec
shlb
pushf
mov
push
or
sub
mov
popl
pop
cmp
cmp
clc
call
nop
fmulp
push
push
mov
mov
jg
push
push
mov
sub
sub
xor
insb
inc
and
ljmp
and
fwait
loop
xchg
adc
stc
mov
inc
adc
in
ret
ror
inc
push
fsts
add
adc
inc
add
pop
lahf
push
cmp
inc
incl
incl
jno
xchg
adc
sahf
xchg
mov
scas
or
push
sbb
inc
and
cltd
dec
clc
pusha
add
add
mov
inc
ret
push
push
out
das
andl
cmc
sub
movsl
jne
or
incl
hlt
mov
push
fldt
outsb
or
xchg
or
and
pop
inc
add
dec
dec
mov
ljmp
push
push
push
cltd
and
xor
sbb
aam
or
enter
adc
add
mov
cmp
sbb
nop
je
in
aas
or
sbb
sbb
jno
das
push
add
or
push
mov
int3
or
or
sarl
adc
sarl
fbld
mov
mov
jne
lret
lcall
decl
lods
xchg
cld
pop
nop
pop
mov
decb
movsb
decl
or
ds
inc
test
call
or
fs
les
rorb
ret
cmp
pop
gs
push
bound
add
or
jmp
xchg
fistpll
jle
and
cmpl
addr16
and
sub
add
inc
sub
or
mov
lea
jnp
test
int3
sub
jmp
push
adc
pop
std
ret
push
je
add
in
mov
mov
mov
das
pop
clc
pop
or
scas
mov
jg
push
push
push
xor
test
or
mov
push
jge
imul
and
lock
cmp
cmpl
cmp
andb
and
add
xchg
je
sbbl
fistps
pushl
call
adc
cli
mov
repnz
mov
pop
fdivrl
add
pushl
and
push
orb
ljmp
movsb
mov
stos
imulb
and
test
mov
inc
arpl
loop
or
sbb
mov
movsl
aaa
adc
pop
add
addr16
sub
jb
stos
pop
loopne
jno
orb
mov
add
inc
mov
shll
adc
jg
bound
lds
popf
sub
dec
jmp
mov
inc
mov
push
mov
clc
pop
ljmp
ds
add
insb
push
pop
jle
incb
sub
pop
sub
xor
movsl
sbb
fsub
je
imul
imul
mov
arpl
outsb
das
cmc
adc
mov
push
aaa
call
mov
xor
mov
inc
cmpl
mov
inc
jb
das
pop
clc
in
xchg
dec
adc
dec
lods
sbb
je
xor
xchg
jecxz
push
add
jne
cmp
ret
push
cmc
sbb
mov
sub
mov
mov
decl
sarl
mov
rclb
fcomip
je
mov
ss
dec
daa
cmp
add
pop
fdivrp
add
arpl
cwtl
cmp
push
cmpsb
enter
mov
repnz
lret
sbb
pop
pop
loop
addr16
push
push
add
jg
mov
test
jg
pop
and
adc
scas
or
std
pop
clc
lods
arpl
sub
sub
sbb
push
loopne
add
inc
shld
cmp
push
leave
les
add
out
sbb
adc
mov
jle
adc
add
into
into
jno
loope
je
fistps
and
decb
inc
neg
clc
jmp
xor
lcall
sahf
and
test
adc
mov
push
cmp
inc
stos
xor
push
pop
and
xorb
sub
push
aad
mov
test
xor
outsl
push
jbe
cmpsb
jbe
sub
loope
dec
mov
jo
mov
jg
in
dec
fwait
pop
push
inc
fs
mov
ret
fs
fiadds
js
loopne
xchg
test
push
dec
lahf
mov
lds
mov
test
jae
xchg
test
mov
xchg
ljmp
jle
mov
dec
repnz
cmpsb
push
cld
pop
and
dec
lds
xchg
cmp
jg
pop
sub
jge
leave
out
sbb
les
mov
nop
inc
push
inc
mov
or
je
or
and
call
inc
mov
xchg
subb
stos
cmp
or
mov
nop
push
hlt
les
mov
xor
sarl
push
inc
shll
lds
inc
test
fsubrs
repz
frstor
lods
icebp
mov
jne
inc
add
repnz
shl
mov
lcall
xchg
test
and
or
push
icebp
repnz
std
incl
inc
clc
and
sbb
in
xor
cs
call
stc
dec
mov
std
or
insl
rol
xchg
xor
adc
daa
and
jg
lds
or
or
int
sub
fists
adc
rcrl
mov
xchg
gs
outsl
mov
push
and
mov
inc
in
sbb
xor
jg
out
jg
mov
push
add
mov
fsubrl
ret
pop
mov
push
add
rolb
sbb
xchg
pusha
adc
add
cmpsb
mov
or
add
push
cmp
mov
dec
out
ljmp
cwtl
and
xchg
xchg
pop
push
add
mov
ljmp
cmc
enter
je
dec
adc
test
mov
and
mov
jmp
outsl
scas
xor
sub
mov
xchg
xor
aad
push
inc
jle
shll
push
mov
jbe
cs
lods
lcall
jo
call
xor
pop
mov
lock
cwtl
mov
iret
icebp
sbb
ret
adc
push
adc
sbb
sub
fmuls
push
rorb
pop
sbb
dec
jne
cwtl
cmpb
inc
jmp
cltd
stc
repz
enter
movsl
pop
mov
push
or
ljmp
jge
lock
ljmp
jne
orb
inc
xor
inc
inc
lock
xchg
pop
loopne
lock
push
push
stc
xor
adc
inc
sub
inc
add
push
pusha
cmp
jl
sub
pop
jno
out
add
hlt
ljmp
push
inc
icebp
sbb
std
je
adc
xchg
cmp
push
enter
or
sub
sbb
mov
push
sbb
mov
ljmp
je
outsl
dec
dec
loopne
subb
fdivrp
fistps
push
jae
mov
xchg
and
in
sub
or
push
push
iret
mov
les
and
bswap
inc
test
dec
nop
fldt
andb
cli
sub
insb
in
sbb
jbe
loop
loope
aaa
mov
shlb
xchg
or
in
pop
mov
clc
movsl
insl
dec
les
mov
fwait
sub
adc
mov
int3
mov
push
das
push
icebp
das
inc
cwtl
jecxz
xchg
fcoml
je
pop
jle
das
jae
insb
loopne
xchg
mov
sub
cld
lret
enter
iret
in
stos
outsl
shlb
and
jg
adc
repz
push
insl
mov
nop
xor
mov
mov
pop
add
pop
or
xor
pop
sub
push
incl
clc
cmp
pop
addr16
jg
icebp
mov
orb
mov
adc
add
or
sub
pop
fisubrl
pop
das
cmp
and
xchg
add
clc
or
and
outsl
xor
aaa
cmpb
lods
fidivrl
test
rclb
add
xchg
outsl
adc
movsl
add
jne
imul
mov
fildll
fisubrs
test
adc
lret
adc
fadds
push
or
sub
xor
inc
fistps
cmp
sub
call
je
rcrb
in
push
mov
dec
cli
loope
jg
fs
jne
decb
adc
shll
pop
cmp
xor
jg
mov
push
in
mov
mov
lcall
stos
add
aam
addl
hlt
or
jnp
fildll
or
pop
push
inc
std
add
aad
mov
push
fildll
inc
jmp
inc
outsl
add
or
lcall
jmp
mov
lret
out
inc
call
inc
sahf
xchg
xor
movsb
push
sbb
rorb
lock
xor
xchg
mov
test
jne
xchg
dec
mov
out
xchg
sub
xor
outsb
and
sar
fistps
std
mov
push
hlt
aad
call
mov
fildl
xchg
sbb
addl
mov
fistl
call
add
jns
mov
movsb
and
inc
inc
in
jle
pushf
rdmsr
scas
sbb
inc
inc
sti
adc
xor
imul
and
or
rcll
rorl
clc
jmp
call
call
stc
pop
push
cmp
push
std
sbb
pop
outsl
cmpsl
inc
and
repnz
ficoml
add
ss
sub
lock
mov
cs
push
push
fs
or
scas
dec
cli
push
in
fucomip
ret
pop
pop
add
push
jmp
pushl
insb
jo
jb
pop
xchg
clc
sar
aam
aas
inc
pop
jns
mov
pop
sbb
dec
call
lea
cmc
testl
pop
inc
mov
pop
gs
cld
call
adc
xor
inc
js
add
sbb
loop
jecxz
lcall
test
push
sbb
rorl
int3
cli
dec
je
fidivs
dec
repnz
mov
mov
movsl
ljmp
movsl
inc
loope
mov
pop
test
add
add
loop
sbb
inc
outsl
icebp
dec
outsl
sbb
js
pop
adc
adc
add
in
mov
mov
or
mov
mov
int3
movsl
mov
test
mov
dec
push
lods
jge
pop
xor
lret
or
pop
mov
repz
push
jl
mov
and
add
or
jb
or
inc
push
mov
mov
imul
movsb
and
inc
cmc
pushf
push
out
loopne
push
fsubr
data16
fcomps
and
popf
test
insl
fildll
pop
stc
dec
outsl
jmp
sbb
mov
push
mov
inc
rolb
jp
sbb
imul
dec
mov
jg
fimull
dec
adcb
lret
push
jnp
ljmp
push
dec
cmc
fildll
mov
addr16
imul
jno
push
mov
push
in
dec
sbb
cwtl
xor
sbb
push
pop
jl
mov
adc
popf
adcl
std
inc
lds
push
or
ret
and
outsb
pop
dec
jle
adc
pop
in
ffree
adc
add
sti
adcl
scas
sbb
fisubs
xor
fildl
push
pop
cld
cmp
and
sub
pop
or
and
outsl
inc
jg
cwtl
mov
stos
adc
imul
jg
out
js
inc
les
dec
adc
or
sub
dec
adc
dec
add
or
fcoml
mov
push
add
aaa
sbb
std
shlb
jmp
fisubs
or
imul
inc
std
decl
jns
gs
or
inc
mov
fbld
mov
test
outsl
pop
mov
test
out
test
outsb
sub
lcall
rorb
std
bound
enter
ds
arpl
pop
sub
bnd
pop
mov
leave
add
js
das
repnz
lods
fs
adc
inc
decb
mov
mov
cmpsl
sbb
inc
sbb
ljmp
push
in
outsb
je
stos
jg
or
mov
xor
scas
gs
dec
adcb
push
outsl
decl
push
push
aaa
imul
mov
xor
adc
mov
mov
dec
inc
and
ret
movsl
fwait
testb
test
inc
cmc
je
ja
scas
dec
test
pop
xlat
push
jns
pushw
jecxz
xchg
push
lcall
push
xchg
je
mov
mov
icebp
add
adc
dec
nop
mov
sub
cmp
mov
jp
hlt
dec
mov
push
xchg
sub
loop
fildl
fdiv
push
mov
and
je
add
loopne
mov
call
test
rorl
add
cmpsb
lret
and
outsl
add
pop
xchg
pop
das
push
and
mov
lock
sub
in
add
pop
sarb
mov
loopne
jne
add
pop
movsl
xchg
stc
and
arpl
outsl
ljmp
sbb
ljmp
add
push
mov
in
enter
pop
xchg
dec
je
and
sahf
outsl
xchg
fimuls
push
call
cld
inc
and
scas
xor
stos
lea
sub
pop
cmp
push
pop
push
xchg
and
and
xor
mov
movsb
add
ret
sbb
cmp
sarb
ror
jmp
dec
call
jl
cltd
mov
sbb
mov
sub
fstpl
sbb
sbb
ret
add
sub
incb
sub
xor
aaa
sub
ja
fsubl
addb
ds
mov
jmp
js
iret
adc
push
xor
push
dec
cmp
add
sub
mov
push
shl
sub
push
imul
call
lret
gs
adc
mov
in
ljmp
or
fistps
repz
adc
push
dec
and
sub
es
push
sti
push
stos
jne
test
scas
inc
movsb
jg
lea
repz
dec
inc
cmpsl
movsb
js
xchg
stos
xchg
mov
je
js
lret
cld
ret
sahf
jne
xchg
or
add
adcl
pop
incl
pop
push
mov
inc
dec
test
addb
mov
add
rolb
lea
jecxz
stos
jmp
xor
out
jne
stc
inc
push
push
sub
mov
mov
fwait
popf
and
test
push
ss
sbb
jmp
sbb
sbb
pusha
out
or
mov
cwtl
mov
sub
mov
insl
xor
fcmove
dec
iret
sbb
push
jnp
inc
shr
mov
sub
movsl
xchg
xor
icebp
je
je
mov
loopne
fnstsw
push
pop
sub
jg
das
cmc
sbb
jb
adc
in
sahf
dec
xchg
mov
js
jb
pop
iret
or
ret
loopne
iret
arpl
push
popa
push
sarb
enter
mov
sahf
adc
inc
sti
ljmp
jns
sbb
or
dec
inc
and
dec
cmpsl
call
or
mov
mov
stos
in
lea
stos
into
inc
push
movsl
mov
mov
nop
not
loopne
outsb
lock
loop
movsb
inc
cs
push
test
pop
inc
loopne
in
xor
cmpb
mov
adc
pop
nop
aad
mov
rorl
cltd
mov
das
adc
addb
mov
dec
repnz
addr16
aas
xchg
and
sbb
pusha
sub
pop
add
aas
jnp
int
pop
dec
aas
jp
adc
xchg
repz
jnp
jb
dec
jg
lods
add
call
jne
mov
out
hlt
push
adc
ret
mov
cmc
push
sbb
adc
loop
out
arpl
sub
xor
loop
xchg
push
mov
and
test
mov
shlb
arpl
jecxz
pop
pusha
repnz
push
push
mov
call
jno
mov
pop
sub
sbb
sbb
je
sbb
subl
outsl
mov
cmp
add
shlb
stc
sub
sti
lods
mov
hlt
push
or
and
jge
fcmovnu
mov
jmp
shrl
add
popf
jno
std
mov
inc
lods
mov
in
call
mov
jg
push
scas
mov
pop
ss
xor
add
loop
adcl
rolb
lcall
adc
fadds
xchg
aas
hlt
jmp
gs
xor
inc
mov
add
sti
aaa
fidivrs
cltd
in
mov
mov
jns
outsb
add
outsl
jne
clc
test
push
jo
loope
push
testb
cmpsb
aad
xchg
dec
inc
bound
lcall
pop
xchg
sbb
stos
fsubs
mov
push
jl
sub
bound
enter
and
nop
icebp
mov
jno
int3
and
inc
stos
rcll
pop
xor
jl
js
sbb
les
sbb
idivb
mov
ret
mov
sarb
cmp
mov
cmp
outsb
jle
sub
or
cltd
out
pusha
fldl
stc
fildl
bound
sbb
mov
jne
pushf
dec
sbb
xor
jnp
insl
lock
sbb
sbb
and
decl
sub
xchg
and
in
cli
sbb
inc
jg
jg
rorb
data16
js
pop
mov
mov
push
cmc
cmc
or
loop
jbe
mov
mov
je
xchg
mov
xchg
push
push
adc
das
push
xorl
xchg
and
inc
pop
mov
dec
jne
sbb
je
sub
sarb
push
orl
add
mov
aaa
inc
loope
jbe
mull
cli
aaa
jle
cs
aas
sbb
mov
xchg
push
jne
mov
push
push
pusha
mov
xchg
adc
fs
mov
or
xchg
repz
js
sbb
push
and
clc
inc
push
lret
inc
lock
inc
aad
mov
mov
aaa
cmpb
dec
jl
mov
mov
mov
repnz
adc
insl
fdivr
jno
dec
pop
clc
outsl
test
repz
hlt
fistpll
or
jp
pushf
mov
add
push
add
ret
sub
into
cmc
cmp
adc
je
loopw
dec
sbb
jl
inc
cmp
jge
mov
pop
and
rclb
pop
push
sub
cltd
xchg
inc
jge
add
fbstp
and
inc
dec
pushf
inc
pusha
adcl
cmp
sbb
sbb
shrb
addr16
pushf
inc
mov
ficomps
fsubrs
ds
and
jo
insl
pop
cli
mov
add
cltd
leave
loope
loopne
add
jne
pop
loop
inc
push
inc
mov
std
jnp
test
in
push
bound
mov
pop
mov
or
mov
inc
rsm
mov
jo
xchg
stos
sub
inc
inc
dec
jmp
add
jne
shrb
pmuludq
and
inc
imulb
lret
cli
notb
ficoms
or
arpl
sbb
insl
insl
js
sub
inc
push
sub
enter
mov
mov
mov
jnp
add
ret
lock
insb
mov
insb
pusha
add
fucomip
outsl
inc
xor
adc
popf
je
mov
cli
stos
sub
pop
cld
in
sub
cld
in
aaa
push
outsl
arpl
xor
add
sub
or
imul
addb
xor
sbb
mov
xor
cmp
jb
pop
add
lea
outsl
pop
dec
jo
adc
lods
pop
lods
adc
js
ret
dec
mov
adc
aas
aad
adc
iret
inc
xlat
sbb
pop
or
arpl
stc
cmp
jg
shll
or
cmp
lods
pop
lods
cmp
adc
stc
pop
jl
push
adcl
loopne
dec
ljmp
outsb
cmc
sub
outsb
data16
adc
pop
push
add
mov
enter
sub
xor
sub
jl
cld
hlt
je
fcompl
mov
xor
xchg
fcoms
jne
sub
or
filds
ja
ret
sarl
adc
jmp
test
or
or
jne
adc
pushf
cs
adc
fcomi
push
leave
adc
or
nop
and
jbe
sbb
inc
pop
notl
pop
mov
inc
lret
je
or
insl
mov
add
cli
movsb
outsl
fildll
ljmp
dec
inc
mov
lods
mov
mov
push
cwtl
sub
mov
push
dec
mov
or
add
lock
jmp
int
pushl
and
les
and
incb
jne
and
xchg
rclb
ret
and
cmp
mov
das
std
roll
mov
arpl
pop
mov
cld
and
pop
inc
jmp
push
push
and
ljmp
or
pop
push
test
movsb
or
sbb
jge
daa
stc
bound
adc
jecxz
push
jmp
and
adc
sub
mov
in
add
pusha
fiaddl
call
icebp
push
pop
cli
nop
xchg
dec
into
call
das
adc
ljmp
adc
scas
inc
movsb
test
sbb
mov
xchg
push
pop
int3
call
lahf
mov
loop
lcall
push
jbe
shr
out
mov
lock
push
mov
mov
aad
mov
push
outsl
out
sub
push
mov
enter
lcall
inc
or
cli
push
je
mov
push
insb
arpl
mov
sbb
pop
rcrb
les
sbb
call
enter
inc
aam
test
outsl
fists
sbb
lods
adc
push
je
xor
or
inc
hlt
ret
mov
hlt
jg
cmc
cwtl
dec
adc
adc
sbb
call
orb
test
outsl
inc
mov
cmp
scas
and
add
dec
mov
lock
mov
mov
mov
fidivs
outsb
scas
add
push
je
mov
in
adc
in
gs
aam
std
ljmp
incb
outsl
mov
cmpsl
rcrb
cmc
pushf
xor
push
mov
xor
aaa
mov
inc
mov
imul
inc
dec
aad
sub
xor
inc
cmp
std
push
sbb
bound
pop
mov
incb
mov
add
pop
xor
xchg
cmp
push
inc
inc
cld
dec
lea
inc
mov
add
cld
mov
imul
pop
sbb
bswap
mov
push
jne
cli
jg
shlb
lods
xchg
lcall
mov
and
xchg
mov
imul
inc
insb
icebp
das
mov
mov
mov
mov
repz
js
call
add
nop
or
call
push
xchg
mov
popf
xchg
push
push
mov
test
cmp
pop
pop
push
lahf
fs
and
jmp
popf
das
cli
dec
decl
inc
movsb
inc
xchg
call
push
dec
xor
pop
ljmp
inc
negb
call
decl
jo
cmp
stos
mov
adc
call
jmp
cmc
lods
insl
popf
sbb
and
add
andb
push
inc
les
test
and
mov
cmp
mov
xchg
shrb
sbb
xor
dec
es
sub
cld
outsl
adc
clc
sbb
cmc
mov
or
cmp
pop
dec
mov
popf
cmp
or
and
fidivrl
ss
jg
fidivl
push
gs
filds
les
das
jl
jp
inc
sub
in
add
adc
jae
sti
mov
call
push
cmp
push
bound
enter
aad
inc
sub
pminub
dec
insb
jg
nop
xor
fisubrl
xchg
std
pop
aad
sbb
and
xor
jns
cli
loop
push
adc
nop
std
add
mov
push
and
das
mov
aam
xchg
fstpt
shll
mov
push
xor
stos
mov
cmpsb
mov
cld
add
into
daa
inc
mov
sbb
jmp
pop
and
inc
pop
mov
or
jnp
add
movsl
ret
shrb
fldcw
add
dec
cmc
test
outsl
sub
insb
push
sub
and
std
cmpsb
lods
mov
orl
adc
mov
mov
mov
pop
mov
fdivs
testl
mov
ret
cs
hlt
adc
xlat
insb
mov
or
push
out
enter
xor
cmc
pushl
cs
add
inc
out
sbb
outsb
xor
push
nop
fdivr
aaa
ficomps
mov
cmp
pushf
mov
sub
xchg
mov
lods
push
lcall
lods
subb
jge
push
call
or
jne
jg
add
out
mov
sbb
aas
imulb
lock
push
mov
pop
jno
mov
inc
es
and
adc
add
pop
subb
je
cmp
lahf
push
sbb
icebp
addr16
rcrl
inc
jo
shrl
andb
mov
push
xorb
je
or
imulb
shlb
pop
push
xchg
and
and
push
add
icebp
jmp
push
shrb
lret
inc
xchg
imul
outsb
sbb
shlb
in
loopne
fdivrp
or
adc
jle
call
adc
sub
jmp
pusha
xor
jne
push
push
and
cmp
outsb
std
pop
js
subl
imul
lds
sbb
lods
nop
xchg
fwait
rclb
addr16
outsb
je
test
dec
sub
mov
adc
cmpsl
adc
mov
dec
lcall
insb
cld
sbb
mov
inc
add
adc
and
jle
orl
mov
mov
inc
shrb
sti
lods
aad
stos
add
leave
stc
push
out
xor
pop
stos
mov
and
bound
push
mov
ljmp
xorl
inc
jl
cld
xchg
outsb
push
jnp
xchg
stos
clc
in
scas
mov
push
pop
outsb
je
out
xor
stos
and
mov
sbb
adc
dec
or
mov
test
or
test
xor
pop
clc
push
fisubl
mov
xchg
ficoml
jge
adc
frstor
fisubl
cmpsb
ljmp
and
add
lods
pop
mov
inc
test
cli
ljmp
lods
adc
pop
sub
cwtl
and
add
add
outsl
outsb
add
orl
push
stc
cmp
cli
fistpl
adc
adc
lret
inc
jb
xor
and
sbb
xor
test
mov
push
iret
lahf
dec
add
in
shrl
in
mov
jns
cltd
hlt
jge,pn
ss
sub
outsl
popf
sub
and
inc
cmp
sbb
sub
mov
mov
xchg
add
dec
mov
mov
xchg
je
pop
loopne
icebp
out
xchg
xchg
pop
fistl
ljmp
js
sbb
dec
popa
sbb
mov
sbb
mov
mov
add
sub
mov
shrl
mov
push
outsl
push
push
sub
js
and
mov
rclb
stc
push
jmp
test
or
push
imul
cwtl
add
sub
adc
sub
scas
xor
movsb
xor
lea
daa
mov
daa
sbbb
jp
or
push
lea
add
cmp
sub
xor
mov
inc
pop
mov
inc
mov
and
mov
mov
ljmp
sbb
outsl
ret
test
stos
rcl
mov
neg
pop
pop
sbbb
jl
loopne
jge
and
mov
mov
mov
inc
or
js
xor
test
sub
push
in
cmpsl
xchg
repnz
adc
ljmp
enter
push
outsb
or
xlat
pop
push
or
sub
test
scas
mov
adc
lret
gs
test
sbb
and
pusha
xchg
or
sbb
sbb
outsl
pop
ljmp
mov
leave
cmp
inc
cmpsl
dec
inc
adc
lods
loop
dec
and
testl
jg
faddl
inc
mov
mov
pop
jo
xorb
sbb
je
jge
mov
les
sub
data16
add
out
in
sub
inc
add
mov
add
inc
adc
add
sti
ss
fnstsw
jbe
jbe
pop
dec
add
dec
mov
sub
ret
add
inc
insb
dec
imul
bound
cmp
xor
jle
jne
imul
push
mov
jo
in
pop
mov
filds
add
enter
lret
adcl
add
add
push
cld
jg
mov
mov
inc
pop
mov
movsl
dec
aam
add
push
push
sbb
outsl
push
add
into
mov
imul
loopne
femms
adc
mov
push
inc
pop
ja
js
ss
inc
push
push
add
jno
xchg
out
fimuls
ljmp
mov
inc
jns
arpl
in
outsl
jns
push
arpl
xlat
cs
jl
fisubrs
jno
shll
sbb
aaa
push
lret
lock
mov
push
push
js
test
mov
outsb
cmp
mov
fcoml
jno
dec
outsb
jb
xor
jne
adc
push
icebp
dec
sub
push
push
mov
push
roll
bnd
adc
fists
adc
fdivrl
dec
inc
jae
outsl
int
add
push
dec
add
inc
cmp
adc
inc
out
inc
mov
gs
xor
add
cmpsl
jmp
insl
inc
or
mov
cmp
push
jbe
push
xor
fisttps
movsl
orb
test
xchg
gs
inc
mov
add
jle
xor
dec
sbb
add
xor
sbb
dec
pop
pop
fistps
xchg
lock
aaa
cmc
push
sub
jp
movsb
sbb
jecxz
pop
push
fdivr
pop
outsb
adc
cmpsb
cs
pop
pop
cld
pop
push
pop
lret
mov
mov
sub
pop
mov
fisttps
sbb
sbb
test
xor
mov
sti
negl
pop
sbb
xchg
cltd
or
fistpl
ficompl
pop
lcall
push
movsl
pop
mov
insb
pop
jne
lods
pop
lcall
xor
pop
push
jo
in
arpl
dec
hlt
mov
xchg
outsl
or
xor
dec
push
xor
xor
dec
xor
sub
sub
dec
mov
das
sub
jb
xor
jge
jo
and
xor
ja
push
pop
es
bound
out
xchg
jbe
jecxz
xor
adc
es
mov
outsb
jne
dec
dec
dec
push
sbb
inc
cmpl
pop
push
orl
jbe
jecxz
sbb
lock
fcoml
cltd
mov
sbb
or
jb
pop
js
or
leave
leave
leave
pop
jo
jnp
adc
outsl
fcmovu
cmp
aad
pop
dec
xchg
insl
inc
sbb
jmp
imul
std
xchg
mov
imul
sbb
fisttps
xchg
sub
inc
mov
std
xchg
push
jbe
dec
dec
or
mov
popa
shll
hlt
cmc
adc
ljmp
push
inc
sbb
loope
or
xchg
xor
insb
dec
inc
mov
jle
mov
pop
sbb
test
fwait
inc
mov
loopne
enter
mov
inc
cs
negl
sbb
cltd
in
rcll
sbbb
loop
movsl
xlat
loope
and
mul
jge
pop
frstor
and
push
orb
or
orb
xchg
dec
dec
cli
into
xchg
js
fiaddl
pop
pop
inc
dec
dec
dec
pop
pop
pop
mov
fucomi
lds
push
inc
cmp
push
imul
loope
inc
mov
or
fs
xchg
outsl
jp
mov
jmp
jno
push
mov
xchg
jmpw
push
jp
jae
mov
into
dec
jb
jae
insb
inc
in
in
in
lods
insl
lahf
outsb
sub
push
out
dec
hlt
and
outsb
js
add
sbb
fisubrs
xchg
pop
call
div
or
adc
cld
adc
stos
adc
push
inc
xchg
fistpll
aad
lock
sbb
jp
insl
or
lcall
fistpll
pavgw
fdivr
int3
push
sbb
sbb
imul
add
imul
call
cmp
pop
pop
idiv
cmp
int3
pop
xor
scas
mov
je
xor
aam
jno
adc
and
fcomp
je
pop
fcoms
aam
or
sbb
lcall
dec
or
fnsave
add
dec
hlt
add
xchg
inc
int3
pop
inc
push
fcoms
rol
mov
mov
mov
sbb
pop
sti
pop
and
imul
int
popf
push
or
rorb
xor
add
insl
add
imul
insl
sbb
sbb
negl
mov
int
popf
adc
or
add
outsb
scas
inc
icebp
sahf
push
testl
jge
cmp
js
lahf
popf
push
inc
insl
fbld
sub
mov
sbb
or
cmp
shr
mov
inc
sub
xchg
inc
add
out
mov
and
push
outsl
add
repnz
leave
nop
dec
sbb
pop
push
pop
jbe
lret
pusha
in
adc
ret
lock
jbe
data16
testb
inc
jno
xchg
push
sbb
jle
sbb
add
popf
sbb
or
push
xchg
pop
ret
stc
fadd
dec
shll
xchg
jbe
fdivrs
das
fisttpl
enter
dec
pop
les
mov
push
sbb
iret
xor
jb
in
mov
mov
jno
mov
les
aaa
sbb
sbb
push
cmc
sti
in
in
xchg
push
sbb
xor
dec
mov
push
jl
xchg
pop
or
lcall
pop
imul
fbstp
fmul
addr16
push
inc
lods
jae
cmc
fldl
adc
das
fmull
inc
in
mov
cmp
or
pop
push
jle
push
imul
pushf
cmp
test
pop
cmp
pop
mov
fwait
push
or
xor
fnstenv
fnstenv
aas
dec
adc
sbb
push
push
sbb
pop
jmp
out
rcrb
mov
push
jecxz
loop
mov
pop
faddp
dec
jne
push
sbb
out
mov
cmp
pop
pop
and
dec
ja
sub
mov
aaa
jno
cmc
or
jbe
dec
mov
sbb
call
je
dec
enter
outsl
mov
leave
leave
leave
imul
leave
push
push
ficomps
ret
je
mov
jbe
je
mov
mov
leave
sahf
inc
into
mov
in
js
orl
dec
dec
push
dec
push
mov
fcomps
rorb
sbb
dec
pusha
and
lahf
xor
inc
sbb
xchg
in
or
xchg
fs
dec
repnz
sbb
inc
pop
push
lahf
out
adc
std
loop
shrl
div
push
inc
xor
xor
push
pop
cmp
loopne
add
lock
call
xchg
and
or
jbe
fstpt
pop
aas
mov
dec
xor
push
dec
mov
fldt
cmp
flds
aas
xchg
pop
pop
push
mul
cmp
or
hlt
or
and
ljmp
clc
push
pop
or
fcmovnu
sbb
sbb
mov
jb
dec
push
das
sub
subb
nop
xchg
sbb
adc
mov
int
mov
das
pop
ljmp
outsl
dec
addr16
popa
cmp
fildl
fcmovnbe
or
dec
adc
shrb
divl
fcompl
adc
push
fnsave
jle
push
adc
push
imul
sbb
into
pop
bound
add
inc
fcoms
mov
dec
pop
sub
pop
daa
inc
fisttpl
fildll
loopne
sbbb
es
ret
lock
dec
pop
or
lahf
sbb
in
popf
sti
jecxz
jp
sbb
outsb
test
jmp
inc
sbb
mov
mov
push
sub
ffreep
dec
insl
fyl2xp1
ret
sbb
fildll
shll
insb
inc
adc
ficoml
lret
div
fcomip
add
imul
add
or
pop
ja
sub
cmp
sub
out
sub
inc
or
nop
lds
cld
jp
fdivrl
xchg
or
mov
push
or
xchg
dec
sub
adc
jge
test
push
das
jecxz
iret
imul
adc
insl
outsl
push
testl
mov
jge
adc
data16
cld
ret
mov
daa
mov
jnp
pop
add
mov
inc
mov
fs
add
push
add
cmp
out
mov
movsl
dec
add
adc
mov
cmp
repz
push
adc
aaa
sub
pop
loopne
fistpl
out
adc
cmp
push
dec
sbb
or
pop
aaa
jp
xchg
fsubl
jne
popa
add
add
aaa
movd
jg
and
es
fwait
xchg
and
loop
xchg
in
jbe
sbb
inc
sub
sub
add
pop
mov
aas
xchg
into
test
mov
sbb
loop
jae
mov
fs
jae
sub
shl
int
sbb
pop
loop
repnz
push
pop
push
fmuls
in
lea
adc
mov
cmp
or
adc
jns
jo
shlb
push
mov
jg
or
inc
jne
push
pop
into
imul
arpl
xchg
sub
push
xor
js
xchg
sbb
jmp
inc
push
xchg
sbb
cmp
xchg
sbb
aas
jl
loopne
icebp
mov
scas
pushf
das
mov
pop
outsl
ljmp
fucomip
add
sbb
or
push
or
mov
push
fsubrl
imul
or
pop
js
mov
hlt
push
add
or
fnsave
popa
cmp
sub
arpl
pop
mov
fistl
fiadds
aaa
in
add
xchg
push
int
xchg
or
into
fucomip
pushw
pop
aaa
sub
cmp
dec
cld
outsb
out
fbstp
pusha
cmp
clc
fldt
mov
int3
aam
dec
into
dec
inc
dec
xor
or
or
xchg
dec
popf
dec
adc
addb
and
add
add
adc
or
adc
stos
add
adc
xor
jne
jne
or
add
add
jne
adc
mov
and
lcall
push
adc
sub
fwait
jns
adc
add
call
int
adc
adc
inc
cmp
add
mov
add
mov
test
add
imul
mov
lods
fcompl
xor
and
je
mov
adc
je
add
je
scas
xor
inc
push
and
jae
sub
add
movsb
out
fistpl
ds
push
sbb
jae
mov
lcall
aas
and
jne
jae
jge
jnp
ret
jne
into
jne
fwait
push
xchg
sbb
imul
and
jmp
jae
pop
fistpl
mov
or
mov
subl
push
in
imul
imul
and
pop
sbb
movsb
popa
lcall
test
mov
jae
mov
call
adc
add
jae
adc
jno
push
daa
xchg
imul
adc
jb
push
mov
or
pop
out
push
add
adc
lods
mov
push
dec
add
sbb
xor
mov
fisubl
int
addr16
movsb
pop
and
push
jae
adc
ret
dec
mov
lods
rcrb
imul
and
je
jae
xchg
or
call
push
je
and
xchg
push
sbb
repnz
and
scas
imul
unpcklps
gs
cmpsl
mov
into
mov
out
xor
je
rorb
dec
aaa
jb
adc
push
cmp
cli
dec
push
or
fsubl
les
sbb
jmp
je
add
gs
pop
jnp
mov
push
inc
jge
fsub
jo
fists
ss
xlat
daa
pop
push
jg
aaa
dec
and
inc
ret
cmp
in
lcall
or
xor
push
adc
inc
mov
je
sub
icebp
das
sbb
inc
add
inc
fcompl
jmp
or
xchg
push
add
or
loopne
mov
fiadds
pusha
add
pop
std
xor
xor
add
pop
andb
aam
ja
add
out
outsb
outsb
mov
shll
or
push
andl
sbb
push
lret
or
and
insb
adc
aad
mov
dec
call
jmp
inc
and
and
and
stos
add
inc
lret
orl
sub
add
insb
add
jae
adc
add
aaa
jbe
add
imul
daa
nop
add
jne
insl
pop
idivl
enter
inc
push
add
outsb
add
inc
and
jne
testl
push
cmp
outsl
or
pop
mov
pop
jne
add
fs
dec
int
arpl
arpl
jns
outsl
add
or
push
jmp
push
pop
je
push
jge
xor
mov
dec
sbb
sub
inc
push
aaa
divb
dec
ja
dec
push
sub
mov
push
neg
out
out
xchg
popa
jns
clc
cmp
iret
jne
xor
and
push
or
lcall
jb
sub
inc
lods
fs
imul
and
mov
jge
xlat
addr16
jne
shrb
mov
jnp
fcmovnb
sqrtps
inc
pop
outsb
push
sub
dec
ret
inc
gs
clc
pop
mov
or
outsb
sub
addr16
out
inc
adc
inc
inc
lods
jo
add
repz
daa
or
fcmovne
mov
js
push
xchg
dec
scas
fidivs
out
outsl
dec
cmpsl
push
add
call
lahf
or
lds
inc
roll
lds
imul
bound
insl
mov
jl
orl
imul
jne
xor
popa
addr16
dec
das
pop
mov
add
cmp
adc
dec
iret
lea
sbb
daa
fld
test
jg
inc
je
xchg
jge
out
fisubs
sbb
or
add
push
xor
daa
jecxz
push
es
xorl
jae
pop
fsubrp
mov
mov
jg
mov
push
andl
imul
addr16
outsb
aaa
out
jo
inc
lahf
jae
jle
ja
in
out
jge
ja
jg
inc
outsl
call
cmp
sbb
adc
into
js
mov
push
dec
gs
inc
push
movsb
cmp
sub
test
cmc
push
push
aam
es
and
mov
arpl
out
loopne
out
inc
daa
gs
jge
jae
xor
mov
add
ja
lea
dec
pop
js
pusha
int
fs
mov
adc
mov
popa
out
aaa
dec
or
inc
dec
jmp
imul
push
dec
mov
inc
mov
push
divb
les
or
jb
dec
sbb
and
insl
lods
imul
pop
leave
cmp
xchg
pop
and
jbe
mov
popf
imul
xor
outsb
and
outsb
jns
out
push
test
push
push
pop
movsb
inc
daa
out
shll
arpl
jge
rcll
pop
cmp
daa
push
cs
jne
icebp
lock
add
jno
fbstp
jo
fnstenv
and
stc
ljmp
inc
je
mov
or
gs
jnp
push
add
sbb
xchg
adc
pop
dec
jns
mov
add
cs
gs
movsb
test
fincstp
es
push
pop
pop
mov
or
pusha
sarb
ja
jbe
jnp
stc
lds
gs
inc
ficomps
iret
loopne
push
test
push
xor
lods
fists
dec
jnp
dec
ljmp
ja
fildl
and
arpl
sbb
pop
jg
jae
and
jo
or
popa
and
add
jbe
test
xor
xor
adc
lods
fbld
jns
into
xor
outsl
add
jno
popa
dec
notb
cmp
popf
and
loope
pop
adc
sbb
loopne
leave
lea
cmp
or
ret
ror
cmpsl
mull
dec
sub
jmp
pop
fisttpl
movsb
mov
out
or
aaa
jmp
mov
std
ret
add
dec
in
out
fists
imul
fnsave
sbb
into
and
imul
pop
and
dec
push
jmp
mov
roll
pop
sti
sub
and
dec
and
fwait
ss
pop
mov
inc
roll
jmp
fwait
imul
and
dec
mov
imul
or
addr16
sub
jo
adc
xchg
jp
neg
pop
jbe
incl
add
adc
or
cmc
pop
int
lea
inc
movsl
arpl
mov
push
js
jno
cmp
pop
lret
fcoml
leave
add
mov
es
adc
add
add
sbb
push
jg
sub
jae
add
add
add
add
pop
add
mov
inc
outsb
cwtl
arpl
imul
pop
pop
jg
cmp
shrb
int
addl
pop
mov
pop
mov
add
push
and
test
pusha
mov
daa
inc
xor
jg
jbe
daa
or
add
add
add
and
cmp
sbb
scas
mov
lds
pop
or
add
pop
scas
cltd
mov
fs
inc
pop
cmpl
push
insl
test
adc
popf
pusha
pop
loopne
push
add
xlat
outsb
mov
cmp
cmp
add
lahf
mov
cmp
push
pop
test
mov
push
sub
jecxz
xor
pop
jbe
mov
mov
cmp
push
loop
cmp
pop
inc
cmp
insb
jmp
aaa
jle
xor
or
push
add
sub
dec
or
js
add
jbe
les
ficoms
jl
jae
std
gs
sbb
xor
rcr
ja
das
push
fcmovnu
xchg
jnp
xor
data16
push
add
lret
sbb
inc
jnp
dec
je
lock
inc
setnp
pop
add
xchg
inc
imul
push
mov
test
pop
add
xchg
arpl
fwait
adcl
cmp
sti
lods
push
add
lret
jo
or
aas
mov
lret
rcr
lock
adc
pop
jae
jg
cmp
iret
jo
or
pop
cmp
add
aaa
or
or
dec
stos
fwait
in
test
das
xor
cmp
fwait
popa
mov
sarb
or
adcl
add
popf
pop
adc
aas
clc
pop
orb
pop
mov
pop
test
xlat
sbb
imul
out
das
imul
mov
jecxz
pop
dec
imul
sbb
in
ljmp
dec
fnstsw
xchg
add
add
dec
stos
aam
rorb
or
push
outsl
adc
shrl
inc
stos
inc
lret
xor
cmpl
or
xor
cmp
sbb
cmp
ret
inc
sbb
pop
pop
push
daa
inc
adc
mov
cmpsb
pop
push
loope
pop
mov
das
adc
and
cmp
jae
pop
loop
and
xor
repnz
sti
ret
mov
ret
or
lret
rcll
cmp
mov
je
cmp
adc
cmp
pop
xor
pop
xor
jo
xorl
dec
das
insb
or
cmpl
lds
addr16
push
and
imul
test
cmp
mov
jnp
imul
movsl
inc
add
popf
or
frstor
leave
fmul
outsl
aas
xchg
inc
jmp
je
or
adc
mov
loope
sub
shrl
imulb
gs
push
cmp
cmpsl
jmp
arpl
mov
aas
in
inc
addl
hlt
repz
out
or
imul
je
xor
arpl
dec
pop
outsl
fwait
sbb
fbstp
mov
jmp
test
cmp
orb
cmp
adc
movsl
pushaw
adcl
jp
sub
jmp
push
cmp
int3
adc
mov
and
jge
ja
roll
add
subl
adc
incb
mov
ja
aad
or
jnp
jmp
and
mov
inc
add
fwait
xor
xchg
jg
out
ret
push
add
fwait
jne
cmp
xchg
dec
jg
xchg
les
jl
inc
mov
add
ja
aad
imul
ret
sbb
cmpb
cmp
sbb
ja
pop
fldcw
add
add
sub
pop
push
jmp
sbb
aaa
inc
push
das
sahf
insb
xchg
in
adc
pushf
loopne
dec
daa
sbb
gs
out
and
jae
add
add
flds
repz
insb
jo
cmc
popf
test
lret
pop
and
outsb
sbb
dec
pop
jecxz
pop
shr
out
loop
out
adc
daa
add
sbb
jnp
leave
inc
out
push
dec
mov
or
jo
outsl
filds
and
xor
outsl
mov
das
mov
testb
fs
pop
xchg
dec
push
outsl
cmpsb
cmpxchg
loope
and
mov
dec
mov
aas
test
lahf
adc
in
arpl
out
dec
aas
xor
sarb
daa
icebp
scas
addl
jmp
inc
lods
int3
insb
das
push
pop
mov
stos
testl
sub
and
pop
xorb
insl
xor
pop
aad
inc
test
jb
addb
iret
addb
add
and
bnd
cmpsb
cmc
sbb
inc
cmp
push
outsb
add
outsl
cs
sti
add
lods
and
aas
add
mov
sub
inc
scas
cmp
xchg
sbb
inc
test
dec
das
push
push
or
int
xchg
inc
cmpsl
js
and
cmpl
cmp
push
jl
lret
adc
sbb
mov
fstpt
inc
stc
mov
inc
inc
xor
mov
fldt
pop
jno
addb
mov
inc
mov
jp
adc
and
outsb
add
cwtl
jns
mov
imul
ss
stc
push
imul
sbb
jnp
lret
popf
pop
cmp
jmp
ret
mov
xchg
cmp
or
out
adc
loope
inc
aaa
pop
cmpl
dec
adc
inc
out
jnp
out
or
outsl
stos
testl
sbb
jp
test
push
lds
test
inc
sub
shl
and
cmp
testb
out
pushf
mov
cli
ret
adc
inc
gs
sub
and
or
popf
fsts
fldenv
inc
dec
sbb
imul
ljmp
sbb
push
xorl
pop
and
je
das
sbb
sub
and
pop
pop
movsb
cmp
jno
lds
pmaxub
inc
sbb
sub
jns
lcall
mov
mov
pop
addr16
pop
sbb
gs
jne
pushf
lahf
jae
push
sbb
mov
inc
test
and
jns
dec
cmpsl
fmull
mov
dec
inc
adc
sarl
mov
adc
sbb
sbb
mov
lcall
xchg
mov
je
mov
dec
dec
pusha
push
adc
shrl
aam
cmc
jge
push
leave
pop
addr16
lret
push
sti
xchg
push
mov
jno
mov
sub
movq
jno
mov
jbe
add
jl
add
aas
xchg
jae
es
adc
icebp
dec
jge
pop
mov
dec
add
imul
sti
add
fnstcw
fimuls
pop
or
jmp
inc
xchg
push
mov
mov
dec
std
jecxz
sbb
mov
and
fwait
cmc
je
daa
cmp
aaa
xchg
dec
mov
add
or
popf
dec
pop
jno
inc
or
and
arpl
pop
dec
dec
mov
adc
ret
or
std
jns
jecxz
pop
rcl
aas
je
inc
not
sarl
jae
jae
sub
ret
jae
bound
pop
daa
fbld
dec
inc
rorb
jmp
aas
push
mov
hlt
xlat
add
sbb
mov
xchg
xor
orb
inc
cmp
mov
and
dec
cmpsl
daa
btr
std
inc
jne
jo
xor
and
movsb
imul
add
and
imull
sbb
sub
nop
test
push
jns
pop
mov
push
jp
mov
or
dec
ljmp
add
inc
jmp
shlb
mov
jno
push
addr16
xor
dec
jno
mov
push
mov
ja
sub
outsl
jmp
js
mov
jo
xchg
das
dec
insl
mov
jnp
jecxz
push
inc
ja
mov
xchg
movsb
push
sbb
push
pop
out
shll
adc
test
add
and
xchg
leave
add
xchg
or
xchg
shrl
cmp
es
pop
lret
int
inc
mov
or
adc
leave
bound
sbb
je
lret
lds
in
xor
out
fldl
pextrw
jge
mov
fists
fwait
icebp
xchg
dec
movsl
aas
xchg
es
push
adc
add
shll
je
mov
lds
adc
rcrl
cltd
sub
test
sti
sbb
jmp
xor
mov
imul
push
xchg
sbb
das
das
mov
fstpl
mov
xchg
jo
dec
adc
pop
add
stos
adc
dec
mov
out
xchg
adc
dec
call
aaa
mov
push
adc
xor
dec
dec
movl
sbb
cs
cmpsl
jo
xor
dec
push
cmc
add
mov
insb
add
loopne
popa
push
test
fwait
pop
loope
add
lock
aas
or
pop
xor
cmp
xor
ret
xor
or
xchg
in
mov
jmp
add
rolb
fwait
xor
ss
dec
dec
lret
adc
dec
shll
adc
inc
push
jno
std
mov
icebp
push
lods
lret
add
lods
pop
lods
adc
push
dec
loope
add
das
sti
aad
and
dec
outsl
push
arpl
ret
dec
sbb
mov
gs
je
push
cmpsl
xchg
or
pop
je
and
inc
je
xchg
pop
movsl
adc
mov
imulb
clc
add
cmpsl
mov
pop
sub
and
inc
pop
mov
or
mov
and
loopew
test
mov
mov
sbb
rorl
cmp
mov
dec
jecxz
mov
roll
das
or
ret
mov
push
test
test
lds
testl
in
mov
xor
mov
push
popf
rol
orl
test
ret
je
je
and
call
dec
mov
push
cmp
adc
cmp
loop
pop
add
sbb
jo
mov
jge
jae
inc
das
ja
les
fbstp
push
xor
and
or
leave
xchg
sbb
push
dec
jae
lcall
or
jne
mov
mov
push
inc
sbb
add
xorb
mov
jns
cmp
rol
sbb
test
mov
das
bound
pop
or
adc
out
xchg
nop
xchg
xor
inc
adc
adc
loope
imul
adc
sbb
aaa
add
xchg
insl
subb
movsl
loope
jnp
mov
loope
push
mul
add
pop
mov
mov
or
out
lea
ret
sub
aad
adc
push
in
inc
mov
jnp
pop
xor
push
inc
jne
adc
cmp
dec
pop
gs
or
dec
adc
inc
and
stos
or
mov
or
adc
and
mov
adc
and
add
mov
je
and
dec
inc
mov
cmpb
imul
jb
or
add
and
mov
stos
pop
add
push
xor
lods
mov
adc
adc
adc
mov
inc
xor
sbb
adc
adc
or
stos
mov
out
and
push
add
or
dec
je
adc
push
fidivs
push
adc
adc
sbb
mov
pop
imul
addb
adc
xor
mov
stos
shll
sbb
out
inc
mov
jo
cwtl
imul
insl
inc
add
sbb
pop
jae
jb
adc
gs
pushf
call
stos
add
add
pop
imul
dec
and
in
adc
xlat
jnp
jne
add
imul
or
xor
ret
sbb
or
lcall
inc
pop
jae
mov
ret
mov
mov
jecxz
sub
mulb
data16
cmp
das
mov
and
fisubl
or
add
jmp
sub
mov
call
sub
dec
adc
mov
xchg
dec
mov
adc
sub
xorl
out
mov
adc
lcall
or
and
arpl
add
or
sub
jno
xor
sbb
inc
sti
repnz
jne
push
or
or
lahf
fisubrs
into
xor
lds
inc
cmpsl
jae
mov
das
push
xchg
add
scas
mov
in
sub
outsl
mov
adc
adcb
xlat
pop
imul
jne
and
xor
inc
cmp
lea
jg
cmc
sub
or
fistpl
jae
xor
aas
add
jae
loope
insl
pop
inc
adc
jno
xchg
add
mov
jae
sub
and
dec
int3
lods
sbb
aad
inc
add
push
and
test
shll
adc
pop
xchg
or
rcrl
mov
xchg
loope
or
in
pop
mov
cmp
pop
or
lds
stos
cmp
iret
jg
sbb
out
int3
or
lds
data16
sbb
out
cmp
adc
push
xlat
imul
mov
jne
xchg
mov
mov
pushf
jae
lea
mov
or
push
insl
and
push
inc
adc
push
sub
mov
shl
fidivrl
sub
adc
mov
jl
rolb
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
jo
je
jb
popa
insl
gs
js
push
je
jb
std
arpl
je
jo
outsb
outsw
inc
adc
fs
gs
cmp
adc
jb
jo
outsb
sub
push
gs
jne
mov
or
arpl
fs
arpl
out
jge
jbe
gs
push
push
into
std
dec
gs
jo
insb
sub
jbe
inc
jb
je
arpl
push
xchg
insl
mov
arpl
outsl
outsb
adc
push
scas
mov
mov
sub
inc
mov
mov
data16
jae
lods
mov
bound
jns
push
popa
inc
inc
jl
jae
fistl
addr16
dec
bound
loop
movsl
in
jne
inc
mov
xlat
sub
insl
adc
sub
jb
push
push
scas
fs
cmp
stc
js
fistl
or
insl
xor
ds
xor
imul
inc
gs
mov
sub
cmp
in
fs
jo
push
jb
lahf
jae
and
mov
push
inc
insl
fstl
adc
lds
nop
shrl
mov
sarl
cmp
and
fs
sub
mov
mov
push
rolb
mov
fildl
push
push
jo
popa
jne
or
notb
push
orl
inc
mov
das
xor
addr16
lea
inc
outsb
or
jae
lock
jns
insl
pop
push
or
pop
push
inc
cmp
fs
imul
cmpb
fcomps
std
push
movsl
outsl
data16
ret
out
push
xchg
rol
cwtl
xchg
sahf
adc
arpl
pop
and
xchg
scas
jo
popa
outsb
sbb
jnp
xchg
mov
inc
imul
pop
dec
mov
or
xchg
outsl
inc
mov
mov
sbb
or
pop
mov
inc
mov
or
sub
in
aas
in
sub
add
add
add
sub
add
fxch
dec
adc
seto
push
shr
inc
or
add
lods
add
mov
push
add
xchg
dec
mov
add
in
pop
clc
loopne
push
aaa
and
jbe
push
nop
cmp
movsl
je
pop
jg
test
jmp
and
add
or
ret
shll
stc
adc
sbb
add
inc
shrb
pop
ja
mov
add
sub
inc
cs
pop
sbb
sbb
add
negl
daa
or
nop
out
leave
js,pn
add
out
les
je
fidivs
mov
dec
enter
mov
xchg
dec
cmp
dec
repz
xorl
pop
popa
pop
sbb
mov
add
add
add
and
incl
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
mov
mov
xchg
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
