push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
mov
pusha
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
movl
lea
push
push
push
call
cmpl
jne
xor
jmp
push
lea
push
call
movzwl
cmp
je
xor
jmp
mov
mov
mov
mov
push
mov
push
call
push
call
mov
push
push
call
push
call
mov
mov
mov
mov
lea
push
push
push
mov
push
push
call
test
jne
jmp
push
call
add
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
popa
mov
mov
mov
mov
push
mov
mov
mov
mov
sub
mov
movl
add
ret
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
push
movl
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
mov
lea
mov
mov
mov
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
mov
mov
mov
mov
movl
lea
push
push
push
call
cmpl
jne
xor
jmp
push
lea
push
call
movzwl
cmp
je
xor
jmp
mov
mov
mov
mov
push
mov
push
call
push
call
mov
push
push
call
push
call
mov
mov
mov
mov
lea
push
push
push
mov
push
push
call
test
jne
mov
jmp
jmp
push
call
add
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
je
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
lea
push
call
push
lea
push
call
movzwl
cmp
je
xor
jmp
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
push
mov
push
mov
push
mov
push
push
call
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
mov
mov
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
movl
movl
mov
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
mov
add
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
push
mov
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
push
mov
push
call
add
sar
cmp
jne
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
shr
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
mov
add
mov
movl
mov
add
mov
movl
movl
mov
mov
add
mov
mov
movl
mov
mov
mov
mov
movl
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
lea
push
call
movl
jmp
mov
add
mov
mov
cmp
jge
cmpl
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
mov
add
mov
add
mov
mov
cmpl
jne
mov
mov
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
jmp
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
add
mov
jmp
pop
ret
int3
int3
add
add
aas
enter
enter
cli
nop
xor
cli
cwtl
xor
cli
mov
xor
test
add
enter
decl
aaa
sar
test
cltd
call
aaa
cmp
sub
cmp
out
fnstsw
pop
icebp
cmp
repnz
cmp
or
cmp
repnz
es
cmp
repz
sub
hlt
cmp
add
cmp
inc
cmp
hlt
sarl
xchg
mov
cmc
in
aad
add
push
testb
negb
idivb
mov
cmc
xchg
ds
cmc
ret
cmc
fnstsw
cwtl
cmc
idivb
cmp
testl
aad
cmpb
test
push
loope
push
div
aas
inc
testb
aas
mov
add
clc
push
xor
sbb
xor
aas
xor
clc
push
xor
push
xor
clc
int3
xor
clc
fdivl
cmp
sub
pop
testl
divl
testl
xor
xor
in
aas
enter
enter
enter
enter
add
aas
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
add
aas
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
add
aas
enter
enter
enter
jno
add
mov
je
sub
lods
jb
sub
add
or
bound
mov
add
or
bound
mov
add
add
jne
loop
popa
outsb
add
jl
gs
mov
inc
imul
test
add
js
je
add
add
outsl
push
lods
arpl
jns
aas
enter
lods
je
pop
lods
jne
pop
andb
movsb
gs
aas
enter
lret
dec
lret
arpl
inc
add
inc
add
leave
inc
add
leave
inc
add
leave
inc
add
leave
inc
add
lods
je
in
cmpsb
arpl
stos
jb
int3
mov
popa
repz
jns
add
add
stos
jb
lcall
insb
aas
enter
mov
cs
bound
arpl
cs
arpl
add
adc
insb
inc
sbb
add
sahf
jb
or
outsl
arpl
enter
cmpsb
insl
popa
out
popf
imul
add
lock
mov
jb
lret
push
int
je
fdivrl
popa
jo
movsb
insb
outsl
pushf
enter
stos
jb
mov
lods
insb
insb
aas
enter
stos
je
insl
movsl
arpl
mov
add
aas
enter
insb
pop
nop
aas
and
add
and
add
ss
add
testl
add
filds
add
add
pop
add
aas
pop
add
aas
pop
add
aas
pop
add
aas
pop
add
aas
pop
add
aas
pop
add
aas
pop
add
aas
lahf
add
aas
sub
scas
or
mov
push
cmpsl
enter
das
push
lods
add
pushf
add
test
and
shll
shrl
insl
dec
push
pop
or
fs
xor
or
aas
enter
add
aas
enter
enter
enter
cwtl
jmp
add
enter
leave
repnz
imul
enter
enter
enter
enter
enter
enter
jmp
add
aas
enter
enter
enter
enter
enter
enter
enter
enter
add
das
enter
enter
enter
enter
enter
enter
enter
enter
leave
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
mov
enter
enter
enter
movb
out
add
out
add
lds
add
mov
add
int
add
aad
add
roll
cmpsb
lret
add
cmpsb
lds
add
lds
add
add
mov
add
cmc
add
lretw
add
push
xlat
add
push
lds
add
add
lds
add
int3
add
xchg
popa
je
int3
add
pop
mov
add
test
add
jge
add
int
add
pop
add
aas
pop
add
aas
pop
add
aas
pop
add
lcall
add
aas
pop
add
aas
pop
add
aas
pop
add
aas
je
in
outsl
ja
comiss
clc
add
add
mov
push
inc
add
clc
push
add
xchg
ljmp
adc
push
sti
jb
pop
testl
mov
divb
push
push
or
movsl
call
pop
cmpsl
aam
inc
aas
mov
divl
enter
or
mov
loope
sub
fdivrs
jno
add
repz
mov
testb
mov
jecxz
sub
test
mov
sti
sub
test
add
enter
sub
add
enter
inc
sti
mov
xor
push
das
cmp
js
shl
mov
and
jbe
in
add
inc
lea
xlat
sti
clc
inc
aas
xor
add
cmpsb
inc
aaa
enter
add
cmp
and
enter
inc
push
icebp
lods
add
push
or
pushl
mov
inc
mov
inc
push
icebp
vpunpckhdq
push
enter
jne,pn
mov
or
paddq
wrmsr
add
loope
mov
mov
add
jne
or
or
push
sub
fcomi
adc
add
add
xor
jg
call
das
jne
push
mov
mov
rolb
cs
mov
inc
adc
sti
fcos
jne
xor
or
push
lods
adc
push
lahf
pop
mov
jge
sub
sub
or
mov
sbbl
push
push
fisubs
clc
jb
or
adcl
add
add
sahf
pop
sub
xchg
leave
ret
cmpl
jne
mov
xchg
leave
ret
mov
insb
inc
cld
leavew
add
aas
stos
dec
or
cmc
jne
aad
jne
mov
adc
fists
std
sbb
orl
les
loope
add
arpl
add
aas
adc
mov
pop
add
add
loope
add
out
sti
in
mov
adc
cmpsl
mov
ret
mov
cltd
pop
push
cltd
pop
push
adcb
add
jecxz
inc
repnz
lret
in
out
lahf
jmp
mov
mov
sub
out
daa
sub
jns
sub
out
daa
adc
aas
fildll
mov
add
add
shr
mov
pop
mov
sbb
sub
loopne
lods
jmp
mov
repz
sub
mov
ds
push
icebp
add
aas
or
push
inc
icebp
jne
pop
out
cmp
rol
subb
mov
les
dec
xlat
outsl
add
cld
xbegin
adc
sahf
add
add
add
jmp
mov
andl
aad
jmp
or
test
ja,pn
add
cmp
push
in
mov
ds
out
sub
bound
mov
int
cld
push
inc
xor
pushf
les
push
icebp
sti
add
in
cltd
hlt
lahf
sbb
cld
xbegin
push
cmp
jne
fs
call
mov
ret
add
cmp
mov
mov
jne
insl
ret
aaa
jne
cltd
mov
pushl
sub
out
cmp
mov
and
out
add
add
in
adc
pushl
mov
repz
decl
out
pop
mov
ret
pop
add
add
cmp
jne
mov
jecxz
push
incl
add
xor
decl
cmpsb
mov
cmpxchg
add
aas
pop
mov
mov
cld
push
movsb
inc
out
pop
jbe
addr16
decl
inc
or
pop
add
mov
sub
ja
or
int3
jge
rcll
push
pop
jbe
neg
incl
or
jb
fcmovnbe
repz
pushl
mov
pop
add
in
pop
add
push
decb
fstpt
jge
add
mov
jl
dec
inc
add
mov
loope
push
sbb
cmp
add
rolb
stc
stos
add
cmp
rorb
mov
lods
ds
adc
loopne
add
mov
aam
and
sub
andb
dec
add
jmp
fsub
inc
out
call
mov
jns,pn
daa
pushf
jmp
popf
icebp
out
dec
aam
push
pop
adc
cld
mov
jb
mov
pop
add
cmp
add
push
and
jmp
adcl
pop
and
cmp
jne
pop
popf
clc
mov
add
add
push
inc
mov
or
out
in
adc
push
inc
in
daa
jne
adc
cld
xchg
adc
icebp
cmp
mov
aas
js
faddl
mov
sub
es
bound
dec
jge
cmp
adc
outsl
mov
jne
loope
or
inc
shr
imul
roll
mov
xor
add
mov
mov
jge
add
jbe
je
adc
and
jne
sbbl
or
cmp
add
jne
scas
lret
add
sub
jl
jne
xor
call
jg
in
mov
xor
pushl
mov
sbbl
pushl
add
add
and
push
push
lea
aas
mov
in
ljmp
push
call
daa
fisttpl
ss
pop
jbe
jmp
filds
inc
pop
sar
push
cwtl
inc
cld
mov
cs
jne
outsb
jbe
push
mov
cmp
jbe
xor
jmp
sbb
out
lcall
std
push
add
add
mov
add
cmc
inc
hlt
aas
das
add
mov
pop
sti
out
mov
add
pushf
sti
fsubs
lods
jmp
lcall
xor
jne
cwtl
lcall
inc
enter
sbb
jno
das
add
aas
enter
xor
call
push
aam
rep
ja
jno
xor
inc
and
movb
add
cmp
and
hlt
add
jmp
jmp
rolb
cmp
lods
ljmp
dec
jge
and
out
mov
xor
and
jmp
call
xchg
jb
jne
or
add
movsl
or
sbb
hlt
testb
call
shrb
and
xchg
xor
add
add
shlb
out
shlb
scas
cld
scas
iret
iret
call
cmpsb
jg
add
cmp
lea
js
cld
and
jge
and
enter
or
lods
adc
add
adc
sub
or
sub
push
fs
ja
in
gs
lea
push
out
dec
movl
incl
add
rcrl
out
aas
decl
mov
xor
xchg
or
loop
pushl
das
jne
ss
or
pushl
add
call
pop
push
sti
cltd
xor
ret
push
mov
dec
call
arpl
push
jmp
push
out
scas
int3
add
push
movb
jecxz
out
pop
das
decl
jb
add
add
das
add
pushl
jg
aas
das
add
lret
mov
aas
das
test
cmp
add
das
push
call
insb
xlat
decl
and
rorb
xor
js
add
lahf
add
aas
test
call
imul
push
in
call
pop
fstpt
sbb
aaa
cmp
pop
test
outsb
or
add
daa
or
call
add
inc
add
enter
lret
pop
call
jb
dec
outsb
aaa
xor
fsubs
or
rcrb
outsb
aaa
xor
out
and
lret
mov
add
add
enter
lcall
mov
inc
mov
les
push
aaa
enter
lcall
add
add
mov
jnp
dec
sub
inc
dec
jmp
inc
pop
mov
stos
add
jne
fsubrs
add
rorb
mov
sti
sbb
pop
lds
sub
pop
push
jb
jbe
bound
cld
bound
mov
jg
and
add
xchg
or
adc
add
jl
jge
popf
lret
jne
jne
cld
jle
mov
in
subl
leave
add
cmp
jne
fs
cmpsb
and
icebp
jno
sub
cmp
adc
cld
and
loop
mov
mov
pop
inc
out
leave
sub
add
pop
mov
add
lret
loope
push
pop
pop
cmp
add
add
icebp
mov
mov
dec
adc
enter
or
fldl
call
add
js
push
popa
scas
or
enter
mov
cld
mov
inc
mov
and
inc
mov
add
push
lahf
dec
adc
test
inc
rcll
mov
aas
xor
mov
idivl
sbb
dec
cld
inc
aad
cld
mov
sub
add
add
lods
inc
jmp
dec
pushl
xchg
push
rcrl
jmp
sub
in
mov
les
mov
out
cld
das
inc
pop
hlt
xlat
ret
xor
in
mov
cs
sub
insl
or
fldl
aas
movsb
ret
vmptrst
add
pop
outsb
or
in
incl
ds
cmp
sbb
add
add
dec
test
aas
shrl
hlt
sbb
jle
mov
jno
mov
outsb
negl
repz
pop
in
sbb
out
movsb
inc
add
sbb
inc
add
js
outsb
xor
aad
sbb
push
cmpsl
bound
in
sbb
out
mov
sub
adc
mov
jecxz
rolb
repz
out
inc
mov
dec
add
add
pop
aaa
xor
mov
rcrb
add
sbb
lret
jne
sbb
std
xchg
sbb
jne
and
clc
xchg
ret
and
push
or
inc
dec
in
push
adc
or
xchg
jmp
sub
add
enter
enter
das
punpckhdq
rolb
inc
pop
add
cmp
jmp
add
add
andb
sbb
jmp
push
scas
add
out
pushl
icebp
int3
cmp
or
cmpl
scas
test
add
stos
add
adc
jne
das
fsub
es
or
push
js
jge
je
xchg
test
add
into
cmpl
je
lea
pop
std
imul
clc
push
mov
add
and
add
das
add
int
je
mov
es
dec
lret
mov
leave
shlb
clc
stc
pushl
das
mov
xchg
mov
popf
push
jne
in
sbb
adc
test
aas
jl
shlb
loopne
inc
add
push
iret
loope
inc
mov
ret
mov
mov
or
das
add
mov
add
shr
push
lcall
jb
fbstp
ja
call
das
sub
fbstp
add
shr
xor
loopne
lods
and
adc
repnz
in
loope,pn
or
lds
lret
cmp
les
or
xchg
add
or
enter
add
inc
inc
leave
mov
cli
lds
jns
lds
enter
jne
pop
inc
enter
xor
ja
jmp
push
inc
add
jp
test
call
and
dec
push
inc
xor
mov
mov
sbb
aas
enter
jne
ds
jmp
lds
add
aaa
enter
sub
adc
add
inc
icebp
testl
sub
orl
sbb
and
jecxz
cmp
fsubs
sbb
mov
and
incl
xor
call
outsb
xchg
les
cmp
add
mov
mov
aad
pop
jne
aam
sti
loopne,pt
ret
xchg
add
add
inc
in
push
adc
xchg
aaa
leave
add
movsb
data16
push
jo
inc
add
cmp
add
enter
jo
push
mov
push
jno
jp
daa
int3
test
incl
imul
cmc
movb
add
push
ss
push
int3
jmp
popf
push
mov
loopne
jg
cmc
cmp
jo
push
aaa
inc
or
add
push
movsb
lret
dec
xchg
lret
mov
pushl
shlb
cld
insl
ret
add
dec
aas
add
add
inc
leave
ret
push
mov
fimull
rorb
cmpl
xchg
or
adc
roll
add
jnp
push
jnp
push
push
jnp
call
mov
sub
jl
or
data16
add
add
cmpsl
add
aas
pop
cmp
std
and
push
les
ret
je
lahf
sbb
jb
fwait
add
pop
add
std
and
ljmp
jmp
fstpl
add
xchg
out
add
aas
es
dec
xchg
jmp
xchg
add
aas
enter
int3
jmp
enter
imul
sub
add
shrl
and
adc
faddl
add
mov
fnstsw
out
adc
loopne
fwait
loope
ja
jmp
adc
fwait
mov
cwtl
adc
add
jmp
mov
adc
insl
and
adc
add
enter
enter
enter
adc
or
mov
aas
aas
ljmp
and
insl
popf
movl
jmp
add
add
lret
jae
call
bnd
das
jo
lret
push
out
push
lret
push
rcr
es
lret
mov
loop
lcall
pop
movl
enter
ljmp
fisubl
add
cld
roll
inc
cmp
or
das
aas
in
mov
cmp
je
add
add
xchg
or
sub
add
out
jb
push
or
add
sub
add
ret
fmuls
out
cmp
push
push
adc
movl
jmp
mov
call
mov
int3
add
push
movl
pushl
push
inc
inc
push
pop
arpl
fldln2
movb
movl
imul
mov
sti
lcall
in
out
pop
out
dec
call
imul
inc
jle
imul
and
add
test
add
js
iret
out
cwtl
mov
add
and
test
sbb
add
and
in
insl
add
sub
push
rcr
mov
push
fcos
add
add
fsubr
mov
add
inc
pop
or
xchg
fimuls
mov
inc
jle
jmp
or
or
sbb
aas
pop
add
fsubs
push
xchg
fistl
pop
or
aas
enter
sub
mov
adc
xor
jmp
pop
in
adc
insb
cmp
bound
flds
add
ret
imul
aas
inc
icebp
add
dec
dec
add
enter
and
fcoms
mov
into
fcoms
mov
jmp
adc
inc
aas
adc
adc
adcl
xchg
fadds
mov
cmp
loopne
add
lcall
out
mov
cmp
lea
incl
adc
cmpsl
adc
inc
xchg
sbb
cs
mov
addr16
xor
call
insb
sbb
fs
insb
nop
and
out
sub
enter
dec
cld
jo
push
into
scas
and
adc
mov
or
call
scas
into
sub
cmpsb
lock
xchg
call
pop
decl
shl
jne
sbb
loopne
add
lret
push
push
cmp
out
popa
mul
outsl
push
push
divb
test
jmp
dec
in
jno
dec
ljmp
hlt
out
jmp
ljmp
cmp
es
decl
out
pushl
test
inc
idiv
ljmp
sbb
jmp
xchg
divl
mov
ljmp
and
shrb
lea
add
and
mov
aas
xor
clc
cmp
jecxz
decl
movsl
call
ret
dec
shlb
out
mov
int
mov
mov
jmp
in
call
fadd
ds
aas
mov
call
xor
dec
sbb
add
mov
les
shlb
pop
in
and
and
push
dec
in
and
fsubrp
sbb
cmpsb
aad
sbb
aad
and
ss
or
jecxz
icebp
jmp
push
jbe
mov
insl
jbe
lret
aaa
cmp
mov
ret
xchg
mov
add
jmp
mov
mov
xchg
or
adc
jbe
decb
jns
in
add
enter
jg
inc
aas
and
mov
or
cmp
jp
call
ret
aas
loop
xchg
jmp
adc
or
decl
sub
shl
jne
mov
addb
mov
ds
add
add
or
push
jno
in
addb
enter
or
cwtl
je
ret
cmp
jne
movsb
dec
stc
push
jae
clc
push
icebp
mov
add
jbe
sbb
lret
icebp
mov
mov
jg
jmp
inc
enter
jo
push
rolb
dec
push
push
pop
fiadds
or
mov
into
call
cmpl
add
and
add
sub
or
adc
cmpsb
xlat
call
mov
sti
jne
divb
jno
call
sub
call
or
jne
in
mov
jne
out
xchg
imul
push
mov
push
push
aas
repnz
or
add
daa
or
mov
subl
or
mov
sub
xor
clc
cmp
nop
in
jb
subb
push
sbb
and
or
jmp
pop
fs
mov
push
mov
dec
add
aas
and
pop
add
lds
aas
or
dec
and
negl
call
out
ds
add
add
cmp
dec
and
mov
shrl
inc
add
fnstcw
rorl
or
pop
mov
sub
imul
aas
and
and
inc
roll
subb
pop
outsb
sahf
roll
mov
add
xchg
fstpt
jle
push
jae
inc
aas
mov
push
bswap
or
data16
add
add
roll
add
test
sub
mov
bound
mov
loope
adc
jmp
sbb
sbb
jne
mov
sarb
inc
dec
add
cmp
inc
imul
stos
inc
enter
jno
sbb
les
jmp
imul
jnp
mov
sub
cwtl
jle
mov
rclb
add
sar
inc
xor
shl
jne
jo
enter
aad
jns
in
dec
or
mov
in
lret
sub
ret
aad
ds
xchg
mov
nop
andl
inc
and
nop
xchg
roll
and
jl
or
mov
jg
add
sub
inc
nop
and
jl
or
xchg
nop
jg
out
add
jmp
mov
loope
shr
ret
or
rorl
sbb
cltd
adc
xchg
xor
and
mov
incl
push
leave
jle
jmp
jb
pop
leave
je
iret
jb
add
jb
add
add
scas
jbe
nop
mov
jae
loopne
mov
mov
jo
in
sub
into
push
push
sub
push
xchg
cmp
aas
pop
aas
icebp
stc
mov
dec
dec
pop
or
repnz
add
add
decb
fcmovnbe
in
add
lcall
add
mov
mov
incb
jae
nop
mov
push
add
add
call
test
inc
dec
cmp
pop
ds
sub
add
jb
add
out
inc
xchg
roll
mov
cltd
roll
mov
pop
jl
sub
dec
lcall
xchg
int
jnp
xor
or
loopne
in
int3
push
shlb
push
outsb
int
lock
add
add
push
int
enter
lret
adc
enter
cmp
das
jp
call
jo
add
fs
jne
jnp
or
or
call
bound
fs
cmp
fistl
mov
add
add
repz
mov
in
add
jmp
push
jb
add
sbb
test
add
or
mov
push
jbe
insl
dec
sub
pop
pop
repz
sub
enter
dec
out
add
adc
push
outsb
int3
add
cmpsb
and
rorb
cmp
psraw
add
inc
cld
mov
out
jmp
dec
adc
incl
and
std
sbb
or
add
add
lea
lea
mov
call
dec
call
int
std
jne
addb
into
lahf
cmc
lcall
pushl
mov
decl
push
cwtl
push
call
xchg
pushl
mov
std
jae
hlt
out
mov
lods
add
je
js
loop
hlt
addr16
aas
out
je
popa
lret
fldenv
fsub
icebp
dec
clc
in
rcr
cs
ljmp
icebp
add
pop
jb
call
or
inc
sub
add
test
mov
fstl
jo
add
xorb
dec
enter
mov
pop
jl
subl
loopne
add
mov
inc
cld
or
bound
add
aas
inc
and
jmp
add
dec
dec
dec
test
pop
aam
stc
rolb
out
ret
mov
cmpsl
inc
ja
jmp
fdiv
mov
adc
and
loopne
inc
in
or
add
push
xor
loopne
and
add
enter
or
adc
lods
mov
add
cmp
inc
push
jae
jne
add
faddl
inc
jmp
fs
cmp
shlb
dec
xchg
sbb
cld
dec
lea
arpl
sarb
in
cmp
add
stc
decl
in
mov
push
aam
pop
and
inc
fnstcw
enter
enter
add
jmp
add
cmp
add
outsb
adc
dec
adc
add
neg
cmp
add
mov
add
cld
std
jne
sbb
mov
jge
ret
mov
in
icebp
xchg
or
mov
mov
inc
inc
adc
push
push
xchg
or
insb
xlat
add
leave
ret
push
mov
cld
mov
jge
xchg
pop
sub
add
push
mov
ret
sub
mov
push
mov
push
adc
push
test
cwtl
xor
pop
adc
jne
sbb
out
roll
or
aas
frstor
mov
int3
add
aas
inc
push
cld
insb
jle
or
cld
cli
imul
mov
push
or
mov
mov
mov
leave
jge
add
test
add
add
cmpsb
incl
push
and
add
dec
or
je
sub
ret
dec
add
mov
lds
sbb
xlat
aas
icebp
stc
mov
dec
push
push
or
mov
out
ss
call
jp
dec
enter
je
call
cwtl
mov
lock
sar
and
mov
push
das
add
add
in
mov
lock
mov
jbe
loope
les
ret
adc
add
in
mov
adc
jb
aaa
push
pop
gs
std
fdivr
mov
or
les
psllq
divl
dec
lds
add
fdivs
lds
lret
imul
mov
shr
lock
add
pop
and
ret
mov
cmp
shlb
inc
sti
mov
idivb
repnz
sbb
add
std
sbb
mov
mov
cmp
dec
aas
rol
push
ss
andl
rcr
pushf
mov
enter
cmpps
xchg
push
cltd
adc
pushf
sarb
cmp
jmp
add
add
movsl
dec
sub
add
xor
std
leave
add
fmul
xlat
sarb
push
cmp
push
sbb
ret
sub
adc
push
pop
cs
adc
in
cmpl
mov
orl
inc
cmpsb
enter
xor
enter
ffreep
pop
pop
or
fisttpl
aad
push
jne
cld
add
add
and
enter
jl
add
movl
pop
inc
clc
data16
add
icebp
sub
sbb
dec
inc
aas
test
xchg
or
clc
jne
and
push
add
test
clc
out
mov
sarb
hlt
mov
cld
mov
add
int3
dec
inc
aas
out
je
add
imul
inc
popa
push
ljmp
add
aas
out
je
pop
sbb
lock
call
aas
icebp
or
call
add
pushl
enter
jne
stos
lret
adc
add
push
xor
cld
xchg
jb
mov
sti
sbb
insb
in
xor
mov
xchg
icebp
and
enter
add
mov
enter
inc
mov
add
shrl
push
jne
out
fcomps
inc
sbb
test
ret
call
sub
aas
enter
lret
ds
idiv
stc
mov
out
stc
mov
std
stc
inc
cmpsb
adc
jmp
add
add
enter
int3
dec
sub
test
fwait
pop
aad
cmp
shl
add
test
cmp
add
outsb
jle
lcall
shr
mov
xchg
incb
or
mov
xchg
hlt
fidivrs
stc
mov
jge
incb
cmp
call
dec
add
clc
fstpt
push
push
add
dec
inc
es
shlb
cld
rcl
dec
daa
les
shrb
inc
pop
add
add
out
test
rolb
push
movl
aam
les
shrb
call
add
incl
pop
add
jmp
sub
incl
add
mov
lds
dec
cmp
aaa
and
out
jne
out
sarb
out
lea
je
xor
mov
add
in
mov
enter
call
mov
pop
leave
cld
aam
in
mov
mov
push
mov
or
imul
aas
jp
mov
add
lods
mov
sub
add
jns
addb
lcall
jmp
add
and
add
jo
scas
mov
enter
mull
es
in
xchg
add
fcomip
dec
cs
inc
jle
icebp
cmp
pop
mov
jge
nop
cmp
lods
sub
jmp
add
enter
sti
mov
xchg
adc
add
xchg
stos
popf
jb
mov
cwtl
cmp
inc
cld
lfs
add
pusha
dec
mov
out
or
jb
aaa
inc
mov
lock
mov
popa
push
add
add
cmp
ret
bound
mov
push
pop
jns
add
cmp
repz
repz
adc
add
add
lret
dec
icebp
std
pop
adc
push
inc
cli
sbb
test
pushf
fisubrs
xchg
or
fiadds
shlb
xor
cmp
jp
shrl
mov
stc
je
daa
ret
mov
aas
sbb
and
idiv
fcmovb
adc
popa
add
or
adc
add
decl
stc
xor
inc
cmp
pop
sbb
pop
push
add
stc
xor
stc
xor
test
into
push
subb
and
lret
add
insl
xor
stc
inc
xor
stc
mov
scas
rorl
fcmovb
rorb
mov
les
dec
jle
rcll
decb
stc
add
add
sarb
jecxz
add
mov
mov
sub
loopne
sub
mov
loope
xor
add
jl
mov
xor
insl
xchg
pop
int3
jo
std
cmp
lock
add
cli
pop
pop
idiv
mov
or
cmp
int3
mov
push
mov
lea
add
xchg
test
pop
add
push
cmp
stc
insb
jbe
stc
insb
js
test
enter
cli
jmp
add
bound
sub
imul
xchg
sbb
lock
outsl
aas
and
push
cmpsl
adc
push
inc
pop
or
lea
inc
ljmp
lock
clc
cmp
push
sub
stos
sldt
add
jb
sub
or
inc
xchg
fldl2e
or
das
adc
pop
in
cld
ds
not
cmpsb
nop
test
pop
adc
and
roll
clc
sbb
cmpsb
sti
sbb
inc
mov
ret
jmp
cmp
add
xor
in
xor
popa
cli
xor
mov
pop
xor
xlat
shrl
fldenv
mov
lret
add
mov
insb
mov
out
jecxz
add
inc
add
and
adc
mov
sbb
incb
push
add
push
or
or
clc
cli
mov
inc
mov
mov
orb
ret
in
inc
cli
xor
dec
pushf
pop
and
pop
inc
movsl
and
fadds
fstps
xor
stc
repz
pop
add
add
add
sub
rcrb
mov
sti
stc
lret
mov
cs
ret
adc
and
in
lea
lret
dec
sbb
add
cli
xor
jmp
xor
dec
pushf
pop
pop
mov
aad
xor
movsl
rolb
dec
cs
aas
push
mov
cmp
and
add
add
cmp
mov
insb
js
test
jo
ret
rorb
jne
xchg
sbb
push
out
jle
add
les
pushf
and
sti
in
jecxz
cmp
mov
mov
ret
fidivrs
ljmp
les
and
test
push
dec
add
add
mov
ljmp
repnz
mov
aaa
sbb
flds
jne
jae
test
jo
mov
cs
adc
sub
stc
mov
jmp
mov
les
sub
push
cmp
dec
stos
cmp
sub
inc
lret
sbb
es
add
mov
iret
cmp
in
xlat
ljmp
icebp
jae
push
inc
lret
add
inc
or
cmp
lock
in
adc
ljmp
ret
jb
mov
xchg
fists
dec
cmp
ret
mov
xor
lock
lock
push
lret
dec
cmc
jnp
adc
xchg
fiaddl
add
xchg
mov
gs
inc
pop
ret
fidivrs
in
mov
fstpt
test
push
stos
sub
ds
add
ret
mov
div
or
idiv
lea
xchg
push
cmp
ret
sbb
xor
mov
mov
add
xchg
stos
xchg
cmpl
out
add
fnstenv
incl
add
jmp
idiv
ljmp
pop
xchg
or
adc
sub
pushl
sbb
sti
xor
inc
test
adc
stos
xor
data16
add
imul
testl
xchg
mov
add
jecxz
ret
sarb
sub
or
sub
xchg
loope
sub
pop
add
add
add
xchg
mov
mov
dec
lock
mov
pop
jle
stc
loop
ret
sub
fnstcw
dec
cltd
or
sub
xchg
loope
and
std
add
call
lock
xor
lock
mov
or
and
mov
mov
sarb
dec
testb
dec
enter
mov
ljmp
add
push
or
mov
jmp
imul
mov
dec
adc
mov
cld
aad
int3
clc
jmp
mov
mov
jmp
ret
imul
bnd
or
sahf
mov
jmp
divl
push
divl
pop
sbb
testb
cmp
add
rcll
mov
incl
adc
add
add
sahf
ljmp
pushl
or
or
adc
mov
pop
shrl
pop
add
sti
jge,pt
cmp
add
inc
leave
dec
loope
xchg
or
jg
mov
jnp
mov
ljmp
es
xchg
mov
cmc
xchg
lods
fadd
add
cmp
je
mov
call
add
and
mov
pusha
icebp
cld
out
cs
loopne
test
ljmp
mov
add
test
xor
pop
shl
out
lock
add
sbb
orl
inc
jle
mov
xchg
call
sbbl
inc
call
gs
clc
inc
and
inc
ret
inc
sbb
cmp
sub
inc
dec
sbb
adc
add
incb
adcb
jmp
mov
jle
push
inc
add
js
push
add
enter
jmp
stos
jmp
mov
aas
filds
xor
or
testb
aas
cs
push
or
mov
jns
sub
add
mov
add
inc
mov
adc
add
add
gs
add
or
xor
jl
aas
push
add
xor
inc
aas
sbbb
jne
add
mov
lret
jl
aas
push
add
stos
ss
jle
inc
aas
xchg
dec
loope
xor
dec
enter
dec
and
mov
push
in
push
push
test
add
add
mov
jmp
jge
adc
pusha
sbb
mov
xor
xchg
or
adcb
sub
mov
jmp
cmp
mov
inc
aas
fwait
stos
aad
push
in
push
push
test
pop
aaa
jnp
call
adc
mov
jmp
inc
aas
out
sti
mov
inc
jmp
add
add
mov
es
testl
push
fcoms
jb
lret
push
cmc
adc
mov
inc
inc
jns
xchg
je
imul
bound
add
jmp
in
sahf
jmp
pushl
and
lcall
add
add
int3
mov
faddl
add
rclb
popa
sti
fs
sub
mov
fcmovb
add
lahf
sarb
fisttpll
inc
cld
add
or
add
sub
inc
clc
and
mov
cld
imul
decb
aad
inc
jne
jno
lcall
sti
xor
xlat
rolb
data16
add
add
add
int
shll
jne
arpl
cld
shl
mov
sbb
enter
stc
add
aas
lock
jecxz
xor
add
ja
inc
aas
push
cld
ds
sahf
mov
out
ja
aaa
lock
leave
cld
sbb
and
test
add
mov
divb
add
fcmovb
jne
add
cmp
lods
call
scas
add
xchg
sbb
pop
mov
pop
add
jge
add
dec
add
mov
sbb
and
out
add
xchg
lret
js
jno
jle
xlat
mov
lods
mov
enter
dec
and
mov
cmp
inc
dec
movsb
jmp
add
cmp
xchg
stc
mov
int3
adc
and
lock
add
imul
mov
sbb
loopne
xor
ja
leave
cmc
enter
dec
stos
dec
xchg
in
adc
push
or
adc
pop
repnz
add
cmp
pop
mov
es
jmp
cmp
je
add
add
xor
jmp
cmp
clc
add
mov
movsb
dec
enter
leave
add
cmp
add
icebp
dec
ret
cmpsb
mov
ret
jge
add
aad
pop
notl
aad
loop
scas
mov
movl
mov
cmp
add
jmp
xor
loope
mov
add
lea
es
pop
and
add
pushl
mov
jmp
outsb
add
data16
leave
ret
push
mov
dec
cld
movsl
add
push
jne,pn
dec
pusha
call
mov
lcall
xor
or
add
fcmovb
add
pop
inc
pushl
das
jne
dec
lret
sarb
inc
adc
add
mov
add
dec
int3
push
and
das
or
popf
adc
adc
lcall
pushl
xchg
jmp
fcomi
cmp
adc
adc
and
in
mov
mov
je
dec
call
out
sbb
test
push
ret
pop
in
jmp
out
jne
mov
adcl
add
aas
out
xor
out
cli
clc
cmc
add
insb
jle
out
test
fsubs
add
ret
add
loop
add
xchg
loopne
dec
xor
mov
add
push
add
pop
in
test
mov
mov
es
enter
in
in
test
jl
jl
lds
pushf
jl
inc
and
sbb
add
add
jns
cs
lock
lret
xor
and
add
push
mov
lds
xchg
mov
push
loope
int3
test
jmp
cmp
pop
cli
mov
adc
ret
in
jb
mov
adc
in
jne
xchg
mov
outsl
cwtl
sarl
call
jo
fisttpl
jo
mov
add
add
add
enter
fbstp
inc
incb
inc
shr
xchg
add
cmp
je
fcmovne
fsubs
fcomps
in
ret
mov
je
mov
loope
sarb
je
aam
cltd
push
push
aad
mov
and
cmp
je
cli
and
or
adc
add
add
push
xor
pop
fmulp
add
or
xor
pop
test
call
xor
in
add
add
shlb
movb
push
push
adc
add
pop
inc
clc
stc
sbb
sbb
inc
add
cld
call
movsl
loop
je
clc
push
push
inc
enter
scas
jns
xchg
push
adc
aas
pop
div
cltd
inc
nop
adc
out
xlat
rolb
pushf
mov
or
not
adc
jns
movsb
in
push
call
loopne
cmp
ljmp
and
add
inc
cmpsb
aas
clc
aas
out
bound
dec
adc
dec
lcall
xor
test
and
xchg
sbb
pop
mov
scas
mov
push
scas
decl
pop
in
ds
jb
js
fnstsw
mov
jns
movsb
dec
fadd
sbb
jl
mov
mov
imul
addb
jbe
fcompl
sbb
jmp
add
fstp
sti
add
add
add
decl
jb
mov
add
insb
call
fwait
imul
sub
aas
mov
add
mov
jo
stc
cmp
call
pusha
xchg
jmp
test
sub
pushf
add
cmp
je
int3
test
sahf
inc
and
mov
add
fmul
add
jne
hlt
jle
enter
add
add
enter
enter
lock
inc
enter
ret
nop
enter
call
fmul
add
iret
test
cmpl
les
cmpsb
cs
push
or
jnp
jmp
mov
jl
add
aaa
jge
scas
cli
jmp
icebp
mov
lods
or
add
icebp
mov
movl
or
add
repz
push
sub
push
add
mov
add
je
aad
aam
mov
jmp
ljmp
std
jne
es
outsb
push
dec
inc
es
jne
jle
lds
push
inc
les
jg
fdivrl
pop
sub
call
add
add
sbb
in
mov
ljmp
loopne
push
mov
aas
lahf
mov
mov
std
fwait
mov
push
roll
dec
cmp
adc
jae
clc
test
or
add
push
mov
shl
mov
xor
ljmp
cld
push
mov
call
add
add
sbb
call
sub
pushf
pop
pop
cmp
pop
daa
xor
outsl
aas
push
icebp
mov
adc
in
mov
jl
lret
std
mov
ss
jmp
xlat
je
mov
dec
mov
dec
enter
subb
aad
jmp
aam
push
mov
andl
add
add
or
push
add
push
ja
push
inc
lock
mov
fwait
or
jmp
aam
filds
ret
or
dec
inc
in
push
filds
jnp
xlat
cltd
and
add
cmp
sbb
inc
in
push
rolb
enter
cmp
sbb
inc
loopne
xchg
add
add
xlat
sbb
je
mov
out
decb
inc
inc
in
push
rolb
jo
jge
cmp
push
inc
mov
push
mov
aam
xlat
je
dec
and
fdivrs
leave
ret
push
mov
lock
mov
call
lahf
orl
mov
movsl
loopne
jmp
aaa
inc
lock
add
aaa
jne
out
ljmp
and
jge
lret
jne
std
jne
xor
in
fld
shlb
jne
test
xor
jne
and
stc
xor
call
incl
xor
repnz
loopne
lahf
mov
bound
or
xor
add
add
mov
rorb
jecxz
scas
pushf
or
pop
loop
jmp
add
fisttps
adc
je
push
add
or
insb
inc
lock
add
mov
aaa
rcr
ds
ret
xor
lock
mov
ljmp
mov
icebp
sbb
jmp
stc
aam
or
cs
inc
shrl
insl
inc
movsb
xchg
aad
or
orb
shrl
pop
inc
pushf
lahf
aas
enter
mov
jnp
out
or
mov
ja
pop
fstpl
aam
mov
jo
roll
mov
aam
les
jmp
adc
add
xor
adc
push
inc
filds
add
enter
call
bnd
psrlw
pop
or
repnz
lds
orb
and
rcll
push
mov
ds
sar
push
sub
cmp
rcl
mov
out
sub
sar
shll
add
mov
add
movsb
sarl
idivb
scas
add
cmp
xchg
stos
mov
mov
test
enter
movsb
push
add
addb
pop
xchg
shll
shrb
int3
push
movl
push
inc
inc
sub
lahf
call
jns
int3
add
mov
ror
add
or
aaa
sub
decl
mov
push
jne,pn
add
add
icebp
and
push
sub
loope
xchg
ret
decl
movsl
adcl
adc
mov
call
scas
lcall
mov
call
pushl
sbb
aas
aam
jmp
bound
adc
dec
push
jno
clc
jle
add
jg
xlat
addr16
inc
xor
lcall
stos
xor
cs
lcall
cmp
pushl
xor
push
cltd
push
inc
movb
push
xor
push
xlat
stos
push
shl
cwtl
call
mov
mov
push
lcall
fistpll
dec
enter
rcrl
cltd
and
les
enter
sarb
add
add
nop
cltd
pusha
ljmp
test
pop
rdpmc
rcr
repz
pop
fstpl
xor
cmp
cs
sub
mov
xchg
mov
comiss
sbbl
pop
loope
jb
cltd
cwtl
push
add
shl
stos
push
lock
push
mov
push
dec
shll
or
add
xor
call
cmpsb
inc
mov
je
push
movsl
call
loopne
xchg
sar
hlt
pop
shll
pop
or
push
shll
xor
pop
cmpsl
inc
stc
cmp
mov
outsb
ja
and
aas
inc
xor
int3
movsb
mov
dec
cmp
jmp
xor
je
mov
add
sub
push
es
iret
jb
test
bound
add
lea
xchg
call
popf
or
mov
add
fisttpll
lock
ret
ja
and
inc
jge
fldl
movsb
mov
inc
add
arpl
call
mov
pop
pop
outsl
or
ret
inc
in
andl
push
add
add
mov
call
mov
cmovne
out
add
in
or
out
inc
out
call
or
icebp
sub
mov
push
add
fcmovb
je
push
lea
sbb
add
out
sub
add
add
aas
loope
pop
add
ret
loope
add
mov
mov
add
add
dec
inc
aas
fisttps
adc
add
fadds
and
add
filds
leave
cld
fs
cli
add
add
jg
add
jg
add
jg
add
jg
add
jg
in
mov
enter
enter
enter
test
add
bound
sub
int3
sti
xchg
cmc
xchg
or
add
jg
jmp
jl
and
aas
enter
cmpl
push
jge
aas
int
add
jmp
mov
aas
enter
int
jne
jmp
shll
cmp
ja
jno
jmp
xchg
pop
sub
inc
dec
jl
dec
push
add
movsb
repz
popa
or
add
ja
xchg
jno
dec
idiv
cmp
cmp
inc
mov
mov
maxps
dec
out
repnz
inc
push
inc
xchg
sub
mov
mov
aam
jbe
fsubs
cli
xchg
je
cmp
push
loope
add
mov
cmp
push
pop
or
inc
gs
pusha
hlt
lahf
jge
call
adc
idiv
push
add
add
cwtl
dec
les
adc
push
mov
pop
cmp
loope
mov
lods
add
xorl
rolb
movl
jmp
xchg
call
sbb
add
test
aaa
call
imul
mov
mov
jmp
inc
aas
add
sarb
add
add
sbb
inc
inc
cmpsl
cmp
jb
or
pop
add
aas
loope
test
xchg
decl
push
mov
fadd
add
inc
add
push
fstps
call
psubd
or
js
add
loope
jle
sbb
incl
loope
mov
cmp
incl
add
pusha
mov
lcall
sub
incl
xchg
jne
xchg
shll
jnp
cmp
add
ljmp
adc
fistps
add
jmp
add
js
pop
xchg
leave
or
fwait
jmp
add
xchg
sarb
pop
aaa
loopne
mov
leave
shlb
mov
jo
xchg
test
push
cwtl
icebp
xchg
fwait
add
add
out
xchg
movb
mov
imul
push
sub
mov
mov
mov
leave
in
nop
mov
xchg
dec
leave
pop
pop
cmp
xor
dec
or
loopne
mov
leave
pushl
scas
enter
enter
shr
lods
enter
pop
add
mov
shl
add
add
enter
repz
fmulp
adc
enter
enter
pop
inc
cs
call
pusha
rcrl
int
enter
stos
push
xchg
pushf
jle
ffreep
xor
or
insb
leave
pop
jb
shrl
test
pop
push
outsb
sarb
add
add
sti
std
jne
arpl
rorl
jne
pop
je
dec
dec
sar
fincstp
pop
leave
and
add
addr16
pop
ljmp
adc
push
mov
or
push
out
dec
inc
xchg
arpl
cmpsb
lret
or
cltd
push
out
xchg
lret
lds
int3
add
data16
iret
add
cmp
push
jmp
in
neg
push
push
push
dec
inc
hlt
es
test
add
add
push
push
cltd
loope
aas
movsb
mov
test
add
sbb
aas
xor
adc
lea
mov
cmp
incl
imul
aas
xor
hlt
enter
xlat
jb
add
mov
mov
test
push
mov
lea
call
mov
xor
xchg
repz
cmpb
push
cmp
push
pusha
ret
cli
out
jne
mov
xor
roll
cmp
fwait
and
roll
lock
pop
xchg
aas
mov
jl
xchg
or
das
pop
movsbl
mov
cmp
fwait
cmp
jnp
xchg
loopne
adc
in
jp
add
leave
dec
rorb
hlt
enter
add
jge
out
mov
imul
lret
xor
cmp
mov
and
mov
dec
aas
enter
dec
cmp
aas
enter
enter
lea
jmp
cmp
add
cmp
inc
push
imul
rol
mov
xor
jmp
loop
cmp
or
add
push
or
cmp
je
add
add
std
push
mov
mov
pop
dec
cmc
test
push
fwait
movsb
in
out
mov
test
rol
roll
inc
enter
pop
add
icebp
mov
mov
dec
pop
add
xor
in
ret
les
inc
adc
sub
lds
rcrl
call
mov
loope
push
add
add
icebp
testl
pop
aam
push
ds
pop
push
incb
push
je
push
adc
testl
mov
add
data16
out
loopne
dec
pusha
idiv
orl
call
dec
mov
leave
dec
lcall
out
mov
and
mull
mov
add
inc
pop
cmpsb
into
push
inc
mov
push
insb
mov
cmp
push
in
sub
mov
in
mov
and
sbb
popf
scas
out
add
incl
repnz
out
mov
lock
lock
fdivs
jmp
enter
testl
or
xchg
addl
mov
cltd
pop
into
add
add
or
dec
mov
jne
enter
ret
in
sub
cmp
fwait
lock
aas
ret
std
sti
pop
or
sub
jle
pop
adc
mov
mov
ret
mov
call
in
ret
sub
test
fwait
dec
ret
pop
mov
cmp
push
pushl
pop
mov
add
add
mov
aam
cmova
mov
jge
inc
inc
clc
nop
shlb
aas
enter
cmp
cmpsb
jb
je
inc
add
je
mov
aad
dec
inc
in
sub
push
add
cli
gs
enter
sar
cld
cmp
cltd
dec
shll
aad
add
add
shr
js
sar
push
cwtl
push
ret
pop
rorl
sub
inc
jmp
cmp
add
cmp
jmp
bnd
pop
cmp
je
mov
aam
jns
push
push
leave
rorl
call
jle
sar
cltd
pop
pop
ror
dec
imul
iret
push
inc
data16
xor
mov
add
test
hlt
push
call
mov
push
push
je
outsb
stos
decl
sub
dec
push
jmp
push
jecxz
push
xchg
lret
push
push
mov
mov
pushl
mov
mov
inc
je
aas
mov
repz
call
xor
aas
outsb
adc
add
xor
add
pop
dec
xchg
insl
jbe
decl
mul
jne
xchg
push
jae
decl
adc
xchg
or
inc
or
lcall
jmp
add
push
pushf
mov
cmp
cmp
mov
add
xchg
lods
adc
cmpsl
outsl
test
add
test
sar
mov
iret
xchg
mov
loopne
jmp
loope
dec
mov
cld
sbb
pop
sub
scas
sub
dec
mov
jg
cmp
xorl
outsl
pop
call
xchg
sbb
adc
mov
test
mov
cmp
add
add
xorl
enter
cltd
pop
xchg
jne
fcom
add
ret
jmp
inc
xor
sbb
adc
mov
rol
ret
xor
movsl
lock
mov
push
sub
mov
cld
std
fdivrl
adc
mov
rolb
push
push
inc
jge
xor
outsb
inc
shr
cwtl
sarb
add
add
mov
jne
jge
push
or
dec
test
mov
cmp
mov
call
cmpl
add
hlt
aas
add
enter
inc
decb
int3
push
mov
jne
inc
je
outsb
call
je
jle
into
jmp
hlt
aas
add
push
inc
data16
dec
jmp
push
ror
call
cmp
push
push
dec
add
cmpsb
pop
dec
roll
lods
mov
inc
je
and
or
out
incl
hlt
call
rolb
push
push
or
inc
aas
dec
add
aas
xor
push
mov
xchg
cmp
mov
jle
add
out
out
add
shl
ret
jmp
scas
add
mov
bound
shr
lea
push
clc
repz
aam
call
inc
mov
call
xor
cmp
std
lods
add
cld
in
decl
adc
decl
or
ret
out
mov
imul
inc
push
or
call
aas
enter
iret
daa
clc
cmp
add
aas
enter
int3
mov
push
jg
imul
xchg
or
add
xor
imul
scas
adcb
icebp
or
adc
jg
outsl
mov
xchg
aas
enter
mov
xlat
push
and
push
subb
mov
pcmpeqw
add
add
movb
mov
inc
cli
jmp
cmpb
jmp
scas
push
sub
test
mov
xor
test
out
inc
enter
xchg
into
mov
and
das
jl
out
mov
add
cld
xor
enter
push
dec
sub
mov
roll
mov
add
or
push
sbb
pop
aam
sbb
faddl
dec
mov
sbb
decl
dec
test
xchg
inc
add
jno
sub
push
jae
add
push
rolb
inc
add
adc
lcall
inc
push
call
inc
xchg
cmpl
je
push
sbb
inc
xchg
out
add
add
les
jmp
jl
add
pop
or
mov
call
into
xchg
ljmp
dec
push
cltd
jle
jns
jmp
add
loope
test
push
cmp
lock
imul
stos
sub
int3
rcr
dec
ret
xlat
mov
and
subb
mov
push
add
add
sbb
jle
das
xchg
sti
xchg
adc
js
jge
jae
insl
lret
push
fildl
call
push
jle
inc
dec
cmp
dec
inc
jle
inc
pop
push
lret
cmp
dec
ret
and
data16
enter
cmp
dec
jg
or
in
cmp
out
ret
jle
mov
imul
call
inc
mov
xchg
call
pushf
aas
enter
pop
test
jge
mov
insb
cmp
fdivrs
mov
mov
out
call
jbe
mov
rcr
or
lds
in
inc
jge
or
imul
call
adc
enter
mov
faddl
pop
add
add
mov
dec
adc
call
jb
cltd
aam
dec
test
and
mov
in
or
add
jns
jmp
cmpsb
mov
sub
je
adc
cld
out
mov
fsts
mov
rorl
dec
xchg
loop
xor
mov
repnz
cmp
jmp
fidivl
sbb
add
cmp
jmp
decl
push
inc
push
lahf
sbb
sub
call
push
cld
out
jne
and
into
mov
imul
pop
jmp
xor
mov
lcall
or
push
mov
or
sub
call
leave
in
add
and
add
inc
cld
enterw
cli
push
rorl
push
xor
std
gs
daa
int3
call
pushl
negb
mov
jle
stos
cmp
inc
sbb
in
adc
jge
pop
or
lret
dec
ret
xlat
mov
and
jmp
cmp
mov
or
cmc
add
cltd
add
add
inc
fadds
jne
mov
dec
lcall
mov
jp
mov
jmp
xchg
lret
inc
aas
jb
or
dec
jmp
cmpb
icebp
call
inc
inc
mov
aam
enter
inc
gs
sub
xor
mov
test
out
ret
jnp
or
jg
out
add
add
pop
sub
mov
push
dec
enter
cmp
xchg
std
mov
jnp
add
sahf
les
enter
movb
mov
sub
mov
lds
insb
stc
or
imul
add
push
fs
insl
nop
jge
add
lret
dec
mov
aad
imul
dec
mov
incb
add
add
mov
outsb
cmpps
cmp
in
add
fdivl
mov
clc
xorl
ss
je
mov
es
mov
cmp
shl
sub
push
xor
mov
adc
jnp
out
push
mov
call
add
add
movsb
andb
sbb
mov
add
stos
ret
rorb
aas
add
popfw
dec
push
pop
int3
std
jne
and
int3
leave
cs
push
inc
das
je
mov
and
enter
arpl
test
jecxz
jmp
push
push
push
push
inc
xchg
pushl
sbb
sub
jmp
push
sub
call
pushf
lahf
push
xlat
les
and
add
std
std
out
push
push
inc
aas
lahf
jns
jnp
adc
addr16
lock
pop
scas
js
push
push
loop
dec
push
jns
inc
inc
fcmovb
cmp
dec
ret
iret
mov
and
cld
mov
add
inc
push
out
pop
daa
test
mov
inc
jle
cmpb
insl
cmp
decl
mov
add
iret
out
lock
xor
in
adc
dec
cltd
push
mov
push
mov
jmp
sbb
fbstp
mov
movsl
ljmp
mov
ja
mov
cmpsl
ljmp
xchg
ja
and
jbe
rorb
pop
sbb
add
xor
addr16
add
xchg
sbb
or
out
dec
ja
pop
outsb
aad
enter
mov
shrb
rorb
ret
in
cmpsb
sbb
imul
jbe
rolb
fwait
subl
in
scas
push
pop
scas
je
in
push
enter
push
jb
dec
jl
cmp
pop
scas
dec
mov
je
add
add
ja
xchg
mov
je
movsb
sbb
xchg
adc
add
lods
je
xchg
xor
pop
cmpps
xchg
pop
jo
mov
mov
and
cmp
in
pop
in
scas
je
and
decb
sub
sbb
lds
test
cmpsl
leave
in
mov
outsb
inc
incl
add
xchg
pushf
and
daa
std
jne
sbb
lret
imul
mov
xor
jmp
in
std
fisttps
adc
dec
aas
in
push
xchg
popf
or
cmp
jmp
arpl
call
xor
idiv
jmp
pushf
aas
push
cmpsl
enter
and
and
jne
cwtl
out
aas
jmp
add
sub
call
xchg
adc
ljmp
jne
xchg
dec
lret
or
jmp
mov
push
add
paddsb
add
lret
jne
push
mov
inc
dec
ljmp
out
sar
lods
jbe
stos
mov
jne
cmp
mov
out
sti
clc
mov
call
add
add
insb
jbe
adc
je
push
loopne
add
addw
and
shlb
je
sar
jge
jp
or
push
test
lret
inc
out
cmp
inc
ja
or
cmc
inc
mov
cmp
adc
call
add
cmc
push
mov
add
add
mov
add
insb
or
fndisi(8087
adc
mov
cmp
shlb
call
test
stos
xor
test
add
mov
scas
cs
incb
test
test
stos
xor
aam
add
xchg
ret
push
stos
push
adc
inc
jmp
cmp
add
addr16
add
add
stos
incb
pop
inc
jmp
cmp
add
scas
test
inc
jmp
cmp
add
cmp
faddl
out
pop
insl
test
add
cltd
push
inc
add
lea
add
inc
jne
or
imul
add
add
push
ss
dec
add
lcall
add
out
push
addr16
lds
sbbb
and
inc
push
int
daa
les
lds
xchg
fwait
aaa
push
ds
add
push
inc
jne
or
imul
dec
xchg
inc
add
ret
add
aas
pop
jo
aaa
pop
out
loopne
fldl
pusha
add
dec
ret
incl
add
pusha
popf
add
mov
pop
outsl
pushl
cmpsl
pop
or
stos
testl
mov
or
jno
ljmp
shll
ret
xlat
mov
out
or
repz
jmp
mov
jno
adc
sar
xchg
cltd
pop
mov
subl
xchg
enter
enter
mov
dec
call
enter
cmpsl
mov
fsubs
inc
jo
mov
dec
shlb
jo
aam
mov
cmpsl
psrlq
lret
fprem
cmc
cmp
add
jnp
out
jge
out
lds
cmp
cmpsl
repz
rol
dec
mov
pusha
andl
mov
loopne
cmpsl
xchg
pop
adc
lock
mov
inc
cmpsl
je
xchg
sbb
dec
test
mov
das
pop
cmpsl
mov
mov
xor
test
add
cmp
je
sbb
dec
test
mov
daa
and
inc
add
je
call
add
aaa
das
dec
sub
cmpsl
shll
add
aas
cmpsl
xor
addl
xchg
and
sahf
mov
in
testl
pushl
mov
and
in
cwtl
cli
add
dec
xchg
add
leave
cmpl
leave
add
gs
repnz
dec
addl
mov
je
dec
or
push
ss
xor
call
mov
lcall
and
jne
add
rclb
add
rcrb
jne
add
mov
loope
out
dec
sbb
jne
cmpsl
pop
mov
xchg
cmp
aaa
dec
mov
sbb
bound
mov
inc
jecxz
xor
add
add
pop
fs
or
add
push
cmpsl
pop
pop
xor
pushl
ret
pop
lahf
jge
imul
mov
imul
pop
jge
insl
call
lahf
pop
xchg
insl
push
jp
jg
test
repnz
pop
ja
xchg
insl
leave
jge
add
les
insl
call
addl
arpl
sub
jns
ret
add
add
sub
sarb
cmovb
fcomi
imull
add
sbb
dec
mov
lods
addr16
ret
fst
jg
mov
mov
ret
in
xlat
inc
push
testb
cwtl
imul
addb
sti
sub
daa
cmp
pusha
sub
sar
dec
sbb
add
jmp
call
sub
mov
or
cmpsb
or
or
sub
mov
push
inc
enter
and
and
enter
mov
lret
add
add
push
cltd
inc
dec
cmc
ds
mov
pushf
sbb
or
scas
enter
add
je
add
add
in
ret
notb
fwait
mul
in
push
roll
dec
icebp
in
incb
rcll
idiv
mov
jmp
cs
call
leave
mov
jmp
je,pn
scas
loop
add
in
or
jns
in
gs
push
addl
sahf
out
enter
mov
mov
xchg
popf
out
add
add
cs
push
jge
push
out
push
incb
std
sub
cmp
or
adc
push
call
mov
mov
addr16
hlt
mov
push
scas
imul
cmp
aam
mov
pop
imul
push
jmp
lock
mov
sar
add
pusha
lods
add
mov
add
mov
fdivrs
out
or
xlat
push
inc
inc
test
push
sbb
inc
aas
aaa
add
aas
das
pop
scas
jl
or
stc
dec
out
mov
data16
js
add
out
inc
mov
aam
pop
sub
iret
repz
mov
cmp
push
add
add
mov
lock
push
pop
xchg
push
push
xchg
test
popf
push
rcll
adc
addr16
sub
or
orl
mov
pop
cmp
out
out
call
lods
and
clc
jg
aas
scas
inc
fcmovnu
hlt
test
out
sahf
add
inc
push
out
jmp
cld
sahf
push
lcall
cmpl
mov
mov
daa
add
mov
push
invd
add
cwtl
adc
decb
mov
fldl
cld
pushw
std
mov
pusha
lahf
repz
adc
jae
pusha
adc
call
sahf
cli
pop
in
cmp
mov
loope
shlb
add
add
lcall
mov
add
imul
pop
js
add
or
or
leave
movsb
mov
std
jne
add
ret
andl
decb
jp
inc
jns
cmp
call
iret
pop
or
pop
and
sbbl
pushl
add
add
add
mov
jg
addr16
inc
add
adc
cmpsb
es
fiadds
ljmp
pop
fiaddl
aas
sahf
movsl
push
mov
out
shlb
addr16
pushl
add
fadd
fsubrs
cs
lock
xor
outsl
icebp
adc
sub
pop
xor
ds
add
add
lock
inc
mov
stc
pop
fldl
scas
pop
and
cmc
dec
outsl
imul
pop
out
gs
divb
and
loopne
inc
out
push
mov
cwtl
movsb
pop
inc
nop
pushf
jecxz
adc
xchg
roll
popf
mull
cs
repnz
cmp
ret
push
popf
adc
add
call
fs
mov
inc
mov
and
fnstenv
adc
add
loop
jb
jg
icebp
fwait
outsl
fstps
test
fcomps
loopne
mov
testb
inc
sbb
cmpsl
pop
jne
je
push
test
clc
call
cltd
add
add
jmp
pmaddwd
jmp
aam
jecxz
fdivr
push
inc
loope
aas
jmp
movsb
in
mov
add
cmp
mov
jmp
movsb
mov
roll
enter
push
bound
lds
lcall
ja
push
ret
ret
lret
add
cs
add
add
imul
addl
dec
lcall
sub
jne
daa
je
cs
jns
ret
add
pop
mov
mov
test
addr16
mov
call
or
jno
push
jmp
mov
call
call
cmp
push
fstpl
ds
push
sub
or
repnz
repnz
push
jnp
decb
push
mov
adc
ljmp
xchg
ljmp
cmpsl
push
mov
xchg
add
lret
xchg
jae
add
stos
pop
push
call
sti
out
add
mov
popa
push
scas
popa
jne
ja
xor
aas
pop
mov
lcall
mov
call
or
dec
mov
pusha
leave
std
stos
add
sbb
popa
fmuls
pop
outsl
cltd
fisttpll
enter
jg
dec
adc
out
jg
insb
cmp
enter
lahf
call
mov
call
in
js
movsl
push
cmovnp
jo
out
mov
add
popa
adc
pusha
rcrb
out
jg
in
movsb
out
cmpsl
or
ret
xor
cmpsl
pusha
and
jb
lret
pop
adc
dec
pusha
add
push
lock
jg
test
pop
and
add
pop
icebp
push
pop
xchg
sbb
cmovo
push
add
inc
pop
xchg
inc
cmp
fwait
xchg
jge
lcall
add
sahf
push
pop
frstor
jge
out
fists
idiv
adc
add
fistps
clc
xchg
adc
cmovo
aam
mov
rcll
and
je
lahf
cmpsb
js
gs
xchg
out
test
cmpsl
testb
testb
inc
movsb
lods
push
pop
int3
std
mov
std
incl
add
jno
gs
xchg
lret
mov
std
or
sbb
jno
jae
push
mov
std
call
and
adc
or
and
test
std
decl
addr16
jno
add
mov
add
cmpl
jle
push
loope
push
call
add
add
ds
in
or
pushl
push
mov
pop
pushl
flds
out
lcall
pop
decl
push
testl
push
ljmp
xchg
lcall
mov
call
cmpsl
push
enter
mov
push
pushl
or
mov
sahf
pop
jmp
cltd
call
xchg
call
add
add
pop
cmp
jmp
pop
pop
ljmp
fs
lahf
pop
adcb
pop
jb
nop
leave
popf
out
std
mov
imul
call
or
cltd
lahf
pop
sarb
pop
lret
mov
add
mov
cs
and
test
pop
mov
daa
fsubrs
clc
jg
add
add
movsl
inc
pop
ljmp
mov
push
out
ret
mov
repz
mov
enter
add
add
inc
add
or
cmp
sbb
or
add
pop
cld
xchg
push
inc
mov
aam
xchg
je
push
pop
mov
sbb
add
fnstsw
add
std
pushf
inc
xchg
xor
je
add
add
mov
insb
std
enter
or
add
adcl
push
and
clc
mov
mov
pop
pushl
out
jae
mov
shlb
add
push
repz
add
add
out
std
push
pop
fmull
call
out
std
mov
cmc
decl
and
mov
mov
push
inc
xchg
in
mov
push
out
std
pushl
inc
inc
xchg
push
mov
sub
xchg
int3
push
and
cmc
ljmp
xor
out
cmp
aas
sub
push
negl
mov
add
das
push
pop
lcall
popf
jecxz
jle
push
lret
xor
mov
lds
pushl
push
mul
sbb
pusha
out
fmuls
sub
aas
xchg
sahf
pop
mov
ficompl
mov
sahf
push
shr
pop
mov
rcll
sbbb
in
ret
jmp
xchg
aas
adc
lcall
iret
in
pop
call
iret
inc
mov
sbb
loopne
adc
pop
nop
push
or
test
fistpl
lock
ja
fcomps
push
rclb
cmp
fwait
cwtl
dec
pop
mov
lock
pop
mov
nop
inc
mov
add
add
nop
daa
pop
shlb
jno
js
jg
push
inc
inc
pop
pusha
nop
add
cwtl
out
in
mov
mov
adc
dec
xchg
push
icebp
mov
xor
je
xchg
cmpsb
xchg
out
mov
xchg
gs
decb
push
andb
cmp
mov
test
roll
add
cmp
or
fmul
pusha
icebp
xchg
imul
jno
call
adcl
enter
push
fmuls
add
std
call
dec
cli
push
push
jge
decl
and
shlb
cmp
es
lds
ret
add
push
into
inc
hlt
rorl
push
sub
push
add
add
dec
cmc
test
repnz
jne
sbb
mov
lret
std
xlat
lret
xchg
addb
jns
call
sub
std
pushl
idiv
mov
hlt
cmc
jmp
mov
scas
inc
aas
mov
push
ljmp
inc
lret
leave
movsb
mov
arpl
call
mov
add
outsl
dec
ljmp
xchg
addr16
add
mov
and
testl
outsl
scas
inc
aas
ss
lock
mov
fidivrs
out
push
call
ljmp
out
dec
pushl
pop
add
stc
dec
push
inc
sbb
notl
enter
clc
adc
pop
call
stos
cwtl
pop
push
push
push
call
push
inc
mov
dec
mov
into
dec
lea
test
clc
iret
push
jmp
shll
rorl
push
clc
mov
add
cmp
lock
ret
fmuls
outsl
push
adc
xor
jg
xchg
dec
push
add
add
call
jmp
pop
xchg
cmp
add
lahf
testb
enter
movl
push
test
shll
int
mov
add
call
mov
idivb
movsb
push
mov
jae
mov
jae
sahf
or
call
mov
add
mov
mov
imul
data16
ret
call
push
jo
dec
adc
je
popf
dec
mov
add
cltd
mov
pop
mov
jne
pop
int
dec
hlt
jmp
jne
pop
shll
cld
std
mov
adc
std
call
stc
xor
idiv
imul
out
add
add
and
fldpi
loope
fdecstp
std
mov
out
std
mov
divb
call
dec
xor
lcall
cli
call
aas
call
jg
mov
ja
decl
test
push
mov
in
or
pusha
add
ljmp
ljmp
mov
add
push
xchg
cmp
mov
inc
int3
xor
lea
mov
mov
push
xor
and
add
cmpsb
inc
cmpps
idivl
lahf
add
clc
fcompl
inc
lahf
add
mov
push
mov
lea
mov
ret
inc
enter
nop
pop
fdivs
loop
sub
push
and
std
ljmp
mov
fcompl
push
daa
push
les
mov
pop
push
psadbw
or
cwtl
notl
cmp
push
mov
mov
cmpl
cmp
xlat
push
jb
and
and
jno
sbb
aas
cs
xchg
xchg
push
lock
call
aam
xchg
inc
mov
mov
add
ficoms
add
add
mov
pushf
adc
mov
mov
jo
lahf
idivb
out
sbb
aas
jmp
push
mov
aam
add
add
mov
push
aas
test
testb
imul
imull
xchg
add
sarl
fimuls
or
shll
jne
mov
xchg
jbe
add
shll
shll
out
push
call
arpl
notl
push
push
adc
notl
sbb
xor
out
inc
mov
push
test
rorb
incb
test
xor
dec
aad
push
sbb
or
dec
aad
inc
sbb
add
push
call
aad
in
and
add
add
mov
add
push
int
rcll
push
decl
and
rorb
mov
loopne
fsts
ret
push
lret
mov
dec
mov
jo
add
repnz
in
sbb
cmpl
cmp
push
incl
jb
out
mov
xlat
pop
add
add
xchg
jmp
xchg
in
push
int
dec
js
sahf
jge
decl
outsl
flds
daa
add
int3
sub
push
call
inc
flds
pop
loopne
incl
aaa
cltd
fdiv
enter
sti
out
pop
cmp
xchg
dec
loopne
mov
test
xchg
enter
fstpt
dec
cmpsl
or
pop
mov
push
pop
add
add
dec
dec
cwtl
cmp
nop
test
int3
test
dec
lret
dec
js
leave
xchg
jo
pop
cwtl
outsl
jge
dec
push
ficomps
pop
test
dec
dec
test
push
inc
push
add
sbb
pusha
mov
out
fisttpll
iret
sbb
test
inc
cmp
in
outsl
sbb
push
sub
lock
ss
test
sbb
insb
pop
mov
add
mov
imul
inc
jmp
jge
out
rolb
pusha
cmpb
cmp
mov
xchg
mov
jl
pushf
or
scas
push
repnz
pop
mov
add
mov
jl
insb
in
mov
je
test
ret
in
sbb
add
dec
int3
push
leave
lcall
outsl
mov
push
sbb
out
add
int3
std
jne
pop
rcr
dec
adc
jne
adc
or
push
scas
decl
mov
mov
and
mov
out
mov
adc
data16
push
mov
adc
or
cli
xlat
incl
add
dec
mov
inc
add
push
xor
outsb
out
adcb
pop
sbb
pop
jle
mov
loop
dec
decl
ljmp
loopne
cld
out
cmp
out
xchg
dec
add
sti
rolb
incl
negb
jnp
mov
and
inc
cli
out
push
dec
incl
add
mov
inc
mov
push
ret
testb
add
add
out
stos
inc
aas
bound
movsl
jo
or
and
pop
pushl
leave
dec
out
pop
call
dec
sbb
inc
add
jno
mov
cld
out
pop
lcall
js
lock
jmp
shl
or
rolb
hlt
nop
sar
dec
add
add
sarb
loope
stos
or
arpl
mov
out
rorb
rolb
rolb
jno
fcomi
pop
test
les
xchg
sti
pop
pop
and
xorl
xchg
dec
scas
out
xchg
mov
mov
orl
ret
pop
add
adc
add
add
add
inc
push
insb
pushf
movb
jg
stc
jmp
nop
je
out
cmp
push
loop
push
and
sbb
jmp
je
push
sti
cld
inc
inc
pop
add
mov
in
jmp
call
jge
lcall
adcb
push
test
cmpsb
cmp
sub
stos
adc
jmp
and
mov
add
and
imul
clc
pop
inc
adc
or
inc
push
and
mov
adc
decl
test
jnp
idiv
rcll
addr16
mov
out
push
lcall
in
mull
adc
mov
pop
inc
xchg
adc
sub
inc
xchg
and
inc
adc
call
fdiv
and
push
push
add
add
xor
aas
mov
dec
into
dec
call
dec
mov
mov
jbe
mov
or
cmc
decb
jg
or
xchg
incl
lcall
out
xchg
call
pop
inc
adc
xchg
inc
dec
dec
jo
push
mov
cmc
add
add
xchg
mov
inc
add
and
incl
add
cwtl
add
pop
fildl
dec
js
iret
pop
addr16
cwtl
ljmp
es
push
jbe
inc
pop
hlt
fistps
sub
inc
dec
xor
dec
inc
jle
rolb
push
cwtl
xor
nop
pop
jbe
inc
and
out
pop
imul
adc
dec
or
rcl
jge
inc
mov
mov
xchg
call
jne
inc
out
inc
inc
add
add
jge
push
sarb
pop
jo
jg
mov
jle
inc
test
arpl
push
call
add
push
cmp
cmpl
fnstcw
rolb
add
enter
jg
imul
call
push
outsl
cmp
dec
cmpl
bound
jge
cmc
xor
shrl
dec
add
add
in
jg
mov
cmp
ret
adc
jl
sbb
bound
xchg
loope
pop
lods
xchg
ret
in
adc
jbe
jge
lods
clc
pop
aam
jge
into
aam
add
push
add
xchg
jg
pavgw
clc
push
enter
cmp
add
sahf
imul
add
sbb
ljmp
cmp
jne
add
xchg
add
cmpl
inc
dec
xchg
xor
push
pop
mov
test
or
call
ss
ja
decb
mov
add
test
or
incl
in
pop
xlat
std
mov
or
aas
adc
imull
add
cmc
incl
add
in
divl
xlat
jmp
aad
inc
aas
mov
inc
decl
dec
mov
mov
ret
sub
jmp
xor
ljmp
xchg
inc
pushl
cmp
decl
jno
mov
push
inc
call
fwait
stos
inc
jle
sub
popl
or
sbb
repnz
cmp
test
mov
xchg
ret
inc
nop
pop
inc
jl
jp
das
sub
daa
mov
mov
addr16
inc
pusha
aam
add
inc
pop
sub
pop
add
stc
push
push
jb
inc
aas
hlt
je
bnd
inc
sub
jae
xchg
enter
jno
inc
outsl
jns
daa
adc
sub
movl
cmp
call
lock
call
jo
insl
enter
shll
inc
mov
add
js
andl
call
push
pop
mov
mov
xor
shr
fidivrl
cs
mulb
std
js
icebp
and
test
std
js
add
dec
sub
jle
in
jle
jmp
scas
jns
out
jo
fidivrs
sti
test
xchg
dec
jno
sub
mov
adc
ljmp
sub
xchg
jmp
cmp
mov
xor
shll
call
pop
xor
fnstenv
mov
je
icebp
xor
call
insl
add
filds
inc
hlt
add
add
and
shlb
sqrtps
jne
movsb
cmp
xor
jne
or
aas
push
call
icebp
repnz
jne
mov
jne
mov
enter
push
mov
dec
mov
jne
dec
repz
dec
or
enter
cli
lock
adc
jecxz
add
into
push
inc
or
xchg
repnz
inc
mov
or
mov
pop
push
cmp
jecxz
inc
pushl
icebp
pop
jle
fsub
adc
mov
adc
lock
inc
aas
cltd
in
aas
popa
add
mov
sub
decl
popa
or
push
sub
inc
aas
enter
add
leave
cld
jg
dec
sarb
jbe
fimull
inc
fadds
pop
leave
xlat
fnstenv
or
jbe
aas
cmp
aas
repnz
aas
aas
repnz
xchg
jbe
xchg
add
sub
pop
aas
push
mov
jge
out
lds
xor
out
push
jne
or
aaa
inc
aas
sbb
inc
cmpsl
jno
lds
ja
or
add
pop
cs
ds
loop
stos
mov
sub
pop
add
cli
jne
hlt
mov
std
scas
sahf
or
rcrb
jne
xchg
jge
jle
add
loop
pop
jne
test
jne
shll
pusha
xchg
xchg
or
mov
push
cltd
adc
lods
ss
and
xorl
sub
add
mov
add
add
jmp
xchg
dec
pusha
arpl
jne
sub
stos
push
cmp
scas
inc
loopne
xor
je
add
cmpsl
scas
ljmp
call
call
sub
out
jns
std
or
das
and
add
mov
and
mov
dec
out
imulb
jmp
call
call
add
add
loope
ljmp
cmp
call
leave
and
add
mov
les
mov
cli
push
cmp
push
pushl
int3
add
lds
arpl
movl
popa
test
push
popa
popl
rorl
ljmp
mov
rcl
call
inc
and
xchg
loopne
add
leave
mov
jne
sbb
mov
rorb
jo
cmp
lods
push
mov
jmp
push
push
push
add
xchg
incl
xor
cmp
cmp
inc
fldl2t
lods
sub
test
jb
jmp
enter
cmp
xlat
mov
pusha
jb
sbb
add
push
enter
or
cmp
jb
or
jne
cmp
jb
scas
test
or
inc
jbe
jp
cmp
and
mov
inc
xor
ret
aas
mov
xor
jb
cmp
ret
aas
js
jb
ret
cmp
push
and
jb
add
mov
cmp
cld
add
add
shll
notb
add
inc
mov
jmp
cmp
mov
fistps
mov
imulb
adc
cmpsb
sahf
add
jno
mov
leave
call
jle
insb
divb
jno
loope
sbb
dec
dec
jno
push
scas
leave
call
inc
out
xchg
idivb
and
scas
cmpsb
add
add
jno
adc
pop
push
jne
loope
jne
jmp
jmp
loope
notl
scas
call
ljmp
mov
std
mov
mov
decl
mov
mov
cltd
scas
std
decl
sar
into
pushf
cmp
mov
mov
mov
scas
inc
clc
iret
xchg
cld
call
scas
jae
mov
add
xchg
std
ret
orl
ljmp
scas
std
mov
test
addr16
les
andb
push
call
xor
pop
jle
cmp
sbb
or
sbb
decl
or
sub
mov
add
xchg
add
aaa
cmp
lret
push
shlb
loopne
add
scas
popa
add
jg
jg
ds
add
add
add
popa
inc
inc
xchg
testb
aas
lret
add
aas
fwait
add
fdivrl
hlt
push
sub
ljmp
or
call
aas
loopne
lret
jg
push
scas
inc
pusha
push
insb
sub
mov
cmp
not
outsb
pusha
inc
insb
or
orl
add
out
aaa
lock
stos
adc
sub
xor
das
fsubrs
mov
pusha
lods
push
outsb
jno
aaa
and
or
ss
aaa
mov
imul
nop
outsb
stos
and
push
jno
jbe
aaa
push
and
aaa
movb
outsl
inc
cmp
mov
jae
push
add
add
or
xchg
and
push
mov
jmp
jmp
cmp
mov
push
insl
fisubrs
insl
pusha
mov
dec
mov
jmp
sbb
cmpsb
cmp
arpl
pop
notb
mov
insl
add
insl
in
jmp
xor
repnz
xchg
and
push
sub
or
add
test
mov
call
xchg
shr
ret
jmp
int3
cmc
lcall
jae
bound
loopne
mov
call
mov
call
idiv
sbb
movsb
decl
mov
in
mov
call
cltd
fsub
testl
mov
fldenv
mov
add
into
adc
fcoml
mov
call
sbb
lock
mov
jne
arpl
std
pusha
add
xor
addr16
pop
decl
mov
cmp
lods
sti
daa
outsb
test
aas
test
or
dec
mov
mov
inc
or
mov
orb
pushl
add
inc
aas
subb
add
add
xor
call
or
pop
jle
stos
add
popa
cmp
jns
in
push
xor
jne
pop
inc
mov
cmp
mov
enter
add
divl
mov
out
jg
test
enter
jo
add
enter
imul
aas
fsubp
test
and
das
add
add
imul
or
out
xor
out
mov
jmp
and
push
aam
inc
mov
shrb
xor
scas
mov
mov
jb
xor
adc
mov
push
mov
loopne
jmp
push
pop
mulb
imul
ret
and
inc
ja
ds
stos
mov
add
or
movsb
adc
andl
mov
mov
subb
imul
aas
inc
in
leave
pop
sub
imul
cmpsl
shr
or
push
fisttpl
inc
jmp
mov
aad
sahf
insl
loopne
xor
add
cmpsb
mov
or
dec
cmp
add
push
les
lds
out
adc
std
jne
int
mov
pop
lds
add
test
je
dec
jo
xlat
les
sub
pushl
mov
xchg
pushl
int3
xor
adc
in
mov
out
pushl
int3
pop
int3
xchg
mov
push
add
add
pop
inc
aas
pop
sar
sub
or
addl
std
jmp
and
out
das
jne
pop
xor
inc
pop
xchg
or
lret
orb
push
lcall
xor
pushl
xlat
das
call
mov
cmp
cmp
mov
repnz
cld
add
add
cld
add
or
xor
test
xor
xor
mov
mov
stc
dec
xor
push
xor
cwtl
data16
das
cmpsl
jne
xor
ja
sarl
out
sbb
nop
pop
xor
mov
pusha
lock
int
movl
dec
addr16
fwait
aas
enter
addr16
sti
sbb
das
xor
add
sub
and
bound
call
pop
loopne
not
cwtl
enter
mul
mov
call
iretw
pushf
out
add
add
fdivrl
mov
clc
push
cmp
or
inc
jg
mov
je
xor
ret
in
std
mov
mov
sarl
sbb
into
call
pusha
xchg
jmp
inc
outsb
and
adc
jmp
xor
pop
push
pop
gs
sar
adc
or
pusha
imul
ss
push
popa
jmp
and
in
inc
add
or
fisttpl
sarl
incb
stc
inc
out
pop
pop
int3
push
mov
push
call
fldenv
cli
call
out
divb
add
int
push
or
sahf
std
lcall
nop
cli
push
jmp
gs
in
enter
test
leave
add
mov
leave
lds
mov
add
aas
imul
dec
inc
hlt
out
test
xor
idiv
xchg
mov
xchg
popf
leave
add
es
add
mov
sub
cmpsb
add
add
aad
out
repz
enter
or
sub
sub
xchg
pop
arpl
cwtl
enter
stos
sar
fwait
xor
sbb
jne
inc
push
movsl
jo
jns
pop
std
sub
aad
lcall
sahf
xor
dec
movsl
mov
push
scas
gs
cmp
test
sub
xor
and
das
cmpsl
jno
out
sarl
adc
add
add
sub
clc
fdivr
out
enter
lock
in
or
sub
je
sub
arpl
sub
inc
insl
sbb
cwtl
aas
jae
fwait
xor
sub
sbb
jg
cmp
cmp
add
aas
jae
fwait
dec
ljmp
xor
arpl
cmp
cmp
aas
jbe
add
push
pop
aaa
sub
stos
mov
arpl
xor
sbb
sub
sbb
pop
mov
arpl
sbb
mull
xor
pop
out
arpl
sarl
nop
dec
and
je
sub
mov
cmp
ret
in
std
mov
fwait
sub
sahf
mov
mov
sub
clc
call
sbb
add
add
add
imul
adc
nop
push
mov
call
js
add
popa
nop
cs
and
ret
icebp
cmp
mov
in
out
add
lods
sar
jne
mov
xchg
loop
jmp
mov
mov
inc
inc
out
ds
loope
add
lds
sbb
push
mov
add
add
mov
xchg
pop
addb
popa
pop
inc
xchg
mov
pop
add
std
push
cmpsb
cmp
push
dec
add
push
call
sahf
cmp
push
dec
popa
sbb
call
aas
or
xchg
outsb
iret
inc
aas
cmp
enter
or
push
add
add
sbb
aam
aas
outsl
sbb
aas
mov
jecxz
mov
outsl
sbb
aas
lahf
daa
jne
inc
pop
enter
rcr
dec
sub
ds
sub
jae
inc
mov
insl
push
in
push
dec
hlt
mov
sbb
cli
out
mov
daa
jne
or
sub
es
add
add
sti
and
push
sub
icebp
lret
int3
jg
push
out
cltd
adc
sbb
pop
out
sub
inc
ret
loopne
jmp
scas
cmp
es
les
cld
mov
decl
into
mov
imul
ret
rorl
int3
ss
enter
iret
lds
enter
pop
call
aas
enter
pop
out
aas
repnz
inc
icebp
out
cmp
pusha
clc
mov
es
je
addr16
add
dec
add
or
jne
and
lock
mov
dec
jo
mov
pop
push
jb
dec
test
and
cmp
xchg
mov
pop
mov
mov
addr16
scas
pusha
repnz
fldl
inc
jmp
add
add
adc
data16
pop
pop
mov
jbe
pop
data16
data16
push
negb
pop
je
xor
mov
add
scas
std
decl
push
mov
cmc
lcall
jae
fsubs
call
push
inc
jge
cmpsl
leave
std
mov
scas
std
fstps
or
mov
dec
jmp
add
imulb
lea
std
mov
scas
std
fstps
dec
push
call
or
sub
cmc
mov
pop
popl
inc
mov
jmp
push
aas
pop
sbb
test
daa
mov
je
add
in
shlb
scas
es
xchg
inc
lret
inc
aas
mov
call
add
ffree
es
mov
push
icebp
push
add
jmp
add
outsl
cmpl
aas
outsl
add
mov
cmc
cmpl
add
fnstcw
xchg
mov
in
mov
push
push
sbb
aam
and
mov
sub
pusha
scas
inc
jo
mov
push
outsl
arpl
inc
shr
sbb
add
std
aas
aas
and
sub
cmp
mov
pop
pop
outsl
repz
pop
and
fnstcw
pop
and
lock
call
push
call
mov
jle
push
xlat
and
cwtl
into
scas
cmp
mov
enter
jo
mov
push
lahf
and
jne
mov
pop
mov
sbb
cmp
add
add
add
mov
adc
jmp
dec
shll
inc
arpl
pop
pop
pop
jl
push
cs
aad
es
pop
push
cltd
pop
testb
jo
and
movsb
and
int3
hlt
sbb
je
jo
outsl
inc
enter
enter
inc
pop
push
shll
add
mov
aas
jmp
jp
lcall
jo
mov
add
ret
cmpsb
jae
mov
cmpsb
jae
icebp
inc
push
call
pop
add
sbbl
imul
pushf
lcall
sar
push
cmp
dec
daa
test
lret
add
add
lds
outsb
stc
pop
inc
cmp
mov
data16
inc
push
call
scas
sbb
jne
dec
cltd
pop
adc
jo
inc
add
mov
push
push
jne
dec
push
sub
repnz
cmp
pop
push
mov
stos
cwtl
pop
add
add
or
adc
or
stos
aam
incl
lods
add
addl
sti
enter
xchg
repz
inc
in
add
xor
adc
js
sbb
aas
outsl
add
cli
adc
pop
aas
enter
out
out
mov
out
cli
push
cmp
jo
jle
jo
std
pop
push
or
aas
int
cwtl
add
add
outsl
xchg
add
enter
push
call
rcl
push
aas
mov
js
xchg
pusha
das
and
psraw
pop
pop
and
popa
jne
clc
push
jne
fistps
and
enter
pop
out
rcr
jmp
lods
aaa
xlat
and
push
push
add
pusha
and
test
add
scas
pop
fisttpll
mov
sahf
add
add
push
imul
arpl
cmp
jns
push
jbe
ret
call
jo
pusha
negb
loop
shrl
aas
jmp
pop
push
mov
pusha
inc
push
pop
push
mov
es
ljmpw
imul
cmc
and
popf
decb
test
inc
push
incb
cli
push
call
add
and
or
dec
aaa
incb
jns
test
icebp
mov
subl
cmc
jmp
jmp
add
mov
add
data16
mov
ja
mov
pushl
mov
or
add
call
repz
mov
cmc
lcall
mov
xor
call
outsb
mov
pushl
xchg
cmc
jmp
rcrl
fdiv
mov
pushl
call
mov
mov
jne
ja
xchg
mov
push
pop
jmp
ss
in
mov
pop
call
jo
sub
push
ficomps
call
test
mov
negb
jmp
mov
add
push
pop
aam
xchg
push
call
sbb
adc
adc
cwtl
pop
pop
data16
clc
lds
call
ljmp
xor
sbb
rol
pop
and
into
push
aas
jg
adc
sti
bound
mov
sbb
sarb
cli
push
adc
push
call
ret
js
adc
sbb
add
add
out
mov
aas
enter
mov
pop
sbb
inc
pusha
sbb
xor
enter
dec
sub
jno
roll
test
xchg
inc
pusha
xor
hlt
aas
aad
js
call
ret
add
mov
aas
jmp
cmp
push
inc
test
aas
jmp
cmp
pop
repnz
add
faddl
dec
fsubrl
pop
arpl
bound
xchg
add
sbb
imul
fisttpll
xorl
pop
add
push
or
cli
jl
ds
push
repz
leave
jae
xor
cld
es
call
mov
jg
in
std
mov
push
dec
cmp
incl
add
pop
mov
std
mov
mov
jne
scas
jae
jle
xchg
incl
push
jne
adc
lods
jae
jle
xchg
jmp
sbb
jne
lods
jae
ss
jae
mov
adc
add
push
call
sub
xor
add
mov
jae
mov
mov
lret
pop
or
stos
inc
in
ljmp
sahf
lret
mov
mov
jb
sub
push
sbb
std
add
push
xchg
call
or
xor
jge
pop
mov
mov
imul
pop
jmp
rorb
aas
add
inc
push
inc
je
jbe
pop
clc
mov
popl
add
xor
and
mov
arpl
shrb
mov
sub
cltd
nop
or
sub
or
push
add
daa
sub
movsl
aas
mov
sub
hlt
test
xchg
mov
inc
mov
jb
xor
test
sub
pop
mov
pop
sarl
xor
sub
mov
fisubl
sbb
or
jl
fadds
aas
enter
jecxz
ret
jecxz
aas
enter
aad
mov
cmp
add
je
es
adc
push
push
aad
add
decb
inc
cmp
enter
jmp
sbb
or
cmp
icebp
test
add
ljmp
pop
and
add
mov
out
ljmp
mov
clc
push
aaa
sub
mov
loope
ret
sbb
stc
loope
leave
sub
aam
cmp
loop
sarl
add
cmp
std
aam
loope
add
call
or
sub
mov
mov
lcall
imul
add
out
push
push
cmp
push
push
sbb
out
xor
fisttpll
je
movsl
mov
sub
sub
std
ret
pop
mov
adc
arpl
call
std
jne
mov
push
call
call
mov
or
clc
insl
or
jmp
repnz
leave
cmp
call
call
mov
mov
inc
aas
out
mov
add
add
idivl
sbb
out
or
adc
std
lock
fsubr
xor
call
fcom
sbb
vunpckhps
push
pop
scas
decb
sub
jl
mov
jge
add
jae
jge
gs
and
sub
pop
push
dec
pop
jne
inc
addr16
push
add
dec
inc
xchg
pop
add
call
nop
cmovs
cmc
pushw
cmp
out
leave
push
nop
cmp
or
aas
inc
push
sbb
pop
cmp
fstl
xchg
mov
mov
nop
inc
dec
popf
or
fimull
loopne
jge
data16
cmp
jno
dec
out
xor
or
lcall
test
bound
mov
add
aas
dec
xor
adc
adc
sub
lahf
adc
cmp
shr
sub
jg
repnz
mov
std
hlt
cmp
icebp
fs
dec
aas
push
icebp
mov
sub
dec
push
jb
inc
lds
repnz
mov
mov
call
push
shlb
js
dec
mov
and
add
cmp
inc
fnstsw
pusha
aaa
call
push
enter
cmp
je
xor
adc
xor
bound
jl
cmp
and
ret
jmp
insl
lret
data16
arpl
jg
pop
std
jne
sahf
add
movl
add
movl
out
add
add
lcall
push
cmp
call
aas
inc
add
out
inc
adc
outsl
je
popf
xchg
mov
sahf
ret
add
cmpsb
std
inc
hlt
xchg
movb
flds
add
pop
mov
lea
push
lcall
pushl
scas
aas
xor
and
add
or
idivl
push
loope
lret
jne
add
cmp
out
aas
imul
stos
out
jne
pop
ds
and
adc
add
decl
xchg
xchg
out
add
adc
lock
call
loopne
push
call
rcl
adc
mov
adc
jo
adc
ret
pushl
jmp
imul
mov
add
adc
sbb
add
aas
enter
pusha
out
jne
dec
xchg
cwtl
fs
xor
decl
fs
dec
dec
ja
loop
stos
repz
jb
mov
rcr
sbb
cmp
movb
xchg
adc
add
enter
mov
cvtdq2ps
push
jmp
enter
xchg
inc
pusha
mov
rorb
mov
gs
add
aas
aam
test
dec
ljmp
shl
dec
ds
jle
stos
orl
dec
clc
std
sbb
pusha
or
dec
dec
adcb
je
pop
or
add
add
cmp
stos
inc
dec
sub
int
push
mov
clc
mov
and
push
lods
inc
cwtl
std
mov
xor
cs
mov
aas
push
push
add
add
iret
call
pusha
add
lods
inc
cwtl
push
das
mov
out
cmp
or
jae
mov
in
add
push
call
std
jne
fdivs
jle
sti
lcall
fnstenv
mov
dec
jl
pop
or
sub
ret
or
movb
xlat
jae
mov
incl
add
add
orb
add
xchg
add
push
lret
pop
leave
and
decb
inc
out
pop
fdivr
mov
loop
add
lret
into
loop
nop
leave
cmp
pop
add
add
mov
mov
or
sbb
mov
js
repnz
cmp
push
lea
imul
push
push
push
cli
dec
mov
sarb
sbb
inc
mov
jg
aaa
orb
aaa
xchg
dec
sti
and
imull
xchg
pop
pop
mov
out
je
add
cmpl
xchg
insb
mov
dec
cmpl
xchg
pusha
push
mov
inc
aas
ds
out
cmpsl
jno
pushl
out
xchg
add
out
adc
rcl
add
adc
out
enter
add
sbb
out
xor
adc
fadd
out
cltd
inc
adc
push
dec
inc
cmc
adc
jecxz
xchg
pop
outsl
push
xor
dec
mov
xchg
xor
inc
xor
adc
add
inc
das
cwtl
in
leave
jb
inc
pop
cwtl
fsubrs
icebp
jb
inc
sahf
adcb
xchg
add
add
cmc
std
mov
inc
mov
inc
push
jb
dec
mov
inc
xchg
sbb
mov
cmp
xchg
push
test
inc
mov
jmp
loop
mov
jmp
xor
add
inc
incb
dec
mov
xor
jmp
lock
rcrb
int3
out
cmp
iret
call
dec
xchg
mov
aam
or
xor
incl
test
sbbl
decl
dec
mov
movl
inc
ja
mov
sar
fisttpl
pushl
add
add
mov
std
inc
adc
add
mov
dec
leave
adc
push
je
arpl
sub
in
dec
inc
fsubp
jns
or
aas
fs
jmp
mov
inc
jl
imul
add
call
xor
nop
add
lods
add
aas
adc
incl
mov
inc
add
add
xor
jne
pop
mov
xor
jne
dec
xchg
xchg
dec
dec
js
jge
or
lret
push
popl
xchg
sub
mov
xchg
daa
sbb
adc
or
adc
jns
sub
or
jb
testl
fdivs
mov
inc
push
lock
js
out
xor
jmp
lret
inc
out
or
add
bnd
or
inc
xlat
mov
inc
push
cld
mov
xor
js
cmpb
or
inc
pop
inc
popa
inc
lahf
sbb
mov
filds
inc
jnp
or
inc
sub
enter
jg
or
xor
inc
inc
enter
inc
sub
add
inc
ret
aaa
inc
inc
add
cmp
mov
add
call
dec
cmp
scas
lret
out
inc
enter
xchg
aas
jmp
sbb
dec
mov
pop
cmp
add
dec
ss
call
insb
clc
add
std
je
inc
cmpsb
inc
push
test
inc
sub
jmp
cmpl
adc
cmp
or
jmp
add
add
aas
mov
jo
inc
add
cmp
jne
fdivl
arpl
inc
sub
arpl
dec
xchg
lret
call
or
add
int
xchg
ret
std
lea
test
add
inc
xchg
shlb
outsb
inc
xchg
mov
sar
push
jle
xchg
lcall
sar
push
add
add
rcrl
mov
mov
push
lcall
scas
pop
inc
push
shlb
aas
sbb
out
mov
call
inc
jb
clc
stos
jle
icebp
cmc
or
mov
loopne
sbb
push
xor
test
and
or
mov
ja
xor
mov
cs
call
ja
or
cld
jns
add
add
pushf
add
push
psraw
pusha
gs
leave
jge
add
mov
add
pop
mov
jns
sub
add
xchg
rorb
adc
push
lcall
inc
pop
clc
mov
push
push
aas
pop
call
movsl
pop
test
enter
xchg
push
adc
add
and
repz
sub
xchg
fwait
rcrl
cld
mov
xor
mov
and
js
pop
cmpsl
inc
mov
loope
sub
ret
pop
shll
jo
xchg
mov
mov
sbb
cmp
daa
xchg
add
cmp
inc
loopne
add
cmp
add
lea
mov
add
add
lea
cmp
ss
jne
lods
movsb
xchg
lds
cmp
call
add
dec
incb
push
int
cmp
or
mov
or
push
cmp
lds
mov
rol
add
addr16
insb
push
enter
cmp
cmp
add
sub
add
add
es
imul
fcoms
stos
fdiv
pushl
pushl
lds
jle
ja
out
mov
add
push
mov
pop
hlt
mov
jns
sub
sbb
cmc
call
les
out
and
inc
xchg
les
cmp
xchg
std
mov
add
fcmovnbe
cmc
call
std
add
cmp
aas
xor
idivl
inc
add
mov
mov
mov
mov
jmp
jo
call
lcall
mov
sar
lock
add
out
stc
add
xlat
ret
jbe
fsub
mov
dec
rorl
mov
push
jns
mov
add
mov
add
jne
sbb
xchg
xchg
jp
aas
es
and
clc
aas
xor
add
clc
incb
out
in
adc
test
sti
xor
sbb
mov
ja
and
sbb
aas
enter
ret
push
in
cmp
imul
clc
mov
jmp
push
aas
add
xor
add
add
fcomps
pop
add
cmp
cwtl
lret
cmp
outsb
aas
scas
out
repnz
add
pop
js
nop
dec
gs
xchg
cmp
add
sub
add
sub
in
movsb
add
mov
jmp
pop
fs
sahf
push
mov
rclb
jnp
dec
lahf
xchg
jbe
and
outsb
cmp
add
and
mov
cmp
jnp
lcall
idivb
cmp
cmpsl
mov
cmp
jp
push
push
and
push
cmp
mov
xor
fs
xor
out
cmp
flds
lret
std
add
int3
call
jmp
xor
ljmp
std
inc
add
add
std
jne
and
jne
int3
mov
mov
int3
push
cltd
mov
lcall
lret
in
mov
mov
std
jne
and
mov
leave
push
jmp
mov
jae
dec
pop
std
ljmp
lret
push
push
ret
call
push
add
add
ret
aas
mov
add
mov
pop
pusha
jle
arpl
filds
cmp
fmull
negb
cmp
add
stos
cmp
int3
mov
add
std
and
push
les
rorb
add
les
aas
and
mov
aas
jno
jne
fsts
rcr
push
add
add
and
mov
aas
push
add
leave
inc
mov
and
out
ja
lock
inc
les
in
jns
and
dec
pop
mov
cltd
dec
ss
push
aaa
sbb
pushl
mov
popl
xchg
xor
jns
and
lea
ss
cmp
mov
or
add
leave
xchg
test
aas
enter
adc
jns
and
jb
enter
dec
and
dec
xlat
ljmp
repnz
ds
add
cltd
mov
add
adc
pop
sub
mov
call
bnd
arpl
aad
aas
jmp
jl
push
sahf
daa
inc
pop
sub
xchg
jp,pn
add
add
add
xchg
aas
jmp
aaa
mov
sub
and
sarl
lcall
pop
pop
test
xor
add
rorl
push
xchg
aas
jmp
or
and
sbb
pop
add
enter
enter
inc
ret
pop
pop
pop
push
add
int3
add
xor
decl
add
push
inc
ret
fdivrl
daa
int3
lds
push
enter
fwait
mov
movsl
add
push
lods
mov
or
mov
adcl
add
ss
int3
sub
std
mov
jle
fadds
add
mov
mov
mov
ret
dec
cmpl
decl
lea
sub
ret
add
arpl
dec
or
insb
push
add
jle
add
mov
jo
xchg
push
ljmp
not
leave
shll
sub
inc
fcoml
pushl
and
adc
ljmp
pushl
mov
addr16
arpl
dec
pop
push
mov
clc
push
add
jb
cld
adc
push
inc
add
add
jnp
lea
int3
out
push
aas
test
call
pop
mov
mov
push
nop
mov
jmp
cmp
insb
inc
outsl
xchg
adc
or
insl
xor
pop
inc
push
inc
aas
stos
pop
jbe
lock
les
mov
rclb
mov
outsb
jno
add
aaa
xor
lea
out
cld
shlb
aas
ljmp
cmp
add
dec
call
repnz
mov
add
cs
call
bnd
add
add
std
je
and
in
xor
test
dec
enter
xchg
push
xor
xchg
mov
mov
jp
add
add
push
orl
or
insl
inc
add
mov
sbb
or
das
scas
pop
test
inc
or
insb
cmpsl
movl
add
popf
adc
std
jne
cs
andl
rcrb
std
jne
cs
andl
clc
ret
jmp
add
add
lock
push
cld
lret
std
jne
and
jns
or
imul
or
add
lock
call
pushf
mov
xchg
ret
ljmp
inc
call
jecxz
push
call
aas
fidivrs
add
pop
out
fsubs
add
aas
and
push
mov
shrl
add
and
mov
inc
add
mov
add
sbb
mov
sbb
push
push
out
add
inc
popa
outsb
dec
out
popa
inc
aas
or
push
xor
in
out
rolb
adc
test
sub
push
pop
enter
enter
cmpsl
test
add
add
mov
jmp
mov
push
lods
mov
sub
ret
sub
call
mov
xor
jmp
sub
testl
pop
rcl
imull
push
lock
pop
jno,pn
arpl
in
dec
mov
call
add
outsl
xchg
jno
and
add
add
xchg
cs
or
or
insl
adc
hlt
or
je
in
test
je,pn
lock
inc
mov
mov
push
cmpsl
inc
shlb
es
call
push
lcall
add
sti
movl
stos
dec
enter
lcall
dec
inc
inc
add
add
adc
add
xor
or
dec
dec
cmp
mov
mov
cmpsl
cmp
jmp
dec
std
or
popf
or
aam
push
insl
and
std
jne
and
mov
or
fwait
pop
leave
and
add
mov
call
or
add
pop
push
add
adc
lret
fsubr
push
cmp
add
fstpt
dec
decl
loop
decl
cmpsb
ret
gs
xor
jne
sbb
shlb
add
xchg
testb
movb
aas
ljmp
adcb
out
fsincos
pop
jle
ljmp
or
addr16
add
xlat
jne
add
jno
je
sbb
dec
add
add
add
es
shlb
ss
push
ret
add
es
je
fidivrl
add
add
aas
and
cmc
push
xchg
add
add
add
aas
and
push
cmp
enter
sub
sti
inc
adc
imul
sub
mov
jmp
popf
out
add
add
fistpll
out
clc
test
aas
enter
out
mov
mov
lods
jmp
enter
push
jmp
jmp
mov
mov
sub
cmpsl
out
aas
and
aas
enter
je
lods
ret
lret
sti
pop
in
aas
enter
enter
pop
in
js
inc
cmp
shll
add
add
add
inc
add
cmp
jl
ss
add
adc
add
sub
cmc
test
jmp
enter
add
enter
test
jmp
xchg
add
cmp
lds
add
enter
test
push
es
cli
mov
jo
or
je
and
testl
add
xchg
sub
fisubrs
inc
lods
mov
enter
xchg
push
call
push
mov
jne
or
outsb
push
lds
shlb
push
call
mov
jne
or
or
add
push
call
cmpsb
mov
jne
or
jmp
adc
pushl
mov
xor
fs
inc
xor
mov
insl
add
add
aas
pop
cld
mov
xchg
push
insb
aas
pop
push
dec
data16
xor
lods
out
je
cmp
insb
aas
xor
xchg
insl
push
dec
lock
xor
mov
mov
mov
add
add
fisubl
xchg
out
decb
out
je
jns
add
out
je
divb
cmpsl
test
mov
out
out
nop
movsb
shl
lods
out
incb
lods
out
jo
pop
enter
lock
daa
pop
mov
sahf
arpl
push
daa
cmp
lock
xor
test
cvtps2pi
ds
movsb
jg
add
add
mov
lock
adc
loopne
enter
pushf
out
jnp
jmp
xchg
adc
fsubs
out
mov
add
enter
das
leave
xchg
pusha
pop
lock
sbb
test
pushf
add
xchg
int
out
pusha
and
sbb
push
inc
fpatan
das
das
arpl
add
pusha
and
push
orb
jmp
pop
pop
jmp
adc
jmp
xchg
sarl
addb
adc
push
push
pop
in
je
je
dec
test
and
test
shlb
or
lods
xchg
aas
jmp
pop
dec
push
and
test
imul
add
add
dec
sar
ss
call
adc
popa
ss
dec
jno
pushl
imul
test
xor
call
and
add
loope
add
push
leave
add
stos
dec
jmp
dec
inc
sub
test
dec
push
int3
call
or
lret
add
push
inc
sar
lea
js
call
add
add
jg
add
mov
call
test
mov
imull
decl
sti
fldcw
inc
dec
add
repnz
popf
mov
jo
push
adcl
mov
in
dec
pop
jbe
xor
add
mov
and
out
scas
jmp
add
aas
pushf
inc
sub
lods
mov
clc
lcall
cmp
inc
push
fadds
rclb
add
lcall
push
mov
push
call
mov
and
push
cmpsl
push
in
mov
add
xor
push
js
xchg
push
in
pusha
inc
push
popa
xor
icebp
mov
in
xchg
pop
in
inc
xor
pop
aas
enter
add
lods
repnz
inc
ja
out
stos
mov
xchg
in
lret
pop
mov
or
inc
mov
pushf
xlat
in
imul
in
jae
dec
jle
and
adc
pop
xchg
in
leave
and
push
enter
lds
mov
lcall
jmp
dec
cmp
setge
add
scas
fbld
mov
notb
add
cmp
push
fimuls
sub
push
push
cmpl
mov
and
mov
int
adc
iret
rcrb
int
adc
jp
std
hlt
dec
xor
in
xor
and
mov
mov
in
push
push
dec
mov
std
add
sub
call
or
incb
add
pop
sub
cld
ljmp
add
imul
pushl
jne,pt
add
mov
js
call
lahf
or
add
mov
pushl
jne,pn
fsts
dec
or
add
jmp
incl
sbb
jae
decl
cmpsb
xchg
add
or
add
adc
add
add
aas
es
jb
shll
jmp
dec
ja
mov
add
imull
call
xor
mov
xor
sbb
lods
ret
and
mov
and
or
ljmp
mov
negb
cs
ss
inc
in
addr16
add
add
outsb
test
and
in
out
add
enter
xor
clc
add
add
clc
adc
addr16
add
call
enter
dec
pusha
push
inc
inc
mov
enter
dec
pop
add
inc
pusha
add
enter
mov
push
xchg
jg
add
shll
jo
pop
popf
jmp
pop
filds
aas
pop
jge
loopne
scas
inc
aas
mov
dec
inc
xchg
scas
out
inc
or
xchg
iret
pop
add
add
mov
dec
inc
push
fdivl
pop
jmp
hlt
and
lahf
call
aaa
dec
rcrb
mov
lods
add
insb
lds
imul
xchg
adc
lcall
push
in
orb
cmovbe
mov
je
test
cs
and
sub
sbb
scas
sarl
iret
addl
add
xchg
sbb
jmp
neg
pop
jmp
out
pop
jmp
into
sbb
aam
push
inc
scas
mov
je
add
scas
sbb
stos
pop
push
push
jb
dec
lds
mov
add
in
or
cmp
push
sti
mov
roll
ljmp
push
dec
mov
jno
mov
call
and
cwtl
sbb
stos
rcll
push
dec
call
es
es
ds
push
add
jne
add
jno
out
icebp
and
push
push
dec
jg
icebp
fwait
inc
clc
orl
ljmp
and
fstpt
into
add
xor
jno
add
hlt
incl
add
lock
sbbb
add
pop
add
jns
rcrl
je
lea
mov
add
insl
add
add
or
fidivrl
or
out
arpl
repnz
je
outsb
in
pop
jnp
dec
push
ficompl
dec
cmc
jecxz
lret
repnz
popa
fcomps
add
add
fucomp
out
addb
leave
sbb
sbb
sbb
adc
jne
fdivrs
sbb
add
in
outsl
aaa
xor
fcomps
jno
roll
in
imul
inc
in
js
aas
enter
mov
xchg
mov
arpl
jg
pop
mov
in
mov
jne
pusha
jo
in
add
popa
mov
arpl
dec
dec
fisttps
sub
mov
dec
mov
insb
adc
pop
enter
sbb
repz
jecxz
ret
in
cmp
mov
fistpl
imul
in
and
jecxz
mov
dec
incb
pop
jne
or
call
mov
adc
loop
mov
push
jmp
sbb
adc
std
mulb
call
fs
or
call
add
scas
push
pusha
les
inc
addl
repz
dec
inc
push
daa
jne
mov
lods
pop
pusha
pop
les
addl
aad
aas
out
ret
add
push
and
std
decl
aaa
test
clc
and
push
push
imul
es
imul
decl
add
ret
dec
ljmp
stos
add
es
ds
ljmp
inc
cld
mov
les
add
das
add
xor
add
cmpsb
mov
cmpsl
outsl
bound
mov
pop
add
add
push
lahf
lock
xor
dec
inc
aas
inc
pop
or
mov
loopne
les
das
push
pop
jo
push
push
sub
pop
or
stos
mov
mov
int3
add
loop
cld
mov
or
cmpsl
xor
incb
xchg
in
addb
add
sub
addr16
and
sbb
add
add
in
jne
mov
add
enter
pop
mov
or
enter
lods
out
xchg
repnz
inc
aas
mov
call
out
xor
std
or
sub
loope
mov
iret
mov
mov
imul
add
lret
mov
add
cltd
inc
fsts
xor
add
add
fucomip
dec
xchg
push
loope
or
add
inc
add
pop
push
imul
push
xor
mov
push
push
mov
push
add
jg
add
cmp
add
ljmp
cmp
lods
add
sbb
cmp
push
jbe
scas
dec
sub
pop
je
aam
cld
pop
fildll
push
sbb
add
adc
add
mov
xchg
es
inc
test
sahf
adc
fs
inc
sub
dec
inc
jns
push
add
add
fisttpll
push
mov
call
mov
push
inc
mov
std
xor
scas
lock
rol
shlb
es
add
cmc
je
mov
and
jnp
cmc
add
popa
inc
cmpsb
mov
std
xor
decb
jl
popa
rol
aas
fsubrl
xchg
es
inc
aas
dec
fbstp
lret
push
ljmp
and
je
neg
ja
test
inc
pop
cmp
xchg
mov
xchg
mov
mov
inc
or
inc
pop
push
sbb
mov
pop
loopne
push
fcoms
or
mov
pop
pop
inc
cltd
sbb
add
mov
inc
inc
aas
lahf
push
add
insb
push
push
pusha
add
andb
enter
mov
jmp
dec
pop
fiadds
mov
nop
pop
fiadds
add
fucomip
ljmp
frstor
fldl
jmp
push
xor
push
frstor
adc
scas
push
lret
cmp
adc
xchg
lahf
cmp
aas
jge
lock
sahf
out
and
std
or
adc
fmul
inc
lods
fbstp
bound
mov
shl
push
cli
lahf
xchg
inc
add
add
add
rcrb
adc
mov
lret
mov
push
icebp
mov
incb
mov
std
out
enter
enter
adc
test
add
scas
add
mov
xor
and
push
loop
pop
aas
add
add
push
packssdw
push
in
hlt
inc
and
and
add
fbld
fs
jmp
clc
xchg
std
add
mov
call
push
jle
add
sbb
push
call
mov
call
pop
jl
call
mov
dec
xchg
movl
les
mov
je
push
in
flds
cld
jle
add
cwtl
movsb
mov
push
int3
push
call
call
jmp
stc
jne
sbb
enter
push
mov
ret
lds
aas
jp
or
cwtl
aas
cld
daa
pop
add
roll
xchg
pusha
push
push
push
pusha
add
repnz
ljmp
pop
jmp
xlat
fsubl
aas
aaa
pusha
push
or
add
add
repnz
or
repnz
ljmp
push
jmp
push
mov
mov
xchg
pop
mov
fnstenv
add
push
fistl
lods
shll
cld
scas
mov
push
flds
aas
pop
rcr
mov
sahf
out
jp
out
iret
adc
add
ljmp
pop
aas
jnp
out
or
adc
out
fs
imul
xor
jge
in
decb
adc
and
push
add
por
aas
andnps
xchg
push
inc
mov
push
enter
mov
imul
ja
push
aaa
enter
add
stos
iret
jnp
je
push
push
sarl
je
add
add
pcmpeqb
ja
push
fs
push
cs
dec
add
cmp
mov
dec
push
sub
push
subl
jbe
or
call
cmp
adc
mov
or
jns
std
xor
push
ss
outsb
add
mov
dec
je
adc
cmp
inc
adc
cmp
stos
add
add
push
push
add
add
sub
lea
negb
add
jge
pushl
lds
xchg
lret
in
popf
cmc
push
lock
jecxz
stc
xor
dec
jmp
std
call
push
push
cmp
push
idiv
push
xor
cld
adc
incb
mov
mov
add
add
js
decl
pushl
jne
and
jmp
testb
inc
ljmp
mov
std
rcrb
rorl
mov
jle
push
les
mov
aad
adc
sub
decl
inc
mov
add
outsl
mov
add
push
or
mov
mov
jns
repnz
and
das
or
mov
dec
and
pop
jb
jb
not
imul
loopne
popl
orl
loope
andl
or
icebp
mov
pusha
aad
or
xor
insl
and
inc
enter
or
or
add
mov
cs
jns
repz
insl
out
mov
imul
js
push
dec
or
jnp
dec
or
out
inc
xchg
xlat
mov
iret
mov
cs
iret
dec
inc
or
aad
or
cmp
and
cmovae
inc
cmp
xchg
or
js
call
mov
or
pop
jb
add
add
add
aad
jne
push
mov
or
fsubl
cltd
imul
adc
or
jmp
test
mov
dec
mov
and
cmp
lds
out
sub
jmp
adc
add
cmp
lds
incb
stc
movb
push
dec
test
shl
out
add
dec
les
call
inc
test
push
hlt
push
pop
mov
testl
pushl
repz
mov
std
jne
repz
inc
and
repz
push
and
add
xchg
inc
mov
add
push
add
lds
data16
in
mov
push
inc
test
dec
idiv
push
add
add
add
inc
mov
aam
ljmp
cmpsl
hlt
arpl
pushf
xchg
add
rorb
mov
add
pushf
les
bound
add
mov
add
xchg
xor
lret
add
pop
add
pop
sbb
insb
xchg
mov
das
add
es
popf
cmovno
add
add
add
mov
shll
pushf
in
dec
or
mov
or
dec
mov
out
ret
out
shlb
js
add
movsl
enter
inc
enter
sbb
push
xchg
inc
aas
mov
adc
fcmovu
or
ror
xchg
xlat
rorb
pop
fcom
mov
addr16
test
pop
rolb
add
cwtl
xchg
mov
aas
sbb
inc
cwtl
mov
push
inc
fidivrl
das
pop
dec
or
jno
pop
fistpl
pop
rcrb
cld
fsts
adc
out
jle
add
ja
in
push
aaa
push
out
aam
sti
push
enter
jl
das
aam
or
test
xor
sbb
jge
xchg
insb
push
sahf
inc
adc
xchg
repnz
aas
ds
shr
enter
dec
clc
fstl
stc
sub
jl
push
dec
mov
in
mov
cmp
inc
and
adc
sub
sub
je
mov
push
mov
cmp
sbb
add
std
jne
movsb
push
out
mov
mov
add
add
add
mov
pusha
js
pop
mov
test
sbb
dec
mov
inc
pop
xor
call
int
je
pop
mov
andl
call
lds
cmp
adcl
inc
push
sbb
loope
mov
stos
inc
popl
sbb
rorl
mov
push
lock
add
add
xor
push
lret
dec
movsl
lock
add
mov
les
std
inc
dec
jle
cli
mov
mov
mov
ljmp
push
dec
int
add
out
into
je
push
pop
mov
dec
repz
add
dec
out
jae
test
mov
stos
or
add
and
decb
add
roll
sbb
jnp
mov
mov
xor
mov
inc
aas
jb
pop
aas
jo
popa
inc
paddusw
aam
les
add
jae
lret
mov
xor
jnp
into
outsb
in
ret
xor
add
enter
fiadds
clc
mov
jnp
call
dec
out
scas
out
add
add
or
call
jp
push
movsl
mov
add
into
adc
inc
xor
shll
pop
adc
mov
jae
mov
mov
fiadds
jmp
bnd
or
mov
enter
inc
mov
enter
jge
push
in
out
repnz
xor
jmp
adc
add
cmp
subl
jl
xchg
cs
add
testl
xchg
sbb
fscale
hlt
js
push
icebp
in
add
push
and
cmp
add
movl
xchg
test
add
sub
leave
add
push
lcall
es
or
sub
rolb
dec
addr16
add
mov
dec
cmp
add
dec
loope
out
lds
movb
or
out
add
pop
mov
push
imul
jecxz
xchg
call
mov
jmp
icebp
cld
sbb
add
mov
insl
lahf
pushl
js
imul
pusha
lock
shlb
shl
jl
dec
pop
imul
fstps
xchg
out
add
pop
outsl
roll
mov
addr16
inc
add
mov
movb
js
out
pop
add
pop
add
out
js
iret
mov
inc
add
push
sub
sub
mov
aas
out
add
jg
out
sub
out
lret
add
lock
push
mov
int3
out
ret
into
jns
aas
push
arpl
inc
sub
enter
ljmp
cmp
popf
lret
push
jne
xchg
enter
add
lret
cmp
lret
mov
cmp
cmp
and
movsb
lret
cmpsb
enter
jnp
fcmovnbe
jno
lret
mov
inc
aas
enter
mov
push
add
add
xchg
aaa
xor
lcall
inc
fs
aaa
movb
popa
inc
jl
cmp
add
push
std
fdivl
loope
jne
inc
test
inc
icebp
std
mov
jne
or
in
add
push
test
add
decb
jne
cld
push
shr
jb
std
and
int3
add
xchg
push
cmp
add
inc
enter
pushl
adc
pop
jmp
shrl
test
add
add
inc
leave
mov
cmpsb
lret
add
sahf
sbb
sbb
cld
ss
or
push
and
jmp
dec
cli
inc
mov
jge
cwtl
cwtl
or
pop
sbb
sub
lods
pop
pop
clts
push
add
jb
add
add
jne
adc
jmp
or
mov
loop
add
in
add
sarb
leave
aam
mov
int3
mov
fidivl
jnp
or
fimull
or
cld
aas
lods
sar
shl
cmpl
inc
aas
icebp
dec
push
mov
lock
add
icebp
jbe
xchg
adc
sub
add
add
cmp
jl
xor
lock
push
sub
dec
hlt
mov
cli
mov
loopne
add
jl
inc
decb
mov
enter
out
mov
aas
out
add
mov
shll
sbb
xchg
cmpsb
es
std
testl
ret
incl
out
lret
mov
xchg
pop
aas
test
add
add
mov
and
add
lock
std
jo
mov
and
enter
std
dec
jge
clc
iret
add
enter
insl
ss
mov
cmp
out
xor
dec
lods
fcmovnu
mov
push
xor
jo
and
jl
cwtl
test
inc
aas
std
pop
enter
add
dec
lods
testl
imul
fildl
add
or
add
cmp
je
adc
imul
cmp
or
push
sbb
add
clc
call
push
sar
aam
fs
sti
std
aam
in
sahf
cmp
andl
cmp
jae
je
push
jmp
jns
adc
stc
je
adc
add
mov
sti
jae
cli
je
fidivrs
arpl
cmp
push
pop
add
xchg
and
add
jmp
add
xor
scas
or
ljmp
std
jne
add
gs
push
call
mov
push
pushl
pushl
aas
jno
stc
jle
aam
std
jne
add
call
add
add
lret
gs
cmpsl
call
mov
mov
jne
add
gs
xlat
call
mov
cmpl
or
add
outsb
inc
aam
bnd
aas
icebp
add
ret
dec
add
aas
je
les
dec
aam
rol
mov
jno
add
outsb
inc
les
loop
test
icebp
add
add
add
mov
fnstenv
adcb
xor
add
bnd
les
scas
imul
dec
or
pop
cmp
dec
fdivl
jge
out
push
jge
xchg
out
adc
or
mov
cmp
stos
cs
cmp
stc
xor
loope
fildll
mov
add
push
shrl
inc
sbb
les
cld
or
in
loope
aas
stc
hlt
or
stc
aam
cwtl
ds
stc
aam
pop
ss
imul
vmulss
mov
pop
es
ret
xchg
scas
pop
pop
test
cmp
xchg
stos
sbb
ret
je
sbb
test
stc
std
je
loopne
push
cld
stc
std
push
add
add
loope
inc
cld
stc
std
push
adc
jb
cld
stc
std
xor
loope
inc
cld
stc
std
xor
loopne
adc
stc
std
adc
loopne
add
stc
stos
inc
enter
inc
lds
pop
cld
push
outsb
push
int3
std
sbb
nop
aas
jmp
cmp
rcr
aam
call
cmp
add
test
add
cmp
add
add
out
add
dec
ljmp
and
push
out
push
int3
add
test
add
rorb
mov
into
lea
idiv
mov
mov
out
rorl
out
mov
decl
mov
mull
or
xor
out
movq
adc
in
add
add
or
add
idiv
and
je
in
lock
orb
and
mov
xor
jmp
into
mov
jbe
cmpsb
test
or
shl
loope
jmp
push
jmp
sbb
mov
out
xor
test
orb
fnstsw
inc
stos
push
add
add
dec
sar
inc
mov
insb
nop
shlb
or
arpl
stos
imulb
test
incb
mov
sar
and
push
or
add
hlt
xchg
add
loopne
sub
mulb
or
and
fidivrs
inc
loopne
mov
jmp
cmp
add
add
fs
mov
aas
fwait
bound
push
cmc
sbb
cmpsl
movb
test
mov
bound
mov
mov
aaa
cli
pop
mov
inc
mov
add
mov
cmp
add
leave
insb
mov
sti
push
push
jbe
call
add
popa
std
push
aam
inc
imul
add
sbb
je
jp
xor
mov
std
out
imulb
aaa
hlt
std
push
cmp
lock
mov
pop
add
push
std
push
scas
ja
add
cmp
lds
hlt
std
jmp
mov
mov
stos
cmp
mov
push
and
stc
cmp
add
xlat
xchg
pop
xor
or
add
add
stos
std
call
xor
jne
ret
inc
clc
dec
lea
leave
xor
lcall
cmp
jmp
mov
jmp
inc
sti
or
inc
push
cld
jmp
sub
mov
xor
push
cli
and
mov
xor
push
mov
movsb
ret
fiadds
dec
mov
mov
inc
or
jbe
sbb
jae
insl
pop
sub
mov
add
push
inc
push
cld
jge
mov
in
aas
pop
enter
lea
enter
ljmp
dec
cld
cmc
mov
loopne
mov
sarb
inc
sub
stos
jne
lret
xchg
sbb
ss
or
mov
mov
test
fwait
adc
push
mov
sarb
mov
inc
adc
add
xor
mov
pop
aaa
or
ja
hlt
movsb
cld
mov
mov
jge
and
enter
mov
mov
ss
loopne
and
ds
mov
mov
mov
fstpl
push
imul
mov
jl
push
or
mov
iret
or
add
add
ficomps
or
aam
cmp
fneni(8087
pop
daa
shl
mov
lret
loopne
es
add
mov
xor
cld
out
mov
hlt
add
mov
jmp
fcmovnb
jmp
movsl
jl
inc
out
pop
std
inc
enter
jns
add
ret
subl
add
add
std
jmp
jae
mov
std
jl
inc
inc
in
jae
jmp
cmp
icebp
mov
jae
movsb
jmp
movsl
cmp
mov
push
add
adc
outsl
cmp
mov
or
jmp
xchg
stc
inc
fnstsw
enter
mov
or
mov
std
jne
mov
add
imulb
add
jecxz
call
jge
addr16
decl
sbb
adc
mov
xor
int3
lret
push
mov
stos
std
incl
incb
es
cmpl
mov
call
mov
xor
jne
popf
add
inc
inc
cld
ss
call
lret
add
xchg
jne
aas
lret
add
add
add
jmp
mov
add
sbb
add
loope
jl
and
adc
sar
test
mov
mov
je
or
push
je
cld
fldenv
xchg
loope
sbbl
adc
leave
out
arpl
in
add
loope
jmp
mov
add
push
shll
push
jmp
mov
sub
aas
loopne
mov
ds
mov
cld
adc
loopne
and
out
pop
cs
ljmp
in
inc
mov
aas
dec
mov
aaa
jne
rolb
push
cs
out
cmp
movsl
mov
loopne
mov
add
add
out
adc
cmpl
aas
enter
jae
sub
mov
out
mov
jmp
inc
ret
xor
std
jmp
cmp
orl
in
std
jmp
cmp
sub
inc
sbb
ret
insb
or
cmp
push
fiaddl
hlt
push
add
push
hlt
or
push
hlt
std
mov
in
mov
in
xchg
jae
push
dec
lock
jl
loopne
mov
in
std
jl
bound
out
das
hlt
std
pop
mov
iret
fdivl
in
inc
nop
in
mov
add
test
jge
mov
jne
daa
mov
add
xor
hlt
subl
or
jne
add
add
pop
addr16
xor
hlt
incl
and
stc
xor
incb
pop
je
pop
xor
jne
pop
sbb
xor
jmp
jo
call
enter
push
mov
jl
jge
jae
sub
mov
je
push
or
or
mov
enter
cmp
incl
add
xor
mov
inc
pop
movsl
gs
push
leave
jge
add
insl
xchg
dec
or
in
addb
add
dec
adc
addl
or
add
call
xor
rcr
jl
loope
or
addb
mov
mov
mov
cmp
loopne
add
loope
inc
xor
add
add
add
out
add
adc
orb
cs
loopne
push
enter
dec
rolb
sbb
jo
cmpsl
ljmp
cltd
add
add
test
js
fildll
daa
test
xor
jbe
or
out
call
jle
out
sbb
ds
dec
movsl
stos
add
add
ljmp
jp
and
inc
enter
or
add
add
pop
jmp
mov
hlt
test
jmp
sarb
fldcw
inc
mov
movsb
push
mov
ds
mov
aaa
mov
jae
mov
sahf
shlb
inc
in
cmp
dec
subl
sbb
add
add
insb
call
les
je
inc
fwait
fs
adc
pop
jmp
or
jmp
cmp
add
lea
decl
jg
roll
call
outsl
sbb
jae
mov
dec
push
lods
dec
adc
add
cmpsb
inc
inc
loopne
inc
inc
hlt
xchg
std
jne
dec
out
sti
add
add
enter
lds
mov
cmpb
je
loope
loopne
inc
lahf
std
push
scas
fsubr
cmp
incl
mov
call
cmp
or
loopne
inc
mov
cmpl
cmpsb
decl
cmp
mov
lods
out
xchg
scas
cmpsl
lock
aas
lahf
dec
leave
add
add
add
add
mov
ss
lock
aas
mov
dec
das
or
mov
loopne
and
pop
inc
add
pop
xor
out
or
adc
shr
sbb
in
mov
aaa
jns
pop
inc
cmpsb
scas
je
sahf
xor
ljmp
enter
out
pop
sbb
fwait
push
xchg
mov
add
or
mov
rorb
test
jnp
out
ss
out
cld
fadds
aas
mov
out
sbb
pop
fistps
mov
roll
fs
sub
push
mov
or
mov
dec
push
sub
out
rolb
out
fdivl
enter
int3
aam
pop
pop
sti
mov
iret
aas
and
out
jp
add
sti
add
movl
cs
push
inc
sbb
iret
pop
adc
dec
shr
cltd
outsl
in
jb
faddl
je
push
out
cmpl
rcrb
stos
daa
enter
int3
or
jmp
and
hlt
jb
and
sub
outsl
add
fcomps
leave
cmp
add
add
shr
jne
in
jo
adc
test
shr
mov
int
adc
aas
int3
jae
imul
pop
leave
rolb
mov
std
jne
ss
cmp
in
call
lahf
or
jle
xor
mov
jnp
jo
stc
lahf
sbb
add
add
std
jne
xor
or
inc
ss
lcall
lret
add
mov
test
pop
leave
xchg
mov
add
in
cld
or
ds
add
inc
ja
add
icebp
jp
sub
mov
aas
and
pop
adc
push
decl
loop
mov
add
aas
pop
push
popf
pop
add
xor
clc
rorl
lcall
or
add
fstps
mov
in
cmp
mov
pushf
into
frstor
sub
mov
xor
enter
push
movsl
fwait
lds
sub
enter
fldcw
push
push
movsl
mov
add
add
mov
jmp
adc
ret
mov
flds
inc
sub
mov
cmp
jl
js
lock
push
in
jnp
rolb
les
ss
ja
ss
lock
mov
loop
ret
or
xchg
ss
out
xor
and
ret
sbb
stos
pop
aas
push
add
dec
rcrl
push
je
add
add
push
mov
fwait
dec
inc
cmp
cmp
mov
ret
subl
add
pushf
or
jae
sarl
xor
jmp
scas
xlat
fs
fidivrs
loop
aad
ficomps
xchg
sbb
jmp
xorl
call
adc
data16
jmp
add
add
pop
or
andl
mov
push
jne,pn
mov
insb
repnz
jbe
jge
lds
or
add
or
add
mov
pushl
xor
jne
cmp
or
jnp
pop
leave
and
std
addr16
sarb
rcll
add
int
jne
add
add
xchg
or
fucomi
mov
mov
std
jne
cmp
dec
xchg
les
sarb
jne
pop
add
aas
insb
inc
add
adc
inc
aas
dec
xor
addr16
cmp
aas
out
je
jb
or
repz
add
out
add
lods
stc
call
xchg
dec
push
xchg
test
inc
aas
scas
xor
daa
mov
aas
fcmovb
je
push
dec
leave
add
add
in
inc
vhaddps
add
mov
test
out
pop
mov
decl
cltd
mov
icebp
add
pushl
sbb
movl
xchg
roll
pop
enter
dec
or
addr16
cmp
lock
pop
das
cmp
out
jecxz
inc
scas
add
add
aas
push
enter
pop
lods
stos
inc
add
add
les
test
loopne
mov
daa
and
mov
adc
out
sub
lods
cmpsl
aas
enter
mov
out
aas
push
loope
cmp
out
aas
dec
pop
dec
push
repnz
add
out
aas
enter
enter
push
push
or
inc
ds
mov
sbb
xchg
mov
dec
add
add
mov
inc
call
fidivs
pop
popl
push
fidivs
xor
cmp
add
rorb
imul
movb
popa
aam
adc
push
add
je
xchg
sub
fisttpll
std
and
jmp
jae
in
mov
in
jae
add
add
push
lea
or
les
jne
xchg
aam
add
jp
inc
add
mov
add
dec
dec
xchg
add
aaa
add
sbb
add
leave
mov
je
inc
outsb
je
inc
push
std
xor
sub
lcall
xchg
push
pop
xchg
push
add
add
xlat
inc
lea
inc
mov
inc
aas
adc
add
push
cli
or
jb
ja
aas
push
xor
cmpsl
push
xor
mov
adc
xchg
and
add
mov
out
pop
add
out
pop
add
out
js
jae
cmpsl
adc
sub
inc
mov
addl
add
add
add
add
icebp
jp
add
cmp
cmp
incl
repnz
mov
jp
adc
int3
fsubr
mov
loopne
mov
add
je
enter
enter
fsub
hlt
mov
inc
inc
mov
lret
mov
in
hlt
mov
fistl
cwtl
fnstenv
mov
movdqu
imul
inc
pop
aaa
add
add
mov
fwait
pop
test
add
outsl
mov
das
pop
lock
cmp
lods
sarb
clc
test
add
mov
das
pop
lock
rorb
mov
inc
jmp
pop
mov
ficoms
adc
daa
jp
add
jl
inc
push
inc
enter
push
or
inc
jg
scas
fistl
add
std
adc
loop
xor
fnstenv
mov
jge
jbe
push
lock
and
std
fcoml
and
fscale
fidivl
fistl
cmp
fistl
hlt
jnp
jnp,pn
sub
push
jb
inc
lds
mov
inc
adc
xlat
lds
lea
sub
dec
push
es
add
add
jecxz
call
mov
repz
lds
ljmp
popl
lods
sbb
addr16
std
jne
sub
inc
xchg
lds
shlb
add
mov
xchg
mov
xchg
mov
xchg
push
loope
adc
clc
cmp
clc
add
push
mov
vpcmpeqw
in
xlat
call
or
andl
xor
add
add
sub
dec
ret
dec
push
out
mov
cmc
fcom
xchg
adc
mov
cwtl
outsl
bound
ret
dec
mov
mov
mov
cmc
mov
xchg
sbb
jmp
mov
out
mov
add
imul
mov
out
mov
je
mov
cld
add
add
xchg
inc
pop
loope
add
loopne
lret
decl
enter
xlat
xchg
jecxz
xchg
stos
nop
jg
push
pop
push
pusha
int
and
insb
dec
out
notb
jecxz
je
enter
cmp
fisubs
or
test
pop
aaa
loopne
cmp
lea
stos
xchg
jge
mov
xchg
loopne
add
add
mov
mov
add
pop
lods
and
mov
jbe
lock
lea
aas
enter
in
mov
ja
add
inc
or
ret
push
in
jmp
add
or
sub
movl
cmp
fistps
mov
jae
xlat
std
call
push
into
sub
and
add
inc
inc
int
xlat
jae
in
push
scas
fisttps
call
inc
pop
push
push
in
adc
mov
add
push
jbe
shr
pop
xlat
std
push
je
ret
fldl
faddl
jl
cmp
push
add
leave
ret
mov
cltd
std
jne
and
rcl
cmpl
or
ret
mov
add
dec
cltd
std
jne
and
clc
push
scas
push
sbbl
je
loop
leave
aam
add
push
call
or
je
adc
into
sub
lahf
or
add
jg
push
mov
popf
std
jmp
xor
jne
dec
jge
push
mov
sub
rorb
fists
and
adc
call
add
add
and
call
mov
bound
rcr
sbb
and
lret
roll
aaa
mov
sti
xor
negb
or
xchg
inc
stos
scas
sub
nop
xchg
adc
adc
test
enter
push
les
ret
imul
getsec
rcll
push
sahf
je
pop
sbb
add
push
or
bnd
lods
ret
pop
sbb
fcompl
and
daa
sbb
shll
or
sub
aas
jge
scas
stc
pop
jmp
insl
jae
sahf
xor
pop
xlat
xor
leave
sahf
sahf
sarl
pop
test
out
push
js
pop
inc
loopne
test
rol
lret
jle
out
in
add
jecxz
sub
add
jl
sub
pop
jmp
push
rcrl
push
sbb
add
adc
fisttpll
or
inc
shlb
in
pop
shrb
jmp
pop
mov
inc
xor
push
mov
or
sar
cs
enter
imul
jge
std
pushf
cmp
push
dec
shr
mov
enter
pop
bound
add
add
std
push
inc
loopne
lret
shrl
cmp
mov
jmp
sahf
shll
aam
std
cmpsb
ret
jge
test
pop
xor
sarl
fisttps
aas
add
xor
call
mov
dec
fs
add
and
push
xor
add
push
call
inc
cld
mov
xor
or
sar
call
sub
or
and
add
imul
fidivl
add
idiv
jne
sbb
mov
movsb
jnp
daa
int3
std
jne
sbb
lcall
fisubrs
mov
lahf
add
adc
dec
inc
aas
inc
mov
shrb
add
pop
pop
mov
aas
jp
addr16
std
inc
add
adc
decb
stos
cltd
addr16
inc
add
add
mov
fistps
or
negb
inc
loope
clc
cmpsl
pop
cmp
mov
adc
test
or
stos
cwtl
cltd
incb
push
movsl
addb
lcall
rcrl
insb
add
add
xchg
lcall
jle
rcl
jbe
aaa
loopne
xor
shlb
lds
mov
adc
sub
xchg
enter
push
out
stos
cltd
jbe
lcall
test
clc
push
out
stos
and
push
lcall
pushl
push
int3
inc
out
mov
push
les
sub
cmpsl
xchg
xor
cwtl
sbb
inc
add
add
iret
cmp
cmpsl
into
mov
cmp
into
jae
movsb
push
ret
in
jne
test
bound
xchg
call
pusha
add
push
inc
shr
ror
std
push
xor
std
aam
loopne
lahf
mov
sub
enter
int
frstor
rclb
enter
jb
push
add
add
iret
jae
or
jae
xchg
mov
addb
stos
inc
enter
dec
bound
add
repnz
jne
and
inc
stos
cmp
orb
bound
xchg
call
or
int3
pop
ljmp
inc
inc
clc
mov
jne
jle
jns
jne
add
add
aad
jne
and
sub
pushl
fwait
and
rol
call
push
cmp
std
fisttpll
jb
xor
jbe
jne
mov
aas
imulb
or
lods
out
lock
pop
js
xchg
icebp
mov
cs
pusha
lods
or
repz
xchg
lock
ret
add
mov
jmp
add
inc
int3
add
incb
sbb
aas
rsm
test
adc
dec
or
call
out
cs
xchg
ret
adc
jmp
lcall
rorb
call
mov
xchg
mov
cmp
test
inc
sub
arpl
add
fistps
inc
aas
enter
mov
lods
inc
addr16
add
add
xor
movl
fildll
push
push
jg
sub
hlt
or
jbe
cmp
hlt
fwait
cmpsb
cmpsl
data16
loopne
xchg
and
push
adc
loope
das
adc
inc
ror
adc
xchg
add
cmp
ret
mov
icebp
push
and
mov
push
ss
pop
in
push
adc
cld
int3
xchg
sub
pop
add
add
add
test
jb
fiadds
inc
dec
ds
pop
mov
push
shll
ds
pop
jb
pop
and
std
bnd
pop
cmp
enter
bound
or
push
jle
shr
push
lret
std
cmp
xchg
shlb
sbb
out
or
mov
aam
push
shrb
sub
enter
add
xchg
inc
lds
mov
enter
inc
add
push
lods
push
mov
or
cmpsb
mov
std
ljmp
mov
sti
sub
lea
decl
jle
jne
cld
xor
jne
mov
js
push
mov
xchg
push
cmp
push
sub
std
jne
xor
test
les
mov
add
jmp
mov
mov
lds
in
lds
sti
xchg
mov
dec
mov
lock
mov
aas
mov
inc
out
shll
push
call
mov
push
xchg
out
xchg
mov
add
dec
mov
mov
aas
add
ljmp
ljmp
imul
or
decl
sbb
push
sbb
cmp
lock
and
sub
hlt
mov
xchg
je
jb
or
hlt
out
sub
add
jmp
cli
xchg
es
xor
mov
decl
push
push
sub
out
mov
xchg
xor
dec
xchg
add
add
enter
add
xchg
jns
cmpsl
pop
es
aad
inc
aaa
pushf
push
outsl
sahf
xchg
or
lds
enter
flds
sbb
add
cld
sti
sbb
test
and
xor
inc
enter
dec
and
add
lock
pop
sbb
ss
inc
sub
in
jo
lods
push
lods
cmp
add
add
push
std
push
and
std
je
scas
pop
test
std
je
jae
les
scas
nop
ret
sbb
or
mov
push
add
sub
jmp
cmp
enter
cs
add
push
xchg
shr
out
std
xor
mov
jmp
pop
ret
push
xor
ljmp
add
cmpsl
push
decb
sub
or
mov
stos
jne
bound
sbb
fisttps
call
mov
ret
in
les
leave
aam
add
addr16
ljmp
cld
cltd
jne
bound
inc
stos
inc
cmp
sbbb
inc
add
call
or
add
into
mov
ljmp
inc
inc
clc
push
lret
mov
jo
call
pop
sbb
clc
push
xchg
je
pop
ficoml
testb
fsub
xchg
lods
pop
mov
mov
dec
mov
mov
lea
icebp
add
cmpb
push
sbb
decb
cmpsl
cltd
cs
xchg
lea
fs
inc
mov
pop
sub
scas
ss
inc
outsl
sbb
lock
pop
inc
dec
stc
mov
aaa
movl
lcall
mov
aas
xchg
xchg
dec
mov
dec
push
lds
nop
sub
les
xchg
xchg
out
sbb
test
bound
call
add
inc
testl
add
add
add
add
enter
pop
call
add
cli
dec
cmp
mov
jl
mov
add
dec
dec
inc
aas
xor
fsub
movaps
cmp
cwtl
pcmpeqb
sub
xor
arpl
add
sbb
pop
xchg
or
fs
push
rcll
arpl
and
add
add
lock
jmp
popf
add
jnp
cmp
inc
push
mov
jne
sub
jmp
movsb
stos
mov
lret
push
mov
jae
movsb
rcll
mov
jae
lret
rol
adc
mov
cmp
scas
dec
shr
popf
sbb
std
sahf
sub
loope
orl
ret
push
mov
jne
fs
add
mov
fs
jne
fs
adcl
or
dec
call
cmc
mov
inc
dec
sar
push
xor
or
outsl
add
std
push
loopne
push
out
lret
add
es
xchg
push
jno
or
ljmp
ljmp
jno
inc
in
add
pop
add
add
mov
or
aas
ds
inc
dec
xor
je
inc
pop
or
jae
jmp
imul
push
xchg
scas
pop
inc
add
mov
insb
lea
aas
das
int
dec
outsl
sbb
pop
jo
push
xlat
add
inc
cmpsb
shll
cltd
loopne
ret
jg
jmp
pop
scas
add
fsts
fs
scas
xor
add
add
cmpsl
cltd
xor
xchg
mov
insl
loopne
jae
sarl
inc
int
rol
cmpsl
mov
ret
sahf
adc
mov
cmp
cs
les
add
mov
cmp
shll
dec
adc
jns
call
inc
addr16
lds
inc
and
cmp
xor
aaa
ret
mov
int3
daa
adc
add
sbb
sbb
sub
sti
cwtl
xchg
cltd
scas
push
enter
add
cmp
out
iret
mov
popa
xorb
data16
sbb
cmp
sar
and
add
daa
adc
jp
push
jle
shr
push
mov
data16
call
loop
cmp
loope
inc
jmp
mov
push
sarl
outsl
xor
data16
sbb
xchg
les
call
push
dec
mov
mov
or
cmp
mov
movsl
mov
inc
jae
aam
push
add
or
xor
jbe
clc
out
sub
xor
je
mov
add
mov
iret
clc
jmp
ret
in
cmp
jecxz
dec
call
pop
xchg
add
dec
add
add
jne
fimuls
push
mov
fiadds
push
loop
xchg
lret
cmpsb
lret
pmaddwd
ljmp
clc
push
cltd
int
call
aas
stos
shll
push
clc
addr16
incl
add
push
lock
aas
mov
mov
sarb
mov
xchg
incl
out
filds
xchg
cmpsl
cltd
rolb
add
add
push
push
invd
xlat
test
jmp
sub
cld
scas
add
xchg
push
jno
jle
sbb
xor
mov
xor
add
jg
cwtl
scas
mov
cmp
out
mov
push
mov
call
adc
mov
push
mov
sbb
dec
xor
fwait
push
or
xchg
xor
xchg
mov
cmp
mov
call
or
out
shlb
sbb
es
add
dec
movsb
mov
int
add
add
mov
loopne
aas
shll
adc
leave
lods
mov
add
xchg
fmuls
adc
incb
mov
in
xor
add
add
dec
sarl
sarl
xor
mov
shr
xlat
or
std
adc
mov
dec
mov
adc
clc
pop
mov
add
jp
add
inc
inc
cmp
inc
or
jmp
jp
inc
jmp
jg
add
cmp
lds
dec
inc
sbb
insb
add
xchg
inc
adc
in
add
or
inc
andl
std
jae
dec
jl
xchg
lret
xor
push
sub
ljmp
lods
jbe
inc
jae
xchg
lret
or
mov
repz
sub
cmpl
cmp
leave
inc
je
xchg
stos
or
les
push
enter
pusha
add
stc
lds
les
add
jnp
hlt
movb
adc
adc
and
add
loopne
push
mov
je
leave
or
add
movsl
shll
xor
cmpsb
repnz
add
mov
mov
mov
add
mov
clc
push
lods
pop
add
mov
std
or
repz
push
test
jp
add
aas
scas
cmpb
dec
sbb
lcall
xchg
les
pushf
stc
out
aam
add
pop
fdivrs
movsb
push
and
scas
add
enter
mov
add
mov
cmpsl
jmp
test
pop
decl
add
push
xor
mov
popl
mov
dec
jle
out
lds
xchg
pop
xor
inc
mov
mov
leave
sbb
xchg
xor
clc
sbb
mov
add
enter
leave
push
add
add
enter
mov
cmp
fnstcw
and
enter
mov
mov
jnp
in
mov
lods
std
je
mov
data16
mov
out
mov
jae
mov
and
aam
mov
mov
inc
cmpsl
jmp
stos
mov
insl
fnsave
add
xor
jmp
cmp
std
cld
movsb
scas
imul
test
data16
clc
jb
out
divl
ja
out
jmp
out
add
dec
stc
xor
add
cmp
jmp
adcb
loopne
ffreep
jne
xchg
mov
dec
je
jmp
adc
call
mov
add
ret
add
lret
push
cld
lret
push
jmp
fsts
fistpll
dec
addr16
or
push
out
cmpl
mov
pushl
dec
je
cltd
mov
lcall
adc
aas
push
imul
xlat
das
sar
fdiv
cmc
out
inc
sar
enter
xlat
call
mov
leave
push
push
test
fistps
loop
repnz
jnp
jmp
push
insb
xorb
dec
js
mov
testb
ret
pusha
sbb
call
inc
popa
cmc
sbb
jmp
mov
js
testb
inc
repnz
sbb
dec
adc
xorl
cmpsb
lret
xor
enter
dec
and
and
in
xorb
out
mov
jg
repz
inc
addr16
aas
cmp
jmp
cs
aaa
aas
enter
lret
pop
xchg
test
sbbb
shrl
or
or
pusha
xorb
shll
aas
movsl
jne
push
sub
mov
or
rcrb
jg
mov
mov
ljmp
jg
mov
scas
dec
int
cld
add
add
mov
insl
cmpb
cmp
std
pop
adc
mov
pop
mov
movsb
push
add
jae
push
jmp
shr
sti
add
cmp
inc
adc
enter
or
cmp
add
cmp
add
push
insb
movsb
cmc
jmp
mov
xor
cmp
sarb
add
cmp
push
sahf
aaa
call
cmp
idiv
xchg
xchg
dec
call
lahf
inc
jmp
lods
xor
lea
stos
inc
add
xor
jne
pop
aas
dec
adc
mov
int3
push
decb
and
incl
jne
cs
call
xor
add
pop
addr16
int3
std
mov
cmp
or
dec
test
dec
dec
loope
xchg
xor
pushl
jb
addr16
std
mov
dec
jae
and
or
pop
int
adc
mov
add
jl
shrb
imul
sbb
out
data16
in
or
dec
stos
shl
xchg
data16
clc
sub
mov
add
aas
mov
in
aas
ret
nop
leave
jnp
or
jl
mov
push
add
ljmp
insl
mulb
jl
dec
cltd
mov
mov
and
cmp
cmpsb
add
jae
aas
enter
pop
call
jge
nop
jbe
or
loop
insb
xor
in
enter
add
mov
mov
imull
test
mov
add
rclb
mov
rsqrtps
mov
jl
mov
xchg
or
mov
addr16
mov
jnp
sar
add
fidivs
popa
cmp
imul
jnp
jnp
jae
mov
mov
leave
call
cmpsb
out
mov
sahf
movsb
mov
loope
add
xchg
lahf
inc
mov
std
jle
leave
call
outsb
scas
cwtl
cmc
data16
mov
pushf
push
mov
inc
inc
push
mov
sbb
xchg
std
cs
in
xor
call
push
out
xor
adc
xchg
mov
mov
xor
mov
or
scas
divl
cmc
in
jbe
add
add
mov
add
xor
fimull
xor
loope
int3
add
in
add
daa
add
inc
inc
cld
push
pushf
das
addr16
inc
test
incb
enter
xor
or
lahf
push
push
mov
add
xchg
xor
cmc
cmp
lret
jbe
adc
add
in
jne
into
mull
xchg
inc
inc
in
and
add
add
popf
std
mov
cmovle
test
add
or
jae
aas
stos
inc
jae
icebp
in
add
xchg
mov
call
daa
test
xor
idivl
insl
xchg
ja
std
mov
add
lret
add
sbbb
pop
out
mov
sti
push
mov
inc
aas
sub
incl
add
push
mov
ja
dec
xchg
lcall
mov
in
pop
xchg
idivb
cwtl
mov
add
adc
js
cmp
pop
or
lret
fidivrs
scas
pop
js
xor
imul
js
mov
add
inc
ret
test
mov
int3
sub
imul
xchg
js
add
or
add
out
mov
enter
mov
add
dec
adc
test
call
add
enter
add
mov
imul
ret
out
mov
out
mov
out
mov
enter
add
cmp
test
enter
sti
dec
sub
enter
enter
push
add
add
inc
aas
inc
mov
inc
inc
pop
call
stc
lods
jae
mov
inc
and
lods
mov
mov
in
pop
repz
call
aad
mov
int3
call
cmp
push
push
push
mov
or
cmp
add
roll
ljmp
xor
mov
inc
lock
add
ja
and
scas
mov
out
adc
add
ret
es
inc
inc
call
es
std
imul
jg
add
pop
je
arpl
in
mov
call
popf
pop
jb
adc
add
push
int3
stos
add
shl
jecxz
mov
dec
mov
jbe
pop
leave
push
inc
jo
mov
mov
frstpm(287
mov
je
arpl
add
in
sub
mov
or
mov
jae
sbb
or
mov
stos
inc
add
je
fbstp
out
fcomi
mov
call
add
add
xchg
push
out
pop
je
rclb
enter
add
xor
ret
pushf
jae
dec
movsl
je
inc
cs
cld
adc
mov
mov
addl
dec
std
xor
pop
test
loopne
dec
push
je
or
mov
mov
xchg
aaa
jne
add
xchg
mov
sub
xchg
aad
aas
mov
call
jl
test
push
je
enter
pop
call
xchg
xchg
xchg
mov
sub
std
pushf
sub
or
mov
enter
add
repz
out
lea
shlb
cmc
fmulp
clc
push
roll
add
fdivrl
push
stos
std
inc
cmp
fildl
test
std
sahf
mov
gs
test
jl
test
cmc
jle
pop
add
mov
inc
jmp
insb
stos
std
adc
add
je
dec
dec
dec
inc
addl
sub
push
xor
idiv
pop
xor
std
out
imul
add
add
aas
in
cmp
addr16
xor
jno
incl
inc
inc
data16
dec
imul
push
mov
idiv
fstps
xor
out
fs
lcall
sbb
jmp
lahf
push
push
pop
mov
jns
in
idivl
jb
push
test
add
jae
repnz
clc
pop
xchg
cltd
ret
mov
jb
or
jb
lret
js
cmc
pop
addr16
push
scas
outsl
rcrb
outsl
xchg
jne
incb
cmc
pop
daa
xor
xor
jbe
out
cmc
outsl
sbb
je
adc
pop
adcl
lret
incb
add
clc
cmp
lock
jo
xlat
sub
fldenv
push
jno
pop
mov
fs
ds
in
aaa
jno
or
pop
add
sbb
sub
out
jbe
filds
ljmp
add
adc
testb
ret
popa
cmpsb
jo
push
das
mov
testb
jno
cmpsb
divb
xor
add
add
mov
jno
nop
test
pop
mov
aam
out
push
enter
sbb
cmp
aam
jo
mov
add
jecxz
jae
adc
or
push
rcrl
std
jo
mov
jae
das
sbb
inc
cwtl
adc
je
adc
push
inc
adc
adc
imul
add
add
xor
std
pop
pop
lods
lods
sub
movsl
std
pop
aas
movsl
jae
in
aas
test
jae
mov
int
popf
sti
movsl
std
cmpsb
push
mov
std
mov
test
push
jmp
in
push
xor
add
or
arpl
or
arpl
ljmp
int3
add
jno
stc
call
add
add
mov
decl
xor
jne
xor
inc
incl
jne
dec
imul
push
push
call
jne
jg
std
call
out
push
push
cmp
lock
data16
std
push
scas
mov
cli
mov
lds
leave
jecxz
mov
inc
aas
mov
add
mov
or
jl
ljmp
jmp
scas
jno
xor
add
rcrl
aas
xchg
inc
je
sub
je
mov
int3
inc
ljmp
leave
xlat
jns
add
rorb
pop
push
push
outsl
incb
loop
repz
mov
dec
xchg
das
add
insb
fadds
add
adc
jg
jle
mov
cwtl
pop
pop
cmp
jg
aad
adc
lds
hlt
leave
mov
mov
rcrl
idivl
fistpl
into
pop
mov
pop
idivl
mov
fstpt
sete
mov
out
mov
push
push
sub
push
cld
add
add
push
insl
inc
push
and
cmpsb
mov
test
add
mov
std
cmpsb
mov
lret
xchg
mov
in
inc
adc
push
push
cld
mov
mov
jae
fs
cmp
in
cmp
mov
test
adc
pushf
nop
mov
sub
add
add
call
cmp
add
sti
or
out
cmp
add
add
add
push
pop
mov
sub
pushl
pushl
add
lds
shlb
out
pop
lds
push
leave
xchg
or
testb
lea
idiv
imul
dec
inc
aad
imul
add
sub
push
push
dec
adc
add
decl
inc
in
imull
sub
gs
sub
jno
jmp
pushf
in
mov
clc
idiv
imul
mov
sub
pop
cmpb
mov
mov
adc
push
xchg
faddl
dec
mov
add
add
inc
push
jb
pop
bound
imul
jnp
push
sarl
mov
stc
mov
test
sub
notb
xor
in
push
xchg
adc
pop
mov
mov
and
dec
lahf
xchg
je
lahf
imul
add
rep
mov
and
in
push
adc
jg
cmp
jle
jmp
sahf
jbe
push
mov
imul
adc
sahf
mov
jno
sahf
ss
inc
mov
imul
inc
cmpsl
push
imul
add
add
mov
push
call
push
add
cmc
xchg
movsl
outsb
sub
xchg
std
scas
je
inc
cmpsb
xchg
sahf
inc
mov
addr16
jae
xchg
mov
jmp
cmp
mov
cmp
dec
data16
call
pusha
stc
mov
xor
jge
hlt
lahf
add
add
cwtl
sti
cs
sahf
jae
fs
push
jmp
fstps
stc
jmp
in
xchg
xor
leave
and
std
push
int
add
cmp
bound
cmp
add
inc
cld
mov
add
nop
jl
push
cs
sub
decl
pushl
add
popa
and
push
mov
add
push
inc
rcl
and
dec
lcall
add
sub
inc
adc
cmpsb
enter
les
add
popf
std
aas
dec
add
dec
add
adc
cvttss2si
dec
push
adc
shlb
add
std
call
xchg
out
mov
or
stos
ret
ret
add
add
cmp
push
out
mov
xlat
lock
out
pop
data16
gs
mov
xchg
or
sar
pop
cmpsl
pusha
mov
out
mov
imul
mov
mov
shlb
mov
pushf
sti
cwtl
shrb
push
imul
scas
jo
mulb
adc
out
add
add
fwait
fs
xchg
into
gs
fdivrl
mov
adc
cmpsl
gs
subl
add
mov
ret
call
lcall
jg
outsb
jnp
cmpsl
pop
rorl
lcall
test
jl
test
rolb
inc
sti
pop
cs
aam
sbb
add
xchg
std
push
cmp
push
scas
cmc
push
ficompl
call
jne
and
jmp
push
mov
adc
xchg
std
fwait
adc
shll
mov
push
in
mov
lcall
arpl
std
mov
adc
arpl
pop
lcall
pop
adc
push
pop
push
add
add
push
loopne
and
call
orl
idiv
pop
lds
movb
sbb
cmp
call
or
decl
jne
add
lcall
jne
sbb
aad
or
es
stc
and
mov
cld
sub
lock
out
dec
ds
mov
and
idiv
dec
sub
cmp
jb
decl
push
popa
mov
icebp
popa
xchg
pop
and
cwtl
fsts
out
stos
incb
mov
pop
out
addl
add
adc
jmp
cmp
aaa
ja
cmp
ja
inc
xor
pop
xchg
and
inc
add
add
mov
addr16
add
mov
decb
fisttpll
mov
mov
nop
cld
call
dec
fadds
out
sbb
shrb
add
mov
sub
call
add
mov
jo
xchg
inc
hlt
outsb
stc
or
mov
cmpsb
les
or
sbb
or
mov
aas
ret
daa
xlat
add
add
decb
inc
cli
xchg
divb
andb
jmp
enter
sarb
sub
leave
and
pop
adcb
stc
cltd
dec
sbb
sbb
mov
cmp
push
ret
add
cmp
mov
mov
sarl
dec
pop
mov
call
pusha
js
push
movsb
and
test
add
cmp
dec
sarb
hlt
xchg
push
inc
jmp
faddp
rcrb
cmpsl
mov
jmp
aam
popa
out
fildll
push
inc
push
and
adc
push
icebp
movsb
movsl
popa
mov
xchg
jae
lahf
sbb
xchg
jle
std
sahf
test
in
push
xchg
push
add
cmpsb
std
imul
add
mov
inc
inc
cld
sub
leave
mov
push
call
mov
leave
push
call
popf
or
mov
sub
push
leave
in
mov
pop
jne
and
push
cmc
in
xchg
sub
jmp
mov
es
inc
adc
call
gs
jne
hlt
je
add
add
test
pop
leave
movsb
mov
jno
sti
inc
mov
gs
out
rcrb
pop
mov
pusha
mov
lds
sbb
out
add
andb
inc
daa
inc
jmp
aas
imul
pop
push
addr16
jo
jmp
addr16
into
xlat
pop
addr16
loop
dec
mov
inc
movsl
push
add
add
cmpsl
ret
sti
insb
popa
pushf
and
add
sti
or
or
sbb
inc
dec
dec
out
mov
push
in
call
or
dec
mov
pusha
pop
mov
lds
add
test
sbb
inc
pop
xchg
inc
cmpb
repz
punpcklbw
add
xor
in
mov
lret
mov
sbb
negl
mov
xchg
out
xor
pop
mov
mov
xlat
and
xor
and
add
arpl
mov
cmp
push
aas
push
insl
and
cmp
sar
mov
mov
add
inc
mov
add
add
mov
jmp
jmp
cmp
or
jo
out
cmp
add
mov
jmp
aam
mov
sub
xchg
add
jecxz
inc
or
jb
sbb
xchg
std
loop
adc
push
es
inc
in
repz
loop
ljmp
sahf
add
mov
add
ficomps
jne
hlt
je
scas
push
decl
je
sub
call
repz
incl
repz
pop
fidivrs
or
jle
add
fdiv
je
dec
add
dec
hlt
je
dec
jp
call
mov
inc
and
push
in
repz
push
mov
aas
xchg
add
add
pop
or
push
imul
dec
iret
pop
out
add
xchg
inc
push
mov
lds
and
add
fidivrs
pop
mov
es
jmp
mov
inc
aas
cli
iret
or
lret
mov
dec
mov
add
pushl
add
mov
mov
out
incl
add
fmuls
rorb
inc
adc
call
enter
enter
or
pop
xchg
mov
jo
or
xor
clc
mov
out
imul
fsts
xchg
mov
jmp
mov
fcoml
lret
enter
daa
iret
testl
xchg
add
or
push
js
cmpsl
jmp
push
cltd
imul
adc
mov
adc
add
or
std
out
stos
std
push
mov
xor
jbe
jae
data16
shll
std
mov
adc
scas
add
std
sahf
lock
call
mov
fwait
call
jle
add
lock
call
outsb
andb
pop
jo
call
dec
adcb
xor
ret
lret
mov
std
rolb
mov
mov
call
add
jne
imul
pop
clc
incb
push
lret
jl
mov
es
std
mov
dec
lea
add
imul
jmp
lock
into
lret
out
shlb
addl
je
xor
jmp
inc
test
or
push
adc
repnz
out
dec
ljmp
std
jne
and
inc
lock
mov
clc
dec
jl
inc
push
lock
aas
scas
pop
shll
add
lcall
xor
add
cmpsb
push
ljmp
adc
inc
pop
js
incb
dec
push
je
xchg
pop
aas
lahf
dec
sarl
mov
shll
inc
sti
gs
out
shlb
push
mov
pop
xor
add
jb
leave
inc
aas
idivl
cld
cwtl
cmc
push
je
xchg
sahf
jmp
out
rcll
jo
or
add
aas
enter
aam
add
call
push
dec
adc
jmp
push
test
add
mov
shlb
push
or
xchg
sbb
subb
mov
and
imul
ja
mov
mov
dec
sarb
mov
rolb
scas
cmpxchg
mov
xchg
inc
and
repnz
cmc
dec
rolb
rorb
orb
cld
in
inc
jmp
jnp
jge
cmp
inc
xorl
int
cmp
or
or
std
out
in
and
jmp
and
adc
shll
xchg
lcall
mov
add
std
sahf
add
add
repnz
xor
jae
jb
std
xchg
ret
dec
mov
push
jmp
cmc
mov
xchg
push
cmc
dec
test
enter
mov
add
call
mov
enter
inc
inc
clc
xchg
repz
cmp
inc
ret
roll
stc
call
xchg
in
add
sahf
std
incl
add
stc
xor
jl
std
incb
jne
sbb
jne
sbb
enter
push
mov
les
mov
mov
stc
push
sbb
call
aas
repnz
sti
mov
iret
mov
decl
data16
push
je
mov
xor
mov
add
add
push
add
mov
loope
ret
adc
call
sbb
push
decb
jp
enter
push
les
ret
or
pop
mov
pushl
inc
pop
aas
in
out
outsl
inc
xlat
or
movsl
inc
push
ret
mov
add
enter
cmp
adc
add
add
mov
inc
in
shlb
cmp
pop
inc
mov
push
lods
pop
dec
adc
lret
fwait
push
fnstenv
jno
sbb
mov
adc
pop
add
enter
or
mov
or
shl
hlt
mov
mov
out
ss
or
nop
cmp
xchg
jle
lock
jg
xor
add
add
inc
mov
or
enter
push
jae
je
push
cmp
jmp
loop
sti
add
xchg
jmp
cmp
push
xchg
scas
push
cli
je
ja
std
xchg
in
lods
lea
jae
cld
loopne
mov
out
inc
je
dec
hlt
in
xor
inc
mov
add
add
xchg
xchg
stos
push
inc
lea
addr16
xchg
outsb
rol
adc
cmpsb
out
ljmp
pop
ljmp
and
xor
sbb
jne
sbb
icebp
sahf
add
pushl
lahf
fucomp
mov
xor
or
flds
pand
xor
jne
and
xor
add
xor
pushl
sbb
and
std
push
sahf
jmp
pushl
in
push
push
cs
pushl
sarl
mov
or
aas
in
out
push
push
incb
cli
pop
xor
sahf
notb
jg
and
or
out
xlat
dec
out
xchg
je
adc
mov
add
stos
pop
xlat
and
out
shll
mov
push
inc
add
sub
add
mov
fistpl
and
stc
out
insl
dec
cmpsl
outsl
add
leave
push
inc
imul
icebp
push
pop
cwtl
call
outsl
pop
mov
jg
sahf
fnstenv
lret
sarb
mov
iret
out
mov
pushl
add
add
cli
testl
insb
sbb
js
repnz
in
loopne
xor
push
call
flds
insb
dec
push
test
sbb
test
push
pop
fimull
xchg
sub
aas
sbb
repz
repnz
dec
xchg
ror
mov
fidivrs
aas
lds
out
sub
std
out
pop
lds
jae
mov
or
add
add
mov
sahf
or
in
push
jg
jmp
movsb
imul
out
ljmp
or
push
addr16
call
inc
xchg
jg
mov
imul
inc
enter
inc
les
icebp
sti
or
clc
mov
push
mov
std
xchg
cmp
mov
dec
cmc
pop
add
sub
dec
sub
add
inc
jo
pop
jb
or
mov
add
push
int3
push
call
test
sbb
adc
std
cmp
push
sbb
dec
movb
push
and
xor
jb
dec
push
jle
push
data16
jne
push
jmp
stos
fs
push
sahf
ret
push
incb
add
arpl
inc
es
stos
xor
mov
dec
push
mov
ss
jne
push
mov
aas
lcall
outsl
fld
push
mov
push
pusha
insl
add
mov
clc
mov
aas
outsl
pop
mov
aas
fisttps
aaa
inc
jg
cwtl
repnz
inc
dec
ljmp
aaa
pop
xchg
add
add
cmp
cmp
mov
inc
out
mov
add
addr16
xchg
dec
fimull
shll
je
xlat
jle
aas
outsl
clc
mov
aas
enter
and
aas
enter
and
aas
out
out
call
push
sub
mov
push
leave
andb
dec
test
push
enter
add
lock
in
pop
jp
out
pop
add
hlt
negl
pop
jae
mov
pop
push
jns
mov
pop
push
std
dec
imul
pop
mov
dec
aad
call
dec
cmp
mov
pop
sub
in
testb
notl
jg
pushf
nop
jbe
into
xchg
fnstenv
movb
add
push
push
aas
leave
add
test
mov
jle
sub
or
adc
repz
jmp
cmp
loopne
enter
negb
add
in
das
je
insb
test
jg
push
in
jge
push
iret
call
push
dec
mov
adc
scas
outsl
cmc
cs
jno
push
cmc
jge
sbb
mov
mov
add
add
adc
call
and
cmc
jmp
loope
stc
call
add
testl
ud0
movsb
jg
push
pop
and
imul
sub
roll
cld
rorl
add
iret
gs
addr16
call
ljmp
fidivrl
std
addr16
push
nop
sti
jmp
pushf
std
incl
add
add
sbb
xchg
inc
add
popl
xor
int
sub
stc
out
lea
push
mov
add
pop
addb
push
incb
in
mov
or
adc
out
add
xor
clc
test
jno
add
movsb
dec
dec
outsl
add
jp
dec
push
aas
outsl
outsl
push
outsl
jbe
stos
fbstp
xchg
decb
add
add
in
into
testl
scas
int
dec
add
aas
xchg
les
outsb
dec
je
pop
inc
xor
jl
mov
jge
mov
jo
wrmsr
jge
jle
jne
dec
xchg
enter
pop
call
inc
or
cld
sbb
sbb
dec
insb
pop
jmp
in
fdivrs
mov
inc
shl
fistps
add
lds
dec
mov
push
cld
les
jl
inc
adc
jg
dec
jge
jge
arpl
orl
mov
out
mov
push
imul
sti
mov
cs
push
clc
jge
jmp
cmp
mov
js
std
push
push
call
pusha
mov
dec
cmpl
add
jno
std
cmp
ljmp
jnp
fnstcw
std
pinsrw
jnp,pn
pusha
mov
icebp
add
inc
out
aas
jmp
stc
jns
adc
arpl
stc
jns
fs
jb
jbe
inc
les
jp
rorl
out
aas
jmp
stc
jns
aam
arpl
fs
mov
mov
std
addr16
xchg
inc
add
pop
in
testl
add
pop
add
jne
pop
das
xor
add
ljmp
add
inc
add
dec
in
negl
add
rdmsr
stc
add
test
inc
jmp
push
bound
mov
add
cmpb
jae
mov
movb
cmpsb
in
mov
fs
lcall
dec
jmp
aas
adc
sbbb
add
sbb
mov
xorps
pop
incl
jecxz
fildl
stos
jg
test
ljmp
fisttps
jae
xchg
lahf
pop
imul
lock
into
pmovmskb
sbb
loopne
mov
sarb
inc
decb
sub
mov
mov
push
inc
incb
add
xor
gs
inc
inc
shlb
dec
nop
repnz
nop
ljmp
and
daa
dec
imul
sbb
mov
xor
inc
jns
into
dec
jo
sbb
jns
into
cmp
push
sub
inc
xchg
rorb
adcl
ja
inc
add
icebp
stc
js
jns
jo
inc
loopne
cld
inc
add
add
js
sub
js
sub
stos
mov
leave
xor
cmp
js
and
jns
inc
jmp
sahf
inc
test
js
jns
jo
inc
cwtl
lea
std
jns
xor
jno
sub
sub
jns
and
out
std
inc
cld
xor
ss
jns
orb
cs
cmp
es
sahf
int3
jge
std
pop
mov
pop
sub
add
add
add
sti
idivb
jae
push
jne
jmp
cmp
mov
rorl
xchg
iret
call
pusha
divl
xor
loopne
adc
in
inc
jmp
std
jne
add
int3
push
call
loope
stc
decl
or
leave
adc
add
cmpsb
add
add
adc
std
incl
dec
gs
mov
fcmovnb
std
jne
mov
add
mov
inc
add
aas
or
mov
call
lcall
or
or
or
out
mov
add
call
push
aas
leave
inc
imul
inc
je
dec
mov
cmpsl
insl
aad
add
add
sub
js
inc
pop
aas
cmp
jmp
movsb
dec
imul
pusha
test
call
insb
sub
call
mov
aas
je
fbstp
sbb
mov
daa
in
decb
dec
add
hlt
ret
mov
or
lock
loopne
inc
jae
clc
sti
sarb
xor
add
shlb
xor
mov
inc
push
enter
pop
call
add
sti
jmp
sbb
mov
sbb
or
jae
mov
pusha
ljmp
pusha
clc
out
push
jne
dec
sbb
not
push
call
add
sti
jmp
insl
movsl
push
inc
xor
or
test
inc
lods
cmp
add
and
out
cmp
mul
call
pusha
sbb
push
js
ret
call
sbb
add
cmc
iret
or
cmp
or
cmp
jnp
sub
jae
outsb
jle,pn
ret
and
inc
insl
mov
sar
sub
loope
dec
decb
jbe
inc
and
sub
or
cmp
std
pushf
add
add
shrb
sub
enter
inc
les
dec
cld
or
jnp
std
out
lret
or
push
cmp
in
lahf
xchg
aaa
insb
sub
loopne
cmp
adc
call
push
decb
push
cmpsb
pop
leave
insb
push
int3
std
jne
lahf
fsts
mov
add
and
adc
data16
or
add
add
add
pop
add
stc
hlt
rcrb
inc
add
xor
ljmp
dec
out
std
jne
lahf
push
decb
add
movl
incl
sahf
subb
mov
ret
push
mov
lea
fildl
adc
outsl
cmp
xor
mov
sub
cmp
lea
add
add
inc
mov
cmpsl
inc
jecxz
mov
mov
xorb
xchg
mov
jo
cmp
cmpsl
pop
add
aas
test
adc
push
mov
mov
dec
call
inc
aas
cld
cmp
dec
fidivl
adc
jae
dec
test
jb
rcll
enter
icebp
fidivrs
mov
add
into
cmp
mov
jp
jno
cmp
and
add
mov
and
call
aad
sti
idivl
les
arpl
or
mov
mov
jo
cmp
sti
out
sub
pop
cmp
jno
or
push
cmp
dec
sti
aas
cmp
mov
sub
es
jl
aas
insl
mov
sbb
xor
add
loop
out
mov
xor
enter
insl
push
xchg
xor
adc
scas
mov
std
loop
cmc
pop
cmp
pusha
addl
cmp
sbb
jmp
std
adc
sbb
into
enter
jb
repnz
sub
jae
jle
dec
insl
mov
add
mov
mov
movb
add
add
jno
cmp
inc
pusha
movsl
das
je
or
dec
daa
push
fs
sub
jns
add
lret
inc
jb
inc
out
inc
cld
lcall
push
inc
sub
icebp
mov
mov
and
add
icebp
jne
mov
push
decl
call
cmp
je
scas
jp
incl
add
add
or
mov
rcrb
stos
cmp
stos
or
lret
in
mov
dec
push
pop
pop
add
mov
in
aas
loopne
out
or
sar
mov
mov
aas
popa
push
shlb
inc
out
add
aas
push
mov
add
stos
call
stos
incl
add
lret
fwait
xor
jecxz
imulb
sub
je
dec
xlat
adc
popa
or
adc
inc
pop
mov
lods
packuswb
call
mov
xor
out
insb
cmp
mov
xor
inc
lods
scas
cmp
xor
xor
es
cmp
aaa
sbb
outsl
and
cmp
pop
iret
cmp
outsb
movsb
cmp
pop
imulb
add
add
pusha
out
aas
enter
enter
inc
stos
xor
insl
into
xchg
fdivrs
adc
enter
inc
insl
add
enter
enter
test
mov
out
adc
movl
sarl
insl
mov
shrl
scas
push
pusha
mov
aas
enter
leave
push
mov
insb
mov
add
dec
pusha
mov
cmp
inc
hlt
push
push
outsb
push
mov
inc
outsb
jae
or
sti
ret
xchg
std
out
xor
adc
pop
inc
insl
jae
adc
inc
or
mov
arpl
stc
xchg
mov
jae
imul
jmp
cmp
mov
xor
or
push
mov
outsb
xor
jae
add
add
aas
inc
jge
jmp
add
mov
sub
push
cmpxchg
or
fiadds
ret
sbb
push
mov
mov
add
push
ret
loop
aaa
mov
inc
pushf
push
pushf
fisttpll
movl
pushl
std
jne
lahf
les
fnstenv
add
push
mov
mov
or
mov
stc
aaa
xchg
pushl
call
lea
iret
call
decb
cltd
dec
push
ss
stos
sbb
es
lcall
sbb
add
decb
push
decb
push
mov
sar
jb
sub
push
jne
je
add
das
xchg
lods
pop
xlat
sbb
inc
subl
rorl
mov
dec
xor
or
test
cmp
lods
pop
addr16
jo
lods
pop
mov
data16
hlt
jmp
lret
mov
dec
stos
inc
loopne
stos
cmp
out
ret
das
sub
test
movsl
enter
mov
add
andl
enter
je
xor
out
aas
subl
enter
insb
fidivl
enter
cmp
inc
add
inc
mov
mov
pop
lcall
jne
xor
push
jmp
jmp
add
inc
imul
shll
pop
or
insl
sbb
jmp
add
add
push
out
mov
add
cmp
jg
std
push
std
push
in
pusha
cmp
subl
iret
push
insb
jno
stc
imulb
call
insb
cmpl
scas
mov
icebp
into
or
add
sub
push
std
scas
mov
hlt
cmp
subl
jbe
mov
add
add
daa
les
incl
xchg
push
lds
pop
in
mov
es
test
outsb
fwait
push
jle
or
es
mov
in
fwait
incb
push
stos
mov
imul
or
mov
lcall
icebp
lcall
add
add
ljmp
std
jne
lcall
jmp
repnz
aas
xor
js
insb
dec
xor
call
movsb
sbb
cltd
dec
jno
leave
jge
add
or
lock
test
add
stos
dec
inc
sub
add
lret
outsl
and
adc
sub
mov
xchg
xchg
mov
aam
cltd
xor
xor
call
das
je
jns
lods
enter
ret
jmp
das
push
inc
sbb
aas
les
mov
enter
fsubr
sbb
or
xor
iret
xchg
jno
jle
insb
cmc
sub
pushf
push
mov
cmp
sub
rorb
call
add
adc
xor
stc
xchg
fwait
add
add
test
sbb
mov
jo
das
add
xchg
sbb
push
sahf
lock
mov
push
pop
call
sbb
push
xor
shll
mov
pop
sbb
mov
xor
testl
sub
jae
xor
stc
sahf
dec
insl
pop
int
pushw
or
xchg
dec
sub
jae
inc
scas
stc
outsb
add
add
out
add
mov
aas
jmp
jge
aam
insl
scas
inc
outsl
pushw
les
test
gs
aam
add
leave
int3
call
push
leave
pusha
std
xchg
hlt
insb
nop
enter
sub
push
bound
cmc
pcmpgtd
push
cmp
pop
fiadds
gs
pusha
xchg
add
movb
xchg
inc
test
call
add
cs
call
enter
mov
addr16
sbb
dec
sbb
push
mov
addr16
mov
jae
in
mov
push
mov
jb
xlat
push
call
pop
in
test
sti
ljmp
jl
xchg
ffree
add
jecxz
pop
inc
movb
dec
test
call
sar
incl
add
mov
add
add
lcall
xorl
jo
xor
test
cld
out
push
das
pop
mov
aas
leave
push
jno
jo
jb
scas
add
cmp
pop
stc
out
dec
cs
mov
cli
shl
insb
add
xor
test
lcall
les
push
add
add
mov
inc
inc
jmp
add
aas
lcall
inc
enter
aad
add
sub
add
enter
enter
fsubr
sbb
pop
out
aas
jo
loopne
bound
or
out
or
cmpsl
imul
add
enter
out
inc
aaa
add
mov
xor
call
add
enter
shlb
adc
push
enter
pusha
divl
aas
enter
mov
imull
fwait
add
lea
add
repnz
std
out
test
sar
cld
mov
aaa
cld
or
jns
std
cmp
enter
int
imul
xlat
adc
adc
cmp
add
scas
or
jmp
out
aas
jmp
jge
in
cmp
mov
or
add
cmp
add
lds
out
arpl
jb
pop
pop
xor
add
sti
push
add
clc
jb
pop
decl
call
mov
add
loopne
jmp
add
pushf
loope
add
loopne
push
sbb
les
mov
xchg
mov
xchg
or
addl
je
enter
jmp
mulb
int3
clc
jb
or
mov
pop
ljmp
dec
xor
ret
push
mov
shl
jnp
push
aas
mov
inc
inc
repz
aas
jp
mov
imul
test
jmp
sbb
push
mov
mov
mov
dec
xchg
in
cwtl
call
sub
mov
xor
ljmp
pusha
push
and
add
stc
out
lret
mov
push
cltd
into
lods
xor
pushl
jno
or
add
lcall
mov
or
pushf
das
sbb
sub
pop
mov
add
lock
sbb
out
mov
mov
sub
iret
sbb
lock
sar
into
scas
inc
jo
pop
mov
subl
nop
pop
xor
mov
pop
adc
pusha
sbb
aas
enter
enter
dec
stos
sub
add
push
pop
call
sub
aam
sub
pop
inc
inc
jnp
call
rclb
roll
cs
es
popf
fimull
jae
ret
test
pop
std
loop
flds
jmp
fwait
pop
std
jmp
pop
push
jb
cli
push
adc
add
inc
pusha
jb
sti
pop
sub
daa
aam
cmpl
or
jmp
fbstp
in
and
pop
jae
addr16
inc
jecxz
std
add
je
outsb
and
decl
mov
jmp
scas
decb
es
ljmp
sbb
fldenv
jne
mov
inc
fsts
add
lcall
mov
jne
shrb
push
lret
fsts
add
ljmp
jne
mov
shrb
mov
sub
mov
incl
jno
ffree
add
aas
jno
add
outsb
add
aas
inc
pop
push
mov
ljmp
sbb
mov
jno
add
ds
and
je
leave
loop
loopne
stc
mov
inc
push
mov
xlat
jle
inc
push
inc
je
jp
or
mov
jbe
stc
push
aad
cmpb
push
out
mov
add
in
outsl
inc
and
sbb
cld
dec
es
cli
xor
add
jno
inc
arpl
sbb
xor
es
push
add
add
and
aas
or
dec
andb
movsb
pop
xorb
or
test
enter
out
ret
shr
aam
sbb
push
es
sbb
int3
stc
add
cli
mov
outsl
out
aas
enter
test
cwtl
pop
mov
enter
add
scas
inc
pop
adc
pop
stos
xchg
and
add
add
scas
and
xor
stc
jne
add
mov
leave
std
mov
loope
cli
cmp
call
inc
xchg
outsb
ljmp
data16
loop
aad
repnz
adc
adc
rcrl
pop
std
mov
pop
std
bound
pop
mov
repz
mov
loope
rolb
add
jl
cmc
cmp
push
rcl
std
cmpsb
int3
dec
sarb
add
jns
jbe
add
add
mov
shll
inc
lock
add
vandnps
movsb
decb
lahf
sbb
mov
iret
nop
out
pop
add
push
movsb
je
cld
call
nop
insl
testl
cs
add
pop
mov
nop
mov
movsl
je
mov
iret
push
sub
imul
pushl
stos
in
add
les
sarb
enter
and
cmc
add
outsl
stos
pop
aad
and
mov
stos
shll
pushl
sbb
aas
popa
stos
incl
add
cmpsb
popa
stos
add
popa
add
ljmp
or
aas
call
scas
addr16
fcoms
test
pushl
jne
imul
dec
test
sbb
mov
add
negl
je
jp
adc
add
repnz
lahf
sub
out
mov
fisubrl
add
jmp
aas
ret
cmpsl
xchg
add
add
loopne
xchg
inc
pop
sub
lret
out
inc
mov
notb
fisttpll
xchg
pop
iret
movsl
js
call
and
push
and
ud0
push
and
push
cmp
dec
std
cld
jb
mov
lock
mov
call
and
out
inc
dec
add
push
or
add
int
add
add
sti
icebp
stos
push
or
jmp
sbbb
cmp
lds
push
std
jmp
inc
enter
or
jmp
clc
gs
insb
add
fs
popa
push
ret
pop
inc
inc
inc
lret
filds
roll
add
or
test
aas
inc
adc
sarb
pop
add
cmp
je
test
lea
fcompl
add
add
pop
jmp
sar
mov
loope
jae
roll
cmpsl
decb
cmp
addr16
xor
lcall
mov
inc
bound
std
mov
mov
ret
xor
jmp
jne
test
icebp
fmull
std
call
leave
jg
jle
std
jmp
cmp
add
cmpsl
call
stc
add
sar
dec
test
icebp
mov
add
lods
add
push
sbb
sbb
and
cld
aas
lahf
add
or
lret
jmp
pop
add
fbstp
mov
ljmp
pop
pop
jno
pop
sub
ds
add
or
jno
popa
add
xchg
add
add
sub
sub
popa
add
call
jmp
clc
and
clc
popa
add
aas
aaa
insb
cmpsl
fldcw
add
inc
aas
push
inc
jae
enter
popa
push
jb
enter
push
fimuls
pusha
jno
aas
enter
push
pop
pop
or
enter
out
push
cmp
add
add
aas
mov
and
push
push
out
mov
movl
test
sub
loop
mov
clc
cli
or
roll
sub
scas
cs
mov
cmpsl
call
push
out
lret
mov
enter
fsubp
push
dec
int3
add
mov
dec
test
mov
add
cmp
inc
mov
add
mov
or
call
scas
lea
push
jno
ret
or
scas
subb
cmp
lds
push
std
jmp
inc
enter
or
jmp
clc
jns
data16
inc
ds
aad
push
push
add
mov
mov
sub
add
cmp
add
jmp
add
add
push
adc
out
addb
add
cli
jmp
test
decl
lret
inc
jg
add
lret
push
int3
call
lds
cmp
decl
in
push
lds
cmp
add
test
repnz
fwait
addr16
jmp
les
mov
add
add
bswap
ret
stos
aas
jmp
pop
mov
inc
lods
outsl
add
cwtl
add
pop
sub
and
sbb
into
pop
sbb
cmpsl
aam
mov
sub
shrb
sub
cli
push
movl
add
aas
pop
add
aas
pop
sub
inc
sub
mov
andl
mov
add
add
xchg
xchg
inc
aas
dec
xchg
add
popa
push
shlb
jmp
cmp
adc
add
aas
popa
add
inc
rcrl
out
stc
call
or
sub
pop
push
sbb
mov
lods
dec
cmpsl
add
loop
sub
leave
out
out
out
aas
subl
add
inc
add
add
imul
enter
enter
dec
sahf
sbb
sahf
sbb
mov
dec
push
push
std
sub
aam
xchg
and
sub
add
mov
iret
jg
add
enter
lods
cmp
stc
pop
add
push
dec
std
sub
add
mov
rcll
xchg
call
cmp
xor
dec
pop
xor
add
add
arpl
sarl
xlat
cli
ss
shll
and
mov
mov
sub
and
mov
stos
subb
dec
and
mov
mov
and
or
and
ret
or
push
lock
subb
dec
inc
add
insl
inc
andb
add
insl
dec
andb
inc
add
insl
push
adcb
inc
add
leave
std
and
jns
popa
andb
and
jns
imul
cltd
outsb
jno
pop
std
and
test
std
and
mov
std
and
add
add
enter
iret
addl
pop
add
and
addl
pop
add
sbb
addl
pop
add
and
addb
fisubrs
pop
popl
mov
lahf
add
bound
test
jbe
mov
pop
pop
test
push
ffreep
mov
daa
test
es
add
add
je
sarl
sub
mov
enter
enter
dec
test
or
inc
loope
dec
test
lock
cmp
dec
test
fsubs
push
loope
dec
test
shlb
loopne
dec
test
test
roll
dec
sub
add
nop
movsl
repz
into
loopne
dec
sub
movsl
add
and
add
movsl
roll
dec
sub
movsl
roll
dec
sub
movsl
add
ret
outsb
pop
pop
subb
pop
add
sti
jg
cmp
and
fcomip
jg
cmp
and
fucomip
jg
cmp
and
add
add
pop
add
jg
cmp
and
pop
add
mov
jg
cmp
and
pop
add
jo
jg
inc
dec
and
pop
add
cwtl
inc
jg
cmp
popa
mov
jg,pt
inc
dec
and
pop
add
cmp
repnz
int3
loop
lret
mov
add
lods
jl
out
popa
add
mov
push
dec
cmc
add
add
repz
add
fcmovb
cmp
fcmovb
add
and
add
outsb
dec
std
call
pop
add
and
in
add
add
dec
cmc
inc
and
ret
cmp
outsb
in
or
data16
push
jb
add
jnp
faddp
add
popw
add
aas
je
add
pop
xchg
pop
add
add
outsb
add
aas
sbb
std
jmp
pop
or
std
bound
cmp
andb
aas
pop
add
cmp
cmp
jge
xlat
jmp
fcomps
add
insb
add
aas
pop
xchg
pop
xchg
add
popf
std
pushl
sar
rorl
mov
jge
add
or
sbb
pop
add
inc
pop
enter
xor
add
bound
mov
sti
sbb
cmp
push
and
out
inc
shr
jle
fsubr
add
push
push
ret
stc
dec
lret
pop
aas
enter
enter
int3
out
mov
push
jo
cmp
out
xor
inc
daa
jl
or
add
jmp
push
adc
in
test
out
add
add
enter
in
add
shl
add
push
push
jle
loopne
add
sbb
inc
mov
enter
in
push
lret
inc
sbb
cmp
inc
cmpsb
ret
loop
jmp
cmp
jg
cmp
add
filds
cmp
ljmp
mov
fmul
push
xchg
movsl
stc
mulb
add
sub
mov
test
call
cmp
std
push
dec
inc
mov
jb
and
aas
test
add
test
lret
add
enter
xchg
sbb
lret
xchg
add
fisttpll
add
lret
push
pop
pop
mov
fsin
in
adc
add
pop
sbb
add
add
ret
sbbb
lret
lahf
xchg
sbb
leave
xchg
insl
dec
adc
sbb
hlt
sti
ret
pop
out
out
xlat
rcll
stos
int
add
xor
add
dec
adc
mov
xor
adcb
xor
add
mov
add
das
pop
sarl
decb
jge
icebp
ljmp
add
inc
add
mov
mov
add
imul
add
das
jp
das
xor
add
xor
cwtl
jne
sarl
mov
mov
in
mov
push
mov
lods
add
aas
das
jl
sbb
mulb
arpl
jnp
ret
jmp
jl
lret
add
enter
add
es
mov
pop
mov
pop
jmp
pop
add
call
mov
or
add
pushf
ret
pop
mov
iret
pop
aas
enter
enter
adc
xchg
out
push
inc
dec
ljmp
xchg
call
out
je,pn
shlb
rcpps
push
add
add
out
mov
fsubr
add
push
gs
cmp
add
jl
xchg
cmp
add
cmp
add
roll
cmp
xchg
cmp
add
cmp
add
mov
adc
cmp
pop
cmp
lret
dec
mov
push
inc
pushl
movl
cld
sub
fnstcw
enter
fiaddl
cmp
xchg
add
add
movb
jae
adc
cmp
mov
movb
push
roll
sbb
mov
inc
push
sbb
cmp
jae
xor
enter
das
add
xchg
push
mov
pop
dec
or
xchg
rolb
add
cmp
roll
les
add
jae
fisttpll
add
movb
push
mov
add
add
add
roll
push
enter
mov
add
fsts
inc
fldl
ror
adc
lcall
and
jbe
into
cs
stc
jmp
inc
out
aas
cmpb
fwait
adc
test
stos
pop
jge
add
xor
add
mov
mov
cmovae
add
add
add
out
jns
inc
sub
add
mov
add
das
js
daa
xor
add
insl
jns
mov
xchg
sbb
jp
aaa
sub
add
pop
sbb
das
add
aas
cmpsb
adcl
das
add
std
cmpsb
icebp
add
adc
ljmp
pusha
test
out
decl
out
add
add
out
ret
add
dec
gs
enter
mov
add
jecxz
add
mov
jecxz
aas
dec
insl
in
cmp
out
mov
add
aas
enter
out
les
ljmp
inc
xchg
in
dec
sbb
in
lds
decl
inc
jo
sub
out
jg
test
cmp
out
ret
add
push
gs
add
add
add
or
lcall
lret
add
scas
loopne
addr16
add
xor
in
enter
jecxz
jmp
nop
aas
std
bound
sbb
call
cmp
pop
bound
push
xchg
pop
aas
std
sub
insb
sbb
cmp
xchg
lret
add
mov
enter
fwait
ret
push
inc
lds
xchg
push
bound
add
mov
cld
sub
enter
cmp
xchg
mov
mov
shl
mov
and
lret
mov
jge
xchg
lret
adc
paddw
lret
test
lret
sub
mov
cli
jns
push
mov
int3
incl
add
jmp
adc
ret
push
call
pop
inc
mov
add
outsl
push
mov
lret
mov
sbbl
mov
das
xchg
inc
mov
or
adc
pop
mov
sbb
mov
pop
mov
into
jle
pop
daa
jl
das
and
add
ljmp
add
add
mov
inc
aas
std
pushl
and
add
ljmp
ds
add
das
jbe
ss
mov
ds
pushl
test
pop
inc
das
add
xchg
in
aas
das
jp
das
sub
add
out
inc
lret
decl
add
mov
jl
xlat
jecxz
aas
dec
insl
jmp
enter
insl
add
add
add
enter
out
mov
out
jmp
sbb
sbb
in
push
sbb
pop
lds
pushl
pop
in
mov
out
aas
insl
hlt
cmp
out
mov
jmp
aas
inc
mov
inc
cmp
xchg
push
inc
or
dec
bound
repnz
sbb
cmpsb
jae
add
cmp
add
into
daa
movsl
add
add
aam
push
inc
mov
daa
lods
clc
rorl
bound
and
cmp
out
ret
add
call
inc
mov
inc
push
out
in
mov
xchg
add
jecxz
cmp
bound
and
ret
inc
cmp
mov
push
inc
add
cmp
std
jae
out
ljmp
add
ret
enter
aaa
add
es
add
outsl
mov
jmp
test
add
mov
push
sbb
out
sbbl
movb
pop
xchg
sbb
movb
sbb
mov
movsb
clc
sti
ret
add
or
xchg
std
out
mov
inc
mov
add
loopne
add
mov
pop
movb
fsubrs
add
push
negb
add
dec
outsl
mov
outsb
inc
out
scas
inc
add
outsb
clc
adc
add
mov
dec
add
das
add
mov
test
and
das
add
aas
jle
sbbb
add
ss
call
cmpsb
pop
jge
add
add
add
std
sub
or
addb
sub
ret
adc
in
push
mov
sbb
push
add
icebp
mov
mov
add
xlat
jecxz
aas
dec
insl
jmp
enter
imul
jge
out
mov
iret
clc
cmp
jecxz
jp
call
inc
idiv
fdivrs
jo
add
add
out
jg
test
cmp
out
ret
add
dec
gs
enter
dec
mov
xor
incl
mov
filds
les
out
push
out
rcr
jb
inc
out
push
pop
add
ss
mov
test
enter
or
imul
in
fldcw
mov
add
add
push
mov
lret
stc
ret
xchg
and
sub
in
cmp
or
jmp
pop
enter
inc
fs
cmp
add
push
xchg
xor
enter
mov
or
or
push
cmp
jmp
addr16
add
sub
jno
add
sahf
xchg
add
add
ffree
mov
lods
inc
or
lret
or
daa
inc
dec
xchg
and
add
lret
add
out
add
push
lret
mov
ror
add
out
enter
add
dec
cmc
add
add
addb
js
add
lret
lods
leave
decl
lret
arpl
add
add
ret
inc
push
and
and
add
aas
ds
aas
es
ds
dec
xchg
inc
mov
test
and
add
mov
dec
and
pop
or
aas
jp
jb
stos
cmp
adc
jmp
fimull
jbe
mov
add
jne
sub
add
mov
movl
cmp
stos
inc
mov
xorb
jbe
test
and
enter
dec
cmp
aas
enter
enter
add
int3
rolb
dec
dec
icebp
add
enter
fdivs
and
cmp
aas
inc
sbb
sub
add
enter
inc
lret
pop
aas
enter
enter
add
mov
add
adc
and
sub
out
shll
pop
inc
mov
jbe
mov
mov
jmp
mov
in
mov
loop
enter
jmp
jns
cwtl
add
jb
std
jb
in
adc
in
sbb
in
ds
bound
popf
ret
dec
xor
shll
mov
sahf
cs
insb
lds
add
push
jae
jmp
push
mov
ljmp
push
pusha
in
sbb
aaa
enter
cltd
dec
bound
and
shlb
mov
mov
push
cwtl
mov
mov
inc
enter
insb
int
jo
inc
in
cmc
add
aas
lret
sar
leave
gs
ss
jp
jb
in
lcall
add
add
xchg
and
repz
add
aaa
xchg
add
js
xchg
sbb
das
out
std
jge,pn
es
std
ljmp
lds
and
movb
sbb
and
lret
je
imul
test
xor
ljmp
test
test
xchg
xchg
xchg
pop
pop
aas
jl
push
add
add
test
pop
mov
and
and
and
outsb
xchg
or
jg
jg
pop
pop
sbb
in
sub
pusha
jne
mov
arpl
push
pop
mov
test
stos
inc
xchg
test
mov
xchg
and
add
xchg
inc
pop
add
aas
addr16
stc
rcll
jo
mov
aas
iret
inc
out
fildll
lds
mov
add
jg
les
outsl
xchg
sarb
cs
dec
enter
pop
jecxz
addb
jo
out
orb
mov
xchg
pusha
adc
jge
xchg
aas
jno
add
enter
pushf
pusha
adc
in
add
enter
or
pop
aas
enter
inc
cmpsl
pop
add
add
add
mov
cmp
jecxz
aas
inc
sub
push
sub
sti
pop
aas
enter
incl
mov
aas
add
int3
add
mov
add
cmp
xchg
int3
add
pop
xor
add
mov
adc
cmp
xchg
and
add
mov
xchg
pop
pushf
mov
cmp
in
enter
int3
add
add
add
jl
dec
inc
sahf
add
ja
pop
sar
mov
add
add
cmp
inc
int
dec
shl
inc
dec
or
cmp
test
dec
jecxz
mov
test
add
add
cmpsb
fimuls
xchg
xchg
lea
push
xlat
ds
and
xchg
dec
incl
les
adc
test
leave
add
aam
insb
xor
test
test
out
int
and
lods
inc
adc
es
daa
ret
inc
xchg
dec
lea
xor
lea
call
mov
iret
sub
mov
enter
dec
and
lret
xor
add
out
xor
jae
mov
push
add
and
pop
cmp
test
add
mull
add
mov
sbb
push
out
test
cli
std
mov
sbb
into
fsubr
mov
sbb
xchg
cmp
add
aas
and
add
aaa
test
cmp
pop
add
aas
faddl
mov
push
jge
cmp
add
jnp
dec
mov
adc
push
or
xchg
add
fcomps
or
inc
sbb
stc
jl
sub
jl
inc
mov
call
dec
sbb
jb
in
inc
and
stc
mov
lret
inc
rolb
seta
push
fstp
clc
pop
inc
sub
sbb
lahf
add
jo
mov
mov
add
and
mov
rcll
add
std
mov
or
and
jg
pop
lea
and
jg
sub
ret
shll
pop
cmpb
clc
jmp
test
jg
and
cmp
sub
push
pushf
and
or
mov
mov
out
outsb
sub
jb
in
bound
push
jb
pop
test
dec
sub
stos
mov
and
mov
call
scas
jg
cmp
les
adc
cmp
push
insl
jnp
lahf
adc
add
xor
fcomps
and
inc
xchg
xchg
outsb
mov
dec
and
cltd
dec
mov
inc
pop
sbb
xor
fcomps
rol
mov
out
add
add
ret
movl
mov
les
add
xchg
and
int
adc
data16
jg
jo
jg
push
xchg
jg
and
mov
dec
mov
push
nop
stc
shll
xchg
aaa
inc
cli
fiadds
push
mov
push
jl
pop
clc
repz
and
mov
mov
out
lock
rcl
rcll
add
std
movsl
leave
mov
cmpsl
out
std
test
out
mov
call
mov
sub
cmp
mov
cmc
iretw
testl
and
inc
adc
jne
sbb
adc
and
add
add
je
js
mov
and
int
into
daa
leave
jne
adc
jb
mov
lret
sub
movb
add
test
lahf
add
aas
inc
jmp
xor
idivb
out
mov
adc
add
cmp
xchg
pop
pop
cmp
out
fsubrs
mov
cmpb
xchg
jecxz
push
cli
push
mov
add
mov
or
mov
sti
jecxz
cmp
jb
out
stos
or
sbb
into
hlt
mov
add
roll
mov
pop
in
test
inc
loop
aas
push
mov
and
std
jge
sub
mov
xchg
call
aas
inc
add
cmc
outsl
out
fprem1
push
lea
sbb
add
movsl
lods
or
dec
in
call
jae
sub
mov
and
add
add
jecxz
cltd
push
aas
into
add
jns
cmp
stc
out
aaa
es
add
into
add
xchg
cwtl
and
es
sbbl
dec
lock
test
lret
add
inc
int
add
and
pop
or
lret
dec
rorb
cmp
mov
xchg
daa
jnp
dec
inc
fmuls
add
add
pop
and
add
negl
xor
xor
andb
jge
into
dec
fxtract
ljmp
fmuls
mov
into
call
sbb
aad
jle
stos
cmp
and
cwtl
cmp
and
stos
inc
and
out
push
mov
fldenv
mov
mov
icebp
loopne
roll
add
stos
add
xor
and
add
xor
push
pop
add
pop
push
rsm
mov
std
ljmp
sub
div
std
js
cmp
mov
sbb
fnstenv
mov
jno
sbb
ds
push
mov
jge
in
or
arpl
stos
jge
add
jae
aas
jb
xor
jl
in
das
jge
in
iret
sub
in
jmp
aas
fwait
lock
enter
enter
movsb
in
ret
and
aas
mov
push
ds
fidivrl
out
pop
add
fdivrl
push
icebp
xchg
fsubs
and
jb
push
std
cwtl
push
mov
add
mov
mov
add
add
xor
push
push
das
adc
in
adc
dec
sbb
and
cli
cmova
ljmp
mov
int3
add
xchg
ja
das
push
jns
and
sbb
mov
iret
faddp
fisubs
inc
or
inc
enter
inc
mov
jmp
cmp
add
add
add
lret
cmp
jmp
dec
pop
add
test
sub
push
add
add
ljmp
es
int3
add
dec
nop
and
pop
sub
pop
add
out
lea
pop
lea
xchg
mov
int
adc
movl
jmp
sahf
pop
and
push
sti
jne
sahf
dec
and
add
ds
xchg
adc
movl
mov
jmp
mov
mov
inc
jmp
sahf
xchg
xor
jp
push
jecxz
std
pusha
and
adcl
jmp
ret
int3
xor
aas
cmpsb
push
and
xchg
mov
or
add
imul
adc
fstl
lods
cmp
xor
jns
mov
sub
sbb
std
fcoms
and
pop
xor
push
insl
xchg
mov
std
les
push
push
mov
mov
out
cmp
pop
and
enter
xchg
ret
xor
jnp
aaa
mov
jnp
das
mov
ret
adc
jl
jp
das
sbb
dec
and
sbb
ss
adc
daa
data16
add
add
fisubrs
push
cmp
out
inc
inc
gs
enter
rcl
cmp
out
cmp
xchg
imul
outsl
cmp
outsb
add
mov
fldcw
sub
xlat
push
aas
enter
cmc
incl
push
push
leave
xor
pop
xchg
and
lcall
stc
out
and
add
add
popl
adc
mov
pop
and
jmp
cmp
enter
in
adc
xchg
pop
sub
in
out
cmpsb
adc
lds
push
bound
xor
xchg
add
and
daa
dec
and
cmp
jae
mov
enter
fldl
in
enter
inc
sti
add
add
shr
cmp
lret
les
jl
inc
sti
add
call
jmp
xchg
push
pop
aad
sti
pop
in
cmp
outsb
les
ret
sub
call
inc
xchg
add
je
add
mov
call
dec
push
popf
call
mov
push
mov
or
dec
add
out
xchg
add
add
pop
std
jmp
sub
lcall
lds
add
sub
leave
cwtl
xor
mov
daa
jo
mov
adc
aas
xor
sub
jp
cmp
add
push
stos
sbbb
xor
mov
xor
std
cwtl
adc
rclb
mov
cwtl
jg
cmp
add
add
mov
add
xchg
add
les
jnp
cmp
add
xor
jge
das
enter
push
or
enter
dec
jmp
mov
out
movb
mov
pop
and
push
and
pop
inc
enter
mov
dec
adc
enter
stc
jle
add
sti
jecxz
jg
xchg
sbb
in
jge
mov
sbb
outsl
ja
jp
out
push
mov
push
insl
ja
jmp
mov
push
stos
dec
cmpb
pop
or
add
inc
add
enter
add
push
les
jnp
push
loopne
icebp
cmp
add
mov
jecxz
jb
pop
out
adc
int
add
jo
in
int
sbb
add
jmp
pop
test
cmp
xchg
add
lea
add
xchg
dec
xchg
add
insl
js
xor
push
pop
dec
in
xchg
mov
std
sahf
mov
enter
or
add
push
int3
int3
sub
add
cmpsb
jae
push
add
add
and
add
sbb
add
mov
or
cmpsl
enter
dec
int
or
mov
aas
cmpl
gs
je
popf
shl
mov
decb
inc
movsb
mov
push
inc
movsb
out
sti
jmp
aam
js
add
aas
lock
sub
cmp
cli
mov
mov
jmp
jmp
inc
sbb
outsb
cmp
cmc
lret
mov
dec
fwait
sbbb
cmp
add
mov
jmp
xchg
test
cmp
popf
int3
das
and
add
jne
mov
std
jb
add
jle
cld
or
out
adc
stos
addl
in
decl
mov
out
mov
sbb
adc
sti
sarl
adc
dec
mov
mov
sbb
wrmsr
loopne
aas
enter
push
push
dec
jge
out
shlb
mov
jb
jp
iret
insb
push
mov
enter
add
mov
dec
add
les
bound
mov
sbb
jns
inc
movb
out
and
lock
add
inc
ret
loopne
mov
lret
add
std
sub
loop
inc
bound
cltd
out
int3
movl
sarb
mov
jg
inc
sbb
jmp
addb
add
add
ret
fadds
pusha
addl
imul
enter
inc
in
pushf
jle
add
jecxz
xor
into
xchg
mov
ret
jg
add
out
ret
xchg
mov
mov
popf
or
rolb
fdivl
push
add
add
add
popf
loope
es
inc
sahf
lahf
pop
or
mov
push
out
sbb
xchg
les
jne
add
dec
lds
add
cld
outsl
add
push
mov
add
push
ja
inc
sbbb
adcb
rcll
sbb
sub
add
or
test
xchg
loope
mov
pusha
jecxz
xor
mov
add
add
test
inc
inc
ja
push
inc
cwtl
ret
inc
xor
mov
pusha
inc
or
das
sub
xchg
ret
inc
inc
aaa
or
xor
add
jle
push
pop
jge
add
cmp
and
call
mov
call
les
call
mov
inc
xchg
movb
add
and
les
mov
add
inc
jmp
add
inc
jmp
add
inc
std
mov
push
xor
cmp
mov
mov
cmc
mov
out
mov
pusha
mov
and
adc
dec
dec
adc
out
adc
inc
xor
mov
fldcw
loop
out
add
add
mov
aad
add
xor
push
push
fstpt
pop
add
add
sub
pop
jg
push
leave
std
jmp
cld
cs
out
dec
jae
cmp
mov
push
in
push
ret
outsl
or
mull
in
pusha
ljmp
mov
push
mov
sbb
xchg
adc
lds
dec
into
sub
and
xchg
int
pusha
test
in
push
mov
aas
mov
pop
fcoml
and
jmp
xlat
push
cld
add
leave
pop
mov
jno
add
dec
jecxz
es
add
test
inc
fcmovnb
icebp
push
jle
mov
add
fdivl
int3
test
add
lret
andl
test
push
pop
cmp
addr16
pop
jne
inc
fcmovnb
adc
add
popf
das
fdivrl
enter
sbb
cmp
ret
mov
scas
mov
mov
or
push
xlat
pop
cld
add
pop
add
mov
push
aas
aas
push
roll
mov
in
cmp
movb
add
pop
and
jmp
inc
add
mov
add
mov
pop
aas
aas
cwtl
mov
in
and
add
shlb
mov
jle
idivb
movsl
add
aas
push
xchg
fsubrl
pusha
add
mov
push
sti
xchg
out
les
add
repnz
sbb
fsubrs
adc
add
aas
enter
mov
out
dec
dec
push
loopne
enter
repz
inc
aas
inc
mov
out
enter
pop
mov
aam
test
push
mov
inc
scas
fbstp
pusha
les
jo
adc
jo
cmp
inc
test
pop
icebp
outsl
mov
daa
decb
rcrb
add
outsl
or
push
add
clc
add
cmp
add
stos
dec
fsubrs
pop
mov
mov
pusha
jge
loope
sub
dec
fsubrs
sbb
das
sub
jecxz
jo
xchg
loope
repnz
dec
fsubrs
les
mov
pusha
xchg
loope
xor
or
loope
daa
add
testl
js
add
add
xchg
jae
pop
pusha
scas
insl
ret
ja
jb
jmp
iret
pushf
and
and
add
add
mov
fmull
push
sbb
cli
push
ds
mov
mov
repz
push
ds
idiv
sbb
push
ret
push
mov
aad
push
popf
mov
mov
mov
add
push
call
jle
outsl
inc
inc
inc
clc
push
and
cld
test
test
lea
hlt
dec
call
mov
inc
inc
clc
out
xlat
cld
stc
repz
lea
fsts
pushf
andb
sbb
or
or
das
push
mov
or
push
dec
xor
inc
mov
std
mov
rcll
loop
push
add
add
sub
jno
and
xchg
adc
fsubrs
jb
add
cwtl
fdivr
lock
aaa
cld
mov
aam
jp
mov
mov
mov
shr
insl
ret
inc
fldcw
adc
push
xchg
rcr
mov
inc
movsb
sarl
pop
mov
mov
seta
cli
or
fildl
add
xlat
imul
out
pop
loopne
push
bsr
pop
adc
fstpt
test
xor
sti
icebp
fisubl
outsb
inc
lea
insl
test
loopne
sbb
add
enter
inc
sbb
xchg
jecxz
mov
ja
cwtl
fmuls
out
aas
mov
jg
rorl
adc
inc
imul
add
add
add
loope
or
call
push
inc
lock
xchg
ds
inc
dec
inc
xorl
mov
push
jne
sbbl
mov
push
adc
sub
mov
out
push
mov
mov
inc
add
addl
add
pop
sub
or
test
add
inc
dec
cmp
andl
mov
cltd
sahf
add
lea
call
xor
push
mov
aam
or
and
fnstcw
or
jl
fildl
call
aam
jmp
add
mov
call
xor
fsubrl
mov
subl
icebp
jmp
add
icebp
out
cld
call
leave
out
lahf
stc
test
notl
xor
je
xchg
out
test
mov
je
aas
fmuls
mov
ds
mov
adc
std
mov
cmpsl
mov
jp
add
mov
cmpl
or
sti
push
std
aas
lahf
sbb
lret
mov
add
add
mov
std
aas
xor
mov
mov
jmp
pop
xorl
or
insb
shrl
gs
and
pushf
mov
mov
pop
mov
lret
hlt
mov
mov
cmpsl
or
and
mov
cs
jmp
adc
dec
push
inc
xor
pop
xlat
into
mov
mov
or
inc
xlat
inc
push
and
adc
xchg
into
bound
mov
out
ds
or
push
test
inc
out
aas
push
sbb
enter
mov
les
stos
call
push
inc
aas
xchg
fwait
arpl
repnz
ret
add
test
aas
jmp
rorb
push
jb
in
cmp
pop
clc
mov
add
xchg
mov
imul
aas
jmp
mov
ret
cmp
cltd
dec
pop
aad
enter
mov
sub
shr
in
jae
cmp
in
ret
add
ja
bound
mov
inc
add
add
or
pop
jg
push
je
rclb
adc
mov
pop
adc
add
add
iret
clc
test
test
lea
in
dec
call
shrb
inc
inc
lock
imul
repz
movsl
xchg
lea
push
call
or
cmc
test
cmp
lock
hlt
mov
cmp
outsl
inc
inc
inc
clc
xchg
sbb
fsubl
jecxz
dec
call
add
add
push
outsl
inc
push
inc
inc
call
sbb
xchg
aas
inc
lock
test
cld
fcmovnbe
mov
xchg
ds
mov
in
push
ret
push
xlat
addr16
rol
je
push
xchg
scas
in
jmp
add
inc
add
jecxz
push
cmpsl
sbb
mov
inc
xchg
test
aam
stc
push
xor
add
add
aam
mov
pop
jmp
std
inc
push
cmp
aas
fs
mov
repnz
push
jo
ss
enter
dec
rolb
or
fcoml
enter
mov
fcmovnu
add
popa
xchg
jl
add
int3
flds
add
dec
test
fs
mov
xchg
or
jge
add
mov
mov
fs
addl
dec
shll
insb
pop
imul
xor
pop
mov
test
adc
pop
add
jge
add
movsl
int
imul
call
push
jg
or
jnp
push
jg
mov
mov
add
in
add
xchg
out
add
sahf
or
mov
xchg
fwait
or
aam
hlt
mov
mov
jae
add
sti
dec
div
clc
repnz
fwait
test
cli
ss
mov
pop
push
loopne
in
xor
adcl
ljmp
add
mov
push
xchg
out
pop
lods
test
pop
add
add
enter
lret
out
add
out
add
leave
add
leave
add
out
add
out
add
leave
add
leave
add
cmpsb
leave
add
cmpsb
leave
add
xchg
leave
add
xchg
leave
add
cmpsb
leave
add
cmpsb
leave
add
xchg
leave
add
xchg
leave
add
leavew
add
leavew
add
push
leave
add
push
leave
add
leavew
add
leavew
add
push
leave
add
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
enter
enter
enter
into
mov
jnp
mov
test
test
push
pop
test
pop
pushf
test
popa
pusha
je
imul
dec
imul
adc
inc
xchg
dec
jbe
addr16
jl
sbb
adc
ror
add
add
xlat
or
data16
insl
add
push
adc
loopne
mov
push
fsubrl
add
add
pushl
sbb
outsb
loope
imul
test
xchg
nop
js
inc
jge
jbe
imul
jb
jle
jl
dec
insl
addr16
cwtl
outsl
sub
jmp
add
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
scas
add
and
bound
dec
add
in
dec
mov
movb
push
movb
add
add
movb
movb
movb
push
movb
push
movb
out
add
out
add
lds
add
lds
add
lds
add
lds
add
lds
add
lds
add
lds
add
lds
add
lds
add
lds
add
add
aas
out
add
aas
out
add
aas
out
add
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
aas
out
add
out
add
aas
out
add
aas
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
mov
adc
mov
push
fwait
enter
push
add
and
adc
jb
push
insb
jnp
adc
mov
out
add
add
sbb
or
mov
sbb
jno
add
gs
dec
aas
insb
push
push
sbb
add
sbb
ficoms
jo
lds
insl
add
enter
fs
cmp
jb
jmp
enter
scas
das
fdivrs
insb
jle
imul
enter
mov
mov
add
add
scas
xor
dec
mov
add
jp
cmp
jno
jne
push
cmp
jns
or
enter
js
sbb
or
add
outsl
jae
mov
cmp
add
mov
insb
insb
data16
jnp
add
xchg
jno
push
lret
push
shll
xor
push
add
add
leave
data16
push
imul
fs
popaw
jb
xchg
jno
mov
imul
les
mov
outsb
je
xchg
outsb
gs
push
push
pushf
jno
cmpsb
addr16
aas
lret
sub
bound
push
arpl
out
bound
int3
pop
adc
add
rcpps
add
fisubs
push
add
fists
das
filds
rolb
insb
pop
insl
int
bound
add
add
dec
push
arpl
jnp
ja
push
dec
jno
inc
push
add
jge
jo
lahf
push
arpl
sysexit
xor
sysexit
sub
pop
jae
mov
push
jbe
orl
mov
push
add
jo
push
add
add
jns
bound
gs
push
enter
jns
pop
sbb
or
outsl
add
aas
mov
adc
enter
insl
shlb
out
loopne
into
push
fadd
iret
fldcw
pop
aas
ja
dec
mov
lahf
add
enter
jbe
dec
aas
js
push
mov
mov
imul
add
insl
dec
push
arpl
push
add
add
aas
pop
imul
popa
dec
enter
je
inc
or
insl
jo
inc
outsb
arpl
or
popa
or
arpl
inc
js
add
outsl
insl
cmp
insb
add
into
bts
sbb
das
sbb
jae
add
arpl
in
outsb
arpl
xchg
ja
popf
xchg
push
xchg
mov
add
add
outsb
fwait
outsb
mov
je
xchg
pop
jns
insb
arpl
xchg
arpl
pop
insb
insb
dec
cmp
dec
pop
add
adc
cwtl
add
cltd
jb
add
mov
add
xchg
jbe
das
xchg
jno
cmpsb
xchg
arpl
mov
ss
add
pushf
imul
andb
outsl
data16
add
test
add
xchg
push
push
mov
jo
mov
push
arpl
mov
pop
push
out
jne
xchg
gs
gs
les
aas
fwait
push
push
pop
xchg
popa
fs
out
dec
addr16
mov
push
bound
fstl
and
push
arpl
int3
push
add
fisubs
sbb
add
add
add
into
pop
arpl
out
dec
pop
out
pop
insl
call
adc
aas
pop
pop
pop
jmp
cmovge
or
popa
rolb
pop
addr16
pop
cmpsb
push
pop
ja
pop
push
popa
pushf
dec
dec
das
aas
jl
popa
movsb
dec
dec
add
dec
add
jnp
insl
cs
outsl
dec
pop
push
enter
imul
push
add
pusha
enter
js
push
aas
adc
imul
add
imul
push
pop
push
adc
enter
outsl
enter
leave
push
fsubrs
adc
mov
push
fsubl
pop
fdivl
shrb
add
jp
push
sahf
mov
jp
popa
js
mov
enter
insl
jp
pusha
jnp
lea
add
lcall
push
and
and
insb
inc
or
cmpsl
xor
adc
jmp
mov
add
ja
jb
jno
imul
imul
bound
or
enter
insl
addr16
jl
add
outsb
int
data16
push
mov
add
adc
popa
rclb
data16
ja
addr16
add
add
popa
xchg
jb
jno
insb
xchg
jno
push
mov
jae
test
jo
je
jne
scas
imul
mov
imul
popa
add
gs
outsl
add
mov
push
add
movsl
outsb
je
mov
imul
outsb
addr16
mov
jne
jne
imul
add
add
dec
repz
jl
outsl
gs
add
addr16
scas
gs
mov
add
outsb
fs
dec
sub
cmpsb
pop
add
pop
and
outsb
jae
xor
pop
jne
push
pop
xchg
jbe
xchg
cmp
xchg
popa
push
test
add
aaa
arpl
mov
imul
add
add
add
cmp
into
xor
xor
xor
add
fdivs
in
fisubs
arpl
lret
xor
fisubrs
outsb
or
cmp
sbb
das
aas
add
arpl
cmp
jbe
fbld
insl
mov
enter
insb
mov
jp
aaa
cwtl
arpl
cmp
mov
fs
pop
pop
daa
aas
jb
and
add
add
inc
das
aas
jns
das
dec
imul
pop
push
daa
aas
insb
dec
xor
cmp
and
daa
adc
adc
push
jl
daa
push
jl
cs
imul
xor
jge
add
data16
fcmovnb
int3
cmp
frstor
aas
imul
es
gs
push
bound
dec
outsb
mov
add
cmp
mov
jno
push
jl
mov
ljmp
dec
sub
das
sbb
mov
add
imul
data16
pop
bound
cli
cmp
insb
push
imul
push
pusha
jl
or
das
jmp
sub
pop
sbb
sbb
arpl
das
xchg
outsb
aam
fs
sbb
add
or
data16
lods
add
mov
pop
js
lahf
insb
insb
mov
add
lahf
outsb
add
mov
xor
out
pop
bound
jb
jb
cs
test
popa
test
outsb
jne
add
mov
push
popa
xchg
out
xor
cmp
push
test
add
je
fs
outsl
popa
sbbb
xor
into
icebp
jmp
ljmp
shl
es
lods
das
sub
add
xchg
or
insb
lcall
outsb
aas
ds
mov
add
add
inc
cmp
insl
fildll
insl
imul
outsb
pop
mov
jno
mov
jno
subl
add
add
mov
je
scas
add
push
mov
gs
shll
bound
shrl
add
leave
sub
adc
add
sub
xor
ss
filds
arpl
loop
rcrl
loope
faddl
xlat
jnp
xor
addr16
sub
imul
push
mov
xchg
pusha
jl
in
push
add
addr16
xor
jp
out
pop
popa
inc
daa
and
cli
adc
push
xor
adc
sbb
add
cmp
out
cwtl
and
subl
lcall
or
add
or
mov
shl
das
cmovnp
cld
jmp
icebp
addb
cld
jmp
add
add
push
sahf
jp
push
test
mov
imul
pusha
xchg
addr16
and
jp
mov
imul
imul
pop
outsb
cmp
adc
pop
enter
pop
jno
pop
pop
insb
sbb
addr16
pop
enter
js
or
pop
add
enter
enter
lret
add
data16
js
les
add
add
mov
pop
push
outsl
mov
imul
add
es
subb
outsb
gs
cs
cmpsb
insb
add
jle
inc
mov
fwait
jbe
aad
outsb
jae
cmpsb
popa
push
mov
mov
jb
test
push
outsl
add
mov
add
mov
jo
imulb
cs
lahf
insb
push
test
inc
jne
mov
ss
loopne
arpl
shll
jae
loopne
insl
jmp
cmc
xor
add
sub
outsb
mov
sub
push
and
aas
add
xor
sbb
insb
fwait
inc
es
mov
arpl
daa
imul
push
jns
push
push
inc
add
jl
imul
add
imul
pop
movsb
sbb
jno
cwtl
xor
stc
mov
arpl
and
cld
mov
fs
adc
and
arpl
add
jns
and
jp
pop
aas
mov
cmp
jae
pop
jmp
cli
push
int
int3
cmp
mov
cmp
jae
cmp
pop
fldcw
xchg
add
shlb
test
xor
jp
cmp
jp
xor
add
xchg
lcall
jle
xchg
das
pop
jo
add
je
sub
push
and
jge
pop
pop
cwtl
pop
sub
pop
xor
and
xor
das
arpl
cmp
outsb
dec
dec
imul
pop
push
sbb
jp
es
je
push
and
xor
lea
pop
add
adc
add
add
xchg
insl
mov
pop
cltd
lds
dec
pop
pop
outsb
xchg
push
addr16
cmp
insl
mov
jo
dec
arpl
and
mov
stos
add
sub
pop
sbb
inc
push
arpl
enter
lods
jo
movsl
stc
sub
add
lods
jo
push
mov
popa
arpl
mov
add
add
aas
gs
dec
jo
mov
popa
insl
xor
test
inc
cmpl
inc
add
pop
popa
repnz
outsl
dec
clc
xchg
je
aam
add
mov
outsl
lds
aas
jb
mov
inc
mov
jno
fs
gs
fwait
outsw
cmpsl
pop
je
xchg
jb
aas
mov
je
cmpsb
pop
ja
add
aas
loope
jno
mov
inc
jno
mov
daa
jo
mov
and
add
out
in
sub
in
ret
and
fcmovnb
sub
out
int
insl
int
inc
jb
ljmp
testb
je
sub
arpl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
aas
filds
add
filds
add
filds
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
std
pop
mov
add
jns
ret
pop
pushf
jbe
and
enter
xor
inc
aas
or
inc
aas
divb
movsl
jge
adc
jl
xor
cld
pusha
sbb
cld
fwait
sub
cld
movl
call
cmp
dec
adc
insl
or
pop
arpl
das
ja
call
add
add
add
or
enter
call
cmp
add
sbb
jo
pusha
xchg
out
jmp
cmp
pop
mov
call
cmp
add
xchg
lods
imul
outsl
add
lret
add
push
lds
jno
jne
movsb
lret
add
jae
and
jno
or
add
out
cld
call
stos
outsb
and
pushf
jo
aaa
mov
add
xor
je
fs
add
add
aad
imul
scas
jno
sti
test
jae
int
add
icebp
inc
insl
bound
pop
xor
jno
arpl
pop
sub
add
add
and
add
aas
jno
pushl
js
addr16
ss
adc
and
ret
xor
add
icebp
add
ret
fxch
and
or
sub
ss
ret
sbb
std
xor
push
cmpsb
or
dec
inc
mov
xor
sbb
lea
sbb
mov
enter
add
lea
dec
mov
pop
arpl
mov
dec
je
xor
inc
imul
adc
or
gs
aas
enter
imul
das
imul
sub
cmp
cmp
adc
daa
sbb
push
fdivrl
cvtps2pd
cmp
jae
sub
sbb
outsl
or
fisubrl
and
outsb
int
out
pop
sarb
add
add
enter
pop
int3
and
imul
insb
pop
addr16
je
mov
push
test
pop
push
fwait
inc
pop
addr16
sbb
jmp
or
and
push
add
imul
dec
jno
pop
cmp
jae
push
test
xor
addr16
jmp
aas
sbb
insl
gs
add
add
pop
addr16
sbb
outsl
arpl
repz
pushl
je
push
and
add
and
mov
sub
out
outsl
aad
cmp
inc
popf
or
xlat
lods
pop
cmpsb
fwait
cmp
or
es
ret
xchg
je
xchg
test
outsb
addr16
gs
test
sub
dec
out
insl
cmp
add
add
je
or
arpl
sbb
dec
mov
outsb
outsb
inc
cmpsl
je
cmp
cmp
xor
leave
or
ret
cmp
popa
cmp
lods
jo
or
pop
popa
aas
add
sbb
sub
add
jl
sbb
xor
insl
pop
dec
sbb
adc
add
add
das
ja
xlat
push
jno
pop
loopne
pusha
dec
sbb
aas
insl
xor
lret
outsl
rcr
pusha
adc
adc
insb
sbb
loopne
in
cmpsl
inc
and
lock
lcall
pop
clc
call
or
scas
sbb
je
lds
outsb
fadd
fistpl
jne
stos
push
sahf
fistpl
lcall
fiadds
add
sbb
fisubs
add
push
enter
mov
sub
fisttps
stos
xlat
notl
adc
sub
loopne
cwtl
mov
dec
pop
cwtl
sbb
sbb
sbb
stc
dec
adc
es
or
inc
push
or
daa
in
or
daa
in
jno
and
xchg
aad
jmp
out
add
add
js
push
adc
popa
int3
outsl
push
add
pop
push
arpl
insb
je
xor
jl
lea
popf
das
enter
pop
jne
cs
cmpsl
sbb
je
xchg
jl
lea
jno
outsb
enter
pop
jne
insl
gs
daa
pop
push
and
jb
inc
pop
push
pop
sbb
add
pop
push
gs
and
das
pop
js
xor
je
inc
ja
pop
daa
pop
pop
add
inc
inc
xchg
pop
push
aaa
lcall
adc
imul
inc
push
out
imul
dec
outsl
clc
xchg
jae
les
xor
jbe
mov
mov
je
push
mov
inc
stos
jnp
outsl
inc
xchg
add
add
inc
movsl
je
pop
xchg
popa
pop
pop
movsl
jb
arpl
jb
xor
xchg
add
arpl
xchg
je
push
lods
pop
inc
sub
aas
ret
xor
fs
cltd
sbb
cmpsb
and
lock
jno
add
dec
cmpsb
mov
mov
sub
cmc
xor
cmpsb
negl
add
cmp
and
pop
jno
add
jae
adc
add
dec
aaa
pop
push
add
inc
sub
pop
js
sbb
sub
sbb
and
popf
pop
imul
and
icebp
push
insl
and
dec
inc
out
adc
jecxz
sbb
outsl
sbb
in
or
jmp
divl
lret
cmpsl
enter
add
stos
arpl
inc
aas
jl
xor
jo
push
outsb
jge
dec
outsl
enter
outsb
std
sbb
outsl
out
pop
outsb
nop
add
js
aas
cmpb
jl
mov
push
imul
inc
pop
outsl
pop
xor
pop
push
add
insl
inc
xor
cmp
repz
sbb
xchg
sbb
jl
sbb
imul
add
add
test
leave
and
imul
inc
sbb
sbb
add
es
pop
pop
arpl
jg
insl
lret
pop
insb
push
stos
jge
inc
lods
sbbl
jle
push
or
data16
sbb
je
xchg
pop
fwait
cmp
insl
and
jnp
jl
test
push
jge
xchg
cmp
inc
push
outsl
imul
add
add
test
or
imul
nop
dec
inc
xor
jb
push
mov
jb
sub
insb
push
and
xorl
mov
xlat
sbb
xor
gs
outsl
clc
cmpsb
insb
pop
out
push
outsl
fnstenv
dec
outsl
add
inc
mov
je
inc
cmpsb
lcall
add
add
mov
dec
inc
mov
cmpsb
jb
jne
data16
movsl
jb
aas
xchg
cmp
insb
in
lods
inc
push
add
ds
psrlw
pop
movswl
addr16
and
inc
push
loopne
sbb
fiadds
pop
clc
les
inc
jle
inc
pop
jl
sub
jns
push
add
adc
popf
adc
inc
arpl
xor
dec
push
pop
and
insl
aas
sbb
and
insb
cs
push
jp
inc
jae
inc
cmp
xor
pop
cld
pop
xor
xor
pop
sbb
dec
xor
ja
push
adc
xor
sub
ds
js
repz
push
or
fdivrl
sbb
push
add
add
ja
push
shlb
cs
push
add
jns
enter
mov
cmp
push
shll
insb
int3
xor
addr16
das
addr16
push
mov
push
test
and
jo
aas
jo
mov
dec
enter
popa
je
insl
stos
fs
outsl
enter
popa
popa
inc
jno
pop
push
cmp
dec
push
insl
cmp
add
push
stos
fs
das
enter
jns
adc
adcb
fstps
aaa
jns
add
adcb
fstps
and
arpl
push
insb
insb
or
jl
rcrb
imul
jns
int3
dec
stos
js
sub
pop
mov
push
push
arpl
or
xchg
cmp
xchg
dec
gs
xor
and
insb
add
ja
dec
lods
pop
jb
add
lret
addb
mov
pop
add
data16
movsb
jb
bound
gs
repnz
and
mov
inc
outsb
inc
cwtl
pop
insb
xor
dec
outsl
xor
mov
outsl
jae
jl
jb
int3
push
adc
gs
jns
jb
mov
and
jns
jb
mov
add
add
js
jb
mov
cs
adc
arpl
dec
arpl
push
jb
xor
jno
loope
arpl
xchg
xor
loope
pop
adc
sbb
mov
jo
loope
pop
in
xchg
in
ficoml
dec
insl
in
mov
sbb
in
lret
push
jbe
shl
push
int3
lret
push
add
mov
jb
add
mov
adc
popl
push
jno
sub
xor
jb
xor
jb
loope
pop
insb
sbb
cltd
sbb
xor
jg
subl
pop
jnp
adc
or
ja
aas
mov
sbb
outsl
dec
sbb
pop
out
jmp
pop
inc
sbb
and
aas
outsb
cmp
pusha
cmp
sbb
add
add
je
sbb
arpl
out
pop
xor
cmpsl
sbb
fstps
and
imul
pushf
repz
xlat
push
aas
jns
sub
je
xor
pop
lret
das
pop
pop
add
sub
mov
sub
dec
mov
data16
and
movsl
jp
insb
lea
push
jnp
arpl
jno
pop
inc
jne
inc
add
add
mov
dec
imul
mov
mov
data16
clc
je
pop
cmp
pop
aaa
pop
pop
sbb
je
cmp
jnp
and
pusha
pop
and
dec
arpl
and
jo
arpl
cmp
insl
xor
add
lods
pop
inc
mov
insb
gs
jb
test
sahf
je
mov
add
push
jb
xchg
data16
pushf
push
and
movsb
gs
outsl
or
je
idivl
inc
push
push
int3
dec
popa
xor
mov
gs
inc
int3
dec
imul
mov
je
dec
cwtl
inc
imul
insb
add
pushf
imul
adc
inc
add
add
adc
and
sub
adc
ja
inc
and
and
arpl
add
sub
add
push
xor
insl
stc
xchg
xor
in
andl
arpl
pushf
pop
jb
jp
push
psraw
outsb
in
xchg
and
and
xor
mov
inc
push
fdivrs
stc
mov
inc
jb
lds
outsb
mov
and
enter
stos
adc
enter
int3
and
lcall
insl
mov
push
pop
mov
orl
jle
dec
enter
push
jbe
sub
insl
jns
add
add
arpl
push
insb
pop
adc
jbe
xor
pop
dec
dec
add
add
push
out
loop
cmp
bound
sbb
push
push
adc
cmp
fcoml
and
insb
out
cwtl
push
cli
push
mov
subb
mov
mov
les
insl
iret
xor
fistl
inc
and
les
jo
sub
data16
jno
mov
mov
daa
push
outsb
mov
je
fwait
adc
xchg
addr16
add
add
add
je
arpl
cli
jnp
ds
push
arpl
add
dec
imul
pop
add
gs
sub
jb
inc
js
jmp
inc
ja
and
pop
jb
push
stos
gs
cmp
add
push
and
lods
jo
add
imul
pop
jb
xchg
inc
push
in
js
add
cmpsb
mov
pop
inc
lcall
outsl
movsb
test
jb
xor
nop
dec
inc
aad
imul
pop
jb
imulb
xor
xchg
ljmp
data16
inc
push
inc
in
inc
js
cwtl
imul
pop
push
xor
imul
jno
and
into
sub
loope
pop
lods
rclb
insl
add
add
cld
add
repnz
jnp
and
xchg
loope
insl
insl
or
adc
pop
add
add
xor
addr16
inc
jmp
pop
inc
add
sub
dec
xor
ljmp
outsb
push
loope
push
push
dec
inc
ja
jl
inc
and
and
or
sub
xchg
add
or
adc
jno
mov
data16
add
push
and
call
sub
pushf
imul
pushf
xchg
add
pop
add
xor
iret
add
adc
aas
insb
fisubrl
gs
add
push
mov
push
addr16
subps
mov
adc
sub
enter
pop
pop
sub
add
or
pop
aaa
sub
cmp
adc
cmp
pop
add
push
pop
pop
push
push
push
adc
imul
pop
sbb
imul
mov
andl
add
lcall
cs
enter
push
outsb
enter
mov
imul
sub
jno
dec
pop
jb
cmp
insl
fwait
inc
enter
add
push
push
jne
sub
movsb
push
pop
pop
xchg
jo
addr16
insb
push
mov
addr16
push
add
push
jo
push
test
sub
pop
add
lods
outsl
cs
add
es
jb
test
and
sub
xchg
imul
pop
jb
nop
inc
js
stos
outsb
inc
and
jbe
mov
pop
lahf
inc
jb
mov
pop
add
add
lahf
imul
lods
jb
shll
imul
mov
jb
enter
mov
ja
mov
add
mov
imul
dec
outsl
sarb
push
jl
push
aas
xchg
je
jg
arpl
mov
sub
stos
xor
add
daa
jae
mov
add
stos
adc
add
add
loope
je
mov
arpl
loope
je
adc
jno
repnz
jb
loope
inc
jae
xor
push
adc
add
cmp
je
das
sbb
insb
sbb
push
push
sub
sub
push
and
xor
and
dec
and
push
dec
adc
enter
push
push
and
add
add
and
adc
sub
fs
adc
jbe
adc
push
out
fisubl
pavgb
cmp
lcall
popl
repz
outsb
popa
mov
or
in
pop
mov
daa
mov
in
push
lret
add
xchg
xor
fwait
push
push
popa
cltd
and
push
jle
sub
add
out
push
pusha
add
pop
push
je
popa
gs
pop
imul
dec
sbb
push
sbb
push
jb
xor
outsb
pushf
popa
or
pop
cmp
imul
ja
adc
dec
lcall
inc
insb
push
add
arpl
dec
gs
push
pop
fidivl
cltd
pop
sbb
xchg
cs
add
add
enter
bound
pop
xchg
fdivrl
xchg
push
pop
fwait
pop
enter
pop
data16
mov
jne
mov
popa
js
lds
ljmp
add
loop
outsb
pinsrw
jo
pop
mov
pop
xor
push
add
test
bound
pop
jb
les
add
add
xchg
pop
je
les
movsl
inc
imul
add
mov
dec
pop
mov
popa
jb
movsl
imul
inc
or
arpl
and
fbstp
insl
or
cmp
das
push
or
subl
je
jg
arpl
pushf
and
xchg
and
add
out
mov
imul
in
into
inc
cmpsb
in
je
xchg
outsb
xchg
mov
inc
mov
adc
daa
outsb
cmpsb
mov
dec
mov
lahf
sbb
nop
adc
xchg
fs
adc
adc
outsl
pop
imul
insl
pop
enter
cmp
sbb
sbb
xor
xchg
and
cmp
and
cmp
add
push
sbb
or
fsubrl
inc
and
xor
sub
sub
xor
sub
cmp
repz
and
sub
sbb
ss
aas
sbb
cmp
sbb
in
pop
and
insl
pop
push
add
sbb
inc
jb
ljmp
sbb
and
sub
adc
add
mov
mov
add
add
cmp
into
popf
fs
dec
cmp
popf
repz
popf
imul
jmp
popf
sub
inc
and
je
push
sub
dec
sub
arpl
insb
dec
aaa
cmp
dec
or
cmp
and
push
xor
adc
dec
or
and
pop
aaa
jne
pop
xor
sbb
imul
add
add
testb
adc
fiaddl
add
imulb
add
pop
arpl
call
add
ficomps
rcr
jno
rcr
sub
out
pop
xlat
out
pop
inc
iret
std
add
out
je
mov
pop
pop
push
jmp
inc
das
add
dec
xor
add
adc
pop
aas
pop
and
in
jno
xor
jo
or
pop
pop
pop
or
xor
add
pusha
sahf
inc
xor
xor
lcall
sub
lret
pushf
sub
mov
ss
aas
out
add
ss
jnp
sbb
dec
andb
imul
pop
jnp
bound
push
inc
mov
fildl
adc
xor
jno
xor
inc
loope
inc
aaa
xor
add
lock
push
arpl
add
cs
sbb
rolb
push
arpl
loop
cmpsb
rcll
add
xor
gs
inc
imul
insl
xchg
sub
enter
enter
xor
and
daa
rcrl
aas
xor
pop
pop
enter
and
inc
push
pop
mov
pop
cmp
add
cmp
lock
es
xor
std
cmp
fdivl
and
cld
adc
inc
int
inc
cmp
out
push
stc
aam
or
sub
sub
incb
outsl
ud1
jae
add
xor
ljmpw
sub
push
daa
add
adcb
movsl
pop
sub
add
add
add
xorb
les
enter
enter
enter
enter
enter
enter
enter
enter
enter
sub
mov
fs
pop
sub
insb
and
xor
cmp
xor
sbb
pop
xor
inc
aaa
jb
inc
cmp
add
bnd
add
add
fcompl
cmp
jno
add
je
push
icebp
jno
sti
aad
jae
loop
je
xchg
pop
arpl
loope
insl
add
pop
jns
lock
test
insb
imul
loop
jne
jecxz
bound
loop
add
fsubrl
lock
mov
aad
imul
fcompl
push
fsubrs
out
fistps
xor
insb
outsl
add
add
call
pop
jo
jmp
and
lods
loopne
addr16
aam
pop
mov
xchg
mov
sbb
pop
pop
cwtl
adc
insb
scas
adc
cwtl
adc
or
and
test
outsb
pusha
lea
aas
scas
add
aas
scas
add
aas
scas
add
aas
scas
add
aas
scas
add
aas
scas
add
scas
add
aas
scas
add
adc
fistl
adc
add
add
cld
sbb
add
std
cs
nopl
enter
sub
sbb
sbb
sbb
and
add
pop
xor
add
xlat
into
sbb
ljmp
cmp
push
xor
adc
les
cmp
fldl
add
sub
sahf
add
xor
rclb
xchg
pop
aas
jmp
and
jmp
daa
aas
jmp
es
sbb
in
cs
adc
sub
adc
inc
sbb
cmp
lret
and
xor
and
cmp
fbld
pop
cmp
dec
sub
pop
cmp
xor
gs
jle
dec
sub
xor
sub
push
pop
jo,pn
add
add
outsl
les
sub
insb
sarl
sub
enter
mov
sbb
dec
mov
dec
sub
inc
inc
push
dec
pop
add
cmp
into
gs
aaa
mov
dec
cmp
test
add
cmp
jmp
add
push
push
add
mov
push
gs
ljmp
add
add
jae
push
insl
jp
loopne
popa
pop
cmc
pop
popa
pop
loope
imul
pop
add
loopne
arpl
loop
imul
pop
jb
leave
inc
outsl
cld
fsubrl
leave
pop
dec
stc
lret
arpl
pop
push
mov
imulb
adc
pop
jb
in
gs
push
inc
push
aam
imul
add
adc
insb
add
adc
fstl
adc
or
je
loop
je
clc
push
cbtw
lea
inc
scas
cmp
add
mov
sbb
lret
pop
je
pop
outsb
jns
xor
insb
cwtl
or
insb
lds
bound
jb
push
xchg
jns
rolb
mov
xor
xchg
iret
and
shrb
add
add
enter
inc
xor
inc
xor
push
aaa
outsb
cmovno
popa
or
dec
push
icebp
and
cs
xor
inc
pop
fcmovnb
sbb
pop
mov
inc
push
aas
add
fcomp
pushf
sub
add
add
adc
or
aas
mov
sbb
push
inc
addl
xor
adc
subps
les
push
call
add
rcll
pop
sub
sbb
cmpsl
and
xor
push
adc
and
aaa
ljmp
add
mov
je
dec
and
jmp
and
and
cld
or
int3
fadds
aas
add
orb
in
sarb
clc
cmpl
inc
xchg
xor
mov
int3
fadds
add
cmpl
inc
xchg
mov
sarl
xor
dec
rcrb
jne
add
jne
dec
sub
pushf
add
outsl
test
dec
xchg
insl
jge
add
loopne
pop
movsl
lret
fstps
data16
push
jecxz
bound
add
mov
xor
push
lahf
cld
cmp
add
push
call
cld
sub
mov
bound
fiaddl
cmp
mov
cld
xor
mov
sub
out
xor
cwtl
cld
cmp
xchg
cld
xor
flds
in
aaa
fildl
aaa
out
add
out
outsl
test
bound
arpl
rcrl
rcrl
das
jno
push
outsl
aas
dec
or
push
pop
and
adc
pop
aas
insl
add
add
inc
adc
pop
sbb
jb
add
jno
pop
je
std
sbb
or
and
add
dec
test
adc
mov
adc
int3
push
jbe
fucom
and
hlt
push
insb
aas
ficoms
je
ficomps
jb
int3
push
and
ret
sub
xchg
adc
addr16
mov
je
popf
pop
add
arpl
jbe
jge
and
add
sbb
add
das
xchg
push
out
and
ficomps
pushf
adc
lret
enter
or
dec
sbb
ss
and
pop
int
inc
adc
jecxz
sub
add
xor
or
sbb
ljmp
xor
and
or
pusha
enter
and
jl
mulb
add
add
sbb
jecxz
daa
fcoms
jo
or
enter
push
sub
add
pushf
mov
sahf
jb
push
mov
cmp
dec
mov
cmp
dec
mov
sbb
incl
aaa
enter
or
lea
push
dec
mov
pop
pop
sub
push
pop
cmp
inc
cmp
sub
cmp
adc
or
add
das
cmp
pop
cmp
or
cmp
add
mull
aaa
sub
es
push
sub
push
adc
insb
add
cmpsb
pop
pop
in
jb
jnp
cld
pop
aad
jb
lret
mov
inc
push
cmpsb
outsl
jae
popf
insl
data16
jb
xchg
inc
push
es
add
outsb
jae
lods
push
jb
xchg
inc
jb
mov
jne
int3
pop
dec
jg
fs
mov
add
insl
insl
cmp
insl
arpl
leave
dec
sub
jmp
clc
inc
or
fmull
jbe
push
test
incl
outsl
in
pusha
aas
pop
leave
outsl
push
sbb
das
pop
jecxz
in
pop
in
add
add
mov
push
out
sahf
repz
out
in
call
in
jae
xor
pop
or
mulb
add
jmp
lretw
out
add
aas
or
je
repz
aas
cmc
add
aas
rolb
aas
repz
imul
icebp
je
fcomi
pop
arpl
repnz
ret
jp
xlat
out
and
add
add
ljmp
cmp
add
pop
mov
mull
sbb
cmc
sbb
popf
loop
cmp
out
cmp
loop
cmp
iret
stc
cmp
jecxz
pop
add
and
clc
lret
es
xchg
or
scas
and
out
pop
push
xchg
sub
out
cmp
loopne
sub
add
adc
lock
cs
jmp
cmp
push
mov
in
push
mov
mov
push
outsb
enter
cmpsb
scas
or
insb
mov
pusha
popf
xchg
and
lcall
inc
int3
xchg
push
jmp
imul
push
push
pop
sbb
mov
cmp
sub
add
cmp
and
outsl
jmp
or
dec
sub
or
or
data16
pop
jp
push
ljmp
inc
test
inc
push
xor
adc
cli
inc
xor
std
xor
cmpsl
idivl
xor
cld
xor
in
inc
xor
mov
sar
sub
mov
pop
ja
movsb
xor
cmpsb
jg
jae
mov
xchg
xchg
dec
gs
xchg
pop
jb
add
movsb
add
in
fs
inc
adc
push
push
or
es
lods
jno
jns
jb
inc
out
sub
je
add
lahf
jb
inc
mov
cmp
aam
imul
arpl
out
jo
scas
cmp
sbb
iret
push
jno
add
imul
pop
xchg
add
outsl
into
insb
xor
out
sub
add
add
mov
decl
pop
rolb
insb
jmp
sbb
xor
pusha
in
push
lock
sahf
iret
dec
stc
pop
sarl
in
jecxz
push
loopne
in
sub
repz
or
xor
push
lcall
inc
mov
and
test
sbb
mov
and
js
sub
xchg
sub
out
add
icebp
outsl
cmp
repnz
enter
add
outsb
cmp
out
sbb
out
ljmp
mull
daa
sbb
and
icebp
or
popf
out
push
sub
cmc
sbb
sub
adc
enter
push
ljmp
add
mov
enter
xchg
dec
iret
jmp
fdivp
cmp
repnz
add
xor
add
add
add
add
aas
enter
cmp
or
sbb
push
sbb
sbb
frstor
fstpt
insb
fcmovbe
scas
push
fcmovu
cmp
mov
mov
mov
sbb
xchg
cmp
xchg
outsl
jmp
mov
and
mov
cmp
jo
outsb
fstpl
push
and
outsl
dec
add
add
push
pop
iret
push
push
sub
or
add
jo
push
add
data16
movsl
jb
jp
arpl
mov
pop
insl
sub
push
inc
mov
imul
mov
addr16
xchg
jno
in
pop
insl
or
popa
cmc
mov
outsl
in
cld
dec
jns
jo
rcrl
push
add
add
push
jns
cmpsl
cld
dec
idivb
js
mov
sahf
pop
jo
test
sub
insl
data16
or
flds
std
fisubs
loop
outsl
pop
shl
gs
mul
jno
lahf
ret
jg
bound
in
insb
popa
jg
bound
loope
aas
fst
dec
pop
ret
loope
dec
cwtl
ljmp
add
pop
mov
bound
mov
in
insl
push
imul
sub
out
insb
or
outsb
and
in
data16
in
data16
jo
xor
incl
push
rcrb
fcmovnb
dec
cmc
int3
push
dec
jecxz
push
inc
ljmp
push
loope
add
aam
cmp
jmp
js
adc
xchg
sbb
loope
add
insb
cmp
in
pop
sbb
sub
adc
sbb
clc
fidivs
aam
sbb
loope
or
iret
or
mov
fisubrs
mov
loop
push
mov
roll
push
test
sbbb
cmc
repnz
sub
sbb
jno
aaa
inc
sbbb
dec
dec
sbb
push
dec
sub
inc
and
add
sbb
jne
das
sbb
outsl
inc
push
cmp
cmp
push
cmp
and
push
and
jmp
out
push
std
fldenv
push
pop
or
out
sbb
ss
repz
aad
or
nop
std
imul
fwait
lret
aas
into
cltd
sbb
movsl
sbb
imul
sbb
jo
add
pop
cmp
add
add
out
popa
mov
mov
je
mov
outsb
pop
jg
pop
insl
xchg
mov
jno
inc
popf
jo
es
jno
push
jge
add
push
dec
inc
mov
add
mov
cld
sub
fstps
push
add
cmp
orb
add
stos
sbb
lret
outsl
add
add
mov
cs
lahf
push
inc
aas
pop
xor
inc
cs
xor
sub
cmp
js
ss
imul
cli
shlb
incl
lret
aam
fwait
std
add
xchg
iret
insb
cltd
repz
lea
inc
xchg
out
add
pusha
in
pop
shl
insl
imul
imul
add
lahf
add
aas
lret
and
jnp
ret
dec
insb
pop
rcrb
outsb
jmp
sub
dec
leave
push
out
cmp
pop
or
xchg
out
adc
xchg
aas
in
mov
rorl
xor
xchg
aas
in
mov
in
sbb
loope
push
in
stos
ss
xor
enter
and
inc
lock
inc
out
add
pushf
sbb
icebp
sub
adc
popf
call
ljmp
ss
repnz
jmp
and
in
dec
call
or
adc
mov
loopne
sbb
xchg
andl
lds
or
cmp
insb
pusha
xor
mov
nop
pop
ss
jp
and
andl
test
add
arpl
jo
js
push
inc
stc
imul
bound
add
push
sbb
outsb
xor
call
das
imul
test
or
push
inc
add
cmpsl
inc
or
push
inc
adc
or
inc
adc
out
insb
icebp
and
imul
stc
imul
sbb
fistl
xor
add
mov
jno
fildll
jo
add
add
lods
push
jns
mov
insl
test
outsb
imul
pop
insl
addr16
je
jnp
je
lret
pop
arpl
lahf
imul
popa
outsl
mov
insl
push
mov
inc
outsb
inc
sahf
pop
fs
mov
ljmp
inc
inc
mov
gs
cld
push
inc
scas
outsb
jmp
add
lahf
lret
aas
adc
jno
inc
fildll
xchg
divb
inc
fildll
xchg
jecxz
or
hlt
decl
push
lock
fiadds
je
inc
in
or
dec
divb
and
push
ficompl
dec
rolb
stc
decl
adc
insb
mov
clc
decl
adc
jo
push
repz
adc
pusha
nop
fidivs
shl
add
add
shl
pusha
pop
mov
out
aas
ret
ret
in
in
pop
scas
int3
push
push
enter
es
and
stc
ret
sbb
cwtl
mov
sbb
out
adc
sahf
cli
sbb
test
push
movsbl
or
test
std
es
sti
cli
jbe
into
sbb
out
pop
jnp
inc
push
mulb
or
testb
add
pop
ljmp
xor
fisttpl
ss
add
sub
insl
xor
add
das
sbb
jmp
add
adc
aam
or
add
sub
adc
pop
mull
cmpsb
sub
insb
adc
pop
mull
xchg
outsl
jmp
sbb
outsl
test
dec
mov
add
mov
pop
data16
push
bound
adc
sub
add
pop
jecxz
dec
xor
jo
cmp
dec
sbb
sbb
and
sbb
jmpw
push
cmp
stc
gs
outsl
jmp
sbb
gs
mov
inc
inc
es
dec
jae
lcall
fildl
dec
push
ljmp
aad
jb
into
jnp
push
ss
jb
stos
jb
mov
mov
jp
gs
movl
aad
jb
sahf
jnp
push
mov
xorl
xorl
dec
xchg
jb
jnp
cld
push
and
pop
jb
push
dec
aas
loope
and
mov
add
shrb
add
lock
bnd
mov
dec
movsbl
push
jle
je
pop
in
aas
pop
sarl
rcl
pop
or
rep
in
push
xor
add
dec
pop
popa
in
in
cmp
jno
pop
add
cmp
dec
fiadds
pop
out
dec
out
jo
cli
out
arpl
iret
dec
xchg
fbld
sahf
out
je
fucomp
xor
scas
rorb
add
and
fsubrp
je
enter
adc
in
adc
ljmp
daa
div
dec
xor
out
or
in
adc
ljmp
es
adc
mov
fsubp
sbb
shl
cwtl
fsubrp
xor
fstl
test
add
add
xor
lods
call
inc
out
add
loope
xor
mov
dec
clc
mov
sbb
sbb
sub
fcoml
cmp
pusha
sbb
sbb
cld
dec
psubusw
pusha
add
adc
loopne
insb
add
loope
lret
imul
or
mov
pop
lret
imul
add
bound
mov
pop
lods
test
outsl
xchg
arpl
pop
xor
adc
jg
outsl
jnp
jne,pn
sbb
jo
or
pop
ds
gs
and
dec
cmpsl
jno
ja
arpl
in
jne
cltd
jae
push
cmpsl
addr16
es
sub
arpl
jl
outsl
inc
mov
push
dec
add
add
cmpsb
jo
in
jo
jg
gs
js
data16
imul
subb
xchg
jno
mov
cwtl
jb
mov
xchg
arpl
push
imul
add
pop
mov
ret
mov
hlt
jae
add
dec
insl
data16
repz
add
add
lock
ljmp
loop
dec
shl
bound
frstor
rep
and
loope
sbb
insb
adc
pop
add
idiv
icebp
pop
in
imul
adc
jecxz
fdivs
fidivl
mov
arpl
push
in
fnstenvs
jecxz
shll
xlat
insl
aas
dec
fsubl
adc
jae
enter
enter
add
popf
adc
sbb
mov
cmp
sbb
fldt
aaa
add
adc
fcomps
subb
fisttpl
push
and
daa
adc
arpl
clc
and
div
xor
rcr
sbb
das
int
cwtl
and
and
mov
lret
and
jecxz
xor
sub
add
or
add
xor
add
int3
insb
ficompl
cmp
push
pop
sbb
outsl
dec
inc
cld
push
inc
and
gs
adc
push
pop
popf
ljmp
add
push
xor
popf
push
sub
add
rcrl
add
int3
adc
pushf
or
jl
push
mov
jl
pusha
lret
add
add
int3
jl
cmpsb
les
int3
jl
push
jl
fisttpl
jl
jo
jl
pop
add
mov
xorl
push
mov
push
insb
test
insb
test
iret
jl
cld
and
cld
imul
cld
inc
pop
xchg
dec
insl
xchg
sbb
dec
xchg
leave
dec
xchg
jg
add
pop
xchg
push
pop
xchg
lea
xchg
mov
and
cld
sbb
xchg
push
and
cld
add
xchg
xor
xchg
mov
add
mov
jmp
pushl
fidivrl
call
jmp
jo
clc
outsb
outsb
insl
add
sub
insb
fs
imul
pop
imul
call
push
ljmp
dec
fcmovnb
pushl
pushl
fld
inc
ljmp
out
in
jg
pushl
int
ljmp
fisttps
les
or
push
jb
les
or
inc
test
add
dec
push
les
mov
les
xchg
into
ret
and
ret
cmp
ret
adc
ret
or
mov
add
mov
clc
cltd
ljmp
enter
enter
enter
add
and
neg
mov
repz
sbb
or
mov
enter
sub
rclb
lock
test
lret
add
cltd
or
addr16
or
xorb
faddl
mov
or
jae
and
ss
pop
rorl
add
push
ud1
or
and
or
insb
xor
sbb
addr16
lock
and
sbb
and
leave
sbb
push
int3
iret
out
leave
pop
enter
sub
mov
add
add
fs
cwtl
cld
jmp
cmp
add
cmp
add
xchg
les
add
add
les
add
add
push
les
add
add
les
add
add
push
les
add
int3
add
es
add
push
int3
add
push
int3
add
es
add
es
add
push
int3
add
push
int3
add
out
add
out
add
lret
add
lret
add
out
add
out
add
lret
add
lret
add
cmpsb
lret
add
cmpsb
lret
add
xchg
lret
add
xchg
lret
add
cmpsb
lret
add
aas
mov
add
aas
mov
add
aas
mov
add
aas
mov
add
aas
mov
add
aas
mov
add
aas
mov
add
aas
mov
add
mov
add
aas
mov
add
aas
mov
add
aas
mov
add
aas
mov
add
aas
mov
add
aas
mov
add
aas
mov
jmp
add
enter
enter
enter
enter
enter
enter
enter
enter
add
aas
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
or
add
flds
cltd
mov
mov
or
or
leave
cmp
add
cmp
add
cmp
cld
jmp
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
cld
jmp
cld
xchg
cld
jmp
in
xchg
cld
jmp
inc
enter
enter
enter
add
cmp
add
data16
add
xchg
add
xchg
add
sahf
enter
enter
enter
enter
mov
add
aas
mov
add
insb
mov
or
pop
mov
sub
push
mov
push
add
pop
add
repnz
or
into
add
push
or
loope
adc
add
add
sbb
xchg
or
lret
sbb
lret
adc
fcomps
or
or
mov
sbb
sub
pop
xchg
es
mov
sbb
mov
add
aas
mov
add
aas
lods
add
aas
movsl
add
pusha
lods
add
aas
mov
add
aas
mov
add
aas
mov
add
lods
add
movsl
add
aas
mov
add
aas
lods
add
aas
mov
add
mov
add
call
mov
in
pop
aas
leave
in
enter
aas
leave
in
aas
leave
in
add
enter
enter
xchg
ljmp
xchg
out
pop
add
add
enter
jmp
push
leave
jmp
pop
aas
enter
jmp
pop
cmp
jmp
add
enter
in
pop
adc
in
add
xchg
ljmp
in
aas
movl
in
xchg
cld
jmp
inc
enter
enter
enter
enter
xchg
cld
jmp
add
add
xchg
cld
jmp
cmp
add
ret
mov
sub
enter
mov
add
cmp
add
inc
mov
or
enter
mov
sub
enter
movl
or
mov
add
cmp
addb
les
add
les
adc
add
add
add
adc
out
adc
test
andb
adc
jbe
add
xchg
inc
adc
inc
dec
add
xchg
les
add
dec
adc
inc
int3
adc
ss
add
inc
adc
push
les
adcb
addb
add
push
dec
adc
test
add
dec
add
add
add
int3
add
aas
mov
add
aas
roll
roll
roll
addl
adc
mov
addb
addl
adc
mov
add
aas
mov
add
aas
cltd
add
aaa
mov
add
aas
test
add
add
add
cltd
add
aas
test
add
inc
mov
add
aaa
test
add
inc
enter
enter
shl
aas
enter
shr
aas
enter
enter
shl
cmp
enter
shr
cmp
enter
shl
aas
enter
shr
aas
enter
shr
add
add
shl
cmp
enter
enter
shr
aas
shr
aas
enter
enter
enter
shr
aas
shl
aas
rolb
inc
enter
enter
lret
cmp
or
cmp
add
cmp
or
inc
lret
cmp
add
inc
lret
cmp
add
cmp
or
cmp
or
add
add
or
cmp
add
cmp
or
cmp
add
cmp
add
cmp
or
inc
lret
pop
dec
add
enter
enter
enter
dec
add
dec
add
cmp
add
sbb
add
cmp
add
pop
dec
add
pop
dec
add
xchg
jmp
add
es
add
cmpsb
leave
addb
leave
addb
leave
add
out
add
enter
call
add
out
addb
call
add
push
les
add
in
add
les
add
in
add
in
add
les
add
les
add
addb
jecxz
add
ret
add
enterw
enter
call
add
aas
and
addb
add
mov
and
aas
and
add
and
cmpb
add
aas
mov
and
aas
mov
and
aas
and
cmpb
add
aas
and
add
mov
and
aas
mov
and
aas
and
cmpb
aas
mov
add
cmp
add
std
mov
aas
mov
jmp
add
ljmp
jmp
add
push
ljmp
enter
or
add
jmp
add
or
add
enter
or
add
push
ljmp
jmp
add
or
add
enter
push
ljmp
add
inc
jmp
add
push
ljmp
enter
push
ljmp
jmp
jmp
inc
enter
rolb
enter
enter
sarb
cmp
call
cmp
add
cmp
call
inc
sarb
cmp
add
cmp
ds
cmp
call
add
add
add
cmp
inc
jmp
inc
rolb
cmp
call
cmp
add
cmp
add
cmp
inc
jmp
cmp
inc
stc
cmp
and
cmp
and
jl
cld
add
lds
jbe
add
test
push
lds
es
pop
test
push
lds
push
lds
and
les
es
pop
add
add
lds
and
test
jmp
les
add
les
out
cld
pop
test
jmp
test
testb
mov
and
les
add
test
jbe
cld
jmp
test
xchg
les
and
cld
pop
aas
popl
add
popl
inc
pop
lahf
sarb
outsl
sarb
lahf
add
outsl
sar
add
inc
mov
add
add
jno
decl
add
pop
mov
add
pop
mov
sarb
jno
inc
pop
add
aas
pop
jno
add
mov
add
aas
jno
dec
jno
inc
pop
add
pushl
add
add
jno
aas
pop
jno
add
add
enter
add
js
jmp
add
int3
out
aas
int3
jmp
or
enter
int3
out
pop
enter
int3
out
pop
int3
jmp
add
enter
int3
out
aas
enter
int3
out
pop
int3
out
clc
xchg
sti
lock
dec
enter
enter
lret
aas
int3
jmp
sti
and
out
pop
enter
add
pop
int3
jmp
sti
mov
int3
jmp
jmp
enter
enter
out
jmp
fs
jmp
push
xchg
jmp
xchg
jmp
test
jmp
test
jmp
enter
test
jmp
and
add
cmp
add
adc
add
add
cld
jmp
out
jmp
hlt
test
jmp
add
cmp
add
in
add
cmp
add
aam
add
cmp
add
cmp
add
mov
add
cmp
add
movsb
in
jmp
cmpsb
cmp
add
cmp
jmp
add
jns
call
add
cmpsb
jns
adc
add
xchg
jns
setbe
add
es
add
out
add
push
leave
add
add
add
js
adc
jns
add
jns
adc
js
add
jns
jmp
int3
add
out
add
push
int3
add
js
jl
jmp
js
add
int3
add
push
int3
add
cmpsb
js
adc
cld
aas
outsl
add
aas
outsl
add
aas
scas
add
das
scas
add
das
outsl
lock
scas
hlt
add
outsl
add
das
lock
outsl
add
outsl
lock
add
das
outsl
lock
add
aas
das
add
outsl
lock
cmp
lock
jno
cmp
add
aas
xor
add
jno
add
xor
add
jno
add
jno
add
mov
incl
add
aas
mov
add
add
aas
mov
add
jno
add
jno
pushl
mov
decl
jmp
hlt
cmp
jmp
repz
sub
add
add
subl
cmp
jmp
repz
jns
imul
add
dec
or
inc
sub
aas
enter
enter
addl
and
ljmp
enter
and
clc
xorb
sub
aas
enter
enter
sbb
rolb
add
addb
cmp
add
cmp
add
ret
lods
jo
cld
jmp
cmp
add
roll
mov
enter
enter
cmp
ret
cmp
mov
enter
enter
cmp
jmp
cmp
add
cmp
add
cmp
add
cmp
add
add
mov
cmp
mov
cmp
leave
ret
cmp
decl
inc
cld
decl
inc
cld
incl
inc
cld
incl
call
inc
cld
jmp
inc
cld
incb
lcall
inc
cld
ljmp
cld
lcall
inc
cld
cli
inc
cld
jmp
cld
pushl
inc
cld
incl
add
xor
jmp
inc
cld
call
inc
cld
dec
inc
cld
decl
inc
cld
jp
cld
ljmp
inc
cld
ljmp
inc
cld
aas
mov
call
js
dec
enter
lods
mov
mov
stos
mov
test
mov
mov
push
mov
nop
cmp
incl
repnz
add
add
cmp
les
add
sub
decl
cmp
lock
sbb
sub
add
lods
cmp
jb
add
movsl
cmp
into
cmp
jb
clc
lahf
xchg
lock
jg
xchg
jg
xchg
jg
xchg
jg
xchg
jg
xchg
jg
test
enter
add
test
push
test
enter
jg
test
jg
test
in
jo
clc
test
ljmp
jg
test
lods
test
lcall
jg
test
jg
test
jg
test
jg
test
jg
test
jg
add
enter
jg
aaa
ret
jle
jmp
ret
popl
add
mov
jle
mov
ret
leave
mov
jle
scas
mov
jle
add
jle
fnstcw
jle
or
jle
addr16
jle
xchg
mov
jle
and
jle
dec
mov
jge
fnstcw
jge
xlat
mov
add
sarl
mov
inc
cld
incl
inc
cld
incl
inc
cld
inc
inc
cld
lcall
inc
cld
push
inc
cld
incl
std
sti
cmp
call
cld
inc
cld
pushl
dec
cld
decl
std
sti
push
cld
sti
cld
sti
jmp
std
sti
clc
cld
sti
incl
std
sti
jmp
cld
incl
add
dec
dec
cld
call
add
cwtl
dec
cld
call
inc
cld
call
dec
cld
ljmp
or
add
stos
cmp
outsl
add
aas
roll
call
insb
cmp
jb
call
jp
dec
ret
shrb
mov
jle
test
jle
mov
adc
nop
adc
incl
add
mov
add
daa
jg
js
jg
jo
jle
push
fs
push
outsb
add
aas
flds
cmp
pushl
bound
andb
xchg
sbbb
lcall
jl
addl
jnp
add
enter
jnp
and
ljmp
testb
sub
add
add
add
pop
fists
in
fistl
fsubrs
testl
sbb
cmc
adc
fldl
add
ffree
int3
add
neg
aad
in
ret
lcall
jmp
fcomp
out
jmp
scas
or
pop
enter
xchg
pop
call
add
clc
mov
add
add
add
call
insb
jle
jp
add
outsl
push
in
out
push
cli
jp
cli
cmp
out
xor
cmp
insb
or
divb
call
inc
jmp
jae
popa
maxps
imul
in
jecxz
test
faddl
cmpsb
pop
testb
xchg
pop
push
seto
add
add
movb
gs
rcrb
jo
xchg
gs
push
movb
lret
fs
push
iret
push
arpl
roll
and
arpl
xor
jg
pop
add
les
push
pop
jb
cmp
gs
inc
xor
outsl
inc
andl
addr16
xchg
lds
inc
lahf
insb
push
add
add
cwtl
fs
push
lds
add
fwait
loope
pushf
loope
lret
xchg
shlb
outsl
add
sub
imul
loope
aas
outsl
add
jb
pop
loope
mov
insb
pop
inc
iret
jo
jg
push
push
inc
loope
push
adc
push
push
or
sub
stos
adc
jae
mov
add
add
add
shll
into
shrl
outsb
add
scas
into
bound
jnp
push
call
ret
sub
fucomi
repz
rcr
in
ror
mov
mov
xor
add
aad
cli
xchg
loopne
sti
xchg
add
mov
rorb
lock
mov
in
mov
mov
add
add
inc
ret
shlb
add
push
rcrb
cmp
jns
jg
stc
loopne
loopne
in
xor
cli
loopne
fistps
dec
add
loopne
loopne
jecxz
rcrb
in
cmc
mov
jmp
cld
nop
ljmp
jge
cld
ja
or
outsb
fisubl
push
add
add
cmp
mov
pop
enter
xchg
cli
jecxz
jmp
add
add
add
out
cli
gs
mov
bound
or
push
orb
imul
push
cmpsb
out
inc
xchg
std
inc
jmp
out
push
cmp
cld
popa
cmp
aad
insb
or
cli
outsb
adc
jmp
jmp
cli
aas
add
jb
inc
xor
fs
popa
je
cmp
inc
lretw
cltd
pop
jo
add
add
popa
push
dec
jb
and
sti
sahf
pop
arpl
and
outsb
shrb
mov
cld
dec
int3
inc
gs
cltd
jb
test
jo
cmp
iret
and
cmp
ror
inc
gs
outsl
jb
pop
outsb
je
and
jne
insl
jb
mov
call
ds
call
xor
aas
fdivrs
jmp
xlat
data16
ret
fidivs
mov
cmpsb
test
push
lret
pop
add
fimull
test
jb
test
xchg
mov
pop
stos
inc
vmovsd
add
jl
movsl
outsl
insb
pop
mov
imul
inc
addr16
mov
insl
mulb
scas
cmp
or
mov
add
add
movsb
mov
data16
mov
cmpsl
push
out
mov
mov
jmp
mov
out
cmpsb
paddb
cmpsb
add
sbb
fsubp
int
mov
stos
cmpsb
int3
jmp
scas
jp
lret
cld
mov
and
cmpsb
mov
testb
in
jmp
mov
add
mov
jbe
jne
test
outsb
in
test
dec
enter
testb
and
pop
in
jmp
mov
add
inc
aam
imul
in
add
mov
add
std
outsl
stc
stos
ljmp
stos
out
mov
mov
push
data16
outsl
jecxz
mov
hlt
mov
and
add
cmp
mulb
aad
bound
std
jb
pop
cmp
fildll
cltd
jmp
cmp
add
mov
mov
movsl
inc
push
dec
mul
jne
test
jns
arpl
add
jb
pop
xor
inc
xor
dec
xor
push
inc
push
daa
add
add
pop
aaa
push
gs
cmp
outsl
and
lret
pop
gs
push
and
repz
jb
clc
cmp
repz
cld
jmp
dec
roll
insb
mov
int3
inc
gs
jno
sbbl
mov
inc
sub
jbe
xor
cmp
push
ja
test
jae
lods
stos
bound
sahf
scas
pop
sbb
fidivl
add
sub
stos
jae
int
bound
sahf
scas
test
ljmp
lods
insl
enter
lret
mov
aas
jl
push
rorl
cmp
push
stos
sub
int
aas
xchg
add
insb
xchg
ds
arpl
jae
and
ljmp
mov
jbe
add
ds
mov
add
add
mov
sbb
add
inc
mov
clc
inc
out
sbb
push
add
enter
cld
adc
gs
loopne
mov
out
scas
sbb
add
clc
imulb
jo
add
loopne
lods
fucom
fldl
and
scas
shl
int3
mov
jmp
cmpsb
lods
enter
in
cmpsl
and
add
hlt
jmp
dec
enter
imul
add
sti
xchg
mov
loopne
add
cmp
push
test
sti
popa
pop
xchg
jo
cmp
outsl
inc
fsubp
das
sbb
add
sub
into
ljmp
iret
ljmp
test
sbb
lods
ljmp
cltd
out
or
sti
outsl
add
ljmp
add
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
or
add
sti
jnp
int3
mov
push
les
mov
dec
pushl
in
push
adc
xor
sbb
xor
xchg
inc
inc
cld
in
and
or
cmpb
add
add
ljmp
ror
inc
in
subl
inc
inc
inc
inc
loopne
cld
loopne
ljmp
in
add
mov
decl
dec
clc
les
stc
mov
incl
inc
call
mov
push
lock
stc
mov
decl
dec
cld
clc
add
add
enter
inc
push
hlt
mov
add
or
cmpsl
inc
dec
hlt
add
jae
inc
push
lock
lret
aaa
aas
inc
fcoml
or
mov
mov
add
mov
repz
mov
jae
inc
push
mov
dec
in
les
in
mov
mov
enter
mov
ret
cli
lock
mov
ror
jl
int3
add
add
add
jnp
int3
mov
sub
call
mov
pop
jmp
cmpl
hlt
cs
add
leave
inc
add
cli
call
jno
lahf
clc
push
pop
add
loop
push
push
mov
test
aas
enter
mov
mov
xorl
inc
cld
add
add
add
adc
hlt
jno
enter
inc
add
add
cwtl
mov
addb
int3
add
int3
sti
jl
int3
push
in
mov
jno
inc
xor
or
jl
int3
cmpl
jl
int3
ljmp
mov
rclb
je
inc
aas
or
add
jl
int3
jnp
int
ljmp
add
or
decl
jb
aas
inc
inc
clc
cmpsl
pusha
aas
aas
aas
inc
clc
outsl
pusha
mov
clc
push
les
inc
cld
mov
adc
adc
push
les
push
rclb
int3
push
in
push
addb
ss
inc
cld
mov
insb
mov
add
xchg
scas
dec
adc
xchg
push
cld
dec
xor
mov
mov
mov
and
jne
xchg
enter
pop
add
mov
ror
jge
int3
add
int3
sti
jl
int3
mov
add
fwait
cmp
outsl
inc
aas
or
int3
or
int3
add
int3
sti
jl
int3
mov
xchg
inc
jns
add
add
mov
add
cmp
or
cmp
or
mov
add
aas
pop
or
ds
dec
cld
mov
std
cmp
je
inc
les
std
mov
js
mov
pop
ret
inc
testl
xor
adc
enter
cmp
or
add
add
cmp
adc
jp
xchg
cmp
xchg
ds
push
aaa
cmp
add
imul
ror
cmp
xchg
aas
inc
in
cli
in
ljmp
call
mov
add
aas
aas
dec
lock
inc
clc
add
enter
lds
add
add
std
loopne
jp
cmpb
or
enter
adc
call
cli
sti
adc
or
cmpb
fcompl
mov
lret
adc
fists
or
adc
mov
loopne
cli
iret
incl
push
inc
hlt
les
call
mov
in
movl
add
aas
enter
dec
jns
aas
fmull
mov
push
add
add
add
enter
dec
aaa
add
push
or
mov
pop
mov
bound
incl
clc
call
addl
mov
jae
mov
mov
les
lea
push
mov
std
push
cmpsl
ds
pushl
add
mov
fisttpll
jnp
adc
inc
push
inc
hlt
mov
in
cmpl
dec
arpl
mov
push
push
loopne
aad
call
out
jl
int
ljmp
lock
enter
dec
inc
clc
cmpsl
fs
aas
aas
push
inc
clc
outsl
jo
std
add
les
inc
cld
les
adc
sti
or
add
add
cld
mov
add
int3
sti
xchg
int
push
in
mov
jns
push
inc
aas
dec
push
add
mov
int3
jnp
int
ljmp
push
in
push
add
mov
xor
les
or
hlt
mov
cmc
mov
push
push
clc
mov
cld
mov
add
add
xchg
mov
int3
das
rclb
dec
notl
sbb
or
push
inc
clc
mov
or
push
xlat
push
inc
adc
enter
mov
adc
cmpsl
mov
das
shlb
in
mov
int3
mov
int
jnp
int
or
subl
inc
add
add
xor
aas
lock
inc
mov
push
daa
clc
cld
ljmp
dec
lds
mov
cmc
push
dec
dec
clc
outsb
dec
push
sbb
or
mov
push
push
arpl
pushf
mov
ds
or
add
mov
jmp
dec
push
add
pop
imul
aas
movb
mov
add
add
add
outsl
fwait
incb
and
add
sub
mov
mov
enter
outsl
inc
aas
dec
push
inc
int
add
mov
xchg
stc
call
addl
xchg
cmp
or
out
fisttps
sti
xchg
int
mov
mov
xlat
add
add
add
movb
adcl
int3
or
subl
nop
add
dec
inc
or
orb
mov
loopne
cli
addr16
pop
mov
inc
or
push
inc
call
aas
dec
push
cmp
pop
add
adc
jmp
inc
lds
or
push
lock
aas
enter
movl
aas
popa
push
lock
or
mov
clc
xchg
testl
cmp
ret
inc
mov
add
aas
insl
or
ds
inc
hlt
les
loope
enter
repnz
jo
mov
jmp
je
dec
dec
call
jmp
xchg
dec
aas
adc
adc
mov
mov
mov
xchg
into
testl
add
scas
movsb
xchg
shrl
inc
daa
dec
dec
or
adc
mov
add
clc
call
addl
xchg
inc
ret
adc
jmp
dec
push
in
jo
cld
shlb
inc
lock
inc
mov
push
xchg
dec
idiv
cwtl
inc
lds
or
orl
inc
aas
enter
shlb
jb
push
incl
add
adc
add
fistpl
out
add
aas
enter
cmc
xchg
push
dec
xor
pop
push
lock
push
lock
aas
enter
sti
data16
div
mov
mov
enter
repnz
push
les
sti
push
iret
sub
dec
fwait
push
dec
fdivs
add
jg
inc
pop
push
inc
loopne
or
in
fidivs
xchg
jae
cld
addl
mov
add
mov
inc
fdivrs
mov
inc
and
loopne
mov
jb
enter
push
push
inc
lea
add
outsl
push
push
adc
or
push
hlt
in
push
xlat
fdivp
jmp
dec
lds
add
les
mov
outsb
inc
aas
lret
dec
sub
jg
ja
inc
add
aad
mov
outsb
inc
aas
cli
mov
push
mov
xor
push
call
mov
mov
inc
aas
cli
call
cmpl
popa
xlat
xchg
aas
aas
sub
call
mov
je
or
add
add
push
loopne
mov
inc
aas
leave
sub
pop
add
lods
cld
jmp
dec
lds
mov
jb
enter
in
add
mov
pop
jb
lea
clc
inc
adc
fiaddl
out
pop
push
aam
imul
add
enter
mov
int3
jnp
int
or
mov
rolb
int3
add
add
int
ljmp
cmp
mov
sub
jle
xchg
jo
push
pop
cld
mov
int3
push
in
push
addr16
inc
aas
daa
cmp
call
mov
pop
mov
mull
mov
pop
jb
dec
decl
pop
mov
or
in
subl
add
aas
test
add
add
enter
add
add
enter
pop
add
aas
enter
movl
or
call
mov
bound
add
aam
movl
add
aas
outsl
pop
cmp
add
aas
inc
xor
add
push
ret
add
aas
enter
popf
cmp
enter
add
dec
out
add
dec
enter
daa
xor
movl
mov
cwtl
outsb
inc
aas
dec
inc
call
cli
outsl
mov
push
push
sbb
or
push
push
mov
jb
lahf
cmp
or
movl
aas
aas
lock
add
xchg
insl
jo
testl
daa
dec
jb
enter
add
xchg
inc
add
dec
jb
enter
pop
cld
mov
pop
mov
clc
call
addl
add
aas
sub
call
mov
pop
mov
dec
push
cld
and
lock
dec
inc
loopne
dec
dec
fsubr
outsl
stos
sti
inc
pop
add
and
xchg
add
add
inc
add
enter
stc
xchg
cmp
std
push
out
cli
push
inc
lds
repz
add
dec
push
in
add
add
dec
dec
loopne
lret
inc
jb
mov
insl
fwait
cli
pop
add
aas
enter
repz
cmpl
push
xchg
clc
xor
icebp
jae
dec
push
xor
push
add
add
add
pop
mov
cmp
clc
mov
cmp
stc
mov
dec
dec
clc
mov
enter
inc
add
clc
xor
xor
inc
pop
dec
or
enter
insl
pop
add
aas
xchg
leave
mov
shrb
xchg
leave
mov
lods
outsb
inc
aas
jo
test
inc
add
or
mov
mov
add
aas
enter
lods
rorl
aas
daa
sub
push
call
mov
xchg
outsb
inc
aas
imul
aad
pop
cld
test
add
jg
daa
mov
outsb
inc
aas
dec
lds
xchg
cmp
enter
sub
inc
arpl
call
mov
outsb
inc
aas
cli
mov
pop
cld
test
int3
aas
enter
add
aas
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
add
aas
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
add
aas
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
