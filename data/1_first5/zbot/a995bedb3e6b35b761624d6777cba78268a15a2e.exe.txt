push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
push
mov
push
mov
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
movzwl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
jmp
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
mov
mov
mov
mov
mov
movl
mov
mov
movl
cmpl
jne
movl
push
push
call
mov
mov
mov
mov
mov
mov
mov
push
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
movl
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
xor
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
cmpl
jne
mov
mov
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
movl
movl
mov
mov
movzwl
and
add
mov
movl
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jge
mov
add
movzbl
mov
movl
mov
add
mov
mov
movl
jmp
mov
pop
ret
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
pusha
movl
movl
mov
mov
mov
mov
movl
mov
movzbl
cmp
je
mov
movzbl
cmp
je
xor
jmp
mov
mov
mov
mov
mov
mov
lea
push
mov
push
push
call
test
je
call
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
mov
mov
push
push
mov
push
call
add
popa
mov
mov
xor
je
ret
mov
add
xor
dec
jne
pop
pop
pop
mov
pop
ret
add
add
inc
or
add
add
mov
cmp
xor
cmp
add
or
add
cmp
xor
or
push
cmp
xor
cmp
popf
cmp
xor
add
int
sub
jle
les
scas
aas
enter
adc
xor
lock
add
fwait
or
add
sbb
cmp
xor
cmp
aaa
cmp
xor
cmp
xor
cmp
xor
inc
xor
cmp
sbb
pop
xor
cmp
lds
xchg
xor
cmp
xor
or
inc
cmp
and
sub
test
jle
iret
cmp
xor
add
cmp
xor
cmp
xor
cmp
xor
cmp
adc
and
cmp
pop
xor
cmp
pushf
xor
ds
mov
and
outsb
ds
xor
and
mov
inc
or
add
add
inc
or
add
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
add
inc
or
add
add
inc
or
add
push
add
inc
pop
inc
add
insb
je
xor
insl
jb
adc
add
add
fs
pop
bound
jp
inc
incl
add
popaw
fs
pop
bound
jp
inc
fistps
add
insb
je
fsubrs
stos
inc
popa
outsb
mov
or
add
inc
imul
push
add
subb
add
outsl
jo
inc
imul
jns
inc
or
add
insl
jne
and
outsb
sub
push
inc
or
add
inc
add
or
imul
add
inc
add
or
adc
inc
add
or
out
or
or
aad
arpl
insb
jb
aam
add
xchg
fs
mov
jb
ja
inc
add
scas
dec
add
lods
outsb
jb
mov
insl
insb
insb
inc
or
add
jbe
jne
cs
add
insl
jae
jge
add
jbe
push
jge
fs
add
xor
arpl
jb
add
bound
xor
inc
xor
arpl
add
stc
popa
jb
adc
inc
rep
arpl
add
sbb
popa
negl
add
fadds
inc
out
fs
popa
jb
shrb
push
mov
je
movsb
jge
add
popa
jo
gs
outsl
movsb
or
add
xor
pop
insl
insb
insb
inc
or
add
arpl
js
gs
add
inc
add
pop
nop
inc
filds
add
add
inc
repz
add
add
inc
loop
add
add
add
inc
loop
add
add
inc
loop
add
add
inc
loop
add
add
inc
loop
add
add
inc
bound
inc
in
sbb
adc
mov
push
lahf
or
mov
push
xchg
shrl
shrl
aam
bound
add
daa
lods
dec
push
daa
int
fs
or
inc
or
add
add
mov
add
or
test
inc
or
add
or
or
add
aaa
jmp
dec
inc
or
add
push
in
inc
or
adc
jmp
add
or
adc
jmp
add
jmp
add
jmp
jae
or
add
inc
or
add
jmp
or
adc
jmp
adc
add
inc
or
flds
jmp
inc
or
in
jne
add
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
add
inc
or
jmp
inc
or
jmp
inc
or
sarl
insl
inc
or
jmp
inc
or
add
or
add
or
add
or
add
or
add
pusha
gs
or
add
add
scas
sbb
add
push
add
sahf
or
add
or
add
add
fs
sbb
add
outsb
or
add
add
pop
push
add
outsb
or
add
add
pop
or
add
add
outsb
add
popa
je
add
add
cs
add
inc
add
push
push
add
inc
loop
add
add
inc
loop
add
add
pop
loop
add
add
inc
loop
add
add
inc
lods
mov
das
int
inc
inc
or
add
test
divl
mov
push
or
dec
loop
mov
loop
jb
mov
add
push
or
shl
jne
cmpsl
push
or
add
repnz
orl
insb
dec
push
and
mov
ret
out
pop
inc
sbb
jmp
push
aas
cmp
inc
out
aam
clc
je
idivl
jno,pt
add
out
fwait
femms
int3
fldl
jb
adc
jge
dec
jmp
testl
in
jmp
push
dec
cmp
or
cmp
out
pop
clc
xorb
add
push
pop
andb
lret
in
add
cmpl
sti
aad
stos
testb
xchg
add
jmp
add
add
add
mov
iret
inc
clc
mov
adc
jne
stc
jae
dec
xchg
adc
xchg
icebp
in
push
bound
mov
outsb
or
fnstenv
push
push
icebp
lcall
adcb
push
or
xchg
jbe
ret
ret
mov
jmp
cmp
push
bound
int
sbb
jb
xchg
cmp
out
jne
add
insb
jo
cmpsb
pop
add
adc
rol
inc
adcb
pop
lea
arpl
push
pushl
sbb
jne
divb
test
insl
adc
pop
pop
mov
xchg
jmp
rclb
or
mov
in
andl
push
push
push
ja
ret
dec
mov
sahf
pop
push
subl
add
and
pop
addr16
or
add
sbb
mov
outsb
or
pop
cmpsl
lret
cmc
pop
or
and
add
outsb
or
lea
icebp
push
pushl
adc
or
xchg
bnd
scas
fldt
rorb
jbe
inc
cmc
cld
sub
lret
loop
inc
add
repz
loopne
add
lret
loop
mov
pusha
mov
push
inc
add
xchg
push
cwtl
add
cwtl
add
loop
sbbb
add
mov
fnstsw
ret
push
adc
inc
gs
push
or
pop
addr16
inc
test
dec
ljmp
inc
push
test
repnz
icebp
pop
mov
ja
aam
add
call
xchg
jmp
je
repz
push
cmp
or
stos
inc
or
add
icebp
add
or
add
pop
jmp
inc
ljmp
cwtl
shrb
inc
push
jb
pop
movsl
sti
inc
inc
icebp
pop
add
fisttpll
js
loope
lock
ljmp
rcr
subl
or
sbb
add
decl
sbb
inc
jge
or
jmp
adc
jne
in
addr16
pop
cmc
jge
loope
pop
call
loopne
jne
cmc
jae
jp,pt
leave
sub
jmp
add
test
clc
fwait
dec
incl
mov
ret
push
mov
bound
jne
int
adc
ja
adc
lock
push
add
jae
hlt
add
adc
add
insb
in
sbbl
add
imul
lcall
out
rcr
mov
cmpl
popa
pop
mov
bswap
jne
sub
aaa
iret
or
mov
fcos
jne
inc
add
fwait
in
xchg
and
decl
scas
pusha
or
sbb
xchg
add
add
pop
movsb
ret
aas
mov
sub
call
call
pop
or
inc
dec
icebp
pushl
inc
or
or
dec
idivl
sub
and
adc
jge
jbe
mov
ljmp
in
lcall
or
mov
enter
add
in
in
pop
add
mov
fistl
add
es
add
and
jl
push
jl
lea
push
cmp
pop
pushl
fcmovu
mov
xchg
adcl
add
or
les
shrb
lock
flds
dec
push
pop
lcall
shrl
loopne
int3
and
inc
out
sbb
jmp
pop
inc
jae
pop
inc
or
ret
add
sbb
fisttpl
dec
gs
jnp
pop
jns
icebp
sbb
lock
dec
out
or
add
xchg
sti
int
arpl
cmp
addl
or
push
out
mov
out
inc
add
or
jl
xchg
test
out
cmp
cld
rcll
out
insl
cmpsb
je
lea
xchg
inc
or
iret
ret
cmp
xchg
sahf
mov
out
pusha
jg
sub
or
jmp
in
std
outsb
sbb
imul
loopne
jne
fstps
inc
pop
adc
ret
cmp
cmp
psraw
jmp
mov
xchg
push
add
icebp
push
push
divb
add
cltd
pop
clc
jmp
in
push
jb
inc
clc
cmpsl
lret
xor
push
inc
or
hlt
jne
xchg
cld
lcall
cmp
in
push
adc
jne
shrl
leave
test
push
or
lret
or
pop
adc
jmp
pushl
cmc
jne
cltd
pop
or
adc
out
mov
dec
sub
add
jmp
jne
add
push
cltd
lcall
jge
inc
bnd
les
in
jne
jecxz
or
gs
out
repz
decl
push
filds
cmp
fcmovbe
add
add
xchg
in
jne
mov
or
aas
in
cmp
jns
les
lcall
arpl
pop
mov
decl
xchg
jp
in
jne
add
jbe
fbld
call
test
fcomps
pushl
sti
addr16
roll
in
sti
test
push
in
test
jmp
pop
cwtl
jecxz
pop
inc
xchg
lods
clc
jecxz
sti
push
outsb
jmp
or
cmp
repnz
and
dec
mov
in
add
pop
xchg
icebp
jecxz
cmp
rolb
add
sub
les
scas
or
sti
sub
jo
or
hlt
out
pop
icebp
fistpl
pop
jmp
pop
loope
push
in
jmp
dec
inc
mov
mov
faddp
movsb
mov
add
inc
xchg
inc
sbb
mov
rolb
in
stc
negb
pop
cld
rorl
add
jno
je
add
pop
pop
clc
cmp
or
cmp
add
cmp
icebp
or
cmp
mov
sub
adc
xchg
hlt
cmp
cld
sbb
push
sbb
loop
bound
xchg
pop
add
or
fs
push
dec
push
adc
add
add
imul
dec
adc
call
aaa
dec
clc
adc
add
orb
out
jne
ss
je
out
jne
fiadds
call
popa
popf
not
out
hlt
sti
lock
jmp
lock
xchg
sti
push
mov
jmp
mov
push
aas
cld
lcall
in
lock
repnz
pop
aad
add
or
inc
sahf
xor
sar
inc
aaa
jmp
je
add
push
outsl
pop
icebp
add
inc
dec
add
xchg
add
add
popf
jl
les
in
lea
push
push
lcall
fcmovu
dec
je
add
repnz
fsubrs
call
jne
lret
inc
repnz
mov
cmp
pop
or
call
roll
call
cli
sbb
aas
repnz
mov
jae
call
orb
push
lock
icebp
fucomi
mov
fidivrs
or
add
push
icebp
fcmovnb
loopne
call
xor
adc
call
or
jp
flds
outsb
fwait
lock
inc
or
dec
push
jmp
fcompl
inc
aam
xchg
outsb
or
orb
inc
stc
call
add
sub
popf
or
lock
out
fsts
addb
lcall
loope
hlt
loopne
cmp
call
in
out
push
call
sub
test
fidivs
in
mov
fsubrs
ss
pushf
lods
out
sbb
test
clc
push
push
icebp
jl
out
std
mov
add
in
add
add
imul
imul
int
pop
mov
add
subl
jae
sub
inc
mov
leave
stos
sbb
push
add
or
push
mov
leave
ret
push
mov
loop
dec
push
push
pop
mov
stos
pop
add
sub
inc
leave
ret
push
mov
push
mov
aad
mov
loop
dec
outsb
ljmp
sub
call
push
push
cmc
insl
or
in
adc
scas
pop
jge
jge
repz
push
mov
pop
leave
in
loope
push
mov
add
dec
push
push
inc
or
add
in
aas
jp
decl
pop
jns
dec
sub
add
add
jnp
sub
addr16
jne
sub
incb
mov
cmp
movsl
in
or
add
repnz
push
cmp
dec
out
mov
jns
mov
cmp
xchg
ss
out
sbb
jno
outsb
aad
sbb
test
add
sahf
add
decl
dec
adc
jnp
cmp
add
add
in
and
add
jb
aaa
call
out
sbb
lods
pop
and
call
xchg
lods
out
hlt
adc
imulb
jg
jg
mov
hlt
loopne
adc
jmp
mov
inc
adc
cmp
push
ds
out
jns
fisubs
int
in
jp
or
or
stos
adc
add
lock
loop
fistpl
das
insb
lea
xchg
fiaddl
cmp
icebp
mov
test
inc
or
sbb
icebp
das
xchg
and
mov
fidivl
repz
jmp
gs
inc
pop
in
hlt
push
insl
push
lret
dec
outsb
aad
mov
mov
movsb
fidivl
mov
fidivl
lods
pop
iret
jmp
call
cltd
insb
movsb
mulb
jne
gs
clc
je
jmp
fisubs
call
into
out
adc
add
mov
push
jnp
call
or
out
hlt
mov
clc
cmp
jmp
cmpsb
out
clc
lcall
xchg
mov
incl
les
add
add
mov
mov
rorl
sar
movl
xchg
out
jge
add
pop
hlt
add
jae
imul
add
add
cld
push
inc
push
outsb
add
adc
rcl
jmp
adc
add
pop
push
jno
mov
inc
hlt
ja
add
xchg
shl
jne
mov
loop
sarb
jge
loop
inc
in
add
test
loope
cmp
movsl
fildl
dec
inc
std
enter
shrb
add
daa
push
adc
daa
add
dec
and
clc
or
std
mov
sub
inc
push
jmp
je
out
clc
mov
aam
push
or
mov
mov
add
xlat
mov
pop
aad
mov
movsl
push
push
fcoms
das
sub
lds
or
inc
or
cmpl
push
sub
dec
icebp
insl
inc
fcomp
not
pop
stc
loopne
add
xor
lds
add
mov
add
add
add
sbb
mov
add
repnz
push
jmp
pop
mov
dec
add
mov
stos
push
test
ds
cmpl
inc
adc
or
sti
enter
push
and
jb
mov
or
jmp
jle
ss
stos
push
or
idivl
sub
or
or
mov
dec
add
add
inc
cmc
mull
inc
jmp
add
push
les
jmp
push
loope
sub
or
xor
call
add
xchg
pushl
sbb
aas
sub
push
call
aad
pop
leave
pushf
add
push
in
push
orl
inc
or
and
popf
imul
sub
jne
loop
add
sbb
repz
add
add
dec
push
call
push
xchg
pushl
sbb
jmp
or
incl
push
push
call
jns
or
ss
call
add
push
inc
imul
addl
push
outsl
push
jo
dec
cld
les
jne
mov
push
fstp
fdivl
cmp
push
imulb
inc
inc
les
mov
das
neg
lcall
lods
inc
cld
inc
loop
add
add
inc
inc
ja
mov
inc
or
pop
pop
call
pop
push
lret
push
pop
mov
inc
inc
inc
adc
and
dec
and
mov
pop
lds
or
add
ret
jb
xchg
xor
ret
mov
jae
jb
dec
add
pop
dec
mov
add
or
cmp
add
or
fldl
inc
add
or
inc
or
fdivrl
or
mov
pop
test
in
sub
jmp
add
mov
inc
or
jecxz
sub
cmp
cmc
push
adc
push
dec
xchg
jmp
roll
push
dec
loope
enter
clc
call
dec
fwait
rclb
add
add
inc
or
sub
push
jb
xchg
std
fisttps
push
mov
add
leave
je
sbb
call
pusha
xchg
pop
sbb
call
loop
pop
or
jbe
call
ret
add
aad
stos
inc
or
fbstp
mov
pop
adc
repz
cli
data16
pop
add
inc
pop
add
add
inc
pop
add
inc
or
add
scas
jne
push
and
add
sbb
insb
lret
sahf
push
mov
add
add
fs
lods
ficomps
pop
push
or
ficompl
mov
add
add
push
call
mov
or
jnp
pushl
fdivp
lret
pushl
mov
lret
movl
jmp
add
scas
xor
mov
or
pushl
sub
xchg
dec
or
pop
pop
leave
sbb
call
out
int3
movsb
or
mov
or
ds
add
mov
adc
jmp
jge
add
sbb
out
mov
jmp
andl
sub
loopne
adc
push
loopne
mov
rcr
add
inc
repz
loop
add
pop
push
outsl
and
xchg
int
xor
pop
pop
add
add
inc
loop
ret
jmp
bnd
xlat
or
ret
jmp
fstp
dec
fxch
inc
inc
xor
xor
inc
inc
popa
jmp
inc
mov
mov
jmp
cmp
lret
fdivrs
jmp
enter
shl
fcoms
jmp
insl
inc
arpl
xchg
rol
fadds
pop
jle
loopne
fcoms
shlb
ss
jmp
hlt
inc
or
imul
inc
inc
loope
xlat
call
add
xchg
jge
pop
mov
lahf
iret
or
aas
test
jmp
mov
ljmp
roll
xchg
mov
xchg
loopne
nop
iret
push
adc
sar
testb
mov
rolb
out
lret
jmp
sub
inc
jnp
mov
and
inc
and
ljmp
clc
into
push
adc
xchg
loopne
adc
push
adc
sti
incl
add
shlb
call
lock
push
sub
push
call
into
addl
out
imul
call
pushl
loope
ljmp
mov
sbb
jmp
addb
push
pop
leave
add
dec
push
lea
sbb
mov
out
incl
add
pop
hlt
jmp
mov
mov
and
clc
xchg
div
xchg
test
jle
out
push
aad
fcomps
cld
fcomip
leave
add
add
cli
das
out
mov
inc
imul
mov
push
lret
decl
push
ljmp
int3
add
ret
js
into
lock
aad
clc
into
aad
add
mov
scas
aad
das
aad
das
pop
int
xor
aam
sub
aad
das
popa
int3
add
bnd
xchg
lock
out
fcoml
pop
xchg
and
add
movsl
jle
jmp
jbe
out
bound
loopne
int3
pop
xor
xchg
inc
in
int3
inc
push
jle
jmp
aam
fldl
cwtl
loope
out
int3
jo
add
lahf
fcompl
aad
xchg
add
js
add
js
push
mov
pusha
xchg
or
and
jmp
mov
loopne
aam
sbb
jb
adc
fadds
repz
call
cmpsb
mov
loope
xchg
int3
call
incl
sti
sub
pop
mov
add
push
cli
lret
pushl
add
lret
xor
pop
inc
int3
jne
ret
inc
add
mov
sub
inc
mov
ret
inc
clc
jmp
sbb
add
lret
jnp
or
je
mov
filds
cmpsb
mov
add
inc
or
add
lods
adc
sub
or
imul
push
jne
or
add
pop
lods
cmpl
jne
shll
call
gs
clc
pop
cmpsl
ret
or
mov
mov
inc
add
cmpsb
jnp
incl
lret
pop
mov
add
sahf
push
add
adc
add
or
sub
jne
scas
and
outsb
push
cmp
xor
push
fdivp
and
mov
jle
add
xor
xor
stc
inc
add
outsb
enter
mov
inc
loopne
pop
insl
loopne
call
cmp
push
add
inc
mov
mov
inc
loopne
clc
inc
stos
push
dec
loopne
sbb
cmp
int3
movsb
incl
mov
add
inc
shl
and
ljmp
cli
out
hlt
add
jb
sar
fisubrl
push
cld
pop
or
inc
or
push
inc
mov
xlat
cmp
mov
pop
sub
daa
add
frstor
pop
xor
repnz
add
mov
lret
dec
lock
dec
jmp
loopne
pop
push
rcll
sbbl
and
test
jmp
jge
cltd
jb
add
push
hlt
sub
fmulp
rcll
mov
add
and
add
adc
push
inc
push
icebp
add
verw
or
add
inc
push
or
jns
in
bound
push
addb
or
or
jmp
arpl
jmp
les
pop
sbb
xchg
adc
xchg
add
inc
addl
inc
or
cmp
jne
inc
lret
leave
sub
push
bound
dec
or
inc
or
push
inc
fidivrl
inc
add
or
adc
or
adc
addb
lds
xorb
sub
add
leave
jne
inc
ret
pop
js
enter
push
push
xlat
adc
add
cmp
sarb
fistl
movzbl
cmp
push
nop
insl
lret
ds
sbb
seto
lcall
nop
fsts
add
lods
jp
cmp
cmp
repz
jg
es
nop
lods
jp
cmp
cmp
push
nop
jg
es
add
dec
rol
test
roll
mov
mov
jae
in
repnz
ss
inc
cmp
xlat
cmp
xlat
sub
xlat
and
nop
das
add
call
pusha
mov
mov
jae
in
jae
xlat
xor
add
xor
add
push
scas
nop
int3
jb
pop
jo
mov
mov
data16
push
pop
sti
jg
stos
jg
and
push
or
movb
mov
lret
into
repnz
pop
inc
xor
pop
inc
xchg
sti
popa
cmp
add
jl
add
je
das
mov
add
adc
std
lret
into
jmp
shll
scas
or
xchg
enter
ret
push
lea
inc
or
pop
inc
or
cld
shrl
inc
das
jmp
int
pop
orl
add
mov
les
call
icebp
cmpsl
add
mov
into
nop
les
cltd
insb
loop
cs
les
xor
and
add
out
or
incb
mov
jns,pt
jmp
mov
out
adc
add
das
add
das
add
or
test
or
call
pusha
add
jne
or
or
add
cltd
shr
or
jmp
ret
jne
cld
faddp
jmp
iret
ret
xchg
ret
call
int
jmp
jnp
call
add
call
add
mov
pop
or
push
inc
add
cmp
scas
pop
call
or
lds
add
iret
call
add
ret
cs
or
and
add
pop
cmp
punpckhwd
inc
cld
cs
jmp
mov
ljmp
in
std
push
into
or
mov
dec
add
inc
pop
xor
scas
pop
lret
lcall
mov
sti
cli
cmpsl
js
push
sbb
incl
add
adc
loope
lret
cmp
dec
push
dec
inc
call
into
hlt
lret
xorl
inc
hlt
ja
push
cld
das
sbb
add
ret
js
jnp
hlt
out
lods
movb
mov
je
add
jne
xchg
fdivrs
push
clc
je
fsubrl
cmp
out
or
add
add
add
repnz
lret
sub
mov
loope
adc
icebp
ficoms
add
int
call
or
hlt
sub
dec
imul
js
pop
ffreep
add
dec
daa
mov
sti
xchg
in
inc
dec
sarb
xchg
add
call
leave
dec
pop
mov
cli
pusha
cmp
out
addl
push
add
push
or
scas
pop
add
jmp
xchg
int
xor
lods
andl
out
inc
jmp
dec
test
or
inc
iret
add
hlt
mov
jmp
js
add
inc
mov
je
jne
xchg
or
hlt
fsubr
inc
jmp
sti
ss
xchg
shrb
dec
mov
inc
sub
aam
out
inc
jmp
pop
inc
in
inc
or
mov
jne
inc
inc
in
sub
ret
push
push
add
sahf
faddl
repz
add
or
sbb
jecxz
test
pushl
rcll
or
push
add
inc
hlt
add
loop
rcrl
ret
add
aad
ret
lock
sub
call
outsb
cmc
out
inc
call
pop
or
roll
repnz
push
mov
mov
cld
sub
mov
pop
sub
sub
add
sbb
inc
or
inc
or
cmp
fcmovnb
xchg
adc
mov
lock
mov
jnp
push
in
push
jne
mov
push
sbb
inc
mov
mov
pop
rol
pop
lret
jp
mov
add
std
jp
les
push
je
xor
cmp
shlb
addl
mov
adc
or
add
jb
int3
shrb
fdivrs
out
les
jb
add
xor
dec
jmp
add
push
add
mov
stos
pop
addb
pushf
lret
push
mov
popf
mov
mov
aaa
mov
icebp
js
mov
jmp
add
jb
aaa
mov
xor
outsl
shrb
fadd
lds
mov
push
push
sbb
mov
add
jge
pop
inc
adc
mov
add
adc
mov
mov
call
test
cld
fs
inc
add
sub
clc
clc
or
clc
insb
notl
push
jle
mov
xchg
jo
ret
adc
rorb
sub
dec
icebp
add
cli
mov
sti
lea
mov
test
adc
add
inc
stc
xor
cli
xor
jnp
xadd
shll
stc
std
iret
xor
push
sub
sub
cmp
add
rol
or
mov
sbb
and
sti
lea
mov
inc
cs
add
mov
insl
orl
pushf
inc
or
sbb
add
leave
push
add
inc
stc
xor
xor
pop
push
subb
pop
rcr
add
xchg
jp
stc
inc
bsf
push
pop
cwtl
pop
fdivrs
mov
rolb
idiv
and
idiv
shrb
mov
xchg
ret
add
scas
int
mov
jg
ror
adc
jae
push
inc
stc
mov
add
push
push
out
push
inc
xchg
test
adc
xor
aaa
mov
xor
cwtl
pop
mov
fwait
std
inc
lcall
int3
mov
cli
fs
cli
mov
inc
pusha
push
dec
adc
push
sbb
int
mov
cli
mov
dec
jne
pop
mov
cmpsl
cmp
rorb
cmc
nop
add
ret
add
jmp
inc
enter
bound
push
mov
lcall
lock
xchg
lea
jle
xor
js
pop
adc
pop
jmp
xchg
ljmp
sarl
add
shrl
or
jb
cld
cli
or
cld
clc
fs
filds
das
add
pop
lret
inc
int3
mov
repnz
jge
pop
adc
inc
or
roll
clc
mov
cld
xchg
inc
inc
cmp
test
add
lret
push
stos
shlb
mov
fsub
ljmp
fldenv
cld
cli
lret
clc
insb
iret
adc
and
ljmp
xor
inc
mov
cli
lea
into
add
int3
ret
fmull
sti
std
jae
mov
orb
lahf
lret
xchg
test
xor
xchg
lods
sub
shr
add
and
jne
stc
sbb
test
shlb
mull
pop
mov
adc
clc
mov
push
lret
insl
fisttpl
and
sarl
add
push
loope
push
inc
ljmp
push
stos
xchg
pushf
xor
push
sub
sbb
push
cmp
xor
mov
ret
scas
inc
cmp
outsl
add
popa
les
arpl
not
push
pop
xorl
add
rorl
popf
and
mov
rolb
repz
nop
pushf
dec
aam
in
or
pop
pop
enter
shlb
adc
fidivrl
sub
or
sub
adc
dec
inc
pop
stc
les
mov
mov
cmp
and
add
or
and
enter
adcl
jg
jbe
pop
pop
enter
shlb
push
mov
mov
adc
daa
ret
dec
or
mov
bnd
add
mov
mov
add
cmp
scas
lea
mov
push
adc
dec
in
or
adc
incb
clc
je
add
adc
cld
mov
lret
inc
rorb
ret
pop
lock
fldl2e
mov
shrb
clc
clc
fimull
fisttpl
test
add
xchg
mov
jne
mov
mov
or
test
adc
mov
xor
jecxz
pop
gs
rolb
rol
or
mov
ljmp
or
sbb
dec
and
cmp
push
rcrl
ret
jno
jmp
mov
cli
lea
dec
add
mov
fst
mov
xor
orb
inc
cmp
out
add
lret
pushl
mov
stc
lea
adc
add
mov
add
inc
lahf
fidivrl
xor
or
xor
mov
sahf
inc
xor
push
mov
clc
dec
sbb
cli
lret
xchg
add
ret
lahf
sarl
push
cmpsl
psubd
mov
mov
clc
lahf
dec
sub
bound
add
cmp
testl
shrl
addl
fdivrl
je
psubq
test
mov
fbld
ljmp
mov
outsl
incb
insl
test
stos
std
mov
test
jmp
mov
cmp
add
inc
inc
ljmpw
or
mov
adc
iret
idiv
subl
add
push
cmc
les
ljmp
cmc
mov
mov
or
adc
ljmp
ds
cltd
mov
jno
scas
lea
cld
icebp
and
push
push
add
xchg
jno
inc
lods
mov
inc
cmp
jb
sub
incb
shrl
push
lret
mov
push
xor
cmp
shrl
or
lds
int
ljmp
add
inc
or
inc
pop
or
mov
mov
mov
push
pop
inc
insl
ret
inc
push
mov
adc
jno
add
addl
fisttps
and
jmp
inc
add
sbb
aaa
add
lahf
or
mov
add
mov
xor
and
lock
jmp
mov
pop
add
ja
inc
out
fs
cs
call
andl
call
insl
out
inc
sub
test
inc
gs
pop
add
jno
push
push
pop
cmp
inc
xchg
mov
orl
inc
add
and
test
dec
mov
and
push
inc
inc
mov
mov
inc
mov
mov
andb
js
cmp
or
mov
aad
es
paddw
xchg
inc
add
cltd
add
inc
xor
adc
int3
int
xchg
pop
leave
movsb
mov
inc
add
inc
sub
xor
or
add
cld
loopne
push
or
and
mov
or
inc
mov
lea
and
or
pop
and
add
and
and
or
pop
scas
inc
pop
or
ret
pushf
mov
and
mov
and
lret
and
mov
std
xor
xchg
pusha
adc
add
orl
enter
and
add
adc
pop
imul
sbb
cmp
or
xor
mov
dec
jne
int
xor
or
jmp
or
lcall
and
jmp
ja
fs
jle
xor
pushf
ljmp
cltd
adc
mov
lret
push
adc
mov
or
inc
xchg
jns
jle
jne
lret
jo
lods
shll
lret
inc
roll
sub
mov
mov
jno
ret
mov
dec
dec
add
imul
ljmp
cmpb
imul
and
add
add
scas
fcmovne
mov
in
mov
add
dec
mov
add
mov
inc
clc
sub
mov
cld
xchg
in
testl
sbb
rolb
aad
in
jmp
jne
movb
xor
sahf
xchg
jp
aad
inc
lret
data16
cmp
cld
add
xchg
mov
pushf
add
push
mov
add
jb
inc
inc
mov
add
inc
ljmp
inc
movsl
mull
mov
mov
add
test
call
les
mov
imul
jp
inc
mov
jne
clc
mov
adc
add
test
inc
jno
mov
add
stos
ret
or
push
enter
jle
xchg
mov
out
sbb
jge
jmp
cmp
or
pop
flds
mov
ret
inc
or
push
andl
cmp
xchg
cld
call
ljmp
push
inc
or
mov
cli
adc
mov
add
stos
push
and
sahf
xor
adc
push
cmp
movsb
mov
das
add
adc
into
mov
inc
push
mov
pop
or
sub
add
inc
dec
pop
mov
push
std
mov
add
jne
in
test
mov
xlat
pop
push
clc
add
sbb
or
jmp
sahf
add
jge
xchg
rol
in
inc
mov
cmc
test
add
pop
jmp
clc
sbb
add
or
test
pop
fisttps
add
pop
pushl
mov
lea
lcall
or
ljmp
add
dec
xor
pushl
mov
popf
mov
add
leave
ret
push
mov
mov
cld
lods
movsb
pop
jne
mulb
lcall
cmpsb
mov
jmp
mov
decl
inc
repnz
sbb
inc
sbb
pop
mov
addl
inc
jp
je
mov
cmp
push
xor
ja
ss
add
cmp
mov
or
xchg
sbb
jl
cld
pop
lds
add
add
subb
sub
fwait
sbb
mov
xchg
push
out
or
mov
dec
stos
ret
jne
or
pop
and
add
or
cmp
jmp
add
dec
fstps
add
inc
mov
pop
cld
loopne
xchg
add
mov
cmp
out
xchg
adc
mov
xchg
fs
cmpsb
cmpsb
push
mov
stc
xor
add
imul
add
in
insb
sbb
mov
jp
mov
sbb
dec
cmp
sbb
pop
cmpsb
es
push
or
jmp
add
cmp
adc
push
xchg
dec
xchg
inc
adc
icebp
cmp
ret
and
in
push
adc
jge
inc
sbb
sbb
mov
jb
mov
ljmp
mov
sbb
cwtl
repz
or
fsubrp
movsl
pushl
movsl
lea
cmp
aad
movsl
fimull
sub
cld
shlb
data16
test
fadds
jmp
mov
ja
add
add
test
cs
jne
sbbb
jae
ror
pushl
orb
sbb
adc
add
out
or
jne
jbe
hlt
adc
or
sbb
add
or
xor
pop
call
push
movsl
enter
jne
loope
add
and
add
mov
mov
pop
scas
mov
push
enter
or
mov
inc
mov
inc
pop
imul
push
mov
pop
fnstsw
fadds
repz
das
loop
add
clc
mov
scas
add
inc
inc
cli
in
inc
mov
clc
jo
js
mov
cmp
mov
add
fadd
or
lods
add
fwait
addr16
lods
mov
clc
sarl
scas
jp
lods
mov
call
or
push
repz
call
es
and
or
add
imul
or
arpl
aam
push
adc
pop
mov
push
xchg
ss
add
sub
pop
mov
add
push
mov
mov
push
int3
cmp
ja
mov
icebp
stos
jb
sarl
into
jg
inc
and
mov
cmp
fistps
mov
xchg
jge
movsl
add
or
fwait
push
cmpsl
jle
mov
or
jmp
pushf
mov
jge
repnz
call
mov
sub
jmp
dec
or
xchg
lcall
sbb
add
push
addl
int3
data16
inc
push
rcrb
jge
inc
sbb
rorb
dec
mov
dec
or
pop
pop
pop
push
cmpsb
ja
push
fs
leave
push
subl
sahf
mov
test
inc
xor
add
sti
lock
add
dec
sarb
add
xchg
xor
aam
adc
add
lock
or
push
push
xchg
sub
xor
add
cs
jne
jge
call
std
cli
sub
add
lret
add
or
les
xor
sti
call
inc
stos
ret
jne
mov
mov
dec
test
mov
mov
push
in
test
scas
cmp
push
mov
adc
adc
ficoml
out
cld
inc
xlat
jl
cmp
call
sub
call
sbb
call
or
bound
test
pop
jae
call
mov
inc
dec
stos
ret
je
outsl
add
inc
mov
or
add
jbe
mov
cmp
dec
mov
stos
cwtl
lahf
push
xchg
or
adc
mov
outsl
test
cmp
imul
mov
mov
es
or
and
add
inc
das
or
in
jbe
popf
mov
add
sahf
jl
and
add
sub
clc
xor
xchg
dec
xchg
and
inc
or
add
inc
add
or
fwait
scas
test
add
inc
mov
mov
sahf
mov
xor
stc
inc
or
push
jmp
pushl
pop
cld
shlb
inc
or
test
lods
test
call
rolb
dec
push
popa
lods
xchg
movb
or
hlt
cmp
push
xchg
inc
or
imul
or
sub
pop
xorl
in
fwait
add
inc
movb
or
mov
test
mov
add
and
pop
jge
mov
or
rolb
dec
or
fsubrs
sub
jge
pop
cmpsb
ljmp
mov
les
fdivs
inc
push
ltr
inc
hlt
add
les
or
popa
fnstcw
add
icebp
roll
mov
or
jnp
jne
arpl
movb
mov
mov
inc
mov
les
mov
sbb
rcl
call
cmp
das
add
das
mov
push
cmpsb
call
cli
jae
inc
add
mov
clc
stos
ljmp
ret
jne
aaa
repz
add
das
adc
idiv
mov
shll
push
pop
int3
or
jne
lea
add
xchg
movsb
jne
stc
or
add
outsl
call
call
stc
mov
push
enter
scas
or
pop
inc
adc
xchg
mov
fwait
sahf
js
aas
ss
mov
aaa
ror
les
push
push
or
cmp
inc
pop
push
pop
adc
pop
pop
jmp
repz
adc
movsb
mov
popf
adc
or
clc
fcoms
or
cs
mov
movsl
clc
lcall
int
scas
jmp
lods
inc
fcom
movsb
mov
xor
or
jg
in
push
in
test
in
cmp
add
inc
mov
pop
dec
or
stos
add
dec
mov
push
adc
cmc
inc
xchg
inc
adc
fmull
inc
movsb
lcall
movsl
adc
push
dec
mov
adc
outsl
mov
push
adc
popf
and
push
push
cs
xchg
cmp
scas
add
pushl
pushl
insl
add
ret
push
mov
add
stc
add
sbb
incl
add
push
or
jnp
pushl
data16
xchg
loop
jmp
js
lock
data16
movb
je
test
pop
add
jne
data16
mulb
shlb
jne
mov
sti
push
je
jne
gs
lcall
lea
fsub
loopne
imul
inc
jne
call
push
in
add
add
xchg
mov
loop
scas
mov
and
or
ss
call
stos
pop
movsl
iret
mov
mov
push
xor
xor
mov
adcb
add
aaa
mov
repz
repnz
pop
or
mov
lock
and
push
aas
mov
fldl
lret
ret
mov
add
and
lock
or
stos
into
stos
push
mov
mov
jmp
or
popf
or
xor
cwtl
pop
or
fs
mov
and
or
add
mov
pushf
lahf
xlat
mov
inc
dec
insb
inc
xchg
cmp
mov
fwait
xchg
jle
test
mov
or
pop
xchg
pop
enter
mov
inc
subb
sar
call
inc
or
xor
jmp
add
jno
cmpsl
sbb
adc
mov
negb
add
ds
jmp
push
dec
loopne
ds
test
cmpsl
lea
add
xchg
lea
lcall
test
fs
lret
mov
shl
jmp
mov
stc
call
dec
or
add
pop
sub
push
bound
mov
or
lea
js
sub
loope
sub
or
lahf
orl
jmp
add
icebp
lock
repz
movsl
leave
jne
push
and
inc
sahf
jbe
or
pandn
icebp
bound
push
jbe
or
sbb
mov
xchg
ret
decl
push
icebp
fsin
jne
jbe
adc
lock
lock
call
inc
dec
fstpt
dec
stos
pusha
ret
mov
push
popf
jmp
and
adc
add
add
xor
ss
incb
add
inc
test
pop
loopne
pushf
lret
loopne
psubsb
lret
popf
call
jge
dec
mov
popf
call
pop
pop
sbb
ud0
mov
lcall
stos
pushf
push
aas
ja
lcall
sahf
xor
adc
popf
call
ret
push
out
lcall
push
mov
add
xchg
xchg
inc
xchg
dec
popf
repnz
inc
popf
xor
ss
fists
inc
popf
adc
sub
or
push
pop
push
xchg
jl
icebp
sbb
add
loop
out
lret
call
push
cmp
loop
xor
lds
push
cmp
xchg
mov
rcrl
add
stos
add
insl
scas
mov
orb
cmp
hlt
dec
pop
sbb
add
mov
pop
std
aam
xchg
jne
pop
out
mov
mov
pushl
sbb
xchg
or
push
fcmovnb
ret
cmp
or
sbb
sub
iret
dec
or
sti
addl
sbb
pushw
xchg
and
add
or
jmp
fwait
dec
add
push
xor
je
mov
or
xor
orl
jae
arpl
adc
or
inc
or
adc
push
je
lods
lock
movsl
mov
orl
add
mov
cmpb
inc
lock
jnp
mov
jle
incl
add
call
mov
lret
or
adc
push
push
and
call
mov
movb
add
je
movsl
cs
sahf
inc
inc
inc
add
dec
pusha
comiss
add
push
outsb
add
ret
je
pop
fwait
lea
xor
call
xchg
aas
mov
mov
add
cmp
mov
lds
push
dec
mov
out
xorl
jmp
adc
push
arpl
xchg
xlat
mov
cmp
add
test
add
pop
mov
add
pop
or
add
dec
in
dec
inc
xchg
xor
or
add
or
add
add
or
add
call
or
inc
jle
popf
xchg
nop
cld
ja
dec
jmp
lret
movsb
xchg
inc
or
add
inc
cmp
push
sbb
arpl
dec
jmp
rorb
decb
fisttpl
jmp
les
int
mov
inc
xchg
popa
dec
jmp
cwtl
testl
dec
pop
subl
jbe
rolb
mov
stos
jmp
sub
cmp
aaa
and
std
sbb
push
inc
gs
mov
jecxz
setg
push
ficoms
push
inc
inc
push
mov
mov
pcmpeqd
push
cmp
add
push
add
lds
and
add
add
add
adc
inc
jne
and
or
cwtl
out
inc
xor
ret
push
adc
jbe
ljmp
add
cmpsb
aad
jbe
inc
ret
add
aaa
pushl
out
shll
pushf
pop
or
fnsetpm(287
jmp
jbe
stos
in
incl
addl
add
add
mov
mov
jmp
mov
add
mov
or
add
jmp
insl
addb
or
inc
stos
ret
je
dec
js
inc
mov
xchg
push
push
adc
lahf
push
scas
decl
cli
add
repnz
stos
test
jp
xchg
push
push
adc
outsl
cld
scas
call
add
inc
mov
sbb
mov
push
xchg
pushl
lret
xchg
add
xchg
mov
lret
xchg
ljmp
lret
add
mov
add
sub
xchg
jne
cli
and
loopne
sub
inc
mov
xchg
dec
or
push
or
sub
jmp
add
cmp
dec
add
stos
dec
mov
xchg
lahf
movsb
xchg
cmpb
sldt
dec
mov
xorl
lret
xchg
pop
cmp
xchg
and
stos
mov
xchg
into
test
push
fwait
mov
inc
adc
ds
sbb
mov
xchg
or
xchg
clc
mov
call
mov
ljmp
add
inc
add
dec
xchg
mov
out
xor
mov
mov
into
cmp
call
rolb
add
mov
fcoml
cmpsb
fisttpl
incl
rcll
xchg
mov
ret
cmp
add
or
jo
push
fildl
jmp
and
ss
or
sub
mov
decl
add
ss
add
addl
inc
mov
add
mov
lcall
outsb
inc
rorl
jbe
or
pop
leave
lods
add
push
cmc
push
decl
inc
cld
push
leave
lock
xchg
mov
mov
sarb
out
cs
movl
mov
mov
push
add
in
negl
push
push
mov
mov
jmp
call
or
call
cmp
pop
add
inc
pop
push
in
mov
xchg
add
mov
xchg
decl
or
add
sahf
mov
push
loop
inc
sub
xchg
push
outsl
sbb
inc
cmpsl
ret
je
sub
call
add
lret
notl
xor
shrb
inc
add
fldt
je
jmp
xchg
push
adc
sti
out
and
inc
or
mov
add
adc
loopne
xor
xchg
in
adc
fwait
and
out
xchg
sarb
push
mov
xchg
test
loopne
or
xchg
cwtl
mov
nop
mov
or
or
sahf
xchg
cli
test
mov
int3
jne
enter
xchg
mov
hlt
nop
jb
adc
jno
imul
lcall
or
jmp
fadds
call
inc
xchg
inc
adc
mov
std
div
add
xor
add
test
add
scas
or
jmp
dec
mov
mov
fmuls
mov
xchg
fistpl
test
scas
pop
incl
addr16
js
outsb
xlat
xchg
push
fistps
push
lods
mov
push
mov
push
cs
das
fisttps
pushl
add
xor
sub
cltd
decl
push
and
push
rcr
out
not
xchg
pushl
xchg
loop
call
xchg
incl
orl
add
mov
add
add
mov
out
mov
test
jne
lret
add
mov
xchg
incl
sti
out
inc
lcall
add
jne
enter
aaa
mov
es
fistps
call
push
call
cmp
test
jbe
push
pop
xchg
pushl
xchg
jmp
dec
mov
inc
pushf
mov
mov
jmp
js
nop
call
add
jle
sti
sti
ljmp
fnsave
jne
mov
rolb
jnp
cmp
shrl
pusha
lret
mov
inc
daa
and
test
adc
lock
jo
mov
incb
pushf
sti
call
icebp
push
fiadds
jno
nop
rolb
sti
test
sbb
inc
fidivs
add
pop
or
pushf
loope
push
add
jle
lea
loope
sbb
jmp
add
sbb
outsl
fildll
pop
aaa
icebp
push
faddl
or
jbe
adc
pushl
adc
xor
test
cld
xor
lods
fcmovbe
rorb
shlb
adc
mov
jne
mov
jo
sbb
cmp
inc
icebp
and
add
push
inc
inc
or
imul
dec
mov
adc
cmp
test
int3
loope
xchg
shll
mov
ret
pushl
jmp
pop
inc
add
push
call
or
add
push
push
scas
xchg
jne
jbe
cmp
push
pushl
xchg
call
inc
loope
decl
add
push
inc
add
push
add
scas
xchg
lods
repz
or
sbb
push
pop
mov
xchg
decl
test
call
ss
sar
leave
and
add
shlb
add
mov
add
or
mov
cmp
mov
fdivrs
shlb
fstpt
and
mov
add
jbe
mov
mov
jno
add
scas
mov
fsubr
inc
clc
pop
je
add
adc
scas
daa
add
ret
je
sub
adc
adc
mov
add
ret
adc
outsl
mov
or
mov
adc
pop
mov
add
push
or
fcom
xchg
sbb
adc
sub
push
mov
hlt
or
dec
mov
push
flds
sbb
lock
pop
jg
mov
add
mov
aam
add
push
cmp
mov
cmpb
xor
shl
mov
icebp
out
roll
or
pop
lret
cmp
add
call
cmp
jle
xchg
cmp
push
adc
inc
jmp
test
call
repnz
adc
fmul
jg
loope
mov
jne
jecxz
shll
add
into
repnz
inc
jmp
inc
xorb
pop
incl
adc
std
test
incl
dec
fldt
sub
xor
rcrb
mov
hlt
mov
hlt
cmp
pusha
mov
cltd
call
push
and
xor
add
jmp
or
addb
mov
pushl
mov
push
push
pop
das
inc
push
and
xor
or
push
dec
je
push
aas
hlt
mov
mov
pushl
mov
push
jae
inc
sahf
and
outsl
add
add
mov
xchg
pop
add
add
add
inc
add
inc
sbb
xor
jo
add
sub
ret
xchg
cmp
adc
into
and
pushl
mov
cld
sub
xchg
fdivs
rcrb
xlat
xchg
iret
adc
pop
xor
add
popf
jp
pop
jo
out
test
xchg
sti
out
and
pushl
xchg
orl
outsb
xchg
inc
or
add
add
ret
in
cli
fdiv
jmp
dec
or
add
xor
pusha
outsb
xchg
xchg
test
xlat
pop
or
mov
jge
clc
loopne
aad
inc
jl
mull
cltd
xchg
xchg
fs
sub
sbb
jmp
test
jge
fwait
adc
xchg
xchg
test
jl
xchg
jno
fs
or
add
fwait
jnp
xchg
or
js
inc
incl
mov
jmp
jg
addr16
leave
inc
cwtl
test
jne
fnstsw
xchg
stos
leave
jl
pop
add
sub
jmp
inc
adc
adc
jno
jmp
sbb
pushl
or
pushl
pop
ret
add
out
jnp
cltd
lret
cmc
setns
cmc
pop
inc
cmc
jp
cs
xor
es
insb
test
decl
sub
pushl
inc
into
mov
je
sbb
pushl
lahf
test
mov
xchg
lcall
icebp
sarb
add
add
addr16
decl
cld
mov
mov
add
cmpb
es
xchg
test
test
lea
pushl
xchg
cmp
mov
ljmp
test
call
inc
or
roll
call
jle
idiv
adc
xchg
orl
add
inc
push
stc
or
add
stc
enter
adc
repnz
insb
adc
pop
adc
cmp
and
stc
sti
cmp
call
sub
call
push
adc
jp
outsl
addl
push
add
cmp
pop
fistpll
enter
in
add
or
jp
xorl
mov
add
dec
test
inc
or
enter
inc
icebp
jae
push
or
jp
adcb
mov
jo
ja
mov
push
jns
or
jmp
orb
mov
lret
out
cmp
add
lods
mov
mov
xchg
sbb
add
mov
or
cmpb
popf
cli
js
addb
mov
js
in
or
je
cmp
vpackuswb
incl
lods
stos
xor
inc
or
sub
mov
ffreep
js
nop
adc
add
mov
mov
js
add
dec
shll
daa
loope
flds
pop
incl
std
pop
addl
outsb
mov
int3
data16
loopne
sbb
imul
mov
incl
andl
and
addb
jne
pushl
gs
stos
add
mov
cmp
jne
jecxz
lret
leave
ret
push
mov
incl
mov
xchg
in
incl
pop
mov
test
add
outsb
or
mov
pop
sbb
xor
icebp
into
pushl
test
testb
out
mov
jne
inc
fcomip
testl
fidivrs
lock
cmp
and
add
outsb
orl
daa
xchg
inc
pusha
add
xor
cmp
add
popa
add
nop
fstl
call
insb
imul
inc
jg
pop
dec
stc
pop
pop
into
jle
push
cmpsl
in
fwait
sub
add
fisubl
or
lret
cmp
add
nop
test
mov
xchg
lret
jg
fsts
mov
inc
fs
andb
les
xchg
or
add
or
add
xchg
test
jne
ret
adcb
xchg
jmp
add
into
jle
lret
call
insl
aaa
mov
rorb
xchg
ret
ret
fwait
stos
jge
jne
shrl
cmp
jmp
and
add
jmp
lods
repnz
outsb
cltd
je
popf
xchg
je
mov
iret
push
xorl
jno
push
cltd
imul
ljmp
insb
mov
test
dec
je
mov
cmp
out
add
test
shlb
pop
jl
or
pushf
ret
jae
into
jmp
lret
repnz
ret
fimuls
scas
push
add
stos
add
xorb
add
push
lea
lods
cmp
test
ret
ds
xor
pop
push
push
jmp
xchg
cwtl
idiv
call
push
add
inc
fdivp
je
xchg
int
sub
inc
in
inc
decl
jl
call
inc
cs
decl
and
filds
pushl
fistpll
push
dec
divb
pop
std
incl
add
hlt
cmp
and
push
ss
xor
push
jne
push
jl
sub
jg
add
or
jp
outsb
addl
shrl
inc
pop
pushl
imul
int3
jnp
xorb
je
ret
lcall
add
mov
xchg
out
std
add
dec
and
sbb
out
shrl
push
shll
scas
ret
imul
lahf
mov
js
xchg
jbe
pop
arpl
in
push
jp
aas
or
out
gs
or
push
jnp
jp
add
out
bound
or
push
addr16
loope
xor
or
inc
popa
movsb
js
jno
jo
add
enter
add
fidivl
in
sbb
sti
lock
das
rcl
les
adc
jp
loopne
xor
dec
popa
clc
js
jno
mov
repnz
pushl
jp
je
lock
popa
add
add
decl
add
jmp
aas
add
jne
lods
testb
aaa
or
mov
add
add
pushl
cmp
mov
pop
subl
sbb
mov
insb
push
int3
ss
add
mov
addl
inc
jo
adc
sub
scas
push
mov
call
addl
sti
shrl
or
mov
sub
out
mov
add
pusha
sti
call
push
pop
add
nop
push
jne
in
inc
icebp
jne
fstpl
xchg
repnz
push
mov
xlat
xor
jecxz
int3
xor
out
xor
lcall
add
ds
push
push
pusha
or
imul
ss
int
xchg
lock
add
scas
lock
jbe
jmp
into
mov
ds
push
pushf
js
dec
mov
js
inc
bound
scas
aad
inc
inc
xchg
out
sti
xor
or
mov
popa
add
inc
xor
call
js
clc
dec
add
lret
add
pop
sub
jne
enter
pop
js
add
lret
sbb
dec
pusha
into
mov
pusha
in
add
cmc
or
jb
js
mov
or
lds
or
xor
hlt
lock
sti
les
dec
xor
or
add
hlt
loopne
fldcw
ja
mov
xor
and
add
hlt
lock
subl
pushf
xor
and
imul
ja
xchg
shl
xor
or
xor
test
test
lock
jbe
xchg
add
push
enter
xor
sub
jne
fdivl
dec
icebp
loopne
sti
mov
cmp
xor
sub
jne
lods
or
sahf
add
mov
test
sbb
incl
inc
insb
jne
pushf
add
outsb
xchg
loope
sbb
insl
lods
ss
inc
or
imul
ds
xchg
xor
add
jmp
or
xor
insb
incl
scas
pusha
dec
xor
or
sahf
or
shrl
push
add
push
inc
xor
pusha
add
outsb
mov
jne
loopne
std
cltd
mulb
dec
inc
jmp
aaa
inc
add
add
sahf
divb
cltd
std
dec
pop
xchg
xor
push
addr16
add
sbb
incl
xchg
xor
pop
jno
scas
pop
push
call
idiv
push
jns
inc
inc
jmp
add
inc
bound
dec
lcall
pop
lahf
push
and
bnd
pushl
je
dec
cmp
pop
outsl
lods
jbe
pop
stos
out
sti
push
sub
call
push
lahf
call
add
jns
xchg
jne
cwtl
cmc
leave
adc
shlb
pusha
fs
out
cmpsb
imul
enter
mov
adc
add
push
pop
imul
je
pop
popa
add
add
mov
lcall
push
je
or
pop
lahf
sub
addb
pop
cmpsl
aam
hlt
lock
out
pusha
jae
andb
pop
aad
pusha
push
hlt
in
jle
scas
jae
dec
sbb
les
mov
mov
nop
push
sti
add
and
jge
adc
dec
or
inc
dec
or
pop
or
cmp
jmp
xor
sbb
ljmp
ss
repz
inc
push
std
xor
das
sub
adc
mov
adc
jl
push
mov
enter
inc
fdivp
ret
mull
push
into
pop
or
xor
enter
inc
ljmp
inc
push
or
dec
jno
mov
push
inc
mov
addr16
jne
or
and
test
jno
and
mov
or
test
add
pop
pop
testl
scas
or
jge
or
test
or
add
daa
lcall
fs
pop
incl
add
clc
jne
les
jne
fidivl
arpl
call
pusha
pop
call
fbstp
adc
jmp
je
rcrl
call
lds
pushl
fnstenv
pusha
pop
call
jno
jmp
sbb
sbb
incb
pop
pop
test
jne
push
mov
pop
testl
inc
mov
pop
testl
mov
push
inc
call
cmp
div
outsl
gs
pushl
imul
pop
insl
inc
jmp
imul
outsl
jne
call
mul
pop
popf
inc
incl
inc
and
and
jae
sub
mov
shll
inc
inc
or
xor
add
test
pop
out
sbb
call
or
dec
mov
lock
icebp
flds
mov
rorl
call
add
lahf
fcmovb
mov
or
fcmovnu
sbb
jo
adc
sub
push
or
scas
out
sub
fidivs
push
or
adc
call
add
cmp
les
add
out
xchg
xor
data16
and
outsl
adc
cld
add
mov
enter
jle
jmp
mov
imul
inc
or
cs
pop
jmp
inc
or
sahf
gs
cmp
call
jnp
jne
sub
sti
adc
jg
jmp
sbb
enter
adc
mov
add
jmpw
xchg
test
shll
sbb
hlt
cmpsb
fldenv
insb
mov
ljmp
mov
insl
cmc
xchg
mov
call
incl
leave
shl
mov
incb
mov
out
jo
add
sbb
call
add
inc
ljmp
repz
jbe
mov
cld
xchg
xor
repz
push
fwait
incl
add
inc
jmp
pop
inc
add
repz
xchg
out
into
pushl
jae
cs
xchg
cld
mov
out
popf
idiv
push
inc
lods
sub
push
adc
sub
rolb
pop
cld
dec
ja
testl
add
fcos
push
cmp
add
add
sub
xor
cmp
clc
push
pop
subb
sar
sub
add
inc
mov
inc
push
mov
push
outsl
movsl
inc
js
inc
je
and
repnz
pop
sbb
insb
call
frstor
jne
cmp
sti
inc
pushf
fldenv
cmp
cld
out
or
insb
lcall
insb
add
lcall
inc
add
inc
inc
or
jecxz
sub
add
push
testb
inc
shlb
int3
mov
shrb
call
ret
mov
in
xor
nop
sub
call
add
sub
sub
not
loopne
jmp
xor
or
imul
ror
into
pop
leave
inc
imul
hlt
les
inc
push
jl
jmp
adc
bound
inc
or
dec
repz
sub
hlt
cld
imul
mov
push
inc
lret
jg
dec
fdivr
scas
pusha
push
rclb
mov
out
xchg
mov
or
mov
xor
or
push
xchg
xchg
adc
in
fisttpl
divb
call
push
inc
or
lahf
jl
xor
inc
bound
fstp
pop
add
in
add
ret
cmp
call
adc
xor
cmp
push
pop
hlt
je
jg
jmp
aad
popa
repz
push
mov
or
pop
call
add
daa
dec
sti
push
inc
push
xor
jp
jnp
sub
les
sar
push
push
into
repz
xchg
push
roll
push
lret
push
jb
movsb
jnp
add
jb
sbb
dec
jns
sub
shll
jb
mov
pop
sbb
add
sar
add
push
cmp
xchg
xor
call
pop
inc
je
adc
xor
or
xor
sub
mov
push
mov
adcl
xchg
testl
jno
imul
into
fisttpll
push
das
xchg
push
shlb
push
add
sub
aas
and
inc
xchg
push
cmp
adc
loopne
rcrl
push
clc
repz
jp
orl
pop
aam
loopne
push
push
push
adc
rcrl
xor
out
dec
jno
test
dec
or
test
and
out
adc
jnp
push
or
cltd
or
out
loopne
dec
cmp
add
icebp
ja
mov
into
push
push
call
and
or
jmp
pop
dec
cmpsb
push
push
call
xor
pop
add
lock
mov
testb
cmp
dec
or
notl
push
out
adc
mov
and
lods
sub
sbb
mov
call
xchg
add
gs
jne
in
decb
and
sbb
dec
pop
pop
call
jns
sti
push
popa
out
stos
out
leave
lods
pop
call
imul
cs
mov
xor
push
push
ret
pop
mov
jne
in
or
in
or
lcall
jns
imul
out
inc
mov
add
add
or
pushl
jecxz
adc
or
pop
pop
call
ss
incl
gs
or
or
sbb
inc
inc
pop
out
pop
pop
sbb
ljmp
inc
or
sbb
push
shrb
mov
sbbb
push
and
sti
out
jnp
lcall
add
or
jne
jp
lock
ljmp
fcomps
inc
add
popf
js
and
jbe
mov
adc
cmp
add
mov
adc
cmc
lret
inc
call
imul
add
or
fldcw
call
jbe
push
cmp
push
fisubs
int
add
cmp
push
inc
push
test
add
adc
lcall
ror
cmp
push
jle
xchg
mov
jmp
lret
fdivs
movsl
rcrb
add
pop
ret
rcrb
mov
ds
add
test
sbb
negl
sub
incl
jmp
lock
add
pop
pushl
xchg
shr
popl
push
dec
icebp
xor
xchg
fwait
push
inc
movsb
adc
adc
pop
out
sbbb
into
jo
cmpsb
movsb
out
call
add
jmp
fs
mov
pop
rol
jbe
nop
test
into
inc
negl
mov
decl
pop
testl
add
inc
sub
add
xchg
sar
or
je
cmpb
stos
push
xor
nop
fdiv
inc
out
call
inc
popa
or
fimull
push
call
test
out
add
or
lcall
inc
xorl
je
lods
test
pushl
gs
incl
in
mov
add
ret
pushl
pop
call
jno
call
cmp
mov
iret
popa
cli
into
pop
ljmp
sbbl
cwtl
mull
adc
xchg
mov
cs
pushl
xlat
pop
pop
inc
popf
jmp
xchg
in
outsl
popa
call
dec
jne
testl
popa
cli
cmp
sub
mov
popa
mov
ja
lcall
repnz
decl
jg
lock
xchg
int
push
sub
jmp
loopne
pop
call
inc
inc
sub
mov
push
out
mov
add
out
push
mov
push
pop
nop
mov
call
add
or
sbb
xchg
fnsave
add
cltd
push
pop
pop
notl
or
stos
mov
inc
je
cmp
call
add
sbb
xchg
or
push
xchg
or
fdivp
mov
or
jo
push
hlt
pop
xchg
push
add
dec
popa
outsb
addr16
call
rcl
sbb
jmp
lahf
push
incl
fdivr
ds
push
call
and
or
ret
andl
out
or
pop
adc
test
popa
std
addr16
or
sub
mov
call
jmp
add
inc
dec
inc
aad
push
add
push
push
imul
mov
repz
push
push
sahf
out
pop
lcall
popa
iret
pop
inc
or
add
or
add
sub
mov
or
mov
imul
dec
push
push
jmp
ljmp
test
popa
mov
call
mov
push
and
xor
xchg
dec
jmp
xchg
jmp
jg
imull
imul
pop
mov
lock
inc
push
loope
mov
or
pusha
lock
jae
idiv
add
inc
jnp
xor
call
flds
push
or
xor
xlat
mov
sbb
push
bound
icebp
lret
pop
mov
mov
add
pop
call
repz
xor
pusha
and
fdivl
pop
andl
xlat
les
add
mov
add
inc
pop
add
inc
sahf
lcall
mov
xchg
push
or
dec
popa
ds
clc
push
mov
call
xchg
jbe
fcomps
data16
inc
popa
and
pop
dec
pop
mov
lock
pop
mov
push
xlat
dec
popa
push
pushf
mov
xchg
imul
outsl
and
add
jo
cmp
jo
imul
pop
pop
popf
add
push
shl
lea
pop
cli
imul
cwtl
xor
xchg
or
pop
das
push
add
push
pushl
jmp
pop
push
call
xchg
push
call
jle
pop
jmp
outsb
stc
dec
call
xor
add
mov
adc
call
add
cmp
icebp
sub
mov
sti
jg
sub
inc
push
jne
in
pop
std
push
sbb
or
and
inc
add
xchg
jg
push
in
addl
push
jne
popf
sbb
add
push
out
cli
addb
adc
or
add
inc
testl
sub
push
inc
or
lea
add
mov
cs
je
popa
cmp
call
movsl
lds
pop
mov
add
add
fdivrs
adc
dec
push
inc
dec
mov
lock
pushl
popa
clc
cmp
outsl
add
pop
mov
dec
in
ljmp
add
nop
lock
sub
inc
jp
mov
jecxz
pop
lcall
jmp
sbb
add
xchg
rclb
rcr
mov
pop
dec
mov
in
jmp
les
inc
inc
seto
nop
pop
pop
lcall
sub
inc
cli
dec
mov
addr16
pop
inc
in
imull
mov
jge
lcall
push
testl
xor
inc
push
loop
mov
pop
pop
dec
fcomps
subb
scas
mov
pop
pop
add
pop
aad
mov
loope
pop
call
dec
jle
fmuls
xchg
cmp
enter
jns
call
pop
mov
adc
pop
lret
std
mov
pop
into
test
push
nop
dec
push
add
mov
add
inc
or
test
or
jg
or
add
lea
add
dec
jmp
inc
or
inc
pop
mov
js
dec
inc
rcrl
mov
pushf
fs
outsl
dec
mov
xchg
dec
lcall
rorl
mov
dec
jne
insb
inc
mov
outsl
dec
mov
ja
jmp
add
dec
call
imul
icebp
sub
mov
decl
jmp
xor
lcall
js
adc
xor
push
cmovle
add
pop
call
inc
cld
imul
dec
js
lcall
js
negl
mov
mov
mov
jmp
fdivrl
fnstenv
call
cmp
mov
loopne
mov
call
leave
ja
negl
out
push
mov
call
mov
ljmp
fstl
sbb
aam
stc
mov
jne
fstpl
ret
push
mov
cld
aam
push
pop
cmp
call
push
adc
inc
inc
dec
rolb
pop
aam
decl
sar
inc
scas
or
enter
add
mov
orw
lcall
fidivrs
or
push
sbb
xchg
push
int
add
pop
sbbb
add
mov
ds
fcmovnbe
std
dec
or
inc
cmp
push
fnstsw
hlt
mov
push
push
mov
push
imul
add
and
loope
sub
or
rolb
add
cmpsb
lcall
cmc
dec
push
dec
cltd
mov
jge
push
inc
subb
fiadds
sub
call
push
adc
pop
lret
rorl
test
dec
add
int3
aad
loopne
cmp
rorb
push
sbb
rol
arpl
cltd
rorb
stos
push
pop
push
sbb
lret
add
ficompl
push
cwtl
dec
hlt
sbb
call
sbb
call
test
push
sti
push
incl
repnz
out
scas
dec
jmp
imul
roll
aaa
sub
mov
mov
mov
inc
popa
adc
dec
or
sub
call
xor
test
call
jnp
call
inc
or
mov
sbb
sti
dec
mov
out
push
pushl
push
sti
cmp
scas
push
call
or
cmp
adcl
idiv
push
dec
je
inc
testb
inc
add
test
ljmp
push
add
outsb
lods
lea
or
addl
xchg
adc
call
add
test
ljmp
mov
in
mov
call
aad
jae
pop
js
notl
pushl
mov
sbb
incl
mov
cwtl
mov
add
mov
push
fcompl
js
add
in
nop
call
fistpl
xchg
ficoml
cmpsl
add
xchg
push
push
cli
inc
pop
cmp
fadds
pop
sub
ljmp
pusha
cwtl
call
xchg
cmp
aad
push
call
outsb
pop
incl
js
in
outsl
push
jp
pop
lods
mov
push
lcall
fadds
fistps
xchg
dec
mov
push
pushl
or
pop
bnd
push
test
dec
pop
mov
dec
inc
push
fidivl
jne
add
orb
outsl
inc
es
pop
jp
push
push
dec
push
pop
mov
jle
pop
dec
dec
add
inc
out
push
addb
xor
push
mov
shll
jmp
mov
xor
dec
adc
xor
loopne
pop
push
lock
and
pop
or
pusha
mov
or
dec
sbb
call
sbbl
mov
inc
mov
push
test
adc
repnz
jmp
notb
sarb
or
push
aad
jne
or
mov
testb
idivb
call
negb
cmp
rcl
inc
call
incl
xchg
mov
dec
ja
sti
stc
push
call
mov
jp
subl
adc
jne
jl
mov
ja
inc
add
mov
dec
jmp
and
sub
call
stc
pop
sti
pushl
out
or
dec
pop
push
add
in
les
ljmp
fnstenv
mov
cmp
inc
cld
or
out
or
aaa
lahf
or
add
mov
out
pop
push
add
push
adc
sub
loop
mov
aad
shlb
addr16
adc
dec
sub
addr16
xor
pop
add
inc
inc
and
dec
mov
fnstcw
scas
dec
pushl
in
jne
enter
cmp
dec
xor
cld
sbb
dec
jne
sbb
mov
es
add
arpl
add
inc
mov
add
jno
push
pop
mov
inc
je
add
rcr
push
dec
push
js
push
mov
jl
addr16
xor
xchg
or
cmp
inc
sbbl
lret
push
lds
outsb
dec
mov
and
xor
fcomps
mov
in
cmp
or
push
jnp
call
sti
pusha
xor
pusha
xchg
lods
dec
out
or
pop
xchg
mov
or
or
dec
mov
add
inc
dec
xor
xchg
sbb
dec
or
sbb
add
cmpb
sub
int
inc
or
test
mov
and
or
jmp
add
jmp
jle
imul
adc
push
ds
cmp
mov
dec
or
sub
or
cmpl
jnp
hlt
shlb
imul
sbb
rcl
jnp
ficomps
inc
call
add
add
cmp
jnp
idiv
mov
dec
jmp
pushf
jmp
in
rcl
add
push
cmp
aad
lock
sti
adc
inc
sahf
fsubrp
mov
aad
test
incl
sti
aad
pushl
aad
cmp
jmp
xor
call
test
ljmp
add
add
jmp
sbb
sub
call
or
rcrb
les
jne
adcl
dec
push
push
pop
pop
jbe
push
jmp
aaa
inc
je
add
xchg
dec
mov
pop
add
inc
scas
mov
mov
addl
inc
fs
decl
das
add
add
mov
lock
ljmp
nop
in
pop
and
shlb
pop
adc
xchg
pop
push
incl
rolb
das
xor
in
or
dec
and
dec
adc
push
or
rorb
jo
clc
inc
mov
jmp
scas
dec
fbstp
pop
dec
loopne
push
push
rolb
pop
fnstsw
dec
enter
rolb
testb
add
cli
cmp
test
cmp
rclb
dec
rorb
xor
or
fisttpll
xchg
mulb
lock
popa
outsl
push
dec
mov
add
pop
push
aas
add
jle
jne
jle
pop
rcll
ficomps
jmp
xchg
pushl
daa
mov
jle
mov
add
call
dec
lret
icebp
testl
mov
jle
mov
jbe
pop
call
xor
add
subl
movzbl
ds
add
test
xor
sub
int
inc
or
lods
cld
or
jmp
inc
rolb
add
pop
ljmp
pop
ljmp
mov
pop
mov
hlt
icebp
sar
push
stc
dec
idiv
jae
out
insl
or
or
or
add
shll
shlb
imul
push
push
mov
cmp
test
xor
call
sub
dec
push
or
xor
push
add
in
add
sar
push
xor
jg
jno
cli
aas
dec
cmp
or
call
into
lods
push
negl
pop
test
or
dec
xchg
lock
inc
inc
pushl
or
mov
outsb
jge
out
sahf
inc
dec
movsb
daa
not
xchg
mov
lods
push
inc
cld
push
idivl
dec
jmp
cmp
ds
faddl
add
inc
inc
xor
lods
arpl
js
mov
xor
inc
lcall
mov
pusha
negl
push
inc
insb
fs
cmp
jmp
inc
xor
jge
lds
dec
and
pushf
pop
sbb
inc
add
xchg
inc
mov
xor
xor
cmp
inc
push
aad
mov
xor
inc
add
inc
mov
fadd
cmp
test
insl
jbe
test
jge
mov
xor
nop
lahf
xor
inc
xorb
inc
jo
add
stc
cmp
cs
mull
add
push
add
push
pop
add
rcr
cmp
idivb
xor
xchg
outsl
xor
imul
cmp
rorl
imul
xorb
mov
sbb
nop
xor
sub
aas
call
mov
adc
sbb
sub
jne
cld
sarb
inc
xchg
inc
push
add
incl
add
inc
cld
xor
stos
iret
jne
fists
mov
mov
pop
decl
add
decb
pop
pop
sub
aaa
out
mov
mov
idiv
fwait
inc
jne
faddp
stos
mov
jne
lds
dec
pop
call
mov
sti
call
out
pop
add
jmp
ljmp
lods
pop
outsb
dec
add
push
enter
movsl
mov
or
incl
add
inc
add
inc
jmp
sti
outsl
notl
dec
popf
inc
mov
sbb
xor
ja
sbb
mov
pushl
lds
xchg
cs
aas
icebp
add
lret
add
jne
cmp
mov
add
mov
adc
mov
test
or
sahf
test
rorl
ja
add
sub
push
popf
cmp
inc
repnz
mov
outsl
xor
inc
push
cmp
inc
xchg
xor
adc
inc
sub
fisubs
les
lods
adc
rol
cmp
mov
lret
jb
shrl
jecxz
scas
lods
fdivs
adc
bswap
call
les
cmp
inc
xor
add
adc
inc
jmp
add
mov
decl
dec
lods
inc
add
jnp
ss
dec
je
stos
jne
test
dec
shll
incl
adc
cwtl
cmp
mov
out
add
insl
lahf
lods
out
mov
call
push
dec
je
stos
je
sub
out
je
incl
icebp
inc
jmp
xchg
push
cmp
decl
leave
leave
imul
sbb
shlb
cmp
or
fnstsw
aaa
inc
outsb
pop
out
out
leave
push
into
enter
pop
std
ljmp
in
lods
add
sub
jne
lret
inc
mov
roll
mov
lahf
rcr
sbb
mov
pop
jne
lret
idivb
add
add
add
faddp
inc
clc
fimuls
add
mov
repz
or
push
ljmp
decl
lods
divl
mov
mov
and
sbb
inc
and
push
jns
adc
jmp
aas
call
mov
aaa
lcall
aad
sti
iret
aas
mov
pop
sub
inc
cwtl
sbb
mov
aaa
aas
lcall
mov
aas
mov
pop
stos
jmp
std
inc
inc
dec
jns
lock
lcall
sub
lret
aaa
enter
add
das
add
les
xor
xchg
mov
xor
jbe
nop
mov
cmpsl
add
xor
movsl
outsb
push
cmp
shl
enter
cmp
aas
inc
xor
cmp
pusha
xor
sbb
je
les
or
xchg
das
add
lock
add
imul
stos
xor
mov
sbb
cmpsl
sahf
xorl
mov
xor
jle
and
jbe
xor
loope
dec
test
dec
xor
inc
cmp
push
mov
xor
inc
out
sub
and
adc
push
decl
call
push
add
scas
sub
mov
cmp
cmp
out
pop
fwait
stos
out
xor
int
xor
ror
dec
xor
add
mov
fcomi
mov
idiv
lcall
std
idiv
shl
je
sarl
xor
jmp
mov
out
add
out
call
lcall
pop
add
add
sbb
add
clc
add
pop
ljmp
hlt
je
bound
cld
cmp
add
push
xchg
jne
fcomip
std
adc
addr16
xlat
inc
sub
sub
cmc
je
inc
dec
daa
std
lock
cmp
jmp
mov
out
repnz
imul
fs
test
lock
push
xorl
add
mov
cli
add
inc
imul
inc
and
add
and
push
inc
add
push
add
ret
call
cmp
dec
jmp
sti
das
cmp
je
or
stos
outsl
popa
add
xchg
push
sub
loope
cmp
or
cmp
fdivrs
sub
arpl
cmp
xor
mov
mov
shrb
cmpsb
jno
cmp
sub
arpl
xor
mov
xor
xor
cli
add
mov
lret
cmp
call
add
cmp
push
xor
mov
and
subl
or
cmp
cmp
cmp
xor
jl
add
xor
xor
fisubrs
leave
dec
ja
test
sub
lods
mov
addb
aas
and
jne
leave
outsb
loopne
insl
xor
std
out
mov
jmp
pop
cmp
inc
mov
roll
xchg
sub
incw
jbe
ss
and
lcall
lcall
jge
pop
add
decw
insl
jbe
add
repnz
call
repz
call
idiv
jmp
outsl
movsl
lcall
repnz
adc
jmp
std
out
shl
call
idiv
cltd
fdivl
jmp
stc
inc
pop
test
mov
repnz
call
sbb
out
add
xlat
icebp
call
shl
lcall
fisttpll
stc
icebp
mov
cli
lcall
pusha
or
xchg
add
cmp
mov
incl
or
call
and
leave
add
push
test
sti
fiaddl
push
push
scas
pop
fnstsw
popa
jmp
mov
cli
inc
inc
ja
cmp
loope
cmp
sub
add
mov
pop
ret
and
add
xchg
call
xor
cmp
mov
lcall
stos
addl
out
lods
insl
pop
call
dec
or
or
jge
add
lods
cmp
jmp
aaa
inc
or
lods
adc
call
mov
xor
aaa
add
lock
mov
sub
inc
add
add
mov
sbb
aaa
rcr
xorl
mov
sub
bound
das
nop
sub
imul
mov
stos
jo
inc
jbe
jae
das
pusha
sub
ds
push
mov
loopne
ds
js,pn
mov
push
call
add
jo
testl
imul
in
mov
lds
push
inc
lahf
pop
fidivs
sub
pusha
pop
xor
fcmovne
mov
inc
sub
loope
out
cmpsb
jno
loopne
sub
jmp
or
ficoml
call
stc
icebp
inc
jmp
mov
fmull
pop
cmp
aaa
imul
rolb
inc
or
add
bnd
mul
std
call
repz
jno
pop
call
ja
add
jmp
in
mov
repz
pop
pop
cmp
xor
mov
xchg
add
add
das
add
out
mov
or
out
xor
cmp
push
lcall
out
loop
call
add
xlat
movb
cmp
imul
jbe
mov
test
call
xor
aas
lret
inc
fsubrl
call
sub
sub
and
add
out
mov
inc
movnti
add
mov
add
add
xor
aaa
jae
sti
scas
inc
imul
pop
inc
stc
inc
inc
xchg
scas
sti
scas
mov
lods
call
sub
xor
outsl
or
iret
cs
sub
popf
scas
sub
call
fnstenv
dec
cmp
adc
sub
stos
outsb
out
cmpsl
add
mov
sub
mov
sbb
xor
add
orb
out
aad
fidivs
pop
sahf
adc
loopne
push
xor
in
xor
fcoms
inc
sbb
shll
xor
sub
scas
lahf
inc
xor
aam
and
inc
add
sub
xor
lcall
ret
sti
ret
inc
lahf
sbb
add
or
call
inc
lahf
and
add
adc
xlat
jne
call
out
adc
jecxz
sub
sbbl
sti
divl
leave
call
daa
jne
dec
xor
xchg
add
imul
ja
pushl
call
call
mov
or
andl
fdivl
pusha
or
add
mov
pushl
push
test
push
testl
mov
or
add
push
add
lea
cmp
test
je
dec
popa
sti
call
adc
add
out
subl
out
add
mov
fsin
push
sub
sbb
test
loope
incl
add
pop
movsb
dec
xchg
addr16
xchg
out
inc
inc
xchg
ja
cwtl
mov
call
sbb
sahf
xor
jo
add
jmp
jmp
xor
pop
xor
mov
jp
das
call
pop
divl
lock
add
xor
add
cmp
or
mov
out
or
clc
mov
add
outsb
fwait
mov
add
lcall
pop
filds
insl
call
xor
fwait
pushl
jbe
ret
pop
sbb
adc
fwait
inc
or
ret
pushf
sbb
pop
xor
adc
mov
dec
xor
xor
addr16
es
push
xor
pop
dec
xor
es
xor
add
es
xor
xor
jne
sbb
inc
xor
and
fildll
loopne
pop
xor
sub
inc
push
stos
add
jno
rcrb
scas
pusha
adc
sbb
mov
decl
inc
ss
jmp
dec
in
enter
addr16
add
jmp
inc
jmp
sub
enter
cmp
sub
and
les
mov
sub
mov
lret
idivb
aas
jmp
inc
or
fmulp
ljmp
add
or
jp
aas
xorb
add
pop
test
in
add
cmp
dec
call
pop
cmp
mov
add
xchg
enter
add
mov
add
bnd
xchg
mov
inc
repz
cmp
inc
mov
add
cs
xor
insb
lods
jmp
ss
push
jbe
cmp
xor
pop
sub
push
add
decl
pop
das
xor
out
stc
leave
push
push
xor
xor
sbb
subb
pushf
xor
jg
xor
mov
jo
pop
cmp
xchg
ret
cmp
out
sub
mov
fsubrl
push
repz
pop
mov
push
cmp
dec
ret
cmpsb
cli
out
add
and
ljmp
or
pop
adc
or
and
sub
and
imul
push
into
popl
add
mov
sub
xchg
and
mull
sbb
nop
pushf
fcompl
add
xchg
int3
jo
inc
or
inc
or
ret
add
or
add
or
mov
xor
ss
and
aas
pushf
call
push
push
or
add
push
fildl
xor
mov
and
cltd
outsl
cmp
fdivp
mov
add
jmp
sbb
insb
xor
jmp
inc
and
sahf
or
jmp
sub
xchg
call
inc
fiadds
add
sbb
and
fcompl
imul
and
xor
cmp
pop
and
dec
iret
movsb
es
xchg
test
push
and
addl
add
incb
inc
aad
stc
repz
inc
sbb
add
decb
stc
cmp
es
fdiv
stc
repz
inc
inc
jmp
add
mov
jae
sub
repz
repz
repz
stc
cmp
repnz
jmp
pop
mov
ror
repz
jecxz
idiv
stc
clc
ljmp
mov
push
push
adc
mov
inc
repz
pushl
into
sub
mov
pop
xchg
inc
daa
jg
inc
xor
addl
mov
xor
add
add
les
movnti
adc
cwtl
scas
sub
jp
popf
cwtl
jle
mov
jle
decl
test
js
sbb
jo
sub
mov
popf
pusha
cmpsb
sub
push
cmp
out
mov
incl
dec
idivl
loopne
jne
enter
lock
add
sbb
xchg
sti
sub
ja
or
push
add
add
pop
pop
imulb
inc
xchg
fidivrl
fisubrs
fcomps
sbb
pop
adc
sbb
mov
sub
adc
jnp
push
mov
repnz
popf
arpl
push
xchg
sub
push
cmp
jo
jle
xchg
imul
pusha
push
push
push
cmpsl
push
pop
sub
add
xor
arpl
inc
outsb
aaa
push
sub
xchg
jmp
pop
xchg
pop
inc
lods
sbb
outsl
push
lock
pop
push
call
push
rcll
mov
sbb
add
sub
incl
push
jne
pop
pop
popf
pusha
nop
inc
mov
inc
push
xor
movsl
add
incl
add
lahf
loop
jmp
les
cld
jbe
push
jne
sub
pop
adc
jmp
xchg
imul
add
jno
mov
jge
add
or
mov
or
sarb
add
or
ja
adcl
stc
out
decl
std
test
add
xchg
jecxz
push
dec
in
or
add
lahf
loope
jne
jecxz
or
jge
call
ffree
add
cmp
push
sbbb
ret
jecxz
mov
xor
mov
inc
cmp
jne
lret
and
and
pop
pop
dec
mov
or
inc
add
push
jp
add
in
dec
div
sbb
jmp
es
sub
call
push
inc
cmpps
testl
das
incl
add
enter
clc
add
ret
incl
subb
push
mov
inc
or
fwait
popf
lock
add
clc
sbb
push
sbb
add
adc
lcall
test
sub
test
sub
and
sub
sbb
and
sbb
in
mov
nop
fs
rcrb
cltd
shlb
outsb
mov
mov
sbb
test
add
test
ret
push
xor
xchg
or
sub
add
sub
and
push
lods
mov
test
sbb
dec
jmp
sbb
jo
cmp
inc
rcr
jmp
arpl
lcall
sbb
dec
sbb
out
enter
sbb
out
sbb
sbb
mov
mov
sbb
push
and
je
add
enter
sbb
sbb
sub
jmp
inc
sub
call
fnstcw
jne
in
cmp
jmp
hlt
decl
cwtl
ljmp
fcomip
pop
in
mov
hlt
ljmp
pop
call
pop
mov
testl
or
jmp
hlt
incl
add
jno
call
jmp
jmp
jne
in
lcall
incl
jmp
in
mov
call
inc
jg
call
push
and
push
lahf
sub
mov
lret
dec
mov
and
pop
out
ljmp
xlat
push
lock
and
xchg
and
add
cli
or
or
and
out
leave
jg
lock
enter
and
loopne
xchg
sti
out
adc
or
fisttpll
inc
int3
add
cmp
sub
or
mov
pop
or
ljmp
test
arpl
call
andl
sub
popf
and
add
add
fstl
push
dec
add
and
xchg
lods
and
inc
mov
push
mov
loope
add
aam
jmp
or
call
shlb
mov
push
cmp
and
or
xchg
popf
adc
addr16
push
cmp
mov
mov
mov
jmp
sub
shll
push
jmp
jle
cmp
push
adc
dec
addr16
cmp
adc
pop
inc
stc
outsl
jmp
pop
mov
sub
push
bound
mov
or
rorl
jmp
adc
je
push
jne
sbb
xchg
fisubs
dec
in
add
je
iret
ljmp
jne
in
pushf
shl
dec
lcall
jne
pop
jne
loope
xchg
shl
pop
mov
cmpb
jo
push
mov
fwait
call
and
adc
pop
mov
sbb
jne
test
mov
sub
rorl
mov
push
jb
fildl
call
fildl
fildl
call
hlt
dec
sbb
add
flds
push
pop
push
add
cmpb
je
inc
lahf
lahf
cmova
add
testl
aaa
and
pop
cmc
repz
ljmp
xor
mov
ss
lahf
lahf
adc
pop
or
ds
pop
push
mov
incl
add
sbb
mov
adc
call
add
inc
mov
scas
push
add
inc
pcmpgtd
inc
pcmpgtd
rcrl
inc
ljmp
cmpl
and
sub
sbb
outsl
addb
jae
and
mov
add
dec
inc
hlt
pop
adc
adc
or
adc
jle
or
lods
and
mov
sbb
cs
xor
test
push
or
add
insl
insb
xchg
clc
push
add
inc
or
cli
pusha
lahf
add
push
shrl
add
mov
test
inc
xor
pcmpgtb
sub
inc
or
xchg
fldenv
addl
fidivs
and
sahf
adc
out
adc
roll
push
ficoms
out
notl
push
test
aam
xor
mov
int
call
pop
pushf
jae
jmp
add
jne
pop
out
add
je
sub
dec
enter
push
mov
pop
sub
mov
call
call
push
fnstenv
call
cmc
hlt
push
add
add
je
addb
out
je
fnstenv
call
out
sti
repz
dec
call
or
jne
in
std
jns
mov
hlt
je
pop
jp
call
add
jne
add
adc
sub
mov
pop
jp
call
call
jge,pt
fdivrs
rorb
sbb
int3
arpl
add
stos
subl
add
inc
nop
sets
or
scas
sbb
mov
repz
cli
sbb
scas
jp
sbb
cli
adc
jne
mov
pusha
xchg
jne
popl
pop
in
sbb
dec
stos
scas
adc
add
and
jne
scas
popl
pop
test
xchg
or
xchg
xor
jne
lret
or
sbb
or
nop
inc
and
cmp
adc
paddd
pop
stc
cmc
popl
int
rorb
inc
push
or
sbb
and
cwtl
movsbl
lahf
daa
scas
sbb
add
or
or
aaa
sbb
sbb
iret
or
cmp
cld
or
outsl
sbb
mov
inc
pop
or
jns
inc
xor
out
lcall
cs
xchg
adc
enter
jp
jmp
and
call
call
add
add
add
add
inc
or
mov
jne
aas
xchg
pop
shll
ud0
das
or
cmp
inc
push
jne
sbb
imul
add
adc
mov
hlt
cmp
jns
inc
or
cs
and
jmp
pusha
or
or
add
jne
loop
xchg
push
icebp
jne
icebp
je
push
nop
xchg
call
mov
add
fimuls
mov
test
add
call
fwait
icebp
ljmp
add
add
or
add
dec
out
push
adc
push
and
push
shll
cmp
out
mov
loope
jae
mov
outsb
jge
addl
je
mov
pop
jge
cmp
jne
loope
xchg
xchg
hlt
jne
scas
push
jne
add
rcll
int3
nop
or
cld
jo
add
nop
imul
jnp,pn
lock
repz
jmp
sti
nop
out
out
jnp,pt
rcrb
cmp
cmpb
sbb
cmp
xchg
mov
int
call
sbb
dec
adcl
es
push
sub
adcl
icebp
pop
inc
adc
mov
les
push
cmp
fmull
pop
je
push
sub
push
repz
incl
mov
inc
loope
add
es
or
and
or
mov
add
fidivs
or
jne
les
push
lods
add
fisttps
jmp
inc
add
aas
or
mov
lods
jae
or
js
adc
or
stos
scas
inc
aas
or
dec
add
inc
jno
mov
call
fs
push
dec
enter
xchg
or
jo
es
leave
negl
cmpb
mov
adc
fmuls
jne
sbb
xchg
incb
add
jl
icebp
hlt
or
insb
ss
out
xchg
inc
xchg
sbb
into
leave
push
cmp
or
pop
pop
std
mov
jl
mov
or
sbb
cli
sahf
push
xchg
inc
xchg
or
or
add
enter
lea
push
jne
cmc
je
test
repz
ljmp
pushl
pop
push
enter
add
notl
jnp
call
jne
call
pushl
cmc
cmp
std
ljmp
jae
lea
dec
incl
or
decb
push
or
decb
push
or
decb
pop
hlt
sti
out
xchg
mov
jp
incb
add
jo
mov
ret
adc
dec
pop
sti
adc
inc
pop
je
out
inc
xchg
cmpb
je
jae
out
sahf
test
je
mov
cmp
sbb
inc
repnz
mov
jae
add
xor
sbb
xchg
push
mov
add
dec
mov
sub
jmp
cwtl
dec
icebp
sbb
or
jmp
pop
adc
cld
pop
cmp
sbb
fwait
adc
jle
adc
pop
dec
adc
pop
adc
inc
dec
rolb
adc
adc
pop
push
rol
adc
push
adc
sbb
std
adc
pop
jb
mov
or
add
test
in
sbb
aad
dec
leave
push
rol
dec
lds
pop
add
or
dec
rorb
push
push
jne
aaa
jle
cmpl
push
jbe
push
jl
push
movsl
mov
cld
inc
mov
pop
jmp
mov
test
push
jmp
add
or
or
mov
jl
adc
or
inc
test
je
int3
mov
jne
cmp
xchg
into
aaa
repnz
imulb
inc
outsb
sbb
xchg
mov
sbb
push
jecxz
sar
sbb
insb
jg
pushl
sbb
jnp
jmp
or
pop
fimuls
test
push
or
lea
and
adc
or
je
xchg
sahf
mov
call
or
lahf
add
pop
or
add
jg
mov
mov
out
out
movsb
call
fnstcw
inc
lock
sahf
jo
cli
mov
das
xor
shr
sbb
add
scas
xchg
push
jmp
sbb
mov
jnp
fidivl
mov
jne
sbb
pop
adc
repnz
or
cli
out
inc
ud0
jbe
lock
ret
mov
and
fsubs
push
dec
sbb
inc
repnz
mov
pop
mov
pushl
or
sbb
pushf
fisttpll
cwtl
mov
cmp
add
pop
mov
push
jo
rcll
add
or
sahf
push
pop
pop
xchg
pop
xchg
add
add
mov
push
xor
dec
sub
sbb
mov
inc
inc
mov
inc
cmp
adc
addr16
mov
cs
add
jmp
enter
xchg
inc
mov
add
add
push
adc
inc
or
jmp
inc
add
cmc
cmp
xchg
fimuls
test
jns
add
add
push
rorl
scas
call
add
sahf
lock
inc
icebp
in
inc
or
jle
adc
scas
dec
or
pop
mov
std
push
cli
add
inc
or
out
xchg
call
push
add
insb
add
add
xor
arpl
inc
push
rclb
std
push
cmp
cltd
mov
out
mov
jmp
mov
xchg
in
adc
ljmp
enter
pop
decl
or
cltd
xchg
cltd
adc
lcall
and
mov
pop
movsl
es
or
outsb
adc
inc
cwtl
arpl
add
cmp
add
decl
adc
incl
addl
cmp
incb
or
push
mov
add
das
cld
test
add
pushl
repnz
lock
shlb
jle
mov
cmp
dec
lock
mov
nop
or
jno
add
push
inc
mov
shl
sbb
fidivrs
decl
mov
call
ja
lcall
pop
jg
sbb
inc
adc
in
xchg
ljmp
and
xchg
pop
fistpll
call
or
sbb
xorl
mov
or
xlat
roll
out
incb
add
jne
mov
das
sbb
nop
inc
icebp
cmpsl
pop
addb
push
aad
mov
enter
int3
sbb
jmp
les
in
jo
add
inc
mov
cmp
cld
sti
and
cmp
sbb
roll
popf
or
xchg
dec
dec
jmp
sub
push
or
adc
sub
sbbb
rclb
dec
add
loopne
decb
nop
idivb
icebp
cwtl
pop
dec
add
pop
dec
add
sub
ds
in
push
mov
jmp
add
xor
je
cmp
jmp
leave
sar
call
inc
or
jmp
inc
or
add
add
inc
jae
insb
add
sar
dec
fs
testb
incl
mov
sbb
or
lcall
push
xor
fidivrs
lea
sbb
pushl
jns
call
jg
divl
call
push
mov
pushl
mov
or
jle
call
jle
divl
add
sbb
ljmp
mov
push
mov
in
divl
and
mov
sbb
incl
cmp
add
mov
ds
lock
jb
sbb
loopne
or
xchg
pop
adc
rclb
pop
nop
enter
mov
push
or
pop
or
lock
push
lock
mov
fiadds
lea
aam
incb
add
incl
bound
stc
mov
inc
lock
add
shl
out
add
lods
repnz
ljmp
and
adc
and
xchg
or
lcall
cli
shlb
out
jmp
mov
pop
fcomps
xor
xchg
enter
test
jns
add
mov
cld
std
sbb
cmc
push
sub
mov
push
nop
cld
fstl
cmp
subb
push
jo
int3
push
push
cld
lods
cli
cwtl
jne
mov
xchg
push
das
hlt
lea
das
or
adc
jmp
in
mov
jmp
inc
cld
fdivr
jecxz
xchg
inc
cld
addr16
add
shll
mov
ss
cld
pushf
int3
jecxz
push
inc
cld
addr16
xor
inc
jmp
inc
cld
jl
jecxz
xor
sbb
fdivrp
in
not
dec
icebp
mov
cld
jl
hlt
mov
rolb
call
cmpsb
add
negb
dec
cli
and
lock
add
incl
add
add
mov
add
call
add
lahf
imul
decl
pop
add
pop
popf
mov
push
push
mov
out
and
push
dec
lret
filds
pushl
push
nop
std
test
addr16
push
add
or
call
push
cmp
pop
sahf
add
add
outsb
xchg
jne
push
pop
test
addr16
out
add
mov
ljmp
jnp
sti
and
cli
out
pop
add
sub
pop
jp
sbb
aam
add
pop
mov
sar
dec
push
xchg
fsubrs
mov
pop
lock
mov
mov
xor
sbb
add
pop
icebp
add
loope
fwait
cmp
add
lock
sbb
ljmp
popa
add
mov
lock
add
enter
or
push
inc
jg
jmp
clc
lea
popf
sub
jns
loope
add
stc
add
sbb
jmp
clc
add
jg
add
inc
int
clc
dec
int
push
jmp
lret
testb
add
add
inc
add
adc
and
jmp
cld
inc
jg
push
xchg
mov
push
sub
in
mov
inc
add
jle
jmp
pop
jmp
inc
inc
popa
insl
inc
push
or
cltd
mov
leave
jae
inc
jle
cmpsb
das
sbb
ret
in
dec
leave
je
inc
push
and
orl
into
test
push
sub
sub
jne
add
inc
push
sbb
mov
jmp
imul
das
push
orb
aam
aaa
inc
jmp
add
and
movaps
test
clc
adc
push
dec
add
or
fmull
jmp
add
add
inc
or
call
mov
pop
jmp
add
add
sub
pushl
xchg
pop
xor
pop
or
adc
dec
add
sub
aas
inc
push
or
add
into
push
mov
mov
lock
lret
jb
popf
jbe
add
adc
sub
push
leave
ret
cmpb
jle
adc
aas
inc
fimuls
jne
cmc
lret
insb
add
je
and
out
add
cmp
push
adcl
add
and
dec
or
dec
or
add
inc
loopne
add
loop
pop
fcomps
repnz
push
push
cmp
lcall
call
jne
sub
or
sbb
xor
inc
inc
inc
arpl
and
into
lods
imul
testb
lods
repnz
fdivs
inc
inc
arpl
or
xor
movsb
repnz
das
in
add
inc
or
nop
ljmp
push
inc
lock
pop
or
negb
outsl
shll
jmp
cmp
incl
lods
or
pop
scas
jns
cmc
sti
and
add
ret
inc
pop
jb
and
xchg
add
push
int
push
add
jae
push
sbb
test
add
int
mov
jo
jg
sub
inc
pop
lock
cmp
adc
int3
xchg
jmp
loopne
hlt
push
cmp
lret
cmpl
lods
inc
hlt
loop
jge
mov
add
push
xor
inc
jmp
inc
loope
jg
repz
jno
add
outsl
xor
add
sub
xchg
jle
mov
jmp
xchg
hlt
je
stc
sbb
push
mov
andl
lcall
jg
dec
ret
leave
imul
mov
dec
add
pop
or
outsb
add
call
lock
adc
in
rolb
pushaw
je
xchg
add
inc
hlt
ds
add
add
adc
out
cltd
cmc
std
or
pop
add
mov
xchg
add
mov
cs
push
mov
icebp
inc
push
arpl
inc
xchg
hlt
jae
cltd
jp
push
xchg
inc
lock
push
add
and
add
push
add
scas
push
jne
inc
mov
inc
push
loopne
sub
loopne
push
das
call
inc
sti
jne
lahf
adc
add
ret
pop
sbb
or
out
ljmp
pop
jo
add
ret
sbb
icebp
mov
add
lret
inc
inc
inc
mov
das
pop
pop
add
sbb
and
out
inc
pop
add
push
xchg
jmp
and
or
mov
push
push
add
jbe
scas
or
jbe
pop
add
icebp
or
inc
xchg
pop
xchg
add
repz
sti
cmpl
sti
jno
sub
lds
add
cmp
jns
or
ljmp
outsb
sti
cmp
adc
xor
jmp
mov
sti
xchg
add
sti
xchg
add
dec
loope
cmp
pop
jno
loope
jmp
loope
f2xm1
cmp
hlt
mov
out
es
sbb
test
mov
in
xchg
sti
push
pushf
rol
inc
push
mov
testl
jb
pop
call
loop
jl
ljmp
or
jecxz
push
jmp
add
mov
mov
inc
push
mov
or
or
mov
dec
leave
je
ret
inc
lock
in
mov
rcrb
add
sti
jne
jecxz
sti
push
repz
pop
pushl
jecxz
popl
or
mov
or
jne
icebp
jae
xchg
xchg
incl
add
roll
add
inc
in
aad
jle
pop
add
push
aas
jmp
addb
pop
shrb
xor
push
pop
add
pop
pushl
pop
fwait
aas
pop
add
add
pop
shrb
xor
inc
dec
or
loopne
pop
dec
and
cmp
jo
cmp
or
dec
cmp
mov
inc
loopne
jmp
daa
aas
mov
loopne
add
div
jne
cmp
repnz
add
cmp
push
fs
add
dec
call
mov
enter
sbb
je
xchg
rorb
add
mov
add
add
inc
or
test
out
cmp
or
inc
or
ljmp
inc
add
cmpsl
lds
add
mov
mov
int
ds
add
add
pop
add
push
pop
add
pop
mov
loope
add
shrb
or
or
jmp
lret
add
and
lds
add
add
add
add
in
mov
inc
or
scas
xchg
call
cld
in
jmp
dec
or
jmp
inc
or
xchg
pushl
jmp
movsb
test
je
mov
decb
nop
addl
in
not
inc
les
and
sub
jne
fistl
inc
sub
or
inc
or
add
xor
jmp
jmp
leave
jae
mov
loope
xor
push
add
dec
inc
add
repz
mov
pop
add
mov
inc
lahf
pop
call
push
push
or
out
bnd
jbe
pop
add
ficoms
push
push
scas
push
add
inc
add
ret
out
aam
add
pop
jns
incl
add
shl
pop
add
pop
enter
std
push
sub
push
add
call
cmpsl
sub
jae
mov
push
pop
cs
fnstcw
or
xchg
cmp
insb
outsl
rolb
or
andl
int
jb
ljmp
cwtl
hlt
je
pop
es
sub
je
add
sbb
je
sbb
xchg
or
xchg
sbb
xchg
or
xchg
out
les
add
outsl
fiadds
add
jbe
inc
sub
push
inc
sub
add
cmp
test
in
inc
or
add
ljmp
inc
test
add
inc
ret
inc
or
add
jae
jmp
adcl
xor
inc
hlt
lcall
mov
loopne
jge
jmp
inc
jge
jmp
adc
mov
lock
repz
sub
inc
push
jb
mov
lods
mov
jmp
aad
add
in
les
add
add
repnz
call
aas
icebp
pop
js
call
push
jle
std
out
jp
incb
orb
aam
icebp
jmp
aam
mov
incb
daa
add
inc
xchg
test
mov
cltd
mov
mov
test
xchg
out
mov
xchg
out
dec
in
or
jo
movsb
std
divb
pcmpgtw
or
jmp
rcr
out
jmp
or
jmp
pop
or
lea
push
push
jne
add
out
jne
lds
cs
xchg
std
call
xchg
sub
ret
pop
push
fimuls
or
or
jmp
sti
jmp
mov
push
popa
punpckhbw
add
jno
adc
fldenv
push
out
add
add
adc
in
push
add
inc
fisttpl
call
into
cmp
jne
fdivs
sbbl
push
leave
mov
lock
sti
mov
lahf
adc
inc
inc
xchg
out
sbb
cmp
ja
outsl
cmp
inc
pop
ja
fistps
call
inc
icebp
dec
add
out
jp
shlb
ja
pop
daa
ja
scas
pop
in
mov
cmp
fildl
icebp
scas
rcrb
jae
add
out
incb
jmp
sbb
pop
ja
repnz
sub
pushf
xchg
icebp
dec
out
nop
cltd
or
push
scas
testb
jae
sub
movsl
fcmovnbe
cmp
arpl
add
xchg
mov
call
inc
adc
mov
loope
push
pop
in
cld
minps
pop
lods
xor
inc
lock
fninit
nop
sub
adc
pop
loope
test
or
lock
mov
jbe
rorl
jmp
iret
out
into
add
pop
pushf
mov
out
xchg
or
mov
pushf
std
scas
sbb
je
xor
enter
push
bound
in
fstpl
pop
adc
cld
in
ret
je
jecxz
stos
inc
or
out
ret
pop
jo
je
in
outsb
mov
xadd
or
mov
cwtl
jecxz
sub
push
pop
xor
adc
incb
add
jne
jae
jg
inc
pop
repz
inc
fwait
test
imul
test
jns
inc
hlt
xchg
sbb
inc
repz
push
xchg
test
fldenv
ss
add
aas
add
out
pop
call
mov
jne
shrb
jmp
pop
pushl
inc
call
jne
add
adcb
cmp
loop
movsb
scas
pop
add
inc
repnz
subl
sub
cmp
repnz
xchg
fucompp
pop
decl
add
fcmovb
pop
lods
pop
xor
xchg
or
nop
mov
idivl
pop
testl
add
ss
inc
lock
inc
in
pushl
in
je
add
mov
test
jae
mov
aaa
sti
jg
adc
or
dec
inc
cmp
js
movl
ja
pop
sbb
lahf
sub
mov
loop
flds
fwait
adc
adc
mov
loop
out
xor
loop
icebp
mov
out
cld
ret
jno
in
push
loop
clc
pusha
adc
inc
loop
hlt
and
push
xor
cmp
add
and
push
and
sbb
and
push
adc
sbb
pop
fucomp
jnp
xchg
jno
loope
dec
inc
in
xchg
mov
icebp
gs
loop
adc
outsl
mov
ja
outsl
jmp
add
pop
or
jecxz
es
mov
call
loop
push
xor
icebp
imul
pop
push
shlb
dec
loop
add
lock
dec
lock
into
mov
call
rcrl
call
cmpsb
sti
pop
sbbb
or
push
leave
jo
loope
and
push
cld
push
loopne
xchg
push
jmp
push
enter
or
jmp
add
add
push
add
push
add
popa
pop
clc
mov
mov
or
cli
add
es
pop
repz
inc
fwait
cmp
repz
push
mov
xchg
repz
add
jnp
std
jne
repz
push
or
jae
mov
jg
mov
inc
lock
cmp
pushl
fadds
fimull
push
mov
add
cmp
sub
pushf
cli
out
lahf
jmp
dec
or
inc
inc
repnz
inc
insl
xor
imul
dec
out
in
add
jne
inc
repnz
icebp
sub
inc
add
repnz
inc
inc
mov
add
mov
enter
loopne
add
dec
add
add
cmp
add
nop
call
lock
adc
pop
insb
jmp
rcll
pop
mov
int3
in
shlb
push
or
push
test
loope
push
pop
cs
sub
fsubp
ret
hlt
and
repnz
push
pop
cmc
arpl
imul
cs
adc
add
fstl
pusha
mov
inc
icebp
loopne
cmp
lods
pop
push
sub
or
add
xorl
dec
or
add
pushf
cmp
jno
sub
dec
jmp
sub
xor
cmp
adc
pop
loope
inc
mov
inc
jmp
inc
jno
test
inc
or
aas
test
xlat
std
push
outsl
dec
call
or
push
loope
je
in
ja
fmulp
sub
push
jb
mov
aad
fdivrp
inc
dec
outsl
es
mov
call
jo
ffree
in
cmp
or
jmp
and
dec
add
add
sbb
push
add
or
push
inc
add
inc
inc
add
inc
inc
fsubp
xor
aaa
inc
add
mov
in
push
inc
add
inc
add
or
sahf
or
dec
pop
in
jecxz
cld
decl
call
jmp
jecxz
jne
rclb
bound
push
mov
test
hlt
or
std
push
inc
daa
pushl
out
pop
in
mov
lds
push
or
add
xor
mov
dec
pop
out
add
add
inc
jp
push
inc
repnz
push
xor
imul
inc
inc
xor
cmp
add
cmp
stos
sbb
addr16
movb
jp
inc
push
repnz
add
cmp
jmp
out
ret
pusha
sbb
in
aas
mov
mov
mov
jb
repz
inc
sbb
xchg
call
cmpsb
in
inc
popf
mov
inc
or
add
imul
fidivrl
outsl
add
rclb
roll
cmp
push
test
sub
jmp
inc
fisubrl
add
pop
test
inc
push
or
in
adc
inc
arpl
cmc
jbe
add
shr
in
cmp
mov
mov
icebp
data16
scas
roll
sub
ljmp
fidivl
das
jl
jmp
inc
xchg
sahf
or
test
adc
adc
rolb
repnz
sbb
loop
mov
add
adc
outsb
out
incb
pop
ljmp
add
out
or
add
add
arpl
rolb
repnz
cltd
cld
or
stos
popa
mov
add
push
ficomps
xlat
inc
mov
in
jae
loope
or
aam
jmp
iret
add
dec
mov
subl
push
shll
call
push
inc
cld
push
in
andb
rolb
ljmp
mov
sahf
sbb
jne
in
mov
shr
std
mov
xchg
push
xchg
dec
add
popf
ds
pop
adc
mov
xor
push
inc
in
test
popa
sbb
add
fstpt
inc
adc
je
mov
ljmp
xor
add
add
loope
cmc
pop
sbb
jb
loop
jecxz
pop
or
sti
pop
call
push
inc
leave
add
inc
xchg
mov
int3
sub
stc
sbb
push
mov
or
mov
loop
ds
jbe
push
adc
and
loop
rcl
cmp
in
loop
testl
sahf
insb
add
adc
add
push
or
ds
and
push
add
shrl
loopne
leave
pop
loope
xchg
mov
sti
pop
icebp
jmp
push
jbe
jno
mov
mov
ret
das
mov
loope
sub
loope
dec
cmp
imul
jmp
cmpl
ret
add
hlt
cmc
mov
loope
popa
jmp
andb
jmp
sub
mov
push
xlat
push
daa
xlat
je
sub
jp
daa
rol
inc
cmp
mov
dec
arpl
int
pusha
adc
mov
jmp
inc
je
lods
loope
pop
cmpsl
je
cmpsl
pop
or
add
push
incl
movl
push
shrl
sbb
lcall
mov
xchg
add
add
call
lahf
ljmp
data16
or
pop
dec
add
dec
inc
add
xor
call
fnstenv
cld
call
call
leave
lods
add
push
flds
adc
add
push
push
pop
xor
push
mov
adc
pop
sbb
outsb
xor
mov
mov
push
bound
push
pop
xor
pop
mov
add
or
push
cmpsb
dec
add
jne
jmp
stc
loope
leave
test
add
push
add
cmp
mov
and
dec
cmp
push
jne
mov
mov
imul
inc
loop
pushl
push
push
or
jl
add
mov
pop
cld
fildll
rorb
xchg
mov
mov
push
das
inc
fdivrp
sbb
ljmp
pop
ret
add
and
orb
sti
pusha
pop
mov
imull
stc
lock
sar
lret
add
xchg
call
push
dec
rcrb
and
pusha
fnsave
rcrl
pop
test
inc
dec
sbb
xchg
add
icebp
pop
or
lods
push
pop
rcrb
hlt
stc
pop
add
and
hlt
add
xchg
addl
fst
sar
sti
mov
sarb
mov
xor
pop
xchg
shlb
loope
add
add
inc
or
push
sbb
push
lock
imul
testl
repnz
add
jmp
pop
sar
jmp
or
scas
rcr
mov
inc
lret
pop
sar
jmp
cmp
mov
pop
or
xchg
test
mov
add
stc
aam
shlb
or
aam
rclb
ljmp
add
add
std
lcall
test
pop
add
icebp
incl
add
adc
inc
lahf
add
std
jle
adc
test
mov
test
mov
out
mov
push
addb
add
mov
mov
aam
mov
add
jecxz
push
arpl
dec
call
sub
or
add
stos
inc
push
loop
test
testl
shl
test
mov
jle
inc
loop
call
pop
sbb
cli
int
cmp
jecxz
add
adc
lods
loop
add
pop
jecxz
add
inc
inc
inc
fcmovnb
jae
ja
adc
xor
repnz
enter
cli
jne
mov
iret
pop
lods
pop
fisubl
or
xchg
push
aad
shl
cmp
or
and
nop
add
xchg
fistl
ficompl
cmp
push
iret
std
ljmp
aam
xchg
adc
add
xor
not
inc
xchg
xor
or
dec
inc
into
xor
into
sbb
ret
xor
inc
pop
add
or
mov
popa
test
inc
xor
inc
test
jne
xchg
sbb
jl
dec
push
daa
insb
adc
faddl
add
pop
mov
pushf
mov
ss
loopne
add
lret
movl
aaa
jb
mov
xchg
fwait
cmp
leave
sub
into
push
bound
mov
loope
iret
ss
jge
sar
into
sbb
arpl
mov
stc
sbb
mov
popf
push
iret
jmp
add
imul
mov
pop
dec
sti
cmp
ljmp
sbb
or
stc
mov
push
jp
mov
add
and
ljmp
aas
adc
roll
call
andl
std
lea
std
call
out
stos
movsl
pop
idiv
sub
idiv
or
leave
ret
push
mov
add
xchg
clc
enter
sbb
sbb
cmp
mov
push
push
add
push
or
adc
orb
inc
loop
mov
pop
mov
repnz
cs
lret
cwtl
xchg
push
std
mov
xlat
push
push
xor
jae
push
cltd
sti
imul
push
call
jmp
xlat
incb
add
and
popl
mov
je
cmc
push
jo
sub
negl
mov
xor
push
int3
lds
je
or
or
push
in
xor
imul
imul
or
sbb
mov
jnp
pop
ret
jnp
loop
dec
xchg
movsb
sub
or
add
neg
add
iret
push
sbb
sub
testb
sbb
mov
inc
or
dec
jl
mov
sub
and
mov
pop
sti
lret
inc
lret
push
or
gs
add
decl
fwait
loop
add
lret
mov
jge
movsl
add
jae
je
and
test
lret
insb
dec
add
dec
decl
leave
push
insl
sbb
jmp
adc
call
insb
push
dec
jmp
mov
mov
inc
mov
mov
je
ret
inc
les
inc
or
add
push
je
jae
mov
add
add
push
jae
rclb
sbb
pop
add
cmpb
je
sub
std
mov
sub
add
pushl
mov
mov
lret
add
outsb
in
call
and
mov
add
enter
incl
shr
cli
cmp
jmp
rol
or
clc
mov
popf
mov
lea
add
dec
push
inc
dec
or
dec
rolb
mov
mov
pop
mov
mov
xchg
outsb
jle
shr
lret
dec
fsubs
xchg
shlb
test
mov
add
mov
movl
mov
inc
ja
add
inc
out
dec
int3
inc
mov
add
dec
int3
add
divl
shl
mov
ficompl
rcll
mov
push
int3
inc
inc
inc
xorl
push
and
ffree
enter
dec
cmp
imul
dec
mov
mov
loopne
mov
push
fstl
ror
movl
push
test
push
jmp
xchg
popa
cmp
roll
xchg
xchg
iret
int
ss
jae
lcall
xchg
or
test
stos
inc
inc
or
or
add
inc
or
das
nop
dec
inc
jmp
insl
or
cmovae
push
jne
sub
add
jmp
test
add
shlb
cmp
sub
loopne
inc
or
sub
jmp
dec
or
jmp
adc
mov
or
jo,pt
sub
faddp
jl
call
inc
push
test
or
push
cmp
mov
jecxz
add
or
inc
fdivs
dec
lock
lea
add
popa
je
das
or
add
decb
push
imul
fimuls
lea
stc
imul
sub
push
inc
or
adc
movsl
leave
jb
sbb
lock
outsb
or
or
pop
push
pushl
fnstenv
cmp
push
mov
sti
clc
add
inc
or
je
sbb
jp
add
das
push
clc
inc
pop
std
adcb
test
push
sar
push
xchg
sbb
roll
mov
das
enter
pop
das
shlb
iret
dec
cmc
iret
jg
aas
inc
inc
inc
mov
sub
cmp
inc
ficoml
in
pop
iret
test
jno
add
add
push
inc
inc
inc
dec
mov
push
or
adc
test
inc
cmp
call
ret
sbbb
xchg
rcrl
inc
mov
orb
fmulp
jae
mov
lret
jmp
cli
into
push
rcrl
loopne
mov
rol
sti
mov
add
cmp
data16
pop
in
cli
popl
mov
fwait
incl
or
ss
insl
or
add
or
sub
rol
loope
fsub
jb
adc
push
imul
jmp
mov
jmp
test
bnd
les
jmp
mov
mov
add
ja
les
jmp
das
leave
pop
jno,pn
shl
add
cmp
inc
cmc
das
sbbb
inc
dec
cmc
inc
in
mov
pop
add
fiadds
lret
in
lret
add
ret
loope
clc
fstpt
inc
hlt
push
push
add
popf
adc
add
out
add
inc
lock
pop
add
pusha
add
pop
add
sbb
mov
hlt
out
pop
xor
sub
mov
adc
ja
rorl
or
fsubs
jne
inc
jnp
out
inc
outsl
add
mov
sub
in
cli
lcall
jmp
inc
test
jmp
addr16
rolb
add
push
push
cmp
inc
cld
lahf
mov
add
xchg
jno
mov
inc
pop
pop
add
inc
mov
movsb
xchg
xlat
lret
pop
add
mov
call
mov
adc
out
cmp
sarb
inc
in
pop
mov
add
dec
jb
xchg
sbb
inc
mov
jo
das
lret
mov
or
add
sbb
ror
push
dec
jmp
jnp
or
xchg
out
push
or
push
pop
mov
aas
inc
or
cmp
fwait
repz
test
iret
sub
movsl
add
sub
and
fstps
dec
sub
ss
jb
jmp
lret
push
xor
rolb
jmp
push
inc
xor
inc
add
xchg
xchg
push
scas
mov
aas
inc
or
cmp
repz
add
or
push
js
sbb
inc
or
push
pop
mov
xor
push
dec
add
cmp
ss
loopne
inc
shlb
or
aaa
add
test
mov
xchg
or
xor
js
jl
shlb
dec
add
mov
fimuls
dec
mov
call
sub
xchg
cmp
xchg
xor
cmpsb
subb
rcrl
add
leave
inc
inc
rcrb
mov
call
and
mulb
je
sbb
int3
in
inc
loopne
jns
mov
pop
or
test
add
add
inc
rolb
pop
mov
inc
add
cmc
jne
fisttpll
sub
or
sub
mov
or
test
inc
push
or
call
cmc
leave
jb
insl
inc
enter
push
pushl
mov
leave
mov
mov
enter
je
mov
insb
nop
es
dec
or
push
js
dec
les
add
scas
repnz
jl
test
shl
je
out
or
push
incl
inc
int3
inc
xchg
in
xorb
ds
and
and
movsb
fimull
popf
mov
je
lret
clc
lret
je
fiaddl
je
lret
fsubrs
je
or
cmp
cmp
aaa
mov
subb
mov
push
xor
mov
inc
cmp
mov
push
inc
idivl
inc
or
mov
adc
xlat
mov
add
mov
or
and
or
shrb
in
mov
ss
xor
incl
dec
inc
inc
or
ret
add
push
xchg
faddl
add
inc
or
and
mov
add
dec
das
add
inc
mov
mov
mov
idivw
loop
aaa
add
jmp
inc
mov
jae
mov
cmp
test
push
or
push
or
adc
add
stos
inc
sub
mov
adc
sub
pushf
add
std
mov
cmc
call
std
add
out
cmpb
jne
and
std
xor
cmp
mull
les
ret
inc
or
add
lds
push
or
add
int3
std
jmp
mov
notl
std
mov
add
int3
std
jmp
dec
or
out
std
ljmp
je
les
call
and
out
xchg
std
incl
lock
aas
fcomp
std
loopne
ret
mov
jp
fbstp
dec
bound
mov
in
inc
add
rolb
adc
imul
adc
les
add
mov
mov
shl
ret
je
dec
push
insb
dec
loop
rorl
mov
and
sti
cltd
jg
add
sbb
adc
push
pop
or
add
divb
add
and
mov
mov
loop
push
sbb
lods
or
cmpsb
ret
add
adc
jmp
cwtl
add
ds
stos
push
pushf
jge
mov
movsb
out
imul
cmp
pop
idivl
mov
mov
ret
roll
inc
jge
mov
arpl
shrl
inc
pop
jb
vmovups
dec
adc
or
lret
call
bound
xorl
jecxz
inc
add
or
or
jno
add
inc
movsb
pusha
push
sbb
xor
ret
pop
pushl
mov
addr16
test
or
mov
jle
add
in
popa
jg
inc
or
mov
andb
adc
mov
push
movsb
sub
icebp
lret
dec
clc
pusha
out
mov
fidivrl
mov
inc
add
rorl
add
pop
cld
add
stc
or
nop
add
fucomip
push
jne
clc
mov
leave
pop
leave
pushf
sbb
push
push
jns
les
or
add
adc
dec
add
cmp
call
dec
clc
lea
dec
call
sbb
adc
mov
jae
push
and
add
stc
add
pslld
ljmp
jae
sbb
idiv
xchg
jbe
stc
ror
std
mov
add
jae
and
stos
mov
cmpb
adc
add
xchg
stos
insl
mov
stos
mov
mov
je
cwtl
xor
sahf
mov
std
incl
add
mov
mov
inc
and
inc
inc
and
adc
push
ss
jo
or
and
mov
je
pop
out
push
je
shl
stos
jns
or
sarb
sbb
shrb
inc
dec
cmp
lods
inc
mov
adc
outsl
lods
xor
mov
lock
add
call
mov
mov
leave
andb
pop
clc
add
orb
add
lods
and
jge
inc
test
mov
dec
mov
cmova
fs
aas
pop
dec
cmp
pop
xor
jno
cmp
add
inc
push
leave
sub
push
jb
xchg
sbb
inc
or
jmp
add
jg
add
inc
or
push
add
ds
das
sbb
push
lods
cmp
cltd
mov
xorl
jne
add
call
pusha
pushl
adc
inc
jge
mov
call
push
add
je
test
sub
add
test
adc
adc
add
add
and
push
lcall
mov
sub
push
push
adc
pop
call
icebp
cli
adc
loopne
imul
jne
mov
push
add
cmp
cli
pop
call
aaa
dec
cld
lcall
push
inc
add
out
shlb
push
add
sbb
add
pushl
loopne
lcall
ret
lahf
mov
sub
inc
mov
xor
push
jmp
or
test
ljmp
sbb
adc
lahf
sub
lods
mov
mov
add
and
pop
jb
mov
pushl
stos
adc
mov
add
sub
fbld
mov
add
add
jg
inc
mov
mov
call
aam
add
shrd
mov
add
fisttpl
ds
les
mov
add
inc
cmp
jmp
mov
cmp
call
ss
jno
add
adc
adc
loope
dec
jno
add
sarb
add
mov
xchg
in
jp
mov
or
sub
push
inc
mov
push
andb
lds
popf
or
mov
xchg
mov
lea
mov
xor
mov
scas
mov
add
xor
jmp
xor
je
pushf
xor
incb
xor
pushl
ret
or
jmp
outsb
std
or
add
xchg
add
pushf
jnp
jl
inc
or
pop
inc
pushl
inc
std
leave
sbb
fcoml
sbb
out
sbb
push
xor
clc
mov
addr16
scas
ja
push
in
xor
sahf
ja
out
fisubrs
out
ret
incl
add
add
aaa
push
add
add
lock
add
pop
leave
sbb
decb
jns
out
pop
je
andl
ds
cli
lock
add
test
push
les
add
add
nop
pop
testb
xchg
or
in
test
pop
mov
sbb
jo
addl
je
jge
sbb
add
add
test
ret
imul
mov
sarb
add
add
inc
and
or
or
xchg
leave
test
jmp
lea
sub
outsb
push
leave
add
sbb
arpl
scas
mov
add
aas
in
xchg
xor
sub
fcomps
aas
in
add
pop
mov
cs
xchg
or
pop
jle
stos
pop
inc
loop
test
inc
addl
pop
leave
push
pop
mov
in
int3
inc
add
pop
and
iret
inc
push
mov
mov
add
ds
pop
fs
cs
mov
jno
pop
icebp
mov
aad
sbb
add
or
rol
dec
and
cmp
adc
lods
and
fdivs
out
push
mov
xor
mov
lods
shlb
jmp
out
movsb
jo
fsubrs
leave
stos
aas
or
in
jg
call
mov
addb
add
cwtl
addl
add
ljmp
test
lea
cmp
push
add
push
int3
stos
repnz
or
ds
je
xchg
ss
test
je
pushf
add
std
jne
pop
sub
icebp
jb
jne
pop
hlt
loopew
sub
pusha
push
leave
ret
mov
push
decb
xchg
outsb
fildl
pop
je
jg
or
clc
fisttpl
push
mov
add
pop
pop
pop
pop
ja
or
fstpt
subl
and
add
das
add
cs
pop
leave
pop
cli
rcll
sub
jne
adc
or
gs
fidivrs
lock
add
jae
inc
enter
mov
sub
fs
add
sti
mov
test
adc
sbb
mov
or
xor
and
js
das
adc
mov
call
into
gs
je
dec
lods
pusha
dec
inc
mov
pop
jmp
or
fldenv
pushl
daa
aas
adc
cmpsl
add
aaa
cld
dec
mov
jae
xlat
ret
fimuls
add
adc
loope
dec
fisubrs
add
sub
push
sti
lds
pop
stos
xor
xchg
mov
and
and
jmp
sbb
test
lea
xorb
stos
lret
mov
push
jne
inc
outsl
lods
clc
jecxz
fisubrl
sbb
aam
dec
xor
mov
leave
xchg
lret
call
add
add
jo
add
adc
scas
mov
cltd
xchg
add
mov
mov
pop
aas
test
icebp
mov
xchg
inc
popf
sub
cmp
test
icebp
fcoml
mov
xchg
dec
aad
loope
sbb
xchg
mov
repz
jmp
ds
cld
mov
je
mov
or
cmpsb
pop
add
pop
push
hlt
inc
cld
incl
push
ljmp
cmpsb
je
aam
adc
pop
sar
pushf
adc
incb
dec
pop
or
jmp
or
jne
adcl
pop
sub
sbb
adc
test
fimuls
cmpl
jne
inc
pop
out
lahf
or
mov
mov
cmovne
add
inc
or
out
sub
outsb
pop
jae
stc
loopne
call
aad
adc
daa
or
repz
push
int
leave
insb
decl
dec
fiadds
push
add
xchg
push
in
push
pop
jae
inc
pushl
or
test
adc
leave
add
lahf
ss
fistpll
sub
loopne
ret
pop
push
jae
add
add
xchg
inc
call
cmpsl
mov
shr
ja
add
mov
scas
lahf
jns
cmpsl
xor
call
cmp
fwait
jbe
jnp
sub
in
mov
shlb
add
add
in
je
cmp
je
ljmp
pushf
pop
sbb
fwait
out
or
leave
jnp
clc
sbb
fwait
push
sub
mov
leave
lea
add
rol
dec
mov
push
adc
movsl
outsl
inc
xchg
movsl
cmp
mov
mov
aam
sbb
test
shr
xor
mov
ss
cmpsb
sbb
sbb
mov
loop
stos
inc
mov
mov
movsl
dec
cmp
cmp
add
xchg
rol
aad
mov
lods
cwtl
jno
xlat
sub
stos
test
jl
lods
cmp
inc
or
sub
push
pop
and
or
call
rcrb
mov
add
jle
push
rorl
call
adc
shl
movsl
xor
fcomps
loopne
ds
add
loop
sbb
pop
jmp
inc
movsb
je
lods
shlb
inc
adc
add
movsb
std
jne
and
clc
dec
add
dec
inc
add
pop
call
and
loop
jmp
fs
fdivrp
pop
inc
lahf
pop
pushl
jg
xor
jnp
std
jne
and
or
mov
push
data16
add
int3
repnz
pop
add
pushl
jg
outsb
pop
or
jnp
pop
pop
mov
add
push
and
mov
jmp
add
mov
inc
inc
push
cmp
das
shl
pushl
cwtl
ret
jnp
leave
add
cwtl
cltd
and
ret
sti
jae
xor
or
pushf
cmpb
and
jg
addr16
pop
dec
je
add
out
pop
push
scas
les
daa
jmp
ds
inc
lret
or
add
inc
mov
inc
scas
mov
add
das
or
flds
xor
mov
add
stos
ret
inc
jae
add
inc
xchg
testl
or
ss
dec
push
add
or
cmpl
push
xor
inc
lret
and
les
and
add
add
adc
loope
ss
mov
daa
sbb
push
in
or
inc
xchg
in
loope
ss
loope
ss
leave
and
int3
sbb
js
adc
ss
in
add
in
xchg
inc
add
pushf
movl
data16
or
jae
repz
incb
aas
pop
xor
or
andb
cmc
call
dec
add
xor
pop
cmpsl
lods
lret
outsl
inc
adc
dec
lea
inc
adc
and
sub
xorl
add
inc
jne
sub
andl
add
dec
je
mov
push
popf
dec
xchg
jbe
sub
je
mov
inc
xor
lea
xor
xor
cltd
fimull
call
mov
dec
loopne
stos
dec
in
imul
mov
pop
je
jne
and
aam
fcmovu
mov
add
inc
int3
push
incl
push
std
ljmp
add
mov
sub
sahf
mov
ljmp
mov
add
or
add
imul
ror
xchg
mov
jle
add
je
cs
in
mov
add
lds
jmp
mov
jl
mov
orl
add
les
call
insl
incl
add
mov
je
clc
insb
pusha
call
cwtl
cs
fcoms
fbld
test
push
cmp
pushl
icebp
add
sbb
sub
xchg
sbb
inc
inc
mov
idivb
cmp
inc
sub
adc
pushf
ss
add
or
lods
inc
inc
mov
cmc
inc
sahf
mov
add
add
adc
pushf
xor
call
ds
or
cwtl
rcrb
mov
jnp
dec
jmp
pop
mov
cmc
rcrl
inc
test
rcll
test
or
lds
sbbl
or
sahf
sbb
movsl
lock
psubsw
xchg
jmp
add
test
cmp
add
insb
xor
add
flds
roll
mov
pop
call
push
mov
fistps
rcrl
jbe
cltd
addr16
mov
push
sub
repnz
test
inc
or
sbb
dec
je
popf
dec
push
dec
pushf
je
fsubl
jl
xchg
jne
add
rcr
repz
mov
xor
outsb
lahf
mov
lcall
inc
hlt
dec
and
and
incl
lcall
out
call
jo
push
stos
mov
lcall
pop
inc
hlt
adcl
inc
clc
scas
and
add
fcomi
out
pop
fs
add
pushl
add
add
std
jmp
fs
fisubs
jmp
dec
inc
add
fsubrl
incb
mov
orl
inc
inc
jnp
sub
mov
gs
mov
jae
das
call
call
mov
add
mov
xor
or
test
rorb
jne
jmp
in
xchg
incb
add
jecxz
imul
das
or
xchg
dec
call
fld
pop
inc
xchg
push
mov
mov
inc
mov
add
scas
aas
mov
jmp
cwtl
add
inc
movsl
orl
adc
test
stos
cld
pusha
dec
sarb
aad
sub
add
mov
dec
les
call
stos
inc
adc
sub
sbb
push
xchg
pop
aas
sbb
es
dec
mov
dec
clc
cltd
imul
sbb
ret
shl
mov
lcall
jmp
imul
pop
add
roll
push
lods
cmp
add
je
add
dec
sahf
sub
call
loop
adc
push
lods
push
pop
out
mov
pop
or
call
push
fdivs
adc
sub
pop
jmp
jecxz
or
aam
lcall
mov
jl
inc
push
push
add
int3
mov
dec
cmp
jne
je
pop
test
add
add
je
cmpsl
mov
lea
dec
push
insb
jae
xchg
pop
ljmp
insb
jae
pop
push
mov
pop
cmp
repz
je
cmpsl
mov
mov
stos
inc
in
push
add
std
jne
fs
pop
pop
insb
lds
addr16
push
push
or
repnz
call
cwtl
call
jne
jmp
in
lahf
mov
jge
inc
xor
xor
mov
lcall
lcall
nop
pop
or
je
jns
push
js
lret
roll
mov
pop
or
push
and
pop
lcall
testl
inc
add
mov
incb
add
cwtl
stos
in
xlat
mov
loop
lcall
or
mov
and
xchg
push
sbb
jecxz
push
add
push
rcll
pusha
sub
inc
inc
xchg
push
adc
mov
push
add
cmpsb
jle
mov
sub
sbb
sub
outsl
mov
add
add
add
add
add
loope
fstl
jmp
inc
xchg
push
pop
cmp
or
sbb
add
cmpsl
stos
test
lcall
add
aam
xchg
and
push
add
pop
add
in
inc
pop
out
addb
inc
sub
je
in
inc
inc
add
out
je
out
or
sub
movl
push
xchg
imul
push
mov
mov
sub
push
dec
mov
aam
xchg
je
fmull
out
roll
or
orb
xor
sti
pop
call
ja
cld
push
push
sti
pop
call
add
mov
push
push
mov
or
std
or
icebp
mov
data16
dec
add
or
mov
outsb
jae
clc
shl
pop
call
inc
test
inc
xor
sbb
jo
jne
pusha
je
xchg
je
jne
cmp
xchg
dec
lahf
je
cmp
add
or
int3
rorl
mov
push
enter
sub
pop
popf
dec
fs
addr16
insl
inc
add
adc
call
mov
lcall
test
add
push
pop
pop
or
cmp
js
dec
cld
fbld
inc
inc
jnp
or
pushf
pop
mov
cld
push
pushf
or
in
clc
sahf
incb
add
pop
push
add
int
sub
push
lahf
fwait
add
jo
inc
mov
dec
jmp
popf
sti
xchg
and
sbb
mov
pop
roll
faddl
sbb
sbb
stos
mov
out
mov
dec
sub
sbb
stos
mov
popf
adc
rcrl
add
movsl
popf
pop
cmp
loope
aam
adc
dec
jmp
push
loop
dec
outsb
push
stc
dec
pop
add
push
icebp
xchg
incb
decl
enter
jle
push
cltd
push
ret
inc
pop
cmp
push
add
xchg
sub
jo
xchg
mov
pop
loope
jmp
xor
test
add
in
call
add
jp
flds
xchg
or
mov
out
xor
mov
xor
pop
sbb
pop
add
and
xchg
xchg
cmp
or
mov
dec
fnstsw
jne
fs
test
fwait
dec
incl
jne
push
add
insb
xor
call
cmp
imul
jbe
ljmp
mov
dec
insl
std
cmp
aaa
pop
mov
std
jne
insl
jae
ss
push
mov
or
mov
push
pop
jns
shlb
inc
pop
add
lcall
jae
pop
je
or
aam
leave
pop
insb
pop
inc
ja
enter
push
mov
imull
je
mov
inc
sub
fsts
add
add
lahf
loopne
inc
inc
ja
fnstenv
mov
push
es
call
sub
fdivs
sub
daa
fwait
inc
xchg
psubb
mov
cltd
je
dec
out
adc
cltd
adc
stos
std
push
push
cltd
sti
xor
pop
jo
cmpsb
lcall
xchg
adc
add
adc
sub
fwait
dec
das
mov
inc
or
sub
movsb
xchg
cltd
and
sub
das
add
mov
jmp
or
add
test
add
mov
ret
push
ljmp
cmp
and
add
dec
jmp
stos
daa
pmaxub
cltd
lea
les
add
mov
cltd
mov
add
inc
add
fwait
xor
enter
sub
xchg
inc
jmp
add
add
dec
and
ror
mov
or
in
jecxz
jmp
scas
adc
push
xor
inc
cld
cs
xchg
pushf
rcrb
lcall
push
std
imul
jecxz
je
add
xchg
dec
xchg
inc
and
xorl
cld
sub
inc
jmp
int3
jmp
adc
fldcw
add
push
inc
pop
jo
hlt
rcl
test
jne
stos
jo,pn
mov
or
cmp
jne
pusha
jmp
mov
jno
lock
push
incl
sti
jmp
add
mov
jno
or
cld
sbb
or
mov
sti
incl
out
dec
fs
jne
pusha
pop
push
mov
std
jne
pop
xchg
pop
mov
pop
stc
dec
inc
mov
mov
mov
adc
lcall
jo
int3
sarl
das
mov
adc
aaa
cmp
push
cmpsl
ret
cli
test
call
xchg
xchg
or
xchg
push
addr16
pop
inc
add
adc
pop
mov
xlat
push
clc
rclb
pop
call
mov
add
xchg
ss
jno
inc
add
push
pop
mov
cmp
sbb
xor
xchg
jg
lock
or
test
int3
lods
adc
mov
outsl
inc
pop
push
repz
fildl
adcl
fs
or
and
xchg
xor
int
mov
push
aaa
and
push
adc
mov
das
roll
in
mov
xchg
jmp
and
inc
xchg
mov
xchg
js
jmp
jmp
je
je
add
fsubl
nop
ss
enter
push
filds
push
rcll
ljmp
pop
mov
pusha
xchg
mov
add
dec
fimull
je
fdivl
outsb
rorb
or
call
movl
push
xchg
push
roll
ss
add
mov
add
and
inc
jmp
or
xor
repz
add
xor
add
fsub
fimuls
je
or
stc
pop
mov
data16
lret
mov
std
out
xor
insl
out
adc
insl
lds
repnz
fs
cld
mov
cmp
decl
push
rolb
cmp
push
add
push
mov
or
xchg
jmp
cld
mov
cmp
inc
out
mov
inc
inc
mov
add
inc
sub
pop
shlb
sub
sub
mov
xor
mov
inc
inc
push
sbb
addb
pop
lret
xchg
jo
mov
out
pop
xchg
arpl
mov
add
push
ror
push
rcr
sbb
inc
lahf
push
mov
inc
add
negl
or
pusha
or
push
lahf
push
inc
inc
inc
iret
fdivrs
cs
call
mov
or
sbb
cmpsl
add
cmp
adc
pop
mov
jl
jge
add
hlt
mov
dec
push
or
fmuls
sub
add
xchg
sub
cld
sub
icebp
sub
or
add
or
and
shrl
aaa
or
inc
les
add
jbe
xchg
fwait
adc
jne
dec
xchg
jnp
inc
sbb
xchg
xor
dec
jns
mov
outsb
lahf
mov
mov
je
lods
popf
push
push
add
aad
je
aad
out
pop
adc
xchg
jb
out
cmp
jge
xchg
fidivrs
jge
gs
xchg
into
pop
jns
insl
xor
out
xor
sbb
outsb
out
cmp
or
xor
jb
lods
xlat
out
call
mov
push
outsb
mov
inc
cmp
push
sub
inc
test
icebp
call
add
mov
dec
jb
into
mov
or
mov
or
mov
scas
cmp
jne
mov
out
lret
cwtl
std
lcall
xchg
std
jne
mov
mov
ret
cld
pop
daa
add
cwtl
jae
xchg
mov
inc
cld
aad
push
sub
or
inc
push
pop
movsl
jl
add
push
or
shrb
push
call
adc
and
add
push
sbb
xchg
lret
adc
call
xor
shlb
xchg
lods
adc
xor
pop
adc
xor
add
out
addb
inc
call
push
rcll
mov
adc
inc
add
add
jnp
je
lret
push
jb
call
cmp
pop
and
mov
mov
inc
jb
mov
inc
or
out
popl
cld
aaa
sub
cmpl
pop
dec
ret
mov
mov
movaps
and
push
dec
push
or
popl
icebp
call
lahf
add
or
call
fwait
cmpsl
add
mov
out
or
dec
xor
loopne
sub
fld
cltd
icebp
andl
mov
test
or
mov
xchg
push
mov
xlat
pushl
xorl
pop
push
pop
fdivr
pop
pop
push
shr
fmull
je
jns
ds
adc
loop
add
xor
test
xchg
in
inc
adc
aaa
mov
dec
sbb
je
push
cltd
roll
je
ret
rorl
add
out
cmp
mov
shr
fmull
inc
inc
out
inc
cmpsb
cmp
call
pusha
mov
push
add
add
scas
movsl
jo
test
add
push
xchg
and
pushl
movsl
loopne
fiadds
std
jne
movsl
add
xchg
dec
push
mov
add
sbb
add
sbb
call
push
je
lcall
jl
ljmp
sbb
call
cmpsl
inc
add
push
add
andl
jne
popf
sub
test
add
xchg
sub
lahf
adc
inc
call
lcall
lock
out
ret
push
xor
sahf
orb
sbb
inc
iret
dec
pop
push
inc
mov
mov
pop
jbe
je
sbb
rclb
je
movhps
lahf
idivl
ljmp
std
idiv
adc
push
add
inc
add
add
add
adc
lea
inc
dec
or
inc
jb
inc
dec
or
pop
add
call
add
jmp
push
addb
repz
pusha
mov
out
call
jno
cmp
jg
adc
mov
mov
jg
xchg
cmc
lock
stc
into
adc
cmc
lock
adc
sbb
xor
xchg
jle
mov
xor
call
enter
add
cmc
cmp
add
add
inc
or
jmp
inc
or
pop
xchg
je
orl
orb
aam
sub
jmp
leave
std
imul
dec
cmp
int3
add
enter
imul
mov
int
pop
cs
jne
int
pop
add
jl
push
pop
jle
add
inc
add
cmp
jmp
mov
leave
pushl
mov
xchg
jmp
fisttpll
push
test
or
sub
pushl
add
adc
add
add
sbb
lcall
xchg
jne
sbb
push
mov
or
sbb
push
xchg
push
incl
sbb
push
cmp
jne
nop
jae
and
or
ficomps
add
or
jmp
push
clc
call
imul
add
push
nop
jae
mov
mov
pushl
ret
and
pop
add
inc
jo
add
lock
inc
sar
inc
pushf
in
data16
or
jg
dec
ja
nop
dec
sbb
jns
sbb
xor
xchg
fidivs
call
in
insb
inc
subb
or
out
mov
mov
xor
pushl
xchg
orb
out
push
jb
jne
mov
add
xor
sbb
xor
or
xchg
in
jg
or
add
dec
add
sbb
test
call
mov
mov
mov
movsl
xchg
in
addb
xor
mov
mov
call
xchg
jge
adc
lock
bnd
jge
jno
adc
jnp
mov
scas
inc
add
inc
jno
xchg
jnp
inc
stos
xchg
pop
mov
call
test
call
jae
jnp
gs
jl
jmp
jne
add
in
hlt
out
ret
cwtl
ret
fsubr
scas
cmp
adc
cmp
sub
inc
jo
imul
outsb
das
xchg
sbb
jmp
lret
inc
or
or
push
dec
pop
pusha
das
pop
aam
mov
inc
or
xchg
ret
inc
out
call
inc
mov
jp
in
mov
call
adc
add
std
jne
xorl
or
call
mov
mov
jne
popf
xchg
and
pushl
popf
js
cltd
test
jne
add
pushf
jo
flds
push
inc
sahf
xor
std
pop
cmp
mov
insl
dec
cli
push
pop
inc
call
jle
or
cmp
std
sbb
ljmp
mov
testl
add
loope
adc
jo
lcall
push
and
xor
aam
cli
addr16
imul
int3
dec
jg
push
sbb
add
and
dec
cmp
lds
and
pusha
bound
push
scas
xor
pushf
jne
bound
or
push
add
dec
pop
dec
inc
xchg
call
dec
and
and
jp
sarb
clc
mov
inc
or
xchg
cli
loope
cmp
mov
or
out
std
orl
xorl
or
cmpsl
insb
js
or
adc
inc
inc
or
pop
mov
mov
xorl
movsb
and
or
inc
push
mov
leave
sbb
jmp
je
adc
add
roll
pop
or
add
add
lea
jnp
ja
sbbb
xor
imul
repnz
add
xor
add
pushf
mov
je
sub
push
inc
mov
mov
out
test
dec
cmp
mov
test
in
jbe
rorl
mov
repz
inc
sub
mov
mov
add
icebp
sbb
pusha
mov
add
loopne
adc
inc
jmp
lds
hlt
push
popa
in
mov
pop
jg
push
fidivl
pop
or
incl
mov
jne
loop
push
jno
xchg
and
dec
push
inc
mov
notl
loop
push
jno
or
sbb
cmpl
jg
ds
and
add
or
xchg
in
or
jo
push
jnp
call
mov
std
adc
bound
inc
pop
or
std
pushl
or
adc
pushl
inc
filds
inc
xchg
mov
ds
push
nop
jg
into
in
divb
push
cmp
inc
pusha
add
add
scas
sar
movsb
jbe
cmpb
js
push
cmc
push
jg
xchg
incl
shl
mov
call
int3
test
push
call
mov
xchg
sub
notb
hlt
jg
aas
mov
add
jg
jecxz
pop
xor
rorl
fbstp
shll
mov
cmp
popa
mov
shll
jl
xorb
adc
js
je
testb
lret
cmc
mov
jl
jg
lock
fnstsw
mov
rolb
popa
mov
dec
popa
xor
inc
je
mov
sub
sub
sub
sbb
mov
mov
incl
outsb
js
jmp
jo
aam
je
loope
dec
cld
dec
pop
jae
push
pop
jae
push
or
ss
int
inc
sbb
std
sti
adc
dec
or
jg
jmp
jmp
movsb
or
addr16
enter
into
inc
jmp
and
dec
dec
jae
jae
jl
dec
pop
mov
lret
cmc
divl
add
dec
dec
inc
mov
lods
enter
ljmp
arpl
dec
call
insl
lret
ficomps
int3
inc
scas
push
pushl
dec
mov
or
xchg
sbb
scas
push
out
mov
push
test
lods
dec
cmp
std
dec
xchg
sahf
jno
call
daa
enter
jg
addl
mov
dec
std
jne
faddp
dec
mov
xchg
gs
pop
inc
add
jns
call
push
stc
inc
inc
inc
pusha
ljmp
js
fisttpll
repz
cmp
testb
sbb
call
loopne
je
enter
lret
lret
xor
pop
scas
cmc
lret
mov
mov
jmp
add
sub
clc
test
push
add
pop
lahf
stos
lret
clc
sti
les
bswap
mov
cmp
add
inc
add
jg
pop
add
incl
xchg
jb
pop
sub
lret
cmpsl
out
inc
mov
mov
lret
cmp
push
mov
add
inc
or
addb
and
fldl
les
push
sub
ret
sti
out
inc
loope
les
or
sub
cwtl
mov
fildl
jmp
cmc
js
sti
pop
sbb
call
icebp
inc
bound
add
cmp
xor
int
incl
repz
incl
nop
dec
or
jmp
inc
sub
ss
bound
push
insb
ja
jmp
cmp
or
fimuls
mov
push
outsl
jbe
cmp
add
subl
jmp
sub
add
inc
dec
push
insb
xlat
outsl
jmp
in
mov
imul
aaa
pop
sub
fiadds
add
xchg
lcall
lea
pop
std
jne
hlt
jae
loope
mov
pop
add
mov
pop
push
pop
xor
pushl
repz
pop
push
decl
jmp
call
stos
mov
pop
std
jne
pop
imul
and
mov
jb
mov
add
lock
inc
cmp
add
inc
repz
cmpl
pop
test
std
decl
in
jne
lock
inc
dec
int
push
aas
js
imul
inc
scas
js
and
add
inc
cmpsl
out
jmp
jne
sub
pop
mov
dec
or
repz
inc
in
std
call
into
js
inc
xlat
out
not
je
sub
add
ret
cs
pop
scas
stc
sar
jle
enter
push
int3
sti
add
push
jns
ret
dec
mov
push
cmp
inc
inc
or
sbb
or
cmp
insb
test
or
inc
add
add
cmpsb
mov
inc
fucomip
in
cmp
call
jo
jle
outsl
sbb
rcrl
notl
sub
mul
push
add
jmp
ret
fildl
out
stc
lods
js
fldenv
ret
xchg
insb
cwtl
aad
jmp
imul
sub
js
or
js
dec
adc
cmp
mov
push
clc
addb
loope
subb
jb
into
shlb
adc
insb
out
or
pusha
add
pop
imulb
fadd
inc
jmp
cwtl
imul
dec
and
insb
repnz
jle
addl
or
jg
push
pop
xor
out
lea
jo
divb
inc
sti
ret
sbb
fmull
inc
jmp
dec
hlt
xchg
fnsave
pop
repnz
jae
pop
decl
fists
mov
stc
jns
call
fnstcw
std
jne
inc
mov
dec
jns
call
jns
loop
pop
repz
jne
fidivrs
mov
jns
push
call
jns
jns
std
jne
fidivrs
add
imul
std
incl
stos
inc
mov
jne
ja
je
outsl
sarb
jo
je
mov
xchg
imul
push
imul
cmp
pop
hlt
inc
xor
je
das
or
sbb
jbe
or
sti
out
rcrl
inc
mov
mov
les
leave
incb
add
push
mov
je
cmpb
xor
pop
mov
jne
xor
mov
push
dec
xchg
into
mov
imul
inc
sub
inc
inc
sub
inc
push
adc
adc
add
test
inc
inc
stos
pop
inc
xchg
sub
shrb
mov
mov
movsl
out
adc
adc
add
pop
cmp
adc
sub
or
mov
mov
inc
push
das
roll
aaa
js
je
adc
add
adc
decl
mov
pushf
adc
icebp
sbb
inc
push
adc
or
repz
shr
mov
rcll
insb
sar
ficoms
je
add
jbe
rcr
xchg
inc
mov
mov
dec
mov
adc
fmulp
inc
call
jae
inc
xchg
xchg
xchg
inc
jge
xchg
jae
hlt
pop
jo
das
je
mov
xorb
inc
or
cld
enter
pusha
pop
jmp
sti
adc
cwtl
sahf
or
mov
out
inc
out
or
cmp
out
call
add
outsb
inc
out
or
or
bound
jmp
in
mov
inc
add
or
add
and
cmp
inc
push
ret
cld
push
or
lock
popa
fisubrl
mov
xchg
sbb
or
sar
jmp
je
xchg
in
fsubs
loop
out
or
incl
neg
sarb
pop
pop
xchg
mov
jb
adc
jge
stos
call
jle
outsl
fcoms
orb
test
pop
jb
js
pop
out
lods
jno
mov
das
mov
pop
jle
push
ljmp
mov
or
sbb
push
nop
dec
fisttpll
scas
shll
mov
add
roll
inc
xchg
incb
add
pop
sbbl
jno
push
or
cld
sarb
faddp
out
mov
in
push
cmp
gs
fneni(8087
pop
jecxz
and
testl
orb
fcomi
pop
xlat
gs
jo
or
pusha
mov
or
or
call
lods
fs
mov
jno
movb
sub
inc
inc
or
sbb
jle
cmp
adc
sub
inc
or
inc
cmp
add
inc
or
movsb
push
arpl
jmp
inc
out
call
inc
xchg
inc
xor
pop
arpl
cltd
pop
es
pusha
out
das
or
loop
fadds
ret
or
jmp
inc
fs
add
cld
and
call
repz
fsubs
cmp
xchg
test
sbb
mov
arpl
fmul
jmp
cwtl
arpl
mov
push
fdivr
call
cmp
dec
adc
cmc
ljmp
jae
jbe
inc
lcall
out
in
adc
std
push
aas
aas
dec
filds
pushl
add
imul
call
xchg
out
pop
hlt
mov
into
aas
dec
dec
lahf
pop
pushl
imul
call
nop
loop
sbb
push
inc
push
hlt
mov
icebp
repz
jmp
out
popa
repnz
mov
xchg
incb
fiaddl
call
sbb
add
outsb
cmp
add
subb
enter
shrl
mov
outsb
test
adc
out
mov
cwtl
fstpl
nop
sub
aaa
clc
mov
cmp
mov
sti
insl
jo
adc
mov
and
insb
mov
inc
insb
decb
adc
xchg
xor
cmp
divb
dec
insb
je
cmp
aas
and
mov
sbb
cmpsb
insl
add
or
lock
jbe
xchg
insl
stc
fwait
mov
icebp
popa
nop
loope
bound
fwait
pop
jge
fnstenv
rcl
gs
pop
pop
insl
test
test
pop
mov
cmp
jne
popa
inc
xor
shrl
insl
xorl
js
mov
imul
push
inc
or
inc
cmp
cmp
pop
test
inc
mov
jb
lds
mov
inc
push
leave
inc
jmp
add
pop
xchg
icebp
or
lods
leave
call
inc
or
imul
insl
arpl
pop
push
cmc
and
pop
jge
add
xchg
xchg
jmp
or
mov
mov
push
mov
popf
mov
addb
cltd
enter
aam
adc
aam
notb
call
mov
or
xor
je
lods
xchg
push
dec
scas
dec
hlt
jae
loope
push
call
and
push
add
test
or
sub
std
pop
fimuls
push
xor
push
inc
add
mov
bnd
adc
call
pushl
int3
ljmp
or
jne
ret
iret
inc
popa
hlt
dec
mov
loop
hlt
pop
hlt
std
push
int3
ret
mov
test
fdivr
incl
inc
jmp
addr16
aaa
scas
xlat
cmp
mov
pop
sbb
mov
add
sbb
incl
mov
idiv
ja
je
mov
add
call
xlat
imul
jg
add
xchg
enter
mov
mov
out
imul
mov
call
enter
out
pop
outsl
sub
jo
jg
jo
push
inc
js
inc
push
jo
mov
push
push
cld
sub
imul
ja
cmp
mov
call
imul
and
stc
imul
lea
loope
cmc
fadd
fwait
test
pop
call
pop
mov
rol
inc
outsb
mov
stc
push
cmp
cmp
imul
pop
push
pop
jno
adc
push
sub
imul
jnp
jno
scas
fistps
pushf
mov
fisubrs
pop
push
push
jno
add
pop
je
push
mov
aad
shll
iret
xchg
outsl
pop
lcall
icebp
add
sahf
cld
xor
imul
xchg
rcrl
pop
aam
jno
adc
pop
aam
pop
mov
pop
pop
ds
add
xor
es
arpl
pop
hlt
push
decb
or
aas
add
std
mov
fscale
incl
lcall
mov
and
std
call
sbb
out
outsb
in
call
mov
std
mov
jmp
call
xor
inc
clc
out
sti
dec
jecxz
cld
mov
adc
ficomps
or
add
cmp
push
inc
dec
call
in
mov
jecxz
jne
aas
jbe
filds
pushl
push
test
lcall
jae
inc
mov
inc
push
jb
add
and
pop
gs
push
fsubl
shrb
xchg
andb
add
inc
add
inc
mov
xchg
pop
pop
xor
subb
ret
dec
cmp
cmpb
hlt
shlb
js
adc
stc
mov
loope
gs
pop
cmp
add
mov
push
mov
inc
gs
lahf
aam
decl
or
add
pop
cmpsb
addr16
pop
or
lock
pop
jae
push
aam
pop
xor
mov
add
jns
xchg
and
lock
ficomps
gs
loop
mov
mov
call
ret
push
inc
push
add
pop
test
ror
out
inc
jno
fbstp
pop
dec
fsubl
mov
call
jo
call
push
add
pusha
pop
pushf
insb
popa
cmpsb
int
pop
enter
push
jb
xchg
cmc
jp
imul
cmp
sbb
lahf
xorl
lret
popa
shlb
dec
mov
jmp
mov
xchg
jmp
inc
mov
sbb
pop
decb
add
dec
outsb
mov
call
push
jnp
call
add
or
push
jne
add
cli
xor
std
call
lock
jbe
jae
and
fistl
xchg
in
std
pop
mov
roll
mov
fstl
sti
push
test
in
jae
push
enter
xchg
movsl
repnz
sub
mov
sahf
sub
je
gs
das
or
push
lret
jb
sub
xor
add
jmp
push
fiadds
ficomps
and
in
out
push
in
std
jmp
popa
enter
xlat
stc
add
push
ror
arpl
mov
mov
dec
popf
popf
repnz
mov
push
and
add
fisubrl
mov
fidivs
je
or
cmp
jo
inc
xor
popa
je
dec
rcr
add
sbb
je
cwtl
xlat
pop
pop
sbb
incl
stos
inc
add
jmp
lods
pop
push
pop
test
aam
add
dec
inc
shll
add
xchg
dec
push
pusha
popa
je
or
aas
ret
and
imul
nop
fdiv
imul
bound
call
lret
sbb
sbb
push
dec
pop
or
call
sbb
add
bound
push
mov
inc
or
mov
loope
cmp
std
enter
orb
inc
or
pusha
xchg
add
les
or
xlat
aas
dec
sub
or
add
testl
loope
enter
push
jmp
dec
pop
push
jle
mov
mov
mov
add
inc
or
ss
add
jmp
ret
cltd
call
mov
call
inc
ret
cmpsl
sbb
out
dec
push
mov
loope
and
and
push
or
out
addr16
jb
push
pop
mov
or
aas
repz
fisubrl
inc
push
jno
std
mov
add
pusha
jle
pushf
pop
mov
mov
movl
and
or
mov
mov
insl
into
mov
fadds
rcll
data16
dec
idivl
push
or
cmp
jmp
ljmp
push
xor
leave
faddl
add
flds
xor
dec
testl
add
add
pop
add
add
mov
or
js
inc
bound
je
jp
xor
fimull
and
pop
mov
mov
add
xchg
pop
je
jno
xchg
and
cli
sub
add
fisubrl
repz
pop
adc
add
and
pusha
pop
je
or
pusha
or
mov
cltd
add
add
xchg
cmp
add
add
dec
rorl
mov
enter
or
pop
jbe
stos
pop
loope
loopne
sub
mov
add
and
enter
add
jmp
push
or
dec
popa
ret
push
dec
fmuls
xor
mov
add
or
dec
xchg
imul
inc
and
adc
inc
inc
or
fadds
js
inc
push
sub
add
sub
hlt
enter
dec
adcb
pop
fisttpll
mov
rol
hlt
jnp
incl
sar
push
popa
fnclex
mov
test
addr16
jmp
imul
daa
inc
shl
mov
pop
inc
adcl
add
inc
inc
incb
pop
push
je
sbb
incb
mov
call
fmull
es
mov
jmp
inc
push
je
fsubr
mov
pop
cmp
xchg
add
pop
inc
fs
stc
or
mov
test
add
cmc
imul
cmp
or
push
push
xchg
and
or
add
xchg
cmp
roll
jne
loope
mov
lods
std
or
aaa
add
dec
scas
jae
idivb
shlb
and
lret
add
xchg
xorl
ja
inc
lds
ror
cmp
outsb
pop
jb
jno
lcall
jmp
add
add
add
sub
aas
adc
add
aaa
inc
inc
aaa
pop
je
add
rolb
pop
add
add
je
xchg
rorb
lock
call
dec
mov
pop
lcall
push
enter
test
push
int3
test
addr16
enter
xor
ret
cwtl
or
out
lcall
andb
add
mov
mov
movsb
data16
fisttpl
mov
push
push
lcall
add
lret
jne
ffree
jmp
or
xor
pusha
test
jmp
add
sub
push
push
add
jne
sub
call
pusha
dec
or
add
lds
mov
pop
adc
pop
cmp
int3
push
add
add
mov
dec
popa
cmp
add
sbb
pop
dec
xor
add
std
and
negb
add
or
outsb
xchg
out
rorb
sarb
ljmp
or
xor
push
xor
sub
mov
mov
call
mov
mov
arpl
ljmp
mov
jb
mov
dec
insl
dec
ss
in
cmpsb
mov
sti
add
inc
dec
fisubs
inc
jmp
and
jmp
in
dec
mov
pop
dec
or
dec
test
insb
pop
dec
es
incb
shlb
incb
cmpl
aaa
cmp
mov
aaa
xor
mov
dec
popf
cld
stc
cwtl
data16
cld
incl
add
or
xorl
std
decl
mov
movsb
mov
hlt
pushl
lret
mov
sbbl
jo
sub
stc
mov
mov
mov
and
decl
or
add
add
sbb
std
pushl
push
das
incl
or
cmp
pop
incl
cmpl
add
in
jmp
bound
ja
incl
inc
bound
dec
bound
or
pop
jle
inc
bound
cmp
push
fstpt
fsubs
dec
cmp
xor
inc
inc
aad
sarl
or
inc
fistpll
or
stos
push
test
xchg
mov
or
repnz
stos
add
das
or
push
push
dec
mov
push
shll
cmp
mov
cli
mov
sub
mov
inc
out
sbb
aad
js
test
add
cmpb
push
jmp
dec
movsl
push
loopne
fsts
test
adc
or
mov
or
lds
dec
imul
xchg
pop
push
push
or
add
dec
inc
push
loopne
adc
jo
call
inc
dec
mov
repnz
adc
xchg
mov
dec
dec
dec
inc
push
std
notb
dec
sti
sbb
dec
icebp
xchg
add
fs
dec
inc
mov
enter
jmp
xchg
in
or
mov
add
mov
or
sbbl
jg
add
fnsave
data16
jo
pop
addr16
inc
or
inc
mov
adc
dec
jle
clc
in
mov
xchg
ljmp
jae
mov
call
mov
mov
or
add
and
cli
inc
push
dec
incb
add
out
out
add
fidivs
add
xor
push
mov
inc
jmp
repnz
movsl
int3
jae
rcll
mov
or
push
xor
jnp
out
xchg
or
or
into
or
dec
rorb
mov
fs
add
fnsave
call
out
xor
call
inc
shlb
imul
mov
lcall
dec
xor
push
scas
cld
mov
repz
jo
incl
add
repz
into
push
inc
xor
jmp
ja
sti
outsl
les
neg
in
inc
mov
or
fidivrs
push
inc
xor
mov
or
test
divl
nop
or
loop
hlt
sbb
add
add
or
js
mov
loopne
inc
pusha
mov
push
mov
dec
push
inc
fwait
push
sub
push
cmp
dec
sub
mov
sub
mov
pop
or
aad
dec
fisttpll
rcrb
clc
mov
mov
jmp
dec
outsl
push
flds
push
mov
xchg
test
jg
mov
xchg
gs
or
outsb
roll
aad
mov
nop
adc
jmp
or
enter
out
cmp
inc
push
cmpl
hlt
xor
jmp
mov
jmp
inc
or
je
ds
push
inc
mov
inc
inc
inc
je
xchg
sbb
or
out
dec
or
push
shlb
imul
lock
sbb
jg,pn
pop
inc
mov
arpl
mov
jl
jne
fdivs
inc
or
jne
fcoms
int3
cmp
or
popa
sub
mov
dec
out
push
int3
fcoms
rorb
decb
cs
sbb
test
add
pop
out
call
and
fnstenv
push
sbb
add
add
fidivl
inc
inc
xor
sub
jae
notb
push
add
vcvtps2dq
mov
shrb
loope
out
shlb
popf
flds
add
sbb
push
dec
daa
push
xor
je
scas
or
add
sub
decl
ja
ret
dec
adc
sbb
mov
out
push
incb
add
add
inc
cwtl
add
sbb
idivl
arpl
mov
stc
push
and
dec
dec
adc
pop
lea
add
pop
arpl
push
shll
out
or
add
test
add
arpl
inc
test
or
or
jbe
cltd
fsubrs
add
je
gs
mov
bound
inc
dec
dec
cmp
or
add
cmp
ret
xchg
call
cmp
sbb
add
add
dec
or
cli
call
inc
arpl
sbb
sbbb
jmp
clc
add
daa
add
dec
push
lods
icebp
mov
push
add
mov
add
jmp
or
cmp
xor
inc
or
test
add
inc
mov
std
push
or
call
sbb
jg
out
inc
or
outsl
cmp
push
inc
or
adc
je
pushf
push
test
xchg
jge
testl
inc
fiadds
add
inc
out
aas
or
add
pop
leave
lods
jns
in
insl
rcr
push
xchg
in
fmulp
jo
in
roll
add
mov
inc
scas
add
pop
leave
inc
cld
sahf
add
testb
add
lcall
movl
int3
inc
lock
add
out
push
mov
repnz
add
mov
int
inc
inc
jne
add
xchg
fisttps
inc
testb
addl
add
inc
aad
shl
dec
sbbb
je
stos
lods
neg
daa
dec
jb
lcall
cmpsl
psubsb
dec
decb
and
in
imul
dec
je
scas
ret
pop
data16
add
es
xor
jnp
call
xor
addl
jmp
xchg
xchg
mov
dec
adc
jg
incl
insl
dec
jmp
xor
sbbl
or
add
leave
cld
or
icebp
mov
dec
push
cltd
push
vzeroupper
out
inc
or
cmp
lds
sbb
xchg
inc
dec
lea
les
std
pushf
sbb
or
rolb
sub
pop
or
ja
inc
or
arpl
cmp
les
mov
dec
mov
mov
cmp
inc
pop
inc
or
inc
mov
adc
inc
or
inc
cmpl
pop
push
inc
dec
push
dec
mov
ficoms
or
jge
add
negl
sub
add
shlb
or
cmp
pop
sub
mov
aas
jb
or
add
inc
fsin
cld
or
cli
cwtl
cmpsb
jmp
inc
or
mov
push
out
add
jns
jae
add
sti
jmp
xchg
roll
ss
imul
aaa
pop
sub
popf
xor
je
mov
dec
shr
xor
add
dec
imul
jp
lcall
and
enter
or
add
cli
push
test
sbb
and
in
or
add
jge
and
icebp
ljmp
rolb
push
push
arpl
add
outsb
enter
or
add
jle
add
add
mov
add
lea
jne
jne
or
rolb
subb
iret
repz
xchg
aas
inc
repz
add
inc
xorb
inc
xor
jmp
in
xor
add
pop
imul
out
jl
inc
sub
add
in
mov
inc
pop
sbb
xor
add
scas
ds
incb
add
mov
je
fisubrl
je
lret
inc
xor
xchg
push
lods
testl
or
loopne
cmp
mov
jmp
inc
jae
or
add
sub
leave
call
inc
outsb
or
xor
ljmp
inc
fnstenv
inc
xor
lret
add
push
add
les
or
fdivrl
les
cmp
cmpsl
das
lret
xor
cmpsl
add
adc
mov
push
push
or
mov
in
pop
cmp
mov
push
push
enter
add
push
addl
push
andb
add
pop
call
repnz
test
dec
sub
add
inc
mov
call
xor
decb
add
add
dec
xchg
push
sbb
dec
xor
inc
or
test
xchg
iret
inc
jmp
add
stc
lods
leave
call
push
incb
add
add
adc
push
cmp
sub
push
mov
add
add
jb
std
push
fidivrs
add
push
add
sub
addr16
fidivrs
add
push
inc
adc
call
out
add
std
incl
shl
icebp
fcoml
cmc
loope
out
fcmovnb
std
adcl
je
sub
add
adc
rolb
imul
inc
pop
push
add
add
inc
mov
pop
lret
pop
inc
incb
dec
jno
jecxz
out
and
add
sbb
sbb
and
inc
decb
or
sub
jmp
push
add
inc
push
sbb
ljmp
out
inc
inc
dec
sbb
jmp
stos
inc
inc
addr16
ljmp
stos
inc
inc
lahf
sbb
loopne
jmp
test
js
loopne
ljmp
es
push
shlb
stos
pop
or
iret
shlb
stos
pop
or
push
xlat
shll
stos
xchg
push
push
iret
shll
stos
xchg
push
push
out
cmpsl
add
out
dec
stos
xchg
out
sbb
lock
mov
xchg
jmp
add
fsubr
jl
xchg
mov
add
in
insb
fldl
or
add
in
lods
fldl
or
add
in
lods
fldl
or
jbe
inc
pop
sub
and
xchg
enter
pop
pop
test
cmp
pop
push
pop
test
cmp
cs
pop
test
ss
or
call
inc
ss
add
repz
std
pop
aas
pop
test
ss
sbb
jmp
fbstp
pop
sub
and
add
dec
out
push
pop
sub
and
ljmp
sub
and
xchg
leave
lcall
dec
ss
jp
dec
and
pop
pop
or
aas
add
and
pop
lahf
or
and
stc
and
pop
scas
or
and
add
or
cmp
or
and
imul
jmp
dec
and
fisttps
jmp
stc
sub
jmp
or
bound
or
aas
add
cs
pop
or
aas
add
sub
jmp
inc
lahf
out
std
loopne
ljmp
fldl
mov
popl
add
inc
inc
scas
out
or
mov
out
in
pusha
add
and
stos
popf
popa
add
push
fldl
adc
mov
popa
add
fcmovu
inc
inc
or
mov
sub
fldl
and
ret
loope
jmp
jp
inc
inc
pop
in
jge
add
sub
in
sbb
add
faddl
or
dec
mov
fs
lock
or
add
or
jmp
add
xor
mov
inc
or
pop
inc
mov
ret
or
jmp
cmp
lock
or
add
leave
orl
call
add
mov
add
add
lock
or
add
or
add
orl
inc
or
hlt
inc
pop
add
xchg
mov
stos
dec
or
or
jno
jmp
inc
idiv
loopne
or
in
pop
add
inc
inc
add
inc
or
jmp
cmp
add
push
or
cld
inc
jmp
mov
sub
add
or
xchg
dec
jno
jmp
inc
hlt
ljmp
or
jl
add
inc
inc
add
cmc
inc
cmp
inc
or
out
dec
mov
lahf
enter
lea
add
push
pushl
jg
adc
push
add
scas
inc
lds
xchg
push
add
testl
mov
or
outsb
jp
mov
sar
jle
rcrl
and
subl
jae
mov
push
add
push
mov
fmulp
jg
sbb
add
out
add
add
fidivrs
sbb
add
addl
mov
and
add
imul
inc
and
mov
add
das
push
add
mov
inc
and
mov
inc
std
xchg
out
mov
jns
xor
lret
xlat
and
adc
aas
and
mov
rorb
xchg
inc
leave
pop
add
and
add
and
add
add
clc
pop
add
inc
or
xor
out
dec
adc
mov
test
push
inc
or
inc
or
mov
test
inc
or
mov
adc
add
pop
jp
add
clc
pop
inc
or
xor
jmp
dec
dec
pop
sub
push
out
push
mov
fadds
int3
pop
inc
or
inc
or
cmp
xchg
jmp
in
inc
or
jmp
dec
orl
jp
shll
add
mov
test
jo
pop
add
inc
leave
mov
add
paddsw
jo
add
pop
jle
aam
int
call
or
orb
test
add
jmp
shll
xor
stos
and
rorb
test
push
mov
push
mov
or
add
sub
je
cmp
hlt
sbbl
test
cmp
shr
add
pop
data16
jns
pop
pop
push
pop
ret
mov
push
push
adc
cs
lcall
cld
or
scas
add
add
push
mov
adc
test
jg
sub
lcall
mov
jae
lods
mov
add
or
jne
jle
adc
or
mov
and
mov
incl
cmp
add
orb
and
mov
push
jmp
outsl
jecxz
shrl
call
test
aaa
test
add
sbb
inc
popf
cmp
mov
pop
add
and
mov
das
incl
and
inc
mov
and
add
movsl
sbb
and
iret
push
add
mov
add
into
or
inc
or
ret
mov
sub
jmp
push
sub
adc
add
out
inc
enter
cmp
jmp
cmpl
and
mov
or
adc
jmp
add
loopne
jle
cmpsl
mov
xlat
jno
push
andb
mov
sub
push
sub
dec
lds
ljmp
sub
test
or
sahf
mov
add
inc
dec
shl
mov
push
inc
jnp
in
or
jb
sti
add
inc
addb
lret
in
or
jmp
inc
or
stos
mov
add
mov
add
pop
in
or
loope
add
inc
addb
loope
add
add
inc
jg
jmp
sub
mov
inc
sub
add
or
jmp
pop
inc
mov
add
push
jle
adc
pop
add
out
orb
dec
repz
push
add
jle
adc
push
add
scas
inc
xchg
aaa
lods
push
add
push
mov
fisubs
decl
ljmp
or
xchg
push
stos
push
add
push
inc
mov
adc
outsb
jge
adc
add
inc
and
inc
lret
inc
and
add
and
add
and
mov
das
incl
cmpsl
jl
inc
and
shlb
and
cmpsl
jl
inc
and
mov
pop
add
add
inc
loopne
lods
arpl
add
cltd
adc
and
add
pop
test
add
lock
mov
push
cmpsl
xor
pop
add
hlt
dec
jg
inc
das
or
leave
inc
lcall
pop
push
add
out
aam
dec
jecxz
push
adc
clc
lret
add
repz
push
push
inc
xor
testb
jmp
or
add
scas
inc
loopne
lcall
and
xor
xchg
scas
mov
xor
cmp
sub
push
adc
aad
dec
lock
xor
cmp
or
cmp
sbb
add
push
add
inc
or
jmp
push
xor
push
add
jae
mov
pop
clc
cli
jae,pt
int
pop
and
cs
lret
and
mov
or
and
pop
jno
sub
pusha
mov
pop
inc
mov
add
daa
add
mov
cmp
xchg
test
inc
or
pusha
int
add
inc
leave
mov
or
paddsw
addr16
or
pop
movsl
push
add
or
sbb
or
jne
test
adc
add
cs
xchg
mov
push
add
or
add
mov
pop
pop
pop
subl
mov
enter
mov
adc
out
or
add
add
fisubs
add
sahf
pop
push
addl
cli
xor
add
cmpsb
int3
call
dec
cmp
inc
jb
inc
jnp
add
push
in
out
fwait
add
xor
mov
stos
inc
out
mov
iret
pop
add
pop
or
inc
xor
add
sub
jae
mov
and
mov
sub
out
inc
xor
sub
fsubrs
xor
mov
xor
sarl
add
push
and
push
add
or
inc
or
jp
in
in
add
sub
xchg
jmp
jno
or
fbstp
inc
or
jp
add
add
pop
bound
add
or
add
xor
ljmp
arpl
pop
inc
or
inc
or
cmp
adc
jmp
add
outsb
or
jmp
out
or
mov
nop
ljmp
add
push
xchg
scas
and
sahf
add
mov
fmull
add
inc
or
pusha
mov
add
add
inc
mov
imul
or
sub
push
jb
sub
inc
push
and
or
cli
jmp
dec
repnz
int
mov
jmp
int
inc
lds
int
mov
pop
sub
clc
out
ret
pop
cmp
dec
pop
jmp
inc
or
cmpsl
sahf
test
stos
pop
add
sahf
inc
xchg
add
testl
add
into
sub
mov
pop
adc
xchg
add
xlat
mov
add
pop
inc
mov
stc
add
push
cmpsb
test
sbb
add
cs
mov
jecxz
aam
repnz
pop
mov
pop
ret
mov
lea
xchg
jge
add
push
jbe
push
movsl
or
add
ret
xchg
add
add
xor
ret
icebp
mov
fwait
and
push
int3
adc
pop
adc
dec
mov
jl
and
pop
sub
jmp
dec
xor
add
popa
decl
sbb
rorb
add
shll
add
jp
mov
pop
adc
add
inc
jne
add
inc
ljmp
add
in
sub
cli
add
std
mov
or
jne
or
rorb
add
mov
dec
or
fdivr
fcmove
out
cld
jp
js
or
add
cld
subb
ja
dec
or
add
adc
add
data16
jmp
add
jmp
or
add
in
mov
inc
or
pop
dec
add
xchg
sub
and
and
push
add
or
call
je
mov
lock
adc
idivb
xor
add
xchg
bound
mov
movsb
or
jmp
mov
sbb
jl
rorb
lcall
cli
std
pop
lea
mov
or
jmp
lret
jmp
dec
hlt
testl
and
inc
xor
cli
arpl
mov
add
les
adc
sub
add
or
add
fimuls
mov
push
fldl
dec
inc
inc
or
add
add
stc
add
xor
decb
insb
or
add
cmp
mov
mov
cmp
dec
and
dec
pop
sahf
out
sbb
es
and
cmp
pop
add
fildll
fdivs
sahf
dec
and
lahf
push
inc
fmuls
mov
das
pop
and
pop
inc
push
inc
popa
jge
ffreep
sub
and
add
fwait
iret
and
adc
out
sub
insb
cmp
imul
adc
mov
add
rorb
or
test
mov
jne
test
mov
lcall
rclb
cmp
in
sub
int3
pop
fimuls
int3
mov
inc
imul
dec
mov
sub
add
mov
mov
or
jle
dec
inc
push
jmp
adc
jb
and
outsl
iret
and
pusha
and
pop
add
out
jl
in
mov
pop
or
xchg
jmp
add
add
inc
call
push
xor
jno
mov
call
scas
test
in
add
cli
imul
add
test
sub
push
cld
iret
int
or
mov
add
int
or
int3
int
or
mov
add
rolb
lret
xor
push
call
lock
xlat
mov
sub
or
test
pop
mov
pop
jmp
sbb
iret
adc
jae
add
std
test
in
inc
or
cld
add
inc
xchg
stc
pusha
sbb
inc
ds
in
push
pop
push
push
out
pusha
fadds
inc
push
xchg
popf
or
test
cmp
add
add
mov
mov
aas
enter
adc
adcl
movl
addr16
mov
xchg
sbb
add
or
mov
and
push
daa
divb
shrb
daa
pop
or
add
add
push
add
test
add
add
pop
int
mov
jmp
pushf
test
pop
add
inc
xor
inc
sub
add
xor
int3
mov
jns
add
push
and
add
xor
into
insb
ficomps
mov
add
inc
adcb
inc
xor
mov
add
mov
cltd
and
push
inc
push
leave
pop
std
js
mov
jo
add
xchg
jmp
inc
mov
imul
adc
jmp
in
ror
jb
lcall
sbb
shlb
jp
in
rcll
stc
imul
xchg
call
std
xchg
adc
lods
int3
mov
mov
mov
fldt
mov
jbe
add
cmp
testl
mov
orl
inc
ljmp
popa
jle
add
int3
cmova
jmp
int3
sbb
popa
push
or
outsl
adc
int
adc
lea
inc
or
adc
xor
xor
adc
push
mov
inc
pop
testb
rol
negb
add
inc
test
lods
aad
jecxz
or
pop
add
sub
add
inc
decl
add
jl
pop
add
or
add
inc
test
mov
xchg
cmc
push
addl
fistl
push
sbb
mov
dec
mov
repz
test
xor
mov
xchg
inc
and
inc
jp
xchg
mov
inc
imull
in
mov
xchg
mov
dec
push
gs
das
add
shr
std
mov
or
mov
xchg
in
cli
xor
push
ret
mov
cmp
into
jbe
idiv
mov
mov
mov
and
push
cs
call
pop
dec
cmp
out
test
loope
and
and
out
sbb
imul
inc
and
imul
arpl
int3
insb
out
xchg
jno
int
scas
sbb
call
stos
cmp
ja
push
out
push
and
jl
mov
js
pop
mov
out
inc
and
add
aas
xchg
dec
pop
aam
inc
adc
mov
in
and
sahf
je
cmpsb
and
xor
and
cmp
push
jge
add
mov
sarb
icebp
out
mov
pop
and
popa
mov
or
or
or
call
lahf
and
call
add
sbb
inc
or
and
jno
xor
jmp
mov
dec
ljmp
les
testl
or
dec
int
in
int
decl
add
xchg
and
sarb
push
cmp
inc
out
xor
rorb
or
bound
loop
inc
cmp
bound
inc
add
jne
lret
adc
and
sbb
cmp
leave
sub
add
ret
mov
loopne
lods
mov
add
out
in
cmp
in
cmp
inc
out
adc
std
push
iret
mov
push
push
in
out
lret
jmp
mov
insl
or
addl
add
cmc
add
or
aam
or
mov
sub
mov
sub
test
add
push
lea
add
mov
and
push
mov
add
push
scas
idiv
inc
test
incb
and
xor
push
xor
fbld
cmc
mov
ret
xchg
out
inc
xor
out
pop
popa
jl
gs
add
int3
imul
jne
cli
into
mov
into
in
sub
pop
decb
dec
mov
and
push
mov
xor
add
int3
inc
call
mov
add
pop
sub
and
add
inc
lods
push
jne
daa
inc
jnp
xchg
mov
pop
push
mov
add
push
repz
int3
insb
out
adc
int
mov
and
test
add
push
fs
call
add
sbb
adc
add
movsl
add
mov
add
bound
sbb
into
movsl
xchg
inc
jle
mov
int3
negl
mov
loopne
jle
mov
sub
sbb
aas
xchg
add
jbe
popa
mov
fsts
loopne
adc
out
mov
pop
rcll
inc
int
dec
mov
in
jb
in
jo
in
pusha
add
iret
in
bound
nopl
jmp
mov
jg
add
adc
xchg
cmp
xchg
outsb
inc
push
pop
loop
jmp
pop
outsl
and
inc
or
mov
int3
and
sarl
icebp
pop
sub
push
lcall
out
push
paddd
in
and
mov
dec
int
mov
sbb
add
mov
xor
pop
mov
inc
lods
icebp
ljmp
or
mov
and
fldl
inc
jmp
sbbl
jbe
test
or
jne
mov
xor
cmp
xor
jl
mov
add
sub
add
jl
or
add
or
push
dec
mov
add
in
repz
jmp
pop
gs
and
push
fldcw
xlat
pushf
pop
mov
inc
or
enter
imul
out
inc
xchg
and
push
stos
mov
push
lods
not
mov
scas
xchg
adc
nop
repnz
and
add
cmpsl
out
add
scas
push
pop
stos
dec
out
jb
dec
fstp
daa
cli
rorb
out
xor
add
ljmp
inc
jmp
or
inc
and
incl
incl
xor
xchg
call
or
mov
lret
sbb
jecxz
ja
inc
push
cltd
mov
aas
adc
mov
or
add
cld
lcall
cmc
pop
and
lods
jmp
insl
mov
mov
mov
mov
sbb
push
movsl
add
cmc
in
inc
jl
stc
dec
and
mov
mov
mov
hlt
in
inc
adc
pop
subb
movb
or
in
mov
hlt
in
inc
or
sarl
out
sub
stc
add
inc
test
fiadds
call
cwtl
incb
add
jmp
lret
add
scas
mov
mov
ja
ljmp
jmp
mov
inc
paddd
mov
xor
pop
adcb
mov
jb
and
js
or
and
mov
lock
cs
les
call
mov
mov
xchg
dec
sub
mov
push
push
mov
call
xor
push
mov
and
icebp
std
cmp
jae
mov
cmp
sub
add
pop
add
add
pop
or
or
andl
jge
pop
je
adc
je
pop
push
mov
fsubr
pushl
jge
and
add
or
lcall
or
push
lcall
decb
lds
inc
and
inc
mov
fiaddl
cmp
pop
inc
add
test
and
add
adc
bswap
sahf
add
inc
xchg
and
rorl
push
int3
imul
imul
push
adc
dec
add
pop
fcmovb
add
shl
mov
cmp
test
add
mov
cmpl
inc
and
in
adcb
aad
dec
or
add
jecxz
stc
push
mov
inc
loopne
aaa
pop
loope
idivb
shrl
lock
popf
repz
sarl
add
pop
mov
xchg
shrl
inc
jle
loopne
add
jl
pop
pop
mov
inc
pusha
add
push
jno
cmp
adc
out
inc
or
ss
jae
push
or
add
cmp
or
fxtract
in
inc
or
mov
sub
lds
call
inc
jl
loopne
lock
add
pop
in
inc
or
ret
jmp
enter
add
inc
repnz
inc
jg
jmp
or
jno
or
je
jle
stc
nop
or
jo
repnz
inc
leave
mov
add
pmulhw
outsl
arpl
add
inc
imul
inc
or
iret
mov
add
or
add
cs
mov
or
call
or
incl
add
in
mov
and
add
out
xchg
sbbl
or
add
add
scas
icebp
int3
rorb
xchg
and
xchg
xchg
adc
jmp
adc
or
dec
inc
mov
int
mov
adc
lods
rcrl
inc
xor
xchg
cmp
mov
sub
cmp
mov
add
mov
shr
xchg
mov
mov
adc
inc
je
jno
sub
add
mov
repnz
inc
repnz
mov
repnz
mov
repnz
mov
repnz
shlb
fidivl
add
testb
test
mov
jl
stos
inc
or
cmp
and
call
mov
sarl
jo
pop
add
add
mov
inc
mov
test
lret
js
push
jne
enter
test
fdivs
inc
jl
jl
pop
addl
push
inc
xchg
fcomi
ret
sub
in
notl
addl
notl
jno
call
test
xor
leave
add
and
nop
inc
aam
mov
repz
cmp
nop
sub
add
jmp
ret
test
xchg
xor
roll
int3
repnz
mov
repz
add
cmp
nop
stos
roll
popf
jae
push
mov
lahf
mov
add
xchg
add
js
aas
jmp
aaa
pop
out
push
mov
daa
test
add
sub
mov
jmp
cmpb
mov
sbb
aas
adc
push
mov
pushl
sbb
daa
or
add
add
pop
mov
mov
in
sub
fimuls
push
push
leave
test
mov
add
addr16
add
test
orl
jecxz
and
or
add
pop
or
or
out
or
mov
inc
imul
aaa
roll
inc
repnz
out
inc
out
mov
addr16
add
popa
repnz
inc
mov
or
testb
lods
jl
mov
lock
repnz
ljmp
xor
add
push
rorb
xor
aam
les
add
mov
repnz
push
les
inc
lds
dec
pop
test
bnd
into
stc
test
inc
outsl
inc
add
testl
xchg
add
jb
jecxz
int3
dec
or
lods
mov
lds
out
jl
mov
test
sbb
dec
jns
inc
inc
or
mov
adc
pop
sbb
or
add
xchg
lods
or
or
sbb
out
jl
dec
mov
adc
mov
dec
add
mov
enter
add
adc
and
xchg
push
dec
enter
verr
xchg
mov
test
or
repz
ja
pusha
add
adc
jo
inc
or
ror
ja
lock
loop
xchg
or
inc
or
icebp
sbb
adc
icebp
inc
push
mov
add
call
ljmp
sub
popa
dec
dec
mov
sub
jno
dec
xchg
adcl
jmp
lods
dec
in
push
or
in
es
in
testb
mov
mov
in
sub
push
xor
or
orb
cmp
jmp
add
fmul
or
mov
sbb
xor
test
cmpl
fmuls
fistps
mov
pop
pop
pushl
xor
xor
cmp
inc
loope
mov
sbb
adc
decl
enter
and
mov
aad
idivb
jo
and
jns
or
xor
jns
adc
in
loopne
xor
gs
mov
jae
add
cmp
or
add
into
cs
out
dec
imul
addb
rcrb
adc
mov
xchg
ret
or
test
or
add
jecxz
pop
or
add
xchg
in
subb
ss
push
dec
out
cltd
leave
into
repnz
out
add
or
push
inc
push
sub
jne
jge
mov
jmp
jns
rcll
push
sub
je
jge
leave
xchg
add
out
add
or
push
inc
push
sub
fisubrs
sbb
inc
or
out
mov
mov
inc
jmp
add
or
jmp
hlt
dec
add
push
xchg
sub
xchg
add
add
cmp
stc
jo
mov
in
sbb
pop
shl
bound
decb
push
inc
adc
jo
leave
in
out
out
jmp
cmp
jmp
ss
lea
bnd
dec
sub
jae
add
mov
subl
es
mov
inc
adc
sbb
roll
add
movsl
pop
add
xchg
pop
and
cmpl
mov
mov
inc
out
push
pop
sub
add
or
dec
sbb
dec
xchg
cmpl
test
xchg
dec
fstpl
out
shr
add
cmpsl
dec
or
mov
xor
mov
and
pop
cmpsl
stos
ljmp
xor
xchg
xor
rcl
rolb
rcll
and
push
add
inc
and
mov
xor
push
xor
push
dec
push
xor
xor
mov
xor
xchg
hlt
xor
inc
andb
mov
add
mov
movl
repz
push
inc
add
add
inc
loop
add
pop
dec
ja
pop
mov
imul
and
or
jae
loop
test
or
outsl
pop
or
inc
cmp
mov
push
inc
or
jo
mov
or
cld
mov
repnz
dec
and
test
or
setge
push
test
repnz
or
adc
mov
ret
push
fbstp
popa
sti
aas
orb
js
add
sbb
cld
mov
test
sbb
cmp
nop
or
sti
jg
dec
out
addl
sbb
std
jle
jne
add
dec
call
ret
pop
sub
add
cli
push
pusha
es
stc
xchg
push
mov
inc
clc
cltd
cmc
loop
xor
mov
push
call
sbbl
inc
clc
cltd
sub
cld
testb
popf
cmp
sub
dec
call
bound
xchg
inc
vsubsd
push
inc
dec
aas
jmp
pop
imul
dec
bound
add
mov
add
dec
call
add
adc
pop
lock
mov
addb
inc
cld
jns
test
adc
jmp
addb
imul
mov
mov
shll
jl
pop
pop
std
push
out
sub
add
push
mov
std
mov
jb
addb
mov
push
jbe
add
pop
lahf
std
xor
push
jge
jmp
or
inc
loop
add
jg
aas
push
adc
ret
incb
loop
add
mov
idivl
jae
push
add
cmc
dec
aam
ret
sarb
jnp
aaa
add
lret
mov
das
add
jmp
imul
pop
add
add
fxch
shl
mov
mov
xchg
sub
in
filds
les
add
les
cmp
je
test
sahf
add
loope
add
cmpsb
insl
adcb
iret
in
push
add
jb
dec
xchg
testl
add
inc
arpl
fwait
inc
inc
test
scas
fldt
mov
cmp
or
ret
jmp
push
mov
repz
jle,pn
idiv
add
out
insb
pop
pusha
adc
negl
outsb
cmp
shl
into
add
idivl
mov
orl
push
or
adc
into
xor
cmpl
push
sbb
les
add
pop
push
push
inc
cmc
std
push
shrb
imul
mov
aaa
inc
testl
imul
add
inc
push
pop
mov
in
sub
or
sbb
outsl
mov
mov
jo
cmpb
mov
call
push
sbb
rorb
add
mov
add
lcall
inc
loop,pn
stc
rorl
mov
pop
push
call
inc
orl
popa
or
mov
pop
push
call
mov
or
loop
or
pop
cmc
jmp
mov
mov
and
lret
pop
push
cmp
mov
dec
add
lahf
or
shrb
add
sbb
jae
in
mov
pusha
and
paddsb
das
movsb
jg
arpl
inc
push
dec
xchg
mov
mov
pop
les
outsb
dec
aas
inc
lock
mov
pop
or
andl
mov
les
push
sbb
or
add
push
push
scas
or
inc
lock
pop
sbb
clc
js
mov
xchg
test
push
or
in
jbe
fiadds
out
mov
inc
inc
xchg
mul
inc
sti
inc
hlt
dec
mov
stc
pop
in
lcall
inc
inc
xchg
ja
or
or
jb
add
jae
mov
bound
jg
jmp
add
dec
push
mov
pop
jl
out
test
xchg
jmp
repnz
or
movsb
repz
loope
cli
mov
dec
out
add
mov
sub
push
add
push
sti
mov
add
cmc
xchg
inc
call
xor
pusha
test
or
sarb
std
inc
mov
inc
lock
loope
sahf
add
sbb
and
or
movsb
add
std
pop
inc
clc
sbb
clc
outsb
call
jle
pop
jae
jne
shl
andl
lods
pop
call
xchg
or
add
mov
mov
std
jmp
add
test
repnz
dec
ficoms
repz
testb
inc
outsb
fsubp
std
add
jns
sub
dec
outsl
or
jg
push
jb
mov
or
add
fists
test
xor
fidivs
mov
jns
cmpl
jns
mov
sti
push
jg
mov
jl
repz
wrmsr
xor
add
push
jns
inc
pusha
cmp
add
adc
push
push
outsl
jg
std
js
test
jno
sti
add
mov
jae
pop
mov
add
jns
add
sti
std
xchg
sti
cmp
lock
add
jge
push
je
xchg
imul
adc
or
iret
es
mov
inc
sbb
mov
lods
int
sti
das
cmc
dec
adc
add
int
das
xor
add
cmp
jl
icebp
iret
mov
or
sti
iret
add
fistpll
dec
mov
jae
sub
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
add
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
add
inc
or
jmp
inc
or
jmp
ds
mov
das
iret
xor
and
sbb
and
imul
out
dec
insb
dec
out
and
imul
cmpsb
jne
dec
mov
cmp
add
add
mov
jb
movsb
popa
je
insb
push
aaa
rcrl
xor
inc
sub
and
add
arpl
and
cli
addr16
sub
sbbb
jns
rcrl
mov
cld
js
fs
add
or
mov
outsb
enter
mov
sub
push
xchg
and
stc
pop
bound
add
push
je
emms
popa
cs
popa
imul
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
mov
sub
and
inc
cs
push
mov
movl
pushf
or
mov
push
mov
loopne
add
add
inc
loopne
add
add
inc
loopne
add
add
inc
loopne
add
add
inc
loop
add
add
inc
loop
add
add
inc
loop
add
add
inc
loop
add
add
inc
loop
add
add
inc
loop
add
add
inc
loop
add
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
add
inc
or
add
out
inc
or
add
out
inc
or
add
add
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
cmp
xor
or
sti
jns
mov
add
js
mov
dec
aad
ja
add
adc
xor
mov
jno
jnp
xor
ja
xor
cli
push
sbb
fiaddl
sbb
inc
jne
add
pop
add
popa
add
outsl
jae
arpl
das
add
imul
arpl
subl
in
arpl
push
je
shll
outsb
mov
xor
lahf
push
gs
stc
pop
popa
jns
jns
xor
add
gs
icebp
add
xor
sub
jb
insl
jns
jae
arpl
xchg
add
outsl
je
ja
arpl
pusha
jo
inc
or
jb
adc
popa
lcall
je
insl
addr16
add
pop
mov
outsb
sub
sub
icebp
add
jne
xor
push
loopne
push
sub
pusha
lock
imul
fbld
addl
arpl
fbstp
xlat
cmp
imul
add
scas
push
insb
pop
mov
push
pop
jno
repnz
fwait
push
jb
mov
or
insb
xchg
push
pop
je
add
pop
out
add
arpl
jo
insl
out
sbbb
jne
add
enter
fnstenv
sbb
xor
sbb
add
pop
mov
imul
or
bound
pop
popl
push
pop
mov
pop
out
divb
pop
clc
or
jno
jno
xlat
insl
push
je
pop
out
jp
push
sub
mov
cmp
add
outsb
add
or
cmpsl
pop
arpl
inc
pop
push
jmp
pop
pop
add
pop
dec
jb
insb
insb
add
pop
or
sbb
add
and
rcrb
jb
aaa
jo
into
and
and
or
push
pop
jno
inc
jno
cltd
hlt
pop
add
or
negl
mov
add
inc
pop
mov
or
mov
sbb
sbb
imul
pop
jmp
xchg
ja
add
je
outsb
mov
add
pop
add
push
jo
or
arpl
or
imul
jo
inc
jo
outsl
rorb
gs
icebp
pusha
popa
jns
popa
sub
xor
imul
or
add
sbbb
sahf
inc
jno
stos
inc
outsb
add
insl
outsl
insl
push
pop
outsb
mov
pop
je
shlb
into
pop
insb
gs
imul
inc
push
add
stos
push
arpl
addr16
xchg
dec
js
push
lock
cmpsb
push
add
insb
outsb
adc
outsb
or
jbe
stc
pusha
jae
lock
addr16
pusha
arpl
aaa
add
sbb
addr16
add
les
es
pop
ja
popf
xor
mov
push
pop
out
nop
add
mov
in
push
gs
xchg
pop
pop
out
xchg
pop
pop
fucomip
pusha
ja
or
cmpsb
outsb
sbb
push
js
outsb
push
add
push
arpl
jne
addr16
or
popa
add
movsl
outsb
sbb
imul
fs
or
inc
push
push
push
push
pop
fs
jne
jb
gs
pop
out
xor
shll
or
data16
ja
addr16
int
es
pop
sub
gs
or
jne
or
outsl
mov
addr16
ja
jne
mov
jge
jne
jmp
addr16
mov
jb
push
movsb
or
addb
inc
add
jo
dec
xchg
or
jo
movq
je
pop
jne
sbb
insl
sti
pop
jo
adc
outsb
mov
insl
push
enter
lret
sbb
jne
xor
xor
pop
lret
jno
and
lds
mov
sti
imul
jb
ljmp
add
pop
jae
jno
jae
jno
jbe
data16
pushf
je
insb
mov
outsl
push
pop
jae
cs
xor
or
popa
pop
jb
push
popa
imul
popa
outsl
dec
push
add
outsb
outsb
push
push
add
push
imul
gs
push
imul
outsb
add
sahf
sbb
pop
add
jno
add
add
pop
gs
push
pop
jae
jg
xor
mov
pop
ficompl
addr16
pop
pop
ja
xchg
imul
pusha
addr16
insl
cwtl
dec
pusha
arpl
jb
mov
dec
pop
jo
lock
data16
pop
imul
outsb
jnp
pop
add
pop
lock
insl
jo
pop
outsb
pusha
lock
pop
push
or
ja
fbld
sub
insb
add
xor
inc
pop
jno
rcrb
movsl
bound
lock
jne
sbb
fs
or
jno
push
xchg
pop
cmc
outsl
xchg
add
addr16
loopnew
out
loope
mov
push
push
imul
jb
pop
js
or
pop
add
cmpsb
je
imul
jne
pop
out
movsb
outsl
inc
arpl
add
insl
push
jbe
bound
ja
or
jb
pop
mov
je
pop
out
outsl
add
sub
sub
pop
cmp
fdivs
shrl
or
jno
push
pop
sbb
jmp
in
add
testl
imul
add
imul
addr16
jmp
add
inc
addr16
mov
push
bound
or
sbbb
je
push
test
fs
cmpsl
insl
pop
cmp
jb
pusha
outsl
add
pusha
pop
je
addl
adc
outsb
or
outsb
jbe
dec
gs
fistps
insl
insl
fbld
or
sbb
add
data16
add
outsb
fs
imul
jae
inc
outsb
jns
cmp
imul
gs
mov
xor
mov
add
push
add
dec
adc
xor
sub
popa
lea
popa
push
cmp
outsb
xor
or
push
pop
popa
addr16
imul
bound
insb
xor
imul
arpl
add
inc
fs
dec
inc
add
inc
pop
outsb
fwait
imul
shrb
popf
imul
add
pop
imul
pop
pop
jle
insb
jecxz
pop
pop
hlt
xchg
in
pop
pop
outsb
inc
mov
pusha
xor
out
arpl
pop
add
dec
xor
je
arpl
pop
pop
inc
inc
jbe
test
pop
pop
jb
lock
push
jne
data16
cmp
popa
arpl
add
loop
popa
pusha
loop
add
insb
je
loop
jno
or
pusha
sub
sbb
inc
jno
push
sub
pop
lock
mov
adc
outsl
les
arpl
pop
call
or
pusha
inc
pop
jnp
jecxz
mov
xlat
pop
mov
out
add
stos
push
dec
pop
stos
or
cltd
gs
jno
or
xchg
push
dec
pop
movsb
or
xchg
data16
push
pop
jbe
push
pop
gs
fs
add
pop
mov
mov
inc
push
imul
inc
jno
aad
pop
sub
clc
pop
and
clc
cmp
clc
aaa
pop
cmp
add
sbb
sub
out
je
ds
push
jne
push
sub
mov
arpl
sbb
sub
cmpsl
cmp
dec
sub
or
ja
cmp
pop
data16
nop
outsb
jb
insb
outsb
jae
push
ds
ja
add
push
inc
sub
pop
bound
cmp
add
sahf
aas
je
jle
sub
cmpl
popa
popa
jne
insb
jne
add
mov
inc
addr16
pushf
add
roll
push
das
jns
jb
mov
pop
cs
sub
inc
aas
jns
repz
js
add
push
push
bound
inc
dec
arpl
inc
inc
xor
inc
decb
dec
sbb
dec
inc
xor
add
dec
inc
push
lcall
inc
lock
std
add
mov
lock
adc
cmp
dec
inc
sti
jl
popa
adc
xchg
inc
push
out
rcrl
sahf
inc
inc
cli
jge
arpl
jae
arpl
jle
insl
jmp
jno
je
mov
lcall
insb
mov
dec
pop
add
add
xor
add
inc
lock
inc
lock
arpl
adc
adc
jb
cmp
fs
sub
jo
pusha
push
push
jae
insl
add
and
ficompl
mov
inc
cmp
push
es
gs
push
mulb
jb
imul
add
out
inc
or
aad
xchg
outsl
push
pop
mov
insb
out
aad
ja
xchg
addr16
stos
pop
test
dec
dec
jo
or
add
add
push
mov
pop
inc
dec
lcall
jmp
inc
fdivr
jmp
jg
xor
cmp
adc
and
push
pop
insl
arpl
adc
je
add
or
jno
sbb
jl
sbb
test
add
add
pop
sbb
dec
pop
sbb
cmp
call
sbb
les
sbb
test
sbb
mov
pop
sbb
push
pop
sbb
jmp
inc
or
and
sub
pop
imul
aas
je
out
or
add
add
fimuls
jo
insb
je
out
or
add
add
ficomps
imul
and
add
push
add
or
inc
scas
or
add
sub
add
xor
outsb
or
add
sub
add
gs
cmp
jns
or
add
std
lcall
jne
ljmp
je
or
add
mov
add
or
outsl
inc
dec
outsl
insl
mov
and
je
loopne
add
add
sub
inc
loopne
ja
adc
pop
std
push
arpl
add
xor
inc
loopne
insl
xor
jno
cmp
push
add
subl
sbb
inc
fs
push
pop
sti
enter
xchg
jb
repz
lcall
xorl
jecxz
insb
outsb
scas
push
push
jb
push
insb
jbe
add
or
inc
or
add
or
add
inc
push
xchg
push
gs
sbb
pop
ds
or
push
jae
add
add
pushw
push
imul
xor
insb
stc
push
sub
aas
add
xlat
outsl
xor
push
sti
cmp
dec
sbb
push
or
fwait
and
pop
dec
add
adc
xlat
adc
xchg
adc
sub
add
inc
cmpsb
push
add
bound
sub
cmp
dec
test
je
andb
lahf
insb
outsb
inc
sub
addr16
push
pop
sub
and
outsl
in
push
add
sub
je
push
pop
sub
pop
mov
xor
repz
pop
sub
add
arpl
or
add
gs
fisubl
add
stos
pop
arpl
pop
sub
and
mov
adc
pop
popaw
xchg
loope
sub
fcos
or
in
pop
outsb
je
pop
je
jecxz
pop
outsl
ret
addr16
jb
sub
push
jae
cmp
inc
xchg
insb
outsb
je
sub
insb
insb
jg
xor
daa
sub
add
jo
xor
insb
inc
negb
dec
pop
inc
inc
and
sbb
cmp
outsb
inc
pop
jae
dec
lock
sub
dec
imul
outsb
je
cmp
cmpl
imul
outsl
mov
sbb
and
repz
xor
dec
cwtl
jo
mov
mov
aas
movsb
aas
addr16
es
add
pusha
push
xchg
popa
arpl
das
inc
imul
cmp
dec
push
je
les
sub
push
xor
out
insl
xor
popaw
xor
insb
outsb
insl
shlb
iret
push
arpl
lret
addr16
jp
mov
sub
daa
or
fimull
mov
or
lods
and
add
xlat
sbb
nop
insl
mov
adc
or
out
imul
out
pop
pop
out
fs
dec
push
pusha
push
stc
sub
jns
xor
pusha
sub
imul
push
or
inc
inc
add
adc
or
add
hlt
jo
or
jo
push
mov
add
pop
dec
pop
insb
lds
adc
add
ljmp
negl
cli
push
and
or
xchg
call
gs
xchg
dec
outsb
sbbb
arpl
pushf
insb
popa
sbbb
dec
test
insb
jb
fwait
push
arpl
fs
sbbb
push
adc
sub
fs
jne
arpl
pop
pop
ja
add
adc
cmc
jns
arpl
ljmp
jmp
lock
js
and
mov
push
pop
jo
mov
cmp
movsl
addr16
lods
cmp
mov
imul
pop
outsb
je
xor
data16
lods
cmp
data16
cs
jo
jb
jge
outsl
jae
pop
addr16
add
jb
add
sbbl
mov
dec
xor
outsl
gs
inc
sub
imul
inc
outsb
dec
pop
jb
aas
xor
inc
add
popa
jb
sbb
ficompl
inc
mov
outsb
call
loop
insl
call
mov
insb
insl
in
insb
push
push
aad
push
fstpt
arpl
mov
push
jno
add
dec
xor
imul
jno
loopne
jb
xor
xor
loopne
arpl
dec
jo
push
xor
imul
bound
add
sub
dec
inc
sub
push
and
gs
sbb
mov
add
pop
mov
push
arpl
inc
cmc
dec
mov
add
and
push
loopne
mov
pop
xchg
insb
loope
mov
mov
mov
inc
test
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
add
inc
or
jmp
add
inc
or
jmp
inc
or
jmp
inc
or
jmp
adc
sub
loope
and
fnstcw
xor
int3
push
adc
xor
pop
sub
mov
pop
sub
sbb
xor
dec
sub
sbb
xor
cmp
cs
push
dec
dec
xchg
fs
sbb
js
inc
pop
add
gs
add
push
sbb
mov
sahf
aas
outsl
push
cmp
ss
xor
inc
outsl
add
popa
data16
addr16
mov
sbb
pop
outsb
jae
dec
push
push
mov
xor
je
mov
data16
ljmp
jae
dec
push
push
mov
xor
je
add
jg
popa
pop
xor
pop
cmp
dec
gs
jp
arpl
ss
sbb
pop
inc
adc
add
add
xor
push
arpl
sbb
jb
out
xor
std
pop
inc
add
sub
push
ja
pushf
sub
je
jb
jno
xchg
push
insl
aam
inc
pop
loop
add
test
add
xchg
mov
inc
jae
js
jp
jo
jns
addr16
je
dec
mov
inc
jne
dec
outsb
xchg
xor
insb
jae
imul
push
jo
xor
cmp
je
pop
je
inc
push
arpl
cs
pusha
push
or
sub
decb
sub
addr16
or
fs
add
pop
add
pusha
jmp
iret
insb
negb
add
sbb
pop
inc
ficompl
fs
fs
push
inc
sub
nop
dec
out
out
test
mov
or
insb
mov
aaa
jp
xchg
cmp
lcall
add
pusha
inc
insl
inc
xor
aaa
mov
sbb
inc
add
xchg
jmp
or
dec
add
adc
push
push
or
or
gs
cs
pop
bound
pop
cmp
push
inc
pop
stos
pop
push
arpl
sub
aam
sub
stos
xor
out
jb
adc
sub
js
insb
xchg
or
jo
jae
cmpsl
dec
push
cltd
lcall
cltd
jbe
dec
jbe
addr16
imul
ds
bound
add
jg
add
addr16
pop
popa
pop
sub
imul
dec
inc
outsl
std
inc
pop
insl
pop
je
push
in
inc
outsl
push
push
push
xchg
sub
sahf
stc
push
lcall
insb
mov
pop
insb
int
cmp
jne
addr16
push
scas
in
xor
mov
lretw
pop
outsl
imul
cli
ds
shrl
bound
add
pop
add
gs
mov
xor
xor
inc
icebp
xor
repz
je
clc
das
push
daa
or
push
repz
insl
pop
push
bound
mov
insl
and
dec
pop
xor
pop
bound
and
aas
div
aaa
inc
sbb
and
daa
orb
aam
jno
xchg
fldt
inc
sti
fs
add
in
dec
add
outsb
gs
in
gs
test
inc
fwait
jae
je
outsb
sub
insb
mov
bound
inc
push
mov
dec
fwait
pop
pop
xor
ss
mov
sbb
pop
and
xchg
imul
sub
sub
cmp
or
push
sbb
or
or
arpl
cmp
adc
sub
pop
or
das
or
fs
sub
pop
add
add
xor
cltd
push
mov
lods
sub
aaa
jp
xorb
mov
push
mov
add
cmp
jno
push
insb
or
data16
dec
dec
pop
xor
pop
sub
add
sbb
sbb
and
or
mull
decl
pop
xor
aaa
je
stc
cmp
add
push
xor
pop
mov
xor
mov
sub
call
cs
xchg
stos
or
cmp
pop
xchg
sub
pop
popa
arpl
sub
pop
jbe
add
pushf
pop
js,pn
sub
pop
andb
xchg
pusha
insb
insb
out
insl
mov
jae
or
pop
inc
push
sub
push
sub
std
push
push
bound
push
stc
inc
imul
pop
and
gs
pop
add
pop
je
mov
xchg
dec
jns
je
mov
popa
jb
clc
pop
jae
or
fcompl
push
add
ret
bound
inc
xchg
and
add
inc
push
arpl
xchg
add
inc
push
arpl
cmp
je
add
push
pop
arpl
ss
add
bound
pop
arpl
xor
push
incl
push
sub
pop
arpl
es
es
pop
add
adc
jbe
shlb
es
push
jbe
fbld
dec
add
loopne
push
add
rclb
lahf
data16
int3
push
and
jle
jb
cmpsb
bound
or
xor
aaa
xchg
data16
mov
mov
out
xorb
and
jns
movsb
aaa
xor
sub
daa
push
inc
push
jns
pop
and
sub
inc
push
dec
push
push
jmp
dec
push
daa
pop
xor
sub
cmp
push
add
xor
sbb
pop
pop
and
xor
lock
imul
repnz
or
push
ljmp
mov
inc
repz
xchg
cmp
mov
stos
aaa
arpl
push
gs
jl
xor
jb
cwtl
sub
daa
das
pop
pop
and
sub
add
adc
bound
pop
inc
jae
addr16
adc
pop
insl
pop
pop
sbb
gs
adc
xor
insl
push
sub
inc
sbb
and
outsb
dec
pop
rclb
or
loop
jne
mulb
inc
push
scas
icebp
inc
jne
popa
popa
je
cmc
jno
shll
and
cld
pop
dec
into
pop
outsl
mov
add
pop
popa
pop
fsubl
insb
lret
pop
push
jb
pop
data16
sub
xor
insb
jb
je
or
imul
push
push
dec
dec
insb
imul
je
inc
pop
outsl
add
data16
sub
xor
inc
sub
decl
pop
je
mov
imul
enter
insl
pop
jb
add
pop
jno
rcrb
mov
dec
das
inc
fmuls
mov
xchg
dec
je
jbe
add
cltd
push
arpl
cmp
pop
pop
jb
adc
jae
bound
bound
dec
popa
je
add
fs
push
fs
adc
aaa
push
inc
add
sbb
popa
jb
out
jae
adc
inc
add
repz
icebp
ret
jmp
rcll
xor
int
fisubrl
fldenv
pop
push
lock
movsl
inc
add
add
das
fwait
pop
nop
sub
out
xchg
and
test
bound
xor
xor
jae
cwtl
cmp
cs
mov
inc
jnp
sub
push
xor
out
push
add
cmp
adc
or
add
or
inc
push
push
push
sbb
push
push
or
popa
sbb
repz
add
add
inc
pop
insl
sti
or
dec
sbb
add
pop
cmp
out
pop
imul
pop
pop
mov
cwtl
or
cltd
xor
pop
test
xor
pop
stos
insl
daa
data16
jae
add
and
insl
dec
xchg
xor
pop
pop
inc
inc
ja
jb
xor
jns
push
outsl
sub
jns
xor
jb
pop
inc
push
cmp
or
dec
dec
cmp
inc
push
add
icebp
dec
imul
clc
outsb
mov
push
outsl
mov
push
mov
repz
add
jo
bound
or
outsl
mulb
add
add
dec
push
push
decb
jo
pop
jb
mov
dec
jae
mov
pop
inc
loop
pop
inc
jbe
insb
outsl
mov
and
dec
and
dec
jo
sbb
jb
cli
push
jne
jo
or
inc
push
outsl
pop
popa
inc
popa
dec
adc
xor
add
push
push
insl
and
push
jne
mov
xor
or
fcomp
pop
jb
adcb
enter
mov
pop
aam
push
insl
mov
add
jg
jne
mov
pop
add
sahf
pop
gs
xchg
add
inc
dec
add
xchg
push
push
pop
pop
add
pop
pop
cs
std
push
add
push
addr16
push
push
arpl
sub
pop
sbb
or
inc
adc
add
dec
push
pop
and
push
sub
and
or
pop
divb
add
aaa
out
fisubl
rcll
aaa
int3
daa
icebp
sub
daa
mulb
lods
sub
mov
and
push
orl
movsl
sub
mov
push
xor
push
inc
pop
movsl
das
xchg
push
pop
push
pop
or
push
push
xor
pop
add
push
and
dec
pop
sub
xor
sbb
es
sub
arpl
je
jno
adc
or
pop
sub
std
inc
pop
insl
pop
pop
xor
sti
out
inc
sti
add
jb
sbb
bound
mull
insb
shl
arpl
nop
push
addr16
cmpsl
inc
add
xchg
xor
js
cmpb
mov
add
stos
cs
push
cmp
lcall
jp
xor
pop
or
jne
add
jo
je
push
arpl
and
jo
push
inc
jb
dec
popa
pop
dec
sub
push
push
outsb
jae
loope
js
and
inc
sub
jbe
sahf
loope
jb
dec
popa
jae
pop
outsl
add
jae
dec
imul
pop
cmp
jmp
push
add
js
jae
cld
sub
pop
pop
outsb
ljmp
js
sub
jbe
loope
push
mov
inc
popa
jb
stc
outsb
gs
pop
insl
jnp
push
popa
jge
jae
inc
push
pusha
add
pusha
jno
notl
sub
pop
je
hlt
dec
add
pop
je
add
sti
out
ds
addr16
adc
ljmp
addr16
das
push
or
push
push
ret
pusha
insl
ror
dec
jno
jo
jo
les
stos
je
inc
mov
jno,pn
je
pop
lcall
pop
xchg
xchg
dec
insl
xchg
mov
pop
xorl
push
jne
xor
add
or
cmp
push
or
xor
jne
and
push
inc
pop
xor
add
das
cmp
cmp
and
sub
sub
sbb
xor
das
sti
dec
and
add
add
inc
jecxz
add
repz
mov
add
daa
int
fisubrl
fstps
pop
pop
mov
cs
cmp
mov
pop
nop
dec
movsb
cmp
adc
pop
es
push
inc
push
cmpsb
xor
add
push
inc
push
sbb
popa
push
adc
ja
je
jae
inc
push
push
push
push
arpl
sub
daa
cmp
push
push
adc
arpl
pop
daa
gs
in
pop
mov
sub
add
das
sub
addr16
sbb
and
pop
lcall
arpl
outsb
mov
das
mov
pop
es
adcb
add
loopne
inc
jae
pop
push
imul
pusha
add
icebp
outsl
add
imul
sub
jb
icebp
pusha
jae
in
pop
je
fs
sub
pop
sub
pop
jo
in
jno
pop
pop
popa
popa
outsb
aas
push
push
pop
pop
dec
inc
add
mov
push
dec
gs
push
popa
insb
loopne
dec
sbb
jae
or
dec
popa
repnz
inc
cld
pop
inc
mov
decl
sti
outsb
ja
mov
fs
push
jno
jl
imul
jno
xor
pop
lea
push
push
das
je
out
sub
aas
cmp
pop
add
xor
aaa
dec
xor
arpl
lock
ljmp
insb
add
inc
out
sbb
and
out
pop
cmc
mov
outsb
daa
adc
fsubrl
inc
push
repz
shr
data16
add
outsl
sub
out
test
pop
add
aaa
arpl
mov
xchg
cmp
push
xchg
and
jns
cwtl
test
xchg
and
aaa
andl
es
push
or
xor
add
out
pop
sub
and
dec
pusha
push
and
cmp
jmp
cmp
hlt
sub
or
sub
or
jmp
add
or
adc
in
sub
loope
or
repz
xor
or
xor
inc
dec
mov
addr16
mov
xchg
push
scas
dec
inc
dec
add
inc
jecxz
fwait
outsb
or
and
addb
pop
es
lret
cs
not
js
nop
cmp
xor
call
cmp
sub
and
call
es
dec
cmp
inc
pop
jecxz
dec
pop
or
push
aaa
arpl
sub
push
push
and
add
or
jb
and
clc
jmp
add
in
imul
je
push
dec
jo
clc
pop
cs
pop
dec
dec
shl
addr16
outsl
fsubp
insl
pop
int
push
add
outsb
gs
jl
outsb
jl,pn
insl
add
dec
pop
gs
inc
push
add
gs
in
jno
push
dec
pop
gs
inc
push
add
push
add
inc
push
dec
dec
push
inc
xor
popa
add
jge
pusha
jae
push
jne
cmp
bound
ds
aas
dec
xor
dec
sub
inc
adc
xor
inc
aas
test
lock
repz
iret
idivb
jae
inc
jae
inc
push
mov
insb
xor
arpl
ja
jge
addr16
aaa
and
xor
adc
sub
push
repz
inc
inc
add
js
in
inc
jae
out
xor
mov
inc
jnp
pop
sub
add
jo
adc
jno
sbb
addr16
mov
jno
pushl
jo
or
addr16
or
cmp
daa
int3
xor
shll
inc
inc
fwait
push
cltd
and
and
sub
pop
jne
nop
sub
xchg
fisttps
xor
aam
arpl
xchg
pop
xchg
dec
jno
jae
mov
jbe
push
cmp
pop
cs
aas
cmp
sub
daa
jns
sbb
sub
xor
and
sbb
inc
sub
inc
and
or
add
add
xor
sbb
sub
jb
and
pop
insb
js
push
mov
jns
push
lret
gs
das
fdivs
push
mov
cmp
inc
das
mov
and
xchg
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
cmp
addr16
pop
sbb
addr16
pop
cmc
pusha
outsb
pop
imull
stc
pusha
xor
add
imul
pushl
out
je
mov
jo
jmp
pushl
in
je
mov
jae
call
imul
cs
int
imul
pop
frstor
fdivp
insb
insb
frstor
leave
out
insb
jae
insl
pop
jl
push
scas
or
adc
insb
insb
pop
stc
pusha
xor
jmp
insb
insb
pop
stc
pusha
xor
add
loop
cmp
sub
pop
popa
jecxz
xor
insb
out
stos
and
clc
scas
xor
shlb
inc
shll
scas
into
and
cwtl
iret
sub
outsl
fldcw
insl
stos
jne
outsb
jo
cmp
mov
xchg
iret
pop
popa
pusha
xchg
xor
mov
insb
jo
add
inc
mov
add
add
inc
mov
add
inc
mov
add
inc
mov
add
pop
lock
or
pop
push
fisttpl
sub
or
ss
xor
std
push
inc
pop
or
fisttps
mov
shll
mov
test
int3
add
sbb
sub
and
sub
xor
push
cmp
jmp
jbe
xchg
jb
jp
sub
sbb
inc
call
and
add
sbb
and
xor
sub
inc
cmp
pop
inc
pop
sub
push
xor
arpl
sub
or
and
ja
xor
sbb
jno
pop
aaa
or
and
add
lahf
sbb
jno
xchg
jb
data16
jmp
pop
sbb
addr16
popa
and
nop
or
es
pop
lods
das
das
test
dec
add
cmp
push
test
gs
ja
cmp
test
stc
outsl
jae
mov
outsl
cs
or
jb
jmp
push
pop
fdivl
pop
mov
pop
add
imul
je
xor
jp
loope
popa
adcb
repz
imul
pop
add
loope
arpl
jecxz
imul
pusha
jb
push
dec
outsl
movsb
fsubrl
iret
add
fs
shl
pop
push
pop
jecxz
imul
push
imul
pop
jb
push
dec
gs
cmp
push
add
add
lock
add
and
xor
and
add
imul
out
sub
and
inc
negl
add
leave
es
mov
and
inc
pop
sub
addl
and
jae
push
jle
push
jns
roll
in
and
xor
add
call
sub
stc
das
xchg
sub
jae
xor
cmp
es
xor
cs
push
or
pop
adc
negl
daa
repz
adc
cs
sti
sbb
xor
sbb
sub
add
dec
or
call
or
and
sbb
fwait
push
inc
push
int
add
movsb
sbb
push
fwait
jmp
xchg
xor
dec
pusha
aaa
andb
xor
imul
and
sub
xor
jbe
jne
jne
jno
pusha
cmp
sbb
pop
jmp
push
sub
xlat
pusha
xor
je
xor
dec
je
or
jno
and
add
popa
sti
or
cmc
arpl
pusha
or
insl
sbb
sbb
jo
popa
mov
inc
je
inc
or
jmp
inc
or
test
outsb
aam
dec
xor
stos
add
repz
out
scas
push
xor
and
adc
test
insb
out
cmp
aaa
lret
adc
add
add
inc
popf
das
pop
add
sahf
aas
imul
pop
jb
cmp
cmp
lock
pop
jmp
gs
call
js
dec
jmp
gs
inc
outsb
adc
imul
jb
ficomps
loop
jno
add
xor
push
or
add
or
rorl
xor
out
add
add
add
inc
xchg
add
pop
add
inc
add
mov
aaa
add
inc
std
add
add
inc
clc
add
inc
push
add
inc
mov
add
push
add
inc
push
add
inc
push
add
inc
mov
dec
ficoms
ss
hlt
cmpsb
daa
je
pop
sbb
push
daa
je
leave
add
lahf
jmp
jo
push
insl
mov
aad
aas
mov
outsl
and
rcrl
add
arpl
jbe
or
cmp
xor
and
sbb
jbe
jnp
jbe
jns
and
pop
out
inc
ss
and
cmp
and
dec
adc
cmp
gs
ds
call
or
loop
adc
xor
daa
imulb
out
cmc
sbb
test
int3
push
movsb
pop
aad
add
mov
or
pop
fisubl
xchg
jmp
mov
mov
xor
or
xor
push
test
sbb
in
arpl
inc
dec
arpl
jo
add
sbb
imul
arpl
inc
pop
push
or
sub
or
inc
je
inc
cmp
pop
sbb
jb
and
and
add
inc
sbb
add
inc
in
dec
inc
dec
dec
daa
repnz
sub
jmp
test
push
jmp
jns
add
in
fiadds
aad
inc
dec
lods
dec
inc
inc
loopne
add
outsb
int
imul
outsb
mov
jno
out
pop
jae
loope
jb
cmp
inc
sbb
pusha
jb
in
push
insb
add
sti
out
jmp
fnstsw
das
inc
or
cmp
addl
outsb
cmp
add
pop
inc
xlat
push
dec
or
push
inc
loopne
add
inc
push
push
inc
int3
cmp
pop
push
xchg
arpl
stos
test
xchg
lret
and
cmp
pop
sbb
xchg
sbb
jb
je
jb
add
sbb
bound
sbb
and
sbb
and
or
sbb
sub
daa
insb
adc
and
dec
add
or
inc
arpl
adc
outsb
inc
in
jb
adc
insb
ljmp
add
in
xor
sti
inc
jo
adc
mov
enter
movsb
push
xchg
or
sbb
es
mov
add
shlb
movsb
sbb
dec
cltd
xor
jecxz
sbbl
lds
inc
es
inc
adc
out
inc
sbb
add
and
sub
addr16
inc
xor
and
cmp
dec
or
add
sbb
inc
cmp
cmp
add
sub
add
add
rcrl
out
call
add
sub
std
inc
dec
pop
cli
jo
pop
fidivl
insl
dec
enter
lds
arpl
push
adc
add
push
sbb
cs
sbb
test
xor
and
inc
jp
add
je
dec
das
gs
dec
cmp
arpl
dec
sbb
punpcklwd
insb
jmp
push
add
xor
sub
add
cmp
imul
inc
push
push
cs
imul
pop
je
insl
jae
loope
je
lcall
int
je
mov
or
mov
pop
push
pusha
inc
ret
fldenv
out
add
dec
push
inc
add
lret
popa
or
cmp
adc
bound
inc
cmp
lods
sub
dec
xor
fwait
inc
das
inc
shrl
inc
shl
add
out
inc
jnp
pusha
xlat
xor
sahf
divb
inc
insl
and
scas
dec
push
inc
push
aaa
arpl
mov
add
pop
jo
push
ss
dec
inc
add
xchg
push
push
push
xchg
iret
jo
ss
pop
xor
hlt
cmp
add
lea
outsb
es
add
dec
sbb
es
and
inc
xor
cs
hlt
ds
adc
push
push
sub
cmp
adc
and
sbb
shrb
or
dec
sub
inc
xchg
aaa
and
movsb
dec
ja
sbb
push
cmp
mov
xchg
or
inc
xchg
inc
mov
daa
xchg
fadds
jmp
inc
xorl
out
sbb
movl
inc
cmp
push
sbb
dec
add
sub
sbb
and
inc
ss
and
imul
or
inc
inc
jmp
addr16
sub
arpl
pop
jb,pn
dec
cmp
push
sub
xchg
sub
inc
pop
push
rclb
stc
inc
or
aad
fdivr
shlb
jnp
xchg
ja
add
data16
lea
xor
jmp
fdivs
aam
push
icebp
mov
add
ljmp
pop
pop
inc
cmp
cmp
cmp
add
aam
outsb
pminsw
pop
fildll
dec
add
decl
outsb
add
add
pop
xor
pusha
and
jno
inc
inc
jne
sti
aam
jne
ljmp
push
in
outsb
gs
shlb
jmp
jo
mov
cmpsb
imul
cmp
out
movsb
std
jne
add
movsl
std
push
shr
jae
iret
aam
pop
int
push
je
jecxz
pop
inc
loopne
push
sti
fadds
and
xor
dec
xor
cmovae
je
push
pop
arpl
xor
jmp
push
pop
aam
sub
aad
add
mov
sub
arpl
mov
outsb
cmpsb
int3
dec
ja
int
dec
xchg
sarb
add
ja
sub
mov
dec
push
fisubrl
inc
pop
push
pop
jae
jb
push
inc
insl
imul
sbb
das
arpl
dec
push
or
push
adc
inc
pop
and
pop
and
inc
adc
dec
xor
das
cmp
push
daa
adc
and
or
and
adc
push
add
mov
jmp
notb
mov
out
jnp
pop
and
rcrl
daa
pop
xor
sbb
jecxz
cs
das
push
sub
add
sbb
mov
inc
xchg
adc
push
inc
push
sbb
xor
addr16
add
sub
jb
incl
sbb
xor
outsb
push
add
sbb
jmp
xchg
jb
mov
sbb
inc
cmp
push
jb
sub
and
jmp
aaa
dec
lds
data16
sbb
inc
out
cmp
sbb
arpl
mov
outsl
xor
pusha
jb
add
repnz
je
jmp
pop
jo
clc
dec
je
call
push
push
or
outsb
add
inc
add
xlat
aas
add
sarl
add
cmp
flds
add
inc
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
aas
add
aas
add
add
jmp
aas
add
aas
add
sbb
rcrl
xor
inc
inc
jnp
inc
inc
ss
inc
xor
inc
inc
fcoml
inc
inc
fistl
inc
inc
cwtl
sbb
inc
sbb
inc
pop
sbb
inc
mov
sbb
inc
inc
fisttps
inc
inc
pop
jp
inc
add
inc
mov
jl
inc
int
inc
add
inc
jl
inc
inc
call
jge
inc
pop
jle
inc
adc
inc
inc
jge
inc
xchg
gs
inc
hlt
push
inc
or
xchg
push
pop
xchg
add
or
or
pop
or
pusha
pop
or
pusha
pop
or
pop
or
popa
pop
or
lds
or
or
pop
or
add
pop
or
movl
or
enter
int
or
xchg
fcmovnbe
xchg
out
rolb
or
mov
or
xchg
dec
mov
xchg
pop
mov
stos
dec
add
dec
add
lcall
jmp
inc
or
jmp
inc
or
jmp
jo
arpl
jmp
cmp
add
dec
aam
xor
loopne
xor
inc
push
adc
popa
sub
inc
inc
sub
int3
je
push
jmp
inc
es
inc
or
in
inc
add
loopne
shrb
jmp
arpl
and
and
and
or
dec
sub
add
and
fildll
add
and
sbb
outsl
mov
add
fdivs
cmpsl
add
and
ljmp
jle
and
mov
sbb
push
push
in
pop
jne
in
cmp
sub
mov
imul
cmc
outsl
insb
inc
sti
pusha
jb
ljmp
adc
add
pop
dec
gs
gs
std
push
cli
pusha
push
inc
scas
sub
add
es
and
leave
pop
addr16
sub
dec
es
pop
subl
je
mov
push
xor
lea
arpl
es
adc
aam
imul
xor
insb
ljmp
pop
in
pop
jo
into
sub
shll
gs
xor
or
je
in
es
mov
push
add
stos
add
es
cltd
call
arpl
or
pop
jo
fldcw
and
sub
out
fs
mov
xor
les
sub
xor
xchg
sub
sub
sub
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
add
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
outsb
or
add
add
pop
or
add
add
outsb
or
add
add
pop
or
add
add
inc
mov
add
inc
mov
add
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
push
mov
aaa
sub
mov
and
inc
add
inc
test
add
mov
add
inc
mov
inc
or
add
or
add
out
inc
or
add
out
sub
out
inc
or
jecxz
mov
repz
out
clc
out
inc
or
add
or
inc
or
add
or
add
out
add
jmp
inc
or
add
call
shrl
into
repz
or
hlt
add
inc
or
cs
cmc
dec
or
xlat
pop
ljmp
push
pop
add
ja
and
push
add
in
loope
std
xor
add
xor
add
dec
add
or
ficomps
repnz
adc
adc
out
inc
cmc
push
push
add
lock
incb
adc
out
and
cmc
out
and
call
out
enter
fbld
fsubs
mov
jmp
inc
mov
in
cwtl
mov
in
mov
in
mov
add
inc
mov
jmp
pop
mov
add
incb
outsb
mov
ljmp
std
add
std
add
or
add
or
add
mov
lcall
mov
add
mov
add
mov
lcall
mov
lcall
or
add
pop
std
add
add
mov
add
pop
std
fiaddl
add
ljmp
fiadds
add
fimull
ljmp
pop
std
lcall
pop
add
scas
pop
std
add
pop
add
outsb
pop
add
inc
mov
add
inc
mov
std
pop
popf
add
inc
mov
add
inc
movsb
std
incl
std
incb
add
movsl
std
incb
add
and
std
incl
add
inc
pushf
std
incl
movsl
std
clc
mov
std
call
mov
add
inc
movsb
add
enter
shlb
incl
adcl
mov
adcl
inc
or
add
or
add
mov
test
pop
add
add
pop
test
mov
xorl
out
inc
mov
addl
add
movl
push
mov
adcl
add
or
addl
add
out
inc
mov
addl
test
out
push
mov
add
or
add
mov
add
out
aaa
or
test
out
push
mov
add
movl
add
aaa
or
add
mov
jmp
les
sub
stc
jg
clc
jg
les
add
inc
stc
jg
les
orb
or
or
clc
jg
ret
clc
dec
inc
or
jmp
inc
or
jmp
inc
sbb
leave
inc
or
or
or
or
add
les
add
inc
or
jmp
orb
or
jmp
inc
sbb
jmp
inc
or
add
or
add
or
or
add
jbe
add
pop
or
or
add
push
or
or
add
pop
or
add
add
ss
add
or
or
or
add
or
or
or
add
or
or
add
or
add
or
add
or
or
or
or
or
add
or
or
or
add
or
add
or
or
or
add
or
add
add
aas
jb
add
add
dec
jp
add
incl
add
inc
jb
add
aas
jb
add
incl
add
inc
jp
add
jb
incl
add
push
add
incl
add
inc
push
decl
add
inc
jo
add
push
add
inc
js
add
incl
inc
push
add
dec
js
decl
incl
add
aas
push
out
add
out
add
out
inc
or
jecxz
or
cwtl
xchg
nop
xchg
inc
or
add
add
push
add
or
jecxz
xchg
add
out
fmuls
out
rorb
push
add
or
add
addr16
or
add
or
add
out
sbb
call
add
or
add
or
jecxz
test
call
or
add
addr16
test
imul
std
imul
push
inc
or
imul
add
movsb
add
add
or
jmp
inc
or
jmp
fs
imul
call
and
add
test
push
inc
or
push
inc
or
call
and
std
call
in
std
imul
push
in
std
add
std
fimuls
addb
push
add
scas
or
lcall
push
add
scas
or
or
sahf
or
or
outsb
pop
add
pop
or
inc
pop
or
add
or
or
add
add
pop
pop
or
pop
add
or
inc
push
pop
or
add
push
or
inc
or
add
or
inc
push
or
inc
push
or
add
push
add
push
or
push
or
jb
add
add
test
add
jb
add
jb
add
add
add
jb
or
add
add
jb
add
add
pop
jb
or
add
add
add
jb
add
add
pop
jb
or
jo
or
jo
add
add
test
or
jo
add
jo
or
out
inc
or
add
leave
out
inc
out
dec
or
add
out
inc
leave
out
dec
or
add
out
aas
leave
out
aas
pop
out
inc
leave
testb
add
out
pop
sub
inc
inc
or
inc
pop
sub
add
sub
add
testl
or
inc
inc
sub
inc
pop
or
add
or
add
xlat
add
sub
add
testl
or
add
sub
jmp
test
clc
test
and
inc
or
stc
inc
leave
pop
stc
inc
leave
pop
jmp
add
test
call
add
add
add
call
inc
or
jmp
inc
or
flds
jmp
add
pop
jmp
add
add
inc
or
jmp
add
and
inc
or
flds
and
test
pop
jmp
inc
leave
pop
stc
test
lcall
int
and
add
or
inc
and
or
fimuls
and
int3
aas
add
int3
out
or
add
int3
lcall
scas
or
add
or
and
int3
lcall
scas
or
add
std
add
add
outsb
test
lcall
add
add
sbb
add
or
add
add
add
sub
add
or
add
or
add
or
add
je
lcall
jb
incl
pop
inc
je
and
stc
incl
add
add
inc
jb
pop
dec
je
and
add
dec
jb
dec
jae
inc
jae
pop
inc
jb
pop
inc
je
add
add
dec
jb
pop
inc
jb
add
stc
pop
inc
jb
and
stc
incl
add
incl
and
add
dec
je
add
add
inc
jb
add
stc
incl
and
stc
pop
dec
or
sti
sub
sti
inc
or
sti
cmp
jmp
sti
pusha
add
out
push
or
add
jmp
sti
cmp
jmp
add
out
mov
add
out
test
out
mov
or
xrelease
add
cmpsl
repz
sbb
add
daa
hlt
push
or
add
daa
add
or
add
daa
hlt
inc
sbb
jmp
xor
adc
xor
add
adc
std
sub
add
inc
add
adc
hlt
jge
sub
jge
jmp
add
inc
add
adc
aam
adc
inc
or
jmp
inc
add
adc
mov
or
jmp
xchg
or
jmp
je
adc
je
std
test
inc
add
std
sub
add
push
jge
add
add
add
or
pop
add
add
add
or
outsb
jne
nopl
add
pop
jne
adc
add
add
fimuls
add
fidivrs
clflush
pmaxsw
add
sahf
js
adc
js
add
js
fidivrs
fimuls
add
scas
or
adc
aaa
std
lcall
or
add
xor
call
sub
std
ljmp
add
add
inc
jb
add
sub
dec
push
incl
sub
cmp
add
add
inc
jle
jmp
cmp
lcall
scas
sub
adc
add
add
inc
mov
cs
add
call
jb
add
es
dec
sub
enter
shlb
inc
jb
add
and
test
sub
lcall
add
add
inc
xchg
and
and
js
sub
jo
add
inc
or
add
int
pop
jnp
sub
dec
jnp
add
out
inc
or
and
jnp
sub
inc
or
add
out
inc
or
add
out
inc
or
sub
call
jp
sub
jp
sub
add
enter
sarb
mov
jp
sub
jp
sub
jp
sub
jp
sub
jp
sub
jp
sub
jp
sub
jp
add
sbb
std
imull
jp
jmp
jp
sbb
jp
sub
jp
sbb
outsl
jp
xor
pop
jp
subl
std
push
pop
jp
mov
add
das
jp
xchg
das
jp
jmp
jp
iret
pop
jp
pop
jp,pn
stos
das
jp
int
jp
int
jp
pop
outsb
jp
mov
std
jg
jp
daa
pop
jp
aaa
outsb
jp
add
pop
jp
stc
bound
add
std
lcall
and
decl
and
ljmp
add
in
std
mov
cs
incl
add
cs
call
cs
call
or
std
lcall
or
std
mov
xor
decl
ds
das
std
ljmp
std
decl
mov
das
std
ljmp
das
std
lcall
das
std
jmp
bound
add
and
xorb
incl
add
and
push
les
lcall
add
inc
fsubl
decl
and
inc
fsubs
cmp
and
sub
and
and
and
adc
incl
bound
add
and
lock
and
call
sub
fcom
sub
rcr
sub
enter
shrb
mov
jae
incl
add
or
sub
ja
sub
ja
sub
cmp
push
ja
sub
lret
sub
shrl
dec
ja
daa
inc
ja
daa
cmp
daa
xor
sub
ja
sub
ja
sub
ja
sub
ja
daa
or
daa
add
daa
clc
jbe
daa
lock
daa
call
add
jbe
daa
fdivs
shlb
es
shlb
mov
jbe
mov
jbe
push
imul
push
imul
pop
sub
or
sub
fldenv
jbe
lret
sub
sbb
std
sub
std
cmp
std
das
and
or
jae
ja
mov
ja
mov
add
ja
xchg
or
icebp
in
std
jmp
in
std
mov
in
std
mov
in
std
fldenv
push
decl
mov
push
ljmp
push
lcall
push
ljmp
lcall
add
xchg
lcall
insl
incl
add
insl
decl
insl
decl
add
test
lcall
push
pushl
pushl
ljmp
push
mov
or
add
jmp
insl
incl
add
inc
add
in
sub
aas
inc
nop
call
imul
add
add
inc
lahf
in
insb
hlt
mov
pop
jmp
pop
add
mov
bound
mov
bound
add
cmc
imul
sar
xchg
add
frstpm(287
pop
mov
bound
mov
sub
insb
movsl
add
push
mov
bound
hlt
inc
push
out
pusha
pushw
lret
or
out
pusha
data16
imul
in
jae
add
add
daa
stc
iret
ret
fiaddl
clc
mov
daa
ljmp
add
lcall
std
cwtl
ljmp
out
int3
or
add
jecxz
out
in
push
aad
idivb
repnz
mulb
add
or
out
lret
dec
lock
aas
movsl
or
add
in
and
pushf
in
and
jo
push
add
arpl
out
inc
pop
sub
pop
call
in
imul
pop
add
jmp
xchg
in
inc
shlb
lds
mov
jno
test
mov
xchg
clc
insb
mov
stc
jo
inc
ljmp
imul
ds
xor
cmp
add
jmp
ds
fisubs
push
int3
or
add
dec
int3
bound
in
pusha
imul
arpl
jo
pop
pop
push
imul
ja
outsl
jmp
imul
lods
add
imul
jae
dec
data16
ret
dec
std
call
ja
insl
fisubs
add
inc
imul
gs
jns
imul
add
inc
insb
mov
push
push
inc
gs
insb
fs
bound
pop
popa
insb
addl
nop
add
bound
adc
insb
imul
int
fs
bound
bound
je
cmpsl
call
jae
lods
int3
insl
sub
mov
add
clc
dec
jmp
sub
call
jbe
bound
dec
inc
cmpsl
call
jne
cmc
out
aad
jecxz
jmp
shlb
fsubr
fs
bound
jp
xor
jae
aad
jno
fdiv
inc
sahf
xor
pusha
fwait
icebp
jbe
bound
adc
icebp
xchg
sti
or
jo
out
mov
es
fprem
ljmp
add
fldl
shll
pop
fildll
mov
out
shll
loop
loop
out
icebp
sub
mov
testl
lcall
hlt
stos
ljmp
outsl
ret
int
jecxz
pop
repnz
dec
aad
outsl
in
mov
cmp
test
aad
aad
in
dec
push
out
cmp
add
ljmp
out
inc
push
lock
inc
mov
sbb
jmp
stc
inc
cmp
sub
call
call
push
test
add
mov
mov
jno
xchg
outsb
std
nop
inc
enter
cli
bound
popa
loop
fidivl
fsubrs
je
mov
std
int3
inc
fnstenv
addr16
pop
add
adc
inc
push
cmp
jae
inc
adc
push
cmp
insl
add
insb
arpl
pop
push
jb
bound
xor
insl
jno
leave
add
fs
push
ljmp
pushl
inc
js
jns
jb
bound
or
push
lock
pop
outsb
jp
bound
pusha
ficomps
outsl
rolb
insb
stos
push
aad
outsl
outsb
lret
xor
mov
imul
bound
push
pop
insl
adc
inc
xchg
pusha
pop
popa
inc
movb
inc
and
jae
sbb
insb
movsl
shl
xchg
ret
out
fwait
xor
pop
lcall
inc
jne
loop
push
out
data16
pusha
inc
pop
jmp
dec
push
mov
or
add
xor
test
out
sub
icebp
inc
mov
in
jae
and
insl
jmp
xor
xchg
imul
jne
icebp
bnd
ds
cmc
cmc
aad
sbb
jno
dec
call
xchg
out
leave
cwtl
out
int
repnz
pop
or
rcll
ljmp
add
lock
out
lds
fimuls
or
fbld
fidivs
rol
jns
sub
adc
not
int3
and
or
cmc
in
les
out
out
in
cmp
or
add
hlt
pushf
loop
cmc
cmpl
inc
lcall
xor
push
dec
das
clc
bound
dec
cmp
cmp
add
out
cmp
fldl
adc
bound
fdivs
adc
add
adc
std
lret
push
add
std
or
hlt
pop
stc
in
cmp
lock
inc
push
add
stc
repnz
lret
bound
test
xor
outsb
in
lds
lahf
sahf
mulb
outsb
out
stos
jb
pusha
addb
incl
add
pop
bound
bound
dec
push
jb
inc
std
call
push
imul
pop
push
jno
addr16
std
lcall
add
inc
push
repnz
je
pop
insb
dec
cmp
add
add
je
push
jno
pop
add
outsl
inc
mov
dec
filds
outsl
push
loop
inc
push
add
scas
add
pop
jo
and
add
bound
in
jecxz
add
inc
jnp
jae
jp
jae
clc
loop
fiaddl
pusha
lods
int
pushl
sbb
cwtl
sub
bound
out
xchg
aad
insb
movsb
lret
fidivs
ss
bound
loopne
lock
bound
pusha
pop
jb
ds
fs
add
pop
jb
inc
inc
arpl
jae
aas
loop
sub
pushl
mov
jae
movsb
in
jb
jb
jne
dec
loop
push
and
xchg
add
stos
out
in
mov
icebp
repz
out
leave
out
lock
xchg
fmull
mov
dec
fisubrs
faddl
movsl
idivl
mov
or
add
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
add
out
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
add
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
jmp
inc
or
add
or
add
or
add
add
add
pop
or
add
int3
int3
xchg
push
int3
int3
repnz
in
push
mov
xchg
dec
dec
imul
xchg
in
push
cltd
mov
outsl
xor
fimuls
mov
nop
inc
cld
mov
mov
aas
jl
add
faddp
pop
mov
ret
ror
xchg
in
and
mov
nop
inc
loopne
rcr
mov
imul
nop
push
in
lret
jecxz
psraw
dec
dec
nop
dec
clc
mov
sub
inc
call
push
sub
push
aas
nop
push
lock
lret
testl
or
add
add
dec
nop
push
hlt
les
mov
xchg
dec
hlt
pop
rcll
jae
nop
push
lock
xchg
inc
fsubrl
push
mov
add
dec
call
les
test
fistps
mov
mov
adc
or
xchg
dec
in
mov
mov
or
lods
push
mov
mov
jmp
sbb
mov
ror
push
int3
int3
jnp
int3
int3
xchg
push
int3
int3
repnz
in
andl
add
mov
inc
das
mov
std
addl
mov
lret
fildl
inc
add
mov
xchg
mov
imul
inc
add
std
mov
xchg
xchg
dec
inc
cld
inc
or
add
ret
mov
or
nop
inc
cld
int3
adc
mov
call
mov
mov
push
or
lea
cmp
inc
int3
int3
adcl
push
int3
int3
adc
int3
xchg
mov
mov
imul
pop
pop
add
int3
int3
sti
push
int3
int3
adc
int3
xchg
mov
mov
adc
cmp
ror
push
int3
int3
sti
push
int3
int3
xchg
push
int3
int3
adc
push
sbb
leave
xor
inc
nop
inc
clc
pop
jno
inc
inc
mov
pop
jno
pushl
add
int3
aam
push
int3
mov
pop
push
dec
mov
ror
mov
push
or
sti
add
add
dec
mov
les
mov
push
dec
adc
push
dec
push
push
cld
inc
fwait
add
jecxz
mov
sbb
je
popl
add
add
inc
outsb
add
xchg
adc
ror
push
int3
int3
jnp
int3
int3
xchg
push
int3
int3
repnz
in
mov
and
push
inc
inc
ror
push
int3
int3
jnp
int3
int3
xchg
push
int3
int3
repnz
in
andl
inc
aas
xchg
inc
adc
adcb
push
inc
mov
or
jae
push
adc
or
add
add
add
inc
je
mov
xchg
dec
cld
int3
mov
cmp
jno
mov
pop
or
cli
dec
mov
add
sbb
lock
cwtl
adc
imul
inc
or
or
into
or
dec
xchg
push
clc
mov
stc
mov
xchg
push
or
cli
mov
xchg
add
pop
mov
push
dec
xchg
inc
or
add
mov
pusha
std
mov
mov
in
andl
mov
xchg
inc
in
int
mov
xchg
push
call
iret
mov
add
dec
lock
fucomp
add
test
add
mov
or
lock
imul
add
int
mov
adc
push
dec
mov
scas
mov
add
imul
push
aas
or
mov
xchg
dec
or
mov
jmp
mov
nop
inc
hlt
mov
adc
adc
mov
mov
add
mov
mov
inc
aad
mov
aad
or
incl
mov
mov
add
add
call
or
aad
mov
push
mov
sub
clc
mov
out
push
std
orl
sbb
cli
push
mov
mov
adc
push
int3
ret
sti
push
pop
jbe
ljmp
mov
or
ret
fisttpl
repz
jnp
dec
nop
inc
hlt
int3
lret
jmp
push
add
xchg
mov
add
add
fimuls
std
dec
xchg
jecxz
test
adc
push
cmp
inc
inc
nop
inc
clc
pop
pop
add
xchg
inc
clc
pop
jno
std
js
add
mov
mov
push
int3
ret
pop
push
push
mov
mov
ror
dec
int3
int3
xchg
nop
in
mov
add
push
inc
add
inc
xchg
push
add
dec
mov
mov
int3
int3
xchg
nop
in
and
lahf
adc
sbb
ds
leave
das
mov
nop
sarb
mov
xchg
dec
hlt
int3
repz
or
dec
scas
nop
push
clc
into
mov
mov
lret
inc
fdivp
add
add
shrb
outsl
nop
dec
sbb
pop
jne
nop
inc
clc
int3
into
or
mov
nop
inc
adc
pop
mov
sbb
mov
nop
jns
pop
and
lcall
mov
dec
mov
lcall
int3
sti
dec
int3
int3
adc
int3
jb
in
and
lds
or
add
add
pop
or
dec
lahf
mov
jmp
pop
nop
dec
clc
add
testb
mov
pop
push
hlt
movsb
xor
inc
inc
mov
aam
leave
fiaddl
mov
jmp
mov
add
decl
xchg
or
push
int3
hlt
rcll
or
inc
pop
add
xchg
jno
clc
pop
add
xchg
sub
inc
or
mov
push
inc
inc
cs
push
inc
add
inc
mov
add
enter
xor
mov
mov
std
orl
add
mov
jno
push
pop
pop
loop
bound
int3
repnz
in
mov
adc
inc
cmp
add
mov
jmp
inc
inc
mov
int3
int3
adc
int3
jb
in
andl
lds
or
inc
mov
add
into
ret
xlat
mov
push
dec
cmp
mov
mov
cmc
mov
mov
nop
inc
call
inc
mov
cld
adc
call
leave
clc
lcall
ret
out
push
icebp
ljmp
inc
or
testl
push
lock
push
mov
mov
out
inc
pop
std
addl
lds
add
or
add
pop
mov
addb
fisttps
sarb
jno
int3
into
out
outsl
std
pushl
test
rorb
add
mov
test
mov
adc
mov
sbb
divl
adc
lods
inc
pop
mov
dec
or
push
int3
mov
add
mov
push
std
orl
mov
jmp
test
xchg
popa
push
cld
cmp
les
and
xchg
lahf
cld
jp
decl
test
call
mov
or
push
push
inc
inc
or
mov
or
jp
cmpl
xchg
ljmp
inc
or
inc
cmpsl
orl
pop
push
lock
in
push
inc
inc
adc
loope
das
inc
or
add
out
mov
les
add
jecxz
push
mov
or
push
aaa
stos
aam
xchg
mov
orl
xorb
inc
push
addb
sti
push
int3
mov
push
inc
inc
mov
std
orl
mov
add
mov
add
mov
addb
mov
inc
fwait
orb
cld
rcll
or
push
pop
adcb
icebp
jmp
pop
orb
sbb
call
mov
stc
lcall
les
int3
fisttps
inc
or
into
add
xchg
cmpl
xor
inc
mov
decl
add
push
xchg
dec
call
les
cmp
out
into
push
std
addl
jmp
inc
inc
test
push
push
or
adc
inc
dec
or
jnp
ds
adcl
inc
or
pop
orb
adc
call
and
les
sti
out
push
add
push
or
xchg
mov
sbb
or
inc
lods
or
add
push
aam
imul
incl
mov
xchg
inc
add
sti
inc
int3
int3
adc
int3
jb
in
mov
mov
int3
xchg
inc
int3
int3
adc
mov
int3
imul
push
push
or
add
mov
pop
add
test
int3
adc
add
stos
cld
push
push
or
stos
push
std
inc
dec
or
dec
mov
pop
push
xchg
push
call
dec
int3
int3
jb
in
andl
lds
or
add
inc
fdivrl
add
or
repz
add
mov
add
lds
or
add
dec
or
add
push
or
test
mov
add
std
add
or
dec
push
push
inc
inc
or
add
or
inc
push
push
inc
inc
or
add
cmp
cli
leave
call
inc
add
inc
or
add
adc
push
xchg
add
push
dec
push
inc
inc
cmpsb
lock
xchg
mov
mov
pop
push
inc
inc
jle
call
cmp
out
orb
jb
jmp
push
inc
add
cld
mov
cld
adc
inc
dec
add
add
loope
add
or
add
pusha
ret
push
add
push
or
adc
movsb
icebp
push
inc
inc
test
push
push
or
xchg
push
std
inc
dec
add
sbbb
aaa
mov
sub
orl
mov
mov
push
push
test
push
xchg
push
call
les
jp
xchg
jge
cld
sbb
out
jae
jle
loopne
jle
fcoml
popa
scas
sti
mov
cmpsb
add
or
add
cmpsl
or
push
or
inc
mov
mov
sti
push
pop
cmp
ljmp
les
add
mov
add
jg
in
lret
sti
add
test
pop
call
or
movl
mov
addl
inc
clc
sub
out
jae
test
hlt
jp
incl
mov
adc
mov
inc
testl
inc
or
add
add
xor
or
inc
jg
or
mov
sub
sbb
decl
inc
sbb
mov
xor
inc
sbb
mov
pop
push
inc
inc
popa
dec
idivl
push
mov
mov
or
popa
add
inc
or
mov
push
inc
inc
stos
call
call
les
dec
push
push
inc
add
inc
mov
std
test
arpl
mov
push
inc
inc
mov
add
or
add
aam
push
or
pop
jp
std
mov
push
inc
inc
mov
jecxz
test
int3
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
add
inc
or
add
and
jmp
jmp
jmp
jmp
