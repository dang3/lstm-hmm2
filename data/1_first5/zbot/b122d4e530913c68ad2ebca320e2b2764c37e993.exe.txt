in
inc
add
roll
in
roll
lock
hlt
roll
clc
roll
cld
roll
add
inc
add
inc
add
aam
add
inc
add
aam
add
inc
add
aam
add
inc
add
aam
add
inc
add
aam
add
inc
add
aam
add
inc
add
aam
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aad
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xlat
inc
add
inc
add
xlat
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
aad
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
jp
add
fsubrp
nop
xor
ljmp
mov
dec
add
mov
add
and
sub
in
dec
xor
mov
jmp
xor
sub
jge
out
cmp
cmp
loopne
cmp
fbld
mov
jge
in
nop
cmp
loop
cmp
add
add
xor
mov
aas
cmp
pop
cmp
imul
loop
cmp
loope
cmp
loope
cmp
loope
cmp
loope
cmp
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
out
cmp
out
cmp
out
cmp
out
cmp
push
out
cmp
outsb
out
cmp
mov
outsl
cmp
mov
cmpsb
cmp
mov
jecxz
ds
mov
jecxz
ds
jecxz,pt
mov
ljmp
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
add
inc
add
mov
inc
mov
add
es
fs
mov
jb
stos
jns
ficompl
popa
fs
mov
jb
stos
jns
mov
mov
jne
mov
mov
inc
flds
add
mov
inc
add
mov
add
and
add
add
outsl
push
stos
inc
imul
jns
flds
add
mov
popa
outsb
mov
push
flds
add
inc
add
inc
add
fiaddl
fiaddl
sbb
inc
add
fadds
lret
add
mov
inc
mov
test
add
mov
jb
cmpsl
jns
mov
jb
xchg
insb
insb
flds
add
jbe
push
lods
cs
mov
add
mov
add
dec
test
arpl
lods
cs
add
mov
add
sub
jb
pop
mov
outsl
arpl
add
btr
repnz
in
xchg
inc
lret
mov
add
insb
push
shlb
add
mov
outsl
rcr
add
mov
xor
add
movsl
mov
arpl
test
subl
add
jge
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
fldl2t
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
dec
flds
sbb
push
dec
push
jmp
popa
flds
leave
pop
xlat
add
pusha
aam
jmp
rcr
jmp
in
fildl
jmp
xchg
aad
jmp
popa
cltd
add
jno
add
pop
flds
in
popa
fiaddl
call
push
fldl
add
fldl
add
sbb
add
and
dec
faddl
add
faddl
cmpl
fcoml
add
int3
add
mov
faddl
add
faddl
add
stc
add
and
add
mov
add
mov
add
jnp
add
jnp
add
dec
faddl
add
add
cmp
push
cli
add
dec
faddl
add
add
cmp
add
cmp
add
or
add
or
add
bound
add
bound
add
bound
mov
add
add
bound
add
bound
adc
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
enter
add
add
xchg
bound
adc
bound
xor
ljmp
add
bound
add
bound
add
bound
add
ret
popa
into
roll
bound
add
push
add
xor
add
inc
add
fldl2t
add
jmp
add
test
jb
lods
into
bound
inc
cmp
data16
cmp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
add
add
cmp
add
cmp
add
or
add
or
add
sti
fadds
add
fadds
add
flds
add
flds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
fadds
add
add
cmp
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
hlt
inc
add
ds
add
je
add
add
add
inc
add
mov
add
addb
push
inc
add
inc
inc
add
insb
inc
add
outsb
inc
add
add
add
sub
bound
add
fnstenv
inc
data16
inc
pop
fsts
inc
data16
pop
fsts
data16
inc
pop
fstps
inc
pop
fstps
data16
inc
pop
inc
data16
inc
pop
fnstenv
inc
pop
inc
data16
pop
inc
fnstenvs
pop
fsts
add
lret
cmp
fsts
cmp
pop
fpatan
cmp
fnstenv
cmp
data16
cmp
jmp
dec
pop
flds
jge
aad
xchg
test
add
cwtl
aad
inc
test
add
aad
jne
aad
std
cwtl
aad
sldt
add
test
aad
scas
cwtl
aad
pop
cltd
aad
cmc
test
add
test
add
popa
flds
in
aad
jmp
aad
daa
xchg
aad
std
mov
add
jp
add
push
add
pop
aad
addr16
aad
test
add
xor
aad
add
loope
add
add
imul
add
roll
adc
add
add
pop
roll
mov
roll
mov
roll
dec
roll
test
roll
repz
psrld
rcl
add
add
add
movsl
roll
jmp
rolb
cmp
add
adc
add
insl
rolb
dec
rolb
jno
add
stos
roll
movsl
roll
bound
sub
or
add
lock
les
call
sub
bound
add
mov
sub
je
add
pop
sub
xchg
add
adc
add
fisubrs
add
imulb
add
cmp
add
sub
add
pop
sub
mov
add
xchg
sub
ret
fsubrs
add
repnz
out
add
ss
add
dec
sub
add
fldcw
inc
pop
fldcw
xor
fnstenv
xor
fsts
data16
pop
fstps
data16
pop
fldenv
xor
xor
fldl2t
xor
fprem1
xor
xor
fld
xor
fldcw
xor
fxch
xor
add
add
shll
fldenv
data16
pop
fstps
data16
pop
fldcw
xor
pop
flds
xor
pop
xor
loope
pop
aas
data16
lret
push
fldl
mov
push
fldl
mov
fldl
cmp
fldl
dec
xor
add
fldl
imul
fldl
popa
xchg
fldl
movsl
jae
add
jae
add
jae
add
push
fldl
fstl
add
push
fldl
lods
xor
add
xor
add
xor
add
fldl
mov
fldl
jno
fldl
xor
fldl
add
jo
add
xchg
add
movsl
int
add
int
add
roll
adc
add
adc
add
add
add
add
add
fcmovnbe
add
iret
roll
cmp
add
stc
iret
add
ror
add
test
add
xor
flds
addb
add
sti
fadds
add
lahf
add
fwait
pushf
add
xor
add
pushf
add
out
add
sub
add
fwait
add
bound
add
je
add
add
add
inc
add
sbb
bound
add
and
bound
add
add
bound
inc
add
and
bound
add
inc
inc
add
pop
inc
add
jp
add
mov
dec
add
aam
add
xor
add
dec
add
dec
inc
add
and
bound
add
inc
add
lock
add
loop
add
add
add
cs
mov
cs
fsts
data16
pop
fsts
cs
fnstenv
cs
fxch
cs
cs
fldl2t
sub
lds
pop
fldenv
sub
pop
sub
aas
sub
sub
data16
sub
pop
sub
sub
dec
sub
cmp
fldenvs
add
sub
jns
pop
data16
pop
fldpi
sub
repz
pop
sub
test
popf
js
add
js
add
fldl
jmp
fldl
pop
fldl
or
fldl
orl
daa
push
fldl
xor
fldl
cmp
and
add
fldl
imul
add
fldl
dec
cmpsb
fldl
and
add
add
fldl
jmp
fldl
cmc
mov
add
jnp
add
inc
fldl
or
add
cmp
add
cmp
add
dec
fldl
add
fldl
add
xchg
add
mov
add
mov
add
imul
add
jg
add
or
ret
add
add
add
add
add
adc
add
pop
les
aaa
les
inc
les
push
les
ja
add
aaa
mov
add
idivl
add
add
add
cmc
ret
add
ret
mov
add
lret
ret
mov
mov
cs
pop
cs
mov
add
sbb
add
push
sub
add
add
add
sub
enter
add
add
cmp
add
sarb
add
ds
jbe
add
cwtl
ds
sarb
add
les
add
ljmp
bound
add
sbb
add
push
cmp
cmp
add
add
add
loop
add
loop
add
loop
add
loop
add
loop
incb
bound
cmp
add
testl
pop
fnstenv
cmp
jae
pop
add
push
cmp
jns
data16
pop
ftst
add
jge
pop
fxam
add
jp
bound
add
cli
add
out
bound
add
or
fprem1
cmp
call
cmp
add
pop
clc
add
add
add
out
add
jmp
cmp
sarl
data16
mov
cmp
add
sub
add
cwtl
aad
mov
mov
add
aad
push
jns
add
imul
add
push
aad
repz
aad
fstl
add
insb
aad
jmp
aaa
aad
subl
add
daa
aad
popa
lahf
aad
aas
xchg
aad
dec
mov
add
jg
add
je
add
popa
flds
in
xor
or
mov
repnz
and
pop
mov
jb
testb
out
mov
pop
imul
jmp
jae
fcomps
adc
cs
movsl
cwtl
mov
xor
add
or
testb
push
jae
sbb
sub
push
mov
dec
test
cmc
lcall
add
xlat
loop
cmpsb
xor
xor
add
mov
bound
cmp
ja
jb
xchg
or
ss
fisubl
sbb
mov
sub
add
push
xchg
lahf
push
xor
jge
inc
fimull
push
fsubs
mov
mov
mov
dec
sbb
and
dec
in
mov
repz
mov
mov
jb
sbb
test
xor
push
fsts
bound
cs
fidivrl
push
add
add
bound
jmp
popf
push
sub
jno
bound
jmp
shll
push
jmp
mov
test
xchg
jmp
scas
lret
cmpsl
or
lea
jmp
scas
lret
xchg
push
daa
aaa
mov
xchg
stos
bound
cs
push
sti
xor
jl
jmp
add
test
push
jnp
lea
jmp
cmpsl
sub
daa
cltd
cmp
push
daa
adc
fcmovb
cs
push
jmp
dec
daa
adc
lret
popa
and
inc
mov
sbb
adc
pusha
test
cmp
iret
jnp
adc
shrb
cmp
push
daa
adc
fld
scas
jmp
and
add
add
out
outsb
or
adc
fldcw
scas
ja
les
adc
mov
addl
mov
adc
push
pop
jg
lods
inc
out
iret
adc
outsl
mov
mulps
cli
loope
dec
loope
push
movsb
mov
sbb
orb
or
adc
movsb
add
hlt
dec
std
ljmp
lahf
jns
mov
iret
add
mov
dec
push
xchg
aaa
push
iret
adc
js
stos
jnp
inc
lcall
adc
xlat
add
bound
push
sahf
push
jl
shlb
mov
andl
mov
push
lods
pop
add
mov
stos
lods
sahf
push
in
shlb
pusha
add
mov
jecxz
or
push
jo
add
cmp
xor
jae
stos
add
ja
adc
mov
clc
repnz
cs
mov
pop
roll
xor
mov
mov
hlt
or
sarl
sbb
fstps
cmc
adc
add
jmp
xchg
fabs
add
cltd
test
add
add
stc
add
mov
add
add
cltd
test
add
jmp
add
or
fldl2t
mov
fyl2x
add
imul
and
loope
sbb
add
jmp
add
fsubr
add
jmp
add
add
pusha
fsts
jmp
popa
flds
jmp
popa
flds
dec
pop
flds
jmp
pop
jmp
add
pop
out
jmp
pop
leave
add
outsb
sbb
stc
pop
roll
jmp
pop
mov
add
imul
add
pop
cltd
add
outsb
stc
clc
pop
filds
jmp
pop
loope
jmp
pop
ret
pop
addl
jmp
pop
call
add
jnp
sub
mov
mov
mov
or
jnp
mov
jnp
dec
add
lock
add
cmp
push
add
rclb
push
shl
add
fildll
add
shlb
shlb
or
enter
or
add
shll
or
test
or
add
sti
roll
lret
aam
add
fimuls
add
rcrl
lret
aam
add
sarl
sarl
mov
fadds
bound
push
pop
lock
or
lock
lock
repnz
bound
add
or
repnz
bound
add
or
repnz
or
bound
add
or
add
add
or
or
repnz
or
bound
add
or
repnz
or
repnz
fldl2t
or
jmp
add
fldl2t
or
fsubr
or
jmp
or
jmp
or
fyl2xp1
add
fldl2t
or
add
push
fldcw
or
add
fldl2t
or
jmp
add
fldl2t
or
or
or
fsubr
or
or
fsubr
or
jmp
add
fldl2t
or
jmp
or
fadds
frstor
add
pop
addl
imul
add
data16
jmp
imul
add
push
roll
jmp
imul
add
pop
test
jmp
imul
jmp
imul
add
pusha
iret
add
pop
js
jmp
data16
add
pop
fadds
jmp
imul
add
pop
mov
sbb
lret
aad
add
into
jns
mov
cmp
mov
rolb
mov
adc
jnp
imul
mov
mov
jnp
or
jnp
mov
dec
into
dec
add
repnz
add
cmp
push
add
adc
add
xlat
sub
cmp
jne
or
xor
add
xlat
or
add
into
and
add
int
add
int
add
int
add
aam
add
add
lock
lock
bound
push
lock
lock
incb
pop
lock
lock
lock
or
repnz
bound
add
or
repnz
bound
add
or
add
add
or
or
bound
add
or
repnz
or
or
and
jmp
add
jmp
or
jmp
add
fldl2t
or
fldl2t
or
jmp
add
jmp
or
jmp
or
jmp
or
add
add
fyl2xp1
add
jmp
or
sub
add
jmp
or
jmp
add
jmp
or
fadds
jmp
imul
jmp
add
imul
add
bound
imul
add
pop
pop
add
in
jmp
imul
add
imul
jmp
inc
jmp
imul
add
and
add
imul
add
add
add
imul
add
int
add
rolb
add
rolb
add
add
add
incl
lret
rcrb
lret
rcrb
add
cmp
mov
js
mov
cmp
jnp
roll
mov
str
shrb
add
mov
jnp
or
dec
rorb
add
int
add
add
dec
rclb
rclb
push
shl
add
ljmp
add
shlb
shlb
sti
int3
leave
add
decb
add
add
or
or
lock
lock
lock
bound
incb
lock
or
lock
lock
or
lock
bound
push
lock
or
lock
or
repnz
bound
cld
add
or
add
add
or
bound
cld
and
or
fldl2t
or
jmp
cld
push
fldl2t
or
jmp
or
jmp
or
fldl2t
or
fldl2t
or
fldl2t
or
jmp
cld
and
jmp
or
jmp
cld
push
fldl2t
or
fldl2t
or
add
add
fldl2t
or
fldl2t
or
fsubr
or
fyl2xp1
cld
data16
or
sub
flds
ficompl
movl
jmp
pop
push
add
dec
add
imul
jmp
imul
add
pop
xchg
add
pop
out
clc
mov
fwait
add
pop
fildl
jmp
pop
pop
add
sahf
jbe
jmp
pop
mov
add
jle
add
imul
jmp
imul
add
dec
lea
jmp
imul
add
cmp
str
incl
add
ljmp
sti
das
add
std
roll
iret
or
or
pop
add
pop
add
std
mov
add
dec
jg
mov
std
loope
mov
push
add
std
xchg
add
ja
jnp
aaa
add
roll
jp
adc
mov
add
daa
add
mov
dec
incb
add
xchg
cmp
inc
add
std
icebp
add
or
lock
push
lock
adc
and
add
or
lock
je
lock
xor
lock
lret
or
lock
and
lock
stos
lock
add
lock
test
cli
inc
lock
ljmp
cli
pop
lock
sbb
lock
lcall
cli
jl
lock
cmp
lock
fisubl
or
lock
insb
lock
sub
lock
mov
bound
sti
mov
add
add
jmp
cli
cmp
stc
or
jmp
sti
push
sti
and
fimull
inc
fldl2t
sti
nop
fldl2t
sti
push
fldl2t
cli
and
clc
or
jmp
sti
inc
fldl2t
cli
add
jmp
sti
loopne
jmp
cli
fyl2xp1
or
jmp
sti
dec
fldl2t
cli
hlt
or
fldl2t
sti
or
jmp
add
jmp
or
jmp
sti
cmp
jmp
jmp
dec
arpl
jmp
cmp
clc
push
add
sub
add
push
clc
fisubrl
add
or
jmp
clc
es
push
add
jmp
mov
add
add
leave
pop
add
leave
sahf
add
mov
loop
jmp
test
push
add
push
add
mov
jmp
js
add
push
add
imul
mov
add
repz
cmp
dec
add
std
add
loop
add
add
or
adc
add
add
cmp
add
add
loop
add
loope
inc
sti
loope
add
loope
add
loop
add
loope
add
loope
add
loop
add
loope
add
loope
sbb
loope
push
xchg
popa
add
add
lock
add
call
or
bound
add
or
add
pop
shll
add
add
add
call
add
cli
add
in
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
fldpi
add
jmp
fldpi
add
jmp
fldl2e
add
ljmp
fldl2e
add
in
add
in
fldln2
add
in
fldlg2
add
in
fldlg2
add
in
fldl2t
add
stc
repnz
fabs
add
fninit
push
pop
add
out
add
jmp
add
jmp
add
call
add
jmp
fldpi
add
add
popa
flds
ljmp
add
popa
flds
in
popa
flds
in
flds
out
popa
flds
out
flds
out
popa
flds
out
flds
icebp
popa
flds
icebp
popa
flds
loopne
flds
loopne
flds
repz
flds
repz
flds
loop
flds
loop
flds
cmc
popa
flds
in
popa
flds
in
flds
fsubl
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
add
xlat
add
jnp
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
xlat
add
dec
xlat
add
cmp
add
cmp
add
aaa
xlat
or
fisttpll
add
fisttpll
add
or
out
or
cmpsl
fisttpll
add
fisttpll
add
or
ja
or
aaa
fisttpll
add
or
xchg
fisttpll
add
or
aaa
fisttpll
add
or
dec
fisttpll
add
add
bound
add
bound
or
add
bound
add
bound
or
add
bound
add
bound
add
out
add
out
or
add
bound
add
movb
inc
add
bound
add
add
bound
or
add
bound
add
bound
add
bound
add
bound
or
out
add
add
scas
add
daa
add
push
xchg
pop
fxch
add
inc
add
add
add
incl
push
ja
pop
fnstcw
add
mov
add
jg
pop
fincstp
add
testl
pop
fldenv
add
fstps
add
add
fnstcw
add
fnstcw
pop
fnstenv
add
fldcw
add
aas
add
flds
mull
add
loope
call
popa
loope
push
popa
loope
sub
add
pop
loope
mov
add
popa
loope
dec
data16
clc
popa
loope
js
loope
mov
data16
mov
data16
js
loope
clc
popa
loope
lock
loope
jo
loope
and
add
pop
loope
nop
popa
loope
inc
pop
loope
shlb
add
add
popa
loope
xor
add
mov
fmull
add
fisttpl
add
fmull
add
fisttpl
add
or
neg
or
inc
fmull
add
or
out
or
xchg
fisttpl
add
fmull
add
or
neg
or
cmpsb
fisttpl
add
fisttpl
add
fimull
add
fmull
add
fisttpl
add
add
add
or
aad
add
or
or
sahf
aad
add
aad
add
or
bound
add
bound
add
in
or
add
add
add
bound
or
add
or
add
roll
or
add
bound
add
bound
add
bound
or
add
add
jmp
or
add
bound
or
add
bound
add
or
add
add
rolb
flds
imul
add
fsts
add
fsts
add
imul
add
flds
add
flds
add
imul
add
add
add
mov
add
fsts
add
adc
add
loop
pop
fsts
imul
add
flds
add
fptan
add
repnz
out
add
out
pop
fldcw
imul
add
cs
fldenv
add
add
popa
loop
into
popa
loop
pusha
loop
dec
data16
inc
popa
loop
push
data16
push
popa
loop
mov
add
popa
loop
mulb
add
loop
jbe
loop
sahf
popa
loop
xchg
pusha
loop
push
data16
push
popa
loop
fisubs
add
pusha
loop
pop
data16
push
popa
loop
jle
loop
jbe
loop
popa
loop
mulb
add
popa
loop
out
pusha
loop
popaw
loop
pop
pusha
loop
add
add
or
xlat
or
aam
or
adc
or
adc
or
and
or
xchg
xlat
or
je
or
push
fmuls
add
xlat
or
xor
or
fs
add
or
add
or
xlat
or
in
or
push
fmuls
add
add
or
mov
or
movsb
xlat
or
in
or
xlat
or
xor
or
inc
add
xlat
pop
add
pop
add
add
bound
add
rolb
lock
bound
add
bound
add
fadds
clc
add
bound
add
call
add
bound
pop
faddl
bound
pop
bound
pop
bound
in
add
bound
pop
incl
or
add
bound
add
bound
add
bound
add
filds
fldl2t
add
stc
add
loope
pop
fyl2x
add
in
add
aad
addr16
add
int
addr16
add
sti
add
jecxz
pop
fpatan
add
out
add
xlat
add
out
pop
fxch
add
add
add
call
add
loopne
pop
f2xm1
add
in
add
aam
addr16
add
int3
add
ljmp
add
repnz
out
add
add
add
pop
fildl
in
fiadds
out
loopne
loope
rorl
loope
rorl
lock
rorb
lock
rorl
jecxz
rorl
repz
add
push
rorl
rep
rorl
loop
aam
loop
aam
repnz
aam
repnz
aam
in
aad
fstpl
or
push
aad
in
insl
aad
in
aad
fstpl
or
push
aad
in
insl
aad
in
or
hlt
push
or
in
or
add
or
or
or
lret
or
leave
push
push
sub
lret
or
leave
push
push
or
leave
push
push
int
push
push
mov
leave
push
push
int
push
push
int
push
push
mov
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
lret
decl
minps
adc
push
out
testl
adc
adc
adc
in
pop
adc
je
adc
insb
pop
push
pop
push
movhps
dec
or
sbb
sbb
dec
fcomps
jp
sbb
jp
sbb
imul
sbb
sbb
pop
stc
sbb
pop
or
sbb
sbb
dec
ficompl
sbb
sbb
js
sbb
push
cli
sbb
pop
cli
sbb
pop
or
sbb
sbb
dec
flds
sbb
add
jns
repnz
repnz
loop
pop
ret
pop
ret
dec
inc
lds
pop
jbe
cmc
pop
outsb
data16
pop
push
dec
inc
lds
pop
jbe
cmc
pop
outsb
data16
pop
push
dec
int3
and
add
jg
cld
and
hlt
and
in
and
in
pop
fsubl
push
les
aam
les
add
sbb
hlt
add
in
add
in
sbb
jmp
pop
fildl
icebp
imul
or
pop
aad
fcoml
testl
add
add
push
out
data16
fsts
adc
push
leave
adc
jo
adc
jo
adc
jae
adc
jae
adc
push
enter
enter
int
aad
int
std
jne
adc
insl
int
cld
je
adc
add
lret
adc
push
into
push
push
pop
into
push
push
dec
into
push
push
dec
int
pop
dec
int
pop
sbb
pop
pop
or
pop
pop
adc
sbb
adc
sbb
arpl
sbb
arpl
sbb
adc
sbb
adc
sbb
add
sbb
add
sbb
adc
sbb
rcrb
rcrb
sarb
sbb
ret
sbb
mov
sbb
xchg
rcrl
popa
mov
sbb
call
sbb
pop
clc
sbb
pop
clc
sbb
dec
pop
sbb
dec
pop
sbb
jns
sbb
jns
sbb
imul
pop
sbb
pop
sbb
pop
sbb
add
add
out
add
out
add
hlt
add
std
add
add
sti
add
clc
add
testb
in
add
add
loopne
add
add
clc
add
bound
add
add
bound
add
fstps
add
fldenv
add
fldcw
add
leave
add
mov
add
add
add
fldl2t
add
jmp
add
call
add
ljmp
add
loope
add
flds
fabs
add
or
fyl2xp1
add
add
add
sub
add
fldcw
fldcw
add
fldcw
flds
jmp
flds
jmp
arpl
add
pop
flds
jmp
push
flds
jmp
and
jmp
sbb
add
fdivs
jle
out
inc
xchg
rcrb
pop
int
jo
mov
jmp
sbb
add
test
js
enter
or
add
sub
mov
and
fwait
xor
jae
mov
test
cmp
insl
fisubrl
hlt
inc
pusha
roll
dec
insl
imul
std
pop
adc
mov
push
arpl
out
cli
jbe
or
or
pushf
pusha
aad
stos
addr16
add
dec
pop
or
movsl
xor
aas
cmp
mov
lods
sbb
filds
xlat
fsubl
call
repz
push
xlat
lcall
mov
adc
mov
lret
add
mov
movsb
aad
or
add
mov
in
or
inc
fdivl
jecxz
lret
aad
jp
mov
movd
in
ret
sarb
jp
mov
or
clc
lcall
insb
push
jle
inc
dec
call
push
dec
jb
and
inc
push
das
add
jmp
xchg
fs
repnz
arpl
sub
push
in
fnsave
lret
push
jl
push
mov
sbb
jnp
call
xor
inc
loop,pn
and
mov
push
out
mov
or
call
xchg
push
xchg
cmp
scas
sub
inc
lods
mov
add
test
cltd
jnp
add
cmp
flds
fidivl
inc
sbb
stos
mov
int3
fst
jbe
push
inc
push
fsts
mov
int3
adc
cmp
insl
and
popf
jbe
jle
ja
out
pop
jno
ljmp
or
or
ficomps
pop
push
mov
mov
jge
ror
and
push
mov
lcall
add
add
and
arpl
sub
push
ljmp
add
push
std
jb
push
jecxz
sti
js
add
insl
or
rclb
xchg
pushf
jbe
or
inc
pop
jge
dec
stc
jp
xchg
add
and
mov
sarb
sbb
imul
repnz
aaa
frstor
add
mov
pop
mov
pusha
arpl
in
shll
leave
sub
dec
sbb
mov
aas
push
jmp
dec
bound
call
or
xchg
cmp
das
movsb
pusha
mov
aad
cli
inc
test
mov
jo
test
xchg
shrl
and
push
xor
or
out
cmp
leave
cmp
add
inc
clc
mov
mov
pop
mov
imulb
mov
dec
mov
and
ret
rclb
push
ficomps
adc
push
out
insl
pusha
cltd
std
or
sub
or
pop
addr16
pop
aam
ds
cmc
sub
mov
add
adc
push
addb
add
mov
fdivl
hlt
pop
mov
cltd
into
mov
cmpsb
xchg
call
ja
aam
adc
lret
cmp
push
dec
mov
dec
dec
push
fstps
pop
jae
enter
dec
shlb
cmp
into
ret
xchg
movsl
push
add
ja
mov
cmpsl
testb
add
imul
cltd
jo
ret
and
lods
lahf
add
dec
in
aas
mov
inc
sbb
fisubs
mov
and
cmc
out
sbb
mov
add
and
fwait
or
adc
sti
push
sahf
dec
add
pop
inc
jae
xchg
das
js
jmp
jno
push
cmp
sub
shl
mov
jecxz
roll
add
add
fistps
add
sub
popa
flds
test
hlt
pop
add
das
sub
pop
mov
jbe
jne
pop
push
les
dec
add
enter
shll
out
cli
adc
mov
outsb
or
sahf
or
cwtl
xchg
ret
mov
cmc
js
sbb
popa
jbe
scas
cs
mov
inc
push
cltd
sbb
add
add
pusha
addb
xor
fwait
inc
xchg
rcll
out
clc
insb
lcall
pop
int
and
adc
adc
mov
pusha
cmp
adc
aam
cli
in
fisubs
sbb
pusha
pop
fwait
xchg
inc
sahf
ljmp
dec
pusha
sbb
sub
in
sbb
add
add
clc
inc
lea
or
rclb
xchg
daa
imul
les
shlb
shrb
outsb
lahf
push
insb
jg
push
cltd
shrb
xchg
repz
call
daa
sbb
fstl
xor
inc
stos
leave
movsb
xor
shrb
fwait
xsaveopt
test
push
imul
in
ret
mov
hlt
jecxz
xchg
out
loopne
sahf
xor
jae
mov
dec
cmp
jmp
jnp
out
out
popa
push
out
push
fstps
cmp
js
mov
add
movsl
jmp
es
sbb
movsl
xor
xchg
jae
push
rolb
or
sbbb
fs
cwtl
mov
push
test
cmpsb
dec
dec
lods
push
sbb
and
dec
mov
sub
adc
mov
loope
popf
dec
push
loopne
add
enter
rcl
daa
push
cli
adc
jecxz
jle
cs
imul
sbb
sub
loop
push
fldcw
push
popa
push
mov
out
mov
add
add
outsb
rcl
push
cmp
int3
xchg
into
mov
add
cmpsb
test
popa
cmpb
ss
and
mov
xchg
scas
adc
sub
pop
and
fldcw
rol
je
out
repz
mov
insl
rorl
fdivrs
xchg
mov
dec
add
mov
inc
jno
inc
pop
push
ret
pop
mov
sub
push
add
or
mov
daa
ss
add
add
and
lock
hlt
daa
imul
inc
or
jo
hlt
sbb
aad
int3
xor
cmpsl
popf
sub
fsubrl
imul
cmp
pop
cli
jecxz
inc
add
add
call
pop
movsl
mov
pusha
pop
shrb
pushf
bound
mov
xchg
mov
call
loop
dec
mov
fsubs
jmp
jg
out
add
cli
inc
mov
mov
mov
leave
sub
sbbb
aam
lahf
fbld
shrl
xor
add
add
and
out
mov
inc
test
out
lcall
cli
pop
add
mov
push
test
cmp
mov
push
cs
jno
arpl
xchg
ja
add
popa
sub
std
cmpb
inc
adc
mov
push
pop
cmp
arpl
fs
int3
imul
pop
jns
add
and
inc
xchg
out
and
andl
cmp
loopne
push
xchg
std
or
inc
adc
int
jp
test
push
mov
mov
test
ror
mov
adc
add
nop
aas
push
mov
jo
call
add
inc
pop
out
addl
arpl
mov
jg
push
into
push
out
adc
xor
mov
sbb
and
add
ret
mov
inc
add
or
pusha
xchg
lret
add
shrl
push
cmp
rorl
cmc
push
xchg
or
pop
test
or
mov
pushf
or
add
add
repnz
jle
mov
mov
fs
cld
cs
sub
in
pop
add
stos
dec
and
mov
jo
divl
jecxz
jae
cmp
scas
dec
cmp
jecxz
std
dec
jl
mov
dec
loop
dec
pop
pop
dec
sbb
inc
cmp
adc
mov
daa
or
pop
xchg
pushf
rol
ficoml
imul
fsts
add
js
or
inc
js
cmc
test
jl
mov
aaa
mull
aaa
add
repnz
cli
or
ds
ljmp
add
leave
sbb
scas
and
mov
pop
mov
sub
icebp
std
cmpl
clc
dec
pop
mov
insb
dec
popa
hlt
sub
rolb
cmp
inc
and
enter
outsb
sub
sti
pop
dec
or
xchg
dec
add
pop
sbb
inc
aad
pushf
call
xchg
insl
data16
cmpsl
mov
shrl
cld
subl
inc
imul
or
jbe
push
push
jae
iret
test
pusha
cwtl
push
shlb
ja
dec
lret
xor
data16
inc
mov
dec
idivb
inc
mov
sub
push
push
dec
and
icebp
dec
jnp
xor
sbb
jno
xchg
inc
jle
xlat
inc
add
lods
addb
inc
js
push
inc
xchg
imul
inc
mov
in
out
push
pop
push
movsl
xor
mov
pop
lcall
sbb
jl
cs
mov
pop
test
and
jno
pop
lret
pop
aas
ljmpw
pop
and
outsb
pop
mov
xor
lods
add
mov
inc
cmp
xlat
inc
cmp
out
out
mov
in
ljmp
mov
add
add
sahf
mov
in
mov
sub
insl
adc
xor
xchg
test
call
adc
js
sub
imul
fwait
add
add
push
mov
inc
xor
inc
or
pop
fmul
aaa
clc
lea
adc
inc
js
sub
sub
jnp
sub
add
sbb
scas
jno
aaa
test
out
lods
lds
xchg
lods
mov
dec
movsb
mov
lret
mov
imul
test
adc
cmpsl
cmp
movsl
xor
out
xchg
push
fisubrl
xchg
movsb
dec
or
xchg
mov
jae
adcb
mov
sbb
mov
add
pushf
add
and
test
lds
cmpsl
jg
inc
cmp
fisttpl
add
je
inc
popf
xor
xchg
movsb
out
xchg
shrl
dec
lahf
pop
int
popf
mov
pushf
or
pop
inc
cwtl
xor
fstcw
push
lea
mov
lcall
leave
pop
mov
aad
xchg
inc
xchg
mov
outsl
orb
jmp
sbb
lods
sbbb
sub
ja
xchg
mov
jbe
stc
test
dec
loope
stos
bound
movsl
stos
outsl
out
jmp
scas
jmp
lahf
lods
lods
rcll
int3
jp
cmpsb
test
je
mov
mulb
adc
mov
fnclex
les
sbb
test
mov
mov
mov
and
mov
out
mov
repnz
cld
adc
mov
cmp
mov
mov
sbb
outsb
mov
mov
bound
mov
enter
push
addr16
fldl
imul
add
xchg
negl
push
or
movsl
mov
lea
sbb
push
mov
cmc
bound
dec
cmp
xor
jp
adcl
and
jnp
add
or
loopne
into
daa
mov
cli
adc
pop
movsb
jge
mov
fst
lods
iret
dec
je
jae
fsts
daa
mov
dec
cwtl
rcl
jo
jns
lret
aam
cmp
cmp
pop
add
mov
inc
imulb
xchg
cmp
js
add
xchg
mov
in
xchg
jmp
push
outsb
repz
mov
xor
dec
fwait
cmp
movsb
sub
rcl
inc
and
cmp
mov
pop
or
in
mov
xor
add
in
or
pop
adcl
mov
add
lcall
jnp
int
push
leave
adc
mov
jg
aas
jno
das
sbb
js
adcl
adc
enter
gs
pop
mov
int
out
push
jo
std
hlt
in
dec
insb
add
inc
push
adc
dec
ret
aam
cmpsb
mov
movsb
fstpl
incb
inc
pop
lds
out
add
orl
add
push
or
xor
in
sub
insb
xchg
clc
outsb
daa
cmp
dec
fwait
xorl
xchg
add
iret
stc
inc
mov
fdivrp
or
xor
xchg
lock
cmpsl
xchg
inc
sub
fwait
push
leave
jmp
icebp
jno
mov
leave
mov
jle
arpl
cmp
imul
adc
icebp
sarl
jns
scas
pop
in
or
pop
or
pop
inc
jmp
mov
int3
scas
aaa
push
sbb
pop
and
std
call
sti
sub
pop
push
cmpsl
push
pop
divl
xchg
add
popf
in
cld
jmp
pop
in
cmpb
xor
xchg
jp
lcall
fcom
push
push
pushf
das
xor
ret
xchg
data16
push
mov
cld
stos
jmp
dec
or
mov
sub
popf
call
popa
std
mov
dec
inc
insl
stos
cltd
sub
aaa
cmpsl
test
mov
lret
mov
dec
adc
jbe
and
in
cli
js
mov
cmpb
pop
xchg
mov
pop
aas
roll
pushf
loop
test
pop
xor
mov
jecxz
cmp
gs
pop
arpl
or
jno
adc
mov
scas
jge
test
mov
mov
test
xchg
inc
mov
loop
or
fdivrl
fyl2xp1
pusha
aas
popa
inc
xchg
jae
sbb
or
jge
cmpsb
xchg
loope
push
cmp
sub
mov
ja
call
push
fstl
mov
repnz
das
sti
push
sahf
adc
shlb
or
leave
sbb
jle
mov
xchg
mov
test
push
addr16
cmp
repz
sub
lahf
add
enter
scas
xor
mov
js
add
cmpb
push
call
icebp
pop
xlat
subb
aam
xor
jle
sbb
ret
outsb
cmp
push
outsl
lret
faddl
mov
add
in
dec
add
leave
adc
iret
jne
jg
ret
mov
cmp
pushf
cmpsb
inc
adc
nop
cmpsl
sahf
ss
or
mov
lock
adc
outsl
or
aas
test
and
dec
or
imul
outsb
cmp
fstpt
pop
jne
xchg
cmpsl
insl
mov
enter
and
add
add
bound
xor
call
or
les
sub
in
and
xchg
inc
and
jo
mov
jmp
fidivrl
push
jl
pop
addr16
push
push
xor
jnp
repz
lahf
sarb
ds
mov
sub
fists
les
cltd
inc
sub
pop
sbb
lret
add
cmp
or
shrl
inc
xchg
pushf
sub
sbb
and
mov
test
mov
or
or
sub
sub
pop
fwait
cmpsb
mov
sbb
sti
fldcw
and
sbb
int
sar
push
iret
mov
fdivrs
mov
sub
enter
pop
scas
xchg
and
scas
fs
mov
sbbl
js
mov
push
dec
cmp
adc
inc
fsubrl
lahf
mov
xchg
call
mov
mov
js
push
mov
xor
shll
movsl
xor
xchg
mov
add
xor
mov
repz
or
insb
xchg
pop
add
dec
hlt
xchg
pop
divl
fsubr
cli
add
mov
mov
shrl
fadd
cmp
call
ljmp
sbb
subb
mov
inc
mov
daa
pusha
pop
adc
push
into
cwtl
and
je
and
loop
xchg
filds
sti
sub
dec
in
fldcw
jp
mov
adc
add
and
pushl
xchg
add
adc
push
and
fldt
adc
aam
in
and
fldl
leave
lret
cwtl
xor
test
imul
jecxz
pop
pop
dec
repnz
insb
iret
aad
addl
mov
scas
dec
loop
inc
push
sar
fdivs
ja
fldpi
mov
push
pop
lret
and
jae
imul
sub
jno
push
movsl
rcrb
lea
add
cwtl
add
shll
incb
add
add
mov
push
sub
push
mov
inc
popa
mov
mov
mov
lea
pop
xor
sar
les
mov
movsl
ds
shll
mov
shlb
add
cmp
inc
sub
es
add
pop
lock
loopne
jmp
imull
bound
popa
xchg
inc
lods
ret
pushf
push
fdivrs
dec
out
daa
dec
jnp
mov
dec
pop
sbb
cmpsl
mov
movsl
pop
inc
xchg
xor
add
pusha
jecxz
mov
cmc
sub
fwait
xchg
into
sub
xchg
pop
xchg
popf
mov
add
je
mov
aad
pop
mov
mov
sbb
push
xchg
mov
dec
daa
add
mov
or
iret
push
test
pusha
aam
aas
sub
gs
push
adc
es
sbbb
sub
cmp
mov
mov
imul
add
and
clc
cmp
subb
pop
int
or
pop
sub
jbe
arpl
inc
ja
mov
push
adc
aad
pop
jl
sahf
call
scas
imul
add
add
shl
fxch
inc
bound
jmp
push
add
hlt
addl
mov
or
es
loopne
push
int
sbb
das
fisubl
ja
push
mov
sbb
mov
add
stos
cmp
dec
dec
sahf
lahf
ljmp
mov
repnz
jbe
ret
push
xchg
xchg
sahf
push
mov
addr16
mov
push
mov
stos
addr16
push
sub
and
ljmp
sub
ss
mov
ret
fld
or
addr16
out
xor
mov
loopne
pushf
mov
cmpsl
push
ds
mov
mov
mov
mov
in
bound
xchg
push
test
push
or
stos
inc
leave
call
mov
push
mov
cmp
add
in
fimuls
in
aad
jae
sti
shlb
sbb
dec
imul
cs
inc
sbb
sub
out
jl
cld
mov
dec
xor
and
cmp
pusha
clc
jmp
mov
stos
repz
and
xor
add
add
stos
and
jg
sub
outsb
mov
lock
scas
or
sub
test
imul
loopne
xchg
jno
jo
jbe
xor
das
lods
testb
mov
dec
dec
je
push
xor
fs
jns
or
js
and
mov
and
cmp
jecxz
add
cld
jle
mov
sub
sub
das
scas
mov
fdivrs
adc
fld
push
cmp
cmc
dec
xchg
sub
mov
cltd
add
outsb
xor
arpl
dec
jl
lret
pop
push
sbb
ds
mov
insl
cltd
push
cld
cwtl
test
xchg
jl
rorb
xchg
and
xchg
add
jg
ss
jns
test
xchg
cld
adc
movsb
lret
xchg
jecxz
leave
fs
imul
mov
cmp
jne
add
gs
or
std
inc
pop
out
cmc
dec
iret
iret
mov
lock
mov
js
and
dec
xor
dec
bound
ja
sahf
iret
js
out
adc
add
add
mov
xor
fchs
sub
enter
dec
movsl
xor
mov
xor
push
dec
scas
push
je
jo
dec
mov
push
xchg
rolb
or
lock
fsubs
xchg
sahf
daa
and
xchg
dec
jecxz
stos
jne
push
ret
fldt
push
sbb
inc
inc
xlat
test
adc
add
and
lods
sbb
filds
sahf
pop
jmp
fmul
ljmp
sbb
sub
sub
pop
fstl
ss
push
dec
add
fistl
jecxz
push
jb
aaa
xchg
pop
mov
rclb
popf
pop
and
and
mov
jne
push
shlb
mov
push
test
sub
imul
sbb
lods
loope
shrb
daa
ljmp
dec
hlt
ljmp
testb
repz
in
sbb
data16
js
lea
clc
add
dec
int
cld
dec
cld
jnp
punpckhdq
inc
or
rcrb
jg
test
adc
std
nop
inc
xor
ja
ret
fbstp
add
add
rcl
cmc
rcrl
fadds
mov
inc
pusha
dec
cltd
ja
punpckldq
int3
pop
insl
test
jne
and
fidivrs
inc
mov
sahf
push
lcall
test
cwtl
inc
dec
jmp
cli
sarb
leave
andl
out
mov
cli
cmpsb
out
add
xor
pop
inc
cmp
cwtl
repz
lret
add
or
dec
jne
mov
xchg
mov
negl
ja
push
lods
jo
nop
fisttpl
sarl
or
into
jp
ret
cmp
jne
hlt
xor
or
lret
fs
arpl
adc
mov
xor
mov
ret
fsubs
add
sti
inc
inc
outsl
frstor
scas
into
jge
lock
mov
jb
mov
movsb
hlt
ret
xor
mov
or
call
jo
iret
push
cmc
aam
jb
sbb
jp
out
call
lds
ljmp
adc
cld
add
in
jbe
imul
dec
push
out
xor
mov
pusha
cmc
jo
xchg
jne,pn
add
mov
loope
dec
push
repz
std
or
cmp
jnp
in
cmc
mov
pop
filds
jecxz
ror
cmp
add
hlt
sti
sub
leave
cli
repnz
fdivs
sbb
adc
lcall
mov
roll
add
add
aad
or
ret
cmpsl
mov
scas
jecxz
or
pop
or
enter
outsb
add
ret
test
test
aam
mov
mov
jecxz
push
adc
cmpsl
sbb
xor
sbb
cmc
dec
dec
sub
es
jnp
and
repz
pusha
pop
fistps
jb
popa
inc
jae
or
lret
testl
mov
sar
out
dec
rcrb
jbe
cltd
cmp
and
sub
mov
lcall
pop
cmp
insb
in
mov
inc
jmp
inc
push
sar
add
pop
aam
adc
add
in
int3
stc
and
mov
fimull
push
pusha
mov
jg
mov
fldt
xchg
popf
pop
xlat
push
xchg
push
mov
test
mov
lret
cmpb
jne
xor
adc
jne
cmp
arpl
fdivs
sub
dec
sub
sar
daa
jge
sub
add
and
inc
cwtl
sub
adc
add
jnp
into
cmp
arpl
adc
in
adc
mov
pop
sbb
sti
jo
pop
dec
mov
inc
pushf
xchg
jecxz
mov
pop
in
xchg
lcall
lds
lahf
movswl
ds
js
or
xchg
mov
add
pop
xchg
add
popf
addr16
push
out
push
push
xor
lds
add
mov
cmp
add
int3
inc
movsl
pusha
rorl
rclb
jns
mov
lea
xchg
xchg
shll
jb
sbb
xchg
inc
popa
dec
jnp
pop
pop
ret
and
cmp
in
cmp
adc
stc
sbb
push
insl
inc
sti
pop
xchg
lods
int3
xor
popa
xor
in
add
xchg
jecxz
dec
enter
or
rcr
pushf
dec
in
rorb
aad
addr16
out
fnstenv
movsb
add
aaa
iret
xor
mov
pop
push
cmc
adc
xor
jle
mov
push
int3
clc
cmp
mov
inc
jecxz
test
and
jp
xor
add
inc
sub
rcrb
fdivs
xchg
and
pop
cld
dec
push
flds
setnp
pop
or
add
push
stc
sub
sbbb
add
aam
jg
ret
or
add
add
add
xor
test
jbe
xlat
xor
into
pop
pop
and
loope
cmp
lret
test
or
or
daa
dec
and
ds
fidivrl
and
adc
int3
xchg
xor
outsb
sbb
gs
push
faddl
mov
inc
and
inc
push
ljmp
inc
outsl
sub
xchg
repnz
add
leave
mov
jecxz
test
jns
mov
push
and
jnp
xchg
mov
pop
je
shr
pop
inc
rorl
ds
add
aaa
test
push
cmp
cmp
repz
int3
insb
cmp
pop
inc
xor
neg
adcb
mov
inc
mov
fistpl
add
add
in
jmp
popa
flds
push
add
xchg
mov
cli
js
data16
dec
push
mov
test
fnstsw
mov
lret
dec
push
sbb
xchg
popa
pusha
add
or
mov
ret
xor
inc
aas
fcoms
imul
cli
adcl
sub
mov
leave
push
fwait
subb
cmp
jl
add
add
rcll
fs
sti
jl
rcrb
fldcw
and
out
lods
rorl
pop
mov
gs
push
add
movsb
mov
imul
out
loop
inc
xchg
xchg
push
xchg
mov
loopne
mov
dec
pop
sub
sub
mov
test
mov
jmp
clc
mov
addl
cmp
push
dec
xor
outsl
idiv
das
or
es
rcrl
lds
mov
aas
cwtl
sbb
loopne
jg
sub
dec
mov
pop
pop
mov
lret
sub
pop
xchg
pop
nop
in
sub
into
cmp
dec
test
jle
push
cmpl
jo
sahf
and
mov
lods
mov
cs
inc
out
sbb
jg
sti
dec
das
fs
inc
mov
ret
mov
and
jns
mov
das
xor
push
fcoms
movsl
daa
mov
push
ret
cmp
icebp
mov
jns
pop
mov
lock
and
jnp
insb
lods
shll
sarb
pop
das
jne
rcll
add
call
xchg
xchg
movsl
mov
cs
ds
repnz
je
bound
jl
jmp
add
add
andb
add
inc
in
leave
or
sub
inc
and
fcoms
divl
pop
in
jecxz
stc
jge
add
add
cld
fwait
or
and
mov
mov
add
outsb
cmp
es
cmp
rorl
in
or
fcoml
add
inc
aad
xchg
mov
pop
add
rolb
hlt
fistps
insb
push
push
mov
rolb
sub
dec
jmp
inc
adc
pop
dec
fcomps
dec
xchg
lods
cs
and
rclb
movsl
and
pop
sbb
icebp
aaa
jns
inc
xchg
xchg
data16
out
repnz
mov
add
fs
mov
add
mov
imul
xor
inc
fxch
arpl
mov
pop
mov
clc
popa
add
cmpsl
mov
int3
xlat
mov
ss
iret
pop
push
bound
dec
sub
mov
loope
adc
das
xchg
scas
mov
movsb
xor
data16
clc
add
dec
scas
in
out
enter
icebp
and
xchg
sbb
jge
pop
xchg
inc
iret
in
fs
inc
cld
lds
mov
jno
push
dec
fbld
mov
xchg
mov
jb
add
push
sbb
and
cmp
jge
jmp
int
inc
or
iret
cli
aas
outsb
insb
adc
je
mov
mov
dec
sub
dec
xchg
add
mov
shrl
mov
out
lds
shll
inc
les
inc
sbb
add
pushf
outsb
sahf
xor
xchg
ds
and
jge
jl
test
fisubl
dec
mov
xchg
sbb
fimull
insb
mov
sti
dec
or
addl
filds
push
push
mov
in
add
or
or
inc
movsl
iret
xchg
sub
aad
jg
push
mov
loopne
pop
icebp
cmp
mov
mov
jp
iret
out
push
stos
xchg
fisttps
or
sub
mov
cmpsl
and
pop
jnp
push
cmp
ljmp
add
popa
roll
lock
roll
loop
into
add
popa
lret
popa
enter
rolb
data16
add
pop
in
add
aad
add
aad
add
aad
add
aad
add
fildl
add
faddl
add
fcoml
add
fcoml
add
fcoml
add
fcoml
add
fmull
add
fmull
add
fcoml
add
fcoml
add
fistl
add
fistl
add
fcoml
paddusb
mov
fistl
add
fcmovne
add
fildl
add
fildl
add
fildl
mov
fisttpl
add
fldt
add
aad
add
fstpt
addl
add
add
add
popa
mov
add
add
adc
jp
and
xchg
mov
add
mov
add
add
bound
add
bound
add
bound
adc
bound
add
bound
add
bound
add
aad
sbb
bound
jne
sbb
arpl
add
add
dec
fbstp
and
jo
and
fs
flds
lock
clc
sub
and
or
jecxz
das
dec
out
shl
add
pop
into
mov
add
in
and
push
adc
push
add
and
add
pop
xor
or
loope
into
gs
add
push
call
sbb
push
jecxz
xor
sti
xor
roll
loope
jmp
popa
flds
jnp
sbb
mov
sbb
sarb
add
sbb
mov
sbb
sar
add
sbb
or
sbb
call
clc
sbb
jmp
fiaddl
or
add
add
sbb
ljmp
add
outsb
flds
add
add
dec
flds
jo
sbb
out
inc
flds
lret
or
add
outsb
flds
push
add
flds
mov
sbb
loopne
flds
mov
sbb
add
je
add
jb
add
jno
add
lcall
outsl
inc
add
add
test
add
add
add
cltd
outsl
inc
add
ljmp
inc
add
cli
lcall
inc
add
cli
ljmp
inc
add
cli
lcall
inc
add
cli
ljmp
jb
add
stc
lcall
jb
add
jno
add
inc
add
jmp
test
test
add
test
add
test
add
cmpsb
inc
bound
cmpsb
inc
bound
inc
bound
stos
inc
bound
stos
inc
bound
stos
inc
bound
stos
inc
bound
stos
inc
int3
adc
bound
inc
int
add
cmpsb
inc
lret
bound
cmpsb
inc
lret
adc
bound
cmpsb
inc
fxch
and
mov
arpl
mov
arpl
mov
arpl
mov
arpl
dec
sahf
and
add
arpl
dec
sahf
and
adc
sahf
mov
mov
sahf
mov
sahf
mov
sahf
mov
sahf
mov
add
add
leave
popf
mov
fxch
popf
mov
fldenv
and
add
jbe
add
sbb
loope
flds
addb
add
push
flds
jo
sbb
ret
jbe
add
sbb
mov
flds
push
ret
and
aad
add
flds
jo
sbb
pop
ja
add
sbb
divb
add
sbb
sub
add
aam
add
test
add
les
add
inc
fiaddl
or
sbb
sub
or
sbb
lods
inc
fiaddl
lret
xlat
sbb
lods
inc
fiaddl
lret
sbb
add
jbe
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
lcall
ja
add
ja
add
inc
add
ljmp
inc
add
lcall
inc
add
ljmp
inc
add
lcall
inc
add
jbe
add
and
bound
add
pushf
inc
bound
add
pushf
inc
bound
pushf
inc
bound
add
add
add
pushf
inc
bound
add
pushf
inc
bound
add
pushf
inc
bound
daa
add
lahf
inc
int
add
lahf
inc
bound
lahf
inc
out
add
lahf
inc
loopne
add
sahf
inc
loop
inc
loop
inc
loop
inc
fxch
and
mov
fxch
popf
and
int
arpl
leave
popf
and
into
and
and
and
and
andb
fsts
popf
and
andb
fsts
arpl
dec
lcall
dec
lcall
dec
lcall
dec
lcall
or
arpl
or
arpl
or
push
fdivr
or
sbb
fldl
add
lret
sbb
faddl
add
sti
sbb
mov
jmp
add
fistpl
add
add
add
ret
subl
pusha
ret
jb
flds
push
ret
gs
flds
or
add
add
sbb
inc
sbb
dec
call
fiaddl
dec
fcomps
add
jmp
add
jmp
add
mov
adc
pop
outsl
inc
add
adc
imul
add
jae
add
adc
test
rcll
add
rcll
add
rcll
add
jb
add
adc
jmp
rcll
add
jb
add
rcll
add
jb
add
lret
adc
sbb
add
lret
adc
test
int3
adc
cltd
outsl
inc
add
inc
add
outsl
inc
add
and
loopne
inc
bound
and
loopne
inc
bound
and
loopne
inc
bound
and
bound
and
bound
and
bound
and
bound
and
bound
inc
bound
and
bound
inc
clc
and
bound
inc
bound
and
bound
inc
bound
add
fwait
inc
bound
fwait
inc
cli
pop
add
fwait
inc
bound
and
bound
fwait
inc
flds
lcall
or
lcall
or
mov
fmul
cltd
mov
fxch
cltd
and
lea
fldenv
and
mov
fsts
and
dec
and
mov
and
mov
arpl
mov
arpl
dec
sahf
and
test
arpl
dec
sahf
mov
mov
fadds
dec
aam
add
add
add
add
fadds
or
sbb
cmp
or
sbb
cmp
or
sbb
popf
inc
fadds
lret
sbb
pushf
test
add
negl
add
fadds
lret
out
add
fadds
lret
xlat
sbb
popa
push
flds
or
add
flds
jo
sbb
inc
push
fdivr
mov
sbb
xor
mov
sbb
movsl
inc
fadds
dec
les
add
sbb
add
mov
lcall
mov
ljmp
mov
lcall
inc
add
mov
ljmp
inc
add
outsl
inc
add
mov
ljmp
inc
add
incl
sbb
add
outsb
inc
add
incl
cltd
outsb
inc
add
inc
add
add
fldcw
add
add
jmp
mov
add
outsb
inc
add
add
jmp
mov
add
outsl
inc
add
daa
add
lahf
inc
bound
add
lahf
inc
bound
daa
add
lahf
inc
bound
add
cltd
inc
bound
add
sahf
inc
bound
in
inc
bound
add
sahf
inc
into
add
pushf
inc
int
add
add
add
pushf
inc
lock
pushf
inc
out
add
pushf
inc
bound
daa
add
pushf
inc
leave
add
pushf
inc
bound
inc
jmp
add
pushf
inc
fld
and
mov
mov
mov
mov
sahf
mov
sahf
mov
sahf
mov
sahf
mov
fxch
popf
and
dec
and
and
dec
and
and
dec
and
and
arpl
mov
arpl
mov
arpl
mov
aas
fadds
mov
sbb
aad
fadds
dec
clc
sbb
les
sbb
xlat
sbb
dec
fcomps
add
sbb
dec
enter
dec
flds
cmp
add
call
fadds
or
sbb
jp
fadds
or
sbb
pop
inc
fadds
lret
sti
sbb
pop
sbb
lret
jmp
add
sbb
lret
fistpl
add
sbb
lret
lret
sbb
and
sbb
adc
add
popa
mov
add
jmp
mov
fldcw
add
ljmp
mov
inc
add
outsl
inc
add
in
add
flds
add
flds
add
flds
add
in
add
sti
fadds
add
in
add
or
add
or
add
sti
fadds
add
in
add
lret
fadds
add
in
add
mov
in
add
lret
fadds
add
fadds
add
addl
add
add
add
add
add
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
incb
pop
jle
add
incb
pop
jle
add
add
add
incb
pop
jle
add
incb
pop
jle
add
incb
pop
jle
add
incb
pop
jle
add
incb
pop
fldpi
jmp
in
popa
aad
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
and
or
arpl
or
arpl
or
arpl
leave
cltd
and
jmp
fxch
cltd
and
in
cs
fxch
cltd
and
add
push
flds
lret
lret
sbb
out
jo
add
inc
fadds
mov
sbb
lock
fadds
mov
sbb
jecxz
fadds
mov
sbb
repnz
add
xchg
add
sbb
in
flds
dec
hlt
sbb
hlt
pop
flds
dec
add
add
ss
dec
hlt
sbb
notb
mov
dec
rcrb
add
inc
fadds
or
add
les
add
inc
fadds
or
add
pop
sbb
std
xchg
add
negl
add
sahf
lock
test
test
lcall
test
incl
add
add
cmp
xchg
mov
fnstcw
inc
add
cmp
xchg
mov
fnstcw
inc
add
ljmp
mov
inc
add
add
test
mov
lcall
mov
ljmp
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
ljmp
add
add
add
lods
inc
aad
add
lods
inc
fdiv
jmp
xchg
cmc
call
lcall
bound
lods
inc
bound
inc
jmp
add
scas
inc
fisubs
add
scas
inc
in
adc
inc
loopne
jmp
scas
repz
mov
add
aam
inc
bound
add
scas
inc
bound
aam
inc
fstps
es
leave
lods
and
sbb
fxch
lods
and
cld
push
fxch
lods
and
std
repnz
xchg
repnz
xchg
and
and
shlb
fnstenv
lods
mov
mov
mov
mov
xchg
repnz
fldenv
repz
fldcw
repz
xchg
scas
mov
xchg
or
add
lcall
add
bndldx
lods
mov
dec
lcall
add
iret
sbb
scas
nop
xchg
mov
xchg
mov
sbb
mov
add
add
decb
jo
decb
dec
xchg
dec
clc
sbb
and
or
add
xchg
dec
clc
sbb
daa
das
xchg
dec
enter
jbe
add
jbe
add
pop
mov
lcall
inc
add
ljmp
inc
add
lcall
ljmp
mov
incl
add
add
mov
ljmp
mov
fldcw
inc
add
mov
jmp
mov
fldcw
inc
add
mov
jmp
mov
lcall
mov
ljmp
mov
lcall
mov
ljmp
mov
lcall
inc
add
repz
std
shrb
in
shrb
add
and
shrb
add
test
bound
stos
inc
bound
stos
inc
bound
inc
bound
decl
pop
sbb
bound
inc
bound
add
test
bound
add
test
bound
adc
arpl
stos
inc
bound
repnz
cmp
sub
stos
inc
bound
incl
add
add
fsts
repz
fsts
and
bound
push
fnstenv
mov
fldenv
and
fisubl
jb
jb
and
push
fldenv
and
mov
test
jb
bound
jb
jb
and
and
bound
push
fnstenv
and
jno
jb
bound
mov
fnstenv
mov
fldenv
mov
fnstenv
mov
jmp
add
inc
jmp
add
fdivr
or
sbb
push
mov
flds
or
sbb
push
fdivr
lret
add
fadds
lret
or
add
add
sti
sbb
outsl
inc
fadds
lret
lret
sbb
outsb
inc
fadds
mov
fadds
mov
sbb
jo
fadds
mov
fadds
mov
sbb
jb
fadds
dec
hlt
sbb
gs
add
sbb
add
xor
test
inc
add
inc
add
ljmp
inc
add
xor
cmp
add
incl
add
add
mov
ljmp
mov
lcall
mov
ljmp
mov
fnstenv
inc
add
mov
jmp
mov
fnstenv
inc
add
cs
add
test
lcall
push
cmc
pushl
cmc
hlt
jmp
sub
call
push
cmc
incl
add
add
adc
inc
aam
inc
bound
adc
inc
aam
inc
bound
add
push
adc
adcb
mov
lods
inc
bound
jmp
push
cmc
call
pmaddwd
test
bound
and
bound
bound
adc
bound
bound
inc
fsts
scas
mov
add
add
fsts
mov
orb
fsts
add
fsts
scas
mov
scas
and
cmp
scas
and
lcall
fstps
lods
and
jl
fxch
lods
and
jge
fxch
lods
and
pop
es
punpckldq
lods
and
inc
punpckldq
mov
flds
mov
sbb
mov
or
add
cld
sbb
test
dec
int3
sbb
ja
flds
dec
mov
flds
or
sbb
test
mov
fdivr
or
add
cld
sbb
sub
jle
lret
bndldx
sub
lcall
add
add
add
add
iret
sbb
das
outsb
fdivr
lret
add
mov
sbb
and
sbb
add
mov
jmp
in
adc
sub
adc
add
cmp
cltd
xor
out
mov
inc
add
xor
int3
cmp
imul
lcall
inc
add
mov
add
imul
lcall
inc
add
das
inc
add
add
cltd
das
inc
add
add
test
test
pushl
xor
inc
test
jmp
enter
push
test
bound
test
call
test
bound
stos
inc
bound
add
stos
inc
bound
stos
inc
bound
bound
stos
inc
bound
stos
inc
bound
adc
push
and
and
stos
inc
bound
adc
shrb
adc
stos
inc
bound
and
bound
and
bound
and
bound
push
and
mov
push
adc
mov
dec
int3
mov
push
fnstenv
mov
jl
stos
mov
jl
stos
mov
jl
stos
mov
jnp
stos
mov
jnp
test
fnstsw
test
fnstcw
int
adc
repz
fstps
lods
jnp
test
popf
jnp
test
data16
aas
mov
flds
into
mov
jnp
mov
jnp
mov
sbb
repz
jnp
mov
sbb
loop
jnp
dec
or
add
xor
dec
clc
sbb
les
jnp
dec
enter
inc
fadds
dec
mov
flds
sbb
flds
jmp
popa
flds
leave
lahf
jp
and
flds
call
popa
flds
sbb
flds
sbb
add
jg
add
fst
add
xchg
mov
add
add
inc
mov
add
add
add
add
dec
mov
add
mov
add
aam
add
mov
add
aam
add
mov
add
aam
add
fdivrl
add
aam
add
fnstsw
add
add
ret
add
fnstsw
add
mov
add
mov
add
aam
add
pop
add
inc
std
add
call
add
bound
add
inc
bound
add
inc
bound
add
inc
bound
inc
bound
add
bound
sbb
bound
add
sbb
bound
add
sbb
lock
bound
inc
incl
add
push
inc
bound
add
push
inc
bound
adc
add
bound
or
gs
cld
imul
add
hlt
push
int3
repz
ja
fucomip
jnp
fcomi
outsl
fadds
and
inc
ror
dec
lret
and
xlat
adc
add
add
lods
rcrl
xchg
mov
or
mov
adc
sub
add
lret
add
fistpll
in
push
xlat
xchg
lock
lret
fwait
adc
scas
scas
sbb
cmp
out
add
fisttpl
or
shll
adc
push
lock
pop
hlt
sti
into
dec
clc
add
pop
andb
xchg
arpl
jns
dec
xchg
jne
add
add
push
lcall
cmp
push
flds
dec
int
scas
pop
shrl
mov
cmc
das
mov
jmp
aaa
mov
and
js
lret
cmpsl
into
mov
push
mov
cmp
fmulp
cmpb
test
xchg
cwtl
sub
mov
repnz
xor
testb
add
add
and
sti
dec
daa
mov
filds
pop
mov
or
mov
imul
xchg
outsl
adc
addl
pop
pop
mov
es
xchg
shrl
sub
lret
xor
aaa
iret
ss
and
cmp
movntq
aas
sti
jp
arpl
jle
addr16
xchg
push
outsl
mov
ja
movsb
js
outsl
sub
pushf
inc
inc
inc
mov
dec
dec
aas
cwtl
dec
dec
bound
mov
sub
je
jge
add
fucom
jnp
flds
orb
jmp
xchg
in
imull
jmp
pop
movsb
mov
mov
and
mov
sets
or
add
add
mov
cmp
into
adc
das
cmp
sub
push
xor
and
lahf
imul
clc
orb
push
orb
push
les
fld1
add
out
add
out
add
out
add
out
add
movsl
add
popf
add
out
add
out
add
out
add
add
out
add
out
add
add
popa
flds
jmp
lahf
je
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
pop
je
jmp
popa
flds
jmp
popa
flds
jmp
popa
je
daa
pop
je
pop
pop
je
jmp
popa
flds
jmp
popa
flds
jmp
cmpsb
jb
out
jb
ficoms
flds
jmp
sti
add
sti
add
or
add
les
add
les
jg
add
lret
add
mov
add
lret
add
inc
and
add
mov
add
mov
add
jnp
add
jnp
add
xor
decl
add
jnp
add
dec
add
cmp
add
cmp
add
lret
add
dec
add
cmp
incl
add
add
fldl
add
add
bound
add
bound
add
bound
add
and
add
jbe
out
outsb
jl
inc
jg
add
jg
sbb
in
sbb
hlt
adc
hlt
adc
hlt
adc
hlt
adc
hlt
adc
incl
push
sub
pop
xchg
sbb
hlt
adc
hlt
adc
add
add
hlt
adc
hlt
adc
hlt
adc
add
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
out
add
out
add
out
add
out
add
out
add
out
flds
call
data16
out
out
fiaddl
ljmp
jmp
pop
ljmp
add
in
fildl
pop
fildl
fildl
jmp
aad
in
add
add
add
pop
fildl
jmp
fildl
lods
fdivr
out
jecxz
mov
push
ljmp
add
data16
ljmp
add
pusha
fiaddl
call
pop
fdivr
out
fadds
add
sbb
orb
and
mov
stos
xor
test
mov
fbstp
xchg
xchg
xor
pop
mov
stos
xchg
test
mov
inc
cmp
push
inc
mov
xor
cmp
pop
mov
cwtl
jl
jae
push
sub
out
fwait
xchg
pop
loop
aas
add
inc
pusha
mov
rorb
lcall
into
xchg
repnz
popf
lahf
dec
bound
movsb
or
lea
icebp
fdivs
scas
xor
sub
in
rcll
cmc
aaa
pop
test
aas
jmp
or
xchg
sbb
mov
pop
and
mov
inc
clc
mov
dec
xchg
dec
adc
sahf
xchg
sub
or
std
xor
ficompl
pop
mov
inc
mov
xchg
mov
out
pop
test
xlat
inc
add
and
xchg
fmuls
aas
movsl
mov
jg
adc
cmpsl
test
jle
bound
imul
mov
sub
scas
cmpsl
adc
xchg
cmpsl
dec
adc
xor
cmpsw
imul
sub
movl
push
jno
out
popf
xchg
or
xchg
fdivrs
adc
repz
or
ds
adc
xor
icebp
xchg
popf
addr16
add
add
sbb
add
xchg
adc
push
jo
xor
push
lea
or
dec
push
rcr
push
xchg
pop
push
scas
insb
int3
test
mov
dec
xor
push
std
xor
push
in
xor
jb
xor
dec
jb
and
xchg
filds
leave
or
aad
mov
cmp
fs
fs
or
push
lods
xor
iret
fimull
ficompl
lea
push
sti
and
inc
xor
es
test
inc
iret
fcmove
xor
pop
xor
paddusw
loopne
add
sbb
or
and
out
cmp
sahf
jp
dec
fmull
pop
fsubrl
mull
addr16
mov
xor
test
pop
outsb
dec
lock
bound
dec
fmull
cmp
push
cmp
sub
or
add
add
repz
cmpsl
cmp
push
mov
fcomp
cld
adc
rcll
or
push
or
fs
adc
std
and
sti
xor
pop
rcrl
sub
pop
shll
les
mov
ss
mov
mov
ret
jnp
cld
sarl
cld
jecxz
fstps
loop
fadd
xchg
sbb
lea
add
add
xlat
mov
mov
fwait
std
add
stos
std
loope
jae
icebp
mov
xor
aam
pop
add
mov
cmp
outsl
sub
mov
repz
jno
sti
incb
add
push
movsb
or
mov
mov
pop
jbe
pop
push
mov
cmpsl
push
dec
shr
adc
fwait
movsb
aad
add
add
dec
mov
movsb
fwait
inc
movsb
add
pushf
fdivrl
stc
aaa
adc
xchg
outsb
nop
arpl
mov
pop
pop
mov
cmp
pop
pop
cmp
jge
cmp
inc
inc
sub
rcll
mov
lods
or
add
test
push
les
cmp
std
sbb
in
sti
cmp
andb
push
cmpsl
push
mov
mov
testb
lods
mov
cmp
punpckhbw
ds
fsts
fldenv
push
repnz
arpl
sahf
lret
inc
ret
iret
mov
xchg
ds
scas
fcmovnb
add
add
outsl
fcmovnbe
cmp
push
xor
gs
cmp
push
mov
xorl
fadds
fcoms
fsubs
fdivs
fadds
xorb
bound
lea
ficompl
gs
adc
lcall
repnz
hlt
sub
hlt
cmp
cmp
sub
aam
mov
mov
mov
adcl
jo
ljmp
call
lea
popl
pop
cmp
adc
xchg
inc
sti
push
or
stos
imul
orl
or
jmp
outsl
push
rorl
adc
add
add
pushf
fbstp
mov
cmc
jb
mov
jne
xchg
jns
xchg
insb
and
mov
int
cld
mov
adc
sub
push
xchg
inc
lret
sqrtps
xor
jge
js
ja
repz
cmpxchg
pop
inc
xchg
xor
or
push
inc
pop
inc
add
mov
lret
jecxz
shl
jo
mov
adc
sbbb
lahf
loop
xor
push
mov
xor
movsl
test
xchg
out
mov
push
sub
jecxz
xorb
fstpl
sbb
ja
ja
shll
jb
lds
out
sbb
xchg
aad
add
add
mov
movsb
sbb
aam
fbstp
and
clc
ss
sbb
jne
les
repnz
sbb
shrb
lret
add
flds
add
add
jg
add
jns
add
xlat
add
mov
add
jae
add
jae
add
inc
cmpsb
add
inc
xlat
add
push
cmpsb
add
aaa
xlat
add
inc
cmpsb
add
push
xlat
add
or
add
xor
add
add
add
push
add
bound
add
cmp
fldl
add
cmp
fiaddl
add
cmp
bound
cmp
bound
cmp
bound
cmp
bound
cmp
add
add
bound
add
bound
add
bound
add
bound
add
add
bound
add
add
bound
add
add
lock
bound
jo
f2xm1
add
cmp
faddl
fstps
fnstenv
add
fstps
fnstcw
add
fnstcw
fstps
add
add
add
jnp
fstps
add
fstps
fld
add
pop
cmp
les
fnstcw
flds
cmp
push
add
fldenv
add
fsts
add
flds
add
jb
fxch
add
cmp
jmp
flds
push
pop
flds
mov
dec
flds
pcmpgtd
add
cmp
add
flds
xchg
sub
add
flds
test
flds
push
mov
add
flds
inc
js
add
popa
flds
push
push
flds
cmp
add
data16
cwtl
dec
flds
enter
fwait
cmp
add
popa
flds
jp
flds
lret
add
flds
lds
add
add
flds
xchg
add
add
add
mov
add
push
mov
add
ret
add
mov
add
fsubl
add
or
add
cli
mov
add
or
add
clc
mov
add
mov
add
mov
add
inc
mov
add
xor
add
and
add
andl
add
fildl
add
aaa
add
add
bound
add
bound
add
cmp
incl
bound
cmp
lock
bound
cmp
add
bound
add
add
bound
cmp
add
bound
cmp
hlt
add
bound
add
add
bound
add
add
bound
add
bound
cmp
bound
add
cmp
bound
add
cmp
bound
add
or
flds
cmp
inc
add
adc
flds
flds
cmp
xchg
add
shll
fnstcw
add
fldcw
add
mov
fadds
sbb
push
add
or
inc
add
sbb
dec
add
or
cmp
cltd
ficompl
add
or
jle
and
fiaddl
jae
cld
pushl
idiv
fs
pop
pop
jle
push
addr16
dec
pop
sub
add
pop
xlat
ljmp
addr16
pop
sar
mov
int
mov
sar
mov
pop
lret
lcall
pop
sbb
fwait
data16
xchg
pop
or
shll
rcrb
mov
jmp
decl
pop
fdivr
mov
incl
data16
call
ret
data16
pop
int3
lcall
aad
add
add
add
aad
add
aad
add
popa
add
add
fisubl
mov
push
add
xor
lret
add
and
loop
das
add
sbb
add
or
or
and
repz
sbb
not
insb
add
pop
add
or
fst
pop
add
xlat
pop
add
add
add
xlat
sbb
push
xlat
imul
add
pop
arpl
cmp
add
push
add
arpl
cmp
add
arpl
add
arpl
data16
call
add
cmp
add
arpl
jmp
xor
add
xor
add
add
arpl
push
arpl
add
arpl
inc
arpl
add
add
arpl
add
sub
push
push
add
arpl
das
arpl
arpl
add
arpl
pop
add
pop
add
fcomps
sub
fadds
fdivrs
incl
test
dec
lcall
dec
jmp
inc
lcall
test
inc
inc
test
inc
test
inc
test
or
add
add
test
xchg
or
test
or
test
or
test
pop
or
pop
or
test
or
test
or
test
or
sub
xor
xor
pop
and
xchg
pop
and
mov
xor
pop
xchg
xor
pop
cwtl
xor
push
xor
push
xor
pop
pop
xor
pop
and
and
and
das
push
xor
pop
and
xor
push
xor
sub
movsl
pop
xor
xor
scas
gs
xor
cmp
mov
cmp
mov
gs
xor
cmc
loopne
xor
loopne
xor
loopne
xor
loopne
xor
loopne
xor
loopne
xor
loopne
xor
add
add
loopne
xor
xor
loopne
push
mov
sbb
mov
loope
push
jns
and
dec
loope
push
inc
loope
push
inc
loope
push
xor
loope
push
mov
sub
mov
daa
push
rcr
push
add
sub
pavgb
fildll
push
std
fildll
push
sub
push
ljmp
xor
xor
add
add
xor
insl
push
xor
outsl
push
aaa
pop
lcall
pop
or
cmp
inc
pop
mov
add
inc
fs
add
inc
fiadds
inc
fadds
dec
fs
fs
pop
dec
pop
sub
pop
dec
pop
pop
pop
dec
xor
push
pop
xchg
pop
push
fs
pop
push
pop
popa
or
bound
push
pop
adc
inc
or
fisttpll
fldl
sub
dec
or
fldl
sbb
inc
or
fstl
or
fldl
mov
xchg
or
clc
js
pusha
fnstsw
popa
fstpl
arpl
push
or
pop
or
push
or
or
aas
or
add
add
xor
imul
or
mov
push
push
fstl
fldl
push
adc
add
pop
or
movsl
pop
or
add
scas
or
mov
pop
adc
sub
fs
add
sbb
sbb
add
add
sbb
cmp
xor
fs
add
pop
or
and
adc
adc
ret
add
pop
cmpsb
add
addr16
pop
pushf
add
add
dec
add
fisubrs
add
ficoms
add
fimuls
add
fisubs
add
ficoms
out
ficoms
add
fisubs
adc
fisubs
add
ficomps
add
add
add
ficoms
add
ficomps
add
ficomps
add
ficomps
xchg
ficomps
add
ficomps
add
ficomps
add
fisubs
add
ficomps
add
fisubs
add
fisubs
add
ficoms
add
fstl
add
fisubrs
repnz
add
fcoml
add
fldt
add
sub
pop
daa
sbb
sub
add
popa
pusha
add
popa
pop
add
popa
cmpsb
add
popa
mov
add
popa
cmpsl
add
popa
adc
popa
jo
lods
popa
outsl
add
popa
insb
add
popa
aad
lret
add
popa
enter
mov
add
popa
add
popa
incb
xchg
popa
incl
xchg
popa
add
xchg
popa
std
add
int3
cmpsb
add
lahf
add
mov
add
mov
mov
add
mov
scas
add
mov
ret
add
cltd
add
xchg
add
pushf
add
xchg
add
ds
aas
add
xor
dec
add
dec
add
dec
add
aad
add
aad
add
aad
add
aad
add
add
add
aad
add
aad
add
aad
add
aad
add
aad
add
popa
xchg
add
popa
xchg
add
popa
xchg
add
popa
sbb
fsubs
add
popa
pop
add
popa
sbb
lahf
popa
sbb
xchg
popa
sbb
xchg
popa
and
nop
popa
and
dec
xchg
and
push
and
mov
and
push
jp
orl
and
ss
jge
outsb
and
and
jno
inc
push
jns
pop
push
test
add
dec
pop
and
dec
sub
mov
push
sbb
and
push
pop
and
push
cmp
repnz
inc
and
push
shlb
int
shlb
in
push
popa
and
push
sbb
rcll
rclb
mov
push
sub
int
daa
and
push
and
add
mov
nop
add
push
xchg
and
push
xchg
and
and
dec
les
imul
or
cld
or
or
cld
and
frndint
or
cld
pop
aas
sub
ja
adc
cli
cmp
add
add
cli
mov
adcl
cli
mov
aas
insl
cli
and
cli
xor
iret
stc
sub
cli
add
mov
incb
inc
arpl
add
pop
incl
adcb
sbbb
subb
sbbb
sbbb
sbb
incb
dec
aas
stc
inc
incb
push
mov
cmp
xchg
clc
cmp
mov
cmp
xchg
clc
xor
mov
pushf
std
xor
clc
sahf
std
sub
std
pop
clc
cmp
stc
jnp
mov
je
jg
insl
std
jnp
stos
std
cmp
mov
std
cs
movsl
std
daa
clc
mov
inc
clc
mov
push
mull
std
lods
hlt
xor
std
add
aaa
std
jne
cmp
push
sbb
pop
stc
sbb
push
stc
add
daa
or
ds
or
inc
pop
in
and
sub
incl
and
out
jnp
or
xor
fadds
and
enter
enter
mov
mull
into
test
and
test
and
cwtl
xchg
and
cwtl
icebp
orb
es
js
es
js
es
add
add
and
pop
pop
cli
and
call
and
add
insl
es
dec
inc
es
ds
or
inc
dec
adc
and
and
sbb
gs
sbb
test
cmp
popf
push
cmp
mov
dec
daa
and
push
scas
add
dec
movsl
and
dec
sub
or
std
dec
pop
add
push
push
and
add
add
dec
xchg
and
dec
mov
and
int
sub
ret
dec
andl
dec
andb
dec
mov
and
into
add
pop
mov
cmc
rcrb
cmc
shll
cmc
aam
xchg
cmc
aad
fcomi
pop
ljmp
pop
fdiv
fldenv
cmc
ficompl
cmc
cmc
fcompl
neg
addr16
ficomps
stc
fbld
stc
loopne
xor
loope
stc
loop
xchg
jecxz
stc
in
test
in
imul
pop
jp
out
imul
jmp
mov
cmc
add
add
negl
test
fisttpl
fstpt
fistl
negl
xor
fstpt
imul
add
data16
pop
fildl
push
fistl
insl
fstpt
notl
cmp
push
fstpt
notl
xor
jno
pushf
imulb
xchg
divb
sahf
imulb
notb
xor
fildl
testb
idivb
divb
pop
imulb
push
mulb
negb
test
inc
fldt
stos
insb
testl
sub
cmc
push
daa
push
hlt
push
cs
repz
and
push
xor
rdpmc
xor
mov
decl
sbb
or
push
das
adc
push
es
push
cmp
stc
push
sbb
or
sbb
pop
nop
push
unpckhps
add
movzwl
movsbl
cmpxchg
push
push
adc
mov
push
or
mov
jns
jae
push
mov
add
add
push
mov
push
add
out
push
out
inc
push
aad
inc
push
in
inc
push
mov
dec
push
mov
inc
push
mov
ljmp
sahf
ljmp
pop
ljmp
push
ljmp
cmc
jmp
push
push
repz
push
push
ljmp
xor
ljmp
out
xor
out
xor
in
ss
ljmp
xor
aaa
xor
ljmp
xor
adc
lods
xor
xchg
add
inc
xchg
popa
adc
adc
arpl
inc
jae
adc
cmovne
cmovbe
cmova
cmovs
cmovns
cmovp
cmovnp
xchg
cmovl
add
add
popf
cmovge
or
dec
xor
adc
repnz
xchg
jno
push
xchg
je
push
xchg
jae
push
jae
adc
adc
adcb
jae
adc
jp
pop
push
fnstenv
adc
or
adc
or
adc
cmpsl
adc
or
adc
or
adc
or
adc
or
or
sbb
sti
call
push
adc
call
inc
adc
call
sub
mov
and
mov
sbb
adc
jmp
enter
leave
adc
lret
call
int3
adc
call
add
jae
adc
jae
adc
jae
adc
push
sbb
xchg
push
sbb
popl
add
add
adc
jae
das
pop
jae
das
pop
jae
das
pop
push
pop
xor
pop
xor
pop
xor
push
push
xor
jae
xor
jae
adc
jae
adc
jae
adc
push
jo
inc
out
jno
inc
mulb
pushl
int
dec
shll
js
mov
jp
test
cmp
and
cmp
and
add
add
cmp
and
cmp
and
cmp
test
and
stos
and
lcall
fcomp
jno
btc
pcmpgtb
cmpxchg
adc
fs
rorb
and
arpl
mov
fmull
add
pop
bswap
int3
jno
iret
mov
out
lcall
mov
add
add
jp
lret
std
mov
punpckldq
fildll
pop
mov
adc
stos
bound
pop
push
xor
pushf
push
and
pushf
adc
fwait
push
subl
gs
bound
xor
push
jecxz
bound
fcmove
shrl
push
inc
stos
bound
int3
out
xor
add
add
arpl
add
bound
add
bound
add
pushf
push
repnz
pushf
insl
mov
jle
pop
fldcw
fisttpll
xchg
mov
mov
or
fdivrl
sbb
fildll
and
sbb
lea
fnstsw
imul
and
bound
mov
lods
jns
mov
xor
sbb
cmc
mov
push
mov
adc
cmp
mov
fstpl
inc
xor
imul
add
jmp
in
shlb
cltd
jns
stos
and
mov
lret
ret
add
xchg
in
nop
in
lock
int3
inc
sbb
mov
std
jmp
push
sahf
dec
sbb
mov
pop
jg
sbb
cld
sub
mov
mov
jne
inc
stos
shlb
push
xchg
push
aas
roll
mov
xor
mov
mov
xchg
or
lahf
lcall
int
lret
aad
add
faddl
add
fildl
add
add
faddl
add
fldl
add
int
add
faddl
add
fiaddl
add
fldl
add
aad
add
aad
add
xlat
add
data16
add
aam
add
add
sti
faddl
add
faddl
add
add
bound
add
bound
add
mov
and
add
add
bound
add
bound
add
mov
dec
add
bound
add
bound
jb
bound
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
in
adc
and
jge
add
dec
xor
sub
push
inc
shll
std
aas
call
movsb
cmpl
dec
mov
test
mov
xchg
push
int3
jae
dec
enter
add
inc
mov
aas
mov
dec
cmpsl
pop
mov
xchg
adc
xor
sti
fcomps
add
fsub
add
out
add
add
add
out
add
out
add
out
add
out
add
out
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
xchg
dec
decb
jp
jle
ds
jbe
ds
outsb
push
pop
ds
pop
pop
ds
push
dec
decb
incb
movsb
loope
call
sti
fiaddl
add
ds
repz
call
call
or
rorb
call
in
incl
add
add
in
pushl
std
call
or
rorl
call
in
call
in
pushl
std
call
in
jnp
add
jnp
add
dec
flds
add
add
cmp
add
cmp
add
dec
flds
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
out
add
fld1
add
add
add
add
add
add
add
fld1
add
add
add
add
add
add
add
call
add
call
add
call
add
call
add
add
add
call
add
out
add
out
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
inc
popa
out
pop
rcrb
push
add
leave
inc
add
adc
xlat
enter
or
xchg
leave
inc
add
aad
add
aad
add
test
or
pop
stos
inc
add
aad
add
inc
add
add
or
or
adc
or
or
add
aad
add
roll
aad
add
roll
aad
add
roll
aad
add
roll
sub
adc
js
mov
add
js
bound
inc
bound
add
bound
jns
bound
bound
add
js
bound
add
cli
js
rolb
inc
jns
bound
pop
bound
inc
bound
add
inc
bound
add
out
inc
bound
pop
ja
bound
or
js
bound
add
fldcw
flds
jns
flds
js
add
add
fpatan
js
fldenv
js
fnstenv
add
jae
mov
fldcw
mov
flds
add
ja
mov
fldcw
js
fnstcw
add
xor
fldenv
jo
pop
js
imul
ja
jns
flds
imul
jl
jno
fistpll
flds
int
leave
add
sti
cwtl
add
leavew
add
call
lret
add
lretw
add
enter
enterw
cltd
add
cltd
add
cwtl
cltd
add
popa
lret
mov
add
popa
out
adc
add
out
adc
add
int
icebp
dec
cltd
add
cmp
add
sub
add
pop
fstl
add
mov
add
ficoml
add
inc
add
fidivl
add
mov
add
add
add
fiaddl
add
mov
add
fimull
add
mov
add
mov
add
fiaddl
add
ret
jg
or
pop
lds
inc
fimull
add
roll
fldl
add
ret
adc
add
jmp
inc
add
roll
fcoml
lds
bound
insb
inc
xlat
add
bound
das
les
enter
fs
inc
bound
add
bound
add
bound
add
bound
insl
inc
bound
or
imul
add
imul
add
fisubrl
subb
lds
bound
inc
leave
add
bound
inc
bound
imul
add
bound
outsb
add
insb
and
cld
add
xchg
insb
and
mov
pop
fldenv
add
fstps
add
fnstcw
insb
mov
flds
add
insb
mov
fnstenv
mov
fstps
mov
imul
fxam
add
add
fstps
pop
imul
fxch
imul
fisubrl
cmp
add
cltd
add
pop
add
rorl
cltd
add
pop
filds
cmc
std
cwtl
add
repnz
add
cwtl
add
rcrb
add
rcrb
add
cltd
add
popf
add
cltd
add
popa
fldl
pop
xchg
cltd
add
xchg
cltd
add
popa
filds
jmp
pop
fildl
fnstsw
adc
dec
cltd
add
pop
faddl
int
cltd
add
dec
add
add
add
iret
ret
inc
add
adc
add
fisttpll
add
add
and
inc
add
adc
sti
ret
push
fstpl
add
ret
call
ret
inc
add
adc
or
inc
add
ret
fst
add
pop
ret
inc
add
aad
add
aad
add
les
and
sbb
arpl
inc
add
or
add
add
insb
insb
inc
bound
insb
inc
bound
add
xchg
imul
add
bound
subb
pop
add
inc
bound
or
push
imul
add
bound
inc
bound
add
bound
inc
bound
inc
lds
bound
imul
add
lret
bound
xor
imul
add
bound
inc
movl
fnstcw
outsb
fnstcw
and
cwtl
add
aas
imul
popf
add
aaa
imul
es
fstps
imul
fnstenvs
add
scas
push
add
add
fsts
push
fnstenv
add
fnstcw
add
lahf
push
flds
add
arpl
fld
arpl
fnstcw
add
fstps
mov
fldenv
add
arpl
loop
cltd
sbbl
add
add
cltd
add
popa
fldl
addl
add
cltd
add
data16
jne
cwtl
add
cwtl
add
cwtl
add
fiadds
insl
cwtl
add
movl
jle
les
test
lds
jge
cltd
add
popa
fiadds
aad
cltd
add
sbbl
add
adc
or
mov
fimull
lret
mov
adc
jmp
inc
add
fistl
add
mov
push
add
mov
lldt
mov
push
add
mov
adc
xlat
mov
ltr
mov
adc
lahf
mov
adc
idivl
adc
add
ficoml
add
mov
add
sbb
jnp
inc
add
ficoml
add
mov
add
add
bound
fs
bound
add
bound
hlt
arpl
fildl
loopne
inc
bound
arpl
aaa
add
fsubl
bound
bound
pop
bound
inc
bound
or
arpl
pop
add
inc
bound
add
call
add
inc
bound
add
dec
bound
xor
adc
bound
xchg
add
bound
inc
fnstenv
je
out
mov
flds
pusha
mov
fldenv
add
mov
add
fnstenv
pusha
and
mov
pusha
and
push
add
flds
pusha
and
scas
add
pusha
and
adc
fsts
add
fldcw
popa
and
mov
popa
and
cmp
popa
mov
fldenv
mov
fstps
mov
fstps
mov
std
add
cltd
add
sbbb
inc
sbbb
inc
sbbb
in
cltd
add
popa
aam
stc
das
cltd
add
popa
movl
xchg
popa
repz
setns
jb
fldl
xchg
aas
cltd
add
movb
sub
add
sbb
add
pop
lret
or
add
pop
loopne
mov
add
cltd
add
popa
loopne
popf
pushf
cltd
add
cmp
add
add
add
mov
or
add
sti
add
insb
imul
add
lcall
xlat
pop
add
xlat
add
xlat
arpl
not
cs
insb
add
add
add
dec
popa
je
add
cmc
sbb
out
inc
imul
sbb
pop
pop
jae
dec
jbe
imul
dec
jb
pushf
pop
call
inc
add
addb
add
add
dec
inc
bound
push
inc
bound
bound
bound
inc
bound
dec
inc
ror
das
bound
add
add
bound
add
add
bound
daa
inc
bound
inc
bound
es
bound
aad
bound
push
push
inc
add
bound
push
bound
push
xor
xor
push
inc
add
bound
data16
add
add
nop
js
mov
imul
add
sub
mov
addr16
mov
jb
stc
sub
lods
or
pop
fxtract
jne
mov
jb
mov
mov
xchg
mov
int3
jne
rol
outsb
mov
add
mov
add
int3
add
les
xchg
fxch
add
fnstcw
add
jp
fld
add
fxch
add
scas
add
add
adc
flds
add
out
fldenv
stos
lea
jmp
mov
push
leave
popa
flds
les
add
popa
flds
aam
mov
les
add
popa
flds
mov
popa
lods
add
popa
flds
mov
popa
mov
mov
popa
lods
add
popa
mov
add
popa
scas
add
popa
rolb
popa
flds
hlt
push
add
popa
flds
jne
lcall
inc
lcall
and
add
popf
aas
add
aas
add
add
or
add
add
push
add
xchg
aas
add
xchg
aas
add
mov
aas
add
mov
aas
add
aas
add
mov
add
jb
add
inc
add
inc
add
ds
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
inc
add
mov
popa
inc
mov
cwtl
inc
bound
inc
bound
cltd
inc
fdivs
int3
jbe
bound
add
imul
fdivs
add
xor
add
aaa
add
cmp
bound
add
gs
pusha
jbe
bound
jae
cmp
add
or
cmpb
or
or
pop
xor
pusha
xor
pusha
xor
pusha
push
add
add
adc
flds
and
pusha
mov
mov
fsts
flds
add
fldenv
add
fnstcw
add
fldcw
add
fnstenv
add
flds
add
fyl2xp1
add
mov
add
add
scas
push
xchg
lds
fldcw
and
aam
and
mov
and
dec
mov
and
roll
push
add
pop
shll
flds
shlb
cltd
add
xchg
cltd
add
popa
popf
add
popa
popf
add
in
mov
cltd
add
cmp
add
in
nop
adc
add
jecxz
dec
or
cltd
add
cwtl
add
mov
add
xchg
mov
enter
popa
flds
stos
xchg
add
in
push
mov
push
flds
lret
popa
incb
lcall
add
cltd
xlat
and
sbb
and
stos
xlat
and
or
add
es
arpl
mov
cs
test
arpl
mov
jb
popf
mov
outsb
xchg
xchg
insb
outsl
pop
mov
add
mov
inc
sub
mov
gs
mov
imul
push
xlat
insb
add
xlat
xor
pop
add
xlat
insb
add
xlat
add
popa
mov
or
cli
jno
into
shlb
stos
mov
jbe
sbbb
je
adc
bound
popa
bound
arpl
xchg
and
cld
xchg
or
or
xchg
jo
cli
and
jg
and
bound
add
adc
and
add
push
add
out
add
aad
push
bound
add
iret
add
bound
inc
bound
add
xor
add
es
gs
dec
gs
dec
imul
xchg
ret
daa
je
cmpsl
inc
and
scas
dec
sub
xchg
push
xor
or
inc
std
add
sbb
sub
addr16
mov
arpl
mov
outsl
mov
stos
out
add
sub
xchg
and
popf
xchg
xor
lea
movsl
mov
push
mov
adc
lods
add
pop
jg
into
imul
add
add
ja
jae
stos
mov
mov
mov
xor
jb
xor
jmp
icebp
cltd
add
fs
add
pop
xchg
add
int3
loopne
add
popa
flds
jmp
popa
flds
lock
add
pop
xchg
add
jl
add
insl
fwait
add
add
fwait
add
push
fwait
add
dec
fwait
add
dec
lcall
data16
add
add
popa
movsl
add
popa
flds
cmpsb
popa
lods
add
mov
bound
stos
fldt
fildl
add
fldt
call
fistpl
fildl
add
inc
inc
add
aas
add
aas
add
aas
add
inc
add
dec
inc
add
ret
inc
add
aas
add
rolb
jb
add
les
mov
ret
inc
add
ret
inc
add
roll
test
sub
addr16
gs
push
icebp
popa
outsl
bound
outsb
je
fisubl
das
dec
addr16
inc
sbb
je
imul
insb
xchg
bound
mulb
inc
out
and
push
pop
imul
add
add
pushf
jp
bound
fs
insb
push
mov
repnz
test
fadds
xor
push
cs
bound
xor
or
aas
out
inc
bound
sub
pop
bound
add
bound
je
add
out
fxch
pop
jnp
mov
addr16
fldenv
outsb
push
mov
jae
fldenv
outsb
xor
xchg
jo
fldenv
jne
mov
pop
and
and
inc
sbb
cs
lret
test
inc
jae
xchg
cmp
lds
es
mov
xchg
cld
test
add
test
sbb
arpl
popa
flds
scas
xchg
mov
cmpsb
andb
movsb
inc
mov
jno
popa
flds
scas
and
mov
test
mov
jl
flds
cmp
jg
mov
in
inc
push
stos
jge
cwtl
bound
add
aas
dec
add
add
mov
mov
add
pop
mov
daa
test
ds
lcall
aas
aad
add
popa
add
fsubrs
clc
xlat
insl
add
xlat
push
add
fsubrs
cmpsl
xlat
insl
add
jno
pop
aad
add
xlat
pop
add
fdivs
jb
out
outsb
add
xlat
push
add
xlat
jb
sbb
addr16
xlat
outsb
add
xlat
push
add
xlat
insl
add
add
add
aad
add
aad
add
aad
add
aad
add
add
insb
add
inc
add
add
rolb
and
push
bound
outsb
ss
xor
dec
pop
ror
sbb
iret
pop
push
and
add
inc
bound
push
inc
bound
lcall
add
add
lcall
aas
add
lahf
add
pop
add
push
add
jnp
add
add
bound
add
bound
add
out
add
bound
add
xchg
fsts
add
add
fsts
add
fsts
add
fsqrt
add
fldcw
add
fxch
add
fnstcw
sub
mov
inc
fxch
add
mov
add
out
fnstenv
and
addl
flds
fstps
add
flds
add
fsts
fcomps
xchg
fstps
add
fldcw
add
flds
sbb
arpl
rcrb
cmp
add
add
add
jnp
inc
adc
mov
jle
addr16
sbbl
lds
js
popa
flds
lcall
inc
dec
mov
lea
inc
fwait
ja
xchg
flds
int3
rcrl
add
popa
flds
loopne
flds
loop
flds
cmc
popa
flds
shll
add
lcall
fisubs
inc
add
add
das
add
push
add
jb
jge
add
arpl
inc
pop
fstl
stc
fistpl
cmc
pop
fcompl
paddusb
movsb
fldt
lret
fildl
add
fcoml
paddusb
mov
fildl
rcr
insb
add
fildl
in
data16
pop
add
add
add
fstpt
scas
add
frstor
add
fldl
add
inc
dec
lahf
int3
inc
add
inc
inc
sahf
add
add
push
push
lds
push
push
stos
mov
push
inc
mov
ret
aas
push
fwait
add
add
aas
inc
cltd
add
add
cmp
add
inc
push
daa
add
add
push
dec
adc
dec
push
add
add
push
dec
adc
push
and
add
bound
inc
xor
add
inc
dec
sub
jb
push
sbb
fldcw
lods
mov
sub
lcall
fstps
nop
sahf
sub
fldcw
mov
sub
mov
xor
dec
fstps
push
mov
fwait
lods
add
mov
xor
inc
daa
fsts
add
xchg
push
adc
mov
xchg
fsts
push
add
add
xchg
popa
flds
dec
add
lea
inc
lret
andl
flds
cmp
les
add
andl
add
add
flds
adc
jl
or
mov
jnp
add
mov
les
idivl
add
test
cmp
aam
mov
pushf
lcall
iret
aam
push
xchg
aam
adc
lcall
jnp
add
mov
fadds
add
add
add
aas
add
add
mov
aas
add
add
in
add
inc
add
inc
add
inc
add
cmp
add
add
dec
fldl
decb
add
inc
add
faddl
rcl
add
cmp
adc
dec
stos
add
cld
pop
pop
mov
imul
adc
add
add
jno
mov
xchg
int3
sub
rclb
dec
add
ljmp
bound
aas
bound
push
scas
call
int3
rcrb
or
xor
shlb
lods
call
mov
xchg
or
pop
cmp
push
xchg
push
icebp
icebp
jg
pop
subl
jle
add
jbe
inc
bound
cmp
add
bound
cmp
add
fnstcw
add
scas
add
rolb
dec
fnstenv
add
cltd
inc
and
pop
xor
add
cmp
mov
ret
inc
mov
fxch
lret
cmp
cwtl
aam
sub
mov
sbb
stos
jmp
adc
cltd
fucomip
cmc
xchg
in
adc
add
ljmp
in
add
mov
fiaddl
pusha
fildl
jmp
dec
loope
fcoml
xor
popa
flds
decb
mov
popa
flds
adc
xor
adc
out
jmp
fbstp
ja
add
add
push
fdivrl
imul
and
ficompl
daa
ret
jmp
and
frstor
mov
and
jmp
sub
xor
push
test
ds
andb
lods
addr16
fwait
outsb
bound
faddl
add
es
mov
add
add
add
mov
push
pop
shrl
push
push
xchg
add
add
stos
into
and
test
sbb
add
mov
movsb
nop
mov
add
sub
xor
sbb
es
cmp
xorb
pop
mov
cmp
mov
cmp
int
add
mov
jo
bound
outsl
cmp
add
sarb
cmpsl
mov
shlb
iret
lcall
push
daa
sbb
loopne
testl
dec
and
inc
pop
imul
mov
lcall
addl
jbe
mov
loop
fldt
out
jg
incl
inc
rorl
add
add
mov
ror
sahf
xchg
fstp
sbb
jne
add
test
mov
push
imul
leave
mov
and
subl
or
jl
call
mov
arpl
lods
inc
call
mov
jb
mov
push
push
popa
ja
fadds
or
fnstenv
out
cmp
jbe
mov
push
jge
aad
add
xchg
push
stc
cwtl
ret
add
out
xchg
cltd
add
xchg
adc
es
pop
idivb
hlt
testl
pop
xorl
popa
flds
aas
enter
mov
push
add
xlat
call
push
in
inc
out
add
add
add
sub
shrb
cs
aad
negb
add
loop
xchg
imul
popa
flds
aas
test
cmpl
xchg
hlt
js
inc
sti
fadds
add
adc
adc
roll
outsl
push
lock
cli
pop
sti
into
outsl
pop
incl
popa
test
aas
lea
nop
add
and
rorl
sbb
xlat
fistpll
fadds
add
inc
xlat
aam
rcl
push
enter
ret
lret
xlat
dec
lock
jae
bound
jb
jbe
gs
bound
jmp
push
cmc
clc
lret
ds
shll
add
cmpsb
mov
mov
lret
mov
xor
ja
sub
jno
cld
and
cli
call
fwait
jp
aam
stos
sahf
aam
movsb
pushl
jecxz
jne
out
cmpb
out
dec
sub
in
and
add
bound
and
jge
sbb
jg
push
sub
sbb
jb
add
fnstenv
shlb
pop
xchg
mov
pop
push
test
xor
in
or
aas
pushf
xchg
cld
push
xor
and
scas
test
sbb
fnstcw
cmp
xchg
inc
add
test
fnstcw
jns
add
pushf
or
add
xchg
sub
ja
adc
fldenv
fbld
xchg
in
and
lods
leave
pop
xor
jmp
xchg
fdivp
and
mov
pop
add
mov
adc
int3
mov
std
pushl
jmp
inc
mov
add
cmp
je
data16
mov
jb
xor
adc
add
push
mov
cmp
ja
dec
mov
dec
shll
adc
xor
inc
jg
in
movsb
sbb
jae
pop
mov
pop
nop
push
xor
xorl
roll
xor
xchg
add
fs
cli
or
add
cmpl
stos
pushf
dec
jmp
add
outsb
outsl
push
jp
add
faddl
add
mov
jns
mov
or
repz
sbb
add
sub
cwtl
cmp
cli
test
push
adc
les
xchg
push
sbb
add
sbb
pop
pop
lret
mov
adc
xor
sub
arpl
sub
jb
and
imul
cmp
or
pop
push
and
je
aad
mov
mov
mov
add
scas
xor
xchg
repz
int
fwait
enter
insl
repz
xlat
push
scas
lods
in
pop
test
bound
push
aas
inc
fiaddl
bound
add
bound
addr16
imul
bound
sub
xchg
push
adc
mov
flds
or
xchg
mov
pop
jle
sub
insl
mov
add
and
sti
or
or
jl
fldcw
lock
cmp
xchg
mov
inc
mov
fldenv
mov
push
insl
mov
aas
mov
mov
arpl
fcompl
xchg
push
push
mov
pusha
pop
xchg
mov
pop
test
inc
push
bnd
push
scas
test
dec
movsb
pop
inc
add
add
add
flds
adc
das
pop
into
jb
adc
flds
daa
jbe
das
cli
mov
sub
sbb
pushf
jno
add
sub
flds
nop
in
out
popa
flds
cli
aas
jo
enter
jmp
sti
icebp
clc
lods
cmp
pusha
repz
sbbb
add
cwtl
sub
jmp
xchg
out
fiadds
add
add
flds
mov
jp
lcall
jae
ljmp
rol
adc
add
icebp
cld
daa
cs
in
fsubl
std
sti
dec
flds
add
popa
imul
add
int3
adc
rcr
inc
ret
aas
jmp
icebp
cld
loopne
flds
add
fadds
add
fistl
add
fdivr
push
mov
pop
adc
add
add
roll
int
or
ret
lcall
test
cmp
and
test
outsb
lret
ja
push
stos
jmp
xor
call
insw
sub
and
sbb
subb
mov
dec
pop
scas
rorb
mov
dec
test
stc
dec
dec
pushf
xchg
push
ds
es
gs
inc
jl
pop
jge
adc
xchg
push
push
out
js
out
push
data16
jg
mov
test
out
mov
lret
mov
imul
jle
hlt
lea
movsl
xchg
sbbl
aaa
push
lods
cmp
cmp
jle
and
mov
in
and
mov
and
ss
pop
sub
rorb
lahf
test
and
call
decb
cmpsb
jmp
lock
fucomi
out
inc
test
cmc
popa
out
dec
push
sbb
or
ljmp
jmp
in
or
icebp
and
int
sbb
mov
repz
cmp
xlat
jbe
sub
cmp
aaa
scas
es
nop
jecxz
mov
and
add
sbb
fldcw
repz
sarb
fstps
and
fistpll
in
dec
mov
fildl
jns
lock
adc
repz
add
scas
push
lret
add
xorl
xchg
data16
xchg
jmp
fistpll
cwtl
sub
add
add
popa
flds
add
aad
sbb
rorb
lret
ffreep
aas
sbb
rol
das
inc
lret
sbb
in
adcl
add
sarb
jle
jl
add
cmp
xor
pop
in
or
daa
xor
out
push
add
mov
outsl
push
out
daa
lock
add
aam
pop
adc
adc
xchg
xchg
add
or
push
add
bound
jl
sub
or
ss
sbb
addr16
push
and
out
push
pop
jbe
xor
leave
pop
dec
pop
stos
push
imul
add
bound
loop
sbb
ror
repnz
bound
stc
or
mov
loop
imul
jmp
popa
into
xlat
sbb
aad
popa
iret
jmp
mov
out
cld
test
fdivs
mov
mov
and
mov
push
scas
adc
xchg
and
out
fsts
fstps
inc
mov
fnstenv
out
add
add
inc
push
jns
pushl
jg
push
outsb
mov
sbb
mov
data16
pushf
out
pop
jb
pop
mov
push
jp
arpl
jle
jne
ret
add
fldcw
adc
adc
pop
xchg
pop
sub
xchg
dec
mov
jl
mov
cmpsl
dec
repnz
movsb
push
cmpsl
pop
mov
fcompl
loopne
jmp
add
add
filds
jo
sub
xor
add
dec
shlb
cmpb
mov
jbe
sub
popa
flds
sbb
mov
and
jl
push
icebp
sbb
mov
cli
jo
xor
outsb
lods
sbb
idiv
std
pop
mov
push
add
cmp
add
stos
mov
cmp
add
xor
fsubrl
add
or
ss
loop
sub
pop
mov
insb
pop
stos
mov
and
sub
sub
pop
add
or
into
or
pop
push
adc
fadds
push
push
add
adc
mov
pop
inc
or
add
add
clc
fiaddl
dec
push
decb
adc
out
adc
adc
sbb
out
jmp
outsl
xchg
in
mov
ljmp
and
movups
fisubl
sub
int3
pop
cmp
bound
leave
fisubrl
rol
popf
cltd
lret
shlb
pop
loopne
fsubl
jo
xlat
js
fidivrl
jns
enter
in
test
movl
add
xor
fldcw
fnstcw
add
pop
mov
fnstcw
stos
push
sahf
scas
movsl
push
dec
enter
add
jmp
pop
inc
xchg
adc
rol
dec
enter
fldenv
in
test
add
ja
add
pop
sti
push
add
lods
std
pop
fs
hlt
push
mov
sbb
inc
ret
fstps
push
in
cmc
pop
faddl
loope
jmp
pop
sub
outsb
and
or
mov
add
pop
mov
mov
sbb
jne
dec
fadds
rorb
xchg
lods
out
jmp
xchg
stc
idivb
dec
in
data16
jnp
lock
es
sbb
flds
add
xchg
inc
mov
popa
flds
sahf
inc
or
add
test
add
sub
add
add
cmp
and
add
sbb
cmp
add
add
aad
add
cltd
pushf
mov
fwait
jp
lret
aad
add
or
jmp
aad
add
push
idiv
sub
call
pop
adc
aam
or
mov
add
mov
dec
dec
jnp
add
inc
loop
sbb
dec
sbb
lcall
sub
pop
dec
js
pop
add
idiv
jmp
mov
and
ret
add
bound
mov
jae
scas
loope
xchg
mov
bound
pop
add
sbb
add
sahf
hlt
or
push
cmp
cld
and
test
cmpsl
test
mov
add
add
aam
xchg
out
je
add
bound
ja
inc
dec
ficoml
fs
add
add
and
add
add
or
or
sbb
pop
inc
mov
imul
flds
sub
adc
les
add
fldcw
jmp
mul
sti
insl
mov
add
aam
add
jne
ret
and
mov
repnz
loopne
testl
notl
and
jle
xor
add
loope
cmc
inc
ljmp
dec
cwtl
sti
cmp
push
ds
cli
dec
dec
mov
repnz
popa
flds
test
gs
jle
pop
mov
add
cmp
and
or
popa
flds
inc
subl
push
outsl
pop
jmp
mov
flds
out
imul
lds
add
add
sub
pop
mov
xor
or
scas
pop
loop
mov
cli
jno
sub
outsl
mov
jmp
dec
mov
jmp
outsb
lods
and
jge
aaa
lds
add
inc
or
repz
imull
and
incl
shrl
js
sbb
gs
add
roll
mov
fcmovnb
mov
leave
lret
mov
es
in
or
out
adc
add
in
loop
cmp
iret
and
imul
add
sub
fdivp
aas
add
loope
cld
jmp
sub
out
daa
xor
icebp
push
fiaddl
add
fildll
and
in
ror
add
add
pushf
mov
cli
orb
aam
mov
lods
mov
mov
dec
push
int
push
pushf
iret
das
push
mov
add
bound
lds
push
rcr
push
ret
xchg
xchg
dec
ret
xchg
dec
mov
bound
popa
jbe
sbb
sbb
data16
pop
addr16
adc
and
add
fldcw
or
mov
add
aas
fwait
cmp
inc
xchg
repnz
xor
in
inc
cmp
std
sub
subb
inc
dec
mov
dec
dec
test
xchg
test
push
test
addr16
dec
es
lret
addl
mov
shl
lret
push
nop
jmp
push
mov
in
pop
fsubr
push
insl
mov
add
sbb
fnstenv
fidivrs
loop,pt
fadd
dec
stc
jne
pop
xchg
push
lds
in
shlb
jle
or
stos
adc
stos
and
popa
flds
cs
aaa
cmpsb
mov
cmp
mov
xchg
or
mov
repnz
es
lods
lcall
std
pusha
push
xor
loopne
push
add
jb
sbb
dec
mov
inc
lods
cmp
stos
div
cwtl
mov
xor
dec
mov
out
add
rclb
pop
iret
mov
add
es
push
inc
dec
lcall
add
sub
xor
fildl
aam
cmp
add
add
adcb
add
xchg
lea
jae
mov
dec
mov
mov
cmp
lea
nop
dec
pop
mov
add
push
jb
adc
bound
adc
rol
test
mov
xchg
loope
sub
add
add
mov
lods
add
lods
mov
into
xor
aad
cs
hlt
incl
out
or
pusha
popf
ficoms
push
xchg
mov
int
ja
flds
adcb
stc
out
data16
jnp
hlt
lock
adc
imul
sub
push
mov
out
add
stos
sub
pop
pushf
testl
jmp
movsb
rorb
mov
xchg
dec
mov
jnp
into
subl
xchg
mov
xor
cltd
add
cmp
inc
mov
xchg
add
imul
mov
cli
push
cmp
enter
iret
dec
inc
ja
inc
push
enter
push
xor
jae
dec
sub
add
popa
flds
and
and
jb
cmp
gs
ret
xor
xlat
adc
les
inc
faddl
sub
pop
add
cld
add
push
mov
imul
in
aaa
push
mov
aaa
repz
ja
flds
inc
push
lea
dec
popf
pop
push
stos
xchg
push
daa
cmp
pop
daa
cmp
mov
pusha
cmp
jge
lcall
data16
pop
cmpsb
inc
popaw
aad
add
push
inc
stos
dec
add
stos
aas
pop
iret
mov
inc
pop
mov
add
add
jg
or
fimull
out
push
sbb
or
fcoms
add
lock
insl
and
pushl
testb
or
push
push
aaa
repnz
sub
bnd
fisttpl
bnd
xor
dec
pop
cmp
popf
gs
mov
push
and
test
pop
adc
shrl
cmp
mov
jmp
stos
xchg
fcomip
cmc
sbb
icebp
push
sub
das
and
add
add
aaa
pusha
imul
cmc
outsb
bound
cs
mov
pop
push
mov
adc
xor
xor
push
addr16
xchg
pop
ja
stos
cmp
jle
lods
pop
add
decl
inc
or
push
imul
adc
lret
lock
mov
hlt
pop
loope
repnz
rorb
dec
shlb
mov
or
fcomi
imul
out
pop
fwait
mov
add
and
in
call
and
xlat
inc
ljmp
filds
icebp
dec
push
xchg
repz
fsts
hlt
cmp
data16
dec
xor
mov
inc
push
sti
pop
loopne
hlt
imul
xor
inc
adc
xchg
jnp
add
add
test
push
sbb
mov
jb
or
andb
jle
add
add
test
add
cmp
lcall
aas
test
lcall
add
popa
mov
fwait
popa
addb
popa
addb
popa
je
xchg
add
popa
flds
iret
popa
je
jno
je
jmp
negb
add
popf
xchg
add
test
mov
ret
add
mov
inc
mov
pop
aad
add
jo
mov
pop
add
dec
add
imul
aad
add
aad
add
add
jnp
add
ret
add
mov
add
jnp
add
jnp
add
dec
add
dec
add
cmp
add
cmp
add
dec
add
dec
add
cmp
add
cmp
add
or
add
or
add
sti
aad
add
movsl
inc
add
add
bound
add
bound
add
bound
add
bound
or
lds
push
das
add
dec
and
jg
and
push
lds
adc
fisttpl
jbe
ds
mov
xchg
pusha
add
jae
lock
add
add
inc
push
adc
dec
push
and
xor
mov
insb
cmp
mov
sub
scas
sti
or
arpl
mov
fsubr
mov
mov
imul
repnz
pop
inc
int
pop
ds
push
imul
scas
mov
mov
stc
push
fcomip
repz
jmp
fbstp
and
mov
fsubl
push
sbb
push
fnstenv
pop
mov
mov
cs
sarl
xchg
pop
mov
bound
shll
leave
jo
xlat
pop
inc
or
add
fldl
rcrb
push
add
adc
xchg
sbb
andl
insl
sbb
bound
mov
cld
add
inc
jmp
mov
mov
mov
fcmovb
mov
push
je
push
inc
pop
dec
or
hlt
adc
sbb
out
pushf
and
dec
out
jb
xlat
xchg
and
test
jecxz
das
clc
pop
dec
add
cmp
mov
icebp
push
mov
add
add
sbb
mov
inc
idiv
jae
and
ret
sbb
and
outsb
xchg
add
std
adc
cmp
or
dec
inc
add
ret
jo
add
inc
push
icebp
push
adc
or
adc
add
sbb
sub
cwtl
and
jnp
pop
mov
fldl
and
std
je
lret
mov
inc
lock
pop
jnp
or
daa
add
and
add
loopne
dec
pop
or
mov
test
lock
lock
ret
mov
mov
fmull
sbb
sub
pop
fwait
les
sub
testl
adc
mov
bound
xor
ja
or
add
add
and
mov
mov
mov
bound
pusha
ret
mov
cld
push
push
adc
push
fldcw
popa
icebp
in
fldcw
pop
bound
mov
ss
lods
jg
sahf
aaa
mov
leave
fs
mov
push
pop
push
cmp
lea
popa
dec
push
push
xor
int
add
add
iret
adc
mov
lret
adc
flds
push
out
frstor
xor
push
lea
pop
stos
pop
in
adc
lcall
add
bound
jmp
jmp
push
insl
or
cld
iret
jmp
adc
sbb
icebp
call
sbb
loope
loope
jb
sbb
stc
or
mov
fimuls
or
add
fsts
shll
push
sub
mov
loopne
or
std
mov
lds
inc
jmp
mov
push
jae
mov
or
mov
mov
mov
pusha
xor
decl
sti
and
ljmp
xchg
inc
cmp
and
pop
ret
push
jb
out
dec
push
and
and
jo
out
or
add
and
mov
mov
cmc
add
fimull
test
stos
push
mov
orl
je
pop
pop
jb
ret
mov
lahf
cli
adc
cwtl
and
bound
push
incl
add
add
fistpl
cmp
lea
ds
mov
les
lock
and
cld
pop
pop
mov
dec
mov
add
pinsrw
sbb
and
addr16
or
mov
adc
fldt
ljmp
add
popa
cmp
adc
lock
pushf
lock
fs
or
addr16
add
mov
add
fsubrs
add
mov
pop
xlat
lods
pop
and
out
scas
push
and
fldenv
adc
sbb
rorl
fwait
adc
fisttpll
gs
cmp
je
fld
mov
pop
shrb
pop
cmp
jmp
mov
sbb
mov
fucomi
daa
xchg
add
pusha
or
xor
xchg
cmp
sbb
jmp
rsqrtps
stc
mov
pop
xchg
add
fldenv
push
cmpb
sahf
mov
push
pop
and
les
jg
pop
pop
decb
sarl
sbb
jmp
jno
add
popa
flds
adc
adc
xchg
bound
pop
rorb
ljmp
add
popa
flds
xchg
stos
push
les
fwait
and
mov
xchg
jb
mov
pop
xor
je
push
fadd
dec
cmpsb
ljmp
bound
inc
add
mov
push
ja
pop
pop
leave
xlat
add
mov
add
jnp
jae
or
movl
decb
mov
add
add
ss
testb
cmp
test
inc
clc
jne
add
inc
cltd
cld
bound
and
adc
imulb
add
inc
sub
cmp
mov
test
aaa
sahf
and
leave
stc
roll
push
inc
xor
adc
xchg
pushl
imul
or
mov
mov
arpl
rolb
aas
bound
clc
mov
roll
add
cmp
add
xor
dec
dec
sahf
mov
or
jmp
inc
push
mov
xor
sbb
inc
sbb
pop
adc
je
sbb
je
and
jae
sub
je
imul
out
ljmp
or
int
or
test
aas
clc
mov
leave
add
and
add
inc
mov
pop
fnstcw
sub
out
fbld
mov
jb
out
lret
in
out
pop
icebp
jno
fnstenv
cmpsl
pop
in
add
lea
add
outsb
add
lods
fbld
cltd
andb
push
jmp
pop
or
test
inc
leave
push
cmc
push
add
jbe
das
xor
sub
jns
test
fidivrs
dec
flds
jmp
popa
push
add
popa
sbb
in
sub
std
jmp
pop
flds
imul
fdivr
lret
add
popa
fnstcw
sub
sbb
hlt
pop
faddl
jmp
data16
add
jne
cmp
pusha
flds
mov
jb
adc
add
pusha
outsl
add
flds
jge
sahf
add
popa
fnstenv
sbb
fiaddl
pop
outsl
add
repnz
data16
inc
jo
add
push
sub
inc
outsl
roll
mov
xlat
add
loop
decl
mov
push
and
decl
pop
mov
incl
add
add
das
add
roll
mov
cli
sbb
cmp
add
or
ds
in
mov
push
add
and
orb
push
icebp
add
xor
bound
or
std
inc
adc
lock
jmp
cli
mov
mov
addr16
out
push
add
cmp
sbbl
pop
ret
jle
divb
sti
test
cld
out
adc
add
fld1
or
incb
dec
cli
mov
xchg
dec
call
out
cmp
pop
insl
scas
jae
fisttpl
dec
push
xor
mov
or
pop
push
test
fs
dec
addb
add
movsl
fldcw
cmpsl
adc
mov
mov
andl
pop
jecxz
push
int3
jb
clc
adc
fnstcw
js
out
addr16
fisttpll
clc
fsubrs
sub
push
bnd
add
cltd
mov
jnp
xor
pop
fs
pop
xchg
or
out
mov
std
clc
out
add
add
push
pop
daa
das
mov
add
loop
std
inc
nop
mov
mov
das
sub
pop
pop
idivb
jp
mov
or
add
lock
adc
ljmp
jmp
pop
fistl
pop
or
sub
cltd
dec
jb
jb
mov
popa
pop
rcl
fs
je
rcll
loop
call
lods
sbb
jae
ljmp
sti
mov
jbe
mov
xlat
test
ja
lds
aam
add
js
pop
adc
icebp
addl
test
xchg
cmp
ja
push
mov
push
iret
call
adc
add
jp
xor
pop
sub
test
add
add
sysret
jns
add
jnp
ret
jbe
dec
push
pop
jmp
lea
sub
jne
jae
add
fildl
pop
pop
push
or
xchg
orb
lods
std
or
mov
mov
add
loope
scas
enter
and
cmp
push
lahf
cmp
dec
inc
and
cwtl
in
lods
xchg
movsb
adc
push
movsb
adc
add
mov
cmp
pop
inc
jmp
mov
xchg
jl
jle
mov
xchg
jl
jle
cltd
scas
cmp
mov
cmp
jmp
fldl2t
add
lods
push
push
push
or
xlat
out
out
jae
out
out
scas
in
aad
mov
call
dec
in
adc
aad
add
or
inc
add
add
cmp
mov
pusha
in
pand
aaa
mov
test
jmp
int3
sbb
pop
ret
fbld
out
aad
call
sti
cmp
sbb
xchg
shl
arpl
add
xchg
data16
flds
mov
mov
dec
mov
dec
test
lock
popf
std
sbb
push
dec
pop
jb
clc
and
popa
jmp
mov
roll
pop
flds
mov
sub
sub
mov
add
and
subl
in
in
pop
aam
fstpl
ret
add
add
add
popa
aas
add
sbbl
fucomi
inc
add
cwtl
add
sbb
add
cwtl
pop
pop
push
add
fiaddl
add
enter
enter
dec
ljmp
jecxz
push
cwtl
test
test
mov
or
push
mov
je
pop
sti
ljmp
mov
push
xor
push
hlt
int3
adc
xor
inc
add
xchg
je
lock
mov
outsl
lret
std
hlt
addb
push
jg
sahf
dec
jmp
push
adc
mov
je
inc
dec
clc
sub
scas
fsts
mov
dec
inc
adc
loopne
gs
cmpb
cmp
jmp
mov
jne
mov
ffree
and
sub
mov
add
aaa
mov
jmp
ja
jbe
inc
add
or
rclb
imul
mov
enter
rolb
insl
aad
decb
adc
fsts
add
rolb
daa
aaa
push
cmpsb
sti
loopne
fstpl
sbbb
lods
shl
mov
lds
addb
add
daa
xlat
jb
std
cmpsb
mov
sub
mov
add
cmp
rcr
lods
int3
daa
cmp
lret
xor
adc
fldenv
adc
icebp
sbb
pop
xchg
sbb
push
mov
nop
scas
jl
jb
push
sub
fistps
jno
sar
sbb
lcall
adc
add
sbb
sar
sti
and
pop
mov
xchg
sub
pop
loopne
inc
popa
flds
andl
inc
nop
or
jmp
popa
inc
or
rorl
sub
push
sbb
jo
loope
test
mov
adc
inc
test
fscale
mov
cmp
add
std
aaa
in
stos
mov
hlt
pushf
xchg
xorl
xchg
push
dec
or
sub
or
int3
mov
or
push
adc
pop
add
cmp
aam
adc
sti
mov
movb
add
sti
dec
add
mov
flds
roll
cmovo
dec
pop
xor
and
push
push
icebp
push
inc
sbb
add
pop
inc
add
jnp
push
jmp
cmp
and
cmpb
pop
add
bound
cmp
pop
jecxz
or
sarb
call
je
dec
inc
or
bts
movsl
cmp
rolb
pushf
enter
movsb
jmp
inc
or
or
cmp
stc
xor
cmp
add
mov
sbb
add
add
inc
or
rolb
sarb
lea
add
pop
lock
popa
aaa
add
bound
popa
pop
push
fs
jl
loope
push
gs
push
push
in
adc
pop
inc
jmp
push
cmpsl
add
lock
aas
punpckhdq
cmpsl
add
push
loopne
out
xlat
add
mov
mov
ds
inc
bound
jb
sbb
cwtl
inc
bound
jae
fnstcw
lods
push
sbb
sbb
push
in
sbb
mov
sub
sbb
dec
icebp
out
xor
pusha
bound
jbe
aaa
lock
icebp
popa
daa
mov
push
add
faddl
add
add
inc
icebp
fiadds
fnsave
jmp
orb
sub
push
loopne
xchg
mov
popf
sub
in
sti
mov
scas
mov
xor
cmc
sbb
iret
add
popa
faddl
bound
std
push
ret
add
fstpt
call
xchg
je
dec
je
and
add
add
jo
fimuls
call
jg
das
loopne
add
jl
shrb
and
leave
mov
dec
dec
or
outsl
or
cmp
je
sub
lock
sub
ds
sbb
cmp
add
imul
mov
add
notb
inc
mov
popf
or
jmp
roll
sub
jnp
sub
mov
push
jmp
inc
push
or
pop
stc
add
cmpb
inc
jns
inc
sub
out
xor
pop
fnstcw
mov
sbb
inc
mov
lds
adc
cmpsb
out
add
add
add
jb
xor
jae
rcrl
mov
cs
xchg
cmpb
sbb
dec
frstor
cmp
pop
mov
inc
mov
adc
xchg
in
push
and
push
pop
pop
sub
ljmp
movsl
loope
sti
xor
and
xor
xcrypt-cbc
cmpsl
push
lret
shll
movsb
rcll
cmpsl
add
add
add
adc
jnp
lds
out
add
adc
jg
inc
hlt
sbb
cltd
inc
in
inc
jmp
adc
negb
jnp
roll
cmp
add
dec
adc
inc
jmp
data16
stc
sbb
test
into
adc
mov
or
insb
xor
call
bound
add
bound
je
ficoml
add
loop
shr
jne
std
aam
enter
sbb
scas
cmpsl
push
shll
fstl
push
fcos
mov
das
mov
mov
in
loopne
mov
sbb
jae
dec
cmpsl
insl
pop
pop
fldl
or
xchg
and
add
add
adc
xchg
xor
jnp
mov
push
fadd
fsts
dec
fstpl
mov
jne
test
push
cmp
inc
arpl
add
ret
add
fadd
xchg
fldl
add
cmp
add
fdivr
adc
xchg
pop
lea
or
mov
fldl
ret
data16
or
pop
bound
mov
xlat
negl
push
jb
mov
and
add
lds
bound
add
add
fcomi
add
inc
mov
or
fs
ja
bound
jnp
mov
into
mov
inc
and
mov
je
dec
shl
add
add
fnstcw
ret
ss
dec
ljmp
pop
cmp
jo
je
mov
or
fiaddl
add
add
fprem
mov
dec
mov
bound
jmp
add
pop
movb
sub
add
push
roll
sub
lea
lcall
push
in
pop
daa
push
and
adc
push
and
and
push
popf
lods
jo
out
dec
rep
inc
push
sub
add
fldcw
push
sub
inc
or
add
cld
sub
fcoms
mov
adc
js
jmp
mov
sbb
xlat
jae
bts
mov
cli
call
out
add
jne
inc
jg
ret
or
ret
in
in
outsb
sub
adc
and
pop
cs
scas
rcll
int
add
add
std
cmp
fbstp
je
out
and
sub
insl
std
inc
jb
std
inc
mov
jbe
lret
inc
xor
std
add
add
sti
add
data16
orl
push
ljmp
fadds
mov
sbb
mov
add
or
mov
add
add
jbe
cmpl
test
xchg
pop
out
mov
mov
add
and
add
xchg
std
jnp
inc
jo
sub
shl
not
imul
add
in
and
mov
push
mov
sbb
arpl
pop
sbb
or
test
inc
nop
inc
ds
cmp
add
and
insl
in
fnstenv
cmp
push
sbb
push
fldl
fidivrs
dec
loop
jmp
cmp
stos
push
inc
and
std
mov
sahf
jmp
adc
int3
inc
add
in
sub
out
fmull
push
movsl
mov
fnstcw
add
in
push
clc
cltd
out
add
ljmp
std
or
sbb
je
ds
mov
xchg
fwait
out
sub
mov
sbb
psadbw
out
dec
std
fiaddl
aaa
out
sbb
fistps
xchg
iret
sbb
pop
popf
scas
and
aas
sub
add
mov
pop
pop
ret
insb
dec
clc
pushf
out
aam
pop
push
nop
aaa
push
ret
and
add
loop
and
jne
out
xchg
std
xor
jbe
fisttpll
add
push
sbb
lcall
popa
lret
shr
jecxz
and
sbb
cmp
xchg
popa
dec
adc
or
imul
test
mov
popa
fldl2t
icebp
sub
shr
push
add
fidivrl
push
sbb
add
add
adc
and
pop
aaa
sub
jmp
gs
inc
lds
lds
inc
pop
mov
add
mov
mov
sub
mov
faddl
call
add
clc
or
add
add
fcoml
sbb
push
hlt
or
add
push
pop
and
test
test
aam
push
push
add
and
inc
imul
add
add
mov
shr
adc
jnp
dec
and
cmpsb
das
xor
xor
xor
sahf
mov
lret
add
stos
add
fldt
push
xchg
cmp
out
lds
add
test
aaa
push
in
mov
push
outsb
lret
mov
mov
imul
xor
mov
push
jmp
mov
push
popa
mov
lcall
dec
or
push
fnstenv
ja
add
aad
mov
into
inc
push
jge
loope
jmp
sub
cmp
adc
sbb
loopne
mov
mov
dec
inc
les
scas
sub
fwait
mov
scas
xor
iret
shrl
mov
leave
std
push
mov
stos
loope
jmp
in
inc
mov
filds
cltd
sbb
lret
addb
sub
and
xchg
xchg
and
filds
bound
xor
mov
add
fiaddl
cmp
push
lock
lock
push
mov
call
mov
std
dec
xor
bound
mov
cmp
mov
test
jmp
pop
inc
add
cmp
adc
popa
mov
call
fstps
and
stc
out
push
ljmp
jbe
stc
fimuls
std
bound
fldl2t
add
dec
xchg
add
dec
into
mov
dec
xor
mov
lcall
leave
add
lret
call
rclb
add
aaa
call
push
jnp
or
and
jmp
push
push
push
and
add
mov
pushf
adc
mov
add
add
femms
mov
push
push
and
cli
mov
nop
pop
inc
mov
fmuls
lea
sbb
aad
inc
into
sub
add
sbbl
sub
bound
inc
and
add
jo
outsl
test
je
loope
lret
repz
fistpll
incl
add
add
mov
push
mov
xchg
mov
call
jmp
mov
into
cli
sub
add
xchg
add
lds
pusha
jae
pop
aaa
ret
xor
jno
cmpsl
xor
mov
ljmp
fnstenv
fidivrs
rolb
sbbl
fnstenv
inc
push
movb
add
add
jg
ds
repz
pop
push
fnstcw
mov
inc
sbb
fidivs
dec
outsb
inc
arpl
out
test
jmp
repnz
out
push
hlt
fbstp
call
add
sub
call
jno
add
mov
add
ljmp
add
mov
popa
push
jmp
gs
sbb
xchg
adc
ljmp
xor
and
call
popa
dec
clc
insb
iret
inc
push
sbb
mov
call
mov
std
ja
mov
cs
dec
call
jb
mov
pushf
popa
fldl2t
ss
add
add
push
inc
jo
sbb
ret
xor
and
call
pop
xchg
je
clc
and
jne
push
push
and
push
inc
and
push
pop
mov
inc
and
bound
ret
inc
pop
cltd
ret
add
lods
subl
cmp
jae
mov
and
sbb
loop
or
and
add
popa
inc
and
ja
add
arpl
jae
sub
mov
mov
inc
ret
push
xor
mov
add
fildl
jmp
setne
decl
shl
add
inc
mov
xor
call
sub
repnz
dec
and
mov
or
lods
xor
sub
incl
add
add
pop
jmp
lahf
jbe
add
scas
int3
pop
stos
xchg
add
aam
add
bound
ret
call
jle
cli
xor
add
jno
cmp
mov
cmp
les
cmp
xor
add
fucomp
clc
add
daa
add
and
fwait
mov
jmp
sahf
pop
fs
mov
mov
jmp
fistps
ds
cmpsb
mov
add
xchg
clc
cmc
int3
daa
add
bound
push
push
aam
bound
push
arpl
fdivrl
bound
add
bound
fldcw
jae
cwtl
mov
cmpl
cmpsb
sub
fimuls
mov
pusha
outsl
rclb
sbb
fiadds
add
add
jbe
ret
and
xor
jp
subl
sbb
and
stos
push
dec
adc
mov
fs
int
or
push
lret
push
shlb
or
mov
push
and
aaa
push
or
jb
or
je
xor
and
xor
inc
iret
sbb
inc
and
je
sbb
adc
repnz
jmp
dec
jno
cmp
push
push
pop
xor
call
add
insb
pop
scas
mov
or
pop
roll
int3
add
lret
pop
add
int
ds
clc
add
sar
add
aad
bound
in
cmp
pop
gs
ds
in
jmp
push
sub
adc
xor
sub
fidivrl
jnp
ret
out
adc
inc
fildl
add
cltd
or
mov
push
jmp
jae
xlat
inc
cmp
lds
push
gs
call
dec
sahf
int
cmpsb
int
into
sahf
int
cmp
aam
mov
movl
jp
sub
inc
fldenv
jbe
inc
sbb
stc
sbb
sbb
stc
sbb
stc
push
cmp
pusha
stos
out
push
jae
jle
xchg
jp
std
mov
sub
lret
add
push
or
sbb
add
add
es
add
pop
push
icebp
cld
decl
xlat
fstp
xchg
nop
mov
add
cs
roll
xlat
cmp
int3
xlat
nop
or
add
cs
sbb
push
fdivrl
mov
daa
sbb
scas
xor
pop
mov
push
push
in
std
nop
or
fdivl
inc
jmp
loopne
add
add
sub
std
pop
xchg
jae
or
std
jmp
mov
or
pop
adc
adc
hlt
jns
inc
jmp
pop
std
adc
rcrb
push
push
lods
stos
dec
push
jnp
add
pop
fnsave
leave
and
sti
leave
xor
int3
mov
add
jo
insl
jmp
xor
and
add
jmp
jno
stos
fs
fwait
fs
insb
insl
cmp
lret
out
adc
sbb
pop
popa
and
aad
jne
xor
xchg
fs
imul
fs
jnp
add
in
jne
call
cmp
cld
pop
mov
repz
add
js
popf
add
mov
test
lds
and
leave
dec
add
mov
je
pop
pop
or
xchg
aad
xchg
decb
cmp
outsl
cmp
call
mov
push
or
inc
stc
xor
mov
add
scas
mov
adc
es
outsb
xchg
adc
stc
out
test
dec
std
gs
ret
xor
push
pop
sub
push
mov
hlt
xor
hlt
mov
rorl
mov
jno
mov
mov
mov
adc
fwait
adc
dec
insb
dec
jg
es
dec
shll
adc
xchg
repz
add
jle
fnsave
jle
cmp
call
fisubrs
inc
fucomip
push
mov
add
pmaxsw
cmp
aas
ds
sbb
out
add
jecxz
and
jge
xor
mov
push
push
jb
mov
jae
scas
mov
test
ret
mov
insb
sbb
fnstenv
xorb
add
add
push
imul
scas
std
jmp
push
aam
add
lcall
lock
rorl
sbb
insl
vandpd
push
add
jb
bound
popf
pop
and
ficomps
sub
and
dec
xchg
xor
adc
pusha
mov
popf
pop
and
fiadds
js
push
nop
jae
pop
pop
mov
jmp
fiaddl
test
jnp
sti
xor
mov
rolb
add
and
and
in
inc
lahf
lea
jl
and
add
je
movsb
ficoms
bound
inc
mov
sarb
sub
bound
and
add
add
or
and
pop
or
mov
mov
jb
xor
lds
push
jno
rcl
fstl
xchg
cwtl
loop
pop
data16
mov
inc
ds
xor
mov
or
jae
fistl
in
popf
aaa
ds
inc
mov
fnstenv
pop
call
add
mov
call
cltd
icebp
xor
out
jmp
or
cmp
pusha
xchg
orl
xor
adc
out
xchg
push
scas
xchg
add
fcmovnu
add
xorb
or
mov
iret
roll
sbbb
fcomps
lock
and
out
jmp
add
add
out
sahf
rclb
arpl
popf
jp
rolb
insb
fiaddl
mov
adc
mov
mov
in
add
adc
sub
pusha
inc
rcll
push
fcomip
mov
cmc
mov
leave
xchg
jbe
sar
pop
jle
popa
and
mov
in
adc
jmp
loop
je
leave
iret
sbb
popa
pop
dec
rcrl
call
xchg
popa
stos
je
leave
pop
inc
icebp
jno
xor
pop
lds
pop
leave
or
pop
mov
push
add
and
arpl
jnp
inc
and
sub
je
dec
sbb
mov
test
dec
sub
add
cmp
add
imul
cmp
cmp
dec
adc
add
add
push
and
or
add
or
mov
mov
xor
mov
or
add
or
call
test
mov
push
inc
xchg
dec
push
inc
arpl
es
aad
test
inc
fisttpll
bound
xlat
jnp
and
stos
push
or
aaa
cmp
fmul
std
test
pushf
roll
roll
popf
xchg
bt
jge
xlat
adcl
push
xchg
adc
and
mov
ret
add
jmp
xor
or
sbb
out
loopne
mov
ds
bound
adc
loope
outsb
aam
repz
and
pop
sub
xchg
sti
inc
cmp
fdivrp
je
fnstcw
jle
mov
adc
jae
test
bound
jno
dec
lds
cmp
out
or
adc
in
fs
lods
insb
aad
out
fsts
sbb
test
inc
out
out
sbb
or
and
out
es
insb
insl
ss
sbb
and
inc
push
xor
sub
mov
mov
bound
add
add
sub
es
test
icebp
cmp
std
xchg
jns
jae
pop
sbb
push
jae
cld
je
test
stc
loopne
pop
stos
cmp
push
mov
jno
inc
jmp
popa
pop
sarb
je
push
test
int
test
lds
test
int
test
lds
test
int
test
lds
test
int
or
add
std
data16
scas
jmp
or
divb
outsl
xchg
mov
mov
call
mov
dec
sahf
or
add
mov
icebp
add
adc
jne
add
out
pop
fldl
mov
icebp
adc
dec
pop
mov
add
je
popf
mov
mov
add
jp
int3
call
mov
imul
jecxz
and
sti
push
into
call
xchg
mov
stc
and
pop
stc
and
out
and
out
clc
and
idiv
and
clc
and
popa
mov
mov
cmp
test
add
xor
dec
test
inc
repnz
or
add
fcoml
and
outsl
cmc
dec
fwait
loope
push
fdivrp
add
bound
lea
imul
jnp
and
add
bound
xlat
pop
fldenv
add
fldenv
inc
int
movl
ret
sub
subb
jae
xor
or
loop
lret
fs
adc
fnop
xchg
out
jmp
dec
outsl
add
xlat
inc
adc
or
std
pop
lea
std
repz
std
daa
lea
std
pop
lea
std
lret
mov
adc
lea
imul
add
fldl2e
add
add
xorb
mov
adc
ljmp
stc
push
mov
add
popa
fisttpll
jmp
xchg
dec
leave
add
das
and
testl
push
dec
add
testl
jmp
popa
leave
add
mov
dec
enter
inc
xchg
pop
dec
dec
lds
loopne
out
stos
subl
add
add
stos
and
and
add
mov
mov
xor
push
mov
inc
sub
push
mov
ljmp
stos
and
and
and
and
and
and
jb
xlat
lea
decl
add
out
sbb
mov
xchg
sbb
ja
sbb
push
icebp
sbb
mov
cmc
pop
cmpsb
mov
outsl
stos
shrl
jl
jb
jl
inc
xorb
cmc
andl
outsb
aam
mov
aam
and
push
mov
in
adc
mov
and
jae
mov
clc
and
cmc
pop
es
jae
mov
inc
imul
mov
jae
mov
sub
push
fildll
adc
into
and
xor
pop
fcoms
mov
arpl
or
aad
fdivp
fisubl
mov
jno
loope
shll
xor
jmp
repnz
jb
fisubs
add
fnstenv
lds
lret
push
daa
imull
cmpsl
xlat
ficomps
lock
out
cmc
push
mov
add
les
je
cmpl
cmp
fiaddl
add
bound
les
cmp
mov
adc
jp
xor
mov
jae
mov
std
stc
sbb
jmp
les
mov
fdivrl
jo
adc
mov
or
mov
sub
add
dec
push
adc
push
out
nop
or
jmp
push
jnp
fdivrl
sub
push
push
into
lods
push
inc
add
mov
jmp
mov
jge
js
aam
lea
dec
push
in
mov
pop
mov
lea
pop
call
jbe
jmp
mov
sbb
push
mov
pop
xor
inc
in
fisttpl
cmp
mov
xor
inc
push
mov
pop
dec
inc
inc
sbb
adc
mov
and
bound
add
hlt
push
mov
std
xor
fsubrl
cmp
add
mov
rcr
in
int3
test
scas
jge
std
es
cs
int
mov
pop
mov
xchg
sar
mov
ret
dec
out
pop
test
xchg
imul
add
add
enter
loop
inc
xor
js
test
lea
int3
ret
add
fsubrs
adc
adc
adc
popf
in
mov
je
mov
mov
pop
mov
adc
fsub
cltd
out
cld
fwait
mov
loope
into
cmc
add
xchg
mov
mov
or
add
add
push
js
das
adc
sbb
add
push
inc
rorl
sbb
push
push
dec
jns
pushf
cmpl
bound
imul
inc
test
pop
or
fimuls
mov
add
flds
je
mov
push
mov
xchg
inc
push
rcr
daa
jmp
xor
add
adc
sbb
das
test
jne
push
fildl
rorb
jmp
dec
inc
inc
mov
sbb
adc
test
das
fwait
std
ret
ja
push
adc
push
xor
add
pop
jno
push
adc
rorb
mov
je
cltd
std
add
add
inc
jmp
add
pop
mov
add
add
movsb
or
add
jmp
std
adc
xchg
jb
orb
pop
loop
decl
cmp
cmova
inc
mov
and
inc
adc
mov
incl
add
bound
add
inc
push
fisubrs
add
or
jb
mov
jge
into
add
inc
push
fists
imul
outsl
cmp
xor
add
bound
imul
std
outsb
std
ja
add
inc
push
add
bound
imul
jo
mov
xor
add
bound
imul
ja
mov
fldenv
push
arpl
fldcw
pop
dec
mov
mov
mov
shlb
fs
out
and
imul
ret
dec
orl
mov
push
imul
ret
and
fldenv
sub
pop
sbb
adc
rolb
add
add
insb
inc
jbe
push
pop
data16
sbb
ret
aad
cmpsl
iret
arpl
fs
dec
shrl
lods
roll
and
xchg
fiaddl
insb
and
mov
mov
fiaddl
and
cmp
into
pusha
pop
or
pop
fsts
outsl
out
flds
xor
dec
inc
je
or
pop
sbb
jae
xchg
xor
dec
popa
or
pop
sbb
xchg
cmp
call
jno
fprem1
in
neg
fldenv
rcrl
into
push
jbe
shrb
mov
push
int3
push
stc
in
adcl
sti
cmovo
fildl
xor
lret
test
gs
decl
les
sldt
add
ljmp
decl
add
enter
popf
nop
cmp
add
mov
push
hlt
icebp
je
jnp
xchg
jle
jb
popa
xchg
push
ljmp
adc
mov
popa
in
je
or
fistps
xchg
lret
fiaddl
mov
jb
jb
push
aaa
mov
push
mov
xchg
ljmp
mov
incl
add
add
mov
bound
jge
arpl
enter
ret
inc
sti
ret
add
bound
or
push
jge
arpl
xchg
pop
addl
mov
imul
mov
adc
pop
pushf
mov
or
xchg
sti
pusha
push
xchg
repz
dec
fnsave
sub
adc
add
fldl2e
xor
jo
stc
push
bound
test
xchg
out
addr16
xchg
outsl
fsubs
push
mov
in
jle
xchg
xchg
fisttpll
popa
iret
imul
xchg
xchg
mov
xor
int
cwtl
out
add
ret
adc
jb
inc
jmp
add
mov
clc
mov
pushaw
clc
iret
or
jb
addl
mov
test
xor
aad
mov
xor
cmp
and
aad
scas
je
mov
mov
mov
add
push
mov
xchg
insb
and
sbb
mov
sbb
push
adc
dec
int
and
sbb
push
rcl
adcl
and
sbb
test
push
and
add
aam
add
add
adcl
adc
and
repnz
add
test
test
notl
xor
push
xchg
and
adc
ljmp
mov
add
add
jmp
sbbl
call
into
mov
push
movsb
das
and
pop
add
test
mov
mov
cs
mov
dec
fiaddl
add
push
cmpsl
dec
das
sarb
lret
or
enter
lock
std
call
aad
int
out
pop
dec
jp
notw
incl
add
add
jp
lods
outsb
std
inc
imul
dec
pop
call
andb
andb
lret
ret
and
add
add
push
jmp
jl
adc
addl
bound
test
and
js
dec
pop
fnstenv
inc
in
or
pop
sub
jp
loope
into
and
out
fadds
out
pop
mov
movsl
pop
fldl2e
push
cmp
xchg
mov
pop
imul
sub
bound
xchg
js
mov
popf
sti
adc
adc
pop
es
fnsave
gs
dec
jns
xchg
cltd
jmp
jle
aad
lahf
mov
int3
xchg
fwait
jmp
fsts
add
mov
ss
in
in
jb
sbb
and
popa
fldl2t
jmp
cltd
test
arpl
and
insb
pop
fucomp
or
flds
scas
cmpsl
lcall
jp
or
and
push
fsubr
in
flds
sub
push
bound
test
in
test
imul
jae
push
sub
fdiv
mov
fwait
std
add
adc
cmp
lock
testb
mov
inc
or
inc
add
fsubrs
aad
je
xor
shrb
inc
add
sbb
es
xchg
std
push
push
ljmp
lret
fistpl
mov
incb
mov
xchg
pop
mov
movl
xor
add
outsl
inc
jle
add
or
out
and
jmp
adc
incb
push
ja
addb
jmp
jo
aas
bound
add
je
add
push
dec
stos
mov
push
int
popa
adc
subb
xchg
mov
call
faddp
in
adc
jne
insl
push
addb
adc
inc
bound
push
xchg
xchg
sar
push
stc
push
xlat
xor
jns
push
jg
data16
add
add
imul
sub
imul
cmpsl
lock
pop
jg
mov
add
aaa
imul
mov
push
in
push
ljmp
jb
jl
mov
in
popa
xchg
movsl
mulb
je
cmpsl
lea
pop
xchg
out
loope
filds
fisttpl
in
jnp
fnstsw
inc
popa
fldenv
inc
aad
popa
pusha
test
call
and
jae
loope
dec
lea
fsubrl
fldl
jmp
sti
fdivr
sbb
cmpsl
adc
das
cltd
jmp
add
add
inc
push
or
call
cmp
fcomp
mov
test
pusha
mov
sub
mov
out
push
aam
popf
insl
pop
inc
stc
ds
xchg
shlb
pushl
adc
inc
cmp
inc
or
andl
jbe
repz
add
mov
mov
mov
and
add
xchg
std
andb
xor
xlat
push
mov
jnp
dec
mov
add
ljmp
repnz
mov
std
sub
incb
jle
jae
cmp
add
mov
xlat
pop
ret
bound
jmp
lea
add
outsl
fmull
inc
cmc
inc
jae
out
inc
ljmp
mov
xchg
jl
mov
adc
subb
cmp
insb
lock
mov
add
xchg
out
mov
cmpb
loope
add
xor
shll
pop
add
lock
jg
je
mov
cmpsl
add
mov
arpl
jge
add
fldcw
sub
in
out
gs
add
and
dec
gs
out
and
int3
lock
add
add
jbe
aad
adc
pop
pop
push
pop
mov
add
xchg
flds
xchg
fisubrs
and
xchg
add
sub
push
dec
add
xchg
add
inc
test
sbb
add
push
scas
xchg
push
test
and
insl
push
call
sub
add
add
repnz
adc
mov
cltd
mov
imul
or
std
aam
out
inc
jmp
les
pop
bound
add
movsb
xchg
ret
mov
sub
inc
sbb
ds
std
hlt
cltd
out
inc
add
inc
stc
push
push
ja
dec
mov
adc
dec
adc
sarb
std
je
mov
jno
std
jo
push
xor
sti
fcomi
fsubs
ds
sub
or
xchg
and
add
subb
ret
incb
mov
jl
mov
ljmp
pusha
notl
movsb
lahf
push
cli
cli
jae
adc
or
bound
add
arpl
out
xchg
lods
sbb
and
cmp
lods
sar
jmp
add
idivb
int
mov
pop
data16
push
scas
sbb
mov
lahf
add
mov
insl
push
sub
sub
push
and
les
fadd
mov
out
psubd
add
cmc
inc
jae
insb
adc
jno
arpl
jl
nop
xor
pop
loope
sub
push
dec
fldl2e
shr
rorl
loop
in
or
mov
bound
arpl
fldt
jl
daa
xlat
pop
push
mov
pop
pop
or
data16
mov
mov
out
faddp
daa
sub
popa
lods
fstp
notl
in
daa
add
cwtl
push
std
popf
push
cmc
add
jmp
aam
push
sbb
xchg
jb
pusha
dec
shl
fstl
lds
pusha
int3
test
pop
inc
in
loopne
mov
and
icebp
popa
sub
inc
loope
test
popa
fsts
adcl
test
xor
add
mov
stc
xchg
sti
push
add
inc
imul
shl
push
inc
imul
cmpl
ret
cmp
cltd
lcall
popa
fsts
enter
outsl
test
cmp
mov
add
roll
add
stc
mov
inc
lret
mov
data16
add
add
add
sub
shrb
fwait
and
dec
mov
push
sar
dec
pop
mov
cmp
std
cmp
mov
add
addb
pop
or
inc
sbb
push
and
jmp
ficomps
outsb
inc
add
fldl
add
mov
push
jo
push
push
xor
insl
pop
incb
add
add
or
sti
fistpll
aaa
jp
jo
sti
imull
push
xor
mov
cltd
adc
sub
mov
ja
repz
bound
fldcw
jb
adc
add
fidivs
dec
out
pop
flds
out
jmp
jl
andl
or
ja
idivb
bound
hlt
imul
out
ljmp
jmp
clc
and
in
cmc
ret
aad
xchg
lods
in
daa
add
cltd
push
mov
out
out
xor
jecxz
adc
dec
clc
movsl
in
cmpsl
add
jne
outsl
dec
es
mov
aam
mov
shlb
js
arpl
mov
arpl
sub
mov
add
add
scas
imull
or
std
ret
sub
fstps
or
mov
mov
mov
lcall
shl
sub
je
js
in
adc
mov
popa
or
add
mov
imul
or
inc
out
push
enter
fmull
test
es
popa
adcb
jne
add
and
mov
stc
jle
push
jae
aaa
mov
push
inc
add
sbb
fsts
or
std
pop
push
subb
in
jmp
or
add
sbb
jb
pop
push
jno
les
ret
pop
jmp
mov
inc
push
push
mov
test
mov
mov
mov
int
mov
and
or
and
dec
decl
fbstp
daa
jnp
jae
je
and
and
test
dec
rclb
dec
push
hlt
mov
rorb
pushl
jo
inc
ds
movntq
fldcw
lahf
jmp
ret
inc
xor
in
frstor
sbb
test
and
ror
insb
pop
leave
push
pop
dec
lds
pop
jae
stos
pop
jae
ficompl
pop
pop
lock
ja
add
stos
repnz
pop
sbb
mov
mov
push
ljmp
add
iret
cmp
push
rcl
loopne
add
jmp
jmp
add
add
out
fistps
mov
shrl
jecxz
pop
jg
hlt
call
jle
or
sub
jg
add
mov
shrb
sbb
adc
call
daa
mov
cmp
jle
pop
jle
decl
fs
icebp
shrb
je
popa
add
jb
pop
push
movsb
pop
call
push
daa
iret
push
lods
push
inc
cwtl
out
xchg
and
lods
imul
ds
or
inc
jmp
sbb
push
leave
rorl
std
mov
cmp
or
jb
jmp
or
call
flds
subb
popa
fnstcw
pop
fadds
jmp
push
stc
push
scas
int
ficompl
jno
sub
xor
mov
jle
fisubrs
push
push
dec
popf
adc
or
enter
std
push
mov
sub
out
push
leave
push
inc
cld
imul
andps
insl
add
sti
add
ss
lds
mov
add
sbb
jae
std
cld
imul
mov
cmc
fcom
sbb
leave
stc
rolb
push
xor
push
push
in
lea
outsb
add
sub
call
sub
sbb
cwtl
enter
aad
fdivr
push
dec
push
mov
mov
mov
bound
adc
add
dec
insl
cmp
jb
jne
fisubl
sub
addl
fildl
add
add
daa
cs
push
std
movsb
xor
lret
pop
in
adc
ja
add
pop
lahf
cmp
imul
add
out
push
cs
cmp
movsb
pushl
mov
xor
push
test
lods
xchg
pop
inc
pop
adc
mov
cmc
pop
fnstcw
out
fld1
mov
and
xchg
fldpi
stos
add
call
mov
add
push
cmpsl
iret
jb
fdivrl
ja
call
in
xor
popf
stc
ret
ffree
mov
push
les
xchg
xchg
in
add
subl
mov
shl
ret
xchg
and
out
mov
dec
stos
pop
inc
sub
jmp
adc
int
jp
push
jnp
stos
mov
cmp
and
out
flds
je
dec
dec
int
push
jne
jno
aas
popa
or
loope
adc
imul
cmpsl
subl
push
call
das
in
fbld
add
add
sbb
xchg
adc
iret
and
xor
js
push
aaa
push
fs
mov
add
lock
mov
das
fildl
xchg
and
jae
push
add
jns
dec
stc
mov
and
sub
sub
mov
adc
fmull
jne
movnti
orb
adc
push
je
add
add
into
call
mov
fcoms
inc
mov
xor
sbbb
mov
sub
add
mov
popa
clc
jne
sub
pushl
daa
out
fists
add
pop
mov
into
sbb
dec
pop
push
inc
jae
add
fdivrs
xor
aam
xorb
bound
inc
push
mov
imul
adc
bound
push
dec
lea
mull
push
ret
and
push
negl
ret
mov
mov
pop
add
jmp
mov
xor
imul
movl
fstpl
loop
fld1
fmuls
bound
add
add
inc
ror
add
or
iret
sbb
call
mulb
add
sbb
inc
add
fisttpl
ljmp
inc
jno
pop
movl
pusha
add
jle
mov
mov
push
adc
fbld
test
push
pop
sub
mov
sbb
push
mov
arpl
jb
pusha
or
ss
push
or
sti
mulb
icebp
mov
je
fisubs
or
aam
lret
inc
jmp
sahf
ret
dec
xor
aam
int3
adc
xorl
mulb
mov
inc
icebp
mov
adc
call
loop
out
push
pop
add
add
add
bound
cli
add
mov
sub
pop
jmp
push
mov
int3
fsts
into
js
insb
roll
leave
std
adc
shlb
or
adc
bound
inc
or
fwait
add
add
out
inc
and
testb
inc
arpl
aas
shll
or
mov
xchg
and
ss
sarl
mov
sar
addb
bound
add
jp
add
fnstenv
jge
jle
pop
add
cmp
and
add
cmp
xlat
pop
sub
idivl
std
inc
push
add
bound
add
add
cmp
sti
add
jp
dec
cmp
aad
jnp,pt
jae
or
sbb
jmp
cwtl
paddq
or
rcrl
jl
mov
ret
data16
push
mov
das
pusha
and
frstor
fs
dec
add
fcos
scas
inc
enter
add
sbb
popf
out
cmp
imul
add
ret
fists
jae
xchg
loop
cwtl
or
add
sti
std
jb
jnp
jae
or
sbb
add
pop
pop
shlb
jae
loope
mov
fdivl
add
mov
fdecstp
sub
jp
and
xorl
sbb
jl
or
in
sub
in
mov
sti
out
pop
jl
pop
fnstenv
loope
and
in
dec
push
sub
mov
mov
dec
jb
jge
mov
mov
fadds
jmp
cmp
mov
mov
std
pusha
mov
sbb
adc
push
add
loop
lret
aad
clc
leave
je
f2xm1
test
adc
and
fadd
inc
lahf
addr16
mov
aad
iret
jecxz
dec
add
fidivl
adc
add
pop
pop
clc
and
inc
fstl
in
and
std
cmp
jns
aas
lret
xchg
jne
adc
mov
daa
push
decl
outsb
inc
sti
dec
push
adc
call
sub
add
push
jne
je
ljmp
vmovaps
or
insl
pop
adc
push
mov
aas
std
int3
pop
sub
push
das
fdivr
push
aaa
not
and
and
pop
adc
dec
dec
idivb
jmp
or
mov
or
add
add
add
or
add
sub
mov
xor
add
cmpb
aad
sbb
push
idivl
fldcw
popa
fldcw
in
dec
das
jo
addr16
sbb
xchg
fstps
xchg
out
pop
jo
cld
lds
jge
push
pop
fldcw
add
fnstcw
add
sbb
mov
dec
ret
or
add
add
out
sub
dec
push
mov
fbld
call
sahf
out
loop
setne
push
loope
cmpsl
add
fld1
adc
add
push
push
inc
jmp
data16
mov
push
add
mov
pop
fiadds
jo
in
sub
lods
aam
outsb
mov
push
rclb
rolb
add
sbb
and
popa
flds
xchg
adc
popa
jmp
add
inc
adc
adc
leave
push
fs
mov
and
decl
and
test
mov
cld
aam
add
and
cld
xchg
inc
and
pop
inc
add
aad
inc
addr16
push
pushl
repnz
and
out
mov
lea
icebp
cmp
push
mov
std
mov
sbb
jo
inc
ja
push
dec
or
pop
adc
gs
orl
sbb
jl
add
and
fadds
add
int
xchg
fistl
add
addb
xchg
jp
loope
add
cmc
sub
push
lods
ficoms
jp
jl
bound
test
arpl
les
bound
add
fadds
bound
pop
movsl
lea
mull
std
mov
or
rclb
cmpsl
pop
jecxz
jmp
sbb
mov
mov
hlt
push
mov
int
outsb
fldcw
fsub
mov
xchg
bound
into
outsl
out
fstl
ret
cmpsl
add
xchg
repz
add
jle
inc
ss
cmp
fbstp
call
mul
inc
out
bound
and
fsts
icebp
loope
daa
add
xlat
call
jns
mov
mov
adc
lock
or
mov
adc
cmpsl
add
cltd
add
cmp
popf
insb
call
insb
pushf
out
hlt
add
cltd
pushf
call
insl
cmpsb
out
out
adc
xlat
inc
in
sbb
cld
mov
inc
jmp
loope
or
pop
xlat
jmp
outsl
pminub
pop
data16
jb
jb
daa
flds
rorl
call
les
add
ficoms
push
mov
loope
std
jmp
xor
push
decl
lret
out
sub
ds
cmovo
in
adcl
test
std
sldt
add
or
push
dec
popf
imul
fs
xchg
std
mov
ljmp
push
inc
and
lahf
addr16
decl
jmp
add
lret
aad
push
inc
cltd
and
imul
and
std
jnp
insl
adc
adc
cmp
cwtl
and
adc
sub
pop
andb
mov
out
sbb
add
mov
mov
insl
js
xchg
inc
jle
int
or
outsl
cli
repnz
bound
and
push
cmc
insl
popf
adc
push
cli
mov
in
out
add
sub
inc
pop
loope
cmc
shrl
mov
repz
pop
fbld
ja
jmp
mov
int
loop
inc
add
sbb
popa
je
cmpb
into
adcl
cmp
sti
cmp
lods
inc
jg
in
add
adc
xchg
out
or
inc
mov
push
push
push
jmp
xor
cvtps2pi
std
pop
sbb
jecxz
add
inc
sbb
pusha
les
add
add
sbb
mov
push
lods
xor
lods
jne
jbe
add
mov
je
scas
leave
fistl
jmp
imul
movsl
popa
adc
outsl
sbb
jb
pop
idivb
inc
xlat
push
mov
popa
repz
mov
sarb
lds
inc
xchg
std
mov
inc
jb
jb
add
add
fstps
mov
data16
and
or
ds
or
push
inc
xchg
xchg
push
inc
mov
sbb
test
xchg
cmovo
mov
popf
jno
mov
push
in
test
dec
inc
clc
fstpt
push
hlt
sbb
add
lcall
orb
mov
mov
mov
arpl
add
insl
repz
jo
pop
leave
mov
jno
add
push
push
push
pop
push
mov
cltd
std
mov
sbb
scas
push
inc
and
rcll
push
aas
call
mov
fisubrs
mov
jge
int
and
imul
mov
mov
add
add
aam
cmp
enter
int3
out
sub
add
mov
mov
and
push
sub
jb
inc
inc
bound
jle,pt
push
jp
inc
incl
sar
jp
jne
out
and
dec
jae
test
mov
inc
dec
arpl
mov
or
stos
or
cmp
aaa
or
pop
xor
add
adc
xor
call
add
mov
xchg
push
sbb
mov
dec
inc
shrl
add
add
mov
mov
mov
ja
mov
xlat
cmp
mov
aam
jae
call
or
xchg
iret
enter
fiadds
add
add
jae
loopne
jmp
sub
add
mov
call
data16
imul
push
inc
icebp
loopne
std
cmc
rcll
xchg
adc
aam
leave
inc
jmp
data16
fdivl
push
inc
push
out
add
jo
jo
ret
gs
add
popa
fsts
insb
int
sti
and
out
ljmp
add
aaa
fs
xor
cmp
mov
test
mov
xlat
mov
mov
push
ljmp
lcall
mov
movsb
adc
xor
push
or
jg
push
mov
push
cmp
shrl
or
add
mov
cmovo
jnp
dec
sub
ljmp
movl
in
push
mov
add
inc
mov
jecxz
std
decl
dec
idiv
mov
inc
sti
lea
jne
repz
adc
inc
add
test
clc
cmp
in
test
and
addr16
add
cwtl
xchg
jo
ret
dec
out
cmp
push
scas
xchg
xchg
pop
cmp
or
cli
jge
sub
mov
and
bound
cmpsl
add
jb
add
mov
xchg
adc
adc
rorb
scas
xchg
push
mov
pop
sbb
push
movsb
push
xor
mov
fldt
push
roll
bound
xor
pusha
into
aad
or
lds
mov
add
add
call
add
xor
shll
lods
std
push
daa
add
dec
outsl
ret
jge
insb
cmp
outsb
stos
popa
add
jno
movsl
arpl
push
jno
dec
cmp
mov
xchg
ds
dec
pop
xor
pusha
mov
fdivrl
fldenv
into
addl
jae
call
vdivps
lea
add
add
inc
stos
outsb
fldl2t
loope
pop
andl
std
data16
in
out
xor
add
mov
mov
aaa
sub
add
and
push
push
aad
push
mov
dec
sbb
bound
push
div
movsl
or
pop
clc
mov
roll
iret
loop
jae
in
jbe
sub
cmc
xchg
push
add
add
pop
andb
in
mov
je
add
jbe
jmp
xchg
lds
pop
in
je
cmp
jmp
out
pop
lea
push
mov
mov
add
ficoml
ljmp
mov
push
dec
and
mov
mov
xchg
mov
mov
repnz
add
add
cmc
subl
cmp
fiaddl
call
sbb
rclb
and
mov
mov
and
fimuls
adc
fmuls
add
mov
add
andb
jb
add
mov
sar
das
lods
mov
das
or
push
sub
or
push
test
and
mov
or
sbb
push
mov
test
push
sub
decb
out
mov
lods
or
add
std
ret
fucomip
imul
fstps
rclb
xchg
in
in
out
jbe
test
out
out
bound
rorl
push
aad
in
in
lods
adc
fldcw
push
add
cmp
jbe
test
jmp
ret
daa
add
int3
ss
push
push
aaa
xor
push
mov
stos
in
test
fcom
or
jno
scas
push
out
pop
sub
inc
repnz
mov
out
xchg
push
jp
add
add
xchg
push
roll
sub
lds
and
sbb
xchg
push
jmp
popa
push
jae
mov
and
jne
and
insl
call
xor
sub
arpl
jl
leave
mov
popa
push
fscale
insb
push
aam
int3
inc
jmp
cmp
pop
sub
push
mov
push
xlat
add
lods
push
mov
push
test
out
pop
test
dec
jg
je
jg
fmuls
dec
fiaddl
mov
call
mov
pop
jne
pop
jns
shrl
xor
arpl
je
xor
pop
fimull
dec
test
and
sub
sbb
sbb
sbb
sub
sbb
or
mov
leave
add
mov
loopne
test
aas
xlat
movb
orl
and
xchg
cmp
mov
divl
mov
out
mov
fistpll
incb
pop
jge
jp
aam
fistpll
fstpl
xlat
cmp
sbb
adc
xor
aam
clc
test
add
cmp
int3
sbb
js
shlb
add
add
dec
imul
fdivl
push
push
es
loopne
out
stos
loopne
jne
fstl
fnstcw
aam
cltd
push
popl
mov
lock
into
in
lock
fs
adc
sahf
mov
or
out
sbb
xchg
jmp
sub
cld
fdivrs
jmp
push
inc
icebp
out
add
add
sahf
and
jne
fidivrs
into
cli
sti
insl
int
jg
into
jecxz
mov
sbb
orl
movl
push
rcr
jne
mov
jmp
sbb
cmp
push
fidivs
das
jmp
in
pop
add
pop
test
adc
mov
push
rcrb
pop
rcrb
push
arpl
cmpsl
mov
arpl
mov
push
scas
add
loope
fsts
rcrb
cli
into
jno
jge
pop
fs
fs
sti
sbb
ds
inc
jmp
pop
fs
insb
sub
adc
fbstp
fidivl
imul
inc
lret
ja
inc
pop
ljmp
add
add
push
add
adc
enter
and
add
or
movsb
jbe
mul
mov
jo
mov
sub
mov
popa
repz
dec
lock
fadds
mov
aad
jmp
popa
iret
je
dec
mov
mov
fimull
leave
push
dec
push
push
cld
or
incl
add
add
andb
je
add
je
xchg
inc
test
lcall
inc
and
inc
ja
jmp
mov
inc
rcrb
inc
imul
mov
test
mov
addl
add
aad
pop
xchg
neg
out
mov
mov
in
push
scas
mov
gs
sbb
xchg
pusha
push
mov
out
jnp
or
add
rcr
mov
add
mov
sbb
xchg
ss
pop
insb
inc
cli
fisubs
fidivl
or
jecxz
xor
insb
push
shl
push
mov
fcompl
sbb
imul
xchg
into
jmp
add
insb
push
xchg
in
out
add
push
mov
add
add
dec
fprem1
pop
adc
mov
sbb
pop
in
out
mov
jmp
add
pusha
ret
rclb
or
xor
daa
xor
adc
adc
lods
mov
add
insb
push
enter
in
test
mov
inc
mov
mov
insb
mov
add
jmp
popa
pusha
dec
loope
and
add
add
loopne
cli
mov
sub
pop
pop
int
scas
push
jb
negl
ret
fsts
bound
pushaw
mov
sahf
dec
pop
outsb
mov
inc
fldt
jae
loopne
add
inc
rolb
add
adc
ret
mov
xor
jne
inc
mov
add
cmc
cmpsl
aam
mov
push
mov
into
ror
xor
jne
dec
mov
cld
sti
out
xor
dec
inc
push
jle
push
inc
inc
into
ror
xor
xor
iret
mov
ds
add
test
or
add
jmp
scas
jne
mov
test
add
add
dec
imul
or
dec
je
cmp
bound
addl
lret
scas
push
out
cld
dec
cmp
incb
cld
test
xor
xor
sbb
jp
pop
and
push
jmp
mov
pop
mov
mov
je
mov
pop
or
in
jl
push
jp
outsb
mov
mov
xor
cmp
gs
and
mov
sub
loopne
repz
or
sarb
pop
xor
gs
mov
add
pop
nop
cwtl
jge
out
sub
out
aad
inc
test
push
shr
imul
inc
ficoml
or
xchg
pop
and
andb
ds
adc
lods
daa
xchg
lret
pop
arpl
cmc
out
popf
lret
adc
shrb
out
push
daa
mov
mov
int3
and
mov
push
jb
cmp
xchg
shl
dec
jp
pop
pop
jae
loope
and
popa
push
bound
push
std
adc
bound
jb
jmp
out
loope
leave
xchg
les
pop
sldt
add
pop
lods
subl
push
arpl
bound
jl
dec
push
jmp
sbb
out
popa
flds
jb
sti
sbb
inc
arpl
fs
roll
push
dec
icebp
jle
mov
inc
and
rolb
iret
es
aam
add
jl
cmp
lcall
decl
and
aam
push
xchg
and
rcrl
pop
and
iret
mov
and
rcl
call
and
sub
lcall
std
push
mov
das
adc
call
jmp
or
and
xor
or
loop
cmp
add
test
ret
pop
add
fmuls
pop
jmp
cld
loopne
adc
lods
and
lods
std
popf
popl
cs
mov
aam
lea
sbb
push
jge
loopne
mov
insl
or
jae
or
inc
jle
add
gs
add
jmp
inc
iret
mov
mov
push
xchg
cmp
mov
roll
loope
sti
std
bound
add
stos
lret
add
movsb
bound
xchg
test
jle
pop
jle
aad
jmp
bound
xchg
dec
out
sti
test
ret
mov
push
adc
fnstcw
jl
push
mov
push
in
push
push
out
push
push
aaa
sarb
jle
ret
into
jl
push
fs
clc
jb
out
cmpsb
jnp
mov
pop
or
sahf
imul
push
daa
jge
push
out
mov
fsub
mov
xchg
loope
add
add
add
inc
icebp
pop
data16
sub
sarl
orl
dec
dec
mov
adc
shr
and
xchg
mov
lods
adc
or
mov
xchg
dec
je
insl
dec
adc
cmp
std
dec
pop
push
push
xor
leave
int3
mov
dec
addl
push
mov
lods
mov
jp
and
aas
int
push
push
sub
mov
insl
std
push
inc
sub
mov
sub
push
add
push
fisttpl
or
mov
hlt
and
push
jle
push
mov
repz
mov
cwtl
xchg
mov
xor
xchg
mov
mov
negb
and
cmp
jno
mov
sbb
push
xor
dec
and
dec
iret
test
inc
inc
lret
and
mov
push
sti
dec
mov
adc
and
es
adc
imul
jb
xor
mov
sbb
jecxz
and
es
sub
adc
add
add
dec
mov
mov
cmp
ret
sub
fldcw
cmp
dec
jp
xor
and
push
fsts
sub
cmpb
inc
jp
adc
pop
fdiv
loopne
mov
stc
inc
punpckldq
jns
loope
add
in
xor
scas
adc
dec
rcr
gs
fdivl
int
jmp
lds
call
rcr
cmp
jp
icebp
mov
fnsave
add
aad
scas
jno
jl
es
inc
xor
fimuls
dec
mov
js
cmp
sbb
pop
fstps
jns
out
pop
scas
sub
push
xchg
dec
sbb
gs
mull
aad
scas
pop
pop
cmpsl
mov
dec
add
lret
cmp
insb
pop
dec
std
jb
xor
pop
pushf
cmpsb
pop
sub
cmpl
push
or
bound
push
inc
int
test
std
jmp
aad
add
push
je
gs
idivb
push
inc
lds
adc
mov
cmc
fsubrs
pushf
and
sbb
jae
or
and
mov
push
or
add
jne
add
xor
push
inc
out
popa
flds
pop
adc
test
in
mov
sbb
mull
adc
add
shl
daa
adc
sahf
dec
subl
daa
adc
sub
add
inc
lods
mov
jae
xchg
add
dec
add
lret
xor
addr16
and
cwtl
in
mov
add
fildl
mov
adc
mov
mov
mov
roll
add
mov
dec
scas
enter
push
out
add
bound
cmp
mov
aam
mov
and
mov
adc
and
fmuls
sub
mov
adc
mov
add
add
adc
dec
xchg
fiaddl
bound
cmc
mov
sbb
mov
mov
jnp
rorb
outsl
jl
aas
fstps
push
adc
fyl2xp1
ret
insl
push
sub
ficomps
sbb
outsb
sub
cli
xlat
mov
cld
in
out
pushf
ret
out
inc
sbb
ret
and
pop
lret
out
add
icebp
and
fsubl
cltd
out
aaa
add
cwtl
inc
push
ljmp
mov
push
add
int
out
pop
fcos
insb
cltd
fsub
xchg
lret
in
lods
scas
movsl
rorb
inc
cs
call
popf
sti
add
add
push
lds
movsb
pop
push
ret
add
add
push
xor
lods
mov
sub
inc
xor
decl
adc
test
mov
xor
cmc
xor
imul
bound
stc
xor
aaa
mov
aad
adc
lods
and
in
enter
clc
adc
mov
and
faddl
push
pop
add
popf
push
add
pop
pop
cli
jno
fwait
stc
adc
insl
sbb
orb
mov
cli
adc
sub
std
pop
test
add
pop
jmp
push
mov
das
mov
orb
outsl
cmp
cmp
outsb
adc
xchg
cmp
and
add
add
cmp
mov
and
orl
and
xor
and
bound
or
das
inc
dec
xor
add
sahf
and
mov
das
int
xchg
mov
addr16
jnp
xchg
or
jnp
add
icebp
jmp
xor
add
mov
popl
fistpl
or
loope
or
mov
mov
inc
addb
or
inc
loope
cmc
mov
sbb
cmp
mov
mov
sbb
out
add
mov
push
pop
pop
out
add
dec
lret
addb
adc
fmuls
mov
scas
push
call
fldenv
and
and
pop
stos
add
pushf
ret
jecxz
scas
jmp
ret
sbb
or
inc
call
add
lds
xor
or
inc
in
mov
ret
fisttpll
fimuls
xchg
jecxz
stos
mov
incb
call
cmpsl
loope
sub
cmc
iret
mov
ret
int
int
adc
cmp
cltd
sbb
adc
push
cmpsb
int3
cmp
pop
stos
mov
popa
push
shl
inc
je
sub
fsubrl
sti
or
xchg
data16
xchg
fimuls
out
jmp
shr
inc
mov
inc
inc
aaa
call
inc
aas
mov
add
push
jecxz
cltd
mov
call
xor
add
add
add
push
dec
pop
add
ficoms
mov
push
xchg
xchg
cmp
mov
sub
lahf
cmp
jnp
or
inc
subl
je
mov
repz
add
add
inc
subl
mov
fistpl
rcrb
add
call
test
test
fildl
add
and
push
lret
call
int
inc
jae
lds
and
cs
fidivs
or
xor
sbb
jns
sbb
into
xchg
sub
notb
inc
loop
pop
scas
shlb
add
shrl
pop
sbb
arpl
int
cmp
incb
add
add
out
shlb
mov
aaa
fdivr
lcall
ret
push
jb
inc
inc
pop
test
les
fldcw
or
push
dec
loopne
add
je,pt
push
test
enter
and
push
ret
xchg
add
mov
fsts
adc
arpl
mov
push
call
mov
add
add
leave
sub
bound
jns
arpl
cmc
fsub
add
xchg
ret
lret
xchg
push
sub
sbb
lds
fistps
pop
dec
lock
add
mov
nop
mov
mov
dec
int
xor
test
in
loopne
gs
mov
mov
ljmp
cli
fildl
pop
loop
mov
popa
fsts
in
jae
popa
push
aad
lcall
sahf
fstl
pop
data16
arpl
fldcw
fcompl
into
or
nop
and
mov
push
inc
jmp
movsb
loop
ret
xchg
cmp
pushl
jmp
push
push
mov
jb
adc
leave
sbb
mov
add
add
cmp
add
lahf
sub
inc
mov
fadds
lea
adc
jmp
fsts
mov
decl
cwtl
je
jns
call
mov
aad
dec
das
inc
push
ljmp
fmuls
add
call
mov
and
dec
and
nop
or
nop
arpl
mov
add
add
jle
lods
jnp
in
xor
cmp
xor
sub
stc
imul
add
adc
xor
pusha
xor
jmp
icebp
clc
cmp
into
lock
add
bound
add
pusha
xor
outsl
outsb
push
enter
cmp
add
bound
xchg
or
add
add
pop
push
stc
and
fimull
mov
xor
sbb
mov
add
scas
fsub
lods
xor
jo
in
out
xchg
test
add
xor
into
fldenv
lds
mov
sub
add
add
mov
mov
test
adc
mov
pop
call
enter
inc
loopne
call
add
sbb
mov
sahf
push
add
shl
mov
movsb
bound
in
mov
int
add
cmc
add
icebp
dec
inc
in
cmp
mov
dec
into
subl
shlb
sub
add
popa
lret
cmc
mov
andl
mov
ljmp
add
sbb
push
call
mov
add
xchg
and
mov
fwait
add
jmp
adc
or
sbb
push
mov
inc
shll
stc
add
in
test
inc
roll
mov
cmp
mov
or
ss
or
test
push
mov
push
cmp
mov
mov
mov
add
add
cmp
lods
dec
sub
xor
fiaddl
rol
or
push
jl
push
push
cmp
add
jb
add
adc
jl
popa
lret
call
pop
pushf
pop
pop
sahf
jb
ret
mov
bound
xor
inc
push
add
sub
lods
incl
jb
std
and
add
push
ljmp
add
jmp
stos
lea
ss
xchg
push
mov
pop
or
ljmp
or
adc
push
add
fiadds
add
add
push
cmpsl
cmp
fdivp
mov
inc
jnp
loop
icebp
mov
add
inc
pusha
sub
and
push
jbe
fdecstp
pop
and
stos
jl
icebp
enter
or
hlt
sbb
fucom
scas
jle
std
xlat
enter
out
lods
sub
int3
sbb
or
psrad
or
mov
xor
and
jge
pusha
es
loop
add
loop
jmp
sahf
pop
ljmp
loop,pn
add
loop
ljmp
add
add
ljmp
fcoms
pop
addr16
popa
inc
add
fidivl
fwait
adc
imulb
or
inc
adc
lret
call
jl
imul
ficompl
cmp
mov
mov
shll
lock
or
add
in
dec
pop
aad
push
mov
imul
add
popa
pop
rclb
fldenv
popf
stc
adc
fs
lds
enter
fisubrl
call
pop
jne
add
add
je
adc
jmp
push
mov
adc
dec
sbb
cmp
fadds
add
xor
mov
mov
negl
outsl
mov
in
movsl
lret
popf
jno
xorb
jbe
and
xchg
jb
add
pop
in
cmova
out
ss
mov
nop
enter
cwtl
pop
pop
push
xchg
add
jmp
addl
jae
bound
idiv
push
add
andl
or
adc
xadd
loopne
add
lret
bound
addr16
add
mov
add
fstps
int3
xor
mov
jle
es
je
mov
jg
jle
push
cmpsb
pop
push
addb
mov
inc
je
xor
rolb
add
inc
mov
out
test
dec
mov
stc
ja
mov
mov
inc
jae
pop
aad
cltd
pop
xor
mov
popf
out
dec
mov
mov
out
loopne
push
rcrl
out
sub
int3
add
popa
in
inc
lahf
fst
sti
sub
out
bound
std
loop
add
ficompl
pusha
xor
cmp
in
mov
jp
inc
loop
int
pusha
push
and
adc
mov
out
and
adc
pushf
xor
in
popa
flds
xorl
xor
shl
call
push
stos
or
xor
fs
xlat
and
subb
fsts
int3
aad
hlt
icebp
lret
inc
jmp
and
std
adcb
shrb
pop
arpl
jno
fdivr
pop
into
inc
loop
call
gs
add
pop
fsts
insl
pop
in
gs
flds
mov
pop
mull
cli
push
pop
cmp
xor
add
mov
add
aaa
call
fstl
jbe
adc
pop
rorl
jno
rolb
xor
mov
movzwl
and
pop
inc
sbb
out
fiaddl
add
cmc
std
mov
dec
incl
add
add
leave
cmovo
insb
adc
cmp
fisttpl
adc
sti
fdivl
mulb
sarl
mov
mov
fidivs
icebp
fisubrl
xor
cmc
mov
addb
mov
ss
mov
push
add
inc
xchg
sahf
mov
je
add
je
sahf
aaa
ljmp
testb
add
sldt
add
fidivrs
add
mov
xor
inc
add
mov
add
dec
sub
arpl
add
fisttps
add
lea
push
or
pop
xor
xchg
add
adc
jp
or
cltd
push
test
xor
mov
cltd
out
mov
cs
or
je
movsl
fimuls
jge
in
add
pop
sbb
fs
cmc
sbb
inc
push
dec
das
bound
cmp
fwait
divb
dec
aam
int3
lahf
aad
stc
call
inc
pop
pop
fldenv
clc
leave
mov
cld
movsb
aas
or
std
ret
in
pop
and
mov
jb
add
push
add
repnz
mov
das
adc
out
add
add
add
add
and
lock
fld
xchg
in
test
cltd
stc
call
cmp
lea
jp
push
lods
imul
add
jno
jp
test
cmc
jo
push
add
push
gs
nop
dec
lea
outsl
sti
cld
movsb
faddl
comiss
add
out
inc
and
or
push
adc
add
add
mov
add
add
shr
jle
xchg
fistpll
cli
inc
roll
jl
shll
loope
and
pop
enter
repnz
movsb
inc
mov
roll
jp
movsb
cwtl
pop
add
das
mov
pop
cltd
push
sbb
xchg
push
inc
pop
movsl
push
lret
push
ja
addb
movsb
aaa
shrl
add
mov
out
add
in
jp
bound
mov
push
mov
add
enter
fdivrl
dec
push
arpl
mov
adc
fucom
or
and
out
fucomi
xchg
mov
inc
mov
push
lahf
jns
pop
mov
enter
inc
dec
addl
add
cmpsb
push
setg
push
mov
sub
inc
add
loope
loopne
out
lods
push
mov
clc
mov
enter
inc
icebp
std
fdivs
filds
cld
mov
cltd
out
mov
std
roll
xor
sti
jo
mov
dec
sub
cmpsl
sbbl
jo
inc
leave
adc
int3
sahf
popf
test
out
addr16
insl
daa
add
xchg
or
ficomps
push
in
popf
or
cmp
call
xlat
sbb
push
cmpsb
mov
out
and
cltd
or
pop
add
popa
mov
in
pop
gs
std
loop
jae
clc
ljmp
imul
cli
and
int
push
in
sub
test
cltd
sbb
dec
addl
and
popa
flds
cmp
xchg
add
popa
sub
jmp
mov
sub
scas
in
cmc
sbb
in
cmc
adc
pop
xor
xchg
movsl
push
fisubs
add
rcll
sub
std
addb
add
xchg
shll
je
inc
mov
mov
je
xor
decl
add
jnp
xor
test
ds
inc
in
jo
add
jnp
add
mov
and
cmp
inc
pop
test
push
decl
xor
add
test
jne
add
add
test
je
adc
add
bound
fdivs
mov
xor
add
mov
jne
fidivl
std
mov
inc
jae
inc
js
fbstp
sbb
mov
mov
std
movsl
iret
jne
inc
sub
mov
pop
add
ss
sbb
pop
add
add
add
jb
pop
setnp
add
mov
repz
add
shrb
cmpb
out
out
call
sti
sbb
mov
ret
add
frstor
push
jo
pop
mov
mov
xor
aam
jb
xchg
pop
dec
neg
sahf
repz
in
sbb
ret
adc
mov
test
add
inc
lea
out
ss
ret
jge
gs
jne
out
push
push
data16
push
jmp
fsts
add
pop
mov
lcall
std
jmp
pop
flds
cmp
mov
sbb
pop
shr
popa
fsts
rolb
mov
daa
subl
add
add
fsubr
popa
fldcw
repnz
and
mov
push
dec
or
pop
flds
popa
call
flds
adc
sbb
jmp
popa
mov
in
shr
popa
fsts
dec
sbb
add
test
mov
das
sarb
in
inc
lds
add
paddusw
add
das
leave
pop
push
or
nop
pop
and
or
add
sti
mov
lea
fiadds
lret
fsts
cmp
mov
aad
push
or
and
sahf
and
jge
add
mov
mov
push
push
push
loope
jnp
push
lea
xor
in
xlat
test
push
cli
xchg
bound
add
adc
mov
mov
mov
jb
pop
mov
add
and
mov
out
js
gs
out
js
xor
push
mov
scas
cld
xor
adc
dec
outsb
push
cmpl
gs
push
adc
cld
scas
cld
pop
adc
scas
rorb
pop
cmp
cmc
fsubr
ret
push
and
inc
inc
cmp
inc
add
pop
test
cmp
or
js
pop
cmpsb
add
sbb
mov
stos
test
adc
subb
js
data16
push
pop
add
stc
inc
bound
adc
inc
out
add
add
add
jo
outsb
add
fwait
xlat
mov
std
testl
cld
dec
mov
xorb
add
add
int
fisubl
fsts
dec
adcl
pop
je
jl
outsb
fsts
pop
mov
jmp
fsts
data16
loope
cltd
add
jnp
add
mov
shll
add
lret
xchg
mov
cli
push
push
repnz
pop
adc
aam
adc
push
sar
call
push
and
jmp
and
mov
pushf
cld
std
and
subl
pop
in
add
add
test
bound
xchg
daa
mov
fldl
add
add
cmp
std
jae
int
dec
addr16
addr16
addr16
out
mov
jg
push
mov
mov
je
push
call
je
mov
loopne
test
out
dec
cs
je
xchg
je
add
xchg
test
test
out
xor
and
bound
adc
es
jmp
dec
mov
and
test
dec
and
loop
adc
and
jne
enter
dec
rclb
add
js
mov
inc
ds
push
push
or
xor
bound
add
cmpsb
push
sbb
push
xor
dec
and
inc
cld
je
sar
je
shrb
adc
add
add
cmpsl
add
jg
pop
jecxz
test
xor
push
xchg
rsqrtps
vmovntdq
pushf
push
add
hlt
test
js
and
fnstenv
and
sbb
xchg
fsub
add
shr
add
mov
inc
pusha
in
fsts
add
test
int3
cmpsb
movsl
call
fstps
adc
fnstenv
jle
add
push
push
add
pusha
flds
xchg
pop
call
add
flds
mov
imul
test
in
shrl
mov
adc
jb
add
push
push
xchg
flds
jo
mov
call
pop
flds
jb
xor
stos
cmc
adc
cmc
sbb
mov
call
pop
flds
pusha
fsubrs
ret
cmp
add
push
cmc
sbb
fmull
mov
push
incb
mov
push
incb
mov
add
incb
fiaddl
jne
lods
add
enter
fiaddl
add
je
fisubs
fwait
dec
inc
and
add
add
paddsb
or
sub
pop
enter
and
cmp
lcall
ja
adc
and
pop
add
fidivrl
pop
lret
jg
std
sti
dec
cltd
jo
flds
mov
mov
push
inc
add
aas
push
push
inc
cli
push
lock
mov
and
and
clc
das
xor
mov
mov
jne
mov
insl
fwait
sbb
std
into
sub
daa
or
dec
add
push
inc
gs
std
scas
and
and
ja
or
bound
jge
bound
add
mov
add
loope
add
sti
add
mov
cld
int
stos
add
out
bound
out
bound
out
bound
out
bound
out
bound
out
clc
flds
push
pop
push
cpuid
fnstenv
fisttpl
into
clc
mov
adc
xor
subl
add
loopne
bound
xchg
sub
fsts
mov
adc
or
push
jmp
inc
sub
jmp
pop
data16
xchg
fsubrl
inc
jmp
or
sbb
loopne
mov
gs
sbb
jmp
popa
cmpb
push
popa
movsl
add
popa
int3
test
data16
push
popa
cmpsb
ret
push
pop
sbb
add
xchg
cmp
cs
lret
xchg
mulb
std
xchg
stc
outsl
jg
rcr
add
aam
xor
mov
stc
sbb
mov
add
leave
je
add
lock
and
mov
inc
jmp
notl
int
jg
xchg
stos
sbb
lcall
add
and
incl
add
add
push
in
add
cmp
cmp
jge
add
cmp
xlat
sub
in
sbb
sti
mov
mov
jno
nop
fisubl
nop
xchg
and
bound
add
std
cli
jl
cmc
push
mulb
bound
add
in
inc
sbb
xchg
xor
bound
push
mov
xchg
add
push
add
bound
cmp
mov
add
add
in
xchg
repnz
cmp
ret
notb
and
fsubrs
xorl
mov
xchg
dec
xchg
mov
mov
test
add
scas
sbb
shll
mov
fnstenv
cmc
jecxz
xchg
xor
out
add
sub
fcomps
outsb
mov
add
add
mov
repz
mov
mov
mov
mov
stc
shr
sub
cwtl
out
out
xlat
sbb
ds
bound
andl
push
bound
gs
mov
add
xor
jg
add
sbb
pusha
bound
and
jecxz
and
sbb
pusha
int
xchg
gs
call
inc
pusha
inc
int
lea
popa
add
loop
fnstenv
adc
pop
std
bound
pushf
and
xor
push
mov
lea
ret
popa
dec
add
add
insl
pusha
lds
mov
pusha
flds
mov
call
dec
add
add
outsb
pop
mov
shrb
xor
xchg
or
adc
jbe
add
fwait
je
sbb
enter
lret
jne
add
pop
jno
dec
or
or
lcall
adc
sbb
jecxz
faddl
test
sbb
outsb
xchg
xor
adc
add
push
mov
add
push
or
and
divl
into
or
pop
mov
pop
test
pop
cmp
rcll
mov
mov
aas
inc
and
add
add
sbb
add
push
ljmp
sub
data16
pop
test
in
jg
xchg
push
popf
mov
add
lds
adc
add
add
dec
ljmp
sub
mov
jp
and
ss
or
insl
and
add
jmp
add
test
mov
mov
jp
and
xlat
sub
jnp
add
outsl
dec
lahf
jge
mov
inc
add
loope
fstpl
sbb
jp
xor
jp
sbb
pop
fstps
add
add
add
out
in
out
lret
ljmp
sbb
fxch
add
cs
call
sub
mov
xor
xchg
pop
stos
daa
outsb
fstps
daa
push
orl
pusha
fmull
sub
add
inc
add
popa
orl
pop
mov
push
jb
add
add
int
ret
mov
xchg
and
lea
cmp
lea
popa
addl
jmp
adc
subb
inc
popa
flds
rcrl
jmp
xor
jb
add
xchg
adc
pop
xchg
xchg
mov
sbb
add
popa
addl
add
mov
add
jne
xchg
arpl
cli
cmp
mov
je
scas
add
stc
mov
call
sub
dec
and
adc
add
push
xor
xchg
add
test
xorl
add
jno
add
mov
sbb
fldl
test
pop
pop
inc
mov
fldl
add
add
mov
add
sbb
pop
sarl
and
xchg
add
bound
add
ja
add
dec
xchg
xchg
into
loope
cwtl
ret
mov
add
bound
lahf
lret
add
jg
call
xadd
add
xor
addr16
std
aas
xor
inc
bound
rorb
fldenv
mov
pop
fs
bound
test
arpl
add
jmp
ja
decl
fldcw
sti
jge
les
push
cltd
out
popa
sbb
push
sahf
pcmpgtw
xchg
xchg
add
cmpsl
cmp
arpl
adc
add
out
adc
add
add
adc
sub
scas
in
push
jge
inc
aam
ja
cmpsl
adc
js
add
xor
adc
push
cltd
out
popa
sbb
cs
rolb
push
add
or
std
aam
ljmp
sbb
adc
jmp
mov
push
mov
movsl
fld1
mov
push
std
sbb
add
add
cltd
rcll
adc
push
sbb
or
in
inc
jmp
lcall
bound
test
push
in
sub
xor
xchg
add
call
psraw
call
cmpsl
std
cld
sbb
inc
jmp
mov
sub
call
cwtl
sbb
lock
and
outsb
fwait
add
or
stc
push
mov
test
testb
inc
dec
and
cmp
cwtl
popa
aas
aad
cmp
add
sbbb
add
add
sti
fiaddl
push
push
xor
into
fdivrp
jne
add
xor
or
mov
push
or
add
add
hlt
mov
jge
xor
ret
adc
jle
sub
outsl
adc
insl
adc
out
sti
jmp
clc
dec
inc
add
jmp
pop
ljmp
add
inc
jmp
adc
movsl
adc
xchg
add
jae
dec
adc
ja
add
scas
clc
jge
jmp
outsb
ljmp
add
add
push
mov
in
jmp
adc
or
std
dec
sub
jae
fldenv
xchg
cmpsl
add
mov
sbb
ljmp
out
push
subl
jo
out
je
pushf
out
xchg
lret
push
sbb
fdivl
push
fs
aad
mov
add
mov
jb
addr16
repnz
add
xchg
aam
push
pop
out
adc
fsqrt
mov
or
sahf
fwait
jmp
xor
daa
popl
mov
xlat
add
push
inc
or
pop
les
bound
pop
push
xorl
fiadds
sarl
add
popa
pop
shl
aad
add
popa
or
in
mov
pop
out
cmc
ret
and
scas
cwtl
or
mov
shrl
mov
ljmp
add
ficoms
or
mov
add
add
fdivrl
dec
test
je
mov
je
pop
mov
aam
cmp
add
push
sbb
add
pusha
dec
jae
add
adc
mov
add
jb
mov
aad
add
push
dec
dec
repz
add
xor
or
xchg
push
dec
cld
or
shr
add
add
adc
imul
aad
or
xlat
add
mov
add
cmp
bound
xor
rcrb
add
xchg
add
push
dec
add
fcoml
inc
bound
jg
push
push
jp
addb
add
cmp
cs
add
ret
jns
jp
out
pop
ja
mov
out
inc
imul
call
inc
add
pop
out
out
fldl2e
mov
mov
add
add
incl
push
fnstcw
adc
daa
add
add
scas
push
xor
iret
pop
movsl
ficompl
cmpsl
inc
mov
fwait
arpl
jae
dec
lea
in
mov
fistpl
jmp
jp
push
out
pop
scas
daa
arpl
jb
loop
out
loope
xchg
pop
jecxz
imul
insl
ret
sub
mov
addb
add
je
pop
dec
fistpl
shr
adc
ss
mov
mov
fldl
daa
push
add
push
fcmovb
pusha
xor
push
add
and
test
pusha
fcmovb
sbb
push
push
loope
adc
lods
lea
push
fldl
sub
jb
push
adc
test
mov
lcall
add
sbb
adc
sub
add
and
add
jge
call
jb
push
out
sbb
pop
arpl
popa
push
dec
or
jnp
add
jle
je
mov
test
faddl
adc
enter
xchg
fmuls
mov
cmp
push
ret
cmc
orb
jg
addl
push
adc
or
add
add
or
mov
pop
mov
ret
lds
dec
pushf
mov
shl
jecxz
push
cli
call
jns
std
adcb
add
push
push
int3
mov
fisubrl
ret
aam
std
outsl
enter
jae
or
cmp
jmp
lock
cmpsb
sbb
add
add
add
xchg
dec
testb
dec
icebp
add
gs
mov
lock
push
inc
push
mov
stos
lock
push
mov
pop
mov
lock
out
inc
and
decl
aam
dec
mov
mov
fcomps
bound
mov
xchg
mov
add
add
pushf
decl
rcrb
pop
cmp
bound
adc
out
js
jb
xor
add
int
jb
loope
repz
test
cli
mov
ljmp
testl
jp
jecxz
lret
mov
pushf
add
fdivs
inc
bound
psubsw
add
mov
jmp
mov
dec
call
mov
add
pop
rolb
aaa
fcomip
mov
jb
inc
frstor
push
xchg
push
scas
cmc
lods
push
sub
in
and
push
pop
in
fsts
scas
mov
pop
push
pop
mov
cwtl
cld
fmulp
sbb
pop
xchg
jae
stos
cwtl
or
xchg
movsb
pop
jno
jmp
orb
sbb
push
add
pop
call
mov
test
lret
call
cmp
aas
push
push
adc
std
decl
push
adc
push
lret
decl
push
into
call
pop
xchg
das
rclb
add
lret
sub
push
push
push
pop
mov
push
add
stos
or
lret
out
shlb
lret
xlat
test
mov
sti
jne
push
lret
pushl
out
daa
add
xchg
push
lock
add
push
pushl
add
jae
add
adc
out
adc
and
add
faddl
jo
xor
and
jmp
movsl
push
and
sub
lock
add
filds
or
cmp
out
lock
out
mov
mov
mov
fstl
ret
add
inc
or
or
dec
push
jne
add
add
es
jo
fwait
push
adc
insl
or
add
jl
fldcw
outsb
loopne
data16
stos
daa
pop
out
movsl
sbbb
jb
jnp
ret
sti
mov
into
cmp
add
scas
add
stos
jecxz
sbb
out
cli
aad
add
pop
cmpsl
push
cmp
inc
in
add
fldcw
add
sub
jbe
test
add
fidivs
lret
fisubrs
mov
hlt
xor
adc
add
mov
push
sbb
ljmp
add
lcall
jmp
push
cmpl
jne
or
add
call
add
fdivr
fidivs
push
push
rcll
call
clc
cld
insb
xchg
mov
shll
pop
inc
fwait
push
jecxz
mov
xchg
and
into
mov
arpl
adc
jmp
xor
popa
push
outsl
add
push
mov
pop
faddl
add
dec
cmp
mov
push
inc
and
sbb
add
out
or
sbb
xchg
rclb
mov
inc
adc
push
dec
and
mov
cmp
cs
push
lret
test
call
add
ds
pop
jae
push
shr
mov
je
push
dec
and
enter
mov
push
bound
test
negb
and
inc
ds
xor
push
ja
std
call
arpl
incb
rcrb
cmp
or
dec
xchg
arpl
push
xor
xchg
call
idivb
bound
and
jecxz
mov
movb
cmpsb
int3
cmc
clc
and
or
adc
add
inc
and
xacquire
inc
mov
ss
cld
notb
inc
ficoml
out
stc
inc
bound
jg
add
inc
icebp
shr
add
fidivrs
ss
les
icebp
shr
add
add
add
add
push
pop
add
fsts
and
cltd
out
sahf
mov
imul
out
ficoml
sbb
mov
adc
lcall
fistl
or
push
mov
or
sbb
mov
or
lock
fucom
sti
cld
bound
add
add
inc
std
xor
std
aam
jecxz
jmp
or
test
mov
popa
flds
insb
mov
jmp
subl
fsts
mov
cld
cld
jmp
popa
push
inc
jmp
test
jmp
and
push
add
fmuls
add
outsl
mov
je
in
inc
xor
xchg
xor
adc
jnp
pop
add
cwtl
add
ret
mov
sarb
push
mov
mov
adc
cli
push
mov
xor
mov
dec
inc
or
fmul
jae
pop
jne
adc
dec
pop
dec
or
or
add
add
xlat
std
sti
xlat
das
rorb
jl
cmp
or
bound
clc
outsl
out
cmp
icebp
add
ss
fadds
jmp
out
add
bound
adc
cmp
or
mov
xchg
rorl
pusha
jg
icebp
or
mov
jmp
out
xor
pop
ret
or
add
add
mov
mov
add
add
pop
loope
or
fmull
outsb
in
adc
stc
xchg
mov
sub
add
sub
push
pop
test
push
mov
lods
int3
andb
dec
push
aam
mov
cli
imul
and
cs
add
bound
and
lods
cwtl
jo
jnp
bound
add
add
out
ljmp
addr16
aas
int3
xchg
add
lods
mov
sbb
add
in
imulb
or
pop
and
push
add
xchg
add
sbb
or
cmp
sbb
and
popa
mov
stc
cld
mov
or
inc
flds
jb
mov
scas
sbb
adc
in
aaa
inc
cs
jmp
stos
fcomps
aad
out
scas
pop
fidivrl
test
fcmovb
mov
mov
pop
sarb
push
or
jmp
pushfw
subl
das
mov
sbb
mov
adc
js
sarb
cmp
mov
sbb
jg
adc
pushf
clc
or
mov
pop
clc
sbb
ret
mov
lds
sub
add
jecxz
mov
add
push
add
test
scas
imull
ror
add
dec
scas
pop
ret
push
mov
add
add
stos
dec
push
bound
negb
fbstp
dec
dec
jmp
add
cmp
data16
or
outsb
es
adc
hlt
inc
add
jno
imulb
jmp
pop
add
pop
pushl
xchg
test
je
imul
cmp
xor
ja
std
insl
adcb
xor
adcb
add
cmp
xchg
dec
push
out
xor
cmp
rcll
sbb
adc
fldenv
loope
push
adc
negb
mov
push
jg
add
in
jno
loope
cmp
nop
adc
sbb
bound
add
cmpb
bound
clc
movsb
notb
mov
dec
out
bound
mov
lods
pop
xchg
popa
movl
add
add
sbb
inc
fstpl
pop
mov
out
nop
push
divb
add
adc
rcr
or
shll
loop
jmp
jne
jmp
pop
call
cs
mov
pop
and
sbb
stc
cmc
push
bound
pusha
out
jb
lods
dec
in
xor
add
push
movsl
add
test
cwtl
mov
std
jge
std
aam
iret
inc
jmp
mov
push
inc
push
mov
ret
shrb
xor
or
fwait
mov
pop
cwtl
aad
jb
add
adc
subb
int
pop
cwtl
mov
call
test
add
cmp
pushl
mov
loope
mov
or
push
flds
jne
int
ret
mov
jg
std
popf
mov
and
mov
ljmp
les
hlt
xchg
push
mov
lock
ss
mov
call
lret
xchg
in
mov
divl
jg
dec
lods
xchg
push
mov
jnp
pushw
add
rorb
dec
lar
faddp
incl
fld
or
loopne
or
fstpt
jae
bound
adc
das
jns
and
lret
jnp
popa
cmp
out
dec
ss
jle
pop
jns
and
addr16
andl
or
push
and
test
outsb
jge
je
jbe
and
cmp
cmp
or
add
add
iret
cmp
cmp
sbb
jl
frstor
mov
jg
inc
scas
mov
repnz
insb
cltd
out
es
dec
ds
bound
int
andl
and
jb
sub
push
sbb
outsb
loop
dec
mov
pop
cmp
jp
add
repnz
repnz
pop
pop
filds
loope
fildll
fnstenv
push
insl
repnz
mov
ret
daa
push
xchg
ss
add
dec
cli
cmpsl
inc
flds
mov
push
adc
cmpsl
rclb
pusha
push
in
mov
and
push
lock
and
bound
sbb
ljmp
xchg
pop
hlt
adc
int3
mov
push
in
call
popa
pop
in
shll
push
push
cmp
and
dec
mov
jmp
adc
lret
inc
jmp
or
mov
or
popl
push
dec
xchg
std
pop
inc
mov
inc
data16
add
mov
mov
add
add
mov
ja
inc
pop
leave
mov
bound
adc
pop
cmp
aam
mov
jg
xchg
inc
scas
cwtl
push
push
mov
call
movsb
mov
cmp
incb
push
or
iret
add
jmp
jnp
xchg
lret
test
add
add
inc
jmp
push
mov
xor
add
add
mov
pop
pushf
inc
std
call
lea
adc
or
mov
lods
sub
mov
ja
xchg
adc
cmp
inc
and
scas
pop
add
out
in
mov
xor
push
and
add
jne
je
fnstcw
add
add
jp
push
int3
addr16
daa
cld
sbb
rol
arpl
ror
roll
xchg
lret
ss
out
sti
xor
andb
pop
add
cmpsb
and
arpl
xchg
aad
jp
mov
dec
or
js
fs
ds
and
icebp
xor
daa
add
adc
add
adc
or
scas
out
imul
add
add
cmpsl
andb
xlat
pop
jb
add
inc
mov
jae
push
test
aam
or
adc
in
jb
ret
push
inc
std
in
in
pop
ret
or
jae
out
bound
or
aad
xor
push
xchg
and
jb
xor
and
jmp
add
push
push
rclb
add
in
dec
in
push
xchg
adc
mov
popa
pop
in
popa
pop
in
fnstenv
bound
insl
and
push
outsb
in
aas
mov
xrelease
adc
xor
lret
pop
icebp
in
adc
jns
add
or
jne
mov
sbb
push
insl
push
and
insb
fimuls
inc
aam
sub
mov
add
add
and
roll
or
or
jno
jo
and
adcb
inc
add
xchg
push
push
mov
jg
scas
imul
popa
outsb
push
and
out
andl
imul
daa
movl
repnz
mov
shlb
aad
inc
es
add
add
sar
outsb
inc
push
cmp
in
sub
mov
jge
je
xor
rcrl
add
into
or
inc
daa
pop
and
add
adc
bound
xor
dec
push
cmp
xor
cli
cmp
scas
testl
fsubs
cld
fsts
out
cli
clc
lock
xlat
cmp
add
pop
pop
or
jg,pt
sbb
pop
pop
sbb
lea
xchg
cmpsl
out
pop
scas
scas
ss
imul
leave
shr
add
mov
jo
outsl
pushl
dec
push
xor
sahf
mov
xor
xchg
ret
pop
mov
fldt
push
cltd
out
push
fiadds
mov
jmp
xor
test
in
out
bound
ljmp
jno
call
cwtl
push
insb
imul
sub
jecxz
incb
inc
movl
jecxz
movsw
mov
lea
mov
insl
es
push
pop
subl
cld
cltd
mov
xor
je
push
orl
flds
mov
push
out
repnz
insb
loop
movsb
mov
rcrb
jg
ret
xlat
lea
aam
mov
ss
hlt
adc
add
mov
ret
inc
sub
testb
jno
lods
push
mov
aad
lcall
adc
pop
add
xor
clc
in
je
sti
test
add
add
sbb
cmp
orb
mov
adc
in
cmp
fdivrl
icebp
adc
add
push
jmp
sub
and
jg
pop
daa
lods
sbb
lds
push
dec
ljmp
flds
adc
call
xor
and
cmpxchg8b
hlt
mov
hlt
inc
mov
in
mov
add
add
jae
dec
xchg
mov
les
or
push
rorl
scas
fnstcw
push
inc
cmp
jne
or
xlat
scas
data16
decl
aas
add
sar
sbbb
pop
or
xchg
lods
shlb
dec
frstor
mov
mov
mov
push
sub
add
enter
repz
pop
adc
add
mov
stos
cs
imul
loop
lret
sti
jne
mov
jnp
mov
testl
fsts
jno
bound
dec
pushf
push
cmp
mov
popf
inc
fistpl
xchg
mov
fnstcw
bound
jge
insl
add
loope
and
popa
push
dec
or
imul
add
pop
fldl2t
in
dec
nop
call
sub
call
ja
jmp
sub
in
cld
arpl
cli
pop
stos
outsb
sbb
fnstcw
in
mov
and
call
in
and
lock
out
jb
aad
xchg
and
xchg
data16
je
push
sti
je
push
divb
xchg
jo
cmp
je
mov
ss
cmpsb
std
pushl
add
add
std
call
or
mov
faddl
mov
test
add
adc
or
fucomp
je
sbb
jmp
out
mov
jl
roll
xchg
scas
add
ljmp
add
sbb
add
sbb
in
lds
addb
xchg
mov
add
outsb
in
xor
test
ret
sub
xchg
cmp
sub
add
sub
or
bound
add
or
or
les
add
add
adc
outsl
mov
add
mov
jne
and
and
pusha
repnz
insl
jle
add
lea
lods
sbb
fldenv
shl
xchg
cs
lret
pop
cli
negl
xchg
insb
xchg
mov
push
lcall
mov
mov
push
xor
psubusw
cld
fcompl
call
pop
icebp
lahf
jle
jecxz
ret
push
int3
mov
add
pushf
ret
out
and
fs
inc
lds
cmpsb
jecxz
lea
push
stos
out
icebp
repz
jecxz
sarl
dec
repnz
stos
out
icebp
incl
cmp
add
jno
call
std
scas
push
push
dec
hlt
xor
inc
jmp
popa
fnstenv
jbe
adcb
xchg
xor
jmp
imul
sub
mov
push
icebp
sub
mov
jnp
push
pop
rcrl
push
sahf
jnp
adc
pop
clc
leave
push
inc
shrl
adc
mov
and
aam
sub
adc
fistps
cld
add
jle
les
add
jns
add
jae
or
sti
pop
add
enter
jbe
add
call
adc
dec
lock
inc
adc
mov
mov
push
adc
push
shlb
adc
pop
mov
rcll
push
cmp
sub
sti
adc
push
orl
hlt
test
add
js
push
mov
xor
mov
je
out
icebp
nop
in
call
and
add
movb
jne
stc
add
imul
fildll
mov
lret
std
aad
xlat
andl
dec
fcoms
ret
adc
adc
andl
inc
push
out
jg
jbe
call
dec
daa
cmp
or
scas
add
xlat
inc
mov
fcomp
xchg
sarb
sbb
or
int
loope
cmp
das
and
fstps
in
mov
xchg
jecxz
xlat
ficompl
add
testl
filds
push
mov
and
add
add
aaa
mov
bound
arpl
pop
mov
cmpsl
lock
lahf
fists
mov
add
test
mov
add
in
lea
popa
pop
or
add
popw
push
inc
in
call
adc
mov
mov
add
add
orl
call
pop
fld1
mov
pop
sbb
xor
push
leave
orl
bnd
int3
xchg
flds
cli
mov
pop
scas
jmp
into
mov
add
xchg
add
in
dec
push
lock
fiadds
dec
pop
shlb
adc
call
add
pop
adc
mov
or
add
or
xchg
add
jle
add
cli
push
test
das
add
mov
dec
shr
push
push
hlt
add
add
flds
lea
call
test
test
push
xchg
xor
in
enter
mov
mov
scas
je
add
add
push
or
mov
je
mov
pusha
inc
add
and
inc
jp
adc
icebp
jno
mov
jne
jmp
mov
repnz
mov
outsl
popf
clc
jecxz
test
icebp
push
push
fnstenv
cmp
xor
mov
cmpl
mov
jmp
loopne
jmp
loopne
xor
mov
jne
and
sbb
add
push
mov
test
shr
xor
and
jmp
ljmp
imul
sbb
out
cwtl
mov
pop
test
push
fisttpl
stos
aam
call
mov
sbb
push
and
out
fucomi
imul
push
pop
je
arpl
jno
push
mov
fisttpll
pop
dec
or
push
stos
mov
in
cmpsb
bound
aam
bound
pop
sbb
out
inc
flds
mov
rorb
jb
fisttpll
loope
mov
imull
jne
stc
add
call
out
adc
pop
jae
shr
jmp
sbb
mov
xchg
icebp
pusha
mov
out
decl
jmp
pop
jmp
adc
js
and
std
cld
pop
movl
in
test
ret
push
cmp
add
fwait
add
cmp
ret
inc
xchg
mov
add
in
push
divb
arpl
dec
push
jns
dec
arpl
mov
aad
sbb
mov
ds
add
call
add
sbbb
jbe
dec
inc
or
flds
add
cld
cmp
and
sub
inc
or
call
test
sub
movsb
push
mov
mov
pop
pop
mov
mov
add
mov
sub
inc
imul
add
lret
pusha
mov
push
mov
pushf
clc
mov
cmp
arpl
xchg
lods
mov
out
cmc
imul
add
dec
std
push
jp
inc
notl
fs
addb
and
mov
jmp
popf
push
cld
or
ret
mov
add
add
ljmp
iret
and
xor
cmp
cmpsl
or
shll
fldl2t
cmp
ja
jmp
lahf
sbb
xchg
xorl
add
sbb
jmp
pop
cmp
fidivs
add
mov
shl
mov
jmp
mov
jmp
repnz
xchg
into
rolb
add
add
sbbb
fcom
cmp
mov
cmp
add
push
iret
jne
ficompl
pop
in
adc
and
ret
fmuls
popa
rcrb
sbb
mov
cld
cmp
inc
push
xor
pop
shl
bound
sbb
cmpsl
jmp
jb
pop
pop
in
or
fsubr
popa
pop
sarl
jmp
jmp
fcmovu
callw
cld
stc
repz
pop
mov
sahf
mov
add
in
dec
jle
push
lret
ficoml
inc
pop
or
cmpsl
cmp
clts
xor
jne
add
fiaddl
lea
sub
push
add
inc
jnp
shll
and
sub
adc
mov
inc
add
and
sarb
sbb
mov
pop
xchg
and
filds
add
data16
xchg
jne
rcrb
das
xlat
in
bound
and
loopne
mov
jbe
push
roll
jne
mov
rcll
dec
push
and
jns
add
cwtl
xlat
jp
add
fsubp
hlt
add
push
mov
in
push
push
xchg
fisubs
sbb
rolb
jp
std
gs
les
cmp
cmpsb
dec
scas
std
call
por
adc
ret
fistpl
push
jbe
cmp
inc
or
icebp
adc
xor
jmp
pop
fnstenv
add
add
fldl2t
xchg
xor
jge
ss
bound
addr16
pop
mov
lds
dec
test
jns
mov
lret
pop
pop
mov
push
sar
test
insb
mov
enter
jecxz
loop
movsb
cwtl
imul
pusha
fldl2t
jp
std
fnstcw
xchg
push
flds
push
aad
inc
sbb
cld
push
popa
out
fsubs
add
imul
call
mov
call
repnz
pop
xchg
mov
call
xor
ret
jmp
outsl
lcall
or
sub
add
sbb
add
into
adc
pop
sub
aam
sub
push
fs
std
sbb
push
outsb
add
pop
in
cmp
or
add
push
fnstenv
and
push
or
add
and
and
lock
mov
jne
fdivrs
sbb
cmp
arpl
roll
lret
mov
add
add
sarb
and
cmp
dec
fidivrl
mov
inc
and
dec
dec
and
dec
shr
or
sti
pushl
pushf
add
and
xor
cld
subl
aaa
or
negb
cmp
mov
pop
jmp
out
mov
flds
mov
add
add
jge
mov
rolb
cmp
and
inc
fld1
mov
add
pop
mov
push
pop
jecxz
add
ret
in
ja
loope
or
xchg
shlb
cmp
out
ftst
pushf
or
rclb
sub
or
inc
sbb
xchg
out
cltd
int
push
inc
dec
add
add
cmc
shlb
jno
push
fldl2t
lcall
jb
bound
aaa
pop
xchg
sub
fptan
je
stc
jle
rol
jmp
imul
jmp
jg
int
push
fldl2t
and
movsl
pushf
insl
mov
pop
ss
into
out
data16
xchg
inc
add
inc
test
loop
jns
pop
pop
stc
roll
add
je
jmp
inc
and
add
adc
call
add
mov
aas
pop
rcll
ljmp
xchg
push
xor
call
mov
jg
inc
or
mov
xchg
jne
xchg
test
inc
in
jne
xchg
test
stc
fldcw
or
fstpt
cmp
push
xor
inc
icebp
add
cmp
push
pcmpeqb
xchg
hlt
cmp
cltd
xchg
jno
lds
or
cltd
xchg
jno
lds
cmp
adc
pop
xchg
fld
sete
lds
test
aaa
flds
pop
and
mov
add
push
ret
jg
leave
inc
testb
push
push
xor
xor
push
add
mov
add
jb
fwait
adc
inc
lods
aaa
mov
sbb
pop
inc
ret
shlb
clc
mov
inc
movb
inc
push
dec
std
xor
lahf
xchg
add
arpl
cmc
or
mov
mov
add
add
icebp
jnp
and
jge
sbb
enter
sbb
adc
into
subl
and
sub
cmp
fdiv
aam
lods
jnp
stos
mov
push
sub
adc
test
xlat
and
shll
std
data16
xchg
stos
out
arpl
xadd
add
add
cltd
mov
jecxz
jmp
mov
pop
or
pop
sub
daa
xchg
xor
mov
cmc
in
add
pusha
stc
rcrl
bound
fwait
push
fld1
add
xchg
sub
pop
fstps
jge
and
inc
pop
sub
mov
insl
movaps
stc
insb
mov
inc
or
aas
add
into
and
pop
stos
xchg
in
sbb
sbb
mov
xchg
daa
push
pusha
push
sar
hlt
or
dec
or
bound
flds
mov
insb
and
add
mov
ljmp
jne
repz
add
jle
pusha
inc
add
int
pop
inc
pop
fcoms
roll
push
add
imul
add
pop
andb
sub
xor
inc
cli
jge
add
jno
cmp
mov
mov
push
js
dec
cld
sub
cmp
mov
mov
sti
sti
sub
cmpsl
cmovo
dec
shll
lret
xchg
jmp
mov
sbbl
mov
bound
add
or
push
adc
xor
insl
cmp
jmp
adcb
xor
fildl
adc
cmp
push
or
mov
jp
push
adc
push
pop
push
add
xchg
add
xchg
jnp
mov
popa
inc
xor
fyl2x
inc
and
and
jo
je
movsb
ja
std
mov
adc
ljmp
bound
clc
mov
mov
inc
dec
pushf
or
outsl
mov
inc
bound
mov
call
fldcw
adc
pop
sub
add
es
insl
test
ljmp
leave
aad
pop
sbb
andb
xchg
xor
adc
sti
inc
dec
jle
push
in
flds
or
cmpsb
mov
test
out
movsb
gs
outsl
sbb
stc
inc
bound
dec
sbb
sub
dec
push
cmpsb
fistps
xlat
lods
mov
xchg
fistpll
add
mov
xor
mov
sbb
mov
std
adc
add
pop
dec
fldl
ffree
flds
bound
push
inc
int
sub
xchg
std
and
pop
sub
fiaddl
in
or
mov
aad
sub
or
fldl
jmp
pop
jmp
les
and
add
popa
flds
pop
and
or
test
xchg
out
mov
add
cltd
add
mov
ret
lds
cmpsl
inc
inc
add
xorl
fisttpl
dec
lds
jbe
jl
dec
cwtl
sbb
mov
sbb
add
pop
xor
xchg
pop
push
push
adc
push
mov
jge
mov
sti
testb
jg
xor
mov
aam
add
ljmp
or
mov
xchg
add
fwait
ljmp
enter
add
add
ret
inc
add
clc
js
out
sub
or
lock
pop
add
ds
xchg
dec
shlb
sub
aaa
std
adc
std
adc
hlt
aas
bound
adc
jb
shll
and
xor
popa
ljmp
mov
in
cld
dec
insb
idivl
bound
hlt
jae
cmp
add
dec
dec
or
cmp
cmp
push
and
bound
or
sahf
out
lds
pop
jmp
out
mov
or
sub
jmp
fdivrs
mov
pop
pop
mov
loope
jmp
sub
adc
pop
fnstcw
dec
sub
push
cmp
iret
shll
data16
jmp
dec
pop
push
in
xchg
shll
push
push
cltd
rcr
jmp
xor
push
inc
xor
aad
ss
jg
rcrb
and
test
cmpsl
roll
mov
mov
or
loope
sbb
je
pop
lds
mov
inc
cmc
in
jno
and
roll
insb
mov
add
add
jmp
xor
adc
adc
cld
hlt
or
inc
jmp
push
dec
adc
outsb
push
mov
ljmp
in
cmc
call
or
dec
add
mov
pop
lds
cmovne
enter
push
adc
mov
mov
lds
adc
or
or
add
push
inc
or
sbb
adc
adc
lea
mov
push
negb
and
add
adc
call
cmp
dec
je
adc
or
pop
or
add
fdivrl
loopne
pop
add
movsb
mov
std
cmc
add
add
call
add
dec
ret
mov
jae
rcll
or
int3
push
add
rorb
push
or
ja
cli
aas
bound
and
das
and
cmp
aam
std
jne
dec
adc
repz
mov
fcoml
mov
mov
cmp
cmp
idiv
add
pop
mov
stos
pop
and
add
jmp
shlb
es
add
dec
movsl
or
pop
scas
or
mov
push
push
enter
sub
add
movsb
sbb
repnz
orl
adc
ljmp
sub
clc
mov
sub
cwtl
push
sarb
add
xor
fldl2t
push
fimuls
jmp
out
add
add
push
hlt
daa
push
into
repnz
incb
mov
jmp
int
shr
popa
flds
imul
mov
std
or
shrb
inc
or
popa
pop
inc
or
mov
or
test
add
pop
add
popa
push
inc
mov
mov
adc
aad
stos
xchg
pop
jl
popa
push
inc
add
mov
or
bound
or
fisttpl
cld
bound
cmc
and
pop
pop
mov
flds
add
jno
cmp
sub
andl
sti
fildl
mov
push
shll
and
add
dec
push
orb
mov
mov
add
test
sub
xlat
push
dec
je
adc
repz
dec
adc
xchg
fildl
add
xchg
inc
pop
inc
mov
call
cmp
lods
test
in
fildl
je
pop
andl
andl
add
idivb
dec
dec
dec
or
repz
push
mov
out
xchg
sar
outsl
sbb
aas
bound
sbb
push
mov
add
mov
add
fcomi
pushf
mov
mov
add
mov
adc
inc
add
dec
ret
add
push
fldenv
pop
out
mov
inc
dec
jo
scas
pop
inc
lcall
call
or
lock
add
in
mulb
pop
xchg
loope
testb
push
lock
jmp
inc
inc
stc
pusha
inc
push
dec
stos
lcall
ds
jno
xlat
inc
bound
out
sub
mov
ljmp
rcr
bound
push
push
and
mov
mov
lds
sub
sbb
add
adc
mov
pop
mov
fnstcw
pop
das
ss
mov
mov
das
std
add
in
add
sbb
mov
popa
flds
pop
cmp
xchg
mov
push
ret
xchg
cmpsl
aad
es
pop
xchg
test
div
call
jno
mov
xor
inc
jmp
jae
jbe
loop
jne
fdivrl
mov
and
inc
jmp
dec
jmp
lea
fld1
test
add
gs
adc
sub
rcrl
rolb
push
push
and
adc
out
jmp
pop
adc
pusha
adc
or
add
or
je
add
add
xchg
dec
enter
add
push
gs
lcall
in
lahf
inc
and
push
addr16
sarb
sar
je
mov
int
enter
mov
lock
hlt
addb
aad
dec
mov
inc
data16
add
lock
fldcw
jmp
mov
add
add
mov
mov
movsl
dec
cmpl
xor
push
xor
cwtl
adc
sahf
inc
add
je
or
repz
sub
fcompl
lret
add
shlb
add
cmp
or
pop
cld
cld
xor
in
xchg
mov
out
add
dec
cmpsl
cmp
test
bound
test
cmp
add
add
add
dec
adc
cmpl
stos
orl
inc
sub
cmpsl
jmp
push
adc
int
stos
push
mov
gs
push
icebp
fwait
xchg
push
loope
jg
xlat
jmp
sub
mov
add
xchg
mov
pop
in
cld
int3
scas
adc
add
push
cmp
inc
sbb
push
in
push
jbe
jbe
int3
and
pop
stos
inc
mov
add
bound
sbb
xor
push
push
std
and
jb
xchg
and
jl
inc
adc
mov
sub
mov
or
mov
ds
add
pop
std
and
inc
mov
jmp
popa
mov
int
or
jl
cld
add
cwtl
sub
xchg
push
incl
lahf
mov
arpl
repnz
jl
ret
jmp
dec
jne
pop
pop
je
sar
push
sar
addr16
addr16
addr16
pop
rcrb
fwait
and
js
push
mov
adc
mov
push
test
jo
pop
sub
test
mov
add
add
xchg
pop
and
fiadds
clc
dec
jne
pop
ljmp
push
cmp
punpckldq
add
cmpl
cmp
cltd
xor
je
add
cs
xor
dec
fscale
loopne
insl
jns
mov
sbb
loope
arpl
add
imul
add
add
pusha
roll
insl
cld
xchg
jmp
loopne
push
sbb
mov
cmp
xchg
mov
in
mov
fldenv
cmpl
std
add
loop
xchg
push
mov
daa
test
mov
fistpll
mov
fistpll
add
cmp
add
xor
adc
add
or
cmp
cmpsl
gs
jb
mov
add
int3
leave
cmc
jne
pop
ret
js
daa
bound
mov
inc
pop
sahf
in
pop
rcrb
ljmp
bound
sbb
sbbb
inc
inc
or
mov
clc
xchg
lods
pop
pop
int
add
add
sub
mov
loope
in
cs
stos
pop
lock
out
xor
mov
add
fs
jmp
ret
in
cmp
lds
jecxz
std
cmp
sub
icebp
stc
js
jle
pop
sar
ljmp
flds
sbb
or
sbb
inc
inc
jmp
mov
add
add
test
or
fidivs
add
scas
xor
push
adc
stc
decl
mov
into
arpl
hlt
incl
ret
pop
xor
mov
push
bound
or
xor
cmpb
int3
or
cmp
push
enter
mov
orl
add
sti
icebp
mov
insb
pop
jnp
or
or
dec
and
mov
dec
cld
mov
test
ret
pop
adc
adc
fucomip
sbb
addl
cmp
decl
mov
adc
xor
mov
std
adc
aas
pushf
and
in
ss
in
push
jmp
cmp
add
xchg
subl
jp
decl
sbbl
and
aaa
mov
out
data16
fnstcw
daa
in
add
fldenv
jae
outsb
and
inc
push
pop
pop
cmp
outsb
dec
repnz
add
sub
cmp
fldcw
pop
pusha
scas
out
pop
mov
out
mov
scas
jo
ljmp
add
add
int3
pushfw
push
sub
idivb
cmp
je
jmp
add
ljmp
lock
mov
or
insb
pop
movsb
jmp
pop
push
lds
or
push
fstl
addr16
pop
sub
cs
sbb
jno
flds
add
in
dec
shlb
and
sub
add
pusha
or
clc
pop
mov
popa
and
das
mov
add
popa
flds
pop
xchg
adc
jmp
popa
test
flds
add
dec
and
call
sahf
add
testl
add
dec
and
sti
fsubr
mov
pop
decb
mov
aas
xor
and
sysret
xchg
mov
mov
xchg
mov
push
push
cli
pop
roll
add
fwait
test
incl
dec
xor
pushf
mov
push
mov
fmull
stc
or
jmp
rcrb
test
enter
rcrl
add
add
add
inc
sub
push
call
sbb
jge
sub
loop
adc
test
add
outsb
add
cmpsb
mov
fwait
imul
xchg
jmp
cmpb
fidivl
xchg
mov
pop
pushf
cmpl
hlt
jo
or
push
jp
scas
std
cmp
add
add
inc
and
mov
cld
aam
mov
mov
test
xor
sbb
stos
mov
pop
lret
lahf
xor
mov
jge
fnstenv
push
fldl2t
js
ret
fstps
jle
insb
mov
pop
and
fstps
xchg
pop
pop
jle
les
adc
jns
lods
movsb
xor
or
sub
xchg
out
jle
mov
fwait
adc
ljmp
and
andl
adc
add
mov
pop
std
cmp
leave
push
mull
mov
movsl
sbb
out
inc
out
jl
int3
data16
out
sbb
mov
mov
mov
and
fs
mov
push
fists
pop
inc
add
adc
push
in
jb
push
xchg
inc
adc
push
add
add
fstps
popa
aaa
mov
insb
pop
ret
add
xchg
cmp
pop
dec
add
decb
dec
leave
inc
add
lea
or
dec
cmp
cmp
mov
into
jo
sub
xor
mov
lods
dec
mov
push
dec
lret
lock
jne
push
in
sbb
sub
loop
add
inc
jb
fcoms
in
incl
and
push
jno
mov
xchg
les
pop
pop
cli
imul
mov
mov
push
pop
lods
push
xor
xor
mov
sub
roll
add
add
out
inc
lcall
adc
shlb
ljmp
or
popf
adc
sbbb
in
xor
sti
fldl
daa
push
mov
add
add
adc
push
jge
fnstcw
add
out
jl
dec
or
and
test
cltd
incl
add
add
jge
push
fsincos
inc
bound
out
mov
sbb
xor
addr16
loope
jmp
jbe
movsl
adc
ljmp
push
stos
clc
loope
call
mov
pop
and
xor
fwait
push
div
stos
push
jg
fisubl
int
ljmp
pop
lods
inc
adc
add
push
sbb
jl
push
inc
iret
lahf
stos
adc
jecxz
fiadds
in
xchg
add
mov
pop
inc
movsl
cs
mov
sahf
cwtl
add
loope
mov
call
pushf
data16
stos
cld
jmp
lcall
adc
add
cli
jle
or
test
lahf
sub
mov
xchg
add
add
push
jmp
sub
sub
push
and
sub
adcb
and
test
flds
ret
test
xchg
add
aad
mov
add
inc
push
jmp
lret
shll
add
fstl
mov
mov
and
ret
add
add
fisttpll
nop
cli
faddl
lea
adc
sti
js
jmp
adc
add
and
adcl
push
test
add
inc
jmp
inc
or
pop
jo
inc
and
add
push
pushl
add
bound
cmp
sub
std
fdivp
or
xor
gs
cmpb
add
add
xchg
xlat
sbb
xor
xorb
jg
std
mov
movsb
test
jge
hlt
sub
xor
lds
inc
lahf
or
mov
mov
mov
mov
add
jl
xchg
push
jp
ljmp
cld
repnz
je
mov
adc
add
add
and
pop
fstps
cmc
mov
add
pop
cmp
fnstsw
sbb
ljmp
sub
jbe
std
icebp
test
jbe
cmpsl
pop
cmc
loopne
ss
fcmovu
lsl
lret
pop
push
loopne,pn
or
js
mov
xchg
fldenv
roll
rcrb
fwait
out
add
push
xor
fcmovnbe
fwait
js
dec
jmp
inc
jl
add
sub
das
pop
sbb
call
xchg
or
hlt
ror
jmp
gs
scas
insl
pop
cmp
push
cmpsb
inc
push
fisttpll
fimull
cld
cld
lods
lret
inc
jmp
popa
fnstenv
in
and
adc
movsl
out
or
jmpw
js
sbb
inc
jmp
in
sub
aad
mov
jmpw
mov
gs
or
popa
fsts
fstps
inc
add
mov
pushl
fldl
test
adc
mov
jg
out
rorl
add
pop
xchg
or
inc
and
pop
in
or
adcb
orb
scas
lds
ja
add
add
push
inc
and
mov
lea
sbb
fsubl
dec
mov
addb
shll
sti
push
icebp
test
push
mov
fsts
bound
mov
bound
js
mov
fisubrs
add
scas
mov
aaa
dec
call
cld
js,pn
adc
inc
jae
daa
dec
jmp
adc
xor
stc
adc
sahf
jno
dec
mov
add
arpl
std
and
sbb
inc
adc
jno
mov
mov
sub
mov
mov
rorb
xor
test
add
shrl
insb
jbe
ljmp
add
add
sbb
sbb
call
call
push
test
jle
jbe
aas
fistl
ss
dec
fiaddl
push
pop
lea
dec
xlat
dec
jle
pop
cltd
mov
dec
das
int
xor
fwait
jb
xchg
xchg
and
mov
dec
add
mov
ret
mov
or
sbb
call
jmp
bound
add
mov
leave
add
push
ljmp
movsb
cld
jno
notb
insl
and
add
mov
fsts
xchg
fadds
jmp
jnp
imul
sbb
insb
sahf
sub
jne
jns
leave
xchg
pop
sub
jmp
sti
aad
add
sub
push
mov
xchg
aad
push
push
adc
mov
pop
push
shll
and
scas
add
out
add
sti
aad
push
repz
add
sub
xlat
stc
sub
insb
and
into
rcl
add
add
xor
mov
nop
jg
pop
or
add
xor
xchg
mov
cld
decl
mov
dec
int
add
xchg
clc
push
bound
nop
std
dec
test
outsb
arpl
je
xor
data16
jne
or
lock
hlt
push
adc
sub
pop
adc
jl
movsl
out
rclb
xchg
mov
bound
add
inc
or
rorl
jmp
mov
das
mov
addr16
jle
jge
out
mov
add
in
sub
ret
xor
sub
inc
or
fstps
and
jmp
add
jno
in
sub
imul
ljmp
fldcw
or
mov
add
cmc
loope
adc
inc
fsts
jmp
or
xor
push
out
xor
call
mov
mov
insl
dec
lods
jnp
xor
pop
pop
lahf
ljmp
mov
mov
fldenv
push
nop
test
bound
and
adc
rcrl
stc
cmp
out
outsl
add
popa
push
inc
in
sti
lret
addr16
mov
push
adc
and
push
xchg
call
pop
lahf
cld
jo
cli
sbb
and
or
dec
push
inc
int
mov
cwtl
pusha
flds
shlb
lret
lods
cmp
cmpsl
and
test
test
push
sub
or
pop
or
mov
and
mov
and
mov
test
mov
inc
sti
push
lds
adc
and
cmp
flds
sti
flds
flds
ljmp
flds
sti
sahf
mov
aad
sub
mov
andb
jbe
xchg
in
je
adc
jb
mov
jle
jb
xchg
jnp
inc
aam
add
or
rcrb
jmp
add
mov
and
xor
add
push
mov
add
jb
or
or
test
bound
add
pushf
ficompl
in
mov
push
in
fcoms
jle
xor
loope
add
push
xor
and
jbe
sbb
imul
push
sub
add
mov
push
xor
adc
jb
andl
out
pop
std
gs
push
push
jmp
stos
jp
dec
fscale
icebp
ja
aam
cmp
dec
and
xor
mov
ret
sub
xchg
idivb
int3
je
mov
popa
rolb
cmp
and
mov
scas
insb
subb
add
add
add
adc
das
fisttpl
jmp
mov
cmc
add
insb
inc
ss
and
sti
fsub
xchg
lret
fldenv
data16
adc
adcb
call
inc
insb
call
mov
mov
bound
adc
push
out
xor
call
add
add
sti
sbb
insb
add
vpunpcklqdq
and
call
or
pop
iret
sub
leave
movsb
fsubr
popa
fcos
push
outsb
movsb
outsl
jecxz
xchg
push
ds
repz
popa
push
lret
adc
mov
jmp
in
cwtl
jne
outsl
push
push
call
adc
popa
add
mov
xchg
and
and
ret
sbbb
rol
sbbl
push
push
jne
dec
and
out
push
mov
and
addb
add
dec
jmp
fwait
mov
mov
inc
and
pop
rorl
push
add
mov
and
imul
jmp
adc
cld
addb
add
inc
sarl
bound
inc
jecxz
push
jmp
aaa
je
scas
repnz
cmpb
jae
cmpb
lods
in
xchg
in
cmc
or
aaa
pause
lods
xchg
jnp
push
incl
add
add
bound
in
or
stc
repz
or
and
push
or
push
out
mov
orb
jl
add
aad
xchg
arpl
pop
ss
andb
cltd
aam
and
jmp
push
fnstenv
iret
aas
fldl2t
subb
mov
or
mov
into
mov
jg
add
add
or
adc
rcl
or
sub
cmpsb
andb
xchg
arpl
popa
cmp
clc
sub
cmc
xor
data16
or
add
mov
dec
int
add
pop
je
mov
popa
flds
out
sbb
or
pop
inc
add
xchg
sahf
inc
testb
test
movsb
addl
add
and
test
cmpsl
jmp
arpl
pop
loope
bound
sub
xchg
mov
jg
sbb
lret
ljmp
in
lods
dec
in
call
add
xchg
xor
and
add
push
push
add
into
call
xor
sti
mov
mov
adc
xchg
mov
pop
cld
cmp
std
decl
nop
and
cs
and
inc
pop
jge
out
fsubrl
andl
cli
enter
shrb
mov
fists
int
add
bound
pop
add
lret
shll
in
addb
xor
xchg
fsubrl
push
out
dec
and
mov
loope
insl
cli
insb
xchg
fwait
adc
pusha
addb
mov
mov
in
addb
daa
stos
fwait
in
cmpb
mov
add
xor
je
scas
cmp
hlt
les
fsubp
add
xor
insl
hlt
sub
cmp
imul
add
add
ret
and
jmp
cld
push
fnstcw
inc
pop
pop
sub
push
sbb
mov
mov
pop
fisttpll
into
adc
add
add
xlat
push
fldenv
pop
add
out
dec
xchg
ljmp
data16
xchg
jno
xor
daa
push
dec
push
cmpsl
mov
push
cltd
inc
or
add
add
sub
xor
jge
mov
js
adc
and
aas
or
addr16
sub
in
add
jge
test
nop
lret
cs
ss
jo
jmp
sbb
ss
repz
call
inc
cmc
das
cmp
aam
jmp
fcmovbe
aad
insl
sti
test
arpl
call
popa
fldenv
sub
mov
sbb
bound
dec
pop
inc
or
push
pop
and
sti
cmp
cmp
test
pusha
flds
add
arpl
push
lcall
mov
push
loope
movsl
xchg
les
jmp
inc
and
lods
mov
mov
push
inc
jnp
mov
lds
add
add
sti
out
pop
jl
rcll
and
call
rclb
loope
std
xor
pop
and
mov
sub
mov
cld
jle
and
push
and
lea
pushf
add
aad
cwtl
bound
pop
adc
mov
push
enter
je
add
xor
bound
add
jle
leave
and
push
orl
rorb
mov
in
jmp
andl
testl
cld
mov
test
push
std
xchg
add
ja
jle
ja
xchg
sub
fs
add
fiadds
dec
and
cs
fmul
sub
mov
ja
or
push
imul
insl
mov
inc
and
cmpl
lret
pop
sub
daa
sbb
and
es
cltd
xor
les
mov
push
inc
add
jmp
pop
xor
add
pop
into
mov
jmp
add
adc
psubsw
xchg
add
jmp
jl
mov
sub
or
jns
mov
js
mov
pop
pusha
lret
insl
jecxz
repz
lods
pop
or
and
cmp
lea
inc
dec
sbb
push
fisttpll
fnsave
in
jmp
mov
sti
add
and
and
lcall
xchg
add
add
mov
add
jmp
call
incl
add
add
flds
mov
sbb
lds
ss
flds
rorb
in
push
xchg
addb
push
mov
push
mov
movsl
adcl
inc
pop
jmp
fisttpl
xor
inc
cld
jmp
or
mov
mov
xor
lret
fidivrl
scas
dec
mov
inc
imul
iret
dec
sti
out
sti
add
adc
xor
xlat
data16
shll
sub
mov
std
outsl
adc
sar
jne
std
outsl
or
sub
and
test
add
cmp
jmp
add
xor
fstps
in
outsb
repz
sub
fiaddl
fcmovnb
and
jmp
addb
mov
add
add
adc
mov
cmp
adc
inc
inc
bound
jns
movsb
shrb
sti
aaa
call
out
icebp
inc
xor
jp
xchg
or
jmp
aad
lods
xchg
adc
mov
adc
mov
or
adc
cltd
push
sti
je
add
call
add
shlb
cli
mov
repnz
fisubrl
lret
das
xchg
jnp
add
jns
mov
add
mov
rorl
ljmp
es
bound
leave
mov
and
add
and
and
adc
xchg
fidivrs
aad
xor
push
mov
bound
lods
push
rorl
jmp
cld
xchg
add
xor
add
das
mov
lods
flds
fs
add
popa
sub
pop
pop
dec
lds
push
pop
pop
fldcw
mov
popa
sub
jmp
ja
mov
dec
jecxz
cmp
mov
push
xchg
or
pop
test
jo
jb
jmp
data16
pop
out
leave
leave
jb
lret
outsb
cmp
add
out
dec
xlat
mov
fsubl
mov
push
in
xor
sti
test
fnstenv
lahf
push
inc
or
jge
pop
lods
cmp
add
fwait
add
inc
push
add
mov
add
lret
or
cld
mov
push
cs
leave
add
push
add
jnp
std
mov
sti
decl
add
push
xchg
add
push
call
jecxz
in
popa
addb
fstp
add
bound
test
addl
call
sbb
cmpb
jb
add
addb
jmp
addb
fisttpll
add
ja
lret
jmp
cmp
add
push
repz
dec
cmp
add
rcrl
fisttps
bound
jge
test
or
bound
syscall
fnstcw
add
mov
scas
push
xchg
push
pop
push
clc
ljmp
mov
test
add
add
mov
mov
outsl
sbb
jl
popf
ljmp
pop
ljmp
fldl2t
add
mov
add
pop
pop
add
sbb
mov
imul
add
imul
bound
inc
lea
inc
data16
gs
flds
cli
cs
shll
ficompl
call
popa
fsts
cs
insb
mov
cmp
jp
add
popa
add
inc
cltd
aad
bound
test
arpl
add
push
orl
pop
in
popa
fsts
sub
sub
push
scas
call
inc
fiaddl
jmp
aas
pop
shl
icebp
add
popa
adc
scas
call
popa
fsts
js
push
push
xor
add
xlat
xor
popf
mov
inc
test
add
testb
xchg
add
mov
or
cmp
data16
fistl
jl
add
sti
stos
std
adc
mov
or
test
cld
sti
setle
push
sbb
arpl
sti
mov
add
add
cld
dec
stos
xor
dec
lods
std
aad
sbb
js
bound
cltd
je
jnp
add
jo
jnp
xchg
ja
and
jle
arpl
xchg
xchg
clc
lcall
pop
mov
sti
push
jg
js
jmp
lcall
lock
bound
mov
ja
std
adc
jo
jnp
jo
push
std
les
mov
add
add
xchg
pop
std
in
dec
fiaddl
cli
test
or
mov
loope
pop
jg
arpl
add
mov
out
sub
arpl
call
loope
int
push
insb
mov
in
add
pop
rolb
push
jmp
jg
jmp
daa
jb
adc
daa
daa
mov
sub
pop
jmp
into
repz
add
add
add
add
pop
cmp
aaa
out
jno
cmp
mov
fldl
gs
mov
add
sbb
pop
mov
jmp
loope
dec
mov
jmp
clc
sbb
push
inc
lds
test
and
sub
test
cli
bound
add
add
inc
add
popa
jno
add
xchg
sub
xor
hlt
sub
sti
adc
jne
mov
add
and
cmp
fiadds
sbb
xor
cwtl
test
jmp
fadd
add
mov
pusha
fistl
lds
scas
addr16
ljmp
ret
add
add
lret
jnp
dec
and
out
aad
sub
jg
mov
dec
push
lds
je
mov
cld
adc
jg
in
mov
inc
cli
je
enter
inc
dec
sbb
add
push
pop
pop
leave
fiaddl
push
dec
dec
dec
push
add
jmp
sbb
and
out
lods
cwtl
lods
stc
mov
inc
push
jmp
add
stc
std
mov
pop
decb
cli
outsb
add
xor
or
imul
push
mov
push
cld
xor
sti
popa
xchg
and
out
push
add
jo
fsub
out
dec
lods
mov
popa
adc
mov
adc
lock
push
andl
and
add
add
mov
inc
arpl
xchg
inc
arpl
push
xchg
or
xor
movsb
mov
and
les
mov
movsb
add
xchg
jg
ljmp
mov
loop
loop
inc
mov
add
ret
mov
mov
fstps
inc
fstl
insl
sub
cmpl
clc
ret
dec
int3
sub
add
add
mov
pop
jecxz
adcb
daa
fwait
mov
dec
sub
push
stos
push
ficoms
add
xor
loop
dec
ljmp
add
jmp
mov
push
lds
mov
mov
jmp
sbb
adc
inc
lds
mov
fcomp
add
add
and
and
jno
dec
pop
in
in
and
fsts
leave
scas
pop
or
inc
test
jmp
inc
fnsave
loopne
add
push
pop
jmp
and
add
xchg
loope
inc
lret
sbb
and
push
fmuls
push
mov
mov
pop
mov
add
add
mov
call
push
adc
and
lret
jnp
cld
add
cltd
addl
or
mov
and
and
and
push
jne
pop
push
inc
and
repnz
std
cmp
dec
pushl
and
dec
dec
and
in
xchg
mov
fidivrl
bound
jge
add
add
pop
je
js
dec
xchg
mov
gs
insb
push
test
jo
mov
mov
imul
insb
pop
xchg
jno
dec
fildll
sbb
in
ret
and
inc
mov
push
andl
clc
jge
popa
pop
je
fmuls
imul
push
test
add
add
add
mov
xchg
enter
in
mov
decl
nop
and
mov
push
ljmp
sbb
shlb
jne
xor
ljmp
push
ljmp
fwait
jg
jmp
mov
aam
in
add
push
insb
jge
movsb
ficomps
ljmp
add
add
push
mov
jmp
add
movb
mov
add
push
into
pop
add
jle
sub
sarb
jge
in
sub
pop
lret
sbb
jmp
dec
loope
push
push
add
jecxz
or
and
mov
jmp
andb
insl
and
pop
pop
movsl
mov
cld
pop
in
add
imul
add
popa
push
insl
or
ficoml
lds
fldenv
mov
sbb
add
push
inc
and
jnp
decl
pop
adc
fsubrs
jo
and
jle
cwtl
cmp
and
and
add
xlat
or
add
aam
add
xchg
push
call
push
cltd
and
dec
push
inc
and
inc
xchg
mov
add
sub
pop
mov
sbb
icebp
test
fistpl
lret
and
inc
mov
mov
dec
lret
mov
xlat
cmp
jno
jnp
scas
lea
cmp
jo
adc
outsl
lock
aas
bound
lods
and
lea
cwtl
cltd
leave
bound
cmp
mov
lock
jo
inc
xchg
and
les
sub
inc
push
mov
aas
cmp
pxor
cmp
testl
fidivs
or
scas
aam
xchg
add
add
or
sbb
insl
pop
das
dec
sahf
pop
dec
jno
xor
outsb
movl
jmp
insb
lcall
mov
bound
and
cmp
mov
jecxz
push
mov
test
jb
xor
sub
andb
jmp
mov
sub
add
add
adc
mov
cmpl
sbb
js
test
popa
flds
icebp
cmp
mov
mov
mov
or
nop
hlt
in
jo
insl
jmp
inc
pop
fs
mov
data16
mov
test
int3
inc
flds
insl
and
jmp
jmp
leave
cmp
add
add
and
sbbl
jbe
mov
data16
sbb
sbb
sbb
vpsrad
cld
add
cltd
lods
push
xor
xchg
sub
dec
xchg
xchg
test
iret
ja
add
cs
ret
ret
push
push
in
inc
push
enter
into
xchg
outsb
inc
or
mov
push
adc
cld
mov
add
add
clc
bnd
dec
add
lret
fisttpl
test
in
inc
faddl
lea
dec
call
inc
cltd
and
mov
addl
jg
mov
subl
pop
adc
adc
mov
test
ss
fsts
call
jmp
add
and
call
push
xlat
jmp
push
inc
add
xchg
test
mov
push
rcrb
add
pushf
scas
push
mov
dec
xor
jge
imul
add
jmp
dec
and
add
daa
pop
pushl
cmp
pop
push
test
mov
jmp
dec
mov
fldcw
addb
add
out
jmp
add
loope
add
jmp
add
jmp
pop
push
sub
push
in
lds
cli
or
bound
popa
stos
test
inc
pop
fldcw
add
jmp
add
sub
inc
xor
mov
push
jne
mov
aaa
filds
bound
inc
bound
push
adc
bound
je
fs
mov
insl
jne
fs
jno
bound
flds
call
push
sub
and
mov
pushf
insb
jmp
jb
pop
repz
lods
jne
pusha
and
jnp
test
jbe
nop
call
adc
pop
pop
cmpsb
push
roll
add
mul
add
cmp
call
ds
mov
adc
adc
sbb
pop
and
repz
repz
ljmp
sarl
clc
add
inc
sub
pop
mov
ret
xor
sbbl
push
rorb
add
popa
shll
aas
adc
add
add
jae
fisttps
fadds
xor
lret
ret
inc
sbbl
je
ficoms
push
push
push
dec
jbe
mov
lds
mov
push
push
mov
xchg
mov
punpckhdq
fstpt
pop
jge
dec
or
adcb
clc
fs
clc
subb
pop
mov
add
cmp
add
jmp
orb
pusha
arpl
mov
addl
pusha
test
mov
test
add
push
pop
outsl
imul
add
or
jmp
fldl2t
or
cmc
in
test
sbb
mul
jb,pn
sti
call
pusha
jmp
add
cltd
jnp
sbb
mov
fnstenv
test
mov
popf
in
stc
jl
and
pop
jmp
add
fldl2t
test
pusha
ljmp
and
out
fldenv
sbb
cmp
fldl2t
jns
mov
and
popa
out
insl
es
push
add
add
pusha
add
popa
xlat
jne
loopne
jmp
mov
insl
data16
cmc
xchg
pusha
xorl
add
and
pop
push
fstpt
fcomps
das
data16
jno
flds
bound
hlt
pop
flds
jmp
fstps
jbe
cwtl
pop
or
fnstenv
jmp
add
fildl
jmp
flds
push
popa
add
popa
pop
lahf
jmp
call
and
dec
lods
outsl
or
mov
mov
lret
loopne
mov
fcmovnb
cmp
pop
cmp
outsb
imul
imul
call
jo
push
test
icebp
addb
not
imul
pop
and
fistps
jo
push
adcb
in
iret
sub
nop
sbb
jbe
subb
je
add
sti
out
pop
pusha
bound
add
rolb
and
cmpb
das
fldenv
lods
mov
add
cmpsb
mov
addb
punpckhdq
add
movsb
pop
sbb
bound
and
sti
cmp
push
push
add
mov
addl
mov
add
add
add
bound
add
loope
mov
add
push
push
add
cmp
ja
push
ljmp
popa
repz
or
adc
dec
jns
adc
jecxz
fld
jno
fsubr
fxch
pop
sub
push
lret
add
call
pop
nop
pop
mov
xor
mov
jo
xchg
fldl2t
add
add
add
push
sbb
jmp
push
pop
push
add
fldcw
shrl
ljmp
adc
ljmp
or
cmp
rolb
bound
cld
loope
ljmp
fldl2t
add
add
insb
sbb
push
in
add
mov
mov
dec
adc
add
testb
ds
push
insl
add
mov
fnstcw
xchg
pop
rcll
or
adc
push
jp
call
inc
movsl
push
mov
adc
or
data16
jmp
adc
add
xchg
push
test
in
sbbl
adc
add
add
dec
cmp
jo
inc
outsb
das
insb
mov
in
inc
aad
mov
xchg
mov
icebp
inc
sbb
mov
mov
add
or
ljmp
xchg
and
push
xacquire
aad
lea
adc
push
dec
fmuls
adcb
pop
pushf
pop
ljmp
pop
mov
dec
fadds
mov
add
add
daa
in
mov
add
inc
pop
andl
shll
xchg
movsb
bound
pop
fildl
dec
je
mov
arpl
xor
inc
lcall
aaa
xchg
dec
mov
addl
out
jmp
adc
sbb
sti
jl
bound
lods
mov
pop
push
or
dec
push
pop
inc
mov
dec
mov
data16
jnp
insl
hlt
sub
std
jno
pop
mov
bound
insl
mov
mov
pop
cmp
ret
iret
add
cmp
fldl2t
add
fnstenv
in
jl
popa
sub
jp
jge
scas
test
pusha
sub
add
jne
test
cmp
add
jp
decb
les
or
dec
hlt
in
mov
lds
or
sti
fadds
pop
stos
cmp
call
cltd
mov
loope
jge
add
gs
jl
add
movsb
mov
mov
flds
movsb
and
icebp
cmp
add
add
loope
or
add
inc
cltd
jne
idiv
sti
insb
mov
pop
inc
mov
cmpb
insb
mov
data16
int3
sbb
mov
mov
add
or
xchg
aas
mov
dec
add
dec
cld
ljmp
add
out
enter
add
add
sbb
or
ret
mov
jnp
sti
faddl
mov
add
lret
add
xor
ds
sub
jmp
xor
dec
idivb
add
ret
addb
repnz
sti
decl
sub
imul
incb
add
mov
jecxz
and
pop
iret
jle
jecxz
and
push
mov
add
add
jno
add
fstpl
sub
xor
std
sti
or
lret
and
std
fcos
imul
jb
mov
shlb
add
mov
add
leave
inc
andb
sti
sbbb
push
ljmp
lds
jle
jns
popf
popa
jnp
sbb
jns
inc
xchg
pop
sub
add
add
add
ljmp
inc
ret
popa
fnstenv
sbb
or
add
pop
dec
aas
outsl
sub
add
fistl
lcall
mov
xchg
pop
inc
push
and
mov
or
cltd
jle
jne
ljmp
fsubrp
or
sbb
push
mov
add
add
add
push
and
fldl2t
add
mov
inc
push
pop
add
fisubrl
push
and
sbb
test
insl
push
add
pop
pop
adcl
add
daa
inc
enter
popa
jmp
cmpsb
push
add
jmp
lahf
fs
mov
mov
cli
bound
fnsave
add
add
fldl2t
shll
add
mov
and
jle
stc
and
push
push
push
dec
or
and
call
cli
fadds
jmp
fstpl
jmp
push
adc
xchg
add
push
push
in
and
and
ret
or
mov
add
les
add
in
jne
insb
mov
add
popfw
mov
flds
jne
insb
mov
decl
fidivs
sub
xchg
pop
sti
pushl
mov
andl
lock
cwtl
lret
fadds
jne
xor
push
call
pop
adc
cld
mov
xchg
add
mov
out
jb
add
add
pushf
bound
xorl
push
mov
push
add
imull
bound
add
push
jmp
jp
add
bound
call
cwtl
add
aas
push
pop
testl
arpl
mov
pop
dec
xorl
add
xchg
sub
xchg
xchg
bound
mov
ficoms
int
hlt
cmp
xchg
fsubrs
in
lds
loope
adc
xor
and
fnstcw
fs
fldl2t
mov
cmp
add
push
fldl2t
mov
fldl2t
mov
cmp
add
mov
inc
mov
sbb
xchg
insl
dec
jne
or
add
in
mov
mov
ljmp
add
add
test
inc
dec
cs
push
shlb
mov
mov
adc
pop
mov
andl
and
sub
jne
flds
jb
mov
ljmp
add
aad
sbb
jmp
cmp
jmp
sub
jmp
push
addl
and
add
add
ja
mov
enter
push
fcomi
xor
jmp
in
fadds
jmp
popa
flds
loope
xlat
cli
add
pop
pop
jo
push
ret
push
ljmp
add
ljmp
add
cmp
inc
add
jno
fldl
addb
add
dec
fisttpll
cmpsb
mov
insb
ret
mov
mov
push
xchg
push
mov
aad
add
fadd
xchg
add
lret
add
xchg
add
faddl
add
inc
je
mov
fwait
add
lea
jmp
cwtl
add
lea
jmp
add
add
mov
adc
bound
inc
xchg
je
sti
dec
call
fnstenv
mov
sti
int
and
jb
test
jb
adcl
add
jno
jmp
lods
fldcw
mov
lcall
fldl2t
frstor
data16
mov
jmp
add
outsb
movb
lock
mov
jmp
into
adc
movsb
dec
movb
insl
adc
dec
jp
jmp
sub
push
pop
dec
cmp
das
add
push
bound
cmc
jb
xor
fdivs
add
pushf
mov
push
sbb
sbbb
data16
fldl2t
add
add
add
fiadds
bswap
sti
ja
push
inc
dec
xchg
jo
es
cld
xchg
les
loop
or
shll
add
loop
fs
rcr
add
icebp
pop
pop
aaa
xchg
cltd
push
bound
push
dec
sbb
popa
push
inc
int
pop
arpl
ficoml
mov
roll
bound
push
sub
mov
in
loope
data16
ficompl
mov
jns
and
popa
mov
ret
add
cli
jge
inc
pop
pop
cmp
int3
data16
aad
pushf
pushf
mov
dec
mov
fscale
jne
dec
inc
or
mov
outsl
pop
jecxz
cli
fsubrl
std
incl
add
add
mov
mov
insb
call
rcll
cmp
cs
push
int
cmpsb
mov
add
or
add
push
add
and
jb
add
lea
sub
or
loope
sbb
movsb
iret
mov
into
hlt
mov
out
jae
loop
out
jno
add
sbb
add
out
pop
test
jno
add
dec
or
enter
xchg
loopne
dec
iret
sub
dec
std
mov
dec
cmp
jb
les
aas
or
bound
push
stc
shll
inc
stc
shll
ds
xchg
rcll
inc
shll
jmp
push
lcall
add
add
push
scas
or
cwtl
jmp
outsl
fucompp
add
xchg
mov
adc
ret
insb
rolb
adc
aam
aam
adc
sbb
int3
fs
pop
ljmp
add
xchg
or
mov
test
jle
lret
insb
sub
jmp
cltd
in
and
flds
add
add
shll
dec
mov
add
cmp
jmp
flds
jmp
lds
add
data16
xchg
and
add
push
out
negb
push
jge
push
xlat
sub
frstor
jno
je
fsubr
or
mov
in
push
sbb
xchg
int3
inc
sub
add
add
inc
fadds
bound
dec
in
push
cld
pushl
or
out
jns
mov
jns
jmp
sub
push
push
add
add
dec
dec
add
cmpsb
mov
push
sbb
xor
and
mov
xchg
and
stos
outsl
or
or
or
jg
psubusw
repz
jbe
rorb
dec
pop
imul
pop
shll
je
add
add
lods
imul
jne
enter
add
adc
xchg
mov
and
add
add
xchg
inc
xchg
xor
add
clc
pop
pop
xchg
xchg
xlat
andb
inc
or
lea
call
inc
iret
push
cmp
cltd
push
es
lret
cld
dec
lcall
or
add
adc
xor
jmp
cltd
sar
pusha
add
adc
mov
into
jb
fsub
push
or
inc
fnstenv
ret
sub
pop
xor
mov
dec
and
lods
add
dec
mov
jmp
in
ds
int
ret
in
aas
cwtl
cmp
lret
add
inc
fsubl
flds
or
jmp
ret
mov
jge
and
rorb
je
add
inc
fnstcw
inc
fstpl
stos
ret
xor
xlat
or
imul
ret
pop
pusha
sub
in
add
fcoms
adc
test
pop
inc
and
push
and
sti
mov
jmp
or
xchg
call
sbb
sbb
push
bound
push
push
xor
add
push
xchg
std
jmp
xor
push
fisubrs
test
popa
pusha
int3
ror
cld
jmp
or
add
popa
pop
xor
pushf
fwait
add
ljmp
in
fimull
repnz
push
rcrb
add
inc
popa
enter
add
ret
test
fiaddl
xor
add
sbb
mov
push
cwtl
xchg
add
pusha
jmp
push
sub
xor
int3
jecxz
adc
fimull
adc
and
adc
addl
push
adc
or
jns
icebp
test
add
add
nop
and
jae
mulb
jnp
test
hlt
or
jmp
inc
add
bound
dec
pop
int
and
jb
bound
push
mov
nop
arpl
rorb
xor
je
xchg
xlat
pop
mov
inc
jnp
data16
jb
fisubl
add
add
jecxz
ljmp
mov
imul
enter
movsb
adc
inc
jnp
out
mov
jmp
popa
cld
jl
frstor
bound
dec
xlat
outsb
ss
test
stos
in
jle
loope
rolb
int
jg
loope
inc
xchg
in
jmp
int
shr
add
pop
inc
add
add
add
imul
lret
cmc
push
fs
xor
jo
jmp
movsb
mov
mov
iret
or
ljmp
jl
inc
and
flds
bound
inc
cmp
pop
flds
jo
xlat
test
jbe
and
popa
pusha
int3
xchg
cmp
mov
call
add
out
mov
pop
pop
stc
fcoml
mov
jns
push
cld
bound
fstps
adc
pop
ret
xchg
pop
mov
add
dec
mov
add
mov
shr
stos
push
jb
or
adc
lcall
adc
inc
add
out
int3
pushl
cmp
mov
pop
negb
cmp
rcl
ljmp
push
in
add
add
dec
push
push
dec
xor
push
test
mov
sbb
xlat
add
mov
cld
decl
pop
ds
pop
hlt
add
aad
das
hlt
pusha
in
add
aad
inc
mov
fadds
hlt
push
or
add
pop
mov
add
add
js
xorb
call
call
fldcw
mov
data16
pop
enter
mov
inc
add
jmp
mov
js
bound
push
mov
and
xchg
rclb
jae
adc
xor
jmp
add
inc
dec
outsb
cld
sub
mov
xchg
stc
mov
add
jbe
imul
adcl
add
fxch
add
pop
ss
cltd
fcoml
gs
cmp
fldl2t
insb
test
jmp
add
pop
jle
popf
fldl2t
add
pop
xlat
xor
sbb
flds
mov
loopne
inc
ficomps
aad
push
sbb
jl
hlt
icebp
add
add
add
sbbb
hlt
pop
add
popa
or
mov
sbb
pop
pop
test
mov
lret
nop
pop
flds
popa
jmp
mov
daa
add
cmpsl
roll
and
fisubl
mov
jmp
xchg
and
xor
add
int
and
add
add
sti
sub
popa
flds
imul
sti
jg
dec
dec
push
in
cltd
add
fs
sti
sbb
jl
and
adc
nop
jmp
sbb
and
insl
loope
test
pop
xchg
and
int3
push
jo
stos
std
movups
outsl
xor
add
pop
in
ja
jp
mov
add
add
into
test
flds
add
into
test
fildl
add
pop
adc
mov
and
data16
sbb
fiaddl
or
sub
or
cmp
cmp
leave
sti
pop
fstpl
mov
and
add
flds
ret
add
out
add
rcll
push
add
push
inc
jns
jno
sub
ret
call
inc
jnp
testb
js
test
arpl
aaa
xor
inc
add
movsl
ss
add
std
hlt
popf
add
bound
or
inc
cld
add
inc
loopne
sbb
cmp
push
mov
mov
xlat
xor
xor
daa
std
filds
scas
or
cmp
cmp
push
jle
dec
ljmp
fsts
call
mov
mov
or
ljmp
dec
ljmp
dec
gs
cli
lret
fstps
cmp
mov
cmc
jg
cltd
jmp
mov
mov
sub
adc
and
pusha
mov
add
add
cmc
js
cmc
mov
add
fs
add
pop
xchg
fbld
dec
add
flds
jmp
popa
inc
jns
pop
jmp
popf
notl
in
sbb
adc
flds
rorl
or
es
shll
rorl
and
pusha
js
cld
jmp
data16
popa
push
cltd
dec
cld
pusha
add
push
fstl
and
push
pop
adc
dec
push
mov
jne
xchg
movsl
and
xchg
insb
aam
xlat
inc
cmpl
cmp
mov
add
jg
mov
insb
add
rorl
test
xchg
add
add
add
add
aad
adc
push
pop
push
mov
sbb
cld
stc
dec
cld
mov
pop
push
inc
dec
out
test
dec
andl
and
push
push
bound
movsb
push
sahf
inc
jge
xor
sub
add
sar
repz
in
mov
mov
or
add
add
in
int3
dec
test
inc
inc
add
add
subb
cld
adc
ja
cli
cwtl
sar
dec
adc
incl
mov
je
sub
into
call
mov
xor
dec
dec
inc
rclb
arpl
jg
pop
repz
cmp
outsb
arpl
dec
std
inc
jo
jmp
not
sbb
sbb
fucompp
add
scas
outsb
pop
jle
jmp
rcrl
sub
mov
mov
ljmp
int
out
int
out
int
icebp
lcall
jb
xor
jb
sahf
aas
add
shl
jp
dec
adc
inc
addr16
inc
push
mov
add
aam
fldenv
mov
add
mov
addb
lods
dec
aad
mov
push
jmp
lods
xchg
push
test
call
insb
and
inc
pop
or
push
or
cmc
sti
sbb
inc
popf
and
pusha
xchg
or
aad
in
flds
cmp
aas
inc
pop
aas
inc
xchg
xor
sarb
ret
inc
in
arpl
add
imul
or
dec
ret
mov
jg
lods
cld
std
pop
insl
push
pop
addl
add
sbbb
add
loope
push
adc
mov
dec
mov
jbe
or
add
dec
add
mov
jecxz
add
fimull
add
cmc
or
cmp
sti
decl
or
jnp
pop
clc
dec
into
inc
or
arpl
lods
ret
pop
and
in
add
test
cmp
arpl
dec
ficoml
test
push
xor
dec
ja
jmp
aas
or
jae
push
xchg
add
or
add
xor
mov
hlt
xor
add
add
jno
aam
xor
test
xor
mov
adc
push
jmp
call
jnp
push
mov
popf
das
jae
fdivl
bound
add
mov
int3
add
mov
gs
inc
or
fldcw
and
jmp
xchg
fdiv
jmp
fisubl
fs
enter
add
dec
fucomp
cwtl
pop
lock
sub
or
dec
adc
loop
lds
scas
out
pop
aas
or
xchg
int
fistpl
fadd
sub
pop
enter
rolb
fcmovne
movl
outsl
dec
jp
mov
call
push
push
xor
loop
add
add
in
and
ficoms
fucomp
es
in
and
ficomps
aad
pushf
and
inc
loop
mov
clc
call
push
idivl
jmp
push
dec
add
ficoms
add
gs
iret
xchg
pop
pop
lret
push
dec
jo
addb
ficompl
jbe
repnz
inc
pop
int
sub
add
add
sti
cmp
stc
fcmovbe
daa
pop
push
addb
aam
addl
jmp
sbb
inc
add
std
mov
cmc
pop
clc
aam
jmp
dec
jecxz
std
inc
mov
and
and
sbb
inc
mov
add
sti
push
jnp
or
adc
or
xor
std
addb
dec
inc
push
andl
add
dec
sti
rolb
idivl
and
push
loopne
fcoms
mov
xor
pop
xchg
xor
add
loope
push
or
xchg
and
cmp
dec
xchg
rcr
add
adc
add
adc
push
jmp
icebp
sbbb
adc
dec
test
add
jmp
iret
enter
enter
sbb
xor
cmc
mov
dec
test
bound
add
das
add
and
ret
add
bound
xorb
enter
enter
cwtl
sbb
cmp
xchg
popf
pop
ret
clc
data16
shrb
fldl2t
adc
add
jnp
loope
loope
ljmp
jae
add
jmp
sub
adc
add
sti
add
ficoml
fwait
jmp
nop
std
sub
mov
sub
vmovhpd
add
jmp
pop
aad
ljmp
add
in
out
xchg
outsb
push
dec
in
inc
or
add
fisttps
fsqrt
out
sbb
lea
jb
ffreep
pop
xchg
pop
flds
jmp
aad
punpckldq
fidivl
jo
cld
and
pop
int
push
aas
cld
dec
in
jbe
push
movsb
and
cli
fsubrs
adc
mov
or
sbb
stos
xchg
rcll
xor
jg
jl
pop
add
repnz
dec
fisttpl
add
inc
cmp
add
enter
cmp
out
cmp
jnp
pop
aad
adc
test
dec
fildl
call
mov
or
add
sbb
mov
in
add
push
repz
push
dec
adc
or
add
push
flds
mov
fnsave
xor
sub
xor
sbb
call
fdivp
cwtl
bound
xlat
dec
push
popf
jmp
xor
xchg
enter
movsb
adc
xor
ljmp
pop
fildl
adc
pusha
and
popf
hlt
add
or
je
imul
pop
cmp
inc
fdivs
fdiv
je
mov
mov
mov
rcrl
add
mov
loop
add
fsubrs
push
xor
cmc
mov
pop
adc
inc
fildl
push
and
inc
push
xlat
data16
popa
fldenv
xor
jo
mov
pop
inc
setg
mov
sub
sbb
cmp
cmp
testb
incl
fs
add
mov
sbb
scas
call
orb
jmp
push
push
push
dec
add
fldl2e
push
and
add
pop
xchg
or
push
adc
mov
jmp
popa
scas
add
jecxz
add
fmull
add
add
sti
out
sbb
rcr
lea
xor
fldenv
adc
mov
popa
push
dec
add
pop
fcmovb
cmp
and
sbb
pop
sbb
cld
sbb
xchg
cld
sbb
lock
lock
push
or
push
iret
aad
or
add
add
or
add
popa
clc
cmp
dec
push
inc
dec
xchg
add
or
outsb
repz
xor
or
xlat
std
xor
xchg
sub
mov
dec
andl
xlat
lds
iret
dec
inc
add
xlat
jg
cmp
mov
test
push
aaa
dec
or
cmp
or
cmp
dec
add
jmp
call
leave
xchg
pop
pop
xor
add
mov
adc
bound
add
xorb
sub
mov
push
xor
out
xor
mov
adc
out
sub
pop
jb
jge
scas
rdtsc
inc
xchg
adc
xor
jmp
jns
mov
and
mov
pusha
arpl
add
pushf
cmp
lea
add
add
repz
cmp
aam
sbb
pop
mov
add
cltd
pop
arpl
fmul
call
cmp
nop
sub
fsubr
sub
shr
add
inc
insl
sbb
rolb
fldcw
insl
xchg
test
data16
test
clc
incb
into
nop
mov
cmp
mov
add
xchg
pop
mov
add
sub
adc
add
add
mov
add
imul
enter
sub
and
add
test
data16
jb
inc
lock
popa
flds
ljmp
mov
popa
ss
jmp
and
push
push
mov
add
add
inc
or
lea
sbb
inc
ror
cmc
lea
sub
add
or
pop
shll
cmpsb
push
in
sti
adc
cwtl
orl
movsb
shll
add
out
inc
mov
jg
xor
ret
mov
inc
lret
pusha
inc
and
add
add
filds
bound
pop
insl
xchg
push
push
sti
cmp
push
es
add
movsl
fildl
addl
fsubs
mov
mov
xchg
jae
add
dec
and
add
dec
fisttpl
inc
aad
add
dec
fisttpl
add
outsb
pop
pop
bound
icebp
adc
add
add
inc
stos
mov
mov
mov
add
bound
add
add
test
andb
add
in
add
bound
sbbl
mov
sbb
or
bound
xor
inc
ds
lock
flds
jae
rclb
iret
inc
jnp
pop
cld
adc
add
add
xchg
fdivs
stos
call
xchg
ljmp
sub
stos
jb
cmp
cmc
mov
push
ss
filds
std
scas
ja
jmp
inc
push
popf
outsb
movl
leave
outsb
mov
dec
pop
xchg
adc
lods
repnz
cmp
lcall
add
add
jmp
sbb
push
outsl
shrl
mov
out
dec
cmp
add
mov
cld
jo
stc
sbb
xchg
je
jle
jno
cld
jae
clc
nopl
rorb
pop
pop
in
int
xchg
stc
popf
add
popa
mov
push
popa
bound
add
xchg
xor
add
pop
fcomps
xor
jmp
mov
int3
imulb
popf
and
popa
inc
popf
shll
xor
bound
inc
pop
mov
cmpb
adcl
rolb
add
ret
das
sti
add
outsl
dec
popa
and
call
jbe
and
imull
add
pop
shll
add
inc
pop
or
cmp
sbb
sub
pop
inc
and
push
sub
and
jb
test
adc
cwtl
outsl
or
and
sbb
dec
mov
mov
mov
pop
ret
jmp
into
cmpl
jne
push
mov
jmp
or
in
call
shl
inc
add
inc
test
add
jle
add
ds
jge
inc
cmp
cmp
call
push
or
inc
ds
dec
ja
add
mov
cmpsl
enter
add
outsl
dec
addb
cmpsb
sub
inc
jle
adc
mov
push
sbb
cld
ja
cli
aas
bound
in
or
outsb
cmp
lods
jmp
add
or
adc
out
adc
xor
dec
jb
add
cs
mov
push
jle
mov
es
inc
add
sub
jo
adc
call
out
pop
test
shll
add
imul
xchg
xor
test
std
fldl
fstps
add
testb
movsb
popa
inc
pop
imul
repnz
or
sbb
add
icebp
xchg
cmpsb
sub
vpcmpgtb
dec
subb
jmp
gs
adc
arpl
mov
xor
and
add
add
pop
cli
call
popa
fnstenv
popf
push
flds
jmp
sbb
and
sub
aam
enter
xor
aad
mov
popa
decb
mov
add
mov
mov
mov
dec
fmull
vpminub
mov
adc
xor
mov
sub
mov
mov
add
add
adc
mov
xor
testl
add
and
enter
inc
push
je
xor
xchg
adc
inc
xchg
inc
dec
add
std
adc
inc
or
lods
jecxz
adc
adc
jmp
cmc
sti
mov
inc
jns
jle
mov
and
add
add
add
jmp
adc
mov
out
stos
pop
mov
xor
xor
dec
jns
bound
icebp
loope
in
mov
fcoms
data16
push
fadd
imul
pop
leave
push
jns
jns
mov
imul
outsb
ret
popa
mov
movl
int
jno
sbb
lods
repnz
xchg
xchg
jmp
lods
jl
cmpsl
out
pop
jmp
js
pop
cmp
jnp
popa
movl
cltd
cmp
js
inc
notb
fldcw
jmp
int
in
cwtl
sarl
sub
jecxz
adc
imul
test
enter
or
popa
out
bound
inc
aad
test
cmpsb
pop
sub
jge
xchg
jge
push
je
stc
dec
cltd
scas
sub
int
pusha
roll
or
cld
out
lea
adc
jmp
pop
aad
xor
cmp
sub
jmp
fwait
test
pop
flds
adc
sub
cld
bound
add
add
shrb
or
imul
dec
faddl
add
fdivrs
jl
sbb
add
inc
fsqrt
sub
loop
add
scas
inc
and
dec
push
mov
or
mov
aad
jmp
stos
enter
add
shrb
mov
fadds
add
decb
cmp
je
arpl
xlat
nop
insb
and
in
or
das
lcall
pop
loopne
mov
inc
mov
cmp
mov
sub
dec
pop
xor
mov
mov
mov
lea
cmp
dec
enter
add
mov
push
enter
mov
es
clc
lds
push
call
fidivrs
jmp
mov
aaa
fldenv
sahf
repnz
add
cltd
mov
mov
sbb
call
fld
loopne
fldenv
test
pusha
aas
sub
bound
shrb
add
xor
test
add
adc
out
pop
pop
jecxz
push
fucomip
std
call
pop
das
sbb
add
add
xchg
roll
or
push
fcoms
test
filds
mov
stc
fildll
add
mov
cmpsb
cmc
or
adc
sbb
loopne
sub
jnp
andl
hlt
sub
jl
lds
push
cmc
and
out
and
pop
pusha
pop
stc
out
add
fistps
jne
mov
add
rorl
imul
jmp
ja
add
mov
jae
adc
jmp
push
jmp
outsl
lock
repz
pop
mov
or
mov
xlat
cmpsl
fstpl
and
inc
inc
std
add
xchg
sbb
adc
inc
lds
push
inc
shr
sub
sbb
add
add
adc
outsb
fs
call
loopne
mov
movsb
cmp
popa
and
jo
add
pop
or
push
sbb
and
imul
cli
mov
std
incl
popf
je
mov
je
ja
dec
and
call
add
faddl
data16
sbb
je
movsb
push
cmp
jo
xor
arpl
jb
movsb
inc
and
add
add
cld
pop
cmp
xchg
push
push
subb
nop
sbb
sub
ss
out
cli
cli
out
outsb
add
fldcw
jg
arpl
jns
aad
add
jns
out
aaa
repz
std
loope
fcompl
bound
mov
inc
hlt
mov
jp
or
bound
call
add
sbb
mov
xchg
cmp
bound
lcall
mov
add
jmp
call
bound
xchg
cmp
scas
xor
pop
daa
pop
rolb
mov
lods
shll
icebp
pusha
mov
sbb
es
jns
std
std
sar
xchg
inc
adc
sub
sahf
cmc
es
ljmp
or
leave
add
leave
fldl2t
js
stc
adc
mov
std
add
or
jmp
sub
fsubr
js
jmp
jmp
sbb
outsl
mov
pop
add
pop
loope
cmpsb
mov
or
xor
popa
flds
jmp
pop
sbb
inc
jmp
popa
fnstcw
aad
push
mov
insl
and
xchg
sub
and
loopne
cld
data16
or
fadds
jmp
popa
flds
xchg
insb
call
push
nop
fadds
and
fildll
and
dec
aam
call
pop
in
popw
xorb
test
add
add
cld
sti
lea
clc
dec
dec
and
xor
jg
hlt
pop
mov
or
mov
aas
fldl
add
push
test
lea
std
push
push
sti
xlat
andps
leave
jg
test
add
lock
jnp
push
push
dec
dec
and
xor
inc
lahf
cld
jg
inc
pop
jno
dec
fmuls
add
cld
cmp
punpckldq
push
mov
xor
xorb
sub
pusha
xor
aaa
xchg
push
sbb
xchg
inc
xchg
push
mov
push
cmp
insl
and
mov
mov
mov
add
jnp
jbe
decb
add
add
push
and
add
add
cmpsl
roll
push
push
cmp
ds
xlat
mov
add
test
ret
cltd
std
push
in
push
test
add
sbb
fistl
mov
shrl
adc
ljmp
fldl2t
add
xor
ficomps
xchg
int
cli
int
add
pop
stos
adc
addr16
daa
mov
and
or
fldenv
pop
add
add
in
mov
fsubr
add
movsl
int
xchg
bound
std
in
add
shrl
mov
ljmp
fistpll
push
add
popa
lret
popa
orl
sub
jmp
aad
ljmp
xchg
fsubrs
or
test
add
add
dec
and
jb
cmp
pusha
fcos
jnp
and
lds
lret
inc
jmp
fists
cmp
sub
ret
fwait
xchg
pop
add
popa
mov
push
mull
fnstcw
gs
sbbl
out
mov
add
out
call
scas
pop
and
dec
inc
and
test
add
call
mov
dec
js
aaa
push
std
je
push
test
ja
add
xchg
jge
cmpb
or
and
subb
test
test
pop
stc
pusha
push
mov
and
pop
add
aad
add
adc
and
icebp
test
bound
add
push
cmp
xor
add
dec
and
loop
inc
xchg
push
mov
out
add
fidivs
add
sbb
pop
jmp
int
and
xacquire
or
mov
mov
mov
repnz
add
cmpsl
jae
jle
xchg
notb
ss
inc
std
cs
push
push
insb
call
mov
add
add
mov
add
cs
jb
add
lar
jmp
xor
jg
pusha
mov
shr
cmpb
fildl
cmp
cmp
xchg
push
sub
sub
repz
mov
aad
jae
jmp
dec
fcomps
cli
faddl
js
pop
in
sti
inc
xchg
jmp
outsb
push
jge
mov
push
std
testl
push
inc
or
bound
xchg
inc
addl
popf
cmp
push
inc
lds
pop
popa
fldenv
lods
xor
push
hlt
push
ljmp
xchg
lahf
int3
test
add
adc
add
add
sti
hlt
mov
fs
mov
rolb
xchg
push
icebp
xchg
arpl
repnz
xlat
int3
test
flds
jb
cmc
adc
pop
push
inc
or
stc
xlat
jne
xchg
push
rorl
jp
mov
add
or
mov
test
iret
rorl
or
mov
rolb
add
add
repnz
inc
adc
int
test
add
mov
jle
jle
or
add
or
jo
push
push
dec
aad
and
xchg
push
call
inc
cltd
and
popa
int
jbe
mov
rorl
or
bound
loopne
add
scas
js
or
js
clc
decb
call
mov
ds
clc
adc
push
pop
mov
les
scas
js
mov
ljmp
cmpb
pop
mov
cmp
xchg
or
bound
add
jae
sbb
add
in
cmc
and
pop
mov
and
mov
mov
and
and
push
sbb
jecxz
pop
jmp
pop
jmp
jo
push
inc
mov
stc
push
dec
leave
fldl2t
mov
adc
pop
ja
or
or
jmp
in
sbb
loope
sbb
xchg
xor
jmp
sbb
inc
xchg
xlat
pop
adc
and
bound
cmp
push
adc
fwait
cmp
jmp
subl
xchg
sbb
add
add
sbb
mov
xlat
les
bound
rorl
push
push
pop
cld
push
xlat
or
sbb
cli
mov
pop
out
add
cli
hlt
adc
jno
cld
popf
pop
push
inc
in
sahf
xchg
add
out
adc
sbb
jmp
popa
mov
leave
push
cltd
add
add
add
addb
jmp
and
cmp
lea
jne
insl
pop
jbe
ficomps
test
fsubrl
cld
jne
dec
into
call
clc
and
fsubrl
test
je
in
cmp
cld
mov
aam
mov
outsl
or
stos
or
sub
add
add
add
call
loope
dec
pop
dec
inc
in
sti
fistpl
dec
adcl
inc
cmp
cmp
mov
mov
add
andl
scas
push
pop
leave
flds
push
jo
mov
pop
call
push
jmp
pop
hlt
jl
jg
inc
add
loopne
andl
push
lea
jge
or
sbb
mov
add
add
mov
push
bound
cmpl
pop
add
sbb
add
loope
add
cmpsl
or
mov
cld
pop
cmp
les
lea
ffreep
or
cmpsb
add
jno
mov
mov
mov
add
mov
sub
popf
sub
nop
cmp
fs
adc
ljmp
add
add
fs
inc
fnsave
or
lods
xor
add
stos
fs
outsb
test
je
addb
dec
fldcw
fistps
pop
xor
int3
sub
popf
test
pop
lret
jmp
xor
mov
pop
and
lods
cmp
xchg
add
cmc
lahf
lock
dec
ds
outsb
int
mov
add
bound
das
dec
pop
jnp
je
jbe
xor
call
int
adc
and
fisubrl
cld
pusha
jl
mov
test
fstl
mov
mov
movsb
adc
or
imul
test
std
in
xchg
adc
push
push
arpl
cmpsb
pusha
add
mov
dec
push
out
inc
push
add
add
out
aaa
outsl
test
mov
cmp
sbb
push
in
dec
add
pusha
ja
orb
jle
xchg
fdivs
add
jle
or
add
test
sbb
mov
mov
inc
pushf
xor
jg
call
bndldx
xlat
in
mov
inc
cmp
jo
pushl
mov
add
fdivs
add
lock
sub
or
cmpsb
xchg
test
add
fdivr
inc
arpl
mov
or
repnz
sbb
arpl
lock
or
push
mov
dec
testb
dec
into
pop
mov
mov
dec
pop
adc
dec
mov
and
rolb
add
out
js
subl
je
add
add
jle
sub
push
push
adc
out
call
ffreep
jns
flds
xor
jge
jae
dec
push
add
je
jbe
ja
pop
popa
or
fildll
sbb
fisttps
and
das
ds
lods
loopne
cmp
add
add
fcmovu
jo
aam
in
pop
mov
sti
add
lcall
bound
in
pop
mov
jecxz
add
mov
cmp
out
jle
dec
das
mov
loop
mov
icebp
fistpl
push
pusha
stos
pop
mov
pusha
push
xchg
pop
dec
push
movsl
fcmovnu
pushf
cmc
jl
add
add
lahf
fmull
cwtl
fmull
jl
push
int
xchg
clc
shll
or
push
ja
or
daa
sbb
call
insl
sahf
xchg
rcr
mov
sub
addr16
pop
icebp
sti
aad
jmp
adc
push
pushf
or
mov
pop
fsts
jno
dec
lds
inc
loope
add
add
ljmp
dec
fldl
push
mov
cld
pushl
fsubrl
rolb
or
add
cld
lcall
add
xchg
dec
and
les
js
adcl
into
sbb
pop
add
idivb
decl
fiaddl
push
inc
pop
push
mov
or
jne
and
mov
jne
pop
jmp
out
cmpl
dec
or
mov
lock
adc
fidivl
adc
mov
jp
arpl
mov
out
loop
add
pop
mov
or
mov
rolb
sar
and
dec
shr
add
and
jge
outsb
imul
adc
jno
fld
or
and
daa
rclb
pop
jp
and
or
ret
dec
add
or
inc
add
shlb
outsb
inc
outsb
sbb
push
jmp
push
bound
dec
add
fsts
loope
jno
fidivrl
jmp
rol
mov
sarl
add
xor
push
ret
incb
add
add
pop
ljmp
pop
out
sbb
sbb
push
stc
loopne
adc
fldcw
cld
push
jmp
cmp
add
test
pop
xor
cmc
push
insb
cltd
jmp
insl
pop
add
jnp
aad
mov
pusha
es
insl
and
dec
in
pusha
xchg
add
stos
test
inc
jmp
loopne
or
lahf
pop
pusha
add
pushf
aad
daa
pop
pusha
add
movsb
aad
call
lahf
mov
adc
xlat
add
bound
call
or
jp
jb
mov
push
inc
test
jle
out
or
or
adc
paddb
xchg
add
adc
add
aaa
cld
call
xor
xor
shlb
add
dec
push
fsubs
adcl
fstpt
push
jo
push
in
stc
push
xchg
push
mov
jmp
jne
cwtl
xchg
mov
leave
jl
xchg
ret
mov
mov
and
xchg
push
dec
nop
jmp
add
mov
lock
ljmp
sub
mul
js
inc
sub
mov
incl
je
jmp
xorb
cmc
jmp
ja
pop
out
addb
pop
or
cltd
dec
shll
cmp
pushf
in
notb
lds
push
add
add
fistl
xchg
daa
jno
mov
adc
push
xor
add
push
imul
arpl
add
mov
push
arpl
lods
hlt
ljmp
loop
jmp
mov
outsb
pop
xchg
into
scas
pusha
sbb
push
bound
and
xchg
test
push
mov
push
and
test
fisttpll
fldl2t
ljmp
ret
mov
js
fcmovb
mov
and
int
xor
sbb
adcl
sub
ret
jb
mov
aad
pusha
leave
inc
out
imul
aaa
sbb
hlt
stc
out
cmp
push
imul
lea
jns
lods
pop
les
add
mov
repnz
scas
sti
push
loop
jp
ja
call
lds
or
ficomps
pusha
repnz
pusha
pop
mov
pop
add
sub
arpl
xchg
mov
add
dec
adc
stos
fsts
lcall
inc
dec
cmpsl
mov
call
mov
mov
ljmp
iret
ljmp
lock
mov
aad
cmp
and
cmpsl
dec
push
or
into
xor
addl
shlb
xor
or
mov
push
and
scas
mov
adc
popf
adc
dec
lahf
xchg
push
mov
pop
or
cld
imul
xorb
sub
mov
insl
mov
mov
jo
mov
sbb
mov
mov
decl
in
stc
mov
adc
pop
add
sbb
dec
imul
xor
jmp
flds
xor
scas
mov
aas
sub
arpl
inc
sbb
adc
mov
xor
jl
repnz
xor
add
add
ficoms
test
pop
std
push
cli
repnz
fscale
push
xor
adc
fstps
push
and
enter
les
fidivs
xor
movsl
add
add
dec
das
dec
addr16
and
push
sahf
pop
push
icebp
jge
pop
or
jle
sub
mov
add
jle
or
mov
add
test
mov
out
push
or
mov
and
add
fcoms
testl
loope
xor
call
bound
xchg
arpl
shrb
or
cmp
orb
push
popf
lds
add
xor
nop
jmp
push
in
add
push
insb
add
cld
jmp
orl
xchg
jmp
mov
or
popa
push
dec
int
xchg
xchg
cld
xchg
add
pop
cld
popa
inc
push
inc
stc
scas
push
dec
add
dec
int
enter
add
mov
test
mov
jge
add
shrl
cmpsl
shll
cld
outsl
jne
fsubrs
sbb
lea
inc
push
adc
push
jg
repz
int
jg
xchg
xor
adc
leavew
and
dec
mov
xchg
std
mov
into
or
dec
or
inc
cld
cld
test
orb
xor
nop
jnp
loopne
push
xor
fmuls
addr16
out
incl
add
add
adc
add
idivl
mov
sbb
push
flds
fwait
lcall
inc
sub
bound
lcall
sti
decl
mov
addb
jmp
icebp
pushl
mov
inc
xchg
jge
and
ficompl
repnz
add
decl
adc
add
add
sbb
jmp
cmpsl
call
nop
cmpsb
shrl
xchg
push
sub
pop
dec
pop
mov
cmp
ficomps
jmp
fstp
jmp
neg
popf
int
adc
xor
add
push
mulb
jbe
scas
daa
inc
push
hlt
mov
in
cmp
fsubr
pop
ljmpw
or
fsubr
mov
mov
insl
imul
add
add
ljmp
fldl2t
add
icebp
pop
and
flds
jmp
data16
mov
or
call
or
cld
jmp
rolb
repz
and
mov
add
popa
test
push
pop
and
and
sbbb
ljmp
call
inc
incl
jmp
and
lods
inc
mov
bound
aad
lods
jge
xchg
in
push
cmpsl
add
add
stos
adc
das
sar
push
mov
sahf
dec
clc
cld
pmullw
xchg
jmp
mov
adc
mov
fdivl
testb
add
mov
sub
pop
nop
add
push
dec
and
stc
outsb
or
test
std
incl
sbb
and
mov
test
dec
push
push
rclb
pop
dec
cld
decl
andb
add
bound
and
out
decl
movsl
jo
adc
mov
insb
xchg
cmp
add
ja
adc
add
add
lea
stc
out
decl
lock
sbb
pusha
or
add
inc
loopne
fildll
bound
sbb
out
incl
roll
and
inc
pop
fcomp
es
idivb
mov
fisttpll
add
add
test
bound
add
int3
add
mov
lds
or
sarl
push
into
or
sbb
lds
ljmp
push
cmpsl
add
fldcw
and
insb
dec
test
xchg
in
ja
call
int
xlat
mov
add
lods
or
add
add
add
push
fildll
jmp
fucomi
xchg
test
push
inc
icebp
mov
adc
lahf
aad
jge
mov
adc
icebp
imul
or
sub
lcall
mov
ljmp
mov
lock
push
out
lods
mov
or
out
aad
pop
cld
orb
cwtl
lock
in
mov
mov
xchg
rcll
add
add
mov
push
push
roll
mov
or
call
int3
xchg
or
push
roll
xor
add
push
repz
ret
dec
rolb
ret
lcall
mov
cmp
xchg
lcall
scas
lcall
add
jp
int3
lcall
sbbl
aad
lcall
icebp
lcall
sub
xchg
ficoms
push
xchg
and
bound
add
stos
mov
pop
sbb
adc
mov
xor
jmp
and
jmp
and
fildll
and
xchg
jns
and
inc
jmp
scas
data16
negb
add
scas
push
add
lock
mov
repnz
bound
dec
and
jae
or
mov
mov
or
mov
adc
subl
push
or
mov
dec
ds
push
inc
fldenv
jmp
ficompl
pop
int3
outsb
lret
cmp
push
cmpsb
daa
xchg
daa
jp
stos
pop
loope
xchg
or
int3
add
fldl2t
call
mov
dec
jp
std
pop
inc
ds
sub
jno
and
in
fisubl
add
xchg
in
rcl
outsb
inc
adc
add
cld
pop
inc
xchg
add
fstl
xchg
cmc
or
test
out
mov
rol
scas
imul
in
xchg
or
sar
pop
scas
lcall
dec
in
adc
push
cli
cld
repz
sbb
test
xchg
outsl
xchg
scas
dec
jno
aam
je
std
adc
fs
ss
outsl
sbb
aam
jmp
jb
push
repz
sar
dec
sbb
adc
add
add
mov
incb
add
xlat
add
sub
dec
inc
lock
inc
hlt
mov
dec
rcrl
push
mov
fisttpl
push
lret
loopne
mov
loopne
jne
cltd
push
push
aad
shld
add
mul
test
ja
aaa
and
fnstcw
test
cmp
aaa
int
ds
fnstcw
xchg
fnstenv
shrb
lret
push
call
mov
and
jmp
and
xor
aas
rolb
stos
add
lock
sahf
jmp
jae
inc
out
lock
insl
jne
pushl
jne
or
mov
add
bound
add
sbb
sbb
jbe
test
pop
add
jg
rorl
orl
jmp
lods
decl
repnz
add
add
cld
mov
outsb
inc
xchg
gs
push
push
popf
add
xlat
mov
movsb
int
test
add
jno
hlt
mov
outsb
pop
lahf
mov
jmp
cli
push
fsub
sbb
or
add
add
xchg
dec
popa
call
mov
sbb
inc
aad
sbbl
add
sub
jo
mov
in
cld
xchg
popf
jmp
fdivrp
les
outsb
dec
xchg
outsl
inc
jle
add
mov
or
mov
push
call
lds
add
add
mov
inc
arpl
mov
adc
dec
lock
idiv
push
mov
call
jne
pop
jb
xchg
pop
mov
jecxz
jbe
loop
jbe
dec
in
inc
dec
jecxz
jp,pt
je
jp
jne
fcomps
xor
outsl
and
jns
mov
pop
fcmovb
cmp
flds
movb
add
mov
fldl2t
fwait
inc
clc
sbb
sub
and
add
mov
bound
push
adc
and
incb
jo
icebp
filds
addb
outsl
push
idivb
stc
dec
mov
andb
jne,pn
pop
repz
enter
inc
test
lret
add
les
jb
dec
idivb
adc
add
mov
add
or
jmp
sbb
push
dec
mov
mov
add
adc
mov
hlt
mul
xchg
jnp
out
adc
leave
out
xchg
aad
jmp
shlb
ss
mov
add
add
mov
aaa
xchg
out
hlt
jb
out
fildl
jmp
or
and
mov
std
incl
cld
cli
fcoms
out
outsb
lods
pop
and
add
fcomps
adc
mov
idivl
adc
test
in
rcr
add
sbb
sub
fwait
jns
jmp
add
add
call
cmp
jbe
adc
mov
iret
loop
push
push
fucompp
add
mov
add
or
mov
stc
inc
bound
dec
push
cmpsb
add
adc
add
jbe
xchg
lret
shll
ja
mov
cld
sub
fnstenvs
pop
jecxz
std
cmpsb
xchg
push
add
es
jne
adc
pop
das
cmp
pop
inc
in
pushf
or
bound
flds
mov
mov
add
test
loope
adc
jecxz
adc
adc
call
push
lidtl
imul
mov
mov
call
mov
mov
cld
push
movb
add
add
xchg
inc
jne
jb
or
xor
es
xlat
andl
cmc
xchg
pop
or
xlat
mov
pusha
ret
je
movntps
jnp
andl
sbb
ljmp
enter
or
call
adc
je
call
rcrb
jg
add
or
add
bound
add
and
push
jmp
out
sar
fstpt
clc
xchg
or
xchg
adc
add
fldenv
fnsave
adc
rolb
push
xchg
cmp
adc
xor
aas
bound
jge
loop
pop
daa
dec
pop
or
push
mov
fldt
fsubr
cmp
dec
sbb
sub
add
bound
out
add
add
pop
xchg
add
or
ret
xchg
mov
fsubr
add
pop
add
push
bnd
cmp
sbb
aaa
fildl
out
push
into
iret
aam
jmp
cmp
pop
sub
push
pusha
mov
push
into
sahf
icebp
gs
pop
je
fstps
add
add
shrl
fldt
jae
fisubl
jmp
addr16
in
loope
addl
mov
sub
xchg
mov
lea
inc
kmovw
out
sti
insl
and
sbb
bound
pop
pop
popa
flds
jmp
sub
fdivrs
mov
mov
pusha
popa
bound
scas
or
bound
push
xchg
add
pop
pop
inc
lds
leave
xchg
popf
daa
jmp
popa
jmp
push
lea
add
mov
in
mov
leave
push
push
fdivl
call
subb
mov
pusha
testb
add
add
sti
sti
pop
dec
and
insl
outsl
and
adc
lret
lret
rol
clc
add
shr
pop
aad
lea
and
pop
movsl
dec
push
je
call
lcall
or
add
scas
and
shl
int3
add
mov
decl
dec
and
adc
bound
add
outsl
push
xor
out
add
add
add
sar
lds
add
out
and
cli
jmp
incb
insb
jmp
outsb
adc
push
xchg
pop
pop
mov
mov
int3
call
add
test
out
andl
mov
fdiv
out
dec
add
jmp
in
int3
jae
lock
clc
in
js
mov
pushl
mov
xchg
bound
test
fnstenv
fldt
jmp
clc
lret
leave
cltd
xor
imul
bound
pop
dec
pop
mov
jb
sub
loopne
xchg
pop
jmp
mov
add
fsubr
js
fldt
adc
fcmovu
sarl
add
ficoml
or
cmp
mov
hlt
xchg
cmpb
add
add
add
bound
xchg
das
push
pop
lds
dec
or
pusha
flds
inc
mov
adc
dec
shr
jb
pop
repz
ja
jmp
or
stc
hlt
or
pusha
flds
popa
mov
and
add
add
mov
cmp
hlt
stos
and
flds
xchg
xchg
notb
bound
lea
lds
in
add
mov
dec
push
imul
ds
adc
add
and
arpl
xchg
add
mov
add
insb
mov
incl
add
add
lea
mov
or
test
cld
imul
xlat
jb
lods
mov
jmp
icebp
dec
push
insb
int
dec
ret
inc
sbb
add
cmp
pop
cmpsb
imul
bound
testl
icebp
adc
jb
rcrl
jmp
add
test
add
add
or
adc
sbb
js
jle
pop
incl
jge
jae
jge
and
ret
cmc
gs
or
call
xor
call
fcomps
mov
arpl
add
bound
ret
sarl
stos
xchg
add
cs
call
mov
fistl
ljmp
add
add
sbb
jge
fnstcw
enter
pop
mov
bound
dec
daa
and
jmp
fcomps
sbbl
jmp
mov
xor
push
sub
pop
popf
ret
je
jmp
or
pusha
popf
idivl
pop
fidivrl
fs
clc
and
cmp
pop
cmpb
sub
sti
xor
test
aas
fwait
data16
pop
sub
movsb
in
sti
arpl
pusha
lret
xchg
enter
cmp
mov
push
out
adc
movsb
in
mov
sub
jl
lea
out
sub
xchg
xchg
jnp
jmp
mov
push
xchg
in
movsb
mov
pusha
lcall
push
xchg
push
add
cmp
imul
xor
mov
pop
outsl
adc
arpl
mov
add
xor
ret
ret
dec
fs
xlat
in
push
push
jl
icebp
push
mov
hlt
mov
lret
fld1
inc
out
dec
sbb
clc
test
outsl
hlt
xor
cmc
fsubp
mov
and
push
call
nop
mov
in
mov
fcompl
jno
pop
leave
cmp
add
add
scas
out
call
in
sti
movsb
push
push
push
bound
fstps
ja
jno
ret
adc
add
add
cmc
sar
icebp
dec
pop
xlat
jl
cli
jge
xor
out
jns
bound
out
imul
add
adc
mov
mov
ret
push
xor
inc
jns
sub
xlat
sbb
ret
inc
in
lods
cld
sub
cmc
fadds
std
in
fistpll
ljmp
dec
pop
icebp
lcall
outsl
shrl
cmpsl
or
out
bound
mov
add
inc
add
add
add
fstps
pop
fs
pop
repnz
pusha
xchg
xor
mov
mov
bound
es
fxch
adc
jle
pop
inc
xchg
and
sbb
push
cmpsb
pop
mov
push
adc
cmp
fsubr
js
pop
or
stos
sub
xor
clc
call
push
into
add
add
add
flds
jmp
sbb
lea
jno
adc
push
rcll
push
mov
enter
cld
sahf
inc
xchg
loope
and
sbb
icebp
jg
sub
or
loop
pop
push
sahf
or
cmpsb
roll
fsubrl
pop
jl
lea
shll
jmp
ret
dec
push
push
add
lock
insb
cmp
push
inc
lds
ds
add
stos
lret
les
leave
rolb
sti
dec
jmp
push
pop
add
push
jne
sub
inc
lea
aas
icebp
cmp
addr16
aas
mov
inc
call
pop
sbb
xchg
push
push
scas
mov
mov
aaa
incl
add
add
push
and
push
dec
and
xor
out
fmuls
enter
sbb
jle
jo
push
call
push
cmc
rorb
out
cmp
jmp
inc
add
mov
jge
jae
mov
sarb
in
fldcw
mov
xchg
adcb
dec
inc
out
cmpsl
mov
add
add
icebp
decl
sub
mov
pop
mov
mov
scas
das
test
xchg
call
ja
and
addr16
xchg
fdiv
xchg
test
jecxz
test
inc
in
lds
test
jmp
jmp
pop
addr16
pop
add
shlw
test
fldl2t
add
add
add
pop
push
pop
pop
fldl2t
push
xor
inc
icebp
daa
cmp
loop
xor
lcall
jmp
pop
fstpl
lds
mov
pusha
pop
xchg
xchg
mov
mov
push
sarl
pop
nop
adcl
test
loop
ret
jne
mov
jmp
std
shr
sub
sti
push
add
add
scas
dec
jl
jp
in
jmp
push
adcl
or
xchg
add
popa
dec
inc
add
xor
add
and
push
pop
lds
and
popa
flds
mov
or
jl
and
lds
leave
push
mov
popf
mov
inc
and
or
or
lea
ljmp
lea
inc
or
or
test
sub
fadds
dec
pop
stc
sbb
inc
andb
nop
and
xor
push
les
add
adc
push
mov
dec
pop
and
push
ret
fiadds
add
xlat
push
add
mov
add
js
aaa
mov
xor
pop
push
push
and
ljmp
mov
inc
push
std
ja
push
inc
bound
or
mov
or
cs
dec
in
jmp
mov
outsb
inc
icebp
test
aam
jmp
sar
lods
icebp
xchg
stos
xchg
dec
inc
loop
push
outsb
or
mov
add
add
cmpl
scas
or
jmp
xor
dec
mov
ret
or
aam
pop
fnsetpm(287
jecxz
out
or
fsubp
test
cmp
fildll
push
xchg
add
fstps
std
mov
sub
loope
call
dec
lods
add
adc
fsubrp
addb
add
cwtl
fisubs
xchg
push
call
jns
rcll
push
int
fcmove
call
call
jmp
push
flds
lock
dec
or
fcoms
popa
push
flds
mov
sbb
fnsave
jg
popa
int3
mov
pop
flds
ds
xor
out
cmp
add
add
repz
test
jmp
and
pop
dec
ret
aad
imul
cltd
and
fsubrl
lahf
fcoms
loopne
and
xchg
push
addr16
cmpsl
and
test
ss
push
pop
or
popf
movl
popa
push
dec
int
int3
xchg
test
pop
push
ret
jne
push
mov
and
mov
adc
add
add
dec
call
cmc
jae
add
push
mov
xor
in
ror
add
dec
dec
and
xor
dec
sbb
dec
push
das
call
inc
sbb
inc
fs
push
movb
jo
mov
in
and
std
test
stc
and
fsubs
cmp
add
add
inc
and
jmp
mov
fistl
in
and
sbb
fcoml
push
fcompl
lahf
std
mov
fisubrs
xchg
loopne
jbe
call
call
fldcw
fcompl
jmp
test
test
ljmp
xchg
and
push
into
and
or
cld
cld
push
call
std
not
call
push
movsb
xchg
lds
gs
pusha
fldenv
jno
push
loopne
fsubr
jg
fdivl
ljmp
add
cmpsb
fildll
mov
inc
push
sub
notl
push
sbb
jmp
stos
jns
ljmp
fldl2t
lea
add
add
mov
pop
xor
sahf
test
pop
loop
adc
test
loope
test
xchg
cmovle
inc
bound
loopne
sbb
add
add
aad
mov
push
cltd
add
mov
icebp
dec
sbb
fldl
adc
jmp
neg
sti
insl
es
sbb
jo
test
dec
loopne
inc
loop
jbe
cwtl
add
and
popf
call
gs
sbb
push
aad
sub
push
inc
lds
adc
pusha
and
sti
loope
dec
das
xchg
push
imul
aad
mov
stc
adc
aad
lea
stc
sbb
jecxz
add
je
add
add
fldcw
ror
enter
and
xchg
mov
mov
mov
inc
add
gs
cmp
inc
pop
cmp
sti
or
les
daa
mov
gs
call
inc
loope
pop
cmp
add
ret
lea
mov
add
add
fsubp
mov
ret
jmp
loopne
jp
add
gs
imul
mov
dec
pop
lods
mov
decl
xor
aam
out
popa
mov
push
stc
cmpb
or
ljmp
sti
or
and
xchg
or
xor
incl
add
add
mov
mov
fyl2x
stos
xor
mov
cwtl
pop
sbb
fs
pop
lret
sti
xor
xlat
lods
jmp
adc
es
mov
fsts
repnz
jb
jb
test
fwait
pop
fldl2t
push
pop
dec
push
in
popf
mov
pushf
insb
ret
jbe
pusha
aas
inc
ljmp
sahf
fcoms
add
sub
lea
fistps
add
mov
outsb
notl
lret
sarl
dec
cld
jmp
and
cmp
into
movl
dec
pop
inc
in
jb
inc
cmpsl
mov
std
push
bound
fwait
cmp
std
adc
jle
or
add
add
and
gs
flds
fidivrs
and
call
loop
je
fisubl
push
xchg
into
pop
jnp
push
out
adc
fisubrl
inc
cmpsl
icebp
aaa
subb
add
mov
cld
test
incl
mov
mov
ss
add
mov
repz
in
lea
fmuls
add
dec
sbbl
add
bound
cmp
decl
fidivrl
adc
bound
call
or
add
imul
xor
out
aas
add
add
cld
mov
add
add
enter
lret
adc
ret
daa
idivl
pop
jg
inc
movb
xchg
movl
ffreep
decl
out
pop
push
jmp
push
adc
aaa
int
cmp
and
int3
jge
mov
add
les
popa
sahf
ret
out
incl
es
testb
add
adc
cmp
push
and
adc
adc
aam
push
sbb
add
adc
out
aam
inc
dec
bound
fwait
fldl2t
cmp
fld
add
sbb
fisttpll
fwait
fldl2t
jle
ljmp
cld
std
es
fnstenv
push
or
add
in
mov
aad
cmpsb
lds
repz
jmp
insl
mov
fbld
xchg
test
push
cltd
leave
jno
jmp
dec
cmp
cmp
adc
xor
pop
stos
sbb
sub
out
sti
aam
call
jo
stos
fldenv
cltd
cmp
add
add
fmul
jne
inc
pop
jno
lcall
pop
xchg
lods
das
and
ds
popa
js
add
sbb
push
xor
fcoml
mov
sub
push
sbb
shll
insl
inc
dec
arpl
aad
mov
xor
sahf
jne
inc
lret
lcall
ds
outsl
xor
aas
fnstsw
das
mov
mov
insl
cwtl
mov
jg
das
call
popa
inc
jnp
add
sub
cmp
jb
pop
push
or
mov
adc
shlb
push
nop
jo
in
sub
mov
call
addr16
ds
jmp
ret
mov
mov
jle
mov
add
add
in
ret
jmp
jae
adc
pusha
sbb
es
mov
ret
jne
add
add
les
cs
mov
ret
std
sar
out
add
push
add
lods
andb
or
add
out
data16
pop
pop
inc
jmp
jmp
add
call
adc
fnstcw
add
add
fs
call
push
xor
adc
cmp
pop
gs
or
call
push
ret
andb
jmp
pushf
mov
stos
scas
ljmp
scas
jo
testl
aad
add
fxtract
sbb
dec
add
pop
inc
pusha
pop
movsl
cmc
js
jmp
cmc
mov
and
lea
in
test
popa
fsts
dec
adc
int3
add
sti
jmp
hlt
jmp
cmc
and
test
xchg
jg
dec
push
push
loope
je
xchg
push
hlt
loope,pt
push
cmc
adc
xor
das
mov
push
dec
and
dec
rcll
bswap
push
cmpsb
insl
mov
sub
pop
xor
mov
push
add
daa
adc
cmpb
mov
int3
jg
sti
flds
test
add
js
push
je
pop
std
pop
testb
push
insb
out
adc
addr16
add
je
cmp
jne
push
icebp
jmp
add
add
jo
mov
xor
sbb
add
imul
xchg
mov
add
in
test
or
inc
cmp
adc
bound
lock
dec
lods
mov
xor
sbb
push
adc
call
int
sub
lods
adc
aas
add
add
loope
aas
push
aaa
test
xor
jecxz
jno
lods
adc
mov
add
jle
and
add
sub
cli
popf
jns
bound
test
adc
aas
add
ret
fildl
loope
jmp
loopne
jmp
and
sti
loope
jmp
cmp
sbb
cmc
mov
les
les
fnstcw
jle
add
add
push
adc
jmp
insb
iret
pop
push
loop
fsts
inc
bound
cmpl
pop
jmp
add
bound
adc
in
add
adc
adc
cwtl
push
out
sbb
call
mov
sub
cwtl
xor
or
inc
call
jne
dec
and
add
data16
xchg
int3
shlb
cmc
adc
sbb
cld
xchg
xchg
push
and
add
rcr
jmp
cmp
out
fldenv
sub
imul
adc
cld
xchg
xchg
repnz
jge
notb
adc
adc
mov
cmc
adc
lods
inc
and
cmc
sub
cmp
inc
add
aad
rdpmc
lea
inc
pop
sbb
movsb
and
dec
cld
and
push
aam
rclb
aad
ljmp
stos
sbb
jecxz
int
or
ljmp
stos
sbb
fcmove
adc
aad
out
xchg
or
sbb
adc
clc
orb
mov
test
outsl
and
orb
mov
add
add
and
dec
mov
lret
aad
decl
dec
mov
jae
fsubrs
and
jecxz
mov
fadds
loope
aas
ret
push
mov
dec
inc
bound
daa
bound
xchg
sbb
incl
xchg
cld
mov
lods
jmp
repnz
test
pop
in
call
add
cli
popf
fnstsw
ret
imull
and
call
pop
mov
ficoms
outsl
orb
ljmp
jbe
sub
cld
pop
fyl2x
jg
dec
in
cmpsb
xchg
push
fstps
lahf
into
add
sbb
jmp
adc
and
bound
insl
les
fucompp
cmpsb
mov
jp
jle
cld
or
dec
cmpsb
nop
jmp
aam
loopne
push
and
fidivrl
into
ljmp
jp
mov
cmpsb
push
stc
sbb
pop
enter
dec
mulb
push
enter
scas
add
xor
aas
or
inc
inc
and
call
into
xor
sti
cmp
jne
add
or
add
add
dec
push
scas
pop
push
lock
fsin
add
mov
lods
pop
sub
xlat
add
mov
jb
pop
push
sub
popa
flds
push
sti
push
xor
sti
aam
les
mov
jmp
jne
loop
je
pop
push
enter
sti
push
fcomp
sti
aaa
sub
sti
call
test
pop
mov
and
push
fdivrp
jne
jl
adc
notb
call
sar
cmpl
ds
pop
add
call
pop
xchg
call
test
or
call
fdiv
sbb
es
std
jne
jge
or
testb
mov
test
loope
jl
jmp
jge
mov
jne
jl
adc
notb
incl
add
add
int
jne
jl
pop
bound
js
loope
loopne
xor
mov
sbb
call
test
mov
adc
aas
add
outsl
hlt
addl
jmp
lds
or
bound
mov
mov
scas
add
sar
subl
dec
and
shlb
cli
ja
jbe
incb
add
add
dec
add
bound
test
jno
xor
test
addr16
loope
jb
inc
sbb
loope
pusha
inc
xchg
fisttpll
inc
jecxz
call
sub
sbb
es
neg
sbb
mov
sbb
cmp
loop
jb
sahf
sbb
ljmp
add
add
ret
push
push
dec
bound
sbb
in
sbbl
pop
pusha
inc
movl
shr
cmpsb
xchg
xchg
sbb
insl
daa
push
flds
cli
sahf
inc
ds
jge
add
add
sti
out
sub
jmp
popa
cmp
in
cmp
push
imul
or
jmp
pop
inc
pusha
and
jb
pusha
and
xchg
les
paddsw
fldl
out
jp
lcall
mov
adcl
inc
pusha
sub
rol
mov
popf
jmp
test
add
scas
adc
pop
mov
pop
jb
cmc
add
mov
add
add
add
adc
fidivl
outsl
mov
outsb
gs
xchg
js
rorb
andl
movsb
adc
add
push
fsubrl
push
add
in
inc
dec
popf
cmc
add
cmp
das
push
movsl
imul
fcmovne
cmp
fidivl
outsl
iret
aad
je
insl
and
bound
mov
addl
add
add
mov
or
push
adc
adc
popa
es
push
fld
mulb
xor
adc
xor
xchg
insl
push
mov
std
push
nop
cmc
aas
bound
add
out
lret
pop
cwtl
mov
addl
out
add
mov
add
dec
mov
add
add
movsb
aas
add
jb
cmp
fnstcw
inc
bound
pop
mov
lahf
and
jb
hlt
xor
jb
xor
aam
inc
adc
xchg
rcrb
lods
in
in
mov
out
leave
mov
jg
add
jmp
or
dec
add
push
inc
add
add
cmpsb
fnstenv
add
push
int
fldenv
int
or
out
stc
pop
fnstenv
add
in
and
shr
sub
mov
add
jmp
add
in
addr16
sar
push
and
popa
jmp
push
fsts
divl
repnz
test
add
add
add
add
xchg
pop
stos
fsts
into
push
mov
pop
dec
xchg
data16
xor
ret
out
push
inc
jmp
fsubp
sti
xchg
jo
pop
lds
and
rolb
imul
dec
pop
add
fucomi
and
cmp
je
inc
push
and
push
cmp
adc
add
add
push
lret
push
mov
dec
or
dec
mov
sbbl
add
call
mov
mov
jb
pop
sub
mov
addr16
adc
jae
push
cmc
je
add
je
lret
bound
pop
jmp
mov
push
add
dec
sahf
jae
add
add
mov
cmpsl
adc
shlb
jge
incb
add
xor
bound
adc
dec
into
out
je
jmp
in
or
xlat
sbb
dec
into
out
je
call
cmp
out
add
add
decl
add
fisttpl
add
decb
xor
add
insb
mov
scas
cmp
xchg
inc
in
sbb
and
cmp
jmp
add
mov
dec
fsts
adc
icebp
add
sbb
push
enter
cmc
int
test
push
fnstenv
add
sbb
fisubl
test
jmp
lods
mov
ljmp
add
add
mov
add
leave
mov
xor
es
flds
pmulhw
cld
adc
sbb
or
push
push
jmp
jmp
flds
bound
adc
sub
fbld
mov
push
stc
mov
push
andb
jmp
and
flds
jmp
popa
fsts
test
fsincos
cmp
flds
jmp
insl
cmc
and
les
add
xor
rorl
mov
add
rclb
jecxz
adc
cld
pop
push
push
push
add
and
lret
jecxz
sbb
in
pop
ret
dec
mov
push
out
or
add
gs
iret
test
push
sar
movb
add
bound
mov
adc
push
inc
push
push
incl
call
inc
or
insl
loope
jnp
xchg
pop
mov
fildl
adc
nop
jne
add
pop
aaa
out
pop
lcall
sub
cltd
dec
out
movsb
dec
and
or
cmp
xor
cltd
push
mov
cmp
mov
and
bound
push
push
in
xor
adc
sub
std
aad
xor
pop
stos
sti
out
mov
jmp
xor
std
lods
repnz
je
dec
mov
imul
das
std
push
push
rorl
fsubrs
gs
in
shll
testl
sbb
jmp
daa
pop
mov
fldl2t
lea
inc
out
mov
xchg
cmp
mov
out
stos
push
xor
add
push
outsb
test
xchg
outsb
leave
lds
add
and
jmp
fwait
lret
jmp
add
mov
mov
std
shrl
mov
sub
lcall
lds
dec
or
in
add
aad
or
flds
jmp
mov
fildl
jmp
outsb
fs
vpsubusw
jmp
pop
mov
insl
push
in
sbb
cmpsl
sbb
mov
faddl
test
ja
pop
fldenv
xchg
adc
add
add
inc
es
or
adc
fs
and
aas
mov
add
cwtl
or
xchg
flds
add
xchg
ja
pop
lret
dec
xchg
add
xchg
fmul
jmp
mov
push
mov
push
and
pop
daa
mov
add
fiaddl
cmp
inc
add
sti
inc
push
sar
int
aas
and
enter
gs
addl
scas
xchg
push
movl
fiaddl
syscall
mulb
adc
pop
adc
pushl
fwait
cmp
and
jp
or
bound
je
call
pushl
nop
add
bound
ret
out
fidivrs
test
add
add
lea
outsb
sahf
rclb
cwtl
jp
insl
cmp
cmc
mov
hlt
gs
aaa
push
out
cmp
jmp
sar
fistpll
out
sar
adc
cmc
mov
jmp
jmp
and
bnd
in
cmc
jl
jmp
les
pop
jo
loope
add
add
add
stos
stos
push
cltd
fidivrl
fucompp
add
and
mov
fucomp
jmp
or
insl
fistps
jmp
loopne
mov
xchg
push
sbb
jle
sub
jo
les
add
and
xor
rcpps
jae
ljmp
in
cli
xchg
in
mov
das
cmp
pop
jae
pop
pop
lds
je
cmp
hlt
add
jnp
push
stc
aam
sbb
lds
add
les
mov
int3
mov
jns
cmp
jp
das
test
cltd
fucom
mov
ss
push
lds
lret
out
jmp
jg
data16
lock
movl
add
add
lods
mov
cmpsl
mov
or
xchg
push
adc
jmp
fnsave
and
out
inc
out
and
xlat
add
cmp
data16
out
push
outsl
icebp
mov
xor
or
jne
xor
call
cmp
jl
out
fiaddl
add
psubq
std
add
add
add
xor
add
inc
and
cmc
or
add
fadds
bound
push
fs
loop
fildl
dec
out
test
pop
xor
and
outsl
cmp
outsl
cmp
bound
or
cltd
or
bound
addb
lock
ja
stc
aas
bound
add
out
add
bound
cli
fildl
jmp
inc
inc
enter
xorb
inc
add
and
sub
xor
inc
jo,pt
neg
fdiv
xchg
fsubr
add
jmp
nop
jo
aam
bound
inc
pop
pop
callw
std
add
sub
or
xlat
xor
add
cmpsl
sarb
fs
andl
add
or
jmp
mov
subl
jno
inc
loope
add
xchg
call
jnp
cmc
adc
and
and
stc
pusha
flds
pop
aam
adc
fsubp
jmp
adc
sub
and
popa
flds
bound
flds
push
inc
cld
push
popa
fsts
ror
rcl
and
test
bound
in
flds
jne
test
jmp
inc
xor
jmp
data16
popa
insb
lcall
add
lods
add
or
dec
call
mov
add
sti
sub
and
bound
add
pop
mov
lret
out
mov
bound
cmpb
decl
mov
andb
add
mov
les
cmp
sbb
cmp
push
lea
mov
add
fucomi
sbbb
jle
cmp
add
xchg
shll
repnz
bound
int3
push
mov
ss
movsb
jecxz
xlat
cld
call
and
pushl
or
aaa
aam
add
sbb
fildl
pop
pusha
sar
not
or
shlb
mov
pop
andb
push
out
jecxz
adc
decl
jne
addb
add
push
movsb
aaa
or
bound
call
sbbl
les
incl
insl
push
push
adc
adc
jg
aad
jg
cmc
adc
adc
jmp
out
rcll
fxch
test
arpl
ljmp
jg
lock
inc
adc
jmp
add
pop
movsb
push
xor
in
jmp
adc
mov
fcoms
iret
lods
or
jno
out
bound
insl
xchg
pop
cmpsl
push
xchg
bound
call
icebp
movl
sbb
and
dec
lret
and
gs
inc
in
jne
xchg
rclb
fdiv
scas
mov
add
fisubrl
fcomp
add
popa
bound
jno
inc
add
sbb
and
cwtl
popa
fldenv
push
cmc
push
pusha
sub
jge
lock
aam
movb
and
push
inc
sbb
fidivrs
fsubs
or
mov
pop
pop
mov
mov
aas
add
add
add
xor
dec
in
ljmpw
cld
bound
pop
cs
and
incl
enter
and
cs
and
enter
int
add
mov
push
decl
stc
mov
bound
jnp
or
or
xor
orb
mov
das
call
bound
cmp
jle
mov
pop
cmp
jmp
lods
sbb
push
pop
cld
lds
and
jl
inc
cld
lret
into
fs
mov
pushf
pop
aaa
push
xchg
lret
jb
xor
cmpb
mov
fistpll
aaa
popf
lea
inc
inc
pushf
xor
mov
decl
insl
sarb
inc
pop
cmp
or
jecxz
jmp
outsb
cmp
insl
inc
xchg
cmp
cmc
cmp
dec
es
jmp
ja
add
mov
in
repz
bound
jg
sub
clc
mov
into
sbb
sub
and
ficoml
call
filds
out
sub
sub
outsb
inc
jle
inc
adc
mov
inc
inc
and
ror
and
jbe
cmc
jns
fsts
out
dec
enter
fldenv
jns
mov
jge
dec
push
cmpsl
jmp
pop
jmp
sbb
test
xor
cmpsb
je
sub
call
add
xchg
std
and
mov
dec
rcl
add
jmp
jo
mov
call
mov
mov
loopne
jmp
popf
faddl
jmp
sbb
faddl
pushl
pop
push
inc
dec
daa
mov
cmp
js
andl
addr16
pop
or
mov
or
xchg
add
add
adc
pop
mov
call
and
xor
xchg
cli
sti
or
call
sbb
add
mov
adc
jmp
shr
inc
or
pop
push
pop
mov
add
mov
int
inc
mov
inc
and
xor
lcall
xorb
into
movb
add
mov
mov
adc
fdiv
cmp
lea
mov
jns
jle
xor
push
mov
dec
mov
decl
or
or
jle
in
int
mov
xlat
mov
sub
jp
push
dec
mov
lret
out
cld
mov
cmp
jp
add
icebp
das
xor
xchg
rcll
add
add
fxch
xor
mov
cmp
lahf
mov
stc
cmpsb
outsb
mov
bound
fistps
std
add
add
mov
lret
pop
les
xchg
add
ret
jmp
mov
sub
add
rcll
in
jmp
in
mov
and
test
jmp
mov
mov
add
add
xor
mov
push
add
rcrb
ficoml
jmp
xor
sub
jp
push
pop
int
mov
fisubl
mov
xchg
mov
sti
call
jb
sti
pop
inc
icebp
jg
fisubs
lret
test
pushf
or
ret
rcr
sti
scas
xor
in
push
rclb
add
add
pop
notb
ljmp
jmp
xchg
movsl
push
pop
mov
add
and
test
pop
lret
jg
fidivs
cld
push
push
jecxz
push
jmp
sbb
jmp
and
call
add
loop
jge
pop
clc
dec
mov
mov
lahf
imul
xor
hlt
jnp
lds
add
add
adc
mov
rolb
ret
pop
out
or
add
jg
icebp
sub
outsl
and
xor
leave
pop
fimuls
imul
int
bound
jmp
lahf
pop
inc
mov
pushl
cwtl
call
and
gs
addl
add
mov
jl
pop
mov
mov
rcr
and
repnz
lea
fmuls
out
xor
sbb
sub
bound
jmp
xchg
wbinvd
and
pop
and
or
stc
ljmp
mov
test
mov
call
add
outsb
push
mov
pop
sub
add
daa
ja
lods
aas
and
negl
imul
xor
mov
daa
scas
or
xor
test
or
std
jno
add
push
and
mov
add
popa
sub
insb
adcl
push
test
sub
or
mov
add
add
std
fst
into
lret
add
sbb
fs
mov
sbb
pusha
flds
ret
jno
inc
or
loop
pop
fbld
cmc
xor
sub
bound
cmc
xor
popa
addr16
inc
lds
ljmp
std
xor
ret
aad
jmp
jp
jg
loop
ffreep
or
add
add
cli
lods
loop
xchg
adc
cmp
cmpb
dec
add
fildl
mov
sbb
jecxz
lods
or
faddl
mov
clc
sbb
fs
jnp
call
add
pop
and
adc
push
loope
mov
rorb
stos
pop
pop
cld
mov
stc
jne
add
add
into
mov
mov
int
scas
add
cmp
cmp
pop
lcall
cmp
cld
push
mov
sti
fldt
pop
sti
decl
mov
inc
daa
in
bound
jmp
in
xor
cmc
sub
gs
xorb
jnp
fdecstp
insb
bound
jl
lods
push
stc
and
dec
imul
add
add
aaa
shr
xchg
insb
push
pop
mov
call
iret
scas
inc
inc
xchg
push
mov
mov
clc
arpl
sbb
xchg
cmpsl
jp
sarb
or
cmp
cld
insb
jp
test
inc
cld
xchg
xchg
jle
add
outsl
and
sbb
sbb
sahf
sarb
push
outsl
jle
add
add
clc
ret
lods
push
pop
mov
xchg
jge
sub
bound
jg
cltd
mov
fldenv
fnstenv
xchg
and
mov
sbb
test
jle
movb
les
mov
jne
ret
sbb
xor
orl
add
jg
and
and
add
push
jne
sub
pop
arpl
add
stos
push
push
jb
pop
in
loope
dec
jmp
and
push
sbb
xlat
mov
sub
in
call
popf
imul
mov
pushf
mov
out
test
sub
sub
xchg
in
call
push
sbb
insb
mov
add
add
add
stc
xor
test
adc
add
pusha
int3
sbb
aad
test
fadds
add
sbb
dec
lret
xor
fadds
inc
mov
pusha
mov
and
push
mov
mov
scas
sti
addr16
add
and
sbb
mov
sbb
add
testb
incb
add
add
mov
lret
mov
fadds
add
mov
and
rcl
pop
jg
outsl
jne
xorl
outsl
stos
cmovo
add
test
add
xchg
adc
cwtl
testb
daa
adc
push
in
and
leave
and
mov
dec
into
in
ljmp
ss
jae
aaa
shll
add
add
add
push
stc
and
stc
and
mov
jle
aam
outsb
jns
pop
cmp
and
push
or
ljmp
jmp
sbb
mov
jnp
fyl2xp1
mov
mov
jmp
fwait
pop
xlat
inc
lds
adc
sbb
fcompl
mov
lcall
adc
add
add
lcall
mov
fldenv
push
je
cmpsb
lcall
bound
pop
outsb
cli
mov
fsubs
fcoms
fistpl
ljmp
lcall
lods
add
test
mov
push
dec
leave
mov
imul
and
add
add
and
pop
lahf
or
fbld
mov
cltd
mov
push
pop
frstor
adc
add
loop
inc
jmp
mov
pop
add
and
pop
push
shlb
lcall
popa
push
jae
call
cmc
add
and
add
fldl
mov
add
add
mov
arpl
add
cmp
inc
and
fdivl
and
iret
movsb
fldl
mov
lods
dec
push
orb
xor
push
mov
sti
cmp
jb
mov
pop
and
fmull
or
clc
adc
cs
add
pop
in
sbb
std
mov
inc
addl
jo
add
add
clc
adc
pop
push
jle
mul
mov
xchg
es
mov
cmp
addr16
jmp
insl
fstps
sbb
pop
inc
jae
fincstp
or
pushf
xchg
xchg
mov
cmp
and
adc
cmp
mov
ror
imul
loop
bound
jbe
dec
out
inc
std
inc
jae
add
add
in
movl
pusha
xchg
aas
xchg
cmpl
call
orb
std
fdivr
adc
aaa
push
aad
cmpsl
and
cmp
stos
imul
ljmp
pop
aad
xchg
sub
mov
and
xlat
inc
in
xchg
addl
test
faddl
jmp
pop
mov
xchg
jmp
add
je
inc
cmc
mov
and
push
xor
fucomi
andb
dec
add
adc
jmp
cmp
addr16
loop
or
xchg
sti
jmp
fcmovu
insl
jmp
popa
flds
insb
pop
fs
sbb
and
mov
xor
pushaw
add
mov
and
data16
cmp
int3
std
mov
xchg
add
popa
decl
mov
mov
int3
sti
hlt
sbb
mov
add
int
add
mov
std
ss
push
push
mov
adc
jne
add
add
or
mov
fsqrt
ret
lret
adc
ud1
and
aas
and
flds
add
popa
adc
lea
push
mov
lret
push
dec
sti
call
jmp
or
mov
adc
jns
popa
enter
std
sbb
pop
jg
test
jl
bound
imul
or
mov
stos
sbb
sbb
inc
mov
mov
sti
cld
scas
cmpsb
repz
push
les
push
std
jmp
dec
test
push
jmp
nop
outsb
push
push
ljmp
xchg
dec
inc
stos
push
shl
inc
outsl
xor
decl
mov
add
add
dec
pop
adcb
cmp
mov
fdivl
push
fstps
adc
push
test
jo
xchg
push
jge
mov
or
and
mov
gs
xchg
jmp
xchg
cmp
inc
outsb
outsl
mov
fnsave
das
pop
push
dec
add
cltd
pusha
enter
mov
add
add
mov
dec
sub
add
and
pop
hlt
cld
jmp
leave
ficompl
jle
pop
mov
arpl
fldt
in
pop
or
ljmp
lds
fs
cwtl
lock
or
xchg
dec
xchg
sti
insb
mov
jge
sub
add
and
pop
adc
sti
out
stos
jne
out
std
into
xchg
out
sub
mov
sar
jae
shrb
popa
gs
std
cmpsb
mov
add
mov
flds
push
push
scas
push
jmp
shll
iret
mov
cli
push
sbb
test
fldl
add
cwtl
pop
adc
add
add
es
jnp
mov
decl
flds
pop
lds
fistpll
cli
inc
adc
add
sbbb
cmp
sbb
sub
adc
test
sti
xchg
xorl
faddl
push
ds
pop
sbb
dec
test
cmpb
lcall
inc
cmp
xchg
cmc
jns
add
in
and
bound
mov
movsl
jg
mov
xchg
pop
repnz
ss
sti
ret
and
adcl
std
aas
jge
cmc
jo
adc
inc
sub
ret
and
cmp
and
cmp
and
shl
push
push
imul
imul
lret
call
fdivs
in
out
jmp
subb
fstpl
push
call
xchg
push
mov
pop
dec
loop
push
sbb
loope
sub
call
jns
xor
test
sub
shll
addl
mov
mov
jp
arpl
outsb
jo
test
pop
pop
xchg
sub
fisubl
sbb
push
aad
ret
in
add
scas
lea
xchg
push
mov
nop
sub
xchg
lea
bound
pop
in
cmc
addr16
inc
or
outsb
mov
fwait
jbe
dec
add
xchg
fiaddl
adc
les
add
mov
mov
les
add
mov
mov
xor
xchg
es
or
aaa
and
sub
and
das
add
hlt
jle
lahf
repnz
inc
sbb
sarb
mov
cld
push
sub
xlat
je
cmp
pushl
pop
repz
jle
incb
add
add
pop
stc
sbb
fwait
roll
dec
and
or
adc
cwtl
decl
aam
add
mov
adc
jecxz
inc
aaa
adc
mov
adcl
cmp
fadds
add
call
adc
sub
outsl
jae
gs
sar
jae
aas
add
jmp
jecxz
sti
add
rclb
sti
push
loope
or
jmp
sub
mov
inc
cmp
bound
add
jne
icebp
fists
adc
arpl
xchg
push
cmp
idivl
out
je
cld
loope
add
jae
inc
push
addr16
fldlg2
xchg
pusha
and
add
and
adc
mov
and
pop
rolb
lcall
and
adc
pusha
scas
pop
stos
test
cmp
mov
mov
ficoms
andl
rcl
data16
jg
xchg
mov
add
lock
ret
sub
bound
out
lea
sti
adc
pop
fisttpll
mov
sub
push
bound
dec
or
mov
sub
push
pop
aam
out
mov
push
mov
jmp
xchg
pop
mov
jbe
rolb
leave
add
call
mov
cwtl
add
in
and
add
xor
or
xor
pusha
push
call
sub
pop
inc
fstl
lea
add
adc
decl
popf
adc
push
jo
xor
push
mov
out
cld
adc
test
add
mov
inc
or
add
and
adc
push
adc
xchg
lcall
clc
jle
add
sbb
call
jb
lock
incl
pop
cmpsl
sti
push
xor
inc
add
sbb
mov
cld
dec
push
adc
or
clc
jl
dec
pop
or
mov
jle
inc
popf
jmp
jb
cld
push
mov
or
call
push
add
sub
sahf
adc
rclb
into
mov
pop
or
jo
add
mov
mov
pop
ds
jno
xorb
std
or
jp
leave
lcall
aas
jae
addr16
data16
and
and
cmpl
stc
ret
and
or
int
movsb
repz
mov
pop
and
repz
mov
sub
cwtl
cmp
fucomip
sub
iret
into
in
stc
adc
fnstcw
addr16
cmp
sti
inc
ret
ficompl
jno
popf
xchg
rcll
leave
fistpl
outsb
imul
push
out
into
in
popa
addr16
mov
adc
ljmp
sub
add
adc
xchg
push
in
ficoms
push
movsl
push
test
test
cmp
pushl
push
jb
fisubl
mov
ficompl
adc
aad
test
test
insb
and
and
callw
sbb
adc
xlat
sub
sbb
xchg
ficoms
jb
push
sub
pop
arpl
and
add
xlat
push
add
cmc
nop
sub
mov
sti
sbbb
add
dec
and
rorl
test
inc
push
fiadds
cmp
xchg
push
mov
mov
shlb
add
fidivl
in
push
pop
adc
fldl
push
push
inc
and
lods
cld
ss
mov
shlb
add
flds
je
pop
ja
addl
sbb
dec
adc
outsl
mov
xor
sti
add
inc
andb
mov
and
shlb
ja
and
mov
lahf
bound
imul
movsb
shll
jnp
mov
inc
inc
jno
in
jmp
and
add
add
les
add
mov
jp
aad
orb
add
fdivr
mov
imul
mov
cmpsb
fcos
and
in
dec
incl
fldenv
ja
test
and
insb
inc
lock
pop
inc
mov
pushf
fldl
sub
fs
xchg
mov
xor
cld
filds
add
add
ljmp
pop
jmp
loop
loop
loop
fisubs
stc
add
cli
cmc
add
and
outsb
arpl
rorl
mov
push
repz
stos
arpl
cwtl
sbb
and
nop
xchg
arpl
and
inc
xor
xchg
add
dec
pop
mov
push
icebp
jb
fldt
xor
add
add
xchg
test
ja
jmp
ret
sub
nop
jp
cmp
test
push
pop
jle
popa
das
jle
shr
popa
pop
shlb
inc
add
mov
push
inc
icebp
lods
push
sbb
jno
mov
in
repnz
cmc
sbb
sti
mov
in
adc
mov
add
cld
jne
divl
je
in
adc
ret
lods
mov
push
addr16
inc
jae
push
cwtl
sub
fsts
mov
outsb
call
cmp
xor
inc
or
cld
jae
push
add
push
rcrb
ret
aad
in
testl
sub
hlt
dec
push
add
add
inc
imul
mov
adc
jo
mov
movsb
add
pop
mov
pop
call
dec
testl
xchg
mov
and
jbe
shrl
jb
push
cmp
xor
jb
inc
aas
pop
lods
pop
mov
add
lahf
inc
mov
xchg
pand
clc
scas
arpl
mov
fstps
rolb
jmp
fld
inc
push
adc
in
popf
pop
mov
xor
outsl
push
test
cltd
add
test
repz
or
test
outsb
push
jge
scas
add
xor
push
add
in
scas
sbb
push
sbb
insb
push
mov
push
jno
xor
outsl
xchg
decb
mov
add
dec
fucompp
mov
push
test
push
push
sahf
insb
sub
add
and
adc
fadds
push
aam
jb
mov
mov
inc
lcall
frstor
jmp
inc
sub
fstpl
sti
gs
int
arpl
add
and
add
popa
or
repnz
lret
ljmp
mov
lea
jmp
sti
jle
lods
inc
in
subl
or
test
mov
test
daa
mov
add
outsl
jge
dec
xchg
push
aas
and
add
add
inc
pop
and
mov
sbb
xchg
ret
add
mov
outsb
add
repnz
push
lock
adcb
jmp
or
cmp
or
cmp
enter
xor
repnz
pop
cmp
pop
ja
pminub
xchg
xchg
or
pop
dec
dec
adc
aad
fsubrs
push
out
pop
test
sti
dec
mov
and
repz
cld
push
hlt
mov
mov
das
rorb
lods
fisttpll
mov
add
out
fdivs
sbb
add
xor
hlt
mov
mov
andl
add
mov
pop
push
mov
repnz
jae
divl
mov
xchg
pop
jmp
fldt
mov
scas
imul
loop
out
jns
popf
fldcw
out
fmulp
cmp
mov
fdivrl
sbb
xchg
lods
outsl
out
mov
sub
pop
adc
sbb
adc
fsubl
sbb
push
pusha
mov
aam
inc
fucomi
add
add
add
sub
pop
pop
hlt
and
or
fwait
insl
fnstcw
ret
sbb
cmpl
icebp
jmp
push
and
lods
popa
jle
xchg
idivl
sti
hlt
jne
inc
jmp
data16
push
aam
jmp
and
mov
clc
inc
jmp
mov
add
add
cli
inc
jmp
mov
clc
inc
jmp
movsl
jnp
adc
clc
inc
jmp
mov
lock
push
pop
push
lods
popa
jl
icebp
ss
in
push
popa
push
mov
add
dec
ret
call
mov
cld
pop
dec
push
mov
aad
leave
clc
push
out
push
dec
rorl
cmp
sbb
mov
adc
inc
pop
and
add
mov
push
aaa
lds
push
pop
lds
aas
add
xchg
pop
adc
add
cmp
cmp
add
addr16
push
fimuls
fwait
mov
cmp
xor
inc
sbb
sahf
cld
jmp
mov
out
push
test
incl
add
add
jmp
inc
bound
mov
and
inc
sbb
aad
pop
push
es
mov
jo
sahf
out
mov
pushl
lea
scas
insb
cmp
xor
xchg
hlt
dec
or
xor
add
sbb
jo
xchg
bound
mov
and
aas
bound
data16
mov
addr16
cmc
mov
insl
pop
adc
add
add
inc
call
mov
js
pop
fisubrl
push
push
pop
insb
add
fnstcw
and
add
insb
add
lock
ljmp
mov
sub
dec
jae
mov
testl
out
dec
rcrb
ljmp
sbb
cwtl
cmp
sub
in
push
pop
into
test
ret
movsl
pop
jb
push
pop
jmp
outsb
dec
fsubrl
call
insb
mov
mov
insb
lds
or
mov
sti
mul
lahf
sti
add
mov
push
in
in
popa
fs
jmp
mov
jmp
mov
xchg
inc
jmp
cld
xchg
inc
jmp
xchg
inc
jmp
sbb
inc
jmp
lods
jne
rorl
add
sbb
cli
mov
paddusb
fwait
sti
xor
shlb
pushf
cli
call
sbbb
adc
fmull
fwait
sti
ret
xchg
inc
lret
lock
paddusb
lcall
bndldx
dec
arpl
xchg
btr
repz
push
idivb
jmp
pshufw
aad
ret
std
hlt
push
mov
into
and
adc
sbb
inc
daa
xadd
mov
xchg
and
out
orl
out
out
push
cld
out
rolb
add
add
add
or
inc
mov
push
scas
push
cmc
mov
adc
data16
fldl
inc
jae
jmp
subb
add
lret
cmpsb
rcrb
adc
add
mov
inc
or
outsl
js
aas
bound
imul
dec
pushf
icebp
aas
cli
inc
pop
or
cld
ja
mov
xchg
fldcw
mov
montmul
cmpsb
add
iret
add
jne
xchg
push
push
mov
daa
scas
ljmp
jg
sbb
jle
in
notl
loop
jmp
push
push
cmp
sub
mov
push
cmp
stos
test
jmp
aad
add
adc
cmp
mov
jge
sub
imul
cmpsl
adc
add
popf
in
inc
fldenv
inc
leave
xlat
iret
jg
add
dec
mov
popa
pusha
inc
add
jge
inc
jmp
add
inc
add
jns
inc
jmp
mov
jb
push
cld
cld
or
inc
jmp
repz
lahf
mov
jae
fldenv
adc
fs
movsb
sti
mov
stos
shrb
test
mov
lcall
das
pop
je
jmp
fcomi
cmp
repnz
add
cmp
addps
sti
addb
push
mov
xlat
repnz
addr16
jae
hlt
int
dec
xor
call
xlat
push
mov
jge
or
push
rolb
add
add
sti
jae
pop
jbe
in
jno
adc
xlat
mov
push
aam
mov
cmc
cmp
lea
push
push
xor
add
sub
mov
cld
adc
adc
roll
xor
ret
aas
stos
shl
cld
push
jp
xchg
push
les
dec
insl
xor
mov
das
adc
jnp
divl
add
add
dec
outsb
pop
stos
clc
xorl
andb
add
fdivrs
lds
loope
sbb
das
aas
rcrb
pop
loope
xor
mov
pusha
sbb
dec
imul
pop
pushl
xorb
cld
ret
out
xor
inc
jae
sub
cwtl
adc
gs
push
push
xchg
test
sti
int3
xchg
rolb
add
add
jb
jg
jne
pop
sbb
aad
mov
or
inc
orb
mov
mov
mov
push
push
pop
cmc
sub
ficomps
pop
mov
in
jo
inc
jo
jg
dec
fsts
ret
int
bnd
imul
push
push
or
ret
lods
pop
movsl
jmp
push
add
cmp
lret
push
push
jae
popa
icebp
addl
insl
add
popa
data16
ja
pop
adc
bound
rolb
leave
xchg
lds
test
fsqrt
sub
repz
popa
popa
push
call
mov
and
jl
add
sub
and
call
addl
add
int
mov
sbb
push
jne
fldl
pop
add
insb
sti
adcb
xor
ja
add
shrb
mov
push
jnp
std
mov
add
jns
rorb
popf
add
or
andl
sbb
out
repz
int
mov
fsubr
subl
sbb
cmp
add
add
or
mov
sbb
adcb
push
pop
mov
or
xor
outsb
lods
aad
je
rcll
and
into
addl
mov
inc
inc
test
pusha
mov
xchg
cld
adc
pop
add
and
jl
cmp
push
xchg
sti
sbb
mov
sbb
pop
and
scas
xchg
pop
aaa
fdivr
jb
add
add
mov
mov
stc
mov
and
ret
jmp
and
lret
or
ds
sti
add
in
jg
cmp
jg
mov
xlat
mov
add
xchg
and
mov
aad
xchg
fsubr
add
push
in
outsb
push
dec
add
fnstenv
jae
insl
jmp
add
mov
std
loopne
jmp
sub
fmuls
jmp
out
push
dec
fcmovu
sbb
ret
sbb
pop
rolb
bnd
push
fs
fxch
push
inc
in
in
xchg
sbbb
fldenv
pop
out
js
mov
fstp
sub
mov
jp
jne
mulb
roll
add
mov
add
in
jne
sub
and
pusha
aad
and
movsl
mov
add
popa
bound
insl
inc
lds
std
mul
cmp
jle
stos
rclb
addps
sarb
mov
adc
jmp
gs
xor
mov
mov
add
jmp
arpl
mov
adc
mov
outsl
xor
test
dec
push
loopne
pop
push
mov
sub
lret
dec
out
cli
mov
jmp
adc
cltd
pop
sub
xchg
decl
or
and
or
jp
aas
and
lret
mov
xor
adc
jecxz
mov
lret
inc
add
sub
dec
pop
sub
add
mov
ret
aad
push
adc
aaa
or
push
or
lods
rorb
outsl
jne
cmp
cmp
hlt
add
or
or
aaa
jne
cmp
aam
mov
xor
xchg
aad
mov
jo,pt
inc
inc
cwtl
sbb
xchg
and
add
add
gs
arpl
std
inc
repz
xor
mov
sbb
roll
lcall
outsb
aas
call
jmp
imul
add
push
xchg
mov
js
aad
dec
cs
jg
in
xchg
int3
or
inc
push
aad
call
jmp
jl
add
sahf
imul
push
dec
add
fsts
jge
mov
jle
out
out
jl
mov
pop
dec
fmull
rolb
sbb
sahf
fcmovu
mov
arpl
xlat
loopne
rcr
nop
push
push
pop
mov
inc
dec
loope
mov
ljmp
add
pop
lahf
ljmp
dec
sqrtps
cmc
clc
adc
gs
pop
paddb
adc
inc
jmp
fistps
fs
adc
stc
and
and
shlb
sbb
aam
xchg
sbbl
loope
addr16
xchg
stos
rcrb
subb
push
in
push
fmuls
push
sbb
xchg
push
jecxz
push
adc
test
cwtl
inc
mov
add
add
adc
push
pmulhw
mov
out
aaa
adc
sbb
inc
iret
xchg
pop
push
in
sub
cmp
cmp
mov
ds
test
mov
push
xchg
xchg
add
mov
sti
call
daa
pop
mov
inc
add
ficomps
leave
fs
push
lock
lock
fdivr
jne
in
call
mov
add
add
jmp
mov
dec
xchg
mov
pop
sub
icebp
push
xlat
cmp
or
jno
jae
cwtl
jbe
fstpt
adc
incl
aad
inc
or
mov
mov
shrb
mov
ret
stc
jo
jmp
sbb
adc
mov
std
cmp
cli
lds
add
add
pushf
repz
daa
sti
mov
pop
push
daa
add
dec
jge
sti
sub
fsts
cmp
jg
in
jp
mov
je
arpl
sti
bound
hlt
lods
push
in
sbb
lret
cltd
in
and
pop
test
jb
jne
ficompl
leave
shrb
fcmovnb
push
push
and
adc
pop
and
movsb
mov
lret
sbb
push
fldenv
pop
push
and
faddl
lock
jno
add
jle
mov
cmpsl
mov
xchg
flds
int
add
pusha
flds
pop
and
push
mov
push
gs
movsb
gs
jb
push
repnz
lea
jl
repnz
sti
out
out
push
mov
out
push
mov
adc
and
insb
out
sti
jmp
mov
out
lret
xchg
pop
mov
jl
pop
sarb
xchg
es
fs
jmp
cmp
fildll
adc
dec
xchg
dec
cmp
adc
and
flds
add
add
dec
fmuls
pop
adc
push
jmp
loopne
inc
or
repz
adc
cmp
insl
jmp
add
xchg
jle
xchg
jle
test
mov
xor
testb
mov
xchg
xchg
mov
addb
dec
push
add
mov
add
xlat
mov
ljmp
lea
jmp
pop
bound
add
bound
or
mov
loopne
pop
vandps
fimuls
pop
out
mov
xor
out
add
out
cmp
mov
outsb
xchg
cmpsl
das
ja
call
mov
es
hlt
inc
jb
out
out
cmp
pushl
sub
jmp
je
mov
jo
mov
xchg
incl
add
add
inc
xor
inc
rcll
in
jecxz
icebp
lea
or
sarl
or
mov
in
out
lods
pusha
add
mov
out
fsub
jnp
xchg
nop
mov
push
mov
iret
in
popa
pop
xchg
or
movl
fnstcw
add
sub
loopne
pop
adc
push
sub
sarl
jmp
hlt
stos
adc
xchg
and
add
ss
add
in
loopne
mov
insb
js
ljmp
xchg
add
pusha
sti
gs
in
ds
insl
or
cld
aam
rolb
jle
psubsw
cld
fsub
incl
lret
test
mov
flds
adc
or
pop
dec
divb
adc
and
push
lret
data16
add
add
mov
cld
decl
nop
or
mov
adc
mov
mov
aas
bound
call
cmp
sti
pushl
rolb
imul
xchg
loop
or
in
ljmp
add
fucomi
loope
std
lea
inc
cli
mov
sar
decl
je
loope
xchg
dec
push
insl
mov
bound
push
and
mov
es
je
repz
not
out
movb
add
add
rolb
in
enter
jbe
mov
mov
incl
daa
fdivr
jo
andb
cwtl
mov
jno
mov
call
jo
mov
aam
add
xchg
mov
in
call
dec
fstpl
adc
jo
addl
cmp
cmpb
add
jmp
add
cltd
push
fidivs
dec
cmp
add
rcll
xlat
jmp
ret
jne
mov
aas
xor
enter
add
jmp
pop
test
or
sbbl
add
push
add
shr
add
int3
add
add
clc
jge
lods
add
xchg
add
pop
jmp
dec
lds
ds
test
imul
aam
jmp
stos
loope
sub
mov
imul
cmp
jae
test
imul
mov
push
mov
insl
mov
push
sar
stos
shlb
test
push
bound
in
cmp
add
in
xor
pop
mov
push
ret
jmp
mov
cmp
call
push
pop
sti
jmp
or
ds
fildl
inc
add
sbb
xor
push
in
mov
dec
push
mov
mov
popf
cld
adc
sbb
cwtl
mov
scas
push
sub
fcompl
adc
rolb
jne
movsl
fcomps
mov
cwtl
sti
std
cmp
ret
adc
mov
pop
clc
add
cmp
leave
mov
cli
ljmp
into
push
sub
dec
pop
dec
jmp
test
adc
jb
mov
xchg
cltd
adc
arpl
out
fistps
mov
out
mov
out
cmp
clc
jne
imul
jecxz
mov
jns
int
xchg
cmp
in
adc
jg
incl
rorl
mov
into
xor
lods
add
mov
mov
in
fidivrs
push
cmpsl
insb
rol
mov
add
add
sbb
test
fdivrs
adc
shll
pop
hlt
xlat
fs
or
mov
adc
push
sti
push
dec
mov
insl
std
mov
or
pop
mov
leave
mov
fadd
insb
sbb
shll
int
mov
ret
je
sbb
shl
mov
adc
test
pushl
cltd
dec
into
call
test
mov
flds
jmp
mov
mov
inc
add
insl
pop
adc
fs
out
pop
or
mov
std
sbb
and
sub
movsb
mov
mov
stos
xchg
add
ret
sti
mov
push
cltd
add
test
add
push
mov
mov
sti
add
inc
or
fdivrs
dec
or
outsb
insb
push
and
test
sahf
inc
add
gs
lods
mov
adc
adc
bound
outsl
clc
mov
sub
cmp
jg
das
push
cld
movsb
out
adc
jg
das
inc
mov
lcall
mov
decl
or
xlat
mov
add
faddl
jae
int
ljmp
add
dec
pop
push
add
dec
out
jle
lcall
pop
adc
stc
inc
push
jmp
idiv
addr16
mov
mov
fadds
iret
adc
add
add
inc
cmpb
adc
mov
stos
cmpb
inc
add
dec
cltd
rcll
in
loopne
xchg
sub
lods
mov
loope
mov
mov
sbb
dec
sbb
cltd
jmp
rolb
add
je
inc
jmp
lods
filds
movsb
cmp
inc
movsl
fbstp
addl
adc
aam
push
faddl
push
cltd
jmp
std
or
pop
mov
ret
stc
mov
std
cmc
sarl
or
add
inc
xlat
ss
cld
aad
nop
jge
ret
push
push
mov
sar
stc
ss
bound
repnz
mov
sbb
adc
inc
push
mov
push
pop
into
fsubrl
push
cltd
dec
shll
pop
in
out
cwtl
or
xchg
in
push
sti
push
out
sub
lock
jl
pusha
push
std
ja
or
cmc
fucomp
iret
push
push
sti
jb
push
xchg
ds
inc
jmp
sub
or
loop
pop
sbb
push
mov
out
sti
and
mov
add
add
xor
gs
push
sti
add
push
mov
sub
inc
cmp
push
call
aas
and
xorl
pushl
xor
test
fiadds
sahf
fiadds
divl
push
add
daa
cmpb
shlb
pop
adc
cwtl
imul
aas
and
es
incl
add
add
adc
or
xchg
pop
sbb
aas
and
sub
push
hlt
scas
sbb
bound
add
bound
ss
sbb
iret
push
mov
addl
add
incl
sti
mov
jmp
mov
xchg
or
jb
incl
push
push
adc
add
add
es
std
xchg
mov
cmpb
add
lea
inc
bound
mov
cmc
inc
adc
jnp
loope
or
into
f2xm1
xor
fstpl
add
adc
mov
push
mov
ret
and
lods
push
mov
sbb
pop
and
jmp
add
xchg
aam
fnstenv
sbb
jmp
popf
lcall
cltd
jmp
add
popa
fsts
fldl2t
and
jecxz
mov
std
ret
jge
fs
ja
ret
rorl
flds
fs
jmp
fsts
pop
mov
adc
mov
popa
cld
jle
add
add
or
popa
flds
dec
sbb
sub
push
bound
in
fldcw
add
std
xor
jmp
jle
sti
gs
test
popa
flds
pop
ljmp
xor
divb
cltd
add
cld
ficoms
push
movsl
dec
push
add
mov
les
add
add
push
repz
test
push
out
dec
mov
jmp
in
outsb
clc
in
mov
iret
shr
sub
sti
jg
pop
movq
sti
iret
jle
xchg
or
push
and
mov
iret
jle
mov
fildl
add
hlt
dec
popa
mov
push
repz
jbe
add
faddl
lea
movsb
sub
enter
incb
add
add
xchg
add
add
add
inc
stos
lods
add
gs
test
push
aas
dec
leave
ret
hlt
insb
dec
enter
shrb
cld
ffreep
outsl
cli
and
jle
jecxz
inc
cli
mov
inc
sbb
scas
inc
call
out
xchg
xor
jo
call
fmuls
adc
jecxz
f2xm1
jl
cld
cmp
jmp
ss
lret
imul
clc
xchg
inc
pushl
mov
into
add
mov
inc
jmp
ljmp
call
outsb
inc
adc
cmp
xchg
adcl
cmc
and
pusha
fstpl
mov
rcr
das
ljmp
ret
in
pop
jae
in
jmp
add
out
pusha
lods
out
pusha
lods
out
pusha
test
push
bound
cmp
rorl
loop
and
mov
inc
or
push
flds
inc
inc
dec
add
cmp
add
popf
cli
fs
flds
mov
in
adc
pop
rcrb
inc
lds
add
add
dec
adc
insb
mov
flds
jbe
stc
xor
sbb
dec
xchg
inc
ss
sub
pop
inc
add
data16
pop
pop
mov
movsl
popf
add
jmp
add
in
js,pn
adc
adc
push
mov
and
add
add
mov
sub
pushf
sub
decb
jecxz
cmp
call
outsb
dec
flds
mov
das
test
xchg
sub
xor
inc
and
sub
inc
jle
push
cmp
dec
cmp
xchg
dec
popa
mov
push
std
dec
xor
popf
sbb
lea
mov
or
pmullw
mov
lods
push
call
das
pop
inc
jmp
cli
mov
clc
and
loop,pt
sub
jmp
mov
out
sbb
cmpl
cwtl
cld
jb
das
cmp
ret
bound
sbb
andl
fisttps
inc
incl
add
imul
jl
inc
pop
insl
ret
dec
mov
fistpl
cmp
fld1
jnp
cmc
repnz
mov
push
pusha
movsl
out
pusha
mov
jns
sarl
cmc
shll
popa
call
xchg
jne
jmp
loopne
stos
sbb
lods
add
shl
data16
mov
mov
std
or
ljmp
pop
sub
add
xor
nop
lahf
dec
lods
mov
mov
js
cmc
mov
push
mov
add
movsl
xlat
lea
pop
cltd
dec
xchg
and
push
adc
push
adc
adc
adc
push
mov
sahf
and
pop
lds
fimuls
jl
jb
outsl
loope
aam
jmp
xlat
scas
and
iret
cmpsb
and
les
and
fstl
mov
test
adc
int
push
inc
lds
imul
clc
push
movsb
pop
dec
dec
test
fldl
add
inc
mov
mov
lret
dec
ss
dec
xchg
test
mov
pop
sti
decl
dec
mov
rcl
add
add
add
xor
test
jp
add
pop
xchg
rcr
rorb
cli
decl
cmp
ret
and
fldl
decb
pop
les
js
adcb
xchg
dec
lea
fistpl
xchg
or
jb
sbbb
popf
or
add
add
sbb
add
out
fildl
lea
std
movsl
ja
pop
cmp
inc
xor
das
xor
xor
jb
add
dec
adc
or
push
repnz
in
jmp
aas
jb
inc
aas
pop
and
pop
and
loopne
bound
int3
push
lea
adc
cmp
jmp
mov
add
outsb
subb
add
pushf
or
add
cltd
sub
xlat
ret
int
inc
ljmp
imul
lods
call
fbstp
outsb
pop
lret
clc
loope
call
sbb
sbb
sbbb
jmp
rolb
call
and
cmp
fwait
testl
add
add
inc
jmp
mov
add
pop
test
jmp
adc
xchg
imul
push
fsts
je
rorb
dec
xchg
and
ds
pop
cmpsl
sti
hlt
mov
pop
and
popa
add
testb
jmp
pop
flds
bound
jmp
out
in
pop
add
popa
pop
jmp
jmp
push
lret
add
aad
sub
xor
xchg
test
call
add
mov
add
fscale
adc
orl
pop
adc
lcall
mov
jnp
leave
mov
inc
sti
jae
jo
je
pop
aas
movsb
flds
pushl
loop
cmp
ss
fldl
jle
ds
daa
jnp
je
outsb
sub
dec
je
mov
adc
loopne
cld
decb
dec
bound
adc
and
shlb
jno
mov
jns
decl
sbb
and
incb
add
add
xor
add
lds
mov
jmp
cmpl
mov
popf
xor
push
xor
pushl
inc
or
jo
lcall
enter
inc
dec
adc
lret
push
or
mov
mov
mov
sub
orl
add
and
and
fs
pop
fucompp
add
add
add
or
ret
std
decb
hlt
inc
jmp
add
imul
inc
jmp
push
push
xchg
outsb
ss
pop
sub
in
lds
loope
popf
lock
adc
mov
push
lods
or
and
fldl
adc
sbb
cltd
jmp
inc
rcl
outsb
rolb
add
add
in
icebp
fidivl
add
sbb
notb
bound
flds
icebp
imul
or
into
add
es
test
inc
sti
inc
fstpl
popa
fnstcw
ds
ss
testb
shlb
popa
fnstenv
adc
mov
inc
out
fildl
add
add
xorb
sbb
insl
push
mov
flds
pop
sub
push
add
fidivl
je
push
lea
sarl
inc
pop
mov
into
jecxz
sti
push
pop
pop
inc
test
xor
addb
andl
pop
push
push
inc
lds
lret
aad
mov
push
aaa
xchg
imull
inc
and
pop
mov
pop
pop
cmp
or
jnp
shll
pop
jmp
rcrb
push
push
cmp
push
mov
aad
enter
pop
xor
lcall
xor
sub
xor
lcall
mov
decb
imul
add
xor
lods
leave
add
mov
jmp
inc
in
cld
cmp
mov
or
mov
dec
inc
mov
popf
xor
arpl
decl
lahf
mov
pushf
sbb
fcmovnu
cmpb
push
sub
jg
inc
jmp
add
pusha
xorb
add
in
insl
add
jo
in
jmp
add
jo
aad
jmp
add
pusha
adc
jmp
dec
ds
scas
inc
popa
fnstenv
add
xor
adc
sbb
sub
add
push
mov
mov
popa
sbb
cmp
cwtl
jmp
call
push
pop
leave
pop
pop
push
add
cmp
push
fiaddl
jl
cld
add
pop
fsubrl
or
fistl
je
dec
xor
xchg
jne
aaa
dec
into
aas
sti
jmp
add
inc
jmp
popa
fsts
sub
flds
inc
iret
add
jmp
popa
flds
ss
push
adcb
add
add
outsl
ds
jmp
adc
add
fiaddl
pop
inc
xlat
test
test
xor
mov
jo
mov
int
dec
fidivrl
ja
mov
push
aam
call
xchg
mov
repz
and
or
je
push
lea
cli
mov
add
add
add
add
in
jnp
mov
push
cli
dec
mov
inc
addr16
sti
cmpsb
stc
adc
push
mov
decl
pop
xchg
mov
aas
jae
mov
incl
sbbb
dec
xor
cmp
mov
add
repnz
in
lcall
fimull
xchg
int3
idiv
jmp
adcb
cld
push
data16
aas
in
enter
mov
adc
xor
pop
sbb
or
jmp
gs
mov
dec
push
and
lret
gs
xor
test
or
xor
testb
and
fucompp
add
mov
jmp
add
int3
addl
dec
or
ret
and
inc
popa
test
fcmovnb
std
push
movsl
psraw
cld
stc
fimull
add
outsb
unpckhps
mov
cmp
xor
jmp
out
fsubs
call
frstor
je
ljmp
fs
add
popa
test
add
cmp
popf
pop
arpl
mov
in
or
movsl
mov
jecxz
pop
cmp
push
repnz
pop
rol
cmp
jmp
in
pushf
add
and
adc
loop
jne
fimull
in
pop
dec
jl
cmc
push
lea
flds
mov
jns
xlat
xlat
pop
or
bound
push
add
imul
je
pop
dec
mov
or
push
call
add
pop
cmp
xchg
outsl
lock
sbb
out
or
je
mov
xor
push
test
inc
mov
dec
inc
and
dec
inc
and
in
jns
hlt
fiadds
mov
shr
mov
cmp
aad
inc
pop
sub
jp
les
xchg
sldt
add
add
out
dec
adcb
xchg
add
cwtl
pop
and
enter
pop
sbb
movsl
mov
jae
pause
or
je
push
xor
std
outsl
dec
cmc
aas
bound
ds
nop
xor
mov
mov
mov
stc
addl
stos
add
inc
rolb
arpl
jb
add
add
inc
cld
or
aam
mov
push
mov
sbb
std
std
pop
mov
and
incl
xor
outsb
nop
orl
fwait
icebp
outsb
popf
xor
or
enter
loope
popf
add
adc
mov
jmp
mov
cmp
pop
push
add
add
add
add
mov
dec
frstor
stos
mov
jp
cmp
fs
inc
mov
inc
frstor
stos
test
pop
sbb
pop
fdivs
add
xor
std
fildl
sbb
ss
jmp
adc
xlat
sti
push
inc
test
mov
jb
inc
push
sub
in
andb
add
add
sti
sbb
mov
lret
cli
sti
in
ja
aad
and
sti
jno
sti
push
shlb
add
push
lret
sti
sti
out
and
fsub
call
bound
sbbb
adc
sub
call
sub
adc
out
stos
add
jns
jl
sub
push
inc
xor
ljmp
subb
add
sub
adc
fiaddl
mov
call
negb
mulb
popa
inc
and
insl
dec
mov
and
iret
mov
xor
add
arpl
mov
into
cld
mov
jge
or
aad
fwait
pop
pop
dec
jb
les
add
add
aas
add
add
dec
flds
adc
mov
mov
jbe
push
arpl
jmp
cli
test
mov
ret
xor
mov
inc
pushl
adc
xchg
sbb
cld
dec
loopne
aas
bound
decl
idiv
push
inc
addb
loopne
jmp
aas
iret
mov
adc
xchg
fucompp
add
and
push
jmp
lds
pop
xchg
add
fnstcw
adcl
and
sub
cltd
jmp
dec
cmp
xor
aaa
jae
jmp
add
push
xor
fldl2t
or
add
add
jmp
andb
add
dec
add
fnstcw
sub
mov
and
and
jmp
or
pushaw
call
cmpsl
cmp
les
xchg
ljmp
push
adc
sbb
pusha
lret
popa
repz
lcall
mov
imul
popa
inc
stc
and
xchg
pop
inc
in
cmp
or
andl
adc
clc
sti
in
callw
xlat
xchg
fcompl
call
jbe
call
push
jecxz
pusha
add
xlat
add
mov
std
call
outsl
and
enter
pop
sti
pop
inc
push
mov
imul
add
add
add
mov
iret
rcrl
jnp
rol
add
cmp
lcall
cmp
add
mov
outsl
arpl
and
push
in
mov
sti
sub
pop
add
sbbl
and
pop
xchg
fldl
add
sbb
pop
xchg
add
jmp
lcall
adc
add
add
add
bound
mov
bound
addl
jmp
adcb
sbb
ficomps
jae
int
imul
push
aad
int3
lods
adc
popa
inc
decl
popf
aas
popf
jmp
and
ret
outsb
mov
decl
gs
scas
cld
xor
aas
dec
mov
add
sahf
xchg
in
or
adc
jmp
jle
cmc
popa
add
fld
ss
mov
jnp
dec
call
call
in
jmp
jp
popa
call
out
mov
cmp
popa
mov
jmp
insb
enter
add
xor
test
add
add
mov
adc
fnsave
std
cltd
jp
cmc
add
imul
inc
add
pusha
flds
bound
jbe
push
sub
cli
cld
jmp
lret
fs
and
test
add
jmp
pop
ljmp
popa
flds
jmp
popa
push
rcl
pusha
movl
outsl
jne
and
and
popa
jg
out
jmp
popa
fldenv
mov
sti
cld
in
inc
jmp
out
add
add
mov
adc
add
adcb
sbb
cld
lea
fucomi
sbb
fdivrp
jmp
mov
sbbl
add
lods
xchg
add
add
add
fisttpl
add
fidivrl
rcl
fnstcw
xlat
sub
lock
cmp
xor
inc
and
das
mov
inc
popa
orb
fiaddl
test
cmp
xor
cmp
es
xchg
jmp
bound
push
mov
arpl
orb
arpl
mov
fildl
cmp
add
add
clc
xor
andl
mov
inc
push
out
inc
incl
cmp
lcall
aas
andl
mov
bound
call
arpl
imul
call
cwtl
adc
bound
mov
jmp
dec
pop
jmp
decl
mov
fmul
or
jmp
roll
add
add
push
add
sub
jmp
jle
sub
mov
cld
rcrb
gs
push
push
fs
fldcw
mov
add
pop
call
lods
pop
insl
call
popf
pusha
fwait
or
pop
lea
jg
cmc
gs
fstps
sub
pop
pusha
mov
pop
adc
and
roll
add
ficoml
adc
hlt
testb
mov
cs
arpl
add
popa
mov
cld
jmp
or
imul
pusha
shrl
sti
stos
push
call
mov
popa
fsin
in
loop
scas
push
pop
mov
jmp
in
or
cs
xchg
add
add
and
pop
and
leave
outsl
sub
inc
push
outsb
sub
sti
mov
popa
flds
add
push
sar
push
pop
ja
lahf
xlat
mov
std
je
jae
clc
pop
pop
pusha
jnp
add
ljmp
inc
and
iret
xor
imul
add
sbb
xor
aam
inc
cmp
and
cld
incl
add
add
add
sub
pushl
pop
nop
or
add
out
jl
inc
sti
jae
fildll
addr16
lea
cmp
mov
stos
xchg
aam
add
andb
inc
dec
bound
decl
inc
decl
cmpsl
mov
and
js
enter
inc
cmpsb
pop
scas
inc
jp
cmpsl
incl
push
jecxz
jnp
sub
jmp
sbb
inc
flds
jl
inc
sub
std
and
push
lock
leave
add
or
call
push
adc
or
popa
fnstenv
test
in
int3
ficompl
jl
fldenv
sahf
mov
jge
jmp
add
fnstenv
add
mov
loopne
jge
mov
fists
scas
jle
lret
dec
lahf
popa
push
jae
push
nop
inc
shl
add
test
stos
and
jmp
jge
std
cmc
jl
push
sub
jge
pop
cmp
adc
add
add
divl
dec
add
rcl
xchg
mov
daa
out
and
sti
test
stos
out
adc
lds
shrl
fidivrl
addr16
mov
sub
inc
add
mov
push
test
stos
call
adc
scas
adc
mov
jg
or
jmp
inc
add
cmpsl
push
nop
sub
add
add
add
push
fidivl
fisubrl
add
cmp
push
sbb
inc
mov
pop
ja
pop
fnsave
mov
inc
fimull
inc
mov
mov
movsl
mov
mov
addl
push
repz
add
pusha
add
cmp
aas
decl
inc
daa
sub
sbb
movb
add
insl
jo
ret
sub
sub
lret
push
subb
adc
repz
pop
mov
sti
fimull
bound
rcrl
imul
mov
sbbl
mov
insl
dec
inc
mov
pop
ja
bound
cmp
and
js
mov
add
add
leave
loopne
cmpsb
jl
adc
out
lock
add
aaa
sar
mov
jg
data16
aaa
test
sahf
aam
mov
xor
out
cmp
mov
xchg
adc
ljmp
test
loopne
push
and
mov
loopne
fcomi
fistpl
add
frstor
cmovp
ljmp
mov
jp
test
inc
fstps
ljmp
or
lods
call
push
cmp
lahf
and
cmpsl
push
adc
push
mov
fisubl
lret
lea
addr16
push
mull
and
dec
mov
add
add
je
dec
cwtl
xor
fdivs
and
cs
mov
add
rorb
notl
or
sar
adc
lret
xchg
or
bound
and
jmp
cmp
add
popa
rclb
adc
notl
scas
sbb
or
imul
pop
sbb
add
push
addl
xor
cltd
xor
lock
sbb
xchg
enter
inc
mov
mov
outsb
ret
push
pop
cmp
pop
ret
push
decl
and
sahf
addr16
or
and
addr16
add
push
pop
decl
push
pop
or
xor
mov
cltd
inc
xlat
sub
into
aaa
mov
addb
aas
and
push
inc
or
int
push
aam
lea
xor
call
and
call
mov
loope
add
xor
js
loope
add
mov
or
sub
scas
cli
mov
jmp
lods
add
sti
xor
dec
push
jns
jmp
fwait
jmp
jae
inc
add
add
add
jge
push
jne
or
gs
mov
mov
mov
push
fldenv
jne
pop
mov
das
sbb
push
lds
xchg
pop
sbb
nop
outsb
pop
jb
sub
nop
xor
add
and
insl
arpl
adc
xchg
loope
lret
add
dec
mov
andb
or
xchg
loope
inc
fstpl
push
mov
cmpsb
and
jb
movsb
or
xchg
in
aaa
leave
cltd
pop
jp
add
and
pop
fnstenv
push
mov
xchg
daa
outsb
xchg
pop
rcrb
stc
popl
lea
add
xor
test
and
out
and
mov
or
xchg
xor
add
out
test
push
push
arpl
call
cmpsb
movsl
or
cmc
sbb
pop
popa
pop
ret
pop
lret
in
add
push
sbb
ss
or
xor
in
jb
mov
dec
mov
cmc
aam
sub
xchg
or
dec
dec
and
add
divl
fldcw
rclb
roll
add
add
mov
cmp
adc
add
call
jnp
pop
ret
push
mov
addl
xor
sub
mov
test
dec
mov
dec
je
xchg
je
repz
dec
mov
lret
orl
call
jmp
mov
add
dec
dec
or
xor
cld
cmp
mov
jo
divl
cmp
fnstcw
cld
sti
xor
cmp
adc
or
xchg
lds
jb
add
mov
test
lcall
sbb
shlb
sti
jne
stos
lret
sti
das
cmp
pusha
lods
scas
sti
test
and
add
xor
in
or
ljmp
mov
cld
incb
or
pop
bound
in
push
xchg
push
aam
gs
jmp
decb
testb
cmc
push
inc
daa
sub
pop
xchg
stos
xor
loope
push
sahf
pop
adc
fldenvs
cli
insb
rcll
data16
aad
jg
add
add
adc
call
inc
bound
rcll
push
aam
push
cltd
jmp
mulb
pop
and
out
fimull
jmp
movsl
lds
sbb
in
popa
push
leave
mov
push
into
popf
jl
jl
pop
fnstcw
cmpsb
and
mov
sti
fsubrl
int
jmp
sub
xor
mov
in
repnz
jecxz
sti
insb
sbb
inc
cmpsl
push
daa
aaa
mov
xchg
ret
add
and
inc
add
jo
or
int
popf
hlt
fisubl
sbb
orb
fcoms
cmc
or
scas
push
add
aad
sub
xor
add
or
add
jnp
lock
push
add
mov
movb
gs
je
mov
or
fs
push
testl
push
xlat
dec
mov
jmp
test
das
ret
bound
lcall
push
push
ret
push
idiv
xor
jecxz
dec
pop
dec
or
sub
jecxz
in
add
rorb
sbb
pop
sbb
xchg
add
mov
mov
das
mov
pop
dec
push
lods
dec
dec
pop
mov
es
adc
sbb
fsqrt
push
push
jmp
loopne
xchg
add
fdivs
add
sbb
jg
cmpsb
xor
sti
ja
adc
pop
ret
xor
adc
ret
ja
gs
bound
add
push
lock
pusha
xor
call
fnstenv
pop
sub
dec
mov
mov
fldcw
shrb
add
xor
xchg
add
jg
cwtl
jmp
in
push
icebp
jmp
lds
data16
andb
push
out
push
dec
sti
sbb
data16
test
pop
cmpsb
mov
hlt
jmp
add
call
add
adcb
fstps
push
fldcw
inc
mov
mov
push
shrl
fnstcw
fs
out
adc
fstps
jmp
xchg
loop
push
popa
jle
sub
mov
std
hlt
adc
and
inc
int
stos
mov
out
or
xor
pusha
stc
jae
in
sub
lds
mov
mov
xlat
pop
out
push
mov
dec
jg
add
mov
lds
mov
and
pop
mov
jnp
add
mov
mov
sbb
lret
data16
call
adc
call
js
pushf
add
cmc
sbb
loopne
in
mov
out
inc
pop
pop
je
jne
adc
xchg
fldl
add
rorl
adcl
or
dec
lea
pop
inc
mov
fstl
inc
sbb
pushl
mov
adc
sbb
or
jmp
rcrl
xchg
mov
out
mov
dec
popa
test
xor
inc
jo
imul
iret
incl
add
add
dec
push
cli
add
jmp
mov
pop
or
lds
bound
and
aaa
test
jle
out
test
incl
int
lcall
add
or
ljmp
add
add
sti
aaa
test
inc
bound
adc
add
and
push
jg
fadds
and
leave
repz
fwait
jmp
add
mov
cmpsb
dec
fisttpll
bound
and
mov
push
repz
fsubr
ljmp
call
or
inc
fldenv
data16
orl
decb
add
cmp
outsb
hlt
out
jne
xor
ficompl
testb
sbb
aas
ds
add
cld
push
mov
cmp
dec
add
loopne
sbb
sti
xor
shlb
jmp
out
leave
ret
es
fadds
jmp
push
pop
lret
mov
pop
mov
movq
lea
sahf
std
dec
lahf
jns
sti
ds
pop
lock
dec
mov
jmp
loopne
xchg
insb
mov
lods
or
add
add
je
cmp
sarw
push
add
add
mov
jne
fmul
ret
bound
sti
jmp
adc
or
aad
add
lret
fs
add
mov
adc
jnp
jnp
rcr
dec
push
dec
jg
lea
xor
xchg
idiv
add
shlb
cld
pop
xor
cmpl
inc
or
add
mov
adcl
or
addl
adc
mov
out
popa
mov
add
shlb
and
add
lods
push
leave
dec
loope
push
nop
cld
jp
test
movb
cwtl
adc
in
aas
or
aad
push
int
adc
and
imul
fadds
push
push
adc
add
add
ja
add
ucomiss
adc
sar
inc
cli
bound
ds
jns
mov
add
pop
bound
adc
f2xm1
jp
mov
dec
sti
dec
add
inc
bound
das
bnd
adcl
jp
xchg
fstps
subl
mov
aad
jmp
add
add
fldenv
jbe
test
fisubrs
jg
popf
jmp
pop
test
fldcw
mov
test
push
xor
gs
bound
pop
shrl
out
in
idivb
pop
inc
mov
and
repz
cli
repnz
add
add
push
push
out
rcl
test
sub
jg
xorl
push
sub
and
scas
in
je
daa
fldenv
pcmpeqw
mov
test
mov
mov
cmp
call
sbb
xchg
in
in
sub
cmpsl
sti
faddl
inc
jmp
push
ficoml
popa
pop
dec
lds
das
pop
xchg
bound
bound
loope
adc
andb
xor
clc
test
dec
push
sub
notl
dec
std
add
call
ror
xor
cltd
and
inc
xchg
and
xor
mov
mov
sub
add
add
mov
add
movsl
notl
notb
or
and
push
add
xor
sarl
ficompl
imul
std
stos
add
mov
pushl
inc
lcall
pop
dec
xchg
xchg
lds
sbb
jge
xchg
pop
adc
push
ret
aaa
jnp
push
push
scas
bound
add
mov
add
outsb
mov
or
out
push
add
mov
sbb
lock
psubd
adc
clc
ljmp
mov
lock
stos
jl
dec
ja
sti
push
addr16
clc
jnp
push
fsts
mov
bndldx
in
adc
in
jmp
add
inc
pop
inc
bound
jmp
add
pop
xor
fnstenvs
negb
movsb
fmull
jmp
in
jge
fidivl
stos
test
lods
mov
shlb
pop
push
std
xor
fs
cltd
push
and
adc
je
add
out
adc
dec
out
cli
cmpsl
call
lea
add
loope
adc
push
test
pusha
daa
flds
jmp
cmp
fadds
adc
in
add
cwtl
and
mov
flds
bound
sbb
xor
jmp
pusha
lcall
in
fwait
or
ljmp
inc
flds
test
or
xchg
pop
test
idivl
and
jmp
popa
flds
mov
push
inc
jno
add
dec
push
shlb
cld
dec
push
rorb
lret
add
mov
sbb
popa
test
fs
dec
ljmp
pop
or
test
test
test
push
xchg
push
add
sti
xor
rcrb
leave
inc
inc
or
test
pop
or
add
mov
add
adc
shll
mov
or
test
mov
add
in
je
ja
out
loopne
add
mov
push
sahf
add
and
add
fnstenv
lcall
mov
cmpsl
cltd
sarl
scas
ja
jg
cli
jg
cmp
push
push
xchg
ja
das
or
inc
and
add
add
movswl
push
sub
out
roll
push
xor
mov
sbb
mov
sbb
in
sub
xor
add
cmpb
stc
cld
jecxz
jmp
mov
bound
xchg
mov
or
xchg
lds
fisttpl
sub
pop
stos
jmp
add
mov
lcall
add
int3
out
pop
clc
lods
sbb
add
jo
jle
into
and
xchg
or
cmp
or
inc
jle
sbbl
es
fldt
mov
and
adc
cmp
popf
insb
jns
xchg
frstor
jmp
dec
push
lret
inc
jg
call
cmp
push
cmp
xchg
lea
mov
fcmovnu
add
test
shrl
and
inc
jae
pop
sub
xchg
and
test
push
dec
add
enter
mov
addl
add
adc
cmpsl
xchg
add
pop
mov
add
adc
test
xchg
jge
fiadds
mov
jmp
push
mov
mov
xchg
movsl
add
cmp
call
icebp
fisttpll
call
popf
add
sbb
je
movsb
add
sti
pop
bound
fxtract
adc
fisttpll
add
mov
mov
add
sub
push
arpl
push
repnz
aaa
ds
out
imul
test
pop
fnstenv
incb
pop
add
out
sub
dec
inc
add
out
mov
mov
pop
sbb
bnd
pop
jmp
xchg
jge
jne
jnp
out
pop
jmp
add
add
out
jnp
call
fbstp
imul
cmp
outsl
push
adc
out
fstps
or
les
xorb
ljmp
call
or
and
push
cltd
gs
jmp
add
adc
arpl
jmp
call
bound
add
add
add
imul
bound
pop
or
jmp
jnp
test
jmp
js
mov
push
xor
cltd
add
adc
adc
pop
je
mov
and
test
push
cli
and
repnz
and
push
adc
dec
or
inc
shr
inc
add
gs
lea
jb
mov
xchg
mov
mov
movsl
inc
add
add
popa
pop
inc
int
test
or
lea
movaps
inc
add
xor
inc
jmp
movsb
jne
inc
sbb
adc
cwtl
cltd
add
lahf
pop
lret
mov
add
in
inc
add
add
pop
lahf
cltd
je
push
xchg
and
pop
pop
in
adc
std
mov
movsl
movsl
out
test
fisubl
add
cmp
or
push
fldcw
add
mov
lea
push
lcall
xchg
or
pop
out
jne
cmpsl
jnp
pop
jmp
roll
pop
push
pop
cmpsb
xchg
jnp
push
pop
or
lds
xor
jns
call
sti
adc
mov
mov
inc
dec
mov
outsb
in
push
cmp
sub
rcll
dec
push
adc
enter
call
dec
adc
in
push
jmp
in
data16
add
mov
push
xchg
ja
xchg
hlt
pop
add
incb
mov
jmp
cmp
push
fbstp
dec
mov
add
pop
in
repz
cld
call
jmp
in
ror
push
jb
sub
shrl
cmpl
lea
inc
bound
cmpsl
adc
insb
push
inc
push
push
add
pop
xchg
out
add
push
movsl
outsl
add
push
cmpsb
out
add
add
add
sbb
dec
sub
rorl
mov
and
sbb
je
mov
add
fsubl
pop
test
add
dec
push
movaps
rclb
test
shr
fisubl
cmp
pop
test
cmp
adc
pop
sar
ja
cld
movsl
mov
dec
sbb
sbb
push
je
sbb
adc
fnsave
add
lods
xchg
cld
imull
loope
jmp
xor
push
add
add
jbe
and
adc
push
daa
rol
ljmp
sub
dec
adc
inc
into
int
inc
xlat
add
stc
add
cltd
enter
or
in
adc
add
add
divl
mov
dec
and
in
or
fdiv
mov
bound
pop
push
pop
out
cld
testb
mov
jp
dec
test
dec
jne
pop
in
sti
fsubl
nop
shll
push
push
jne
sbb
or
push
xor
fildl
xchg
insl
inc
and
ficoms
test
hlt
ljmp
jnp
bound
inc
bound
repz
dec
mov
mov
mov
add
xchg
repnz
std
jae
mov
call
jmp
repnz
bound
pushl
jae
add
cmp
idivb
bound
add
push
les
and
into
lret
xchg
shrl
pusha
xorl
ret
mov
pop
lock
pop
test
bound
loopne
stos
push
add
fldl2t
insl
bound
sub
sbb
fstl
out
mov
mov
add
push
cwtl
enter
inc
bound
jmp
data16
mov
movsb
mov
mov
add
gs
dec
jns
add
fcoml
pop
popa
flds
es
mov
icebp
popa
flds
mov
add
jne
ja
fs
mov
add
jl
jmp
popa
add
repnz
and
jo
data16
adc
sub
push
fld1
jl
add
fs
test
push
rolw
jmp
inc
test
ja
mov
call
cmp
scas
sarb
sbb
jmp
dec
les
add
lret
pop
popf
lea
call
cmp
mov
and
movsl
add
add
aas
mov
rorb
lret
les
mov
add
add
pop
adc
cmp
outsb
xor
mov
inc
or
jnp
inc
and
lret
stos
push
call
sbb
test
idiv
mov
mov
data16
jmp
mov
sti
xor
jo
clc
fldenv
orl
inc
xor
xchg
add
call
sub
fidivs
in
out
jae
sbb
fnstenv
imul
out
pop
fdivrl
int
push
inc
push
ss
clc
out
sub
lea
push
pop
sti
in
cmc
out
xor
pop
mov
cmpsl
jmp
xchg
repz
xchg
or
add
icebp
and
int
add
add
push
mov
in
loope
sahf
mov
xor
test
fsubrl
adc
daa
sti
icebp
mov
fnstenv
jmp
jmp
clc
std
add
ds
int3
jmp
out
pop
xlat
jmp
fists
xchg
fmull
sti
mov
out
inc
mov
add
add
add
movsb
add
andl
adc
xchg
mov
push
pop
cmp
fstpl
je
jmp
cld
jb
add
cli
bound
sbb
popa
stos
shlb
mov
push
int3
in
decb
sbb
cli
bound
add
xchg
icebp
pop
push
add
add
push
fcoms
je
and
mov
hlt
add
lods
sbb
jnp
push
in
mov
add
add
mov
dec
roll
pop
testl
mov
idiv
insb
push
inc
in
push
inc
lock
aad
call
js
sbb
push
std
cli
pushl
call
xor
add
add
cwtl
lock
ds
enter
mov
jne
mov
push
push
js
subl
push
adc
add
shll
and
lock
jmp
repnz
adc
xchg
jp
and
imul
mov
add
cmp
stos
push
and
test
stc
add
sti
dec
out
add
in
or
add
out
mov
mov
lea
out
xchg
fdivp
test
out
cmp
push
out
mov
fdivp
ss
pop
sbb
jle
fldl2t
add
js
mov
fldl2t
push
pop
fs
fldcw
dec
mov
mov
pop
dec
fldcw
fdivl
inc
inc
aad
add
sub
mov
cwtl
cmp
cmpsl
loope
sbb
cmpsb
loope
jmp
jae
mov
incb
je
and
and
outsb
les
add
or
dec
pop
add
sub
sti
xchg
mov
add
add
fs
push
mov
in
fcoms
add
popa
fldcw
sub
nop
mov
mov
insl
and
push
push
bound
notl
cmp
into
xor
jle
loop
push
pop
pop
or
movsl
outsl
inc
jmp
cltd
add
jbe
aaa
sub
out
adc
repz
mov
popa
cli
add
sub
dec
scas
push
pop
add
push
ret
dec
mov
movb
xchg
add
push
push
add
shlb
enter
jnp
pop
loope
je
bound
or
sbb
std
cmc
fs
mov
lret
push
adc
cmpl
addl
dec
add
pop
add
lods
mov
loope
leave
mov
rcrb
jbe
mov
fisubrs
bound
loopne
bound
out
jae
jnp
push
adc
dec
push
sub
xchg
add
pop
mov
and
ss
dec
or
rorl
xor
jle
data16
adc
roll
xchg
loope
add
add
add
lcall
adc
shlb
inc
clc
mov
mov
xor
xchg
lret
lock
incl
fiaddl
dec
pusha
jge
je
and
mov
fistl
data16
adc
cmp
adc
sub
into
aad
push
fldenv
loop
jp
repz
fwait
xor
lods
mov
sub
fucomp
mov
dec
data16
pop
pusha
jns
push
insl
adc
cmp
pop
repz
nop
mov
test
test
add
pcmpgtb
pop
popf
inc
mov
add
out
std
repz
or
add
mov
cs
push
fists
popa
pop
shlb
add
test
mov
pop
shlb
add
pusha
mov
stos
loop
and
cltd
fadds
jmp
mov
das
mov
popa
das
add
popa
leave
push
sbb
popf
and
mov
adc
xor
sti
aam
movsb
push
lcall
adc
add
pop
sti
testb
adc
add
popa
inc
add
out
jle
push
testl
add
add
movsb
adc
mulb
lret
call
push
dec
stos
push
pushl
jae
test
nop
push
push
jae
add
jnp
dec
push
ss
adc
mov
pop
out
je
pop
adc
push
mov
aad
mov
call
test
add
lock
aad
rcl
stos
add
add
add
push
adc
test
inc
and
out
pop
add
cmpsl
fdivr
fdiv
int
aad
add
add
pop
daa
retw
cmp
mov
mov
xor
loopne
mov
or
sub
clc
fists
add
sbb
add
add
add
push
inc
or
add
xlat
inc
decl
bound
cmpsb
add
sti
dec
mov
aas
bound
mov
jl
push
jp
clc
fcmovu
lods
shrb
and
lea
hlt
rclb
mov
cmpsl
mov
data16
lock
ljmp
frstor
shlb
push
mov
std
cld
hlt
adc
out
jecxz
xchg
jmp
jge
mov
jle
add
lock
push
cltd
jmp
add
fcmovu
lock
mov
bound
pop
in
mov
add
xor
movsl
jl
add
addb
adc
in
scas
add
std
mov
pop
pop
scas
and
add
popa
fldenv
cmp
idiv
pop
jg
xchg
repnz
sahf
in
sbb
push
rclb
icebp
dec
aaa
push
loop
jmp
fsubrs
push
xor
call
loope
std
fldenv
into
inc
fmuls
notl
js
or
mov
push
call
mov
add
add
xor
in
mov
inc
in
mov
sbb
insl
repnz
adc
sub
xchg
lock
jnp
test
paddd
adc
mov
add
jnp
jne
nop
mov
cmp
outsb
add
int3
mov
mov
push
shlb
mul
dec
idiv
les
push
inc
pop
or
bound
decl
add
add
inc
pop
sbb
sub
aas
bound
or
mov
push
lea
das
lret
push
aas
add
mov
lea
sbb
push
cmp
das
push
dec
test
add
aas
cli
sub
pushl
int
insb
ds
xchg
repnz
xlat
loope
in
or
outsb
jmp
inc
add
dec
fdivl
add
addr16
iret
cld
jge
addr16
sti
xchg
fld1
dec
arpl
testb
xchg
add
jmp
ret
pop
and
test
inc
inc
xchg
sub
roll
or
jo
jbe
retw
fs
jle
cltd
into
ss
pop
mov
adc
mov
sbb
add
add
xchg
add
inc
bound
and
out
leave
lcall
and
or
add
sbb
ja
sti
in
push
shr
cld
pop
mov
xchg
and
push
lock
bound
xchg
stos
lock
fcompl
push
ret
adc
sub
repnz
jmp
cmp
pop
push
popa
xchg
fadd
fiaddl
add
imul
push
jns
xchg
add
popf
fadd
in
sub
inc
jmp
es
add
jmp
jle
jmp
jae
add
and
jae
daa
out
cmc
je
out
cmc
jno
push
push
add
adc
xor
push
mov
mov
and
push
fadds
mov
add
add
cmpsl
or
insb
inc
in
mov
and
shlb
shr
add
icebp
mov
call
lea
shl
xlat
inc
xchg
xor
lret
mov
push
jo
hlt
inc
or
lea
movsl
divl
pop
iret
mov
test
int3
ret
data16
fidivl
add
dec
rol
jb
add
add
mov
pop
and
or
adc
bound
hlt
mov
dec
sub
lret
jge
jne,pt
je
inc
and
scas
or
out
xor
push
aad
adc
mov
ds
fistpll
fstpt
mov
fcoml
daa
adc
sti
or
rcr
mov
test
cmp
data16
add
dec
fnstenv
xchg
push
cs
js
jmp
xorb
fldcw
cmp
imul
icebp
mov
arpl
fs
or
sbb
pop
dec
sub
cwtl
adc
xor
cmc
xlat
outsb
cmp
sahf
fldenv
out
pop
cmp
mov
push
pop
call
insb
ret
aaa
fildll
push
jge
mov
pop
fnstenv
xor
call
in
jae
popf
add
incl
sti
sbb
xchg
xor
sti
mov
loopne
xchg
pusha
ret
sub
cmp
jecxz
gs
insl
adc
mov
push
lods
popa
jg
inc
mov
sti
inc
cs
mov
xchg
cmp
push
pop
lds
add
add
jg
int
test
gs
push
movsl
popa
arpl
jmp
leave
add
push
mov
pop
mov
push
sub
icebp
pop
insb
mov
and
push
push
add
push
call
and
lea
or
les
jne
pop
inc
adc
rolb
pop
iret
mov
lea
dec
inc
dec
push
test
add
dec
cmpsb
and
jg
inc
add
sarl
pushl
dec
je
mov
jne
loope
bound
roll
push
dec
cmpsb
pop
pop
cmp
inc
and
std
inc
jb
inc
and
mov
call
xchg
jne
je
inc
mov
rolb
add
into
fldt
push
cmp
les
stc
cwtl
mov
call
repz
in
je
ret
xchg
jge
je
lahf
push
adc
hlt
outsb
push
cmpsb
lock
jnp
arpl
push
in
pop
pushaw
daa
das
call
fldcw
repnz
mov
add
test
mov
sbbl
add
jp
add
test
mov
push
cmp
fldenv
xor
xchg
jnp
shll
insl
orl
and
cs
icebp
repz
in
ret
mov
lods
add
add
lret
sub
in
imul
scas
sbb
push
in
sub
jmp
jle
add
add
in
ja
jnp
xchg
jno
push
out
loopne
scas
sbb
out
ret
je
rorb
data16
in
loopne
in
loop
or
mov
adc
loopne
scas
jg
or
pop
js
add
aad
jbe
movsl
jg
sub
xchg
gs
push
movsl
popa
mov
mov
add
add
test
out
push
lcall
push
xchg
jmp
out
cli
cmpsb
iret
test
cmp
add
push
adc
pop
int
inc
cltd
and
mov
testb
jbe
mov
out
add
xchg
sub
mov
testl
pushl
ja
add
xlat
call
test
add
add
sahf
incl
or
loopne
ror
mov
sub
pushf
repz
adc
test
mov
cmc
je
mov
add
push
push
push
bound
or
fcom
inc
or
inc
fmuls
jmp
lock
je
fcoml
popf
stos
push
jg
cld
pop
pop
sub
cmp
and
and
sub
and
add
add
in
gs
push
jmp
mov
mov
mov
sti
loop
cmp
lock
out
add
bound
je
push
fisttps
roll
push
rclb
bound
in
fnstenv
and
out
ljmp
lea
leave
stos
xorl
ds
test
mov
cs
outsb
rorl
sbb
lahf
repnz
jmp
add
imul
sarl
sahf
ret
test
add
ja
dec
loope
ret
imul
scas
pop
dec
sbb
out
mov
adc
lods
xchg
jmp
add
sbb
test
add
mov
jmp
popa
push
rclb
cmp
mov
imul
popa
push
sarb
fst
xchg
cmp
movsl
mov
cmc
jmp
jbe
in
cmc
in
xchg
push
addl
cmc
jmp
jp
push
push
and
subl
addb
add
mov
mov
and
roll
add
add
lret
scas
shrb
sub
or
dec
push
int
lea
dec
ljmp
push
and
mov
icebp
jle
lret
mov
mov
adc
jae
add
add
add
push
and
jnp
add
cmp
cmc
call
dec
and
dec
fildl
call
adc
ljmp
incb
mov
dec
test
decl
mov
mov
test
bound
incl
xor
push
outsb
in
cmp
and
xchg
mov
dec
mov
and
jecxz
pusha
lock
out
pop
jmp
mov
xchg
mov
ret
les
je
outsl
pusha
lock
add
add
aam
jge
dec
sti
dec
sub
inc
bound
and
lcall
bound
mov
push
loop
xchg
insl
dec
and
rclb
mov
push
daa
dec
fsubr
andb
mov
gs
fldl2t
nop
sahf
mov
push
filds
in
call
pop
fsts
je
fldl2t
mov
add
add
jmp
add
call
add
je
ds
in
bound
sub
arpl
mov
bound
push
xlat
jg
inc
jle
sub
cmp
jmp
mov
popf
dec
add
mov
lret
inc
jmp
pop
xchg
and
data16
add
pop
gs
lea
cwtl
fsts
jp
push
test
jo
rclb
add
stc
nop
jle
popa
push
int
add
add
jmp
and
mov
sbb
mov
shlb
mov
and
pop
inc
loope
jo
popa
fnstcw
popf
outsb
flds
add
dec
push
mov
fadds
mov
push
call
jle
and
stc
xlat
add
xchg
adc
clc
add
adc
mov
cli
xchg
mov
les
fucomp
pusha
cmp
xchg
je,pn
pop
clc
adc
imulb
leave
and
dec
inc
and
test
out
repz
jnp
call
add
aad
test
into
xchg
rol
jne
sub
pop
mov
jecxz
pusha
lock
icebp
dec
sti
dec
xor
inc
bound
and
out
js
mov
push
call
jecxz
lock
push
fwait
push
lea
xor
addr16
fmull
cmpsl
adc
jmp
lods
movq
icebp
fbstp
pop
adc
and
add
add
out
jmp
fs
data16
out
xchg
out
pop
test
icebp
fbstp
pop
lock
jae
sbbl
add
cltd
jmp
xchg
jg
fsubr
add
dec
gs
shr
add
xlat
jmp
sbbb
stos
lods
pop
jmp
jg
fsubr
add
add
add
jmp
sub
bound
cmpb
add
insb
dec
jle
add
push
fldl2t
jg
leave
insl
jb
fldl2t
mov
mov
push
out
mov
pop
jp
cmp
bound
test
popa
flds
cmpsl
push
sbb
mov
and
mov
in
outsl
popa
fldenv
add
mov
cmpsl
addr16
enter
pusha
icebp
popa
flds
repnz
js
xchg
cld
lods
out
jmp
insb
sub
sbb
push
add
movsb
lcall
mov
add
popa
shl
lret
aam
sub
jmp
mov
divb
cmc
adc
mov
add
add
pop
jge
cmp
je
xchg
popa
and
call
mov
and
add
pop
test
fildl
add
out
inc
add
push
test
idiv
and
or
mov
mov
mov
call
push
xchg
out
adc
fndisi(8087
add
xchg
mov
jp
add
bound
fiaddl
dec
add
push
in
pop
sbbl
xor
fcmovnb
jbe
cmpsb
rolb
inc
add
sarl
and
daa
sarb
insb
popa
add
je
test
jnp
cmp
pushf
xchg
fwait
inc
test
adc
add
iret
subb
xchg
rolb
add
add
out
sti
sub
pop
cmp
push
mov
push
cltd
fsts
or
xchg
inc
inc
bound
addl
insb
dec
adc
les
sahf
fldenv
and
add
add
insb
xor
sahf
fstps
cmp
or
mov
pop
dec
add
out
lcall
aad
repz
fsubrl
dec
inc
movsb
add
lods
mov
addr16
test
bound
cmc
das
cmp
add
inc
inc
inc
jmp
rcl
shlb
andl
sbb
addr16
test
mov
test
ret
sub
int3
lret
mov
mov
add
sbb
in
cli
jbe
mov
xchg
push
ret
bnd
lods
popa
add
scas
and
xchg
sub
jge
add
jb
push
test
xor
adc
push
sbb
insb
mov
mov
add
fadds
dec
xchg
jg
jl
mov
rcrb
add
jbe
or
jnp
out
add
dec
sub
push
js
inc
cmp
sub
js
iret
testb
inc
cmp
jae
shrl
lcall
or
or
aam
outsb
xlat
adc
leave
xlat
dec
push
stos
or
push
mov
pushl
je
jl
xor
lea
mov
add
push
mov
inc
mov
xchg
dec
cli
xchg
add
add
sub
subb
jne
into
repz
cli
adc
jmp
notb
subl
mov
insb
pop
xchg
js
sar
sbb
sti
and
cli
div
nop
pop
pop
pop
lods
in
or
mov
icebp
jmp
push
mov
dec
mov
or
repz
add
or
mov
add
idivb
sbb
mov
out
call
fbstp
jne
bound
gs
bound
pop
xor
sub
fsubr
sbb
call
jp
out
in
movsl
push
pusha
and
push
push
nop
push
scas
adc
pop
fsub
add
add
add
icebp
jnp
mov
cmc
arpl
and
test
mov
insl
mov
push
pop
push
lds
std
and
pop
pop
jne
test
mov
mov
call
mov
cli
mov
test
or
adc
and
jmp
popa
pop
inc
lds
and
pop
push
roll
mov
cs
outsl
push
jbe
push
iret
fsubrl
or
in
mov
cli
fisubrs
arpl
dec
pushf
xor
sbb
xor
push
mov
mov
inc
imul
leave
jae
idiv
xchg
add
mov
mov
rorl
mov
push
test
or
test
and
cmp
xor
je
je
std
add
test
loopne
aam
data16
pop
add
and
adc
adc
xor
add
loopne
bound
mov
sahf
adc
or
cmp
je
data16
adc
mov
add
pusha
ja
cmc
jno
mov
push
cmpsl
pop
inc
adc
aad
jle
pusha
xor
loope
sub
pop
inc
mov
add
jbe
pop
mov
mov
push
pop
fldz
or
stc
ret
jmp
sar
xchg
mov
pop
and
xchg
adc
sar
cmpsb
cld
bound
jl
ret
fstps
cmp
cmp
into
sub
push
pop
test
jnp
hlt
cmp
pop
loopne
in
rolb
pop
loopne
ret
pop
sub
mov
lcall
or
xchg
sub
mov
shrb
fstps
push
mov
sbb
cmc
iret
sbb
pop
pop
jmp
les
mov
pop
scas
loopne
jmp
add
add
fisubrs
and
push
cmp
and
loop
data16
sbb
cmp
add
daa
sbb
sbb
call
icebp
and
adc
add
inc
dec
shr
push
add
xor
test
loopne
cli
jne
push
inc
or
popa
dec
or
aaa
sub
daa
cli
faddl
add
add
testl
movsl
cmp
dec
jmp
cmc
enter
loop
add
adc
js
or
add
shll
lods
mov
stos
add
fisubrl
sar
pop
pop
add
in
cmpl
jge
fmuls
hlt
dec
fmuls
aaa
add
mov
or
lret
jle
jnp
add
pop
inc
fsub
fcoms
jbe
cmovo
dec
or
mov
mov
add
jo
pop
cmp
orl
adc
call
bound
sub
jmp
movsb
test
cmpsb
xor
lods
jns
jmp
ret
sbb
loopne
je
mov
cwtl
call
out
add
jle
lds
lods
je
cmp
cmp
insb
movb
aas
lods
sti
push
mov
add
jns
xorb
call
frndint
shr
xchg
sar
jmp
ret
nop
orb
jns
adc
ja
loope
xchg
or
loope
enter
mov
sbb
jp
shll
ret
stc
lret
outsb
hlt
bound
pop
pop
lods
mov
out
enter
aad
ficomps
aam
cltd
lret
adc
mov
lret
lods
test
rcll
mov
mov
fstps
mov
cmp
loope
pop
xchg
add
shrw
xlat
aam
mov
in
and
add
sbb
loope
test
jg
cli
adc
jae
adc
pop
dec
vhaddpd
or
xchg
fsts
pop
push
dec
add
insb
mov
push
fs
std
fstpl
divb
push
insb
jmp
add
insl
cmpsb
inc
adc
dec
loope
lahf
jns
iret
shl
jmp
add
add
sbb
and
add
call
add
add
enter
lea
jecxz
add
sti
pop
pop
add
iret
jnp
punpcklbw
add
adc
jae
js
or
fsubrp
or
addr16
int
or
into
hlt
inc
lret
jae
jl
sbb
test
add
add
mov
pop
dec
sub
or
ret
mov
add
clc
mov
push
push
in
bound
bound
add
ja
adc
stos
adc
sti
outsl
or
inc
bound
jl
repnz
and
add
and
ret
mov
pop
and
cld
cli
das
lret
bound
or
mov
out
sub
nop
bnd
push
cmp
cmp
mov
mov
test
mov
xor
xchg
int3
push
push
and
cmpsb
xchg
test
pop
cmp
xor
nop
ror
pop
sarl
dec
xlat
jl
daa
and
cltd
daa
cmpsl
push
xchg
sub
xchg
outsb
daa
jle
outsb
aaa
inc
loope
pop
mov
fsts
push
mov
jle
sbb
fwait
jmp
imul
aad
push
xor
std
push
jo
call
jl
daa
lahf
les
das
xchg
jl
push
sbb
ss
adc
in
out
adc
je
push
das
add
sub
test
pop
loop
cmpsl
stc
das
test
dec
das
test
ds
push
add
pop
sbb
jae
inc
sub
sbb
test
or
lret
xchg
test
mov
pop
popf
pop
divl
or
pop
add
shll
ret
push
sub
fsubl
pushf
or
stos
pop
push
ficompl
daa
cs
add
ja
inc
cmpsl
lds
enter
rolb
je
jo
push
push
lcall
xor
stos
add
fldt
rorb
cli
push
shrb
sbb
push
nop
lea
or
add
jmp
test
imull
je
enter
int3
inc
jmp
lret
scas
push
cmp
je
push
stc
pop
test
jl
out
push
cmp
jne
jo
adc
sub
bound
pop
stos
out
push
xchg
das
jmp
push
push
mov
sbb
data16
loopne
sti
outsl
cmp
test
jp
arpl
adc
push
lods
imul
and
decb
sti
mov
add
jno
repz
hlt
orl
call
into
addr16
bound
or
dec
ficoms
call
fnstenv
sbb
insl
inc
ds
mov
es
push
xor
sbb
shll
js
std
sarl
dec
in
js
scas
in
cld
shll
cltd
repz
add
add
cmpsb
std
add
int3
jecxz
sub
jg
add
xchg
jne
bound
jnp
adc
loopne
mov
adc
je
xchg
movsb
outsl
xchg
cld
inc
bound
jge
inc
push
mov
cmpsl
add
sub
mov
push
flds
insb
or
fld1
inc
mov
sbb
mov
lock
fiadds
add
add
sbb
pop
xchg
push
test
xchg
push
test
jno
inc
add
cmp
call
into
push
pop
call
ficompl
and
jge
flds
jbe
std
sbb
test
mov
rolb
mov
test
cwtl
or
push
test
add
imul
mov
add
add
dec
decl
push
add
sbb
outsb
sbb
in
pop
in
hlt
jns
add
push
je
mov
sar
push
lea
sbb
rorb
mov
fs
adc
fldl
adc
adc
sti
faddl
add
shlb
add
add
popa
add
lret
je
push
bound
sub
mov
mov
cld
dec
lods
popf
mov
and
jmp
pop
add
cmpsb
jns
mov
mov
mov
mov
jp
fiadds
bound
decl
lcall
lret
cmc
in
call
inc
xchg
xor
sahf
fmuls
sub
decb
add
add
sub
decb
in
call
call
loope
in
mov
push
insl
dec
xchg
push
sbb
ss
mov
fistpll
mov
pusha
inc
mov
es
iret
xor
inc
bound
inc
and
add
pop
mov
jno
pop
dec
sub
pop
sub
cmp
stos
call
cltd
cmp
sub
clc
out
adc
repz
cmp
add
adcb
cmc
jmp
xchg
jecxz
call
cmpsb
xchg
or
mov
out
enter
and
cmpsb
fadds
fs
shll
xchg
jmp
mov
ret
into
cmc
data16
in
stc
mov
popa
dec
push
icebp
mov
xchg
in
push
rcrl
into
data16
jmp
jle
mov
and
lds
xchg
sub
dec
fsts
enter
or
adc
dec
dec
add
pop
lds
mov
arpl
dec
push
sarb
mov
adc
call
mov
fidivrl
or
mov
or
add
or
dec
testl
leave
out
test
movl
push
add
pop
repz
jbe
adc
cmp
mov
jo
or
fabs
add
bound
jle
dec
mov
add
insl
mov
je
jg
out
aaa
lret
call
sub
test
pop
mov
es
stos
das
stos
sbb
pop
xor
or
fwait
sti
jmp
fldcw
push
dec
es
int3
sti
movsl
jbe
adc
inc
xchg
je
or
dec
xchg
adc
mov
add
inc
dec
and
add
pop
jno
dec
inc
stos
and
sahf
fxch
stc
and
out
or
jne
bound
xor
fsub
add
popl
mov
outsl
xor
mov
add
push
cmp
fcmovnu
out
in
inc
xor
mov
sub
rcll
add
inc
in
mov
aad
add
add
add
adc
xor
mov
dec
jecxz
sub
jp
sahf
out
and
push
inc
add
inc
or
mov
jg
fxam
fistpll
fldenv
in
and
mov
popa
push
shl
push
inc
int
incb
hlt
push
cmp
pop
cli
sarb
or
lea
push
lret
push
sub
jmp
pop
mov
mov
test
mov
push
movb
add
fimull
cli
xchg
lahf
ljmp
fnstcw
xor
mov
mov
push
call
subb
cmp
add
mov
divl
inc
inc
into
test
dec
dec
insl
and
pop
mov
testl
add
pop
mov
jnp
and
and
mov
aam
add
pop
xor
add
mov
or
mov
out
jp
add
push
push
push
push
shlb
ja
dec
call
xor
rolb
and
lcall
out
or
add
enter
sahf
out
movsb
sub
js
cmp
daa
push
mov
lret
sti
int
inc
and
sub
call
sti
clc
add
bound
jmp
jns
stc
fmulp
push
test
sub
or
mov
cmpsb
mov
ret
out
fidivs
and
ret
xchg
fstps
inc
in
lods
data16
pop
fs
lods
out
call
cli
xor
loopne
rorl
rcrl
icebp
xchg
data16
pop
mov
cltd
in
int3
idiv
fidivl
adc
and
jne
mov
pop
and
fbld
xor
fists
mov
out
and
aam
mov
mov
sub
or
add
dec
cmp
and
sub
sub
out
add
pushf
flds
jmp
inc
sbb
fisubrl
sub
mov
mov
jno
sahf
ficompl
int
mov
gs
mov
xchg
mov
add
std
or
out
pusha
fs
add
imul
pop
lods
outsb
or
sbb
jmp
jb
shll
mov
movsl
xchg
cli
call
add
cmpsb
cld
decl
add
push
xchg
dec
push
call
pop
and
adc
cmp
ljmp
gs
aaa
repz
jno
lea
ljmp
jecxz
mov
sti
pusha
je
jne
adc
mov
mov
ret
pusha
add
sbb
jmp
push
and
call
sbb
adc
leave
and
pop
leave
and
bound
inc
inc
insb
sub
adc
leave
adc
jg
jp
popf
sbb
arpl
mov
xor
arpl
mov
adc
jmp
inc
jo
xchg
adc
aas
or
jmp
or
lods
pop
push
mov
ja
js
lret
int
push
push
ret
inc
mov
add
or
xor
or
mov
push
xchg
rcr
fldcw
out
cld
xor
sbb
xor
mov
fstpl
add
mov
and
add
pop
cmp
cmp
hlt
iret
or
jb
add
iret
out
mov
jg
sub
clc
mov
rcl
stc
mov
leave
cli
insb
dec
xchg
jmp
push
pop
sbbl
push
push
sub
push
mov
lret
xchg
test
into
add
mov
add
lods
iret
subl
xlat
inc
adc
add
dec
stos
cli
cld
and
mov
cltd
push
repz
hlt
and
or
fadds
jmp
popa
pop
push
or
inc
lret
dec
jb
ret
pusha
flds
fiadds
xor
add
and
xchg
mov
jmp
loop
or
add
fnsave
out
hlt
loope
inc
jmp
jle
cmp
push
add
lgdtl
insl
add
popf
loop
icebp
xchg
sub
add
push
pusha
shrb
add
test
xor
mov
enter
into
pusha
enter
shlb
pop
inc
and
lahf
inc
and
add
add
fldl
add
xor
adcb
push
aam
or
jmp
sbb
pushl
aam
jne
sub
push
in
out
adc
std
test
sti
fistpll
pop
jp
adc
bound
xchg
test
xchg
mov
movb
ret
fistpll
daa
mov
test
add
jbe
mov
repz
ja
idivb
bound
or
imul
pop
cli
fimuls
movsl
lds
hlt
in
push
xor
cli
popl
inc
bound
stc
xorl
cmp
bound
repz
dec
push
dec
xchg
dec
cltd
mov
test
fwait
in
add
pop
mov
xor
add
add
int3
das
jp
adc
cmpsb
cmc
xlat
jl
cmc
fistpl
jmp
or
fistps
es
cmc
out
fwait
js
call
adc
sub
hlt
jg
pop
popf
cwtl
push
mov
fiaddl
pop
xor
jge
adc
push
movb
inc
and
cmp
lods
mov
xor
add
out
ret
push
pop
sub
sbb
hlt
add
add
sbb
mov
sub
icebp
stc
xor
shll
inc
int
add
neg
push
dec
or
mov
xchg
xchg
out
mov
insb
dec
cmc
adc
int3
sub
jmp
inc
push
jle
movsl
outsl
add
push
add
add
fimuls
push
out
and
fs
lea
push
mov
pop
and
dec
pop
jl
fiaddl
test
fildl
add
out
and
adc
je
lock
das
inc
dec
testb
xor
cmp
push
and
xor
daa
push
rorl
mov
add
leave
imul
sti
int
sbb
lea
add
add
mov
sbbl
incb
pop
mov
add
adc
inc
cmp
incl
xor
sti
call
add
and
out
rorl
jae
xchg
ja
ds
add
int
dec
cmp
push
sar
es
cs
cld
decb
xchg
fmuls
ja
out
aas
bound
dec
and
aaa
dec
and
bnd
xchg
mov
out
into
call
cmp
ret
or
add
imul
in
lea
aaa
xchg
ss
shll
jle
pop
aaa
xchg
pop
aas
jle
popw
xchg
sbb
cmp
cmc
fildl
ds
pusha
movsb
out
pusha
mov
out
pop
lods
out
out
movsl
andb
data16
xchg
bound
pop
lock
mov
loop
sub
call
mov
fistpll
pusha
mov
je
call
bound
mov
inc
flds
arpl
mov
stos
pop
fsts
fcoms
std
pop
push
add
and
sbb
push
xchg
sti
jae
sbb
add
ds
pop
sub
jmp
sbb
shl
jmp
in
or
rcl
push
jmp
mov
sub
bound
out
fbstp
adc
push
push
arpl
cmpsl
push
add
pushw
mov
pop
loop
popl
add
or
add
push
data16
push
ret
mov
cs
push
test
enter
add
in
repnz
mov
mov
lcall
fmull
imul
cwtl
popf
pop
jecxz
fstp
rorb
or
inc
mov
sub
push
shll
add
jo
fld
xchg
push
mov
lods
scas
leave
pop
roll
pop
bound
jl
mov
sarb
pop
clc
and
and
ret
pop
jmp
cmp
es
insb
popa
sbb
shlb
xor
xchg
aaa
mov
cli
mov
xchg
out
ss
jg
and
jns
push
xlat
xchg
int3
mov
mov
stos
jl
push
inc
cmp
adc
add
add
add
add
mov
mov
sub
mov
push
fs
mov
xchg
cmp
xchg
push
pushf
fildll
mov
add
xor
incl
fsubs
push
repz
fwait
mov
mov
mov
sub
out
mov
fsubs
jae
out
fdivrp
mov
add
in
fdivrp
mov
fnstenv
loope,pt
in
in
or
arpl
out
es
mov
jl
std
scas
jl
cld
mov
fldcw
jle
jmp
lods
popa
aam
sbb
sub
and
cmc
out
jae
loop
xor
popa
aam
imul
jmp
push
out
out
xor
add
xor
jmp
fisubs
and
jmp
js
add
std
adc
test
dec
xor
sub
push
inc
or
insl
push
inc
int
pusha
inc
in
fcomps
insl
ret
inc
add
lret
addl
xchg
outsl
mov
rorl
out
add
inc
mov
inc
sub
inc
or
fiaddl
sysexit
out
std
shr
add
inc
es
cltd
nop
pushf
sar
inc
out
jl
pop
test
mov
pop
add
mov
add
mov
mov
xchg
push
push
and
daa
rorl
aas
inc
sub
jmp
jmp
cld
decl
xchg
mov
mov
xor
bound
jp
arpl
adc
push
mov
movsb
repz
mov
mov
mov
loope
mov
mov
int3
add
lock
mov
dec
loope
arpl
xorl
add
out
and
mov
ljmp
loope
arpl
out
dec
enter
jmp
fstpt
stc
out
out
je
jbe
xrelease
aad
sti
inc
add
fsub
add
xor
add
mov
xchg
lret
pop
add
in
in
int3
xchg
dec
jecxz
cmc
xlat
out
fldt
add
add
and
add
and
xchg
lahf
addr16
inc
fldcw
jmp
or
ficoml
outsb
xchg
in
jmp
push
fidivrl
loop
sub
inc
shlb
push
xor
and
int
sub
and
cs
mov
pusha
flds
into
jmp
adc
xor
dec
or
cli
push
add
push
jecxz
cmp
jecxz
xor
sar
pop
push
lds
imul
repnz
dec
call
or
or
clts
dec
add
jnp
jne
mov
orl
mov
loope
and
sbb
and
xchg
inc
and
add
add
add
xlat
mov
and
fdivrs
and
loop
sub
sti
dec
pop
pop
adc
or
and
movd
add
lret
and
mov
mov
les
add
ja
or
fld
cmp
inc
add
in
cmp
push
lea
xlat
add
bound
cmp
jo
je
xorb
fadd
inc
inc
mov
incb
cmpsb
xchg
xchg
ss
bound
jp
xor
jle
hlt
inc
cli
or
jl
rolb
or
jmp
sub
test
bound
jmp
mov
push
pop
addl
dec
pushf
push
jg
rorb
jmp
fisubl
jmp
cmp
and
leave
and
loope
xor
mov
mov
bound
call
iret
out
inc
sbb
bnd
or
mov
cmc
ret
mov
in
and
xor
fstps
push
or
cli
lods
pop
cmpsb
add
cmp
cmc
adc
call
fsts
fucom
cltd
sbb
das
pop
addr16
inc
ret
push
fstpl
add
add
xchg
fdiv
xchg
jl
aas
jo
cld
adc
ficompl
jmp
pop
call
xchg
cmp
cld
and
sub
jnp
repnz
lcall
cld
sub
sbb
xchg
or
dec
sub
pop
insb
sahf
xor
cld
sub
lret
sahf
or
data16
jb
inc
add
popa
clc
dec
in
adcb
mov
sub
sti
and
xchg
sti
sub
mov
cmpsl
fdivrl
mov
faddl
loope
int3
enter
rolb
push
adc
push
jge
mov
add
add
sahf
cli
push
cmp
mov
dec
fildl
pcmpeqw
cld
rcrb
rolb
fisttpl
and
fidivrs
rorb
cmp
aam
sti
dec
adc
push
sub
dec
push
and
dec
add
xchg
jmp
mov
addr16
xchg
add
cld
and
mov
or
push
jmp
std
jp
jmp
mov
bound
xor
mov
cmp
mov
test
add
fnstenv
fstpl
jmp
ret
mov
add
and
adcl
jg
lea
cmp
and
xor
push
arpl
jmp
pop
leave
bound
sub
fsub
add
add
dec
adc
dec
mov
jp
popf
pop
mov
call
enter
aad
sahf
pushf
sub
fsub
add
add
push
jle
testb
and
popf
xlat
dec
mov
fsubp
jg
popf
je
fistps
jmp
sbb
insb
push
push
push
jmp
inc
add
out
dec
in
mov
add
add
push
lea
fcoms
xchg
mov
test
mov
pushf
das
mov
sbb
jmp
dec
flds
insl
pop
call
add
jmp
pop
addr16
jmp
mov
jmp
popf
mov
flds
pusha
in
dec
call
popa
flds
jb
hlt
pop
call
popa
flds
sbb
or
xchg
cmp
call
push
lahf
mov
pop
mov
mov
ja
add
jp
ret
and
ljmp
into
test
xlat
add
mov
push
mov
cmp
push
divb
adc
and
jne
push
mov
xor
test
idiv
inc
push
daa
sbb
dec
xlat
add
mov
fdivrs
add
jl
iret
mov
inc
add
xlat
addl
dec
add
fs
add
pop
or
add
loop
add
xchg
xchg
std
jmp
adc
mov
jle
scas
xchg
addr16
in
or
cmc
inc
cmpl
pop
cli
mov
ss
imul
nop
push
negb
mov
inc
xchg
mov
dec
mov
sub
nop
bound
decl
bound
andb
out
bound
call
jns,pt
add
insb
and
cwtl
popa
cmpb
add
je
out
out
in
mov
push
fistl
or
adc
inc
adc
dec
pop
arpl
mov
mov
in
adc
dec
fstl
pushf
jge
sbb
int3
cmpsl
mov
pop
call
and
add
pusha
pusha
add
flds
pusha
ljmp
jne
imul
add
test
push
cltd
or
mov
in
shlb
jge
arpl
xchg
xor
mov
inc
jmp
push
pop
or
lds
add
sti
popf
push
xor
cli
jge
xor
mov
cmp
add
ss
adc
mov
push
je
inc
rolb
add
add
or
cld
lcall
adcl
mov
cld
shrb
add
or
cmpl
popa
and
mov
dec
jo
imul
and
faddl
add
pop
cli
cmp
add
loop
jnp
fildl
pmulhw
cld
shrb
add
js
cmpl
mov
push
rcrb
cmp
sbbl
fildl
add
jp
sub
ja
xchg
sti
adc
je
sub
mov
mov
pop
add
ljmp
jmp
cmp
loop
add
adc
push
lods
sub
pop
arpl
rolb
bound
rolb
bound
jmp
rcr
mov
jns
and
incb
push
fxch
out
call
dec
popf
add
lods
add
sub
add
cld
jg
jns
xchg
outsl
cmpb
jmp
aam
xchg
jl
ds
add
stos
mov
xchg
mov
add
pop
and
fsub
add
bound
ja
cwtl
jecxz
sbb
out
pop
dec
mov
imul
or
fcomps
js
xchg
add
scas
or
fimull
push
and
enter
aaa
popf
or
add
add
add
popa
sbb
mov
inc
flds
push
xchg
sti
popf
dec
xor
push
push
dec
and
mov
mov
stc
pop
pop
xor
lret
pushf
xor
test
popa
roll
cli
sub
inc
dec
call
es
repnz
aad
or
bswap
mov
add
int
cld
rcrb
and
mov
push
adc
fidivrl
leave
mov
mov
movsb
add
or
add
pushf
push
and
pop
and
mov
pop
lea
fadds
add
flds
pop
les
xor
mov
adc
lret
xlat
cmp
les
and
mov
adc
mov
cmp
test
adc
jnp
cmp
fistpll
je
scas
add
push
add
inc
mov
rcr
xor
add
ja
adc
stc
mov
inc
jb
les
dec
mov
add
movsl
mov
gs
stc
shrl
flds
decl
add
sub
mov
bound
jnp
push
enter
roll
cmp
and
testl
in
in
pop
xchg
cmc
shll
call
andl
pop
mov
lret
mov
mov
xchg
add
adc
xrelease
fnstcw
sahf
mov
aaa
add
repnz
ret
jae
xor
push
leave
xchg
push
push
stos
push
mov
lahf
jg
mov
daa
test
fsts
jge
mov
add
popa
pop
pop
popa
fsts
stos
mov
mov
pop
xchg
rolb
xchg
pop
flds
cs
mov
call
jp
add
popa
addl
sub
adc
popa
flds
jmp
ljmp
or
popa
fnstenv
ds
add
or
mov
and
jmp
add
es
xlat
adc
outsl
faddl
fldl
fldcw
pop
jnp
dec
lea
add
add
call
test
test
sub
add
cmp
dec
sbb
fmuls
cmp
faddl
mov
ret
mov
stos
pop
sti
fldt
ror
shlb
inc
add
sub
add
xchg
jmp
cmp
test
ljmp
cld
or
add
leave
add
add
pop
dec
pop
jecxz
dec
jbe
inc
ret
bound
repnz
into
add
add
sbb
shrb
repz
inc
push
test
dec
adc
fbstp
or
sti
cmp
cmp
push
rcrl
leave
incl
call
jg
das
gs
and
inc
push
sub
xchg
cmpsl
jno
push
rclb
add
add
xchg
jno
push
sar
jo
jnp
aam
dec
fldcw
cmp
mov
jo
bound
or
stos
cld
and
jne
out
adc
adc
outsl
cmp
data16
jno
push
sub
out
ljmp
ret
imul
bound
pop
jge
shlb
adc
inc
mov
add
add
cmpsl
add
add
ds
bound
loopne
fcomps
dec
sti
mov
outsl
sub
push
fnop
add
lea
mov
sbb
sub
test
in
mov
xchg
push
jb
popa
fsts
sbb
xchg
jmp
insb
es
lret
flds
fs
and
out
fsubrl
and
popa
push
repnz
or
add
jo
inc
shlb
or
scas
inc
loopne
mov
and
mov
insb
cmp
sti
dec
les
fcmovnbe
sub
inc
mov
xor
test
lea
mov
xor
inc
adc
ljmp
data16
add
add
adc
add
outsb
or
xchg
push
cmp
jnp
scas
fadds
add
into
loope
inc
inc
add
aaa
nop
sub
jp
add
inc
or
cmp
mov
add
xor
adc
sbbl
insb
sti
or
nop
int
add
add
adc
add
hlt
imul
pop
xor
addb
stos
shlb
inc
lds
add
jnp
cmp
mov
hlt
sub
cmp
in
push
add
mov
or
ds
add
jb
or
les
xor
aaa
sbb
xchg
aaa
inc
sub
sub
outsl
inc
and
sbb
jns
fdivr
les
arpl
sbb
pop
fcomps
shlb
daa
add
insb
cltd
push
adc
xchg
imul
popa
jb
xor
pop
stos
iret
jl
pop
int
push
xor
adc
pop
les
aad
movsl
cmp
mov
pop
inc
out
js
add
add
fsubr
cld
loope
jmp
bound
mov
inc
testb
es
sub
cmc
data16
mov
cs
cli
xchg
notb
rolb
sub
xchg
ss
mov
jge
rcl
test
push
lret
jmpw
clc
cli
ret
or
mov
outsb
imul
push
ficoml
inc
jmp
or
mov
enter
aam
insl
mov
sbb
stc
in
out
adc
or
add
or
cmp
or
sub
sti
fdivrl
sub
add
inc
rcll
pusha
int3
pop
adc
sub
mov
cmc
decl
mov
sldt
add
push
mov
jmp
cmp
and
cmc
decl
add
or
jle
cmp
test
test
add
enter
mov
mov
test
or
bound
testl
in
xor
pop
bound
jge
cmpsb
push
add
sbbb
rolb
divb
bound
pop
xorb
out
push
add
das
bound
mov
loope
data16
jne
mov
stos
cmpsl
push
add
sub
xorl
push
or
enter
hlt
insb
and
cmpsl
imull
add
push
insl
sbb
out
push
fld
add
gs
dec
es
mov
je
flds
out
loope
mov
and
jg
subb
bound
imul
xchg
test
loop
or
cmc
clc
jecxz
std
add
insb
add
fidivrl
in
add
add
add
pop
add
add
mov
jl,pn
and
popa
rolb
add
cli
push
and
out
cld
jge
mov
es
stc
jecxz
add
loope
rolb
or
fadds
jmp
cmp
mov
xor
cld
popa
cltd
clc
cmp
test
jmp
call
add
movsb
popa
push
dec
or
push
mov
cmp
test
fmull
js
add
aas
loopne
jmp
mov
dec
out
addb
pusha
jg
push
xlat
inc
jb
push
and
lcall
lea
cmp
jae
cmp
mov
lret
fadds
cvtps2pi
xor
add
add
pop
jge
test
pop
xchg
lret
sbb
push
adc
ss
add
fdivrs
and
mov
and
incl
mov
inc
sub
jge
and
jno
jns
call
sbb
xor
or
icebp
cmpsl
jbe
jb
shrb
and
or
and
add
add
stc
shll
jle
dec
or
test
inc
inc
fstpt
jmp
push
arpl
xchg
fimuls
push
xor
push
call
out
hlt
xor
jmp
mov
and
popa
push
or
sbb
fstpt
je
gs
add
imul
out
out
ret
add
cmpsl
pop
mov
dec
shll
out
cmpsl
dec
pop
pop
iret
jne
fistps
out
aad
add
mov
push
and
jnp
mov
pop
inc
fcomi
add
pop
sbb
adcl
adc
jmp
inc
cltd
push
aas
lods
push
mov
add
add
mov
out
sbb
loope
into
mov
xor
jle
mov
push
shll
mov
push
fsubrl
stc
mov
and
and
test
sbb
stos
inc
fwait
mov
out
ja
data16
mov
jmp
bound
add
jbe
shll
cli
cmpsb
add
xchg
cmp
aas
pusha
mov
adc
push
xchg
mov
lret
xor
in
jns
dec
fldl
pmulhw
jp
inc
popf
lret
loopne
test
stc
inc
xchg
add
xchg
inc
and
push
dec
and
pushf
mov
xor
insl
adc
inc
pop
mov
enter
in
mov
mov
sldt
add
aaa
insb
or
lret
dec
test
add
jnp
popa
adc
call
xor
jl
aas
adc
incb
arpl
call
jmp
jmp
mov
ljmp
add
lahf
jno
add
xor
add
lahf
mov
js
gs
lcall
std
sahf
cwtl
push
arpl
arpl
pop
loop
loope
add
inc
jecxz
inc
mov
insl
push
or
andb
adc
jmp
fdivs
inc
mov
aaa
xor
inc
mov
pushl
inc
mov
insl
xor
cmpsl
in
jg
test
cmp
dec
cmpsb
bound
add
add
mov
call
rolb
fisubl
or
jle
popa
jns
mov
add
fsub
add
xchg
daa
jb
xor
push
and
adcb
pop
into
arpl
arpl
out
adc
jo
and
adc
mov
and
and
mov
xchg
scas
xor
add
jge
jo
cli
out
jge
in
jge
cmp
jb
mov
call
jge
or
add
adc
add
push
mov
out
fstp
in
cmp
lds
lret
add
cmp
xor
jmp
rcl
jge
data16
fmulp
jge
add
mov
add
add
test
inc
pop
mov
push
cmp
mov
push
inc
and
pop
jge
xchg
flds
call
roll
rclb
pop
dec
flds
inc
ret
xor
inc
divl
push
aam
mov
add
fmuls
scas
mov
add
fprem1
mov
cmp
or
aad
incl
add
add
popl
push
mov
xchg
add
bound
inc
jle
adc
mov
popf
out
fidivrl
testl
fxtract
in
push
shlb
ret
stos
loopne
aam
pop
sti
pop
pop
cmpsl
clc
push
jmp
mov
sub
cli
cmp
stc
shll
xlat
dec
jl
xlat
mov
or
add
add
or
ds
or
jmp
or
and
xchg
inc
jp
inc
dec
or
andl
xorl
cmpsl
mov
mov
sbb
out
cmp
fiaddl
pop
inc
out
es
arpl
sub
movsb
cld
daa
add
pop
enter
loopne
add
add
dec
push
pop
cmp
lock
insb
sub
push
lods
daa
dec
sub
add
outsb
aaa
stc
inc
int3
mov
call
pop
push
mov
xchg
pusha
flds
cwtl
ficoml
cli
xor
cltd
or
add
fimull
sub
add
mov
repnz
adc
in
jo
add
add
add
jge
cmpb
cmp
add
test
and
inc
in
pop
dec
je
cmpsb
jle
mov
mov
call
xchg
add
in
or
xchg
cs
inc
fsts
cmp
insl
insl
mov
call
cld
push
dec
xor
arpl
rclb
addl
xor
add
add
aad
jmp
lods
addr16
add
sbb
mov
mov
adc
test
fsubr
adcb
aad
mov
aam
mov
sarl
mov
popa
les
loopne
pop
mov
fiadds
loop
call
jge
sub
or
fsubs
pop
rol
inc
nop
and
mov
add
add
sbb
cmpsl
fcmovnb
and
enter
shlb
inc
xchg
mov
das
mov
fiaddl
ficomps
inc
pop
mov
mov
into
and
inc
pop
cwtl
outsl
cwtl
nop
bound
and
roll
out
or
add
out
mov
bound
add
sahf
fdivp
mov
fisubs
xchg
clc
or
test
mov
bound
pop
fs
dec
bound
ljmp
push
lea
push
or
call
add
fs
jl
es
add
add
pop
pop
push
jge
outsl
rolb
mov
mov
add
mov
out
xchg
inc
ja
test
mov
mov
inc
jmp
or
je
fildl
push
push
int3
or
ja
pop
jge
or
pop
mov
jmp
lods
fdivrs
adc
gs
jb
mov
sub
pop
pop
imul
push
or
insl
insl
adc
mov
sbb
add
jb
int
flds
jmp
adc
sub
add
ret
jb
mov
jecxz
add
flds
mov
cs
adc
dec
call
adc
cli
mov
inc
add
add
add
fnstenv
mov
test
sbb
mov
cmp
fiadds
jmp
adc
inc
mov
add
and
idiv
mov
inc
mov
adc
mov
push
cmp
pop
addl
add
push
addr16
inc
and
insb
adc
outsl
imul
cmp
rcr
imul
sbb
add
add
sbbl
and
shlb
ja
or
sbb
imul
add
add
sub
and
andl
mov
and
bound
push
aaa
stos
xchg
orb
cmp
ficomps
mov
push
mov
mov
cmp
mov
add
add
add
fnstcw
add
fsts
jle
jmp
dec
or
inc
push
or
push
filds
add
je
mov
sbb
setge
inc
insb
push
int
add
jae
frstor
iret
cmpsl
ficompl
sub
and
repnz
je
push
jnp
mov
and
add
add
add
jecxz
scas
in
mov
pop
mov
int
sbb
sub
orb
in
mov
or
arpl
inc
or
sbb
or
jp
fisubl
sbb
cli
mov
out
jb
inc
bound
in
sbb
add
add
sbb
mov
mov
fidivs
loope
sbb
inc
jmp
sbb
out
fdivl
fiadds
dec
pop
push
and
fnsave
add
addl
push
push
inc
not
cmp
shll
setne
cli
inc
xchg
inc
push
adc
jp
sbb
test
mov
add
add
add
js
repz
xchg
fildl
add
rolb
xor
icebp
pop
add
jno
dec
pop
loop
invd
add
jnp
jbe
jnp
sbb
inc
imul
bound
incb
sub
cmp
sub
movsl
pop
jno
les
movsl
jle
subl
add
subl
and
inc
jge
outsb
or
pop
std
pop
cmc
pusha
cmp
and
lret
mov
sti
popa
pushf
pop
loope
cmp
mov
or
gs
decb
jbe
or
dec
or
out
xlat
inc
loopne
push
insb
xchg
add
int3
jno
xlat
subl
mov
out
imul
add
testb
movsb
daa
outsb
sbb
inc
mov
inc
jge
outsl
call
pop
loop
in
fadds
sbb
arpl
mov
push
mov
imul
outsl
call
xchg
push
push
pop
daa
out
and
loope
out
testb
add
add
shlb
push
testb
add
bound
sti
popa
flds
pusha
sub
nop
je
cli
jmp
sub
mov
flds
and
add
push
jl
dec
arpl
test
adc
clc
or
fdivrs
mov
add
in
psubsw
inc
int
scas
xchg
mov
call
mov
jge
xor
call
and
imulb
jb
add
add
stc
or
jnp
cmp
iret
pop
adc
dec
in
inc
and
lcall
xor
fiaddl
xor
mov
xor
add
xchg
add
fidivl
pop
aaa
fnstcw
dec
or
aad
xorl
pop
mov
and
rcr
add
flds
call
push
adc
repz
and
fdivrl
add
sarb
fs
rcrb
scas
add
pop
pop
push
ja
lcall
ja
cs
jbe
arpl
repz
enter
jnp
xchg
pop
and
and
inc
inc
outsb
pop
shlb
repz
pop
pop
jbe
jg
push
decb
lods
ja
inc
ss
js
arpl
cmc
call
test
inc
jle
pop
mov
bound
daa
jge
mov
or
adc
jb
mov
mov
pop
xor
add
mov
jecxz
push
leave
out
in
int3
testl
addb
fsts
inc
mov
mov
jmp
test
les
jl
aaa
dec
stc
in
fdivrl
fcmovbe
cmp
sbb
inc
imul
movl
sub
or
cs
lcall
cmp
popa
ja
push
inc
std
mov
leave
or
add
ficoml
inc
lds
mov
mov
mov
xor
movb
add
out
rolb
in
pusha
mov
out
in
adc
popa
push
inc
add
cmp
addb
jp
add
mov
mov
test
div
cmp
test
add
addr16
clc
mov
push
jno
add
addr16
or
cmp
orl
pusha
add
dec
pop
jbe
cmp
push
lea
call
test
sub
xlat
mov
jmp
roll
jo
insl
pop
xchg
fnstenv
inc
outsl
orb
dec
xchg
cmp
orb
mov
addl
push
xchg
push
jle
lret
sti
and
cmp
cs
push
add
push
loopne
mov
pop
ds
idivl
mov
fsincos
and
aas
jmp
and
ret
ds
add
das
sti
push
xchg
mov
cli
push
xchg
mov
mov
into
add
jns
cmp
fs
sbb
cmc
add
mov
xor
and
imul
popf
fptan
add
fwait
aad
and
add
mov
inc
and
cmpsl
push
insb
cli
fdivrs
dec
cltd
jb
dec
cltd
push
add
inc
mov
lods
push
mov
push
adc
test
mov
and
cmc
push
xchg
pop
das
out
cmp
hlt
hlt
je
adc
pop
pop
mov
sub
push
fs
add
pop
push
std
xchg
adc
movsl
fsubrs
cmp
add
adc
flds
out
loop
stc
push
sbb
add
mov
mov
sub
aaa
adc
xor
inc
sub
repz
mov
test
sbb
cs
cli
mov
cmp
jmp
test
cli
sub
iret
adc
fwait
bound
lret
insl
out
mov
mov
out
or
adc
clc
or
loopne
mov
add
hlt
out
xor
cmp
stos
jl
mov
in
and
add
pop
subl
pushl
pop
test
idiv
cmp
clc
pushl
arpl
xchg
adc
jbe
jle
mov
idivb
test
dec
incb
cmp
stos
jl
loop
clc
call
in
and
add
add
push
addl
incl
cli
addb
add
test
push
mov
jle
insb
lret
std
std
jmp
jnp
in
dec
aas
and
jl
enter
into
or
xchg
or
push
inc
jbe
sti
add
jnp
lahf
jle
aas
and
and
jle
inc
sti
cmp
inc
sti
insl
jle
pop
fnstcw
cli
or
daa
dec
sti
dec
mov
ss
sahf
push
jl
dec
cmp
in
pop
mov
hlt
inc
or
fldz
jp
lods
push
add
loop
mov
pop
ljmp
sti
inc
xor
xlat
push
fs
gs
stos
fucomp
add
pop
orl
cmpsl
shll
test
rcrb
cmc
ljmp
sub
jp
lods
mov
orb
mov
and
mov
popf
inc
dec
mov
fimull
xor
call
mov
and
fstl
data16
push
loopne
jl
hlt
push
and
xchg
sbb
jmp
and
or
fmuls
push
mov
jl
fsubrp
adc
jmp
inc
roll
insb
popa
or
imul
push
sub
flds
jmp
popa
fldenv
or
cli
push
addb
mov
mov
add
dec
and
call
pop
add
add
add
xlat
dec
mov
ret
pop
mov
push
test
add
jo
push
sub
push
mov
divl
loope
jmp
ret
insb
dec
and
pushl
pop
add
cmp
add
sbb
testb
jns
mov
dec
out
sbb
add
loope
popa
ret
add
add
sub
bound
movsl
insb
cmc
mov
jmp
sbb
pop
arpl
ljmp
mov
loope
fiadds
bound
std
xchg
xorl
and
testb
stc
imul
jnp
push
push
inc
jns
jle
jmp
ja
jle
scas
or
cmp
dec
movsl
mov
decb
int3
fists
lods
add
bound
push
jne
call
xchg
jno
call
pop
call
cmp
mov
cmp
mov
sub
fstps
and
push
fldl
fsubl
out
add
fimuls
jno
jns
jns
fldt
and
es
adcl
ss
pop
loopne
rclb
mov
cmp
js
mov
mov
in
adc
mov
lods
jne
sub
push
add
inc
ds
add
and
sub
idiv
inc
arpl
jmp
inc
add
jmp
add
pop
xchg
mov
call
add
add
add
mov
jbe
xorb
push
fsubrp
xchg
add
popa
mov
test
fadds
jmp
sbb
test
flds
in
dec
call
out
add
push
and
pusha
jmp
add
jnp
bound
repnz
stc
fstl
cld
add
pop
mov
pop
call
sbb
incl
add
add
dec
test
fiaddl
add
dec
decl
push
add
fiaddl
je
xchg
jmp
mov
inc
add
fiaddl
add
and
mov
mov
mov
or
fiaddl
inc
lahf
jb
lea
out
push
jp
add
bound
push
call
fbstp
adc
int3
call
pop
arpl
cli
cmpsb
mov
aas
xchg
cmpsb
aas
mov
mov
jmp
push
sti
mov
add
mov
jno
cmpsb
jno
std
cmp
pop
arpl
cli
mov
loopne
bound
fwait
mov
and
sti
fistpl
loop
jns
mov
dec
arpl
xchg
xchg
sbb
add
add
sti
push
call
out
cmpsl
mov
inc
push
sub
cmp
adc
in
sub
add
fimuls
sub
mov
cli
fnstenv
adc
jge
sub
cltd
int3
jmp
pop
imul
mov
push
test
lock
insb
call
mov
or
add
add
add
pop
pop
leave
and
out
movsl
add
js
std
call
call
cltd
and
add
cmp
out
push
shr
pop
cld
xor
pop
add
push
pop
add
jb
add
loopne
jl
push
push
out
popa
fnstenv
xchg
pop
flds
ret
inc
call
dec
pusha
cli
push
add
add
filds
neg
je
jmp
sbb
mov
or
popa
movsb
pop
lds
jns
ja
lods
shlb
mov
mov
sub
aas
add
aam
sysret
in
add
aam
add
adc
push
call
jo
add
adc
dec
xlat
add
addr16
add
sahf
mov
jg
add
int3
loope
pop
cmp
add
jbe
cmc
incl
mov
jl
pop
and
vpexpandb
sbb
mov
imul
mov
jb
shll
test
and
mov
jae
inc
bound
xchg
stc
inc
jle
mov
jnp
jo
pop
dec
or
aas
arpl
jno
add
add
inc
inc
jmp
loopne
and
mov
adc
or
bound
test
jmp
test
into
push
sub
jo
xchg
mov
fnstenv
aad
into
lret
loopne
bound
mov
and
jmp
jb
xchg
dec
push
push
sti
aad
cmp
sti
movl
add
add
mov
mov
outsl
dec
add
fldenv
sbb
ljmp
sbb
mov
add
std
rcl
pop
lret
fidivs
das
fwait
fs
jne
adc
push
call
out
cwtl
fcoms
cmp
out
mov
fucomp
cld
mov
shr
bound
cltd
add
add
add
mov
dec
cltd
xchg
rcr
lea
flds
jmp
ret
call
js
and
push
xor
pop
call
xorb
dec
push
test
sub
cld
pop
call
push
pop
dec
add
jbe
mov
pusha
flds
loop
les
push
push
cli
xchg
pop
mov
sub
add
add
pushf
and
push
flds
call
sbb
push
mov
or
add
aam
cli
add
push
add
fildl
and
faddl
add
add
add
adc
test
xchg
jmp
add
and
mov
add
push
adcl
push
pop
cmc
add
add
xor
mov
loopne
or
leave
add
adc
js
or
addl
jmp
push
mov
fildl
add
dec
sti
scas
add
sub
inc
inc
int3
loopne
arpl
cli
out
sbb
add
es
out
test
add
add
aaa
sti
fld
loopne
arpl
aas
mov
mov
std
dec
inc
dec
or
cltd
ljmp
sti
dec
aas
jo
mov
dec
jp
pop
inc
incb
bound
mov
out
aaa
mov
in
std
jmp
dec
sti
mov
or
mov
mov
add
jl
cmp
out
leave
mov
sub
and
fistps
xchg
pushf
mov
ret
sti
push
add
fstpl
ret
jp
call
loopne
adc
dec
out
cltd
pop
mov
pop
test
dec
push
pop
rolb
xor
dec
pusha
cmp
and
mov
outsb
dec
or
dec
or
test
pop
pop
data16
flds
pop
stc
lahf
sbb
xchg
sbb
adc
cmpsb
adc
pop
pop
inc
in
flds
int3
fs
cmp
popa
flds
aas
imul
clc
out
pop
insl
out
xor
cli
or
data16
jecxz
pop
fsubr
popa
outsl
jb
add
loopne
or
faddl
add
add
fadds
jmp
popa
fnstenv
push
fiadds
push
movb
sti
dec
push
insb
sbb
mov
cmp
fiaddl
inc
and
add
push
clc
or
jns
imul
mov
mov
jno
jb
je
or
clc
mov
cmp
or
add
add
jg
stc
jle
jle
ja
add
dec
add
and
add
add
push
or
jo
clc
test
xlat
add
lds
add
mov
or
rolb
add
in
xchg
inc
daa
fs
xor
arpl
psubusw
icebp
pop
inc
push
jmp
jmp
add
add
push
or
sub
lcall
inc
jmp
leave
shlb
jb
into
push
jge
loope
arpl
xchg
inc
jmp
in
add
xor
jmp
push
xchg
fld1
add
mov
inc
imul
dec
or
mov
add
lods
andl
add
sub
adc
adc
out
movsb
fists
imul
out
push
std
fisttpl
aas
xlat
pusha
jmp
pop
pop
fbstp
sbb
inc
icebp
test
push
pushf
or
js
lods
call
leave
dec
push
je
test
in
pop
dec
mov
jmp
adc
add
add
push
or
jle
cmc
pop
call
lea
xchg
push
iret
aad
pop
div
lea
mov
inc
or
pop
flds
out
sahf
fnstsw
xchg
daa
xchg
add
xchg
popa
movsl
jae
adc
and
or
and
fs
pop
jecxz
out
xor
cmc
in
lods
and
jecxz
xor
popa
xchg
bound
add
mov
orl
fwait
xorl
repz
testl
test
add
xchg
arpl
shl
out
incl
add
inc
enter
fildl
inc
jmp
scas
inc
mov
sub
add
fisubrl
add
pop
mov
add
dec
xor
mov
add
add
into
rcll
and
mov
add
push
cmpsb
cmc
xchg
add
sti
push
mov
call
jmp
inc
aas
xchg
ja
and
inc
ljmp
sar
movsl
call
or
rclb
fdivr
jmp
sar
mov
jmp
loop
xor
push
arpl
push
popa
lock
lret
sti
lods
lret
mov
and
or
xchg
fbstp
push
test
pop
filds
mov
fcmovnu
inc
mov
in
pop
inc
call
movl
push
mov
pusha
into
fsub
add
xor
xor
bound
fsub
add
lods
call
add
cmp
cmc
dec
xor
mov
out
pop
xchg
inc
cltd
out
push
cmc
stos
add
out
xor
out
fsub
add
rcr
and
xchg
lods
dec
adc
nop
dec
add
dec
sti
das
mov
call
test
push
cmc
pop
call
sbb
jge
mov
call
dec
mov
jmp
pop
flds
ljmp
call
adc
push
movb
sbb
insb
sbb
in
push
test
call
mov
loopne
pushf
pop
cltd
push
cs
pop
call
stos
dec
sti
pop
mov
mov
sti
in
inc
mov
mov
iret
aad
add
dec
inc
xor
add
stc
iret
sub
and
cmp
add
psubsw
cmc
test
dec
jle
cmp
add
rcll
idiv
nop
push
and
inc
dec
cld
mov
aas
add
or
inc
add
pop
cli
xlat
add
lds
gs
cmc
mov
sub
add
les
lret
pushl
xor
add
add
add
mov
jl
add
xor
mov
dec
sub
lds
fnstenv
decb
adc
aas
mov
jns
scas
inc
call
sar
vcvtdq2ps
decb
hlt
rclb
or
jmp
inc
push
or
inc
sub
inc
call
adc
out
cld
test
lods
sub
fbstp
mov
or
jae
sub
fnstenv
add
test
call
movl
sbbl
cltd
out
scas
cmc
inc
add
out
mov
pushf
out
fsub
add
or
rcr
sbb
stos
xchg
fisubrl
dec
fwait
insl
js
xchg
sub
push
jp
insb
call
sbb
inc
imul
out
adc
out
fsub
add
movsl
add
fadds
jmp
les
add
or
fscale
and
fadds
jmp
test
test
mov
out
add
add
ret
hlt
into
jns
inc
or
mov
jmp
pop
popf
jmp
add
cli
out
scas
fstl
roll
pusha
adc
xor
adc
and
je
or
pushf
fdivrl
enter
inc
inc
pop
xchg
add
sbb
inc
lahf
sbb
xchg
fldl
add
sbb
mov
sub
mov
sub
clc
xchg
jae
xlat
sub
dec
pop
and
loope
repz
cli
mov
lds
pop
enter
hlt
jmp
orb
dec
in
push
push
je
push
push
cmp
addl
lds
adc
mov
or
add
add
cwtl
movsb
push
mov
bswap
mov
xor
jmp
leave
mov
and
into
cli
mov
ret
xor
mov
dec
imul
ljmp
xchg
adc
gs
arpl
push
and
xchg
xor
fnstcw
mov
aam
jmp
ror
adc
mov
aas
or
xchg
add
bound
testl
pusha
add
daa
leave
inc
ffree
popf
add
ljmp
rolb
sub
imul
clc
rcll
inc
adc
cmp
addr16
push
push
popf
add
aas
cmp
mov
loopne
push
cmp
jno
sub
cmp
mov
xchg
insb
popl
add
add
add
sub
inc
cmc
lret
pushf
popf
out
sahf
std
mov
sub
pushf
ret
ret
in
add
lods
push
adcb
add
shr
fnstenv
dec
mov
fsubrl
sub
ss
inc
add
int
xorb
add
shr
fnstenv
aam
xchg
inc
jmp
outsb
test
jge
loopw
pop
out
jge
in
or
cli
movb
ds
fsubrl
ds
dec
xchg
ds
or
dec
inc
sti
xor
sti
mov
lret
pop
dec
inc
lret
mov
mov
jp
inc
lret
call
adcl
cwtl
push
inc
mov
add
add
aaa
dec
inc
jnp
inc
inc
jnp
push
inc
mov
push
inc
mov
pop
inc
jnp
pop
inc
jnp
push
inc
dec
sbb
dec
fistl
cmp
cmp
pop
inc
dec
mov
dec
push
pop
inc
cmp
push
inc
cmp
push
inc
or
push
inc
sti
mov
bound
jl
mov
xor
mov
xor
pop
and
jle
and
xchg
pop
and
xchg
xor
and
pop
push
and
mov
jae
xor
inc
and
add
xor
dec
and
into
inc
and
repnz
and
cmp
and
arpl
aaa
arpl
xor
inc
mov
xor
jo
xor
outsb
mov
xor
mov
mov
add
add
dec
jne
out
jae
out
test
out
cwtl
xchg
out
push
xchg
out
arpl
out
popa
fsub
cld
pop
rcr
clc
imul
xlat
adc
cmovg
fimull
jnp
into
or
decb
outsb
in
add
pop
test
filds
ret
lock
lock
js
sub
add
or
mov
jbe
cmc
in
jo
add
or
aaa
repnz
or
in
fwait
inc
xor
add
and
inc
cs
inc
pop
pop
mov
ds
sbb
ds
push
mov
ds
bound
ds
arpl
add
mov
ds
push
mov
ds
stc
mov
ds
jnp
ds
cmp
fs
or
inc
or
inc
sti
lahf
fs
sti
jmp
gs
or
inc
sti
xchg
arpl
adc
addr16
lret
andb
jbe
inc
mov
arpl
lret
pop
inc
mov
pop
inc
mov
inc
mov
inc
jnp
addr16
jnp
inc
mov
gs
mov
inc
jnp
addr16
jnp
in
cmp
faddl
mov
faddl
add
orl
jg
into
aam
loope
call
push
jmp
xor
sub
push
push
jmp
mov
add
mov
out
xchg
ret
push
ljmp
into
fmuls
mov
and
imul
insl
scas
arpl
bound
mov
pop
scas
jnp
bound
mov
sub
add
out
dec
mov
insl
mov
or
mov
lret
fldl2e
lods
push
xor
pop
mov
mov
add
fistl
sub
jmp
add
pop
les
pop
adc
and
loop
and
pushf
test
das
les
cmc
stos
mov
cmc
mov
push
cmc
notl
dec
fsub
add
mov
mov
cmc
sub
fldcw
jp
aam
bound
mov
cmc
out
xchg
ljmp
add
add
add
cmc
pop
call
push
push
shl
sbb
in
fidivrs
add
cli
xor
mov
leave
pusha
push
test
jb
inc
add
fadds
ds
or
shlb
ljmp
add
out
push
and
push
call
test
add
popa
push
test
pop
sbb
jmp
insl
push
lea
xchg
test
inc
or
adc
and
mov
cmp
mov
flds
sbb
daa
lds
add
push
inc
or
dec
test
aad
add
mov
add
aaa
mov
add
fadds
and
add
adc
mov
add
add
jmp
test
add
movl
jmp
xor
pushaw
xchg
or
fistps
loope
std
jmp
mov
xor
jmp
call
mov
or
lea
mov
aas
mov
xorl
jg
push
or
bound
incb
xlat
cmpsb
call
bound
aaa
aas
jmp
loope
bound
out
mov
pop
sub
mov
cmpsb
loop
push
fs
fsub
add
mov
xchg
push
xor
add
xchg
cmp
dec
sub
inc
inc
sbb
pop
repz
cmp
add
add
add
call
add
mov
lds
xlat
lahf
pusha
rolb
call
adc
and
shl
add
iret
in
add
add
mov
int
jb
push
pop
lds
add
add
pop
clc
push
data16
outsb
push
shrb
rol
movsl
cmp
xor
sahf
xchg
and
popa
flds
jmp
dec
jo
and
mov
and
jb
hlt
fs
arpl
inc
fucomi
jl
add
imul
xor
adc
icebp
push
mov
jge
aad
pushl
xchg
filds
push
inc
push
push
mov
imul
pop
loope
out
jle
add
incl
add
fldl
jmp
bound
add
fnstenv
mull
popa
movsl
and
fldl
add
pop
lea
fldl
add
push
jge
xor
and
add
add
in
inc
mov
faddl
add
mov
add
hlt
fwait
xchg
inc
sub
mov
bound
jmp
inc
sbb
stos
lods
add
push
hlt
jle
out
jmp
sbb
outsl
dec
stos
mov
and
ret
xchg
and
xchg
sub
or
mov
add
add
andl
mov
es
and
push
adc
mov
les
pop
loope,pn
adc
jp
call
arpl
fistpll
lods
fists
pushf
fistps
jns
push
call
fisttps
test
sbb
out
jmp
dec
int3
dec
mov
std
jecxz
std
xlat
cmpb
mov
add
je
out
fisubl
mov
outsb
pop
lea
mov
mov
bound
xchg
bound
add
mov
negl
fcmovnbe
stos
and
out
cmpsl
adcl
cli
mov
xchg
dec
in
inc
jnp
pop
add
pop
sarl
add
inc
xlat
test
ja
ss
movl
lock
lods
or
fnstenv
sub
and
negb
pop
insl
add
fcmovu
add
mov
or
add
out
movsb
and
je
jns
or
ss
push
filds
lret
flds
mov
loope
push
inc
jbe
js
xchg
sbbb
cmc
adc
jb
add
mov
adc
maskmovq
testl
out
jnp
add
dec
flds
vmptrld
test
fadds
add
and
dec
flds
cmp
fnstsw
cmp
add
xor
arpl
xchg
cmp
dec
int3
dec
push
and
sbb
push
bound
sub
fwait
int3
mov
pop
jle
jg
aaa
jo
daa
jmp
inc
incb
mov
cmpsl
sub
mov
xor
insb
mov
mov
arpl
mov
inc
cltd
lret
mov
arpl
xchg
inc
or
add
add
push
add
xchg
push
aaa
adc
sub
and
mov
pop
mov
loopne
inc
sbb
add
movsb
mov
mov
xlat
out
aas
xchg
mov
jnp
or
pop
push
sub
cwtl
out
mov
adcb
adc
sar
dec
pop
pop
pop
add
fstps
inc
cmc
repnz
arpl
into
ds
aad
dec
les
pmaxsw
out
imul
je
push
adc
jecxz
mov
sahf
std
repz
std
add
cmp
push
cmp
insl
and
mov
xor
mov
popa
pusha
mov
sbb
and
jns
ret
push
ja
stc
adc
std
movsb
jmp
ficompl
or
popa
flds
push
pop
cs
push
pop
pop
sti
jmp
dec
cs
imul
std
mov
and
sbb
fistpll
add
popa
pop
cli
out
insl
cs
add
mov
add
loope
cmpb
cmp
sti
mov
add
add
sbbl
add
mov
adc
je
mov
je
adc
jae
int3
je
outsl
pop
inc
and
gs
mov
call
push
xchg
add
add
imul
mov
fldl
jmp
bound
fbld
sub
ljmp
adc
sub
pop
faddl
bound
test
add
add
std
xorl
jmp
xor
test
inc
fdecstp
call
sbbb
jmp
aad
or
xor
jle
bound
sbb
jle
pop
lods
cmp
pop
cs
push
cli
jle
inc
xchg
add
outsb
loop
pusha
insl
add
inc
fiadds
bound
test
push
cli
cmp
std
xchg
sub
ss
cmc
xorb
pop
popf
fmull
int3
mov
call
xchg
insb
pop
fbstp
mov
stc
mov
inc
xchg
inc
pop
mov
xchg
call
sti
sbb
cltd
out
cmpsb
fcompl
jle
call
out
fsub
add
pushf
or
out
add
add
add
cmp
adc
jge
test
out
push
fs
out
bound
pop
test
jge
jae
in
add
sub
mov
inc
fnsave
jne
cs
jne
xchg
sbb
push
popl
jne
out
and
call
cli
sahf
call
add
add
scas
push
and
jo
add
add
lcall
enter
xchg
add
stc
push
das
jge
push
adc
or
pop
and
add
cmc
mov
popa
flds
call
loop
mov
sub
inc
stos
add
xchg
int
imul
fiaddl
add
fs
push
jo
dec
adc
add
add
dec
mov
push
push
mov
aad
xor
out
push
test
call
mov
push
in
je
push
divb
inc
and
imul
push
push
shll
divl
or
inc
push
sbb
and
je
lods
lock
stos
push
stos
imul
inc
mov
aas
bound
stc
mov
or
ret
loopne
bound
cli
sub
lods
mov
sbb
sarb
jp
bound
xchg
mov
pop
or
cmc
add
bound
add
bound
add
mov
fsubrp
mov
clc
mov
fdivp
mov
lock
out
loop
adc
aaa
test
add
add
add
pushf
lret
out
out
fildl
jnp
ret
imull
jecxz
fcos
push
hlt
sub
jp
push
loope
call
xchg
inc
stc
ret
int
xor
insl
inc
ja
pop
sbb
movsl
lret
notl
insb
scas
test
push
push
cmc
add
outsl
mov
test
imul
dec
sbb
add
add
push
mov
xor
out
mov
int3
sub
jl
cmc
add
call
pop
jmp
push
notb
dec
push
popf
jmp
inc
ret
push
mov
pop
les
pop
push
test
popa
flds
test
popa
fnstcw
or
add
idivb
aaa
and
inc
jmp
push
xchg
and
push
xor
push
xchg
mov
dec
int
pop
inc
in
add
popa
push
inc
add
or
and
arpl
sbb
sbb
push
xor
push
cmp
and
sbb
sbb
cmp
stos
dec
and
addr16
out
xor
pop
push
rorl
inc
add
add
adc
bound
xor
push
mov
inc
adc
or
mov
cmpl
inc
and
push
out
sti
pop
pop
mov
into
imul
loope
shl
dec
mov
addr16
ljmp
jo
push
das
fwait
bnd
incb
fucomi
jmp
add
jl
std
jae
cmp
and
add
and
add
data16
pop
xchg
jnp
or
inc
mov
mov
xchg
pop
jmp
mul
adc
test
test
out
das
and
inc
mov
add
repnz
add
jle
mov
adc
xchg
and
scas
sbb
movsl
mov
aaa
mov
pop
push
icebp
shrb
push
xlat
lds
jle
add
add
std
jecxz
mov
push
sub
pop
shl
jle
std
jecxz
mov
jg,pn
pop
sub
and
sbb
je
dec
mov
pop
loopne
push
pop
loopne
nop
aaa
mov
add
mov
int
hlt
xor
int3
lock
inc
shrl
inc
loop
ret
fldt
xchg
cmpsl
push
pusha
in
mov
ljmp
stos
lods
daa
push
adc
mov
jne
jle
shlb
inc
add
push
and
mov
stos
and
popa
pop
pop
and
fdivrs
push
fdivr
and
push
pop
out
js
stc
out
out
mov
rcl
cli
into
pop
addr16
jbe
and
insb
sbb
push
sbbl
push
mov
jno
test
stos
not
add
push
sub
rolb
jbe
scas
adc
mov
je
movsl
or
inc
testl
ds
add
popf
je
mov
icebp
sub
sbb
pop
pop
js
cmp
sete
sub
mov
add
cmp
dec
mov
or
outsb
jmp
cld
imul
cmp
push
jo
dec
jmp
cmp
mov
and
inc
mov
pop
pushf
decl
jae
jle
scas
mov
scas
push
movsl
add
push
and
jnp
push
xor
add
pushf
add
lods
dec
adc
je
aam
cli
push
sub
aas
bound
ds
mov
fs
cmpsl
ljmp
push
jge
dec
cmpsl
xchg
daa
jmp
jmp
or
and
shll
rcrb
and
or
out
inc
mov
xchg
fadds
popa
jle
arpl
sbb
lds
leave
pop
test
pusha
pop
fldl
popf
out
hlt
xor
shlb
jg
cmc
bound
sbb
decl
stos
inc
fildll
mov
mov
pop
and
test
add
push
mov
stos
mov
pop
xor
decl
inc
rorb
in
mov
lea
jecxz
lock
add
not
push
sub
data16
jmp
shlb
and
pusha
sub
jl
cli
insl
and
add
cli
pop
stc
dec
pop
and
popa
and
xchg
push
mov
push
cli
adc
fs
loop
sahf
jmp
mov
enter
in
push
popa
xchg
mov
flds
jmp
loope
adc
and
add
ja
add
sti
sub
call
cmp
xchg
push
movsb
call
clc
std
in
push
push
inc
cli
insb
add
cli
scas
jp
inc
jnp
shlb
subl
cmc
out
aam
jmp
adc
je
fnsave
add
cli
mov
add
add
adc
mov
in
inc
mov
push
jb
shlb
sub
add
sti
mov
push
push
ds
sahf
xor
push
repz
sahf
mov
cmp
stos
outsb
stos
xchg
mov
sub
xor
dec
or
pushf
dec
add
add
outsl
adc
aas
bound
jb
jns
add
push
mov
add
add
mov
outsl
shrl
sbb
add
out
orb
xor
cmp
cwtl
stc
and
pop
ljmp
fnstenv
push
or
arpl
jnp
inc
cmp
push
pop
rcrb
cmc
test
push
sbb
mov
sub
pusha
fldenv
push
mov
mov
push
test
negl
insb
les
shlb
int3
xchg
pop
mov
out
ljmp
jo
and
pusha
inc
bound
int3
dec
and
push
dec
lret
push
mov
mov
xchg
mov
imul
sub
add
arpl
cltd
sbb
add
and
cld
int
inc
jmp
pusha
movsl
sbb
sbb
cld
pop
ficoml
cld
cmpsb
pusha
mov
pop
popa
movaps
rcr
jle
pop
popa
movsb
fld1
jp
flds
bound
push
lods
popa
xor
jno
and
call
movsb
test
mov
test
xor
popa
test
fcoms
fdivrl
add
movsl
sbb
add
idiv
or
rcrb
fiaddl
add
fldt
incl
fcoms
insb
or
inc
add
jecxz
push
cmp
ret
sbb
incl
fcomps
aad
mov
repz
decl
or
mov
jle
sbb
push
adc
jnp
or
pushf
push
mov
add
int3
cmp
and
mov
dec
fiaddl
jmp
push
adc
mov
sti
sbb
roll
bound
push
data16
add
loope
andb
add
out
adc
pop
pop
inc
bound
fs
movsl
xchg
rcll
cmpl
add
add
sbb
adc
xor
dec
ret
repz
inc
bound
push
cmpsb
xor
xor
xor
xorl
cs
push
sbb
ficomps
pushf
subl
flds
mov
cmpsl
mov
pop
sahf
fxch
fsub
sbb
mov
add
inc
gs
in
fs
cmpl
add
lahf
add
insb
mov
test
insb
jbe
sub
out
pop
push
fldcw
mov
mov
imul
int3
sbb
mov
ja
xor
movsb
bound
cli
inc
popa
in
shrb
xor
fisubl
jg
mov
xor
sub
rorb
popa
xchg
fiadds
add
add
push
jmp
shlb
into
in
sbb
mov
sbb
cmpsb
push
dec
dec
orl
xchg
add
fidivs
add
popa
dec
test
and
cmpsl
popa
flds
cli
and
stc
cld
push
movsl
popa
and
or
inc
add
es
pextrw
out
inc
add
cli
incl
add
add
pop
push
push
shll
adc
leave
dec
addl
push
jo
lea
andb
adc
add
adc
jne
inc
add
push
hlt
loop
pop
aad
sbb
xchg
add
popf
dec
idiv
je
mov
out
out
insl
xchg
incl
lea
test
testb
add
bound
fmull
je
cli
ja
cmovo
les
mov
out
aas
std
cli
jmp
jmp
push
xchg
mov
aam
insb
incb
or
xchg
cmp
push
das
push
push
js
xor
xchg
fisttps
push
sub
cmp
inc
bound
add
stos
lock
sti
mov
insl
in
aad
addb
inc
inc
add
in
das
or
adc
daa
dec
pusha
sub
fsin
push
ss
add
cwtl
push
dec
xor
into
fldt
rclb
call
popf
lret
pop
jmp
scas
inc
hlt
xlat
scas
popf
out
and
sub
push
cmpsl
sti
cs
dec
inc
bound
dec
andl
fldcw
mov
pop
test
les
cmpsl
sti
jbe
or
fs
push
subl
test
test
mov
add
or
sub
scas
stc
aad
icebp
push
push
push
mov
rclb
inc
add
stos
mov
sub
jmpw
orb
out
jmp
adc
mov
call
pop
jmp
inc
cmp
xor
sub
popa
fyl2xp1
fdiv
call
je
fisubrl
add
popa
add
lods
popa
fsts
adc
xor
add
push
lock
jnp
sub
xchg
sbb
push
mov
loopne
test
cli
decl
xchg
add
add
adc
adc
fwait
add
scas
xchg
sbb
jmp
addl
or
mov
test
jmp
or
pushw
pushf
or
add
and
dec
and
push
fildl
mov
fldl
lea
imul
call
popf
mov
and
cltd
loopne
lea
xchg
add
add
and
sub
in
push
clc
add
fsubp
lods
lcall
mov
push
add
mov
jo
jp
dec
and
jns
and
mov
incb
sbb
push
lods
lea
push
test
inc
fcoms
cld
push
lea
adc
loopne
stc
jle
cs
out
push
xor
push
fsubrp
and
sub
cmp
add
add
leave
lret
mov
jle
fs
inc
rcll
adc
ret
jmp
and
add
pop
sti
jne
call
xchg
mov
or
data16
pop
cmpb
mov
mov
out
fistps
lret
nopl
lods
pop
push
test
cmp
dec
bound
dec
mov
pop
gs
js
pusha
mov
ret
add
mov
push
popa
push
push
ds
push
add
popa
test
cwtl
push
popa
sub
stc
fdivl
out
jmp
and
std
sbb
sbb
or
and
or
popa
add
add
pushf
test
and
or
fcmovu
add
pop
fs
or
xchg
ljmp
jb
cld
mov
out
popa
adc
jmp
jae
clc
add
pusha
lret
adc
incl
push
mov
faddl
cld
in
loop
sbb
mov
gs
in
jae
add
pop
repnz
movsb
or
rorb
cmp
push
mov
dec
xlat
mov
push
xchg
add
daa
cmc
pushl
or
dec
pop
call
jle
outsb
sbb
xchg
push
clc
incl
cmc
jne
popa
ret
mov
call
jl
jae
movsbl
mov
ljmp
jbe
call
int
push
fists
jmp
insb
or
rolb
xchg
xor
push
pushf
cli
pop
out
into
sub
or
adc
adc
inc
xor
loope
add
sahf
mov
call
and
fdivr
bound
andl
cmp
sub
jge
and
fdivrs
jg
mov
jmp
add
add
lock
in
insl
in
dec
cmc
xor
cmc
adc
pop
insl
jg
mov
push
xor
xor
inc
add
sbb
imul
fstpl
in
dec
pop
dec
call
outsb
add
in
scas
pop
movsb
pop
mov
or
pop
and
scas
andb
call
add
imul
lods
cmpsl
add
jne
test
pop
adc
popa
inc
xchg
add
adc
cmpsb
mov
jb
stc
shlb
inc
xchg
add
pop
nop
and
in
jl
sub
add
in
call
sub
cmpsl
mov
add
in
call
popa
fnstenv
push
add
popa
ja
inc
mov
shrl
or
imul
popa
pop
leave
adc
ja
push
xor
in
add
xchg
add
in
or
test
xchg
push
lea
or
ficompl
push
inc
mov
sbb
inc
fnstcw
aad
push
pop
sub
mov
test
add
add
pop
push
popa
fldenv
cld
sarb
mov
cmc
cld
loop
inc
dec
bound
or
mov
or
add
dec
enter
jg
inc
cmp
cmc
jmp
cli
gs
fistpll
js
cmp
cli
adc
mov
or
and
out
repz
bound
out
lcall
out
mov
or
lock
imul
push
lock
or
inc
bound
jae
jnp
out
inc
icebp
cli
jmp
mov
xlat
or
xchg
out
pop
cltd
or
mov
ss
add
push
stos
mov
ss
cltd
out
mov
jnp
jmp
fsub
add
push
bound
into
or
loopne
mov
push
test
sbb
mov
adcb
ror
add
add
jnp
gs
icebp
shll
test
jle
add
lock
stos
pop
push
push
jmp
push
out
dec
or
aad
addr16
add
imul
add
pop
inc
adc
add
cltd
add
mov
mov
icebp
mov
add
jne
xchg
and
int
psubd
and
in
jae
xchg
adc
mov
cli
insl
cmpsb
mov
adc
adc
jo
add
inc
dec
and
rcrb
bound
int
lods
imul
add
or
loope
ljmp
jmp
cmp
mov
in
mov
leave
rorl
lods
or
fnstenv
ficomps
jle
cld
testb
cli
testb
dec
jnp
bound
es
call
inc
cltd
cwtl
call
aas
sbb
lds
jp
jle
mov
pop
push
dec
mov
in
aas
ficoml
jnp
call
mov
mov
push
push
movsl
dec
xor
push
xchg
inc
inc
bound
inc
and
cwtl
das
push
and
cmpl
inc
sbb
push
or
inc
clc
aad
stc
or
xchg
push
xchg
dec
mov
and
sti
inc
lock
add
mov
pop
std
xchg
fmull
ss
subl
incb
bound
cmpb
add
xlat
and
jns
inc
fsubl
call
pop
pop
movsb
daa
ret
pop
es
mov
adc
add
xchg
xlat
out
sbb
mov
mov
or
jbe
add
add
or
out
add
outsl
repnz
jecxz
mov
lcall
popa
push
in
das
xchg
out
out
pop
or
mov
call
add
sbb
add
setae
add
daa
mov
out
bound
add
mov
mov
cli
push
les
add
cltd
add
and
or
and
pop
adc
jecxz
jmp
push
or
stos
popf
add
jne
push
xorl
fnsave
add
dec
lods
and
test
fidivrs
cmpb
mov
in
cwtl
clc
and
test
xor
mov
cltd
add
push
hlt
adc
mov
sti
int3
hlt
sbbl
or
cmp
jns
sbb
test
faddl
mov
xor
loop
jne
divb
mov
mov
inc
add
fmull
add
and
rolb
mov
pmulhw
push
lods
lret
add
and
add
add
adc
mov
push
call
adc
and
bound
jge
and
es
push
cli
xchg
dec
inc
bound
mov
hlt
inc
add
add
incl
mov
cmp
std
jmp
mov
rcrb
out
pop
call
jb
shl
and
cmpb
cld
jp
push
cmp
add
cmc
mov
add
add
imul
jmp
call
lea
lret
mov
js
and
fcmovb
or
mov
inc
and
loopne
shlb
xor
push
and
out
mov
jmp
into
sbb
xchg
arpl
shll
jbe
mov
cmpsb
sbb
cmp
ret
ret
xchg
stos
mov
add
icebp
cmc
inc
bound
pop
ds
lods
pop
pop
push
jl
push
jae
jg
mov
dec
jmp
fsin
adc
mov
rorb
ds
add
test
or
push
cmc
lahf
push
cltd
add
or
loope
mov
jp
push
xchg
xchg
pop
dec
lds
xor
jnp
cmp
add
mov
add
jb
std
lea
add
cmpsl
movsb
lods
test
push
bound
pop
xor
incl
loope
cli
push
pop
push
adc
xor
sub
stc
hlt
and
adc
mov
repnz
cld
gs
addl
mov
add
mov
push
cvttps2pi
je
or
dec
jne
call
jmp
push
ret
or
xlat
jns
aas
popf
xor
jno
push
xchg
ljmp
xor
int3
add
std
cli
adc
cmp
je
jae
decl
and
leave
jg
pop
inc
ljmp
add
mov
rolb
andb
add
add
repnz
out
xor
std
mov
jle
arpl
jecxz
fidivs
push
push
fs
mov
out
xchg
gs
pop
adc
push
mov
out
js
sbb
icebp
loop
xchg
leave
jns
push
les
or
jae
hlt
jbe
nop
ret
dec
add
mov
les
xchg
std
sbb
icebp
dec
sti
xchg
or
leave
fidivs
inc
sti
mov
fcos
in
mov
rclb
mov
ret
cwtl
mov
cmp
jmp
mov
mov
dec
and
lret
adc
mov
and
pop
fucom
js
loope
add
add
add
test
sub
into
pop
insl
inc
sbb
xchg
js
mov
outsb
fstpt
insb
addr16
outsl
out
sahf
fnstcw
sub
dec
jae
xor
add
sub
inc
jmp
add
out
adc
or
jnp
jo
loope
fs
push
add
jmp
inc
sbb
cs
sahf
pop
pusha
adc
shrl
xchg
sub
inc
mov
push
xchg
cmp
mov
adc
fld
movsb
mov
sbb
movsl
mov
xchg
dec
mov
mov
push
sub
add
imul
pop
hlt
sbb
sbb
inc
movsb
sbb
test
pop
adc
mov
add
jp
mov
or
lds
call
or
mov
faddl
pop
leave
int
mov
pop
push
mov
push
out
dec
faddl
stc
cld
mov
aad
decl
dec
pushl
rclb
dec
rolb
push
push
clc
call
js
fwait
add
push
std
out
out
test
pop
adc
add
add
mov
inc
loope
inc
outsb
test
fwait
lret
mov
jmp
repnz
repnz
fildll
repnz
cs
mov
and
addr16
push
push
mov
jg
add
ds
scas
or
jo
add
lock
dec
out
and
jmp
jge
fisubrs
nop
inc
ds
sti
ja
stc
aas
fnstenv
push
sub
lret
daa
inc
xchg
dec
mov
inc
inc
jl
push
adc
sar
repnz
and
call
add
cld
jmp
cltd
out
and
insb
les
xor
out
or
mov
mov
dec
fnsave
xor
push
cltd
out
mov
push
incb
fbld
pop
mov
cmp
fs
xchg
mov
jp
sbb
movsl
incb
fsubl
inc
jmp
push
push
pop
push
add
dec
mov
add
clc
flds
test
mov
popa
fldenv
call
mov
sub
jmp
xor
flds
bound
sub
add
add
pop
int
mov
stc
mov
push
movsb
stc
lahf
call
mov
inc
out
fldenv
out
shll
add
push
pop
insl
mov
add
cli
imul
stc
in
push
subb
add
sbb
fists
add
adc
lret
fadds
mov
ljmp
or
rol
aas
sub
xchg
xor
mov
stc
jp
jg
aas
xor
xchg
xchg
pushl
or
jnp
xchg
xlat
add
sbb
loop
fcomps
lea
adc
push
inc
dec
enter
sbb
lea
sub
mov
jno
add
mov
mov
add
nop
addl
add
je,pt
add
add
mov
lock
bound
and
popf
inc
push
adc
repnz
mov
xchg
push
xchg
push
xchg
jp
pop
lock
cmp
bound
ficoml
add
add
push
add
mov
push
jl
add
push
adc
out
pop
push
pushf
mov
add
sbb
push
mov
fldcw
dec
test
inc
repz
fsub
add
sbb
arpl
out
outsb
or
cmp
jmp
inc
add
aas
or
cli
mov
fcompl
movsb
sub
out
cs
mov
xor
fisubl
add
adc
pop
in
hlt
xchg
fldenv
pop
flds
bound
movaps
add
int
ss
add
mov
stc
xlat
gs
adc
lods
in
mov
push
daa
jle
icebp
stc
insl
lock
mov
push
in
std
push
test
sub
xorl
pop
call
adc
movsl
call
popa
adc
out
call
addr16
inc
jmp
popa
flds
add
out
mov
xchg
add
sbb
add
adc
add
cmp
je
lret
sti
adc
add
mov
dec
push
shr
divb
dec
out
xor
fisttpll
add
fildl
add
dec
dec
mov
leave
mov
dec
xor
test
aaa
test
push
adc
adc
and
gs
xor
pop
lcall
fcomps
sbbb
sbb
pop
mov
mov
push
fs
xchg
jp
push
or
sbbb
add
add
mov
call
lret
in
add
add
bound
xchg
add
jae
jnp
xchg
jp
arpl
addl
jmp
push
add
xor
dec
jmp
inc
out
andl
jmp
push
cli
adcl
dec
insl
pop
stos
or
fs
cmp
mov
loop
pushf
add
add
add
sbb
push
int
inc
bound
cmpsl
add
sbb
out
movsb
dec
xor
jge
mov
cmp
mov
in
stc
int3
lret
out
xor
movsb
pop
out
pushf
inc
inc
fstps
xor
xchg
rorb
mov
xacquire
dec
jle
out
adc
test
iret
add
not
jg
insb
add
cmp
outsl
lret
add
fwait
repz
mov
incl
fistl
pop
lret
orl
mov
jmp
dec
inc
jmp
mov
fldl
add
pop
adcb
fsts
or
rcr
mov
leave
mov
lds
sbb
bnd
add
add
scas
cmp
mov
adc
into
test
add
fldl
rolb
lahf
call
add
test
inc
pop
data16
mov
into
lret
fdivr
decl
fs
jecxz
and
cmp
xor
lretw
and
add
negl
push
jmp
ret
sub
js
repnz
dec
push
loope
cmp
sti
fcoms
sahf
test
inc
lret
int
push
imul
xor
loope
lea
mov
bound
test
pop
xchg
add
nop
add
jge
lock
out
pop
sar
fiadds
test
or
cmpl
push
insl
les
and
sbbl
faddl
decl
sti
xchg
in
insb
andb
std
pushl
xor
cmp
jle
bound
jp
dec
jbe
inc
xchg
mov
fnstenv
mov
fldcw
jle
inc
sub
push
xor
int
out
xor
data16
pop
fcmovu
out
jmp
lret
dec
out
ret
adc
mov
adc
out
fldt
dec
cmp
stos
sbb
dec
inc
sbbl
lods
cmp
loope
cmpsl
add
lods
xor
fldenv
dec
lods
sbb
and
xchg
call
add
add
mov
pusha
aad
flds
loop
insb
pop
cmp
add
add
flds
je
mov
jmp
shlb
xchg
cmpb
lds
fwait
sub
inc
lds
push
inc
lds
fwait
stos
popa
push
inc
add
popa
push
inc
add
popa
push
inc
add
popa
push
inc
add
popa
add
jge
fldcw
sbb
add
add
add
jae
repz
mov
mov
in
sbb
pop
fdivrp
or
sbb
push
add
jnp
mov
aad
lea
xlat
jns
jp
jge
dec
fldl
push
in
ljmp
jnp
xor
xor
cwtl
and
mov
add
add
fs
jo
jle
add
add
bound
sbb
dec
push
cmp
mov
rolb
popa
add
std
pushl
sub
aas
bound
and
inc
sbb
push
rcr
xchg
sub
pop
fs
bound
xchg
add
cli
rolb
add
sti
dec
scas
clc
aas
bound
and
or
insl
jbe
add
push
add
decb
push
clc
ret
push
ret
sahf
push
ljmp
fdivrp
jae
idivl
cmpsb
hlt
loopw
std
call
repnz
aas
bound
imul
mov
fwait
int3
fisubs
out
out
insl
lods
jle
mov
ss
aam
dec
cltd
out
and
imul
pop
xor
xchg
roll
add
add
fildl
push
test
fisubs
add
out
pop
lretw
pop
dec
retw
pop
mov
out
repz
jb
fsubl
cltd
out
mov
out
roll
inc
sbb
repz
hlt
mov
faddl
cltd
out
in
out
add
enter
flds
jmp
lret
add
push
dec
icebp
pusha
sub
out
add
add
sbb
add
ja
insb
sub
xchg
mov
flds
jb
flds
xchg
xor
push
xchg
adc
pop
repnz
xchg
add
or
sub
rorb
xchg
jmp
add
in
test
je
xchg
jecxz
pushl
mov
add
add
adc
daa
call
push
xchg
lea
jle
jne
or
lret
or
jmp
or
mov
or
cs
notb
mov
push
add
aad
je
adc
shrb
sarb
call
mov
adc
aad
mov
adc
add
outsb
je
aas
mov
testl
add
cmc
and
jge
pop
lcall
aad
repnz
push
repnz
sti
dec
cli
rclb
push
add
jge
lods
cmc
mov
push
jmp
sbb
out
sbb
xor
notl
lret
je
ja
adc
movsb
cld
out
add
add
repnz
pop
pop
adc
cmp
add
jmp
sbb
jp
fst
and
fisttpll
clc
push
sub
mov
jae
xchg
out
jb
pushf
neg
test
jp
loope
hlt
jmp
fldt
jl
mov
gs
dec
mov
inc
bound
xor
jns
in
ret
das
xchg
out
adc
add
mov
mov
movsl
fs
or
fs
jb
sbb
into
cmp
xlat
into
mov
add
leave
push
outsb
mov
lds
aas
mov
cmp
popf
flds
push
add
sub
jns
jmp
sub
stc
xchg
leave
push
push
fnstsw
popf
or
stc
testb
jae
dec
out
jae
sahf
gs
decb
stos
jp
push
jb
call
add
xchg
push
je
lods
mov
stc
insl
push
data16
push
dec
pusha
add
sbbb
inc
icebp
orb
ss
jl
jecxz
lods
sbbb
es
incl
add
add
ljmp
pop
xchg
add
pop
push
add
jo
test
push
inc
mov
jmp
loop
pop
popa
mov
nop
ficoml
jne
adc
loope
mov
imul
jnp
jne
pushf
adcb
lods
orb
xchg
pop
ret
push
mov
push
add
add
ja
data16
call
fidivs
push
sbb
outsb
pusha
sahf
repnz
adc
loop
dec
push
lcall
sub
xor
push
cli
int3
adc
out
add
jns
mov
mov
push
fldcw
jae
ficompl
popf
testl
add
loop
je
jnp
adc
lods
clc
out
add
add
add
je
aaa
push
adc
fldenv
cld
dec
into
dec
lock
sub
hlt
int3
out
in
jno
and
pop
push
jb
or
push
pop
lret
loope
fsubr
xor
ja
sahf
fnstcw
mov
pop
cmp
leave
into
fsub
push
test
int
lret
or
call
out
pop
sbb
add
xchg
out
push
fstps
adc
stc
sub
daa
add
fidivrs
iret
lcall
push
cmpsl
add
and
cmpsl
fnstcw
fisttpll
add
inc
aas
jmp
jb
in
push
mov
inc
jmp
or
inc
ja
stc
dec
jne
jne
jecxz
je
gs
add
dec
jecxz
loop,pn
jne
das
mov
insb
mov
push
add
push
cli
push
ss
fdivl
push
adc
stc
fmull
inc
jmp
popa
mov
fistpll
push
and
lock
or
inc
out
adc
pop
xor
mov
dec
call
jne
sub
dec
fmuls
push
nop
xchg
adc
add
insl
inc
fmul
add
push
movsb
imul
adc
fsts
dec
flds
push
jo
jnp
jmp
add
add
fs
out
int3
call
test
mov
andl
or
xchg
maskmovq
sbb
adc
ss
insl
cli
jne
cmp
fbstp
sti
ja
lock
aam
mov
data16
xor
mov
push
fxam
cmc
jae
dec
mov
mov
xchg
aam
cmp
pop
xchg
enter
jmp
xor
mov
mov
mov
mov
lcall
adc
ljmp
mov
call
aas
xor
mov
incb
xor
add
add
mov
js
popf
out
jns
repnz
pushf
out
bound
mull
int
mov
or
mov
push
add
jbe
push
xchg
and
xchg
repz
insl
divl
fsts
pop
inc
lock
add
in
sbb
roll
outsl
iret
ficoml
call
add
jge
mov
cltd
out
dec
cmp
flds
xchg
push
fs
out
loop
je
lea
inc
jo
add
sbb
dec
inc
jmp
push
mov
inc
lods
add
and
loope
inc
jmp
addr16
shl
push
dec
int
mov
leavew
add
xor
shlb
dec
push
movsl
mov
sbb
in
add
mov
pop
icebp
cs
sub
test
push
fidivs
fists
add
cmp
pop
fucom
sbb
cli
das
jnp
dec
push
xor
call
jecxz
imul
mov
push
jbe
dec
mov
sbb
jg
rorl
push
in
cmp
stc
add
xor
popa
flds
sti
aad
lret
mov
inc
pushf
pusha
loope
mov
sti
in
jp
sti
aad
mov
or
mov
incb
lret
aad
andl
add
shll
mov
out
add
bound
je
daa
shll
insl
stc
insb
pusha
lock
call
lahf
sub
push
mov
add
bound
or
add
sbb
jp
inc
cmp
movsb
dec
dec
test
sub
fadds
push
inc
push
cmc
xchg
sahf
into
call
and
imull
popa
mov
lds
out
jmp
ss
rcrl
ljmp
fyl2xp1
inc
bound
push
push
mov
mull
add
inc
mov
xchg
sub
push
loop
mov
add
cmp
aaa
sbb
fldenv
imul
mov
bound
aam
pop
in
inc
push
fsincos
or
addr16
outsb
mov
inc
bound
sti
dec
push
add
mov
std
fmull
add
push
sub
sub
pop
cli
add
add
add
add
enter
jno
add
mov
jmp
popa
ja
orl
and
mov
leave
inc
jmp
xchg
cs
add
aad
mov
jb
shrl
add
popa
and
dec
inc
popf
xchg
dec
inc
xchg
xchg
ja
mov
stc
fsubrl
push
jne
in
cld
in
fiaddl
aad
scas
shlb
add
pop
sbb
add
or
jmp
incl
and
rolb
add
sbb
push
inc
mov
in
dec
lret
call
adc
test
push
sub
pusha
fisttpl
push
lock
repnz
addb
enter
dec
add
pusha
pop
insb
repnz
add
add
movsl
or
jge
jne
aam
inc
adc
mov
pop
rcrl
rorb
enter
xchg
sbb
dec
leave
add
bound
pushl
shlb
cld
popa
or
fsts
inc
sbb
ret
adc
adc
decb
inc
adc
sldt
je
out
or
add
add
lock
jne
or
mov
call
xchg
into
clc
test
cli
sarb
adc
out
scas
call
bound
out
icebp
std
call
icebp
pop
xchg
mov
mov
mov
mov
mov
xor
hlt
jg
cltd
out
movsl
data16
sbb
shrl
lret
mov
frstor
sub
lret
add
not
out
in
scas
pop
dec
movsl
mov
ficoml
rclb
imul
xchg
lock
scas
loope
dec
pop
sub
int3
pmullw
mov
fcompl
call
pop
mov
in
sbb
in
ret
add
out
dec
add
inc
gs
jae
lods
or
ficoms
xchg
jo
add
fnstsw
or
adc
jmp
hlt
aam
xchg
xor
popa
mov
fadd
int
jmp
pop
xor
push
dec
int
pop
bound
and
xchg
imul
pop
std
push
sub
lahf
popa
ja
add
sub
jae
addb
adc
test
mov
cmp
stos
sbb
mov
inc
push
jne
leave
push
jecxz
mov
rorl
sbb
mull
mov
push
ret
dec
push
fcomps
lock
jp
icebp
jne
xchg
push
mov
loopne
cmp
mov
add
mov
cmp
mov
push
int3
pop
xchg
add
bound
cmp
imul
das
cli
push
or
inc
bound
jae
sbb
nop
and
dec
sti
ja
adc
dec
mov
lock
loopne
sub
lret
repnz
mov
aad
mov
scas
adc
pop
ja
jle
ret
dec
push
flds
icebp
adc
mov
push
xlat
add
leave
out
fldenv
ss
or
add
push
sbb
mov
dec
fstl
push
inc
push
jmp
pop
sub
pop
push
faddl
dec
out
mov
add
add
mov
xor
cmp
fildl
pop
sub
inc
mov
fdivs
andb
xchg
push
mov
fmuls
es
aaa
mov
push
push
mov
bound
xor
pop
add
jb
data16
nop
sub
hlt
xchg
jmp
jmp
pop
xor
and
xchg
adc
mov
in
sbb
pusha
mulb
lea
test
xchg
sbb
pushf
or
lcall
pusha
inc
add
popa
pop
push
je
aad
pminsw
stc
insl
cmpsb
dec
sbb
mov
dec
std
mov
pop
shlb
dec
in
xchg
cld
fisubrs
fs
int
mov
add
sub
fs
ret
add
inc
fistl
negl
clc
mov
jmp
clc
je
test
or
xchg
xor
lea
add
call
jg
insl
jns
adc
add
dec
push
sti
fidivl
loop
jne
popa
cmp
cmp
add
or
out
fimuls
ljmp
mov
add
loop
or
sbb
scas
into
jle
mov
or
adc
cmp
sti
loopne
xchg
adc
sbb
sarb
or
mov
add
addr16
cmc
pop
pop
pop
fstps
mov
rcll
dec
sti
outsl
js
inc
bound
adc
mov
add
pop
push
mov
xchg
test
push
push
sub
mov
and
adcl
sub
in
mov
hlt
xor
cmpsl
das
mov
data16
cmp
pop
cmpsl
das
mov
cmp
adc
orb
out
add
int
or
shl
add
repz
pop
rorb
test
into
sbb
pusha
add
cltd
mov
scas
adc
mov
ljmp
or
push
sbb
mov
fnsave
add
outsb
or
iret
mov
iret
xchg
and
add
pop
iret
test
jecxz
jmp
and
push
popa
lcall
push
lcall
mov
xchg
pop
bound
rol
lods
into
cmp
add
inc
popa
fiaddl
jmp
push
pop
repz
stc
ret
sbb
call
jo
fldl
push
aad
xchg
mov
fildl
rcrl
jnp
add
or
mov
add
pop
or
mov
popf
loope
push
loopne
retw
je
popf
loope
sub
mov
sysenter
and
or
cltd
shl
fistpll
pmuludq
jnp
pop
xchg
shl
fistpll
sysenter
and
mov
loope
test
shl
mov
add
add
aas
sbb
dec
push
jmp
lahf
mov
sar
inc
push
insl
imul
sbb
pop
flds
mov
sarl
xor
sbb
sbb
aaa
mov
add
ja
cli
std
dec
add
in
inc
mov
mov
sub
stc
aad
xchg
jp
pop
and
add
add
mov
mov
mov
jecxz
sbb
pop
adc
sarl
cli
dec
test
xchg
mov
std
xlat
stos
movsb
push
ljmp
mov
push
scas
mov
shr
inc
dec
or
xchg
inc
call
push
mov
fs
call
push
jecxz
sbb
sbb
jno
mov
and
mov
sbb
cmp
mov
dec
mov
shl
add
das
popf
pop
sbb
xchg
cli
mov
je
pop
sub
pop
jns
aaa
bound
sub
bound
insl
jecxz
xor
or
sbb
add
push
std
subl
add
add
mov
pop
inc
lods
pop
out
scas
pop
push
nop
sub
sub
and
pop
pop
lret
push
stc
pop
lcall
into
fadds
jmp
xor
sbb
fildl
push
inc
lahf
sub
mov
decl
fildl
movsl
stc
decl
fisubrl
add
icebp
add
int3
jp
pop
faddl
jg
or
fildl
test
push
add
pop
inc
and
jae
pop
hlt
mov
or
push
shrd
sti
mov
and
add
mov
and
decl
testl
test
adc
notl
mov
cmp
fstpt
out
add
add
scas
test
dec
mov
call
jmp
or
xchg
add
xchg
mov
enter
lcall
sarb
sub
adc
cmp
cli
mov
push
sti
ja
pop
inc
bound
or
repz
sti
push
lock
inc
bound
or
add
add
fsubs
dec
xor
lds
xchg
jl
cmc
out
push
in
pop
cmp
sbb
and
jmp
pop
inc
outsb
aaa
popa
inc
push
pop
mov
bound
sub
fsub
add
pusha
movsb
pop
out
inc
xor
and
push
dec
out
sbb
jmp
adc
sbb
push
sub
pop
sbb
add
add
push
repnz
stos
jecxz
add
xchg
lret
push
xchg
xor
lds
sub
mov
popa
flds
sbb
adc
pop
xlat
and
jge
movsl
xchg
jmp
adc
adc
push
xor
iret
mov
stc
push
flds
mov
pusha
flds
bound
mov
sub
subl
add
add
addr16
loop
fnstcw
xchg
daa
dec
sbb
flds
lock
push
rcrl
push
hlt
sub
and
pop
push
add
loop,pt
sti
xlat
call
lea
dec
or
movsl
in
ljmp
mov
shl
sub
movsl
cmp
xlat
mov
mov
add
insb
dec
adc
add
add
adc
pop
int
add
cwtl
dec
mov
or
call
mov
pop
clc
and
mulb
aad
push
mov
je
dec
xchg
aad
pushl
ja
inc
or
add
in
adc
push
stos
cli
fiadds
xchg
imul
into
cmp
push
add
add
rclb
jbe
add
rorb
mov
cli
lea
test
add
pop
or
pop
xchg
lcall
sar
fildl
xchg
repnz
std
sub
inc
jmp
adc
scas
cmp
imul
lret
lds
inc
mov
add
fldenv
add
and
mov
aas
out
push
mov
out
jecxz
out
bound
add
xchg
jle
mov
out
push
int
pop
xor
jge
cli
add
movsb
stos
adc
jne
jle
or
jge
pop
dec
loopne
into
shl
lret
add
popf
jecxz
scas
mov
inc
push
dec
sbb
clc
push
popa
pop
cmp
xchg
sbb
push
bound
pusha
out
test
enter
push
and
popa
flds
push
in
push
and
pop
xor
fld1
fdiv
ret
stc
bound
aaa
dec
out
lods
test
push
xchg
and
jmp
push
sbb
testb
add
cwtl
out
shl
mov
pop
jmp
pop
flds
cmp
jg
add
mov
dec
push
and
inc
pop
testl
push
out
push
orb
adc
js
push
dec
inc
ds
sub
inc
sbb
call
push
sbb
or
loope
dec
je
mov
cmpsl
or
push
inc
push
pusha
mov
add
jp
aas
dec
out
je
pop
mov
in
dec
flds
xor
pusha
testl
adc
xlat
sbb
jae
and
scas
andb
aas
bound
cmp
xor
inc
inc
movsb
dec
push
mov
jb
scas
mov
pop
popa
mov
out
or
cli
fstps
cli
outsl
mov
jnp
jle
jp
xchg
fwait
lds
cmpsl
push
jmp
xor
dec
or
mov
out
cmp
pop
arpl
mov
test
js
inc
int3
dec
xchg
std
jp
mov
and
pusha
sbb
xchg
push
or
out
loop
sub
sahf
fnstcw
jnp
std
or
std
pop
test
bound
imul
inc
in
ja
std
ret
jbe
std
fistps
in
int3
neg
enter
xchg
bound
std
repz
into
rcrl
sub
dec
stc
jbe
std
fistl
cs
js
and
arpl
sbb
out
je
out
jp
fwait
test
push
sub
mov
or
pop
je
jb
jl
cmp
cmpsb
call
add
jmp
rorl
aas
mov
dec
lds
sahf
cmp
mov
xchg
dec
mov
call
sbb
stc
test
mov
mov
in
cwtl
xchg
xchg
push
fs
aas
inc
in
ret
add
je
out
std
in
inc
test
out
fwait
call
call
lcall
mov
sbb
ret
jbe
out
jne
arpl
shlb
pop
push
jmp
mov
pop
out
je
inc
push
cld
in
add
push
in
mov
ljmp
pop
jl
into
jecxz
jbe
cmp
add
sarb
enter
cmc
incl
add
add
push
pop
sbbb
les
mov
movsl
cmp
testb
repz
pushf
mov
shlb
test
mov
dec
mov
mov
cltd
clc
mov
divb
mov
gs
loopne
adc
stos
cmp
pop
sbb
dec
scas
add
outsb
add
lods
dec
xchg
push
adc
lock
cmpsb
mov
push
jle
pop
sub
cli
lds
ja
out
sub
jmp
std
repnz
lahf
pusha
dec
push
popf
lods
dec
adc
mov
ret
pop
aaa
mov
or
mov
inc
sbb
ret
daa
push
fnsave
je
mov
push
insb
and
data16
cmp
aaa
sbb
jmp
add
cwtl
xor
inc
cltd
mov
push
lret
nop
out
bound
pop
aaa
out
dec
scas
pushf
cmp
movsl
out
push
mov
xor
adc
std
mov
add
ret
push
sbb
andb
ret
sub
test
add
and
shlb
daa
push
push
insl
sub
test
lret
stc
cltd
pusha
and
inc
stc
jg
aad
in
add
jnp
dec
insb
push
popf
push
mov
sub
sub
vpcmpeqb
add
data16
add
mov
stc
mov
aas
call
cmc
lock
lock
sub
pop
sub
mov
mov
adc
fildl
add
add
mov
pop
movsb
inc
stos
add
shr
lcall
jge
dec
faddl
mov
jl
push
pop
aam
enter
sbb
cmp
call
gs
dec
jmp
call
jg
je
subb
mov
dec
loop
aaa
mov
mov
mov
mov
mov
mov
and
add
es
pushf
pop
jne
sbb
pop
lret
inc
bound
xchg
test
pop
sub
aas
bound
push
and
ljmp
test
push
and
call
cmpl
xchg
mov
shrb
or
dec
and
test
fsts
nop
dec
inc
pushf
movsl
roll
add
add
jo
test
sbb
pop
cltd
xor
and
xor
sub
fisttps
sti
int3
inc
lahf
xchg
fldcw
int3
mov
sahf
mov
popf
test
inc
mov
lods
dec
stos
out
push
xchg
out
mov
pushf
js
imul
push
push
add
fs
fstpl
inc
stos
mov
imul
mov
add
add
cmc
pop
mov
mov
xacquire
push
adc
insb
mov
call
xor
adc
jecxz
leave
jg
addr16
mov
push
jp
sub
add
xchg
mov
and
ret
test
mov
jnp
mov
adc
add
popa
push
rcrb
add
add
ret
movsl
test
ljmp
dec
mov
in
popa
flds
sub
sbb
or
add
add
out
call
jae
dec
dec
or
ret
mov
call
arpl
and
lahf
cmp
add
add
jne
mov
push
idivb
add
add
cmp
add
lcall
or
dec
dec
dec
and
dec
shr
pop
idiv
add
enter
adc
add
adc
adc
sbb
cld
and
adc
fdivr
or
mov
pushl
add
mov
or
xchg
iret
mov
push
add
dec
cltd
xchg
sub
je
data16
scas
arpl
rcl
xor
push
loope
clc
mov
push
pop
cmp
sub
sub
cmp
and
dec
inc
and
ljmp
insl
xor
add
daa
adc
je
aaa
scas
pusha
lcall
insb
or
out
add
xlat
cld
call
add
inc
jmp
inc
and
test
cmc
add
test
jae
mov
movl
add
cmp
outsb
rol
insb
mov
push
xchg
add
je
jno
mov
cmc
cli
mov
dec
sar
in
arpl
push
xor
lock
in
xor
mov
and
push
daa
sbb
add
add
mov
mov
out
das
sarb
xor
fwait
push
into
faddl
loope
fiaddl
test
sbb
xlat
adc
or
or
mov
dec
mov
push
bound
cmc
sbb
mov
mov
add
cmc
adc
cmc
xor
arpl
add
adcb
fnstenv
stos
scas
insl
loopne
xchg
and
push
iret
shlb
or
in
jmp
pop
dec
int
aas
sbb
dec
xchg
xchg
shll
faddp
pop
je
bound
add
nop
cmpsb
loope
mov
addr16
and
popa
cld
call
jo
test
jg
dec
mov
fsubr
filds
add
add
mov
shl
pushl
sub
pushl
mov
cmpl
mov
push
add
and
and
adc
testb
iret
cmp
idivl
lret
mov
outsl
je
mov
xor
xchg
in
adc
mul
pop
xlat
incb
push
std
xchg
sub
mov
inc
lds
inc
mov
fmulp
ret
push
add
outsl
lods
daa
dec
aaa
xchg
test
leave
cmp
mov
int3
jae
inc
jae
sbb
jns
push
mov
fcomip
xor
stos
daa
or
scas
mov
jp
mov
pop
cmp
test
fldenv
mov
jno
pop
xchg
sar
push
lcall
pop
cmpsl
mov
xor
in
je
push
jno
add
mov
mov
pop
cltd
sqrtps
cwtl
inc
into
mov
scas
cwtl
sbbb
cmc
ljmp
js
mov
mov
outsl
sarl
es
pop
xchg
out
mov
out
scas
fimull
imul
ljmp
out
cmp
cltd
cmp
es
call
shrb
cmp
sbb
jo
jmp
lock
jae
adc
daa
movsbl
rorl
or
pusha
pop
mov
jmp
jmp
lock
lock
jb
mov
fwait
sbb
out
insb
in
sub
and
loopne
lahf
call
cli
rcll
xchg
cmp
xchg
in
je
fsubrl
aad
popa
flds
js
push
cmp
push
je
jmp
data16
mov
and
out
lcall
mov
add
mov
shlb
cli
sti
sub
cld
push
sbb
out
add
sahf
push
mov
out
push
push
data16
lea
mov
call
adc
divb
push
cmp
imul
je
jb
std
jb
pop
ljmp
cmc
jmp
pop
fsincos
aaa
leave
and
jmp
push
das
push
enter
fisttps
cmp
xchg
test
add
add
ljmp
push
cmp
repz
je
test
mov
stc
test
leave
lret
sti
aad
mov
jnp
leave
mov
pop
pushf
push
adc
sub
je
mov
xchg
pop
adc
inc
xchg
je
mov
out
push
daa
fs
cmp
xor
sbb
pop
pop
sub
dec
mov
add
lea
repnz
out
mov
push
adc
jmp
xchg
cld
pop
inc
pop
pop
cmpsl
addps
mov
sub
xor
add
sub
sub
jecxz
aad
jle
lea
out
and
movsl
pushl
repnz
pop
out
stos
cmp
in
pop
mov
add
jge
push
adc
daa
stos
pop
push
add
nop
mov
jb
fisttpll
loope
lds
ret
push
cwtl
jae
cli
aam
movl
je
jge
push
imul
fiadds
into
out
xor
jmp
negl
shrl
sub
incl
push
mov
jmp
push
hlt
push
inc
ljmp
mov
ds
jmp
loop
mov
frstor
add
mov
je
add
icebp
add
sbb
mov
or
sbb
sub
addl
mov
push
mov
in
mov
in
jne
clc
mov
mov
inc
or
and
lods
mov
mov
add
jp
negb
add
call
mov
jmp
decl
les
fadds
adc
mov
fstpl
jmp
mov
adc
sbb
dec
cmp
mov
or
lods
xor
stc
sbb
jns
mov
daa
add
shrl
popa
cmp
out
cmp
cmc
xchg
pop
or
xchg
pop
lods
lahf
aaa
adc
jge
xchg
mov
cli
ja
addb
shll
sub
mov
cli
out
lret
cli
mov
or
lods
es
mov
fldenv
popw
pop
cmp
sub
sub
scas
mov
fnstsw
add
add
push
fsts
mov
mov
loopne
adc
fmuls
jle
ret
sub
fists
xchg
loop
xchg
scas
lds
imul
clc
ficoms
add
fnstcw
jg
shll
test
sbbb
xchg
add
lock
adc
mov
mov
xchg
or
jmp
lock
rcrb
mov
jl
shlb
stc
je
mov
in
adc
sub
scas
mov
fidivs
stc
pop
cli
push
or
stc
cmp
shlb
push
and
repnz
stc
repnz
add
inc
mov
add
or
mov
or
mov
or
jbe
idiv
dec
cmp
jo
dec
insl
and
dec
insl
and
dec
insl
and
push
loop
insb
dec
mov
add
pushl
dec
idiv
js
mov
fdiv
jo
dec
insl
and
add
add
push
cmp
cmpl
sbb
lods
push
rorb
inc
enter
sub
stos
pop
in
add
std
out
and
jmp
into
call
call
loope
call
and
cmp
inc
and
ror
ds
ljmp
jbe
loop,pt
or
ret
push
cmp
incl
add
add
inc
and
jb
dec
scas
cli
ljmp
cmp
nop
cmp
cmp
mov
mov
movsl
std
jne
lret
sti
aad
insb
les
outsb
dec
jle
sub
cmp
notl
out
mov
cmc
iret
fwait
into
aam
add
test
xchg
push
jne
xchg
pop
push
xchg
add
add
add
pop
inc
rorl
cwtl
stos
cmp
pop
lds
repnz
fnstenv
inc
bound
push
bound
loope
out
bound
faddl
or
push
add
out
int3
xchg
cmc
testl
ds
mov
movsl
and
je
into
loop,pn
arpl
aad
aad
or
and
test
dec
or
dec
fyl2xp1
mov
aas
inc
jmp
and
test
test
out
or
stc
es
dec
nop
test
iret
popa
xor
adc
xor
xor
stos
stc
pop
popf
cmc
sbb
mov
loopne
sbb
mov
add
mov
lahf
cli
add
mov
orl
mov
or
call
mov
xor
orb
push
mov
cli
pushl
loop
push
call
push
push
adc
pop
pop
pop
testb
xchg
mov
in
mov
in
or
cmpsb
scas
clc
xchg
push
testb
and
fstl
add
mov
pushl
stc
xor
outsl
add
fmull
mov
xchg
push
push
cwtl
mov
push
ds
inc
scas
ret
pushf
dec
jmp
inc
js
out
cld
subl
std
fldln2
mov
jge
mov
jmp
out
add
fldt
mov
loop
ret
mov
daa
out
jmp
jbe
cmp
pop
lcall
mov
and
cmpsl
adc
imul
or
lock
or
jbe
insl
pop
fldenv
lock
push
add
in
adc
outsl
cmp
mov
cli
mov
lahf
notl
mov
es
push
movsl
cmpsl
out
pop
fstpl
fstpl
popa
cmp
pop
jg
fstps
pop
push
adc
incb
out
mov
test
inc
pop
loop
sti
into
mov
outsb
loop
imull
loop
repz
outsb
inc
jbe
add
mov
sub
das
or
stos
bound
sub
das
ret
bound
add
add
icebp
xor
jb
cmc
xor
gs
sub
xchg
pop
cli
fcoml
inc
jmp
sbb
push
pop
jb
adc
xchg
mov
fcoml
out
fsubs
aas
adc
adc
push
scas
addr16
cs
mov
call
leave
cltd
loope
cmp
add
pop
ficoml
pop
pop
in
sti
flds
push
inc
call
loope
adc
cmpl
add
add
outsl
pop
xchg
add
ss
add
mov
lock
ret
sbb
pop
sub
call
imul
loopne
fs
push
push
testb
flds
xor
add
add
mov
lea
sub
clc
and
addl
scas
cmpsb
jbe
sub
lock
cmp
cmp
in
lds
out
mov
jmp
in
cli
mov
dec
jbe
bound
push
push
pop
xchg
xchg
mov
arpl
sub
cmp
add
add
jno
xchg
out
jbe
cs
cmp
lahf
ret
mov
cmp
in
xor
sbb
test
fstpl
lods
jp
cmc
jge
xlat
push
push
inc
call
fiaddl
mov
out
fst
subl
fldenv
imul
inc
bound
les
jns
fstps
jmp
mov
js
in
sub
fwait
lahf
add
aam
fst
xchg
sub
fldenv
pop
push
mov
pop
movaps
mov
jns
flds
fs
cs
jb
pop
push
movsl
popa
and
in
adc
jmp
popa
pop
sarb
sub
aad
mov
imul
fld1
dec
cmp
add
sub
pop
push
sub
dec
adc
ss
ds
popa
pop
rclb
fsubp
lahf
test
pop
add
pop
imul
ret
xor
mov
add
xchg
loope
xchg
pop
divb
jnp
add
and
add
fdivrs
ljmp
add
or
pop
aas
sub
cltd
test
inc
push
insl
push
popf
and
orb
xchg
ret
add
inc
pop
cmp
xlat
xchg
mov
or
and
inc
cwtl
dec
mov
pop
ja
jnp
adc
pop
cmp
rorl
mov
mov
pushf
pmuludq
test
cwtl
cmc
insl
inc
inc
js
data16
imul
andb
and
loop
icebp
call
stos
js
cmp
mov
std
fbstp
or
and
jmp
popa
enter
fistpll
jle
jae
jecxz
fucompp
lock
aaa
dec
test
pop
clc
cld
insl
test
sub
pushf
pop
jmp
pop
mov
pop
into
add
xorb
sub
arpl
rcl
mov
fwait
push
sbb
js
push
adc
inc
ljmp
jg
mov
xchg
sub
es
das
mov
jo
inc
shll
mov
daa
add
test
jp
push
popa
add
mov
push
int
enter
adc
adc
test
push
aam
aad
mov
lds
mov
sbb
fs
push
jb
sti
or
out
jae
in
frstor
fsubl
lahf
cmp
pop
fidivl
test
rcll
mov
xchg
jmp
inc
leave
stc
jl
push
dec
lds
jae
jns
cli
out
loopne
inc
or
loope
and
loopne
icebp
cmp
scas
dec
cmp
add
and
lcall
add
test
pop
or
mov
push
mov
dec
mov
sbb
icebp
mov
or
push
icebp
incl
leave
je
mov
sbb
mov
add
inc
sbb
cmc
pop
std
add
fimull
jmp
sub
pop
dec
test
push
pop
notb
int3
adc
add
fld1
pop
imul
lea
repz
icebp
push
ds
jmp
pushl
push
mov
add
xor
notb
test
mov
lods
popa
cli
insl
icebp
pop
mov
dec
fs
je
xorb
add
jge
std
cli
push
into
adc
les
lods
lret
jg
push
repnz
mov
pop
test
das
jno
xchg
fst
push
or
cmp
add
cs
sbb
ds
sbb
dec
sarb
out
icebp
insl
jo
mov
addb
add
xor
lret
mov
cmc
out
adcb
jecxz
sahf
mov
orl
mov
subb
mov
hlt
out
mov
mov
in
dec
pushf
insb
iret
add
pop
cmpb
sbb
jns
or
fnstcw
imul
add
or
les
push
mov
jg
sbbb
add
add
or
jg
dec
cmpsb
fildll
push
andl
sub
test
jae
adc
mov
faddl
mov
xchg
cwtl
and
jo
dec
and
movsl
fwait
inc
push
popa
sub
cltd
pop
pop
push
mov
xchg
fbstp
cmp
add
shll
sahf
adc
cli
aam
lret
inc
jmp
loopne
sub
add
add
mov
xchg
fsubrs
dec
jne
sbb
jmp
js
jle
pop
test
cltd
push
add
mov
pop
test
aad
decl
push
sbb
push
xchg
stc
cmc
enter
jecxz
idiv
in
mov
mov
xchg
stc
decl
sidtl
jnp
notb
add
add
add
add
dec
lock
mov
je
inc
movsb
std
push
orb
or
add
in
adc
in
push
mov
mov
or
inc
dec
in
insb
xor
xchg
jnp
mov
xchg
testb
icebp
sub
icebp
or
mov
mov
add
scas
std
out
add
add
ret
lods
mov
cmc
scas
std
push
adc
cli
sub
adc
std
test
scas
add
inc
dec
or
mov
jl
xor
add
or
inc
aas
or
push
pop
sbb
xchg
xor
aas
xchg
jmp
test
pop
int3
jmp
jge
sub
xchg
aam
adc
jo
adc
sbb
adc
cmpsb
or
pop
outsl
adc
adc
jge
or
adc
and
in
jmp
notb
mov
xchg
data16
popa
and
pop
sub
gs
jl
fnstsw
push
lcall
cmp
push
in
cmp
mov
aad
add
outsb
or
sbb
add
mov
pop
and
cmpl
sub
jmp
cmc
bound
dec
xchg
mov
xchg
jae
cmp
stc
cmpsb
loop
je
mov
mov
subb
test
or
das
xchg
jmp
cmc
adc
push
pop
ret
or
faddl
push
cli
mov
sbb
movsl
popa
xor
lcall
stc
bound
repz
xor
push
mov
cmp
test
js
jnp
add
xlat
sub
pop
cmp
pop
mov
push
adc
xor
test
test
jecxz
fmuls
push
sbb
and
test
push
xchg
adc
adc
aaa
jne
push
out
loope
mov
sbb
dec
negb
push
mov
les
sbb
jmp
mov
fnstenv
jns
xchg
ja
xchg
push
pop
push
stos
adc
inc
bound
dec
cmp
lods
lock
js
push
psraw
adc
mov
shrb
sbb
or
add
add
std
dec
or
adc
xchg
mov
cli
testb
or
sar
in
jl
or
sub
cli
push
push
inc
jae
stc
decl
mov
psraw
sbb
gs
jg
pushf
dec
fimull
or
xorl
test
daa
mov
aad
xchg
mov
mov
sbb
add
xor
daa
add
pop
ss
xor
and
xchg
sbb
cmp
rcrb
inc
mov
sbb
daa
add
cltd
push
shlb
adc
flds
adc
call
add
js
mov
mov
sbb
add
in
mov
dec
jno
inc
jmp
shlb
test
mov
sbb
dec
xor
adc
data16
xor
jae
add
push
cmp
pop
je
sbb
push
sbb
dec
xchg
daa
inc
jmp
data16
xor
push
sbb
dec
into
daa
inc
jmp
pop
je
mov
sbb
mov
daa
inc
jmp
cmp
or
cltd
ror
stc
mov
fsubrs
popa
adc
iret
push
stc
mov
test
dec
inc
or
adc
add
push
stc
mov
call
cmp
cltd
and
stc
mov
fadd
push
inc
mov
fstpl
mov
sbb
add
mov
cltd
pusha
dec
cltd
stc
mov
call
cmp
std
sahf
loop
mov
inc
bound
push
cmpsb
andb
push
mov
cli
or
push
mov
mov
in
sarb
std
cli
xor
add
fiaddl
js
mov
les
lret
jge
pop
fld
jl
pusha
cmp
push
jmp
ljmp
fnstcw
ds
lock
sarb
je
stc
add
aam
mov
mov
andl
out
insb
mov
pop
sub
stc
sub
cs
outsl
cpuid
fldenv
bound
in
cmpsb
fisttpll
add
cltd
dec
scas
loope
int
xchg
shll
out
pop
pop
addr16
popa
aam
repnz
cmpsl
aad
dec
call
pop
arpl
out
ss
outsl
scas
inc
in
call
mov
mov
add
popf
mov
pop
add
or
mov
leave
stc
jmp
mov
sbb
aad
mov
add
inc
jmp
inc
sub
sub
int
and
xor
add
popa
bound
xchg
adc
push
sbb
push
fnstenv
mov
push
cmp
sbb
fs
adc
shll
xchg
cli
and
fdivp
dec
in
dec
cltd
pop
aas
mov
subb
fadds
add
out
push
mov
repnz
loop
int3
nop
add
rcrb
dec
call
adc
jne
stos
aam
pop
adcb
lcall
sbb
div
je
xchg
dec
push
insb
lock
lret
fidivl
inc
daa
xlat
add
inc
mov
stc
loope
add
push
lods
icebp
fcoms
dec
or
je
cmpl
lods
adc
cmova
push
push
push
or
test
icebp
add
dec
rolb
bswap
xchg
inc
pop
mov
mov
daa
xlat
push
xchg
scas
mov
jmp
movsl
mov
add
mov
out
dec
jp
inc
nop
mov
mov
clc
or
insl
or
mov
xchg
fcmovu
adc
jl
jne
add
add
xlat
psubusw
jo
jmp
cmc
jbe
xchg
cli
clc
and
outsl
adc
fdivr
ret
lea
jno
lea
jmp
popf
add
fisttpl
jge
push
mov
outsl
pop
imul
into
add
cmp
jge
sub
sub
lret
jo
popa
and
mov
and
add
add
add
mov
dec
push
sbb
jl
pop
bnd
sbb
adc
push
lret
pop
adc
lret
push
mov
daa
add
cltd
xor
aas
fiaddl
push
adc
and
mov
icebp
stc
hlt
cmp
inc
jmp
dec
in
sub
cli
aam
in
jmp
stos
das
pop
sub
jg
in
sbb
mov
xchg
push
negl
flds
jmp
mov
and
hlt
and
xchg
fimuls
and
ja
push
inc
popf
pop
es
loop
and
popa
dec
push
ds
cld
adc
mov
push
cld
add
cmp
bound
ds
jge
stos
aam
add
lret
dec
rclb
fisttps
inc
dec
rol
jne
arpl
push
shlb
stos
push
out
mov
inc
pop
mov
push
jl
sbb
add
test
hlt
adc
or
push
cmpl
pop
sub
lea
scas
and
aad
add
jne
out
add
add
add
cmp
xor
mov
jbe
std
jmp
xchg
icebp
push
das
scas
dec
mov
jmp
jmp
std
mov
xchg
or
inc
jle
aam
scas
fsubl
sub
icebp
adc
mov
fbld
push
ds
add
ret
push
push
stos
and
and
mov
add
inc
dec
xchg
mov
push
out
and
xor
cmp
test
ret
mov
lock
rolb
aam
popf
push
lahf
insl
cmp
imul
fsub
xorb
pop
push
jg
mov
pop
and
jp
loope
cld
sti
mov
jae
push
fcompl
inc
fisubl
aam
sub
add
adc
push
aam
xchg
mov
sahf
in
addr16
fsts
pop
inc
out
cmpsl
add
push
clc
sbb
add
xchg
ds
in
mov
in
adc
pop
and
fmuls
shll
aam
in
inc
jmp
push
or
cmovns
in
cwtl
adc
addr16
sbb
sub
faddl
add
add
inc
je
das
adcl
push
sbb
push
sbbl
and
movsb
sbb
push
rorl
outsb
lock
jmp
lods
movb
mov
es
pop
pop
movb
pop
repz
int3
pop
insl
add
fildl
imul
cld
imul
cmp
mov
mov
pop
jp
xchg
addb
xchg
mov
test
jmp
ret
lret
mull
shufps
cmp
repz
push
xchg
repz
test
btc
jmp
rolb
adcb
push
jnp
daa
je
pop
repz
bound
gs
cmp
mov
add
cmp
outsb
jg
add
add
loopne
add
jp
jp
lock
xchg
jge
ja
dec
jg
xlat
cmc
addl
data16
loop
sub
imul
std
inc
pushl
fistpl
or
fistpl
or
jge
mov
call
loope
loop
sub
push
or
in
jecxz
data16
jno
lock
jo
sbb
fptan
jg
add
add
sbb
adc
stos
pop
std
xor
xor
push
repz
adc
cmp
inc
daa
jmp
out
fisubrl
pop
int
aaa
insl
cmp
mov
pop
jg
sbb
call
and
lcall
outsl
lds
test
aas
inc
fistpl
call
and
fs
push
cmp
add
das
inc
jbe
mov
pop
jg
fwait
sbb
add
add
jg
imul
push
fimuls
cli
push
jnp
shrb
xchg
ds
jp
ds
test
ds
push
test
jmp
data16
ds
jp
ds
dec
scas
ds
cmp
outsl
and
sub
sub
xchg
sar
mov
in
xchg
xor
cld
int3
shr
fldl
add
jae
mov
test
iret
loopne
stc
leave
mov
andb
loope
out
adc
clc
cmp
arpl
je
inc
incl
add
add
pop
mov
pop
pop
add
pop
add
jmp
mov
aas
pop
cwtl
pop
cmp
pusha
fadds
add
inc
add
add
mov
sub
xchg
add
and
mov
adc
sub
jmp
cmp
scas
aam
lea
cmp
fdivs
bound
cld
fisttpl
sub
icebp
addl
add
outsb
std
jmp
add
pextrw
cmp
cmpb
aas
arpl
andb
call
mov
cmp
sti
xchg
adc
bound
pop
cmp
gs
idiv
insl
jo
negb
jns
arpl
jg
outsl
jle
pop
or
push
repz
loop
pop
mov
push
mov
test
add
dec
addr16
shrb
add
into
repnz
cs
popa
addr16
shrb
popa
adc
loop
pop
out
cmp
fwait
and
jl
data16
aad
push
adc
outsb
rolb
outsb
cmp
fstl
cmpsl
lock
dec
and
fstpl
repz
call
sub
pop
rolb
insb
sbb
jmp
loop
and
popa
jb
call
inc
aam
clc
adc
sub
adc
pop
and
popa
fld
scas
pusha
scas
out
xchg
or
add
pop
fcmovb
adc
or
inc
rolb
popa
fwait
inc
call
test
jnp
movsb
or
sbb
ja
stc
and
ror
mov
add
jmp
sub
rcrb
call
iret
adc
dec
faddl
and
add
lret
sti
jbe
out
fisttps
xrstors
clc
decl
orl
flds
push
sub
mov
jb
mov
jae
add
mov
outsb
and
out
sysret
in
and
mov
subl
add
mov
mov
mov
add
int
dec
mov
into
mov
clts
or
decl
fstpt
or
lret
pop
cli
push
or
adc
dec
fdivs
fsubrl
and
aaa
sub
mov
mov
mov
add
faddl
dec
insl
lock
pop
and
outsb
subl
ret
add
cli
shlb
jno
or
mov
cmp
outsl
pop
cli
lods
movl
mov
xchg
sub
xchg
and
dec
fldcw
push
pop
mov
fisttpll
jmp
mov
in
pop
mov
adc
inc
insb
bound
push
mov
xchg
jg
lods
or
mov
push
inc
in
xchg
mov
jle
mov
out
xchg
outsl
leave
push
xchg
inc
imul
mov
mov
mov
mov
mov
int
cmp
jl
pop
xor
push
cmpsl
fsubs
and
inc
push
add
gs
inc
sbb
adc
push
push
test
popa
flds
sbb
sub
aad
xchg
mov
xchg
stc
cmp
cmp
jecxz
sbb
add
sbb
repnz
or
or
add
out
and
iret
and
fs
or
jb
mov
jb
or
daa
inc
mov
das
stos
mov
inc
incb
add
add
sbb
dec
jae
cmp
xchg
fadds
mov
mov
pop
push
cmp
cmpl
scas
ret
icebp
push
mov
shlb
or
pop
mov
fildl
movq
mov
mov
inc
or
jns
sub
push
js
std
jae
nop
push
test
into
add
cmp
or
inc
add
add
add
mov
mov
std
aad
call
std
xchg
add
bound
or
loop
and
jp
or
pop
out
jg
gs
out
jae
jge
dec
pop
gs
mov
mov
cmp
mov
pop
cli
fnstenv
sbb
sub
pushf
outsb
std
call
scas
adc
loop
and
cli
cmc
not
and
cmp
inc
adc
lock
cmp
int
bound
call
gs
mov
jno
flds
imul
imulb
jmp
push
add
in
add
loope
sbb
fiaddl
fstl
xchg
push
fidivrs
add
adc
fucomp
ret
sbb
sbb
mov
jl
pop
sub
out
stos
addr16
pusha
add
jae
cmpsl
add
pop
mov
in
pop
arpl
daa
push
lret
fidivrs
inc
and
imull
add
adc
add
xchg
add
shlb
orl
cmp
into
das
push
push
or
popa
fsqrt
das
arpl
ljmp
mov
js
pop
jnp
jns
movsb
fisttpl
jae
mov
sti
outsb
lcall
mov
pop
dec
ljmp
mov
pop
dec
dec
pop
push
jns
push
fisttpl
jecxz
pop
dec
int
jecxz
movsl
sub
stc
add
imul
faddl
addl
add
das
rcrb
lahf
add
xchg
lods
add
mov
inc
add
std
pushf
adc
pop
add
push
add
and
pop
push
xor
inc
or
sti
xor
pushf
adcb
inc
cmp
sbb
sbb
test
es
mov
pop
test
sahf
push
and
call
idiv
mov
or
incl
add
add
repnz
pop
cld
jl
test
ja
xchg
push
push
cmp
mov
xchg
std
pop
addl
lret
imul
aas
inc
popa
test
inc
arpl
jg
addl
dec
test
pop
xchg
jns
inc
pusha
push
jg
xchg
test
jmp
or
add
add
repnz
bound
sbb
or
outsl
andb
cmp
cli
loop
push
mov
pop
addb
fiadds
leave
jbe
test
out
mov
test
pop
cwtl
pop
fisubrs
imul
sub
add
js
es
loopne
andb
out
shl
inc
ret
ret
push
and
insl
cmpb
jbe
pop
jnp
loopne
mov
jb
pop
dec
adc
fimull
fldenv
cmp
push
pop
flds
jmp
add
repz
loop
sub
jbe
jl
and
jp
call
pop
pop
loopne
popa
flds
lea
add
add
jae
cmpsl
movsl
cmp
pop
pop
int3
repz
fldenv
bound
mov
fmuls
jmp
imul
out
and
xchg
inc
call
fwait
outsl
ss
test
add
loope
aaa
out
ljmp
lahf
psubq
xor
pop
pcmpeqw
pusha
add
and
pop
mov
sahf
leave
cmp
add
add
mov
data16
push
mov
sbb
add
fstpl
adc
into
icebp
incl
and
mov
test
aam
or
ljmp
inc
lret
int3
pop
ja
ja
dec
pop
jp
leave
push
jp
mov
pop
dec
and
push
fiadds
dec
fcomps
test
cmp
mov
jmp
mov
test
push
mov
jg
loope
mov
cmp
or
leave
pop
cli
in
pop
or
imul
pop
jg
ja
test
cmp
sub
test
pop
add
insl
fidivs
push
cmpb
imul
xor
imul
cli
loop
jle
push
push
test
xchg
sbb
add
imul
cmp
test
jp
pop
cmp
es
call
leave
jno
insb
xor
repnz
jno
data16
in
push
int3
push
iret
data16
popa
in
in
lret
pop
pop
xchg
or
fldenv
mov
aas
loopne
mov
lret
mov
test
stos
mov
mov
sbb
les
add
add
scas
imul
cmc
lret
rol
das
int3
rcl
das
shlb
sbb
lcall
cmp
dec
fwait
add
xor
in
pop
sbb
decl
loope
jecxz
sbb
ljmp
ret
jecxz
test
filds
cmpsl
or
pop
adc
rorl
je
add
add
daa
ret
imul
inc
call
popa
flds
lods
pop
aad
out
in
iret
call
sub
andb
je
xchg
adc
enter
dec
fldl
adc
add
adc
add
inc
das
invd
mov
pop
clc
or
lahf
sub
add
xchg
je
test
ud2
jb
stc
mov
mov
or
add
aad
add
or
jne
pop
repnz
xchg
sub
jnp
add
loop
add
sti
adc
testb
dec
adcb
shrl
psubsw
faddl
add
push
adc
addr16
pop
cmp
sub
add
in
jns
lcall
jmp
stc
xchg
jge
arpl
lret
sbb
adc
mov
flds
pushf
aas
jmp
mov
ja
pop
push
std
rcrl
out
add
mov
or
movsb
mov
sbb
test
insl
add
xlat
and
mov
adc
jge
data16
add
add
out
loop
jmp
fildll
add
mov
fldenv
dec
in
out
nop
jae
push
lea
add
add
clc
bound
add
aam
enter
pop
mov
daa
test
out
outsb
or
ret
add
push
test
test
pop
lret
pop
add
test
add
addr16
pop
in
xorl
cmc
jno
fadds
jecxz
cmp
sub
in
cmpsl
sbb
sbb
pop
mov
adc
das
push
addl
pop
mov
jl
data16
insl
mov
dec
je
add
jb
mov
mov
cmp
sub
add
inc
sbb
int
loope
pusha
stos
lret
test
fistpll
and
jmp
flds
inc
cmp
add
lret
push
into
fisubs
add
mull
xorl
fsubs
mov
idiv
lret
push
dec
movsbl
inc
add
adc
or
outsl
fiaddl
mov
add
add
adc
decl
cmp
jmp
inc
add
testl
test
call
idiv
ss
cmp
fnstcw
fadds
data16
mov
sbb
sbb
inc
push
cltd
and
insl
xchg
jge
xor
subb
and
pushf
sbbl
cli
xlat
mov
mov
pop
cmp
pop
adc
popa
jns
sub
and
std
es
or
add
jns
inc
arpl
adc
jmp
cmpsl
push
cli
lret
mov
int
dec
add
mov
xchg
jno
push
leave
mov
bound
jne
push
inc
std
sbbl
out
imul
iret
sti
pop
push
into
dec
push
call
and
loop
adc
out
cltd
cltd
cmp
xlat
sbbb
out
mov
ficoml
mov
in
bound
add
jo
xlat
push
inc
daa
dec
and
fsub
add
cmp
add
add
xorl
or
and
add
jno
les
stc
out
or
and
and
push
push
or
adc
stc
jno
insb
call
mov
imul
inc
push
inc
mov
mov
stos
add
fisubrl
dec
int
ljmp
add
jmp
lods
outsl
data16
jb
dec
daa
imul
fcoml
xor
or
movsb
mov
push
stos
add
ljmp
lds
out
dec
and
push
mov
jmp
popf
xchg
cli
mov
pmuludq
scas
ret
and
or
cltd
sbb
mov
adc
mov
hlt
lcall
add
add
cmc
jl
clc
inc
clc
loop
add
inc
out
lcall
xor
test
cltd
sbb
mov
rclb
cmc
ret
hlt
lods
xlat
inc
inc
pusha
outsb
push
cmp
xchg
lock
xchg
cld
adcl
cli
movsb
sar
mov
push
cli
insl
repnz
xor
arpl
jg
jle
add
out
inc
cli
inc
jmp
pop
out
shll
jmp
sbb
xor
cmp
adc
stc
fnsave
hlt
test
mov
es
les
lret
out
cli
aad
mov
xchg
fxch
idivl
pop
push
test
addr16
push
out
jmp
pop
sti
pop
out
clc
pop
pop
dec
add
outsb
mov
bound
mov
scas
gs
sahf
shlb
push
stos
pop
and
pop
aad
sahf
and
pop
imul
std
cld
xchg
mov
jnp
sbb
and
cmpsl
sti
mov
lds
ret
and
hlt
addr16
pop
in
mov
and
jmp
sti
loope
add
int
aad
push
pop
push
lds
mov
cli
sbb
es
pop
sbb
int
rolb
mov
out
pop
notb
and
into
sbb
sbb
add
rclb
scas
loope
push
sbb
fwait
inc
call
rcll
jmp
out
leave
in
pop
cmc
ficompl
adc
mov
stc
mov
add
add
pop
out
cwtl
arpl
add
jg
xchg
jnp
ret
push
ss
lds
mov
xor
ret
mov
mov
add
call
addb
sti
or
and
clc
arpl
incb
mov
out
fcoml
testl
out
adc
aas
add
xchg
add
mov
insl
cmovae
jno
adc
addb
inc
cli
loop
cmc
call
loop
stc
call
loop
cli
or
pop
dec
cli
mov
fiadds
les
jp
jb
test
mov
push
mov
mov
cmp
cli
mov
push
cli
push
dec
jae
xor
add
cmp
out
push
movsb
jle
int
clc
jle
pop
leave
or
std
cmp
scas
dec
cli
add
fsincos
jl
jno
add
fldcw
shlb
shll
pop
shll
jl
jo
add
fldenv
pop
es
mov
sub
test
mov
add
daa
clc
and
mov
iret
data16
push
cwtl
push
les
lret
mov
jns
ljmp
cmp
fbld
inc
lods
pop
in
pop
fwait
and
sbb
int3
dec
add
in
jmp
loope
xor
or
pop
in
popa
fld
scas
pop
lods
out
xor
bound
test
into
mov
in
pusha
xchg
or
mul
mov
pop
mov
fimull
imul
jmp
loopne
stc
out
mov
dec
icebp
add
mov
push
fsubp
shr
cmpsb
pushf
jnp
imul
sbb
add
add
add
and
jne
push
pop
and
in
jl
aas
add
in
mov
orl
les
test
inc
and
hlt
sbb
xor
cmp
add
into
enter
rorb
pop
in
cmpxchg8b
and
andb
mov
shll
ud1
mov
push
mov
shufps
incl
add
add
aas
add
add
icebp
cld
push
jp
ds
bound
cli
loope
and
bound
mov
jne
call
jp
outsb
shll
shlb
cmp
sbb
jmp
in
inc
jae
in
mov
add
cmp
test
jge
sub
ja
pop
sahf
iret
inc
xchg
mov
jle
xchg
sbb
cli
jge
inc
add
insl
jg
popa
pop
jb
add
pushf
jg
or
cltd
xchg
cmp
fxch
outsb
pop
nop
mov
mov
mov
nop
jb
pusha
out
mov
push
jle
pop
out
mov
pop
mov
fsubrs
inc
fists
fistpl
fcmove
iret
pop
cmp
test
clc
mov
mov
mull
mov
add
insb
inc
icebp
into
icebp
cld
je
jmp
pop
lret
push
lcall
mov
fsubrs
insl
push
add
mov
mov
xchg
mov
mov
cmc
pop
push
inc
ss
cmc
jbe
push
inc
std
dec
or
cmp
xchg
jle
inc
mul
sbb
xchg
mov
arpl
or
add
xchg
jmp
outsl
jge
jmp
mov
cmpb
out
cmpb
aam
ds
adc
ds
cmp
faddl
call
faddl
inc
cmp
inc
cmp
flds
flds
cmp
flds
flds
flds
cmp
flds
call
flds
call
flds
call
flds
call
flds
jo
inc
mov
loopne
jnp
loopne
mov
loopne
mov
inc
jnp
loopne
jnp
loopne
bound
loopne
jb
loopne
jb
shll
jb
jecxz
jb
shll
jb
in
jb
loop
jb
loope
jb
loope
jb
loope
jb
shlb
jb
loope
jb
loop
jb
loop
jb
shlb
jb
loop
jb
and
frstor
jb
frstor
jb
frstor
jb
frstor
jb
fldl
add
add
jb
frstor
jb
fbld
jb
fisubs
jb
fisubs
jb
fisubs
xchg
test
call
aam
push
fmuls
into
pop
jmp
stos
lds
lea
out
inc
fwait
mov
movsb
popa
call
add
add
and
hlt
add
and
jno
dec
out
cmp
loopne
sub
data16
add
add
in
hlt
add
cltd
xchg
fdiv
cmpsl
daa
test
pop
repz
outsl
jecxz
cmp
xchg
or
shll
test
divb
cltd
inc
stos
xor
repz
out
push
sbb
adc
add
aas
jb
push
inc
lds
call
jmp
xchg
jb
nop
cmp
pusha
sbb
cld
out
sbb
les
jp
sbb
jne
cli
loope
cmc
jge
pop
in
push
les
pusha
adc
adc
pop
stc
jmp
fcomps
je
mov
or
je
mov
xor
imul
add
scas
ljmp
scas
sti
imul
add
add
jae
movsl
lcall
clc
outsb
les
xchg
xchg
push
cmp
xchg
xchg
push
push
fimull
add
sub
cmp
add
ds
loope
xor
outsb
xchg
test
add
outsl
lret
mov
xor
dec
jl
jl
lret
aad
les
add
lea
jno
pop
cmp
enter
add
fldcw
mov
sbb
push
mov
push
jmp
add
add
mov
mov
or
mov
add
fsubs
pop
lret
decb
jmp
or
pop
repz
mov
mov
mov
jle
cmp
xchg
jo
lcall
bound
pop
fnstenv
fadd
lret
rdtsc
fsubrl
fcoml
jge
out
mov
jmp
lods
inc
vpunpckhbw
or
in
mov
hlt
shll
out
and
fsubl
out
mov
pop
inc
mov
out
mov
cwtl
mov
in
sub
add
sbb
pop
cmp
add
add
fsubp
lds
flds
cmp
mov
mov
std
add
jecxz
mov
imul
arpl
bound
pop
leave
adc
mov
je
fmul
or
pusha
mov
stos
flds
sub
add
sahf
aas
add
pop
fisttpll
fistpll
dec
cmpsb
pop
pop
shll
inc
in
ficomps
test
mov
stc
jbe
shlb
jmp
rcll
test
mov
test
pop
fdivrp
cli
add
and
add
add
adc
decb
gs
sub
pushf
je
mov
out
je
fimuls
adc
enter
add
fidivl
decl
cmp
inc
mov
test
push
call
addl
sbb
dec
icebp
add
or
push
std
inc
stc
sti
das
mov
push
lret
andl
decl
repnz
jle
std
jae
cmpxchg
movsl
sub
adc
inc
mov
xchg
inc
add
add
add
mov
fnstenv
test
rorb
xor
jno
adc
push
mov
jle
aas
xchg
or
adc
xor
push
fsts
jmp
inc
add
rol
decl
arpl
inc
loop
mov
xchg
repz
aad
out
or
add
add
add
sbb
bound
test
out
in
sub
out
lret
pop
jmp
roll
dec
xlat
out
mov
fld1
inc
jecxz
out
bound
sub
lcall
mov
mov
pop
bound
testl
cli
dec
out
bound
addl
add
sub
cmp
bound
cltd
popa
flds
subl
jo
in
push
stc
push
fsubl
stc
inc
jae
and
pusha
sbb
loope
adc
mov
pop
lret
xchg
stc
push
ficomps
pop
sub
testl
xchg
ficoms
sub
std
call
flds
or
sarl
add
dec
outsb
mov
popa
addr16
push
stc
adc
jge
push
fists
xor
xchg
loop
push
pop
mov
stc
add
or
test
mov
orl
inc
in
xor
neg
inc
cmpl
jmp
sub
add
pop
mov
mov
cwtl
test
push
aas
dec
mov
add
add
xor
add
addl
jns
mov
repnz
jg
cmp
add
dec
pop
add
dec
fsts
insb
xchg
std
call
lock
xor
add
out
cmp
jmp
xor
aas
bound
xor
faddl
add
xchg
cmp
jp
add
add
or
xchg
faddl
call
mov
and
push
cmp
jne
stc
jp
sbb
gs
lds
mov
push
push
fsts
or
jo
das
fs
incl
out
fucomi
loopne
jmp
fs
lahf
add
stc
out
test
cmc
shrl
pop
sub
xor
push
pop
pop
xorb
dec
xchg
xlat
ret
lods
arpl
sti
pop
fidivl
in
ret
adc
in
sub
loope
pusha
cwtl
test
add
hlt
clc
dec
lret
add
cmpsl
or
xlat
mov
fs
insl
pop
repz
arpl
add
loop
icebp
push
mov
cld
loop
mov
add
cli
push
pop
dec
lds
adc
mov
test
call
into
ret
cmp
std
dec
mov
mov
mov
popf
dec
cmpb
movsb
push
jb
popa
dec
int
lods
test
call
or
adc
inc
gs
add
add
add
mov
inc
mov
xchg
and
scas
aad
add
xchg
repz
or
sti
push
ret
and
and
sbb
push
test
mov
add
adc
ds
push
test
rcrl
push
and
and
sub
adc
xchg
push
xchg
dec
int
and
push
mov
and
ds
add
loope
clc
and
imul
bound
fisubrl
jmp
leave
shll
add
repnz
xchg
call
and
inc
inc
push
jnp
ds
or
outsl
loop
mov
out
addl
addb
add
xchg
aam
dec
lods
adc
mov
jne
inc
xor
addl
jmp
movl
pop
mov
andl
call
xor
add
jmp
jle
cmc
cmc
sbb
pop
sbb
pop
pop
test
mov
mov
aam
or
push
cmpsl
mov
adc
daa
add
dec
cmpb
out
sbb
fldenv
out
outsb
enter
mov
mov
cmpsl
add
xchg
or
ficomps
mov
xor
gs
out
int
ror
pop
and
pop
flds
add
cmp
flds
bound
clc
sbb
negl
fidivs
inc
or
sub
inc
or
and
clc
cmp
sbb
xor
mov
and
push
dec
xor
xchg
add
negl
divl
insb
adc
sub
pop
or
popa
flds
fs
idivl
sub
and
xchg
dec
adc
cltd
add
jb
push
in
stc
mov
out
addl
orl
shlb
jnp
push
push
pop
in
adc
xlat
cmpl
sbb
in
psubq
mov
adc
sub
or
add
and
pusha
push
pop
stc
jg
inc
inc
add
arpl
xor
push
pushl
daa
mov
or
cmc
lcall
insl
and
and
adc
adc
jl
add
add
subl
add
add
mov
or
pop
loope
cli
enter
mov
ljmp
in
add
add
sti
call
jmp
jmp
daa
lods
sbbl
jb
add
and
cmp
cmpsl
fs
js
shll
in
sub
and
add
int3
sub
sbb
shlb
jl
xchg
sub
push
mov
or
bound
mov
dec
add
adc
fdiv
ret
jge
sub
and
xchg
ret
iret
push
fldenv
adcl
out
bound
daa
add
push
xor
jne
mov
aas
inc
mov
testl
add
add
mov
fists
mov
dec
out
lods
fstl
mov
out
repz
aas
fstps
xlat
xor
outsl
push
cltd
out
sub
repz
mov
mov
sub
loope
std
xor
add
mov
in
sub
lds
call
adc
mov
cld
or
and
fisubs
push
lods
push
push
test
sub
insb
or
sub
inc
push
mov
inc
test
sets
cld
aad
inc
jmp
shrl
in
pop
adc
cmp
mov
mov
sbb
test
xor
cld
call
shl
stc
add
rclb
add
add
dec
mov
aas
or
cwtl
push
cmc
jge
filds
divb
xor
xor
mov
xor
push
adc
je
cmp
sub
adc
sbbb
mov
aas
sbb
cltd
add
adc
sbb
push
repz
call
or
ljmp
or
add
adc
cmp
stc
push
jmp
rcrl
ljmp
sti
das
mov
inc
out
sysenter
push
jo
test
sti
sarb
add
lock
out
aaa
test
adc
dec
mov
decl
jo
inc
bound
push
xchg
std
jle
mov
sar
dec
jmp
out
test
je
into
rorb
fcomp
cld
mov
and
mov
push
inc
mov
mov
jecxz
mov
jnp
and
ret
sbb
add
daa
int
shl
int
sti
sar
pop
lock
bnd
into
int3
sub
dec
shlb
out
in
fsubr
fnstsw
and
call
add
cltd
out
mov
out
sbb
jge
std
out
scas
xorl
nop
enter
push
enter
push
pop
lods
popa
inc
adc
push
enter
fdivs
and
cmpsb
fsub
out
mov
adc
pop
fadds
pop
insl
test
popa
fstl
adc
or
ds
push
jnp
test
adc
stc
mov
mov
xor
and
cmc
fnsave
cli
mov
aas
je
or
adc
push
cltd
add
faddl
xor
xor
in
mov
xchg
test
jle
dec
je
fbld
mov
divb
or
xor
sti
xlat
cmp
pusha
adc
je
pop
jl
jnp
push
push
lret
mov
fbld
jge
xlat
je
cmc
icebp
outsb
or
adc
bound
dec
jae
mov
pusha
or
adc
adc
cmp
fucomip
inc
add
mov
jmp
sti
je
bound
or
push
push
outsb
lock
sub
or
jne
mov
cmp
dec
flds
adc
andl
mov
xor
jo
xchg
and
aaa
ret
jg
jb
shrl
sti
aad
and
adc
inc
std
jae
or
jb
sub
in
lock
bound
stos
pop
fnstcw
adc
add
add
lock
sbb
incb
inc
adc
and
jmp
adc
fldenv
lcall
in
ss
bound
into
in
cmpsl
add
sahf
mov
imul
out
aaa
stos
xchg
jp
add
call
scas
pop
test
es
pop
cmc
ret
pop
in
fptan
jg
add
mov
fstps
cmp
dec
imul
fsub
add
jl
sbb
xchg
js
xor
add
cmp
inc
adc
dec
lds
adcb
in
fsubs
out
sub
and
jle
jnp
les
lods
orl
in
lcall
jmp
cmovae
insb
rcll
jecxz
andb
sti
clc
jmp
popa
flds
fs
jmp
test
inc
dec
fs
sti
xchg
jmp
xchg
subl
xor
mov
mov
enter
push
push
jbe
sbb
pop
fstpl
stc
cmp
divb
jge
das
faddl
add
sbb
push
inc
iret
rclb
fisttpl
lea
out
mov
push
enter
fildl
call
fwait
je
cmp
mov
push
push
jae
cmp
xor
loope
dec
fcomi
ja
cld
adc
sub
stc
test
cwtl
or
ja
repz
lret
dec
out
jg
cli
or
lea
add
push
imul
xchg
mov
mul
add
xor
adc
and
dec
push
jo
cli
outsl
les
shll
std
cs
test
aaa
pop
mov
fstpt
adc
cld
xlat
and
je
xchg
xor
lods
mov
inc
fnstcw
sbb
outsb
adc
add
add
mov
add
push
add
icebp
mov
add
jecxz
cmc
xor
je,pt
inc
jmp
cld
ret
aad
lahf
xchg
cmp
fs
push
xor
loop
imul
fnstenv
adc
test
jb
ljmp
mov
fsub
add
xchg
ret
rep
mov
add
leave
out
add
sbb
fsubl
scas
icebp
mov
out
clc
sbb
xor
jmp
pop
xor
sub
inc
cmp
mov
test
fs
popa
push
aad
lods
dec
inc
int
int3
jae
add
xchg
jl
sub
mov
push
shlb
stc
push
adc
xchg
movsl
cmp
out
lea
inc
int3
add
icebp
mov
cld
add
or
in
and
sti
and
sub
mov
mov
jge
mov
addb
or
inc
add
or
idiv
inc
jmp
cmp
push
imul
xor
cmc
mov
xlat
add
cld
inc
xor
aad
shlb
call
mov
lret
cmc
adc
inc
cwtl
je
xor
or
mov
jae
add
jne
mov
bound
sub
notb
lock
testb
xor
repnz
jo
aaa
scas
cmp
and
inc
mov
pop
js
lods
cli
int
add
bound
orl
lea
out
push
frstor
sbb
inc
mov
pop
pop
testl
push
fldenv
sbb
jp
in
xor
stc
inc
cmp
std
pushl
icebp
dec
insl
and
out
sbb
cmp
mov
add
add
add
cli
inc
addl
repz
xchg
cmp
mov
jecxz
divl
cmpsl
xchg
in
inc
jno
xchg
clc
cmp
sbb
mov
xchg
shll
ficoms
jno
out
aad
jl
test
adc
sarl
rorl
xor
fldcw
aas
test
out
pushf
and
call
pushf
and
fs
frstor
cmp
shlb
out
xchg
pop
cltd
popa
nop
test
int
push
bound
in
fldlg2
popf
lock
lock
cmp
popa
fld
stos
or
inc
xchg
push
mov
fsubrl
leave
inc
jmp
movsl
xor
jmp
loopne
add
push
cld
andb
add
pushl
lcall
mov
popa
lock
cmp
push
add
inc
adc
pushl
fdivrl
add
mov
ret
add
popa
mov
cltd
dec
mov
pop
ja
clc
dec
adc
addr16
push
xchg
adc
add
xchg
out
add
mov
pop
clc
pusha
mov
lret
fucomi
xor
aad
mov
jne
push
dec
lock
adc
dec
mov
push
loop
pusha
imul
test
movsl
xor
cmp
jns
add
cs
in
movsb
jo
or
pop
mov
jmp
and
cli
xchg
in
mov
add
add
adc
mov
cltd
orb
mov
int3
inc
push
and
fidivs
roll
call
filds
sub
add
cmpsl
mov
sub
sbb
fiadds
adc
sbb
std
out
mov
pop
jle
add
add
jg
inc
ss
stos
lea
add
dec
cmpsl
add
dec
add
sub
stos
sbb
add
push
xor
fnstenv
repnz
fildl
fnstenv
pusha
bound
sbb
push
cmp
fnstcw
shlb
mov
ficomps
jne
pusha
jne
add
fsubrs
mov
pop
in
push
lret
aam
or
mov
icebp
popa
lods
inc
push
in
mov
mov
flds
jb
bound
aam
add
and
xchg
in
movsb
jge
mov
test
adc
sbb
stc
aas
repnz
iret
dec
das
subl
ss
stos
fsts
jp
in
icebp
pop
inc
add
shlb
inc
mov
dec
and
mov
inc
sub
push
jnp
scas
mov
add
mov
sbbl
mov
dec
push
rcrb
testb
pop
push
subl
or
rclb
shufps
cmp
and
fst
sub
pop
dec
and
mov
emms
stc
decl
gs
push
xor
push
test
sbb
inc
xchg
stc
mov
cmp
dec
mov
shr
aas
bound
icebp
push
jmp
mov
dec
mov
fdivp
out
mov
cli
out
or
inc
movsl
rolb
orb
pushf
in
dec
aam
mov
outsb
mov
or
add
add
fcompl
inc
jp
mov
cmp
inc
std
jmp
xacquire
ljmp
orl
pop
inc
sbb
xor
xor
pop
inc
mov
pop
adc
pop
pop
mov
jmp
push
loope
bound
in
cwtl
arpl
out
hlt
clc
out
int
out
sub
xor
mov
mov
scas
pop
testl
xchg
pop
sti
mov
pop
clc
scas
jl
xchg
mov
inc
cmpsl
add
adc
push
or
out
bound
sbb
xor
rcrb
das
bound
adc
pop
lret
cmpsl
xchg
or
rcr
mov
mulb
jns
shlb
add
add
in
xor
add
add
adc
jmp
mov
pop
sub
push
bound
adc
popa
fptan
lods
sub
pop
lret
ljmp
sub
push
dec
fstpl
pop
and
loope
sbb
stc
insb
fsubl
jmp
dec
xor
xchg
cmpsb
test
mov
add
mov
addb
jge
adc
out
orb
call
adc
cmp
je
push
push
add
jg
xchg
xor
scas
sbb
add
pusha
jb
out
les
addr16
cmp
subb
dec
data16
xor
mov
cli
cld
mov
add
mov
in
sti
scas
bound
add
xchg
adc
lcall
jbe
ds
jle
pop
jbe
sbbb
sarb
mov
test
xchg
ss
push
std
pushl
or
bound
lods
xchg
roll
ds
orb
pop
cli
push
mov
jae
stos
xchg
add
add
add
mov
mov
repnz
xor
xor
cli
filds
mov
movsb
fstps
fwait
push
stos
sahf
inc
cmp
cs
dec
enter
xchg
out
mov
cmpsl
xchg
popl
pop
loop
std
cltd
jle
fsubl
out
jle
cs
cs
cld
fidivl
add
and
mov
xor
popa
push
ljmp
movsl
jmp
adc
je
pop
bound
dec
arpl
pusha
les
outsb
ret
loope
out
cwtl
add
jns
xor
jo
inc
or
in
inc
jmp
mov
xor
jmp
dec
mov
out
pushf
push
push
rcrb
add
add
push
dec
lds
mov
cmpl
push
outsb
mov
or
icebp
mov
fnstsw
push
movsl
or
ss
adc
call
push
cmpb
pop
stos
in
add
add
push
nop
lds
inc
daa
and
mov
addb
cmp
add
xchg
mov
scas
insl
and
scas
cmp
mov
mov
addb
lret
inc
xchg
insl
cmp
push
sbb
or
sbb
adc
pop
pusha
add
imul
sbb
call
lret
leave
xor
sub
ss
or
sbb
add
fdivs
lods
in
pushl
pop
arpl
or
inc
cmc
xchg
aaa
sub
pop
jmp
cmp
iret
js
jp
pop
sarb
fisubrl
cli
jmp
cld
ret
psubd
inc
std
jmp
les
mov
jp
stos
pop
adc
movsl
sub
cli
pop
adc
je
pop
pop
add
inc
mov
mov
mov
bound
push
fprem
xchg
pop
jmp
add
lcall
je
insl
pop
cmpsl
divl
lcall
sub
xchg
movsl
sarl
notl
fs
sti
fisubs
pop
ljmp
pop
sahf
pcmpeqd
mov
jnp
loope
pop
fstl
out
les
jo
imul
les
call
scas
cmp
add
ss
xlat
add
pop
jnp
jns
mov
js
idivl
out
sbbl
pusha
movsb
cmovne
push
pop
push
add
ljmp
sbb
mov
das
stc
arpl
dec
std
jns
cs
fs
xchg
mov
push
push
or
out
push
ljmp
lds
pop
cli
rcl
stos
sar
rolb
add
stos
rcr
imul
out
push
outsl
std
loopne
adc
outsl
cmpsl
pop
jb
sar
mov
pop
jb
mov
pop
stos
pop
fsts
fldt
xchg
data16
push
pop
push
shlb
and
rcrb
or
adc
sbb
and
fldl
jo
and
mov
xlat
adc
ljmp
cmp
mov
add
add
ret
out
push
cmp
push
sub
jne
mull
xchg
test
popl
sarl
sbb
repnz
pop
int
std
add
or
inc
or
sub
call
loope
out
mov
or
push
adc
loope
bound
stc
mov
fdivp
dec
mov
xchg
pop
fxch
sbb
imul
adc
xor
or
loope
std
je
lret
loop
popf
sub
inc
pop
cmpsb
out
xchg
fisubrl
xor
sarb
mov
add
mov
frstor
js
lret
cli
int
les
pushf
cmp
add
push
xor
fnstenv
xlat
adc
mov
popf
and
or
inc
or
icebp
jp
or
jge
outsb
or
add
add
daa
shr
adc
xor
dec
or
sub
aam
mov
lds
fcompl
imul
test
sbb
add
xor
xchg
mov
ljmp
fld1
mov
add
mov
dec
int
lods
dec
jg
fst
inc
frstor
repz
push
or
cmpsl
jecxz
rcr
add
mov
in
into
stc
cs
pop
popa
cld
out
bound
add
fiaddl
jmp
idiv
dec
jb
ds
cmp
adc
jne
xchg
int
add
pop
jmp
push
shlb
push
pop
ss
pusha
sbb
in
sahf
lock
jb
ds
pop
and
popa
fsubr
data16
push
es
cld
jmp
ret
mov
pop
or
popa
fld
daa
mov
add
popa
pop
std
xor
int
ljmp
adc
je
cmpsb
data16
push
cli
aam
insl
sbb
ljmp
mov
cmp
int
fldl
add
pop
add
lret
jns
flds
or
xor
jno
mov
inc
adc
rclb
in
stc
addb
add
or
loope
push
shl
mov
movsb
divb
cmpsb
aas
adc
fadds
mov
loope
xor
out
aam
in
fwait
pop
inc
sarl
mov
clc
sub
mov
mov
jle
std
jmp
jl
outsb
lretw
ret
in
add
std
test
mov
push
std
adc
pop
mov
or
jmp
mov
and
lret
add
outsb
aaa
mov
out
lret
sti
int
jno
jbe
std
jmp
fdiv
jl
xor
test
inc
cmp
xlat
add
add
add
movsl
testl
mov
inc
or
cmc
ret
pop
push
push
jle
scas
in
test
sub
in
mov
into
mov
mov
cmc
pop
fldenv
fistps
jnp
and
out
imul
lcall
mov
and
jnp
xor
xlat
fsubs
testb
cmpsb
mov
add
add
xor
call
push
xchg
insl
pop
and
jmp
push
pop
cltd
jmp
popa
flds
call
mov
stc
bound
repnz
jp
jmp
popa
lods
aas
ss
jge
push
and
es
mov
pop
pop
stc
add
fdivr
push
jecxz
je
mov
and
testb
add
pop
paddd
pop
pop
adc
pop
stc
in
flds
insb
cmpsb
or
add
mov
mov
idiv
mov
sti
hlt
sahf
aas
adc
loop
dec
cmp
sub
imul
jge
adc
adc
sbb
sbb
push
add
dec
push
mov
pop
mov
dec
movsb
or
fdiv
adc
mov
cmp
ljmp
std
mov
les
xor
sub
in
push
leave
mov
outsb
adcb
adc
xchg
lods
or
mov
bound
ja
testb
into
out
aas
bound
in
mov
mov
mov
inc
scas
add
mov
mov
push
xor
jmp
aas
jp
into
js
cli
les
ret
jae
jge
pop
das
testl
push
bound
jb
push
push
cmp
std
lods
inc
jae
das
mov
jl
out
fiaddl
and
out
add
lds
add
mov
in
mov
add
jg
inc
popa
fnstcw
mov
cmp
out
sbb
jbe
sbb
push
lods
iret
imul
xor
push
pop
pop
pop
sub
sub
inc
push
movsb
in
and
ds
xor
call
aam
pop
insb
jbe
and
add
jmp
cs
loop
aas
ljmp
add
popa
sahf
fucom
cmc
in
repnz
push
push
shll
stc
jmp
subl
sub
in
mov
xor
fldenv
call
insb
xor
or
pusha
and
mov
aad
sbb
fiadds
xchg
popa
and
repnz
cld
inc
mov
dec
xchg
sbb
sub
cmp
addb
xor
mov
imul
add
mov
cltd
add
nop
and
push
push
cld
rolb
int
push
lods
shlb
jnp
dec
jmp
mov
in
sub
test
jg
jnp
and
add
push
test
leave
repz
xchg
cld
push
shlb
rorb
into
mov
xlat
test
aaa
shrb
rolb
add
sti
sub
xor
rol
dec
in
andl
add
rcrl
push
daa
stc
push
call
bound
and
dec
jns
xchg
push
sub
cs
jp
std
call
out
dec
lret
stc
aad
les
push
inc
xchg
test
mov
jge
and
movsl
push
and
jae
and
sub
dec
and
add
add
dec
and
xor
jmp
dec
and
xor
jmp
xor
mov
push
test
mov
or
std
mov
cltd
stc
stc
xor
jmp
shrb
sbb
sbb
sbb
lds
push
mov
inc
sbbl
in
xchg
mov
loopne
cs
notl
scas
shrb
scas
call
jg
add
add
push
cmpsl
adc
sub
add
jmp
push
or
jbe
bound
or
sbb
sub
sbb
xchg
fsub
add
xchg
ret
pop
flds
insl
subb
add
insb
ret
imul
flds
or
cmc
and
jne
jmp
movsl
cmc
and
test
sbb
bound
add
int3
inc
jmp
dec
fldenv
jmp
outsb
jbe
lds
mov
cmc
cmp
lods
push
rol
es
add
in
je
call
sbb
xchg
or
call
daa
loope
inc
and
cmc
and
add
xchg
push
insb
add
outsl
mov
and
lret
push
arpl
and
xchg
mov
orb
roll
outsl
repnz
test
lret
les
idiv
das
icebp
adc
xchg
dec
jl
arpl
push
adc
dec
decl
jge
outsb
mov
inc
xchg
fwait
pop
mov
test
insb
rorl
pop
xchg
jge
outsb
mov
add
add
add
mov
sbb
dec
jmp
adc
stc
mov
inc
test
jo
stc
mov
inc
test
nop
cli
sbb
xor
pop
out
push
or
add
jbe
adc
jb
andl
mov
test
sti
push
sub
pop
pop
sub
std
push
jmp
add
call
lock
mov
add
add
xchg
inc
add
jnp
orl
sub
out
test
jnp
push
or
dec
or
fsubs
ja
fs
cltd
adc
cld
xchg
in
insb
les
cwtl
out
imul
sbb
or
mov
loope
add
sti
test
inc
mov
bnd
arpl
mov
add
add
add
pop
out
add
iret
fidivrl
mov
push
pop
fs
xor
and
sbb
or
lret
cmp
jnp
jmp
fbld
add
popa
loopne
cmp
cmc
pop
dec
mov
and
xchg
in
imul
push
jo
mov
stc
jmp
in
flds
jmp
mov
mov
in
stc
jmp
pop
adc
xor
subl
fldl
push
fldenv
add
mov
call
jb
pop
or
fistpl
pop
pop
flds
sbb
flds
aaa
mov
add
cltd
cld
or
push
xchg
lea
mov
sub
jecxz
js
mov
addb
cmp
test
stos
divl
test
push
aaa
pop
shlb
jle
and
stc
flds
xor
inc
js
adc
inc
pop
ljmp
lret
mov
orl
rolb
addl
cwtl
ret
mov
adc
int3
inc
and
mov
add
test
and
add
add
push
add
push
sbb
mov
and
mov
add
decl
inc
add
dec
and
imul
test
fisubrs
ljmp
or
xchg
or
cli
cld
dec
fld
mov
push
inc
mov
fidivrs
pop
mov
and
mov
add
adc
cs
push
mov
dec
call
loope
stos
and
es
das
cmp
lea
adc
leave
jp
iret
clc
imul
push
adc
lds
push
add
mov
repz
mov
adc
lea
bound
or
mov
fisubrl
stc
push
xchg
bound
inc
adc
inc
loope
fidivrl
xlat
out
out
insb
inc
jle
cmp
lods
lret
pop
cmpsl
or
jecxz
add
add
inc
jmp
stc
cmp
shl
call
sub
mov
push
outsb
mov
subl
push
mov
popa
fnstenv
aad
icebp
or
adc
jmp
mov
pop
or
mov
popa
adc
dec
cmc
je
je
fiadds
in
xchg
jnp
fs
mov
sub
fmulp
pop
call
inc
pop
adc
add
mov
push
push
dec
or
sbb
add
sub
adc
testl
jecxz
outsb
inc
pop
fmuls
enter
mov
pop
out
je
mov
ds
fnstenv
mov
jo
mov
xchg
popf
add
xor
cmp
test
cmp
inc
lahf
mov
inc
adc
push
lea
and
adc
ljmp
xchg
test
add
add
jne
stc
test
int3
jge
bound
inc
mov
test
jae
jne
and
leave
xchg
add
in
cwtl
add
test
adc
sar
xchg
push
sub
std
cli
xor
repz
mov
cwtl
push
jp
xchg
push
jne
and
fcmovu
cld
in
xlat
xchg
movsb
add
inc
mov
mov
add
out
mov
cmp
push
pop
and
push
test
imul
out
pop
adcl
xchg
mov
in
lret
cmc
fists
sti
cmp
movsb
ret
aaa
adc
add
dec
fstps
jle
pop
inc
xchg
xchg
imul
or
sub
xor
cmp
add
pop
mov
mov
dec
cli
cmpsl
add
jmp
jae
jbe
add
pop
adc
ficoml
stc
ljmp
insb
mov
adc
bound
mov
cmp
call
add
outsl
test
push
out
fadds
jmp
call
mov
adc
adc
mov
add
std
jle
fstp
add
lahf
test
cmp
push
test
push
inc
jmp
xchg
test
stc
push
mov
push
add
pop
les
inc
sbb
inc
or
test
jp
notl
inc
adc
or
fninit
idiv
mov
stos
rol
fidivrl
add
add
cmp
int3
add
sbb
lods
lea
dec
fiaddl
pop
push
leave
call
mov
fiaddl
jl
in
call
mov
xchg
add
flds
sbb
push
stc
in
fidivrs
jp
add
bound
inc
stc
int
jns
cmp
mov
call
ja
out
stc
fists
jp
insl
movsl
mov
test
add
sub
mov
xchg
sbb
xorl
mov
pop
nop
push
dec
jl
je
fisubrl
jl
push
jno
out
and
lods
std
jmp
xchg
dec
bound
addb
je
es
mov
fnsave
add
testl
mov
stos
fildl
icebp
icebp
pop
or
inc
push
cltd
out
xchg
fsubl
test
and
popf
or
orl
sub
jno
lds
mov
jle
fbld
icebp
jg
jp
sahf
mov
xchg
test
jge
pusha
fsubrl
iret
out
ficomps
fldt
fsts
pop
sbb
shlb
add
mov
stc
cld
aad
inc
jmp
pop
push
push
lds
dec
int
add
icebp
rolb
cli
and
test
xchg
stc
pop
or
fadds
jmp
popa
pusha
push
add
popa
fld1
pop
sub
add
mov
push
leave
pusha
inc
jmp
bound
sbbl
xchg
and
faddl
test
popa
loopne
add
divl
test
divl
divl
push
decl
xchg
add
mov
jnp
lahf
call
inc
jp
and
rorb
mov
dec
in
cli
jae
scas
sti
int
movsb
and
je
mov
push
rorl
and
cmp
or
cli
clc
mov
dec
adcl
rorb
dec
cli
decl
shrb
inc
and
push
orb
les
je
std
call
ficoms
lods
add
dec
sub
cs
out
jmp
add
add
add
mov
cld
jmp
clc
push
push
movsl
mov
bound
mov
gs
decl
clc
jg
inc
cld
jne
adc
jmp
or
dec
add
push
lods
nop
rolb
fnstcw
pop
pop
push
mov
cs
flds
shrl
adc
lahf
adc
add
add
pop
jb
ret
xchg
push
mov
xchg
inc
pop
add
jo
xchg
lcall
jp
mov
or
stos
fs
jle
xor
add
fldenv
ljmp
jg
mov
sub
fidivs
mov
mov
ret
push
adc
fld1
cmpsl
flds
jb
add
add
mov
mov
push
pop
xchg
jmp
fiadds
dec
arpl
stc
adc
shlb
push
repz
jmp
and
mov
mov
cmp
or
nop
jp
stc
lret
clc
lea
pop
mov
jno
pop
mov
movsb
adc
sbb
dec
cmp
add
add
pop
and
popa
flds
cmp
popf
and
sub
add
int3
mov
mov
fimull
es
or
lret
xchg
inc
jge
cld
enter
jge
or
add
outsl
fiaddl
add
cmp
and
xchg
stos
divl
test
lods
test
call
xor
add
add
add
add
push
and
xor
add
pop
inc
shll
test
push
jmp
and
out
jecxz
sub
xchg
mov
sti
pop
add
bound
ja
inc
add
mov
or
sahf
fcompl
cli
mov
stc
std
jnp
je
mov
testl
add
add
movsb
aaa
add
adc
add
cmp
fsub
and
mov
and
sarb
sar
xchg
stos
incb
out
shl
test
or
cmp
jle
mov
in
mov
or
mov
cmp
cmpsl
add
fnstcw
lea
add
add
fcmovnu
popf
out
jmp
add
push
fstps
out
xor
jae
add
jle
icebp
mov
ret
imul
fldenv
stos
aam
les
out
nop
push
xor
int
out
bound
hlt
jp
add
mov
sbbl
add
cmp
mov
xchg
add
add
adc
pop
pop
sar
push
inc
jno
cmpsl
mov
push
pop
push
or
cld
imul
test
jne,pt
data16
cwtl
hlt
xchg
xchg
add
rcll
push
aad
mov
popa
fld1
cli
flds
insb
test
lods
cltd
dec
inc
std
cmp
sti
fidivrs
cwtl
call
add
lahf
cmc
incl
add
add
cmpsl
test
sbb
add
add
mov
stc
decl
call
xor
adc
sahf
sbb
mov
jns
mov
add
xchg
outsl
jmp
pop
inc
sbb
add
jbe
and
fcoms
push
call
jbe
and
lret
add
into
rcll
xchg
and
and
add
dec
push
das
pop
clc
les
jge
mov
xor
andl
cld
fbstp
lock
dec
jge
cmp
call
fists
addl
and
jo
add
fidivrl
lock
jle
push
push
sub
lock
insl
je
call
dec
sbb
jne
and
popa
loop
fildll
cld
fnstcw
sbb
inc
sbb
jmp
adc
dec
xor
push
fildll
call
and
cmp
push
dec
fists
lods
or
outsl
xlat
push
jnp
or
mov
push
adc
cmp
sbb
or
out
xlat
jge
aas
data16
add
jp
mov
js
mov
jp
add
add
iret
add
out
sbb
fs
or
mov
jns
mov
jp
stos
xchg
push
jmp
lret
andb
fs
fldl
out
push
mov
js
mov
jp
stos
xchg
out
mov
cltd
adc
dec
popf
loop
or
stc
jmp
sbb
or
flds
jmp
inc
lods
aaa
or
enter
fidivrl
xchg
jle
std
nop
popf
and
mov
fscale
mov
mov
inc
pop
sar
cld
icebp
int
jmp
mov
or
popa
fxam
out
cltd
stc
xchg
flds
adc
cltd
add
cmp
push
shl
sub
arpl
call
push
add
add
sbb
or
add
shlb
inc
call
mov
or
xor
xchg
mov
test
call
mov
mov
inc
aaa
xor
and
push
jnp
pushf
cmc
testb
lods
or
add
inc
and
xorb
jnp
hlt
jne
xchg
add
pop
stc
mov
sub
xchg
js
jle
test
fisttpll
jnp
and
rorb
es
push
jmp
jnp
and
aaa
pop
and
mov
push
sar
cmpsb
adc
push
fstps
fimuls
mov
dec
loopne
adc
idivb
test
test
ljmp
add
ja
repnz
bound
aas
pop
cltd
jno
mov
cld
mov
neg
arpl
jae
out
xor
out
mov
or
push
jo
fnstenv
aas
add
mov
nop
xor
jg
jmp
cwtl
out
out
pop
push
jp
je
cmp
adc
dec
stos
fisttpl
and
insb
adc
std
out
pusha
dec
and
popf
mov
daa
adc
fsubr
add
jl
or
dec
pushf
fcompp
out
or
add
add
lea
sub
dec
jb
add
ficompl
or
add
in
cwtl
cld
insb
jp
test
ja
stc
cwtl
lods
push
shl
ds
popa
push
inc
test
bound
push
add
add
or
test
popa
fldcw
cmp
push
js
inc
add
fucomp
stc
xchg
xor
inc
imul
popa
jle
sbb
out
xchg
hlt
insb
dec
in
dec
ret
test
mov
fld
test
cmp
in
fs
xlat
add
sbb
jge
out
fbld
es
dec
fs
dec
incl
add
add
push
shlb
lea
nop
idiv
mov
inc
clc
mov
push
shlb
mov
push
mov
call
lock
jnp
andl
cmp
call
testb
cli
dec
or
into
notl
clc
mov
inc
mov
std
popa
in
andb
adcb
add
add
ret
loopne
addr16
inc
mov
aad
add
push
pop
cmpsb
jle
lock
jmp
add
pop
or
jge
lcall
add
sbb
mov
cli
insl
inc
in
jp
int
pop
push
in
in
arpl
scas
arpl
idivb
das
xor
sbb
mov
fists
fisttps
aas
stc
and
inc
sahf
mov
add
rcrb
cli
stc
int3
dec
sub
adc
out
out
mov
xor
xchg
sti
out
add
xor
xor
repnz
push
cli
jae
sub
mov
cmpsl
fsub
add
add
push
add
test
shlb
test
hlt
adc
add
add
cltd
out
es
add
fs
das
cs
pop
jnp
mov
call
mov
cmp
in
fs
aaa
repnz
movsl
in
cltd
jnp
out
pop
cmp
aam
jp
jmp
inc
fmulp
xorl
inc
inc
dec
jnp
cs
repnz
mov
jge
repnz
adc
int
adc
add
imul
idivl
pusha
insb
add
mov
outsl
jbe
add
add
sti
add
mov
orl
add
lock
addb
es
mov
enter
add
ret
adc
pop
in
adc
fildl
push
push
scas
mov
fildl
push
inc
mov
adc
and
mov
fildl
sysenter
jo
add
fwait
add
lret
lods
into
js
inc
aad
adc
aaa
flds
decb
rol
jg
inc
cmp
inc
les
movsl
lods
test
dec
incl
sub
pop
add
decl
add
dec
add
add
shr
mov
bnd
mov
cli
jmp
mov
inc
bound
inc
sbb
incl
notb
fld
in
sahf
out
aam
mov
nop
in
mov
xchg
in
test
add
mov
add
mov
fsub
add
fs
sbb
add
add
fsub
add
repz
sti
sbb
push
lahf
add
fptan
xchg
sub
pop
sbb
fisubs
adc
inc
adc
jp
pop
loopne
push
or
movsl
shrl
and
adc
or
fs
sbb
in
movl
addl
add
lock
out
fidivrl
and
loopne
bnd
cmc
mov
or
dec
jg
cmp
lcall
mov
pop
inc
int
pop
shl
jg
sbb
lcall
mov
pop
test
sbb
and
flds
insb
js
stc
jge
popa
pop
int
lcall
sub
fnstsw
add
popa
fldcw
mov
push
hlt
in
jns
xlat
fwait
pop
jno
pop
lds
dec
adc
mov
mov
dec
ljmp
fdivrs
daa
stos
notl
mov
bound
xchg
es
adc
aas
adc
cltd
and
psubusb
add
je
lret
adc
jbe
and
and
test
jmp
mov
inc
and
lahf
je
add
pop
andl
test
jns
cmp
cli
xor
cwtl
and
stc
cmp
jp
out
bound
data16
cmp
mov
xlat
adc
repnz
loope
fadds
cli
mov
inc
rol
sbb
jb
addr16
add
add
sub
push
lahf
add
jb
mov
std
out
add
xor
out
mov
bound
add
popa
rcrl
adc
mov
mov
inc
cld
lods
cs
jmp
insb
cmp
fstps
inc
stc
push
sbb
pop
pop
sbb
cs
xor
fnsave
and
add
add
mov
jecxz
into
leave
fisttpl
scas
loope
pop
mov
ret
pusha
mov
addr16
sbb
jo
and
movsl
daa
inc
mov
lret
inc
cmc
sub
jbe
add
lock
mov
call
pop
adc
xor
repnz
cltd
out
adc
add
pushf
fiadds
push
stos
call
fnstcw
dec
movsb
push
pop
flds
jg
popa
fprem
ss
add
pop
pop
mov
popa
lock
out
jl
push
fs
add
popa
flds
jbe
scas
clc
dec
insl
mov
pop
jae
loop
je
call
lea
xchg
add
scas
gs
test
or
movsb
loop
mov
pop
flds
jb
pop
rolb
pop
into
xchg
mov
add
sarl
syscall
test
jnp
or
sub
scas
push
add
xor
xchg
lea
nop
faddl
add
sbbb
cltd
and
xchg
aad
decl
inc
icebp
add
add
push
shll
add
add
in
cmp
xchg
add
lret
rolb
sahf
cmp
sarb
jae
pusha
insb
and
pop
mov
stc
jno
pop
in
sahf
inc
or
or
stc
ja
out
aas
bound
xchg
pop
inc
bound
or
arpl
jmp
lds
bound
std
mov
xlat
jle
jmp
adc
bound
in
gs
mov
inc
jle
xchg
add
jge
gs
ljmp
xor
adc
in
cpuid
add
insl
je
add
push
insb
xchg
dec
cmp
fnstenv
push
insb
ficomps
loope
xchg
out
fisubs
repz
into
sarl
out
in
ret
neg
gs
pop
cltd
dec
add
cmp
add
add
out
repz
push
cltd
out
xor
out
mov
out
sbb
aam
xchg
mov
jg
mov
push
inc
mov
push
mov
adc
bound
sbb
cmpsb
fldcw
out
out
test
in
bound
or
and
and
inc
in
jg
loop
jle
loop
addr16
test
or
xchg
mov
test
xor
cmp
mov
ljmp
xor
adc
lods
add
aad
lods
sub
outsl
add
push
cs
jb
pop
repnz
lcall
and
xchg
in
and
cmc
push
pop
jmp
push
test
xchg
adc
rorb
xorl
std
xor
fdivp
addl
mov
jmp
xlat
pop
mov
mov
lock
clc
push
cli
jnp
mov
mov
arpl
aad
je
pusha
aad
dec
fcoms
insl
out
push
adc
or
jnp
push
push
aam
fcoml
jnp
jge
dec
loop
fnstsw
fadds
jmp
add
add
sub
mov
mov
inc
or
sbb
xchg
add
sahf
add
jbe
inc
add
in
pop
es
adc
xor
cmp
call
icebp
jmp
inc
std
test
jae
cs
stc
outsl
push
hlt
aas
bound
add
gs
stos
adc
es
xchg
loopne
inc
out
stos
addl
mov
mov
clc
mov
pushl
xchg
in
adc
adc
jae
ja
adc
fnstenv
push
push
and
jmp
pop
xor
adc
add
insl
shl
jecxz
pop
gs
gs
sbb
xchg
push
or
ljmp
dec
fstps
fistps
ljmp
js
rcrl
mov
jge
roll
bound
sbb
mov
ret
add
mov
add
aam
bound
or
add
lods
add
jae
pop
and
sbb
call
pop
cmpsb
and
sbb
repz
lock
aad
int3
cmp
xor
xchg
data16
fwait
cltd
adc
loopne
or
imul
xchg
cmp
enter
xchg
addr16
inc
fchs
daa
add
mov
and
jmp
stc
call
cmpsl
leave
test
dec
in
add
ja
cmp
mov
jb
add
arpl
lea
rcll
popl
test
add
mov
or
push
shlb
and
mov
pop
mov
mov
xor
nop
sbb
xor
test
inc
ja
enter
ret
mov
add
fdivr
dec
aas
add
cmp
push
mov
adc
xchg
popf
add
add
movsb
out
jne
inc
ss
cmp
out
mov
push
add
jne
aam
repnz
clc
mov
andb
cld
xor
out
sti
addb
stc
lods
in
fmull
and
ja
inc
push
inc
add
mov
jp
add
jno
out
xchg
inc
xor
lret
jno
add
add
bnd
mov
test
out
sub
int
das
stc
push
sbb
aas
fchs
pop
insw
ljmp
sarl
push
out
jp
leave
outsb
adc
push
jg
insl
out
js
pop
pop
push
mov
popf
out
push
jecxz
int3
fbld
xchg
insl
iret
int3
xor
sub
gs
out
outsb
mov
fwait
push
or
sub
jmp
popf
out
dec
mov
inc
bound
test
sbb
xchg
adc
adcb
cmpb
cli
mov
test
fistpll
nop
dec
out
jmp
pop
rcr
movsb
call
jmp
test
call
popa
pop
add
mov
jnp
xchg
mov
out
flds
jb
pop
flds
and
clc
push
adc
icebp
xchg
movsl
pusha
and
mov
mov
sub
pop
flds
add
pusha
stc
cmp
js
jg
notl
mov
sbbl
bound
inc
push
add
fadds
incl
shlb
or
stos
stc
dec
arpl
cmpl
push
pop
in
addl
adcl
inc
lahf
mov
ret
gs
mov
in
test
movsb
and
mov
movsb
and
repnz
mov
test
jecxz
inc
and
xchg
jp
scas
stc
jnp
xchg
test
pop
rorb
std
push
cmp
lds
and
pop
insl
jae
jge
and
ret
sahf
in
dec
fnstcw
jl
ret
ficoms
and
mov
and
out
ret
push
in
xchg
push
in
fwait
hlt
push
enter
sub
sbb
or
mov
es
jmp
test
fmuls
call
out
or
movsb
push
pop
adc
sbb
xor
cltd
out
mov
data16
dec
imul
pusha
lock
enter
lret
cmp
inc
fstps
ds
cli
mov
test
pop
jbe
mov
pop
pop
sub
out
mov
or
add
add
cwtl
in
xchg
dec
stos
pop
jp
call
test
fmul
mov
xor
add
add
popa
fs
cmc
ljmp
cmp
pop
jl
cmpsb
loopne
aad
mov
xor
pop
clc
jb
mov
pop
sub
or
jmp
jle
or
sbb
iret
hlt
loopne
jb
mov
pop
lods
popa
pop
roll
inc
or
mov
cmp
int
movsb
or
sbb
xchg
jno
cmp
add
out
sbb
aad
rcr
push
pop
clc
and
dec
fisttpll
pop
pop
in
adc
cmp
mov
notl
sbb
jp
add
add
xor
push
jno
dec
call
pop
adc
pop
shlb
inc
jg
bound
arpl
inc
sti
pop
or
test
adc
push
adc
push
push
sbb
add
nop
adc
notb
divl
lret
xchg
daa
ret
add
add
sub
dec
cld
gs
or
add
add
insl
lret
aaa
cli
or
cld
xchg
sub
iret
and
xor
test
mov
enter
push
add
pop
push
call
add
and
add
dec
es
aas
bound
jbe
les
into
je
je
mov
lock
rcll
pushf
xor
sub
add
add
fldenv
aad
mov
mov
jecxz
imul
jns
cwtl
ss
clc
mov
int
inc
imul
cmp
loop
and
std
inc
xlat
jmp
mov
sbb
cmp
nop
sub
roll
fimull
aas
add
lea
add
jmp
shrl
out
imul
pop
push
xchg
xor
jo
cmp
into
add
mov
xchg
scas
sub
fadd
out
out
sbb
inc
mov
ret
pop
xchg
and
and
ljmp
mov
dec
or
shll
lretw
jmp
aad
adc
fisubrl
cmp
mov
bound
add
add
mov
sbb
les
bound
icebp
cmp
lahf
sub
std
and
inc
sbb
xchg
div
adc
and
and
cmpsl
cmc
adc
mov
roll
fwait
lds
out
leave
cmp
out
sarl
icebp
jecxz
rcl
mov
jp
xor
test
add
add
xor
imul
mov
dec
xor
jns
orl
inc
pop
stc
sti
push
adc
jecxz
jge
idiv
je
push
pop
mov
push
in
cmp
and
repnz
mov
sbb
fsts
loope,pn
jmp
loope
fistpl
loope
fildl
sub
ss
cmp
dec
pop
je
jmp
mov
repz
call
push
xchg
jbe
sub
mov
push
and
clc
rorb
pop
std
jmp
dec
stc
jmp
call
cmp
cld
fsts
pop
xchg
mov
inc
push
stos
out
push
mov
loop
es
sti
popa
lret
out
out
fsubrs
pop
pusha
inc
enter
fs
push
adc
mov
and
push
mov
out
push
mov
jne
cmpsb
adc
rcrl
mov
incb
mov
or
xchg
or
aas
fdiv
mov
mov
sbb
cmp
call
cmp
xchg
add
inc
push
inc
lds
lds
sbb
push
lret
fidivs
adc
movsl
xchg
pop
add
mov
adc
dec
int
push
dec
lds
insb
int
pop
jl
or
data16
pop
xchg
faddl
add
aam
call
ss
jl
ret
inc
cmp
add
jmp
and
jmp
sbb
mov
mov
add
or
mov
flds
xchg
and
push
mov
add
dec
je
mov
repnz
sbbl
mov
icebp
xor
dec
dec
inc
and
dec
inc
and
dec
inc
and
dec
ret
icebp
or
popf
dec
jl
dec
pop
and
arpl
xchg
pop
cld
pushl
push
mov
aam
and
sbb
mov
cmp
inc
rcrl
sarl
cmpsb
sbb
outsb
cmpsb
call
test
push
test
sahf
loopne
jmp
loopne
mov
pop
mov
xor
das
and
cmpsl
std
pushf
dec
pop
and
cmp
and
cmp
ds
add
xor
mov
test
mov
es
lock
cmpsb
cld
xchg
mov
jge
mov
adc
repz
inc
fsts
xor
clc
mov
lea
inc
and
ret
int
sahf
fld
repz
testb
or
add
sbb
sbb
sbb
push
call
cltd
adc
or
bound
mov
add
ljmp
fisttps
aas
ret
xor
ret
test
mov
or
lahf
cltd
or
stos
lcall
and
decb
xor
pop
mov
sub
sub
popf
std
sub
std
pop
jb
std
adc
movsl
std
cmp
pop
pop
cmp
enter
das
rol
xor
xchg
std
cmp
sbb
std
sbb
lahf
sbb
cmp
insb
mov
pop
add
movsb
dec
or
sbb
sbb
addl
fwait
cmp
and
outsb
decl
sbb
sbb
or
add
add
clc
jle
test
dec
mov
sbb
adc
fnstcw
loopne
jle
andl
inc
and
push
adc
rcr
mov
fmull
jmp
dec
and
pop
jne
stos
test
fldl
add
in
and
and
add
insb
and
adc
add
add
mov
pusha
je
xchg
add
adc
popa
inc
and
sbb
imul
add
mov
call
mov
sub
inc
inc
and
jae
and
imul
cmp
cld
in
pop
out
filds
fcoms
jmp
mov
sub
scas
fmuls
mov
dec
pushf
mov
push
test
add
add
fsubrp
dec
ljmp
and
mov
test
and
aaa
cmp
nop
dec
std
cmpsl
jb
popf
pop
sarl
and
aaa
cmp
fldcw
jb
lds
sub
cs
inc
xor
imul
pop
xchg
adc
sbb
out
push
push
imul
jmp
and
lcall
pop
popf
es
outsb
fldcw
xchg
pop
fists
push
xchg
jmp
mov
cltd
test
mov
push
in
push
in
fsubl
mul
sbb
out
fmull
in
out
sbb
or
fnstenv
xchg
xor
std
adc
sub
clc
out
jmp
add
popa
loopne
in
aaa
cmp
inc
pop
or
sar
jmp
call
adc
jo
std
adc
popa
flds
bound
or
imul
adc
test
cmp
leave
inc
dec
jmp
mov
or
popa
inc
test
cltd
jne
sub
mov
jp
cmp
lds
jne
gs
fisubs
mov
add
or
inc
mov
mov
sbb
fs
add
add
and
je
mov
jge
daa
loop
ret
cmp
and
mov
push
lret
test
stos
fisubrl
dec
addr16
mov
lds
and
jle
mov
mov
mov
inc
and
fs
add
aad
jle
mov
clc
test
movsb
cmp
or
add
negl
movsl
add
scas
inc
xchg
jl
jle
std
test
dec
cmp
dec
clc
sub
push
loopne
add
push
cmp
and
pusha
mov
mov
add
loopne
add
ss
loopne
mov
jmp
jnp
dec
cmp
dec
and
cmp
jb
ret
fld
sti
out
mov
dec
inc
adc
test
pop
out
mov
fists
sbb
jbe
and
adc
out
aas
fildll
adc
stc
push
dec
popf
mov
cmc
int
mov
rorl
cmpsb
cmc
in
mov
sbb
xchg
iret
ja
fists
repz
sahf
xchg
jno
xchg
jo
jle
popa
dec
xchg
adc
and
xchg
mov
adc
or
ficompl
test
jb
in
sbb
mov
pusha
lcall
ret
cmc
push
ds
sbb
sub
inc
pop
mov
dec
int3
fsqrt
iret
fwait
cmp
sub
add
add
cmc
dec
jo
cmc
push
shrb
flds
jb
push
dec
lds
push
dec
lds
cmc
xor
cmc
sub
ficompl
cmp
push
aad
or
rcr
stos
xor
mov
xchg
cs
test
fsts
add
add
push
stc
test
daa
arpl
jmp
and
dec
push
and
dec
cmp
and
insl
cmpsb
mull
jle
pop
mov
sub
outsl
rcll
mov
sbb
and
dec
cmp
mov
sbb
sti
mov
and
pop
ret
add
dec
insl
and
dec
cmp
inc
jle
std
roll
add
fcoml
pop
je
aas
or
mov
movzwl
mov
dec
dec
and
mov
inc
and
testl
mov
add
imul
add
push
jmp
and
or
sub
cmpsb
fisubs
stc
xchg
fdivrl
jg
mov
or
sahf
xchg
loopne
call
add
add
mov
ja
xchg
cmc
sahf
push
sahf
out
pusha
sahf
out
pop
out
fldz
jp
fsubrl
push
loopne
push
ds
out
and
shll
inc
pop
repz
push
cmc
sarl
mov
sahf
cmc
fiaddl
aam
les
loope
inc
push
fisubrl
xor
push
call
repnz
add
fcomip
adcl
add
in
xor
adc
mov
or
aaa
sbb
js
popa
push
call
sub
into
sbb
mov
icebp
cmp
sbb
jmp
roll
stos
adc
add
dec
cmc
sbb
fwait
sbb
popf
jge
mov
jge
clc
xchg
inc
or
xor
sar
ljmp
add
popf
shrb
sbb
shrb
sub
or
mov
inc
sbb
add
or
int
mov
xchg
mov
mov
popa
push
cmp
push
mov
aad
dec
test
and
xor
push
shll
fwait
push
in
adc
and
mov
incl
or
adcl
inc
xchg
ret
daa
push
or
sub
in
sbb
fists
sub
add
daa
push
push
sbb
fildl
sarl
daa
push
addb
je
pushf
faddl
push
pushf
cmp
fdivrl
and
mov
lahf
dec
inc
and
add
das
push
push
mov
gs
ret
mov
jnp
aad
dec
and
mov
or
daa
jmp
cmp
jmp
loopne
jmp
loopne
and
mov
add
sti
jmp
jle
xor
cs
inc
inc
fsubp
add
add
fnstcw
cmp
inc
leave
or
aaa
sahf
push
mov
and
mov
call
gs
es
push
add
sbb
bound
inc
adc
sbb
add
stc
mov
mov
cli
mov
sahf
sub
das
adc
arpl
jle
jb
xchg
jb
jle
ret
push
sahf
out
push
es
jg
add
fmuls
inc
ds
add
sahf
xchg
cmp
inc
fisttpl
out
push
sbb
sbb
mov
das
add
insl
ljmp
dec
jb
shll
dec
pusha
push
stc
testb
add
popa
ret
mov
add
test
outsb
ljmp
add
fnsave
arpl
add
jno
add
arpl
add
daa
fimuls
loop
push
std
push
cwtl
sbb
rol
enter
inc
pop
in
mov
cmc
ret
testl
lahf
mov
jge
inc
cmp
and
inc
push
and
inc
insl
and
fnstenv
mov
add
add
mov
and
negl
mov
mov
insl
or
repnz
cmp
mov
cmp
and
sbb
jne
rorb
sub
loope
dec
bound
cmp
cmp
and
repnz
push
xor
cli
std
mov
les
and
cmp
jne
clc
jmp
loope
jmp
loopne
fcmovnu
loopne
mov
loopne
insl
cmp
stc
mov
js
xchg
ja
jle
je
call
mov
push
repnz
push
lock
out
loope
xor
test
dec
inc
and
aaa
cmp
jl
jle
inc
jle
ja
xchg
enter
icebp
and
and
aas
inc
iret
jmp
jge
std
add
add
ljmp
std
add
std
sub
dec
jg
popa
aas
xchg
jae
jle
or
jle
push
neg
insl
add
test
push
std
cmc
fmulp
push
cmpsb
fbld
das
fimull
jmp
sbb
xchg
out
aaa
movsl
sub
jb
daa
fbstp
sub
jl
std
jge
scas
std
add
scas
sbb
sbb
lret
pop
cmp
sub
add
cli
mov
push
and
frstor
not
pusha
and
sbb
std
or
test
add
std
inc
scas
and
adc
mov
or
add
flds
popa
pop
pop
push
or
pop
or
bound
add
add
std
push
mov
add
fiadds
popa
inc
add
xchg
cmp
add
hlt
or
pop
mov
adc
push
aad
jg
gs
inc
mov
sbb
dec
addr16
push
addb
pop
out
add
dec
and
repnz
outsb
xchg
sarb
or
mov
add
add
xchg
jmp
and
sbb
out
shl
lds
cwtl
std
jg
mov
mov
jnp
orb
js
bound
je
xor
and
mov
add
fdivs
mov
lock
hlt
cld
xchg
jnp
and
std
test
jno
adc
jmp
xor
xchg
add
mov
add
add
pushf
adc
loopne
add
pop
movsb
adc
push
xchg
adc
ljmp
mov
dec
stc
cs
test
clc
push
aam
clc
push
fsub
out
push
mov
shr
lahf
je
fdivrl
ds
cmpsb
cmc
lds
cmc
mov
cmc
mov
mov
cmc
mov
cmc
lds
adc
push
fiadds
add
add
push
ss
lcall
pop
sub
add
mov
ss
push
es
push
es
pop
movsl
adc
cli
jl
cmc
sub
cmc
sbb
neg
in
cmpsb
stos
push
mov
cmp
pop
daa
adc
mov
jl
cmc
stc
ljmp
add
sbb
pop
bound
jg
jmp
scas
push
push
bound
cmc
or
push
jne
sarb
popa
flds
xchg
xchg
push
je
lcall
les
rcll
repz
shrl
int
mov
xor
jmp
push
call
lds
cmp
shrl
add
mov
add
test
insl
add
sbb
mov
bound
mov
clc
inc
std
mov
jb
pusha
decl
or
fisubrl
shrb
adc
icebp
sbb
inc
icebp
sbb
add
insl
pushl
pop
pop
fisubrl
dec
pop
leave
xabort
daa
sub
dec
scas
push
push
cvttps2pi
add
jmp
add
add
or
leave
lds
cld
add
add
mov
bound
cmp
cmp
and
arpl
test
mov
std
mov
je
das
jmp
add
mov
lods
mov
loopne
bound
fdivrs
f2xm1
sbb
ds
cmpsb
int3
dec
or
outsl
xchg
add
inc
loopne
mov
dec
mov
and
cmp
and
dec
inc
and
dec
cmp
cmp
sbb
dec
and
fwait
inc
and
scas
xchg
cwtl
popa
mov
fistpll
test
fld1
add
mov
add
mov
imul
lea
cmc
std
mov
cmc
icebp
out
and
push
rolb
out
push
sahf
out
push
and
ret
inc
sub
out
int3
ss
fstl
ljmp
push
movsb
add
bound
inc
loope
aas
ds
pop
push
int3
outsb
mov
cs
std
adc
pushf
fbstp
cmc
in
push
cmc
leave
push
ss
leave
adc
lcall
stc
pop
cmp
inc
fsts
in
add
popa
pop
cli
call
popa
add
sbb
mov
ficoms
enter
rcrb
mov
pop
arpl
cmp
jo
mov
popa
adc
mov
sbb
mov
mov
bound
cmc
sbb
cmc
cmp
lcall
add
cmc
pop
sldt
add
jns
or
adc
sbb
sbb
stc
sbb
push
adc
ljmp
jle
push
adc
jle
daa
adc
ret
shrl
arpl
push
dec
leave
wbinvd
stos
or
ret
inc
subb
dec
xchg
adc
push
cld
dec
movsl
sub
test
in
push
cmp
sti
mov
add
add
rclb
pop
add
xor
cmp
hlt
call
adc
mov
jl
cwtl
jge
pop
ret
jg
pusha
mov
stc
push
int3
call
call
out
adc
std
ds
mov
add
clc
std
jb
aaa
mov
and
mov
inc
and
scas
ret
xchg
add
add
pop
fiadds
outsb
xchg
push
test
push
xor
es
jge
fsubr
ficompl
cmc
inc
adc
repnz
mov
out
loope
push
fistl
mov
push
adc
cmpsb
out
sub
and
int
les
add
add
jno
jle
arpl
push
call
out
pop
sub
outsl
and
jmp
data16
push
mov
std
data16
xor
inc
stos
add
flds
jmp
insl
fisubl
xchg
pusha
ss
or
test
lods
mov
fs
mov
in
or
add
add
clc
push
call
inc
sbb
add
imul
mov
and
pop
pusha
movsl
incl
xchg
sbb
mov
js
icebp
jg
cmp
movsl
std
iret
pop
test
loope
jo
popa
movsb
or
add
jg
push
in
jle
loopne
add
pop
ljmp
sub
or
push
mov
add
add
push
ficoms
or
inc
dec
lahf
rolb
loop
insb
pop
mov
shll
push
cli
mov
lcall
scas
mov
sub
shlb
jmp
bound
xor
mov
sti
push
insl
and
push
insl
and
push
insl
and
in
jge
arpl
incl
rorl
mov
add
ds
mov
rcll
je
in
je
mov
test
mov
jmp
jmp
test
xchg
stc
frndint
call
psraw
mov
mov
stos
dec
ja
xchg
test
jecxz
gs
push
mov
dec
inc
fwait
cli
push
cmp
nop
add
jge
jo
add
jae
aam
add
add
les
mov
sahf
pushf
or
fcmovnu
repz
lods
add
cmp
jl
inc
or
or
add
ret
fcmovne
cmp
xchg
loope
out
out
jmp
mov
flds
lea
loope
push
and
sbb
scas
pop
out
jno
mov
jecxz
jg
fsubr
add
out
inc
pop
or
add
fiaddl
pop
sub
outsl
or
jmp
mov
lcall
mov
mov
ret
sub
add
leave
jge
pop
pop
pop
call
add
pop
bound
mov
jg
bound
stc
push
or
sbb
out
test
sub
test
fistps
pop
je
stc
push
jmp
popa
aas
enter
or
cmp
repnz
mov
push
daa
or
fistps
pop
sub
jmp
popa
lcall
popa
mov
and
adc
mov
aaa
mov
add
sti
fs
and
gs
pop
cmp
add
pop
push
and
cltd
sti
fcompl
sub
push
es
pushf
jmp
mov
adc
inc
rorl
std
push
cli
int
pop
adc
xchg
mov
sti
decl
or
dec
or
xchg
inc
mov
mov
inc
inc
bound
jae
pop
in
enter
mov
inc
jp
mov
add
adc
add
mov
add
mov
and
add
pushf
les
daa
js
leave
lret
cli
int
mov
jo
adc
mov
rolb
movsl
outsl
xchg
test
or
xor
xchg
stc
or
cltd
xor
rclb
rcrb
push
addb
ljmp
dec
fstps
cwtl
out
sahf
stos
scas
stos
adc
mov
add
mov
arpl
insl
mov
subl
sbb
test
fldl2t
xchg
bound
mov
fsubr
mov
enter
ficoms
or
std
loope
mov
or
cltd
xor
fbld
cmc
sti
push
sbb
cmpb
in
loopne
into
add
sub
bnd
mov
insl
es
js
mov
fisubl
adc
js
pop
sub
mov
push
pushf
call
xor
cli
push
jbe
inc
jmp
cs
push
fldl
insb
pop
loop
jmp
popa
or
mov
rcll
int3
push
shl
pushf
or
popa
aaa
std
and
mov
fs
filds
jmp
or
add
fiaddl
sbb
and
fs
and
adcl
das
mov
jmp
jge
push
cmp
loope
into
std
and
mov
inc
aam
incl
add
add
int
roll
pop
pop
mov
idiv
mov
pusha
decb
jmp
sbb
add
jmp
sbb
ljmp
loop
add
jle
clc
ret
fbstp
ret
mov
mov
clc
mov
lcall
push
fldt
and
mov
adc
jge
xchg
test
ficomps
add
pop
cmp
sub
push
mov
sub
cmp
stc
out
std
andl
loopne
bound
or
testl
hlt
incl
flds
xor
add
cmp
add
add
out
jle
ficomps
arpl
jmp
addr16
ljmp
fldenv
cmp
add
jle
ficomps
arpl
jmp
xchg
push
pop
cld
inc
bound
jae
pop
ficoms
cmpsb
push
repz
pusha
push
call
pop
fisubrs
addr16
test
mov
test
jge
cmc
pextrw
mov
jb
adc
fadds
loop
adc
insl
loop
hlt
lcall
test
cmc
insb
je
stc
push
sub
loop
inc
inc
rcrl
sub
fsts
stos
cmc
mov
popa
fld1
sar
clc
push
push
sbb
cltd
cmp
out
add
stc
sbb
je
pop
push
sbb
icebp
xchg
or
xchg
in
sbb
fisubrl
popa
pop
out
sbb
jne
mov
lock
roll
push
mov
sub
dec
inc
cli
add
sub
cli
add
push
mov
mov
mov
mov
push
mov
fadds
push
test
decl
rcl
mov
out
aad
add
add
sbb
inc
sub
mov
rcll
aas
rcrl
shrl
add
mov
push
sbb
lret
xlat
inc
push
push
mov
inc
and
out
xchg
dec
repz
xchg
jge
push
add
test
dec
cmp
mov
add
push
and
mov
add
in
pop
and
mov
add
cmp
shlb
lret
das
adc
insb
loopne
jmp
jmp
jg
push
cmp
add
jne
ds
out
flds
adc
bound
adc
dec
pop
ljmp
lret
xchg
stos
stos
imul
fldl2t
xchg
fldl2t
test
adc
add
fistps
sub
push
and
gs
xchg
out
pop
adc
fwait
sbb
fcmovb
cli
xchg
sar
fldcw
outsb
pop
scas
out
pop
cmpsb
out
out
jl
cmc
xchg
test
pusha
push
call
outsb
cmc
std
adc
jbe
add
jmp
push
les
jl
in
clc
cmpsb
or
mov
popa
fincstp
cld
mov
inc
jmp
mov
ljmp
cmc
dec
add
sub
dec
stos
test
and
mul
stos
std
call
inc
lret
xor
sbb
add
dec
cmpsl
pop
ret
jl
pusha
flds
mov
pop
dec
jmp
in
add
popa
adc
insl
xchg
flds
jmp
sub
jge
flds
and
sbb
mov
xor
mov
inc
hlt
mov
jge
mov
xchg
add
fcoml
jg
push
lea
push
mov
jge
xchg
pusha
jle
jnp
jge
pop
sbb
rcrb
add
push
add
imul
shrl
add
xor
loope
add
pop
call
rorb
sbb
decl
inc
xor
add
dec
or
sbb
je
ret
fnstenv
jnp
outsb
xchg
mov
test
sahf
cmp
das
mov
lret
xchg
cli
test
cli
jge
adc
addr16
cmp
mov
scas
cmp
stc
fdivp
cmc
orl
add
jns
enter
cmpsb
xchg
fldl
in
test
iret
out
jg
jo
andl
dec
and
mov
ret
test
and
sub
and
dec
xchg
push
pop
sbb
imul
gs
cs
mov
fsub
mov
push
aad
add
pop
jne
and
adc
sbb
cld
and
je
fcompl
in
sbb
sub
aam
inc
fadd
repz
fiadds
in
sbb
pop
or
loop
in
leave
sbb
xor
and
add
popa
sarb
f2xm1
or
cmp
or
or
popa
add
stos
mov
or
es
jmp
inc
fiaddl
fs
cmp
out
aaa
repnz
iret
scas
and
sbb
test
popa
fsts
adc
add
cmp
scas
lods
and
std
mov
or
mov
sbb
ja
test
dec
add
sti
fdivrs
push
scas
jge
in
and
ja
pop
mov
dec
fadds
add
and
add
sub
sysexit
cwtl
push
mov
and
loop
fdivr
add
js
sbb
mov
mov
sbbl
push
addr16
std
mov
mov
imul
lret
es
incl
add
add
cwtl
or
pushf
cmp
push
bound
fdivs
push
mov
popa
and
cmp
add
mov
xchg
es
sub
xor
je
aaa
inc
and
das
mov
cli
das
mov
aaa
pop
out
hlt
inc
loope
cld
xor
mov
fistpll
stc
aas
cld
mov
sahf
loopne
or
stc
out
cli
sbbl
add
insb
fcoms
leave
add
cld
rcr
call
and
inc
xor
je
mov
cmp
mov
and
sbb
jl
mov
jle
mov
or
sbb
mov
inc
jge
mov
jge
mov
test
fldz
push
es
sbb
repz
test
sti
pop
xchg
jno
cmp
sub
gs
jne
mov
push
mov
cltd
push
pop
jno
fnstenv
sahf
or
jl
mov
jp
mov
lods
add
add
and
push
in
lcall
out
orl
or
pop
ret
les
add
out
cltd
or
and
add
add
rol
rcl
fmul
push
popa
fmul
jo
push
cmp
sbb
add
and
dec
sbb
pop
push
sbb
popa
pop
lret
test
enter
xchg
or
jmp
pusha
loop
inc
pushf
or
push
imul
mov
lock
jne
ds
out
movsb
add
fnstsw
das
mov
leave
add
adc
jle
out
call
add
fstpl
ret
in
stc
xor
hlt
test
jg
xlat
pop
rorl
pushf
add
mov
push
jle
xchg
inc
mov
push
pop
lods
and
jmp
arpl
cmc
pop
lock
push
cli
test
faddl
push
xor
add
sub
cmp
stc
fdivp
pop
jb
insl
fcomps
rclb
or
or
stos
adc
inc
fcomps
inc
pop
bound
outsb
fcomps
dec
jns
inc
push
push
mov
xor
inc
and
mov
std
dec
movsb
in
loopne
arpl
xchg
jne
outsl
jle
mov
rorb
std
hlt
test
mov
bound
loopne
pusha
mov
stc
ja
add
xchg
fsts
jle
inc
repz
lea
lahf
jae
xchg
daa
cltd
jbe
xor
shll
ds
bound
sti
xchg
es
pop
es
sahf
ljmp
push
mov
xor
jg
and
add
popl
add
popa
xor
and
adc
xchg
icebp
adc
push
stos
push
pop
cmpsl
addl
subl
jae
and
adc
mov
lret
xor
aam
scas
xchg
sbb
out
insb
mov
add
ret
sbb
mov
mov
scas
mov
jb
add
pop
mov
jne
jmp
negl
mov
loope
mov
push
leave
push
adc
push
cli
cli
xor
fcomi
nop
roll
outsl
sti
fadds
jmp
xlat
adc
frstor
shl
out
mov
xchg
add
addr16
or
enter
cmp
dec
fldenv
seta
jbe
cmp
mov
stc
jbe
push
in
insb
lahf
add
in
call
mov
hlt
jl
ja
stc
je
cmc
mov
push
imul
push
shrl
inc
and
enter
mov
mov
dec
cmp
inc
in
jg
dec
cmp
and
repz
cli
clc
gs
pop
mov
in
adc
lods
pop
xorl
imul
or
fmul
nop
xor
std
das
jae
mov
add
out
add
add
mov
add
add
ret
cmp
mov
addr16
aad
cmp
and
sar
add
cld
dec
adc
adcb
addb
add
mov
fstps
add
dec
xchg
add
xchg
push
imul
fbstp
add
or
imul
mov
ljmp
ficoml
das
insb
dec
scas
sbb
sti
and
adc
sbb
sub
stos
dec
xor
cmpsl
pop
push
ret
xchg
mov
add
add
arpl
xor
adc
add
gs
loopne
ja
push
bound
pop
cld
loopne
adc
lock
adc
jmp
decl
ret
mov
mov
test
ret
push
aaa
cmp
inc
cltd
test
sbb
stc
or
add
lret
xchg
pop
jo
aaa
cmp
add
shrb
subl
aaa
add
sti
push
inc
jmp
pop
mov
fldcw
clc
pop
gs
clc
hlt
popf
lret
inc
add
and
mov
mov
or
jp
ret
push
mov
dec
mov
int
add
mov
sbb
sbb
cmp
add
hlt
fiaddl
shlb
cli
test
add
lods
loopne
mov
sbb
push
nop
push
jle
mov
je
sbb
cli
jne
scas
stc
adc
inc
or
shlb
ljmp
add
std
mov
inc
rcll
out
mov
fstps
je
add
add
mov
push
xchg
jmp
pusha
ja
pop
repz
jmp
insl
mov
fisttps
add
bound
fs
sub
or
mov
int
out
in
dec
cli
xor
cli
add
mov
pop
xchg
inc
fstpt
mov
insl
push
fnsave
shl
fdivrs
add
xor
add
mov
icebp
mov
jmp
sahf
enter
add
fstps
mov
add
scas
or
in
sahf
cld
add
shlb
in
sbb
sahf
ret
into
pop
jg
push
adc
xchg
ret
dec
out
adc
clc
pop
jmp
inc
je
jg
cmpsb
mov
rol
inc
in
je
pushf
andl
mov
ja
aam
adc
xchg
sub
in
xchg
clc
sbb
sti
mov
xor
and
mov
jae
add
pop
rcrl
test
leave
push
out
fadds
jmp
jmp
xor
pop
adc
add
lcall
aas
test
lahf
jne
jp
add
in
push
clc
insb
test
sbb
into
xor
or
fnstenv
neg
pop
dec
mov
fidivrs
dec
loop
sub
sarb
add
pop
mov
add
push
inc
push
inc
xchg
mov
into
int
jl
or
ret
jecxz
add
insl
pusha
cmp
jae
mov
add
fldl
jmp
bound
lahf
gs
ja
pop
mov
test
add
inc
lahf
fistl
popa
pushl
mov
mov
test
andl
mov
jmp
test
dec
jb
xchg
test
cmpsl
rolb
movsl
out
insl
pop
add
push
jge
xor
add
add
xlat
dec
xchg
cmpsb
sbb
push
sub
xchg
fucomip
std
out
arpl
out
call
sbb
outsl
call
adc
jns
xor
jge
andl
sbb
rolb
cli
add
nop
pushf
mov
mov
mov
push
fnstenv
out
adc
mov
add
add
sub
iret
adc
lea
mov
das
xor
jecxz
lahf
fldl2t
in
pop
pushf
push
and
jmp
lock
in
bound
mov
adc
xchg
sub
pop
cmp
and
and
jg
insb
jg
cmp
xchg
int
fimuls
in
cmp
pop
add
fists
dec
leave
insl
lock
cmp
pop
lods
cmpsl
pop
jno
fsubr
mov
popa
flds
adc
insl
popf
inc
jle
add
and
jmp
bound
xchg
mov
fcoms
cmp
push
add
push
add
stc
shl
mov
pop
inc
int
sbb
sub
repz
div
outsb
lret
movb
add
sbb
pop
rcrb
add
in
cmpsl
mov
push
xchg
out
adc
push
add
and
mov
mov
sbb
mov
pop
inc
and
aam
cmovs
add
mov
addl
cmp
mov
push
aad
cmp
mov
push
sub
std
test
add
jle
testb
add
icebp
insb
add
jbe
sti
jmp
arpl
cmp
subl
cmp
xchg
syscall
push
cmp
dec
fldl
je
fidivl
in
fimull
jae
xchg
push
mov
test
sahf
outsb
jne
and
jno
stos
jno
arpl
adc
jbe
add
enter
dec
and
mov
js
ss
and
mov
subb
jae
leave
jp
jnp
jge
shlb
or
sahf
sbb
stc
pop
mov
jae
or
push
outsl
stc
inc
sti
mov
mov
out
inc
mov
sub
xchg
aad
xor
inc
pop
fldcw
pop
sub
int
add
mov
arpl
add
xor
daa
xor
icebp
xor
lds
fldl
pop
mov
fldl2t
add
fsubr
add
and
adc
mov
xorb
add
ss
push
adc
aam
repnz
not
mov
ret
shlb
andb
add
mov
sbbl
add
fadds
push
adc
addl
jge
data16
bound
sbb
test
aaa
xchg
adc
or
pop
sbb
xor
mov
cmp
push
xchg
fcompl
imull
inc
push
gs
xor
add
or
jae
fimull
sbb
aad
mov
loop
add
mov
pop
insl
push
incl
add
add
add
loopne
loopne
int
jge
aaa
jns
fistl
lret
stc
push
test
sub
insl
aam
sarl
das
mov
lock
and
aad
bound
in
sbb
ret
add
cmp
rcll
jmp
mov
and
ja
adc
mov
fidivrs
addr16
add
inc
scas
decl
idiv
mov
push
jne
bound
cli
push
add
mov
loope
add
in
push
dec
fsts
rcr
sbb
nop
inc
xchg
fiadds
jle
sbb
bound
ja
clc
mov
and
push
sbb
je
add
add
adc
jp
jb
imul
sub
movsl
add
addb
arpl
rorb
push
add
sahf
aaa
aam
in
push
sbb
jle
pop
push
sub
out
ftst
sbb
inc
mov
pop
inc
js
jb
cwtl
in
or
pop
loope
sti
xchg
mov
lea
loop
pop
xor
jl
add
jle
mov
in
subb
std
int3
mov
add
push
fnstenv
inc
mov
jmp
jle
inc
jnp
add
fadds
sub
jne
add
inc
in
out
sbb
push
nop
cs
push
jmp
or
xchg
jne
mov
push
ljmp
fidivrs
cmp
xorl
jb
jmp
mov
push
clc
mov
test
add
popa
sbb
lea
mov
push
nop
cmp
aad
cmp
int
mov
bound
jmp
xor
pop
ret
rcrl
sbb
push
arpl
add
add
push
ljmp
or
flds
add
add
push
ljmp
pop
inc
dec
or
cs
mov
testb
fstpt
fsubl
push
xor
je
xor
add
mov
xchg
sub
add
es
repz
int
fisubs
push
icebp
jo
pop
pop
adc
mov
lret
mov
out
test
add
addl
add
sti
sub
xchg
and
sub
mov
add
jmp
idiv
and
xor
sub
gs
adc
adc
mov
and
shll
adc
cmp
dec
and
ljmp
adc
or
sub
sub
outsl
cmpsb
iret
clc
push
adc
or
stos
out
sub
dec
mov
mov
dec
test
into
out
out
gs
stc
lcall
push
jg
dec
lcall
sahf
in
andb
aam
test
gs
sbb
and
mov
inc
push
cmp
mov
mov
or
das
mov
cmpsb
mov
mov
adc
out
test
andb
outsb
push
pop
sti
ret
in
xor
in
shrb
addl
pop
push
jmp
add
fiadds
mov
movsb
and
fwait
inc
push
jb
mov
sbb
in
loop
clc
rorb
mov
sub
cld
cltd
jmp
add
cmp
add
add
sub
insl
add
cmp
jno
or
mov
and
xor
pop
and
pop
in
loop
hlt
jmp
adc
xchg
orb
add
xlat
lods
and
mov
cmpb
add
mov
xchg
mov
mov
mov
push
adc
sbb
jecxz
inc
addr16
and
pop
psubd
rclb
sti
fmull
or
cmp
cmc
pop
cs
out
jnp
or
add
popf
cmc
pop
pop
mov
scas
jge
ficompl
cld
sti
stos
mov
test
dec
cld
fcom
repnz
js
filds
add
jmp
shll
mov
or
sti
jmp
ja
xor
inc
push
fldenv
pop
cli
jge
stc
gs
out
adc
scas
jmp
xor
pop
and
ja
lods
mull
dec
push
repnz
lods
pop
adc
cld
test
divb
js
cld
push
fld
movsl
out
jae
call
fsts
add
insl
jbe
adc
mov
cmpsb
sti
or
cltd
scas
leave
pmaxub
xchg
push
stc
shlb
stc
andl
push
and
rclb
mov
iret
xchg
mov
jae
xor
push
sub
outsb
xchg
popa
mov
insl
mov
js
mov
rcrl
jg
out
in
push
ja
unpcklps
add
add
loopne
dec
cltd
push
sbb
test
jle
mov
mov
mov
jo
fbld
add
js
leave
test
decl
sub
jbe
enter
popa
lods
push
in
mov
ja
insl
repz
call
push
leave
jnp
jmp
popa
sarb
flds
add
push
adc
add
push
add
xor
rcll
adc
test
ret
xor
ret
mov
jl
ret
or
sub
hlt
std
out
add
cmpb
mov
jnp
inc
lret
add
and
add
cmp
push
dec
inc
stc
pushl
cmp
jae
mov
add
add
or
dec
in
or
add
testl
mov
ss
push
out
or
push
lock
addl
cmpl
inc
cwtl
add
dec
aad
push
mov
cli
pushl
sbb
arpl
adc
cld
or
cmpsb
imul
aam
add
ljmp
xor
mov
lds
cmp
dec
scas
sub
pop
cmc
aaa
mov
repnz
mov
jb
pop
mov
mov
stc
insl
adc
and
mov
icebp
fcoms
pop
xchg
jne
pop
imul
pushf
outsb
add
fldt
or
and
loope
rolb
add
inc
mov
and
addl
sub
or
cltd
filds
and
lahf
adc
int
orb
jns
xchg
cld
and
adc
mov
sub
and
call
aad
fnstenv
addr16
cld
ret
jge
fldl
adc
xor
jp
outsl
gs
push
stos
out
gs
mov
add
add
add
xchg
jmp
shlb
add
pop
pop
insl
popa
push
ds
popa
flds
aam
ja
mov
mov
xor
and
outsb
or
or
fst
cwtl
jmp
sub
out
movsl
popa
jno
cltd
pop
aad
xorb
iret
out
add
sbb
xor
push
incb
push
ds
jecxz
add
mov
fdivrs
dec
and
scas
cmp
jne
scas
aad
xor
cmp
add
and
xor
xchg
mov
push
and
mov
inc
in
inc
cld
call
sbb
mov
and
outsl
aad
xor
bound
lret
and
xor
mov
and
repz
inc
cld
pushl
sbb
and
mov
add
push
jne
push
push
xchg
push
inc
test
adc
cmp
les
cmp
jns
or
test
sub
jge
sbb
sub
out
add
bound
filds
out
in
adc
add
dec
mov
push
aad
int3
adc
jo
les
jns
out
jnp
cmp
mov
inc
or
mov
mov
cld
or
popl
int3
add
lods
je
and
or
psubusw
inc
push
cli
lret
pop
jmp
adc
jmp
in
lret
push
cmp
in
int3
jmp
ficoms
ss
mov
ljmp
add
cmp
ja
xchg
mov
jmp
lcall
push
sbb
push
mov
fldcw
add
in
insl
shlb
add
pop
inc
pusha
out
jmp
aad
jl
or
out
shr
int
add
add
add
js
sbb
sub
adc
add
dec
mov
and
popa
flds
mov
popa
jbe
sbb
jae
jno
push
ds
fmull
cmc
inc
jns
cmpsl
jmp
leave
rorl
movsl
popa
jno
push
popa
fnstenv
pop
pop
cmc
push
lcall
adc
add
ficompl
adc
add
add
pop
jb
jbe
sbb
sbb
bound
push
outsb
add
dec
ret
call
or
add
call
rcrb
bound
aas
and
jg
aad
and
shl
les
clc
push
dec
or
adc
cld
hlt
cmp
add
aaa
mov
fbld
mov
mov
popa
std
hlt
mov
add
cmp
add
mov
std
jmp
shlb
dec
iret
data16
xchg
clc
jb
dec
std
hlt
mov
popa
shlb
jae
or
fwait
lcall
adc
enter
mov
les
or
cmpsl
sbb
and
mov
mov
add
shrl
ljmp
add
add
cmp
bound
popa
push
xchg
popa
mov
loop
add
dec
jo
out
cmp
sub
inc
or
jg
movsb
out
fsubrp
dec
sti
movsl
jp
clc
ja
out
aas
cmc
inc
je
fnstenv
mov
icebp
imul
sbb
nop
roll
insb
cmc
out
add
cltd
xlat
js
test
adc
sbb
add
xor
inc
or
sub
sbb
adc
fs
push
or
push
loope
into
int3
cli
out
loope
xor
rcrl
ljmp
out
fisttpll
add
mov
fnstcw
pop
aaa
popf
mov
in
fsubs
add
adcl
ret
pop
jb
bound
add
add
or
cmp
jb
test
add
cmpsl
aaa
or
loopne
jne
or
push
jb
pusha
inc
int
arpl
adc
jmp
popa
inc
mov
clc
pop
and
int3
inc
sti
and
xor
adc
std
fimull
clc
jmp
idivb
jmp
and
mov
icebp
in
jmp
icebp
and
add
dec
and
push
in
mov
jg
cmpsl
outsl
loopne
jge
cli
lea
sub
cmp
rorl
aaa
push
in
add
jg
addr16
add
adc
lea
cmp
js
roll
rorb
test
push
or
test
add
shr
mov
xchg
popf
adc
adc
inc
add
or
xchg
and
xor
cltd
cli
lods
out
inc
jle
mov
es
and
adcl
push
ds
les
shl
mov
mov
jmp
mov
rolb
loope
add
jmp
adc
rorb
sub
inc
xchg
insb
push
out
push
test
movb
repnz
inc
test
fcompl
mov
sbb
mov
push
and
add
cmp
add
mov
outsb
fwait
xchg
push
and
jg
push
push
pop
sbb
fstpl
lcall
fs
roll
add
push
jmp
xchg
cmpsl
pop
cmp
cmp
pop
mov
inc
pop
mov
out
adc
xchg
pop
ret
jge
fld
and
adc
pop
cli
mov
pop
mov
out
pop
sbb
stos
ja
in
push
jge
pop
push
and
movsl
mov
adc
icebp
inc
jge
xlat
jmp
out
jo
movsl
in
rcl
inc
jge
je
in
sbb
inc
mov
dec
dec
dec
fistl
adc
push
xchg
rclb
mov
leave
fcmovnbe
popa
add
push
imul
int
pusha
sti
movsb
mov
push
or
or
mov
add
and
outsb
in
insl
mov
dec
cli
icebp
mov
jmp
cltd
mov
xchg
icebp
pop
stos
test
loopne
push
lods
repnz
lock
icebp
lock
adc
scas
test
mov
movsl
push
test
inc
mov
push
in
aas
xlat
add
dec
jmp
or
push
push
arpl
pop
inc
sti
adc
std
xchg
clc
cmpb
mov
in
fistps
adcb
nop
fwait
sbb
cmp
call
jno
js
aaa
inc
jg
sub
pop
stc
mov
jo
xchg
std
cmp
sbb
mov
enter
add
mov
adc
cld
andb
or
rcl
jl
clc
outsb
lds
sub
lahf
cwtl
jg
or
cld
mov
pop
push
stc
adc
jmp
rclb
test
or
rorb
jno
add
sbb
inc
pop
lret
or
out
and
cwtl
pop
add
xlat
jae
fldenv
push
stos
jno
cli
pop
and
cmp
xor
incb
bound
daa
or
popf
js
jmp
scas
push
jno
mov
sbb
ret
inc
fs
and
jno
mov
fldl2t
imul
jg
jmp
jo
fiadds
loop
insl
fsubrp
and
mov
lea
mov
fincstp
sbb
inc
repnz
in
push
pop
jecxz
cld
es
idiv
addb
add
popa
jb
lods
nop
mov
insb
push
in
cmp
jecxz
div
sub
clc
aam
fiadds
out
cmc
cmp
pop
mov
pop
loop
test
or
aam
fldl
loop
outsb
shr
sbb
je
cmp
sahf
xchg
div
fs
gs
add
add
pop
sti
ret
or
sbb
jle
fildl
xor
pop
lock
add
lret
pop
fs
lret
pusha
inc
lock
inc
in
jmp
inc
hlt
fildl
push
push
cmp
cmp
fwait
clc
mov
cli
je
push
cli
ljmp
add
mov
cld
push
and
test
xor
aad
mov
jbe
push
push
push
sub
adc
std
cmp
out
cld
incl
add
add
mov
adc
add
jmp
dec
push
stc
in
or
sub
push
xchg
jg
add
stc
filds
lods
test
mov
shlb
jg
cli
lds
mov
cmp
sbb
ja
mov
push
adc
jg
cmp
pop
push
call
in
stos
sti
pop
lahf
adc
dec
ja
add
inc
je
sbb
mov
pop
pop
stc
xor
test
push
sub
iret
outsb
bound
pop
or
lret
jmp
push
sti
jecxz
push
push
sbb
ret
in
popf
push
and
stos
push
lret
insl
cltd
push
jno
fcmovnb
mov
fldl2t
add
jbe
push
stos
pop
mov
call
xchg
push
cli
aad
add
add
add
ljmp
push
stos
fldcw
pop
pop
insb
insl
insl
iret
mov
or
fxam
fistpl
sub
inc
add
jbe
xchg
out
popa
fnstcw
or
push
loop
cltd
nop
mov
xor
scas
pop
push
mov
scas
xchg
ljmp
inc
insb
cs
jmp
cltd
pop
mov
xchg
les
popa
or
popa
pusha
test
hlt
pop
dec
inc
out
push
sbb
add
testb
test
fsubs
xchg
es
dec
xchg
loop
sbb
gs
or
xchg
sti
mov
bound
inc
pop
jg
sub
leave
pop
out
inc
inc
pop
pop
cmp
add
mov
add
sti
xlat
call
test
add
add
xchg
sarb
or
arpl
lret
xlat
mov
daa
stc
adc
push
in
sbb
mov
in
decl
sbb
into
pop
inc
and
and
pushl
push
push
fadds
roll
inc
sub
or
xor
push
sub
sahf
nop
ja
xchg
enter
add
fsubp
sub
popa
addb
mov
add
pop
das
inc
jmp
sub
popa
addb
faddl
xorb
push
mov
les
pop
adcb
mov
incl
std
jecxz
incl
jns
clc
xor
out
xorl
call
out
hlt
sub
pop
addb
fnstenv
imul
jmp
dec
dec
pop
outsb
daa
adc
jmp
dec
cmp
xchg
add
mov
call
push
mov
push
jg
loope
clc
movl
in
and
and
ljmp
fsts
mov
das
jle
mov
mov
inc
jg
fldl2t
jle
add
add
mov
cli
xchg
imul
test
cwtl
add
rolb
imul
loopne
fsts
flds
imul
int
jmp
pop
flds
cmp
pop
sbb
cmp
imul
insl
dec
gs
popa
or
aas
jecxz
sbb
nop
and
add
sub
add
icebp
push
jge
pop
fildl
jmp
sub
jmp
fiaddl
add
mov
sub
test
test
fcoml
mov
cli
mov
xchg
or
iret
rcrb
dec
fsubr
sub
pusha
pop
inc
or
je
pop
sbb
or
add
faddl
mov
pushf
aas
jne
ss
mov
xor
inc
addr16
js
in
mov
add
sub
fs
fstpt
shl
mov
loop
lea
pop
fs
jb
call
out
fadds
or
out
jno
add
mov
adc
jb
add
add
add
cld
test
inc
stc
scas
je
add
push
adc
xlat
lods
sub
es
adc
cmp
jmp
testb
ret
xchg
jl
shrb
clc
arpl
lea
bound
inc
xchg
or
lock
jmp
mov
mov
fcoml
push
das
pop
arpl
jmp
repnz
push
mov
sub
divl
mov
ljmp
fimuls
jmp
bound
sarb
pop
inc
mov
inc
add
mov
cmp
jno
dec
or
sub
xor
xlat
xchg
pop
jae
jbe
arpl
xchg
push
jmp
mov
mov
popa
jmp
imull
dec
mov
add
add
add
push
or
popa
pop
rcrl
mov
push
mov
jge
xchg
movl
sti
and
test
cltd
in
lock
mov
and
movsl
add
pop
fcoml
cld
xor
pop
adc
and
adc
pop
pop
clc
faddl
add
add
inc
jmp
or
andb
fldl
bound
sbb
adc
mov
aaa
or
cltd
and
adc
idiv
jnp
mov
jnp
jne
fcoms
bound
dec
mov
ret
and
inc
cmp
or
das
dec
cli
je
insl
stc
adc
jae
cmp
mov
je
cmp
neg
and
imul
pop
adc
or
adc
or
or
bound
shl
jo
push
incb
jne
push
fldenv
mov
mov
int3
dec
test
xchg
out
rolb
xor
aas
out
ja
jnp
add
add
int
xchg
xor
nop
xor
decl
jo
test
lock
clc
xchg
mov
xlat
jmp
lret
hlt
test
and
add
add
pop
out
or
and
repnz
test
adc
pop
adc
dec
dec
ficomps
push
push
test
ret
and
icebp
cltd
mov
add
jle
sti
fcoms
repnz
xchg
sbb
dec
fists
pop
shll
dec
or
cmp
mov
lds
movsl
ffree
cmp
mov
push
and
ljmp
dec
stos
inc
fnstenvs
inc
fldl
xchg
std
xchg
out
imul
add
add
adc
mov
sub
int3
ret
add
add
mov
or
in
adc
aad
jmp
lcall
jmp
sti
push
scas
lahf
mov
adc
insl
int
pop
jne
dec
push
cmp
push
push
add
call
ja,pt
jmp
pop
flds
nop
pop
clc
jmp
test
pop
roll
loopne
add
fdivrl
jecxz
leave
decb
and
fmull
test
add
cmp
add
fmull
inc
push
insb
clc
out
sar
push
fmull
out
push
cli
test
pop
mov
sarb
ret
add
mov
jge
shll
and
cmp
rorb
sbb
in
cli
call
shr
pushf
xor
cli
orb
add
jge
repnz
add
bound
mov
add
bound
js
xchg
je
add
pinsrw
xchg
or
aad
adc
fmulp
mov
mov
fidivrl
xchg
mov
into
sbb
es
sbb
cmpl
clc
jno
mov
add
ljmp
cmp
jne
fadds
push
dec
data16
mov
jo
or
sub
inc
pop
icebp
dec
add
stc
roll
fcmovbe
subl
leave
jp
mov
jbe
mov
mov
or
pop
xchg
sub
adc
sahf
pop
jbe
popa
les
pop
jb
or
cmpl
lret
mov
aam
insb
xor
jmp
jecxz
fdecstp
out
loope
test
add
mov
stos
add
cltd
lcall
cwtl
rcl
gs
add
pusha
cwtl
call
sbb
adc
rclb
push
stos
in
pop
orl
icebp
pop
clc
jmp
push
or
mov
sub
inc
mov
dec
or
push
cwtl
divl
sbb
cmc
arpl
add
sbb
pushaw
clc
bound
pop
out
jge
fdivl
popa
in
out
in
sbb
popa
fincstp
xchg
cmp
push
pop
dec
sbb
add
loope
sub
add
add
flds
lea
adc
cs
addr16
fadds
rcl
sbb
or
add
sbb
je
push
ret
mov
jne
or
add
sahf
lret
cli
ret
dec
pushf
pop
and
jmp
je
call
adc
pop
pop
jnp
les
add
dec
roll
int
rclb
cwtl
or
mov
add
sti
incl
mov
cmp
xchg
jno
xchg
cmp
dec
cli
and
sbb
addr16
cld
pushl
int
cli
xor
test
outsb
jecxz
dec
data16
ds
idivl
and
or
and
enter
or
push
mov
adc
daa
sub
add
add
sub
ficoml
cmc
mov
inc
inc
mov
mov
xchg
loopne
jmp
call
gs
pop
push
testl
popa
dec
out
hlt
push
mov
adc
insl
out
inc
xchg
mov
mov
push
call
mov
lds
fstps
rol
pop
outsl
inc
fldt
lea
push
sub
fisubrs
ljmp
out
mov
inc
out
inc
push
mov
lea
sub
jne
mov
fnstcw
inc
imul
pop
push
add
sbb
cmp
scas
jb
or
cmp
mov
xchg
clc
cmp
popa
sbb
add
xchg
push
imul
sahf
mov
sbb
mov
cmp
std
movsl
jb
sbb
cmp
and
sbb
loope
add
mov
aad
jmp
and
arpl
push
fdivl
popf
push
rcll
adc
or
movsl
dec
cmp
iret
arpl
jne
ja
insb
adc
in
inc
addr16
push
call
sub
mov
adc
dec
push
nop
stos
call
pop
sub
inc
mov
sti
xor
dec
or
push
je
jge
dec
push
std
sbb
jmp
mov
add
mov
xchg
testb
adc
add
clc
sub
push
adc
out
inc
stc
gs
adc
xor
fiadds
mov
bound
push
enter
lret
add
pop
aaa
push
out
add
call
out
mov
xlat
add
push
out
mov
dec
xchg
mov
sti
cli
sub
stc
fnstsw
shl
dec
jmp
inc
mov
rorl
aaa
cmpsb
adc
add
add
xor
jmp
add
adc
test
push
xor
dec
xchg
adc
pop
pop
xchg
push
pop
sbb
movsb
cmc
cmp
push
jmp
add
sbb
rclb
or
mov
cmp
cltd
push
shr
pop
push
mov
xlat
inc
in
icebp
int
pop
fstps
cli
add
push
imul
stos
bound
pop
mov
add
add
add
scas
xchg
jl
push
outsl
mov
fldl2t
mov
std
in
aas
icebp
pop
enter
test
fwait
in
gs
and
add
bnd
mov
movsl
test
add
sbbl
imul
call
jb
pop
clc
push
das
pop
inc
std
sti
push
mov
pop
pop
shll
add
add
cld
std
pushf
sub
inc
jmp
sub
sbb
popa
flds
jo
mov
jmp
inc
out
jmp
hlt
cmc
dec
pop
in
in
neg
push
push
outsb
stc
lretw
and
add
js
icebp
call
add
dec
cmp
jne
adc
sbb
fsubrp
stc
jne
push
je
push
movsl
pop
pop
lock
in
or
clc
andb
idiv
cmp
jge
cmp
inc
add
mov
aam
rorl
sbb
sti
sub
lahf
cmp
or
jge
pop
std
idiv
sti
shrd
fildl
add
sbb
mov
cmp
lret
fdivr
mov
loope
jmp
cmp
fwait
jo
data16
add
loopne
popa
inc
add
mov
add
jne
cmp
sar
xor
push
add
bound
repnz
cld
cld
xor
ja
add
xor
out
add
bound
add
bound
or
or
xchg
add
bound
sbb
aad
sub
bound
test
add
add
add
sub
dec
mov
std
in
andb
hlt
dec
xor
jmp
sarl
imul
pushf
push
jmp
adc
fstps
adc
jle
ljmp
popf
jmp
inc
mov
cli
ja
and
add
es
test
push
fldl2t
inc
cmpsb
std
leave
add
jno
fld
aad
stos
scas
pop
roll
loope
add
push
insl
or
pop
stc
adc
jbe
neg
xor
cmp
mov
and
in
flds
push
repnz
cld
jmp
inc
add
popa
push
lods
int
push
clc
jmp
pop
flds
fiadds
add
add
fincstp
xchg
cmp
push
lods
add
dec
lea
cmpsb
test
cld
jmp
add
push
rolb
jl
mov
ret
inc
mov
std
sbb
sarb
mov
adcb
je
je
dec
andb
andb
adc
jae
mov
dec
push
sarb
sbb
pop
stc
je
cmp
and
cmp
mov
jnp
push
incl
and
je
xor
test
push
inc
cmp
ds
cmp
sti
fsubrl
mov
cmp
insl
ret
mov
bound
stc
dec
inc
mov
out
in
sar
xor
out
arpl
stc
add
sub
adc
sub
lea
fcoms
jge
fcoms
jne
fcoms
insl
adc
mov
dec
shrl
pusha
inc
add
fsts
mov
das
stc
dec
xchg
push
sti
xor
das
das
push
xchg
mov
lea
pop
std
jmp
and
jle
jae
fldenv
mov
or
add
add
add
mov
inc
cmp
ret
mov
gs
push
cmp
dec
dec
jg
les
mov
and
aaa
popf
push
into
adc
rclb
jle
adc
out
mov
lahf
dec
shld
lds
into
ficoms
in
sub
dec
pop
mov
or
add
add
int
jno
add
jl
outsb
in
pop
in
in
fisubl
sub
sub
mov
xchg
lcall
popf
aaa
clc
fcoml
fiadds
fsubl
clc
pop
fstps
testl
fiadds
ficompl
ss
push
insb
sub
mov
jo
aas
xchg
mov
add
pop
clc
push
aaa
mov
sub
add
add
jmp
and
mov
aaa
outsl
ljmp
pop
cld
fildl
mov
push
inc
jbe
call
inc
or
out
inc
les
mov
add
bound
out
jg
mov
add
add
testb
bsf
or
iret
ret
incb
add
add
dec
cld
and
shlb
cld
inc
mov
inc
xlat
shlb
call
add
test
cli
test
xchg
adc
int
call
test
xchg
jne
outsl
sbb
push
out
mov
sbb
arpl
mov
push
in
insl
pop
aam
pop
popa
mov
call
push
jne
stc
or
shll
pusha
inc
add
das
test
mov
das
mov
out
aam
mov
sbb
mov
inc
bound
cmp
outsb
mov
ja
out
loopne
cmp
mov
sub
xchg
fiadds
jmp
test
out
push
inc
fadd
cmc
pop
mov
add
in
push
mov
dec
ljmp
stos
out
mov
inc
cmp
ficomps
in
add
movl
pop
sahf
out
test
cltd
popf
jg
mov
dec
pop
cltd
jmp
jle
cmc
cmc
sbbb
lds
cmp
sub
fildll
loop
sbb
setnp
mov
adc
pop
cmp
pusha
cmp
sub
xor
movsl
push
cltd
add
cld
popa
xor
bound
idivb
loope
add
repz
cld
shlb
add
push
push
dec
or
mov
or
xor
insl
loop
add
ficomps
jmp
bound
mov
add
or
int3
adc
mov
xlat
jle
daa
sub
jge
mov
stc
adc
xchg
into
xor
data16
cmp
aad
mov
inc
sbb
adc
and
gs
xor
or
or
inc
xor
mov
xor
add
xlat
jne
and
push
call
mov
mov
stos
fdivs
and
sbb
shlb
ja
xchg
sub
pop
adc
stc
out
imul
and
xor
stc
or
inc
xchg
jnp
cltd
mov
pop
pusha
xor
movsb
inc
std
out
stc
es
fiaddl
icebp
pop
adcb
inc
idiv
jb
in
daa
adc
inc
call
xor
jb
lcall
divb
andl
pop
sar
mov
xor
fsubs
sbb
jmp
add
jp
mov
mov
inc
out
jnp
fucomp
or
and
fstps
out
leave
adc
add
add
and
sbb
cs
data16
aad
and
jmp
int
sub
jno
fadd
mov
popf
jmp
sbb
sahf
pop
cs
fisubrs
jno
stc
ret
lea
pushf
inc
adc
jle
add
popa
add
popa
xchg
dec
mov
cmp
lds
add
sti
xor
mov
ds
ljmp
popa
fldcw
inc
or
sbb
dec
cli
cli
neg
jmp
stos
das
xor
gs
sbb
cmp
inc
clc
cmp
add
cli
xor
movsl
adc
pop
shl
push
jge
out
flds
jmp
jb
add
cli
adc
xchg
pop
jg
mov
cmp
pop
sub
inc
add
and
ret
add
loop
in
hlt
jne
das
xor
xor
cmp
lret
fwait
cmp
out
roll
add
fidivrl
pop
inc
cmpb
in
clc
cltd
inc
mov
test
test
xor
jg
idiv
lret
pop
cmp
mov
fdivr
jge
bound
pop
ret
fwait
cmp
fwait
sub
inc
outsl
roll
decl
xor
pop
mov
inc
not
ds
ds
jno
mov
adc
loopne
popa
xlat
cmc
shll
sbb
and
loopne
arpl
cmp
fisubs
jmp
add
add
mov
xchg
jnp
xchg
incl
add
add
xchg
out
mul
cmp
arpl
adc
cld
andb
jne
jle
jmp
andb
add
xor
pop
adc
mov
inc
jns
std
or
sub
sbb
loopne
fsubr
add
cltd
jmp
jg
int
cmpl
insl
mul
sbb
std
into
call
roll
lcall
cmpsl
inc
in
insb
mov
cmpsb
std
sbb
mov
jno
sti
ret
int
stos
scas
imul
push
fistps
out
and
sbb
pop
lcall
mov
jmp
gs
sub
mov
outsb
aas
shrb
add
fld
sbb
loope
sbb
fbld
push
mov
sbb
lds
loopne
out
lahf
pop
pop
inc
sbb
xchg
push
out
inc
sbb
negb
inc
push
push
inc
add
mov
adc
test
jb
inc
clc
add
adc
inc
popf
or
sbb
adc
add
js
or
popf
mov
popf
data16
mul
outsb
pop
sti
call
in
fcmovnbe
popa
and
mov
or
fstpt
into
pop
jnp
adc
decl
add
sti
aad
test
add
mov
add
ret
sti
aad
inc
cmp
stc
cmp
mov
testb
fisttpll
bound
lret
cmp
pop
sub
enter
sub
jmp
loopne
cmp
lahf
and
cmpsb
fldcw
adc
sbb
test
loope
adc
out
sub
mov
jmp
cmpsb
push
jmp
and
mov
lds
jl
and
jae
pop
jge
insl
popf
faddl
sahf
into
ljmp
add
add
cmpsb
adc
xchg
lods
shlb
loop
adc
sub
jmp
fldenv
or
dec
test
cltd
xchg
flds
jnp
add
jge
cmc
mov
arpl
loopne
xor
jns
cltd
jno
inc
pop
daa
jnp
jmp
incb
push
mov
xor
popf
out
in
fcoml
rolb
fnstcw
add
add
loope
jbe
sbb
icebp
adcb
pop
pop
or
jp
cmc
in
sbb
jg
es
add
add
loope
fisttpl
cld
imul
add
sbb
bound
insl
lds
aaa
lcall
fcomi
movsl
xchg
fnstsw
add
cmp
mov
pop
mov
jl
add
lret
adc
lcall
out
xchg
cmp
in
shlb
insb
fiaddl
enter
test
loop
or
inc
lds
insl
lea
jmp
je,pt
hlt
add
fsqrt
inc
pop
cmp
cld
cmp
jge
jecxz
mov
lea
sbb
add
add
inc
and
ret
push
and
loop
je
hlt
jge
pop
int
inc
outsl
sbb
jg
adc
and
add
idiv
mov
pop
pop
and
jecxz
js
jge
enter
in
or
adc
hlt
adc
sbb
cmpb
mov
sub
pop
cli
cld
inc
test
lock
jmp
pop
add
lock
andb
loop
das
sarb
pop
push
mov
fildll
add
pop
mov
icebp
movb
outsl
inc
stos
fistps
fdivs
nop
ss
add
mov
cld
enter
pop
xchg
mov
xor
cmp
out
sti
add
fisubl
inc
xor
sub
pop
sub
xor
fprem1
ret
add
aam
cmp
xchg
loop
fwait
cmp
and
aas
cmpsl
add
add
ja
pop
or
push
daa
adc
daa
adc
fwait
and
cmpsb
bound
pop
xor
jmp
aas
adc
scas
nop
push
cmc
xchg
mov
xchg
out
push
mov
xchg
push
xchg
xchg
push
mov
out
push
scas
out
push
cmpsb
out
push
sahf
out
push
xchg
out
xor
bound
clc
pop
mov
jl
popa
fnstcw
scas
sbb
cwtl
add
notl
clc
pusha
shll
clc
scas
repnz
pusha
ja
add
mov
int
flds
jmp
fnstenv
inc
inc
test
add
add
rcl
dec
jge
ljmp
or
addb
jo
cmp
popa
movsl
inc
jmp
lods
cmp
decl
xor
xor
aaa
xor
mov
les
and
clc
add
xchg
dec
or
lret
call
test
bound
push
iret
dec
inc
add
inc
dec
adc
jge
ss
push
sbb
push
adc
and
sbb
dec
adc
jge
push
clc
insb
and
adc
into
andl
and
push
push
or
inc
push
mov
and
bound
andl
mov
adc
jo
test
pushf
xchg
test
and
add
add
cmp
arpl
mov
rclb
jl
in
jae
mov
or
popf
scas
and
fisubrs
jmp
outsl
xchg
and
inc
adc
jae
ja
clc
or
fdivr
jae
stos
mov
stc
dec
xor
sub
push
and
popf
mov
mov
add
add
jmp
mov
loope
mov
fs
or
add
jg
in
push
cmpsb
std
std
push
loope
pop
jmp
dec
call
test
shll
std
cmc
sub
movsl
mov
dec
popa
sub
test
and
fs
out
data16
push
fs
adc
sbb
lds
pop
push
sahf
add
pop
rcll
fs
lds
xor
add
cmpsl
subl
mov
outsl
test
cmc
xor
lock
icebp
leave
inc
jmp
movsl
sti
cmp
mov
add
add
loop
test
xor
lods
bound
xor
out
psadbw
jmp
pop
mov
add
aas
dec
push
xchg
in
or
int
add
fistpll
add
mov
ds
cmp
es
arpl
iret
push
inc
and
add
jge
pop
test
arpl
pop
xchg
in
add
add
push
mov
fiaddl
push
xor
push
insb
xchg
add
mov
adc
jl
push
call
clc
push
or
cmp
jne
pop
movsb
clc
adc
mov
adc
stc
out
adc
dec
out
lods
push
cmp
xchg
cmp
outsb
mov
jmp
push
stos
std
out
or
cli
ret
lods
clc
add
push
or
inc
dec
add
sahf
fnstcw
popa
lds
cmc
or
add
mov
orl
popf
aas
mov
jmp
inc
add
fstps
mov
fsubr
add
jb
add
xor
lret
inc
mov
fs
mov
or
mov
sub
push
loope
adc
mov
nop
inc
arpl
jo
std
xor
sbb
pop
mov
inc
fucompp
add
add
add
fldcw
or
cmc
sub
pusha
cwtl
sbb
movsl
fldpi
add
xchg
and
xor
lea
andl
push
clc
jmp
cmp
add
popa
cmpsb
dec
mov
clc
jmp
xchg
ret
jno
fdecstp
cs
ss
adc
mov
lds
pop
lcall
clc
adc
xor
jmp
popa
pusha
inc
or
dec
xor
in
pop
inc
or
imul
sub
cmpsl
mov
add
clc
jmp
rcrl
push
pop
sbb
mov
sbb
push
iret
stc
incl
cwtl
jae
lds
in
repnz
les
faddl
add
clc
mov
icebp
push
fisubrl
push
mov
jge
mov
cmp
rorb
addb
out
or
push
decl
mov
loopne
jecxz
stc
lea
cmp
and
in
adc
add
adc
call
jne
cmpsl
es
push
bound
in
pop
sbb
mov
es
cmp
lock
jg
ds
clc
push
mov
out
jae
add
scas
in
mov
test
jo
push
flds
and
add
int3
sbb
test
add
add
int3
push
push
test
xchg
dec
mov
ja
int
sub
mov
xchg
clc
xor
mov
addr16
loopne
inc
mov
add
adc
add
hlt
ficomps
ret
fdivl
in
rorl
lsl
aaa
xchg
mov
add
add
sbb
mov
lahf
in
into
xor
mov
test
xor
cmp
bound
jmp
push
mov
bound
stos
mov
std
popl
pop
xchg
mov
mov
mov
jb
or
out
add
fdivs
call
mov
add
add
add
int3
insl
lds
sbb
adc
mov
jle
popa
stc
loopne
std
adc
add
pop
out
mov
push
inc
fld1
mov
call
call
adc
outsl
cmc
push
test
sub
stos
popa
mov
mov
movsl
sbb
lds
cmp
or
fildl
mov
scas
mov
mov
fnstenv
mov
sbb
aas
je
pop
cli
pop
jg
jne
pop
dec
adc
cli
mov
dec
fldt
xchg
cli
jmp
clc
mov
jecxz
shr
jge
pop
imul
imul
mov
or
mov
add
add
arpl
sub
mov
push
out
aaa
inc
bound
mov
daa
xor
jge
cmp
aaa
out
xchg
or
loopne
jmp
jno
les
cmpsb
sbb
mul
test
mov
jne
add
sarl
and
inc
jbe
add
bound
jl
in
scas
mov
inc
pop
cli
xor
add
add
cld
dec
int3
cs
adc
or
or
pop
and
xor
mov
cmp
bound
clc
out
loope
sahf
fsubrl
mov
jmp
stos
movsl
sub
loope
and
bound
sbb
test
mov
add
add
sub
pop
add
loope
cmp
sbb
inc
push
push
cs
push
push
es
cs
arpl
out
movsl
add
arpl
mov
popf
jb
mov
xchg
cltd
dec
xchg
gs
pop
flds
insb
push
add
inc
les
pop
sbb
jmp
mov
pop
add
popa
loop
popa
or
inc
jmp
popa
flds
divb
sub
mov
jmp
flds
jo
mov
scas
cmc
push
aas
lods
into
xchg
insb
jo
psubsw
inc
mov
lahf
pusha
pusha
sbb
popa
fld
mov
mov
pop
cld
push
loop
incl
sbb
ja
add
add
pop
sub
push
sub
pushf
sbb
pop
xor
xor
sub
push
dec
int
insb
mov
lods
inc
inc
mov
jns
les
sub
nop
jl
aaa
clc
int3
idivb
cmp
sub
insb
bound
or
jge
into
sub
cmp
aaa
mov
inc
add
dec
lret
divb
bound
mov
fildl
out
das
jbe
loope
add
gs
ja
outsb
aas
mov
jmp
mov
call
arpl
cwtl
test
or
filds
jge
aas
mov
jecxz
test
pop
cmp
int3
cmp
xchg
ljmp
sbb
mov
je
add
add
dec
lods
test
adc
test
dec
shrb
lret
pop
xlat
fcoml
test
divl
cmpsl
mov
in
mov
add
pop
push
jo
jmp
cmp
pop
inc
xor
nop
xor
call
jl
push
and
fisubl
add
add
sbb
add
daa
shrb
sbb
test
mov
and
notl
inc
filds
imul
fiadds
jl
loope
ljmp
add
out
or
push
orl
mov
fisubs
flds
mov
mov
ret
mov
adc
pop
repnz
add
add
xchg
call
push
roll
jbe
lret
add
iret
lea
cmp
xor
or
aam
test
push
and
jmp
fnstenvs
pushf
hlt
bound
adcl
adc
mov
call
mov
dec
add
pusha
test
inc
out
dec
pop
adcb
mov
inc
roll
add
jg
add
or
add
sub
rclb
je
jge
or
loopne
push
jae
jmp
or
push
add
cmp
fldl
mov
jge
or
loopne
lock
stc
mov
dec
cmp
push
addr16
jo
sub
dec
fildl
cmp
idivb
xchg
push
stc
out
mov
jmp
pushf
add
mov
sbb
xorb
test
xrelease
push
test
punpckldq
mov
aas
push
pop
xchg
jo
test
in
inc
test
add
shlb
ds
add
bound
add
loope
or
stos
mov
fildll
add
test
mov
stos
scas
imul
fxch
adc
scas
out
sar
jmp
out
dec
jb
test
cmp
push
lock
fildll
inc
mov
add
cmp
js
test
inc
mov
pop
xor
jb
sub
ljmp
sub
shll
xor
cli
jp
test
pusha
lods
and
xor
movsl
pop
mov
int
jmp
sub
xchg
aas
scas
adc
aas
cmpsb
adc
aas
sahf
adc
sbb
xor
pop
fldt
clc
jmp
pop
test
add
scas
and
insb
in
addr16
jmp
or
es
jmp
push
daa
clc
jmp
lds
mov
pop
pop
jb
mov
pop
mov
loope
or
pop
xchg
cli
roll
cli
push
ds
push
pop
dec
sub
xchg
dec
unpckhps
inc
pop
paddusw
enter
xchg
pop
dec
add
mov
xor
data16
rclb
test
sbb
aas
add
adcl
push
clc
incl
add
add
ja
jle
fimull
andb
add
in
dec
insb
in
dec
jo
cmpsl
mov
inc
sub
pmulhuw
bound
inc
sub
pushl
xchg
mov
add
and
add
mov
add
mov
bound
push
nop
push
pop
pushl
pusha
xchg
lret
add
mov
cwtl
data16
and
add
add
inc
xor
or
jmp
aad
bound
cmp
pop
sub
jb
jg
pusha
sub
add
jmp
xor
cmp
les
jmp
jno
inc
dec
mov
test
lds
xor
fisubrs
aaa
stos
sbb
fwait
sar
mov
jmp
lahf
ss
and
stos
in
lea
xchg
push
test
pop
push
ret
bound
mov
jbe
mov
mov
or
fldl2t
mov
das
imul
call
lret
out
mov
ret
jmp
add
ret
mov
mov
lea
and
mov
bound
pop
xchg
and
jb
jge
jmp
stc
in
jb
js
jmp
push
and
popa
push
rolb
xchg
lret
add
dec
imul
pusha
cmp
add
cmp
jge
flds
jmp
sbb
mull
pop
jge
and
jbe
add
gs
mulb
inc
lea
out
dec
fwait
cmp
push
add
es
dec
cmp
lret
push
xchg
cwtl
pop
add
pop
jne
mov
lock
movsb
or
stos
sti
jmp
ja
xor
je
ret
rcrb
xchg
pop
stc
add
fldcw
andl
add
mov
adc
cmp
mov
ja
rcl
push
jge
add
mov
push
and
bound
fstpt
xlat
mov
jg
out
mov
jge
push
and
push
fcomip
add
mov
mov
push
sub
lods
xor
stos
lods
aaa
popa
jl
xor
cmp
or
fistps
xor
mov
jne
cmpsb
mov
add
or
lcall
clc
and
rep
pop
and
das
int3
push
in
das
int3
cs
jnp
xchg
data16
pop
aas
dec
jmp
xor
jecxz
cmc
dec
fldl2t
nop
adcl
add
mov
call
addb
add
sbb
jmp
add
mov
loope
in
add
test
mov
sbb
lock
cmp
xchg
into
xchg
mov
pop
xchg
mov
test
or
out
test
js
cwtl
jp
mov
scas
iret
fiadds
mov
scas
mov
mov
enter
cmpsl
add
jns
pop
clc
jmp
cmp
jge
fstl
add
repnz
std
stos
or
clc
jmp
mov
call
push
rorl
in
out
cmp
flds
jmp
bound
sub
xor
ja
lcall
add
pop
imul
clc
jmp
jbe
add
popa
mov
add
inc
bound
cmc
cmp
inc
fbld
lds
lret
dec
jl
mov
js
pop
mov
add
dec
lcall
cmp
cmc
xchg
pop
idiv
jnp
negl
cmp
mov
and
add
cmp
cwtl
inc
fadds
aas
nop
add
fdivs
pushf
fadds
add
aam
decl
mov
enter
mov
enter
in
inc
add
adc
mov
mov
jge
or
xor
add
stos
xchg
adc
daa
mov
add
add
jmp
or
jo
int3
dec
inc
std
push
push
scas
ret
stc
fucomi
je
das
sub
insb
jo
lea
inc
test
popa
xor
push
xchg
and
mov
pushf
je
inc
lcall
test
adc
stos
xchg
jb
sahf
mov
pop
movsb
pop
jmp
push
pop
movsb
cmp
lods
push
pop
fldenv
adc
insb
fldl2t
add
add
add
fldl2t
adc
xor
add
pop
xor
out
icebp
add
cs
xor
scas
jmp
pop
jp
es
dec
xor
fisubrl
gs
and
and
dec
dec
clc
test
imul
jp
xor
jle
les
push
add
flds
bound
push
cmp
dec
dec
flds
shlb
jmp
call
inc
psubsw
xchg
pop
roll
ja
enter
rorl
cmp
add
jmp
ffree
add
inc
pop
cmp
movl
aaa
ret
add
aas
mov
pop
in
jmp
sbb
adc
push
jmp
popa
pop
aas
add
data16
testl
push
or
inc
nop
jne
jmp
fists
fyl2xp1
add
arpl
bound
jp
lret
nop
inc
mov
jge
push
arpl
mov
sub
lret
stc
data16
adc
mov
cwtl
insl
faddl
mov
negl
stos
out
add
inc
dec
mov
xchg
cmp
add
dec
fdivrl
bound
mov
jnp
jl
add
add
add
bound
xchg
aaa
mov
out
je
fnstenv
std
stos
ljmp
xor
call
jmp
cmpl
sti
xor
clc
jmp
add
add
or
pop
mov
pop
sub
cmpl
divb
fiaddl
mov
add
in
push
lds
sbb
dec
xchg
fnstenv
add
lahf
mov
adc
lahf
popf
jmp
or
out
push
jb
xchg
jb
xchg
mov
iret
sbb
push
iret
test
and
add
cltd
and
mov
jmp
fldenv
cs
movl
bound
std
ficoms
call
sub
jmp
add
jg
fisubs
jmp
das
mov
xchg
imul
xchg
mov
scas
mov
rcr
push
dec
add
or
add
add
adc
imulb
xchg
pop
pop
xchg
cmp
push
mov
aas
ss
subl
int3
lret
jl
xchg
ret
flds
imul
lods
add
imul
push
dec
pop
call
pop
loopne
and
cmp
sbb
cmp
stos
mov
out
mov
add
sub
out
outsb
inc
pop
add
sub
mov
fadds
add
aas
andb
add
pop
data16
pop
add
or
add
sti
fadds
cmp
mov
xlat
add
sti
pop
jp
enter
mov
add
bound
inc
data16
push
lret
fsubs
xor
mov
jge
add
add
push
mov
mov
fstpl
pmaddwd
mov
add
add
in
sbb
fwait
bound
sbb
add
bound
mov
jb
inc
add
add
add
sbbl
adc
sub
rcrl
xchg
and
inc
je
cmp
test
xlat
push
test
xchg
mov
or
andl
inc
jns
dec
jmp
add
add
xchg
ljmp
add
mov
cld
add
add
fsubs
rcr
jmp
adc
ret
and
sub
insl
test
pop
pop
xor
out
push
cli
sub
push
loope
rolb
fistps
jmp
and
addr16
add
cmpsl
test
jmp
add
fwait
jge
fwait
push
push
adc
fwait
popf
jmp
or
stc
fsubp
push
push
andb
stc
or
test
ja
fstpl
add
jmp
bound
mov
mov
cs
xchg
pop
shlb
push
ret
push
pop
je,pt
jmp
out
iret
andl
add
pop
sub
sbb
add
add
lret
inc
stc
mov
xchg
shr
push
test
out
jmp
cwtl
mov
xor
mov
pop
shlb
push
jbe
push
cltd
adc
pop
xchg
popa
push
loope
das
cmp
stos
fstps
pop
outsl
adc
jl
mov
stc
pop
add
int3
int3
mov
int3
int3
sahf
pop
in
push
enter
dec
in
jge
repz
out
mov
jp
dec
loop
movsb
cmp
add
jae
xchg
mov
mov
fdivrl
add
movsb
or
jp
cmp
pop
mov
dec
je
add
dec
enter
add
lret
push
mov
pop
xchg
add
add
daa
into
out
dec
push
test
add
mov
adc
mov
sub
ss
mov
addb
mov
add
in
push
lds
sbb
dec
xchg
push
in
lea
push
mov
loope
or
movsb
ss
into
out
test
adc
addl
dec
pop
mov
mov
int
add
add
bound
mov
fldenv
fdivs
pop
fsubrl
mov
jge
add
adc
out
dec
fldenv
arpl
andb
pop
out
packsswb
jb
out
std
pop
stos
add
out
add
and
bound
pop
int3
sub
xchg
jge
add
sub
fnstenv
dec
rolb
add
add
popa
loopne
mov
add
ss
cmp
add
std
loopne
pop
jbe
out
ja
stc
insb
outsl
mov
cld
in
call
jb
mov
xor
fiaddl
popf
sbb
lds
sub
lds
add
add
add
lahf
push
jbe
movsb
adc
cmpsb
loope
jmp
cld
loopne
cld
pop
flds
jb
fldl
add
add
fldl
out
pop
out
jmp
cmp
addl
or
or
lret
pusha
inc
add
outsl
idiv
mov
or
clc
clc
test
add
roll
addb
mov
add
pop
ret
jge
and
hlt
mov
flds
xorl
add
add
add
or
push
sbb
mov
add
fcomps
xor
pop
add
pusha
inc
xor
loopne
add
in
pop
bound
mov
ja
or
or
pop
mov
pop
pop
add
jmp
push
jne
pop
jne
or
mov
jmp
pop
or
decb
ja
dec
xchg
and
sti
jmp
sbb
pop
cmp
adc
push
adc
mov
leave
add
std
pop
jbe
dec
adc
dec
cld
shll
jmp
add
jmp
clc
js
xlat
fsubrs
add
jecxz
mov
fsubr
add
mov
xchg
jge
sbb
or
aam
add
nop
sti
fst
clc
add
in
dec
outsb
pusha
and
mov
lods
aad
and
cmp
fld
insb
or
jle
mov
cmp
pop
mov
push
xor
mov
sub
xor
mov
adc
xor
xchg
clc
in
sbb
fwait
icebp
add
sbb
rcr
xchg
add
imul
mov
pusha
inc
dec
in
dec
test
popa
cmpsl
push
push
dec
frstor
push
in
sub
or
and
mov
cltd
or
push
mov
popa
sbb
mov
jle
add
bound
in
pop
ja
fmuls
icebp
or
mov
mov
or
jmp
inc
shrl
stc
or
jmp
rclb
jmp
out
add
pop
mov
mov
mov
or
pop
adc
xchg
adc
std
loope
dec
mov
inc
fsts
add
push
jo
mov
mov
inc
lahf
mov
adc
pop
add
jge
ja
ds
dec
or
pop
adc
cwtl
or
popf
jmp
insb
adc
xchg
or
cltd
xor
and
jg
jmp
inc
and
fldl
add
inc
or
add
bound
inc
xor
test
cmpb
mov
data16
cmpb
repnz
inc
adc
fs
add
nop
jae
add
mov
std
push
xor
jl
cld
jae
jae
pop
mov
inc
fisubs
popa
mov
mov
test
xor
add
jl
and
repnz
pop
pop
call
add
xchg
sbb
lret
repz
out
pop
push
xchg
xor
dec
push
out
cli
jb
pop
bound
fldt
jmp
sbbb
loopne
ljmp
sbb
add
mov
in
bound
jbe
sub
jae
imul
icebp
int3
jb
push
pop
inc
and
shrb
movsl
mov
sbb
fisubrl
push
cmp
daa
xor
pop
xchg
out
sub
das
dec
pop
leave
pusha
mov
mov
mov
mov
js
adc
rorl
loope
pop
clc
jmp
pop
fwait
and
in
pop
and
cmp
pmulhw
aad
cwtl
or
cmpsb
mov
daa
mov
push
cmp
pop
inc
stc
ljmp
add
cmp
jp
push
scas
pushf
mov
mov
jmp
inc
ret
or
rol
adcl
add
xchg
push
adc
lahf
or
lds
adc
and
add
mov
mov
dec
xor
add
rorl
call
mov
call
mov
in
jge
rcrb
dec
and
xchg
adc
push
jmp
aaa
mov
sbbl
test
mov
cmp
jge
bound
xorl
mov
xor
xchg
cli
sbb
lods
loop
dec
cli
xor
bound
xor
outsb
push
jmp
and
movsb
decb
cmpb
cmc
addb
add
add
add
fnstcw
jge
push
add
out
add
bound
jbe
bound
adc
cmp
jb
xchg
sbb
jns
add
or
mov
xor
mov
cld
mov
ljmp
cmp
xchg
jmp
push
sub
out
roll
leave
jle
mov
adc
imul
push
push
mov
out
icebp
jnp
rorl
push
pop
xor
out
in
in
add
add
lcall
jbe
test
xchg
pop
nop
adc
xchg
loope
cld
test
mov
sbb
pop
dec
fldenv
push
pop
adc
sbb
add
fldl2t
add
and
icebp
mov
inc
sbb
xor
in
add
add
std
nop
hlt
sti
negl
les
cmp
cmp
mov
es
or
xor
add
data16
or
mov
jnp
ret
popa
push
adc
shll
and
cmpsb
xchg
sbb
in
push
flds
jmp
dec
fsubrp
mov
cmp
add
aas
rorl
xor
pushf
fiaddl
push
add
add
fldl
push
and
cmpsl
int3
mov
sahf
or
add
fnstsw
sbb
sbb
sbb
jne
aas
add
or
cvtps2pi
adc
jne
pushl
pop
cmp
sbb
repz
jmp
add
jo
add
add
fildl
add
aam
jg
aad
sbb
sbb
pop
test
add
in
jmp
mov
mov
jnp
push
andl
ja
gs
ljmp
xor
in
add
insl
outsb
push
repz
add
mov
ljmp
push
jmp
and
pop
std
jb
pop
and
ret
stos
adc
bound
inc
jmp
add
add
add
in
jl
push
jmp
push
cmc
jl
popa
pop
add
sbb
test
mov
jbe
ljmp
out
ja
arpl
add
dec
fldcw
add
and
sti
adc
movsl
ss
fldcw
popa
hlt
push
orl
cmp
fsts
add
fldcw
fmull
jmp
subb
add
jno
sub
out
and
inc
movsb
pushl
xchg
push
mov
in
test
jmp
push
fnstenv
ds
test
fstl
push
flds
mov
sub
jmp
mov
jl
clc
mov
sbb
or
enter
popa
jle
jge
jl
clc
jb
add
add
aam
stos
cwtl
mov
ret
jl
jmp
pop
sub
mov
adc
shrb
cmc
js
or
roll
scas
pop
shrb
aad
nop
or
roll
pop
shrb
cmc
cmp
add
les
jge
mov
dec
or
add
add
into
or
or
ja
dec
or
jmp
or
aaa
orl
pop
jmp
jge
aaa
orl
jge
fstl
sub
loopne
in
clc
andps
xor
aaa
pop
stc
call
addb
adc
jg
ret
enter
into
dec
pop
lods
dec
mov
ret
jne
bound
add
out
movsl
cmp
clc
xchg
push
xor
sub
xlat
pop
mov
fsubs
mov
add
pop
and
add
fidivrs
mov
and
repnz
bound
ret
or
cmc
add
bound
cld
or
jge
add
pop
and
sbb
arpl
add
sbb
in
test
xlat
ret
jae
fldcw
stc
int
fcompl
flds
cld
mov
push
outsb
arpl
add
push
xchg
cmovg
insl
cld
in
in
scas
lock
xchg
push
adc
fldl2t
xchg
jo
jbe
and
or
push
bound
push
shl
mov
cmpsl
xchg
xchg
aam
mov
shr
add
adc
pop
push
movb
push
push
aad
mov
add
pop
popa
push
movsl
neg
and
bound
mov
rcrl
push
push
out
push
icebp
push
iret
jge
push
push
and
popa
cmc
fimuls
mov
mov
jl
inc
icebp
in
add
test
aas
cmc
stc
sti
imul
popa
or
pusha
mov
subl
lea
fwait
movsl
mov
jle
or
cmpsb
stos
fldl
jmp
push
push
dec
shr
sub
mov
idivl
cwtl
cmp
push
nop
and
add
jge
pop
imul
ljmp
inc
pop
dec
dec
sub
add
add
and
movb
dec
dec
sbb
nop
cmp
cmp
mov
shrl
adc
add
add
jnp
sbbb
push
mov
ljmp
cmp
jne
adc
mov
aad
add
dec
inc
or
push
jp
sti
mov
add
mov
into
adc
or
mov
dec
pop
jns
mov
pop
aam
xchg
push
sti
ljmp
lock
bound
test
test
inc
push
sbb
iret
cld
shlb
std
gs
cmp
movsl
cli
lahf
xchg
xor
pop
test
inc
inc
test
mov
pop
bound
loope
jmp
add
jmp
mov
iret
sub
es
sbb
mov
stc
fs
or
lods
aaa
sbb
insl
lret
mov
pusha
push
pop
bound
mov
bound
pop
mov
push
pusha
pop
or
fisttpll
in
bound
mov
bound
in
adc
jbe
imul
add
add
xor
mov
sahf
test
shr
add
pop
cmpsb
sti
and
clc
mov
or
add
icebp
testl
and
and
mov
imul
sbb
aad
sub
out
pusha
jbe
mov
mov
xchg
ret
xor
push
mov
push
sub
add
add
les
mov
or
pop
clc
pop
rep
dec
bound
mov
fcoms
ret
mov
cmpsl
push
jb
push
loop
lahf
lret
orl
adc
jle
mov
mov
insb
cwtl
mov
or
xchg
je
push
mov
aam
jge
jae
aas
and
pop
mov
add
add
loop
xor
fiaddl
add
gs
or
sbb
rcll
stc
mov
loop
mov
in
cltd
mov
mov
int3
int3
mov
pusha
in
mov
shlb
cmp
sbb
pop
jnp
inc
js
mov
or
bound
or
mov
sbb
ds
or
add
add
sbb
mov
cmp
insb
int3
jns
add
arpl
iret
fsts
fdivs
addr16
or
das
or
jns
sbb
imul
sbbb
mov
scas
sub
xchg
cmpb
bound
add
lods
rclb
hlt
push
sub
clc
xor
leave
jmp
inc
scas
mov
sub
gs
add
lcall
xor
fldcw
iret
sbb
mov
leave
mov
pop
xchg
mov
mov
jmp
jecxz
mov
mov
pmulhw
loop
mov
xchg
jb
or
sbb
sub
add
pusha
sbb
or
jmp
lea
lds
stc
fcompl
sub
in
aaa
jb
sub
dec
flds
bound
pop
aas
adc
pop
flds
jmp
ret
mov
adc
test
mov
sub
gs
dec
aad
add
add
mov
mov
push
jmp
fcoml
add
bound
mov
cmpsb
xor
bound
fidivrl
dec
mov
push
addr16
sar
ret
mov
sub
jne
das
inc
cmp
add
sti
jge
pop
aam
jae
fadd
mov
pop
xor
mov
in
sbb
int3
push
fs
mov
fidivs
lret
cmpsl
add
jb
adc
jge
cmpsl
pop
stc
dec
add
or
fistpll
add
clc
cld
incl
jne
jo
add
jl
add
bound
test
ja
xchg
addr16
xchg
ja
cmp
mov
xchg
mov
cmp
mov
add
scas
dec
mov
inc
cmp
bound
add
loope
cli
or
pop
hlt
in
jp
andl
or
mov
in
add
bound
jge
push
das
push
jge
mov
in
lcall
push
rolb
mov
cld
xlat
loope
hlt
insl
mov
xlat
inc
pop
xlat
dec
sbb
hlt
out
mov
dec
adc
add
add
fsts
mov
fldl2t
mov
sahf
lea
mov
or
adc
inc
pop
lods
ja
fucompp
add
mov
inc
sbbb
repz
jmp
add
lock
loope
or
dec
ljmp
stc
loope
sahf
sbb
or
add
add
shr
add
add
negl
or
lods
fisttps
rorl
scas
add
sub
add
call
fmull
push
faddl
adc
pop
dec
int
out
imul
popa
ja
lcall
push
std
stc
pop
dec
jmp
call
xlat
out
sbb
or
push
add
add
push
inc
stc
xor
jmp
dec
xchg
out
not
test
icebp
jmp
push
test
mov
push
cmp
adc
jne
pop
mov
sbbl
or
dec
fdivs
mov
sub
inc
mov
or
or
pop
pop
adc
add
xchg
add
or
mov
fcmovnu
add
inc
or
add
pop
in
call
and
adcb
mov
fadds
add
out
xchg
in
ret
in
dec
add
xchg
sbb
push
in
add
add
mov
mov
sarl
std
inc
add
mov
cmpl
add
add
add
adcl
add
cmpsl
inc
mov
xor
jge
call
mov
fcmovu
mov
andl
add
jb
add
bound
mov
test
out
shr
mov
fldcw
pusha
movsl
out
cmp
sub
bound
mov
add
xor
and
mov
add
out
cld
pop
in
jmp
aad
push
jmp
add
ja
sub
mov
adc
mov
jmp
push
sub
and
sbb
in
fisubs
imul
frstor
jb
adc
loop
mov
dec
cmp
fldpi
add
xlat
mov
std
add
mov
xchg
jno
add
add
cmpsb
cltd
sahf
push
add
xchg
jo
shll
and
mov
jmp
flds
push
mov
lret
orl
insl
jo
add
pusha
daa
add
in
or
sub
mov
in
iret
push
fdivl
test
jge
lcall
fldenv
imul
xor
add
add
jmp
pushf
movsl
push
push
add
insb
push
sbb
movsl
call
mov
pop
jg
arpl
int
insl
or
mov
roll
add
mov
add
mov
xlat
or
lahf
inc
mov
jg
mov
push
add
xlat
jge
sub
je
add
add
cltd
int3
test
mov
dec
bswap
dec
inc
andb
subb
add
fnstcw
ja
mov
dec
in
push
faddl
add
lcall
jmp
add
pop
addr16
jmp
or
push
adc
or
jne
pop
imul
lahf
sbb
iret
mov
jle
mov
or
and
add
gs
add
bound
adc
add
gs
in
jl
out
add
cmpsb
sub
cltd
pop
leave
test
dec
andb
loopne
mov
fbld
gs
and
bound
xchg
pop
movsl
out
aam
shlb
cltd
bound
push
gs
insl
icebp
jl
in
and
insb
mov
mov
fnstenv
jl
loope
dec
dec
mov
xor
jg
add
push
sub
jl
in
rolb
cltd
test
jmp
out
sub
jmp
sub
mov
jmp
popa
flds
jmp
popa
cmpsb
xchg
call
jl
popa
flds
push
in
fsubp
addr16
insb
add
aam
test
popf
mov
rcrl
dec
add
imull
jb
cltd
cmp
inc
jbe
bound
mov
pusha
std
repnz
inc
bound
orl
jae
repz
and
inc
adc
flds
add
fs
clc
inc
mov
call
mov
adc
xchg
bound
bound
jnp
jnp
push
clc
jl
add
lock
and
mov
fcmovnb
pop
push
fildl
add
adc
cmp
add
cli
adc
mov
mov
pop
or
fisttpl
mov
pop
dec
cld
bound
int3
add
cmp
popa
cmp
or
out
mov
leave
xchg
sub
ret
into
test
push
jnp
push
mov
push
loope
cld
xchg
in
push
inc
mov
xor
add
clc
out
pop
add
lock
sub
add
push
sbb
add
add
xor
pop
jmp
add
add
lock
andl
mov
std
or
mov
std
sbb
rolb
pop
mov
add
pop
mov
pop
jae
out
test
add
fsubr
add
shrb
jecxz
mov
ljmp
shr
fcompl
cli
test
add
add
es
pop
data16
imul
jne
xchg
add
xchg
add
movsl
add
sti
fcompl
ss
sbb
jmp
cld
loope
repz
add
xlat
pop
gs
add
loop
cld
call
loop
add
lretw
add
popa
cld
pop
loop
flds
push
addr16
pushf
jmp
sub
add
fldl
jmp
xchg
hlt
fists
or
loope
inc
loop
add
lcall
or
dec
in
loop
add
loop
insb
pop
xor
jmp
popa
rolb
jmp
cmp
jge
and
les
or
push
add
sti
xlat
add
sbb
hlt
call
mov
out
dec
pop
ljmp
bound
mov
add
mov
sbb
add
push
call
adc
jne
jl
out
pusha
pop
cli
and
mov
or
dec
idiv
negb
jge
or
xor
push
bound
call
loope
and
or
mov
and
add
sbb
xor
in
adcb
lret
sub
add
jl
add
xchg
lock
insl
je
add
pop
lock
fnstcw
inc
xchg
test
add
jbe
cmpsb
xlat
mov
xchg
lods
jbe
xchg
idivl
daa
les
add
jge
lock
outsb
addr16
jmp
inc
fsubl
lcall
add
mov
aam
popf
sarl
loope
shrb
inc
std
ljmp
jbe
fs
inc
fldcw
neg
jg
iret
jmp
enter
mov
mov
aad
test
or
add
dec
sbb
and
jmp
leave
ret
jb
push
stc
testb
sub
popa
push
adc
in
mov
pop
loope
jmp
mov
outsb
pop
call
push
out
lods
stc
into
sbb
inc
push
pop
flds
jmp
popa
inc
scas
jmp
je
add
fidivs
out
hlt
jmp
ljmp
aas
pop
loop
insl
dec
adc
dec
pop
pop
mov
ljmp
mov
pop
cmp
test
sbb
jo
lcall
sbb
in
ljmp
push
jb
push
add
inc
jecxz
adc
and
faddl
add
mov
paddq
push
mov
stc
jle
push
cmp
stc
inc
mov
decl
add
fs
pop
inc
dec
outsb
jo
add
fildl
test
add
mov
mov
call
mov
adc
sbbl
adc
idiv
adc
idiv
jp
push
repz
sub
pop
or
sar
incl
add
add
das
push
or
add
bound
in
lods
lods
xor
and
fnstenv
mov
mov
sbb
jl
sub
or
daa
cld
std
out
test
hlt
mov
test
in
xchg
mov
add
sbb
add
bound
test
sub
mov
mov
pop
ret
xchg
movsb
or
or
add
add
fnstenv
push
dec
sbb
sti
pop
daa
and
stos
jno
jl
mov
mov
fsubrp
dec
lret
push
test
in
pop
stos
add
cmp
inc
ljmp
jg
shr
add
in
les
stc
bound
out
lcall
adc
iret
push
or
add
xchg
shl
repz
flds
push
jns
popf
fucom
mov
xchg
add
or
shr
hlt
add
cmc
mov
cmp
jmp
daa
int3
pop
aas
adc
lcall
pop
push
clc
push
fldl
fisubs
shrb
xlat
or
inc
push
add
add
fwait
add
loope
cltd
xchg
add
xchg
pop
sbb
shr
xchg
in
test
push
and
out
pop
jmp
hlt
add
fadds
prefetch
or
popa
leave
shrl
dec
fmul
pop
ret
xor
clc
and
data16
jge
mov
loope
inc
pop
push
fldl
add
stc
call
mov
or
int3
xchg
faddl
or
add
adcb
enter
add
xlat
jne
iret
aam
sbb
xchg
fsubr
enter
inc
mov
and
ja
jne
bound
jb
jbe
fs
sub
sbb
movsb
ret
clc
loope
and
out
or
bound
repnz
add
sti
jg
lock
bound
insb
fcomi
test
gs
fwait
sbb
popf
movsb
dec
dec
and
lock
mov
sbb
ret
pop
imul
cmpsl
inc
ret
clc
jmp
int3
test
jne
out
pusha
lock
fldenv
push
inc
adc
or
add
add
jmp
nop
xor
inc
pop
sbb
jmp
dec
lcall
ret
test
pusha
dec
xchg
mov
xchg
shr
add
shl
add
push
rcrl
movsl
pop
flds
sbb
dec
sbb
lea
dec
sub
dec
add
adc
addl
in
in
fnstsw
mov
add
out
xchg
or
int
mov
push
pop
adc
push
mov
out
cld
imul
xchg
jo
fldl
fs
add
lcall
push
and
jmp
bound
flds
mov
dec
flds
jmp
pop
xchg
mov
out
inc
jb
popa
mov
jnp
mov
or
imull
aad
fsubp
xchg
std
dec
fmull
mov
cltd
dec
cld
inc
stos
loopne
sub
dec
mov
idiv
mov
sub
notb
addl
jmp
in
cmp
jmp
add
cmp
add
ret
pmullw
mov
cmp
fisttpll
or
add
sbb
inc
mov
dec
hlt
lret
add
pop
push
test
or
andb
mov
mov
roll
bound
cld
bound
add
aam
mov
mov
mov
push
push
cld
and
fisttpl
mov
test
mov
je
push
roll
inc
dec
push
in
push
add
sbb
cmc
add
inc
dec
jmp
xchg
mov
mov
and
imul
fldcw
out
mov
incb
cltd
mov
popf
repnz
mov
pushf
fcomps
push
fldl2t
sarb
mov
stc
mov
sbb
adc
es
jne
jmp
add
or
push
sahf
data16
push
fldl2t
mov
jmp
pop
fsts
into
out
dec
push
test
add
loope
add
xchg
int3
sahf
mov
cmpsl
add
fistps
insb
add
add
sti
lds
fdivrl
jmp
popf
aad
push
std
call
push
and
bound
or
roll
inc
stos
dec
dec
fstpt
xlat
imul
popa
movsb
loopne
rcrl
inc
sbb
xchg
pop
sbb
jmp
popa
jmp
cmpsb
test
sbb
cmp
fmuls
loope
xchg
add
push
inc
nop
mov
cmc
add
or
inc
cmpsb
loopne
and
incl
add
dec
fadd
loopne
and
aas
and
add
and
leave
adc
in
cmp
in
mov
fadds
mov
xchg
fimuls
repnz
bsr
mov
cmp
fisttpll
dec
fadds
shrl
dec
in
mov
dec
hlt
bound
xchg
flds
dec
test
or
scas
jbe
inc
out
andb
mov
jno
aas
cmp
bound
add
or
xchg
xchg
popa
xchg
inc
dec
cld
and
test
add
add
cli
je
roll
addb
loope
add
sbb
lods
test
cld
and
dec
push
jmp
aam
out
ret
jno
popa
test
or
fldcw
ficomps
push
fadds
popf
repnz
mov
cld
loope
jno
fstps
dec
fldl2t
push
lcall
inc
push
loop
inc
push
sub
bound
add
xor
add
mov
lods
pop
push
dec
or
and
add
jmp
add
stos
decb
aam
or
imul
add
sub
icebp
mov
dec
add
cltd
xchg
add
popa
leave
movnti
pop
sarl
and
aaa
mov
add
and
sbb
popa
flds
insl
cwtl
shl
jmp
sbb
mov
and
lcall
cld
shll
cmp
lret
push
xchg
sbb
popa
flds
fs
imul
out
xor
mov
pop
inc
cmc
data16
pusha
xor
fmull
ljmp
inc
xor
rcrb
aad
mov
adc
mov
mov
test
mov
inc
mov
jle
iret
arpl
adcb
cmp
arpl
pusha
popf
jle
stos
pop
dec
fcoml
movsl
jl
repz
inc
pop
int
outsb
jge
dec
out
ljmp
int
fstpt
adc
cmp
in
mov
test
clc
adc
mov
add
add
add
faddl
add
shl
jnp
jp
dec
loope
mov
add
fnstenv
xchg
orb
jmp
stos
shlb
add
or
sbb
ret
rol
add
loope
fsubrl
and
inc
cmp
bound
add
adc
scas
dec
cmp
rcrl
clc
popa
jp
stc
adc
test
jmp
mov
dec
or
pop
lcall
test
xor
jae
dec
dec
call
dec
cli
cmpl
dec
dec
out
fsub
stos
decl
ljmp
fldl2t
mov
popa
sahf
sbb
sbb
mov
arpl
mov
iret
lret
flds
mov
loope
movsb
in
iret
jmp
add
icebp
ljmp
bound
mov
sbb
stos
adc
xchg
repnz
out
fldl2t
sbbb
jmp
add
mov
jg
into
add
loopne
and
popa
loopne
jb
flds
out
int3
negb
or
daa
imul
out
inc
cmp
and
and
scas
mov
fnstcw
jmp
push
loopne
or
negl
in
xor
loope
push
cmp
jo
fisttpll
bound
push
push
in
dec
xor
mov
int3
testl
push
es
jnp
int3
xor
add
add
add
mov
cmp
fldl
jl
fscale
fs
mov
loopne
dec
arpl
or
adc
mov
bound
xchg
and
mov
jne
arpl
jg
arpl
cmp
out
jge
sbb
aas
adc
mov
sbb
pop
out
sbb
je
cmpsl
int3
jae
xor
loope
push
fucomp
or
sti
cld
or
mov
add
mov
dec
mov
test
loop
add
jmp
bnd
loopne
xchg
adc
lahf
lret
jbe
dec
sbb
pop
or
jmp
shll
xor
sub
psubsw
add
mov
xchg
cmc
inc
ret
insl
inc
inc
or
loop
and
stos
ret
jmp
add
sbb
jbe
loope
pcmpeqb
dec
or
add
loope
add
jnp
or
add
jmp
mov
mov
inc
pop
push
ljmp
sub
sub
mov
pop
jmp
pop
mov
imul
fidivl
jle
out
cs
loopne
mov
pop
pushf
lret
loopne
fimuls
mov
lret
push
out
sub
pop
fldenv
sbb
push
fbstp
mov
lret
out
cmp
pop
fnstenv
xchg
mov
outsl
xchg
xchg
mov
jle
dec
xchg
jbe
int3
arpl
add
or
add
or
jge
or
add
add
add
or
add
or
add
or
add
lret
or
add
mov
add
or
add
lods
or
add
orl
inc
orl
mov
add
or
add
dec
or
lret
int3
lcall
in
push
add
or
shlb
mov
add
xor
xchg
jae
lret
dec
inc
sub
mov
addl
push
sub
adc
addl
add
cmp
mov
out
sahf
add
ret
mov
ljmp
pop
ret
int3
fisttps
lret
int3
mov
inc
in
push
inc
sbb
add
pop
cli
push
bound
push
stc
nop
xor
psraw
jae
add
add
jns
movsl
cmp
or
mov
mov
fsts
pop
dec
jge
jge
push
int3
adc
dec
lahf
pop
mov
arpl
jmp
dec
mov
sbb
mov
call
fldenv
push
mov
mov
push
add
jl
mov
mov
testb
lea
pop
pop
arpl
jae
jnp
aaa
fldcw
dec
mov
fnstenv
jnp
and
movsl
rcrb
sbb
push
popa
andl
mov
jmp
scas
push
movsb
scas
out
in
xor
sub
imul
mov
scas
dec
bound
pop
sbb
mov
in
filds
mov
fisubrs
and
test
insl
shlb
sbbl
inc
mov
std
dec
sub
jb
rcll
add
add
sub
or
sub
add
popa
flds
ret
push
sub
xchg
les
adc
test
sbb
jmp
popa
flds
adc
shl
enter
or
pop
fdivs
sarl
roll
push
mov
mov
jns
loope
sub
add
pop
mov
cld
jns
jno
add
je
mov
mov
or
mov
mov
iret
test
or
inc
call
iret
jae
clc
nop
add
bnd
mov
clc
cmp
or
mov
cld
or
fs
les
rorb
jo
leave
scas
mov
sub
sbb
fdivrl
nop
sbb
cltd
bound
pop
imul
sbbb
testl
loope
incl
add
add
jno
packssdw
movsb
subb
push
call
jmp
cmp
aas
cld
jmp
aam
daa
mov
ret
fisttpll
dec
clc
add
popa
incl
out
js
pop
addl
mov
add
inc
add
mov
add
lock
test
insl
ror
out
lret
push
fldcw
mov
sub
mov
sahf
push
sbb
xchg
sub
sub
mov
push
xor
add
dec
xchg
jge
mov
mov
fldcw
jno
test
test
mov
inc
das
and
jmp
cld
fisubs
lods
mov
mov
ret
jmp
dec
cs
test
popa
fldl2t
sbb
enter
dec
flds
fucom
subb
mov
add
flds
bound
int
int3
mov
ret
imul
nop
bound
movsl
mov
pop
dec
xchg
and
icebp
jb
mov
ret
jmp
scas
ret
aaa
iret
outsl
in
test
add
out
push
in
xor
jmp
fisubs
in
lcall
rclb
ds
ret
mov
add
idiv
xchg
xlat
lods
add
add
stc
movsb
add
add
sub
add
dec
cltd
adc
jbe
jl
iret
sub
push
xor
or
es
rolb
add
add
cltd
pop
cmp
icebp
push
lea
add
mov
dec
incl
cmp
and
or
shl
sbbb
cmpb
je
inc
mov
cltd
dec
fwait
add
bound
cmp
pop
hlt
jnp
cmp
push
test
mov
test
push
dec
das
hlt
cmp
cwtl
or
test
in
cmp
nop
sub
clc
ja
inc
inc
bound
aaa
in
in
jl
lret
sbb
pop
mov
fmuls
hlt
push
xor
inc
push
aaa
call
cmpsl
clc
jge
add
xchg
daa
call
bound
mov
add
xchg
fnstcw
dec
out
mov
xchg
sub
int3
mov
shll
in
push
jp
add
add
jmp
sti
test
fisubs
fcompl
bound
bound
jmp
jg
adc
jo
mov
or
add
out
jle
fsubr
add
adc
lcall
mov
js
fldenv
mov
stos
fisubs
jb
dec
pop
add
data16
jmp
imull
xchg
xor
pop
cmp
adc
dec
or
cmp
repz
lods
mov
mov
mov
fidivrs
cli
in
mov
cld
in
fldpi
jmp
mov
inc
loope
push
push
jmp
push
ljmp
mov
sqrtps
rorl
in
rcl
enter
mov
push
clc
jo
shl
jl
xchg
cmpl
testb
add
or
mov
add
mov
es
or
cmp
or
sarl
mov
push
sbb
or
add
add
push
in
cmp
je
incl
add
jle
inc
push
je
mov
add
adc
cmpl
cld
shlb
ja
fs
sahf
test
lret
mov
inc
push
cmp
rcll
repnz
subb
lahf
dec
fpatan
jns
or
stos
clc
adc
repnz
andb
test
add
jae
leave
cli
push
test
add
jb
sbbb
pushf
clc
mov
test
ffreep
popf
clc
mov
inc
mov
pushf
pop
or
movsl
dec
add
sub
popf
clc
lea
mov
lods
fsts
insb
mov
fs
pop
push
loop
pop
mov
out
dec
mov
dec
js
popf
mov
fwait
stos
pop
ljmp
lret
fs
sbb
js
push
pop
fwait
xor
fisttpll
call
mov
out
or
scas
mov
sbb
aas
fbstp
xor
mov
and
data16
lret
add
cmc
cwtl
adc
jp
stc
out
or
loopne
mov
add
add
fcomp
int
std
imul
jmp
movsb
outsl
cmp
cmpsb
ficomps
roll
push
jp
in
jnp
pop
jno
clc
repnz
pop
pusha
pushf
rorl
in
push
mov
ds
mov
cmpsl
mov
or
cmp
push
jo
aad
jecxz
push
les
movsl
mov
lods
popf
mov
cmp
scas
cmpl
add
jne
dec
add
xor
int3
cmp
decb
dec
loop
cmp
pop
js
dec
mov
stc
add
xor
add
push
in
jge
dec
jne
aaa
push
mov
inc
push
mov
inc
ja
jle
fisttpl
call
js
add
mov
fmull
jp
in
push
inc
divb
sbb
incl
add
add
dec
mov
leave
call
dec
xchg
add
bound
test
xchg
fldl
clc
test
leave
add
outsl
sbb
loopne
mov
test
test
dec
cmp
add
add
std
loopne
mov
dec
fidivl
leave
cmp
clc
and
add
std
loopne
mov
add
test
or
xchg
clc
cmc
inc
rolb
orb
loopne
mov
push
out
shl
repz
clc
int
das
bound
test
xchg
test
fsubrl
lcall
xor
jp
data16
fldt
push
movsb
lahf
call
jge
dec
xchg
or
fdivl
mov
in
sub
test
mov
pushf
push
movsl
cmpsl
shl
cmpsb
jo
mov
insb
push
add
pop
movsl
or
cwtl
dec
add
into
mov
jmp
jae
lds
add
popa
ss
cmpsb
fstps
xor
push
bound
subl
ss
jbe
add
add
sbb
sbb
sbb
jb
mov
subl
xor
inc
fstps
xor
push
bound
jns
aad
subl
xor
push
jmp
mov
shl
mov
sub
pusha
xor
out
sbb
cmp
sbb
bound
mov
add
fiadds
lret
hlt
arpl
inc
stc
call
dec
fbld
cld
push
jae
test
fiaddl
add
and
test
mov
stc
js
mov
gs
adc
jg
mov
clc
je
pusha
mov
cld
shlb
push
shr
push
rcrb
jg
sub
ja
cmc
addb
jge
gs
jle
jb
mov
sbb
outsl
pop
jle
ret
pop
jp
inc
pushf
add
xchg
jl
movsb
cld
jae
sub
flds
xor
into
movsb
inc
insl
rolb
sahf
stos
jle
pop
lds
jge
pop
cmpl
lods
idiv
out
fwait
mov
sub
xor
test
push
mov
das
add
jno
int
push
in
sub
fdivrs
xor
outsl
add
cld
mov
add
add
daa
lds
mov
cs
flds
adc
inc
int3
cmc
ret
pop
fldenv
in
jmp
ds
sub
pusha
sub
or
mov
jmp
out
bound
mull
movsb
xchg
xchg
cs
and
xchg
add
movsb
jbe
clc
jo
or
mov
cmpsl
rcr
es
xor
add
add
mov
inc
andb
fs
rcl
jb
out
cli
mov
rcll
popa
pop
sub
adc
orb
je
jo
add
imul
xchg
cs
ds
mov
imull
xlat
jge
jb
mov
mov
sub
jb
jmp
mov
dec
out
mov
xor
in
loop
insb
jmp
nop
cmp
aad
push
push
roll
jo
ds
pop
fnstsw
repz
push
xlat
jge
push
mov
push
pop
xor
mov
pusha
cmp
fldlg2
mov
imull
xlat
jmp
es
clc
jo
xor
add
call
addl
add
fstpt
inc
sbb
mov
mov
inc
notl
sbb
cld
dec
sbb
pop
fwait
add
insb
jno
shll
js
jge
fwait
cwtl
add
jnp
jp
mov
jg
mov
jp
cmp
adc
testb
dec
in
push
mov
push
cmp
cmp
adc
xchg
jae
bound
xbegin
loope
xlat
pushl
xchg
ss
and
dec
roll
add
dec
xor
aam
dec
lods
cmp
jb
test
jg
aam
movsl
jl
push
pop
or
int3
add
je
add
xlat
mov
in
cmp
jg
add
pop
or
mov
mov
mov
cs
lret
es
test
fnstenv
test
int
mov
lds
mov
fstps
loope
mov
test
fnstenv
pop
push
mov
push
pop
jle
push
lods
ljmp
pop
push
bound
sub
bound
cmp
fsubrs
fldl2t
add
add
add
subl
xor
xchg
jo
mov
fldl2t
add
pop
scas
add
jmp
cwtl
fisubs
mov
jge
inc
mov
fisubrs
lods
pop
faddl
xor
sbb
ret
dec
bound
fbstp
test
pop
adc
dec
push
xlat
mov
pop
imul
fmuls
cmp
jmp
mov
jmp
in
sub
jb
or
loopne
add
and
push
notl
adc
decl
mov
cmp
add
bound
and
ficompl
mov
push
add
ficompl
js
dec
add
iret
add
fiaddl
dec
pop
idiv
mov
stos
in
push
arpl
and
popf
or
cmc
jg
pop
bound
add
xchg
lret
int3
dec
jmp
fnstsw
pop
pop
jmp
or
clc
mov
mov
cmp
xchg
inc
dec
std
xlat
movl
dec
jno
mov
adc
outsl
xor
stos
jno
rolb
push
test
in
mov
aas
orl
xor
mov
clc
loope
add
popf
test
cld
cwtl
dec
sub
divl
clc
lea
inc
xchg
mov
sub
clc
loope
add
sub
add
add
or
cmp
pop
and
add
jmp
jae
std
sub
loope
jle
test
push
testb
pusha
addr16
lods
jmp
push
loope
dec
add
pop
pop
rorl
ss
jle
mov
lods
sbb
test
xchg
lcall
add
cltd
adc
mov
jmp
sbb
shll
subl
sub
jge
insb
enter
in
push
popa
flds
mov
insb
fdivs
insb
dec
lods
push
bound
mov
leave
sbb
push
into
sub
in
insb
insb
in
loop
testl
frstor
negl
add
sar
rclb
inc
add
popa
sub
add
dec
add
popa
and
insl
in
xor
sahf
icebp
push
ds
push
cmc
cmp
mov
clc
clc
mov
add
rcrb
cmc
add
jae
mov
jb
pop
xchg
sub
jmp
add
imulb
add
xlat
lods
icebp
ret
adc
add
sbbb
lea
add
add
dec
push
icebp
in
inc
jl
repz
ret
add
xchg
jae
dec
xchg
clc
jmp
popa
clc
jne
fwait
cltd
test
add
in
inc
jl
ret
aad
lea
inc
mov
jl
repz
jmp
jle
xor
popa
aas
ret
clc
fprem1
add
popa
sbb
rolb
loope
icebp
jl
shlb
add
jmp
incl
cmp
bound
shlb
mov
push
insl
jbe
loope
out
test
inc
xchg
sub
ja
aaa
jle
add
dec
fbld
add
fcoms
mov
aaa
je
add
mov
jae
sub
and
cs
hlt
std
push
out
xor
mov
imul
cmpsl
repz
out
int3
repz
jmp
sbb
pop
test
loop
mov
pop
push
outsl
test
int
jl
rcr
ret
ficomps
lahf
comiss
mov
push
leave
and
fldl2t
add
bound
cmp
scas
jp
int
adc
out
cmc
fiaddl
jmp
popa
sarb
popa
flds
jb
and
rclb
leave
mul
pop
add
popa
bound
sub
jge
jp
jb
push
xchg
jae
and
rcl
jl
pusha
flds
jb
addr16
popa
cmpsb
cmp
jmp
movsl
pop
mov
flds
andl
mov
popa
fsts
inc
loope
jmp
out
or
mov
flds
jb
pop
mov
fdivrl
add
daa
mov
mov
inc
push
les
les
xchg
idiv
mov
adc
lret
fnstsw
repnz
cld
mov
push
inc
popl
mov
push
mov
iret
and
mov
add
xlat
jne
pop
test
loope
add
add
fildl
mov
shl
mov
dec
jle
or
push
jle
ret
push
mov
mov
jns
mov
movsl
cli
jmp
xchg
fidivrl
sub
jmp
inc
in
inc
imulb
dec
adc
lcall
gs
push
push
cmp
jo
push
cmp
add
add
ficompl
sub
arpl
jl
mov
jne
out
sbb
mov
push
les
cmp
js
outsb
pop
je
sub
adc
enter
sarb
stc
mov
inc
bound
cs
mov
test
stc
jnp
shrl
leave
mov
leave
bound
xor
sti
test
and
sub
scas
add
lock
test
add
add
sub
insl
loope
jmp
int3
call
pop
push
daa
rolb
leave
movsl
push
outsb
test
push
inc
sub
mov
sti
ret
mov
aad
sub
pop
xor
mov
jmp
rcrb
and
pushf
pop
mov
xchg
dec
pop
or
sti
push
notl
add
mov
or
dec
jb
test
jmp
cwtl
dec
ds
aas
add
fadds
jb
and
jmp
popa
flds
cld
jb
xchg
mov
flds
cld
pop
pop
inc
stc
sbb
insl
frstor
pop
jbe
lret
popa
mov
add
faddl
out
popa
flds
jmp
pop
or
mov
pop
fnstcw
add
xlat
stc
adc
dec
pushf
lcall
pop
xlat
add
xlat
pop
mov
hlt
pop
ret
int3
out
pusha
lret
int3
iret
pusha
lret
int3
jbe
in
or
ljmp
mov
add
fmull
mov
and
push
push
dec
clc
jmp
add
add
mov
xorl
test
clc
call
cwtl
or
and
push
fadd
out
in
shll
fld1
jg
push
mov
xor
add
fldenv
xor
fidivrs
mov
mov
adc
fsubl
add
mov
lea
mov
std
loopne
mov
add
add
adc
mov
xlat
pop
mov
loope
testl
jle
mov
fildll
xlat
sub
stc
sbb
jmp
jl
mov
ljmp
or
inc
mov
cmc
mov
mov
out
test
push
mov
mov
cmp
lods
mov
add
mov
test
mov
pop
mov
das
jb
push
ja
mov
test
loope
in
add
xchg
pop
ja
movsl
mov
mov
dec
push
nop
sub
mov
pusha
insb
ljmp
negl
jmp
test
fisubl
in
pop
jmp
call
add
mov
jge
jb
xorb
mov
push
pop
sub
test
mov
subl
push
int3
cmpsb
sbb
loop
repz
sub
cmp
idivl
xlat
cmp
scas
pop
test
negl
push
jge
clc
add
stc
incl
add
add
in
xor
je
nopl
incl
push
inc
mov
clc
call
and
clc
call
dec
cltd
add
add
mov
mov
idiv
mov
mov
push
clc
push
es
inc
push
inc
call
add
enter
or
fdivl
aam
xchg
and
add
add
inc
lea
pop
sub
adc
add
test
les
idivl
cmpsl
mov
jle
in
mov
fst
add
xor
mov
clc
mov
loop
mov
clc
fwait
clc
popf
xor
std
loopne
jle
pop
xor
out
jle
jne
jns
insb
inc
jle
cmp
clc
loope
testl
jle
jg
out
fsubrs
sub
inc
xchg
and
andb
bound
push
dec
pushf
xchg
popf
push
js
movsb
jbe
ficompl
testb
popf
push
popa
push
test
add
adc
rcrl
mov
aam
popf
scas
subps
and
lock
push
jb
fisttpll
popf
mov
pop
popf
insb
aaa
push
or
push
pushf
add
mov
and
subl
push
int3
push
stos
pop
cmc
pop
pop
popf
push
jb
clc
idivl
out
test
lea
clc
fists
xchg
out
testl
jecxz
cld
imul
mov
mov
neg
out
test
mov
in
fisubs
divl
out
mov
ljmp
clc
mov
push
mov
addr16
clc
call
sbb
int3
push
jl
dec
gs
adc
incl
add
add
fcmovnu
ja
xchg
mov
add
int3
and
dec
and
push
stos
push
xchg
or
addl
dec
mov
mov
jae
int
push
mov
jo
push
clc
sub
mov
clc
push
xor
inc
mov
sbb
dec
dec
xchg
inc
int3
push
clc
mov
mov
mov
bound
clc
jmp
pop
xchg
test
fmuls
ret
outsb
xor
inc
add
nop
mov
add
mov
fsub
pop
xlat
test
dec
ds
es
lret
push
in
push
lret
push
pop
xchg
loope
daa
push
jmp
xchg
jae
ja
mov
bound
outsb
mov
pop
test
incb
add
add
inc
imul
cmpb
pop
jmp
shr
mov
sarl
mov
xchg
jbe
and
jg
bound
and
mov
add
pop
push
aaa
clc
gs
lahf
popf
stos
cld
sub
bound
arpl
cltd
jmp
imul
push
and
fimull
jno
cltd
adcb
popa
frstor
fldcw
pop
out
loop
xchg
in
scas
mov
push
cltd
mov
sbb
lods
cmpl
push
sbb
inc
pop
in
add
fisttps
or
lret
bound
cmp
dec
or
jmp
xor
pop
push
loopne
popa
fldcw
add
add
adcl
mov
gs
movsl
push
xchg
imull
in
sub
jecxz
inc
jmp
pop
fisttpll
test
jmp
jecxz
jl
stos
cwtl
mov
ret
pop
ret
or
cli
jae
and
inc
add
out
jl
aas
fnstsw
jmp
ret
mov
push
adc
add
add
and
dec
arpl
mov
push
mov
jle
inc
faddl
add
jae
call
mov
add
push
incl
mov
mov
lret
fs
or
xchg
aas
cmp
mov
decl
psrlw
add
sti
jle
bound
and
into
sbb
sub
loope
add
inc
std
addl
std
push
addl
push
bound
std
jmp
sti
outsl
fstpt
xchg
sti
xchg
fstps
jmp
mov
push
orb
in
mov
bound
les
or
inc
cs
jbe
jmp
add
add
jo
dec
bound
popf
xchg
jmp
out
push
scas
xor
mov
fld1
add
bound
frstor
and
bound
add
pusha
dec
add
jo
mov
push
jb
sub
xchg
fisubl
or
mov
add
sub
gs
mov
fsubrl
sahf
mov
js
add
popa
mov
sub
sub
out
add
fisubrs
imul
xor
and
mov
sub
sub
inc
add
aam
adc
and
cmp
fucomp
mov
xchg
divl
int
hlt
outsb
pop
cmp
loope
flds
push
setb
pop
xor
clc
cld
jmp
cwtl
or
ljmp
sbb
xchg
mov
les
pop
inc
add
test
add
fcomps
fiaddl
mov
mov
fadd
int3
iret
and
int3
push
jmp
push
bound
mov
add
mov
jge
fldl
add
and
mov
push
dec
fadds
add
adc
cmp
add
cmp
add
dec
pop
rolb
fadds
add
decl
fcomps
mov
add
sub
xlat
rol
flds
add
mov
idivb
loopne
or
xlat
add
lret
pop
roll
addb
bound
lret
xchg
int
lret
scas
lds
cmpsb
dec
inc
subb
lock
int3
out
push
inc
out
xor
cld
test
inc
or
push
icebp
or
ret
and
xlat
mov
mov
xlat
mov
cs
dec
lret
testb
ss
rcll
cmp
jae
cmpsl
sub
dec
push
nop
jp
xor
jnp
jmp
jge
outsb
fsin
mov
xchg
pop
inc
push
icebp
mov
add
add
lea
aad
sub
adc
out
add
xchg
shl
lcall
fmul
movsl
xchg
inc
cltd
movsl
lods
inc
test
movsl
adc
jns
adc
in
xchg
adcb
mov
mov
adc
pop
and
pushf
sub
jnp
push
sti
ret
sbb
xchg
hlt
pop
sbb
xchg
add
add
jo
popa
pop
add
push
les
sbb
jge
mov
push
add
std
xor
fistpll
mov
mov
sub
sub
and
or
nop
loope
fsubl
mov
sbb
mov
mov
xor
stos
movsb
les
stos
movsb
les
test
fsubl
xor
fistps
cmp
sbb
add
int
je
jle
mov
arpl
push
mov
dec
fs
clc
cmp
cmp
idiv
dec
adc
mov
pop
adc
jne
mov
jl
ss
jge
mov
mov
in
add
add
int3
int3
sbb
int3
pop
sbb
int3
pop
sbb
int3
mov
push
sarb
fsts
mov
ljmp
aas
loopne
je
mov
std
jmp
fs
mov
sub
sub
std
dec
jae
jno
dec
jb
mov
xor
clc
ja
or
clc
aaa
xchg
es
fidivrl
idivl
add
lcall
pop
aaa
inc
dec
lret
sahf
int3
mov
sub
mov
add
clc
fisttps
adc
jle
mov
ja
adc
mov
push
mov
lret
loopne
add
jmp
out
mov
fldln2
or
ficompl
sbb
jmp
dec
aad
inc
sbb
sub
dec
sbb
pushf
or
add
add
fstps
les
sbb
or
stos
add
sbb
ds
cmpsb
ret
jno
cmpsl
ret
sub
lahf
sub
sbb
add
jmp
inc
cltd
popf
xchg
inc
sub
movsl
inc
sbb
jmp
add
filds
clc
mov
adc
add
out
add
popa
mov
subl
push
outsb
cmp
or
popa
fnstcw
insb
lods
mov
mov
loopne
cld
scas
mov
mov
or
test
popa
jmp
popa
jmp
stos
mov
les
lcall
sbb
add
inc
push
mov
decl
or
mov
pop
or
cs
cld
sti
popa
fwait
mov
loope
add
sbb
sarb
mov
mov
lret
fdivrs
xor
mov
repz
add
aaa
mov
pusha
pop
or
add
add
jge
scas
aad
adc
aad
sbb
lods
sub
sub
sti
mov
fstps
cmp
cs
bound
bound
add
divb
rolb
orb
jmp
movsb
or
scas
push
mov
bound
jmp
aaa
mov
mov
bound
loop
add
add
mov
or
bound
mov
in
aas
lret
cmpsb
inc
inc
lret
sahf
cmp
ja
loope
adc
adc
test
mov
fucomi
push
test
jmp
pusha
sub
fisubrs
loop
out
cli
ss
inc
cwtl
jg
cltd
mov
lahf
pusha
jl
fsubrp
add
popa
test
jl
fsubrp
add
add
add
popa
mov
in
mov
cltd
fsubrp
add
popa
cltd
aad
jo
xor
jmp
mov
in
add
gs
pop
fldl2t
movsl
repz
shl
jb
xor
jmp
jge
mov
lock
xor
in
hlt
add
loop
add
popa
pop
mov
aad
jmp
jb
imul
push
lcall
scas
daa
in
and
bound
xchg
jp
loopne
lods
test
cmpsb
je
mov
mov
pushf
cmp
inc
vptestmb
adc
pop
mov
sub
das
psraw
dec
pop
ds
pop
add
pusha
inc
call
popa
push
inc
mov
xchg
insb
stc
bound
add
shl
aad
add
add
add
push
jnp
rclb
add
xchg
jb
mov
fldl
add
fldl
mov
aas
data16
aas
cmp
fldl
add
fldl
jne
or
dec
daa
testb
sub
cmpl
cmp
lret
fdiv
mov
fstp
mov
test
incl
popa
add
jns
adc
out
push
adc
jnp
outsb
std
jo
mov
mov
out
jl
pop
jb
mov
jno
add
sar
in
jl
jbe
jb
fwait
mov
popf
lahf
add
xchg
or
xor
scas
or
stc
cli
xlat
pop
pop
clc
test
push
adc
add
add
jp
int
outsl
test
je
ret
jb
cli
out
loope
std
inc
fildl
jb
outsb
rcll
mov
cltd
xchg
movsl
inc
test
pop
mov
pop
das
pop
jnp
push
mov
xor
sbb
dec
xchg
andl
inc
jae
fldenv
dec
outsb
outsl
adc
add
add
xlat
jno
std
xchg
andb
stos
jl
test
pop
push
xchg
ja
and
jnp
push
test
dec
add
mov
xchg
in
scas
test
inc
fcoms
sub
jmp
insb
push
or
mov
mov
cmpl
cmpl
dec
add
repz
fistps
faddl
jmp
mov
mov
mov
cwtl
or
inc
stos
xchg
jmp
outsl
int3
ret
hlt
or
call
jb
or
loop
cmc
push
cmp
mov
pop
pop
bound
and
xor
jge
les
adc
add
or
mov
xlat
and
mov
repz
xchg
add
out
add
flds
test
lea
mov
add
out
add
flds
test
xchg
inc
flds
addl
jg
shll
idiv
or
jge
xorb
mov
jne
fcmovb
mov
std
jle
xchg
add
push
sub
pusha
push
or
stos
out
ucomiss
mov
fadds
add
lods
mov
movsl
pop
jne
je
add
cmp
sub
add
divb
bound
test
hlt
popa
imul
adc
hlt
mov
or
add
aam
ljmp
mov
sub
add
mov
xchg
js
into
stos
add
roll
add
lea
add
test
insb
popa
jmp
lods
adc
js
push
adc
fdivs
cmp
jmp
in
imul
inc
idivb
inc
xlat
add
pop
in
sbb
insb
fucomp
add
mov
jg
fldl2t
add
push
into
sti
loope
jmp
js
add
add
stc
add
shrb
xchg
jg
inc
out
add
add
add
scas
ljmp
in
bound
pop
andl
roll
loopne
mov
jmp
jge
inc
iret
add
add
jbe
cmp
jb
out
mov
pop
nop
push
push
flds
popa
push
rorb
jmp
cltd
out
fldenv
pop
mov
cli
and
mov
popa
add
clc
mov
lods
jecxz
std
xor
fstps
rcrb
push
flds
pop
daa
dec
mov
sub
pop
mov
lods
pop
dec
gs
dec
mov
push
flds
jmp
push
out
jl
push
call
jns
movsb
inc
xchg
sub
pop
add
inc
cltd
jecxz
xchg
gs
push
mov
jge
scas
add
lods
aad
mov
aad
adc
jne
mov
jge
loop
add
shr
or
cmp
jp
dec
xchg
adc
call
or
add
mov
outsb
icebp
popa
mov
adc
or
push
data16
mov
bound
sbb
push
sbb
add
scas
testl
add
add
cli
test
bound
xchg
addb
loope
pop
jl
js
pop
fildl
popa
mov
jne
push
mov
mov
jb
test
jle
jg
mov
add
outsb
adc
jbe
in
adc
and
inc
pop
cli
pop
or
add
jp
jno
adc
adcl
into
lahf
add
jl
stos
mov
fldl2t
add
sub
add
cmp
sarb
jae
jmp
sub
jg
test
fldl2t
add
xor
ljmp
jnp
shr
add
jo
lea
cmpsl
jae
jmp
clc
mov
test
sarl
mov
jl
jne
std
in
iret
add
sbb
fcompl
push
fnstenv
gs
sbb
sub
idivb
in
mov
jae
jmp
out
inc
push
jmp
pop
and
iret
nop
jno
pushf
dec
push
dec
repz
push
nop
jge
flds
bound
inc
push
jmp
sub
jecxz
fstps
cmp
flds
xchg
flds
pushf
or
movsl
flds
jb
inc
push
jmp
loopne
add
int
loop
or
mov
clc
or
call
or
jmp
cmp
inc
in
xchg
adc
xor
add
jo
incl
iret
lret
add
inc
jno
add
into
cmpsl
adc
popa
rcrl
mov
inc
push
push
lret
fldenv
inc
xor
add
fldenv
imul
call
insb
sub
jno
add
xchg
add
sar
push
dec
fldcw
mov
sbb
decl
push
in
gs
mov
jle
bound
push
repnz
add
int
fdiv
movsb
adc
jnp
push
divl
test
js
pop
clc
mov
outsb
cmpl
movsl
add
flds
adc
enter
pop
mov
xlat
ds
out
jmp
test
push
mov
lret
add
cs
ljmp
push
loopne
cli
lahf
adc
aad
sbb
add
scas
neg
stc
lahf
adc
js
neg
testl
cmpsb
and
mov
sub
subl
mov
mov
jmp
jns
inc
out
add
in
out
add
in
jmp
dec
pop
stos
jae
jmp
packssdw
cmpsl
push
fldl2t
js
insl
call
sbb
out
jns
cmp
add
pusha
stos
lods
loop
add
repnz
adc
add
add
cwtl
out
in
iret
add
add
lods
shlb
outsl
jge
or
mov
scas
sub
jmp
insb
push
out
out
add
popa
cwtl
cmp
jmp
popa
flds
cs
cmp
popa
flds
pushf
cmp
jge
sbb
testl
adc
push
bound
add
add
call
div
add
add
in
or
clc
mov
xor
mov
jle
popa
or
dec
push
or
push
scas
push
cmp
mov
aad
adc
add
jle
dec
dec
or
out
xchg
inc
xor
cli
xchg
adc
cwtl
out
je
cs
xchg
mov
push
push
scas
push
lret
aad
adc
dec
scas
push
mov
dec
mov
leave
jge
inc
xor
ret
push
out
or
outsb
adc
imul
adc
test
in
mov
pop
xchg
add
in
jp
dec
addb
pushf
jbe
dec
push
mov
test
mov
incl
add
add
add
movb
xchg
push
jns
add
mov
jno
sub
inc
jns
mov
addb
mov
jo
add
inc
repz
es
decl
fsts
jp
push
pop
test
cmc
mov
jne
or
xor
add
das
or
pop
cmp
insl
fimull
clc
fisttps
stc
sub
fs
or
sbb
bound
into
jmp
xchg
insl
ret
mov
inc
icebp
popa
ja
push
fldl2t
jmp
aad
inc
hlt
inc
mov
pop
pop
cmp
popa
bound
push
fldl2t
adc
mov
repz
outsl
add
bound
pop
jb
loope
call
and
popa
loop
insl
in
icebp
or
popa
sti
mov
sbb
pop
lock
cs
jmp
enter
or
jno
out
daa
sbb
scas
ja
enter
and
pop
mov
idivb
call
pop
lret
subl
clc
mov
enter
dec
mov
popa
fldpi
or
jg
sbbb
xchg
dec
jle
imul
xchg
pop
add
fidivl
mov
mov
adc
adc
ljmp
jge
inc
movsl
mov
mov
loopne
repz
stc
mov
aas
lea
arpl
call
cmp
jl
ds
int3
iret
and
jmp
outsl
push
mov
loop
leave
adc
imul
lods
pop
lods
add
jle
add
repz
adc
mov
bound
add
adc
and
shl
jmp
addb
addl
bound
cltd
punpckldq
dec
jns
orl
dec
bound
cli
out
incl
add
add
insb
add
clc
xchg
push
aas
dec
jnp
xchg
stos
mov
add
sub
test
push
sbb
insb
mov
and
in
and
fists
lock
jo
aad
jmp
mov
jg
cmpsl
sti
lock
lret
jmp
mov
es
sbb
cmp
add
imul
add
add
or
xor
pop
fnstenv
stc
lret
hlt
enter
shlb
pop
je
or
daa
jmp
mov
sti
lcall
dec
xor
in
out
xchg
cmc
xor
add
mov
pop
test
out
xchg
aad
iret
add
add
fxch
adc
xor
jmp
lock
and
add
add
out
lods
lods
lock
call
fstps
shrl
push
jmp
ret
pinsrw
xor
add
jae
jle
sub
mov
add
mov
movsb
lock
out
inc
mov
jo
sbbb
pop
dec
loope
fcoml
div
dec
mov
mov
sub
add
mov
mov
add
sbb
adc
mov
pop
imul
adc
insl
sbb
mov
push
mov
jg
aaa
addr16
lods
fs
mov
push
js
xchg
icebp
jno
add
nop
mov
inc
adc
idiv
nop
push
enter
mov
jg
jnp
int3
je
add
add
sub
or
mov
adc
aad
sub
pop
leave
inc
xor
test
or
call
or
xchg
out
adc
imul
insb
or
jne
lret
pop
out
inc
xchg
xchg
push
ret
lock
jb
inc
popa
xor
test
out
add
sbb
ljmp
int3
add
or
popa
cmp
add
pop
cld
in
or
push
test
jnp
fnsave
or
out
adc
stc
sub
imul
bound
leave
jmp
mov
imul
scas
imul
jb
add
add
xor
add
jnp
jmp
mov
mov
lock
daa
push
lcall
jno
fs
jae
jmp
repz
mov
and
fadds
jecxz
push
nop
sub
add
pop
jo
daa
push
jmp
hlt
jecxz
jb
cmp
sbb
or
leave
add
data16
add
fidivs
add
xlat
jge
push
jg
adc
push
and
popa
push
mov
push
outsl
imul
js
cmp
lea
jb
clc
ror
fsts
or
sub
push
mov
push
jmp
jmp
xchg
adc
xor
fidivrl
mov
aas
or
add
add
or
mov
gs
data16
scas
push
mov
or
xchg
pop
xchg
adc
jmp
arpl
dec
sti
popa
or
dec
adc
dec
fcmovne
pop
popf
pop
jg
push
fiaddl
pop
sar
ret
fists
int3
int3
call
mov
fmul
rorb
add
add
pusha
add
inc
jno
aad
cmp
cmp
idivl
imul
jg
jae
sahf
cmpb
sub
dec
jmp
call
mov
repnz
xorb
inc
std
aas
loope
idivl
bound
adc
and
inc
lret
push
aas
dec
lret
push
sarb
jmp
addr16
rcr
int
xor
lods
dec
sbb
bound
pop
xor
movsb
out
int
xlat
add
sbb
fisubs
repnz
push
les
xchg
jl
ret
jmp
mov
insb
test
mov
xor
add
jno
jae
jmp
add
mov
mov
pusha
mov
fists
out
pop
insb
popa
clc
pop
fcoml
add
testb
jno
mov
xor
add
add
popf
mov
les
jmp
push
test
xlat
inc
mov
sbb
push
dec
icebp
fxch
adc
mov
pop
daa
cwtl
cmpb
leave
mov
push
dec
loope
sbb
jmp
push
lods
or
sub
mov
leave
add
fcoms
fbld
pop
sub
sahf
les
mov
orl
in
jne
add
insb
inc
subb
sbb
or
adc
and
adc
mov
fisttps
jae
adc
mov
js
jmp
or
icebp
rcll
adc
or
js
jmp
or
stos
lock
add
scas
daa
sbb
mov
fwait
jnp
add
add
cmp
outsb
jge
repz
clc
inc
das
mov
pop
pop
xchg
int3
int3
bound
hlt
mov
or
std
jne
imul
decl
addb
sub
jge
push
lahf
idiv
in
mov
bound
jge
imul
idiv
mov
addb
adc
frstpm(287
mov
bound
add
das
leave
ds
jbe
loope
and
in
pop
sub
pop
std
incl
add
add
push
shl
cs
pop
inc
add
push
ret
add
xchg
aas
jnp
push
lret
popa
out
add
std
add
or
or
mov
push
mov
mov
jb
dec
fisubrl
jnp
xor
or
fidivrs
inc
test
pop
xor
mov
push
add
shll
imul
fmull
and
gs
fldl2t
add
push
add
cs
fbld
imull
lret
add
scas
dec
push
frstor
mov
add
jmp
fwait
pop
xor
push
jmp
dec
xchg
pop
pusha
mov
add
push
sbb
std
lahf
in
sbb
addr16
pushf
push
test
in
cmpsl
ds
jmp
dec
cltd
mull
lret
add
es
push
aad
jmp
popa
fstps
jne
mov
jmp
in
inc
adc
dec
pusha
int3
je
fidivl
xchg
outsl
idiv
enter
dec
fcomi
jnp
in
cld
mov
decl
jnp
idiv
mov
mov
and
je
cmp
shr
stc
clc
pushl
pop
ret
add
adc
jl
loop
clc
inc
nop
out
jmp
pop
mov
add
inc
adc
fidivrl
xor
jecxz
pusha
sbb
dec
add
adc
ficompl
lock
jg
bound
ljmp
jmp
fistpll
ret
add
mov
out
incl
jne
push
jo
xchg
std
cmpsl
add
jo
xchg
mov
adc
je
sti
incl
fldl
adc
cli
shl
stc
out
mov
add
push
jbe
add
bound
ret
pop
mov
sar
fs
sub
pop
or
fiaddl
notb
jo
or
rcr
incl
fcmovnu
mov
jg
jcxz
add
add
jmp
inc
fcoml
add
jne
dec
popf
in
or
into
add
out
jle
fs
dec
cmp
sub
int
add
dec
dec
stc
adc
push
dec
xchg
fwait
xchg
sub
mov
jbe
shr
add
sub
add
jns
push
stos
inc
cltd
xchg
sub
inc
test
add
add
fldl2t
jle
dec
jmp
inc
jmp
imull
or
repnz
flds
jmp
push
popa
test
fiadds
jmp
sahf
popa
andl
fldpi
ljmp
xor
push
fs
push
push
jbe
popa
flds
cmp
shrl
jmp
daa
fiadds
jmp
iret
pop
cmp
mov
push
jbe
popa
flds
hlt
jb
scas
jns
movb
in
jg
fldl
jmp
or
add
and
jnp
push
and
adc
lahf
push
mov
pop
ret
mov
dec
inc
push
mov
mov
add
and
adc
in
push
cmp
pop
ret
enter
xchg
adc
cmp
mov
xlat
mov
lret
int3
outsb
loop
mov
gs
xchg
decl
sub
dec
imul
push
and
scas
push
mov
push
adc
lret
jecxz
adc
clc
call
mov
jo
stc
and
pop
ficoml
pushl
mov
cld
sahf
pop
test
add
add
insb
mov
scas
test
xchg
aaa
icebp
pushl
cwtl
hlt
and
mov
lock
xor
jnp
push
jo
test
pop
bnd
divb
dec
dec
jl
jae
mov
scas
fsubrs
aaa
cltd
xchg
mov
mov
jo
dec
lcall
add
dec
pushf
sti
out
pop
icebp
jne
arpl
xchg
jbe
mov
fucomi
add
lock
enter
aam
test
jmp
jl
shll
insb
fidivrl
lock
popa
mov
jmp
mov
push
std
repnz
repnz
pusha
call
hlt
xchg
jmp
push
add
add
add
ret
push
mov
mov
xlat
subl
pop
mov
push
and
jmp
ss
lock
daa
push
jmp
fwait
adc
push
into
sub
jmp
into
sbb
popa
cmp
add
shrl
jmp
icebp
xlat
mov
adc
fstl
fnstenv
mov
add
mov
leave
add
add
push
rcrl
add
pop
jmp
cmp
add
in
push
lret
fisttpl
adc
out
decl
lret
int3
jg
lret
int3
dec
test
int3
aas
test
int3
out
jmp
fcomp
pop
adc
push
addl
fildl
push
test
sti
add
add
fnstsw
or
divb
xchg
clc
cmp
jg
pop
loopne
sbb
add
iret
in
lcall
mov
fildl
push
and
in
dec
pop
ret
or
fbld
into
push
stc
mov
xchg
adc
jp
push
jg
add
xor
jl
jp
in
xor
ljmp
in
cmc
mov
cmp
fildl
imul
rclb
jmp
and
add
lods
in
out
jno
add
adc
testl
bound
cmp
fiadds
jmp
mov
lahf
fs
pop
repz
or
xor
jmp
fldenv
push
fldl2t
divb
pop
bound
lret
push
into
notb
aas
xor
mov
push
scas
sti
in
icebp
jp
add
add
sbb
add
lahf
out
enter
mov
lds
jge
jmp
mov
jmp
popa
ret
shrb
jae
jmp
jne
jmp
jns
mov
add
outsl
call
lods
sbb
ret
adc
jle
rolb
jmp
jb
imul
mov
mov
xchg
jecxz
or
pop
pop
imul
dec
push
mov
popa
jmp
arpl
cmp
pop
loopne
and
jmp
lret
cli
or
popa
mov
imull
fxch
add
ficoml
or
in
push
mov
inc
mov
pop
xchg
pop
mov
test
mov
popa
fstps
xchg
and
add
xlat
fstl
popf
stos
xlat
data16
scas
push
or
jne
clc
fimuls
push
arpl
inc
mov
or
decl
decl
inc
adc
jl
and
pop
pop
adc
pop
ret
aaa
movsb
lret
int3
fsubp
jmp
pop
inc
mov
pop
jmp
decl
jne
cmp
mov
fidivrl
add
and
clc
add
mul
mov
add
mov
shlb
or
pop
xor
pop
and
push
jmp
lds
mov
loope
sub
aaa
rdtsc
scas
mov
ss
nop
mov
bound
add
lret
daa
mov
add
sbb
clc
bound
add
sbb
clc
bound
outsb
loop
xor
mov
or
lods
cmp
cld
sbb
cmp
push
inc
push
mov
fldcw
cmc
ret
jmp
add
xchg
jb
ljmp
in
fiadds
and
fldenv
jns
mov
push
int
mov
lock
push
lods
aad
adc
add
push
lods
aad
adc
add
push
aad
adc
add
push
aad
adc
aad
adc
aad
adc
mov
push
dec
frstor
adc
mov
push
dec
fnsave
adc
scas
add
pop
push
add
push
mov
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
outsb
mov
testl
test
imul
loope
sbbb
ljmp
push
add
mov
clc
and
neg
daa
add
popa
sti
stc
jb
jmp
js
filds
andl
add
add
add
fucomp
add
call
out
add
call
out
add
fucomp
add
call
out
add
jmp
out
add
jmp
out
add
call
out
add
jmp
out
add
mov
sbb
mov
nop
fsubr
add
jmp
out
add
mov
outsb
fsubr
add
ds
mulb
adc
popa
or
push
inc
cmp
lret
or
mov
clc
sbb
aas
insl
add
mov
repnz
xchg
sbb
int
inc
ss
popa
mov
inc
xor
subl
add
xchg
mov
mov
add
add
inc
lret
cmpsb
xchg
mov
xchg
adc
mov
bound
ds
icebp
sub
mov
push
fdivrl
push
add
fldcw
sub
or
cwtl
inc
add
insb
and
out
or
jmp
or
push
sbb
push
bound
and
fsubr
add
cmpsb
add
jb
icebp
fcomp
ret
aad
mulb
fbstp
test
push
or
mov
adcl
mov
test
mov
pop
inc
adc
jmp
mov
add
cmp
orl
push
fsts
bound
fsts
push
popa
push
std
jnp
or
jmp
mov
ljmp
aam
mov
inc
push
add
popa
pop
or
data16
jmp
aam
add
xchg
jmp
mov
xchg
jmp
outsb
push
imul
mov
jge
cwtl
adc
sbb
cmp
add
push
testl
mov
add
scas
mov
adcl
dec
fadds
xor
jae
xor
xlat
jge
jp
adc
dec
jae
sub
fdivs
xor
add
call
sbb
jge
mov
xchg
fmull
mov
clc
add
fdivrs
mov
daa
inc
sti
push
aam
lret
xlat
add
iret
jb
xor
fnstsw
cli
add
xor
frstor
mov
pop
idivl
lret
xlat
and
shll
and
add
add
inc
jle
xor
sub
jecxz
xor
pop
inc
lock
inc
out
aas
bound
lock
inc
out
and
bound
sub
mov
out
mov
test
mov
cmp
push
push
clc
bound
test
cld
and
inc
add
xchg
push
cwtl
decl
andl
add
cwtl
jle
std
and
fprem1
adcb
dec
pop
sbb
inc
push
jmp
subb
add
das
sub
gs
or
push
push
jmp
lock
bound
cmp
jmp
es
jmp
add
jmp
cmp
push
push
popa
sbb
out
cli
add
sbb
mov
pop
mov
push
cmp
testl
pop
mov
es
fadds
jmp
popa
push
inc
jmp
imul
jmp
popa
or
fdivrl
cld
mov
cmp
nop
out
fbstp
cmp
cs
popa
fld
adc
cld
pop
popa
add
jmp
push
and
lcall
sbb
pop
leave
cmp
inc
sbb
in
bound
inc
sbb
stos
pop
fld
cmp
inc
dec
bound
mov
mov
jge
mov
adc
lret
and
int
mov
pop
jmp
or
xlat
jge
jae
add
add
add
jg
pop
mov
lret
int3
push
sub
enter
xlat
das
das
mov
das
cmp
mov
xchg
jl
ja
dec
jl
mov
or
fmuls
mov
add
inc
jae,pn
mov
bound
bound
insl
jp
cmpsl
and
movsl
imul
out
fiaddl
pop
jmp
add
add
mov
adc
arpl
and
jg
mov
sbb
mov
dec
or
jb
jo
jp
mov
inc
test
lret
pop
and
es
bound
inc
or
inc
mov
fbld
add
inc
add
cmc
inc
mov
bound
or
xorl
popa
fimuls
lds
es
les
mov
aad
mov
out
mov
aaa
mov
pop
fsubr
add
test
or
dec
jmp
ljmp
aad
mov
adc
mov
pop
sub
inc
add
cmp
add
sbb
adc
fsubrs
adc
int3
std
jecxz
add
add
push
or
std
dec
jmp
loopne
bound
stos
adc
mov
cmpsb
push
push
lds
or
mov
push
int
push
cmp
dec
push
dec
stc
cwtl
mov
call
dec
mov
movsl
aad
sahf
xchg
add
mov
test
and
xchg
push
mov
sub
add
push
dec
lds
push
push
int
push
inc
jne
and
andl
mov
lods
lcall
jmp
sti
push
ds
push
ds
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
add
adc
add
add
add
add
add
and
idiv
adc
add
and
add
and
idiv
and
idiv
xchg
push
clc
incl
cmc
jmp
add
add
add
add
stc
add
stc
add
sub
sbb
dec
adc
and
subl
loop
push
xor
jmp
outsb
mov
or
add
add
add
cmp
shl
or
filds
fstp
test
mov
xlat
sub
xchg
sub
inc
add
bound
dec
xchg
aam
xchg
jl
dec
xchg
mov
mov
add
mov
out
and
xor
mov
fldl2t
add
es
cmp
jge
cmc
fnstsw
add
xor
xchg
add
repz
mov
arpl
and
push
data16
lahf
insb
imul
insb
mov
in
pop
push
xchg
mov
inc
in
or
adc
add
lods
adc
jae
mov
loopne
and
inc
add
int3
or
roll
add
add
push
mov
popa
fldcw
cs
push
cmp
push
cld
or
add
add
xor
pusha
imul
or
andb
stc
adcl
popa
flds
out
mov
loope
sub
push
fsubrs
cmp
jmp
fidivrs
jmp
je
mov
jmp
das
mov
mov
pop
nop
imul
data16
mov
loopne
in
adc
dec
and
cmp
jge
popa
test
jb
or
pop
stos
sarb
adc
das
je
lock
loop
add
mov
in
jle
xor
or
add
add
sti
or
into
jae
fidivs
dec
jae
mov
mov
dec
std
cld
out
or
rcrl
lahf
in
dec
lods
jle
bound
or
jno
stos
stos
call
jecxz
add
mov
mov
outsb
rorl
pop
shll
adc
iret
lret
cmp
bound
add
ret
dec
scas
bound
lods
push
call
add
adc
orb
cmpsl
or
add
dec
fistps
in
dec
sbb
add
cld
movsl
lcall
popf
ljmp
loopne
add
bound
jb
xchg
sbb
push
out
bound
add
scas
jmp
and
jno
adc
xchg
add
rcll
dec
xor
cs
inc
push
in
int
in
imul
jb
and
ljmp
pop
push
add
push
in
pop
xor
les
out
fnstenv
add
movsl
xchg
or
sbb
inc
shll
in
das
xchg
cs
xchg
les
dec
add
add
flds
jmp
stos
inc
shll
add
sbb
add
pop
jmp
jb
pop
cmp
or
stc
cmp
arpl
add
cmp
je
testb
or
sbb
enter
test
dec
sub
out
xchg
sub
mov
jmp
sbb
outsb
lds
sbb
pusha
dec
sub
sbb
cmp
mov
sub
xor
add
cmp
daa
cmp
sbb
jp
movsb
mov
jmp
fdiv
sub
inc
and
xor
repz
mov
mov
and
loopne
adc
jl
add
or
ret
xor
cli
or
xor
pcmpeqb
or
bnd
mov
testb
add
add
cmp
repnz
xor
inc
in
clc
fwait
pop
movups
jns
bound
movsb
fcmovnu
orb
push
imulb
out
andl
or
mov
inc
add
bound
scas
and
imul
jmp
lcall
bound
hlt
int3
and
xchg
push
xchg
inc
and
add
add
into
add
pusha
popa
hlt
int3
mov
inc
hlt
imul
push
add
dec
sbb
jmp
sbb
add
hlt
js
fdivs
not
aas
out
sub
push
lock
cld
lret
adc
add
push
pop
int
cld
cs
popf
sbb
xor
jmp
or
mov
xchg
std
lds
out
movsl
out
sub
jg
jmp
jg
out
fiaddl
ljmp
push
dec
sbb
jnp
fsubs
mov
jge
mov
cmc
enter
fstps
fldcw
mov
add
ja
sbb
int
inc
jb
pop
ljmp
inc
jg
pop
push
aas
jmp
cltd
add
repz
int
sbb
inc
imulb
mov
push
push
sarl
data16
push
roll
cmp
int
mov
inc
pop
cld
popa
pop
push
mul
dec
pop
notl
popa
flds
push
roll
lcall
jge
push
cmc
add
je
cld
jo
jmp
xchg
js
mull
pop
cmp
cmpsl
xor
fsts
jb
cmp
add
add
lcall
mov
jne
addr16
divl
mov
mov
and
repz
lock
mov
mov
jmp
mov
mov
and
xlat
lock
pop
mov
sub
cmp
mov
cmp
cmp
mov
mov
in
stos
aad
sub
add
add
cs
jbe
sbb
lock
jne
xchg
xchg
jne
ds
inc
dec
sbb
test
sub
mov
stos
fsubs
bound
add
sbb
add
or
sti
sub
add
or
mov
iret
mov
xlat
mov
add
cld
test
mov
je
push
leave
adc
bound
cld
std
push
xor
fucompp
in
loopne
sbb
mov
rorb
shl
paddw
call
popf
lds
adc
shlb
loopne
movl
in
xchg
call
repz
fldl2t
add
dec
mov
mov
into
sbb
mov
add
mov
adc
add
inc
in
dec
xchg
rcl
dec
mov
bnd
aad
std
inc
dec
out
dec
jbe
bnd
aad
enter
inc
push
int3
add
sbb
add
fnstenv
push
xor
in
inc
out
mov
sbb
call
dec
mov
push
das
popf
jge
mov
adc
lods
dec
adc
sbb
xor
stc
jo
pop
xchg
es
shrl
into
or
and
cmp
jo
jb
lods
mov
cmp
jo
orb
cwtl
ret
add
mov
sbb
or
fwait
jmp
mov
aas
xchg
inc
lea
inc
test
add
insl
icebp
pop
rorb
btc
add
jae
jae
out
add
jg
out
mov
cld
adc
add
sbb
inc
lahf
ret
ds
add
jge
imul
ret
add
adc
push
cmp
add
cmp
mov
rcl
add
xor
pushf
divl
sub
mov
sub
pop
pop
mov
sti
fdivrs
jbe
and
bound
fs
add
add
push
add
jns
movsb
adc
scas
sub
xor
jns
push
push
jns
lods
es
scas
and
adc
enter
sbb
mov
daa
lods
fs
jne
add
pop
lds
bound
add
repnz
pop
mov
cld
cltd
sub
xchg
xchg
or
out
jl
sub
dec
dec
cmpb
xor
add
clc
inc
push
add
sbb
dec
pop
fsts
mov
pop
dec
adc
inc
aaa
and
jmp
and
add
mov
adc
dec
sbb
xchg
mov
cltd
jmp
repz
sbb
jne
jmp
fnstenv
mov
cld
add
cmp
xor
add
fsts
out
int
mov
out
add
pushf
and
movsb
cmc
js
push
sub
inc
jo
adc
push
out
add
mov
imul
popa
or
jo
xor
pusha
add
mov
push
inc
mov
inc
add
decb
fldpi
jecxz
inc
add
flds
push
cmp
jmp
lret
sub
out
add
add
xchg
add
mov
push
inc
pop
aad
fdivl
hlt
ret
lret
pop
xchg
addr16
enter
or
sub
add
out
adc
rclb
sbb
pop
push
push
inc
or
mov
pop
push
inc
add
dec
dec
fsub
dec
add
in
inc
adc
and
pusha
and
mov
inc
jl
mov
aad
loop
add
add
repz
dec
dec
call
mov
idiv
mov
cmc
imull
lret
pop
inc
mov
mov
sbb
clc
mov
cwtl
cld
jl
mov
mov
dec
dec
mov
add
add
add
call
movb
repnz
fmull
rcrl
jle
repnz
pop
clc
in
inc
add
push
mov
pop
aas
jg
bound
test
jb
mov
stos
mov
push
imul
and
popf
stos
lret
inc
aad
xchg
jle
jb
das
jg
jl
and
cmp
jmp
mov
mov
mov
inc
add
adc
sbb
mov
dec
ficomps
add
xchg
mov
lds
pop
push
divl
mov
stos
add
mov
sbb
sbb
jmp
add
popa
cmp
in
mov
or
xor
or
xor
xchg
pop
pop
xchg
mov
aaa
jmp
mov
int3
jb
ljmp
and
pushf
js
out
jb
cmp
fsubl
adc
fistl
cmp
add
ficomps
sbb
fsubrl
xor
lret
pop
dec
sti
fimuls
inc
jno
out
lods
icebp
pop
add
ficomps
test
ljmp
std
data16
and
lea
mov
rcrl
cmp
jmp
flds
inc
jmp
add
add
and
cmp
inc
mov
pop
or
adc
out
sub
mov
cmpsl
push
xchg
mov
in
and
movsb
push
pop
dec
fisttpll
pop
dec
add
jl
imul
mov
lret
int3
push
mov
int3
inc
mov
int3
into
jmp
out
jge
sbb
je
arpl
andb
xorb
push
jno
push
push
jno
push
mov
movl
fsts
mov
mov
loopne
enter
mov
inc
mov
push
mov
leave
push
mov
inc
fistpl
adc
lret
int3
movsl
lret
int3
xchg
movsb
lret
int3
xchg
jmp
jge
jge
adc
test
push
mov
pop
mov
or
jne
test
add
add
decb
jge
fistpl
inc
sub
inc
test
cmc
mov
jecxz
sub
int
bound
cld
sub
test
sbb
lods
imul
jmp
xor
xchg
push
mov
fisttpl
mov
add
outsl
mull
adc
xor
push
cmpsb
fsts
pop
dec
xor
popl
add
add
sbb
sbb
in
xor
je
sbb
sub
sbb
or
popa
bound
xor
mov
ss
sbb
xor
add
pop
aad
fidivl
jb
leave
shr
test
pusha
xchg
xor
gs
insl
fldenv
test
fldl2t
add
pusha
jge
jl
xchg
and
out
add
add
lret
sub
and
mov
popf
push
and
popa
fldl2t
arpl
add
mov
sub
pop
mull
pop
adc
mov
jge
hlt
inc
pop
mov
push
les
movsl
push
les
inc
xchg
icebp
adc
and
bound
movsb
mov
mov
ljmp
add
ficompl
mov
ljmp
bound
xor
fwait
pop
ret
or
popf
jns
add
hlt
je
adc
jbe
bound
shrb
mov
dec
sbb
jo
enter
jge
or
add
pop
pop
inc
xchg
jb
andb
mov
aam
movsb
int
pop
mov
add
add
mov
jg
lret
int3
setp
int3
lcall
push
mov
pop
jmp
lret
push
xor
push
inc
push
or
mov
sbb
inc
bound
decl
inc
movsl
decl
inc
movsl
jmp
sub
pop
rcrb
push
das
mov
mov
out
xchg
add
adc
sbb
xchg
adc
incl
add
add
inc
movsl
jnp
inc
ljmp
add
or
aaa
adc
jl,pt
inc
repz
cmp
into
inc
add
bound
adc
leave
inc
add
bound
sub
test
xchg
icebp
mov
lds
mov
mov
test
ja
push
movsl
hlt
inc
dec
call
add
mov
sbb
out
and
sub
cmp
pop
inc
stos
frstor
insl
fs
inc
test
or
jb
insl
mov
test
frstor
fnsave
push
fs
lea
inc
mov
jne
das
mov
test
test
fnsave
pop
cmpsb
mov
xor
repnz
stos
sbb
aam
cmp
jle
push
cmp
or
sub
cmp
roll
or
out
popa
repnz
mov
mov
jne
jge
lret
ss
fcoml
cmp
repz
mov
cmp
aaa
cmp
shl
mov
push
lret
ret
mov
loope
cmc
pop
popa
dec
loop
imul
mov
push
add
arpl
dec
pop
lds
adc
paddd
jmp
in
pop
xabort
mov
cmp
dec
and
js
add
push
pop
cmp
pop
push
mov
xor
or
push
adc
cltd
or
insb
dec
sbb
cmp
add
pop
mov
sub
jg
push
push
push
add
int3
jl
out
push
clc
inc
mov
sbb
add
sub
mov
mov
push
push
xchg
mov
mov
aad
cmp
por
sbb
or
clc
sub
adc
cld
adc
push
mov
push
clc
inc
addb
add
add
sti
fldcw
xchg
in
test
shrb
fidivl
or
cmp
subb
clc
fnstenv
or
inc
lret
cmp
xor
add
mov
cmp
psubusw
sub
fisubrl
leave
out
jge
fldl2t
add
shlb
rcrl
sub
and
out
pop
dec
cmpsb
insl
adc
std
fsubr
add
xchg
in
cmp
push
push
fcompl
sub
loope
mov
fisubs
lock
movsl
cli
or
enter
pop
hlt
adc
repz
jne
add
cmpsl
or
adc
in
bound
ret
push
add
add
outsb
in
push
ret
sar
loope
xor
lcall
out
jge
cmp
mov
cmp
mov
fists
xor
roll
mov
ljmp
out
popa
lahf
mov
popa
push
lahf
inc
jo
ret
sarl
xor
dec
ret
call
add
cmp
mov
add
add
push
push
clc
imul
xor
jl
jge
mov
pushl
jmp
xor
push
jb
int3
push
adc
push
fyl2xp1
jne
into
aam
fadd
pop
pop
enter
sub
mov
pop
mov
inc
andnps
inc
push
xor
testl
add
fisubl
inc
inc
cmp
ret
mov
xor
arpl
add
add
aad
inc
pop
push
jl
rep
dec
and
adc
push
jl
rcrl
xor
and
or
jno
jmp
psubsw
je
pop
mov
inc
arpl
add
hlt
out
xor
add
inc
add
bound
jmp
push
arpl
cmp
add
jle
jp
mov
and
add
add
xor
add
into
test
sub
or
add
addr16
push
xchg
imul
cmc
sbb
sub
adc
in
mov
popf
mov
repz
xor
fldl2t
inc
adc
pop
push
add
cmp
xchg
dec
sub
faddl
pop
movsl
add
sbb
add
add
add
ss
xor
inc
inc
add
xor
push
and
aas
push
js
or
call
add
adc
ss
inc
sub
nop
roll
jl
add
fisubs
inc
jmp
popa
fsts
movb
loope
xchg
idivl
lret
call
push
aam
sub
daa
lret
mov
add
add
les
push
mov
jb
fists
lret
dec
neg
xor
lret
scas
movsb
and
cmpsb
pushf
sub
jmp
outsb
movsb
clc
xchg
fisttpll
mov
bound
mov
cmc
add
push
mov
sbb
out
add
fisubs
jle
idiv
sti
cmpsl
dec
call
and
jle
push
movsl
inc
sbb
enter
rorb
add
dec
mov
mov
pop
mov
jl
inc
adc
test
inc
adc
aam
roll
add
or
lock
dec
out
jge
fbstp
aad
cld
mov
es
and
push
or
add
add
ss
lret
outsb
stos
leave
repz
stos
test
dec
inc
rcrb
sbb
jmp
push
xchg
push
dec
aam
lahf
adc
pop
cmp
popl
fmuls
ret
pop
mov
rorb
xor
bound
clc
out
jne
clc
jmp
xor
push
ftst
hlt
dec
or
dec
push
stc
push
movsb
jp
jbe
shl
cli
add
cmp
ljmp
aad
mov
push
adc
decl
mov
out
sbb
shll
add
pop
pop
push
fisubl
mov
aam
mov
and
jns
rcrl
mov
andl
stos
xor
pop
fnstcw
add
adc
cmpsb
jns
std
cmc
clc
mov
in
out
add
jp
std
int
mov
add
lret
int
fs
push
pop
dec
add
js
fsubr
cwtl
cwtl
sbb
cwtl
mov
or
mov
sbb
adc
out
sbb
mov
pop
adc
add
pop
or
lods
popf
mov
rcl
shlb
rcl
jo
or
sbb
dec
mov
sbb
outsb
cmp
cwtl
rcl
cmp
rcr
cmp
pop
not
add
pushf
dec
jne
into
int
repz
int
push
jae
ret
jge
mulb
repz
mov
jg
mov
sub
push
jg
insl
inc
add
aaa
push
mov
jg
scas
insl
inc
add
mov
mull
and
pop
xlat
bound
js
add
and
sbb
gs
ljmp
push
aaa
fstl
mov
push
inc
bound
jbe
data16
movsb
push
sahf
xor
pop
mov
add
mov
clc
sbb
xor
jmp
pop
push
mov
add
and
mov
sahf
xor
add
inc
add
xor
add
jae
inc
bound
or
fidivl
pushl
fwait
xor
cld
clc
ja
in
aas
bound
or
addb
incl
add
add
fldcw
add
adc
aaa
jg
cmc
in
adc
cmc
fnstcw
cmc
fst
das
sub
or
sub
xor
cmc
stc
jle
push
daa
adc
xor
test
gs
mov
pop
push
popf
fistps
add
or
xor
aam
nop
shrl
cli
jge
sub
jle
add
add
cmc
stc
adc
fdivrl
loopne
test
xchg
push
and
mov
jbe
dec
add
lods
cld
or
mov
add
mov
fsubrs
and
mov
or
jmp
lock
mov
mov
jb
sti
add
xlat
mov
les
add
mov
faddl
push
xchg
pop
les
mov
sub
imul
mov
add
add
out
shrb
inc
add
mov
arpl
add
xchg
cld
add
bound
xor
mov
or
lret
int3
pop
out
int3
mul
lret
int3
rcl
mov
bound
add
add
add
mov
pop
push
paddsb
xor
mov
xor
sub
aas
or
aam
or
incl
xchg
or
je
mov
shll
add
pop
ret
loope
pop
cmp
aad
add
mov
jmp
xor
negl
lods
cmp
aaa
mov
lods
push
jp
push
pop
jmp
fildl
cmpsl
sub
inc
xor
inc
ss
push
sub
mov
call
xor
addr16
xchg
push
in
add
push
mov
mov
test
adc
jb
mov
sbb
push
fldl2t
mov
aaa
jb
out
add
add
add
scas
and
or
inc
flds
bound
jmp
mov
or
shlb
scas
adcl
mov
xchg
pop
shlb
mov
add
xchg
inc
mov
sbb
movsb
adc
fldcw
jp
sub
push
andb
sub
sub
xchg
bound
insl
aad
cmpsl
adc
aad
notl
rcl
mov
cwtl
add
repz
and
sbb
jb
pop
nop
adc
aam
jmp
popa
fsts
and
adc
notl
fs
adc
orl
push
aad
mov
inc
pop
push
cmp
int
sbb
jmp
push
mov
add
or
ret
add
loope
int3
fsubrs
inc
cmpsl
das
cld
mov
sub
addr16
jl
adc
mov
jl
mov
je
adc
imul
rcrb
or
rol
or
fcoms
jb
mov
jl
mov
and
rcr
inc
push
sub
out
call
and
xor
gs
pusha
sbb
or
xlat
dec
xor
rcrl
pop
add
loop
int3
loop
int3
bound
dec
xchg
imul
js
jg
adc
lods
cmp
cmpsl
mov
mov
mov
add
xor
jmp
dec
lock
ret
sahf
cmp
les
xor
add
add
dec
xor
add
add
cmp
rorb
cmp
xor
add
add
sbb
aad
inc
bound
add
bound
incb
mov
add
fstps
add
sbb
sbb
fsts
sbb
fldl2t
add
incb
mov
fnstenv
and
jmp
add
fnstcw
add
mov
sbb
sbb
fldl2t
add
sahf
add
sub
mov
fldl2t
add
jle
cmp
out
xchg
mov
fldl2t
add
pop
add
sbb
aad
fstps
aad
fldl2t
add
ds
sbb
enter
in
pushf
add
popa
flds
es
adc
sbb
pushf
add
sbbl
pusha
adc
fstl
pushf
add
push
pushf
add
popa
flds
out
adc
adc
pushf
add
sub
arpl
mull
push
pushf
add
popa
flds
cmpsb
arpl
testl
pushf
add
popa
flds
xchg
imull
pushf
add
popa
flds
data16
add
arpl
divl
pushf
add
pushf
add
popa
flds
add
inc
add
mov
add
fildl
add
inc
add
inc
add
fildl
add
fildl
add
pop
fsubl
inc
add
pop
add
pusha
adc
dec
adc
pop
adc
fistl
fisttpl
dec
add
add
inc
adc
fldt
cmp
cmp
dec
dec
cmp
insb
adc
fldt
or
cmp
or
and
bound
add
add
sbb
add
add
sbb
add
push
push
add
dec
jae
add
add
add
add
jb
add
push
add
in
push
add
cld
push
add
xor
add
sub
add
add
loopne
add
add
add
jb
add
push
add
int3
push
add
fcoml
add
add
sahf
jae
add
jb
add
jb
add
add
lods
push
add
mov
push
add
jle
fldl2t
add
jmp
jmp
add
call
jmp
add
jmp
jmp
add
call
add
dec
jmp
jmp
add
jmp
jmp
add
call
jmp
add
jmp
add
jmp
add
jmp
add
ljmp
imul
jmp
add
jmp
adc
popa
cmp
adc
popa
leave
adc
popa
mov
add
popa
rcll
popa
cmc
adc
popa
mov
adc
popa
icebp
adc
popa
in
jmp
popa
fstl
jmp
popa
adc
adc
popa
or
pop
jmp
popa
or
jmp
popa
fistl
jmp
popa
cmp
jmp
popa
dec
psubsw
push
jmp
popa
jne
jmp
dec
fcomps
adc
fadd
fsubrs
or
movsb
psubq
movsb
psubq
mov
or
pushf
ud2
fsubrs
psubq
mov
bswap
xlat
cwtl
btc
test
mov
xlat
jl
lret
xlat
mov
mov
xlat
orb
xlat
insb
jnp
xlat
fisttpl
jnp
adc
xlat
mov
add
push
xlat
cmp
dec
xlat
dec
cmovnp
xor
cmp
inc
punpckldq
add
add
sub
add
xor
add
add
inc
jae
add
push
add
and
add
sub
add
add
adc
add
sbb
add
add
add
add
ret
push
add
cld
pop
add
add
add
insb
add
clc
add
in
pop
add
cmp
add
push
push
add
xor
add
dec
push
add
loopne
add
aam
add
fsubs
add
jecxz
add
jecxz
add
jmp
add
loop
add
jecxz
add
loop
add
loop
add
loop
add
loop
add
loop
add
add
add
jecxz
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loope
add
jecxz
add
loope
jmp
popa
sbb
jmp
popa
jne
jmp
popa
pusha
pop
jmp
popa
cltd
push
jmp
popa
addl
jmp
popa
in
jmp
popa
fldl
jmp
popa
lock
jmp
popa
fldl
jmp
popa
inc
psubsw
sbb
popa
cmp
jmp
popa
xchg
sbb
popa
daa
sbb
popa
lret
popa
std
add
popa
or
add
call
or
dec
fmul
or
cmp
fmuls
dec
fdivr
or
cmp
enter
rorb
fdivrl
or
or
pushf
or
sti
push
sti
or
mov
fistl
or
mov
fildl
or
jnp
mov
jnp
loop
bound
add
push
add
pop
pop
add
dec
push
add
mov
add
push
add
pop
pop
add
dec
push
add
push
outsl
add
inc
add
sahf
pop
add
cmp
add
xchg
insl
add
and
add
cmp
add
outsl
add
adc
add
sbb
add
add
adc
add
add
or
add
push
add
jge
add
add
add
data16
clc
pop
add
in
push
add
lock
add
in
add
call
cmpsb
fucomp
add
jmp
add
jmp
add
jmp
add
fucomp
add
fsubr
add
fsubr
add
fsubr
add
fsubr
add
fsubr
add
fsubr
add
add
add
fsubr
add
fsubr
add
fucomp
add
fsubr
add
jmp
add
fsubrp
add
fsubrp
add
push
jmp
popa
sub
jmp
popa
movsl
add
popa
mov
jmp
popa
test
add
popa
mov
add
popa
cltd
add
popa
lds
popa
roll
popa
mov
add
popa
mov
jmp
popa
in
add
popa
mov
add
popa
icebp
add
popa
fldl
popa
jmp
add
popa
loope
jmp
popa
flds
popa
add
or
mov
fdiv
or
fsubr
or
aam
mov
loopne
mov
int3
or
fmuls
jnp
les
dec
fcom
or
mov
or
fdivs
dec
fsubrs
cmp
movsb
or
fmul
or
fdivs
or
xlat
xchg
or
fsubs
adc
xlat
add
adc
xlat
nop
or
xlat
jl
mov
xlat
test
lret
xlat
orb
add
je
add
ficoms
add
outsl
add
jo
add
fs
add
push
imul
add
add
jge
add
andl
add
imul
add
add
jl
add
subb
je
add
js
add
insb
imul
add
add
sbb
add
add
adc
add
add
add
add
or
jmp
add
jmp
add
fucomip
add
fucomip
add
jmp
add
jmp
add
jmp
add
fucomip
add
add
jmp
add
fucomip
add
fucomip
add
fsubrp
add
jmp
add
fsubrp
add
jmp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fiadds
jmp
popa
popa
or
popa
lea
jmp
popa
push
or
popa
cmc
add
jmp
popa
jne
jmp
popa
lods
or
popa
jns
jmp
popa
mov
jmp
popa
test
or
popa
xchg
or
popa
and
jmp
popa
popf
or
popa
xchg
or
popa
lds
jmp
popa
int
jmp
popa
mov
jmp
popa
in
or
popa
loope
add
faddl
lret
fcoml
or
fsubrl
or
faddl
or
fdivr
or
fdiv
or
fmull
jnp
call
add
fsub
or
int3
or
fmuls
dec
fadd
or
rorb
cmp
mov
or
mov
dec
fadd
or
fsubrl
or
movsb
or
fdivl
or
fldt
or
fsubr
or
add
repnz
repnz
repnz
add
imul
sbbb
je
repnz
repnz
add
repnz
add
repnz
imul
add
add
lock
add
lock
add
lock
lock
lock
lock
imul
sub
lock
pop
lock
rcl
jmp
add
shr
add
shr
add
add
shr
add
jmp
add
add
jmp
add
shr
add
jmp
add
shr
add
shr
add
jmp
add
jmp
add
shr
add
shr
add
jmp
add
add
add
shr
add
shr
add
shr
add
jmp
popa
xlat
or
popa
jmp
jmp
popa
xor
jmp
popa
cmp
jmp
popa
fs
popa
testl
jmp
popa
push
or
popa
push
or
popa
push
or
popa
test
jmp
popa
mov
jmp
popa
je
jmp
popa
inc
or
popa
pop
or
popa
dec
or
popa
aas
or
popa
xor
jmp
popa
cmp
jmp
popa
arpl
add
fldenv
or
fcomps
or
fsts
or
fmuls
or
fadds
or
fsubs
lret
fdivs
mov
fsubrs
mov
push
or
add
add
fmuls
jnp
pop
or
fcoms
jnp
or
dec
or
or
inc
or
fsubrs
or
fdivrs
or
or
xor
cmp
push
or
add
push
repnz
pop
repnz
pop
repnz
push
repnz
pop
repnz
pop
repnz
push
repnz
pop
repnz
pop
repnz
imul
out
imul
repnz
repnz
pop
repnz
imul
fisubrs
add
pop
repnz
pop
repnz
imul
into
imul
rcrb
add
pop
repnz
imul
mov
pop
lock
imul
scas
imul
add
shr
add
shr
add
shr
add
shr
add
shr
add
add
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
add
shr
add
add
shr
add
add
shr
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
popa
mov
or
popa
or
popa
mov
or
popa
jecxz
jmp
popa
jmp
jmp
popa
rorl
jmp
popa
fisttpl
jmp
popa
add
jmp
popa
or
jmp
popa
repz
jmp
popa
sti
pop
jmp
popa
and
jmp
popa
sub
jmp
popa
adc
jmp
popa
sbb
jmp
popa
aas
or
cmp
ret
or
cmpsb
or
fnsave
or
or
fsubl
or
fstpl
or
fcoml
or
fmull
or
fsubrl
lret
fdivrl
lret
fsubl
mov
fcompl
mov
push
mov
push
or
bound
jnp
dec
or
faddl
jnp
push
or
or
add
repnz
pop
repnz
repnz
push
add
push
add
pop
repnz
pop
repnz
push
add
push
add
pop
repnz
pop
repnz
push
add
push
add
pop
repnz
pop
repnz
repnz
pop
repnz
repnz
pop
repnz
gs
pop
repnz
gs
pop
repnz
gs
pop
repnz
gs
pop
repnz
gs
pop
repnz
gs
add
xlat
jmp
add
jmp
add
jmp
add
jmp
add
add
add
aam
add
aam
add
aam
add
aam
add
jmp
add
add
jmp
add
aam
add
jmp
add
jmp
add
jmp
jmp
popa
call
popa
sar
call
popa
sti
call
popa
fwait
call
popa
ret
call
popa
lret
call
popa
mov
call
popa
mov
call
popa
iret
call
popa
xlat
call
popa
std
call
popa
pop
call
popa
out
std
call
popa
idiv
call
popa
pop
jnp
loop
mov
into
push
mov
fiaddl
jnp
movb
push
dec
add
flds
push
dec
fldcw
push
cmp
cmpsb
push
cmp
mov
or
sahf
push
or
stos
push
sti
fcoms
push
or
mov
or
lcall
fcoms
push
lret
fmuls
push
mov
fsubrs
lret
fdivrs
mov
fdivs
mov
pop
push
add
repnz
repnz
repnz
repnz
repnz
repnz
repnz
pop
repnz
popa
repnz
pop
repnz
popa
repnz
pop
repnz
repnz
pop
repnz
repnz
pop
repnz
repnz
pop
repnz
repnz
pop
repnz
repnz
pop
repnz
repnz
pop
repnz
fs
pop
repnz
fs
pop
repnz
addr16
pop
fldl2t
add
aad
add
jmp
add
aad
add
aad
add
aad
add
jmp
add
aad
add
add
add
aam
add
aam
add
aam
add
aam
add
jmp
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
add
aam
add
add
popa
jg
call
popa
xchg
call
popa
outsl
std
call
popa
ja
call
popa
lahf
std
call
popa
cmpsl
std
call
popa
std
call
popa
xchg
std
call
popa
mov
std
call
popa
mov
call
popa
call
popa
jecxz
call
popa
lret
std
call
popa
sar
call
popa
sti
sti
dec
aad
add
mov
add
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
fst
add
fnstsw
add
fnsave
add
add
frstor
add
fstpl
add
fcoml
add
fisttpll
add
faddl
add
fcoml
add
add
mov
add
add
sbbb
jbe
add
jp
add
outsb
data16
jb
add
data16
push
add
pop
data16
bound
add
add
pop
pop
add
dec
data16
push
pop
add
inc
data16
dec
pop
add
data16
inc
pop
add
data16
cmp
add
data16
xor
add
add
add
data16
sub
add
data16
and
add
data16
sbb
add
data16
add
jmp
add
jmp
add
jmp
add
fucomi
add
fucomi
add
jmp
add
fucomi
add
fucomi
add
fucomi
add
add
add
fsubr
add
jmp
add
jmp
add
jmp
add
jmp
add
fldl2t
add
fucompp
add
flds
jmp
popa
add
jmp
popa
clc
call
popa
adc
jmp
popa
or
jmp
popa
and
jmp
popa
sbb
jmp
popa
sub
jmp
popa
inc
add
popa
sub
jmp
popa
inc
add
popa
push
add
popa
negl
cmp
jmp
data16
scas
fwait
notl
jmp
jno
insl
out
mov
sub
add
mov
jge
jge
add
dec
adc
xor
pop
adc
add
fs
ret
push
xor
add
and
adc
fldl
add
popf
add
jnp
shl
pop
fs
jne
pop
xor
add
faddl
push
cmp
or
cmp
add
mov
pop
mov
in
inc
or
cmp
vcmpss
pusha
incb
add
add
sbb
mov
add
adc
adc
xorl
inc
stc
sti
mov
incl
loope
std
incb
call
jmp
pop
cmpb
pop
ret
filds
ret
loope
add
iret
add
aam
and
ret
dec
movb
bound
xorl
cmp
notl
sbb
shl
fiaddl
fistl
shr
lret
jne
and
push
sbb
ljmp
fisubrs
and
or
push
pushf
and
fsubrs
in
loop
or
shl
mov
inc
pusha
cltd
jmp
and
pushf
or
jmp
mov
pushf
jmp
fldl2t
shrb
jne
mov
mov
and
pop
jne
outsb
test
cmpb
cmp
fs
add
loop
cld
adc
andl
mulb
test
push
push
fadds
jmp
mov
inc
or
add
loop
cld
adc
arpl
idiv
mov
lret
call
push
mov
stos
sub
flds
add
pop
xor
inc
push
mov
xor
xlat
call
ret
jecxz
out
jmp
sbb
sbb
out
adc
add
add
add
push
ret
call
mov
and
sbb
add
dec
pop
xor
jge
in
add
dec
pop
insl
push
stos
mov
cmpb
and
mov
add
mul
popf
adc
clc
add
add
add
loop
cld
add
xor
ret
loop
std
add
add
add
fcmovb
loope
decb
ja
jmp
hlt
pop
fcmovb
cli
sahf
add
bound
jne
ret
mov
ret
jle
pusha
loop
std
loopne
push
jmp
ret
mov
imul
cmc
xchg
mov
inc
and
xor
push
cmc
jne
xchg
loope
push
cld
and
add
mov
jmp
add
push
pusha
mov
or
and
daa
sbb
adcl
lods
test
clc
cmpsb
xlat
or
fldl2t
add
pop
add
mov
mov
jmp
inc
push
adc
ljmp
xlat
inc
jnp
out
cmp
add
jno
out
and
inc
not
adc
jne
or
fnstenv
movsb
and
sbb
push
pusha
mov
imul
out
sub
in
rcl
in
fisubrs
lds
out
jmp
out
push
filds
xor
bound
push
mov
push
call
or
imulb
xchg
mov
ret
push
fstl
jle
lcall
push
filds
mov
bound
push
mov
push
call
lcall
add
and
arpl
cwtl
cld
cmp
cmpl
gs
cwtl
sbb
xchg
ret
sbbl
je
add
mov
repz
xor
and
add
add
add
out
decl
push
add
jmp
sbb
out
ret
push
cwtl
sbb
push
mov
ret
call
cmp
fdivrp
dec
push
out
ret
and
xor
andl
add
in
pop
in
int
xlat
or
jbe
fisubl
mov
jg
and
jmp
sub
call
loope
out
xchg
or
jl
add
add
pop
mov
mov
loope
in
push
or
jl
add
add
add
addl
pushf
stos
into
ret
loope
in
pop
adc
push
jl
add
jge
jne
sub
pop
je
popa
xchg
jmp
jmp
aad
pop
pop
out
cmp
subb
and
sub
ret
fmull
hlt
in
aad
in
test
dec
pop
adc
popa
retw
jmp
jmp
aad
pop
cld
in
fsubl
dec
fucomip
dec
push
in
and
xorb
jmp
aad
jmp
in
movsb
in
cmp
stc
bound
and
mov
jecxz
fistpl
mov
faddl
jecxz
jb
iret
add
push
call
shll
lock
loop
push
jmp
xor
imulb
pushf
jmp
jno
jecxz
stos
loop
push
ljmp
imulb
sub
fimuls
loop
stos
loop
push
in
jmp
jge
loop
sub
fs
out
pop
jmp
popa
mov
testb
popa
xor
cmpl
cli
incl
push
mov
out
cmp
push
dec
fwait
mul
jmp
out
js
insl
push
cmp
out
dec
mov
add
push
out
ret
mov
call
ret
js
push
add
in
sub
add
add
push
std
in
ret
adc
repz
or
ret
add
hlt
je
or
roll
outsb
mov
hlt
xchg
stos
mov
mull
cmp
inc
jp
jle
push
bound
call
and
arpl
call
pop
call
mull
je
push
pusha
test
out
or
mul
popf
testb
aam
push
xor
ret
loope
cli
add
fidivl
loope
cli
sti
outsb
loope
xchg
fistpl
adcl
imul
hlt
lds
cmpl
testl
mov
dec
loope
out
or
lret
fwait
call
ljmp
call
add
lock
shlb
sahf
lret
mov
add
push
pop
insb
stc
inc
insl
lods
in
shll
pop
push
cli
bound
fistpl
pop
cmp
arpl
fstpt
gs
gs
and
fsts
vpcmpgtw
add
push
pusha
leave
in
repnz
jo
out
sub
fisubrl
lret
xchg
sbb
in
out
imulb
out
push
in
sub
fsubrp
popf
out
imulb
fildll
in
out
sbb
out
push
out
or
call
push
roll
jne
icebp
aam
xor
ret
xlat
lcall
pop
jne
xor
rcrl
or
lods
fucomp
test
sub
scas
adc
mov
fidivrl
ljmp
add
push
repnz
jecxz
je
add
jge
test
fiaddl
add
pop
sti
decl
gs
dec
pop
insl
or
jne
mov
add
xlat
adc
insl
push
jns
add
dec
xchg
or
cmp
push
cmp
call
ret
enter
xchg
in
fiadds
push
out
addl
add
scas
jecxz
jne
add
ret
orl
je
add
sti
mov
out
repz
loope
and
push
movl
lds
cmpl
std
insb
push
mov
clc
lods
xchg
sbb
mov
jne
incl
jge
iret
idivl
out
mov
dec
sbb
and
dec
adc
push
push
bound
out
in
jge
add
or
ret
loope
out
add
and
addl
mov
cmc
fstps
add
andl
xor
test
pop
push
icebp
imul
in
push
pop
fcom
incl
sbb
mov
xor
add
mov
sub
das
mov
jmp
and
gs
mov
in
shr
lret
shrl
xlat
jmp
mov
popf
jmp
fldl2t
rclb
add
mov
xor
icebp
sub
pop
in
ret
jecxz
sbbb
popa
sbb
pop
cld
outsb
arpl
subl
jecxz
dec
sub
and
mov
int3
inc
fsubrl
test
pop
mov
inc
insb
sti
pop
inc
insb
out
push
cmp
cmp
fisubrl
out
movsb
popa
fmuls
loope
in
ljmp
mov
into
pushf
mov
add
mov
jge
in
push
and
inc
sbb
add
addr16
cmp
cmp
xor
ds
xchg
and
fs
ja
sbb
fs
addr16
adc
test
test
in
add
mov
dec
xlat
mov
in
or
fidivrl
cmp
add
daa
mov
dec
ret
jle
out
inc
pop
pop
insl
and
dec
std
mov
testl
jae
add
add
bound
cld
in
mov
cmp
pop
in
call
mov
stos
hlt
test
imul
jmp
scas
add
mov
lret
cmp
loop
sbb
cli
jp
lret
ret
fnstenv
pop
lods
out
jl
repnz
call
add
and
add
jmp
fldcw
add
bound
fistpl
pop
xlat
add
lods
or
lret
and
bound
jmp
adc
fldl2t
jle
mov
lods
mov
jmp
rolb
add
add
fcmovbe
pop
loope
out
add
push
xchg
sbb
add
jl
sbb
ficompl
push
gs
adc
aam
int3
bound
fcmovnb
loope
leave
and
cmp
push
fldt
or
adc
outsb
inc
mov
pop
stc
out
cmc
sub
imulb
pusha
icebp
xor
stos
out
push
xlat
insl
out
mov
call
bound
add
pop
cmp
movsb
fcomip
jmp
mov
add
popa
push
imulb
out
push
out
sbb
imulb
pop
sbb
jmp
rclb
shr
roll
nop
or
xor
out
sub
cmp
nop
mul
mov
out
dec
add
inc
adc
xor
add
sbb
add
and
test
add
lods
icebp
aaa
adc
cmpl
insl
push
test
cmc
jle
std
inc
call
dec
xlat
rolb
fisubrl
adc
ljmp
clc
addb
add
dec
incb
loope
sti
je
jae
add
fs
out
mov
pop
sti
cmp
lahf
pop
mov
in
cmc
es
dec
icebp
aas
and
lods
and
mov
lock
fnstenv
xor
out
add
xor
outsb
mov
jne
mov
out
xchg
xchg
xor
push
std
jae
mov
jb
pop
loope
stc
insb
pop
fsts
rorl
ret
dec
hlt
sbb
push
push
pushf
jmp
jg
jmp
cmc
xchg
roll
fldl2t
jp
mov
adc
fldl2t
inc
imul
iret
or
sub
je
ret
es
aad
aam
fldl2t
inc
outsl
push
stos
les
add
add
cli
in
mov
loop
inc
push
icebp
je
xchg
fsubrl
sbbb
dec
lea
push
inc
jno
xor
call
inc
xlat
ret
mov
test
popa
fnstenv
sbb
repz
pop
jne
and
pop
rcll
neg
and
je
mov
rcl
push
shrl
add
add
xorl
shrb
cmpsb
out
sahf
lahf
pop
call
bound
pop
cmp
sub
fcomi
jmp
xchg
sub
add
popa
adc
call
insl
push
jl
push
call
cmp
rolb
xlat
insb
inc
rclb
shr
pusha
roll
mov
out
or
incl
add
add
cli
or
ds
out
ret
mov
je
pop
stc
add
xchg
push
call
mov
loopne
stc
rcll
out
clc
mov
inc
rcl
and
and
clc
and
mov
add
mov
add
enter
je
jge
sbb
jne
add
lock
bound
cld
pop
mov
push
cld
dec
lock
lock
bound
cld
xor
and
cld
and
lock
fidivrs
cld
or
pop
lock
std
out
add
lock
bound
dec
cld
in
verr
lock
aad
add
lock
in
cld
mov
clc
out
sti
lods
out
add
lock
fnstenv
pop
fnstenv
add
jmp
dec
outsb
fsts
flds
pop
fld1
add
out
fldl2t
dec
inc
fnstenv
repnz
call
add
add
movsb
sbb
fwait
in
or
call
add
jg
neg
jo
fsts
add
out
into
fdivs
fstps
mov
add
add
jne
add
test
imul
popa
flds
jmp
das
aad
add
add
jl
imul
popa
flds
jmp
movsl
aad
or
push
aam
jmp
popa
flds
cmp
add
adc
imul
popa
flds
jmp
popa
flds
jmp
push
flds
jmp
popa
flds
jmp
popa
flds
jmp
daa
aad
and
and
testb
sbb
cmp
ljmp
sbb
stc
sbb
incl
cmc
decl
cmc
cmp
sbb
cmc
jmp
cmc
std
sbb
jmp
sbb
incl
sbb
add
leave
pop
cmc
jmp
pop
cmc
decl
cmc
lcall
cmc
call
push
cmc
lcall
cmc
pushl
cmc
incl
cmc
incl
cmc
incl
push
cmc
fistpl
cmc
call
cmc
incl
rolb
bound
dec
cld
lods
dec
dec
cld
movsl
and
popf
mov
dec
cld
in
dec
cld
test
dec
cld
jge
add
bound
cld
insl
dec
dec
cld
gs
dec
cld
pop
and
push
out
dec
cld
dec
sub
inc
dec
dec
cld
cmp
pop
dec
cld
sub
jb
cld
sbb
idivb
cld
add
mov
dec
cld
in
mov
stc
sti
fldl
sti
clc
leave
aad
clc
leave
aad
stc
mov
add
add
aad
clc
test
aad
stc
cltd
aad
stc
mov
xchg
stc
mov
push
stc
jns
inc
stc
jns
inc
stc
imul
or
pop
aad
cmc
pop
aad
cmc
dec
aad
cmc
dec
aad
cmc
cmp
jle
cmp
push
imulb
aad
negb
aad
negb
aad
cmc
or
lret
aad
cmc
stc
aam
idiv
aam
testb
add
jmp
aam
and
shl
bswap
shl
sbb
shl
imul
shl
inc
lods
shl
aas
mov
mulb
xchg
shl
jns
shl
addr16
shl
cmc
mov
div
jns
idiv
jns
imulb
imul
idivb
dec
shl
orl
notb
shl
sbb
shl
or
sub
div
sbb
neg
push
shl
or
or
mulb
stc
iret
testb
testb
sar
decl
sar
decl
sar
jmp
iret
cli
call
iret
cli
ljmp
sar
jge
cli
pushl
cmc
decl
cmc
mov
cli
lcall
int3
cli
incl
int3
cli
incl
add
add
int
lcall
cli
ljmp
cli
decl
cli
call
enter
enter
enter
cli
push
cli
pushl
cli
jmp
repz
cmc
dec
repz
in
cmp
sti
in
repz
fldl
repz
int
repz
sti
mov
enter
cmpsb
inc
cld
movsl
sahf
lock
popf
lcall
xchg
test
sti
lea
sti
test
lock
jne
lock
insl
inc
lock
gs
sti
pop
pop
lock
push
dec
lock
dec
add
sti
inc
or
sti
cmp
lock
sti
sub
lods
icebp
sti
sbb
test
sti
or
sarb
stc
rorl
sarl
jmp
rcll
neg
shll
add
rol
test
rorl
out
test
sarl
lock
rcll
lock
shr
mov
loopne
jns
pusha
lock
jb
imul
je
pop
shr
add
sub
rcll
dec
inc
shrl
ds
add
fldl
bound
add
lock
add
popa
flds
jmp
mov
int
mov
int
jmp
mov
int
pop
and
imulb
and
negb
and
testb
int
daa
and
mulb
and
test
int
lret
and
not
and
imul
and
testb
testb
idivb
sub
int
popf
int
popa
xchg
int
lods
int
popl
add
add
mul
popa
flds
add
pmaddwd
sub
cmc
pushl
fildl
add
sbb
lcall
cmc
ljmp
cmc
sti
fildl
add
enter
enter
enter
cli
decl
cli
lcall
cli
jmp
cli
decl
cli
jmp
cli
jmp
cli
jnp
cli
call
sar
decl
cli
incl
add
add
sar
jmp
cli
decl
sar
push
sar
jmp
sar
std
sar
dec
sar
jmp
sti
sti
sub
std
cli
sti
sbb
shr
sti
or
mov
sti
std
ret
cmc
lret
in
into
stc
sti
in
clc
sti
fucom
idiv
aad
clc
sti
int
inc
cld
cld
mov
bound
lods
ljmp
popf
sbb
xchg
adc
cld
lea
inc
cld
test
cld
jge
inc
cld
jne
inc
cld
insl
xchg
inc
cld
gs
cld
pop
mov
push
les
dec
ret
inc
fpatan
stc
cmp
idiv
cmp
ss
sub
cwtl
imull
into
mov
sbb
mov
sbb
mov
testl
int
inc
test
inc
out
int
inc
out
in
neg
int
neg
int
sti
leave
int
sti
leave
int
sti
mov
int
sti
test
int
sti
cltd
int
sti
cltd
int
cli
mov
hlt
cli
mov
mov
cli
jns
or
imul
fdivr
pop
int
cli
pop
int
xor
dec
shl
and
shl
daa
xor
shl
push
adc
shl
mov
or
divb
sti
shl
jmp
divb
shl
inc
fcom
testb
notb
aad
imulb
shl
mov
popa
flds
sbb
divb
sub
imul
popa
flds
pop
sbb
imul
sbb
test
int
mov
int
stos
sbb
testb
int
add
and
incl
add
add
sbb
cmc
decl
fadds
add
fadds
subb
add
cmp
add
sub
add
fwait
aad
sub
add
adc
cmc
ljmp
sbb
cmp
cmc
mov
sbb
add
js
add
mov
add
loopne
cld
lods
dec
cld
pop
ret
loop
dec
cld
dec
gs
cld
inc
mov
add
roll
add
mov
add
rolb
bound
cld
sbb
test
or
jns
cld
std
push
dec
cld
cmc
or
in
sbb
cld
in
dec
cld
fldl
cld
aad
dec
cld
int
dec
cld
lds
dec
cld
mov
rolb
bound
sti
popf
mov
sti
xchg
dec
rolb
bound
xor
jge
cmpl
lretw
pop
lret
push
lret
dec
lret
inc
lret
ds
inc
mov
cmp
mov
das
inc
cmp
add
cmpl
and
inc
cmp
xchg
cmp
aas
cmp
cmp
loop
cmp
and
or
and
and
add
bound
inc
es
lret
iretw
popa
jecxz
lods
cmp
jae
lea
enter
lret
mov
sti
mov
mov
cmp
outsl
inc
jae
popa
cmp
scas
jbe
pop
xchg
outsb
ds
popf
inc
add
insl
dec
lcall
cmp
aas
push
andb
dec
andl
jmp
orl
andl
push
sbb
gs
xor
fstl
push
pop
adc
pop
cli
jo
mov
pop
push
pcmpgtw
add
add
fdivrl
pmulhw
sbb
js
js
cmp
sub
cmp
jb
and
add
rcrb
or
add
cli
fidivs
insl
jnp
pusha
je
and
add
sbb
aaa
and
sub
add
push
fbstp
outsl
sub
jae
fstpt
clc
sbb
sbb
in
inc
std
shlb
fs
and
fsts
push
pop
scas
dec
imul
mov
pop
jae
mov
subps
jns
mov
push
fs
sub
jns
mov
inc
popa
mov
popa
xchg
jno
fs
add
js
popa
jb
cs
xchg
sbb
add
pop
sub
adc
and
mov
push
popa
clc
sbb
daa
xor
and
fstps
add
and
and
cmp
add
es
push
adc
and
xor
xor
lds
call
and
adc
pop
into
xor
sbb
fldpi
or
add
add
mov
flds
xchg
cmp
push
mov
inc
and
cmp
fldt
xor
inc
inc
cmp
add
jo
pusha
xor
jnp
add
gs
xor
add
inc
cld
inc
daa
pop
sti
push
flds
test
dec
sbb
jae
push
flds
data16
nop
es
enter
add
les
add
push
inc
jb
cmpsl
xor
mov
add
data16
ds
pop
mov
jae
xchg
flds
aas
imul
pop
sub
pusha
dec
pushf
inc
pop
dec
sbb
mov
push
inc
popl
jae
sub
gs
add
and
push
gs
icebp
imul
xor
insb
pop
sub
outsb
adc
and
inc
imul
testl
imul
fistl
mul
gs
jb
fmuls
pop
jb
sub
add
sti
ds
aaa
imul
fnsave
js
clc
pop
fs
imul
pop
insb
xor
xor
sbb
dec
bound
outsb
inc
in
cmp
add
pop
out
imul
in
cmp
bound
cs
and
sbb
and
and
adc
bound
cmp
mov
and
and
adc
bound
aas
xchg
mov
xchg
push
idiv
inc
jo
and
and
xchg
dec
push
fldcw
pop
xor
mov
push
cmp
daa
aas
sub
mov
gs
inc
add
cmp
sbb
pop
add
and
repnz
daa
add
xor
add
fsubrl
lret
cmp
cmp
sbb
pop
cmpsl
flds
mov
cmp
xor
add
add
test
mov
call
xor
xor
mov
add
pusha
add
bound
and
dec
js
gs
pushfw
add
and
dec
pop
je
sbb
adc
pop
jmp
inc
xor
pop
rdmsr
adc
pop
and
add
add
add
pop
int
cmp
lcall
ret
pop
adc
xchg
push
mov
flds
push
arpl
push
test
inc
add
scas
fiaddl
jns
arpl
adc
xor
fdivr
add
es
jno
mov
pop
outsl
jns
add
mov
pop
bound
sub
add
inc
outsb
ja
jb
mov
imul
stc
pop
gs
or
add
inc
outsb
xchg
jb
sub
imul
stc
pop
gs
flds
stc
clc
push
imul
hlt
addr16
fmull
pop
jnp
es
nop
pop
sbb
jb
pop
sbb
push
cmp
or
add
add
add
and
adc
add
testb
push
inc
cmp
das
dec
xor
jmp
cld
aas
popa
negl
addr16
sbb
adc
out
sti
ds
mov
sbb
adc
ds
movsb
cmp
test
sub
les
and
cmpsb
push
mov
jge
xchg
xor
dec
inc
scas
add
fisubrl
push
nop
xor
sbb
mov
jo
dec
and
out
lcall
inc
sbb
dec
aaa
and
mov
pop
ss
or
inc
cmp
xor
dec
jmp
dec
sbb
push
syscall
sub
es
ss
push
push
cs
pop
lret
xor
dec
fistpl
mov
fistpl
mov
js
pop
mov
je
inc
xchg
bound
xor
jmp
dec
dec
orb
dec
xor
jae
jg
add
or
insl
pop
xchg
cld
sbb
dec
push
inc
jb
pusha
adc
arpl
incb
add
add
add
jae
aas
sub
pop
icebp
adc
add
pop
adc
les
insb
fldl
add
push
jb
sub
in
insl
sbb
popa
gs
out
stc
jb
sbb
xor
jb
stc
pop
je
loopne
gs
add
mov
sub
push
notb
ficomps
and
js
mov
xor
add
pop
jbe
pop
pop
outsb
data16
pop
je
divb
push
pop
gs
aad
add
push
xor
cmp
fadds
gs
xor
add
mov
or
jle
insb
mov
sbb
arpl
mov
xor
jl
pop
nop
outsl
xor
imul
arpl
lahf
hlt
arpl
xor
add
add
adc
aas
inc
push
inc
addr16
and
push
pop
sbb
xor
es
in
or
decb
cld
xor
push
testb
xor
push
insl
fildll
cmp
pop
loopne
popa
push
loop
addr16
das
jae
fld
push
mov
aad
sbb
inc
int
sub
das
outsl
inc
call
add
dec
mov
adc
fsts
inc
xor
push
jo
mov
jno
mov
orl
xchg
cs
inc
push
inc
pop
inc
cmp
and
push
inc
and
inc
push
xor
inc
aas
and
inc
cmp
aad
pop
push
adc
xor
xor
add
push
pop
pop
repnz
add
inc
inc
inc
or
add
add
dec
jmp
insb
sub
les
gs
outsl
cmp
flds
xor
ja
outsb
mov
dec
jmp
fs
pop
xchg
inc
sub
inc
sbb
jp
sbb
gs
sub
inc
stos
std
cmp
cmp
mov
pop
das
xchg
sti
sbb
aas
inc
push
sbb
push
inc
xor
je
js
popa
aad
cmp
aas
add
push
push
push
or
shll
insb
es
insl
frstor
add
add
pop
add
imul
fidivs
insb
es
data16
into
pop
popa
testl
pop
gs
roll
mov
add
inc
add
loopne
add
add
sub
gs
and
fcompl
push
add
adc
pop
je
in
jb
sub
jb
mov
imul
or
and
pop
into
and
roll
popa
jmp
insb
scas
mov
pop
test
xor
mov
sbb
add
cld
ds
mov
sub
add
add
jg
cs
mov
pop
push
add
or
cs
and
xor
sbb
bound
dec
dec
hlt
sbb
xor
hlt
sbb
fcoms
inc
ljmp
sbb
cld
sub
push
add
fcoms
add
lock
jmp
cmp
inc
mov
cmp
sbb
inc
leave
xor
add
add
fsubs
dec
mov
cmp
addl
sub
lea
jle
jp
jle
mov
fnstenv
dec
aaa
sub
dec
daa
and
adc
pop
sub
sub
xor
flds
jne
negb
dec
sub
inc
sub
cmp
add
das
xor
inc
cmp
add
cmp
and
sbb
adcb
jmp
test
pop
mov
jl
add
imul
cltd
dec
flds
stos
pop
mulb
cmp
cmp
data16
or
dec
inc
jb
jns
add
pop
negb
mov
pop
pop
sbb
dec
pop
cmp
pusha
add
add
add
and
jo
jae
pop
ljmp
sub
push
add
gs
push
jmp
pop
push
lret
pop
popa
das
push
pop
outsb
or
dec
inc
stc
es
pop
xchg
pop
add
inc
jae
add
mov
fcom
add
push
outsl
int3
in
push
push
imul
inc
fs
fsubrs
jl
gs
push
enter
and
push
inc
paddw
pusha
in
sbb
or
pop
or
hlt
sbb
cmp
push
jmp
sub
iret
adc
fsubrl
push
jmp
daa
popa
shl
inc
popa
shrb
add
pusha
imul
lods
ret
pusha
dec
sub
test
jae
add
add
cltd
xor
push
push
dec
bound
inc
insl
jo
daa
jb
dec
adc
bound
das
imul
adc
push
add
ds
sub
ds
adc
inc
inc
fsts
xor
inc
sub
cmp
add
add
aaa
std
adc
inc
cli
add
or
add
add
mov
out
dec
lds
xor
fldcw
add
daa
fldt
or
adc
loope
pop
cmp
inc
subl
push
nop
cmp
add
sahf
mov
jl
jno
xchg
sub
cmp
es
or
addb
pop
push
pop
das
add
test
dec
push
adc
push
data16
sbb
insl
sub
es
aas
adc
jmp
popa
insb
add
cmp
inc
insb
sbb
repnz
std
adc
jb
adcb
push
pop
lahf
add
test
shlb
data16
jae
frstor
add
push
es
movb
pusha
hlt
js
jne
push
lcall
data16
inc
bound
int3
stc
push
add
sbb
dec
clc
pop
popa
sub
xor
pop
cld
add
jae
xor
jns
pop
jb
ljmp
nop
fiaddl
pushl
push
push
dec
lretw
fs
add
xor
xor
outsl
pop
push
pop
dec
fnstsw
ja
negl
dec
clc
add
jb
int3
jo
fldpi
add
pop
aad
push
in
jb
or
cmpsb
add
and
arpl
and
popa
and
ret
pusha
dec
maxps
pop
cmovne
push
adc
out
pop
inc
inc
or
arpl
repz
aaa
bound
and
inc
inc
xor
bound
xor
lds
popa
imul
pop
jns
ret
pusha
testl
mov
push
imul
add
add
cwtl
xor
bound
ds
je
bound
jo
addr16
movsl
fsts
add
jp
test
adc
jg
fsts
adc
dec
and
and
sub
cmp
fstps
inc
ss
lock
or
icebp
sub
sub
add
add
or
lret
ds
add
fldcw
push
scas
cmp
push
xchg
inc
into
pop
lds
mov
sub
push
call
daa
test
mov
int
ds
mov
cmp
add
pop
popf
cmp
or
insl
mov
add
or
sub
pop
sub
mov
pop
inc
push
or
push
inc
push
data16
sub
cmp
aaa
cmp
add
out
pop
sbb
cmp
outsb
jmp
insl
push
push
stos
test
jb
mov
in
pop
mov
iret
push
jb
cmc
inc
add
fnstenv
out
add
flds
bound
add
add
add
add
in
push
jb
hlt
inc
add
xor
and
aad
add
pop
insb
insb
cld
pop
fs
push
jb
cli
aas
add
ficoml
sbb
jno
outsb
lret
inc
insb
push
jno
jnp
fadds
inc
cld
pop
imul
inc
je
add
add
and
insb
bound
cmp
push
test
dec
jp
and
dec
and
popa
pop
pop
ret
bound
pop
sahf
cs
push
push
inc
and
push
std
ds
cs
pop
xor
inc
insb
inc
add
adc
fildl
push
sub
pop
jae
out
jo
add
cmp
adc
sub
and
push
sub
std
fisubs
cmp
fsubl
outsl
mov
pop
arpl
fldenv
and
mov
call
and
leave
adc
ficompl
and
sub
add
fdivrs
sub
cmp
inc
ss
push
sub
add
fsubrs
adc
inc
xor
sub
daa
ss
xorps
call
pop
negb
adc
incl
std
and
fsubs
adc
ljmp
shll
or
rcll
icebp
jbe
add
popa
ljmp
popa
cld
ljmp
popa
sbb
mov
xor
or
scas
jae
fs
inc
inc
addr16
popa
cmp
scas
push
or
mov
popf
or
xchg
xor
popa
dec
add
xorb
push
xor
dec
add
jg
jae
inc
sbb
test
pop
cmp
pop
xor
fwait
add
dec
cmp
data16
push
add
fs
push
dec
data16
lret
pop
dec
pop
mov
imul
pop
fs
cmp
enter
std
add
xchg
push
gs
jno
movl
jecxz
add
and
xor
outsb
out
add
out
outsb
pop
mulb
pop
notl
mov
pop
add
fs
ss
clc
push
outsl
push
mull
sarl
sub
shrl
pop
lods
mov
mov
jmp
insb
scas
fisttps
lret
test
lods
mov
add
add
arpl
insb
sahf
jae
js
inc
cld
jg,pt
cmp
xchg
push
pop
mov
pop
insb
bound
adc
data16
mov
mov
jg
insb
sub
das
ds
out
ds
cmp
adc
pop
adc
and
bound
popa
or
sbb
sbb
insb
adc
fsts
add
ficompl
idivl
cld
xor
aas
fidivl
and
cmp
xor
sub
mov
daa
test
call
sbb
xor
call
sub
lea
sub
call
sbb
lods
and
fsts
aas
inc
sub
cmp
sbb
aaa
inc
and
add
add
sub
push
or
aad
cmp
add
adc
pop
xor
inc
or
sbb
cmp
insl
add
pop
push
add
pop
or
sub
add
int3
pop
in
mov
push
add
cmp
js
inc
cmp
dec
jmp
cmp
inc
cltd
inc
aas
dec
test
js
popa
add
mov
jl
inc
xchg
subb
mov
and
dec
or
add
aas
cmpl
add
cmp
sti
push
je
in
addr16
adc
push
int
outsb
sub
pop
arpl
jno
les
dec
fisubrl
jl
fs
jb
push
jne
sbb
clc
jb
psrlq
add
cmp
push
out
clc
imul
fs
and
push
jne
sbb
clc
jb
call
inc
outsl
out
mull
fidivl
imul
inc
outsb
jb
sbb
outsl
adc
repz
or
push
adc
and
jecxz
jae
jecxz
jb
mov
movsl
arpl
adc
push
rcr
push
imul
shll
insl
mov
icebp
sub
lahf
push
dec
mov
adcb
jg
add
jg
push
dec
mov
push
add
add
push
or
push
inc
xor
outsb
pop
push
push
and
pop
adc
outsl
adc
fsts
pop
daa
push
sbb
inc
daa
cld
cmp
ds
add
fldcw
adc
add
add
sub
pop
sub
or
add
call
adc
sub
mov
std
or
fldenv
adc
daa
or
roll
aam
stos
adc
sub
jno
call
adc
mov
sub
mov
add
sub
jge
add
add
cmp
dec
daa
pop
sub
insl
inc
outsb
xor
add
jo
jno
push
push
gs
inc
sub
cmp
pop
xor
jae
jbe
inc
sbb
insl
add
cmp
pop
addl
std
jns
jb
lcall
mov
xor
inc
cmp
pop
lret
push
mov
push
cmp
popa
mov
mov
xorb
jne
cmp
jb
outsl
cmp
pusha
arpl
jg
js
pop
jbe
fs
aaa
outsb
and
push
arpl
addr16
adc
addr16
les
dec
call
addr16
adc
addr16
lds
dec
pop
add
arpl
add
add
lret
es
popa
jb
outsl
sub
pop
arpl
aad
fdivr
fs
es
arpl
lret
enter
lds
xor
and
sbb
adc
push
xor
mov
inc
es
inc
push
sbb
sbb
cli
cld
dec
add
or
inc
add
std
dec
add
adc
int
outsb
mov
jecxz
pop
sarl
jb
aad
inc
mov
bound
imul
inc
sbb
jno
xchg
push
pop
xchg
bound
xor
rolb
and
xchg
xor
jg
adc
insb
sbb
sub
xor
fcomp
aaa
and
ljmp
push
and
cmp
adc
call
cmp
ss
divb
std
xor
dec
add
ss
and
fsqrt
add
sub
xor
mov
add
jg
scas
cmp
fldenv
mov
inc
fidivrs
xorb
nop
js
dec
jmp
popa
sbb
imul
subb
popa
call
push
sub
inc
jmp
jb
inc
push
push
adc
popa
lcall
push
sub
dec
adc
shll
insl
sbb
push
add
pusha
or
cmpsb
xor
pop
in
add
subl
jb
inc
sub
popa
and
jae
jb
mov
clc
inc
add
lds
repnz
addb
cld
fs
shl
jo
call
ficoml
das
ret
dec
ret
sub
pop
jb
call
push
popa
aas
mov
js
push
ret
jno
and
inc
add
mov
jae
insl
mov
add
push
notl
dec
aad
dec
xchg
aas
push
addb
dec
rcrb
xchg
sbb
sbb
xchg
jge
xor
bound
push
fs
js
arpl
pop
dec
cmc
add
ja
insb
and
push
pop
aas
and
popa
ss
xor
bound
cmp
inc
adc
bound
adc
pop
icebp
loop
pop
pop
mov
adc
push
arpl
stc
or
cmpsl
aad
jae
lret
pop
add
add
sahf
xor
mov
aas
js
mov
push
xchg
lret
call
mov
push
xchg
ss
jo
rorb
leave
adc
data16
cmp
ss
adcl
inc
xor
adc
adc
sub
and
inc
and
icebp
and
push
add
call
pop
pop
sub
lret
and
and
fnstenv
add
sub
push
lret
and
add
xchg
add
push
daa
push
mov
sbb
ja
insl
sarb
push
jmp
push
pop
mov
inc
or
cmpb
mov
adc
lea
test
add
pop
push
pop
mov
pop
mov
test
xor
jae
inc
sub
jno
push
xor
dec
pop
push
jmp
jne
pop
adc
gs
jmp
test
push
add
push
popa
aaa
mov
push
arpl
rcrb
xlat
das
add
enter
mov
pop
je
clc
pop
gs
sbb
add
mov
push
call
inc
jb
mull
sbb
mov
xor
jbe
clc
push
inc
sub
jno
mov
xor
pop
mov
add
cmp
inc
imul
add
add
pop
je
xchg
add
adc
pop
sahf
out
cld
cltd
pusha
mov
aas
add
add
jl
pop
addl
imul
pop
insb
xor
pop
outsl
push
inc
adc
adc
aas
es
xor
add
jno
insb
adc
pop
add
push
out
adc
cld
adc
int
and
jno
fucomip
dec
cmc
mov
jmp
add
decb
clc
sahf
push
push
jmp
test
push
xlat
mov
or
lret
cltd
adc
push
mov
xchg
or
popf
stc
xchg
mov
fstpl
test
out
lds
test
call
cmp
mov
sub
or
inc
in
or
adc
pop
stc
add
cmp
dec
dec
xor
inc
push
ss
add
cmp
or
dec
incl
xor
sub
or
and
push
sub
push
add
xor
pop
mov
data16
mov
lret
stos
lret
nop
mov
xor
fwait
mov
push
xchg
mov
pop
jmp
mov
xor
lcall
insl
dec
mov
jmp
jge
insl
add
mov
push
scas
push
cltd
jle
ljmp
push
inc
mov
add
add
jo
cmp
sbb
js
jo
dec
mov
dec
jle
je
subl
ret
je
mov
pop
fldl
test
xchg
stos
mov
fimuls
popa
fistpll
outsl
xor
fimull
inc
adc
push
jb
lods
push
sub
js
addb
add
add
ror
gs
imul
stc
cmp
int3
loope
dec
ret
into
pop
mov
sub
mov
lock
cld
inc
mov
repnz
scas
fucomp
js
fsubrp
mov
dec
lock
pop
jbe
icebp
test
add
inc
push
lock
dec
jb
pusha
inc
inc
jmp
aas
addb
bound
lock
lock
ss
imul
add
adc
pop
ret
call
fsts
sbb
cmp
stc
push
or
xchg
push
add
or
inc
shlb
or
cld
icebp
mov
call
clc
mov
std
sbb
xchg
push
add
add
fnstenv
in
sahf
or
test
in
jns
mov
add
or
mov
out
fldcw
add
add
adc
test
sub
testl
xchg
notb
and
jnp
addr16
jp
jae
cmp
add
xchg
push
dec
das
sub
daa
dec
push
clc
add
xor
aas
cmp
xor
inc
clc
fs
cmp
dec
cli
cmp
ds
and
add
sbb
add
stos
cli
xor
jb
cli
xchg
idivb
popa
sbb
push
pop
mov
popa
sbb
jae
pop
test
xchg
not
popa
aam
add
popf
pop
popa
sbb
or
idiv
xor
inc
dec
insl
fwait
inc
dec
jnp
inc
add
jb
test
incl
add
add
loop
outsb
js
jns
xlat
out
pop
jp
arpl
xchg
dec
loope
outsb
mov
or
in
add
jb
jp
insb
das
xlat
gs
jns
add
dec
jbe
test
sbb
enter
jae
jmp
imul
xchg
pushl
outsb
loope
xor
fbld
in
pop
fmuls
add
add
ljmp
addr16
xchg
popa
lret
in
arpl
shr
jmp
std
jb
into
clc
iretw
sbb
fs
fbstp
stos
fisubs
addb
f2xm1
pop
mov
bnd
jecxz
dec
test
jecxz
bound
shrl
sti
dec
sbbl
in
fildll
test
lock
push
in
xor
test
adc
mov
adc
mov
out
add
and
pop
or
add
cld
dec
ret
inc
aam
add
lock
pop
call
icebp
leave
or
icebp
movsb
sub
test
inc
xor
jmp
mov
push
add
mov
hlt
in
test
sbb
cmc
std
nop
mov
add
add
jmp
sahf
adc
loopne
add
sarb
add
mov
push
cmpl
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
lret
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
fildl
add
add
cmp
add
cmp
add
dec
fildl
add
add
cmp
add
cmp
add
or
add
or
add
sti
fiaddl
add
fiaddl
add
fildl
add
fildl
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
out
add
out
add
add
add
out
add
out
add
out
pop
and
pop
and
add
fiadds
and
aaa
and
add
in
add
add
out
fldcw
add
fiaddl
add
out
fld1
add
adc
sbb
flds
leave
bound
jmp
popa
flds
jmp
in
imul
push
test
cld
popa
flds
repnz
flds
test
popa
flds
imul
div
popa
flds
loope
flds
leave
popa
flds
jle
flds
jmp
popa
flds
jmp
popa
flds
jmp
test
flds
jmp
lret
loope
jmp
popa
flds
sub
aam
jmp
popa
flds
add
aas
sti
xlat
add
sti
xlat
add
daa
cld
adc
fadds
add
xlat
add
lret
xlat
add
lret
xlat
add
dec
inc
sbb
xlat
add
lret
mov
inc
mov
adc
sbb
aas
inc
stos
pop
mov
mov
push
add
in
and
bound
addb
xchg
mov
repz
popl
inc
mov
inc
mov
add
pop
call
xor
out
jge
movsl
push
nop
test
les
xchg
xchg
cmp
mov
sub
push
and
outsb
sarl
fmuls
or
inc
cli
push
xlat
xchg
int3
xchg
jecxz
loope
push
xchg
daa
push
ds
ret
mov
pop
and
dec
dec
scas
enter
cmp
xchg
pop
mov
mov
xchg
fstpl
fnstenv
shrb
xchg
mov
and
cwtl
jbe
jae,pn
addr16
jp
repnz
mov
test
mov
add
add
mov
fwait
dec
stc
popa
or
outsl
add
add
sbb
cmpsl
pushf
adc
sahf
pushf
sub
test
mov
mov
dec
stos
cmpsl
xchg
cli
flds
ds
add
loop
push
jae
mov
sbbl
stos
inc
leave
daa
stos
hlt
repnz
xchg
fidivl
inc
and
add
add
test
stos
xchg
mov
or
ljmp
mov
dec
lea
ss
sub
fsubl
inc
ss
mov
cmp
ss
cld
les
mov
mov
sub
fstpt
sub
imul
xor
and
add
add
mov
dec
add
fldl
out
jb
jmp
inc
ds
hlt
lret
push
insl
cmpb
adcb
sbb
xchg
out
pop
or
jmp
cmp
inc
cwtl
jne
push
pop
cmp
mov
shrb
xor
add
sbb
adc
movsb
xor
add
add
mov
sbb
popl
adc
inc
fisubrl
aad
push
hlt
xchg
cli
mov
xlat
stos
push
mov
test
xchg
xor
loopne
and
mov
sarb
jne
push
push
cmc
dec
enter
fcomps
add
bound
bound
add
int3
inc
bound
int3
inc
bound
add
mov
add
add
bound
add
add
bound
inc
bound
add
add
bound
add
mov
add
add
bound
add
pushf
inc
add
out
add
sub
add
out
add
inc
movsl
mov
add
out
add
add
add
out
add
ret
add
out
add
lret
movsb
and
out
add
out
fnstenv
and
out
add
out
cmpsl
and
out
add
add
popa
flds
mov
popa
flds
jmp
popa
flds
pushf
cli
pop
add
popa
flds
jmp
popa
flds
jmp
cli
pop
add
popa
flds
jmp
popa
flds
push
mov
flds
jmp
popa
flds
xor
flds
jmp
popa
flds
cmp
pop
add
popa
flds
jmp
popa
flds
lret
add
popa
flds
jmp
popa
flds
dec
or
add
jnp
add
mov
add
mov
add
jge
inc
add
add
dec
fadds
add
add
pop
add
cmp
add
dec
fadds
add
add
jg
inc
add
fadds
add
fadds
add
fadds
add
xlat
add
or
add
or
add
dec
or
sti
xlat
add
lret
xlat
add
lret
xlat
add
out
jmp
add
lret
xlat
add
lret
xlat
add
cld
jmp
add
mov
add
bound
add
cmovno
add
bound
add
add
bound
inc
bound
add
add
bound
add
adc
jo
add
add
bound
add
adc
jo
add
add
bound
add
sbb
jo
add
add
bound
add
push
inc
bound
add
add
bound
add
sbb
jo
add
add
bound
add
sbb
add
out
add
xor
add
out
fstps
add
out
add
bound
mov
add
pop
xchg
mov
fxch
xchg
mov
xchg
mov
fnstcw
xchg
mov
xchg
mov
fnstcw
xchg
and
iret
xchg
and
arpl
and
add
sbb
dec
rcrb
add
sbb
push
lock
push
lock
and
sbb
sbb
sbb
sbb
rcrb
add
rcrl
add
xlat
sbb
lods
iret
sbb
mov
mov
sbb
popf
scas
sbb
xchg
cmpsl
sbb
lds
sbb
lea
sbb
jmp
scas
rcll
jmp
popa
flds
jmp
popa
flds
jmp
lret
faddl
add
faddl
add
faddl
add
faddl
add
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
faddl
add
add
cmp
add
cmp
add
dec
faddl
add
add
cmp
add
cmp
add
or
add
or
add
sti
fildl
add
fildl
add
faddl
add
faddl
add
fildl
add
fildl
add
fildl
add
fildl
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
jno
add
popa
flds
push
dec
sub
add
cmp
cmp
mov
cmp
and
inc
pop
flds
adc
jl
aaa
test
aaa
jne
inc
aaa
lods
cmp
aaa
mov
movsl
aaa
lea
aaa
add
mov
ds
mov
aas
pop
mov
aas
pop
mov
aas
pop
mov
aas
pop
mov
aas
xchg
mov
aas
xchg
mov
aas
inc
mov
aas
pop
mov
aas
xlat
mov
aas
pop
mov
aas
inc
mov
aas
push
mov
aas
push
mov
aas
push
mov
aas
mov
add
ja
cld
das
aaa
enter
lds
ja
sub
ja
cmp
ja
dec
xor
lds
enter
enter
enter
enter
cs
xor
aam
dec
xor
xor
xor
xor
add
add
add
into
sub
out
xor
cs
push
jae
sub
je
out
sub
push
es
movsb
push
es
les
sub
xor
sub
xor
xor
movsb
xor
int3
xor
in
xor
lods
xor
xor
xor
xor
xor
add
add
inc
xor
dec
xor
mov
xor
enter
enter
jecxz
data16
lret
xor
add
xchg
or
mov
mov
xor
mov
inc
stos
xor
arpl
out
dec
xor
movb
dec
xor
and
cmpsb
sub
mov
add
xchg
jmp
outsb
jecxz
data16
outsb
lds
xor
add
add
lds
xor
lds
mov
xor
push
sub
dec
cmp
inc
sub
mov
movsl
sub
jne
test
aad
in
or
jne
sub
test
sub
dec
push
sub
inc
gs
cmp
sub
xor
sub
dec
xchg
sub
inc
movsl
sub
cmp
sub
aaa
test
xchg
cs
push
sbb
das
add
shrl
sarl
rorl
scas
shll
aam
aaa
xlat
aam
aaa
addr16
aaa
aam
cmp
aad
cmp
xor
pop
aad
cmp
aad
cmp
aam
cmp
aad
cmp
aad
cmp
aad
cmp
aad
cmp
les
inc
aad
cmp
in
addr16
cmp
add
daa
aad
cmp
and
addr16
xor
bound
adc
adc
imul
mov
adc
lods
dec
push
adc
int3
cmp
fsubrl
dec
adc
cld
fwait
jle
or
cmpsb
adc
mov
push
sub
push
cmp
ds
js
adc
push
ss
pop
adc
push
adc
dec
push
adc
cmp
adc
sub
adc
sub
cld
cwtl
jl
or
movsb
pop
sbb
sbb
jle
sbb
mov
xor
out
inc
sbb
mov
push
sbb
es
sbb
divb
fistpl
data16
pop
outsb
mov
and
adc
jle
fwait
pop
es
pop
push
mov
pop
ss
pop
push
mov
and
mov
and
mov
and
mov
and
mov
and
add
add
repz
pop
mov
in
in
int
aad
adc
pop
mov
and
dec
adc
xor
jge
xor
gs
insb
push
xor
fs
xor
pop
xor
xor
dec
xchg
xor
inc
test
and
int
aad
adc
xorb
lods
adcl
mov
inc
cmc
ss
gs
dec
inc
push
aaa
push
inc
inc
aaa
pop
inc
xor
aaa
sub
dec
mov
hlt
ds
mov
adc
outsl
aam
aas
pop
aam
aas
jg
inc
aas
jg
push
aas
aam
aas
pop
aam
aas
jg
test
lahf
aam
aas
scas
aam
aas
lahf
aam
aas
iret
aam
add
js
lcall
flds
add
enter
add
add
enter
int
xor
leave
cmp
test
pop
xor
enter
int
xor
int
xor
int
xor
int
xor
add
bound
add
bound
jl
adc
xchg
xchg
sbb
lods
mov
pop
aam
sahf
pop
in
xchg
pop
hlt
insl
addb
bound
add
xchg
adc
add
add
or
push
xchg
adc
mov
or
xor
or
xor
je
adc
push
adc
mov
adc
jb
adc
jb
adc
push
jle
add
xchg
or
and
adc
stos
fwait
adc
stos
mov
push
stos
jnp
test
pop
adc
test
adc
test
adc
add
add
test
adc
test
adc
test
mov
adc
test
rcll
jbe
sti
adc
cmpsl
rcll
cmpsl
sbb
sahf
cmpsl
xor
xchg
cmpsl
sti
adc
repz
pop
adc
cmpsl
push
adc
cmpsl
cmp
cmpsl
xchg
adc
cmpsl
sbb
sahf
cmpsl
xor
xchg
cmpsl
cmp
mov
cmpsl
fistl
pop
cmpsb
add
jb
xor
push
lods
xor
push
or
xor
in
xor
pop
xor
dec
xor
cmp
xor
push
lea
lds
xor
insl
push
sub
push
lods
sub
pop
sbb
sub
std
jne
sub
insl
pop
sub
inc
insl
cmp
sub
add
sub
inc
dec
jge
add
in
xor
lret
scas
lret
pop
lret
lahf
lret
mov
lret
pop
xor
mov
mov
lods
xor
out
lret
pop
lret
fdivl
dec
cld
xor
pop
lret
sbb
pop
lret
sub
aas
lret
cmp
das
lret
dec
ss
lret
pop
ss
insb
ss
lret
jl
das
lret
mov
pop
lret
pushf
ss
lods
ss
mov
aam
push
adc
push
scas
adc
dec
jbe
add
mov
adc
adc
adc
adc
xchg
mov
adc
xchg
into
adc
lea
in
jne
adc
insl
sbbb
push
adc
add
adc
sbb
lret
dec
jb
sub
push
xor
ret
cmp
adc
adc
adc
adc
adc
je
fldenv
ss
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
out
push
sbb
divb
aas
sbb
push
mov
push
divb
lahf
push
es
push
cmp
arpl
fisubrl
jae
fisubrl
push
sbb
scas
cmpsl
sbb
scas
scas
sbb
lods
add
insb
aad
fsts
add
xor
push
int
add
xor
jne
xor
insl
movsl
xor
insb
in
imul
xor
push
sub
jne
xor
insl
mov
xor
jno
in
imul
add
jno
xor
jno
xor
stc
xor
add
adc
push
icebp
xor
ja
xor
aas
les
add
les
xor
mov
xor
shlb
push
fdivs
aas
les
add
xor
push
xor
les
mov
add
jae
or
sub
adc
xor
sbb
or
and
adc
mov
fs
lahf
cmp
into
sarl
dec
into
sub
mov
inc
cmp
mov
cmp
rorl
cmp
sub
shrb
cmpsl
ret
mov
sub
pop
push
add
xchg
add
std
jmp
adc
jo
adc
xchg
adc
push
and
in
push
ret
adc
push
inc
adc
sub
jne
pop
adc
jnp,pn
push
ss
push
xor
mov
inc
xchg
xor
popa
mov
adc
xchg
js
pop
pusha
adc
add
add
adc
ja
adc
push
push
adc
push
repz
and
sub
push
shlb
push
fisubl
in
sbb
aad
xorb
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
stos
fcoml
inc
fnstcw
adc
stos
and
mov
cmpsb
movsl
adc
cmpsl
cmc
adc
mov
adc
mov
sub
subl
dec
sbb
lods
add
sub
stos
dec
mov
xor
sbb
outsb
outsl
es
ja
mov
add
jno
add
flds
ljmp
add
push
adc
xor
outsb
sahf
xor
jbe
das
stos
jo
xor
push
cmpsl
sub
pop
sbb
mov
sub
popa
jb
sub
adc
sub
in
sub
push
mov
cs
fs
add
popa
ss
fistl
ss
fcompl
aaa
ret
fcoml
cmp
int
cmp
into
and
js
push
cmp
iret
pop
cmp
iret
xchg
cmp
iret
sarl
rcl
cmp
cmpsb
cmp
sub
ret
retw
cmp
addr16
add
push
iret
sbb
sbb
push
ds
cmp
jmp
lret
jnp
test
xchg
add
add
bound
mov
dec
adc
dec
cmp
add
adc
xor
dec
adc
and
inc
std
jmp
adc
xchg
adcb
xchg
das
adc
jb
or
jb
or
jb
adc
jmp
or
push
test
je
in
or
xor
xor
xchg
xor
push
enter
or
add
add
jmp
sbb
outsb
fstpl
pop
ja
sbb
data16
xor
mov
lods
mov
sbb
scas
sbb
sbb
scas
fcomps
pop
mov
sbb
scas
insb
sbb
mov
add
jb
jno
mov
pop
mov
sub
bound
add
and
pop
or
fwait
mov
decb
inc
movsb
cwtl
push
in
pop
push
adc
and
dec
mov
pop
prefetch
xor
push
icebp
xor
inc
xor
gs
jo
aaa
push
push
es
data16
fcoml
xor
jno
xor
jo
bnd
sub
add
insl
xor
push
shrl
xchg
pop
jo
ljmp
cmp
pushw
pop
push
cmp
and
imul
push
pop
cmpb
push
mov
cmp
pop
xorl
aas
dec
mov
lret
xor
or
xor
lret
sub
ljmp
iret
mov
lret
pop
xor
int3
inc
xor
jns
jns
sahf
xor
int
xor
int3
pop
xor
int
xor
shrl
mov
iret
mov
ss
ret
inc
ss
leave
ss
rcrb
sar
in
ror
cmp
shrl
mov
and
bound
add
adc
call
add
jbe
add
sub
jb
add
std
jmp
or
push
add
aaa
xor
adc
xor
adc
nop
dec
adc
xchg
sahf
adc
scas
adc
iret
adc
adc
adc
push
stos
adc
push
sbb
add
push
sub
sbb
lock
sbb
adc
or
add
in
mov
or
lahf
adc
aas
lahf
jb
xlat
lahf
ret
setne
push
adc
movsb
jle
jmp
adc
mov
out
arpl
pop
add
lods
adc
push
adc
cmpsl
lods
adc
lods
mov
adc
pop
stos
ret
adc
mov
xor
mov
in
inc
lods
add
push
cmpsb
sub
in
imul
je
xor
push
pop
xchg
cmp
push
pop
cmp
divl
push
fidivs
jb
xor
mov
push
test
aaa
mov
pop
aas
xchg
ss
jno
add
flds
fdivl
xor
outsb
fnsave
push
outsl
xor
dec
cmpsl
sub
in
jne,pn
xor
cs
jbe
stc
jbe
sub
add
int3
mov
aaa
js
cmp
ror
sub
pop
iret
push
ror
fnstcw
fs
sbb
mov
test
push
iret
pushf
cmp
repz
ss
shll
xchg
jne
in
mov
shl
cmp
rcrl
cmp
loopne
ret
rorl
ds
aad
add
xchg
add
fldl
add
lds
jo
push
xor
xor
sti
xor
divb
cmp
leave
test
dec
or
or
aaa
sub
or
cwtl
xchg
aas
cltd
out
or
mov
add
outsl
je
mov
bound
add
lret
push
pop
sysenter
push
lods
or
adc
sub
adc
xor
inc
add
jp
aas
add
mov
push
outsl
mov
or
insl
pusha
or
jb
add
mov
adc
lods
bound
adc
mov
mov
push
push
pop
movsb
lods
push
ret
movsb
add
jno
mov
or
sahf
push
or
lahf
xor
inc
lahf
add
pop
mov
mov
or
out
fnstcw
add
adc
jle
test
push
subb
pop
movsl
into
emms
movsl
lret
movsl
push
adc
cmpsb
movsb
adc
add
add
movsl
xchg
adc
lret
cmpsl
add
jo
das
enter
jle
cmp
shll
fildll
xor
pop
jp
jmp
popa
flds
clc
jno
xor
outsb
mov
xor
sub
push
cmp
push
bound
shrl
sbb
mov
cmp
push
push
cmp
add
add
xor
and
cmp
pop
flds
jmp
pop
flds
or
xor
inc
pop
xor
leave
push
xor
and
pop
cmp
int
cmp
push
cmp
push
cmp
push
cmp
cmp
cmp
int
cmp
int
cmp
int3
jge
cmpsl
int3
nop
cmp
shl
cmp
add
add
pop
ds
iret
lcall
cmp
add
add
or
shll
dec
lret
movsb
leave
popf
ss
iret
ss
test
loope
jecxz
imul
cmp
add
jns
and
pushl
decl
pop
jo
add
add
bound
and
or
xor
pop
xor
adc
xor
adc
sahf
adc
xchg
mov
adc
jae
adc
jae
adc
push
adc
stc
adc
push
and
push
pop
adc
xor
adc
xor
setno
push
xchg
fstps
adc
test
xchg
imul
cli
sldt
add
lock
cmp
adc
cmpsb
test
adc
movsl
mov
adc
cmpsb
jl
and
orb
mov
jo
aad
xor
sti
mov
or
push
popa
mov
or
mov
ss
mov
push
or
mov
cmp
add
add
cmp
pop
jl
test
cmp
data16
fistpl
aaa
rclb
aaa
mov
sbb
and
cmp
push
in
aaa
aam
push
cmp
inc
cmp
sub
jbe
and
and
cmp
data16
pop
imul
push
cmp
imul
push
pop
sub
add
xor
push
aaa
out
pop
movsb
xor
add
add
mov
flds
cmc
push
add
add
and
pushf
into
xor
enter
leave
scas
xor
lret
ljmp
xor
sub
adc
mov
push
cmp
cmp
iret
in
cmp
sbb
test
xor
push
rcrb
out
iret
sahf
cmp
rorb
cmp
rclb
popa
shll
cmp
shrl
cmp
add
add
dec
cmp
nop
rolb
ds
and
repz
jmp
aam
aas
dec
aam
aas
test
jo
add
add
bound
adc
nop
daa
adc
xchg
rorl
inc
xchg
dec
adc
outsl
scas
add
mov
pop
lret
add
dec
sbb
sub
mov
push
dec
mov
xor
add
pop
add
add
cmp
or
jns
or
jns
or
imul
jmp
dec
incb
push
cmp
or
cld
incl
incl
sbb
cmp
xor
xchg
adc
add
inc
add
adc
testl
adcl
add
sbb
pop
push
or
aas
push
std
add
push
push
add
push
jle
in
xchg
add
push
sbb
add
pop
add
jg
stc
add
loope
pop
test
add
pop
mov
test
outsl
add
push
add
outsb
aaa
dec
pusha
fidivs
pop
popa
or
xor
add
xor
outsb
pusha
mov
lahf
pusha
cmp
mov
sbb
add
mov
xor
mov
xor
scas
cmpsb
xor
imul
mov
lcall
outsb
aad
je
subl
push
das
adc
sub
loope
mov
xchg
inc
shlb
sahf
imul
and
cli
cmp
stc
push
cmpl
push
push
fdivrl
xor
push
mov
call
push
iret
cmp
push
sub
cmp
cmp
cmp
push
push
cmp
jnp
imul
out
push
out
cmp
mov
push
ds
movsl
ds
ds
fdivrs
aas
into
fsts
mov
add
add
or
add
fiaddl
add
dec
push
xor
xchg
bnd
gs
jb
in
lock
sub
sbb
xrelease
icebp
movsb
push
adc
bound
jb
mov
xor
out
je
jo
or
and
stc
sbb
sti
outsb
jnp
hlt
inc
push
pop
hlt
sub
pop
mov
mov
inc
jmp
add
cmp
pop
sub
inc
add
bound
repnz
xchg
xchg
xchg
xchg
fsts
sbb
or
repnz
and
jmp
repz
jg
cltd
or
xor
push
movmskps
cmp
idiv
or
cli
fmull
mov
cli
jo
cmp
adc
add
adc
add
loopne
and
adc
jle
push
push
int3
add
or
mov
adc
std
push
adc
dec
adc
xor
adc
pushl
adc
jmp
add
inc
inc
ss
pop
flds
in
xor
xor
adc
xor
adc
das
mov
push
mov
ja
jne
mov
repz
fdiv
cmpsl
xor
test
jg
mov
fmulp
stc
sub
mov
subl
sub
scas
xchg
sbb
das
call
mov
cmpsb
je
cs
insb
call
cmp
lods
dec
fistpll
cmp
cmp
dec
cmp
push
xchg
cmp
add
add
push
pop
cmp
push
std
cmp
fcos
cmp
or
loope
nop
aas
popf
push
sarb
sbb
decl
aaa
add
not
add
sti
inc
sbb
xor
push
xor
dec
mov
inc
dec
scas
xor
dec
shlb
in
dec
shlb
fimull
xor
inc
inc
xor
pop
xor
inc
insl
xor
add
add
inc
xchg
xor
repnz
inc
lock
nop
ret
repnz
icebp
jo
shr
jno
out
lea
out
test
mov
stos
jno
out
mov
dec
and
out
mov
in
push
xor
out
lea
in
fnsave
in
sub
mov
jmp
mov
hlt
arpl
mov
cli
lock
add
push
sti
sbb
sti
cmp
lock
aad
sar
and
mull
cmp
popa
stc
jecxz
mov
popf
or
or
lds
pop
decb
aaa
cmovbe
aas
pavgw
push
lsl
mov
fdivr
jne
mov
std
loopne
jno
repnz
out
std
rorb
push
std
add
icebp
pmaxub
dec
adc
sti
cmp
adc
sti
xor
and
aaa
adc
cmp
xor
mov
fldenv
ftst
repz
or
repz
and
xor
or
ja
dec
xor
ja
xor
jge
sub
pop
push
cli
sub
push
add
add
sub
xor
sub
sub
xor
cs
xor
das
out
adc
sub
adc
add
lds
inc
decb
insl
mulb
sub
cmpsl
cmp
les
fistpl
pop
ficoml
aaa
jle
mov
xchg
mov
cli
xor
mov
dec
imul
mov
fildl
add
dec
ret
dec
xorb
inc
xor
mov
push
adc
pop
dec
jmp
add
sub
add
fildl
add
add
popa
dec
and
fisttps
cmp
push
aas
or
add
fildl
add
dec
mov
adc
cmp
push
idiv
sti
mov
add
add
jbe
out
xor
dec
xor
inc
inc
fdivs
mov
xchg
xor
inc
stos
xor
dec
sbb
push
pop
out
dec
sub
and
add
add
sub
mov
xor
add
cmp
mov
inc
xor
lock
sub
lock
xchg
and
pop
mov
lock
xchg
lock
mov
bnd
leave
repnz
mov
xchg
push
mov
repnz
push
adc
lods
dec
or
mov
add
mov
xor
lock
sub
lock
and
fmull
lock
mov
icebp
cld
insb
f2xm1
lock
stc
lock
push
icebp
lock
leave
lock
shl
inc
push
mov
lock
sub
ss
mov
es
mov
lock
dec
lock
cmp
dec
add
jmp
sti
pop
adc
sti
outsb
adc
sti
outsb
adc
sti
outsb
adc
sti
adc
add
mov
adc
cld
adc
cld
sahf
adc
cld
adc
cld
adc
adc
adc
cmp
lds
push
cmpsb
lcall
loope
add
flds
mov
ss
jbe
xor
outsl
xorl
jae
xor
jo
xor
push
out
adc
xor
push
sub
inc
pushf
cs
aas
mov
das
pop
or
das
std
pop
dec
das
out
or
lods
hlt
pushf
sub
dec
add
jp
scas
hlt
pop
cs
inc
cs
cmp
xor
adc
jb
ljmp
cmp
dec
cmp
dec
and
cmp
cmpl
and
cmp
leave
cmp
add
add
dec
int3
cmp
dec
jmp
cmp
and
jae
xor
notl
cmp
push
ljmp
push
pusha
cmp
dec
je
mov
dec
cmp
add
inc
sbb
inc
daa
cmp
push
pusha
cmp
push
cmpl
mov
jns
out
dec
test
out
dec
jl
out
bnd
jmp
insl
inc
xchg
add
add
add
add
bound
adc
repnz
push
adc
dec
push
out
insl
xor
in
lods
xor
xor
in
aam
lods
in
std
xchg
loopne
and
leave
icebp
lcall
repnz
lock
fistl
icebp
addr16
push
out
out
dec
out
ss
cmp
ja
push
flds
out
lods
add
out
pop
add
out
push
add
out
aad
mov
push
add
out
imul
in
push
add
out
xor
addr16
cli
add
stos
add
add
in
xchg
add
in
add
fsincos
hlt
adc
sti
dec
add
cli
addb
cli
rolb
pop
cli
add
jp
adc
cs
sahf
add
call
add
stc
push
add
clc
jecxz
push
clc
mov
xor
jmp
sub
pop
roll
xor
shrl
xchg
shlb
fcom
xchg
ss
ds
mov
mov
xor
pop
xchg
mov
ss
ss
data16
loope
in
xor
jno
xor
xor
dec
xor
jmp
push
repz
add
ss
das
int3
imul
aaa
jle
das
das
pop
xor
inc
xor
psllq
pushf
pop
mov
xchg
xor
dec
xlat
xor
dec
and
dec
push
xor
xor
xor
mov
fmull
xor
cmc
xor
dec
ss
inc
pop
xor
push
mov
dec
mov
xor
push
mov
dec
lds
add
add
inc
pop
xor
jns
adc
pop
inc
sbb
jb
and
ss
popa
xor
incl
ss
inc
test
ss
inc
clc
bound
sti
pop
push
pushf
cli
movsl
dec
inc
clc
sbb
push
ljmp
stc
jmp
mov
repz
mov
out
js
out
js
out
push
mov
pop
sbb
pop
push
out
dec
dec
in
dec
adc
cmp
jecxz
sub
jecxz
sub
jo
cld
jecxz
mov
lock
xchg
out
ja
out
insl
out
jmp
fldenv
fldcw
hlt
sti
or
repnz
add
add
pop
xor
and
cld
repnz
pop
fcomi
mov
inc
testb
jle
decb
xchg
cmc
sahf
or
xchg
or
hlt
js
fxtract
and
xor
xor
jb
rorl
test
pop
or
enter
inc
stc
scas
push
jne
add
jb
adc
dec
ljmp
stc
out
data16
lock
add
cltd
xor
xor
mov
adc
jmp
pusha
flds
jns
cmp
xor
xlat
push
push
sarb
xor
mov
xor
mov
sub
sub
sub
cli
cld
ficoml
movsb
adc
fs
push
das
push
je
das
xor
add
add
inc
push
xor
pop
dec
xor
cmp
cmp
cmp
xorb
cmp
xor
cmp
xor
scas
das
pushf
cmp
das
fnstcw
pop
das
add
sbb
dec
cmp
mov
xor
cltd
dec
mov
cmp
dec
inc
cmp
and
mov
call
dec
mov
sub
mov
lret
cmp
into
dec
fdivrs
rorb
cmp
testb
jl
add
pop
xor
push
ds
aad
sub
out
je
in
insb
jge
push
fs
pop
push
in
push
addr16
dec
gs
inc
push
in
cmp
jecxz
xor
jecxz
sub
jecxz
and
jecxz
pushf
popa
out
xchg
ja
mov
test
lret
jl
out
je
out
insb
sbb
out
pop
inc
in
push
in
decl
in
cld
jmp
repnz
xor
in
mov
xchg
fnstenv
testl
es
or
icebp
test
cltd
icebp
scas
pop
jecxz
js
push
aam
inc
icebp
into
add
and
pop
or
negb
or
out
popa
not
or
or
push
or
testb
mov
testb
mov
ljmp
in
movsl
inc
call
add
stc
icebp
inc
pop
arpl
leave
push
nop
icebp
xor
adc
dec
or
imul
add
hlt
jns
cmp
cmp
cmp
cmp
add
cmp
test
cmp
cmpb
cmp
cmp
adc
xor
sub
xor
and
xor
cmp
add
xor
adc
dec
cmp
clc
inc
cmp
clc
fnstenv
in
shll
hlt
jmp
aaa
hlt
mov
aaa
add
icebp
aaa
adc
or
hlt
mov
cltd
aaa
and
xchg
aaa
xor
test
aaa
xor
mov
add
mov
add
jno
jbe
jns
outsb
sub
mov
into
cs
cmp
cs
cmp
cs
cmp
das
push
cmp
aaa
insl
cmp
xor
cmp
cwtl
xor
ds
xor
ds
idiv
or
add
fildl
add
dec
outsb
xor
xor
mov
xor
inc
jno
testl
lods
inc
daa
xor
pop
xor
inc
iret
xor
inc
xor
sub
dec
xor
in
mov
xor
xor
out
xchg
jl
pop
mov
in
mov
mov
cmc
in
outsb
cld
in
jbe
icebp
adc
cmp
icebp
push
dec
pop
icebp
jne
dec
pushf
lock
icebp
aad
inc
lock
xor
lock
xchg
ret
mov
mov
je
out
mov
jp
jecxz
cmp
daa
push
in
pop
int3
in
pop
fsts
in
jecxz
jnp
out
add
int
inc
in
arpl
xor
std
push
ljmp
insb
jmp
add
out
mov
add
out
sbb
fucomip
jl
mov
mov
test
aas
add
out
cld
pop
call
pop
cld
jns
jo
fsubr
cmp
xchg
fxch
repz
xor
out
or
repz
or
add
lahf
out
stos
add
icebp
mov
add
xchg
sub
cs
leave
cmp
dec
cmp
jo
dec
mov
cmp
jbe
cmp
dec
dec
xor
aad
mov
aad
shlb
dec
cmp
add
xor
das
pop
adc
cs
xor
push
and
or
push
sub
mov
repnz
cmp
cmp
mov
lea
nop
enter
leave
dec
cmp
fnstenv
mov
cmp
cmp
add
add
cmp
pop
xor
push
xor
xor
fidivs
xor
push
aas
mov
xor
aas
cmp
add
iret
aad
add
sbb
xor
inc
xor
adc
xor
inc
inc
xor
inc
popa
xor
inc
pop
xor
inc
mov
xor
inc
add
test
sub
adc
xor
add
add
dec
lret
clc
jo
repz
scas
repnz
push
sbb
in
push
sbb
lock
sbb
lock
mov
lock
in
xchg
and
mov
in
mov
in
je
jecxz
insb
dec
out
jne
out
insl
xor
add
cld
jmp
out
dec
mov
add
inc
and
push
call
cmp
pop
and
fistpl
aad
ret
fstps
add
fldz
rep
or
repz
or
repz
push
aad
dec
out
xor
add
ljmp
cmp
in
ljmp
jmp
gs
shll
inc
add
fldenv
push
or
icebp
pop
pop
push
repnz
icebp
fwait
push
mov
out
nop
add
pop
out
flds
jl
rolb
out
mov
daa
out
pop
add
in
add
movb
in
push
add
addr16
pop
cmp
mov
movsl
aaa
push
leave
lods
aaa
enterw
mov
leave
cmp
mov
xchg
jnp
cmp
jnp
cmp
add
add
call
xor
inc
stos
xor
sbb
inc
sub
cmp
ss
data16
test
or
ljmp
ss
push
cmp
jmp
popa
flds
cli
adc
xor
sbb
sbb
jmp
mov
xchg
das
add
sub
jecxz
je
mov
sub
xor
unpcklps
pusha
adc
xor
adc
xlat
adc
xor
adc
ss
push
aaa
scas
adc
aaa
imul
aaa
or
adc
cmp
pop
hlt
cmp
pop
xor
pop
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
lds
xor
sbb
aas
jl
idiv
bound
add
add
bound
xchg
cmpsl
int3
mov
xor
lret
xchg
xchg
data16
jae
into
inc
jo
into
push
jo
into
insl
jo
into
jnp
nop
lret
lahf
push
push
lret
mov
xor
push
xor
iret
inc
xor
int
xor
iret
aam
jbe
pop
mov
fadds
jne
ficompl
imul
lret
add
pop
inc
aam
pop
test
loope
add
fnstcw
sarl
jmp
sub
shr
xlat
xor
imul
icebp
mov
sbb
mov
mov
flds
add
fnstenv
xlat
sub
out
nop
hlt
jmp
repz
arpl
out
add
lock
add
xlat
jl
int
pop
cmc
pushf
loop
mul
push
popa
fnstcw
aam
call
adc
adc
jmp
add
xor
push
xor
adc
das
fstl
out
fnsave
aad
int
std
das
mov
xchg
in
das
sbb
xchg
dec
sub
ss
fiaddl
and
add
add
add
scas
fldcw
sahf
loope
dec
cwtl
outsl
cmp
xchg
cmp
aas
xlat
xor
xor
cmp
in
pusha
xor
inc
loopne
adc
roll
add
cmp
sti
call
add
stc
push
outsb
cmp
adc
inc
cmp
mov
clc
add
jecxz
add
testl
mov
repnz
cmp
xadd
lds
fdivrs
lds
idivb
ja
sbb
orb
cmp
dec
cmp
insb
cmp
adc
cmp
adc
cmp
pslld
xor
cmp
jl
pop
data16
jg
scas
loopne
push
jmp
int3
dec
mov
loope
std
inc
adc
bound
add
bound
int3
stos
xchg
aas
into
orl
fnstenv
movsb
xlat
jecxz
jl
mov
jne
fstps
pop
push
inc
add
test
int3
pop
xor
lret
xchg
mov
cmpsl
xor
shrl
xchg
jecxz
scas
shl
xchg
stos
sar
xchg
aaa
into
adc
add
push
in
xlat
xchg
adc
outsb
in
pushf
xlat
cmpsb
in
mov
xlat
xchg
mov
test
xlat
jge
fldln2
inc
xlat
mov
in
out
aad
jmp
aad
jmp
imul
mov
and
aaa
fcoml
icebp
inc
faddl
push
fdivl
icebp
addr16
icebp
push
fdiv
icebp
xchg
shl
icebp
cmpsl
fsubl
icebp
xchg
xor
out
popa
lock
fidivl
fiaddl
out
sub
xchg
aaa
mov
or
aaa
imul
sub
add
xor
es
lret
adc
xor
mov
xor
jge
and
mov
xor
xchg
mov
add
mov
sub
movsl
mov
sub
in
int
std
sub
lea
sub
cmpsl
pop
cmpsb
xor
popl
mov
pop
or
xor
outsl
pop
xor
scas
pop
out
push
pop
out
xor
pop
pop
xor
testl
push
add
add
cmpsl
push
push
ss
push
es
pop
cs
ss
pop
idiv
lret
faddl
add
faddl
add
faddl
add
add
jnp
add
mov
add
mov
add
jnp
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
add
out
add
out
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
jnp
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
flds
add
add
cmp
add
cmp
add
dec
flds
add
add
cmp
add
cmp
add
or
add
or
add
sti
fadds
add
fadds
add
flds
add
flds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
mov
aad
add
aad
add
aad
add
aad
add
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
fldl
add
add
cmp
add
cmp
add
dec
fldl
add
add
cmp
add
cmp
add
or
add
or
add
sti
faddl
add
faddl
add
fldl
add
fldl
add
faddl
add
faddl
add
faddl
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
add
fiaddl
add
fiaddl
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
flds
add
add
cmp
add
cmp
add
dec
flds
add
add
cmp
add
cmp
add
or
add
or
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
add
add
cmp
add
cmp
add
or
add
or
add
sti
aad
add
aad
add
add
or
add
sti
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
fldl
add
add
cmp
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
out
add
out
add
out
add
out
add
out
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
add
add
jnp
add
dec
fiaddl
add
add
cmp
add
cmp
add
dec
fiaddl
add
add
cmp
add
cmp
add
or
add
or
add
sti
flds
add
flds
add
fiaddl
add
fiaddl
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
add
jnp
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
out
add
out
add
out
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
add
add
mov
add
jnp
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
add
dec
add
cmp
add
cmp
add
dec
add
dec
add
cmp
add
cmp
add
or
add
or
add
sti
aad
add
aad
add
add
or
add
sti
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
out
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
fiaddl
add
add
cmp
add
cmp
add
dec
fiaddl
add
add
cmp
add
cmp
add
or
add
or
add
sti
flds
add
flds
add
fiaddl
add
fiaddl
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
add
xlat
add
sti
add
sti
add
or
add
or
add
sti
add
sti
add
lret
add
lret
add
mov
add
lret
add
lret
add
mov
add
mov
add
mov
add
jnp
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
add
dec
add
cmp
add
cmp
add
dec
add
dec
add
cmp
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
cmp
add
cmp
add
dec
fildl
add
add
cmp
add
cmp
add
or
add
or
add
sti
fiaddl
add
fiaddl
add
fildl
add
fildl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
xlat
add
dec
xlat
add
cmp
add
cmp
add
dec
xlat
add
dec
xlat
add
cmp
add
cmp
add
or
add
or
add
sti
add
sti
add
or
add
or
add
sti
add
sti
add
lret
add
lret
add
mov
add
lret
add
lret
add
mov
add
mov
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
flds
jmp
popa
flds
jmp
popa
flds
mov
jo
push
and
inc
aas
icebp
sub
popa
shll
push
mov
je
cmp
add
aaa
pop
sahf
pop
cmp
mov
data16
dec
pop
xchg
push
arpl
and
pop
dec
and
and
in
aad
mov
add
into
mov
ret
mov
mov
dec
ljmp
xor
sub
inc
loope
lret
cmp
sub
cwtl
fistl
outsb
inc
sub
imul
add
sbb
pop
ljmp
adc
inc
popf
lds
lea
ret
test
xchg
jecxz
add
leave
aaa
addr16
hlt
pop
jae
dec
jns
mov
loopne
mov
add
lods
repz
fisttps
das
mov
imul
push
push
mov
inc
add
mull
sbb
test
rcrb
jmp
sub
gs
lock
popf
push
insl
xchg
ja
sub
arpl
xor
les
jbe
inc
fcomps
adcl
fcmovu
fiaddl
xchg
dec
mov
inc
pop
lahf
mov
mov
in
sbb
push
adc
jb
push
insl
int3
movsl
add
out
push
lcall
les
mov
flds
inc
movsb
arpl
mov
mov
push
sahf
cmpsl
cli
pop
lods
xlat
loop
icebp
repnz
xchg
fnstenv
or
outsl
pop
int3
movsb
add
xor
addr16
mov
mov
out
jp
cmp
xchg
pop
call
pusha
xchg
push
adc
mov
add
add
mov
stc
add
cmp
xchg
mov
cmc
loope
xchg
push
push
loope
add
addr16
pop
cmp
out
aaa
jns
jo
xlat
jl
ds
out
xchg
fs
cmp
shrb
lcall
push
mov
xchg
adc
in
jmp
push
inc
fsin
push
ret
mov
in
lods
lods
xor
push
jo
mov
push
cmp
flds
imul
add
sti
mov
ror
push
in
push
mov
cmp
fsts
add
push
dec
in
popf
fmull
push
inc
clc
jmp
mov
cmp
jmp
mov
add
pop
push
dec
lock
add
push
inc
cld
movsl
popf
in
add
add
imul
loope
add
dec
dec
inc
hlt
jns
sbb
dec
dec
lock
add
push
cmp
mov
push
mov
fadds
add
sbb
sbb
cli
shrb
in
jmp
add
add
repnz
cmp
leave
aam
dec
mov
rolb
lock
mov
xchg
int3
sahf
adc
dec
in
xchg
call
mov
icebp
mov
test
testb
pushf
add
aad
add
xchg
call
sahf
sahf
fldenv
push
outsl
add
inc
add
add
add
sbb
flds
add
iret
mov
push
ret
add
stos
hlt
orl
jae
dec
cmp
jmp
cltd
add
stos
call
sahf
mov
bound
in
push
adc
int3
sahf
adc
int3
xchg
adc
int3
mov
in
push
pusha
cmp
xor
mov
ds
or
add
add
push
push
push
push
in
lahf
int
mov
xor
ror
push
push
push
push
in
shrl
cmp
push
call
xchg
inc
bound
clc
cmp
add
push
cmp
xor
mov
les
cmp
add
jmp
add
add
hlt
mov
ror
push
in
sbb
flds
jmp
push
cmp
loope
add
les
mov
mov
fmull
gs
add
push
shrb
pop
mov
hlt
cld
ljmp
ror
or
int3
sahf
or
int3
xchg
or
int3
pop
push
in
pop
flds
add
or
push
std
xchg
inc
bound
or
int3
xchg
or
int3
pop
push
in
xchg
mov
pop
jns
sarb
flds
mov
pop
jmp
xor
xchg
push
cmp
loope
or
fiaddl
add
pop
mov
push
inc
cld
fldenv
inc
jmp
or
mov
cwtl
mov
add
sti
add
mov
push
inc
lock
inc
or
punpckldq
xchg
push
cmp
clc
jmp
jmp
dec
or
call
std
or
mov
push
cmp
popa
fwait
cld
mov
cmc
mov
pushf
ror
push
in
inc
mov
inc
pop
push
cmp
add
add
add
dec
call
ficompl
add
inc
lock
lock
cli
add
mov
fimull
jmp
loopne
daa
stc
cmpl
fadds
add
push
add
stos
cmc
adc
fistl
cmpl
daa
stc
mov
fimull
mov
add
inc
or
adc
lahf
in
jmp
mov
push
cmp
add
jmp
in
lahf
add
add
mov
pop
jns
bound
cmpl
lahf
add
add
mov
pop
cmp
push
jp
inc
into
push
or
loop
adc
pop
add
cmc
lcall
stos
call
addl
add
sahf
roll
mov
add
or
jmp
fs
decl
mov
mov
push
adc
pop
push
cmp
jmp
aad
dec
out
lea
push
push
dec
loopne
lret
cmc
in
dec
fcompl
or
in
shrb
popa
cltd
add
outsl
dec
xchg
inc
bound
clc
dec
std
add
push
cmp
adc
ss
popf
sti
add
add
jmp
movsl
hlt
mov
or
int3
mov
in
push
cmp
mov
xchg
inc
bound
add
push
mov
pushf
ror
push
dec
in
push
into
lahf
cld
in
xchg
add
jmp
add
add
dec
sarl
fsts
inc
hlt
jmp
int
dec
lret
clc
add
sbb
loope
clc
add
aad
rorb
push
sbb
or
dec
cmp
jmp
fisttpll
adc
xchg
sbb
dec
loope
dec
dec
dec
adc
cmp
xor
cmp
jmp
in
push
or
or
in
lahf
sarl
inc
pop
xchg
mov
aad
inc
pushfw
ror
or
int3
xchg
or
int3
pop
dec
in
lods
mov
add
dec
cmp
jmp
fmuls
pop
dec
cmp
mov
add
push
orb
dec
push
cmp
lret
aas
bound
in
popf
add
jmp
mov
push
addl
add
fiadds
push
clc
dec
lock
mov
mov
push
push
mov
and
in
inc
into
flds
add
or
arpl
hlt
jmp
mov
cmp
in
jno
jmp
int
je
fs
call
divb
adc
cmpsb
loopne
adc
mov
lods
shl
shll
movsl
inc
jle
mov
fs
or
or
add
mov
adc
push
in
dec
or
jmp
call
in
add
cld
add
pop
orl
in
add
mov
mov
andl
inc
fldcw
jmp
das
adc
cmp
push
addl
push
pop
mov
xor
testb
push
xchg
inc
bound
or
mov
add
pop
cmp
add
mov
sahf
sahf
flds
jne
addl
test
hlt
push
js
cmc
push
sarb
mov
dec
pusha
inc
fcomp
mov
mov
adc
inc
jbe
cmp
fldenv
mov
std
push
mov
xchg
inc
bound
cmc
andl
mov
add
scas
mov
bound
popa
mov
dec
bound
sbb
inc
xor
jmp
add
cld
pushf
add
lret
mov
mov
repnz
jmp
sbb
mov
push
cmp
mov
xchg
inc
bound
in
pushf
add
aaa
lds
push
add
ja
xchg
inc
bound
cmc
sbbl
add
fcompl
ljmp
mov
and
cltd
add
bound
cmc
andl
xchg
popa
or
int3
popf
add
sahf
loopne
outsl
sbb
dec
sub
popf
add
add
push
pop
mov
inc
fidivs
fldenvs
lea
icebp
dec
push
jg
mov
xchg
inc
bound
mov
add
add
bound
pusha
in
pop
loope
inc
outsb
xchg
ror
and
in
lods
mov
add
aad
sahf
cmpsb
add
and
in
mov
jmp
call
loope
or
cmpsl
cmc
mov
mov
jmp
fsts
aaa
cmc
mov
daa
sbb
int3
pop
pusha
in
mov
add
bound
fcompl
flds
add
flds
pop
cmc
add
fnstcw
add
inc
or
in
sahf
cmpsb
fld1
imul
cmp
add
add
pop
std
xchg
inc
flds
add
or
addr16
xchg
inc
fadds
add
xor
in
add
ja
mov
add
add
loope
fcompl
addr16
pushl
xchg
inc
bound
aad
add
movsb
call
inc
bound
call
daa
add
int3
fcompl
inc
add
mov
push
fldenv
add
pushf
add
pop
icebp
xchg
inc
bound
bound
mov
nop
add
les
in
sahf
sahf
fprem1
adc
rcr
inc
bound
stc
sahf
sahf
fsts
mov
cmc
jmp
sbb
mov
jmp
call
sbbl
add
bound
loope
push
fsts
ds
cmc
incl
add
add
sbb
mov
jmp
dec
cld
cmp
loopne
pop
inc
fcoml
add
les
in
cmpsb
add
flds
inc
inc
mov
add
hlt
push
or
decl
xchg
add
bound
xchg
hlt
add
fs
loopne
fsubp
sahf
flds
daa
icebp
add
fldl2t
or
xchg
andl
cmp
pop
xchg
lock
fs
in
add
das
icebp
mov
popa
xchg
mov
popa
xchg
clc
mov
inc
clc
jecxz
call
adc
popa
xchg
xor
loope
cmpsb
flds
inc
sub
jmp
popa
and
hlt
xchg
add
bound
inc
bound
inc
bound
pop
clc
fucomp
mov
xor
add
shlb
xor
leave
ret
xchg
dec
cmp
sbbb
inc
fldcw
adc
inc
bound
and
add
adc
adc
shr
push
ret
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
sti
call
fcoml
scas
lock
mov
push
or
push
xchg
test
push
fucomip
mov
mov
mov
outsb
sbb
pop
jle
daa
jbe
fdiv
pop
add
pop
je
dec
daa
add
sbb
fs
inc
repz
int
insb
daa
mov
dec
mov
lock
cld
movsb
jl
mov
push
loope
ds
cmp
mov
adc
adcb
jl
imul
out
daa
and
adc
xor
shlb
test
stos
dec
in
cltd
adc
test
jmp
out
cmp
popa
hlt
push
data16
pushf
mov
jmp
mov
scas
add
das
cmp
imul
mov
mov
adc
mov
inc
cltd
in
loop
dec
mov
sub
aaa
mov
sub
insb
jne
xorb
movsb
sub
add
jbe
sbb
into
data16
and
loopne
fiaddl
pop
mov
dec
dec
add
and
sub
rcl
loopne
sub
cmovl
repz
out
test
sbb
pop
xor
ljmp
sti
pop
cmpsb
stos
pop
lds
into
loop
mov
xchg
mov
imul
into
shlb
xchg
enter
push
fisubrs
rclb
in
roll
lds
sub
inc
imul
fcmovu
adc
dec
jae
fldenv
cmpsb
push
xchg
mov
jbe
test
push
push
xorl
mov
in
xchg
insl
sbb
into
sub
jno
repnz
out
jo
mov
jg
test
stos
dec
mov
lret
ljmp
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
mov
mov
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
mov
mov
mov
shr
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
add
mov
mov
mov
jmp
mov
pop
ret
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
mov
lea
mov
mov
mov
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
cmpl
je
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
int3
int3
push
mov
sub
push
push
push
movl
mov
movl
movl
movl
mov
mov
movl
movl
mov
mov
lea
push
push
push
push
push
call
test
jne
push
call
xor
jmp
lea
push
push
push
mov
push
push
call
test
je
push
call
xor
jmp
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
pusha
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
popa
mov
mov
mov
mov
push
mov
mov
mov
mov
push
mov
sub
mov
pop
add
mov
movl
mov
add
ret
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
movl
mov
add
mov
movl
mov
add
mov
movl
movl
movl
mov
mov
mov
mov
movl
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
push
mov
sub
movl
movl
movl
mov
xor
mov
movl
movl
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jge
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
add
mov
mov
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
pop
ret
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
mov
push
call
add
sar
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
