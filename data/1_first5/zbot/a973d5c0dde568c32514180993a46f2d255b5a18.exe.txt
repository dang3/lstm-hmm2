push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
mov
lea
mov
mov
mov
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
lea
push
call
push
lea
push
call
movzwl
cmp
je
xor
jmp
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
push
mov
push
mov
push
mov
push
push
call
mov
pop
ret
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
mov
pusha
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
movl
lea
push
push
push
call
cmpl
jne
xor
jmp
push
lea
push
call
movzwl
cmp
je
xor
jmp
mov
mov
mov
mov
push
mov
push
call
push
call
mov
push
push
call
push
call
mov
mov
mov
mov
lea
push
push
push
mov
push
push
call
test
jne
jmp
int
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
popa
mov
mov
mov
mov
push
mov
mov
mov
mov
sub
mov
movl
add
ret
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
push
movl
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
mov
mov
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
movl
movl
mov
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
mov
add
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
push
mov
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
push
mov
push
call
add
sar
cmp
jne
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
shr
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
mov
add
mov
movl
mov
add
mov
movl
movl
mov
mov
add
mov
mov
movl
mov
mov
mov
mov
movl
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
lea
push
call
movl
jmp
mov
add
mov
mov
cmp
jge
cmpl
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
mov
add
mov
add
mov
mov
cmpl
jne
mov
mov
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
jmp
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
add
mov
jmp
pop
ret
int3
int3
add
add
jnp
add
arpl
add
jl
xor
jl
xor
jl
xor
jl
xor
add
pop
dec
add
cwtl
jns
aaa
jmp
cwtl
aaa
adc
stos
aaa
fnstsw
aaa
inc
jns
aaa
ja
das
cmp
jbe
cmp
ja
cmp
je
cmp
xchg
jne
cmp
je
cmp
je
cmp
jb
cmp
jb
cmp
add
cmp
jb
cmp
jno
cmp
aad
mov
jb
cmp
pop
jo
ds
pop
fdivs
ds
jo
or
ds
jo
ds
jno
ds
jno
ds
jno
jns,pt
adc
ret
outsl
dec
aas
outsl
addr16
xchg
outsl
cmpb
outsl
lret
jo
aas
and
aas
add
add
add
push
dec
add
cmpb
jle
xor
cmp
xor
jle
xor
jle
xor
jle
xor
jle
xor
sub
push
jge
xor
jge
xor
jge
xor
jl
xor
jge
xor
jge
xor
dec
add
jnp
add
jnp
add
jnp
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
jnp
add
jnp
add
jnp
add
add
add
inc
add
jbe
jmp
sub
call
and
daa
pusha
jb
cmp
inc
ret
lar
scas
and
daa
pusha
jb
cmp
inc
mov
sub
movsb
sub
xchg
push
arpl
and
jnp
add
cmp
popa
sub
push
sub
dec
cmp
jbe
jnp
add
cmp
jbe
add
push
and
sub
inc
imul
cmp
inc
jnp
add
cmp
jbe
sbb
ja
push
push
arpl
and
jnp
add
ja
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
sub
test
sub
mov
add
mov
and
jnp
add
jae
add
pusha
sub
pop
and
xor
dec
add
pop
cmp
cmp
dec
and
add
sub
push
cmp
add
cmp
cmp
daa
and
add
sub
or
jo
out
sub
insl
arpl
add
lds
outsb
inc
fbld
insl
arpl
add
cmpsb
and
stos
sbb
add
movsb
jmp
xchg
and
lds
outsb
push
mov
jbe
cwtl
cmp
add
and
pop
dec
add
push
sub
push
and
xor
dec
add
cmp
jbe
dec
pop
popa
sub
dec
sbb
add
jnp
bound
jnp
pop
nop
jnp
add
jnp
add
jnp
stc
add
add
jnp
add
jnp
push
add
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
push
add
sbb
ds
mov
push
xchg
dec
jne
imul
and
imul
and
push
je
pop
push
outsl
outsb
fwait
repz
push
fwait
xchg
push
or
jnp
jmp
add
jnp
mov
add
dec
sbb
add
jmp
jnp
or
dec
lock
pusha
jmp
jp
jmp
jnp
jmp
jnp
mov
adc
jmp
jp
jmp
mov
dec
jmp
jnp
out
add
jmp
jnp
out
add
jmp
jnp
jmp
jp
jmp
jnp
pusha
xor
jmp
add
add
jmp
jnp
jmp
imul
jnp
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
add
js
add
js
add
js
add
js
add
js
add
decl
jno
dec
add
js
add
js
add
rorb
add
dec
add
mov
dec
add
int3
cmp
push
push
add
mov
add
pop
add
xchg
push
add
bound
add
add
push
dec
add
jb
add
and
popa
cmpsb
das
add
add
push
push
add
push
pop
add
and
add
cmp
add
adc
add
dec
add
bound
inc
sub
arpl
add
lcall
add
push
add
rolb
add
add
jnp
add
jnp
add
jnp
add
mov
mov
add
add
jnp
add
jnp
mov
sub
imul
add
or
or
int
call
xor
add
scas
sub
push
mov
and
mov
hlt
cmc
xorl
push
or
movsl
hlt
jne
enter
testb
cmpsb
sub
cmpl
push
pop
xchg
inc
push
inc
jnp
jo
mov
dec
je
jecxz
cmpsb
idivl
jmp
add
mov
jmp
inc
ds
add
mov
mov
testb
ret
mov
cmpsl
int
cld
sub
addl
dec
sub
cmp
repz
jmp
mov
dec
jo
adc
mov
test
ret
imulb
aad
cld
xor
cmpb
cmp
sti
inc
jnp
stc
add
test
add
add
js
lds
dec
add
js
push
icebp
add
lods
sar
addr16
dec
cmpsb
std
mov
test
or
test
es
aad
icebp
add
jmp
mov
or
lret
inc
pop
lret
cmpsb
add
jne
mov
push
add
xor
out
push
stos
push
adc
add
jo
cmp
ja
and
std
mov
push
ret
cmpsl
lret
dec
mov
adc
mov
mov
or
mov
mov
add
add
test
rorb
push
add
out
sbbl
push
fidivl
xchg
adc
dec
cli
jb
mov
adc
add
dec
into
jg
bound
add
ret
cmpl
dec
add
and
lret
ret
mov
ljmp
jnp
dec
or
mov
divl
aas
divl
and
hlt
js
nop
jne
leave
mov
add
jne
dec
pop
mov
add
add
jno
add
add
add
jb
add
sub
cmpl
mov
jae
add
rolb
push
add
push
inc
sti
std
out
jl
add
imul
cmpsb
mov
ret
pop
add
dec
cs
stos
ss
jnp
mov
mov
rep
movsl
out
jecxz
popl
pop
stos
jns
movsl
imul
rorl
sub
add
mov
cmpsb
pop
mov
mov
repz
movsl
mov
xchg
push
xor
movsb
shrl
repz
mov
jmp
jp
jmp
mov
repz
push
shll
push
push
mov
xchg
in
jns
jmp
push
ret
xchg
inc
movsl
int3
mov
add
add
mov
xchg
std
adc
add
add
or
add
mov
movsl
loopne
pop
add
pop
add
leave
movsb
ja
stc
or
xor
push
xor
cmpsb
stos
movsb
std
bound
mov
mov
push
adc
push
icebp
mov
xlat
out
cltd
shlb
fidivrl
std
push
jg
ja
xor
std
dec
xchg
shl
add
mov
dec
and
mov
jmp
ja
fstpl
push
jmp
in
out
popf
std
mov
and
sub
out
adcl
std
jne
add
lea
mov
jmp
popf
std
mov
movsb
cmpb
sbb
enter
rcrb
add
and
adcl
jne
add
xlat
popf
push
incl
add
cmpsl
in
insl
sahf
std
mov
mov
or
cmc
or
xchg
addb
jnp
mov
mov
cmp
cld
sub
add
sub
hlt
je
and
repz
inc
or
jl
je
test
sub
inc
jg
lock
adcl
std
inc
cmp
shlb
add
test
add
add
mov
mov
fnstcw
cmp
les
jle
outsl
int
lea
sbb
push
inc
sbb
jmp
orb
add
dec
add
mov
aad
lock
rorb
sbb
add
test
loopne
add
mov
push
andl
mov
and
dec
jmp
jnp
lcall
xchg
push
cmp
add
dec
sub
xchg
mov
repz
push
push
adc
pop
xchg
sub
je
outsl
loopne
mov
mov
dec
add
ret
jmp
inc
aam
fs
push
inc
jle
ja
sbb
push
std
sbb
add
mov
jmp
jle
inc
in
mov
incb
js
mov
jnp
cld
test
pop
aad
lret
sub
mov
jg
js
push
push
add
movsl
sbb
adc
imul
std
add
cmp
jne
test
jge
add
dec
jbe
loope
push
add
mov
or
sbb
call
jmp
push
add
out
andl
je
mov
or
dec
call
sub
sti
cld
jne
mov
or
fdivrp
jmp
rorb
clc
mov
push
pop
or
jge
std
incl
push
or
or
xor
mov
mov
adcl
add
push
push
jnp
jne
arpl
out
ljmp
lea
lods
mov
pop
inc
repz
ljmp
jns
jne
sar
sub
sbb
push
inc
cld
clc
jno
or
call
jmp
cld
mov
cld
hlt
cmp
out
enter
cltd
stc
out
sbb
incl
push
leave
mov
add
adc
hlt
jnp
add
icebp
in
push
movsb
fyl2xp1
out
or
add
je
sub
pushf
and
in
jl
scas
jmp
and
fldt
mov
pop
and
push
loope
add
dec
jmp
mov
cmpsl
add
jnp
int3
jno
cmpsb
and
inc
daa
dec
mov
jno
cmpsb
jns
add
mov
add
ja
jg,pt
shll
add
dec
jmp
ss
loop
jmp
mov
inc
inc
adc
xchg
push
pop
clc
sub
xor
ja
scas
mov
jmp
inc
popf
ja
iret
sub
add
add
popa
xchg
cmc
sbb
adc
test
ljmp
popf
ja
and
and
mov
jp
ret
push
add
sub
scas
mov
outsb
pop
popf
std
cmpsb
mov
dec
and
std
cld
cld
loopne
jg
rcrl
fcmovnbe
xchg
cmp
dec
add
aad
sub
int
sub
push
fcmovb
add
std
mov
and
cli
xlat
mov
jmp
cwtl
in
imul
mov
add
cwtl
in
jnp
std
mov
test
jne
jns
call
cmpsb
ds
jne
cmpsl
ja
jb
aaa
or
push
std
jne
jnp
call
sbb
sti
frstor
push
mov
rol
call
xchg
cmpsb
push
jmp
xchg
in
or
test
xchg
test
cmpsl
xchg
in
pop
movsl
std
mov
in
jmp
or
fiadds
add
jge
jnp
add
cmp
xchg
jg
add
lret
movsl
push
call
repnz
aad
into
cltd
dec
movsl
add
cmp
add
adc
cmp
xchg
movsl
ljmp
pop
fdivrp
xchg
fnstcw
mov
insb
cld
jecxz
loop
jnp
insb
or
add
out
call
dec
addr16
inc
add
dec
fdivrp
aam
pop
call
mov
dec
out
lcall
push
cmpsb
sub
jae
repz
lcall
test
add
fldt
add
fcmovnb
xchg
in
out
lea
cmp
push
add
push
cld
and
mov
add
add
mov
jnp
cs
ja
jmp
jnp
add
test
xchg
fsubrs
add
inc
mov
lods
or
mov
add
mov
scas
add
cli
lret
cltd
push
jb
add
and
bound
inc
mov
stc
pop
and
dec
add
and
std
rorl
adc
add
cmp
jg
pop
dec
icebp
popl
ja
mov
dec
add
stos
subl
js
ja
and
jg
mov
sub
js
push
add
adc
popf
pop
mov
fiaddl
shlb
lret
sub
pop
push
cmp
push
std
add
mov
add
dec
inc
movsl
ljmp
add
sahf
arpl
cmp
gs
adc
dec
sub
je
ja
sbb
pop
leave
mov
jg
les
push
push
push
sub
pop
test
mov
adc
decb
dec
xchg
les
push
add
adc
dec
adc
adc
inc
pop
mov
divl
fsubl
cmp
mov
daa
divl
add
xor
jae
scas
inc
scas
sub
repz
add
sbb
cmp
jmp
xor
out
addl
mov
ljmp
rcrb
jnp
jp
cli
push
push
sub
and
lret
js
or
jmp
rorl
testb
jnp
insb
or
in
out
incl
cmp
cld
dec
push
call
add
jecxz
xchg
jnp
stos
outsl
lds
hlt
fsubl
jg
pop
cwtl
jl
add
jae
dec
mov
fdivp
mov
xchg
fsubp
xchg
cs
add
mov
add
xor
leave
data16
xchg
and
arpl
sbb
out
fs
jbe
movsb
add
in
xchg
hlt
jecxz
inc
add
inc
xchg
in
andl
dec
add
mov
cmpsb
nop
ficomps
lock
xchg
ljmp
xchg
ja
fistpll
xchg
fcoms
cli
xchg
leave
shll
nop
or
or
push
lcall
push
dec
dec
add
dec
xchg
add
out
dec
add
js
or
pushf
sbb
jmp
add
add
xchg
add
jmp
cltd
xchg
add
mov
cmpsb
repz
js
or
inc
addr16
jb
add
inc
lcall
adc
rclb
jbe
push
testb
dec
cmpl
push
cli
inc
bound
mov
das
push
cli
push
in
add
scas
ja
add
sub
cmpsb
add
mov
and
decl
inc
ret
mov
clc
mov
cmpsl
mov
bound
pop
nop
ja
shrl
sbb
rcrl
push
jnp
stc
cmpsb
xchg
loop
xchg
incl
xor
out
pop
or
add
push
insl
inc
add
add
push
push
adc
adc
xchg
icebp
incb
loop
cmp
lods
hlt
enter
cs
mov
rcrb
in
jae
es
jmp
xchg
lock
and
xchg
outsl
push
add
mov
and
or
sbb
lea
rorl
dec
push
loope
dec
jmp
add
ja
lret
mov
mov
fmul
repnz
jg
ss
xlat
addr16
jae
push
or
jmp
inc
inc
jmp
je
adc
push
stos
add
jmp
lock
push
xchg
call
and
sub
push
xchg
sahf
or
cmpsb
mov
jnp
adc
outsl
std
add
pop
dec
jmp
cmp
xor
add
jae
add
inc
add
inc
icebp
mov
inc
jmp
mov
lds
or
jg
ja
adc
jmp
push
inc
ljmp
push
push
and
ja
hlt
jo
jmp
outsb
push
inc
push
push
jle
add
call
or
xchg
ja
mov
add
scas
mov
jmp
inc
xchg
push
xchg
jae
add
push
loopne
push
xor
inc
add
aas
jnp
or
add
idiv
push
daa
add
iret
inc
push
dec
arpl
sarb
imul
es
add
loop
jge
xchg
dec
jmp
inc
fisubl
jg
outsl
cmp
cmc
sbb
mov
xchg
and
dec
jecxz
std
xor
cld
incl
ret
roll
inc
add
mov
push
lret
ret
push
mov
mov
lods
or
iret
stos
cmpl
jnp
add
mov
lret
add
sti
add
sti
add
add
or
add
in
sub
mov
add
add
add
jnp
cmp
mov
adc
je
and
cltd
add
add
mov
popf
jmp
adcl
add
jnp
je
insb
shufps
sbb
jmp
cmp
lock
jmp
jnp
jle
push
stos
or
inc
sub
lcall
add
or
cmp
pop
loopne
sbb
jmp
lods
jmp
jo
ss
sbb
fsubl
or
add
adc
sub
add
dec
add
and
add
dec
jmp
sti
mov
or
pslld
add
cmpsb
add
dec
add
pop
push
jmp
add
rclb
jmp
pop
dec
add
cmp
sub
jmp
mov
outsl
add
out
adc
loop
add
into
movsb
push
ljmp
jbe
enter
ljmp
std
fcmovbe
and
js
add
mov
jecxz
adc
nop
or
imul
mov
jl
jbe
add
mov
or
outsl
add
xchg
test
add
loop
bound
add
cmp
mov
jecxz
loop
jge
push
push
shll
inc
adc
je
test
jmp
adc
call
aad
jmp
add
push
cmpl
divl
inc
loop
popa
stc
sbb
cmovae
loop
add
add
das
into
repnz
std
cmpsl
push
call
pop
into
out
out
sbb
mov
push
jnp
aam
cmp
add
sub
xorb
add
int3
out
pop
insl
add
jnp
rolb
test
add
jne
add
repnz
and
ss
imulb
add
add
xchg
or
push
cmp
jnp
xlat
inc
cmp
jbe
or
jne
mov
bnd
pushf
cld
ficoml
dec
push
xchg
lahf
mov
pop
outsl
mov
outsb
push
fnstcw
in
mov
jecxz
mov
in
mov
jns
jmp
arpl
or
add
mov
add
repz
add
dec
cmp
out
int3
fcoms
aam
or
fcoms
inc
mov
jmp
mov
jnp
pop
jecxz
mov
jecxz
fadd
push
stos
dec
aaa
iret
ds
mov
jbe
add
sbb
xchg
mov
mov
js
lods
jp
inc
dec
mov
add
add
std
inc
bound
mov
push
mov
mov
xor
std
adc
std
and
insb
inc
jp
out
imul
cmp
aam
and
push
into
ljmp
mov
mov
sarb
cmpsb
les
xchg
lods
mov
insb
stos
jns
mov
sar
cmc
mov
inc
loopne
add
fcomip
out
adc
mov
mov
inc
mov
std
jmp
iret
out
movsl
mov
in
call
dec
xchg
ljmp
ljmp
in
pushl
mov
in
call
mov
add
out
test
pushl
dec
or
scas
test
add
add
popf
mov
jnp
popf
decl
shl
mov
ja
test
clc
xchg
in
mov
shr
add
add
ss
dec
test
in
jl
jmp
mov
or
xchg
call
mov
lcall
push
cmp
jnp
xchg
in
push
aam
jb
add
xorb
out
add
sbb
mov
add
inc
mov
jecxz
out
cld
nop
out
and
jne
jmp
out
in
fsubr
fmull
aad
jnp
aad
jbe
out
xchg
mov
push
mov
xorb
insb
rdmsr
push
stos
add
test
dec
cmp
ret
xchg
mov
das
fmul
cmpsb
fstpt
jmp
add
clc
or
add
pop
adc
ja
xchg
or
dec
adc
xor
add
cmp
dec
jmp
push
adc
clc
mov
add
mov
jnp
add
out
cmp
push
xchg
adc
xchg
ror
std
mov
xchg
shl
pop
mov
push
push
jb
jbe
push
add
cmpsl
xchg
push
xor
push
inc
jmp
cmpsl
xchg
push
bound
ret
js
ja
pusha
daa
push
mov
ljmp
push
je
pop
into
cmp
pop
scas
dec
mov
mov
jbe
scas
ja
or
and
push
mov
and
push
mov
test
add
add
dec
les
rorb
neg
dec
add
aam
add
pusha
push
add
outsb
add
xchg
push
adc
bound
lds
xchg
std
jne
mov
or
imul
cld
jne
mov
std
jne
test
lret
ret
push
mov
inc
push
push
jnp
pop
or
add
lods
add
cld
mov
inc
scas
or
push
or
ljmp
sub
rcl
nop
test
ja
sbb
sarb
or
lds
push
clc
sub
jmp
into
push
add
xor
cs
or
into
dec
mov
mov
call
shll
jnp
sub
jne
mov
inc
add
dec
rorl
test
pop
adcb
add
and
inc
jnp
push
shl
addl
or
sub
daa
pushf
rol
testb
inc
or
jl
adc
and
testb
dec
push
jl
pop
stos
add
mov
roll
add
aaa
lock
inc
jae
sub
into
jecxz
push
arpl
dec
jmp
cmp
sbb
ja
xorl
push
sti
inc
add
lds
call
jne
add
js
inc
imul
lret
stos
je
push
jb
sbb
or
in
dec
add
or
xchg
das
jp
xchg
aas
xchg
jb
push
jmp
add
add
adc
mov
xchg
stc
div
sar
incl
xchg
ja
testl
push
jo
dec
add
enter
movsl
xchg
dec
enter
enter
int
xchg
add
push
sub
andl
inc
push
pop
xchg
jl
push
cmp
loope
inc
cmp
cli
jge
out
xchg
jg
add
popa
inc
nop
loope
inc
cmp
cli
jge
cmpsb
pop
xchg
jg
popa
inc
add
or
mov
call
lcall
pop
push
inc
mov
sarl
cld
fldenv
or
jmp
mov
and
std
inc
xlat
lret
jle
outsl
fwait
shll
jno
sbb
pop
or
ret
add
hlt
fiadds
add
out
scas
nop
add
ret
cmp
in
xchg
push
nop
lods
addb
pop
push
inc
ss
incl
fstpt
clc
mov
mov
pop
or
je
add
fcom
mov
add
mov
mov
add
subb
jbe,pt
add
repnz
push
xor
push
add
ja
ljmp
dec
loopne
test
aas
add
movb
dec
jmp
cmc
lods
jmp
jnp
ljmp
pop
roll
jnp
int
push
roll
mov
pop
cmp
sub
leave
cwtl
into
les
faddl
xchg
int
stc
loop
mov
jae
int3
es
xchg
jbe
aad
add
push
int
dec
roll
dec
roll
rorl
add
add
inc
mov
ljmp
xchg
and
or
cmpl
std
out
ja
xor
fucomi
js
fsts
mov
jle
sarl
out
mov
test
and
stos
les
jb
add
std
cmp
push
push
pop
or
dec
sub
pop
pop
mov
or
jg
fsubr
js
sub
in
shr
add
add
bound
or
dec
mov
add
push
add
xchg
filds
add
std
inc
cld
add
popl
inc
lcall
add
push
gs
lcall
lcall
mov
incl
mov
cld
jne
testb
or
idiv
sbb
inc
ljmp
push
push
jmp
adc
incl
mov
and
push
je
ljmp
arpl
scas
add
lds
pop
push
hlt
and
scas
add
add
shll
jne
pop
movsl
icebp
adc
jl
mov
push
clc
test
fmulp
or
test
add
jecxz
add
popa
mov
dec
inc
lret
fmulp
push
cmpsl
sub
mov
sti
das
mov
jg
adc
mov
jns
xor
pop
add
dec
pop
sub
inc
subl
add
add
cmp
dec
pop
iret
cld
cld
enter
cmpl
pop
adc
add
and
lods
xor
jae
lret
dec
mov
xchg
sbb
ja
xchg
cli
mov
addl
in
xchg
inc
mov
jmp
jns
jmp
ja
push
jge
iret
scas
loopne
iret
out
or
or
push
add
add
test
xor
add
testb
mov
adc
nop
or
addr16
lds
leave
inc
push
cmpsl
jnp
loope
dec
std
fdivl
inc
jmp
xor
fucompp
js
shlb
push
xchg
pop
and
cld
lea
inc
jmp
cmp
out
js
add
mov
jnp
in
adc
push
dec
add
xchg
inc
fnstcw
add
mov
add
call
adc
push
adc
ja
ret
pusha
aas
and
dec
or
rorb
add
adc
add
xchg
pop
xlat
xchg
dec
mov
cmp
mov
mov
or
cld
mov
ljmp
or
push
push
aam
and
lret
ret
push
mov
into
cld
add
jg
and
add
add
add
lret
ret
sub
test
push
add
pop
push
decl
imul
push
ljmp
pop
mov
fwait
hlt
out
adc
pop
and
jnp
push
cld
sub
push
or
jp
imul
push
add
jle
fcomi
and
leave
cmp
push
add
pop
incl
add
out
das
and
flds
jne
dec
or
ljmp
cmp
rorb
int
incl
lahf
repnz
jnp
clc
mov
outsl
nop
push
or
inc
out
rol
rcrb
sub
add
ja
mov
data16
xchg
js
mov
lock
add
add
add
add
int
sti
je
repnz
adc
and
lock
sbbb
ret
movl
mov
dec
jo
add
fisubl
jp
push
or
imul
arpl
divl
dec
or
inc
sti
xchg
loope
or
arpl
imul
incl
loope
push
imul
add
test
loope
cmp
sbb
and
xchg
insb
cmp
xorb
idivb
inc
in
jb
adc
adc
fsts
push
push
and
mov
inc
ja
dec
jnp
push
jb
andl
stc
mov
jmp
pop
test
icebp
js
push
cltd
push
out
sarb
std
mov
add
jns
add
ljmp
dec
sub
add
jne
jl
or
pop
ret
xchg
std
call
loope
pop
xchg
rcll
add
push
sub
xorb
xchg
cmpl
pop
dec
inc
push
push
jbe
loope
xor
push
add
push
ret
mov
fisttpl
std
push
cld
add
loopne
or
fs
jecxz
or
sbb
push
lds
push
add
loop
inc
clc
mov
add
addr16
add
sbb
ljmp
dec
inc
jnp
shll
mov
jnp
test
xor
subl
push
je
fdivrl
clc
xchg
repz
xchg
decb
sub
incl
sti
sub
je
mov
inc
jnp
shll
add
add
xchg
xchg
inc
dec
xlat
push
ljmp
dec
inc
jnp
shll
dec
mov
dec
std
aam
addr16
mov
incl
addr16
xchg
and
in
in
cli
fisubrs
lock
xor
mov
mov
push
and
insl
in
je
mov
xchg
and
dec
pop
pop
add
clc
xor
aaa
imul
jmp
out
inc
push
add
in
out
sbb
and
mov
or
lret
sub
add
ljmp
dec
push
and
jmp
incb
les
inc
jae
mov
jae
rcll
jmp
add
push
dec
add
nop
inc
dec
sub
xchg
xlat
jmp
hlt
popl
jmp
mov
dec
add
cld
outsb
cmp
std
pushf
push
je
pop
cmp
mov
inc
je
inc
jle
or
jmp
std
ret
js
mov
cmp
cmpl
jmp
fcompl
or
cli
lea
mov
push
lds
cli
fildll
inc
loop
ret
lea
add
dec
or
outsb
ja
pop
cld
incl
ret
xchg
add
std
push
push
add
xchg
cmpsb
call
shrb
mov
push
cmp
decl
pop
or
add
inc
mov
pushl
add
movzbl
aaa
popa
dec
add
jnp
ret
push
in
sarb
mov
stos
js
enter
call
shrb
fcompl
mov
add
movsb
pop
leave
mov
stos
mov
dec
ss
push
dec
cld
dec
or
out
test
jnp
xchg
adc
add
jnp
fisttpll
add
add
mov
out
jg
stc
cmp
pop
jmp
jno
fs
add
stos
lods
mov
dec
jecxz
scas
jle
push
jp
scas
es
out
loopne
adc
mov
aad
inc
xchg
xchg
icebp
jl
pop
mov
cli
repnz
ss
lods
outsb
dec
jmp
iret
mov
add
jo
imul
push
adc
pop
add
push
xchg
scas
clc
mov
push
sub
decb
lock
pop
bound
in
int3
dec
jo
jae
mov
lock
mov
dec
in
cmp
in
add
add
jge
shll
sti
lret
sti
insb
add
push
pop
cmp
shl
sahf
mov
or
repz
or
add
dec
dec
icebp
mov
ret
clc
sbb
sub
cli
add
sahf
fimuls
cmpl
shl
xor
add
add
ljmp
shll
sti
lret
sti
je
push
sub
testb
mov
jnp
mov
mov
jge
lea
jecxz
dec
jp
ret
adc
add
test
stc
xor
xchg
inc
decl
sbb
lea
mov
sti
xor
insl
clc
xor
mov
subb
and
adc
ret
dec
mov
stc
xorl
mov
fs
dec
rorb
clc
jge
lea
inc
mov
in
stos
add
xchg
ret
adc
mov
subl
jnp
mov
xlat
cmpsl
fiadds
pop
ss
ds
push
xor
mov
cmp
add
loope
xor
cltd
mov
pop
or
cwtl
std
js
repnz
cmc
cli
cwtl
xor
mov
push
pusha
add
mov
js
mov
mov
pop
add
cs
push
js
stc
test
in
test
mov
fs
add
pusha
mov
mov
nop
mov
js
cmp
sbb
nop
repnz
dec
fldenv
notl
xor
testl
movsl
loope
sbb
les
push
sbb
mov
add
jo
mov
mov
je
fucomi
into
push
sub
push
mov
xor
adc
inc
daa
push
js
add
aaa
xchg
or
dec
fdivr
sbb
fimull
xor
sub
pop
add
add
xor
repz
fnstsw
ljmp
pop
stc
lret
mov
push
in
pop
add
ja
mov
into
arpl
rol
push
add
add
xlat
cli
cli
out
stc
popf
jbe
push
test
pop
add
enter
sti
jo
xor
rcrl
inc
push
add
add
fldenv
xor
into
add
add
add
mov
add
jp
rcrb
rorl
popa
clc
lea
mov
rorb
jle
clc
xor
mov
xchg
outsl
cmp
nop
or
sbb
clc
xor
rcrl
lea
pop
add
or
mov
cmp
mov
add
add
mov
test
cmc
imul
jmp
orl
rol
je
mov
mov
mulps
in
cmp
lret
div
dec
test
je
cmp
in
mov
loope
mov
ljmp
movb
mov
mov
or
add
add
mov
dec
call
mov
je
pop
jnp
dec
xor
add
jno
insb
sbb
test
push
mov
xchg
mov
push
shl
mov
mov
dec
sub
add
jg
add
dec
stos
js
sub
orb
repz
repnz
pop
pop
add
negb
out
les
arpl
mov
xchg
push
fimuls
xchg
mov
add
add
ljmp
shll
sti
mov
sbb
add
sub
push
add
icebp
xor
data16
jne
data16
test
cmc
aas
mov
ljmp
rcrb
sti
insb
in
addr16
jo
rcr
test
mov
pop
fiaddl
aad
push
ret
test
push
push
cli
or
pop
xchg
js
add
mov
or
mov
clc
xor
into
mov
mov
xchg
stos
push
adc
rcll
add
sbb
add
pop
sti
into
inc
cmp
inc
mov
adc
dec
mov
stc
xor
xchg
push
add
adc
xor
mov
mov
cli
or
pop
clc
lea
nop
int3
add
jno
ret
sarl
push
popf
test
jae
sub
add
xlat
repnz
repz
mov
js
mov
mov
or
mov
addl
aas
and
cmp
add
cmc
mov
adc
repnz
subb
cli
mul
or
add
rol
js
mov
test
add
cmp
mov
inc
add
arpl
test
lods
pop
mov
mov
aas
repz
js
xlat
les
mov
jno
addb
pop
call
or
pushf
mov
gs
testl
pop
sbb
add
cld
push
lds
pop
call
mov
and
incl
and
sub
add
aaa
call
add
add
sub
out
int
or
lds
jge
mov
pop
add
mov
dec
add
jae
dec
loope
std
or
pop
aas
push
mov
into
fs
xor
pop
pop
es
xchg
shr
stc
mov
mov
les
arpl
stc
or
subl
add
js
and
or
in
xorl
js
ficoms
mov
std
jbe
add
insb
sti
das
adc
push
repnz
mov
sbb
or
add
cmpsb
mov
jmp
sbbl
call
and
inc
jno
mov
leave
roll
or
lahf
sahf
push
push
add
add
in
popf
add
cwtl
xor
rol
xor
or
jge
jecxz,pn
add
or
mov
repnz
call
jmp
mov
jnp
inc
js
filds
pop
add
jnp
xlat
neg
cmpl
cmp
adc
mov
mov
adc
add
xchg
out
aas
add
sbbb
je
add
fcom
jle
jnp
adc
add
push
mov
jle
jnp
popf
mov
fnstsw
add
lret
jle
jnp
adc
add
xor
xchg
pop
jle
jnp
aaa
in
dec
and
movsl
add
lds
mov
stos
xor
mov
aad
mov
add
add
push
jmp
adc
mov
xchg
pop
cmpb
bound
mov
shl
mov
arpl
sub
cmp
out
por
js
popl
negb
inc
jnp
test
addb
xor
pop
outsb
pusha
inc
jnp
push
test
por
jbe
inc
jnp
add
hlt
aam
jmp
add
lea
add
test
roll
data16
push
sbb
aam
mov
sub
cmc
rorl
mov
jg
inc
loope
jnp
inc
popa
ja
sub
cld
leave
mov
in
xchg
mov
pusha
mov
sub
ljmp
add
dec
mov
faddl
add
inc
popa
mov
inc
mov
pop
ret
add
add
shll
sarb
cltd
mov
cld
xor
mov
dec
inc
clc
xlat
mov
cld
sub
sahf
ret
mov
mov
add
jmp
mov
sbb
inc
ficomps
add
add
add
inc
aam
andb
jmp
inc
and
mov
fstps
fiaddl
jnp
sbb
jnp
hlt
jecxz
mov
add
jp
jnp
inc
cld
jp
popf
mov
jbe
lock
jp
in
clc
out
sbb
add
pop
scas
jne
jo
or
cld
mov
jne
add
ljmp
add
rcll
add
leave
mov
aam
les
repz
insl
sbb
shrl
cmp
add
push
dec
leave
js
jmp
mov
lods
popf
xchg
scas
mov
dec
jo
imul
and
xchg
aaa
jbe
cmpsb
jmp
cmp
jg
xchg
stc
stc
fcomi
add
adc
loope
hlt
xor
les
lods
mov
cs
ds
inc
stos
pop
pushf
cltd
mov
add
push
mov
addl
leave
mov
jmp
mov
nop
out
leave
jg
int3
roll
adc
jecxz
imul
jmp
cmp
dec
mov
ret
js
ja
add
leave
pop
ja
add
mov
push
cli
add
dec
ja
gs
add
js
add
mov
shll
add
out
adc
pop
ret
lret
xchg
loop
std
scas
sti
push
cld
into
rorl
jmp
loop
std
call
sti
dec
std
cmpsb
rcrl
icebp
dec
insb
sbb
std
mov
call
mov
test
movsl
std
pushl
add
cwtl
pushf
add
shll
mov
jmp
call
lret
ret
push
mov
jl
push
test
cld
incl
cmp
pop
push
in
aad
std
or
cmp
push
in
pushl
ja
mov
fadd
jle
fiaddl
add
jp
std
jne
loop
mov
mov
push
sbb
push
jnp
sub
jmp
popa
cltd
cs
stos
cmp
jno
fcmovnb
sarl
push
les
lcall
sbb
push
sub
jg
incl
sub
or
mov
sub
jmp
outsl
shll
push
adcl
jnp
xor
add
mov
push
pop
add
jnp
mov
sbb
out
sahf
add
mulb
add
dec
nop
loopne
lds
clc
add
add
test
in
test
ds
mov
dec
fiadds
gs
push
jecxz
jl
mulb
lds
sahf
jl
into
daa
stos
movsb
sbb
jnp
sub
jae
lods
lret
hlt
pop
and
out
dec
jmp
jnp
mov
icebp
cmp
ds
nop
call
notl
jecxz
test
dec
sub
ss
out
stc
jg
pop
cli
stc
fcmovnbe
add
xchg
ret
mov
mov
ljmp
mov
mov
dec
ljmp
pop
and
jmp
mov
add
xor
sbb
xor
add
dec
std
pop
ja
add
cld
inc
ret
push
add
js
ja
fisttps
es
add
ja
je
pop
cmp
jmp
lock
adc
pop
ja
loopne
fsub
ffree
push
aad
cmp
jmp
js
ja
mov
decb
add
add
ljmp
mov
leave
mov
add
jl
add
push
movsb
push
inc
test
dec
add
cmpsb
inc
add
imul
lds
adc
inc
clc
mov
adc
scas
and
insl
push
call
icebp
push
mov
push
lret
add
add
sub
loop
adc
jnp
hlt
icebp
xchg
adc
fcmovb
mov
cmpsl
add
adc
mov
into
push
cli
shl
jno
add
push
call
movsb
cmpsl
aas
ljmp
dec
ljmp
clc
cmpsb
andl
cmp
add
test
jne
or
cmpsl
jne
cmp
add
in
sti
mov
andb
mov
sub
mov
dec
pop
jg
aad
push
lock
js
push
ds
sti
repnz
push
pop
ret
sbb
idivb
mov
lock
pop
in
mov
sbb
jnp
out
jbe
push
sbb
dec
jmp
mov
push
fdivrp
add
adc
and
jnp
sub
or
outsl
xchg
clc
mov
push
jnp
jmp
test
xchg
add
je
movsb
add
sbb
jmp
shrl
add
pop
push
mov
dec
ljmp
xchg
dec
ret
xchg
ds
in
test
sub
adc
jmp
or
sahf
adcb
mov
add
inc
add
inc
or
jle
dec
add
push
add
add
dec
std
aam
imul
or
jae
add
xlat
push
add
js
inc
jns
inc
add
or
mov
sbb
mov
imul
test
rclb
sarb
jmp
mov
bnd
add
jne
jmp
add
xchg
xchg
add
xor
lds
mov
add
inc
hlt
add
push
push
push
ss
add
nop
jbe
mov
inc
jmp
adc
ljmp
pusha
cld
jne
mov
mov
adc
movl
aad
inc
fdivrl
das
add
mov
mov
add
add
sbb
sarb
adc
jmp
lds
jnp
mov
mov
ja
jl
shll
roll
mov
adc
dec
stc
lods
clc
push
int3
mov
jmp
lock
mov
pop
mov
cld
adc
fmuls
push
call
add
cld
xchg
shr
inc
mov
pop
shll
sahf
pop
jecxz
das
mov
jnp
repnz
xlat
push
in
mov
cmp
push
mov
push
dec
push
or
xor
stos
adc
adc
push
stos
or
mov
push
adcl
cmp
or
fildl
mov
and
push
push
andl
or
jo
add
ds
lahf
lea
jmp
and
rol
mov
jmp
mov
sti
push
sbb
xchg
push
std
cltd
pusha
dec
add
js
sbb
pop
inc
add
int3
jg
js
sbb
xchg
xchg
add
or
std
sbb
push
ja
std
fimull
xorl
out
push
inc
add
xor
jg
js
adc
ds
aam
imul
std
aam
push
ja
or
lret
ret
push
mov
aaa
push
call
pop
pop
push
cmp
add
ja
push
loop
lods
inc
ret
mov
bound
loop
lods
inc
ret
lret
jg
xchg
dec
adc
inc
push
jne
mov
clc
cmp
in
sbb
mov
adc
ss
jmp
std
jne
movsb
dec
mov
sbb
jle
mov
incl
ljmp
and
cmpl
pushf
jne
std
mov
hlt
sbb
or
mov
incl
add
test
or
push
xor
inc
popa
test
or
imul
adc
lahf
jne
mov
pushl
lock
lea
loope
test
jne
mov
leave
ret
xor
push
in
lock
mov
daa
sbb
sahf
mov
inc
jmp
add
mov
mov
sub
dec
shll
jecxz
dec
popf
in
sub
cltd
int
lahf
jnp
sti
add
or
dec
jle
shll
popf
mov
sub
jp
pop
inc
stos
std
rcrb
dec
fcompl
dec
int3
mov
dec
push
mov
scas
push
insl
dec
lods
incb
movsl
pushf
pop
dec
jmp
jnp
sub
add
add
xchg
push
jbe
add
jnp
add
pop
ljmp
les
jmp
lret
sub
inc
rcrl
cmp
add
test
and
cmc
push
cld
push
divl
fs
ss
dec
insb
mov
dec
mov
add
shll
lar
call
mov
add
add
dec
inc
idiv
addr16
js
xchg
stos
adc
mov
pop
add
js
xchg
dec
add
push
add
pushf
inc
add
xchg
shll
or
das
dec
jmp
adc
lea
xlat
aas
sub
js
dec
rcll
jns
push
add
mov
push
add
xchg
pop
push
call
leave
adc
cli
xchg
dec
inc
shl
jbe
add
push
fdivrp
mov
pop
push
out
or
xor
xchg
ret
cld
lea
push
push
mov
cmp
pop
jmp
adc
pop
or
add
cld
ljmp
pusha
divb
mov
mov
adc
pop
jmp
mov
dec
adc
test
or
and
addr16
add
add
jmp
ret
fdivl
push
cwtl
ljmp
mov
add
inc
sub
ljmp
cmp
add
jmp
cmp
fwait
call
divb
ljmp
leave
cwtl
ljmp
sarb
shrb
push
dec
pushf
cltd
push
or
les
test
dec
jl
add
and
xchg
cltd
and
test
test
dec
pop
packuswb
repz
push
push
fdecstp
dec
cmp
mov
cmp
outsl
and
inc
insb
adc
imul
xor
shl
bound
pop
pushf
dec
in
adc
fcompl
xlat
mov
push
mov
or
add
add
jne
ljmp
std
adc
dec
ja
xchg
insl
std
adc
movsb
xchg
dec
std
hlt
sbb
ja
add
push
add
dec
ja
loopne
cld
pop
repz
sar
mov
repnz
push
ss
add
or
dec
lds
int
test
popl
jmp
orb
std
xchg
repnz
add
dec
dec
push
pop
xchg
in
in
ret
adc
jns
add
enter
cmp
inc
add
jbe
loope
testb
cmp
lock
pop
popa
out
jne
aad
or
fsubl
jne
roll
jmp
fldl2t
in
in
push
add
stos
or
add
aam
adcl
adc
dec
ljmp
or
mov
or
ds
xor
jnp
sti
fmull
loop
sub
dec
sub
push
push
arpl
add
shll
lea
mov
add
loope
je
popf
push
add
xor
sar
mov
add
mov
add
clc
jno
addl
inc
jnp
or
dec
cmp
fiaddl
testb
dec
cmp
jnp
add
mov
xor
add
cmp
add
cmp
cmp
add
cmp
call
inc
add
dec
inc
add
dec
push
add
outsb
jmp
sub
and
xchg
rorl
add
add
shr
cmp
es
jnp
jmp
nop
jnp
and
jg
jnp
add
jmp
cmp
in
mov
dec
dec
pxor
incb
jmp
ds
inc
sarl
cmpl
jmp
xchg
or
dec
push
sub
jne
jge
mov
repnz
loopne
mov
popa
dec
push
mov
add
out
or
idivb
cld
inc
mov
push
mov
repnz
or
out
mov
sti
cmp
inc
xchg
push
sahf
or
jbe
ds
mov
rclb
movsl
add
jmp
mov
push
push
popf
add
jmp
test
negb
sbb
adc
sbb
push
mov
push
bound
add
iret
lds
incl
jae
add
push
std
jne
stc
cmp
xchg
loope
inc
cmpsb
bound
add
jmp
imul
jp
adc
cld
fildll
jmp
mov
xchg
loopne
push
or
lret
into
mov
jmp
sarl
pop
push
mov
or
add
push
inc
inc
push
roll
in
adc
ljmp
test
push
xchg
decl
sbb
xchg
mov
add
roll
incl
aas
cltd
test
call
lret
adc
or
mov
fs
push
add
xor
xchg
incl
add
nop
mov
aam
jmp
add
push
add
xor
add
jecxz
incl
lock
xchg
sbb
js
add
loop,pn
fmull
sbb
ja
jmp
rorl
add
adc
push
inc
or
lods
mov
cld
xchg
xchg
or
xchg
xchg
sahf
in
pop
xorl
mov
inc
shll
jge
aam
movsl
int3
xchg
insb
sahf
push
cwtl
mov
jmp
add
repnz
mov
add
push
xchg
dec
inc
push
xchg
jnp
cs
movsl
mov
stc
enter
inc
out
nop
into
movsl
insb
xchg
or
fdivrp
sbb
cmp
hlt
inc
dec
or
inc
pop
jae
popf
mov
inc
add
sub
std
cs
push
fs
ljmp
mov
ja
add
shl
add
jmp
mov
jmp
std
sar
sbb
fsubrp
clc
pop
or
push
xor
adc
mov
cs
dec
add
jb
cmpsb
jmp
mov
jmp
mov
jb
jle
aaa
shll
dec
or
sub
pop
inc
inc
shrb
insl
lret
xor
cmp
inc
mov
lea
add
cld
lcall
in
rorb
fidivs
mov
sar
popf
jno
leave
pusha
dec
add
loope
les
xchg
push
dec
addr16
incl
in
mov
pop
in
bound
inc
sbb
add
inc
hlt
or
dec
push
negl
into
inc
hlt
jb
xchg
add
movsl
sar
push
popf
addr16
jnp
call
jo
sbb
jnp
push
in
les
add
cmpb
jecxz
pushl
pop
cltd
mov
in
xor
mov
hlt
mov
mov
hlt
dec
add
shll
call
stos
xchg
mull
jmp
xor
arpl
incl
je
add
mov
sbb
mov
clc
jp
testl
roll
cld
mov
push
mov
push
roll
repz
cmp
aam
inc
xchg
int3
aas
sub
lret
aaa
and
mov
push
adc
lods
stc
sbb
leave
aas
cld
lea
inc
add
lea
in
lea
inc
rorl
rorb
add
cmp
add
push
pop
aaa
les
push
mov
and
or
dec
lock
test
aaa
add
movsb
inc
and
add
es
adc
add
js
add
jg
add
js
inc
push
scas
roll
mov
test
cmc
inc
dec
add
mov
dec
add
pusha
mov
js
ja
add
adc
push
negb
cmc
testb
push
fwait
lock
not
xchg
out
std
roll
push
scas
popl
mov
cmc
mov
popl
shll
rcl
xchg
pop
ds
sub
mov
mov
and
dec
arpl
pop
out
lret
call
add
addb
add
lret
mov
xchg
xlat
call
lret
push
cmc
hlt
incl
mov
divl
add
mov
add
and
xchg
fdivrs
stos
adc
cld
decl
hlt
pushl
leave
lret
incl
leave
cld
lcall
in
in
cld
jnp
mov
jne
add
movsb
into
adc
mov
adc
mov
cld
mov
in
in
fwait
mov
xor
jmp
loope
neg
xchg
sahf
scas
stos
jnp
incl
ja
inc
imul
rorl
push
lock
arpl
lcall
mov
mov
push
add
rclb
shll
mov
sbb
push
std
jge
dec
mov
dec
mov
dec
xchg
pop
xor
mov
add
ret
les
mov
cmp
sti
sbb
insl
mov
cmpsb
sub
cmp
adc
cmp
popf
sub
jmp
dec
inc
push
in
cmp
push
shl
mov
sbb
lods
rcll
cs
add
cmp
mov
add
sub
mov
dec
in
andl
insb
cmp
jge
iret
inc
clc
push
dec
addr16
dec
add
repz
sub
std
cmpsb
ss
jbe
nop
cmp
add
xchg
lds
outsb
dec
push
dec
lea
add
inc
jmp
cmp
cmp
cmp
loop
rcrl
cmp
lock
add
repnz
push
cs
inc
ljmp
push
std
push
pop
jecxz
push
repnz
add
jo
push
test
cmpsb
add
js
jmp
repnz
sbb
scas
cmp
add
add
dec
or
imul
cmp
fst
pop
rorb
inc
push
inc
adc
push
arpl
xor
cli
insl
sar
add
lea
mov
inc
inc
in
mov
jbe
sub
sub
jmp
push
push
jge
jecxz
push
loop
add
dec
add
lea
push
incl
inc
in
xor
cld
push
mov
jbe
jnp
sahf
pop
or
call
shll
inc
jnp
adc
add
cmpsl
mov
sub
ljmp
enter
add
out
lock
xor
std
decl
lcall
and
lcall
push
add
jnp
cltd
mov
outsl
push
add
daa
add
cs
sahf
mov
add
mov
add
or
test
daa
adc
arpl
test
add
sti
gs
in
int3
xchg
sarw
inc
ret
int
lods
xchg
cmp
nop
sahf
sub
es
mov
cmp
xchg
aaa
insb
sbb
aaa
lock
outsl
sbb
jmp
jecxz
sbb
jae
sti
test
cmp
add
cmpsb
xorb
dec
mov
xchg
aaa
jbe
pushf
pop
add
divb
push
sub
mov
mov
xchg
lock
rol
negb
repz
ss
sub
mov
mov
xchg
lock
xchg
inc
ret
movb
shl
test
cwtl
hlt
ss
pop
je
ljmp
add
cmpsb
jbe
cmp
mov
scas
dec
test
es
push
je
ljmp
cmpsb
jge
repnz
push
test
fs
and
lcall
adc
fdivrp
jne
lret
jbe
sub
incl
pop
int3
jmp
push
add
jp
add
pop
and
jmp
push
test
int
js
push
xor
inc
add
xor
and
inc
jle
jbe
gs
or
mov
cld
incl
ds
xchg
roll
push
adc
add
jnp
cltd
sbb
adcl
sbb
jle
add
push
call
sub
add
push
adc
in
or
scas
cmp
cli
repz
push
call
add
jne
xor
cmp
cmp
data16
imul
add
dec
fwait
sar
and
icebp
mov
dec
ret
jmp
icebp
and
out
adc
mov
xor
add
add
jo
jo
sub
jg
mov
out
rcr
jnp
jmp
out
ret
dec
xor
push
cmp
sub
mov
lods
andb
adc
jmp
cmpsb
inc
cmpl
mov
cmpsl
mov
mov
es
in
outsb
mov
xor
imul
ljmp
add
leave
add
xor
test
js
je
xor
push
adc
jmp
jmp
cs
nop
sub
es
xor
insb
dec
jmp
ja
add
cld
into
cli
sarb
das
stos
ljmp
dec
add
mov
dec
add
adc
ja
mov
rclb
add
int
push
sbb
shll
popf
std
aam
sahf
std
faddl
xor
add
std
ljmp
sub
mov
int
push
jge
mov
insl
int
push
daa
dec
add
push
ss
push
insl
cmp
call
pop
stc
mov
cmp
lcall
and
or
and
in
add
cmpsl
dec
add
pop
testb
adc
or
cmp
push
std
cmp
ljmp
ret
cld
push
pop
clc
mov
pop
jnp
add
mulb
test
cmp
mov
imul
out
scas
cmp
pop
sbb
ret
aam
xchg
movsb
inc
cld
mov
jl
jnp
add
out
imul
add
jge
cmp
jge
imul
sti
push
xchg
dec
cmp
jge
aaa
movd
sub
mov
pop
pop
jmp
iret
cmp
or
jl
pop
fists
cld
scas
dec
ret
fimull
in
fs
dec
roll
aam
jecxz
faddl
inc
in
js
jmp
push
lret
cmp
xor
add
add
in
xchg
dec
jmp
dec
dec
ljmp
dec
jmp
fs
stos
add
leave
repz
xor
insb
jge
fstpt
lret
dec
xor
mov
rorl
add
insl
jbe
xor
sbb
out
mov
jmp
mov
ljmp
dec
add
cld
outsb
gs
std
fdivl
cwtl
pop
add
push
das
std
pushf
dec
xor
dec
rorb
jmp
ss
std
cltd
mov
cmpsb
or
test
add
jge
add
jno
jbe
xchg
das
mov
std
testb
loope
jmp
fisubrs
mov
aad
std
ror
std
into
push
fs
mov
inc
jmp
sahf
das
push
adc
std
sbb
add
xor
cmp
mov
sbb
out
inc
ljmp
sbb
mov
mov
push
adc
or
fdivrp
call
ja
jne
add
lcall
push
add
vpunpckhbw
in
mov
out
pop
ljmp
pop
add
mov
sub
add
cmpsl
adc
push
mov
stos
ja
aad
gs
arpl
jb
bnd
jo
hlt
sbb
jp
outsb
mov
outsb
lahf
jle
jae
shr
mov
rorl
dec
ret
aam
cmpsl
mov
mov
fs
lahf
jg
pushf
aaa
add
jnp
les
xorb
sti
incl
jne
add
add
jne
and
or
dec
lcall
dec
pop
imul
out
js
roll
enter
repnz
scas
dec
jmp
cmpl
insb
ljmp
sub
mov
hlt
fisubl
in
sub
aam
loop
jp
sub
test
dec
jmp
imul
push
jnp
fdivrl
dec
jmp
add
push
ret
sub
sub
push
mov
add
mov
sbb
decb
popf
les
mov
dec
lock
out
add
test
jbe
mov
jmp
test
ljmp
outsb
nop
cmp
aas
std
out
shll
sub
popl
xchg
or
xchg
mov
std
xchg
jecxz
jle
add
ljmp
pop
push
push
lea
std
pop
test
std
fdivl
mov
clc
inc
sub
insb
sti
adc
and
je
sub
and
mov
js
shl
mov
push
add
mov
repnz
adc
fiadds
jmp
loop
ljmp
pop
add
cmp
add
mov
int
movsb
mov
add
pop
ret
add
and
dec
push
arpl
jne
mov
push
push
xchg
movsl
ja
cli
mov
ror
movsl
push
adc
std
cmpsl
mov
std
push
lret
inc
mov
mov
decb
ljmp
add
insl
cmp
call
adc
pushf
push
and
jmp
push
ljmp
add
call
stos
mov
jp
aas
adc
int3
xor
shll
inc
sar
loopne
pop
adc
jnp
adc
loopne
or
jns
pop
rcr
cld
fadds
xorl
mov
mov
cld
dec
dec
push
push
mov
cmp
int3
sahf
mov
inc
cmp
cmpl
mov
mov
mov
aaa
push
rolb
sqrtps
out
data16
jo
in
adc
iret
cltd
push
mov
pop
imul
jne
jp
push
dec
sbb
fdivl
sbb
cmp
mov
ds
pop
mov
ja
push
ret
pop
adc
sub
or
or
jbe
push
xchg
push
in
sub
jg
add
mov
fs
add
mov
or
gs
ja
mov
aad
dec
cmp
jl
add
sub
scas
sub
adc
xchg
adc
xchg
jle
add
imul
add
xorb
in
daa
std
push
ret
daa
ja
shlb
into
lods
xchg
stos
sub
push
jb
lret
jle
js
adc
or
sbb
daa
ja
add
nop
fsubrp
xchg
test
ja
pusha
jnp
xchg
shr
orl
std
inc
mov
ljmp
mov
push
leave
mov
ss
and
and
js
in
pop
test
ja
adc
cld
push
in
mov
add
adc
out
lahf
ljmp
dec
in
mov
sub
cld
incl
add
push
std
jne
mov
push
adc
add
jmp
ss
call
sbb
push
gs
or
jle
std
call
or
jmp
mov
std
jmp
cmp
rorl
jne
mov
lret
std
jne
cli
in
jnp
ja
add
je
or
insb
mov
jbe
xor
add
sub
jne
decl
std
or
scas
jno
inc
das
addb
adc
jmp
decl
mov
call
push
in
and
outsb
pop
imul
aaa
mov
roll
test
sti
mov
xchg
jbe
add
lods
loop
call
mov
or
cs
xorl
out
push
push
add
cmp
xchg
leave
jmp
adc
pop
test
mov
lea
and
jmp
icebp
jg
add
pop
inc
mov
jl
push
jb
and
jmp
aad
sub
pop
add
cmp
stc
add
jl
std
jno
and
or
jmp
adc
pop
les
jl
lds
and
fs
jmp
scas
jg
test
and
add
orb
and
inc
jmp
js
aaa
xchg
popl
notb
ljmp
addb
adc
jg
aaa
inc
out
mov
and
add
stos
and
inc
cmpb
xor
push
sub
aaa
push
mov
dec
ljmp
addb
in
dec
sub
add
js
cld
fadd
sub
pop
dec
and
into
mov
rcr
inc
add
iret
cld
jne
xchg
std
pop
mov
std
addr16
dec
add
loop
ja
mov
push
push
add
and
cmpsl
lock
addr16
dec
add
clc
mov
mov
pop
into
push
push
dec
push
and
incl
in
fistps
add
push
inc
loop
add
ror
cld
jne
xchg
dec
popf
push
jo
std
addr16
cld
inc
add
mov
jne
in
movsb
mov
add
testb
mov
incl
add
add
sti
imul
xchg
repnz
into
push
jmp
das
pop
or
jae
cwtl
and
pop
arpl
insb
decl
dec
pop
pop
cmc
add
scas
sti
jno
orl
shll
ret
aam
daa
mov
or
out
lods
fs
cmp
call
dec
dec
push
add
mov
popw
pop
mov
xor
add
int3
aam
dec
pop
testb
mov
mov
and
jo
ss
dec
test
xchg
in
sub
add
fmull
sbb
ss
pop
dec
and
pop
aas
and
cmp
add
aam
xorb
cmp
and
inc
cmpsl
inc
push
mov
adc
movsb
outsl
add
cmp
add
and
mov
repz
mov
ja
ja
push
fwait
push
data16
das
sbb
mov
cmp
mov
pop
aaa
into
rorb
std
decb
ja
fstpl
dec
test
movsb
daa
in
mov
and
int3
cltd
push
fiadds
add
dec
sub
mov
cmpsl
mov
mov
jnp
aaa
inc
mov
xchg
adc
std
sahf
ja
out
fs
call
jecxz
std
add
pop
cld
xor
cli
sub
call
inc
in
push
stc
add
dec
cmpl
dec
add
and
icebp
add
dec
std
jne
mov
or
add
es
call
cmc
dec
and
sbb
cmpsb
std
jne
orl
mov
jge
cmp
push
decl
std
jne
cmp
aad
jmp
decl
sub
outsb
jmp
outsb
jne
mov
cmpl
cmc
adc
sub
xor
xchg
ja
incl
add
sub
outsl
jmp
sti
add
push
sub
outsl
incl
inc
pop
lahf
cmp
pop
xchg
cmp
jmp
dec
pop
cmp
pop
xchg
sub
pop
jg
std
insl
jmp
or
push
push
add
les
xchg
clc
add
mov
jmp
movb
ret
add
fdivl
adc
jmp
mov
sub
mov
push
fisubrl
dec
cmp
adc
ret
cmp
adc
jmp
addl
ret
out
xlat
mov
sbb
std
imul
push
faddl
fldt
scas
aas
lds
push
sbb
add
addb
jg
ja
xchg
mov
std
sahf
jb
cmp
push
mov
es
push
ja
or
dec
dec
add
js
inc
push
and
jmp
mov
xchg
negb
adc
std
pushf
fsubl
daa
push
ja
or
imul
inc
xchg
dec
test
sbb
add
mov
not
rcrl
cmc
out
jle
rcll
std
cmpsl
shl
xchg
sbb
add
test
or
lahf
cld
dec
test
lock
xchg
std
decl
test
cld
ljmp
or
incb
push
stc
push
inc
pop
in
or
std
mov
mov
mov
adc
inc
pop
in
add
dec
test
push
divl
mov
adc
incb
inc
inc
push
ja
les
or
sbb
dec
sub
decl
ret
decl
cld
addr16
mov
push
mov
pop
sar
es
je
push
sbb
out
push
jmp
fnstenv
repnz
sar
add
add
jl
ret
lods
jnp
mov
pushf
add
out
xchg
imul
leave
inc
incl
mov
inc
jnp
push
add
pop
scas
cmp
or
pushf
cli
dec
stos
sbb
pop
push
jmp
push
add
dec
in
xchg
sbb
sbb
xlat
push
mov
repz
mov
cld
adc
scas
push
add
hlt
sbb
push
ret
push
lds
rcll
add
mov
add
ret
or
orl
sbb
sahf
ret
inc
bound
dec
jmp
sub
cld
rcrl
push
jnp
inc
fistpl
sbb
jl
xor
mov
add
addl
jg
or
fldl
std
mov
mov
jmp
lret
lea
cmp
orl
and
add
push
nop
mov
adc
lock
push
push
ja
adc
decb
push
ljmp
add
mov
adc
add
sbb
pushf
sbb
mov
in
jne
push
push
cmpl
iret
sbb
mov
rclb
std
push
cltd
jg
jne
je
ret
lds
push
mov
std
dec
or
mov
jg
in
add
out
cld
decl
mov
add
out
sbb
push
jne
jae
mov
add
inc
mov
inc
inc
cmc
cld
addr16
inc
add
mov
sbb
std
out
std
ljmp
jbe
jnp
fadds
jnp
cmpsb
push
dec
lcall
push
movsb
pushl
add
pop
sar
and
sub
call
jo
icebp
adc
cmpsb
sbb
fdivs
incl
add
fnstcw
addl
inc
cmp
or
dec
dec
sub
mov
jl
mov
adc
int
jnp
jecxz
mov
lods
mov
pop
cs
inc
push
push
loopne
movl
pop
pop
adc
sub
sub
jmp
cmp
mov
ret
adc
push
fldl
add
mov
cmc
inc
jle
out
je
pop
gs
xchg
push
push
xchg
fnstenv
push
cld
aam
test
loope
inc
inc
xorl
adc
pop
fs
adc
jecxz
lret
fs
out
es
add
fwait
push
inc
push
paddw
arpl
jne
inc
std
push
test
jle
loope
adc
sub
mov
jmp
nop
push
out
cwtl
jbe
call
xchg
jnp
jmp
nop
imul
pop
jbe
jmp
and
inc
jmp
pusha
aas
out
pop
rolb
lret
stos
outsl
dec
push
bound
rol
insl
popf
adc
lock
cld
push
push
mov
ret
mov
ja
mov
cmp
cmc
add
and
std
decl
adc
jne
test
ljmp
std
jne
scas
ja
push
mov
add
xlat
xchg
clc
dec
push
fs
addr16
inc
add
dec
ljmp
sti
adc
jmp
inc
ljmp
in
cld
js
push
fs
addr16
inc
add
add
add
and
or
push
dec
jnp
lock
icebp
mov
push
sbb
pusha
call
insb
out
sbb
adc
out
dec
sub
pusha
leave
cmp
add
inc
test
aaa
iret
add
and
pop
adc
lcall
and
bound
and
in
hlt
fucomi
add
add
lahf
push
fnstsw
push
call
int3
cmp
dec
sbb
arpl
mov
xchg
add
pushf
shlb
mov
lret
cmp
adc
dec
jmp
cmp
cmp
dec
jmp
mov
dec
and
dec
adc
add
jmp
inc
test
in
cmp
movsl
push
lret
ret
insl
pop
and
in
mov
add
adc
add
dec
jmp
cmp
jmp
xchg
lea
ret
hlt
adc
adc
dec
stos
pusha
in
jo
out
lret
xchg
pop
aam
cmp
insl
push
les
jl
inc
rolb
jbe
movsb
add
idivl
jmp
sbb
std
sbb
mov
adc
xchg
adc
ret
js
cwtl
xchg
cmp
cld
pop
add
enter
fistpl
mov
sbb
std
jo
and
aam
add
fcomi
fidivrs
inc
jmp
movsb
movl
pop
mov
cld
je
sbb
cmpsb
cmp
xor
adc
pusha
repnz
popl
xchg
and
mov
jns
incl
add
dec
ljmp
negb
xor
cmc
jmp
cmp
call
movsb
cltd
mov
pop
mov
loop
lea
xchg
decl
add
xchg
out
in
xor
lret
mov
add
push
cmpb
testl
adc
mov
incl
add
cltd
in
int3
rcrb
sbb
pop
jmp
int
jmp
cwtl
call
pop
decl
sub
pop
ljmp
test
pop
fiaddl
push
sbb
lcall
sub
pop
incl
inc
push
pushl
pop
mov
sbb
adc
lcall
clc
pop
call
add
or
xchg
div
iret
insl
jmp
fcomps
cs
fmull
adc
pushf
pop
ss
adcb
adc
dec
mov
and
mov
or
les
mov
fwait
xchg
ret
repnz
dec
sub
aam
stos
add
pop
pop
dec
pop
sub
insl
sahf
addl
add
inc
pop
scas
push
fwait
pop
cmpsb
push
add
enter
xchg
jecxz
xchg
stos
cmp
mov
dec
les
pop
xchg
sub
rolb
je
or
push
adc
in
pop
das
cmp
orl
add
std
xchg
popf
mov
pop
mov
divb
or
ja
adc
mov
pop
pop
shr
add
mov
adc
ds
or
std
pushf
test
add
shll
insb
mov
xchg
cli
jmp
xor
dec
push
jmp
stos
sahf
popl
addr16
cmc
ljmp
test
mov
je
jns
add
push
push
lcall
insl
add
outsl
test
popl
rol
in
out
test
mov
mov
mov
mov
fwait
push
inc
push
test
std
pushl
icebp
inc
inc
bound
mov
jbe
std
decl
push
push
add
std
addr16
or
adc
out
jecxz
jnp
sub
sbb
popf
push
cmp
push
mov
add
int3
push
faddl
loopne
cmp
push
mov
aad
mov
imul
lods
inc
push
mull
lcall
sub
movsb
pop
push
or
push
mov
inc
pop
jmp
inc
mov
xor
mov
dec
push
incl
in
pop
pop
add
add
jnp
mov
add
fimuls
adc
jmp
test
int3
ror
je
test
filds
mov
imul
stos
pop
aam
xchg
push
int3
or
mov
add
pop
pushf
rorb
je
cmp
lahf
add
test
imul
cmp
les
pop
or
add
adc
and
push
sti
adc
divl
cmp
or
and
add
and
inc
pop
and
add
add
out
mov
or
shll
cld
into
push
ret
icebp
mov
ja
xor
inc
or
je
add
cmpsb
pusha
test
inc
xchg
push
cwtl
cld
mov
ja
and
jmp
js
mov
adc
roll
add
push
pop
mov
ljmp
add
add
xor
or
cs
add
popf
push
mov
or
pushf
iret
lds
xchg
sahf
std
call
sbb
dec
in
inc
inc
and
mov
adc
dec
lds
push
add
rolb
hlt
and
push
push
add
add
icebp
push
push
iret
cmc
testl
jp
mov
mov
std
mov
adc
add
in
jmp
xchg
std
incl
mov
std
mov
mov
cld
addr16
lods
inc
jnp
xchg
lock
push
ljmp
enter
cmpsb
mov
pop
sub
cmc
call
add
add
dec
in
adc
xor
stc
jnp
incl
jae
test
and
xchg
lock
fcoms
pop
into
inc
jnp
fdivrl
mov
cmc
call
inc
movsl
dec
pushl
addr16
mov
call
bnd
notl
test
dec
sbb
inc
sahf
xchg
adc
out
std
adc
pop
mov
imul
push
orb
cld
stc
enter
pop
out
insb
pop
sbb
in
popf
rcll
mov
sarb
ret
pusha
add
sub
jnp
gs
push
test
pop
ds
mov
insb
push
inc
outsl
mov
test
xor
jg
decb
add
clc
ret
dec
dec
fs
jmp
imul
add
js
subl
xchg
dec
add
div
push
dec
or
jmp
in
add
mov
scas
add
std
lds
popa
or
std
cmc
div
mov
pusha
mov
lea
add
ljmp
and
xchg
add
ja
adc
mov
das
add
std
data16
ljmp
es
dec
dec
jbe
pop
into
mov
add
incl
lcall
jns
mov
lcall
sub
mov
mov
std
jp
mov
sbb
mov
cld
mov
mov
addr16
push
push
lcall
mov
std
cli
xor
lock
out
decl
sahf
std
lcall
addb
jnp
inc
or
jnp
clc
xor
jnp
add
into
in
pop
fisttps
xor
fimuls
movsb
mov
ljmp
push
push
ljmp
pop
cld
mov
add
mov
int3
add
push
lea
sbb
xor
aam
jb
jnp
inc
psadbw
jnp
leave
idivl
add
mov
cmc
add
pop
push
push
pop
push
lea
xorl
push
push
push
pop
fdivs
sub
dec
loopne
out
dec
push
and
mov
add
pop
cmp
and
sbb
adc
mov
add
idiv
repz
adc
insl
aas
add
in
mov
or
cld
add
push
cmpsb
imul
in
icebp
mov
add
mov
popa
dec
inc
cs
jmp
push
xchg
push
mov
fsubrp
xor
jmp
nop
mov
mov
add
add
fstl
add
mov
sti
cld
pop
lret
mov
add
std
jo
div
ds
je
shrl
icebp
push
stos
add
aam
mov
shlb
xchg
ret
insb
cld
es
imulb
mov
out
hlt
fimuls
aaa
dec
das
popl
shll
ffreep
jne
inc
fnstcw
lds
xor
add
and
sahf
dec
cmc
pop
scas
cmc
and
mov
add
xchg
dec
push
call
pop
enter
sahf
push
push
aad
icebp
test
lds
lret
call
lret
lea
cld
xor
sahf
jmp
divl
add
and
call
xchg
shl
notl
add
nop
std
add
push
notl
jbe
call
xchg
or
mov
cmpb
neg
adc
inc
push
xchg
jg
lret
enter
dec
push
jl
add
jnp
xchg
in
cltd
dec
add
or
mov
jnp
loop
push
mov
inc
not
pop
shl
add
cmc
pusha
fildl
add
and
in
and
dec
decl
clc
dec
dec
dec
push
cld
call
xchg
in
sbb
jmp
adc
rcr
jecxz
xchg
inc
mov
fadd
dec
movsb
dec
mov
repz
jg
xchg
dec
movsb
mov
sbb
testb
mov
jae
lahf
imull
xchg
mov
pop
call
add
lods
mov
push
push
push
call
or
xor
out
xor
test
xor
sbb
adc
dec
sbb
lods
dec
and
jge
adc
dec
add
test
pusha
clc
or
je
dec
push
rcrl
mov
inc
jg
in
outsl
lahf
mov
jg
push
ss
out
mov
add
decl
pop
lea
add
cmp
cmp
in
add
cld
loop
andb
add
js
mov
xchg
out
cld
cs
std
pushf
int3
std
jbe
rcl
lods
push
mov
jbe
mov
cmpsw
xchg
cmp
sti
jl
idiv
in
scas
std
cld
pop
dec
std
jbe
push
imull
js
mov
add
scas
into
vmovaps
prefetch
cld
ljmp
adc
push
jp
push
inc
xchg
sbb
pop
arpl
jne
cltd
rcr
or
mov
lret
dec
cmp
add
les
push
pop
or
std
mov
mov
lea
and
inc
add
call
mov
push
add
or
test
add
fs
inc
loop
aaa
stos
adc
out
notb
je
lahf
sbb
cmp
mov
cmpsb
jns
ljmp
popl
add
push
push
movsb
pop
out
mov
xchg
decl
clc
out
cmp
incl
add
movb
push
shl
ficoms
push
mov
dec
incl
add
stos
inc
mov
orb
mov
add
xchg
mov
pop
dec
icebp
in
or
jp
push
adc
mov
hlt
dec
push
out
jmp
fsubrl
dec
fcompl
test
mov
je
dec
mov
jmp
shlb
mov
dec
xchg
sti
js
push
push
notb
add
push
inc
addl
arpl
mov
dec
fstl
dec
movb
push
sti
xor
ret
jmp
insb
mov
sbb
xchg
sti
sbb
and
sti
jne
add
add
mov
add
mov
clc
adc
fidivs
sti
mov
sahf
std
cmp
sti
ss
pop
mov
shll
mov
or
fmuls
cmp
add
js
push
jmp
lret
sahf
insb
lret
add
pop
das
stc
jbe
mov
incb
xlat
add
dec
mov
add
js
inc
mov
and
ds
mov
push
bound
xchg
bnd
in
dec
xchg
mov
xchg
xorl
add
add
add
aad
push
inc
rolb
std
dec
out
inc
inc
rclb
mov
mov
test
or
cmc
incl
or
cld
lcall
js
mul
xchg
dec
jp
inc
push
xchg
ljmp
inc
inc
bound
mov
xlat
js
notl
push
push
add
cmpsl
movsl
inc
add
mov
or
dec
incl
mov
mov
clc
mov
iret
pop
inc
jg
idiv
stos
jo
loopne
pop
inc
push
jecxz
xchg
inc
sbb
or
adc
loopne
xlat
inc
adc
rorb
out
push
clc
cmp
jl
push
je
fs
fs
add
mov
incl
add
dec
in
pop
fs
xchg
inc
decl
mov
cmp
roll
and
ljmp
and
adc
sbb
sbb
jecxz
loope
or
ret
add
sti
shlb
cwtl
hlt
imul
nop
jecxz
in
repz
aam
dec
int3
not
rcll
jmp
inc
mov
inc
xchg
lods
mull
inc
xchg
xchg
inc
inc
add
xchg
notl
test
sbbl
jnp
jl
jae
in
imul
addr16
and
ljmp
ret
xorb
rolb
rcrl
shlb
enter
pusha
cmp
imul
ljmp
repz
jl
out
lea
test
bound
in
imulb
aaa
orl
into
add
push
xchg
push
jg
in
jg
pop
pop
sub
adc
out
pusha
mov
idiv
sbb
divl
xor
shl
mov
fidivl
cmc
mov
cmc
ss
adc
add
push
idivl
and
inc
clc
and
add
lock
sbb
imul
add
test
xchg
sahf
cmc
in
sar
ljmp
add
idivb
loop
push
mov
std
incb
mov
push
sbb
test
cmp
shl
xor
cmc
std
cltd
dec
scas
std
mov
call
push
std
mov
cmp
jnp
or
ret
cmpsb
add
mov
inc
incl
add
imul
xchg
pusha
test
lock
inc
decl
mov
mov
dec
js
paddb
popa
out
jecxz
cmpsb
add
cs
cmp
fcoml
sti
inc
es
call
repnz
idivl
inc
decl
cmp
out
mov
fildl
xchg
adc
jmp
lret
inc
or
add
fidivrl
ljmp
pcmpgtb
xchg
imul
push
inc
push
lahf
inc
jl
hlt
dec
das
outsl
inc
sub
out
xor
out
xor
pop
jmp
jnp
pop
sub
adc
je
adcl
jp
xchg
out
inc
in
dec
ja
push
dec
jbe
ret
sti
fildl
repz
daa
repz
sub
push
aaa
fdivr
mov
cmp
add
jmp
mov
insl
mov
mov
sti
addl
repz
test
jbe
repz
mov
dec
ljmp
push
cmc
dec
mov
repz
ds
ljmp
out
hlt
es
add
add
push
mov
jmp
add
add
cld
out
out
fidivrs
out
test
repz
xchg
sti
cld
jecxz
mov
pusha
nop
cld
scas
cmp
jbe
dec
cwtl
xchg
jmp
js
mov
or
add
mov
add
fisttpl
cmc
ljmp
ljmp
xor
jne
ja
mov
or
xorl
sub
icebp
push
roll
add
mov
push
sar
gs
ret
cmpsb
cld
pcmpgtw
cld
jne
and
std
jne
mov
aad
add
ds
jmp
mov
jne
and
std
jne
and
lret
ret
push
mov
lret
xor
ja
out
mov
enter
ljmp
mov
sti
sub
add
or
test
mov
inc
out
inc
mov
and
cmpsl
addl
shrb
mov
icebp
pop
mov
lcall
shlb
filds
pop
out
jnp
out
repnz
cs
dec
pop
jns
jnp
pop
shrb
daa
sbb
dec
sti
inc
jnp
cmp
add
lea
aas
push
inc
cmpl
fiaddl
rorl
cs
pusha
xchg
aas
dec
lock
inc
jp
aas
movb
jecxz
cmp
cmpsb
loop
insb
shr
sub
sub
sbb
and
dec
cmp
fdiv
loop
dec
mull
xchg
jge
shll
sub
pop
or
add
cmpsl
into
ds
xchg
sub
lea
adc
xchg
pusha
ja
sahf
dec
inc
ret
data16
mov
std
cld
jo
loopne
popf
out
jmp
shll
popl
add
push
push
mov
cltd
pusha
push
lods
ss
aaa
out
dec
adc
cld
push
sub
pushf
jo
mov
add
cmp
out
cld
xchg
mov
pop
inc
movsl
out
or
and
push
mov
add
lahf
loopne
xchg
xor
sub
in
sbb
addr16
ljmp
fs
ljmp
in
cmp
mov
push
xchg
cmp
mov
std
dec
stos
pop
lods
ljmp
pop
ljmp
add
movsl
clc
jmp
pop
ljmp
push
add
push
add
and
lcall
movsl
or
addr16
ljmp
pop
xchg
xchg
sub
add
add
add
pop
jnp
stos
jmp
imull
inc
cmpsl
inc
lea
sub
mov
test
call
xorb
add
add
add
jnp
ret
inc
mov
jg
lods
dec
mov
mov
jb
hlt
inc
pushf
ds
leave
jg
lods
sub
mov
adc
call
add
push
sar
mov
idiv
pop
jne,pt
aas
jmp
test
jmp
call
test
xor
add
mov
shll
mov
jno
fwait
in
cmp
add
dec
inc
mov
into
fstpl
or
sub
scas
insb
je
fnstsw
in
cmp
sub
pop
cmp
roll
cmp
rolb
mov
xor
in
xor
cmpsb
pop
inc
js
jmp
testb
cmp
push
and
or
push
push
cmp
add
add
test
add
sarb
jmp
js
mov
fistps
jmp
mov
cli
hlt
scas
push
jmp
icebp
pusha
pusha
movsb
sahf
inc
jmp
orl
ljmp
repnz
jbe
jmp
loope
test
mov
cld
push
or
mov
stos
or
ds
jmp
loope
sub
add
push
jmp
or
insb
mov
push
inc
mov
jmp
jmp
jp
mul
and
push
cmp
std
out
cmp
jmp
and
mov
sbb
dec
and
lock
jne
ss
in
std
mov
sbb
cli
jle
push
daa
inc
clc
or
jmp
daa
ja
cli
out
add
add
rorb
mov
rorl
push
out
push
ljmp
and
jmp
std
and
andb
call
hlt
iret
xchg
pop
cmp
cmp
call
int3
mov
decl
sub
push
add
leave
mov
add
mov
cmp
and
incl
jecxz
loopne
add
testl
mov
mov
add
jnp
inc
inc
addr16
add
jnp
push
push
std
add
jp
rep
jb
hlt
sub
cmp
stos
cmp
scas
sub
mov
testl
call
jnp
test
mov
notb
in
call
gs
in
repz
testb
call
add
shl
mov
mov
jmp
movl
mov
xor
push
call
fwait
aaa
adc
and
fistpll
fs
inc
aaa
push
gs
call
pushf
fnstsw
loopne
aaa
sub
imull
cmp
cmp
repnz
inc
fs
ret
js
lret
sarb
sti
push
inc
push
add
lods
popa
push
add
cld
push
not
jmp
jmp
js
mov
xchg
out
fimuls
push
ljmp
or
insl
lret
mov
jmp
pop
cmpsb
js
addr16
cli
hlt
xchg
lods
dec
jbe
clc
test
jle
out
cmc
dec
outsl
add
popf
test
hlt
xor
mov
push
insl
popa
or
add
stos
cld
add
and
call
push
ljmp
inc
cmc
lcall
ja
jp
mov
loopne
and
jmp
ljmp
jg
frstor
ja
stos
push
cmpsb
dec
and
call
fnsave
test
and
jmp
ss
fnstsw
fldenv
cli
xor
incl
add
jnp
fstpl
mov
aad
std
call
fnsave
negl
jmp
jne
cmc
std
and
aaa
mov
sbb
pop
decl
ss
cld
inc
lods
sti
jecxz
test
jnp
inc
or
ret
clc
sub
push
rorl
mov
add
jmp
into
inc
jnp
lods
pop
add
xchg
popf
xor
xchg
cmp
imull
incl
fildll
in
mov
xor
mov
jg
lret
mov
cmp
xor
mov
xor
push
inc
outsb
cmc
dec
jmp
cmp
test
jmp
mov
ljmp
in
add
jmp
in
jbe
test
dec
shll
add
int3
in
ror
pop
repz
shrb
dec
jmp
hlt
pop
jmp
and
mov
xchg
in
xor
lods
mov
jl
jno
imul
xor
mov
ljmp
repz
data16
mov
jo
cld
push
repnz
ljmp
fdivp
ds
mulb
add
add
cld
movsb
push
testl
and
repnz
jecxz
loope
mov
inc
in
inc
pop
sub
ss
out
mov
into
jecxz
ljmp
test
lock
add
clc
jecxz
icebp
pusha
aas
std
sahf
test
jecxz
aam
mov
push
and
ljmp
pop
add
xchg
dec
push
push
dec
cmp
out
out
les
std
decl
std
jne
inc
scas
mov
push
dec
push
mov
ja
push
test
je
jb
adc
call
repnz
dec
in
mov
sar
sti
jne
inc
aaa
int3
lds
push
dec
scas
pop
inc
mov
inc
and
aad
pop
push
add
nop
dec
in
mov
jnp
sar
out
out
sbb
inc
mov
incl
std
ljmp
insb
pushf
jmp
mov
pop
decb
decl
sbb
push
xor
push
mov
sbb
xor
dec
xor
aas
cld
mov
jg
rorl
add
mov
add
leave
iret
xor
jo
add
sub
orl
add
mov
jl
push
xor
push
xor
xor
shll
ret
pop
loopne
das
arpl
inc
xor
add
icebp
sub
cmp
push
pop
xor
and
xor
nop
int
dec
inc
mov
imulb
push
jnp
cmp
stos
loope
sti
fcompl
add
in
cmc
icebp
addr16
andb
jmp
dec
loop
pop
adc
repz
and
jge
mov
lods
loopne
sub
loopne
pushf
lret
add
pop
mov
mov
jle
call
movsb
pop
or
xchg
mov
test
mov
in
jns
jge
or
sarl
sbb
inc
ljmp
add
in
jmp
adc
pop
ss
fbld
loop
std
pushf
lock
push
pushf
fbld
add
loopne
pop
push
movsb
fildll
rorl
loope
jecxz
out
jbe
inc
mov
push
push
pop
or
jl
cld
add
dec
push
call
sbb
loop
fdivs
add
inc
add
aas
add
pop
std
fists
stc
push
int
or
push
mov
push
loopne
inc
adc
out
add
and
inc
inc
xor
imul
int
hlt
and
xchg
test
std
push
jge
hlt
incl
ljmp
xchg
add
add
inc
inc
jnp
sub
cmpsb
add
xchg
pop
mov
xchg
cs
sub
js
imul
call
pop
lcall
push
dec
and
testl
movsl
xor
jns
pop
test
call
cmpsb
add
into
pop
aaa
decl
gs
cld
outsb
test
in
xor
subl
aaa
jmp
out
das
push
out
out
adc
add
out
mov
fsubrl
out
dec
mov
lods
ljmpw
in
jmp
into
ljmp
pushf
mov
sub
shrl
insb
frstor
add
in
push
fwait
xchg
add
mov
jnp
jl
cmp
fldl
add
movsb
fwait
mov
add
inc
xor
fisttpll
jl
iret
cmp
pop
in
sub
xor
sub
fcompl
in
sbb
xorb
xor
faddl
mov
fnsave
fsubl
cld
xor
in
out
frstor
sarl
cld
into
pusha
fnsave
outsl
push
shl
orl
pop
mov
sahf
fs
jne
add
pop
sub
ljmp
je
jmp
add
popa
pushf
imul
popa
popa
or
push
std
push
das
je
jmp
cmp
add
push
push
std
cs
scas
mov
icebp
js
mov
test
dec
std
jne
aaa
rcrl
pop
aaa
jmp
adc
mov
iret
cmp
mov
mov
or
std
push
mov
add
mov
cmp
addb
fistl
bound
jbe
push
dec
pop
add
jmp
sbb
mov
pushl
adc
dec
lds
std
fidivl
push
or
std
dec
xchg
sahf
add
sub
dec
or
arpl
lret
inc
jnp
sbb
repnz
or
add
adc
addr16
sbb
jnp
sub
std
ffreep
jl
int
jp
sbb
jnp
sub
iret
adc
push
leave
sbb
jmp
xor
inc
aaa
xchg
inc
mov
sub
in
push
insb
push
adc
pushf
sbb
clc
out
sbb
call
dec
and
add
sbb
sti
aam
adc
aam
iret
int3
cmp
out
pop
xchg
sbb
jmp
and
inc
ret
movsb
jno
add
shrl
mov
ret
scas
sbb
cld
xchg
out
sub
cmp
push
jmp
icebp
jmp
xchg
sub
xchg
rorl
fldt
into
dec
xchg
ss
jmp
hlt
dec
lds
jmp
mov
add
sub
or
jecxz
jnp
jmp
add
jmp
cld
leave
add
loope
es
xchg
arpl
add
movb
iret
cwtl
jne
popa
push
add
js
inc
mov
mov
mov
jb
lret
xchg
fs
cmp
mov
out
pushf
scas
xchg
add
sbb
jmp
add
pushf
xlat
cld
adc
lock
pushf
xlat
mov
cld
jbe
fsubs
popl
data16
fdivp
pop
push
xlat
jbe
jo
mov
add
dec
push
or
std
addr16
lcall
pop
mov
call
shlb
std
mov
sub
lcall
insl
std
ljmp
into
lods
xor
add
add
sub
jmp
lea
push
std
mov
sub
lcall
push
ljmp
cmpsl
sbb
std
jne
mov
sub
call
xor
adc
mov
jnp
sbb
in
xchg
sub
cld
add
add
adc
daa
and
push
int
inc
jnp
jb
int3
aas
and
inc
stc
sbb
add
sbb
mov
inc
sub
mov
push
movsb
out
add
add
cmpl
jnp
add
je
cmc
cmp
add
rcl
add
sbb
jb
decl
in
dec
int
inc
fistps
ficoms
pop
daa
jmp
iret
jmp
fs
je
cmp
pop
fimuls
add
repz
add
mov
adc
jl
mov
outsl
mov
adc
sbb
xchg
push
sub
xchg
shrl
jmp
inc
jo
scas
fst
and
push
int3
scas
jl
or
loop
mov
je
aam
fs
outsb
push
fstpl
and
aad
pop
dec
aad
sbb
xor
add
in
cld
push
fstl
aad
adc
aam
dec
xchg
cli
hlt
inc
push
out
pop
lahf
aad
jl
cs
pop
push
es
aad
push
pop
fdivp
push
lahf
out
addr16
aad
movsb
pusha
out
hlt
pop
aad
je
out
outsl
ja
lret
stos
imul
dec
rol
int
aam
in
pop
or
arpl
decb
inc
jmp
ds
sbb
out
mov
xchg
inc
add
das
ja
cli
stos
std
call
mov
call
pop
mov
add
in
sbbl
xor
mov
cwtl
pushl
inc
cld
cli
dec
add
sarb
std
push
mov
ret
add
out
add
xchg
dec
jne
sub
inc
mov
xor
push
stos
inc
mov
add
mov
call
ljmp
jne
les
pushl
inc
add
xor
push
incl
decl
jnp
mov
jnp
push
push
xor
add
roll
lcall
pop
and
mov
add
xorl
in
xchg
sete
call
jo
adc
cmp
push
add
add
mov
dec
jmp
push
push
jmp
mov
fidivrl
xor
jl
and
std
pop
adc
cwtl
add
jg
xchg
add
ret
les
push
rcll
cmp
fldcw
and
adc
hlt
rcrl
mov
ficomps
and
out
cmpb
and
adc
cmp
push
stos
and
shll
repnz
sbb
add
out
ret
insb
rolb
jl
frndint
scas
fwait
pop
push
xchg
lock
cld
sahf
add
add
in
sahf
fwait
shll
adc
pop
sub
mov
xchg
sar
jbe
inc
ljmp
in
pop
pop
fs
insl
jne
jmp
fwait
sar
mov
out
push
fwait
rorl
es
mov
push
sub
shll
pusha
sub
adc
cmp
sar
xchg
addr16
add
fs
push
shrl
add
xor
sub
cmc
decl
insl
out
imul
das
add
mov
add
test
mov
ja
das
std
push
push
cmc
ljmp
sbbl
mov
std
jmp
inc
ljmp
sub
lcall
das
std
jmp
inc
ljmp
add
std
pushl
cmc
ljmp
push
lcall
xor
jmp
inc
ljmp
mov
sbb
cmp
xchg
fs
sbb
arpl
decl
in
dec
mov
sbb
xor
sub
sub
sub
pop
sbb
out
adc
adc
rcrl
jo
call
cmp
add
hlt
xchg
in
sbb
xchg
jl
fcompl
not
daa
sbb
jg
lcall
aas
pop
lock
inc
sbb
jge
sbb
movsb
mov
push
call
push
adc
pusha
xor
xchg
stos
insb
cmp
sbb
push
ret
in
into
stos
mov
por
xor
adc
sbb
add
sub
repz
jnp
imul
into
pop
sbb
je
pop
jl
int
inc
ja
xchg
mov
shrl
and
roll
outsb
and
je
xor
mov
por
movsb
dec
add
into
sub
mov
push
dec
push
inc
mov
inc
jmp
js
pop
repnz
mov
inc
sub
cmpsl
andl
cmp
dec
xorl
xor
jmp
cmp
add
jle
or
pusha
lea
scas
clc
mov
aam
adc
cli
cmp
std
ds
out
xchg
push
ja
ja
es
ljmp
xchg
mov
add
loop
incl
add
pop
ljmp
data16
jne
push
nop
incl
dec
or
adc
shrl
ja
cmp
adc
imul
cli
test
dec
push
aad
add
pop
push
call
imul
or
push
pop
mov
push
mov
dec
push
sub
fwait
adc
add
add
fsubr
out
push
std
jne
ja
xchg
jnp
sbb
cs
sub
int
leave
mov
lret
mov
sub
add
movl
call
mov
or
incb
jnp
ret
aam
xorb
inc
je
mov
dec
ret
mov
add
and
clc
test
or
outsl
scas
jmp
push
hlt
mov
sub
adcl
ss
sub
les
sub
aam
aas
add
pop
pop
sub
add
inc
mov
push
jo
jo
xchg
out
mov
cmp
mov
jl
lret
sbb
inc
add
clc
adc
sub
out
sbb
adc
sbb
adc
xchg
cmp
fildl
jnp
pop
pusha
lds
mov
add
pop
pusha
add
ss
cmp
adc
dec
bswap
jbe
jb
adc
inc
movb
out
push
xchg
std
dec
lret
leave
cld
jmp
pop
pop
or
js
icebp
test
add
dec
sub
push
ljmp
pop
mov
mov
ljmp
sub
push
push
aaa
push
mov
loope
push
std
cld
pop
pop
mov
or
loope
dec
sub
inc
adc
push
xor
sarl
add
js
std
aam
add
enter
sbb
fldcw
push
bnd
cwtl
popf
mov
mov
add
fmuls
xchg
cli
cld
out
out
lcall
je
cwtl
popf
pusha
sub
or
rclb
incl
push
xorl
adc
addr16
ljmp
or
clc
sub
inc
lock
fisttpll
incl
push
ljmp
pop
popl
and
test
jae
jg
fmull
xchg
out
int3
add
decl
adc
std
mov
mov
lods
loop
call
pushf
inc
sbb
add
adc
decb
mov
adc
cmp
jg
outsl
scas
xchg
and
inc
lods
sub
mov
jne
int
std
sub
adc
add
adc
call
xchg
ret
mov
fs
cld
shlb
nop
jl
aad
rcl
inc
push
fmul
mov
push
inc
pop
sub
jl
mov
nop
test
popf
or
jge
adc
jl
ss
jmp
je
pop
or
js
adc
insb
sbb
fs
test
add
jnp
xor
adc
inc
cmp
sub
adc
jns
adc
sub
adc
add
hlt
jl
jbe
push
sti
pop
mov
push
icebp
add
sub
lds
xchg
rol
dec
and
aaa
add
hlt
dec
ljmp
std
pushf
xorb
stc
push
mov
jmp
add
js
inc
xchg
je
mov
call
xchg
dec
add
js
inc
int
les
xchg
adc
data16
pusha
sarl
js
and
push
sub
xchg
incb
adc
jne
stc
jnp
arpl
jne
jns
jg
push
mov
jbe
pop
insl
add
rclb
jge
push
jbe
stos
dec
add
add
inc
pop
ja
cmp
xchg
pop
ja
xchg
aam
call
jnp
add
xchg
aad
adc
test
test
xchg
push
lds
dec
add
bound
inc
hlt
bound
add
push
add
lahf
push
lea
sti
jne
push
adc
push
mov
push
jne
add
xchg
out
jnp
in
outsb
sub
cmp
jne
or
or
jne
dec
jl
out
cli
cld
out
dec
adc
mov
or
adc
jmp
adc
xchg
cmp
call
xor
psadbw
adc
je
xchg
jmp
and
imul
je
push
pop
push
inc
test
punpckhdq
add
movsb
cwtl
xorb
cwtl
and
xor
push
push
push
or
xchg
test
cld
sbb
clc
mov
in
cmp
sbb
or
xchg
ficoml
jnp
lea
push
jmp
cs
adc
ret
ds
jmp
enter
xchg
je
mov
test
popa
enter
or
add
out
test
ret
jle
dec
adc
icebp
dec
jp
jmp
lods
xchg
add
outsl
push
std
sbb
stos
push
jns
roll
pop
add
rorb
js
lret
stos
pop
ret
insb
dec
jo
je
cli
mov
loopne
push
mov
mov
test
mov
mov
add
ljmp
lods
mov
cmp
add
or
cmp
cld
incl
call
cmpsl
push
push
incl
pop
ja
cmp
fnstsw
inc
clc
jb
ja
cli
sub
jle
and
or
insb
test
or
inc
inc
clc
xor
cld
dec
fmuls
incl
add
in
das
pop
std
cmpl
add
rorb
nop
out
push
incl
sbb
fs
add
fs
lea
inc
xchg
add
add
push
jnp
ljmp
mov
or
inc
lods
sbb
xor
or
mov
mov
scas
lods
sbb
add
and
or
mov
mov
or
inc
repz
dec
sti
in
jg
iret
and
imull
or
inc
cs
out
repnz
das
in
jge
mov
insb
clc
ficompl
add
enter
mov
pusha
and
cltd
out
xchg
repz
je
lock
out
push
xchg
rorb
aam
add
dec
jmp
or
out
fwait
lds
sub
cmp
add
dec
jmp
fnstsw
pop
push
or
cmc
adc
out
mov
cmp
push
push
mov
data16
cwtl
xorb
cwtl
aam
add
mov
leave
jb
mov
icebp
jb
mov
ljmp
add
std
pushl
mov
mov
vmovd
rorl
push
jbe
les
sbb
xchg
jle
push
xchg
mov
cld
xchg
and
jne
xchg
xchg
mov
cld
loop
inc
add
mov
cld
xor
inc
add
mov
mov
add
add
add
js
mov
into
cmp
or
dec
add
in
dec
ljmp
adc
cli
push
dec
inc
bound
or
stos
xchg
incl
punpckhbw
inc
add
or
xor
dec
aam
incb
push
add
add
dec
std
lea
add
mov
dec
std
incl
add
mov
add
aaa
xchg
aam
add
push
xchg
mov
dec
adc
rclb
jge
jb
inc
mov
push
or
jnp
add
loop
add
sbb
test
cwtl
out
out
call
jo
xchg
add
xor
add
xchg
or
imul
roll
or
mov
fisttpll
or
int
xchg
or
jp
cmp
out
push
ficoml
int
xchg
in
xor
outsb
mov
lods
sbb
aad
or
or
or
shr
jns
xorl
sti
or
add
lea
xchg
cmp
jmp
push
dec
add
btc
or
add
add
or
lcall
push
cld
push
lds
inc
cmpsb
dec
jne
mov
stos
or
mov
fwait
sbb
jmp
decb
orl
add
or
mov
jmp
mulb
movsl
sbb
inc
xchg
jle
int3
cs
lds
add
cmpl
lods
inc
ret
into
cmp
jmp
jmp
ja
add
jno
push
add
loop
out
lock
pop
js
add
sti
into
sbbb
out
mov
sti
mov
push
std
je
mov
jns
js
xchg
mov
ret
jmp
mov
cld
jbe
dec
adc
js
or
jmp
add
gs
push
cmpb
add
inc
add
jecxz
add
pop
ja
daa
adc
jge
inc
sub
aad
dec
jecxz
ljmp
leave
add
or
ret
std
lea
inc
std
mov
inc
ja
sub
mov
in
inc
std
push
cmp
nop
fnsave
xchg
add
jp
pop
inc
and
mov
inc
std
call
adc
pop
inc
rolb
mov
inc
std
jnp
clc
out
or
call
mov
mov
jg
push
lods
inc
inc
movsb
outsl
sbb
and
add
mov
dec
adc
jl
sub
movsl
or
push
cmpsl
jo
pop
aas
or
jns
add
dec
and
out
sbb
push
lret
push
add
and
sbb
leave
cmp
add
pop
cmp
in
cs
sti
push
dec
add
inc
push
inc
aam
push
lcall
inc
pop
mov
inc
inc
pop
lods
mov
lcall
xchg
data16
or
mov
add
add
out
inc
out
bound
add
mov
cld
push
fiadds
push
cmpsb
push
ja
mov
add
lds
pop
cmpsl
mov
push
sub
xor
push
sbb
stos
jno
or
repz
mov
add
mov
jmp
adc
add
js
add
pop
nop
dec
jge
ret
add
cld
ss
jne
call
mov
push
jmp
ljmp
cld
push
pusha
inc
jle
jbe
jbe
or
cli
ret
mov
leave
in
push
jle
inc
lds
mov
fnstcw
push
rcll
add
and
or
bound
jmp
js
add
or
add
xlat
cld
imul
pop
push
lea
cmc
pushl
dec
ja
cmp
mov
add
nop
cld
inc
in
adc
push
sbb
test
std
jmp
jmp
sub
fistps
call
orl
bound
lock
mov
xchg
dec
std
mov
add
int
in
std
dec
std
add
add
adc
idiv
lret
add
mov
cmp
mov
cmp
call
in
call
adc
sbb
decl
add
mov
push
mov
jae
call
imul
pop
mov
xchg
ss
jl
inc
or
fidivrl
cli
popa
sbb
add
movsl
jbe
pop
jbe
jne
xchg
jp
arpl
js
jnp
rorb
stos
add
clc
jnp
add
cmp
cli
je
jmp
mov
dec
add
or
sti
cmc
mov
add
jae
out
push
jp
dec
lock
dec
dec
push
in
mov
imul
stos
add
cmp
dec
sbb
add
pushf
push
mov
add
lret
test
add
sub
add
mov
jne
push
fdivrs
push
lds
inc
mov
add
mov
daa
fwait
xor
das
add
test
mov
mov
pop
and
xchg
jns
ret
es
jmp
or
hlt
outsb
jns
jbe
add
loopne
mov
jns
add
leave
lock
jns
jbe
nop
sub
add
mov
imul
ret
stos
hlt
push
jns
jbe
pusha
pop
mov
jp
pop
fs
cld
xor
mov
fidivrs
mov
inc
mov
into
les
add
ljmp
mov
fisttps
add
movsl
icebp
in
dec
std
jne
mov
lret
ret
push
mov
lret
sar
dec
push
call
pop
or
push
lret
inc
mov
dec
std
jne
movsl
and
pop
dec
push
iret
or
jmp
dec
ja
mov
std
ljmp
or
add
cmp
inc
ljmp
add
pop
inc
jnp
add
jnp
add
lahf
pop
and
push
push
or
push
call
cld
pop
add
outsb
mov
add
mov
xor
jne
pop
cltd
int3
femms
rorb
fcompl
out
push
mov
push
push
adc
pop
inc
jnp
add
pop
pop
mov
push
pop
push
add
jp
icebp
mov
jnp
add
dec
inc
mov
mov
in
inc
repnz
mov
add
imul
andl
dec
pop
and
xchg
cltd
or
scas
sbb
push
and
addr16
xchg
test
scas
jae
addr16
jns
cmpsb
and
js
mov
or
add
dec
jmp
push
xchg
xor
cmpsb
and
dec
jo
or
add
movsb
call
pop
out
test
jp
add
pop
cmp
add
cmp
jmp
jg
jmp
fistl
mov
repnz
addr16
mov
mov
sahf
arpl
pop
sub
xchg
cs
add
add
push
adc
js
or
das
pop
sub
cmp
js
add
fcomps
scas
push
pop
push
or
or
sub
std
cld
push
adc
xchg
pop
xchg
aaa
dec
andl
add
add
push
add
push
push
jmp
pop
fwait
popl
loope
xchg
pop
xchg
push
add
xor
decl
pop
inc
add
adc
rolb
lds
adc
add
add
in
push
imul
add
xor
scas
push
sub
mov
shll
into
inc
cmpl
push
pop
lret
ret
cmpb
and
mov
pop
dec
cmpl
or
push
sub
pushl
shr
add
repnz
jnp
add
cmp
mov
xor
mov
push
ljmp
or
mov
leave
roll
adc
xchg
std
adc
je
add
repnz
mov
cmp
stc
lock
sarl
mov
pop
push
jmp
adc
adc
int
add
jp
or
add
dec
sbb
pusha
fldcw
sub
lods
add
pop
pop
jecxz
push
pop
out
stos
fsub
sti
rorb
inc
dec
call
adc
or
add
xchg
repnz
jp
xor
pop
mov
xlat
cmpsl
pop
xor
xchg
outsl
pop
mov
stos
fisttpll
mov
pop
insb
jno
add
or
pusha
push
mov
call
add
dec
xchg
pop
ljmp
and
xor
pop
ljmp
pop
push
xor
inc
std
je
mov
in
lods
or
mov
push
rorb
inc
jmp
adc
xor
ss
add
mov
or
cld
mov
or
mov
adc
sbb
and
outsb
imul
test
iret
vpunpckhqdq
add
push
dec
popl
xlat
cmpsb
dec
push
aaa
adc
dec
std
jne
test
cmpb
or
pop
iret
jl
bound
jne
movsb
adc
andl
pop
jmp
add
iret
imul
jne
mov
pop
rorb
cmpl
dec
add
xchg
push
pcmpgtd
add
std
mov
adc
neg
sti
ljmp
inc
call
cmpsl
mov
call
jnp
cmp
add
add
jnp
imul
inc
jnp
shrl
jnp
push
push
fs
out
add
xorb
jecxz
inc
jnp
fwait
outsb
jnp
push
push
sub
out
out
pushw
add
insb
dec
mov
popl
push
hlt
dec
out
out
inc
push
add
addb
jp
push
push
rorl
push
fldt
lods
and
jl
jmp
nop
push
push
add
jmp
outsb
or
xor
clc
out
add
gs
clc
out
lcall
adc
test
cmpsl
push
cld
sbb
aad
sub
mov
clc
sbb
int3
xor
addb
jmp
in
xchg
jno
mov
addb
in
xorl
cmc
or
mov
insl
les
jbe
sarb
pop
lods
test
inc
movsb
and
inc
in
cld
inc
movsb
and
push
jecxz
cld
test
out
inc
fcmovnbe
cld
test
ljmp
daa
cld
push
insb
test
add
mov
mov
in
dec
test
stos
push
cld
addr16
mov
cld
movb
icebp
jle
shr
cmp
jmp
jns
dec
xchg
push
cmp
fs
adc
and
cmpsl
js
jmp
dec
mov
mov
adc
jg
push
sbb
jne
mov
mov
dec
pop
leave
pusha
cmp
dec
dec
ljmp
aaa
pop
pop
stos
or
test
push
decl
inc
ljmp
add
mov
ljmp
dec
xchg
and
dec
cmpsb
sti
jne
mov
xchg
xor
es
inc
xlat
hlt
adcb
add
jnp
out
push
in
testb
aas
lcall
mov
imul
shlb
xchg
aas
add
out
je
jg
pusha
cmp
sbb
mov
jae
mov
push
divb
add
jnp
je
je
mov
mov
add
mov
add
xor
repnz
sub
cmpsb
aaa
jl
add
add
cmpb
lods
jl
jns
add
dec
cmc
cmc
movsb
jno
mov
sbb
imul
sub
sbb
add
add
fstpt
push
jmp
mov
dec
jmp
jbe
jmp
clc
and
push
push
jb
xchg
mov
add
iret
popf
jmp
sbb
mov
scas
and
push
push
jmp
jnp
dec
add
push
add
and
lret
mov
dec
ret
dec
jmp
lahf
mov
js
aad
int3
xor
dec
add
add
pop
rolb
jmp
adcb
jle
add
jp
add
movsb
jo
rorl
jmp
dec
add
orl
jmp
xor
lds
mov
ja
add
inc
or
push
loop
jmp
jo
mov
je
stos
or
dec
movsb
mov
add
fisubrs
inc
lods
std
popa
nop
cs
add
push
cld
imul
bound
mov
dec
std
jne
xchg
rorb
rolb
add
rolb
add
bound
lea
dec
std
jne
xchg
outsb
mov
pop
push
mov
add
hlt
add
add
push
xchg
pusha
rorl
jne
xchg
insl
bound
and
add
loope
nop
pop
adc
jne
push
mov
xor
dec
add
in
pop
inc
push
popf
jne
dec
jp
add
addl
jnp
mov
inc
adcb
mov
decl
icebp
repnz
sub
je
mov
push
jmp
ror
repnz
ja
xor
mov
ljmp
cmp
jnp
mov
add
cs
fsubs
adc
decb
ja
je
pushl
je
jo
or
cmp
fs
adc
repz
push
and
out
sub
incb
out
sub
xor
pop
enter
lock
sbb
adc
xor
add
mov
jbe
mov
add
and
add
add
add
inc
por
inc
xchg
xchg
loopne
dec
jmp
cld
sbb
enter
add
roll
daa
xchg
inc
fsubs
dec
jmp
int3
sbb
enter
add
sub
inc
mov
xchg
push
xor
out
lock
mov
hlt
xchg
mov
add
and
out
and
jbe
dec
mov
inc
fld
mov
arpl
add
jmp
push
lea
jmp
ret
cmpsb
fmull
cld
jmp
inc
cmp
test
js
pop
xorb
add
movsl
sbb
push
xchg
cld
pop
mov
mov
test
lahf
jbe
mov
test
xchg
mov
rorl
push
adc
mov
iret
jg
add
add
aad
incb
dec
call
xlat
aad
adc
repz
incl
xor
and
test
mov
call
and
dec
add
adc
dec
add
dec
int3
cld
jmp
int
sub
add
dec
xchg
dec
ljmp
and
add
pop
mov
inc
mov
inc
xchg
cli
imul
add
dec
add
jne
mov
lods
jne
mov
mov
jnp
clc
mov
ret
out
dec
sbb
cmc
movsb
out
ljmp
fcomps
push
ljmp
test
fsubr
dec
stos
in
adc
bound
jmp
fdiv
in
out
out
sub
loop
jnp
inc
sub
xor
add
add
inc
add
inc
push
pushf
mov
fisubrs
cmpsl
add
mov
out
aas
add
call
gs
push
mov
arpl
fs
dec
xchg
add
cmp
cmp
jecxz
push
hlt
jmp
adc
push
add
inc
shlb
loope
in
add
dec
loopne
add
push
por
outsl
inc
xchg
call
psrad
std
pushf
jnp
mov
dec
sbb
daa
inc
push
jle
pushf
pop
push
in
xchg
loop
in
lea
addb
jne
popf
cld
ljmp
aaa
lret
and
add
dec
std
xor
lcall
add
js
imul
ljmp
inc
ja
push
push
adc
jecxz
mov
pushf
jmp
inc
ss
ret
dec
rcrb
inc
lret
adc
ds
std
hlt
insb
cmpsb
push
mov
cltd
cld
dec
cmpsb
mov
nop
pushf
push
push
or
std
aam
or
add
xchg
in
cmp
sti
dec
int
incb
add
out
ljmp
pusha
imul
and
mov
test
jp
push
adc
sti
call
fistl
jmp
jne
cmpsl
jne
sbb
movsl
sti
ljmp
xchg
or
xchg
sbb
adcl
push
inc
mov
sti
or
sbb
or
sbb
add
mov
je
in
mov
je
std
mov
mov
mov
add
out
fdivrs
or
fsubrs
mov
out
ljmp
js
mov
test
call
bnd
addr16
add
jecxz
test
in
cmp
out
add
jmp
and
addl
add
mov
and
add
roll
jnp
bound
test
mov
dec
pusha
addr16
add
shlb
jnp
ret
mov
push
stc
xchg
add
sub
cltd
popf
jmp
cltd
fildl
jnp
jge
aam
mov
jnp
xor
dec
xchg
mov
adc
rcrl
add
jl
mov
es
clc
xchg
jmp
hlt
in
lahf
fcmovnu
int3
fwait
call
or
sbb
lods
add
sub
imul
adc
mov
pop
orb
or
ds
mov
cltd
jbe
push
fdivrp
cs
xchg
xor
adc
stos
sarl
xchg
add
push
cltd
cld
push
int
jmp
negb
cwtl
cld
out
xchg
jmp
mov
cld
mov
std
xor
cwtl
jbe
rcrb
lret
xchg
push
jb
int3
lds
dec
ds
mov
js
push
jne
add
mov
jae
andb
push
push
add
sub
mov
mov
mov
call
shrl
sbb
out
inc
push
call
loop
jne
adc
cld
call
mov
jne
jae
jg
mov
jbe
scas
sti
push
lret
jmp
push
push
adc
xchg
in
jnp
push
add
jno
mov
idiv
add
mov
add
ss
push
jnp
pop
add
movsl
pop
add
movsl
jns
xchg
jecxz
addl
lock
in
lea
add
mov
add
into
xchg
fdivrs
into
aas
push
call
add
aam
cmpsb
jg
je
movsb
insb
in
sbb
stc
decb
jge
decb
mov
xlat
ficompl
add
in
push
ljmp
dec
push
in
fdivl
int
test
jnp
pop
fdivr
mov
mov
adc
push
outsl
jae
insl
imul
jmp
jnp
jmp
negl
sar
jnp
jmp
cs
add
das
mov
es
dec
xorl
jmp
xchg
jne
adc
hlt
in
add
dec
push
dec
fwait
por
sub
push
jmp
sti
xchg
cmp
in
ret
xlat
xchg
cld
scas
dec
cmpsb
pop
movq
adc
xchg
jbe
mov
test
stc
nop
cmc
ja
xchg
addr16
nop
lods
jae
xchg
xchg
mov
iret
cld
inc
jae
jne
iret
sub
jmp
add
add
xchg
cld
mov
push
sub
mov
inc
ljmp
adc
mul
dec
nop
mov
dec
xor
push
call
loop
add
dec
sub
shlb
pop
pusha
xchg
dec
push
orb
jmp
mov
or
jl
std
and
arpl
pop
jb
add
das
inc
add
add
scas
jne
cmp
std
ljmp
scas
sti
push
lret
add
jne
cmc
or
jge
cld
decl
call
jge
add
mov
or
jp
or
inc
nop
pop
arpl
add
add
hlt
xor
add
movsl
add
bound
push
add
pusha
inc
jnp
cwtl
pop
add
cmp
push
incl
int3
pop
or
dec
pop
cmp
add
test
adc
pop
or
loope
insb
and
dec
push
inc
imul
push
or
jecxz
xor
add
sbb
xorb
loope
and
add
mov
and
xchg
jno
add
pop
mov
jne
por
jnp
jmp
negl
inc
or
jmp
lret
add
or
es
push
sbb
jmp
sub
inc
jnp
std
or
es
cmp
mov
por
cs
add
dec
jmp
sti
nop
mov
push
xchg
loope
ret
fsts
and
mov
add
popf
filds
add
adc
loope
mov
add
lds
add
sbb
std
push
ja
scas
push
sbb
push
pop
cmp
add
js
add
sti
scas
fildl
push
jns
add
push
pushf
popa
sub
call
cli
sbb
add
sub
jg
jbe
mov
sub
leave
cmp
inc
add
fmuls
inc
jmp
clc
nop
jbe
pusha
paddd
pop
ret
xchg
pop
xchg
cld
mov
js
jbe
jbe
jne
mov
jns
and
pop
mov
mov
es
lahf
inc
ljmp
scas
push
dec
xchg
popa
inc
shlb
pop
popa
mov
add
ljmp
je
pop
push
add
mov
sub
subb
cli
jo
call
outsl
push
mov
and
popa
and
xor
mov
inc
ret
pop
push
push
mov
gs
jnp
enter
call
decb
jge
ja
jo
shll
mov
and
sti
inc
xor
add
push
cmp
je
lea
inc
iret
cmp
call
jo
push
sbb
push
add
push
push
pushf
xchg
or
sti
add
mov
sbb
jmp
out
mov
negl
add
mov
inc
fidivl
pusha
add
lock
enter
dec
rcll
faddp
imul
add
jmp
add
sbb
jecxz
mov
push
pusha
fldl
dec
jmp
icebp
adc
adc
lea
cltd
aad
scas
fldl
xchg
ds
lea
or
pusha
lock
xchg
xchg
dec
clc
ljmp
mov
fmull
inc
push
inc
cmp
pop
fs
jmp
mov
dec
add
add
pusha
icebp
pusha
jmp
inc
and
mov
mov
mov
push
cmc
inc
mov
push
ljmp
pop
std
out
dec
inc
imul
xor
jle
add
mov
xor
jbe
push
cmpsb
mov
mov
push
mov
adc
std
hlt
jo
jg
mov
mov
add
mulb
cmp
jmp
mov
push
ret
inc
ljmp
push
add
fdiv
pop
popa
adc
call
pop
ljmp
es
lcall
push
ljmp
dec
add
jbe
into
cld
add
test
or
cmp
sbb
push
add
pop
cli
mov
add
add
adc
call
cmpsl
sti
jmp
ja
ja
cmpsl
leave
ret
push
mov
rol
cld
test
push
or
push
jmp
cld
shll
out
adc
jne
int3
fidivl
call
addr16
out
xchg
aaa
addr16
jnp
les
jne
je
dec
pop
add
xlat
je
add
stos
push
or
stos
push
in
lods
movb
push
jmp
mov
mov
movsl
mov
popa
jne
inc
movl
cs
push
repnz
cld
or
push
dec
flds
jnp
xlat
je
dec
rcr
jge
out
jnp
ljmp
mov
add
sub
jnp
pusha
out
xchg
mov
add
pop
or
ja
jge
xchg
dec
cld
dec
outsl
mov
and
and
je
dec
push
add
mov
add
push
hlt
push
mov
push
ja
ljmp
dec
pop
xchg
adc
jmp
mov
jnp
shr
push
xor
mov
je
push
sarl
jbe
add
push
add
ret
js
jbe
inc
pop
push
fs
add
mov
add
js
mov
lret
insb
mov
sub
push
push
lret
insl
fstpt
and
push
out
pop
std
push
rolb
push
cmp
xchg
mov
popl
leave
xlat
lds
sahf
inc
cld
cmp
lret
stos
add
xchg
mov
sub
cli
cmpsb
sti
ljmp
push
adc
orl
xor
add
dec
push
push
incl
pusha
xchg
psubd
test
dec
add
leave
clc
hlt
xchg
cmpsb
xchg
xchg
or
jne
dec
lea
cmp
hlt
adc
int
cld
aam
sti
add
mov
add
mov
push
decl
cmp
jne
jae
call
mov
aam
cs
cmpsb
lock
std
xchg
or
std
test
aam
jae
int
mov
mov
shl
sbb
push
lock
xor
inc
aad
shll
add
add
leave
insl
cmpl
jnp
mov
add
xchg
incb
mov
mov
sbb
es
in
xor
hlt
pop
cld
jnp
dec
and
add
std
les
sti
das
pop
pushf
push
sbbl
add
pop
inc
mov
xchg
fnstsw
icebp
loopne
aad
xchg
jne
aad
xchg
jae
and
jo
sahf
mov
mov
add
dec
cld
shr
sub
sub
cmp
and
addr16
jp
or
outsl
test
sbb
ja
or
cld
fcmovbe
xchg
fcmovne
mov
jb
dec
jae
cmp
aad
test
cmp
jbe
emms
dec
inc
cmp
cli
or
test
sub
std
cld
mov
jbe
add
sbb
push
inc
test
fsubl
xchg
inc
test
cltd
das
cli
or
cmp
rorl
jmp
js
xchg
push
test
mov
sub
add
js
lds
cld
out
or
cmc
movl
cld
add
roll
add
rclb
mov
xchg
mov
test
xchg
sti
jmp
test
adc
add
testl
fwait
jne
dec
push
std
jne
fwait
push
inc
rcr
in
mov
jnp
add
mov
add
push
lds
adc
mov
and
test
push
mov
pop
add
add
mov
aam
movsb
sar
jp
fistpll
jnp
mov
sarb
jnp
lds
lods
mov
lods
add
nop
addr16
inc
add
ljmp
out
push
push
add
xor
test
jne
add
jle
inc
jnp
mov
dec
or
dec
arpl
shlb
adc
mov
add
add
jmp
sar
add
in
or
iret
mov
test
in
jmp
in
mull
inc
add
popa
dec
push
add
enter
sbbb
addr16
stos
push
xor
adc
ficompl
jp
rorb
cltd
jnp
jge
fcmovbe
jne
arpl
add
pop
add
ror
pop
inc
cwtl
push
jp
rolb
inc
fidivrl
sbbl
push
test
rcrb
adcb
scas
dec
jmp
cmp
jmp
mov
push
ljmp
cli
push
das
adc
subb
jb
sbb
cli
or
sahf
xchg
jecxz
pop
xlat
jnp
inc
shrb
cli
frstor
jg
ja
cli
rcll
cmp
mov
js
inc
and
dec
subl
dec
fistpll
dec
inc
cmp
popf
addb
mov
std
jne
and
and
inc
mov
dec
add
add
or
bound
sahf
mov
incl
xchg
lahf
jne
mov
pusha
inc
xchg
popf
xor
call
mov
add
or
andl
push
fmulp
cld
call
jne
mov
mov
mov
sahf
jne
aad
mov
out
mov
jne
xchg
or
jnp
mov
adc
add
add
dec
mov
inc
jnp
push
push
out
mov
dec
popa
jbe
add
addl
dec
aam
inc
dec
cmp
mov
pushl
sub
xor
ljmp
jge
push
mov
add
je
rcrb
mov
pop
add
mov
or
int3
insb
mov
add
pop
mov
lret
decb
out
add
rorb
fidivl
clc
dec
das
mov
xchg
cmp
in
jnp
leave
popa
mov
dec
jmp
xor
arpl
in
jle
jp
subb
or
xor
clc
into
into
sub
ret
jne
pop
add
push
xchg
dec
jmp
mov
dec
jmp
aas
cmpsb
ljmp
xor
jnp
sub
add
and
jp
lret
movsl
mov
call
inc
xor
sub
roll
mov
dec
ja
stc
cli
aad
int3
adc
mov
mov
jmp
repnz
or
ja
lret
xchg
inc
mov
dec
add
scas
add
sub
cld
push
iret
jne
les
jbe
adc
add
subl
add
xchg
mov
add
mov
mov
enter
jbe
sbb
push
jne
pop
std
hlt
cmp
dec
icebp
and
in
push
popf
push
push
jecxz
add
push
add
xchg
add
add
push
add
mov
roll
and
cmpb
and
cmpl
or
add
add
push
add
push
dec
or
push
add
data16
cld
jmp
int
inc
mov
add
int
loope
mov
push
add
xchg
xchg
inc
clc
xchg
push
add
pop
adc
push
das
adc
push
push
adc
call
inc
inc
bound
loope
call
jge
jnp
std
sbbl
add
clc
xchg
int3
ljmp
mov
je
jae
add
add
mov
push
sbb
sar
test
inc
pmaxub
mov
gs
fucomi
rolb
sub
add
inc
add
loop
ss
jns
rcll
add
gs
add
xor
dec
adc
inc
stos
xor
inc
add
push
or
or
xor
lret
out
pop
push
addr16
sti
aam
jmp
push
data16
cmp
dec
sub
dec
lret
addr16
popf
lret
adc
loope
dec
dec
faddl
std
add
lret
mov
js
jg,pt
into
cmpsb
lret
bound
sbb
add
fistl
in
ret
lret
mov
inc
jnp
aaa
or
jmp
add
mov
and
aas
cmp
ret
repz
add
js
add
repnz
mov
jns
loope
std
cli
inc
xor
push
inc
mov
std
mov
xor
or
leave
jnp
push
inc
add
add
cld
push
xor
incb
stos
inc
ljmp
dec
add
and
push
and
scas
add
jne
add
js
jbe
mov
int
call
push
sbb
push
add
adc
mov
iret
xlat
add
jne
jge
lcall
andb
xorb
sub
dec
int
inc
add
or
sbb
pop
pop
dec
nop
add
es
jo
add
ss
jne
es
jmp
or
pcmpeqw
es
or
jae
sarb
pop
leave
and
mov
call
jns
jne
cli
inc
or
pop
lea
test
and
sub
incl
aas
inc
jnp
dec
push
sub
dec
shll
add
gs
add
gs
push
mov
adc
lods
aas
add
add
dec
cmp
mov
jge
ja
xor
pusha
jge
sub
std
dec
hlt
add
clc
mov
or
xchg
lock
gs
je
dec
push
push
jnp
mov
jnp
add
aas
mov
shlb
and
mov
xchg
add
or
jmp
mov
fwait
movl
cs
xchg
gs
add
jne
and
add
mov
ja
inc
dec
out
and
inc
mov
ja
jge
jle
add
jmp
cmp
xor
repz
pop
jnp
jmp
and
mov
or
dec
lret
add
push
push
hlt
jbe
inc
xlat
jbe
repz
mov
pop
enter
add
lret
scas
test
jmp
add
add
fildl
add
push
add
js
add
adc
inc
jmp
mov
mov
push
fmuls
add
jle
aas
lea
push
dec
std
aam
out
ja
mov
outsb
cwtl
sahf
js
andl
js
jbe
xor
push
jmp
cmp
lock
jmp
dec
sbb
stc
xchg
or
in
cli
or
sub
or
je
add
push
in
add
sti
xor
ljmp
fdivrl
std
jne
mov
std
inc
gs
mov
mov
mov
add
sti
xor
mov
stc
inc
aam
push
std
jne
mov
add
dec
inc
gs
jecxz
ljmp
rorb
xchg
gs
adc
sahf
arpl
jg
ret
test
add
jnp
inc
aam
jl
lods
jnp
add
test
cmp
sub
dec
aam
ss
outsl
rorb
cld
add
jnp
inc
les
jl
jnp
add
add
mov
xor
or
lcall
pushf
popf
lock
or
je
push
dec
or
mov
cld
inc
dec
fdiv
repnz
out
loopne
in
test
insw
fcoms
int
cmpsb
ret
dec
lcall
mov
ret
cmp
jae
aam
stc
loop
scas
call
mov
add
pop
pop
push
adc
or
or
adc
gs
jnp
cmc
or
rol
dec
jae
mov
cmp
rcl
sub
test
ret
mov
sbb
xchg
ret
xchg
scas
sbb
test
std
jb
stos
xchg
ret
jne
fadd
add
imul
jae
push
add
fldt
inc
mov
push
push
mov
push
inc
mov
push
adc
jae
adc
push
add
jae
stos
test
jb
iret
lds
mov
push
outsb
xchg
inc
std
sbb
push
inc
jmp
js
ret
pop
add
js
inc
inc
js
add
xor
imulb
orl
xchg
js
add
mov
push
pop
add
add
dec
ljmp
sti
jne
movsb
mov
dec
or
cs
jmp
rorb
push
lds
push
call
add
lea
mov
push
call
or
in
in
in
jbe
sti
lea
sub
in
in
in
sti
xor
stos
xchg
imul
lds
add
add
sti
xor
repz
jbe
xchg
xor
add
add
jmp
mov
hlt
in
jmp
inc
ret
out
add
and
out
addr16
popa
nop
mov
les
mov
out
scas
sar
outsl
test
xchg
lahf
roll
xor
jl
lods
divb
push
add
sar
ret
pop
into
dec
insb
push
loope
mov
adc
incb
call
xor
test
sub
test
mov
test
adc
dec
daa
stos
loop
jmp
xor
incb
push
ds
xor
aam
popa
inc
iret
out
and
dec
fdivrl
jae
xchg
scas
outsl
cmp
add
add
test
mov
mov
sub
sbb
mov
icebp
cmp
add
add
cs
mov
dec
mov
add
mov
outsl
add
out
mov
inc
ljmp
in
push
adc
imul
add
outsb
jne
jb,pt
sub
cld
out
jge
and
jae
cld
push
jg
icebp
push
in
pop
pop
scas
mov
push
jbe
scas
xor
jmp
cmp
jmp
stc
and
ret
or
stos
jl
mov
push
xchg
sarl
js
push
sbb
or
add
xchg
xor
jmp
pop
inc
clc
imul
sti
fistl
cli
pop
dec
sar
call
es
adc
testl
fcmovbe
push
cld
int
ret
mov
mov
mov
mov
mov
xchg
pop
cmpsb
ret
faddl
or
aas
orl
je
fsts
ja
dec
xchg
daa
sar
push
mov
add
xlat
push
cld
cmp
mov
jnp
leave
repz
inc
jnp
inc
or
jne
mov
or
hlt
mov
dec
mov
inc
out
cmpsb
test
pop
push
mov
je
fs
int3
loope
call
jo
or
add
mov
bound
inc
adc
add
jl
mov
or
and
filds
push
bound
mov
dec
jbe
jnp
cmp
jns
ret
decb
jae
fwait
and
cmp
outsl
imul
add
sub
ss
mov
push
scas
fldcw
push
aam
ficoms
loope
mov
add
push
imul
orb
mov
lahf
jbe
daa
xchg
imul
test
add
in
jns
loop
out
ljmp
push
lret
add
adc
jmp
mov
dec
add
icebp
loope
inc
stos
idiv
inc
in
adc
xor
jbe
bound
jmp
add
add
insb
jbe
icebp
push
std
jl
fildl
jmp
std
je
flds
imul
xchg
push
icebp
xlat
inc
cmc
mull
mov
push
mov
jmp
les
cmp
xchg
call
inc
popa
inc
fnstsw
add
push
push
xchg
ret
push
add
std
jne
cmp
push
cmp
call
add
mov
sarl
adc
and
iret
cmp
stos
fs
movsb
mov
movsb
jne
or
add
push
push
jp
std
pushl
cld
add
dec
cmpl
cmp
lcall
pop
ljmp
cmpsb
sti
jne
cmp
push
rolb
jb
ds
cmpsl
jmp
adcl
jne
cmpsb
jne
jnp
pop
incl
add
outsl
test
xlat
sarb
add
ja
add
mov
add
test
sub
and
adc
cmpsb
pop
test
cwtl
sub
je
lea
push
loop
cld
dec
aas
stos
std
in
aas
test
sbbl
je
push
mov
arpl
add
and
add
sbb
push
add
es
mov
incl
outsl
test
pop
mov
ljmp
jnp
inc
mov
jp
jmp
xlat
pop
in
fwait
addr16
adc
push
insb
jae,pn
pop
and
push
out
jnp
ljmp
dec
ljmp
loope
shlb
sbb
xchg
ljmp
jbe
mov
add
aad
adc
inc
pop
loop
pop
sub
add
out
aaa
push
lods
cmp
mov
addl
js
subl
addr16
jmp
js
orl
addr16
jmp
js
sub
cmpl
js
add
mov
jbe
std
adc
push
add
or
mov
outsb
mov
movsb
xor
stc
sub
data16
jl
jbe
mov
hlt
in
mov
pop
imull
fsub
addr16
pop
out
jae
in
mov
add
push
jo
cltd
jl
push
jecxz
push
add
add
lcall
subl
sarl
sti
jne
add
mov
mov
pushf
jne
int
idiv
inc
stos
sti
jne
mov
sti
jne
cmp
inc
mov
jne
mov
sti
jne
mov
mov
rclb
jmp
jmp
lret
ret
push
mov
push
ja
insb
cltd
ret
ja
je
nop
pop
decl
mov
mov
incl
add
cmpsb
mov
cmpl
leave
cmp
push
lock
inc
and
or
imul
je
dec
adc
xchg
clc
orl
xchg
add
jns
jl
ja
or
rcrl
in
js
add
lcall
inc
lock
mov
ja
inc
ja
push
add
add
add
ss
repz
push
adc
inc
add
int3
xorl
mov
orps
les
add
jb
jae
adc
mov
mov
add
or
push
cmp
loop
dec
imul
jno
aad
sbb
out
sub
bnd
cmp
call
jecxz
movsl
stos
add
in
arpl
insl
push
rol
add
roll
or
sub
leave
pop
arpl
pusha
jne
mov
rorb
jmp
movsb
rolb
das
roll
daa
arpl
loopne
divl
fs
push
adcl
arpl
jnp
mov
cmp
daa
test
mov
orl
loope
jmp
add
in
bound
hlt
loope
jmp
les
fxch
fscale
inc
lahf
ljmp
das
lea
jmp
jg
add
dec
adc
mov
pop
adc
push
call
sub
fimuls
mov
lods
or
inc
mov
add
xchg
int
loopne
iret
inc
hlt
mov
cld
jne
jmp
add
add
dec
cmpl
push
loop
aas
js
jge
dec
jbe
xchg
es
xchg
std
inc
es
js
sti
pushl
aaa
std
jns
pop
pop
fwait
mov
add
loop
test
out
jnp
movsb
decl
cmpl
pushf
lock
cld
incb
cmp
fisubrl
jecxz
add
jnp
push
leave
add
mov
jl
ret
mov
xchg
xor
xor
add
mov
dec
mov
and
fiaddl
repnz
lock
clc
out
mov
add
mov
pop
add
mov
sbb
or
popa
and
in
dec
jb
out
xchg
pop
loop
lret
mov
add
fcmovu
mov
push
adc
aas
data16
xchg
cld
pushf
xchg
mov
pusha
pop
sbb
les
inc
dec
aas
add
loope
call
dec
pop
or
cmp
bound
ja
inc
inc
fldpi
fdiv
jmp
cs
dec
add
mov
push
inc
and
pop
inc
jp
add
dec
add
adc
cs
inc
sbb
sub
adc
cltd
sub
jb
pop
mov
dec
or
je
fucomp
bound
bound
rcrb
cld
add
dec
cmpl
pop
cld
jmp
loopne
cmc
jb
movsb
add
cmc
add
sbb
or
add
or
adc
jne
pop
cld
jo
xchg
addr16
push
push
ljmp
or
ja
lods
and
std
dec
mov
nop
inc
add
notl
jne
scas
jne
jge
push
incl
in
lods
scas
sti
or
or
jle
scas
sti
sub
bswap
ret
inc
cmp
mov
lea
add
lods
jne
sbb
lods
sti
lcall
or
std
push
imul
xor
cmp
add
pop
push
add
xchg
push
decb
jp
add
add
in
jnp
ja
out
lock
js
mov
jnp
stos
je
aas
inc
pop
aam
sbb
int3
ret
dec
pop
cwtl
mov
inc
jnp
cmp
add
sti
jnp,pn
sbb
mov
addr16
rorl
push
jmp
add
pop
add
out
pop
cwtl
jb
mov
cmpl
into
fistpl
sub
inc
mov
xor
dec
jbe
jnp
movsl
fwait
add
inc
adcl
sbb
dec
jmp
in
pop
addr16
test
movsl
mov
add
stc
ljmp
aas
data16
add
es
adc
fnstenv
outsb
outsl
aas
mov
data16
stos
push
movsb
repz
js
cmova
outsb
iret
add
adc
lods
out
inc
mov
pop
ljmp
mov
pop
out
ret
iret
dec
xchg
ss
addr16
ret
popf
test
sub
leave
rcrl
push
je
add
mov
push
ffreep
inc
cmp
loop
push
or
cld
ds
fcmovbe
jmp
mov
jo
pavgw
push
lea
pushf
int3
pop
jbe
pop
add
push
test
jmp
pop
cld
scas
mov
cmp
rcrb
negl
loopne
add
js
pop
mov
aas
add
addr16
mov
inc
ljmp
lock
jmp
add
and
or
inc
fwait
jbe
dec
or
ret
les
and
jb
xchg
out
arpl
dec
std
jne
add
jge
dec
add
push
sbb
add
cmpsb
arpl
cmp
pop
out
scas
sti
jne
mov
dec
rorb
sarb
pop
leave
pusha
pop
cld
sarl
add
sbb
add
add
jb
inc
xchg
ss
mov
mov
dec
push
dec
or
jg
sti
jne
aad
inc
jnp
inc
add
mov
jnp
xor
and
je
call
cmp
mov
add
es
jmp
and
arpl
and
jnp
xor
rcll
add
shlb
leave
add
mov
push
jle
cmpl
sti
mov
sbb
sbb
push
decl
pop
cwtl
mov
add
mov
sahf
ret
add
and
pusha
inc
xchg
jb
or
outsl
into
enter
mov
sti
mov
or
js
jmp
mov
ja
aas
pop
dec
jmp
jnp
lods
stos
add
ljmp
add
pushf
inc
into
sti
loopne
and
mov
in
and
jnp
jmp
outsl
xchg
lods
cmpsl
jnp
jmp
sarb
ds
jmp
jnp
loopne
jge
and
lahf
dec
jmp
jnp
sbb
push
aam
andl
push
ljmp
dec
add
nop
add
mov
sahf
mov
gs
idiv
fadds
leave
add
gs
xchg
jp
inc
call
adc
pop
ret
pop
inc
imul
adc
jmp
movsl
inc
mov
and
mov
bound
scas
pop
cld
push
xchg
jbe
xor
lret
push
xchg
cmp
std
fs
cmp
dec
jne
pop
lret
add
in
pop
cld
ss
add
enter
add
add
jbe
shll
dec
mov
adc
inc
add
ds
inc
add
dec
cmp
or
dec
cmp
sbb
dec
popl
add
inc
mov
std
xor
insl
sbb
sti
lcall
or
out
push
pop
or
lods
pop
inc
rorl
jne
mov
clc
lods
scas
lea
mov
push
lea
daa
jnp
jnp
xor
push
repnz
push
lods
xor
cld
sub
dec
fwait
jae
and
add
sub
add
addr16
daa
cwtl
mov
add
hlt
addl
sar
jne
add
add
jnp
ja
jo
in
in
lods
inc
movsb
mov
js
xlat
loopne
int3
cwtl
imul
je
dec
shr
ss
jmp
pop
push
ljmp
roll
insb
inc
shlb
sbb
ljmp
push
adc
movsl
cmp
fildl
das
das
data16
add
add
lahf
por
stos
out
pop
mov
gs
cmp
push
por
sub
mov
cmp
das
mov
cmpb
lock
sub
xchg
dec
pop
lar
add
imul
xchg
daa
ds
add
cmp
inc
push
ja
in
jg
fisttpl
scas
pop
sbb
je
add
insb
or
push
push
cld
adc
push
jbe
xlat
fimull
jbe
outsb
gs
faddl
es
cld
push
jbe
pop
fisttpl
ds
fcmovne
inc
shl
cs
hlt
lret
dec
push
jb
rol
add
rclb
add
mov
dec
fildll
jne
add
stos
imul
clc
arpl
repz
ljmp
and
mov
mov
or
push
aam
and
inc
scas
sbb
inc
cmpsb
sbb
movsl
xor
sti
call
mov
loop
std
jne
and
arpl
dec
ljmp
aas
xchg
pop
mov
jnp
cwtl
dec
push
stos
pushf
dec
and
je
cmp
cmpl
test
add
lock
in
push
sub
dec
imulb
mov
je
cmc
dec
test
sbb
arpl
mov
leave
movl
fstps
lea
icebp
lahf
je
adc
cld
add
hlt
add
inc
jecxz
add
jnp
loope
out
cmpsb
add
dec
dec
test
dec
jbe
jnp
xchg
jecxz
adc
pop
test
int3
pop
fs
outsb
dec
xchg
repz
cmpsl
push
jne
mov
repnz
jl
into
lds
pop
jae
inc
cmp
hlt
pop
or
stos
push
sti
fwait
mov
inc
mov
add
add
por
repz
mov
add
inc
add
jmp
aaa
bound
or
add
xchg
in
jmp
mov
or
push
jg
jp
wbinvd
sub
ja
xor
call
fs
sub
xlat
sbb
add
add
inc
int
dec
jbe
and
scas
sbb
stc
call
jbe
add
bound
adc
and
mov
dec
add
push
jbe
inc
ljmp
dec
jbe
notl
fildl
flds
add
dec
popl
sbb
jne
mov
pop
shl
cmpl
mov
ret
popl
add
std
jne
mov
jg
push
xor
cld
je
fs
lea
inc
ljmp
push
push
shrl
sub
fisttpl
out
push
std
xor
call
mov
int3
jge
adc
add
push
add
inc
fists
call
add
push
mov
or
stos
mov
jb
in
add
jg
xchg
sbb
push
and
pop
aaa
movsl
add
push
jo
or
xor
insb
nop
xchg
mov
dec
push
adc
das
test
dec
cmc
pushf
enter
push
add
add
stos
dec
cld
lret
push
sbb
pushf
je
lds
or
add
adc
lock
mov
sbb
mov
in
sub
jnp
mov
fdivrl
sahf
int
sub
jnp
jo
mov
lods
adc
orl
fnstenv
xchg
dec
pushf
sahf
xchg
sahf
sbbl
data16
addr16
fcoml
xorl
test
ret
dec
jmp
add
cmp
cmp
in
sub
decb
or
adc
cltd
popl
jmp
add
shl
sti
pop
push
mov
jmp
lcall
rorl
stc
dec
cld
cs
dec
add
sbb
dec
sti
pushf
jl
push
push
mov
xchg
decl
xchg
js
jmp
pop
adc
js
jbe
add
push
jno
push
xchg
push
cmovge
js
mov
jmp
pop
dec
jbe
adc
shl
mov
incl
jg
xor
cmc
fs
lahf
cmp
fwait
xchg
push
xchg
fs
daa
jmp
incl
dec
push
ljmp
push
add
sti
add
jne
push
ljmp
add
mov
inc
cld
cli
pop
inc
xchg
ljmp
test
jbe
xchg
popa
or
adc
adc
add
ljmp
dec
mull
push
add
jp
fs
push
sti
jne
imul
jnp
xchg
imul
sub
inc
pop
dec
inc
jnp
mov
shrb
inc
add
repz
mov
jnp
pop
addr16
or
xor
xchg
addr16
test
add
xor
ret
bound
xor
adc
mov
cmp
clc
xchg
mov
pushl
cld
insb
stos
push
call
xor
sti
ljmp
add
add
inc
cltd
je
dec
xchg
jnp
dec
popf
mov
add
push
xchg
and
dec
jne
jae
test
lds
mov
loopne
sub
rcr
ret
icebp
stos
pop
mov
xor
add
sbb
lcall
add
xor
cmp
xorb
arpl
cs
fmull
inc
inc
add
jnp
aas
or
dec
mov
cmp
inc
jbe
adc
shl
mov
incl
ja
cmp
dec
dec
cld
pusha
inc
dec
imul
push
ljmp
dec
cld
aam
xor
jnp
push
bound
dec
jbe
adc
adc
movsl
mov
lea
dec
push
add
movsb
sti
push
add
dec
dec
jbe
dec
dec
jbe
shlb
out
jecxz
addl
dec
push
bound
add
test
std
jne
hlt
mov
inc
push
fstpt
jmp
mov
orb
jl
adc
inc
adc
packsswb
or
push
pop
push
cli
dec
decl
aad
clc
dec
pop
cli
push
out
or
int
cmp
add
repz
out
jne
jns
incl
push
ljmp
addr16
add
cli
call
cltd
or
loop
jbe
mov
jbe
dec
mov
scas
test
xchg
dec
or
xchg
sti
mov
pop
cmp
xchg
icebp
in
std
je
out
cld
and
push
call
mov
rolb
bound
add
add
add
pop
pop
xchg
incb
movsl
and
add
xchg
dec
aam
lock
int3
add
call
rcl
sub
mov
rorb
add
push
adc
pop
call
repnz
xchg
mov
dec
cmp
dec
imul
push
stos
sub
sbb
lock
enter
xchg
jno
rolb
mov
cli
and
inc
lea
outsl
inc
testl
std
inc
negl
xorl
xchg
in
push
adc
ss
das
aam
inc
rorb
cmp
test
pop
mov
and
jns
inc
adc
add
fsts
sub
add
add
dec
mov
jb
cmp
into
cmp
test
add
pop
in
cmp
js
ret
pushf
ljmp
rcrl
dec
dec
add
lods
add
jle
push
ljmp
lcall
push
inc
cld
push
or
cmp
test
cld
mov
adc
ss
leave
sub
push
jb
add
iret
adc
cmp
xchg
xchg
adc
push
incl
jbe
call
jmp
cli
mov
frndint
mov
mov
jbe
push
clc
jns
adc
inc
jg
add
push
jne
ficoml
stc
pop
popl
test
dec
mov
add
das
aam
adc
repnz
mov
dec
push
mov
sar
push
rol
mov
lock
jnp
mov
shlb
or
xchg
or
jl
cmp
je
out
test
out
nop
je
or
cld
mov
jnp
push
scas
sub
scas
fisttpll
add
add
fcompl
or
xchg
xor
or
sbb
adc
cmp
cld
mov
inc
in
mov
xchg
je
fwait
xor
aam
mov
or
nop
mov
add
es
and
xchg
jno
xchg
fcoml
mov
add
adc
jmp
call
fs
aam
add
pop
mov
aas
add
and
bound
cmp
mov
lds
add
xor
stos
sub
inc
sti
fcompl
lock
in
ss
cmp
inc
xor
je
mov
bound
iret
lds
add
or
inc
sub
mov
inc
imul
add
bound
push
data16
sti
je
sub
or
je
aas
jbe
add
push
fimuls
push
shr
fwait
xchg
xchg
ja
xchg
andb
sahf
ljmp
dec
add
mov
push
ljmp
popf
sti
outsb
xor
or
lods
aad
push
inc
imul
shrb
jmp
add
add
mov
shrl
insl
pop
or
clc
fdivrp
decl
sub
jne
in
ljmp
imul
push
push
inc
in
adc
cld
leave
adc
push
jmp
xchg
mov
in
push
std
fimuls
jmp
mov
sbbb
gs
and
add
rclb
push
add
ljmp
je
les
lret
out
cld
arpl
jnp
incb
xchg
je
popf
sbb
je
xlat
push
lods
jo
xor
pusha
xchg
lods
push
xor
decb
cmp
mov
jae
add
lods
fwait
cmpb
xor
jnp
lret
dec
sub
mov
push
push
sti
aaa
add
sub
xor
add
xor
sub
idivl
repz
push
add
outsb
push
outsb
pop
dec
stos
add
mov
inc
xchg
push
aas
dec
dec
inc
push
push
sub
cmp
lods
ds
sbb
mov
add
jmp
add
fwait
test
loop
adcl
sbb
cmp
dec
sarl
lds
push
add
rorb
jnp
xchg
mov
xchg
add
sarl
or
dec
adc
jmp
sub
ss
cmpsl
popl
push
nop
movsb
sti
pop
push
xchg
repnz
xor
push
mov
jmp
js
ss
jo
add
add
ljmp
sarl
js
inc
push
sub
jne
mov
jmp
pusha
xor
cld
push
repz
lock
push
into
idivb
jbe
out
rorl
push
mov
mov
shr
mov
popf
pop
cmp
cld
sbb
cmp
loopne
dec
add
lret
push
fcmove
push
gs
cld
jne
fcmovb
push
add
push
lret
cld
jne
fidivrl
jne
fidivl
jne
lret
jbe
cmp
call
leave
ret
push
mov
push
push
call
jmp
push
push
add
jae
add
push
add
loop
nop
push
and
sub
sti
ljmp
adc
xchg
pop
add
in
arpl
outsl
popl
push
add
cmc
fs
jnp
or
add
xor
aam
je
mov
notrack
out
roll
cli
jp
clc
jno
push
popa
and
clc
out
add
incb
repz
jnp
into
ljmp
in
hlt
push
out
push
mov
xor
jae
fcoml
or
mov
add
sbb
and
sub
mov
dec
push
xchg
aaa
cmp
mov
sub
test
adc
cmp
xor
sub
lock
insb
adc
arpl
aam
jae
iret
push
lahf
cmp
dec
mov
inc
jnp
inc
and
jmp
xor
inc
sub
add
bound
inc
sbb
mov
add
cmp
pop
mov
imul
or
aam
inc
cmp
pop
test
les
cmp
mov
cli
jbe
jg
sub
ljmp
dec
add
mov
dec
push
jle
inc
ljmp
lahf
sti
data16
ljmp
mov
aad
inc
jmp
add
push
sarl
outsl
sbbb
js
sti
xchg
nop
xor
icebp
cmp
hlt
inc
cmp
push
mov
cld
je
xor
and
dec
add
and
inc
fists
or
data16
and
or
and
std
jne
jbe
cli
mov
std
jbe
insl
dec
cli
jmp
xor
lods
jg
cld
lea
fisttpll
daa
jl
lcall
mov
imul
lcall
inc
pop
pop
add
push
xor
dec
push
xchg
dec
sub
cmp
aas
push
pop
dec
cli
call
jnp
shlb
or
incl
add
push
sbb
push
push
mov
cmp
mov
movsl
jne
hlt
cmp
in
test
sub
inc
mov
enter
push
lock
xchg
mov
nop
or
mov
scas
cmp
adc
outsl
cmp
incb
sub
mov
out
test
jae
orl
jmp
rorb
dec
clc
int3
adc
aaa
mov
cld
adc
push
xchg
shl
push
mov
outsl
bound
in
add
dec
pop
push
or
ror
stos
scas
stos
add
lds
inc
add
jnp
mov
pushf
xchg
loope
jnp
sub
jge
scas
mov
nop
stc
xchg
pop
adc
insb
add
movl
mov
jbe
loopne
dec
cmc
xor
mov
sti
mov
mov
xlat
dec
xor
sti
adc
xor
dec
mov
push
rcr
fwait
xchg
clc
jb
and
add
dec
add
je
cmp
jmp
mov
js
push
jmp
add
cld
jmp
dec
ret
inc
adc
add
int3
push
or
mov
or
leave
sti
jae
iret
jle
push
inc
xor
insb
mov
ljmp
jbe
lret
in
xor
dec
xor
fiadds
add
lret
in
cli
or
jg
or
add
or
and
pop
leave
mov
add
jg
inc
dec
dec
add
mov
push
add
gs
adc
push
pop
add
push
add
daa
xchg
or
and
into
lcall
jae
aad
call
add
repnz
pop
shll
or
scas
and
add
and
cmc
decb
faddl
jnp
cmpl
dec
fdivl
clc
decb
xchg
incl
sbb
dec
mov
pop
push
add
rorl
sub
push
mov
xor
ret
add
or
xor
fwait
test
scas
pop
popf
cld
or
lds
in
xchg
jbe
imul
ss
xor
mov
and
inc
jmp
dec
sub
lds
pop
or
pop
leave
fcompl
sti
fnsave
loope
test
mov
add
dec
jmp
sbb
add
jmp
stc
lods
and
add
cmp
ja
add
xorb
xchg
add
in
stc
xor
jo
es
je
xor
pusha
out
fs
es
out
xor
aad
mov
inc
jmp
stc
movb
mov
jmp
js
jg
xor
jmp
add
cmc
mov
jmp
js
sti
cld
pusha
sub
js
xchg
push
cld
jb
push
ljmp
jle
add
popa
xor
cmpsb
popa
inc
add
int
xor
inc
cmp
xor
cmpb
push
loop
inc
adcb
stos
sbb
jne
adc
call
addr16
sti
jmp
dec
lea
add
sbb
enter
mov
or
push
fstpl
dec
push
dec
pop
rclb
jbe
std
cmp
jmp
xchg
cld
jne
iret
jbe
pop
cmp
pop
into
cld
lcall
xchg
xor
jmp
mov
pushf
outsl
repz
int
decb
sar
jl
ret
out
lret
dec
push
push
insb
inc
loope
xor
add
mov
out
jmp
ljmp
cmp
mov
cmc
pop
and
and
add
xor
in
sbb
mov
rol
push
inc
mov
pop
rol
lock
lret
dec
aam
xorb
pop
rorl
lret
xor
dec
mov
jg
movsb
jmp
or
add
lds
enter
inc
jnp
mov
add
es
jnp
lock
enter
jecxz
test
inc
cwtl
rol
mov
or
mov
aaa
jg
inc
test
add
pop
je
and
pop
or
push
sbb
and
mov
mov
js,pn
mov
cld
add
sbb
mov
sti
pop
aam
shr
cltd
xchg
sbb
mov
das
jbe
adc
jmp
add
jmp
jg
add
mov
repnz
jge
add
js
add
push
insb
add
hlt
lods
popf
sti
push
cmpsl
sub
lds
pop
ret
aaa
sti
call
add
js
push
das
popl
sahf
repz
ljmp
sbb
hlt
call
push
call
pop
out
push
lods
jecxz
jmp
movsl
dec
push
xor
lods
cld
jne
mov
mov
or
push
std
adc
dec
mov
jbe
push
dec
incl
xchg
dec
stos
cld
push
add
pop
arpl
mov
mov
or
sub
std
decl
stos
mov
inc
cmp
mov
shll
in
repz
mov
inc
jae
mov
jge
inc
daa
jg
add
data16
jle
nop
or
rorb
shl
loope
jle
mov
jae
add
add
ljmp
pop
mov
fs
jge
into
cmp
mov
pop
jne
cmp
push
push
sub
sbb
xchg
mov
mov
movsb
add
add
aaa
and
jge
pop
jne
int
in
lds
loope
dec
stos
push
cmc
add
stc
jmp
ljmp
sub
adc
insb
jl
push
adc
sub
jl
sub
jl
sub
addr16
sub
jnp
push
add
sub
jnp
and
mov
and
jnp
mov
les
loope
jae
sub
mov
push
ljmp
pop
hlt
sahf
jo
jbe
add
push
xor
mov
dec
sub
jle
push
ljmp
add
data16
mov
pushf
pop
and
dec
pavgb
adc
sbb
xlat
xchg
sti
cs
out
lock
jl
sub
push
sub
hlt
push
loopne
xchg
mov
sub
xor
and
test
push
out
dec
push
ljmp
xor
jne
add
mov
stos
ljmp
cmpsb
jecxz
add
leave
and
push
imul
xor
push
push
je
cld
inc
push
ljmp
cmp
and
clc
add
add
xor
movsl
out
add
push
hlt
hlt
xchg
dec
add
and
inc
push
inc
in
mov
xor
add
jg
pop
cmp
mov
mov
inc
cs
add
adc
jnp
inc
jae
addr16
add
mov
call
adc
iret
hlt
out
ret
idiv
dec
jle
outsl
jg
xor
jns
mov
fildl
push
mov
mov
sti
adc
jecxz
jnp
sub
idiv
incb
add
pop
push
addr16
sar
xor
add
dec
jmp
push
pusha
jp
pop
pop
sub
idiv
inc
sbb
jnp
jns
add
and
js
sub
sbb
xchg
les
or
lds
dec
bswap
in
mov
xchg
js
xchg
lea
daa
in
jg
add
imul
or
push
jmp
jnp
push
shll
jmp
add
push
add
mov
scas
inc
mov
fs
in
add
add
push
jmp
call
lea
xchg
dec
add
cltd
inc
sub
or
dec
add
adc
arpl
add
ja
add
ja
inc
mov
jne
pop
call
mov
inc
dec
and
and
pop
popa
add
js
push
in
xchg
push
xchg
mov
mov
push
sti
out
add
add
js
or
dec
dec
popl
push
xchg
ss
js
pop
sub
add
add
into
mov
and
inc
incl
inc
lock
xor
cld
ja
mov
arpl
scas
lcall
adc
mov
push
add
inc
call
bound
cld
imul
sbb
test
push
add
pop
push
loopne
inc
push
in
iret
lods
cld
adc
cltd
xchg
outsl
js
push
fcoml
add
push
push
add
repnz
sbb
dec
mov
mov
adc
xor
mov
mov
fistl
aaa
ja
pop
or
adc
cmp
push
in
inc
push
call
faddl
dec
sub
cmpl
je
fwait
jmp
mov
or
loop
jbe
add
movsb
stc
push
out
hlt
jbe
xchg
stc
pop
cs
inc
jnp
add
push
mov
xchg
lock
dec
sahf
jae
lds
adc
xchg
adc
add
ss
je
ss
jbe
and
add
loope
xchg
xor
sbb
pop
js
lcall
movsl
test
mov
int
push
in
movsl
xchg
and
jne
add
xchg
cs
xchg
sub
call
add
test
add
daa
jl
and
add
jmp
jmp
aas
sbb
ds
and
cs
sbb
pushf
in
sub
sub
fwait
jns
add
lcall
dec
fcom
je
push
hlt
fisubrs
add
xchg
sti
into
mov
fidivrs
xor
inc
jg
fadds
and
pop
dec
sbb
sahf
push
and
jl
and
jo
xor
jle
mov
add
inc
jmp
sub
adc
mov
xor
dec
or
test
cmpsl
cld
ljmp
or
out
hlt
lcall
or
out
loop
incl
add
xlat
jecxz
jge
imul
and
cld
incl
xchg
test
movsl
cld
ljmp
or
ja
hlt
lcall
or
out
loop
lcall
fcomi
std
pushf
cmpb
sbb
mov
es
inc
or
cmp
js
incb
das
pop
inc
add
cmp
js
je
cli
pop
arpl
fs
jo
into
das
pop
sub
push
js
cmp
hlt
pop
and
vcvttss2si
mov
sub
jb
cmpsb
pop
pop
or
bnd
add
hlt
pop
adc
mov
in
jno
fnstenv
fdivrl
not
mov
aaa
shlb
push
mov
mov
xchg
jno
mov
dec
sub
popf
and
cwtl
sbb
xchg
xlat
movsl
jo
and
test
cmp
jno
mov
pop
les
and
pop
outsb
jno
add
loop
scas
rcll
add
ss
ret
and
mov
call
je
loop
add
and
cld
add
fdivl
sub
adc
jo
stc
or
out
mov
lcall
das
add
cmpsl
fbstp
popa
or
cli
push
test
jmp
mov
and
mov
and
jmp
adc
sti
es
fbstp
rorl
inc
adc
mov
push
ret
add
add
fwait
loope
pop
pop
daa
lods
sub
jbe
mov
and
fs
mov
and
mov
cmp
xor
xor
ljmp
scas
cld
or
and
pop
imul
and
loope
decl
push
add
movsl
pop
clc
call
add
adc
jmp
call
jne
lods
jbe
jp
inc
pushl
jbe
mov
sti
jmp
cli
adc
call
or
sti
call
cltd
jmp
sbb
inc
add
ret
loop
repnz
adc
push
ljmp
mov
icebp
divl
cwtl
sahf
lret
psubusb
inc
pop
adc
add
add
mov
mov
addr16
rdseed
xchg
mov
jo
out
xlat
and
push
aaa
sbb
jnp
inc
je
push
sub
bnd
inc
ljmp
lret
daa
add
cmpsb
adc
and
repz
and
shl
lock
add
xchg
dec
outsb
fadds
add
sbb
insl
inc
sub
jg
push
sbb
jl
mov
dec
jmp
testl
shrl
jmp
insb
insl
jg
dec
sbb
scas
fmull
ret
adc
jl
fstpt
sbb
cmp
inc
jmp
dec
and
push
cld
add
adc
adc
add
cmp
idivb
insb
in
sbb
inc
lcall
cmpsb
movsl
push
sahf
lds
js
sbb
add
jmp
rorb
sub
stc
push
mov
xor
shlb
sbb
aam
sbb
loope
loop
dec
clts
shr
addl
movsb
int3
mov
pushf
push
sbb
icebp
mov
sub
add
js
ret
fiaddl
jmp
js
add
mov
dec
add
test
push
ja
add
push
pop
cli
push
hlt
add
stos
cld
jne
jp
sub
dec
pop
shlb
and
add
fiaddl
in
sbb
call
xchg
fwait
lret
lea
sahf
hlt
decl
or
shl
sub
add
cmpsl
cld
push
testb
dec
sti
mov
popf
cld
decl
push
std
dec
iret
jmp
insl
movsl
imul
and
cld
jmp
movsb
cld
mov
cld
sti
addr16
fiadds
or
popw
pop
cmpb
push
aam
sbb
mov
fiadds
enter
add
pop
bound
mov
jo
xchg
std
jmp
inc
incl
mov
cmpl
insb
pop
jle
pop
pop
push
notb
jae
movsb
stos
jmp
inc
push
mov
jnp
into
addr16
pop
mov
enter
or
sbb
imul
add
sub
adc
push
out
push
lds
popf
imul
lea
stc
jl
lods
sbb
pusha
lods
sbb
daa
sbbl
test
fists
xchg
push
punpckhwd
mov
jno
sbb
imul
sbb
push
sub
mov
push
add
and
sbb
add
push
sti
out
loop
xchg
sbb
push
aaa
sbb
into
and
das
insl
sub
cld
jl
and
scas
xor
mov
push
sbb
push
or
jmp
js
xchg
jg
inc
popfw
dec
ljmp
adc
aam
scas
xor
cmp
std
hlt
pop
popl
add
rcrb
jecxz,pn
jbe
xor
test
cmpsb
add
js
ljmp
sub
ljmp
movsl
cld
leave
pusha
pop
cld
push
mov
les
hlt
sti
imul
cmp
cld
dec
push
add
fs
test
push
push
push
cld
outsl
sbb
pop
insl
scas
cld
decl
jb
cmp
mov
mov
add
sarl
fildll
std
jne
jp
sub
pop
rclb
add
ret
inc
mov
add
inc
hlt
gs
ljmp
sar
imul
xor
adc
incb
add
cmp
shll
add
arpl
inc
jnp
repnz
das
sar
aaa
ja
add
mov
iret
push
sarl
adc
int3
fs
aam
adc
fdivrs
insb
incb
sar
scas
sub
mov
decl
mov
pop
decb
sti
pop
pop
cmpsl
cmp
push
sub
lods
push
fstpt
sbb
loope
jno
in
add
repz
std
adc
jg
sbb
gs
ret
fdivrl
dec
mov
gs
loope
rorl
test
adc
add
inc
add
lods
adc
dec
lods
adc
gs
inc
andl
pop
gs
push
test
ret
jg
insl
adc
gs
add
mov
cs
push
ficoms
pop
add
sbb
push
jg
addr16
daa
hlt
push
sahf
adc
sti
shr
lahf
adc
jne
lods
add
scas
sar
push
sub
pop
adc
xchg
push
lcall
pop
mov
adc
sbb
es
push
adc
pop
push
sbb
mov
lcall
pop
fcmovu
jle
adc
xor
sbb
popw
lcall
add
loop
xlat
adc
add
aas
ljmp
jg
lcall
dec
add
pushf
stos
jbe
jp
cmp
jge
mov
and
xor
or
jbe
lcall
mov
test
cmpsb
and
mov
ja
mov
scas
mov
in
cld
call
or
add
scas
jecxz
mov
mov
les
ss
ljmp
out
ds
jnp
pop
mov
jns
push
xchg
and
pop
push
cltd
rorl
out
and
inc
jecxz
call
xor
pop
out
or
add
data16
pushf
jb
aas
sbb
jmp
call
inc
idiv
fiaddl
arpl
jnp
sbb
pushw
call
int3
pop
push
push
push
and
xchg
cld
lods
shlb
enter
fcompl
add
mov
clc
dec
sub
add
adcb
mov
enter
outsb
mov
and
add
mov
mov
jnp
sub
add
jge
adc
adc
mov
dec
jmp
jmp
dec
cmp
inc
rcll
adc
insb
jmp
dec
and
adc
inc
add
movsl
popa
mov
fwait
push
popa
daa
adc
push
pushf
adc
in
js
xchg
or
sarl
dec
pop
dec
dec
ljmp
adc
jmp
add
js
dec
sarb
std
hlt
push
mov
rcr
cmp
lcall
jmp
sbb
jbe
mov
daa
andl
fisubl
imul
pusha
pop
pusha
mov
adc
pop
lcall
inc
or
out
push
adc
jge
cld
imul
cli
lret
cmp
adc
cmp
inc
and
cmp
shrb
je
and
call
pop
mov
cld
mov
dec
push
cli
xchg
push
adc
cld
jne
mov
jecxz
lods
cld
jmp
or
cmc
stc
inc
cmp
mov
and
xor
mov
jne
outsl
jbe
add
mov
iret
pop
leave
loopne
add
lods
jb
mov
and
or
jns
pop
repnz
jnp
and
mov
jg
not
inc
rcr
in
inc
jnp
addr16
idiv
or
cld
push
push
jmp
out
sub
pushf
addr16
into
ljmp
loopne
or
mov
add
push
add
add
icebp
mov
in
pop
icebp
or
int
sti
int3
dec
push
call
sbb
inc
dec
mov
sti
push
jmp
mov
xlat
cs
sbb
add
jl
fisttps
arpl
pop
gs
sub
pop
inc
adc
add
out
xchg
pop
pop
adc
add
sbb
mov
out
xchg
stc
mov
sub
fisttpll
fldl
hlt
sbb
mov
pop
repz
mov
xlat
loopne
aaa
pop
aam
add
daa
or
xor
divb
cmp
mov
jmp
jge
movsl
jmp
xchg
pushf
push
or
lcall
add
sub
and
jmp
jg
pop
sub
jmp
arpl
add
call
repz
sub
mov
pushf
dec
mulb
and
int
jmp
ret
loop
jg
mov
loop
inc
in
test
pusha
decl
testl
jne
add
stos
cld
jne
stos
jbe
ljmp
in
and
call
ljmp
outsl
jecxz
mov
or
adc
dec
add
pushf
stos
jbe
mov
cld
insl
and
call
test
jecxz
enter
cmpsl
mov
std
jnp
pop
pop
add
mov
push
add
subb
adc
je
mov
and
jnp
inc
push
decb
add
push
push
lea
add
push
in
fidivrs
jl
mov
data16
inc
jnp
rorl
pop
and
call
add
mov
orl
jmp
pusha
push
mov
add
rorl
add
pop
call
add
push
push
pop
int3
sarb
pop
int3
or
fmul
ss
mov
or
xchg
bnd
pusha
popf
sbbl
orl
in
jl
es
les
fists
dec
lret
push
sub
ret
int
pop
push
jge
xchg
add
add
iret
mov
mov
cmp
movsb
jmp
or
imul
adc
sbb
pop
adc
inc
or
pop
popl
add
sub
ljmp
in
sti
push
dec
or
push
sub
into
xor
jbe
xor
sti
mov
sub
les
popf
jl
cld
sahf
mov
jmp
jg
cld
mov
cld
ljmp
add
cld
outsb
inc
hlt
ljmp
lock
add
adc
mov
repz
ret
orb
sub
ljmp
mov
dec
repz
dec
add
lahf
sahf
cld
pop
rorb
add
push
lea
jb
sti
mov
add
hlt
jmp
mov
jbe
or
add
jp
xorl
hlt
incl
enter
rolb
push
xlat
mov
test
dec
sti
jne
jae
cmp
popa
mov
or
push
adc
pop
and
add
aas
jae
or
incb
add
push
cs
pop
ss
push
inc
rcrl
push
je
or
pop
jnp
dec
sarl
mov
cmc
jmp
call
repnz
push
in
out
loop
push
jmp
lahf
cmp
pop
popf
push
je
push
jnp
jg
pop
cmp
xor
pop
push
add
jnp
pop
and
xlat
fidivs
or
jmp
js
add
notb
push
in
add
push
or
push
push
push
aad
test
int3
lcall
mov
push
shll
movsl
mov
add
mov
orps
push
lar
je
lods
pcmpeqb
mov
add
add
and
add
fwait
dec
shlb
cmove
add
mov
inc
jmp
aas
add
inc
xorl
lret
out
dec
pop
sub
push
add
insl
add
pop
ret
push
rorl
or
xchg
movsb
sti
push
hlt
xor
es
add
incl
xor
mov
fidivrl
sti
sahf
add
inc
add
inc
ja
jne
es
xchg
cld
push
sub
cltd
xchg
psubq
cltd
inc
test
dec
jne
rorl
add
ljmp
fwait
les
dec
add
adc
inc
clc
rcrb
or
xchg
adc
in
adc
call
push
cmpsl
add
idiv
incl
add
paddb
xchg
cmpsb
pop
in
lcall
fstpl
push
mov
into
mov
push
std
adc
call
fcmovnb
imull
cmc
inc
add
adc
call
jnp
int3
sti
dec
sbb
call
xor
sti
dec
jo
xorb
jmp
je
pop
stos
xor
mov
bswap
call
out
xchg
mov
addr16
jns
call
fcompl
push
je
adc
enter
push
lock
and
popa
lods
dec
or
scas
inc
pop
jnp
leave
out
sub
xchg
add
aas
push
negl
jnp
fldenv
cmpsb
das
sub
and
add
dec
negl
cmp
dec
leave
and
cmp
add
push
adc
jl
push
repnz
add
and
hlt
add
loopne
or
dec
movsb
xor
jmp
repnz
add
inc
dec
dec
shl
sarb
push
stos
mov
or
jmp
cmp
scas
fnstsw
dec
xor
jmp
add
add
testl
js
inc
enter
inc
and
ljmp
jp
push
rolb
cld
jmp
js
push
cs
jmp
cld
repnz
in
sti
xchg
mov
add
or
lock
out
shlb
jb
fs
sub
inc
mov
add
mov
rolb
out
roll
out
jne
aaa
loope
xchg
sub
push
jbe
add
add
jnp
lahf
cld
ljmp
cld
jne
movsb
shll
mov
cld
jne
popf
jbe
mov
add
ficompl
pushl
fsubr
sti
data16
decl
mov
adc
cmpsb
outsl
or
stc
cld
pushl
add
gs
jne
mov
in
cld
jne
sahf
jbe
aad
add
ds
sti
jmp
data16
incl
in
push
lret
jmp
mov
rorl
mov
or
jnp
out
iret
push
mov
sti
dec
jl
out
push
sahf
mov
and
dec
add
push
stos
or
push
je
inc
aam
lret
cmp
pop
add
adc
sbb
pop
xor
pusha
cmp
addr16
mov
pop
int
decl
xlat
shll
jmpw
in
mul
sub
dec
arpl
out
or
cmc
dec
je
fwait
repnz
cs
push
cwtl
lods
mov
addr16
pop
mov
cmp
flds
push
addl
add
add
rorb
das
imul
les
push
cmp
lock
test
mov
mov
dec
sub
je
outsb
dec
adc
imul
add
jo
stc
adc
ftst
addr16
dec
addr16
rorl
aaa
cli
inc
lds
jmp
add
xor
adc
add
sub
add
sti
sahf
dec
sysret
jmp
xor
push
hlt
jo
cmpb
jne
sarb
std
arpl
xor
ljmp
stc
sti
mov
cmc
stos
stc
mov
leave
sub
jb
rol
sbb
mov
or
mov
xchg
xchg
js
mov
mov
lea
out
jne
sub
add
adc
ss
pop
test
dec
push
add
sub
into
imul
jmp
jecxz
cmp
sti
js
push
jns
cld
fcoml
inc
add
lcall
ss
jmp
cmp
push
jne
cwtl
ljmp
mov
push
sbb
imul
push
jmp
add
repz
inc
adc
or
callw
rorb
mov
loop
cld
jne
xchg
mov
jnp
dec
out
push
dec
and
xlat
ret
push
push
adc
sti
ffree
xor
fdivr
mov
jnp
pop
mov
jnp
dec
je
int
pop
pop
insb
push
inc
mov
cltd
dec
je
lea
add
add
cmp
jg
mov
pop
inc
out
inc
dec
addr16
jmp
in
adc
or
test
or
dec
mov
add
sbbl
jnp
cli
mov
jnp
jmp
add
lods
ror
in
jnp
jmp
frstor
push
cli
movsb
mov
andb
bound
incb
add
out
pop
ds
jmp
lds
negl
dec
dec
lahf
jo
not
pop
push
cmp
mov
push
sub
aas
sub
mov
sbb
std
stc
xchg
sti
fsubl
pop
in
stc
add
cmc
mov
add
jb
push
mov
add
into
push
pop
xor
add
add
push
push
jnp
add
xor
ljmp
mov
adc
inc
outsb
sub
dec
loopne
dec
jg
jge
sbb
ja
jmp
xor
test
stc
mov
test
dec
ljmp
aas
sti
ds
adc
or
repz
icebp
mov
cld
push
mov
mov
test
cmp
mov
add
in
xchg
call
in
repz
movsl
or
call
divl
test
leave
shl
sti
push
sbb
cld
imul
add
incl
pop
add
sbb
inc
add
inc
arpl
push
ljmp
hlt
arpl
cmp
add
gs
incl
add
or
addr16
pop
add
jnp
cmpsl
hlt
dec
lret
sti
in
jp
out
pop
dec
mov
add
cs
pop
xorb
mov
or
pushl
cli
test
dec
decl
dec
push
jnp
loop
loop
je
outsl
push
jae
addr16
incb
add
sbb
dec
push
add
lret
add
lret
add
inc
mov
lea
adc
jle
decb
dec
or
out
pmuludq
bound
incb
push
dec
xchg
rcll
dec
paddd
inc
int
pop
cld
fcompl
inc
mov
test
lods
outsb
sbb
cmp
xchg
mov
mov
xchg
and
add
xchg
cmp
jge
incl
jecxz
std
les
push
insl
idivb
inc
andl
pop
inc
inc
les
inc
notb
mov
cmc
jle
sub
inc
add
aas
sti
cs
loop
mov
data16
test
cmc
mov
cmp
sti
push
lret
inc
mov
sti
pusha
cli
sbb
test
add
xor
js
sub
mov
cmp
dec
ljmp
and
scas
xor
imul
mov
in
push
movsb
cld
sti
jbe
lret
mov
push
ror
imul
mov
in
dec
add
mov
mov
pop
cld
addr16
fsubrp
testl
add
cld
jne
cwtl
sub
jge
mov
dec
into
mov
int
dec
push
ffree
jmp
popf
mov
jne
cwtl
or
mov
cmp
adc
out
int
sti
push
push
xor
call
mov
add
cmp
mov
push
add
push
jmp
fldl
or
and
lcall
add
inc
cmpsb
cmc
push
lds
inc
out
dec
adc
lret
mov
sbb
add
mov
add
inc
outsb
cmc
push
test
sub
fdiv
mov
int3
cld
inc
incb
pop
imul
sbb
bt
jmp
inc
dec
rorl
mov
jl
mov
insb
faddl
add
out
push
gs
int3
inc
es
mov
inc
fs
dec
dec
stc
pop
xchg
daa
pop
inc
xor
repz
into
je
lods
sbb
cmp
int3
cli
xor
or
repz
insb
out
sbb
repnz
jl
push
push
in
repnz
addr16
adc
pop
hlt
inc
vpminsw
mov
cli
aam
xchg
sti
incb
add
repnz
inc
lea
xchg
and
repz
inc
das
out
pushf
inc
insl
out
icebp
repnz
cli
jl
pop
add
sti
xor
clc
sti
data16
mov
pop
mov
lock
inc
mov
mov
ljmp
mov
es
lock
pop
sti
clc
sti
push
xchg
fsubrl
add
add
lock
add
lock
nop
repz
in
js
xchg
cmc
or
pop
jecxz
ljmp
cmc
sti
xor
xor
and
decl
push
xor
push
bound
call
aad
idiv
dec
inc
ljmp
dec
add
and
add
add
sti
pushl
or
filds
jne
and
push
test
push
aad
pop
decl
ljmp
pop
ljmp
mov
mov
arpl
xchg
cmp
inc
add
mov
ljmp
dec
jmp
jnp
inc
imul
mov
arpl
sar
add
dec
jns
sti
push
stos
repnz
cmp
inc
pop
jnp
mov
clc
and
jnp
sbb
in
fisubs
jmp
inc
or
rcrb
mov
push
inc
je
pop
mov
shll
mov
jecxz
repnz
lret
jmp
jb
call
inc
jnp
mov
mov
in
aas
jae
jle
sti
xchg
cmp
push
in
daa
xor
add
movsl
sub
and
xlat
jmp
add
jns
sub
pop
je
jno
negb
repnz
scas
repnz
mov
out
inc
and
out
out
adc
sahf
shl
jmp
add
js
sub
push
xchg
mov
push
cli
in
push
ret
scas
cmp
dec
scas
adc
add
stc
out
out
leave
xchg
loop
aas
daa
push
ret
jmp
sbb
push
jmp
or
lret
jecxz
sub
jne
mov
pop
ret
xlat
inc
insl
clc
push
ljmp
jne
push
into
cld
dec
pop
in
jne
addr16
dec
cmp
push
jmp
add
mov
pushf
shrb
dec
push
bound
out
imul
xchg
push
jg
jmp
loopne
outsb
sub
into
cmp
push
pop
ljmp
push
jmp
cmp
insb
mov
cmp
push
in
sub
bound
add
addr16
push
sub
or
xchg
push
incl
add
mov
arpl
ficoms
cld
addr16
inc
add
add
cld
cld
decl
fs
and
jne
cmp
lea
add
push
cmp
pop
ljmp
sub
subb
sub
ret
push
mov
add
sbb
sub
jo
mov
out
dec
cmp
add
lds
pop
arpl
in
dec
insl
mov
inc
jmp
call
xor
cmp
in
aas
cmp
jnp
inc
adc
mov
clc
xor
push
lods
enter
scas
lods
inc
jnp
ret
sti
dec
movsb
je,pt
inc
mov
shrl
jmp
aam
aas
jae
lds
incb
iret
push
mov
pop
or
imul
movsl
push
mov
add
and
pop
test
cmp
mov
insl
fsubp
jmp
aad
popa
stc
cmp
pop
subl
pause
jno
jns
jl
xor
xor
cmp
jmp
or
xchg
add
adc
popa
inc
cmp
push
inc
or
jmp
sub
push
jmp
test
ljmp
add
es
mov
stos
dec
lods
cmp
fs
push
xchg
ja
adc
ljmp
loop
pop
pop
cmp
jg
push
dec
je
ljmp
add
jno
jmp
mov
push
ljmp
hlt
sub
sarl
dec
insl
in
mov
jle
push
insb
push
ja
loopne
add
add
cmp
das
mov
pop
inc
lahf
enter
in
sub
sti
push
nop
fildll
test
insl
inc
rcl
inc
cld
adc
cld
jne
and
or
fldenv
inc
pop
ret
add
pushl
xor
push
decl
and
jg
cld
jne
and
ljmp
add
add
xor
or
and
rcr
cld
inc
and
or
push
push
inc
sahf
add
push
nop
pop
pop
mov
rcll
std
mov
jnp
cmp
int3
push
cmp
pop
cmp
mov
jnp
or
es
inc
mov
mov
jmp
imull
incl
add
cmp
dec
push
jae
imulb
out
lods
cmp
fsts
jnp
push
rol
cs
shll
inc
jnp
stos
mov
ljmp
xorl
out
jmp
testb
std
push
div
cmp
je
dec
and
jl
adc
fucom
adc
in
or
aam
sarl
cmp
mov
mov
jmp
inc
jo
lea
out
xchg
ljmp
jo
mov
inc
jge
imul
dec
movsb
mov
jnp
daa
xor
jmp
add
dec
incl
push
xchg
jne
call
pop
xor
out
scas
adc
lea
jnp
lock
mov
xchg
mov
mov
add
mov
rcl
call
negb
xchg
call
cs
sub
aad
out
std
ret
mov
sti
out
mov
sti
pop
and
loope
cld
cld
dec
call
sti
shll
cli
xchg
mul
jne
jnp
jmp
js
xchg
test
adcl
add
sar
xlat
inc
jge
arpl
ficomps
dec
mov
or
or
pcmpgtb
inc
or
dec
mov
fadds
or
je
je
push
adc
inc
xchg
add
aaa
dec
xor
xchg
inc
pushf
push
xor
cpuid
push
jg
xchg
jle
xchg
mov
pushl
cmp
aaa
sbb
add
sbb
or
popf
adc
push
add
pushl
dec
ljmp
mov
ljmp
cli
xchg
decb
and
outsb
jg
es
xor
ljmp
pop
call
int3
mov
daa
and
jnp
jmp
adc
je
add
stos
pop
mov
or
je
inc
rorl
inc
jecxz
lds
test
xor
pop
push
cs
xor
stos
pop
push
clc
and
fs
pop
in
xor
push
inc
xchg
jecxz
stos
add
jmp
add
lret
in
jecxz
test
push
dec
popl
jecxz
jecxz
add
jnp
addr16
jecxz
adc
dec
jmp
xor
push
jmp
cmp
dec
jmp
xor
dec
jmp
sbb
inc
aas
add
enter
jecxz
xchg
icebp
cwtl
xor
jle
jle
fisttps
cmp
in
xor
push
add
ja
jne
outsl
jge
push
jmp
pop
dec
jecxz
insl
pop
jecxz
jmp
add
sti
mov
add
je
add
js
cmpl
test
loope
js
test
adc
push
or
div
push
dec
add
test
add
out
into
dec
dec
add
or
cmp
loop
insb
ja
sti
scas
dec
ljmp
adc
insb
mov
dec
jmp
add
mov
mov
arpl
test
ss
incl
dec
test
cs
cld
lcall
xchg
imul
xchg
stos
sbb
push
add
mov
in
sbb
mov
das
loope
jne
sbb
call
incl
pushl
data16
mov
jecxz
mov
cld
jmp
add
dec
sti
jne
sbb
call
scas
inc
lock
jnp
xor
jp
dec
enter
bound
sub
sbb
and
pop
cltd
outsb
idiv
enter
push
add
repnz
mov
ljmp
dec
inc
out
idiv
jnp
inc
dec
dec
cmpsl
adcb
adc
lods
pushl
scas
add
adc
add
add
mov
es
je
push
lods
mov
jge
xchg
incl
or
push
sbbl
jmp
test
psrld
icebp
sbb
xchg
xor
mov
xchg
xor
jno
add
sbb
mov
idivb
or
jmp
add
xchg
adc
in
jle
fwait
add
xchg
outsl
stos
add
sbb
je
icebp
das
cwtl
cwtl
filds
mov
mov
adc
jmp
sbbl
mov
jbe
mov
dec
sbb
ss
mov
push
jne
jo
negl
mov
push
sbb
dec
sub
jne
subb
outsb
add
imul
iret
outsl
inc
jmp
cmp
cld
aam
out
inc
stos
loopne
jmp
js
xor
es
loopne
push
or
out
enter
sub
bound
sti
push
jg
pop
inc
ljmp
loop
add
pop
inc
bound
add
xchg
or
cld
push
add
push
add
bound
jmp
and
cld
addr16
mov
pop
inc
adc
cld
aaa
faddl
cs
push
cmp
loop
jo
and
add
push
cmp
rolb
lea
std
ljmp
in
fsts
cmpsl
mov
add
xchg
into
xchg
mov
push
sub
add
add
out
addr16
jbe
fdivr
mov
jnp
scas
pop
mov
das
vandnps
out
mov
rorl
mov
jnp
adc
mov
es
push
sbb
mul
fwait
enter
jno
std
add
iret
out
lock
push
cltd
sub
data16
test
and
enter
push
add
ret
iret
mov
push
out
cmp
jnp
mov
mov
out
jnp
fdivl
out
je
dec
je
les
add
scas
sbb
dec
imul
cmp
jnp
ja
dec
fcompl
cmp
dec
jno
jmp
add
pusha
dec
cwtl
mov
dec
rorl
add
lds
add
dec
jmp
adc
xchg
dec
popf
or
stc
mov
adc
add
pusha
stos
add
add
mov
sti
out
nop
mov
orb
cmp
int3
addb
inc
mov
jmp
clc
sahf
add
js
cmp
add
add
lea
jmp
stos
pop
inc
jmp
cmp
jecxz
jl
sti
mov
sub
int3
add
push
dec
jg
js
test
cmpsl
fdivr
jb
pop
xor
dec
add
adcl
rorb
jb
cld
mov
lret
pop
lret
push
and
sbb
mov
pop
lret
add
lret
pop
lret
sbb
pop
pop
dec
add
push
xchg
mov
in
testl
pop
out
mov
cli
jb
xchg
cld
mov
aad
rcrb
call
or
into
xor
das
and
ret
push
mov
push
push
jnp
mov
mov
out
incl
add
dec
mov
jecxz
decb
out
pop
int
out
test
out
pop
aad
or
mov
jae
pop
outsb
ret
and
out
fdivrp
pushl
stos
adc
cs
scas
ret
iret
out
add
and
mov
loop
out
dec
daa
clc
stc
sub
mov
xchg
into
imul
decl
add
mov
out
dec
dec
sahf
das
fdivl
lret
les
into
ret
or
add
adc
xor
mov
or
rcrl
popa
sahf
je
pop
mov
out
pop
fmuls
aam
sub
push
fnstenv
cld
push
cmpsl
push
sub
push
cld
push
pushf
xchg
sub
dec
mov
js
push
jge
int3
lods
sub
add
jbe
lret
jmp
sub
popa
in
outsl
inc
inc
orb
ljmp
loopne
shll
inc
jmp
xchg
inc
ret
xchg
pusha
inc
jne
push
dec
push
dec
inc
ljmp
pop
add
js
ljmp
ror
stos
pusha
xlat
push
jb
jl
adc
xchg
repz
add
jo
mov
bound
cmpl
xchg
or
xlat
sti
jmp
fwait
aas
sti
outsb
seta
popa
lds
jmp
mov
fdivr
add
xchg
sbb
fidivrl
jmp
shl
fstpt
test
jmp
es
mov
sbb
jne
cmp
in
inc
add
add
icebp
cld
lcall
jbe
cmp
std
jne
cmp
rclb
add
push
dec
sti
decl
jbe
stc
hlt
cld
jne
cmp
sbb
sub
add
loop
mov
incl
push
outsl
or
dec
add
jnp
sbb
jmp
aas
pop
mov
ljmp
jo
dec
xor
cmpsb
idivl
out
jno
add
and
cs
je
dec
loopne
movsb
dec
idivl
xchg
mov
mov
loopne
je
hlt
mov
je
out
add
xor
adc
stos
aas
sahf
mov
leave
out
pusha
mov
and
mov
out
inc
daa
aaa
push
sub
addb
outsb
rolb
loopne
inc
or
jmp
pop
inc
out
push
int3
aam
test
dec
hlt
jg
dec
jmp
shrl
aad
es
aad
mov
xchg
xchg
mov
aam
cmp
out
add
pop
mov
push
jl
cwtl
mov
pop
flds
jb
push
sbb
and
and
add
sub
out
push
xchg
jl
xor
fdivr
push
out
aam
sti
mov
imul
in
sar
inc
push
call
add
pop
push
loop
pop
pushf
repnz
xchg
mov
inc
sbb
imul
ret
aam
in
ljmp
je
mov
jp
int
push
repz
imul
add
cmp
repz
cld
jb
ret
push
jns
add
adc
sti
cmpsb
call
mov
jns
std
xchg
add
add
adc
gs
xchg
sub
lock
dec
ljmp
mov
repz
rolb
add
sub
mov
dec
add
test
add
add
aad
je
push
rcll
xchg
das
jbe
dec
or
add
shrl
movsb
sti
imul
sti
jmp
cld
jne
and
add
dec
mov
or
sarb
scas
ret
pop
je
shl
jnp
lods
pop
mov
rolb
shrb
addr16
pushl
pop
add
lods
incl
add
lods
add
lods
add
mov
jge
add
leave
repz
lcall
cmpsl
testb
incb
repz
imul
sbb
hlt
ljmp
jns
inc
fwait
cmpsl
inc
enter
dec
mov
add
or
stos
mov
sub
or
add
test
add
add
mov
rorb
orb
mulb
mov
and
shll
int3
iret
sbb
dec
rolb
pop
shll
das
ficoms
decl
add
jg
add
mov
or
mov
jbe
add
dec
test
stc
adc
into
mov
lret
push
adc
jmp
add
add
mov
jmp
xor
add
js
ret
and
iret
sti
jmp
ja
add
mov
bnd
mov
fistl
mov
ret
pcmpgtd
shll
add
int3
fimull
js
inc
adc
push
ljmp
in
jmp
in
rorl
icebp
js
pop
bound
add
push
mov
mov
into
inc
out
add
cld
or
mov
mov
mov
add
xchg
mov
cs
and
jb
dec
jg
push
cs
in
popa
mov
add
jno
jne
cs
icebp
sbb
daa
das
sti
jmp
dec
cmpl
mov
jmp
add
mov
mov
add
inc
sti
jne
cs
icebp
enter
mov
add
sbb
add
add
mov
ja
clc
jmp
push
in
dec
mov
cmp
xor
jbe
add
adc
lock
mov
mov
out
lcall
mov
xor
add
add
bound
cmp
decl
mov
mov
mov
mov
mov
jae
imul
test
ljmp
leave
inc
jnp
aas
jae
dec
jl
sbb
jg
rol
mov
aam
js
outsl
add
sbb
mov
inc
add
dec
jmp
add
fucomip
add
add
test
and
jge
xchg
dec
incl
cld
inc
jno
hlt
lret
fadds
in
bound
lret
cmp
inc
push
mov
cli
int
push
rol
inc
xor
xchg
imul
lods
xchg
cmpsb
pop
movsb
int3
jmp
mov
dec
popl
and
jmp
testb
div
testb
js
inc
mov
add
sti
jmp
js
add
xchg
int3
outsl
loope
adc
scas
xor
add
js
ret
sub
lret
sti
jmp
ja
add
mov
dec
add
push
data16
ljmp
aas
sbb
mov
jne
notb
mov
insb
dec
add
js
add
mov
dec
sti
xchg
add
je
adc
add
clc
jmp
and
push
sti
adc
sbb
push
add
push
iret
cmpb
jbe
in
out
decl
dec
add
jg
jecxz
and
cld
rorl
mov
repnz
add
pop
lods
cld
call
sbb
cmp
addr16
push
mov
add
adc
aad
orl
incb
data16
push
push
add
lcall
push
push
out
ret
pop
xchg
ds
mov
shr
daa
test
and
jbe
leave
inc
jnp
jnp
add
stc
xchg
lock
mov
xor
mov
mov
add
xchg
inc
jnp
xchg
add
or
lretw
and
call
fdivrp
aam
add
jnp
jmp
jno
pop
mov
dec
xchg
mov
psubsw
mov
adc
ret
lea
stos
jmp
cmp
inc
jne
jmp
add
dec
jmp
call
lods
sbb
cmp
inc
add
cmp
dec
shll
jmp
sbb
pushf
sbb
leave
push
add
inc
rolb
in
enter
bound
iret
cmp
add
add
jmp
sbb
enter
and
orl
add
js
add
js
das
sbb
jg
add
je
add
jbe
jmp
fimuls
xor
add
mov
push
add
ja
and
sahf
cmp
subb
and
xchg
subb
and
outsb
int3
jnp
test
and
push
mov
subb
int3
inc
add
aas
and
sti
and
add
fcmove
inc
add
inc
adc
sti
and
jge
dec
adc
sti
and
insl
test
andb
sti
and
cmp
push
sti
and
cmp
push
sti
and
frstor
sti
and
in
cmpsl
ja
arpl
and
jge
jg
mov
lret
inc
add
add
xchg
jnp
jg
jnp
fcoml
xchg
sub
fcompl
pop
adc
fsubl
push
or
fsubrl
sahf
xchg
jnp
fnsave
xchg
out
xchg
pushf
loope
sti
jbe
lcall
add
ret
sti
jbe
call
xchg
in
loope
add
sti
jbe
lcall
xchg
aam
sar
jbe
call
xchg
cmp
jbe
lcall
dec
pop
loope
into
stos
add
imul
int3
into
stos
add
sub
lods
into
stos
add
adc
mov
stos
add
cld
loopne
iret
stos
add
test
iret
sub
add
test
iret
sub
imul
push
iret
sub
imul
mov
iret
sub
imul
mov
iret
sub
push
sub
or
subl
fistl
test
lds
ds
sbb
test
lds
es
and
test
lds
add
add
or
subl
dec
inc
subl
xor
subl
clc
push
add
sbb
subl
clc
push
add
ja
and
xchg
sub
subl
push
int3
es
int3
pop
mov
add
bound
jge
daa
pop
add
dec
rolb
repz
add
dec
add
sahf
dec
jg
lcall
add
add
sub
sti
call
bound
jge
daa
add
bound
add
into
repz
xlat
push
mov
ret
cmp
jge
daa
pop
add
dec
rolb
sti
add
dec
jge
lcall
jnp
incl
jnp
xchg
pop
add
ret
movsb
jnp
sti
ljmp
mov
mov
mov
lods
incl
push
adc
inc
jg
aam
jl
jl
cmp
inc
add
lcall
jnp
xchg
pop
ret
mov
sti
pushl
cmp
mov
cmp
add
scas
inc
sbb
inc
ja
aam
add
jbe
incl
jnp
jb
mulb
sbb
js
push
add
out
jle
pop
in
add
push
js
jmp
pop
jnp
icebp
add
jb
jl
jmp
or
jb
js
jmp
add
jnp
in
add
int
lock
jmp
test
add
roll
jnp
test
add
jmp
repz
jmp
add
or
into
add
jl
add
or
jmp
js
inc
cmpsb
mull
js
add
js
sbb
pop
pop
push
jmp
cmp
ret
lea
popf
pushf
dec
push
xchg
icebp
jnp
add
out
mov
cmc
cmpsl
add
jo
cmc
ror
cli
call
js
cld
push
mov
lea
jo
in
add
dec
add
in
xchg
dec
add
ror
in
dec
inc
add
dec
mov
cltd
lret
adc
dec
hlt
ret
or
roll
jmp
jnp
add
call
fcomps
mov
add
jmp
inc
sbbb
dec
add
adc
add
dec
mov
sub
adc
dec
mov
nop
jb
ret
push
pusha
sub
inc
adc
icebp
add
divl
add
lret
adc
dec
inc
mov
scas
jmp
adcb
mov
push
xor
sbb
jp
cld
mov
sub
jns
loopne
loop
add
jnp
out
cli
les
add
adcb
mov
aas
bnd
add
js
imul
add
das
and
lods
sarl
push
add
aas
push
clc
jno
jbe
sub
add
jle
pop
sarl
pop
jl
lahf
cmpsl
jge
divl
pop
lock
aad
and
jnp
jmp
add
add
jecxz
mov
shrb
cld
stc
mov
sbb
test
mov
ds
cmp
lock
pop
dec
and
adc
jnp
jmp
cli
clc
xchg
xchg
aad
push
push
test
lods
mov
sub
bound
mov
pop
les
add
pusha
push
jmp
jp
pop
in
add
arpl
js
add
cmp
icebp
js
add
dec
push
jmp
jl
add
jl
add
sbb
loope
rcll
in
js
pop
cmp
push
add
mov
ja
push
add
sti
and
test
jl
add
fs
jmp
add
int3
push
add
aaa
rcll
in
js
xchg
push
add
and
sbb
int3
push
in
dec
jne
add
adc
js
mov
fsubl
mov
fcmovnbe
or
push
xchg
fadd
add
inc
adc
add
push
jne
cltd
aam
add
push
mov
push
aaa
lods
sbb
push
add
add
pop
ret
loop
test
fimuls
mov
dec
leave
and
aam
cmp
push
dec
jl
fldenv
dec
cld
mov
fildl
aaa
int
push
pop
cld
lcall
jns
loope
add
jmp
in
jnp
jp
arpl
adc
insb
hlt
lods
pop
cmp
add
sbb
test
ja
decl
add
jnp
ja
xchg
out
add
jp
jae
push
mov
sar
out
sbb
add
xchg
sbb
xor
add
js
jae
cmp
pop
sbb
decl
jnp
test
ja
decl
mov
mov
add
sahf
ljmp
bound
mov
add
jmp
add
arpl
js
jmp
or
stc
add
pop
in
jnp
loop
pop
in
jnp
imul
dec
jmp
add
jb
insb
push
jmp
in
mov
fdivrl
fcos
int3
mov
jmp
call
negb
add
arpl
add
js
add
dec
pop
add
dec
add
jmp
xchg
dec
add
not
sbb
js
inc
jo
push
push
jmp
push
mov
push
jmp
ret
jmp
cli
dec
push
jmp
sbb
sti
sub
dec
mov
dec
add
jge
sbb
js
rol
and
shl
lds
fsubl
push
bound
add
insb
adc
jp
jmp
cmc
mov
fisubrl
dec
add
out
hlt
fcomps
jecxz
rclb
test
dec
add
jnp
bound
rcll
inc
xchg
add
dec
jo
in
xchg
jl
dec
jo
lea
jecxz
jno
mov
cli
cmp
cmp
call
add
scas
mov
or
dec
push
call
popf
sarl
add
call
mov
add
cmpsb
cli
sbb
jmp
fistl
jg
int
inc
jl
lock
das
sbbb
inc
dec
or
insb
dec
jl
lahf
lods
jle
mov
loop
jns
add
add
movsb
cmp
sti
pushl
imul
insb
inc
pop
jnp
cmp
jp
jecxz
jnp
je
jb
out
cmc
mov
push
sub
aas
repnz
jecxz
jnp
js
imul
add
jmp
or
pop
in
jnp
loop
negb
add
imul
dec
jmp
add
add
jb
test
add
int
jmp
jecxz
mov
daa
add
xor
stc
pushl
popa
in
in
jmp
hlt
js
jmp
add
mov
add
jmp
loopne
push
pusha
mov
mov
pop
or
mov
cmpsb
aaa
sbb
stos
iret
mov
jb
dec
add
ljmp
add
add
pop
adcl
push
sub
mov
push
bound
outsb
xor
rcrl
shl
lea
js
add
xor
dec
push
jno
in
push
aaa
xchg
add
add
ljmp
lods
inc
jne
xchg
jne
inc
add
cld
mov
jae
jno
jmp
add
dec
sti
add
jmp
xor
pop
ja
rorl
iret
int3
jmp
push
lea
fstpl
mov
jmp
push
add
sbb
add
push
mov
fnstenv
adc
push
mov
push
jle
ret
add
iret
mov
sti
ljmp
push
inc
mov
add
test
push
push
add
adc
jmp
ret
jno
jnp
aas
out
sub
dec
xor
lea
push
sahf
inc
add
incl
std
mov
ljmp
incl
jnp
out
pop
inc
out
add
pop
sub
out
outsb
add
pop
cmp
pusha
movsl
cld
call
sub
movsl
test
cmp
xchg
sub
inc
out
push
lock
cmp
mov
pop
mov
test
mov
xchg
jns
pop
in
jnp
imul
dec
jmp
call
mov
jge
dec
jmp
mov
hlt
std
ljmp
stc
lcall
insb
dec
jmp
out
dec
jmp
add
arpl
js
jmp
filds
add
mov
add
or
imul
xchg
jg
jmp
lea
popl
aas
jb
shrl
dec
push
js
push
jmp
js
out
fldcw
add
icebp
push
out
adc
stc
pop
adc
add
or
js
or
dec
add
movsl
inc
lea
js
add
test
jl
add
push
js
lret
mov
jl
add
aaa
cmp
ret
pop
ret
add
dec
out
mov
jmp
or
sbb
add
cltd
inc
mov
imul
or
inc
sarl
xchg
add
dec
add
rorb
sub
push
add
dec
add
mov
inc
push
add
dec
add
add
xchg
add
dec
decb
add
dec
or
dec
pop
xor
add
shlb
push
and
mov
decl
mov
mov
xchg
inc
mov
cmpsl
push
daa
es
movsl
mov
loopne
and
movsl
pop
add
les
sub
cmp
movsl
jmp
add
movsl
pushl
cmp
or
movsl
cmp
or
sub
add
leave
add
cmpsb
call
jne
inc
mov
ss
aaa
scas
subl
and
dec
and
jle
aaa
add
pushfw
jnp
jmp
int3
hlt
add
xor
out
add
jo
xchg
pop
outsl
pop
in
cmp
sub
out
jnp
cmc
jb
dec
faddl
add
add
add
and
add
mov
les
jbe
or
mov
jb
cmp
pop
gs
dec
jmp
jns
add
cwtl
out
pushf
ljmp
jb
jb
jb
cmp
xlat
int3
bound
mov
ret
or
daa
shl
sbb
fnstsw
mov
sahf
ljmp
add
add
nop
roll
jb
ret
add
sub
addb
or
notrack
lods
mov
push
xchg
stos
xchg
lock
shrl
incb
es
xlat
lret
xlat
outsb
int
out
inc
and
add
enter
add
push
cwtl
cmp
jo
test
add
fwait
or
add
push
cmp
cmp
mov
fldcw
jmp
loop
sti
jmp
pop
mov
fadds
pop
shrb
cmpsb
push
jbe
shrd
sub
dec
jle
sbbl
inc
jle
mov
mov
pop
pop
jnp
mov
add
pop
pop
clc
jns
ret
sub
cmp
mov
or
xor
insb
add
add
inc
div
jae
clc
pop
clc
stc
ds
mov
add
fisttpl
rorb
xchg
xor
test
ja
incl
jnp
in
stc
xchg
shlb
inc
mov
mov
inc
aas
add
add
and
into
cmp
bound
stos
or
sub
or
dec
sbb
cli
mov
xor
int
add
jmp
or
out
add
popa
adc
cmp
push
jnp
jmp
pop
hlt
add
stos
mov
add
jmp
pop
jnp
jmp
pop
add
orb
jnp
test
jnp
sub
push
cmpsl
aad
pop
jnp
pusha
adc
std
jno
add
add
push
add
add
push
in
js
mov
push
add
add
pop
fs
add
repz
js
mov
pusha
push
add
add
sub
pop
add
in
dec
add
push
add
add
mov
jle
sarl
rcrl
inc
jb
sarb
dec
add
add
js
inc
int
int
cmc
outsb
xlat
dec
or
jl
xchg
or
mov
xchg
or
push
add
add
decl
es
and
dec
and
add
xchg
rol
adc
xchg
or
add
add
add
sbb
inc
mov
mov
subl
push
jbe
jmp
push
mov
push
add
dec
sub
xchg
add
cmpsb
outsb
ss
imul
cs
or
add
iret
es
dec
lds
add
xchg
dec
xor
jae,pn
xor
pushl
push
add
ds
lahf
popf
or
add
mov
push
stc
sbb
les
stos
sub
call
lock
cmp
out
and
stc
cmp
mov
decl
jnp
incl
mov
cmp
push
add
xchg
js
jnp
jns
decl
aas
cltd
dec
mov
cmp
xchg
xchg
pop
dec
add
dec
dec
jbe
pushf
cmpsb
push
add
or
in
cmpsl
movsb
inc
stc
repnz
inc
add
ljmp
gs
test
lahf
or
repnz
inc
hlt
adc
pop
add
int
lret
std
pop
lret
fdivr
push
shrl
add
out
mov
mov
movsb
jo
xor
aam
mov
jb
push
add
repnz
xchg
or
cmpsb
xchg
mov
jb
lea
cld
sbb
stos
test
ret
mov
cmp
jmp
jg
lods
aas
mov
icebp
cmp
fnstsw
add
in
je
mov
pop
xchg
notl
jb
push
bound
inc
lds
mov
xlat
add
or
aaa
stos
add
xor
cmp
jmp
push
cmp
lock
in
dec
push
lahf
xlat
ret
out
add
popf
mov
mov
sbb
es
cmp
into
dec
aaa
hlt
pushl
decl
xlat
pop
sbb
popf
cmp
flds
es
adc
lds
add
bound
or
add
es
dec
jg
push
push
add
mov
and
add
push
add
adc
add
jle
dec
mov
xchg
stc
adc
pusha
cmp
mov
sub
les
cwtl
mov
mov
add
sub
xchg
xchg
cld
icebp
std
xchg
aas
mov
add
add
mov
repnz
insb
xor
mov
and
call
add
leave
js
mov
sbb
and
mov
out
sbb
push
inc
add
push
jle
or
and
mov
push
mov
ljmp
dec
inc
mov
rorl
out
mov
int
sub
pop
movb
shll
jle
mov
mov
add
in
pop
xchg
jle
push
jmp
add
jp
add
mov
fwait
xlat
xchg
pop
rcl
imul
dec
jmp
cmpb
mov
cmp
xchg
xchg
adc
mov
mov
mov
add
stos
and
in
pop
cltd
int3
hlt
test
outsl
lds
add
or
mov
fwait
push
test
int3
loopne
jnp
xchg
xchg
mov
jge
mov
mov
mov
inc
add
mov
jmp
push
dec
movsl
xchg
cmp
inc
add
popa
or
mov
call
inc
sbb
ret
es
add
int3
add
lcall
arpl
cmp
sti
add
or
add
es
dec
jg
loopne
add
in
dec
xchg
dec
add
xchg
dec
add
sbb
es
sbb
or
push
and
mov
mov
sub
adc
xchg
dec
mov
add
into
negl
pop
jo
flds
xor
pop
idiv
sub
push
int3
call
pop
mov
jle
sub
and
sbb
and
push
cmp
cs
and
sub
and
pusha
push
push
add
xlat
and
das
mov
push
dec
sbb
mov
mov
sub
add
insb
add
pop
push
aas
sub
push
fistpll
cmpl
sub
call
scas
in
into
add
and
jo
std
cmp
cmp
mov
mov
inc
xchg
aas
xlat
mov
dec
in
add
cmp
repnz
shll
push
add
xchg
arpl
add
add
push
jb
mov
jl
push
jge
push
sub
push
add
repnz
jbe
add
cmc
or
dec
out
add
out
xchg
cld
and
add
dec
push
jl
push
pop
shll
fdivrl
pop
pusha
push
xchg
push
pusha
dec
pop
jo,pt
bound
push
repnz
add
popf
sti
out
or
es
add
divl
adc
push
pop
mov
push
sbb
ljmp
int3
std
ljmp
xchg
dec
add
and
mov
jns
mov
push
sbb
nop
xchg
mov
pusha
aad
or
orl
jno
mov
jmp
jge
add
add
int3
push
cmp
lea
pop
add
or
in
sahf
jno
xchg
cs
add
push
add
jmp
push
sti
test
push
add
mov
es
mov
pop
lods
jmp
pop
dec
push
sub
mov
cli
push
icebp
push
push
lods
adc
push
add
out
pop
and
std
jne
sbb
add
jp
xchg
adc
push
add
push
jne
mov
je
inc
mov
dec
inc
jmp
sbb
enter
and
std
and
test
cmpsl
incl
jnp
cmp
test
jnp
push
and
and
mov
hlt
dec
mov
mov
mov
jg
push
sub
cmp
add
ja
add
and
movsb
cli
std
pushf
dec
cltd
xor
sub
mov
std
add
js
xchg
dec
push
push
lock
push
in
cmp
xor
addr16
mov
xor
add
aaa
cld
or
sub
add
das
repnz
adc
add
fisttpll
pushf
jo
pop
push
xor
repnz
jecxz
add
out
push
scas
outsl
mov
push
imul
dec
jmp
sbb
dec
jmp
add
jmp
add
xor
jmp
add
dec
mov
or
jb
push
jnp
jmp
add
add
or
cltd
inc
push
fwait
jbe
mov
es
mov
es
add
mov
divb
adc
int
icebp
pop
cltd
test
pop
iret
sahf
jmp
jns
test
dec
add
jb
push
bound
xchg
xlat
les
nop
add
test
cmpl
jnp
and
es
aam
in
dec
jne
sti
fldt
in
dec
add
adcb
js
jle
push
iret
std
add
add
jb
add
dec
add
std
add
inc
push
push
leave
fucomi
dec
xchg
stos
std
jmp
or
xchg
aad
pop
xchg
xchg
cmp
sub
insb
ss
imul
std
inc
popa
jne
je
jns
mov
movsl
dec
push
pop
aam
pop
in
movsl
std
mov
push
mov
leave
test
das
leave
add
xchg
dec
mov
add
mov
sti
pushl
mov
sub
lods
adc
stos
js
sub
jmp
cmpsb
mov
cmpsl
decl
lock
add
cmpsl
jle
xchg
stos
mov
cmpsl
incl
adc
sbbb
cmpsl
decl
cmp
ud0
mov
or
fcompl
aas
add
add
add
cmpsl
jle
imul
add
cmpsl
jge
jns
jmp
sahf
ja
incl
jle
xchg
in
add
arpl
jg
jmp
jmp
orl
cwtl
sbb
repnz
cmp
and
jnp
arpl
ja
jmp
add
dec
adc
jmp
jle
add
and
jge
jb
jge
aas
in
jnp
sbb
jp
push
jmp
push
sub
cmp
stos
lret
movsl
adc
mov
clc
push
ret
test
inc
clc
shlb
add
roll
push
les
stc
pop
push
push
shl
add
xchg
shlb
push
jb
xlat
jmp
test
add
inc
sbb
int
xchg
sti
insb
aaa
sbb
push
js
xchg
adc
jmp
mov
lds
jmp
xchg
push
add
dec
incb
jmp
mov
xchg
sub
cs
js
mov
add
fmulp
int3
out
into
int3
outsl
adc
addl
add
add
add
xor
and
mov
add
sbb
xorl
out
je
push
jg
adc
nop
mov
inc
cmpl
rcl
jnp
adcl
shl
mov
js
aas
xchg
shlb
jmp
shlb
call
pop
dec
rcrb
add
add
push
mov
cmp
dec
clc
mov
fidivl
jmp
iret
pop
inc
sbb
call
into
mov
insb
adc
decl
and
mov
xchg
inc
xor
cs
sbb
call
into
das
xor
add
sub
nop
jnp
xrelease
sti
jb
add
cmpsl
incb
aam
lods
xorl
dec
sbb
ljmp
psubsw
clc
sar
out
xchg
sub
cmp
outsl
adc
scas
out
xchg
jbe
mov
loop
jnp
lods
inc
ret
dec
cmp
push
hlt
test
jmp
jp
inc
outsb
push
sti
aad
add
add
cli
mov
jp
int
add
jmp
sub
cmc
hlt
xchg
stos
fldl
int
add
xchg
jmp
in
pusha
add
int
in
push
orl
pop
lret
cmp
push
in
mov
test
inc
xchg
sti
lods
cmp
repnz
movsl
push
loopne
lret
xor
add
int
in
pop
jg
sahf
inc
das
pusha
mov
jg
jnp
leave
xchg
scas
movl
js
pop
cmpsl
ret
lret
out
pushf
cmp
bound
sbb
mov
sti
popl
push
dec
adc
loop
in
ret
mov
mov
mov
xchg
add
iret
clc
faddl
mov
add
add
fists
std
mov
adc
cli
push
xor
add
push
inc
or
push
call
loope
aas
clc
loop
jb
and
mov
rorb
decl
push
inc
lcall
push
lods
sbb
in
mov
rol
or
jnp
or
mov
out
or
add
mov
ret
ret
inc
test
cli
push
xchg
push
lds
icebp
or
lcall
or
imul
test
or
je
push
pop
cmp
or
cmp
and
lock
xchg
pop
add
call
lock
call
add
sub
add
add
cmpsb
xchg
add
add
sarl
out
jecxz
jno
test
xlat
mov
inc
jmp
out
ja
cmp
repnz
mov
inc
jo
add
icebp
mov
bound
inc
into
dec
adc
in
adc
xor
push
dec
sbb
cld
js
icebp
imul
dec
into
dec
loop
dec
jmp
add
add
les
subb
jns
xor
pop
mov
pop
aaa
test
int3
test
inc
xor
fimull
jmp
mov
jne
js
xchg
iret
jmp
imulb
stc
pusha
loope
int3
pusha
scas
pandn
in
mov
arpl
xchg
cmp
bound
ret
lods
inc
inc
add
js
int3
sub
mov
cmp
mull
int
in
xchg
mov
cmpsl
cmp
fcmovnu
xchg
mov
mov
push
xchg
movsl
incb
adc
mov
repz
imul
cld
rorb
or
into
jne
loop
ffree
mov
jl
push
dec
add
cltd
mov
jne
dec
xorl
push
les
mov
sbb
movsl
cmp
jl
dec
or
fcomp
rol
jnp
push
add
pop
out
jp
push
sbb
jle
cmpl
adc
mov
jbe
add
decl
int3
cmp
jnp
aad
sub
insb
shr
out
aad
lock
cmpl
add
lds
xchg
lock
repnz
vpcmpeqw
loop
jnp
decl
in
pop
aas
jnp
mov
in
ja
incl
ja
fnstsw
sti
add
fsubr
mov
xchg
sub
xchg
mov
xchg
mov
or
or
pushf
jne
add
add
loopne
das
or
out
insl
iret
or
jnp
jmp
inc
jnp
mov
out
dec
jmp
push
test
aam
sbb
push
clc
mov
mov
fwait
insb
int
jnp
les
mov
xchg
jb
cld
jo
test
pushf
movsl
jb
and
cld
mov
inc
mov
push
push
mov
add
mov
xchg
xchg
jb
mov
mov
clc
out
rcr
sub
push
xor
out
sahf
roll
cmp
pusha
cmp
mov
mov
push
xor
call
shlb
or
mov
add
adc
fisubrl
lock
rol
cmp
pusha
mov
pop
or
loop
inc
loope
insl
push
fadd
rcrl
push
add
push
jb
push
mov
mov
push
pusha
imul
icebp
js
push
jb
xor
iret
add
es
iret
hlt
add
lret
pinsrw
inc
sbb
ljmp
sbb
jge
mov
in
ljmp
and
add
stc
fisttpll
ret
dec
mov
ds
push
pop
adc
mov
add
outsb
std
cmp
jno
xchg
fstpt
clc
bound
cld
in
test
add
jmp
std
jp
jbe
fnstcw
clc
and
cld
mov
mov
inc
lods
mov
sahf
xor
jecxz
pop
test
push
lock
pop
mov
enter
pop
fdivrp
idivb
pop
push
add
jecxz
in
iret
cmp
ja
inc
jecxz
out
xchg
xlat
mov
inc
add
cmp
push
sar
fscale
mov
cmp
add
xchg
mov
pop
stos
pop
mov
inc
xchg
inc
out
insl
xchg
xlat
push
push
cmp
push
arpl
std
fs
jo
pop
aad
sar
adc
mov
shll
psubsw
mov
add
fldt
xlat
push
mov
jmp
test
cli
icebp
xor
adc
xor
pushf
lock
daa
inc
iret
sub
loopne
jp
add
dec
sbb
es
or
add
mov
int
fisubl
mov
insl
jnp
mov
dec
dec
xorl
addr16
or
xor
add
cld
test
in
xchg
test
xor
add
iret
bnd
add
ds
cmp
inc
mov
test
sti
or
push
xor
sti
or
push
and
ljmp
cld
out
ret
mov
add
xor
dec
addb
sti
ret
pop
imul
test
sti
cmpsb
add
ja
aaa
jmp
das
mov
mov
fwait
add
pop
cmp
movsl
push
call
jne
pop
mov
aas
rorb
cmp
add
push
push
fstp
push
or
sar
call
ljmp
repz
ljmp
fadds
mov
pusha
inc
sub
ja
or
add
dec
jmp
test
std
pushl
or
aad
addl
pop
jbe
jnp
fimull
jl
cltd
add
xlat
pop
mov
jl
std
movsl
xchg
cmp
jns,pt
inc
mov
push
cmp
rcll
fsincos
sub
xchg
jnp
sbb
mov
add
xchg
pop
jnp
jns
div
fdivr
hlt
out
cmpsl
jnp
lcall
mov
ds
sub
lock
adc
repnz
cmp
mov
cmpsl
pop
mov
out
dec
sbb
std
lea
adc
sub
test
iret
jbe
adc
mov
mov
fxch
dec
test
aaa
add
iret
psubsw
xchg
xchg
mov
xchg
into
test
stos
fnstcw
or
jmp
push
lods
dec
pusha
hlt
std
pusha
push
call
add
fwait
daa
cli
sub
pop
jb
sti
in
mov
stc
inc
jmp
xchg
test
inc
sub
cmp
add
dec
add
incb
icebp
pop
mov
stc
lea
push
dec
cmp
fistpl
pop
aad
dec
xchg
pop
pop
jg
sub
ret
mov
jmp
cmp
mov
outsl
jg
add
push
bound
xchg
inc
add
cmp
je
push
push
rcl
xchg
cld
pminsw
cli
lea
add
add
cltd
push
popa
lar
pop
cmpsl
std
ljmp
jno
xchg
int3
aas
lock
jb
stc
std
cwtl
push
jno
add
jae
std
dec
cmp
mov
lahf
addl
push
lock
testb
xlat
push
call
adc
aas
clc
shlb
stc
insl
cltd
push
loope
add
iret
cmpsl
std
incl
add
mov
aas
call
fstpl
aas
lock
cmp
repnz
mov
mov
std
cmp
repnz
out
push
push
xor
push
mov
dec
cmp
test
push
push
out
sub
push
arpl
xlat
std
dec
mov
out
inc
adc
mov
inc
das
call
add
lods
aas
std
clc
sub
push
push
mov
push
and
xlat
std
add
cmp
jnp
mov
cli
push
cmp
ja
push
inc
in
xor
add
add
int3
imul
daa
or
and
mov
psubsw
pushf
xorl
cli
sub
dec
xlat
inc
cli
test
dec
mov
test
iret
xlat
jns
add
clc
stc
push
push
aas
aaa
fisttps
adcl
subl
lock
rcrl
push
imul
insl
movsb
jle
add
roll
push
pop
adc
add
cmp
jmp
dec
add
dec
jne
xchg
sbb
dec
test
push
cld
test
std
mov
mov
sti
int3
subb
add
test
sahf
dec
and
pushf
and
loope
sbb
pop
in
or
push
xchg
dec
xor
jae
dec
mov
inc
enter
int
icebp
mov
mov
ss
xor
pop
adc
mov
data16
jno
or
adc
add
fsubrs
aad
add
xchg
mov
or
pop
jmp
add
dec
add
rorb
add
dec
add
mov
dec
add
xchg
dec
add
xchg
dec
add
mov
dec
add
xchg
dec
add
xchg
dec
add
bound
add
add
push
dec
add
push
dec
add
bound
add
add
push
dec
add
push
dec
add
and
add
dec
add
adc
add
dec
add
and
add
dec
add
add
adc
add
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
incl
add
jnp
jnp
jnp
jnp
jnp
jnp
jmp
add
out
orl
and
lret
adc
jne
pop
cs
popa
and
dec
imul
inc
imul
cmp
add
inc
push
or
inc
and
leave
sbb
daa
leave
adc
aaa
shll
add
test
lock
in
add
and
lock
sub
inc
xlat
ljmp
stos
cs
stos
repz
cwtl
repnz
jno
add
mov
cmc
imul
cmc
push
subb
xchg
inc
aaa
test
jae
jle
pop
jp
in
outsb
jle
add
sub
sub
jmp
or
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
daa
push
add
in
jg
pusha
sub
pcmpeqd
adc
jl
in
add
add
loop
add
add
rorb
add
dec
add
loop
add
loop
add
rorb
add
dec
add
mov
dec
add
xchg
dec
add
xchg
dec
add
mov
dec
add
xchg
dec
add
xchg
dec
add
bound
add
add
push
dec
add
push
dec
add
bound
add
add
push
dec
add
push
dec
add
jnp
jnp
jnp
incl
add
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
incl
add
jnp
jnp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
ficoml
stos
inc
adc
push
mov
dec
jns
dec
in
xchg
push
add
inc
imul
adc
cmp
inc
push
sub
call
adc
icebp
add
add
out
push
addr16
cmp
add
repz
fsub
cli
add
repz
dec
add
outsb
fisubs
out
add
dec
mov
push
js
jo
lods
add
dec
xor
js
insl
jle
in
js
dec
dec
xor
imul
add
add
push
ja
xor
mov
add
cld
push
xor
ljmp
xor
add
pushl
and
je
add
int
imul
in
jo
bound
arpl
in
outsl
add
je
rep
insb
and
imul
add
and
and
adc
xor
sbb
jae
add
loopne
fs
out
outsl
testl
jb
bnd
cld
dec
jno
add
pop
jb
and
das
and
inc
push
imul
popa
push
mov
and
push
push
popa
in
outsb
arpl
inc
insl
out
gs
je
arpl
gs
enter
xlat
jns
jo
xchg
add
lcall
xor
push
jo
mov
insb
sahf
gs
insl
mov
pusha
addr16
pushl
lret
imul
ja
ret
dec
jno
rclb
arpl
pusha
jbe
idiv
outsl
push
adc
adc
insb
gs
jae
cmp
jnp
pop
jbe
adc
sbb
bound
dec
sbb
out
out
push
add
int3
add
aad
add
pop
mov
or
arpl
out
pop
jnp
sbb
fs
iret
pop
popf
in
popa
cwtl
add
push
xchg
in
push
cwtl
dec
shll
in
pop
jnp
leave
dec
xchg
mov
push
fs
xchg
add
push
dec
dec
mov
out
mov
cmp
jp
jecxz
push
pop
out
call
add
add
cli
inc
pop
or
in
popa
or
inc
sub
imul
jno
ja
fs
in
pop
or
fs
ja
push
fucompp
push
js
insl
icebp
js
lret
and
xor
ja
je
les
lds
add
push
in
xchg
push
ljmp
icebp
add
add
insb
mov
jbe
sub
push
jns
loop
jmp
sbb
insl
dec
jg
fs
sbb
add
push
out
pusha
jb
push
add
xchg
adc
xor
add
push
outsb
imul
sbb
bound
arpl
push
pop
add
xor
add
add
adc
push
gs
inc
out
je
dec
push
fs
add
jae
pop
add
and
mov
sbb
add
outsl
std
pop
add
out
jo
jmp
add
sbb
push
rclb
jae
push
out
pusha
gs
dec
addr16
jnp
push
push
sbb
pop
sbb
addr16
xor
jnp
push
ficoms
add
inc
push
arpl
inc
push
add
pop
bound
pop
push
jb
add
dec
pop
arpl
gs
pop
shlb
insl
lods
gs
jae
cltd
pusha
jb
xchg
pop
pop
lea
dec
imul
pop
addr16
gs
pop
fstps
fcoms
pop
ret
jnp
push
popa
pusha
ret
pop
fimuls
push
ret
push
icebp
push
insl
push
jmp
pop
adc
arpl
jecxz
arpl
dec
push
sub
xor
add
and
dec
push
adc
dec
push
jnp
adc
loope
pusha
jnp
or
loope
add
loope
dec
loopne
andnps
loopne
adc
out
push
xchg
dec
push
pushf
loopne
adc
jmp
pop
cwtl
std
call
add
cld
call
dec
pop
cld
call
push
xor
bound
ja
and
add
add
push
adc
push
dec
je
push
cli
push
dec
outsb
inc
imul
xor
inc
sti
fs
xchg
add
mov
jo
movsl
in
jmpw
push
nop
in
add
cmpsb
loopne
or
dec
insl
or
cli
outsl
add
jne
js
imul
loopne
jmp
pop
out
add
pusha
jmp
add
inc
loopne
mov
add
scas
dec
pop
xchg
cmpsb
jmp
outsl
lcall
jne
push
cmp
shlb
jb
inc
and
add
imul
arpl
and
cmp
cmp
xor
jno
cmp
push
xchg
add
insb
je
cmp
outsl
bound
insl
outsl
imul
pop
jb
and
insl
imul
aas
xor
aaa
lea
add
cmp
add
imul
cmp
loop
add
insb
fs
cmp
jae
aad
jb
fcos
popa
pop
xlat
and
sub
ret
sbb
xor
pop
aaa
add
add
push
adc
arpl
xor
add
add
add
arpl
gs
imul
push
add
xlat
inc
cmp
dec
xor
jnp
xor
les
arpl
sub
dec
xor
outsb
xchg
mov
je
xchg
cmp
cltd
cmp
jnp
xor
jbe
sub
andl
jnp
mov
pop
ljmp
pop
loope
add
mov
pop
cld
call
xor
dec
jns
dec
in
daa
jnp
pusha
and
add
and
sti
dec
das
or
push
add
in
daa
jnp
dec
xor
out
aaa
add
loopne
daa
aad
adc
daa
lret
lods
in
ss
into
cld
or
add
out
fisubrl
lahf
dec
into
cmp
icebp
shlb
icebp
rolb
popf
loopne
es
repnz
mov
icebp
outsb
popf
xchg
cld
js
stos
sti
imul
js
push
xchg
xchg
loop
mov
scas
insl
popa
je
lock
dec
push
cmp
sbb
out
pusha
dec
push
cli
pusha
jmp
sahf
cld
das
cli
js
insl
push
lods
icebp
bound
xchg
dec
fs
movsb
loop
or
sti
jae
repz
pop
loop
or
gs
or
add
pop
sti
push
add
dec
dec
fs
das
imul
sbb
pop
js
outsb
insb
shlb
pop
jae
cmp
push
cmp
and
ja
ss
cs
bound
push
jo
arpl
xor
push
pop
add
and
xor
add
aaa
jo
bound
push
scas
pop
pop
popa
push
xor
inc
addr16
pusha
jl
pop
insb
xor
popa
add
inc
xor
outsl
inc
aaa
add
jbe
xor
popa
inc
aaa
data16
dec
out
call
sub
movsl
sub
cltd
outsb
bound
sub
shrl
jnp
es
into
sub
dec
jmp
ljmp
arpl
jne
insl
das
sbb
outsb
pop
adc
jno
sub
jno
sbb
arpl
add
pop
je
sub
sub
fimull
jno
push
cs
fisttps
add
push
cs
inc
push
das
mov
divl
imul
scas
dec
loopne
movsl
test
add
cmp
in
mov
pop
out
lds
icebp
mov
stc
movsb
push
loope
cmpsl
fiadds
and
loop
in
dec
idivb
add
and
jl
jno
mov
out
sbb
inc
daa
gs
pop
cli
inc
push
adc
push
ficoms
add
or
fdiv
cmp
pop
ds
lret
add
hlt
movsl
add
push
mov
sub
adc
sub
add
mov
adc
punpckhdq
jmp
mov
inc
pushf
jns
sti
jmp
add
js
dec
sahf
add
dec
or
outsl
xchg
add
xchg
sti
jb
push
pcmpeqw
in
imul
outsl
pop
dec
sti
imul
loop
cmp
dec
clc
outsb
xor
stos
fsubrl
cwtl
dec
inc
adc
popa
add
dec
pop
jmp
push
dec
add
and
js
push
push
outsl
add
jl
jne
inc
cs
push
sub
push
inc
rorb
aas
aaa
add
adc
imul
xor
mov
sbb
cmp
arpl
cmp
xor
jae
xor
lcall
jno
cmc
ss
fs
cld
outsl
outsl
xor
jno
dec
cs
outsl
push
das
jno
cmp
add
push
pop
jo
pop
xor
mov
add
inc
jne
push
and
das
xor
jne
arpl
cmp
jae
jne
insb
lcall
jnp
sub
test
outsb
test
sub
nop
and
jnp
sbb
movsl
xor
jne
insb
pop
shlb
dec
rolb
push
sahf
sub
mov
and
sar
inc
adc
and
add
add
sbb
imul
xor
adc
xor
arpl
push
and
mov
dec
adc
loopne
push
and
icebp
sub
faddl
pop
jnp
idivl
stos
loop
pop
scas
add
push
test
or
cmp
not
das
mov
roll
fadd
xor
into
xor
fdivrl
add
fsubl
add
add
lea
pop
in
xchg
push
cmp
xchg
das
sbb
je
dec
icebp
jp
sub
xchg
sub
push
and
pop
pop
sbb
icebp
push
xor
in
xor
jmp
add
scas
repz
dec
push
lcall
sbb
es
ficoml
data16
imul
in
push
pop
add
add
inc
fimull
add
fs
push
dec
loopne
xlat
fwait
ljmp
cmp
fwait
repz
imul
in
jae
xchg
icebp
bound
and
je
dec
cli
push
pop
hlt
push
pop
pop
fsubrl
pop
jmp
pop
ja
pop
add
pop
sub
inc
mov
sub
jb
push
pop
arpl
pop
je
add
inc
xor
push
jns
xor
insl
jb
or
inc
aaa
pop
jbe
cmp
addr16
aaa
pop
jbe
les
popa
popa
es
mov
add
pop
jbe
sub
add
inc
jb
and
add
outsl
imul
xor
pop
je
cli
outsl
imul
and
add
sub
push
and
dec
jno
sub
je
cmp
jo
push
and
and
push
add
dec
pop
cs
dec
sub
lret
dec
xor
xchg
inc
jb
xchg
sub
mov
je
mov
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
incl
add
jnp
jnp
jnp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
xor
and
pop
addr16
das
add
cmp
loopne
and
test
add
mov
inc
jnp
mov
jnp
mov
jnp
add
cmp
xor
cmp
and
mov
dec
popf
sub
mov
dec
add
js
add
adc
imul
cmc
fs
imul
call
add
js
add
dec
fiadds
pop
add
call
js
add
fsubs
jb
movsb
add
js
sti
jmp
js
popa
mov
dec
or
dec
add
loope
insl
imul
jno
xchg
dec
add
dec
inc
jno
xor
dec
add
cmpsl
xor
inc
mov
outsl
insl
scas
sub
jae
add
add
loop
sti
call
insl
insl
ja
insb
and
jb
andl
add
dec
add
ja
and
sub
and
jno
adc
xor
add
and
insl
mov
and
outsl
insl
mov
dec
add
push
insl
sti
jnp
inc
insl
es
outsb
pop
mov
imul
push
jno
in
je
fldcw
and
add
clc
push
insb
or
add
out
pushl
fs
pop
addr16
push
cmp
cmp
insl
filds
inc
jbe
add
decl
inc
xor
push
and
enter
movsb
push
xor
mov
sbb
insl
popf
jns
push
xchg
xchg
insl
insb
test
mov
pop
arpl
push
insl
rorl
dec
dec
xchg
and
add
xchg
dec
sub
lea
daa
mov
xor
sub
xorl
jmp
push
notl
adc
dec
jmp
pop
jmp
ss
fdivr
ss
cmc
adc
fsubrp
call
es
faddl
cmp
sbb
mov
jmp
lret
cmp
add
mov
and
xchg
and
add
sub
push
mov
lcall
insl
ficoms
xchg
fsubrs
pop
jmp
dec
mov
push
push
outsl
push
inc
out
inc
push
jmp
cmp
pusha
cmp
push
cmp
push
jmp
xchg
bound
add
iret
loopne
cld
pop
loopne
sbb
loopne
pushl
fs
push
dec
add
adc
and
jmp
pop
inc
outsl
and
cmp
xchg
pop
or
xor
loop
cmp
test
sub
mull
jbe
xlat
das
popa
outsl
idivb
insb
addr16
imull
jbe
sub
and
insb
cmp
add
lods
cmp
gs
push
daa
dec
mov
gs
push
pop
or
xor
jge
cmp
subl
or
cmp
gs
daa
push
or
pop
cmp
jb
cmp
jnp
push
insl
pop
pop
sbb
outsl
mov
sub
xor
xchg
add
cmp
sub
int
insl
pop
into
sbb
add
adc
popa
pop
jno
fabs
ds
sbb
insl
add
and
cli
sub
aam
ss
out
pop
insb
fisubs
dec
test
dec
and
and
outsb
lahf
push
xor
jle
es
add
jnp
sbb
dec
sbb
pop
cmp
outsb
pushf
dec
fstpl
inc
dec
lods
push
pop
in
fcompl
in
push
add
dec
adc
add
fdiv
push
fisubs
dec
mov
sub
xor
testl
call
and
dec
pop
push
pop
dec
pop
push
pop
dec
cwtl
push
pop
dec
cwtl
push
pop
dec
cwtl
push
testl
or
cmp
in
push
int3
fistps
rolb
add
test
and
daa
add
mov
add
inc
and
sbb
pop
int3
dec
fldl
mov
cltd
loopne
lods
ds
outsl
movsl
dec
ljmp
add
sub
popf
mov
mov
jb
push
pop
cmpsl
pop
loopne
movsl
dec
ljmp
add
inc
jmp
dec
dec
popf
loop
dec
test
fsubl
xor
call
pop
sbb
add
fistps
mov
fbstp
ja
push
arpl
pusha
add
xor
sbbl
andl
fs
xor
dec
imul
or
push
insl
jae
dec
push
outsl
mov
xor
mov
xor
je
adc
idivb
gs
sti
push
jbe
and
inc
out
std
dec
outsl
adc
add
add
and
pushf
xor
xchg
xor
das
jo
xorl
arpl
xor
jbe
pusha
sub
outsb
add
jnp
xor
lret
inc
xor
inc
xor
jnp
pop
jno
xor
jno
jne
dec
bound
daa
pop
pop
subl
push
sbbl
inc
sub
sbb
add
adc
xor
inc
adc
lret
and
sub
aad
pop
cmp
push
jno
or
int3
pop
fs
xor
mov
jmp
arpl
gs
insl
aad
das
pop
leave
adc
rorl
aaa
cmpsl
icebp
push
dec
out
and
nop
jmp
testb
add
hlt
es
dec
mov
add
add
xlat
inc
jnp
mov
das
pop
out
push
sub
mov
xor
sbb
in
fstps
sti
mov
dec
call
aas
cmp
movsl
cmp
dec
test
das
adc
inc
ret
in
xor
fcoml
lret
xor
in
ss
mov
dec
sbb
in
add
or
ds
jmp
xor
add
cs
pusha
jmp
aas
sbb
pop
faddl
sbb
jne
pop
fsubl
ljmp
cmp
inc
lods
aaa
cmp
push
or
ss
mov
xchg
push
pop
ljmp
mov
pusha
fwait
js
push
fs
jnp
cli
inc
test
pusha
jge
or
ds
stos
icebp
inc
cmp
add
iret
xor
lahf
jecxz
add
push
dec
inc
data16
insl
insb
mov
jo
popa
aaa
fs
xor
outsb
movd
xor
push
adc
pop
or
ja
push
push
xor
push
add
fs
arpl
xor
and
push
outsl
sbb
push
push
outsl
mov
jne
add
pusha
popa
push
sti
inc
inc
repnz
inc
pop
es
inc
add
out
and
ret
insl
testl
jo
mov
fs
sub
jnp
cmp
and
push
mov
aas
jae
add
stos
inc
out
pop
lret
cmp
xchg
cmp
addr16
dec
and
push
movsb
cmp
bound
dec
adc
push
push
inc
cmp
sub
xchg
dec
add
lods
adc
add
adc
cmpsb
dec
inc
daa
test
je
lods
dec
push
pop
xchg
xor
xchg
cmp
adc
es
dec
test
push
ds
inc
jae
lret
sub
lcall
dec
pop
xor
or
push
jnp
push
sbb
call
fisttpl
fdiv
sub
pushf
filds
sar
inc
repz
or
scas
fisttpl
xor
fists
add
mov
call
cs
loopne
dec
cmp
or
push
inc
sbb
cmp
and
loop
xor
in
mov
sub
mov
das
and
adc
pop
cs
aas
xor
mov
or
xchg
sub
jne
test
dec
pop
cmp
pusha
push
jg
dec
push
mov
push
add
nop
and
dec
mov
daa
xchg
rep
adc
push
cmp
xor
add
push
and
pusha
loop
adc
insl
or
outsb
rcrb
int3
stos
and
mov
insl
in
fs
xchg
frstor
out
outsl
mov
js
arpl
test
pusha
mov
mov
and
add
out
or
xor
ss
add
sub
arpl
arpl
and
xor
inc
outsb
xchg
push
pop
insb
jbe
inc
imul
xor
bound
insb
jb
dec
push
gs
cmp
jb
arpl
pop
jb
xor
out
and
gs
pop
jb
xor
add
fidivrl
jno
mov
xor
jnp
xor
addr16
arpl
rcrl
jb
mov
jno
addr16
arpl
fstps
jb
pop
das
jb
addr16
pop
out
push
push
fdivp
pop
arpl
xor
pop
enter
sahf
adc
inc
insl
test
push
dec
lcall
jbe
push
fists
dec
adc
scas
inc
adc
sub
add
adc
jno
stos
es
inc
xor
xchg
sub
mov
jb
addr16
pop
sub
xchg
sbb
fmul
xor
addb
out
xchg
pop
pop
std
lea
sub
js
jnp
xchg
xor
out
sbb
fsubr
dec
scas
decb
inc
fsubp
push
and
jnp
cmp
cmpsl
in
sbb
and
add
jnp
sbb
fdivr
xor
and
jmp
hlt
add
sti
lret
sub
leave
adc
xor
fxch
das
pop
fiaddl
or
push
bound
inc
mov
dec
loopne
mov
push
fsubl
fldt
push
ficoml
test
loope
pop
sub
inc
add
mov
jmp
cmp
push
pop
or
push
push
outsb
inc
pop
loopne
or
jg
push
sbb
sbb
cmp
cli
push
and
push
fisubl
sbb
or
movsb
add
xchg
loope
fidivrl
push
fldenv
add
pop
inc
pop
pop
outsb
negb
jo
in
and
push
or
cmp
add
loopne
outsb
insb
divl
push
jb
sbb
push
and
jle
gs
gs
dec
ret
outsl
lods
arpl
push
mov
fs
pop
nop
addb
dec
popa
jno
push
gs
arpl
cwtl
arpl
push
imul
add
arpl
outsb
jle
imul
jl
add
gs
push
jnp
incl
add
xor
or
lea
and
daa
jno
or
ja
fistpl
je
and
sub
add
lret
adc
cmp
and
add
pushf
and
int3
xchg
adc
sbbl
fldenv
outsb
test
and
je
aaa
xor
arpl
pop
mov
push
pushf
arpl
add
add
aaa
inc
jb
pop
sub
dec
and
das
addr16
test
pop
mov
sub
cmp
cwtl
cs
mov
xor
ret
xor
stos
movsb
adc
mov
sub
or
je
jmp
mov
dec
les
pop
sbb
inc
xor
ret
add
aam
jmp
add
mov
push
sub
or
dec
adc
mov
xor
add
mov
insl
les
imul
shll
stos
aas
xchg
mov
les
mov
fs
stos
jo
pop
xchg
insb
xchg
arpl
insb
mov
fwait
push
mov
xchg
push
mov
movsl
mov
jle
shlb
mov
gs
mov
push
sub
push
dec
dec
mov
add
scas
jo
push
sahf
push
jmp
ja
dec
and
jo
gs
insb
jg
sub
ja
add
push
and
addr16
lds
loop
insl
data16
popa
pop
jb
mov
das
inc
js
add
jp
jb
pop
pop
inc
fidivrs
inc
ficompl
outsl
lock
pop
int
jo
add
arpl
mov
and
pop
jb
sbb
xor
nop
outsl
je
jnp
jae
jg
data16
pop
jb
mov
xor
bound
jb
pop
pop
push
jo
imul
pop
jno
dec
jb,pn
aaa
das
pop
push
add
cmp
sbb
inc
fs
add
adc
addr16
aaa
das
insl
dec
or
inc
and
adc
pop
das
ud0
out
addr16
ja
sar
pop
cmp
lret
and
jnp
sub
aaa
cmp
leave
inc
ja
lcall
aam
xor
movsb
sub
pop
enter
mov
fs
data16
cmpsl
dec
sbb
mov
sub
aaa
cwtl
lods
adc
cmp
leave
xor
roll
sub
mov
jnp
fsubrs
mov
jmp
dec
nop
popf
xor
mov
push
and
xchg
sub
dec
mov
adc
jmp
dec
cltd
and
mov
leave
mov
inc
mov
jmp
adc
mov
add
pop
mov
dec
adc
push
adc
mov
jo
inc
mov
inc
scas
insb
add
dec
pusha
add
sub
insl
dec
dec
into
gs
xchg
stos
add
mov
jmp
mov
imul
add
jae
outsb
stos
pop
movsb
pusha
mov
imul
mov
add
jb
mov
stos
add
je
jno
enter
bound
jae
jne
fs
sub
and
and
subb
pop
pop
jb
xchg
js
imul
je
rolb
inc
jb
pop
pop
pop
add
sbb
rolb
jo
pop
bound
fsubrl
gs
jp
jae
pop
insl
jb
dec
pop
push
repz
jno
std
pusha
data16
jns
add
jb
push
push
outsl
hlt
push
jne
mov
pop
dec
mov
mov
je
xchg
adc
xlat
js
pop
test
daa
popa
mov
pop
ss
cwtl
pop
sub
pop
adc
push
add
xchg
imul
je
pop
adc
imul
je
pop
and
sbb
jb
aaa
cmp
daa
das
pop
sub
adc
or
inc
das
pop
cmp
or
je
jmp
inc
push
sub
xor
pop
in
dec
fwait
call
and
fildl
rol
and
dec
and
mov
cmp
aad
push
and
add
test
sahf
sub
pushf
stos
inc
adc
shr
sahf
lods
adc
cmp
je
adc
and
dec
xchg
add
aaa
sub
or
inc
mov
in
mov
add
shll
aas
lea
push
sub
xchg
aas
mov
and
mov
mov
add
call
mov
mov
mov
outsl
sets
push
mov
jbe
pop
test
xor
sub
or
pop
cmp
jo
pop
popf
gs
mov
pushf
stos
jbe
ja
dec
add
scas
jbe
xchg
mov
fiaddl
jg
mov
add
pop
dec
pop
stos
push
lods
les
jne
cwtl
sahf
imul
dec
outsb
test
pop
add
push
popa
loop
pusha
js
dec
jno
scas
arpl
mov
ja
shrl
outsb
lret
dec
pop
dec
mov
pusha
pop
pop
jbe
pop
jo
jle
add
inc
push
cmp
xchg
pop
popa
bnd
jb
dec
inc
outsb
add
loope
pop
insb
jle
je
dec
inc
popa
scas
outsl
inc
imul
bound
dec
mov
jbe
mov
pop
add
pop
pop
jb
outsl
addr16
jl
insl
jnp
or
into
adc
ret
es
aaa
das
insl
jmp
aad
jb
jno
push
leave
nop
adc
mov
add
sbbb
xchg
adc
jb
jb
mov
add
stos
test
imul
arpl
imul
outsb
bound
inc
inc
dec
pop
adc
or
outsb
bound
xor
and
jb
sbb
sub
adc
add
fs
adc
adc
jmp
xor
dec
popf
aas
sbb
xchg
pop
mov
sbb
jl
out
cwtl
and
mov
xchg
xor
mov
fwait
pushf
push
sbb
mov
inc
and
stos
cmp
into
stos
inc
dec
test
lea
popf
stos
or
pushf
mov
pop
jnp
push
push
insl
stos
pop
cmp
add
lcall
sub
mov
loope
mov
xlat
and
dec
push
addr16
imul
add
insb
mov
arpl
pop
jae
mov
insb
jns
mov
insb
dec
pop
lods
popa
push
ja
dec
inc
popa
mov
pop
ss
stos
jo
pop
lahf
imul
popa
cmp
dec
or
and
xchg
mov
adc
aas
inc
or
jbe
fwait
mov
sbb
mov
xchg
jo
mov
nop
stos
outsb
add
outsl
insl
jo
insl
pop
arpl
add
pop
pop
data16
jno
adc
sub
sti
insb
add
pop
inc
sub
push
std
je
ja
pop
pop
pop
xchg
imul
jo
add
xchg
push
push
push
js
pop
push
outsb
pop
jae
addr16
push
jb
dec
arpl
pop
mov
add
movsb
sbb
xchg
pop
xor
mov
mov
mov
pop
sub
fs
xor
xor
add
dec
push
dec
divb
aas
hlt
sbb
add
jno
flds
jo
stc
pop
bound
in
movl
push
faddl
stc
aam
cmpsl
add
xor
jmp
inc
xor
pop
roll
push
fnstenv
imul
add
add
push
jno
test
add
push
cs
dec
pop
add
pop
pop
gs
cmp
gs
incl
push
cmp
inc
sub
dec
adc
pop
dec
mov
and
ret
pop
push
mov
push
jnp
mov
pop
pop
dec
fwait
xor
popf
mov
adc
jmp
xor
ret
xchg
daa
add
lds
inc
mov
mov
mov
dec
sub
shr
mov
mov
test
mov
add
mov
aam
xchg
push
sbb
or
inc
mov
xor
std
add
mov
cld
cmpsb
ljmp
enter
mov
xor
pop
movsl
push
scas
jo
add
mov
add
shlb
stos
imul
dec
add
js
add
js
add
js
add
js
add
js
add
js
add
js
outsl
pop
pop
mov
dec
dec
push
cmp
pop
mov
inc
sub
add
outsb
stos
imul
ja
jno
xchg
add
insl
jb
add
jg
pop
jb
push
jno
pop
jbe
popa
imul
pop
add
pop
arpl
pop
arpl
pop
outsl
insl
les
into
data16
shll
fisubs
pop
add
negl
out
pusha
add
insl
jp
bound
into
xor
pop
outsb
add
jae
pop
mov
pop
outsb
adc
insb
lret
push
pop
xor
outsb
outsl
add
push
jae
jae
outsb
arpl
pop
jo
jae
popa
jnp
and
push
dec
rcrl
and
jnp
adc
and
sbb
push
insb
or
arpl
and
adc
fsubl
insl
pop
cli
sbb
pop
sbb
and
jnp
jnp
jnp
jnp
jnp
incl
add
jnp
ljmp
mov
lahf
mov
cs
jns
add
jne
data16
je
arpl
dec
push
add
scas
adc
sbb
cld
inc
arpl
add
popf
movsb
clc
add
add
dec
test
mov
jmp
sbb
mov
jmp
sbb
mov
or
test
xchg
ret
jnp
mov
jnp
mov
jnp
mov
jnp
cmpsb
aas
mov
test
inc
and
inc
sbb
mov
xor
cltd
insl
inc
and
pop
pushf
mov
cmp
mov
dec
sub
mov
imul
test
jmp
add
cmp
jp
pop
test
jg
outsb
enter
mov
pop
dec
dec
mov
mov
imul
test
arpl
mov
arpl
mov
add
mov
jo
mov
push
pop
jbe
inc
adc
popa
inc
push
push
xorl
add
mov
add
push
outsb
popa
sahf
jg
popa
lahf
push
insb
imul
add
pop
inc
mov
xchg
jo
lds
jb
dec
inc
outsl
mov
dec
pop
dec
mov
jb
push
adc
insl
jno
push
subb
pop
pop
jb
outsb
dec
imull
inc
out
add
bound
rclb
outsl
add
jnp
pop
insb
mov
adc
cltd
mov
adc
push
mov
je
push
pop
je
jle
pop
pop
xor
and
incl
aaa
sbb
inc
sbb
xchg
dec
pop
je
pusha
pop
outsb
cmp
push
or
dec
and
in
push
inc
jmp
inc
das
aas
cmp
cs
out
xor
sbb
aaa
mov
add
jecxz
xor
outsb
stos
mov
dec
push
movsl
stos
push
aad
dec
pop
pop
test
fs
pop
lahf
dec
sbb
pop
xchg
cmp
push
mov
fstps
sbb
adc
or
aas
dec
mov
or
xor
lret
rol
daa
outsb
cmpsb
or
add
mov
jmp
sbb
mov
mov
test
aad
andb
shr
stos
outsb
mov
fwait
mov
mov
jae
mov
inc
cmp
and
mov
test
xchg
jg
inc
mov
xor
adc
lret
mov
inc
xchg
mov
int
test
add
add
lods
inc
xchg
xor
js
imul
mov
dec
rcrb
mov
inc
movsb
jbe
push
gs
xchg
jp
test
dec
xchg
jge
mov
rclb
pop
loope
insl
jb
push
pop
xor
push
add
and
bound
outsl
add
adc
sti
xor
and
sti
cmp
add
outsb
add
add
sti
push
add
rclb
sti
pusha
shlb
sti
xor
pop
sti
sub
jo
xor
sbb
sti
xor
push
aaa
xchg
push
add
xchg
dec
add
jo
outsl
rcrl
in
arpl
pop
pop
je
adc
cmp
xor
ret
or
xlat
and
adc
sarl
insl
add
into
lret
jnp
sbb
jb
mov
jno
js
je
js
jb
adcb
pop
mov
dec
mov
add
adc
inc
adc
push
out
push
jns
arpl
adc
pop
je
pop
sbb
inc
adc
pop
dec
sub
sbb
je
inc
inc
sub
and
or
sub
or
or
jbe
neg
and
add
xor
dec
xchg
add
cmpsl
xchg
push
lret
or
fsubs
adc
mov
into
adc
test
sbb
stos
cmp
mov
dec
sub
mov
push
sahf
jmp
adc
cltd
push
and
dec
sub
in
scas
cmc
and
add
mov
jecxz
mov
or
mov
jmp
jmp
cmpsb
lahf
push
mov
js
push
mov
js
dec
mov
popf
inc
jmp
jae
inc
sahf
push
dec
cs
xor
dec
sub
insb
pop
push
stos
imul
mov
imul
xchg
je
add
jmp
gs
leave
insl
add
mov
add
ret
mov
push
movsb
mov
push
movsb
mov
add
mov
pusha
pop
shll
outsl
aas
daa
sti
pop
and
outsl
mov
insl
push
adc
lock
adc
jo
push
sbb
xor
jb
adc
mov
push
jae
add
add
mov
insb
pop
push
fs
adc
lods
cmp
pop
dec
cmp
arpl
cmp
outsb
insl
jge
outsb
add
sbb
dec
sub
lods
cmp
inc
gs
outsb
outsb
jnp
fisttpl
lock
pushl
cmc
in
pusha
jnp
leave
outsl
loop
fildl
fsubp
dec
fxam
add
fisttpll
leave
push
stos
and
repz
rcl
in
jae
mov
pop
int
cmc
cbtw
sub
movb
data16
jne
push
jnp
push
je
jno
addr16
push
gs
push
add
leave
imul
fwait
imul
pop
push
dec
hlt
decl
xor
inc
out
ds
xlat
out
cmpsb
mov
aad
add
jmp
out
mov
mov
mull
hlt
call
movsl
test
fmuls
loop
mov
xchg
stos
dec
movsl
loop
mov
jmp
aam
mov
inc
clc
scas
aaa
out
xchg
dec
jecxz
mov
out
mov
pop
out
mov
sbb
cmc
add
les
push
lret
add
push
jb
js
push
mov
mov
mov
mov
xchg
mov
insl
enter
cmpsb
imul
popf
popa
mov
jp
js
inc
int3
inc
adcl
das
jnp
push
push
sub
inc
cmp
push
mov
adc
jo
leave
cltd
inc
adc
fisttpl
gs
cmpb
cwtl
imul
mov
push
sub
xchg
xor
pop
cmp
loope
daa
xor
xor
rcrb
xor
adc
jge
arpl
negb
ja
cmp
xor
pop
jae
adc
push
or
gs
add
cmp
xor
gs
jp
fs
inc
push
std
push
push
dec
jnp
add
cmp
andb
inc
push
jno
jae
pusha
cmp
add
dec
repnz
out
jo
sub
add
roll
dec
iret
push
inc
inc
push
inc
das
in
dec
sbb
incl
in
insb
add
lock
adc
sub
add
repz
dec
int3
les
not
inc
mov
jmp
fcoml
lds
adc
iret
pusha
test
xor
sarl
leave
jp
push
movsb
xchg
in
sub
sub
pop
mov
push
pop
addr16
bound
push
inc
dec
inc
es
dec
dec
push
out
dec
dec
and
cmp
sub
push
mov
out
lcall
sbb
out
add
movsb
push
repnz
out
sbb
add
ret
lods
aad
fstpl
cli
fs
fidivl
xchg
cmc
fstps
adc
jmp
jmp
mov
adc
sub
mov
decb
lods
dec
pop
cs
js
cmp
push
add
jo
add
add
jne
add
jnp
dec
push
aad
jae
leave
lods
pop
sbb
mov
mov
or
xchg
popa
lcall
xchg
imul
sub
popf
lahf
add
dec
mov
les
or
mov
jmp
push
lahf
pushfw
pop
mov
mov
js
outsl
test
jnp
xchg
mov
xchg
outsl
dec
add
or
insb
dec
adc
add
and
xorl
fs
jge
dec
popa
data16
add
xchg
or
ja
jb
jge
jb
pop
xor
push
mov
dec
push
popa
xor
jbe
xor
sti
dec
cmp
aaa
popa
gs
push
add
lock
repz
dec
jns
cs
dec
mov
inc
push
adc
insl
decb
dec
popf
aaa
pusha
jo
sub
and
outsb
data16
out
pop
mov
loopne
push
je
outsl
fwait
inc
out
addr16
in
pop
xor
dec
in
insl
pop
inc
in
insb
and
pop
loop
jnp
rorb
push
loope
paddd
pop
pop
out
add
pop
or
bound
xor
loop
call
jmp
negb
out
insb
leave
sar
inc
scas
in
fs
ljmp
xlat
push
jo
mov
into
pop
lahf
dec
dec
cmc
mov
inc
ljmp
push
loope
nop
adc
jmp
dec
dec
sub
cmp
adc
push
mov
dec
sahf
sbb
sbb
adc
mov
lock
lods
neg
xor
int3
loope
mov
loope
sbbb
mov
mov
add
mov
call
stos
xchg
popf
mov
lea
mov
add
lahf
inc
sbbb
dec
or
sub
adc
fcomps
insb
inc
lahf
nop
jo
ljmp
cmp
lods
outsl
adc
movsb
cwtl
popa
sbb
mov
push
ret
mov
xchg
mov
outsl
jmp
mov
lret
dec
enter
into
pop
mov
mov
sub
cmpsl
xor
add
sbb
push
fs
jo
popa
stc
jo
outsl
xchg
and
stos
sub
pop
dec
xor
mov
pop
push
push
xor
xorl
jno
nop
adc
add
and
dec
jne
outsl
add
fs
sti
sub
popf
xor
mov
add
add
sub
sbb
add
outsl
add
and
sub
sub
sbb
inc
jnp
xor
inc
push
xor
outsl
jmp
xor
mov
insl
mov
inc
mov
fs
pop
xor
xchg
push
pop
xor
insb
pop
pop
jmp
dec
push
fimull
cmp
inc
daa
gs
cs
in
sbb
insl
das
xor
mov
jnp
jnp
cmp
aas
in
dec
test
into
pop
call
or
add
aam
pop
enter
xlat
mov
mov
ror
lahf
js
xchg
mov
mov
in
mov
aam
lahf
pop
in
mov
sub
in
mov
lock
jnp
out
add
xor
insb
xchg
adc
pop
outsb
jecxz,pn
mov
shlb
lods
adc
fdivs
mov
repnz
or
aam
or
ljmp
mov
loopne
mov
in
lcall
push
fwait
outsl
leave
cmp
jg
and
popa
fwait
dec
xchg
sbb
jbe
inc
test
pop
fwait
outsl
or
imul
lcall
fsubl
xor
lods
jle
xor
lret
or
addb
and
or
popa
adc
popa
add
test
imul
lcall
pop
mov
add
and
je
sub
sbb
bound
repnz
add
push
stc
dec
outsl
icebp
sub
adc
pusha
insl
in
xor
adc
jo
cmc
push
pop
insl
and
pop
je
std
pop
je
dec
pop
arpl
sbb
pop
subb
insb
loop
insl
data16
inc
outsb
jno
pusha
fs
pop
imul
ss
xchg
pop
sti
push
ja
arpl
add
add
fwait
dec
push
outsl
jnp
aam
jmp
lret
adc
jae
mov
mov
ljmp
repz
ret
loop
leave
mov
hlt
jne
mov
out
dec
xchg
cmp
test
xchg
jecxz
pop
cli
decl
cli
outsl
dec
xchg
repz
mov
arpl
jecxz
push
inc
loopne
lea
add
jnp
jecxz
sbb
loopne
push
push
call
pop
punpckhdq
popw
xor
into
and
lods
aad
jnp
jmp
flds
xchg
fcmovnu
outsb
cmpsl
in
insl
jmp
cli
popf
pushf
xchg
lret
iret
enter
mov
jns
call
cltd
sahf
jl
add
push
notb
mov
add
pop
stos
push
loope
movsl
jmp
divb
dec
sub
dec
mov
add
test
sbb
and
imul
add
cmpsl
outsb
leave
mov
popf
outsl
jmp
cwtl
jg
jo
dec
mov
cwtl
jg
mov
sub
outsl
test
ds
mov
add
add
in
push
leave
inc
lahf
gs
mov
adc
mov
sub
jge
dec
lahf
pop
dec
in
outsl
pop
jg
dec
sbb
fcompl
gs
xchg
jg
sbb
mov
pop
jg
add
fadds
jb
dec
jae
and
dec
mov
pop
add
cld
pop
imul
add
push
add
and
add
add
pusha
jb
xor
and
add
repnz
jb
add
dec
roll
sbb
xor
add
add
push
out
fs
jb
jno
push
jb
popa
aaa
daa
sti
inc
scas
testb
sti
data16
jno
aas
and
push
testb
and
mov
push
das
and
icebp
jae
cmp
push
add
sub
iret
insb
or
incl
data16
pop
sub
jae
and
es
out
je
xlat
loop
jnp
sarl
inc
pop
enter
leave
leave
xor
dec
pop
aad
jo
xlat
incb
ror
lcall
jo
test
arpl
push
es
pop
js
je
push
ljmp
add
sbb
push
pop
pop
out
je
dec
pop
call
cmp
cmp
sub
jmp
and
lods
clc
repnz
out
xchg
mov
in
lahf
ljmp
and
stos
mov
inc
sbb
in
mov
rclb
xor
test
call
add
fwait
stos
jbe
mov
jecxz
lods
inc
out
jp
loope
stos
push
fisubrs
jmp
clc
push
mov
add
sahf
mov
push
cwtl
pushf
gs
popf
imul
jbe
setge
jne
movsb
test
dec
mov
pop
pop
lret
insb
fstpl
mov
mov
das
popf
insb
mov
add
push
sahf
jae
sub
jo
sub
imul
cmp
jbe
fcompl
pop
shrb
add
xor
jb
jne
pop
je
xchg
xor
jb
outsb
data16
pusha
jae
fldenv
nop
cli
jno
je
sbb
and
jge
sbb
add
jb
xor
and
outsl
je
sti
gs
insl
pushw
and
or
xor
outsb
jae
xor
in
insb
fs
and
cld
add
xchg
pop
jno
cld
and
sbbb
outsl
jl
push
imul
gs
repz
push
mov
fs
xor
popa
dec
mov
jae
xchg
lret
pop
loopne
daa
dec
repz
add
cmp
repnz
decl
loope
or
hlt
bound
push
pusha
or
insb
adc
stc
loope
fstl
jmp
mov
xlat
ljmp
adc
pushl
fcomp
call
out
pusha
pushf
ret
test
fisubs
xchg
jmp
popf
mov
xlat
insl
jnp
fisubl
mov
push
jecxz
dec
push
fiaddl
add
dec
fistl
or
pop
pushf
cmp
dec
outsb
cmp
dec
fwait
cmp
dec
mov
add
mov
adc
stos
or
sub
adc
pop
mov
and
lods
clc
testb
neg
jmp
rcr
fldcw
into
negb
xor
jbe
and
pop
std
lret
xchg
jno
xor
shrl
xor
into
xor
add
xor
into
xor
xor
add
dec
pop
pop
insb
js
push
shrl
jo
ja
push
inc
in
dec
lds
sub
push
push
xor
push
lret
push
lock
push
lds
mov
push
dec
adc
push
or
cmp
push
mov
cmp
pop
lret
add
cmp
sbb
cmp
movsl
les
push
loop
cmp
pop
cmp
fmull
cmp
adc
cmp
pop
add
adc
xchg
adc
push
jno
sti
push
dec
or
jge
or
push
dec
or
sub
sti
iret
cmp
sti
and
or
inc
sbb
sti
dec
sub
sti
sbb
sub
sti
leave
or
sti
jg
add
adc
push
sbb
sti
lea
adc
adc
adc
mov
out
sti
shl
sti
sbb
adc
push
aam
sti
xchg
cld
adc
add
adc
xor
adc
out
adc
pop
jnp
mov
pushl
lea
ds
mov
pushl
out
mov
call
add
loop
dec
jmp
in
jecxz
incl
lock
ffreep
pushl
in
dec
jmp
mov
pushl
pop
incl
pusha
ljmp
jo
ljmp
inc
pushl
out
dec
inc
les
or
sbb
or
adc
or
or
or
add
or
add
cld
enter
push
add
ret
in
mov
ret
int3
arpl
ret
mov
dec
jmp
add
jmp
add
std
fcompl
movsb
std
and
lods
clc
fstpt
sbb
mov
mov
mov
dec
mov
rol
enter
stos
add
push
popa
pusha
enter
lock
repz
xor
xorb
and
adc
data16
or
inc
outsb
and
repnz
imul
jmp
or
lahf
outsb
and
or
xor
in
stos
push
or
pop
outsb
and
leave
pop
outsb
and
mov
pop
dec
outsl
add
mov
add
stos
pusha
data16
adc
jmp
js
add
js
add
push
dec
add
push
dec
add
and
add
dec
add
adc
add
dec
add
and
add
dec
add
adc
add
dec
add
loop
add
loop
add
rorb
add
dec
add
loop
add
loop
add
rorb
add
dec
add
mov
dec
add
add
xchg
dec
add
xchg
dec
add
mov
dec
add
xchg
dec
add
xchg
dec
add
bound
add
add
push
dec
add
push
dec
add
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
incl
add
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
js
add
js
add
js
add
popf
mov
add
sbb
aam
mov
in
jmp
push
mov
js
add
js
add
js
add
js
sti
jmp
js
add
js
add
js
add
js
add
js
add
js
add
js
sti
jmp
mov
dec
add
test
sti
jmp
je
add
jle
add
jns
add
add
add
push
dec
add
inc
push
add
push
push
add
pop
push
add
dec
push
add
pusha
push
add
arpl
add
sub
pop
add
add
and
dec
add
sub
js
or
sbb
and
sub
adc
or
and
es
add
or
jecxz
push
push
ficompl
push
movsl
add
adc
add
popf
or
sbb
add
pop
mov
push
push
or
or
or
push
push
push
and
sub
pushf
adc
lods
push
adc
xchg
and
testl
jnp
cmp
add
jnp
jnp
add
and
jnp
adc
add
jnp
add
jnp
add
jnp
add
add
jnp
add
jp
jnp
jp
jnp
add
jnp
add
jp
add
jp
add
mov
add
lods
idiv
jnp
jnp
in
pop
jnp
in
mov
add
in
add
add
in
pop
jnp
in
pop
or
add
jmp
pop
inc
dec
in
jnp
jmp
pop
add
sub
jmp
add
jmp
add
jmp
pop
cld
or
add
jmp
add
in
jnp
in
pop
aam
in
int3
dec
in
add
or
add
in
jnp
add
jl
add
je
sti
jmp
je
add
jl
add
je
add
js
add
js
sti
jmp
add
jl
sti
jmp
js
add
negl
jmp
clc
dec
add
lcall
jmp
jg
add
ja
or
dec
or
dec
or
pop
sub
pop
sub
dec
sub
dec
sub
pop
add
js
add
jg
sub
pop
add
jg
add
testl
add
into
add
add
jb
adc
mov
dec
adc
mov
add
into
adc
inc
into
add
push
into
adc
adc
add
add
jb
adc
jb
adc
adc
adcb
adc
and
add
and
adcb
add
ret
add
adc
mov
add
ror
add
add
loop
add
jnp
jle
sti
idiv
push
push
add
push
push
adc
xchg
sti
push
push
add
pop
decl
jnp
jle
jnp
jnp
jle
sti
push
jg
jnp
sti
push
decl
sti
push
jg
sti
idivb
jnp
add
jnp
add
jae
jnp
incb
xor
add
jnp
add
jnp
cmp
add
pushl
incl
incl
add
incb
jnp
incb
orl
jnp
jmp
add
jmp
add
jns
jmp
add
icebp
add
jnp
jmp
add
icebp
add
jnp
loope
jns
jmp
add
jmp
add
add
jmp
add
icebp
add
jns
jmp
add
jnp
jmp
add
loope
jns
jmp
add
add
jbe
add
js
add
js
or
jle
or
js
add
js
or
jbe
or
js
add
jbe
add
jle
add
js
or
js
or
add
jbe
or
jle
add
js
or
jle
add
js
add
js
or
jbe
add
cwtl
into
add
dec
add
dec
add
dec
add
into
add
into
add
js
add
pop
dec
add
js
add
pop
into
add
cwtl
into
add
arpl
addb
dec
add
rorb
add
addb
dec
addb
dec
add
shrb
add
add
mov
sub
add
sub
add
xor
add
push
addb
dec
add
loop
add
loop
addb
xor
add
sub
add
dec
add
rorb
add
addb
xor
add
push
add
and
add
xor
add
push
cmpb
addb
jnp
jnp
push
cmpb
add
add
jnp
pop
cmpb
jnp
jnp
push
add
jg
negb
add
pop
cmpb
jg
negb
add
pop
add
jg
negb
cmpb
jnp
jg
negl
add
pop
cmpb
jnp
incl
jns
incb
jns
incl
add
idiv
jnp
mov
push
jmp
add
push
jmp
add
jmp
add
mov
add
jmp
add
dec
jmp
add
nop
jmp
add
push
jmp
add
mov
add
jmp
add
add
jmp
add
jmp
add
jmp
add
dec
jmp
add
add
js
add
ja
inc
jmp
ja
add
js
inc
jmp
jg
add
ja
inc
jmp
js
add
js
inc
jmp
jg
add
js
inc
jmp
js
add
add
js
add
js
inc
jmp
ja
add
jg
add
ja
inc
jmp
js
add
js
inc
jmp
jg
inc
stc
js
and
js
and
cmp
sti
add
cmp
adc
and
dec
add
xor
cmp
adc
add
psubq
repnz
cmp
loop
inc
add
dec
add
ret
add
push
sti
pop
add
loop
add
ret
call
dec
add
mov
inc
add
push
sti
call
push
sti
pop
mov
add
orb
orb
bound
add
cmp
push
push
cmp
inc
push
sti
jmp
cmp
bound
cmp
push
dec
add
push
push
sti
pop
jnp
jnp
aas
pop
idivl
aas
pop
idiv
aas
jnp
mov
add
add
lcall
aas
jnp
mov
lcall
daa
lcall
idivl
aas
fwait
pop
mov
aas
pop
idiv
jnp
aas
pop
daa
jnp
mov
aas
pop
pop
mov
pushl
aas
jnp
mov
jnp
mov
lcall
dec
stc
ret
add
cmp
jmp
add
out
jnp
jmp
or
out
jnp
out
pop
dec
jmp
or
dec
jmp
add
out
jnp
jmp
add
add
sti
mov
out
mov
add
jmp
add
jmp
sti
fs
out
pop
dec
jmp
add
add
add
sti
fs
sti
jl
jmp
jmp
dec
add
js
push
jmp
js
push
jmp
js
add
and
ljmp
push
jmp
cs
jmp
dec
add
js
add
js
push
jmp
js
add
rcrb
jmp
cli
jmp
pop
add
rcrb
mov
cli
jmp
add
push
jmp
pop
push
jmp
nop
pop
add
js
add
js
add
sbbb
js
add
jo
add
js
push
add
sti
jmp
add
add
add
sti
call
and
loop
cli
mov
cli
call
dec
push
add
cli
decb
and
adc
cli
cli
psrld
add
dec
add
and
add
dec
push
adc
add
sti
decb
sar
jmp
cli
decb
and
call
cli
cli
call
dec
push
adc
add
xchg
cli
cli
rsqrtps
cli
jmp
dec
push
add
push
adc
add
jnp
jnp
jnp
push
add
daa
push
add
out
pushl
add
incb
jnp
out
add
incb
jnp
out
add
add
test
jnp
incb
imul
cld
cmpsl
out
add
out
jl
jnp
decl
cmpsl
incb
imul
ljmp
incb
jnp
idiv
test
jnp
testb
daa
push
add
daa
push
add
incb
imul
pushl
ljmp
add
sub
js
jmp
repz
sub
add
push
std
sub
dec
std
sub
dec
jmp
repz
jns
sub
dec
jmp
xchg
int3
rolb
dec
jmp
xchg
cld
add
in
push
add
jmp
xchg
cld
loopne
mov
cld
call
add
jne
pushf
cld
fadds
add
dec
add
js
add
idiv
cli
lods
xor
cli
jmp
js
add
cmc
sti
cli
and
sub
cli
jmp
js
add
sti
cli
shl
cli
cmc
clc
sti
cli
jmp
js
add
hlt
sti
cli
jge
sti
cli
jmp
js
add
js
add
js
add
js
add
add
sti
cli
aas
idiv
cli
mov
idiv
cli
mov
idiv
cli
add
cli
lcall
int
incl
cli
call
cli
call
cli
call
cli
call
int
jmp
cli
fcmove
cli
ljmp
cli
ljmp
cli
lcall
mov
sar
pushl
incl
add
cli
jmp
sar
ljmp
cli
incl
sar
in
iret
cli
decl
incl
cli
ds
decl
int3
cli
out
int3
cli
jnp
cmp
xchg
add
incl
mov
je
mov
insb
test
lcall
call
decl
incl
cmp
mov
add
xor
test
sub
cmp
call
cmp
mov
decl
cmp
push
cld
mov
cmp
out
jnp
cmp
out
jnp
cmp
dec
cmp
out
mov
dec
add
xchg
sbb
mov
xor
test
insb
test
add
inc
test
add
test
add
mov
push
stc
mov
inc
stc
je
cmp
loop
xor
testb
incl
stc
stos
test
cwtl
test
mov
clc
cwtl
test
clc
sahf
test
clc
data16
clc
js
aam
call
test
clc
add
idiv
cli
jmp
idiv
cli
popl
add
clc
cli
xchg
idiv
cli
mov
idiv
cli
leave
clc
cli
idiv
cli
scas
idiv
repz
cli
add
idiv
int
idiv
fsin
idiv
das
cmc
idiv
or
idiv
stc
div
cli
addr16
idiv
jg
idiv
xchg
std
idiv
xchg
cmc
idiv
and
idiv
and
idiv
dec
std
idiv
xor
std
idiv
iret
cmc
idiv
xlat
std
idiv
stos
add
cmc
idiv
scas
std
idiv
add
cli
incl
call
incl
cli
incl
sar
incl
sar
fcmovbe
cli
jmp
sar
jmp
sar
call
cli
jmp
into
cli
incl
ja
jmp
ja
call
sti
incl
sti
mov
ja
call
into
cli
incl
add
into
cli
jmp
dec
add
fmul
cli
jmp
int
ljmp
cli
lcall
ljmp
jnp
cmp
in
jnp
cmp
in
jnp
cmp
clc
jp
lods
in
jmp
cmp
mov
incl
cmp
cmp
ljmp
jmp
jnp
cmp
sahf
cmp
add
jnp
jg
cmp
jg
xor
cmp
insb
cmp
out
cmp
adc
jnp
cmp
cld
movsl
cmp
in
dec
mov
sbb
cwtl
adc
mov
cmc
pop
cmpl
mov
add
push
add
addb
imul
add
adc
add
push
pop
push
fneni(8087
imul
lcall
mov
add
add
sbb
ret
cwtl
add
bound
add
dec
add
les
addr16
mov
popa
jge
jle
mov
add
add
mov
push
cli
add
outsl
push
leave
insl
jb
mov
bound
test
hlt
cli
fidivrs
gs
xorb
outsb
jne
pop
jg
jmp
aaa
fs
cvtdq2ps
imul
jno
fucomp
jg
rolb
outsl
test
push
add
sub
push
sub
pusha
add
add
dec
inc
jb
ljmp
por
sti
sbb
loop
add
por
jmp
jne
add
arpl
roll
addr16
popa
inc
movsb
arpl
mov
pusha
add
out
inc
imul
or
jmp
mov
pop
fs
jno
push
dec
xchg
xchg
in
outsb
push
xchg
sbbl
inc
adc
add
sbb
popa
jnp
loop
mov
sbb
jbe
in
data16
loope
push
mov
loope
jnp
add
jb
xlat
loope
dec
aad
insb
pop
lret
jnp
add
leave
loope
adc
lret
imul
shlb
push
sub
xchg
jae
xor
adc
add
shll
inc
shrl
out
push
jnp
shlb
repz
inc
fisubl
dec
xor
aam
stos
dec
fcomp
jp
add
mov
rorb
jl
iret
hlt
icebp
rolb
jle,pt
aad
jl
loopne
jge
add
insl
xchg
dec
cmp
jne
in
stos
ficompl
push
fisubrl
jge
mov
add
adc
icebp
sti
add
jge
rcrb
arpl
fstpt
addr16
loopne
imul
mov
dec
dec
add
cld
rcr
dec
mov
mov
push
cld
inc
insb
dec
or
outsb
int3
cmp
cli
ja
mov
fisubrs
fisubl
bound
xor
adc
gs
int3
imul
popa
inc
jmp
add
js
add
stos
jl
xchg
add
mov
add
into
insb
imul
imul
ja
jmp
sarb
es
cmp
adc
or
jl
adc
imul
je
cmp
jl
add
mov
imul
mov
dec
add
cmpsb
outsb
push
add
xor
dec
jb
cmpsb
arpl
pusha
arpl
mov
add
sti
decl
dec
inc
gs
sbb
in
stos
outsb
gs
insl
or
cmp
xchg
dec
inc
gs
jo
xor
jo
xor
sti
call
jae
mov
sti
jmp
inc
jne
mov
inc
jnp
mov
add
add
inc
ret
addr16
jae
dec
mov
insl
in
mov
sahf
adc
test
jb
add
push
or
pop
dec
ret
aam
push
dec
cmp
mov
dec
rol
mov
incl
into
mov
sub
bound
xchg
push
scas
jns
mov
pop
adc
add
and
data16
mov
cmpsl
lret
mov
and
cmpsl
sarb
add
dec
sub
lret
mull
mov
aad
lcall
cmpsb
mov
lret
pusha
int3
scas
dec
bound
add
test
cmp
mov
pop
jb
add
test
add
dec
outsl
js
inc
jae
leave
sub
add
sub
or
mov
bound
sbb
add
sub
fsts
imul
jnp
add
pop
sub
or
or
arpl
out
jae
cmc
loop
add
out
outsl
jo
cmp
in
cli
cmp
gs
sub
mov
xor
and
add
gs
leave
pop
gs
or
in
cli
pop
jns
xchg
xchg
cmpb
fsave
jns
jp
dec
sub
movsl
jbe
gs
mov
jne
mov
jns
cmpsl
stos
cmp
clc
push
push
gs
jno
mov
pop
dec
xchg
push
gs
pop
je
mov
jne
adc
daa
add
add
dec
sub
fs
push
int3
add
mov
dec
and
jo
mov
popf
cli
call
pop
insl
jne
add
mov
add
push
inc
gs
jb
xor
pop
insl
notl
sti
push
mov
popa
xor
data16
jnp
jbe
lods
jae
daa
lods
out
mov
fcoms
iret
ss
jns
push
lods
jae
inc
lods
iret
cmp
push
test
in
insl
xchg
push
test
imul
push
xchg
shlb
scas
hlt
add
inc
arpl
push
push
cmpsl
shrb
mov
jnp
add
jae
mov
jmp
cmp
scas
dec
xor
mov
add
sub
mov
sub
or
mov
pop
inc
out
fdivrs
add
dec
push
scas
fldenv
mov
mov
jbe
mov
insb
adc
mov
jne
mov
lcall
add
enter
into
mov
insl
shlb
jae
cmpsl
in
cmpsl
add
mov
add
add
pusha
jmp
cmpsb
sub
mov
movsb
jmp
dec
test
pop
popa
pop
rcrl
js
outsl
inc
fidivl
sbb
outsb
push
ja
add
sub
or
adc
insb
inc
jmp
or
jnp
or
cwtl
jo
or
pop
outsl
add
imul
outsb
int
add
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
scas
sbb
int3
sbb
int3
mov
aad
push
lock
or
add
pop
ret
cs
push
and
shll
add
mov
dec
xchg
aad
cld
add
mov
dec
cmpb
add
mov
mov
orl
xchg
aad
loopne
lcall
aas
aad
in
xchg
out
inc
decw
dec
clc
lock
inc
adc
call
sub
call
push
lock
decl
dec
cld
mov
dec
add
jb
push
hlt
clc
or
mov
add
loop
inc
jae
dec
hlt
mov
rcll
dec
incl
inc
pop
push
jns
add
lret
dec
add
clc
adc
test
popa
pop
mov
push
mov
stos
aad
in
lock
ds
rcrb
dec
jmp
rolb
bnd
sbb
mov
mov
int3
sbb
int3
add
mov
shr
orl
cli
mov
testb
jl
cli
cmpl
lahf
hlt
ljmp
add
xchg
ljmp
dec
lahf
clc
lret
push
js
push
sub
cli
jno
dec
mov
push
inc
cld
jnp
add
and
push
pop
sarb
xorl
jae
flds
add
push
test
jl
push
int3
cmp
jno
dec
xchg
xlat
add
add
adc
int3
scas
adc
int3
adc
int3
mov
fldln2
mov
mov
inc
xor
xchg
or
repnz
or
adc
int3
inc
adc
int3
aas
adc
int3
scas
fldln2
mov
push
push
incl
cmpl
add
das
adc
int3
inc
adc
int3
aas
adc
int3
scas
fldln2
orl
push
fdivrl
add
mov
jo
jnp
inc
clc
arpl
aas
jnp
inc
clc
sub
mov
mov
xlat
inc
cld
add
push
push
lock
push
xchg
jp
mov
fldln2
push
mov
incb
jnp
add
adc
cld
clc
push
add
add
push
sub
enter
jae
push
cld
insb
pushf
decl
das
push
mov
pusha
adc
jecxz
add
jnp
add
mov
cmpb
adc
int3
mov
xlat
in
mov
pop
xlat
or
jnp
mov
int3
adc
int3
mov
xlat
in
orl
jns
add
jnp
xchg
cs
xchg
iret
out
dec
clc
mov
xlat
inc
or
or
ret
dec
add
jnp
or
jp
dec
cld
add
cmp
fisubrl
lock
mov
fimuls
mov
sar
iret
testl
not
dec
lock
adc
dec
mov
inc
or
xchg
push
add
add
push
clc
lock
adc
ds
xlat
push
or
cmp
add
push
adc
or
push
mov
push
jmp
mov
mov
orl
inc
adc
in
xchg
out
scas
ljmp
add
add
dec
lock
arpl
add
xchg
dec
push
lock
bnd
mov
out
jle
mov
test
dec
add
push
dec
push
mov
push
call
jl
adc
add
cmp
sbb
orl
xacquire
aad
or
adc
add
mov
xlat
inc
hlt
add
call
bnd
mov
add
add
jnp
xchg
int
adc
or
jnp
add
mov
add
jnp
xchg
int
add
xchg
aam
sbb
pop
push
mov
fiaddl
incl
dec
mov
loopne
xorl
sbb
add
xchg
or
lock
push
xchg
mov
lds
add
add
xchg
adc
ja
inc
hlt
lock
out
cmpl
mov
hlt
xchg
mov
out
jle
aad
loopne
push
sti
call
in
cmp
into
int3
scas
shr
orl
push
jns
add
xchg
inc
jnp
inc
clc
push
loop
aas
jnp
inc
clc
sub
cmp
fistpll
jae
inc
cld
add
push
push
add
lock
push
pushf
jns
mov
adc
int3
cs
mov
cmp
jp
inc
jnp
push
add
or
int3
aas
adc
int3
scas
shr
orl
push
test
sbb
lock
mov
iret
add
dec
hlt
lock
mov
rclb
jns
mov
add
testb
add
das
rcl
xchg
rclb
jo
or
roll
nop
push
mov
inc
xchg
rolb
mov
mov
nop
inc
xchg
lret
xchg
sbb
out
das
shlb
mov
push
xchg
cmpsb
adc
int3
das
or
int3
inc
or
int3
aas
or
int3
into
leave
in
orl
ret
inc
add
adc
add
push
add
popl
push
jecxz
in
rol
or
xchg
imulb
leave
dec
clc
sub
adc
dec
popl
mov
jle
push
fstl
inc
jo
jnp
cmp
sub
mov
jmp
leave
or
jns
add
ljmp
add
inc
push
jb
dec
add
add
test
fnstsw
outsl
xchg
add
mov
dec
add
jnp
lret
xchg
jo
jnp
adc
mov
jo
jnp
xchg
jle
popf
out
cli
xorl
inc
add
or
rcr
fisttps
mov
leave
in
mov
inc
aaa
inc
xchg
mov
inc
out
add
nop
push
xchg
jnp
int3
inc
or
int3
aas
or
int3
into
in
orl
inc
push
dec
xchg
add
inc
or
xchg
fimull
orl
add
or
sbb
inc
or
inc
call
jnp
or
imul
lds
repnz
repnz
data16
jnp
push
jmp
add
add
push
lock
xchg
jle
dec
jae
xchg
sub
mov
cli
cmpl
add
jnp
or
jp
inc
hlt
lock
jge
cmp
nop
ljmp
dec
call
scas
sbb
adc
mov
mov
fildl
testl
add
xchg
dec
stos
inc
cmpsl
jle
inc
rol
dec
or
push
push
add
incb
jle
push
mov
cli
xorl
shrb
mov
jmp
push
in
out
cld
test
jle
ja
add
popl
push
push
idiv
pop
into
lds
add
inc
jnp
jne
lock
xor
dec
push
incl
add
cli
jle
arpl
jnp
push
push
data16
jnp
xchg
jge
inc
sbb
dec
xor
fsts
inc
jo
jnp
adc
cmp
xor
xchg
jl
add
xor
addr16
inc
add
sbb
jb
dec
add
fs
push
add
push
mov
xchg
dec
fadds
sbb
add
mov
movl
and
sbb
inc
jnp
ljmp
dec
xchg
int
movsb
jnp
add
adc
push
sbb
inc
fdivrs
mov
inc
out
dec
loopne
inc
push
jb
dec
daa
push
cmpsl
adc
dec
popl
mov
sub
or
dec
popl
push
add
clc
jmp
lock
loop
xchg
inc
jnp
dec
sub
dec
push
jb
dec
jg
mov
inc
add
sub
inc
jnp
mov
push
add
jb
dec
push
call
clc
adc
mov
jl
dec
and
cli
cmpl
out
mov
lods
cmp
call
clc
adc
mov
add
add
add
ret
push
loopne
inc
jo
jnp
inc
sub
ret
or
sub
jmp
xor
dec
add
repnz
pop
jb
dec
lea
jle
inc
loope
xchg
lret
aam
jmp
decl
add
xchg
sahf
or
add
into
int3
aas
or
int3
into
ret
in
mov
jns
int3
add
aas
or
int3
scas
ret
in
push
movsl
jg
cmp
add
jb,pn
dec
xchg
xor
push
pop
mov
ret
in
push
push
xchg
aas
jnp
cmp
call
clc
adc
mov
fiaddl
add
inc
pop
jb
dec
push
dec
rolb
int3
into
leave
in
orl
inc
push
dec
add
jnp
inc
faddl
add
dec
add
xor
testb
dec
add
mov
add
jnp
ret
inc
pop
dec
add
jnp
dec
or
inc
xor
dec
ljmp
pusha
inc
add
pop
push
jbe
jo
jnp
add
jnp
pop
jle
jo
jnp
add
jnp
cmp
sub
ret
add
jnp
add
clc
adc
jb
dec
add
add
add
mov
inc
jnp
xor
dec
xchg
add
jo
jnp
inc
call
mov
or
test
push
inc
add
add
dec
lahf
cmp
popl
jbe
jo
jnp
aas
jnp
bound
cmp
adc
sub
mov
les
dec
jb
dec
sti
adc
add
inc
pusha
inc
add
jne
inc
jnp
dec
jb
dec
push
call
clc
or
mov
fiadds
aad
aam
xorl
lahf
xor
lea
mov
fimuls
jnp
xor
call
clc
or
mov
fimuls
cld
pusha
jns
jae
movl
out
sti
add
jle
jae
inc
jb
dec
xchg
add
cmp
add
dec
jb
dec
incl
xchg
js
push
sar
clc
pushl
testb
repnz
push
xchg
lds
mov
add
repnz
dec
loopne
inc
inc
jb
dec
mov
out
mov
dec
out
add
cmpl
mov
movl
or
test
add
jns
mov
js
cli
mov
dec
clc
cli
or
add
xchg
js
cli
xor
xor
inc
rol
or
or
sub
dec
lea
mov
jo
jnp
leave
mov
jo
jnp
leave
mov
jo
jnp
dec
testl
cli
mov
cli
out
add
add
xchg
rorl
jnp
sub
dec
push
call
clc
or
mov
jo
jnp
ljmp
pop
push
xor
out
mov
jo
jnp
lds
adc
jb
dec
add
adc
inc
xchg
dec
ljmp
jp
inc
jnp
mov
pop
mov
dec
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
