sbb
add
add
dec
or
pop
rcrb
push
mov
movsb
mov
push
xlat
jae
out
mov
xor
in
loop
loop
ss
leave
fcomp
in
sub
int3
xor
pushl
dec
cs
mov
rorl
jmp
out
push
or
dec
mov
cmpl
stos
sbb
xor
ja
cmp
stos
lea
je
dec
mov
stos
fstl
inc
ljmp
int3
xchg
xchg
mov
roll
cmc
xor
ss
lds
inc
sahf
sahf
cmp
pushf
sub
scas
cmp
inc
mov
mov
iret
adc
cmc
popf
inc
push
mov
loop
adc
rcrl
mov
gs
and
xor
outsl
addr16
pop
sub
cwtl
xor
das
add
faddl
jmp
adc
dec
dec
sbb
xor
jno
inc
lret
gs
cmp
push
sbb
jns
nop
mov
push
push
repnz
jbe
push
adc
mov
inc
mov
pop
mov
aam
lret
mov
addb
jno
inc
mov
insl
lds
lods
cmpsl
jecxz
mov
mov
out
fwait
stos
cwtl
popf
clc
jg
roll
std
mov
mov
add
je
pop
ss
fidivl
out
outsl
call
les
enter
int
add
insl
stos
fstps
inc
dec
cmp
push
mov
cmpsb
dec
lret
adc
fs
and
adc
xchg
stos
call
pusha
aaa
mov
pop
pop
insl
in
in
ret
xor
jns
sbb
out
adc
cmp
rcrl
lods
xchg
push
cwtl
les
mov
and
pusha
mov
stos
cli
jp
jge
xor
lret
push
jns
add
das
xchg
pop
sub
fsubl
adc
aas
sub
inc
mov
xor
xchg
xchg
out
nop
xchg
jmp
ja
cmc
mov
ljmp
mov
adc
lea
adc
popf
and
inc
mov
imul
out
mov
pop
cmp
stc
pop
and
xchg
scas
mov
ja
push
jl
dec
call
add
lock
popf
mov
insb
jae
push
or
sti
mov
push
js
dec
push
pop
and
cmp
add
sti
xchg
add
xchg
xchg
les
xchg
pop
push
lret
jg
dec
dec
nop
pusha
push
out
jae
addr16
ret
movsb
sbb
xchg
sub
rcrb
jle
cmp
sub
mov
rorb
into
mov
outsb
mov
fwait
jg
popf
dec
je
popa
out
jge
or
lods
pusha
out
ja
xor
ljmp
outsl
mov
mov
sbb
insb
movsb
ret
xchg
fidivrl
add
lret
adc
push
add
inc
mov
or
ss
ror
xchg
add
xlat
sbb
enter
testl
xchg
into
cwtl
cmp
insb
xchg
in
fs
mov
mov
repz
in
popf
arpl
jmp
mov
or
dec
aad
push
mov
mov
xchg
mov
popa
dec
out
inc
push
lret
lds
mov
adc
loop
cltd
int
cmp
sbb
jno
gs
jecxz
pusha
push
sub
loopne
and
fldcw
add
std
popa
sbb
or
pop
and
mov
xor
push
scas
mov
lret
cmc
loop
push
mov
cmp
mov
das
sbb
test
rol
ljmp
ja
sub
cmp
and
add
adc
push
push
rcrb
dec
nop
push
sbb
decl
cmpsl
ret
xor
mov
icebp
cltd
cmp
sar
xor
cmp
in
test
sbb
test
repz
cmp
movsl
jnp
and
cmc
mov
jb
icebp
loopne
mov
rcll
sbb
xchg
mov
or
fs
add
clc
daa
stc
addb
bound
movsb
movsl
fsubrs
int3
pop
jae
femms
mov
adc
popf
push
decb
jne
mov
ret
sbb
mov
aaa
inc
popf
inc
cmpsb
movsl
jbe
cmp
es
xor
jae
test
loop
mov
pop
push
cltd
roll
mov
decl
add
adc
ljmp
jp
dec
icebp
mov
add
hlt
push
mov
in
lret
imul
cmp
gs
cmpsb
mov
inc
cmpsb
jnp
sub
mov
adc
loope
jge
leave
adc
clc
outsl
imul
xor
jns
imul
jmp
xchg
lret
pushf
xchg
cltd
ror
or
lcall
mov
pop
popa
sbb
pop
addr16
out
es
std
sbb
sub
stc
mov
push
and
sub
inc
pop
dec
push
mov
jge
xrelease
inc
aaa
xor
repz
jbe
mov
in
sub
sahf
je
sbb
addr16
pop
popf
loop
nop
js
adc
ror
cmc
jne
ret
xor
jp
push
pop
scas
out
xchg
pushaw
insb
xchg
in
dec
sbbb
decb
xor
dec
sub
dec
lahf
mov
cmp
fnstcw
sbb
jns
and
enter
cltd
sub
popl
repz
les
or
movsl
fiaddl
pop
fstps
std
std
cmpsl
aaa
pop
ss
movl
popa
jbe
cltd
loopne
jl
shrb
jmp
out
out
jp
xlat
mov
sbb
add
push
xlat
sbb
movsl
push
repz
sbb
jo
hlt
es
clc
dec
inc
test
iret
xorl
pop
test
test
scas
and
es
inc
xchg
push
test
xchg
jmp
ret
push
int
jl
mov
sbb
jecxz
push
cmp
cmpsl
stc
mov
in
xchg
shl
or
push
idivl
cmp
fwait
xchg
lret
mov
push
push
push
fidivl
outsb
iret
into
push
or
leave
shlb
mov
lea
mov
into
jb
and
arpl
aaa
cmp
lea
dec
out
lret
repnz
loope
xchg
mov
inc
mov
sub
inc
inc
in
inc
or
enter
not
sbb
xor
push
arpl
mov
pop
jns
inc
outsl
test
mov
xorl
and
pop
mov
push
dec
dec
sbb
int3
push
adc
inc
adcb
cld
lods
mov
adc
pop
and
fisubrl
jg
jecxz
bound
inc
cmp
pop
in
insb
push
aad
adc
decl
sti
cmp
addr16
push
cmp
xchg
mov
sbb
sub
loop
jl
dec
icebp
neg
mov
divb
mov
jmp
cmp
movsl
xchg
mov
and
add
jbe
out
int
dec
gs
sbb
inc
addl
cwtl
sub
push
test
into
jg
adc
aam
fmuls
out
sub
in
pop
xchg
stc
es
inc
adc
pop
inc
sbb
jle
cltd
jae
mov
shlb
in
addr16
dec
or
adc
mov
sub
cmp
orl
js
and
jnp
inc
mov
sbb
aaa
sarl
mov
scas
mov
xchg
lods
dec
mov
push
inc
dec
pusha
fwait
or
jo
lahf
sbb
mov
leave
test
pop
clc
adc
push
nop
popf
scas
jnp
arpl
inc
mov
cmp
xchg
mov
pushf
push
int
hlt
outsb
cld
cwtl
and
shll
clc
negl
inc
je
testb
mulb
cli
inc
lock
pop
and
sub
lods
jb
dec
js
ja
leave
test
adc
add
sbb
xchg
cwtl
test
pushf
ja
cmp
cld
leave
inc
out
stos
pop
mov
jle
sub
outsl
cmp
inc
mov
js
lret
xor
cmc
jns
loope
xor
mov
out
mov
cmp
or
popa
or
sahf
or
mov
mov
sbb
push
sub
cmp
into
imul
dec
jbe
jmp
mov
out
inc
mov
dec
int
fs
mov
aas
das
lds
mov
fdivs
inc
push
mov
push
push
xchg
pop
fcomi
std
mov
jbe
inc
hlt
lcall
aaa
lock
or
adc
test
arpl
cli
popa
cmpsb
roll
aad
xor
push
rolb
ret
or
push
and
inc
push
pop
mov
jmp
and
rcrl
sbb
lock
bound
das
lret
jnp
pop
hlt
cmpl
clc
inc
movsl
cmpsb
and
mov
jmp
push
test
xchg
sub
in
push
push
out
sbb
test
lods
arpl
dec
das
sbb
flds
jns
jmp
shlb
loope
inc
pop
jg
in
nop
pop
mov
aam
pop
divb
ret
jg
jb
aaa
scas
inc
cwtl
mov
adc
sub
push
clc
ret
jns
iret
jecxz
loope
pop
lret
fildl
sbb
mov
jg
add
push
sub
pop
xor
push
cmpl
loopne
jmp
jbe
inc
test
cmp
cmp
hlt
push
inc
push
push
test
push
adcl
es
cmpsl
jl
jb
jo
and
pushf
aaa
icebp
xchg
pushf
scas
loop
inc
mov
xchg
mov
std
das
hlt
inc
xchg
imul
repz
cmp
pop
jns
mov
stc
lods
mov
pop
mov
pop
xor
cmpsl
cmp
test
test
cmp
stc
xchg
test
xor
pop
xor
lahf
popa
sub
mov
clc
xor
pop
mov
mov
jge
push
repz
shll
call
int3
adc
sub
cmc
pop
movsl
sub
popf
dec
push
cmc
cmp
ss
stos
dec
popf
and
mov
adc
fs
mov
in
loopne
or
repz
cli
ret
mov
jno
cmpsb
sar
ret
js
test
sbbb
and
or
push
fisubrs
or
pop
movsl
jg
xor
xor
jne
aas
and
fdivs
repnz
jle
jnp
mov
fmuls
lock
pop
call
dec
xor
leave
lods
fiadds
dec
jo
int3
or
jbe
clc
int3
adcl
or
ficompl
fldcw
mov
xchg
lods
jmp
adc
sub
lods
and
xor
mov
ret
into
andnps
ja
shrb
rdmsr
adcb
xchg
pop
movsw
cli
dec
cli
mov
arpl
jle
psubusw
jne
outsb
je
or
ljmp
stos
sahf
mulb
sub
sbb
adc
negb
cmpb
ljmp
ffree
pusha
mov
sbb
outsl
imul
hlt
adc
dec
and
int3
imul
pop
cwtl
insl
pop
or
add
mov
mov
icebp
xchg
dec
mov
in
sbb
mov
shl
cmp
das
test
push
inc
jecxz
ja
in
lock
dec
sbb
adc
icebp
xlat
stc
aad
xchg
mov
and
stos
dec
mov
pop
fmuls
xchg
adc
imul
mov
or
cs
cmpl
cmp
ljmp
add
lds
mov
call
les
aad
jmp
push
ret
or
lcall
mov
in
or
jl
lret
cs
arpl
sbb
in
bound
pushf
push
and
fcos
fmull
fistps
jbe
jns
fisttpll
xor
mov
mov
rcl
loop
stos
bound
mov
push
mov
sub
pop
mov
fsts
push
sbb
xor
rdpmc
sub
pusha
inc
loopne
sbb
mov
scas
out
aam
ss
push
jg
push
sbb
addr16
pop
xlat
repnz
popa
gs
leave
lock
inc
xor
test
sbb
adc
jle
mov
cmp
adc
lcall
mov
inc
xor
popf
xchg
dec
pop
xor
sub
add
seto
jne
sub
sarb
mov
sub
scas
mov
je
lods
xchg
pop
hlt
cmp
sub
imul
sub
inc
xchg
test
ficoml
insb
cmp
inc
aad
out
lods
xor
test
push
lret
pop
sti
mov
pop
jo
push
lds
adc
bound
insb
les
dec
mov
shl
or
aad
jns
or
push
inc
jns
shll
paddq
int3
lcall
inc
jmp
nop
xor
insb
inc
mov
repz
inc
push
pop
sbb
jecxz
jle
xor
mov
xchg
fidivrs
dec
jns
xchg
js
and
jno
dec
stos
xchg
ss
mov
adc
scas
dec
or
jbe
scas
jp
xor
sbb
mov
dec
sub
cmc
andb
pop
push
dec
jg
movsb
mov
lret
cmp
nop
xor
aas
inc
jg
xchg
push
shl
clc
push
cmp
dec
jne
add
push
fwait
jle
push
mov
inc
pop
pop
and
stos
cmpb
sti
inc
dec
cmpsl
enter
fsubrl
push
mov
push
aaa
aad
push
mov
push
out
lods
clc
jb
xchg
and
jecxz
xor
int
sysenter
cmp
mov
call
in
in
icebp
mov
xchg
je
and
movsl
cmp
push
xchg
scas
in
jge
addl
outsl
lcall
insb
mov
adc
mov
adc
sub
js
or
mov
jp
jg
jno
mov
cmc
pusha
int
aaa
popa
mov
push
lods
dec
cwtl
addr16
push
int3
cmpsb
mov
adcb
mov
shr
ret
sbb
xchg
lret
push
and
sub
aas
mov
or
jl
xchg
minps
inc
or
sbb
dec
insl
jl
adcl
inc
incb
test
jl
shll
cmc
pop
test
inc
loopne
mov
das
pop
cmp
sub
mov
roll
mov
xrelease
sbb
xchg
add
fsubr
movsb
xchg
cs
imul
and
loope
pop
sub
cmp
out
sti
hlt
inc
ljmp
roll
int
mov
adc
fldenv
mov
add
sbb
test
and
push
xchg
stos
sub
xchg
cli
sub
jae
repnz
xor
mov
into
test
int
adc
push
lods
mov
movsl
add
int
push
movsb
xchg
cltd
dec
pop
xor
int3
push
popa
bound
pop
adc
sbb
int
jne
push
mov
jl
mov
dec
push
stc
shlb
and
sub
lds
loop
cmp
xlat
fmull
xchg
cmp
cmp
push
popf
dec
mov
pop
push
push
insl
adc
add
roll
sbb
sahf
dec
xchg
int3
xor
or
inc
lahf
mov
int
sub
test
and
or
mov
sahf
pop
stos
ss
fsubs
or
xor
xorb
test
loopne
cltd
dec
push
js
ljmp
or
out
mov
sub
shlb
stos
pop
xor
push
cmovnp
lea
in
cmc
std
mov
nop
jb
call
sti
mov
xchg
xchg
cli
outsb
hlt
add
xor
icebp
sub
fsubl
dec
mov
push
jb
ja,pn
dec
or
mov
push
popf
arpl
push
inc
std
xchg
mov
into
push
inc
cmpsb
xchg
add
inc
fwait
imul
pop
and
in
push
test
mov
orb
out
pop
push
sarl
xchg
ds
out
les
idivl
mov
and
dec
push
push
popf
mov
mov
add
mov
fnstenv
fld
dec
cwtl
leave
push
inc
aaa
test
imul
mov
sub
xor
lods
dec
aam
nop
add
push
push
lcall
adc
sub
push
xor
add
loopnew
lods
scas
xor
dec
cmc
dec
mov
sub
lods
xchg
les
fistps
iret
sbb
mov
jp
cmc
ds
mov
jmp
loop
add
jb
adc
nop
lcall
sbb
fmuls
mov
int3
mov
push
xlat
xor
mov
pop
inc
jg
adc
push
loop
adc
pop
cmp
mov
jmp
pop
sbb
insl
call
pop
loop
in
hlt
mov
mov
and
adc
lret
fmuls
mov
sti
mov
mov
cmc
mov
cmp
aad
lods
mov
mov
xlat
jb
jmp
sub
ds
push
pusha
xor
xchg
dec
sbb
shr
mov
jbe
xorb
adc
mov
adc
clc
sti
pop
stc
jns
adc
loope
sub
fcomi
cmp
ljmp
rorb
loope
dec
or
fbld
sbbb
gs
scas
inc
int
into
mov
fistps
mov
rcr
jbe
push
pop
cld
jbe
add
imul
mov
cmc
clc
adc
cwtl
cwtl
xchg
lahf
arpl
or
in
xchg
xchg
sbbl
lcall
adc
inc
movsl
cmp
xor
jmp
pop
mov
test
mov
arpl
and
lds
in
ja
add
das
inc
rcrb
fstps
pop
xor
add
test
mov
inc
out
aas
cmp
out
or
inc
pushf
fs
pop
cmp
sti
clc
lods
not
lock
xchg
fwait
jg
call
mov
aad
xor
mov
mov
out
inc
pop
lcall
pop
clc
enter
push
mov
nop
js
mov
mov
test
dec
sete
mov
stc
cmp
inc
sub
hlt
lea
pop
xlat
mov
xchg
mov
mov
ss
ljmp
test
pop
arpl
imul
std
andb
aaa
mov
lahf
mov
jl
xor
mov
insl
mov
lret
cmpsb
jo
jl
mov
sar
jl
push
pushf
in
int3
fwait
jb
dec
cmp
pop
xor
pusha
lret
cltd
rorb
sub
mov
daa
sarb
pop
sub
xor
xchg
cmp
cmp
adc
push
es
icebp
ret
lds
insl
aaa
aad
repz
or
jmp
ja
mov
mov
insb
and
rcrb
pop
pop
sub
pop
cmpsb
je
aad
add
add
stos
out
test
pop
dec
popf
mov
inc
out
push
lea
and
aad
out
fwait
mov
mov
mov
dec
push
insl
pop
sarb
mov
mov
pop
lods
or
sub
fucom
dec
jle
dec
nop
xchg
test
inc
xlat
mov
and
movsb
aas
push
dec
mov
cmpsl
sbb
fisubrl
jae
test
inc
mov
movsb
mov
jp
movsb
pop
xchg
sahf
mov
cltd
sub
inc
cmp
bnd
cmp
jp
pop
insl
fstl
mov
je
lret
cld
cwtl
pop
js
int
call
mov
push
lcall
sub
gs
sbb
push
orl
aas
ret
ss
das
pushf
add
mov
fstpt
add
aam
js
pop
mov
jg
mov
mov
fists
int3
in
ja
adc
xchg
dec
leave
pusha
or
test
lock
mov
out
ljmp
mov
pop
jl
popf
psubd
add
ljmp
and
jl
inc
sarb
test
xor
xor
adc
push
fists
int
repz
ss
inc
movsb
mov
adc
or
add
or
aam
imul
inc
decl
shrb
sahf
insb
popa
sbb
cmc
and
and
inc
insl
mov
leave
mov
icebp
cld
adcb
jns
pusha
sahf
push
nop
imul
xor
push
cld
data16
dec
pop
push
mov
mov
je,pt
dec
scas
dec
mov
sbb
in
fdivrl
and
inc
adc
mov
cli
clc
or
popa
sub
out
mov
mov
inc
adc
pop
stos
dec
ds
inc
xchg
or
test
leave
cmp
rcll
fsubrs
into
movsb
scas
in
ljmp
ficoml
loop
mov
leave
pop
aas
loopne
jb
xchg
pop
cli
cltd
imul
leave
mov
mov
aam
rcrb
add
dec
pusha
and
xchg
or
les
xchg
popl
jne
call
sbb
test
repnz
mov
mov
cs
addl
sarl
sbb
mov
xchg
std
push
lods
mov
mov
mov
je
jb
jbe
scas
push
pop
xchg
cltd
dec
jns
fldenv
pop
movsl
jo
inc
dec
mov
das
pop
sahf
cmp
loopne
sbb
mov
xchg
mov
mov
mov
aad
mov
das
rcrl
mov
out
pop
mov
arpl
bound
cltd
mov
add
int3
add
inc
mov
out
sbb
std
repnz
imul
push
lret
push
dec
sbb
or
in
mov
rcl
add
mov
sbb
xchg
insb
mov
push
push
mov
mov
jae
push
xor
jge
mov
jne
push
jb
adc
push
mov
pop
push
imul
push
sub
aaa
hlt
imul
int
ss
ret
dec
cmp
mov
push
fdivl
adc
fs
fistpl
pop
out
ds
and
and
fnstenv
iret
xchg
iret
adc
inc
pushf
repz
xor
adc
inc
imul
push
insl
int
adc
inc
xchg
int3
xor
jg
js
mov
in
loope
jb
jb
iret
pop
xor
xor
pop
or
lcall
mov
mov
cmpsl
or
out
mov
das
sbb
push
pop
out
insl
xor
cmp
mov
aaa
rorb
pushf
sbb
lock
dec
popw
dec
pop
cmp
inc
js
mov
inc
rcrb
pop
adc
or
mov
push
lahf
and
addr16
xchg
adc
rcl
in
ret
push
mov
pop
mulw
push
pop
or
mov
lea
das
clc
leave
mov
orb
cmpsb
push
xchg
mov
insb
push
jns
sub
popf
leave
mov
sub
cmpsl
push
rorb
stc
pop
adc
dec
mov
dec
pop
iret
sub
outsb
test
std
jle
add
jg
btr
cmp
inc
lods
lcall
lcall
lahf
mov
pop
test
aad
mov
clc
push
ret
hlt
and
pop
enter
shll
or
mov
in
cltd
cmp
cmp
divb
or
sub
je
fcmovbe
outsb
mov
bound
xor
cs
sub
rorb
sub
orb
fwait
jb
inc
mov
fimull
and
hlt
inc
push
mov
enter
sbb
mov
fldenv
xor
movsl
sub
pushf
inc
ds
mov
jecxz
je
xor
dec
ficompl
test
pop
jne
mov
int
jb
mov
repnz
in
jae
fs
add
mov
movsb
int
mov
sub
mov
or
sbb
test
jae
pop
int3
add
aaa
adc
mov
cmpb
imul
xchg
es
jae
sub
iret
jne
imul
outsl
and
and
loopne
mov
aad
mov
adc
lds
ret
fidivrl
pop
dec
xlat
xchg
pop
cmp
fdivrl
push
xchg
test
paddw
push
mov
and
adc
ss
lret
push
add
xor
inc
test
out
xlat
push
lods
sbb
fs
out
xchg
je
push
imul
ficompl
adc
xor
popf
xor
pushf
repnz
out
mov
lock
mov
sbb
and
push
mov
inc
mov
adc
and
cmp
mov
dec
mov
imulb
cs
mov
lret
in
jno
or
ret
pop
inc
pop
ja
mov
ficoms
scas
mov
pop
inc
in
and
xchg
aam
out
and
xchg
lods
std
loope
cmp
pusha
mov
jmp
dec
mov
int3
mov
or
sub
mov
mov
lds
xor
mov
mov
mov
add
fwait
pop
add
fstps
loop
lea
cmp
aaa
sub
jnp
adc
lds
sti
mov
jmp
fs
push
stos
mov
dec
jb
das
cli
andl
xchg
test
adc
cmpsb
push
push
adc
add
sub
xchg
push
push
js
and
shlb
adc
mov
arpl
jp
popl
cs
jecxz
loopne
lahf
stos
push
ss
jne
popf
sti
sub
xor
xchg
repnz
xor
mov
clc
push
xor
add
out
push
scas
call
push
adc
jnp
lea
ret
add
clc
and
mov
jns
ret
jl
test
in
add
js
jae
add
xchg
mov
push
lret
movsl
add
xchg
lods
dec
mov
xchg
lock
outsb
mov
pop
push
sti
lret
or
cmp
insl
jecxz
mov
adc
fs
pop
popf
pop
scas
clc
nop
sub
inc
xor
hlt
int
fdivrs
push
cmpsb
aad
insl
adc
std
nop
mov
les
fsubl
mov
repnz
sbb
push
cmp
cltd
xchg
adc
inc
sahf
dec
or
cmpsl
adc
mov
fucomp
mov
ret
xchg
mov
mov
divl
fidivrl
fwait
icebp
in
loope
xchg
lahf
xchg
xchg
add
cli
pop
push
iret
jecxz
xchg
mov
cmpsb
stos
bound
ds
in
mov
fmuls
xor
repnz
lods
sahf
hlt
enter
cmp
dec
push
cmpb
jmp
popa
inc
lret
gs
hlt
jo
rcr
mov
movsb
js
jle
lods
mov
fidivrl
mov
push
sahf
mov
pop
or
pusha
lods
stos
sbb
icebp
lret
push
push
push
mov
and
ret
enter
mov
xor
or
or
or
xor
lea
sub
call
adc
or
fsubl
push
hlt
and
adc
push
and
pop
adc
cmp
mov
testb
xchg
jp
push
xchg
mov
xchg
shrl
sub
pop
add
jmp
sahf
ljmp
iret
adc
pop
mul
mov
push
testb
mov
xorl
xchg
mov
mov
mov
rcrb
shlb
push
and
push
imul
xchg
pop
rcrb
mov
cmp
stos
cmpsl
int3
ds
imul
ja
scas
lods
iret
dec
jecxz
jbe
pushf
push
enter
sub
dec
jae
pop
loop
cmp
push
sbbl
jl
cmp
test
inc
in
out
aam
jmp
push
jmp
add
jecxz
pop
and
rorl
push
aam
cmp
lock
dec
inc
lret
inc
cmc
out
jo
mov
and
xlat
mov
in
icebp
xor
nop
mov
into
dec
pop
lods
stos
or
addr16
or
jbe
xchg
jge
cmpsl
dec
fcmovnb
cwtl
jbe
stos
test
jl
dec
pop
jbe
into
out
jl
cwtl
pop
fldenv
jns
sub
call
sub
jne
add
dec
push
cmp
sarb
ljmp
lret
push
add
lcall
add
jnp
shr
xor
or
jmp
push
inc
or
ds
and
or
push
lea
cmp
adc
cli
jno
js
jbe
jl
xchg
cmp
lcall
jns
pop
or
or
dec
mov
push
xor
jb
dec
arpl
rcr
and
push
jp
in
aad
iret
mov
lds
mov
es
mov
pop
add
or
cmp
jle
sub
xlat
pop
cwtl
bound
aaa
out
je
pop
lods
mov
xchg
sarb
and
ljmp
lahf
push
outsb
sbb
mov
loope
adc
aad
lahf
xlat
stos
mov
sub
lods
or
xor
push
fxam
sbb
or
mov
testl
add
rolb
mov
fwait
movsl
or
fldenv
add
ret
iret
repz
adc
jns
sbb
in
add
adc
ss
inc
xchg
sub
test
fistps
shr
push
jo
mov
inc
inc
mov
stos
adcl
ljmp
pop
mov
pushf
pop
stos
gs
sub
cld
inc
sub
pop
adc
xor
shlb
sub
sub
xor
xor
scas
dec
push
insl
insl
adc
mov
add
xchg
or
popf
mov
std
mov
bound
jge
mov
jae
lret
loope
sahf
jmp
aad
mov
push
push
xchg
test
cmc
mov
adc
adc
loope
mov
in
mov
es
lcall
push
and
ljmp
aad
in
push
enter
lret
pop
aaa
out
mov
dec
adc
pusha
lods
pushf
mov
pusha
xor
lret
mov
inc
mov
jmp
test
sarl
scas
mov
ret
pop
jecxz
lea
pusha
and
mov
imul
push
fwait
insb
in
loopne
dec
fwait
fwait
and
or
clc
out
in
mov
jmp
les
ljmp
sub
dec
adc
pushf
jnp
stos
aad
jmp
pop
adc
aas
pop
cld
mov
insl
mov
inc
mov
mov
sbb
cmp
jp
push
push
sbb
iret
popa
pop
rolb
pop
mov
ret
jo
and
mov
cmp
push
sub
mov
adc
push
sbb
mov
ds
sbb
mov
dec
les
aas
xor
inc
xchg
sub
leave
adc
sub
inc
mov
and
xlat
test
xchg
in
fstpt
dec
pop
idivl
das
outsl
jge
mov
pop
imull
insl
stos
in
cmp
jecxz
xor
mov
setp
das
sahf
dec
or
sbb
sub
add
out
mov
push
xchg
xor
cli
bswap
mov
nop
cmpl
clc
mov
jmp
hlt
mov
cmp
ja
inc
fistl
fwait
pop
cmp
xor
loop
incl
test
mov
add
movsl
inc
in
fistpll
ljmp
jb
jg
mov
push
jbe
push
pop
rorb
adc
outsl
scas
mov
dec
lret
nop
xor
jecxz
sub
mov
cmp
subl
mov
or
jmp
jge
imul
xchg
sub
rorl
xchg
lea
mov
xchg
adc
sbb
inc
pusha
adcl
in
in
pop
clc
dec
xchg
push
dec
lret
cmpsl
andb
rcr
ficompl
out
adc
test
sub
ret
out
push
xchg
mov
dec
and
pop
aad
test
and
sti
fiadds
push
mov
mov
js
mov
and
inc
aas
test
adc
scas
add
xchg
adc
mov
add
xchg
test
insb
cmp
jnp
in
inc
in
or
add
pop
cwtl
rcrl
fildl
and
pop
xor
add
aam
hlt
adc
cmp
xchg
scas
jae
movsb
mov
adcl
xor
dec
repnz
loope
fwait
inc
xchg
xchg
or
adc
xchg
int3
or
hlt
pop
jle
push
out
addl
cwtl
push
pop
out
inc
sub
xchg
aam
and
mov
mov
jb
repnz
and
xchg
lcall
pop
jne
into
cmpsb
push
sbb
insb
lods
sbb
pop
arpl
sub
push
xor
fnsave
push
or
push
loope
pop
add
inc
pop
push
popf
xchg
sarl
lret
jnp
pop
pop
filds
insl
pop
outsb
or
loopne
add
push
test
or
dec
repz
add
ja
xchg
fsubrs
out
add
sbb
inc
cmpb
popf
pop
mov
adc
xlat
mov
push
sbb
pop
out
push
in
push
sbb
fwait
or
inc
adc
sar
movb
xchg
aam
sub
insb
lcall
ss
and
lahf
dec
cld
test
cltd
movsb
lods
jns
mov
mov
adc
ret
push
into
rcrb
arpl
mov
add
test
dec
or
jge
xchg
lahf
xchg
xchg
dec
test
cld
xchg
pop
mov
adc
hlt
enter
rclb
call
lret
fdivp
aas
shrb
mov
or
out
cmp
ljmp
adc
jno
call
in
sbb
loopne
xchg
pop
call
sbb
ljmp
mull
lds
jg
push
pop
hlt
jmp
imul
mov
jne
incb
in
ja
out
mov
mov
mov
ret
dec
bound
rorb
movsl
clc
mov
lock
push
cld
testb
cmpsl
xchg
jno
ljmp
std
test
movsb
stos
test
push
popf
sub
sbb
pop
enter
lea
or
mov
jnp
inc
inc
fiadds
repnz
data16
adc
mov
mov
push
ret
insb
mov
iret
movsb
idiv
fistl
mov
push
movsl
cmpsl
add
pusha
sbb
mov
fs
fdiv
dec
push
jns
and
ficoms
ret
sarb
add
lods
mov
cmpsb
movntq
cld
or
mov
jo
data16
cmpsb
push
mov
xor
jno
faddp
pop
jb
ljmp
push
mov
pop
in
test
decl
imul
cmp
push
adc
int
mov
mov
imul
adc
dec
xchg
adc
inc
jecxz
add
mov
out
push
inc
in
enter
mov
or
and
data16
sahf
cmp
fisttps
sbb
xlat
outsb
fcmovne
shl
push
xchg
repz
pushf
or
mov
cmpl
call
mov
rol
cmp
sbb
push
mov
lods
inc
pop
adc
mov
adc
sarl
mov
cmp
imul
inc
int
push
stos
ret
cli
fldt
xchg
or
shlb
mov
popa
dec
inc
fisubrs
mov
lahf
repnz
lds
fwait
lock
int
and
das
and
mov
sahf
dec
mov
fs
daa
pop
xlat
jo
pushf
ja
pushf
icebp
std
push
imul
mov
xchg
pop
adc
xor
faddl
lock
jmp
xchg
xor
jo
test
fcoms
mov
and
pop
int
sbb
ljmp
cmpsb
jmp
push
scas
dec
imul
es
dec
jmp
fcmovnbe
clc
or
jne
adc
ret
imul
sbb
icebp
int3
mov
add
ds
mov
push
imul
cmp
imul
mov
cmpsl
stos
subl
icebp
es
into
pop
lret
push
jno
int
stos
popa
mov
mov
mul
movsl
lods
bound
push
pop
outsb
in
out
xchg
sub
cmp
xor
adcb
enter
pop
orb
es
xchg
test
pop
fistpll
outsb
subb
pop
lods
mov
or
mov
pop
shlb
cmp
jno
aas
cwtl
testl
sbb
jne
cmp
lahf
dec
mov
and
test
movb
pop
fwait
mov
bswap
adc
sub
mov
out
pop
mov
sub
call
push
push
add
cs
ljmp
add
mov
out
jne
stos
scas
lods
add
aam
movlps
pop
mov
mov
mov
push
out
push
nop
iret
jl
pop
mov
xchg
push
clc
add
insb
adc
fwait
xchg
push
adcb
fldl
aam
lret
je
add
subb
cmp
add
add
mov
fmull
mov
dec
out
pop
lret
cmp
push
sbbb
inc
cmp
stos
ret
outsl
call
test
jnp
addl
dec
arpl
cmp
mov
jmp
enter
dec
imul
xor
cs
xor
out
xchg
lret
ljmp
fldcw
ret
popa
mov
cmp
mov
and
sahf
mov
mov
mov
jmp
adc
sub
mov
jecxz
sbb
push
std
roll
orl
aas
jg
pop
jg
jge
js
xlat
xor
lea
and
and
mov
jmp
aad
in
push
movsb
jns
sbb
sub
jnp
sbb
lcall
jmp
mov
xchg
std
sub
cmp
pop
add
dec
dec
and
arpl
adc
lds
push
mov
xlat
jmp
sti
sbb
mov
push
or
pop
mov
push
jp
mov
out
sarb
nop
out
jg
loope
cmpsl
dec
mov
pop
xor
mov
stc
aam
jne
iret
inc
xlat
leave
jne
jb
jmp
sbb
jp
dec
data16
sahf
cmpsl
dec
xor
add
cmp
das
rcrl
fidivs
adc
std
test
xchg
or
adc
pop
or
add
xchg
adc
faddl
shl
xchg
mov
pop
ror
aam
loope
sbb
jecxz
push
sbb
sbb
pop
hlt
xchg
js
pop
push
shll
repz
cli
popl
not
mov
mov
xchg
mov
inc
xchg
addr16
sbb
and
push
es
cmpsb
int
movsb
testb
lcall
imul
cli
arpl
adc
jmp
jbe
mov
js
loope
mov
jne
stos
add
stos
add
xlat
movsl
lods
jbe
in
push
aad
loopne
xchg
sub
xchg
outsl
inc
pop
lea
fs
icebp
mov
inc
setno
jge
nop
daa
shlb
sub
fdivs
inc
push
incb
fsubrl
fimuls
mov
adc
mov
inc
ret
sahf
sahf
inc
lods
rclb
jge
arpl
enter
ret
fadds
dec
test
outsb
das
cmpsb
and
xchg
lods
pop
fcoml
sahf
mov
lahf
ss
daa
adc
pop
cwtl
ret
mov
ret
push
hlt
das
cld
mov
mov
pop
push
test
mov
sub
mov
icebp
sbb
jge
popf
cwtl
cmp
and
dec
xchg
in
call
mov
sub
lock
lret
mov
sub
insl
fisubl
std
xchg
ja
nop
packssdw
cmp
pop
fidivl
int
jns
xchg
clc
ffreep
mov
sub
adc
adc
das
mov
fsubrs
jg
call
scas
sbb
cld
jbe
insb
sbb
pop
fdivrs
arpl
sbb
dec
pushf
push
ficompl
dec
stc
pop
lret
clc
incb
cmp
jmp
mov
andl
push
sub
int3
mov
jo
mov
push
jbe
mov
push
leave
inc
adc
lock
cmc
stc
arpl
scas
adc
sub
push
jno
das
insb
xor
cmp
movsb
test
loop
or
and
jp
jns
imul
pop
cmp
in
ljmp
mov
xchg
adc
inc
or
jecxz
mov
mov
mov
push
shrb
xor
pop
pop
adc
and
xchg
sbb
adc
sahf
xchg
sahf
fisttpll
add
mov
movsb
pop
out
adc
decl
jbe
daa
xorb
pop
test
loopne
push
movsl
push
mov
aad
insb
sahf
lds
jns
mov
add
sub
xchg
test
push
xor
xor
ss
jae
aaa
inc
nop
xchg
jg
imul
insl
pop
jmp
icebp
push
push
jge
mov
pop
cmp
xor
lret
mov
out
into
stc
adc
ja
cmc
xchg
mov
mov
dec
scas
sti
pushf
shrl
dec
out
pop
testl
mov
pop
addr16
sbbl
pop
inc
clc
insl
pop
jno
mov
call
imul
daa
dec
sarl
fdivrs
cmp
add
add
fbld
jnp
and
mov
je
mov
fmulp
adc
fldt
push
xchg
lret
popa
popf
xchg
push
fisttpll
add
adc
dec
iret
dec
xchg
cmpl
dec
sti
jg
or
call
mov
push
enter
xor
pusha
push
sub
ss
push
roll
inc
fcomps
xlat
in
or
inc
dec
mov
shlb
mov
xchg
shl
cmp
sbb
loop
lret
jecxz
test
fscale
jnp
lods
shlb
add
mov
xor
mov
xlat
sbb
inc
xor
mov
or
je
and
lret
mov
dec
std
dec
adc
ja
pusha
xor
lahf
movsl
popf
dec
popf
cld
aam
xchg
cmp
mov
mov
sub
popf
loop
clc
mov
push
sbb
cmpsl
pop
testl
mov
and
addr16
ror
cmp
fcmovnb
in
cmp
shll
cltd
adc
stos
fxch
jl
sti
arpl
dec
shl
xor
enter
add
push
dec
inc
dec
add
cli
pop
cli
imul
push
xchg
pusha
xchg
mov
arpl
push
push
jmp
jb
aaa
cld
adc
nop
out
out
or
add
repnz
jp
test
imul
xchg
clc
and
shll
sub
push
adc
mov
into
movl
mov
ljmp
jge
sub
jbe
repnz
pop
pop
mov
jae
rcrb
cmpsl
jae
adc
sti
sub
adc
ret
add
bound
sbb
jns
lret
addb
sub
xchg
or
aaa
fldt
iret
lret
adc
ss
popf
fimull
sahf
inc
mov
cmc
mov
and
adc
sub
fcos
ret
cld
aam
stc
sarb
insb
bound
ret
cmpsl
cwtl
in
push
inc
cmp
lods
mov
adc
jg
dec
add
jnp
mov
repz
jno
xchg
out
loope
or
rcll
test
and
mov
lods
pop
dec
addb
stc
not
ja
outsl
call
ljmp
aam
pop
or
sub
mov
ret
xchg
mov
lods
mov
pop
idiv
dec
aas
push
push
incb
adc
jge
ret
add
jg
ret
mov
scas
xlat
jne
test
and
xchg
repnz
or
push
loop
xor
es
fldenv
inc
es
xor
fadd
or
sub
inc
jo
push
pop
aaa
mov
and
dec
icebp
pop
aad
dec
ss
xor
add
test
dec
or
lret
insb
pop
lahf
mov
push
andl
sub
jecxz
xor
iret
loop
add
mov
cmc
sbb
mov
xchg
or
xchg
stos
lock
mul
insl
hlt
fdivr
fcomps
enter
scas
lea
and
mov
sbb
mov
scas
pop
dec
add
cmpsl
rclb
andl
leave
mov
loop
pop
sub
cwtl
cmp
sbb
lods
add
mov
sub
sub
into
inc
xchg
xor
ljmp
mov
xchg
cli
lods
add
mov
push
cmp
out
jp
leave
xor
mov
in
fs
mov
jns
ss
adc
xchg
mov
scas
adc
push
test
loopne
sub
outsl
imul
push
lods
cmp
add
mov
iret
mov
cmc
test
arpl
idiv
pushf
ret
lea
sbb
outsl
pop
ljmp
jns
jp
pop
cmpsb
test
int
out
std
push
jmp
mov
std
adc
or
sti
mov
add
sbb
popa
ret
pop
lods
popf
je
imul
gs
jae
les
sub
mov
add
cmp
inc
sub
repnz
shlb
addl
fmuls
mov
cmp
xor
push
jae
out
icebp
jno
in
addb
test
rcrb
jne
out
fld
jl
call
orl
xor
rorb
stos
or
orb
push
or
jmp
in
mov
xchg
loop
ja
popa
shrl
aaa
arpl
push
insb
xor
jmp
and
cmp
and
bound
scas
pop
mov
sub
cmc
test
dec
pop
mov
std
adc
out
stc
mov
bound
dec
test
jmp
push
inc
out
mov
dec
aad
xor
pop
stos
mov
movsw
ss
test
push
dec
test
lock
fidivl
mov
test
lock
jb
mov
cmp
xchg
mov
lea
xchg
xchg
outsb
push
scas
push
inc
mov
scas
jbe
push
and
inc
adc
xor
in
cwtl
mov
gs
js
mov
push
or
pop
mulb
sahf
call
pop
fs
mov
lods
rorl
add
push
jge
pop
fs
xor
jge
and
lea
or
mov
mov
xchg
sti
and
jl
inc
clc
outsb
stos
jne
dec
je
lods
sub
mov
shll
orl
insl
fwait
mov
orl
jno
loopne
push
or
dec
and
sub
mov
orps
push
dec
adc
push
orl
adc
jno
addb
loopne
xchg
hlt
mov
mov
sbb
mov
push
xor
jno
lds
xor
fucomip
lahf
rcll
dec
xor
and
rorl
test
scas
dec
sbb
insb
in
inc
sar
ja
xchg
daa
inc
sahf
jmp
nop
insl
push
and
mov
enter
into
xor
pop
and
sub
cli
adc
ljmp
sbb
add
lods
je
es
leave
orl
ds
and
fnstenv
fsubrl
cmp
add
in
mov
stos
hlt
clc
push
fcomip
and
test
pusha
ficompl
ret
sbb
adc
push
aas
pop
or
mov
push
mov
rorb
sub
gs
loop
lds
mov
in
in
mov
sbb
mov
stc
xchg
adc
adc
in
sti
decb
jle
lahf
add
hlt
mov
push
sbb
lods
ds
inc
ljmp
outsl
and
insl
adc
mov
repz
cltd
repz
roll
mov
rcrb
xchg
push
lds
or
js
fwait
mov
jmp
je
sub
rcl
movsb
push
and
jl
fldl
clc
das
mov
cmp
out
les
sysret
push
mov
mov
in
dec
notb
nop
sahf
mov
jmp
jle
iret
sbb
mov
mov
jo
fs
jg
mov
scas
xor
push
scas
enter
clc
xchg
out
mov
fisttps
jmp
fs
pop
or
cmpsl
lods
sbb
mov
andb
loope
mov
sub
fcmovbe
jne
enter
rcrl
ljmp
add
ds
xor
xchg
xor
inc
push
xchg
into
jo
adc
pop
cvtpi2ps
push
adc
push
or
andb
jmp
loop
enter
sahf
arpl
xor
dec
pop
movsb
bnd
mov
ja
into
addr16
lahf
shr
add
scas
shrb
negb
push
mov
dec
jmp
loop
stos
jl
rolb
xchg
mov
jae
ja
jmp
push
push
xor
imul
rcr
stos
call
sti
cmp
lods
push
in
add
arpl
push
mov
cmp
sti
push
inc
push
dec
out
xchg
jbe
cld
mov
push
sbb
cmc
addl
jns
jnp
incb
inc
call
outsl
mov
mov
hlt
sbb
pop
dec
pop
add
in
and
cmp
or
jge
ss
lds
xchg
add
xchg
mov
mov
arpl
cmc
jmp
add
outsb
nop
add
movsl
outsl
adc
mov
dec
pusha
inc
sub
testb
xor
sbb
add
pusha
out
dec
jl
inc
mov
inc
leave
roll
push
xchg
sub
call
pushf
push
inc
rcrb
jae
arpl
hlt
push
push
leave
mov
jno
sub
lds
mov
inc
jmp
cmp
jne
test
cmpsl
sbb
sub
fldenv
mov
jl
adc
cmpsb
push
stos
pop
pop
mov
repz
pop
inc
roll
or
sbb
cwtl
adc
in
pop
jp
inc
lret
bound
and
ljmp
outsl
cmpb
pop
aas
or
cmc
mov
hlt
test
dec
mov
jmp
sahf
lds
dec
scas
outsl
fists
dec
pop
orl
test
pop
mov
and
shrb
mov
mull
sub
pusha
sbb
xchg
mov
clc
cmp
jle
add
std
fildl
sub
add
orl
mov
aam
xchg
leave
fwait
scas
stc
cmp
jmp
test
les
movsb
daa
push
int
xor
test
pushl
inc
jg
bnd
mov
cmp
cmp
rorb
and
mov
cmpsl
inc
or
and
adc
in
aas
or
adc
push
cmp
jno
cmpsb
movsb
rcl
sbb
out
es
sbb
dec
sbb
bound
xchg
pop
sbb
scas
punpckldq
mov
leave
rcrb
inc
pop
xabort
out
je
xchg
out
adc
idivl
stc
push
mov
xchg
movsl
sub
scas
xchg
sbb
nop
xchg
push
mov
test
cwtl
mov
sbb
mov
mov
sub
in
pop
mov
addl
mov
rorb
cmp
nop
test
sbb
js
cwtl
mov
pop
bnd
in
pop
sarl
inc
cmc
push
jg
add
push
adc
stos
sub
cmp
pop
xchg
nop
add
mov
jp
adc
add
pop
xchg
mov
movsl
dec
stos
and
inc
add
adc
sahf
xor
faddl
inc
pop
jnp
inc
movsb
icebp
es
nop
lods
adc
ret
shlb
mov
jns
insl
iret
xchg
testl
setns
ret
std
add
push
push
xchg
dec
fdivl
out
mov
and
jb
adc
inc
nop
xor
cli
inc
mov
gs
mov
mov
hlt
add
ret
movsl
xchg
shll
jp
jl
lret
inc
sbb
mov
or
insb
outsb
xchg
imul
enter
in
push
add
xlat
pop
inc
jle
xchg
repz
and
dec
gs
mov
add
xchg
aam
inc
mov
or
cld
xor
and
xchg
cmp
in
fldl
sbb
dec
push
cmp
mov
mov
rorb
imul
pop
jg
pusha
ljmp
jb
lea
std
std
rclb
mov
or
jo
outsb
sbb
push
testl
cmc
cmp
sbb
push
xlat
movsb
subl
je
jg
mov
xchg
imul
mov
test
les
scas
sub
adc
lahf
mov
and
cwtl
sbbb
lock
test
insb
dec
xchg
mov
test
mov
sbb
mov
scas
jne
pop
mov
outsl
xor
mov
lret
repnz
lods
mov
mov
add
std
push
lahf
test
sbb
mov
jg
xchg
or
pop
enter
mov
out
push
fwait
pop
cwtl
xor
test
mov
repz
add
xchg
jne
aad
ja
fs
dec
xchg
scas
cmp
cmp
sti
loop
mov
xchg
repnz
jecxz
loop
in
dec
mov
xlat
mov
inc
fs
dec
jbe
sbb
scas
add
jno
xor
enter
into
or
mov
addb
mov
and
mov
jl
les
ljmp
mov
pop
lahf
loop
mov
les
aas
jnp
adc
loop
mov
aas
xor
sti
mov
bound
jns
dec
and
or
cmp
test
sbb
xor
pusha
pop
cmp
sub
ljmp
dec
xchg
rcrl
and
enter
ds
sbb
insl
xor
hlt
adc
paddw
xchg
fisubl
lea
xchg
das
repnz
sub
inc
rorl
xor
xchg
popa
icebp
outsb
push
sub
call
cli
int3
int
hlt
cmp
lods
aad
scas
test
push
push
sub
in
push
cmp
adc
subl
test
lods
cld
mov
xchg
dec
rcrb
add
clc
stc
xchg
pusha
das
xorb
roll
cs
dec
das
jo
push
jns
mov
int
mov
pop
jl
jp
xchg
sub
xor
sbb
rcll
mov
mov
call
imul
arpl
push
cmp
or
or
jecxz
push
pop
gs
sub
push
fs
gs
xchg
xchg
inc
or
jmp
and
push
mov
dec
and
lods
scas
adc
adc
nop
insl
subl
jmp
daa
jp
inc
cs
lock
xor
sbb
pop
fcoml
mov
testl
jp
out
scas
push
push
in
xor
sbb
das
ja
dec
mov
aam
sbb
in
sbb
jno
adc
inc
or
jg
mov
mov
mov
xchg
pop
js
sbbl
insb
mov
roll
push
jae
sub
adc
inc
pop
addr16
mov
pop
jg
dec
cwtl
test
popf
jge
sbb
lds
pop
push
loop
subl
dec
icebp
jmp
shlb
adc
jge
shrb
das
jnp
dec
das
add
cmp
pop
adc
hlt
mov
adc
mov
mov
jmp
mov
adc
mov
jmp
sbb
sbb
and
pop
jmp
pop
movsl
fisubrl
test
jp
add
addr16
outsl
out
push
add
mov
movsl
enter
and
int3
mov
mov
fsubrp
add
mov
fists
js
fwait
mov
in
stos
adc
cmp
mov
sahf
dec
inc
add
mov
inc
aad
xor
pop
in
sub
subl
xchg
xlat
jb
mov
call
lret
xchg
les
or
lahf
mov
xor
push
push
inc
mov
add
xorl
data16
pushf
mov
in
aaa
stos
loop
fiaddl
into
xchg
cwtl
imul
mov
jae
fstps
je
fdivr
fwait
test
insb
and
inc
fsubs
aas
pop
sbb
ljmp
mov
ja
ja
mov
dec
push
mov
cltd
pop
repnz
sub
push
inc
sub
jge
jns
add
adc
push
and
cmpsb
mov
mov
dec
mov
mov
mov
lcall
popf
push
rcrl
loope
loope
ljmp
stos
mov
test
and
push
mov
jecxz
in
lds
pop
lods
adc
xchg
and
cld
sbb
xchg
adc
push
lret
jmp
adc
shl
icebp
repz
jp
mov
das
fidivl
js
sbb
out
inc
aam
pop
pop
add
outsl
xlat
cli
in
sbb
gs
rcrb
mov
xlat
test
cmp
cmp
aas
popf
mov
repnz
lds
imul
jnp
js
push
js
pop
adc
je
cld
data16
dec
jmp
insb
sbb
lret
test
inc
int
or
movsb
jae
mov
arpl
daa
mov
mov
and
or
pop
mov
addr16
stos
imul
mov
rclb
dec
int
adc
aas
cmpl
sub
mov
dec
pusha
fsubrs
enter
inc
es
fsubr
sbb
int
lcall
inc
push
nop
enter
sbb
scas
imul
pop
loopne
lcall
arpl
sarb
pop
push
push
push
loope
jl
jle
mov
lcall
pop
or
add
inc
icebp
js
test
mov
dec
fsub
imul
inc
fucomip
jg
insb
ds
out
sahf
mov
in
jne
dec
add
cmpsl
mov
ja
shr
pop
bound
xchg
mov
cltd
push
pop
add
test
out
xchg
push
jmp
clc
out
xchg
inc
sub
cmp
incb
mov
nopl
lods
jb
clc
xlat
xchg
add
ljmp
dec
sbb
xor
insl
inc
adc
nopl
inc
lret
daa
into
loope
repz
mov
cmp
outsb
or
daa
gs
or
mov
shll
cmpsl
jle
mov
fucom
xchg
push
out
iret
cmpsb
clc
mov
call
das
xchg
dec
xchg
lret
xlat
lret
xor
mov
arpl
les
xchg
das
out
flds
adc
dec
enter
adc
pop
add
mov
clc
mov
sub
pusha
jmp
bound
out
xchg
pop
or
cmp
xor
pop
call
sub
dec
dec
or
popa
sbb
mov
lret
jecxz
stos
movsl
scas
xchg
xor
nop
xchg
or
test
mov
and
test
add
jo
add
xor
adc
ljmp
mov
cmp
inc
mov
mov
mov
cld
je
sbb
push
test
add
mov
fcoml
jnp
lods
xchg
inc
dec
pop
test
adc
roll
shlb
and
imul
pop
jmp
inc
dec
testl
cli
push
dec
adc
sub
adc
sbbb
fcompl
aam
ljmp
nop
mov
mov
mov
dec
mov
sub
fmuls
and
xchg
test
push
ret
dec
aas
mov
jg
cmp
das
add
subb
cmp
repnz
mov
mov
xchg
push
mov
inc
adc
aad
insb
in
je
mov
inc
inc
daa
mov
pusha
arpl
mov
sbb
in
aad
int
adc
repz
dec
rcrl
or
dec
sub
cmp
mov
cmp
imul
mov
daa
ret
sbb
mov
inc
js
push
out
add
push
jecxz
mov
dec
ret
andb
imul
subb
jbe
mov
imul
xchg
adc
shrl
push
lret
jnp
test
dec
fcompl
dec
jecxz
jmp
xchg
cmc
cmp
repnz
xor
and
xchg
outsb
adc
pop
out
pop
xchg
adc
pop
mov
aad
popf
pop
scas
orb
leave
push
push
test
xor
pop
cmp
push
cmpsb
inc
call
and
mov
jno
lods
fiadds
mov
mov
in
adc
mov
jl
out
cmp
lcall
mov
arpl
lret
ret
sub
imul
push
sar
xor
mov
mov
and
jns
popf
mov
and
push
outsb
rcr
call
test
std
sub
or
and
pop
movsl
xchg
popa
mov
cs
popf
pop
mov
add
insb
in
xchg
xlat
xor
mov
cmp
aam
imulb
pop
inc
int3
das
mov
mov
jmp
mov
dec
cmpsl
push
data16
out
inc
ret
push
and
jnp
dec
xchg
movsl
or
cmpsl
mov
fcoms
mov
pop
mov
adc
mov
sar
mov
add
cld
cmp
pop
popa
push
pop
sub
xchg
test
in
push
imul
nop
mov
lret
xchg
iret
pop
and
sti
test
in
test
rorb
enter
imul
loope
ret
mov
lcall
or
xor
mov
mov
ret
and
mov
jb
mov
daa
fwait
arpl
es
leave
cmpsb
bound
mov
jg
cmp
xchg
xor
mov
mov
xchg
mov
adc
and
mov
mov
adc
lds
loopne
into
or
and
sahf
jnp
fadd
test
loope
dec
ja
pop
in
mov
cltd
xchg
add
lcall
cltd
xchg
fistps
out
push
xchg
push
xor
repz
cmp
xchg
ror
mov
insl
or
andl
lods
pop
mov
adc
inc
xchg
adc
in
icebp
xchg
in
stos
shlb
xchg
xchg
and
pop
jb
dec
inc
mov
sbb
insb
cmc
test
shll
test
icebp
testb
dec
loope
rorl
lret
or
pop
and
sahf
outsl
jge
xlat
faddl
sub
mov
int
lcall
and
and
xchg
sbb
cwtl
and
adc
dec
mov
cmc
jmp
sti
jge
loopne
fstps
shrb
pop
jnp
mov
jnp
arpl
and
adc
and
leave
mov
cmc
mov
adc
adc
jp
dec
lcall
inc
mov
push
scas
int3
loop
int
pusha
pop
aaa
gs
dec
leave
fists
stos
stc
lret
into
js
adc
sbb
pop
adc
ja
and
daa
inc
sub
mov
push
cmp
jae
cmp
and
add
lea
sbb
push
add
sti
out
mov
dec
or
repnz
pop
dec
add
jo
pop
mov
outsl
aam
jne
sahf
push
push
or
sbb
movsb
sbb
int
sbb
mov
push
int
jecxz
les
lret
je
mov
pop
adc
add
pop
adc
stc
lcall
jl
pop
int
xor
push
repz
jbe
xchg
inc
lods
fistpll
mov
mov
loope
xchg
hlt
out
repz
imulb
mov
cmp
sbb
add
jnp
insb
pop
sbb
sub
iret
dec
jmp
into
jns
jae
xchg
push
mov
jl
lea
movsb
bound
loope
mov
popf
mov
mov
push
add
push
cmp
sar
test
clc
jmp
ds
or
ds
notb
and
fisttpl
sbb
inc
push
xor
jnp
vmovdqu
and
jb
out
cs
dec
adc
adc
andl
jecxz
adc
adc
push
ljmp
test
icebp
inc
jne
imul
repnz
movmskps
fs
int
fisubrs
push
hlt
mov
mov
clc
dec
jmp
imul
imul
out
xor
sbb
imul
cmp
jne
inc
add
or
mov
mov
fsubr
int
dec
mov
sub
xlat
pop
in
xor
xchg
lahf
imul
ds
jne
jge
into
pop
xchg
or
cmp
push
leave
pushw
inc
and
shrb
jecxz
arpl
test
mov
call
jno
sbb
adc
in
and
pand
or
jmp
pusha
adc
and
scas
pusha
lret
cmp
rcll
dec
dec
push
sbb
pusha
cmc
dec
lret
outsb
inc
jmp
popa
jg
or
rcrb
fimuls
cmp
std
outsb
fwait
and
mov
or
adc
iret
fldlg2
test
sub
xor
scas
mov
push
pop
cmc
xorl
insb
cltd
adc
outsb
fildl
xchg
pop
mov
nop
xor
pop
pushl
mov
scas
xchg
xchg
addl
adc
gs
pop
cwtl
dec
dec
insl
dec
inc
dec
stos
ljmp
sbb
jl
dec
dec
sub
out
pop
movsl
test
test
out
jl
hlt
js
jmp
fiaddl
int
cmp
imul
and
or
and
add
inc
out
jae
xor
xlat
fs
dec
leave
xor
pop
pop
adc
jge
nop
push
inc
xor
hlt
xchg
ljmp
xchg
imull
pop
in
testb
jmp
aam
imul
dec
sub
cmc
sub
repnz
push
sub
sbb
frstor
test
imul
adc
mov
add
mov
lods
int3
push
jg
out
mov
cli
enter
flds
out
std
fdivrs
xor
inc
cmp
xor
dec
out
out
in
std
movl
mov
sbb
xorb
data16
jb
and
arpl
sub
add
cmp
adc
adc
sbb
out
fdiv
push
arpl
pusha
inc
push
hlt
add
cmp
cmp
mov
mov
inc
mov
pop
test
pushf
fstp
cmp
add
sti
mov
xchg
mov
mov
cs
xchg
loope
or
aad
mov
jns,pt
and
mov
punpckhdq
push
aad
xor
or
out
jmp
addr16
push
mov
jae
test
mov
mov
or
call
and
repz
lock
pop
jge
or
in
adc
es
xchg
mov
ljmp
dec
and
mov
aad
stc
faddp
inc
mov
pusha
lock
lods
cwtl
out
pop
rorb
dec
sahf
add
insb
inc
call
out
enter
mov
filds
adc
scas
sub
xchg
push
mov
xor
and
daa
mov
outsb
adc
movsl
test
add
stc
inc
je
fmulp
push
xlat
fwait
movsl
xchg
add
mov
jp
clc
into
lret
shlb
stos
or
push
xchg
dec
cmp
xor
dec
mov
dec
cmp
rclb
dec
adc
fwait
pop
shr
mov
xor
data16
sub
int
pop
push
or
in
movsb
hlt
mov
aas
mov
aam
xor
ficoms
xchg
lret
ljmp
out
sub
push
rclb
and
ds
mov
dec
xor
fildl
pop
stc
lret
outsb
ss
cmp
lock
xchg
inc
jnp
mov
data16
pusha
mov
xchg
add
stos
cli
add
jg
pushf
mov
testb
scas
mov
popa
adc
ret
movsl
pop
and
adc
fimuls
xchg
or
mov
jge
std
pop
loope
popf
repz
call
mov
movsl
scas
mov
push
out
loop
or
aas
fimuls
pop
push
dec
dec
xor
mov
fldenv
sub
cmp
push
jae
sahf
inc
push
cwtl
add
pop
cld
pop
pcmpeqw
std
xor
lret
sub
xchg
xor
sarb
push
xchg
loopne
pop
cli
orl
sub
adc
cltd
add
push
pop
sarb
imul
ljmp
mov
cmpsl
js
ja
sbb
mov
enter
movsb
out
push
cmp
dec
out
lahf
out
xchg
lods
and
pusha
and
daa
dec
push
loope
fsubrs
cmc
insb
fcmovnu
lret
jmp
test
dec
push
scas
xchg
cltd
aam
incb
sub
pushf
add
add
jle
xchg
mov
dec
inc
into
pushl
push
xchg
test
sti
insl
push
pop
lcall
xchg
pop
repz
mov
lret
shufps
xor
das
inc
xor
jl
or
jns
mov
call
mov
jle
jo
cmp
ja
testb
test
sti
cld
cmp
test
dec
pop
cmp
pop
inc
dec
pop
adc
mov
dec
jmp
ds
xor
mov
pop
mov
cmp
push
aam
fnsave
adc
lods
leave
ret
or
repnz
popf
cmpsb
xchg
cmc
push
sub
out
mov
notb
xchg
insb
stc
xchg
lcall
cmp
dec
out
pop
sbb
jecxz
iret
adc
pop
mov
in
jns
aas
repz
xchg
out
dec
add
inc
mov
mov
hlt
xor
sbb
in
jno
xchg
mov
fdivr
into
movsb
push
dec
popf
icebp
cmpsb
insb
ja
jns
loope
adc
jne
push
subl
add
out
cmp
std
lret
outsb
mov
cmpsl
ret
mov
mov
out
mov
stc
sbbb
pop
gs
and
and
mov
sbb
cmpb
in
cmp
xor
rclb
repnz
std
not
mov
ss
outsl
pop
xlat
dec
or
inc
addl
cmpsl
xor
add
jmp
adc
mov
popf
rorb
int3
pop
in
dec
pop
xchg
sbb
stc
fdivs
ret
fs
pop
push
fwait
push
fdecstp
cmp
push
pop
andl
ficoml
jb
jmp
sti
lods
cli
jge
mov
std
and
lock
pop
xlat
hlt
mov
and
negl
movsl
fsubrs
mov
cltd
cmp
rorl
mov
inc
ficoml
and
cli
jae
add
loop
ljmp
cmpsl
ljmp
cwtl
mov
mov
mov
fwait
jne
add
sub
push
sub
cld
add
shll
pop
ret
icebp
lods
pop
cmpsb
adc
add
in
ret
out
pop
mov
mov
fwait
shll
in
cmc
loope
movsl
fwait
cmc
mov
mov
push
inc
cs
push
xor
cwtl
out
mov
add
dec
cmp
xchg
fsubl
or
add
cs
gs
ja
mov
aas
or
jne
sub
lea
lock
ss
push
add
cmp
add
mov
pop
mov
pop
test
ds
jge
pop
or
imul
xor
or
pop
dec
aam
pop
repz
inc
fwait
popf
mov
jl
mov
scas
loope
push
rolb
sbb
add
adc
out
mov
stc
stos
testl
scas
adc
out
mov
cltd
rclb
sub
add
jp
push
cmpsl
lahf
add
cs
or
push
jb
pop
push
xor
bound
mov
xlat
push
inc
sbb
imulb
jne
adc
mov
push
add
or
push
imul
cmp
rorb
xchg
dec
jl
outsl
inc
arpl
jmp
outsb
aad
inc
rol
sbb
in
push
cmp
inc
lcall
mov
dec
pop
daa
push
fcmovbe
push
scas
pushw
das
jo
test
push
fcoms
repnz
xchg
sub
and
shll
xchg
and
imul
enter
pop
rcll
dec
addr16
add
arpl
stos
in
cld
aas
sbb
mov
inc
lea
jae
jbe
jo
jmp
or
movb
inc
mov
imul
test
pop
jae
mov
and
or
inc
mov
imul
mov
dec
fcoml
jae
lret
mov
leave
pushf
cmp
aaa
push
addr16
sahf
rcrb
mov
mov
lahf
lock
dec
sti
in
sub
sbb
xchg
fbstp
sbb
jnp
jmp
repnz
add
repz
out
imul
ds
pop
mov
cmp
inc
cmpsb
sub
mov
mov
movsl
or
push
rcrl
out
sbb
jbe
gs
jmp
dec
dec
push
adc
pusha
dec
dec
jmp
and
add
test
fldcw
cmp
cmp
aas
test
jnp
pop
aas
daa
sub
scas
adc
cmp
sbb
add
andb
or
cmpl
or
mov
ljmp
jno
cwtl
xor
sbb
and
xor
jmp
rorl
cmpsb
das
jecxz
in
xchg
loop
jns
int
fstp
adc
cld
lea
adc
mov
xchg
std
sub
ljmp
icebp
sub
inc
push
mov
jb
int3
fisubrs
dec
push
push
loop
lds
push
into
divb
popa
add
sti
in
aaa
cltd
test
cmp
lea
or
imul
and
fnstenv
int3
pushf
lahf
lock
outsl
and
inc
mov
pop
loopne
mov
jne
cs
xor
rorb
call
jnp
rclb
cmp
pusha
and
jp
loopne
stos
mov
ret
pop
jle
xchg
sub
ret
std
sbb
jae
loopne
daa
sbb
cmpsb
movsl
sarb
nop
lahf
and
xchg
testb
xlat
adc
jb
ja
popf
idiv
mov
lcall
outsl
outsl
jle
in
lock
mov
aam
pop
fmul
pop
outsb
mov
jl
aaa
push
mov
lds
mov
sbb
jg
and
sub
shll
push
xor
iret
repnz
je
inc
dec
enter
xchg
add
loop
rorl
cltd
ret
pusha
cmp
mov
faddl
ret
cmp
jg
inc
addr16
hlt
pushf
mov
cltd
adc
pop
loop
fwait
pop
pop
iret
leave
jb
into
dec
xchg
ss
andl
ret
push
loopne
sub
es
mov
std
cwtl
out
lock
nopl
mov
cmpsb
js
cmp
mov
mov
add
adc
loopne
sti
mov
push
test
mov
jmp
rcrb
test
movsl
mov
add
dec
jl
push
stos
lahf
not
pop
inc
out
dec
call
dec
jl
in
adc
and
and
dec
cltd
push
fcompp
sbb
pop
jno
adc
lds
das
popa
sbbb
mov
pop
sbb
cmp
and
loopne
jmp
jecxz
mov
add
shl
mov
ret
imulb
pop
popf
stos
mov
adc
cmp
stos
push
and
cmp
dec
push
cmp
sbb
cmp
cmp
push
bound
movsb
sbb
jg
rorl
call
mov
je
leave
popa
cli
push
lods
mov
ljmp
inc
ljmp
lcall
fstps
mov
scas
mov
or
cmpsl
movsl
std
mov
imull
xchg
insl
inc
mov
gs
mov
ret
inc
add
lahf
jae
dec
lahf
mov
fdivs
adc
or
out
push
pusha
mov
call
jne
lea
fsubrl
cmpsl
scas
dec
outsb
sub
add
dec
stc
fs
jns
add
arpl
scas
mov
pop
add
mov
inc
mov
icebp
push
jnp
insb
or
push
gs
jno
fbstp
cwtl
pusha
subl
or
out
cmp
int
mov
rcrb
and
sub
andps
mov
js
scas
bound
mov
out
bswap
negl
mov
inc
stos
mov
daa
add
out
sub
mov
sbb
inc
lret
repnz
adc
add
pop
push
or
cmc
jne
inc
rcl
pop
in
jno
je
lea
sbb
dec
sbb
xor
jmp
inc
das
das
jb
and
xor
test
cmpsb
and
out
out
xor
mov
daa
nop
mov
test
sti
xchg
daa
sbb
cltd
cltd
xchg
stos
ja
add
xor
ja
xor
movsl
lods
mull
daa
mov
dec
add
xor
mov
sub
aam
mov
add
sub
in
pop
push
pop
adc
lock
imulb
sub
mov
sub
inc
jne
cwtl
push
cwtl
pop
sub
mov
pop
stos
cs
push
add
mov
inc
mov
and
mov
lahf
add
sub
loope
mov
xchg
push
scas
scas
dec
imul
lret
rorb
gs
pop
push
and
insl
inc
sbb
mov
movsb
movsb
enter
push
cmp
es
mov
pop
add
dec
ds
mov
fidivrs
xchg
pop
gs
and
negl
xchg
rclb
arpl
iret
stos
rorb
and
xor
lret
add
inc
mov
jns
xchg
ss
jb
jne
xchg
xor
mov
aam
lds
popf
or
mov
outsl
or
test
mov
add
cmp
mov
sub
inc
inc
add
shrl
loope
xorb
dec
stos
mov
lods
ret
adc
and
lret
aaa
scas
mov
push
or
aam
clc
mov
sbb
and
insb
pop
add
push
fidivs
xchg
cs
lods
sub
cmc
push
shlb
outsb
punpcklbw
divb
faddp
inc
call
dec
sar
je
pop
les
fdivrs
mov
xchg
sub
or
nop
jns
cmp
mov
divb
sbb
adc
and
ljmp
jle
and
stos
mov
in
scas
push
popf
dec
lea
mov
scas
xor
movsl
pushf
dec
and
push
add
pop
mov
cmpsb
mov
iret
mov
or
lret
mov
jg
adc
adc
jno
pop
frstor
push
push
and
inc
cmp
daa
or
jg
btc
sub
or
lret
cmp
cmc
push
int3
out
call
mov
ds
scas
imul
sub
mov
imul
cmp
dec
or
inc
xchg
or
inc
or
jne
int
call
jae
or
repnz
mov
orl
mov
inc
je
ret
push
rol
add
lahf
imul
cmc
jbe
cmpsb
call
mov
pusha
xor
cmp
push
fldt
xor
mov
clc
out
mov
outsl
shlb
cmp
and
push
outsl
cs
mov
bnd
aas
cmpsb
push
pop
je
or
mov
das
lahf
cmpsb
and
xchg
mov
movsb
add
push
repnz
jg
lret
mov
sbb
scas
cs
lret
or
or
adc
inc
ja
pop
stc
xor
push
mov
xor
xchg
dec
imul
std
mov
cs
push
ljmp
push
pop
sahf
sti
lret
outsl
jge
mov
dec
iret
push
mov
fiadds
and
cmp
std
xor
test
jecxz
jb
xchg
inc
insl
mov
inc
mov
insb
pop
xchg
fldt
jg
popf
mov
stos
in
movb
test
bound
lock
testb
aad
hlt
imul
push
clc
aas
or
scas
or
or
mov
adc
cmp
ret
inc
mov
jp
rorl
add
pop
imul
inc
stos
aaa
enter
xor
mov
insl
lea
push
add
inc
push
xor
ljmp
mov
push
dec
sub
les
jecxz
sbb
jmp
push
inc
aam
lock
cmpb
dec
stos
cmp
mov
in
outsb
and
test
ljmp
stos
mov
testl
stos
inc
fs
mov
dec
inc
or
push
scas
add
xor
push
mov
adc
or
mov
xchg
push
sub
cmpsl
xchg
mov
mov
pop
add
stos
stos
imul
test
push
bound
popa
cltd
es
cmp
jp
mov
mov
nop
pop
xor
push
pop
mov
cmpl
enter
sub
imul
push
daa
mov
push
xchg
sbb
push
sarb
mov
mov
inc
push
mov
cld
and
adc
lods
pop
adc
jne
mov
pop
stos
pop
adc
mov
movaps
test
out
rcll
dec
sbb
call
dec
cmp
lods
inc
cmp
push
push
subb
or
inc
mov
mov
pop
movsl
sub
icebp
aam
pop
inc
int3
cltd
test
add
mov
mov
and
stc
add
loop
push
jl
sbb
cwtl
or
ja
jno
int
or
nop
xor
cmpsl
xchg
mov
push
dec
aam
or
inc
and
loop
mov
push
lret
rolb
add
mov
into
iret
mov
sub
cmp
push
cmc
cmp
and
mov
add
sahf
inc
sbb
cmp
lock
fdivs
pushl
or
xchg
push
xor
push
out
jnp
xor
jno
sbb
sub
shll
pop
idiv
inc
lcall
mov
dec
out
in
lret
inc
rclb
mov
or
or
push
push
jne
push
cwtl
dec
sub
sub
into
lret
or
into
ss
xchg
add
imul
or
cmp
sti
cmpsl
js
cli
lea
test
dec
cmpsl
add
les
dec
xchg
sbb
add
mov
pop
inc
sarb
inc
into
mov
pop
xchg
lods
mov
adc
lea
sbb
mov
push
cmp
mov
adc
mov
add
dec
fs
xor
jecxz
add
out
aaa
cmp
or
mov
sbbl
or
scas
mov
adc
movsl
negl
das
fiaddl
and
dec
and
in
mov
pop
push
adc
sbb
sbb
adc
in
popf
je
clc
xchg
pop
push
sbb
arpl
mov
repz
sub
mov
lods
jmp
and
cmovns
jecxz
dec
incl
stos
or
test
movsb
cli
jge
add
push
dec
mov
jl
js
mov
lds
ds
mov
add
ss
sar
aad
out
push
mov
ret
or
outsl
add
test
sbb
out
cs
in
sbb
imul
sub
mov
int3
inc
fsub
push
jg
push
jle
mov
mov
sahf
xor
in
les
push
adc
sarl
scas
cmp
xor
je
cmp
jg
xor
push
xchg
adc
add
out
fcmovnb
pop
xchg
std
scas
jmp
jno
int3
sbb
push
movsb
cli
fisubl
fsubp
daa
mov
icebp
push
jne
out
jge
mov
movsl
or
repnz
imul
add
fs
pop
mov
mov
fisubrl
and
fs
mov
add
sbb
mov
lahf
push
adc
iret
sub
out
inc
shl
pop
push
dec
jnp
daa
bound
in
std
xchg
sbb
pop
adc
stos
stc
mov
fneni(8087
sub
add
inc
xchg
adc
shlb
xor
mov
insl
aaa
rorb
push
call
cltd
movsb
dec
xlat
push
jecxz
rclb
lret
cld
ror
fbld
jmp
aad
jae
out
mov
cld
lahf
xchg
ret
jmp
cmp
inc
pop
outsb
cmp
mov
mov
cmpsb
mov
mov
idivb
ret
adc
aaa
sbb
sub
push
lea
jp
mov
fdivp
pop
mov
lret
imulb
push
test
out
mov
ja
fdivs
push
sbb
enter
cmp
pop
loopne
fxch
pushl
pusha
lahf
ret
rorl
mov
aam
ret
test
push
lock
mov
dec
inc
mov
xor
jp
and
loop
popa
pop
xlat
mov
sti
test
pop
sub
aas
cmpsl
rorb
xchg
mov
loopne
out
sbb
inc
incb
cmp
cmp
mov
dec
pop
jg
or
fwait
test
inc
add
rorl
pop
adc
cmp
mov
movsl
xor
sbb
push
xchg
and
inc
jle
das
jne
cmp
xor
push
mov
push
mov
popa
notb
lock
iret
pop
adc
xor
cmp
sbb
pop
test
es
cwtl
sahf
js
mov
ret
push
xor
ljmp
dec
jmp
sub
mov
xor
adc
add
fidivs
lret
clc
popf
out
jne
or
lret
jge
fiaddl
clc
adc
test
and
sbb
adc
es
not
mov
inc
outsb
and
xor
test
rcll
dec
sub
enter
out
sub
ljmp
xor
and
adc
jo
mov
pop
mov
pop
fnsave
jno
xchg
xchg
cltd
inc
adc
push
xchg
mov
out
sbb
add
push
sbb
iret
dec
and
sub
pop
movsl
pop
mov
jno
xchg
mov
popf
xlat
ljmp
sub
inc
sub
mov
and
or
jae
fcompl
in
insb
jbe
std
mov
cmc
test
or
cltd
int
neg
jmp
dec
fcomps
mov
ret
ret
cmpsb
mov
jne
jp
mov
loope
popf
mov
mov
movsb
jnp
mov
mov
mulb
pop
mov
clc
subb
mov
cmp
and
cld
mov
push
or
leave
scas
movsl
out
cwtl
adcl
gs
jge
mov
mov
mov
lods
hlt
loop
push
jae
jp
ljmp
inc
icebp
xor
icebp
jecxz
mov
rolb
xor
fbld
int
bnd
adc
lret
aam
cmc
cmp
aam
cmpsb
bound
sbb
xchg
sti
mov
repz
sub
mov
lahf
jg
xlat
lods
insb
sbb
cli
shr
aas
sub
dec
mov
xor
push
mov
mov
aas
inc
jg
daa
jp
add
clc
mov
or
mov
std
inc
lret
jo
daa
pop
mov
mov
loope
daa
inc
mov
icebp
push
cmp
xor
jl
adc
ss
scas
push
xor
addl
pop
mov
jne
inc
lods
test
xlat
jge
inc
rcrb
jecxz
aaa
jno
pop
push
push
rcll
add
pop
int
add
or
sbb
test
or
fsubr
decb
dec
jbe
mov
add
test
sub
pushf
sahf
jecxz
lcall
jecxz
dec
loopne
add
imul
stc
push
popf
jp
cmp
jnp
mov
test
roll
xchg
dec
mov
jno
xchg
xor
insb
mov
aaa
into
xchg
sarb
test
lds
jb
cli
ret
addr16
push
add
and
mov
mov
das
repz
jl
and
loop
dec
adc
cmp
insl
sbb
adc
fildll
cmp
add
dec
test
push
lret
mov
dec
les
clc
rol
in
xor
testb
rcrl
mov
jbe,pt
lds
scas
xchg
and
mov
shl
aad
dec
sub
repnz
mov
sub
cld
bound
lret
push
or
mov
lods
dec
imul
ret
add
imul
pop
je
dec
sbb
adc
push
int3
outsb
addr16
lret
sbb
and
add
adc
in
mov
sbb
sbb
and
jp
jnp
and
mov
rcl
or
or
push
out
or
loope
popa
pop
mov
mov
cmpsb
push
das
data16
jle
sti
add
cmc
xchg
movsb
mov
dec
add
call
idivl
gs
inc
inc
or
outsb
scas
jno
xor
push
push
pusha
cltd
test
sub
push
leave
aad
mov
and
mov
adc
xchg
mov
test
insl
and
and
ss
stc
dec
xlat
aad
cmp
dec
dec
cmc
loope
cs
jns
das
rcrb
adc
shr
jl
pop
pop
enter
arpl
mov
stc
lahf
sub
dec
fsubs
pop
stos
ss
rclb
out
test
xchg
cmp
loop
lock
insl
cmp
data16
or
out
cmp
adc
in
aad
mov
cmc
push
ljmp
jmp
ret
aaa
inc
jbe
push
mov
mov
mov
mov
insb
sbb
xor
ja
dec
mov
fadds
int3
call
pushf
sub
or
cmp
sbb
std
test
aas
mov
sub
mov
loop
mov
divb
rcll
in
push
sub
and
or
scas
jl
lcall
pop
dec
xchg
stos
pop
jne
cld
bnd
int
lret
cwtl
es
mov
adc
mov
xchg
pop
insl
mov
lret
loop
shrb
outsl
cmc
sbb
sahf
adc
lret
decb
in
mov
popf
mov
inc
addr16
mov
jl
pop
mov
enter
mov
cmp
pop
dec
pop
push
leave
movsb
pop
bound
inc
push
or
pop
sub
test
fimull
or
out
mov
mov
rolb
pop
push
fbld
aad
scas
ja
mov
test
dec
lret
jge
hlt
subl
mov
imul
xor
scas
cwtl
addr16
aas
pop
sar
sub
arpl
imul
cmp
iret
fucom
outsb
icebp
mov
xchg
sub
mov
test
mov
fimuls
orb
mov
jb
sub
aad
arpl
sbb
test
add
dec
mov
cs
sbb
shlb
insb
cmp
das
in
pop
enter
pop
mov
stos
pushf
mov
repz
dec
in
test
cld
ret
mov
hlt
lods
mov
adcb
mov
arpl
shr
push
out
inc
xor
sbb
pop
testl
mov
cs
mov
icebp
and
es
out
repnz
xchg
push
ds
sub
sub
adc
xor
and
sahf
in
mov
bound
pusha
out
add
gs
inc
loopne
dec
lods
pop
out
add
xchg
jmp
mov
clc
int
lock
push
push
rorb
jecxz
add
mov
jmp
sub
in
aam
insb
xchg
inc
inc
adc
leave
std
movsl
pop
dec
push
insl
in
add
mov
pop
add
xchg
cmpb
fcomip
sub
int
inc
dec
mov
adc
jmp
lods
push
and
enter
repnz
xchg
ficoml
popf
loopne
repz
lret
or
add
add
inc
dec
fcoml
mov
mov
dec
adc
pusha
pop
jae
or
std
xor
icebp
mov
fcomps
inc
cltd
dec
inc
es
mov
dec
mov
hlt
mov
ffreep
in
push
cwtl
leave
aaa
jmp
daa
mov
inc
test
mov
pusha
jg
inc
xchg
push
xchg
fmul
ljmp
and
jg
add
sarb
add
mov
inc
mov
mov
xorb
xchg
xor
mov
xchg
or
sti
lea
inc
xchg
in
or
add
mov
in
hlt
mov
dec
push
fs
cmp
jbe
lea
or
in
scas
xlat
mov
adcb
add
cmp
out
filds
adc
fs
cltd
stos
es
je
sub
jne
and
icebp
call
aas
push
outsb
cmp
adc
xor
aam
lock
lods
mov
inc
loope
in
dec
xorb
dec
popf
xorl
push
cmc
jl
stos
cmc
and
lock
stc
xor
ja
repz
pop
repz
out
dec
je
lahf
les
jo
mov
adc
andl
aaa
lret
sahf
aam
in
and
test
cmp
jl
push
inc
cltd
icebp
addb
or
lahf
fwait
xor
push
into
and
push
movsb
cmp
push
lods
repz
and
add
jno
iret
in
xor
or
push
ss
fdivl
mov
in
push
lahf
push
and
sahf
inc
es
insb
dec
fcomps
and
lods
mov
mov
dec
sbb
scas
inc
jnp
nop
aam
repnz
lods
fmul
sub
popa
out
sub
mov
jmp
shrb
push
mov
push
bound
aas
shr
jmp
lcall
adc
sbb
sub
sub
sub
ljmp
ffree
shlb
jmp
pushf
adc
inc
imul
jbe
mov
lcall
xchg
setne
stos
shrb
fwait
jno
or
push
lds
ljmp
inc
pop
sbb
cli
popa
dec
or
xchg
fmuls
std
out
repnz
inc
test
pop
sbb
pop
and
mov
ja
pop
add
push
mov
scas
xchg
ss
push
adc
and
ficoms
cwtl
sbb
push
push
inc
inc
xor
notl
out
fmull
cltd
lock
jg
es
and
pop
or
test
testl
icebp
mov
in
daa
ljmp
jl
daa
and
fimuls
lods
outsb
or
pop
pop
jbe
aaa
and
hlt
mov
ljmp
mov
push
je
in
cmp
push
data16
subl
icebp
fdiv
xor
bound
lcall
ficomps
divb
sbb
movsb
pop
cwtl
negl
scas
test
ret
sahf
inc
popa
scas
in
pop
mov
mov
in
out
xor
stc
divl
mulb
inc
stc
sub
je
das
inc
cltd
icebp
test
fnsave
aaa
loopne
inc
jle
xchg
aas
loop
push
inc
loope
ljmp
push
jnp
pushl
push
imul
lahf
adcb
mov
push
ss
cmp
std
mov
mov
inc
std
xchg
add
pop
dec
push
or
cld
jnp
stos
lahf
push
or
and
adc
arpl
adc
or
jl
and
mov
in
shl
fidivs
jle
push
in
cwtl
and
orl
xor
xlat
push
jp
pop
pusha
int3
dec
aaa
push
cmp
cmp
push
add
imul
xor
sub
ret
mov
push
arpl
fbld
xchg
inc
sub
xor
xor
pushf
inc
data16
push
inc
mov
loope
mov
test
lcall
out
stc
sbb
shrl
in
std
hlt
in
and
rorl
popa
add
inc
stos
pop
sbb
outsl
leave
and
loop
sahf
xchg
sbb
ret
mov
clc
xor
rol
and
cmp
divl
int3
outsl
repnz
fcmovb
xor
sbb
inc
cmpsl
pop
scas
mov
lret
mov
das
sub
sahf
push
mov
lret
ret
jno
cmpsb
in
cmpl
push
cmp
ret
lds
jl
pop
fdivs
popf
shll
add
pop
lea
push
cmc
bound
sbb
pop
js
sbb
in
push
aas
pop
push
dec
sbb
push
in
call
mov
enter
shl
arpl
mov
lock
std
pop
aaa
dec
add
arpl
imul
push
inc
adc
popf
mov
pop
das
jmp
dec
les
push
ja
jbe
pop
xor
dec
cmpsb
sub
icebp
xor
inc
adc
lock
in
sbb
jae
out
loop
xor
jp
xchg
mov
iret
mov
push
jne
lock
pop
inc
xchg
dec
lods
out
push
pop
sbb
loopne
std
xor
inc
adc
xchg
pop
ret
mov
mov
jns
mov
pop
or
fucomip
loopne
fwait
cli
mov
push
push
push
and
rolb
inc
inc
or
bound
pop
jnp
xchg
xlat
jo
pop
xchg
aam
shr
mov
adc
sub
mov
mov
dec
xor
insl
lods
sahf
push
pop
repz
stos
dec
mov
mov
pop
xor
cli
subb
fwait
shrb
or
add
rcrl
push
faddl
aad
int
or
repnz
jp
mov
aas
sbb
movsl
inc
rcll
mov
mov
adc
and
or
push
mov
sub
sti
out
stc
das
cltd
push
dec
sub
sub
or
mov
and
sbb
scas
aas
data16
hlt
insb
mulb
cmp
lea
cld
aaa
cli
cmp
pop
mov
addl
and
aam
jp
dec
lret
outsb
xor
lods
dec
xchg
or
xor
cltd
sahf
scas
sub
and
cmpsl
push
cmc
andl
sbb
and
mov
or
and
push
sbb
subl
push
add
cmpsl
add
popf
xor
sti
push
ds
ljmp
jbe
andl
cmpsb
addb
sbb
push
mov
adc
shlb
adc
gs
lods
loopne
push
or
pusha
in
insl
cwtl
ljmp
sbb
adc
out
mov
out
mov
fstp
popf
out
xor
xor
ds
and
lcall
sub
sbb
rorl
xchg
cmp
cmp
add
hlt
xor
in
lods
clc
out
or
add
dec
add
movsl
sub
mov
loope
push
jne
dec
xor
push
sub
jle
jecxz
xor
push
xor
sub
pop
leave
ljmp
pusha
dec
pop
pop
in
stos
and
xor
adc
or
add
adc
jl
sbb
pop
and
push
daa
roll
pop
adc
xchg
aas
mov
fsubrs
sub
mov
and
dec
iret
dec
lret
lea
add
in
mov
sbb
push
push
stos
add
and
xor
lcall
mov
mov
jle
sbb
mov
cltd
ljmp
imul
fstps
jmp
hlt
adc
enter
fmuls
outsl
jecxz
inc
dec
jb
jmp
fwait
leave
adc
jecxz
xorl
xchg
mov
xorl
jb
dec
clc
inc
in
out
jae
cltd
cmp
mov
xchg
punpckhwd
popf
jmp
and
xor
aaa
cmpsb
pop
daa
mov
xchg
jne
test
pop
dec
lcall
sbb
jnp
or
add
pushf
or
or
adc
cmp
subl
pop
sarb
sti
aas
das
xlat
pop
dec
ljmp
cmp
pop
lgs
lret
cmp
sbb
stos
and
cmpb
add
push
test
ds
icebp
jne
inc
sbb
push
out
test
dec
adc
rorb
cmpsb
ljmp
mov
lcall
jl
iret
jmp
clc
cwtl
movsb
and
cmpsb
mov
imull
pop
incl
stos
insl
and
ja
push
sub
jmp
sub
jmp
pop
and
jbe
push
push
pop
add
xlat
adc
rcrb
cs
ret
ret
cmc
cmp
xchg
int3
push
pop
in
aas
movsb
xchg
mov
and
lods
xlat
dec
call
xor
cltd
ss
pusha
ja
fidivrl
loope
imul
mov
sub
mov
mov
sbb
lcall
push
mov
out
ret
lret
std
add
mov
cmpsb
outsl
nop
lret
mov
and
jae
jnp
dec
aaa
in
add
rorb
push
xchg
xchg
in
hlt
jmp
ljmp
jg
rcll
loopne
push
inc
cmc
or
or
push
sub
popf
and
inc
xchg
adc
aad
ret
mov
in
into
aaa
add
dec
inc
push
inc
arpl
push
xchg
cmp
bound
cmp
inc
dec
mov
lea
jo
push
pop
aam
cmp
pushf
ret
jne
iret
adc
hlt
out
push
xor
loop
fs
xor
sarl
mov
xor
mov
leave
call
sahf
inc
pop
dec
push
push
test
out
cs
aam
xchg
movsl
adc
mov
movsb
call
inc
mov
mov
pop
jb
dec
scas
mov
imul
xchg
hlt
fdivl
pop
rep
xchg
cmpsb
jne
out
fwait
mov
pop
push
cmp
lcall
dec
cmp
mov
insl
test
pop
dec
mov
cmp
std
imul
rcrb
cwtl
and
sbb
insl
dec
push
inc
adc
jne
in
and
enter
outsl
and
call
xchg
and
cmp
pop
jno
inc
mov
sbbb
mov
mov
mov
or
xchg
addr16
cmp
fistl
mov
mov
jnp
mov
dec
fwait
data16
sahf
mov
stc
addb
fdivs
and
pop
dec
cwtl
fimull
cwtl
mov
and
sbb
push
xchg
xor
rorl
mov
shlb
test
pop
jnp
adc
push
adc
bound
mov
mov
add
xorl
loope
loop
ja
and
pop
rclb
push
out
cwtl
divb
ljmp
ret
xchg
adc
adc
mov
push
mov
xor
or
test
dec
stos
fists
out
test
out
into
out
push
dec
inc
adc
fisubs
dec
inc
mov
sbbl
jb
pop
sbb
into
ljmp
ret
scas
lock
stos
rorl
scas
aaa
sub
outsb
inc
dec
imul
pop
sbb
js,pn
or
fistl
les
add
loop
jp
add
jae
sub
shrb
lret
mov
fidivrs
or
push
aam
shll
xchg
xchg
repz
loop
xchg
jno
in
fwait
inc
movsl
out
jno
imul
lcall
nop
shl
cltd
mov
repnz
ret
lods
push
xorl
or
test
je
sub
cmpb
cmc
shlb
ljmp
neg
call
mov
adc
push
test
scas
pop
jecxz
ja
jle
in
and
or
adc
mov
xlat
pop
repnz
outsb
mov
or
cmp
dec
pop
sbb
jnp
mov
sbb
cld
cmpsl
mov
mov
roll
dec
mov
adc
adc
pop
mov
call
xlat
test
popa
int3
jb
pop
in
add
xor
call
fsub
push
cli
fistl
cwtl
mov
movsb
test
mov
subb
cmc
mov
sarb
and
in
lcall
lahf
adc
mov
inc
lods
mov
int3
in
mov
and
xor
add
gs
insb
arpl
and
xor
pop
jnp
out
imul
lock
test
pop
in
lock
out
cmpsb
add
inc
sbb
fldcw
push
popf
pop
xchg
outsl
push
inc
and
mov
mov
cmpsb
sub
sub
mov
out
pusha
xchg
stc
pop
xor
cmp
pushf
mov
push
ljmp
ss
popa
mov
movsl
hlt
cmp
pop
popa
shr
ljmp
mov
outsl
jp
mov
xor
rcll
imul
lcall
lret
lds
bound
mov
pop
mov
ljmp
sub
jge
es
decb
filds
lods
xchg
mov
mov
pop
inc
stc
mov
testb
mov
nop
in
mov
sub
push
inc
inc
adc
call
shrl
shrb
fisubs
aas
xor
lea
add
outsl
xor
xchg
push
mov
gs
sub
leave
cs
mov
inc
imul
test
dec
and
shrl
adc
dec
popa
xchg
cmpsl
inc
inc
and
xor
push
push
and
test
xchg
clc
movsl
cmp
outsl
int
loopne
dec
xchg
xor
loopne
or
xchg
mov
adc
mov
outsl
addl
ss
jge
clc
xchg
mov
notb
iret
add
mov
enter
pop
or
sti
cltd
ret
fadds
fbld
cwtl
jb
jo
stc
icebp
arpl
hlt
lea
mov
scas
pop
mov
push
ds
cmp
xor
lds
mov
push
imul
insb
fisttpl
insl
pushf
icebp
sbb
pop
jae
psubusw
out
and
ret
nop
stos
repnz
inc
mov
jae
jne
les
les
call
imul
movsl
movsl
push
les
shr
mov
ss
inc
and
pop
jg
xor
je
jl
inc
and
push
fwait
and
ret
xchg
sti
sub
push
ret
shrl
push
adc
outsb
rcrb
add
sub
jl
pushf
insb
mov
push
cld
inc
inc
xor
aaa
aad
js
dec
pop
push
mov
push
jle
popf
sti
mov
dec
add
movsl
push
cmp
pop
fcomip
cli
cltd
xchg
ds
mov
jns
sub
jns
movsb
sub
and
stos
lret
test
std
jmp
jno
push
roll
test
clc
sub
pop
test
xlat
loope
mov
pop
xor
mov
cwtl
hlt
in
dec
mov
sub
pop
push
xor
lds
and
sbb
les
add
out
or
inc
aaa
push
ret
js
mov
pop
mov
and
dec
push
out
dec
lock
adcl
loope
xor
mov
sub
mov
jmp
or
out
pop
cmp
test
jno
std
push
and
sbb
fistpll
testl
into
mov
sarb
popf
jbe
mov
insb
jp
cmpsb
lock
lcall
adc
fdivs
push
xchg
cmp
mov
jg
cmp
xchg
jnp
popf
adc
cmp
ds
nop
lock
rorb
insl
cld
push
ss
jmp
aas
insl
add
and
dec
mov
lcall
adc
dec
inc
icebp
ret
dec
aad
cmovle
inc
or
test
inc
inc
popf
cwtl
aaa
dec
aas
in
cwtl
xor
mov
das
dec
adc
cmp
mov
in
xchg
xor
xlat
testb
cmpsb
int3
mov
sub
mov
adc
push
and
jg
pusha
lret
push
popf
jmp
jmp
imul
mov
cli
add
fucomi
add
push
add
icebp
iret
cmpsl
sti
jp
stc
xchg
nop
inc
ss
push
adc
shrb
lahf
in
repnz
popa
fistpl
stos
imul
andps
sub
insl
into
and
mov
pop
data16
pop
mov
xor
inc
test
fldl
mov
push
jo
or
test
out
sbb
dec
les
sbb
mov
xchg
scas
int3
xlat
imul
in
mov
aam
inc
mov
jmp
dec
std
dec
jecxz
leave
js
stos
xor
in
add
sbb
stc
mov
in
mov
pusha
sub
jb
xor
ficoms
push
mov
loop
popf
adc
adc
jge
mov
mov
cmp
cmp
insl
sahf
pushf
sarl
mov
cmp
pop
arpl
sub
dec
ret
xchg
addr16
dec
imul
inc
fninit
dec
ficoms
jg
dec
in
int3
pop
push
cltd
sub
ljmp
call
in
cmc
pop
cmc
cmpl
aad
jle
dec
scas
je
rcll
push
arpl
lret
repz
lods
push
lock
xchg
fisubs
mov
rsqrtps
fnstenv
ja
push
pop
rcll
or
jae
fidivs
or
push
pop
cmp
out
mov
xor
mov
mov
mov
ja
popa
sti
cmp
in
cmp
mov
lds
xor
lcall
jbe
lock
enter
xchg
psrlw
jmp
push
and
or
outsb
push
mov
leave
mov
into
cmpsl
insl
sbb
les
inc
pop
add
dec
or
sahf
sub
enter
test
push
and
mov
xlat
mov
sbb
imul
adc
xor
mov
push
dec
les
sti
adc
dec
pop
bound
shl
or
call
xchg
sbb
push
mov
mov
dec
out
mov
addb
ds
inc
in
dec
xchg
lock
lcall
ret
nop
lret
sbb
shlb
pusha
sahf
jne
popl
mov
xor
mov
call
mov
in
jg
jbe
gs
testl
mov
hlt
aam
xchg
rclb
int
stos
adc
mov
xchg
mov
mov
mov
sbb
call
push
jo
pusha
inc
mov
loope
insl
ss
push
mov
rcl
nop
push
mov
movb
stos
or
std
mov
leavew
adc
jbe
sub
cltd
xor
and
ss
mov
aaa
pop
adc
sbb
or
sub
mov
nop
pusha
scas
xchg
mov
out
adc
add
mov
les
aaa
mov
jmp
sahf
repnz
jnp
pop
cmp
push
lock
jae
outsl
jb
and
inc
mov
lret
scas
in
lahf
jl
add
cmp
sub
ja
add
cmp
mov
xlat
movsb
popf
mov
aaa
jmp
mov
pop
sbb
jmp
arpl
lds
mov
cld
loop
jb
mov
xlat
pop
inc
mov
lds
fabs
xor
cmp
dec
sub
mov
dec
testl
fucomp
and
ds
xor
popa
mov
faddp
rcr
imul
mov
loope
sub
in
xchg
int
pop
mov
sbb
mov
push
inc
xchg
mov
mov
fmull
arpl
sub
or
loop
cmpsb
inc
test
xchg
int
sub
cmp
loop
sahf
loopne
or
out
call
out
mov
int
stos
pop
add
popa
std
std
push
mov
mov
outsb
dec
adc
pop
xlat
push
insb
cmp
dec
in
icebp
xchg
xor
clc
pop
bswap
lahf
call
xchg
xchg
sub
sub
mov
addr16
ret
cwtl
in
jg
add
cltd
mov
adc
push
repz
stc
lret
add
jb
imul
cmp
fcomip
daa
xchg
ljmp
dec
mov
fimull
xchg
clc
add
push
add
rcrl
or
add
cmp
pop
ret
test
dec
inc
mov
and
push
add
mov
outsb
scas
lea
sbb
mov
cmp
and
mov
ror
mov
pop
lahf
loop
push
sub
mov
dec
pop
inc
mov
add
cmp
mov
test
jae
lds
cmp
add
jl
fimull
push
push
ret
pmuludq
out
pop
inc
pop
push
mov
lock
and
divl
cltd
cmp
sub
scas
mov
sbb
popf
lcall
jg
sarb
out
and
into
pop
pop
xorb
or
cmpsb
push
and
add
mov
sbb
in
adc
cltd
and
adc
push
pop
std
sub
sbb
sti
call
aaa
inc
xchg
adc
jmp
inc
sub
push
mov
pushf
jo
fdivrs
scas
add
aas
xor
sbb
ficomps
lds
pop
in
jmp
fiaddl
rolb
cwtl
loope
je
push
cmp
sbb
push
aad
cmp
das
pop
aam
dec
aaa
shll
mov
mov
xchg
sub
sbb
inc
xchg
outsl
nop
arpl
sbb
bnd
mov
adc
sbb
shl
and
xchg
and
fs
pop
mov
insl
mov
cmp
adc
aaa
cs
adc
leave
cmpsl
iret
push
paddw
movsl
sbb
cmp
sub
sahf
push
nop
dec
and
push
or
ret
subl
out
or
js
movsb
mov
push
sbb
push
popa
cmpsl
sub
test
mov
ret
int
mov
scas
cwtl
bound
ret
xlat
and
sbb
inc
fdiv
and
adc
fnstsw
mov
lret
fsts
and
jmp
and
sbb
movsl
imul
jns
mov
sbbb
fbld
jno
and
adc
pop
fdivs
add
psubsb
add
sbb
push
mov
cmpsb
xchg
cs
sbb
xchg
jne
jbe
push
or
cmpsb
pop
imul
stc
jns
sub
cltd
lret
dec
lds
push
xchg
inc
push
test
ljmp
ljmp
mov
clc
or
fcompl
pop
test
add
jae
inc
xchg
das
pop
insb
cmp
xor
dec
movsl
adc
mov
std
shlb
jg
jp
in
hlt
scas
leave
pop
and
fldl
icebp
sub
add
stos
cmp
push
test
xchg
mov
out
or
lret
xor
mov
mov
rolb
movl
repnz
enter
popa
sarb
pop
lret
rcrl
mov
fisttpl
jge
popl
mov
fstp
loop
sub
pop
sbb
stc
icebp
jmp
add
enter
jmp
loope
popf
shlb
cmp
in
jge
insl
xchg
cmpb
stc
mov
movsl
xor
mov
dec
pop
sub
xor
push
lods
cmp
sub
xchg
hlt
std
or
xchg
in
pushfw
jge
es
and
mov
and
mov
jae
xchg
sbb
in
leave
test
sbb
orl
inc
fimull
repnz
into
dec
cltd
ja
xchg
xor
test
or
pusha
sbb
add
jmp
xor
add
fstps
and
js
call
mov
es
cmpb
xchg
ds
sarl
out
divl
adc
pop
sub
loope
js
mov
jno
outsb
push
arpl
imul
jmp
insl
mov
mov
xchg
lods
mov
dec
ljmp
mov
movsl
sti
ror
outsl
xor
clc
cmp
cltd
pop
div
jo
push
dec
stos
mov
rcll
xor
add
jb
inc
jmp
xchg
jp
cmc
repz
push
das
add
add
fidivl
pop
push
je
lcall
jnp
int
and
pushf
cmp
push
test
jae
pushf
mov
cs
repnz
xor
pop
stos
outsl
sub
xlat
stos
cmp
mov
sbb
jnp
movsl
cmp
outsl
inc
xchg
pushf
fidivl
pusha
pop
xor
repnz
mov
adcb
xchg
add
mov
xchg
jo
push
aam
mov
mov
enter
into
aaa
or
fstp
imul
shl
decl
bound
mov
loopne
sub
mov
inc
xchg
lods
sbb
fisubl
push
fdivrl
pop
xor
scas
mov
and
and
clc
popa
nop
lods
lods
aam
sahf
cli
cmp
popa
sahf
sbb
jb
xor
ljmp
mov
popa
dec
lods
xor
das
jo
dec
sti
mov
or
sub
push
repz
mov
jmp
jecxz
xchg
popa
loop
dec
insb
adc
jne
ss
sbb
mov
dec
int
aas
mov
add
pop
cltd
xchg
loopne,pt
lock
xor
mov
sbb
or
pop
dec
in
call
and
mov
cli
mov
adc
sbb
xchg
call
pusha
sbb
xor
rorb
cmp
mov
jge
pop
pop
in
leave
mov
sbb
cmp
mov
xchg
adc
mov
jg
push
in
dec
in
lds
loop
bound
lcall
and
and
add
inc
addl
fsubs
sub
inc
jbe
pop
cmp
nop
pushf
push
mov
hlt
sub
xor
xor
outsl
xchg
stos
inc
inc
dec
add
enter
jne
pusha
insl
mov
xlat
add
dec
mov
add
xchg
or
or
sub
pop
xchg
test
sub
lock
adc
les
push
mov
fcmovnb
adc
lahf
jle
lret
in
xchg
jb
push
lock
inc
es
pop
hlt
or
aas
sarb
cmp
jb
int
mov
ret
add
mov
jle
std
in
jg
jne
pshufw
clc
stos
cmc
cmp
stc
sahf
ds
xchg
ljmp
jo
stc
inc
push
shl
js
mov
xor
sbb
shll
outsl
in
jg
xchg
pushf
push
jae
std
push
adc
movsb
xchg
sub
dec
clc
das
inc
shll
loope
pop
push
stos
adc
cmpsl
push
fistpl
flds
mov
mov
movsl
pushf
mov
xorb
push
xor
xchg
adc
imul
jne
mov
lret
out
call
into
negb
xchg
stc
fwait
pop
push
inc
imul
sbbb
mov
fnsave
adc
jecxz
jmp
cwtl
in
sbb
dec
pop
out
mov
or
leave
mov
xor
mov
clc
std
mov
movsb
or
or
or
jecxz
stos
sbb
dec
dec
jg
cmp
mov
clc
sub
inc
mov
pop
or
idivb
loope
mov
mov
xchg
jl
xor
mov
rol
es
pushf
loop
test
push
add
lret
je
or
in
pop
or
nop
mov
loope
pusha
jmp
add
or
and
rorl
jg
mov
push
movsb
push
pop
arpl
mov
in
bound
out
xchg
xor
add
xor
enter
mov
push
jbe
inc
mov
inc
lcall
out
push
sub
mov
cli
jno
call
jo
addl
test
in
sti
fdivrl
popf
mov
jl
ds
pop
push
leave
cmpsl
jge
xlat
test
rcll
rcr
jecxz
rclb
cltd
out
sub
xchg
sbb
das
xchg
ss
xchg
stc
lds
adc
fwait
out
or
loopne
pop
out
or
clc
and
xchg
jp
add
sub
es
jno
pusha
cltd
or
and
fisubl
out
outsb
in
cmp
cmpsl
cmp
imul
push
xchg
xor
rorb
pushf
pop
cmpsb
sahf
and
shr
imul
jp
push
mov
rcrb
bound
cmp
xchg
pop
inc
sbb
mov
jne
pop
mov
cmc
push
fldcw
scas
inc
test
mov
pop
jne
mov
pop
sbb
rolb
pop
fbstp
push
fisttpl
adc
and
dec
mov
rcrl
jns
roll
loopne
adc
imul
sub
push
jnp
sti
cmp
push
fisubs
add
dec
rclb
add
adcl
stos
cltd
clc
imul
iret
imul
int3
pop
and
xor
or
xor
subb
push
sbb
les
mov
repz
mov
sub
lods
xchg
mov
adc
pop
mov
hlt
sahf
add
lea
push
push
mov
ficompl
scas
clc
add
loopne
pop
mov
push
ljmp
xchg
ja
pop
and
sub
xor
test
adc
imul
std
xorb
push
rcrl
pusha
loope
or
aad
mov
jno
rcr
fsubrs
jg
cli
test
mov
ljmp
mov
push
insl
sub
xchg
pop
adc
pop
xchg
cmp
inc
xor
push
aam
push
mov
xchg
mov
inc
movsl
test
cmpsb
insl
xlat
sbb
jno
sarl
loopne
ret
mov
adc
and
lret
scas
loope
xchg
inc
lock
mov
mov
mov
pop
aas
out
mov
fisubrs
and
lret
sbb
popa
test
mov
sbb
cmpsl
test
aad
xchg
aaa
lea
cmp
scas
ret
js
push
scas
mov
into
sub
ljmp
jl
sbb
push
adc
sbb
lcall
and
addb
aad
sbb
out
jnp
cmpsb
js
push
push
push
mov
or
sbb
ds
loopne
or
jecxz
push
shrb
js
out
cwtl
mov
les
lods
out
enter
arpl
inc
push
inc
movsl
loop
je
fldcw
aad
cmp
orl
andb
push
in
mov
inc
dec
sarl
sbb
push
mov
popf
shrl
pop
xor
mov
xlat
cli
pusha
fists
mov
das
cmp
je
cli
mov
aam
push
cmpsb
sbb
adc
adc
popa
mov
push
mov
es
shl
insl
fistps
pop
negl
jns
clc
dec
imul
and
int
ds
leave
hlt
out
data16
mov
loope
fmull
jae
jno
sbb
je
ja
cmp
lcall
xchg
cmp
fsubrl
rolb
mov
imul
das
hlt
icebp
dec
sarb
test
cwtl
adc
cli
lcall
jae
cmpl
ret
cmp
sbb
ja
jecxz
gs
pop
cs
sbb
addl
pop
adc
addr16
dec
fistl
dec
movsb
rol
jp
les
adc
int
add
adc
push
out
enter
adc
mov
mov
and
or
xor
dec
cld
mov
jbe
loop
loope
icebp
add
mov
jb
repz
adc
popa
dec
cmp
push
iret
ret
bound
ljmp
inc
jmp
sub
shrl
add
dec
fcomps
punpckhbw
add
repnz
push
pop
mov
pop
ja
mov
lods
leave
repz
jmp
cmp
jb
imul
repz
xchg
or
cltd
imul
sbb
sub
cmpsb
inc
push
lods
sub
and
rclb
xchg
jb
ror
mov
sti
or
ljmp
cmc
pop
jl
roll
imul
scas
push
lods
mov
xor
cmpsb
or
lcall
aad
rol
data16
cmp
repz
shrb
out
cmp
and
jle
sbb
or
xor
jnp
cmp
cmc
jo
mov
sbb
inc
std
sub
movsl
adc
and
xchg
add
daa
insb
mov
jne
cli
cwtl
push
test
inc
out
pop
inc
cmp
jns
roll
inc
int3
test
sbb
inc
pop
pop
dec
lock
lret
and
xor
xchg
lcall
sub
and
xchg
test
mov
stc
rcrl
test
sub
fcoms
push
fwait
fwait
pop
mov
das
xor
mov
inc
mov
xor
sub
lock
push
in
and
movsb
push
jge
add
adc
pop
xchg
dec
push
out
add
sub
ds
sysexit
or
adc
jmp
andl
pop
xchg
repz
iret
and
loop
mov
loop
dec
das
enter
and
ljmp
jbe
xchg
in
mov
stos
cmpsl
adcl
lods
loope
push
mov
jmp
jb
mov
aad
mov
scas
outsl
dec
daa
sub
pop
lock
inc
ljmp
in
fcmovu
push
loopnew
scas
mov
mov
sbb
jbe
pop
add
mov
test
lock
inc
push
and
dec
add
sub
mov
sub
outsl
jne
test
pop
ljmp
fwait
sub
push
or
push
int
imul
sub
jb
mov
inc
inc
jmp
jmp
xlat
add
push
test
inc
fimuls
int3
adc
lret
xchg
jg
dec
or
mov
xor
int3
jnp
xlat
insb
mov
loope
mov
or
pop
bound
fdiv
push
sub
pusha
push
pop
add
into
idivb
dec
std
mov
insb
jns
push
lea
pop
push
data16
nop
lds
pop
push
inc
ljmp
imul
dec
cmpsl
movsl
les
and
pop
in
fmul
adc
das
pop
pop
arpl
xor
or
ds
inc
in
std
sub
xor
sbb
lock
int3
adc
ja
je
into
push
out
mov
jb
add
jmp
cmc
mov
add
and
hlt
scas
or
push
ja
loop
ret
sti
mov
xchg
mov
cmc
test
popf
je
lods
cmp
mov
mov
notl
xchg
je
fldcw
rcr
jnp
cltd
bound
cwtl
mov
push
xchg
sub
mov
mov
or
test
mov
fmull
clc
jle
cmc
add
cltd
sbb
mov
nop
pop
adc
jmp
and
pop
or
test
push
jge
sub
or
push
xchg
test
lcall
lods
popa
or
fs
lcall
mov
lcall
std
or
cmp
hlt
sub
xor
inc
or
jne
int
mov
repnz
push
popf
popf
inc
xchg
jecxz
shl
add
jnp
insb
adc
jge
xchg
cmpsl
pop
gs
popa
les
push
inc
fisubl
mov
sti
push
cwtl
dec
xchg
xchg
aad
inc
ljmp
mov
test
jp
xor
outsb
push
dec
xchg
leave
inc
add
flds
xchg
arpl
mov
mov
test
lcall
addr16
push
xor
imul
xchg
push
mov
inc
lahf
pop
sub
ficomps
push
push
xchg
fisubl
and
out
clc
insb
jne
push
push
mov
and
inc
cs
xchg
fmuls
cld
jp
cmp
sub
fisubl
cmp
push
cmp
or
call
call
mov
push
sub
lods
lock
fcomps
mov
call
sbb
xor
stos
les
cmpb
pop
rorb
mov
fwait
stos
mov
lods
ss
pop
sarb
push
mov
push
mov
or
lret
mov
xor
pusha
add
xor
mov
arpl
pop
jns
cltd
icebp
jb
mov
add
cld
dec
push
sub
outsb
fdiv
pop
sbb
gs
sti
push
lods
inc
mov
xor
xor
and
shlb
mov
addl
gs
test
mov
cmp
and
pop
stos
mov
mov
stc
inc
inc
outsl
push
pop
mov
call
addr16
xor
dec
test
cmp
out
and
stos
mov
and
mov
or
and
decb
int3
hlt
addb
fwait
push
out
popf
push
daa
push
dec
test
loope
out
shrb
out
xlat
mov
repnz
add
lea
out
enter
cmp
or
adc
inc
pop
movsb
sbb
push
mov
dec
dec
mov
fwait
movsb
push
sub
mov
jns
test
nop
push
ds
xchg
cmpsb
mov
sub
mov
xor
jns
xchg
cmp
sub
or
insl
pop
xlat
push
pshufw
mov
dec
dec
xchg
mov
mull
xlat
pop
je
sbb
int3
orb
jle
call
fsts
jnp
pop
mov
subl
int
sbb
fdivrs
pop
or
out
mov
sbb
icebp
lret
or
fnstsw
sahf
xlat
ret
iret
xchg
mov
int3
sub
ja
push
xchg
cwtl
es
jbe
les
sub
dec
xchg
push
nop
lcall
inc
and
lahf
arpl
xchg
in
add
test
mov
push
pushf
std
ret
daa
fldl
adc
mov
xchg
movsb
xchg
push
push
mov
and
push
xchg
aad
jg
imul
call
ret
lret
stos
xchg
adc
cmp
add
jbe
outsb
push
jnp
mov
and
rep
push
push
or
add
add
sub
cmp
or
inc
pop
jo
ret
dec
cmp
test
push
and
push
lods
jns
dec
aaa
jns
mov
into
push
mulb
rorl
gs
fiaddl
dec
push
push
fistl
sub
adc
es
scas
add
orl
std
xchg
adc
jg
insl
repnz
scas
inc
mov
cmpl
add
or
shll
cltd
mov
cwtl
inc
insl
or
sub
in
cli
cmp
scas
mov
adc
popf
adc
xchg
pop
xchg
cmp
and
or
mov
lret
xchg
test
lcall
popf
hlt
xchg
xchg
cmp
add
pusha
adc
jb
adc
mov
xchg
mov
inc
sbb
pop
fistl
sti
push
dec
mov
jo
das
rcl
push
push
push
rcrl
mov
adc
jmp
into
icebp
sbb
jne
addl
fs
loopne
stc
lcall
sbb
mov
cs
sbb
cmp
bsf
cmp
jno
cmp
dec
add
add
addr16
addr16
in
mov
sub
pcmpgtb
fldl
mov
pop
mov
popf
sub
leave
fcomps
lahf
cmc
adc
sub
dec
push
loope
fsts
mov
sub
pushf
dec
pop
pop
repnz
out
out
movsb
inc
xchg
icebp
ret
fs
cmp
pop
scas
sub
xchg
aas
xchg
push
and
lds
rep
cmp
pop
dec
push
sub
or
ds
lret
arpl
xor
add
jae
pushf
hlt
inc
pop
mov
pop
leave
push
pop
adc
sahf
mov
addr16
cltd
sbb
clc
xor
add
into
push
jp
daa
cmp
cltd
mov
leave
pop
insl
idivl
fwait
cs
cmpsl
xor
loope
ret
jae
inc
sbb
mov
push
es
add
push
test
mov
inc
sbb
lods
push
sub
vminsd
test
xchg
dec
int
ja
add
mov
aam
adc
test
dec
mov
imul
xchg
mov
jle
mov
es
mov
jo
mov
push
sbb
mov
xchg
mov
xchg
lret
xor
scas
mov
fsts
ficoml
sub
ds
jns
cli
push
inc
inc
rolb
mov
fisubl
mov
movsb
mov
mov
sub
lret
push
mov
push
cwtl
pusha
iret
inc
sbb
out
stc
pop
adc
ja
cmp
fsubrs
or
and
negl
cmc
subb
jle
lods
scas
sub
and
xor
lods
or
sub
push
imul
stos
mov
jg
out
adc
mov
mov
outsl
pop
sub
inc
xchg
aad
sbb
test
cs
add
andb
mov
and
cmpsb
out
aaa
out
xchg
add
xchg
xorb
nop
in
sbb
repz
mov
or
xchg
or
pop
decb
jp
lahf
in
adc
aad
adc
dec
in
adc
and
adc
sub
bound
loopne
mov
xlat
fnsave
jbe
ss
mov
mov
js
cwtl
xor
xchg
cli
repz
mov
lds
sti
inc
mov
stos
mov
xchg
lods
fnstcw
imul
js
mov
ret
fnsave
jns
outsb
mov
ret
push
in
push
mov
sbb
scas
mov
xlat
xor
add
pop
add
pop
insl
or
lods
insl
and
xchg
dec
and
mov
add
test
scas
inc
mov
aam
add
out
cwtl
dec
push
popf
cli
into
xlat
repz
jmp
or
stos
lods
cmc
cmp
pop
add
inc
cwtl
pop
dec
and
push
push
ss
or
add
dec
add
outsl
push
pushf
mov
jl
lock
out
ret
aas
pop
imul
mov
stc
outsb
xchg
lds
rorb
fwait
rcl
leave
add
adc
cmp
dec
repnz
and
imulb
xor
jg
fdivs
push
lea
cmp
mov
mov
shlb
push
out
js
jle
int3
pop
movsb
push
mov
test
cmpsb
dec
inc
es
scas
pop
mov
sub
outsl
mov
int
fnstenv
lcall
jg
adc
jmp
shlb
insl
dec
movsl
xchg
sbb
adc
xlat
mov
in
icebp
dec
sbb
push
xchg
scas
insl
cs
loop
ss
dec
aas
negl
pop
bound
cmp
dec
addr16
xchg
and
pop
ret
mov
inc
ja
xchg
lret
in
push
aam
xor
cltd
xchg
sbb
pop
or
les
cmp
cmp
ret
jae
push
xor
xchg
sbb
pop
xchg
jge
pop
jo
arpl
adc
shr
imul
pop
sbb
adc
sbb
test
inc
cmp
add
in
fcmovnu
mov
stc
and
ljmp
adc
dec
clc
push
xchg
subl
fs
rol
movsb
push
xor
mov
mov
mov
cmpsb
push
xchg
mov
mov
pop
xchg
sbb
sbbl
jg
or
sbb
pop
repz
lods
dec
mov
ficompl
jle
inc
inc
jmp
pop
lret
scas
jbe
sbb
mov
mov
call
bound
bound
jge
dec
out
fdivrl
mov
jne
cmp
imul
jnp
lret
cmc
pop
sub
sub
daa
mov
add
and
mov
sahf
mov
sub
gs
ja
lcall
mov
inc
in
push
gs
add
sbb
dec
icebp
pusha
lods
cmpsb
jmp
lods
cmp
or
cmp
std
out
mov
lods
adc
xchg
mov
stos
mov
and
popf
push
insb
mov
mov
xor
sub
mov
lods
push
xchg
add
inc
repnz
loop
pushf
add
mov
xor
cltd
sub
add
cmpb
sbb
out
xchg
sbb
movsb
mov
aas
shll
lods
hlt
jp
jg
push
shrl
inc
nop
jmp
std
inc
lds
or
out
mov
fcompl
cld
push
cli
dec
shll
lahf
mov
and
push
outsb
mov
push
in
lea
orb
jo
out
std
out
xchg
cmp
stos
mov
or
orl
pop
stos
fdivr
sub
sub
xorl
roll
addb
lods
aam
test
and
inc
jecxz
cld
mov
mov
lea
int
mov
addr16
test
lock
pop
sbb
notl
sub
pusha
fsubrs
shll
out
scas
push
aas
mov
jne
push
dec
hlt
repnz
pop
pop
and
test
sahf
pop
mov
mov
cmpb
cli
jg
int3
ror
inc
push
xchg
mov
test
pop
sub
daa
push
push
mov
sub
inc
out
inc
leave
xchg
mov
and
jae
xchg
inc
out
rcrl
inc
inc
pop
mov
in
inc
dec
jmp
jle
xchg
xor
addr16
jl
rol
xor
or
mov
dec
xchg
xchg
gs
or
loope
mov
mov
sti
mov
cmp
dec
add
adc
pop
mov
pop
divb
and
addr16
mov
sti
subb
cmp
sarl
sbb
daa
movsl
lret
xor
cltd
push
cmp
mov
subl
mov
in
sbb
jns
fistl
mov
push
repz
shrl
popf
movsl
fidivs
sub
lea
mov
cwtl
sub
repz
lahf
adc
pop
push
ss
in
insl
mov
sub
jo,pn
lea
popf
sub
sub
aas
mov
push
rcll
xor
xchg
and
sub
mov
dec
icebp
fisttpl
shrb
jae
mov
mov
lret
test
rcl
rcrw
jmp
and
movsl
cmp
xor
mov
sahf
leave
cmp
mov
loopne
push
add
inc
ljmp
scas
and
idiv
or
mov
addr16
js
push
jmp
or
icebp
cmp
cmc
orl
sbb
xor
add
stos
mov
sbb
mov
xchg
mov
jb
mulb
ret
push
xor
xor
hlt
or
test
insl
dec
nop
sarb
js
mov
pushf
mov
cmp
or
lahf
sbb
cmc
sbb
push
adc
push
push
jl
add
lahf
xor
mov
mov
inc
add
and
cmpsl
or
mov
cli
add
mov
out
pop
xchg
pop
cmpsl
inc
idivl
dec
xor
sbb
roll
lock
outsl
pop
xchg
outsb
fstl
ljmp
fwait
mov
jae
gs
inc
enter
mov
jno
fcmovnu
lcall
cmp
dec
das
clc
in
std
ret
stc
sub
daa
lods
push
push
je
add
cmp
add
cmpsb
cltd
ja
test
mov
cmp
dec
fsts
push
mov
inc
push
adc
dec
fldcw
jb
in
jns
popa
fidivs
lcall
push
mov
mov
adc
sbb
mov
inc
rcr
lock
push
inc
jl
jmp
xor
cmp
ret
inc
lahf
or
mov
insl
pop
push
cmp
test
jge
cmp
pop
fucom
pop
les
movsb
movsl
cwtl
xchg
add
or
mov
jnp
dec
mov
jg
or
mov
mov
adc
sbb
mov
addb
addb
sarl
mov
lods
sub
clc
dec
jmp
sbb
leave
lret
and
xchg
lea
or
in
ss
jle
and
jns
push
mov
imul
aas
sbb
adc
rcll
pop
shll
leave
xchg
das
xchg
dec
roll
push
push
outsb
outsl
mov
jmp
repnz
daa
loop
bound
pop
jnp
sub
sub
imul
insb
pop
test
cld
xchg
mov
ret
and
xchg
push
loope
adc
shl
or
test
pop
rclb
mov
inc
add
or
aas
add
loop
cmpsl
js
adc
out
outsl
data16
jbe
hlt
jg
sub
pop
push
das
dec
jmp
mov
ljmp
scas
addr16
int
call
out
loope
mov
sbb
insb
jl
ficomps
hlt
pop
ret
cmp
sbb
fisubrs
mov
pop
shlb
and
jl
push
mov
adc
dec
loope
gs
or
cmp
jl
xchg
pop
sub
jo
in
outsb
cmpsl
push
mov
pop
mov
subl
inc
mov
lds
outsl
push
and
adc
mov
dec
push
xchg
inc
clc
sarb
ret
add
jp
and
or
sub
xchg
outsb
jge
pop
inc
pop
cli
sahf
mov
dec
mov
mov
ja
pop
sbb
add
jg
negb
inc
cmp
mov
dec
mov
test
out
inc
sub
lea
adc
aaa
adc
je
jge
or
mov
or
mov
popw
pop
xor
xor
sti
iret
xor
and
sub
mov
sbb
jge
jnp
packssdw
lds
leave
adc
sbb
push
pop
xor
xor
fldl
adc
fwait
scas
jnp
mov
ljmp
test
std
jo
les
cmp
xchg
stos
jnp
sbb
into
dec
mov
and
stc
cmp
test
adc
cld
mov
arpl
lds
test
sbb
fldcw
xchg
mov
mov
jge
xor
xor
pop
bound
add
fdivrp
notb
add
push
push
push
in
or
fxch
int
stos
mov
ror
push
popa
in
adc
jae
mov
and
xor
mov
dec
push
in
add
in
iret
js
adc
or
mov
push
xor
imul
fucomi
xor
pop
push
cmp
cmpsl
addr16
mov
test
dec
push
je
xchg
cmp
test
jnp
xchg
mov
push
clc
xchg
mov
inc
xchg
jp
js
dec
sbb
mov
int
repnz
mov
in
xor
sbb
mov
stos
inc
cld
jge
lahf
pop
mov
xchg
mov
test
xchg
pop
repnz
dec
push
jp
jbe
js
pop
and
into
add
in
xor
and
shr
lret
adc
cmp
xlat
xorb
adc
subb
ds
icebp
jl
jb
in
enter
frstor
andl
push
push
nop
sbb
inc
cmpsl
mov
test
xchg
xchg
mov
addr16
out
mov
sub
call
lea
ret
int
test
out
setno
cs
bound
lcall
adc
enter
imull
add
inc
xchg
cmp
add
stos
jle
push
mov
idiv
nop
je
in
mov
in
ret
mov
xor
push
pop
hlt
add
aaa
ret
mov
jae
cs
inc
add
xor
cs
mov
sbb
and
push
mov
jecxz
cs
xchg
jno
xchg
mov
inc
aad
fldcw
pop
lds
call
and
jmp
pop
shrl
inc
sub
mov
cmp
sbb
sar
pushf
dec
je
rol
test
in
pop
inc
add
in
xchg
in
and
sub
out
imul
xchg
in
out
outsl
shl
jle
xor
xor
je
fmulp
dec
in
outsb
push
add
cmp
mov
outsb
in
ret
ja
lods
xchg
cltd
dec
addr16
add
inc
mov
fnstsw
mov
xchg
dec
rcl
fmull
inc
mov
push
mov
lods
xor
jb
test
dec
adc
fucomip
sbb
jle
sub
mov
cmp
xor
das
std
es
mov
sub
adc
sti
es
pusha
mov
aas
outsl
sbb
ret
sbb
sub
adc
adc
jle
fwait
arpl
pusha
dec
ds
sbb
sbb
pop
and
jno
rol
mov
lock
aaa
mov
sbb
mov
mov
jne
call
mov
push
lea
ret
jp
cmc
push
dec
gs
call
jp
cltd
ja
popa
push
push
es
lods
push
pop
push
incb
popa
fucom
loope
and
call
fisubrl
xor
jne
sub
jecxz
mov
das
mov
xchg
pop
es
pop
mov
inc
sbb
mov
and
std
xchg
lcall
imul
pop
and
mov
stc
pop
adc
xor
lea
sub
and
pop
jb
mov
lds
loope
ds
xchg
xchg
mov
inc
mov
mov
jmp
add
push
dec
cld
repnz
imul
aas
xlat
roll
movsl
pusha
movsl
int3
cmp
aad
aam
jp
xchg
inc
mov
push
notl
adc
inc
in
dec
mov
insl
in
hlt
adc
shr
push
imul
ljmp
xchg
scas
mov
imulb
stc
and
aaa
push
mov
imul
mov
mov
data16
or
pop
jmp
cs
imul
fst
add
in
inc
out
add
sbb
mov
or
addr16
inc
push
jp
xchg
push
not
out
in
mov
outsl
sub
mov
push
jb
pop
jmp
es
xchg
cltd
push
inc
jns
mov
loope
cmp
push
xor
aas
xor
es
mov
jno
xor
daa
mov
adc
push
scas
arpl
sub
outsl
pop
adc
das
out
mov
push
xor
dec
mov
cmp
inc
fildl
mov
mov
pushf
fiaddl
inc
push
popl
jecxz
fsubrs
mov
pushf
lods
pop
in
jne
sub
cmp
aad
cmpsl
mov
pop
test
xchg
sahf
push
or
ds
xor
hlt
outsl
sub
mov
test
movsl
mov
das
test
js
mov
pop
push
arpl
sbb
mov
pop
loopne
pop
out
jg
test
mov
pop
ret
int
dec
mov
or
fsubrs
push
cmpsl
clc
les
cmc
jmp
dec
fcmove
jmp
dec
hlt
sbbb
xlat
pop
xchg
xorb
aam
sbb
sub
dec
sbb
mov
inc
mov
pop
jecxz
add
loope
dec
sub
xchg
sbb
sub
std
sub
cmp
dec
pop
aaa
dec
sub
icebp
test
cmp
ss
lods
dec
mov
cmp
insl
popf
push
sbb
out
imul
dec
pop
imul
xchg
lods
or
int
roll
repnz
lock
imul
push
adc
lea
mov
sub
ja
sub
xchg
pushf
stos
stos
fdivrl
mov
andl
jmp
stos
les
test
mov
cs
stos
or
testl
aaa
mov
adc
add
scas
and
cwtl
neg
xor
push
loope
cwtl
cmp
lcall
out
jle
pop
test
jle
and
adc
mov
jecxz
aam
cmc
adc
push
orl
int3
js
lds
adc
jae
pop
jp
fbstp
pop
pop
ja
cmc
lods
mov
pop
loope
test
subl
pusha
push
jecxz
lods
sub
arpl
leave
inc
cmp
repnz
lret
sbb
pop
mov
jmp
dec
test
xor
push
jb
movsl
fmul
and
cmp
aas
xchg
dec
hlt
shlb
test
sub
lds
pushf
movsl
loopne
jle
lds
adc
or
xchg
xor
loope
pushf
sub
pusha
lahf
adc
je
repz
ljmpw
mov
dec
jg
xlat
adc
mov
mov
push
rol
pop
xlat
dec
inc
adc
and
add
pop
bound
jle
lcall
push
outsb
xor
add
add
lea
rorl
push
jbe
jge
jecxz
loop
nop
fistps
jno
rcll
std
jo
xchg
clc
jecxz
dec
inc
push
and
jg
push
xlat
xchg
enter
sbb
pop
push
addb
cld
bound
cmpl
je
push
cmpsb
or
lcall
int3
jmp
dec
pop
clc
out
mov
mov
popa
xchg
idiv
cmp
and
inc
ljmp
sbb
jge
and
hlt
stos
enter
xlat
sub
cmpsl
daa
or
lods
clc
xchg
sbb
push
adc
dec
inc
ret
adc
cld
test
out
mov
mov
dec
es
jno
iret
sbb
or
xchg
mov
testb
out
pop
roll
mov
cmpsl
mov
pop
enter
jb
movsl
xor
inc
hlt
mov
and
fcmovnbe
outsl
clc
cmp
ja
xchg
mov
push
jecxz
adc
lds
push
into
not
mov
leave
or
jecxz
inc
ret
jle
aam
adc
out
ret
add
test
mov
ret
fdivrp
insl
mov
jb
or
movsl
mov
roll
adc
pop
fcoml
adc
mov
xor
sub
jns
lcall
into
mov
test
je
mov
pop
push
jecxz
loopne
cmp
mov
es
enter
insb
jle
dec
or
jecxz
mov
fwait
inc
sub
call
mov
push
add
je
stos
add
or
mov
imul
push
cmc
jne
push
jb
iret
xchg
jecxz
jne
insl
outsl
int
in
inc
mov
std
adc
push
add
arpl
pop
jo
pop
cmp
pop
xor
cmp
fldt
or
mov
js
pop
test
frstor
movsl
xchg
xor
xchg
lret
mov
js
or
ds
pop
inc
mov
aad
push
repz
insb
mov
pop
in
xlat
add
add
mov
cli
mov
sbb
test
push
sbb
mov
mov
adc
sub
lea
jge
test
outsb
or
sbb
enter
in
jg
inc
sub
leave
inc
cltd
rcr
adc
insb
aas
in
jno
movsb
clc
shrb
outsl
mov
cmpb
xchg
loope
cmovne
mov
mov
fmull
repz
jmp
in
sub
dec
shll
sub
loope
add
push
stos
sbb
out
stos
jb
subl
lcall
dec
dec
clc
dec
cmp
mov
and
out
leave
iret
cmp
loopne
mov
std
jno
xor
outsl
sbb
in
cmp
out
and
adc
stos
mov
movsl
sbb
inc
and
shrb
arpl
dec
mov
sub
es
out
or
les
ljmp
aam
pop
icebp
add
sbbb
jae
loope
add
arpl
aad
lods
dec
lret
movsl
or
fidivs
xchg
imul
test
sub
mov
mov
pushf
push
das
pop
sub
ret
pop
insl
test
push
xor
fwait
nop
pushf
rcl
push
clc
rolb
mov
sarl
lods
lds
jo
pop
mov
xor
loopne
sti
jno
andb
pop
or
rcll
aas
and
mov
mov
xchg
cmpsl
cmp
arpl
pop
pop
cli
sti
mov
jnp
roll
in
fdivrs
aaa
mov
test
pop
sbb
into
xchg
mov
icebp
andb
int
xorb
and
adc
mov
add
js
out
inc
repnz
mov
jle
imulb
mov
xor
shlb
pusha
ret
sub
es
movsl
clc
fldt
cmp
or
push
mov
and
xchg
mov
sub
xor
rcrb
movsb
mov
das
xchg
test
mov
or
adc
mov
xchg
mov
into
mov
imul
xlat
xchg
jge
push
lea
push
fiadds
invd
insl
sahf
scas
sub
and
loopne
arpl
push
cltd
mov
dec
gs
fdivrl
jo
sbb
ret
lods
test
and
stos
jmp
enter
push
inc
insl
cmpb
push
lds
sbb
roll
sahf
jmp
cs
pop
movsb
sub
lcallw
hlt
nop
sub
inc
arpl
dec
ss
cmpsl
int3
push
out
xchg
outsb
mov
das
loope
jo
jmp
addl
lret
mov
movsl
repnz
movsl
push
aaa
inc
ds
pop
pop
cmp
test
adc
enter
mov
sub
dec
pop
data16
xor
add
negb
mov
out
es
dec
arpl
adc
xchg
inc
out
sahf
movsl
mov
jb
outsb
loope
push
ljmp
js
daa
push
sub
fs
cmp
xor
xchg
jb
in
scas
xor
mov
jae
std
xor
sub
out
scas
push
push
adc
push
jl
sbb
pop
push
xlat
xchg
jmp
nop
cltd
test
sahf
sub
mov
sbb
cmp
shrb
in
adc
push
mov
push
fsubl
scas
mov
adc
jp
push
movsl
in
cmp
loope
and
shrb
cmc
scas
lea
mov
aaa
in
lret
mov
mov
lea
addl
push
mov
fwait
int3
push
sub
add
mov
xor
inc
loop
pop
fdivl
push
add
sbb
cmp
xchg
add
inc
neg
cs
push
clc
fld
cmpsb
xchg
adc
and
movsl
sub
ljmp
mov
pop
adc
adc
and
mov
popf
insl
loopne
fdivrs
sahf
les
cmp
ret
inc
cmpsb
lret
or
adcb
mov
scas
imul
iret
icebp
sti
mov
lcall
daa
test
xor
mov
imul
xor
fisubl
pusha
adc
push
cmpsb
push
push
mov
xchg
sbb
or
fnsave
and
push
shlb
cmp
fisttpll
mov
sub
mov
out
fbld
mov
shll
xchg
hlt
cmp
cmp
cmc
sbb
mov
push
arpl
pop
lret
jae
das
mov
xchg
arpl
stc
add
mov
in
jne
mov
in
iret
aas
xchg
leave
out
int3
call
mov
sub
jae
inc
lea
shlb
and
sub
cwtl
xchg
fs
in
pop
fwait
mov
test
aas
pop
negb
and
jl
sub
aaa
mov
sbb
mov
in
dec
push
cltd
rclb
add
fsubrs
xor
sbb
adc
push
int3
das
xor
fists
mov
adc
inc
shll
psubsb
lds
lcall
sbb
mov
lock
rorb
dec
out
into
adc
jo
cmp
or
out
movsb
scas
jle
popf
dec
mull
icebp
ja
fs
adc
sub
xchg
mov
xlat
pop
flds
popf
xchg
loope
xchg
fimull
pop
xchg
xor
jecxz
cli
daa
sub
lahf
nop
pop
cld
cmc
ja
dec
adc
add
pop
mov
insl
scas
pop
mov
popf
je
ljmp
pop
mov
mov
xchg
syscall
push
dec
adc
into
pop
jle
push
negb
jo
xor
jbe
sub
adc
movsl
fs
push
push
adc
aad
neg
add
aaa
pop
xor
mov
ret
std
movsb
ss
dec
add
cmpsb
or
int
inc
sub
iret
adc
insl
add
pop
rorb
add
mov
cmp
push
fstl
mov
shll
jo
faddl
mov
cmp
mov
cmpsb
addl
enter
cld
jle
push
mov
shll
sbb
and
jecxz
ret
jmp
out
xchg
add
or
pop
cld
test
mov
lods
cmc
adc
xchg
push
inc
mov
outsb
add
scas
lds
xchg
rcl
nop
push
rorl
pop
xor
push
popa
fmul
notb
shrb
xor
fiadds
mov
add
mov
stos
rcrl
test
std
int3
xchg
pop
adc
or
mov
and
std
add
sub
jbe
insl
adc
dec
jle
mov
cmp
lods
testl
clc
push
leave
xchg
imul
jge
push
xor
lea
enter
push
push
fnsave
jnp
and
pop
jle
iret
push
sbb
mov
mov
sub
or
ffreep
push
clc
ss
jg
out
mov
sub
jl
outsl
lret
jno
das
mov
shl
or
cs
cs
push
stc
push
js
jge
addb
jbe
pop
dec
call
xor
out
cmp
mov
pop
ret
xchg
outsb
outsl
mov
add
push
sbb
xor
pop
jb
mov
or
xchg
pop
movsl
jecxz
dec
outsb
mov
dec
dec
dec
adc
int3
popf
enter
jno
pop
sbb
test
adc
mov
dec
pusha
adc
fwait
les
push
lret
movsl
pop
scas
xchg
jl
cli
xchg
xlat
notb
jmp
adc
add
xchg
hlt
mov
cmp
mov
xchg
bound
jmp
jbe
mov
pcmpeqd
xchg
xor
lcall
mov
outsl
sbb
cmp
xor
jecxz
cmp
into
add
pop
in
mov
inc
lea
xor
push
addl
add
push
add
es
push
pop
insb
cwtl
sbb
sub
fdivr
add
sub
jae
sub
xchg
mov
inc
add
imul
xor
or
jae
mov
xchg
jno
inc
fs
or
out
add
icebp
repz
mov
cli
ljmp
jns
mov
push
lret
jecxz
dec
test
scas
bndldx
clc
push
jne
pop
mov
push
decb
aad
mov
mov
add
pop
sbb
push
mov
mov
mov
or
bound
push
sub
cmp
int3
stos
jns
les
negb
aaa
push
xor
shrl
xchg
repz
jnp
mov
jg
cmc
jle
lahf
jnp,pn
stos
sbb
int
inc
inc
pusha
imul
sub
xchg
ret
bound
sahf
jp
push
adc
jb
int
leave
jge
pop
cmp
push
stos
mov
lods
sbb
addl
cmp
sub
icebp
add
sbb
fwait
pop
xorb
fnstcw
mov
xor
repz
nop
xchg
mov
mov
dec
lods
outsl
mov
pop
enter
or
dec
test
add
jbe
js
push
jns
mov
pop
jno
imul
cwtl
in
lcall
cmc
xchg
dec
fwait
popa
mov
std
xchg
cld
insb
and
std
mov
cmpsl
xor
popf
inc
mov
lret
inc
adc
cmpsl
nop
or
cmp
push
mov
sbb
cmp
outsl
les
jg
adc
pusha
popf
and
push
popa
aaa
int3
dec
push
dec
subb
scas
mov
clc
mov
loopne
adc
xchg
mov
pop
out
test
add
mov
mov
sbb
mov
mov
rcrl
lcall
rcl
and
data16
cmp
xor
xchg
dec
orb
cmp
adc
fisttps
adc
mov
adc
inc
icebp
jmp
pop
dec
jbe
rcrb
xor
mov
add
mov
out
jae
pop
roll
jl
test
inc
sar
dec
je
lock
loope
lret
jg
xor
jae
mov
andl
cld
pop
push
push
jb
pushf
mov
cld
movsb
sub
out
xchg
popf
mov
pop
cmpsb
cli
repnz
lahf
mov
pop
fnstenv
outsb
sbb
xchg
test
inc
aam
or
pop
es
popf
cmp
sbb
jo
pop
jno
dec
pop
adc
ret
cltd
sbb
ds
ja
xchg
ror
dec
sub
sbb
test
sbb
mov
cmpsb
arpl
mov
sbb
pop
xor
pop
sub
or
mov
push
xchg
cwtl
adc
cmpsb
shrl
ret
cmpsb
sub
cld
pop
jge
or
fidivs
test
inc
test
sub
xchg
in
pop
cltd
inc
ret
add
xlat
out
sbb
movd
std
ljmp
jns
pop
incb
jns
popl
movsb
in
fldenv
xchg
pop
add
clc
in
imul
popa
std
punpckldq
cmp
mov
xchg
push
ret
push
and
in
xchg
add
out
out
xor
cmp
mov
not
scas
xchg
push
xlat
dec
jp
shlb
ret
call
xchg
mov
ds
in
or
in
in
cld
pop
jne
xlat
sbb
xchg
sahf
mov
pop
fnstenv
das
cli
cmp
xor
and
je
ljmp
mov
jmp
mov
dec
leave
testl
add
daa
mov
call
push
pop
xchg
inc
cmp
add
sahf
mov
cmp
and
push
ss
nop
push
clc
je
push
and
mov
sub
popa
xchg
mov
leave
sarl
test
out
fists
mov
xchg
inc
dec
add
lea
mov
xor
shll
xor
jle
pop
or
pop
adc
and
shlb
or
fcoms
shr
cmp
push
aas
pop
int
adc
xor
out
inc
in
cli
mov
mov
orb
adc
mov
dec
std
ficompl
faddl
jo
xor
push
mov
cmpsb
and
cmp
jae
imulb
imul
dec
push
xchg
stos
jb,pn
pusha
out
pop
ficomps
repz
lods
sbb
imul
lret
in
cmpsb
pusha
inc
inc
mov
and
rorl
ss
int3
stos
mov
roll
lock
inc
xchg
dec
daa
sbbl
icebp
mov
bnd
jl
fisttps
lahf
add
add
out
bt
add
test
mov
push
push
movsl
dec
adc
ljmp
add
sub
lahf
repz
fs
sarl
sbb
into
mov
sahf
mov
xor
dec
mov
insb
or
dec
mov
adc
sbb
bswap
push
mov
das
xor
popa
mov
rcll
xchg
sbb
test
lcall
add
push
adc
test
cltd
jbe
or
inc
js
dec
stos
mov
lods
call
mov
shll
mov
mov
cltd
stc
dec
das
es
stos
bound
push
bound
mov
vdivps
cmp
sbb
cmpsl
cmp
and
xor
xor
add
mov
fisttpll
test
push
mov
mov
mov
pop
mov
pop
int3
inc
aam
iret
sahf
cmpsl
sbb
push
test
lahf
pop
mov
inc
add
inc
xlat
and
cwtl
add
out
addr16
scas
xor
imul
out
jnp
cwtl
and
jmp
in
stos
and
jbe
push
outsl
out
adc
and
es
rcrb
imul
sbb
cwtl
jo
xchg
push
sbbl
repnz
pop
pop
rcrl
aaa
scas
add
jb
fisubrl
xor
sub
ljmp
dec
std
out
imul
push
fimull
movsl
add
addr16
lea
clc
adc
jae
cmp
mov
mov
out
jae
dec
pop
add
and
inc
and
in
sbb
adc
dec
push
rcl
mov
add
out
aaa
and
mov
push
xor
in
mov
sub
xor
pop
repz
cmpsl
jns
fdivl
adc
mov
mov
iret
mov
jns
add
xor
cmp
mov
inc
inc
in
out
mov
push
push
pop
mov
pop
dec
movsl
and
outsb
or
xchg
test
adc
pusha
push
pop
push
test
dec
xor
dec
dec
xor
jnp
into
pushf
lods
cs
adc
insb
cmp
arpl
lods
cmp
or
ret
mov
cmp
divb
xor
test
jnp
push
scas
lods
cmp
shll
adc
int3
in
test
icebp
test
cmc
push
aam
fs
mov
add
sbb
sub
insl
insb
and
adc
rolb
out
inc
fstps
push
ja
les
aaa
hlt
imul
pop
cli
loop
jno
fists
mov
out
out
mov
inc
out
movsb
or
outsb
xchg
loop
call
inc
fstps
ret
inc
mov
stos
cmp
and
out
add
jb
dec
movb
xor
jp
popa
cmpsb
xchg
xchg
pop
add
push
xchg
imul
lea
movsl
call
scas
lea
cltd
push
xor
jbe
pusha
lcall
nop
mov
filds
leave
sub
mov
gs
in
adc
mov
aaa
int
and
and
pusha
xor
sub
out
insl
out
imul
sub
mul
aas
cmp
in
jmp
dec
scas
push
clc
mov
mov
in
adc
cmp
cmc
imul
xchg
sub
mov
out
orb
push
add
cmpsb
mov
fs
xchg
and
sub
sub
pusha
dec
push
mov
jno
inc
add
fs
adcl
hlt
and
hlt
mov
les
mov
dec
cld
xlat
xchg
and
int3
nop
fbld
push
cmc
jns
loope
lods
add
incb
dec
enter
dec
push
loope
mov
xor
sbb
rcrb
sub
arpl
dec
xor
fdivl
adc
fmul
lret
shlb
mov
and
push
inc
scas
mov
mov
xor
in
loopne
fimuls
dec
add
cld
js
cltd
cmpsl
ljmp
xor
and
or
or
stos
and
mov
push
dec
xor
lcall
and
sub
stc
add
add
je
mov
insl
inc
mov
arpl
ret
xchg
sarl
or
pushf
and
test
aaa
jbe
cmp
xor
int
push
xchg
or
mov
lcall
shr
stc
insb
push
shl
sbb
call
lds
inc
jb
scas
dec
lea
aas
jmp
inc
or
dec
sahf
in
lds
mov
add
dec
cld
pop
pop
add
es
add
in
sti
repnz
and
sub
inc
add
shll
push
cmp
mov
and
push
repnz
and
xchg
dec
jp
jg
sub
mov
fldt
mov
push
es
es
jb
cmp
call
push
push
aad
mov
jno
mov
stos
xchg
repz
clc
out
call
add
lock
sbb
pop
mov
xchg
or
and
scas
movsl
inc
lods
lock
repz
inc
aas
pop
lret
dec
pop
int3
inc
adc
cmp
call
mov
or
inc
xor
clc
rcr
adc
fnstenv
pop
inc
enter
xchg
sarb
or
cwtd
mov
int
iret
int
cmp
ficomps
ret
dec
push
out
test
cs
outsl
xchg
loop
sub
add
dec
sbb
xchg
sub
loop
pop
out
jge
cmpsl
in
ficoml
pop
lods
outsl
inc
pop
movsb
test
shlb
daa
jge
sbb
stos
pushf
xor
jge
fsubs
sbb
adc
popf
popl
cmp
or
xor
dec
xchg
add
clc
add
roll
lahf
hlt
sarb
mov
jno
clc
les
mov
mov
pop
lcall
sub
fs
mov
jmp
enter
pushf
jp
lcall
push
cmp
out
push
push
fbld
ret
daa
mov
ss
xor
enter
or
cmpsl
rcl
xor
push
add
push
and
popa
mov
sqrtps
sbb
cmc
xchg
pop
cwtl
cmp
enter
jno
hlt
xor
add
sarl
jecxz
mov
xor
shrl
mov
pop
push
pop
cli
jbe
inc
idiv
ds
push
dec
fstpl
mov
push
or
dec
cmpsl
inc
sbb
jge
je
aam
mov
fwait
inc
cmp
jmp
push
adc
imul
xchg
pop
rcll
repz
xor
mov
sarb
daa
or
int
inc
cmp
adc
cmpsb
pop
bound
mov
popf
cmc
and
jecxz
in
in
lret
fsubs
outsl
dec
push
sbb
cmp
in
sbb
stos
pop
pop
adc
jae
js
pop
out
into
pop
es
cmp
inc
xchg
pop
adc
jmp
fildll
lahf
add
jmp
mov
rcr
and
roll
and
push
mov
mov
mov
ljmp
pop
jae
jnp
or
lds
cli
cmpsb
mov
mov
adc
inc
adc
push
shlb
jp
repnz
pop
adc
or
stos
mov
iret
or
sbb
stos
subl
cmpsl
cmp
fldpi
ds
dec
loope
push
addr16
pop
fistpl
add
lcall
test
sbb
jbe
push
pop
xchg
adc
stos
pushf
push
dec
or
andl
aad
push
stos
or
adc
cli
pop
jg
mov
dec
rcrb
dec
ljmp
dec
divl
dec
and
adc
mov
jg
test
dec
int3
ds
add
fcos
rorb
sbb
inc
push
stc
popa
mov
rolb
lea
add
arpl
in
mov
sub
inc
or
lea
jbe
repz
inc
into
adcb
sub
add
daa
push
mov
push
outsb
sub
popf
xorb
cmpsl
xchg
pop
fwait
data16
mov
add
das
mov
inc
mov
clc
and
lods
enter
mov
ljmp
xchg
inc
adc
xor
lock
fs
add
ss
push
arpl
outsl
imul
lcall
add
or
subb
imul
sbbl
stos
mov
out
icebp
outsb
cs
jbe
jne
cli
xor
mov
mov
test
mov
out
shlb
sahf
insl
test
ds
test
fs
mov
fnstenv
fsts
inc
clc
dec
lock
sbb
jg
je
add
pop
xor
icebp
into
fcmove
stos
jne
inc
into
lahf
fstpt
cmp
rorl
pop
pop
jnp
clc
pop
xchg
hlt
or
inc
insb
stos
add
inc
pop
cmp
sbb
stos
inc
mov
sarb
test
inc
mov
addr16
dec
fildll
push
mov
mov
dec
pop
ljmp
out
inc
sub
dec
mov
shlb
sbb
out
test
sbb
enter
xor
jmp
xchg
sbbl
pop
dec
mov
or
push
xchg
and
in
dec
insb
and
jne
push
rdmsr
and
sbb
sub
xchg
mov
jecxz
lods
imul
jo
out
xchg
adc
emms
sbb
cmp
cli
shl
mov
scas
cmp
jno
scas
das
popa
movsl
lret
cli
lods
xor
test
jnp
lods
notl
adc
out
sbb
xchg
push
cmp
jecxz
out
xchg
into
xor
push
fwait
lock
push
cli
adc
add
sbb
adc
mov
cs
cli
mov
in
sbb
jge
jge
addl
mov
inc
push
pop
icebp
movsl
cmp
outsb
or
sub
mov
loope
push
popf
mov
call
jo
and
aam
or
adc
in
int3
testl
sbb
xchg
addr16
mov
or
inc
cmp
inc
sbb
insl
jb
movsb
fnsave
fwait
movsl
faddl
daa
dec
out
mov
push
das
bndstx
add
dec
mov
daa
fidivl
xor
add
pop
sarb
jge
pushf
shlb
sub
dec
gs
ret
test
insb
push
ja
pop
adc
or
add
decl
xchg
push
pop
lahf
fsubrs
fs
sbb
mov
jo
or
loop
add
adc
ss
jne
xchg
in
cmp
sbb
fisubrl
mov
sbb
rorb
mov
mov
subl
xchg
repz
imul
movsl
or
mov
push
adc
mov
add
shll
mov
jnp
mov
cmp
std
bound
xor
mov
test
xchg
imul
mov
pop
outsb
insl
pop
test
es
xchg
inc
xlat
mov
loopne
in
insl
lret
inc
sub
jno
fimuls
stos
addb
or
pop
xchg
lds
jae
arpl
shl
mov
pop
imul
ds
out
push
lahf
sub
xchg
pop
hlt
adc
and
mov
push
int
mov
cmp
adc
arpl
xchg
dec
jecxz
jle
dec
nop
mov
jb
sub
in
mov
testl
push
inc
shll
xchg
push
lea
xlat
or
lcall
fiadds
pop
and
mov
in
rolb
pusha
fucompp
mov
call
imul
popf
imulb
fs
fmull
lock
out
cmpsb
ss
or
mov
or
das
cmp
push
cld
push
push
hlt
jl
addr16
and
rorb
and
and
enter
insb
sbb
test
imul
call
fisttpl
imull
out
push
call
mov
cwtl
or
mov
xor
dec
aam
and
dec
push
aas
or
out
push
dec
pusha
pushf
jg
jo
roll
aas
mov
pop
in
mov
cmp
mov
enter
jmp
scas
pusha
movsl
mov
jns
cltd
mov
xchg
repz
add
ret
push
or
xchg
lea
nop
aas
fbld
sahf
rorb
pop
insb
out
cmp
das
push
repnz
cmp
into
xor
cmp
data16
inc
mov
enter
pop
or
leave
inc
adc
jns
dec
int
push
in
pushf
dec
mov
push
mov
mov
push
out
pop
inc
movsb
cli
call
xor
cmpsb
insb
or
mov
shl
mov
stos
call
jno
add
data16
test
movsb
daa
test
rcll
fwait
adc
push
adc
jg
mov
fmulp
xor
jnp
sbb
adc
dec
jbe
lods
aam
pop
int3
dec
push
push
or
mov
and
sub
loop
jl,pt
hlt
lret
adc
xchg
pushf
out
push
jae
xchg
mov
sub
push
das
out
lret
mov
std
call
leave
push
mov
int3
inc
bound
jmp
nop
fs
push
out
mov
in
enter
dec
pop
mov
repz
or
movl
pop
cmp
mov
sbb
movsb
mov
push
outsb
loope
xlat
adc
popa
in
push
ja
mov
call
push
test
aam
cs
in
ret
out
cmp
lock
mov
inc
dec
push
xchg
fwait
insl
cmpsb
inc
rcll
xchg
or
xchg
and
popa
xor
pop
xchg
jecxz
test
mov
mov
sti
and
adc
cmp
gs
push
dec
leave
into
sbb
sub
mov
mov
dec
cmpsl
mov
enter
insl
and
cld
sub
xchg
cltd
aam
shlb
adc
xor
and
pushf
pop
and
lds
push
mov
adc
xchg
add
and
imul
out
push
pop
cmp
lds
xchg
rcrl
out
rcrb
daa
add
cmpsb
fsubrp
cs
in
popa
loopne
mov
xor
cmp
add
fwait
stc
push
sub
stc
bound
lods
loopew
cmp
cld
adc
xor
scas
adcb
icebp
pop
adc
arpl
je
jle
pusha
fwait
cmp
push
mov
cltd
dec
dec
mov
cmpsb
push
jae
sti
xor
in
mov
push
ja
mov
mov
xor
cmp
out
hlt
jg
or
sbb
sub
and
out
sub
add
inc
in
inc
lea
mov
jmp
pop
scas
mov
test
addr16
movsb
loopne
pop
cs
dec
or
daa
loopne
cmp
jle
lret
popl
pusha
lea
mov
sub
or
pop
xor
jmp
lahf
in
repnz
push
cmp
out
xorb
xlat
nop
popl
cwtl
adc
arpl
pop
jg
jecxz
mov
ret
lds
bound
scas
push
mov
and
cmpsb
rcrl
test
vaddpd
lea
jb
mov
push
push
cmp
in
clc
int
loope
cmp
out
mov
xchg
or
insl
ljmp
inc
inc
lds
repz
jbe
test
and
push
pop
test
inc
adc
mov
and
nop
mov
sbb
fwait
sub
mov
jg
sub
mov
mov
mov
fmulp
pop
cmp
mov
jno
insl
xor
xor
xchg
inc
loopne
push
push
in
in
inc
and
inc
dec
xchg
std
or
add
xchg
fisubs
mov
xchg
jle
pop
bound
pop
arpl
inc
mov
sbb
add
in
je
aaa
fwait
adc
jne
imul
into
lods
bound
inc
std
test
dec
fildl
out
mov
jge
repnz
or
dec
pusha
and
xor
push
xchg
repz
outsb
jns
pop
pop
dec
sub
movb
hlt
add
jb
jb
xchg
out
mov
movsl
fcmovnb
shlb
pop
aad
add
lret
dec
or
and
pop
fists
add
lret
in
push
outsb
sbb
pop
add
jb
mov
jp
cmp
and
loope
xorl
pop
orb
sub
pusha
xchg
insl
add
xchg
and
lods
pop
cmp
and
adc
mov
jnp
xlat
enter
sbb
inc
mov
test
loope
push
inc
aad
rol
inc
mov
test
popa
or
data16
mov
pop
mov
dec
scas
fisubrl
mov
bound
fadds
out
mov
push
std
xchg
inc
jbe
push
mov
add
adc
or
mull
jne
dec
adc
popa
xchg
outsb
fcmovbe
lods
loop
outsb
pop
adcl
fsubr
mov
push
pop
xchg
lock
popa
lahf
test
jl
inc
roll
jb
cmp
test
sub
arpl
addr16
ss
inc
lcall
in
jl
xchg
inc
push
icebp
pinsrw
mov
xchg
mov
pop
out
inc
enter
add
nop
leave
mov
repz
xchg
cmc
inc
nop
mov
pop
push
adc
int
loope
or
jno
sub
std
sbb
inc
sahf
push
jmp
ljmp
mov
dec
in
iret
mov
inc
out
mov
dec
xchg
adc
jmp
xchg
arpl
insb
add
add
imul
jecxz
and
mov
pusha
or
enter
in
aas
out
mov
dec
add
lea
push
mov
testb
mov
pop
lock
xor
scas
dec
ss
adc
xchg
out
cltd
mov
into
hlt
lcall
xor
shll
and
ss
or
xchg
mov
data16
jae
mov
adc
outsl
push
jbe
xor
pushf
pushf
push
mov
clc
aam
lahf
and
gs
jae
and
cmpsb
sbb
cmp
sbb
sbb
push
add
jb
mov
out
push
outsl
push
ja
push
xchg
test
xor
push
cmp
xchg
test
mov
test
js
push
pop
lea
ljmp
fisubrl
movsl
pop
or
and
iret
test
sbb
into
jnp
xchg
shlb
pop
mov
imul
mulb
gs
jecxz
mov
cs
movsl
mov
insb
and
adc
fldl
cmp
and
ds
and
imull
sub
stos
add
jne
add
dec
fcomp
scas
ret
mov
lcall
cmp
mul
xor
mov
adc
inc
psubusb
jbe
in
mov
mov
imul
sti
xor
js
fchs
sub
jb
sbb
dec
dec
fildl
sub
leave
loopne
loope
outsb
insb
push
sub
lcall
scas
mov
lds
cs
in
jle
daa
push
loopnew
cli
movb
xchg
scas
push
in
push
push
daa
xor
mov
fdivl
push
mov
lahf
sub
pop
stos
lods
add
jmp
fistpl
sbb
push
dec
nop
icebp
sub
int3
mov
inc
mov
bound
jmp
mov
jbe
popf
adc
pop
icebp
cwtl
lds
aad
fdivrs
cmp
mov
sub
and
lock
fcmovnb
sub
and
cltd
cmpsb
fimull
mov
sahf
sbb
mov
sbb
push
es
lock
mov
and
and
pushf
adc
mov
mov
xlat
xchg
add
fidivrl
daa
ds
fwait
inc
into
inc
push
xchg
jno
or
jnp
mov
and
fcomps
xchg
push
out
sbb
adc
gs
pop
xor
cwtl
pushf
sub
fxch
lsl
lock
pop
add
scas
push
sub
mov
mov
push
mov
leave
push
dec
sahf
sub
sbb
sar
fwait
push
pop
add
add
loopne
xor
pop
ja
push
call
out
nop
decb
inc
das
add
xchg
and
stc
dec
pop
int
dec
mov
jmp
int3
mov
cli
fdivl
inc
or
push
je
sbb
lock
push
add
daa
xchg
pusha
xchg
add
lock
ficompl
fisubl
frstor
je
sbbb
pop
cmp
inc
add
aad
test
push
jnp
div
imul
ljmp
rorl
les
arpl
xchg
hlt
add
jbe
mov
std
les
test
xchg
in
mov
or
mov
push
rol
stos
cwtl
sbb
roll
popa
int3
ficomps
cmp
popf
adc
das
test
ljmp
int
pusha
stos
sub
or
cmp
jmp
in
sub
hlt
loopne
ja
stos
jae
add
add
mov
or
and
mov
mov
lcall
mov
pop
addr16
inc
cmp
fcmovnbe
push
gs
mov
adc
push
rolb
popf
pop
dec
cmpsl
test
scas
mov
pop
pop
lret
fcmovnb
lahf
cwtl
sti
xor
je
add
push
xchg
xor
sub
clc
ss
std
aad
or
and
jb
mov
push
ljmp
mov
or
mov
sbb
clc
push
ja
dec
stos
push
adc
xchg
fildl
xorb
sbb
pop
pop
xlat
cmpsb
fdivl
scas
jle
decb
in
aaa
xor
cltd
cld
loope
xchg
and
enter
movsb
gs
pop
mov
cmpsl
pop
mov
mov
inc
mov
xor
mov
add
mov
dec
push
and
push
addr16
je
inc
aas
pop
jle
sahf
mov
int3
jecxz
es
movsl
pop
jno
andb
or
movsl
push
fisttpll
mov
ds
dec
sub
xchg
sbb
mov
inc
ja
cmp
inc
jmp
outsb
cmp
mov
jge
jns
lahf
in
lret
mov
aad
mov
add
xchg
xlat
ljmp
in
adc
mov
popf
mov
pop
movsb
daa
inc
xor
mov
pop
out
stos
ja
sbb
cmpsb
sub
fnstenv
inc
stos
and
fnsave
cmp
dec
xchg
push
lret
outsb
push
arpl
cld
jnp
sub
out
dec
pop
and
dec
fisttps
test
cmp
xchg
movsb
add
jno
hlt
pop
jnp
mov
or
push
loope
enter
pop
fistps
mov
mov
out
adc
mov
pop
ret
cmp
es
mov
and
fisubl
mov
lds
or
mov
cmp
mov
add
adc
mov
in
push
adc
std
jbe
cmp
add
mov
insb
push
mov
insl
int
cs
mov
cs
popf
xor
jmp
mov
pop
or
out
pop
and
adc
hlt
push
or
cmp
shll
mov
js
cmp
pop
xchg
sub
hlt
aad
test
lahf
pop
pop
aas
push
shlb
icebp
jp
jp
je
test
aas
sbb
lods
cmp
push
test
sbbb
xor
out
in
call
jnp
mov
ja
xlat
mov
push
xchg
mov
aas
inc
or
cwtl
push
jecxz
push
leave
adc
xchg
cmpsb
loopne,pt
std
ds
dec
out
cmp
dec
iret
fstpt
popa
scas
sbb
or
or
addr16
out
pop
cmp
xor
mov
stc
sbb
cmp
rcrl
fiaddl
adcb
mov
fwait
sub
inc
xchg
xor
pop
bound
cmp
or
jecxz
dec
and
incl
jmp
and
sti
adc
mov
add
addr16
push
loope
dec
test
loopne
cmpsl
pushf
mov
pop
jnp
sbbb
pop
sbbb
mulb
shll
and
insl
js
ficoms
jmp
fldl
xor
aaa
dec
and
and
jge
jb
or
push
scas
sub
idivb
fwait
shlb
popa
mov
push
dec
test
stos
adc
jge
sub
test
push
jmp
shll
loope
push
cmp
and
xlat
pop
sbb
mov
cmp
push
inc
pop
lods
arpl
int3
rcr
movsl
push
mov
xorl
mov
inc
leave
and
add
or
dec
jle
xchg
les
mov
xchg
xchg
add
xor
stc
loope
mov
push
int3
movb
xchg
inc
inc
dec
or
xchg
inc
insl
int
loopne
scas
scas
rclb
push
lret
lret
jmp
push
stc
pusha
pop
push
jmp
pusha
scas
mov
cmpsb
rcl
adc
pop
shll
cltd
sarb
push
cltd
jmp
jmp
xlat
sbb
cmp
cltd
mov
mov
xchg
mov
mov
cmpl
call
cmp
inc
xchg
stc
fwait
pushf
test
mov
jo
mov
add
xor
and
mov
fdivs
iret
pop
repz
xor
daa
fldt
push
jmp
aaa
mov
jae
es
or
inc
xchg
adc
stc
xor
incl
lods
xor
mov
push
inc
jno
add
fnstenv
jns
pop
ljmp
cmc
mov
aad
jae
mov
loope
pop
dec
call
fcoms
dec
addr16
loopne
xor
mov
sub
jp
push
pushf
mov
cmpsl
mov
sub
sbb
mov
test
mov
mov
pop
mov
ret
xchg
data16
mov
insl
mov
and
mov
out
or
lods
in
inc
pop
lods
push
test
out
lahf
fcmovnu
dec
and
push
sub
dec
adc
dec
or
mov
adc
bound
repnz
xchg
mov
sbb
sbb
cwtl
mov
cs
push
scas
cltd
js
mov
lret
movhps
jae
jmp
fistpl
ljmp
pmullw
jp
filds
ret
das
movsl
daa
mov
stos
shlb
popa
mov
mov
or
pusha
sbb
jo
in
fstpl
mov
xchg
mov
fs
and
stc
add
jo
neg
cmpsb
ds
mov
lods
mov
mov
pop
mov
lds
ret
imul
clc
dec
pop
lahf
fwait
out
sub
xor
adc
fldt
movsl
jae
loopne
push
icebp
inc
cmc
push
or
or
jge
imul
shrl
adc
stos
out
sbb
push
movsb
xchg
sbb
test
fs
push
sub
loop
xchg
mov
outsl
adcl
push
rcr
mov
or
add
sahf
les
add
xor
push
out
mov
out
cltd
dec
push
lret
xchg
push
dec
xor
adc
xchg
pop
xor
inc
mov
sbb
out
mov
and
insb
lret
xchg
ja
movsl
mov
jnp
adc
dec
das
ds
xchg
sub
push
ret
push
sbb
pop
add
je
push
jecxz
jp
add
pop
mov
xchg
mov
inc
inc
inc
lods
push
mov
fwait
push
stos
inc
inc
dec
mov
in
cmpb
in
add
imul
hlt
lea
outsl
fs
push
test
es
test
jo
shll
sub
pop
mov
loope
aam
pop
jno
mov
std
xor
jbe
test
jns
and
fwait
pop
jae,pt
ret
and
fdivl
xor
shrl
pop
lahf
testl
mov
dec
fnstcw
lods
and
mov
jge
or
mov
pop
arpl
call
lods
subl
inc
add
dec
aam
out
mov
jmp
jg
lods
je
pop
enter
cmc
cmp
mov
dec
jp
scas
push
and
xchg
cwtl
imul
popa
das
pusha
fs
fcmovne
and
jcxz
icebp
test
dec
das
xchg
test
mov
and
das
cmp
aaa
cmc
or
jns
or
cmp
dec
inc
into
insb
bound
loopne
mov
push
mov
clc
mov
xchg
xor
pop
pop
mov
hlt
out
mov
shlb
in
jge
roll
idivl
clc
push
hlt
add
lret
adc
fimull
sub
popf
xor
rcrb
fsubs
mov
outsl
add
aaa
lret
aaa
inc
jmp
pop
xor
aam
insb
xchg
popf
inc
into
cmp
cmp
cmp
fs
jmp
xchg
and
pop
adc
fs
adc
mov
aas
and
jbe
insl
and
mov
into
mov
mov
pop
lret
push
test
test
jmp
xor
add
int
and
pushf
sub
lods
mov
pop
dec
test
insb
insl
xchg
int
jle
or
push
mov
jae
jmp
adc
adc
sub
mov
xchg
adc
inc
hlt
lods
scas
addb
push
push
xlat
inc
dec
cmc
fistl
push
rcrb
xor
and
out
sahf
inc
loopne
add
test
aas
inc
int
iret
xchg
scas
xor
mov
jnp
es
mov
in
arpl
cmp
fisubrl
es
clc
sub
outsl
call
cmp
cmp
xchg
popf
stc
test
addb
jecxz
pop
pslld
add
outsl
xlat
es
dec
cmp
and
mov
lahf
mov
dec
int
pop
mov
inc
mov
bound
cmp
fstp
inc
sub
je
addr16
cmp
cli
dec
shll
in
shlb
pop
add
or
fimuls
jne
or
pop
aad
xchg
lret
sub
pop
movsb
inc
push
add
jns
inc
jno
inc
out
inc
loop
cmc
fnstenv
inc
fsubp
dec
sub
aas
adc
mov
push
xor
nop
adc
loope
loop
xchg
sbb
xor
or
in
cmp
and
aas
jno
cmpsl
imul
xor
test
pop
xchg
aas
mov
mov
mov
test
mov
mov
xor
adc
and
sbbb
pop
aam
dec
sub
adc
pop
out
adc
jle
push
xor
add
adc
iret
loopne
sbb
lret
mov
sbb
jmp
out
xchg
or
or
sarl
cwtl
lahf
mov
jg
fistpll
mov
cmpsl
adc
mov
data16
and
xchg
mov
sbb
mov
les
cmp
adcb
sbb
fcomps
rolb
push
out
inc
dec
lods
test
jae
loop
lods
and
lret
pop
xchg
or
sti
lods
popa
pusha
data16
mov
jl
mov
aam
aam
das
out
scas
clc
mov
lods
lcall
jo,pt
out
pusha
icebp
stos
pop
add
andl
cltd
dec
fwait
pusha
addr16
xor
mov
pop
fldcw
in
fistl
test
cmc
cmp
push
movsb
pusha
pushf
cld
fwait
pop
push
mov
shrb
mov
xchg
icebp
xor
stos
mov
nop
rorb
pop
lods
psrlw
adc
mov
push
repz
and
in
cs
or
sub
and
sbb
pop
add
sbb
jbe
shl
into
ss
lock
mov
pop
loope
cmp
xchg
cmpsl
inc
data16
fistps
pusha
jp
icebp
pop
xchg
sub
add
cmp
leave
or
mov
loop
mov
cmp
xchg
je
push
push
push
jg
repz
aas
nop
pop
in
addr16
stos
es
lods
inc
pop
dec
pop
and
and
jl,pt
xor
xor
or
inc
lods
xor
mov
mov
mov
push
jno
push
mov
dec
sub
pop
insb
ret
ret
lahf
dec
mov
imul
ror
xor
jl
add
push
mov
xchg
pop
cmc
mov
scas
jmp
nop
jmp
lcall
fwait
mov
push
mov
pop
inc
cmp
mov
mov
lret
inc
sub
xor
jp
or
mov
or
rcll
dec
lret
sti
je
dec
lock
or
mov
add
jnp
std
leave
cmpsb
sbb
ret
jb
call
mov
cmp
sbb
push
pop
mov
adc
xor
sub
into
cltd
jmp
stc
into
es
out
push
xor
aas
or
daa
xor
lea
popf
pop
xchg
mov
fbld
push
out
lret
pop
xchg
mov
mov
mov
mov
xor
mov
inc
ret
cmp
inc
gs
subb
leave
les
sbb
int
inc
imul
jnp
imul
and
mov
inc
mov
pusha
add
xor
scas
repz
mov
sbb
imul
pusha
inc
mulps
xor
lds
ficompl
movsb
push
mov
imul
push
xchg
ret
js
scas
scas
xlat
fs
xchg
pusha
loop
dec
push
outsl
sub
ret
scas
push
test
sub
stos
cmp
jl
adc
xchg
mov
outsb
xor
or
dec
xor
push
sarb
les
xor
lfs
inc
sahf
ficoml
cmc
stos
xchg
push
loop
inc
jae
mov
mov
xor
iret
aad
cmp
xchg
loop
jbe
ficomps
push
scas
xlat
mov
stos
or
push
cs
cmpb
or
ds
mov
lds
ret
mov
xlat
xor
sub
test
or
xchg
test
rorb
jmp
dec
add
test
das
out
mov
xchg
jl
mov
mov
out
sbb
sbb
inc
inc
and
pop
frstor
pop
mov
orb
sub
repz
lock
jge
pop
mov
ficompl
mov
adc
es
mov
in
xor
push
sahf
stos
sbb
add
arpl
xchg
or
mov
stos
jp
or
movsl
push
and
dec
aas
ss
cmpsl
or
dec
sbb
test
cmpsb
sub
nop
ss
inc
and
add
mov
cmp
and
and
mov
pushf
cmpb
mov
add
mov
sbb
mov
mov
mov
out
xor
ret
mov
lods
add
aam
loopne
loopne
mov
xchg
sbb
push
pop
pop
test
and
mov
and
std
adc
and
xor
test
shll
shll
in
test
mov
out
mov
shlb
mov
xchg
pop
dec
rcrl
add
fdivs
mov
sbb
xchg
and
sub
out
stos
jno
nop
repnz
xchg
mov
cld
lahf
es
daa
mov
xlat
sub
sahf
jae
mov
ja
jle
mov
push
lret
rcrl
mov
dec
stc
and
mov
and
ja
cmc
inc
pop
test
lock
mov
mov
mov
hlt
mov
pop
outsl
xlat
movsl
or
add
add
lahf
pop
cltd
xor
repnz
test
pop
xlat
jnp
cltd
loopne
mov
shl
inc
mov
xor
jl
out
xchg
xchg
leave
daa
or
std
sub
cmp
pop
pop
xchg
mul
bound
int3
fcmovb
call
cmc
jne
xchg
or
call
jmp
add
sub
xor
dec
cmpl
arpl
in
add
sub
sub
jne
outsl
nopl
sub
sbbb
or
pop
outsl
popf
add
in
imul
fsincos
pusha
std
push
dec
pushf
cli
icebp
jnp
lahf
dec
imul
rolb
add
cmpsl
imul
insb
fidivrl
test
and
mov
out
lret
and
xchg
inc
dec
mov
inc
pop
dec
mov
jp
stc
addl
inc
fdivs
xor
mov
jo
cmp
jns
cwtl
jae
dec
sbb
mov
out
adc
mov
add
out
pop
adc
sbbl
push
ss
and
cmp
or
xor
cmp
popl
scas
orb
test
lahf
push
jl
xchg
aad
lret
xchg
cld
repnz
or
stc
fcmovnb
pop
mov
pop
fwait
mov
and
and
mov
icebp
test
out
jp
call
mov
ja
mov
adcb
or
or
xchg
jbe
dec
ficoms
mov
dec
fsubp
insb
and
rcl
cs
lock
bnd
sbb
push
jg
pop
jns
jle
push
mul
clc
into
xchg
fwait
or
and
mov
je
mov
sub
fucomip
imul
cltd
cs
jnp
pusha
xor
add
test
mov
pop
daa
shlb
add
add
scas
roll
push
push
inc
xchg
loopne
int
shlb
sbb
xor
inc
stc
dec
mov
xchg
mov
mov
jle
and
and
jle
pushf
xchg
in
mov
fst
ss
fcoml
pop
daa
pop
jp
test
xor
roll
in
data16
subb
ds
adc
push
cld
jge
andb
sbb
cwtl
iret
pop
mov
cmpl
cmp
jg
cmp
jae
pop
addr16
adc
out
pusha
cmpsl
dec
aam
dec
inc
mov
mov
in
mov
xchg
ds
or
cmp
cmp
rcrl
rcrb
lea
xor
xlat
or
mov
hlt
mov
aam
add
lods
xor
out
fcmovnbe
pop
flds
add
shlb
dec
shl
jns
je
cmc
test
adc
mov
pusha
inc
mov
jb
aad
sub
pmuludq
jge
pop
in
add
nop
mov
pop
rorb
into
add
cs
insb
mov
popf
mov
xchg
scas
dec
fnstenv
out
lods
fs
test
pop
jnp
jmp
ja
fiaddl
jmp
adc
call
notl
das
lret
test
fwait
or
push
inc
fcoml
faddl
jle
cmpsb
xchg
jp
mov
int3
loopne
adc
add
pop
inc
cmpsb
dec
sbb
push
mov
repnz
in
or
lods
jmp
jbe
std
arpl
xchg
shrl
cmpsb
push
pop
sub
in
not
xlat
jno
popf
rol
out
inc
add
inc
dec
mov
cmp
xchg
sub
jbe
and
adc
outsl
into
lcall
arpl
mov
xchg
xchg
out
mov
aaa
mov
mov
pop
jl
adcb
icebp
or
mov
mov
pop
cld
push
push
sti
mov
enter
stc
sbb
add
push
xchg
jo
mov
aad
dec
test
andb
inc
out
adc
into
fadds
pop
lret
pushf
testb
pop
mov
jbe
or
xchg
leave
pop
mov
insb
and
and
xchg
pop
adc
bound
sti
xor
jp
jne
inc
data16
jns
jb
pop
push
pop
insl
add
pop
push
mov
negb
adc
int
adc
enter
inc
mov
rorl
add
mov
in
mov
push
lea
arpl
out
mov
les
in
cmp
in
sbb
sbb
xchg
jo
pop
in
xor
jmp
aaa
lds
test
in
adc
sbb
jl
sub
movsl
in
popf
mov
clc
pop
cld
cmpsb
insb
icebp
mov
clc
lock
xor
dec
pop
syscall
loope
movsl
pop
lds
mov
jmp
mov
aas
icebp
test
fmull
fdivrl
jmp
mov
ljmp
xor
mov
roll
xchg
enter
mov
test
cmp
xchg
mov
aas
iret
mov
mov
or
push
or
lcall
pop
xchg
or
fimull
xor
xchg
pop
or
ficomps
cmp
mov
jo
inc
push
enter
cmp
aas
cmp
mov
pop
divb
stos
jne
imul
inc
sub
popf
xchg
dec
mov
rorl
roll
mov
std
or
dec
into
add
enter
pmaxub
mov
in
sbb
ja
repnz
fistpll
inc
push
test
mov
lods
imull
and
test
loope
iret
mov
arpl
popf
enter
dec
stc
mov
mov
and
int3
push
push
lahf
jge
insl
mov
adc
dec
cld
mov
inc
inc
movsb
arpl
mov
cmpsb
pop
bound
xchg
into
and
in
filds
call
mov
add
outsb
into
popa
jge
shll
jns,pn
jge
les
rorb
cmpsb
scas
in
mov
lock
push
add
out
jae
mov
aas
sub
fcmovnu
xchg
pop
jecxz
adc
int3
in
or
aam
mov
sub
xchg
jo
dec
movsb
or
cmp
push
sub
xorl
mov
int
sbb
push
or
cmp
int
or
out
sbb
cmp
roll
mov
pop
add
popa
in
pop
filds
mov
and
scas
addr16
push
mov
cmp
jnp
movsb
sub
mov
out
or
stos
push
mov
imul
mov
cld
adc
sbb
and
cwtl
ret
cpuid
cs
jge
mov
leave
lods
fimull
les
fisttpll
das
mov
cmpsb
inc
xchg
push
pop
sar
aas
mov
cmp
pop
xchg
mov
test
add
xor
aas
decl
xchg
loopne
inc
scas
into
imul
jns
out
out
push
sbb
xchg
push
shl
flds
xor
nop
jmp
and
and
icebp
daa
mov
mov
sbb
jp
pop
push
dec
inc
les
push
in
xor
loopne
inc
and
cmp
pop
js
repz
xchg
jbe
das
push
stos
fadds
and
inc
test
xor
xchg
xor
sub
cmp
lds
scas
dec
sbb
lahf
cld
clc
mov
sub
pop
adc
adc
fdivrp
jmp
stc
pop
mov
mov
inc
fiaddl
mov
or
dec
fisubrl
jge
rclb
pop
mov
dec
jbe
xor
cs
push
push
bound
fisttps
int3
sarl
bnd
push
pop
mov
xor
mov
fsubrp
or
iret
into
ret
push
lea
fcmove
nop
aad
jmp
sahf
jmp
jbe
and
out
pop
insl
popf
lods
or
in
je
pop
movsl
into
inc
xchg
je
movsb
mov
push
imul
mov
xchg
xchg
out
jecxz
shll
in
pop
dec
into
mov
test
lahf
mov
addr16
mov
adc
stos
or
mov
mov
and
xchg
scas
cmp
jne
mov
sbb
cmpb
leave
xlat
inc
mov
sbb
aam
add
push
test
push
lret
aad
data16
test
repnz
xor
push
mov
call
insb
cmpsb
rol
sub
and
add
xchg
sbb
clc
and
in
cmpsl
lods
outsb
jl
andb
mov
and
std
push
dec
pop
aaa
jg
fld1
rcl
mov
ret
movsb
sbb
sub
fisubl
push
lock
jle
ljmp
fwait
cmpsl
or
pop
pop
add
adc
jl
int3
subb
cmc
dec
int3
in
fiaddl
scas
sbb
daa
faddl
fdiv
dec
mov
outsb
add
popf
call
aad
pop
jnp
cmpsl
ds
jae
adc
shll
lcall
inc
mov
in
mov
push
cmp
je
xor
and
out
mov
stos
xlat
push
xor
sub
inc
int3
test
fadd
fs
ss
cmpsb
imulb
mov
pop
mov
add
pop
push
pop
stos
mov
cmpsb
mov
cmp
cmpsb
jns
ss
mov
in
imull
pop
dec
sbb
hlt
in
out
push
and
es
cmp
mov
into
lahf
mov
cmp
loope
popa
ljmp
mov
aas
sbb
stos
pop
movsb
or
dec
repnz
es
int
push
dec
arpl
lret
ss
loopne
sub
in
std
mov
or
jge
mov
nop
add
xchg
mov
lret
fistps
rolb
jo
popf
je
inc
daa
cmpsl
dec
pop
fisttpl
loope
fistl
int3
lock
adcl
and
push
mov
inc
imul
push
xchg
adc
stos
xchg
cmpsl
call
dec
adc
inc
jecxz
cmp
dec
loop
fisubl
lcall
sub
cmpsb
popa
bound
jle
filds
sti
jnp
popa
fs
test
push
pop
mov
sub
pop
adc
adc
sub
adc
jne
adc
mov
js,pn
xchg
or
es
fiaddl
xor
fstpl
pop
ja
inc
jl
mov
jmp
test
sbb
xchg
mov
pop
mov
iret
jg
iret
inc
push
pop
rcrb
adc
mov
mov
jne
adc
inc
jns
imul
xor
push
xchg
xor
or
mov
pop
jle
xlat
mov
lahf
outsb
pop
cmpsb
and
pop
mov
scas
mov
es
adc
pusha
lret
pop
pusha
xchg
popf
xchg
dec
lods
xchg
adc
sub
mov
xchg
fstl
das
and
sub
xchg
or
aam
xchg
mov
loop
add
sbb
mov
inc
mov
cmpsl
xor
pop
repnz
ss
sub
and
sub
fadds
call
mov
push
add
push
jbe
test
movsl
push
mov
push
mov
pop
fcoml
xor
pop
repnz
in
or
xchg
xchg
outsl
out
dec
or
lcall
jbe
pop
mov
push
lahf
mov
jno
lret
adc
int
pop
sbb
xchg
mov
fistpll
sbb
stos
mov
fsub
or
cmp
fstpt
mov
enter
das
aam
cmp
mov
sbbb
mov
mov
xor
mov
call
int
std
dec
adc
popf
mov
lods
lds
dec
dec
and
fwait
scas
out
sub
or
fs
sbb
insl
enter
inc
or
sub
xchg
xchg
xor
pop
mov
xchg
out
mov
in
ja
mov
sbb
mov
outsl
sub
push
aaa
repz
jge
adc
cli
xor
imul
push
arpl
push
push
mulb
adc
in
decb
xorb
jmp
popf
lcall
adc
pushf
jecxz
xchg
lock
mov
push
popa
insl
or
and
jle
push
jp
bound
inc
fdivrs
int3
in
push
out
adc
mov
add
in
adc
jle
push
pop
xor
and
ss
xchg
into
ss
add
insl
inc
stos
push
das
subl
cwtl
jo
scas
dec
fbld
dec
icebp
jae
xchg
aam
mov
repz
mov
sbb
clc
push
sub
aas
push
push
aaa
jno
dec
push
cwtl
dec
push
xchg
jae
imul
mov
and
sbb
pusha
push
orb
clc
add
mov
int3
cmp
cwtl
dec
mov
pop
xor
out
andl
lret
ret
push
test
clc
test
jg
xchg
fidivrs
movsl
push
mov
inc
lahf
ja
add
das
lods
sahf
mov
cbtw
sub
imul
nop
scas
mov
mov
cmpsb
pop
adc
add
jmp
test
add
jae
xor
ficoms
or
jp
push
and
cmp
and
test
gs
jb
imul
cli
aam
call
cmp
add
mov
or
xor
adc
push
sbb
out
and
sbb
imul
and
out
jnp
ficoml
and
inc
test
ja
cmp
and
cmc
ss
stc
push
dec
cwtl
dec
test
cmp
add
sbb
mov
stos
ret
dec
out
outsl
fwait
cmpsb
push
pop
fisubrl
pop
sti
push
and
mov
inc
dec
lret
push
pop
lock
in
pop
cmp
mov
loopne
push
pop
add
fimuls
mov
xor
mov
mov
and
adcb
xchg
repnz
cmp
sub
or
add
sub
cmpsb
push
outsb
jecxz
sbb
lea
sti
push
lea
lcall
xchg
addb
movsb
stos
mov
pop
cmc
jne
and
pop
mov
push
or
cmp
lods
leave
daa
xchg
mov
push
jge
xchg
loop
leave
out
ficoml
adc
mov
mov
std
enter
mov
push
mov
ja
jecxz
lcall
mov
mov
outsl
lea
repnz
or
pop
inc
popf
xchg
pop
sbb
dec
int
mov
das
insb
and
sub
dec
hlt
sbb
xchg
into
jecxz
xchg
inc
outsl
fldcw
mov
sub
out
nop
fsubs
aas
fsubrl
dec
lcall
sub
sub
xor
cmp
movsb
or
stos
mov
push
popa
lret
testb
jl
adc
lret
test
push
push
imul
imul
test
test
stos
mov
adc
jnp
xchg
pop
cmovno
inc
lcall
sub
out
cmp
enter
jl
js
fwait
mov
pusha
inc
cmp
push
mov
cmp
fnstcw
imul
and
test
adc
adc
insl
xchg
js
test
ret
push
cmp
or
xor
dec
into
push
movsb
in
mov
cmp
popf
imul
es
into
mov
pop
push
or
aas
insb
in
test
out
mov
mov
je
inc
scas
arpl
and
inc
sub
scas
incb
cmp
gs
sbb
inc
add
lahf
jbe
or
mov
jle
rcll
jae
int3
adcl
adc
js
pop
cmp
gs
lahf
push
sbb
subw
sbb
rcl
pop
push
cwtl
jo
stos
imull
sub
push
outsl
mov
pop
jmp
lret
mov
mov
movl
and
cmp
mov
mov
or
xor
in
call
test
push
cmpsb
ds
lods
sbb
data16
icebp
daa
push
icebp
add
enter
sbb
push
mov
popf
and
lcall
fisttpl
mov
adc
scas
dec
dec
push
ror
insb
dec
jmp
mov
add
jg
mov
mov
sti
cmpsl
jnp
push
dec
xchg
aam
cld
mov
inc
sbb
sbb
in
mov
nop
mov
outsb
ljmp
mov
aaa
push
insl
mov
mov
inc
in
int
mov
xchg
xchg
data16
addr16
xchg
aad
mov
dec
frstor
push
aad
loopne
xchg
mov
popf
fsts
shl
dec
movsb
fstpl
inc
push
inc
lret
stos
and
arpl
dec
jl
push
ret
push
add
ds
outsl
ficoml
cltd
shl
mov
aam
pushf
decb
sub
mov
es
adc
scas
sbb
xchg
xchg
mov
cmc
xchg
xchg
and
and
test
dec
jbe
call
pusha
mov
cmp
hlt
imul
leave
sti
mov
xchg
rcr
cmp
scas
into
bound
push
mulb
lret
ds
jns
pop
push
and
add
xchg
stos
stos
sbb
xchg
push
hlt
or
lods
cmc
dec
ds
push
cwtl
adc
lea
daa
imul
ss
sar
xchg
push
int3
jmp
fisubl
jmp
jl
push
xor
xor
xor
lds
and
add
pusha
or
scas
jb
cmp
inc
lea
lahf
lock
sub
xor
ds
lds
fisubrs
aas
nop
jp
and
mov
ret
mov
jb
inc
loope
aaa
js,pn
inc
loop
cmpsl
xor
push
imul
ss
les
dec
fmull
in
dec
popf
add
mov
popa
sahf
sbb
sbb
and
pop
xchg
pop
scas
dec
jmp
jmp
pop
inc
add
dec
lcall
xor
out
stos
and
test
dec
pcmpeqd
sbb
out
shrb
or
jo
xchg
test
stos
xor
aad
ds
push
aas
jo
mov
outsb
sub
loopne
in
cmp
and
jo
ds
inc
push
mov
fucomip
xchg
ljmp
loopne
cmp
lds
push
into
subl
mov
push
add
mov
mov
inc
nop
sti
stos
sbb
adc
movsl
into
jnp
sub
sbb
pop
rcr
push
xchg
repnz
adc
push
rorb
sbb
outsb
out
loop
adc
dec
ja
add
jecxz
frstor
fldcw
or
mov
mov
mov
aad
mov
cmp
loop
pop
mov
cmova
jae
and
mov
lock
jo
cmp
scas
push
mov
inc
loopne
sbb
pop
stos
sub
imul
cs
and
xor
cmp
and
leave
inc
sbb
fmuls
outsb
movb
sarb
cmc
inc
cmp
inc
mov
test
sub
push
pop
sub
push
out
xchg
xchg
pop
fimull
mov
gs
sub
push
adc
stos
mov
adc
rorl
jecxz
cmp
stc
and
xchg
addr16
mov
push
fistpl
inc
js
sbb
pusha
pop
rep
cmpsb
adcb
mov
jle
mov
cmpsl
insb
daa
sbb
cmp
sahf
xlat
sbb
minps
repnz
in
inc
hlt
icebp
test
cmp
sbb
popf
in
scas
sarl
jno
add
data16
xchg
aaa
mov
jg
adc
daa
pop
stos
stos
push
inc
popl
test
cmp
mov
fstps
ja
stos
mov
ret
popf
clc
mov
push
int
jno
and
outsb
sub
outsb
insb
lcall
xor
ret
jno
sub
jns
bsr
pop
inc
nop
push
int3
jg
jno
inc
ljmp
iret
push
lret
jbe
pop
jae
dec
lret
fiaddl
and
into
into
xchg
xchg
xorb
bound
call
dec
lods
pushf
pusha
mov
jbe
xor
jno
lahf
cs
loopne
and
push
ret
push
enter
fisttps
mov
inc
aad
or
test
lods
add
and
and
jne
or
ja
nop
sbb
aad
and
bound
pop
adc
push
cmpsb
push
subl
cld
test
movl
mov
pushf
mov
loope
pop
lret
cmp
cmp
out
add
addr16
and
mov
in
inc
sbb
test
into
test
mov
aaa
xor
dec
and
fstpt
push
sbb
lods
dec
push
dec
cwtl
pop
cwtl
push
test
das
in
insl
and
das
sbb
sbb
mov
rcr
jmp
outsb
in
ret
push
mov
in
popf
adc
push
sbb
fmuls
jne
gs
gs
add
ja
fnstenv
ja
leave
sub
sbb
lret
ficoms
mov
and
pop
leave
cmpsl
mov
xchg
cs
dec
xor
mov
push
and
sub
leave
cmp
xchg
mov
pop
push
call
mov
push
mov
movsb
in
sub
mov
mov
dec
lods
popf
loope
dec
test
pop
ljmp
jno
out
nop
or
xor
ja
jbe
fs
aad
push
and
mov
clc
fstps
cmpl
add
lods
cs
jo
leave
dec
adcb
jg
aas
dec
push
test
sarl
push
add
aad
ds
idivb
fs
dec
je
pop
sub
cmp
scas
sti
mov
daa
cmp
and
scas
movsb
mov
cwtl
dec
or
pop
pop
fldt
repz
inc
sub
push
add
sahf
cmp
fidivs
cmpsb
push
imul
pop
sbb
ds
jl
push
inc
mov
icebp
mov
outsb
in
adc
daa
push
mov
or
das
mov
fs
mov
xor
imul
loop
sti
int
push
in
dec
pop
xchg
add
inc
sbb
loope
insl
inc
jmp
loopne
mov
jl
out
fimuls
test
mov
mov
std
pop
lods
repnz
mov
sbb
adc
push
mov
and
mov
push
mov
pop
dec
in
sub
jge
imul
sub
gs
and
add
push
jge
scas
nop
inc
xor
push
femms
and
pop
jle
jecxz
leave
shrl
sbb
clc
ret
pop
rcrb
shll
dec
in
cmp
mov
pushf
jns
movsb
fwait
bound
pop
ficompl
cmp
jno
stc
inc
dec
rcl
adc
ret
shlb
cmp
aam
dec
xlat
cmp
shlb
lcall
in
add
pop
or
in
mov
call
jne
pushf
mov
les
sbb
daa
mov
insb
adc
cmpl
inc
sbb
sub
sub
packuswb
xlat
fistpll
pop
ljmp
jno
jmp
xchg
jge
loop
es
repz
mov
cld
mov
push
mov
mov
fwait
loopne
stos
sbb
inc
pop
int3
fisttpll
mov
pop
xor
mov
gs
test
fwait
in
in
rol
and
int3
pop
xchg
push
pop
leave
adc
xchg
pushf
pushf
das
xor
fidivs
insb
arpl
fisttps
ds
inc
inc
sbb
arpl
out
leave
test
movb
popl
or
test
cwtl
and
ret
adc
lahf
dec
xor
pop
repz
mov
test
jne
mov
xor
popa
into
mov
jne
pop
sub
push
imul
mov
mov
xchg
js
sub
xor
mov
add
cmp
push
mov
iret
mov
mov
popa
and
dec
ret
or
push
pop
loopne
ljmp
fs
jmp
cmp
rclb
repz
mov
out
sub
mov
icebp
scas
mov
jp
hlt
and
repz
cmp
scas
sub
cmpsl
cmp
mov
fldt
push
aaa
pop
push
test
mov
ret
xchg
inc
fs
pop
mov
xchg
sbb
push
jae
movsl
push
loopne
jecxz
and
dec
mov
mov
nop
add
xor
mov
xchg
sar
cld
movsl
push
cli
inc
lock
insl
fwait
outsb
out
sbb
or
sbb
sbb
cmp
ret
jnp
repz
xchg
mov
xlat
int
xchg
ja
int
fldenv
adc
lahf
pop
aaa
mov
mov
out
mov
ds
push
and
inc
jecxz
add
sbb
xchg
cmc
push
cmp
push
stc
mov
ds
cmp
bound
jmp
stos
push
fnstenv
adc
ret
stos
or
jnp
adc
mov
push
enter
mov
cmp
jle
iret
std
scas
and
out
jp
or
lcall
jg
negl
movsb
subl
jle
mov
add
push
in
popl
mov
imul
push
mov
inc
push
ficompl
hlt
xlat
mov
arpl
int3
arpl
int3
jns
mov
fcomip
rcrl
pop
add
sbb
add
rcl
fists
or
mov
pop
stos
in
mov
popa
ja
mov
xor
bound
rolb
push
repnz
in
xor
push
push
push
sbb
mov
jp
cmp
cmp
push
mov
in
mov
cmp
pop
adc
mov
stc
xchg
sub
les
test
xor
add
jns
test
loopne
pop
pop
dec
nop
sub
hlt
push
pop
and
jbe
and
into
jge
test
xor
cwtl
jp
iret
dec
mov
pop
es
cwtl
mov
push
int
cwtl
and
test
push
inc
fcmovu
and
clc
mov
cli
or
sub
out
ret
push
stc
nop
mov
jae
mov
push
movsl
popf
cwtl
std
pop
ret
sub
daa
push
loop
cmpsl
lret
daa
movsb
data16
jb
hlt
xchg
les
ja
jl,pn
xor
in
xchg
stos
jae
or
mov
or
nop
adc
or
xchg
mov
mov
dec
aas
mov
push
ja
adc
push
sub
pop
and
sahf
fisubl
in
jnp
jg
pop
inc
xchg
jle
cmpsl
and
lcall
pop
xchg
jl
push
mov
shr
jle
jns
cltd
add
jg
stos
mov
adc
dec
roll
mov
test
shll
lods
push
push
in
dec
push
push
push
pushf
pop
jmp
push
sbb
aad
arpl
outsl
dec
shlb
push
sub
push
inc
or
and
and
dec
stos
sub
push
cli
xor
mov
mov
in
insl
ffreep
out
out
add
pusha
xchg
dec
rcrl
repnz
les
xor
test
sbb
pusha
lret
xchg
push
jle
das
xor
mov
jg
mov
addl
imul
xor
out
pop
fstps
push
xchg
inc
daa
mov
shlb
ret
dec
dec
out
and
hlt
lods
sti
gs
jno
daa
mov
jle
push
adcl
outsb
ja
or
jnp
mov
dec
sub
call
xchg
sub
repnz
pop
icebp
and
in
je
movsb
sub
sbb
and
xor
sbb
notl
dec
out
iret
xchg
test
xchg
push
sub
fnsave
ds
add
outsb
and
adc
mov
fcoml
inc
adc
pop
outsb
insb
xor
xlat
push
shlb
mov
mov
add
mov
mov
fists
add
mov
loop
push
dec
cltd
mov
sti
mov
gs
mov
xlat
lahf
mull
or
adc
and
adc
movsb
xor
std
mov
mov
pop
jo
js
or
or
ficoms
aad
fldl
inc
mov
xor
test
aad
sbb
push
push
sub
mov
fcomps
sbb
sub
pop
xchg
jbe
dec
fimuls
mov
iret
mov
push
push
cs
lods
pushf
dec
mov
mov
outsl
mov
cli
clc
and
scas
jge
imul
ret
das
xlat
mov
pop
hlt
mov
mov
cmpsb
push
sub
int3
lcall
in
shll
mov
or
xchg
std
mov
mov
cmpb
sub
xchg
stos
inc
xchg
imul
stos
mov
scas
and
or
cmpsl
jl
or
xor
cltd
lock
jg
leave
out
sbb
out
cmpsl
xor
pop
jge
enter
jg
das
ja
push
ss
cli
lods
push
push
push
call
fwait
mov
or
add
jle
shll
cld
add
icebp
rorb
fadds
and
inc
sub
loop
jge
jno
mov
in
push
repnz
mov
ja
aam
mov
fnsave
push
roll
inc
cmp
dec
jo
mov
sbb
inc
mov
mov
arpl
xor
outsl
movsl
push
fiadds
cmpb
dec
and
jl
sbb
inc
pusha
outsb
mov
pop
add
sbb
pop
mov
adc
int3
test
das
dec
scas
xor
sub
fldt
mov
cmc
inc
icebp
sbb
inc
ds
xchg
push
pop
aad
fsubs
push
popf
cltd
mov
call
mov
sbbl
sbb
adc
xchg
std
push
cmp
jno
adc
testb
popa
cwtl
sub
data16
mov
repz
and
mov
popa
sbb
adc
icebp
inc
fcmovnbe
notb
push
inc
repz
jb
jle
movsl
loop
inc
jne
and
fisttpll
dec
data16
insl
mov
jne
dec
add
pushf
sahf
pushf
mov
and
adc
push
push
xchg
mov
lods
ficoms
jo
jl
addr16
adc
in
fldenv
outsl
inc
xchg
rcrl
aas
and
push
mov
mov
add
adc
outsb
ret
dec
popa
fimull
inc
push
mov
aam
xchg
sti
ljmp
int
dec
cmp
cltd
ljmp
pusha
add
push
aad
gs
adc
fprem1
dec
dec
cs
lret
mov
test
pop
clc
lods
mov
and
mov
sub
fidivl
sub
or
xchg
pop
in
pop
jo
inc
mov
jp
jp
cmp
ficompl
daa
imul
out
mov
test
shr
ljmp
xor
mov
leave
enter
pop
add
sbb
jl
xchg
aad
shrb
inc
outsb
adc
enter
sahf
in
dec
insl
xchg
rcr
and
xor
or
jle
shrb
sti
lock
loop
andl
cmp
cmp
adc
xor
sarb
mov
dec
addr16
adc
rclb
push
cmp
lds
ljmp
jmp
fnstcw
jle
push
rep
mov
push
mov
inc
mov
pop
xchg
push
int
fwait
add
cs
lds
mov
lock
ss
pop
jno
sbb
push
jno
jmp
push
cltd
pop
cmp
mov
jno
pusha
mov
or
cmc
stos
cmp
xchg
or
xor
arpl
ficompl
dec
mov
dec
int3
and
icebp
dec
fwait
xor
or
jge
cmp
shll
idivb
xchg
xchg
aas
push
mov
cmp
pop
lret
xor
xor
push
rolb
adc
repz
fnsave
sbb
ljmp
ss
sbb
pop
aad
xchg
lea
xchg
mov
push
outsl
ret
loope
jg
sahf
add
and
dec
pop
mov
fdivrl
xor
and
in
and
bound
and
popf
pop
shlb
clc
inc
sub
int3
mov
roll
ja
inc
test
add
xor
xchg
adc
mov
and
les
imul
dec
inc
adc
or
cmp
mov
inc
lea
in
cs
push
jno
jl
or
andl
add
sub
inc
jge
mov
adc
lahf
in
xlat
fdivrl
cmc
push
ljmp
roll
xor
mov
gs
push
cs
aam
jno
push
lock
pop
sub
add
fisubs
add
negb
insb
jno
dec
sbb
sub
push
cwtl
add
xchg
push
outsl
into
test
xchg
mov
je
adc
push
dec
jne
mov
pusha
fnstenv
pushf
and
rorb
loop
mov
jecxz
and
inc
mov
push
or
cwtl
hlt
push
outsl
repz
in
dec
mov
add
addr16
jmp
vmovdqa
inc
imul
cmp
lds
add
and
ss
xor
sarb
idivl
cli
pop
jb
xchg
popa
mov
sbb
js
inc
sub
mov
push
hlt
rclb
fadds
arpl
push
dec
sbbb
out
dec
mov
push
shrb
nop
adc
das
jl
lcall
stos
mov
pop
call
in
adc
shrl
lds
loopne
adc
cmp
movsb
fildll
push
std
jp
adc
stos
jecxz
lods
mov
aas
pop
mov
lea
jmp
mov
lret
popf
data16
lods
jmp
mov
dec
and
shll
cld
mov
dec
inc
adc
pushf
pop
popf
out
daa
fwait
add
push
clc
arpl
stc
pop
ret
pop
xchg
scas
ja
jp
std
cli
addr16
jge
movsl
xchg
shl
insl
iret
daa
mov
add
cmp
jae
daa
in
adc
sub
jae
and
xchg
pop
inc
adcb
rorb
lds
add
push
ljmp
lds
push
mov
mov
out
sahf
mov
jecxz
fldt
outsl
popf
lock
mov
testl
jb
or
lods
mov
adc
daa
in
pop
out
sti
loop
add
or
mov
or
jo
mov
inc
lcall
scas
in
xchg
mov
mov
jne,pn
fsubs
xchg
adc
fs
mov
repnz
pushf
cmp
lret
push
adc
or
jle
ja
clc
fcmovnbe
sbb
or
jne
bndldx
pushf
les
adc
sub
mov
jne
mov
out
es
sbb
xchg
test
sub
or
shl
movsl
pop
movl
or
xchg
mov
xlat
xor
pop
inc
adc
data16
popf
mov
std
ja
sbb
add
fsubrl
scas
xchg
popf
cmpsl
movb
pop
sub
lcall
mov
cs
dec
popa
scas
pop
dec
cli
pop
lahf
dec
xchg
mov
out
lret
jns
out
adc
xor
inc
out
pop
mov
jecxz
or
or
sbb
mov
xchg
fprem1
sub
sbb
xchg
lret
pop
xor
sub
into
test
sub
out
out
sbb
mov
mov
push
jle
in
mov
test
cmp
sbb
push
pop
mov
into
les
push
push
cmp
insb
enter
rcll
cs
adc
mov
xchg
loope
scas
dec
imul
adc
push
push
insl
icebp
fildll
or
pusha
mov
into
cmp
cs
jge
push
adc
and
shrb
xchg
lahf
push
lea
jnp
fs
jmp
or
dec
stos
jne
ret
pusha
addr16
mov
cmp
push
cmpsb
in
lret
push
aad
jmp
aas
mov
jmp
loope
mov
mov
mov
cmp
sub
popa
into
jp
arpl
jge
arpl
lahf
sti
leave
xchg
stc
adc
mov
andl
mov
sarb
scas
mov
and
sbb
out
insl
or
lock
out
movl
xor
jb
jnp
mov
dec
mov
pop
mov
out
enter
nop
pop
push
push
xorb
push
sub
cmpsb
add
fistps
lods
or
pop
dec
in
sub
and
push
inc
outsl
enter
or
inc
fdiv
je
lock
inc
dec
lods
std
push
pop
jp
jecxz
add
pop
cmc
sti
adcl
es
mov
jo
push
ljmp
jmp
sub
lcall
adc
hlt
outsl
jle
lea
cmp
js
insl
adc
pop
cmc
sub
out
shrl
dec
call
xor
gs
test
in
das
mov
test
pop
mov
push
or
fstps
lock
popf
cmp
jns
mov
inc
jg
sbb
adc
call
xchg
sub
cwtl
cltd
adc
int
bound
pop
add
xchg
lea
or
jmp
xchg
xlat
jge,pt
adc
loop
xor
lret
jge
or
pop
fnclex
pop
push
xchg
mov
cmpsl
lret
mov
scas
jle
xor
jnp
sahf
add
pop
fs
push
scas
mov
cmp
loop
incl
int
push
and
push
test
aad
stos
jb
frstor
pop
pop
lock
je
cmp
outsb
dec
aas
and
les
aam
jbe
jne
pop
stos
push
cmpsb
pavgb
jge
nop
jb
adc
pop
or
mov
inc
mov
sbb
insl
std
or
mov
jae
es
xlat
mov
push
sub
push
rorl
fildl
int
iret
push
adc
pop
cmp
imul
jle
pop
insb
sbb
or
cmp
lcall
loopne
sahf
lods
push
add
clc
arpl
or
rclb
out
push
add
xor
mov
mov
paddw
sbb
icebp
test
push
aam
stc
dec
xchg
dec
and
sbb
mov
mov
ljmp
leave
test
inc
arpl
push
inc
sub
push
inc
popa
ret
mov
push
cmc
lcall
jle
inc
cmp
out
or
mov
xchg
rcrl
mov
mov
inc
mov
adc
xchg
out
add
inc
xchg
pop
daa
xchg
ja
push
cmp
in
xor
testl
jno
jge
dec
sbb
fwait
sub
add
pop
inc
jb
mov
mov
ret
popf
jae
repz
xchg
mov
dec
loop
xchg
sbb
adc
mov
out
or
inc
inc
mov
je
mov
adc
aam
inc
jns
push
jle
and
pop
push
jecxz
mov
dec
loop
mov
pop
lea
out
cli
lock
in
or
jge
add
mov
imul
scas
push
mov
sbb
pop
xchg
xor
iret
fs
iret
push
test
mov
jecxz
enter
loop
mov
pop
nop
sub
push
cmp
and
dec
mov
aas
inc
dec
mov
sbb
sbb
repnz
sbbb
cmp
sbb
lea
push
outsb
movsb
jae
jno
pushw
mov
dec
mov
push
push
imul
jmp
or
push
in
int3
mov
mov
push
mov
aas
bound
sbb
pop
push
push
out
inc
lret
jmp
sbb
in
pop
pop
or
xor
fbld
out
push
popf
mov
and
cltd
xor
mov
ds
je
jl
inc
in
fsubrs
aam
xchg
push
mov
or
mov
mov
mov
gs
sub
aaa
mov
insl
loope
xchg
cmp
jmp
mov
idiv
imul
sbb
mov
lea
add
fs
push
nop
fisttpll
data16
cmpsb
pop
js
lcall
xlat
es
lret
icebp
leave
and
js
adc
pushf
outsb
cmp
dec
adc
sub
jne
mov
les
insb
into
scas
ljmp
pop
adc
pusha
mov
mov
adc
xchg
aaa
xchg
mov
ljmp
movl
jb
lds
push
scas
lahf
xor
stc
insb
outsl
iret
adc
or
xchg
mov
inc
ret
decl
popf
sti
repnz
fsubrs
and
sbb
and
outsl
dec
repnz
imulb
cltd
adc
imul
cmc
pop
out
cwtl
fs
pop
push
icebp
hlt
aad
repz
jnp
pushaw
pusha
loope
in
into
add
repnz
mov
or
push
xchg
lret
sub
faddl
loop
adc
xchg
mov
push
mov
push
push
mov
mov
pop
lds
sub
inc
mov
and
xor
add
sti
mov
movsb
rorb
lods
mov
dec
lret
dec
mov
pop
add
popf
ret
pop
sti
pop
xchg
add
std
jge
mov
negb
in
xchg
mov
and
aam
xchg
mov
push
cltd
push
sbb
mov
fbstp
dec
push
js
xchg
push
loope
xchg
or
movsl
dec
push
mov
jno
sub
sbb
les
inc
call
fadds
pop
pop
std
popf
and
cmp
pop
xchg
ss
sbb
inc
aam
and
pushf
and
fidivl
mov
fstps
cltd
pop
dec
outsb
stos
sub
jg
std
mov
pop
mov
leave
pushf
test
in
test
add
subb
pop
movsb
xchg
test
std
lock
pop
push
rcrb
push
cmp
mov
out
xor
mov
aaa
pop
or
xchg
and
pop
lcall
dec
enter
leave
cs
mov
cmpl
jge
fcom
std
push
or
pushf
inc
mov
sarl
dec
jecxz
pop
into
adc
dec
enter
mov
pop
and
ret
cmp
and
mov
in
dec
popf
mov
lret
sbb
or
push
out
and
ret
testb
jno
inc
pop
adc
in
movsb
ret
inc
test
jnp
scas
jb
inc
mov
arpl
pop
inc
mov
enter
into
notb
stos
push
pop
sub
xor
mov
in
adc
mov
sahf
mov
icebp
adc
push
dec
xchg
adc
xchg
dec
aaa
loope
fwait
mov
jbe
xchg
movsb
decl
mov
sbb
cwtl
mov
lahf
adc
ja
jne
in
sbb
addb
inc
repnz
mov
clc
lret
lcall
push
add
jns
filds
leave
fcmovnb
dec
shlb
jbe
lods
ja
push
and
xor
jo
dec
mov
scas
xor
sub
je
ret
push
sbb
sahf
mov
adcl
lock
mov
fcoml
sti
mov
mov
test
pop
out
lds
pop
jg
imul
test
push
push
mov
dec
xchg
dec
inc
cmp
xchg
mov
xchg
mov
or
fadd
clc
push
in
cmp
outsb
cmp
jmp
and
mov
xchg
scas
lret
xchg
arpl
and
aam
es
leave
mov
dec
repz
dec
fdivp
ja
pop
sub
mov
inc
daa
xlat
sbb
lds
sbb
sbb
add
popf
or
sti
xor
mov
outsl
mov
mov
add
call
sti
das
add
xchg
jl
jmp
add
into
js
pop
jmp
mov
inc
mov
cwtl
clc
xor
movsl
sbb
lret
ret
pop
xor
punpckhbw
or
arpl
dec
dec
movsb
cmp
dec
mov
movsb
jae
fwait
mov
mov
test
xchg
jo
sub
lret
push
pop
push
popa
and
xor
aaa
ret
xor
jg
sub
sub
mov
insb
lret
gs
lret
lret
pop
mov
xchg
fwait
inc
sub
data16
adc
arpl
dec
jne
mov
xchg
ret
xor
adc
mov
xchg
daa
out
subl
mov
daa
or
loop
adc
xor
jg
jl
push
or
pop
loope
add
sub
adc
lahf
stos
or
stc
je
mov
jo
mov
inc
adc
sub
sbb
mov
push
lods
fidivrl
mov
mov
ret
mov
mov
sbb
ja
cmpl
sbb
shll
dec
jecxz
sti
mov
ret
shll
mov
lods
enter
sub
int3
cmc
pop
mov
jae
sub
sti
call
add
subb
ffree
scas
xor
sub
mov
in
and
lods
bound
cmp
cmc
outsl
xlat
lea
imul
cmp
out
adc
pop
dec
jp
pop
pop
add
cmp
hlt
mov
jge
push
add
data16
out
scas
data16
mov
cmp
lods
inc
mov
lds
and
add
pop
sbb
mov
sub
push
bound
jne
test
std
incb
xchg
adc
sbb
mov
push
loopne
loopne
loopne
out
lret
push
or
xchg
pop
mov
pop
dec
or
and
lds
lods
clc
jg
adc
cmc
arpl
ljmp
je
add
addr16
fsts
xchg
lds
sub
xchg
iret
pushf
mov
add
mov
ljmp
or
testl
push
addr16
add
lods
int
push
mov
add
mov
push
lret
lret
stos
inc
cmp
mov
mov
inc
push
mov
sbb
ret
popa
lock
in
imul
fisubrs
stos
pop
mov
das
adc
xchg
lock
pop
fmull
loope
mov
mov
cmc
lret
mov
mov
popa
xchg
addr16
push
mov
fmul
or
xchg
cli
mull
in
ja
lods
xor
pushf
pop
aas
mov
aam
mov
and
pushf
mov
mov
and
test
or
cmp
sub
pop
mov
add
aam
test
xlat
das
lret
out
push
fwait
xchg
scas
jg,pn
jge
fimull
sub
cwtl
dec
mov
subb
and
std
cmp
pop
or
loopne
add
in
adc
mov
dec
je
inc
ret
cmc
adc
frstor
test
sahf
lea
into
into
and
mov
xor
call
push
dec
jo
fs
insl
jb
shlb
inc
pop
or
repnz
cli
mov
push
mov
add
popf
dec
test
cs
and
ljmp
cltd
adc
pop
repnz
mov
sbb
insb
cld
inc
mov
les
or
out
jnp
clc
sub
or
pop
jb
jb
popa
xor
xchg
loopne
pop
out
daa
cmp
fildll
xchg
loope
daa
xchg
nop
or
and
inc
fists
clc
mov
cld
mov
dec
mov
enter
or
or
cld
lea
js
adc
sbb
subb
call
dec
popa
dec
movsb
cmpsl
test
sub
mov
push
push
xor
jp
in
inc
push
call
les
call
add
cmpsl
or
cs
ljmp
push
push
jecxz
lret
fistl
popa
je
sub
stc
jge
lret
pop
mov
sub
call
jge
mov
loop
in
xor
mov
stos
cmpl
out
in
sbb
mov
adc
jnp
movsl
lret
test
ja
xor
sbb
push
xchg
jns
lahf
sahf
xchg
cltd
imul
pop
inc
call
addr16
int3
xor
or
jae
addb
insl
cmp
in
push
cmpsl
sub
xchg
mov
adc
sub
das
sbb
imul
cli
push
and
ljmp
repz
cwtl
sbb
xchg
imul
and
popf
mov
cwtl
in
mov
push
mov
mov
incl
sahf
mov
les
push
movsl
cmp
pop
out
int
cs
push
ja
test
push
adc
mov
mov
imul
xor
sahf
lock
jns
lock
bound
inc
lret
push
jo
push
mov
mov
lds
js
dec
data16
sub
cmpb
lcall
mov
sbb
ja
push
cmpsb
icebp
sbb
and
lahf
add
sub
sbb
mov
pop
pop
cmc
cmp
inc
test
mov
dec
mov
mov
add
fwait
jg
aas
outsb
test
adc
push
sahf
push
jae
mov
popa
es
cli
pop
pop
or
cmp
xchg
js
in
xchg
enter
jbe
stc
in
repz
repz
cmpsb
jmp
push
movsl
fisttpll
in
mov
icebp
sbb
adc
cwtl
adc
and
lahf
shlb
lds
stc
in
jae
int3
scas
enter
adc
cli
xchg
push
add
mov
mov
mov
repnz
sbb
in
cmp
add
repz
gs
das
and
inc
pop
and
pop
ror
mov
jl
testb
icebp
jge
jae
test
mov
in
cmp
mov
pop
and
xchg
cld
repnz
adc
mov
or
out
add
in
mov
aam
cmp
mov
out
stos
sbb
cld
out
mov
xor
cltd
mov
cmp
jecxz
loopne
pop
jb
push
pop
icebp
scas
int3
xchg
rol
lcall
inc
mov
out
ljmp
xchg
call
nop
push
dec
dec
in
movsl
xchg
xor
lret
pop
mov
adc
sub
inc
hlt
mov
inc
cmp
repnz
shll
mov
ljmp
test
xor
enter
adc
cmc
insl
mov
fwait
clc
push
push
popa
cmpl
and
in
xchg
push
xchg
test
mov
dec
test
pop
mov
and
xchg
or
jp
in
into
rorl
cmc
add
jg
jmp
and
ja
jb
shll
sbb
ljmp
testl
push
fcomps
push
xchg
fistl
push
jbe
mov
pop
cmp
ffree
mov
mov
aaa
lods
divb
dec
mov
push
addb
adc
sbb
mov
adc
dec
ret
inc
out
pop
adc
inc
int
ret
icebp
shlb
ficoml
popa
push
inc
pop
push
scas
push
or
icebp
andl
repnz
sub
push
pusha
xorb
insl
cltd
negb
add
xor
stc
adc
popf
icebp
adc
and
pop
mov
sub
std
mov
ss
push
pop
leave
adc
iret
rclb
mov
jnp
sub
out
in
push
mov
sub
jae
xchg
sub
lods
add
inc
into
sub
mov
mov
pop
andl
jmp
lea
inc
push
orb
imul
mov
push
jle
and
xor
jp
or
adc
stos
gs
int3
bound
xchg
push
fsubrs
add
mov
dec
test
jl
imul
sbb
xor
lret
iret
fidivs
jne
mov
inc
xor
and
jg
dec
jg
push
xor
shll
mov
lea
test
adc
dec
adc
int3
repz
sub
xchg
jmp
sbb
lock
dec
and
mov
xlat
lret
jecxz
ja
adc
or
and
roll
sbb
adc
mov
frstor
faddl
imul
sbb
fdivl
aad
cmp
pop
ds
mul
push
out
mov
notl
sbb
jmp
clc
inc
insb
mov
jmp
fs
xor
fabs
mov
ficomps
enter
fwait
jae
dec
add
movsb
roll
cli
mov
sub
cmp
les
fstps
add
lods
or
rol
shlb
cwtl
in
adc
inc
xchg
mov
xor
lds
add
push
xchg
fdivrs
xor
sub
test
test
test
addb
mov
and
or
push
jge
addr16
pop
jl
pusha
popl
jnp
mov
add
xor
pop
les
or
jmp
jns
xor
sbb
jnp
ret
inc
repnz
and
inc
std
jae
sbb
adc
dec
add
inc
movsb
pop
in
fistpll
or
sub
pop
test
push
mov
add
xchg
scas
adc
fadds
mov
cmp
or
mov
arpl
xor
ret
xchg
push
sbb
popa
xchg
and
mov
xchg
test
mov
adcl
cmovb
call
std
or
push
adc
call
pminub
push
add
mov
mov
or
std
sbb
push
loop
nop
stos
fldenv
xchg
mov
jg
sub
sbb
mov
fistpll
fwait
subl
add
pop
imul
movsl
push
or
xor
inc
fcmovbe
add
jmp
mov
mov
out
lcall
jne
cwtl
mov
shrb
or
lcall
js
xchg
mov
loop
mov
mov
stos
pop
push
xor
test
js
insb
dec
inc
fnstcw
pop
cwtl
mov
in
in
mov
xor
xlat
repz
sbb
push
cmpsl
ljmp
fcmove
shlb
dec
je
mov
es
mov
lret
mov
push
dec
fcoms
insl
test
push
loope
inc
repnz
sti
jg
ja
pop
pop
mov
lea
data16
cmp
movsb
push
in
jno
lock
popa
icebp
shl
mov
int
xchg
mov
ficoms
imul
push
fidivl
xchg
and
push
inc
xchg
icebp
jl
inc
add
stc
pushl
xor
xor
jnp
bound
sbb
push
sub
pop
loop
or
nop
dec
shlb
mov
push
andb
es
sub
inc
pop
outsl
hlt
add
cmpb
pop
push
adc
mov
sub
jb
gs
mov
xor
pminsw
mov
fs
lock
and
imul
xchg
push
mov
xor
jl
sbbl
jp
leave
cs
fs
sub
xchg
push
push
push
dec
loopne
out
bound
sub
imul
in
test
cmp
mov
pop
pmulhuw
fwait
jg
cld
stc
jle
adc
insb
scas
cmp
jmp
jmp
imul
mov
push
jnp
sti
push
adc
nop
xchg
xor
frstor
sub
sbb
xchg
pop
jmp
dec
fldcw
xorl
push
push
push
pop
ja
in
call
sub
add
xchg
ficompl
cs
scas
ret
adc
mov
stc
or
sbb
adc
lret
jmp
pushf
scas
jp
hlt
cmpl
jns
stc
pop
scas
add
movsl
pop
imul
icebp
ja
aad
shrl
lock
dec
sahf
dec
popa
les
inc
sub
scas
lret
mov
fstpt
arpl
push
mov
test
mov
ja
inc
xchg
fldt
shll
xor
cmp
push
outsb
das
xchg
jae
mov
adc
xor
and
jl
jecxz
cmpsb
dec
clc
out
mov
jae
and
fnstsw
mov
pop
and
sbb
xchg
mov
adc
popl
mov
scas
and
aam
or
xchg
fwait
or
push
arpl
mov
and
sbb
pop
mov
pop
fnstcw
loopne
sti
ss
mov
xchg
push
adc
rorb
pop
movsl
test
lock
cmp
mov
stos
adc
int3
dec
cmpsb
jns
jecxz
ljmp
and
sbb
sub
sub
lret
rcl
ja
xor
scas
fdivrl
and
ja
insb
xlat
ret
cmp
mov
sti
int3
adc
mov
and
lods
and
je
imul
xor
lcall
insl
incb
push
mov
push
loopne
mov
xor
xchg
pop
loopne
lcall
shl
fmuls
push
sbb
iret
dec
adc
or
push
out
jnp
inc
lret
in
or
dec
xchg
pop
out
push
rorl
mov
fcoml
outsl
mov
inc
fcomip
addb
out
nop
daa
cmp
mov
mov
pop
push
ret
push
lcall
rclw
in
sbb
mov
add
test
fisubl
mov
inc
stos
pop
mov
xor
sub
inc
adc
loope
incb
sbb
dec
shlb
sub
cwtl
jg
pop
je
sub
push
iret
std
dec
xchg
xorb
or
jne
pop
xlat
aas
push
ret
xor
xor
cltd
frstor
mov
push
add
dec
out
hlt
stos
in
dec
mov
jge
jle
pusha
sbb
pop
pop
add
cmp
mov
aas
outsl
pop
jmp
xchg
jmp
int3
sbb
aam
cmp
push
aas
into
repz
and
cmp
loope
cmpsb
and
movsb
jp
xchg
mov
pop
fdivrl
fnstenv
popa
aam
fwait
xchg
mov
dec
sbb
sarl
ds
ret
push
add
inc
aas
pop
enter
sar
mov
or
call
pop
addr16
lret
xchg
shlb
outsl
dec
jo
lods
daa
pushf
and
xchg
mov
ret
jge
test
mov
or
les
dec
lret
or
mov
push
enter
mov
call
test
push
pop
add
and
push
push
fwait
scas
movsl
jecxz
push
or
stc
ror
stos
and
inc
fwait
lcall
add
mov
xor
cmc
pop
dec
mov
shlw
mov
inc
push
stos
bound
gs
out
adc
inc
adc
mov
cli
cmp
cmp
popa
dec
lods
insl
and
loop
sub
data16
negb
sub
lahf
jo
cmovno
pop
mov
jl
mov
popa
push
out
popf
push
inc
hlt
add
das
mov
dec
ss
leave
cmp
fs
int
insl
daa
push
outsl
fisubrl
int3
cltd
loopne
fsubrs
inc
xor
pop
sbb
cwtl
fdivs
into
insl
sbb
jb
dec
mov
mov
inc
andb
cmpl
loope
and
sbb
sbb
call
adc
add
inc
aam
cltd
dec
push
ja
cmp
push
jns
mov
mov
cmp
push
pop
ret
or
into
inc
test
rcll
cmp
xchg
and
es
jmp
movsl
mov
pop
shll
test
xchg
fs
arpl
push
stos
push
xor
sub
es
test
push
jecxz
inc
std
or
inc
pop
scas
ret
fdiv
jl
daa
pop
in
outsl
lret
popf
adc
jmp
push
negb
jl
rolb
fs
cltd
in
sarb
repnz
int
test
fdivp
inc
cmc
fs
and
ds
bound
roll
push
test
inc
sbb
ja
arpl
push
shll
cmc
add
sub
fwait
jecxz
outsl
xchg
dec
and
repnz
call
mov
enter
push
sub
flds
ret
in
popf
pop
dec
cmp
cmp
push
lods
test
mov
idivl
cmc
aaa
sbb
mov
xchg
sub
add
jecxz
das
sub
fidivs
shlb
imul
sti
mov
cmp
insl
add
cmp
out
cmpps
push
or
aam
fidivrl
jae
inc
filds
jmp
pop
dec
pushf
fcmove
loope
jge
dec
xchg
es
xchg
jns
ja
sub
dec
inc
sbb
inc
jge
adc
inc
pop
xchg
mov
jns
xchg
lods
icebp
dec
test
xchg
push
push
out
jg
push
and
pop
imul
inc
add
push
mov
pusha
js
mov
lea
mov
push
xor
and
jle
sbb
adc
mov
fstps
adc
inc
sbb
aam
out
repz
sbb
fsubrs
popf
sub
sub
xchg
mov
jp
jno
jo
std
in
jb
or
mov
notl
and
es
rcr
fstl
fists
imul
imul
in
cld
mov
fdivrs
rorl
and
sti
lahf
mov
fs
clc
xor
pop
lods
mov
xor
cltd
mov
lret
and
push
cmp
imul
in
movsl
ficomps
cmp
mov
inc
inc
jno
ss
xchg
push
sahf
inc
push
add
test
int3
out
stc
jne
dec
dec
push
test
ret
test
in
enter
xor
sub
ds
addl
aad
adc
addr16
lcall
jnp
jmp
sub
pop
out
popf
daa
xlat
testl
test
test
mov
or
cmp
dec
ret
mov
filds
push
stc
rcll
push
fcoml
or
test
adc
jmp
inc
movsb
xchg
loopne
daa
pop
clc
js
cltd
aas
inc
sub
leave
add
sbb
out
nop
loope
pop
js
bound
jmp
minps
mov
aaa
xchg
xchg
mov
dec
cs
cmpsl
and
sbbb
ja
xchg
leave
add
push
cwtl
repnz
movsb
add
test
jne
push
push
add
fsts
pop
add
mov
decb
adc
pop
push
movsl
jnp
call
push
push
inc
pop
movsb
ftst
flds
outsl
xor
fsts
jne
decb
in
xchg
mov
negb
push
lods
pop
movsl
clc
dec
outsb
icebp
sbb
jo
mov
imul
dec
xor
adc
clc
pop
mov
jnp
xchg
lea
jg
js
inc
dec
in
ret
jmp
add
sub
out
loope
or
jns
fnsave
sub
shrl
push
xlat
ds
add
pop
andb
cmp
mov
icebp
mov
xor
sbb
lods
loop
ds
mov
mov
ss
gs
es
idivb
add
lret
xchg
imul
push
hlt
ja
mov
mov
push
bound
dec
out
addr16
test
adc
dec
mov
mov
inc
push
sub
or
sub
cmp
test
mov
jb
inc
fst
scas
xchg
ss
xor
mov
adc
addr16
xor
sbb
sahf
pop
xchg
xchg
lock
lds
dec
cltd
ds
popf
push
pop
insl
xor
add
sbb
mov
lods
push
inc
sbb
aad
aam
push
cmp
sub
leave
cwtl
dec
mov
int3
dec
movsb
xchg
fcomps
jnp
sbb
imul
mov
cmpb
mov
gs
mov
mov
sbb
inc
out
pop
es
cmpsl
sub
adc
popa
push
pop
test
adc
xchg
sbb
cmc
sub
pop
jl
or
jecxz
in
sbb
jecxz
orb
imul
inc
push
pop
mov
xor
out
push
adc
loop
or
lcall
rcrl
enter
hlt
or
adc
sbb
sbb
mov
imul
in
pop
cmp
fwait
add
nop
jb
inc
popa
xchg
test
xor
sti
ds
xor
xor
lcall
jle
test
loope
inc
rorb
push
insl
mov
hlt
pop
push
push
and
dec
xor
test
cld
clc
mov
fisttps
sarl
mov
ja
cmp
cld
cs
insl
loopne
pusha
mov
loope
cld
push
inc
ljmp
jae
adc
cmp
das
cmp
jb
push
test
lock
inc
pop
sbb
dec
sbb
fcomi
addr16
sub
int
sub
pop
bound
sbbl
dec
mov
movsb
test
scas
out
outsb
or
xchg
pop
cltd
lret
into
rcrb
cld
cmp
or
dec
xor
sub
jle
sub
push
arpl
jbe
xchg
pop
cld
imull
lds
or
test
js
loop
aad
lret
dec
repz
ds
jbe
or
shrl
outsb
mov
jg
adc
adc
ret
cmp
mov
es
push
sbb
jg
pushl
loope
addr16
dec
add
mov
loope
fiaddl
cmp
sahf
push
jae
jecxz
insl
mov
stc
cmp
repz
add
mov
pop
daa
fcomps
mov
in
sub
je
shll
ret
popf
pop
xchg
mov
fdivrs
aam
in
sub
inc
push
popa
adc
jae
out
jge
ret
mov
sub
mov
jp
and
mov
movsb
lock
icebp
adc
dec
scas
pop
aam
sub
mov
mov
leave
mov
out
sbb
mov
bound
jno
andb
and
das
mov
mov
inc
jo
in
lahf
int3
cli
cmp
ficompl
pop
int
out
mov
sti
xor
pop
xchg
aad
into
cmp
in
inc
mov
adcb
popa
ja
add
cmp
stos
mov
mov
mov
leave
popf
mov
mov
jmp
fsts
inc
xchg
fistl
mov
add
fnstcw
call
inc
mov
or
pop
jecxz
jae
or
fimuls
and
or
std
jb
stc
nop
mov
xchg
jmp
lock
sbb
cmp
repnz
push
aam
pop
xchg
inc
inc
test
loope
mul
aad
icebp
sub
pop
and
arpl
mov
repz
dec
lret
mov
std
pause
pop
or
or
add
push
fisubs
adc
and
addr16
fwait
scas
arpl
mov
pop
cli
imul
sub
ljmp
movzbl
out
lea
shll
fs
mov
mov
inc
sbb
enter
sub
fcomp
leave
pop
mov
jb
lahf
xlat
hlt
dec
jge
jecxz
pop
into
test
mov
cmp
xlat
lahf
cmp
and
mov
or
cwtl
cld
mov
adc
cmpsl
mov
jge
xor
pop
lahf
std
ljmp
sahf
push
lods
mov
cld
push
push
inc
or
jg
push
mov
cmc
push
out
arpl
add
mov
cmp
mov
lahf
xchg
les
popf
in
roll
inc
or
push
mov
fnstenv
mov
aas
mov
sub
xor
inc
sti
jl
lods
int3
iret
inc
loopne
sub
into
rcr
inc
scas
sbb
and
add
imul
push
aas
adc
sbb
cmp
xchg
into
and
adc
jg
mov
out
call
xchg
lret
cmpsb
and
xor
xor
pop
xor
mov
dec
outsb
jbe
bound
mov
mov
out
inc
bound
push
les
mov
adc
sbb
bound
sti
dec
repz
loop
mov
xchg
repz
xchg
push
inc
into
aaa
sub
lods
cmc
movsb
sub
sub
mov
sub
add
jbe
repz
sbb
test
movsl
insl
mov
mov
cld
mov
sub
fiadds
fcomps
leave
pop
cmc
push
pop
lock
stc
fistpl
mov
test
cmpsl
repnz
pop
cwtl
test
dec
or
cmp
movsb
int
inc
mov
aas
push
and
inc
cs
fstpt
and
sub
mov
fidivrs
inc
dec
or
loop
xchg
cltd
dec
sti
stc
dec
mov
aaa
or
clc
mov
bound
pop
push
jae
and
sbb
inc
sbb
stos
shrb
sub
sbb
popa
sbb
pop
jne
es
inc
or
pop
pmaxsw
xor
call
sahf
pop
xor
fistpll
pop
inc
sbb
jecxz
jnp
add
cmp
movsb
jle
inc
mov
mov
nop
mov
or
aas
cmp
dec
in
clc
lock
mov
ja
cmp
rorb
loopne
mov
mov
mov
mov
mov
dec
rorl
mov
popa
icebp
dec
xchg
and
outsb
int
pop
mov
sbb
mov
and
dec
fsubrp
pop
sahf
arpl
xchg
adc
fisubl
sahf
sub
jl
dec
and
dec
sarl
xchg
call
or
lods
push
xchg
jge
icebp
movsb
pop
jp
fcomps
cmp
daa
int3
outsl
pop
sti
pop
rcrb
stos
add
mov
mov
stc
fstpl
sbb
mov
aam
fidivl
pop
outsl
out
mov
push
mov
cmp
sub
xchg
add
or
adc
mov
and
lcall
pushf
lods
mov
gs
mov
mov
mov
xchg
out
inc
fiadds
adc
inc
push
or
sbb
add
xchg
push
mulb
fnstsw
add
call
jo
pop
pop
leave
xor
leave
dec
cmp
pusha
mov
lds
in
loopne
mov
add
roll
nop
movsb
add
shl
xchg
add
push
sti
lret
cwtl
sbb
add
jge
ljmp
xchg
lea
and
pop
inc
hlt
pop
mov
push
out
and
add
jecxz
push
aaa
pop
cmp
push
pusha
in
rclb
inc
test
dec
jnp
push
pop
pop
lahf
xchg
outsl
mov
in
pop
pop
es
inc
loopne
fistpll
push
add
xchg
gs
js
cmp
add
pop
mov
fcompl
cmp
xchg
clc
imul
jns
repnz
sub
ss
lods
mov
add
test
dec
andl
sub
mov
mov
push
rolb
jecxz
jae
ficomps
mov
lds
sbb
ds
std
cmpsl
pop
xchg
movsb
or
je
aas
mov
insb
cmp
pop
pop
les
mov
cwtl
mov
sub
xor
pop
inc
fistpll
cmpsb
jns
sbb
mov
cmp
jge
outsl
jmp
fiadds
inc
outsl
mov
and
xchg
aad
addr16
dec
scas
adc
xchg
iret
roll
out
jne
in
fstpl
rolb
jns
mov
les
adc
sti
push
in
jle
or
or
push
ds
pop
ret
or
lret
loope
push
add
inc
push
loop
cwtl
sub
arpl
pop
cmp
add
popa
sbb
adc
jae
push
xchg
cmp
mov
dec
add
filds
bound
sbb
push
sar
mov
stos
push
movsb
pop
fmuls
mov
pop
cmp
lcall
jp
sub
aas
jge
mov
cmp
in
popa
xchg
adc
cmp
je
or
lds
add
sbb
mov
adc
test
fsubl
test
xor
loope
sbb
mov
mov
jmp
sub
mov
inc
mov
mov
add
and
rcr
sbb
dec
pop
xchg
lahf
rcrl
mov
push
and
or
adc
stos
inc
mov
mov
jno
mov
xchg
leave
je
mov
dec
mov
add
xchg
fstps
dec
inc
xor
dec
cmpsl
mov
sub
cmpsb
pusha
pushf
popf
mov
orb
xor
jl
sahf
pusha
xchg
add
shlb
ljmp
bound
inc
add
rol
ljmp
jecxz
pop
in
cmpsb
fdivrl
subb
cmp
push
cltd
mov
pop
sbb
or
jge
mov
addr16
adc
mov
dec
pushl
sub
adc
call
add
mov
cmp
sbb
into
stos
fwait
and
xchg
mov
inc
mov
or
sbb
xchg
and
nop
psubb
nopl
dec
mov
inc
sahf
movsl
idivb
cmp
decb
movsl
ret
cld
pop
xchg
and
ljmp
inc
xchg
lock
icebp
or
push
loope
sbb
in
mov
aaa
mov
je
pop
sti
pushf
pop
and
or
mov
fnsaves
stc
or
pop
lea
hlt
lds
push
xor
inc
call
jns
in
bound
pop
scas
push
daa
jge
xor
mov
mov
cltd
or
inc
xchg
ficomps
insb
mov
in
and
pop
test
je
aam
xchg
in
add
daa
in
inc
movsb
jle
call
and
add
adc
xchg
cmp
pop
mov
fnstsw
sub
inc
xchg
mov
sarl
sub
addr16
and
xor
adc
pop
scas
adc
add
punpcklbw
sub
mov
shrl
or
mov
xor
pop
lret
jne
loope
popf
mov
fwait
mull
stos
mov
or
jge
orl
ds
mov
stc
in
jmp
xchg
mov
pop
das
adc
cmp
xor
sub
imulb
aam
push
sbb
xor
addr16
cwtl
nop
jno
out
pusha
pop
dec
movsl
push
mov
or
stc
push
jmp
jne
fistpll
ret
ret
cmp
jbe
sub
sarl
gs
std
ror
mov
jg
lret
mov
adc
cmp
or
mov
std
jle
inc
sub
jg
btc
lea
adc
arpl
add
inc
mov
rcll
out
movsb
outsb
repnz
mov
sub
jmp
bound
dec
in
mov
sbbb
test
cmp
fucomi
jbe
movsl
jmp
xchg
cmp
hlt
cmp
cwtl
cmpl
fdivrs
mov
pop
xor
sub
pop
lret
test
sub
in
fs
dec
and
xchg
dec
lret
and
popa
adc
out
mov
push
mov
inc
call
xabort
mov
xchg
add
fnstenv
out
inc
lods
or
mov
cmp
mov
or
xchg
fdiv
cld
addl
sub
mov
lahf
sub
adc
mov
adc
ljmp
fldlg2
pop
out
push
ss
fbstp
xchg
pop
ja
push
mov
jns
and
pop
nop
or
xchg
jmp
ss
pop
sti
mov
inc
xchg
addr16
sub
xchg
jle
std
jne
mov
ds
test
inc
mov
imul
jns
out
xor
jne
aas
in
outsl
add
ds
jge
aad
and
mov
data16
nop
out
mov
pop
jno
das
popf
iret
jp
mov
jl
mov
movsl
mov
xor
jne
xchg
lods
xor
cmpb
push
jns
adc
ljmp
repnz
pop
push
ror
xchg
pop
xchg
fcompl
ja
scas
add
leave
jns
arpl
fnstcw
gs
mov
nop
fs
sub
mov
add
add
adc
push
ret
pop
sbb
sub
push
cmpsb
mov
outsb
in
lret
pop
xchg
adcb
pusha
xor
fstpl
pop
xchg
testl
jb
and
fildll
sbb
subb
data16
adc
jo
out
push
mov
cmpsb
cmp
ja
dec
pop
xchg
xlat
lods
adc
pop
add
ret
cltd
inc
xor
push
and
cmpsl
xorl
jnp
aad
sti
pop
popf
jge
imul
jns
jnp
addr16
xor
and
lret
rolb
dec
xor
decl
pusha
insb
lods
cmp
fcomps
push
cmp
lea
adc
jae
xor
xor
or
test
mov
inc
push
push
es
je
mov
in
push
xchg
sahf
or
nop
insb
pop
stos
pushf
xor
test
sbb
lds
cmpsl
push
stos
and
gs
in
imul
push
and
fldln2
mov
ret
mov
pop
aad
iret
movsl
faddl
add
std
adc
push
or
xor
in
and
add
cmp
cmpsl
repz
in
push
or
inc
adc
adc
fstpt
lods
mov
cli
mov
cwtl
pop
pop
xchg
repnz
out
add
mov
out
dec
xchg
xchg
jge
pop
into
jle
fildl
outsl
pop
xor
hlt
lds
sbb
fs
ljmp
xor
jmp
mov
call
xor
icebp
jb
bound
adc
mov
cwtl
aad
mov
or
in
test
xor
or
roll
mov
lock
sbb
xchg
jmp
jae
push
and
dec
push
fdivs
in
dec
aas
mov
mov
jle
jne
mov
pop
xlat
ficoms
lcall
out
jle
aam
push
sbb
sbb
dec
stc
jb
imul
daa
mov
xchg
pop
lods
jmp
or
pop
loopne
insl
jo
lret
mov
fwait
sti
std
gs
mov
mov
sbb
xlat
ds
pop
xchg
jle
push
imul
pop
dec
cmp
movsb
adc
scas
dec
adcl
pop
outsl
xor
mov
fwait
jmp
lods
pop
hlt
mov
pop
out
repnz
dec
into
cmp
mov
aad
icebp
add
sub
dec
push
das
push
test
insl
pop
mov
mov
out
mov
push
xchg
jbe
jmp
or
insb
xor
test
pop
push
lret
inc
pop
xor
in
aam
push
sub
mov
flds
rclb
jns
stos
shl
jle
insl
xchg
pop
pusha
mov
lahf
fs
cmc
and
imul
int
fmuls
std
cwtl
and
bnd
clc
push
cmp
fstpl
js
decb
adc
mov
mov
fcompl
mov
xchg
movsl
dec
jecxz
std
mov
rorb
and
popf
call
jg
adc
leave
sub
rcll
insb
out
lods
lock
lods
and
inc
fsubl
add
nop
sbb
jne
movsb
adc
or
mov
xor
testb
sub
xor
test
gs
pop
or
js
pop
mov
scas
sbb
iret
loope
imull
inc
movsl
mov
push
jp
fdiv
and
mov
lods
lea
outsl
or
rolb
add
adc
imulb
xchg
ficompl
in
clc
and
ds
push
inc
je
movl
mov
mov
pop
xchg
mov
aad
dec
call
fwait
jbe
pop
pushf
in
out
push
jp
out
xchg
outsl
jg
cmp
xor
jbe
mov
push
add
jge
test
or
mov
shl
imul
lds
movsl
push
pop
inc
scas
pusha
daa
add
lock
pop
push
or
fwait
arpl
mov
add
lret
mov
fiadds
inc
popa
mov
in
sub
lds
push
push
mov
cmp
sbb
outsl
std
cs
out
inc
adc
mov
gs
out
sbb
sbb
xchg
adc
outsb
lea
mov
cmp
lods
xchg
fs
mov
rclb
cmp
test
push
sbb
mov
gs
fcomps
outsl
arpl
out
ss
add
movsb
pop
lret
jo
leave
sbb
clc
fisubs
outsl
imull
out
ss
pop
dec
jne
sahf
popa
loop
rcrl
daa
mov
inc
out
pmaxub
xchg
enter
lods
addr16
dec
push
pushf
or
data16
jae
xlat
sub
jns
mov
mov
mov
cmp
sbb
out
push
adc
mov
xchg
or
mov
rolb
sub
mull
imul
sbb
daa
add
dec
mov
in
mov
fistps
rorb
add
lea
xchg
lea
jg
dec
scas
shlb
negb
shll
hlt
fcmovnbe
cltd
mov
sbb
enter
pop
or
sahf
enter
lods
xor
dec
daa
mov
push
into
in
dec
mov
fidivrl
xor
cld
imul
in
push
jne
and
rcl
xchg
adc
sub
arpl
test
xchg
push
jno
fisubrl
sub
scas
imul
or
cmpl
movsl
aas
sbb
push
dec
js
adc
in
jl
decl
pop
mov
and
mov
mov
mov
mov
popa
std
je
xor
inc
push
in
test
movsb
lret
std
and
xor
rol
ficoms
lcall
aaa
mov
adc
popa
enter
jle
xor
ja
sbb
arpl
jp
int3
in
pop
roll
push
sub
mov
and
and
call
in
jg
ficoml
sub
fadds
lea
cs
xchg
mov
inc
sub
in
pop
ret
ret
push
jbe
mul
jbe
push
lods
lcall
inc
hlt
push
lea
out
add
adc
call
mov
pop
daa
clc
xor
repz
mov
daa
xor
sbb
data16
pop
stos
mov
or
mov
lahf
mov
cmc
mov
scas
fstps
pop
ret
les
dec
in
in
dec
notb
mov
mov
sbb
jno
pop
cltd
daa
and
inc
cmp
icebp
test
int
mov
and
outsl
adcl
sbb
popa
inc
icebp
lds
adc
repz
xor
icebp
cmp
out
fs
dec
jecxz
adc
and
adc
lret
in
mov
ljmp
outsl
adc
out
aaa
inc
into
xchg
dec
inc
and
mov
or
jmp
inc
lea
cmpsb
sub
push
jno
jno
fs
int3
xchg
filds
adc
call
pop
js
les
ljmp
add
inc
sub
xchg
lret
cs
mov
inc
dec
outsb
lods
mov
clc
adc
xchg
push
or
xchg
mov
push
dec
mov
xor
popa
adc
je
lcall
out
jecxz
fadds
xor
and
jns
mov
aad
lcall
scas
popf
mov
add
ja
dec
adc
xchg
pop
mov
push
or
fs
push
pop
mov
push
fisttpll
adc
sti
adc
cli
ss
push
sar
fs
loop
xor
jg
push
popf
mov
push
mov
adc
mov
test
loop
or
add
aad
xchg
mov
fbstp
sub
push
jne
jmp
insl
dec
shll
xor
add
jp
dec
pop
insl
iret
fsubr
cmp
lods
les
pushf
leave
mov
arpl
pusha
in
ja
sbbl
test
rcrb
enter
imul
rcrb
mov
mov
fdivrs
lock
fldcw
push
mov
pop
jne
insl
xor
scas
lods
hlt
lds
xchg
subb
jae
add
pop
inc
mov
iret
fidivl
scas
pop
pop
sub
aad
push
negl
iret
rcll
xchg
xor
inc
push
push
jnp
or
cmpsl
pop
dec
push
movsb
repnz
shlb
outsb
jae
loopne
xchg
aas
jmp
adc
mov
pop
pusha
cmp
dec
ret
mov
push
jl
sub
push
add
pop
gs
push
adc
test
xchg
call
sti
in
sbb
or
dec
xchg
pop
js
lods
jecxz
jo
jne
ret
add
call
inc
sub
lea
cwtl
rcrl
sbb
icebp
add
pushf
sti
mov
sbb
imul
dec
in
or
popa
negb
jge
fs
stc
cmpsl
js
push
mov
test
adc
mov
dec
addb
jge
daa
fstpt
xchg
aad
adc
cwtl
out
stos
filds
jl
mov
push
lds
outsb
xor
adc
mov
mov
xchg
stos
sub
jge
sbb
shl
pop
cmp
push
inc
xchg
cmp
push
movsl
or
pusha
ret
push
mov
iret
stos
jge
cmp
cli
mov
sbb
jb
dec
int3
xchg
lods
push
cli
mov
stc
inc
push
sbb
push
daa
ret
not
das
and
or
mov
xchg
outsl
push
ficoms
mov
out
js
test
mov
stos
popf
pmaddwd
push
or
xchg
rorb
mov
push
fcmovne
add
stos
or
nop
xor
fwait
mov
mov
mov
stos
xchg
into
les
loopne
pop
clc
repnz
sti
out
sti
dec
divl
js
notb
lcall
divb
xor
loop
test
in
fimull
mov
xchg
adc
sbb
jnp
leave
repnz
in
jl
jae
inc
cmp
mov
push
ficomps
mov
or
and
push
arpl
nop
jmp
hlt
sbb
popf
cld
sbb
dec
ja
push
pop
xor
cs
popf
jle
mov
inc
rcrl
inc
iret
cmpb
mov
test
or
aas
jl
adc
push
jnp
std
mov
loop
xlat
lds
dec
test
jp
fxch
jmp
push
jo
push
fstpl
clc
cltd
pop
stos
dec
mov
rcrl
xchg
mov
test
pop
mov
inc
imul
popf
in
je
shll
adc
push
dec
fucomi
add
movsl
loop
push
jl
mov
push
inc
ret
pop
jg
ds
inc
adc
scas
addr16
ja
inc
call
add
pop
cmp
lods
inc
ja
xchg
pop
adc
push
sub
js
xchg
jg
add
dec
popa
clc
enter
add
adc
ljmp
cld
inc
je
lahf
bound
outsb
leave
sub
xrelease
cmc
testl
aad
dec
adc
fldcw
in
dec
sub
call
mov
inc
cmp
cli
pop
scas
loopne
jbe
xchg
push
xchg
fsubrl
mov
nop
adc
rcrl
inc
dec
mov
and
mov
out
xor
adc
bound
insb
jg
outsl
jle
je
sub
pushf
lret
cmp
mov
mov
cld
xchg
adc
data16
xor
pop
xchg
out
adc
sbb
push
popa
xlat
xor
cli
push
sub
cmp
adc
xchg
push
iret
jmp
mov
fs
test
test
lret
adc
sub
sub
ror
mov
dec
push
inc
push
addr16
cltd
data16
add
je
mov
mov
lret
loopne
andl
stc
sub
or
dec
divb
fsub
and
punpckhwd
cmpsb
jecxz
test
aas
jmp
les
sbb
push
xor
xchg
sub
clc
jecxz
jle
clc
enter
push
outsb
int3
mov
mov
in
jecxz
roll
notb
lock
push
ja
mov
sbb
loopne
ss
scas
sub
stos
js
nop
out
jmp
inc
test
leave
xor
mov
outsl
push
cmp
ret
fldcw
jle
mov
or
in
lret
add
sarb
cmp
and
hlt
pop
xor
jne
lret
stc
cmp
call
ljmp
testb
jno
aad
insb
add
xor
cld
clc
fs
fsub
xchg
test
fdivrs
fidivrs
subl
mov
jo
jae
ja
cmp
xchg
cmp
test
mov
pop
call
sub
and
lahf
mov
aas
lods
lods
enter
shl
xchg
push
adc
es
jo
insb
ds
adc
jb
and
cmp
pop
mov
aad
ds
inc
stos
dec
ss
in
mov
pusha
xor
sti
mov
arpl
ret
jb
xchg
outsb
cmp
sbb
xlat
xchg
repnz
outsb
xlat
mov
pop
pop
aam
ja
jo
sub
sub
mov
add
das
dec
mov
std
xchg
leave
add
lahf
enter
adc
sar
jp
jno
dec
pop
dec
adcl
js
scas
or
dec
in
pop
pushf
xlat
sbb
cli
mov
int
mov
insl
mov
cli
data16
cmp
iret
xor
test
pop
shll
or
jns
adc
lret
xor
sub
in
addl
cld
lods
jbe
je
lret
cmpsb
testb
iret
adc
jg
out
lods
or
xor
cmpsb
inc
ja
jge
xor
dec
lret
fstl
cmp
adc
insl
jle
and
inc
pop
in
xchg
cmp
jl
lret
jecxz
nop
cmp
push
jns
jge
testl
jg
les
out
in
dec
out
mov
sub
popf
cmc
out
data16
mov
jnp
in
jno
adc
and
mov
orb
outsl
add
inc
lods
sahf
insl
dec
cmp
mov
inc
enter
mov
mov
and
sbb
pop
jo
hlt
cmp
cmpsl
mov
add
lock
adc
loope
push
cld
test
outsb
int
or
lock
arpl
jmp
data16
mov
lcall
imul
xchg
mov
fsubr
push
iret
sbb
cli
mov
stos
pop
inc
jbe
mov
xlat
pop
sarl
dec
or
cwtl
push
repz
test
jb
or
mov
stos
insl
fnsave
ror
mov
movl
repnz
and
cwtl
xor
sub
pop
cmp
aas
mov
push
cmpsl
pushf
jo
aas
xchg
sbb
mov
in
repnz
mov
sarb
mov
cmpsb
stc
jb
push
out
adcl
and
es
dec
movsl
mov
pop
imul
lods
cmp
or
mov
aad
popf
rorl
xchg
scas
repnz
xchg
test
push
loopne
xor
inc
fisubrs
and
add
lods
cltd
sub
cmp
das
sbb
sbb
outsb
mov
pusha
sahf
lods
aam
add
dec
xchg
sub
test
clc
and
push
and
mov
push
std
adc
mov
dec
inc
jg
movsl
icebp
cmpsl
cmp
mov
aad
dec
adc
sub
pop
aaa
fcmovnbe
sub
cltd
aaa
dec
push
loopne
icebp
lea
cmp
sbb
mov
gs
test
mov
pushf
repnz
sub
test
cmp
and
lahf
les
sub
inc
jle
xchg
shll
xchg
ds
push
mov
aas
insl
xchg
subl
dec
jae
push
mov
push
fstpl
and
sbb
rcrb
outsb
test
popf
inc
mov
fnsave
addr16
jge
adc
mov
jp
inc
fs
les
pop
call
pop
mov
mov
sti
in
sbb
js
dec
outsb
sub
mov
pop
roll
movsb
add
push
push
mov
stos
adc
inc
cmp
jge
sbbb
mov
stos
push
sub
ds
enter
mov
pusha
mov
jb
aad
jae
dec
xchg
push
iret
mov
stc
inc
or
addr16
sahf
cmc
mov
lret
outsb
xchg
push
pusha
cld
in
and
add
fcoml
ja
inc
mov
pop
cwtl
inc
and
fwait
sahf
xchg
pop
loop
pop
sub
je
and
cmp
and
push
cli
es
shlb
xlat
scas
xchg
out
mov
fcomip
adc
add
shlb
out
movsl
or
inc
push
fimuls
cmp
std
test
mov
in
mov
leave
aaa
pop
outsl
addr16
push
jecxz
sbb
sub
loopne
xchg
mov
xchg
cli
dec
mov
inc
mov
jne
insb
lcall
pop
mov
sarl
and
into
lea
adcl
pop
sbb
sahf
lods
mov
or
pop
data16
cmp
clc
ret
sahf
mov
ret
mov
push
cmp
scas
adc
sbb
add
jge
xor
push
and
mov
imul
in
cmpsb
jo
std
push
out
dec
mov
aad
nop
jl
or
addr16
adc
sub
mov
push
sub
adc
cmpsl
push
dec
xchg
and
lods
cmpsb
lcall
cltd
call
jb
mov
inc
xchg
js
inc
pop
mov
xor
mov
sub
sub
jne
xchg
xchg
icebp
fisubrl
sub
clc
icebp
fs
xlat
lods
sub
pop
push
adc
stos
and
mov
sbb
fwait
in
insl
mull
icebp
je
cltd
jecxz
pop
pop
repz
iret
outsl
fstpl
and
mov
push
mov
inc
jmp
jbe
int3
in
lea
push
xchg
aam
mov
lret
test
test
xor
dec
or
mov
test
inc
or
adc
mov
aad
loope
xchg
adc
ljmp
push
popa
test
scas
lahf
push
dec
jl
xor
lahf
mov
inc
jp
loop
sbb
rcr
scas
mov
mov
cli
iret
dec
push
pop
and
or
mov
dec
addl
mov
scas
aas
mul
dec
imul
xchg
jg
jo
and
cli
add
push
dec
inc
sub
inc
inc
adc
add
fcmovne
outsl
inc
out
sub
pushf
sahf
lock
loopne
cwtl
inc
aaa
cmp
imul
mov
push
mov
dec
xchg
add
lock
cmp
jne
outsl
push
mov
negl
or
sbb
pop
push
mov
xchg
test
lret
sahf
leave
xorl
inc
enter
mov
enter
daa
ret
ror
xchg
xchg
in
push
xchg
cmp
icebp
in
stos
ja
mov
inc
cltd
dec
and
mov
sbb
ss
cmovg
movsb
scas
or
jge
js
sbb
and
or
sub
jmp
jmp
dec
xchg
mov
in
call
getsec
mov
pop
fwait
jmp
push
pop
xor
fldcw
mov
cmp
loopne
dec
cmp
lret
jbe
and
int
and
aam
pusha
sbb
cmp
mov
mov
fcmovu
sub
xor
inc
xor
push
jl
test
fs
mov
hlt
and
sub
outsl
stos
jbe
lcall
xor
add
in
xchg
pop
mov
or
sar
je
push
sbb
xchg
xlat
rcrb
imul
lret
xor
and
jp
daa
cmp
sti
movsl
sub
lret
jecxz
mov
test
sahf
negb
dec
aas
xlat
push
mov
jns
aad
mov
sbb
or
adc
mov
ret
sbb
addb
dec
inc
bound
jge
and
dec
cwtl
jge
ljmp
mov
ljmp
push
mov
daa
sbb
rclb
shrb
inc
out
cmp
xchg
sub
in
xlat
aad
mov
pop
dec
inc
cli
and
loopne
dec
out
fcom
in
dec
pop
lds
mov
lock
mov
ficoml
in
outsl
dec
pop
or
loop
repz
xor
jb
jl
inc
addr16
ljmp
jnp
mov
popf
push
mov
xor
test
jnp
adc
loop
and
sub
mov
addr16
push
fnstenv
and
fdiv
enter
outsl
or
sbbl
lock
jecxz,pt
out
sbb
test
sub
addl
cmp
jp
adcl
pop
xorl
rorl
inc
push
into
lea
out
imul
xor
xor
das
xor
push
mov
roll
mov
add
pop
or
push
orb
inc
pop
jo
fwait
dec
mov
fwait
mov
or
inc
sub
jns
popf
sbb
out
jnp
push
outsb
sbb
loope
mov
ja
fnsave
adc
dec
dec
mov
pop
in
iret
jecxz
lods
sub
gs
mov
lods
cs
inc
nop
clc
jno
mov
stos
sti
iret
loopne
dec
dec
std
in
cmpsb
adc
mov
loopne
push
jg
loop
out
sub
sub
pop
mov
jp
push
mov
mov
xchg
cwtl
insl
sbb
lods
xlat
fcmovne
movl
mov
push
or
rolb
das
xchg
fs
lods
add
jmp
cld
popa
cmpsl
outsl
or
das
mov
inc
sbb
aas
leave
imul
mov
cmpsb
les
ds
iret
aad
cmpsl
scas
fldcw
jbe
inc
dec
in
xchg
aaa
test
mov
clc
pop
xchg
outsb
inc
xor
inc
hlt
dec
push
cs
adc
ljmp
cmp
pop
call
push
and
xor
or
or
or
out
fs
xor
adc
dec
scas
lret
fdivrl
pop
mov
shll
xchg
lds
out
xchg
jecxz
cmp
les
jo
in
jl
push
mov
push
xor
mov
in
aad
inc
fcmovbe
stos
in
dec
into
ds
aaa
fwait
bsf
out
jge
sbb
jecxz
add
scas
cmpsl
cmc
and
popf
xchg
sub
in
rcll
outsb
aaa
or
jnp
adc
mov
jno
test
xchg
iret
adcb
loopne
push
mov
and
sbb
adc
jp
dec
sub
test
cmp
push
mov
cli
xchg
rclb
mov
adc
mov
fwait
jecxz
enter
fadds
fstpt
int
mov
xchg
stos
xchg
fs
fsub
ja
mov
addr16
jns,pn
push
mov
or
push
jno
xor
lods
xor
xor
ds
and
je
jmp
mov
push
jge
fstl
out
inc
push
test
dec
out
test
test
jo
pop
and
push
cmp
rolb
jno
xchg
dec
daa
mov
push
int3
dec
cmp
xchg
push
loope
ret
or
filds
sbb
mov
jns
mov
add
lcall
mov
adc
push
ja
jbe
icebp
loopne
xchg
cld
mov
inc
scas
sub
test
rclb
les
mov
jbe
loope
idivb
cld
cld
push
xchg
or
sub
lret
hlt
xchg
out
lods
inc
leave
add
in
jge
xchg
shrd
mov
push
stos
jnp
addr16
repnz
iret
lret
xchg
lret
push
gs
dec
inc
out
push
sbb
dec
pop
out
fwait
xchg
outsb
icebp
sti
sub
sub
sub
jge
enter
fs
movsb
in
out
rolb
mov
insl
fdivrl
pop
push
int3
ret
xchg
and
aaa
js
xor
dec
fistps
cmp
imul
cmp
mov
cld
xor
rcl
cmp
call
inc
sbb
popl
push
aaa
push
subb
mov
lods
inc
cmp
aad
or
imul
sub
shl
push
inc
inc
xchg
and
or
shll
dec
mov
xor
sbb
sbb
sub
bound
adc
mov
imul
xor
mov
cwtl
cmp
sub
loopne
jae
pusha
adc
fwait
jnp
fcomi
icebp
mov
sub
dec
xchg
adc
arpl
in
into
shl
enter
pop
or
pop
gs
ljmp
aad
mov
lock
push
les
xchg
and
insb
dec
jbe
fldenv
jecxz
jle
xor
pop
cmpl
pop
sbb
mov
lcall
dec
flds
cmp
or
imul
ret
mov
fimuls
pop
loop
cmp
es
fidivrl
cmp
jns
mov
or
in
test
xor
mull
cmp
mov
pusha
jecxz
sti
mov
lods
in
idivb
mov
pop
push
push
stos
jp
or
cmc
mov
jnp
mov
aaa
inc
xchg
and
jle
add
mov
lret
sahf
movsb
and
stos
mov
in
mov
jg
fistpll
pop
cltd
das
mov
cmpb
mov
iret
ds
int3
jp
arpl
hlt
aad
sbb
mov
add
mov
cmp
mov
pop
test
ret
jns
or
push
int
and
adc
jge
xor
nop
rolb
packssdw
dec
mov
jbe
sahf
xchg
jp
fdivs
lock
mov
xchg
insb
mov
push
mov
adc
leave
dec
jmp
test
loopne
xor
in
pop
fisubrs
mov
push
mov
sub
inc
jne
cmp
popa
jbe
push
mov
nop
test
sbb
push
lods
loopne
mov
push
sbb
lds
sbb
xchg
stos
pop
das
stos
lock
daa
sub
add
iret
xor
mov
and
mov
insb
mov
lds
lahf
insl
add
cmp
or
pusha
sti
jns
cmc
ss
pop
sbb
pop
insb
fldl
pop
jnp
xor
cmpsl
dec
dec
push
sbb
mov
mov
dec
inc
ja
jns
cli
sahf
sbb
and
cs
fldenv
popa
and
and
pop
push
fldl
mov
dec
les
mov
push
sahf
adc
sub
sub
ret
pusha
push
push
in
mov
sub
jns
negl
mov
scas
iret
xor
fbld
ss
into
xlat
sub
dec
mov
lret
enter
mov
add
pop
ss
in
dec
fstpt
or
xor
or
das
fcmove
mov
mov
sub
imul
insl
or
imul
popa
test
mov
fcmovnu
in
daa
and
push
out
mulb
mov
inc
fisttpl
pop
adc
sub
pop
dec
dec
xchg
test
sbb
xor
push
cltd
sub
jl
lret
push
sbb
in
arpl
mov
aad
int
add
push
mov
rcl
jb
sarb
hlt
sub
loop
cwtl
cmp
ror
xchg
pop
mov
rcrb
in
and
fadd
mov
inc
imul
fisttpl
add
daa
add
pop
lahf
out
rcll
xchg
movsl
push
aas
jge
and
cmpsl
xchg
in
and
fistpll
dec
push
xlat
add
test
ds
pop
mov
daa
inc
push
or
mov
outsl
shl
outsl
xchg
add
cmp
lock
xchg
lea
jnp
mov
int
in
fimull
xlat
je
xchg
loope
arpl
jge
repnz
inc
inc
ret
push
xor
cmp
jne
mov
mov
fs
and
cmpsl
cmc
or
pop
imul
clc
movsb
icebp
and
sbb
inc
scas
ljmp
inc
fstpl
shll
imul
push
imul
mov
lods
cmp
ds
cmp
dec
cmpsb
into
movl
add
cmp
test
dec
mov
or
int
cld
inc
pop
mov
test
imul
dec
lahf
push
gs
das
inc
repnz
sbb
idivl
jno
and
adc
add
add
inc
out
dec
or
cmp
jle
arpl
add
shll
fisubl
fwait
cmp
push
push
jmp
test
sbb
rolb
popa
imul
adc
loop
cli
dec
loopne
adc
pushf
inc
test
xor
cmc
arpl
cmpsb
pop
push
lods
mov
movsl
cmpsl
data16
insl
idiv
add
adc
test
pop
out
and
mov
fsts
enter
sbb
stos
and
negl
add
addr16
je
cmpb
cmp
js
les
pop
push
aas
shlb
jmp
jge
jno
lods
jle
cmpsb
xchg
test
pop
pop
mov
mov
aas
daa
lea
in
xor
inc
shrl
sub
out
dec
mov
sub
insl
push
cld
jecxz
cli
in
mov
ds
mov
sub
or
test
mov
fxch
sub
jmp
or
add
fs
scas
jns
inc
cs
icebp
xchg
adc
xchg
dec
adc
insb
cmp
std
mov
aam
dec
psllq
dec
dec
testl
shlb
adc
shr
repz
jae
sbb
xchg
xchg
repnz
pop
sbb
repnz
fsts
adc
or
ret
jg
addr16
jns
add
jno
shl
dec
jmp
mov
xor
push
loop
add
je
cmpsb
add
sahf
sbb
out
popf
jecxz
xlat
ds
mov
push
xchg
icebp
nop
add
sub
sub
and
mov
cmc
push
ljmp
repz
test
mov
jmp
mov
icebp
pop
mov
sbb
dec
aaa
jns
std
movsb
shll
pushf
xchg
pop
lea
inc
pusha
xor
dec
jl
add
jmp
scas
mov
jg
push
arpl
sbb
std
pop
ret
pop
popf
mov
xor
mov
cmc
cmp
sbb
pop
cli
in
mov
xchg
andb
repnz
loopne
dec
push
outsb
mov
stos
dec
movsb
loopne
fwait
push
ret
rorb
pushf
loop
daa
adc
adcb
lds
daa
xchg
xor
push
fstp
shll
mov
mov
testb
mov
imul
sbb
adc
mov
jb
xchg
int3
leave
adc
mov
stos
cmpsl
or
jge
pop
xor
lods
in
sub
jmp
cmp
imul
xchg
insl
rorl
dec
mov
cmc
and
mov
rorl
sbbl
pop
repz
mov
lds
rolb
mov
pop
loope
pushf
js
pop
or
jo
fcomps
cltd
push
ffreep
or
xchg
sub
xchg
xchg
xchg
das
cmpsb
and
and
push
lods
sbb
sub
cmpsb
jg
insb
jl
xchg
cmp
in
lock
pop
or
push
mov
xchg
ja
popf
cmp
and
cmpsb
jmp
dec
jo
incb
psubd
arpl
xchg
push
mov
iret
pop
test
stos
sub
out
ret
xor
mov
addr16
int3
outsb
add
rorl
or
test
adc
sub
cs
mov
xor
adc
add
jmp
test
in
sub
enter
mov
add
adc
lods
jbe
sahf
ja
jp
sub
mov
pop
jno
jle
test
push
stos
sub
into
and
imul
add
pop
xorb
cmp
fwait
pop
push
ret
ds
or
cmc
je
jmp
jmp
aas
mov
addl
dec
xchg
sti
add
pop
insb
add
sub
and
mov
aam
shr
pop
mov
aad
or
xchg
imul
sbb
xchg
insl
int3
mov
ja
fistpl
pop
mov
inc
pop
cwtl
bound
xchg
fwait
adc
mov
push
out
dec
test
xor
push
jge
xchg
dec
xor
mov
mov
sbb
outsl
je
pop
pop
inc
add
xlat
aas
shlb
mov
cmp
call
dec
dec
sti
test
sub
xchg
cmpsl
jle
cmc
add
das
sti
lods
mov
test
or
lret
loopne
lods
inc
pop
imul
jmp
cwtl
adc
scas
push
out
sub
js
push
bound
xchg
and
sub
xor
ret
dec
cmp
shr
mov
jmp
jp
rcll
call
inc
outsl
dec
into
xchg
sub
loop
bound
test
sub
aaa
mov
pop
pop
out
xor
dec
es
and
mov
mov
out
add
mov
out
add
jl
cli
ljmp
cmp
clc
in
sbb
xorl
xor
fcmovnbe
dec
icebp
cmpsl
mov
jo
sub
jge
mov
fs
out
add
loope
mov
pop
shrl
xor
aam
jne
into
pop
cmpb
fsubrs
push
push
push
push
or
push
adcb
movsb
in
pushf
cwtl
sti
ljmp
inc
or
cmpsb
and
fwait
je
xor
mov
cs
into
mov
and
insl
dec
pop
gs
adc
lods
inc
inc
cmc
sahf
fwait
pop
mov
shrl
add
sbb
add
mov
popa
jl
inc
outsl
push
lods
inc
imul
push
or
daa
push
es
xchg
les
pop
scas
adc
sti
push
jl
rolb
mov
call
rorb
pop
es
lea
xor
jl
fwait
xor
jle
rolb
push
scas
xchg
adc
adc
in
je
clc
mov
in
adc
add
jb
xchg
insb
pop
cli
or
mov
ja
fwait
jb
inc
add
xor
repz
sub
mov
scas
add
sub
and
std
fadds
xor
mov
adc
and
push
mov
fimuls
dec
nop
cwtl
push
push
fsubl
jae
outsb
jb
stc
inc
push
jo
nop
js
xor
jb
adc
sbb
xchg
cmpsb
aas
loop
jl
dec
xor
psadbw
cmpsl
decb
jns
ss
dec
mov
dec
fidivs
ljmp
sbb
out
loope
mov
stos
in
pop
dec
sahf
pop
xchg
jge
cld
xor
mov
lods
pop
cmpsb
and
jecxz
cwtl
dec
fidivrs
dec
or
fcompl
jge
data16
push
xchg
scas
or
js
cmc
push
fwait
test
fsubr
test
addr16
xor
outsl
mov
add
sbbl
sbb
jno
dec
scas
mov
daa
adc
mov
stc
cld
mov
add
rclb
dec
outsl
fildl
aad
push
or
xchg
sahf
mov
cli
mov
cwtl
cwtl
sub
and
xor
adcb
js
mov
outsb
lret
mov
jno
sbb
aas
gs
jl
leave
loope
xchg
cmc
aam
test
and
xchg
jne
jno
popa
lahf
orl
sub
stc
push
inc
jnp
mov
or
ljmp
lods
clc
jae
mov
mov
stos
jo
push
dec
test
jo
iret
xchg
mov
cmp
or
in
out
cmp
out
ret
push
jp
dec
ljmp
in
in
test
movsbl
xchg
mov
add
repnz
jno
inc
and
pop
pop
push
jl
inc
hlt
iret
outsb
mov
es
pslld
bts
jo
push
stc
mov
mov
movsb
jne
cmc
push
inc
ljmp
in
test
sbb
arpl
imul
int3
jmp
in
lods
orl
movd
sbb
inc
cmpsl
in
aam
push
sti
loope
shl
xor
cmp
lret
cld
jl
pop
jb
push
sahf
aaa
jmp
imul
fistpl
insl
das
leave
mov
fcompl
ljmp
sbb
add
subl
ret
push
data16
fistps
fmull
fstps
ret
sbb
hlt
roll
imul
imulb
cmp
push
fnsetpm(287
ret
loopne
bound
mov
mov
jnp
xor
std
ret
inc
cs
int
icebp
add
inc
fwait
pop
adc
xchg
in
pusha
loop
and
cltd
sub
add
dec
jne
dec
iret
pop
xchg
enter
out
int3
call
cmpsl
mov
fs
movsl
bound
mov
mov
pushf
lods
cmpl
jno
pop
push
fnstcw
leave
ljmp
mov
sub
pop
pushf
sbb
adc
add
pop
call
jg
addr16
push
call
mov
push
mov
mov
xor
mov
fs
and
pop
pop
bnd
push
xchg
aas
sub
xchg
in
dec
loope
in
adc
xchg
cmpsb
sub
jnp
out
dec
mov
mov
popf
rclb
test
jb
enter
imul
je
cld
adc
lock
sub
mov
add
fstps
mov
mov
xlat
pusha
mov
fucomi
inc
ret
outsl
adc
mov
or
das
imul
dec
push
cmp
mov
aam
add
pop
or
or
mov
pop
test
test
add
frstor
xchg
and
das
inc
dec
and
ss
pop
push
scas
jecxz
or
jne
outsl
je
adc
jae
mov
imul
sub
leave
imul
sahf
push
mov
dec
mov
mov
xor
or
mov
loop
jle
fistps
in
bound
push
inc
fstps
mov
xor
fcomp
ljmp
or
ja
mull
add
outsl
in
inc
decb
hlt
jnp
lock
rorb
or
in
push
loope
addr16
mov
shl
ljmp
mov
movsb
inc
xchg
nop
into
ja
sarl
test
sbb
cmpsb
call
push
testb
cmp
in
cmp
data16
cld
push
daa
and
mov
lahf
cmp
stc
fists
mov
xor
mov
lods
dec
je
xor
jnp
xchg
jp
mov
enter
test
ss
aaa
mov
mov
adc
sub
mov
pop
dec
and
cmp
fdivl
insl
or
xchg
mov
xchg
inc
fisubrs
je
mov
pushf
push
mov
repnz
mov
and
setle
push
stos
jl
or
int3
ret
ljmp
xchg
daa
popw
push
dec
adc
push
test
mov
cmp
inc
xor
push
fcomps
cmp
adc
lret
mov
push
andb
push
scas
bound
fiaddl
adc
lret
inc
xchg
xlat
mov
jno
push
lret
mov
inc
xor
movsl
mov
gs
shr
scas
test
or
cmp
xchg
dec
add
int
icebp
cmpsl
adc
jbe
inc
lcall
shlb
rcr
into
and
lods
pop
lahf
mov
gs
es
daa
mov
test
sub
jae
jmp
sub
lds
or
ljmp
popa
jno
cwtl
in
out
add
and
popf
in
mov
jmp
or
mov
dec
add
ss
lea
sarl
push
push
mov
mov
ret
sub
or
sub
mov
cmpsb
mov
arpl
inc
std
aaa
mov
mov
fnstenv
imul
sub
xlat
test
mov
push
xor
add
sbb
shlb
lds
add
sbb
mov
and
mov
call
mov
jno
inc
jmp
cmp
dec
add
cmp
or
jae
hlt
mov
int
mov
inc
ss
or
es
es
cmp
imul
cld
popf
jo
loop
add
xchg
fdivl
and
imul
cs
sbbl
test
int3
imul
xor
jge
addr16
adc
test
cli
xchg
mov
sar
cmp
shrl
in
xchg
xchg
mov
cmpsl
cmp
les
fisubrl
and
int3
xor
or
mov
mov
mov
and
push
mov
into
lahf
sub
adc
hlt
imull
enter
xchg
js
xor
inc
int3
jp
xor
enter
test
sti
or
cmp
call
in
mull
iret
cmp
outsb
mov
in
out
push
jno
sub
pop
xlat
push
mov
adc
out
daa
rcrl
push
dec
bound
add
jle
xor
repnz
imul
lret
pop
sbb
or
or
decl
mul
leave
mov
fbld
mov
inc
test
jae
in
push
in
mov
push
daa
loope
inc
clc
outsl
add
das
loop
mov
pop
cmc
imul
dec
fistpll
add
popf
fdivs
or
xchg
adc
mov
pop
mov
dec
mov
rolb
jmp
bound
fildl
mov
inc
and
pop
jbe
mov
inc
lea
lods
xor
adc
mov
inc
xor
aaa
iret
movb
jno
xchg
iret
adcb
ds
das
jb
scas
xchg
add
sub
jno
pop
dec
fwait
js
dec
cwtl
call
mov
daa
push
sub
lahf
daa
sbb
mulb
dec
sub
xchg
clc
fstps
arpl
add
cmp
xor
lcall
sbbb
in
ret
ds
mov
and
in
mov
movsb
enter
adc
xor
sbb
ja
test
xchg
into
jp
aas
mov
in
jecxz
xlat
addr16
pop
mov
leave
std
rolb
dec
fldenv
pop
adc
and
movsb
lcall
rcll
pop
in
mov
xchg
add
dec
or
dec
mov
xor
inc
movaps
clc
add
arpl
mov
jae
daa
insb
pop
pop
lret
xor
jp
movsb
iret
pushf
push
inc
mov
lock
call
loope
stc
ja
repz
sbb
std
fs
lret
lock
cmpsl
mov
sbb
stos
dec
fnstcw
xor
cmpsl
loope
test
mov
inc
or
push
xlat
fimull
sarl
cltd
jb
xor
or
addr16
cmpsl
jge,pt
iret
or
push
jb
iret
cs
mov
idivb
xchg
stos
push
aaa
jno
inc
dec
xchg
pop
lock
jns
sbb
jno
je
cmpsb
mov
push
sbb
mov
ret
pop
jle
mov
fimuls
pop
push
sub
adc
add
cmp
inc
cwtl
push
rol
rcl
lret
xchg
jl
jecxz
sbb
cmp
xchg
stc
test
adc
sti
sub
xchg
js
and
lods
add
and
rol
ss
xchg
cmp
or
repz
divl
jg
insl
enter
pusha
insl
daa
cmpsl
pop
adc
mov
das
mov
fsts
jmp
jns
arpl
test
cmpsl
mov
adc
ss
in
lahf
and
lock
pop
mov
cs
xlat
lock
pop
aad
jle
stc
repnz
les
popa
xchg
dec
cmpsb
pop
xor
inc
cmp
sub
mov
roll
mov
mov
xor
dec
cld
xor
aas
fcoml
lods
pop
loope
lcall
or
popf
push
out
aaa
cmp
add
test
fadds
and
les
sti
dec
jb
push
and
inc
jbe
cli
test
bound
subl
and
sub
dec
loopne
rolb
xor
jp
jle
scas
rorl
xor
lret
mov
jp
pusha
pop
addl
in
dec
or
jecxz
loope
rolb
xor
jnp
and
fisttpl
jo
mov
or
and
push
je
lods
push
je,pn
xor
pop
repz
rorb
orl
inc
fdivrl
jmp
loop
notb
in
sub
xor
xchg
xchg
aad
in
loope
dec
push
jecxz
ret
add
sub
mov
pop
int3
loopne
ljmp
fucomip
mov
adc
enter
cmp
inc
ss
popf
dec
js
sub
mov
dec
jns
cmp
lea
rol
test
shl
orb
pop
cmp
mov
mov
out
jo
dec
or
mov
fnstenv
sub
in
test
int3
and
icebp
xor
xchg
lock
in
loopne
sub
leave
js
inc
enter
jge
fdivrs
sub
cmp
cs
cmp
aam
scas
add
push
sub
jnp
repz
jne
fimull
or
aaa
lret
mov
dec
sub
sbb
jmp
mov
pop
pop
inc
dec
dec
in
xor
or
or
xchg
mov
hlt
das
mov
jp
cwtl
inc
push
add
jae
sbb
sub
push
lahf
mov
lret
loope
loopne
aam
mov
icebp
outsl
imul
cmp
in
test
mov
xor
fdivrs
or
sti
js
lds
lret
std
int3
jno
or
lret
pop
sub
dec
or
nop
pop
mov
loope
or
jl
repz
sub
popa
lock
mov
mov
arpl
inc
xor
lods
inc
daa
cmp
add
jl
sub
pop
mov
shrb
and
sbb
lods
inc
dec
mov
cmp
mov
or
push
jno
aaa
in
inc
push
mov
int3
push
rorb
xchg
fdivrl
push
mov
sbb
inc
daa
push
dec
jne
mov
jno
idivb
scas
ja
push
mov
les
dec
int
out
jae
loopne
mov
aam
jmp
je
arpl
lret
loop
mov
and
fnstcw
inc
in
inc
daa
mov
js
sar
loopne
js
push
lods
out
mov
cmp
push
jle
xor
gs
sti
mov
or
not
jns
or
test
insl
fldcw
test
mov
notl
xchg
sbb
or
ficoml
and
fbld
shll
xor
in
fbld
mov
xor
xor
sbb
or
movsl
and
inc
xchg
ret
adc
loope
jno
leave
fnstenv
inc
das
movsl
ljmp
cwtl
cs
xor
shufps
aam
jne
inc
sahf
cmpsl
dec
pusha
shlb
daa
stc
push
dec
sub
pushf
pop
and
xchg
sub
adc
bsf
adc
pop
push
xchg
or
loopne
xchg
lods
xchg
jne
pop
xor
mov
jecxz
shl
dec
mov
ja
mov
xchg
fadd
lret
mov
sahf
mov
rcll
scas
or
xchg
mov
xorl
ret
xchg
pushf
mov
and
and
mov
fmul
mov
scas
xchg
ja
sti
jp
mulb
mov
jg
push
addr16
and
cmp
sbbb
mov
xor
add
ljmp
scas
daa
jae
imul
lock
jbe
in
pop
pop
aas
lds
mov
xchg
negl
push
mov
pusha
xor
sub
fdivrs
pop
aas
sbb
mov
sbbl
fistpl
ret
cltd
pop
je
xchg
inc
jo
add
leave
xor
jle
xor
mov
xchg
ret
pop
lods
cmp
outsb
jle
mov
dec
je
or
xchg
push
ds
cli
test
or
loop
jecxz
js
hlt
in
xchg
jno
or
xchg
pop
out
lods
incb
cmp
mov
adc
lods
mov
xchg
inc
dec
cs
in
or
ret
xchg
mov
stos
js
push
ret
addr16
fisttpl
jle
jb
in
pushf
or
lock
shll
jnp
or
out
rcrl
lcall
addr16
insb
sub
gs
sub
pop
cwtl
movsl
das
and
jg
inc
mov
mov
sbb
les
or
pop
or
jp
sbb
sub
jae
add
cwtl
insb
addr16
cwtl
mov
pop
fs
and
xchg
nop
sbb
fwait
sbb
sti
dec
repz
mov
or
ror
rcr
aaa
mov
lock
ja
push
mov
and
negl
inc
push
xor
mov
rolb
ja
sub
inc
popl
lds
in
inc
inc
jl
lock
insb
add
out
fsubrs
ja
scas
sub
jo
std
sbb
lahf
push
addr16
mov
mov
mov
xchg
mov
jl
rcr
out
testl
push
dec
jge
lods
add
lods
jge
ret
or
arpl
loopne
push
push
xchg
fldt
xchg
iret
xor
mov
mov
xor
ds
sbb
outsl
loop
jo
mov
sbb
outsl
xor
punpcklwd
jae
sub
mov
addl
shrb
jo
out
pusha
xchg
inc
inc
and
add
mov
and
add
insl
pop
int3
jp
and
cmp
dec
shll
jl
mov
stos
or
xchg
pop
xchg
leave
jmp
out
movsl
sbb
add
ja
xchg
and
mov
into
and
iret
dec
fcomi
jecxz
mov
roll
push
and
sbb
imul
mov
push
fbld
inc
cmp
xchg
idivb
ja
xchg
lods
in
loope
insb
sbb
scas
mov
inc
push
imul
call
push
shlb
add
sub
pop
xchg
pop
sub
fstpl
ljmp
cs
inc
sbb
sub
ljmp
mov
sub
add
add
and
jo
out
outsb
xchg
dec
mov
pop
sahf
sbb
sti
sbbb
flds
push
and
aad
enter
gs
lea
xor
sbb
rcr
lods
dec
xor
pop
ret
and
jl
xchg
adc
mov
add
cmp
aam
pop
pop
out
mov
loope
mov
lods
adcl
loop
sbb
imul
sbb
mov
ret
dec
jl
lds
xchg
jns
ss
and
xor
add
mov
mov
decb
push
cmc
popf
shrb
fsts
std
nop
imul
test
push
fildl
sbb
pop
mov
test
sbb
sbb
mov
cmp
cmp
mov
push
enter
test
inc
cs
imul
push
dec
fdivrl
mov
cmp
icebp
subl
inc
adc
ss
pop
jg
subb
outsb
imul
rcll
test
ds
pushf
push
jecxz
lcall
mov
mov
pop
das
mov
pushf
loopne
ret
movsl
int
adc
aaa
or
mov
arpl
adc
fmuls
cs
andl
xchg
xchg
cmp
fwait
sub
add
adc
leave
pop
push
push
scas
xlat
add
or
pop
or
add
mov
stos
orb
adc
mov
add
push
and
test
lret
in
jnp
add
lcall
lahf
dec
xchg
repz
daa
and
push
jno
icebp
ss
xchg
mov
out
ja
cltd
xchg
scas
or
incl
pop
test
sub
jae
call
mov
rcrb
enter
sub
inc
mov
mov
ret
sbb
sub
mov
movsl
sub
dec
dec
inc
adc
sub
cmp
push
fadds
dec
cmpsb
lahf
rcll
enter
mov
aad
dec
adc
imul
push
inc
or
mov
or
mov
add
and
lods
dec
rcll
imul
imul
sub
add
les
add
sub
insl
push
roll
jmp
pop
mov
sub
jmp
or
inc
ss
rorl
shll
div
das
out
aam
xchg
jae
xor
pop
rolb
or
mov
inc
arpl
jle
clc
jg
mov
xor
inc
fsubl
repz
je
in
inc
sub
rclb
leave
jmp
push
stc
inc
scas
mov
xchg
push
fwait
lock
fsubs
push
jge
out
sbb
loopne
push
xor
pop
push
out
in
and
jmp
dec
lret
adc
mov
stos
or
cwtl
pop
push
fildll
push
decl
lret
lock
push
add
aas
in
xor
dec
xchg
enter
push
jno
pop
sub
fbstp
pop
push
add
hlt
rclb
jmp
mov
mov
es
adcb
sbb
repz
jnp
out
xchg
lcall
mov
mov
incl
mov
cmp
and
mov
xor
adc
or
and
dec
and
push
popa
jp
stos
mov
add
push
sbbb
je
pop
sbb
mov
movsl
int
dec
arpl
mov
scas
add
in
rcl
adc
mov
push
xor
iret
ret
dec
add
gs
mov
sub
xchg
in
out
jg
jecxz
sub
mov
fmul
xchg
loope
iret
mov
mov
int3
pushw
bound
jae
inc
dec
pop
mov
add
xor
dec
clc
xor
inc
test
rcll
inc
xchg
mov
sbb
mov
into
add
into
adc
hlt
inc
or
and
cmp
push
add
mov
adc
jns
cmpsl
and
jecxz
lea
push
daa
push
mov
jbe
imul
mov
andb
leave
ret
push
fbstp
sbbl
xchg
add
lea
adc
and
pop
arpl
push
dec
push
adc
fsts
add
je
testb
std
outsl
insl
pusha
enter
mov
cmova
push
jb
mov
rcrb
repnz
aad
jg
les
out
push
stc
in
pop
inc
cmp
loop
fwait
sbb
adc
lds
repnz
lods
out
jp
mov
mov
pop
pushw
sahf
sbb
and
jbe
dec
movsb
cmp
pop
adcl
jbe
xchg
call
sarl
clc
mov
xchg
jecxz
pop
stc
sbb
push
or
pop
stos
lods
jne
cmp
testb
test
aaa
xchg
mov
sbb
in
fwait
rcrb
addr16
mov
pop
clc
add
lret
mov
fistpl
sub
in
and
dec
aad
scas
lret
stos
lds
mov
mov
divl
inc
and
in
jl
movsb
sub
stos
mov
lds
loopne
mov
fisttps
fcmovne
xlat
aad
cmp
movb
out
push
jne
std
pushf
hlt
push
ljmp
movsb
inc
or
dec
pusha
jo
repz
cmp
or
push
xchg
adc
cwtl
subl
jl
push
pop
add
add
xchg
push
aas
fsubrp
push
add
cmp
add
data16
imul
out
subb
add
mov
push
lds
mov
cld
loopne
xchg
pusha
adc
pop
xchg
scas
push
dec
lret
push
xchg
jo
lret
mov
fsubl
into
cltd
push
dec
movsb
inc
dec
and
push
lods
xorb
lahf
or
xor
aam
ljmp
ret
movsb
inc
lds
popf
pop
divb
push
lods
shl
andb
mov
in
jbe
movsl
subl
cmpsl
in
sub
lret
mov
pop
lret
sub
push
mov
nop
sahf
cmp
xor
cltd
push
lret
sbb
jb
jo
mov
pop
and
ret
cmpsl
xchg
cltd
sti
cltd
dec
pusha
mov
ljmp
mov
sub
hlt
ja
xchg
call
leave
loope
xor
and
mov
and
xchg
mov
dec
mov
aad
fs
in
mov
jle
pop
lds
cmc
or
stc
jbe
inc
dec
or
mov
push
fadds
sbb
mov
pop
in
clc
pushf
sub
int3
adc
and
pop
shrb
pop
fcoms
nop
dec
adc
or
add
pop
enter
sub
dec
push
fildl
jg
cli
stos
or
lods
imul
lea
fwait
mov
fmull
popa
mov
in
and
cmp
adc
mov
xchg
pop
xchg
cld
aas
sahf
jmp
fsubrl
mov
xor
or
jae
xchg
push
outsl
aas
out
inc
test
pop
cmp
sbb
sbb
pushf
push
movsl
push
mov
mov
xorb
popa
roll
stc
xchg
les
dec
adc
imul
enter
les
cs
cmpsl
jg
out
cs
cmc
jmp
aam
lahf
jne
push
adc
push
clc
mov
and
enter
sub
rorb
xchg
add
mov
push
xor
cmp
test
mov
adc
pop
pop
test
test
xor
rclb
dec
cmp
adc
pop
mov
jns
xchg
gs
lcall
xchg
and
pop
mov
es
ss
clc
jecxz
dec
push
stos
shlb
ret
dec
sti
bound
mov
enter
or
lret
xchg
sbb
xchg
xchg
jmp
and
ljmp
cli
repnz
and
sub
cmp
icebp
out
add
ret
std
push
pop
xchg
fstpt
subb
pusha
pop
imul
push
es
loop
inc
out
sbb
mov
inc
pop
push
mov
adc
mov
out
adc
arpl
xrelease
sbb
or
nopl
loope
call
lahf
aaa
pop
mov
xchg
fidivs
mov
jb
cmp
fcompl
inc
mov
and
or
push
sub
cltd
pop
arpl
sub
fwait
js
and
cmc
adc
aaa
mov
push
pop
dec
push
imul
or
sbb
push
jecxz
int
in
fstl
or
movsl
nop
mov
adc
out
cmp
in
sub
mov
ret
rclb
sub
inc
dec
jno
outsb
push
mov
iret
xchg
mov
sub
jne
sub
sub
jnp
das
dec
imul
ds
pop
mov
sub
popf
and
push
insb
xor
dec
pop
movsb
pop
lods
mov
and
enter
jecxz
je
xor
mov
sbb
pop
loop
sub
xchg
mov
pop
jnp
fcoms
cmp
add
cmpsb
cmp
stos
stc
movsl
xor
sub
and
adc
jmp
into
aam
jmp
aaa
in
addr16
aaa
nop
ret
jnp
stos
clc
movsl
xor
fstpl
sti
test
dec
mov
insb
push
rol
adcl
pushf
and
jbe
dec
and
mov
ljmp
adc
sti
cli
sub
mov
cmp
xor
push
sub
js
jae
bound
jp
repz
loope
aad
sbb
fdivrl
pushf
ds
and
orl
mov
popf
aaa
mov
push
lret
out
cwtl
cwtl
pop
movsb
push
jb
adc
out
shll
xchg
add
sub
imul
xor
dec
int
pop
jb
cmpsb
inc
aad
sbb
pop
gs
xchg
fwait
ljmp
jmp
xchg
ret
sbb
jnp
outsl
stos
test
xchg
jmp
movsb
clc
loop
or
ret
push
ja
mov
dec
repz
das
adc
cmpsb
out
add
in
aas
movsb
adc
sub
xor
int
push
inc
sbb
shlb
sub
mov
sbb
fstps
lcall
pop
std
adc
or
mov
imul
pushf
aad
leave
scas
push
or
jno
call
xchg
in
push
jge
push
sbb
outsb
sbb
push
cmp
xchg
or
out
movsl
out
xchg
xlat
mov
ds
mov
pop
mov
daa
das
mov
mov
loop
sub
push
roll
xor
cs
orb
mov
mov
pop
dec
or
aad
cld
subl
dec
mov
sbb
repz
imul
jg
inc
orl
jb
das
frstor
mov
inc
mov
je
sub
inc
gs
sub
std
cmp
mov
jmp
add
mov
rcll
sbb
xor
das
andl
mov
mov
iret
pop
inc
add
pushf
fstpl
cmpsl
mov
dec
out
out
cmp
xchg
call
cltd
shr
aad
fsubp
roll
inc
mov
mov
jne
inc
shll
jae
sub
adc
sub
jo
stos
inc
jle
popf
sbb
dec
jp
loope
lods
lret
out
lcall
pop
or
and
in
jecxz
or
sbb
adc
add
cmp
int3
js
into
movsl
xchg
hlt
push
push
or
je
popa
je
int
jnp
pop
test
pop
jae
sub
push
mov
in
add
imul
insb
and
and
xor
add
push
movsl
sbb
xchg
out
jg
ljmp
fwait
daa
inc
fstl
mov
pop
cmp
dec
jno
clc
test
enter
xor
js
xor
mov
sbb
pop
add
and
adc
sbb
push
int
sbb
adc
fwait
mov
xchg
and
aaa
shlb
mov
mov
test
and
dec
clc
mov
jge
fcomip
sub
shl
arpl
popa
mov
jmp
mov
xor
cmp
xchg
pop
mov
loope
aaa
xchg
jecxz
cmpsl
sub
and
sbb
cmp
outsl
fistl
pop
mov
les
mov
jns
sub
inc
orb
xor
push
in
mov
inc
shrb
ss
sbb
push
push
lds
pop
pop
ljmp
pop
outsl
mov
jbe
sti
sbb
cltd
mov
data16
pop
cld
lock
sub
dec
xchg
cli
lcall
pop
jae
inc
xchg
addr16
mov
ds
cmpsl
jmp
xor
xchg
add
dec
mov
fcomps
xchg
cwtl
xor
sbb
sbb
adc
mov
lea
mov
stc
dec
out
call
std
in
dec
push
push
mov
mov
repz
adc
jno
cli
mov
mov
sbb
jne
push
daa
dec
push
xchg
jmp
mov
stos
stos
sbb
negl
pop
sbb
jns
cs
pop
or
sbb
cmp
pushf
inc
jns
aam
loope
adc
sahf
cmp
aad
adcb
dec
adc
adc
int3
ds
in
pop
mov
sbb
lds
sub
add
adc
ss
adc
lock
xchg
dec
subb
std
pusha
imul
xchg
in
jnp
jge
mov
xchg
cvtpi2ps
jb
lods
dec
and
mov
fwait
xchg
cmp
or
adc
imul
cmp
das
xchg
sbbb
test
mov
or
push
popf
xchg
dec
mov
dec
xor
sbb
hlt
popa
sub
sbb
pop
jmp
cmc
rorl
push
xchg
jns
mov
outsb
lods
or
inc
and
in
cs
out
das
je
sarb
mov
lcall
fidivs
dec
adc
and
push
movl
jg
inc
jle
aaa
cmp
pop
hlt
cmp
cmp
cli
divb
into
gs
xchg
mov
cmp
enter
or
push
fs
sbb
mov
mov
shrb
mov
inc
movsl
and
sbb
mov
shrb
inc
lods
dec
shl
jmp
mov
roll
jne
push
insl
stc
mov
mov
xor
push
test
add
dec
popa
mov
xchg
out
je
mov
icebp
inc
adc
daa
lahf
cmp
popa
es
xchg
dec
out
jmp
xor
xlat
fsub
or
ret
jnp
lahf
daa
adc
adc
add
pop
test
mov
mov
push
movsl
sbb
ret
cmpsb
push
push
fstpt
mov
stos
sbb
lock
sub
mov
cs
movsl
std
daa
pop
scas
push
lret
cmp
or
dec
sbb
adc
add
inc
enter
sbb
or
xchg
pop
mov
sub
daa
dec
and
push
pop
aaa
js
repnz
icebp
insb
pusha
jle
dec
pop
lret
dec
mov
xchg
mov
or
in
cmp
jl
and
add
adc
adc
rolb
iret
jae
cwtl
rcr
bound
mov
fs
jns
add
mov
lods
pop
jl
outsb
mov
sbb
push
dec
dec
xor
mov
mov
sbb
xchg
out
jl
sub
sub
arpl
add
out
jl
pop
fisttpl
insl
push
decl
das
fldenv
aad
repz
mov
and
cld
lret
les
out
sbb
push
nop
sbb
mov
mov
fisubl
cmp
xchg
pop
mov
adcl
jns
jmp
stos
ret
movsb
rolb
add
cmp
test
pushf
sub
xorb
add
pop
or
sub
push
mov
mov
lods
arpl
jno
dec
in
arpl
pop
mov
scas
sbb
ret
sbb
ljmp
lcall
sbb
aaa
xchg
loop
mov
popa
daa
int3
insl
divl
and
addb
pop
repz
cmp
fisubs
xor
enter
test
or
mov
std
mov
inc
enter
sbb
dec
cmp
mov
stos
xchg
je
adc
xor
mov
dec
pushf
nop
pop
or
push
cs
in
adc
les
inc
cwtl
jb
sub
inc
mov
mov
imul
adc
dec
pop
out
cmp
out
cmc
and
jno
push
cmpsl
ret
mov
xor
lods
sub
loopne
mov
loopne
hlt
stc
pop
rcrb
jno
mov
idivb
mov
mov
mov
push
pop
mov
sub
loopne
jnp
pop
mov
push
popa
xor
lea
ja
cmp
and
sub
adc
daa
out
cmp
cwtl
sarl
dec
std
pop
into
mov
in
in
loop
adc
jecxz
inc
pop
pop
in
addr16
je
push
jmp
mov
sub
into
je
fadd
mov
scas
jl
clc
mov
repz
rcrl
push
imul
mov
or
dec
sbb
pop
adc
cmp
push
sti
andb
pop
jb
sti
gs
enter
sub
or
cltd
lret
push
insb
lods
add
push
pop
idivb
pop
frstor
clc
adc
scas
jno
push
inc
push
cltd
mov
sub
out
out
jae
sub
cwtl
xchg
sub
mov
test
outsb
cld
cmpsb
add
idivl
divb
cmp
jo
jo
lds
pop
ss
jmp
shll
testb
jns
in
rorl
out
xchg
subl
dec
hlt
jns
sbb
xchg
adc
jnp
fcoml
dec
dec
sub
mov
jge
adc
or
and
sbb
ljmp
pop
incb
mov
push
cld
xor
stos
adc
xor
push
xchg
xor
dec
xor
pushl
xchg
das
and
cld
fidivl
mov
aaa
sti
push
mov
xlat
jbe
or
movsb
jge
insl
xchg
scas
push
repz
sub
aas
mov
cwtl
and
sbb
inc
div
mov
mov
loope
inc
les
das
cmpsl
movsb
adc
enter
sbb
add
popa
pop
add
test
fwait
mov
addr16
xlat
or
mov
popa
js
pop
loop
mov
imul
xchg
in
test
mov
loop
js
inc
xor
jne
testl
jb
popf
mov
and
cmc
iret
iret
inc
mov
pop
mov
xlat
loope
bound
mov
cmp
mov
xor
sbb
mov
jns
add
js
and
mov
cmpsb
je
sarl
cmpb
mov
stos
pop
jns
and
call
xor
repnz
xchg
sub
sti
cs
ljmp
ror
xor
dec
popf
in
into
addr16
push
lea
sub
sbb
dec
xor
push
mov
adc
shlb
push
fadds
xor
aaa
xorb
lret
cmp
arpl
mov
je
punpckhbw
and
fisttps
clc
xor
jne
fdivl
lret
cltd
cmc
in
ds
inc
stc
pop
insb
sub
push
mov
pop
popa
stc
lods
mov
das
data16
jg
jle
jge
add
dec
adc
or
jae
lods
test
fsts
fdivr
dec
sbb
cmp
fwait
cwtl
push
pop
sub
mov
xchg
mov
pop
insb
sub
inc
call
xchg
ss
mov
lahf
sbb
sbbb
cld
add
scas
scas
in
nop
xchg
cmc
mov
mov
scas
sbb
test
or
and
jecxz
inc
jge
je
out
imul
lcall
push
les
add
pushf
mov
mov
loop
and
out
lss
mov
lret
mov
xchg
jp
shlb
xchg
cmpl
push
add
cmp
js
push
mov
shl
pop
stc
sbb
leave
ret
mov
cmc
outsl
das
fwait
mov
in
inc
mov
lea
mov
dec
aas
cmc
outsb
pop
int3
sub
cli
add
pop
cmp
leave
xchg
test
adc
mov
cmp
and
test
js
sub
sbb
xchg
lds
or
mov
push
pop
sub
jmp
jecxz
lret
ja
add
push
in
inc
testl
cmp
arpl
sub
xchg
and
sub
in
push
xchg
push
out
arpl
lock
cmpsb
shr
fidivl
ds
push
cmp
mov
mov
adc
jno
aas
cli
mov
add
jl
cmp
shrl
pushf
insl
test
mov
test
inc
xlat
arpl
xor
cli
stc
or
pop
and
inc
inc
mov
cs
pusha
sub
rcrb
cmp
aas
inc
cmc
std
leave
sub
out
lcall
movsb
ja
and
xorb
lcall
mov
lcall
addb
das
mov
adc
xchg
dec
sub
adc
out
icebp
mov
inc
je
cs
cmp
xor
mulb
mov
out
inc
ja
fmul
pop
fcomps
sahf
jno
cld
in
push
fs
mov
std
jecxz
es
pop
inc
add
jb
popa
adc
cmp
xchg
or
sbbb
dec
and
dec
arpl
jae
add
lret
popl
stos
mov
sub
in
or
sarl
js
fs
mov
mov
imul
cs
and
fsubr
lods
and
sbb
mov
repnz
fisubrl
dec
lods
pop
clc
pop
jg
inc
xor
pop
mov
and
add
imul
xchg
xor
dec
cmp
sbb
outsl
les
or
fstps
pop
mov
push
adc
ret
jne
mov
sub
xor
jo
das
adc
xchg
mov
adcw
mov
lods
out
jecxz
fisttps
cmp
outsb
shll
adcl
int3
scas
push
pop
sahf
pop
scas
ljmp
push
mov
loopne
cli
sbb
add
addb
call
sub
les
sub
xlat
imul
movsl
inc
pop
ror
add
loope
fst
xchg
repz
cli
sub
loope
enter
sbb
xchg
out
mov
mov
mov
jle
ret
sub
or
push
cmc
std
cmpsb
cwtl
imul
shl
ss
push
cld
mov
add
cli
adc
orl
xchg
sahf
std
daa
rolb
frstor
jmp
popf
out
shl
fisubrs
decb
mov
mov
cmp
stc
loope
aaa
pavgw
cmpsb
mov
test
jmp
in
jecxz
in
pop
mov
rorl
push
lods
pushf
mov
jae
inc
xor
pop
cltd
mov
pushf
xor
sbb
out
mov
fs
int
fwait
mov
jl
testl
jae
shll
pop
fnstcw
pop
xchg
dec
add
mov
jle
inc
fdivs
cmp
nop
jae
arpl
outsl
mov
mov
cmpsb
stos
mov
iret
test
cmpsl
pop
jge
push
xor
push
sub
repz
jns
jl
in
xor
imul
sbb
fs
out
sub
jp
xchg
lock
jns
ds
xchg
adc
fildll
and
shrl
fsts
dec
test
xchg
sub
movsb
mov
adc
xor
xor
inc
cmp
dec
mov
rcl
fs
lret
shlb
test
std
fcompl
test
xchg
lret
pushf
inc
xchg
add
shlb
lahf
and
pop
xor
adc
rcrl
fidivs
push
sbb
fsubs
push
outsb
lret
pop
push
push
jnp
push
inc
leave
add
xchg
cmp
mov
xchg
and
sbb
roll
cmp
int
stos
cltd
xchg
push
sub
aam
das
xchg
xchg
xchg
cmpsb
lea
fbld
loope
jo
xchg
lret
and
adc
mov
inc
jle
js
mov
pop
mov
dec
ds
rorl
rcrl
stos
adc
sub
xchg
loop
jb
mov
adc
cmp
mov
ja
jno
inc
fildll
or
in
gs
imulb
enter
daa
adc
push
shll
jmp
pop
sbb
adc
inc
or
cmp
jb
mov
addb
xchg
sub
lret
xchg
sub
mov
icebp
add
sub
fcmovnu
stos
fsubrl
fs
adc
xor
mov
mov
cmp
lcall
xlat
lods
fcomip
icebp
push
stos
jecxz
loope
sarl
sbb
arpl
push
stos
roll
mov
scas
sbb
loop
rorb
jnp
pop
cmp
fsubrs
rcl
shlb
pop
jecxz
sbb
mov
add
cmpsb
xchg
js
pop
cld
jp
ss
pop
stos
or
and
pop
and
scas
xor
mov
wrmsr
cmp
push
mov
out
call
or
arpl
jne
adc
fucomip
sahf
sar
or
inc
std
jo
ret
sub
insl
cs
ljmp
daa
inc
push
sub
lds
mov
jbe
or
leave
pushf
push
lret
in
or
xor
sub
mov
fsubrs
lock
inc
cmp
leave
aad
inc
aaa
mov
xor
ja
pop
adcb
xchg
or
jl
cmp
pop
hlt
ss
roll
add
ss
aas
clc
fisubrs
add
jo
jae
add
ret
inc
pop
xor
fstps
aaa
add
sahf
test
iret
adc
mov
xchg
jnp
std
add
lea
xor
ss
outsb
or
xchg
add
push
lea
mov
mov
mov
jle
leave
arpl
out
push
mov
xchg
js
fidivl
adc
or
fwait
subl
mov
jns
push
lahf
dec
ret
add
mov
xchg
stos
xchg
or
js
popa
lds
mov
mov
jecxz
mov
leave
out
inc
mov
push
sbb
mov
jnp
out
aad
jmp
into
dec
mul
pop
pusha
or
fistpll
mov
mov
sbb
ret
jno
vsubss
cli
xor
aaa
or
mov
popf
dec
add
xlat
fcomp
cmpl
mov
add
ret
fcomi
mov
addb
dec
in
push
fidivl
xchg
popf
sbb
push
or
sub
enter
push
pop
push
in
loopne
xchg
test
es
cmp
jle
jnp
outsl
adc
icebp
ds
or
dec
pop
repz
jmp
cmpsl
in
arpl
mov
push
sar
push
and
bound
xchg
sub
pop
popf
mov
fisubs
mov
xchg
fwait
inc
or
mov
jle
push
cmpsl
mov
pop
pop
cmp
rcl
fwait
stc
lret
push
cmp
adc
stc
popf
arpl
dec
inc
lcall
icebp
jecxz
test
mov
push
mov
mov
hlt
push
pop
ret
mov
std
filds
idiv
and
inc
mov
test
pop
jge
fisubs
mov
adc
dec
push
add
cmp
xchg
pusha
je
xor
mov
mov
fmuls
sub
push
jmp
ljmp
loop
add
add
fcoms
jo
dec
repnz
push
mov
dec
push
xor
or
xchg
fbstp
mov
ret
inc
dec
jl
dec
fucomp
cmpsl
pop
insl
scas
sbb
outsl
dec
mov
ficoms
in
in
mov
or
jle
push
insb
sbbb
and
mov
cmp
in
ja
gs
das
mov
or
fldl
xchg
ds
sbb
cmp
ja
adc
inc
xchg
or
sub
ss
aaa
outsb
push
jmp
sbb
sub
add
xor
mov
lods
dec
add
fwait
mov
repz
push
inc
adc
out
lods
notb
popf
addr16
popf
out
mov
dec
xchg
pop
pop
or
adc
adc
and
enter
fsubrp
mov
mov
jbe
in
mov
mov
fsubrs
jmp
mov
js
push
pop
fisubs
push
in
mov
pushf
sub
loopne
add
ret
negl
xchg
sbb
add
push
sub
xor
mov
lods
ljmp
dec
aad
dec
popa
ljmp
add
shrl
push
add
test
cmp
xor
test
int3
push
xchg
pop
adc
js
adc
jp
mov
inc
push
insb
imul
inc
aad
push
addr16
jge
fcmove
sbb
movsb
in
cwtl
imul
lock
sbb
out
dec
in
mov
loop
add
cmpsl
mov
xchg
xor
mov
mov
into
mov
sub
dec
sbb
mov
test
shrl
jmp
pop
es
adc
dec
adc
dec
pop
or
and
pop
adcl
xchg
out
jne
or
jno
mov
adc
mov
add
push
mov
fcomps
outsl
idivl
lret
fists
pop
lds
out
adc
stc
stc
popf
punpcklbw
popa
dec
mov
cmpsb
pop
ds
aas
dec
xor
aaa
cmp
or
out
dec
mov
cmp
adc
dec
cmp
xchg
jns
imul
ja
out
cmpsb
mov
inc
lods
or
test
cmp
movsb
xchg
lret
lahf
sbb
fwait
rcr
stos
lea
adc
es
mov
in
lods
or
idivb
dec
and
into
cld
xor
repnz
mov
pop
mov
lds
xchg
jne
fisubrl
mov
dec
test
lret
add
fwait
icebp
adc
lea
addl
andl
xchg
pusha
leave
and
insb
out
in
subl
xchg
push
fildl
shlb
cli
sub
rcl
xchg
cli
push
cli
leave
ffreep
rcr
arpl
outsb
inc
jbe
xor
in
mov
ljmp
lret
iret
cmovbe
mov
cmp
lock
shrl
xorb
xor
push
cmpsl
pusha
hlt
iret
stos
pusha
lock
arpl
push
divl
in
dec
dec
js
movsl
int3
fs
mov
movsb
scas
out
cmp
mov
cmp
test
pop
xchg
and
adc
lods
in
mov
or
shrb
push
js
pop
dec
pop
in
gs
loop
hlt
and
repnz
adc
imul
call
xchg
jge
sub
cld
out
fisubrl
mov
mov
jbe
xchg
adc
mov
flds
push
imul
pop
pop
popa
leave
je
loop
jae
filds
and
daa
ljmp
cli
aam
jg
push
mov
mov
push
push
daa
xchg
mov
inc
dec
mov
in
dec
fisttps
fadd
jnp
mov
inc
stos
enter
sub
sub
movsl
cwtl
aaa
jnp
cmp
in
lahf
shlb
imul
lea
fmuls
add
push
and
sub
inc
push
arpl
adc
sub
mov
sahf
mov
sahf
xchg
mov
iret
js
jae
gs
pop
xor
cmpsb
sqrtps
enter
in
mov
jne
pop
cmp
ljmp
stos
xchg
daa
push
js
mov
sbb
xchg
push
add
or
xchg
cld
cmp
cmp
popf
ljmp
xor
outsl
repz
cmp
lock
jecxz
mov
fs
cmpsb
dec
shrb
ds
push
sub
je
std
stos
jmp
daa
aaa
bswap
xchg
xchg
ror
insl
js
outsb
xor
ffree
loope
ss
sub
inc
jae
rolb
and
gs
pushl
xchg
mov
shl
mov
fsubr
pop
jb
and
push
mov
shlb
ss
sub
in
xchg
mov
jbe
mov
lret
arpl
mov
cwtl
cmp
mov
dec
stc
sub
lock
hlt
outsl
cs
push
js
cmp
lods
js
xor
jl
mov
mov
dec
mov
insl
into
pop
pop
inc
push
cmp
mov
jmp
fisubrl
test
into
cmp
jge
cmpsb
fisubrl
movsl
sub
jmp
iret
lahf
mov
into
and
stos
int3
inc
bound
inc
aam
enter
mov
adc
xlat
ljmp
fwait
pop
add
lods
mov
pop
push
cmpsb
les
xchg
cmp
leave
dec
xor
jp
cmp
add
add
mov
pop
icebp
xchg
js
pop
and
nop
sbb
pop
inc
mov
repnz
out
or
aad
inc
je
dec
addr16
xor
inc
mov
daa
mov
mov
scas
sbb
or
jbe
sahf
int3
and
dec
sbb
das
mov
fs
fidivrl
loop
dec
xor
sub
mov
adc
and
jne
jb
scas
and
mov
insl
or
mov
stos
repnz
lds
sub
sbb
pop
dec
fistpl
mov
sub
popf
scas
test
cmpsb
mov
xchg
sub
pop
pop
add
cmpsl
js
or
test
jne
ja
sbb
mov
lock
scas
cmp
loopne
mov
sbb
popa
aad
pop
push
sbb
insb
leave
xchg
jnp
enter
cmp
cmpsl
lock
sub
cmp
scas
fistl
outsl
jae
jge
inc
sarb
out
nop
push
frstor
xor
fdivrs
dec
dec
sub
sbb
rcr
jns,pn
sbb
add
stc
xchg
test
outsb
in
and
add
cmp
fldcw
popa
pop
sbb
mov
out
push
pop
fmul
cld
dec
adc
movsl
sbb
fists
les
push
xchg
jmp
dec
xor
gs
xor
push
shlb
lret
adc
int3
fdiv
inc
pop
mov
test
int
mov
jp
ss
pop
stc
xor
mov
sti
test
into
cmp
fs
fidivl
stc
and
jge
ss
and
cs
mov
ret
mov
shlb
rcrb
xor
or
stos
stos
xchg
fildl
iret
push
mov
cmp
dec
bound
mov
mov
movsb
movsb
or
pop
into
xchg
cli
popl
sbb
jb
or
lock
fwait
aam
and
pop
pop
roll
mov
addr16
fists
loope
dec
mov
and
les
mov
adc
and
mov
orl
loop
mov
adc
xor
push
adc
lods
movsb
add
ret
add
cmp
inc
sti
add
ss
pusha
or
outsb
enter
or
xor
add
mov
daa
inc
xor
outsb
jno
das
mov
and
pushf
jno
into
inc
adc
mov
imul
or
aam
mov
pop
pop
pop
sahf
and
pushf
xor
mov
adc
xlat
dec
dec
pop
and
testl
out
fs
add
pop
loope
pop
in
movq
xor
pusha
mov
sbb
in
push
mov
js
out
pop
cmp
pop
and
fadds
xchg
dec
inc
pop
sarl
jo
xchg
push
popf
int
ja
mov
adc
push
add
cld
xchg
sbb
and
ds
push
sahf
hlt
clc
lret
pop
sbb
xchg
sub
scas
pop
popa
gs
adc
sahf
push
jne
xor
out
dec
mov
aas
and
mov
data16
sti
pop
add
das
or
sahf
sbb
mov
inc
add
or
jmp
or
sbb
add
das
pop
std
adc
shl
imul
popa
lods
push
gs
push
push
sahf
inc
jo
and
and
pushf
ljmp
stos
cwtl
cli
movsw
add
les
mov
loop
into
push
movsb
mov
mov
divl
lcall
sub
sahf
shlb
xchg
js
adc
xor
inc
jbe
lcall
push
aad
test
call
push
or
mov
dec
dec
rcrl
mov
faddl
sarb
scas
stos
aad
and
cmp
es
cmp
repz
les
cmpsl
int3
rcrb
xchg
pop
adc
insl
add
xor
bound
adc
sbb
sahf
xor
stos
cmp
jmp
xor
inc
xchg
dec
dec
lret
jo
jmp
lea
cmc
xchg
mov
xchg
mov
pop
cmp
lds
fsubl
loope
aad
dec
adc
bound
push
hlt
push
aaa
out
xchg
push
cs
inc
jb
and
or
test
or
inc
test
sbb
sbb
in
mov
insl
imul
in
inc
test
out
or
xchg
fnsave
ffreep
inc
imul
mov
mov
movsl
xor
enter
jp
push
add
stos
add
pop
jge
call
aaa
outsb
imul
jnp
xchg
dec
jl
bound
sti
dec
ss
pop
imul
xlat
adc
jbe
push
or
div
adc
mov
lods
aam
lret
inc
outsb
ret
mov
call
mov
sbb
jecxz
push
scas
or
lock
and
rcll
icebp
xor
mov
sub
adc
cmp
outsb
cmc
sub
int3
popf
jecxz
xor
xchg
pop
push
push
dec
inc
and
std
outsl
fwait
xchg
add
nop
push
lret
sbb
pusha
enter
pop
inc
add
xor
popf
push
hlt
addr16
bound
js
jb
mov
xor
xchg
xor
xor
loope
and
and
adc
mov
fnsave
adc
into
ljmp
or
cs
pop
sub
adc
adc
lds
inc
outsb
enter
pmaddwd
sahf
add
adc
call
jbe
pop
mov
addr16
and
cmp
sbb
push
rcl
pusha
cltd
adc
push
rol
rcrl
inc
adc
mov
add
cmp
or
add
xchg
cs
imul
sbb
xchg
aam
mov
mov
in
inc
mov
shlb
push
rcrl
sbb
stos
int3
mov
inc
stc
fwait
into
or
mov
int
fidivs
in
sbb
push
pop
dec
int3
add
aaa
mov
fdivrs
dec
sti
movsb
jno
dec
cmp
push
mov
jmp
cmp
repnz
push
pop
jl
mov
push
leave
or
adc
sbb
fcoms
jl
sahf
ret
jecxz
inc
add
dec
xor
jno
cltd
bound
into
pop
jge
and
add
and
xor
insl
and
jecxz
push
repz
jmp
mov
sbb
cli
sbb
out
xor
xorb
xchg
sbb
js
leave
xor
xlat
cmp
lcall
or
push
iret
cmp
pop
nop
xor
xchg
fisubl
mov
adc
sbb
scas
pop
repnz
daa
mov
clc
js
and
push
sbb
cmpsb
pop
std
pop
cmp
lods
push
xchg
js
add
std
fwait
jl
push
push
hlt
pop
arpl
iret
xor
jae
clc
mov
or
cmp
push
lods
jmp
out
lods
pushf
aad
scas
adc
call
addr16
inc
fistps
div
ret
pop
jae
aad
jne
les
and
mov
mov
and
sbb
xor
aas
mov
inc
imul
pop
push
xchg
lods
mov
push
pop
lea
in
pop
push
fimuls
dec
mov
lahf
inc
mov
xor
rolb
mov
mov
je
inc
mov
mov
loopne
fxam
sub
lret
or
addb
lods
pusha
xor
pop
sti
loope
jo
inc
dec
das
cmpsl
lods
jge
jae
push
pop
scas
scas
outsl
leave
pop
jg
sub
pusha
nop
enter
pop
or
cld
lods
mov
cwtl
pop
pop
mov
xchg
mov
pop
js
and
in
clc
call
pop
into
fisttps
jnp
sbb
jp
dec
mov
inc
add
adc
lods
mov
pushf
cmp
enter
push
lock
movsl
cmc
sti
leave
xchg
pusha
repz
es
push
and
pop
push
mov
jno
jnp
jno
inc
iret
jno
in
adc
jmp
sub
mov
push
mov
mov
je
and
pop
adc
es
arpl
dec
scas
insb
call
mov
and
ja
mov
mov
dec
xorl
pop
xor
adc
jnp
stos
movsb
enter
daa
or
push
decl
cmp
es
es
stc
sti
pop
and
push
test
fistps
xchg
mov
xchg
xor
lods
cltd
mov
or
xor
sbb
pop
rolb
stos
dec
sub
xor
jg
push
mov
mov
fcmovnbe
fmul
add
and
cmp
ds
cmpsl
sahf
loop
sbb
push
mov
outsb
xor
cmpsl
xchg
sub
push
inc
addr16
mov
jmp
les
push
sbb
push
or
lret
mov
xchg
push
ss
imul
add
mov
pop
mov
cmp
cmp
mov
test
sub
pop
inc
nopl
ja
dec
mov
adc
pop
fcmovnbe
xchg
lea
mov
out
xchg
mov
clc
and
sub
mov
stos
aas
mov
ret
jecxz
stos
pop
cmp
and
jo
fwait
in
mov
sub
sbbb
jg
cmp
sbb
dec
inc
mov
sti
inc
loopne
leave
nop
cmp
mov
repz
sub
adc
pop
mov
popf
pop
insb
jae
mov
push
lods
pop
bound
mov
repz
push
mov
dec
mov
push
mov
sbb
xchg
push
mov
pushf
cmp
adc
dec
or
xchg
add
es
adc
sbb
aad
push
jg
jecxz
data16
scas
inc
pop
jp
inc
dec
dec
fiaddl
xchg
and
adc
xor
xchg
test
out
pop
xor
and
out
je
test
test
mov
add
iret
cwtl
fs
iret
cltd
stc
sbb
mov
xchg
sub
add
fcomps
lods
dec
and
xor
sbb
das
or
pop
mov
cmp
pushl
add
pop
push
insl
popf
xchg
pop
or
push
pop
cmp
cli
jp
add
dec
imul
push
xor
pushf
lods
or
push
sbb
mov
pop
imul
test
movsl
pop
icebp
fwait
adc
leave
ret
mov
sub
mov
and
sbb
jo
mov
and
mov
inc
or
mov
jae
jecxz
add
int3
dec
inc
add
mov
scas
sbb
rorl
cmp
fcomp
pop
and
outsl
imul
jb
sub
xchg
jl
out
mov
pushw
out
shll
push
testb
or
shll
nop
pushl
mov
xor
push
outsb
add
push
icebp
jg
imul
test
insl
fcoms
and
adc
ja
cmp
xchg
cmpsl
pushf
mov
adc
cmpsl
insb
imul
inc
imul
or
mov
inc
fs
inc
xor
fcom
sbb
push
dec
cmpsl
je
outsl
jg
jmp
mov
movsb
arpl
filds
and
outsl
pop
scas
or
add
clc
fdivrs
pop
shrl
jnp
call
pop
into
filds
test
xchg
int
mov
dec
movsb
inc
push
popf
out
leave
fbld
cwtl
jecxz
add
pop
mov
ret
test
enter
jnp
sbb
ljmp
and
pop
ja
xchg
jmp
andl
cmp
out
mov
out
mov
pushf
dec
cld
call
mov
call
dec
into
les
stos
adc
add
loop
and
sahf
pop
jae
push
mov
out
jns
or
mov
leave
cwtl
ret
pop
jno
sti
test
pop
inc
pop
add
popf
xorl
mov
inc
jo
dec
xor
into
sub
jmp
clc
pop
mov
mov
stc
add
das
pop
pop
inc
in
pop
es
or
lods
idivl
cmp
xchg
jmp
out
js
outsb
mov
hlt
cmp
xlat
test
popf
outsl
add
push
imul
fincstp
dec
inc
mov
mov
mov
sti
sub
ja
or
je
imul
andl
pop
and
mov
or
xorb
hlt
mov
test
cmp
ret
fwait
adcb
test
or
push
xlat
out
cmp
xchg
bound
xlat
mov
push
int3
cli
bound
test
mov
aam
inc
insl
daa
xor
dec
les
divl
mov
pop
adc
xor
ljmp
enter
inc
add
loop
ds
dec
lcall
cmp
pop
arpl
decl
loope
add
mov
popa
sbb
in
cmc
xor
jl
outsl
std
adc
push
fwait
aam
jmp
ja
test
jne
mov
lods
jmp
and
cmp
pusha
mov
jecxz
mov
hlt
scas
dec
das
sub
mov
outsl
int
mov
and
insb
xor
lods
mov
rcrb
jb
jp
cmp
ss
mov
int3
ljmp
mov
sbb
std
add
xchg
xchg
dec
outsl
sub
dec
mov
adc
jmp
scas
rorb
lds
loop
lods
test
or
and
lods
icebp
cmp
mov
test
arpl
jle
enter
adc
pop
orl
mov
dec
lcall
cmpsl
mov
push
icebp
lret
not
fnstcw
add
pop
cwtl
pop
xorl
cmc
lods
xor
pop
pop
out
out
or
lods
xchg
insl
outsb
aam
mov
aam
fildll
or
xchg
loop
cmp
inc
adc
dec
and
xor
sbb
push
push
add
adc
push
data16
filds
xchg
and
lea
xor
inc
sti
jb
sbb
add
sub
sbb
mov
cmpsb
and
scas
sub
jecxz
inc
sarl
insl
mov
repz
and
jb
xlat
rcll
mov
outsb
add
fwait
inc
jp
incl
xchg
add
pop
sbb
sub
lret
pop
insb
arpl
adc
nop
lea
and
and
sbb
int3
xchg
jg
and
mov
pop
cld
pop
lea
fidivrl
xor
scas
in
push
insb
mov
out
xorb
lret
gs
rcrb
sbb
dec
jmp
mov
or
subl
xchg
dec
call
add
dec
mov
sbb
inc
inc
lock
xchg
mov
pop
pop
cltd
imull
jmp
and
xor
pop
cmp
mov
xchg
scas
inc
mov
sti
stos
mov
mov
cwtl
movsl
arpl
inc
dec
imul
mov
outsb
pop
xchg
dec
iret
adc
test
sub
xchg
xlat
rol
cmove
mov
sbb
lret
adc
pushf
loop
lahf
test
test
cld
pop
push
mov
test
aas
out
les
xchg
sbb
cltd
iret
push
sbb
lahf
rorb
push
inc
jle
decb
movsl
cmp
add
or
test
mov
test
xchg
icebp
rol
lcall
test
inc
lea
sub
insb
mov
lahf
fbld
pop
into
bound
subb
mov
jbe
popf
fimuls
ss
stos
nop
push
jecxz
xor
ss
lods
repnz
stos
xor
repz
push
lea
cmp
add
mov
inc
mov
call
pop
adc
or
arpl
and
mov
and
mov
add
or
xchg
push
cmpsb
inc
sbb
inc
bound
dec
add
or
out
mov
lds
jns
jns
lock
mov
sbb
orb
and
std
cmp
loopne
xor
add
fstl
data16
arpl
icebp
or
sub
dec
mov
sbb
xor
xor
pop
repnz
and
pop
cmpsb
pop
pop
pop
pop
push
scas
pop
imul
dec
repz
lret
mov
test
sti
fcoml
dec
icebp
adc
ret
mov
sahf
in
adcl
cmp
or
dec
inc
mov
push
je
or
popf
push
testb
pop
pushf
ficompl
lcall
inc
adc
or
movsw
sti
ficomps
sbb
ss
mov
cmp
push
mov
mov
data16
adc
cltd
add
imul
jo
sti
arpl
ret
xchg
movsb
sub
jnp
add
mov
or
stos
adc
ljmp
stc
cmp
cs
cmpsl
push
shll
sbb
xchg
out
sahf
xchg
ret
adc
or
fnstsw
fistpl
mov
call
jl
pop
out
int
dec
mov
push
inc
data16
lret
mov
aas
jecxz
mov
cmp
push
pusha
fs
in
enter
sbb
pop
das
inc
jbe
and
sub
pop
mov
gs
insb
mov
jmp
push
out
pop
imul
sahf
scas
scas
sub
enter
xor
xchg
push
sub
mov
mov
dec
repz
arpl
mov
mov
mov
mov
aam
mov
push
inc
add
lret
dec
add
cmp
arpl
mov
sbb
xlat
or
loop
sub
test
jge
push
fisubrs
cmp
test
or
xchg
jne
ljmp
in
cmp
inc
pop
adc
pop
lret
lret
std
cltd
mov
mov
es
dec
mov
popw
cmp
mov
negb
mov
fldenv
lds
pop
fiadds
jecxz
fstpt
addl
out
aas
vunpckhps
xor
jne
cli
das
xchg
stc
cld
jp
mov
data16
and
mov
cmp
inc
jnp
or
out
test
cld
or
xchg
insl
push
cmpsl
lods
inc
in
loopne
pop
stos
jl
inc
and
subb
adc
stc
and
out
test
insb
and
sbb
push
ficompl
jecxz
das
cmp
rep
cmc
pop
fiaddl
mov
int
fisttps
loopne
sub
dec
out
xchg
int3
jmp
pop
mov
xor
iret
mov
cmp
pop
lock
sub
ljmp
dec
pop
sbb
call
xor
insl
add
add
add
cmp
dec
jb
jl
add
sub
adc
out
jge
lea
movsl
xchg
mov
andb
out
ret
cli
pusha
xorb
imul
lock
cmp
mov
dec
add
mov
or
cld
cmpsl
mov
idivl
pop
jnp
sbb
and
scas
out
ljmp
mov
and
pmullw
adc
test
add
fldl
inc
aas
sub
imulb
sub
inc
push
sub
pushf
imul
data16
cmc
stos
sbb
jne
mov
out
cmp
decl
dec
data16
enter
aaa
fists
push
add
push
mov
or
rorb
int3
imul
and
int3
lock
cmc
movsb
lock
jne
arpl
mov
fbld
cmc
cmp
sub
sahf
xchg
daa
cmp
jg
sub
xchg
insl
or
in
add
and
pop
addr16
loop
hlt
cli
loope
xlat
push
cmp
pop
xchg
into
xor
inc
in
test
mov
outsl
lods
jbe
scas
movsl
add
cmp
jmp
pusha
iret
out
mov
and
out
inc
xor
cmp
sub
ret
das
es
cs
or
movsb
xor
xchg
ret
addb
ret
jnp
mov
outsb
inc
aaa
imul
xor
sarl
out
mov
adc
cld
into
add
cmc
sbb
in
out
push
insl
rcl
dec
xor
inc
sub
nopl
or
test
popf
mov
mov
inc
stos
mov
fs
lahf
out
mov
fninit
dec
or
xor
jl
jge
mov
cmpl
push
add
ja
aas
mov
mov
inc
gs
stos
ja
rorl
mov
push
cmp
out
xor
xchg
lahf
orl
inc
mov
adc
test
pop
push
ret
dec
out
cmp
rcll
imul
sub
adc
jns
filds
loop
push
jnp
mov
outsl
rcll
mov
xor
xchg
out
loopne
movsb
xor
addr16
pop
cmp
out
rep
cltd
out
jb
fs
ret
mov
ljmp
rorb
les
cmp
mov
std
sbb
test
cwtl
adc
icebp
data16
jmp
hlt
les
outsb
rclb
out
cmc
ret
loopne
jle
cmpsb
repz
shr
mov
push
repnz
je
int3
aam
loop
bound
sub
push
div
add
aaa
enter
or
inc
and
mov
jne
adc
push
mov
cmp
sub
cmp
mov
pop
or
std
out
in
adc
xor
popa
call
mov
jmp
mov
and
mov
jo
cmpsb
mov
pop
dec
shll
lret
sbb
loope
jp
cli
mov
insb
aas
cmp
sub
mov
push
filds
outsl
ljmp
pusha
dec
cmp
rcrb
test
inc
xchg
movsl
lret
mov
xchg
out
data16
fistps
mov
or
sti
sbb
test
push
mov
ds
in
mov
dec
cmp
dec
inc
rcl
sti
sub
mov
das
inc
test
cmp
fsub
in
jno
es
dec
mov
mov
js
jg
jge
dec
add
push
dec
xorl
xor
lea
xor
fs
lret
sarl
call
dec
neg
push
cmp
ja
xchg
mov
dec
mov
mov
enter
inc
or
jle
outsb
lds
adc
xor
mov
nop
mov
dec
dec
xlat
stos
shl
xchg
cmpsb
outsb
in
jmp
jno
aas
ret
jo
jb
mov
xchg
popa
lods
adc
or
negl
pushf
popa
icebp
in
imul
push
mov
push
pushf
cmp
add
adc
inc
dec
ja
jle
aam
jno
dec
fs
roll
sete
js
je
divb
and
mov
in
mov
inc
es
pop
or
xor
fistpll
pop
push
mov
test
xor
mov
popa
sub
xchg
pminub
pop
out
out
movsb
fisttps
mov
mulb
lock
dec
and
negb
sbb
dec
inc
add
xor
push
dec
xchg
jle
scas
nop
cli
dec
cmpsl
lret
cmpsl
inc
fsub
out
push
and
sti
mov
jno
push
mov
ja
loop
das
mov
out
loopne
cmpsl
sub
pop
cmp
cmp
cmpsl
sub
cmpsl
inc
pop
adc
sbb
lcall
je
in
mov
sub
in
in
sub
jge
movsb
inc
mov
sarl
mov
xchg
shll
lea
sbb
add
mov
mov
testb
mov
cli
jbe
aas
push
sub
inc
push
mov
inc
jg
pop
xor
out
shrl
push
shll
pop
loop
or
inc
xchg
movsl
xchg
xor
out
fldt
and
call
movl
xchg
push
sbb
jmp
cmc
push
push
add
sbb
sub
jno
xor
xor
xor
icebp
rcrb
in
xchg
and
stc
and
adc
xor
hlt
lcall
jmp
or
and
inc
push
and
repnz
jmp
daa
das
cmp
xlat
sub
inc
cmp
insl
stc
in
add
sbb
scas
dec
insl
adc
xchg
inc
push
sub
dec
lods
adc
pop
cmp
xor
imul
pusha
mov
cmp
jb
flds
mov
add
sahf
jb
inc
fidivrl
push
pop
lea
cli
js
jl
jmp
cld
adc
cmp
xchg
imul
mov
hlt
roll
sub
push
repz
jle
lret
hlt
adc
fisttps
mov
mov
outsl
inc
xorb
negb
js
mov
mov
cmpsl
xorps
jns
push
sahf
push
mov
jmp
insl
mov
movsl
lea
adc
cld
xor
xor
adc
scas
push
inc
xchg
push
aad
push
shll
mov
push
lods
loope
loop
and
clc
sub
xor
jo
cwtl
aas
pop
lret
dec
daa
jp
add
pcmpeqd
or
fldcw
and
sub
iret
xchg
dec
into
in
out
xor
or
outsb
push
daa
lds
js
add
xchg
push
mov
xor
inc
loope
cmpsl
fbld
mov
adc
add
inc
pop
mov
push
dec
mov
xor
cltd
aas
pop
push
es
xlat
imul
pop
jecxz
mov
and
sti
test
jbe
sbb
fcompl
sub
out
mov
ss
push
push
cmp
sub
bound
pop
out
in
test
dec
in
sub
fdivs
inc
jl,pt
or
ds
xor
pop
sub
mov
pop
js
cmp
das
cmp
lretw
push
push
and
in
in
push
sbb
xchg
adc
outsl
icebp
push
scas
aaa
pusha
divl
mov
ja
testl
mov
or
push
xor
ss
adcb
movsl
and
insl
mov
jo
sub
sbb
cmovg
aaa
hlt
out
jns
cli
ret
lret
cli
in
and
xor
sarb
xchg
xchg
sbb
popf
xchg
rcl
and
mov
ret
testb
enter
scas
pop
dec
xchg
stos
dec
push
jle
mov
loope
mov
cmp
cs
sub
xor
les
xor
idivl
xchg
js
js
add
push
mov
pop
sbb
cmc
and
repz
jo
sub
xchg
rcrl
insl
mov
mov
insb
mov
fs
test
aad
xorl
pop
ljmp
xchg
addr16
pop
mov
adc
or
xchg
dec
fstpl
mov
mov
sahf
mov
pushf
cmpsb
jg
pop
arpl
or
xchg
into
mov
mov
mov
fcomip
fnsave
push
into
cmpsl
sub
cmp
sbb
jbe
and
pop
mov
lods
stos
push
out
add
xchg
dec
jbe
push
out
ja
and
xchg
fdivl
sub
fmuls
fisttpl
jmp
icebp
int
imul
push
mov
ja
fs
movsb
xchg
xchg
dec
add
dec
aad
and
sub
mov
xchg
mov
cld
xchg
inc
push
les
dec
inc
sbb
and
push
imul
sbb
mov
stos
mov
leave
mov
adc
int
sbb
ret
in
inc
daa
cmp
push
cmpb
xor
shrl
insb
lods
test
xchg
xchg
andl
push
push
jbe
pushf
iret
pop
sub
les
mov
inc
hlt
mov
inc
mov
leave
jle
imul
mov
cmpsb
inc
add
xchg
pop
xchg
mov
gs
jl
fadds
xchg
popf
sub
mov
jae
test
stos
mov
aaa
add
dec
jmp
dec
je
int
mov
pop
lock
aaa
adc
shrb
cwtl
xchg
insb
push
jae
fld
sub
pop
sub
stos
mov
push
nop
xor
inc
pop
push
mov
scas
dec
push
bound
dec
ret
push
mov
je
fistpl
pusha
mov
mov
inc
xchg
call
pop
inc
xchg
pop
sub
adc
push
bound
pop
or
sbb
mov
push
imul
out
imul
cmp
loopne
mov
add
jl
sub
cld
icebp
sbb
add
add
xchg
lods
mov
dec
jnp
mov
test
fstpt
loope
fcoms
mov
and
fsubrl
scas
mov
sbb
fsubs
xor
mov
popa
incl
mov
xchg
scas
in
xor
cli
stos
adc
rcll
into
pop
xlat
or
outsl
pop
div
stc
add
imul
xchg
jp
xor
rorb
xchg
xchg
pop
xchg
andl
ret
daa
or
es
jne
cmc
sbb
mov
adc
push
jb
out
push
lock
hlt
jge
jle
cmp
iret
bound
daa
fldt
or
rep
xor
push
jmp
dec
adc
or
jg
mov
xchg
movsl
test
mov
lds
loope
insl
mov
pushf
lret
inc
pop
mov
jb
fistpl
sub
sub
sub
lcall
xlat
add
pushf
int3
pop
mov
sub
pop
jl
xchg
pop
jp
cmp
enter
je
negl
scas
cmp
dec
ret
cmp
adc
pop
rcrb
lods
xchg
adc
rcrb
arpl
shr
pop
std
mov
popa
xchg
xchg
dec
xchg
push
clc
dec
adc
addl
fucom
adc
shll
aaa
fs
adc
adc
dec
inc
daa
push
ljmp
in
dec
insb
popf
lcall
dec
or
dec
cltd
andl
sbb
inc
mov
inc
lds
mulb
lock
jns
sbb
xor
pop
daa
xorb
fdivl
stos
mov
ds
int3
xor
jmp
push
or
fidivrs
stos
inc
mov
bound
mov
or
int3
push
fnop
mov
data16
pop
push
aad
push
push
pushl
and
ret
sti
mov
inc
or
enter
cmpsl
adc
xchg
aaa
dec
sbb
xchg
daa
sbb
aas
shl
adc
int
in
push
and
mov
adc
push
test
push
test
and
ss
mov
mov
lret
int
insl
pop
insl
push
sarl
shl
loop
cmc
dec
pop
cmpsl
mov
orl
int3
xchg
pushf
sbb
cmp
in
or
mov
insl
add
pop
aas
push
push
and
or
jb
jge
pop
cmp
sti
sbb
js
inc
sub
pusha
sub
add
add
gs
adc
push
pop
hlt
loop
lret
fdivs
lods
repz
jno
ja
cld
iret
mov
out
xchg
ljmp
outsb
add
je
add
lcall
insl
mov
ja
jae
hlt
mov
pop
fisubrs
or
sti
icebp
jbe
mov
pop
lods
in
xor
add
sbb
aaa
outsb
pusha
je
sbb
mov
xor
mov
push
hlt
sbb
jns
cmp
dec
mov
jg
xchg
fiadds
out
xchg
dec
ljmp
out
xor
popa
into
pop
lahf
ret
sbb
sub
sub
das
and
outsb
sub
in
div
arpl
pop
xor
adc
in
dec
xchg
sub
mov
int3
lahf
shrb
stos
mov
push
mov
and
mov
loop
dec
jne
and
inc
out
imul
add
bound
mov
push
jns
add
icebp
mov
pop
or
jae
and
xorb
aam
inc
les
inc
and
mov
ljmp
arpl
jecxz
add
outsb
xchg
cltd
inc
mov
icebp
sub
cmp
dec
jp
negb
movsl
xor
clc
mov
test
and
clc
fisttpll
mov
fistl
push
inc
mov
and
das
mov
in
shl
cmpsb
or
cmp
and
rorb
jecxz
sub
or
adc
pop
insl
das
sub
xor
movb
jmp
and
lods
idivb
sub
mov
fbld
std
lea
add
xchg
cltd
push
mov
dec
add
incl
sub
cli
sti
push
insl
adc
or
pop
dec
pop
out
dec
push
jg
outsl
sub
dec
pop
sub
mov
cmp
hlt
jbe
inc
imul
jnp
xchg
rcrl
pop
movsl
cmp
and
dec
inc
aad
or
repz
jnp
call
lcall
jae
sub
arpl
xor
inc
ss
insl
jbe
outsl
adc
xchg
rcr
sbb
jns
xchg
idiv
jmp
push
ficomps
insb
out
mov
mov
ja
add
sbb
fistl
cmp
in
ljmp
mov
pop
inc
mov
pop
in
jnp
sti
call
ret
dec
xor
rorb
dec
sbb
popl
mov
iret
pop
pop
bound
inc
test
push
imull
ds
xchg
or
adc
imul
inc
and
mov
or
stc
out
pop
scas
or
das
pop
hlt
into
adc
cmc
movsb
cmp
mov
adc
add
popf
loope
bound
push
inc
cmpsl
addr16
pop
fcmovbe
adc
sub
and
es
test
sub
xchg
mov
jne,pt
fistl
lds
shll
add
lret
lock
incl
fwait
pop
xchg
pop
mov
test
imul
bound
sub
fbstp
call
sub
push
fnstsw
push
adc
jle
sub
jno
jne
mul
mov
jno
adc
js
std
mov
mov
in
cli
insl
nop
jae
sub
iret
lods
mov
mov
and
sbb
outsl
data16
xchg
test
int3
mov
jl
lahf
aaa
cs
orb
add
cld
xor
je
dec
ficomps
inc
ret
pusha
xor
fstps
cmc
cs
outsb
mov
sbb
fsub
pop
adc
cwtl
inc
insl
bound
push
mov
push
xor
shlb
cmp
fistps
adc
cmp
testb
inc
sahf
or
xchg
lret
test
ljmp
shll
push
mov
xchg
fidivl
sbb
adc
xchg
loopne
leave
sub
js
cltd
pop
push
stos
es
cld
pusha
setg
popa
or
dec
int3
aas
leave
int
loope
out
add
pop
fadds
lcall
xor
ret
or
test
cmpsb
fwait
repz
ljmp
nop
xor
add
mov
push
dec
fisttpl
insb
icebp
cwtl
push
mov
in
mov
sar
add
jae
jae
mov
ds
pop
out
mov
jo
push
xor
aas
xchg
clc
cmp
stos
xchg
or
xchg
pop
lidtl
flds
jp
inc
les
testb
insl
decb
mov
pop
aaa
xchg
or
add
fdivl
imul
push
js
mov
xorb
jmp
mov
and
xor
xchg
mov
push
jp
dec
mov
lcall
mov
mov
mov
sarl
jno
xchg
or
fistpl
addr16
push
test
ret
shll
notl
inc
inc
enter
pop
add
xchg
popf
sbb
out
push
inc
popf
aad
mov
mov
aas
jg
iret
imull
fs
stos
cmp
mov
cmp
cmpb
jbe
repz
jns
leave
jns
jno
add
outsb
mov
insb
out
icebp
out
fsubs
jmp
outsb
cwtl
fisubl
push
sbb
push
lds
sbb
out
cmp
mov
sbb
shl
or
mov
ja
pop
dec
pop
imul
inc
push
outsb
scas
pop
or
and
int3
xchg
jno
nop
loop
mov
xchg
lret
dec
mov
adc
out
xor
in
ljmp
scas
adc
rcll
jae
xchg
sbb
sti
mov
ss
stos
lcall
aam
xlat
imul
mov
ljmp
ret
pop
pop
xchg
rcrl
sbb
add
sbb
mov
xchg
lahf
cmp
je
jbe
imul
mov
les
pop
jmp
adc
mov
add
aaa
cmp
dec
dec
add
in
out
outsb
cmp
xchg
cmp
or
jge
sti
cld
out
dec
adc
sti
pop
cmp
sub
and
cmpsl
icebp
lea
push
jp
adc
fadds
pop
add
cmp
xor
mov
pop
inc
insb
ficomps
pop
mov
arpl
jne
lds
cmp
ja
sbb
sbb
sub
iret
or
pop
sub
popa
stos
sbb
addr16
inc
movsb
sahf
sahf
jl
sbb
push
out
cmp
mov
fcompl
jo
mov
cmpsl
cmpsl
or
mov
mov
sbb
or
adc
sarb
rorb
nop
mov
outsl
sub
dec
pop
and
pop
jmp
sbb
negb
adc
cmp
and
ds
lahf
pop
xor
pop
ror
in
jp
xorl
sub
hlt
and
loopne
and
dec
out
adc
or
pop
mov
pop
ret
mov
dec
xchg
cmc
jmp
lods
dec
cmpsb
xchg
lcall
adc
push
mov
mov
cmc
nop
loopne
into
adc
pop
repz
jb
xlat
sbb
mov
out
out
cmp
cli
in
sub
push
mov
lcall
and
xchg
cmp
add
jl
mov
daa
push
push
lods
sub
mov
cmp
mov
and
out
xor
lret
pop
aaa
cs
loope
push
test
adc
aaa
sub
sbbl
push
cmp
adc
jne
xchg
pop
sahf
dec
hlt
cmp
or
push
imul
push
push
cmp
aaa
into
push
testb
xor
and
push
jns
xchg
js
cmp
leave
movsb
movsl
aaa
repz
sbb
adc
jecxz
inc
add
pop
jno
push
or
push
pushf
sbb
lret
insb
fisubl
in
in
mov
and
jns
xchg
or
xlat
pop
pushf
bnd
jle
push
fisttpl
adcb
cmpsb
daa
pushf
adc
xlat
and
loopne
lcall
push
ss
jo
cld
fstps
xor
rorb
loop
cmp
cmp
push
mov
sub
ret
xchg
dec
lcall
leave
aaa
sbb
jb
loopne
test
mov
test
std
cs
fsub
mov
push
jnp
or
push
lcall
push
mov
ret
lret
mov
js
xchg
dec
or
dec
cmp
lea
cmp
jae
aas
or
mov
xor
dec
push
cmp
jecxz
stc
push
jmp
pop
add
sti
pop
adc
push
cmc
pop
xor
mov
cmpsb
mov
sub
outsl
and
cmp
mov
pop
sbb
ja
ds
mov
popl
scas
inc
pop
push
ret
stc
push
gs
sbb
rolb
and
push
popa
outsb
xor
sbb
xchg
rolb
cmpsl
std
sti
sbb
ret
mov
loopne
loop
or
cwtl
imul
dec
in
xor
loope
push
outsl
sti
and
aaa
inc
iret
adc
aaa
js
fcoml
mov
ljmp
pop
sbb
cmp
fwait
int
jge
lret
and
or
mov
sub
xchg
repnz
in
sub
mov
inc
fmull
pop
mov
push
testb
adc
pop
or
shl
jbe
inc
or
jne
and
scas
rcrb
into
ret
add
nop
sbb
dec
lds
or
arpl
adc
aam
int3
pop
repz
aaa
mov
add
pop
cmc
out
int3
pusha
mov
dec
sbb
xchg
jge
jo
popa
xor
mov
in
test
xchg
fs
addr16
test
cmp
fwait
dec
add
add
sti
lods
mov
inc
adc
incb
mov
lock
fisttpll
and
rcl
jne
xor
mov
mov
fildl
out
mov
add
je
out
push
movsb
xchg
inc
ficoml
dec
adc
add
int3
push
cmp
and
ret
rcl
push
in
pop
cli
dec
aam
fs
add
sbb
fs
lds
cli
sub
dec
clc
cmp
ret
pop
and
call
movsb
pop
cmp
int3
xchg
neg
xchg
cmp
sub
mov
adc
jb
dec
int
enter
mov
lcall
pop
jae
js,pn
push
jle
jo
in
xlat
sub
aam
mov
sub
sbb
sbb
inc
mov
inc
push
fistl
xchg
xchg
pop
pusha
cmc
roll
std
push
sub
movsl
xor
mov
inc
das
and
and
fiadds
mov
addr16
lods
imul
jl
and
add
arpl
pop
xor
adc
dec
paddb
jb
cmpsb
dec
fld
rcrb
loopne
jecxz
push
add
dec
je
jne
loope
add
insb
dec
mov
pop
aam
sub
xchg
xor
setle
mov
jbe
mov
mov
sub
and
fisubl
lahf
rclb
add
xor
push
jmp
push
pop
icebp
add
jns
outsl
out
dec
in
lahf
aad
fldcw
xor
call
adc
pushf
or
inc
pushl
hlt
dec
cmpsl
stos
sub
xor
pop
sbb
add
pop
push
push
xchg
or
pop
je
ja
cmp
incl
or
pop
mov
pop
inc
push
imul
lea
mov
fdivrs
sub
in
xchg
sub
jb
repz
into
mov
out
cli
fistps
faddl
mov
and
cmp
ds
dec
cmpsl
jnp
loopne
fisubrs
pop
or
test
gs
out
mov
cltd
mov
icebp
ret
and
and
popa
jl
les
xchg
shl
in
dec
mov
call
sbb
or
fldt
mov
shll
mov
push
jb
clc
popf
orl
imul
adc
xor
into
int
fwait
add
subb
stos
cmp
xchg
hlt
cmpsb
mov
sbb
xchg
insb
fildl
mov
sbb
fidivrl
sub
mov
cwtl
mov
cmp
pop
inc
xor
pushf
in
ret
fildl
mov
ds
repz
rolb
cmp
adc
lock
fcmovbe
scas
aaa
cltd
mov
sub
push
pop
shll
movb
push
mov
call
or
adc
mov
add
fptan
clc
popa
add
or
sahf
fildll
xchg
rcll
into
cmp
cmp
nop
rorb
addr16
jo
icebp
lret
repz
insb
movsb
push
test
jnp
and
jb
mov
sti
jae
adc
in
cli
stos
rcrb
shl
and
and
test
scas
sbb
pop
push
adc
sbb
sub
repnz
adc
rol
pushf
inc
ja
inc
push
jmp
sub
imul
fld
ret
push
outsl
mov
dec
jns
or
in
pop
sub
cmp
aam
pop
dec
sub
jb
repnz
pop
callw
mov
add
insb
les
xor
daa
lods
mov
int
xor
xlat
sbb
push
adc
popf
dec
out
repnz
mov
repnz
repnz
flds
mov
movsb
cs
xchg
cmp
push
jbe
sbb
pop
hlt
mov
pop
scas
dec
filds
dec
jecxz
xchg
sub
mov
adc
test
jge
mov
mov
dec
fsub
gs
idiv
insb
jg
ret
dec
mov
std
into
sbb
movsb
sbb
push
cmpsl
shlb
mov
repz
fs
dec
or
jae
call
repz
dec
out
dec
xchg
addb
xor
sbb
outsl
and
scas
gs
lea
jne
add
int
mov
push
mov
sbb
sbb
cbtw
cli
push
push
push
push
mov
inc
cmpsl
fs
mov
xlat
lcall
or
dec
and
push
in
inc
xor
in
mov
fcoms
dec
jo
mov
sub
xchg
test
xor
movsb
scas
push
mov
cli
or
cli
dec
std
xchg
lret
pop
inc
mov
inc
pop
ffree
repnz
aam
into
lret
pop
fisubl
cltd
xchg
pop
in
jg
mov
imul
and
cmpsl
lea
cmp
push
ret
inc
inc
push
mov
pushf
clc
and
mov
test
jge
pusha
ret
scas
mov
loopne
mov
add
sbb
lds
test
stos
xchg
orb
pop
xor
xacquire
dec
adc
cmp
sbb
fistpl
fstpt
movsb
or
ret
add
ss
mov
pop
cmpsb
jnp
cmp
and
mov
das
push
cld
je
cmp
mov
out
dec
imul
jo
dec
inc
icebp
adc
xor
idiv
mov
cmc
dec
rcrl
xorb
sbb
sti
pop
dec
mov
mov
cmp
add
sti
stos
addr16
mov
out
push
pusha
cmp
cs
icebp
jno
repz
sub
notl
clc
push
mov
jnp
imul
mov
jns
push
add
lret
das
mov
jle
inc
cmp
or
xchg
dec
scas
inc
push
xchg
sahf
jne
loopne
pop
mov
mov
cmc
or
inc
mov
or
cmpsl
popf
add
subl
je
mov
mov
sbb
cmp
sarl
dec
arpl
enter
or
pop
loopne
aaa
fdivl
lods
stos
mov
aas
xor
sub
fldl2e
imulb
mov
shlb
adc
pop
push
fs
push
dec
das
movsb
in
or
cmpsl
push
gs
rol
mov
ret
ja
cmp
push
jae
insb
std
xchg
addr16
arpl
dec
addr16
lahf
pop
scas
cwtl
test
xchg
xchg
xchg
imul
mov
push
lds
pop
mov
jg
add
frstor
notl
push
in
insb
or
dec
pop
sahf
sbb
mov
xchg
arpl
mov
lea
push
insl
mov
cwtl
sub
lods
pop
addr16
mov
push
scas
out
jle
push
insl
bound
jno
ljmp
std
imul
fidivs
push
stc
mov
clc
adc
mov
clc
mov
mov
lods
xor
xor
mov
movsl
add
mov
pop
popf
orl
adcl
jns
cmp
jno
pop
daa
push
push
adc
sbbb
jne
push
imul
lods
in
pop
cmpsb
sbb
addr16
popf
xchg
mov
sahf
lret
adcl
scas
push
cmp
das
mov
push
ljmp
mov
jne
push
test
sub
lds
inc
cmc
ret
hlt
sarb
in
jnp
xchg
xchg
mov
lock
lret
xchg
test
fwait
pop
push
sahf
jge
lods
mov
and
cmp
pop
aas
inc
or
xchg
pop
add
setp
hlt
lcall
jns
and
xor
xor
xchg
loopne
sbb
sub
fdivl
es
lds
pop
sub
test
imul
xor
pop
jmp
dec
in
pop
add
and
ss
daa
imul
movsb
fsts
pop
pop
mov
mov
mov
or
scas
ds
or
dec
pop
aas
inc
mov
xchg
insb
push
sub
fs
enter
xor
pop
xor
stc
cmp
not
je
mov
orl
push
xor
dec
push
cltd
adc
js
mov
mov
push
inc
clc
test
adc
push
es
ret
mov
in
xchg
inc
sahf
aad
jo
je
jae
dec
push
inc
lds
shrl
test
xor
in
sbb
outsl
inc
push
sub
loopne
mov
cwtl
pop
push
add
or
adc
push
mov
filds
mov
scas
lds
out
sub
cmp
dec
jl
arpl
dec
dec
mov
adc
mov
and
das
addl
out
aaa
mov
mov
add
mov
push
test
mov
sub
sbb
or
or
jbe
xchg
sbb
jg
mov
adc
inc
jecxz
or
cld
addr16
cwtl
mov
add
gs
jmp
cmp
ret
hlt
movsb
mov
xor
and
lcall
pop
pop
sbb
clc
scas
jl
and
inc
pop
cmp
test
inc
cmp
out
fstpt
mov
das
push
jge
jno
push
inc
sbb
cli
loop
imul
imul
stos
xlat
cmp
iret
jle
stc
lods
pop
push
jl
jp
or
ja
mov
push
xchg
inc
aaa
inc
jo
sub
pop
in
push
bound
push
rcl
daa
sub
insb
pusha
and
mov
es
jbe
fmull
sbb
add
xchg
or
sbb
nop
imul
in
cmpl
popf
add
mov
aaa
subl
popa
pop
loopne
int
mov
pop
loop
pusha
add
movsb
mov
addr16
inc
fldcw
mov
pusha
mov
cs
repnz
icebp
shl
inc
xchg
pop
movsl
dec
push
and
xchg
cmp
mov
in
adc
dec
mov
sbb
mov
cmpsl
loopne
xorb
in
jg
jae
popf
imul
sub
jns
mov
dec
fisttps
jge
jecxz
sbb
pusha
add
iret
les
jge
dec
cmp
cmp
sbb
fisttps
mov
xchg
call
jae
push
push
push
ljmp
adc
jecxz
or
cld
cltd
dec
es
int3
insl
mov
add
pop
mov
inc
int3
aas
adc
js
sti
lcall
out
outsb
pop
xchg
repnz
cmc
cmpsb
addr16
pop
cs
add
outsb
jmp
repnz
lods
out
frstor
mov
add
stc
mull
mov
and
fdivr
rcrl
test
cs
loope
xor
pop
int3
mov
sub
seta
in
test
rep
js
xchg
aaa
push
adc
or
inc
jns
icebp
xchg
or
jmp
xchg
aad
mov
mov
add
mov
mov
lahf
cmpb
cmpb
data16
xchg
mov
test
lret
mov
sbb
xorb
jae
push
stc
je
in
call
idivl
aaa
jno
xor
pop
cmp
out
pop
test
andl
cmpl
in
movsb
rcrl
push
stc
lret
call
shll
mov
outsb
add
jns
dec
adc
pop
add
push
bt
movb
or
jae
gs
dec
jmp
add
lea
pop
mov
adc
loop
shrb
push
add
into
jg
mov
jle
out
mov
and
xor
nop
dec
aad
pop
mov
jno
or
and
lods
fcmovb
fsubrl
add
ret
xchg
outsb
mov
cmp
adc
push
aas
int3
xchg
pusha
push
rcr
outsl
ljmp
or
scas
pop
jns
add
mov
add
dec
xchg
sbb
mov
mov
push
mov
cltd
push
xchg
push
int3
leave
add
xchg
cmpsb
addb
leave
lahf
sarb
cmp
idivb
lcall
gs
icebp
jmp
repnz
cld
add
shlb
mov
and
stos
and
mov
mov
pop
enter
stos
ljmp
mov
popf
popa
xchg
inc
das
or
xchg
lds
mov
sbbb
pop
fmul
shl
in
movsb
pminub
gs
aaa
cltd
sarb
xor
stos
dec
xor
jns
add
jnp
popa
mov
ret
loope
scas
or
call
repnz
jl
and
pop
stos
mov
dec
add
aam
repz
jmp
repnz
popf
adc
jbe
insb
stos
cmp
fs
lea
int
mov
mov
mov
in
pushf
fstps
push
mov
dec
les
cmpsl
xchg
lods
add
cmpsb
sbb
test
es
dec
pop
mov
mov
xchg
out
xchg
sbb
leave
xorl
in
sarl
aaa
jno
push
stos
jne
jb
mov
inc
test
clc
aam
cld
pop
or
pop
inc
adc
rorl
divl
popa
and
xor
jo
lods
push
pushf
add
or
jne
ret
test
xor
cmp
cmpsb
mov
cli
je
inc
jns
or
rcrl
adc
leave
iret
int
js
fcomps
pop
cmpl
addr16
rcr
in
push
push
mov
mov
mov
jb
push
aam
popa
into
mov
push
push
out
mov
cli
enter
sub
xchg
stc
mov
out
add
addr16
icebp
adc
gs
mov
add
movb
dec
cwtl
mov
sahf
mov
outsl
xor
das
nop
inc
jg
repz
mov
and
or
xor
push
jle
pop
or
cmp
stos
push
fucomi
xchg
bound
shl
fbld
popf
or
hlt
cmp
stos
push
out
es
push
xchg
and
mov
repz
scas
push
dec
clc
xor
push
out
push
fs
cld
pop
pop
hlt
cld
imulb
test
cltd
or
negb
dec
ja
pop
or
xchg
nop
loope
ret
insb
sub
call
shrl
into
jle
or
test
jne
pop
aas
add
es
xchg
jo
repnz
fnstsw
mov
psrad
sub
jbe
fldenv
fst
pushf
mov
repz
insb
dec
jmp
enter
push
mov
lods
jae
lret
test
popf
add
dec
bound
push
push
jbe
scas
mov
lcall
jecxz
hlt
xchg
test
pop
or
sub
mov
iret
mov
dec
inc
mov
sbb
or
stos
pop
mov
in
inc
push
fidivrs
pop
xchg
push
gs
movsb
cmc
mov
out
lea
mov
ficoms
xchg
cmp
repz
jo
jecxz
sub
in
xchg
daa
cmpsb
add
lods
int
push
jae
es
pop
mov
hlt
pop
dec
test
mov
mov
sti
mov
mov
gs
sub
mov
and
int
aam
shlb
int3
cmp
mov
dec
xchg
adc
lcall
pop
or
repz
sahf
subb
icebp
js
es
pop
cmpsl
in
jge
xchg
sub
out
sub
jno
iret
add
mov
insl
or
dec
cmp
pop
cmpsb
xor
testl
insl
xchg
mov
mov
lcall
xor
bound
imul
jp
mov
adc
add
push
js
loopne
adc
adc
xchg
out
and
or
xorl
xor
icebp
ret
cmpsl
add
dec
xor
pop
or
jb
shlb
loope
inc
push
cmpb
rolb
in
add
and
lods
mov
int3
adc
ret
mov
bound
mov
in
mov
pop
les
jno
scas
fcompl
pop
roll
fstpt
out
imul
mov
ss
mov
push
sub
xor
andb
xchg
dec
jns
jecxz
push
mov
cmpsl
jecxz
imul
leave
or
movsb
hlt
mov
fcmovne
xchg
inc
add
mov
jmp
add
out
xchg
pop
cltd
sbb
pop
gs
fsubs
pop
adc
lods
in
jo
add
and
jecxz
push
xor
lods
add
fbld
inc
xchg
push
mov
std
jno
mov
add
mov
xor
and
mov
loopne
in
add
and
and
outsb
pushf
les
shlb
pop
fstpt
and
mov
xchg
push
iret
insb
fnstsw
mov
xchg
inc
adc
jo
add
dec
xchg
fisubrs
dec
xor
fcomps
subl
push
sub
sub
push
push
repnz
in
cltd
cmp
jg
adc
test
xchg
pop
std
jb
sbb
sbb
xor
lods
mov
adc
push
xor
inc
xor
bound
and
push
push
mov
cmc
lret
adc
sub
adc
jns
fsubrs
pusha
mov
xchg
jle
lcall
test
push
rorb
cmpb
xchg
movsl
cmpsb
lcall
jne
sbb
jae
xchg
fstpt
loope
adc
jbe
mov
shll
int3
inc
sbb
adc
loope
xchg
cmpl
sti
cmpb
jp
inc
dec
cmp
and
fidivl
mov
xchg
sbb
jecxz
iret
bound
adcl
inc
imul
fdivp
sbb
insl
gs
pusha
enter
test
jmp
in
pop
add
cmp
dec
add
adc
cmpsl
repz
int
jb
and
test
mov
sub
fs
icebp
pop
cmp
ds
loop
push
into
pop
pusha
gs
and
push
les
cli
out
cmpl
inc
out
insl
dec
addr16
pushf
or
out
notb
hlt
push
sbb
sub
xor
shr
sub
xchg
sub
test
clc
ja
add
jb
flds
fistps
push
lock
dec
mov
mov
xchg
inc
sbb
jb
xor
adc
sub
or
imul
mov
insb
sarl
push
ja
or
mov
xor
lods
cmp
jbe
stos
rcll
cs
sbb
or
test
push
std
mov
or
dec
and
mov
mov
add
pop
push
mov
addb
std
sub
fisttps
or
jbe
lods
das
lea
push
cld
sub
outsb
and
stos
or
push
cmp
rcrl
inc
int
push
in
daa
ds
dec
fstpl
mov
icebp
lret
inc
cmp
fstpt
mov
jle
insb
orl
jnp
and
or
cmp
and
lcall
xor
jp
cmp
movsb
sub
xchg
cmp
je
and
dec
cmc
pop
fdivr
imul
sbb
rol
stos
or
cmp
adc
sbb
add
dec
inc
ret
imul
sbb
outsb
dec
lea
rol
adc
jl
pop
repnz
xchg
sub
pop
lcall
imul
pop
mov
xchg
cmpsb
push
cmc
xchg
cmp
out
inc
mov
lods
fbld
or
add
es
shl
mov
add
cmp
es
mov
inc
xor
in
imulb
push
in
lods
xor
xor
add
je
popf
xchg
fistl
mov
mov
push
lahf
mov
jns
mov
mov
lock
fwait
icebp
jmp
xor
push
xlat
inc
bound
jg
xor
out
push
ss
add
insb
ret
dec
cmp
scas
arpl
pop
lret
and
fistpl
mov
hlt
into
push
sub
enter
push
das
stos
into
mov
mov
xor
lea
stos
and
push
xchg
push
inc
mov
mov
loop
xchg
inc
add
fcomip
ja
std
adc
inc
sahf
cmp
or
push
popa
sti
movsb
lcall
inc
xchg
inc
add
mov
xor
add
imul
cmp
out
mov
fsubr
mov
call
push
sti
mov
jno
dec
mov
mov
push
bound
sub
xchg
sub
cs
mov
lret
xor
or
fistl
lods
inc
or
out
lahf
mov
in
jl
inc
pop
adc
jecxz
imul
push
fdivrl
gs
or
xchg
test
lret
repz
out
xor
adc
mov
rcll
lahf
pop
adc
sub
lods
cmp
leave
xor
cltd
aaa
sti
jmp
pop
loope
out
jbe
cmpsl
ja
or
scas
rcll
push
popa
mov
sbb
int
sub
arpl
and
push
stos
sub
sbb
fldl
xor
lahf
movsb
stc
fs
mov
mov
mov
push
sbb
fidivs
push
jns
stos
push
mov
add
inc
andl
je
and
or
cmp
icebp
fwait
xor
sbb
mov
aam
adcb
enter
cmp
mov
das
pop
pushl
fwait
or
repnz
mov
mov
push
xchg
adc
mov
js
inc
cmc
lahf
cmp
fildll
lock
aam
mov
mov
in
scas
mov
or
jbe
xor
fwait
sbb
outsl
icebp
dec
jp
leave
dec
pop
sbb
xor
je
and
into
imul
push
jle
repz
sahf
cmp
je
mov
dec
mov
dec
test
xor
sti
mov
inc
lods
dec
icebp
xor
dec
jge
mov
inc
shl
test
and
in
add
test
and
dec
std
int3
ret
sub
insl
jo
jae
adc
or
stos
or
add
test
out
imul
pop
insl
xchg
addr16
divl
subb
scas
xlat
mov
adc
xchg
pop
mov
pusha
push
aam
inc
and
add
insl
inc
mov
loope
lock
sahf
dec
rcr
jo
sbb
enter
sub
inc
jle
jae
inc
mov
ds
and
mov
sbb
int3
rcrl
xor
sub
jmp
lahf
mov
shrl
dec
xchg
movsb
ret
jo
jecxz
mov
les
mov
rcll
inc
sbb
cltd
test
cmp
hlt
cmp
leave
fidivs
mov
iret
fsubr
sti
sbb
lret
data16
sub
mov
pop
loopne
cmp
js
ficoml
std
insl
aaa
fstpl
add
cmp
and
mov
mov
jno
cwtl
bound
pop
in
bound
pop
lret
mov
cmpsl
and
mov
push
lret
cltd
insl
imul
aam
jno
loopne
jmp
or
out
pop
scas
dec
mov
out
push
aam
nop
sub
and
clc
jnp
inc
pop
fsubrs
jmp
into
int3
sub
loopne
mov
xchg
or
adc
lock
sub
push
fstl
rorb
cmpsl
mov
sub
inc
dec
sub
mov
push
or
xor
aad
add
push
xlat
fsubrl
shlb
mov
mov
rorl
or
lods
jle
es
nop
lods
dec
gs
mov
mov
or
dec
inc
or
mov
lcall
test
xlat
push
jp
insl
push
fists
push
or
ss
arpl
jmp
mov
lret
jge
out
call
xchg
lretw
in
xchg
jge
lds
push
imul
sti
mov
arpl
xor
data16
ret
hlt
ss
cwtl
jp
mov
int
mov
sbb
js
adcl
andl
mov
in
pop
int3
xchg
mov
fldt
cmpsl
insl
mov
sti
rolb
dec
shl
arpl
xor
daa
cmpsl
iret
mov
inc
sub
outsl
or
hlt
and
adc
mov
jo
sbb
push
cmp
movsb
or
roll
inc
and
push
les
or
fucomi
jo
pop
sbb
movsl
iret
and
sub
ficomps
pop
jecxz
hlt
pusha
imul
dec
and
xchg
stos
push
int3
mov
pop
sbb
pop
pop
cmp
mov
aad
shrl
sbb
xor
jge
test
inc
cmp
sub
push
push
xor
lret
sbb
mov
jle
ret
sub
dec
movsl
jmp
or
lea
mull
xor
or
neg
jg
push
pushf
add
jg
ds
inc
lahf
push
jp
stos
mov
xor
call
call
pop
push
fnstcw
fwait
pop
lea
sarb
test
outsb
xchg
outsb
add
cmp
mov
and
xor
dec
and
cmpsl
inc
jecxz
cmp
adc
mov
xor
dec
add
mov
cli
fsubrl
mov
xor
cmp
mov
out
dec
jle
nop
insb
arpl
push
fidivl
insl
xchg
iret
mov
shl
mov
xchg
xor
popf
xchg
sub
dec
adc
enter
lods
ja
in
xchg
lods
lds
pop
fs
andl
jle
xchg
fmull
push
add
jo
xlat
adc
lcall
iret
push
mov
jno
sub
mov
push
push
xchg
aaa
mov
push
add
xchg
push
add
cmp
addr16
arpl
pop
xor
and
xor
nop
push
or
jbe
inc
sahf
xchg
pop
push
mov
test
xor
stos
jge
add
cmpsb
add
xchg
outsb
out
mov
pop
jmp
adc
cwtl
mov
popa
mov
mov
mov
jnp
push
andl
mov
andl
cmpsl
clc
leave
test
pop
fstpl
scas
out
pushf
sbb
dec
cmp
push
xchg
in
scas
mov
and
sahf
mov
aas
fstpl
or
sbb
mov
xchg
inc
sahf
add
loope
test
incb
enter
mov
aad
inc
cmp
sti
sub
cmp
sahf
fwait
push
cmp
ljmp
pop
rcl
inc
mov
adc
movsl
orl
dec
lea
data16
mov
dec
imul
push
pop
mov
pop
outsl
dec
jg
popf
cmc
inc
loope
xchg
push
inc
push
and
add
sub
jge
or
int
nop
test
lcall
jmp
mov
jg
pop
cmp
push
xchg
xchg
add
fldl
adc
cmpsl
out
test
add
ss
mov
lds
imul
insb
imul
sbb
imul
out
mov
xlat
mov
cmp
add
scas
sysenter
and
pop
cwtl
sbbl
sbb
cmc
sbb
ljmp
xor
pop
push
lret
and
lcall
aad
test
push
inc
mov
fcoml
and
mov
iret
adc
xchg
iret
pop
incb
addr16
testl
or
gs
xor
mov
xchg
arpl
xchg
stos
shlb
aaa
adc
data16
loope
cmp
out
fisubs
sub
cmc
out
or
sar
or
mov
inc
adc
dec
fdiv
xchg
mov
roll
sbb
inc
insb
ficomps
ret
iret
pop
xorb
adc
pop
out
mulb
ds
idivb
mov
and
xchg
out
jae
fists
divl
imul
in
mov
xchg
leave
pop
out
rcll
popa
imul
popf
xor
inc
movsb
mov
cmp
pop
pop
push
push
xchg
sbb
dec
jne
lock
inc
pop
sub
ds
sbb
sbb
dec
daa
aad
lcall
push
fsubrl
mov
adc
lret
push
and
icebp
jle
rcrl
sub
dec
mov
leave
test
ds
or
xchg
ljmp
in
rcrb
sub
sarl
stos
test
xor
push
pop
bound
dec
sbb
fs
mov
negb
imul
arpl
int3
push
mov
xchg
xchg
loope
repz
mov
push
mov
pop
or
divb
jge
dec
lret
daa
test
in
incl
mov
xor
into
sbb
outsl
and
jl
mov
fst
clc
push
ret
and
outsb
out
push
lods
xchg
pop
pop
sub
mov
cmc
jno
add
pop
xchg
xchg
sbb
jae
out
shld
and
sbb
sbb
lret
mov
mov
in
rorl
pop
in
daa
cmp
add
pop
cmp
outsb
jo
mov
add
or
or
rcrl
and
arpl
inc
leave
ret
mov
fidivs
push
mov
cmpsb
pop
jecxz
fistpll
mov
test
scas
or
mov
popf
and
out
pop
insb
pop
movsl
mov
xchg
xchg
jne
test
mov
push
jecxz
loop
rolb
and
ret
mov
aaa
ror
mov
cli
mov
sub
pop
mov
jae
dec
sbb
sub
inc
sahf
icebp
roll
sub
test
testb
mov
sbb
xor
lods
fisttps
fisubs
movsb
mov
stos
test
aaa
jg
push
subl
sbb
add
or
clc
aaa
fucom
pop
and
aad
pusha
pop
aad
shl
cmp
es
xchg
imul
stc
hlt
mov
fs
inc
es
xchg
push
mov
call
add
cmpb
inc
mov
xchg
xor
inc
scas
push
movsb
out
int
ds
imul
mov
cmp
in
mov
cmc
push
ret
in
pop
dec
mulb
mov
or
jp
mov
push
add
and
iret
movsl
in
xchg
repnz
in
mov
jl
ret
lods
jne
pop
and
pop
inc
mov
and
xor
out
test
adc
and
cmp
ljmp
pop
aad
bound
imul
cmpsl
pop
sbb
or
or
mov
pop
es
sub
mov
jbe
mov
adc
decl
test
mov
sbb
push
std
mov
rolb
dec
pop
sti
test
sbb
enter
popa
ret
xor
push
mov
xor
sub
xchg
inc
push
push
xor
jb
minps
lds
stos
sbb
out
xor
mov
ret
mul
sbb
xchg
or
lret
aam
jmp
mov
test
jecxz
inc
or
shrb
cmp
xlat
sahf
xor
or
xorl
jne
push
jp
test
push
sub
ret
and
cmp
push
lcall
inc
scas
sbb
or
dec
std
imul
cmp
sub
ret
pop
enter
in
daa
mov
jmp
into
js
stos
sub
mov
mov
push
fimull
mov
adc
sub
out
repnz
cld
aam
imul
cmpl
mov
js
out
in
scas
inc
or
sub
cmp
jbe
mov
pop
pop
int3
loopne
adc
addr16
sbb
xor
cli
insb
dec
stos
xor
sub
cmpsb
cltd
lods
stos
mov
out
testl
mov
dec
fists
out
mov
sarl
pop
ljmp
jl
push
pop
popf
pop
and
jge
jp
lds
sahf
xchg
mov
outsl
cmp
in
jbe
lret
fs
out
or
mov
sti
arpl
cmp
push
add
out
mov
jg
pop
cmp
sub
mov
sub
sub
mov
push
orb
xor
pop
xorb
das
ljmp
inc
adc
bound
les
mov
pop
lar
fmuls
sub
mov
and
movsb
lods
mov
stos
mov
lock
push
lret
mov
addr16
push
mov
jmp
gs
div
enter
xchg
jmp
adc
add
dec
stos
sub
inc
xchg
mov
test
mov
add
and
or
sub
data16
lret
lods
lret
lret
cs
insl
mov
mov
mov
push
repz
xchg
sub
repnz
icebp
adc
mov
pusha
ja
jp
ljmp
std
or
popf
dec
adc
jno
ja
scas
mov
ja
mov
mov
movsl
xchg
andl
ss
sub
cwtl
xchg
mov
andb
scas
sub
enter
jg
jns
pop
loope
pop
in
dec
ret
pop
pop
arpl
fsubrs
hlt
jg
sbb
mov
leave
out
scas
push
push
mov
int3
shl
mov
fwait
jp
stos
dec
ljmp
or
fnstenv
xor
xor
fidivrs
shl
movsb
enter
mov
outsb
mov
insl
mov
adc
adc
scas
push
test
outsl
dec
ret
mov
roll
pop
mov
int3
arpl
test
cmp
sub
fisubs
cmp
outsl
and
mov
xlat
or
addr16
jns
jne
sbb
dec
add
or
idivb
fcomps
push
stc
stos
ss
inc
xchg
daa
and
lock
cmp
gs
xor
lret
pop
adc
cli
stos
mov
or
and
out
addr16
and
popa
jmp
arpl
lock
inc
jle
pushf
push
dec
lods
mov
movsb
mov
pop
sbb
filds
sub
cmp
adc
pop
add
xchg
mov
sahf
test
xor
jbe
in
xorb
adc
xor
add
rorb
inc
or
add
repz
add
stc
cmp
jbe
rclb
cmp
outsb
fldl
mov
dec
adc
add
jno
xlat
mov
jl
mov
insb
fsubrs
test
fbstp
pop
adc
jnp
fidivl
mov
xchg
jns
cmp
jae
hlt
iret
adc
pusha
adc
sub
test
add
in
inc
push
or
push
shlb
adc
dec
in
push
mov
mov
lcall
push
push
lock
or
xor
dec
push
lods
adc
xor
mov
or
jp
out
cmp
psadbw
call
call
push
repnz
sbb
xlat
rorb
adc
xchg
inc
ret
call
xor
mov
in
mov
idivb
aad
sub
into
ja
inc
sbb
pop
rcll
cmp
cmpb
push
mov
sub
arpl
adc
clc
gs
jecxz
pop
hlt
in
das
mov
xchg
sahf
in
daa
or
xchg
xchg
adc
add
mov
inc
xchg
daa
call
test
cmpl
cmp
jb
cmp
mov
cmp
xchg
daa
rcr
cmp
lock
subb
cmp
pop
sub
es
dec
adc
pushl
cli
and
or
xor
push
push
adc
add
jns
enter
xlat
mov
mov
lock
lea
dec
sbb
dec
jge
xor
stc
mov
xor
pop
mov
add
sub
inc
fidivrl
cld
sub
cs
ret
inc
push
outsl
repnz
lods
fs
xor
leave
int3
and
mov
aas
je
shll
mov
fdivs
push
insb
push
icebp
sub
jae
pop
sub
xchg
stos
scas
mov
xchg
aaa
in
jnp
test
xor
add
scas
dec
mov
fdivrl
testl
adcl
dec
xlat
lock
in
adc
pop
or
push
ds
sbb
jp
das
arpl
das
xor
test
in
xchg
push
test
out
lret
stos
cmpsl
idivb
xchg
or
inc
mov
clc
imul
adc
cmpsb
loopne
aam
inc
mov
enter
fwait
fwait
mov
lahf
pop
xchg
in
push
or
mov
push
int
pushf
shl
adc
test
mov
insl
inc
bound
loop
cmp
push
lahf
cwtl
pop
push
fcomip
out
mov
testl
faddl
lea
or
sar
sbb
pop
repz
adc
sarb
pop
leave
or
inc
xchg
adc
push
mov
jb
mov
sub
xor
outsb
cld
mov
inc
movsl
cmc
adc
inc
addl
test
sub
insl
popl
xchg
orb
imul
ficompl
into
mov
xchg
out
clc
or
cmp
outsb
push
lret
lcall
xchg
xor
lea
sahf
int3
and
inc
dec
cld
in
and
cmp
lahf
and
jnp
dec
jnp
xor
sbb
inc
mov
jmp
or
sub
sub
xor
outsw
jp
lret
rcll
ret
fcom
frstor
fistps
lods
mov
fsubrs
out
cmc
xchg
mov
mov
sbb
and
dec
out
out
test
pop
mov
mov
mov
stos
fwait
mov
icebp
mov
sti
or
dec
ds
inc
in
fwait
inc
lret
rclb
and
mov
lret
outsl
out
pop
mov
fdivrl
out
mov
bound
mov
pop
andb
in
sub
sbb
pop
ds
push
push
loope
stos
loopne
les
push
inc
sbb
cli
in
lods
out
inc
bound
jg
mov
aaa
pop
les
cmpsl
stos
dec
sub
pop
mov
in
sbb
cli
movsl
pop
test
jno
dec
fdivrs
out
flds
inc
adc
cmp
mov
dec
imul
bound
adc
les
dec
in
or
mov
fsub
pop
push
mov
cmovo
cwtl
bnd
sbb
movsl
inc
jns
nop
addl
nop
nop
outsb
cmp
mov
dec
pop
gs
jne
stos
dec
repnz
lods
lds
insb
pop
mov
shlb
ret
sbb
lds
jnp
or
fdivp
ljmp
inc
jne
mov
daa
out
add
inc
shl
push
cmp
dec
inc
sub
xchg
cmp
jb
fsts
lret
add
out
mov
cmpsb
dec
out
stos
jae
jns
xchg
repz
pcmpeqb
imul
addr16
push
jae
divb
jmp
jb
outsb
gs
mov
adc
lods
push
xchg
adc
cwtl
shrl
mov
lret
shr
inc
cmpsl
pushf
or
shrb
pushf
shl
and
push
push
popa
xor
sub
dec
xlat
push
jb
jmp
add
jg
imul
jl
jo
lods
jb
iret
fcompl
out
add
adc
test
adc
rorl
mov
and
jle
xor
vldmxcsr
push
sub
xchg
insl
sub
out
loope
dec
je
out
mov
push
cli
xchg
jne
pop
adc
fcmovnbe
and
fs
adc
push
sub
call
mov
or
mov
sbb
mov
into
xchg
jb
fnstenv
pop
mov
fisubs
lret
inc
je
push
push
aam
outsl
sbb
orb
xchg
pop
mov
push
mov
inc
sub
outsb
and
mov
movsl
ja
je
in
pop
pop
iret
lods
mov
addr16
mov
or
mov
lcall
add
pusha
mov
xchg
push
add
enter
rcll
push
pop
cmpsb
in
xor
lret
repnz
or
or
popf
lret
mov
pop
fldcw
rcrb
outsl
mov
ss
adc
cmc
jno
jmp
insl
mov
push
fistl
or
out
or
adc
add
in
or
mov
push
and
mov
ret
mov
cli
cmp
inc
sub
stos
cmp
pop
push
mov
stos
hlt
cmp
pop
sti
jbe
xor
loopne
mov
mov
pop
jecxz
inc
xor
rorb
push
rorb
es
aam
test
jmp
pushf
mov
daa
arpl
fsubr
outsb
lea
xchg
adc
xchg
inc
jnp
push
loop
and
push
inc
iret
cmp
leave
stos
pushl
mov
mov
test
cs
jecxz
ficoml
cmpsb
pop
mov
mov
inc
scas
cmp
adc
rcll
add
fstpl
push
push
jp
add
int
pop
rol
insb
nop
aam
mov
je
and
add
push
cltd
cmpsl
cmp
movsb
xchg
inc
lods
loop
mov
dec
xor
test
mov
push
lcall
mov
dec
or
cmp
add
dec
mov
inc
add
or
pushf
add
xor
das
fidivs
aaa
int3
out
add
rorb
fdiv
and
andl
outsl
mov
cmp
or
popf
sti
or
pop
jle
popf
inc
sbb
out
sbb
inc
shlb
or
test
pop
adc
loope
push
decl
clc
loope
das
mov
or
fstpt
ja
js
rclw
pop
push
push
mov
scas
cwtl
aas
xchg
shl
push
jo
push
xlat
nop
sbb
sub
lcall
decb
push
shll
xchg
sbb
jp
push
xor
or
jge
test
cs
mov
enter
or
inc
test
std
dec
pop
cmp
mov
sbb
pop
dec
xlat
mov
sub
dec
pop
scas
jl
xchg
push
mov
mov
addr16
xchg
xchg
scas
pop
dec
stos
lock
icebp
cld
push
sbb
xor
adc
mov
xor
cld
mov
pop
movsb
mov
lret
fs
dec
popa
sahf
fisttps
mov
flds
cmp
in
add
xchg
mov
pop
add
in
cmp
push
add
jo
aad
das
push
inc
sbb
negb
lds
xchg
ret
test
inc
lret
add
mov
pushf
lret
pop
ret
mov
ss
frstor
out
mov
sarl
test
add
pushf
outsb
or
cmc
pop
sti
lret
cmp
test
mov
fisubs
into
aas
imul
nop
xchg
imul
lahf
fstpl
jmp
jg
movsl
gs
movsb
in
inc
jle
pop
cli
rclb
shl
ds
ret
dec
sub
fildll
adc
inc
sbb
dec
in
ds
cmp
xor
icebp
jb
inc
faddl
pop
mov
cmp
jns
insb
enter
popa
shl
push
lahf
lods
mov
loopne
jecxz
jb
mov
orb
in
repnz
xchg
mov
ss
movb
mov
outsb
out
or
out
shrb
push
pop
test
movsl
test
adc
mov
pop
mov
xchg
loopne
nop
rcrl
xchg
aas
test
pop
and
mov
cwtl
aas
daa
out
sahf
mov
loope
cmc
xchg
aad
imul
dec
mov
push
movsb
jnp
cli
in
push
repnz
sahf
jnp
mov
mov
jns
push
xor
stc
xor
inc
xlat
xlat
mov
cmp
sub
rcrb
dec
push
pop
sub
xor
xchg
mov
lds
out
push
push
ror
jns
push
daa
push
cs
les
adc
out
xchg
inc
pusha
adc
das
mov
push
mov
jbe
icebp
bound
movsl
add
mov
cmp
mov
sbb
or
cmp
and
in
les
cmp
ret
inc
xor
push
in
addr16
rclb
int
inc
in
sub
into
mov
pop
int
js
movsb
adc
cmpsb
adc
in
mov
std
mov
scas
pusha
in
jnp
in
and
jg
mov
cmc
and
test
sti
stc
out
cmp
jns
decb
xchg
decb
in
mov
jnp
test
les
gs
rclb
mov
or
cmp
clc
mov
mov
mov
dec
and
mov
mov
inc
aam
ret
inc
hlt
jb
adc
repnz
add
in
ss
adc
lods
sbb
jne
insl
mov
int
adc
sub
cmp
rolb
or
dec
out
movsl
lods
cltd
mov
ficompl
in
adc
aam
push
out
jne
ror
loop
adc
push
in
xchg
and
inc
in
movsb
ret
incl
push
xchg
jb
pop
xchg
pop
shrb
jo
adcl
adc
negw
psrlq
sahf
mov
pop
pop
sbb
xchg
lcall
loop
jle
push
push
inc
shll
aam
int3
xchg
lods
daa
cmp
stos
xor
mov
rorb
outsl
dec
mov
mov
mov
out
pop
frstpm(287
jge
or
gs
pusha
out
jae
ret
push
xchg
cmc
fs
ds
rcrb
push
dec
clc
cmp
xchg
cmpsb
xchg
and
xchg
cltd
jbe
scas
sub
mov
adc
mov
mov
movl
jb
add
arpl
xchg
pusha
sub
or
ljmp
cwtl
in
loope
pushf
data16
scas
xchg
fcmovbe
inc
pop
pop
dec
pop
pusha
cld
outsl
pop
push
out
xor
mov
jg
pop
mov
ror
lret
jns
lods
sbb
xchg
push
fnsave
rcl
cmp
clc
mov
and
rcll
inc
and
xlat
cld
out
mov
subb
push
and
push
inc
es
cld
inc
stc
or
ret
xorl
inc
mov
mov
jbe
mov
push
test
clc
push
testl
js
shr
icebp
andl
jbe
xchg
fcoml
adc
je
insb
pop
std
add
mov
in
hlt
jmp
decb
mov
lea
jnp
push
insl
mov
or
push
mov
pop
dec
xchg
inc
lods
test
xchg
testl
daa
pop
dec
mov
add
out
and
out
dec
adc
inc
int3
mov
insb
dec
movsb
lock
mov
daa
and
dec
pop
sub
cld
mov
out
mov
jbe
addr16
cmpsb
push
shlb
scas
cltd
dec
dec
ljmp
pusha
dec
add
sub
addl
aas
stos
xchg
xor
pop
adcl
js
jge
rorb
dec
gs
lahf
sub
push
xor
sbb
adc
bound
pushf
mov
jno
push
or
mov
pop
cwtl
ret
xchg
adc
jo
xor
sub
adc
mov
jno
push
push
ja
ret
cmc
lods
das
sarb
divb
cs
push
mov
cmc
mov
mov
scas
popf
cmpsb
cmp
mov
jno
into
rolb
push
mov
nop
and
xor
dec
jg
jecxz
dec
jle,pn
test
pop
pop
xchg
in
into
mov
sub
fcompl
imul
lds
frstor
lds
fildl
loope
in
sbb
insl
outsl
divl
movsl
dec
mov
push
into
mov
cmp
pop
inc
ficomps
or
aad
pop
repz
je
sbb
mov
push
lahf
mov
mov
fsubs
xor
pop
mov
and
aad
pop
mov
xchg
jle
nop
jbe
sbb
shll
push
push
rclb
insb
scas
cmp
mov
movsl
mov
and
xchg
xor
loop
cmpl
and
pop
test
pusha
or
movsl
cmp
pop
cltd
clc
outsl
xchg
arpl
mov
add
data16
xor
jae
out
push
aaa
sbb
or
jp
adc
aam
sahf
fistl
lods
pop
into
movsl
addr16
and
movsl
xor
mov
jge
dec
xor
frstor
in
lock
in
adc
leave
incl
inc
sbb
sub
fsubrl
jbe
add
call
data16
cmp
stos
loope
lcall
inc
sbb
xchg
test
sub
push
cmpsb
sub
push
adc
inc
mov
ffree
inc
and
and
xchg
repnz
mov
shll
das
inc
lahf
mov
mov
pushf
pop
cwtl
adc
xor
lock
scas
int3
mov
add
and
mov
mov
push
outsl
jge
adc
jecxz
faddl
rcrb
imul
jecxz
pop
jmp
in
loopne
mov
mov
outsb
in
arpl
mov
adc
iret
xor
and
mov
js
cmp
cwtl
sbb
cmovno
imul
loop
out
movb
or
adc
idivl
in
mov
inc
bound
push
test
data16
jmp
jecxz
dec
psraw
sbb
xchg
sub
pusha
push
fstps
pop
test
mov
ja
cmp
in
leave
dec
jnp
jge
andl
sbb
cwtl
adc
outsl
mov
test
xchg
daa
test
loope
out
icebp
ds
daa
inc
pop
jno
add
jns
loope
pop
xchg
mov
cmp
push
dec
in
jnp
fists
mov
sbb
stos
dec
jo
and
sub
test
addb
inc
mov
loop
repz
in
lret
lock
inc
sbbl
cmp
lcall
fucom
mov
lahf
stc
jnp
out
mov
and
int3
lods
sub
and
or
pop
rclb
icebp
mov
inc
outsb
fisttpll
in
aas
out
cmp
repz
out
xchg
loop
mov
inc
shll
sbbl
mov
ret
in
add
push
mov
or
add
arpl
push
push
mov
xor
cmp
adc
add
and
lret
ds
sbb
and
or
jno
lret
push
iret
pop
rcr
arpl
or
jg
fbstp
push
push
lods
xchg
lahf
and
push
xchg
out
sbb
pop
xchg
adc
cwtl
mov
mov
ret
add
das
xor
ja
int3
icebp
movsl
in
mov
jle
mov
pop
stos
je
dec
iret
pop
jns
negl
enter
pop
push
jg
and
mov
mov
movsb
cmpsb
xorl
cmp
push
in
add
push
pushl
lret
adc
fst
mov
cmp
fistl
mov
int
ret
dec
int
pop
mov
in
test
mov
xor
cli
adc
pmulhuw
fldcw
das
fcomps
push
out
fiadds
icebp
nop
popf
jp
jbe
fisubrs
lods
sub
js
push
jmp
ret
fldcw
in
cs
add
adc
add
aad
mov
ja
inc
push
mov
mov
dec
mov
lahf
and
ds
adc
jbe
faddl
sub
lea
das
test
mov
cmp
fs
negl
push
and
xor
mov
mov
dec
cmp
cmp
xlat
les
push
inc
std
adc
pop
je
cmp
jle
sub
mov
or
jae
cs
out
push
in
mov
loop
jnp
mov
jb
lods
hlt
imul
xor
fdivrl
mov
fsubrp
aaa
pop
lret
lcall
jp
dec
call
sahf
mov
sub
push
fdivr
add
imul
adc
mov
add
adc
inc
xor
lret
lcall
mov
cmc
sub
cmpsl
jno
loopne
in
sub
gs
dec
mov
leave
adc
mov
adc
lock
out
and
jp
and
int
fs
movl
push
lock
lret
push
scas
xchg
rcl
inc
mov
insb
cmp
and
dec
jb
mov
and
pop
in
cli
xchg
jbe
sub
or
outsb
fdivrp
pusha
mov
cmp
dec
sub
mov
loop
add
loope
ds
call
lret
mov
mov
cmp
mov
sub
bound
lods
xchg
sahf
shlb
add
mov
xchg
movsb
inc
sub
enter
push
xlat
mov
incl
mov
testl
sbb
mov
mov
cld
sub
xlat
adc
xlat
mov
ss
andl
inc
repnz
in
push
daa
add
andb
int3
sub
arpl
mov
clc
loopne
mov
jmp
lcall
cmp
test
and
adc
rclb
inc
lock
hlt
sub
ljmp
mov
les
test
lods
adc
loope
jge
aam
push
mov
fmull
mov
dec
rcr
test
daa
bound
mov
pop
stos
sarb
in
mov
mov
arpl
sbb
jae
sbb
test
or
dec
out
out
gs
aas
hlt
jp
push
notl
mov
jle
lods
daa
push
cmp
xchg
add
cmp
mov
in
sbb
out
nop
push
xor
xor
frstor
repz
fstps
fcoms
push
jae
cmp
adc
jmp
out
adc
push
mov
lahf
add
jbe
gs
add
jmp
push
mov
sarb
ljmp
mov
mov
imul
mov
data16
inc
xor
sbb
pop
dec
lcall
mov
push
test
pushl
xchg
push
mov
pop
inc
sti
mov
test
aam
dec
outsb
xchg
dec
inc
mov
push
in
imul
jne
fnstsw
shlb
sub
int3
mov
call
jne
mov
jg
inc
in
mov
loop
add
and
jnp
ds
push
int3
out
aad
in
pushf
shrl
or
jge
jp
sbb
add
mov
jne
and
aad
movsb
popl
pop
fsubrl
xchg
jmp
and
and
scas
adc
sbb
jo
movsb
hlt
cmp
dec
push
icebp
iret
popf
dec
cmpsb
adc
xor
dec
addr16
imul
pushf
in
pop
cli
sub
scas
test
mov
add
sbb
leave
dec
dec
xor
jno
js
adc
inc
mov
inc
std
add
add
jp
inc
push
aad
mov
push
sub
adc
push
jl
xor
pop
mov
xor
jo
les
in
outsl
push
dec
or
mov
hlt
loope
push
mov
mov
fstpl
push
jle
sub
or
push
pushf
fsub
loopne
xchg
push
or
xlat
adc
sub
jg
leave
and
mov
jb
xlat
and
stc
and
int
jne
mov
movsb
xor
xchg
jnp
and
popl
mov
push
fidivrs
xor
rol
push
pop
sbb
xchg
das
or
repnz
xchg
mov
add
pushf
mov
push
mov
incb
sbb
fldcw
lret
cmp
cli
pop
and
out
xor
popf
call
sub
mov
xchg
sub
mov
push
popf
fs
loope
fs
xchg
push
sub
adc
repz
cwtl
mov
add
sbb
ret
imul
cmp
pop
fsubl
cltd
jbe
popf
xlat
sub
cs
out
sub
sbb
xor
adc
imul
fldcw
mov
mov
comiss
adc
arpl
mov
mov
pop
dec
lcall
and
jne
push
cwtl
add
jns
lret
and
add
es
pop
push
mov
xor
mov
imul
and
add
insb
imul
lods
out
frstor
push
adcl
push
mov
cmp
and
incl
repnz
jo
push
jmp
pop
cwtl
or
mov
bound
das
out
icebp
lea
rorl
sub
xor
mov
imul
subl
or
out
cmp
cltd
push
xor
cmc
sbb
setno
in
adc
sub
insb
cmp
rcr
inc
cmp
xor
mov
jp
in
sub
repz
es
negb
outsb
repz
lcall
imul
lds
ficomps
fiaddl
in
jb
cld
sub
pop
sub
xchg
sub
in
jmp
ja
lcall
ljmp
push
fldenv
mov
fists
xchg
sahf
push
add
std
cmpsl
push
lea
pop
or
adc
repz
push
nop
sti
ret
mov
clc
add
push
jecxz
xor
iret
data16
sub
pop
inc
and
inc
fptan
je
outsl
sub
mov
shll
lods
xor
push
rorl
push
mov
or
mov
pop
pop
xor
xorb
cmp
out
rorl
stos
sub
test
jge
lahf
scas
aaa
sub
dec
dec
mov
stos
add
in
mov
stos
inc
jbe
in
incl
pop
cmp
mov
imul
jecxz
aas
js
aam
push
ds
sarb
mov
ds
out
insl
imul
and
fdiv
and
sbb
and
popf
mov
jmp
adc
dec
xchg
outsl
aam
aas
inc
pop
cmp
sub
sbb
fldcw
cmc
jns
mov
sysenter
shl
mov
insl
test
inc
cld
std
jno
push
cli
imul
repz
mov
fisubl
std
rcrl
sahf
clc
imul
in
movb
adc
repnz
iret
inc
in
or
out
in
icebp
cmp
xchg
std
inc
pop
lret
cmp
push
mov
lea
enter
out
pop
push
sub
test
xchg
ds
dec
cmp
jb
in
mov
push
cmp
jmp
xorb
pop
mov
stos
ret
scas
jae
push
cmp
adc
mov
cli
push
add
mov
repnz
pop
test
xchg
push
fmuls
loopne
xchg
out
sub
into
pop
mov
mov
outsb
mov
mov
mov
sti
out
int3
sbb
cli
inc
and
push
xchg
mov
sub
test
jbe
or
and
sbb
clc
push
int3
mov
icebp
lds
push
push
or
mov
mov
enter
data16
icebp
xchg
iret
mov
mov
mov
and
mov
cs
mov
and
outsl
xlat
inc
out
test
sub
dec
adc
out
xor
pop
pusha
and
pop
jne
jne
xor
jmp
and
gs
in
dec
inc
sbb
call
ss
cmc
outsb
pop
xchg
pushf
or
cmp
jbe
dec
ret
jo
lcall
inc
xor
lods
or
aad
testb
mov
push
leave
cmp
insb
or
ss
sbb
lret
out
jb
dec
xchg
or
and
xchg
dec
push
in
dec
jmp
xchg
dec
mov
inc
jnp
cmp
adc
or
push
or
jg
push
add
movsl
sbb
std
imul
bound
push
jle
or
js
negb
les
loope
ljmp
pop
sbb
scas
xchg
mov
and
xchg
or
sub
dec
sub
dec
inc
rolb
out
ffreep
xor
bound
add
fcmovb
mov
inc
cs
shrb
mov
xor
sub
test
inc
cmp
add
ds
les
fiaddl
mov
cmp
neg
and
pop
aas
andl
popf
sarb
lods
mov
xor
sub
stos
aam
xchg
xor
jns
pushf
dec
sub
les
or
cli
rcr
cmp
mov
lds
loopne
jmp
xor
std
xor
or
repnz
cmpsl
cmpsl
inc
clc
hlt
or
xor
inc
loopne
bswap
outsl
pushf
push
ja
and
stos
aas
inc
pop
jo
jp
jbe
insb
mov
mov
jp
stc
mov
lcall
lahf
jecxz
mov
inc
cmp
xor
fcomps
fnstenv
sub
xchg
leave
push
addr16
and
cmp
jge
jae
cmpsl
jb
fnsave
inc
pop
dec
cmp
add
rcrb
adc
sub
arpl
inc
mov
cli
xchg
ds
dec
pop
and
and
xor
popf
lcall
insb
stos
mov
scas
scas
fldenv
dec
loopne
sbb
sbb
add
clc
mov
sub
adc
xor
cltd
cmp
es
mov
xchg
fisttpl
fadd
es
fistpll
jo
or
jo
aaa
mov
mov
les
into
out
outsl
shlb
pop
mov
pushf
xor
push
daa
outsl
shufps
mov
lea
push
pop
mov
fdivp
mov
jae
mov
push
std
mov
jbe
cmp
jno
jno
pop
lods
stos
insb
sub
and
cmp
jp
xor
push
jb
ret
rcl
cmpsl
daa
lods
call
gs
jbe
pop
mov
out
mov
sahf
aas
test
mov
fbstp
imul
jns
jg
push
xchg
addr16
adc
stc
add
xchg
jp
iret
jno
mov
out
dec
adc
aas
add
dec
push
dec
nop
push
lcall
call
pusha
and
aad
fwait
dec
shrl
sbb
ss
ror
test
inc
sbb
fbld
add
call
outsl
and
push
sub
int
aad
imul
xchg
loopne
xor
repz
or
lock
mov
je
cltd
hlt
mov
test
ja
inc
dec
out
stos
jb
lret
xchg
xchg
xlat
stc
bound
or
mov
ljmp
cli
popf
fisttpl
pop
sub
ret
decb
stos
jle
xchg
arpl
sbb
sbb
mov
jecxz
add
fisubs
mov
fadds
and
and
cmc
dec
jo
xchg
nop
push
test
mov
negb
cmp
mov
dec
rclb
push
imul
lret
sahf
xor
mov
or
cmp
sbb
rcll
or
stos
aaa
adc
add
xchg
push
mov
jns
stos
fisttpll
ljmp
arpl
push
cmp
and
mov
lret
out
mov
cmp
mov
cli
ret
xchg
aaa
sbb
lret
imul
pop
mov
outsl
lcall
popa
insl
xchg
mov
mov
xchg
mov
jns
dec
cmp
fnstenv
jo
push
sti
jmp
adc
testl
cwtl
mov
and
cli
je
add
leave
jp
arpl
stc
and
inc
add
test
int3
xor
xor
jle
shlb
xchg
mov
xor
cmpsb
xchg
jb
jg
cli
push
out
jp
fldenv
jge
loop
mov
add
sahf
add
cli
roll
lock
dec
js
ljmp
mov
dec
pusha
push
inc
lds
in
subl
ljmp
ret
inc
dec
int
out
xorb
xlat
dec
lret
add
int3
mov
jmp
adc
arpl
add
enter
xchg
push
pusha
cli
and
mov
cmpsl
cmp
or
jecxz
enter
test
inc
pop
xor
sub
jmp
xchg
add
mov
adc
sarb
jb
xor
out
cs
out
sub
test
push
xchg
inc
into
fildl
pop
inc
ret
aas
fistpll
xchg
pop
outsb
js
fisubrs
popf
mov
dec
outsl
sbbb
mov
sti
pop
push
loope
subb
jmp
dec
pusha
stc
sub
test
mov
or
into
add
stos
mov
jmp
sub
negb
ss
push
hlt
cmp
jb
or
lahf
cmpsb
jne
dec
xor
imul
inc
lea
cmpsl
xlat
inc
stc
push
in
mov
mov
loopne
lods
stos
adc
repnz
addr16
call
std
sub
and
mov
inc
icebp
out
aam
cmc
push
push
xchg
add
sbb
jl
insl
ret
stos
lods
mov
mov
in
or
lea
mov
jp
push
lods
mov
inc
sarl
add
ficomps
mov
aas
scas
popf
mov
inc
mov
cwtl
in
cmp
orl
fcom
push
inc
mov
push
syscall
jmp
outsl
xchg
loope
in
insl
push
xchg
inc
adc
rcrl
in
clc
int3
out
daa
or
rcrl
je
xor
in
and
mov
cmpsb
and
pop
cmpsl
mov
adc
icebp
push
sbb
mov
inc
pushf
xor
addl
sahf
and
push
repnz
fidivl
sbb
push
xchg
sbb
xchg
or
sbbl
push
sahf
xor
sti
add
jg
lods
cmp
das
rclb
in
xor
into
icebp
data16
pushf
leave
mov
adc
fldcw
adc
sbb
lcall
cli
ret
cmpl
sub
mov
fldl
cmp
imul
inc
mov
cmp
cmpsl
jns
add
jno
incl
rcl
ss
cmp
sbb
out
dec
jmp
js
cmc
fidivl
mov
ficoms
aad
pop
adc
push
or
cmp
xchg
test
sarb
mov
or
sti
in
daa
xor
mov
push
sbb
push
cmp
mov
fdivrl
cli
dec
mov
mov
push
fucomi
insl
pop
testl
or
xchg
fs
int
add
cmc
cmp
dec
imul
push
add
sub
inc
dec
sbb
notb
test
fs
in
aad
dec
mov
mov
into
jae
adc
inc
or
jno
sahf
mov
jns
jl
cmpsl
shlb
stos
jb
adc
xor
cli
lods
shld
pop
xor
push
inc
and
std
xchg
xor
cmp
inc
mov
call
rcrb
bound
jnp
sahf
mov
test
mov
fbstp
or
jmp
sub
pop
stos
rorl
xor
push
in
jo
sbb
sbb
ja
or
imul
repnz
test
adc
xor
dec
popa
jnp
and
das
mov
cwtl
into
adc
ret
inc
and
or
popa
fs
mov
int3
std
add
sbb
aam
sub
rcrb
dec
js
inc
xor
pop
mov
addl
add
sbb
out
mov
dec
cmp
ds
xchg
insb
mov
sbb
or
adc
and
cwtl
adcb
mov
xchg
mov
cmp
mov
push
pop
into
lods
jnp
jmp
add
cmp
ljmp
arpl
outsl
cmp
enter
rcll
mov
and
dec
or
adcl
loope
pop
jo
dec
dec
jbe
movl
pop
test
add
out
xor
mov
repnz
sbb
cmc
inc
xchg
and
bsr
xchg
arpl
lods
lea
push
adc
enter
jg
test
lcall
outsb
pop
mov
test
sub
cmp
jne
inc
hlt
jnp
or
pusha
imul
shlb
cmp
adc
xchg
mov
in
call
adc
ficompl
push
pop
sub
insb
fwait
adc
pop
cmpb
movsl
jge
jle
jno
mov
mov
test
push
in
jnp
inc
popa
inc
stos
push
pop
xchg
cmp
rclb
mov
adc
pop
inc
pop
mov
cmc
lds
or
test
ss
fiadds
mov
add
inc
xor
push
aam
fisttpll
push
aad
pop
lcall
lea
cmp
or
call
or
pop
jle
dec
mov
punpckhqdq
sub
outsl
or
jle
in
xor
push
sub
stos
sbb
stos
jo
mov
xor
cmp
push
pop
cmpsb
or
or
lahf
frstor
sub
xchg
pop
repnz
in
xor
sub
jecxz
sub
sbb
sub
lret
jbe
ja
mov
aas
mov
sbb
loope
xchg
mov
and
lds
nop
jecxz
pop
cmp
stos
xlat
cltd
xlat
or
add
aam
adc
adc
dec
fwait
mov
mov
inc
sbb
mov
adc
les
out
push
jo
adc
lock
mov
cmp
ja
cmpsl
cli
adc
hlt
call
jmp
and
loop
push
push
inc
in
int3
ss
lods
pop
add
aaa
in
xor
shlb
lock
mov
sub
mov
loope
int
sbb
push
je
push
inc
adc
sub
mov
mov
loop
xor
jg
sbb
das
lock
sti
mov
out
jo
loop
and
nop
outsl
jnp
fadds
xchg
movsl
add
test
xor
xor
xchg
push
sub
adc
xchg
jns
inc
or
inc
inc
push
sub
adc
stos
addb
pop
add
jge
pop
push
repnz
pop
mov
mov
jmp
test
call
lods
pop
mov
mov
nop
and
mov
ljmp
arpl
cmp
test
push
inc
mov
aaa
mov
push
jbe
lods
outsb
inc
pop
xchg
pop
adc
cmpsl
cmpb
or
js
bound
jmp
in
clc
adc
xorb
mov
das
mov
cmpsl
jae
sub
inc
jb
jl
test
dec
xchg
mov
cwtl
or
xchg
imul
sub
sbb
ja
lods
sbb
addl
mov
adc
push
jl
ds
insb
mov
push
js
jecxz
jnp
pop
test
cmp
sbb
jns
push
push
or
faddp
fdivrs
nop
cmp
testl
cltd
in
mov
xchg
mov
mov
es
cs
mov
popa
mov
fimull
data16
daa
xchg
mov
das
pop
rcl
fstpl
xchg
push
frstor
pushf
sarb
addl
scas
push
dec
pop
adc
ja
aam
cmp
xor
rcrl
xchg
push
or
out
ret
subl
sahf
mov
add
cmc
push
dec
cmp
cmc
jb
out
sbb
aas
mov
jmp
dec
aaa
sbb
lea
imul
in
pop
outsb
fs
cld
pop
call
adc
fcos
pop
jns
fidivs
leave
mov
addb
iret
pop
mov
xlat
cmp
fnstsw
push
out
mov
rcll
es
xchg
push
pop
call
std
loope
movl
mov
xor
pop
dec
xchg
or
push
orl
jae
add
test
clc
jns
loopne
mov
mov
cmpsb
mov
ret
xchg
xor
scas
jl
xlat
lahf
jns
add
sbb
jecxz
mov
mov
xor
cmpb
es
outsb
xor
and
sub
push
or
cmp
out
imul
pushl
shll
lret
cs
sub
push
add
xchg
clc
test
push
adc
jmp
sbb
pop
inc
cmp
jae
imul
fnsave
jp
push
xchg
imul
shr
shrb
in
lahf
repz
cmpsl
add
insl
and
mov
cli
mov
add
push
xchg
mov
out
add
stc
ljmp
or
cmp
decl
lods
repz
sahf
in
es
pop
scas
mov
andl
jo
mov
das
mov
in
stos
and
cmp
or
imul
scas
repnz
out
sub
pop
enter
inc
push
cmp
lcall
jmp
xchg
pop
and
mov
loopne
add
cmpsb
cmp
xchg
pop
rcl
bound
cmc
cmpl
fimuls
inc
aas
decl
pop
addr16
sbb
xor
in
add
dec
test
gs
dec
push
lds
sub
jg
call
addb
lods
mov
dec
jb
in
inc
jl
xlat
adc
and
testb
fdivl
rolb
js
mov
mov
data16
ja
movsl
push
mov
cmpb
mov
push
dec
mov
pop
lret
outsb
or
cmp
mov
sbb
mov
movsl
push
adc
in
push
cmp
xchg
sbb
repz
mov
push
ficompl
jns
imul
popf
test
in
and
push
lret
mov
xchg
stc
sub
cld
lcall
xor
jnp
jo
into
mov
inc
out
add
insb
push
cmpb
les
dec
push
dec
ret
lock
testl
mov
pushf
mov
addb
test
sbbl
mov
sar
data16
xor
insb
mov
imul
pop
out
mov
lret
decb
xchg
mov
fstpt
mov
aam
push
das
dec
xchg
out
mov
mov
lret
inc
jecxz
icebp
clc
sub
repz
and
aaa
rcr
adc
pop
cmp
push
in
add
int
inc
or
jae,pn
std
and
scas
int3
sbb
aad
lods
lahf
bound
mov
push
and
and
enter
xchg
jmp
xlat
sub
arpl
push
stc
rorb
int
jl
repnz
mov
adc
pop
sbb
test
and
xor
cmpsb
xor
or
clc
mov
mov
add
rcrl
sbb
jbe
xorl
repnz
iret
mov
mov
mov
popa
fxch
add
push
mov
shlb
sbb
fidivs
pop
xchg
roll
repnz
repz
cmp
or
xchg
std
jle
mov
xor
fiadds
clc
fisttpll
mov
xchg
xor
fwait
inc
jmp
jae
notb
in
jge
sub
jnp
and
popa
jmp
mov
scas
dec
out
and
mov
out
push
jnp
stos
pop
insb
decb
xchg
push
cmpsl
nop
rolb
inc
out
das
add
fcompl
dec
test
mov
lahf
dec
push
jl
lods
loop
pop
lods
fistl
repz
adc
xchg
lcall
test
das
bound
adc
jle,pn
cli
div
cmp
aam
fcomip
andb
or
xor
lret
xchg
lret
call
inc
call
sahf
popa
aas
cmp
stos
inc
push
cld
jne
or
mov
pusha
pop
jno
sub
mov
xchg
push
mov
xchg
mov
inc
dec
jmp
cmp
insl
incb
push
pop
sub
inc
xor
es
jno
test
pop
push
add
add
sbb
lods
icebp
dec
mov
pusha
push
sub
or
fnstsw
fisubs
ja
rclb
pop
pop
dec
mov
jnp
scas
xor
xchg
xor
lcall
in
sub
inc
cmpsl
loopne
adc
push
jbe
sbb
fsubl
loope
fsubs
call
xor
jae
add
xor
testb
pop
xchg
addr16
sub
sub
leave
lds
fwait
int
imul
or
sahf
jnp
insb
cmp
pop
ss
push
dec
jp
lret
aam
lea
and
testb
fs
adc
mov
adc
pop
sti
cmpl
popa
hlt
add
cltd
shr
xor
pop
aam
fwait
loop
xor
mov
lock
imul
aas
cli
add
xchg
loope
adc
mov
jne
stos
mov
fldenv
dec
insl
out
dec
fbstp
imul
cmpsb
repz
stos
dec
sbb
js
nop
fldenv
lcall
outsb
fwait
lret
adc
lret
xchg
adc
jnp
sbb
mov
mov
xor
mov
add
and
cs
popf
mov
nop
xchg
cmp
jne
push
pop
xchg
push
cld
jo
shll
nop
cmp
and
xchg
ljmp
mov
pop
frstor
pop
ja
push
popf
enter
out
jp
inc
adc
jl
std
mov
ss
mov
push
test
repz
pop
mov
dec
lret
shll
pop
mov
xor
hlt
xor
mov
pop
xor
push
in
shl
cmpsl
pop
pop
sbb
and
jnp
and
jno
mov
ja
les
sarl
inc
popa
push
and
loope
fwait
ja
mov
pop
int
ds
mov
xor
xor
imul
bound
dec
jbe
aad
xor
cmp
jnp
add
movsb
loopne
ds
add
xor
pop
insb
sbb
ss
daa
add
or
push
mov
movsl
sub
lcall
sub
mov
lcall
scas
int3
add
icebp
push
lret
jo
dec
pop
leave
popf
pop
xlat
outsb
sbb
ss
sbb
xor
test
insb
in
cmc
pop
mov
lahf
mov
pushf
fwait
and
mov
mov
cs
xchg
add
and
aas
shrb
inc
jge
in
pusha
lods
in
sub
dec
adc
cmc
sti
shr
in
fimull
mov
cmp
je
cmp
add
loopne
out
mov
je
or
inc
push
push
scas
stc
inc
les
ffree
xchg
inc
dec
add
pop
jo
test
fnstenv
add
inc
cmc
daa
mov
jnp
mov
int3
js
rcrb
push
push
pushl
fldl
cmp
fcomip
mov
lret
mov
pop
lock
push
xor
inc
adc
xor
decb
mov
push
or
je
test
mov
incb
xor
scas
jp
orb
cmp
andl
loop
sub
scas
jecxz
cli
shlb
gs
dec
in
pusha
sbb
ja
negl
popf
add
es
sbb
and
mov
int3
dec
mov
es
inc
pop
jp
mov
stos
es
pop
inc
mov
jge
cmp
sub
cmpl
mov
pop
in
inc
pop
adc
inc
mov
mov
mov
mov
add
popf
inc
out
mov
jg
scas
xchg
addr16
dec
xchg
clc
mov
movhps
push
sbb
gs
or
dec
js
call
mov
iret
pop
or
dec
mov
gs
jecxz
jo
push
pop
jbe
in
pop
jbe
mov
jne
mov
movl
in
push
popa
mov
inc
jbe
push
jno
mov
pop
sbb
add
lds
add
in
ja
add
ljmp
rcrb
scas
push
jne
das
dec
mov
sbb
mov
mov
ret
dec
cwtl
aas
dec
mov
shlb
mov
inc
jmp
mov
sub
arpl
roll
dec
or
daa
out
lods
xchg
sbb
mov
loope
and
or
cmp
dec
hlt
ds
mov
into
push
xorl
xor
or
enter
mov
das
mov
sbb
adc
xor
rcr
jo
adc
push
jge
inc
jnp
mov
je
int3
pop
aas
sbb
mov
mov
adc
cmp
fistpl
xchg
mov
sbb
mov
jo
add
cmpsb
adc
mov
stos
xor
clc
mov
jae
imul
jns
adc
and
xchg
push
ja
adc
jnp
lahf
pop
xchg
cltd
adc
gs
jae
insb
jmp
dec
test
dec
sbb
leave
push
aaa
pop
cmp
in
add
sahf
out
into
adc
roll
pop
push
in
nop
mov
push
iret
enter
inc
std
pusha
mov
mov
pushf
pop
add
xchg
xor
sarb
adc
shrl
cmp
push
or
insl
nop
and
shrl
inc
dec
mov
push
dec
jmp
hlt
cmp
fwait
cmp
scas
inc
dec
mov
into
js
test
mov
push
push
mov
out
mov
dec
rclb
pushf
outsl
jl
cmp
insl
test
adc
bound
push
sub
push
rolb
sbb
xchg
pop
cltd
daa
lock
pop
mov
xchg
fisubrl
push
pop
sbb
pop
and
notl
ss
in
push
enter
sti
rcrb
data16
fidivrl
mov
das
jmp
std
adc
push
xchg
cli
in
mov
scas
mov
rcrl
shl
insb
xorl
adc
shrb
cmp
xor
lret
xchg
mov
pop
jno
and
xor
mov
cmp
xor
sub
pop
pop
or
push
xor
loopne,pt
scas
and
les
insl
std
dec
xor
aam
lcall
in
mov
xor
ljmp
std
std
rcll
test
pcmpeqb
iret
and
pop
jno
fistl
movsl
lret
int
daa
jge
dec
aam
pop
cmpsb
adc
cmpsb
lock
or
mov
insl
rorl
jecxz
ss
out
xchg
pop
mov
jbe
loopne
or
outsl
pop
mov
cwtl
clc
and
sub
fsubl
in
jns
push
shl
test
test
or
inc
push
xor
mov
inc
jge
popa
shrb
xor
ret
dec
xchg
je
gs
push
cltd
cmp
nop
xchg
icebp
add
dec
stos
push
repz
mov
jns
cmpsb
push
fxtract
pop
shrl
adc
sbb
movsl
pop
fnsave
push
data16
pop
pushf
loope
sti
repnz
mov
dec
push
push
mov
in
push
enter
nop
sbb
call
xchg
les
and
dec
dec
cld
pop
push
jns
mov
adc
jmp
scas
lahf
pushf
inc
xchg
pop
test
jo
int
call
popa
adc
das
test
cmp
jne
icebp
into
adc
add
loopne
add
insl
jecxz
loopne
or
dec
test
stos
test
leave
push
clc
lahf
shrb
decl
add
add
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
orl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
mov
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
nop
xor
inc
nop
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
nop
nop
nop
nop
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
