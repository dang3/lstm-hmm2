push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
lea
push
call
movzbl
cmp
je
xor
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
mov
pusha
call
movl
movl
call
test
je
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
popa
mov
mov
mov
mov
push
mov
mov
mov
mov
sub
mov
movl
add
ret
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
shr
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
lea
push
call
movl
jmp
mov
add
mov
mov
cmp
jge
cmpl
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
mov
add
mov
add
mov
mov
cmpl
jne
mov
mov
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
jmp
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
mov
lea
mov
mov
mov
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
je
xor
jmp
mov
sub
mov
mov
pop
ret
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
push
mov
push
call
add
sar
cmp
jne
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
mov
mov
mov
push
mov
push
call
push
call
mov
mov
mov
mov
lea
push
push
push
mov
push
push
call
test
jne
mov
jmp
jmp
call
xor
jmp
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
je
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
push
lea
push
call
mov
push
mov
push
mov
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
movl
movl
movl
mov
mov
mov
add
mov
mov
jmp
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
mov
mov
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
xor
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
mov
add
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
push
mov
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
mov
add
mov
movl
mov
add
mov
movl
movl
mov
mov
add
mov
mov
movl
mov
mov
mov
mov
movl
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
push
inc
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
add
inc
inc
add
inc
inc
add
inc
add
inc
add
add
add
add
inc
add
inc
add
inc
add
inc
inc
add
add
add
inc
add
inc
add
inc
add
add
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
add
add
inc
inc
add
add
add
inc
add
add
inc
add
inc
add
add
inc
inc
add
inc
add
inc
inc
add
add
inc
add
inc
add
inc
inc
add
add
inc
add
inc
inc
add
inc
add
inc
add
inc
inc
add
add
add
add
inc
add
add
inc
add
add
add
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
inc
add
inc
add
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
add
add
inc
add
add
inc
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
add
add
inc
add
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
dec
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
dec
inc
add
inc
inc
add
inc
add
inc
add
inc
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
inc
add
inc
add
inc
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
inc
add
add
inc
inc
add
inc
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
inc
add
add
inc
add
add
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
inc
add
add
inc
add
add
dec
inc
add
inc
add
inc
add
add
add
bound
add
bound
add
xchg
xor
push
cmpsb
xor
add
add
arpl
add
lea
pop
pop
scas
cmp
leave
pop
out
cmp
sub
push
ds
fstpt
xchg
pop
push
add
adc
add
push
lret
xor
add
repnz
and
cltd
push
lds
sub
out
xor
stc
xor
add
add
push
adc
adc
xor
push
cmp
mov
pop
xor
push
shll
push
lea
jb
mov
xor
push
in
xor
push
daa
xor
push
push
xor
push
gs
push
test
push
xchg
xor
push
cwtl
xor
push
mov
xor
push
loope
test
push
dec
xor
adc
xor
mov
push
in
xor
adcl
push
or
add
adc
ss
push
dec
ss
push
outsb
ss
adcb
push
lret
push
fidivl
icebp
push
sub
aaa
mov
push
ja
jle
xorb
push
fwait
aaa
xchg
push
mov
mov
push
jecxz
mull
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
ja
add
sbb
mov
or
je
adc
add
or
sub
fs
adc
dec
and
add
or
sub
fs
adc
das
xor
add
push
jb
or
jae
sbb
outsb
adc
arpl
bound
add
arpl
add
inc
add
jb
add
mull
add
add
add
or
outsl
rorb
imul
bound
add
push
jae
xchg
sub
fwait
push
arpl
bound
add
pusha
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
inc
add
popa
inc
add
push
jb
and
pop
je
and
push
add
cmp
fs
adc
jmp
push
add
add
xor
insb
mull
add
pshufw
sub
push
add
add
push
add
push
sub
push
add
sbb
add
add
arpl
imul
or
je
add
inc
arpl
imul
or
inc
xor
sub
pusha
inc
push
pop
arpl
dec
or
je
add
push
add
clts
add
add
ss
push
aam
push
add
pushl
fiaddl
xor
insb
mull
add
or
les
push
add
bound
idivl
add
add
cwtl
std
add
push
add
add
dec
add
testl
add
add
mov
add
mov
add
or
add
sbbl
ret
add
and
jno
pop
sahf
insb
addr16
outsb
and
stos
outsl
outsb
shlb
jo
loope
imul
dec
push
pop
lahf
insb
rcrb
lret
add
out
add
add
add
bound
add
bound
add
out
add
bound
add
hlt
add
push
out
sbb
out
push
mull
add
bound
pop
mulb
adc
out
xor
out
add
arpl
adc
out
add
mull
add
jmp
mull
add
out
xchg
mulb
add
cmc
in
add
out
add
add
add
arpl
adc
out
add
out
adc
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
shll
jns
bound
jmp
hlt
bound
add
push
add
push
add
push
add
arpl
add
arpl
arpl
add
pop
add
jae
add
jnp
add
pop
push
add
arpl
add
bound
add
bound
add
pop
push
pusha
lock
popa
sub
push
add
popa
push
add
push
pop
add
pusha
push
add
bound
add
bound
add
pop
push
inc
mov
pop
push
add
sub
add
pop
add
push
add
pop
add
mov
add
mov
add
mov
add
mov
add
mov
cmpsl
shrl
out
add
add
push
or
call
scas
leave
push
add
out
push
das
and
adc
mov
jb
enter
test
or
jne
hlt
push
or
add
xorl
adc
adc
add
jne
bound
pop
popf
mov
add
mov
or
test
cmp
add
add
xchg
mov
test
ss
mov
or
sub
cmpsl
cmp
sti
test
divl
pop
testl
xor
je
out
out
mov
fwait
aas
push
xchg
cmp
rorb
testb
push
or
and
mov
call
aas
pop
pop
cmpsl
incl
lcall
jg
push
jmp
hlt
push
jmp
insl
jno
lods
dec
xor
push
cli
inc
lcall
sub
push
inc
jne
stc
es
out
icebp
insl
jno
jmp
add
cmpsl
outsb
pop
bound
add
pop
loope
mov
push
xchg
hlt
bound
jmp
xor
ljmp
pop
pop
sub
add
add
lcall
add
mov
xchg
into
ret
lea
ljmp
inc
outsl
stc
jne
mov
test
pop
adc
inc
push
add
mov
mov
sub
add
mov
ljmp
pop
xchg
adc
jb
mov
push
je
add
add
jecxz
or
add
sub
test
data16
jbe
push
add
lea
iret
inc
cld
mov
add
add
or
inc
subl
jns
jne
sbb
jb
jl
or
push
leave
xor
aaa
add
pop
cs
insb
icebp
add
arpl
adc
jnp
pop
cs
stos
add
xorl
in
pop
push
out
or
add
push
xor
add
out
lret
add
outsb
inc
testb
mov
add
sub
inc
sti
out
adc
bound
popl
cli
out
ja
add
pop
scas
jns
xchg
repnz
dec
popa
pop
add
cmp
add
xor
mov
aas
addl
sbb
repz
stos
jmp
pop
arpl
mov
out
stos
mulb
add
movsb
testl
dec
sti
push
push
aaa
arpl
jne
mov
out
repnz
pop
xchg
lret
mov
insb
jg
dec
pop
lret
push
cmp
mov
add
push
xchg
push
sbb
jle
movsl
pop
xor
cmp
jmp
gs
jae
jne
cs
bound
push
or
scas
pop
out
cmpsb
daa
nop
stc
bound
push
cli
push
or
push
icebp
inc
movsl
push
jmp
cmp
sbb
jnp
mov
jae
lods
enter
cltd
in
add
add
xor
push
adc
inc
push
jne
int3
les
mov
or
jmp
loope
arpl
daa
add
push
add
push
ljmp
sub
push
ljmp
mov
ret
mov
popl
pop
jg
enter
rcl
push
add
ljmp
sub
push
incl
add
add
loope
icebp
xchg
stc
mov
push
push
vmwrite
add
idivl
push
mov
stc
sar
push
push
push
push
inc
incl
jo
jb
call
mov
je
lods
mov
sub
rol
or
outsb
jnp
insb
ja
sbbl
stc
decl
stc
dec
sbb
cmp
add
aaa
xlat
cli
mov
stos
into
add
jnp
add
pop
add
idiv
incb
pop
test
cwtl
add
jmp
jp
repz
lea
arpl
push
rclb
call
pop
out
sub
mov
mov
les
lods
add
fldcw
lock
xchg
dec
out
mov
add
pushf
lods
add
aaa
je
jbe
imul
pusha
lea
cmp
out
pop
idiv
in
pop
idiv
jmp
mull
ret
cmp
repz
jl
add
xor
sub
jp
in
adc
out
add
fnstenv
dec
out
xor
jmp
leave
mov
dec
pop
stc
cmp
fistpll
hlt
adc
stc
cmp
fiadds
sbb
add
add
mov
cmpsb
int3
jb
lods
into
stc
sbb
jnp
jg
bound
icebp
hlt
xor
outsb
fistps
mov
stc
jo
mov
lods
push
arpl
jmp
dec
enter
fcoms
popf
jo
jmp
and
push
jg
stc
mov
out
push
mov
loopne
clc
adc
incb
into
pop
push
and
lea
or
lahf
jle
cld
imul
clc
push
ret
clc
inc
mov
ljmp
jge
or
mov
in
hlt
pop
mov
das
stc
jne
cmpsl
sbb
test
pop
push
mov
loope
or
adc
subl
je
jle
adc
add
add
adc
jmp
loope
divl
ljmp
aaa
push
add
out
bound
fdivrs
jge
jnp
adc
daa
push
add
ljmp
inc
cli
out
leave
ljmp
add
add
or
fadds
mul
pop
sub
insb
jmp
sti
or
dec
dec
ljmp
jle
dec
scas
std
out
xor
jmp
roll
iret
std
out
push
ljmp
bound
push
or
stos
ljmp
sub
in
jle
jae
in
bound
rorb
jmp
sub
ret
xchg
jp
out
test
adc
repz
call
push
arpl
cld
cwtl
bound
call
hlt
mov
pusha
movntq
out
and
arpl
insb
jbe
rolb
out
mull
add
cmp
push
loope
inc
call
mov
sbb
call
or
inc
adc
push
cli
adc
ja
jmp
int
cltd
xor
pop
mulb
jo
stc
pop
iret
jnp
mov
stos
sbb
lea
into
mov
xor
sbb
adcb
mov
dec
in
jns
push
bnd
mov
push
outsb
pop
out
sub
arpl
fs
dec
push
pop
out
jne
mov
add
jl
jb
fildll
sbb
cld
out
jmp
je
jge
clc
scas
and
push
add
lret
icebp
rclb
repnz
out
addr16
jmp
jp
or
gs
leave
pop
bound
jmp
data16
leave
dec
bound
push
and
loope
push
jns
lret
mov
add
mov
cs
jne
stos
cld
sti
loope
test
pop
jb
inc
lret
cmp
mov
mull
sub
add
add
xor
sub
push
rolb
jp
je
ljmp
xchg
fstpl
or
test
xchg
fucomp
filds
out
jne
fs
idivl
mov
jmp
push
or
jnp
jne
mov
jmp
jnp
jne
mov
mov
mov
mov
push
incl
add
add
xchg
dec
jl
test
movsl
jge
mull
add
neg
pop
mov
jle
push
call
or
out
cld
pop
push
imul
xchg
and
jnp
add
bound
pop
out
add
lahf
fisttpl
pop
add
dec
popl
push
mov
jb
push
lahf
repnz
add
fldt
fmull
add
add
out
xchg
xchg
pop
hlt
arpl
xorb
adc
pop
dec
xchg
add
test
sti
push
int3
push
jae
test
inc
dec
test
test
sbb
sti
push
sbb
dec
cmpsb
mov
mov
adc
xchg
pushf
cld
jl
sbb
test
add
bound
jmp
loopne
stc
jmp
push
add
mov
out
mov
push
cmp
ja
dec
stos
test
cltd
push
push
shrl
mov
push
jb
fadds
mul
push
jmp
dec
lahf
in
add
iret
ret
push
mov
cli
mov
mov
orl
sub
nop
lods
pop
popf
jle
repz
push
mov
add
add
std
mov
mov
addb
sbb
stc
push
lods
push
push
adc
cld
push
dec
push
sub
or
lods
pusha
cmc
cmpsb
add
sbb
stc
push
and
adc
push
ss
pop
add
out
stc
lcall
jnp
divl
sub
add
idivl
adc
add
loop
add
mov
jg
repz
divl
sub
cmp
loop
mov
jns
incb
add
jge
das
mov
cmpb
adc
cmp
xchg
xor
mov
leave
loope
imul
mov
add
les
pop
cli
pop
jge
jge
stos
push
inc
add
out
mov
mov
add
bound
add
add
test
out
jg
lods
mov
fsubrs
pop
arpl
call
jge
mov
stos
xor
mov
ja
out
jno
ds
mov
outsl
push
pop
jp
sub
sub
xor
xor
incl
add
or
mov
not
push
xlat
jbe
sti
in
cmpl
inc
sbbb
test
adc
out
add
addl
mov
orl
jmp
aam
inc
jns
div
xchg
fldl
outsb
sahf
jbe
fcompl
jae
and
clc
push
adc
jae
adc
jmp
sbb
out
jmp
lock
adcl
cmp
push
aam
jae
aam
std
je
xchg
clc
aad
out
not
cmp
pop
imul
fwait
cmp
add
dec
and
arpl
push
repz
or
jae
inc
sbb
dec
outsb
out
stos
push
test
and
test
jbe
sti
pushl
jae
xchg
icebp
call
lock
cmpsb
push
add
out
ljmp
js
rorb
add
fs
add
addr16
test
add
xchg
or
push
add
arpl
add
arpl
arpl
cli
push
insb
or
stc
jne
mov
negl
ja
cmp
inc
hlt
daa
adc
incl
lcall
testl
push
inc
je
fiadds
loop
cmpb
push
cmp
inc
cmpsl
loope
std
cmp
mov
add
push
shlb
adc
mov
add
cld
dec
pop
or
inc
sub
fcoml
lds
push
clc
push
push
sbb
testl
cld
div
lock
pop
das
xor
clc
repnz
push
rclb
add
add
or
inc
mov
sbbb
cmp
mulb
sub
mov
cmp
cs
sub
insl
idivl
testl
pusha
push
decl
lds
arpl
insb
xchg
push
in
insb
out
add
xchg
inc
push
repz
adc
and
pop
addl
mov
arpl
ret
dec
cltd
sub
jl
push
sahf
jae
push
testb
push
repnz
mov
and
sti
bound
jb
out
pusha
cmp
stos
xor
iret
stos
pop
arpl
adc
bound
cmp
push
cmp
and
push
outsb
push
hlt
icebp
movsl
inc
cmc
push
sub
dec
testl
mov
repz
add
stc
jb
jl
icebp
and
stc
xchg
call
test
add
pop
leave
or
push
push
push
jae
sbbl
push
jne
movsl
inc
or
add
add
arpl
inc
lcall
or
jmp
out
mov
pusha
push
add
cltd
stc
inc
mov
jne
xor
mov
jo
push
call
push
call
popl
push
mov
push
popf
jae
cmpsb
int3
std
dec
call
push
add
pushf
push
push
mull
sti
shlb
lret
or
repz
add
push
mov
out
testl
outsl
add
mov
jne
mov
ret
inc
jae
add
dec
mov
out
sub
ljmp
sbb
sti
jle
imul
xchg
inc
dec
mov
fidivl
bsr
lcall
add
cli
repnz
cld
sbb
xchg
sti
or
add
arpl
lret
out
ss
xchg
dec
pusha
outsl
sbb
out
hlt
fwait
mull
add
sub
imul
add
add
add
add
or
imul
arpl
add
sub
insb
fwait
add
xor
jecxz
pop
lret
idivl
xor
xor
xchg
insl
scas
push
cli
loop
add
imul
mull
lret
out
fsubrl
arpl
orb
mov
add
imul
sub
pop
mov
xor
add
add
xchg
xchg
hlt
jns
icebp
int3
into
jecxz
hlt
insl
jne
adc
sub
fidivs
cli
xor
jns
int
out
or
jmp
popf
out
stc
rcl
stc
cmpsb
sbb
cli
mov
addb
mov
sbb
insb
jmp
lcall
jmp
je
jae
sbb
loop
push
popl
dec
sub
push
xor
push
mov
fs
add
add
push
out
daa
sti
pop
push
or
adc
mov
fs
add
call
pop
and
or
and
int
out
mov
jge
mov
pop
roll
popf
stc
incl
ret
loop
pop
movsl
add
sub
repz
sahf
push
add
ljmp
push
fnsave
push
or
pop
flds
idivl
push
add
mov
adc
pop
add
xor
add
mov
in
jbe
in
enter
je
pusha
dec
mov
arpl
dec
add
jbe
mov
bound
mov
add
mov
add
xor
dec
inc
not
arpl
pusha
fadd
add
testl
xor
mov
fdivrp
cmp
out
sub
xor
rcrl
in
xlat
cmpsl
or
dec
mov
xlat
add
xchg
jge
add
mov
out
add
jbe
add
bound
jg
xchg
flds
add
add
out
add
test
sbb
loopne
call
jb
rcr
adc
mov
lock
add
mov
out
add
mov
add
mov
xchg
jbe
or
data16
mull
jmp
inc
xchg
data16
out
lcall
xorb
bound
jo
sub
pop
call
stc
cltd
pop
dec
test
jne
or
jne
cmp
std
push
lahf
imul
jmp
fcompl
fiadds
adc
xchg
mov
cmp
mov
pop
jne
sbb
lds
sti
jne
mov
stc
add
bound
imul
or
mov
jbe
stc
lcall
daa
cmp
cld
test
outsl
in
push
xor
lcall
mov
cmp
pushl
mov
push
jmp
mov
fcmovnb
stc
call
cmc
mov
fiadds
inc
push
sbb
cli
out
mov
jl
cmp
out
jmp
mov
jg
jns
fdiv
test
loopne
inc
rorl
jne
loop
jecxz
mov
and
aad
sbb
shrb
and
in
adc
sar
addb
out
call
pop
loopne
fcoms
jecxz
mov
mov
dec
sar
iret
in
pushl
test
incl
add
add
jecxz
cwtl
xchg
push
arpl
dec
add
dec
movsl
jecxz
js
dec
loop
mov
shl
mov
pop
out
mov
add
inc
imull
aad
jle
aad
mov
jg
subl
jae
call
int
out
add
xlat
dec
add
push
or
jb
mov
cmp
loopne
pop
in
enter
or
aad
or
loopne
jb
jmp
test
add
mov
xlat
in
jb
sarl
dec
ss
lahf
cmpb
mov
arpl
jmp
dec
jb
or
stc
sahf
cmpl
jg
jb
daa
sub
push
jb
std
or
outsb
outsl
xchg
stc
sbb
sbb
jnp
stc
fdivr
loope
in
pop
mov
iret
sub
jno
shl
ret
stos
inc
and
bound
jmp
cmp
xchg
clc
jno
icebp
dec
arpl
cld
into
jno
pusha
jmp
daa
cli
jmp
out
dec
sub
jge
bound
outsl
cmp
or
gs
jmp
lock
xchg
or
xor
push
jne
add
add
jae
jbe
stc
pushl
inc
clc
adc
lea
lds
mov
mov
mulb
cltd
roll
fs
add
sub
push
xchg
jae
out
jmp
out
std
ljmp
loope
out
pushw
xor
jo
mov
cmp
sub
cmp
enter
push
idivl
fisubrl
jp
or
ss
mov
add
push
dec
sub
add
je
je
mov
iret
pop
notl
test
jp
subl
pop
add
mov
leave
xor
es
add
cmc
push
leave
ffree
loop
aam
cmp
aam
jmp
pop
cld
rcl
std
out
dec
aam
rcl
incb
add
add
aam
mov
mov
jne
popa
mov
cwtl
loopne
mov
out
ss
cmp
nop
leave
iret
add
shl
ret
loop
adc
pop
fsubl
cld
sbb
je
cmc
loop
aaa
outsb
push
sarl
outsl
xorb
test
sti
ljmp
out
cld
push
cmc
fbstp
lods
adc
out
bound
je
jmp
leave
stos
out
add
bound
cld
fadds
sahf
cmp
arpl
fldt
or
dec
lods
mov
idiv
push
ds
add
outsb
stc
out
cmp
dec
sub
cli
insl
xor
out
push
cmpsb
outsb
stc
inc
mov
xchg
dec
sub
jp
mov
outsb
outsb
inc
sbb
adc
sbb
jmp
daa
sti
data16
push
xchg
call
lahf
dec
sub
cli
es
out
sbb
outsb
stc
roll
jmp
hlt
jp
ds
insl
lds
pop
popf
stc
loop
jmp
hlt
bound
and
mov
pop
push
pop
pop
je
loope
das
and
add
fildl
add
data16
in
iret
ret
push
mov
add
add
xor
or
popl
stc
call
sahf
fsubs
in
add
pop
xchg
add
repz
or
push
dec
stos
xchg
scas
jae
mov
les
into
xor
shlb
add
aam
lods
mov
clc
mov
ljmp
je
or
and
inc
lret
dec
jb
in
push
or
hlt
leave
inc
cmp
or
and
jg
insl
inc
nop
hlt
test
dec
or
push
jb
repnz
inc
add
ret
ret
xchg
shrl
ret
mov
mov
sub
scas
jl
movsb
mov
cld
jl
std
jl
cmc
insb
stc
and
in
bound
lock
into
rcl
mov
lahf
pop
pop
inc
xchg
push
sub
fildll
pop
xchg
push
pop
addr16
je
lahf
jg
and
cmpsb
ret
xor
loope
loopne
imul
pop
adc
mov
mov
inc
idivl
lods
mull
ret
stos
inc
adcb
repnz
cmc
out
mov
test
add
add
out
clc
inc
cmc
in
inc
clc
hlt
dec
fcoml
out
add
call
jmp
shrl
sub
pop
jmp
repz
jmp
cmc
bound
out
les
jmp
jno
clc
fidivs
arpl
pop
jns
clc
cmp
out
sub
push
loop
lock
sbb
leave
fcomip
lahf
xor
subl
mov
or
pop
mov
stc
les
push
xor
insb
sbb
dec
dec
arpl
or
into
or
shlb
ljmp
pushw
mov
xchg
jae
icebp
adc
ljmp
sahf
out
div
xchg
stc
mov
xchg
jae
cmpsb
sub
add
add
add
popf
stc
call
mov
popf
out
imul
push
mov
ret
popf
stc
push
jno
or
sub
lret
push
decl
dec
inc
push
lea
popf
or
jns
sub
out
xchg
loope
int
dec
jbe
add
and
mov
idivl
add
add
add
jns
pshufw
div
inc
cld
inc
bound
nop
jns
test
xchg
cmp
js
clc
mov
mov
cltd
iret
lcall
fimull
ret
call
dec
or
out
sub
int3
push
mulps
lcall
dec
int
adc
and
in
mov
push
fisttpl
add
add
inc
xchg
out
dec
xor
push
inc
add
dec
add
in
sub
negl
dec
fsts
clc
dec
lahf
jp
aam
fs
das
push
xlat
mov
addr16
ljmp
jl
push
mov
fcmovnu
jno
leave
dec
in
mov
leave
insb
mov
out
jl,pn
sbb
add
add
jnp
out
xchg
pop
pop
popa
negb
xchg
sti
in
repnz
sbb
jmp
push
jb
jnp
or
aam
cmp
inc
mov
icebp
pushf
imul
hlt
loope
jmp
cld
gs
out
shrl
cmp
imul
pop
shrb
jns
shrb
add
add
push
bound
loop
lds
loop
pop
add
jmp
sbbl
push
add
pop
push
jne
inc
pop
push
mov
roll
push
add
in
inc
clc
scas
lcall
pop
daa
inc
add
mov
fldl
into
out
lea
das
stc
adc
movsl
mov
loop
sahf
popa
push
incl
lcall
or
or
stc
jae
movsb
inc
lock
popa
push
add
rolb
push
add
push
push
or
lea
adcl
jnp
jne
aam
mov
cmp
or
outsl
add
outsb
leave
add
adc
jnp
ret
dec
inc
les
imull
std
out
inc
add
aaa
lret
xor
std
dec
iret
outsb
lods
add
mov
ret
mov
stc
dec
or
out
sub
jns
fisttpl
jns
add
ljmp
ss
add
mov
xchg
int
fs
cli
push
stc
out
pop
mull
movsb
arpl
testl
add
add
clc
out
fucomi
xchg
add
mov
xchg
loopne
adc
insb
lahf
movsb
mov
jl
in
neg
jo
sbb
mov
fdivr
andl
fistpll
nop
out
call
sti
cmp
les
push
fmuls
jp
test
jmp
sahf
push
jmp
xor
push
in
add
scas
cmp
jb
add
add
push
inc
cmp
call
adc
adc
cld
sbb
cltd
mov
arpl
xor
jbe
mov
hlt
xlat
lar
and
or
fs
sub
ret
mov
push
jb
outsb
lea
leave
out
je
ss
loop
mov
push
sub
movsb
je
je
inc
pop
imul
sub
or
inc
dec
jns
mov
shlb
cmp
mov
inc
es
pop
loopne
les
push
push
jb
push
ja
jp
jmp
push
jb
push
ja
jp
add
cmp
cmp
mov
cmp
scas
add
popa
por
jp
pop
popa
xchg
ret
loopne
pop
lds
pushf
pop
fdivl
out
push
add
sbb
or
mov
jb
sub
mov
div
mov
add
sbb
xlat
inc
pop
lds
and
jecxz
ret
mov
testl
aas
not
xor
xor
cmpl
and
dec
inc
testl
dec
ss
add
pop
scas
jmp
add
pop
cld
inc
in
push
cwtl
aas
cmpsb
dec
ss
or
clc
int
add
dec
int3
inc
jg
out
add
bound
outsl
mov
add
bound
pop
ret
ret
xor
imull
cmp
dec
icebp
fdiv
bound
aad
xchg
pop
adc
add
add
add
add
dec
xchg
ret
and
add
ja
adcb
lock
ret
movsb
inc
imull
aaa
or
test
dec
mov
ret
movsb
inc
imull
aaa
or
arpl
cmp
hlt
ret
or
ret
push
add
cmp
jmp
jp
stc
fidivs
aad
sarl
pop
mov
add
add
mov
int
es
mov
pop
push
sbb
sbb
and
push
ret
repz
jnp
arpl
mov
push
std
ljmp
jmp
push
stos
inc
jmp
mov
iret
sub
cmp
aam
stos
inc
jmp
jo
clc
es
pop
jmp
cli
dec
jne
repz
test
add
add
out
decb
and
ljmp
and
enter
call
inc
and
test
ljmp
pop
and
push
xchg
setb
push
add
sub
add
bound
lea
mov
mov
and
decl
arpl
popa
lea
lds
or
add
add
add
add
bound
add
mov
mov
add
aam
jne
decl
dec
add
xorb
mov
jns
push
mov
push
pusha
mov
dec
inc
notl
je
sbb
cld
inc
bound
dec
or
stos
inc
inc
jb
mov
add
mov
mov
maskmovq
pushf
fadds
add
add
dec
or
push
test
idivl
mov
fistpll
or
incl
stos
lock
arpl
add
xor
or
dec
and
mull
mov
pop
xor
jno
loopne
fnstenv
out
add
sarb
push
pop
shrb
and
je
xchg
push
les
sub
push
outsb
add
bound
xor
add
out
mov
and
mov
in
mov
aam
add
je
pop
xor
pop
inc
jnp
arpl
jmp
insb
pop
inc
adc
fists
out
repz
xchg
cs
adc
add
push
sbb
add
add
pop
jae
mov
push
push
shr
push
jmp
hlt
bound
psrld
in
hlt
mov
test
cli
aaa
stos
mov
sbb
fisttpll
bound
out
add
pop
lea
outsl
pop
xor
add
addl
int
mov
aad
and
add
add
push
decb
flds
add
or
ss
clc
cmp
sbb
and
arpl
and
sti
xor
inc
xor
jmp
mov
rcrl
fldenv
sbb
scas
add
mov
gs
and
decb
test
aad
mov
pop
mov
inc
out
push
dec
decl
mov
les
clc
les
pushf
loopne
nop
inc
jp
pop
sbb
mov
add
mov
xor
xchg
das
roll
shlb
add
insb
adc
clc
aam
icebp
clc
jp
adc
add
daa
ret
add
add
dec
aad
nopl
lea
jb
lock
add
arpl
lds
fs
out
xchg
push
mov
adc
or
sub
hlt
cmp
pop
int3
mov
lock
xchg
sbb
mov
push
mov
add
jg
div
outsl
out
adc
adc
xor
pop
sbb
adc
cld
mov
mov
mov
rcrl
mov
xchg
xchg
mov
into
or
in
pop
ret
and
mov
std
lret
pushl
fs
push
add
in
and
inc
rcrl
mov
push
add
jmp
ficoml
std
fimull
testb
add
sub
sub
cmp
and
xor
jecxz
negb
xorl
out
ljmp
rolb
mov
pop
mov
mov
inc
arpl
xor
jmp
fimull
add
scas
adc
push
sub
call
cld
xor
fimuls
fmul
lods
cmp
punpckhwd
stc
std
push
xor
enter
add
mov
testl
loop
loopne
incl
inc
repnz
add
in
push
and
xchg
and
aaa
lea
cmp
lsl
aas
cld
xor
mov
test
dec
or
or
add
add
add
sub
pop
rclb
inc
hlt
adc
add
jl
repnz
adc
repnz
push
push
add
xor
sar
ret
cmp
lea
mov
push
out
mov
or
jnp
clc
and
in
and
mov
and
fmuls
sbb
or
add
push
sahf
pop
jge
in
mov
bound
aaa
and
add
jmp
xchg
mov
sub
cmp
hlt
pop
fs
push
out
test
shrb
and
pop
mov
out
pop
aad
dec
sub
movsb
rol
mov
in
leave
jl
fdivrl
loopne
mov
aaa
and
add
cmc
repnz
add
pop
nop
in
jae
and
repz
mov
sub
ficomps
lods
push
test
push
xor
pop
stc
ret
dec
pusha
dec
fnstsw
out
mov
xorb
dec
adc
cmp
inc
jg
add
loop
sub
sub
add
add
fimull
idivb
jnp
adc
insb
sub
pop
bound
mov
fsts
or
outsb
pop
xor
shrb
sbb
inc
and
pop
or
sbb
cmp
xor
add
inc
mov
arpl
mov
xor
xchg
pop
sub
fsub
frstor
add
sti
mov
push
jp
shll
iret
and
sti
xor
push
decb
ret
pop
xchg
mov
xor
xor
addl
idivl
shlb
push
ret
js
mov
xor
or
dec
mov
dec
jl
push
repz
or
add
add
or
add
mov
cld
push
mov
seto
stos
hlt
jno
shlb
mov
enter
mov
dec
cld
lahf
test
adc
cwtl
mov
xor
adc
hlt
add
shlb
push
ret
test
mov
pusha
or
or
sbb
xor
xchg
cmp
pop
test
gs
jae
push
mov
lods
in
pop
sub
fwait
mov
aaa
and
push
sub
push
mov
lods
jp
iret
aam
out
pop
cmp
ljmp
mov
dec
in
add
jb
clc
lahf
mov
jecxz
and
push
mov
and
cld
dec
fsubrl
xchg
jg
pop
leave
mov
std
arpl
sbb
dec
stc
out
movsl
xchg
std
repnz
pop
adc
cli
add
idiv
sbb
mov
dec
pop
cli
dec
ficomps
das
lock
test
jbe
mov
dec
stc
xchg
xchg
jmp
test
inc
pop
add
out
and
sbb
add
add
xchg
scas
push
cmp
stc
mov
add
push
inc
xchg
std
loop
xchg
pop
clc
pop
mov
add
push
stc
in
decb
in
add
xchg
and
jnp
cvtps2pd
pop
adc
pop
stos
or
fistl
mov
popa
pcmpgtb
stc
pop
pop
mov
add
or
les
mov
in
dec
sbb
push
nop
mov
inc
sub
add
adc
sbb
mov
popa
and
push
cmp
jmp
inc
idivl
mov
cmp
inc
add
div
and
loope
stc
cltd
sbb
xchg
add
cmpsl
jns
imull
inc
adc
add
mov
cmp
add
inc
test
ret
xchg
add
call
inc
add
or
fdivrs
fs
add
je
jne
mov
test
idiv
sub
pop
add
mov
cmc
in
push
out
pop
inc
mull
sub
mov
add
add
add
xchg
sbb
add
sbb
sub
add
add
xorl
pop
inc
xorl
mov
inc
neg
fsts
mov
bound
add
xorl
fisubrs
mov
neg
fldenv
jp
out
sbb
dec
push
mov
cmp
fwait
push
dec
stc
ret
iret
sub
bound
xchg
loopne
add
dec
stc
xchg
fadds
and
fldl
int
lret
xchg
ja
push
out
jl
int3
pusha
lock
fnsave
sti
mov
sti
mov
stc
scas
popa
fadds
je
fldl
jge
mov
mov
imul
mov
repz
cwtl
mov
add
add
push
fldl
cmp
shlb
mov
test
xlat
xor
mov
inc
add
pop
stc
xor
add
mov
int3
inc
clc
jmp
push
enter
adc
push
cld
push
and
inc
dec
bound
dec
fdivrs
in
jb
mov
adc
movb
mov
lds
push
mov
jmp
mov
push
xor
add
leave
add
inc
bound
jne
enter
ret
mov
or
mov
push
fdivs
pop
aad
mov
jns
push
adcl
aam
out
cld
jge
add
call
inc
clc
repnz
jbe
cmpb
cld
js
stos
mov
daa
movb
add
fld
stos
mov
lds
sub
cwtl
lcall
adc
jl
cmc
inc
or
popa
mov
ds
push
push
stos
jne
mov
test
jl
pop
ret
in
lret
sarb
add
mov
inc
mull
push
jb
out
add
stos
bound
frstor
jle
arpl
arpl
and
add
add
scas
je
pusha
iret
negl
je
call
cld
pop
imul
stos
sub
pop
insb
mov
cmp
dec
dec
test
or
out
mov
jl
insb
shl
mov
add
insb
sbb
jmp
cli
cmp
mov
push
inc
inc
stc
inc
aad
inc
cmp
bound
or
push
xchg
neg
inc
in
push
jb
jns
push
jmp
jno
stc
je
inc
push
lea
loope
into
add
add
inc
aad
jae
sub
mov
shrl
push
jmp
or
push
fisubrl
fadd
xor
fsubr
add
mov
jge
arpl
push
pop
push
add
pushf
pop
leave
or
stc
mov
arpl
push
cld
jb
cmp
enter
lds
pusha
sub
test
arpl
lds
add
add
adc
lds
push
les
mov
in
filds
repnz
pop
stc
clc
jne
lret
dec
stc
clc
xchg
div
cmp
add
and
add
arpl
lea
stc
jb
idivl
jmp
insb
sbb
dec
cmp
test
into
scas
jmp
bound
call
je
scas
je
inc
lds
push
add
idivl
mov
mov
xor
push
sub
pop
mov
lds
dec
jmp
push
popf
jg
add
add
scas
or
iret
add
mov
mov
inc
sub
or
repnz
add
mov
jle
sarb
adc
jbe
jne
enter
out
sbb
inc
inc
adc
loope
fildll
scas
inc
jo
xor
add
inc
divl
dec
sbb
maskmovq
imull
out
stos
cwtl
inc
pushf
fsubrl
add
add
pop
inc
or
into
sbbb
pop
or
cmc
cmp
sti
dec
inc
jno
jg
testl
mov
xlat
popa
add
inc
rclb
fwait
pop
push
jmp
cmc
cmp
sbb
mov
push
in
jno
jmp
mov
cwtl
into
or
jae
rolb
add
aaa
jae
in
bound
xor
iret
lahf
bound
push
jb
loopne
xor
nop
stc
ret
hlt
stos
stc
pushf
jl
ret
inc
shrl
push
icebp
fnsave
movsb
pushf
mov
in
iret
popf
cli
cltd
cltd
into
push
out
push
inc
push
das
pop
jb
jne
incb
push
xchg
iret
xor
add
icebp
add
add
push
mov
in
pop
add
push
sub
cmp
pop
out
in
xchg
cld
clc
mov
sti
mov
mov
sub
clc
xor
addr16
cli
sahf
pop
stc
jne
std
jb
inc
clc
call
loop
bndldx
add
jl
call
cmp
stc
pop
pop
jo
negl
add
jb
out
stc
incl
je
std
jb
es
push
leave
push
hlt
test
mulb
idivl
mov
hlt
or
mov
cmp
jmp
cltd
into
lods
dec
add
ss
sbb
add
loopne
add
hlt
ret
dec
inc
jl
insl
xchg
push
dec
add
mov
fmull
dec
push
in
add
mov
clc
rorb
add
cli
clc
dec
push
pop
mov
add
movsb
inc
lds
stos
push
testl
stos
enter
pop
xlat
fldl
div
jmp
adc
bound
xor
xchg
pusha
flds
js
push
in
arpl
add
push
jo
and
and
sub
push
fcmovne
inc
push
addb
add
and
out
sub
sub
add
aaa
sub
out
dec
or
arpl
int
inc
in
loop
adc
cld
and
jl
push
std
enter
inc
inc
jae
push
xchg
xor
add
imul
push
mov
ds
inc
xor
mov
push
cmp
dec
test
inc
cwtl
push
rclb
out
or
aas
outsb
jmp
in
and
push
jb
mov
hlt
addb
pop
stos
fdivrs
push
ljmp
xchg
inc
stc
jmp
cmp
aad
bound
es
push
stc
add
push
xchg
aam
pop
dec
fs
jne
aad
rcrb
pop
mov
shl
mov
je
add
xchg
add
add
add
int3
add
jno
je
jmp
add
cwtl
arpl
add
arpl
lea
xchg
push
inc
lahf
outsb
add
arpl
call
movsl
and
aaa
iret
push
add
arpl
lea
mov
xor
fsubrs
add
stc
jne
popf
xchg
inc
dec
mov
push
dec
add
add
push
xchg
jmp
dec
add
push
xchg
add
mov
dec
add
adcl
and
mov
cmpsb
jne
mov
cmpsb
jne
aam
leave
testl
inc
scas
pop
sub
enter
shll
adc
pushf
pop
lea
popf
adc
sti
movsl
jne
movsl
adc
addb
cmc
mov
jmp
lahf
dec
ficompl
push
mov
out
add
cmp
mov
fsubs
sbb
and
ds
add
aas
fs
add
pop
icebp
and
out
enter
add
bound
lret
xchg
js
repz
add
iret
lret
imul
idivl
dec
stos
sub
mov
clts
adc
cmp
mov
add
lods
js
push
xchg
cmpsl
clc
out
enter
ds
xorl
jmp
dec
movsb
iret
jmp
hlt
xchg
aad
es
push
les
push
jmp
lds
outsb
jmp
or
stc
xchg
push
movb
push
push
jmp
pusha
ljmp
hlt
dec
pop
inc
mov
movsb
inc
out
jp
cmp
jmp
int
roll
stc
decl
test
mov
and
add
sbb
push
lea
pusha
push
xorb
or
pusha
or
jge
pusha
jae
daa
add
add
and
push
add
mov
xchg
pop
mov
adcb
push
jbe
into
add
push
fiadds
into
pop
lea
and
ret
addr16
add
pop
ret
test
lret
dec
add
xor
inc
dec
mov
add
mov
pusha
dec
add
push
fisttpll
add
pop
call
in
mov
push
je
mov
mov
dec
add
jne
sub
mov
idiv
adc
int3
into
adc
cwtl
inc
faddl
add
bound
sti
iret
jmp
pop
jmp
mov
mov
aaa
push
call
test
ficompl
push
and
add
add
xchg
push
pop
push
cmp
push
lahf
popf
inc
popf
subb
cmc
dec
incb
add
lcall
out
push
inc
dec
cmp
or
mov
test
in
or
fimuls
mov
dec
push
cltd
sbb
fs
push
and
add
mov
stos
or
imul
scas
stos
mov
add
add
add
adcb
dec
lahf
mov
mov
pop
mov
outsl
inc
test
ja
or
loopne
test
test
jne
imul
push
jmp
jnp
or
jmp
stc
push
jge
incb
jmp
bound
loop
scas
pop
out
add
pop
adcl
xlat
insb
cmp
add
rol
pop
push
jmp
psubw
mov
inc
xchg
jle
jae
js
clc
push
out
pop
add
fs
ret
arpl
jmp
je
loope
adc
dec
clc
jne
or
sub
clc
jne
fnsave
sbb
call
pop
and
add
add
add
push
je
loope
or
push
clc
jne
or
cmp
clc
jne
fnsave
ss
cmp
les
jae
in
pop
clc
cmc
jmp
imul
mov
imul
and
adc
mov
mov
push
or
adc
cld
testl
jne
add
add
push
clc
pop
je
ljmp
lds
adcl
dec
push
pushf
jne
popa
dec
incl
mov
fldcw
mov
inc
lahf
leave
xor
sbb
or
aad
clc
mov
or
outsl
push
add
lahf
jne
bound
or
xor
aas
cltd
dec
addr16
xchg
cltd
ss
mov
int3
subb
out
add
arpl
repnz
mov
cwtl
or
push
jg
dec
inc
cltd
js
mov
mov
repz
lret
mov
add
mov
and
push
sub
lock
bound
sbb
rcrb
jae
mov
stos
test
mov
add
add
loop
movsl
hlt
bound
jmp
outsl
xor
in
pop
imul
sub
xchg
out
jmp
jmp
xor
iret
sub
jecxz
jne
xor
imull
jg
push
jmp
add
jb
je
push
xchg
inc
dec
jle
hlt
stc
je
dec
fisttpl
xor
add
icebp
outsb
out
mov
out
repnz
xor
add
ficomps
out
or
int3
clc
mov
clc
call
pusha
mov
incb
sbb
int3
mov
push
int3
mov
adc
clc
call
pop
loop
and
inc
bndldx
push
add
int3
clc
negl
decl
addb
add
add
add
add
push
lea
inc
add
fcmovnb
add
jne
pop
lret
pusha
mov
mov
fimull
testl
or
ja
jmp
call
sub
maxps
dec
inc
test
mov
push
mov
or
pusha
mov
ret
nop
lea
add
add
fdivrl
jne
pushf
push
adc
out
hlt
dec
push
adcl
push
push
and
test
fdivp
ljmp
mov
push
xchg
lcall
xlat
lea
out
or
scas
adc
stos
cs
lods
rep
push
push
mov
xchg
loopne
pop
lods
ds
mov
cld
enter
dec
push
aas
xchg
inc
pop
subb
ds
and
xchg
sub
xor
sbb
jp
sub
xorb
xchg
inc
out
inc
xchg
jo
mov
mull
lock
xchg
pop
xor
dec
xchg
xor
xchg
pop
add
add
xor
cmp
add
and
std
into
stc
pop
pop
xor
arpl
add
icebp
pop
out
push
popa
xor
mov
push
push
adc
ds
cmp
cmp
xorl
test
ret
mov
stc
cmp
push
xchg
push
push
jle
pop
out
aaa
mov
stc
sbbl
adc
jmp
aam
xor
push
dec
stc
mov
cmp
mov
xor
imul
loope
or
push
arpl
jae
push
jb
sub
push
jb
divb
ret
adc
push
in
lea
notb
insl
sub
out
in
clc
test
rol
inc
jb
push
add
jmp
push
add
jb
jge
fs
sbb
insb
add
test
fs
sub
jmp
dec
push
push
jecxz
clc
mov
adc
push
dec
sub
daa
mov
or
mov
sbb
mov
jns
sub
xchg
jecxz
sub
mov
mov
popf
out
cmp
pop
mov
mov
cmpl
ds
cmp
mov
cmp
add
add
pop
jp
inc
testl
mov
in
xchg
and
cmp
call
cld
jns
push
jl
xchg
leave
pushf
in
aaa
cmp
xchg
cs
pop
in
ljmp
int3
sbb
mull
add
nop
xchg
mov
je
filds
mull
divb
push
cmp
loope
push
sub
out
add
ja
mull
mov
mov
fs
leave
aaa
popa
out
leave
aaa
out
leave
aaa
addr16
leave
aaa
push
mov
sbb
idivl
out
add
adc
jb
push
xor
adc
mov
inc
sbb
bound
jmp
xchg
adc
add
add
mov
add
hlt
stc
pop
pop
adc
push
jb
xor
stos
sub
jmp
and
xchg
outsb
icebp
add
push
xchg
icebp
inc
stc
xchg
add
adc
mov
xor
pop
and
jmp
div
inc
pop
les
lods
xchg
or
popa
mov
jle
mov
and
add
add
movsb
call
mov
jle
mov
or
mov
aad
ljmp
mov
push
call
lea
xor
adc
mov
dec
push
push
packuswb
in
mov
ljmp
jb
shrl
clc
push
or
push
fnsave
jbe
jmp
scas
inc
cld
cmpsb
addr16
out
pusha
fdivl
mull
sbb
sbb
pop
sub
jb
xchg
inc
scas
add
test
mov
sahf
dec
add
adc
je
cmp
enter
dec
add
cmp
lock
jbe
test
idivl
pop
in
stc
adc
pop
out
add
mov
xchg
push
cli
out
leave
xchg
mov
mov
loope
rorb
sub
pop
mov
out
pop
mull
lds
jl
mov
mov
and
mull
pop
fwait
sub
mov
mov
pop
call
adc
mov
out
cmp
clc
sub
hlt
out
mov
mov
inc
add
out
fwait
lret
jmp
push
xor
pop
xchg
mov
sub
inc
sub
cld
mov
sahf
jp
out
mov
jo
stc
push
adcb
push
movsb
inc
stc
ds
push
subb
insb
cvtpi2ps
es
scas
inc
push
mov
push
orb
ja
pop
push
jb
add
rorl
loope
repnz
stos
inc
push
stc
in
push
sub
push
jmp
mov
je
sub
mov
out
push
scas
jnp
stc
sbb
inc
mov
in
arpl
scas
push
add
xlat
mov
or
clc
call
sbb
in
mov
and
gs
cmp
gs
mov
or
lcall
jecxz
sub
xlat
clc
add
popa
inc
outsb
movsb
push
inc
or
stc
int
mov
xchg
sub
mov
clc
jb
pop
loop
mov
lcall
into
out
imul
fdivl
not
push
or
add
add
ds
les
testl
inc
mull
clc
mov
idivl
les
cmp
hlt
cmp
add
mov
xor
mov
hlt
cmpsl
mov
mov
xchg
push
mov
add
jmp
je
xchg
not
lock
dec
in
enter
lock
loop
cmp
test
mov
imul
negl
clts
imul
push
push
inc
sarb
lcall
dec
pop
das
fldcw
inc
daa
sbb
mulb
dec
sub
add
adc
out
adc
mov
xlat
shrb
daa
fcomps
bound
fdivl
cmp
jl
cs
scas
outsb
mov
xchg
stc
adc
sahf
jle
cmc
sahf
jle
out
xor
xchg
sub
sarl
stc
jbe
es
cmc
cmp
xor
xchg
call
mov
ds
add
add
hlt
cmp
sti
bound
call
jl
push
jmp
outsl
pop
push
jmp
ljmp
cmp
and
stc
push
outsl
cmp
add
push
or
pusha
push
add
cwtl
dec
inc
into
fidivl
xchg
incl
movsl
repnz
push
push
dec
sar
add
add
or
clc
call
inc
popa
outsb
push
scas
mov
lock
mov
clc
call
movsb
loop
adc
imul
adcl
or
clc
lcall
dec
inc
push
leave
lahf
roll
fisttpll
jmp
push
push
xchg
mul
adc
inc
add
mov
dec
ret
xchg
enter
jp
mov
mov
or
sahf
mull
mov
addl
mull
repz
test
jmp
pop
or
mov
call
lret
cmp
jge
ljmp
mov
sub
or
and
in
and
cmp
clc
loopne
cmc
adc
xchg
in
mov
and
mov
xor
cld
fdivr
test
mov
and
xchg
and
xchg
out
add
fcoms
cmp
aad
frstor
adc
cmp
pop
and
push
mov
xor
out
cmp
test
and
xchg
add
add
and
sbb
scas
add
lods
negl
jp
rcrb
repz
fdivl
outsb
xlat
sub
or
stc
push
stos
mov
jmp
enter
jp
cli
sahf
clc
push
mov
and
mov
push
movd
hlt
adc
hlt
jl
push
pop
jp
iret
sub
push
bound
add
add
jp
hlt
jno
or
bound
ds
outsb
out
mov
and
loop
cwtl
push
xchg
mov
cwtl
or
sub
or
data16
xchg
outsl
movsl
push
push
or
fmuls
addr16
sbb
sbb
call
aam
mov
incl
pop
loope
mov
clc
call
xchg
decl
add
add
mov
sahf
jge
add
out
or
jb
push
scas
out
or
dec
aam
test
sbb
clc
call
mov
enter
push
push
mul
ret
push
mov
xorb
mov
incl
add
je
sti
xor
push
insl
and
inc
test
cmp
pop
iret
push
incl
add
add
xor
int
loope
outsb
mov
test
mov
in
rolb
push
jp
call
jns
decb
push
insl
jmp
mov
pop
pop
mov
jmp
cmp
pop
mov
ss
test
sar
fisttps
call
bound
dec
and
adc
or
in
clc
subb
out
mov
push
push
add
gs
clc
or
dec
fcomps
enterw
add
xlat
or
sbb
mulb
andb
xchg
test
out
push
mov
repz
sti
popa
out
add
outsb
js
mov
cli
or
or
and
push
ret
push
in
adc
call
pop
lahf
add
push
icebp
inc
pop
push
ss
jns
jmp
mov
adc
inc
pop
mov
jne
push
push
packuswb
scas
jbe
stc
adc
out
jne
or
pop
les
xlat
into
jbe
stc
cmp
or
mov
dec
and
scas
jbe
sbb
mov
dec
add
sbb
clc
jle
mov
add
add
add
inc
jmp
hlt
sbb
push
inc
inc
cs
dec
sub
idiv
add
imul
notl
push
or
xor
notb
incl
jo
je
jmp
cmc
jnp
out
mov
loop
decl
out
add
or
shr
stc
dec
orb
mov
popa
loop
decl
outsl
out
mov
mov
xchg
push
fbld
shr
stc
decb
dec
inc
mov
or
dec
jnp
inc
lret
hlt
divl
decl
lock
fwait
dec
cmp
add
call
repz
testl
or
decl
lret
add
mov
lcall
add
iret
shrb
mov
repz
iret
js
test
jle
push
into
js
or
dec
add
jnp
lcall
or
into
jo
sar
loop
imull
sbb
xchg
cmpsb
mov
scas
add
pusha
out
add
stos
dec
xor
inc
mov
add
add
xchg
ja
xchg
out
xor
xchg
sti
imul
clc
jle
xchg
repz
imul
mov
out
fsubrs
inc
add
or
clc
clc
or
inc
jmp
mov
sbb
jle
out
add
out
adc
and
or
push
jmp
repnz
pop
addr16
stc
rcrl
loop
xchg
or
leave
stos
inc
jmp
sub
ss
insl
outsb
in
mov
out
fisubrs
push
mov
mov
stc
test
mov
imul
stc
faddp
sbb
rcrl
insl
loopne
mov
js
push
jmp
and
stc
xchg
cmc
jb
jmp
hlt
mov
mov
push
add
pushf
dec
inc
mov
or
mov
pushw
jecxz
clc
ljmp
push
std
dec
data16
test
ficoms
add
ret
add
xchg
jae
neg
stc
jmp
stc
lea
push
negb
clc
jne
xor
adc
test
add
add
inc
sub
loope
imul
idiv
jns
push
mov
or
addr16
push
or
jecxz
jns
push
adc
mov
fildl
or
scas
aam
idiv
insb
and
add
add
or
or
out
or
testb
imul
movzwl
clc
test
push
call
add
mov
add
decl
xor
testl
jl
arpl
dec
cwtl
sbb
fwait
in
js
sahf
addl
out
jp
xchg
aaa
popl
icebp
add
fidivl
cmp
jnp
mov
icebp
cmp
decl
sbb
sub
out
jp
push
and
lock
jns
sbb
icebp
or
testl
bound
je
pop
call
jp
imul
mov
pop
inc
add
out
mov
mov
sarl
jmp
push
bound
jmp
hlt
xorl
mov
jmp
jg
lock
pop
push
adcl
cmc
pop
int
stc
pushf
les
stc
dec
dec
arpl
jmp
scas
pop
stc
cltd
sbb
dec
test
mov
mov
sub
add
fmuls
pop
mov
stc
test
jae
dec
stc
cli
out
push
mov
dec
push
stc
inc
mull
jmp
mov
stc
push
inc
into
dec
inc
sahf
or
push
iret
pop
outsb
adc
and
out
lds
adc
pop
mov
push
pushf
jae
jbe
cli
call
fwait
mov
rcrb
stc
pushl
out
xchg
jecxz
stc
or
adc
add
fwait
push
push
xor
jne
mov
xlat
fwait
stc
push
test
jne
mov
rcrl
stc
imul
and
loope
dec
add
aad
pop
lahf
jg
jmp
jbe
call
mov
andl
jo
add
loop
insl
xlat
push
test
xor
cmpsl
add
inc
mov
add
jo
lahf
rolb
dec
call
dec
mov
insl
mov
aaa
negl
mov
insb
mov
jne
or
outsb
fsubs
icebp
enter
enter
out
bound
mov
loop
mov
adc
aas
jb
mov
mov
out
or
and
add
out
lock
or
add
bound
pop
pop
pop
movsb
ja
mov
ja
push
fiadds
add
add
pop
insb
or
push
ja
adc
pop
pop
xor
sub
imul
fisubrs
or
imul
sub
lock
imull
out
jae
bound
jo
neg
inc
mov
push
jmp
sub
jmp
arpl
jmp
ss
sub
fwait
sbb
sti
or
hlt
bound
and
ret
ja
adc
cmp
add
jmp
mov
stc
jg,pt
sub
into
imull
mov
adc
xchg
lock
and
adc
add
xor
stc
jmp
push
call
push
aaa
clc
jne
jle
incb
add
add
cwtl
stc
lea
movsl
clc
ljmp
clc
mov
cltd
stc
pushl
xchg
movlps
clc
ljmp
mov
push
aad
add
sarl
xchg
cwtl
stc
leave
sbb
push
push
lds
les
out
mov
cmpsb
or
add
inc
push
xchg
jae
out
lret
push
js
add
add
inc
int
incl
jmp
jmp
arpl
fadds
in
jbe
cmp
incl
insl
popf
lods
cmp
dec
in
aad
imull
jne
xor
std
mov
shlb
dec
jbe
call
daa
fs
mov
aam
loop
insl
push
popa
cwtl
jb
cs
jno
fcomip
aad
divl
dec
cmp
in
mov
add
add
mov
or
out
jb
pavgw
call
bound
out
or
dec
cmp
out
bound
ja
jge
jmp
iret
and
rcr
sub
dec
dec
mov
notl
cs
sti
ret
in
and
pop
iret
xor
sbb
jnp
xlat
aaa
arpl
jae
pop
xchg
pop
push
js
mov
jo
pop
push
scas
lods
push
adc
inc
shll
lret
or
adc
popf
inc
cmp
clc
cli
add
ret
add
jae
lods
sub
and
addr16
cmp
stc
xchg
cs
jmp
scas
push
stc
out
lods
adcl
jae
sbb
sti
inc
jnp
cmp
pop
sub
add
mov
out
pop
push
adc
adc
xchg
push
orl
cmp
sti
loope
data16
outsb
lds
jae
lds
stc
push
and
mov
add
call
adc
pop
jae
jne
xchg
jae
out
in
jmp
xchg
jae
mul
ret
dec
les
sub
into
xchg
jae
loope
or
sub
cltd
xchg
mov
xchg
outsb
and
and
jmp
out
or
xchg
stc
push
into
xchg
jae
data16
popa
das
sub
stc
jne
scas
test
dec
cmpl
les
push
inc
idiv
jne
xor
add
pushf
mov
sbb
cld
out
add
add
out
push
ljmp
cmp
add
pushw
ret
jmp
xchg
stc
out
inc
ja
rclb
cmp
adc
xor
ja
test
rcll
cld
jne
jmp
jnp
nop
mov
pop
aad
in
jne
add
aad
ljmp
leave
xor
out
les
lock
add
add
add
inc
or
data16
sub
out
add
int3
daa
lret
mov
xor
clc
cli
arpl
or
pop
fcmovne
mov
add
xchg
or
pop
pop
stc
loope
clc
bound
mov
dec
xchg
ret
pop
jo
xchg
negl
or
outsl
mov
lret
pop
and
shrb
testl
mov
data16
add
cli
xchg
or
leave
insb
jnp
shll
mov
push
and
or
hlt
dec
add
rorb
outsb
out
mov
inc
jmp
cmp
mov
add
aaa
mov
mov
inc
jmp
mov
add
push
or
loopne
mov
inc
jmp
mov
add
add
or
aam
mov
inc
jmp
mov
add
adc
out
mov
inc
jmp
es
arpl
loope
enter
sub
inc
add
xchg
dec
jl
fists
stc
incb
loope
mov
xor
xchg
push
jl
filds
stc
arpl
loope
or
push
xchg
pop
add
out
jne
scas
jmp
pop
add
stc
addr16
xor
add
gs
add
js
or
xchg
sti
decl
or
mov
mov
xor
lock
pop
mov
or
mov
cmc
sti
add
inc
daa
std
out
cmpsl
imul
cmpsb
xlat
inc
mull
fs
mov
faddl
idiv
test
mov
pop
xchg
or
imul
ret
call
jecxz
add
jnp
jne
jae
cld
fmuls
fisttpll
sub
ret
lcall
add
ja
lock
lahf
xchg
imul
ss
fsub
inc
cmp
push
mov
out
arpl
insl
ljmp
flds
add
add
or
push
jl
insb
ret
jbe
or
ret
idiv
cli
adc
sub
es
sti
bound
call
xchg
int3
fistpl
repz
mov
sbb
out
add
leave
mov
mov
andl
pop
clc
rolb
imul
mov
mov
add
add
sti
mov
lahf
jbe
stos
sbb
outsb
pop
cmpsl
mov
out
sahf
mov
stc
cmp
push
jle
mov
cld
pop
add
faddl
out
and
mov
idiv
aam
add
sub
push
cmpsb
sub
shlb
mov
cs
pusha
out
xchg
lea
stc
adc
and
push
sub
jmp
jmp
pop
mov
test
stc
mov
fwait
inc
jmp
sbb
pop
clc
push
pop
or
mov
sbb
stc
call
and
push
jl
sbb
pushf
dec
inc
dec
stos
call
inc
jbe
inc
call
rcll
or
inc
push
stos
rol
sarl
and
stc
jne
jl
filds
add
add
stc
out
inc
stc
incl
adcb
data16
jne
jns
fbld
inc
stc
call
in
push
jle
cmovp
add
clc
idiv
std
subl
add
add
addb
iret
mov
pop
popl
scas
pushl
call
out
xchg
outsl
lcall
insl
dec
adc
mov
add
lret
jne
mov
mov
fisttps
add
mov
mov
mov
add
pop
incl
jae
mov
rcll
iret
adc
call
js
jecxz
xchg
addl
jne
bound
add
xchg
bound
out
push
dec
add
pusha
mov
mov
dec
aaa
add
xchg
add
xchg
cmp
add
xchg
add
push
test
add
out
into
insl
imulb
pop
or
out
pop
inc
jp
iret
mov
xchg
pop
dec
mov
scas
add
mov
fdivrs
aaa
arpl
jmp
lret
push
sbb
push
add
jmp
sub
jp
sbb
add
add
mov
inc
jmp
sti
jp
xor
add
sbb
add
clc
xchg
jp
jmp
mov
inc
jmp
hlt
jp
mov
inc
mov
inc
jmp
push
pop
out
fcoml
pop
push
push
out
stc
fdivrl
fwait
inc
jmp
ficomps
rolb
inc
pop
push
add
inc
inc
hlt
cltd
add
incl
add
insb
add
and
push
or
icebp
testl
stc
jne
cmpsl
sbb
popa
in
inc
divb
jae
adc
dec
mov
shll
dec
das
push
call
cmpsl
loop
testl
add
add
add
add
jl
mov
je
mov
jge
dec
shl
test
mov
call
pop
idiv
iret
dec
pushf
add
xor
not
jnp
je
popa
push
in
sub
pop
mov
cmp
ficompl
hlt
pop
mov
shll
mov
fstpl
sarl
pop
icebp
mov
dec
idiv
out
js
decl
mov
push
cwtl
fcmovnbe
inc
divl
add
mov
dec
testb
jmp
fldlg2
add
pop
add
pcmpgtw
xchg
sub
add
out
add
iret
inc
mov
hlt
inc
and
aam
ja
pop
xor
add
add
mov
fildl
cs
mov
ret
jo
in
add
loop
insb
add
rol
add
sti
push
pop
jnp
inc
or
or
ja
pop
lods
push
lea
out
lock
adc
aad
or
pop
cltd
incb
sub
adc
and
jmp
sahf
scas
add
pop
jbe
add
mov
cli
jb
test
sti
jmp
dec
stos
mov
jb
fwait
leave
push
sub
xchg
out
leave
dec
arpl
loop
jbe
aas
into
sahf
aam
outsb
jmp
mov
add
int3
mov
dec
das
xchg
ljmp
outsb
mov
stos
jmp
cmc
cwtl
out
add
lods
stc
incl
add
add
stc
pushl
es
dec
adc
add
fmull
incl
nop
pop
inc
pop
inc
push
jne
sub
xor
fdivrp
jmp
imul
sbb
cmp
ja
test
pop
shrb
mov
ss
out
loopne
loop
pop
addr16
jne
test
jbe
loopne
orl
insl
ljmp
add
cmp
jne
mov
ret
push
mov
movsl
fs
mov
or
mov
in
into
mov
xchg
inc
call
hlt
insb
stos
fcoms
call
mov
jno
xorl
fs
adc
inc
fwait
mov
vmovsd
adc
das
dec
add
jbe
data16
cld
lret
fstl
push
add
dec
add
push
in
call
int
in
ror
add
arpl
inc
scas
mov
dec
popa
cld
and
add
mov
inc
sbb
std
pop
insb
adc
arpl
jmp
xchg
scas
add
aaa
sbb
aaa
arpl
and
mov
lock
push
or
push
xlat
lahf
mov
push
add
adc
ret
js
cmp
dec
stos
cs
sti
push
pusha
pop
imul
arpl
ja
sub
push
add
xchg
inc
jmp
hlt
std
xor
cmp
push
inc
cmpsl
mov
jb
inc
lods
stc
mov
push
cld
in
dec
cmp
xchg
fdivr
jb
pop
sbb
push
push
mov
test
cld
clc
sbb
jb
sbb
clc
out
cld
jb
cmp
shll
clc
into
cmp
add
aas
jmp
out
lods
mov
jbe
adc
xchg
inc
jmp
mov
push
cmp
lea
add
pushf
jae
jbe
jecxz
cltd
mov
add
push
lea
add
jae
cmpsb
dec
jecxz
mov
mov
add
mul
jmp
fwait
iret
ret
push
mov
ffreep
cld
je
insb
or
jmp
sub
push
pushf
jae
mov
clc
mov
outsb
out
jbe
pushf
stc
push
pushf
jae
xchg
clc
jns
jae
not
fldl
pop
xor
add
push
in
popf
or
inc
rorb
sarb
dec
mov
insl
rorb
pop
or
mov
hlt
push
mov
bound
call
pop
or
inc
and
add
adc
sar
push
add
mov
sub
mov
and
pop
jne
cmp
jne
add
add
and
jecxz
and
cmp
pop
ljmp
push
mov
out
pop
loop
xchg
sbbb
dec
xor
pop
insb
dec
cmp
stc
or
in
pop
and
test
insb
push
mov
mov
bound
clc
or
pop
clc
stc
add
or
or
outsl
imull
cli
pop
pop
shrb
pop
inc
imul
jg
decl
pop
out
mov
push
outsb
dec
iret
icebp
out
jb
jecxz
cltd
outsl
jmp
lret
ret
mov
add
inc
call
bound
scas
xor
add
sub
stc
add
hlt
mov
add
mov
add
out
jge
out
jne
stc
clc
sbb
outsl
outsb
dec
std
in
gs
bound
repnz
add
arpl
jmp
hlt
stc
jb
pop
cmpsb
mov
sbb
icebp
push
cmp
push
mov
sub
sbbb
clc
clc
adc
clc
lahf
clc
pusha
push
arpl
lock
clc
xor
add
loope
cmp
push
pop
pop
stc
mov
xchg
stc
call
pop
out
jne
fwait
stc
mov
mov
pushl
stc
add
add
mov
shl
notl
es
add
in
call
push
or
push
lahf
arpl
mov
xchg
stc
call
push
arpl
cmp
pushf
stc
mov
icebp
push
jmp
stc
push
xchg
mov
test
cmp
sahf
mov
mov
mov
sti
cmpb
push
pushl
aad
push
mov
inc
rcrl
push
fsubs
cld
leave
enter
xor
push
jo
incl
or
negl
addb
add
jg
push
scas
scas
testl
or
inc
xchg
pop
call
popa
test
arpl
mov
in
pop
ljmp
add
add
arpl
pop
add
mov
pop
inc
add
or
jecxz
pop
pusha
divb
pusha
negb
hlt
xor
pop
mov
pop
cmp
sbb
sbb
outsl
pop
shrd
sbb
cltd
insb
or
push
insb
leave
mov
dec
push
clc
cmc
push
adc
mov
or
fwait
fdiv
pop
mov
enter
mov
bound
inc
jmp
mov
mov
sub
jb
sbb
mov
das
in
inc
aad
lahf
cmp
mov
xor
idiv
pop
stos
inc
jmp
scas
imul
call
sub
push
xchg
out
jno
cmc
clc
xorl
add
add
dec
mov
mov
sub
mov
hlt
add
push
mov
repz
add
clc
add
pop
jns
pop
pusha
stc
jne
mov
mov
or
cmpsb
les
mov
in
fbld
mov
scas
divl
lea
filds
push
stc
out
add
add
ret
push
mov
push
add
icebp
add
pusha
push
rcll
insb
add
insb
add
mov
scas
mov
mov
call
aad
jb
out
push
add
pop
mov
incl
insl
mov
pop
push
push
jl
popl
inc
fsubrs
cld
dec
mov
dec
incl
add
add
and
fdivrs
xchg
lock
in
inc
not
pop
mov
pop
aam
dec
or
add
bound
jmp
insb
push
fildll
mov
popa
testl
push
test
imull
push
ljmp
pop
int
mull
and
jge
jmp
add
add
decb
repnz
pop
xor
nop
fsubrl
xor
ljmp
enter
mov
int3
mov
movl
dec
out
pusha
dec
repnz
xchg
cli
jg
divl
andl
repz
out
fs
repnz
lidtl
call
pop
push
ret
add
ss
clc
pushf
cld
cli
xor
repnz
pop
push
cli
clc
push
dec
js
adc
mov
decb
in
inc
repnz
je
cli
sbb
xchg
enter
and
sar
clc
mov
loope
lret
icebp
in
lds
clc
scas
cmp
out
stos
icebp
clc
pop
int3
stc
clc
mov
add
ret
icebp
mov
mov
clc
subl
icebp
in
sub
clc
push
imul
jb
out
xor
and
stc
pushl
iret
scas
call
xchg
inc
clc
out
sti
jmp
xchg
jae
mulb
les
mov
mov
or
cli
or
sub
loopne
pop
xchg
stc
mov
xchg
outsb
repnz
stc
sub
loopne
mov
xchg
stc
jne
mov
mov
xchg
iret
ret
push
mov
rcl
xchg
stc
fistl
divl
jbe
cmpsl
add
icebp
mov
add
stc
dec
inc
out
stc
add
testl
add
pop
cli
jnp
push
push
jb
pop
idivl
push
push
jne
push
mov
mov
and
pop
std
idiv
add
dec
xor
incl
rclb
jl
test
dec
pop
loope
mov
pop
decl
add
mov
push
divl
loopne
xor
sbb
mov
sbb
push
push
xlat
adc
repnz
push
lock
adc
aas
movsb
out
pop
lods
stos
aaa
push
outsb
call
add
shr
les
pop
cmpsl
mov
shr
push
ljmp
mov
imul
push
sbb
movsb
out
push
dec
repz
push
js
sbb
mov
stos
mov
pop
pop
out
popa
xchg
mulb
lods
mov
cwtl
xchg
inc
testb
mov
xchg
ja
pop
ja
sarb
shll
add
add
in
xor
push
inc
xchg
out
adc
pop
mov
xchg
out
add
jo
icebp
es
push
jmp
dec
out
clc
mov
hlt
in
mov
aas
out
clc
imul
or
sbb
int3
cmc
clc
jnp
loope
in
add
jmp
scas
in
clc
jmp
hlt
bound
xchg
hlt
pop
subb
push
add
idiv
out
fcoms
mov
cltd
xchg
mov
mov
jmp
stc
incl
xchg
jae
inc
cmpsb
mov
or
stc
jmp
loopne
pop
xchg
stc
call
icebp
stc
xchg
jae
push
and
lcall
pushf
stc
incl
call
stc
addl
add
pop
aas
icebp
decl
jb
fst
aad
cmp
fcoms
popf
jae
data16
lcall
or
idiv
inc
jne
loope
mov
in
mov
jne
lcall
inc
sahf
decl
jge
in
or
dec
push
into
pop
imul
pushf
pop
ss
movsb
dec
jmp
mov
dec
mov
dec
dec
dec
sbb
add
pop
dec
call
cwtl
dec
jmp
mov
call
scas
mov
dec
sbbb
sbb
inc
jne
adc
mov
mov
inc
dec
mov
out
dec
ret
shlb
jmp
dec
mov
cli
sbb
sbb
mov
sti
bound
jnp
loope
aas
or
pop
xorb
push
sbb
add
add
fwait
scas
add
add
negl
jnp
in
add
and
add
out
fldcw
jl
xorb
sahf
cmpb
dec
mov
pop
push
lods
ja
negl
fdiv
sti
or
mull
mov
push
push
rorl
scas
mov
icebp
clc
sahf
imul
js
lock
jmp
pop
sub
jmp
clc
pop
or
dec
test
cli
push
xchg
xor
mov
clc
lods
jmp
push
cs
ljmp
push
mov
push
sbb
jmp
jmp
hlt
jmp
clc
out
or
sti
cli
adc
mov
add
add
or
addr16
mov
cmc
notl
lods
inc
add
insb
and
xchg
stc
lea
mov
stc
out
stc
dec
xchg
icebp
call
and
clc
call
movsb
jb
dec
notl
xchg
add
xchg
ss
pop
cmp
call
mov
sbb
icebp
incl
icebp
clc
decl
xchg
stc
lea
add
add
xor
incl
and
icebp
call
xor
testl
lcall
inc
je
jl
rolb
dec
add
add
ja
divl
leave
pop
or
ja
mull
flds
add
stc
mov
cmpsb
sub
je
testw
je
jl
aam
mov
bound
pushl
ds
mov
push
incl
add
add
mov
stc
mov
ret
push
dec
push
cmc
push
push
lcall
call
dec
push
stc
add
je
mov
add
jnp
mov
dec
imull
xchg
bound
lods
fsubs
jns
sbb
sbb
dec
dec
sub
pop
push
sub
xchg
pop
xchg
popa
popa
out
dec
inc
cli
ja
add
icebp
sti
adc
xchg
dec
lock
aaa
loopne
dec
dec
stos
decl
fsub
mov
dec
enter
enter
inc
pop
pop
scas
out
dec
bound
sbb
out
sti
nop
mov
xor
out
negb
out
aad
in
sarl
mov
scas
scas
in
scas
in
cmp
js
icebp
mov
cli
outsb
js
add
add
in
clc
sahf
lret
test
xchg
mov
in
jge
push
lea
push
repnz
js
push
mov
out
fnstcw
clc
jo
jmp
mov
xchg
lea
pushf
jl
test
in
icebp
dec
mov
push
fadds
arpl
add
stc
add
mov
dec
popa
out
sbb
xchg
lcall
adc
mov
mov
add
jae
xchg
stos
decl
ss
imul
stc
jne
mov
cld
mov
jae
inc
and
add
mov
in
dec
and
push
push
or
sub
in
fwait
stc
mov
mov
add
negb
cli
dec
jne
push
xor
jne
in
lret
cld
sahf
pushl
inc
add
jge,pn
je
dec
push
lahf
repnz
icebp
pop
stos
lcall
cmp
ret
call
int3
pop
movq
call
push
add
inc
ret
lcall
je
fistpll
mov
inc
incl
add
add
cmp
and
stos
inc
test
inc
push
dec
cli
add
jns
and
mov
insl
negl
or
inc
nop
jecxz
inc
mov
pop
jae
out
inc
scas
and
add
xlat
rolb
into
bound
pop
insl
out
and
mov
lds
fsubr
fidivrs
bound
mov
sbb
cli
dec
outsb
ret
ret
xor
lods
aaa
arpl
inc
inc
dec
out
add
and
inc
mov
adc
ss
push
cmpsl
je
push
pushf
ds
fidivl
stc
push
xor
repz
cld
imul
mov
out
jecxz
loop
mov
aaa
int
cmpsl
stc
inc
repz
adc
inc
push
xchg
outsl
loop
jo
fisubrs
hlt
shll
jmp
sti
loope
loope
stc
fisttpll
mov
push
xchg
enter
mov
in
jmp
pop
cmp
inc
push
mov
cwtl
flds
xchg
add
and
push
add
and
add
xor
pop
sahf
gs
add
add
inc
jp
mov
sub
inc
mov
call
push
and
add
dec
packuswb
jne
cmp
push
mov
xor
es
push
int3
jae,pt
jno
popl
jbe
test
popa
mov
inc
add
cmc
div
cmp
or
ds
add
add
mov
inc
lcall
or
lcall
or
ljmp
push
idivl
fdivs
lods
inc
test
inc
jmp
sbb
inc
mull
mov
push
divw
adc
addr16
jmp
aaa
xor
sbb
inc
xor
adc
incl
aad
je
add
add
dec
xchg
call
arpl
inc
daa
lock
and
fisttps
fcomps
fimull
mov
loope
rorb
popa
and
fistps
sbb
out
xchg
pop
inc
nop
bound
cmp
in
sub
add
and
cwtl
inc
loop
outsl
popf
ffreep
inc
or
inc
inc
fbstp
or
bound
xor
jno
and
lahf
inc
stos
push
xor
dec
popl
or
push
inc
clc
fiadds
outsb
xor
or
pop
xor
fsubrp
xchg
inc
fdivrp
inc
aas
iret
lock
fdivrp
je
aad
es
add
sbb
add
stc
push
xor
loopne
divb
add
add
sti
add
jmp
mov
jno
cmp
lret
mov
mov
dec
mov
sbb
lret
mov
clc
sbb
fnsave
fdivl
iret
ret
push
mov
sar
data16
adc
push
add
dec
stc
call
cld
push
cmpsb
xchg
into
or
pop
pop
popa
stc
jne
mov
fldenv
stc
jne
and
idiv
stos
stc
sub
add
mov
in
fdivp
imul
divl
and
fbld
mov
add
test
movsb
lock
popa
push
rcrl
insb
add
insb
add
popa
add
jp
ds
clc
jp
jne
push
mov
fwait
add
rolb
add
add
xor
mov
dec
sub
xchg
mov
inc
sbb
mov
decl
mov
loope
pop
mov
inc
mov
mov
pop
dec
mov
sub
cwtl
lods
cmp
cmp
add
jae
ljmp
push
xor
and
aas
loop
lds
add
add
les
outsl
or
mov
aam
aas
lea
cmp
and
mov
fistpl
pop
das
and
sub
or
aas
jle
inc
aaa
rcr
mov
dec
in
aaa
arpl
jns
rcrl
aas
cwtl
xchg
cmp
aaa
arpl
repz
fildl
or
mov
jp
push
rcr
ds
lret
push
fcmovnb
pop
cld
mov
mov
mov
roll
jmp
loope
clc
jmp
fcom
clc
mov
push
jae
ja
lock
arpl
popf
fimull
data16
fnstenv
inc
int3
scas
clc
dec
in
mov
fidivs
icebp
flds
jmp
in
lret
rcr
clc
pop
fcom
clc
push
rorl
adc
stc
xor
out
sub
clc
je
lret
sbb
clc
xchg
mov
clc
or
loop
add
clc
add
data16
pop
xchg
icebp
call
jae
xchg
pushl
mov
imul
ljmp
cwtl
stc
ljmp
xchg
call
inc
stos
xor
stc
pushl
shrb
add
cwtl
inc
clc
inc
movsl
cli
jmp
xchg
jae
ss
add
mov
in
sbb
imul
mov
lea
stos
push
xchg
popl
xchg
jae
xor
icebp
push
ss
call
in
or
push
ds
or
call
aam
je
arpl
adc
sub
jne
repz
add
add
add
add
pop
cmp
push
mov
loopne
or
mov
cmp
shrb
cmp
and
jne
xor
test
dec
ret
iret
mov
jns
or
lds
decl
dec
xchg
cli
cmp
popa
out
scas
pop
arpl
getsec
push
out
cmp
mov
mov
sub
cmp
and
sub
or
mov
mov
bound
sub
icebp
out
add
mov
fs
and
add
mull
xor
inc
lods
es
test
and
pop
insl
jb
add
xor
mov
lret
adc
outsl
cli
jo
cmp
push
fst
jb
or
mov
fisttpll
pop
out
scas
xlat
clc
addr16
in
mov
aaa
push
sar
stc
cmpsb
loope
pop
mov
push
cmp
movb
jb
sbb
mov
insl
mov
test
aad
icebp
sbb
stc
push
std
dec
push
rorl
pop
test
aad
push
lods
and
inc
sbb
mov
pop
test
xor
bound
clc
add
mov
imul
lods
sub
sub
mov
stos
ljmp
xor
pop
push
call
into
scas
divl
mov
pop
mov
stc
push
mov
loop
pusha
sub
mov
add
shrl
pop
popa
push
call
mov
test
jmp
fwait
stc
push
mov
fwait
or
addr16
adc
inc
jae
lods
push
or
call
sar
ret
push
inc
lods
cmp
pushl
xchg
notrack
or
leave
xor
out
add
add
add
in
cmp
push
clc
insl
adc
push
sub
or
or
leave
add
cmp
add
leave
inc
inc
lret
sub
add
imull
mov
hlt
mov
arpl
sub
mov
in
add
dec
inc
lret
mov
lock
call
aam
mov
out
xor
add
add
iret
aam
lret
xor
jne
daa
int3
mov
cmovbe
stos
jg
cs
push
lahf
das
add
mov
lret
lock
ror
ja
dec
arpl
xchg
cmp
rclb
enter
iret
sub
popa
and
sarl
stos
test
fnstenv
arpl
ss
cs
fcompl
addb
add
add
add
add
sar
xor
xchg
sub
clc
mulb
dec
or
call
fucomp
or
imul
negl
sti
shll
mov
sar
pusha
ja
lock
rcr
test
sar
jmp
adc
clc
xchg
push
arpl
mov
jb
je
out
pop
add
add
jmp
cld
mov
stc
ljmp
mov
jmp
cwtl
jae
ss
mov
call
pop
pop
out
lods
mov
jb
jmp
jae
div
mov
loopne
cwtl
stc
ljmp
cwtl
stc
decl
cwtl
jae
inc
in
jmp
mov
dec
cwtl
stc
call
popa
inc
out
popa
cwtl
out
pop
cmp
add
sub
jmp
dec
cmpsl
popa
cwtl
stc
mov
jg
jmp
movsb
lahf
jmp
cwtl
mov
divl
xor
lahf
jae
ljmp
nop
xor
and
xor
and
std
mov
xor
xlat
pop
pushl
mov
jmp
cmpsl
sti
dec
adc
or
mov
push
and
sub
push
test
mov
add
add
jp
push
or
call
and
inc
mul
out
aas
jnp
ljmp
sub
ficompl
decl
xor
bound
xchg
rclb
mov
out
into
jge
insl
aas
lret
fdivrs
xor
es
cltd
push
fbstp
pop
inc
pop
gs
or
out
cmp
lret
mull
mov
idivl
test
dec
fildll
cmp
ror
aam
push
xlat
xor
arpl
pop
push
ljmp
or
lds
rcll
adc
iret
inc
xor
xor
in
cmp
iret
push
sarb
mov
clc
data16
mov
rcll
inc
jmp
in
clc
mov
movl
iret
mov
clc
es
iret
pusha
adc
and
push
out
shl
push
and
jb
cld
jl
and
sar
xor
aad
cmp
notl
push
or
cmc
stc
clc
mov
iret
imul
scas
pop
sub
iret
mov
mov
pop
out
popf
dec
into
clc
pusha
jg
lock
insb
add
gs
inc
ficoms
add
inc
xchg
stc
jmp
xchg
stc
mov
push
icebp
cmp
mov
add
cmpl
push
bound
fldenv
pop
fstl
idiv
nop
push
je
ljmp
push
push
mov
sub
call
cmp
idivl
xchg
stc
jne
push
mov
xor
add
add
fldl
div
jo
loopne
ljmp
sbb
xchg
dec
aaa
decl
cmp
pop
iret
or
mov
xor
call
mov
mov
cs
xchg
aaa
incl
aas
incl
insb
aaa
mov
insb
aaa
lcall
pop
jmp
jno
pusha
int3
xor
decl
xor
inc
les
add
lods
scas
pop
pop
jbe
ljmp
pushf
outsl
lock
call
jle
jmp
add
xor
pop
jle
negl
fs
je
sbbb
pop
xchg
iret
add
out
xor
stos
cmpsb
ret
sar
cwtl
aad
xor
arpl
add
or
daa
jp
pop
xor
add
add
into
movzbl
mov
xor
jl
loop
pop
inc
int3
out
mov
jb
mov
mull
inc
lock
add
bound
jmp
mov
cmp
adc
cmp
add
fldl
lret
fiadds
sbb
push
jbe
in
dec
imul
xor
add
into
fiadds
add
lret
clc
mov
enter
dec
pop
stc
mov
ror
mov
clc
push
insb
or
jne
ljmp
cmp
jmp
pop
aam
out
adc
neg
or
clc
push
xor
mov
fxch
clc
xchg
in
clc
add
addr16
mov
inc
push
out
adc
push
leave
pushf
lret
push
push
les
add
add
clc
imul
popa
cmpsl
incl
inc
cld
test
inc
into
jns
fbld
clc
dec
into
loopne
xor
push
cmpsb
fs
add
jns
or
jne
call
in
dec
pop
lahf
data16
xor
icebp
or
call
mov
push
add
clc
jne
outsb
call
jne
scas
sub
mov
add
sbb
iret
mov
adc
clc
aam
je
je
pop
ss
sub
inc
insb
shlb
mov
int
imull
jne
xor
lret
mov
lret
mov
int
imul
sub
xor
lret
mov
sbb
testl
stc
lret
pusha
pop
sbb
xchg
pusha
sub
xor
pop
xchg
inc
in
push
loopne
clc
mov
gs
sbb
cmc
sub
pop
xlat
adcl
mov
aad
cmp
sbb
sub
cmp
sub
jmp
movl
inc
repz
jns
in
das
mov
add
cld
mov
out
add
inc
adcb
out
mov
add
add
mov
sbb
and
push
sbb
pusha
dec
or
and
add
cmp
add
push
cltd
adc
add
clc
out
in
cmp
xor
enter
mov
push
push
repnz
jmp
loope
push
into
cmpsb
sbb
dec
sbb
insl
pop
mov
push
mov
enter
xbegin
add
stc
hlt
mov
in
test
sub
int
cli
push
sub
clc
mov
or
inc
pop
out
fsubrs
clc
adc
add
push
or
cli
add
les
mov
in
int
cli
push
in
call
loopne
test
jp
add
and
dec
jl
add
add
push
imul
cltd
jns
add
stc
jne
push
ljmp
outsb
add
mov
jae
jbe
clc
decl
add
insb
and
add
cmp
mov
pop
inc
sahf
call
loopne
enter
inc
jle
jne
push
lahf
or
ret
add
insb
enter
lds
jp
and
inc
adc
mov
cmpb
idivb
add
idivl
pop
add
and
push
and
push
dec
mov
hlt
call
outsb
sub
dec
loopne
mov
add
mov
imul
in
mov
mov
jg
or
xorb
testl
inc
jns
push
add
add
dec
sub
out
fwait
es
add
pushl
dec
in
mov
gs
int
sub
and
sub
iret
sub
lds
clc
adc
sub
fldt
add
cmpsl
test
arpl
hlt
pop
arpl
sbb
arpl
sub
dec
out
jnp
sub
out
sbb
adc
aaa
arpl
mov
inc
sub
lcall
mov
outsb
jmp
inc
sub
femms
out
push
pop
clc
jl
mov
insl
call
and
inc
jmp
fadd
clc
pop
sbb
jl
lret
clc
mov
rol
mov
and
clc
xchg
xchg
jecxz
sahf
sbb
negb
adc
clc
adc
les
in
push
clc
jle
les
xorl
push
jecxz
clc
push
rorb
inc
push
xlat
add
or
mov
in
rcll
call
gs
jb
xchg
loopne
mov
out
push
cmp
sub
clc
dec
and
add
dec
xchg
pushl
cmp
add
loop
clc
dec
xor
add
sub
stc
pushl
push
les
ficoms
cli
push
sbb
clc
imul
mov
inc
cld
push
mov
dec
fbld
cmp
push
leave
clc
push
testl
push
sub
add
add
les
or
xchg
lret
add
iret
mov
sahf
mov
add
add
lret
into
add
mov
add
sbb
lcall
pop
cli
out
add
ljmp
inc
lcall
jbe
out
hlt
and
iret
imul
call
aam
mov
lret
std
mov
or
and
inc
arpl
jge
nop
xor
lock
add
fwait
mull
data16
ret
and
pop
roll
jo
pop
sbb
sub
inc
ss
imul
out
and
out
and
adc
out
xor
mov
scas
lock
lock
negl
nop
rcll
rol
roll
out
and
imul
mov
xor
repz
add
hlt
loop
aam
enter
mov
jb
fdivl
rcrl
pop
and
into
xchg
loope
cli
mov
cltd
insb
out
das
mov
outsl
subl
mov
shll
add
hlt
dec
push
inc
repz
push
push
sti
in
inc
mov
out
cmpb
add
add
add
add
clc
sbb
cmpsb
jle
in
subl
add
into
or
into
mov
mov
xor
test
push
dec
mov
mov
mov
mov
ljmp
adc
addr16
add
sbb
idiv
cmp
pop
mov
stc
orl
arpl
mov
add
jecxz
icebp
lcall
test
inc
mov
sub
test
push
or
mov
pop
stc
lcall
inc
stc
jmp
in
div
aam
push
arpl
ss
and
mov
or
xchg
sub
ljmp
cmp
cwtl
sbb
and
daa
movsb
popa
pop
ss
and
jo
inc
dec
mov
sub
xchg
test
aaa
fdivr
adcb
popf
cmovo
xchg
test
mov
inc
arpl
adc
or
pushf
adc
es
ljmp
div
hlt
mov
fwait
outsl
bound
loopne
xchg
and
xchg
jp
ja
mov
mov
push
add
bound
add
add
insl
imul
lret
js
call
add
push
out
xor
nop
test
push
mov
pop
and
push
ljmp
mull
sub
test
sbb
iret
and
mov
scas
and
mov
fwait
push
pop
mov
clc
sahf
pop
ss
addl
sarl
mov
mov
in
push
lea
clc
pop
xlat
jb
fdivr
lret
xlat
mov
divl
mov
clc
es
lcall
mov
clc
push
pop
imul
notb
mov
clc
out
lret
out
lret
lock
add
iret
mov
into
shll
add
pop
stc
mov
push
stc
jmp
outsl
out
mov
sub
jmp
pop
pushf
jno
stc
inc
jbe
lret
std
xor
and
iret
ret
push
mov
sar
pop
insb
sbb
fiaddl
call
out
cld
push
adc
stc
jne
xchg
pop
outsb
mov
add
add
pop
push
xorb
add
jle
stc
call
mov
pop
stc
leave
testl
sub
lock
add
icebp
popf
pop
iret
insb
jnp
fdivs
into
sti
pop
rolb
idivl
mov
shr
push
iret
mov
inc
je
out
add
test
mov
testl
add
add
lods
pushl
pop
push
push
mov
decl
jl
push
pop
sahf
sti
dec
xlat
or
call
mov
add
xor
xorl
lods
decl
xlat
pop
outsl
mov
inc
add
leave
mov
int3
sbb
call
add
and
das
imull
stos
fimull
add
out
xchg
addl
add
mov
out
and
icebp
repz
das
repz
loop
add
mov
out
add
out
inc
mov
das
add
int
xchg
add
bound
inc
adc
dec
mov
sbb
xor
sti
sub
insl
jne
lret
mov
hlt
bound
cmp
push
imul
sbb
mov
add
add
out
pop
mov
lock
jmp
fidivl
mov
fs
clc
xchg
sbb
add
clc
outsb
sti
sub
clc
pop
jge
loope
jecxz
imul
mov
mov
add
out
sub
mov
jo
lock
jmp
push
xor
in
cmc
add
pop
stc
jmp
add
add
push
stc
mov
or
addr16
sti
inc
add
adc
imull
pop
stc
jne
mov
mov
pushl
outsb
pop
cmp
icebp
ljmp
jae
jbe
lcall
pop
stc
push
or
pop
stc
mov
push
stc
ljmp
rorb
inc
cmp
call
loop
idivl
push
stc
decl
jge
lret
mov
lcall
pop
jb
fstpl
out
div
push
sbb
maskmovq
notl
jmp
mov
jmp
adc
adc
xchg
pop
pop
mov
push
call
push
sub
xor
ljmp
add
sbb
inc
mov
lds
sbb
xor
pushl
jmp
push
fsubl
add
add
mov
aad
adc
adc
js
xchg
pop
pop
test
push
insl
sbb
mov
sbb
push
arpl
inc
mov
sub
bndldx
lock
adc
mov
jbe
mov
sbb
negl
sbb
data16
mov
dec
das
scas
xlat
sbb
cmp
clc
mov
xor
mov
sub
fdivl
adc
mov
cld
mov
or
add
add
pop
cltd
sbb
mov
adc
mov
sub
fdivrl
test
xchg
cld
mov
sbb
loopne
add
ljmp
fstl
lock
pusha
mov
pusha
cwtl
mov
push
cmp
loope
mov
sbb
bound
aas
call
mov
add
repz
fbstp
push
jb
loopne
mov
mov
add
sbb
mov
and
out
or
cmp
cmp
jo
outsb
add
push
pop
jecxz
sub
adc
dec
and
mov
hlt
sbb
or
jecxz
push
mov
cmpsb
jmp
or
lahf
pusha
push
call
jle
stc
pushl
sbb
push
mov
add
mov
loop
call
mov
inc
mov
xor
dec
hlt
scas
divb
cld
decl
addr16
jecxz
dec
stc
pop
add
les
repnz
sbb
pop
stc
jne
xchg
xchg
and
and
adc
add
mov
stc
push
inc
iret
or
add
add
mov
je
jne
sti
dec
or
push
jne
jl
sti
cmpsl
push
xchg
pop
dec
daa
je
xor
mov
dec
stos
scas
mov
ljmp
adc
repnz
xchg
sti
cmpb
scas
incb
add
and
dec
nop
pcmpeqw
sarl
rcl
jne
imul
jmp
notl
test
dec
ret
mov
mov
mov
or
add
push
insb
cwtl
in
fildl
je
incl
jecxz
insb
cwtl
add
mov
or
xchg
mov
fwait
sub
dec
cmpb
das
jge
mov
pop
arpl
in
jne
sti
add
pop
add
dec
adc
dec
mov
out
call
mov
daa
scas
cmpl
mov
xchg
sbb
stos
mov
cmpsl
dec
test
out
pop
in
out
add
lea
mov
je
rcll
icebp
clc
fdivl
mov
clc
mov
add
inc
sub
movb
aaa
adc
fdivr
push
jl
ret
daa
ret
rorl
add
add
add
add
jmp
jmp
mov
jmp
jmp
jg
push
bound
es
add
mov
movsb
in
pop
push
mov
cmpsb
jno
in
mov
clc
xchg
jns
negb
mov
add
or
cmc
movsb
movsb
mov
repz
jl
push
mov
mov
and
jb
mov
mov
repz
push
out
mov
or
stc
jne
fs
stc
loop
or
loope
rorl
sti
clc
imul
ljmp
fimuls
or
mov
mov
lcall
data16
add
notl
testl
call
in
stc
sahf
pop
and
mov
add
jl
pop
sbb
adc
out
ja
je
adc
push
sub
loop
adc
and
dec
mov
mov
adc
idiv
jns
inc
jb
adc
ss
decb
rclb
mov
imul
jmp
xor
neg
ja
decl
adc
std
popf
sti
iret
arpl
adc
cmp
adc
fdivs
sbb
pop
xchg
mov
mov
mov
in
fs
adc
pop
inc
mov
lret
cwtl
lock
sets
lods
xchg
sti
sbb
add
sbb
out
mov
sbb
jp
add
add
lods
push
hlt
icebp
aaa
out
jle
adc
add
push
mov
cmp
lds
out
clc
sbb
lods
jb
or
sti
xchg
push
scas
jb
adcb
pushf
lds
cld
test
data16
ret
stc
hlt
pop
lea
cmp
ret
cmc
lods
jb
cld
inc
xchg
ds
jb
out
push
inc
push
lods
clc
es
add
add
lods
jb
pop
cmp
add
lods
clc
push
lcall
in
aaa
push
add
pop
push
jo
cltd
ret
std
hlt
adc
jmp
jne
into
add
sbb
push
stc
fldt
mov
ja
add
adc
cwtl
clc
je
dec
xor
mov
inc
adc
add
inc
cld
scas
push
jae
mov
or
fwait
test
repnz
mov
out
cld
dec
aam
push
adc
cld
call
adc
aaa
pop
inc
push
push
jae
notb
add
sub
and
pushw
add
mov
nop
pop
dec
mov
sahf
or
xchg
jno
sar
sti
mov
sub
lcall
add
add
inc
iret
adc
jne
sarb
idivl
add
idivl
idivl
adc
idivl
mov
mov
jno
dec
xchg
pop
jne
push
and
xor
sbb
or
mov
mov
adc
jne
popa
loopne
cld
mov
iret
cwtl
in
push
add
pop
pop
push
shrb
jecxz
ret
push
mov
xchg
push
test
fwait
sbb
xor
movsl
ja
cmp
jnp
push
pop
imull
stc
cltd
push
cmp
out
push
lret
mov
inc
test
jg
xor
jnp
and
in
call
add
add
stos
xchg
lods
aas
movsl
add
std
jbe
loope
add
push
rcrl
and
push
mov
cmp
icebp
push
jmp
xor
popa
out
adc
stos
clc
cmpsb
mov
push
jmp
jmp
stc
cld
mov
cli
insb
cli
test
jp
repz
lods
add
repnz
push
stc
xor
hlt
bound
jmp
hlt
xlat
inc
xor
xchg
mov
add
jp
repz
mov
or
hlt
bound
add
test
jge
pusha
je
fwait
mov
divl
dec
sub
hlt
divl
dec
cwtl
lea
dec
sbb
adc
stc
mov
jp
inc
xchg
outsb
add
roll
call
sbb
add
sub
fsub
add
mov
repz
push
jae
or
add
js
stc
lcall
rolb
call
idivl
div
into
mov
mov
inc
or
ds
mov
bound
or
pop
xchg
add
loope
add
mov
add
xor
mov
sub
or
cmpsl
loop
add
mov
dec
mov
cmpsb
add
add
push
in
jg
pop
jmp
and
leave
or
and
stc
cmp
inc
das
bound
ficompl
cmpsl
vmwrite
pop
pop
aaa
or
idivl
popa
roll
call
add
mov
jne
int3
fsubrs
or
cmpsb
push
cld
fdiv
ret
or
fsubl
sbb
sub
mov
xchg
add
ds
mov
and
mov
icebp
add
pop
scas
nop
adc
je
mov
pop
nop
push
mov
jecxz
lret
jbe
and
or
mov
inc
dec
sub
jmp
mov
jb
cld
sbb
stc
das
or
lcall
out
sbbb
insl
cmpsb
clc
fidivs
clc
pop
fistpll
clc
cmp
mov
clc
cmp
mov
clc
sbb
mov
inc
push
lods
add
testb
idivl
flds
dec
lcall
jb
stc
pop
jo
out
cmc
lods
movsl
clc
loop
das
sub
ret
in
push
cmpsb
sub
cld
loope
or
popf
and
jmp
add
imul
repz
stc
or
aad
jnp
out
mov
stc
leave
pushf
test
push
gs
xchg
jp
stc
lcall
pop
push
add
pusha
lea
cmpsl
mov
add
movsb
in
push
pusha
push
incl
add
add
stos
loopne
and
or
pop
push
add
or
stc
xor
inc
lods
pusha
add
mov
lock
sub
dec
incb
popf
cmp
jp
ud0
ljmp
jb
ud0
ljmp
cmp
inc
js
icebp
mov
inc
clc
xor
jge
mov
add
enter
enter
jb
fimuls
lock
mull
sti
mov
idivl
decb
push
push
dec
ss
add
aaa
fiaddl
dec
out
add
mov
jae
dec
push
das
xchg
icebp
cmp
cld
mov
adc
mov
xchg
in
mov
pop
jno
add
add
adc
mov
mov
sahf
push
bound
pop
push
xlat
or
mov
movl
or
popa
dec
mov
jae
push
arpl
sbb
insl
scas
fmuls
push
mov
in
mov
jae
mov
imull
xor
sahf
in
clc
mov
in
adc
dec
icebp
mov
add
mov
clc
ss
clc
adc
sbb
or
clc
push
icebp
xlat
mov
aad
mov
imul
repnz
stos
fbld
rcrl
fcomi
mov
hlt
in
inc
pop
push
adc
mov
call
inc
and
add
or
imul
fldenv
ds
gs
shll
ljmp
addr16
shll
stc
divl
mov
jl
push
sbb
mov
sbb
rolb
mov
add
add
or
adc
mov
pusha
cli
jmp
in
clc
inc
and
add
add
add
data16
ljmp
mov
dec
inc
testl
push
jmp
punpckhbw
jno
add
stos
or
dec
les
pop
fnstenv
inc
sub
cmp
push
pop
cmp
sub
js
and
push
sub
inc
idivl
mov
jno
call
in
dec
mov
pop
and
add
nop
dec
mov
mov
bound
add
dec
inc
add
std
mov
adc
out
js
out
mov
bound
lahf
popl
inc
fimuls
jge
bound
test
outsl
add
pop
add
sub
divl
jecxz
data16
inc
add
mov
cmp
mov
sub
add
add
pop
int
push
pop
jl
imul
or
insl
lahf
jns
movaps
in
test
js
mov
daa
rcrb
out
sbbl
js
mov
inc
repz
or
arpl
pop
and
sahf
iret
mov
idivb
popf
or
add
adc
popf
jb
dec
mov
add
cmc
mov
insb
cmc
popf
imul
mov
mov
mov
stc
hlt
adc
movsb
xchg
cs
imul
push
xchg
and
mov
push
clc
push
or
mov
testb
xor
jmp
cmp
jmp
outsb
in
clc
cli
mov
out
add
cld
idiv
movsl
mov
scas
pop
iret
push
sti
outsb
out
pop
jb
stc
call
jbe
mov
jno
jae
icebp
adc
idiv
xchg
movsb
add
fwait
out
in
sbbl
in
inc
cld
jle
jae
mov
or
cmp
push
add
pushw
add
and
push
pop
xchg
testl
fs
insb
add
mov
push
bound
mov
cli
call
idivl
add
add
repnz
pushl
dec
add
sub
add
test
pop
ljmp
sbb
push
or
fs
idivl
out
inc
xor
in
int
and
sub
mov
add
insb
incb
incb
insl
jo
psrad
jmp
xchg
clc
out
cmp
lcall
outsl
sarb
mov
mov
xchg
mov
nop
or
and
mov
add
test
je
ja
xchg
imull
popa
dec
arpl
push
maxps
out
mull
jl
add
add
add
mov
out
add
and
out
imul
or
nop
mov
mov
stc
xor
jns
lcall
hlt
bound
enter
push
mov
inc
jmp
jmp
aad
jg
lock
sub
jmp
cmc
xchg
mov
clc
add
or
xchg
add
add
cltd
jb
dec
test
push
dec
cltd
clc
pop
mov
push
inc
orb
add
lock
clc
adc
clc
push
std
mov
push
cmp
mov
cwtl
push
push
jmp
mov
jmp
push
mov
flds
add
mov
es
jmp
out
mov
add
add
add
push
add
pusha
or
es
jmp
xchg
ljmp
jno
jbe
mov
jns
push
mov
xchg
divl
jbe
fsts
idiv
and
jne
fsin
mov
idiv
mov
dec
xchg
inc
clc
out
cli
jmp
arpl
testl
into
sti
dec
mov
fmuls
or
jle
push
push
dec
test
divl
pop
pop
ss
je
mov
insb
and
dec
add
ret
inc
div
outsl
or
jb
pop
mov
insb
add
mov
push
add
addr16
inc
add
mov
ja
jo
pop
sub
insb
add
add
add
mov
mov
push
adc
subl
jg
dec
mov
out
push
insb
xchg
jne
mov
rcll
push
hlt
and
out
push
iret
push
pop
sti
mov
pop
insb
mull
mov
divl
test
decl
inc
insb
mulb
mov
divl
xorb
sub
popa
xchg
xchg
xchg
addr16
add
add
push
push
jl
imul
or
insl
adc
rorl
pop
add
mov
cmpsb
push
push
or
clc
xchg
rcll
clc
push
cld
or
push
imul
in
xchg
clc
addr16
clc
jl
mov
stos
enter
fdivs
shr
ss
jmp
fnstcw
les
add
std
jmp
add
add
je
mov
jb
pop
sub
repnz
jle
data16
repz
push
add
jmp
hlt
mov
jge
xchg
or
mov
push
adc
aad
or
adc
or
push
inc
push
mov
test
ficoms
push
dec
in
push
inc
into
test
jmp
pop
inc
into
lcall
pop
push
shr
stc
xor
popa
lods
pop
fistps
les
and
mov
pop
inc
pop
popa
push
add
add
leave
mov
andl
jb
mov
lret
or
pop
inc
testl
xchg
pop
mov
lds
mov
xor
mov
je
repnz
jl
or
mov
or
repnz
add
sub
sub
ret
or
cmp
sub
notl
sub
mov
and
or
add
add
lret
pusha
inc
push
mov
mov
push
arpl
push
dec
mov
fs
jmp
mov
jmp
out
aaa
clc
shlb
add
or
repz
mov
add
xor
or
push
orb
sbb
jbe
rorl
mov
xchg
imull
xchg
adc
cs
sahf
ljmp
xchg
imul
sbb
inc
daa
mov
mov
arpl
jnp
jg
shrb
test
outsb
frstor
lods
inc
and
hlt
pop
xor
jmp
repz
jb
sub
sahf
mov
test
cmp
jmp
pushf
cld
xchg
adc
and
push
push
addr16
stc
jl
xchg
adc
and
push
push
xor
fildl
xor
movsb
or
inc
fsubrp
push
add
add
clc
xor
jp
mov
iret
stos
in
stc
adc
jp
inc
imul
push
jmp
stc
jne
jle
std
fstps
int
data16
mov
daa
push
push
push
xchg
fstps
sbb
xchg
data16
scas
cmp
push
call
aad
pop
test
addr16
add
cli
push
flds
or
mov
pop
inc
fsubp
les
lds
push
add
mov
ss
incl
addr16
mov
nop
pusha
fbld
les
out
add
jnp
je
loopne
lcall
test
fisttpl
add
jb
call
je
and
ljmp
and
shl
inc
add
jnp
jl
add
add
jnp
test
addl
scas
add
test
push
call
cmp
psubsw
inc
bound
add
mov
repnz
into
add
idivl
cmp
sbb
testl
add
bound
insb
xchg
add
add
push
xchg
adc
add
mov
or
add
jp
jb
bound
add
push
inc
jmp
adc
add
mov
int
idivl
jb
bound
add
adc
out
add
inc
insb
ss
add
imul
jle
divl
push
mov
sub
or
out
fsubrp
jecxz
stos
cmp
out
add
mov
xor
add
add
std
push
sahf
out
mov
fsubl
clc
mov
xchg
push
xchg
adc
clc
jle
mulb
push
add
jb
sbb
and
jb
ret
jp
dec
and
mov
push
xor
jle
mov
cli
add
xchg
in
xchg
imul
clc
xchg
mov
inc
test
lds
push
add
loope
out
add
add
pop
ljmp
clc
into
pop
xchg
in
add
idiv
push
or
call
push
or
call
xchg
cli
incl
imul
stos
test
rcll
mov
or
call
xchg
cltd
push
call
add
movsl
inc
jmp
loop
or
in
add
fisubs
add
pop
dec
cmp
sbb
push
mov
out
mov
xchg
jno
xor
sub
add
or
testb
push
add
mov
push
jmp
mov
push
pop
fdiv
mov
jg
icebp
jge
testl
hlt
jnp
ljmp
add
add
and
mov
idivl
inc
sbb
ljmp
jns
add
push
call
pop
jno
dec
andl
idivl
decl
pop
pop
push
arpl
add
ss
add
xor
jbe
sti
or
arpl
dec
pop
arpl
dec
cs
scas
ja
push
popf
ja
push
mov
jp
in
add
push
cmpsb
jbe
add
add
mov
out
add
inc
andl
testl
mov
lock
out
add
bound
negl
dec
cmc
out
pop
shrd
stc
fldcw
add
xchg
xor
out
lock
out
cld
mov
insb
repnz
push
jmp
hlt
bound
shrb
push
out
call
pop
pop
popl
inc
shl
bound
jmp
hlt
fistpll
cmc
adc
shrb
push
jmp
hlt
bound
out
push
fisubl
hlt
out
xor
push
push
jp
aam
fidivrl
cmp
out
in
bound
inc
outsl
bound
jmp
icebp
fildll
hlt
bound
push
repz
sldt
add
add
sbb
add
pushw
jmp
mov
push
add
movb
pushw
rol
clc
decl
pushw
add
pushw
add
mov
incl
jnp
adc
lahf
divl
scas
add
leave
js
inc
xchg
jns
aam
xchg
stc
lcall
push
mov
jne
cs
add
add
pushw
push
fisubl
push
jns
rolb
jbe
fimuls
mov
pop
repnz
daa
hlt
mov
je
arpl
idivl
mov
push
cmp
call
daa
xor
pusha
ss
je
mov
frstor
jle
pop
mov
add
arpl
sub
jnp
push
fisttps
inc
notl
jno
dec
out
pop
add
xor
sub
xchg
les
jno
pop
pop
add
jmp
je
xor
stc
add
inc
cmp
jno
fbld
pop
mull
in
imul
jnp
lret
imul
jae
je
aaa
add
cmp
in
and
mov
mov
in
and
out
mov
cmp
nop
xchg
in
jno
sbb
or
fldt
in
in
dec
push
mov
xor
outsl
in
cmp
mov
in
sub
dec
in
sbb
xchg
fisttpl
aas
in
sbb
popa
push
mov
mulb
jmp
push
and
push
dec
xchg
in
adc
arpl
repnz
add
xor
jmp
hlt
bound
adc
push
fisubs
xchg
in
mov
mov
add
hlt
stc
cmp
jg
imul
xor
clc
sahf
dec
mov
inc
or
fs
clc
xchg
xchg
cld
in
jbe
push
ljmp
push
idivb
or
jmp
add
mov
in
or
mov
add
adc
add
bound
mov
arpl
jmp
rcll
call
movsl
mov
inc
inc
mov
adc
hlt
cmp
lcall
call
out
mov
cmpl
fistpl
out
dec
js
lret
lahf
cli
jmp
jl
incl
add
add
dec
imul
jnp
test
in
mov
js
idivb
lea
out
lock
add
idivl
clc
add
idiv
inc
sub
in
dec
ss
or
add
mov
push
jmp
jp
sar
movsb
jo
lret
dec
pop
cld
inc
cmp
call
in
mov
add
adc
daa
jle
pusha
nop
les
add
call
jnp
je
repz
addl
or
jnp
je
in
subl
pusha
ja
mov
mov
push
jb
aas
push
cmpsl
test
call
ljmp
jmp
not
lods
pop
jle
cmp
roll
hlt
or
cs
into
xchg
jmp
and
cld
dec
movlps
cs
push
fcmovnu
jg
cmpsl
call
popa
test
faddl
in
add
push
jmp
xchg
test
outsb
pop
jnp
jmp
xchg
and
push
popa
shl
dec
pop
jl
aam
bound
jb
and
cs
outsl
out
stos
pusha
test
push
mov
notl
fists
out
bound
add
add
clc
cltd
iret
push
push
decb
push
mulb
pop
out
pop
pushf
test
shll
ficoms
test
pop
sub
push
push
popa
je
std
out
mov
pop
test
je
add
jp
sub
out
in
sub
xorl
data16
insb
add
das
outsb
add
sbb
cli
mov
pop
push
push
mov
jnp
mov
xchg
jne
jge
jne
jge
je
push
mov
jne
sahf
mov
mov
mov
decl
mov
inc
push
stc
jne
push
stc
jne
sahf
pusha
cli
mov
mov
jecxz
cli
lcall
xchg
incl
mov
incb
fbstp
add
add
add
add
loopne
pop
pop
pop
add
adc
out
mov
adc
decb
inc
jbe
lock
loopne
scas
dec
icebp
incl
rolb
inc
mov
loopne
mov
add
ljmp
pavgw
in
lret
push
or
mov
or
iret
jnp
js
les
add
add
inc
mov
loope
repz
fsin
or
in
outsb
xchg
jbe
jg
mov
push
xchg
shlb
out
in
jbe
fidivs
pop
jnp
jp
fsts
out
daa
inc
pop
notl
add
daa
mov
jmp
mulb
in
in
mov
out
add
testb
iret
jle
add
add
add
out
add
hlt
jb
out
add
jmp
call
je
out
add
or
dec
push
insl
jmp
lret
mov
hlt
jg
cltd
pushf
mov
enter
push
andl
idiv
shl
or
leave
mov
push
inc
test
jmp
and
icebp
inc
and
clc
es
in
aad
int
cmp
pop
fs
and
xchg
hlt
cmc
out
sbb
out
adc
scas
xchg
cmp
adc
stc
cwtl
insl
stc
push
mov
jno
inc
fdivr
jmp
xor
xchg
cwtl
stos
cmp
subl
idiv
jmp
loopne
lock
sub
idiv
sub
add
adc
cmp
sub
jne
test
inc
adc
iret
ret
push
mov
out
call
imul
je
push
or
sbb
sahf
or
pusha
pop
stc
jne
xorl
mov
je
dec
xor
ret
js
les
repz
call
jne
jecxz
aaa
pusha
stc
incb
add
add
arpl
call
cmpsl
in
pop
call
pop
xchg
out
sub
jl
or
sarb
mov
testl
dec
clc
jp
fmuls
mov
bound
rcrl
add
mov
push
cmp
testl
add
mul
add
mull
inc
mov
fcoms
add
add
test
add
mov
inc
popf
mov
push
xchg
push
jbe
xchg
loope
jp
in
mov
xchg
outsl
daa
xchg
loope
pop
js
add
out
and
mov
jge
loope
mov
cmpb
mov
push
xor
or
add
divb
in
adc
pop
loope
mov
add
mov
or
mov
jnp
or
jge
movsb
mov
and
jmp
jns
test
cmc
bound
shll
cmc
data16
or
mov
outsb
data16
push
xchg
jmp
jnp
icebp
sbb
idivl
add
or
push
sarl
inc
jmp
je
jb
or
testl
jl
cltd
int3
adc
hlt
jnp
and
leave
stc
clc
push
lods
mov
jmp
test
inc
stc
jne
xchg
inc
stos
or
inc
out
call
sbb
pop
das
out
pusha
into
fwait
notl
pushw
out
fmuls
mov
jmp
outsb
out
dec
mov
imul
adc
stc
call
mov
add
pop
mov
dec
pop
add
push
pop
out
stc
xor
push
repz
into
push
andl
daa
inc
add
sbb
call
mov
mov
lret
add
js
inc
add
mov
ja
pop
or
decl
dec
pop
out
pop
add
mov
or
shlb
fsin
ds
add
mov
fcomp
cmp
push
loopne
or
je
jmp
add
xor
pop
mov
add
testl
add
testl
inc
add
bound
bound
fimuls
lcall
lahf
or
adc
add
arpl
imul
add
gs
add
pop
or
sub
fnsave
imul
dec
pop
dec
add
jns
loopne
out
imul
sub
xchg
movsb
ljmp
outsb
sbb
or
imul
jecxz
fcoml
jmp
fbstp
pop
andl
pop
xchg
jns
fnstsw
or
add
bound
inc
into
incb
test
or
mov
and
push
or
jb
mov
mov
and
push
jp
inc
jmp
je
jb
pop
mov
cmpb
aam
jmp
and
or
mov
jmp
push
cmp
push
add
add
add
ja
icebp
sbb
jo
and
inc
push
xor
leave
xor
arpl
lea
cli
jmp
xor
add
arpl
call
pop
fs
into
or
popa
pop
arpl
jg
push
ljmp
inc
inc
mov
cli
call
pop
outsb
das
push
push
push
pusha
push
add
fwait
jno
ss
xor
nop
fwait
notl
imul
adcl
stc
jmp
add
sti
out
sbbl
add
stc
jne
mov
notl
fisttpll
pop
push
pusha
inc
notl
les
filds
les
mov
sahf
addr16
jmp
push
or
fs
add
pop
pusha
inc
mull
sti
popa
mov
xor
add
pop
lcall
les
pop
push
test
inc
add
ret
sub
scas
js
cmc
push
or
ds
decl
arpl
mov
or
sub
dec
push
lds
pop
dec
inc
push
out
mov
fdivs
inc
rorl
out
jmp
negl
mov
add
sub
out
add
and
xor
shr
cwtl
jmp
fimull
and
mov
loop
add
pop
push
das
aad
out
xor
dec
add
imul
xor
out
call
mov
pop
fldcw
jne
jbe
sub
mov
scas
je
push
aam
pop
cli
sbb
add
add
jne
xchg
add
mov
imul
and
test
lea
out
push
xchg
shll
icebp
mov
jo
scas
jmp
in
jnp
xor
lea
sub
je
push
push
sub
outsb
dec
mov
push
rcl
std
add
into
push
mov
adc
jmp
sub
add
add
adc
add
push
imul
pop
sbb
pushl
inc
sbb
jae
push
mov
rolb
stos
cmp
and
jmp
xchg
jbe
fwait
push
pop
pop
sahf
add
and
and
outsb
add
jne
xchg
jne
mov
push
pop
jle
iret
pop
outsb
add
pop
stc
call
je
incb
dec
push
mov
arpl
das
stc
jne
xchg
test
sar
and
mov
in
ror
xor
or
add
and
push
or
mov
loopne
inc
cld
dec
jl
out
xchg
movsb
mov
jl
rclb
incl
in
pop
push
pop
sar
and
je
push
jae
cwtl
jno
sar
xor
sti
or
pop
or
sub
sar
jle
fisubs
jnp
mov
mull
loop
mov
iret
je
bound
imul
adcb
cli
mov
bound
jp
movsb
or
push
add
or
xor
icebp
fwait
sub
call
cmpsb
inc
mov
je
pop
arpl
lret
adc
push
out
cld
out
inc
push
sbb
adc
cs
rcr
mov
jo
out
imul
lock
sti
cld
out
push
addr16
add
arpl
mov
imul
out
add
movsb
ljmp
movsl
stc
bound
push
sti
into
bound
sbb
jno
loope
stc
cld
or
rcll
add
add
cli
pop
lea
jmp
hlt
outsl
jb
pop
jo
fneni(8087
cli
add
lret
hlt
bound
stc
push
arpl
xor
jl
sub
pushf
jo
in
jecxz
ret
aad
fistl
jg
mov
testl
jmp
es
addl
and
lret
clc
lcall
lea
add
add
ficoml
lea
lret
dec
jno
jno
or
cmp
jns
andl
divl
xchg
and
dec
pop
stc
push
out
das
call
dec
scas
add
mov
int
push
inc
fistl
lcall
notl
ss
ret
push
mov
xchg
notl
inc
push
mov
notl
add
add
stc
jne
or
repnz
pop
mov
push
scas
aam
idivl
add
std
cmp
js
addb
std
sub
xor
sbb
adc
ss
clc
aam
repz
xchg
sti
stc
pop
aad
xchg
aad
loopne
lock
bound
je
and
out
xchg
mov
aad
xchg
popa
lods
mov
icebp
out
decb
aam
mov
or
inc
rorb
bound
jg
in
lret
push
iret
cmp
jle
loopne
lret
push
outsb
mov
frstor
add
clc
fcmovbe
cmpsb
sub
stos
add
add
shlb
and
sarb
push
or
bound
test
shrb
add
add
insl
mov
iret
fcomp
mov
ror
insl
pop
rorb
sub
insl
cltd
sti
dec
jnp
shrb
rolb
inc
fwait
sarb
cmpb
arpl
mull
mov
out
insb
clc
cmp
iret
stos
mull
bound
jb
daa
negb
mov
testb
fadds
push
jmp
icebp
adc
sbb
add
add
insl
jb
cmp
je
es
jb
daa
notb
mov
mov
js
insl
jb
mov
insl
jb
lods
pusha
jmpw
push
and
pushf
pushf
test
pushf
test
jb
negl
decl
xor
aam
pop
xchg
divl
jmp
add
notl
add
add
adc
idiv
movsb
data16
add
in
addl
add
divl
push
push
push
mov
pusha
push
pusha
roll
pusha
push
add
hlt
negl
push
add
pop
roll
pop
push
add
in
testl
pop
lea
out
push
push
in
xor
testl
dec
cmp
testb
aad
jmp
push
or
jns
je
lea
inc
je
fdecstp
pop
pushf
add
jnp
add
idiv
xchg
jmp
mov
jmp
jns
test
enter
xlat
mov
div
mov
or
enter
sub
testl
shl
or
add
and
add
add
add
sub
call
jb
pop
and
push
add
jns
pop
incb
out
iret
mov
fstpt
out
add
xlat
mov
aaa
dec
inc
not
imul
pop
cld
dec
add
pop
scas
push
in
mov
fildll
mull
cwtl
sbb
into
imul
jg
sbb
ja
jno
mov
stc
imul
cmp
in
pop
idiv
out
pop
idiv
out
cmpb
into
leave
adc
clc
jg
push
test
pop
mov
push
std
mov
push
clc
push
shr
push
outsl
xchg
lock
mov
adc
xor
jo
out
sti
push
jmp
rorb
xor
cmp
clc
cmp
add
add
mov
dec
push
clc
sahf
xor
in
or
bound
mov
push
push
adc
jge
lods
arpl
stc
hlt
lock
bound
and
in
add
jmp
lea
adc
call
lds
push
ss
into
inc
sub
jecxz
adc
xchg
sub
pop
adc
jmp
add
add
dec
or
or
dec
jmp
or
fs
push
jmp
jno
ss
inc
rcr
loope
adc
mov
gs
xchg
clc
lcall
xchg
jno
out
gs
push
jmp
fcomps
arpl
fdiv
test
lahf
jne
and
idivb
int3
daa
xor
pop
test
inc
testl
call
cld
cmp
andl
add
mov
sti
add
testl
loope
aaa
jnp
inc
xchg
xchg
inc
mov
push
enter
mov
jns
cmp
inc
inc
add
gs
mov
arpl
push
push
inc
mov
arpl
add
add
add
das
xor
push
xchg
aas
ss
ret
inc
xor
arpl
add
pop
xor
std
daa
push
loopne
sbb
gs
mov
push
xchg
push
divl
fsubl
out
lret
sub
pop
pop
out
add
mov
pop
hlt
iret
lret
mov
lret
lods
idivl
pcmpgtb
jne
cmpsb
js
ds
mov
add
add
das
or
idivl
sub
bound
jmp
bound
bound
addr16
pop
pop
mov
or
sub
fstl
mov
and
jmp
hlt
bound
es
mov
movsb
inc
cmp
inc
sub
icebp
push
bound
inc
mov
fadds
and
push
shrb
dec
pop
cmp
loop
lods
hlt
out
inc
push
mov
or
call
test
push
pop
push
add
mov
push
add
into
inc
mov
jne
mov
std
cmp
ds
into
pusha
test
pop
jb
fsts
fsubrp
lret
add
in
incl
add
add
notl
out
cld
add
fwait
push
or
popf
add
and
in
adcl
arpl
pusha
jae
xchg
lods
arpl
pop
pop
add
pusha
mov
jmp
add
es
ret
push
cmpl
idivb
inc
idivl
sub
add
je
orl
add
jae
add
mov
lock
jecxz
mov
jns
add
cmp
clc
idivl
add
rorb
int3
dec
sbb
mov
cmp
add
jae
add
clc
divl
idivl
or
add
jnp
add
div
push
cld
push
testl
xor
imul
cmp
bound
add
lods
add
lea
scas
add
inc
mov
mull
inc
iret
mov
add
arpl
add
arpl
cmpsl
mov
icebp
pop
scas
scas
add
and
add
mov
mull
cli
mov
xlat
jecxz
call
fcomps
cmc
pop
sti
rolb
bound
fcoms
and
test
test
hlt
or
insb
mov
xlat
cli
xchg
out
sub
ror
call
in
popa
arpl
push
inc
movsl
int
dec
inc
cmpsl
cli
push
xor
bound
imul
push
mov
mov
aad
cmp
sub
gs
jne
jmp
fs
mov
popa
jb
cmp
push
shll
incb
lds
ss
push
or
push
call
push
mov
call
popa
mov
jmp
loopne
loop
stc
leave
pushf
arpl
push
push
cmp
push
gs
or
fsubl
fisubs
jae
ss
pop
add
jecxz
add
sub
leave
int3
pop
clc
rolb
ficoml
pop
gs
xchg
loop
add
fstpt
add
in
xor
pop
js
pop
scas
add
test
test
mov
cli
jg
mov
sub
jne
pop
cs
dec
cmp
lret
xor
sarl
fists
mov
mov
sbb
pop
rolb
add
cmp
and
mov
add
xlat
dec
inc
lea
vandpd
or
pop
jae
lahf
nop
dec
or
rol
jbe
add
dec
xchg
add
add
lea
jecxz
push
jecxz
push
bound
dec
mov
sbb
and
jne
mov
dec
sti
jmp
mov
push
out
sbb
sbb
jge
cmc
mov
push
gs
jmp
sti
mov
arpl
jecxz
mov
add
xor
add
sbb
imul
jl
insl
enter
jecxz
pop
inc
add
pop
and
xlat
in
stos
int3
or
outsl
test
sub
sub
pop
xchg
xchg
movb
sti
out
testb
add
push
pop
clc
pusha
scas
push
outsl
jmp
add
idivl
sti
addb
dec
pop
push
xor
bound
jmp
xor
pop
jb
sbb
bound
sti
pop
jb
mov
ret
push
shrl
push
mov
or
fbstp
shlb
out
arpl
arpl
push
add
add
lret
andb
cmpsl
xchg
adcl
divl
mov
jne
push
xchg
pop
dec
popa
add
and
lret
push
and
ss
add
out
or
xchg
push
push
imul
or
into
and
dec
xchg
or
repz
inc
inc
fimuls
push
jo
and
add
lea
pushl
stc
jne
and
fists
push
call
pop
movsb
fisubrl
and
divl
js
out
mov
lods
sub
pop
mov
xlat
mov
lret
xor
xchg
inc
add
xor
cmp
inc
aam
dec
je
sbb
out
mov
lods
std
mov
sbb
je
in
xor
add
add
push
out
ss
lods
in
aad
mov
incb
test
ss
jmp
dec
cmpl
test
add
rorb
lcall
addr16
add
filds
xchg
out
mov
xor
repnz
pop
aaa
pop
cmpl
fldl
sbb
cmp
dec
shrl
pop
test
or
push
mov
stc
aam
stos
pop
int3
cmpb
imul
dec
pop
popa
cmp
jg
mov
mov
sbb
push
push
pop
pop
ss
lret
outsl
andl
lret
pop
jb
pushf
and
test
or
add
pop
jb
mov
jb
pushf
fs
sbbl
into
jno
jb
pop
push
insb
mov
dec
dec
insb
scas
push
pop
jb
pop
inc
insb
sahf
inc
pop
jb
dec
cmp
mov
xor
pop
jb
mov
insb
outsb
xchg
pop
jb
pushf
and
pop
jb
mov
insb
dec
jno
jb
or
mov
loope
stc
jne
add
add
or
stc
jne
or
iret
ret
push
mov
ret
call
fwait
sbb
fldt
xor
rcll
dec
push
bswap
jp
add
push
inc
clc
push
gs
add
repnz
gs
push
mov
push
mov
fistpl
dec
lea
scas
divl
push
jae
xchg
push
add
imul
fisttpl
outsb
mov
divl
or
iret
sbb
mov
mov
cwtl
cli
push
call
jle
stos
testb
mov
push
pusha
push
mov
add
sub
inc
roll
xorb
sub
pop
je
mov
mov
adc
add
cmp
jbe
cmpsl
div
call
xor
mov
shrb
sbb
bound
leave
push
pop
mov
mov
xchg
stos
mov
imul
push
xor
mov
fiadds
push
push
cwtl
ficoms
mov
popa
dec
pop
sub
icebp
jne
dec
jmp
stos
push
pop
fnstcw
xor
xor
pop
xlat
mov
mov
xchg
mov
push
push
insb
inc
insl
shr
in
sub
iret
in
add
mov
neg
in
dec
movsb
pop
jl
clc
fsubrl
jb
pop
adc
pop
sub
in
scas
mov
and
xchg
and
push
jb
dec
mov
push
lods
jmp
or
mov
stos
inc
jmp
mov
ret
dec
mov
lods
push
jmp
dec
sarb
push
push
push
repz
out
fsubl
arpl
repz
sbb
dec
aam
cmp
push
clc
xor
xchg
mov
sbb
lcall
stos
cmp
xchg
mov
jne
add
add
sbb
out
add
and
and
push
push
sbb
decl
popa
push
add
inc
or
pop
clc
je
inc
mov
ret
mov
jmp
fistpll
dec
test
mov
outsb
lea
cmp
out
jbe
sbb
addl
add
shrb
stc
or
xchg
add
push
add
and
mov
inc
iret
roll
in
pop
mov
or
stos
mov
mov
pop
sar
mov
mov
jle
cmpl
jl
add
or
jmp
inc
dec
roll
add
notl
cmpsl
mov
out
jle
jbe
add
add
jo
enter
dec
in
inc
mull
mov
mov
mov
cld
dec
push
mov
jmp
repz
cmp
push
jg
in
add
pop
dec
mov
push
jne
add
addl
jecxz
xchg
or
mov
dec
into
add
add
add
sbb
in
add
xor
dec
lret
push
pop
or
jbe
mov
push
cmp
sbb
cmc
stos
out
mov
push
aad
cltd
push
sbb
inc
dec
jo
push
mov
dec
loopne
jmp
mov
xlat
jbe
pop
out
lahf
adc
and
pop
xchg
out
clc
aam
dec
adc
popa
push
clc
mov
add
add
push
leave
inc
push
cmp
hlt
mov
punpckhdq
push
pop
pushf
ljmp
pop
rclb
mov
pop
jmp
lock
jmp
out
out
aad
push
clc
bound
jbe
push
test
push
mov
pop
add
mov
cld
jmp
sbb
push
push
stc
jne
call
or
lret
jne
add
add
fiaddl
ficomps
jae
es
call
inc
adc
dec
mov
mov
pop
out
or
imul
sbb
lea
adc
add
add
pop
gs
add
lds
sub
fs
add
nop
push
pop
stc
jmp
idivl
mov
xor
bound
sbb
add
sub
xchg
loopne
add
idivl
xchg
sub
enter
dec
inc
lods
sbb
cmp
add
sti
scas
aaa
cld
inc
mov
nop
xchg
stos
idivb
add
add
pop
jne
mov
adc
cmp
je
popa
dec
bound
mov
add
push
push
repz
out
pop
mov
dec
mov
add
bound
addr16
loope
std
mov
pop
lds
dec
rorl
mov
and
icebp
dec
xchg
mov
in
andb
add
adc
js
cmp
rorb
mull
stos
sbb
int
std
sub
cmc
mov
pop
push
aam
push
xor
arpl
add
pop
mov
cmp
ss
jp
push
aad
sub
dec
pop
jl
cmp
pop
bsr
push
repz
clc
into
jp
add
in
or
sbb
hlt
negl
mov
inc
xchg
dec
cmp
movsb
dec
out
test
bound
push
pop
or
insl
repnz
jmp
hlt
mov
push
inc
xor
inc
jb
pop
jmp
adc
jno
bound
jmp
hlt
loope
in
xlat
or
repz
add
mov
jge
dec
jbe
push
cmp
xchg
or
push
mov
jae
mov
or
mov
ljmp
xchg
adc
mov
add
add
clc
jne
jmp
stc
jne
outsl
add
ret
adc
std
sbb
stc
jne
ljmp
mov
jmp
in
or
xchg
push
or
mov
dec
dec
clc
lcall
mov
idiv
scas
or
push
shl
dec
mov
inc
jae
fs
push
jl
aas
cmp
adc
scas
mov
je
and
sbb
je
mov
incl
and
je
repnz
in
push
idivl
add
repnz
add
cmp
mov
insb
cmpl
rolb
shrb
or
pop
call
dec
add
xchg
pop
pushl
mov
push
insb
aas
gs
out
xlat
mov
jge
pop
test
jb
aaa
clc
xlat
lcall
into
stc
add
dec
pop
or
insb
cs
bound
sti
jge
in
jo
insb
add
divl
mov
adc
in
add
bound
and
add
in
test
pop
in
pushl
push
dec
sbb
mov
cmc
test
add
add
pushl
push
and
pop
sub
movsb
pushf
dec
jb
mov
pop
push
cmpsl
and
sbb
shll
repnz
xchg
push
add
dec
clc
out
push
cmpsb
ljmp
add
inc
iret
push
add
lods
push
mov
push
push
adc
loop
sar
cmpsb
jmp
xor
mov
and
jmp
cmp
nop
dec
mov
cmpsb
ds
pop
jmp
jbe
idivb
popa
iret
push
add
jp
inc
int
lock
je
stc
jb
push
pop
incl
cs
or
daa
dec
call
int
out
add
data16
lea
cmpl
jno
xor
idiv
cmc
push
pop
pop
xchg
and
pop
xchg
loop
or
into
gs
mov
outsl
divl
enter
sti
loopne
mov
loopne
stc
clc
mov
lea
int3
jb
mull
inc
xchg
cmp
divl
dec
hlt
in
test
pushl
cli
pusha
push
test
xor
je
mov
jl
cmp
or
add
add
into
mov
and
stos
adc
test
pop
cs
push
add
stos
call
fiadds
je
mov
xchg
mov
dec
stos
je
mov
lcall
in
add
test
mov
jl
insl
enter
das
out
mov
inc
in
add
cmpsl
es
add
add
and
pop
jl
jns
jb
out
fldcw
sbb
inc
jae
cmp
in
arpl
std
add
mov
jne
or
ss
xor
adc
lods
icebp
fldenv
mov
int
lods
imul
cmp
lods
dec
outsl
mov
cmp
rolb
mov
dec
jb
mov
pop
data16
add
push
dec
jb
dec
into
push
inc
mov
testl
inc
je
ja
cli
in
push
subl
pop
xor
jae
dec
fcom
inc
jmp
mov
call
xor
int
or
insb
pop
pop
jno
dec
into
adc
out
out
add
sbb
hlt
popa
push
shll
divl
pushf
cmp
adc
add
add
xor
inc
mov
fildl
add
cmp
in
mov
jb
cmp
neg
inc
lods
stc
clc
sub
cltd
int
andb
cmp
jno
push
add
stc
in
outsb
aad
repnz
add
fs
push
jmp
xchg
idiv
stc
xchg
adc
ret
dec
loopne
mov
clc
mov
outsb
add
xchg
adc
ret
inc
loopne
es
clc
mov
jb
cmp
xchg
pop
inc
adc
in
aas
cli
clc
sub
popa
divl
stc
jb
imul
ss
enter
dec
push
pushf
xchg
mov
inc
std
and
fwait
lds
mov
mov
cmp
mov
lea
xor
or
push
cld
out
jge
in
jnp
test
add
add
cmpsl
out
fisubrl
xor
cmp
je
scas
or
mov
push
pop
add
not
inc
hlt
insb
aas
push
cmp
sbb
inc
cmc
daa
or
arpl
dec
fadds
ror
stc
test
pop
test
inc
cmpl
iret
loopne
and
inc
push
inc
popa
fstpl
ss
in
in
add
inc
cwtl
addb
aaa
aam
jo
fldcw
push
outsb
insb
jmp
iret
loopne
ret
dec
push
adc
inc
add
js
movb
out
push
aad
add
aad
mov
insl
fwait
cld
and
fnsave
xchg
test
inc
out
mov
loopne
adc
push
leave
jae
out
or
ljmp
jp
mov
add
xor
add
add
cmp
jle
pusha
push
mov
cmp
jo
add
inc
in
ljmp
divl
cmp
sub
push
notl
inc
sub
scas
sbb
flds
mov
mov
xchg
push
shrl
clc
ficoms
es
mov
clc
add
add
add
insb
cmpl
jb
xchg
je
sti
cs
jne
or
popa
xchg
push
jmp
loopne
jne
stc
inc
mov
decb
sbb
cli
call
or
inc
cmpsb
pushw
iret
push
add
push
push
push
add
loopne,pt
xor
stc
push
adc
lret
add
jae
xchg
inc
or
clc
pushl
jae
call
out
pop
idiv
roll
inc
push
or
leave
fidivs
testl
pop
cs
cld
in
cmp
mov
in
jmp
in
mov
dec
testl
leave
mov
add
call
ds
out
test
add
mov
or
out
inc
mull
inc
gs
mov
dec
testl
add
inc
mov
mov
or
cmpsb
out
inc
add
sti
out
hlt
add
cld
mov
or
mov
jno
mull
add
in
inc
ds
add
sbb
bound
idivl
cmp
fcomps
and
das
stc
lahf
aaa
mov
insb
xor
out
dec
out
pop
xor
push
add
mov
add
and
insl
cmp
mov
inc
and
sub
imul
ret
test
pushl
mov
ja
repz
add
fmuls
insb
insl
in
mov
cmp
jp
cmp
cmp
addb
rcrl
shlb
inc
loope
bound
jmp
mov
mov
fistl
bound
sbb
add
add
daa
inc
popf
cmc
bound
jmp
mov
jmp
stos
pop
mov
jmp
loope
mull
cmp
jmp
cwtl
bound
stos
push
push
mov
in
jns
outsl
pop
xchg
push
mov
imul
xchg
jmp
and
inc
subb
cmc
imul
filds
add
add
repnz
arpl
mov
or
jae
nop
push
jmp
fistl
movsl
add
inc
and
or
mov
loopne
inc
hlt
shl
cmp
mov
jns
or
add
pop
dec
das
movb
mov
or
in
adc
push
or
inc
dec
bound
cmp
inc
idivl
fildl
sahf
inc
add
leave
pop
add
dec
fildl
movb
enter
dec
fildl
into
inc
add
enter
dec
xchg
inc
jmp
xchg
inc
out
pop
xchg
inc
jecxz
mov
add
pop
repnz
add
dec
push
mov
orb
lea
dec
movsl
je
in
notl
sti
xchg
inc
xchg
sti
xchg
inc
xchg
sti
movsb
xor
mov
add
repz
jae
pop
negb
mov
pop
and
out
add
arpl
add
xchg
loopne
dec
test
loope
out
arpl
add
add
out
add
bound
js
test
in
add
bound
pop
fwait
call
add
xchg
popa
jl
test
inc
jno
dec
mov
pop
mov
xchg
mov
sub
bound
arpl
out
cli
push
jmp
fwait
jnp
push
xchg
jmp
and
sub
jl
inc
pop
pushf
push
cmp
push
add
push
jmp
mov
negl
andb
bound
test
add
inc
sbb
push
jmp
xor
notl
inc
outsb
and
bound
test
shlb
push
jmp
xor
neg
mov
bound
sub
movsl
outsb
jmp
mov
or
das
js
jmp
adc
divl
pop
push
pop
loope
stc
jne
add
add
call
and
lcall
pop
imul
clc
jne
and
call
mov
into
call
add
ret
push
mov
ret
call
shr
adc
sahf
mov
outsl
mov
outsl
mov
outsl
insb
add
pop
push
call
or
inc
repnz
inc
addr16
add
add
mov
cltd
je
movsb
ja
testl
cmp
sub
xchg
inc
das
fcoml
add
mov
out
xor
add
mov
cltd
je
mov
lods
inc
cmp
mov
mov
xor
xor
xor
xor
call
xchg
mov
inc
popl
testl
sahf
shr
mov
xor
lahf
inc
xor
pop
cmp
pop
dec
addr16
push
cmp
dec
arpl
lea
cmp
or
scas
add
cmp
popf
xor
lea
cmp
pop
or
lahf
stc
cmp
add
jecxz
jo
mov
insb
fbld
add
add
scas
int
add
addr16
divl
sbb
sbb
push
inc
mul
sub
scas
push
in
scas
push
cmp
and
jmp
aas
dec
clc
aam
dec
cmp
lahf
negb
mov
and
sub
push
outsb
add
mov
push
adc
pushf
div
jmp
jb
cmp
add
add
lahf
ljmp
inc
push
into
add
mov
cmp
repnz
add
inc
pop
xor
mov
mov
pop
push
cmp
sub
in
gs
je
xor
into
dec
xorl
add
sahf
loop
add
and
add
mov
call
jb
push
decl
jecxz
add
push
add
pop
pop
clc
je
dec
mov
lea
dec
jmp
clc
addl
jb
add
in
ficoms
sub
jmp
in
fnstenv
mov
push
lcall
fnstsw
into
push
add
testl
popl
fwait
je
shll
push
nop
lods
jg
aaa
das
push
addl
add
push
ret
add
add
ja
ljmp
orb
push
je
mov
mov
addb
dec
sub
or
std
pushf
je
loop
stc
enter
scas
add
pop
test
loop
bound
dec
sbb
xor
dec
inc
lods
xchg
and
out
adc
sub
sbb
add
add
and
imul
push
cs
xor
mov
jno
pop
pop
sub
inc
push
xchg
roll
scas
jmp
daa
inc
xor
in
xor
mov
mov
xor
jae
pop
inc
pushf
lcall
pop
or
scas
fldcw
and
loopne
shrl
pop
in
lea
xchg
sbb
jae
scas
push
cmp
pop
xchg
outsb
subb
div
nop
movsb
neg
in
dec
out
adc
cmp
pushf
imul
hlt
inc
mov
jmp
cmp
clc
push
mov
or
add
add
mov
insb
shrl
push
add
out
bound
into
dec
mov
notl
sbb
mov
push
call
ss
push
out
push
mov
fs
jne
test
decl
addr16
imul
push
out
arpl
fidivl
hlt
cmp
push
call
ficompl
pop
or
add
add
add
fnstenv
mov
stc
call
sub
or
mov
popf
repz
push
test
mov
int
mov
pop
js
mov
out
dec
adc
clc
decl
clc
jne
inc
lods
testl
add
jl
test
lret
cmpsb
add
add
or
call
inc
cld
pop
shll
nop
mov
cld
mov
or
mov
jle
add
mov
xorb
sub
int
je
xchg
sub
jno
inc
dec
and
fs
xchg
je
push
stos
std
xor
add
jecxz
fs
xchg
xor
hlt
inc
add
and
jae
bound
out
mov
inc
add
inc
mov
rol
add
mov
xchg
inc
pop
add
add
test
add
arpl
cmpsb
push
lea
arpl
or
xor
fwait
cwtl
sbb
xchg
jns
fistl
sub
push
xchg
das
and
add
fstl
xor
aam
fnsave
adc
cmp
cmp
ja
xor
adc
out
cmp
adc
xor
pop
pop
push
pushf
imul
add
clc
xor
lahf
in
fstpl
mov
rcll
jl
cli
push
mov
inc
jmp
shrb
clc
cmpsb
mov
out
mov
das
clc
mov
jle
test
mov
jb
dec
scas
push
data16
inc
pop
sbb
bound
mov
cli
inc
push
jb
bound
imull
sub
add
loope
ljmp
push
xchg
in
cmp
jb
clc
mov
pop
fdivs
push
incl
clc
incl
clc
jne
sti
outsl
push
test
arpl
mov
mov
je
jle
fbld
call
jb
out
aad
or
sar
or
int
or
into
ret
push
mov
add
add
jns
push
jb
cmpsb
cli
push
decl
fldl
aad
gs
arpl
push
div
stos
or
aaa
lods
xor
incl
inc
les
ret
lock
or
xchg
fcomps
xchg
je
adc
inc
cmc
xchg
je
mov
pushf
imul
add
stos
pop
inc
add
adcl
daa
mov
clc
daa
mov
mov
push
pusha
xchg
xchg
je
movsb
fistl
movsl
xchg
xor
jecxz
incb
nop
lods
incl
xor
fwait
jl
adc
notl
jmp
xchg
in
and
pop
addr16
inc
notl
shll
fdivs
cmc
fwait
cmp
sbb
mov
je
jne
cmpsb
cmp
mov
fwait
add
jns
ret
shll
jmp
aad
shll
stos
add
pop
sub
mov
mov
sti
mov
sub
test
clc
push
test
add
and
icebp
insb
stos
idiv
data16
icebp
fildl
imul
sub
jp
xchg
test
mov
jno
data16
scas
or
mov
sub
ds
and
jmp
mov
mov
out
insl
shrl
pusha
mov
fwait
inc
jmp
mov
pop
mov
dec
add
das
mov
sti
adc
or
dec
sbb
out
rorb
pop
pusha
push
decl
sar
call
loop
mov
mov
daa
stc
jne
shlb
cmpsb
push
push
incl
pop
push
mov
ret
call
iret
pushw
jne
call
push
push
dec
idiv
mov
outsb
add
data16
xchg
push
addr16
mov
rclb
xchg
mov
movsb
adc
int
xchg
je
pop
add
mull
jns
sub
sbb
lea
sbb
popf
cmp
jo
cli
add
idivl
add
inc
or
jg
dec
dec
cmp
adc
sbb
push
jnp
decl
xchg
add
add
mov
ja
stc
sbb
jmp
sti
push
dec
nop
dec
lcall
jg
incb
lods
lcall
bound
jmp
pop
sbb
sub
sub
ret
les
add
cmp
ret
pop
inc
mov
sub
mov
sub
mov
sub
mov
sub
adc
movsb
mov
add
add
fstl
sbb
sub
fldcw
enter
repnz
fmulp
mov
lds
sub
sbb
shrb
inc
cmp
sbb
and
in
sahf
cmp
push
sbb
push
push
pop
lods
negl
out
push
subl
pop
inc
jno
mov
shrl
bound
sahf
nop
mull
in
mov
mov
outsb
jmp
cmp
jb
pop
push
jge
addb
jns
into
stos
jecxz
push
jb
in
aad
bound
scas
push
rcrl
cwtl
idivl
popf
sub
mov
and
subb
add
int3
pop
stc
aad
jne
aad
or
dec
incl
add
add
jmp
add
jno
in
test
insl
idiv
inc
and
and
je
inc
push
je
sbb
xlat
clc
push
xchg
mov
fs
jmp
loopne
jp
clc
call
pop
and
jmp
xchg
xlat
insl
add
jne
lret
xor
inc
mov
daa
loopne
imul
jb
xchg
clc
incl
add
add
sbb
testl
incb
xor
xor
lea
add
dec
mov
lcall
mov
bound
cmp
inc
aam
inc
div
fwait
adc
cmp
aaa
int
push
daa
clc
xor
jae
ret
inc
clc
pop
cmp
out
mov
cmp
je
add
add
or
pop
inc
sbb
xor
mov
iret
mov
mov
pop
adc
mov
mov
pop
test
scas
and
add
flds
push
idivl
push
adc
and
gs
aad
scas
add
in
mov
nop
fwait
jle
in
add
and
das
or
in
test
in
add
in
test
in
mov
loope
out
cmp
or
iret
cmp
xor
and
mov
mov
xor
outsb
imul
push
add
inc
jmp
test
outsb
bound
movsb
push
add
mov
xlat
mov
out
cmp
mov
insl
jmp
hlt
mov
div
dec
popf
inc
jmp
jge
inc
sbb
mov
inc
jmp
xor
dec
adc
jo
xor
test
mov
xor
out
push
call
pop
fs
adc
divl
fnstsw
sahf
push
inc
xor
divl
add
add
cltd
clc
jne
enter
fprem
jne
fnstenv
cmpsb
insb
dec
jmp
push
push
call
icebp
push
ljmp
jnp
clc
jne
fnstenv
negb
icebp
fnstenv
out
push
push
fidivl
mulb
jb
pop
push
pushl
and
je
sbb
or
add
add
dec
mov
mov
cmp
inc
mov
out
inc
outsb
jbe
imul
push
inc
add
cmp
ja
stos
push
push
test
mov
insb
out
mov
in
jns
sbb
adc
sbb
add
sti
out
add
incl
push
or
clc
movsl
sti
out
rorb
add
test
das
pop
arpl
enter
xchg
sarl
xor
add
mov
in
cs
cmp
add
insl
lods
adc
mov
cmp
fbld
xchg
mov
bound
aad
and
mov
xchg
sub
xchg
shl
incb
add
add
and
xchg
ret
hlt
bound
mov
in
sbb
or
jno
mov
in
cmp
movsb
push
imul
mov
clc
loop
xchg
and
jnp
pop
cmpsb
jns
adc
hlt
adc
jmp
mov
jle
jns
into
push
jo
sti
sbb
pop
jno
cmc
xchg
jno
fiadds
cmc
loopne
clc
repnz
and
dec
mov
in
lahf
mov
hlt
out
faddl
test
mov
add
loopne
jbe
clc
call
je
loopne
or
jae
push
outsb
push
mov
fs
ss
popa
inc
mov
xchg
push
js
out
pop
fxam
clc
jmp
ljmp
jmp
arpl
push
aad
test
scas
xchg
inc
lock
jb
mov
push
ljmp
jecxz
cld
sbb
and
cmp
jne
in
adc
outsl
push
call
clc
jo
cld
lock
mov
bound
pushf
hlt
sub
orl
cmp
mov
test
add
xor
dec
mov
mov
aaa
or
add
or
cld
leave
pop
aas
jle
mov
jo
add
mov
push
inc
add
cld
dec
pop
and
mov
insb
roll
leave
mov
sbb
imull
xorb
cltd
sbbl
fwait
bound
adc
test
cwtl
stc
subl
cli
sub
jmp
fdivrs
insl
dec
mov
push
push
or
shlb
test
arpl
jb
mov
popf
adc
pushf
add
mov
lock
inc
hlt
bound
pop
loop
jl
in
jb
push
fisttpl
dec
or
sub
push
ss
jb
jne
push
adc
test
push
push
jno
xchg
cld
or
mov
sbb
or
mov
out
insl
adc
repnz
popa
push
dec
test
dec
cs
jmp
pushf
push
pusha
sub
sbb
cmp
hlt
imul
mov
jg
out
into
popa
sbb
push
sbb
mov
cmpsb
cli
add
out
jne
push
push
inc
stos
negl
xchg
or
gs
and
clc
add
imul
decl
divl
loopne
or
jmp
jmp
scas
lds
cmp
push
dec
mov
push
je
in
addl
cs
add
add
add
loop
decl
addr16
add
jmp
clc
mov
or
xorl
push
test
data16
fstpl
cld
add
pop
mov
lea
push
testl
cld
pop
and
xor
mov
dec
test
xlat
jnp
cmp
cmpl
add
sub
loopne
orl
add
add
pop
dec
inc
mov
shl
or
mov
push
insb
xchg
lahf
add
outsl
add
cld
lock
js
push
push
pop
add
or
add
in
leave
out
xor
jns
loopne
mov
fcmove
add
xchg
dec
andb
push
js
add
add
in
or
xchg
fadds
lods
sbb
dec
mov
out
add
bound
arpl
loope
cmc
andb
orb
in
or
and
rcll
add
scas
mov
push
adc
call
arpl
rcrb
insl
lods
clc
jmp
cmp
jg
mov
sti
ja
or
pop
sbb
addb
add
stc
mov
aad
ds
test
ds
pop
and
push
test
mov
dec
test
bound
and
mov
or
sub
fisubrs
call
dec
sbb
stc
hlt
imul
push
sub
inc
sbb
sbb
jmp
divl
add
add
jb
mov
pusha
sub
or
xchg
icebp
sbb
add
jb
push
xlat
pusha
inc
pop
lea
inc
cmpsb
cwtl
jb
cltd
sbb
push
mov
stc
mov
ljmp
cmpl
pop
test
push
add
loop
leave
loopne
add
divl
mov
fisubs
imul
stc
mov
add
add
dec
pusha
lods
or
or
pop
outsl
add
dec
jmp
ljmp
jb
in
cmp
pop
xchg
sahf
mov
xor
ret
jg
add
adc
scas
adc
je
jae
dec
sub
arpl
mov
add
testl
in
add
or
incl
das
mov
rolb
add
subl
jl
or
sbb
out
dec
push
jns
rcrl
icebp
jmp
xchg
or
mov
pop
out
outsb
add
mov
jbe
scas
inc
jns
mov
push
jns
nop
push
outsb
out
inc
jns
jb
sub
push
shll
xor
aas
and
add
jmp
xorb
add
popf
jo
lock
lret
inc
pop
ja
cmp
rorl
pop
inc
push
jl
mov
imul
inc
jl
and
dec
enter
testl
scas
add
fwait
or
add
leave
fsts
stc
cmc
int3
push
jnp
fistps
jl
sub
add
scas
je
jne
rcl
push
arpl
mov
sahf
mov
mov
push
arpl
mov
mov
in
inc
jmp
inc
dec
xlat
hlt
bound
test
pop
or
rep
out
sub
mov
and
lods
push
outsb
jmp
jl
jmp
mov
es
and
fidivl
testl
sbb
dec
dec
cli
test
out
addr16
clc
inc
sub
jmp
call
add
add
xor
jne
cwtl
jb
mov
xor
mov
or
add
inc
clc
pop
popa
push
add
popa
push
push
pop
clc
imul
inc
lret
xchg
lock
xor
jne
cwtl
jb
mov
xor
push
fs
je
xchg
add
popa
outsb
mov
pop
jno
inc
mov
mov
test
nop
clc
incl
add
add
loopne
mov
jl
call
mov
inc
lret
pop
mull
outsb
negb
xor
test
or
arpl
dec
add
mov
in
or
into
push
xchg
ja
inc
lea
mull
addr16
jg
and
add
cmc
jle
outsb
xchg
adc
test
push
jge
cmpsl
and
mov
insb
jge
call
idivb
in
dec
negb
je
push
test
clc
je
add
jb
int
mov
ds
stos
stos
sarb
outsb
in
and
sbb
js
jo
adc
add
bound
add
mov
imul
xchg
insb
mov
add
add
jns
inc
mov
jmp
mov
jo
adc
in
or
int3
sbb
ja
inc
or
js
aad
jo
adc
or
in
add
jp
jmp
arpl
in
or
fsubs
js
pop
push
sub
mov
pop
je
loop
and
pop
pop
mov
mov
jmp
hlt
add
add
adc
cmpsb
cmpsb
or
sahf
loopne
jb
int3
jle
mov
adc
jle
push
push
ss
outsb
inc
push
clc
pushf
rcrl
clc
pop
mov
cmpsl
testl
adc
mov
cli
fsubrs
lahf
sbb
es
test
push
push
adc
add
out
and
cwtl
clc
incl
scas
lock
add
add
jge
dec
cltd
cwtl
clc
mov
cmp
mov
inc
ljmp
cwtl
clc
call
dec
shl
testl
clc
inc
mov
decl
cwtl
clc
mov
cmp
leave
adc
inc
pop
out
lret
cwtl
clc
call
jge
inc
leave
cwtl
clc
inc
jle
std
mov
jge
xor
gs
sbb
mov
add
add
in
in
and
push
mul
mov
push
pop
mov
imul
xchg
in
dec
je
jle
and
das
jo
jp
sbb
ja
idiv
jmp
repz
add
xor
dec
ljmp
loope
xor
stc
xchg
add
mov
shlb
popa
ret
cmp
add
rcl
jb
cld
cmp
adc
and
decb
push
jno
rol
jb
clc
out
jnp
jb
and
adc
mov
in
into
jge
insb
inc
int3
jl
jmp
iret
mov
sub
inc
push
ret
mov
mov
aad
mov
mov
add
gs
add
sbb
xor
add
fistl
in
je
pop
xchg
sub
jns
mulb
cmpl
in
or
popa
je
xchg
pop
je
pop
inc
cmp
in
into
jge
insb
aas
sbb
push
sahf
push
movd
dec
mov
cli
push
rorb
hlt
bound
insl
xor
jmp
mov
clc
fidivs
into
add
mov
mov
add
cmc
out
call
or
orb
loopne
sub
bound
gs
push
jmp
cmp
clc
divb
add
pop
js
push
jmp
hlt
bound
jmp
sti
bound
add
lret
pop
inc
push
xor
sbb
dec
inc
fimuls
lock
in
add
popa
sub
mov
lds
popa
mov
aad
jb
testl
or
rcrb
inc
add
bndldx
add
popa
outsb
mov
dec
test
or
push
add
cmpl
pop
test
add
or
call
cmpsl
sbb
decl
stc
jne
stos
je
add
add
movsb
fcmovnb
mov
pop
std
daa
cli
add
mov
mov
stc
add
xchg
out
scas
into
jmp
lock
repz
scas
rol
std
cmp
cmp
add
outsb
dec
cwtl
scas
pop
decb
into
jne
jle
ret
in
mov
bound
stc
fcos
fdivrp
fcos
popa
ja
incb
xchg
jae
in
filds
add
add
mov
fildl
arpl
dec
mov
or
or
jle
mov
push
fdivr
or
icebp
xchg
in
shll
jo
addr16
clc
cli
or
leave
or
mull
xchg
in
cmpsl
mov
rcrl
fdivs
xchg
leave
jo
icebp
and
mov
jo
mov
add
cs
xchg
mov
jo
and
jo
push
insl
out
inc
fadds
dec
aad
jo
js
jmp
add
dec
test
or
cmpsl
xchg
push
inc
frstor
int
clc
bound
cwtl
loop
adc
mov
push
es
mov
aaa
jmp
jns
add
icebp
cmc
bound
jmp
clc
bound
push
repz
inc
sti
jl
pop
mov
push
lock
jecxz
jb
lret
out
jmp
out
sti
je
hlt
bound
mov
or
imul
lea
cs
call
xchg
fcmovnu
idivl
jns
push
cs
add
add
xchg
clc
lcall
dec
xlat
dec
gs
xor
push
lock
stc
sub
addr16
lret
cltd
js
xor
jo
ljmp
js
push
sub
divl
cltd
dec
xlat
dec
maxps
stc
adc
mov
jbe
testb
fcomp
fildl
mov
loop
mov
add
mov
inc
sbb
push
add
addr16
lock
fistpll
mov
push
not
jno
mov
testl
sti
out
mov
jb
cwtl
sub
jmp
jns
mov
push
xchg
leave
imul
ja
imul
pusha
arpl
add
pop
xchg
repnz
xchg
insl
cmp
insl
inc
or
sti
push
jg
insl
xor
cmp
imul
pop
pop
insl
dec
daa
pop
insl
or
sar
sbb
aas
insl
stc
pop
jae
jmp
movsb
sub
int
jne
pop
push
or
xor
insl
sar
sarb
icebp
insb
nop
pop
lods
insb
mov
pop
fstps
add
add
int
je
pop
jo
or
rclb
rorl
push
jmp
and
ljmp
lcall
lcall
shll
decl
push
fwait
or
aam
or
pushf
aaa
inc
arpl
vpmuludq
repz
out
xchg
icebp
bound
loop
add
add
add
ss
push
push
rcll
adc
loop
popl
and
pop
push
jo
push
clc
push
and
xchg
sub
jb
mov
jb
mov
or
jb
clc
call
jae
out
hlt
push
mov
push
jp
cld
jbe
insb
pushl
mov
mov
lock
jns
jne
jns
or
add
add
adc
ljmp
js
ljmp
js
leave
sbb
clc
push
push
stos
test
or
stc
jne
test
or
sub
leave
int3
or
mov
mov
sub
loopne
divl
in
mov
add
jo
outsb
out
cmp
outsb
ds
loop
insb
je
in
negl
ret
xor
dec
cwtl
add
divl
imul
cmp
add
jecxz
add
xorb
and
call
xchg
idiv
jae
bound
add
xor
add
adc
pusha
cmc
mov
adc
addr16
bound
cs
clc
mov
xor
fstp
int3
jns
add
xchg
stc
add
pop
mov
add
es
fisubs
cli
add
push
lods
out
div
in
clc
fidivrl
push
outsl
sahf
mov
mov
cmpsl
add
xlat
and
in
push
adc
sti
sbb
push
imul
sahf
inc
jl
fcomps
jl
loop
add
fstl
out
fdivr
int
leave
add
shlb
add
movsl
ss
cld
bound
pushf
and
divl
pop
sub
add
outsb
in
mov
inc
fists
push
inc
sti
out
cmp
insl
sub
mov
adc
sti
and
into
add
mov
add
mov
pop
push
adc
testl
icebp
lods
or
pop
lahf
fiaddl
and
aam
cli
mov
or
push
inc
jae
clc
cs
or
jmp
in
mov
sahf
push
or
divw
sahf
shrb
clc
jne
mov
cmpsb
mov
ljmp
adc
imull
pop
stc
jne
mov
data16
add
mov
shll
inc
clc
push
pushw
add
hlt
call
pushw
push
add
add
sbb
imul
xchg
inc
lea
push
stc
jne
mov
inc
and
into
cld
mov
rcrl
outsb
mov
neg
out
out
int3
pusha
incb
push
mov
push
out
int3
pusha
jle
dec
testb
popa
imul
or
dec
mov
cli
out
dec
pop
incb
add
add
jae
dec
loopne
fcomps
inc
div
mov
sub
pusha
mov
js
mov
push
push
add
dec
idiv
scas
pusha
je
xchg
cmp
call
inc
pusha
push
aas
not
arpl
rcll
xchg
rolb
dec
roll
sub
lcall
stc
gs
in
fildl
add
add
add
out
lock
jno
ja
dec
clc
mov
insl
pop
add
out
fucom
bound
add
cmpsl
push
clc
mov
je
fsubrl
add
pop
sbb
mov
insl
or
pop
out
lock
scas
fdiv
inc
gs
aas
push
ss
add
fsubrs
fiaddl
add
add
add
push
mov
lock
sbb
mov
sbb
clc
xchg
outsl
out
cli
iret
push
out
popa
pop
lock
add
sbb
cmp
adc
jb
clc
xor
pop
jne
roll
clc
je
clc
mull
fildl
mov
lret
add
add
mov
jbe
add
movsl
sar
imull
pop
lock
pop
pop
lcall
add
mov
clc
mov
clc
pushl
fstpt
jmp
xchg
out
stc
jmp
xchg
idivb
sub
or
sub
sti
push
sbb
decl
cli
fistpll
fildl
inc
imul
das
inc
add
cli
jmp
sub
pop
or
add
arpl
add
or
cmp
bound
xchg
in
cld
and
insb
dec
mov
pop
sbb
lock
pop
or
out
mov
or
movsl
pop
lret
add
inc
hlt
imul
arpl
inc
pop
arpl
jge
test
dec
sar
mov
iret
mov
decb
adc
out
and
sub
or
rolb
add
clc
mov
add
or
pop
or
test
add
int
ljmp
inc
pop
dec
jp
dec
mulb
jl
mov
jecxz
sub
in
push
aaa
jbe
insb
and
add
movsl
call
xchg
scas
fsts
xor
cld
mov
bound
cld
or
add
add
add
arpl
bound
icebp
popa
mov
pop
or
fisubrl
push
imul
leave
jmp
bound
popa
push
jbe
imul
mov
pop
cmp
add
stc
push
ret
sub
cmp
cld
js
mov
cmp
outsb
jl
out
pop
xchg
cld
mov
notl
adcl
sti
clc
jl
cmc
idivl
push
ja
inc
mov
out
push
push
std
insb
jmp
hlt
sti
mov
dec
std
testl
mov
mull
sbb
out
pop
out
cmpl
sti
sti
mov
iret
cld
test
xor
mull
scas
xlat
loopne
cltd
lahf
cld
imul
and
testl
cltd
xor
out
clc
decl
xchg
cmp
dec
fwait
clc
cmp
or
adc
lcall
shr
testl
mov
mov
lcall
xor
rcr
negl
fwait
clc
lcall
pop
idiv
cltd
testl
mov
cmp
clc
lcall
daa
push
pop
out
cltd
sbb
call
not
popf
iret
and
push
push
dec
sbb
nopl
fisttpll
add
cmp
clc
cwtl
push
je
mov
push
mov
cmp
iret
sti
pop
call
xor
out
add
mov
push
push
jmp
push
push
dec
cwtl
push
pop
cmp
lock
mov
lock
incb
add
add
sbb
out
push
push
pusha
jbe
negb
imul
mov
mov
push
inc
bound
imul
in
add
and
add
in
xchg
xorb
add
cmpsl
jo
lock
sbb
stc
jbe
cld
clc
rorb
pop
mov
call
mov
cmp
outsb
in
xchg
in
add
add
add
imul
adc
lods
clc
xchg
or
sub
testl
in
jmp
pop
scas
adc
pusha
insl
cs
int3
mov
je
fsubrs
aaa
jmp
dec
mov
and
hlt
imul
and
negl
and
testl
and
sbb
add
add
clc
testl
arpl
stc
bound
mov
clc
imull
and
test
rep
mov
pushf
cld
or
cmpsl
sub
in
ljmp
test
pop
jmp
ds
clc
lea
mov
inc
jne
inc
add
pushw
pop
divl
ss
cmp
xchg
push
je
scas
pop
add
xchg
add
xchg
jb
data16
incl
xchg
pop
add
xchg
add
xchg
jb
inc
xchg
call
xchg
jb
add
idiv
pop
movsb
add
imul
sbb
push
push
je
insb
push
icebp
or
call
pop
sbb
inc
inc
mov
cmp
and
jg
dec
add
add
mov
or
add
lret
push
test
mov
insl
mov
idivl
pop
je
rol
bound
jne
dec
int
pop
ljmp
pop
inc
repz
inc
mov
in
sbb
pop
je
xor
pop
adc
shl
enter
push
jl
jg
stos
mov
imul
add
add
hlt
imul
pop
mov
lock
bound
jecxz
mov
pop
rcr
inc
lds
aad
sbb
push
aaa
outsb
shlb
cmp
pop
jmp
mov
add
cmc
adc
sbb
sahf
sbb
cmc
test
loop
add
and
push
xchg
cmp
rcrb
add
add
outsb
cmc
imul
pop
and
mov
push
push
arpl
imul
stc
ljmp
jno
or
out
into
hlt
jno
into
outsb
push
sarl
jmp
mov
push
mov
push
div
mov
add
mov
lahf
idivb
mov
xor
add
cli
and
insl
repz
push
jmp
mov
negl
sahf
ljmp
cmc
jno
arpl
cs
push
jmp
mov
push
adc
and
or
pop
mov
adc
mov
add
out
loopne
mov
xchg
dec
pop
or
adc
out
sbbb
mov
add
add
mov
clc
jne
xchg
rolb
mov
lcall
mov
inc
loopne
and
incl
jg
jns
mov
or
and
add
mov
push
cmp
fsubr
sti
or
call
cmpsb
jae
mov
push
out
sbb
xor
negl
je
popa
enter
or
mov
leave
jecxz
outsl
arpl
add
insb
sub
push
loop
imul
push
pop
mov
cld
add
iret
std
add
jns
aad
pop
out
push
ljmp
rcl
sti
and
mov
call
push
mov
imul
fdivr
mov
mov
add
insb
das
add
jbe
sti
daa
xor
or
scas
or
sbb
add
cld
bound
add
jl
jmp
jge
add
pop
adc
mov
jmp
add
cmpsl
push
lds
push
or
in
push
cs
mov
in
lods
jge
add
ja
push
stos
pop
xchg
pop
out
icebp
cwtl
mov
xchg
add
adc
cli
pop
or
imul
jo
outsl
cmpsl
jns
lock
ljmp
add
add
add
aaa
arpl
in
out
fimull
iret
adc
rcr
stos
imul
add
out
push
bound
push
add
popf
iret
icebp
jno
dec
ja
add
and
ret
jle
xchg
hlt
fldl
inc
icebp
jno
frstor
ret
push
pushf
in
shl
jbe
push
hlt
push
cmp
sti
jbe
inc
repz
out
lret
xchg
daa
xor
sahf
lret
xchg
sub
add
out
testl
mov
icebp
jno
inc
ja
push
add
notl
ja
dec
rcrb
cltd
pop
idiv
add
loopne
jnp
fistpll
xchg
clc
decl
xchg
clc
jnp
fistps
test
xchg
fists
dec
xchg
clc
sti
xchg
or
jle
add
xchg
clc
incl
add
add
pushw
leave
pushf
addr16
push
lds
clc
call
mov
push
push
and
or
cvtps2pi
or
andl
push
arpl
add
cld
imull
in
in
testl
mov
dec
mov
cmp
and
jae
pusha
flds
push
lock
decb
pop
ljmp
push
dec
jp
pop
mulb
mov
loop
push
je
and
lret
call
push
lahf
pop
xlat
inc
test
push
out
sbb
cld
mov
push
testb
push
je
jecxz
sti
lock
mov
bound
loope
lods
sbb
in
push
leave
enter
leave
in
inc
fnstcw
es
cld
bound
push
push
arpl
pop
xor
push
jg
add
pop
xchg
pusha
push
movsb
in
push
sub
cmpsb
les
test
popa
in
fcomp
lock
fnsave
bound
test
mov
fildl
cs
aaa
sarb
in
nop
push
mov
clc
popf
mov
add
mulb
adcl
pop
ja
in
div
cmp
jno
cmp
xor
sbb
in
hlt
xchg
mov
hlt
js
ds
fs
dec
or
mull
call
push
push
mov
in
testl
jl
or
clc
bound
enter
popf
xchg
insb
jmp
push
add
sbb
fdivs
dec
jnp
push
bound
test
repz
jmp
cmp
es
add
push
call
push
psubb
imul
clc
dec
cmp
call
ss
xor
cmp
push
jne
sbb
xor
xlat
clc
fsts
jno
jmp
out
xchg
cmp
clc
pop
pop
sub
add
add
add
mov
fstpl
dec
inc
dec
pop
jno
xchg
movsl
pushl
xchg
xor
push
inc
clc
adc
add
adc
push
dec
push
incl
xor
stc
cmc
inc
out
adc
je
add
adc
add
lret
pop
mov
push
je
xchg
mov
je
movsb
lcall
add
add
add
add
sti
mov
mov
sti
sbb
iret
sti
out
stos
push
outsb
mov
ljmp
sti
out
add
pop
push
dec
add
sbb
xor
sbb
sarb
adc
or
in
add
test
in
jle
add
outsl
in
jno
push
add
outsl
popa
dec
arpl
xchg
pop
ljmp
insl
imulb
nop
nop
dec
sub
cld
out
jmp
out
cmp
cld
nop
stos
push
cmp
xchg
lcall
pop
sub
add
jmp
shll
sub
pop
dec
push
or
xlat
icebp
pusha
jge
push
ret
jno
mov
add
add
outsb
cli
xchg
das
std
notl
add
push
sti
out
hlt
bound
mov
sti
bound
sub
xor
idivl
inc
mov
out
iret
in
and
bound
jb
sub
mov
dec
push
jmp
sbb
mov
in
outsb
out
add
add
or
add
add
bound
test
sti
bound
add
out
roll
mov
jmp
fistpll
xor
dec
or
jp
jne
xchg
inc
jno
mov
xchg
jb
jno
fsubr
ficomps
stc
call
mov
in
jmp
insb
inc
fisubs
fdivs
push
in
imul
inc
aam
push
jb
push
mov
mov
mov
aad
jne
mov
das
jno
clc
jne
xchg
jb
idiv
daa
call
jb
xor
fdivr
testl
out
jmp
dec
push
jp
in
scas
iret
or
add
jp
dec
decb
popa
add
adc
jg
lock
je
insl
shl
loopne
sti
out
dec
dec
rorb
pop
out
dec
dec
incb
add
add
push
dec
iret
nop
or
mov
add
inc
inc
pop
test
idiv
or
pop
bound
or
add
push
sbb
pop
arpl
dec
mov
arpl
shl
in
lock
cld
adc
inc
push
sbb
mov
in
xor
jnp
add
movsl
add
add
push
adc
jmp
in
dec
push
arpl
pop
xchg
jp
fbstp
arpl
in
js
dec
inc
pop
push
insl
mov
cmp
test
inc
mov
or
lcall
cli
imul
es
lock
fbstp
js
jmp
out
dec
sub
cli
adc
in
test
push
mov
idivl
std
subl
lods
pop
ss
lods
sbb
mov
repz
jbe
pop
out
jmp
mov
outsb
mov
mov
inc
jmp
and
idivl
cmp
pop
out
pop
cld
jecxz
xor
pusha
push
mov
clc
subl
in
add
int
imul
outsb
jp
pop
clc
mov
lcall
es
imul
ret
cld
in
insb
pop
imul
call
pop
leave
insb
pop
pop
outsb
mov
pop
clc
mov
xchg
sub
inc
push
jge
inc
sahf
scas
clc
jne
add
add
cltd
fbld
sahf
pop
leave
insb
idivl
fdiv
add
ja
and
mov
idiv
pop
mov
imull
dec
je
and
xor
icebp
out
dec
imul
stc
ret
inc
mul
push
xor
sar
mov
test
iret
inc
idivl
je
xor
mov
mull
cmc
lret
add
nop
arpl
inc
add
mov
mov
lds
jo
add
lock
popa
loop
jl
loop
inc
lret
fsubp
shl
lret
inc
loop
inc
hlt
bound
jnp
in
pop
and
mov
add
jecxz
inc
adc
push
add
cwtl
jns
fidivrs
sar
lret
call
out
add
bound
add
test
in
add
ret
add
daa
xor
loope
cltd
cmp
cmpsb
fucomp
rcrl
add
sub
imul
dec
sbb
test
loope
in
or
mov
add
add
out
mov
cli
xor
mov
loopne
ror
nop
divl
das
and
cmpsb
addr16
sahf
mov
shll
cmp
adcl
xor
jae
mov
imul
mov
outsb
add
repnz
loope
pop
mov
mov
add
add
push
mov
clc
pop
scas
punpckhbw
out
jbe
imul
es
ljmp
es
call
xor
lock
jb
ss
call
mov
imul
idiv
sub
fists
es
decl
das
out
add
es
ljmp
pushw
incl
add
add
pop
divb
sub
mov
add
and
add
mov
pop
mov
mov
jo
sti
addr16
cmc
jmp
and
leave
pop
lea
inc
inc
rcr
in
rorl
add
sub
add
adc
sub
int3
sahf
ret
decl
jle
out
and
clc
jge
incb
add
add
pop
push
sbb
inc
enter
push
insb
call
inc
jp
stos
inc
xor
shl
mov
jns
add
mov
in
add
in
cmp
xlat
and
sbb
add
bound
xor
fs
clc
inc
test
jp
push
pop
jmp
add
mov
in
add
dec
xchg
int3
mov
sarb
fisubs
call
cmp
inc
stc
jmp
xor
fisttpll
mov
arpl
enter
xor
jno
sbb
xor
dec
cld
fdiv
ret
hlt
dec
pop
mov
jmp
idivl
xor
push
inc
mov
out
push
xor
insb
jmp
hlt
fnsave
push
sahf
gs
shll
mull
shr
mov
add
mov
sub
fnsave
pop
gs
icebp
and
mull
mov
push
adc
inc
jmp
xor
lret
sahf
and
mov
lock
adc
and
push
cmpsb
icebp
push
into
and
inc
push
clc
mov
add
add
xor
dec
or
inc
add
pop
out
fldenv
clc
jne
mov
test
cltd
clc
dec
ljmp
mov
inc
add
out
sbb
clc
jne
mov
test
clc
inc
data16
scas
mov
xchg
lock
jb
data16
push
hlt
mov
dec
jp
fcomps
mov
dec
xchg
xor
rolb
xor
das
mov
mov
out
negb
mov
add
dec
ja
mov
mov
idivl
push
push
pop
adc
lea
daa
idivb
mov
adc
mov
sbb
sbb
inc
incb
add
add
push
pop
testb
mov
xor
mov
fidivrl
and
fidivrl
dec
jae
jne
fisubrl
mov
rclb
lahf
mov
inc
test
fiaddl
arpl
mov
inc
sbb
sbb
jb
jno
fimull
inc
stos
lahf
clc
aas
pop
fidivl
dec
dec
aas
ret
jb
mov
add
add
aas
andl
adc
out
aas
and
jp
and
mov
mov
jmp
dec
sarb
fidivl
mov
fincstp
jle
lret
or
dec
mov
pop
shl
pop
jecxz
sub
fdivs
push
movsb
idivl
rorb
jecxz
enter
xchg
mull
mov
sbb
sub
notl
testl
adc
mov
add
testl
stc
push
lret
icebp
fsubr
aad
fdiv
into
lahf
mov
fcomip
in
clc
decl
loope
push
cwtl
clc
mov
xchg
clc
pushl
sub
jno
inc
clc
xchg
cli
call
jb
jbe
adc
into
daa
lds
mov
add
sbb
or
insb
out
in
push
cwtl
clc
mov
clc
jne
or
insl
dec
divl
push
xor
incl
cltd
jb
jbe
push
dec
or
add
fistpll
lret
xchg
clc
jne
mov
sub
into
ret
add
push
xchg
sbb
add
and
lcall
je
icebp
iret
push
lock
stos
add
loopne
addr16
pop
decl
sub
and
decb
sub
mov
lock
cs
jmp
scas
call
ret
sub
sub
divl
sti
pusha
out
or
lock
cmp
push
dec
aaa
out
movsb
cmp
mov
add
sahf
mov
scas
mov
inc
xor
data16
mov
aaa
dec
iret
mov
adc
ss
cmp
adc
mov
cmp
dec
in
stos
or
add
sar
ret
fimull
lahf
mov
sub
aas
cltd
push
inc
cmp
imul
xor
xlat
inc
fs
aad
test
mov
test
shll
in
cmp
add
add
adc
clc
pop
aaa
dec
push
fildll
cli
out
sbb
pop
add
add
in
aam
pop
fistpll
mov
and
push
inc
repnz
inc
jmp
mov
negl
jb
push
roll
cld
pushf
call
cmp
aad
div
negl
pop
push
sti
bound
push
lds
dec
and
je
add
add
outsl
push
jmp
mov
push
je
popf
push
xchg
sti
inc
inc
jmp
dec
xchg
add
gs
je
out
cld
int
les
shlb
cwtl
jb
inc
fdivrp
decl
jb
ss
cs
cmp
call
jne
mov
sub
pusha
push
mov
ret
cld
hlt
pop
insb
pop
jns
add
mov
call
sti
push
sub
sahf
or
insl
dec
pusha
divl
mov
push
cmp
mov
add
cltd
jb
push
sub
push
insb
stos
lcall
jle
aas
out
ret
jb
inc
test
sar
xor
add
sbb
stos
rcll
xchg
ret
call
xchg
or
pop
js
incb
xlat
pop
inc
mov
je,pt
icebp
fdivr
call
leave
cmp
ret
rcr
cmp
je
loope
and
sti
leave
enter
inc
sti
mov
fisubrl
xchg
into
sbb
or
mov
pop
pop
bound
fildll
sbb
dec
xchg
aaa
dec
dec
cmc
sub
jge
cmp
add
add
dec
jmp
cmp
in
add
test
fs
jne
das
adc
inc
xor
ret
clc
in
cmp
mov
or
fadd
cmp
pop
lods
scas
out
xor
cmp
sbb
sub
shlb
std
stos
push
js
rcll
in
xchg
cmp
mov
scas
mov
pop
mov
mov
push
mov
xchg
pop
out
pop
dec
shl
loop
push
ss
jge
xchg
sti
out
call
add
mul
cmp
jno
int3
repnz
loopne
jno
enter
inc
push
push
push
shl
rorl
je
add
sahf
sub
negl
pop
adc
push
mov
mov
and
xchg
hlt
clc
mov
add
loopne
or
sub
jecxz
jns
cli
pop
dec
add
flds
jne
psubw
incb
add
pop
clc
jne
mov
out
add
sub
cwtl
cwtl
dec
cld
je
mov
mov
call
and
fs
out
sbbb
jne
jge
incb
or
mov
and
xchg
cwtl
xor
push
cltd
clc
incl
adc
push
mov
jb
and
or
xor
jae
testl
idiv
cltd
call
mov
ljmp
ljmp
pop
pop
loope
decb
xchg
es
roll
mov
sub
or
add
add
jmp
mov
or
aad
xor
insb
std
fstpl
add
testl
jg
rorl
cmpsl
or
cmp
je
or
add
cmpsl
mov
add
arpl
add
xor
imul
sub
jecxz
and
mull
inc
les
rorb
mov
inc
shlb
dec
inc
xor
fistpl
xor
xor
sub
jl
xor
in
sub
iret
push
add
adc
mov
cld
int
or
mov
push
xor
into
nop
sub
sub
aaa
ror
push
fcomi
int
lock
fsub
ret
int3
mull
push
dec
pop
pop
idivl
bound
sub
out
jmp
sbb
imul
hlt
movsl
inc
sbb
sahf
into
insl
jmp
jno
repnz
jns
repnz
int3
push
out
notl
mov
hlt
bound
test
arpl
dec
sub
int
sub
and
je
shr
sahf
and
push
xorl
add
add
outsb
inc
sub
xchg
mov
sbb
sbb
jb
ss
cmp
clc
call
sub
cld
push
mov
lds
pop
stos
mov
fstpl
xchg
push
stc
or
outsl
lret
clc
call
mov
sbb
dec
inc
xchg
movsl
adc
jo
or
dec
inc
push
fisubs
inc
or
push
punpcklbw
inc
or
pusha
mov
test
cli
dec
lock
add
sti
imul
inc
notl
fwait
inc
xor
idivl
mov
testl
push
ss
out
jp
jg
mov
call
inc
dec
inc
rcrl
aad
xor
stos
popa
sbb
push
xor
and
movsl
xor
and
adc
das
call
arpl
xor
push
jns
inc
imul
xor
sbb
rcl
lret
push
mov
lret
rorb
lahf
xchg
xor
xchg
or
jns
ss
or
lcall
add
add
add
add
sub
and
jecxz
push
push
adc
mov
sub
cmp
jb
and
sub
lret
popf
xor
mov
inc
add
bound
cmc
in
jle
bound
inc
es
jno
or
jmp
hlt
mov
idiv
hlt
bound
scas
jno
repz
arpl
jmp
jmp
imul
hlt
bound
es
repz
leave
imul
hlt
fstl
sti
jae
jmp
daa
leave
push
pop
jns
repz
sbb
push
and
jno
pop
dec
or
andl
testb
sub
aam
out
pop
adc
bound
push
mov
or
mov
fsubrp
xchg
jno
pop
mov
push
fisttpll
fisubs
shr
outsb
movsb
fistps
cli
pushl
scas
ffreep
xchg
gs
test
subb
jnp
jmp
pop
push
out
jo
cmpsl
jno
mov
mov
cmovle
sarb
test
xchg
clc
lcall
out
jbe
jbe
dec
loop
add
jns
push
mul
or
push
fidivl
in
add
add
mov
mov
testl
dec
fists
idiv
loopne
inc
je
cmp
jmp
imul
sub
jle
movsb
push
sub
push
xor
cwtl
inc
mov
repnz
sbb
aad
add
ljmp
out
jns
mov
imul
add
add
add
pop
repnz
pop
sbb
popa
sub
push
xor
sub
push
idivl
in
jge
insb
dec
or
adc
and
add
in
add
jnp
aam
xor
fdivl
pop
cmpsb
sbb
add
mov
insb
scas
mov
imul
sub
push
pop
xchg
je
mov
sti
sub
add
add
dec
shl
cltd
sub
imull
xor
jecxz
adc
jnp
adc
cmp
xchg
sti
mov
cmpsl
push
mov
sbb
cltd
loop
enter
and
inc
mov
inc
jmp
and
push
push
fdivs
inc
jmp
mov
clc
sbb
mov
out
mov
repz
push
and
add
bound
imul
pop
aad
ds
mov
inc
inc
push
xor
inc
push
div
mov
dec
push
inc
dec
leave
mull
in
add
cltd
xor
sbb
jb
push
mov
mull
adc
sbb
fmuls
pop
divl
push
sti
sub
add
addr16
fidivrs
fists
mov
fistps
jp
jne
imul
ret
push
mov
ret
hlt
sub
push
out
pushl
js
mov
rolb
popa
push
add
jecxz
sub
push
out
or
pop
jmp
add
ljmp
test
add
mov
mov
sar
popa
mov
mull
andl
fwait
add
mov
sbb
jp
sub
mov
mov
mov
add
ss
mov
mov
orb
fwait
xor
int
ret
xor
inc
testl
add
add
add
rcrl
xchg
arpl
sub
mov
mov
bound
fwait
mulb
andl
in
mov
sub
les
add
dec
leave
sub
aad
or
mov
into
insl
mov
inc
int3
sub
ror
add
in
add
add
scas
lock
cmp
and
lahf
push
xchg
in
add
loop
add
jmp
push
jbe
les
sbb
mov
negl
lds
test
mov
jmp
push
les
jmp
and
es
ret
pop
rol
push
cmp
and
hlt
bound
cltd
push
jne
cmp
jnp
push
sbb
cmc
bound
jmp
aaa
xor
lret
cli
mov
fistpll
shl
rcrb
scas
mov
outsb
mov
inc
mov
lcall
push
add
clc
pop
ficoms
decl
cmp
pop
movsl
idiv
mov
xor
and
int3
jae
data16
mov
mov
mov
push
pushw
add
and
add
gs
sbbl
cmpb
mov
mov
mov
pushf
bound
push
inc
pop
test
bound
out
inc
sahf
lea
dec
mov
adc
ret
push
mov
cmp
testl
xor
dec
insb
jb
in
lret
add
hlt
lea
inc
push
and
pop
adc
ret
push
dec
mov
lret
sub
mov
mov
iret
sbb
stc
ret
aaa
dec
jmp
arpl
cmp
sti
leave
mov
dec
aaa
repz
lret
add
dec
pop
add
mov
leave
add
faddl
inc
mov
loope
or
leave
xchg
or
mov
add
add
mov
lods
rcll
loopne
popa
ljmp
jp
in
add
mov
and
sbb
pusha
or
sub
add
movsb
insb
in
add
ss
test
and
mov
and
mov
sbb
in
clc
mov
in
add
xor
mov
cmp
add
add
cmp
les
mov
out
cmp
mov
xor
mov
clc
fsubrl
repnz
insb
icebp
jl
dec
test
mov
sbb
adc
jno
fdiv
stc
push
adc
add
sub
bound
jmp
ret
pop
outsb
push
fdivrl
icebp
inc
or
dec
addr16
movsl
stc
mov
add
test
bound
sahf
xchg
push
rorl
cmpsb
mov
loope
xchg
add
adc
add
testl
mov
push
add
rorl
out
sarl
mov
bound
lret
pop
inc
nop
incb
mov
sbb
or
clc
call
popa
push
add
or
call
adc
cmp
decl
xorl
cmp
out
fs
in
jb
mov
clc
jne
mov
cltd
orl
not
popf
pop
lahf
push
push
jmp
sarb
decl
fs
in
mov
je
and
sbb
pop
rolb
add
loop
sub
push
decb
call
in
mov
je
arpl
adc
insb
jg
xlat
cmp
sub
mov
jae
testb
out
nop
or
add
notl
add
jl
mov
push
insb
scas
mov
pop
xor
aas
div
xchg
add
cwtl
cwtl
clc
lret
test
pop
sbbb
add
add
push
fimull
js
cmc
sub
mov
in
lret
xchg
pushf
mov
dec
and
sbb
popa
sub
or
mov
in
add
bound
or
adc
test
in
sub
test
int
icebp
mov
push
or
shll
filds
xor
add
add
mov
imul
imul
ljmp
mov
cld
jns
fs
in
adc
daa
loop
hlt
bound
cs
push
jmp
sbb
not
adc
div
mov
push
push
ret
push
mov
mov
stc
push
call
out
jbe
mov
adc
mov
dec
add
push
jecxz
jmp
hlt
jmp
sbb
imul
stos
ja
add
rcrb
push
jmp
shll
pop
out
pop
mov
clc
lcall
cmp
pop
mov
mov
mov
roll
pop
in
lds
ret
call
sbb
pop
out
add
loop
add
add
add
mov
outsb
sti
fbld
into
push
andb
stc
call
gs
test
push
add
lahf
notl
push
std
fsubs
pop
sub
inc
pop
mov
add
imul
shlb
ljmp
inc
std
nop
cmp
add
lea
sbb
jo
sbb
fs
pop
xor
inc
je
bnd
mov
cmp
sbb
xor
std
and
add
lret
lods
add
mov
decb
sbb
clc
popa
aad
add
fmuls
mov
imul
fwait
sti
mov
add
addr16
sarb
push
mov
adc
add
in
sub
pop
in
add
mov
in
add
pop
out
add
addr16
inc
js
in
sub
pop
xchg
mov
pop
mov
mov
xor
mull
inc
in
dec
in
nop
jae
pop
push
xor
adc
nop
jnp
pop
push
sbb
adc
or
cs
leave
dec
std
dec
test
in
loop
mov
pop
add
xchg
stos
stc
mov
fsubrp
mov
les
js
clc
sahf
or
out
xchg
mov
sti
clc
xchg
mov
divl
mov
outsb
fidivrl
or
je
jmp
call
aas
push
mov
mov
jl
mov
or
and
adc
xchg
hlt
dec
push
push
enter
cli
aas
faddl
inc
movsb
imull
mov
push
arpl
mov
pop
clc
inc
arpl
dec
push
mov
enter
mov
repz
push
clc
cld
mov
push
clc
repnz
stc
ljmp
pop
leave
pop
in
mov
sbb
push
into
pop
jb
and
mov
pop
add
stc
mov
add
scas
ljmp
aad
xchg
popa
push
add
sbb
decl
xor
xchg
add
test
sbb
outsb
lcall
mov
xor
pop
rolb
testl
nop
jl
xchg
shlb
repz
lahf
aaa
add
jae
inc
xor
neg
xchg
out
lahf
jno
add
inc
xor
popa
add
xchg
add
xchg
add
testl
mov
or
lret
je
test
add
bound
xchg
or
jnp
mull
inc
test
stos
in
scas
add
mov
add
arpl
dec
arpl
dec
arpl
add
add
add
add
add
jmp
inc
lods
or
cs
in
loope
notl
add
sbb
scas
xchg
fsub
mov
mov
jns,pn
fs
in
add
addr16
sbb
mov
stos
in
in
sbb
mov
in
xchg
push
shrl
jmp
hlt
addr16
xchg
sbb
popf
xor
jmp
push
mov
jmp
out
add
ret
mov
mov
push
mov
js
out
cmp
out
inc
lods
mov
mov
jnp
cmp
outsb
sbb
jae
andl
imul
std
fistpll
sarb
and
jmp
lcall
add
push
fwait
push
idiv
dec
pop
mov
add
pop
push
add
and
push
pop
push
add
repz
push
pop
push
lea
inc
lea
inc
lea
inc
push
jmp
push
push
add
fisttpl
dec
inc
inc
call
or
jge
xor
sahf
loope
decl
dec
mov
out
clc
mov
pop
mov
dec
in
aas
jno
pop
call
pop
icebp
xlat
ljmp
add
add
dec
or
dec
mov
pop
test
decb
mov
jo
or
ret
aas
sti
or
movsb
cli
add
mov
add
pusha
shr
out
decl
mov
add
xor
add
idivl
add
notl
add
je
push
incl
je
add
push
idivb
inc
push
jl
add
dec
cmpsl
dec
pop
push
test
aaa
mov
jb
mov
in
out
in
imul
or
and
mull
sub
outsl
cmp
mov
in
loope
jl
add
xchg
mov
add
or
in
add
add
add
in
mov
scas
sbb
push
inc
addr16
add
xor
push
add
xor
mov
mov
mov
xorl
xchg
jmp
bound
xchg
outsb
jmp
hlt
pushw
jmp
hlt
pop
mov
hlt
bound
jmp
dec
mov
jmp
add
add
incb
jmp
mov
sub
enter
mov
sbb
aaa
inc
outsb
pop
test
sti
cmpsl
inc
mov
jns
cli
sbb
insl
jmp
cmp
sahf
xchg
cld
sbb
pop
add
cmp
decl
arpl
add
arpl
cmp
push
je
test
jnp
decl
mov
add
outsb
inc
lock
arpl
add
out
repz
arpl
lea
inc
incl
arpl
or
rorl
sbbl
jae
push
jb
dec
lods
fmuls
addr16
add
jnp
adc
lcall
push
adc
dec
ficomps
call
mov
rcrb
sub
add
add
adc
add
inc
mov
add
idivl
xchg
xchg
dec
xchg
pop
dec
daa
sub
stos
ja
jae
mov
pop
sbb
icebp
popa
xchg
cli
push
jb
adc
add
decb
sbb
js
icebp
mov
mov
mov
cmp
inc
xor
cmpb
add
mov
add
mov
cwtl
lcall
mov
mov
adc
mov
hlt
inc
add
xchg
sub
test
jecxz
sti
enter
in
add
cmp
add
bound
ljmp
add
daa
xor
mov
xchg
pushf
les
lds
inc
mov
fldenv
add
add
pop
xlat
adc
movsb
loop
gs
add
in
sbb
dec
rclb
shrb
adc
cmp
lret
aaa
arpl
cmp
mov
pop
adc
bound
cld
xor
cmpl
lods
imul
hlt
cltd
in
hlt
adc
and
xor
jmp
lods
filds
push
lods
idivl
or
icebp
add
add
add
lods
out
inc
in
lods
imull
lret
hlt
bound
jns
popf
mov
lods
divl
stos
adc
and
es
mov
repz
push
jmp
out
out
repz
lods
testl
stos
inc
add
push
ret
push
dec
das
add
pop
push
xor
andl
gs
xchg
clc
jmp
dec
je
rcll
add
mov
add
clc
and
mov
pop
orl
ret
arpl
xchg
inc
add
ret
imul
loopne
add
ret
jae
lahf
mulw
rol
jnp
maxps
and
notl
add
adc
inc
imul
loopne
jbe
add
fimull
test
add
add
add
xchg
jbe
add
shlb
test
fsub
fwait
jbe
add
sbb
inc
divl
loopne
jbe
add
adc
test
or
stos
jbe
add
sbb
test
and
mov
sti
add
shlb
test
js
mov
fidivrl
inc
notl
ret
jbe
add
shlb
inc
imull
add
sbb
mull
jmp
movsb
jecxz
add
jg
test
arpl
jmp
mov
int
aaa
arpl
add
jg
test
arpl
add
jg
test
arpl
add
jg
test
jecxz
add
in
xorl
jg
xorl
jg
xorl
add
add
jg
xorl
jle
xorl
test
jne
push
js
sub
cmpsl
and
lahf
jo
sub
cmpsl
and
jbe
push
scas
sti
cmpsl
and
jne
push
xchg
sbb
jne
push
jle
adc
jne
push
pop
or
jbe
push
dec
dec
inc
test
jbe
push
ss
test
cmpsl
and
pop
xor
jbe
push
add
mov
mull
leave
mov
mull
test
pop
mull
imul
inc
add
cmpsl
sbb
mull
imul
inc
add
mov
mull
test
arpl
and
mov
arpl
and
leave
mov
mull
testl
jb
dec
arpl
mov
xchg
repz
mov
mov
add
jg
add
idiv
pushl
jl
xor
add
mov
or
or
ret
xchg
mov
cli
mov
mov
add
shlb
add
sti
mov
add
jecxz
ljmp
mov
add
idivl
std
add
bound
pop
mull
pop
mull
sti
test
in
add
add
add
mov
in
mull
in
in
in
add
push
in
add
pop
xchg
repnz
in
inc
hlt
cli
add
in
mov
ljmp
mull
ret
andb
add
mov
insl
add
daa
in
cld
in
add
addr16
add
loopne
aaa
xlat
cltd
cld
adc
cs
hlt
bound
add
add
pop
push
jmp
xchg
loop
in
hlt
bound
jmp
lock
div
hlt
bound
jo
push
add
hlt
fistpll
shlb
jmp
repnz
in
hlt
xchg
and
push
std
sbb
push
add
hlt
flds
sub
push
jmp
fs
push
jmp
hlt
or
movsb
testl
scas
add
push
daa
xchg
or
inc
sbb
pusha
push
add
pusha
lea
push
daa
ficomps
add
pop
stc
rclb
mov
ret
add
repnz
push
call
loopne
popl
lret
clc
shl
addl
add
push
pop
mov
jecxz
jae
mov
mov
push
mov
scas
add
dec
sub
inc
pop
sbb
pop
lea
xor
pop
repz
xchg
insl
xchg
add
adc
pop
sbb
xor
notb
out
add
mov
repnz
mov
xchg
add
add
sti
mov
mov
add
add
idiv
rclb
mov
mov
std
mov
sbb
and
stos
add
idiv
mov
mov
idiv
js
test
sti
mov
inc
jle
filds
testl
jmp
mull
adc
fs
outsb
jae
xor
sbb
lret
fcos
sbb
or
add
call
jmp
out
in
jp
jb
add
in
jbe
hlt
in
xor
inc
xchg
sub
dec
loopne
cmp
dec
out
mull
push
in
jp
inc
fnstcw
dec
mov
adc
in
jns
out
nop
fsubr
mov
add
in
leave
push
fistpll
xchg
subl
in
jmp
add
add
subl
sub
popl
call
dec
cmp
in
in
push
add
ljmp
jmp
in
in
mulb
add
jne
je
out
rcll
cmpsb
leave
mov
sub
insl
xor
stc
push
lock
jl
jmp
or
bound
jmp
xor
sub
mov
push
add
sbb
mov
incb
idiv
xchg
cltd
pop
mov
imul
jmp
pop
clc
add
sbb
xchg
mov
addr16
into
arpl
cmp
adcl
push
popl
add
add
add
mov
arpl
jne
sbb
mov
popl
add
xchg
idiv
push
mov
mov
idiv
push
add
add
mov
xrelease
jne
add
add
sbb
jl
repz
add
repnz
mov
filds
add
adc
jp
inc
adc
out
cwtl
add
jl
test
sti
pop
jge
iret
sar
std
mov
xor
mov
inc
sti
cwtl
fldl
int
sbb
std
andb
sbb
nop
add
loope
imul
push
sti
jecxz
je
add
add
aad
inc
sahf
lods
jp
jg
add
jmp
repz
in
js
jnp
add
add
add
call
sub
arpl
hlt
in
mov
jmp
in
jp
jp
add
and
cld
in
add
enter
call
jb
aad
mov
jmp
sbb
mull
pusha
jge
add
hlt
and
jmp
hlt
bound
jmp
cmc
mov
sbb
hlt
bound
push
bound
jmp
lock
jo
jb
jmp
clc
bound
cmp
popf
mov
clc
bound
pushf
or
cmp
bound
jo
jnp
jmp
pop
addr16
jmp
hlt
bound
jmp
add
add
jo
add
pusha
push
inc
pop
rcrb
add
pusha
jg
outsb
fs
add
jmp
and
sbb
pusha
jae
aad
push
add
pusha
jg
imulb
add
test
sbb
mov
in
mov
sbb
sar
add
push
pusha
lea
push
push
push
sbb
adc
cmp
mov
stc
add
jns
xchg
add
add
cmp
fdiv
cmpsb
test
testl
cmp
add
add
or
add
add
mov
jb
jl
add
mov
jb
dec
ret
call
hlt
jns
es
dec
mov
pop
xchg
stc
std
and
dec
sbb
shlb
xchg
add
test
std
add
add
add
add
mov
mov
push
push
insb
jnp
mov
div
push
test
mov
add
addl
in
je
in
sub
pop
pop
ds
push
aam
cltd
out
scas
jmp
popf
mov
std
jge
test
xor
add
add
in
movsb
daa
pusha
cmpsb
add
push
loope
pop
mull
mov
cltd
aaa
lds
add
add
bound
fs
pop
sti
in
mov
loope
pop
mull
mov
pop
in
add
in
mov
jmp
sbb
in
jmp
mov
push
loope
fcomps
in
bound
jl
push
in
bound
jmp
clc
bound
jo
jb
jmp
lock
mov
pop
push
stos
cmc
xor
lahf
dec
mov
sbb
bound
popa
jecxz
add
outsl
or
jmp
hlt
bound
jmp
sarb
bound
test
jle
xchg
idivl
repz
add
adc
sub
fs
into
adc
sub
dec
push
mov
dec
push
push
adc
cltd
stc
pop
fadds
pop
ret
roll
fs
add
pushf
xchg
pop
fs
int
and
push
adc
add
pop
adc
push
lcall
xchg
cwtl
stc
mov
mov
stc
leave
cwtl
mov
lea
test
ret
idiv
pusha
je
add
out
and
test
add
pop
ret
test
enter
sti
mov
mov
jle
jl
adc
mov
aaa
add
xchg
push
add
sbb
mov
mov
mov
xor
push
outsb
sbb
notl
sbbb
mov
inc
outsb
push
es
mov
insb
pop
sbb
mov
and
add
add
ljmp
jb
dec
ret
call
inc
arpl
mov
jmp
mov
enter
mull
sahf
adc
add
lcall
jbe
or
xor
inc
cld
xorb
pop
push
mov
in
push
mull
or
pop
leave
sbb
cltd
in
jle
sti
push
add
add
pop
rcrl
das
leave
sbb
fwait
pusha
cld
lret
pop
xor
ja
add
mov
loope
imul
push
outsl
fcompl
jmp
jmp
jo
jb
jmp
clc
bound
sbb
mov
jl
jmp
fprem
bound
jo
jp
jmp
lcall
jmp
hlt
bound
add
pop
push
jmp
pop
jnp
jb
mov
mov
mov
jmp
int
call
divl
hlt
or
jb
data16
hlt
pop
dec
lds
mull
add
arpl
push
push
dec
mov
pusha
test
out
sub
es
mov
out
and
out
and
push
test
lret
nopl
lea
push
add
pop
lea
adc
push
push
sub
mov
idiv
push
lahf
jo
xor
lahf
add
out
push
jmp
dec
mov
add
push
imul
add
add
mov
or
adc
or
aaa
mov
xchg
sti
jge
add
xorb
or
add
mov
mov
test
add
add
mov
add
mov
add
idiv
js
lods
or
mov
or
pusha
adc
daa
xor
testb
push
sbb
ljmp
mov
add
mull
mov
call
inc
jns
cmp
inc
or
out
add
out
and
in
xchg
popa
sub
outsl
in
or
aam
inc
dec
fs
push
mov
insb
ljmp
sti
in
add
imul
in
add
mov
fimuls
outsb
shl
in
add
imul
add
add
test
int3
and
leave
daa
leave
data16
adc
cld
repnz
add
bound
fs
arpl
jmp
xor
dec
add
fistps
adc
bound
jb
inc
push
jae
xchg
cmp
popf
or
jmp
bound
xchg
lock
mov
rclb
push
jmp
add
fdivrl
fisttpll
jnp
sub
cmp
out
bound
pop
imul
insb
push
and
insl
and
sub
pop
gs
bound
jmp
lret
cmp
pop
dec
testl
lds
and
sysexit
into
xchg
jle
lahf
xchg
cltd
stc
sub
fisttpll
adc
imul
mov
add
adc
lods
jo
push
sbb
sbb
sbb
mov
dec
push
push
adc
cltd
stc
mov
inc
push
mov
fldl
xchg
push
mov
push
cli
mov
cltd
lea
mov
testl
jl
cmp
adc
and
adc
lsl
pop
das
js
jp
cmp
idiv
adc
add
jno
idiv
add
jbe
je
jmp
mov
imul
je
xor
adc
mov
xor
hlt
inc
test
add
out
or
mov
data16
xor
mov
pop
adc
shll
push
repz
pop
je
test
andb
js
daa
in
dec
outsb
xchg
cli
or
mov
stos
sbb
and
jecxz
cmc
mov
sub
inc
test
mov
mov
mov
jmp
jle
addr16
add
std
inc
mov
mov
ss
pusha
arpl
xor
ds
mov
xchg
and
shlb
push
push
scas
repz
ljmp
test
nop
hlt
imul
movsl
subl
cli
jne
push
mov
mov
lods
lea
in
in
hlt
bound
jmp
jmp
bound
in
bound
mov
subl
cmp
je
add
add
fisttpl
jecxz
out
in
in
bound
jmp
mov
mov
bound
add
cmp
shrb
dec
or
adc
push
mov
ud0
fidivrl
push
mov
cwtl
adc
popa
push
add
add
push
dec
jg
cli
jbe
jl
pop
jg
adc
add
and
add
add
movsl
or
arpl
push
add
pusha
lea
add
lea
aaa
mov
push
test
or
mov
jo
add
dec
push
mov
push
jo
and
push
dec
adc
dec
pusha
ljmp
jnp
or
divl
adc
lret
movsl
inc
xchg
add
add
movsl
sbb
clc
adc
and
adc
sub
push
dec
push
pop
xor
adc
call
insb
int
sub
inc
add
testl
add
xor
add
xor
repz
jmp
in
sub
inc
adc
add
xlat
sub
pop
xor
rol
xor
xorb
pop
xlat
xor
sysenter
jge,pt
xlat
mov
mov
lock
pusha
in
add
leave
sub
add
push
testb
in
add
testb
in
add
add
leave
push
jle
icebp
pop
mull
les
shll
xor
mov
stos
push
jl
push
int
xor
out
add
add
push
dec
or
std
push
and
leave
push
cmp
cmpsl
cmp
out
scas
fmull
mov
inc
lds
faddl
mov
jnp
jle
mov
mov
jbe
ds
sub
lret
sti
movsb
jmp
jp
and
in
mov
arpl
and
sbb
push
mov
dec
cltd
out
pop
mov
fcmovnb
add
add
pop
inc
and
cmp
inc
and
pop
push
add
aaa
push
adc
mov
cmp
push
decl
stc
inc
sub
inc
aad
lea
push
push
movsl
enter
jns
cmp
pop
and
adc
bound
add
gs
test
add
add
inc
inc
jge
or
push
push
xor
cltd
repz
push
mov
fdiv
add
and
int3
push
mov
jb
imulb
mov
test
fistpl
call
and
sbb
les
jns
jmp
add
addb
add
or
testl
adc
jns
xorl
jl
mov
inc
fistl
cmp
cmp
pop
sbb
insb
addr16
jl
arpl
jp
fldt
jp
jp
clc
stos
xchg
ret
or
mulb
fcomp
jp
testl
add
add
xor
fwait
mov
lods
pop
les
jns
ljmp
mov
add
dec
xchg
outsl
out
lahf
sub
add
add
frstor
fisttps
jo
fstpt
js
jnp
imul
xchg
pop
push
or
xchg
jnp
sbb
mov
inc
ret
ljmp
push
testb
add
jno
add
hlt
jecxz
ljmp
mov
iret
sub
jmp
jbe
add
jbe
add
fcoms
and
movsl
fcmovne
xchg
popf
mov
sahf
mov
cs
scas
es
fbld
jp
cmp
icebp
outsb
and
push
jb
fiadds
xlat
jp
pop
or
sub
pop
flds
add
les
xor
jbe
push
jge
enter
sub
or
stc
jmp
cmp
mov
mull
lahf
fistps
lea
add
or
popa
push
add
jns
sub
jp
lds
and
sub
into
jbe
repnz
fimuls
incb
stc
call
xchg
or
clc
insl
and
jp
orb
pop
pop
jb
sti
sbbl
je
add
testl
mov
or
cmp
add
mov
sahf
pop
sub
pop
cs
insb
mov
fcmove
pusha
popf
in
aaa
jecxz
ss
add
pop
insl
push
mov
repnz
inc
in
fsubrs
cmp
dec
ja
pop
lods
out
and
pop
jle
add
and
bound
dec
jbe
rorl
dec
sbb
aas
adc
push
inc
fsubs
fistl
xchg
xor
jle
add
xor
stos
adc
cs
pop
mov
inc
aas
aad
jns
jmp
jle
add
add
aas
stc
jl
aas
std
push
and
nop
fucomp
push
sbb
xor
and
or
cmc
push
andl
in
mov
jo
leave
sbb
xlat
xchg
fsubl
sub
stos
je
rorl
push
stos
fxch
adcl
or
adc
sub
and
pop
pop
and
sbb
and
hlt
bound
jae
cs
hlt
bound
xchg
sti
cmp
jp
jae
add
fiaddl
jp
fsubl
jmp
fs
repz
xor
mov
mov
inc
push
jb
dec
iret
cmp
jae
mov
daa
and
ds
add
test
adc
ds
push
cmp
call
jl
stc
decl
jp
or
jb
add
xor
push
mov
stc
mov
inc
mov
popf
div
stc
mov
inc
ret
xchg
addb
pop
adc
pop
bound
add
adc
cmp
sbb
jg
xor
in
negl
mov
pop
push
mov
shll
lock
test
jp
idiv
clc
push
inc
and
lahf
jecxz
dec
loopne
cmp
cmc
inc
and
fists
mov
dec
add
xorb
pop
fcmovnb
xchg
and
jl
jecxz
add
outsb
push
es
dec
cmp
adc
add
add
add
xchg
jl
jmp
add
movsb
pop
jnp
dec
arpl
cmp
in
add
jg
arpl
add
inc
daa
add
mov
mull
dec
fistl
je
into
stos
push
cmp
insl
cmc
jmp
push
outsb
or
outsb
mov
and
bound
adc
sahf
jp
jmp
lock
shll
outsb
push
leave
xor
je
lahf
xchg
in
jmp
jp
inc
and
fmull
shl
cmpsb
fs
sbb
adc
add
push
push
or
adc
push
int
ljmp
scas
mov
mov
filds
push
movsb
jmp
mov
sub
cmp
movsl
adc
cmp
addr16
jmp
sti
pushw
jmp
hlt
popa
push
jmp
cmc
negb
hlt
stc
add
push
div
or
scas
mov
test
jmp
decl
and
jns
imul
hlt
jmp
add
adc
stos
mov
inc
fstl
imul
and
repnz
pop
cmp
test
jno
sbbl
add
add
add
push
bound
addl
push
add
cli
les
sbb
inc
mov
lcall
cli
dec
push
push
push
mov
out
adc
jg
cli
inc
and
dec
andb
push
jne
loop
sub
push
add
in
add
dec
cmp
notl
add
jecxz
cmp
aas
cli
push
cmpsl
lock
mov
jne
pop
cwtl
or
std
rorl
into
cmp
cmpsl
xrelease
int3
push
stos
lock
call
or
incl
mov
adc
in
inc
add
call
jl
pop
push
mov
les
divl
testl
xor
nop
jge
scas
jecxz
add
hlt
outsb
pop
fldl
jl
orl
sub
pop
add
addr16
in
mov
jmp
xchg
add
std
pop
mull
mov
in
add
jmp
adc
roll
mull
cld
outsl
in
pop
mull
mov
addr16
add
ljmp
jns
loope
mul
addr16
hlt
in
lea
add
add
pusha
cmp
mov
std
add
pop
jmp
mov
jmp
sti
hlt
bound
jmp
lock
jo
push
add
hlt
jmp
push
mov
clc
bound
cmpsl
repz
jmp
hlt
bound
jmp
imul
and
jnp
and
jb
push
in
bound
mov
sbb
push
jb
dec
add
hlt
dec
dec
add
xlat
xchg
andl
sbb
pop
push
cmp
add
jmp
stc
clc
bound
ret
push
add
pop
pop
sbb
mov
push
and
jmp
lea
ja
cli
push
add
movsl
jae
iret
mov
lds
lcall
xchg
xor
add
push
xor
add
push
xor
add
xor
mov
inc
add
gs
push
cmp
and
es
in
sub
gs
ret
fisubrl
lret
test
mov
jbe
aam
testl
push
mov
add
div
sarl
sti
jnp
out
je
decl
out
or
rorl
das
cmpb
icebp
rorb
les
jl
lcall
mov
rolb
ret
xchg
dec
notl
cmc
mov
test
mov
rorb
add
lret
add
adc
or
ror
outsl
pop
bnd
add
add
jne
in
shrb
ds
in
add
addr16
xorl
das
cmc
sbbb
or
cli
lret
jg
fidivl
imul
gs
or
sub
cmp
mov
jbe
cmovne
loop
or
icebp
or
andl
std
fsubrp
ja
xchg
jbe
xlat
inc
mul
leave
or
add
add
mov
sub
push
jmp
shll
stos
jne
push
popf
mov
adcl
data16
mov
divl
idiv
mov
bound
mov
sbb
jmp
loopw
jmp
jle
push
insb
or
mov
pusha
ss
in
jg
test
xor
neg
test
cli
bound
test
insb
or
xchg
cli
jmp
ret
pusha
mov
cmp
add
mov
jg
adc
xchg
add
mov
adcl
shr
push
sub
mov
jg
out
test
pop
jmp
subl
or
sbbl
add
or
mov
xor
daa
push
bound
pop
mov
jg
jecxz
add
xchg
sbb
jb
push
jmp
mov
jecxz
add
mov
jae
ficoms
call
inc
mull
mov
jl
mov
je
incl
imull
lds
scas
mov
inc
mov
mov
out
das
clc
and
add
add
mov
push
jp
ficoml
mov
add
cmp
jo
mov
pop
outsb
cmpsl
cmp
mov
cmpsl
incl
out
lret
jle
mov
ss
mov
or
out
addr16
jmp
data16
aaa
fs
stc
pop
jbe
aaa
fs
jo
aad
std
jmp
test
push
in
js
lds
fs
or
in
arpl
add
mov
cmc
add
out
and
out
and
call
jne
add
jmp
dec
push
gs
out
les
imul
jmp
insb
in
mov
out
les
pop
jne
mov
mov
popa
repz
jno
xor
call
pop
fsub
push
push
lahf
in
inc
fnstsw
push
jb
ljmp
dec
mov
in
test
pop
out
jecxz
lea
cmp
inc
fcmovnbe
test
push
xor
lret
push
jmp
xor
push
clc
and
enter
xor
mov
add
add
xor
fiaddl
jl
fsubs
mov
xor
cmc
cmpl
fmull
lcall
mov
out
add
clc
pop
mov
into
pop
cwtl
ja
inc
shrl
push
adc
shll
mov
mov
data16
popl
add
xchg
cli
xlat
mov
sbb
xchg
popa
mov
jmp
add
jnp
or
pop
aas
div
mov
in
jnp
add
cmp
ja
jl
fnsave
pop
add
testl
je
testl
insb
xchg
mov
adc
mov
mov
add
add
test
xchg
fisttps
jbe
fiadds
idivl
mov
adc
shr
cli
cld
idivl
or
pop
aas
mull
shll
scas
fdivp
fstpt
sar
insl
jbe
jbe
loope
adc
popl
movsb
arpl
inc
neg
cmp
loop
outsb
filds
add
add
arpl
add
mov
pop
clc
bound
jo
filds
pop
pop
add
and
mov
mov
add
hlt
mov
imull
mov
in
add
sbb
jno
insb
fstl
fcompl
xchg
div
sub
mov
mov
push
mov
bound
loop
arpl
repz
test
popa
test
in
mov
add
jge
push
hlt
pop
scas
jmp
stos
insl
dec
push
jne
std
jmp
mov
adcb
mov
call
jo
aas
into
jo
out
loop
pop
mov
fnsave
scas
out
sbbl
sti
insb
xchg
vpor
into
jo
out
loop
rep
push
sbb
add
fcmovnbe
shll
daa
enter
jecxz
push
xor
fcomps
add
dec
fcmovne
shll
shlb
ja
popa
cwtl
push
add
xchg
xor
fcmove
shll
daa
rclb
ja
shll
scas
lods
lea
mov
jg
or
cs
mov
jnp
ret
push
push
in
and
adc
punpckhbw
xor
mov
jnp
aas
mull
add
mov
sar
lahf
sti
inc
aas
mul
lret
in
pop
mov
add
fidivs
push
inc
add
or
mov
add
push
ffreep
iret
std
shlb
inc
scas
lret
jmp
stos
xor
push
push
fistl
push
iret
std
mov
xorl
addb
jmp
jae
rcll
mov
into
std
pop
bound
bts
dec
push
jmpw
std
mov
imul
xorb
rcrl
fildll
aam
loope
cld
cmpsl
jp
iret
add
test
imul
dec
jecxz
inc
neg
stos
shll
jnp
ror
insb
fs
fsubs
jge
jae
add
in
xorb
fisttpl
outsl
and
pop
arpl
shll
jnp
iret
jp
je
jae
mov
cmc
jecxz
testb
and
cmp
es
and
bound
add
negl
jbe
sbb
add
add
cmp
and
xlat
inc
cltd
les
xchg
and
jg
stos
in
imul
jmp
pop
repz
mov
int3
fidivl
ja
xchg
insl
push
push
xchg
jmp
ds
inc
and
es
mov
hlt
inc
jmp
jno
push
add
roll
pop
push
add
xor
jecxz
sub
lea
cmpsl
jecxz
imul
jns
pop
xchg
or
xchg
fstpt
imul
add
cli
sbb
adcb
out
imul
stc
xorl
cmp
cmp
pop
clc
dec
pop
jae
or
xchg
jmp
fadds
idivl
daa
ret
xor
idivb
push
test
hlt
dec
or
testl
add
cmp
call
lods
jns
notl
add
adc
repz
mov
aad
loopne
add
inc
add
xchg
aad
enter
pop
add
xchg
aad
test
xorb
mov
aad
nop
lock
mul
or
sarl
fcomps
push
and
int
call
pop
mov
imul
iret
xor
or
out
jg
pop
ljmp
jl
insl
into
or
fcompl
in
add
add
add
push
stos
cld
call
pop
leave
repz
fmull
sub
add
inc
pop
jbe
insb
jmp
gs
in
aad
repz
mov
jle
adc
out
insl
mov
repz
jmp
inc
push
scas
and
out
jns
testw
std
out
push
scas
ret
out
xor
loope
icebp
hlt
adc
rcrl
xchg
hlt
bound
bound
adc
pop
subl
arpl
loop
sub
fsts
jo
loop
in
mov
inc
jmp
fcompl
push
and
mov
clc
loope
ja
push
fs
add
fs
mov
adc
outsb
in
add
add
add
mov
aaa
add
mov
mov
adc
rorb
jbe
pop
je
aad
add
or
loop
xor
push
xchg
aaa
push
mov
bound
call
push
push
notb
and
push
xchg
jmp
inc
call
lea
outsb
xor
inc
add
lahf
int3
std
mov
jl
inc
xchg
fldt
cmp
inc
add
fistl
fcmovne
std
push
mov
jl
inc
add
hlt
jl
fiaddl
dec
and
jae
jnp
inc
das
dec
fidivrl
push
movsl
lret
es
add
int3
std
add
mov
js
fildll
ficompl
inc
call
add
out
inc
cld
jle
rorb
xor
jbe
ret
inc
not
stos
lret
inc
jnp
lret
lcall
jle
jae
fisttpl
jecxz
inc
not
mov
lret
bound
jle
push
fstpt
call
xor
xor
in
aam
xor
lahf
hlt
ret
fadd
jp
int3
sbb
das
js
or
jmp
jge
jecxz
js
fs
ss
or
sub
xlat
cli
imull
insl
lret
push
sbb
stc
add
jmp
mov
arpl
hlt
fiaddl
sti
xor
cld
sarl
je
cmp
es
bound
jmp
repnz
cmp
xor
fs
fs
rcr
jp
cmp
fs
mov
popw
icebp
loope
inc
mov
popw
jg
xor
popa
repz
add
mov
jmp
jno
es
stc
decl
jle
dec
cltd
push
addb
jle
sbb
addb
lcall
pop
mov
xchg
pop
push
mov
add
add
das
push
push
inc
in
or
cmp
mov
arpl
mov
outsb
jg
daa
push
test
inc
sbb
push
cld
xchg
ror
push
mov
dec
xor
cmpsb
pop
inc
addl
shrd
sbb
test
testl
in
inc
push
fmuls
testl
add
dec
add
testl
add
dec
add
testl
add
dec
add
testl
add
dec
add
testl
add
dec
add
testl
add
dec
add
testl
add
dec
add
testl
add
dec
add
testl
add
in
add
in
add
add
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
mov
mov
mov
loope
adc
or
pop
xorl
sbbb
dec
popa
movsl
sbbb
add
add
dec
push
xlat
pushf
push
stc
movsl
push
inc
mov
lret
fadd
sub
rorl
xchg
ss
andb
addr16
popa
pop
adc
sub
xor
push
in
pop
sarl
es
sub
bound
mov
jecxz
int
aam
push
mov
addr16
subb
add
add
outsl
jbe
fs
shlb
mov
ret
sub
lret
daa
in
insl
or
hlt
bound
add
fs
add
fs
add
fs
add
fs
add
fs
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
lock
imul
sub
add
add
or
fs
sbbl
dec
pop
pop
in
test
push
add
push
add
push
add
push
add
push
add
push
add
push
add
arpl
add
dec
add
testl
add
dec
add
testl
add
dec
add
testl
add
dec
add
testl
add
dec
add
testl
add
dec
add
testl
add
dec
add
testl
add
dec
add
testl
add
dec
add
testl
add
dec
add
testl
add
dec
add
mull
add
in
add
in
add
in
add
in
add
in
add
add
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
ficoms
es
rorb
aad
push
shll
jns
add
add
outsl
dec
jmp
xchg
xor
loopne
jae
or
das
icebp
hlt
lea
add
or
mov
hlt
into
popa
sbb
hlt
popa
cli
or
push
or
xchg
push
stc
adc
jae
in
bound
repz
ror
push
mov
shll
mov
hlt
je
rcl
xchg
imul
lea
jle
sarb
fwait
push
xor
divl
xchg
shll
xor
pop
xor
lods
mov
lcall
mov
arpl
mov
xchg
push
arpl
xchg
jbe
add
pop
outsb
std
mov
ficoms
je
lock
add
add
push
push
xchg
jae
pop
daa
xor
cwtl
outsb
popa
inc
mov
mov
jb
mov
mul
add
frstor
arpl
dec
and
jecxz
jno
call
xor
scas
xor
stos
add
test
pop
xchg
popf
add
scas
pop
jno
dec
sub
mov
add
jge
jae
add
add
sub
insl
bound
pop
pop
xor
dec
and
and
pop
add
sub
jne
xor
out
repnz
out
add
push
xor
sub
sub
mull
and
jmp
xchg
add
iret
mov
aam
in
and
lret
enter
into
xorb
mov
pop
xor
aam
clc
jmp
sbb
jecxz
in
sub
dec
xor
ret
aaa
sub
sbb
lret
or
inc
in
and
add
inc
arpl
sub
or
push
arpl
and
add
notl
shll
adc
sub
enter
aad
adc
push
enter
enter
mov
and
push
test
add
add
arpl
add
push
mov
arpl
mov
xchg
xor
repz
gs
loop
pop
jmp
into
aam
inc
enter
and
jbe
sti
int3
popa
sbb
arpl
sti
int
adc
sti
shlb
push
int3
addr16
mov
jge
filds
xor
add
lret
jno
dec
nop
push
outsb
mov
xchg
imul
jae
mov
jne
ja
arpl
rcll
push
je
xchg
jb
jo
push
popa
scas
xchg
push
push
xchg
pop
arpl
mov
stos
pop
jbe
mov
mov
mov
xorl
xchg
push
out
xchg
push
imul
xchg
fiadds
arpl
js
xor
push
jge
imul
xor
data16
bnd
sbb
cs
ljmp
enter
aad
jno,pn
repnz
jmp
pop
iret
jmp
pop
lahf
dec
ss
mov
add
mov
push
xchg
scas
and
add
xchg
dec
mov
negl
add
xor
popa
addr16
push
jns
push
je
jb
imul
pop
push
push
and
and
int3
shll
and
test
movl
fdivrs
xchg
es
rorl
leave
mov
test
add
aam
mov
lahf
mov
in
es
inc
daa
mov
and
rorl
mov
bound
rorl
idivl
pop
sub
into
push
cmp
sbb
sti
ss
arpl
sub
movsl
popl
sti
ffree
outsb
enter
lret
enter
test
gs
jae
xlat
lds
add
add
mov
je
daa
les
and
je
push
mov
mov
mov
xchg
adc
mov
fidivl
jo
fmul
addr16
fisubl
inc
fnstsw
xor
lret
iret
popa
jmp
ljmp
sbb
adc
rolb
sbb
push
insl
out
jg
imul
add
add
mov
xchg
pusha
imul
dec
xor
add
subl
xchg
push
arpl
nop
push
jae
xchg
ss
pusha
push
jne
sbbl
lea
lods
test
jg
imul
imul
pop
outsb
push
subl
mov
pop
gs
jne
mov
fimuls
add
mov
call
data16
pop
dec
pop
insl
push
jno
outsb
push
dec
sub
pop
and
insl
or
cmp
loopne
repz
pop
sub
adc
sub
adc
and
dec
pop
fsubs
daa
pop
fisttpl
add
icebp
xor
add
stc
sub
in
add
jmp
addr16
dec
outsb
stos
out
add
stos
cmp
xchg
movsb
xor
mov
arpl
mov
cmp
xchg
arpl
and
arpl
add
mov
add
call
fidivrl
adc
in
and
add
or
xor
int3
xor
jmp
ror
in
mov
rol
mov
add
add
aam
das
sarb
mov
aam
in
xor
bound
sarb
and
not
dec
daa
test
push
add
mov
push
dec
pop
mov
je
clc
rolb
lock
call
mov
or
lret
sti
mov
jo
sti
gs
movb
int
filds
add
add
bound
rcl
arpl
hlt
enter
shll
shlb
jae
or
shrb
mov
jae
push
xlat
push
mov
and
je
les
in
xor
sbb
addb
fadd
add
jp
jb
xchg
frstor
add
push
data16
xchg
out
jp
xor
mov
pop
mov
lock
out
mov
gs
jnp
outsb
stos
subl
test
lods
popl
cmp
push
jae
jnp
jns
jnp
js
subl
jp
jae
xchg
push
jnp
add
xor
insl
xorl
push
adcb
arpl
push
xor
popa
negl
xor
mov
jb
cmp
pop
mov
arpl
divb
or
idiv
push
push
add
dec
pop
popa
and
adc
je
dec
add
xor
imull
xor
insb
repz
sbb
insb
or
sub
jb
sbb
pop
insb
sarb
sub
lret
cmc
and
jno
loop
add
int
insb
mov
fidivrl
arpl
bound
lcall
sub
xchg
dec
sub
and
cmp
push
mov
sbb
inc
arpl
sub
sbb
test
adc
nop
mov
sti
jmp
xlat
in
or
fiaddl
pmovmskb
xor
jge
repz
add
and
in
xchg
sti
stc
and
mov
les
nop
das
lret
and
rclb
jge
sarb
adc
sub
adc
sbb
enter
mov
outsl
xor
fnstcw
outsb
sbb
rol
addr16
pop
shrb
addr16
in
movl
add
add
add
add
mov
pop
mov
jg
loope
bound
rcl
cmp
xchg
shlb
daa
shlb
sbb
sbb
arpl
or
push
adcl
jle
add
jns
jae
subb
jns
imul
jnp
fs
pop
inc
inc
inc
fs
addr16
pop
add
add
adc
push
push
pop
mov
inc
adc
push
dec
fnsave
xor
stos
aas
xor
idiv
sahf
pusha
push
add
addr16
mov
add
push
push
cltd
lcall
jnp
gs
xchg
imul
jecxz
insl
shr
inc
stos
xor
aad
arpl
fstpl
sahf
mov
je
popf
add
mov
insb
arpl
jb
pushf
sub
cmp
sub
ja
add
cmp
add
cmp
add
cmp
bound
pop
add
fs
dec
cs
inc
arpl
or
insl
pop
daa
and
orb
outsb
fidivl
pop
insb
imul
dec
push
mov
das
aas
aam
cltd
sbb
add
add
lds
aam
xorb
mov
in
push
movsl
mov
cmpsb
daa
stos
mov
push
and
mov
push
cmc
es
and
pop
daa
arpl
sub
ss
shr
push
iret
xor
and
in
add
mov
cmc
out
add
and
aaa
adc
add
adc
shlb
into
daa
loope
mov
pop
movzwl
mov
push
adc
bound
aad
insl
adc
insl
test
mov
push
jle
lds
sarb
outsb
inc
ret
bound
sbb
push
push
pop
arpl
sbb
popa
cmp
popa
sub
mov
je
adc
sbb
shlb
ror
push
cli
dec
or
bound
fst
jb
addr16
fwait
popa
shl
mov
inc
add
mov
xor
cmpsl
gs
jb
xchg
jb
jnp
arpl
addb
xchg
arpl
gs
gs
je
mov
push
dec
mov
gs
xchg
push
outsl
mov
push
add
xorb
xchg
imul
andb
mov
in
jns
add
jp
push
icebp
imul
push
push
je
push
push
push
cmpsl
adcb
nop
je
negl
and
sbb
and
out
xor
cli
add
sbb
or
arpl
push
pop
mov
add
add
cli
push
push
int3
das
push
mov
sub
jbe
lods
sub
add
hlt
sub
xor
sub
sbb
mov
arpl
pop
dec
pop
add
insb
ds
daa
pop
sbb
dec
das
arpl
insl
ds
and
pop
xor
xor
cmp
ret
mov
shrl
out
iret
push
jmp
mov
xor
mov
mov
add
mov
jnp
mov
jnp
nop
rolb
test
xor
andb
mov
pop
mov
ds
arpl
aaa
daa
pop
iret
cmp
add
rcrb
and
add
fnstcw
sbb
or
push
or
shll
iret
rorl
into
gs
xlat
roll
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
mov
add
popa
push
add
gs
insb
pop
mov
inc
xor
arpl
xorb
popa
push
add
push
das
mov
push
push
pop
mov
push
js
mov
push
cwtl
pop
mov
add
push
push
lret
fmul
lahf
push
icebp
sbb
push
xor
sahf
push
add
pusha
push
add
pusha
xchg
pop
aas
inc
outsl
in
xchg
imul
ss
cmp
add
add
idivl
jo
pop
ss
idivl
add
ja
add
div
sbb
sbb
aaa
pop
jmp
add
pop
cmp
inc
sbb
arpl
add
add
cmp
add
add
idiv
sbb
loop
jno
cmp
add
add
testl
xor
aaa
add
ja
add
idivl
and
test
jae
xchg
sbb
cmp
add
mov
inc
insl
push
arpl
sbb
cs
lahf
push
xor
out
add
loop
add
bound
sub
add
sti
and
arpl
add
add
add
loop
add
bound
pop
lahf
shlb
in
ret
iret
in
add
inc
inc
in
inc
lret
sbb
mov
jnp
mov
scas
sbbb
iret
in
add
bound
clc
inc
in
inc
pop
rolb
push
mov
ss
mov
xor
sbb
push
cmp
inc
imul
je
push
jmp
ljmp
mov
or
lds
in
ret
je
ret
cmc
cmp
outsl
fidivrl
push
mov
adc
popa
mov
loopne
cmpsl
bswap
bound
mov
xchg
loop
je
icebp
mov
xor
and
bound
jmp
add
push
push
or
jo
xor
gs
xchg
arpl
push
jb
jne
insb
sti
andl
popa
inc
push
loopne
jb
clc
lea
divl
stos
andb
pusha
inc
jb
test
stos
pop
insl
gs
xchg
je
mov
cmp
push
cmp
jbe
mov
jb
popa
add
add
push
xchg
arpl
jbe
outsl
mov
jb
jae
insb
jnp
arpl
mov
jne
popa
negl
pop
inc
jl
jbe
scas
and
arpl
jge
addr16
pop
push
jb
outsl
and
jle
imul
inc
sbb
and
push
sub
out
xlat
icebp
inc
push
jo
sub
rcrb
cmp
add
add
outsl
xor
std
or
sar
cmp
fs
sub
xor
xchg
out
je
push
adc
in
outsb
nop
and
data16
out
je
mov
in
outsb
mov
mov
aas
xor
inc
push
push
mov
ljmp
sub
push
roll
inc
lret
in
orb
mov
stc
out
mov
wrmsr
fcoml
int
pop
mov
sbb
ret
loop
or
mov
das
or
shll
aam
sar
mov
mov
and
xchg
adc
nop
rorb
push
cmpsb
lds
rol
adcb
int
and
gs
out
ss
ret
addr16
sub
popa
add
test
add
or
es
fmul
bound
loop
es
test
jecxz
insb
push
sub
int
or
mov
sub
fdivrl
sbb
or
cmpsl
inc
mov
sbb
sub
inc
insb
dec
movb
cmp
sbb
arpl
sub
push
jge
add
jbe
cmp
arpl
add
add
pop
outsb
jno
pop
imul
outsl
sub
sbb
jno
ss
sbb
test
cmp
and
ss
sub
add
dec
jmp
subl
sub
push
imul
pop
bound
pop
cmp
inc
out
dec
sub
cmc
inc
push
imul
inc
xor
divl
sub
cmp
negl
and
sub
and
sub
repz
inc
mov
cs
repz
sub
sti
out
and
xor
in
das
and
jb
and
cmp
and
cmp
and
cmp
and
cmp
and
pop
cmp
out
cmp
mov
or
ja
ss
sub
mull
jb
add
add
cs
xor
dec
dec
jno
cld
sbb
or
adc
adc
fdivs
retw
hlt
and
dec
enter
xchg
mov
sub
scas
test
dec
lcall
sub
lahf
daa
and
push
mov
sub
sub
xor
testl
daa
and
and
ret
and
les
xor
lahf
pop
cmp
lahf
and
add
lret
pop
loop
fldt
ret
movsb
into
adc
aam
test
sub
int
mov
movsb
push
mov
hlt
xchg
popl
mov
fistps
pop
lcall
gs
rorb
scas
addr16
cld
xchg
inc
cmp
out
bound
sbb
lds
adc
es
enter
mov
cmp
mov
or
mov
addr16
fstl
addr16
or
enter
into
or
jb
adc
jno
gs
dec
imul
pop
pop
data16
imul
add
dec
scas
aas
push
jb
push
add
jne
outsl
mov
ja
push
inc
push
aas
outsb
inc
xchg
push
insl
cmp
outsl
sub
popa
sub
pop
inc
mov
cmp
push
aaa
jne
outsl
jmp
mov
lock
mov
ljmpw
mov
push
jl
push
outsl
push
push
popf
jb
insl
das
jae
negl
add
mov
mull
push
sar
ss
add
jno
rorb
popa
idivl
push
testl
sub
mov
mov
add
jmp
aas
inc
inc
dec
aas
inc
xor
cmp
push
negl
dec
dec
jge
insl
and
push
sub
bound
ss
ss
dec
pop
xor
packsswb
push
xor
sub
dec
insl
fisubl
aas
mov
mov
lret
and
bound
lds
lret
and
xchg
lods
inc
popf
roll
addb
int
lock
fwait
cs
mov
xchg
xchg
sahf
inc
dec
enter
ret
inc
enter
ret
xor
push
xor
add
add
mov
cmp
adc
adc
outsl
int
adc
add
movsb
cmp
and
or
sbb
push
adc
adc
push
stos
mov
mov
int3
mov
push
push
mov
in
addr16
fcmovnb
pop
cwtl
mov
addr16
rol
gs
hlt
xchg
addr16
fists
lea
add
add
mov
inc
je
ret
sub
imul
push
adc
push
sbb
mov
popa
or
aam
push
sub
inc
xor
xor
pop
push
jl
pusha
gs
push
pop
outsl
push
mov
fs
sub
pop
inc
mov
inc
inc
pop
popf
pop
inc
jae
arpl
jb
pop
push
xchg
outsl
xchg
pop
jb
pop
pop
dec
jb
push
outsb
push
and
imul
jl
push
or
movsb
jae
inc
popf
push
push
xchg
pop
je
pop
pop
inc
add
inc
adc
pop
in
test
fs
pop
push
push
jmp
push
arpl
jle
pop
add
inc
pop
daa
pop
aad
lds
loopne
adc
ret
add
inc
pop
cmpsl
dec
ss
rorl
adc
es
inc
lret
sub
push
jecxz
dec
outsb
movsb
xlat
and
adc
xchg
xlat
sub
iret
sub
xchg
push
push
imul
insb
pop
fisubl
je
dec
aaa
pop
arpl
and
addr16
cmpsl
ucomiss
push
add
adc
arpl
add
add
arpl
add
stos
push
pop
or
sbb
notl
adc
xlat
push
scas
aad
mov
cwtl
cmpsl
sub
mov
into
add
vmovaps
mov
xchg
daa
notl
jg
xchg
jl
add
add
xchg
push
mov
nopl
add
add
bound
inc
cmp
lret
sbb
arpl
sbb
mov
popa
inc
xor
mov
inc
std
sarl
push
add
hlt
stos
addr16
bound
pop
mov
mov
add
je
hlt
nop
popa
int3
je
jmp
mov
mov
add
add
mov
jmp
xlat
mov
mov
mov
jmp
pop
mov
xchg
or
je
and
je
lock
cmp
jae
or
je
clc
push
je
push
jl
je
jbe
je
addr16
gs
push
arpl
dec
jbe
sahf
stos
push
jae
inc
push
gs
arpl
sahf
imul
bound
push
sub
gs
push
jae
add
add
pop
push
dec
das
push
jb
pop
push
je
cmp
push
aas
push
jne
addb
jb
push
je
dec
jnp
je
stos
push
jae
inc
push
gs
push
arpl
jne
je
gs
popa
cmp
pop
jo
testl
xor
inc
fwait
adc
adc
inc
push
inc
sbb
insl
and
outsb
adc
add
pop
adc
pop
cs
push
add
jge
insb
shll
push
in
cs
in
sub
jb
cmp
arpl
out
add
xchg
jmp
add
sub
arpl
jmp
inc
and
arpl
fsubs
cmp
xor
sub
int3
sub
and
inc
mov
pop
daa
dec
leave
or
cmovs
cmp
adc
cmp
jecxz
xchg
cmp
and
mov
dec
sarb
pop
adc
sar
mov
xchg
mov
and
cmpb
mov
mov
sub
sarb
rcrl
xchg
lds
sbb
pop
xchg
mov
push
les
pop
mov
je
adc
es
pop
xchg
sub
enter
popl
pop
enter
arpl
stc
mov
or
ret
pop
sub
test
cmp
sahf
gs
xchg
popa
cli
add
enter
xchg
insl
cmc
pop
mov
shl
bound
in
lds
cmpsl
insl
das
sub
fistpll
add
in
gs
hlt
test
lahf
fnstenv
jb
mov
jb
jb
outsl
dec
bound
jns
fs
push
push
jno
jp
imul
push
je
jbe
jne
subb
ja
push
cmp
ja
push
arpl
je
stc
insb
push
push
mov
jae
subl
pop
jae
data16
add
bound
jb
push
outsl
xor
push
push
dec
mov
push
push
aas
xchg
dec
push
arpl
jb
jg
inc
push
imul
and
aam
jb
or
insl
arpl
cs
cmp
es
cmp
adc
and
imul
inc
lea
jb
cmp
jno
push
pop
sbb
push
aas
adc
add
addr16
addr16
pop
add
sub
dec
pop
pop
add
fs
notl
arpl
adc
xor
or
insl
lds
add
call
inc
pop
xchg
push
add
and
fwait
push
stos
mov
mov
mov
xor
jns
dec
mov
aaa
cmp
orb
add
add
xchg
pop
and
dec
sub
cmp
push
mov
and
inc
xchg
adc
sub
inc
aaa
adc
add
add
pop
aam
in
xor
mov
add
xchg
in
xor
mov
mov
mov
sub
mov
mov
aaa
movl
je
leave
mov
add
in
mov
movsb
push
mov
adc
inc
xchg
and
inc
jno
mov
pop
ds
imul
arpl
inc
sub
mov
je
leave
jno
jmp
aam
jae
sarl
or
movsb
push
cmp
jle
or
push
sti
adc
mov
mov
adc
mov
or
jae
jo
pop
dec
outsl
pop
push
push
dec
push
js
outsb
push
outsl
imul
push
pop
popa
jb
push
je
inc
je
jno
je
inc
outsl
insl
push
pop
inc
sub
popa
popa
sub
push
popa
inc
fwait
outsl
imul
inc
outsl
xor
add
jae
dec
imul
add
add
dec
jne
jno
jne
or
test
insl
push
outsb
sbb
xor
arpl
push
arpl
repz
jmp
xor
adc
push
mov
adc
shll
add
int3
in
mov
add
xor
lods
sbb
inc
scas
adc
jecxz
arpl
mov
insb
imull
dec
lahf
adc
and
add
and
and
jno
jb
cmp
je
dec
and
insl
sbb
pop
add
push
pop
jb
dec
pop
les
arpl
and
sbb
in
das
mov
sarl
mov
pop
sahf
mov
rcll
rclb
into
push
xchg
bound
and
pushf
sbb
add
add
mov
inc
mov
subb
mov
adc
inc
ret
inc
mov
inc
adc
mov
sbb
mov
push
cmp
inc
sub
jns
adc
test
push
in
lret
jecxz
addl
hlt
test
jmp
jmp
movsb
jle
fstpt
popa
jmp
scas
stos
jbe
cli
sahf
je
ljmp
jmp
iret
mov
mov
adc
jp
mov
hlt
test
in
outsl
push
in
push
and
movzbl
xchg
addr16
ljmp
dec
sub
adcb
scas
outsl
or
ret
pop
sub
xchg
adc
inc
xor
add
arpl
add
add
inc
jae
push
push
push
inc
inc
push
push
gs
arpl
popf
jb
jae
arpl
jle
gs
popf
jb
jle
jne
push
dec
je
push
js
je
jae
jae
push
imul
sahf
pop
jb
xorl
cltd
mov
inc
pop
or
je
xorb
push
dec
sbbb
test
cmp
add
inc
pusha
je
xorl
js
shlb
subps
push
push
arpl
cmp
insl
fldenv
adc
pop
ss
rclb
adc
push
mov
sbb
out
push
mov
pop
jno
pop
sbb
cmp
insb
xchg
iret
add
lret
push
pop
fs
loopne
pop
cmp
xor
pop
inc
xlat
es
pop
stos
and
lea
pop
jne
jae
cmp
push
pop
fwait
adc
sbb
je
xchg
sbb
pop
and
push
packsswb
adc
cmp
jmp
push
push
shlb
and
or
or
testl
fsts
shlb
pop
nop
scas
ret
xchg
aad
movsl
mov
mov
sub
add
add
test
sub
je
adc
cltd
testl
jge
daa
mov
pop
inc
ret
divl
push
adc
lods
aas
sbb
pop
ficoml
mov
push
dec
shrb
popa
sbb
xchg
adc
pop
xor
pop
xchg
push
sbb
inc
lds
shlb
xorl
push
aad
xorl
sahf
gs
hlt
xchg
gs
dec
xchg
scas
dec
mov
mov
je
sbb
imul
mov
jge
in
je
je
fsubrs
jb
push
imul
xorb
add
add
dec
arpl
je
testl
jb
dec
push
pop
lea
jb
loopne
push
push
aaa
push
arpl
inc
push
gs
arpl
addb
das
dec
jne
popa
dec
bound
stos
js
add
inc
imul
imul
dec
jb
cmp
push
push
and
add
jnp
je
add
add
shlb
sbb
insl
and
and
insb
arpl
sbb
or
fidivrl
push
shrb
jb
jns
pop
mov
sbb
fisubrl
fsubrs
add
daa
ja
add
fnclex
inc
mov
daa
push
test
add
sti
inc
dec
mov
sub
pop
cmpsl
std
sbb
jno
mov
sti
lock
popf
pop
std
pop
cwtl
pop
jo
sub
lcall
pop
jo
arpl
bound
adc
pop
add
mov
test
adc
xchg
inc
ficoml
cmp
mov
and
lcall
aam
push
in
xchg
decl
loop
sti
push
imull
sub
lds
out
xor
cmpsb
sbb
add
add
mov
cmp
stos
xchg
ss
mov
mov
pop
xchg
mov
inc
test
dec
orb
push
mov
jge
xchg
je
jecxz
fs
or
sub
addl
push
ds
xchg
outsl
dec
in
pop
sub
addl
dec
sbb
bound
xor
pop
sub
mov
pop
sbb
add
pop
repnz
xor
scas
dec
pop
and
xor
mov
xor
push
inc
idivl
movsl
xor
ret
imul
bound
xor
pop
stos
or
jae
pop
xchg
pop
add
jbe
lcall
inc
xorl
xor
cmp
xor
xor
jmp
xor
mov
inc
cmp
ss
imul
data16
jb
je
imul
arpl
jae
imul
push
push
outsl
pop
inc
popa
gs
xor
inc
push
pop
dec
imul
jne
add
outsb
imul
outsb
sub
jnp
outsb
idiv
adc
or
push
insb
not
xor
rcll
add
add
dec
or
push
and
xor
shlb
and
inc
pop
and
enter
pop
popa
sbb
sbb
or
inc
mov
ss
mov
outsb
cmp
add
fcmovbe
pop
mov
push
inc
rcrl
sbb
push
dec
lcall
push
lods
jp
pop
mov
pop
push
xchg
sub
arpl
sti
cmp
add
clc
ss
push
arpl
adc
mov
cmp
pop
mov
mull
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
xchg
sbb
xchg
inc
shll
xchg
sbb
xchg
push
sbb
xchg
or
mov
cld
adc
mov
push
push
mov
add
add
add
xchg
mov
xchg
rcrl
addl
int3
in
jae
or
mov
nop
imul
in
insl
jne
push
push
mov
mov
or
push
jmp
mov
push
sub
mov
cmp
push
push
imul
add
push
pop
xorl
sbb
je
pop
test
or
gs
pop
sbb
fcomps
test
jmp
mov
fimull
mov
dec
or
pop
sub
adc
cmpsl
adc
adc
insb
xchg
xor
adc
jl
push
into
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
or
mov
push
testl
or
dec
in
xor
insb
lcall
pusha
jbe
push
popa
cmp
testl
sub
push
pcmpeqw
sub
sub
sahf
sub
insb
xchg
fdivs
xchg
lock
repnz
fs
ja
add
add
lock
lcall
aas
nop
add
jmp
xor
and
call
jge
call
jge
jmp
jo
push
push
fildll
pop
addr16
pusha
in
bnd
addr16
jo
jge
pop
fisubl
and
imul
bound
fdiv
cmpsb
jle
lret
mov
add
enter
in
leave
xchg
xchg
lret
fwait
in
fistpll
xchg
out
mov
jmp
push
mov
lock
dec
arpl
das
int3
bound
clc
or
xor
mov
sbb
xor
mov
clc
or
aas
clc
fmuls
jmp
les
sbb
roll
push
iret
lret
mov
add
nop
push
or
adc
movsb
pop
xchg
or
xchg
hlt
mov
imul
test
stos
addr16
fisttpll
xchg
ret
aad
push
jnp
jle
jge
xchg
pop
jmp
mov
lods
popa
inc
xchg
addb
add
add
movsb
insl
cmp
cmpsb
addr16
push
mov
sbb
dec
mov
inc
mov
add
fldl
popa
outsl
cmp
inc
push
push
sub
dec
fs
popa
inc
or
xor
jbe
xor
jb
popa
pop
imul
pcmpgtb
jmp
daa
push
dec
xchg
aaa
jle
scas
and
inc
mov
push
xor
add
add
push
ds
push
sub
push
ss
shlb
xor
and
jge
and
push
xor
xor
sub
adc
cs
adc
testl
jae
data16
pushl
fldt
fs
or
out
pop
leave
sbb
int
cmpl
mov
sar
aas
push
out
bound
in
jae
cli
outsl
dec
in
bound
shlb
jecxz
bound
loope
dec
ffreep
jno
call
loope
and
enter
mov
pop
daa
stos
cmc
jo
lods
hlt
arpl
mov
cmp
or
dec
sub
addr16
es
mov
rcrb
addr16
fidivrs
add
add
dec
and
es
mov
nop
pushf
aaa
cmp
push
movsl
add
mull
mov
loopne
xchg
pop
popl
and
jge
and
ja
adc
xchg
pop
mov
clc
sbb
in
add
in
loop
addl
push
adc
add
sbb
xor
sbb
arpl
jmp
add
jmp
fldenv
jmp
fsubl
jmp
bound
jmp
aad
xor
rclb
jmp
xlat
xchg
addr16
push
cmpsb
push
arpl
movsb
pop
daa
hlt
mov
xchg
add
add
andb
xchg
mov
jae
or
or
add
add
jne
sti
or
and
fstl
notl
adc
or
gs
and
bound
imul
pop
jae
dec
add
cmp
pop
and
ret
or
and
mov
push
notl
add
add
fs
jnp
jno
pop
aas
and
jbe
sub
push
imul
adc
inc
bound
imull
push
negl
pop
sub
stc
pusha
fildll
jmp
jno
lock
sbb
push
mov
sar
mov
out
jb
les
or
mov
push
shll
pop
mov
add
add
mov
and
loope
inc
jmp
data16
and
into
in
pop
arpl
add
loopne
push
cld
sub
push
cld
and
xor
int3
push
dec
out
roll
add
ret
int
inc
arpl
and
shll
test
int
test
mov
and
push
jnp
cmc
pop
sbbl
fld
xchg
add
add
add
sbbl
cwtl
push
call
cmpsl
xchg
jmp
mov
out
nop
dec
clc
sub
jp
out
pusha
dec
or
idivl
out
push
xchg
repz
arpl
shlb
out
scas
lods
jmp
cmpb
lods
lods
jmp
orb
enter
jl
cmp
jle
pop
xchg
add
lahf
mov
popa
sbb
jae
sub
jge
inc
aaa
mov
mov
jno
hlt
scas
dec
adc
mov
test
adc
cmp
lds
jle
shlb
test
hlt
fwait
sub
adc
adc
jmp
mov
ret
adc
int
push
lods
jns
insl
add
inc
jo
pop
notl
add
push
push
sahf
adc
sub
negb
std
jb
sub
adc
mov
add
pop
inc
pusha
je
push
add
data16
loop
pop
add
addr16
add
shrb
in
add
jb
cmp
pop
xor
notl
inc
push
jb
sti
testb
add
lods
add
nop
pop
inc
add
xor
inc
fisubs
imul
inc
je
jmp
in
sbb
out
cmp
repz
fcomi
jo
xchg
cmc
arpl
push
loope
add
out
add
insl
loope
jmp
repz
in
mov
insb
in
add
pop
divb
in
mov
dec
in
pushf
inc
les
arpl
inc
stos
or
push
xchg
adc
hlt
ljmp
mov
data16
inc
inc
in
sub
adc
jmp
addr16
arpl
loopne
scas
mov
dec
orb
xor
jg
adc
jge
add
add
fsts
inc
jmp
stos
cld
mov
or
stos
cmp
les
or
aad
in
rol
movsb
sbb
jmp
jle
icebp
cmpsl
xchg
xlat
movsb
mov
fidivrs
push
xor
push
lods
cmp
inc
cmpsl
sub
daa
push
push
test
dec
xor
add
xor
push
movsl
xor
jp
jns
in
xor
in
outsl
nop
lcall
jo
add
add
push
jmp
cmpsb
lods
je
xchg
xchg
ljmp
jmp
sti
mov
sbb
mov
pop
sbb
push
sbb
push
pop
xchg
leave
or
cmp
in
bound
dec
xchg
push
cli
fisubs
hlt
sbb
enter
les
xchg
cmp
mov
mov
push
push
icebp
inc
push
jle
dec
outsl
mov
push
mov
push
into
adc
imul
js
add
push
popa
into
push
push
dec
xor
pop
outsl
push
into
push
push
push
sub
ret
jb
pop
jae
pop
xor
cmp
xor
lods
ljmp
inc
ljmp
inc
or
push
fmull
fs
addr16
push
push
inc
inc
outsl
sub
jae
enter
fsubrs
testb
add
das
adc
icebp
arpl
enter
pop
icebp
dec
push
pop
out
incl
in
jno
movb
pop
repz
push
fidivrs
jae
call
lock
xchg
out
adc
std
bound
cli
adc
idiv
lods
push
xchg
mov
jecxz
mov
and
add
add
add
add
std
add
sub
cli
or
inc
fs
jae
pop
lock
sbb
pop
pop
and
iret
in
cmpb
shrb
mov
rorl
cltd
add
jp
and
int
sbb
mov
push
jg
out
arpl
call
add
dec
testb
add
and
dec
add
xchg
inc
clc
in
aas
jmp
aad
lret
add
bound
xchg
mov
loop
jg
aad
ja
push
adc
test
push
mov
scas
push
int3
jmp
insl
mov
xlat
xchg
jb
aad
popa
jmp
mov
imul
or
mov
andl
scas
popa
jnp
subb
mov
pop
cwtl
or
sbbl
cmp
pop
test
dec
cmp
jmp
dec
test
or
mov
popa
sub
jns
cmp
jg
add
add
gs
sbb
add
sub
popa
and
outsb
out
pcmpgtb
add
nop
xor
mov
jbe
movl
imul
into
sbb
scas
add
sub
push
scas
adc
jae
or
andb
inc
bound
or
das
or
mov
or
inc
add
pop
fs
jae
mov
sub
arpl
or
jmp
inc
rcrb
cmpsl
imul
mov
jo
add
add
aas
fimuls
popa
in
imul
adc
add
and
je
int3
in
pop
sub
loope
sub
into
dec
lock
sbb
in
jae
ljmp
push
mov
pop
xor
rolb
fcom
jmp
lods
data16
sbb
popf
add
mov
jo
mov
negl
add
les
fsubs
bound
in
mov
mov
xchg
clc
mulb
scas
sbb
sbb
lods
sbb
clc
push
jl
iret
aaa
jnp
fimuls
popf
fbld
in
shlb
mov
iret
xor
fcoms
and
nop
xchg
fcoml
jle
adc
fsubl
cmpsl
cmpsl
xlat
cmp
ficomps
pop
jecxz
cmpb
flds
inc
and
jne
hlt
in
push
cmpsb
push
push
sub
pop
inc
dec
stos
imul
adc
xchg
popa
jmp
pop
mov
gs
push
push
inc
incb
xchg
push
scas
sbb
out
sub
into
jg
mov
inc
push
or
inc
push
xchg
mov
add
add
lea
mov
gs
mov
add
popa
mov
add
push
jb
dec
inc
cmpsl
lds
sbb
mov
xor
and
push
xor
negb
inc
dec
push
inc
inc
dec
hlt
testb
pop
inc
ljmp
dec
add
data16
pop
jb
xor
or
inc
push
ficomps
outsl
sub
data16
or
pop
insb
lret
add
pusha
push
add
pusha
cmp
ret
cmp
movl
lea
push
jp
push
cmp
lds
push
xor
or
push
push
cmp
lds
push
xor
pop
jae
punpckhdq
xchg
xor
and
push
dec
loope
jecxz
rcrb
dec
rep
lds
mov
add
negb
fsubl
add
pop
ret
jb
xlat
loope,pt
xchg
stc
iret
insb
xchg
and
mov
insb
fs
cmp
fldcw
adc
fnstenv
pop
mov
pop
inc
repz
jmp
shll
mov
push
adc
out
push
arpl
int3
xchg
push
out
add
add
jae
fcmovnu
mov
rcl
je
fcmovne
or
add
jae
lock
sbbl
fldl2t
nop
sbb
mov
jge
out
cltd
je
testl
sahf
push
idiv
sahf
into
out
push
cmpsl
cmc
ss
add
xlat
push
xchg
lds
pop
xchg
add
xchg
out
dec
test
out
inc
mov
fadds
add
add
inc
cmpsb
fsts
arpl
cmp
jge
mov
insl
jmp
imul
jb
repz
push
pop
dec
add
dec
andl
mov
inc
pusha
std
pop
mov
push
add
insl
aad
movsl
imul
shlb
jecxz
push
int3
fisttpl
pop
mov
xchg
addr16
shll
mov
stos
jne
mov
jge
push
js
testl
divb
int3
add
push
mov
clc
jo
mov
testl
mov
pop
push
or
notb
repnz
out
divl
sbb
bound
incl
outsw
add
jae
in
add
add
pop
outsw
rcrl
jae
mov
es
je
add
push
push
addb
jns
jae
jg
arpl
push
pop
idivl
jecxz
or
insb
adc
pop
add
mov
inc
xchg
and
in
in
out
cwtl
idiv
mov
cmpsl
xlat
pop
mov
hlt
bound
shll
jo
pop
mov
jno
dec
iret
jb
cmc
add
loope
mov
add
and
adc
add
mov
loope
arpl
arpl
in
inc
or
dec
and
and
arpl
shll
xchg
fsubl
inc
xchg
sarl
xchg
mov
add
mov
fdivs
cmp
les
pop
and
cmpl
sarb
mov
clc
xchg
xchg
jae
add
mov
aam
xchg
sbb
cmpsb
inc
pop
in
test
mov
xchg
sbb
in
xchg
je
mov
inc
mov
in
push
jno
mov
and
lret
lods
into
fcoms
push
lods
lahf
popf
insl
mov
les
lcall
push
leave
movsl
xorl
stos
push
cltd
inc
scas
xor
inc
jae
pop
rep
dec
sub
push
pop
cmp
daa
xchg
push
xor
test
xor
cmp
lods
gs
ds
cmp
cmp
je
add
push
xor
scas
es
xorl
add
add
inc
push
out
push
mov
ret
mov
movsl
dec
add
repz
into
adc
lods
inc
push
popa
bnd
jl
xor
push
mov
punpckhdq
xor
dec
push
sub
jbe
leave
pop
jne
cld
dec
push
sbb
dec
popa
mov
pop
push
mov
lock
dec
adc
inc
push
popa
or
add
push
sub
bnd
cld
sbb
dec
shll
inc
and
add
leave
pop
jne
into
mov
push
idivl
divb
cmp
dec
pop
jo
mov
jno
or
dec
dec
mov
cmc
je
fcom
decl
jne
jno
scas
data16
shlb
stos
ficomps
add
add
mov
fbld
ds
jae
dec
loope
lods
in
jno
dec
fbld
pop
hlt
jae
or
arpl
in
jo
pop
repz
loope
xchg
push
aad
push
clc
repz
arpl
xlat
cmp
mov
mov
pop
mov
mov
clc
jg
repnz
orb
fnstcw
repnz
nop
nop
jmp
adc
jo
fildl
call
rcll
jmp
outsl
inc
repz
xchg
outsl
push
jmp
mov
and
jne
xlat
mov
call
leave
xchg
out
jae
movl
add
test
inc
aam
mov
rcrl
iret
mov
jbe
lcall
jae
popa
xchg
lods
cltd
je
dec
lods
insl
mov
jbe
sahf
arpl
es
lahf
sahf
inc
push
inc
je
inc
das
nop
popa
pop
and
insl
dec
dec
xchg
fldt
pop
adc
test
sub
cld
dec
stos
je
jmp
cvtdq2ps
adc
jmp
or
scas
pcmpgtb
data16
push
push
cmpb
outsb
ret
adc
inc
mov
adc
dec
outsl
repz
orl
dec
arpl
imul
negl
outsl
repz
pop
or
gs
call
mov
push
outsb
add
jae
stos
or
mov
arpl
imul
fs
add
negl
jo
push
cmc
jno
cld
add
out
out
pusha
and
insl
cmc
jb
push
and
sub
fs
sbb
jo
sbb
fidivs
adc
bound
mov
jae
pop
sar
sbb
daa
and
lret
mov
and
or
adc
add
add
mov
adc
iret
push
adc
mov
pop
adc
scas
data16
scas
pop
adc
lahf
sahf
add
call
movsw
popf
add
adc
rclb
ss
add
xor
lock
call
inc
mov
ret
shlb
ret
enter
shr
ret
mov
add
add
lretw
ret
mov
lea
ret
mov
ret
or
ret
js
xchg
ret
jo
test
push
mov
les
pop
les
pop
les
push
les
cmp
cmp
les
mov
pop
sub
xor
or
negl
xor
lahf
push
cmp
jns
xor
lea
pop
add
add
mov
js
mov
add
mov
inc
je
test
mov
inc
addr16
ficompl
idivb
mov
cli
dec
mov
push
dec
mov
xchg
dec
mov
roll
idivb
aas
mov
push
ds
sub
xor
pop
sub
loopne
xor
push
cmp
ds
idivb
cmp
faddl
pop
divl
pop
pop
negl
pop
pop
notl
pop
pop
testl
pop
notl
inc
pop
testl
xchg
push
test
and
testl
push
test
add
notl
pop
test
rcrl
testl
push
div
adc
divl
push
mul
in
push
notl
sub
and
sub
daa
ret
cmp
ret
jmp
sbb
lcall
mov
lcall
ret
into
ret
aad
incl
or
add
or
add
or
add
or
add
or
add
in
bound
and
sbb
jmp
fldenv
inc
inc
fcmove
push
inc
pop
leave
dec
negl
sub
fistpl
adc
jb
or
inc
out
fsubp
jb
out
call
out
arpl
arpl
les
or
push
adc
into
xchg
loope
inc
out
rolb
or
imul
and
out
xlat
inc
lret
inc
mulb
pop
jl
rclb
out
pop
mov
out
std
push
add
push
xchg
adc
arpl
and
inc
or
jmp
xchg
out
arpl
add
in
add
in
add
in
add
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
pop
pushw
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushw
add
pushw
add
pushw
add
pushw
add
pushw
add
pushw
add
pushw
add
pushw
add
gs
add
gs
add
gs
add
gs
add
gs
add
gs
add
gs
add
gs
add
gs
add
gs
add
gs
add
sti
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
idiv
add
mull
add
in
add
out
and
mov
cmp
pushl
lods
lret
outsb
scas
es
data16
sub
out
and
xchg
mov
or
add
jmp
xor
in
add
in
add
in
add
in
add
in
add
in
add
in
add
out
in
xor
in
ret
loopne
in
and
in
repz
in
or
in
inc
out
in
add
in
add
bound
mull
add
bound
or
bound
fxtract
bound
icebp
hlt
bound
in
bound
jmp
bound
call
add
es
addr16
mov
dec
and
and
cmp
add
add
in
and
add
out
pop
add
pop
cmp
aam
add
add
pop
add
add
and
add
add
mulb
loope
pop
or
jecxz
adc
jecxz
sbb
in
psubsw
fs
notl
test
pop
add
movsl
pop
add
and
pop
sbb
pushf
inc
es
cmc
push
and
mov
inc
sbb
mov
testl
pop
idiv
pop
out
testl
pop
out
idiv
pop
bound
add
idiv
dec
out
idiv
push
out
testl
push
out
idiv
or
testb
testl
sbb
add
out
idiv
fsubrp
testb
in
testb
in
idiv
into
in
idiv
fisubs
add
popa
testl
idiv
add
mov
add
idiv
add
testb
lcall
pop
idiv
mov
idiv
cmp
add
sti
add
jo
idiv
idiv
add
idiv
add
idiv
idiv
idiv
add
idiv
add
idiv
idiv
cmp
add
idiv
add
sub
idiv
and
add
idiv
idiv
adc
add
idiv
idiv
testl
idiv
testl
idiv
idiv
add
testb
incl
add
add
in
in
mov
in
in
ljmp
arpl
add
jmp
decl
add
int
pop
jecxz
xor
in
xor
int
pop
arpl
add
int
mull
add
loop
test
loop
add
loop
test
jecxz
addl
in
add
loop
xor
in
add
int
mull
add
add
add
loop
addl
int
pop
arpl
xor
in
add
bound
jmp
je
push
or
push
jmp
sti
push
push
or
bound
jmp
jnp
push
jmp
hlt
push
xchg
je
push
jmp
je
push
leave
hlt
push
xchg
hlt
push
push
leave
je
xchg
hlt
push
xchg
je
xchg
je
push
jmp
hlt
push
xchg
je
xchg
sti
bound
or
xchg
jnp
push
or
bound
jmp
hlt
bound
jmp
into
pushw
add
pushw
add
pop
push
sub
push
add
pushw
add
fiadds
cmp
push
subb
adc
add
add
dec
pushw
add
add
pop
pusha
push
or
push
add
add
dec
pusha
push
or
data16
push
pushw
or
pushw
or
data16
push
pusha
add
push
data16
push
data16
push
pusha
push
add
sti
add
incl
add
idiv
add
out
sti
add
idiv
add
idiv
add
out
repz
out
repz
testl
add
idiv
add
div
add
incl
add
testl
add
idiv
add
sti
add
sti
add
out
repz
div
add
idiv
add
idiv
add
out
sti
add
out
sti
add
idiv
add
testl
add
out
sti
add
incl
add
sti
add
mull
add
cmc
add
pop
in
negl
add
in
add
add
add
pop
cmc
add
mull
add
cmc
cmc
add
pop
in
add
pop
in
negl
add
cmc
pop
in
cmc
in
mull
add
pop
in
add
ja
outsb
and
bound
mull
add
bound
ja
outsb
add
out
add
out
and
in
add
in
and
in
and
outsb
and
add
add
push
push
hlt
bound
imul
loop
call
adc
push
jmp
adc
add
jmp
adc
push
imul
loop
call
shll
imul
bound
imul
loop
push
repz
call
adc
add
push
repz
jmp
hlt
bound
jmp
aam
push
imul
arpl
add
inc
xchg
popl
add
bound
add
xchg
dec
bound
add
bound
add
inc
push
add
bound
add
xchg
pop
bound
add
inc
push
add
inc
xchg
push
bound
add
inc
push
add
inc
xchg
pop
pop
push
add
push
add
push
add
push
inc
pop
bound
add
push
add
push
inc
push
bound
add
sti
add
mov
add
idiv
add
cmc
sti
add
mov
add
mov
add
mov
add
idiv
add
aaa
cld
add
cmc
sti
add
aaa
cld
add
aaa
cld
add
idiv
add
aaa
cld
add
xor
cld
add
cmc
sti
add
xor
cld
add
idiv
add
xor
sti
add
cmc
sti
add
mov
add
idiv
add
idiv
add
mov
add
idiv
add
cmc
sti
add
mov
add
cmc
in
add
mov
in
add
pusha
in
add
mov
in
add
pusha
in
add
mov
in
add
add
add
pusha
in
add
mov
in
add
in
add
mov
in
add
pusha
in
add
in
add
mov
in
add
in
add
pusha
in
add
mov
in
add
in
add
mov
in
add
mov
in
add
in
ret
or
jmp
hlt
bound
stc
xor
es
hlt
mov
push
stc
xor
push
jmp
hlt
bound
fxtract
mov
push
jmp
mov
imul
hlt
bound
stc
hlt
mov
push
jmp
mov
push
fnstenv
push
stc
hlt
mov
es
mov
push
jmp
mov
imul
mov
push
jmp
hlt
bound
jmp
xor
push
stc
hlt
bound
add
pop
inc
and
aaa
add
pop
aaa
and
inc
add
pop
idiv
cs
push
and
pop
inc
add
pop
negl
push
pop
push
and
pop
idiv
push
pop
push
and
pop
aaa
and
cmpsb
ss
inc
and
cmpsb
ss
cmpsb
ss
pushw
add
pushw
add
cmpsb
idiv
sahf
inc
and
cmpsb
idiv
sahf
inc
add
pushw
add
pushw
and
inc
add
negb
test
add
sti
int
push
lret
add
test
cli
push
int
pop
test
cli
pop
repz
add
test
add
sti
int
add
lret
add
sti
int
and
int
jmp
lret
cli
push
int
pop
test
cli
push
int
add
lret
add
sti
lret
cli
pop
repz
and
lret
add
repz
cli
call
int
pop
sti
lret
cli
pop
test
in
add
in
sti
add
add
in
sti
lock
in
add
arpl
sti
inc
gs
cmp
add
data16
xlat
data16
mull
add
in
add
in
sti
or
add
in
sti
fsubs
sti
lock
sti
or
sti
add
sti
fsub
ljmp
in
add
addr16
sti
fsubs
add
jmp
mull
sti
add
add
jmp
lock
in
add
in
sti
and
jmp
bound
jmp
insb
loopne
jmp
addb
fs
jmp
hlt
pushw
test
inc
fs
jmp
and
push
sub
bound
jmp
repz
jmp
add
add
push
jmp
jmp
push
jmp
sti
bound
jmp
sti
bound
jmp
lret
fcomip
jmp
sti
pushw
test
movsb
arpl
test
hlt
bound
add
arpl
adc
add
add
push
adc
testb
roll
add
add
mov
add
pop
arpl
add
add
dec
shl
decl
arpl
adc
shl
dec
add
push
shl
pmaxub
add
pushw
adc
arpl
adc
data16
fisubs
adc
bound
add
xlat
testb
bound
add
xlat
add
push
add
push
addr16
adc
bound
adc
add
add
shl
jle
or
add
lret
repnz
lret
repnz
or
js
repz
add
lret
add
pop
int3
repnz
test
push
int3
add
test
jns
cmp
cmp
sub
add
test
jns
adc
test
or
cmp
test
jns
call
or
add
lret
add
testl
test
mov
lret
add
mull
add
bound
cwtl
fstl
fucomp
add
in
add
std
jnp
frstor
fucomp
andb
add
in
add
bound
dec
fstpl
inc
cmpb
in
add
in
add
jmp
and
pushf
sbbl
fucomp
add
in
add
out
jp
fcoml
add
in
add
in
add
in
add
in
add
bound
cmpl
fdiv
add
jbe
negb
jbe
mulb
ja
test
fdiv
lds
divb
ja
notb
add
add
notb
fdiv
pop
ja
mulb
ja
idiv
mov
fcomi
fldt
fdiv
pop
outsl
fdiv
sub
jg
notb
fdiv
aas
outsl
fdiv
arpl
testb
fcomi
cmpsl
outsl
fcomi
mov
jg
testb
jmp
call
ljmp
mov
idiv
add
idiv
push
ljmp
push
ljmp
add
idiv
insb
jmp
idiv
cli
jmp
idiv
dec
jmp
idiv
xor
idiv
sub
idiv
xchg
jmp
idiv
jl
idiv
push
pop
push
add
jmp
idiv
dec
jmp
idiv
lods
in
idiv
fisubs
add
in
idiv
into
pushw
add
cmpsl
mov
enter
rclb
mov
mov
test
mov
mov
push
mov
nop
ljmp
adcb
add
and
add
test
mov
push
int3
add
mull
mov
cmp
mov
xor
mov
sub
mov
and
mov
sbb
add
testl
incl
testb
lock
mov
call
bound
mov
flds
mov
fldlg2
add
out
mov
lret
fldlg2
add
bound
cwtl
nop
fldl2e
test
fchs
test
adc
jo
testb
mov
test
addb
outsb
test
add
add
fsts
xor
xor
sub
push
test
fnstcw
test
fldlg2
xchg
fsqrt
xchg
mov
fsubr
xchg
fadds
adc
notb
outsl
fdiv
pop
jg
mulb
fdiv
inc
js
testb
mulb
jo
testb
fdiv
in
fdiv
stc
jno
testb
fdiv
cmpsl
jns
negb
jns
divb
fdiv
dec
jns
imulb
jns
idiv
jb
imul
jle
neg
jle
test
fdiv
pop
jno
mulb
jno
testb
testb
fs
add
idiv
js
idiv
push
loope
jmp
loopne
ljmp
dec
arpl
add
loopne
lcall
add
add
loopne
jmp
idiv
dec
loopne
mov
loopne
decl
loopne
dec
fcomip
js
idiv
rcr
idiv
and
idiv
pop
arpl
add
fcomip
decl
push
add
idiv
adc
idiv
push
arpl
add
idiv
out
idiv
lret
push
sub
clc
xchg
mov
lock
add
idivl
add
loopne
mov
fdivs
mov
shlb
mov
enter
sar
mov
testb
mov
int3
add
test
mov
or
add
pop
add
sahf
mov
imul
add
cmc
sbb
imul
add
testl
lret
fbld
push
movsl
loop
bound
add
add
cli
add
aas
aaa
ret
clc
aad
add
inc
dec
mov
push
dec
in
add
inc
push
mov
inc
add
ret
arpl
lods
pop
inc
or
es
or
arpl
lods
pop
inc
rol
sbb
enter
cmc
add
push
shll
jo
fildl
fistl
mov
inc
mov
pop
aad
add
add
add
inc
mov
les
stos
dec
jns
cmpsl
and
add
gs
and
pop
push
addr16
pop
inc
push
inc
dec
jae,pt
sti
jbe
es
push
inc
inc
cmpsl
inc
push
inc
popf
inc
push
out
and
push
popa
das
mov
sbb
inc
jbe
popa
aas
inc
jmp
push
inc
push
add
inc
iret
mov
add
add
mov
mov
mov
ds
rcrb
es
mov
aam
mov
and
add
bound
jne
push
pusha
addb
std
jb
ret
or
mov
pusha
xor
int
fs
xor
inc
imul
jo
into
pop
pop
add
add
loop
inc
imul
add
add
add
add
add
add
pop
inc
gs
jae
lods
add
decb
arpl
or
cs
push
imul
adc
inc
popf
outsl
je
pop
add
or
inc
insb
or
adc
neg
scas
jae
call
add
or
push
mov
lcall
pop
xchg
stos
insb
or
and
imul
and
les
lea
dec
inc
lods
dec
inc
imul
insb
adc
scas
jo
or
add
adc
stos
jno
mov
or
ljmp
pop
mov
rorb
stos
notl
inc
fisubs
lahf
mov
cmp
add
add
add
mov
mov
jno
mov
sbb
xchg
ds
ret
clc
shrl
cmp
rclb
cmp
push
inc
sub
dec
sbb
pop
inc
push
test
sbb
mov
sub
and
push
mov
dec
add
or
add
test
add
test
xor
fistpl
loope
in
add
push
push
mov
imul
push
and
sbbb
jmp
adcl
jg
and
jb
dec
pop
inc
jmp
nop
push
push
cmp
je
xchg
dec
push
stos
inc
arpl
xchg
cmp
mulb
hlt
and
insl
testl
add
add
add
add
popa
sbb
pusha
add
dec
xlat
pop
xchg
push
pop
hlt
and
je
xchg
jb,pt
lcall
jb
movsl
idiv
inc
addr16
push
imul
idiv
push
dec
jne
lcall
ja
fs
jno
pop
imul
add
add
cmpsl
add
mov
imul
arpl
addr16
or
jae
adc
je
sti
adc
sti
test
insl
jmp
idiv
jns
dec
inc
jecxz
addr16
stos
adc
jmp
addr16
js
incl
mov
fs
lods
add
ret
pop
shll
mov
data16
mov
jno
in
jno
out
xor
mov
imul
mov
xchg
push
cmpsb
push
subl
pop
xchg
andb
push
nop
add
das
test
inc
inc
lea
pop
push
mov
lahf
inc
and
jge
sbb
push
push
leave
stos
dec
adc
mov
ljmp
movsb
in
mov
out
into
movsl
xlat
inc
in
add
cwtl
cmpsl
aad
lods
les
mov
mov
jl
cmpsl
mov
add
cmp
popf
leave
bound
xchg
push
sbb
lret
test
int
add
dec
lds
inc
leave
push
dec
sub
dec
or
inc
dec
sbb
adc
int
add
add
or
push
cli
jno
popa
lock
lahf
add
popa
inc
inc
fstps
dec
int3
lods
mov
and
mov
inc
jge
mov
mov
push
popa
mov
mov
push
hlt
xor
inc
inc
jb
push
cmp
push
push
inc
jmp
inc
xor
inc
xor
xchg
aas
bound
add
addb
js
inc
cmp
push
popa
aas
xchg
jae
test
mulb
cmc
xor
jo
jno
mov
in
aaa
add
popf
jne
mov
idiv
scas
in
jo
dec
stc
xor
insb
dec
pusha
iret
add
arpl
outsl
gs
pusha
jne
jae
imul
bound
outsl
add
jae
pushf
add
pop
arpl
je
iret
data16
movl
add
dec
add
adc
push
jb
cmpsb
idiv
adc
push
repnz
lret
push
je
addr16
jae
add
mov
enter
enter
mov
push
or
scas
ds
iret
jae
cli
add
imul
scas
jno
cmpsb
mov
mov
or
inc
enter
lahf
dec
mov
arpl
loop
bound
daa
add
mull
jae
xor
testl
popa
push
arpl
mov
fldenv
mov
adc
test
push
inc
jmp
push
inc
shrl
xor
test
push
in
add
add
add
push
enter
mov
add
xor
fwait
mov
push
in
add
xchg
mov
add
xchg
mov
push
cmp
mov
dec
arpl
mov
inc
push
inc
mov
push
push
inc
popf
inc
push
sti
push
jae
addl
repz
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
hlt
bound
jmp
into
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
fs
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
fs
add
fucomi
push
insb
push
push
mov
fimull
jl
pop
ret
mov
das
xor
xchg
push
or
out
flds
insb
dec
mov
jecxz
imul
aas
sub
add
into
daa
pop
mov
fsubr
adcl
inc
loopne
adc
add
fsts
insb
sbb
add
insb
sub
add
flds
jl
decb
cmpsb
addb
out
fsts
jl
decb
out
xor
push
jmp
fistl
je
add
mov
fimull
sub
push
jae
ficoml
insb
popa
add
fildl
pop
push
outsb
lods
cmc
and
mov
cmpsl
push
call
je
or
inc
iret
mov
push
scas
or
fmull
insb
xor
mov
add
add
mov
bound
pop
pop
mov
loop
add
sbb
jmp
xchg
mov
ret
int3
xor
leave
int3
inc
xchg
leave
int3
ret
adcl
out
add
mov
xor
sub
testb
and
push
insb
pop
out
push
fsubrs
ja
arpl
push
cmp
push
mov
ja
arpl
cld
mull
add
ret
add
cli
cmp
or
cld
jl
orl
outsl
bnd
bound
lea
inc
add
mov
lret
int3
xor
leave
int3
inc
xchg
leave
int3
mov
dec
inc
add
push
push
add
add
jle
push
pop
mov
leave
int3
stos
xchg
leave
int3
ret
xchg
leave
int3
and
jmp
mov
pop
push
decl
iret
outsb
inc
mull
leave
int3
stos
xchg
leave
int3
ret
xchg
leave
int3
and
jmp
add
and
incl
lret
outsb
inc
neg
inc
clc
iret
mov
inc
clc
cmpsl
mov
add
flds
jl
push
push
jl
or
add
add
push
sbb
cli
mov
es
int3
mov
push
cli
add
bound
jmp
xlat
inc
cld
je
add
cmp
mov
xchg
inc
mov
pop
push
cld
lock
mov
push
add
push
mov
in
mov
push
add
mov
jmp
pop
mov
xchg
leave
int3
stos
xchg
leave
int3
inc
xchg
leave
int3
ret
mov
rcl
or
add
jle
mull
leave
int3
sub
leave
int3
ret
adcl
mov
fistpll
notl
mov
bound
mov
fucomip
or
int
push
jecxz
inc
or
mov
mov
inc
shll
add
int
mov
mov
dec
cld
jl
cli
cmp
jb
insb
sub
mov
mov
mov
add
add
and
cli
sti
in
add
jne
inc
jnp
dec
lock
adc
mull
push
pop
out
inc
or
add
in
push
clc
insb
addr16
dec
in
push
or
push
mov
in
add
or
mov
in
inc
or
and
mov
shl
ficompl
ret
int3
inc
out
jmp
inc
out
jmp
in
das
loop
and
add
in
push
call
jg
add
lock
testb
out
add
bound
lock
pop
out
xor
cmpb
pop
test
push
add
bound
das
out
stos
push
push
sti
adc
adc
outsb
daa
cli
mov
ss
push
out
gs
inc
pop
in
dec
or
add
add
sub
mov
push
out
xor
inc
pop
ljmp
sub
adc
ljmp
bound
adc
ss
mov
ret
cmpb
ss
cmp
mov
in
add
inc
mov
in
or
add
sbb
sbb
idiv
enter
inc
adc
mov
add
add
shl
cmp
inc
dec
int3
sbb
insb
cs
lea
es
push
psubusb
clc
jecxz
or
fimull
ret
jmp
add
jmp
ljmp
lret
mov
add
push
loopne
jo
lcall
scas
leave
int3
and
jmp
lock
and
incl
add
add
arpl
imul
inc
clc
iret
mov
inc
clc
cmpsl
lret
dec
mov
inc
cld
insb
sub
or
and
cli
mov
sbb
leave
int3
mov
cmp
xor
mov
pop
jle
imul
push
add
pop
ret
int3
ret
scas
leave
int3
and
jmp
push
aas
and
mov
jb
add
add
jl
ss
ljmp
movsl
in
dec
hlt
jl
repnz
outsl
lea
ljmp
mulb
add
jno
je
incb
lret
rcrb
aas
ljmp
push
ljmp
scas
pop
mov
ljmp
mulb
add
mov
jmp
mov
jns
cld
push
xor
int3
data16
add
mov
sub
leave
int3
stos
scas
leave
int3
ret
scas
leave
int3
inc
ljmp
lahf
bound
add
dec
add
aaa
arpl
push
adc
pushl
rorl
daa
repnz
jmp
adc
and
mov
mov
jle
mul
cmp
and
add
add
add
bound
jmp
jmp
push
mov
arpl
push
jl
adc
arpl
add
mov
add
add
bound
mov
push
jle
testl
adc
push
push
push
push
jle
notl
mov
adc
popf
imul
add
inc
add
adc
mov
mov
ret
int3
inc
scas
leave
int3
ret
mov
das
decl
sbb
mov
sbb
leave
int3
ret
scas
leave
int3
inc
call
mov
add
out
or
fimuls
out
pop
push
cmp
adc
push
mov
push
mov
in
inc
or
jmp
add
pop
push
add
out
cmp
and
push
pop
sub
ljmp
rorl
and
push
xor
bound
addr16
push
push
mov
loop
lret
inc
ret
adc
push
adc
out
rcll
testb
bound
add
or
cmp
inc
hlt
insb
sub
push
adc
cmp
scas
jb
jl
out
addl
add
aas
dec
push
je
out
dec
call
and
push
out
inc
adc
mov
ja
inc
out
mov
jbe
testl
push
inc
sub
mov
out
dec
or
sub
push
jl
out
mov
adc
push
cmp
mov
out
sub
out
jmp
out
push
in
lret
or
and
mov
movsl
cmp
and
push
fucomip
sti
jmp
in
or
fiaddl
mull
or
js
arpl
dec
xchg
cmpb
das
sbb
dec
push
xor
bound
inc
xchg
in
dec
xor
mov
jle
test
push
xor
bound
add
mulb
je
adc
add
add
dec
inc
push
insb
pop
cli
push
popf
notl
add
mov
jmp
fdivrs
mov
fwait
add
ljmp
jl
loop
xchg
dec
jle
notl
out
xchg
mov
mov
in
movsb
mull
add
jge
push
xchg
in
inc
fdiv
in
add
bound
loopne
dec
adc
add
add
ljmp
mov
jmp
adc
and
push
insb
push
ljmp
in
or
push
out
ljmp
sub
push
js
bound
add
sub
jle
notl
push
jl
ss
arpl
aas
mov
pushl
mov
dec
jle
notl
dec
sahf
mov
xorl
add
add
js
arpl
and
or
or
jmp
loopne
dec
jle
mull
sub
and
push
pop
xchg
ljmp
jecxz
or
dec
ss
bound
add
pop
js
bound
inc
pop
pop
mov
inc
mov
aam
add
add
ret
sar
add
mull
in
mov
leave
int3
ret
cmpsl
leave
int3
inc
ljmp
fwait
sbb
int3
ret
cmpsl
leave
int3
and
jmp
cmp
jl
sub
bound
add
cmpsl
leave
int3
mov
push
add
add
js
bound
pop
mov
or
dec
call
insb
add
js
bound
mov
in
mov
jmp
inc
fbld
add
popf
inc
fmull
push
add
bound
cmp
mov
add
jmp
ss
arpl
test
cmp
sbb
or
cli
jp
inc
mull
add
leave
or
bnd
inc
mull
add
loope
xor
push
inc
add
bound
add
js
bound
jne
dec
push
jmp
bound
idiv
xor
or
outsb
es
mov
jb
inc
mul
inc
call
xor
mov
ljmp
inc
pusha
inc
add
arpl
movl
add
add
add
add
es
imull
add
cmp
notl
add
decl
mov
notl
push
sbb
testl
push
call
je
add
pop
adc
aad
mov
cmpl
push
mov
push
push
add
js
arpl
imul
mov
add
add
mov
dec
xchg
out
cld
in
or
inc
loopne
call
cmpsl
sti
mov
inc
js
arpl
add
add
mov
add
adc
add
and
cld
cmp
rorl
repnz
xchg
add
jmp
cli
add
out
loopne
gs
js
bound
add
mov
add
or
xorl
inc
clc
cld
daa
divb
fisttpll
xor
and
add
stos
mov
hlt
pop
mov
hlt
daa
decb
jbe
in
add
bound
add
pop
xor
add
js
bound
inc
dec
fmull
and
and
mov
cmpb
jne
mov
add
add
dec
jle
divl
mov
jle
inc
idivl
mov
outsb
and
mov
jbe
add
push
fistpll
mov
jp
inc
testl
push
call
je
add
notl
out
aad
mov
test
mov
jle
mul
roll
js,pt
bound
je
add
add
add
js
bound
pop
dec
mov
mov
push
jle
notl
xor
fucom
pop
xor
leave
int3
mull
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
