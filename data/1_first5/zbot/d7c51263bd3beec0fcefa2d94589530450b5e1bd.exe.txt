add
add
push
inc
add
push
inc
push
popa
jb
imul
fs
insb
bound
ja
inc
inc
inc
add
cs
fs
insb
bound
ja
inc
and
add
popa
jne
pop
dec
popa
outsb
push
imul
mov
pop
inc
imul
jne
jb
arpl
add
add
add
push
outsl
lods
jne
imul
add
add
pusha
jne
lahf
dec
popa
outsb
xchg
push
add
testb
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
push
inc
push
popa
jb
or
add
push
fs
bound
ja
inc
add
repnz
add
loope
jb
fildll
xor
insb
insb
cli
add
add
jne
arpl
jo
fs
push
insl
jae
jo
add
jo
cmpsb
push
insl
arpl
imul
data16
inc
pop
imul
inc
outsb
jb
dec
data16
inc
pop
imul
daa
insl
popa
sub
add
and
imul
pcmpgtd
push
add
xor
jo
push
add
shll
outsb
xlat
push
insb
insb
cli
add
add
arpl
jae
gs
je
add
add
add
mov
add
cli
jmp
sti
add
xor
add
cli
sub
cli
in
add
cli
in
add
cli
in
add
cli
in
add
cli
in
add
cli
in
add
cli
in
add
cli
in
add
cli
insl
add
cli
fistps
mov
mov
test
ja
ljmp
and
int3
imul
or
insl
outsb
sbb
push
lahf
testl
add
add
add
add
add
inc
cli
add
add
add
out
inc
jmp
add
add
add
add
add
xor
stc
cli
add
dec
cli
add
add
add
in
cli
add
adc
add
adc
add
add
add
jmp
add
add
add
add
add
add
add
add
jae
add
add
sti
add
add
add
add
add
add
adc
add
add
add
adc
add
jmp
stc
add
jmp
stc
add
in
test
add
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
add
stc
add
jmp
stc
add
jmp
stc
add
rol
add
add
jmp
stc
add
add
add
push
add
add
add
add
add
add
gs
add
add
adc
add
sti
add
adc
jmp
or
add
or
add
or
add
or
pusha
std
jp
popa
daa
push
roll
add
rcrl
add
mov
or
add
or
add
or
inc
lods
push
popa
je
or
add
inc
add
arpl
add
push
dec
add
push
or
add
fldl
add
fldl
add
fldl
add
popf
add
cmp
add
cli
fldl
add
fldl
add
fldl
add
mov
in
mov
add
cmp
divl
mov
push
add
int3
ret
push
mov
inc
sub
cmp
sti
jb
sahf
testl
or
push
or
addr16
dec
ljmp
pushl
pop
mov
mov
add
add
push
add
aam
inc
jns
test
add
hlt
fwait
cmovae
fldl
iret
jg
xorl
xchg
jge
inc
jmp
idivl
add
mov
cli
add
push
bnd
mov
in
cmp
icebp
pop
clc
int
shl
dec
std
lds
jge
cld
ret
in
add
mov
ret
jmp
divb
add
mov
cli
add
bound
add
cld
mov
jb
clc
mov
dec
bnd
inc
js
dec
stos
sbb
mov
sub
push
lret
fistl
js
push
mov
lcall
jge
add
push
or
leave
jp
ret
ret
lods
add
stc
add
stos
push
add
int
and
sub
in
jb
mov
bnd
add
xchg
insb
jmp
cli
mov
push
loope
push
lea
into
in
push
ljmp
pushl
clc
jne
aam
or
adc
mov
bound
mov
test
sub
enter
fcmovb
or
mov
iret
in
push
push
jmp
add
hlt
cmpl
popa
push
xorl
je
sbb
or
add
push
ja
add
sti
mov
jecxz
add
or
dec
pop
or
fsubrp
add
mov
jge
into
in
push
out
sbb
cli
adc
sub
jle
add
sub
aam
rorl
jbe
cli
clc
cld
sub
enter
fimuls
sub
fldl
add
fisttpll
push
pop
mov
push
add
jmp
add
mov
ret
add
xchg
add
xchg
add
fldl
and
or
jnp
add
subl
inc
inc
loop
ret
pop
add
in
push
and
adc
cli
push
repz
popf
add
lock
sti
test
hlt
out
adc
xchg
push
sahf
add
sbb
repnz
in
pop
mov
data16
out
aam
add
push
adc
int3
jmp
jns
repz
lock
cmp
jmp
add
ret
scas
jnp
pop
jne
test
std
pop
jmp
cli
in
je
aad
hlt
repnz
sub
cli
push
jb
bound
pop
add
push
add
outsb
lock
out
add
sbb
pop
sti
cmp
inc
decl
data16
add
jmp
pop
out
jne
xor
dec
jp
loope
adc
aam
out
jne
sub
ds
or
sub
out
push
bound
add
fwait
test
cmp
jne
and
ret
push
mov
syscall
jne
nop
ret
lret
dec
add
push
add
mov
repz
pop
adc
push
jo
andl
jne
dec
add
hlt
push
jmp
lock
jl
decl
push
jne
mov
cmc
bswap
test
sub
or
or
xchg
adcl
pushl
dec
add
jmpw
int3
repz
and
shld
xlat
iret
add
add
and
mov
push
mov
imul
lods
jae
call
mov
push
add
hlt
fidivrl
sub
sub
xorl
jbe
mov
pushl
out
fneni(8087
data16
or
icebp
cld
mov
fldl
add
pop
add
cmc
fistl
add
sub
leave
cmp
add
sub
xchg
add
xchg
pop
ljmp
mov
fiaddl
jne
add
les
stos
add
jg
lock
hlt
add
jb
lods
sti
add
add
add
push
loopne
shlb
jmp
sbb
pop
jmp
cli
pop
ljmp
add
in
mov
jmp
inc
push
pop
jns
fcompl
out
cmp
add
add
jg
sti
jo
fs
and
cli
add
xorb
out
add
jmp
js
add
push
stos
fiaddl
ljmp
in
cmp
jo
shrl
ljmp
shrb
stc
xchg
stc
add
stos
add
xor
xchg
js
clc
sahf
add
out
nop
ljmp
push
add
stc
jmp
std
outsb
fs
cmc
rclb
push
mov
ljmp
mov
fwait
cmc
mov
mov
ret
jmp
or
jge
add
outsb
adc
rcr
jne
add
in
clc
ljmp
jmp
inc
clc
lcall
push
push
or
fdivs
mov
lods
ret
push
mov
jmp
push
pushl
int
cld
je
leave
ret
push
mov
jge
arpl
adcl
je
fdivs
movsb
jno
decl
out
mov
dec
roll
push
cwtl
in
jne
fdivs
add
jmp
jmp
cmpl
jns
ljmp
in
jne
out
or
imul
inc
pushf
ljmp
jae
cmpl
add
jbe
mov
rolb
sub
xchg
jbe
mov
mov
or
sub
jns
adc
out
in
jne
data16
push
xchg
in
call
std
inc
in
in
jne
add
inc
jbe
push
arpl
pushl
mov
and
xor
ljmp
add
inc
cli
out
sti
adc
pop
jmp
pop
in
pop
clc
jns
incl
je
aad
out
lds
js
adc
shlb
out
dec
mov
in
add
lds
add
jecxz
test
rolb
add
jge
call
jecxz
xchg
out
sti
push
fdivs
push
out
out
jno
out
jmp
jno
fisttpl
jmp
inc
mov
jno
add
lock
movsb
sbb
jns
sbb
rcll
jmp
add
jne
shl
mul
jl
icebp
loopne
cld
shl
roll
jmp
add
mov
add
add
icebp
cmp
fisttpll
lcall
mov
sub
test
dec
push
cld
popa
fisubrs
push
out
stos
push
out
bound
inc
hlt
jmp
mov
cld
out
int
add
xchg
sarl
je
call
mov
pop
fiaddl
mov
add
fidivl
or
mov
clc
jae
add
shl
dec
test
hlt
incl
call
jmp
fdivl
mov
pop
ror
add
jmp
or
leave
mov
inc
cld
jmp
out
jnp
inc
es
add
arpl
lea
push
pushl
leave
sar
cli
dec
jmp
je
add
out
mov
pop
push
faddl
add
inc
add
cmp
push
sub
xor
add
mov
in
lea
or
fisttpl
out
add
dec
fcmovnu
ret
mov
mov
jne
adc
cli
in
cld
mov
push
fwait
outsb
clc
sub
pop
or
in
call
sar
in
call
cli
mov
add
add
in
dec
mov
mov
lea
pop
icebp
mov
add
fidivrs
add
icebp
fstpt
ss
loopne
cmpsb
sub
insl
xchg
add
jp
aad
outsb
out
sub
cli
add
mov
sub
jmp
out
fld
xchg
xchg
add
xorb
cli
hlt
call
add
lea
adc
sbb
insl
pop
and
push
add
cmpb
lcall
fdivr
hlt
pop
in
gs
add
aam
jmp
push
adc
das
sub
xor
cld
ss
fdivr
pushf
add
mov
xor
pop
clc
push
imul
jl
ljmp
add
aad
in
add
add
jmp
lods
loop
jmp
into
fdivr
and
pop
mov
or
sbb
icebp
subl
jae
xchg
pop
or
adc
leave
stos
gs
add
mov
addb
push
push
push
shl
push
push
leave
ret
push
mov
fimuls
push
loop
add
jecxz
stos
pop
add
nop
call
leave
ret
push
mov
dec
push
mov
sti
mov
mov
out
repz
dec
pop
leave
adc
call
push
push
sub
cld
sbb
adc
push
pop
jge
mov
repz
mov
pop
leave
push
fdivr
push
or
push
push
cli
add
add
jmp
jne
jae
call
jns
add
cmp
add
add
jmp
adc
inc
ret
data16
jne
xor
cli
idivb
cmp
in
mov
jp
sub
ds
std
aas
dec
jo
sub
aad
add
cmp
sbb
mov
pop
inc
leave
mov
mov
dec
push
xchg
sbb
pop
sub
inc
xchg
jb
sub
add
sbb
in
mov
add
ss
lods
mov
sbb
dec
xor
xchg
lods
out
stc
adc
imulb
rorb
jg
push
mov
dec
loopne
dec
in
mov
sub
adc
push
adc
sub
loop
add
in
jp
push
inc
inc
push
into
stos
adc
add
cmp
jnp
mov
das
mov
and
sub
add
in
mov
test
stc
add
sbb
in
das
xchg
pop
fisttps
jge
insb
iret
jmp
fmuls
hlt
push
mov
dec
clc
dec
ret
fdivr
mov
push
nop
ss
jne
push
inc
iret
jmp
loope
iret
jmp
add
stc
xor
xchg
in
popl
cltd
loope
neg
fidivs
fcomps
je
out
ficomps
fdivrp
into
inc
or
ljmp
adc
sti
inc
add
adc
xchg
cltd
jecxz
or
jecxz
hlt
mov
call
and
lahf
std
dec
loop
or
test
dec
mov
pop
fcmovb
or
add
data16
in
and
push
mov
or
inc
or
add
add
add
loop
jge
pop
jne
dec
add
add
out
jae
aam
add
roll
jmp
mov
or
add
inc
cld
push
cli
sbb
popf
cmp
decl
aam
sarb
and
aaa
xchg
xor
cli
pop
inc
hlt
lret
out
fneni(8087
jne
sbbl
add
cli
jmp
rol
test
jmp
inc
jns
xlat
add
in
push
cmp
fildl
inc
inc
std
adc
test
push
lods
roll
cli
cs
adc
jns
call
icebp
sub
sub
aad
sub
inc
out
out
je
ljmp
daa
push
add
test
cld
add
sti
push
xlat
mov
std
sub
hlt
movsl
push
fistl
push
es
loopne
cmp
sbb
pop
xchg
or
add
add
outsb
push
repnz
icebp
insl
cli
fcmovnu
negl
stc
loopne
or
add
xor
add
xorl
push
out
test
adc
add
repnz
ljmp
mov
mov
fisubrl
jno
or
dec
jge
orb
mov
sbb
or
jb
xorl
stos
mov
cmp
stos
ljmp
in
add
or
fwait
or
aam
ret
inc
cmc
pusha
sub
jmp
add
add
cmpb
sub
add
xor
ss
add
pushl
pop
call
ljmp
or
xlat
mov
add
pop
leave
push
push
add
ljmp
pushf
ret
inc
or
inc
add
fs
push
add
inc
push
scas
sub
mov
int3
add
fdivr
dec
or
loope
push
add
add
mov
call
test
pushl
pop
call
decl
push
call
les
call
push
push
add
out
cmpl
add
rclb
mov
test
sub
in
add
mov
daa
mov
add
in
fdivl
ss
out
and
les
stos
push
cld
add
neg
jmp
inc
cld
cli
jmp
add
jbe
mov
push
inc
or
push
pop
pushl
push
push
ja
or
test
inc
cli
dec
adc
scas
inc
icebp
sub
jae
fucomip
add
add
add
jb
fidivrs
and
incb
mov
xor
inc
repnz
pop
testl
cmp
add
add
inc
add
add
jmp
in
add
test
in
push
int3
jmp
add
cmp
mov
sub
add
cmc
push
jp
jmp
add
add
sar
dec
push
add
cmp
cli
add
push
add
mov
pop
xchg
sub
mov
adc
add
pushf
add
stc
add
sub
add
jb
add
push
add
or
ret
jmp
out
call
pusha
cmp
pop
sbb
or
add
cmp
cmpsb
lret
fsubr
sbb
inc
cmp
add
fmul
stos
cli
add
jb
xor
sbb
cmp
inc
push
sar
push
ret
add
stc
push
sar
add
xchg
mov
lret
add
mov
inc
cmpsl
push
push
mov
add
push
push
add
sub
lret
mov
sub
push
push
call
mov
or
rol
pushl
ljmp
mov
lret
ret
add
insb
mov
cs
add
xchg
ljmp
or
cmpsb
rcrl
or
push
cli
out
subl
or
add
add
in
lcall
fnstsw
add
sub
ljmp
push
out
mov
ljmp
jl
inc
cli
jmp
adc
cmp
jmp
xchg
fld
add
cld
sub
jmp
add
push
push
and
fdivs
dec
sahf
call
add
cli
jmp
lea
jmp
cmpsb
sub
fldcw
dec
jmp
jo
dec
fnstenv
inc
xor
cmp
inc
cli
pop
jmp
cli
test
mov
jmp
cmp
ja
fadd
add
cli
lret
fsubl
add
insl
cli
pop
jmp
xchg
fmuls
in
fsubrs
aam
iret
gs
fsub
rol
xor
fs
cli
add
imul
roll
fdivr
xlat
xor
add
js
add
jb
addb
fdivrl
repnz
jmp
add
stc
add
insb
ljmp
jl
call
xchg
jl
inc
jmp
lods
shrl
stc
add
adc
lds
test
jmp
pop
jno
jmp
xchg
jecxz
mov
mov
pop
sar
shrl
scas
jae
call
adc
sbb
jmp
sub
pop
add
add
movsb
mov
call
sub
test
out
mov
push
call
xchg
jge
cld
xor
call
je
out
adc
call
pop
in
call
fsubr
pushl
call
jmp
jnp
cld
les
leave
add
mov
pushl
add
cmp
call
pushl
inc
test
idivl
adc
and
aad
and
cli
leave
add
mov
incl
out
add
dec
imul
in
sbb
inc
out
and
lea
in
aad
mov
or
call
or
ret
js
rorl
call
add
jae
in
out
xchg
mov
mov
lret
xchg
int
jge
xor
mov
lret
push
pop
int3
add
add
ret
into
in
jno
aam
pop
stos
sbb
add
test
push
loope
aad
pop
mov
loopne
rcrl
or
roll
xor
jle
dec
mov
cmpsl
loope
aad
out
shlb
add
loop
push
aad
lcall
mov
lods
lcall
mov
jmp
mov
aam
jl
mov
roll
dec
shr
loope
add
out
sahf
fstpl
cs
push
push
loopne
xchg
inc
out
jle
xor
cmp
mov
cld
out
inc
sar
jb
add
xor
pop
sti
iret
jne
jle
add
fcompl
ret
cmp
mov
dec
clc
jmp
and
jl
into
jne
pop
or
leave
iret
mov
fildl
cmpsb
inc
roll
jmp
pop
sbb
add
adc
push
sub
push
roll
arpl
jmp
enter
add
out
cmpl
jne
jl
cld
call
cwtl
cmp
or
push
dec
cmp
jmp
or
cmp
jne
mov
add
roll
add
or
in
test
add
sub
call
sub
pushl
stos
and
xchg
add
push
and
and
mov
jle
add
mov
inc
add
mov
enter
mov
fistpl
loopne
cmp
jne
add
icebp
fwait
push
add
stc
movsl
or
int
mov
cli
fildl
cmc
fstpt
movsb
xchg
mov
mov
pop
cld
subl
shl
es
into
out
push
or
jo
incl
fcomi
add
scas
push
sar
daa
lods
shlb
push
cld
xchg
arpl
add
add
push
mov
jns
test
mov
pop
jno
sub
mov
add
stc
test
or
pop
std
sbb
add
fdivl
out
adc
cmp
jb
les
push
shrl
add
jae
lods
sub
jl
cld
js
shlb
push
add
pop
sub
mov
jne
mov
inc
out
mov
rolb
sub
sub
add
add
add
pop
xchg
add
stc
sub
inc
or
les
bound
addb
push
or
add
jmp
out
mov
idivb
pop
sbb
int3
add
xchg
add
cld
mov
jmp
add
leave
sub
add
bound
inc
or
stc
add
jmp
cmpsl
sar
cs
int
inc
dec
push
or
stc
ljmp
add
cmc
test
je
das
sarb
leave
jne
dec
ret
pop
lds
leave
ret
push
push
mov
jmp
xor
ret
neg
nop
add
ja
movzbl
sub
ds
adc
cs
push
add
inc
testl
cld
add
xchg
inc
cmp
push
jl
out
nop
jg
ljmp
mov
jl
out
nop
jg
ljmp
fucom
mov
cli
and
mov
nop
jno
je
inc
pop
cmp
add
cmpsb
outsl
ss
mov
or
push
adc
inc
or
out
stos
jecxz
sub
nop
push
push
iret
lcall
mov
aam
cltd
shll
inc
pop
movsb
jae
push
lds
pop
faddl
add
pop
mov
fdivrl
mov
pop
in
add
into
push
rcll
addb
pop
and
popf
add
das
add
inc
cli
inc
es
cli
mov
add
inc
add
sbb
pop
cli
leave
xchg
sti
lods
dec
add
add
les
lret
mov
std
sar
mov
shrl
xor
add
add
fcoml
ret
std
adcb
add
pop
sti
add
cld
jl
jmp
jle
aad
int
xor
lea
add
jle
aad
int
add
enter
push
in
pop
mov
cmpb
add
mov
frstor
scas
enter
push
or
incb
mov
call
pusha
jge
out
mov
pop
add
pop
add
add
test
ss
add
inc
xor
ss
or
add
movsb
int3
call
bound
jne
inc
stos
ret
jmp
adc
mov
aas
enter
rolb
cs
in
push
mov
and
incl
push
enter
test
les
mov
jne
fsubrl
or
ljmp
push
add
mov
jecxz
test
mov
dec
test
popf
mov
mov
stos
in
push
add
rorb
arpl
cmp
paddq
add
inc
cld
repz
jmp
mov
dec
std
mov
addr16
xchg
stos
cli
cs
loop
lret
jmp
mov
dec
ror
sar
aad
sti
incb
js
aad
lret
ljmp
hlt
mov
incl
add
clc
xor
sbb
lret
sbb
xchg
dec
call
jae
int3
cmp
add
inc
hlt
lret
cld
push
out
mov
js
push
hlt
fcmovb
add
rol
je
or
jne
test
fadd
jle
clc
leave
jmp
sub
dec
lret
dec
cmp
in
lret
add
mov
in
mov
lret
sub
ret
ret
das
jp
xor
icebp
fimuls
add
cmpb
or
dec
hlt
sub
imul
vsubsd
jp
repz
pop
test
sti
jmp
lds
push
jg
add
xorl
dec
out
sbb
cli
lods
dec
ror
lock
out
addl
sahf
or
sti
mov
ljmp
es
jmp
mov
add
pop
addl
inc
jmp
cmc
fisubrs
test
add
lock
ret
add
mov
jmp
lds
inc
icebp
leave
ret
jne
pop
add
inc
jmp
inc
cmp
jmp
add
adc
push
inc
push
push
call
aas
repz
jmp
cmp
call
mov
popl
into
loopne
jne
cmp
in
mov
mov
add
jecxz
pop
sahf
xlat
add
roll
push
leave
pop
push
add
push
mov
int
fisubl
push
add
dec
hlt
add
ficomps
ret
add
push
repnz
xchg
push
or
out
leave
add
and
out
inc
lret
call
push
or
imul
ret
push
mov
cld
lock
cli
lods
push
pop
shrl
leave
cmp
add
cli
pop
add
cli
pop
incl
lods
fcmovnb
mov
fcoms
mov
dec
jne
push
cs
cli
mov
add
dec
or
push
lods
pop
add
sbb
jne
test
push
adc
cli
stos
cli
mov
jecxz
call
jp
shll
cli
add
jns
xlat
push
leave
sbb
push
lods
ss
or
and
add
stos
js
aaa
add
jb
or
and
jno
icebp
add
lret
out
jns
mov
add
mov
ljmp
in
sub
loop
movsb
xlat
jae
add
mov
std
cli
in
pop
mov
iret
push
mov
jo
cs
or
jl
xchg
aaa
icebp
js
mov
fucomi
add
add
in
add
add
inc
or
xor
ret
clc
push
pop
jb
jns
add
or
sbb
add
mov
mov
adc
rorb
iret
or
push
adc
cli
mov
inc
imul
out
ret
bound
hlt
clc
insb
dec
sbb
xchg
ret
aam
and
mov
lea
cmc
add
mov
mov
mov
inc
xchg
pushf
incb
add
mov
test
pop
add
lcall
xor
mov
adc
arpl
add
cwtl
int3
xor
xor
xor
mov
pop
sub
inc
add
mov
ret
rorb
pop
adc
adc
mov
rcll
jge
cli
ror
stc
ror
pushf
cld
add
sbb
add
les
add
cmp
xor
in
xor
test
jmp
subb
and
mov
jg
stc
cli
or
movsl
jle
mov
pop
call
shlb
idiv
fldenv
cli
jg
adc
lods
jmp
int
adc
and
jp
lea
adc
push
in
push
stc
hlt
mov
add
sub
cli
or
test
or
xor
xor
xor
popf
fwait
std
stc
popf
test
jno
idiv
fnstenv
jne
jl
pusha
push
dec
adc
cmp
int
mov
cli
mov
cmc
js
pop
aam
test
add
rorb
repnz
nop
add
jle
or
out
mov
dec
inc
test
mov
sub
lcall
ret
stos
mov
ret
loope
test
pop
adc
jmp
mov
mov
mov
insl
mov
push
shrl
add
jb
icebp
cli
or
pop
stc
dec
xlat
add
add
bnd
shl
rorl
das
mov
adc
cld
add
cmp
or
sub
cli
mov
js
mov
sub
mov
xor
cltd
pop
xor
adc
fldenv
clc
cli
lret
clc
insb
jb
out
pop
out
cmpsl
popf
sahf
add
mov
add
mov
and
sbb
add
enter
fmuls
sti
push
orb
jg
dec
or
push
add
cli
xor
divl
mov
pop
inc
and
and
push
adc
fstps
jns
stc
data16
add
lea
ret
mov
mov
and
mov
lea
add
sbb
add
mov
nop
xlat
mov
cli
fidivrs
lea
fiaddl
adc
in
rorl
out
cli
sub
xchg
pushf
std
daa
push
sub
outsb
sbb
and
mov
lea
inc
cmp
bound
inc
push
insl
les
outsb
mov
leave
xchg
repz
pop
orl
add
mov
int
insl
stc
cltd
out
sarb
repz
fdivr
in
add
sub
stc
leave
mov
out
inc
nop
jnp
add
sub
incb
fcomip
insl
mov
xchg
lret
stc
push
stc
les
push
ljmp
mov
and
add
aaa
and
stc
add
mov
nop
outsb
sbb
jg
jnp
pop
rol
stos
push
stc
sub
out
pop
sahf
add
cmp
daa
ret
testb
repnz
daa
mov
push
sub
mov
lea
jg
push
lods
add
adc
inc
cli
mov
add
lcall
aaa
test
idiv
fisttpl
ret
pop
lock
rcr
ljmp
ret
jb
cmc
clc
ficoml
xchg
notb
sti
push
xor
cmpl
jne
mov
dec
adc
ret
mov
add
jl
stc
dec
gs
gs
sub
add
rol
add
cld
jns
pushl
jnp
test
push
shll
add
sbb
lcall
or
cli
xlat
adc
push
pop
ret
ret
aam
ljmp
xor
cli
xor
mov
mov
xchg
stos
and
shll
lret
jl
testl
aas
sbb
mov
out
ret
adc
add
cli
stos
fidivrl
or
or
test
ljmp
mov
push
mov
clc
add
lock
ja
adc
scas
test
ret
stos
sarl
sub
mov
stos
dec
sub
insb
or
inc
cs
div
fs
outsl
cmp
shll
add
fdivrl
sub
psubq
xor
mov
xchg
es
rorl
ret
divl
lahf
std
mov
mov
mov
mov
xor
mov
aad
sti
popa
ljmp
lret
pop
mov
testb
notb
insl
sbb
add
push
cmc
les
adc
fsubrl
scas
mov
and
lahf
mov
push
test
ret
test
mov
in
or
mov
icebp
and
push
add
test
mov
inc
add
xor
orb
ljmp
lret
mov
push
mov
test
shrl
add
rcll
clc
std
add
cli
add
clc
dec
or
mov
lea
mov
mov
adc
pop
pop
inc
ror
in
stc
dec
mov
test
movl
jecxz
pushl
jge
clc
pushf
mov
gs
or
and
adc
pop
and
out
or
aaa
add
bound
fsubrl
xchg
movl
fdivl
lock
leave
jmp
or
pop
add
hlt
fs
push
pop
call
sbbl
inc
call
shr
testl
mov
inc
cwtl
repnz
add
insb
push
push
shll
jmp
cmpsl
add
add
lods
aaa
add
xlat
test
repnz
push
inc
cli
popf
inc
js
inc
mov
cli
popf
jl
mov
jns
sbbb
inc
cli
popf
inc
js
ss
mov
add
into
aad
fwait
ror
cmpxchg
andl
mov
push
xchg
add
cli
jl
fs
inc
inc
add
sti
fs
js
leave
pop
lods
and
add
and
xor
add
add
add
and
inc
jmp
inc
cli
add
and
add
test
pusha
sbb
ljmp
xchg
shlb
xor
incb
mov
lods
es
jle
enter
add
sbb
pop
inc
jmp
idivb
pusha
adc
add
jge
inc
cli
inc
push
fsts
jle
mov
sub
add
sbb
inc
add
sub
lea
add
add
stos
lds
sub
inc
jne
orb
or
add
inc
jmp
ss
inc
jmp
stos
icebp
fs
addl
fs
jb
add
lret
push
adc
jb
gs
add
jns
ret
mov
in
ja
clc
jo
mov
cmpsl
in
bound
int3
inc
add
mov
decl
insb
xor
and
add
jo
mov
idivb
inc
jnp
jge
xchg
outsl
push
mov
repz
add
add
mov
jp
lcall
mov
incb
ret
cwtl
movb
ds
inc
mov
fdivrs
sbb
testl
pusha
ret
ret
add
mov
in
ljmp
mov
cli
and
xor
mov
add
mov
cmp
decl
xor
cmp
mov
and
fdivrs
mov
push
inc
cli
pushf
out
xor
add
push
inc
cli
and
cld
sti
test
cmp
aas
pop
pop
add
mov
nop
or
or
mov
aam
sub
add
mov
jne
cmc
mov
pop
sahf
cmpsl
adc
sti
test
std
insb
mov
add
add
add
ret
iret
jnp
xchg
mov
divl
sbb
sbb
shrb
jns
mov
clc
cltd
or
sbb
cmpb
sbb
lods
mov
add
inc
ljmp
xchg
add
aaa
idivl
call
add
std
js
icebp
add
or
jmp
repnz
jge
add
jne
push
insl
cmp
sahf
push
jl
lods
movsl
sbb
pop
ret
mov
cmp
mov
add
push
rorl
jmp
mov
ret
push
mov
out
jne
xchg
add
jmp
mov
add
add
lods
jne
xor
mov
xlat
in
clc
add
add
add
add
add
stc
cltd
add
jns
cmp
ret
push
mov
test
incl
out
lods
mov
or
clc
fs
add
movl
test
pushl
pushl
test
lea
pop
push
jmp
jb
inc
push
add
pop
sbb
add
pushl
fildll
mov
add
or
ret
push
mov
add
jo
fisubrl
jne
or
jmp
test
pop
ljmp
out
in
decl
cli
fnsave
add
sbb
inc
mov
mov
int3
or
inc
inc
lahf
je
xor
add
sti
sbb
add
lret
or
adc
xchg
mov
mov
xor
jl
inc
jne
adc
or
jnp
add
int
push
sub
cmpsb
fwait
sbb
imul
or
cmpsb
ret
jne
add
pop
jnp
stc
add
add
cmp
insb
jmp
add
inc
fstps
add
cli
lods
out
scas
stos
stos
pop
cld
pop
das
xchg
add
subl
out
jg
add
inc
add
jns
add
stos
cmpsb
push
add
adc
fnstsw
adc
cld
add
sahf
in
shll
jnp
dec
mov
jp
xchg
sbb
push
dec
cmp
popf
sbb
movsl
stos
es
sahf
add
mov
add
lods
push
xchg
cmc
ja
adc
pushf
push
or
jle
cld
in
arpl
or
xchg
stc
das
leave
sbb
sahf
add
ljmp
mov
js
hlt
sbb
sbb
repz
add
ficoms
pushl
test
and
push
call
fcmovb
push
push
adc
and
cmp
cld
lea
data16
xchg
jg
out
jne
add
stc
test
fildl
cmp
cmp
jbe
mov
mov
lea
fcompl
rclb
pop
mov
sub
push
or
pushl
push
jne
sbb
or
out
add
and
add
out
call
push
sbb
je
mov
filds
add
inc
add
adc
push
inc
push
add
mov
jbe
mov
call
add
cli
inc
mov
cli
popf
jp
mov
cltd
dec
pop
and
flds
ss
xchg
out
jbe
cli
push
mov
loop
fadds
adc
add
lods
push
js
xchg
push
adc
cli
icebp
mov
adc
add
popf
fadd
xor
lods
add
or
scas
int
roll
cwtl
push
call
push
pop
inc
call
dec
ljmp
fwait
and
push
add
pop
inc
clc
cli
add
arpl
cmpsl
aam
mov
pop
lods
daa
std
inc
movsb
cmpsl
cmpsl
inc
lods
daa
mov
xchg
xor
cwtl
loope
sub
in
mov
adcl
cmpsl
xchg
mov
push
mov
push
adcl
mov
push
icebp
stos
scas
test
jg
cmpsl
into
jg
inc
and
sbbl
jmp
sbb
xchg
jge
test
jmp
stos
addl
out
add
jmp
xchg
cmpsb
mov
jmp
stc
icebp
mov
sub
inc
aam
icebp
add
cmp
lcall
xor
cmp
jmp
stc
movsl
jne
popa
arpl
clc
cmpl
arpl
mov
add
push
cmpsb
lret
jmp
cmp
push
adcl
add
cmpsb
mov
add
add
add
mov
add
shl
faddl
xchg
add
decl
popl
ret
inc
aam
cli
dec
inc
lock
lea
pop
add
ficomps
add
and
add
jne
mov
into
pop
pushl
or
sub
add
jne
mov
mov
add
add
inc
imul
push
aad
call
cli
cmpsb
ret
jne
xchg
mov
inc
test
mov
lods
push
decl
test
xorb
sti
mov
std
mov
movsl
mov
test
push
ss
cld
fstpt
pop
imul
inc
add
jne
outsl
call
gs
call
push
sbb
add
add
or
pushl
dec
pop
xor
dec
push
xchg
xorl
jl
mulb
add
cli
lods
add
mov
add
cli
lods
jbe
incb
test
add
push
fiadds
cs
mov
outsl
test
xor
cs
cmp
mov
mov
mov
mov
mov
cs
jbe
mov
jmp
add
mov
cmp
cli
int
incl
bound
leave
lret
and
cli
add
add
mov
jmp
cmpsl
orl
out
adc
stc
lods
mov
pop
sub
call
jo
popa
cld
lea
stc
add
test
add
mov
lods
jne
call
sub
pop
lods
dec
lret
push
adc
jmp
test
push
xchg
stc
add
imul
stos
mov
incb
sub
or
in
mov
inc
cltd
push
adc
jmp
push
sbb
mov
adcb
add
push
add
fsub
add
movb
sbb
les
stos
jmp
xchg
mov
les
aad
push
push
movl
bound
cmp
lcall
inc
les
add
mov
add
je
shr
roll
xchg
mov
add
cmc
jne
imul
jle
inc
and
mov
add
dec
iret
mov
cli
stos
add
ret
insb
inc
ss
sbb
or
push
movsl
push
imul
loope
jnp
cmpsb
jg
mov
dec
cmpsb
fisttpll
jae
cli
std
movsb
jne
pop
das
mov
hlt
stos
pushl
xor
andb
add
das
adc
sbb
mov
adc
or
adc
add
mov
cltd
movsb
jne
testb
dec
lahf
js
inc
and
dec
fldl
add
idivb
push
adc
push
sahf
movsb
add
sbb
movsb
outsl
jno
mov
lahf
sahf
js
cmp
mov
xorl
in
inc
dec
push
or
pop
push
movsl
sbb
fwait
add
cmpsb
push
jmp
repz
in
fwait
jle
movsb
jae
xor
add
clc
movsl
sbb
movsb
out
or
add
add
lahf
jne
nop
scas
jmp
push
cmp
pop
mov
xor
or
rorb
mov
xchg
test
cwtl
sahf
cmp
add
jmp
testb
add
adc
add
clc
cmpl
adc
faddl
lods
fiaddl
sahf
fsubrl
sbb
push
hlt
mov
adc
ret
push
or
jge
stc
sbb
push
add
xchg
add
dec
or
add
ret
push
mov
xchg
lock
std
or
in
incl
add
hlt
pushl
popa
jne
mov
push
shlb
lock
or
xchg
pushl
je
mov
roll
adc
mov
jne
arpl
dec
popf
out
inc
xadd
bound
xor
sti
decl
pushl
imul
adc
out
lock
cli
orb
mov
jmp
scas
adc
jne
add
loop
cmpsb
mov
sub
or
aas
dec
decl
mov
mov
mov
mov
sbbb
add
lods
adc
int
repz
mov
or
adc
dec
ss
popf
xor
fisttpll
lods
mov
add
push
mov
stos
jae
push
mov
xlat
or
pop
mov
jl
push
xchg
or
call
fwait
pop
or
imul
pop
fadds
flds
mov
mov
pushf
loop
mov
sti
inc
insb
inc
ljmp
mov
cmpsb
fwait
jle
mov
add
add
lea
fwait
pop
enter
mov
cli
lods
psllw
mov
jp
call
clc
add
es
call
loop
adc
or
adc
pop
mov
push
out
or
push
push
fwait
jmp
pop
dec
insl
sub
call
cmp
cmpsl
lea
add
fwait
lcall
je
incl
jbe
mov
out
incl
jmp
test
call
testb
push
inc
sub
stos
sbb
mov
rolb
add
cld
jae
sub
out
xchg
sub
push
call
or
sti
add
add
mov
add
cmp
or
cs
lcall
jne
stos
daa
sub
jnp
or
sbb
lcall
jne
mov
xchg
ret
decl
imul
sub
jne
jp
adc
std
cmp
pop
call
lea
fildl
insl
out
mov
popf
ljmp
and
cli
js
jmp
add
sti
pop
adc
push
decb
stos
inc
xchg
stos
add
cmp
loopne
arpl
inc
add
ret
sbb
mov
call
stos
cs
sbb
iret
ud0
xor
cmpsb
pushf
push
add
jmp
xor
dec
cmpsb
stos
push
iret
xchg
ljmp
ret
sysenter
jmp
popf
jmp
add
mov
cwtl
dec
popf
dec
pop
inc
popf
jge
das
jo
add
push
mov
cs
push
rolb
pop
into
sub
push
xor
loopne
push
pop
out
xchg
jl
cmp
in
pushf
scas
or
cwtl
out
lret
call
push
push
lods
xor
mov
lds
ljmp
xor
adc
pushf
outsl
icebp
cmp
aad
xchg
stos
add
loopne
mov
mov
jne
cmc
hlt
cmc
sub
data16
call
push
in
aam
xchg
jne
shl
mov
lods
cmpsb
mov
jne
jle
or
push
xchg
jne
mov
int
fyl2xp1
xor
lcall
or
inc
xchg
jno
or
cwtl
and
add
add
stc
cmpl
std
cmp
aas
jae
lock
push
pop
add
jae
into
jnp
adc
add
adc
mov
je
and
repz
xchg
clc
or
mov
xchg
call
outsl
movsb
mov
mov
incl
add
add
mov
fstps
fidivrl
in
sbbl
push
int3
call
call
mov
add
add
shll
cs
jecxz
out
cli
inc
add
icebp
imul
jno
sub
in
add
push
outsb
add
mov
fwait
lea
cmp
call
sub
cmp
add
add
pop
shl
mov
mov
ds
cmp
in
jns
xchg
cmp
jmp
adc
jns
mov
sub
mov
xchg
add
cmp
aas
cli
mov
popf
add
cmp
ljmp
inc
in
jbe
xchg
xor
add
adc
add
add
ljmp
andl
mov
int3
movsb
xchg
cli
add
add
cmp
xchg
hlt
jns
inc
jmp
shlb
decb
es
fsubl
inc
jmp
les
jge
jb,pt
inc
stos
int3
inc
jmp
cwtl
dec
add
test
add
cmc
or
adc
lock
mov
adc
add
sub
xor
aaa
in
xchg
push
out
dec
std
sbb
pop
inc
gs
add
lahf
les
stc
cltd
add
inc
sub
lods
mov
jbe
cltd
push
es
push
fs
push
add
enter
adcb
pop
add
add
jmp
sbb
movzwl
cwtl
pop
xchg
inc
jge
incl
mov
pop
add
add
imul
lret
pop
cmpsb
aad
jp
inc
outsl
loope
add
out
sub
push
lea
jmp
out
lret
jns
push
jmp
add
arpl
pusha
sub
call
push
test
add
add
enter
mov
jmp
xchg
add
push
add
add
add
adc
inc
inc
mov
push
jb
cli
cmpsb
ret
je
inc
js
cli
fwait
mov
dec
pop
adc
rcrb
scas
call
jbe
push
cmc
add
dec
movsb
stos
test
mov
or
add
cli
fwait
stos
jmp
add
movsl
xor
jge
xchg
add
fwait
xchg
mov
rclb
lcall
add
fwait
stos
push
mov
xor
cmp
hlt
and
sub
fwait
add
addr16
call
add
sub
or
add
fstpt
cli
xor
dec
dec
nop
mov
stos
and
movsb
xchg
int
sahf
sldt
repnz
pushf
mov
nop
xorl
ja
jle
movsl
xor
jmp
xchg
orl
push
es
dec
xchg
cli
sbb
gs
mov
xchg
push
nop
in
xchg
xchg
pushf
or
cmp
sub
popl
imul
cld
out
dec
nop
jmp
mov
nop
mov
add
addr16
dec
add
out
stos
call
std
sbb
inc
testb
cmpsb
data16
mov
outsl
incl
mov
xchg
inc
bound
mov
and
push
cmpw
std
out
addr16
pop
inc
add
lods
loopne
outsb
pushf
or
sub
cli
mov
decl
add
jmp
rolb
pusha
cld
fidivl
xchg
push
sti
mov
add
icebp
and
and
jne
push
shll
jne
mov
rcrb
mov
gs
push
cmp
push
je
or
outsb
mov
mov
rolb
inc
sub
add
arpl
mov
decl
push
jnp
mull
push
push
test
addl
dec
sbb
sub
xor
add
fistl
add
cli
sbb
or
movsl
xchg
cmc
iret
or
aas
les
inc
cli
xor
push
rcrb
pop
add
mov
mov
movsl
xchg
add
add
xchg
negl
mov
xor
xchg
xor
je
and
lock
xchg
push
pop
push
sti
out
jmp
fs
dec
lea
add
add
fsave
xchg
add
pop
loope
fnstenv
rcrl
or
loope
aaa
mov
xchg
in
mov
add
add
mov
or
aaa
lea
xchg
inc
mov
mov
jno
push
xchg
xchg
xor
adc
nop
iret
int3
cmovae
pushf
test
add
ret
std
sbbl
jmp
mov
jmp
stc
push
add
out
test
orb
add
in
mov
outsl
mov
adc
jmp
testb
mov
push
xor
push
push
cmp
fcomps
xchg
mov
andl
push
jbe
xchg
imull
mov
push
push
mov
push
lock
add
out
das
xchg
pop
pushl
add
sbb
aaa
sub
jne
mov
jmp
inc
add
lock
inc
add
das
xlat
lcall
test
aam
incl
mov
xor
testl
incl
out
add
incl
mov
out
cmpl
out
idiv
or
jne
jnp
sar
add
sbb
mov
and
cli
test
out
int
jmp
test
pop
lret
mov
inc
out
dec
fisttpl
call
mov
xor
sti
mov
mov
sbb
xchg
fwait
sbb
fwait
mov
dec
lods
xchg
std
stos
sbb
loop
in
mov
mov
sti
outsl
mov
aad
mov
mov
inc
call
xor
add
pop
sti
incl
lahf
cmpl
mov
test
rorb
add
xor
out
cld
inc
daa
insb
mov
out
fldenv
fwait
lods
mov
mov
outsl
incb
pushf
sti
push
enter
sbb
fidivrs
pushf
nop
sbb
mov
icebp
pop
mov
das
jb
add
bound
push
add
adc
fwait
dec
xchg
mov
add
jl
addl
out
cli
xchg
mov
cld
test
or
add
clc
out
dec
mov
jo
stc
imul
stc
sbb
sbb
fldl
jno
ss
mov
es
out
insb
mov
mov
add
jmp
jbe
push
outsl
popf
and
xchg
incl
mov
inc
add
add
imul
aaa
push
mov
clc
out
popl
jne
xchg
sub
jmp
add
jmp
inc
add
mov
add
aaa
sub
jns
or
add
lock
or
incl
dec
decl
jns
call
sti
sub
push
in
jmp
mov
add
das
inc
and
add
adc
decl
mov
jp
or
mov
dec
decl
mov
call
or
ljmp
sar
xchg
jmp
add
das
test
add
add
les
push
sub
adc
mov
test
sarb
mov
xor
shrb
mov
mov
shl
fwait
sbb
out
out
pushl
xchg
pushf
add
and
jmp
xchg
add
cli
xchg
clc
and
data16
mov
incl
cli
fwait
adc
outsl
movsb
fwait
mov
mov
add
clc
loop
mov
lds
out
add
sahf
adc
popf
pop
mov
rcrb
sbb
sarl
add
data16
test
sti
push
xor
or
lds
inc
cli
xor
pop
daa
test
xor
xchg
mov
test
push
adc
sbb
add
aam
add
test
mov
shl
out
test
push
cli
in
cmc
sarl
add
call
add
add
cmp
cmp
add
push
adc
cmp
sarb
call
repnz
adc
fdivl
jne
xorl
shll
add
jae
inc
dec
xor
jmp
stc
xorl
xor
push
into
xorl
movsl
std
divb
incl
adc
das
sub
xorl
rclb
add
inc
hlt
mov
hlt
incl
and
incl
xchg
call
push
pop
pop
xor
or
push
jmp
pop
add
add
jnp
sar
fdivl
pushl
lahf
push
std
int3
mov
cmp
inc
arpl
sub
add
sub
mov
je
stos
inc
hlt
incl
lahf
adc
cld
mov
jne
sahf
sahf
rorb
push
jnp
das
inc
jecxz
push
xor
or
cli
imul
rorb
jne
push
add
add
aam
add
cli
adc
cmp
cli
imul
add
decl
add
cld
jne
xchg
aam
shlb
xchg
rcll
or
mov
add
mov
add
je
adc
push
xchg
xor
cld
ljmp
cmp
mov
cli
add
add
add
clc
jmp
and
out
cli
xorl
mov
in
adc
add
bound
sbb
xor
xchg
fs
je
sbb
jmp
test
mov
xchg
sub
xchg
fs
add
addb
data16
mov
add
js
inc
incl
or
mov
rcl
addr16
in
add
rol
jne
jo
add
stc
xchg
xchg
stos
je
lcall
push
adc
xor
xorl
adc
insl
xchg
jmp
cmpsb
in
adc
jbe
cmp
fldl
pop
jg
push
add
add
sub
out
mov
setns
pop
inc
dec
jg
cs
aaa
iret
es
arpl
mov
decl
mulb
pushl
sti
shll
je
and
jne
fwait
test
mov
mov
jmp
mov
push
push
and
adc
vmread
ret
ret
jnp
mov
add
add
add
add
jge
je
xor
xchg
aam
call
into
inc
inc
xor
mov
mov
ljmp
mov
call
mov
call
cli
push
dec
mov
pop
das
test
xor
idiv
dec
jecxz
xorl
add
cli
push
stc
or
mov
incl
add
jae
je
hlt
enter
adc
das
mov
adc
movsl
sbb
incl
xchg
sti
test
call
jne
jg
xor
adc
loop
cmpl
push
add
ds
pop
push
rorb
in
sti
mov
add
mov
insb
xor
inc
add
cmc
mov
cli
add
pop
sti
add
adc
jmp
xor
add
into
subb
mov
jo
lret
xorb
adc
sti
add
nop
ja
xchg
adcb
call
add
movsb
mov
mov
out
adc
add
pop
adcl
push
popf
inc
jge
addb
xchg
js
push
je
jne
push
js
addr16
loope
incl
adc
push
stc
add
sub
adc
neg
jnp
push
int
call
lea
mov
jnp
push
push
inc
shll
sbb
lods
push
incl
jnp
pop
addl
add
ljmp
ror
data16
jo
cmp
jp
pop
inc
pushf
jnp
add
push
in
jae
call
mov
inc
adc
pushl
call
incl
lock
lret
leave
ret
push
mov
outsl
ljmp
jne
mov
into
rorl
push
mov
and
test
add
test
add
push
addr16
out
pushl
imul
in
or
je
mov
dec
push
add
jge
jne
cli
shl
testl
jg
cmp
and
add
imulb
roll
mov
cli
insl
add
outsb
imul
add
add
insb
add
fst
adc
dec
pusha
imul
dec
jg
sub
pop
rol
jle
mov
sti
lret
lods
stos
in
cltd
sub
jmp
push
jg
ja
jge
test
add
imul
lret
int3
gs
pop
jg
aad
mov
push
inc
fs
mov
jp
cld
addb
add
cmp
jg
pop
stc
add
add
divl
sub
jns
ret
sbbb
xchg
jmp
add
fisubs
mov
adc
push
xchg
or
mov
das
pop
xchg
ret
outsb
stos
jge
jns
shl
fs
jns
jmp
sub
add
out
jmp
loope
into
outsb
in
mov
fistpll
mov
add
loope
iret
push
int3
jns
stc
sub
ss
out
pop
inc
push
jp
cs
mov
es
xchg
mov
test
aad
add
cmp
test
lods
mov
pop
jl
add
pushf
mov
into
push
jg
aas
dec
ret
rorl
scas
lods
or
stos
das
js
jo
jl
test
add
incl
push
add
outsl
sti
call
add
xor
or
xchg
movsl
stc
call
sub
xor
stc
je
mov
push
addr16
inc
inc
decl
outsl
pop
call
sti
and
push
push
pushl
jmp
into
aam
dec
push
adc
je
mov
add
cmp
out
test
cwtl
test
push
or
inc
mov
imul
xchg
mov
pushl
jg
dec
mov
or
repnz
cmpl
shrl
inc
pop
dec
gs
mov
mov
movsl
add
mov
mov
lock
icebp
sub
movsl
adc
pop
shlb
cmp
sub
scas
jns
int
js
mov
mov
scas
repnz
push
jp
repnz
jne
jbe
out
fdivs
or
pop
jnp
jmp
jp
or
pop
insb
jbe
out
pop
jbe
or
addr16
in
and
add
icebp
std
insb
movsb
js
jbe
jbe
add
ret
call
cmp
jbe
in
shlb
test
adc
ja
jnp
int
std
jbe
or
push
cld
jp
in
arpl
cmc
insb
clc
js
jne
mov
dec
or
jp
jns
lock
insb
add
cmp
push
das
inc
add
stos
mov
push
or
sbb
add
or
add
fdivl
jbe
or
xchg
scas
jne
xor
push
decl
adc
mov
mov
or
mov
mov
and
jne
xchg
lret
int3
push
sub
call
fisttpll
dec
pusha
je
andl
inc
call
add
incb
testb
mov
push
add
pop
cmp
dec
fs
call
jmp
add
sub
loopne
jl
jne
loopne
leave
in
in
enter
push
mov
or
jne
loopne
int3
lods
in
jne
pop
out
fsubrp
jmp
push
jmp
call
push
in
arpl
call
cld
arpl
push
or
int
in
in
je
add
sub
or
mov
into
mov
fidivrs
cld
mov
or
dec
mov
out
dec
jae
js
cli
pop
push
inc
cli
lcall
orl
mov
jne
ljmp
inc
inc
add
enter
jmp
vpaddd
add
adc
dec
ret
into
mov
fidivrs
cld
pusha
pop
in
add
stc
or
iret
and
jae
ja
jle
sbb
int
xor
cmp
sub
jae
ja
fwait
sti
les
add
sub
jae
ja
lea
xor
sbb
add
clc
lock
int3
jb
ja
pushf
sbb
cmp
add
xor
sbb
imul
les
add
xor
sbb
imul
jbe
fwait
add
or
jmp
or
jne
push
cmp
into
sub
lcall
ret
pushl
jno
icebp
and
sahf
add
or
cmpsl
incl
jno
loope
or
outsb
int3
faddl
mov
inc
sti
add
imul
xor
jno,pt
jmp
add
push
or
call
adcl
add
add
add
decl
out
cli
push
add
cmp
xor
pop
add
mov
fsubrl
test
xor
jmp
add
adc
je
jnp
std
pushl
xor
or
mov
add
adc
pop
call
cmp
outsl
xor
push
lcall
out
out
push
imul
pop
jmp
add
cli
pop
cmp
jbe
dec
out
je
add
pop
loop
jne
int
and
dec
jbe
mov
aas
out
pop
mov
scas
out
sti
popf
xor
or
fwait
ljmp
repz
add
jnp
mov
xchg
cmc
leave
pop
not
addr16
pop
fs
push
mov
inc
xor
add
pushf
add
scas
popa
imul
je
mov
add
je
cld
adc
mov
adc
pop
shlb
and
addb
pop
cmpsl
aam
clc
lock
inc
pop
jae
jl
jae
cmp
cld
movsl
fnstenv
popf
clc
in
ret
cmp
push
adc
les
adc
outsb
mov
mov
add
jge
pop
pop
adc
inc
add
and
stc
add
cmp
sbb
xor
ss
repz
stc
insl
jne
mov
or
ret
sub
test
pop
inc
and
mov
adc
xor
shl
cmp
fidivrs
enter
gs
into
mov
cmp
insl
xor
add
add
ret
inc
in
cmp
scas
push
enter
insl
jne
or
or
negb
call
jg
mov
outsb
jne
enter
add
in
test
mov
add
test
add
add
test
jge
add
test
add
cld
insb
daa
jmp
out
adc
incl
add
jne
rolb
jne
divb
outsl
sar
divb
je
call
and
mov
cmc
je
pop
je
call
js
pushl
divb
jae
call
fdivl
jmp
jo
cmp
idiv
cmp
add
jge
pop
testb
mov
testl
add
and
imul
enter
cli
div
sarb
inc
sti
loop
inc
dec
pop
div
shrb
mov
popa
inc
ljmp
pop
inc
lcall
mov
decl
sub
jnp
jae
jne
fistl
cli
ljmp
aad
xor
xor
add
add
sbb
xor
add
div
imul
add
cmp
mov
ret
insb
xor
add
call
add
lock
std
shrb
mov
add
adc
aaa
cmp
call
add
push
fcmovb
add
jge
lcall
push
cld
pop
clc
xchg
js
jo
imul
mov
ret
call
xchg
add
xor
imul
stc
add
xor
out
add
jmp
and
lods
test
mov
call
push
adc
sti
adc
add
shrb
addr16
out
jmp
ret
mov
add
jmp
js
aad
push
sbb
popa
hlt
cmpsb
and
mov
ljmp
or
call
popa
cmc
xchg
fsubrl
push
jmp
int
ret
aam
incb
into
xchg
decl
out
mov
insl
call
add
dec
ljmp
fidivl
repnz
cld
cmp
xor
fidivl
scas
incl
add
jmp
xor
mov
xor
xlat
xor
mov
ret
enter
repz
jne
int3
xchg
cld
mov
out
push
push
dec
stos
sub
add
addb
sahf
sbb
inc
arpl
test
cli
mov
cmp
std
dec
lret
pop
bound
jo
dec
xchg
ret
fcos
aad
xor
push
pop
xor
add
pop
sub
pop
insl
incl
push
clc
push
stos
lea
vpsubq
push
pop
xor
test
sub
add
lds
je
sub
pop
sbb
lcall
add
sti
lea
cld
out
add
cld
insb
out
and
mov
add
push
pop
inc
dec
addr16
add
jns
subl
mov
pop
jmp
adc
rcl
roll
ret
std
out
add
nop
xor
ffree
jae
cli
stc
sub
hlt
into
adc
shll
pop
add
cmp
cmp
ror
data16
pop
je
imul
and
hlt
les
popl
jmp
dec
pop
cmp
incb
dec
ds
sub
aam
hlt
push
pop
sub
shll
adc
jg
imul
stc
scas
popf
xor
nop
xchg
incl
xchg
cmp
or
mov
mov
pop
xor
add
push
mov
jmp
add
pusha
lock
lret
push
pop
callw
add
lahf
shr
xor
gs
adc
pop
add
sub
or
je
call
push
cmp
inc
push
push
out
cmpsb
push
repz
xchg
dec
leave
aad
pushf
fcmove
ret
push
mov
add
mov
fwait
incl
add
dec
push
xor
dec
inc
xor
inc
rol
mov
rolb
push
arpl
je
lret
insb
loop
int3
rorl
cli
cmp
mov
iret
push
sbb
inc
jns
jne
std
mov
sti
insl
pop
mov
bound
rolb
incl
add
or
inc
cli
xor
push
call
push
inc
je
jge
decb
xor
das
sub
lods
add
cmp
call
mov
pop
ss
fincstp
dec
dec
add
leave
imul
jmp
das
cmp
call
ret
add
jne
cmc
aas
insl
arpl
inc
out
adc
aam
fchs
pop
mov
push
inc
out
aam
or
dec
xor
data16
fs
sbb
out
or
or
aas
or
ds
cmc
insb
imull
testb
bound
aad
sub
aas
in
subl
and
dec
cmp
add
dec
pop
in
jne
mov
dec
into
mov
call
and
in
test
bound
imul
popa
pushl
ds
jle
in
xchg
mov
dec
or
ret
incl
out
inc
or
dec
in
push
pusha
push
xor
jns
popf
popa
mov
or
imul
sbb
loope
push
pop
out
sbb
hlt
push
pop
call
les
cs
out
push
ljmp
sbb
xor
mov
or
xor
cmp
call
jne
ljmp
imul
mov
sti
mov
mov
add
add
add
decl
lds
arpl
je
les
and
pop
call
or
cli
mulb
ljmp
inc
cli
pop
out
pop
shlb
pop
pushl
and
jns
push
decb
pop
mov
aas
mov
cmpsb
push
insb
add
out
jle
call
insb
add
add
xchg
push
lcall
jne
cmp
out
out
pop
and
jmp
mov
dec
testl
push
das
cmp
lods
add
xchg
add
or
cmc
jbe
call
imul
jmp
fs
add
fnstenv
in
call
ja
pop
fisubs
int
add
test
push
cli
or
add
add
fwait
adc
call
jns
pop
mov
xorb
dec
push
jle
stos
mov
jmp
ja
pop
fs
pop
ret
add
pop
jl
or
sbb
add
pop
pushl
imul
sbbb
jmp
add
pop
pop
pushl
xchg
shr
mov
push
imul
xor
mov
push
inc
sbb
cmp
mov
out
mov
insl
mull
xor
inc
jmp
fstps
mov
rcl
shlb
test
jae
negl
mov
mov
jae
testl
add
sti
das
inc
add
xchg
sar
push
shlb
fadds
incb
push
xor
fdiv
cld
loope
call
clc
pop
or
daa
or
call
push
mov
imull
cmpl
xor
idiv
pushf
add
movsb
call
jae
jno
dec
mov
push
mov
add
lcall
mov
mov
incl
popa
incl
pop
push
adc
pop
loop
popf
jmp
and
decl
imul
and
mov
dec
popf
ljmp
arpl
mov
call
dec
insb
xchg
popa
incl
pop
pushl
fnstsw
add
popa
mov
jnp
call
sahf
call
xchg
lock
mov
ffreep
pusha
cmp
shll
sub
add
sub
mov
jo
inc
push
out
add
or
fnstenv
pop
pop
in
mov
push
daa
call
add
adc
sub
add
decb
rcr
mov
push
jmp
add
add
pop
dec
pop
push
or
cmpsb
mov
lea
test
movb
call
add
adc
sub
pop
xchg
or
shl
mov
push
jmp
pop
lret
cld
add
lcall
shr
adc
lcall
inc
lcall
repz
pop
jmp
aas
add
mov
add
outsb
imul
mov
in
sub
stc
add
sub
add
stc
add
and
add
inc
aad
add
jmp
arpl
jmp
mov
push
sahf
xor
sbb
insb
iret
pop
incb
add
sti
cmpsl
sub
mov
mov
add
add
hlt
divl
mov
lock
call
mov
cs
push
mov
jmp
mov
mov
notl
xor
lock
mov
sub
in
sbb
aaa
mov
mov
inc
scas
mov
incl
add
jb
xor
push
jg
pushl
rcrb
cli
add
xor
or
sbb
mov
ret
jg
push
in
inc
add
push
fdivrl
pop
xor
popf
mov
push
pop
subl
jmp
mov
add
cs
call
add
lea
add
sti
jmp
jne
sahf
jmp
imul
cmpsl
pop
jmp
pop
sahf
xlat
cmc
insb
ds
inc
pop
mov
xor
pushf
jbe
and
pop
data16
std
insb
and
push
dec
pop
std
shl
imul
ds
in
xchg
adc
xlat
cmc
insb
push
pushf
aad
push
xchg
dec
push
pop
shrb
mov
push
imul
pop
movsl
xchg
add
push
shl
push
push
ficomps
ficomps
loope
jge
xchg
push
dec
mov
jae
push
pushl
jmp
out
call
sahf
push
call
jle
dec
jmp
outsb
inc
pop
call
xor
push
call
add
add
dec
mov
inc
mov
roll
jne
popa
dec
std
push
es
jne
push
rolb
adc
pushf
incb
add
insb
mov
push
xor
jne
and
cmp
mov
out
inc
lea
add
push
test
add
xchg
inc
testl
push
mov
pop
push
add
stc
add
or
lea
add
mov
incl
mov
sti
call
sbb
jae
mov
imul
mov
dec
test
imul
mov
mov
lock
push
imul
mov
mov
lcall
call
pushl
pop
divl
in
call
movsl
adc
add
mov
decl
fs
cli
jae
mov
dec
outsb
pop
jmp
sub
ljmp
push
lcall
lods
add
and
pushl
push
std
pop
mov
nop
lock
sbb
daa
push
sub
cli
cmc
dec
mov
pop
ljmp
divl
pushf
jmp
popf
arpl
rolb
ret
lea
test
push
out
imul
sub
mov
ficompl
dec
pusha
cmc
or
fldz
mov
fimuls
xor
push
jle
and
xor
rcrb
vaddps
pop
pop
std
push
adc
and
call
pop
jae
adc
push
push
add
ficomps
pop
cli
add
cli
add
test
push
pop
mov
idivb
add
add
add
dec
push
jmp
stc
add
stc
stc
arpl
js
push
inc
jl
idivl
shrl
scas
mov
mov
stos
push
lcall
insb
push
decl
rclb
icebp
xchg
cmp
mov
stos
push
jmp
add
call
push
insb
testl
mov
mov
jmp
or
push
vmovupd
sub
xor
hlt
inc
pop
call
clc
ljmp
movsb
inc
pop
call
movsb
je
mull
out
fdiv
jmp
mov
ret
imul
incl
add
loopne
mov
pushl
mull
dec
mov
push
mov
stos
std
inc
mov
fwait
mov
add
push
mov
xchg
cld
imul
nop
pushl
mov
rolb
xchg
fcoms
xchg
sar
lea
push
incl
add
out
xorl
loopne
sti
lret
or
sbb
mov
pop
add
cmp
pop
clc
pop
add
mov
add
cli
pop
ds
es
call
xor
mov
hlt
in
mov
pop
ljmp
imul
add
mov
add
dec
sub
add
add
lcall
cmc
dec
popf
push
cltd
mov
xorl
push
lea
xchg
ficoms
mov
frstor
call
push
pop
push
cld
sbb
call
push
jae
test
push
add
rcl
ret
cmp
sub
or
ret
stc
cltd
or
pop
pop
push
nop
add
subl
add
dec
hlt
sbb
call
daa
jle
adc
push
call
mov
pop
incl
dec
sbb
sarb
dec
jmp
gs
addb
xchg
sub
dec
mov
mov
mov
pop
adc
dec
or
add
xchg
xor
addb
add
mov
call
dec
call
stc
add
mov
cmpsb
addl
add
sar
or
aaa
sub
mov
adc
cld
dec
je
cld
icebp
mov
clc
sti
movb
add
add
mov
mov
mov
mov
push
ss
fimuls
decl
lea
add
call
sub
jae
nop
jae
testl
call
cli
push
mov
in
push
add
pop
add
aad
xlat
push
loopne
test
fistl
add
xchg
fildl
cli
notb
cmpsl
add
dec
push
push
incl
pop
incl
bound
call
out
push
pop
in
test
push
decl
sahf
cwtl
in
cmpsb
push
inc
push
pop
lods
push
lahf
pop
jmp
hlt
xchg
call
ficoms
popl
pop
aas
xchg
pop
push
cmc
xchg
dec
pop
in
dec
inc
dec
scas
dec
inc
push
cmpsl
pop
ss
aad
jne
add
int
cs
rclb
rclb
pop
arpl
xchg
push
push
popf
xchg
stc
pop
xchg
dec
add
dec
out
push
aas
dec
rclb
dec
shll
jmp
mov
pop
push
dec
fucomip
dec
xor
pop
lcall
mov
fnstsw
mov
cld
incl
add
test
idivl
stc
faddl
push
mov
sbb
mov
sub
sarb
add
push
push
xchg
mov
dec
dec
jne
dec
shl
push
lds
call
mulb
call
adc
lret
ror
dec
lret
movb
insb
dec
jmp
pop
subl
add
dec
jne
shll
mov
lret
add
incl
jmp
in
inc
add
incl
dec
dec
out
popa
mov
leave
and
add
stos
add
sub
imul
fnsave
cld
jnp
add
xor
push
push
decb
dec
out
mov
add
lock
and
push
pop
sub
scas
xchg
mov
mov
push
dec
mov
cli
jb
addr16
pop
pop
mov
cli
jmp
jne
test
flds
jecxz
ljmp
dec
jne
les
in
cmp
negb
mov
fiadds
and
fcos
push
sub
fidivl
add
scas
out
push
rcrb
inc
cli
fisttpl
add
cmpsl
int
add
imul
pop
or
cmp
hlt
add
inc
xor
dec
xchg
mov
cli
pop
pop
mov
std
pop
ret
cmp
dec
mov
ret
cli
iret
add
adc
outsb
dec
or
pop
fdiv
dec
fdivr
add
ffree
xchg
dec
jmp
inc
fucomi
fldpi
inc
pushf
sti
popf
pop
pop
dec
lods
jle
dec
adc
loop
cmp
call
xchg
mov
dec
cmc
pop
jecxz
gs
mov
jns
xchg
mov
sar
scas
rorl
cmpsb
or
pop
int
incb
test
add
pop
andl
jmp
scas
call
roll
jmp
pop
xor
inc
dec
push
movsl
dec
mov
testb
rolb
jmp
addl
decb
shlb
imul
cs
rorl
xor
loope
inc
incl
add
test
inc
inc
mov
decl
jmp
sub
lcall
mov
cmp
mov
incl
sub
stos
jmp
test
mov
mov
inc
incb
idiv
or
xor
cli
inc
jmp
out
outsb
ljmp
jg
testl
pushl
aas
cmp
add
pushl
mov
aaa
sub
add
test
cli
fwait
rcrb
jns
sub
push
aas
add
xchg
jg
push
cmp
lahf
dec
jmp
push
inc
je
or
ja
jg
push
decl
fimull
add
xchg
cli
daa
mov
call
pop
iret
inc
bound
add
test
roll
rcrb
pushl
out
ljmp
fs
adc
dec
repz
decl
push
lcall
add
dec
insl
iret
lock
arpl
leave
push
push
inc
shl
pop
jo
inc
inc
mov
push
dec
scas
dec
and
dec
sub
inc
xchg
pop
adc
xchg
push
or
inc
jbe
add
inc
push
jbe
cmc
sub
pop
shr
dec
fldl
shrl
xor
add
jle
mov
imulb
push
dec
jae
or
cmp
mov
add
xor
ret
mov
fisubs
inc
add
mov
push
das
sbb
xor
sub
xchg
add
lods
call
test
add
cld
inc
jmp
xor
mov
call
xor
add
cmp
dec
dec
lret
inc
mov
sub
incb
sub
add
lods
xor
inc
add
popa
ljmp
popa
ljmp
mov
xor
push
inc
push
idiv
scas
int3
out
loopne
add
xchg
push
add
mov
lahf
sub
int3
je
mov
mov
mov
repz
push
imul
test
call
push
ret
xlat
testl
add
lock
mov
aam
test
add
or
push
sub
jge
insb
add
inc
cmp
incl
insb
add
stos
incl
xorl
call
mov
inc
cli
push
xchg
lock
dec
inc
decl
add
inc
cli
inc
jae
xor
mov
daa
negl
push
decl
push
testl
cmp
je
scas
mov
add
in
inc
add
cmp
xor
arpl
lds
mov
mov
cli
mov
popf
repz
inc
popf
dec
insb
lea
icebp
lea
addb
inc
jge
jge
js
std
dec
insl
inc
jmp
pop
gs
add
mov
add
xchg
inc
xchg
mov
xor
fsubrs
inc
cmp
add
add
mov
xchg
test
jo
inc
cmc
jp
dec
in
inc
data16
sub
xchg
fldl
nop
loop
dec
inc
int
lock
xchg
jno
inc
mov
inc
ljmp
mov
mull
cmp
jne
inc
mov
push
cmp
mov
cmp
incl
stos
or
shlb
push
test
imul
mov
xchg
xchg
mov
aaa
call
mov
scas
into
add
mov
mov
mov
call
aaa
outsl
pushl
mov
call
sahf
pop
cmp
sub
call
mov
or
sbb
xor
cmc
inc
xlat
jg
stc
lea
aas
mov
incl
cmp
inc
cld
cld
dec
sti
pushl
jne
fistl
mov
xchg
mov
pop
decl
add
enter
leave
decb
and
push
pop
dec
pop
call
sub
idiv
cmpsb
cmp
jne
fcmovnb
stos
jl
jne
enter
dec
pop
call
jl
sti
call
pop
lds
add
mov
push
push
ss
xor
decb
adc
pop
sub
pop
add
test
out
sub
int
shlb
incl
add
rolb
add
out
int
xchg
repz
lcall
mov
inc
jne
adc
scas
jge
ja
add
dec
push
lds
iret
sub
cmp
add
add
ja
add
stc
jnp
jne
les
mov
lods
add
add
and
lea
cmp
add
mov
cmc
inc
or
rep
inc
incl
rorl
jae
add
sub
push
push
nop
cmp
ss
xchg
cmp
popf
cmp
inc
inc
lea
lcall
dec
sub
xlat
popa
xor
in
pop
stos
repz
iret
or
mov
inc
push
mov
scas
or
push
add
cmp
mov
sub
ret
call
les
cmp
inc
outsb
pop
add
inc
std
inc
jmp
cmp
mov
adc
decl
inc
lods
inc
cmp
pushl
cld
inc
je
push
jg
test
aam
dec
push
cmp
addl
cwtl
cmp
cmp
cltd
mov
cmp
out
add
adc
sbb
fdivs
incl
xchg
jg
sub
aam
cmp
cld
inc
jmp
mov
mov
xorl
lods
add
and
or
je
outsl
mov
call
mov
push
out
inc
push
xchg
les
push
std
call
call
aam
jne
lds
scas
test
add
push
mov
loop
fcomi
les
arpl
je
sub
arpl
rorb
test
add
inc
clc
and
add
pop
inc
repz
add
imul
mov
call
ss
adc
jne
test
jle
sub
sub
addl
add
sub
push
les
call
dec
mov
lea
aaa
jmp
fdivrl
incl
adc
stos
push
or
cli
xchg
sbb
mov
cmp
jmp
push
call
andl
fisttpll
lock
pop
sub
ja
mov
adc
add
cmp
cmp
mov
cmp
jg
jbe
cmpsl
add
outsl
pop
aaa
lds
dec
mov
mov
jo
mov
add
call
aas
lea
pushf
setb
cmp
pusha
insl
cmp
subb
je
jns
leave
ss
cmp
mov
test
add
dec
cmp
add
fsubrs
and
mov
sbb
mov
loope
cmpsl
sahf
int3
cmp
mov
call
jle
sub
jne
adc
data16
mov
add
call
add
lcall
idivl
in
aaa
jne
shll
fdivl
mov
int3
aaa
lcall
push
add
jle
cmp
push
add
add
testl
sub
cmp
xor
out
adc
mov
pop
cmp
shll
into
pushl
add
call
insb
mov
testl
jmp
cli
je
insb
jo
call
insb
mov
imull
pop
cmp
jmp
cli
jmp
add
leave
add
loope
add
cmc
add
push
imul
insl
cmpsl
in
mov
jnp
cmp
imul
arpl
idiv
insb
clc
addr16
idivb
sub
clc
je
cli
inc
daa
std
cmp
ds
and
imul
fs
add
adc
testl
xchg
incl
add
xor
jg
add
cli
pop
idiv
sub
add
sub
push
inc
add
push
add
jg
xor
popf
pushf
cmp
xchg
fbstp
incl
add
add
sub
out
pop
sub
mov
cmp
add
cmp
cmp
addr16
cmp
sarl
add
push
ss
sbb
add
jno
cs
cmp
push
lea
in
xor
mov
fnsave
xor
int
cmp
push
mov
ja
push
cmp
cld
cmpsl
add
xor
mov
lea
push
cmp
add
call
cmp
add
cmc
sub
cmp
mov
ficoms
dec
stos
xor
lock
lods
mov
mov
push
and
sahf
rolb
xor
std
lcall
jmp
and
data16
mov
out
xchg
add
incl
jns
ss
mov
add
shlb
lcall
lcall
sarb
push
xor
add
out
jmp
mov
call
je
sub
jmp
mov
dec
out
out
add
insb
jge
lcall
loope
test
jae
jnp
test
test
mov
insb
out
call
movsb
out
fs
out
add
push
ljmp
idiv
and
dec
test
repz
jmp
arpl
lcall
out
in
ljmp
stc
idiv
in
sub
mov
or
out
xor
js
sbb
add
pop
test
inc
xlat
add
pop
scas
pop
and
popa
ljmp
sar
inc
cli
jp
aaa
jecxz
add
xchg
pop
xchg
cmp
push
ret
push
add
jp
scas
pop
rorb
lods
sti
aad
or
sub
jmp
cmpsl
cmpl
rep
setge
call
add
jmp
cmp
add
add
add
lods
pop
pushf
call
xchg
cmp
aaa
add
cmp
xor
xor
cli
std
test
sti
sbb
mov
or
cmp
adc
mov
sub
aaa
jae
jns
fnsave
loop
dec
out
jns
cmp
cli
mov
inc
jbe
ja
das
lods
xor
stos
cmp
aaa
popf
mov
loopne
inc
leave
lds
mov
aad
call
xchg
imul
add
add
xor
push
mov
jmp
stc
xlat
mov
js
cld
push
sahf
pop
fimuls
xor
pusha
cmp
mov
xor
loope
cmpsb
int3
pushf
ret
xor
stc
add
mov
xor
adc
inc
jmp
mov
fdiv
sbb
pop
add
push
rolb
sti
add
add
divl
ljmp
fdivl
mov
lds
add
or
hlt
enter
adc
push
jae
mov
stos
or
out
lea
cmp
or
out
call
pop
mov
pusha
add
rorb
push
jmp
add
cmp
stc
call
add
stos
ret
push
jle
andl
pushl
fisttpl
inc
cli
fldcw
call
adc
xor
add
mov
fisubrs
call
jne
aaa
jmp
and
xor
push
orl
scas
or
push
movd
add
movsb
mov
add
add
jbe
sti
and
incl
dec
stc
inc
cli
xchg
scas
sti
loop
push
fnstsw
push
aad
or
mov
add
rcl
repz
call
popf
push
cs
rcll
aad
scas
cmc
sbb
dec
test
adc
cs
stos
sub
mov
push
xor
pushf
call
add
add
cltd
xor
cld
add
push
fwait
adc
sub
jmp
push
add
or
loopne
lcall
xor
sub
inc
xor
cmp
and
add
sub
pop
push
cmp
enter
lcall
jmp
lcall
add
push
add
call
mov
call
xorl
pushl
sti
testl
call
jne,pn
adc
call
sub
pop
shrl
mov
scas
inc
add
pushl
insl
sbb
add
cld
repz
insl
or
add
mov
dec
enter
add
add
cmp
add
hlt
incb
mov
or
mov
push
mov
mov
je
hlt
insb
sti
call
dec
enter
sub
add
test
adc
pushl
adc
mov
test
pop
idiv
push
icebp
or
test
incl
add
movsb
call
out
inc
cli
jp
lock
xor
dec
sbb
jbe
mov
mov
cmp
mov
out
ljmp
xor
aad
cmpsl
xchg
ljmp
jns
pop
idivl
add
add
pop
rcrl
jmp
sub
incl
add
dec
arpl
add
add
faddl
jmp
cmp
and
mov
call
jb
add
add
ret
pop
sbb
sub
jne
sub
cli
add
jno
jb
ret
pushf
sbb
std
inc
lea
sbb
xor
sub
jbe
xor
xor
sub
add
push
xor
clc
or
xor
jne
xor
das
push
mov
cmp
cmp
pop
xor
es
add
cmp
and
cmp
sbb
mov
dec
xorl
mov
jmp
loope
enter
addr16
add
sub
inc
jmp
icebp
adc
fstpl
sub
push
jb
xchg
sbb
orl
xchg
popa
and
and
jle
cwtl
and
jmp
shlb
sub
test
jmp
stc
add
mov
push
or
rol
aas
orb
je
xor
call
add
add
add
pop
loopne
dec
call
jecxz
addr16
pop
mov
add
je
cmp
ljmp
add
push
arpl
je
cmp
mov
or
ljmp
dec
out
aad
add
and
push
sti
pop
lods
decl
push
lret
cmp
sbb
sbb
add
sub
out
inc
je
mov
sbb
xchg
call
sbb
jg
push
mov
xor
lock
mov
xchg
sub
add
mov
xchg
fisubrl
incb
sbb
mov
into
sub
cmp
inc
ret
test
out
add
sub
rorb
ljmp
add
sub
cld
rorb
daa
sub
sub
mov
sbb
arpl
inc
in
add
push
sahf
sub
js
xor
sbb
fnsave
call
xchg
add
add
add
inc
aaa
xor
cli
add
add
add
je
mov
imul
add
es
jne
and
adc
popf
push
push
add
add
pushf
dec
fstpt
sbb
mov
and
lea
fimuls
out
cwtl
and
test
shll
cmp
and
lcall
pop
jmp
and
xchg
fwait
call
cld
jmp
adc
jbe
and
imul
and
cmp
shll
movsb
and
sub
incl
ds
idiv
inc
fidivl
sub
test
dec
lea
push
addr16
aas
decb
fidivl
cli
aas
jmp
add
shll
jae
push
lods
fcomip
test
add
out
das
pop
shl
incl
fnsave
out
jmp
and
shll
inc
push
shl
incl
jmp
out
push
mov
out
mov
or
decl
shrl
incl
or
cli
sub
cli
sub
outsl
cmp
jmp
add
jns
sbb
or
lods
add
cli
lds
add
mov
jne
jbe
popf
in
sub
aad
sti
out
lods
sub
idivl
xchg
popf
lods
stos
sub
popf
inc
sti
out
mov
decl
loop
jne
lds
popf
jne
sub
add
and
push
xchg
and
add
ljmp
sub
imulb
cltd
fidivrl
fisubrs
and
or
ja
into
sbb
scas
call
jnp
and
sub
sub
sahf
outsb
into
sbb
sub
and
int
jle
pushf
gs
mov
lea
lods
and
pop
and
add
cmp
xchg
sub
inc
outsb
mov
sub
jmp
and
jmp
adc
push
adc
call
push
mov
jmp
decb
and
and
xor
inc
add
jne
icebp
bound
mov
and
movsl
stos
or
sbb
and
add
add
fiadds
jno
add
jns
jne
loope
cld
jbe
and
aad
pop
push
dec
cmp
filds
jmp
cmp
incb
cmp
imul
pop
std
jno
sbb
mov
addl
test
ljmp
push
add
cmp
and
push
cmp
or
call
add
add
add
dec
push
jecxz
je
mov
cld
cmc
lahf
pushf
out
jne
out
or
pushf
jl
roll
mov
push
loopne
push
jle
jmp
out
mov
addr16
sub
ljmp
cs
dec
les
and
pop
push
push
mov
push
in
add
pop
jp
add
jnp
dec
idivl
jle
jne
das
scas
or
inc
mov
sbb
inc
add
cli
mov
sub
das
std
sub
add
repz
jg
sub
jne
xchg
pushl
test
cli
add
fwait
push
in
cmpsl
add
bound
sub
add
add
ss
push
bound
and
pop
pop
adc
je
push
ja
and
and
add
call
and
pop
je
sbb
lea
pop
cltd
or
add
outsb
or
mov
sbb
arpl
sub
push
adc
adc
int
push
xor
push
xchg
adc
add
add
add
mov
jbe
sbb
cmp
ficomps
call
jo
inc
divl
push
stos
inc
jae
inc
jmp
push
push
lcall
push
mov
xchg
push
addr16
and
in
xchg
adc
out
sbb
mov
mov
sbb
idivl
add
jne
in
mov
push
add
icebp
sbb
addr16
stc
sub
pop
call
and
jmp
adc
jne
jmp
mov
cli
pushl
pop
call
xor
fcomip
and
mov
stc
call
pop
call
in
xlat
div
loope
jne
jmp
mov
cli
incl
add
pop
call
xor
shl
and
jne
jmp
mov
mov
out
in
jl
call
cli
jb
call
xlat
mov
imull
stos
and
addr16
sbb
xchg
mov
popf
lea
and
xchg
ljmp
shll
out
cmp
jne
add
cmc
or
push
sti
and
push
jg
cmp
daa
and
sub
and
or
rorb
cli
movl
mov
aaa
push
lods
sahf
and
add
daa
add
sahf
xchg
cmc
sub
pop
lds
add
sti
add
subl
outsb
and
add
or
push
dec
mov
sub
jbe
xchg
lods
insl
lods
or
out
or
mov
sbb
mov
in
cmpsl
add
mov
mov
xchg
xchg
int3
sub
mov
sbb
lods
sbb
daa
add
sub
mov
sbb
or
enter
aad
add
mov
and
add
add
mov
jmp
loop
inc
jmp
loope
shll
sbb
call
fs
push
scas
pop
mov
cmp
faddl
mov
sbb
sbb
jmp
cmp
push
bound
nop
or
mov
call
pusha
cmp
pushl
jne
loope
xchg
fsubrp
lea
add
lock
je
jns
pushl
and
jne
call
dec
jmp
cmc
jne
push
jne
in
lret
xchg
insb
stc
pop
mov
hlt
cmpb
jl
push
mov
ljmp
mov
adc
adc
add
and
rorl
mov
sub
or
cmpsb
or
jmp
push
jmp
call
add
add
stc
dec
loope
add
aam
rcll
push
nop
arpl
add
add
lahf
psubd
add
repz
pop
inc
lock
ret
mov
stos
and
jns
str
or
inc
and
mov
mov
cmp
adc
cmp
or
push
mov
incl
add
jecxz
jne
cmpsb
mov
pop
push
inc
call
dec
xchg
mov
stc
dec
pushl
add
cli
sbb
scas
and
lea
xchg
test
popl
inc
push
sbb
sbb
xchg
pop
mov
popf
andl
pop
sbb
loop
sbbb
lea
xchg
das
inc
inc
hlt
movsl
pop
jmp
fistpll
add
jmp
or
fcoml
sahf
mov
gs
sub
int
cs
or
inc
mov
or
insb
xchg
inc
pop
add
stc
add
cli
popf
stos
add
push
rcl
mov
jmp
xchg
repnz
or
xor
add
lahf
sub
fs
push
pop
mov
jnp
stc
add
cmpsl
icebp
lds
xchg
sub
push
mov
mov
rorb
ljmp
arpl
imul
insb
push
push
push
push
out
stos
push
push
mov
push
aam
adc
call
out
jae
xor
jmp
or
out
add
leave
clc
sub
mov
pop
mov
enter
push
mov
jle
lock
sub
mov
or
cs
add
cli
push
movsb
jae
call
dec
stc
push
add
shlb
hlt
adc
je
and
pop
call
sbb
pop
icebp
dec
ljmp
jmp
mov
stc
je
and
idiv
sahf
add
daa
jmp
mov
in
sti
call
xor
inc
jge
and
cwtl
or
bound
pop
xor
add
xor
jb
dec
nop
pmulhw
or
jnp
sbb
aad
repz
sub
inc
push
sbb
xchg
lods
mov
jne
xchg
popl
xchg
call
scas
adc
add
mov
pop
xchg
movsl
pop
pushl
xchg
or
push
icebp
out
sub
lcall
add
nop
std
sbb
sbb
lahf
lock
adc
sbb
sbb
outsl
or
add
lea
adc
or
into
cmc
sbb
jo
adc
or
sub
hlt
add
jb
sahf
icebp
adc
mov
jg
lock
jle
icebp
adc
or
jg
sti
jb
xor
add
mov
and
sbb
cld
incl
ja
cs
adc
jne
call
bound
push
cmp
stc
add
lods
adc
or
mov
dec
verw
stc
add
and
add
mov
pop
ljmp
rorl
adc
mov
repnz
or
adc
adc
jmp
cmc
pushf
adc
hlt
add
add
and
sbb
add
stc
add
aam
add
add
int3
stos
jne
fiadds
or
jne
in
je
jmp
xchg
mov
add
and
mov
mov
add
push
add
data16
jmp
push
movl
roll
add
out
push
outsb
inc
repz
dec
inc
notl
jae
incl
add
loope
stc
incb
rolb
sub
hlt
pushl
jge
mov
in
jne
fnstsw
cli
scas
push
jne
add
ret
rcll
rclb
decl
nop
notl
jnp
cmp
inc
jnp
sub
aas
jnp
sbb
mov
cmpb
sbb
push
inc
outsl
xchg
in
aas
test
call
pusha
push
push
jne
inc
adcl
es
mov
lds
movsb
das
cmpb
add
inc
adc
lock
jns
pop
push
test
outsb
push
jne
lods
vmwrite
addb
jmp
add
loopne
addr16
push
xor
add
mov
cld
adc
mov
decb
add
xchg
in
mov
push
icebp
push
pop
or
scas
scas
inc
add
repnz
mov
cmc
sbb
jae
punpckhdq
add
or
jmp
inc
repnz
xchg
xchg
or
sti
xchg
pop
insw
pop
call
lods
pop
push
dec
jne
call
jo
and
aam
leave
negl
scas
jne
push
or
push
andl
xchg
incb
add
addl
shll
cli
out
cmpl
xchg
sbb
into
je
cmp
or
std
mov
jg
mov
pcmpeqw
adc
sahf
push
cmpb
xchg
or
add
add
add
jne
stc
je
adc
pop
call
loopne
testl
push
add
pop
or
pop
add
add
dec
notl
jg
call
test
call
decl
clc
cmp
je
cli
add
add
test
or
add
dec
adc
or
push
add
push
adc
cmp
add
ficoms
out
pop
icebp
decb
movsl
clc
sti
out
adcb
sub
lea
xchg
mov
add
sbb
andl
adc
ret
pop
sti
pop
jl
bound
xchg
add
add
nop
out
ja
subb
repnz
repz
push
cmp
add
outsl
sbb
mov
add
call
rcll
call
icebp
pop
xchg
sub
add
push
add
sahf
cwtl
add
mov
popf
cmp
lea
pop
test
data16
push
adc
clc
inc
pop
mov
adc
adc
inc
outsl
or
adc
sbb
outsl
or
adc
sbb
push
or
sarl
add
cmp
enter
inc
repnz
jle
mov
add
add
xchg
in
sbb
adc
inc
push
shrl
les
or
cmp
or
loope
mov
stos
or
or
incl
jno
jbe
ljmp
pop
or
decl
inc
or
mov
push
jmp
test
or
jmp
add
xor
add
adc
add
ljmp
out
decb
notb
or
add
or
or
inc
jecxz
je
mov
popl
int
add
push
add
insb
cmc
dec
call
push
add
or
dec
inc
mov
dec
data16
mov
add
hlt
call
push
add
or
add
push
push
add
inc
sub
outsb
xchg
sub
push
call
or
jb
jmp
sahf
xchg
sar
cli
mov
push
addr16
aas
jmp
cli
and
jne
xor
add
sbb
jne
inc
mov
mov
loop
add
das
and
or
add
testb
pop
sbb
std
insl
xchg
push
lea
push
pushl
mov
enter
xorb
dec
push
dec
sti
out
leave
push
call
ja
cmp
das
jl
jmpw
and
scas
or
data16
sbb
mov
rcrb
outsl
add
fimuls
in
popf
or
add
shll
push
sub
dec
push
mov
or
push
movsl
mov
pop
pop
pop
mov
mov
subl
dec
je
sbb
mov
xchg
or
imul
call
inc
mov
cs
cmp
or
add
add
enter
xchg
incb
add
add
add
jmp
stc
pop
jne
adc
xchg
fdivp
jge
xchg
in
pop
incl
add
jmp
testl
ljmp
incl
push
sahf
dec
dec
xchg
out
sbb
add
sub
jle
testb
in
inc
decw
add
stc
add
out
ja
jmp
cld
pop
ljmp
cmp
dec
rol
inc
jmp
stc
sti
mov
movsl
inc
decb
pop
jp
add
push
addr16
aaa
inc
jmp
movsl
pop
fadd
je
enter
xchg
clc
call
sub
mov
test
adc
pushl
ljmp
dec
clc
jmp
call
mov
repz
pushl
add
ret
idiv
jnp
add
mov
cmp
add
mov
clc
pushl
mov
xchg
add
mov
call
ja
sti
test
enter
push
sbb
sbb
ljmp
inc
jg
aad
cmp
mov
inc
xchg
or
bound
add
mov
inc
je
lret
mov
das
adc
stos
pushf
outsb
or
and
cld
ljmp
xchg
pop
xorl
or
mov
cmpsb
jl
pop
inc
in
dec
and
mov
sbb
nop
pop
push
mov
pushl
add
sbb
push
or
ret
call
add
add
xlat
mov
incb
add
xor
nop
std
in
cmpsl
pop
int
roll
push
insb
pop
enter
shl
inc
jmp
les
add
inc
push
sbb
pushf
roll
add
add
sti
pop
xchg
insb
or
cmp
gs
add
add
xchg
adc
fwait
dec
add
adcl
or
sub
adc
add
add
xadd
cmp
jp
adc
loopne
nop
testb
cwtl
pop
add
pop
repnz
add
add
shl
pop
mov
jns
jmp
repz
xor
add
add
jmp
adc
call
incb
jmp
sti
add
add
outsb
add
stc
outsb
add
popf
testl
add
add
and
addr16
mov
pop
add
loopne
add
xchg
push
call
arpl
idiv
in
mov
call
push
lock
ljmp
sahf
mov
adc
pushl
insb
xchg
or
shll
ljmp
sub
jl
cmpl
add
jmp
push
out
mov
in
or
jne
push
xchg
mov
or
mov
adc
cli
inc
cmp
dec
push
or
cmp
jecxz
xor
sbb
lcall
sbb
inc
adc
or
adc
cli
jmp
ret
lods
mov
insb
inc
call
aas
fdivs
add
add
add
cli
jmp
mov
cli
jmp
inc
mov
stos
shl
repnz
and
cwtl
call
in
cwtl
ljmp
adc
jo
imull
mov
out
add
pop
out
push
push
fadds
cli
lea
sbb
add
add
stos
adc
xor
fcompl
and
xchg
adc
int3
jns
add
add
add
sbb
addl
mov
ficoms
int
pusha
adc
lds
mov
add
aas
xchg
add
mov
mov
push
mov
push
pop
push
jge
test
jmp
out
mov
jmp
cld
fcoml
xchg
xchg
cld
jmp
add
stc
out
mov
jmp
cld
pushf
and
jg
cld
jmp
stc
out
mov
jmp
jl
out
xor
addr16
fiadds
not
imul
mov
jl
idiv
mov
jge
call
cmpsb
sub
in
insb
idiv
and
in
lock
incl
add
call
leave
xchg
cld
push
call
lcall
mov
jnp
cld
dec
add
out
movsl
mov
push
outsb
sti
out
scas
or
push
hlt
iret
sub
sbb
cmpsb
pop
ret
loope
add
xor
dec
cmp
mov
add
sbb
push
or
mov
addr16
jmp
lea
xchg
xor
mov
insl
add
out
pop
add
xor
ljmp
out
sbb
add
cmp
leave
addr16
inc
push
xchg
and
jmp
out
push
xchg
lods
cmp
jmp
decb
pop
add
in
add
lods
sbbl
add
cmp
mov
addr16
ljmp
gs
mov
or
daa
jae
cmpb
add
ret
mov
popf
add
lea
add
push
lea
jmp
std
lea
adc
xchg
in
jno
insl
std
add
gs
jmp
std
add
pop
add
or
int
std
dec
int
or
pop
xor
testb
add
add
sub
or
aaa
lods
add
mov
jbe
push
lret
push
push
xchg
imul
pop
jmp
inc
cli
insb
imul
rcrl
hlt
les
stc
jno
cmpsb
repnz
ds
xchg
in
hlt
les
adc
mov
inc
add
sub
sub
add
icebp
add
clc
adc
pop
mov
jmp
aam
push
clc
xor
aam
cmp
jl
or
cmp
shrb
aas
test
sti
adc
mov
or
fcoml
cmp
rolb
mov
add
jmp
ds
ret
lds
jmp
cmp
pushl
insb
adc
rolb
add
add
push
add
lods
inc
add
xchg
sub
inc
xchg
pop
add
arpl
push
mov
ret
mov
pop
jb
loopne
or
daa
add
sub
pop
leave
ret
cmpb
jae
subl
aas
inc
adc
jne
sub
pop
leave
loope
add
cwtl
push
or
pusha
jecxz
or
jb
subl
jne
sub
jmp
add
or
inc
or
add
cli
jmp
add
lods
loop
dec
aam
lea
in
push
popf
xor
push
mov
inc
pop
leave
mov
mov
jne
or
adc
inc
inc
cli
outsb
sub
andl
lock
inc
testb
mov
incb
push
inc
inc
cli
outsb
or
sub
xor
repnz
sbb
je
ja
or
pushf
ljmp
pop
inc
lock
pop
or
cli
pop
or
frstor
outsb
jmp
incl
sbb
inc
cli
test
xchg
stc
sti
sbb
mov
int3
stos
or
dec
jb
insb
outsl
in
out
or
sbb
cmp
add
shl
dec
outsl
in
dec
or
sbb
cmp
add
add
lock
adc
add
lret
sub
cli
dec
lock
adc
xchg
adc
imul
or
outsl
in
mov
or
loopne
clc
push
lock
mov
jmp
inc
adc
loop
jno
mov
or
push
jmp
in
mov
testl
clc
mov
aaa
inc
jmp
add
popa
jge
jle
or
out
cmpsl
add
stc
mov
divl
adc
push
mov
andl
popl
jmp
mov
dec
ret
adc
mov
xchg
add
inc
add
adc
add
pop
test
add
lcall
std
adc
pusha
int
sbb
je
mov
xchg
adc
incl
add
clc
out
fs
std
or
test
mov
cld
decb
cvtpi2ps
add
add
add
push
mov
cld
inc
push
jnp
mov
aam
mov
stc
jae
movsb
outsl
call
pushl
add
int3
aas
in
add
add
adcl
aas
inc
adc
jne
cli
test
cmp
ljmp
into
inc
inc
add
cli
out
jne
loop
pop
add
bnd
push
pop
inc
cmp
ljmp
loope
inc
cli
mov
call
cli
loop
jae
adc
inc
cmp
ljmp
rolb
jle
call
cli
sbbb
and
inc
add
pop
add
mov
add
scas
inc
jmp
iret
jmp
or
mov
lea
add
es
and
sbb
inc
div
or
inc
out
push
xchg
add
outsl
icebp
ljmp
fstl
fdivr
mov
ja
add
xor
xchg
add
sub
add
xor
imulb
test
adc
jl
loope
into
jge
sti
insb
outsl
jns
out
or
dec
jne
jne
into
call
add
and
jno
in
movsb
lea
lods
lea
push
xchg
incb
idiv
add
push
jmp
aas
test
xchg
in
fwait
sti
push
loope
rcr
pop
mov
dec
std
out
jb
jb
push
call
loop
js
ljmp
or
jecxz
or
jmp
add
stc
filds
xchg
cli
cmp
stos
in
fimuls
in
stc
pop
mov
push
jns
sbbl
sar
repz
and
or
addr16
add
inc
add
jne
loopne
sti
fsubr
mov
pop
pushl
fistpll
cld
out
or
int3
jae
add
pop
pushl
in
jae
stos
lret
add
pushf
add
into
add
mov
icebp
jle
xchg
cld
or
pop
add
inc
lcall
rcrb
push
jnp
pop
add
pushl
pusha
cltd
aas
and
call
push
fsubl
push
cli
inc
or
fstpl
sbb
jo
add
add
icebp
xor
or
add
fildl
jmp
sub
mov
fildl
add
scas
ret
sti
idiv
enter
dec
fdivrl
add
pop
cmp
std
addr16
add
fisttpl
mov
and
orb
add
adc
je
test
shl
push
add
fstpt
add
test
add
add
test
jl
filds
add
inc
add
addr16
add
inc
add
sbb
stos
jmp
add
add
mov
mov
clc
ja
mov
and
add
fistpl
add
jns
or
outsl
mov
ss
add
add
outsl
sti
add
adcb
jmp
ja
call
sarb
push
add
sti
lods
inc
bound
jmp
add
add
fucomp
mov
cli
add
scas
mov
add
lods
xor
jmp
testb
fs
mov
es
add
mov
jmp
mov
or
push
in
jge
xor
jns
adc
icebp
idivb
les
push
aas
sub
add
cmp
pop
inc
sub
fmull
incb
push
add
in
inc
inc
jmp
push
dec
add
lock
push
adc
fdiv
xor
add
add
inc
inc
add
jae
imul
je
pop
and
aad
add
push
cmp
jae
lret
pop
pop
add
fistl
push
mov
push
push
decl
add
or
jne
incl
add
out
imul
push
aam
enter
std
ljmp
xor
jmp
add
pop
call
sbb
mov
jae
test
arpl
push
movsb
jle
or
cmp
outsb
outsl
rorb
call
cmp
cmc
ljmp
xchg
hlt
je
push
test
add
inc
cmp
xor
cmc
je
add
xchg
push
je
adc
xchg
out
repz
add
xchg
or
imul
inc
mov
pop
jbe
cli
das
xor
outsl
add
lea
enter
add
icebp
add
outsb
std
lds
in
cli
add
add
adc
inc
cli
in
sti
pop
mov
add
stc
test
add
std
lds
in
sti
add
add
xchg
and
sub
or
test
add
sub
jge
in
sbb
jge
in
pop
ds
ljmp
sub
cli
push
jb
jp
xchg
repnz
in
lods
mov
int
popf
in
call
decb
add
jns
add
add
fcomi
call
adc
pop
js
out
or
sbb
rcrl
call
cmp
lahf
adc
add
out
mov
incb
cs
stc
jg
sub
out
cltd
and
es
jmp
mov
jmp
add
std
test
pcmpgtw
add
add
jp
rcr
jmp
jmp
add
addb
or
loope
push
push
mov
jmp
jne
leave
inc
add
lea
into
inc
sub
jmp
sub
rcrb
push
or
rclb
sub
or
incl
call
or
insb
punpckhbw
inc
add
insb
adc
fs
add
add
ds
sar
testb
pop
imul
jne
hlt
jae
int3
jae
call
popf
lds
fdivr
fldl
lea
add
inc
fwait
lock
loop
xor
mov
out
xor
ja
loop
sbb
cli
jb
adc
jb
xor
dec
icebp
dec
add
adc
jnp
sbb
inc
ja
stos
sub
adc
in
std
inc
cmp
cmpsb
or
ror
pop
add
pop
in
add
jnp
xchg
out
stc
or
cmp
add
ja
pop
adc
mov
icebp
xchg
ljmp
adc
inc
cli
jmp
movsl
fstpt
jmp
xor
add
jmp
lock
push
adc
jge
loope
dec
jo
cld
inc
jno
pop
push
sbb
cmc
fistpl
mov
icebp
add
cwtl
fisttpl
sub
adc
outsl
in
push
in
loope
mov
lahf
insb
lock
ja
push
sub
mov
stos
ljmp
jb
push
insb
and
dec
add
movsl
mov
popf
ljmp
inc
mov
scas
gs
insl
pop
ljmp
pop
ljmp
sar
hlt
inc
loope
je
ljmp
sbb
je
inc
pop
mov
mov
sub
add
mov
in
or
jae
pop
xor
stc
out
push
out
add
add
les
imul
or
scas
test
xchg
lret
or
xlat
jae
mov
imul
xlat
jae
mov
imul
int3
add
dec
add
arpl
clc
rcl
std
mov
icebp
std
jne
lret
test
xchg
or
adc
mov
jne
dec
call
jne
add
lret
adcb
cmp
out
movsb
jecxz
add
cli
xorl
add
sub
cmp
add
mov
out
push
fldl
jmp
into
pop
stos
loop
add
sub
inc
add
mov
jb
add
movb
test
push
cli
fnstsw
sti
call
in
je
add
jmp
mov
sti
jg
divb
xor
dec
inc
add
add
adc
ja
stos
ja,pn
loop
out
in
add
sbb
adc
jo
in
inc
std
adc
or
das
in
mov
in
icebp
pop
sub
fsubrp
pushf
out
clc
popf
cld
imul
popf
add
in
jl
cmp
add
pop
in
push
insb
out
lock
hlt
push
pop
out
adc
jo
in
cld
nop
jno
out
dec
xor
in
iret
jns
cmpb
gs
out
adc
pop
mov
ja
pop
jmp
add
outsl
add
out
or
scas
cmp
loop
jae
dec
push
call
loop
jno
jo
mov
cli
mov
add
add
out
add
andl
dec
or
dec
into
or
out
nop
out
rcll
cmp
popa
jo
shr
cmpsb
inc
jae
sahf
push
pop
add
stc
add
push
je
jo
in
mov
xor
je
push
scas
push
jmp
test
add
jmp
mov
add
mov
inc
hlt
push
add
sbb
clc
incl
rorb
inc
or
cmp
es
mov
xchg
cmp
out
jae
jecxz
incl
dec
out
jae
mov
mov
jae
cmp
lcall
jg
insb
out
inc
lock
std
jne
sarb
push
or
jne
mov
mov
add
scas
mov
hlt
cli
cmp
mov
mov
jmp
testl
add
jo
not
cli
jmp
add
cmc
jne
cli
in
pop
out
cmc
lods
add
mov
add
in
inc
inc
cli
ret
jecxz
add
pop
out
cmpsl
test
call
add
shrb
inc
cli
inc
add
in
pop
add
in
cmp
add
in
mov
mov
ljmp
in
add
cmpsl
jno
je
add
rcrl
or
dec
xor
inc
jmp
cmc
pop
loope
imul
jb
and
jle
loop
ret
dec
sub
push
sar
arpl
mov
addl
jmp
loop
cld
popf
rorl
add
mov
loopne
test
lods
shlb
sub
add
add
mov
fs
pop
testb
add
cmp
insb
jle
mov
inc
jmp
sub
loope
mov
inc
add
or
pop
sbb
inc
xor
inc
jmp
stc
insb
add
stc
add
cs
or
insb
push
push
loop
call
add
add
add
je
jmp
enter
push
jb
test
aad
loop
inc
imulb
into
or
jo
loopne
in
push
and
stc
add
jmp
pop
loop
add
add
jmp
push
add
add
dec
inc
add
pop
inc
inc
adc
xor
ljmp
imul
inc
inc
inc
add
and
jecxz
add
add
add
add
ljmp
out
out
std
lea
cld
push
cmp
fsts
call
xchg
jge
out
ret
push
mov
out
push
ds
ljmp
loope
xor
push
in
lds
arpl
add
push
in
shl
add
add
cli
jne
push
cli
in
pop
push
cwtl
lods
inc
add
xor
shrl
jecxz
push
out
bound
inc
inc
cli
jne
inc
cmp
pop
add
in
cmp
out
mov
jecxz
lods
jge
push
dec
out
add
daa
ljmp
lea
dec
mov
sahf
in
add
cli
inc
sbb
out
in
lods
fiadds
in
dec
popf
mov
cli
add
add
xchg
imul
fistpll
mov
in
rclb
roll
xchg
inc
test
xchg
add
sti
sub
inc
jmp
inc
out
sub
add
test
inc
cmp
imul
scas
fdivp
jbe
add
out
in
xor
jmp
outsb
repnz
data16
scas
sar
adc
popa
cmp
pop
insb
add
fidivs
sub
sahf
push
lea
add
inc
mov
push
inc
jmp
mov
repnz
mov
pop
data16
mov
or
incb
pop
ljmp
add
inc
add
add
ficomps
cmp
cmp
repnz
add
mov
aas
add
call
shll
add
jae
lods
cmp
call
lcall
adcl
push
insb
cmp
call
stos
dec
cld
push
jmp
or
add
aaa
loopne
push
cmp
ds
adc
pushl
lock
out
lods
out
mov
adc
inc
jecxz
cmp
inc
add
jnp
ds
mov
or
or
cmp
push
sti
loopne
lcall
mov
inc
cli
sbb
mov
insl
fwait
ljmp
and
add
dec
mov
loope
dec
sbb
pop
scas
inc
loop
cs
pop
or
clc
pop
lcall
ljmp
push
pushf
cmp
sub
stc
jo
loop
aas
adc
add
out
cmpb
jns
push
dec
mulb
push
cli
in
or
call
sub
sahf
insb
add
scas
inc
sub
fcoml
bound
mov
insb
in
push
add
loopne,pn
lds
inc
fistl
push
jno
sti
fildll
icebp
jmp
pop
jbe
mov
add
mov
xchg
xchg
add
das
std
push
loope
ja
inc
loope
inc
cmp
imul
test
bound
mov
ret
add
dec
cli
mov
loope
insl
jmp
adcb
je
mov
loop
push
push
pop
pop
jp
pop
int
in
stc
das
mov
imulb
sahf
lods
or
int
fsin
pusha
mov
jmp
inc
jmp
fnstenv
out
mov
push
sbb
inc
add
cmp
incl
ret
add
sub
jmp
mov
imul
add
call
lods
popf
popa
add
stos
xchg
add
inc
add
in
or
jbe
call
push
sarb
add
inc
inc
add
or
fstps
cld
decl
or
repz
add
aam
les
add
dec
cld
push
movsb
cmp
push
mov
sbb
sarl
daa
mov
mov
add
add
add
or
and
jo
mov
test
jne
icebp
jmp
inc
out
add
mov
or
adc
mov
loopne
test
adc
pop
out
add
clc
dec
cmc
mov
add
out
decb
add
in
push
stc
in
add
iret
cmp
add
rcll
add
mov
cld
adc
psubd
or
xchg
ljmp
shr
xchg
aaa
out
add
fisubrl
add
daa
pop
or
add
sti
fstl
mov
push
stc
fisubs
std
adc
fdivr
lret
add
mov
call
pop
cld
popf
cli
pusha
fnstsw
adc
sbb
cli
inc
sbb
out
or
pop
push
xlat
lods
push
out
sbb
inc
push
add
push
pop
xchg
fldl
hlt
add
mov
sbb
sti
sti
xchg
mov
mov
outsb
std
pop
xchg
into
inc
fnsave
push
add
add
loope
cs
insb
add
stc
add
insb
sar
push
out
incl
dec
cmc
imul
sub
repnz
push
add
stc
mov
jmp
add
scas
jl
repnz
stc
mov
jmp
add
mov
mov
sar
xchg
xchg
test
xlat
dec
data16
hlt
aam
aad
loope
add
push
add
mov
sbb
jecxz
cmpl
or
push
mov
cld
add
out
inc
bound
lea
ret
call
test
xlat
movl
lret
xor
addl
mov
imul
je
ret
nop
mov
mov
add
mov
add
xchg
rorb
cli
lds
test
sbb
sub
dec
cli
fisttpll
cmp
popf
inc
add
ljmp
outsl
not
popf
arpl
incb
aad
test
jecxz
add
xchg
aad
insl
push
outsb
add
popa
jecxz
dec
mov
inc
inc
cli
ret
jp
adc
cmp
mov
dec
adc
jp
incb
rcrl
scas
mov
fsubrl
dec
cli
add
clc
fcompl
fimull
shll
enter
inc
cmc
sbb
add
add
xlat
adc
fisubl
std
ljmp
aam
das
adc
mov
clc
popa
idivb
xchg
xor
add
dec
out
shll
or
add
dec
out
sbb
jg
sbb
xor
add
mov
mov
jbe
inc
xor
dec
test
jne
mov
sbb
xchg
pop
daa
insb
dec
add
fst
je
ret
mov
loope
cld
ss
ss
pop
ds
jbe
add
cmp
fwait
mov
fwait
add
leave
sub
test
loope
sar
xchg
adc
addl
push
pop
add
loop
mov
popf
push
sar
jmp
add
xchg
fscale
add
adc
lods
dec
lea
adc
idiv
inc
lods
std
push
mov
add
lods
std
call
adc
pop
or
mov
out
add
std
sbb
std
imull
jmp
xchg
mov
idiv
push
mov
leave
ret
push
mov
add
ret
mov
or
and
xchg
mov
push
cli
jp
or
or
xor
add
outsl
push
std
push
repnz
xor
in
push
std
aad
xlat
push
sub
jb
sbb
sti
mov
lods
jno
ljmp
out
call
add
jns
hlt
lea
je
dec
push
jo
je
aad
or
aad
enter
cmp
add
lret
mov
je
add
int3
ret
or
pop
in
xor
dec
in
ret
sti
jnp
mov
pop
fucomp
cltd
jle
and
loop
cmc
xchg
movsb
sub
add
aas
out
add
dec
add
jb
sbb
adc
pop
or
inc
cli
andl
mov
xor
jl
aad
jge
mov
adc
jmp
addr16
inc
iret
call
mov
push
add
mov
aas
call
push
sti
mov
aas
call
out
add
into
mov
addb
into
iret
je
mov
inc
test
int
and
inc
add
dec
decl
les
insl
addr16
jmp
sub
test
call
mov
mov
push
add
lods
imul
mov
xor
mov
dec
les
stc
add
or
sbb
je
fimuls
mov
add
add
adc
sahf
push
rclb
sbb
rorb
or
pop
hlt
cmpb
je
nop
adc
pop
cli
mov
das
movl
fstpt
mov
add
call
std
decl
mov
add
enter
in
ds
inc
inc
ljmp
rorb
mov
adc
es
push
cli
inc
or
inc
into
inc
mov
fildl
test
out
mov
iret
cmpsl
jle
jg
int3
dec
and
filds
decl
fildl
test
add
mov
fiadds
aas
push
add
cli
inc
stos
testb
cli
and
cli
fldl
add
lret
push
dec
int3
add
dec
pop
dec
rorb
add
daa
not
push
push
xlat
ret
pop
push
int3
sti
dec
inc
cmp
add
push
push
mov
mov
enter
xchg
push
repz
ret
and
push
mov
scas
mov
pop
repnz
pop
es
cmp
add
push
and
inc
fcomi
cmp
add
add
js
cmp
jg
rorb
inc
xor
jo
xor
sti
ret
add
or
mov
pop
stos
inc
cli
add
icebp
mov
popl
add
add
iret
inc
inc
jmp
adc
subl
push
repz
sahf
sub
insl
das
lret
jmp
mov
fcos
call
add
stc
xchg
lock
add
cli
and
stc
add
sub
lret
jmp
testb
fs
cld
mov
aaa
add
add
int
sub
fidivrs
call
stc
addl
add
leave
incl
mov
scas
addb
push
push
mov
inc
lock
mov
add
jb,pn
and
call
shll
cmpl
add
jmp
push
lea
push
push
jmp
inc
loopne
stc
add
adc
fadd
jb
pusha
cmp
add
add
push
ljmp
std
jne
mov
in
add
or
xlat
add
push
add
clc
add
lea
shlb
xchg
inc
cli
inc
roll
clc
cli
das
std
sbbb
test
mov
sar
out
jne
inc
cli
icebp
mov
mov
pop
enter
pop
das
sbb
in
into
incb
dec
inc
inc
cli
fistl
bound
inc
cli
mov
inc
cmp
pop
das
iret
test
popf
inc
add
add
inc
inc
cli
inc
mov
mov
movb
test
cli
add
test
cli
push
rol
ss
add
add
ret
sub
int3
lcall
subl
pop
clc
fcmovnu
into
into
int3
mov
lret
xor
popa
cmp
jl
into
scas
int3
popf
xor
sbb
sbb
enter
sbb
into
add
cld
sti
iret
hlt
push
loope
dec
push
data16
mov
in
inc
jl
cmpb
fwait
mov
add
ss
std
out
xor
add
lock
pop
mov
mov
out
ret
jmp
mov
imul
or
cld
ljmp
pop
jb
jns
cmp
std
test
stc
and
jg
add
mov
inc
ja
jns
inc
imul
les
fdivrl
xor
add
cmp
std
sbb
and
inc
fninit
or
negl
inc
in
rcr
or
mov
pop
add
ret
cltd
mov
add
cmp
mov
xor
clc
jmp
lea
mov
add
loopne
sbb
add
mov
inc
inc
lock
add
sub
push
sub
lea
mov
daa
inc
and
mov
hlt
adc
xor
add
dec
jae
pop
ja
mov
jne
dec
jl
mov
lock
mov
mov
add
inc
lods
out
cli
lcall
cli
mov
sti
jmp
sbb
pop
dec
and
cli
mov
jns
ret
addr16
mov
push
incl
fsubl
add
add
inc
bound
add
cli
fcmovnu
movsb
enter
mov
pop
add
faddl
call
sbbl
addr16
sti
add
adc
lcall
add
orl
jle
inc
adc
add
cli
lods
fidivl
xor
mov
add
adc
cmp
lret
inc
jnp
add
ds
or
cs
mov
add
rolb
fwait
repz
ret
jnp
xchg
movsl
add
xchg
insb
cmp
pop
mov
cmp
fldt
leave
fmul
into
adc
aaa
mov
mov
inc
mov
jmp
push
out
sub
inc
add
mov
lods
fdivrs
cli
add
mov
pop
cmp
sub
add
sbb
stc
add
and
sub
aam
ret
filds
push
push
dec
loopne
stc
ret
je
mov
or
ljmp
xchg
mov
mov
mov
xor
push
inc
add
jg
dec
fadds
add
ret
je
xor
call
sub
lods
xchg
cmp
push
add
ss
lock
add
je
inc
shlb
rclb
in
out
mov
inc
add
and
jmp
inc
int3
push
dec
loopne
les
add
or
test
or
add
dec
rolb
movsb
inc
mov
inc
add
jne
loopne
std
je
or
push
inc
mov
push
push
cmpl
je
add
push
xor
shr
inc
lret
std
ljmp
jb
mov
pop
push
out
shl
cli
or
incb
mov
int3
addr16
enter
je
add
enter
dec
or
mov
dec
les
add
mov
jl
sti
das
in
je
ljmp
lea
inc
int3
cli
xchg
in
cmp
je
aaa
ds
insl
jnp
je
add
insl
pop
stos
fimull
loopne
lds
out
insb
inc
rol
je
roll
je
ret
dec
jo
jb
je
add
push
mov
popf
movl
mov
arpl
add
jge
lods
subb
shrb
test
pop
movl
dec
movl
cmp
or
shrb
or
sbb
sbb
rorb
ljmp
xor
rclb
movb
in
push
std
incl
dec
inc
cli
add
ret
add
cld
mov
fdivr
add
cmpsb
mov
add
and
mov
add
imulb
add
xchg
inc
jne
xchg
test
mov
clc
data16
out
cmp
add
jmp
stc
mov
jae
mov
mov
adc
dec
mov
mov
test
inc
mov
push
add
in
dec
lock
shll
sarl
mov
sub
imulb
mov
test
add
ljmp
cwtl
aas
jmp
insb
leave
std
xor
imull
mov
jnp
add
mov
lds
cmp
add
stos
std
lea
std
in
ljmp
add
sar
fmull
call
adc
je
enter
leave
std
call
dec
leave
out
mov
mov
ret
je
aam
std
sub
jg
adc
adc
arpl
incb
ljmp
cli
sbb
jns
imul
add
fimull
pop
pop
les
cmp
ljmp
mov
mov
das
clc
ret
je
inc
push
insb
xchg
out
shl
sub
sti
and
pop
add
jl
je
adc
push
mov
inc
pop
and
push
and
xor
mov
cmp
addb
lds
ret
test
cmp
ret
add
mov
jle
xchg
mov
xor
stos
sub
pop
ret
fdivl
call
testl
add
cs
sub
or
push
jb
js
adc
inc
adc
add
lret
call
bound
xor
adc
out
roll
add
or
mov
scas
pusha
push
adc
xor
outsb
adc
xor
mov
addr16
cmp
or
scas
inc
sbb
cmp
jle
or
jno
outsb
jg
stc
add
jmp
testb
xor
movsb
sub
fcomip
jbe
clc
pusha
inc
mov
clc
jb
mov
rorl
add
lea
push
cld
add
cltd
mov
xorb
into
or
jmp
mov
les
popa
adc
push
test
add
rolb
cmp
std
add
adc
les
test
inc
add
add
ljmp
clc
lea
lds
aaa
in
jmp
ljmp
les
cmp
incw
add
nopl
call
icebp
idiv
dec
jp
stc
jle
std
mov
cmp
mov
add
insl
cmp
out
mov
mov
mov
icebp
mov
sub
inc
hlt
inc
or
shlb
stos
push
jmp
push
incb
xchg
xor
xchg
mov
std
incl
add
stos
inc
jae
mov
out
daa
sub
cs
add
and
adc
pop
ss
mov
ret
push
mov
je
push
out
popf
js
decb
call
rolb
shlb
jmp
lods
std
test
pop
xor
in
mov
dec
mov
cmp
aas
cmc
sub
add
mov
inc
mov
inc
xabort
scas
lea
mov
cmp
mov
in
mov
testb
mov
add
cmp
lods
pop
xor
mov
lock
leave
sub
add
jb
add
adcl
jmp
add
mov
add
stc
add
push
cmp
adc
add
push
jecxz
push
popa
mov
lods
sub
stc
add
xor
add
adc
xlat
mov
pusha
inc
mov
add
repnz
lods
data16
mov
jmp
cmp
add
fdivs
or
push
incl
cmp
inc
cld
fdivr
adc
add
ja
call
ljmp
or
cld
pop
jmp
adc
pop
out
pop
call
pop
out
adc
in
ljmp
imul
dec
jns
mov
add
cmpl
jae
dec
out
pop
call
mov
cld
jmp
sbb
add
or
inc
jg
call
jmp
pusha
testb
add
adc
jne
in
add
push
cli
lds
add
push
sub
cli
stos
jg
push
cmpsb
xor
push
fidivs
or
getsec
adc
stos
sub
shrb
mov
add
sysret
iret
or
ljmp
mov
add
es
add
add
stos
jg
out
mov
sbb
call
add
outsl
fsubrs
add
lea
lods
arpl
es
add
sbb
les
mov
inc
ss
sub
sub
xchg
mov
jge
call
add
add
add
enter
adc
loop
add
add
add
jg
add
or
xor
lret
addl
add
add
test
mov
daa
popf
or
daa
xchg
mov
arpl
xor
mov
scas
aam
add
cmp
orl
adc
pushl
clc
inc
iret
mov
inc
popa
cmp
push
xchg
push
pushl
push
add
pop
push
add
add
add
call
pushf
movb
out
and
pushl
inc
std
je
hlt
fsubrl
and
out
mov
pusha
mov
mov
mov
lret
adc
mov
scas
lret
call
sub
decb
outsl
loopne
cmp
add
jecxz
add
or
push
add
ljmp
add
in
pop
add
add
leave
shll
ljmp
outsb
std
or
cmpl
mov
out
jp
std
pop
sub
add
outsb
sub
sahf
decl
nop
sar
str
add
cs
adc
pop
mov
adc
jo
jl
adc
add
push
sbb
jl
cmp
or
add
mov
cwtl
test
mov
push
mov
int3
mov
add
push
cli
fwait
add
cli
push
aaa
or
fmuls
sub
mov
stos
lcall
jecxz
or
jb
leave
cmp
mov
arpl
mov
add
push
aas
in
stos
cmp
hlt
lret
or
jae
and
add
pushf
cs
mov
or
pop
pop
pop
xor
and
popfw
call
or
lds
pop
ret
in
jno
add
mov
inc
push
mov
mov
add
push
fs
repnz
movsl
mov
push
mov
aad
adc
add
push
pushf
dec
sub
rol
push
and
icebp
add
dec
and
push
lods
and
mov
cmp
xor
jmp
mov
jo
movsl
scas
sub
repnz
add
mov
in
jnp
call
test
in
jnp
inc
mov
add
gs
and
add
lret
mov
xchg
adc
cmp
lea
inc
push
push
sub
out
xchg
scas
repnz
push
mov
jl
stc
cmp
push
movsb
lcall
je
push
or
cmp
std
jne
pop
sub
dec
ja
jne
pop
hlt
addr16
jbe
shrb
mov
sbb
dec
xchg
add
add
add
pop
je
jnp
or
cmc
fisttpl
cmp
add
mov
lds
add
ljmp
adc
jne
sub
add
pop
leave
adc
add
mov
sub
enter
ss
gs
push
addb
or
jne
jns
or
lds
pop
sbb
popf
sub
fs
add
mov
cmc
adc
jmp
stos
dec
pop
xchg
mov
aaa
xorb
int3
and
lds
das
adc
mov
mov
subl
das
mov
je
inc
lods
pusha
xchg
inc
mov
out
or
and
adc
movsb
add
aaa
cld
testl
ret
fimull
add
or
cmp
add
fldcw
add
int
mov
lds
out
xor
test
cld
jnp
int3
pop
add
in
in
pop
ds
lea
int
icebp
stos
ja
jbe
jo
jne
stc
push
clc
lods
fisubrl
in
aam
xchg
aaa
cmp
mov
les
xor
jmp
add
ja
call
test
jns
scas
orb
add
lods
jnp
pushf
daa
outsb
scas
pop
adc
popa
imul
repnz
je
popa
cmp
mov
jp
aad
in
lcall
stc
stos
je
xchg
xchg
test
adc
mov
sbb
adc
cld
jge
je
push
stos
pop
add
movsl
insb
je
push
and
inc
lods
insb
pop
xor
clc
mov
test
mov
je
jno
incb
hlt
ja
rclb
push
or
jne
nop
adc
adc
sub
in
rclb
cmp
and
cmpl
jne
clc
ja
and
pop
add
pop
add
add
stc
add
out
test
je
js
push
jbe
adc
in
pop
call
sub
sbb
jne
inc
in
repz
call
adc
or
repz
aaa
or
add
cmp
push
jbe
adc
adc
or
mov
adc
les
jne
mov
hlt
and
ljmp
pop
pop
add
add
ss
call
sbb
add
cli
mov
inc
ficompl
pop
call
adc
fwait
jbe
xchg
fisubrl
test
inc
in
loope
mov
rcr
fwait
add
and
lcall
pop
mov
in
add
or
fwait
lcall
lds
inc
xor
fistps
divb
cmp
jmp
shrl
mov
push
test
bound
stos
cmp
frstor
or
aam
xor
call
fmul
das
mov
ss
xchg
fwait
sti
lods
gs
out
fldt
xchg
test
sub
add
test
add
lret
aad
dec
mov
xorl
jl
mov
or
in
lcall
aaa
add
scas
incb
push
push
mov
mov
mov
push
shl
repnz
call
cmp
shl
test
test
movsl
mov
shl
xor
xchg
std
out
add
ret
test
loop
xor
jmp
stc
cmpsl
je
jno
xor
stc
sti
mov
jne
daa
add
inc
inc
add
inc
inc
add
pop
call
pop
les
cld
in
or
push
or
inc
bound
jne
mov
rol
std
jne
daa
add
mov
add
fsubrl
or
add
dec
mov
pusha
shl
and
movb
pushl
mov
movb
pop
mov
add
jecxz
out
mov
cmpl
pop
mov
inc
cli
cmp
xchg
mov
ret
mov
mov
cltd
and
sti
jae
sbb
cmpb
sub
jg
bound
or
dec
je
add
sbb
les
fcmovu
cmpl
dec
lret
mov
add
cli
popf
ret
inc
add
das
or
jecxz
ds
mov
jne
xchg
sti
fwait
add
dec
mov
add
cli
adcb
aaa
xor
add
add
ss
push
add
add
add
mov
cltd
cld
mov
call
add
add
and
add
dec
xor
cld
adc
jp
enter
jne
fisubrl
fsts
jb
sti
jl
inc
jp
call
inc
jp
call
mov
subl
xchg
loope
out
idivb
xchg
push
rcr
xchg
inc
add
jno
add
and
xor
inc
imul
stc
std
inc
dec
inc
pop
xor
add
pushf
repnz
andb
adc
xchg
push
cmpb
inc
add
or
pop
cmpsl
add
jmp
hlt
js
test
cmc
orb
xchg
gs
cmc
xorb
add
sti
nop
gs
adc
pop
cmp
dec
insb
add
cmp
gs
mov
mov
inc
jnp
lea
cmp
xor
and
psubsb
std
incl
inc
fcoml
inc
loopne
inc
in
adc
mov
or
jne
orb
lcall
inc
aam
aad
pop
rol
inc
adc
add
adc
add
add
push
add
add
fidivs
inc
jecxz
mov
call
mov
rcrl
add
aaa
mov
xchg
lods
add
mov
xor
sbbl
test
in
rcl
movsl
incl
add
cmpsb
incl
mov
jl
lods
stc
xorl
add
jns
sahf
cld
xor
add
inc
lods
test
pusha
xor
lcall
cmpsl
rcrl
xlat
icebp
inc
add
inc
idiv
std
cld
sbb
addr16
sub
mov
icebp
and
cli
lods
sbb
lds
sub
fld1
add
hlt
or
fldcw
lea
test
add
jge
xor
lds
cwtl
lahf
mov
mov
jnp
inc
jmp
pop
mov
cmc
cs
inc
test
or
shrl
mov
mov
cmp
test
sbb
test
pop
aaa
add
jmp
add
jne
cmp
pop
push
add
jmp
or
clc
mov
out
call
jmp
mov
scas
mov
hlt
jbe
xchg
addr16
inc
add
adc
out
inc
mov
test
stc
add
fs
dec
pop
fcompl
push
mulb
cmc
into
push
xchg
or
test
add
add
lods
repz
imul
orps
call
sbb
inc
clc
adc
inc
cld
add
add
cmpsb
hlt
out
xor
insb
decb
push
test
call
cwtl
lea
sbb
inc
clc
sbbl
jmp
out
in
std
subl
je
pop
add
add
std
push
je
inc
and
ljmp
add
into
movsl
cmc
loopne
out
popa
movsl
mov
lods
add
cli
jle
sub
xchg
cmp
call
ljmp
mov
add
pop
push
cmpsb
je
xor
xchg
movsl
stos
jne
rorb
js
jmp
icebp
xchg
incb
add
movsl
lcall
xor
stos
imulb
or
dec
pushl
aam
pop
cli
adcl
push
inc
add
lods
aad
add
or
aas
fiadds
add
sub
fucomp
inc
movsl
int3
or
cwtl
mov
int3
stos
cld
lods
dec
sarb
sub
stc
add
push
sbb
jns
out
lcall
sti
add
stos
cli
sbb
fsubrs
arpl
add
aas
xor
add
imul
and
ret
shl
popl
popf
je
popa
stos
pop
push
xor
and
pop
push
push
mov
cmp
ljmp
add
or
dec
sahf
adc
call
loop
sbb
push
mov
repz
ljmp
aam
dec
data16
mov
sahf
push
fnsave
and
jmp
mov
dec
in
cltd
sahf
sbb
adc
lcall
jp
pop
pushf
aas
cmpb
push
add
mov
divl
pushl
jns
pop
adc
cmp
add
repz
add
je
stos
mov
lea
push
dec
push
addr16
mov
jbe
in
add
or
push
incl
cmp
incl
je
stos
mov
mov
push
dec
in
push
cmp
dec
pop
and
data16
add
bound
or
std
pop
call
add
cli
sbbl
jmp
loop
mov
jo
decb
test
mov
jmp
mov
std
fstl
rorb
je
jne
push
lds
shr
aaa
mov
pop
and
movsl
xchg
ret
adc
adc
xchg
pusha
lea
xor
addr16
add
cli
incb
add
xchg
xor
out
stos
in
fisubl
incb
idiv
cmpsb
add
scas
fldl
mov
sub
inc
mov
jecxz,pn
scas
or
push
sbb
cmc
sub
add
pusha
xchg
popa
sub
fwait
push
adc
lods
outsl
mov
cli
test
sub
cltd
sbb
xchg
add
add
inc
jmp
add
lcall
inc
sub
push
pop
push
das
or
gs
fsubs
movsl
stos
mov
and
in
call
and
add
sub
subl
je
popa
dec
pop
out
lea
xlat
inc
sub
cltd
je
mov
add
adc
shl
ljmp
or
jmp
mov
imul
lods
sbb
pop
lcall
cmp
sbb
lcall
mov
int3
roll
add
ret
add
pop
call
lret
push
cld
repnz
call
add
mov
add
inc
inc
add
ss
add
movsl
sub
std
or
jns
mov
add
add
mov
shll
clc
pop
incb
call
sti
mov
ljmp
movsl
loopne
add
xchg
mov
sbb
std
jne
xor
lahf
out
inc
lahf
je
xor
push
iret
int3
shl
aaa
mov
enter
sub
fwait
push
popf
jae
sahf
addr16
inc
add
cmpsl
popf
incb
xchg
stos
mov
popf
enter
push
jno
add
or
pop
or
popf
cmp
lds
cld
push
adc
cli
outsb
pop
or
jle
cld
popf
nop
or
xor
sahf
incb
add
imul
das
add
pop
sub
sub
lahf
out
inc
sahf
int
inc
mov
inc
jmp
popf
inc
xchg
and
sbb
lods
ret
xchg
pop
sar
pushf
mov
andl
add
fisttpl
loope
aaa
cmp
popf
jb
inc
sub
cwtl
lds
dec
or
lods
lret
add
mov
test
push
cmp
sub
adc
jmp
push
outsl
xchg
dec
outsb
in
hlt
dec
in
call
inc
ret
cmp
dec
xor
or
and
jmp
inc
mov
stc
sub
cs
or
xchg
add
mov
call
xlat
jl
sub
movsl
mov
call
jae
add
lods
flds
xchg
or
xchg
xor
lods
test
sub
in
call
xchg
add
imul
mov
call
mov
jne
push
pop
adc
or
dec
xchg
dec
decl
dec
decl
call
call
add
imul
lret
call
mov
mov
add
adc
std
call
sub
pop
mov
jne
js
or
xchg
push
incl
enter
push
mov
jns
or
dec
pop
inc
add
je
loopne
inc
adc
push
call
rep
jae
jecxz
jae
imul
pop
cli
jp
enter
push
jno
xchg
xchg
sti
sub
je
test
inc
jbe
fsts
add
pop
add
shl
aas
inc
cli
jp
fstps
sahf
add
cmp
push
push
jmp
ret
and
clc
and
or
or
sub
decb
rcrl
cmc
mov
je
inc
out
outsl
cmpsb
stos
imul
cltd
decb
stos
std
xor
sti
or
mov
loopne
daa
insb
xchg
adc
add
daa
push
fwait
xchg
xor
xchg
xchg
xor
lcall
xchg
jmp
add
fimull
test
add
xchg
icebp
ret
test
daa
push
lcall
jmp
mov
std
sbb
stos
pop
adc
cltd
aad
das
cltd
in
sbb
add
mov
xchg
mov
hlt
pop
add
in
cld
out
call
les
jmp
mov
loopne
jmp
mov
push
add
xchg
xchg
je
pop
add
sub
stc
jnp
inc
jae
clc
push
or
ss
cld
cs
mov
pushf
lea
push
std
add
xlat
add
in
xchg
je
add
cwtl
dec
xchg
stc
push
add
in
nop
cld
imul
jmp
jno
jmp
dec
cwtl
mov
aad
add
fwait
push
inc
mov
xlat
jne
push
jns
stos
repz
pusha
or
xchg
jmp
fsubrl
mov
aaa
push
ljmp
in
incl
add
insb
std
or
add
push
or
or
inc
loop
in
add
call
pop
pop
push
or
std
jne
pop
xchg
pop
fdivrl
jne
popa
stc
dec
cli
mov
mov
mov
aad
sub
sbb
pop
int3
roll
das
mov
xor
lcall
cmc
stos
inc
cmp
sub
xchg
sub
inc
mov
cli
ds
bound
lret
or
sbb
dec
xlat
push
inc
xlat
xchg
je
inc
jle
xor
mov
out
mov
xchg
call
pop
add
popf
movsl
mov
cli
add
xchg
data16
rcl
pusha
nop
aad
repz
xchg
ret
add
jl
cmpb
push
shrl
xor
sbb
xchg
es
adcb
popl
or
sbb
xchg
out
cld
push
aaa
insl
pop
xchg
out
nop
push
adc
pushf
cmpsb
xor
das
sar
xchg
mov
mov
xchg
xor
sub
sbb
inc
mov
sub
xchg
lds
add
inc
add
leave
je
add
mov
cmpsb
nop
ss
vpcomud
and
or
sub
ljmp
mov
je
push
pop
xchg
xchg
mov
adc
js
outsb
je
xchg
or
xor
push
xor
add
and
jmp
cmp
ds
cld
out
in
jo
add
nop
mov
call
iret
call
inc
add
sub
add
std
mov
fiadds
std
or
jno
add
push
inc
add
call
decl
jno
icebp
in
ja
cld
rol
incl
add
cld
add
pop
call
xor
rolb
push
fimuls
push
cmp
push
mov
pop
call
fcmove
sti
mov
shlb
inc
and
addr16
pusha
inc
add
fwait
pop
rorb
xchg
incb
fimuls
and
popf
mov
inc
cli
mov
sti
out
inc
xchg
mov
hlt
xchg
scas
scas
ret
imul
add
test
int3
push
sysexit
sbb
cli
jb
addr16
ds
inc
cli
sbb
or
or
push
loop
inc
inc
cli
inc
fnstenv
adc
call
andl
cli
add
xor
inc
test
adc
add
iret
mov
nop
addb
push
movsb
inc
cli
sbb
dec
cmp
daa
add
add
in
xchg
int3
jge
xchg
jbe
lds
push
pop
sub
cli
sbb
dec
cmp
daa
add
add
xchg
xchg
jge
pushf
js
jge
push
cmp
std
inc
jns
jge
out
rolb
fwait
sahf
xchg
out
inc
aaa
test
dec
xchg
nop
inc
sbb
pushf
xchg
xor
adc
lahf
mov
jge
je
jno
push
push
add
push
adc
in
out
das
mov
out
add
mov
fiadds
mov
into
in
out
or
pushf
out
in
mov
scas
add
mov
pop
mov
setle
adc
mov
je
outsb
mov
gs
push
add
test
sbb
jmp
add
lahf
fdivrp
decl
jb
xchg
outsb
add
jae
rolb
out
mov
and
jne
outsb
out
jns
je
sbb
data16
jne
insl
mov
je
ret
push
mov
ljmp
mov
push
inc
cld
sub
cmpb
icebp
aas
push
in
jl
add
xchg
add
push
call
push
in
cli
inc
push
sub
add
sbb
pushl
fimull
sbb
lcall
xchg
lcall
faddl
add
lahf
cmpb
inc
decl
lcall
ret
sub
inc
add
add
add
mov
call
add
and
jg
mov
cli
popf
popf
mov
cli
add
mov
cld
push
out
rolb
dec
popl
sub
mov
push
cmpsl
add
sbb
sbb
dec
mov
sub
lods
sbb
add
inc
sbbb
add
inc
jmp
fimull
mov
stc
cmp
int3
sbb
pushf
cs
xor
sbb
xor
cltd
dec
mov
sahf
push
sbb
dec
cmp
nop
push
add
xor
jbe
xchg
adc
push
es
mov
mov
mov
dec
ds
out
fiadds
cmp
xor
mov
xchg
sbb
adc
test
mov
loop
je
sahf
and
je
xchg
adc
rcll
lock
pop
outsl
mov
mov
jnp
testl
std
out
into
test
pusha
xor
add
add
add
add
push
or
add
aas
mov
push
inc
mov
push
or
outsl
movsl
std
jne
push
dec
push
imul
out
movsl
ljmp
dec
lock
decl
cwtl
push
jmp
js
clc
sti
push
call
js
cld
mov
pop
call
lcall
sbbl
add
cmp
sub
push
js
inc
add
ja
cli
jle
addr16
inc
add
fiadds
cli
push
push
or
adc
gs
push
cld
pop
test
out
dec
mov
inc
flds
add
inc
sbb
cli
ss
cmpsl
mov
mov
cmpsl
mov
push
je
notb
push
adcl
add
outsl
lcallw
addr16
add
add
loope
out
or
icebp
lods
adc
cwtl
inc
inc
cli
inc
or
cli
insl
jnp
mov
call
add
add
cmp
jl
inc
or
mov
mov
cmp
dec
in
out
push
ret
dec
adc
insb
xor
xor
cmpl
sbb
fwait
xchg
lock
inc
rcll
add
add
lock
insl
sbb
or
lods
mov
mov
pop
pop
call
enter
add
clc
cmp
aas
add
inc
movsl
stc
add
jmp
stc
add
pop
cmp
dec
adc
in
jb
mov
xor
push
ret
jae
je
clc
jmp
add
jne
jb
mov
sti
push
and
mov
jo
pop
or
lcall
cmp
add
decb
roll
add
jge
jl
test
pop
addb
addl
and
push
push
inc
clc
add
xchg
jmp
std
inc
cld
inc
sbb
push
and
push
add
add
data16
jne
and
push
sahf
lret
push
or
daa
push
dec
push
mov
std
inc
clc
pop
and
push
aaa
pushl
mov
int3
adc
and
add
mov
lcall
inc
jae
in
adc
call
adc
clc
add
add
jae
mov
lods
adc
call
mov
sbb
add
add
push
add
cli
imul
mov
jmp
or
dec
sar
ds
in
fldt
or
jg
dec
lret
dec
gs
jns
data16
dec
fbstp
call
push
jno
addb
or
out
fwait
xchg
jno
mov
sub
xchg
xorb
xor
pop
in
sub
cmpsb
sub
mov
add
jle
jmp
lcall
inc
in
jg
push
jmp
add
adc
idivb
call
mov
movsl
xchg
inc
in
cmp
jmp
xchg
jl
js
dec
jg
xchg
jl
into
andb
in
fstpt
aas
orb
insb
inc
adc
xorb
add
cli
insb
jnp
adc
outsl
inc
push
test
pop
std
jg
xorb
idivb
call
jae
jg
gs
cmp
je
out
enter
inc
stc
out
jg
cwtl
mov
ljmp
or
sub
jo
sub
cli
or
imul
das
xchg
addr16
jmp
jbe
or
add
cltd
add
sub
ljmp
aam
mov
enter
add
fs
ljmp
stc
xchg
inc
xor
call
or
std
jne
xchg
aam
in
cs
std
jne
lcall
pop
mov
pushl
mov
std
jne
add
jo
fs
jne
mov
mov
cmp
nop
push
mov
pop
add
das
mov
loopne
cli
push
sbb
lcall
jp
adcl
lcall
mov
jnp
je
xor
cli
cs
add
add
lods
xchg
adc
cmp
addr16
ss
add
incb
lcall
outsl
add
dec
jg
sahf
push
sbb
and
test
xlat
dec
test
lds
sub
push
push
rol
cmp
cli
push
pushf
jne
insb
add
cmp
jmp
push
dec
inc
mov
or
add
sub
and
sarl
sbb
push
xor
add
xchg
inc
in
sub
add
mov
or
add
and
sub
jl
or
and
dec
lods
sarl
add
subl
xchg
xchg
ss
orl
sahf
stc
icebp
insb
movsb
and
add
inc
cld
cmpl
add
inc
and
jmp
add
add
add
add
cmpb
and
cwtl
andb
out
add
repnz
add
jmp
stc
jnp
fsts
push
js
mov
imul
cmp
push
fidivrs
test
xor
roll
inc
mov
repz
jnp
mov
orb
icebp
cmpsb
jp
pusha
adcb
add
js
call
pop
les
js
jmp
js
hlt
std
insb
in
mov
shll
push
daa
jnp
adc
mov
xchg
jne
out
rclb
xchg
decl
xchg
dec
aas
add
mov
std
jne
out
mov
faddl
mov
cmpsl
jae
call
xchg
and
add
push
lret
add
decl
or
add
imul
pop
int3
and
test
adc
push
outsb
cmp
add
mov
cld
std
fdivl
call
lret
idiv
rolb
inc
mov
xor
call
jae
push
idiv
sbb
cli
pop
xchg
add
pop
mov
jbe
int
pop
test
push
dec
pop
jg
mov
push
add
mov
decl
roll
pop
call
mov
call
cmp
pop
cli
jg
add
mov
add
cmpb
or
mov
shll
scas
and
jns
testb
std
insb
mov
or
sub
cmp
lock
sub
sub
in
add
lret
cmc
mov
jo
jg
repnz
fnstsw
mov
ja
js
xchg
js
jg
insl
mov
xchg
insl
xor
mov
mov
xchg
imulb
je
pop
push
test
mov
ja
js
addb
xor
outsb
lds
aam
js
loope
inc
cld
dec
movsl
jbe
push
movsl
jbe
push
aad
ss
shl
mov
lock
adc
inc
or
ret
push
mov
incl
cmp
or
fadd
add
inc
into
cmpb
pop
mov
jbe
divl
add
incb
pop
cmc
aas
inc
mov
loopne
adc
fists
or
decb
sbb
add
mov
inc
in
imul
bound
pushl
jmp
dec
mov
or
dec
push
arpl
jae
jmp
imul
ljmp
or
mov
inc
dec
std
lcall
les
add
ljmp
add
inc
std
jne
ljmp
mov
call
xor
push
outsb
push
call
or
inc
inc
cli
imul
cli
imul
push
idivl
mov
inc
cli
out
pop
push
adc
add
cli
jmp
je
ret
pop
lcall
aaa
testl
add
mov
jns
pusha
push
inc
addb
xor
testl
aad
sti
jns
pop
sub
jbe
add
cli
ljmp
cmc
filds
cli
imul
add
xchg
mov
add
or
sahf
out
cli
or
add
add
mov
sub
add
jmp
add
add
mov
fldl
jns
inc
sub
jle
out
cli
in
mov
add
sbb
sub
in
cmpl
gs
add
sub
fucomi
cmc
lds
out
call
icebp
pop
push
add
add
incl
repz
add
add
add
add
push
icebp
inc
sub
jae
xchg
pop
adc
jmp
lret
jmp
add
fdivp
pop
pop
mov
mov
icebp
nop
clc
out
or
call
xchg
js
inc
jmp
push
verw
in
inc
push
insb
mov
jmp
push
les
cmpsl
jae
fimuls
pop
sub
fiadds
add
pop
lea
push
std
jne
out
jae
dec
adc
and
or
pop
jno
inc
jae
push
pop
jmp
out
adc
xchg
arpl
out
call
push
fisttpl
jne
popa
imul
std
adc
call
push
add
dec
out
jae
sti
xor
cld
out
je
int3
jne
incl
out
xchg
out
std
call
std
jne
in
jae
cli
inc
int
popf
inc
js
mov
test
mov
je
mov
add
cli
stos
out
jmp
jns
sub
push
loopne
push
mov
jns
outsb
in
call
push
sub
js
cli
negl
pop
ja
add
push
xor
pop
adc
sar
sbb
mov
incl
outsl
test
dec
aad
push
incl
inc
sub
add
sbb
pop
or
add
add
inc
ds
call
mov
cli
fsubrp
in
test
call
jo
jg
outsl
fs
shll
js
jo
lock
or
clc
jecxz
add
lret
add
add
fwait
rol
jb
pop
and
lods
js
aam
push
outsb
xchg
jno
aad
in
js
jnp
push
add
sub
js
add
call
js
jo
cmp
call
cmc
inc
jge
stc
and
fdivl
pushf
inc
ja
into
or
jo
popa
mov
pusha
add
jnp
imulb
mov
inc
jmp
in
aam
push
inc
jmp
int
test
fadd
scas
ss
xchg
ret
push
movsl
cmp
add
jo
movsl
inc
outsl
jo
divb
test
inc
xor
inc
jmp
insl
outsl
fsubl
push
inc
jmp
hlt
testl
testl
add
pushl
xchg
inc
idiv
mov
fdivrp
incl
call
movsb
mov
notl
xlat
inc
test
std
mov
fdivrp
pushl
call
les
jne
fstpt
mov
fdivrp
inc
je
call
les
jne
fidivrl
add
adc
std
mov
cli
add
mov
outsl
je
sarb
jmp
pop
je
xchg
jne
movsl
cltd
imul
push
imul
inc
insb
incb
mov
mov
mov
bound
mov
notl
jne
push
jg
sti
sbb
cli
mov
pop
cli
adc
imul
add
je
mov
pushf
add
jae
pop
cld
ss
outsl
and
add
sbb
into
andb
leave
insl
jnp
shlb
loope
cli
stc
sub
stc
cmp
or
insl
pop
adc
pop
add
stc
test
stc
cmp
jl
test
je
lods
je
jo
out
insl
insl
adc
add
cmp
stc
test
adc
roll
mov
xor
sub
icebp
inc
test
pop
xchg
je
cld
inc
sarl
add
out
cmc
pop
decl
fdivrl
pushf
insl
imul
inc
push
dec
imul
inc
push
dec
cmp
mov
es
or
xchg
mov
je
add
stos
cmp
inc
mov
and
mov
call
mov
jl
jge
lock
xchg
hlt
shll
das
test
pop
mov
dec
xor
mov
stc
mov
cwtl
adc
add
mov
pop
add
add
jae
jnp
inc
inc
add
jecxz
out
fildl
add
adc
jmp
ljmp
mov
incl
add
imul
jae
test
mov
sub
dec
inc
arpl
cld
push
arpl
add
ljmp
add
pop
or
inc
add
cmp
pop
mov
call
loop
adc
mov
mov
neg
or
add
sub
dec
mov
adc
ret
adcb
test
sti
jno
vdivpd
fwait
mov
jb
mov
push
add
sahf
ljmp
out
incb
dec
pop
aam
inc
jo
mov
sbb
mov
mov
ret
fstpl
out
mov
incb
add
jae
andl
add
jno
js
push
fimuls
cld
push
in
mov
imul
pop
sahf
imul
jno
imul
jo
add
or
cmp
call
and
jo
imul
movb
je
lahf
inc
stc
add
jge
subl
push
idiv
pop
sub
cli
add
inc
add
ljmp
cmp
call
lea
jmp
stc
fdivrp
sar
ja
xor
jb
cltd
push
mull
in
out
repnz
loop
hlt
add
jle
add
mov
addr16
add
push
sub
mov
and
sbb
test
gs
mov
push
jmp
in
je
mov
inc
mov
jl
add
out
std
decl
add
fildl
out
mov
jae
stos
pop
inc
jmp
std
push
dec
cmp
mov
lock
incl
add
push
call
dec
jle
mul
xlat
mov
arpl
dec
bound
pushl
xchg
insb
push
call
or
mull
inc
inc
xchg
mov
lods
std
ljmp
imul
mov
jecxz
pushl
lock
xchg
cli
adc
cmpb
xor
xor
and
add
push
add
and
add
outsb
cmc
mov
call
in
pop
neg
pop
outsb
je
adc
mov
movd
mov
pushf
insl
lods
sub
movsl
push
insb
mov
inc
insb
xchg
rcll
call
test
insb
je
push
fnstcw
insl
scas
insb
je
xchg
mov
gs
push
lock
lret
xchg
insl
inc
mov
jne
xchg
loope
gs
data16
insl
and
adc
sbb
gs
outsb
pop
insl
adc
xchg
pop
add
inc
pop
cmp
cmp
jne
gs
xor
mov
int3
pop
rol
or
insl
mov
std
divb
add
inc
icebp
add
jns
andl
add
and
loopne
mov
mov
incl
mov
cmp
cmp
xchg
fsubl
xchg
dec
std
loopnew
call
clc
add
imul
data16
mov
pop
push
sub
add
sub
jmp
mov
imul
icebp
insb
hlt
notb
mov
mov
incl
add
mov
flds
adc
and
sti
imulb
arpl
mov
or
xor
jo
lods
cs
dec
add
sti
add
lock
lods
push
push
call
pop
enter
or
add
add
push
aad
pop
and
push
or
push
stc
or
test
out
jae
lods
push
cli
call
add
jge
call
sar
call
aas
cmpsl
sub
mov
dec
mov
fiadds
push
xchg
mov
xchg
sti
testl
adc
scas
xlat
test
out
push
pop
sbb
popf
jno
pop
movl
decl
testb
je
test
add
xor
fisubrl
nop
insl
fidivrl
dec
lds
or
sarl
out
lret
imul
lods
add
pop
jno
int
lock
shlb
mov
jecxz
or
cli
jae
inc
cmp
ret
xchg
add
and
test
ja
xor
insb
mov
add
cmp
sbb
push
mov
inc
mov
inc
bound
imul
call
pop
add
pop
add
mov
mov
cmc
push
cmp
bound
imul
and
push
int3
popa
adc
push
hlt
popa
add
push
add
movsb
popa
jnp
insl
add
xor
cltd
jecxz
adc
push
push
insl
ret
add
je
pop
mov
fmuls
rcr
jmp
shlb
sbb
in
add
rcrb
imul
cwtl
rcrl
aam
insb
mov
aam
pusha
mov
push
ds
call
add
add
movsb
cmp
bound
test
dec
push
decb
push
stos
aas
add
in
std
mov
aam
sti
nop
notrack
std
call
movsb
xchg
loop
inc
call
std
out
call
js
movsb
call
std
ljmp
notrack
clc
jp
sti
pushl
cld
mov
rorl
and
cli
push
ds
lcall
pop
out
push
call
std
jne
cmp
add
xor
jmp
sti
jmp
out
or
test
inc
cmp
add
insl
and
pusha
gs
popf
loopne
decb
pop
xchg
iret
gs
push
jno
add
cli
mov
out
push
pop
xor
mov
add
inc
iret
daa
mov
stc
shlb
jne
adc
insl
stc
mov
insb
xchg
gs
stos
xor
ficompl
inc
lods
add
mov
gs
rcr
and
inc
jp
out
dec
pop
cmpsb
or
data16
or
lock
pop
jae
pushf
fsub
pop
in
pop
out
gs
scas
inc
add
stc
add
jns
subb
fdiv
pop
mov
enter
out
mov
mov
call
ret
push
inc
test
pop
test
or
insb
std
pop
inc
mov
in
pop
push
cmpsb
pop
mov
jmp
fldl
push
add
int
pushf
mov
cmpsb
int
pop
enter
push
jb
add
mov
jmp
xchg
sbb
loop
xor
push
pushl
mov
ds
xchg
cmp
stc
or
sbb
jno
sbb
decb
cmp
outsb
sbb
call
push
pop
call
add
inc
imul
lcall
or
lock
lret
pop
jae
sbb
cli
jmp
out
iret
loope
pop
pop
pop
roll
mov
adc
push
je
imul
cmp
pushf
mov
fdivr
push
sub
add
add
daa
add
jnp
and
push
call
dec
enter
call
jl
dec
push
or
inc
and
and
out
push
fucom
std
jmp
insb
enter
xlat
stc
cmp
push
shlb
mov
cmc
nop
popf
decb
arpl
mov
mov
ret
das
or
dec
xlat
outsl
xorb
popa
je
push
sarl
test
inc
jle
jge
mov
inc
rcr
add
gs
popa
je
lcall
dec
movsb
inc
add
sbb
push
mov
jne
add
orb
insl
add
cli
adc
je
add
or
iret
cmpsl
add
sbb
add
add
or
shl
imul
ss
cli
insb
lret
sbb
sbb
pop
dec
add
add
pushf
adc
add
add
inc
sbb
add
add
mov
in
cmpl
jmp
stc
jp
add
add
pop
clc
xlat
add
pusha
cli
add
add
hlt
test
clc
int
add
adc
out
ds
inc
adc
data16
pop
push
ret
mov
inc
jg
or
or
mov
add
incb
movsb
or
jmp
jle
call
mov
call
dec
inc
jmp
mov
pop
mov
lods
inc
and
pop
mov
stc
add
push
add
test
ficompl
jb
pop
pop
mov
add
fisubrl
pop
jno
adc
std
mov
testb
add
jle
and
mov
xor
mov
add
lret
out
in
add
loopne
mov
gs
jne
inc
rcll
data16
inc
testl
das
or
sahf
out
fwait
inc
jle
xchg
cmp
add
aam
les
data16
add
lcall
push
add
sub
jbe
cld
repz
or
test
cli
insl
xchg
add
xor
iret
mov
mov
mov
pop
incb
mov
push
imull
or
pop
je
jge
xchg
daa
pop
incb
insb
inc
pop
outsb
add
daa
pushw
out
push
pop
sbbb
add
cld
dec
cmp
je
add
cli
insl
or
out
pusha
cltd
add
insl
add
out
xor
push
aas
pop
mov
and
imulb
mov
popf
fstpt
add
loopne
push
mov
or
and
vdivps
push
insl
jmp
cmp
ret
push
dec
fdiv
insb
xor
aam
addb
jmp
mov
add
lods
in
jecxz
in
add
sar
inc
or
fdivr
insb
js
lea
enter
add
xchg
pop
enter
dec
mov
rorl
mov
fadd
hlt
out
incl
xor
insb
fnclex
push
or
lcall
ret
mov
dec
shl
scas
mov
ficomps
mov
add
inc
incb
and
loope
mov
shr
outsl
call
push
pop
xor
push
or
xchg
hlt
imul
in
push
je
and
cs
je
adc
cmp
push
or
pop
clc
imul
add
loop
rolb
add
fs
jne
jmp
or
push
add
push
or
jae
add
jnp
cmp
insb
or
jne
in
inc
incl
or
lcall
add
pop
mov
or
decl
jne
frstor
xchg
add
xchg
mov
orl
ja
clc
enter
push
cmp
mov
insl
call
add
rcrl
push
add
ljmp
cmp
ret
pop
je
add
inc
rolb
bound
decb
inc
je
lcall
or
sahf
rorb
and
gs
adc
push
add
mov
addr16
int3
ret
jmp
das
add
in
aas
out
xchg
pop
mov
pop
add
jae
pop
jns
jmpw
push
mov
push
jmp
pop
addb
pop
cli
add
loope
jmp
push
out
xor
test
jmp
add
subl
push
dec
xchg
add
shll
adc
call
pusha
add
addb
add
mov
pusha
adc
pop
lock
hlt
repz
push
add
pop
rcr
pop
adc
push
popa
cmp
fcoms
add
sbb
ds
lock
inc
add
add
enter
mulb
add
outsb
dec
pop
out
or
lret
loopne
je
add
jae
ljmp
lea
shll
vaddsubps
fsubr
ror
ljmp
roll
xchg
test
dec
rclb
dec
ljmp
add
clc
inc
ss
inc
jmp
insl
aas
add
stc
jg
pop
inc
push
mov
xor
sub
mov
insb
dec
push
testb
jbe
add
fs
ret
into
mov
incl
sub
fiaddl
jmp
test
mov
data16
mov
cld
incl
add
add
push
stos
std
jmp
stos
mov
test
decl
lods
inc
andl
les
incb
mov
scas
std
pop
insb
cld
pushl
add
shll
lea
cld
jmp
xchg
std
mov
scas
std
decl
dec
das
cli
testb
add
pop
cmpl
add
pop
xchg
cli
pop
push
add
or
pop
jle
cli
pop
add
std
fidivrs
jmp
pop
add
mov
inc
cli
fadds
dec
adc
or
cli
fidivrl
or
xchg
cmpsb
or
pop
xchg
mov
inc
mov
jmp
add
loop
test
ja
and
dec
mov
push
jle
sub
dec
lcall
pop
fs
andb
push
lds
dec
dec
outsl
addb
je
xor
lods
nop
sub
push
sbb
sti
test
enter
mov
add
mov
or
xor
add
in
ret
push
add
add
dec
nop
xchg
dec
inc
push
pop
adc
lds
ret
stc
dec
mov
dec
dec
adc
push
sub
mov
dec
hlt
dec
insl
push
std
test
add
sbb
dec
icebp
xchg
add
inc
mov
jmp
mov
or
ret
sahf
add
jae
addr16
clc
add
andl
mov
jp
add
add
jmp
dec
jnp
jo
pop
addr16
clc
add
inc
test
incl
cmp
rorb
sbb
mov
mov
mov
call
mov
jnp
incl
mov
add
add
call
pop
shll
adc
sub
incb
add
add
mov
imul
add
add
rcrb
pop
push
lcall
shll
ds
incl
mov
jmp
or
push
pop
inc
mov
add
cli
sbb
ret
pop
mov
fldenv
add
pop
call
call
pop
ljmp
out
push
add
cmc
pop
add
adc
dec
mov
pop
add
adc
fdiv
bound
je
ss
push
cli
pop
stos
or
or
jmp
lcall
cli
push
mull
stos
sti
decl
mov
inc
cli
jne
push
cli
pop
std
mov
xor
nop
or
add
inc
dec
clc
ret
add
inc
fld
dec
mov
sbb
fucomp
push
mov
fwait
dec
xchg
adc
fwait
push
xchg
sbb
jnp
xchg
and
sub
and
inc
fisttpll
lea
lds
out
push
xchg
and
xor
xchg
dec
call
dec
movsl
push
dec
or
fcomps
inc
xor
xchg
add
test
xchg
gs
add
ret
dec
aad
xchg
sbb
call
cmp
inc
jmp
ss
enter
out
lock
insb
push
dec
push
adcl
inc
jmp
jmp
shl
stc
add
je
push
dec
push
fdivrp
inc
stc
dec
je
stos
lock
pop
cmp
test
add
dec
fsub
cmp
add
je
ja
imul
sub
popa
jg
stos
dec
mov
into
lods
mov
nop
std
jne
mov
hlt
stc
add
adc
add
sub
mov
inc
inc
out
push
xchg
mov
into
cmc
inc
decb
shrl
push
hlt
xor
call
cwtl
lds
push
mov
lock
add
add
add
jae
sti
dec
xor
push
mov
cld
sub
add
pop
lcall
shlb
push
mov
mov
cmpl
jns
push
daa
mov
fisttpl
add
cmpl
ret
xor
ret
push
adc
test
andb
incb
add
jae
push
cmc
cltd
add
test
xchg
jg
push
insl
loope
lret
fs
dec
dec
pop
imul
hlt
pop
add
cmp
xchg
cli
pop
add
adc
jle
push
std
and
add
test
jns
call
dec
incl
add
add
xorb
dec
in
insl
cltd
add
leave
inc
gs
aam
push
sbb
add
dec
dec
lock
cmc
xchg
mov
jle
call
cmp
fucomip
add
add
and
add
cli
mov
jg
mov
arpl
popa
mov
pop
cli
add
dec
into
dec
cmp
sub
inc
push
lods
cmp
les
aas
push
lds
or
cmpsb
jb
std
cmpsb
add
les
jmp
mov
cmp
push
add
stc
pop
pop
out
add
test
cmp
data16
rorb
pop
jb
std
push
xor
add
ffreep
call
pop
sbb
rorb
jge
add
cs
push
std
add
adc
movsb
add
stc
ja
xor
mov
inc
out
repnz
sar
inc
fiadds
add
inc
out
repnz
add
mov
push
mov
mov
cmpl
mov
add
mov
mov
add
adc
testb
add
xchg
movsl
jmp
add
add
add
add
ds
push
push
ds
add
push
ds
nop
push
add
cs
add
call
cli
mov
jmp
scas
ds
jge
dec
andb
lods
mull
pop
dec
jb
jae
inc
add
jbe
call
add
and
addr16
stos
dec
je
mov
pop
lds
mov
add
sub
add
jl
lahf
or
insl
add
cmpsb
scas
int
cli
cwtl
xchg
bndldx
test
cmp
dec
ljmp
add
pop
cs
arpl
imul
cmp
int3
dec
push
xchg
push
lds
add
cmp
js
mov
lds
cli
inc
lea
add
ss
in
inc
hlt
cld
js
fwait
sbb
add
sub
out
mov
add
scas
inc
cmp
les
mov
dec
adc
pop
cli
add
inc
out
or
fdivrp
add
inc
mov
add
pop
cmp
dec
push
imulb
push
mov
add
sub
sub
add
xadd
stc
add
cmp
sub
sub
inc
mov
inc
jb
mov
aam
cld
inc
sar
cli
in
jmp
stc
add
jmp
pop
pop
add
les
sti
jmp
mov
scas
add
lret
jmp
mov
stc
or
je
shll
add
into
jmp
add
add
call
and
and
lds
push
push
add
cmp
add
loopne
call
sbb
or
add
and
push
add
push
in
jmp
add
inc
loopne
pop
push
push
movsl
lds
or
add
les
roll
out
add
sar
incl
add
js
jne
loopne
add
add
ljmp
or
repz
or
mov
sub
add
push
inc
mov
sub
ss
in
add
cmp
jmp
jns
mov
cld
mov
add
call
inc
cli
sub
add
inc
sti
incb
add
inc
je
sub
je
movb
sub
inc
movsl
call
testl
adc
inc
adc
add
fldt
inc
into
mov
cmp
in
pop
lret
add
shll
aaa
sti
int
adc
lods
push
push
mov
vcvtdq2ps
add
sti
movsl
inc
popf
pop
into
std
cmpsl
cmc
adc
xor
faddl
sub
jge
int
shrb
add
cmpsl
add
lods
jbe
cmp
call
xor
aas
pop
faddp
incl
mov
push
cli
push
mov
or
sub
call
repnz
mov
push
dec
sub
add
add
stc
add
or
mov
lret
int3
enter
add
insb
cmp
dec
xchg
or
dec
sub
sub
jmp
add
test
iret
lret
inc
jmp
cmp
add
add
call
xchg
clc
incb
cmp
add
fadd
push
add
out
sar
dec
ret
add
out
pop
add
jb
ret
std
push
fidivrl
add
add
and
repnz
push
inc
dec
popa
clc
call
adc
add
pop
std
cmp
cmc
pop
enter
enter
cmc
dec
inc
jecxz
je
push
push
mov
je
enter
inc
inc
or
inc
roll
cli
stos
pop
mov
inc
out
movl
sub
jno
ljmp
adc
test
xorb
add
push
ljmp
insb
testb
lcall
add
cli
pop
sbb
call
out
stos
inc
cli
inc
sbb
stos
inc
cli
outsb
sbb
call
bts
xchg
sbb
add
add
add
pop
cmp
js
in
add
pop
sub
push
jp
cmpsl
add
add
cmpsl
add
add
cmpsl
add
add
cmpsl
add
insb
stos
mov
fisubs
stos
mov
fisubs
add
loop
fnstsw
fisubs
add
add
add
jmp
or
add
jmp
cmc
loope
fnstsw
add
daa
add
loope
fnstsw
add
pop
sub
cmp
mov
cmp
xchg
pop
pop
test
cmp
xchg
and
stc
cmp
arpl
pop
test
cmp
add
ds
std
bound
pop
test
cmp
push
cmp
cmp
adc
pop
sub
cmp
and
pop
sub
cmp
loop
pop
sub
cmp
je
push
pop
and
jmp
push
sub
jmp
inc
sub
jmp
add
aam
cmp
push
jmp
aam
inc
pop
mov
pop
aas
add
sub
pop
xchg
push
jmp
inc
and
xchg
push
jmp
push
and
loop
jmp
xor
push
loop
jmp
push
and
rolb
jmp
cli
xchg
out
inc
in
add
pop
mov
inc
cli
mov
xor
add
pop
rcr
inc
cli
mov
add
xlat
scas
fldl
lret
inc
insl
add
fistpll
inc
cli
repnz
and
call
fcmovnu
inc
cli
sbb
mov
insb
add
pop
aam
inc
cli
add
mov
pop
in
fldl
sub
ret
mov
jae
inc
cli
push
in
shr
call
faddl
jp
xlat
mov
add
add
filds
mov
rorl
rorl
sbb
push
sti
mov
jmp
test
add
or
inc
in
jns
loopne
std
jl
add
add
pop
cli
addl
or
jmp
cmp
add
add
add
test
orl
or
add
inc
in
add
test
add
add
mov
jmp
add
add
orl
stc
add
hlt
stc
add
jmp
stc
add
stos
add
add
jl
jmp
stc
stc
jmp
stc
add
loope
adc
jmp
cli
add
jmp
add
add
cmp
cld
stc
in
call
stc
add
sub
add
add
xchg
icebp
jl
jmp
stc
stc
ljmp
add
loope
sbb
jmp
sub
stc
add
mov
lds
add
add
jne
mov
out
add
roll
or
add
add
push
add
add
mov
sbb
add
mov
add
rorl
shlb
loope
incl
xchg
divl
call
add
call
add
or
add
push
mov
rolb
les
add
inc
mov
subl
add
mov
sub
or
sub
mov
add
push
add
mov
add
mov
add
outsb
shll
lods
mov
and
sbb
inc
jg
roll
jns
add
jg
or
xchg
sti
les
add
sub
add
sub
add
add
add
clc
pop
add
cli
add
sub
jmp
mov
mov
add
ss
push
or
add
mov
andb
add
mov
in
cli
les
loope
jmp
pop
cli
add
orb
jmp
xchg
dec
pop
sub
out
in
mov
int3
pop
cli
add
sbb
add
addb
mov
add
mov
add
stc
add
push
jmp
add
jle
jmp
xor
popa
out
pop
add
add
jg
fprem1
xor
jo
sbb
stc
les
jmp
stc
add
jo
or
jmp
roll
jmp
lds
push
sbb
fildl
test
add
add
and
insb
cmp
xor
cmpsl
and
jg
test
adc
jb
add
add
sbb
inc
test
jbe
and
test
into
add
adcl
inc
mov
je
pop
in
pop
ret
mov
push
push
push
xor
call
push
add
pop
add
add
roll
push
mov
push
adc
push
call
xchg
cmp
scas
inc
dec
inc
push
out
jae
adc
jne
addl
or
ret
and
decl
add
cli
mov
psadbw
add
sub
sub
lcall
and
test
pop
add
movsb
adc
add
cli
mov
dec
sti
mov
test
adc
mov
dec
mov
pop
sbb
inc
jae
pop
add
sbb
add
sbb
sbb
orb
out
add
pop
push
mov
addl
incb
ret
jb
hlt
call
pop
cmp
jmp
cmp
add
push
out
inc
jne
call
add
or
add
xor
mov
in
add
jge
adc
add
mov
in
cli
jp
add
movsb
in
mov
shlb
aad
je
mov
movsl
test
or
aaa
pushf
xor
js
ljmp
xor
sahf
xchg
jne
add
rol
icebp
stc
or
clc
jle
in
add
nop
lock
add
stc
jge
shrl
bound
in
add
outsl
out
or
jmp
stc
add
fsincos
push
std
stos
xchg
add
or
jmp
push
or
jmp
stc
add
jo
or
jmp
mov
bound
add
add
stc
jp
jmp
xor
popa
out
add
incb
inc
adc
fisubrl
inc
mov
or
add
test
add
mov
adc
push
jge
add
test
push
or
jne
jnp
adc
add
mov
inc
xchg
mov
mov
mov
add
cs
push
jnp
decl
push
add
add
cmp
addl
cli
sbb
sti
int
add
sbb
add
sbb
add
sbb
mov
decl
jl
sbb
rcrb
sbb
add
mov
add
add
cli
fisttpl
add
adc
sbb
add
add
add
sub
mov
add
dec
push
jg
sub
cmp
jmp
dec
add
out
aam
inc
jecxz
mov
call
repz
add
add
pop
push
sti
sbb
notb
jmp
add
add
add
add
add
subb
sub
sub
xor
jns
mov
sub
and
lahf
inc
lock
in
in
sub
andl
loope
into
daa
adcb
cli
add
add
stc
add
jb
sub
jmp
mov
add
xchg
and
push
add
into
sub
ds
inc
xor
jae,pn
and
jae
pmulhw
add
and
inc
pop
jno
sub
pusha
xchg
add
stc
lret
mov
add
sub
xchg
ljmp
cmp
jg
fscale
add
pusha
adcb
jmp
or
add
push
orb
stc
add
testb
add
add
test
mov
sbb
pop
add
stos
test
lahf
pop
add
xchg
inc
xchg
ljmp
xchg
add
and
mov
and
pop
andl
push
mov
or
cli
hlt
testl
add
pop
add
lea
add
and
add
adc
addl
inc
sbb
and
add
std
call
pop
pop
cli
pop
cli
jp
add
jecxz
out
jnp
add
sbb
sbbl
out
xor
sbb
xor
je
or
cli
sbb
add
pushf
sub
jae
sahf
scas
and
pop
mov
add
mov
add
and
sub
and
and
sbb
adc
mov
dec
push
add
mov
and
sbb
jnp
fldl
adc
add
jp
loopne
add
lret
mov
sub
jno
add
add
fbstp
incb
jp
or
add
les
loope
jmp
pop
cli
add
mov
add
adc
push
push
inc
jo
sti
push
pop
cli
add
or
fadds
cli
add
mov
jnp
adc
add
jp
adc
add
jge
or
add
push
fucomp
out
add
mov
jl
test
cmp
push
xchg
jae
sahf
dec
jp
in
stc
add
lock
add
xchg
cmc
add
pusha
mov
add
add
stc
test
imul
test
testb
mov
adc
mov
daa
pop
xchg
xor
shl
test
jmp
cmc
fldl
icebp
test
jmp
nop
fldl
add
icebp
rorb
out
pop
cmp
inc
pop
jmp
stc
add
add
stos
test
xlat
add
mov
add
roll
scas
add
cld
decl
push
add
add
call
jmp
decl
jg
add
add
jge
add
xchg
test
adc
add
push
rcrl
mov
out
aam
fdivr
pop
lea
pop
add
nop
and
add
add
mov
and
cmp
cli
or
cmp
add
pop
pop
add
add
sbb
mov
out
rcll
out
sub
dec
mov
out
jl
fimuls
pop
and
lods
repnz
add
in
lcall
jg
out
test
lea
add
jl
push
add
cwtl
jp
fstpl
cmp
outsb
adc
add
and
add
incb
ljmp
add
and
icebp
mov
cli
sbb
mov
add
jne
add
outsl
add
jo
push
jnp
jle
xchg
add
add
outsb
fdivr
cmpsl
out
inc
in
js
add
add
jnp
addb
ja
testb
je
in
add
jns
or
add
js
fldcw
incb
addb
addb
cli
scas
in
mov
cli
add
pop
cmc
add
add
and
push
add
add
call
leave
loopne
sbb
cmp
and
add
testb
add
jg
in
cmp
out
mov
add
push
or
scas
mov
sbb
shll
xor
cmp
add
fdivrp
std
movsl
xchg
xchg
addl
pop
jb
adc
stc
fcomip
fcomip
out
testl
and
stc
das
add
push
popl
in
dec
ffreep
lcall
add
call
or
add
or
dec
push
cmp
or
add
add
and
imul
decb
loope
add
out
sbb
mov
test
add
pop
cmp
mov
mov
mov
cmp
xor
jb
movsb
dec
and
mov
fmuls
fucomip
jmp
pop
and
push
inc
push
cli
pop
jge
and
mov
add
or
aam
inc
cmpsb
sbb
insl
daa
sub
shll
add
ret
cmp
pop
mov
fadd
loopne
jge
mov
das
mov
jne
movsb
mov
adc
jmp
cmpsl
cmp
sbb
fimuls
jno
jge
adc
dec
addl
sub
add
into
paddusb
inc
add
stc
dec
jmp
adc
clc
outsl
iret
frndint
pop
fxtract
pop
orb
in
std
and
orl
adc
adc
sub
dec
call
push
or
jno
jo
dec
jge
in
add
add
faddl
imull
add
add
sub
add
jae
or
or
or
jno
add
mov
roll
pusha
dec
mov
psubsw
aaa
push
in
jmp
and
mov
sub
add
test
sarb
pop
jmp
gs
jae
pop
mov
and
add
push
mov
in
stc
add
jo
add
stc
lea
inc
add
in
push
cmpsb
dec
push
out
pop
fdivrs
inc
push
xchg
adc
mov
add
adc
mov
xor
inc
add
les
orl
pop
movl
lcall
sbb
add
add
pop
push
call
xor
add
add
lcall
jecxz
add
xlat
add
jb
mov
add
add
sti
cmpsb
rorl
lcall
jae
and
add
mov
cmpsl
sti
add
sub
add
jae
testl
cmpl
ljmp
add
sub
ficomps
jno
ficoms
and
sahf
out
add
sti
xchg
add
sub
adc
outsb
or
test
fstl
inc
push
je
std
inc
cltd
mov
mov
push
movb
or
lock
jle
scas
sub
clc
fistps
add
jmp
add
add
call
hlt
jmp
adc
sbb
xchg
shrl
cmc
imul
xchg
xor
add
jo
int3
xlat
cmpb
rcr
jno
or
jmp
rorl
sbb
sub
mov
int3
mov
adc
inc
pushl
add
or
add
add
add
enter
cwtl
popa
push
add
outsl
test
add
pusha
shll
addl
cmp
mov
bound
loope
pop
pop
mov
mov
mov
push
push
testb
fcmovb
mulb
inc
int
loopne
jecxz
add
lock
add
jne
add
stc
fcos
dec
add
incb
lock
add
push
sbb
pop
add
lods
xchg
cmc
mov
inc
cmp
dec
add
pop
call
mov
dec
mov
adc
mov
aaa
dec
incl
inc
push
lahf
inc
and
dec
jp
enter
adc
loope
dec
das
dec
xchg
mov
dec
push
cwtl
shl
das
add
sbb
std
mov
and
fildl
mov
sbb
iret
cli
push
add
jmp
mov
pop
push
mov
stos
or
incl
mov
sub
int3
call
movsl
inc
cmp
xor
inc
rolb
fucom
notl
add
cli
sub
add
bound
daa
scas
jl
int
mov
mov
mov
cmp
lret
out
adc
shr
mov
jne
pop
xor
sub
add
xchg
dec
and
out
pop
jmp
out
pop
add
pusha
sub
sub
xorb
fld
cmp
sbb
add
inc
loope
mov
and
out
rcll
pop
and
cmp
into
or
push
sbb
add
push
sbb
call
add
test
add
cli
add
mov
in
mov
add
add
divb
inc
ljmp
mov
and
or
adc
add
xorb
add
add
popf
and
jg
mov
outsl
inc
out
in
sbb
shlb
jge
mov
add
clc
jmp
in
out
add
popl
dec
mov
jb
and
xor
sbb
and
adc
cmp
leave
sub
cli
add
outsl
lds
mov
insl
add
lods
sbb
add
add
out
loopne
movsb
in
cmp
outsl
dec
out
dec
out
std
decl
mov
push
push
pop
mov
jg
in
cmp
add
sub
adc
mov
add
cmc
aam
add
mov
and
aad
add
push
cmpl
add
dec
and
push
mov
add
or
inc
and
mov
inc
mov
sub
rcll
dec
jl
in
and
or
push
push
push
adc
pop
cli
cmp
jno
out
and
sbb
add
jno
inc
clc
clc
inc
out
out
jns
incb
mov
jae
out
xchg
jnp
xchg
xchg
dec
mov
inc
out
mov
dec
mov
lret
mov
add
adc
dec
mov
add
and
sub
add
mov
inc
jnp
xchg
mov
ljmp
repz
popa
out
scas
jge
int
lret
pop
cmc
add
add
cli
add
lahf
sbb
call
add
mov
sub
stos
out
cli
andl
add
add
add
mov
mov
dec
loopne
jae
add
movsl
xchg
sti
mov
mull
ss
loopne
mov
mov
loopne
sub
push
inc
push
adc
popa
mov
aad
mov
inc
adc
sub
sbb
out
lods
mov
pop
or
roll
dec
add
loope
jb
loope
jo
loope
pusha
add
mov
loope
push
mov
mov
fisttps
push
jb
mov
xchg
add
xchg
ret
inc
push
pop
pop
push
jmp
mov
add
adc
shll
scas
mov
bound
push
lcall
out
jmp
bound
and
rorl
int
mov
pop
add
out
repnz
testl
into
sti
cmpsl
icebp
call
jge
and
add
and
mov
jae
jmp
jge
and
jge
and
sub
add
test
out
or
add
std
add
jg
aas
xor
jl
or
lock
dec
and
pop
dec
mov
add
icebp
jmp
pop
cwtl
dec
and
test
sub
popa
pop
mov
cli
add
sbb
sub
and
call
mov
decb
mov
rorb
sbb
jnp
add
jno
out
add
sbb
dec
out
outsb
sbb
jno
fbld
inc
int
int
push
sub
mov
mov
inc
ljmp
xor
andl
inc
pop
push
cli
dec
incl
lcall
aam
into
add
mov
jbe
pushf
jecxz
jp
decl
inc
adc
or
add
add
mov
jmp
adc
rcrb
pop
and
mov
sbb
scas
jno
sbb
sbb
sbb
adc
add
jg
stc
xchg
push
lret
mov
jmp
mov
jmp
in
cli
jnp
fbld
jl
fbld
lret
jbe
mov
mov
in
stc
add
cltd
jl
out
rclb
push
jnp
add
stc
xchg
fimuls
int
lds
add
add
bound
insb
cli
cmp
xchg
or
adc
cmp
jg
mov
in
adc
shrb
xor
stos
jle
int
mov
out
adc
mov
stos
rorl
repz
les
in
add
cmp
dec
add
divl
xchg
mov
push
push
push
or
rcr
std
decl
push
mov
pop
loope
mov
xchg
ja
mov
and
add
jecxz
pop
cmpl
add
add
sbb
js
sbbl
mov
js
cmpl
in
mov
imul
in
cmp
jmp
subl
add
arpl
call
mov
cli
add
push
cmpsl
mov
pop
mov
daa
add
sub
ret
inc
jae
ficoms
aad
addb
jg
or
push
add
je
add
cli
xchg
and
xlat
mov
and
push
subl
mov
or
push
dec
mov
add
movsl
data16
add
sbb
xor
add
unpckhps
add
adc
cmp
sub
add
add
sbbb
push
add
jecxz
inc
add
inc
sbb
sbb
mov
sbb
imul
mov
sarl
lods
mov
push
pop
in
enter
xchg
shrl
in
jns
loopne
add
mov
inc
fldl
xlat
push
mov
push
out
cli
add
ss
jae
popf
push
call
decl
aas
nop
and
stc
in
stc
add
mov
jno
js
call
stc
jg
loopne
in
mov
add
jmp
stc
add
pusha
jg
add
stc
jnp
stc
adc
add
jp
jmp
xadd
add
aad
or
test
fisttpll
add
stc
les
jmp
stc
add
outsl
scas
add
jmp
add
xchg
clc
outsb
sbb
stc
add
lock
str
adc
add
xchg
ljmp
xchg
incl
add
sub
fisttpll
add
adc
sgdtl
add
sbb
add
sbb
shlb
jl
and
mov
and
jge
adc
or
sub
and
adc
or
dec
call
push
fdiv
into
sbbl
shr
pop
mov
pop
pop
adc
ss
mov
test
and
add
loope
pop
aam
ds
cmp
add
cmp
dec
shlb
inc
repnz
aas
mov
cli
cli
cwtl
inc
je
pushf
ds
sbb
fiadds
sbb
ret
sbb
ret
sbb
add
sbb
out
negb
mov
hlt
add
mov
test
ficomps
add
mov
add
inc
sarl
inc
sarl
jge
test
or
mov
mov
mov
lods
push
pop
ret
jo
cmp
add
inc
or
push
je
adc
in
dec
sti
jbe
jne
add
xchg
int3
xchg
xor
mov
cli
xchg
bnd
adc
addl
add
xlat
push
clc
ja
cmc
outsb
mov
xchg
or
xchg
or
aam
cli
jbe
mov
ja
shll
and
jl
aam
addl
mov
stos
jno
jmp
sbb
push
dec
sbb
stc
add
lahf
jg
dec
test
ja
icebp
jl
aaa
int3
aas
jl
cld
icebp
addl
add
cmp
jmp
aaa
popf
mov
or
add
je
jge
push
lds
mov
ljmp
daa
mov
je
push
push
mov
and
cmpb
jg
sbb
ret
imul
std
out
orl
call
add
in
push
pop
mov
push
xchg
shl
jle
push
add
inc
or
add
add
cmc
add
cld
adc
in
cwtl
aaa
jg
and
add
and
or
in
mov
xor
ret
in
or
testb
mov
aaa
inc
push
cli
sbb
rorb
add
pushf
push
adc
cli
pop
sub
jno
and
pop
and
add
pop
jnp
add
stc
sbb
xor
cmp
jnp
jns
iret
or
movsl
rorl
fiadds
test
mov
sbb
stos
mov
dec
inc
add
mov
xchg
push
jnp
adcl
add
add
xchg
add
filds
add
or
addb
jl
test
test
xchg
xchg
inc
stc
add
jge
mov
mov
shl
clc
jae
gs
sbb
add
sbb
push
js
or
add
xorb
jmp
mov
cld
call
cld
xorb
incb
add
daa
and
mov
inc
pop
hlt
lock
lcall
jge
test
push
decb
repz
cld
mov
cmp
push
jg
std
sbb
push
jg
inc
loopne
push
cld
mov
ds
or
lds
aas
outsb
inc
loopne
pusha
cld
push
aas
stc
sti
shlb
shl
mov
mov
decb
add
add
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
jge,pt
push
add
add
shl
imul
mov
shl
pop
add
loope
out
dec
add
rorl
or
in
push
std
dec
mov
mov
or
mov
mov
sbb
mov
add
add
leave
addl
shl
xchg
repz
and
push
xor
idiv
add
xor
mov
shl
and
xchg
shl
add
in
mov
addl
xor
mov
int
in
fcoml
mov
jns
jnp
or
aam
rcr
or
in
sbb
mov
add
adcl
add
add
je
or
adc
push
frstor
xor
mov
and
jae
cli
stc
xor
in
add
jae
inc
out
mulb
xor
cmpb
rcrb
frstor
mov
cwtl
ret
add
push
add
mov
jo
add
mov
add
add
pop
sub
jl
jp
roll
add
push
stc
push
sub
jns
jge
xchg
jmp
les
sub
jp
jge
lds
add
add
push
stc
pop
sub
jecxz
sbb
test
cmp
or
inc
adc
push
add
add
add
jmp
dec
inc
add
out
mov
sub
pop
xchg
aas
repz
add
xchg
in
and
bound
add
push
stc
or
add
in
out
jmp
jmp
test
jmp
imul
repnz
testb
add
add
movl
push
inc
mov
stc
or
faddp
lods
add
iret
add
add
xchg
rcrb
or
jecxz
mov
or
out
push
bound
stc
add
add
inc
add
adc
jl
mov
or
mov
fstpl
sbb
shr
add
sbb
icebp
or
xor
or
jecxz
bound
fldl2e
cmp
loopne
jle
sarl
mov
shrl
and
pop
add
cli
sbb
mov
and
jmp
jns
cmp
xor
inc
sbbb
aam
leave
fsubrl
mov
sub
jns
mov
jne
sbb
or
int
sub
add
mov
lods
jp
mov
gs
sbbb
sub
idiv
cmp
loop
mov
pop
cmp
pop
shll
cmp
add
jb
and
adc
push
ficomps
outsl
sub
xchg
inc
add
daa
mov
inc
fbstp
sbb
jecxz
mov
add
clc
dec
idivl
add
add
insb
imul
incl
test
das
mov
cmp
mov
pop
fbstp
lods
aas
xorb
out
ss
pop
sbb
add
lds
in
nop
or
jg
inc
out
mov
add
test
add
dec
call
ret
pop
sub
add
call
sub
push
mov
xchg
dec
clc
cltd
dec
out
xor
decb
sub
push
call
andl
clc
cltd
icebp
xchg
cld
div
test
out
call
bound
mov
lea
push
popa
lock
cli
dec
aas
jmp
out
cld
cmpsb
hlt
gs
aas
decb
add
push
dec
call
add
lods
stc
mov
sbb
lock
test
jge
clc
jae
inc
cld
les
test
adc
cli
or
ljmp
inc
clc
arpl
aam
add
scas
mov
mov
rorl
pop
pop
cwtl
sub
and
std
push
pop
and
add
add
mov
jbe
addb
mov
push
lret
inc
add
mov
mov
add
ror
mov
add
inc
cli
jmp
add
sub
repnz
adc
jg
push
decb
add
cli
xorb
xor
add
dec
inc
aam
jg
add
sbb
ds
ja
add
add
and
sbb
addr16
jnp
or
push
add
movsb
ret
shl
sub
add
scas
mov
add
daa
add
mov
aam
jns
mov
popf
ret
add
jns
mov
test
je
cmc
cli
sahf
add
in
push
add
add
cmpsb
rorb
scas
and
pop
jno
out
test
or
mov
mov
cld
dec
mov
cld
out
add
cli
outsb
out
stc
dec
test
adc
sub
cld
xor
lods
ret
jmp
cmp
jle,pn
sti
incb
cli
add
add
push
pusha
adc
pop
add
bound
jb
inc
add
add
clc
cli
std
idivb
add
mov
fisubs
sti
ret
ljmp
stc
inc
inc
push
adc
in
cmp
push
push
clc
clc
std
push
jge
js
stc
cli
add
add
xchg
js
stc
cli
add
cli
std
mov
stc
push
pop
mov
jmp
push
xchg
xor
lea
jbe
jo
mov
adc
mov
rcll
test
xor
add
push
adcl
call
or
cmp
insb
pop
push
mov
push
push
call
sti
mov
push
out
es
pushf
push
push
mov
push
push
call
dec
fs
ret
dec
mov
or
or
dec
cmpb
xlat
push
cmp
adc
add
and
cmp
mov
xchg
add
jg
xchg
cmpb
cmp
jae
xor
pusha
and
push
in
call
cmp
add
arpl
dec
mov
sti
test
outsb
les
pusha
dec
aas
cli
std
lock
cmp
or
lods
lods
add
cmpsb
ret
add
nop
mov
jns
sbb
movsb
pop
or
add
es
push
rolb
cld
std
fstpl
lock
or
push
in
inc
rcrb
cmp
lret
std
fiadds
adc
and
sub
inc
sti
clc
dec
mov
inc
out
cmp
pop
in
out
cmpsb
add
subb
cli
mov
lret
sti
push
clc
jb
dec
mov
jge
jae
mov
mov
add
jne
push
mov
in
mov
mov
std
add
mov
out
testl
jmp
std
push
add
cmc
add
stc
xchg
inc
call
xor
insb
test
add
call
inc
jb
aas
jmp
pop
in
clc
sahf
add
gs
test
add
and
push
call
pop
imul
dec
cmp
xor
mov
into
in
jne
sbb
dec
mov
stc
std
xchg
mov
or
jg
mov
std
jmp
pop
or
mov
arpl
push
movsb
imull
dec
or
in
add
imull
dec
loop
mov
inc
jg
stos
jbe
fidivrs
call
push
mov
idiv
xor
xor
les
sti
lcall
mov
jne
mov
ss
add
inc
inc
sbbl
jns
cli
imul
add
dec
push
push
push
loop
sti
std
lds
js
out
sti
add
add
push
js
sti
add
outsb
lea
sub
sti
test
lock
cmp
add
mov
sub
pop
or
adc
inc
jno
pop
or
mov
aam
xorl
mov
sti
das
sub
sbb
add
jae
inc
jns
or
ljmp
sti
jb
flds
out
fistpll
push
mov
ficoms
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
stc
add
jmp
stc
add
in
add
mov
inc
mov
jnp
iret
or
leave
in
and
push
insb
dec
sbb
pop
es
je
or
cmp
add
repz
out
jnp
inc
fstps
adc
leave
es
shll
aaa
xor
push
and
insl
add
imul
lcall
or
imul
jne
mov
inc
jne
fs
std
or
mov
outsb
jne
jb
jb
outsl
jge
and
bound
lods
pop
jae
inc
sbb
bound
add
outsb
jae
fs
xor
xor
das
sahf
add
or
push
add
xchg
push
add
arpl
add
arpl
add
push
push
add
push
push
add
arpl
add
arpl
add
push
push
add
push
push
add
and
add
and
add
adc
add
adc
add
cli
cwtl
mov
mov
xor
push
push
adc
or
add
or
or
jnp
test
add
cli
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
fadds
ss
or
jne
das
imul
mov
pop
jne
sub
jmp
add
into
xor
sbb
or
xor
cmc
sub
xor
cli
adc
pop
xor
stc
pusha
arpl
stc
js
add
add
popa
add
das
add
push
jb
repnz
aaa
imul
data16
imul
add
arpl
add
jae
outsb
test
add
mov
sub
add
add
pusha
popa
jns
jne
xor
xor
insl
pop
add
imul
xor
ss
xor
imul
outsl
push
es
add
pop
jo
cli
maxps
or
int3
cli
pop
jno
fldt
xchg
pop
jb
add
fs
cmpsb
shlb
add
in
add
sub
xor
sub
outsb
push
push
mov
dec
mov
pop
mov
imul
fs
xchg
jno
jnp
arpl
fdivl
sub
imul
add
and
insb
pop
pop
xor
adc
jno
fldt
out
jb
fbstp
add
int
sbb
out
leave
popa
add
ja
popa
add
into
addr16
jo
push
or
lds
add
arpl
jo
xor
xor
xor
add
ja
jae
out
pop
ja
bound
bound
popl
dec
jb
pop
ja
bound
jnp
inc
add
test
pop
mov
bound
sub
je
ja
sub
xor
sub
or
pop
add
call
popa
add
add
aas
fidivl
push
jo
push
aad
jno
fcomps
add
jne
or
add
cltd
pop
addr16
add
sbb
sbb
shrl
jb
mov
into
pop
push
outsb
enter
enter
mov
dec
je
test
jb
inc
add
add
add
sbb
sbb
xor
decb
dec
sbb
jmp
pop
pop
add
outsb
mov
jb
mov
jb
jae
imul
push
loopne
gs
add
pcmpgtb
testb
outsl
clc
pop
imul
insl
popa
jns
insb
sub
xor
add
mov
pop
outsb
mov
push
add
add
dec
jno
ja
outsb
add
outsl
insl
jp
popa
add
pop
outsb
test
je
jae
imul
insb
mov
pop
insb
insb
cli
cmp
pop
cmp
addr16
call
fsubrl
fstpt
addr16
adc
insb
jecxz
pop
add
jmp
xlat
adc
jae
fistpl
cltd
cli
pop
arpl
test
in
aaa
add
mov
push
outsw
mov
xor
pop
scas
jbe
dec
test
add
pop
pop
bound
jo
xorl
push
pop
gs
jge
pop
adc
pop
adc
pusha
ja
add
sbb
fs
js
pusha
push
add
arpl
arpl
je
pop
cmp
popa
add
fcomps
js
bound
jbe
jb
jbe
arpl
push
test
or
out
mov
jno
push
mov
popfw
pop
aam
cli
enter
int
pop
pop
pop
push
out
xor
add
mov
add
mov
bound
mov
pop
arpl
pop
das
jmp
add
adc
addr16
sbb
pop
insl
push
flds
dec
int
outsb
xor
fistpl
dec
leave
add
adc
pop
insl
psrld
or
pop
insl
sbb
pop
insl
sti
movsb
pop
add
fwait
pop
outsb
mov
mov
push
lret
movsl
pop
outsb
ret
xor
imul
pop
pop
insl
vdivpd
fs
inc
insw
mov
add
jb
push
dec
outsb
mov
dec
add
mov
and
jae
pop
add
fs
and
insb
xor
outsl
xor
jo
gs
xor
xor
sub
jb
jb
imul
outsl
loope
popa
add
outsb
outsb
jb
insl
repnz
arpl
add
inc
gs
add
aaa
dec
outsb
add
adc
xor
ret
add
dec
gs
pop
outsb
add
je
arpl
gs
jb
jae
mov
sub
jne
adc
jb
sbb
ja
jl
imul
add
pop
dec
pusha
addr16
insw
in
pusha
arpl
xor
push
jo
fisttpl
pop
imul
pop
outsb
xabort
add
movsl
fistpl
popf
adc
popf
fistpl
test
data16
ljmp
int
xor
jno
int3
pop
add
bound
fsubl
push
lds
data16
add
test
jno
pop
sub
sbb
sbb
jno
jno
arpl
and
imul
dec
jb
pusha
pop
js
add
pop
add
fistpl
imul
dec
jne
jb
popa
fsts
arpl
pop
adc
jbe
imul
adc
insl
mov
je
jb
fs
push
add
xchg
jno
pop
xchg
pop
pop
xchg
je
push
shrl
add
mov
fs
jmp
pop
push
add
dec
add
imul
add
push
jno
ss
jns
inc
addr16
sbb
pop
bound
add
dec
int
arpl
outsl
addr16
aad
fs
fidivl
cmp
imul
aad
je
popf
push
je
int3
inc
jbe
test
popa
adc
jno
or
jno
add
push
add
nop
jo
fistps
shll
lret
pop
data16
add
push
fs
imul
jae
outsb
jns
inc
imul
imul
imul
adc
bound
add
loop
sub
add
aas
pop
popa
mov
insb
popa
push
inc
imul
outsb
xor
gs
in
push
popa
addr16
add
aas
je
add
imul
arpl
add
std
imul
cmp
outsb
es
add
mov
insb
add
imul
pop
imul
pop
inc
andl
in
pop
pop
sub
pop
outsb
cli
pushf
je
and
in
arpl
push
add
push
xor
leave
jmp
insb
fisttpl
pop
cli
cmp
aam
pop
add
sbb
into
jmp
push
add
xlat
pop
jne
fucomi
xor
pop
mov
popa
arpl
fstpl
frstor
sahf
adc
fldl
jno
add
pusha
xchg
add
xor
cli
insb
enter
out
cmp
add
les
push
xchg
pusha
and
mov
andb
jnp
push
jno
add
push
mov
out
add
pop
pop
dec
pop
pop
add
inc
jno
add
outsl
jmp
dec
pop
flds
arpl
cmp
fsubrs
pop
fbld
pop
lret
add
pop
cwtl
push
add
add
push
mov
mov
stc
gs
xchg
into
outsl
outsl
jne
stc
insb
je
imul
ja
xor
les
jno
lcall
insl
xchg
add
push
jno
mov
popa
xchg
sbb
shr
xor
inc
pop
sub
or
jmp
int3
xor
sbb
push
arpl
pop
cs
ret
imul
push
sbb
outsb
xor
imul
scas
add
add
xor
pop
jo
imul
inc
inc
jae
cs
popa
add
add
outsl
je
or
sub
push
je
cmp
std
pop
outsl
xchg
xor
pop
cs
add
outsl
jo
fs
addr16
test
sub
xor
push
insb
xor
popa
add
push
dec
xor
inc
sbb
inc
push
or
dec
pop
inc
xor
and
push
mov
sbb
add
cli
and
cs
inc
cs
push
sti
in
add
cli
in
add
cli
in
push
dec
cmp
dec
aas
dec
mov
dec
push
lret
outsl
insl
imul
outsb
jno
stos
jo
dec
xchg
push
je
mov
and
pop
outsb
sub
insb
es
push
outsb
and
push
push
push
cmp
fucomp
cmp
pop
add
jecxz
bound
jmp
add
jmp
add
jmp
add
dec
jb
xlat
add
xor
add
add
push
lret
inc
add
frstor
pop
mov
push
pushf
push
push
pop
cltd
xor
mov
push
cmp
outsb
lret
push
mov
pusha
dec
push
rclb
dec
lret
add
add
add
add
add
popa
cltd
insb
sub
xor
push
cli
inc
jns
or
push
or
outsl
sbb
aas
sbb
add
add
dec
pop
cli
xor
pop
out
dec
jb
inc
push
pop
fdivl
add
test
insl
cmp
add
sbb
popa
insb
add
ret
sbb
inc
arpl
iret
outsl
insb
or
mov
stc
add
jmp
stc
lods
daa
test
popf
daa
test
add
lret
daa
test
mov
daa
test
fldenv
test
lock
stc
sbb
test
cmp
test
pop
sub
stc
add
jmp
jns
add
stc
dec
ja
mov
outsb
add
push
add
arpl
sbbb
or
inc
add
popa
pop
push
sbbb
add
pop
insb
inc
inc
jo
add
xlat
addr16
adc
add
xchg
daa
add
jecxz
pop
arpl
cmp
add
pop
andb
pop
add
xor
mov
add
roll
andb
pop
add
push
je
xchg
outsb
add
xchg
pop
addb
daa
inc
outsl
subb
jge
outsl
add
add
add
pop
imul
cmp
arpl
sti
in
add
add
sbb
adc
push
mov
add
clc
in
add
mov
or
xchg
push
push
imul
add
jp
add
cli
scas
jb
dec
fwait
outsl
and
enter
mov
je
int
addr16
shll
and
in
add
jp
add
cli
lods
imul
insb
jno
pop
fs
pop
push
add
add
pop
jb
jmp
add
or
add
xor
push
pop
jae
arpl
stos
imul
sahf
inc
inc
addr16
sbb
push
cmp
popf
push
jae
push
sub
push
stc
push
mov
jae
cmp
push
push
pop
push
mov
outsl
sbb
outsl
pop
pusha
mov
ss
xchg
aaa
add
dec
sub
xor
pop
icebp
dec
pop
push
fwait
sbb
add
sbb
sbb
iret
or
arpl
sub
fs
call
pusha
arpl
popa
je
or
xor
pop
inc
insl
pop
shlb
adc
xchg
push
push
cld
cld
push
inc
push
mov
or
and
push
arpl
testl
aad
xor
push
sbb
enter
rclb
shrb
sub
xchg
aam
je
adc
imul
inc
insl
add
popa
outsb
inc
outsb
jo
fs
imul
cmp
or
xor
push
inc
arpl
cmp
and
push
jp
mov
pop
das
das
push
xor
dec
popa
imul
add
icebp
push
popa
cmp
dec
dec
fisubs
xor
inc
stc
pop
push
cli
push
outsl
in
xor
cmp
sub
or
or
inc
mov
je
xchg
das
sub
arpl
decl
pusha
pop
je
push
outsb
cmp
push
outsl
and
movsl
xor
cs
dec
adc
enter
lods
fs
xlat
cmp
sub
add
out
jecxz
popa
flds
je
sub
aad
imul
and
inc
outsb
je
stc
pop
sub
mov
outsl
fistpll
imul
pop
addr16
pop
sbb
cltd
add
pop
mov
dec
sub
mov
and
mov
insb
pop
int
xor
fsubl
sub
jo
sbb
mov
fiaddl
dec
cmp
lret
ss
push
sbb
sub
or
or
sub
sub
sub
inc
pop
lods
push
push
adc
daa
inc
jo
add
imul
push
and
dec
cltd
push
xor
cltd
push
sub
mov
add
daa
add
add
xlat
push
dec
fs
push
add
cli
add
addr16
fs
or
add
and
jmp
sbb
je
ss
je
push
imul
stc
inc
push
jle
popa
outsb
xor
imul
scas
add
pop
aad
push
push
rolb
cmp
pusha
inc
inc
int
arpl
cltd
push
arpl
incb
add
jb,pt
popf
add
sbb
add
push
dec
or
add
je
inc
push
insl
fildl
arpl
stc
inc
jb
sub
add
das
inc
gs
aas
jb
cmp
fs
popa
subb
jge
popa
js
or
add
popa
dec
gs
add
push
push
shll
shlb
add
fs
add
imul
mov
popa
dec
mov
inc
outsb
push
add
aam
je
cld
pop
popa
outsb
fisubl
outsl
add
je
popa
outsb
add
bound
divb
je
lret
outsl
mov
lret
fs
arpl
inc
add
mov
push
arpl
popf
add
push
addr16
insl
arpl
jns
aas
cli
pushf
gs
dec
push
push
add
in
data16
lret
jbe
cmp
xlat
cs
fldcw
pop
jo
out
adc
add
or
push
je
clc
xor
out
pop
aas
cli
push
pop
jb
sub
xchg
push
pop
jb
hlt
popa
addr16
std
dec
arpl
push
outsb
add
stos
pusha
dec
pop
stos
addr16
push
les
dec
bound
pop
sub
data16
sbb
inc
mov
pop
test
fwait
pusha
sub
push
and
dec
out
cli
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
cmp
mov
push
or
xor
loop
xor
rcrl
and
or
pop
int3
or
pop
les
pop
pop
or
pop
pop
add
push
pop
or
push
pop
dec
incb
cmp
enter
pop
arpl
bound
add
negb
sbb
and
add
add
adc
ja
add
hlt
imul
lods
inc
jae
mov
pop
inc
ret
push
xchg
arpl
cmp
adc
dec
mov
je
xchg
sbb
jg
pop
jb
sbb
jno
pop
push
pop
aas
arpl
cmp
adc
dec
je
je
push
sbb
mov
add
or
popa
lods
das
fs
stos
arpl
inc
gs
pop
jb
testl
je
sbb
cli
icebp
dec
pop
mov
cmp
lret
adc
push
arpl
imul
stos
dec
insl
dec
in
inc
mov
dec
mov
push
jne
mov
inc
push
je
mov
push
arpl
fiadds
add
sbb
add
jbe
pushw
dec
daa
addr16
add
dec
push
mov
xor
mov
push
je
inc
push
inc
into
sub
arpl
fnsave
insl
xchg
adc
test
cmp
add
push
cmpsb
imul
pusha
xchg
push
sbb
pop
adc
push
pop
add
add
mulb
ret
bound
pop
push
mov
add
push
pop
enter
push
sbb
aaa
cmp
pop
mov
xor
add
cmp
push
pop
pop
jnp
loop
xchg
xor
inc
fwait
xor
xor
int3
push
push
data16
cs
sub
sub
add
inc
mov
add
call
inc
inc
cmp
mov
push
ja
add
enter
inc
jb,pn
xor
push
pop
cs
sbb
push
push
lods
or
inc
push
mov
push
pop
arpl
adc
enter
mov
sub
cmpsb
adc
xor
test
inc
pop
stos
lret
cmpsl
sbb
xor
jno
loope
outsb
dec
loop
dec
sub
pusha
insl
cmp
add
and
out
pop
jb
or
insb
fsubl
insb
rolb
push
or
jne
sub
xor
sub
nop/reserved
push
cld
popa
insb
lods
sub
ss
pop
xchg
imul
dec
inc
bound
inc
pop
pusha
cmp
sbb
and
popa
jae
pop
imul
pop
push
push
sbb
outsl
pop
jb
add
imul
pop
jb
adc
insb
lods
pop
insb
adc
push
cli
sbb
inc
xor
into
in
and
ficoml
xor
or
cwtl
cld
push
add
cld
push
arpl
std
addr16
cmp
dec
je
and
push
sbb
and
dec
mov
push
dec
mov
sub
pop
add
sub
xor
pop
popl
sub
pop
inc
mov
pop
mov
jns
inc
mov
push
dec
arpl
pop
arpl
sub
pusha
iret
dec
pusha
lret
inc
sub
sub
pop
scas
popa
sub
pop
mov
das
mov
xor
add
push
cld
and
sti
add
add
push
add
ds
sti
fs
pop
lods
sub
sub
add
pop
int
inc
fldcw
inc
shll
movsl
sub
lcall
pusha
ret
dec
push
fs
add
popa
jmp
mov
pop
jns
lds
subl
push
pop
pop
scas
add
dec
lods
push
pop
inc
fisubl
dec
rcrb
xchg
push
pop
daa
cltd
pop
fs
les
sbb
add
pusha
pop
adc
lahf
arpl
pop
sub
cmp
jb
sbb
cmc
stc
sub
push
push
push
sbb
sub
push
push
push
cmc
stc
sub
cmp
pop
pop
jmp
adc
xchg
pusha
arpl
xchg
popa
outsb
fbstp
popa
jb
pop
jb
add
in
imul
jp
mull
mov
fs
gs
pop
aas
gs
sbb
mull
push
hlt
pop
je
add
popa
pop
sbb
sub
insb
repnz
insb
cli
pop
outsb
je
or
scas
arpl
inc
gs
or
jae
add
jae
xor
push
mov
outsl
add
jb
mov
add
and
cltd
pop
jb
mov
in
push
and
test
cli
push
jb
adcb
cs
je
or
les
push
cs
sub
cli
ljmp
lret
jno
ljmp
stos
notb
cli
or
xor
push
add
popa
jno
mov
data16
xchg
pusha
jno
add
cmp
push
pop
mov
sub
xor
pop
mov
dec
sbb
mov
bound
push
cli
cmp
callw
push
sbb
fwait
lret
push
pop
xor
push
push
imul
pop
out
int
cmp
popa
cmp
push
pop
cmp
xor
and
gs
pop
add
push
and
or
pusha
stc
add
pop
push
push
fistpl
push
inc
fcompl
pusha
shll
sub
fidivl
into
gs
add
sub
call
bound
stc
xor
int
pop
fwait
loop
inc
cltd
mov
push
insb
test
push
and
push
aas
push
cmp
cmp
aam
push
add
xchg
push
jne
enter
ret
pop
insb
dec
mov
jb
lods
pop
and
movsl
pop
je
xchg
push
arpl
bound
sti
inc
pop
leavew
aaa
xor
cmp
add
push
pop
mov
pop
outsb
jmp
dec
es
fldl
add
push
pop
push
sub
insb
sub
imul
push
push
aas
push
jo
jp
outsb
jae
adc
add
out
pop
jb
adc
popa
je
xor
mov
dec
outsl
mov
jae
rcrl
inc
fs
gs
jb
lods
pop
and
adc
inc
iret
sub
out
dec
jo
sub
adc
dec
outsl
cmc
pop
jae
loope
pop
inc
add
push
jecxz
pop
jae
cmc
pusha
jae
pop
imul
insb
gs
lods
xor
leave
push
inc
adc
or
push
pop
es
or
pop
add
jg
pop
call
lods
inc
pop
in
lcall
fimuls
je
pop
dec
cs
dec
pop
add
inc
push
fs
add
cmpsl
push
pop
imul
adc
jae
cvtdq2ps
std
add
adc
jne
and
dec
rorl
in
aaa
push
add
cli
add
jno
or
enter
mov
bound
sub
das
xor
movsl
aaa
sub
les
mov
mov
inc
cltd
data16
sub
frstor
mov
push
xchg
cmp
pop
and
cmp
push
push
push
popf
xor
cli
push
dec
push
mov
inc
push
add
xchg
add
push
cltd
ss
cmp
sbb
aaa
sbb
sub
data16
pop
dec
add
je
add
jno
add
stc
push
insl
fstpt
aaa
outsb
enter
cltd
push
xor
mov
shrl
popf
mov
sub
xchg
enter
adc
and
and
add
mov
arpl
les
arpl
push
jb
cwtl
sub
add
inc
cwtl
cmp
lods
and
push
or
sub
push
inc
daa
sub
add
pusha
je
rolb
add
and
add
cmc
push
add
push
dec
xchg
push
jb
mov
sbb
inc
add
aas
cmc
pop
inc
fwait
push
insb
outsl
xchg
and
add
sub
ja
push
push
inc
inc
js
pop
jb
mov
call
imul
pop
push
les
jae
and
inc
inc
out
pop
imul
sub
cli
jmp
je
mov
push
dec
mov
jb
sbb
sub
js,pt
ficompl
add
pop
fsubl
addr16
leave
push
add
push
jno
iret
push
fs
popf
bound
ja
jb
orb
lods
cmp
mov
pop
outsb
cli
popf
pop
jb
lods
cmp
inc
pop
pop
popf
bound
aas
je
cli
pop
je
pop
dec
imul
pop
pop
mov
add
inc
pop
addr16
adc
pop
mov
dec
arpl
cmp
add
or
pop
imul
fs
daa
sub
cli
push
pop
xor
push
cli
push
popa
cs
push
sbb
bound
rcrb
lcall
pop
out
pop
das
lds
in
out
sub
fidivrs
cltd
bound
nop
dec
fnstenv
int
loope
out
mov
xor
enter
lret
sub
aam
cmp
cli
push
dec
push
mov
cmp
xor
dec
test
pop
cmp
add
or
jne
dec
sub
das
dec
xor
add
sub
xor
cmp
ja
sub
int3
sbb
sbb
lret
dec
es
sbb
add
cs
arpl
and
outsb
mov
out
arpl
mov
pop
jl
add
add
jp
xor
mov
add
movsb
xor
das
jb
notb
dec
lret
pop
fwait
pusha
inc
add
push
gs
in
dec
rclb
or
push
jo
std
inc
jb
add
push
gs
push
cs
add
jo
push
outsl
ja
push
and
or
and
push
data16
add
outsl
inc
js
mov
inc
jb
dec
popa
add
std
jno
test
dec
fcompl
jo
jb
jbe
add
and
dec
jb
popa
add
and
les
fs
stos
and
fwait
pop
dec
jne
stc
pop
add
call
subl
pop
push
out
push
dec
add
jne
rcrb
add
or
dec
add
sub
jle
popa
sbb
dec
outsb
filds
inc
fidivs
arpl
jl
jb
arpl
das
jg
jb
int
arpl
imul
mov
in
orb
push
je
popf
bound
xor
lods
cmp
pop
jb
add
push
lahf
ss
add
dec
sub
aas
mov
sub
push
dec
pop
add
mov
dec
push
cltd
pop
and
sub
sub
push
cli
push
pop
dec
xor
push
pop
pop
and
pop
pop
sub
daa
dec
fistpl
add
fisubs
and
sub
sub
xor
sub
pop
in
ret
xor
xor
fildl
daa
mov
lcall
add
arpl
aad
insl
pop
out
dec
pop
jecxz
add
jecxz
push
inc
ret
inc
shll
add
sub
push
or
xor
and
mov
and
push
add
ss
inc
es
sub
stos
xor
arpl
sub
and
je
add
sub
jno
pop
xor
or
pop
inc
add
gs
jno
xor
scas
pop
jb
add
lock
add
xlat
jmp
jo
jmp
gs
fs
icebp
sub
jb
std
pusha
jae
call
dec
gs
push
popa
shr
pop
dec
fildll
fists
push
adc
push
push
add
bound
pop
push
in
pop
jo
loopne
mov
loopne
insb
arpl
jae
xchg
inc
pop
je
inc
gs
push
pop
jae
push
cli
xchg
dec
in
xor
add
mov
arpl
popf
sub
push
and
popa
cmpsb
inc
ss
sti
jb,pn
icebp
xor
cwtl
inc
add
cs
pop
adc
add
push
add
jne
sbb
pop
inc
or
in
dec
adc
add
jmp
push
das
addr16
pop
inc
push
and
es
aam
addr16
cltd
dec
arpl
push
addr16
rolb
fildl
xor
daa
cltd
daa
cli
push
cltd
das
cli
push
lcall
add
xor
xor
aaa
lahf
xor
lret
cmp
add
push
inc
sub
pop
sbb
mov
dec
in
sub
adc
pop
sub
push
sub
xor
and
ss
das
or
cmp
or
sub
daa
cli
add
fnstcw
sbb
mov
sub
out
cs
pop
inc
aas
inc
fwait
push
aaa
dec
out
es
add
sub
jmpw
jb
adc
insb
mov
add
add
mov
xchg
pop
jno
cmp
jge
cli
sub
stc
sub
pop
out
xor
arpl
cli
sub
stc
sub
enter
xlat
es
and
jmp
and
pop
sbb
pop
dec
sbb
xor
sub
data16
or
jb
testb
in
in
add
and
aam
ja
testb
int
inc
mov
add
enter
scas
out
push
mov
add
jb
test
push
scas
inc
pop
jae
in
imul
gs
pop
outsl
outsb
cmc
pop
outsb
ja
jae
mov
gs
bnd
shlb
inc
shr
dec
movl
jb
shr
inc
inc
in
inc
dec
pop
add
add
adc
dec
pop
inc
iret
loopne
jae
add
icebp
pop
push
cli
lock
dec
cli
loop
jnp
inc
sub
inc
out
mov
out
xor
insl
inc
sub
imul
scas
hlt
ds
dec
xor
popa
add
pop
push
push
mov
aaa
and
leave
mov
pop
cmpsb
test
arpl
test
pop
mov
dec
aas
out
sbb
xor
or
enter
lds
repz
add
loopne
aaa
sub
lock
jmp
and
jb
pmaxsw
adc
es
jmp
sbb
add
dec
add
enter
add
inc
cs
popf
sub
es
es
push
cltd
sub
and
in
fisubl
test
fdivl
lcall
inc
lcall
add
cmp
popf
push
lret
push
cmp
cmp
and
dec
stos
push
sub
mov
std
negl
sub
sub
push
xor
push
sub
cmp
out
xor
mov
aas
sub
std
inc
and
and
xor
ja
in
je
sub
das
sbb
hlt
jb
shll
outsb
mov
es
mov
add
adc
push
mov
lret
push
inc
test
aaa
ja
add
loop
scas
or
arpl
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
xor
pop
cmp
shll
insb
or
pop
cmp
and
jo
out
fdivrp
jb
ljmp
add
cmpsl
fildll
xchg
sti
insb
insb
stos
loop
xor
mov
sti
insb
insb
dec
loop
xor
outsl
jno
loope
xor
outsl
ja
push
je
sti
pushl
jmp
pop
arpl
bound
pushl
fsubl
mov
pushl
frstor
mov
add
insl
add
imull
cli
nopl
and
add
sub
sub
pop
jo
or
sub
add
shrb
mulps
leave
xor
or
addr16
enter
lret
xlat
jno
cli
mov
jecxz
and
movsl
jle
insb
cwtl
daa
pop
cwtl
jg
cli
fwait
add
cli
fwait
add
cli
fwait
add
add
cli
fwait
add
cli
fwait
add
cli
fwait
add
cli
fwait
add
cli
popf
add
cli
popf
xor
dec
sub
sbb
pop
pop
adc
xor
and
add
xor
repz
out
inc
cmp
add
fldt
and
pop
pop
mov
xor
sbb
shlb
pop
mov
das
cli
xor
add
add
pop
test
fists
sub
repz
mov
and
in
sub
in
sub
push
mov
in
sub
dec
and
add
and
jo
cmc
sub
in
xor
sbb
push
popa
sti
lock
add
push
pop
cli
out
cmp
std
in
mov
loop
pop
lds
add
sub
movb
das
and
into
xor
addr16
and
arpl
scas
and
or
mov
cmp
loopne
insb
mov
fldt
mov
adc
sub
loope
je
add
sub
sarl
je
xor
cmp
cld
or
and
pusha
inc
pop
pop
outsl
imul
out
in
dec
or
data16
or
ljmp
jmp
pusha
jns
add
cmp
data16
fistpl
mov
hlt
pop
add
out
add
out
popa
pop
push
jb
jne
imul
add
pcmpeqb
repnz
pop
pusha
arpl
inc
ds
stos
fwait
inc
jo
add
sub
fbld
pop
dec
inc
addr16
adc
pop
dec
adc
arpl
add
push
sbb
inc
and
and
dec
out
add
in
jbe
lret
pop
lret
jecxz
sbb
add
outsb
cmp
xor
enter
mov
dec
inc
mov
hlt
cs
int
ds
aas
sub
insb
sbb
add
add
ret
inc
cmp
enter
imul
sbb
mov
adc
cmpsb
cmp
mov
cmp
add
cmp
pop
aaa
cmp
dec
sbb
add
inc
xor
sbb
pop
aaa
out
dec
push
or
call
add
or
sbb
fildl
cs
fisubrl
or
cmp
fdivl
les
add
aam
mov
daa
out
mov
cli
push
nop
and
mov
inc
jns
xchg
and
test
add
lcall
push
or
sbb
sub
inc
add
stos
insl
cmp
sbb
sbb
arpl
or
jb
cmp
arpl
ljmp
pand
add
add
fidivl
ja
in
xor
ficompl
insb
jmp
int
outsb
fldcw
sbb
xor
dec
add
stc
add
jmp
stc
inc
dec
dec
cmpsl
mov
jmp
pop
popa
cmp
mov
and
inc
dec
in
mov
mov
jecxz
add
cmp
roll
and
loope
add
add
jae
add
pusha
pop
push
or
hlt
icebp
push
andnps
scas
fnsave
in
pop
inc
stos
imulb
xchg
fnsave
dec
in
gs
gs
mov
push
outsl
mov
bound
push
add
push
push
pop
add
popa
add
push
cmp
sub
jns
sub
aam
cli
add
cli
mov
add
add
add
cli
cmp
xor
adc
cli
add
cli
or
add
cli
scas
add
add
cli
mov
data16
lret
cli
fcomps
popa
dec
add
push
and
cmp
mov
sub
stc
aaa
jo
push
ljmp
shll
je
mov
and
inc
fst
and
fwait
push
addr16
push
arpl
jno
jb
add
push
add
fnsave
test
ss
sub
cmp
ss
add
sbb
pop
lcall
fisttps
scas
pop
dec
push
mov
out
pop
xor
xor
sub
push
dec
pop
xor
cmp
sbb
pop
xor
ss
add
cmp
sub
or
add
dec
xor
ss
push
add
sbb
or
add
fsubs
add
jmp
mov
dec
mov
in
add
sbb
outsb
jmp
scas
and
adc
and
fisttpll
cmpsl
lds
fcompl
jae
aam
push
cltd
stc
xor
cs
in
add
aad
and
sub
in
dec
and
sbb
cmp
adc
sbb
adc
add
fldenv
insb
add
fdivr
iret
stc
in
sub
aaa
push
sbb
xor
aas
mov
xor
push
movsb
stc
inc
dec
add
inc
push
inc
lcall
addr16
outsb
add
addr16
pop
jne
pop
add
lock
ja
icebp
arpl
loop
jne
add
mov
insl
popa
scas
fstpl
inc
in
add
jecxz
jae
stc
lds
dec
in
jae
leave
sub
cmp
jae
loopne
sub
shll
inc
outsl
cld
filds
jb
in
add
inc
push
jne
add
hlt
push
mov
insb
jne
lret
fnstsw
sub
das
insl
out
push
insb
push
inc
aam
xor
inc
mov
mov
imul
xchg
sub
add
sub
imul
sbb
push
cmp
dec
push
call
aas
arpl
sbb
sub
inc
and
push
add
sub
sbb
jno
loopne
sbb
sub
sbb
cli
or
pop
sbb
int
aaa
push
mov
jmp
fldt
jmp
mov
push
add
aad
les
cli
dec
popf
sbb
sbb
push
shl
mov
sbb
xor
push
out
cli
xor
aaa
cli
sbb
sbb
cli
add
dec
mov
sbb
dec
addr16
and
inc
daa
push
cmp
bound
aas
inc
cs
and
sub
dec
adc
pop
adc
sbb
add
add
push
add
je
fsts
fs
mov
push
jno
sbb
adc
pop
mov
add
sbb
jmp
pop
cmpsl
add
daa
pop
xchg
lds
mov
daa
inc
jne
inc
push
dec
ret
dec
pop
push
add
sbb
repnz
add
es
sub
add
push
push
push
out
outsb
sub
push
call
imul
add
add
mov
outsl
inc
aam
je
xor
pop
outsl
imul
xchg
inc
sub
ja
gs
dec
popa
jae
call
dec
dec
pop
cmp
jno
pop
inc
add
xchg
outsb
jae
fistpl
pop
fldenv
cmp
pop
jnp
mov
xor
dec
cmp
push
inc
ss
sarl
sub
dec
xor
xor
mov
in
inc
cmp
dec
das
in
inc
xor
mov
add
mov
add
sub
outsb
aad
xlat
ja
pop
add
enter
scas
push
test
stos
xor
jle
insl
test
loope
jmp
and
cli
sbb
arpl
push
ss
push
das
insb
data16
fs
ds
jno
divb
cli
stc
add
ss
sub
fcos
aas
clc
push
and
xor
push
add
sub
and
repz
sbb
add
push
inc
sub
push
fadds
add
repz
sbb
sbb
dec
cmpsl
inc
cltd
inc
cmpsb
ss
dec
lret
inc
lods
dec
lret
xor
cli
dec
xchg
push
fiaddl
xor
pop
inc
pop
xor
add
push
sbb
out
pop
adc
dec
in
and
adc
and
xor
add
adc
or
dec
addr16
and
add
repz
sub
les
int3
das
pop
arpl
mov
hlt
call
stc
sub
adc
pop
xlat
out
pushf
jecxz
fmuls
jmp
das
xlat
sub
repz
or
out
add
out
incb
je
sbb
arpl
add
das
inc
push
cmp
add
add
dec
inc
sti
pop
xlat
incl
fnstenv
neg
pusha
jb
xor
add
push
outsl
add
call
clc
push
imulb
pop
inc
mov
pusha
jb
out
pop
imul
jne
add
jne
jno
inc
cld
insl
data16
cmp
std
bound
loop
gs
test
pop
insb
add
xchg
cmp
and
imul
pop
jb
inc
dec
imul
addr16
ds
push
jne
fisttps
fistpl
jno
xor
cmp
loopne
pop
dec
dec
add
sub
xor
adc
add
xor
lahf
das
fs
sti
adc
push
out
imul
xor
or
imul
and
movsb
xor
xor
push
push
add
sarb
push
je
pop
and
adc
add
movsl
lea
pop
mov
mov
mov
push
insl
xchg
pop
cs
mov
loope
pop
add
dec
xor
inc
in
sub
pop
adc
cmp
pop
adc
sbb
daa
das
xor
sub
add
cmp
in
sub
xor
add
and
xor
cs
pop
cli
inc
mov
xor
sub
and
sub
xor
add
dec
stos
in
and
sbb
adc
pushf
in
and
and
dec
stos
in
xor
adc
jmp
adc
insb
push
mulb
je
sub
gs
icebp
add
push
in
adc
add
or
pop
and
sub
mov
inc
in
xor
or
insl
xor
into
add
or
cmp
add
das
sub
add
sub
fimull
add
int3
and
jno
loopne
arpl
fists
jo
adc
arpl
adc
addr16
lret
jg
in
add
incl
add
dec
imul
pop
dec
xor
imul
jo
cmp
pop
inc
sub
push
xor
add
inc
jecxz
mov
inc
roll
pop
dec
roll
rorl
add
dec
jecxz
fistl
aam
roll
ficoms
add
mov
pop
pop
pop
xchg
pop
loopne
mov
pop
and
arpl
add
gs
jmp
data16
insl
add
popf
insl
add
xchg
insl
add
push
add
add
in
add
in
add
push
in
add
in
add
inc
in
add
in
add
in
add
in
add
in
add
insb
in
add
in
add
in
add
xchg
in
add
add
insb
add
subb
insb
add
popa
insb
add
xchg
insb
add
arpl
arpl
cmpsl
add
cmpsl
add
pop
cmpsl
add
pop
cmpsl
add
pop
cmpsl
add
pop
cmpsl
add
daa
add
pop
daa
add
pop
daa
add
les
add
les
add
les
add
ret
daa
add
daa
add
lds
add
add
shll
int3
mov
daa
add
int3
daa
add
lret
daa
add
daa
add
daa
add
mov
add
mov
add
scas
cmpsl
add
mov
add
stc
add
test
stc
add
jmp
stc
add
jmp
stc
add
jmp
and
je
cmp
add
divb
push
cld
inc
dec
push
ss
sub
das
add
js
mul
das
fndisi(8087
add
sbb
and
or
adc
lock
in
out
lcall
mov
adc
leave
cld
or
int
sub
lock
out
or
in
add
fbstp
xor
or
mov
and
je
jae
xor
and
add
add
sbb
and
mov
add
mov
sbb
add
jmp
js
inc
lock
adc
outsl
push
mov
popa
insb
out
add
add
push
imul
sub
push
dec
mov
xor
xchg
add
add
loopne
insl
jae
jno
dec
aad
je
shll
cli
mov
insb
add
xlat
mov
xor
lods
les
push
lahf
push
pop
mov
dec
movsl
jns
xchg
pop
adc
je
arpl
imul
pop
adc
push
push
xor
outsb
dec
cmp
jbe
inc
daa
gs
lods
xor
dec
and
fdivl
jb
sub
daa
add
xor
lock
pop
fcoml
addr16
xor
add
aad
popa
call
cld
push
insl
out
add
xor
sub
sub
pop
into
sub
xor
inc
lret
adc
es
xor
sub
and
sub
mov
lahf
pop
out
cli
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
add
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
add
or
add
add
push
or
add
add
arpl
add
arpl
add
push
or
add
add
and
and
add
adc
add
adc
add
and
add
and
add
adc
add
adc
add
jecxz
add
jecxz
add
roll
add
roll
add
jecxz
add
jecxz
add
roll
add
roll
add
mov
pop
add
xchg
pop
add
xchg
pop
add
mov
popf
add
cli
popf
add
cli
popf
add
cli
popf
add
cli
popf
add
add
cli
popf
add
cli
popf
add
cli
popf
add
cli
popf
add
cli
popf
add
cli
popf
add
cli
popf
add
cli
popf
add
cli
popf
add
cli
popf
add
cli
popf
add
cli
popf
add
cli
pushf
loopne
xchg
adc
lret
in
mov
xor
and
out
pop
sbb
inc
cli
sti
add
cli
mov
add
mov
add
cli
fwait
add
add
cli
add
add
add
add
add
out
clc
add
add
out
cli
add
inc
cli
add
jecxz
xchg
out
push
xchg
out
cli
add
incl
out
cli
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rcll
add
aam
in
hlt
add
cld
add
and
lock
repz
adc
adc
add
out
fdiv
decl
add
lret
int3
stos
incb
in
frstor
std
popf
std
add
mov
add
testl
push
out
data16
adc
data16
sbb
imul
sbb
cli
clc
push
decl
add
clc
incl
adc
and
dec
out
and
adc
out
enter
add
add
in
sbb
std
xchg
add
stc
add
jmp
in
add
stc
popl
in
aad
std
in
add
jmp
mov
nop
incb
xchg
nop
incb
xchg
nop
std
call
add
add
add
add
nop
std
add
std
add
call
jmp
std
add
std
add
add
std
add
std
jmp
add
add
add
add
add
call
add
add
nop
std
call
nop
call
add
add
add
jmp
incb
xlat
add
add
add
add
incb
jecxz
add
jecxz
add
cli
popf
std
mov
popf
add
lods
popf
std
movsl
mov
std
call
test
std
incb
add
std
cli
mov
add
cli
mov
add
sti
mov
std
incb
std
cli
test
std
cli
popf
std
cli
popf
add
cli
test
std
decb
mov
adcl
jp
addl
cli
fwait
add
cli
add
add
add
add
test
test
test
add
add
test
test
test
orl
out
cli
test
cmp
out
ljmp
add
test
orl
movl
cli
test
add
add
add
test
cmp
pop
test
add
add
test
add
add
out
cli
add
orl
pop
test
add
sub
out
ljmp
add
add
addl
or
add
stc
hlt
dec
jns
sub
hlt
jg
jns
jg
jns
add
stc
hlt
jg
jns
orb
add
or
jg
jle
dec
stc
add
jmp
stc
add
leave
jns
add
jns
jg
stc
hlt
dec
stc
add
leave
stc
hlt
decl
jbe
orb
add
or
hlt
call
stc
add
jmp
add
jns
orb
add
jmp
stc
hlt
jg
jns
jg
jns
jmp
sti
add
add
push
add
rorl
add
fisttpl
add
jecxz
add
jecxz
add
lret
push
add
roll
add
fwait
or
add
or
or
push
add
mov
add
xchg
or
or
or
or
add
push
push
add
add
push
push
add
arpl
add
arpl
add
dec
or
or
add
sbb
add
and
add
adc
add
sbb
add
sbb
add
or
add
adc
add
cli
popf
add
add
add
repnz
add
cli
movsl
cli
popf
add
cli
popf
incl
repnz
push
popf
add
cli
popf
cli
xchg
add
cli
xchg
incl
repnz
incl
add
cmpsb
add
add
add
cli
movsl
add
add
add
cli
popf
add
repnz
incl
add
incl
cli
popf
incl
cli
movsl
add
add
push
xchg
cli
popf
add
add
out
add
add
add
cld
out
clc
add
jecxz
add
push
add
add
jecxz
add
push
add
call
add
add
jecxz
add
push
add
add
add
add
add
add
call
jecxz
mov
add
call
add
add
add
call
in
mov
jp
call
in
mov
imul
mov
imul
add
or
push
incb
imul
test
jmp
fimuls
add
add
jmp
stc
add
jmp
cltd
mov
imul
test
call
cltd
or
push
cltd
mov
imul
or
push
stc
add
jmp
stc
test
call
add
pop
or
push
sbb
std
call
add
jge
mov
add
std
jmp
jge
jecxz
add
roll
or
roll
add
add
inc
jecxz
or
roll
add
roll
inc
mov
add
inc
xchg
add
add
add
inc
mov
add
inc
xchg
add
add
add
add
add
add
or
add
inc
arpl
add
add
add
inc
push
add
inc
cli
popf
add
clc
popf
add
mov
popf
add
cli
popf
add
mov
popf
add
clc
popf
add
cmp
add
cli
popf
add
cmp
add
clc
popf
add
cmp
add
cmp
cmp
add
cmp
add
clc
popf
add
cmp
add
clc
popf
add
mov
popf
add
cli
popf
add
mov
popf
add
clc
add
add
add
add
inc
out
cli
inc
out
repnz
add
add
add
inc
out
add
out
repnz
out
add
out
cli
inc
testl
add
cli
in
add
in
inc
cli
add
inc
cmp
out
cmp
testb
add
inc
cmp
out
cmp
inc
cmp
xlat
add
in
add
add
out
cli
in
inc
cli
add
add
add
add
in
call
mov
add
stc
stc
add
stc
stc
inc
and
stc
inc
and
add
stc
add
fnstcw
inc
and
mov
inc
add
cmp
jmp
cmp
add
stc
inc
and
cmp
fnstcw
inc
and
stc
inc
add
cmp
and
stc
inc
add
cmp
and
cmp
and
cmp
jmp
stc
inc
and
mov
inc
inc
and
add
add
xor
inc
and
add
add
add
and
inc
and
inc
inc
add
inc
add
inc
add
xor
and
add
add
inc
inc
and
add
and
or
repz
or
add
or
add
cmp
jecxz
add
roll
std
add
sbbb
xchg
or
add
add
or
add
or
add
outsl
stc
jmp
stc
stc
outsl
stc
pop
cli
outsl
add
cli
insl
stc
stc
outsl
add
imulb
and
insl
stc
pop
imulb
and
insl
add
imulb
call
jo
pop
insl
stc
pop
cli
outsl
add
cli
insl
add
imulb
pop
cli
insl
add
imulb
pop
cli
insl
add
cli
outsl
stc
incl
add
outsl
stc
stc
outsl
add
outsl
add
imulb
add
outsl
add
cli
insl
add
insl
stc
stc
insl
add
cli
insl
stc
pop
testb
jne
jmp
sti
add
sub
cli
or
sti
in
or
add
or
sti
fldl
add
add
add
add
sti
add
add
sti
cmc
add
add
or
sti
add
add
or
sti
cmc
push
out
in
sub
sbb
out
aad
out
testb
stc
adc
add
adc
hlt
mov
daa
add
add
add
adc
add
add
add
adc
hlt
stc
adc
jmp
mov
adc
outsb
push
add
imul
adc
incb
jmp
dec
cmp
dec
push
add
add
stc
or
test
sub
adc
stc
add
jmp
stc
or
test
jmp
add
add
stc
or
jmp
leave
cmp
sub
or
jmp
scas
add
or
add
or
adc
or
arpl
arpl
std
rcpps
add
and
add
adc
add
push
add
std
packsswb
movlps
add
and
add
jne
add
std
call
std
jmp
add
adc
je
adc
xor
jmp
add
add
add
add
std
ljmp
std
incl
add
add
add
insl
add
cli
dec
sub
xchg
sbb
decl
outsb
add
cli
insl
add
cli
subl
jmp
sub
pop
outsb
add
cli
insl
add
cli
mov
incl
cs
cmp
outsb
add
cli
insl
add
cli
iret
lcall
sub
or
insl
add
cli
push
and
cmc
icebp
sub
jmp
insl
add
add
cli
insl
add
cli
xchg
and
int
sub
mov
add
add
add
and
jg
sub
add
add
add
and
sub
cli
add
add
add
add
add
add
add
add
add
sub
cmp
jg
sub
jg
sub
jg
sub
add
adc
jg
sub
jg
sub
jle
sub
jle
sub
jle
sub
jle
sub
jle
sub
jle
sub
jle
sub
jle
add
loope
std
not
jge
fnstsw
sbb
jge
sub
jge
sbb
sarb
xor
and
andl
jle
push
adc
mov
add
and
xchg
adc
jmp
jle
iret
loop
std
pop
jecxz
std
stos
sarb
int
jge
int
jge
pop
jecxz
std
mov
jge
jg
jge
daa
and
aaa
and
add
adc
stc
pop
jle
add
daa
std
incl
daa
std
call
daa
std
call
sub
incl
daa
std
incl
add
std
ljmp
std
pushl
add
add
std
call
add
inc
es
call
es
jmp
and
std
call
std
call
es
incl
es
call
add
add
es
jmp
or
add
and
std
cli
insl
add
cli
inc
and
int
and
lds
mov
xchg
and
lods
shlb
jmp
xlat
and
xchg
in
decl
mov
jge
and
jne
and
insl
scas
and
gs
and
push
mov
dec
outsb
add
cli
xchg
cmp
outsb
add
cli
leave
sub
and
aam
call
data16
add
jg
incl
add
scas
sub
in
add
sub
jnp
sub
jnp
sub
jnp
sub
jnp
sub
jnp
sub
jnp
sub
jnp
sub
jnp
daa
lea
daa
test
daa
jge
daa
sub
adc
insl
jnp
sub
sbb
pop
jnp
daa
push
jnp
daa
dec
jnp
daa
inc
jnp
daa
cmp
jnp
daa
add
sub
jnp
es
jnp
daa
or
jnp
es
jp
mov
jp
push
adc
std
dec
sbb
std
push
adc
std
das
sbb
std
pop
adc
std
or
pop
jp
jns
lret
xlat
jns
sbb
jnp
cmp
jnp
jmp
cwtl
jnp
mov
std
jae
jnp
mov
add
std
ret
pop
jnp
xchg
std
jmp
pop
jnp
jmp
sbb
mov
sbb
mov
sbb
fstps
jnp
add
gs
incl
data16
call
add
jmp
add
call
gs
call
add
jmp
call
pusha
incl
add
pusha
call
pusha
incl
call
popa
jmp
gs
inc
gs
pushl
gs
ljmp
gs
decl
gs
incl
add
decl
imul
cli
or
mov
jae
mov
add
clc
fwait
call
imul
and
add
stos
in
insb
dec
or
cli
add
push
sub
in
cli
add
insb
sub
cmc
imul
sar
sahf
add
iret
in
push
sub
pusha
loope
add
fmuls
push
int3
or
pusha
loope
add
sti
sbb
pusha
fistl
lret
add
sti
and
pusha
fwait
jns
imul
add
add
lcall
add
repz
pop
out
ret
add
loop
leave
push
jmp
cwtl
ljmp
out
popa
add
sti
and
out
ljmp
push
aad
repz
repnz
hlt
daa
add
add
dec
lock
aas
fadds
jecxz
loope
jmp
loope
jecxz
hlt
push
add
faddp
out
cli
add
movsl
into
call
fisubrs
stc
push
add
fisubs
sub
inc
rorb
enter
lret
out
xlat
jno
mov
mov
insb
mov
cmc
jo
stc
cmp
xchg
repnz
test
ds
mov
pop
push
xchg
ret
add
xchg
in
dec
push
and
ljmp
arpl
add
idivb
jno
inc
insl
imul
arpl
jno
add
insl
inc
push
push
jge
je
inc
jbe
add
fs
push
data16
outsb
inc
std
dec
add
jae
insl
arpl
add
add
add
test
sub
imul
add
inc
insl
inc
insb
xor
bound
out
incl
mov
jne
dec
ret
insb
mov
add
out
dec
bound
sbb
insb
aam
cld
ds
push
add
lahf
outsl
int
cltd
or
bound
imul
sti
sahf
call
jae
mov
add
add
inc
inc
jmp
push
mov
call
jbe
pop
add
stos
call
jne
cli
out
sub
shlb
aad
cmp
jp
cs
cmp
icebp
jno
fdiv
inc
jecxz
in
out
icebp
jbe
pop
add
stc
add
icebp
leave
testb
ffree
out
mov
es
aam
ljmp
add
add
add
cmpsb
loop
loop
jmp
mov
shrl
mov
imul
mov
notl
lcall
stc
stos
ljmp
outsl
ret
int
push
clc
pop
repnz
dec
aad
jae
add
cli
cmp
adc
aas
clc
fcomp
dec
aad
call
pop
cmp
add
jg
sub
pop
faddl
dec
loope
jmp
sub
stc
stc
ljmp
adc
ljmp
cmp
add
leave
bound
mov
jno
jmp
std
nop
stc
ret
jno
fdiv
bound
outsl
fimull
aam
mov
jb
int3
sti
aam
jle
out
pop
add
int
inc
push
test
jae
stc
or
push
xchg
insl
add
jnp
arpl
or
sbb
bound
cmp
dec
divb
add
inc
fisubs
push
aaa
js
outsb
hlt
inc
std
dec
or
cli
je
jb
imul
push
lods
add
jno
cmp
imul
mov
inc
data16
ja
outsl
add
add
outsl
outsb
jbe
xor
jge
imul
bound
gs
je
gs
insl
int3
pop
inc
inc
aas
pop
pop
popa
cli
movl
jae
and
insb
fdivrs
push
out
fistps
pop
add
cli
push
jmp
jae
sub
data16
pop
add
push
jmp
dec
xchg
jo
jno
inc
add
add
mov
jae
movsb
out
outsb
cmp
add
cli
cmpsb
in
xor
in
push
mov
insl
push
xorl
imul
add
out
repnz
fidivrs
cli
clc
cmc
bound
add
dec
call
sub
inc
leave
in
push
int
in
and
and
xchg
add
jmp
sbb
cmpsl
in
out
fmul
push
ret
add
cmp
jmp
stc
fidivs
push
sbb
sahf
mov
ret
cli
les
add
cli
ror
pop
out
mov
add
kunpckwd
xchg
pop
mov
push
add
ljmp
and
cmpl
dec
lcall
popf
ficoml
xchg
repnz
idivb
cmp
add
dec
cmp
inc
xor
cmc
bound
shlb
dec
outsl
std
add
leave
bound
xor
push
cmp
or
stc
pop
stc
adc
cmp
push
add
inc
mull
or
bound
aad
xor
adc
imul
cmc
lcall
jecxz
jae
iret
iret
pusha
subb
incl
add
jno
and
push
js
popa
cmovg
daa
dec
std
ljmp
imul
jno
mov
or
and
jb
dec
std
jmp
dec
je
push
inc
push
aas
or
adc
dec
add
or
and
jb
or
add
outsl
inc
ss
dec
push
add
add
jae
push
add
roll
outsl
push
mov
add
add
bound
in
push
mov
sub
jle
jae
jg
jae
cmc
loop
daa
mov
inc
cli
lret
adc
out
jge
add
sub
add
cli
mov
lock
fld
fidivs
pop
add
cmp
outsl
loopne
cmpsb
pop
add
cli
imul
add
add
loopne
mov
push
std
sti
add
popf
shlb
mov
jb
pop
add
inc
loop
or
fs
add
stos
out
loope
repnz
mov
push
jecxz
out
out
cmp
faddl
repnz
jmp
fidivrl
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
add
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
jmp
stc
add
add
push
add
roll
add
jecxz
add
jecxz
roll
add
roll
add
cmp
int3
mov
jle
push
jno
pop
mov
jge
incl
jle
push
and
xor
fidivrs
xor
or
cld
sub
cmp
aas
mov
add
and
pop
mov
enter
jge
orl
mov
jl
loopne
mov
add
add
mov
add
jnp
clc
jno
testl
jno
testl
cmpl
dec
cld
mov
add
jmp
jge
hlt
jns
decl
jb
dec
hlt
and
push
lock
inc
cli
lods
clc
decl
add
dec
dec
call
jns
or
cmp
sbb
and
mov
stos
jnp
in
jno
jmp
aas
imul
dec
ljmp
jmp
xor
mov
lret
scas
cmp
int3
cmp
int3
mov
jl
orl
std
mov
pop
mov
aad
sub
std
cmpl
mov
add
add
cmpsb
add
jno
out
push
adc
scas
cli
addr16
add
sub
add
inc
adc
cld
cli
add
add
decb
add
sti
xorl
jae
jl
cld
jno
orb
out
int
mov
cmp
add
outsb
sarl
add
add
int3
int3
scas
cmp
int3
cmp
int3
mov
jl
mov
xor
inc
xor
mov
int3
int3
inc
cmp
int3
ds
int3
scas
jnp
mov
cld
dec
incl
mov
inc
cli
leave
ror
cmp
int3
inc
cmp
int3
ds
int3
scas
jnp
orl
imul
clc
decb
lods
push
inc
add
cli
jnp
clc
bound
inc
cli
jns
clc
sub
mov
jl
cld
cmpl
pop
push
xchg
sar
mov
jp
push
mov
sti
add
add
jmp
jp
cld
jns
decl
push
sub
leave
add
push
cld
in
scas
add
divb
pop
bound
add
add
pop
add
sub
rorb
cmp
int3
cmp
int3
mov
jp
mov
pop
jp
mov
adc
inc
cli
mov
int3
cmp
int3
mov
jp
orl
js
cli
cmc
orl
std
mov
sub
push
outsb
jns
or
or
add
dec
add
add
pop
pop
mov
jnp
cld
or
jno
jno
sti
mov
je
mov
ret
mov
add
nop
dec
lock
fwait
adc
jnp
std
psubd
push
rclb
or
repnz
push
clc
jno
lsl
cmc
mov
nop
push
or
cmc
mov
mov
mov
nop
inc
or
add
movb
aaa
or
std
mov
ror
in
orl
inc
add
jecxz
scas
push
push
call
addb
lock
out
add
add
push
repnz
push
lock
fisttps
or
add
push
add
fisttps
divb
cmpb
mov
cmpl
das
mov
or
mov
jno
inc
lcall
mov
pop
jmp
mov
mov
adc
add
jae
jmp
mov
add
cli
add
inc
sbb
or
scas
cmpl
mov
cli
add
push
push
xchg
add
add
mov
mov
sbb
fstps
mov
pop
mov
pop
std
incl
mov
mov
mov
std
xorl
sbb
inc
pop
mov
adc
add
enter
jp
pushl
les
or
mov
mov
mov
mov
jno
jmp
cmp
xchg
outsb
xchg
mov
add
fs
adc
std
call
push
int3
int3
scas
in
orl
push
incb
inc
push
inc
cli
mov
push
popa
add
lea
sub
std
lds
repnz
or
or
movl
mov
push
int3
int3
das
mov
mov
cmp
push
inc
add
cli
mov
test
mov
mov
int3
int3
scas
in
orl
adc
ret
decl
jno
das
mov
sarb
or
dec
hlt
jno
repz
mov
cmpl
add
je
jns
testl
shll
mov
mov
icebp
mov
inc
clc
jno
or
add
xor
mov
mov
add
mov
xchg
std
mov
mov
mov
pop
mov
sbb
cld
out
xor
popa
or
mov
inc
mov
cmpsl
inc
int3
int3
cs
int3
int3
inc
push
int3
int3
ds
int3
int3
iret
mov
orl
les
add
add
mov
loop
sti
in
add
jae
repz
mov
add
sub
mov
mov
push
pop
push
hlt
pop
cmp
cli
cmpl
dec
jmp
or
jmp
mov
add
decl
iret
add
inc
add
rcll
add
ret
add
test
sahf
incb
add
mov
add
mov
cmp
cli
sub
mov
or
add
cli
mov
add
vsqrtsd
push
inc
cli
mov
dec
ljmp
xorl
ds
mov
mov
insl
mov
pop
loop
lahf
rol
mov
mov
mov
or
add
aaa
or
mov
mov
int3
int3
ds
int3
int3
iret
mov
orl
inc
push
add
inc
or
add
xlat
mov
add
cmpl
mov
clc
mov
nop
inc
or
mov
xchg
clc
add
mov
cld
dec
call
int
jmp
add
push
in
ljmp
cli
add
add
add
pop
push
lock
mov
mov
mov
dec
repnz
push
sahf
mov
rorl
lds
add
imul
sar
inc
hlt
jno
fisttps
lea
jno
jno
out
ret
jae
mov
jns
verw
mov
or
mov
mov
adc
imull
mov
or
inc
es
inc
rclb
adc
mov
mov
popa
add
mov
push
add
mov
std
xorl
mov
jmp
nop
push
in
insl
push
cld
test
imul
and
mov
push
nop
cli
lcall
les
add
orl
push
inc
cli
add
or
lock
mov
cmp
add
rcrl
push
in
ljmp
cli
add
push
push
mov
inc
sbb
push
lock
cltd
xor
cli
outsl
adc
in
ljmp
cli
add
push
into
mov
add
mov
mov
jns
aam
cmp
aas
push
add
std
push
mov
mov
lea
xorl
inc
loopne
leave
sti
push
xorl
out
ss
std
xorl
mov
add
xchg
add
popl
stc
xchg
inc
out
dec
loopne
lock
add
adc
jmp
sub
call
mov
push
mov
xchg
or
rcr
pop
xor
cli
add
adc
cmp
ds
iret
sub
add
cli
mov
adc
ret
decl
or
push
mov
pop
std
jns
or
pop
xor
cli
mov
dec
and
cmpl
jmp
inc
cli
mov
push
call
jns
or
scas
add
mov
fwait
xor
cli
add
or
dec
call
sub
jmp
out
out
push
add
cmp
pushl
sbb
add
imul
mov
add
pop
push
aam
gs
decl
cli
add
in
inc
add
inc
dec
int3
int3
ds
int3
int3
iret
in
mov
mov
int3
ds
int3
int3
scas
in
push
movsb
mov
cmp
cmp
mov
xor
add
mov
push
push
roll
cli
movsl
cld
push
cmp
std
jns
or
add
pop
push
cmp
mov
iret
inc
int3
int3
iret
mov
orl
inc
push
add
inc
fadd
add
add
add
mov
add
cli
add
inc
push
add
dec
or
add
pop
std
mov
pop
pop
std
add
rorb
negl
cli
add
add
imul
lcall
cli
add
cmp
inc
ljmp
or
add
cli
add
add
clc
push
cmp
decb
inc
push
inc
cli
mov
mov
or
mov
push
push
inc
cli
mov
add
stc
ret
mov
lea
fmul
lret
add
add
cld
scas
vshufps
push
inc
cli
iret
add
in
pop
add
add
add
insl
ret
push
add
cmp
add
push
inc
cli
mov
push
call
jns
add
aas
push
mov
mov
aad
add
xorl
mov
mov
push
push
push
mov
push
call
jns
or
push
xchg
mov
loope
out
jae
mov
stos
mov
stos
insb
scas
sti
add
mov
mov
dec
movsb
or
cmp
mov
stc
sti
push
shrb
les
add
cmp
push
xchg
mov
cmpl
dec
loopne
pop
add
add
dec
pop
imul
or
add
clc
add
out
jae
mov
hlt
mov
mov
stc
scas
mull
stc
mov
dec
clc
jnp
out
cli
add
adc
add
stc
mov
hlt
push
cmp
or
lea
in
decl
cli
pop
mov
sub
inc
cli
pop
mov
pusha
push
inc
cli
pop
dec
testl
ret
cli
push
inc
add
add
cli
add
push
push
and
mov
pop
push
inc
cli
movsl
call
call
jns
add
negl
inc
add
cli
mov
aad
push
std
test
fiaddl
xor
pusha
sub
cli
xchg
add
adc
push
cmp
aam
cmp
call
mov
clc
push
inc
cli
mov
xor
inc
int3
int3
cli
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
cwtl
xor
aaa
test
cli
inc
add
sub
dec
cmp
ds
cmp
push
cmp
in
cmp
cmp
cmp
cmp
outsl
cmp
ds
cmp
jns
fwait
aas
xchg
cmp
aas
sub
out
dec
cmp
aas
add
cmp
push
add
add
pushl
xor
xchg
mov
xor
mov
lea
push
xor
xor
ss
xor
aaa
and
and
inc
xor
push
xor
aaa
jge
js
xchg
xor
ss
or
in
xor
sub
cmp
jle
jb
xchg
xor
stos
xor
add
xor
fnsave
dec
xor
pushl
divl
or
xor
sbb
sub
xor
xor
xor
jl
mov
xor
adc
or
in
das
and
xor
inc
xor
pop
xor
ja
mov
cli
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
fiaddl
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fiaddl
enter
int3
fiaddl
rcr
inc
add
fiaddl
fcomp
inc
add
fiaddl
loopne
inc
add
fiaddl
call
fiaddl
lock
hlt
fiaddl
clc
fiaddl
cld
fiaddl
add
inc
add
inc
add
fildl
jo
inc
add
inc
add
fildl
adc
inc
add
fildl
sbb
inc
add
fildl
and
inc
add
fildl
sub
inc
add
fildl
xor
inc
add
fildl
cmp
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
fildl
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fildl
pusha
fildl
rcr
add
fildl
enter
lock
int3
fildl
pop
fildl
rcr
inc
add
fildl
lock
fcomp
inc
add
fildl
mov
fildl
in
inc
add
fildl
call
fildl
lock
hlt
fildl
clc
fildl
rcr
inc
add
fildl
add
inc
add
inc
add
faddl
or
inc
add
faddl
adc
inc
add
faddl
sbb
inc
add
fiaddl
and
inc
add
fiaddl
and
inc
add
faddl
test
inc
add
inc
add
faddl
xor
inc
add
faddl
cmp
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
add
fildl
jo
inc
add
add
inc
add
add
faddl
mov
inc
add
faddl
nop
faddl
pop
faddl
nop
fildl
xchg
faddl
cwtl
faddl
pushf
faddl
mov
faddl
test
inc
add
inc
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
inc
add
loope
add
inc
add
loope
add
inc
add
loope
add
inc
add
loope
add
inc
add
loope
add
inc
add
loope
add
inc
add
loope
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
loope
add
loope
add
inc
add
inc
add
inc
add
inc
add
inc
add
loope
add
add
loope
add
inc
add
inc
add
loope
add
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loop
add
loope
add
loope
add
inc
add
loop
add
inc
add
loop
add
inc
add
loop
add
inc
add
inc
add
loop
add
inc
add
loop
add
inc
add
loop
add
inc
add
loopne
add
loopne
add
loope
add
loop
add
inc
add
inc
add
inc
add
add
inc
add
add
loope
add
inc
add
add
inc
add
add
inc
add
loopne
add
add
loope
add
inc
add
loope
add
loope
add
inc
add
add
inc
add
add
inc
add
loop
add
inc
add
add
loop
add
inc
add
loope
add
loopne
add
loop
add
loop
add
loop
add
loop
add
inc
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
loop
add
loop
add
loope
add
loope
add
loope
add
add
add
inc
add
loop
add
loop
add
loop
add
inc
add
loop
add
loop
add
loop
add
add
loop
add
loop
add
loop
add
inc
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loope
add
loop
add
loop
add
jecxz
add
inc
add
jecxz
add
loop
add
inc
add
add
loopne
add
inc
add
inc
add
jecxz
add
inc
add
loope
add
inc
add
jecxz
add
inc
add
inc
add
inc
add
loopne
add
jecxz
add
inc
add
jecxz
add
add
inc
add
jecxz
add
inc
add
jecxz
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
add
jecxz
add
loopne
add
inc
add
inc
add
inc
add
add
inc
add
loopne
add
inc
add
add
inc
add
inc
add
inc
add
add
loopne
add
inc
add
inc
add
add
inc
add
inc
add
add
loopne
add
inc
add
add
add
inc
add
jecxz
add
loop
add
inc
add
inc
add
add
jecxz
add
loope
add
add
loop
add
loopne
add
inc
add
inc
add
jecxz
add
inc
add
inc
add
inc
add
loope
add
faddl
rcr
inc
add
faddl
fcomp
inc
add
faddl
loopne
inc
add
faddl
call
faddl
lock
hlt
faddl
clc
faddl
cld
faddl
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
fldl
pusha
fldl
mov
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
fldl
enter
int3
fldl
rcr
inc
add
fldl
fcomp
inc
add
fldl
loopne
inc
add
fldl
call
fldl
lock
hlt
fldl
clc
fldl
cld
fldl
aam
inc
add
fiadds
call
fiadds
pushf
fldl
or
inc
add
inc
add
fiadds
adc
inc
add
fiadds
sbb
inc
add
fiadds
fcomp
inc
add
inc
add
fiadds
sub
inc
add
fiadds
xor
inc
add
fiadds
cmp
inc
add
inc
add
add
inc
add
fldl
dec
fiadds
push
fiadds
push
fiadds
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
add
fiadds
cmp
inc
add
fiadds
nop
fiadds
xchg
fiadds
cwtl
fiadds
pushf
fiadds
mov
fiadds
test
inc
add
inc
add
inc
add
inc
add
inc
add
fiadds
enter
int3
fiadds
rcr
inc
add
inc
add
fiadds
inc
add
fiadds
in
inc
add
fiadds
in
fiadds
lock
in
inc
add
fiadds
clc
fiadds
cld
fiadds
add
inc
add
inc
add
inc
add
filds
add
inc
add
inc
add
add
fiadds
adc
inc
add
inc
add
filds
hlt
faddl
sbb
inc
add
filds
and
inc
add
inc
add
filds
sub
inc
add
filds
xor
inc
add
filds
in
faddl
cmp
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
faddl
je
inc
add
inc
add
fldl
jl
inc
add
filds
test
inc
add
filds
in
inc
add
filds
cwtl
filds
pushf
filds
mov
inc
add
inc
add
filds
test
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
filds
enter
int3
filds
xor
inc
add
filds
xchg
fldl
aam
inc
add
filds
inc
add
filds
in
inc
add
filds
rcr
inc
add
filds
cmp
inc
add
filds
lock
hlt
filds
clc
filds
cld
filds
add
inc
add
inc
add
loopne
add
faddl
or
inc
add
loopne
add
inc
add
loopne
add
faddl
sbb
inc
add
fiadds
and
inc
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
fldl
push
loopne
add
inc
add
add
inc
add
inc
add
add
inc
add
inc
add
add
inc
add
add
inc
add
add
fldl
test
inc
add
loopne
add
inc
add
filds
xchg
loopne
add
fiadds
insb
loopne
add
inc
add
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
push
mov
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movl
pop
ret
int3
push
mov
movl
pop
ret
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
cmpl
jne
push
push
call
push
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
movl
mov
add
mov
mov
add
mov
add
mov
add
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
lea
push
push
push
push
push
call
test
je
xor
jmp
lea
push
push
push
push
push
call
test
je
xor
jmp
mov
mov
mov
lea
push
push
push
mov
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
push
push
push
push
call
lea
push
push
push
push
mov
push
call
test
jne
xor
jmp
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
pusha
mov
movl
movl
push
push
call
push
call
mov
movl
movl
lea
push
lea
push
lea
push
call
movzwl
cmp
je
xor
jmp
push
push
push
push
call
movl
movl
movl
movl
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
call
pop
call
pop
call
pop
call
pop
push
ret
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
