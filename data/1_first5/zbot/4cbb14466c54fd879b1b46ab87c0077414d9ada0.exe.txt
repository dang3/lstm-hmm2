jmp
ret
push
mov
sub
push
push
push
mov
movzbl
mov
shr
movzwl
mov
imul
mov
add
movzwl
mov
shl
mov
mov
imul
mov
mov
add
mov
mov
and
and
mov
mov
xor
divl
mov
mov
shr
movzwl
cmpl
jne
pushl
call
mov
mov
shl
movzwl
mov
xor
mov
mov
xor
divl
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
add
movzbl
mov
add
movzbl
mov
xor
mov
mov
xor
div
movzbl
mov
xor
mov
mov
or
sub
mov
mov
mov
mov
sub
add
mov
mov
xor
div
movzbl
mov
imul
cmp
je
movl
mov
or
mov
imul
mov
mov
and
sub
mov
movzbl
shl
mov
mov
movzwl
and
mov
movzbl
mov
mov
movzwl
sub
mov
movzwl
movzwl
xor
sub
mov
add
mov
movzwl
shr
mov
movzbl
movzwl
imul
sub
mov
add
mov
movzwl
xor
divl
mov
mov
movzwl
or
add
mov
sub
mov
movzbl
mov
jmp
mov
sub
sub
mov
xor
mov
mov
add
movzbl
mov
mov
mov
mov
and
sub
mov
mov
mov
pop
pop
pop
mov
pop
ret
xor
ret
push
mov
sub
push
push
push
mov
mov
movzwl
mov
shl
movzwl
mov
and
mov
mov
movzwl
imul
mov
mov
and
or
mov
movzbl
or
movzwl
movzbl
or
movzwl
mov
sub
mov
movzbl
shr
mov
movzbl
movzwl
cmp
jne
call
mov
movzbl
shl
mov
mov
movzbl
xor
and
mov
mov
mov
movzwl
add
add
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
xor
mov
shr
mov
mov
shr
mov
test
jne
call
mov
mov
xor
xor
mov
mov
mov
or
and
mov
mov
sub
mov
mov
shr
mov
mov
pop
pop
pop
mov
pop
ret
jmp
push
mov
sub
push
push
push
mov
mov
add
movzbl
mov
and
mov
mov
xor
div
mov
mov
imul
mov
add
mov
mov
mov
sub
mov
mov
or
xor
movzbl
mov
test
jne
push
push
call
movzbl
mov
shl
mov
mov
mov
add
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
xor
mov
mov
or
mov
mov
movzbl
mov
xor
and
mov
mov
mov
mov
imul
mov
mov
mov
mov
movzbl
mov
test
jne
push
push
pushl
call
mov
mov
movzbl
movzbl
mov
mov
and
movzbl
or
mov
movzwl
or
mov
mov
xor
div
mov
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
sub
movzbl
mov
add
push
push
mov
sub
push
mov
xor
push
mov
imul
push
mov
xor
push
call
movzbl
mov
test
je
mov
or
sub
push
call
mov
shl
mov
mov
and
mov
mov
sub
movzbl
mov
shl
mov
mov
mov
mov
test
jne
call
mov
movzwl
shl
mov
mov
shl
mov
mov
mov
mov
movzbl
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
sub
movzwl
mov
or
sub
movzbl
mov
or
mov
add
mov
mov
movzwl
mov
mov
xor
div
movzwl
mov
movzwl
and
or
movzwl
mov
imul
add
mov
mov
imul
sub
push
mov
movzwl
xor
add
push
mov
movzwl
imul
sub
push
mov
movzwl
and
add
push
mov
sub
sub
push
mov
movzwl
or
add
push
call
movzwl
mov
test
je
mov
xor
mov
add
push
movzwl
push
mov
xor
mov
sub
push
mov
xor
push
movzwl
imul
mov
sub
push
call
cmp
jne
call
mov
mov
and
movzwl
add
mov
mov
shr
movzwl
movzwl
shr
movzbl
mov
imul
sub
movzwl
cmp
jne
push
movzwl
push
call
mov
mov
and
add
movzwl
mov
movzwl
mov
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
mov
or
add
mov
mov
xor
div
mov
mov
add
mov
test
jne
push
movzbl
push
call
mov
mov
add
mov
mov
and
mov
mov
and
mov
mov
xor
mov
mov
sub
mov
cmp
jne
movzwl
push
push
call
mov
mov
xor
div
mov
mov
sub
movzbl
movzwl
sub
mov
movzwl
xor
mov
movzbl
movzwl
add
add
push
mov
movzwl
sub
add
push
mov
movzwl
imul
sub
push
mov
movzbl
sub
add
push
movzwl
add
sub
push
movzbl
sub
sub
push
call
mov
mov
test
je
mov
or
mov
sub
push
movzbl
and
push
call
movzwl
add
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
xor
div
movzwl
mov
shl
movzbl
mov
movzwl
mov
add
movzwl
mov
xor
add
mov
mov
add
movzbl
mov
sub
movzwl
mov
add
movzwl
mov
test
jne
call
movzbl
mov
movzbl
mov
or
xor
mov
mov
xor
and
mov
test
jne
movzbl
push
call
movzwl
mov
sub
mov
mov
or
xor
mov
mov
or
mov
mov
and
xor
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
add
add
mov
mov
imul
movzbl
mov
shr
movzbl
mov
shl
mov
mov
and
movzbl
cmp
jne
call
mov
movzwl
xor
div
mov
mov
and
mov
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
div
mov
mov
xor
movzbl
mov
imul
mov
cmp
jne
push
push
push
call
mov
mov
xor
movzbl
mov
sub
movzbl
mov
shr
mov
mov
or
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
or
movzwl
mov
sub
movzwl
mov
and
mov
imul
mov
mov
imul
mov
add
mov
mov
xor
sub
push
mov
and
push
mov
add
push
mov
sub
push
mov
or
sub
push
mov
sub
push
call
mov
test
je
call
mov
imul
mov
mov
or
push
call
mov
add
mov
mov
movzwl
mov
add
push
mov
imul
push
mov
xor
push
push
mov
imul
push
mov
or
push
call
mov
mov
test
je
mov
imul
push
call
call
mov
imul
add
mov
mov
or
mov
imul
movzwl
mov
mov
mov
test
jne
push
pushl
push
push
call
mov
mov
mov
mov
sub
mov
mov
add
add
mov
cmp
jne
pushl
movzbl
push
push
call
movzwl
mov
sub
add
mov
mov
imul
mov
add
movzwl
mov
shr
mov
mov
or
imul
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
or
mov
mov
sub
mov
mov
shr
mov
cmp
jne
push
push
push
push
call
movzbl
mov
mov
movzwl
shr
mov
movzbl
xor
div
movzbl
mov
xor
div
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
mov
and
add
movzwl
mov
xor
mov
add
movzwl
mov
shr
mov
mov
shl
mov
mov
add
mov
mov
movzbl
mov
and
add
movzbl
mov
shr
movzbl
mov
imul
movzbl
mov
shl
mov
cmp
jne
call
mov
mov
imul
movzbl
add
movzbl
mov
shl
mov
mov
shr
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
add
movzbl
mov
and
mov
imul
movzbl
mov
xor
or
movzwl
mov
shl
mov
mov
shr
mov
mov
sub
movzwl
add
movzbl
movzwl
xor
mov
movzwl
xor
movzbl
movzbl
movzbl
mov
movzbl
and
and
movzwl
cmpw
jne
movzwl
push
movzwl
push
push
push
call
movzbl
movzwl
movzbl
mov
add
movzbl
movzbl
and
and
movzbl
mov
xor
mov
cmp
jne
push
movzbl
push
push
push
call
mov
movzbl
movzwl
mov
or
mov
sub
mov
movzbl
xor
movzbl
or
mov
movzwl
xor
divl
movzbl
mov
and
sub
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzwl
mov
shl
mov
mov
xor
add
mov
xor
mov
mov
shr
movzwl
mov
imul
add
mov
mov
mov
mov
movzwl
mov
xor
add
mov
sub
mov
mov
imul
mov
sub
mov
mov
xor
add
mov
mov
or
add
cmp
je
mov
mov
movzwl
sub
mov
mov
shl
mov
mov
movzbl
or
sub
cmp
jge
movb
movzbl
mov
mov
or
movzbl
xor
mov
movzbl
mov
movzbl
imul
sub
mov
mov
movzbl
sub
mov
movzbl
mov
mov
movzbl
xor
movzbl
xor
mov
movzbl
movzbl
xor
add
mov
add
mov
mov
movzbl
sub
add
mov
add
mov
movzbl
mov
movzbl
xor
sub
mov
sub
mov
jmp
movw
movzwl
shl
mov
movzwl
shl
mov
movzbl
mov
movzbl
movzwl
or
mov
movzbl
shl
mov
movzwl
mov
movzwl
movzwl
add
mov
movzbl
shl
mov
movzbl
shr
mov
mov
add
movzbl
movzwl
imul
add
mov
movzbl
movzbl
and
mov
movzbl
shl
mov
movzwl
or
movzwl
imul
mov
mov
add
mov
movzwl
shl
mov
movzbl
movzwl
or
mov
movzbl
mov
add
mov
movzwl
mov
movzbl
movzwl
imul
mov
add
mov
movzwl
movzbl
add
mov
mov
mov
cmp
jne
mov
mov
movzbl
sub
mov
movzbl
imul
mov
mov
sub
movzwl
sub
mov
movzwl
movzwl
add
add
mov
mov
cmp
jne
mov
mov
movzbl
or
movzbl
or
mov
movzbl
shl
mov
mov
sub
add
mov
movzbl
shr
mov
mov
movzbl
or
sub
mov
mov
and
mov
add
mov
mov
movzbl
sub
sub
mov
movzbl
movzbl
and
movzwl
sub
mov
mov
test
je
mov
mov
mov
or
xor
mov
mov
mov
movzwl
sub
mov
mov
or
mov
movzwl
add
add
mov
sub
mov
mov
mov
mov
movzwl
and
sub
mov
add
mov
movzwl
xor
divl
mov
jmp
mov
mov
movzwl
mov
mov
xor
movzwl
and
mov
mov
shl
mov
movzwl
movzwl
imul
add
mov
movzbl
mov
mov
mov
mov
mov
add
mov
movzwl
movzwl
add
sub
mov
add
mov
movzwl
xor
divl
mov
mov
movzwl
imul
sub
mov
sub
mov
movzwl
xor
movzwl
imul
mov
mov
mov
jmp
movzwl
or
sub
mov
xor
mov
mov
or
or
mov
mov
or
add
mov
mov
mov
movzbl
mov
mov
sub
mov
movzwl
xor
sub
mov
xor
mov
mov
and
mov
mov
mov
mov
mov
xor
div
movzwl
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
movzbl
mov
or
mov
add
movzbl
mov
shl
mov
mov
sub
movzwl
movl
movzbl
movzbl
mov
sub
sub
mov
xor
mov
mov
or
add
mov
movzbl
sub
sub
mov
mov
mov
movzbl
xor
sub
mov
movzbl
or
and
mov
movzbl
xor
sub
mov
sub
mov
mov
add
movzwl
sub
mov
mov
or
sub
mov
add
mov
mov
shr
mov
mov
or
add
mov
sub
mov
movzbl
shr
mov
mov
and
mov
movzwl
cmp
je
mov
mov
movzwl
imul
movzwl
add
mov
movzwl
shl
mov
movzwl
shr
mov
movzbl
shl
mov
movzwl
movzbl
add
sub
mov
sub
mov
jmp
mov
and
mov
add
mov
mov
add
sub
mov
mov
mov
add
mov
movzbl
xor
sub
add
mov
movzbl
add
mov
movzbl
xor
sub
mov
mov
mov
add
mov
sub
add
sub
mov
mov
xor
divl
mov
mov
movzbl
imul
mov
mov
mov
xor
add
add
mov
mov
or
movzbl
xor
mov
mov
movzbl
sub
sub
mov
mov
mov
add
mov
sub
add
mov
mov
xor
movzbl
mov
imul
add
cmp
je
movw
movzwl
imul
movzwl
sub
mov
mov
sub
mov
mov
shr
mov
mov
movzwl
and
sub
mov
mov
add
add
mov
mov
movzwl
sub
mov
mov
and
add
mov
mov
mov
mov
xor
sub
mov
movzbl
movzwl
and
add
cmp
je
movw
movzwl
shr
mov
movzwl
xor
sub
push
movzwl
add
sub
push
mov
movzwl
xor
add
push
movzwl
add
add
push
mov
movzwl
or
sub
push
mov
movzwl
sub
sub
push
call
mov
mov
test
je
movzwl
and
add
push
movzwl
push
movzwl
push
call
mov
shr
mov
mov
shr
mov
movzwl
and
push
mov
or
push
mov
movzwl
add
add
push
mov
and
push
movzwl
or
add
push
mov
and
push
call
mov
mov
test
je
mov
movzwl
or
push
movzwl
and
mov
add
push
mov
or
mov
add
push
mov
and
imul
push
call
mov
or
mov
mov
or
or
push
mov
xor
sub
push
call
mov
shr
mov
mov
shl
mov
shr
or
mov
mov
mov
movzwl
add
mov
movzbl
xor
mov
add
mov
mov
mov
movzwl
and
add
mov
add
mov
movzwl
imul
imul
mov
jmp
mov
xor
sub
mov
mov
cmp
jne
mov
mov
movzwl
mov
movzwl
xor
movzwl
and
mov
movzwl
add
push
movzwl
sub
push
movzwl
sub
push
push
push
movzwl
add
push
call
mov
mov
test
je
call
movzwl
add
mov
movzwl
and
xor
push
call
movzwl
add
push
movzwl
sub
push
movzwl
sub
push
movzwl
add
push
call
mov
mov
add
mov
movzwl
add
mov
mov
sub
movzwl
add
sub
mov
movzwl
sub
mov
mov
add
mov
movzwl
sub
add
mov
mov
add
movzwl
movzwl
and
sub
mov
mov
imul
sub
mov
movzwl
xor
sub
mov
add
mov
movzwl
mov
mov
and
movzwl
xor
mov
mov
mov
mov
add
mov
movzwl
and
sub
add
mov
mov
or
mov
mov
movzwl
xor
add
mov
sub
mov
mov
mov
add
mov
mov
shl
mov
movzwl
imul
sub
mov
xor
mov
movzwl
movzwl
imul
add
push
movzwl
movzwl
or
sub
push
movzwl
movzwl
or
add
push
push
call
mov
movzwl
imul
imul
mov
movzwl
movzwl
imul
mov
add
mov
mov
movzwl
shl
mov
mov
or
add
mov
add
mov
mov
add
mov
movzwl
imul
sub
mov
sub
mov
jmp
mov
xor
movzbl
add
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
or
sub
mov
mov
and
mov
sub
mov
mov
add
mov
movzwl
xor
mov
mov
add
sub
mov
movzwl
xor
add
cmp
jne
push
movzwl
push
push
push
call
mov
mov
movzwl
add
mov
mov
imul
mov
mov
add
add
push
mov
movzwl
xor
add
push
movzwl
imul
add
push
push
mov
sub
sub
push
mov
movzwl
or
add
push
call
mov
test
je
movzwl
sub
push
movzwl
xor
movzwl
add
push
movzwl
sub
push
call
mov
shr
mov
xor
cmp
jne
push
push
call
mov
mov
xor
mov
mov
movzbl
imul
mov
mov
sub
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
shl
movzbl
mov
add
movzbl
mov
or
and
movzbl
mov
xor
movzbl
mov
imul
add
mov
xor
mov
mov
or
mov
movzbl
sub
sub
mov
xor
mov
mov
imul
mov
mov
mov
mov
add
add
mov
mov
movzbl
mov
and
cmp
je
movb
mov
mov
movzbl
sub
mov
mov
mov
mov
movzbl
xor
mov
mov
movzwl
imul
sub
mov
movzbl
mov
mov
movzbl
movzwl
imul
add
mov
add
mov
mov
mov
mov
add
mov
movzbl
sub
mov
movzbl
movzwl
sub
sub
mov
sub
mov
movzbl
add
mov
jmp
movzbl
mov
xor
div
movzbl
mov
movzbl
xor
add
mov
xor
mov
mov
add
movzbl
mov
mov
mov
mov
and
movzbl
mov
mov
pop
pop
pop
mov
pop
ret
jmp
jmp
push
mov
sub
push
push
push
mov
movzwl
mov
mov
xor
div
movzwl
mov
sub
push
mov
sub
push
mov
sub
push
mov
sub
push
mov
add
push
mov
sub
push
call
movzwl
mov
test
je
call
mov
and
mov
imul
push
mov
and
push
call
mov
mov
mov
mov
and
sub
mov
xor
mov
mov
sub
mov
mov
and
mov
mov
mov
mov
mov
mov
xor
mov
mov
and
mov
mov
and
mov
mov
mov
movzbl
add
add
mov
mov
and
movzbl
imul
mov
mov
sub
cmp
je
movl
mov
mov
mov
imul
sub
mov
mov
and
add
mov
movzbl
movzbl
xor
mov
mov
add
mov
mov
movzbl
mov
mov
mov
movzbl
movzbl
xor
mov
mov
mov
mov
sub
mov
mov
xor
mov
add
mov
mov
add
mov
mov
add
mov
jmp
mov
and
add
mov
xor
mov
mov
imul
mov
mov
mov
mov
shr
mov
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
mov
mov
shr
mov
mov
mov
shl
mov
mov
mov
mov
mov
imul
add
mov
cmp
jne
call
mov
mov
xor
div
mov
mov
add
mov
mov
or
mov
sub
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
movzwl
mov
mov
mov
xor
div
mov
mov
shl
mov
mov
movzbl
mov
shl
mov
mov
xor
mov
mov
test
jne
push
push
call
mov
mov
mov
mov
shl
movzwl
movzwl
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
shl
movzwl
mov
mov
mov
imul
push
mov
imul
push
mov
add
sub
push
mov
sub
push
mov
sub
add
push
mov
sub
sub
push
call
mov
test
je
mov
or
mov
imul
push
call
mov
or
mov
imul
push
mov
imul
mov
add
push
mov
add
push
call
mov
add
sub
mov
xor
mov
mov
add
add
mov
xor
mov
mov
mov
mov
add
sub
mov
mov
mov
mov
movzbl
add
sub
mov
mov
and
and
mov
mov
imul
cmp
je
movl
mov
and
add
mov
mov
shl
mov
movzbl
imul
sub
mov
movzbl
xor
sub
mov
movzbl
mov
mov
movzbl
mov
movzbl
and
add
mov
add
mov
movzbl
mov
movzbl
add
add
mov
add
mov
movzbl
xor
sub
mov
mov
movzbl
and
add
mov
sub
mov
jmp
mov
and
movzwl
mov
xor
add
mov
xor
mov
mov
mov
mov
mov
shl
movzwl
movzbl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
mov
add
mov
mov
sub
sub
push
mov
and
sub
push
mov
or
add
push
mov
and
add
push
mov
or
add
push
mov
and
add
push
call
mov
test
je
mov
and
push
call
push
mov
or
push
call
mov
sub
sub
mov
xor
mov
mov
sub
add
mov
xor
mov
mov
sub
mov
mov
mov
mov
movzwl
shr
mov
push
movzwl
imul
sub
push
mov
movzwl
imul
sub
push
mov
movzwl
or
add
push
mov
movzwl
xor
sub
push
mov
movzwl
or
sub
push
call
mov
mov
test
je
mov
and
push
mov
imul
push
push
push
call
movzwl
and
mov
sub
push
mov
and
push
call
movzwl
imul
sub
mov
mov
imul
sub
cmp
je
movl
mov
mov
mov
shl
mov
mov
shl
mov
mov
and
mov
movzbl
mov
mov
mov
xor
mov
mov
xor
add
mov
add
mov
mov
add
mov
mov
add
add
mov
sub
mov
mov
imul
add
mov
jmp
movzwl
xor
xor
movzbl
mov
movzwl
or
add
mov
xor
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
push
push
call
pop
pop
ret
pop
add
add
mov
sbb
in
xchg
ds
push
push
push
add
pop
pop
mov
mov
mov
fs
in
in
jne
decl
mov
jmp
lods
push
in
divl
xor
xor
movsb
adc
cld
cs
out
dec
pop
test
cmp
sar
cld
xchg
cltd
and
fwait
incl
xor
stc
mov
lods
mov
jp
mov
and
test
dec
shl
push
sahf
fwait
into
inc
mov
push
push
test
out
xor
push
push
lods
daa
insb
je
mov
push
divb
scas
add
lret
mov
xorb
aaa
aaa
ss
pop
lock
xchg
ror
mov
xchg
sbb
outsl
xchg
lcall
scas
push
fstp
dec
dec
mov
pop
mov
in
das
daa
daa
mov
mov
inc
and
pop
xlat
sub
ret
out
pop
jbe
pop
xchg
sbb
rolb
int3
inc
lahf
push
ja
nop
mov
shl
jb
xchg
jge
out
adc
add
add
mov
cmpsl
cltd
push
fs
inc
repz
pop
test
jno
and
pop
pop
pop
dec
push
sbb
jno
icebp
or
push
icebp
push
pop
movsb
pop
movsb
pop
pop
pop
dec
pop
dec
adc
call
shlb
xchg
xchg
int
sahf
xor
push
push
mov
in
cltd
pushf
mov
xor
push
inc
ss
xor
test
jmp
mov
fisubrl
add
cmp
add
cmpsb
hlt
movsb
cwtl
xchg
loop
dec
roll
pop
xchg
pop
lds
sbb
paddsb
out
dec
bound
adc
cmc
add
movsb
cmp
jge
nop
jmp
jae
fwait
sbb
enter
push
in
sbb
mov
test
push
pop
std
stos
test
loopne
cwtl
nop
push
mov
ret
sarl
and
ret
mov
add
sahf
in
ljmp
fdivl
je
les
pusha
adc
aaa
xor
mov
test
lret
std
divl
cs
jecxz
es
cmpsl
shl
repz
sub
push
xchg
jmp
xlat
jecxz
in
fsubr
xchg
fcoml
cwtl
mov
mov
jns
rep
mov
testl
hlt
inc
cmpsl
mov
into
mov
mov
repz
test
push
lods
sbb
adc
fwait
in
inc
ret
xor
js
lret
mov
sub
mov
sbb
decb
mov
imul
inc
pop
jp
lock
push
cmp
adc
test
scas
cmp
jle
call
negl
das
jl
insl
sub
mov
ja
loop
cld
pop
xchg
popa
sbb
pop
cmpsl
int
mov
adcl
jns
xor
or
jge
jle
sub
rorb
scas
fstp
push
int
int3
out
gs
pushf
cmp
les
adc
scas
clc
call
aaa
mov
stos
aas
aaa
inc
gs
aam
outsl
jmp
lock
add
dec
nop
int3
xchg
mov
je
repnz
aad
clc
push
pushf
add
dec
stos
stc
bound
mov
jae
repz
push
inc
xchg
jp
pop
repnz
rcrl
sti
data16
loop
lods
push
out
push
and
es
mov
sbb
ss
lock
clc
mov
mov
js
cmp
dec
push
dec
push
sbb
sbbl
or
push
fwait
into
sahf
mov
inc
pop
xchg
push
into
sbb
xchg
xchg
jg
loope
add
push
lret
iret
ss
mov
pop
lods
or
data16
je
lock
fildll
inc
lods
add
push
jmp
push
pop
pop
push
xchg
dec
add
orl
sub
lahf
enter
cmc
outsb
or
dec
pop
pop
ds
mov
jle
xchg
rcl
shl
out
jnp
int
add
mov
repnz
pop
inc
or
push
add
call
cmp
cmc
lahf
pop
xchg
push
mov
add
and
pusha
sub
and
add
out
fidivrl
les
imul
ret
xchg
push
inc
pop
int
dec
fimull
dec
fdivr
push
or
push
jle
bound
ljmp
fadd
fmuls
push
lds
lea
and
push
xchg
xchg
imul
or
lods
rcrl
mov
fwait
pusha
rcrb
adc
fmuls
jo
sbb
shrl
pop
xchg
imul
mov
rcr
imul
jno
pop
cmp
scas
cmpsb
or
arpl
fcomp
mov
dec
aam
mov
push
add
gs
sbbl
cmc
sbb
sub
xorb
es
les
int
inc
adc
jae
icebp
loope
add
mov
pop
xor
inc
pop
cwtl
cltd
popa
ret
xor
jg
cmp
in
mov
cmp
and
sub
sahf
aad
mov
xchg
insl
aaa
daa
cmp
xor
xchg
mov
std
sahf
mov
cmp
push
xchg
ret
dec
cmp
jnp
adc
adc
sbb
jae
sarb
xchg
inc
pop
dec
push
and
loope
mov
and
adc
xchg
push
dec
data16
test
enter
stos
int
add
ja
mov
push
mov
pop
add
xlat
xchg
cmpb
push
cmpb
aas
stos
pop
lock
fildll
mov
lods
or
loope
xor
sub
push
cmovp
lds
icebp
jl
out
daa
dec
cmp
adc
jo
std
adcl
cs
mov
nop
mov
dec
push
sub
inc
test
jmp
push
ficomps
dec
fisttpll
jae
sub
push
mov
testl
pop
pop
test
sub
dec
jle
inc
or
xor
sbb
jl
sub
rcrl
push
sbbl
cmc
xor
fwait
sbb
xchg
orl
das
jb
mov
jno
mulb
scas
sahf
mov
ret
mov
popa
clc
popa
out
adc
jae
cltd
jo
loope
mov
int3
into
xchg
and
arpl
mov
pop
addr16
in
or
xchg
cmpsl
shlb
push
mov
jo
xchg
scas
xchg
adc
or
cltd
into
pop
rcrb
mov
pop
pop
call
pusha
cli
and
push
inc
shll
pop
add
fnstenv
xchg
push
mov
out
test
sbb
mov
mov
lret
dec
fistl
cmp
aaa
mov
movb
mov
pushf
fsubs
push
dec
ficoml
mov
sub
push
dec
mov
mov
test
sbb
xchg
mov
ds
mov
mov
sbbl
jle
xorb
je
and
cmpsb
lods
das
js
dec
pop
add
dec
xlat
jnp
cmpsb
xlat
sub
adc
in
stos
movsb
xchg
add
and
lods
mov
jbe
jo
jl
test
aaa
pop
adc
inc
mov
or
push
lcall
push
or
ja
mov
adc
call
ret
push
push
out
push
imul
jmp
rorb
or
mov
push
or
mov
jmp
lahf
je
repz
movsb
add
js
pop
cmpsb
xchg
adc
adc
lock
jnp
insb
mov
scas
mov
inc
je
dec
add
fxtract
sub
ss
xorb
jb,pn
jo
cwtl
ja
mov
jecxz
ds
outsl
jb
xlat
scas
fnsave
sti
insl
and
mov
adc
mov
into
and
add
mov
test
sbb
jl
lods
rol
or
jl
gs
lret
popa
rorl
xchg
mov
mov
fiadds
mov
pop
test
mov
fiadds
bound
mov
rcr
popa
es
pop
jge
out
ja
aam
rorb
repz
iret
jns
pop
mov
mov
ja
pop
pop
mov
mov
mov
sahf
add
cld
mov
leave
dec
fisubrs
mov
adc
dec
cmp
fsubrp
das
or
mov
or
sbbl
dec
iret
pop
data16
in
cmpsb
or
fcomps
fistpl
jecxz
out
push
sbb
leave
enter
insb
mov
mov
fwait
xchg
std
mov
movsb
xor
out
or
sub
sbb
sub
sahf
mov
push
xorl
fcmove
bound
les
ss
dec
lret
lods
int3
fistps
push
inc
cmpsb
int3
sbb
mov
lods
xor
or
pop
popf
mov
sub
cmpl
jg
jle
lea
cs
jns
dec
adc
fnsetpm(287
jae
dec
aas
call
xor
push
ss
and
rclb
pop
pusha
jb
imul
adc
nop
or
cmp
mov
mov
stc
cwtl
mov
enter
adc
push
imul
fnstsw
fucom
mov
cmpsb
cmp
xor
or
xchg
fcmovbe
pushw
jne
mov
xchg
push
sbb
and
or
xchg
mov
ja
mov
ds
aas
and
or
mov
and
xor
push
mov
jp
mov
mov
subb
xchg
je
push
push
mov
dec
sahf
sub
dec
push
pop
pop
push
ret
into
adc
and
enter
and
mov
xchg
iret
jle
fcoms
aad
fwait
pop
xor
test
cltd
not
mov
psraw
adc
sbb
fwait
incb
dec
dec
adc
and
sub
outsl
sbb
sbb
cmp
loop
repz
js
adc
outsb
not
testl
mov
lea
loopne
sub
add
sub
nop
test
mov
jns
pop
mov
mov
xlat
rcr
cmpsb
loop
nop
iret
jb
mov
test
aam
scas
scas
test
xor
dec
imul
mov
sub
repz
sub
js
lods
sbb
cld
sti
jmp
cmc
mov
ret
rclb
scas
mov
nop
mov
stos
mov
jo
and
jl,pn
mov
mov
dec
popa
xor
data16
sbb
adc
inc
xchg
mov
inc
jp
pop
inc
mov
cmp
cwtl
adc
lds
mov
in
mov
inc
sti
cs
mov
jo
js
adc
add
into
stos
xchg
jno
jle
sbb
mov
inc
pushf
sahf
pushf
in
sti
stos
jp
cs
aad
mov
popa
push
or
js
mov
jae
jo
test
dec
sub
lds
mov
imul
mov
xchg
push
jno
sub
xchg
jne
sbb
cmp
jp
ret
or
adc
mov
adc
add
fisubs
ret
mov
mov
sbbb
jnp
insl
int
movsb
mov
fimuls
cmp
movsb
pop
das
push
testb
add
mov
aad
cmp
popf
xchg
jo
add
sar
je
push
sub
and
stc
push
and
aaa
call
sbb
outsl
imul
fnstcw
aam
mov
adc
data16
or
inc
js
xchg
cmp
xlat
mov
sbb
xor
fs
ret
lock
dec
inc
adcb
test
cmp
repnz
lcall
push
mov
inc
dec
popf
or
mov
or
imul
mov
jg
or
stos
mov
xor
mov
out
mov
or
shlb
xor
inc
mov
test
repz
mov
push
mov
call
fstps
add
int3
js
fld
xor
jns
jb
js
mov
mov
pop
add
fisubrs
out
bound
add
lock
xchg
xchg
mov
push
movsl
cmpsl
out
addr16
repz
mov
jge
xchg
pusha
jmp
icebp
xor
sbb
inc
pop
inc
xchg
mov
mov
sbb
cltd
mov
test
jae
cmp
jle
popf
xchg
shll
gs
mov
les
test
lcall
xchg
xchg
dec
mov
inc
xor
push
inc
and
sub
mov
inc
jb
cli
pop
cmp
cld
popa
jno
in
mov
mov
enter
dec
adc
ret
jnp
arpl
sub
or
push
xchg
dec
insl
adc
clc
bound
jle
test
jb
sti
xchg
outsl
xchg
div
movzbl
inc
ja
sti
mov
jb
andl
dec
ss
mov
jae
jge
sahf
stos
dec
xor
or
sahf
inc
cld
outsb
test
mov
sub
sbb
push
fs
push
xchg
les
or
ret
jb
push
sti
pop
pop
sbb
adc
push
icebp
mov
or
adc
movsl
mov
add
cmc
lcall
sub
out
mov
test
repnz
dec
cmpsl
notb
xor
jp
out
pop
dec
scas
loopne
int
sarl
sbb
movsl
cmp
adc
pop
scas
add
mov
icebp
into
cmp
xchg
pop
fistpll
mov
xor
sub
sbb
pop
incl
pop
out
mov
lods
lret
mov
and
add
call
sub
stos
lret
mov
or
pmovmskb
mov
add
push
push
aam
fnstsw
adc
fsub
xchg
insb
pop
jno
fdivrs
in
out
clc
mov
shr
dec
add
cwtl
or
jmp
cli
jo
mov
imul
sbb
or
mov
push
sar
mov
sbb
sbb
mov
push
pop
stos
xchg
aaa
clc
mov
mov
push
stos
lcall
mov
aas
pop
mov
out
push
add
dec
jecxz
and
xor
adc
push
stos
sub
mov
dec
nop
ret
data16
sub
add
sarl
int
or
xor
imul
xchg
mov
sub
pop
call
lock
sub
fs
testb
mov
dec
addr16
pop
mov
inc
dec
fcoms
add
nop
xchg
out
pop
movsb
stos
sbb
jg
lds
cmp
fistpl
inc
add
dec
sarl
mov
adc
fs
sub
mov
push
jl
dec
dec
loope
push
sbb
jmp
mov
loop
lret
sub
jnp
repnz
jo
fwait
push
add
push
xor
push
nop
add
adc
sub
idivl
xor
aas
ficoms
das
or
cmpsl
cmp
sbb
sti
sub
jmp
inc
lret
testb
rorb
and
adc
cltd
popa
out
mov
in
rcrb
xchg
pop
bound
ror
sub
sbb
movsb
mov
adc
push
push
sub
ud1
scas
repnz
or
repz
push
out
test
das
pop
popf
inc
dec
mov
int
cmpl
lock
cmp
inc
cmc
or
and
lret
push
add
sahf
pushf
dec
add
sub
pop
outsl
jmp
dec
xor
mov
rolb
cltd
data16
push
outsb
xlat
cmpsl
aad
mov
rorl
cs
dec
lods
xor
insl
icebp
lods
or
js
or
insl
push
sbb
add
orb
cmp
adc
xchg
lahf
adc
push
sti
cmp
pop
adc
pop
cmpl
pop
js
cmp
mov
dec
repnz
dec
push
xlat
mov
adc
cmpsb
jae
sbb
pop
push
sahf
sahf
nop
xor
lods
mov
clc
mov
lcall
inc
inc
lret
scas
mov
stos
lcall
jae
movsb
jne
icebp
lds
subl
dec
iret
mov
dec
sbb
cltd
aaa
sub
adc
loop
lods
hlt
mov
dec
cmpsb
cmp
das
pushf
bound
adc
pop
jecxz
ret
test
inc
dec
inc
inc
aam
stc
pop
int3
dec
in
outsb
mov
negl
xor
arpl
adc
xor
xchg
mov
roll
mov
mov
mov
mov
popa
insb
movsb
mov
pusha
fistps
js
push
and
push
mov
rcl
test
dec
cld
repnz
dec
fstpt
scas
cmp
fimuls
fwait
lcall
in
fnstcw
notb
loopne
mov
test
pop
jmp
xchg
movsb
loope
roll
jmp
and
xchg
ror
mov
fwait
sbb
repz
dec
sbb
adc
dec
fucomip
cli
sub
xchg
inc
ret
lcall
nop
mov
aad
sbb
xor
daa
nop
xlat
stos
clc
mov
mov
push
add
or
and
daa
pop
mov
scas
jmp
mov
cld
mov
imul
pop
popf
sub
std
out
out
mov
pop
jns
xchg
add
aam
daa
adc
jecxz
lock
je
or
add
mov
jo
pop
or
add
mov
lods
jmp
loopne
imul
movsb
stos
jnp
js
pushf
ljmp
es
xor
pop
mov
xchg
dec
jmp
sub
and
dec
insb
lret
pop
mov
ds
adc
pop
dec
hlt
xchg
jmp
sti
int
pop
call
arpl
lahf
push
int3
imul
fsubrl
pop
pusha
in
shlb
loope
lcall
call
dec
xchg
inc
jl
in
mov
dec
pop
inc
test
cmp
jbe
test
sbb
sub
sub
dec
pop
sbb
popa
sub
push
dec
pop
xor
stc
inc
cmpsb
cs
sarl
mov
sub
dec
ret
sbb
insb
sub
mov
xorl
out
movsb
pop
xchg
and
inc
sbb
dec
inc
fwait
lcall
push
ja
add
cmpsb
jno
cld
std
loope
cmpsl
out
loope
push
movsb
repz
dec
inc
mov
and
inc
inc
dec
loop
rcll
lds
rcll
xchg
or
push
rep
pop
cmc
sti
add
sahf
sub
adc
xlat
nop
or
popl
cmp
mov
mov
jbe
dec
add
test
xchg
add
outsl
lods
sub
out
pushw
jge
js
inc
xchg
int
fdivr
imul
and
ja
icebp
shr
insl
mov
push
mov
in
pushw
lahf
mov
jp
sti
mov
gs
stc
cli
push
pop
mov
xchg
pop
dec
js
scas
insb
stos
jecxz
mov
icebp
xchg
cwtl
lahf
fadds
mov
jl
imul
das
shll
pushf
mov
and
sti
mov
lods
ds
sbb
jle
push
nop
mov
mov
sahf
stc
jl
rorl
dec
lret
lods
pop
pop
es
jo
jp
aam
jle
insl
cmc
push
add
adc
jmp
jmp
lahf
sahf
test
out
mov
outsl
es
pushf
popf
or
loopne
cmp
out
incl
xor
shlb
jno
fwait
mov
faddl
add
inc
or
les
adc
ficoml
js
mov
mov
pop
decl
pop
repz
inc
ret
xchg
inc
jp
in
imul
fisttps
lret
mov
mov
and
daa
fwait
xor
adc
xchg
fs
hlt
scas
std
xor
sbb
cli
outsl
jo
nopl
rcrb
jg
lret
xchg
mov
loopne
jp
pushf
jmp
or
stc
sub
pop
pop
inc
adc
lea
movsl
xchg
add
outsl
push
fcmovb
xchg
sbb
dec
loope
lods
ds
add
dec
int
or
lret
aas
pop
int3
jge
lea
imul
push
sub
add
int
xchg
int
js
out
fucomi
or
ret
mov
ljmp
fincstp
pop
scas
mov
dec
roll
addr16
jp
mov
push
ror
ret
jmp
mov
dec
fiadds
stc
add
add
mov
sbb
notb
mov
mov
jmp
addr16
andb
add
mov
testb
inc
pop
and
mov
push
ret
popf
mov
bound
jne
push
sbb
xlat
mov
addr16
dec
pushf
push
rorl
adc
mov
mov
outsl
outsb
xchg
scas
and
cmp
test
fwait
subl
adcb
dec
pop
push
dec
jo
aam
push
push
pop
cmc
jg
or
push
mov
das
sub
lods
sbb
jno
int3
jb
adc
xor
dec
push
mov
mov
imul
push
aaa
jmp
movsb
outsl
jo
in
clc
pop
push
xchg
add
fisttps
dec
push
inc
sbb
pop
call
mov
push
les
insl
or
push
xlat
add
mov
push
dec
pop
ljmp
and
xor
dec
fidivl
push
cwtl
sub
xor
mov
sbb
enter
aas
mov
test
or
xor
or
shl
lods
cmp
jmp
push
push
shrb
ja
jp
das
push
mov
mov
pop
xlat
sahf
or
pop
sbbl
sub
lret
or
push
in
outsl
lock
jo
jl
lahf
and
xchg
aam
repnz
inc
jg
ret
gs
nop
adc
in
int3
inc
dec
fisttpll
adc
sbb
mov
pop
adc
xor
mov
movsl
jno
mov
rolb
jne
fcmovbe
xchg
sub
sbb
movsl
dec
and
adc
or
and
fwait
or
fcom
hlt
imul
out
mov
mov
clc
lock
je
cld
enter
sarb
xor
mov
push
movsb
imul
add
pop
xchg
test
cltd
xchg
jo
and
scas
jp
lods
popa
sbb
jno
pushf
dec
js
push
enter
mov
push
lahf
imul
adcb
loope
ds
pusha
cmp
sbb
std
xchg
fucomi
pop
jp
loop
ds
mov
cmp
mov
into
xchg
arpl
cmp
xchg
xor
mov
aaa
jae
inc
test
and
push
addl
ret
in
test
sbb
icebp
mov
aam
pop
pop
pop
imulb
jno
dec
xchg
outsb
cmp
mov
sbb
sub
cmp
aad
push
lahf
sahf
inc
pop
sbb
adc
gs
mov
xchg
dec
ljmp
mov
push
pop
cmp
fsubs
out
inc
jno
or
mov
cli
lods
cmp
lcall
fnstcw
lret
pop
outsl
and
mov
xor
and
rcr
cmp
fcmovu
add
mov
mov
pop
or
mov
jmp
aad
dec
adcl
cmp
jg
push
or
ret
out
mov
cli
mov
mov
mov
imul
dec
mov
push
rorb
fimuls
lods
test
mov
rcl
fwait
sahf
fldenv
imul
stc
sbb
imul
jge
mov
push
sbb
jne
pusha
call
daa
sbb
jg
fcmovnu
mov
inc
lds
cltd
mull
lock
or
sbb
cld
jl
insb
and
xchg
imul
repnz
sbb
ja
shll
leave
std
pop
xor
testl
sahf
dec
jo
stos
daa
pop
push
jbe
mov
xor
add
imul
imul
cli
in
cmp
adc
mov
inc
jle
adc
stos
push
mov
in
jnp
xlat
fsubs
rcrb
es
lret
rcll
mov
pop
call
loop
add
in
ss
xchg
sbb
dec
fmull
jns
adc
out
add
call
mov
test
fwait
pop
iret
lcall
sbb
add
add
or
ja
inc
add
pop
imulb
pop
lahf
push
enter
cmp
popa
divl
sbb
out
sub
movsb
nop
popf
mov
adc
push
cli
dec
test
sub
inc
xlat
push
fmull
out
inc
pand
inc
aad
dec
mov
inc
leave
pop
dec
xchg
outsl
sub
dec
jo
inc
mov
adc
mov
xor
cmp
dec
out
push
adc
and
pop
aad
outsb
sub
xchg
inc
add
sub
jmp
call
imul
fdivs
or
pop
cmc
sti
mov
inc
jmp
jmp
mov
xchg
mov
cmp
mov
jl
xor
jmp
lods
cs
and
mov
rcl
cmp
pop
adc
add
cmpsl
xchg
sbb
rclb
or
sub
pop
add
rorb
and
lahf
mov
cli
scas
ret
hlt
stc
pusha
adc
divl
jle
in
pop
dec
push
mov
cmpsb
pop
ja
stos
scas
test
and
aad
ror
dec
cmp
mov
iret
sti
pop
ret
mov
xor
pop
test
loopne
inc
aas
push
dec
ss
cli
mov
cmp
add
cmp
stos
bound
cltd
push
fstps
inc
jo
cwtl
sub
pop
cwtl
ljmp
or
mov
push
xchg
jg
shl
ds
xor
push
xchg
popf
jne
xchg
mov
shll
and
push
adc
add
mov
movsl
push
cmpsl
push
dec
jp
mov
out
js
mov
pop
dec
cmp
mov
mov
int3
dec
and
stos
jecxz
out
loope
popa
xor
test
and
lea
clc
sub
cld
push
xor
sub
loope
es
in
mov
ret
and
cmc
adc
pushf
sbb
lods
rorb
pop
or
mov
faddp
gs
imul
xchg
ffree
push
fcmovne
mov
mov
sub
mov
cmp
leave
or
jb
insl
fbstp
bound
sbb
mov
ds
int
lcall
in
mov
push
and
pop
clc
and
xor
arpl
int3
jnp
mov
cmp
lods
lods
cli
movsb
arpl
mov
addl
stc
lret
mov
fistpl
popf
adc
sahf
lds
mov
xchg
lock
cltd
fisttps
jne
out
push
test
push
dec
jbe
insb
xor
mov
outsl
mov
inc
add
sbb
xor
dec
sub
dec
rcr
pop
jecxz
dec
lret
out
mov
cli
push
popf
outsl
push
sub
or
jmp
addb
dec
aam
sbb
push
lahf
arpl
popf
test
movsl
inc
lahf
bound
test
adc
lock
jo
scas
mulb
sbb
push
imul
push
mov
mov
xor
bswap
adc
stos
jg
xchg
mov
scas
dec
push
rcl
mov
push
nop
xlat
xchg
dec
jne
repnz
jg
jb
data16
out
repnz
jle
mov
sub
call
nop
sbb
mov
adc
and
xor
and
ror
out
testb
mov
lea
mov
scas
and
popf
out
aaa
ja
adc
loope
pusha
xor
push
bound
call
stos
add
ret
test
int
and
inc
ret
xchg
rol
shrb
or
shll
lock
mov
ljmp
lock
lods
cmp
sbbb
sub
nop
movsb
das
repnz
mov
jnp
mov
loopne
ds
mov
mov
scas
repnz
jge
jnp
mov
mov
cmp
cld
cmp
icebp
sbb
adc
push
imul
xchg
mov
pop
xchg
cmp
shlb
mov
pushf
les
popf
das
adc
xor
sbb
arpl
adc
shlb
nop
inc
loop
mov
aad
inc
push
push
dec
push
ret
dec
fadds
imul
movsb
lahf
call
inc
out
pop
add
lret
mov
jl
leave
loop
divb
xchg
scas
adc
bnd
push
inc
repz
sbb
jl
mov
mov
aam
nop
push
mov
mov
xchg
outsb
pop
mov
adc
mov
lds
mov
jb
fwait
cltd
ja
idivb
mov
mov
xor
in
fisubrs
cmpsl
push
jbe
push
mov
dec
mov
or
rcr
mov
dec
push
cmc
xor
and
rorl
test
mov
lock
xchg
xchg
scas
aad
arpl
insb
sbb
lea
addb
inc
outsb
mov
pop
dec
cld
jecxz
scas
pop
rorb
into
mov
jmp
xchg
cmovo
sub
mov
sbb
inc
pop
and
fucompp
jo
xchg
push
dec
xchg
js
sahf
sub
aas
mov
repz
stos
mov
pop
xorl
mov
fnsave
xchg
add
stc
ja
mov
fiaddl
enter
pop
xchg
jno
or
jno
mov
fcompl
add
enter
or
rol
testl
lds
fnstenv
xchg
xlat
test
mov
popf
pop
mov
jne
jmp
pop
push
je
jecxz
loope
inc
mov
inc
xchg
push
jno
and
sbb
test
push
mov
xchg
imulb
hlt
mov
enter
pop
mulb
push
dec
hlt
ret
movsb
xor
imul
adcl
out
jecxz
push
fldcw
lods
cmp
mov
icebp
daa
cmp
sub
rolb
subb
stc
mov
clc
mul
lea
mov
pop
sbb
in
insb
push
std
lcall
lcall
call
pop
add
and
aas
imul
adc
jb
push
sub
cmc
sbb
inc
xchg
jnp
rcrb
or
test
pop
mov
dec
dec
fstl
mov
pop
mov
and
dec
adc
ffree
mov
repz
movsl
sbb
imul
cmp
xor
outsl
dec
sbb
jp
out
call
mov
movsb
bnd
push
stos
dec
sbb
push
inc
std
or
ja
movb
notb
cmc
sub
or
add
js
out
xchg
sub
xchg
xchg
incb
mov
pop
xlat
leave
pop
mov
rolb
and
call
cs
pop
add
aad
inc
movhps
test
fildll
out
sbb
div
adc
xchg
cmp
int
inc
push
inc
jbe
mov
or
fs
dec
test
mov
sbb
fwait
test
int
sbb
pop
dec
pop
lea
xor
cmp
out
push
sbb
mov
fimuls
stc
stc
aam
and
mov
jno
iret
aas
push
mov
adc
sub
push
lret
popf
xchg
fistpl
pop
mov
cmp
insb
jae
mov
xchg
mov
dec
or
or
or
add
xchg
test
enter
xlat
leave
mov
pop
mov
movsl
xchg
fimull
mov
lahf
movsl
repz
mov
data16
mov
psubd
test
rcrb
xor
lods
jns
test
imul
jb
inc
adc
sti
mov
scas
dec
mov
add
jns
mov
repz
popf
int
add
pusha
or
jno
in
xor
lods
mov
add
addr16
dec
rcll
leave
pop
popa
aaa
test
mov
repz
in
or
adc
mov
lahf
jg
int
movsl
sbb
push
jle
ret
xchg
mov
xor
dec
lods
mov
jne
push
push
cmpsl
int
mov
sub
jae
stos
xchg
mov
in
sbb
jle
push
orl
adc
mov
dec
aaa
dec
pop
jns
adc
push
pushf
dec
in
xlat
adc
fwait
sbb
adc
pop
mov
cmpsl
xchg
sub
inc
jns
in
ret
out
xor
out
ror
add
push
mov
cmp
ror
or
pop
and
mov
mov
scas
push
adc
xchg
jge
push
inc
pop
dec
ds
add
pop
inc
bound
mov
push
cmp
xchg
xor
lahf
aas
lret
mov
sub
add
jge
fdivrp
inc
or
mov
ljmp
or
pusha
jg
in
jno
jl
sub
iret
cmpsb
adc
loope
mov
mov
cmpl
arpl
pop
and
add
jno
mov
or
jmp
xor
jecxz
push
rcl
ret
xchg
ror
inc
xor
sbb
push
pop
xchg
lret
adc
jl
jbe
into
cmp
mov
fcmovbe
push
cwtl
ficomps
dec
stos
insl
and
negb
xchg
inc
imul
push
mov
lret
pop
mov
mov
jne
stc
sub
call
mov
ret
outsl
xchg
and
imul
jb
or
fiaddl
xchg
xor
mov
aas
sub
aaa
adc
movsl
pop
dec
das
loopne
int3
sahf
shrl
nop
push
inc
pop
fdivrs
push
dec
mov
push
add
mov
and
in
lret
lahf
push
or
jns
inc
stc
lods
push
jge
pop
or
xor
popa
lahf
lea
cmc
mov
iret
jle
and
pushf
insb
cli
jmp
mov
inc
int
jne,pn
and
rcrl
inc
and
pop
push
jge
inc
adc
insl
out
shlb
pop
pop
pop
ljmp
add
repz
and
faddp
sub
dec
scas
xor
arpl
cmpsb
bnd
cld
fwait
xchg
scas
imul
loopne
inc
inc
xchg
sub
pop
lds
mov
sti
mov
push
or
mov
cmp
add
ja
jb
int
inc
inc
adc
inc
dec
pop
inc
mov
imul
out
fnstsw
add
cmp
inc
into
xchg
mov
es
mov
lret
gs
ret
add
aad
mov
mov
xlat
in
in
jnp
add
mov
stos
icebp
imul
cs
jno
inc
jp
push
or
or
rcl
sub
sub
dec
fists
sbb
pop
pusha
and
mov
mov
jecxz,pt
test
add
loop
testl
inc
out
jg
cmp
xor
insl
mov
fwait
mov
or
xchg
or
dec
repz
jl
in
pop
push
add
int
mov
mov
xchg
add
fisubrs
ds
push
or
or
rcll
dec
and
push
sub
in
lods
jo
int3
xchg
and
jp
and
mov
sbb
fwait
shlb
cltd
popf
shl
repz
fidivl
adc
and
sbb
pop
rcrb
scas
rcrb
js
dec
ds
pushf
pop
jp
loope
pushf
hlt
call
popa
cmp
loope
mov
sbb
inc
jle
jb
rcll
mov
adc
decl
outsl
cwtl
mov
aaa
xor
insb
push
hlt
outsb
cli
mov
mov
leave
dec
int3
clc
repnz
addb
inc
push
add
shlb
dec
jae
dec
dec
aam
fiadds
sbb
movsb
popa
negl
in
faddp
test
mov
mov
fwait
pop
ret
pop
insb
push
mov
sbb
adc
sbb
adc
into
clc
cli
ret
jb
mov
push
les
mov
lods
fldpi
mov
inc
jp
sub
sub
jo
mov
das
add
pop
arpl
xlat
dec
dec
mov
roll
push
xor
mov
jle
xor
movsl
push
mov
or
push
lret
aaa
pusha
inc
lods
jns
aaa
xor
rolb
mov
pop
mov
clc
mov
jno
ret
add
pop
xchg
push
in
mov
sbb
arpl
popa
jne
push
stc
sti
push
mov
cld
into
int3
sbb
fildll
cwtl
xor
sub
pop
icebp
jbe
lret
cmpsl
jp
arpl
xor
push
repnz
xchg
stc
scas
mov
add
out
jns
rolb
loope
cmp
mov
scas
and
mov
adc
cmp
icebp
les
loopne
cmp
xlat
cmp
lods
lock
adc
std
stc
std
iret
outsb
mov
jecxz
add
sbb
fadds
push
daa
adc
pop
xchg
pop
adc
xchg
out
loop
test
repnz
out
out
in
push
push
cli
sbb
stos
xchg
mov
iret
adc
imulb
sahf
adc
cmp
addl
or
and
mov
es
mov
gs
inc
int3
lret
mov
add
inc
add
pop
adc
cwtl
je
mov
sub
loopne
clc
mov
rorb
into
jg
sbb
cwtl
pushf
xchg
movsb
loopne
iret
pop
mov
rcrl
dec
sbb
pop
loope
and
out
xor
scas
lret
or
push
pop
dec
and
js
fs
adc
roll
mov
pop
cmp
pop
cmp
inc
out
xor
arpl
aad
repz
xchg
in
push
mov
lods
test
into
int3
es
mov
xchg
outsb
sub
js
pop
pop
dec
or
pusha
addr16
ljmp
fistpl
into
out
lock
mov
das
fildl
sti
leave
xlat
ret
dec
xor
popf
mov
inc
mov
lret
pushl
sub
fsubrs
inc
cmp
das
mov
lods
faddp
xchg
pusha
cmpsl
insb
push
aam
add
aam
and
jl
leave
jg
cltd
xchg
add
xchg
push
insb
or
pop
add
inc
mov
xlat
imul
ret
ds
dec
push
pop
gs
loopne
rcll
dec
stc
pop
dec
push
cwtl
aam
jle
sbb
sub
push
xchg
or
rclb
out
sahf
mov
cmp
cmpsl
repz
ret
mov
jge
sub
add
push
in
cmp
aad
repnz
push
in
cmp
dec
ljmp
push
hlt
sbb
push
and
or
inc
mov
mov
lcall
imul
.byte
