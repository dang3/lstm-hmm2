sbb
add
mov
xchg
loope
out
pushf
adc
insb
cmc
cltd
rep
in
adc
pop
clc
dec
pop
test
in
pushf
sbb
and
mov
push
mov
xchg
push
popf
sbb
or
add
mov
popa
inc
shlb
xlat
imul
and
sahf
dec
inc
jns
repnz
sub
jg
push
ljmp
and
stos
popw
mov
sub
jge
test
sbb
xor
or
imul
sub
data16
jg
pop
mov
in
or
test
pusha
mov
repnz
push
movl
xor
adc
arpl
push
pusha
inc
mov
inc
ljmp
je
xchg
sahf
cmp
loope
pop
fst
mov
jmp
fldcw
jecxz
inc
mull
roll
jae
sbb
ss
mov
fadds
xor
dec
or
sti
idivl
imul
das
push
loop
dec
adc
jo
data16
paddsb
adc
mov
inc
xchg
xchg
fildl
sbb
cmp
adc
sbb
sti
pop
gs
mov
mov
inc
inc
ficomps
and
das
mov
mov
stos
xchg
mov
lods
xor
enter
xchg
int3
inc
aad
sub
popf
cmpsb
jmp
adc
cld
jmp
xor
fnstenv
jnp
lcall
loope
mov
cld
adc
sub
ds
cmp
fsubs
ret
fisubrs
xchg
subl
or
ret
in
sub
ss
mov
xchg
test
lcall
push
dec
fwait
pusha
and
push
mov
sub
sbb
inc
cli
in
addr16
jg
jbe
je
and
mov
gs
cvtpi2ps
mov
jecxz
mov
cmp
aad
sub
fstl
mov
xlat
push
cld
inc
fsubl
mov
dec
repz
cmc
xchg
das
mov
xchg
mov
inc
cmp
sub
call
and
mov
push
cmp
pop
xchg
pop
addb
imul
dec
sub
int
in
mov
cltd
pushf
xor
jmp
add
mov
movsb
notl
cltd
push
imul
push
fsubl
fidivrl
fwait
cmpsl
int3
lahf
jno
mov
mov
shrb
xchg
mov
daa
jno
decb
sahf
adc
fbstp
xchg
sub
pusha
push
jge
mov
sbb
pop
dec
add
stc
inc
js
add
jne
xor
mov
loope
imul
dec
loopne
xchg
fidivs
jns
xchg
xor
addr16
inc
leave
xor
add
lock
sub
mov
cmp
fisubs
mov
xor
jle
add
pop
jecxz
xchg
and
fs
mov
and
bound
popf
push
pop
pop
lret
push
sbb
stos
test
daa
inc
mov
outsl
test
or
cmpsb
cmpsb
xchg
sbb
push
outsb
xor
int3
push
jbe
mov
mov
or
cmc
imul
fdivrl
mov
shrl
cmc
mov
ss
outsl
inc
lea
pusha
cmp
fnstenv
in
adcb
shlb
or
sbb
push
sub
dec
mov
notl
outsb
sbb
jne
xchg
add
push
mov
dec
ljmp
pop
jle
pop
mov
cwtl
adc
lcall
adc
or
pop
pop
jo
pushl
cmp
add
movsb
outsl
xlat
xchg
hlt
xchg
fwait
js
cmpl
mov
pusha
push
iret
loop
dec
cltd
mov
ret
test
mov
in
lea
cmp
jne
mov
aaa
and
test
les
loop
cmp
cmpb
push
cmp
and
data16
pushf
mov
jnp
cmp
jbe
mov
mov
mov
jne
std
mov
mov
ds
sbb
sub
cmpsl
dec
or
stc
cld
and
mov
sub
ljmp
push
ljmp
popa
jle
testb
xchg
fwait
aad
jb
push
pop
gs
fsubrl
out
fcoml
lods
sbb
fisubs
dec
push
pop
mov
fwait
lcall
pop
inc
jb
movsb
into
cmp
in
leave
out
sub
cld
scas
idiv
out
dec
push
js
cmp
shl
addr16
jmp
subl
dec
lret
dec
mov
add
adc
aam
add
push
pop
shll
push
sahf
adc
pusha
jp
ja
dec
int3
or
cmp
loop
hlt
add
ret
dec
pop
mov
mov
scas
cmpsl
repz
sub
cmp
sti
jns
mov
push
cwtl
push
insb
dec
xlat
push
pop
adc
mov
xor
pop
nop
mov
mov
mov
push
push
jl
push
gs
cmc
or
mov
mov
mov
push
sub
push
xor
adc
and
xor
jecxz
mov
mov
addl
mov
cmp
pop
popa
dec
repz
add
mov
pop
mov
cli
rcll
mov
clc
xchg
pop
cmp
negb
iret
cmpb
outsb
cmp
ja
mov
push
sbb
jle
shrb
aas
mov
push
xchg
test
int
mov
and
test
insl
clc
xor
xchg
in
xor
or
repnz
outsb
jl
mov
aas
mov
mov
push
stc
xchg
sub
or
fdivl
inc
mov
stos
popf
mov
xchg
stc
cltd
ja
jo
icebp
sbb
outsl
push
adc
push
pushf
adc
jb
popa
jae
lahf
mov
push
adc
pop
jecxz
daa
or
loop
testl
addb
out
dec
xchg
ret
aad
sub
mov
sbb
ss
shr
hlt
sbb
bound
popa
mov
and
xchg
lods
lods
xchg
dec
mov
rclb
lret
mov
dec
push
outsl
les
push
div
mov
mov
pop
cld
dec
push
or
movsl
jns
stos
mov
inc
iret
xor
int
dec
pushf
and
pop
cli
aam
push
outsb
xchg
push
insb
cmp
lahf
push
add
mul
inc
cmpsb
or
xchg
add
adc
add
ret
mov
inc
into
push
mov
enter
sub
in
daa
cwtl
shrb
loopne
mov
cmpsb
roll
sbb
sbb
pop
test
push
pop
scas
cld
jne
fidivs
cmc
jle
mov
add
xchg
add
xor
jb
outsb
cs
mov
jb
or
push
dec
shlb
rorl
adc
es
in
adcl
ljmp
int
add
into
push
inc
lock
dec
outsb
stos
cli
loop
jb,pt
xorb
pushf
das
mov
mov
in
and
mov
in
movsl
mov
roll
mov
dec
sbb
jg
popf
test
or
push
lret
push
xchg
pop
iret
add
add
into
pop
jmp
adc
fcomp
inc
ljmp
ffreep
jb
out
dec
dec
inc
xchg
repnz
xor
cmp
mov
sub
mov
add
xlat
xor
and
push
jmp
xor
jne
jmp
clc
imul
jmp
push
push
mov
out
push
test
xchg
xlat
jecxz
xchg
outsb
push
sub
sub
stos
ret
dec
ds
dec
es
icebp
and
mov
cmp
cmp
fdivp
push
xlat
in
lods
aas
nop
xchg
pop
ret
push
repz
inc
mov
test
inc
pop
pop
loope
pop
xchg
xor
sub
jecxz
inc
repz
stos
hlt
mov
xchg
addb
dec
ja
aas
or
cmp
clc
jno
cwtl
cmp
sub
insb
movsb
pop
outsl
push
jno,pt
dec
mov
add
pop
pop
push
sub
bound
lds
dec
pop
pcmpgtb
add
nop
insb
xchg
insb
fs
jae
loop
xlat
xor
hlt
jecxz
dec
jp
xchg
jnp
mov
notl
out
ljmp
pop
imul
jbe
in
mov
sub
lret
xor
in
es
outsb
push
clc
inc
nop
mov
pushf
add
inc
cmp
or
int
and
jecxz
out
roll
dec
add
mov
xor
pop
movl
pop
out
jle
add
jnp
pop
pop
das
fbstp
fcompl
push
dec
xor
jle
xchg
pop
pop
xchg
out
mov
pop
cmpb
add
rcrl
or
mov
jnp
js
inc
or
add
testl
mov
sbb
aaa
cltd
stos
cmp
jae
fidivl
sbb
sub
aad
movsl
dec
das
mov
add
adc
stos
mov
mov
lret
cltd
adc
in
lret
push
push
icebp
ret
test
test
mov
fbld
dec
xor
shl
addr16
data16
mov
arpl
ret
jl
push
fbld
cmp
and
add
les
cmpl
or
test
pop
daa
addr16
add
fdivr
adc
sub
cmp
add
jnp
insb
jge
mov
jge
fsubrl
daa
mov
pop
dec
xlat
push
shll
outsb
inc
popf
dec
dec
lahf
sbb
cmpsl
out
push
and
inc
sub
sbb
or
or
cltd
mov
enter
xor
inc
xor
test
sub
lahf
mov
mov
and
cmp
xchg
and
in
loope
xchg
aaa
aas
push
mov
mov
sbb
pusha
fdiv
jnp
sub
pushf
stc
inc
pop
and
fistl
jbe
lods
es
mull
in
stc
inc
and
xor
sbb
aaa
jns
jp
xor
nop
test
movsl
sbb
popf
mov
cmp
and
leave
loope
jmp
imul
xchg
jae
xchg
pop
adc
bound
popf
inc
pop
out
jmp
movsl
ret
jl
ret
push
test
dec
inc
ret
pop
and
loope
jmp
inc
and
mov
push
sub
mov
pop
pusha
xor
dec
hlt
imul
aam
mov
aas
fwait
repnz
cmp
sub
stos
icebp
add
sbb
inc
int
xor
mov
std
les
push
stc
jle
jnp
lds
call
hlt
test
pusha
sbb
mov
test
pushl
sub
es
test
fucomip
iret
jno
js
xor
cmp
jmp
mov
popa
shll
lea
push
cli
adc
lahf
ds
adcb
andb
icebp
dec
cmp
in
mov
lret
movsl
adc
fdiv
jns
xor
sbb
xchg
andl
fcomi
push
inc
mov
pop
iret
mov
xchg
std
add
mov
mov
outsb
xchg
bound
xlat
rcll
cld
fidivs
and
test
inc
call
imul
test
push
inc
rolb
pop
xor
push
and
stc
and
loopne
orl
push
insl
sbb
je
lods
sete
jmpw
in
out
insb
repnz
aas
mov
push
addr16
adc
lds
repz
pop
push
cmp
adc
adc
pusha
test
in
cmp
jp
or
xchg
in
test
sahf
loope
daa
aaa
out
mov
pop
or
cli
insb
sahf
stos
cld
mov
scas
enter
shrl
adc
loopne
ret
mov
lcall
inc
pop
fsubrl
iret
std
mov
fisubl
int
faddl
cld
push
dec
fwait
scas
adc
mov
scas
sub
in
fs
jp
jnp
fidivrs
fs
dec
dec
mov
ja
sbb
ja
out
aam
loop
je
test
or
mov
xor
pushf
inc
cli
iret
inc
shlb
mov
add
aad
sub
pop
mov
imulb
mov
sub
mov
jmp
insb
mov
dec
nop
nop
mov
mov
and
dec
fwait
repnz
xchg
js
push
addr16
test
rcrb
mov
lods
popa
xlat
jmp
pop
xchg
std
les
popa
stc
outsb
loop
int
insl
lcall
es
and
iret
aam
in
push
mov
call
test
push
jbe
mov
test
inc
cs
sti
adc
enter
ja
jno
dec
jo
sub
and
jno
or
xor
aad
dec
jmp
je
hlt
cmp
cld
aas
and
xor
mov
pop
ret
shl
loope
lcall
in
fistl
in
call
xor
jl
or
int
ja
jmp
mov
lahf
jmp
adc
cli
mov
cmp
outsb
movl
adc
out
and
add
aaa
mov
insb
stc
rcrl
out
or
leave
je
daa
fs
jo
sbb
sub
inc
incb
rcll
jle
mov
xor
cmp
add
sti
cmp
ret
andb
out
push
jmp
cmp
xor
shrb
ss
lods
insl
inc
subl
or
clc
inc
adc
mov
jecxz
leave
inc
bnd
mov
fdivrs
ret
outsl
or
and
pop
lret
roll
or
in
xchg
mov
mov
fidivrs
jb
mov
mov
and
jns
sbb
add
int3
movsb
adc
mov
inc
push
mov
test
push
inc
in
repnz
xor
popaw
addr16
aas
pushf
testb
cwtl
loop
aad
ja
jnp
ss
sub
push
push
fadds
pop
mov
jg
mov
pop
inc
out
mov
jmp
pop
and
cs
rcr
push
push
push
xor
arpl
inc
stos
and
cwtl
cmpsl
mov
or
call
sbb
sub
fisubrl
xor
daa
repnz
bound
rcrl
pop
push
pop
mov
in
out
xchg
push
pushf
push
push
icebp
inc
outsb
pop
cmpsl
jecxz
pop
imul
lret
push
push
and
sbb
adcb
cmpsb
aas
dec
add
cmp
add
stos
inc
jl
jae
push
jo
adc
repnz
pop
out
lods
xor
jo
sub
stos
dec
add
aad
sbb
cmp
adc
sti
sbb
into
cmp
int3
and
jne
jmp
outsb
sbb
mov
and
adc
int3
jmp
cltd
jp
push
jmp
iret
pcmpeqw
addb
lcall
dec
push
sarb
insl
adcl
adc
adc
and
loop
sarl
stc
mov
sbb
pop
outsb
sbb
and
adc
push
loopne
mov
leave
xchg
lahf
loope
jnp
clc
inc
add
mov
cmp
jle
fbld
addr16
push
int
scas
inc
adc
les
inc
aad
pmulhuw
cmp
mov
call
out
insl
mov
loopne
es
in
stos
add
pop
or
push
xchg
jg
dec
mov
pop
push
aaa
lea
inc
into
and
loop
xchg
cli
pop
icebp
push
cmpsb
pushf
lret
pushf
icebp
add
ja
push
mov
popl
dec
dec
add
cwtl
mov
pop
enter
sub
notb
dec
test
jns
pop
jg
sbb
sub
cmpsb
sbb
cwtl
rorl
lods
aas
sbb
jb
jg
mov
mov
inc
lcall
rorb
xor
enter
jle
call
sarl
loop
sbb
inc
mov
fimuls
xchg
mov
sbb
sub
inc
adc
int3
mov
fcmovb
inc
arpl
mov
outsb
xchg
xor
ret
dec
sahf
repz
imul
xor
and
fcmovb
pusha
fld
fsubl
push
mov
jbe
adc
imul
insl
mov
push
daa
negl
sub
lcall
cmp
dec
mov
xor
inc
add
or
push
mov
push
xor
xchg
pop
push
push
outsl
shrb
int
aad
orb
xor
das
or
or
jno
aad
push
and
sub
in
lods
imul
sbb
xor
mov
loop
push
scas
in
popa
add
push
stos
push
pusha
sahf
and
inc
push
or
mov
fldenv
repnz
cmp
arpl
inc
sbb
dec
lret
add
sbb
aas
mov
adc
stc
inc
xchg
aam
xchg
xor
push
mov
shl
mov
hlt
add
or
mov
cmp
fucomip
aam
pop
add
cmpsb
fadds
mov
rolb
jbe
and
pop
xor
das
push
popf
add
xor
and
xchg
push
jp
stos
int
movsl
sub
push
lea
inc
mov
imul
mov
pusha
mov
out
push
adc
inc
add
and
lcall
adc
loope
pop
mov
sbb
mov
enter
cmpsl
and
xchg
mov
cmp
js
add
adc
lcall
xchg
add
ljmp
sbb
std
sbb
adc
xchg
or
mov
adc
pop
rcrl
jp
pop
and
mov
dec
addl
popl
push
fstpt
push
enter
ja
pop
cmc
add
pop
mov
push
popa
outsb
mov
xlat
adc
repnz
or
jne
jecxz
sbb
mov
loop
fwait
push
add
lds
rcr
adc
dec
pop
in
in
push
dec
scas
adc
jp
xchg
mov
push
xchg
pop
mov
test
or
mov
scas
xor
out
inc
adc
sub
fstl
stos
sub
test
push
mov
xor
fwait
jne
stos
cltd
adc
outsb
xor
sub
roll
dec
test
scas
mov
jmp
pushf
subl
into
movsl
or
psrlq
sbb
cmp
mov
mov
call
ljmp
or
andl
stos
and
insl
jns
pop
or
inc
cmpsb
mov
mov
bnd
dec
push
das
cmp
add
cmc
aaa
add
xchg
mov
repz
xchg
inc
es
xchg
mov
lock
sub
dec
mov
xchg
or
and
test
push
add
sarb
outsl
data16
fcmovnu
pop
sub
dec
adc
mov
dec
fmuls
pop
ja
pop
mov
sarl
pop
mov
lahf
adc
mov
jg
sub
push
sbb
inc
ds
and
fiadds
mov
negb
test
add
add
imul
mov
jb
movsb
push
mov
add
int3
jns
cs
dec
enter
ss
clc
enter
insb
popf
push
or
cmp
aas
scas
mov
jnp
test
stc
xchg
fld
push
mov
xlat
xor
mov
inc
clc
push
jnp
fsts
push
mov
shl
js
flds
xchg
and
add
insl
or
push
stc
xchg
mov
jno
leave
xor
jo
loope
mov
sub
dec
dec
popf
jo
pop
sahf
repz
lock
sbb
xor
cmp
pop
insb
loop
stc
lea
test
stc
sarb
ja
mov
cmpsb
mov
sub
scas
int3
arpl
or
xor
shl
push
dec
mov
scas
stos
mov
outsl
xor
inc
inc
mov
pop
cmp
sbb
xchg
pop
dec
mov
jge
jb
and
push
repnz
test
pop
mov
mov
jb
push
outsb
adc
push
xor
clc
add
sahf
or
xchg
adc
shrb
lahf
stos
inc
repnz
add
cmp
mov
cli
fdivrs
cmpsl
mov
fistps
jp
xchg
pop
icebp
adc
shrb
jbe
pop
movsl
jo
icebp
add
iret
ffree
mov
insb
ljmp
in
xor
or
loope
xor
cli
or
out
addr16
dec
lds
out
xchg
lret
dec
les
out
aam
fnstcw
xchg
shl
icebp
xchg
movsb
mov
je
in
jg
in
pop
or
cli
sub
cmp
cs
pop
pop
les
ljmp
fsub
aam
popf
pop
cmp
adc
lea
xlat
mov
sub
mov
orb
stos
adc
pop
pop
push
in
cmpsl
jb
ret
js
cmpsl
sahf
loop
mov
nop
ja
sar
mov
pop
push
or
jno
and
clc
mov
jno
arpl
hlt
jle
cmp
inc
mov
rcr
inc
in
aaa
test
xchg
out
insb
inc
jecxz
enter
mov
scas
ret
adc
pusha
test
cli
test
shl
pop
test
ja
aam
addl
mov
pop
sti
mov
inc
ja
mov
lea
adc
mov
inc
sub
push
ret
idivl
idivb
les
and
out
pop
xchg
sbb
inc
mov
mov
inc
out
int
push
jg
cmp
or
mov
test
add
das
add
sub
sbb
idivl
or
cmp
xorl
jmp
idivl
inc
cmpb
leave
sbb
inc
jb
loopne
lods
dec
dec
dec
outsl
enter
xor
add
adc
outsb
icebp
sahf
sar
mov
aaa
or
mov
sbb
outsl
xor
adc
cmp
ds
test
ficoms
iret
inc
imul
mov
or
sahf
cs
mov
daa
arpl
adc
ss
and
stos
daa
or
lcall
inc
pop
call
inc
cmp
rcr
jmp
repnz
jl
push
dec
repz
inc
cltd
xchg
fiadds
jle
add
movsl
leave
clc
out
into
push
scas
repnz
cmp
mov
popf
test
mov
sub
data16
test
mov
fstl
ficomps
xor
fadds
jle
cmpsl
mov
fcmovnu
mov
and
add
ret
out
cmp
push
pop
sub
push
pusha
inc
cld
adc
mov
sbb
lock
cwtl
and
add
jp
sub
xchg
push
cmc
pop
jmp
sbb
adc
rcr
sbb
push
add
pop
fstl
mov
or
cli
adc
test
repnz
xchg
pop
cmp
in
shl
pushf
adc
cwtl
xor
ret
sbb
or
scas
cltd
mov
hlt
fnsave
mov
inc
pop
sub
sub
in
lods
gs
ss
outsl
fimuls
push
xchg
jge
jnp
ficoml
fnstcw
cmpsl
cmp
call
sub
popa
aad
mov
outsb
lock
cwtl
adc
jo
sbb
inc
pusha
out
xor
pusha
mov
dec
lods
xchg
dec
adc
popa
mov
adc
inc
cmp
xor
mov
orb
and
or
in
xor
mov
or
andb
cli
sub
xchg
lcall
cmpsb
or
mov
fwait
pushf
mov
cwtl
test
xchg
mov
mov
lea
lds
pop
xlat
stos
lahf
or
gs
sbb
decl
xor
adc
shll
and
lahf
and
cmpsb
mov
cld
nop
hlt
fsts
mov
xor
push
or
mov
movsb
test
imul
cmpl
cld
cmp
pushf
mov
das
in
mov
xor
aas
adc
adc
mov
out
test
sub
push
jnp
pop
pusha
or
jo
push
sub
sub
sub
cmp
mov
push
push
and
mov
pop
aad
stos
push
inc
pusha
mov
pop
mov
xchg
xor
dec
sub
jbe
jae
sub
push
push
or
sub
xorb
je
enter
add
or
or
lods
cmp
xchg
xchg
and
inc
jbe
cmpsb
imul
sbb
outsl
pushl
sub
setg
pop
jmp
and
cmp
inc
xorl
rep
loope
push
xchg
cmp
xchg
es
insl
jg
movaps
ror
mov
in
into
mov
mov
mov
or
popf
int3
sbb
add
jne
jle
jecxz
mov
sub
mov
ja
fcomps
sub
adc
negl
icebp
xor
push
mov
xchg
jl
cmpsb
lods
sbb
sub
push
push
sub
popf
daa
jo
test
lock
push
cmpl
cltd
popa
pushf
lea
push
enter
rcll
pop
insw
add
out
cmp
icebp
lods
ja
mov
and
and
sbb
popf
mov
loope
xchg
enter
nop
ret
adc
enter
cmp
dec
jns
popa
dec
jl
jp
iret
repz
cmp
xchg
cmp
or
lret
inc
push
jecxz
xor
cltd
xchg
ds
adc
fwait
les
loop
cli
ja
add
dec
sub
sti
pop
out
iret
jmp
cmp
mov
adcb
sbb
mov
jns
and
and
dec
mov
and
test
cltd
clc
imulb
dec
inc
add
mov
in
lods
pop
ljmp
dec
movsb
lea
sti
fisubl
in
push
imul
clc
push
mov
xor
jns
outsb
scas
cmpsl
dec
sub
xchg
jnp
stos
adc
in
ret
ja
dec
add
fisubs
das
int
neg
insl
in
inc
lods
rcrb
shrl
jge
adcb
dec
daa
xorl
pop
add
iret
ljmp
or
addr16
cmp
mov
xchg
scas
inc
mov
adc
cmc
sub
push
stos
hlt
insb
and
jmp
clc
mov
inc
dec
ret
lods
jle
out
jle
sbb
push
mov
sub
lahf
jecxz
xorb
inc
and
mov
aam
pop
cmp
shll
inc
leave
push
add
or
outsb
out
add
pop
cmp
ja
ja
repnz
scas
dec
or
sub
mov
mov
fdivrl
pop
sbb
sahf
inc
xlat
mov
inc
cmpsb
aaa
js
stos
lods
rcrb
jns
fs
aam
push
push
inc
mov
fnstsw
imul
inc
inc
fsts
daa
sub
cmp
std
call
lea
cltd
inc
xchg
fld
sbb
xor
dec
push
out
lods
mov
mov
sub
mov
mov
mov
sbb
and
dec
ljmp
pop
mov
ds
add
sahf
fstpt
jne
ret
xor
subb
inc
push
mov
outsb
xchg
in
cld
and
xor
lret
arpl
add
fs
mov
lods
jp
jns
xor
addr16
shrb
jae
fnstcw
ss
pop
push
jp
popa
and
hlt
lret
inc
fstl
mov
fcmovnu
jle
lea
les
js
outsb
pop
push
cmp
and
cld
inc
ja
add
xchg
movsl
push
cld
or
push
into
cltd
mov
sarb
pop
sarb
sarl
mov
les
fidivl
ss
or
add
xchg
push
xchg
push
jmp
fcomps
pop
push
add
fxch
inc
fldt
cld
das
push
ret
mov
sar
mov
out
pop
jle
divb
popa
mov
nop
fisubrs
js
fiadds
arpl
push
jne
pusha
popf
dec
sti
fnstenv
or
jne
dec
xor
push
inc
movsb
dec
push
jle
inc
push
pop
dec
pushf
data16
adc
sub
inc
inc
jnp
loopne
mov
cmpsl
and
lods
js
notb
lods
enter
arpl
cwtl
test
sub
shll
pop
aam
cld
adc
xor
mov
fsub
push
sbb
push
jbe
lods
add
cmp
dec
dec
jg
xchg
push
mov
cld
and
sarb
loope
incb
dec
push
mov
cmpsb
and
loope
test
and
sbb
push
rorl
addr16
in
call
hlt
jnp
or
sbb
es
adc
cwtl
mull
jl
loopne
push
inc
inc
push
mov
fimull
outsl
xchg
pop
push
movsl
aas
pushl
das
rclb
cli
xchg
sbb
cmp
dec
mov
ss
xchg
loopne
and
add
mov
addl
fdiv
pop
cltd
stc
icebp
push
shll
fs
bound
ss
insb
mov
jl
arpl
out
lods
cmp
adc
cs
iret
pop
mov
iret
stos
stos
outsl
pop
popf
aad
pop
push
inc
xchg
repnz
enter
xor
fs
mov
xchg
dec
mov
jecxz
out
or
or
es
repz
rcrb
ljmp
inc
add
adcl
pop
inc
leave
sbb
sbb
mov
mov
out
add
xchg
or
adcb
fs
lock
add
xor
lea
leave
movsb
cli
adc
add
scas
fdivs
clc
lods
lea
mov
push
test
fcmovb
into
mov
insl
and
lods
dec
ss
add
pop
mov
sub
inc
lods
mov
repz
pop
xchg
cmp
xchg
or
push
mov
in
dec
nop
in
ljmp
call
nop
mov
lock
cs
or
out
shll
rcrb
cmp
iret
mov
xchg
xchg
data16
out
dec
dec
or
dec
test
stos
fstpt
and
in
cmp
sub
mov
or
daa
xchg
mov
add
inc
loop
mov
mov
ljmp
into
add
and
psubusw
xchg
cmc
ljmp
xlat
pushf
or
in
ja
scas
xor
push
fisubrl
xchg
into
pop
aam
and
jmp
je
dec
fs
lret
das
cmc
pop
rclb
scas
pop
aam
mov
lret
sub
jbe
ja
or
rolb
ljmp
shlb
mov
jge
xchg
dec
lret
or
aam
push
sub
sbb
mov
or
xor
aaa
pop
fwait
imul
mov
inc
je
lahf
test
mov
mov
decb
stc
pop
scas
outsl
pusha
mov
bound
mov
stos
bound
lea
ret
jmp
arpl
cmpb
mov
fbstp
push
call
fldt
std
arpl
movsl
jne
das
xor
jno
stos
lods
pop
stc
mov
xor
jns
clc
push
xchg
outsl
xor
and
jns
sarb
lods
xchg
mov
in
push
mov
jb
cmp
testl
sti
fmuls
popa
in
adc
pop
mov
adc
inc
daa
adc
dec
btcl
push
lds
sbb
loopne
insb
cli
or
mov
and
mov
lahf
fsubrs
adc
cmpsb
mov
add
clc
jnp
jl
jge
pop
pop
jp
rorl
jne
and
sub
push
aam
jae
leave
inc
inc
ficompl
add
ljmp
fimuls
scas
push
in
and
mov
xor
lods
sub
and
call
outsb
sbb
repnz
push
fs
js
test
jle
jns
cmp
cmp
or
test
jno
xchg
and
and
nop
mov
lcall
xlat
cltd
and
jns
pop
xor
subl
jmp
add
enter
jg
jp
test
stc
push
mov
push
popa
add
cmp
xor
adc
gs
aaa
out
and
add
cmpsb
dec
stos
add
push
popl
mov
or
cmp
es
push
cltd
sbb
out
pop
mov
add
cld
add
leave
fnsave
loopne
pop
jne
mov
mov
or
jbe
adc
pop
mov
mov
rcrb
mov
cmp
or
aaa
sbb
hlt
mov
jno
jmp
je
inc
and
inc
shrl
mov
pop
push
je
rorl
push
shr
xchg
daa
mov
mov
mov
stos
scas
clc
or
and
push
daa
test
push
and
rcll
ret
test
imul
inc
push
push
xor
roll
xchg
cli
scas
ja
sub
cmpsb
out
add
fisttpll
push
lock
frstor
jb
gs
xchg
bound
xor
and
std
clc
out
fwait
jle
nop
insl
cld
add
andl
stc
sbb
xorl
test
int
cmpsb
popf
stos
xor
mov
cwtl
std
std
mov
xor
sub
add
je
push
rcrb
sbb
or
inc
lds
leave
sub
adc
or
out
cmp
mov
mov
int3
sbb
lods
jmp
sarb
sub
and
dec
adc
inc
xor
xchg
push
sbb
rcrl
xor
lods
push
out
sub
ss
cmp
pop
insb
mov
xchg
pop
cmp
pushf
cmp
cmp
adc
xor
cmp
mov
std
incl
push
and
sbb
xchg
mov
jp
fists
subl
hlt
sbb
or
inc
xchg
add
or
das
insb
sub
jge
fiadds
xchg
sti
cmp
push
adc
je
inc
push
notl
xchg
mov
add
or
enter
mov
out
inc
dec
pop
adc
pop
pop
cmp
cmp
pop
lea
add
into
cmp
adc
sub
ja
js
movl
repnz
inc
std
sbb
ja
scas
test
scas
mov
cmp
adc
and
fiadds
adc
mov
mov
dec
xlat
out
mov
cmp
mov
loopne
and
pop
in
adc
sbb
xchg
scas
ja
imul
jne
cmpb
mov
add
xlat
mov
and
lock
mov
inc
cmp
leave
jns
fwait
xchg
fucomip
sbbb
imul
jno
aam
lret
sbb
xchg
sub
mov
stc
aad
js
repz
fcompl
out
pop
jp
in
jnp
dec
add
repnz
rdpmc
jbe
negb
jb
dec
sub
add
aas
mov
outsl
sub
cs
pop
cmp
mov
sub
pop
mov
rcll
jge
test
ds
sbb
and
nop
pop
adc
and
mov
and
jmp
adc
or
add
push
cltd
addr16
cmpsl
cld
or
hlt
jnp
xor
outsb
and
fidivrl
imul
in
push
add
lock
insb
loope
pop
scas
mov
cmp
dec
jge
lock
fsubl
cld
imul
roll
lretw
out
and
int
mov
imul
cwtl
adc
sub
jg
pop
orl
push
loope
sarl
das
cmp
popf
fisttps
popa
mov
dec
xchg
mov
jge
and
lods
mov
popf
shrl
imul
sub
das
mov
xchg
push
mov
and
lods
pusha
sub
mov
push
mov
testb
loope
pop
stos
push
mov
jo
call
and
lock
daa
sub
dec
pushf
lods
call
xchg
in
aam
jne
xor
mov
jle
rorb
lret
je
mov
inc
js
or
jmp
mov
mov
and
pushf
ss
mov
jl
jp
adc
std
js
sbb
adc
cmp
ja
lret
adcl
jns
ja
and
mov
js
repnz
xlat
mov
ret
mov
movsb
or
aaa
xchg
es
lea
call
xchg
adc
jmp
mov
mov
mov
fnsave
add
jecxz
test
fmul
mov
xlat
scas
je
loopne
int
cmpsl
add
adc
fisubs
sbb
adc
push
out
cmpsb
push
lea
out
cltd
ljmp
iret
sub
xor
mov
sub
rcrb
sbb
jbe
cld
cmpl
hlt
loopne
adc
push
xlat
lret
into
out
jae
cmp
xchg
and
cmpb
dec
aad
ss
sub
mov
add
mov
push
jb
sub
enter
movsl
xor
insl
sbbb
xchg
fwait
cwtl
int
cmp
mov
adc
das
mov
bound
dec
mov
lret
jae
pop
inc
add
scas
in
jns
lcall
xor
ds
fcomip
lds
sub
fidivs
xchg
mov
mov
xchg
sub
pusha
or
push
subb
imul
inc
jo
dec
push
loopne
incb
mov
xchg
insb
inc
mov
shrl
imul
mov
cmpsb
dec
aaa
mov
sub
insl
inc
cmp
into
sub
pop
rorb
sti
decb
vcvtdq2ps
xchg
in
adc
cmp
fstpt
out
sub
mov
mov
int3
xchg
lods
mov
out
push
rolb
sbb
sub
call
lds
in
ret
xorb
stos
jnp
sti
mov
popa
cmc
jbe
mov
pop
cmp
in
adc
aas
pop
orb
subl
add
loope
arpl
imull
push
mov
cmpb
insl
fwait
sahf
pop
sub
or
or
mov
cmp
out
in
xchg
ucomiss
or
xchg
aam
xchg
xchg
in
lret
lret
jno
sbb
mov
in
mov
or
addb
cmp
add
mov
inc
movsl
stos
and
jno
bound
or
sbb
inc
push
jl
add
or
int
imul
push
out
inc
jo
push
dec
int3
push
in
aam
pushf
jne
lcall
cmpsl
je
push
ret
dec
mov
incl
push
push
sub
lods
loop
repnz
sub
jp
mov
sub
jno
and
test
ficompl
pop
xor
pop
jge
push
in
mov
adc
iret
push
or
sbb
cmpsb
jo
mov
out
fcmovnu
push
xchg
cmp
data16
pop
mov
push
cmp
mov
movsl
mov
addl
xor
push
cmp
mov
aad
imul
pop
pop
mov
leave
pop
xchg
sub
icebp
pop
sti
mov
push
xor
jmp
adcl
aas
mov
fidivrs
jg
mov
sbb
xor
stos
insl
fimuls
hlt
adcl
out
test
js
mov
jns
movl
test
ljmp
pop
mov
inc
or
and
mov
gs
lret
dec
rcrl
push
in
cmp
or
jae
xchg
roll
mov
movsb
inc
jbe
xchg
push
xor
push
lods
sarl
xchg
enter
jp
xlat
xor
fcmovnbe
movsb
and
sbb
mov
repz
adc
inc
xor
sahf
cld
jae
push
mov
loop
xchg
add
in
divl
fadds
mov
aas
sub
dec
bound
cmp
sbb
aam
dec
clc
imul
jb
pop
push
cmpsb
vminpd
mov
sbb
or
data16
addr16
jge
out
fists
inc
jne
or
mov
add
loopne
cmpsb
ljmp
and
inc
aas
mov
cld
mov
inc
push
or
cmp
adc
jl
dec
shlb
insl
pop
or
ss
add
in
sbb
push
fisubs
loope
xchg
push
xor
bound
addr16
es
stc
rol
cmp
lahf
loope
xchg
mov
mov
push
ret
lahf
daa
xchg
cmc
dec
inc
adcl
xchg
pop
inc
es
cltd
daa
xchg
les
cmp
pop
dec
outsl
cs
sub
in
mov
push
adc
rorb
push
xor
lods
pop
lcall
sbb
popf
orl
lea
dec
fwait
lea
stos
out
push
mov
cs
push
cmc
dec
inc
mov
or
push
mov
xor
xchg
je
mov
ja
adc
stc
cmp
out
push
lods
xchg
adc
sub
sub
rorb
jae
sub
cmp
shlb
mov
cmp
lock
mov
jmp
add
pop
mov
andb
or
scas
jbe
mov
mov
popa
jmp
xor
push
push
mov
or
ror
ja
lock
xchg
out
dec
dec
fsubs
ja
and
or
push
lahf
xor
add
xchg
test
sub
in
jecxz
inc
in
mov
jb
mov
jb
xchg
loopne
cmp
mov
es
lods
mov
add
jl
and
push
ret
pop
shrb
vmread
jecxz
mov
xchg
cmc
int
std
in
adc
repnz
shrl
add
and
sub
jmp
jnp
addr16
test
idivl
cs
push
orl
cmpsl
insl
popa
pop
sbb
push
jns
add
arpl
push
lahf
inc
cmp
loope
push
push
mov
adc
int3
imul
dec
flds
mov
dec
mov
mov
popf
fisubs
orb
ficoml
test
fs
test
mov
repnz
inc
cmp
sbb
addl
fnsetpm(287
dec
test
jle
push
cmpsb
pop
inc
sbb
or
sbb
inc
sbb
insl
or
add
pop
out
and
cmp
test
xor
xchg
and
pop
dec
pop
arpl
sub
imulb
mov
rolb
push
sub
or
sub
aad
xchg
pop
sbb
sar
pop
cmp
or
in
adc
sbbb
fucomip
xchg
out
popa
clc
cmp
dec
xor
push
and
push
fstpl
into
sbb
int
mov
push
sbb
in
adcb
mov
add
outsl
cmp
mov
pop
cmc
fsts
adc
lret
cmp
in
ss
ljmp
jb
insb
mov
push
outsl
pop
fimull
shrl
mov
clc
je
leave
into
test
jmp
add
fdivl
adc
pop
dec
cli
cmp
dec
lds
xor
mov
pop
lods
test
fs
mov
ja
mov
int3
pop
inc
lea
mov
pop
cmp
and
jmp
stos
scas
fcoml
pop
mov
in
add
inc
loope
xchg
lods
or
in
fisttps
cmp
mov
add
outsb
pusha
shlb
mov
jb
fsubrs
lcall
dec
dec
dec
sub
inc
cli
shl
hlt
pop
jle
xor
lret
jnp
pop
insl
or
push
dec
gs
or
insb
dec
mov
int3
xchg
jmp
aaa
imul
and
or
xchg
aaa
jae
pop
std
sti
or
inc
dec
sbb
out
inc
imul
mov
aas
in
or
sbb
jae
push
int
orl
lret
adc
rcr
mov
pop
pop
mov
cwtl
mov
sbb
push
or
scas
sahf
mov
mov
jb
xchg
je
xchg
in
push
inc
movsl
call
mov
in
adc
adc
scas
rorl
int
aas
je
imull
into
xchg
sti
mov
inc
add
mov
mul
lods
mov
in
cmp
daa
aas
lcall
mov
xchg
jl
pop
es
or
xchg
std
lock
insl
and
repnz
xorl
insl
cwtl
jnp
test
xor
in
inc
enter
push
add
cmp
movsl
jno
divl
cmp
adcl
fadd
inc
cwtl
xor
sahf
push
adc
lock
and
je
divl
sub
add
xchg
outsl
jecxz
stos
push
outsl
or
pusha
fdivrs
int
and
mov
xor
lea
ds
mov
cmc
mov
add
jno
pop
add
pop
das
fdivrs
lahf
adc
cld
test
push
sbb
or
sub
ret
pop
jo
shlb
pusha
mov
add
jnp
and
push
rcll
push
cltd
out
les
push
xor
push
lret
mov
rcrl
sub
pop
psrad
mov
sbb
inc
mov
pusha
push
mov
inc
in
loop
fnstcw
xor
sub
jo
aad
sub
js
imul
inc
lahf
shrl
loopne
lret
push
nop
cmpsb
xchg
or
mov
repnz
mov
mov
jns
adc
repnz
aaa
loop
repnz
std
lea
enter
inc
add
hlt
iretw
mov
fsts
lret
fimuls
loop
xchg
mov
in
stos
hlt
and
lcall
js
ljmp
push
mov
mov
dec
cmpsb
mov
test
pop
insb
loop
mov
das
aad
xlat
loopne
xor
cs
stc
xor
shrb
xchg
and
xchg
pop
adc
ja
adc
ljmp
loopne
xchg
push
mov
xchg
mov
sub
push
or
mov
and
sub
and
addl
xchg
test
mov
cmp
cmp
sub
cmpsl
jle
or
mov
xchg
xlat
rep
pcmpeqb
test
ds
dec
adc
and
neg
mov
enter
jp
fldenv
clc
into
inc
daa
fidivl
xchg
test
xlat
cs
addr16
add
mov
xchg
fsub
movsb
jmp
mov
pop
je
xor
ret
xchg
jle
adc
add
out
aas
lcall
adc
fadds
mov
cli
scas
sub
dec
pop
and
popf
pop
clc
loope
pop
leave
les
dec
cmc
testb
xchg
sti
sbb
sbb
mov
push
js
shl
shll
call
jb
insb
xor
call
push
inc
jns
out
inc
sbb
mov
sub
loop
mov
iret
data16
jno
movsb
sti
or
xchg
cmp
add
xchg
push
sub
jno
cs
jmp
mov
jle
outsb
aam
mov
mov
call
pop
stc
jno
aam
push
sbb
int
adcl
and
data16
xor
and
push
jge
movsl
shlb
arpl
je
popf
das
fcmove
inc
mov
loope
jns
nop
dec
and
idivb
mov
in
xorb
jbe
lods
pop
ret
into
pop
mov
add
sub
nop
mov
or
add
dec
add
mov
push
inc
add
daa
dec
imul
js
push
es
ret
xchg
cltd
je
ds
ljmp
test
or
push
add
fbld
popf
add
lds
sbb
cltd
push
adc
adcl
rorl
push
out
dec
dec
jmp
add
cmp
xchg
scas
mov
push
push
jno
pop
out
mov
push
es
pop
xchg
out
adc
mov
repz
mov
sbb
inc
xor
gs
test
in
cmp
pop
sub
jns
cmc
jae
inc
push
cmp
lods
daa
stc
push
pusha
dec
jge
arpl
fxch
fnstenv
aam
cli
push
out
cli
cmpb
add
mov
jo
mov
lea
pusha
inc
sbb
incl
xor
and
jp
mov
cmp
imul
les
repz
sahf
mov
lahf
cmp
movsl
aaa
enter
test
ffreep
push
cli
movsb
add
pop
mov
cwtl
dec
and
dec
pop
jle
cmc
mov
push
adc
and
jg
dec
shll
jl
outsb
mov
jle
adc
push
add
out
cmp
mov
lret
cmp
outsb
mov
bound
xchg
xor
cli
adc
decb
push
push
ss
mov
negl
inc
xor
aas
jmp
ret
or
test
popa
ljmp
jo
xor
insb
rol
repz
inc
bnd
inc
cmp
scas
loop
sbb
repnz
aas
in
insl
popf
enter
fs
in
into
dec
mov
mov
cwtl
dec
pop
lods
xchg
xor
pop
sub
out
pop
mov
bound
imul
dec
scas
and
enter
pop
xor
aam
mov
cltd
jmp
mov
xchg
xchg
jg
push
xchg
xor
xchg
pop
cmp
cmpsb
lretw
xor
fadds
cmp
in
arpl
adc
add
jnp
xchg
mov
scas
call
cmp
dec
add
test
or
outsb
inc
mov
or
out
sub
dec
and
push
pop
clc
or
inc
fs
add
pop
scas
jmp
stos
sahf
lret
jge
dec
test
xchg
iret
push
fdivs
push
xor
dec
in
jnp
and
pop
lods
loope,pn
test
pop
ret
lods
push
xchg
lds
or
rclb
xchg
pop
cmpsl
inc
aaa
xor
loop
cmc
adc
sbb
or
addr16
lods
call
jp
out
lret
test
add
pop
push
xlat
lds
aam
cmpsl
sub
push
pusha
imul
xchg
fistpll
je
fsubrp
cmp
push
xor
scas
sahf
xor
scas
or
das
lock
mov
repz
pop
das
mov
arpl
and
push
incl
dec
jge,pt
pop
sbb
or
push
jb
jne
iret
xchg
adc
jmp
bound
pop
stc
enter
push
push
divl
iret
sbb
inc
jle
add
dec
adc
stos
xorl
dec
pop
mov
div
imul
mov
cmc
sbb
call
sub
xor
movl
or
cmpsb
movsb
xchg
aad
mov
jbe
movsl
mov
inc
iret
subl
fs
in
or
shr
sub
js
ficoml
add
negl
add
xchg
push
ds
repz
cmp
or
sub
pusha
inc
jo
cmp
adc
popa
jg
inc
leave
xchg
fidivs
mov
adc
xchg
sbb
push
xchg
inc
cli
lock
lock
add
scas
adc
push
jg
in
push
pop
inc
pop
divb
imul
pop
xchg
sets
sbb
ja
lea
in
ljmp
push
xor
mov
movsl
fmuls
adcb
std
out
xchg
dec
jns
dec
rclb
cmp
divl
js
mov
xchg
aaa
testb
cmpsb
jne
inc
dec
adc
pop
pop
adc
lret
xchg
pop
push
push
jae
xchg
incb
rorl
push
xchg
popl
mov
popa
lcall
mov
and
xor
sub
mov
test
popa
aam
clc
inc
or
mov
and
pushf
sub
enter
ja
fdivrl
and
sbbl
cld
xlat
dec
movsb
aam
xlat
maxps
int
pop
clc
addr16
lret
rorb
lds
pop
in
jb
pop
push
or
sti
adc
fstp
or
test
dec
xlat
push
mov
imul
mov
in
fbld
xor
shll
mov
xor
lret
xchg
rcr
mov
rcl
push
add
xor
stc
dec
and
mov
andb
fmull
out
das
push
pop
std
pop
sbb
repnz
cmp
xlat
rcrl
inc
lds
cmp
and
xor
cmpsl
sub
pop
inc
sub
cltd
sbb
call
fistps
xchg
fistl
mov
into
sarb
xchg
ss
adc
jmp
jb
mov
lahf
or
mov
add
jbe
pop
sbb
iret
out
xchg
xchg
cmp
cmpsl
jo
mov
addb
pop
or
les
in
sub
jns
mov
jmp
iret
mov
inc
sbb
cmc
cltd
pop
push
jne
popa
dec
sbb
add
insb
push
shlb
cmp
sbb
mov
test
cmp
test
ss
enter
pop
and
ret
fadds
mov
data16
bound
add
inc
sub
rclb
dec
add
add
cmp
popa
jmp
out
mov
add
xchg
fcomps
sbb
mov
loope
inc
sub
out
jp
lret
pop
sbb
stos
lahf
or
pop
cmpsl
daa
sbb
sub
sarb
pop
adc
popf
dec
dec
out
or
in
scas
mov
fimuls
dec
addr16
loop
outsl
mov
iret
cmpsl
xchg
nop
and
test
mov
aas
jle
xchg
adc
das
shrl
das
sbb
test
out
ljmp
ss
arpl
out
ret
pop
mov
cli
repnz
decl
push
iret
jge
aaa
divl
cmp
cmc
ret
call
push
push
cmp
adc
xchg
xchg
fsts
mov
lcall
or
mov
mov
mov
push
sub
xor
fdivl
adc
cmpsb
int3
jmp
adc
ss
js
out
mov
pushf
inc
add
xchg
add
sub
add
insb
inc
in
aaa
pop
fs
jge
out
xor
push
repz
sub
mov
loopne
and
inc
scas
data16
pop
pop
insb
insb
mov
fmull
xlat
movsl
test
mov
dec
jnp
jnp
inc
mov
pop
push
sbb
movhps
jl
adc
pop
jae
mov
lds
imul
add
iret
xchg
inc
mov
test
dec
dec
outsl
outsb
or
or
repnz
push
mov
inc
dec
sub
dec
addr16
xchg
popa
mov
movsb
xchg
movl
mov
shlb
out
xlat
lods
iret
sub
addr16
xor
cli
scas
mov
ja
mov
xor
imul
add
xor
cmp
pop
scas
clc
sub
lds
push
pop
call
jnp
push
jb
add
call
pcmpeqb
mov
mov
daa
mov
jns
pop
dec
ljmp
jmp
inc
mov
stos
je
test
xor
les
in
pop
lock
xchg
pop
fs
scas
movsl
mov
add
aaa
in
mov
std
jl
pop
inc
fldl
fisubrs
inc
cmp
loop
repz
pop
les
lods
loop
xchg
nop
arpl
and
add
test
in
repnz
sar
and
stos
adc
dec
xchg
or
cmc
xorb
cmp
pop
out
jecxz
adc
push
mov
leave
daa
pop
xchg
lods
push
inc
dec
ja
repz
inc
mov
jle
lret
lcall
push
dec
mov
xor
mov
mov
mov
mov
cli
adc
xchg
mov
dec
pop
jne
cmp
sbb
call
or
icebp
inc
and
dec
hlt
test
fsubrl
sti
pop
imull
int3
mov
pop
push
mov
push
xchg
jo
mov
insb
mov
mov
leave
imul
lds
jae
stos
repz
or
scas
cmc
daa
adc
dec
lods
call
mov
repnz
loope
or
push
mov
sti
sub
std
nop
cwtl
xchg
ss
mov
pop
ljmp
sarl
cli
pop
cmc
xlat
inc
jp
fistps
ret
pop
sahf
imull
sub
decl
loop
and
pop
ss
pushf
and
int3
imul
insb
push
dec
mov
pusha
fldt
pop
je
pusha
rol
mov
mov
shrb
mov
fs
hlt
out
inc
fwait
mov
cmpsb
cltd
push
stos
jmp
pop
stos
cmp
pop
sub
pop
clc
icebp
mov
mov
inc
inc
ljmp
inc
pop
pushl
ja
sbb
inc
xchg
push
push
mov
fwait
stc
or
fwait
push
lds
add
leave
add
cli
xchg
and
dec
mov
cmp
fyl2xp1
mov
xchg
push
mov
sbb
pushl
sbb
add
mov
dec
mov
cmp
fstps
mov
xchg
stc
pop
adc
mov
lret
lods
push
mov
jnp
in
mov
xlat
scas
xchg
shlb
mov
cmp
or
ret
out
into
cmpsl
lea
sub
fwait
mov
push
ds
inc
mov
leave
xchg
jns
ret
adc
mov
fwait
out
xchg
cwtl
idivl
xchg
sarb
dec
ret
pop
icebp
jmp
rcrb
sub
jecxz
inc
jae
mov
fistpll
push
pop
and
je
and
jge
mov
inc
aaa
test
mov
stos
xchg
or
mov
xor
out
and
xchg
adc
dec
ja
lock
xchg
pop
pop
mov
lods
fnstenv
pop
mov
pop
mov
stc
and
jo
adc
arpl
loop
js
test
stos
jl
and
movsb
mov
ljmp
jle
test
out
adc
test
mov
or
fs
xchg
pop
idivl
cmpsb
adc
repz
stc
sahf
cmp
loope
shr
scas
shll
cs
mov
sahf
les
sahf
cmp
lock
pop
into
push
cwtl
sti
mov
rcr
iret
pop
enter
or
mov
dec
or
es
out
fcmovb
add
rclb
mov
xor
ljmp
stos
ljmp
sarl
or
mov
adc
inc
sub
adc
jge
lret
outsb
pop
inc
jle
jmp
stos
stos
mov
pop
dec
cmpb
inc
cs
pop
cmpsb
xlat
rcll
mov
ret
lods
cmc
and
add
add
clc
jbe
icebp
jle
and
dec
mov
rorb
dec
call
insb
lods
clc
or
sbb
push
jo
or
sub
fstpt
in
inc
out
ret
sarl
not
mov
frstor
pop
mov
and
adc
add
dec
adcb
mull
pop
xor
lret
ss
cmp
roll
mov
stos
xchg
movsb
lahf
imul
mov
cwtl
jecxz
mov
ss
mov
jmp
cmpsb
je
aaa
pop
out
stc
pcmpeqb
clc
pop
push
inc
sqrtps
sti
dec
jne
scas
or
inc
lret
and
adc
cmp
cli
adc
in
push
repz
iret
sbb
xchg
push
mov
cltd
pop
mov
adc
cmc
sbb
test
daa
jl
mov
fisubrs
mov
xchg
jne
call
test
scas
fwait
stc
and
sti
jg
mov
shrb
imul
fdiv
mov
xor
lods
xchg
cmp
inc
in
push
mov
icebp
fildll
adc
cmp
mov
mov
mov
jbe
fldenv
in
cmp
cmp
add
lods
lock
inc
jns
or
inc
add
popa
mov
stc
movsb
adc
cli
jl
sub
in
dec
cmp
nop
fcmove
arpl
addr16
loope
sbb
jg
inc
je
xor
sbb
aaa
shlb
xchg
popl
inc
test
xchg
mov
ljmp
adc
outsl
jne
sbb
mov
stos
pop
test
or
sub
push
pushw
or
loop
fwait
sbbl
dec
adc
and
std
adc
popa
and
cmp
std
mov
rcl
popa
in
push
mov
mov
add
bswap
and
div
pop
cmpsb
push
vpaddw
sbb
mov
jns
cs
mov
cmp
cld
cmp
push
mov
repz
sub
in
into
and
out
popa
pop
push
lahf
push
out
cmp
jo
xchg
int
int
sub
dec
inc
cmc
xchg
lea
mov
and
mov
dec
daa
scas
icebp
cmp
cmp
lret
add
icebp
lods
mov
test
adc
cmp
pop
mov
xor
int3
insb
dec
in
xor
repz
jae
pop
scas
lret
sub
pop
adc
stc
cmc
cmpsl
pop
inc
adc
ja
out
dec
xor
ljmp
cmp
xchg
imul
call
shll
xchg
mov
dec
aaa
jne
cmc
mov
mov
lock
mov
jne
adc
dec
xchg
inc
orb
stos
cmp
outsl
test
sahf
sbbb
add
xchg
out
loop
sub
jbe
lahf
pusha
cltd
sub
inc
xlat
daa
ljmp
add
mov
sub
xor
inc
or
lcall
mov
out
test
inc
xor
sti
andl
push
ds
lods
add
imulb
stos
dec
sub
cmp
stc
or
jo
sbb
imul
adc
lahf
inc
mov
add
sarl
mov
ja
pop
mov
jge
cmp
jo
push
cld
out
minps
bound
test
insb
xchg
mov
mov
pop
imul
cmp
and
xor
cmpsb
mov
in
dec
repz
mov
sub
js
sti
and
dec
and
jle
rolb
or
fstl
lds
jg
adc
stos
sbb
es
jno
xor
orl
pop
stc
pop
push
adc
or
jecxz
cmp
push
call
cmp
das
sub
mov
out
hlt
push
aad
mov
mov
insl
adc
cmp
jae
sub
test
cwtl
and
into
mov
lock
sbb
stos
add
popa
fdivrs
mov
jl
inc
lahf
shrb
into
push
lea
fsubrp
outsb
dec
inc
incb
pop
pop
cmp
jl
push
repnz
shr
or
jg
sbb
mov
aaa
mov
lea
in
in
imul
neg
fsub
cmp
iret
jbe
out
cmp
mov
cmp
nop
outsl
mov
lds
mov
inc
das
or
lea
inc
loope
add
jno
lret
jmp
sarl
lea
adc
lahf
scas
bsf
mov
leave
mov
in
or
addr16
push
into
lcall
ficompl
sbb
cmpsb
test
inc
mov
mov
mov
jno
mov
and
add
mov
test
cmp
cwtl
push
push
mov
aas
cli
inc
jecxz
daa
cwtl
cmp
in
lar
ljmp
lret
sub
jne
inc
iret
arpl
mov
push
fwait
into
add
jne
das
xor
and
jmp
xchg
out
mov
das
mov
mov
jb
enter
leave
ja
mov
mov
arpl
fisttpll
pushf
sbb
or
mov
jmp
fcmovbe
jmp
or
lahf
es
xchg
push
sbb
mov
inc
shrb
cmp
jge
fcmovnu
pop
jns
stos
lock
dec
insb
adc
cld
iret
movsl
repz
cmc
insb
icebp
aam
dec
in
jmp
test
imul
ss
jae
repz
xchg
push
mov
and
adc
sub
adc
pop
pushf
aas
mov
divb
cli
add
popf
lret
and
sub
xor
and
ss
stos
aaa
cmp
ss
sub
ja
ds
test
out
pop
test
sbb
and
pop
popf
sub
jae
cli
lea
xchg
dec
lea
js
lea
cmpl
stos
lods
mov
loopne
mov
adc
mov
pop
daa
mov
sti
add
xor
inc
adc
jp
into
test
cmp
cmp
std
cmc
or
out
add
ljmp
sbb
in
repnz
bound
repz
shl
pop
cmp
mov
lea
xor
and
imul
outsl
ret
add
repz
fiadds
loope
mov
inc
cwtl
mov
lret
or
scas
js
mov
mov
pop
cli
outsl
test
rcrb
or
mov
mov
adc
bound
xor
pop
es
adc
fnstcw
sar
push
and
xor
jp
stos
daa
mov
hlt
mov
test
jae
mov
scas
dec
xchg
mov
sub
fnsave
movsb
sub
jno
cmp
inc
sub
mov
mov
rclb
sbb
movsb
or
add
clc
jne
fcmovbe
fxtract
inc
inc
or
cmp
idivl
gs
jne
pop
imul
inc
repnz
jecxz
out
cli
repz
into
daa
loope
xchg
mov
jg
push
jnp
sbb
lcall
pop
test
outsl
mov
rcrl
jne
pop
setb
or
xchg
rcr
test
mov
inc
inc
mov
pop
adc
or
and
dec
push
pop
mov
and
adc
cwtl
and
rdmsr
dec
jne
lock
fnsave
sbb
outsl
in
mov
testl
aam
or
sti
daa
add
fldenv
clc
rcrb
xchg
jo
test
rcrb
push
scas
fnsave
jae
lds
sahf
xor
popa
lahf
sbb
dec
add
lahf
ret
cmova
xlat
push
jecxz
pop
enter
mov
test
jmp
lods
mov
cmpsb
push
cmp
in
fnstsw
popa
lret
mov
xor
xor
lret
call
js
jb
push
pop
divb
and
mov
in
push
scas
mov
aaa
pushf
stc
jbe
inc
adc
test
lods
sbb
in
sub
int
cld
jns,pt
rclb
push
andb
pop
pushf
aas
add
cmp
pusha
ret
push
pop
fwait
add
int
out
cmp
arpl
pop
int
ds
jne
call
push
mov
sbbb
loopne
out
jnp
fcoml
inc
pop
pop
stos
test
mov
jge
sbb
add
outsb
mov
repnz
push
popa
or
add
mov
sbb
movsb
outsl
adc
dec
mov
fistps
in
inc
lods
data16
aad
data16
push
movsb
and
into
xor
ds
xchg
mov
stos
nop
fnstsw
cwtl
jo
daa
in
pop
jb
cwtl
push
xchg
push
add
sbb
push
push
popa
lcall
or
sub
into
mov
sbb
jb
cmpsb
out
enter
iret
mov
loopne
popa
gs
jno
cmp
testb
test
pop
test
jl
and
mov
mov
lods
fdivrp
inc
sub
std
mov
push
jle
sub
dec
popa
mov
mov
js
dec
add
in
pushf
and
pop
js
lahf
popa
lahf
insb
iret
fs
add
jle
sub
mulb
ja
mov
push
inc
mov
mov
aad
aaa
out
sbb
mov
cmc
or
mov
cmp
repz
cs
mov
stos
mov
hlt
xchg
mov
pop
jecxz
imul
xchg
mov
imulb
jp
icebp
mov
in
cmp
int3
jo
jo
fldcw
ss
test
ss
int
and
cmp
dec
test
push
sub
inc
adc
cmpsb
jp
mov
pop
mov
scas
iret
dec
add
and
daa
fdivl
adc
mov
jge
sub
pop
pop
jp
psubw
xor
mov
test
push
notl
test
imul
jle
push
cltd
addr16
jp
js
cmp
cli
out
call
fdivrs
sub
out
mov
push
popa
daa
xor
mov
jmp
xchg
push
mov
push
adc
xchg
fmuls
std
push
xchg
mul
loop
iret
popa
lcall
push
add
jbe
dec
int
test
movsb
add
lock
and
test
loope
mov
loop
xchg
jecxz
xchg
je
outsl
popa
pop
mov
loop
sbb
push
lea
push
mov
sbb
xchg
imull
imull
pop
dec
xchg
cmpsb
imul
test
adc
paddw
js
cmp
ds
out
das
xor
sub
fdivl
dec
cmp
in
clc
mov
rcl
add
mov
sbb
lcall
imul
roll
sub
mov
and
jae
or
sub
cmpsl
aas
sbb
popf
cmc
cltd
fcoms
mov
lock
jmp
inc
aam
jmp
bound
int3
js
dec
stos
or
pop
lds
or
repz
fs
aaa
fisubrs
ja
mul
mov
jle
sbb
leave
pop
lea
xor
xor
mov
popa
in
inc
xchg
xchg
cmpsb
stos
push
vmread
mov
sbb
fsubrl
push
pop
enter
lahf
ficoms
outsl
fisubs
fstp
lds
mov
mov
movsb
call
mov
or
fs
mov
dec
leave
aaa
or
xchg
in
pushf
repz
or
adc
xchg
pop
or
or
add
dec
sub
out
fwait
or
leave
inc
popa
pop
push
ror
shrl
iret
pop
or
xchg
movsl
sahf
xchg
rcll
daa
psraw
cmpl
add
loop
or
inc
mov
pusha
push
dec
mov
lea
fimuls
negl
push
sbb
push
dec
mov
push
cmp
pop
mov
aam
loope
xchg
ljmp
xchg
cmpb
mov
ror
leave
mov
imul
stc
inc
mov
inc
cmpsb
btr
lret
xor
inc
sub
lds
push
add
xor
xchg
dec
fwait
add
jo
mov
movsb
mov
or
inc
gs
dec
imul
mov
add
js
adc
mov
pop
add
aam
and
das
fwait
jg
ficomps
cs
add
xor
in
mov
inc
xor
mov
sub
cmp
jecxz
nop
dec
pusha
mov
popa
jmp
cld
adc
xor
push
in
scas
push
loop
pop
push
sub
pop
jmp
sbb
repnz
mov
mov
push
push
outsb
mov
push
jmp
jl
mov
mov
adc
sub
xor
add
push
sub
out
pop
xchg
push
inc
mov
mov
or
cmpsl
cwtl
cwtl
in
les
mov
sub
adc
and
fcmovnbe
sarl
xchg
leave
in
mov
jb
inc
fistpl
es
adc
outsb
aaa
adc
jno
push
shrl
fmulp
sub
jge
test
push
test
inc
aas
sbb
xchg
mov
fwait
test
out
mov
sbb
mov
in
cmp
pop
in
gs
movsl
ret
or
push
mov
sahf
fnstcw
jecxz
subl
lret
mov
xchg
push
xor
cmp
and
insl
adc
movsl
loop
mov
dec
call
test
stos
les
mov
add
cwtl
popa
mov
inc
jge
les
adcb
std
jg
and
sti
popw
ret
adc
lods
push
ja
jno
inc
cmc
ja
decb
daa
push
add
sub
outsl
mov
dec
jnp
fmuls
or
xor
lret
push
and
cli
mov
xor
leave
sbb
aad
jo
push
pop
xor
pop
shrl
fisttpll
dec
int3
inc
test
mov
or
mov
orl
insb
push
mov
sbb
mov
fwait
xchg
je
mov
addl
outsl
inc
leave
jmp
jecxz
leave
mov
push
iret
loopne
subl
cli
insb
mov
rorl
vorpd
sub
pushf
pop
inc
cmp
testb
sub
pop
adc
data16
xchg
inc
mov
or
jg
sbb
in
into
jb
jo
add
cld
or
and
test
aam
bound
inc
xor
xor
outsl
mov
xor
add
push
pop
hlt
xchg
mov
xor
jl
or
out
inc
pop
mov
jo
in
cltd
add
divl
leave
imul
mov
push
and
xor
test
mov
inc
stos
mov
ds
shrb
xchg
aad
and
and
rcrb
inc
dec
in
aad
cmp
clc
xchg
mov
pop
ljmp
dec
sub
and
and
xchg
mov
aad
addr16
popa
popa
jg
mov
rorl
lcall
mov
rcrb
hlt
test
mov
fnstsw
mov
inc
fisubl
push
rclb
scas
cmpsb
leave
jnp
add
push
add
lock
lods
push
fwait
fwait
shll
int
jns
cltd
and
icebp
and
add
test
fldl
stos
fisttpll
sbb
push
mov
dec
sub
pop
inc
sbb
adcb
sbb
ret
mov
test
lahf
popf
sbb
jecxz
fcmovne
mov
test
cmp
repnz
xor
adc
xor
inc
dec
lret
pop
iret
lods
xchg
xchg
arpl
pop
mov
test
xor
ret
lods
adc
fldl
aam
jmp
inc
in
cs
andb
test
jecxz
and
jl
pop
adc
bound
je
cmpxchg
call
push
scas
mov
stos
imul
dec
cmp
fidivl
imul
movsb
cmpl
cmpsb
std
mov
rcrl
adc
movsb
push
bound
dec
fsubl
andb
sub
fcoml
sbb
cmp
ret
mov
push
push
data16
jmp
lock
pop
sub
clc
or
xor
mov
inc
add
cmp
pop
mov
xlat
add
mov
inc
jne
in
sub
and
shlb
inc
inc
sub
xor
bound
or
or
push
or
xchg
mov
lds
pusha
add
loop
push
xchg
imul
xchg
xorb
pop
das
sahf
mov
ret
cld
in
mov
sbb
jmp
adc
rcrb
mov
add
jae
add
scas
jecxz
inc
mov
cmp
mov
hlt
or
dec
shlb
lods
mov
sub
testl
sub
arpl
pop
adc
mov
adc
loopne
or
minps
in
lret
push
lds
int3
cmp
or
aaa
inc
mov
sbb
sub
ss
cs
cltd
in
adc
sub
pop
xchg
scas
ret
imul
xor
mov
xchg
lret
stc
cli
sahf
dec
xlat
xchg
jmp
sbb
xor
or
add
mov
fisubrl
add
and
mov
sub
js
sub
cmpsb
or
rclb
out
test
shlb
cmp
lods
push
inc
in
mov
adc
mov
adc
test
fbld
and
adc
je
or
fistpl
mov
imul
bnd
mov
jbe
xor
nop
scas
mov
mov
lds
push
clc
dec
aas
pop
pop
test
xor
pop
loopne
jne
jle
stos
enter
inc
pop
xor
std
mov
or
insb
test
ss
imul
fadd
inc
cmpsl
or
lahf
mov
inc
sub
lds
mov
out
push
test
xor
mov
fwait
adc
mov
mov
dec
inc
arpl
xor
dec
xchg
mov
mov
or
and
add
or
imul
and
iret
es
xorl
aaa
push
fdiv
and
out
in
xchg
popf
pmuludq
xchg
xchg
xor
roll
out
xlat
pop
fs
or
stos
xor
xchg
cmpsb
mov
xor
fdiv
sbb
pop
loope
mov
jae
es
xor
loopne
push
aam
test
and
out
repnz
add
adc
pop
outsl
jb
cmp
jmp
or
xor
xchg
xchg
loop
xor
sub
and
push
pop
and
xor
mov
in
push
xor
mov
insl
jmp
daa
mov
cli
ja
sarb
mov
lcall
daa
lods
stos
fidivl
in
es
pop
rorb
xchg
sub
mov
repnz
outsb
mov
or
and
cltd
aam
jmp
pop
fisubs
adc
inc
mov
int3
mov
js
loopne
in
dec
jae
cmp
aas
movsb
ret
adc
movsl
sbb
mov
mov
lods
aam
negl
mov
insb
hlt
push
mov
loope
cli
pop
or
popa
mov
int
dec
in
cmp
push
test
push
loope
jbe
fyl2xp1
inc
xor
inc
xchg
sub
add
jge
adc
and
int3
imul
pop
gs
cmp
or
push
lock
xor
and
packssdw
xor
mov
scas
adc
shr
fisubl
sbb
int
add
subb
jo
mov
mov
sbb
mov
or
cmp
jle
pop
inc
out
mov
sub
addr16
dec
fs
aam
popf
arpl
sub
clc
and
cmp
cmp
adc
or
imul
add
push
and
jge
pushf
dec
mov
xor
xchg
paddd
mov
fcoms
arpl
xchg
adc
mov
in
mov
cld
and
sub
add
int
xor
mov
mov
or
jecxz
push
shlb
test
fcmovb
jns
or
jle
pop
cmp
jno
and
and
daa
xchg
es
sub
fildll
push
iret
sub
jne
andl
ss
dec
fs
or
daa
or
add
pop
or
add
cltd
inc
xchg
outsl
push
leave
dec
int3
outsb
mov
shll
inc
into
push
add
pop
sub
push
inc
les
and
push
push
dec
in
insl
cmpsl
xor
sbbl
ret
pop
inc
mov
ds
jnp
mov
rcll
fadd
ss
es
pop
int3
scas
gs
rol
in
movsb
mov
stos
pop
xchg
bound
in
fs
dec
mov
or
add
leave
negl
mov
in
repz
pop
sub
dec
repz
popl
cmp
mov
ret
xchg
icebp
pop
jae
inc
add
icebp
mov
outsb
pop
test
mov
mov
or
js
test
pop
jg
movsl
inc
ljmp
dec
inc
aaa
pop
or
movsb
push
je
mov
bound
sub
loopne
jnp
pop
xchg
shrb
cmp
movsl
xchg
add
inc
push
ss
sbbb
rorl
ret
rcrb
and
repnz
add
add
adc
in
test
pop
je
loop
jo
aas
icebp
dec
cmpsl
test
aad
clts
loope
dec
and
in
and
add
ret
out
outsb
cltd
and
jecxz
icebp
push
nop
sub
jbe
fidivl
mov
jg
test
sub
stc
mov
and
jae
popf
pop
xchg
jns
add
fisubrl
scas
cmp
sub
jecxz
push
push
xor
add
mov
js
adc
stos
cmp
fdivrl
rclb
jge
jne
mov
stos
sub
pop
in
dec
cmpsb
xor
lock
icebp
adc
pusha
rep
mov
repz
cmp
and
dec
scas
inc
notb
mov
fnstsw
adc
sti
incl
cmp
cld
add
call
pop
sbb
les
fistpll
inc
dec
or
mov
iret
pop
push
fisubrs
pusha
movsl
ds
jb
pop
scas
out
fistpll
push
insb
dec
inc
pop
cmpsl
stos
enter
xor
mov
inc
sbb
mov
ret
popf
nop
add
sbb
ja
lret
cld
add
out
push
loope
scas
mov
add
pusha
xlat
pop
insb
add
mov
imul
push
cmp
xor
mov
lock
decl
mov
mov
insl
idivb
and
lods
aad
lret
cltd
sti
rol
or
ss
sub
and
mov
aas
mov
imul
dec
jo
jns
lods
je
mov
fwait
add
pushf
push
add
imul
aaa
ja
jp
fdivs
jecxz
lahf
jno
dec
loop
stos
insb
lahf
sahf
inc
mov
js
outsb
mov
sbb
adc
xchg
cmpsb
and
loopw
fsubl
sub
add
xchg
xlat
add
jbe
xor
and
push
cmc
inc
inc
or
add
movb
mov
mov
lods
js
sbb
or
and
dec
lahf
aam
loopne
and
xchg
pop
lds
fisubrl
jae
push
jnp
inc
pop
ret
into
notb
xchg
mov
inc
sahf
mov
push
jno,pn
lods
insb
add
cmp
scas
inc
sti
jge
call
ss
enter
in
std
adc
and
or
mov
lret
push
and
jb
stos
cltd
dec
push
xchg
inc
imul
movsb
popa
dec
cmp
cli
inc
arpl
lock
pop
lahf
jbe
insb
mov
in
fstl
into
das
js
iret
lock
sbb
popa
rcrl
imul
icebp
imul
bound
sub
pushf
movsl
pop
sti
mov
sahf
js
popl
iret
xchg
push
sub
imull
popa
xchg
xchg
leave
mov
mov
popf
add
sub
test
insl
fdivrl
and
push
mov
imul
rcr
jo
stos
enter
push
fnstsw
imul
dec
sub
mov
mov
jno
lahf
rorb
stos
mov
aaa
mov
or
imul
push
xor
pop
pop
lods
push
sub
inc
mov
push
or
outsl
push
inc
sub
mov
dec
scas
cs
test
push
dec
push
test
test
arpl
dec
cmp
sbb
fisttpll
fwait
shlb
sbb
push
adc
fidivrl
leave
sub
adc
pop
scas
js
inc
adcb
pop
or
sbb
mov
push
mov
dec
pop
int
fidivs
stos
jne
xor
loop
push
mov
nop
xor
test
dec
cmp
scas
cwtl
add
adc
arpl
icebp
push
xchg
pop
divl
test
fcoms
push
fcomi
popa
cmp
mov
cmp
icebp
dec
jo
add
inc
cmc
inc
sbb
dec
or
adc
add
jl
lret
push
push
mov
test
mov
push
cmpsl
jne
idivb
dec
repz
xchg
adc
adc
cmpsl
mov
jge
cmpb
daa
sub
popa
movsb
in
xor
dec
scas
mov
les
incb
mov
mov
jp
sbb
push
out
jnp
push
sub
out
mov
push
xchg
pop
lods
orl
push
jmp
pop
dec
ret
mov
cmpsb
mov
xor
add
roll
repnz
ret
movsb
sarl
inc
dec
mov
xor
popa
cmp
mov
mov
push
xchg
xor
cmp
pop
lods
xor
movsl
sub
in
lcall
popf
adcb
lds
dec
mov
dec
push
push
pop
push
xor
icebp
shl
mov
inc
aas
scas
aad
pop
or
adc
es
mov
mov
loope
push
xchg
adc
imul
sbb
push
sarl
adc
mov
or
sub
movsb
dec
loope
roll
jmp
insl
pop
out
mov
mov
int
mov
faddl
sub
outsb
and
sub
inc
lock
into
xor
lahf
clc
lods
cwtl
in
clc
popa
ss
jns
xor
int
nop
add
mov
and
rcrb
mov
jb
insb
test
test
pop
icebp
add
cltd
loopne
rcrl
repnz
mov
ljmp
adc
insl
dec
ret
inc
outsl
inc
lds
in
adc
jno
xor
pop
xorb
fbstp
or
aad
pushf
mov
in
cmc
dec
jnp
xchg
fst
jle
lea
and
push
rcr
insl
or
addr16
xlat
cmp
pop
repz
fimull
or
lea
ficoms
jo
mov
ret
int3
cmp
push
jno
sbb
pop
inc
test
inc
loopne
sub
or
fstps
mov
mov
ja
ljmp
sbb
dec
sbb
out
inc
ret
mov
shlb
dec
jo
repnz
cwtl
ret
addb
xchg
push
sti
jecxz
mov
jge
inc
cwtl
scas
enter
add
xor
cmpsb
hlt
dec
inc
in
cmp
es
add
push
daa
and
jo
movb
inc
add
shrl
jmp
gs
mov
sub
sbb
aas
pop
leave
dec
and
jle
call
jle
push
pop
rcll
ret
shll
pusha
push
ror
inc
xorl
sbb
ret
mov
sub
test
jae
add
jnp
dec
push
cwtl
mov
cmp
bound
jno
sub
fstpt
add
mov
cmp
jp
scas
sbb
ds
enter
stos
rcrb
movsl
mov
push
ja
inc
std
inc
fwait
sahf
dec
xchg
pop
data16
lea
add
popa
test
imul
dec
imull
jbe
mov
mov
int
sub
or
mov
pop
push
mov
in
xchg
sub
mov
and
xor
sbb
xchg
imul
pop
adc
and
outsb
cmp
jmp
fs
ja
incb
push
aaa
push
xchg
inc
sub
ds
dec
cmpsb
mov
mov
or
inc
mov
imul
stos
aas
aaa
adc
xor
stos
cwtl
push
loope
in
add
dec
adcl
add
movsb
mov
inc
lret
and
adc
loopne
mov
lock
sahf
or
out
les
mov
outsb
jle
dec
insb
daa
outsl
aad
sarl
jnp
lods
out
out
aaa
mov
and
xor
sub
sahf
pop
popf
fmull
arpl
sbb
pop
js
test
lea
inc
fidivrs
mov
std
test
cmc
arpl
inc
and
pop
add
add
jns
fwait
push
enter
fwait
mov
add
mov
push
repz
cmp
jle
in
mov
popa
push
pop
cld
jmp
sbb
ljmp
loop
rol
leave
es
addr16
push
add
xor
cmpsb
punpcklwd
xchg
push
enter
fidivrs
xchg
int
lret
mov
stc
jae
mov
pop
lret
outsb
mov
xor
or
mov
addb
in
shrl
and
and
ja
movsl
pop
push
push
leave
mov
push
inc
mov
inc
stc
sbb
sbb
mov
mov
pop
jno
jmp
sub
fldcw
pop
mov
outsl
dec
sbb
loop
cld
insl
sbb
xchg
mov
pop
ljmp
fldcw
and
sbb
jmp
push
test
mov
add
or
xchg
pop
inc
adcl
ss
aam
and
ss
fstpt
sbb
sub
cmp
jbe
dec
mov
dec
test
lea
testb
imul
push
pop
das
mov
imul
test
dec
cmpsl
inc
rcrb
push
mov
sub
movsb
ret
dec
or
or
mov
xchg
push
ja
call
ds
loop
gs
aaa
push
push
jne
loopne
sbb
sahf
cmc
cs
fmull
cli
call
mov
or
mov
push
xchg
icebp
sti
loopne
mov
rcll
ljmp
scas
mov
mov
cmpb
push
jg
xor
icebp
mov
adc
insb
aas
cmpsb
insl
pop
divl
jge
mov
sahf
fnstsw
popf
loopne
popa
cmpsb
sub
sub
fwait
add
cmpsl
or
xor
lock
xchg
scas
adc
lea
cmp
mov
imul
clc
daa
outsl
mov
or
inc
inc
ss
ror
xchg
popa
fcmovnb
sub
jno
inc
mov
cmp
dec
jns
xchg
and
sub
inc
inc
mov
repnz
or
stos
or
mov
lcall
out
dec
mov
push
jne
pop
sbbl
pop
loop
adc
aad
jle
movsl
pop
pop
aaa
or
add
fiaddl
xor
loopne
popf
ljmp
arpl
imul
insb
dec
pop
add
popf
repnz
cmp
fwait
into
sbb
xchg
popf
sbb
mov
mov
in
rcrl
xchg
sbb
and
test
push
jge
mov
mov
jge
bound
mov
int3
pop
mov
cmp
ljmp
xchg
and
lea
jecxz
cli
mov
rclb
out
nop
push
or
fidivl
and
pop
rorl
leave
icebp
mov
sub
mov
mov
mov
int3
mov
sti
or
xor
dec
ds
push
jle
fwait
cmpsb
pusha
sbb
jo
mov
clc
cld
xchg
movsl
add
mov
frstor
xor
sub
out
pop
cmpsl
inc
mov
imul
jnp
xor
shll
mov
aad
into
mov
xchg
hlt
loop
mov
ljmp
jae
cwtl
mov
add
movsl
or
push
mov
xchg
dec
xchg
cmp
sub
cmpsl
xchg
mov
je
adc
insb
lcall
xor
iret
push
push
mov
loope
lret
xchg
or
imul
insl
rcll
xor
push
subb
mov
loope
jmp
xchg
lret
sub
sub
pushf
cmp
and
sub
jle
fsubrs
sub
xchg
test
and
adc
loop
xor
lods
pop
test
data16
jg
ficoms
cli
inc
lret
scas
mov
shlb
push
cmp
pop
jne
jmp
shlb
or
or
jp
xchg
mov
jmp
sub
xchg
inc
fcoms
xor
xor
test
lret
aad
dec
adc
hlt
insl
mov
inc
add
je
scas
popf
fnstcw
lahf
dec
fwait
jo
das
aas
inc
push
push
push
cmc
shll
sti
fwait
xor
adc
push
fnstenv
fdivrs
out
mov
and
pop
jg
sbb
push
test
call
push
jp
out
fisubrl
les
dec
xchg
lret
int3
cmp
test
push
mov
sub
xchg
hlt
or
pop
scas
fldenv
lret
push
enter
lods
push
add
fldl
mov
cmp
test
std
jp
mov
fsubrl
lret
add
test
leave
loopne
cwtl
jno
adc
mov
ret
ret
sbb
movsl
push
aaa
rcl
add
adc
add
stos
dec
popf
out
and
mov
ss
fisttpll
and
mov
lods
ljmp
cmp
mov
test
and
jns
jmp
int
into
fwait
daa
roll
and
mov
jecxz
xlat
mulb
xor
cmp
outsl
out
jb
stc
out
xor
dec
pop
fnstsw
sub
rcrl
sbb
xchg
or
stos
mov
loope
into
repz
sbb
sbb
out
or
imul
jge
sbb
xor
cmp
cs
push
dec
das
push
lods
adcl
mov
lods
iret
aam
add
cmc
and
in
xor
add
jmp
pop
sbb
std
push
pop
dec
in
js
jmp
idiv
lahf
xchg
push
sub
cmp
cmc
fsubrl
in
xchg
ss
fmull
xchg
call
inc
jbe
push
rolb
lock
rcr
inc
clc
push
cmp
dec
mov
test
and
or
in
dec
adc
and
popf
add
fsts
dec
rcrl
jae
pop
sbb
jp
inc
mov
add
jg
int
mulb
dec
jbe
xor
je
fmull
jecxz
flds
repz
pop
pop
cmp
inc
popa
insb
xor
dec
aam
test
outsl
dec
ret
shl
imul
ret
int
nop
fisubrl
pop
adc
push
data16
into
inc
adc
or
aaa
imul
repnz
aaa
mov
ss
inc
pop
mov
lods
ss
xchg
push
xchg
mov
push
icebp
ret
adc
movq
mov
lcall
adc
shrl
cltd
and
cmp
dec
mov
xor
push
hlt
outsb
les
pop
mov
dec
mov
jmp
push
lock
out
sub
outsb
cmp
fst
or
fdivp
inc
out
dec
sbb
inc
xor
daa
jne
dec
sub
add
aam
push
or
inc
mov
push
in
sbb
push
mov
sti
mov
sub
push
divl
gs
pusha
repnz
cli
xchg
xor
aam
add
repnz
cmp
js
sbb
pop
rcll
pop
aam
mov
enter
outsl
push
or
pop
jecxz
insl
pop
sti
fldl
sbb
lods
mov
xor
inc
dec
dec
std
ds
lret
int
rorl
in
add
out
repnz
xlat
lret
lods
pop
stos
mov
enter
and
les
mov
cli
stc
test
push
iret
mov
fcoml
js
add
ds
sub
and
lods
cmp
into
enter
cmpsl
and
aas
push
pusha
pop
push
xchg
mov
addr16
jo
xlat
leave
insb
and
fisubl
push
dec
mov
push
jnp
test
jp
ret
cmp
cmpsl
xchg
mov
fstps
mov
fadd
imul
push
outsl
inc
mov
call
mov
and
cmc
or
push
push
xchg
sbb
leave
sub
sub
push
out
movsb
inc
repnz
insl
sahf
sbb
das
mov
hlt
or
mov
sub
ror
outsb
ret
xchg
fwait
add
in
clc
push
out
aas
push
jge
and
pop
mov
adc
dec
mov
loop
mov
push
sbb
and
sbb
jo
out
mov
mov
arpl
ficompl
xor
xor
rcrb
mov
mov
insb
arpl
inc
idivb
push
xchg
fs
mov
dec
rorb
rclb
pop
ja
stos
mov
sub
outsl
jnp
xor
pop
sub
add
lahf
push
dec
ret
insl
pop
xlat
pop
lret
sbb
add
adc
ja
xchg
cltd
sbb
push
mov
dec
ret
or
test
popf
mov
xchg
push
mov
jle
and
push
push
ret
push
ljmp
test
js
call
inc
xchg
push
xor
aad
jle
rolb
stos
mov
cli
in
mov
loope
jecxz
xchg
nop
jo
iret
jl
jno
xchg
pop
call
xor
cld
imul
add
std
outsb
xor
pop
pop
cmp
cmc
fsubp
add
test
cmpsl
xchg
popa
inc
int
mov
jbe
add
mov
jg
sbb
ret
outsb
mov
loop
sub
aam
orl
pop
aad
add
mov
lret
cmp
pop
or
aad
xchg
mov
iret
mov
pop
mov
mov
add
xchg
mov
stos
fsts
sub
dec
shl
sub
mov
lods
stos
jp
inc
mov
cmp
mov
or
insb
cmpl
hlt
outsb
inc
jge
in
gs
test
jmp
dec
aas
lods
dec
xchg
cmp
lret
or
inc
and
movsb
cltd
cmp
sbb
pop
adc
mull
cwtl
xchg
pop
aam
fistpll
enter
inc
outsl
cmp
fwait
out
and
sub
data16
das
and
fstpl
cmp
jg
sbb
and
shlb
dec
inc
inc
fs
inc
xchg
mov
cmp
cli
ss
imulb
test
insl
enter
lods
aas
xor
std
sub
pop
ds
les
movsl
or
cwtl
add
mov
jnp
cmp
inc
insb
jns
push
jno
cwtl
imul
shlb
movsl
cmp
mov
es
leave
cli
mov
scas
popf
loopne
ss
mov
mov
lods
push
push
cmpsl
lds
push
imul
movsb
cld
dec
and
shl
mov
pop
dec
insl
adc
inc
and
mov
loop
add
loope
jmp
je
popf
cltd
cmpl
sbb
xor
addl
adc
xchg
mov
push
loopne
cmpsl
cmp
xor
sbb
jg
movsl
repnz
cmpsb
or
mov
inc
xor
out
add
mov
xor
test
push
push
sub
out
dec
inc
sub
add
cli
aam
sbb
and
mov
sub
mov
mov
daa
mov
fstpl
add
lret
arpl
pop
lret
sarb
xchg
das
mov
and
stos
add
cmp
call
or
addr16
adc
xor
xchg
int3
addr16
sbb
stos
sbb
and
in
test
inc
insb
jo
sub
dec
xchg
xlat
insb
xchg
push
test
inc
stos
mov
in
inc
ja
aaa
call
xlat
cs
sub
out
jl
cmpsb
mov
jge
outsw
inc
mulb
mov
pop
frstor
push
outsl
out
xor
aam
imul
or
jbe
fidivrs
sub
push
add
sahf
das
ret
xchg
dec
ret
mov
push
cmp
popf
or
add
push
xor
mov
shr
adc
jbe
push
pushf
sbb
into
xchg
stos
outsl
cmp
mov
scas
cwtl
add
aas
lds
aam
pop
dec
mov
fisttpll
data16
pop
xchg
and
loopne
nop
cmpsl
cwtl
mov
repz
sub
in
popf
xchg
setp
cld
out
movsl
aad
icebp
sbb
aad
and
mov
es
jns
xchg
pop
add
outsl
btl
ret
insb
mov
stos
adc
push
jl
repz
notl
mov
inc
xchg
call
cmp
jne
dec
push
adcl
xchg
outsb
add
lds
mov
daa
bound
mov
push
loopne
lds
sbb
das
dec
and
pop
addb
cwtl
sub
and
dec
rol
xorl
hlt
xchg
jge
sbb
mov
stos
cld
stos
mov
xchg
addl
aas
pop
pop
test
jo
call
sbb
xchg
bound
dec
cmpsl
in
adc
cmp
inc
jae
push
jns
dec
das
push
sub
push
sub
test
pushf
inc
arpl
int3
sbb
pop
sub
adc
int3
mov
or
xor
iret
xchg
ljmp
cwtl
pushf
push
mov
sbb
cltd
add
hlt
fs
icebp
cli
or
mov
repz
lcall
movsl
push
mov
lret
jl
aad
pop
mov
outsl
enter
jl
xchg
psrlw
and
and
lret
pop
mov
add
and
or
or
mov
rorb
jle
addr16
lret
xchg
mov
cmp
ljmp
orl
clc
lahf
popa
sahf
in
test
sbb
lret
arpl
in
es
inc
jnp
out
daa
sub
add
pop
adc
pop
fbld
cmp
aaa
jns
adc
xor
mov
arpl
and
jp
xor
cmc
shrb
adc
add
lret
ret
cs
pushf
ret
ss
testb
lods
jl
cmp
mov
sbb
das
mov
adc
sbb
repnz
shl
mov
xchg
mov
fsubr
fstp
mov
lock
xor
jbe
jo
xor
xchg
test
add
xchg
pop
sti
arpl
mov
pop
cld
mov
jnp
inc
jo
adcl
sub
add
xor
mov
add
mov
mov
and
aad
cmp
cmc
bt
js
je
mov
jb
mov
imul
in
mov
ffree
cmpsb
push
bswap
outsl
cmp
sbb
cwtl
dec
fwait
inc
inc
dec
lcall
call
stos
sbb
stos
in
frstor
pop
cmc
stc
or
jmp
sbb
ljmp
scas
adc
mov
add
outsb
stos
mov
sbb
pop
lret
out
jns
mov
pop
mov
test
sub
jno
into
es
push
or
icebp
roll
jg
xchg
add
sub
lods
test
rcll
jno
and
icebp
das
mov
and
jb
push
adc
mov
inc
into
push
xor
das
cld
sbb
aad
mov
repz
dec
dec
jl
sbb
dec
fimuls
outsb
in
cmp
inc
pop
push
mov
or
cmp
mov
pusha
enter
nop
lods
fwait
out
push
outsb
popf
dec
xor
mov
int
in
popa
call
cmp
inc
fs
movsb
popa
dec
sub
or
xchg
or
std
arpl
into
ljmp
push
add
popf
push
dec
lock
aad
add
outsb
sub
ret
xlat
cwtl
mov
iret
lahf
mov
xlat
std
int
or
repz
frstor
mov
aam
mov
movsl
fisubs
test
dec
pop
pop
pop
into
mov
aas
das
loop
xorl
sahf
jge
xchg
sti
xchg
icebp
sti
add
movl
popa
push
leave
push
sub
fcmovbe
ds
cmp
hlt
jle
cmpsb
mov
xchg
mov
dec
add
pop
and
push
pop
adc
add
fsubrs
mov
or
js
and
scas
jb
push
sub
cmc
and
lret
add
ret
jbe
or
out
mov
xchg
ljmp
sub
xchg
and
mulb
jo
cmp
int
popa
std
xchg
stc
paddd
cwtl
sbb
incb
or
gs
shrl
jp
cltd
mov
push
ss
push
lds
pop
and
out
adc
sahf
inc
movsb
gs
push
imul
mov
mov
cmpsb
sbb
lods
lret
sub
pop
lock
push
and
insb
in
xor
rorb
sarl
or
out
stc
outsb
jno
fcmovb
mov
inc
xor
pop
aaa
aaa
xor
popa
cld
and
sub
and
outsl
and
pop
inc
jg
push
add
loopne
pop
xchg
push
stos
scas
xchg
rcrl
cmpsl
sbb
sti
ret
mov
sub
mov
lahf
inc
and
outsl
daa
std
lret
inc
jmp
cmpsl
adc
push
imul
or
mov
sbb
stc
cltd
push
push
jb
xchg
adc
lds
pushf
mov
sub
jl
push
jne
and
loopne
jle
clc
push
pop
jp
in
xor
cltd
gs
rclb
jno
jl
sbb
js
into
addr16
aas
inc
nop
out
mov
sub
inc
push
xchg
adc
test
into
add
inc
mov
adc
mov
push
xlat
pop
cmp
xor
jp
inc
leave
mov
es
in
dec
xlat
cmp
pop
push
orb
jno
adc
outsl
adc
js
sbb
push
out
inc
lret
jp
cltd
sarb
out
ret
cltd
inc
insl
fwait
push
jp
cmp
fidivs
fwait
dec
pushf
pushf
cwtl
and
ljmp
or
jae
ret
mov
mov
imul
std
mov
add
lcall
je
icebp
gs
inc
shrb
cli
xor
arpl
sbb
fbstp
dec
inc
and
dec
inc
dec
dec
mov
daa
aaa
add
popa
cmp
xchg
pop
mov
sbb
mov
pop
stos
lods
mov
push
inc
push
inc
xchg
dec
into
in
cwtl
jmp
jo
jle
mov
fs
jnp
pop
fldt
outsl
clc
ret
mov
aad
sbb
cmpsl
rorl
xor
in
ror
call
int
push
pop
mov
jno
pop
mov
sub
inc
add
cmpsl
int3
sub
int3
les
aas
imul
xchg
subb
je
adc
int3
xor
popf
clc
adc
mov
jne
out
into
icebp
jnp
je
mov
sub
daa
in
sub
outsb
js
dec
fadds
sbb
outsl
stc
jp
or
xchg
insb
sbb
and
gs
ficoml
out
stos
mov
or
jl
mov
rclb
nop
test
into
mov
push
in
in
and
outsb
push
fistps
mov
fldenv
stos
cmp
cltd
pop
inc
sti
sub
jge
sar
in
loopne
sub
ret
dec
icebp
push
stos
jge
xor
mov
lret
dec
sub
push
dec
addr16
mov
insb
mov
loop
cmp
mov
adc
int
iret
scas
sbb
xchg
aam
dec
inc
insl
mov
mov
lret
sbb
fdivrs
jge
jp
imul
jae
fs
push
mov
ret
into
xor
jmp
jae
outsl
out
or
fisubrs
dec
adc
pop
fstps
jnp
into
push
cmp
inc
mov
lcall
sub
ds
roll
jnp
adc
aam
hlt
mov
push
cmp
fstpt
sub
sub
pop
cmpsb
sub
arpl
add
ljmp
inc
mov
adc
aad
jle
lret
pop
pop
pop
clc
fwait
icebp
xchg
icebp
or
stos
xchg
sub
popl
inc
leave
addl
jb
cmp
xchg
dec
dec
outsb
lahf
scas
cmc
adc
mov
sbb
and
sbb
pop
sti
daa
jnp
jmp
in
push
xlat
mov
sbb
jg
mov
xchg
dec
pop
repnz
enter
add
dec
aas
loop
fsubrs
cmp
jne
ficomps
cmc
fistpll
cmp
sub
sbb
mov
out
cmpsb
inc
call
sbb
test
movsl
fdivl
scas
pop
dec
mov
jmp
mov
movsb
inc
fstl
xorb
fimuls
sub
jle
enter
xchg
add
imul
mov
or
sti
rclb
stos
loop
sub
push
mov
dec
inc
sbb
adc
hlt
jge
aas
notl
or
not
rol
fsubrs
sub
hlt
shrl
and
cld
popa
outsb
inc
adcb
ret
jl
scas
push
sti
cmp
mov
data16
mov
cmp
js
inc
iret
push
imul
loope
mov
iret
sbb
movsl
cmp
cwtl
sub
dec
ljmp
cs
push
xchg
adc
test
inc
fisubl
and
cmc
cmpsb
lods
add
stos
aas
loop
xchg
or
push
jbe
in
pop
subb
xchg
in
push
push
lock
xor
inc
dec
or
dec
push
jp
cs
mov
fimull
xchg
dec
fisubl
test
out
stos
lcall
ficoml
jge
out
jnp
nop
test
stos
mov
fistpl
js
mov
arpl
mov
out
push
lret
adc
push
xor
scas
shll
pop
pop
mov
scas
lret
push
xchg
pop
data16
mov
and
jb
mov
stc
clc
sub
mov
push
or
xor
xor
add
sbb
stc
add
sbb
mov
mov
movsl
ret
mov
push
push
mov
js
and
sub
push
ljmp
mov
les
mov
dec
push
clc
add
sbb
mov
iret
or
mov
out
mov
stos
xchg
in
repz
lcall
mov
pop
or
lcall
xchg
mov
divl
xor
imul
inc
bound
push
xlat
mov
in
xchg
jnp
data16
cli
sbb
sub
pop
xchg
inc
adc
addl
cmp
rcll
mov
les
xchg
xor
sti
outsb
pop
mov
fwait
roll
ljmp
and
ljmp
aaa
clc
sub
cs
movsl
int3
popf
jg
cmp
jg
cmp
mov
or
pop
and
notl
lret
sbb
aas
pop
xor
mov
aas
mov
mov
lcall
loope
fistpll
xlat
ret
mov
mov
sub
iret
bnd
je
aas
aas
cli
insl
in
xchg
gs
ljmp
mov
sbb
ss
and
pop
cli
ret
inc
inc
clc
test
xchg
data16
mov
roll
add
cmp
xor
pop
sbb
pop
std
out
mov
incl
pop
pop
lret
shld
dec
xchg
adcl
push
negl
pusha
or
add
insb
out
fldl
mov
adc
and
cmpsl
mov
pop
lods
lods
cmpsl
jl
test
pop
rcl
cmp
hlt
jnp
jmp
insb
cmp
dec
push
dec
lods
out
cmp
cli
jnp
mov
dec
mov
in
das
xchg
cmp
nop
push
pushf
insb
pop
fistpll
lret
xchg
jp
xchg
adc
popf
addb
fldt
jb
pop
lea
mov
jg
adc
xor
insb
cmp
int
out
jecxz
mov
add
shll
cmpsb
mov
imulb
pushf
dec
movsb
adc
sahf
pop
ss
ja
cmp
push
dec
daa
xorb
mov
pop
push
cmp
sbb
xorl
sub
xchg
lods
xor
jb
leave
aam
xor
push
sbb
mov
movsb
lret
stos
shlb
mov
cltd
in
mov
mov
andb
dec
push
dec
lcall
push
dec
pop
jp
pop
cwtl
jle
add
mov
repz
aam
fisubrl
cs
dec
ss
jge
pushf
adc
shl
sub
cld
dec
dec
inc
out
out
xchg
mov
mov
fidivrl
mov
inc
xlat
adc
inc
sub
inc
iret
mov
pop
sub
xor
jmp
mov
or
lock
mov
push
sarb
testl
xchg
push
mov
test
int3
inc
and
adc
sbb
mov
pop
pop
nop
in
sbb
cwtl
ss
clc
std
push
cltd
mov
mov
test
or
shll
sarl
sbb
arpl
mov
cltd
fmuls
sub
cmpsw
enter
add
xchg
push
ja
pushf
aam
mov
mov
fs
push
add
xor
push
push
cmpsl
andb
xor
jno
test
pavgw
inc
sarb
push
movsb
test
jecxz
sub
repz
inc
sbb
and
push
das
std
decb
dec
add
and
stos
fidivl
mov
add
cmpb
int
adc
mov
fadd
hlt
sub
out
in
and
or
movsl
cmp
pop
add
fists
movsl
insb
cmpsl
mov
pop
lods
jno
incl
arpl
push
jp
repnz
add
test
jae
daa
adc
adc
or
add
cmpsl
sub
ret
mov
stos
cmp
push
pop
mov
xor
inc
lret
bound
mov
or
test
mov
nop
imul
cli
call
mov
mov
jae
and
jb
lret
or
sub
xor
cmp
int
pop
adc
popf
leave
ret
cmp
mov
dec
jae
cmpsl
sub
rcrb
and
pop
mov
mov
imul
es
std
adc
pusha
pusha
out
ret
jl
jae
mov
inc
cltd
sbb
lock
fs
ds
jl
push
mov
push
std
or
pop
fbld
shll
shlb
mov
push
mov
imul
ret
add
arpl
fs
jg
push
clc
mov
pop
aam
push
jb
jmp
stos
push
push
mov
sub
mov
pop
pushf
lods
mov
mov
cmp
pop
mov
mov
inc
cli
int
mov
mov
in
test
pop
popf
xor
mov
jae
jne
xchg
in
mov
clc
mov
xorl
mov
mov
lret
and
xchg
adc
fistpl
xchg
cld
mov
dec
xchg
in
ret
rcrb
xor
and
xchg
jo
std
test
jle
aaa
cmp
outsl
ret
inc
ret
adc
xchg
ljmp
inc
sub
out
xor
vpaddsb
insb
dec
push
int3
and
icebp
aam
cmp
in
adc
outsb
out
pop
outsl
das
mov
inc
call
incb
std
mov
mov
jno
jo
int3
addr16
xorb
push
dec
aas
sbb
pop
mov
iret
mov
rorl
out
lds
push
icebp
cmpsb
or
pop
xor
int3
sub
pop
xchg
push
in
sbb
add
xchg
pop
stos
daa
leave
or
inc
insb
fnstenv
nop
fists
xchg
mov
fnsave
rcrl
xor
cmp
mov
mov
xor
xor
xor
test
push
and
sbb
es
leave
idivl
jns
mov
add
cs
cwtl
sub
cli
das
mov
mov
ret
jns
dec
inc
pushf
and
push
imul
jmp
cmp
push
into
push
jecxz
cmp
arpl
and
enter
sbb
inc
inc
mov
mov
xor
push
dec
mov
call
push
or
mov
fldenv
stos
imul
jg
and
and
adc
out
xor
xor
cmpsl
fwait
repnz
test
add
mov
inc
test
lret
push
cmp
inc
mov
nop
popa
fs
jo
mov
cmp
lock
mov
out
ret
lods
aaa
mov
dec
and
mov
cmp
jg
mov
cli
rclb
into
sub
jle
adc
jnp
pop
mov
rorl
aam
xor
adc
pop
sub
fistpl
dec
and
addr16
cli
ret
push
or
adc
pop
jecxz
xor
push
out
cmpsl
out
out
jnp
std
loop
dec
pop
and
sbb
test
int3
jno
pop
pop
jno
mov
jno
fldl
jb
scas
dec
clc
testl
aad
push
loop
pop
jp
xor
or
lahf
cmp
into
out
xchg
test
mov
nop
jb
loope
js
xchg
nop
sbb
in
mov
jg
lds
es
adc
mov
fcomps
shll
inc
popa
push
mov
dec
and
lea
mov
ret
aam
aaa
adc
leave
pop
jl
int
in
dec
lock
ret
mov
dec
pop
cltd
dec
push
mov
iret
xchg
fcomps
jg
popa
cmp
pop
movsl
stos
mov
xchg
add
movsb
dec
pushf
mov
lret
sbb
jl
mov
lret
adc
xor
sarb
ret
xchg
lret
cld
mov
pushf
ljmp
adc
adc
mov
mov
xor
or
stos
sbbl
mov
adc
xor
and
lahf
sub
and
push
in
pop
mov
mov
lds
pop
xorl
fiaddl
insb
mulb
jecxz
dec
cmp
add
pop
cwtl
and
dec
xchg
push
or
mov
mov
leave
mov
xor
cmp
insl
sbb
mov
test
pop
lret
je
mov
in
jge
xor
xchg
call
mov
pop
fbld
dec
iret
dec
adc
mov
push
cs
xor
shlb
jno
xor
add
or
popf
outsl
mov
mov
pop
shrl
lock
jl
push
lea
stos
leave
xchg
dec
out
aam
jmp
mov
cld
xchg
je
cwtl
ret
loopne
add
or
scas
jle
mov
mov
and
cwtl
sbb
add
popa
pushl
sub
cltd
in
lods
mov
nop
fld
movsb
xchg
lret
inc
xor
mov
and
cmc
lea
pop
out
lea
add
or
std
into
inc
mov
ret
pop
repz
pop
iret
jmp
mov
or
rorb
in
mov
sarl
pop
xchg
sub
mov
push
add
mov
xchg
cmp
xchg
cld
cmp
lds
jle
adcb
sbb
hlt
mov
push
es
add
mov
imul
xor
pop
push
push
push
sbbl
pusha
imul
loop
repz
imull
aas
and
orb
pop
xchg
insb
outsl
call
xor
dec
jnp
bound
xchg
push
ret
cmp
ja
fwait
stos
and
call
repnz
mov
pop
stc
add
cmpsb
and
in
dec
dec
push
push
ja
sbb
cld
fnstenv
add
push
sahf
js
fwait
pushf
mov
ds
add
pop
sbb
out
pop
aas
jne
and
mov
aaa
jmp
in
stos
pop
cmpsb
mov
sub
ljmp
lret
inc
lods
xlat
jmp
lahf
cmp
outsl
pop
xlat
call
cwtl
sub
pop
inc
gs
inc
call
cld
push
mov
mov
push
repnz
insl
pop
mov
arpl
mov
in
mov
xchg
into
dec
inc
cltd
cmp
mov
mov
imul
ljmp
bound
add
and
cmp
in
xor
and
sahf
aaa
imul
cmp
lods
jo
jmp
pop
pop
cmc
cld
aaa
icebp
sub
leave
push
adc
repz
mov
rcrb
rcrb
int
sub
jge
sub
shrl
sahf
push
test
jl
movsb
adc
mov
ds
lahf
adc
enter
sahf
hlt
insl
aas
mov
and
pop
mov
mov
into
xchg
pop
sub
andl
sub
mov
sbb
mov
loope
sub
movsb
nop
subl
lcall
aaa
push
sbb
loopne
sbb
cwtl
push
dec
xchg
ret
push
call
sahf
inc
jg
mov
sub
pop
ja
mov
loope
shl
push
and
pushf
inc
scas
call
in
sub
xor
jno
sub
pop
cltd
movsb
mull
push
sbb
push
inc
mov
pop
in
jl
jbe
shlb
sub
push
ficomps
xor
push
mov
loop
daa
sbb
mov
mov
mov
push
in
in
test
stos
iret
pop
push
bound
and
ljmp
mov
mov
test
jnp
repnz
imulb
sahf
pop
movsb
insl
mov
dec
loopne
pusha
dec
add
mov
and
mov
add
xchg
popf
mov
pop
sub
hlt
in
out
pop
jne
sbb
jmp
mov
pop
xchg
push
fwait
mov
outsl
cmpsl
push
movsb
iret
enter
mov
insb
enter
adc
fdivs
jne
mov
inc
fs
sub
sub
movzwl
jmp
scas
pop
insb
loopne
mov
sub
inc
jns
xchg
add
jo
sti
shrl
mov
in
sub
mov
push
jp
jmp
dec
popf
cmp
push
repz
clc
idivl
xor
xchg
mov
pop
pop
jge
dec
sub
mov
sti
xchg
or
pop
lret
ss
mov
sub
adc
mov
xchg
dec
ljmp
ljmp
adc
icebp
cmpsl
xor
in
in
bnd
inc
leave
cmp
sub
jns
cli
mov
out
pop
cli
xor
sahf
lds
dec
std
jecxz
dec
nop
daa
pop
inc
or
mov
inc
ss
fcomps
cld
lahf
pop
bound
cld
fnstenv
fs
sbb
lcall
pop
dec
xor
inc
pusha
sbbb
cmp
jmp
push
in
popf
or
adc
adc
scas
sarb
jg
jg
inc
dec
es
pop
sub
call
std
pop
mov
inc
inc
xor
xor
jle
in
into
mov
jmp
dec
inc
xor
je
popa
or
push
cmp
ss
popa
sub
or
add
push
insb
mov
xor
xchg
pop
into
in
push
mov
pop
insl
or
fs
xchg
ja
xchg
jb
adc
sub
in
mov
outsb
iret
cltd
in
lcall
shll
or
inc
gs
cli
jecxz
int3
adc
xchg
lock
sarb
jmp
ficomps
int3
in
pop
ds
out
and
xor
cmpsl
push
hlt
mov
pminsw
out
cld
into
or
and
pop
xchg
sbb
jbe
shl
ljmp
mov
mov
adc
xchg
addr16
mov
xchg
imul
ret
rorl
xor
test
or
addr16
vmread
adc
loope
cmp
push
out
mov
push
or
cmp
out
jle
jns
call
mov
mov
clc
repnz
jbe
mov
mov
push
scas
pushf
sbb
cmp
add
jns
iret
imul
jae
or
lds
inc
cmp
mov
mov
jbe
iret
test
pop
cs
or
xchg
xor
sub
pop
in
mov
add
adc
iret
shll
mov
push
stos
cmp
dec
pushf
dec
pop
das
insl
pop
je
xchg
dec
mov
add
lret
pop
les
andb
fs
setg
sub
pushf
fsubr
addr16
sub
xor
jg
pop
pushf
xchg
mov
cmp
rcll
or
addr16
lahf
mov
mov
adc
ficomps
push
adc
jg
das
mov
rcrb
das
in
inc
adc
decl
rorb
xchg
lahf
push
push
jl
inc
outsb
jno
pop
xchg
testb
pop
lods
ss
add
sbb
sti
mov
pop
inc
push
fdivs
shll
mov
and
std
cwtl
mov
lds
dec
rcrb
xor
int3
es
nop
mov
sarl
add
cmc
add
mov
xchg
push
mov
jl
fld
pop
loope
jae
add
out
or
xor
cmp
push
test
fcoml
push
jg
dec
or
icebp
add
nop
out
xor
jl
aas
out
mov
mov
cmp
push
xchg
xorl
xor
jnp
inc
lcall
pushf
lahf
testb
pop
bound
fs
sub
cld
rcl
mov
movsb
add
push
add
insl
out
dec
vmovhps
ret
jae
mov
pop
dec
lods
flds
mov
stos
inc
adc
push
push
andb
add
push
lods
mov
imul
arpl
mov
popf
and
lahf
popa
clc
sahf
cs
ret
push
aad
jno
lcall
shl
arpl
dec
stc
mov
mov
pop
stc
sbb
xlat
xor
out
push
pop
ss
leave
insb
insb
pop
es
arpl
mov
in
in
mov
ja
stos
lods
fldt
xchg
xchg
mov
out
pop
adc
xchg
xor
pop
shl
jne
xchg
fcomps
cmp
adc
aas
jp
jmp
loopne
ja
mov
lock
adc
aad
inc
in
and
lcall
f2xm1
and
xchg
mov
cmp
push
sub
fs
das
int3
jmp
icebp
int
cmp
and
pop
jae
inc
pop
jge
push
and
xchg
rorb
mov
andb
std
xchg
shl
jb
into
enter
decb
addb
fadd
or
bsr
and
jbe
hlt
cmp
mov
bound
xchg
mov
push
stos
mov
mov
pop
pop
mov
mov
outsl
test
xchg
inc
sbb
cmp
sbb
pop
shrb
adc
jbe
flds
mov
inc
mov
rcrl
mov
aaa
je
mov
adc
push
ss
movl
fsubl
dec
ret
sub
data16
es
add
ja
mov
cwtl
mov
xchg
or
sub
add
jno
push
xchg
lret
icebp
sbb
fadds
sbb
sub
inc
push
jbe
ret
sahf
or
fnstsw
jb
sahf
jle
andb
movsl
outsl
addr16
sub
push
and
in
popf
lods
xor
mov
int
jecxz
push
insb
das
and
daa
js
dec
and
outsb
shlb
movsb
sbbl
xor
xchg
das
and
inc
xchg
bound
testb
movsb
push
xor
fcomip
push
outsl
leave
and
xchg
mov
pop
jb
lds
xor
add
inc
push
repz
stc
push
jo
iret
pushf
dec
out
nop
jne
call
pop
inc
test
sbb
or
gs
cmp
cltd
push
imul
push
mov
in
andb
ret
adc
and
hlt
outsb
sbb
mov
sbb
xlat
aaa
and
mov
mov
cmp
fcomps
dec
dec
mov
mov
icebp
pop
mov
lods
rcl
fdivs
daa
out
mov
xchg
add
push
shll
jne
cmpsl
test
xchg
psubb
fistpll
shl
push
mov
nop
mov
mov
sub
pop
notl
lea
in
sub
push
test
repnz
mov
mov
add
jl
mov
mov
sti
aas
fimuls
push
mov
xchg
xchg
out
test
add
mov
scas
pop
pop
inc
sarb
jge
mov
lret
sahf
insl
mov
or
xchg
xchg
shrb
mov
movsb
ret
and
inc
mov
inc
cmc
sti
push
cs
nop
je
cltd
jmp
cmp
sub
cmpsb
jne
jge
aas
ss
inc
incb
adc
mov
mov
lock
inc
in
adc
rorb
pop
jg
lahf
xchg
cld
ficomps
test
popa
mov
lods
sub
or
push
sbb
jl
lods
lds
lahf
dec
add
xor
pop
cmp
push
stos
jge
mov
sub
jnp
out
push
in
pop
cwtl
pop
lcall
adc
hlt
cli
fwait
pop
sbb
hlt
je
mov
inc
lcall
lods
push
adc
rorb
jae
pop
adc
sub
cmp
mov
push
out
add
or
jnp
clc
imul
xchg
shrl
jbe
jge
daa
popf
mull
imul
sub
jmp
pop
inc
fucomi
cmp
xor
mov
ljmp
aad
xchg
mov
mov
imul
add
dec
imulb
sbb
stc
stos
les
lahf
scas
fs
xchg
pop
divb
add
dec
fcoml
and
xchg
mov
jo
jmp
lcall
fdivs
mov
addb
sub
pop
lea
roll
movsl
push
mov
mov
mov
gs
gs
cs
out
in
aaa
jecxz
sti
outsl
inc
and
cwtl
cmp
adc
or
clc
cmp
xlat
in
sub
mov
xchg
inc
shrl
ss
push
cmp
jl
pushl
sub
int3
jbe
push
mov
mov
adc
enter
in
sub
aaa
into
shlb
pusha
cmp
adc
shrl
fcmovb
aas
repnz
add
mov
sub
scas
pop
mov
jb
out
movsb
and
ficoml
int
xor
mov
pusha
mov
jg
test
rolb
and
fdivrs
sub
mov
cmp
fldt
sbb
arpl
test
lea
inc
push
mov
push
cmp
push
aam
das
inc
cs
out
xchg
jg
imul
mov
lods
repz
sbb
cli
push
lahf
push
scas
scas
pop
iret
sub
test
and
repnz
ss
cltd
sub
js
add
loopne
stos
orb
cmp
shl
into
mov
push
pop
add
ret
fmuls
int3
cmpl
call
pop
nop
cwtl
xor
dec
popa
xchg
cmp
inc
iret
dec
bnd
imul
imul
aad
das
jle
mov
fisubrs
daa
dec
push
mov
jbe
stos
dec
push
leave
jne
adc
rcr
jnp
pushf
push
lret
push
xor
mov
rcr
cs
hlt
mov
sub
es
xor
adc
dec
xchg
scas
ret
xor
das
mov
cmpl
call
push
nop
dec
fmuls
sub
test
int
mov
sbb
int
fucom
mov
stc
xchg
aas
fsts
cmp
ds
cmp
js
test
mov
adc
mov
cmp
cs
orb
mov
pop
or
out
pop
pusha
fsub
pop
mov
sbb
mov
mov
lods
jl
cwtl
scas
lods
insl
xlat
pop
add
icebp
xor
mov
hlt
mov
sbb
sbb
outsl
mov
scas
rclb
aas
mov
cmp
mov
xchg
pop
bound
add
mov
out
adcb
pop
pop
es
jge
scas
nop
xor
inc
push
lds
cmp
sub
pop
dec
aas
lods
mov
xchg
pop
out
mov
stos
pushf
sahf
push
jno
dec
add
fst
add
cmpb
cltd
int3
cmp
jno
push
xor
sbb
cmpsl
jg
cmp
mov
pop
mov
movsb
in
mov
add
out
ret
ss
sahf
xchg
adc
add
and
ret
jg
inc
and
das
lret
jno
sarl
enter
push
adc
mov
mov
jo
adc
push
jne
dec
mov
lcall
movsb
ja
sti
jp
xchg
insb
adc
ss
shrw
je
lahf
aaa
add
inc
push
mov
mov
lret
cld
inc
daa
flds
fidivrl
fidivs
dec
cmp
mov
test
sbbb
xchg
imulb
pop
dec
daa
push
inc
cld
mov
xor
pop
mov
mov
ljmp
pop
inc
pop
mov
stos
xchg
sub
leave
cmp
xor
mov
mov
jne
and
or
sub
and
pushf
sbb
mov
dec
out
sub
rcrl
sub
inc
cmc
aam
inc
xchg
or
aam
cmc
mov
out
xor
stc
or
sbb
repnz
dec
sbb
js
jmp
stos
fimuls
sub
sahf
inc
add
inc
repz
mov
sub
mov
cmp
sahf
mov
push
jg
lea
sbb
cmp
in
pop
out
cmp
jae
repnz
push
sahf
jne
or
and
cmp
push
imul
in
je
push
clc
or
fisttpl
rolb
dec
xchg
lret
int3
cmp
and
and
lret
fstl
ljmp
fs
in
mov
sarb
jle
inc
sub
repz
jl
xchg
dec
mov
fs
xor
stc
mov
pop
popa
stos
mov
jo
mov
dec
icebp
out
adc
movsl
or
sub
xchg
fldt
push
sub
inc
dec
mov
or
aaa
cmp
xchg
lds
sub
inc
in
jnp
and
cwtl
xchg
mov
cmp
adc
subb
mov
push
out
lods
popa
mov
sub
jmp
dec
inc
mov
dec
test
out
add
lods
cmpsb
int3
push
pushf
rcll
mov
pop
xor
mov
push
sub
dec
inc
or
mov
in
mov
loop
test
inc
aas
pop
or
pop
sbb
mov
mov
dec
test
lret
into
stc
insb
add
jmp
cwtl
xchg
inc
jg
nop
cmp
add
push
sub
fidivrs
imul
sbb
ss
dec
push
cmpsl
sarb
cmp
sbb
mov
cmpl
jge
cltd
cltd
fisubs
xor
int
sti
dec
push
and
cmp
xlat
mov
mov
pop
aad
popf
inc
je
leave
xlat
bound
mov
lods
rep
jae
adc
out
popa
mov
repnz
cmp
xchg
mov
fsubrp
xchg
enter
mov
add
lods
out
mov
out
adc
push
test
inc
or
pop
inc
sub
lahf
push
push
lret
scas
sub
pushf
xlat
mov
adc
pushf
shrb
stc
fcmovne
popf
xchg
addr16
sub
loopne
dec
fsub
push
imul
cmp
sub
stc
fdivp
lahf
sbb
cmpsb
mov
push
loope
and
arpl
and
xor
push
ljmp
out
and
stc
out
in
cmpsb
adc
push
stc
popf
push
xor
stc
inc
sub
inc
test
xor
sub
aaa
mov
cmp
outsb
test
jge
cmp
rcl
xchg
test
cmp
inc
aaa
cwtl
mov
inc
sbb
mov
imul
mov
test
in
add
fxtract
lcall
xchg
dec
outsb
mov
mov
and
stos
lcall
stos
sbb
mov
mov
daa
sbb
lds
jo
cltd
es
push
aas
sbb
mov
std
mov
pop
mov
rorl
in
icebp
sbb
jo
or
fsubl
or
sti
inc
nop
mov
jp
mov
mov
dec
jmp
inc
pop
lock
mov
adc
adcb
mov
and
pushl
in
push
mov
inc
lret
inc
adc
pushf
les
xchg
cmc
xor
lret
test
add
insl
xor
imulb
xchg
or
sti
xorb
dec
sub
aad
xchg
xchg
cmp
cmc
cmpsl
sahf
int
and
sbb
negl
xchg
mov
xchg
push
adc
repz
bound
jecxz
sbb
and
in
push
mov
jl
and
or
stos
and
mov
inc
cmp
ja
inc
call
pop
cmpsl
cmc
lahf
cmc
and
outsb
cltd
xor
mov
pushf
push
mov
out
push
enter
jae
vmread
out
mov
inc
jae
sti
leave
aad
sub
lret
shld
cmp
fs
stos
mov
pusha
pop
xchg
xchg
iret
rcrb
sbbb
lcall
testl
rorb
xor
aaa
xchg
popf
push
jno
clc
mov
in
dec
mov
mov
cmp
lds
mov
mov
dec
fbstp
mov
add
xchg
xchg
mov
mov
lods
push
inc
adcl
shll
xchg
jge
fistps
sti
dec
mov
push
enter
push
icebp
into
inc
into
xchg
test
cli
add
push
adc
test
adc
fcomi
jbe
jo
jb
les
cmp
mov
insb
push
push
and
sbb
testl
push
mov
adc
cmpsl
sub
push
mov
test
fimull
mov
mov
gs
scas
insl
dec
cmp
stos
jo
daa
ficompl
adc
xchg
sub
mov
dec
xor
jb
cmc
jl
int
pop
or
or
mov
jne
mov
dec
hlt
jbe
and
jo
xor
loope
mov
mov
popa
xor
xchg
xchg
stc
pop
fbld
in
sarl
clc
xor
in
dec
lahf
ficomps
call
call
pushf
mov
in
mov
out
sbb
xor
push
mov
into
repnz
les
mov
and
mov
jne
sub
inc
xor
in
js
adc
jne
mov
xchg
and
stc
imul
inc
outsb
cmc
gs
xor
adc
pusha
dec
mov
xor
fs
sbb
leave
xor
les
aaa
aas
fcoms
int3
xor
mov
xchg
cmpsl
popf
xchg
mov
enter
test
pop
mov
mov
repnz
xchg
insl
cmp
jb
cmp
imull
push
mov
sub
xchg
icebp
clc
and
lret
adc
pop
ljmp
adc
ss
shrl
fs
mov
arpl
cld
mov
xor
dec
nop
sub
push
ljmp
jmp
pop
adc
inc
shl
ret
mov
mov
mov
xchg
loop
ja
gs
sbb
cmpb
mov
stos
cmp
js
xchg
and
lods
lods
fildll
fwait
test
into
pop
ret
cld
sbb
sub
subb
mov
daa
test
and
shrb
div
call
xorb
ret
ds
out
ficomps
jb
mov
pop
add
jle
repz
aam
pop
shll
inc
xor
fiadds
lea
notb
or
mov
data16
adc
xchg
les
leave
pop
test
lods
sub
loop
in
leave
xchg
mov
pop
adc
dec
in
sarl
sahf
mov
jbe
and
pop
cmp
add
repnz
jnp
or
pop
cmpsb
mov
cmpsb
rcrl
cld
bound
cli
mov
fcmovu
xchg
xchg
mov
mov
xchg
mov
push
movb
scas
jnp
push
test
add
push
js
and
xchg
shrd
inc
aaa
mov
dec
sar
cmp
fcom
or
jge
fimuls
jge
push
cmpsb
sub
xchg
pop
add
mov
lahf
pushf
lcall
dec
mov
nop
xor
imul
std
ljmp
xlat
sbb
jbe
stc
xchg
mov
jo
mov
inc
ret
cmpsl
mov
inc
repz
adc
adc
outsb
lods
add
mov
pop
ljmp
mov
jmp
pusha
lock
mov
data16
mov
sbb
cli
imul
mov
dec
inc
loop
inc
imul
sub
bound
mov
dec
fnsave
imul
lret
xor
int3
in
out
dec
xchg
call
call
xor
pop
xor
xchg
nop
mov
movsl
pop
mov
dec
cmp
rol
cmpsb
cmp
pop
or
int3
sub
mov
jl
mov
cmp
mov
stos
iret
imul
push
xchg
xor
adcb
in
adc
lds
jne
and
movsl
loope
movsl
sbb
sahf
scas
mov
daa
jge
or
push
mov
push
icebp
or
or
sbb
and
lock
sub
push
stos
jmp
shl
xor
dec
gs
lock
inc
movsb
mov
loope
or
xor
cmp
xor
pop
iret
and
shl
xchg
out
cs
sub
mov
lret
pop
ret
stos
movsl
xor
imul
dec
loop
shlb
mov
push
jns
push
mov
or
push
push
jae
xlat
mov
sbb
xchg
lret
xor
pop
dec
rcrl
mov
add
stc
cmp
shll
scas
or
xchg
mov
xorb
jp
ss
jg
sub
jne
aam
mov
jmp
scas
fldcw
cmp
mov
inc
push
lret
inc
into
outsl
int3
dec
addr16
or
push
add
add
bswap
mov
fadds
jo
and
inc
cltd
or
in
fcmovne
ret
or
int
sub
mov
addr16
js
add
aam
hlt
addr16
xor
or
mov
cmp
fmuls
and
icebp
jl
xchg
cmp
dec
push
lret
cmp
lods
cmp
mov
scas
mov
dec
jo
and
or
out
mov
enter
je
jp
xchg
pop
push
scas
push
subb
int3
les
pop
dec
push
xchg
add
push
lea
fidivs
stos
push
imul
dec
xor
repz
add
ljmp
stc
or
sub
pop
jp
daa
mov
xchg
mov
std
mov
sbbb
int3
push
sub
jne
imul
jnp
xor
adc
pop
popf
rcrb
pop
adc
int
ljmp
mov
ds
shrb
push
rolb
loopne
cmp
jne
mov
cmp
sub
xchg
mov
push
add
push
add
sub
pushf
popf
loopne
clc
inc
inc
jae
int3
push
loope
xchg
js
pop
jecxz
cld
push
in
out
icebp
push
fsubrs
repz
call
or
out
andl
push
loope
xlat
aam
mov
lret
push
icebp
inc
mov
add
push
mov
ret
pop
call
mov
and
mov
adc
enter
mov
jne
fsubrp
data16
xor
xchg
xchg
data16
xchg
mov
mov
popl
adc
or
mov
xor
lds
call
test
lods
in
lods
sub
jle
add
loop
mov
xchg
pop
push
loop
inc
lahf
xchg
cmp
stos
sub
push
xor
lock
or
mov
cltd
outsl
inc
mov
mov
pop
fs
test
das
fwait
sub
in
mov
sub
jae
push
xor
push
insl
lcall
cmp
outsb
inc
popf
lcall
push
cmp
pop
stos
xchg
sbb
in
inc
push
mov
push
aas
mov
jp
cmp
jp
add
cmp
sbb
je
push
mov
xor
lods
out
fisubrl
xor
iret
or
fdivl
imul
mov
clc
in
dec
cli
fistl
scas
push
sub
in
lods
xor
mov
lahf
jb
imul
imul
mov
or
les
jmp
push
mov
xchg
and
add
jo
mov
test
lcall
xchg
cmp
dec
out
mov
pop
adcl
adcb
rorb
push
and
pop
cmp
and
sub
cmp
and
xchg
dec
subl
fcomip
add
sub
push
loopne
mov
in
gs
cmp
fists
lcall
es
jecxz
dec
fists
fldl
push
into
cmp
pop
add
test
dec
cs
insb
sbb
mov
loope
lret
out
cmp
xor
cltd
movsb
adc
xor
test
pop
sbb
popa
test
cwtl
lock
je
sub
bound
mov
inc
add
cmc
test
out
adc
mov
cmpsl
push
cmp
fsubrs
push
stos
or
rolb
push
nop
fldcw
xorl
aaa
test
dec
int3
push
lahf
sahf
mov
jmp
sub
sbb
adc
mov
loopne
test
push
mov
and
fidivs
inc
divl
cmp
cld
lahf
push
ret
scas
das
mov
das
xchg
jl
mov
sub
lret
sub
mov
or
subl
cwtl
lcall
sub
sub
mov
jno
inc
mov
insl
lret
push
xor
lahf
xchg
jle
xor
aam
push
push
pop
es
sbb
cmp
lret
jle
mov
xchg
cltd
into
dec
sub
ja
or
mov
clc
stc
adc
xchg
ror
in
mov
xchg
inc
loopne
and
aas
cwtl
and
decl
loopne
sub
outsl
xor
test
btc
outsl
ljmp
out
mov
mov
cmpsl
nopl
stc
in
outsl
mov
jp
sbb
stc
popa
pop
add
push
dec
lock
or
or
data16
pop
int3
testl
jnp
push
popa
dec
bound
jne
outsl
mov
jo
popf
jl
testl
lds
mov
cwtl
loopne
pop
mov
test
and
repz
dec
mov
push
sub
sbbb
adc
jns
mov
pop
loopne
adc
pusha
push
test
mov
sbb
push
fadds
jmp
mov
add
jmp
out
movsb
imul
test
fcomps
xor
jl
in
mov
scas
push
push
int
mov
add
hlt
xchg
sbb
out
movsb
aad
adc
lods
mov
imul
ret
mov
xchg
jge
rcrb
push
movl
out
mov
sbb
and
outsb
mov
fdivs
adc
adc
push
andb
mov
pusha
aad
les
xchg
dec
mov
fistpl
sub
inc
sub
in
push
or
mov
sub
push
aam
insb
mov
imulb
cmpsb
and
push
js
ret
icebp
lods
lods
pop
dec
or
stos
clc
scas
repz
cmpsl
aaa
aam
lock
out
xchg
js
leave
lods
xor
inc
jb
xchg
jbe
ret
cmp
adc
inc
and
jge
mov
push
call
stc
lods
sub
sub
imul
mov
shll
fcoml
or
int
jae
xor
stos
cwtl
inc
daa
popa
aam
xchg
popf
or
sbb
testb
xchg
nop
loop
sbbl
jbe
nop
sbb
lods
aas
push
jnp
mov
aaa
arpl
xlat
pop
add
or
xchg
cmp
inc
leave
filds
push
aaa
mov
aaa
stos
aaa
daa
add
xchg
cld
leave
pop
sarl
xor
jecxz
jle
push
sbb
push
addb
jmp
inc
lret
xchg
fsub
pop
ljmp
push
mov
or
scas
lcall
pop
cmp
mov
push
mov
lahf
sbb
push
popf
cmp
jle
cmp
enter
inc
mov
or
and
mov
mov
rol
push
or
add
nop
xchg
loope
xor
cli
xor
rcrl
xor
add
testl
scas
add
xlat
dec
cltd
pop
inc
js
dec
stc
sub
dec
or
ja
dec
in
loope
and
mov
or
lods
jns
adc
sub
cmp
fmull
inc
jle
mov
mov
outsl
rcl
mov
and
pop
mov
xlat
xchg
outsb
loop
and
and
pop
jbe
jno
test
xchg
cmp
loopne
jmp
xchg
in
gs
add
mov
mov
jne
popa
out
xlat
int
ss
les
xor
sbb
stos
add
push
push
popa
push
mov
mov
movsb
lahf
xchg
sti
and
ret
jge
inc
jno
int
psubusb
pop
ss
out
cli
or
jmp
jl
inc
call
push
mov
push
sbb
out
fidivrs
dec
inc
pop
test
push
in
movsl
sahf
and
mov
xorl
mov
das
aad
nop
sahf
cld
xchg
dec
and
aam
sbb
add
jae
ret
out
dec
ss
call
push
sbb
add
xchg
xchg
mov
xor
outsb
xadd
xor
sub
push
psubusb
mov
out
jnp
cmp
and
popa
jle
xchg
ja
xor
cs
negb
loope
mov
sub
adc
add
mull
push
adc
pop
mov
inc
loopne
pop
lret
repnz
jmp
cs
jl
stos
add
or
xor
or
mov
daa
or
imul
adc
fistpll
leave
sbb
leave
mov
mov
add
jmp
push
testb
and
jb
xchg
ja
das
in
loope
out
insl
push
fabs
cwtl
or
sub
iret
and
fists
xlat
xchg
ret
fisttps
sub
fsts
lcall
cmp
xlat
and
sub
cli
out
mov
mov
mov
push
hlt
test
repz
pop
push
and
loope
mov
mov
mov
sub
push
sbb
jmp
mov
xchg
jmp
sbb
dec
jl
int
lret
fistl
mov
xrelease
outsb
andb
popa
ljmp
or
or
push
icebp
mov
push
mov
mov
cmc
repz
cmpsl
repz
push
cltd
pop
cmp
pop
roll
xor
jae
je
dec
out
jmp
push
mov
in
jno
insb
inc
mov
icebp
fcmove
dec
arpl
fsubrs
pusha
int3
jp
or
stos
cld
and
in
sbb
out
adc
add
xlat
push
mov
es
test
aam
push
pop
push
jo
movsl
into
push
arpl
cmp
dec
or
mov
mov
xor
popa
xlat
push
call
xchg
xchg
inc
inc
addr16
dec
pop
jbe
movsl
stos
stos
imul
inc
pop
pop
gs
mov
cmp
pop
ja
jne
ljmp
mov
dec
mov
dec
stos
cmp
add
popw
sub
stos
xor
sbb
add
mul
fs
xchg
scas
xor
lods
mov
xchg
icebp
adc
fbstp
cmp
cmpsl
pop
aaa
repnz
push
es
enter
jb
and
mov
inc
ljmp
add
add
push
shrl
xchg
push
mov
nop
and
jnp
cltd
dec
xor
mov
lds
scas
and
lods
lret
dec
lods
ja
aam
negl
outsl
lods
push
pushf
icebp
ds
mov
das
jnp
sbb
and
or
mov
mov
xor
and
in
dec
push
in
call
pop
pop
lock
and
add
out
adc
rcr
lods
adc
mov
outsl
movsb
dec
mov
jecxz
sbb
dec
jmp
or
xor
xchg
in
setb
enter
subb
jge
inc
sbb
push
lea
shrb
mov
cs
mov
pusha
dec
mov
cwtl
xchg
push
mov
xchg
enter
jg
mov
pop
cs
cmp
mov
adc
out
pop
dec
ja
cmp
and
inc
jno
sbb
xchg
inc
mov
stos
push
mov
pusha
decl
out
shll
inc
sub
cli
xlat
pop
dec
dec
sub
jge
je
movsb
cwtl
mov
push
fidivrs
movsl
fnstcw
push
enter
mov
repnz
jmp
pop
push
mov
sti
pop
adc
mov
or
scas
cmp
and
addr16
mov
sti
das
paddw
scas
pushf
aas
add
scas
push
jle
pushl
lods
cmp
xor
les
in
mov
jbe
sbb
and
mov
jg
cmc
jp
roll
push
sbb
shrl
stos
xchg
imul
jmp
xor
icebp
cmp
icebp
cmc
jle
out
cmp
mov
push
hlt
push
icebp
cmp
rorb
mov
clc
or
push
out
mov
xchg
sarl
cwtl
and
je
mov
rolb
sbb
xchg
xor
adc
sbb
fimuls
iret
sbb
aam
push
imul
jl
xor
push
mov
call
iret
arpl
mov
jne
fcomps
cli
xorl
fucompp
mov
xchg
gs
dec
repz
or
sbb
stc
loop
cwtl
push
ja
mov
pop
jmp
je
jo
xor
fs
cwtl
sbb
or
jmp
enter
lea
loop
jbe
data16
test
jae
fdivl
xchg
movsb
or
out
xor
outsl
inc
das
or
lahf
iret
mov
jbe
sub
add
sarl
pop
sahf
aaa
mov
sub
movsl
sahf
mov
pop
jl
hlt
sbb
in
jno
leave
mov
lahf
fstl
xor
mov
xchg
mov
imul
xor
gs
jns
fisttpll
cmp
sub
dec
leave
es
pop
xchg
jge
add
inc
lock
mov
pusha
cmp
push
inc
test
rcll
imul
cld
jbe
dec
lods
jno
dec
xor
shlb
adc
xorl
adc
pop
jae
dec
pop
push
pop
lods
stc
jnp
and
addr16
pop
aad
arpl
fs
push
add
cmp
or
pop
pop
push
pop
mov
or
jne
fnsave
xchg
push
dec
pop
ss
pop
jo
lea
mov
xor
push
xchg
adc
sub
cmpsb
or
fdivrl
das
cmp
mov
cmp
outsl
dec
adc
test
psadbw
insb
cmpsl
cmp
popa
mov
out
mov
outsb
ds
pop
mov
outsl
mov
mov
es
push
lahf
ljmp
into
cmp
xor
mov
pop
xorb
xchg
push
adc
cmp
dec
mov
mov
outsb
int
or
push
clc
mov
fildll
pop
lcall
inc
out
sbb
and
addr16
arpl
ficompl
add
clc
fimull
and
stc
pusha
and
sub
or
ja
or
lds
lds
xor
xchg
scas
cmp
mov
xchg
ror
xor
into
popa
inc
jo
bound
fldl
repnz
fldt
fdivrs
sub
aam
cmp
nop
mov
je
lahf
fbstp
jmp
es
xlat
out
shlb
dec
lea
int3
mov
insl
adc
jno
adc
mov
or
scas
imul
lret
push
or
pop
outsb
or
cs
sahf
jbe
rcrl
jmp
xchg
sbb
jg
imul
pop
pop
lret
int3
and
jmp
sub
loop
rclb
or
shrb
jnp
movsb
rol
test
xchg
hlt
inc
jno
or
jp
aam
mov
testb
sbb
nop
mov
fs
in
pusha
cmp
pop
sbb
and
lods
inc
shlb
in
xchg
hlt
jg
xchg
add
inc
mov
pop
pop
cli
int3
or
mulb
mov
xor
sub
xchg
mov
inc
jb
xor
test
lock
mov
enter
scas
mov
and
lods
cwtl
pop
jb
shrl
lock
mov
mov
out
jecxz
fildl
jae
lret
outsb
call
mov
in
sub
je
sub
jns
out
and
out
xor
int3
xor
cmpsb
andl
in
sbb
xor
in
pop
insb
and
lock
xor
enterw
mov
and
mov
cmp
aam
xor
sbb
mov
dec
jl
jp
add
jp
mov
addb
jmp
mov
adc
and
cwtl
lret
jno
pop
dec
test
dec
push
stos
xchg
push
add
inc
jmp
fnstenv
jmp
inc
fbstp
ret
jns
inc
add
push
aam
inc
andb
pushf
hlt
out
jl
pushf
fstps
sub
and
inc
sub
aaa
push
shrl
lea
sub
loope
pop
adc
js
jmp
loop
mov
sub
mov
xchg
add
jo
std
adc
cmpsl
ljmp
xor
jo
push
lahf
shll
push
popf
sti
push
push
mov
rorl
xor
add
cld
cmp
dec
mov
inc
add
test
cld
pavgb
sbb
add
repnz
push
sti
insb
sbb
adc
and
pop
inc
adc
inc
test
scas
dec
mov
mov
or
xor
inc
xor
jmp
ljmp
push
dec
gs
lret
mov
pop
pop
lret
jno
in
icebp
or
andl
data16
mov
test
mulb
adc
popf
mov
dec
cmp
mov
mov
xchg
cwtl
loopne
inc
sbb
jns
enter
fs
loopne
scas
mov
xor
cmp
mov
push
xor
jns
jno
lods
sub
imul
xor
bound
sub
dec
add
lea
xchg
sub
in
scas
pusha
in
push
insb
push
rcll
call
test
sbb
negb
ss
add
stos
mov
jbe
push
push
sub
jnp
inc
mov
mov
hlt
ret
lahf
data16
push
jmp
pop
mov
sub
add
xor
push
cmp
pop
or
jo
enter
xor
adc
je
testb
incb
loope
or
frstor
sub
test
mov
outsl
mov
mov
sub
shlb
mov
jno
add
pop
and
inc
into
je
dec
cmp
pop
inc
dec
mov
adc
mov
or
fsub
add
stos
test
cmp
dec
fmuls
in
push
lcall
lds
cmp
es
icebp
bound
mov
gs
nop
sti
add
out
mov
nop
lahf
test
lods
adc
pusha
mov
outsl
mov
jmp
mov
mov
jg
xchg
test
cmc
pop
xor
mov
fbld
aas
pop
jmp
mov
or
mov
lret
and
call
loope
enter
push
lcall
cmpsb
cli
or
cwtl
mov
push
notb
dec
aad
xor
leave
add
push
gs
or
add
sub
adc
mov
mov
sub
in
data16
jl
scas
icebp
pushf
and
mov
jns
add
push
jbe
mov
xor
bound
ss
hlt
aad
adc
and
movsl
nop
jp
xor
sar
mov
jns
inc
mov
or
cmp
xchg
xchg
sbb
or
iret
fwait
scas
lods
push
push
pop
jb
iret
es
mov
xor
xor
scas
out
lcall
jb
or
mov
xchg
mov
xchg
cwtl
adc
into
scas
cmp
mov
insb
movsb
or
mov
or
pop
movsb
pop
in
jge
into
xorb
decb
sbb
push
sub
xor
and
sbb
cltd
mov
mov
outsl
or
and
aaa
mov
stos
je
mov
inc
cmp
mov
aad
mov
inc
xchg
pusha
sbb
add
int3
cltd
in
pop
lock
cmp
dec
cmp
pop
dec
in
adc
scas
pop
ret
push
mov
push
adc
idivl
adc
dec
ljmp
cltd
rcrb
jo
dec
pop
std
xor
movsl
pop
sub
andl
in
lret
cltd
sub
data16
xchg
dec
xchg
inc
fsubl
inc
and
push
dec
inc
add
xchg
je
mov
js
or
push
pop
hlt
ret
popf
jge
call
push
adc
adc
push
in
lahf
mov
xchg
stos
push
mov
mov
pop
shr
scas
cmpsl
lods
mov
inc
fisubrs
and
fs
xor
lock
in
and
ret
fisubl
push
dec
pop
inc
inc
cltd
cmc
push
lds
outsl
movsb
adc
cmp
in
add
cltd
mov
iret
dec
stc
out
adc
mov
jo
pop
xor
fildll
sub
stos
inc
addr16
lock
faddl
fdivl
lret
popf
push
cmp
jno
mov
es
and
imul
mov
push
rep
addr16
jge
lcall
lret
mov
dec
test
loop
cmpsb
xor
jns
push
sub
mov
push
and
test
insl
xor
inc
mov
inc
or
or
sbb
cmpsl
out
orl
sti
in
repz
mov
dec
ds
lret
mov
js
dec
in
daa
jo
fldl
cli
push
insb
enter
and
cmp
and
push
into
mov
aaa
int
outsb
add
es
mov
pop
sub
out
add
cs
fisubs
xor
pop
test
xor
aam
or
movsl
sbb
jle
pop
cmp
mov
xorb
or
out
sub
movsb
rol
ret
cmc
xor
and
loop
adc
sub
xor
xchg
fistps
jo
pop
dec
jecxz
pusha
pop
mov
mov
les
cmp
mov
clc
inc
lods
inc
arpl
xchg
aam
and
jmp
push
cmpsb
mov
cmpsl
test
outsl
loop
xorb
mov
adcb
push
jmp
pop
adc
mov
mov
and
lods
stos
adc
lea
out
mov
sti
loopne
mov
pop
pushf
xchg
mov
test
out
jge
add
sub
decb
jg
mov
rep
jmp
in
fimull
pop
jno
and
fwait
push
push
jg
in
pop
addr16
stos
cmp
pusha
lea
mov
mov
xor
out
mov
popa
xchg
flds
fisubrl
test
and
ficomps
push
mov
sarl
add
int
in
ljmp
cltd
mov
cmp
cmpb
adc
mov
jno
and
xor
cli
jno
cli
and
subl
adc
cltd
jmp
in
dec
jo
and
dec
out
lds
test
fwait
in
imull
mov
add
sahf
pop
xor
sbb
jg
lret
mov
mov
mov
pop
xor
stos
sbb
aam
pusha
mov
lods
addr16
mov
lahf
mov
sbbb
mov
rol
bswap
xchg
jge
pop
mov
push
and
pop
xchg
inc
lods
or
mov
sub
jge
mov
push
sbb
push
loop
or
or
lods
iret
cmp
fadd
packsswb
adc
fs
push
adc
je
sbb
gs
leave
mov
cmp
xor
and
hlt
add
add
ret
gs
pushf
decb
aaa
cmp
jge
xorl
mov
pop
orb
pop
mov
mov
sbb
xchg
daa
iret
test
add
into
int3
mov
adc
fistpll
cmp
or
ds
push
jmp
adc
push
xor
adc
fistps
add
inc
xor
cmpsl
jecxz
mov
mov
fsubl
inc
inc
lea
cwtd
jg
pop
hlt
xchg
xor
stc
adc
jle
int3
cli
lahf
aad
cmp
insl
out
lcall
xchg
jmp
imul
push
mov
and
mov
test
dec
pop
pop
iret
xor
rorl
cltd
pop
mov
sbb
adc
pop
mov
rcr
mov
testb
call
cwtl
jns
xchg
mov
int
in
xchg
mov
or
fisubl
or
daa
cmpsb
sub
jecxz
cmpsl
mov
loope
leave
push
adc
inc
stos
pop
adc
jp
sub
dec
push
adc
mov
popa
push
and
xchg
xor
push
inc
rclb
or
mov
xor
in
bound
push
push
sahf
ljmp
jno
sbb
push
das
mov
xor
jle
xor
sbb
jae
pop
adc
ret
imul
dec
data16
stos
cli
mov
lret
pop
add
cmp
push
lods
and
pop
and
mov
fisubrl
popa
pop
push
repnz
das
sbb
int
and
jle
jle
push
in
push
sub
jnp
negl
add
sub
ja
repnz
stos
not
add
into
xlat
mov
cmpb
cmp
neg
fcoms
mov
mov
fldenv
xor
jae
pop
mov
cs
test
mov
mov
lock
into
push
aas
sbb
fucomip
jne
pop
cwtl
mov
jg
sub
aaa
mov
push
lret
out
jb
cmp
lock
cmp
xor
fs
loope
outsb
xchg
leave
lds
xchg
je
sub
fstpt
test
jne
sbb
je
andb
xchg
xor
jno
push
cs
and
ss
dec
push
and
add
int
push
inc
xchg
push
mov
adcl
dec
cmp
jnp
stos
dec
jno
jmp
scas
lods
sahf
xor
pop
lods
xor
lret
fistps
loopne
dec
cltd
pop
sub
adc
sub
jle
in
sub
xor
out
mov
inc
testl
je
aad
pushf
xchg
scas
lret
inc
aad
dec
cli
out
outsb
stos
mov
ret
sarb
or
pop
xlat
xor
mov
call
and
outsb
mov
pushf
aam
push
cmp
mulb
xchg
mov
stos
adc
jg
push
push
adc
pop
pop
cmpsw
lret
ds
adc
push
data16
insb
jo
arpl
dec
jae
jmp
add
jns
clc
adc
cmpl
lret
inc
jns
repz
dec
mov
push
mov
in
jnp
lea
cmpsl
in
lea
pop
xchg
xorl
sub
aam
mov
pop
stos
jle
adc
xchg
loope
fwait
push
push
jnp
push
jp
std
mov
mov
repnz
aaa
xchg
arpl
mov
lods
sub
xor
aad
ret
adc
mov
mov
prefetch
mov
xor
out
cli
add
jecxz
adc
shr
jo
popf
dec
pop
cmp
not
push
xor
test
les
xor
fimuls
sti
cmp
je
mov
mov
xchg
xchg
sbb
nop
xlat
inc
jb
lret
sub
push
mov
or
sbb
aaa
xor
outsl
das
daa
sbb
scas
cld
mov
stc
hlt
je
pop
push
out
cmpsl
fcoms
sahf
stc
dec
paddd
sbbb
aad
pop
fnstsw
mov
xor
pop
mov
push
mov
ds
roll
mov
das
fwait
pop
aaa
xchg
sbb
cmp
mov
mov
adc
push
and
cltd
dec
scas
xor
rclb
scas
pop
call
push
ljmp
popa
mov
test
push
cmpsl
add
sub
or
sti
mov
out
dec
lock
push
test
pusha
orl
loope
jp
push
test
dec
inc
repnz
sub
mov
out
stos
pop
dec
push
std
inc
rcr
jmp
lods
insl
xchg
sahf
cmp
or
and
jne
adc
in
pusha
push
dec
adc
stc
enter
sbb
movsl
imulb
sub
aad
pop
push
cmpl
out
stos
inc
mov
rorb
pop
add
push
aaa
repz
and
dec
insl
lods
mov
sti
test
lods
cmpsl
mov
pop
pop
xchg
sub
jne
pop
xchg
in
pop
adc
inc
sbb
sbb
enter
leave
add
movsb
out
pop
jge
lcall
jle
fwait
push
in
xchg
cmpl
imul
adc
js
adc
push
into
jp
aad
loopne
enter
jbe
cmp
lea
adc
mov
ljmp
mov
jns
iret
xor
cmp
fnstenv
xor
cmp
pusha
cmp
roll
sub
cld
sub
out
mov
mov
fmuls
test
or
gs
fldl
pop
test
repnz
fwait
mov
push
in
push
shrl
imul
imulb
mov
loope
scas
fwait
cltd
hlt
aaa
por
xor
push
pop
fwait
jge
xchg
cmpsl
mov
divl
xchg
mov
mov
xchg
bound
xor
jmp
loopne
cs
xchg
fldenv
xchg
int
jne
movsl
pop
xor
test
aad
outsb
negb
jmp
adc
aas
ja
and
jge
lock
push
out
inc
call
sarl
mov
pop
cld
roll
pop
and
pop
mov
add
je
stos
mov
and
movsb
test
xchg
dec
dec
xorb
cwtl
lock
pop
push
shl
out
sub
decl
into
ds
add
fimuls
popa
lds
daa
gs
push
sub
push
cwtl
push
sbb
or
fucomi
fwait
mov
fcomps
ror
and
jecxz
pop
std
add
sub
dec
data16
sbb
mov
aad
jg
notb
repz
insl
jp
jae
mov
inc
add
sbb
arpl
cmp
shrb
jecxz
and
cwtl
aam
enter
and
test
or
jecxz
pop
or
xor
lock
xor
ret
xor
frstor
xor
cmpl
push
sbb
xchg
js
jge
or
sbb
xchg
into
jle
pop
mov
out
add
cwtl
pop
ds
xchg
and
lock
enter
pop
outsb
adc
negb
or
rorb
les
inc
sti
loop
cmp
sbb
das
sbb
jmp
push
scas
repnz
xchg
rorl
push
in
int
ljmp
lret
mov
imul
rcl
push
jbe
test
loop
sbb
dec
pop
mul
pop
dec
and
lcall
add
dec
inc
cmc
or
aad
xlat
inc
dec
daa
mov
repz
mov
bound
fidivrl
push
insl
repz
jae
inc
mov
xor
mov
es
mov
ljmp
mov
add
cmc
pop
inc
jne
mov
iret
adc
mov
mov
and
sti
dec
pop
out
xor
lahf
lods
jns
cwtl
dec
pop
push
inc
mov
adc
ds
gs
jnp
cmpsl
mov
jo
xor
dec
int3
repnz
test
adc
or
pop
ljmp
lock
dec
dec
or
dec
mov
cmpsb
ss
jmp
subb
dec
and
pop
outsl
pop
push
xor
sbb
and
pop
and
scas
in
call
nop
xor
jo
adc
lcall
jb
lahf
mov
sub
adc
sub
rcrl
insb
sbb
mov
xchg
js
outsl
dec
inc
pop
cltd
data16
xor
adc
jns
mov
jmp
mov
test
mov
scas
xor
imul
add
xor
cmp
and
jp
and
enter
aaa
lret
leave
imul
add
jp
jo
xchg
out
add
sbb
sbb
loopne
adc
jbe
pushf
iret
jae
pop
ja
mov
lock
sub
adc
insb
cwtl
in
push
cmp
mov
cli
outsb
mov
pop
jle
addr16
push
mov
mov
in
out
pop
cmp
shrl
pop
jge
mov
fistpll
inc
xchg
or
adc
jns
addr16
into
sub
addb
jecxz
add
es
aas
test
add
jp
ljmp
jmp
or
add
and
jmp
dec
jge
dec
or
dec
test
inc
mov
cmp
dec
movsb
mov
inc
insl
stos
out
cmpl
xor
jae
sbb
jge
push
test
les
aas
mov
sbb
ljmp
shl
repnz
sbb
jle
outsb
mov
jge
icebp
pusha
inc
int
xor
mov
into
mov
inc
sbb
mov
and
aaa
imul
es
mov
test
cmp
ss
mov
int3
cltd
mov
aas
mov
in
push
inc
sbb
xchg
out
adc
or
and
test
mov
push
dec
les
dec
mov
jl
pop
pusha
test
jns
push
mov
and
daa
loop
pop
outsl
test
je
xlat
test
cmp
jnp
adc
pop
ss
cmp
mov
das
or
mov
cmpsl
add
jmp
test
push
mov
push
mov
loopne
mov
jge
insb
bound
adc
mov
das
inc
loope
loop
mov
addb
jae
jno
imul
out
fcoml
cmpsb
arpl
aad
rcrl
in
repz
arpl
xchg
lea
sti
or
mov
aas
mov
ret
cmp
mov
and
loop
cmp
outsl
pop
inc
rcrl
icebp
js
je
addr16
xchg
mov
mov
inc
push
jo
pop
pop
mov
fndisi(8087
insb
in
pop
fcompl
xor
lods
lret
push
xor
jae
push
and
push
jl
stc
push
out
add
sbb
hlt
roll
mov
inc
cmp
dec
aad
sbb
sub
push
xchg
mov
pop
cltd
jmp
jl
aas
and
pushf
int
test
std
ds
stc
pop
xchg
into
cmp
jg
rclb
xor
push
pop
sub
loopne
cmpsl
dec
and
les
out
dec
xlat
lret
ljmp
mov
cmp
test
fwait
sbb
sahf
cmp
popf
out
jnp
fucomp
or
mov
je
xor
xchg
pop
stos
subb
fwait
jg
out
fdivs
inc
inc
dec
dec
stc
mov
sub
push
std
cmp
aam
ffreep
enter
daa
test
dec
jge
mov
gs
cmpsb
jg
xchg
out
sbb
cmp
or
movsl
test
mov
daa
add
fwait
out
imul
js
dec
pop
or
mov
lea
into
stos
mov
sahf
dec
std
repz
inc
out
jno
lods
ja
sub
sar
test
dec
ss
xchg
mov
xchg
dec
ds
add
aam
push
adc
mov
das
mov
fisttps
and
loop
enter
test
dec
and
xor
adc
mull
jns
mov
sub
mov
repnz
xchg
jbe
jg
mov
mov
mov
push
pop
mov
stc
stos
scas
imul
sub
mov
imul
fiaddl
fisttps
mov
adc
cwtl
daa
mov
pop
mov
cli
movsb
push
call
fistps
dec
jne
jnp
jb
and
stc
pop
mov
and
pop
rorb
and
es
mov
jle
push
xlat
pop
push
mov
and
ds
jmp
sub
pop
lahf
pop
or
xor
fwait
or
stos
repnz
xchg
lcall
sub
lcall
jmp
mov
cli
scas
sbb
adc
or
adc
inc
and
cmp
mov
lcall
mov
fimuls
cmp
jae
enter
pop
jns
pop
mov
movsb
inc
dec
cmp
es
popf
add
daa
mov
add
mov
cmp
xor
popa
dec
sub
into
sub
insl
lahf
push
dec
test
mov
xor
je
popa
or
repnz
call
xlat
jbe
hlt
inc
nop
dec
cld
adc
cltd
jno
fdivrp
xchg
or
adc
sub
cmp
lods
lahf
lahf
stos
testb
adc
ret
inc
imul
mov
outsl
fldl
mov
dec
jg
call
push
fucomi
addr16
xchg
mov
iret
add
mov
flds
lea
pop
xor
dec
leave
push
mov
fimuls
test
pushl
adc
lea
stc
xor
arpl
test
mov
adc
stos
mov
xlat
sbb
fimull
cli
rolb
lods
dec
pusha
dec
inc
xchg
mov
fsts
push
jecxz
jg
sbb
or
xor
xor
add
adc
push
adc
cmpsb
pop
push
popf
outsb
mov
mulb
push
fiaddl
scas
adc
sub
pop
sub
mov
pop
shlb
push
ror
xchg
repnz
cmp
cmpsb
lret
xchg
xchg
cmp
and
push
int
jle
dec
jbe
jecxz
xor
inc
ss
adc
mov
fistps
jns
shll
mov
lea
mov
cmp
mov
shl
repz
mov
adc
cmp
adc
aas
test
fistps
out
dec
clc
addr16
sub
sbb
or
scas
mov
and
les
mov
xchg
call
or
sub
fs
mov
ret
inc
push
xor
int
cmp
sahf
xchg
lea
cmp
repz
sbb
loop
mov
mov
enter
lods
push
push
fldenv
out
lock
popa
sub
xor
fcmovb
mov
fs
lods
fmuls
popa
int
sbb
test
mov
push
ret
mov
mov
pop
fdivr
movsl
jmp
mov
lds
imul
cld
pushf
dec
adc
hlt
cmpsb
jo
into
sarb
aas
sarb
cmp
mov
daa
mov
cs
cmp
das
cli
movsb
popl
mov
dec
ja
cmpl
xchg
cmp
jecxz
loopne
cs
popa
sub
dec
test
mov
sub
mov
pop
lcall
adc
mov
cmp
cld
loop
cmpsb
sub
jbe
sub
cmp
xor
pushf
sub
or
push
popf
xor
scas
inc
test
mov
xlat
lahf
xchg
xor
add
clc
push
lods
pusha
add
add
pop
aas
repnz
int
adc
ret
push
inc
int3
push
pop
clc
and
cmc
mov
mov
nop
insl
push
int3
test
jg
inc
fwait
lahf
lods
lahf
insb
fdivl
push
push
out
jmp
bound
dec
dec
ficompl
call
fstps
out
xor
xchg
mov
subl
jmp
mov
mov
mov
fucom
sbb
sbb
and
imul
inc
or
xor
insl
pop
push
rol
cmp
xor
idivb
loopne
insb
jle
dec
push
in
sti
in
add
sub
jge
jmp
cmp
or
and
jp
rol
jge
sub
adc
out
adc
mov
js
pop
loope
cltd
add
imul
fimull
mov
dec
adc
test
mov
jp
cmp
pushl
aam
into
imul
fs
incl
scas
gs
push
aas
lret
data16
rolb
insb
xchg
or
iret
xchg
repz
les
lcall
cwtl
es
inc
pop
jo
sbb
cmp
clc
mov
lods
daa
cmp
jp
jb
mov
jbe
push
inc
pop
ret
push
sar
sbb
fwait
mov
mov
je
pop
pop
xor
or
lds
ljmp
pop
test
sub
scas
pushf
sub
in
lds
inc
xor
aas
cmp
shlb
mov
or
push
mov
mov
mov
sarb
int3
fisubrs
jecxz
sbb
lea
iret
std
pop
push
push
in
or
xor
mov
in
and
cli
sbb
or
fcmovnb
push
push
orb
mov
mov
xor
push
pop
jl
jne
stos
jnp
dec
mov
pop
cmp
or
clc
mov
movsl
adc
push
push
cmp
popa
mov
ljmp
ja
and
add
jns
inc
int3
or
fwait
jmp
test
mov
mov
adc
stos
andb
sbb
xor
or
xlat
jbe
or
lcall
adc
aaa
mov
jl
outsb
xor
mov
je
adc
add
loopne
push
pop
adc
pop
pop
add
ret
imul
xchg
pop
in
out
pop
neg
dec
or
mov
dec
dec
jns
sub
das
cmpl
mov
fsubrl
js
inc
cmp
adcl
mov
cld
mov
and
adc
jnp
out
and
outsb
xchg
jg,pn
mov
loope
jne
mov
mov
pusha
jle
xor
popf
add
subb
mov
cs
lret
and
outsl
aam
test
pop
mov
dec
sbb
dec
daa
and
inc
inc
or
shlb
stc
in
imul
jle
call
mov
icebp
or
or
mov
fs
out
test
scas
jnp
cli
sbb
xchg
jo
xor
inc
mov
sub
mov
adc
mov
adc
jns
inc
xor
dec
pop
dec
add
mov
int
jnp
sbb
mov
pop
daa
mov
rol
adc
cmc
push
lcall
push
es
cmpsb
and
xchg
jb
movsb
sbb
mov
jnp
sub
and
shrl
enter
mov
add
and
shr
popa
pop
add
pop
push
xchg
mov
pop
scas
add
pop
sti
and
jp
aad
cwtl
jo
lret
push
adc
mov
aaa
pop
imul
lds
into
mov
xchg
iret
pop
js
sbb
in
and
mov
and
mov
movsl
out
gs
cmpsb
jns
iret
or
lock
dec
icebp
scas
out
mov
adc
and
fldenv
pop
loopne
pushf
xchg
fbld
loop
test
data16
lods
icebp
push
jo
adc
inc
cmpsb
pusha
cltd
in
movsb
mov
pop
mov
or
pushf
shll
dec
mov
int
addr16
rorl
rorl
xor
hlt
jp
fs
mov
mov
push
sbb
adc
out
jb
sub
jbe
xchg
test
lcall
mov
mov
mov
push
xlat
rol
fucomp
js
popf
push
lret
xchg
push
mov
xchg
jmp
test
xchg
lods
outsl
cmp
ljmp
mov
into
mov
and
mov
push
das
enter
cmpsb
clc
lahf
xor
cmp
fimull
repnz
jnp
shlb
sbb
lods
hlt
mov
jns
dec
mov
mov
stos
lcall
pop
inc
mov
mov
cmpsl
sbb
mov
pusha
jg
outsl
sub
movsl
lret
push
and
cmpsb
aaa
or
sub
mov
sbb
fwait
mov
das
and
push
dec
pusha
insl
insb
out
push
pop
arpl
js
cmp
in
sbb
push
ret
cwtl
and
sub
sbb
fiaddl
pushf
mov
int
adc
sbb
nop
mov
mov
pop
mov
mov
in
ret
pop
ficomps
cld
pop
mov
fildl
xchg
fcomi
sahf
mov
mov
insb
int
ret
inc
ret
push
dec
cmp
push
ret
insb
pop
ja
testb
outsb
call
sarb
imul
jp
ficompl
and
rclb
cmp
pop
outsb
fisubs
xchg
adc
and
outsb
dec
mov
popa
inc
rol
jb
mov
mov
cmp
repz
out
adc
insb
and
adc
out
cmp
je
and
stos
fnstcw
insl
push
daa
push
cmpsb
rolb
mov
jo
mov
adc
inc
call
addr16
push
addr16
adc
sbb
aad
cld
xchg
aaa
cmp
push
in
push
xor
or
sbb
test
xor
adc
cmp
jg
add
je
add
or
and
call
popa
repnz
and
mov
cmpsl
adc
mov
mov
imulb
in
or
or
loopne
imul
dec
mov
mov
jb
loopne
ljmp
xchg
insl
imul
ljmp
insl
dec
xor
push
pop
dec
ss
in
loopne
lods
mov
arpl
lods
jnp
push
pop
or
insb
icebp
das
sbb
ljmp
cvttps2pi
imul
dec
mov
shrb
sub
xchg
xlat
mov
lret
or
and
xor
dec
pop
fstl
mov
mov
sub
jl
push
push
dec
rolb
add
ret
mov
jnp
aad
pop
popf
dec
inc
shr
mov
pop
push
mov
add
loopne
mov
and
stc
lret
movsl
or
pop
mov
in
call
add
xchg
mov
imul
jno
inc
mov
bound
mov
scas
addr16
gs
aad
imul
jns
cmp
inc
outsl
stc
mov
das
mov
inc
jmp
cs
aas
lock
fsubr
lods
outsl
leave
sub
mov
jns
cwtl
xor
test
jo
outsb
icebp
sarb
pop
test
in
and
loope
insl
mov
in
mov
sar
push
shll
rorb
or
stos
aam
js
cwtl
popa
data16
or
mov
push
pop
jae
outsb
arpl
push
mov
add
mulb
ljmp
jmp
cmp
aam
pop
inc
pop
cmp
inc
cmc
ficomps
inc
stc
dec
out
inc
push
xor
pusha
xor
cmp
jle
add
xchg
mov
ja
inc
test
sbb
dec
cli
mov
mov
push
out
insb
dec
lahf
or
repnz
xor
out
xchg
mov
in
repnz
cmp
adcb
sbb
outsl
ret
mov
stos
pop
jmp
sub
dec
mov
mov
or
pop
and
test
aaa
mov
into
lret
add
cmp
test
pop
mov
fwait
or
pushf
mov
sahf
rorl
fstl
cli
nop
sub
push
ss
orb
sub
dec
movsbl
adc
xorl
and
and
push
notl
pop
mov
sbb
add
xchg
inc
loopne
sub
jno
lahf
bound
cmp
in
dec
lds
cmp
icebp
xchg
ds
loope
ljmp
inc
sub
ret
and
inc
and
inc
inc
pop
fsubp
push
gs
dec
xchg
dec
scas
insb
fwait
mov
lods
sbb
psubw
outsb
jp
cmp
cmpb
jne
pop
sahf
mov
jmp
cwtl
je
xor
movsb
inc
adc
into
mov
push
add
jecxz
mov
mov
pop
cmovg
mov
xchg
aam
adc
notl
mov
and
push
pop
xchg
xor
xlat
mov
jge
shlb
fiadds
pop
cmp
cmp
call
out
lods
cmp
or
cmpsl
insb
sub
mov
inc
inc
mov
push
mov
push
push
int
mov
mov
mov
into
shll
mov
mov
mov
fcoms
xchg
pop
or
sub
aad
subl
jae
or
test
addr16
pop
cmp
inc
jg
push
mov
rolb
insb
mov
test
adc
xchg
xchg
xor
dec
sbb
dec
dec
mov
xor
jmp
leave
pop
dec
cs
mov
cmpsb
mov
lock
into
popa
test
btrl
sarl
shl
mov
jae
in
mov
sbb
cld
jecxz
sub
btsl
dec
sub
mov
cld
add
bound
dec
in
mov
imull
adc
in
sti
push
push
xor
cmc
jb
scas
and
inc
adc
cld
ret
lea
cwtl
out
iret
lret
push
push
movups
xchg
lods
cwtl
incl
pusha
adc
jmp
repnz
popf
jno
test
out
out
pop
addb
or
test
les
iret
pop
mov
mov
sub
pop
cmp
xor
cs
repnz
lods
xchg
jno
out
loop
rcll
or
sbb
cli
cli
inc
inc
les
lcall
loope
iret
push
int
mov
mov
pop
sbb
dec
xchg
arpl
mov
cmp
insb
fimuls
das
adc
mov
je
fistl
stos
mov
das
sti
in
xchg
subl
sub
out
sar
je
mov
ja
mov
lcall
into
xor
push
jl
testb
inc
push
pop
push
add
arpl
ror
fmuls
out
cltd
rcl
je
and
jnp
xlat
enter
cli
mov
lret
pminub
rcll
hlt
imul
mov
jbe
imul
loopne
inc
insl
push
sar
sbb
pop
repz
lcall
fidivrl
lea
xor
mov
or
vucomisd
cmpsl
in
pop
mov
rcrb
pop
in
jmp
mov
adc
cmp
or
push
pop
cmp
dec
movw
jbe
add
jp
insb
jb
mov
test
jmp
sub
cwtl
jne
or
shlb
sbb
mov
fsts
jge
icebp
arpl
sbb
xchg
and
push
mov
dec
sub
out
jbe
mov
pop
test
and
pop
loope
jge
cmpsb
scas
ja
adc
or
sub
bound
fildll
stc
out
push
jecxz
cld
addb
leave
jp
pushf
pusha
cmp
mov
xor
sub
lods
sub
lcall
aas
fsubrs
or
enter
and
jae
in
rcrl
lods
in
sbb
mov
aas
ds
andb
adc
rolb
rcrb
cmp
mov
add
repz
sbb
jno
push
imul
push
dec
jmp
xor
mov
dec
pop
mov
xor
testb
pop
pop
xchg
pusha
cmp
inc
insl
clc
mov
lret
pop
add
incb
mov
out
push
ja
push
in
notl
or
jp
call
negb
stos
push
mov
pop
in
enter
and
add
and
cmp
out
sbb
inc
int
outsl
loop
lea
int3
lock
clc
pop
data16
imul
sbb
outsb
mov
fildl
outsl
cmp
and
mov
lcall
push
outsb
sbb
hlt
push
filds
ret
frstor
mov
pushf
scas
push
jnp
jno
jnp
imul
jns
outsl
cwtl
je
jnp
in
sbb
pushf
xchg
jb
popl
jp
fidivs
xlat
cmp
or
les
cmp
mov
cmp
out
sub
xchg
jle
pop
sbbb
lahf
lock
clc
xor
push
push
adc
adc
decl
sub
inc
mov
shlb
out
inc
push
push
and
dec
mov
stc
sbb
mov
xchg
xor
arpl
les
mov
add
ja
scas
or
sbb
fstps
daa
filds
cli
xchg
push
dec
addr16
mov
pop
pop
jle
inc
repz
popl
aas
jp
sar
jne
jg
sub
fwait
pushf
pop
xchg
les
mov
hlt
xor
mov
lea
nop
imul
fisubl
stc
imul
imul
mov
dec
call
mov
mov
jmp
rcl
mov
pop
ret
mov
sub
cmpb
push
cmp
jo
cmpb
push
mov
hlt
aad
dec
lcall
pop
push
out
and
cmpsb
int3
add
add
dec
fmull
and
or
mov
aaa
jns
ds
aam
int3
std
divb
scas
mov
xor
xor
mov
mov
out
out
dec
xchg
pop
jo
dec
mov
dec
aad
hlt
cmp
mov
or
push
adc
mov
cmp
mov
jb
and
popf
je
xchg
push
add
lret
jbe
mov
lret
dec
jg
mov
mov
lds
cmc
jnp
adc
stc
stos
sbb
cmp
dec
push
insb
loop
dec
jmp
mov
or
test
sub
xor
enter
adc
mov
ret
xor
pop
iret
pop
shlb
push
pop
sub
push
mov
mov
mov
in
rcll
out
jo
arpl
jp
xchg
sbb
or
arpl
ds
jle
mov
jmp
insb
test
mov
test
push
pop
xor
inc
jo
cmp
mov
data16
fadds
lods
scas
xchg
shll
icebp
or
mov
xlat
in
aad
mov
mov
popf
ret
jne
cli
xchg
inc
inc
xlat
popa
push
ficoml
xor
or
fsubrs
pop
mov
add
pop
xor
and
pop
arpl
nop
push
out
push
fadds
sbb
ljmp
sub
push
data16
or
jecxz
pop
out
in
mov
pop
dec
and
jb
fisttps
mov
inc
jle
hlt
sub
cltd
ljmp
jmp
xchg
and
sarb
mov
outsl
insb
xor
es
fcomps
test
pop
outsl
cmpsb
cmp
sub
sub
ret
jg
xor
scas
cmp
inc
fistps
out
popa
xchg
mov
ficomps
and
xor
fdivs
fwait
ja
jmp
mov
mov
outsl
or
imul
icebp
and
jns
pop
je
sub
sub
movsb
inc
xlat
xor
arpl
loop
aaa
push
ljmp
shrb
test
adc
add
loope
js
cmp
inc
add
add
loopne
pop
fstpl
iret
xor
xor
cltd
push
stos
mov
mov
or
push
xchg
push
sub
leave
pop
test
inc
iret
push
mov
adcb
sarb
jno
or
cmp
or
call
mov
add
mov
scas
cmpb
xor
mov
pop
icebp
aaa
movsl
ror
fs
lods
adc
push
mov
sbb
inc
sahf
out
lret
inc
test
pop
cmp
leave
push
ds
mov
or
ljmp
pop
repnz
jo,pt
cmpsl
cmp
shrb
inc
lahf
sub
fstpl
leave
xor
divb
or
mov
fs
jecxz
cmp
sti
into
insb
iret
sbb
sahf
inc
loope
mov
loope
xor
fistps
xchg
inc
outsb
iret
loopne
pop
and
pop
jmp
sbb
inc
mov
int3
mov
push
inc
shll
int
outsl
fidivrs
xor
repnz
sub
jo
cmpsb
dec
sbb
das
sub
ficoms
mov
icebp
ja
cmovge
jo
and
sbb
mov
cmc
incl
xor
xchg
ret
ret
jecxz
xlat
mov
inc
sub
adc
loop
inc
out
push
ret
stos
mov
leave
xor
push
xchg
or
frstor
pop
leave
push
add
mov
cmc
add
nop
lret
sbb
imul
inc
cwtl
mov
addr16
leave
lods
aas
cli
and
cmp
jae
mov
inc
sub
sbb
sti
sub
lods
pop
jle
dec
dec
aad
jb
or
pop
iret
adc
test
ljmp
js
pop
xor
add
movsb
sbb
push
and
leave
fimull
addl
sahf
push
xchg
jne
fcom
std
pop
je
push
sub
jb
loope
pop
xor
adc
lret
divl
dec
and
movsb
mov
dec
cs
adc
push
dec
sub
sub
xchg
rcll
dec
jns
sarb
sbb
call
xchg
add
xchg
add
ucomiss
mov
outsb
jecxz
push
insb
pop
mov
and
sub
or
rcrb
repz
mov
push
push
and
push
inc
dec
aad
test
sub
jp
push
inc
je
or
fmuls
ficoms
je
dec
icebp
jecxz
lds
adc
dec
in
lds
sahf
dec
jnp
in
stos
loop
cmp
int3
sbbl
fimull
sub
xchg
mov
push
loop
mov
incl
cmp
aas
in
or
jae
int
add
sbb
nop
push
or
jnp
data16
cmpsw
mov
stc
mov
cmc
sub
xchg
add
arpl
les
or
mov
imul
mov
dec
out
fs
jl
xchg
sub
xor
mov
outsl
sbb
sub
xchg
and
out
icebp
call
aad
fdivl
dec
push
lcall
jge
mov
pusha
fisttpl
test
mov
insl
mov
testb
mov
fsts
mov
ret
jae
cmpsl
mov
or
aad
xchg
mov
or
inc
cwtl
test
aad
dec
hlt
sub
das
addr16
and
lahf
add
add
jl
arpl
mov
hlt
pop
mov
insl
mov
xchg
pop
cmp
push
adc
mov
push
je
dec
xor
aam
lods
fcmovnb
mov
out
jnp
rclb
imul
add
jle
or
stc
pop
add
mov
sub
jo
pop
ret
fldcw
mov
adc
psubw
inc
and
lret
jmp
adc
cltd
sbb
divb
pop
and
insb
add
sbb
or
pop
mov
stos
or
loopne
xor
iret
daa
mov
inc
movsl
inc
push
push
xchg
sub
fdivs
mov
mov
stc
aad
lret
mov
adc
mov
inc
fcoms
sub
xor
mov
fsubrl
cmp
subb
aad
jnp
add
aaa
push
in
cmp
sbbb
jo
mov
add
je
sti
mov
sbb
push
pop
pusha
sbb
test
fdivs
arpl
aad
push
call
cmpsb
movsb
adc
mov
ja
hlt
push
mov
or
gs
and
div
aad
inc
dec
enter
inc
xor
pop
in
sbb
inc
mov
and
aad
call
stos
push
pop
icebp
imul
rorb
ret
jg
out
outsl
mov
sbb
out
repnz
jne
cmp
lock
push
add
cmp
pop
in
push
xchg
loop
add
lcall
cld
and
sbb
adc
mov
ja
jg
adc
je
jp
add
jle
rcrb
insl
xchg
pop
mov
xor
cltd
sub
adc
add
push
call
or
leave
mov
jnp
shrb
test
shll
in
ds
jmp
fsubrs
aas
nop
out
xchg
cld
stos
stos
mov
call
pop
xorl
and
shll
inc
inc
ja
or
scas
cli
or
mov
call
cs
pop
adc
pop
mov
dec
iret
scas
xchg
cld
stos
push
mov
and
fildl
sub
ficompl
cmp
jg
sbb
pusha
mov
mov
and
jne
jl
xor
sub
das
adc
inc
xchg
sti
sahf
sbb
cmp
testl
mov
test
cmp
mov
pop
add
or
and
ds
ss
movsb
ffree
testl
outsl
ljmp
push
dec
push
out
lds
rorb
xchg
bound
xchg
sarb
lret
sarl
mov
add
dec
std
jbe
mov
mov
sar
mov
or
loopne
inc
push
jb
mov
loop
test
xchg
shl
mov
test
popa
std
push
push
pop
mov
addl
ror
mov
inc
and
jge
and
lret
cli
in
jp
xchg
mov
jmp
fimuls
dec
fcompl
xchg
push
ds
inc
imul
inc
stos
cmpsl
push
xchg
push
lods
pop
or
pop
add
push
pop
cmpsb
dec
jne
mov
sub
sub
inc
std
adcl
xlat
pop
sub
dec
jecxz
iret
or
adc
jg
lcall
stos
xor
or
hlt
sub
repz
adc
in
leave
ja
jg
andl
sub
sub
sub
leave
jmp
rdtsc
aas
lock
jnp
xchg
xor
jns
xchg
mov
xlat
loop
or
xor
enter
mov
leave
and
mov
xor
cs
les
rcrb
ud0
xor
mov
sub
jb
pop
aad
hlt
int
arpl
dec
push
lahf
mov
and
stos
or
xor
loopne
xchg
pop
movsl
out
xchg
fdivr
cwtl
mov
test
mov
sub
subl
inc
mov
jo
scas
mov
adc
push
sbb
fs
dec
adc
dec
push
fildl
movsb
mov
sbb
popa
bound
xlat
jnp
dec
mov
mov
and
test
push
jl
in
bound
rorl
iret
mov
cmp
push
loop
push
sbb
sbb
lret
sub
hlt
adc
jecxz
dec
push
stos
cmc
mov
fisttps
ret
push
sbb
add
sbb
fisttpl
icebp
in
lea
out
cli
cmc
lock
pop
std
cmp
xchg
bound
iret
adc
lahf
pop
ljmp
fiadds
lahf
lahf
insl
xor
pop
out
movsb
push
bound
jnp
sub
or
xchg
jg
js
lods
cld
adc
aam
ss
mov
cmp
xor
icebp
addb
cwtl
notb
jnp
call
dec
pushf
xchg
pushf
test
jle
and
pop
and
js
push
pop
lret
imul
imul
sub
popf
loop
jmp
xor
loope
mov
jno
in
mov
andl
cld
cli
xor
mov
sbb
divb
ror
aas
inc
adc
add
xchg
sub
pop
fistpl
add
push
out
arpl
repnz
cmpb
imul
xor
lret
jno
aas
bound
and
data16
lock
pop
in
jns
cmp
into
xorb
pop
add
loop
add
sbb
int3
push
jne
push
lahf
pop
aas
inc
popf
xor
in
int3
in
sahf
mov
jns
lds
rcrl
sbb
sbb
xchg
popf
sti
nop
mov
test
add
push
sbb
mov
mov
mov
cmp
sarl
push
test
inc
push
in
dec
in
xor
pop
outsb
pop
addr16
xchg
fmul
adc
dec
inc
test
jmp
call
jecxz
fs
leave
cwtl
lcall
cmpsb
enter
sahf
add
dec
ja
jbe
add
je
adc
add
xor
notl
mov
mov
cld
jno
movsb
push
aam
faddl
mov
cmp
outsb
sbb
mov
jno
cs
inc
leave
mov
ds
cmp
ss
and
andl
jle
lds
pop
inc
sub
xchg
pop
ljmp
clc
fcoml
int3
adc
je
cmc
mov
cmpsl
imul
sbb
or
mov
popa
shrl
jmp
icebp
mov
dec
cmp
jmp
mov
out
cmpsb
pusha
ret
loopne
xchg
iret
jb
icebp
icebp
xor
xchg
rcll
addl
test
and
dec
sub
xchg
add
mov
sub
cmpsb
shl
or
sbb
fs
sub
xor
sbb
inc
push
loop
fcoms
jbe
cmp
cmpsb
pop
in
into
mull
ds
inc
mov
add
pop
out
lods
pop
or
scas
popf
imul
jae
jl
inc
shr
out
fwait
and
fbstp
dec
in
cli
jno
cli
adc
cwtl
mov
push
imul
and
adc
cmp
pop
mov
cmpsl
rsqrtps
enter
addl
push
call
sti
cltd
lahf
xchg
mov
mov
pop
fisubl
inc
mov
mov
push
mov
cwtl
inc
inc
xchg
popa
pop
lret
mov
stc
cmc
jmp
push
add
adc
out
sar
inc
xor
sti
inc
push
jl
mov
sub
leave
out
mov
test
imul
dec
test
adc
into
adc
jmp
fimuls
pop
mov
xchg
test
push
ljmp
popf
lret
fsub
gs
jmp
mov
mov
xlat
les
ds
ficoms
jge
negl
addr16
cmp
jb
ljmp
popf
js
xor
xor
inc
push
in
clc
or
aas
in
in
mov
pop
ss
add
ret
dec
lcall
dec
xor
pop
into
rcrl
dec
lods
subl
add
cmpsl
into
gs
adc
add
pusha
fdiv
push
lea
cltd
iret
and
and
jnp
lahf
insb
lods
loopne
lcall
in
pusha
sub
mov
in
dec
repnz
fidivl
cmp
or
les
or
lahf
jae
iret
ljmp
les
leave
cmc
dec
shr
lea
adc
aas
sub
mov
icebp
dec
add
repz
add
into
xor
push
add
mov
mov
es
cwtl
fwait
mov
dec
mov
add
dec
add
mov
jmp
mov
xchg
jnp
jbe
push
jne
in
or
push
push
xor
mov
das
js
inc
mov
cli
test
fwait
test
push
data16
ficoml
mov
les
es
imul
rcll
jnp
jg
pop
xchg
shl
pop
xorb
fmulp
dec
or
mov
inc
push
pop
mov
test
leave
xor
adc
insb
imul
jbe
pop
cld
push
mov
popf
lret
inc
mov
pop
loopne
add
decl
dec
xlat
xchg
stos
stos
repz
in
mov
pop
cmc
shrb
fsts
mov
mov
inc
cmp
stc
ret
subb
mov
push
mov
out
push
call
jl
fwait
adc
imul
push
leave
mov
daa
insl
in
push
jecxz
pop
daa
jne
and
or
push
fmull
push
aam
cmp
ret
xor
jge
dec
inc
in
and
xchg
ljmp
aad
sbb
je
shll
ljmp
pop
je
sub
lods
inc
test
pushf
in
xchg
pop
mov
jnp
lcall
gs
push
sub
into
jmp
or
jmp
add
or
cmp
mov
xchg
cmp
imul
xchg
pusha
and
stos
or
cwtl
and
jl
sbb
js
cmp
outsb
add
flds
loopne
arpl
fisttpll
pop
mov
shll
jp
cmp
jbe
xor
pop
scas
gs
jle
cmp
or
cltd
jg
scas
shll
aam
aad
and
mov
mov
mov
lock
dec
out
cltd
jo
jnp
push
inc
and
cmp
push
imul
push
iret
and
jo
aaa
add
cmpsb
test
in
mov
adc
push
aad
sahf
in
das
popf
jb
fisttpl
mov
ret
sbb
std
add
xchg
mov
push
popa
push
aaa
dec
fucomp
mov
jo
mov
pmuludq
push
adc
push
in
inc
mov
xchg
adc
mov
out
mov
mov
mov
sbb
push
jns
cmpsl
mov
jb
imul
mov
arpl
mov
ret
push
cmp
seta
nop
outsb
dec
pop
push
sub
or
cs
mov
ds
adc
inc
and
leave
xchg
icebp
mov
xchg
xor
sbbb
mov
xchg
rcrb
scas
ds
xor
int
jmp
mov
int3
cmp
sbb
pop
push
popf
push
lret
cltd
fisttpl
sub
movsl
sbb
clc
cli
inc
aad
inc
arpl
or
in
sub
jmp
loop
rcrb
fldcw
mov
fbld
xchg
js
imul
imul
jle
push
fsts
loop
aam
mov
sahf
ja
pop
fidivs
sbb
insb
out
or
lea
xor
repnz
and
je
add
add
xlat
arpl
inc
cs
in
cs
sub
xchg
sub
and
mov
mov
mov
mov
insl
dec
sub
jmp
pop
mov
in
or
xchg
xor
mov
aas
cmp
sbb
insl
test
mov
xor
fistl
sub
or
add
inc
and
add
ret
and
push
or
das
inc
or
push
inc
and
enter
sbb
aaa
lahf
enter
sti
and
rclb
test
stos
mov
stc
mov
jmp
mov
test
jae
sbb
std
jne
negl
jne
lahf
sti
ret
or
scas
mov
push
test
out
jl
outsl
es
cmp
in
outsl
aas
mull
fucomip
inc
mulb
mov
push
fstp
les
mov
pop
pop
xor
enter
popf
out
xlat
mov
in
testb
sub
adcl
js
cwtl
fisubl
push
sbb
movsl
stc
xor
adc
fldt
in
jp
push
push
enter
lods
lods
add
inc
addl
push
add
dec
cmp
repz
dec
leave
movntq
sbb
test
cmp
dec
xchg
jo
cs
mulb
sbb
push
push
ljmp
adc
sub
jnp
adc
mov
and
xchg
gs
pop
stos
pop
or
jb
sarl
pop
inc
outsl
in
loop
int3
stos
call
pop
imul
jle
pop
jle
xchg
aad
dec
push
xchg
loop
cs
xlat
sahf
movsl
shlb
jb
cli
shrl
stos
dec
jo
or
cmp
xchg
mov
sbb
xchg
fistpl
ss
sub
fldt
sbb
lret
mov
in
sbb
roll
cmp
push
jae
insl
jge
xor
jecxz
imul
mov
gs
inc
cmp
mov
jle
pop
les
cmp
pushf
adc
or
mov
aas
mov
mov
ljmp
arpl
lret
inc
loop
or
pop
add
sbb
mov
lret
and
pop
push
pop
daa
xchg
inc
imul
cwtl
dec
jb
sbb
gs
fadds
jmp
push
sub
xchg
add
mov
out
xchg
mov
dec
cmp
pop
insb
shl
or
push
outsb
mov
dec
xchg
lahf
lock
in
sub
fnsave
lea
adc
int3
dec
ss
push
add
call
loope
cltd
or
ret
mov
inc
movsb
add
lea
aam
adc
jl
pop
mov
pop
xchg
push
sbb
ja
lods
pop
es
sbb
mov
xchg
xor
sbb
sarl
or
pop
fwait
movsb
sbb
jb
je
jecxz
aaa
out
es
mov
repz
inc
das
xchg
mov
pop
out
push
ja
xchg
xchg
dec
inc
mov
sub
lods
push
call
sbb
xchg
xlat
jo
mov
sub
ss
into
test
xchg
stos
dec
mov
pushf
cmp
dec
jo
xor
sbbb
insl
test
aaa
xchg
sti
stc
or
call
xchg
int
pop
inc
test
insl
sahf
xor
or
into
push
inc
mov
push
mov
aas
inc
popf
sbb
jns
outsl
jne
nop
scas
pop
jb
cs
rcrb
rclb
sub
sbb
cmp
mov
out
popa
pop
lods
negb
cmp
dec
pop
out
mov
jp
inc
sub
mov
loope
lahf
enter
clc
js
dec
dec
out
cld
lea
jmp
addl
cmp
push
xor
into
fsubrl
adc
aaa
aad
xor
dec
lods
les
cmp
inc
arpl
shr
or
jbe
push
mov
push
movsb
nop
mov
aaa
in
push
cmp
dec
sahf
mov
mov
ret
clc
sbb
cli
inc
adc
mov
cmp
popf
inc
ret
std
or
xchg
ljmp
dec
xor
dec
out
iret
mov
push
pop
sbb
les
stc
stc
xor
xlat
sbb
push
out
enter
jne
mov
inc
jo
cmp
push
js
xchg
outsb
fs
jns
out
ljmp
mov
rolb
add
pop
dec
xor
pop
pusha
push
jle
js
lahf
lea
loop
lds
or
xchg
xorl
mov
ret
lea
cmp
int
add
shrl
sahf
loope
xchg
mov
adc
push
popa
insl
and
mov
pop
xchg
cmp
movsl
push
int3
mov
pushl
nop
cltd
xchg
das
cld
lret
insb
pop
lret
inc
or
push
sbb
ss
push
cmpsl
mov
xchg
mov
and
icebp
decb
pop
mov
fiadds
mov
loop
pop
mov
addr16
push
inc
push
jnp
xchg
es
pop
xlat
loope
xchg
jnp
scas
outsl
or
push
jnp
xchg
rcll
sub
cmp
mov
int3
shlb
insl
shl
xchg
inc
sbb
movsl
mov
out
and
sub
cmp
cwtl
enter
jo
imul
test
sahf
jb
push
hlt
popa
jno
mov
sbb
in
ss
mov
push
mov
in
push
pop
xor
iret
push
in
cmc
push
pusha
frstor
push
mov
mov
lock
call
clc
mov
cmc
nop
inc
add
and
out
idivb
stos
and
and
jns
pop
aam
popa
push
and
cmpsb
pop
mov
shlb
sub
cmp
in
fs
ds
in
gs
cmp
ret
shlb
and
mov
rorl
mov
mov
or
je
fcoms
add
cltd
push
xor
push
mov
xchg
push
fs
ret
mov
cmp
sbb
adc
inc
jmp
es
mov
sbb
xchg
mov
aaa
xchg
les
xor
xchg
psrlw
fsubrs
sahf
mov
ret
es
jp
lods
lods
mov
and
add
xchg
pusha
add
cmp
lcall
ret
lret
arpl
and
fdivrp
loope
out
sub
adc
add
inc
push
shl
add
or
adc
andl
jo
scas
test
dec
dec
mov
pop
mov
pushf
push
mov
inc
cwtl
js
loope
mov
shrl
xchg
ljmp
xchg
xchg
inc
loope
les
mov
jg
or
mov
int
pop
gs
out
xor
push
adc
mov
or
dec
imul
call
test
xor
add
loop
mov
pop
pop
mov
mov
fnstcw
shr
push
mov
push
and
aad
pop
inc
adc
je
imul
inc
mov
fistpll
fdivs
jmp
ja
mov
xor
mov
sbb
mov
push
mov
mov
mov
dec
stc
faddl
fsubrs
outsb
aam
adc
adc
iret
fwait
call
es
pop
jecxz,pt
mov
mov
and
stos
push
stos
out
popf
mov
fwait
jb
out
decl
lcall
dec
std
stos
push
rorl
popf
mov
sub
adcb
in
orl
repz
lcall
inc
nop
add
inc
pop
int
js
adc
fucomi
outsb
pop
mov
pop
jns
pop
test
cld
mov
rcrl
mov
mov
das
imul
mov
inc
adc
inc
sbb
mov
rcrl
jg
sub
and
dec
cmp
imul
inc
ret
rcr
repz
iret
lcall
aas
js
sbb
sbb
dec
sub
in
sub
pop
daa
sub
mov
int
lret
stc
cs
ficoml
dec
jp
fisubrs
iret
fcmovu
add
xor
add
mov
and
int
je
lods
mov
xchg
add
push
test
add
mov
mov
nop
jg
negb
lods
mov
mov
icebp
es
mov
mov
sahf
cmc
mov
cmpsb
cmp
mov
insl
add
dec
or
dec
add
xchg
cmp
jnp
inc
push
pop
sbb
or
jp
imul
jg
loop
push
dec
add
xchg
fiaddl
popa
fwait
ss
mov
jmp
in
test
adc
jae
pop
jo
int3
pop
xchg
nop
fcoml
xor
mov
loop
pusha
in
pop
and
xchg
inc
leave
out
aad
dec
pop
add
xor
int
fnstcw
shlb
mov
dec
or
fidivrl
rol
lods
lock
movsb
add
imul
sti
jb
enterw
cld
jns
outsb
adc
sahf
jp
push
mov
int3
sbb
xchg
scas
lcall
lds
data16
lea
lret
jg
imul
fnsave
scas
add
jl
ficomps
arpl
popf
cltd
cld
stc
xchg
sbb
aaa
push
push
jb
mov
popa
int3
jno
hlt
ljmp
stc
and
fcmovu
popa
cmp
in
test
jecxz
out
fisubrl
add
daa
arpl
in
aad
and
inc
sahf
xchg
or
jl
cmpsl
xor
dec
loopne
sbb
jnp
push
pminsw
jbe
pop
and
ss
cmp
data16
dec
fcomip
adc
sub
mov
outsb
pop
rcl
popf
repz
or
scas
pop
mov
js
adc
dec
fidivrs
mov
push
add
and
fcoms
mov
mov
xor
es
aam
ret
sbb
rcrl
test
ss
mov
leave
xchg
dec
jle
mov
mov
test
lods
fldcw
lea
or
push
ret
xlat
lret
add
fdivs
inc
inc
js
subb
mov
ds
push
mov
xchg
cmp
pusha
add
stos
movsb
sub
cmp
xor
imul
pop
jae
push
shlb
andb
inc
gs
fsubl
sub
xchg
xor
mov
push
popf
inc
pop
js
mov
add
and
ljmp
stos
ss
sub
aas
dec
subb
cmpsb
adc
push
lahf
mov
or
mov
xor
jbe
das
cwtl
adc
jae
jmp
das
cmpsl
add
xchg
xorb
ljmp
mov
push
addr16
pop
and
xor
mov
out
pop
push
clc
sub
push
fldl
fs
sbb
xchg
sub
mov
sti
sbb
imul
es
in
push
cmp
lods
fsubs
hlt
xchg
xor
sub
xor
xor
jno
in
inc
push
fsubrl
add
xor
xchg
movsl
mov
outsb
mulb
icebp
jnp
xchg
inc
xor
lds
pusha
sub
movsb
por
cmpsb
icebp
shll
into
out
and
stc
jne
bound
ret
mov
ret
and
es
sub
xor
jle
stc
jne
pushl
daa
mov
cmpsl
andb
out
adc
mov
xchg
push
cs
imul
cmp
mov
sbb
movsb
add
mov
xlat
push
outsb
jnp
add
add
in
outsl
push
ret
lret
mov
and
jae
jo
fnstcw
xor
sti
dec
insl
ss
pop
add
cmpl
jge
mov
xor
xlat
adc
mov
mov
adcl
imul
test
dec
mov
sub
dec
xchg
pop
test
test
push
and
enter
xchg
int3
mov
aas
ja
cltd
pushf
push
add
xchg
xchg
jle
sub
outsb
ret
lods
push
ds
shl
mov
mov
jae
add
popf
mov
push
xchg
inc
cmpsb
dec
outsl
push
xor
mov
xor
repz
add
ret
jge
adc
mov
dec
out
mov
loopne
movsb
call
push
call
repz
push
jae
inc
mov
cmp
insl
daa
fisubl
pop
lods
orl
cmp
scas
ja
ret
lock
in
mov
push
adc
cld
test
out
dec
mov
aad
adc
hlt
cmc
ret
dec
jge
sbb
call
daa
mov
sbb
inc
jns
sbb
xchg
push
incb
and
in
mov
mov
movsl
adc
out
or
xchg
add
jnp
xchg
fsubl
add
sahf
xchg
inc
testb
sarl
xchg
push
mov
aaa
in
loop
cmpsl
imul
mov
lret
mov
call
cmp
mov
mov
pop
sbb
xor
icebp
push
out
pop
cmp
nop
ror
lahf
sbbl
cltd
test
rcll
sub
aaa
arpl
xchg
aam
adc
mov
outsb
xor
add
add
addr16
loop
lds
sti
jg
imul
inc
sbb
xor
sbbl
cmp
popf
adc
fldt
mov
in
push
add
xchg
mov
repnz
lds
or
xchg
ss
add
sarl
adc
xchg
cmpb
dec
add
aad
push
cmc
or
jle
popf
pusha
mov
sbb
repnz
and
hlt
xor
and
mov
sarl
mov
ret
inc
enter
mov
pop
and
xchg
jg,pt
aad
mov
dec
dec
negb
sub
mov
ja
mov
cli
arpl
mov
xchg
pop
jle
and
test
mov
fbld
std
enter
out
and
dec
fisttpl
out
sbb
xchg
sub
dec
movsb
push
clc
sbb
add
or
cmpsb
mov
jl
ds
push
cmp
mov
addb
cmp
fsubrs
or
sub
push
loopne
or
sbb
pop
scas
mov
roll
mov
mov
stos
not
lods
xor
rorb
gs
mov
out
repz
cwtl
loop
xor
mov
mov
adc
insl
scas
in
pusha
pop
fiaddl
inc
or
repnz
enter
mov
sahf
movsl
mov
fwait
in
lock
in
js
xor
push
mov
pop
lock
jno
dec
call
push
out
out
xor
out
movsl
out
lret
movsb
xchg
xchg
push
cltd
nop
sub
adc
or
shll
xchg
cmpsl
loopne
mov
jge
fmulp
xor
div
and
idivb
sub
jo
xor
ret
pop
xchg
jle
imulb
outsl
mov
sub
push
sahf
or
lcall
clc
xchg
mov
sbb
out
xchg
mov
sbb
ret
jo
mov
in
jmp
xor
dec
fadds
insl
icebp
lcall
clc
stc
jno
fdivl
xchg
ss
push
addl
sbb
mov
mov
mov
mov
aad
pop
imul
sarb
xchg
enter
iret
in
push
mov
mov
aad
cltd
outsb
dec
push
cmp
add
push
inc
xchg
lcall
repz
jo
inc
leave
mov
xchg
xchg
arpl
scas
or
imul
pop
shlb
fwait
or
mov
outsb
dec
das
jns
arpl
dec
dec
pop
xor
movsb
mov
das
cmp
in
daa
rorl
fcmovnb
gs
xchg
mov
clc
mov
dec
sub
insl
loop
xchg
cmp
rclb
aaa
popa
dec
xchg
jg
icebp
cwtl
test
lods
xor
roll
sbb
in
repnz
inc
xor
addl
mov
pop
inc
fnstcw
push
inc
mov
or
or
scas
push
jl
clc
stos
fsubs
inc
push
fimull
dec
or
jbe
dec
stos
sub
add
mov
sahf
pop
clc
xchg
scas
call
push
xorl
imul
je
addr16
filds
mov
std
and
fdivrl
xchg
adc
cmp
cmpsb
lea
roll
pop
or
lret
mov
call
int
inc
mov
in
out
loop
sub
shrl
push
and
push
cmp
pop
bound
imul
test
push
push
mov
adc
adc
mov
fmuls
xor
mov
mov
decl
rcrb
jle
stos
loopne
pusha
inc
insb
mov
in
mov
mov
call
inc
mov
int
mov
mov
pop
push
xchg
jbe
pop
subb
pop
imul
rolb
pop
stos
in
test
into
jl
mov
mov
adc
scas
shlb
xor
push
mov
jle
bt
sbb
jno
ss
test
mull
icebp
push
cmp
je
in
inc
mull
cld
stos
jno
sbb
xchg
test
xchg
push
jne
scas
test
cli
inc
dec
pop
jle
mov
xor
push
push
test
adc
loop
jge
mov
xchg
and
ret
inc
mov
mov
push
dec
jecxz
ss
dec
cmpsb
jae
jne
xchg
aas
jae
dec
inc
movsb
inc
outsb
in
and
js
mov
jne
and
xor
lahf
cltd
jmp
sub
dec
lret
cmp
mov
jbe
popf
push
xchg
cmp
jne
jle
lds
inc
jne
cmpsl
cmp
dec
adc
ljmp
ss
xor
mov
cld
insl
fstpl
and
test
sbb
inc
out
rolb
fwait
outsb
xchg
ss
bound
jl
jb
and
mull
cltd
loope
ljmp
inc
push
xor
mov
test
push
push
adc
jg
aaa
out
out
adc
pop
push
shlb
in
fstl
and
sbb
sbbl
scas
in
mov
xchg
xchg
mov
int
or
repnz
push
xor
lret
adc
cwtl
xchg
shrb
fistps
sub
iret
leave
cmpsl
mov
sbb
mov
push
and
ljmp
shll
sbb
addr16
test
das
sub
jb
and
fwait
lods
lds
mov
mov
adc
push
pop
in
xchg
pop
inc
fsubl
sub
inc
mov
rcll
rorb
xor
movsl
enter
sarb
out
and
push
cmp
push
fsts
pop
pop
dec
or
push
cwtl
pushf
and
jns,pn
mov
andb
stos
es
in
test
sbb
ror
pop
mov
mov
xor
cmp
movlps
jge
cmp
gs
fwait
add
sbb
lods
stos
dec
outsl
jg
pusha
mov
movsb
mov
cmp
fwait
popf
nop
call
mov
hlt
mov
movsb
in
jne
or
outsb
popa
aad
data16
arpl
test
xor
jecxz
aad
iret
xorb
inc
popf
das
fiadds
in
fisubl
xchg
lcall
in
jp
dec
push
mov
ds
cld
pop
mov
mov
mov
sbb
sub
iret
aam
pop
sarl
sub
aas
out
pusha
jl
sbb
jae
push
dec
dec
test
imul
shl
fdivr
inc
testl
jp
xchg
push
pop
mov
mov
rorb
cmpsb
jae
or
gs
sub
and
mov
gs
enter
sbbb
push
nop
aas
jne
gs
test
xchg
sub
adc
pop
sbbb
iretw
xchg
add
insb
in
jg
ss
pop
fisubrl
add
inc
or
push
jle
adc
test
jmp
stos
js
fistl
outsb
lods
loop
cmp
sub
add
pop
push
mov
xchg
aaa
pop
test
jns
je
mov
adc
jge
xchg
lret
int3
fsubr
outsb
scas
pop
ret
lret
sti
lock
push
or
cwtl
inc
xchg
aaa
xchg
cmpsl
mov
xor
sub
notb
jmp
jmp
aas
mov
jbe
cltd
mov
test
js
push
jp
mov
fists
mov
xchg
jns
mov
jb
push
push
addr16
imul
add
je
jnp
arpl
pop
add
loope
jns
and
xor
sub
cmpsl
and
push
lret
orb
rcll
fisubs
out
outsl
lock
jecxz
std
fs
push
outsl
xor
movsb
or
repz
sub
jo
js
or
dec
lret
sbb
lret
mov
pop
pusha
inc
outsl
in
add
jbe
aas
xor
fsubs
rcrl
cwtl
std
and
movsl
xor
or
outsl
sbb
push
leave
das
popf
jle
pop
inc
fnsave
movsl
dec
shrl
clc
add
cmpsb
adc
inc
fadd
jo
push
lods
or
jbe
mov
test
sbb
leave
in
jo
fbld
jnp
cmp
sub
std
inc
cmp
jp
inc
sub
pop
int3
mov
icebp
sbb
cmp
add
mov
push
sbb
rcl
push
dec
test
mov
mov
cmp
pop
les
jb
mov
adc
ret
mov
in
xchg
add
mov
clc
push
jo
pop
out
sbb
jmp
lock
lret
sbb
adc
vmwrite
inc
ret
in
adc
jns
testl
add
dec
jne
push
xchg
imul
ja
push
dec
stos
jnp
outsl
sbb
mov
rorl
test
and
mov
pop
mov
cmpsl
xor
sbb
dec
add
adc
dec
stc
inc
jbe
dec
cmp
out
sahf
cmp
mov
xchg
data16
adc
lods
mov
ficoml
mov
test
bound
in
pop
cmc
ret
das
pop
outsb
cmp
test
push
test
je
push
test
push
je
or
les
cmpsl
bound
pushf
outsl
adc
cs
dec
jo
mov
inc
sub
pop
xor
inc
push
cmpsl
pop
fcompl
test
je
out
pop
jne
ss
hlt
mov
js
pop
push
xchg
test
mov
fidivrl
cmp
push
mov
cmp
add
mov
leave
add
mov
inc
cmpsb
pop
arpl
inc
addb
jne
mov
jle
cmpl
jle
jg
push
sahf
ret
inc
mov
scas
jle
push
mov
fidivrl
sub
push
xchg
and
jmp
cltd
into
imul
sub
cld
les
fwait
cmpb
scas
popf
pop
psubsw
daa
pop
ds
dec
movsb
fidivrs
outsb
lods
jg
movsb
xor
adc
rcrb
jp
mov
push
mov
lods
cmpsb
leave
icebp
jle
jo
shlb
and
push
mov
fcompl
pushf
inc
sti
mov
inc
pushf
adc
dec
mov
xchg
pop
repnz
ljmp
jle
cmp
xor
push
mov
and
out
add
add
push
pop
xchg
pop
push
jb
mov
add
mov
in
mov
dec
jno
fistpl
dec
ficoms
dec
pusha
test
dec
shl
xor
dec
sbb
in
ds
ljmp
xor
xorb
cmpsl
out
cltd
push
hlt
sub
rolb
push
stos
cs
jle
inc
jnp
testb
sub
int3
or
in
mov
jge
fwait
push
cmc
shrb
stos
or
bound
cmpsb
not
repz
movsl
or
push
in
push
sub
add
inc
inc
out
and
movsl
or
fwait
sbb
das
insl
roll
addr16
iret
cmp
mov
aad
xchg
out
daa
xchg
sbb
xchg
xchg
sarl
sbbl
cmp
outsl
int3
sbb
imul
jnp
cmp
push
inc
aad
aad
rcrl
ret
sbbb
lds
ficoml
adc
pop
rcrl
out
test
inc
mov
adc
jb
sub
mov
jp
lods
aad
push
inc
push
dec
and
gs
dec
dec
jle
scas
pushf
repz
movsl
and
imul
jno
dec
imul
mov
in
cmpb
ror
cld
dec
inc
push
add
call
es
outsl
push
pop
pop
push
popf
sti
daa
xor
mov
ja
jae
inc
xlat
or
lret
cmpsl
pop
and
push
adc
hlt
dec
sbb
es
mov
or
sbb
mov
call
mov
jg
ja
mov
test
aaa
das
call
push
xchg
dec
xor
imul
ja
faddl
and
mov
sub
pop
in
mov
pop
sub
loope
or
je
jo
and
pop
pop
gs
xor
mov
insb
shl
stc
cmp
ret
in
mov
cwtl
sub
fs
in
sahf
shll
cmpsb
sbb
pop
lods
dec
xchg
xchg
sbbb
cmp
sbb
insl
std
and
daa
mov
xlat
jnp
bound
pop
sub
dec
xchg
mov
xchg
inc
js
mov
xlat
test
sbb
mov
dec
gs
push
test
cmp
repnz
movsl
test
loopne
and
inc
sbb
sbb
and
scas
addl
movsl
mov
in
mov
mov
pop
loop,pn
add
nop
cmp
xor
rolb
out
ljmp
stos
jge
fisubrs
mov
aaa
daa
sbb
dec
pop
pop
sub
xchg
pop
pop
popa
out
rcrb
adc
dec
cmp
and
add
adc
or
and
fidivrl
sub
fadds
cmp
mov
stc
aaa
addr16
mov
mov
xchg
into
hlt
dec
adc
adc
add
or
jmp
movsb
add
sbb
cmp
js
je
aas
les
and
test
movsl
dec
sbb
iret
ret
pop
push
inc
mov
les
push
push
cmp
gs
roll
push
fdivr
xchg
addr16
pop
je
fdivr
aam
in
ret
push
es
lock
or
call
xchg
stos
cwtl
fisubrs
int3
mov
xor
in
cmpsb
pop
jmp
cmp
cltd
gs
mov
jae
mov
enter
mov
fistps
lods
fidivl
imul
leave
lret
cwtl
jae
cld
mov
aas
push
pop
pop
mov
fmuls
dec
jge
mov
push
and
sub
xchg
les
jnp
dec
inc
fs
xor
dec
mov
sub
mov
xchg
and
out
ss
push
gs
mov
in
out
pop
movb
out
es
inc
or
sbb
maxps
les
add
cmp
loop
sbb
in
xchg
negl
push
iret
push
and
push
mov
sbb
out
mov
xlat
or
pop
push
mov
or
pop
push
pusha
pop
lock
pop
in
push
fst
or
jbe
cmp
shlb
xor
clc
jg
add
inc
pop
adc
jns
pushf
push
adc
add
push
call
outsb
dec
fisttpl
jb
and
dec
cmc
in
xchg
dec
shrl
stos
xor
jb
sub
cmpsl
ljmp
xchg
mov
shr
imul
mov
inc
and
xor
mov
mov
stos
in
sbb
sub
frstor
lods
cmp
aas
push
mov
in
bound
and
roll
cwtl
cmpl
and
ja
hlt
notl
xchg
mov
cli
cmp
and
outsb
sbb
sub
jb
pop
shrl
push
jle
test
inc
jae
loop
xchg
mov
push
or
out
pop
movsb
shlb
subl
js
pop
ja
int3
pop
in
inc
pop
sub
add
movsb
subl
in
cmp
mov
adc
pand
xor
jg
ljmp
loop
mov
lds
lahf
call
ret
adc
scas
ret
mov
div
jno
push
lock
sub
std
outsb
pop
add
mov
adc
in
xchg
mov
add
leave
std
ljmp
cld
or
mov
ret
pop
lock
add
movsb
xor
mov
mov
cmp
pop
fcmove
dec
jge
fsubl
stos
lret
adcb
fdivrl
or
nop
inc
xor
loopne
or
movsb
mov
lea
cmpsl
mov
outsb
pop
cmp
pop
dec
add
imul
daa
imul
mov
cmc
mov
xchg
cmp
pop
gs
roll
mov
ss
jl
ja
xor
movsl
outsb
mov
test
adc
jmp
pop
mov
xchg
gs
add
call
and
les
push
and
rcrb
mov
test
jge
pop
jge
xchg
sbb
mov
stos
dec
pusha
adc
pop
pop
mov
scas
std
push
sbb
insl
pop
xchg
push
pop
fdiv
xchg
repz
lods
jae
mov
mov
jp
xor
es
vpaddd
es
mov
xchg
addr16
fbstp
test
jmp
mov
test
xchg
sbb
mov
sahf
xchg
lcall
subl
pop
mov
sub
mov
leave
mov
push
mov
faddp
aad
hlt
in
les
jae
dec
and
sbb
mov
stc
negb
adc
cmp
into
repnz
lahf
aas
ljmp
inc
in
mov
fld
and
mov
mov
jmp
and
insb
and
cmp
ficoms
divb
cmpsl
push
jb
add
dec
or
ror
sub
cmp
fiadds
test
jnp
mov
call
loop
adc
insb
aas
lret
push
sbb
pop
push
lods
cmpsl
xor
jne
lea
pop
mov
stos
movsl
add
or
pop
insb
inc
aad
lods
lcall
jne
pop
dec
push
and
add
mov
sahf
or
sbb
xor
nop
popf
lods
or
lock
cld
push
jns
gs
xor
and
pop
pop
or
cmpsl
push
push
mov
fwait
pusha
leave
daa
fsin
fidivs
lock
sub
cmpsl
mov
stos
stos
push
jbe
xchg
jnp
addr16
daa
adc
inc
jge
jb
adc
mov
adc
mov
mov
pop
xor
cmpsb
jb
add
mov
pop
xor
jge
sub
es
pushf
aad
add
popa
adc
fstps
popa
iret
xor
repnz
lods
mov
sub
scas
out
xchg
jmp
inc
jae
cmpsb
rcr
or
lret
data16
cmp
int
xor
mov
das
test
inc
or
lods
rcr
jp
xchg
sub
mov
testb
data16
push
jne
jg
mov
gs
fcoms
jnp
mov
mov
mov
imul
xchg
popa
insb
out
xor
sub
mov
jnp
add
pop
aaa
sbb
leave
sub
jb
out
adc
jecxz
cmp
xchg
dec
mov
mov
jg
out
inc
cmpsl
xchg
movsb
xchg
test
pop
cld
mov
ljmp
mov
cs
ss
push
pop
adcb
xor
jno
sbb
call
inc
mov
clc
int3
inc
sub
inc
les
mov
push
cltd
sbb
imul
xor
inc
xchg
add
rep
insl
rcrb
pop
push
push
mov
mov
dec
icebp
aad
jl
cwtl
sub
jb
dec
lea
fcmovbe
inc
or
mov
pop
test
mov
add
push
sbb
mov
out
pop
mov
bound
fisubrl
push
cmp
test
mov
neg
mov
lret
jbe
cltd
sarb
aam
rorb
rcrl
pop
and
xorl
cwtl
jno
add
pop
scas
je
leave
lcall
xchg
push
ficompl
int3
sbbl
or
stc
popa
mov
cmp
test
jle
int3
lods
outsl
nop
dec
jge
or
sti
sahf
xchg
ss
pop
iret
pop
insb
pop
imul
push
psubq
pop
jno
jno
jbe
mov
jno
push
std
sbb
daa
inc
dec
xchg
pop
adc
ljmp
ss
fwait
xchg
push
addr16
fiaddl
ret
mov
pop
cmp
lods
addr16
fadds
orb
mul
push
aas
ja
mov
shlb
mov
push
sub
mov
add
mov
out
and
adc
push
pop
mov
inc
pop
cmpsl
push
test
pop
pop
leave
notl
mov
push
or
mov
fistl
shl
shrb
adc
mov
push
cli
enter
cmp
inc
out
cld
mov
xor
mov
aaa
push
stos
mov
mov
pop
add
cs
mov
fidivs
test
inc
add
dec
mov
xchg
arpl
outsl
shr
aad
jae
inc
in
push
int3
mov
and
vcvtsi2ss
xchg
imul
popf
mov
push
jno
push
dec
push
sbb
jno
lcall
dec
adc
iret
sbb
addr16
jmp
xchg
and
mov
enter
jne
stos
dec
and
add
or
xchg
shr
jle
xchg
int3
adc
mov
fldl
imul
push
mov
mov
dec
icebp
repz
mov
sbb
mov
jp
incl
inc
fwait
test
fildl
loop
leave
addl
jg
mov
repz
clc
lea
push
cld
adc
xchg
xor
pop
mov
mov
aaa
clc
aas
sbb
jbe
idivl
mov
cld
push
icebp
cwtl
subb
in
or
das
aaa
pusha
xchg
cwtl
loop
mov
mov
es
dec
xchg
cli
pushf
lret
push
xor
mov
sbb
or
lods
gs
enter
lods
jg
xor
mov
ss
jmp
data16
orl
push
cmp
cmp
hlt
inc
es
pusha
fwait
dec
pop
cmp
dec
add
sbb
jp
inc
rcrb
gs
iret
and
jge
fsubs
add
and
imul
xchg
sub
cmp
pushl
dec
cs
adc
sub
test
jns
adc
mov
pusha
xchg
inc
cmp
pop
or
hlt
xchg
pop
insb
or
xchg
mov
sbb
adc
fsub
jns
xchg
test
sub
xchg
movsb
cmp
ss
outsl
mov
jae
or
repz
add
sub
cwtl
daa
pop
mov
xor
and
lods
jge
in
and
outsb
in
xchg
fwait
mov
adc
pop
jno
xlat
sub
mov
lea
bound
inc
imul
mov
push
pop
push
popf
fwait
out
es
or
jl
outsl
sbb
inc
sahf
dec
repnz
cmp
dec
rorb
repnz
cmp
mov
imul
test
mov
cld
leave
add
xchg
xchg
cld
mov
je
in
cmp
adc
sbb
sub
dec
fcompl
or
inc
iret
mov
pop
push
test
jg
mov
inc
mov
addr16
dec
jo
int
xchg
bnd
mov
mov
test
inc
push
rcl
or
int
ja
mov
cs
adc
stos
cmpsb
call
xchg
sahf
sbb
and
xlat
cmp
jecxz
mov
xchg
jae
sub
pop
push
dec
ret
mov
push
jl
cmpsb
add
mov
cmpb
add
mov
mov
mov
jne
or
push
std
xor
and
mov
jno
sub
out
jne
shl
lahf
cmp
xlat
hlt
cmpsb
sbb
call
andl
ret
lods
sub
mov
add
sbb
bound
rcrb
sbb
push
mov
lahf
clc
mov
mov
dec
xlat
mov
dec
and
jbe
mov
hlt
gs
jge
xchg
add
xchg
mov
loop
mov
inc
fsubs
mov
mov
stos
fadd
lea
push
out
mov
cmp
cmp
sbbb
gs
outsl
sub
cmp
lds
or
imul
sub
xchg
push
shufps
in
popf
dec
adc
pop
mov
mov
lcall
ficompl
stc
pop
popa
test
sub
push
into
xor
iret
jae
xchg
push
lock
or
sbb
pop
es
outsl
imull
push
or
xchg
mov
lret
fwait
mov
stc
add
in
push
or
or
pop
mov
push
test
and
mov
lahf
pop
push
jns
std
and
cmp
sub
out
mov
jno
pop
jmp
out
rcr
xor
adcb
push
mov
pop
mov
stos
hlt
or
adc
adc
adc
dec
lcall
jg
std
enter
int
lea
and
and
cmp
jno
adc
cmp
in
shlb
mov
test
jbe
ljmp
and
inc
lds
dec
push
push
cmp
loope
ds
sbb
mov
jg
sub
mov
stos
xchg
cmp
push
adc
out
std
sbbb
out
lods
leave
sbb
fisttpl
rorb
fidivl
xchg
bound
imul
in
push
and
sbb
sub
pusha
in
push
out
imul
test
xor
fs
mov
inc
and
push
inc
shll
rorb
shrl
fcmovnb
inc
cmp
cmc
std
mov
out
mov
loop
repz
les
mov
pop
cmp
jne
cmp
lret
cmp
testl
lods
adc
jb
out
cld
aas
out
jl
jb
repnz
idivb
push
orb
sub
add
cmp
pushf
lods
enter
lds
outsb
stos
xchg
popa
cwtl
aas
jnp
js
mov
mov
ljmp
stc
dec
or
adc
push
popf
fistl
dec
repz
cmpsb
mov
into
cmp
aam
cmp
xchg
xchg
icebp
dec
enter
insl
dec
sub
mov
jge
stc
mov
cmp
inc
daa
imul
pop
clc
popf
mov
rcr
cmp
sub
aam
mov
add
cmp
xlat
xchg
outsb
lcall
sbb
cmpsl
insb
cltd
das
adc
pop
xor
push
adc
add
mov
sub
cmp
jb
imul
mov
jno
out
cwtl
fiadds
adc
out
mov
iret
pop
sbb
jb
gs
lock
xchg
idivl
add
pop
xor
xchg
sbb
sahf
lods
rolb
pop
fmull
es
jp
movsl
ficompl
add
or
sbb
jmp
fildll
insl
mov
jmp
fwait
cmpl
loope
cli
push
jbe
push
bound
adc
mov
pushf
jg
lods
xor
pop
and
enter
sahf
cltd
xchg
mov
pop
fistpl
pop
enter
fsubrp
add
ljmp
push
scas
xor
adc
mov
pusha
jns
mov
and
int
inc
pop
inc
enter
jmp
sbbl
addr16
mov
inc
roll
lahf
lahf
xchg
faddp
jo
loope
daa
push
loopne
pop
sub
push
rcrb
ljmp
test
mov
add
dec
or
xor
fdivl
into
out
and
mov
imul
dec
lret
jae
adc
addb
pop
out
mov
mov
mov
sub
icebp
inc
inc
stos
pop
stos
jmp
test
lods
in
shr
jns
sub
js
repnz
xchg
cmp
loope
out
adc
mov
iret
in
or
inc
ds
pop
push
mov
shlb
and
sbbl
xchg
cvtps2pd
out
sub
pop
rcrl
imul
test
popf
pushf
or
jbe
adc
adc
mov
rcll
push
popa
jp
test
mov
sub
mov
mov
jo
ja
js,pn
dec
sub
in
push
sub
lods
fcmovnbe
rcpps
mulb
xor
pop
jp
iret
xchg
jne
shlb
adc
mov
insl
ljmp
addr16
push
gs
movsb
jo
lea
ficoms
repnz
inc
adc
pop
jnp
xchg
loope
ja
pop
pop
mov
fldl
leave
sub
cs
std
popa
xor
les
vmovaps
sub
popa
fmull
add
cli
and
sub
shll
fwait
mov
sub
jp
in
scas
lret
mov
inc
mov
add
pop
aam
movb
test
je
xchg
aaa
sbb
mov
shrl
je
outsl
jg
jge
mov
loopne
or
pushf
push
push
iret
push
xchg
cmp
push
push
mov
and
push
xchg
loopne
sub
pushf
cltd
cmp
inc
out
dec
and
clc
js
repnz
add
pop
xchg
xor
push
neg
mov
arpl
imul
cmp
cmc
dec
push
xor
outsb
nop
jb
push
pop
xchg
jno
mov
adc
outsb
mov
cmp
lods
inc
fisubl
push
cltd
leave
out
aad
add
xor
xor
sbb
mov
insb
fcoms
inc
inc
adc
rolb
sarb
mov
and
jo
jg
mov
shll
andb
mov
adc
fmuls
dec
lock
lcall
push
sub
xchg
dec
jns
imul
cmp
add
jb
out
test
cli
arpl
gs
aam
icebp
push
xchg
jge
mov
into
adc
popl
sub
mov
cld
pop
pop
movsl
clc
or
add
xor
inc
ljmp
jge
jnp
incl
call
or
movsl
imul
mov
mov
pop
repnz
cltd
call
and
sahf
jmp
loope
nop
mov
fimull
sub
adc
sbb
pusha
jae
in
aad
xchg
inc
xchg
stc
stos
int3
fildll
pop
popf
sahf
ja
xlat
testl
call
outsb
cmp
push
jge
js
lods
mov
adcl
call
cmpsl
jae
add
iret
les
mov
insl
mov
push
mov
cltd
mov
bound
out
or
pop
xor
ss
mov
add
pop
lahf
in
movsb
repz
xorl
test
pop
jno
inc
mov
mov
adc
std
jo
shr
loopne
outsb
movsl
lahf
outsl
cwtl
stos
pushl
xchg
in
cld
outsb
sub
and
mov
lcall
aad
gs
test
repnz
addb
dec
daa
and
pop
test
popa
lods
gs
jp
jp
fistpl
jnp
push
aad
dec
mov
sarl
inc
xchg
insl
sub
sub
cld
je
or
xchg
inc
stc
pop
icebp
mov
hlt
icebp
bswap
in
insl
mov
mov
jmp
dec
cmc
rclb
imul
xchg
lcall
test
mov
xchg
fsubrs
jns
inc
mov
iretw
sub
xchg
ret
add
pop
mov
add
stos
sahf
cmp
xchg
inc
push
mov
jecxz
mov
jbe
test
xchg
fidivrs
fxch
inc
test
add
dec
int3
add
xor
in
loope
loope
test
mov
cmp
push
and
out
or
dec
mov
xor
jge
loope
push
ljmp
ret
push
loope
jle
jb
push
fs
inc
inc
ja
or
xchg
mov
mov
mov
mov
xchg
shll
incb
scas
add
jmp
mov
jns
jae
fwait
sarb
mov
inc
cmp
xor
xchg
orb
lret
xor
pop
lahf
adc
xchg
cltd
add
loopne
stos
scas
in
je
test
fdiv
xor
aas
iret
xchg
mov
cmpsl
mov
sub
push
stos
lods
into
mov
mov
push
xchg
xor
mov
in
jp
push
mov
xor
call
jge
adc
cmp
dec
dec
dec
loopne
call
mov
and
test
jns
dec
cltd
sub
mov
mov
inc
mov
imul
sti
cmp
dec
in
pmulhw
int
addr16
sub
aas
cs
dec
xchg
int3
loop
test
dec
clc
mov
inc
push
loop
shl
stos
ja
jo
fcomps
xor
mov
es
add
ret
insl
stos
mov
dec
pop
xchg
scas
shll
inc
data16
mov
push
cltd
jnp
sbb
pop
adc
imul
sar
mov
in
cltd
aas
jle
adc
cmp
sub
sbb
adc
lods
push
pushl
movsb
int
mov
out
std
or
mov
adc
ficomps
repnz
xchg
stos
ret
hlt
xchg
inc
pop
int3
sub
add
repz
xor
mov
loop
jecxz
test
jg
jnp
xor
xor
popa
enter
xlat
and
in
jno
inc
scas
iret
pop
jg
jnp
sbb
pushf
mov
cmc
sub
inc
sbb
pop
mov
aas
pop
subb
or
xchg
and
jg
mov
movsb
mov
test
insb
pop
shrb
and
mov
ds
mov
mov
outsb
dec
sbb
gs
inc
ror
js
push
xor
loopne
add
xor
adc
cs
dec
fadds
scas
push
cmp
mov
std
xchg
rcr
fsubrl
fldt
cmp
push
and
sbb
push
sub
pop
mov
stos
jge
aam
cmp
or
adc
and
daa
sbb
sti
xchg
push
les
xchg
add
xchg
in
dec
shlb
daa
add
push
xchg
push
adc
pop
loope
and
cmpsb
mov
fidivrl
addr16
in
rcl
mov
lods
cs
in
out
push
imul
mov
push
lods
mov
dec
jl
push
lods
loope
js
mov
lret
lahf
xor
jae
movsl
pop
mov
mov
mov
dec
push
push
ret
push
int3
stos
repz
mov
out
into
pop
jnp
in
mov
xchg
push
jp
shrb
xchg
mov
js
das
mov
into
cli
popf
push
hlt
xor
daa
lcall
in
in
jae
inc
lahf
sbb
stos
repz
jecxz
xchg
scas
pop
je
or
outsl
jecxz
rcr
in
and
sbb
mov
gs
arpl
stos
cmp
ficoml
popa
sahf
das
icebp
rol
cmpsl
mov
and
fbld
jo
test
inc
mov
pop
cwtl
lret
mov
out
dec
and
les
jns
pop
add
xchg
int
xchg
add
or
xor
push
sbb
dec
inc
shl
push
pop
sbb
out
andl
push
push
std
pushf
imull
enter
mov
dec
pop
ret
mov
lea
mov
pop
les
mov
insb
fcoms
call
mov
push
jl
test
arpl
cmp
mov
stos
and
cmpsl
ljmp
mov
or
loopne
daa
fidivrl
lret
cmp
sbbb
sbb
lahf
and
pop
adc
add
hlt
mov
scas
sbb
std
imul
mov
jmp
or
lret
mov
popf
in
xor
ret
fists
or
add
icebp
pushf
into
xchg
mov
stos
adc
pop
adc
mov
lret
xlat
addb
inc
mov
sbb
ret
addr16
jae
lods
inc
cmp
lcall
mov
and
btr
js
nop
add
sub
clc
sbb
xor
fsub
stos
loope
mov
dec
mov
or
addl
js
outsb
fstpt
and
daa
push
js
fadds
push
push
xchg
ss
sub
test
mov
adc
push
or
or
push
and
jle
and
jmp
adc
inc
loopne
jnp
mov
dec
mov
lret
inc
dec
mov
sub
lods
daa
cli
push
ret
pusha
mov
dec
xchg
fdiv
jl
gs
xchg
xor
adc
inc
mov
mov
sub
jns
in
rolb
adc
in
aad
pop
cmp
pop
lods
adc
ss
popa
xchg
les
jns
movl
pushl
jne
and
xlat
ljmp
std
stos
mov
cmp
inc
ret
test
popf
inc
mov
xor
rolb
out
dec
add
into
adc
xchg
push
inc
or
adc
daa
jle
mov
shr
hlt
cmc
sarb
loop
nop
xor
lock
jl
scas
add
imul
adc
sbb
dec
add
ficomps
mov
das
inc
inc
rcl
jo
mov
lahf
mov
pusha
sub
xor
mov
sbb
xchg
inc
call
sub
jmp
inc
lods
lods
xchg
movsb
xor
mov
lret
inc
popf
jne
sbb
enter
repnz
inc
dec
pusha
and
in
cltd
xorb
inc
mov
rclb
pop
outsb
ret
push
push
xor
jp
fcomi
xlat
out
xchg
negl
mov
jne
xchg
or
sbb
cmp
cmp
out
mov
addr16
adc
pop
int
xor
mov
inc
add
stc
std
call
mov
jle
or
xchg
or
loopne
xchg
mov
pop
jmp
pop
add
jo
adc
jecxz
or
enter
pop
jg
or
imul
xchg
add
inc
sarl
sbb
aas
imul
cli
ret
xor
jmp
add
sub
add
push
pop
test
cs
mov
push
jb
and
mov
sti
mov
jmp
sub
inc
out
cmp
and
mov
push
adc
enter
shll
jmp
sub
sbb
outsl
pushf
pop
shrb
jb
jno
mov
or
lods
cwtl
pushl
jo
loope
jecxz
add
inc
mov
mov
xor
jg
jmp
cltd
cld
les
mov
idiv
sbb
mov
pop
sbb
xchg
mov
les
fnstcw
incb
cmp
mov
xchg
jns
lret
jge
hlt
enter
in
inc
not
popf
ljmp
int
and
push
std
jno
and
inc
mov
mov
xchg
cs
test
cmp
xchg
std
cmp
leave
int3
movsb
addl
cmc
push
rol
leave
and
jb
fwait
pop
fs
into
push
mov
nop
push
mov
push
and
mov
jg
fadd
inc
lret
or
loopne
mov
inc
xor
pusha
and
pop
mov
xor
inc
ret
jb
iret
ds
idivl
lods
ja
lahf
pop
pop
inc
cltd
repnz
xor
dec
dec
cmpsl
nop
mov
mov
in
pop
je
push
mov
pop
stc
test
xchg
addr16
ret
test
repz
mov
mov
jb
mov
sbb
jp
clc
sbb
pop
cwtl
repz
cmp
out
in
inc
push
xchg
push
enter
lods
in
inc
inc
push
mov
hlt
pop
mov
sbb
adc
insl
mov
dec
es
push
stos
out
pop
xchg
push
outsl
fadds
dec
push
cmpb
cmp
adc
cwtl
adc
jge
lret
dec
stos
jno
mov
dec
push
mov
faddl
mov
sahf
or
dec
or
cmp
loope
dec
push
sub
rorl
je
pop
jge
ret
loopne
cld
inc
fldt
fs
cmp
xchg
inc
pop
push
int3
nop
or
lret
stc
jo
rorb
jl
lock
push
sarb
sbb
mov
push
jne
leave
mov
push
jbe
sub
les
mov
mov
xor
cld
sub
addr16
adc
mov
js
sub
inc
shlb
js
inc
mov
push
sub
pop
out
cld
mov
cmpsb
and
call
adc
popa
push
loop
test
imul
mov
cltd
sbb
mov
sbb
mov
es
js
cli
xor
inc
nop
jl
jnp
push
in
shll
xlat
sahf
in
push
sub
push
jns
lret
push
fcmovbe
mov
push
nop
mov
stos
mov
jne
dec
sbb
iret
xlat
jnp
xchg
sahf
pop
imul
fnstcw
dec
pop
das
testb
push
xor
jg
jge
cs
cmpsl
jmp
lret
lret
xchg
cs
mov
lcall
xor
insl
ret
and
mov
and
fcompl
inc
flds
lock
inc
les
pop
add
pop
scas
sub
sbb
xchg
test
test
lret
sbb
jecxz
dec
cmc
mov
mov
mov
mov
push
xchg
xchg
popa
cmpsb
and
sbb
out
lret
outsl
pop
jbe
push
jae
jge
mov
jo
push
notl
mov
cmp
test
lods
xchg
dec
call
inc
fisubrl
daa
pushf
inc
mov
or
fdivs
loope
ss
dec
jo
aam
sub
or
inc
rcr
dec
xlat
sub
int3
ds
int
insb
push
sub
lahf
dec
xchg
gs
stos
lds
sbb
into
ljmp
int
int3
or
je
inc
or
ljmp
jbe
pop
xchg
jg
or
iret
sub
ret
push
out
dec
out
sub
push
add
cli
loop
cltd
push
cwtl
fadd
and
and
xorl
add
lret
sarl
shr
jmp
jnp
out
int3
adc
adc
cmpsl
sar
mov
aaa
imul
hlt
xchg
popf
ror
pushf
aaa
cmp
mov
bound
gs
addl
sub
ja
pop
cmp
adc
mov
add
or
mov
imul
push
jbe
inc
add
cld
dec
pop
cltd
fisttpll
insl
and
les
mov
leave
outsb
inc
push
fs
jne
push
repnz
push
inc
mov
stos
outsl
lock
mov
xor
dec
not
cmc
jmp
inc
rorb
add
jg
and
mov
inc
inc
movsl
sub
xchg
jne
cmpsl
dec
cmp
iret
fnstenv
mov
inc
cld
jae
ror
pusha
add
int
dec
sahf
mov
out
jge
add
test
add
jg
inc
jecxz
je
push
popf
and
sub
adc
nop
add
add
cli
xor
and
cmp
iret
cmp
sbb
arpl
adc
call
dec
adc
jnp
lcall
dec
jecxz
scas
cli
cmp
scas
mov
mov
popa
int3
xchg
inc
into
jne
dec
mov
flds
stc
xor
pop
jle
xchg
mov
inc
rolb
arpl
add
mov
sbb
mov
mov
push
out
test
xchg
clc
or
xor
mov
call
jl
in
cmp
mov
lret
dec
xchg
sahf
mov
pop
shll
loopne
push
scas
aaa
outsl
test
adc
daa
inc
jle
pop
imul
cmp
sbb
pop
in
xor
cmp
or
pop
scas
aad
push
mov
inc
xchg
aas
xchg
js
xchg
sub
pop
xlat
aas
xchg
cmp
mov
mov
cmpsb
inc
cmc
pop
jl
cmp
sub
adc
inc
or
lahf
cli
out
jnp
sub
repz
fiaddl
repz
xchg
vmptrld
stos
jge
inc
xchg
lcall
test
repnz
mov
pop
cmpsl
and
cmp
repnz
iret
sbb
popf
test
dec
in
pop
into
adc
add
sub
xor
stos
add
mov
xor
mov
or
sbb
xchg
cmp
pop
mov
xchg
icebp
jecxz
inc
push
push
stc
hlt
xchg
mov
push
loop
lods
sbb
cmp
fs
sbb
int
pop
stos
sub
hlt
dec
sub
xchg
xor
fdivr
nop
mov
pop
push
aam
lea
xchg
xchg
in
pushf
enter
xchg
push
sbb
and
jno
dec
mov
adc
add
ret
xchg
xchg
lods
stos
cmp
nop
or
scas
mov
mov
xchg
loopne
popf
xchg
or
aaa
mov
pop
xlat
jno
adc
push
cmc
dec
pop
push
pminsw
imul
pop
inc
xchg
cmc
mov
xchg
jle
xchg
cwtl
aad
push
mov
sub
in
cwtl
inc
push
jp
cmp
sub
pavgw
pop
add
and
pop
jl
bound
adc
push
sub
in
lcall
sbbl
cmp
xor
ret
jle
pop
xor
leave
sbb
outsb
push
loope
jae
push
js
fcompl
sahf
ss
cmp
xor
dec
fisttpll
sub
inc
cmpsb
jge
sti
cmp
sbb
sbb
lods
xchg
ror
sbbb
mov
inc
push
push
jae
mov
cmc
or
push
cmp
in
mov
add
mov
out
inc
and
gs
out
push
jl
xor
mov
dec
jp
test
sbb
aad
inc
mov
lock
push
fs
movl
sub
cli
ja
mov
fidivrl
mov
je
cmp
sbb
pop
int3
xor
ficoms
mov
bound
jnp
outsb
or
roll
ja
stos
cmp
add
out
xchg
testb
inc
std
push
xorb
mov
subb
lds
adc
mov
adc
cmpsl
mov
fwait
lods
cli
jle
in
sub
fsts
ret
mov
repz
lret
jecxz
popa
clc
inc
mov
int
std
dec
enter
fsts
jle
jp
fsubrl
cmp
mov
and
sub
push
test
lret
sub
je
adc
psubq
sbbb
add
push
ljmp
jp
pop
outsb
pop
push
imul
test
in
cmp
mov
sbb
adc
into
loopne
int3
pop
orb
or
test
xchg
fidivl
xchg
sbb
cs
imul
fmuls
inc
adc
in
imul
aad
sarl
mov
enter
ret
push
adc
lcall
jno
iret
jp
movsl
ljmp
js
int
sub
iret
and
mov
jno
stos
add
gs
add
sbb
sar
stos
mov
repz
cmp
fwait
pusha
xchg
imul
dec
fldt
mov
pop
lock
js
cltd
outsl
mov
mov
lcall
mov
cmp
stos
mov
cwtl
mov
gs
lods
add
arpl
cmpb
mov
shl
sti
aaa
out
dec
pop
dec
pop
jg
fadds
aas
xchg
dec
out
fdivrl
cmp
push
roll
cmc
jg
shrl
pop
in
cmp
in
call
fstl
cmpsl
push
jb
inc
add
sbb
and
js
jb
bound
jle
fcoms
aad
shr
push
fsub
dec
test
fwait
dec
addr16
test
fnsave
mov
out
adc
imul
js
mov
push
scas
mov
cli
mov
fistpll
pop
andb
inc
xor
rclb
enter
jle
stc
pop
or
ljmp
in
scas
cli
shlb
mov
les
mov
sbb
adc
inc
inc
cmp
inc
pusha
popa
sub
hlt
mov
add
bound
je
lock
pop
cwtl
jnp
xchg
xchg
xchg
int
insl
jle
mov
arpl
xchg
mov
into
das
dec
inc
mov
or
xchg
in
mov
lcall
sub
outsb
dec
movsl
jne
pop
adc
mov
ja
frstpm(287
jnp
subb
into
iret
inc
imul
sarl
shrb
aaa
mov
into
mov
cmp
inc
pushl
in
pop
mov
sub
popf
inc
mov
js
mov
sysenter
orl
test
fildll
xchg
ss
pop
or
in
add
xor
mov
add
fsin
ret
fsubl
pop
movsl
or
leave
sbb
icebp
sahf
jge
jns
insl
push
pop
or
outsl
and
rcrl
data16
and
inc
fwait
push
movl
pop
xlat
test
imul
ret
outsl
mov
cltd
push
addl
test
xchg
movsb
rcr
pushf
push
imul
cmpsb
mov
pushf
loop
clc
pop
cmp
mov
ds
outsb
fsts
or
fstpt
mov
addr16
mov
std
mov
out
add
mov
ljmp
insl
mov
inc
movsb
mov
ja
aas
adc
sbb
cmp
mov
or
sub
lods
mov
xor
out
cltd
xchg
call
jae
inc
or
sub
pop
xchg
cli
or
pop
pop
inc
subb
adc
jo
fldt
fcmovnu
sbb
jnp
and
lcall
cwtl
cmpsl
jl
mov
and
iret
scas
popa
jg
add
push
fs
pop
pop
push
ret
lret
fldt
fucompp
repz
or
adc
adc
pop
in
jge
stc
mov
aaa
popa
ret
or
or
adc
test
or
mov
paddw
inc
push
mov
leave
dec
cmpsb
fmuls
movsb
jg
add
jg
xchg
cs
popf
scas
sarb
adc
stc
std
rcrl
rcl
mov
jle
mov
pop
mov
insl
or
pcmpgtb
les
lcall
ljmp
ljmp
cmp
mov
pop
fisubs
sub
ljmpw
cltd
mov
stos
adc
fildll
sbb
mov
sub
mov
js
mov
movsl
les
cmp
loope
lret
push
push
cmp
mov
and
dec
jl
je
jmp
add
pop
jnp
ret
pop
sub
sbb
pop
rcl
sbb
xor
inc
push
mov
dec
loopne
cmp
mov
ljmp
ljmp
add
shr
dec
dec
adc
mov
aam
cmpl
jmp
imull
mov
lea
out
insl
ss
loop
nop
cmp
dec
jge
mov
packssdw
incl
ret
outsb
xor
xchg
icebp
push
jl
pop
lret
nop
daa
sbb
xchg
jp
sub
pushf
add
jl
inc
sbb
mov
xor
sbb
or
leave
xchg
sub
or
mov
popa
and
cmp
rol
mov
rcll
je
or
fwait
inc
scas
pushf
fnop
add
sbb
ret
cld
addr16
lods
push
dec
into
mov
mov
das
pop
or
stc
aad
add
mov
mov
cmp
adc
jae
movntq
out
pushf
fnstcw
mov
and
mov
dec
test
push
stc
ss
outsb
test
add
popa
sar
into
jmp
repz
into
dec
sub
dec
stos
ds
sbb
lahf
fmull
xchg
sbb
and
jns
xchg
movsl
mov
js
or
imul
jo
js
aam
push
sar
loopne
test
faddp
mov
jmp
push
jnp
sub
fucomi
loopne
inc
jmp
jbe
jne
pop
in
pop
js
pop
xchg
dec
pop
inc
dec
xchg
aaa
js
jmp
mov
dec
inc
add
xchg
mov
fbstp
or
mov
lcall
jnp
push
mov
divb
dec
outsl
loope
sbb
mov
repnz
stos
mov
mov
cmp
jecxz
dec
imul
aas
repnz
mov
inc
adc
loope
vpcmpgtw
cltd
sbb
mov
clc
inc
in
mov
out
sbb
scas
or
push
sbb
inc
fnstsw
push
xchg
jnp
push
test
dec
cmpsb
aaa
xor
aad
movsl
insl
pop
and
push
sti
daa
shll
push
imul
ss
fcoml
mov
jmp
inc
mov
cmpsl
call
in
and
xchg
jbe
mulb
adc
shr
sbb
clc
loopne
andl
out
testb
dec
fsubs
fidivrl
sbb
mov
addr16
rcl
add
in
ret
aaa
mov
mov
aad
dec
cli
aad
out
fistl
fisttps
fists
xchg
and
inc
aas
add
fstps
inc
scas
daa
lcall
jmp
fdivl
mov
scas
cmp
loope
jg
xor
xchg
aas
lret
sbb
add
sub
cmpsl
nop
in
jle
loop
inc
fiadds
dec
push
push
iret
mov
sti
addr16
movsb
loope
jg
fcmovnb
arpl
data16
enter
into
jae
mov
lcall
lock
xchg
mov
insb
jns
and
lcall
insl
roll
inc
pop
pushf
cs
out
outsl
test
fistpll
inc
test
push
mov
push
sbb
push
jmp
rcrl
lret
lcall
rclb
add
test
frstor
xlat
push
dec
pushf
shl
xlat
pop
lds
adc
sbb
or
fnstenv
pop
lds
dec
inc
push
push
xchg
cmpl
and
inc
mov
inc
cmp
adc
ret
inc
dec
rcrl
xor
sarb
insb
test
or
les
jns
adc
adc
aad
cld
inc
fiaddl
sbb
sub
jae
hlt
xchg
jecxz
ljmp
fnsave
cmp
roll
stc
inc
roll
dec
sbb
mov
insb
fucom
les
and
test
pop
js
jne
or
dec
push
mov
pop
fwait
cld
or
mov
jmp
rcll
jnp
dec
inc
popa
mov
out
lret
out
testb
jno
push
jmp
arpl
mov
rorl
es
cmp
scas
movb
sti
push
es
aam
xchg
fbstp
dec
xlat
dec
mov
mov
xchg
and
and
jp
sbbb
push
mov
icebp
enter
repnz
cwtl
or
dec
lahf
loop
sarl
pop
shrb
ret
adc
sub
hlt
in
jecxz
push
aas
sbb
mov
cwtl
mov
inc
stos
adc
repnz
mov
mov
cltd
and
inc
bound
movsb
cmp
gs
cmp
aaa
add
cmp
lahf
iret
je
or
clc
insb
in
xor
in
push
xor
fimuls
test
arpl
fsincos
and
js
imul
ror
fdivrp
rcrl
xchg
mov
mov
loop
adc
sub
jb
nop
or
adc
adc
pop
out
xchg
and
aad
fists
data16
mov
in
je
pop
in
mov
and
repz
xchg
inc
in
adcl
sti
pushf
enter
pushf
ljmp
cmp
sub
jp
aaa
int3
leave
sti
mov
xchg
ficoms
cmc
sub
rclb
jmp
jns
and
mov
clc
test
movsl
das
mov
mov
xor
mov
mov
pop
lock
push
stos
xchg
movsl
xor
ret
int3
hlt
pop
add
push
adc
icebp
js
mov
mov
push
outsb
mov
js
hlt
syscall
nop
sarb
and
dec
cmpl
ret
adc
mov
insl
movsl
pushf
outsb
mov
sub
mov
and
cld
push
int3
mov
call
stc
test
pushf
insl
rcll
xchg
push
shll
push
notl
mov
lret
adc
cmpb
das
xchg
scas
out
mov
cmp
push
sbb
mov
sub
insb
push
pop
adc
add
push
shl
push
adc
and
pushf
ret
ret
cs
js
mov
imul
pop
data16
xchg
push
arpl
push
or
push
lods
loopne
or
adc
lock
mov
je
cmp
cmp
fcoms
push
imul
xor
pusha
shl
dec
mov
pop
push
pushf
and
daa
shrl
dec
and
push
fnstsw
or
sub
lret
pcmpgtw
je
lods
aas
inc
sahf
fisttpl
ljmp
adc
xlat
add
sub
loope
loopne
pop
cwtl
stos
and
pop
lret
mov
pusha
testb
dec
adc
inc
xchg
push
push
mov
push
and
repnz
jne
xor
push
cld
push
repz
sbb
aas
dec
fistpll
and
dec
dec
adc
sub
stc
js
test
jle
add
inc
cmp
mov
mov
sbb
jae
and
or
mov
ret
mov
into
je
cmpsl
or
jl
sbb
push
push
mov
mov
shlb
ret
xor
iret
sub
hlt
or
pop
sbb
ds
and
xchg
movsb
fwait
mov
fstps
jp
inc
sarl
in
lret
add
imul
cmpb
cmp
test
or
in
testb
int3
or
mov
push
call
addr16
ss
push
dec
cmp
jns
pop
fstpl
sbb
scas
movsl
loopne
sar
mov
stc
ljmp
fs
das
addb
loop
sub
cmovbe
dec
adc
out
mov
mov
adc
pop
mov
push
cs
push
sbb
mov
cli
stos
xchg
fimuls
jecxz
pslld
and
dec
and
or
orb
jecxz
test
stos
sbb
push
int
dec
dec
ss
dec
movsb
ret
mov
cmpsb
add
add
cmp
lods
shlb
push
rorb
int3
mov
jns
lret
imul
sub
push
cmp
in
or
out
cmp
jo
xor
jbe
mov
xlat
add
in
lea
xlat
jecxz
cwtl
jae
jne
cmp
fcomp
inc
lcall
or
mov
sub
das
into
loop
arpl
data16
cmp
sarb
sub
sbb
xchg
lret
pop
rorb
inc
xchg
mov
and
pop
arpl
lret
daa
inc
repnz
lret
addr16
rcrl
sub
jno
jp
iret
adc
inc
adc
mov
or
leave
iret
mov
notl
push
pop
jl
jae
jnp
fwait
mov
pop
pushf
outsb
push
add
mov
and
cwtl
cmp
mov
inc
inc
out
jb
outsb
ds
pop
mov
addl
test
repz
mov
lcall
sub
sub
mov
dec
pushf
shl
sbb
lret
faddl
cmp
sub
and
pusha
clc
xor
sbb
mov
fldenv
decb
cld
lock
jo
pop
lds
xor
dec
stc
sbb
stc
and
ljmp
sub
fs
sbb
push
fcmovne
scas
mov
or
rolb
and
inc
test
test
aad
push
adc
cltd
mull
js
jo
jge
outsb
push
lret
sbb
cld
aam
shll
add
clc
cmc
ret
inc
icebp
scas
lret
mov
or
inc
outsl
mov
arpl
pop
pop
sti
sub
xchg
jae
cs
mov
rol
push
loopne
inc
sub
lock
lahf
in
sub
mov
mov
add
xchg
xlat
pop
test
mov
popa
ds
add
imul
sub
cmp
pop
cmp
test
push
nop
sbb
pushf
sub
jecxz
xlat
or
sahf
cmpsl
adc
xchg
cmp
mov
aam
out
imul
test
add
sub
outsl
inc
jb
jnp
add
out
lahf
les
dec
dec
mov
decl
sub
mov
enter
or
dec
out
sti
add
jp
pop
sub
inc
xor
addr16
sub
push
adc
xchg
lret
mov
ja
lods
mov
xor
int3
lds
inc
leave
hlt
in
sub
popa
cli
xor
ret
clc
jge
add
decb
jb
sti
andl
out
mov
decb
aaa
mov
and
mov
adc
adc
jae
sti
jmp
push
movsl
dec
adc
sbb
add
addr16
inc
pop
jb
arpl
arpl
aad
ficoms
outsb
daa
ret
enter
cld
push
push
cld
mov
in
addb
loop
das
imul
test
gs
mov
pushf
fistps
rsm
xorl
xchg
add
movl
std
mov
pop
out
pop
ficompl
pop
ljmp
cmpsb
out
jno,pt
mov
mov
ljmpw
adc
sti
movq
mov
ljmp
inc
dec
les
xor
jl
mov
lea
xor
xorb
xchg
push
dec
and
push
push
sub
ret
int3
inc
sbb
fadd
rolb
dec
in
lods
fs
jge
sub
int3
lahf
cmpb
ljmp
loopne
mov
aas
mov
cltd
jae
xchg
ds
int
push
popa
push
addl
mov
imul
outsb
insl
ss
ja
mov
jns
jecxz
mov
pop
sahf
dec
in
xor
and
out
scas
ss
pushf
mov
push
cmp
ja
mov
enter
test
ja
outsl
int
jle
in
dec
add
jbe
and
insl
cltd
xor
sbb
mov
mov
cmp
sub
adc
fstpl
sbb
mov
rcl
roll
clc
pop
div
test
into
mov
stos
sbb
push
in
jmp
jmp
popa
repz
shrl
pop
cmp
stos
and
ret
add
popf
roll
mov
inc
aaa
lret
push
add
or
mov
pop
test
pop
aad
clc
xchg
mov
jb
jns
leave
xchg
pop
insb
and
in
push
fdivrs
outsl
xor
leave
sti
pop
push
dec
in
je
addr16
outsb
andl
mov
inc
dec
jns
pop
in
cmp
add
dec
jb
lods
adc
loopne
sbb
fcomps
aas
aas
mov
js
inc
jmp
pop
lahf
cli
xor
stos
into
sbb
lods
popa
stos
sbb
lds
jg
add
leave
lahf
or
xchg
cmpsl
leave
pop
xchg
mov
addr16
aam
cltd
pop
pushf
sbb
or
mov
loop
push
cmpsl
out
inc
xchg
pop
loop
xchg
add
loope
pop
xchg
mov
shrb
mov
test
mov
sub
mov
repz
mov
inc
leave
jge
cmp
rcll
addr16
les
shrb
lds
jp
mov
movsb
jns
push
jb
jns
mov
fisttpl
ja
xorl
mov
add
push
push
icebp
mov
ror
into
ficoms
cmpsb
or
pusha
pop
movsb
dec
outsb
and
out
mov
mov
jne
cmpl
mov
fisttpl
push
xchg
sub
int3
cmp
ljmp
jae
loop
inc
call
pop
jne
jne
pop
cmc
and
scas
lahf
pop
add
mov
and
popf
outsb
fwait
mov
cli
or
test
sarb
pop
xor
sbb
in
repnz
sahf
stos
mov
mov
cs
mov
push
shlb
sti
mov
jp
aaa
scas
push
gs
test
mov
ja
dec
popa
aam
inc
push
push
out
pop
sti
pop
sub
subb
test
jno
jns
enter
xor
mov
xchg
sti
and
mov
jb
sbb
sub
in
adcb
pop
idivl
mov
cltd
pusha
cld
mov
adc
cmp
gs
xor
adc
and
add
loope
add
pop
inc
sti
lahf
out
push
xchg
aas
lret
out
mov
jecxz
mov
jne
in
mov
xchg
iret
push
mov
sbb
xchg
pop
jmp
push
cld
inc
ja
hlt
dec
mov
iret
hlt
mov
xor
mov
int3
sub
sahf
dec
sub
dec
cld
repz
add
popf
xor
iret
dec
lret
push
mov
es
fsub
jg
notb
sbb
outsb
or
jmp
xchg
push
loopne
and
add
adc
stos
enter
sahf
outsb
pop
push
lret
mov
jge
repnz
mov
pop
or
mov
fldcw
clc
xor
imul
xchg
popa
sarb
cmp
fcoms
push
mov
push
nop
movsb
test
inc
mov
fwait
sub
xor
mov
gs
push
mov
inc
sub
adc
addr16
sub
lock
outsb
jmp
push
push
fsubs
mov
mov
pop
out
fdiv
es
cmpsl
pop
adc
jnp
pusha
arpl
lods
ret
jp
sub
adc
add
out
adc
fisubs
jnp
les
add
scas
pop
rclb
or
mov
sub
add
pxor
mov
out
add
imul
int
jecxz
mov
push
fs
mov
xchg
orl
shrl
daa
push
cmp
test
pusha
add
out
bound
and
scas
ljmp
jle
cmpsl
xor
cli
cmp
add
add
rorl
addr16
add
pop
push
add
movsb
lret
out
mov
mov
adc
negb
shlb
imul
push
push
popa
jo
imul
pop
out
push
jbe
dec
mov
or
jns
inc
les
jmp
cmc
and
bound
cmp
pop
mov
or
aas
push
lret
xor
popa
out
mov
shll
mov
mov
and
ret
inc
add
push
lds
sub
xor
fadds
push
lods
test
jbe
jae
jl
jecxz
pop
je
fidivl
arpl
dec
into
cmpsl
pop
dec
outsb
je
fistps
push
push
jp
or
imul
dec
and
fdivrl
mov
data16
mov
jne
xchg
mov
testb
dec
xchg
pushf
call
enter
psrld
sub
mov
scas
adc
add
gs
idivl
test
cmpsb
lcall
mov
cli
dec
adc
cmpsl
mov
cwtl
dec
mov
mov
fcoms
and
into
lret
sub
push
imul
and
loopne
in
test
adc
stos
push
xor
js
push
arpl
jl
mov
cs
and
repz
xor
mov
aam
fdivr
popf
pop
fisubl
mov
lret
and
mov
pusha
repnz
mov
sti
aas
cmp
out
cmp
mov
ret
popf
outsb
cli
bound
imul
mov
cmp
dec
cmp
ljmp
pop
mov
mov
push
and
sub
mov
and
sysexit
and
pushl
test
fwait
lods
inc
inc
mov
stos
mov
xchg
icebp
movsb
mov
arpl
jl
dec
and
ret
sub
lret
adc
stos
push
push
or
dec
jp
sbb
adc
mov
mov
or
jecxz
sbbl
mulb
push
sbb
adcb
pop
lea
sti
rcrl
pop
sbb
fimull
dec
xor
dec
in
add
pop
nop
jmp
add
test
les
in
sbb
fimuls
xor
push
outsl
mov
mov
inc
les
mov
mov
pop
scas
or
cmp
mov
es
inc
sarb
sub
mov
push
aam
pop
cmp
fsubl
dec
adcb
sarl
inc
add
lret
xorl
push
sbb
stc
pop
xchg
sbb
adc
ret
ds
cmp
xor
or
fstpt
xorb
scas
cmpsb
fidivrl
mov
lds
mov
lahf
dec
adc
cmc
adc
sub
test
data16
imull
movsw
pop
hlt
adc
addr16
rcrl
fcoms
mov
test
mov
rolb
std
sbb
mov
cmp
add
jb
mov
out
scas
aam
fs
dec
std
out
rclb
xlat
movsb
xchg
jmp
mov
or
inc
adc
pop
bound
jmp
jmp
in
push
test
inc
stc
pop
mov
cld
imul
pop
dec
out
addr16
loope
lret
mov
pushf
hlt
jo
sbb
xor
jp
cmp
rcl
dec
out
ret
in
adc
cld
out
jns
jne
mov
cwtl
mov
jge
xor
test
sub
fistpl
dec
pop
test
and
lret
data16
into
cmc
xor
inc
xchg
xchg
cmpsb
and
push
scas
push
jmp
movsb
arpl
lcall
adc
sti
cli
and
pop
daa
in
ret
inc
loop
mov
je
dec
out
mov
ret
push
pop
mov
dec
xor
xchg
mov
push
aaa
sbb
push
adc
add
fbld
leave
sub
or
ds
push
cmp
es
negb
add
mov
call
popf
mov
enter
and
inc
jl
jns
sbb
adc
inc
cmc
sti
arpl
and
sbb
pop
cmp
jns
aad
pop
push
pop
sub
ja
jo
xor
leave
rcr
rclb
bound
jmp
stos
ljmp
xlat
lock
pop
test
mulb
int
inc
or
loopne
and
inc
push
lock
test
leave
push
jno
xchg
xchg
mov
jns
testl
dec
xchg
pop
push
xor
call
push
and
dec
xchg
and
call
adc
pop
int
clc
jne
mov
or
jmp
jnp
stc
sbb
jnp,pt
mov
sti
subb
cmp
ret
lock
push
push
dec
mov
cmpb
or
std
sub
pop
stos
push
stos
sub
jp
mov
xor
loopne
enter
cmovp
pop
lahf
push
lods
outsl
jno
mov
int3
ljmp
sub
dec
out
jp
in
mov
sub
pop
or
and
dec
xchg
bound
rcrb
inc
jae
lahf
punpcklwd
sbb
fbstp
pop
addr16
mov
pop
xchg
fptan
lods
cmp
mov
mov
inc
shlb
cmp
ja
push
sahf
sbb
jno
lcall
stos
pop
jmp
scas
movb
inc
pop
imul
pushl
ret
rcll
sbb
or
cmpsl
jns
pop
lds
lcall
sub
pusha
in
sub
popa
xchg
notb
cwtl
adc
je
xchg
rcrl
sti
jl
repnz
lock
xchg
and
out
aas
int
pop
mov
imul
lock
daa
jmp
test
int
ds
je
test
addr16
xor
or
aad
xchg
mov
adc
sub
push
call
fwait
lea
and
jae
test
sahf
sbb
shl
jge
pop
xchg
popa
insb
ds
mov
shrl
addl
cmp
gs
mov
sub
sbb
int3
imulb
cs
inc
sub
rorl
sti
pushf
xchg
mov
outsl
sbb
arpl
jl
cmc
icebp
push
xchg
mov
repnz
rcrb
or
dec
push
push
jo
dec
xor
shl
lea
mov
loop
dec
sbb
sarl
jp
jecxz
push
aam
popa
jp
out
ret
xchg
mov
pop
in
xchg
test
pop
fildll
das
in
ret
out
add
mov
or
pop
or
outsb
inc
adc
pop
xor
adc
in
in
jg
sbb
add
pop
cmpsl
jg
data16
int
add
lret
lret
test
xchg
mov
mov
imul
inc
std
lea
mov
fistpl
adc
sub
mov
cwtl
cli
cmpsl
stc
movsl
xchg
mov
ljmp
pop
jbe
xor
jbe
sub
xor
mov
js
sbb
jae
push
jb
int
out
jecxz
dec
aaa
jge
sub
mov
dec
xor
adc
cld
sub
jmp
push
cld
push
fisubs
sub
shl
dec
sub
fwait
and
inc
sub
or
push
arpl
ljmp
fistps
xchg
xor
mov
pop
mov
xchg
enter
dec
push
jl
hlt
mov
jg
cmp
pop
pop
sti
in
xorb
sub
arpl
aas
adc
inc
push
mov
inc
pop
lods
xorl
jg
pop
push
xchg
mov
pop
sub
faddl
iret
adc
mov
scas
ss
les
aad
stc
outsl
or
dec
cmp
clc
imul
outsb
cmp
stc
pop
pop
divl
xchg
push
add
push
adc
jp
dec
mov
movsb
or
mov
add
sub
inc
mov
adc
xor
push
movsb
cld
icebp
imul
icebp
xor
bound
add
or
popf
jne
mov
pop
push
out
in
push
add
lret
xor
fisttpl
and
and
mov
cmp
adc
cld
shrb
call
inc
cmp
loope
jae
insb
pop
push
mov
jnp
pop
mov
push
std
pop
fildl
jmp
clc
or
add
rcll
gs
adc
imul
push
or
jnp
mov
clc
push
cmp
mov
sbb
pop
push
cmp
fmuls
mov
dec
push
jecxz
rcr
and
add
lahf
push
pop
fidivrs
stos
lret
push
cmc
cmp
pop
scas
ret
out
jg
sub
in
ja
pop
loop
in
cmp
popf
sbb
fs
cmp
arpl
push
test
pusha
aad
push
out
and
push
add
pop
inc
jle
insb
xchg
call
leave
or
fwait
in
pop
or
jmp
enter
inc
sbb
aaa
dec
jp
xlat
js
stos
xor
pop
jl
test
imul
push
pop
mov
sbb
adc
scas
icebp
jns
lahf
ds
cmp
and
lods
stc
scas
sub
mov
add
add
lahf
dec
pusha
mov
cmc
add
xorb
pop
sub
mov
xor
jo
es
dec
sbb
aaa
mov
notl
dec
sar
and
pop
xor
cli
push
imul
rcr
jnp
test
mov
mov
test
stos
xor
dec
push
inc
mov
push
or
cmpsb
pop
sub
mov
ljmp
inc
iret
mov
neg
push
mov
xchg
mov
pop
out
stos
or
and
mov
dec
lret
pop
mov
push
sti
idivb
fcompl
rorl
push
lea
adc
fstpl
loopne
push
insl
aad
movb
jnp
insl
mov
popf
sti
imul
push
adc
movsl
cmp
call
popa
fsubrs
xlat
dec
sbbb
sub
pop
into
push
pushf
sub
mov
xchg
aad
in
push
dec
and
jecxz
dec
movb
xchg
mov
out
dec
nop
sub
lcall
mov
ja
mov
xchg
enter
ficompl
add
mov
hlt
mov
iret
push
cmovae
nop
inc
into
adc
or
repnz
sbb
lahf
leave
stc
sbb
jnp
cld
ficompl
mov
and
mov
hlt
mov
sub
out
movsl
addr16
data16
sbb
rcrb
jge
ljmp
mov
mov
mov
cmp
mov
ret
loopne
lcall
imul
add
jl
lcall
xlat
arpl
imul
add
fucomi
cmpsl
aam
orb
aas
popf
add
and
inc
and
mov
mov
inc
add
or
nop
mov
stos
loop,pt
mov
mov
push
lret
popa
mov
mov
dec
aad
adc
ss
pop
and
subb
cmpl
lock
cli
mov
xchg
lcall
ret
cmp
stos
xchg
xchg
push
adc
ss
stos
or
lret
fsubrs
dec
mov
clc
shrb
dec
lret
in
push
cmpb
outsb
nop
mov
lods
inc
int
jns
js
cmpsb
fistps
push
outsb
lods
cmpsl
mov
xchg
in
neg
repz
fstpl
cltd
adc
mov
leave
jmp
les
pop
cmp
test
lock
cld
jp
mov
cmc
jecxz
sub
pushf
add
lret
fnstsw
cmp
or
pop
in
cmp
mov
dec
pop
mov
movl
mov
es
and
lahf
add
xor
outsb
mov
lret
insb
xchg
push
lds
pop
ret
push
adc
xchg
jp
insl
data16
jmp
outsb
gs
xor
sti
add
addr16
xor
ds
js
xor
shlb
inc
lret
aad
inc
adc
popf
paddq
lret
inc
and
push
add
jnp
mov
mov
dec
mov
out
push
pushf
pop
int
loope
repz
mov
mov
lahf
ja
shl
stos
cld
imulb
jne
sub
fwait
xor
test
push
cmp
outsl
cmc
outsb
bound
jno
aas
jmp
fwait
iret
cmp
or
mov
push
pop
add
fcmove
push
push
or
cmp
mov
and
sub
int3
imul
das
mov
insl
jne
mov
sbb
push
jmp
lahf
out
ret
dec
cli
int
loopne
cmp
popf
fdiv
popa
xor
sti
mov
jmp
pop
lds
pusha
lods
xlat
mov
mov
cmpb
mov
push
adc
and
cmp
or
movsl
pop
popa
js,pt
out
mov
fidivs
loope
jl
mov
mov
xchg
or
adc
es
mov
xor
int
jbe
push
daa
outsl
xor
cld
mov
pop
mov
call
xor
rep
add
rclb
jns
and
mov
inc
clc
sub
push
mov
es
int3
sti
push
dec
pop
pop
div
inc
cmp
fiadds
data16
leave
push
daa
ret
andb
xchg
sbb
jns
cld
and
sbb
and
addr16
outsb
pop
movsl
inc
mov
dec
push
lret
mov
scas
and
cmp
fs
pshufw
xchg
and
orb
inc
es
js
or
push
out
decb
leave
dec
push
xchg
popf
pop
cmpsb
jnp
inc
mov
mov
sar
jae
dec
clc
lods
mov
mov
xor
fimull
sub
sub
push
cld
outsb
mov
lret
cmp
mov
mov
leave
fisubrs
sbbl
sbb
mov
out
mov
lret
sbbl
or
or
andl
and
jp
mov
or
je
pop
std
inc
xchg
subb
mov
icebp
jecxz
mov
lcall
pop
int3
daa
xor
push
or
imul
and
xor
in
jp
iret
xor
push
repnz
jnp
push
xchg
xchg
das
mov
jge
mov
fistpll
js
cltd
cmp
gs
jmp
pop
lret
and
jnp
data16
mov
ds
or
nop
mov
push
mov
push
push
mov
jge
xchg
inc
or
aam
xchg
or
push
test
out
fmull
out
fisubs
aam
cli
loopne
jno
mov
daa
das
mov
cmp
mov
sti
add
int
cmp
mov
mov
and
jno
rolb
jecxz
adc
test
mov
lcall
lret
cmc
inc
outsl
stc
jp
ds
jle
movl
sub
stos
mov
mov
dec
cmp
pop
mov
adc
lea
fs
mov
jne
aad
lds
ljmp
sbb
sbbb
cltd
push
add
out
test
push
sub
rcrb
lods
out
data16
sti
js
dec
pushl
or
aas
or
dec
sbb
inc
jmp
pop
outsb
addl
jge
cmc
pop
imul
aaa
pop
sub
jno
loop
or
dec
pop
mov
add
popa
lret
sti
and
pop
aaa
jmp
ljmp
ret
push
adc
xor
test
adc
add
test
lods
dec
call
xchg
iret
xchg
push
mov
mov
inc
push
push
mov
and
cmp
jne
daa
add
pop
cltd
pop
cmp
jecxz
sbb
aam
das
mov
lahf
sub
imul
mov
cmpsl
or
xor
cmp
repz
es
adc
jg
cmc
mov
fbstp
push
cmp
mov
addr16
out
fidivs
dec
bound
dec
mov
sahf
xchg
xor
cmpsb
mov
and
cmpsb
ret
repz
call
push
mov
sub
xchg
xor
push
or
adc
add
push
das
jecxz
mov
or
aaa
adc
aam
hlt
cmp
cmp
es
repz
jbe
xor
xor
xchg
ss
push
arpl
push
ret
jle
fwait
repnz
adc
adc
adc
daa
cs
arpl
data16
out
xchg
xor
outsl
jp
xor
mov
sub
mov
mov
jge
push
inc
push
data16
scas
jle
xchg
gs
pop
dec
ret
loope
into
adc
repnz
ljmp
bound
in
cmc
dec
rorb
cld
lret
fldt
ret
jns
xor
cs
push
and
icebp
je
imul
hlt
clc
inc
inc
fidivrs
loope
call
mov
mov
into
sbb
imul
lret
xchg
bound
int
push
push
das
lods
or
mov
adc
sahf
out
push
mov
jmp
add
lods
adc
jge
or
popa
cli
testb
cmc
repz
imul
mov
cmc
insb
sti
fldl
add
pushf
jmp
sbb
shll
xchg
sub
mov
pop
mov
push
inc
orb
jp
subl
mov
mov
arpl
mov
lahf
mov
cmp
or
mov
arpl
xchg
loopne
xor
sbb
rorb
dec
mov
sub
loop
jge
ss
cmc
inc
xchg
sbb
jnp
jns
aas
leave
sbb
dec
push
mov
inc
cli
adc
sub
add
and
mov
sti
test
xchg
loop
jno
gs
fsincos
pop
ljmp
sub
push
sbb
fwait
in
jp
sub
pop
sub
pop
in
sbb
or
pop
mov
inc
sbb
push
jg
sbb
add
out
cmp
dec
cmp
mov
pop
dec
lods
jo
shll
lcall
mov
xchg
dec
pop
and
or
xchg
jle
add
mov
es
dec
loop
loop
das
test
aaa
gs
push
and
mov
loop
outsb
xchg
pop
out
xor
les
dec
lods
cmp
lahf
and
inc
and
push
mov
fldl
cmp
lods
loope
mov
inc
push
leave
xor
addr16
pushf
inc
mov
fisubl
xorb
jge
or
mov
and
inc
mov
dec
outsl
lret
in
adc
pop
jg
xchg
or
jns
mov
mov
aas
push
in
jecxz
imul
js
jmp
popf
bnd
shl
push
arpl
imul
stos
insl
aaa
stos
or
mov
mov
push
test
outsl
std
mov
jmp
pop
imul
push
mov
pop
sbbb
nop
fidivrs
xor
xchg
mov
jne
cmpb
popf
mov
mov
nop
or
jo
sbb
adc
pop
lcall
popf
lcall
sbb
pop
pop
scas
lea
daa
add
mov
cmp
inc
adc
mov
mov
aam
lods
adc
mov
push
xchg
sbb
push
sub
pushf
pop
lods
sbb
xchg
daa
into
call
add
or
in
fistpll
pushf
jae
setns
or
jge
aam
call
xchg
cmpsb
ret
cwtl
stos
iret
pop
xchg
ja
imul
dec
stos
ret
pop
xchg
clc
aam
jecxz
mov
stc
inc
xchg
xchg
call
popa
xchg
es
cs
pop
scas
lock
int
std
dec
das
push
jae
mov
jbe
jb
add
lahf
out
test
outsl
insb
push
scas
xor
and
int
mov
sub
scas
sbb
jne
mov
enter
jbe
aad
cmp
jbe
jbe
gs
fwait
or
test
sub
adc
jbe
push
pop
fdiv
icebp
ljmp
dec
sub
pop
pop
js
lods
mov
mov
cwtl
ficompl
mov
pusha
or
lret
pop
xchg
cs
adc
mov
adc
xchg
in
dec
imul
push
lds
and
sbb
add
lahf
scas
leave
fists
test
or
adc
cmp
xchg
pop
dec
mov
jge
lahf
lret
mov
pusha
enter
dec
aad
repnz
mov
fmuls
jo
in
movsb
cli
in
or
roll
cmpsb
push
xchg
or
and
xorb
scas
test
add
jae
xchg
rep
cwtl
nop
pusha
call
or
adc
mov
sub
jmp
push
sbb
dec
sar
loop
inc
push
push
ret
cltd
jmp
dec
pushf
insl
in
scas
cwtl
inc
pop
fs
andb
gs
lods
add
mov
cmp
add
popa
mov
cmp
ja
adc
fcomi
xchg
test
rcr
sub
out
jnp
mov
cwtl
xor
xchg
test
jnp
ret
int
mov
and
gs
mov
rolb
xchg
push
jbe
ss
add
into
jno
sub
xlat
lcall
push
gs
add
arpl
mov
mov
cmpsb
add
jns
sti
inc
push
lock
push
adc
loopne
in
mov
inc
stos
sbb
pop
xlat
jecxz
add
push
imul
mov
aas
jle
lret
sbb
je
sti
popl
repz
lods
mov
imul
rcl
push
inc
in
mov
push
mov
and
inc
sub
iret
cmpsb
sbb
pop
scas
mov
lahf
adc
popa
repz
pop
repz
cli
jle
or
ret
dec
mov
jp
mov
loop
push
rorb
ret
push
mov
pop
test
lret
scas
arpl
push
popf
arpl
out
movsl
pushf
sahf
jp
fdivl
mov
fimull
xor
sub
inc
cltd
movsb
rol
pop
mov
scas
adc
push
fisttps
cld
je
leave
add
push
out
clc
pop
scas
pop
jb
xor
xor
jmp
aas
rcr
loop
mov
data16
cwtl
rorl
pop
push
pop
test
adc
ljmp
inc
sub
mov
adc
pusha
mov
and
jbe
inc
cmpsl
xchg
cmc
out
fdivr
push
jp
xchg
sub
int
test
call
cmp
mov
dec
dec
adc
or
cmpsl
jbe
shlb
inc
mov
popf
add
sbb
data16
shl
pop
xor
das
fisubrl
push
fidivrs
clc
das
or
into
jne
push
and
push
cmpsb
subl
xchg
ret
cltd
xchg
cmp
xor
rcrb
fimuls
push
scas
xlat
inc
ja
inc
or
xchg
imulb
insl
dec
sbbb
sahf
mov
adc
mov
in
cmp
data16
sub
adc
sbbl
mov
or
lods
inc
addb
and
xchg
push
test
test
loop,pt
sbb
addl
lods
sti
hlt
hlt
mov
out
sub
dec
add
push
cmp
sbb
dec
negl
sbb
ds
sub
pushf
icebp
shlb
xor
mov
les
and
pop
or
rcrl
sub
mov
jg
repnz
stos
sub
jmp
mov
xchg
push
adc
loop
loope
fmull
ds
sub
rcll
mov
pop
inc
sti
mov
iret
sub
hlt
mov
into
popf
xor
xor
jecxz
lahf
notb
pop
pusha
add
sub
imul
xchg
pop
jae
push
inc
inc
cwtl
unpckhps
push
and
or
lods
lock
inc
aaa
ss
and
and
andl
mov
lock
cli
cltd
xor
xor
mov
loop
pop
cld
in
movsl
insb
aam
bound
icebp
ja
leave
mov
movsl
sbb
adc
jb
inc
cmc
aad
shld
lret
outsl
push
cmpsl
and
hlt
xlat
std
sbb
mov
sbb
mov
or
int
and
adcb
jmp
cmp
ss
lods
add
sbbl
cld
cwtl
arpl
sub
xchg
imulb
adc
mov
or
nop
dec
lret
loop
ret
push
xchg
xor
lods
jl
xor
insl
xor
add
rcrb
aam
lea
icebp
shl
push
dec
pop
jp
arpl
inc
bound
mov
shrb
scas
adc
fisubrs
xchg
ret
in
mov
cmpsb
push
jp
rcr
xor
popf
lret
cli
mov
mov
jnp
stos
orb
mov
icebp
call
in
mov
xchg
das
sbb
hlt
add
push
add
adc
sub
fyl2xp1
movsl
xor
test
lods
cwtl
jae
je
stc
mov
push
repz
test
in
sub
jb
jmp
insl
pop
mov
lret
rcr
out
jbe
xchg
or
pushf
jmp
jne
fldt
push
ret
mov
lods
xchg
pushf
mov
mov
andb
jp
repnz
xchg
mov
push
push
mov
jecxz
push
inc
push
out
xchg
int3
dec
ficoms
pop
adc
test
jnp
mov
daa
lret
push
ret
dec
mov
ljmp
mov
sbb
adc
jae
adc
cmpsb
lds
fistl
xor
xor
xor
subb
mov
popf
mov
jp
into
xchg
in
inc
daa
rcl
ror
xor
xchg
fstpt
int
enter
push
inc
add
and
bound
in
dec
mov
pop
repz
mov
movsb
div
push
mov
dec
push
test
mov
mov
mov
insl
fsts
cmpb
cli
mov
movsl
sub
pop
adc
xor
add
mov
jle
dec
mov
pushf
outsb
fs
cltd
imul
jnp
fwait
mov
add
outsl
lcall
jmp
scas
pop
rclb
add
add
and
xor
daa
jbe
icebp
shrl
mov
cmp
scas
dec
dec
push
shlb
cli
cltd
mov
repz
xchg
std
add
cs
dec
pop
jl
adc
lahf
shrl
das
je
loope
cmp
jle
test
push
sahf
jl
xchg
xchg
inc
lret
sub
shrl
mov
adc
test
in
add
jge
in
and
lods
jns
add
adc
jge
cmpsl
stc
push
cmp
out
rcll
lret
jecxz
pop
pop
mov
push
lock
jno
cmp
xchg
mov
sbb
sbb
hlt
mov
lret
stc
push
sub
xor
push
or
or
fwait
xor
loope
pop
xchg
scas
xor
icebp
insl
loopne
out
frstor
insb
fdivl
jnp
cs
incl
add
xlat
inc
shll
dec
push
inc
shrb
cmp
push
faddp
fxch
neg
mov
push
mov
mov
or
xor
dec
mov
push
push
sub
mov
cmp
or
sti
repnz
outsb
mov
cli
aam
jne
mov
pop
add
movsl
js
mov
rclb
movsl
ret
in
nop
push
xchg
pop
mov
loopne
jge
and
imul
mov
lock
jl
xorb
sub
jg
subl
mov
aaa
pushf
sbb
in
xchg
adcb
add
aad
and
jmp
and
jl
call
adc
cltd
out
cs
push
xchg
lock
sub
sub
sub
lock
jns
insb
fcmovnbe
pop
push
clc
add
xor
add
pop
and
xlat
add
fwait
dec
jle
xor
int
repnz
dec
sbb
lea
in
pop
mov
lods
andl
les
popa
nop
mov
stos
test
xchg
jno
mov
sbb
cli
cmpsl
mov
movsl
push
jle
faddl
or
call
mov
sub
test
mul
add
xchg
push
sub
mov
pop
pop
andl
jmp
mov
and
iret
jg
shll
test
daa
jp
out
pushf
or
inc
cmpsl
mov
mov
sbb
push
dec
cmpl
jle
js
mov
xchg
mov
xlat
out
or
sub
aas
sub
out
movsb
pop
fs
sub
inc
fsts
jle
stos
cwtl
lds
int
call
divb
dec
fadds
scas
fisubrs
sub
popa
inc
fsubrl
jmp
test
leave
cmp
sub
popf
jg
mov
adc
mov
pop
mov
xor
pushf
mov
jle
lret
xor
ss
ss
or
mov
cltd
add
cmp
shrl
movsb
xchg
andb
mov
mov
xchg
lods
pop
push
adc
out
mov
fstpt
fsub
push
or
xchg
mov
mov
sub
adc
add
in
inc
inc
adc
push
dec
aas
test
sti
adc
xchg
jbe
pop
ja
out
adc
xor
repz
fldenv
jb
mov
enter
repnz
mov
adc
insl
mov
or
push
and
jl
lcall
xchg
daa
adc
mov
push
pushf
out
push
xchg
insb
shlb
cli
loope
mov
adc
mov
push
popf
mov
test
int3
xchg
mov
imul
daa
fdivs
jae
or
test
test
das
rcrl
movsb
push
inc
xchg
in
dec
pop
pop
adc
or
xchg
inc
mov
xchg
out
adc
push
push
dec
mov
sarl
sub
sarl
iret
in
std
pop
xchg
jge
popf
add
aaa
test
mov
clc
add
jmp
xchg
pop
xchg
xchg
dec
imul
ret
push
xor
in
shlb
loope
movsl
idivl
ja
out
cltd
fcom
and
pop
pusha
mov
adc
fdivrl
popa
ret
fstps
dec
leave
pop
std
popf
popa
ljmp
sbbb
in
sub
std
mov
jb
arpl
cli
cmp
pusha
mov
push
pop
in
pop
int3
jle
loop
jno
stc
push
lret
sub
pop
jb
dec
sbb
mov
popf
sub
sub
adc
mov
mov
or
jge
mov
cmp
pop
sti
cmpsb
add
ret
add
fdivrs
ja
pusha
cmpsb
push
fstpt
xchg
insl
test
nop
push
xchg
das
sbb
cmpsb
mov
nopl
mov
clc
pusha
cli
insb
adc
xchg
add
pop
cmpb
nop
mov
adcl
mov
cmp
sub
leave
or
js
push
shlb
adcb
xor
sarb
cmp
pop
xchg
shlb
mov
nop
mov
jmp
cmp
sbbb
faddl
jae
xor
lcall
xor
push
inc
test
inc
mov
inc
fwait
sbb
pop
in
ljmp
jno
lods
stos
xlat
mov
out
mov
jae
shlb
mull
mov
lock
fwait
pop
adc
dec
cld
lret
lret
loopne
push
push
int
adc
xchg
adc
mov
test
sub
std
inc
jmp
cmp
out
out
lret
pop
xor
sbb
std
pop
xor
jg
add
push
add
lret
push
out
aaa
pusha
es
add
mov
sbb
and
xor
out
mov
negl
jge
push
shll
movsl
rcrl
mov
or
dec
in
outsb
lret
out
cld
and
jne
sub
mov
imul
pop
outsb
add
daa
shrl
icebp
xlat
fwait
daa
cmp
inc
std
loopne
sbb
pmaddwd
xor
and
pop
jg
push
int
lods
test
adc
inc
jb
and
fcomps
leave
popf
out
scas
pop
and
mov
pop
mov
xchg
sbb
vmovhpd
test
xchg
mov
inc
and
shlb
stc
mov
add
stos
rcll
xchg
test
adc
cmp
add
sbb
xchg
cli
cmp
sbb
cwtl
mov
jns
mov
lds
hlt
fidivrl
add
shrb
loopne
inc
outsl
push
inc
popl
sub
or
test
imull
pop
repnz
mov
adc
pushf
xlat
lea
ret
inc
shlb
xchg
lds
stos
xchg
add
mov
jmp
sahf
pop
sarb
fbld
mov
das
xchg
fisubl
pop
cmpsb
movsb
sub
sbb
jb
push
scas
add
push
insb
adc
dec
gs
adc
fwait
sbb
aam
pusha
gs
pop
int
xchg
sbb
es
scas
or
lret
insb
jge
ds
aam
repnz
adc
lret
jg
or
in
add
enter
mov
xor
pop
test
lds
inc
test
jmp
adc
outsl
or
inc
insl
ja
mov
out
fsubrl
and
or
cmp
pop
or
sub
scas
jbe
sub
outsl
push
test
or
testl
push
out
data16
adc
fwait
ret
sti
rcll
dec
push
jne
and
incb
repz
out
push
lds
add
add
mov
loop
sbb
mulb
mov
lea
sti
fstpt
jne
mov
addr16
test
add
dec
push
add
adc
stos
sti
pushf
cltd
mov
and
push
repnz
scas
int
aad
cli
mov
in
ret
cmp
jp
fimuls
or
mov
cld
cmpsl
inc
pushl
out
pushf
cmp
xor
mov
out
inc
mov
mov
lods
mov
ret
fisubs
ds
adc
pushf
dec
adc
mov
add
js
lcall
fdivs
sub
mov
out
xor
mov
ficompl
adc
enter
in
xor
sbb
mov
pushf
jbe
sub
fnstcw
mov
scas
ret
iret
jb
sbb
dec
ret
and
sbb
enter
shrb
and
lea
imul
icebp
test
adc
in
xor
jo
in
inc
ficoml
lret
out
movsb
mov
xchg
cmp
ffree
and
and
cld
daa
cs
pop
pop
outsl
in
pop
mov
mov
cmpl
add
xchg
int
sahf
sub
lods
jecxz
clc
movsl
and
lods
add
cltd
sbb
or
adc
dec
cmpsl
xchg
ds
nop
mov
pop
bnd
cld
scas
jge
out
test
dec
lahf
test
pop
lods
jle
test
or
push
aas
dec
xor
stc
add
lret
dec
test
mov
mov
shl
push
rclb
idivl
in
cmp
sbb
lds
cmp
ss
ljmp
in
ljmp
fwait
cmpl
or
call
das
out
cmp
inc
push
cltd
sub
ljmp
jo
cmp
daa
jbe
cs
sbb
jl
dec
outsb
xchg
mov
push
mov
stc
xor
xchg
ret
stos
popa
mov
scas
jecxz
xchg
aam
ljmp
call
int
je
sub
push
inc
add
test
testb
lods
jmp
sbb
nop
das
inc
and
into
fisubl
lret
ds
mov
int3
jae
ljmp
pop
or
cmp
push
sbb
xorl
push
xor
enter
ja
jnp
loop
dec
sahf
sar
arpl
and
mov
dec
aaa
jle
mov
sbb
xor
out
and
mov
jl
imul
pop
lahf
scas
xchg
and
or
sub
pop
adc
mov
insb
cmp
mov
clc
dec
or
and
data16
cltd
idivb
popf
xor
cltd
pop
adc
adc
cmp
cwtl
cmp
xor
les
fimull
adc
mov
mov
xorl
je
out
inc
sbb
dec
bound
jb
iret
rcl
out
pushf
mov
lods
dec
js
dec
push
jl
sbb
sbb
sub
sub
mov
call
mov
jmp
push
scas
sahf
and
test
mov
sarl
call
push
insl
xchg
fidivrs
cmp
inc
push
test
add
fcomps
cld
in
push
add
pusha
stc
mov
and
cmp
cmc
and
jns
fnsave
test
bound
push
popa
int
mov
sbb
mov
xchg
scas
xchg
in
or
sbb
xor
in
mov
jmp
inc
in
test
push
adc
loopne
out
jge
aas
and
test
orb
cwtl
loope
xor
insl
insb
mov
fwait
xorl
cmp
lret
sbb
sahf
jo
es
pushf
mov
sbb
mov
rol
jle
addr16
push
rcll
test
nop
in
mov
cmp
push
inc
lods
dec
mov
cmp
scas
xchg
cmpsl
cmp
movsb
loope
sti
adc
xlat
mov
jnp
dec
xchg
add
mov
add
test
and
nop
test
dec
jb
sar
mov
into
and
mov
jne
sahf
inc
sub
mov
repz
mov
add
pushf
push
push
mov
push
dec
call
das
aaa
xchg
mov
dec
xchg
lods
inc
fdiv
imul
subl
pop
insl
sbbl
shll
mov
inc
sub
addr16
stos
jns
adc
lahf
inc
popa
xor
mov
dec
lods
and
jb
pop
or
mov
and
std
sub
pushf
jo
arpl
outsl
xchg
inc
jbe
outsl
dec
jmp
aaa
jecxz
insl
cltd
pushf
push
or
xchg
inc
pop
loope
xor
loopne
insb
in
repnz
mov
stc
inc
inc
test
mov
dec
pop
leave
mov
out
push
pop
aam
jbe
mov
aad
dec
stos
enter
ja
loope
cmp
js
adc
jp
jle
mov
or
jne
or
shrb
add
jnp
repnz
in
xor
std
cmp
rcrb
adc
jo
sbb
in
pop
lcall
and
and
inc
xchg
xor
mov
cmp
inc
fsubs
inc
inc
push
lahf
pop
add
cli
push
jg
and
ja
je
adcl
aad
sarl
mov
or
jnp
jbe
sub
xchg
inc
push
lret
or
push
stos
clc
loop
push
mov
jl
icebp
add
mov
mov
lcall
mov
insl
add
mov
mov
and
jns
adc
sarl
dec
dec
and
mov
mov
add
inc
adc
js
cwtl
mov
pop
xor
loope
out
pop
mov
les
push
rcrl
rcrb
int3
jmp
mov
adc
add
push
stos
clc
jae
push
lret
xchg
jnp
xor
sbb
out
das
push
adc
in
pop
xor
dec
dec
cmpsb
lahf
lret
outsb
mov
xchg
fsubr
cld
test
ret
jge
and
xor
ljmp
mov
push
inc
mov
nop
cmpsl
shr
in
mov
or
push
push
inc
les
cld
sub
jmp
jns
sub
xchg
mov
inc
je
fdivs
pop
mov
dec
add
push
jae
mov
xchg
out
push
call
les
call
in
xor
push
mov
std
push
out
in
ss
pop
push
cmp
mov
pop
add
push
mov
dec
scas
icebp
adc
mov
lcall
cmpsl
and
push
lods
sbb
mov
dec
cmp
mov
push
out
call
inc
mov
or
ljmp
jnp
or
aam
jmp
insl
arpl
in
cmp
cmc
and
dec
aas
inc
aam
test
ret
or
mov
mov
dec
inc
fs
clc
insb
clc
in
lods
or
mov
sbb
int3
shlb
cmp
fistpl
push
add
outsb
fs
mov
cmp
mov
jmp
sub
inc
pop
jnp
aam
mov
clc
lahf
and
xchg
or
xchg
xchg
call
push
pop
sub
jb
lock
nop
mov
enter
cmpsb
add
fimull
inc
mov
pop
fisubs
stos
je
negb
fwait
xlat
sbb
jp
xor
lret
imul
push
adc
stos
xor
fs
lods
fcoml
sbb
cmp
and
adc
in
sub
lods
add
cmp
add
rcll
shll
fiadds
sbb
fdivrs
push
push
adc
mov
jp
sbb
outsl
push
fisubl
pop
pop
scas
xlat
cmpsl
and
rorb
adc
sahf
cwtl
dec
xchg
adc
repnz
pop
sub
stos
inc
add
and
not
stc
cwtl
adc
mov
nop
test
popa
xlat
sub
loop
mov
scas
jge
sub
push
mov
jmp
or
data16
sbbl
cs
enter
fwait
pop
push
xor
lock
loop
add
xchg
sbb
or
je
fcomp
lret
sti
scas
adc
sbb
jne
cwtl
add
xchg
mov
mov
or
pop
mov
add
jp
pushl
sti
icebp
pop
pop
nop
mov
add
fs
daa
in
movsl
add
push
mov
stos
filds
cmpsb
stos
sbb
inc
call
or
and
ds
movb
jge
aad
mov
jecxz
push
sub
dec
add
xor
and
cld
insl
roll
fsubr
and
int3
out
dec
xor
xchg
loop
and
xchg
mov
and
icebp
or
dec
lcall
test
or
hlt
fdivrp
mov
xor
cld
jg
inc
dec
push
cld
mov
sub
jns
xchg
mov
pop
sub
push
hlt
aad
lahf
mov
or
loope
dec
xchg
clc
xchg
adc
je
out
inc
mov
hlt
add
aad
sets
fwait
sbb
cld
ss
xor
jo
cmc
mov
adc
popf
fisttpll
add
sahf
stos
dec
mov
in
jecxz
fdivrl
mul
dec
inc
or
nop
pop
mov
jl
cmp
dec
mov
mov
repnz
xchg
jae
mov
mov
and
scas
mov
loop
stos
nop
add
add
fisubs
ja
push
out
dec
call
xor
fldl2e
mov
scas
lea
jb
jnp
pop
and
mov
inc
mov
stos
cwtl
out
mov
incl
daa
sbb
lock
xchg
inc
daa
xor
jno
pop
jne
stc
out
rorl
mov
mov
xchg
das
lods
ret
testl
into
and
pop
xchg
sbb
das
inc
cmp
jb
dec
push
add
adc
xor
or
lret
mov
dec
dec
inc
mov
test
aam
add
push
pop
lea
push
push
test
clc
cmpsb
cli
fstpl
dec
add
inc
mov
cmp
or
jno
repnz
in
pop
rep
je
inc
push
in
imul
adc
fs
out
dec
call
jb
xchg
fldt
mov
mov
mov
mov
push
scas
jno
xor
insl
add
sbb
nop
in
and
pop
cli
insl
in
stc
add
jns
dec
or
or
dec
das
cmpsl
in
adc
inc
xlat
ffreep
pop
sub
mov
mov
inc
sbb
lahf
cli
sbb
js
arpl
add
add
inc
arpl
add
dec
incb
lret
shll
and
cmp
xchg
mov
loope
xor
xor
das
shrl
cmp
jp
lock
add
loope
pop
orb
pop
subb
pusha
loope
or
nop
bound
shrl
dec
mov
aas
inc
imul
jle
not
outsb
mov
aas
test
xor
inc
lods
mov
adc
cwtl
addr16
cmpsb
stos
and
scas
imul
cltd
mov
xorb
rcrb
imul
xchg
lea
shrl
cmp
lods
gs
in
pop
adcb
into
push
dec
jno
sbb
cmp
aaa
mov
sbb
cmp
cmpsl
iret
daa
les
sar
scas
and
xlat
sbb
pop
push
pop
cld
test
sbb
lret
ljmp
ja
and
out
nop
fs
mov
out
mov
xchg
dec
arpl
call
jne
cmc
push
js
mov
movsb
popa
jl
inc
mov
lret
pop
inc
les
pop
add
in
adcb
das
mov
xchg
pusha
fiadds
or
ret
fld
inc
mov
les
popf
lods
push
repz
push
push
cmp
pop
out
cs
sarb
add
mov
jmp
push
jge
xor
add
mov
cli
dec
stos
push
insl
pushf
sahf
mov
pop
jnp
inc
andl
mov
push
lods
sbb
hlt
out
movsl
call
jns
push
lock
or
es
faddl
or
stc
jb
jg
inc
popf
lds
cltd
mov
mov
je
arpl
lds
xor
ficoms
push
lret
test
data16
sbb
fcom
lods
fistpl
sbb
stos
sbb
adc
outsb
cltd
in
aam
sub
mov
loop
xor
stos
sub
loopne
inc
jge
add
cmp
ret
shrl
scas
xchg
mov
shrb
jne
dec
sub
gs
push
test
adc
roll
and
inc
in
jmp
iret
arpl
cli
mov
xchg
mov
mov
mov
daa
push
sub
lock
insl
pusha
mov
xchg
and
mov
jo
shr
fsubl
sbb
ljmp
pop
add
arpl
cmpsl
sbb
negl
out
lret
adc
insb
mov
pop
pop
outsl
push
pop
repnz
dec
mov
out
lds
xchg
inc
stos
repnz
in
cs
mov
xchg
aas
mov
bound
outsb
adc
lgs
fsubs
inc
and
in
mov
fisttpll
mov
cmp
pop
hlt
or
imul
iret
mov
inc
or
adc
leave
pushf
aam
sti
jmp
daa
mov
out
and
xchg
int
pop
sub
loopne
mov
mov
push
push
dec
scas
push
dec
pop
xchg
mov
add
test
stc
jno
adc
divb
fwait
fstps
iret
cld
imul
xor
ret
jg
popa
dec
add
or
sbb
or
mov
shrb
movsl
sub
out
outsb
or
jge
dec
fstpl
clc
jnp
jbe
out
bound
push
add
cmp
negb
lret
inc
lea
lods
out
jle
mov
push
mov
xor
addr16
dec
lret
out
out
pop
sub
mov
cmp
sbbl
shlb
loop
cwtl
add
adc
sub
nop
es
outsl
adcl
mov
idiv
outsl
mov
xor
mov
dec
into
js
pusha
jae
int
fildll
pushf
insb
pop
stos
fisttpll
push
insb
int
lods
ficomps
cli
adc
movsb
mov
or
popa
dec
xor
pop
xchg
add
mov
mov
sub
mov
ljmp
rcr
sbb
add
lods
mov
dec
fidivs
cmp
mov
mov
add
lahf
mov
ja
cltd
sti
mov
mov
adc
testb
mov
push
repnz
ret
ret
enter
jle
sbb
aas
pop
sarb
push
mov
xor
lcall
fldcw
sbb
rorb
and
lret
push
sbb
shll
dec
aad
mov
mov
cmc
xor
int
pushf
aam
fistpl
mov
sub
lret
enter
jbe
sarb
push
mov
sarl
das
inc
inc
pop
pop
fstps
ja
jnp
jbe
mov
adc
les
push
stos
pop
adc
icebp
pop
mov
xchg
fimuls
mov
clc
in
cmp
push
pushl
xor
rclb
iret
pop
add
sbb
adc
mov
out
cli
test
inc
insl
push
popa
in
lock
jp
xor
jl
pop
jnp
shll
xchg
out
sub
es
int3
mov
sub
imul
dec
cli
or
fwait
repnz
imul
mov
xor
mov
ret
cwtl
adc
pop
icebp
pop
mov
push
das
sub
jne
cwtl
inc
fwait
subb
cli
int
cmp
adc
adc
dec
xchg
jae
daa
pop
shll
xchg
dec
sub
xchg
ss
push
test
scas
push
mov
push
lret
xchg
xorb
into
sub
jmp
pop
jmp
cmp
ljmp
shl
xchg
push
test
mov
inc
and
pop
push
aad
cld
sub
into
mov
xchg
pop
jle
out
push
jnp
pop
mov
pop
mov
in
call
adc
xchg
sti
and
inc
fnsave
cmp
sub
push
stos
adc
jp
das
outsb
incl
in
dec
jmp
xchg
shll
mov
pop
sbb
data16
or
loope
or
pop
push
jl
ljmp
cmp
mov
cmp
out
jbe
xchg
lcall
aaa
sets
int3
ffree
xor
sbb
lahf
xor
jge
notl
ror
mov
cwtl
mov
andb
lods
inc
pop
dec
jle
fucom
int
out
jp
sbb
pop
aaa
data16
xor
dec
lret
pop
pop
or
pop
sbbb
inc
mov
adc
das
push
mov
push
xor
call
arpl
push
cwtd
inc
or
out
dec
clc
ret
add
leave
xchg
sbb
adc
test
mov
loopne
arpl
jnp
mov
xlat
lcall
cld
pop
ficoms
cli
cmpsl
mov
jp
xchg
mov
call
dec
pushf
scas
mov
test
pop
sub
mov
pop
pop
mov
pusha
and
push
mov
int
fnstenv
adc
ljmp
popf
ljmp
out
call
clc
sbb
mov
mov
pop
pop
sbbb
or
jle
push
dec
cwtl
leave
adc
shll
jmp
ja
mov
xchg
adc
lahf
or
js
cmp
lcall
push
andl
push
repz
rclb
rolb
pop
js
pop
add
outsl
mov
lret
loope
xor
jle
daa
pop
hlt
enter
or
mov
scas
nop
dec
es
fisubs
outsb
mov
ja
xchg
adc
bound
sbbl
aad
mov
and
inc
mov
test
push
xchg
push
fdivl
fs
pop
sbb
js
repz
cmp
xchg
sbb
jbe
push
movsb
cs
repnz
jns
fisubs
dec
stos
repnz
xorb
shlb
cmpsl
xchg
add
mov
and
cltd
sti
nop
out
mov
jl
aas
sarl
mov
add
cmpsb
cmc
aas
out
push
inc
jmp
insl
xchg
idiv
cmp
pop
imul
test
pop
xor
sbb
jno
inc
add
xor
push
fstpl
daa
jmp
fcmovne
in
je
rorl
cmp
jns
stos
fwait
mov
dec
scas
cld
es
insb
jge
mov
loopne,pt
dec
sub
xchg
jae
fldl
lods
mov
popa
bswap
push
ljmp
mov
in
jg
cmpsb
test
inc
jo
sbb
add
mov
movsb
push
repnz
jnp
inc
jne
and
adc
dec
insb
adc
push
mov
outsb
shll
mov
xchg
sahf
pcmpgtb
out
pusha
sub
add
fs
push
fdivl
inc
shrb
pushf
xor
xchg
mov
pop
dec
insb
lahf
and
mov
shlb
jge
les
jl
scas
les
jne
adcb
xchg
in
push
pusha
enter
popa
dec
insb
out
pop
lods
mov
les
addr16
cld
mov
fstl
out
xor
xor
loopne
pushf
jo
orb
in
ret
xor
enter
sub
div
jno
push
xor
lds
mov
mov
xlat
inc
inc
xchg
mov
lods
aaa
dec
ret
push
fistpll
out
data16
dec
subb
mov
rclb
cmp
push
pop
call
ds
or
insb
inc
out
pushf
clc
and
clc
mov
and
repnz
movsb
data16
cmp
lret
loopne
rolb
xchg
insb
xchg
pop
adc
cli
lds
in
push
jbe
inc
mov
into
test
mov
scas
pop
aaa
ss
in
jg
add
xchg
or
test
jno
jo
iret
lahf
cmpb
lret
out
sbb
loopne
add
add
jne
outsl
jp
ja
xor
mov
mov
mov
push
mov
inc
pop
or
mov
imulb
scas
mov
frstor
adc
out
cmp
sub
leave
add
outsl
add
lret
and
pushf
sub
imul
ljmp
sub
xchg
mov
mov
push
mov
sbb
aam
dec
sub
cmc
decl
roll
jbe
dec
lock
clc
cmp
jmp
mov
jo
push
adc
rcll
xor
cld
daa
cmp
ret
arpl
pop
icebp
mov
push
sub
decb
mov
inc
lea
mov
insb
push
sub
stos
aad
repnz
clc
adc
out
sbb
mov
cld
pop
pop
pop
aad
andl
jge
jg
add
cli
sbb
pop
lea
rep
and
icebp
out
xor
lods
ja
popa
jmp
mov
pop
push
addb
lcall
jle
ret
je
int3
mov
int3
mov
jb
cmpsb
mov
jno
mov
pop
add
inc
push
or
pop
loope
int
ja
pusha
sub
filds
mov
push
sub
daa
adc
out
cs
mov
xchg
je
sbb
enter
ja
cmp
xchg
xchg
aad
xor
fstpt
clc
aaa
push
sub
loope
or
xor
lods
test
add
adc
xor
xor
inc
pop
push
aaa
mov
jno
scas
leave
mov
call
jg
jnp
sbb
xorl
icebp
popa
cmpsl
sub
sbb
and
add
repz
sti
cmp
loop
nop
ror
cmp
jbe
inc
xchg
xchg
xchg
iret
cmc
add
xchg
jno
dec
xlat
out
adc
jne
xor
xor
xchg
daa
idivl
mov
sub
inc
lcall
imul
or
sub
xor
xchg
jo
adc
lret
jge
xlat
mov
fcom
and
cld
xchg
cmp
mov
aam
rorb
sti
adc
sbb
cmp
test
outsb
jmp
add
movsl
shlb
hlt
sbb
es
adc
lds
or
fcmovnb
sbb
jge
int
add
shlb
jge
outsb
cmp
xor
dec
nop
fwait
out
aas
ja
mov
mov
in
or
sahf
and
and
lods
mov
mov
aam
repnz
add
decb
ret
mov
lock
fs
cld
push
popa
fdivp
add
lret
dec
sub
jo
lret
mov
mov
nop
xor
test
xchg
jne
jne
subb
sbb
fcmovnb
push
adc
dec
and
xchg
mov
or
sarb
jmp
scas
movsl
idivl
cmp
sbb
cmp
add
or
loopne
aad
adc
insl
inc
pop
movsl
call
cs
xlat
es
add
mov
and
xchg
stc
arpl
lahf
scas
mov
mov
lea
in
in
fwait
loope
cld
adc
mov
mov
stc
jle
hlt
or
cmp
add
jp
lods
stos
mov
hlt
or
mov
mov
push
pop
push
jns
out
hlt
add
aas
cmpsb
rorb
inc
xchg
adc
loope
mov
out
shrl
cli
lea
rol
pop
xor
ret
enter
addr16
cltd
cmp
jbe
inc
mov
mov
clc
test
push
cmp
adc
cld
nop
int3
xrelease
and
or
cmp
mov
lea
add
repz
push
add
mov
into
mov
add
cmp
and
les
add
pushl
pop
insb
jmp
mov
or
mov
fdivs
cmp
inc
xor
mov
lret
add
leave
mov
mov
cmp
or
mov
xchg
mov
mov
fstps
adc
out
add
ror
cmp
push
filds
and
sub
sub
inc
fwait
pusha
lcall
mov
int
mov
push
pop
lock
lock
jnp
sbb
js
insl
push
repz
push
cwtl
mov
push
pop
mov
dec
faddl
movsl
jno
inc
stc
jp
imul
mov
lcall
inc
movb
fistps
pop
add
mov
cmp
sub
sub
testl
sub
addl
adc
inc
sbb
and
stos
scas
in
cmp
fnstcw
ficoms
dec
gs
lods
pusha
movsb
sarb
andb
fidivl
lock
packsswb
sbb
push
dec
xchg
ffree
jge
gs
call
pop
subl
test
fisubrs
cmp
dec
mov
loope
out
cld
dec
incl
hlt
rorl
pop
add
dec
jo
add
sbb
xchg
jno
push
int3
xchg
sbb
xchg
movsl
mov
ret
xchg
jl
insl
xchg
inc
jo
mov
pop
adc
xchg
sbb
jo
int
push
daa
sub
inc
lods
xchg
nop
jbe
mov
std
push
out
test
mov
aam
fcoms
outsl
jne
and
xor
movsb
push
push
sub
jbe
lea
daa
jmp
mov
mov
mov
stos
cmc
push
pop
mov
pop
or
add
aam
mov
jmp
mov
add
fidivrl
push
aaa
mov
adc
and
sbb
push
test
jo
stc
fldl
push
addb
add
clc
mov
dec
lahf
pusha
mov
sbb
pusha
popf
push
vpinsrw
xchg
dec
sbb
ja
cs
rolb
notb
push
arpl
add
mov
out
pop
test
idiv
push
jl
xor
out
jg
jnp
inc
push
iret
add
mov
jb
cmp
mov
xchg
jae
mov
push
in
mov
cwtl
push
stos
cmpsb
adc
adc
jne
ds
daa
inc
mov
pop
push
scas
mov
loopne
mov
rorl
mov
jle
sbb
insl
lea
mov
fmul
scas
fcomps
lahf
mov
fidivrs
xchg
mov
add
push
cmp
mov
jle
cwtl
stc
inc
cmp
mov
pop
dec
rorl
pushf
sbb
jne
inc
leave
cli
lock
popf
inc
mov
dec
notl
push
adc
add
icebp
dec
mov
sub
cmpsb
cmp
pop
cmp
add
inc
mov
fucomi
sbb
cmp
inc
rclb
adc
fldenv
hlt
jbe
dec
or
push
mov
loop
jnp
adc
jl
icebp
and
xor
rorb
mov
mov
stc
dec
sbb
dec
aaa
adc
push
jl
add
popa
loope
mov
lea
pop
insb
das
dec
jle
push
cmp
inc
loop
ljmp
sub
pusha
fldt
or
mov
cld
xor
divb
xchg
jmp
push
mov
out
adc
not
sbb
xor
nop
pop
mov
addl
int
pop
adc
shll
pop
push
cmp
push
sub
setae
jmp
int
or
punpckhwd
addr16
adc
dec
aam
rcr
test
sub
xchg
fisttpl
pop
or
lods
ds
scas
out
stc
jno
cmpb
dec
mov
or
adc
cli
xlat
pop
adc
aaa
mov
aad
ret
xchg
jmp
cltd
cmp
fsub
in
scas
loop
mov
push
and
out
add
cwtl
mov
sub
int
inc
or
aaa
and
mulb
shrb
cmpsb
pop
mov
clc
mov
faddl
popa
mov
dec
and
adc
pusha
push
ljmp
dec
int3
test
loopne
cld
jle
jcxz
es
outsl
push
pop
xor
out
mov
mov
inc
mov
jp
add
adc
push
xor
xor
pop
inc
inc
xor
push
repnz
jb
cld
sbb
push
jl
sub
test
insl
xor
jecxz
or
inc
push
movsb
mov
xor
ret
xor
pop
leave
mov
xchg
call
sub
scas
ret
lret
loope
cltd
adc
loopne
inc
or
mov
pop
icebp
sub
mov
es
subl
je
flds
enter
out
int
aad
loop
push
jmp
out
out
pop
popa
int
scas
and
push
xchg
mov
mov
sub
mov
or
fisubs
shlb
push
leave
or
jnp
cmp
cmc
xor
test
je
mov
ljmp
mov
js
add
in
in
test
inc
push
cmp
jg
add
out
push
adc
loopne
adc
push
lods
jg
popa
xchg
incb
cmp
fs
jg
and
jns,pt
loopne
pop
stos
jmp
pop
ss
sti
jb
and
rcll
pushf
push
nop
popf
test
xchg
push
shl
out
ret
push
xor
fwait
mov
das
mov
jl
test
or
xor
andl
call
pop
push
lret
les
adc
repz
jmp
lret
mov
push
mov
enter
adcb
mov
or
in
inc
lret
mov
sub
jp
sbb
movsl
xchg
mov
rorl
fistpll
out
enter
mov
shl
sbb
lock
push
stos
push
inc
pop
pop
int
cmpsl
push
or
xchg
jns
xlat
test
sbb
ficoml
fwait
call
push
lahf
push
loope
jg
xlat
imul
mov
in
jp
sub
repnz
movsl
je
ja
jb
into
test
ret
test
mov
imul
pop
sti
mov
pop
jmp
xchg
push
jae
mov
jp
push
jg
sub
adc
fsubl
imul
dec
add
mov
fisttps
das
sbbl
arpl
data16
and
sahf
ret
or
lahf
outsl
outsl
push
cmp
and
or
cmp
testl
xchg
jecxz
pop
test
sbb
inc
negl
movb
mov
jnp
xchg
push
int
xchg
jb
mov
jnp
movsb
mov
add
adc
sbb
sbb
inc
popa
mov
call
push
sbb
scas
repnz
and
test
and
std
adc
rclb
mov
mov
in
xor
outsl
out
jmp
stos
wrmsr
mov
cmpsl
adc
loop
add
cmp
mov
popf
add
je
in
arpl
ja
ljmp
mov
repz
jae
addb
mov
jo
orb
jl
sub
mov
sbb
adc
xchg
incl
ret
mov
mov
lcall
das
out
push
xor
fmull
xchg
jb
cmp
jbe
ret
pop
je
stos
mov
sbb
inc
fwait
xchg
test
les
stos
add
lock
or
push
dec
out
and
add
popf
jne
test
out
xor
xor
lret
cmp
sub
lods
popf
pop
add
cli
sbb
fidivs
push
cli
shl
push
cld
je
fildll
lret
dec
mov
adc
add
sbb
test
dec
int
test
cli
test
adc
lahf
mov
divl
mov
js
repnz
bound
mov
jmp
or
bound
adc
lcall
mov
mov
aas
pusha
imulb
rcrl
jl
data16
or
push
test
add
jge
jecxz
aad
xor
inc
push
addr16
lret
add
xor
add
jbe
jne
ja
push
cmp
jnp
xor
xchg
jmp
lret
mov
sbb
fdivp
xor
add
ret
das
addr16
xchg
sub
imul
daa
push
inc
leave
cwtl
xor
icebp
fs
push
push
sub
pop
mov
pop
cmpsb
loopew
push
or
fisttps
cmpsl
hlt
push
sbb
fidivrl
sub
push
stos
and
mov
rclb
into
leave
and
popl
xchg
mov
jge
mov
mov
call
add
ret
data16
jp
push
pop
imul
inc
cltd
adc
sub
push
int
cmpsl
hlt
aam
sti
mov
ss
sarl
add
subb
jae
push
sbb
jl
pop
jle
ja
pop
cmp
mov
sub
add
adc
xor
leave
packuswb
stos
iret
inc
stc
adcb
lock
aas
jnp
orl
sub
dec
rorl
fisubl
or
pop
cltd
repnz
scas
popf
ds
xor
gs
fisubl
mov
pop
or
push
jo
sub
push
aam
cmc
icebp
pop
int
addr16
clc
repnz
lods
in
and
out
cltd
stc
sub
mov
ror
mov
fs
lods
iret
testl
and
std
icebp
push
fcmovbe
cli
int
les
pop
out
dec
or
sub
or
imul
adcl
adc
cmpxchg
xorl
out
pop
add
aas
movsl
mov
test
loopne
pop
repnz
into
mov
jmp
or
pop
push
pusha
inc
mov
push
inc
imul
mov
jo
add
fisubl
push
js
jge
mov
hlt
jmp
push
cmp
mov
cmp
xchg
mov
adc
mov
xor
int3
inc
cmc
mov
lods
xlat
fldcw
push
xchg
fsub
xor
mov
cltd
in
pop
int3
xor
inc
mov
fcoml
or
rcr
and
jne
sub
mov
add
inc
dec
pop
xchg
mov
out
leave
mov
in
and
push
negb
mov
leave
inc
inc
mov
stos
ds
addr16
int3
notl
fistps
push
xchg
or
into
shl
clc
jl
aas
aaa
xor
push
sub
add
push
jne
sbb
inc
inc
inc
les
cmp
out
das
addr16
cmp
jp
push
imul
and
mov
cld
push
out
iret
out
cmp
popa
lea
mov
fdivrl
stos
loope
jns
dec
jne
push
mov
push
inc
add
ret
in
test
fdivl
lret
inc
jmp
aaa
cmp
mov
mov
jle
jnp
arpl
ficompl
push
or
jg
pop
cmp
mov
cmp
int3
stos
mov
outsb
pop
jmp
das
mov
stos
xchg
push
push
adc
jae
icebp
xchg
pop
icebp
faddl
ja
xchg
inc
pop
mov
stos
push
std
fisubrs
aaa
push
addr16
mov
out
sub
repnz
mov
mov
inc
je
mov
xchg
dec
mov
jp
lock
jo
dec
and
test
incb
push
mov
adc
add
mov
addl
lods
js
or
fdivl
jb
sub
add
sbb
xor
pop
in
push
cmp
inc
sub
jge
aaa
ljmp
shll
pop
fwait
mov
enter
push
inc
push
add
xor
xchg
adc
sbb
cmp
je
dec
cltd
jecxz
lahf
inc
and
enter
sbb
mov
fsubrs
jle
jns
dec
adc
daa
inc
push
mov
push
push
xlat
sub
mov
orb
outsl
dec
shlb
xchg
je
inc
or
cmpsl
ss
mov
xlat
in
xchg
and
cs
push
mov
jg
ljmp
dec
adc
fsts
xor
adc
xor
adc
in
lret
hlt
in
and
mov
in
outsl
dec
int
into
mov
shrl
adc
mov
mov
xchg
in
in
inc
xchg
add
stos
jmp
push
dec
cmp
inc
pushf
jp
jge
mov
rcrb
fstpt
or
push
icebp
pop
or
jbe
daa
call
sarb
adc
sub
mov
jnp
sub
jge
jmp
mov
xor
cmp
xchg
xor
push
test
push
int
insl
push
push
mov
jns
insb
aam
pop
mov
push
adc
mov
sbb
or
icebp
push
mov
xchg
xchg
add
add
pop
lock
cmp
push
lods
lahf
cmpsb
fnstenv
lea
gs
mov
push
outsl
mov
lcall
imul
arpl
xor
cli
out
push
filds
push
addr16
sbb
lcall
adc
lods
cmp
out
ret
jge
int
xchg
nop
and
js
int3
popa
ficomps
push
mov
dec
pop
sub
push
mov
or
pop
push
lret
mov
das
adc
xchg
and
sbb
adcl
or
js
dec
lcall
add
ret
je
ds
fsubl
fsub
mov
xchg
insb
incb
cld
fsubp
adc
lcall
dec
out
push
ja
mov
rcrb
fsubrs
test
pop
sbb
mov
fldt
dec
out
inc
mov
or
lret
inc
pop
pop
sub
xlat
mulb
adc
cmpsb
jl
int
dec
jl
fwait
sbb
sub
je
add
pop
lds
cmpps
imul
xor
push
adc
jp
icebp
jg
das
dec
add
int
jno
pop
jmp
inc
push
push
loopne
sahf
cmc
stc
call
jno
decl
loope
loopne
adc
xchg
fs
mov
scas
shrl
shr
into
cmp
popa
cmp
or
lock
adc
dec
sbb
sbb
and
sbb
sahf
out
jbe
rclb
cmc
pop
bound
mov
sbb
or
pusha
mov
lods
push
pop
cmpsl
ret
or
pop
out
cwtl
adc
inc
xchg
loop
ja
xor
ss
jp
sub
out
mov
ret
les
sbb
rorb
push
push
lods
int
push
mov
test
fimull
dec
mov
and
pop
out
daa
xchg
lock
shlb
lea
sahf
aaa
adc
test
push
cmp
or
mov
pop
mov
xchg
and
xor
ds
jb
stos
mov
jns
adc
inc
sbb
decl
pushf
icebp
add
inc
mov
sbbl
add
xchg
lahf
negb
cmp
cmp
mov
mov
sarb
pusha
cmp
and
in
fisubs
jle
movsb
sbb
push
push
push
push
addr16
nop
sbb
inc
negb
cmp
dec
push
in
out
cmp
ret
inc
outsb
cmp
mov
pop
push
imul
imul
bnd
fs
addl
aaa
add
add
popf
mull
nop
xchg
mov
arpl
dec
mov
cwtl
in
xor
fwait
push
cmc
xor
mov
mov
pop
or
out
push
or
push
ret
bndstx
and
ucomiss
insb
das
and
jo
imul
inc
adc
outsl
xor
enter
adc
lods
jnp
add
addr16
jge
dec
cmpsl
xchg
or
jp
dec
push
jno
loopne
push
adc
ds
nop
add
test
scas
ja
or
out
into
outsb
mov
cmp
dec
cmp
mov
adc
in
js
jp
addr16
lret
or
shrb
dec
rclb
dec
adc
out
mov
fxch
outsb
out
dec
xor
dec
mov
push
xchg
std
jp
das
xor
sbb
jge
shlb
mov
icebp
mov
jae
sti
or
aam
mov
int3
shlb
jmp
jb
sbb
aad
mov
int3
sbb
xor
repnz
jg
inc
pop
lret
or
jne
and
movsl
push
xor
cmp
daa
in
mov
pop
les
pop
push
mov
repnz
jge
jp
repnz
xor
dec
clc
rcl
pop
pop
fcoml
jmp
insl
jl
int3
xchg
insb
xchg
mov
ret
adc
shrl
push
jge
jl
xchg
or
dec
add
dec
sbb
xchg
clc
sbbl
negb
lock
nop
pop
mov
mov
out
aaa
shrb
popa
push
or
pop
lcall
cli
loopne
mov
cmp
dec
insb
push
rcll
iret
divb
cmp
int3
add
xchg
sbb
sti
enter
push
in
xchg
jb
scas
xor
sahf
adc
ficoml
rolb
push
fdivl
push
inc
add
jg
jge
xchg
fiadds
xchg
jp
hlt
mov
sbb
dec
sbb
int
subl
push
inc
dec
and
cmpb
jbe
and
pop
test
pop
incl
mov
cld
lods
mov
add
xchg
test
ss
cmp
ja
addr16
inc
idivb
jecxz
icebp
pop
jl
int3
mov
fucomi
dec
mov
dec
xor
push
sub
xor
xor
rclb
mov
dec
mov
hlt
or
sbb
inc
jp
test
adc
mov
adc
cltd
fsts
push
loopne
mov
neg
sub
jo
cmp
xor
clc
dec
xor
push
push
xchg
jns
inc
jg
jne
ret
popa
test
cmp
test
xchg
mov
mov
std
mov
outsb
cmpsl
cmp
mov
xchg
jbe
xor
fs
mov
fs
addr16
mov
mov
inc
js
ljmp
imul
xor
lret
mov
dec
in
mov
jbe
lea
jno
mov
push
mov
jle
aam
pusha
outsb
pop
inc
xchg
xchg
in
mov
out
cltd
add
xchg
mov
das
test
mov
pop
jg
pop
ljmp
addr16
xor
sub
ret
mov
jg
xlat
cli
pushf
xor
add
jne
xor
les
loop
pop
out
subb
insb
in
subl
push
loop
dec
sbb
xor
jp
in
fsubrp
push
ljmp
jno
pop
xchg
dec
test
popa
repnz
mov
push
iret
mov
mov
adc
push
divb
push
mov
push
pop
or
out
pop
dec
mull
sbb
mov
lret
push
and
jecxz
push
fmul
add
sbb
sub
movsb
fidivrl
and
mov
or
in
lret
and
call
mov
jae
out
mov
jb
mov
pop
popa
and
jne
mov
push
movsb
ja
fcomps
mov
lods
or
rolb
movb
fistps
add
xor
push
jno
pop
sarb
inc
xchg
addb
pop
in
push
mov
daa
mov
xchg
ficoml
or
xchg
xchg
cwtl
mov
push
repnz
mov
adc
fnsave
cli
mov
jno
pop
fbld
not
mov
clc
decl
mov
sarb
leave
mov
jle
adc
lea
js
es
mov
xchg
int3
out
cmp
pop
lret
scas
pop
repz
mov
arpl
jge
imul
xchg
mov
scas
loope
outsl
xor
lods
mov
cmc
inc
dec
push
push
cmp
shrb
adc
mov
enter
or
mov
je
in
filds
ficompl
shrb
shll
test
adc
xchg
and
test
pop
dec
jl
mov
les
cmp
jae
std
sbb
push
les
sahf
cmp
iret
mov
dec
mov
push
gs
push
jne
dec
pop
mov
push
jmp
cmp
packssdw
lea
pop
das
cmpsb
pop
enter
imul
sbb
push
xchg
cmpsb
imul
leave
imul
lea
out
jnp
imul
or
movsb
movsb
sub
adc
push
fwait
pop
inc
stos
jmp
add
sbb
jl
cmpsl
cmp
jg
xor
jmp
fmull
insl
pop
pop
pop
test
fcoms
xchg
xchg
lock
lret
pop
adc
inc
js
cmpsl
in
inc
sti
jnp
cli
mov
mov
cmp
inc
mov
aaa
daa
xor
aad
sbb
sbb
sbb
cltd
jge
inc
mov
stos
enter
fidivrs
xchg
xchg
push
xor
inc
mov
inc
cmpsb
and
test
jecxz
mov
lods
test
mov
lods
push
std
sbb
aad
iret
iret
jb
pop
push
cmp
mov
outsb
lds
outsb
call
addr16
adc
fcomi
jge
pop
dec
cmp
push
mov
push
rolb
je
movsb
shll
mov
sahf
fcmovu
fdivl
lods
sub
ffreep
mov
dec
scas
insb
pop
imull
pop
sahf
cmp
insl
cmp
mov
mov
mov
shr
push
int
xchg
and
jno
dec
push
add
jbe
mov
lods
cmp
fucomi
nop
out
push
pop
pop
pop
jmp
pop
xor
repz
xor
mov
scas
fnstenv
call
xchg
jno
mov
mov
xor
jo
inc
add
int3
bound
scas
daa
cmc
in
xchg
inc
pop
mov
outsb
sbbl
cmp
xchg
pushf
inc
sbb
fsts
xchg
lds
jle
mov
sbb
lds
les
add
jb,pn
adc
loopne
loop,pn
ljmp
testb
or
adcl
popa
mov
fistps
xchg
ja
orb
and
out
rcrb
ret
mov
push
lret
mov
add
cmpsl
jmp
xor
test
in
push
push
and
lret
and
mov
fcomip
sub
push
or
add
loopne
adc
jl
xchg
sub
bnd
lock
mov
cmpsl
and
xor
add
and
add
cmp
leave
test
ss
out
and
pop
rol
sub
dec
fld
scas
lods
adc
loopne
sub
fidivl
fs
or
loopne
and
cmc
mov
jmp
iret
into
xchg
and
bound
or
dec
int3
es
insl
cs
xor
pop
and
or
lock
inc
sbb
or
inc
xor
int
out
pop
stos
cmp
dec
cwtl
shrb
out
rorb
pop
fs
dec
inc
enter
adcl
and
sbb
in
sub
loopne
inc
dec
stos
nop
mov
loopne
push
jl
movsl
or
cli
out
enter
pop
push
stc
adc
ret
scas
cmp
lret
mov
jmp
adc
ud0
add
in
mov
lret
or
shrl
mov
fldl
sbbb
adc
popa
sarb
cmp
sub
clc
or
jns
inc
sub
mov
idivl
dec
addr16
inc
aas
out
mov
add
mov
cs
mov
inc
and
mov
push
out
movsb
mov
sahf
loop
mov
test
xlat
incb
add
gs
outsl
hlt
inc
pop
js
lret
jg
ret
ret
out
sub
ss
adc
scas
xor
sbb
fidivl
push
push
jle
lods
mov
sysret
hlt
movsl
pushf
idivl
fcoml
fs
adc
xlat
inc
cmp
sahf
popa
je
inc
lods
cld
cs
aaa
loope
mov
mov
ja
rcrb
inc
jl
inc
jnp
dec
jl
test
cli
fiaddl
push
xchg
imull
pop
lahf
xchg
xchg
rcl
lea
shlb
pushf
pusha
sbb
mov
nop
dec
aam
fdivr
imul
insb
xchg
call
xchg
ret
push
sub
adc
jle
pop
aam
pop
jl
push
jp
jbe
sub
test
lret
hlt
push
dec
es
jns
icebp
pushf
out
les
mov
lods
dec
cmpsb
cltd
insb
repz
loopne
test
negl
daa
mov
aam
jnp
mov
xlat
sahf
ror
call
sbb
pop
or
sub
push
stos
int
popa
mov
dec
cmpsb
test
imul
lret
xchg
inc
add
jo
shl
out
dec
mov
daa
outsl
mov
jp
push
jbe
subl
rcrl
clc
nop
or
sub
jns
inc
test
aad
jg
push
mov
inc
lods
pop
lods
ljmp
test
mov
mov
lds
sti
nop
pop
out
out
or
pop
aaa
out
mov
jb
push
fs
decl
imul
push
out
lods
jge
pop
dec
jae
loopne
xchg
rorb
push
push
fsubl
cmpsb
xchg
mov
sub
fcomip
adc
jnp
adc
loope
aas
sbb
inc
ror
sub
ja
push
into
loop
inc
addr16
adc
add
mov
mov
mov
lea
mov
or
movsl
pop
cltd
test
clc
adc
sahf
std
pop
fsubs
cmpsb
sub
or
out
mov
add
cmc
cmp
rorb
or
push
mov
js
loope
pop
movsb
mov
jo
jb
movsl
lcall
cli
rcrb
sbbl
repz
mov
cmpsb
mov
dec
mov
ljmp
push
pop
mov
in
leave
pop
movsb
lods
sbb
lods
push
xlat
les
push
addr16
push
out
cmpl
cwtl
mov
adc
imul
mov
mov
pop
das
stc
clc
ljmp
jp
mov
outsb
lcall
mov
ret
fwait
cmc
jmp
leave
inc
dec
ret
test
jmp
jecxz
enter
sub
daa
push
xchg
movsl
rcll
or
psllq
push
add
adc
pop
lods
sub
mov
stc
dec
and
jnp
mov
aas
int
imul
jno
in
int
addr16
imul
stos
std
gs
nop
in
mov
adc
add
mov
and
sub
mov
sahf
push
int
dec
and
sub
mov
sbbl
cmp
pslld
jl
fsubl
xor
testl
cs
cmp
jbe
pop
orl
sahf
push
or
jb
dec
fs
mov
subps
movsl
std
imul
repnz
int3
add
movsb
add
aas
call
out
movsb
std
xor
clc
insl
cmc
mov
add
repnz
add
imul
push
and
or
xor
lds
test
in
data16
add
addb
inc
sbb
and
call
adc
mov
outsb
jp
cmp
push
xchg
test
in
inc
in
dec
pusha
mov
movsl
inc
jg
push
sbb
idivb
aas
aas
jge
andb
mov
push
push
xor
dec
jo
xchg
jb
mov
scas
adc
dec
sbb
cwtl
and
out
sti
popf
cmp
xor
lcall
add
mov
or
and
and
mov
jbe
clc
xor
test
ja
outsb
adc
addl
fs
jae
ficomps
cmp
add
int
or
rcrl
andb
in
loopne
je
sub
pop
ss
mov
hlt
ss
test
pushf
arpl
adc
das
add
mov
fdivl
mov
in
in
sti
movsb
popa
fldcw
jp
inc
dec
cmp
sub
aaa
scas
mov
jbe
jmp
xchg
dec
jg
xor
icebp
jmp
gs
insl
mov
fbstp
push
pop
mov
icebp
push
fcmovu
enter
or
sbb
shll
push
pop
inc
pop
jge
add
mov
shr
cmpsl
lods
inc
shlb
adc
sbb
cwtl
call
xor
outsb
jo
cmpsl
inc
pop
xchg
push
cmpsl
fnstenv
mov
mov
mov
dec
and
sbb
into
pop
cmp
nop
inc
lahf
add
inc
jns
push
mov
fidivl
xchg
sub
cmp
jns
loop,pn
hlt
mov
into
jbe
pusha
xor
std
jmp
repnz
fs
arpl
les
fcomps
mov
fdivrp
add
jns
fildl
mov
stc
xor
sti
or
jb
jno
rorb
add
and
jg
enter
ret
mov
jecxz
pop
jno
loopne
pop
stos
sti
jns
call
mov
lea
mov
push
fdivl
dec
push
lret
fisttps
xchg
mov
lds
mov
lock
out
add
cmc
lret
int
and
in
repnz
push
jo
xor
xor
ret
push
jno
xlat
pop
les
mov
or
repnz
sbb
dec
sbb
ljmp
les
aas
mov
push
fcmovb
or
rcll
sub
xor
gs
test
dec
mov
sub
xchg
movsb
cmp
push
push
jnp
ret
mov
js
sub
enter
xchg
int
loop
scas
pop
push
test
add
iret
scas
imul
pop
push
jae
mov
adc
add
and
dec
je
mov
int
jb
xchg
cmpsb
subl
jbe
dec
dec
ds
in
jge
repz
hlt
outsl
inc
add
lahf
sbb
shrl
mov
push
jg
hlt
lret
cltd
inc
mov
into
cmp
or
js
out
cmpsl
cwtl
stos
cld
inc
or
ret
pop
test
add
adc
sub
loop
jg
jl
cld
mov
or
pop
add
dec
sub
inc
lods
adc
loope
pop
xchg
add
imul
push
push
outsb
sahf
mov
cld
cmpl
push
adc
fdivs
pop
dec
les
xchg
lods
xchg
icebp
jns
pop
repnz
xor
mov
call
lret
add
into
jg
sbb
test
stos
inc
dec
inc
andl
addr16
dec
or
lods
mov
insb
push
and
cmp
nop
push
jge
sbb
push
addr16
add
mov
mov
pop
jle
or
xchg
roll
inc
nop
or
push
xchg
pop
push
insb
mov
jp
adc
stos
insb
cmp
mov
adc
push
and
bnd
or
cld
lock
ljmp
sub
add
cmp
scas
pop
sarl
sbb
into
xchg
imul
inc
xchg
mov
push
push
dec
cmp
ret
iret
and
xchg
or
and
xor
imul
xchg
cmpsb
push
enter
cltd
out
call
fstpt
cli
mov
mov
xchg
jmp
scas
aad
mov
xchg
out
into
roll
jae
pop
insl
iret
pushf
cmp
xchg
pushf
lock
sbb
fistl
sub
xchg
xchg
test
pop
int
ljmp
push
lret
cltd
lds
sub
dec
sub
adc
and
daa
push
sub
clc
push
stos
push
push
gs
das
pop
adc
sbb
movsl
dec
lds
lds
sti
and
xorb
ret
int
push
mov
out
fstpt
adc
ror
pop
sub
xchg
arpl
pop
cmc
or
cmp
ret
jb
xchg
xor
inc
and
repnz
lock
loopne
out
push
mov
push
movsl
sub
mov
lret
xor
adc
call
pop
out
xchg
lcall
sub
roll
mov
xorps
mov
jbe
pushf
lods
test
dec
sbb
jecxz
decl
and
in
mov
push
mov
les
shll
nop
lret
dec
sbb
push
cmpl
mov
jno
sub
lcall
cmp
add
stc
mov
scas
dec
mov
jnp
mov
mov
hlt
ret
push
dec
mov
and
sub
push
push
add
push
xor
cmc
clc
push
fmull
and
out
leave
outsl
test
xor
pop
mov
cmp
xor
test
add
int
popf
and
cmc
pop
ret
push
std
and
idiv
mov
add
or
and
ret
mov
push
xchg
xor
pop
cmp
or
and
test
adc
dec
mov
movsl
and
outsl
test
sub
jmp
inc
ljmp
add
fldl
xchg
fs
pop
jbe
dec
sbb
movsb
in
testl
scas
in
out
and
cmp
out
cmpsb
jp
outsl
dec
sti
xchg
pop
lret
cwtl
xchg
movsb
and
sti
bound
mov
pop
mov
movsb
aaa
outsl
pop
inc
mov
les
insl
icebp
push
add
sbb
out
cmpl
test
xchg
repz
pop
test
cmc
sub
cmp
popa
sbb
ret
aaa
stos
imul
jecxz
addb
stos
ret
hlt
push
mov
es
jno
push
or
jecxz
ds
jp
jnp
lock
clc
ror
inc
xor
mov
inc
out
xchg
ss
das
fists
std
xchg
pusha
inc
push
int
inc
std
insl
repnz
pop
fwait
lods
mov
inc
dec
ds
insl
cwtl
in
xlat
shl
dec
lods
call
imul
enter
jl
mov
fisttps
mov
jne
insl
ss
cmp
mov
outsl
test
xchg
pop
mov
pop
lods
push
mov
sbb
lcall
push
rclb
lds
mov
pop
sbb
jle
imul
adc
mov
pop
or
inc
add
pop
xor
cmp
out
ret
ret
sub
out
icebp
push
dec
call
xchg
insl
imul
loopne
stc
out
xor
mov
and
mov
mov
rep
ret
daa
mov
insl
push
fildl
mov
sahf
inc
push
popf
rcrb
jno
adc
cld
fidivrs
push
iret
cmp
cmp
push
mov
fcomps
xor
mov
test
sub
je
dec
fistl
jo
lahf
jno
and
mov
xchg
mov
cmp
outsl
pop
dec
sbb
xchg
xor
negb
mov
xchg
jge
or
pop
test
push
in
push
dec
je
cli
std
cmp
add
mov
loope
test
add
loop
adc
adc
lcall
popa
mov
xchg
sarb
pop
stos
adc
out
adc
out
fidivs
shl
inc
adc
dec
dec
loope
jge
adc
daa
fwait
daa
addr16
push
xchg
enter
jbe
push
inc
sti
mov
dec
push
or
dec
das
or
ret
ret
lret
icebp
adc
mov
shll
sahf
loopne
jb
push
add
or
xchg
stos
mov
in
xchg
mov
inc
jo
cld
test
test
orb
pop
xor
cmp
add
bound
push
sbb
test
push
jno
inc
fiadds
imul
jne
and
xorl
pop
pop
scas
or
or
call
mov
sbb
in
pusha
test
aam
cmp
pop
cmpsl
movsb
test
or
pop
mov
ljmp
jp
dec
and
popf
cmp
inc
xorl
shll
jnp
aas
in
int
add
cld
pop
mov
jle
pop
fwait
repnz
push
dec
outsl
or
sub
fsub
dec
push
jbe
clc
les
xchg
bound
fdivl
inc
push
xlat
enter
sahf
movsb
push
or
add
or
movsb
lea
imul
fbld
push
cmpsl
rcrl
in
lahf
sbb
cld
jg
adc
or
mov
xchg
mov
jnp
outsb
mov
dec
mov
fisubs
sub
cmp
insb
push
jae
hlt
bnd
fwait
test
into
insl
out
inc
add
xchg
in
lret
mov
gs
pop
mov
inc
dec
outsb
pop
dec
cmp
fnstenv
loop
sbb
fst
je
stos
cltd
mov
test
sahf
fisttps
jmp
or
cmc
arpl
das
and
adc
enter
mulb
and
mov
mov
dec
mov
pop
popa
xchg
enter
arpl
or
jo
rolb
push
push
les
mov
pop
fimuls
lahf
push
and
dec
push
xchg
xchg
mov
js
mov
sbb
into
cmc
jl,pt
shll
lcall
aas
pop
popf
out
inc
popf
lods
or
outsb
mov
sub
out
std
cwtl
mov
jg
inc
adc
mov
enter
pop
imul
adc
js
inc
rol
jg
pop
jg
das
and
mov
pusha
movb
xor
mov
loope
frstor
std
dec
add
xchg
push
push
gs
xchg
xchg
out
ss
inc
mov
dec
into
ljmp
jnp
add
push
mov
xchg
rol
xchg
pop
test
push
dec
cs
or
dec
inc
lods
xor
mov
shrl
in
or
ljmp
mov
in
sub
lcall
shrl
lret
mov
insb
push
leave
fcomp
and
xorb
mov
mov
das
in
aad
mov
insl
data16
sbb
jo
add
adc
imul
add
bound
mov
loopne
and
mov
cwtl
sub
mov
cltd
mov
push
or
push
cld
mov
cmp
cs
xor
dec
test
setbe
stos
in
repz
movl
add
mov
pushf
inc
mov
das
jecxz
xchg
push
and
ja
sbb
mov
push
xsavec
popf
aas
push
mov
pop
or
lock
cmp
xor
repnz
outsb
inc
push
stos
int3
leave
jp
mov
repnz
es
mov
add
mov
in
cmp
lahf
fwait
loopne
mov
jae
movsl
adc
addr16
pop
in
and
popa
sub
xor
jnp
mov
dec
mov
mov
push
lock
xor
and
arpl
mov
or
sahf
cld
push
fmuls
test
mov
rol
xor
loopne
jbe
jnp
mov
imul
add
xchg
inc
outsl
xor
jp
dec
pop
imul
xlat
js
aam
sub
je
fwait
push
mov
xchg
adc
mov
movsl
rcll
dec
and
pop
mov
sbb
mov
aas
adc
or
negb
mov
and
and
push
imul
jg
dec
popa
jecxz
push
push
lods
or
fiadds
scas
das
outsl
add
insb
xchg
inc
scas
mov
mov
mov
push
aam
pop
outsl
mov
sbb
add
push
in
arpl
out
adc
pusha
lahf
mov
inc
adc
scas
jo
pop
gs
scas
repnz
in
jle
lret
fimuls
call
pop
adc
fstps
and
lcall
jle
lcall
add
adc
push
sbb
hlt
or
jl
xor
jmp
cmpsb
insb
cld
outsl
into
out
subb
push
in
mov
movsb
xchg
push
jne
push
hlt
pop
rsqrtps
cltd
rcll
pop
adc
arpl
and
or
jg
or
mov
movsb
int3
fiaddl
outsb
fmull
jbe
iret
xlat
push
sbb
inc
add
inc
repnz
sbb
mul
test
jb
and
dec
xchg
xchg
jbe
call
mov
dec
adc
mov
fiadds
lods
or
cmp
mov
pop
loope
iret
xor
es
and
stos
add
cmp
pop
push
xor
cmp
sub
popf
inc
pop
jno
mov
push
xor
lods
int
mov
jge
sub
imul
hlt
ficoms
aam
jne
mov
insb
push
aam
dec
adc
pop
enter
hlt
mov
sbb
scas
cli
out
mov
fs
pusha
sbb
jle
dec
adc
jge
push
or
xor
mov
shlb
rorb
das
push
fsubrs
mov
aaa
xchg
cmpsb
aaa
aas
into
stos
xor
sbb
or
mov
test
push
adc
xchg
mov
mov
jnp
scas
xchg
ss
and
ljmp
mov
adc
xchg
cli
scas
mov
pop
fsubs
push
cmp
add
or
add
xchg
pop
sbb
cmp
out
lcall
sub
pop
xchg
lods
insl
mov
jge
xlat
adc
inc
bound
insl
sub
test
pop
shrl
in
cli
cs
pop
mov
pop
in
gs
cmp
inc
aam
in
jb
insb
test
adc
stc
pusha
sbb
dec
inc
roll
movsb
mov
xor
loop
hlt
imul
pushl
shl
mov
jnp
xor
pop
or
adc
mov
mov
es
push
sbb
lret
xchg
push
jmp
xchg
scas
inc
test
aas
movsb
stos
rclb
lahf
inc
xchg
jb
adcl
imul
cmpsw
and
scas
adc
fsubl
cmpsl
shrl
stc
push
cmp
inc
jo
lds
shlb
xchg
jl
popf
jg
adc
inc
or
and
and
sub
cmp
fiadds
or
hlt
or
in
ja
mov
add
mov
decb
gs
xchg
dec
jmp
cli
xchg
test
push
pop
dec
rolb
jmp
jno
push
cmp
inc
sbb
xchg
push
sbb
addl
dec
mov
sbb
sub
enter
sub
dec
mov
xor
mov
pop
aas
xlat
push
in
cmpsb
leave
push
ret
inc
or
fsubp
sahf
and
or
mov
movups
inc
mov
sbb
dec
ja
sub
pop
in
dec
xchg
movsl
adc
jne
cmpsb
pop
mov
fwait
xchg
inc
inc
jmp
mov
les
jg
cmc
mov
push
lds
mov
test
in
fists
xchg
into
out
and
jnp
push
cmp
push
push
js
movsl
movsb
jg
in
or
push
pop
mov
lret
push
pop
lods
scas
jo
push
xchg
aam
pop
nop
cld
sbb
fisubrs
loopne
jp
push
jg
sti
jl
lret
lods
stos
jns
push
lds
loope
sub
mov
scas
adc
sub
lcall
and
les
mov
push
push
mov
or
addr16
and
jnp
sub
aam
es
fnstsw
and
add
fidivs
or
push
sbb
scas
push
lret
xchg
jg
shlb
push
imul
in
jmp
loopne
xchg
flds
dec
pop
xchg
in
or
ljmp
mov
arpl
out
rolb
and
sub
sahf
in
div
lods
xor
orb
iret
push
jmp
push
sub
test
sahf
sub
xor
pop
push
mov
pop
inc
in
in
sbb
cmc
inc
and
inc
xchg
arpl
xchg
pavgw
pop
inc
repnz
mov
pushf
cld
popa
shll
pop
cltd
adcl
mov
inc
aam
jl
mov
xor
push
jmp
insb
xchg
std
sub
mov
jmp
cmp
cmc
push
movsb
sbb
into
jb
sbb
leave
cmp
cmp
jmp
sbb
cmp
cmp
aam
sub
mov
es
pop
mov
jp
test
pandn
scas
sub
adc
clc
out
mov
jbe
push
rorl
pop
lret
sbb
push
xchg
cmp
repz
sbb
loopne
xchg
enter
repnz
lcall
sbb
cli
or
das
jmp
push
loop
add
test
sbb
sub
push
sub
mov
aad
insb
inc
xchg
cmc
repnz
out
mov
lret
stos
mov
add
mov
sbb
cmpsb
je
jnp
fdivl
vmulsd
xorb
mov
add
cmp
sbb
mov
pop
xor
mov
test
mov
or
movsl
push
stos
adc
jne
adcb
inc
jno
ror
in
mov
sbb
ja
popa
test
outsl
mov
xchg
popa
mov
sbb
rcrl
data16
cmp
inc
push
movsb
pop
xor
jno
xchg
pushf
xor
je
mov
sahf
xchg
pop
pop
dec
adc
inc
rcl
cmpsb
cmp
aaa
add
dec
push
cmp
dec
mov
push
inc
dec
inc
popa
notl
push
das
lds
in
mov
and
inc
add
js
ret
das
mov
movsb
lds
or
int3
push
sbb
inc
sti
dec
in
shlb
adc
xchg
pop
les
xchg
or
sub
in
mov
test
das
sbb
dec
mov
adc
jp
lcall
cs
cmc
inc
out
xchg
sbb
maxps
lret
out
pushf
xchg
adc
dec
dec
js
pushf
sub
shl
int3
loope
xchg
jns
xchg
dec
lret
stos
sub
in
mov
dec
push
add
fstps
gs
and
jns
test
aas
add
lods
push
movb
mov
sub
outsb
mov
in
lds
cmp
pushf
pop
sahf
add
xor
std
jge
push
sbb
stc
mov
enter
imul
fwait
nop
inc
inc
inc
dec
daa
outsl
lds
addr16
aas
pop
push
pop
xlat
daa
cmp
mov
jecxz
mov
mov
mov
shr
xchg
dec
push
and
dec
inc
pop
mov
mov
xor
divl
dec
jno
inc
cli
cmp
push
insb
sbb
or
lea
mov
repnz
mov
repz
int
das
xor
mov
leave
jo
sahf
jg
cmpsl
or
lock
movsl
rorb
xchg
shll
push
loopne
xor
stos
xor
addr16
mov
loopne
packssdw
sbb
cwtl
lahf
mov
xor
jle
sub
cli
lds
dec
outsl
int3
mov
mov
movsl
xchg
dec
ljmp
xchg
stos
pop
mov
fstpt
xor
test
filds
rcrb
mov
out
pushf
mov
icebp
mov
call
xchg
sub
cmpps
subb
outsl
sub
cmp
and
mov
jo
imul
loope
sbb
lret
and
daa
xor
out
mov
lahf
sbb
mov
mov
sbbb
stc
popf
cli
loopne
out
arpl
inc
pusha
sub
sbb
or
adcb
cli
mov
sub
aas
mov
dec
shlb
push
out
adc
pop
mul
ficomps
ret
inc
push
mov
xor
and
aam
nop
cmp
mov
mov
lret
dec
xor
les
in
out
jp
jnp
cwtl
push
loope
ds
xchg
inc
fidivs
stos
sub
scas
outsl
scas
push
adc
pop
pop
mov
sub
bound
and
fildll
mov
cmp
push
mov
jo
cvtdq2ps
loop
adc
adc
cmpl
orb
sbb
enter
loope
out
and
mov
xchg
or
mov
jnp
cmp
into
psubd
and
push
fdivrs
jb
xlat
sub
lahf
dec
and
sbb
mov
pop
adc
arpl
call
add
clc
mov
out
popf
ficoms
mov
pop
gs
lods
cmpsb
cmpsb
es
lock
bound
pop
cmp
lock
inc
test
jno
cltd
add
dec
lahf
push
pusha
or
pop
or
sti
cmp
test
enter
push
pop
fisttpl
mov
pop
pop
ret
sub
loopne
or
rorb
mov
test
filds
mov
adc
daa
mov
pop
ret
mov
and
sbbl
fidivs
cmp
and
rcr
mov
arpl
out
add
add
push
test
mov
shll
adc
jns
out
xor
cltd
or
cmp
popf
xor
sub
or
mov
rol
mov
popl
mov
ret
lret
lret
cmpsl
lcall
cmc
cld
jbe
test
mov
jge
call
loopne
mov
add
adc
dec
mov
dec
jle
sbb
push
sub
mov
cld
mov
inc
sbb
sarb
push
adc
push
icebp
ja
push
sub
ficomps
and
xor
adc
mov
add
test
jae
sub
mov
mov
inc
rclb
mov
sarl
jno
data16
sub
testl
call
gs
outsb
or
mov
pushf
aad
mov
scas
dec
pop
jle
arpl
push
ljmp
push
adc
add
jmp
or
arpl
daa
aam
aaa
xor
ljmp
mov
repnz
loope
inc
sbb
inc
jne
mov
pop
sti
pop
pop
and
bound
xor
xchg
sbb
out
xor
jne
mov
pop
push
ds
mov
sbb
xlat
daa
data16
addl
fimull
xor
fisubrs
mov
ja
cltd
or
mov
cmp
in
and
mov
cmp
cwtl
pop
fmul
or
movsb
mov
add
nop
jp
add
icebp
and
sbb
sub
sbb
bound
jecxz
sbb
adc
movsl
ja
jg
mov
std
fs
cltd
outsl
jae
xor
push
insl
outsb
arpl
cmp
pop
jae
je
mov
xor
dec
fs
fildll
push
inc
jae
stos
push
mov
xor
jl
mov
imul
stos
out
hlt
pop
xor
daa
iret
mov
movsb
enter
enter
push
cmp
ss
dec
jb
std
fldt
cli
lods
shlb
and
js
dec
fnsave
popf
fadd
clc
ljmp
sbb
cmp
cmp
aam
mov
adc
cmp
pop
mov
lret
sub
jp
cltd
jb
imul
push
dec
adc
mov
jmp
mov
in
add
pop
into
jae
loop
and
pop
mull
mov
loop
repz
jp
pushf
pop
sarl
cld
push
icebp
xor
push
pop
sbb
dec
rorl
pop
dec
add
sub
adc
mov
pop
popl
fisubl
repnz
mov
sub
xchg
cmpsb
jecxz
cltd
adc
jg
xchg
or
cwtl
ror
dec
rol
sbb
data16
cmp
jae
pop
dec
in
repnz
push
jbe
xlat
pop
mov
sub
je
xor
in
subb
inc
xchg
fimuls
hlt
or
dec
mov
xlat
and
stc
inc
clc
pop
aas
and
pop
mov
lret
mov
sub
xchg
lods
pop
bound
dec
mov
scas
imul
mov
jge
pushf
loop
imul
pop
out
add
or
mov
daa
dec
pop
filds
cmpsl
mov
adc
cmp
loop
push
pop
mov
xor
dec
mov
jb
sub
jbe
pop
loop
rcll
movsb
scas
subl
inc
add
xor
pop
jne
or
add
sub
int
jno
adc
addr16
xor
repz
hlt
mov
fwait
pop
or
adc
or
and
cmpsb
push
push
and
and
pop
rcrb
sbb
mov
hlt
and
cmpsl
aaa
and
adc
jo
xor
add
decl
mov
outsl
out
jmp
popf
or
fwait
xchg
ljmp
je
mov
xor
in
or
lea
xchg
xchg
jns
jbe
cmc
out
mov
mov
not
sub
mov
or
fistl
sarl
mov
loop
xor
adc
jo
jnp
loop
fisttpl
call
insb
pop
or
lds
jne
sbb
ret
mov
dec
adc
mov
lock
adc
stos
outsl
pop
xor
scas
jmp
cmp
or
gs
ja
int
inc
int
aam
dec
jmp
loop
xorb
xor
cmp
jae
stos
mov
ljmp
xor
pusha
mov
adcl
test
fnstcw
xchg
or
outsb
cmpsb
hlt
ljmp
ja
daa
adc
mov
adc
dec
jne
pusha
rcr
cmp
popf
pop
imull
jb
jae
lods
cmpsl
jo
mov
clc
leave
sub
cli
mov
or
jp
jno
adc
int3
inc
and
fucom
mov
popa
into
fldenv
cwtl
inc
mov
lahf
mov
lcall
dec
enter
cmc
inc
inc
pop
nop
int3
xlat
lret
jno
jge
push
sub
cmc
aas
cmp
test
adc
es
push
xchg
fisubrl
push
icebp
ret
push
loop
sbb
nop
sub
insb
js
add
xchg
loope
into
mov
arpl
dec
jns
loope
fimuls
mov
test
fwait
out
sarl
mov
push
je
dec
jo
mov
sub
repnz
fisttpl
mov
jae
daa
dec
mov
pop
aaa
ret
loope
xchg
js
icebp
in
inc
and
popa
mov
addr16
fwait
mov
jge
or
fwait
sub
mov
or
fcompl
sahf
lock
fnstcw
dec
stc
sbbw
ds
xchg
js
jmp
mov
in
and
lods
or
mov
or
lock
call
mov
loope
mov
push
rorb
icebp
test
push
dec
into
aam
popf
test
cmp
enter
rcll
jp
faddl
mov
cmc
jns
xchg
aam
stos
adc
imul
mov
dec
scas
lea
cltd
movsl
outsb
cmpsl
rclb
test
and
jg
in
jl
in
xchg
mov
popf
cmp
mov
mov
push
icebp
lds
lahf
xchg
sar
std
popf
inc
or
dec
mov
movsb
clc
lock
or
inc
jg
sbb
jno
sbb
pop
fs
jge
cmp
pop
ret
leave
shrb
loope
repz
jbe
stos
enter
adcl
aad
rolb
adc
cs
rorl
loope
cmp
jnp
enter
lea
inc
cmc
jnp
mov
cmpl
xor
pop
jne
dec
arpl
ss
mov
cmp
push
mov
fs
cwtl
mov
push
icebp
xor
mov
cmp
ret
jl
jns
jo
fisttps
fildl
cmp
mov
pusha
in
mov
inc
push
push
xchg
pop
ljmp
add
pop
aam
js
insl
stos
xor
push
loope
mov
mov
jg
leave
mov
xchg
gs
mov
pop
mov
sbb
push
push
cmp
sbb
jge
mov
add
lods
add
sbb
push
add
scas
sub
insb
lahf
ret
mov
rorl
das
mov
add
or
lahf
test
mov
dec
xor
jb
sub
cmp
jne
xor
cmpsl
in
sbbb
mov
xor
div
xchg
pop
ja
mov
mov
rolb
or
adc
hlt
dec
mov
inc
and
adc
ss
cmpsl
subl
fdivl
daa
cmp
jae
push
fsubrp
sbb
mov
add
jae
stos
dec
lock
lret
xchg
loopne
ds
mov
scas
adc
jecxz
in
pop
and
or
inc
dec
cmp
cmc
xchg
mov
sbb
xlat
repz
pusha
pop
adc
pop
and
add
sub
jmp
in
inc
popf
cmp
mov
loop
arpl
xchg
mov
cmpl
inc
and
subb
loop
mov
jb
cmp
mov
and
sarl
inc
xchg
int3
inc
jecxz
repz
repz
adc
dec
dec
popa
pusha
pushf
ja
xchg
xlat
aad
fld
movsb
icebp
dec
mov
mov
mov
jns
fsubr
int3
les
and
mov
icebp
add
scas
cs
sbb
mov
push
loop
scas
enter
std
mov
jecxz
shlb
push
pop
pop
xchg
xchg
cmpsb
scas
mov
push
js
ljmp
movsl
rolb
ret
call
in
aas
mov
mov
rdtsc
cs
out
push
ret
jp
sub
rcrb
rcll
lods
icebp
dec
out
cmc
addl
in
scas
jp
pushf
mov
enter
bound
and
push
mov
ret
pop
cmc
movsl
fstl
add
mov
mov
mov
lock
mov
cli
push
gs
cmp
xchg
mov
fimull
lret
push
sub
js
daa
push
call
mov
sbb
and
mov
in
inc
pusha
lock
inc
jle
dec
scas
mov
enter
ret
rclb
xchg
pop
inc
adc
jecxz
call
in
negl
rorl
add
leave
mov
jecxz
mov
inc
lds
sti
xchg
fwait
out
inc
sub
adc
subb
push
pop
sub
push
popa
mov
jge
out
fcompp
sahf
dec
xchg
iret
xchg
xor
xchg
loope
inc
movsb
pop
loopne
popf
push
xchg
push
js
loop
shll
inc
ss
shlb
push
add
insb
pop
aam
xchg
xor
xor
sahf
test
sub
cwtl
sbb
into
popa
lcall
jnp
and
jp
fiadds
or
js
pop
daa
lock
mov
push
imul
cmp
movsb
pusha
adc
cmp
mov
xlat
pusha
lods
sbb
or
add
repnz
fwait
out
mov
stos
stos
push
out
loop
divb
icebp
cwtl
test
je
mov
pop
pop
lret
sarb
fwait
push
lahf
mov
test
seta
sub
aaa
aad
pop
movsb
cltd
fdivrl
sub
fwait
push
in
dec
test
push
ja
inc
push
jae
dec
lea
jg
jmp
filds
lods
sbb
pusha
mov
inc
movsb
jb
mov
aaa
cmp
aaa
dec
push
pop
cmp
clc
cmpl
stos
fildl
sbb
dec
frstor
and
dec
jge
in
cli
pop
ljmp
pushf
adc
push
mov
aad
in
and
dec
std
out
or
stc
insl
std
loopne
or
fdivr
sub
lods
mov
push
sbb
icebp
loop
clc
icebp
rorl
push
pop
push
mov
nop
das
pop
sbb
add
ds
lretw
hlt
mov
out
jae
mul
xor
std
sub
shl
inc
mov
or
shlb
pop
mov
stc
xchg
push
int3
inc
mov
test
dec
lahf
fidivl
pop
jbe
mov
lea
gs
or
xchg
or
fcmovbe
xchg
sub
lds
sub
rclb
idivb
and
push
fwait
mov
adc
mov
mov
stc
push
add
push
push
cmpsb
sbb
cltd
push
into
stos
cmp
push
shrl
dec
push
dec
mov
imul
sbb
push
push
test
push
pop
insl
out
inc
aad
arpl
mov
cmpsl
mov
rcrl
push
xchg
adc
rcrb
iret
aad
pop
ds
cs
sti
scas
aad
dec
inc
jno
push
jno
rcrl
xor
fwait
pop
jp
sub
or
clc
xor
mov
mov
push
adc
jnp
stos
test
pusha
rcr
cmc
ficomps
aas
mov
pushf
and
dec
data16
addr16
out
imul
add
in
push
data16
cs
jmp
xor
push
push
test
loope
inc
rcrb
mov
mov
scas
mov
pop
jmp
clc
in
push
mov
cli
rorl
test
mov
cmp
lock
ss
inc
and
push
and
pop
mov
lods
adc
jmp
pop
push
ss
mov
sti
shlb
call
jge
mov
add
pop
dec
add
pop
xchg
fucompp
cwtl
ss
call
dec
fldcw
and
lods
cmpsb
jno
inc
and
call
js
fsubp
shlb
jo
hlt
inc
sub
add
ja
jg
out
and
aam
sub
jb
clc
adc
adc
push
incb
stos
into
xchg
repnz
pushf
lea
iret
js
xor
xor
aaa
fs
jbe
sub
inc
and
push
mov
cmpb
pop
adc
clc
pop
outsl
mov
xchg
jecxz
sub
sub
dec
add
sub
jno
fnstenv
lods
mov
shlb
jnp
jo
gs
push
lret
rcrl
push
mov
add
xchg
or
outsb
inc
mov
std
or
sbb
lret
rcrl
inc
pushf
xchg
popa
out
imul
adc
push
fdivr
sbb
ret
mov
jmp
inc
vmovshdup
fs
fcoml
cmpsl
mov
push
sbb
and
cmp
sbb
xor
pop
or
sbb
pop
jl
shrl
push
enter
aam
loopne
leave
popa
inc
or
mov
in
pop
xchg
pop
shlb
cmpsl
sub
out
mov
ss
jmp
je
ret
aas
cmp
add
mov
mov
fistl
sub
imul
sub
mov
inc
rorb
scas
shr
decl
leave
lock
mov
aas
popf
add
adc
xchg
mov
mov
int3
adc
push
push
loop
adc
into
push
lahf
sub
sarl
ja
dec
out
scas
in
movsb
ja
inc
push
adc
out
addr16
data16
add
mov
jo
add
mov
jns
scas
int
out
loop
icebp
mov
dec
add
cltd
push
loop
mov
mov
jp
xor
sub
or
sbb
into
stc
xchg
or
pop
bound
mov
stos
pop
mov
js
negb
inc
js
fsubrs
iret
adc
fidivl
inc
fbld
mov
xchg
add
outsb
pushf
dec
ja
mov
sub
and
out
cmp
or
xchg
lods
jge
push
mov
es
jns
pop
sbb
cmpsl
xchg
cwtl
mov
xor
movsl
call
cmp
push
lds
sub
push
mov
cmpsl
into
fisttpll
or
pushf
out
jg
dec
fisubrs
movsl
cmp
frstor
cmc
aad
mov
jo
arpl
mov
pop
repnz
push
adc
jmp
sti
sub
pop
cwtl
mov
pop
jecxz
add
xlat
lock
or
jbe
rorb
sub
push
ret
stos
iret
inc
clc
jbe
leave
push
je
fiadds
faddp
outsl
out
mov
jae
xchg
test
pop
loope
fstpt
js
out
sub
jb
push
fistpll
sbbl
aaa
jbe
cwtl
adc
mov
repz
sbb
sahf
xor
aad
inc
es
movsb
cli
mov
or
and
pushf
push
jecxz
imul
outsl
adc
mov
lahf
pop
mov
inc
mov
sub
adc
clc
cmpsl
mov
mov
pop
and
ss
icebp
pop
sbb
les
xchg
mov
orl
ds
push
negl
xor
push
or
xchg
xchg
test
orl
jmp
xchg
lods
adc
fsubs
out
stos
sub
or
jl
sti
das
adc
movsl
mov
loope
jmp
je
xchg
or
push
movsb
cmc
mov
arpl
insl
add
mov
or
jo,pn
pop
xchg
adc
fsubrs
mov
shll
scas
mov
and
mov
icebp
mov
adc
mov
and
xor
push
xchg
insl
aas
xchg
je
adc
leave
mov
push
sub
push
or
sbb
ss
sub
mov
push
lock
inc
adc
pop
ds
mov
scas
out
xor
sub
jecxz
ss
adc
mov
clc
adc
jecxz
and
add
mov
call
inc
ljmp
jecxz
dec
out
jl
pusha
mov
test
pop
addr16
and
and
dec
mov
test
filds
testb
ljmp
mov
lods
push
enter
pop
mov
push
or
test
wrmsr
pop
sbb
fdivs
lea
mov
sub
sub
mov
sbb
pop
aaa
or
je
inc
outsl
cmpsl
in
test
xor
fimuls
mov
xchg
sub
sub
ror
cli
movsl
pop
pop
pusha
mov
sub
pop
adc
cwtl
aam
je
pop
push
mov
mov
icebp
mov
in
shlb
push
gs
clc
sub
xchg
jne
push
sub
jl
jno
inc
dec
stos
enter
xor
lock
mov
jle
imul
pop
mov
mov
int
sub
sbb
adc
jb
jo
push
fiadds
out
xchg
movsb
scas
fdivrp
inc
nop
leave
inc
nop
jge
fnstsw
push
xor
std
or
jae
jb
lods
jge
mov
in
repz
and
shll
add
fs
jnp
xor
cmpsl
pop
div
add
sbb
push
aam
fdivrs
movsbl
hlt
sahf
add
xchg
rclb
push
sub
ljmp
sbb
mov
cmp
and
xor
stos
cld
sub
mov
fbld
gs
loop
fists
pop
in
jns
jmp
test
pop
sub
xchg
int
jbe
add
dec
sbb
jg
leave
cs
cmp
push
cltd
jmp
pop
xor
in
xchg
bound
sub
push
repz
adc
add
aaa
push
push
mov
dec
rcl
xchg
or
fldcw
ret
shl
insb
ljmp
fisttpl
mov
sbb
cmpl
dec
out
imul
movsb
rol
inc
dec
cltd
out
insl
adc
shlb
lea
frstor
or
push
push
dec
pop
inc
out
rorb
pop
push
pop
rorl
mov
inc
test
mov
cmp
fwait
inc
stos
pop
pop
and
repz
jg
es
pop
xor
sbb
test
sub
mov
lods
mov
xchg
xlat
pop
add
inc
jge
out
and
je
repz
mov
pop
int
xchg
fcompp
movb
sub
fdivp
shr
adc
mov
jmp
insl
pop
loop
add
or
push
mov
pop
std
data16
dec
lds
sub
mov
pop
xor
adc
jp
mov
insb
mov
mov
out
ret
out
mov
sarl
out
mov
mov
sahf
cmp
sub
jg
sub
jnp
add
lret
xchg
insl
push
lock
je
add
push
fcomps
pop
mov
or
mov
sub
fildl
out
xor
test
jecxz
mov
and
fsts
ljmp
and
scas
into
xor
mov
and
pop
mov
mov
nop
dec
test
ffree
dec
movsl
push
rorb
jnp
push
rclb
ss
nop
dec
and
and
pop
jbe
fmull
insb
cmp
sub
mov
mov
imul
aas
stos
push
sbb
sbbl
push
adc
rorb
mov
pop
mov
fbstp
sub
repz
cmp
adcb
push
mov
dec
cmp
sahf
pop
mov
scas
scas
xchg
stos
aad
mov
aad
lret
add
mov
fsubl
jne
lahf
jg
fsub
mov
or
cmp
movsl
test
hlt
mov
cmpsl
adc
jnp
inc
loop
rcrb
mov
rorb
sub
scas
movsb
mov
mov
lea
mov
pop
dec
ja
mov
lcall
mov
or
inc
xchg
push
stos
sarb
stos
ljmp
jmp
mov
movsb
lods
xchg
xor
sbb
test
in
hlt
icebp
iret
sbb
stos
push
stos
mov
jge
inc
sub
lret
repnz
xor
jns
adc
sub
push
movsl
jne
in
pop
repnz
or
xlat
inc
sbb
push
add
and
mov
shr
cmp
popf
idivl
jp
repz
inc
incb
in
mov
mov
int
dec
aam
sbb
dec
mov
dec
xchg
dec
popf
cmp
jae
sar
or
mov
loop
xor
add
std
pop
jae,pt
xchg
imul
push
out
imul
jl
pop
hlt
lea
xor
test
mov
adc
dec
gs
addr16
aam
push
and
push
mov
inc
out
jbe
or
lea
adc
xor
jne
add
sub
jnp
movsb
and
add
out
mov
mov
stos
sarb
inc
dec
mov
imul
adc
pusha
test
sub
mov
test
push
idivb
out
cli
xor
pop
inc
add
data16
push
xor
push
fstps
std
mov
or
cmp
xchg
idivl
addb
sarl
out
mov
and
leave
hlt
das
shlb
add
movsb
cwtl
jle
cwtl
jo
cltd
dec
int
sbb
and
js
xor
pop
aad
ret
mov
xor
test
scas
pop
in
mov
fwait
rol
mov
xchg
lret
pop
cld
testb
sbb
mov
xor
aaa
xor
addr16
insl
fcmovnbe
mov
pop
xor
push
jecxz
cmpsl
jne
xlat
cli
cmpl
cmpsb
mov
ficoms
xchg
mov
adc
sbb
pop
fld
repz
gs
jbe
push
sahf
mov
jmp
std
mov
cmpsb
jecxz
subl
int3
int3
mov
sbb
mov
aaa
jnp
adc
sbb
cmc
clc
pop
mov
push
jns
enter
outsb
push
jecxz
cmp
mov
aam
jae
mov
sub
or
enter
push
cmp
xchg
ror
pop
mov
xchg
sbb
int
push
jb
mov
mov
cld
lret
ret
ret
dec
pop
pop
adc
in
add
repz
dec
mov
pop
ljmp
cwtl
les
mov
daa
adc
mov
and
cmpsb
pop
xchg
mov
insl
push
daa
das
sahf
out
hlt
jne
cmpsb
daa
cs
lods
rol
outsb
xchg
shll
gs
xchg
stos
mov
sbb
mov
dec
scas
enter
movq
scas
sub
sub
pop
inc
cmpsl
pop
lret
or
jo
les
into
mov
lods
sets
dec
push
push
sbb
ss
pushf
inc
fisubrl
cmp
jp
rorb
lea
rcrb
xor
adc
dec
add
into
adc
je
cmp
loop
add
add
mov
and
push
ss
cmp
mov
cmp
sarb
jbe
in
adc
pop
movsl
pop
hlt
bound
pop
pop
sti
adc
mov
cld
xor
fs
insb
subl
cmp
int
inc
jns
jp
imul
movsb
jnp
mov
popa
out
mov
mov
adc
push
push
fistpl
sub
icebp
lods
or
add
cli
dec
xchg
daa
cmpsl
jecxz
cmp
sub
loop
aaa
add
fldcw
jbe
jb
pop
xchg
aaa
int
aas
or
lret
pop
pop
insb
pop
out
in
scas
ret
sub
xchg
pop
hlt
repnz
cmp
ret
in
mov
scas
sarb
movb
call
mov
gs
and
out
test
dec
lahf
adc
jbe
mov
cmp
or
push
jnp
xchg
fsubs
std
dec
sahf
sbb
mov
lods
out
or
test
lods
in
lret
ds
sbb
insb
lods
sahf
iret
mov
into
jnp
mov
push
leave
aad
lret
ds
push
inc
inc
pop
mov
fucom
cmp
andl
push
jo
icebp
ljmp
push
or
popl
inc
adc
inc
xor
xchg
subb
xsavec
std
pop
adc
in
in
sarl
imul
test
push
sar
movsl
sarl
bnd
gs
cmc
cmp
xor
mov
scas
pushf
arpl
mov
inc
sti
rcrl
and
mov
jne
xor
jbe
pushf
adc
jbe
js
xor
sbb
pop
add
push
push
push
sub
subb
add
ret
dec
pop
lods
lods
repz
pop
cmpsb
insb
cmp
jno
dec
je
jl
adc
adc
pop
mov
mov
dec
dec
shll
insl
mov
push
out
cmp
mov
outsb
arpl
js
adc
hlt
int
testl
mov
push
stos
jno
lret
inc
hlt
add
inc
popa
cmp
push
lods
cmp
add
jbe
imulb
gs
or
inc
ja
xor
xor
mov
loope
push
dec
xor
sub
dec
test
mov
push
xchg
fs
inc
repz
cmp
testb
cli
cmp
push
aas
xchg
push
dec
cwtl
pop
test
xlat
jle
pop
in
push
inc
jno
test
xchg
mov
add
int
mov
cmp
push
and
jns
lret
nop
or
mov
jle
cmp
mov
push
dec
adc
js
mov
mov
push
ret
cmpsl
dec
gs
mov
pushf
mov
xor
ds
cli
cli
mov
mov
loopne
xchg
adc
out
sbb
cmp
leave
into
pop
jno
imul
xchg
flds
mov
lcall
xchg
cmp
sbb
jg
lret
cmc
and
cmp
mov
call
scas
jle
repz
sub
cltd
daa
rorl
scas
scas
inc
pop
fbstp
fadd
add
insl
stos
dec
xchg
inc
insb
and
pop
insb
orb
add
insl
inc
loopne
adc
mov
sarl
jno
add
addr16
add
add
rcll
test
ds
fxch
xor
cmp
stos
incl
aaa
lds
lret
jecxz
insl
andb
xchg
inc
fwait
mov
xchg
insb
flds
rcl
in
ror
pop
sahf
cs
xchg
fldl
dec
lret
cwtl
enter
lods
idiv
mov
and
popa
push
pop
mov
scas
int3
rorl
jg
sbb
and
test
in
mov
leave
mov
cmp
mov
pop
adc
and
xor
dec
mov
mov
cmp
movsb
push
jmp
repnz
push
mov
insb
mov
icebp
push
ja
mov
inc
jo
mov
push
sar
mov
lods
fsub
stos
fsubs
or
pop
adc
movsb
push
xor
dec
xchg
xchg
popa
ja
pop
fstl
out
sub
dec
and
jecxz
xchg
shlb
xchg
rol
clc
push
movsl
pop
lahf
ss
fs
sbb
mov
bound
js
xor
lods
push
add
or
cmpsb
pop
lods
cli
and
scas
cmpsl
mov
dec
aas
aas
imul
lahf
popf
aam
lds
dec
jns
outsb
sub
sub
js
fsts
push
sbb
sub
and
imul
push
cmp
xchg
pop
and
mov
xchg
orl
push
pushf
lods
pop
pusha
fwait
xor
mov
sub
mov
mov
xchg
sub
sub
mov
fwait
popl
or
insb
test
int
mov
addr16
mov
mov
cmpsl
cli
lcall
jmp
ja
fimuls
outsb
lea
xchg
push
push
rcrb
adc
lds
push
push
sbb
pop
push
sarl
inc
lods
ds
jg
mov
cld
pop
cmp
push
jmp
int3
rcrb
cmp
sbb
leave
daa
push
lahf
daa
fimuls
cltd
inc
in
icebp
cmc
mov
push
ss
mov
outsl
in
mov
mov
pop
ja
orb
sub
mov
addl
pop
fsts
or
mov
out
jbe
inc
and
scas
push
incb
ror
jg
lods
xchg
jno
test
mov
out
inc
mov
xlat
flds
mov
push
cmpb
add
mov
adc
loope
mov
sbb
gs
sbb
idiv
into
fisubrl
mov
cmp
divl
dec
add
jge
pop
leave
out
sub
popa
cmp
fs
movsb
mov
mov
push
pop
jae
cmpsb
and
outsb
sub
sbb
sbb
push
les
mov
fimuls
mov
cmp
int
push
add
lahf
ficompl
imull
imul
add
push
sub
ret
sbbl
lods
iret
mov
std
xchg
jne
mov
adc
fistl
pop
or
sub
ret
clc
sub
pop
adc
sahf
mov
cmc
inc
insl
jp
lret
sub
mulb
pop
dec
shll
lock
mov
mov
dec
stos
int
xor
imul
imul
subl
scas
push
or
pop
or
jle
pop
mov
push
mov
sub
jmp
shlb
inc
fdivrs
pusha
mov
out
and
push
hlt
xchg
in
mov
ucomiss
sbb
daa
mov
pop
push
add
testl
push
push
shll
push
in
orb
xchg
in
cld
pop
cwtl
push
repnz
jle
dec
or
and
jae
jne
outsl
sbbl
mov
imulb
int3
xchg
adc
cli
mov
movl
jne
lds
aad
sbb
mov
push
adc
sub
daa
or
xchg
je
jae
data16
cmpsb
push
lahf
test
fcmove
jecxz
movb
mov
mov
xlat
shll
inc
fistpl
pop
loop
mov
xchg
call
cmp
and
xchg
pop
push
cmp
popw
out
in
iret
testl
lods
cwtl
repz
sbb
or
or
jbe
sub
cwtl
xlat
mov
sub
pop
cmp
ja
iret
in
int3
decl
sub
sbb
add
clc
xor
arpl
xlat
adc
sub
mov
jns
les
test
mov
lea
movsl
and
xor
xchg
lret
sbb
cmp
test
rclb
xor
enter
jnp
outsl
out
xchg
pop
hlt
enter
popa
rcll
xchg
and
sbb
adc
imul
sub
stc
push
add
xchg
push
cmpsb
mov
adc
or
ljmp
in
lcall
outsl
jecxz
jg
or
or
popf
xorb
push
push
or
sti
and
test
rclb
or
xor
and
es
sbb
aas
adc
jmp
enter
ja
xchg
mov
add
sub
fnstsw
mov
sbb
testl
jbe
sahf
or
and
mov
sarb
xchg
xor
xrelease
outsl
push
leave
xchg
outsl
lret
jle
mov
jb
sub
sub
loope
sbb
add
mov
mov
fcmovnbe
movsl
sbb
inc
jns
cmp
test
lahf
cmp
decl
data16
sahf
add
xchg
xchg
xchg
imull
xlat
jmp
test
cmpsb
xor
mov
adc
xor
mov
adc
sbb
into
fsts
mov
pop
mov
cmpsl
pop
shlb
mov
and
mov
adc
insb
cmpsb
call
cld
jns
inc
cltd
movsl
inc
cltd
pop
pop
shlb
mov
das
test
lock
pop
push
in
push
cmp
jb
cmp
icebp
sub
xchg
insb
xor
xchg
neg
pop
cld
js
sbb
and
mov
inc
jae
mov
xchg
in
adc
sbb
jle
and
fistps
cmp
lahf
fmull
mov
nop
test
filds
icebp
xchg
in
ja
sbb
in
std
mov
lods
jne
adc
bound
xchg
mov
ret
std
mov
call
jno
xor
lods
jecxz
sti
mov
out
dec
dec
push
push
inc
pop
mov
in
stos
xchg
mov
stc
in
mov
lahf
mov
in
cmpb
out
jno
xor
mov
xor
or
mov
out
rolb
cs
jae
scas
je
ss
jbe,pt
insl
dec
call
iret
mov
fdivs
stos
add
adc
sbb
adc
scas
dec
pcmpgtw
and
pop
sub
lods
sbb
shll
pushf
out
cmpsl
or
jb
cmp
pop
insb
dec
int3
mov
jge
dec
adc
inc
fwait
jns
rolb
mov
lds
jo
push
sbb
cmp
sbb
xchg
inc
add
in
cmp
or
ret
jns
shl
testb
sub
cmpsl
pushf
in
pop
xorl
xchg
shrb
out
push
addb
jb
push
mov
repnz
das
cld
icebp
pop
inc
sahf
pop
sbb
ret
fstpt
push
lahf
push
call
inc
in
mov
push
mov
cli
push
and
clc
and
lods
fsubl
mov
push
mov
cltd
push
pop
jge
jp
ja
insb
inc
repz
xlat
dec
mov
pop
inc
test
iret
jle
lds
xor
gs
add
dec
sub
pop
mov
sbb
lock
scas
cmp
mov
iret
jecxz
aam
std
jae
xor
add
cmpsl
push
mov
and
fstps
je
out
mov
sub
out
xor
bound
ficompl
jp
mov
add
test
std
mov
add
aaa
lahf
xchg
lahf
roll
lahf
jae
pop
aas
xchg
daa
mov
ljmp
add
xchg
cwtl
mov
adc
jl
fucomip
jae
aaa
pop
shr
mov
cs
xchg
cli
jmp
dec
outsb
and
in
push
sbb
js
dec
rcrl
mov
sar
mov
jmp
pop
jp
adc
jmp
push
jns
jno
push
fsubrl
pusha
pusha
push
lahf
loope
add
inc
xchg
mov
test
fsubrs
jbe
shrb
cmp
ljmp
data16
pop
xlat
add
dec
gs
fucomi
xor
jns
fldt
inc
jp
lds
fistl
cli
push
stos
movsl
lret
add
int
jo
pop
lock
lods
push
lcall
out
aaa
data16
ds
and
sub
inc
movsl
add
int3
add
cmp
js
and
movsb
xchg
add
adc
fiaddl
movsl
sahf
pop
mov
nop
out
nop
push
sbb
std
in
mov
jecxz
mov
adc
out
out
jecxz
jp
repnz
cld
push
jecxz
cwtl
pop
jecxz
pusha
ljmp
adc
shl
push
sub
enter
dec
jbe
inc
leave
js
inc
mov
sbb
aas
xchg
call
xor
imul
cs
loope
jge
shlb
gs
mov
xchg
jbe
add
sub
and
jnp
rcl
xchg
mov
iret
in
pop
cmp
clc
out
sbb
in
and
inc
inc
mov
pop
push
dec
cld
push
cmp
jae
mov
fcom
dec
inc
das
pop
jmp
not
lcall
sahf
negb
jl
enter
call
add
repnz
ret
sbb
cmp
rcll
adc
ds
testb
or
add
jae
add
lret
fildl
mov
jmp
sub
adc
pop
scas
movsb
push
int
pop
cltd
aad
lahf
push
xchg
pop
jl
xchg
pushf
stos
inc
divb
push
cmpsb
stc
lret
mov
cmp
xchg
add
outsl
push
jae
fidivrl
mov
icebp
inc
sub
call
cmpsw
cmp
adc
sbb
aas
adc
lret
loope
jae
or
fsubs
notl
iret
pusha
mov
mov
inc
mov
pop
inc
ss
jecxz
mov
and
push
and
adc
or
cmpsl
dec
push
inc
add
add
loop
mov
clc
or
or
jle
sub
ja
hlt
aas
test
xchg
dec
jne
incb
into
pop
add
scas
dec
jbe
shrb
insb
in
aas
fsubp
jmp
ret
iret
push
out
ss
shll
and
inc
or
sbbb
into
pusha
iret
loope
add
jnp
cwtl
daa
sahf
adc
mov
test
xor
mov
andl
jno
lods
mov
push
lods
mov
outsl
hlt
pop
outsl
outsb
push
pop
sbb
in
add
inc
mov
rorl
pop
push
hlt
add
test
mov
mov
inc
dec
lret
pop
nop
jl
ret
in
pushf
jl
jo
sbb
cmp
sbb
jl
enter
inc
das
rcr
pop
stos
dec
mov
mov
scas
mov
jp
dec
cmp
push
jle
inc
lea
shrb
je
bound
lock
mov
out
movsl
dec
lea
into
hlt
dec
mov
mov
jp
movsb
mov
fists
sub
push
xchg
rclb
pop
mov
or
xor
lods
sbb
sub
push
leave
out
pop
sbb
push
push
aas
popa
push
les
xor
in
sbb
mov
add
sahf
jl
outsb
adcb
dec
adc
xor
les
adc
mov
mov
pop
xchg
push
fistl
push
aam
add
cmpsl
jo
movsb
mov
xor
dec
shll
or
adc
jge
out
rol
movsb
hlt
dec
rcr
negb
lea
scas
das
push
ret
nop
jge
ds
ja
cwtl
popf
std
add
pop
mov
stc
dec
scas
push
cmpsl
jae
jno
xchg
aas
jg
jge
dec
insl
mov
add
fnstcw
sub
outsb
call
xchg
rorb
lock
imul
push
pop
mov
and
pop
jg
imul
push
mov
test
jg
push
dec
data16
add
repnz
pop
fs
push
stos
fcomps
mov
mov
int3
add
inc
inc
ds
fs
lock
xchg
ljmp
cld
popa
lods
lret
aas
xchg
fstpt
pushf
into
aad
dec
popf
cmc
and
nop
mov
movsb
mov
xchg
mov
in
or
jnp
lods
sbb
andl
mov
daa
mov
dec
mov
mov
sub
cmp
lock
gs
in
mov
cli
and
sbb
fisubrs
mov
mul
sub
mov
mov
jg
rorb
idivb
jp
insl
pop
rcrb
imul
mov
mov
cmp
pop
rcrl
enter
ret
mov
loopne
xchg
sbb
jecxz
xchg
pop
sti
data16
sbb
outsb
pusha
mov
inc
and
mov
into
rcrl
xor
pop
xchg
xor
lea
xor
in
ret
rcr
int
dec
shl
mov
push
add
fbstp
and
or
jge
or
lret
rcr
pop
push
out
add
lret
test
mov
mov
out
mov
cmpsb
sub
fstp
mov
ret
iret
out
enter
ja
push
add
inc
leave
test
lods
xor
xchg
jnp
shll
mov
fistps
jle
cld
aad
sub
push
arpl
push
ljmp
bound
xor
test
xor
lcall
aam
test
fwait
adc
int
xchg
xor
ja
and
mov
ds
ljmp
push
add
scas
ret
fldl
dec
cmpsl
aad
jnp
sub
dec
xchg
or
cmpsl
mov
mov
ret
mov
sbb
mov
les
xchg
add
push
xchg
cmpsl
inc
mov
sbb
mov
dec
cmpsl
fnstsw
fsubrs
jl
clc
mov
push
or
and
xchg
push
insb
das
jne
mov
jmp
xchg
test
push
push
add
cmp
add
loop
push
sub
push
and
dec
mov
mov
push
in
imul
xchg
and
xchg
adc
fldenv
addr16
rorb
arpl
pop
ret
add
pop
rcr
mov
fidivs
fadds
and
cmp
fstpt
adc
xor
scas
add
cmp
imul
jnp
push
adc
and
sbb
fwait
inc
cwtl
cmp
jge
test
inc
decl
stos
jle
push
mov
sub
adc
pop
movsb
cld
dec
jmp
test
mov
mov
and
sahf
in
mov
xchg
xchg
daa
les
inc
jl
and
jge
lret
sti
dec
jmp
cmp
xchg
jecxz
inc
rcrb
mov
xchg
enter
int3
fwait
sahf
adc
lds
loop
jo
dec
in
inc
dec
fs
scas
jge
inc
xchg
and
ret
adc
dec
fmuls
adc
test
loop
xchg
out
adc
lds
cs
inc
das
loope
cmp
mul
hlt
jge
ja
dec
push
jno
dec
pop
dec
sub
add
jo
test
lea
cmp
mov
dec
mov
rolb
ror
ret
sbbl
adc
push
outsb
or
dec
rol
in
dec
xchg
or
scas
jne
jg
mov
lret
cmpsl
addr16
scas
call
add
and
inc
popa
repnz
stc
push
das
pop
jecxz
pop
jns
enter
lods
fisubrs
cs
stos
negb
mov
cmpsl
lcall
or
push
mov
and
fwait
orl
cmp
cmpb
jno
sub
scas
mull
popf
mov
sbb
test
jbe
arpl
clc
ret
test
pop
fisttpll
fwait
mov
mov
jnp
dec
pop
mov
and
movsl
mov
inc
xchg
xchg
push
pusha
or
jle
push
cld
pop
jae
dec
inc
add
cmp
jb
std
movsl
sub
fnstcw
pop
pop
jb
cmp
pop
out
adc
mov
fbstp
cmp
cmp
or
xor
mov
test
cld
dec
mov
out
inc
daa
dec
in
lock
aad
add
iret
scas
dec
sarb
push
pop
pop
ljmp
inc
in
push
inc
fcmovnb
inc
push
and
outsb
mov
cmp
push
popa
jmp
add
mov
add
xor
lds
aaa
cld
int
jl
mov
decb
lret
les
pop
insb
stos
leave
loop
fnsave
mov
dec
dec
inc
test
cli
sbb
lods
pusha
xchg
push
es
cmp
insb
jo
jl
loop
adc
in
or
ja
or
xchg
mov
push
inc
rcrb
fnstcw
test
scas
mov
mov
dec
adcb
sarb
addr16
cmp
push
sbb
jmp
adc
and
lods
pop
aad
or
sbb
jne
pop
iret
nopl
adc
in
lret
iret
adc
cld
sub
hlt
mov
xchg
in
test
sub
jmp
mov
adc
jmp
fistl
cltd
dec
adc
push
push
xor
sbb
sarb
xor
in
scas
cmpsb
sbb
fwait
push
add
stos
ss
jl
push
fwait
mov
lret
dec
and
pop
stos
hlt
pop
and
xor
add
sub
lret
pop
test
lods
testb
inc
fstpl
loop
repnz
or
int
pop
xchg
stos
int3
sub
out
nop
sbb
jge
add
adc
pop
in
mov
push
stos
cmp
rol
push
or
scas
fwait
in
add
popa
xor
dec
dec
in
gs
xchg
or
push
cltd
jae
or
mov
mov
and
dec
mov
addr16
pusha
ret
filds
loope
mov
insb
cmpsl
dec
xlat
std
hlt
pop
addr16
jne
mov
int3
mov
ret
sub
dec
and
jne
mov
or
pop
arpl
pushf
jo
loop
cmc
sub
rcr
pop
or
lds
pop
fnstcw
or
ret
xor
test
or
fistl
mov
scas
mov
out
stos
inc
mov
hlt
ds
out
and
stc
and
xor
xchg
xor
mov
popf
cld
xor
pop
pusha
pop
adc
dec
loop
sub
je
or
sar
pcmpeqb
arpl
push
cmp
lea
mov
mov
sub
and
jae
hlt
fadds
push
inc
push
push
cmp
movsb
ja
in
stos
push
andl
adc
lret
fdivr
push
daa
cmp
neg
add
fsubl
sarl
jnp
cmp
test
or
sbb
xor
mov
cmc
pusha
jg
jbe
or
clc
and
js
mov
int
xor
adc
jns
addb
jl
adc
aad
inc
push
sub
inc
add
pop
fs
xor
cpuid
lods
mov
dec
out
push
push
mov
test
or
xor
dec
insl
pusha
adc
lds
ss
sub
mov
add
push
loope
or
icebp
pushf
mov
mov
fildll
nop
idiv
push
aad
dec
mov
ja
jecxz
or
in
pop
inc
jns
repz
jbe
outsb
addl
fistpll
sbb
imul
push
xchg
mov
add
jno
jmp
push
les
push
sub
stc
xchg
fcoms
and
arpl
cli
xchg
js
jmp
jno
fwait
xchg
lods
sbb
xor
sub
aas
xchg
mov
js
sub
xlat
pop
les
adc
std
adc
pusha
in
and
mov
popf
xchg
add
jg
movsb
push
pop
xchg
or
movsb
icebp
adc
adc
aas
cli
call
lea
mov
sbb
int3
cmp
mov
testl
add
aas
lods
aam
jns
cmp
lds
aaa
mov
pushf
adc
loop
mov
outsb
pop
cmp
lock
jecxz
cli
and
lods
in
push
add
fldt
ja
movsl
jne
mov
sbb
jl
aaa
xor
rorl
pushl
add
push
or
in
push
push
xor
push
xor
in
loop
push
adc
cmp
imul
cmpsb
jns
mov
push
or
leave
cmp
or
arpl
pop
sbb
cmpb
js
mov
bound
adc
dec
mov
cli
adc
into
adc
push
add
mov
arpl
or
sub
pop
cmp
ret
sbb
roll
cmp
js
fwait
add
cmp
bound
adc
movsl
ljmp
test
push
pop
mov
and
outsl
jg
and
sahf
mov
in
jg
mov
jb
jg
mov
xchg
jp
jmp
cmpsb
hlt
les
cmpsb
inc
inc
in
sub
fldl
data16
outsb
mov
mov
test
add
sbb
loope
pop
gs
jne
inc
enter
mov
punpcklwd
jp
stos
and
jnp
mov
add
gs
test
ficoms
out
mov
mov
pop
cwtl
adc
jge
mov
std
sbb
cmpl
xorb
pop
mov
inc
or
sub
mov
mov
jo
mov
jne
sbb
mov
rcll
es
sbb
mov
and
sub
inc
mov
add
sbb
cli
cmp
enter
mov
cmpsb
mov
lahf
jge
inc
pop
outsb
insb
subl
xchg
mov
dec
or
popf
int3
xor
sbb
dec
mov
rcr
sarb
lods
jmp
xlat
pop
std
iret
xor
daa
lods
jae
arpl
movsb
cmp
ret
push
push
rorl
fldcw
mov
cmp
cmp
xchg
push
in
inc
cwtl
sbb
lods
xor
jno
or
push
or
lret
xor
pop
enter
sbb
dec
push
adc
loopne
popf
shrb
push
cmpsb
dec
xor
inc
outsl
pop
mov
fimull
sub
adc
pop
stos
xchg
adc
push
cld
jb
xchg
jmp
xchg
fcmovu
in
and
rclb
cltd
push
dec
dec
outsl
xchg
in
and
mov
dec
push
shl
mov
mov
xchg
inc
fldl
dec
xchg
mov
dec
lahf
out
ljmp
sbb
and
pop
xchg
roll
subb
movsl
fisubl
inc
xchg
push
popa
adc
ficoms
loopne
push
adc
cltd
mov
mov
jno
loop
and
pop
shld
pop
mov
xor
fimull
xor
and
and
mov
dec
or
dec
push
cmpsb
iret
mov
test
xchg
push
arpl
dec
int3
xchg
into
je
sbb
mov
or
xchg
aam
clc
pop
ss
ds
lea
ss
mov
pop
sbb
loope
mov
lcall
sbb
add
insb
push
pop
sub
jle
push
mov
ss
jp
loope
out
fstpl
add
pop
outsl
test
jno
rcrl
shll
je
pop
cmpsb
cltd
repz
or
popa
fsubr
mov
mov
xchg
inc
fstp
mov
dec
leave
adc
cmc
push
ds
into
iret
xor
and
cmp
inc
aaa
out
mov
sti
ss
fdivl
in
stos
cmp
push
mov
dec
sti
or
dec
pop
xchg
adcb
sub
jb
testb
sub
lock
mov
stc
or
loope
mov
fwait
push
jo
jecxz
and
fdivrs
mov
out
dec
jge
mov
jge
in
fcomps
into
mov
mov
xchg
enter
loopne
cmc
pusha
mov
jl
in
push
adc
xor
adc
je
test
aaa
push
mov
pop
popf
out
mov
dec
and
inc
popf
mov
outsb
repnz
icebp
sbb
or
push
push
and
push
add
lods
sbb
push
stc
sbb
dec
sahf
cmp
imul
scas
mov
adc
mov
popf
mov
push
or
aad
push
aam
imulb
sbb
into
imul
stos
scas
jl
pop
push
fbstp
push
aad
mov
pop
mov
sbb
cmp
arpl
push
inc
lea
jne
or
adc
popf
ja
add
lock
les
cmp
icebp
or
push
jecxz
fwait
mov
add
jns
or
js
xchg
fcmovnu
push
jo
dec
lods
clc
gs
cmp
test
push
in
pop
inc
enter
das
imul
fs
push
arpl
dec
lret
test
popa
add
xchg
sbb
pushf
or
sahf
pop
pop
fwait
hlt
dec
insl
lock
fsts
mov
cwtl
cmc
cmp
les
hlt
in
dec
sbb
sarl
inc
lods
xchg
xchg
sbb
aaa
int
mov
lds
cmc
pop
orl
push
jne
mov
jp
jge
mov
sub
jge
or
out
inc
enter
cs
adc
hlt
mov
xchg
lods
pusha
iret
xlat
jmp
lret
std
push
repnz
ds
insb
push
fwait
mov
push
sarb
scas
sub
mov
xchg
into
int3
inc
sbb
and
xchg
test
mov
mov
adc
push
outsl
fsubrs
dec
lret
mov
pop
mov
std
and
data16
xor
xchg
push
jg
or
cwtl
cmp
cmp
setne
mov
cmp
mov
push
and
nop
sar
pop
hlt
stc
repz
repz
cltd
fwait
shlb
aam
cs
lret
test
mov
mov
adc
lea
int3
adc
fstpt
xchg
mov
sbb
add
insb
dec
xchg
movsb
lcall
ret
push
not
xor
xor
xorb
cmc
sbb
jbe
push
mov
iret
xor
out
fists
dec
jg
jge
or
dec
push
fnstcw
or
pop
mov
cld
stos
or
daa
adc
add
dec
sub
inc
popa
adc
dec
aaa
dec
mov
test
pop
icebp
in
outsl
or
mov
dec
fcompl
xor
stos
ljmp
andb
enter
pop
out
mov
jg
test
mov
popf
push
ret
movsb
das
les
cmp
dec
mov
jb
dec
pop
and
leave
fildl
add
xchg
xor
mov
insl
sbb
jae
mov
sbb
fdivr
jp
es
dec
inc
les
push
add
mov
mov
movsb
clc
in
ds
ds
xchg
xor
vshufps
ljmp
nop
out
mov
mov
sbb
xchg
dec
lret
ss
lea
ret
aad
dec
cmp
fcoml
adc
popa
pop
jo
pusha
mov
test
mov
push
add
pop
mov
xchg
ja
jle
adc
cmp
aam
jmp
dec
test
xchg
loopne
hlt
xor
jge
or
arpl
add
outsl
dec
stos
fcmovbe
xlat
rclb
testb
mov
push
icebp
aas
enter
in
lret
ret
jge
and
adc
adc
sbb
fnsave
popf
sbb
sbb
mov
insl
jnp
mov
dec
adc
ja
stos
mov
scas
push
jo
fists
setle
and
push
mov
arpl
pop
repz
lods
push
mov
fs
pop
iret
mov
rcr
scas
xor
push
rclb
mov
fwait
leave
aam
dec
dec
push
pop
imul
daa
nop
test
pop
and
cli
cmp
jmp
fstpl
fnsave
aas
mov
lcall
adc
scas
cmpl
push
inc
rcl
and
adc
sti
pushf
cs
cltd
mov
test
movq
mov
fiadds
push
add
xor
adc
add
pop
adc
or
lcall
adc
sbb
int
mov
rcl
sbb
into
sub
sbb
dec
dec
add
add
nop
movsb
cmp
popf
in
mov
inc
scas
push
push
push
cli
mov
mov
push
cmp
cmpsl
je
or
shrb
jecxz
repnz
lret
test
ret
test
jbe
sub
jmp
mov
jae
jl
push
adc
sbb
ret
mov
in
inc
cltd
sbb
mov
sbb
xor
jb
and
icebp
fimuls
test
data16
lret
ficoms
sub
fstpl
gs
movsb
adc
jge
adcl
cmp
popa
push
adc
mov
mov
add
pop
int
push
andb
aaa
ja
sbb
rcll
xor
aaa
xchg
sub
int3
fdivs
outsb
jnp
sbb
arpl
sbb
stc
sbb
cli
push
xchg
sub
out
lock
sbb
add
sbb
or
sub
aas
addb
cld
clc
repnz
sub
adc
arpl
fs
push
lock
stc
enter
hlt
xchg
mov
cmp
add
inc
fadd
jno
outsl
mov
push
push
jmp
jl
lcall
sbb
xorl
clc
dec
das
notl
inc
or
sahf
dec
push
sub
cmp
roll
pop
int
lods
push
xchg
test
fs
or
xor
decl
cli
ljmp
cld
push
outsw
cli
jp
ljmp
cli
xchg
jns
les
sbb
lret
loopne
das
aam
bound
cmp
pusha
and
jo
sbb
mov
dec
cmp
mov
push
outsb
sbb
mov
inc
cmp
call
sbb
lahf
dec
pop
pushf
loope
inc
outsl
mov
or
rorl
stos
mov
imul
mov
jg
push
sarb
shrb
daa
cmp
stc
and
jmp
mov
add
pop
into
out
cli
jbe
cmp
out
gs
cmp
cli
faddl
jp
popa
leave
xchg
ficompl
fbld
out
xchg
cmp
enter
push
xor
test
pop
imul
adc
mov
int3
push
mov
mov
notl
movups
sub
inc
jb
and
jae
sbb
push
mov
ljmp
and
cmp
fdivs
pop
pop
and
xor
push
incl
out
jmp
push
stos
xor
mov
cmp
sti
xor
jle,pn
mov
fs
icebp
push
adc
jbe
inc
cmp
sti
fcomps
jp
lock
rcr
xor
enter
pop
cmp
mov
mov
inc
mov
movsl
add
xor
sub
cs
jecxz
ret
repz
inc
mov
adc
and
xchg
jne
xor
sbb
repnz
repnz
xchg
inc
cld
add
xor
fsubs
outsl
jnp
cmp
xchg
or
in
cmpl
cmp
adc
jae
pop
repz
rolb
cld
pop
sub
mov
push
xor
ror
sub
jne
in
jns
js
push
pop
mov
pop
sub
mov
js
dec
push
ret
lds
mov
out
hlt
fs
popa
pusha
mov
insl
or
sbb
mov
push
daa
lds
ljmp
add
fstp
mov
and
add
jbe
push
test
out
dec
adc
sbb
jmp
inc
push
sti
movsb
rorl
das
cmp
or
daa
mov
jecxz
cmpsb
mov
push
repnz
out
dec
push
in
and
fstl
add
sbb
neg
cmp
test
sbb
adc
add
mov
adc
rolb
sub
xchg
push
dec
inc
or
jle
push
dec
fwait
inc
pop
dec
and
ljmp
xchg
faddl
aam
in
iret
push
pop
out
mov
daa
mov
jns
lret
rorl
mov
cmc
xchg
inc
icebp
xchg
dec
int3
pop
cmp
jge
sbb
in
mov
cmp
dec
lods
lock
inc
aaa
pop
loop
xchg
out
cmp
into
adc
inc
das
sub
sbb
sarb
loopne
mov
inc
jl
xchg
mov
ja
lock
add
fnstenv
mov
xor
jmp
and
sub
enter
jl
cld
xchg
xchg
or
aam
sbb
test
gs
lcall
call
sbbl
or
shrb
enter
lock
xor
mov
clc
pop
push
push
pop
inc
add
xor
cmp
cmp
xchg
mov
push
jne
jmp
addl
rcll
hlt
mov
mov
xchg
mov
jns
pop
dec
pop
mov
jns
ret
scas
mov
pushaw
adc
outsl
push
icebp
test
dec
insl
push
adc
jge
test
dec
les
int
xor
sbb
inc
lret
insb
lcall
mov
cmp
cmp
xor
mov
jg
stc
add
pushf
inc
fdiv
pop
cli
push
pop
mov
enter
cltd
xchg
daa
negb
or
in
fcoms
jle
fnstenv
dec
mov
push
lds
xor
rcrl
push
fimull
push
pusha
arpl
outsb
xlat
pop
fsubrs
jns
loop
push
sti
xchg
push
les
arpl
cmp
rcrl
insl
sub
cs
incl
pusha
jns
mov
dec
inc
or
je
cmp
mov
xchg
xor
pop
je
shr
cmp
sub
imull
mov
addr16
inc
pop
repz
loop
xchg
xorl
xchg
mov
mov
push
dec
pushl
add
iret
pop
cmp
or
popf
ljmp
jmp
sub
and
inc
mov
xchg
cmp
cmp
xchg
pop
add
in
mov
movsb
adc
xlat
push
mov
pop
and
pop
add
sub
mov
or
jmp
fdivrs
mov
jle
mov
stos
loop
adc
repnz
or
imull
clc
loop
and
lcall
jge
add
dec
push
es
cld
or
mov
push
adc
psubusw
rol
sub
in
ror
in
enter
pop
pusha
adc
in
lret
pop
test
cld
xchg
rorl
mov
mul
xchg
mov
int3
cltd
pop
cltd
popf
fnstsw
test
mov
adc
jne,pt
or
icebp
inc
xchg
inc
aaa
fildl
fldl
ret
pop
aas
xor
scas
jns
mov
inc
mov
xchg
sbb
mov
jbe
lods
ret
repz
cmc
ss
fdivrs
sub
out
ja
out
sahf
adc
mov
inc
push
mov
xchg
adc
adc
loop
outsl
mov
cmpsl
xor
stos
clc
insb
ljmp
jecxz
mov
out
rorl
shrl
pusha
lcall
mov
out
cmc
test
lcall
loopne
cmp
repnz
in
dec
mov
mov
sbb
into
mov
ret
jmp
mov
pop
neg
sub
lret
adc
mov
cld
xlat
pop
fs
stos
loop
dec
scas
imul
add
and
jae
cmp
mov
adc
push
mov
mov
push
aam
inc
mov
int3
pop
mov
xchg
cld
leave
dec
push
cld
les
add
jnp
in
inc
jno
loopne
mov
stos
push
adc
imul
inc
inc
adc
cmc
bound
sub
repz
es
fs
in
jle
ret
jnp
gs
adc
xchg
pop
pop
mov
pop
or
push
pop
cmp
inc
scas
pop
fcomip
jle
rcrb
rol
sub
pop
cmp
or
jne
idiv
ret
sub
or
std
mov
push
stc
xchg
fistps
cltd
push
push
jl,pt
fstp
in
sbb
cmpsb
test
cmp
bound
sahf
dec
cld
jecxz
in
adc
lds
xchg
dec
lods
xchg
call
mov
jno
pop
rolb
dec
adc
xor
jb
mov
int3
and
add
fnstsw
xor
les
adcb
push
orl
cmp
int3
xor
pusha
sub
test
insl
imul
pop
mov
push
sub
popa
push
sub
hlt
pusha
inc
dec
test
out
adc
mov
push
push
push
cs
jo
pusha
mov
stos
in
mov
in
dec
sbb
pop
xor
popa
sub
in
jb
push
pop
mov
mov
fnstenv
adc
out
lods
decl
xor
ds
jge
fsubrs
mov
dec
adc
pop
jbe
lret
xchg
es
xchg
inc
lds
mov
mov
mov
mov
jb
xor
push
inc
ss
mov
rol
dec
xor
rcrb
cmpsl
mov
fldenv
cmp
repnz
pop
push
or
mov
out
rcll
addr16
mov
les
std
or
adc
decb
lods
call
dec
repnz
sti
mov
mov
fistps
shll
ret
sarl
jmp
push
xlat
imul
bound
mov
shlb
mov
aad
imul
or
xchg
arpl
cmc
addr16
inc
jp
mov
aam
mov
mov
push
mov
iret
js
pxor
mov
je
outsb
fimuls
adc
jno
cmp
mov
push
cltd
idivl
out
fwait
cmpsb
rorb
icebp
jecxz
outsl
adc
mov
stos
enter
loop
adc
loopne
aas
push
and
mov
add
out
cwtl
pop
loope
add
hlt
pop
xchg
roll
movsl
mov
xor
jnp
test
pop
popw
xor
mov
rclb
inc
lret
dec
xchg
lcall
add
sub
rolb
adc
mov
mov
xor
jg
push
nop
sahf
sahf
fmuls
add
int
or
push
and
test
fcmovnb
inc
cmpsl
loopne
mov
cmp
inc
mov
mov
popl
in
mov
adc
in
popf
scas
shrb
sub
adc
aad
cs
sbb
push
add
xchg
shll
push
ja
xchg
mov
fcoms
lock
or
jg
jp
arpl
aaa
leave
arpl
adc
add
sub
jbe
test
mov
jns
bound
adcl
mov
enter
mov
dec
icebp
cmpsl
out
popf
pop
xchg
xlat
adc
bound
in
enter
ja
lret
cmc
out
jo
scas
outsb
push
mov
push
aaa
xchg
popa
popf
lods
mov
fiadds
out
or
popf
popf
jmp
sbb
push
or
mov
push
ljmp
in
popf
fbstp
pop
nop
subl
mov
xchg
adc
pop
mov
call
lcall
pop
fdivrs
rclb
subl
inc
pop
dec
cmp
jg
inc
daa
adc
push
das
inc
mov
xchg
pop
pop
fcmovnbe
mov
mov
nop
xor
addr16
push
dec
cmc
clc
fbstp
out
stos
and
sti
and
imul
out
call
push
sarl
cmp
and
xchg
or
pop
addl
dec
add
popf
imul
mov
outsb
pop
rorl
icebp
push
inc
push
add
pop
push
mov
cwtl
inc
xorl
xor
jbe
imul
sbb
inc
pop
mov
popa
inc
mov
add
xorl
movsb
mov
in
mov
sub
fdivrp
mov
pop
pop
jg
iret
movsb
outsb
jle
jo
xor
jl
mov
mov
and
jns
mov
enter
jg
out
leave
push
stos
pop
fs
outsb
mov
xchg
mov
sbb
dec
mov
push
ds
sub
cmpsl
popa
xor
data16
movsb
mov
xor
call
sub
mov
in
lods
pop
inc
nopl
cmp
or
out
lcall
xchg
xchg
in
inc
das
mov
pop
test
je
push
sbb
in
mov
or
sbb
xchg
idiv
mov
mov
es
dec
movsl
pushf
cwtl
js
xchg
mull
out
js
mov
daa
mov
cwtl
sbb
std
sbb
aas
roll
lock
cmpsl
sbb
sarl
or
fadd
lret
or
jns
and
ret
cmpsb
sub
xor
dec
ss
jnp
or
stos
lea
pop
add
adc
mov
test
inc
sub
loopne
pushf
xor
or
jb
les
pop
cmp
mov
leave
lahf
push
push
fldl
pop
subb
jo
mov
sarb
cmp
aad
rolb
pop
mov
sbb
test
ficoml
jge
enter
jg
push
adc
mov
cwtl
aam
js
jb
in
lods
jb
popa
xor
stos
mov
mov
sbb
pop
jns
fcomps
add
lret
push
pushf
jge
pop
dec
mov
push
lods
data16
mov
cmp
pop
repnz
enter
mov
idiv
iret
jo
pop
sarl
pop
mov
mov
fmull
jne
and
arpl
jg
into
sbb
add
pop
in
push
iret
push
jmp
insl
shlb
cmp
cltd
xchg
and
imul
test
iret
sahf
push
add
cmpsb
sub
jmp
or
xchg
iret
sbb
and
jg
mov
mov
in
ljmp
and
lret
pop
sbb
enter
pop
cmp
jne
int
or
mov
pop
andb
pop
mov
orl
das
pop
jbe
pop
mov
cmp
popa
pop
cmp
jp
hlt
fcomps
movsl
or
and
fidivs
jbe
pushf
lret
arpl
xchg
test
pop
xchg
pop
lock
leave
mov
mov
inc
xor
push
aad
test
pop
mov
iret
xor
cld
xchg
aaa
les
out
jb
push
insb
push
aam
stc
pop
dec
popa
push
push
lea
mov
mov
les
sub
out
sub
dec
orb
jmp
cs
xlat
ljmp
in
push
mov
dec
insb
psllq
shrb
scas
inc
in
sbb
xor
dec
ja
es
mov
mov
into
mov
and
add
shrl
mov
mov
jecxz
enter
jo
xchg
jb
lds
ficoml
push
movsb
je
dec
roll
ret
mov
xor
stc
mov
add
mov
inc
mov
jg
in
push
adc
in
cld
pop
pop
or
int
out
outsb
jle
sbb
mov
stos
and
fldcw
jl
xor
jge
subl
dec
mov
pushf
shll
or
mov
pop
lret
mov
out
push
repnz
inc
push
in
fisttps
mov
add
add
mov
bound
push
leave
jp
adc
jge
pop
xor
aam
xor
mov
leave
push
mov
ljmp
in
daa
push
mov
movsl
repz
cmpsb
inc
dec
sub
mov
ds
inc
ret
adc
hlt
lods
jg
cmp
jp
and
push
fidivrs
push
sub
adc
clc
adc
mov
mov
std
gs
or
push
xor
shll
cltd
mov
mov
insl
adcl
loop
in
sbb
and
cmpsb
shrl
xor
mov
test
and
stc
mov
sub
jb
xchg
mov
and
dec
sahf
ss
adc
lock
ret
add
sub
inc
fs
cmc
lret
adc
xor
es
daa
or
jnp
jle
mov
es
scas
loope
ds
lahf
mov
ret
test
push
hlt
or
mov
pop
push
cmpsb
push
mov
pop
xchg
and
fdivl
jmp
insl
mov
mov
lods
movsb
jge
je
and
rcrl
xchg
fisubs
push
stos
mov
and
sub
arpl
push
outsb
or
data16
cmpsl
mov
pop
push
cltd
mov
fcmovu
mov
mov
push
lock
cmp
cmpsb
gs
inc
sub
and
das
std
and
inc
outsl
loop
xchg
orl
cmpsl
mov
int
xor
lret
dec
rol
ret
push
ret
xchg
test
ljmp
jno
mov
cmp
mov
scas
inc
mov
mov
jo
or
in
ss
push
dec
mov
cmp
xor
cmp
cltd
stc
jle
loopne
pop
pop
inc
pop
lahf
lods
mov
pop
iret
and
xchg
jno
es
in
xchg
adc
pop
xor
popa
mov
inc
sub
and
push
push
jmp
lcall
test
mov
nop
jle
je
adc
jmp
test
jecxz
xchg
stc
and
dec
push
scas
insl
movsl
inc
mov
popf
mov
jge
add
lock
ss
cmp
xchg
mov
test
testl
ljmp
xor
or
test
cs
inc
ss
cmp
inc
xchg
mov
mov
inc
or
call
in
sub
push
or
dec
test
xchg
test
jp
in
add
rcr
dec
adc
and
les
and
mov
scas
mov
pop
stos
shr
ljmp
xor
mov
leave
inc
mov
sub
repz
test
ficomps
push
jae
out
mov
out
or
xchg
xchg
dec
sbb
shlb
test
repz
in
loopne
dec
out
shl
pop
mov
and
insl
in
mov
pop
sti
xlat
aas
das
cli
shl
mov
cmp
cmp
inc
pop
lods
cmpsl
jbe
hlt
ret
fs
xchg
jmp
mov
sarb
pop
pop
addr16
in
or
fwait
stc
jp
inc
adc
xor
mov
and
pop
jge
jo
dec
addr16
fwait
or
adc
imul
aad
int
andb
cmp
sti
inc
jmp
jae
clc
jl
jle
shl
push
mov
lret
js
sbb
sub
in
jbe
enter
jmp
pop
mov
cmpsb
mov
js
mov
test
je
jle
sub
sbb
jp
test
data16
jmp
jl
std
mov
mov
add
stos
cli
dec
adc
sbb
push
mov
pusha
ljmp
lea
xchg
jge
and
inc
gs
arpl
insb
inc
mov
jnp
mov
sub
cli
and
dec
sbb
testl
loop
pop
add
stc
stos
cli
clc
add
scas
sti
lret
pop
sub
test
fmuls
cmovno
into
jo
int3
dec
pop
xor
fldl
insb
xchg
pop
adc
inc
jbe
scas
rorl
add
or
aad
fwait
xchg
sbb
mov
ret
xor
pop
adc
test
repnz
xor
mov
lods
mov
dec
call
pop
push
sub
xor
loop
dec
loop
mov
or
fwait
mov
lds
mov
mov
or
mov
lret
popf
mov
push
mov
addb
dec
cmpb
dec
push
add
push
setl
sub
out
iret
mov
sub
incl
outsb
mov
cmp
pop
push
adc
scas
push
xor
in
in
andb
mov
xchg
pop
outsb
iret
lahf
sti
mov
fisttpl
inc
mov
nop
mov
test
aad
or
add
push
aam
sahf
jle
aas
jno
cmp
xchg
test
inc
pop
pop
pop
cltd
movsl
rcll
xchg
out
out
dec
mov
leave
jp
inc
in
neg
push
gs
out
lcall
ret
xchg
adc
ret
add
pop
in
adc
fisubl
adc
push
mov
ljmp
faddl
dec
loope
push
loopnew
mov
mov
pop
xchg
ficompl
insl
jb
shlb
stc
mov
pop
push
das
fimull
aam
xor
adcl
sbb
cmp
dec
xchg
rol
sbb
test
int
xor
cmp
push
iret
outsb
mov
outsl
dec
pusha
stc
cmp
nop
fimuls
mov
int3
mov
jnp
xchg
loopne
je
filds
ljmp
xchg
addr16
jae
cmp
lods
mov
sbb
cmp
sbb
cmp
fucomi
adc
or
insb
inc
rclb
jo
jmp
ficompl
in
ret
adc
xor
pusha
and
sbb
sub
jb
dec
xor
adc
int3
jmp
movsl
mov
js
lcall
out
loope
jge
imul
cmp
xchg
popf
cltd
mov
jge
add
xchg
mov
and
mov
mov
arpl
into
jne
scas
test
insl
stc
inc
sarb
scas
lods
mov
cmp
inc
jmp
test
andl
lahf
adc
mov
dec
push
mov
and
cmp
mov
fwait
or
scas
mov
icebp
lock
lock
scas
inc
fwait
jmp
or
shlb
bound
cmp
dec
pop
cmp
lea
adc
push
cs
xchg
adc
lret
mov
push
push
pop
push
inc
xor
into
jge
cmpsl
cmpsl
or
popf
lea
xchg
mov
jmp
adc
nop
imul
rorb
xor
hlt
outsl
and
inc
addr16
or
pop
inc
add
pmaddwd
cmp
repnz
jge
dec
xchg
lods
std
pop
cmp
jo
pop
push
inc
pop
inc
hlt
jp
in
add
int3
mov
int3
sbb
lahf
cmp
push
mov
loop
stc
mov
xchg
pop
sub
shll
sub
aas
loop
fwait
and
sbb
imul
adc
pop
jmp
adc
xchg
and
xchg
in
repnz
jo
mov
inc
loope
gs
and
aam
subl
test
in
popa
out
pop
cmp
cmp
cs
movsb
sbb
insb
out
adc
sbb
test
xchg
adc
divl
jns
xchg
jecxz
mov
jp
loop
arpl
movsl
fldt
rclb
cmp
pop
xor
adcl
jmp
popf
cmp
ds
iret
mov
into
pop
cli
movsb
xlat
xchg
hlt
mov
int3
test
stos
lods
xchg
inc
sbb
mov
sub
cwtl
xchg
mov
seto
or
jae
adc
repz
test
repnz
aad
push
cli
insb
daa
pusha
out
icebp
dec
leave
out
jns
or
pop
cmpsb
je
or
cmc
shr
dec
mov
daa
inc
mov
gs
das
cwtl
cmp
ret
mov
jl
mov
pop
or
or
inc
jno
cmp
add
dec
stos
and
jp
and
add
inc
xor
call
mov
int3
or
sbb
je
leave
js
cli
outsb
aad
movsb
cli
dec
mov
push
popa
lods
stc
fldt
jp
cmp
neg
das
inc
add
xor
bound
call
jge
adc
jl
ja
push
imul
test
in
dec
push
test
mov
sarb
adc
mov
mov
pop
dec
mov
mov
mov
cli
cmp
and
frstor
les
jne
shl
sbb
mov
sub
mov
push
fmuls
add
mov
popa
fmull
dec
loopne
in
lods
mov
mov
cli
insl
jae
pop
ljmp
movb
push
mov
or
mov
repz
repz
hlt
popa
mov
imul
sbb
dec
test
sti
jmp
sub
sbb
sbb
cwtl
dec
daa
cmp
fsubs
xlat
cmp
jae
mov
jno
adc
icebp
aaa
xlat
iret
mov
inc
xchg
in
fiaddl
in
dec
hlt
out
and
pop
loop
sub
cmc
scas
pop
push
ss
insb
sub
faddp
push
mov
addb
cmpsl
mov
sub
loopne
in
cld
ljmp
hlt
pushf
and
xchg
sub
mov
ficompl
das
shll
and
cmp
push
fbld
mov
jno
ljmp
inc
mov
ss
in
sub
mov
aas
cwtl
repz
mov
rclb
jns
scas
test
in
lea
cmp
sbb
mov
push
sub
mov
jns
or
dec
push
jle
dec
xor
cltd
add
jg
lret
cmp
add
cmc
andl
mov
popa
fwait
pop
loop
push
cmc
jb
jae
outsb
sub
nop
sahf
popa
in
or
shrb
push
cmp
rcrb
scas
test
cmp
out
arpl
dec
mov
fnsave
cltd
xchg
das
out
out
lods
ja
loopne
lods
cmpsb
out
xor
mov
jb
pop
pusha
imul
jnp
mov
lret
push
negb
std
mov
mov
inc
lret
xchg
pop
sbb
dec
aam
or
insl
inc
push
inc
out
xchg
add
xor
xchg
out
jns
fsts
dec
pop
ficompl
stos
ljmp
mov
scas
jns
shl
cwtl
mov
scas
movsl
mov
adc
jmp
mov
cltd
lock
pop
add
test
pop
add
es
icebp
sub
clc
jb
xchg
ret
arpl
push
jbe
xor
sbb
jg
adc
add
leave
and
hlt
call
xor
push
add
sub
jl
call
fisttpl
push
out
shll
fimull
pushf
stc
mov
fdiv
xchg
pop
push
pushf
xor
sti
or
es
and
sbb
cmpl
fyl2xp1
pop
jle
dec
adc
lret
cmp
iret
cmp
into
add
jns
adc
adc
pop
lcall
adc
jno
fwait
bound
sub
into
or
call
jne
xchg
mov
loop
xor
out
pop
in
stos
pop
dec
mov
pop
int
jp
add
jecxz
imul
rorb
pushf
and
xor
sahf
and
pop
inc
jmp
mov
xchg
mov
fcmovne
pop
xchg
adc
push
addr16
or
jae
in
jmp
fnstsw
xor
icebp
xchg
push
cld
idivb
inc
or
cmp
pop
inc
sbb
sbb
stos
in
clc
adc
pop
and
dec
ret
mov
in
cmp
and
cs
test
xor
imul
xlat
imul
sbb
cmp
bound
fwait
pop
mov
jae
or
cwtl
push
or
push
aaa
lock
leave
je
aaa
dec
jmp
xchg
ret
mov
sbb
popf
cld
scas
adc
push
mov
aam
xor
or
pop
decb
les
dec
cmp
test
imul
mov
and
mov
stc
fdivr
pop
clc
ficoms
xchg
scas
aas
xchg
imul
fistpll
lahf
arpl
sbb
jecxz
sub
popf
sbb
mov
testl
push
mov
lret
xor
je
mov
mov
inc
mov
ficoml
ret
jbe
mov
mov
jnp
xor
pop
aas
add
shrb
fistps
lcall
xorl
inc
xchg
push
mov
into
xchg
loopne
xchg
mov
out
decl
sub
sub
xchg
push
test
mov
mov
fmuls
into
in
mov
push
js
mov
fdivrs
jb
xorl
sub
jl
jle
fldcw
lahf
mov
cmp
pop
shl
pop
out
imul
cmpsb
scas
inc
sbb
dec
imul
push
enter
push
jbe
jae
in
aam
mov
jns
shlb
jno
lods
adc
mov
insb
jp
push
testb
pop
or
xor
add
sub
sbb
adc
outsl
das
cmp
in
push
stos
jae
leave
adc
adc
dec
or
jecxz
pop
outsb
call
fwait
mov
mov
call
adcl
mov
dec
lds
mov
flds
jb
inc
xor
xchg
lcall
push
cmp
mov
fiadds
or
fsubrs
xchg
jo
inc
inc
fstl
mov
jbe
mov
inc
inc
repnz
mov
or
repz
mov
jnp
and
lcall
push
or
sbb
jno
mov
pop
pop
lret
adc
outsl
or
push
daa
rcrl
cmp
mov
mov
loop
scas
out
test
and
aas
mov
cmpsb
in
mov
sub
or
jmp
sbb
icebp
mov
pop
jae
adc
cltd
into
pop
int
jae
xchg
jno
mov
jae
push
add
mov
add
fdivs
push
lock
inc
test
or
int
mov
popf
mov
or
and
stos
pop
sbb
int
push
cltd
rdmsr
mov
mov
xor
sbb
aad
popf
add
push
xchg
mov
lret
xchg
out
sbb
dec
adc
jmp
jl
mov
dec
adc
ret
adc
push
jbe
jb
loope
sub
add
cmpsl
addl
ds
push
inc
loope
jl
adc
xchg
test
mov
mov
xchg
sarl
and
outsb
dec
dec
sub
in
scas
xorb
dec
mov
or
cmp
fmuls
les
cld
call
and
push
cmp
mov
sub
jne
pop
aaa
cmc
xor
aas
jmp
mov
movsb
loopne
sub
jle
and
cmpsl
pusha
and
pop
add
inc
pop
sbb
dec
outsl
dec
ficoms
xor
pop
xorb
iret
adc
push
nop
andl
insl
imul
iret
fcoml
mov
call
shlb
out
loopne
idivb
adc
pop
push
cmp
jne
test
pop
mov
mov
push
cmpl
xchg
xor
lcall
push
cmpsl
mov
pop
adc
jge
or
pop
inc
mov
gs
jp
arpl
xchg
roll
scas
jnp
sbb
jo
js
jbe
and
inc
or
das
mov
xchg
push
test
pushf
shlb
mov
dec
outsl
call
rorb
mov
fcompl
xchg
lcall
mov
aad
adc
jns
movsl
lock
icebp
fstps
pop
pop
mov
ret
dec
jo
push
sub
fimuls
icebp
jge
outsb
add
sub
rcrl
push
stos
in
fsubrs
loopne
jbe
clc
gs
dec
add
dec
rcrl
xor
lods
push
js
hlt
mull
iret
test
add
pop
dec
add
inc
jmp
cmp
std
mov
sbb
cmp
lock
mov
pop
iret
mov
adc
daa
ds
inc
sub
addr16
fwait
lret
cwtl
imulb
outsb
or
mov
jno
xchg
cmpsl
sti
mov
mov
mov
mov
mov
and
push
pop
lods
pop
out
cli
cmp
test
mov
pop
or
jb
or
push
push
sar
xchg
xor
push
daa
push
mov
xchg
or
sbb
aam
mov
cmp
out
test
adc
mov
dec
subl
in
and
mov
sti
push
pushf
cmp
xchg
add
dec
mov
xchg
jge
cmpsb
cmp
sahf
fwait
scas
push
sbb
lods
or
les
inc
push
add
leave
jae
enter
aam
lock
cmp
mov
xchg
cmpsl
call
cmpsb
jl
adc
adc
das
mov
testl
jecxz
xor
xchg
sti
aaa
push
adc
movsb
mov
shlb
xlat
roll
out
jmp
shl
std
mov
or
mov
push
out
push
sub
jmp
stos
inc
cmp
mov
xlat
shll
mov
xchg
cmp
popa
ret
repz
subb
lret
loope
subb
aaa
dec
repnz
lods
jne
sub
fs
stos
loop
pop
insb
adc
mov
cmp
pusha
loop
mov
lods
add
es
call
or
arpl
dec
aam
mov
pop
paddb
xor
sahf
add
call
loopne
cmp
insb
pop
ds
lock
in
fs
pop
cmp
pop
xchg
insb
push
and
push
add
lret
das
lret
push
mov
add
jae
and
ljmp
int
fists
fstp
xor
lds
xchg
mov
xchg
mov
les
in
mov
ret
inc
push
aas
add
and
push
pop
jno
mov
add
stc
fisttpl
iret
xlat
pop
add
add
sbb
inc
aaa
nop
cmp
vmread
inc
dec
xchg
jno
inc
jbe
mov
push
xchg
jb
in
clc
mov
ljmp
cmp
stc
mov
call
jg
roll
inc
js
xchg
adc
sub
mov
cmp
pop
out
test
xor
xlat
cmc
cmp
das
sub
cmp
jg
jb
int3
inc
out
sar
mov
mov
xchg
ud2
cmp
jno
fisubl
mov
dec
aad
call
jp
cld
adc
xchg
js
inc
or
mov
fisubs
fldcw
dec
jp
dec
sub
sub
add
adc
sub
adcl
xor
stc
pop
inc
adc
or
fdivl
and
call
cli
mov
mov
std
sbb
push
loope
sar
inc
in
leave
sub
fstps
add
sarl
ds
std
lods
call
lcall
or
jnp
ret
and
sbb
adc
movsb
les
rorb
iret
cmp
addr16
movntps
sarl
ret
enter
mov
mov
or
out
mov
mov
xchg
mov
jb
xlat
stos
mov
inc
xlat
lret
sub
in
in
cmp
fstp
xchg
push
pop
mov
mov
test
sbb
or
jp
jl
rorb
pop
test
mov
div
aam
push
lds
or
xor
push
push
and
ret
dec
inc
cmp
cmp
mov
dec
rcl
lods
cli
in
mov
push
das
insb
dec
xlat
mov
jae
xor
shll
xor
sub
pop
mov
and
pop
test
cmp
cmp
ret
out
push
mov
xor
pop
lret
xchg
xor
cmpsb
loope
adc
pop
mov
cmp
cltd
cmp
sbb
jmp
rcr
and
mov
in
add
dec
dec
jb
call
pop
mov
js
movsb
js
imul
cmpsl
fmull
pop
fxch
jmp
cs
sub
int3
jl
pop
sub
aas
aas
loopne
jo
pop
xchg
inc
jae
jge
decl
ss
cmpsb
inc
sahf
xchg
xchg
or
jmp
inc
sbb
mov
push
hlt
clc
push
push
rorl
fs
mov
mov
sbb
aam
loope
xor
mov
divb
ds
mov
in
insb
hlt
adc
out
mov
test
xchg
jnp
pop
outsb
aam
lcall
pop
add
fmul
addr16
cmp
and
mov
jbe
adc
inc
pop
add
dec
xchg
dec
dec
xchg
cmp
roll
stos
divl
pushf
cmp
pop
andb
scas
mov
mov
xchg
sub
js
add
fs
ss
jmp
sbb
sar
add
sub
jp
dec
pop
push
mov
jmp
push
xchg
add
add
out
cld
je
mov
mov
test
push
xchg
incl
jbe
sbb
and
sbb
mov
xchg
dec
dec
mov
mov
and
inc
xor
leave
stos
adc
rcll
das
or
lds
cwtl
mov
subb
bound
arpl
mov
add
add
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
orl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
mov
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
nop
xor
inc
nop
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
nop
nop
nop
nop
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
