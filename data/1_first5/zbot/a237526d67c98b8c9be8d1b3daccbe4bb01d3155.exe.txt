add
add
push
inc
add
imul
arpl
xor
popa
fs
bound
jne
inc
dec
inc
add
xor
popa
fs
bound
jne
inc
sub
add
bound
arpl
or
imul
push
add
xor
popa
cld
popa
inc
imul
jae
jb
gs
lock
add
mov
je
add
fldcw
outsl
jae
imul
je
inc
lock
add
mov
je
xchg
insb
xchg
dec
popa
outsb
mov
push
lock
add
in
add
add
inc
add
inc
add
inc
add
add
je
and
inc
or
jb
and
and
popa
fs
bound
jne
inc
add
clc
inc
add
or
outsb
aad
xor
push
arpl
push
add
lds
arpl
jb
fs
add
int
insl
jae
jb
add
jb
mov
add
jge
add
gs
inc
test
arpl
push
add
ds
jb
gs
outsl
arpl
push
add
sbb
pop
imul
add
inc
inc
sbb
add
pusha
jb
and
data16
adc
add
insb
popa
jo
arpl
pop
add
fldt
outsb
int
xor
push
imul
add
mov
je
ret
gs
jns
shll
add
push
ds
stos
pop
nop
lock
add
jecxz
add
hlt
sti
add
aaa
add
lock
add
pop
add
add
lock
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
pop
add
lock
sbb
movsl
mov
and
and
repnz
add
imul
pushl
ljmp
lods
dec
push
adc
push
aad
or
lock
jmp
add
add
push
mov
add
push
orl
push
jmp
add
pop
repnz
cmp
std
lock
jmp
add
push
add
lock
jmp
adc
push
jmp
adc
push
jmp
add
push
jmp
add
push
jmp
jae
push
jmp
jmp
lock
jmp
pop
jmp
add
push
jmp
jmp
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
pop
pop
add
pop
pop
add
dec
pop
add
dec
pop
add
inc
arpl
jge
add
push
lock
or
add
sbb
add
sbb
add
or
add
or
add
flds
add
stc
or
pusha
idivl
popa
cmp
add
add
add
leave
or
add
cli
add
cltd
push
add
cltd
push
add
mov
add
leave
or
inc
cmpsl
push
popa
je
or
add
xor
add
inc
add
pop
lock
lock
add
filds
add
filds
add
lahf
add
xor
add
lock
add
filds
add
filds
add
mov
in
mov
adc
pop
jne
add
xor
divl
test
push
pop
mov
lock
ret
push
mov
inc
sub
xor
sti
jb
pushf
testl
imul
jne
test
or
gs
dec
loopne
add
add
ret
repnz
sub
push
jmp
push
call
icebp
aam
dec
jnp
idivl
add
icebp
fwait
movaps
fldl
lds
subl
jge
inc
jmp
divl
dec
add
push
jmp
add
push
bound
jnp
mov
out
pop
clc
xlat
jp
testb
push
fdivrl
cld
test
jl
xorb
sti
and
stos
imulb
push
jmp
add
push
add
add
decl
mov
addr16
pop
jp
dec
mov
fiadds
bound
push
push
push
jp
push
mov
out
push
cmc
stos
jnp
add
pop
or
and
ret
ret
scas
add
repz
leave
stos
in
push
push
enter
pop
and
sub
out
jb
mov
cmp
out
jne
add
fwait
outsb
jmp
lock
push
loope
adc
add
out
push
incl
jne
ficoms
sbb
mov
pop
mov
mov
add
rclb
or
test
adc
push
push
add
ret
incb
push
cmpl
push
push
rcrb
or
add
pop
jne
add
add
or
pop
nop
enter
pop
or
adc
add
leave
or
aam
push
incl
push
push
or
and
jle
or
sub
push
mov
or
pusha
jbe
lock
sub
lret
fisttps
sub
filds
add
lret
fisttps
sbb
mov
push
add
hlt
icebp
inc
add
xchg
add
jp
add
cltd
add
filds
sub
or
aaa
mov
add
lock
pop
fdivrl
jne
in
push
dec
loopne
add
bound
push
cmpsl
push
sbb
mov
mov
jns
in
adc
cwtl
and
mov
in
pop
mov
data16
incl
add
push
repz
mov
jmp
jae
repz
and
jmp
add
enter
orl
movb
jmp
lock
je
setp
repnz
mov
jb
dec
mov
pop
add
pop
pop
js
fisubrs
mov
add
daa
fildl
sti
xor
clc
sbb
add
decl
mov
inc
jge
push
add
int
push
addr16
jne
cmp
pop
bound
call
push
in
jne
inc
jb
ds
push
leave
sub
in
push
bound
add
mov
clc
fwait
in
incl
sub
ret
push
mov
adc
enter
jno
inc
sti
push
add
mov
decl
push
les
add
imul
jne
dec
add
fdiv
push
fsubr
out
jbe
decl
pop
jae
mov
bswap
ret
shlb
or
mov
orl
add
insb
out
out
cmc
decl
or
fxsave
xchg
leave
add
add
leave
scas
ret
push
mov
pop
mov
imul
mov
or
lock
icebp
inc
gs
or
or
out
fdivrs
sub
sub
imul
or
jbe
mov
jmp
std
neg
loopne
jno
or
repz
mov
out
enter
add
pop
jecxz
add
inc
neg
push
add
xor
lock
xor
add
sub
les
jl
in
add
jge
pop
incl
loopne
or
faddl
jne
push
adc
shrb
repz
loopne
lcall
shrb
jae
mov
cmp
cmpsb
dec
jl
jmp
incl
add
ja
addr16
add
roll
lret
jns
jmp
loope
push
aam
sub
das
push
loopne
ret
mov
jmp
dec
or
jmp
sti
push
je
clc
push
xchg
add
jb
cmc
jb
out
pop
cmp
jnp
loope
lds
sub
cmc
jns
cmc
and
jne
lret
add
xchg
mov
mov
lock
lcall
loopne
lea
call
jge
repz
push
push
add
push
jmp
or
enter
dec
call
call
add
jne
cmp
jge
repz
push
cli
call
fnstenv
out
outsl
or
es
incl
add
or
adc
in
subl
je
fidivl
mov
rolb
leave
into
add
pop
push
pushl
fidivl
mov
decl
ret
push
mov
sbb
jmp
out
jne
fidivl
add
push
jmp
jne
fidivl
mov
stos
ret
push
mov
scas
outsl
or
out
fdivr
decl
and
add
into
outsl
or
inc
push
addl
test
fldt
in
push
jb
or
fnsave
enter
xlat
cmp
lea
call
in
pop
test
pop
filds
call
lods
sbb
push
inc
cld
jae
add
or
in
jne
mov
pop
adc
jbe
pop
out
outsb
in
incl
add
sti
out
cmp
ljmp
out
leave
xor
add
push
add
xor
add
gs
lods
out
mov
lods
cmp
lock
imul
jl
xlat
insl
add
out
lods
jmp
pop
in
fiaddl
jmp
adc
pop
rcll
shll
jmp
jno
out
adc
call
in
inc
add
jl
mov
jno
out
adc
outsl
in
in
push
sbb
dec
mov
add
push
jmp
ljmp
jmp
ljmp
ljmp
xchg
dec
clc
push
fiadds
fisttps
jne
adc
into
jmp
sbb
jno
add
or
jmp
inc
dec
hlt
add
inc
jecxz
jns
add
add
jne
lret
iret
sti
mov
xor
mov
icebp
das
shlb
jo
mov
psubsb
pop
in
cmpsb
mov
add
repz
lea
aaa
fmull
push
pop
pop
in
aam
pop
je
cmp
cmp
pop
hlt
jne
jno
add
or
push
sub
les
sub
mov
mov
mov
dec
in
push
ljmp
cltd
push
or
test
jo
lcall
pop
shr
decl
movsl
ret
leave
pop
or
in
idiv
jne
out
jne
stc
ret
mov
pushl
ret
cltd
pop
pushl
mov
leave
ret
push
mov
call
or
push
ljmp
out
push
or
test
sub
add
add
das
mov
jmp
lcall
in
add
xor
jg
lock
add
in
in
out
test
hlt
repnz
inc
lock
call
jns
fdivr
inc
fcomi
int
add
cmpsl
rolb
mov
add
ds
call
hlt
jg
fdivr
std
jg
fcoml
add
add
sub
jp
pop
pop
outsb
cld
dec
sbb
outsb
clc
out
cli
in
aas
loop
sti
iret
roll
inc
lock
sti
movnti
call
clc
out
arpl
pop
loop
lret
lcall
call
clc
out
or
out
lret
pop
add
add
pop
rcr
testl
loope
sbb
into
out
lds
mov
add
imul
imul
pop
icebp
fistpl
aam
add
mov
jnp
lea
in
xchg
add
add
lods
out
inc
pushf
hlt
push
leave
sub
push
push
jb
cmp
leave
push
mov
out
add
xor
stos
nop
jb
add
push
leave
sub
push
jb
cmp
mov
cld
bound
mov
inc
pop
and
add
repz
ds
pop
or
cmp
add
repz
call
mov
add
repz
add
jne
dec
jbe
add
mov
and
jnp
add
pop
add
adc
jmp
jge
xchg
mov
mov
enter
add
xchg
inc
incl
add
push
ljmp
push
mov
xchg
fistpll
mov
sub
inc
out
pop
add
mov
leave
ffreep
jne
xor
leave
mov
call
add
xor
or
push
mov
pop
inc
add
and
mov
inc
mov
faddp
inc
lock
add
in
js
add
cmc
mov
pop
cmc
mov
xchg
jnp
add
inc
in
dec
cld
out
ja
cld
push
sub
lods
dec
jl
fdiv
lods
inc
adc
dec
js
sub
push
adc
imul
inc
call
fstpt
push
out
xor
inc
pop
sub
jns
jno
xlat
scas
int
sub
push
ds
inc
popf
outsb
or
jg
add
lock
sahf
outsb
call
fisubs
pop
fdivrp
out
mov
test
hlt
inc
push
pop
fcmovnbe
fcompl
imul
sub
mov
in
fidivrs
lock
lock
outsb
cld
mov
fldl
push
enter
xlat
fnstsw
push
icebp
jne
in
out
mov
add
xadd
test
outsb
call
pop
add
cmpsb
repnz
jne
xchg
push
clc
xchg
leave
push
call
lret
jne
inc
sar
push
fnsave
pop
es
push
xchg
ret
ret
or
call
rclb
test
add
jmp
fldl
out
push
add
add
repz
punpckhdq
add
add
repz
jmp
push
mov
add
pusha
inc
cld
cmp
jo
dec
or
push
hlt
out
and
or
or
outsl
fdivrl
inc
hlt
mov
sar
jne
lock
pop
or
rcrb
jno
je
fisubl
add
cmpl
je
ret
inc
imul
mov
mov
movsb
dec
clc
push
jle
add
jmp
cld
call
add
je
scas
out
daa
std
imul
sub
add
inc
mov
call
pushl
ljmp
lock
pop
sbb
and
mov
sbb
std
mov
push
or
adc
ret
mov
add
or
in
add
and
inc
add
or
cmp
adc
mov
loopne
call
sbb
ret
sub
jnp
mov
cmp
add
lock
out
jae
outsb
xor
mov
repnz
push
pop
xor
loope
inc
pop
ret
les
inc
loope
rorb
or
add
enter
add
lock
jmp
inc
mov
fcmovb
scas
in
fadds
mov
in
adc
pop
ss
clc
push
hlt
or
inc
icebp
push
or
test
shll
push
icebp
jmp
shr
add
cs
in
out
outsl
lret
ljmp
mov
out
pop
lret
lock
add
sbb
iret
add
push
pop
mov
push
add
ljmp
out
roll
das
inc
jmp
sbb
sub
dec
sub
hlt
fnstenv
pop
sbb
jmp
mov
push
add
mov
orl
call
sti
xor
add
or
cmc
iret
add
cs
or
add
cs
xor
push
add
xor
hlt
push
add
add
dec
mov
pop
es
sub
in
push
incl
add
add
jne
outsb
add
mov
sub
pop
jns
mov
cld
mov
sti
decl
inc
cld
pop
add
add
in
sub
or
jg
mov
add
add
sub
mov
jmp
les
dec
cld
jmp
test
add
clc
pushl
inc
cld
scas
lret
lock
cmp
call
insl
sbb
cmp
in
add
stos
or
sbb
imul
or
imul
jmp
mov
add
inc
add
cld
aam
call
test
add
lock
ret
mov
or
lods
pop
add
jmp
in
lret
in
fdivl
inc
inc
enter
clc
setno
test
out
xor
push
sub
cmc
mov
add
push
and
hlt
push
mov
les
xchg
add
pop
loope
fdivrl
pop
sub
add
shll
xor
pop
call
add
pop
fstp
std
rclb
sub
loop
mov
push
sbb
pop
cmp
hlt
pusha
fnstenv
dec
mov
aaa
popa
jmp
imul
push
jmp
jmp
int
add
add
ret
fidivrs
stos
add
mull
xor
add
loopne
scas
es
or
daa
mov
hlt
pusha
add
ss
pusha
das
decl
test
lock
hlt
push
cli
mov
jmp
dec
aad
sub
xor
xor
jle
aad
test
rol
xor
pushl
add
fsin
adcb
pop
pop
add
enter
cmp
add
push
cld
out
ud2
add
int
add
out
inc
push
push
addl
adc
fmuls
call
mov
add
cltd
lea
add
sub
subl
add
cs
add
pop
or
int3
mov
inc
pop
call
lea
call
jmp
xlat
push
cwtl
dec
and
mov
add
pop
jmp
das
fiadds
or
fldl
jne
jmp
add
and
clc
xlat
aam
out
fldl
push
xchg
push
aaa
add
insl
in
lcall
xchg
fcos
add
and
hlt
xchg
xchg
fcos
add
fldl
or
fdivrl
icebp
fldl
push
enter
lock
cld
inc
push
or
add
fisttpll
pop
rcrl
ret
fcoms
shl
ret
decl
jo
adc
fldenv
inc
jmp
and
test
fistps
add
add
jg
fsubr
out
lea
jmp
or
jmp
mov
sarb
sarb
fsubs
shr
sarb
insb
mov
sub
pushf
mov
push
rolb
push
lock
imul
jmp
add
testl
push
mov
cmp
push
inc
mov
add
ret
addl
add
or
lcall
enter
mov
inc
mov
rcll
jle
out
push
test
mov
rcrb
addl
mov
jmp
jno
out
lahf
pushl
pushl
inc
fdivp
sahf
aas
sar
push
push
loope
xchg
inc
jmp
test
jmp
incl
add
cmp
add
pop
add
test
push
hlt
mov
ja
out
mov
mov
out
decl
sbb
mov
out
push
and
add
xchg
js
mov
call
adc
pushl
mov
idiv
mov
or
mov
jmp
les
add
pop
std
mov
call
lock
mov
inc
inc
mov
adc
add
xor
push
pop
jnp
out
pop
cmp
ret
add
inc
inc
out
testl
test
clc
aad
fistpll
jmp
xlat
clc
ljmp
rolb
fucomip
mov
ljmp
add
mov
call
mov
inc
lock
pushl
cmp
lock
mov
push
xchg
aad
fidivrs
pop
fisttps
aad
das
pop
lret
xor
call
push
iret
mov
adc
enter
repnz
aam
ja
in
mov
xor
inc
lock
call
add
mov
and
push
jmp
dec
loop
jl
mov
fsubrp
fldcw
loop
mov
lock
bound
and
sub
cli
jno
jl
es
ljmp
repz
jmp
push
filds
loope
push
cld
xchg
jno
jle
inc
clc
push
cmp
or
aam
cmp
push
add
jmp
mov
sbb
testb
mov
lret
inc
add
repz
add
or
push
mov
iret
decl
js
jl
fidivs
repz
xor
push
setbe
and
lea
or
stos
in
add
fisubrs
or
sub
or
add
push
call
add
push
leave
je
popl
add
dec
mov
xor
sbb
cmp
xor
push
or
ret
push
mov
test
cld
cmpb
add
mov
mov
mov
cld
ljmp
hlt
fdivl
jne
mov
add
cld
rcrl
mov
ret
fnsave
push
add
addr16
inc
add
fadd
je
imul
ret
cmpsb
mov
xor
jg
cmpsb
lock
mov
fiadds
nop
sti
popf
pop
pop
mov
add
sub
jne
clc
ret
cld
cmp
aad
sbbb
fs
cmp
adc
add
call
cs
add
test
jecxz
hlt
or
add
pop
inc
xor
add
sub
add
lock
lock
push
jmp
add
mov
cmp
and
push
jmp
add
push
sub
enter
push
mov
sbb
mov
push
lock
add
add
out
fcmovnb
shll
sarl
bound
sti
adc
xchg
inc
loop
cmp
imul
test
jmp
cmp
add
xchg
inc
loop
leave
stos
mov
push
aas
jnp
add
repz
fwait
add
fistpl
ja
jg
ja
add
push
push
jns
lds
jns
or
jns
add
sub
push
nop
std
add
sub
add
mov
jl
ljmp
stc
sbb
hlt
mov
add
decl
out
sbb
mov
in
sub
mov
nop
add
nop
pop
push
ret
in
adc
lea
or
dec
jge
or
or
neg
jecxz
push
push
nop
mov
push
test
add
pop
lret
test
inc
imul
add
test
add
cmp
nop
ret
pop
push
push
leave
ret
push
mov
mov
lea
adc
icebp
inc
add
hlt
cwtl
sub
lods
js
flds
shlb
or
add
pop
or
sbb
add
sbb
pop
cld
add
mov
stos
pcmpeqw
mov
jle
into
push
or
add
lock
shl
cli
mov
lock
add
fldl
movq
add
lock
das
out
fistl
xor
add
pop
mov
inc
push
sub
or
stos
out
lods
add
sar
out
or
call
fists
enter
iret
adc
push
loope
jne
bswap
mov
adc
insl
int
pop
jmp
pop
lock
ljmp
xchg
mov
wrmsr
push
jmp
pop
clc
xor
push
push
cmc
int3
xchg
push
xchg
jns
adc
dec
sbb
push
sti
cmp
push
outsb
fsubl
jmp
add
add
xchg
dec
into
pop
movl
xor
xor
cld
push
xchg
js
mov
sub
and
jne
mov
out
inc
jmp
xor
call
repnz
test
hlt
push
add
dec
xchg
test
mov
or
jmp
repz
or
repz
cmp
fisubrs
jmp
add
add
lea
incl
xor
or
hlt
inc
add
pop
xor
call
dec
sahf
push
push
add
idiv
fisttps
lcall
decl
rclb
pop
aad
call
mov
pop
cld
call
adc
adcl
je
aas
inc
hlt
add
mov
push
rolb
xchg
js
shlb
xor
mov
je
stc
jne
loop
repnz
clc
or
out
stos
sar
lcall
add
xchg
inc
add
lock
push
push
push
cld
fdivrs
out
pop
test
sub
push
jnp
sti
ljmp
add
add
out
insb
cmpl
inc
rcrb
insl
cmpl
inc
fldl
jo
std
jae
or
add
jle
call
movsb
mov
lock
add
adc
jl
jne
je
sub
dec
push
jo
or
ljmp
or
cmp
jmp
mov
mov
imul
or
add
icebp
cmpsl
add
cmp
xchg
push
mov
jb
xor
xor
jmp
cs
fildll
inc
pushf
push
jmp
lret
inc
les
pop
out
movsl
icebp
daa
add
pop
sub
lock
cltd
ja
mov
mov
sub
daa
add
sbb
add
push
jmp
aas
sbb
cld
movl
add
lea
cmpsl
or
add
repz
pop
es
push
push
dec
pop
push
pop
dec
in
cmp
ret
out
add
mov
add
daa
ud0
push
mov
int
ret
pop
mov
mov
test
jmp
mov
cmp
sbb
jmp
add
repz
leave
stos
push
ret
daa
xchg
movsl
cld
test
repz
ret
leave
stos
das
ret
push
add
add
fs
incl
imul
pop
push
add
leave
push
xor
sub
iret
or
xchg
and
add
push
cld
push
arpl
pushl
arpl
push
fucomp
mov
and
push
call
add
rcl
pushl
test
add
testb
sub
push
push
pop
ds
or
inc
addb
add
add
pop
cmp
mov
es
in
jnp
cld
add
jno
jg
mov
sub
sub
cmp
outsl
add
lock
add
push
inc
in
jns
or
icebp
or
scas
jo
mov
add
mov
fdivrl
mov
xor
adc
cmpsl
inc
sti
mov
lods
add
mov
push
lods
jp
loopne
mov
pop
enter
lock
jae
push
mov
and
or
pop
and
push
stc
jl
ret
jp
in
mov
jb
in
mov
adc
xchg
incb
add
shrl
out
add
jp
repz
and
repz
js
pop
xchg
mov
lds
div
jb
add
ja
fistpl
sti
mov
fadds
stos
mov
adc
xchg
test
rcrb
xor
ljmp
mov
add
fs
mov
dec
adc
add
xor
add
sarl
pop
rcrl
inc
ljmp
shlb
repz
or
repz
insb
js
adc
fcmovnb
rcr
rorb
xor
mov
xchg
scas
mov
pop
std
mov
push
ljmp
cli
mov
dec
lahf
addb
push
add
add
sarb
pop
jle
inc
mov
dec
in
and
mov
xor
cli
shlb
sti
les
incl
xlat
sbb
shrl
lret
pop
clc
and
clc
lea
inc
add
leave
ret
push
or
stc
or
and
or
lea
push
inc
xor
lret
sbb
sti
xor
out
xor
xor
sub
std
lcall
shlb
shlb
sti
mov
ss
mov
push
lret
div
adc
div
gs
and
clc
cmp
cmpsb
stos
fmull
sub
mov
and
in
outsb
les
ret
aaa
out
ret
sub
inc
mov
pop
sbb
add
cmp
enter
and
out
shlb
idiv
rcll
and
out
out
adc
push
stc
ret
push
loop
jns
fists
pop
aad
dec
add
test
mov
add
pop
xchg
out
std
inc
repnz
aaa
in
xor
loopne
inc
nop
xchg
testb
sbb
xor
jno
dec
fcomi
dec
lods
les
or
sbb
jne
out
lret
fcmovnbe
dec
push
ss
sub
in
adc
mov
add
rclb
lds
or
jb
jecxz
lret
mov
out
enter
mov
hlt
mov
pop
mov
lea
add
test
in
lds
ljmp
neg
insl
mov
cmc
pop
and
jge
xor
mov
pop
in
dec
cmpsl
test
sub
add
testl
push
mov
ret
mov
movsl
shlb
popf
mov
pop
add
add
jle
add
add
int3
mov
cmp
clc
fidivrl
pushf
outsb
mov
add
mov
adc
nop
mov
xor
mov
aad
inc
cmp
sbb
mov
dec
jge
clc
mov
hlt
xchg
out
rol
add
mov
mov
ficoml
rorl
add
bound
lret
pushf
add
sahf
or
in
add
or
pop
add
mov
xor
adc
or
add
shr
les
js
cwtl
pop
cltd
push
adc
xor
cli
add
xchg
mov
dec
dec
mov
xor
add
xor
xor
fdivrl
push
inc
add
outsb
ret
pop
repz
mov
add
ret
xor
pop
outsb
test
add
sbb
shl
ret
mov
cwtl
pop
lret
ljmp
ljmp
mov
fldcw
mov
flds
mov
hlt
out
nop
push
sbb
and
ljmp
frstor
and
out
aaa
rcll
ret
add
in
add
repnz
mov
adc
push
mov
sarl
mov
out
in
scas
pushl
mov
fcomip
aas
nop
insb
pop
les
ret
sbb
add
data16
mov
push
mov
mov
and
inc
add
sub
mov
out
xor
add
seta
dec
inc
add
adc
ret
mov
cli
js
cli
cli
jnp
mov
xchg
jecxz
push
icebp
dec
cmp
xchg
mov
xchg
div
dec
repz
fs
pop
cmp
mov
ret
hlt
lock
mov
sbb
jno
test
pop
pop
lods
pop
inc
xor
lret
push
add
xor
incl
add
je
stc
xchg
jb
sti
xor
pop
xchg
lds
popl
pop
push
rol
pop
sarb
or
cli
or
mov
repz
es
dec
sub
xor
incl
jno
cli
movsb
xchg
pop
shl
jle
add
inc
ret
sbb
fnstcw
dec
jo
sti
cmp
test
inc
jle
movb
and
lret
add
lock
call
inc
mov
xor
and
std
repz
inc
mov
add
addr16
lcall
sarb
inc
icebp
inc
add
faddp
psllq
jnp
outsl
lods
mov
xor
cwtl
pop
xchg
scas
or
in
out
shlb
push
fnstcw
mov
or
sarb
ret
xchg
pop
inc
add
add
push
repz
jnp
pop
xor
xor
cmpsl
mov
pop
and
or
push
shlb
mov
mov
insl
and
mov
jmp
xor
mov
mov
ret
mov
cwtl
out
sbb
mov
aam
dec
andb
call
or
pop
fnstsw
add
mov
add
cmp
pop
into
mov
jb
jae
xchg
push
mov
pop
jmp
pop
outsl
dec
add
or
or
sub
in
daa
inc
jmp
mov
clc
lret
sbb
jg
inc
jmp
mov
add
mov
dec
or
add
xor
fs
push
call
push
mov
shrl
push
add
insb
and
sub
xchg
sub
or
divb
inc
jmp
pop
mov
xor
int3
and
inc
add
cltd
mov
aaa
pop
adc
cmpb
fs
flds
inc
js
arpl
enter
jmp
loop
addb
push
arpl
push
inc
js
addl
add
add
inc
psrlq
inc
fs
push
mov
icebp
push
add
pop
and
mov
rorb
clc
arpl
or
enter
leave
push
arpl
jge
hlt
mov
outsb
arpl
and
add
lock
mov
add
mov
mov
pop
mov
jne
fdivs
xchg
fadds
pop
es
mov
sbb
clc
imul
dec
xor
inc
add
dec
adc
add
mov
loop
xor
pop
inc
lock
fstpl
and
lea
dec
inc
add
mov
sub
add
mov
repnz
in
and
pusha
add
add
lock
cld
int
adc
mov
jecxz
sub
repnz
and
pop
pop
icebp
add
dec
mov
push
int
lock
mov
scas
jl
mov
in
mov
ljmp
add
sbb
icebp
mov
add
mov
mov
arpl
stos
add
into
sub
xor
aad
aas
mov
mov
mov
xor
incl
ljmp
outsb
mov
mov
sub
jle
jge
leave
push
bound
or
inc
xor
shlb
jp
mov
fsubs
daa
ljmp
test
add
add
lock
jbe
clc
pusha
enter
in
jb
repnz
inc
je
insl
in
out
scas
mov
mov
shr
addb
add
or
add
fsubrl
inc
push
jnp
cld
dec
jo
mov
repz
fmul
add
arpl
or
add
arpl
add
jg
cld
fsubrs
mov
or
leave
fidivrl
pop
call
or
jne
jae
or
sbb
mov
jmp
jmp
rolb
nop
lret
xchg
jae
push
aam
add
mov
lcall
push
xor
imul
push
add
add
jae
mov
repnz
mov
sbb
js
mov
dec
gs
mov
es
data16
mov
inc
int3
add
ds
int3
cmpb
or
or
and
pushf
mov
clc
pop
daa
incl
sub
jmp
ss
fcmove
xchg
push
call
lock
mov
cmp
add
je
add
shlb
fwait
mov
bound
add
sbb
pop
pop
jmp
mov
jge
inc
add
push
jmp
adc
lods
hlt
sti
xlat
mov
add
subl
push
loopne
mov
add
lahf
jmp
lret
push
cmp
jb
jno
sbb
cmp
add
jnp
mov
jne
add
mov
push
insb
xchg
add
jo
add
subb
js
mov
push
push
std
push
lea
lcall
push
add
jbe
std
out
mov
cmp
add
repz
leave
sub
stos
push
jb
xchg
push
push
loopne
ret
sub
add
ds
mov
cs
out
bound
add
das
and
xor
inc
add
push
pushl
push
mov
pop
test
iret
mov
inc
push
lahf
inc
jmp
or
cmp
add
sub
decl
jbe
or
push
adc
in
call
cmp
adc
jb
test
in
mov
shrb
adc
add
push
mov
pop
mov
push
sub
or
movsb
scas
out
push
js
or
out
pushw
ja
or
fisubrs
push
orl
pop
lock
add
lock
pushf
add
adc
jle
lock
inc
cwtl
or
je
lock
jns
fbstp
pushf
daa
mov
into
sbb
add
add
and
push
pop
or
jmp
scas
test
lahf
add
mov
mov
lahf
push
mov
sbb
clc
daa
or
mov
call
inc
enter
add
lock
or
jle
cwtl
push
mov
scas
and
fisttpll
sub
aaa
cli
test
add
xor
hlt
xchg
popf
in
jp
test
or
push
bound
push
popa
ljmp
scas
jge
stos
je
add
xchg
outsl
sub
out
sbb
push
jmp
cmp
test
sti
xlat
subl
subb
jae
out
lock
fdivl
mov
call
or
push
pushl
add
pop
es
test
sub
ret
inc
lahf
adc
inc
test
pushf
cmpsl
jl
xchg
repz
xor
repz
pushl
jne
sahf
push
or
mov
push
push
call
push
add
sbb
negl
inc
add
repnz
push
es
mov
cmp
mov
xor
mov
add
sahf
push
push
mov
repz
push
roll
pop
pop
pop
rcll
xor
mov
cltd
push
or
pop
aas
mov
jno
sub
mov
pop
add
clc
jle
mov
and
or
adc
sub
popl
add
push
call
mov
adc
rcr
decb
call
add
mov
call
pop
fsubrl
test
je
and
add
lret
inc
clc
leave
or
lcall
fwait
out
push
lods
jmp
in
or
test
je
sbb
jnp
lods
jne
cld
ss
ja
testl
xorl
dec
loop
mov
add
lods
mov
cmc
dec
leave
xor
les
lds
scas
add
rep
push
lock
pop
lea
mov
add
lods
add
and
or
inc
jb
lock
mov
pop
daa
cmp
inc
test
jmp
sbb
imul
add
movsb
ret
sbb
stc
add
scas
movsl
mov
add
cmp
jmp
hlt
push
movsl
jns
bound
pop
lods
add
push
sbb
inc
jo
inc
xor
call
les
popf
stos
popf
pop
outsb
inc
and
sub
pop
adc
popf
stos
testl
cmp
push
jmp
xor
scas
inc
je
push
add
mov
push
push
mov
std
jmp
inc
movsb
psubsw
add
xchg
inc
jns
movsb
jne
cld
push
add
jae
inc
and
in
push
or
rorl
xor
push
add
pop
jmp
int
call
lods
lret
inc
lods
dec
movsb
jmp
mov
and
movsb
psubsw
lret
inc
mov
adc
jmp
out
push
push
pop
sbb
mulb
out
and
add
add
add
dec
or
add
ud0
pushl
decl
jne
jg
scas
cltd
pop
add
mov
push
mov
incl
dec
mov
jno
mov
sub
out
jo
mov
dec
aaa
pushl
jno
mov
cld
cli
lcall
mov
xor
inc
outsb
jne
add
pop
repz
aam
call
or
add
push
and
or
pop
xor
jge
push
push
out
ud0
fwait
rcl
sbb
mov
inc
pop
add
inc
das
ror
mov
mov
lahf
loope
mov
sub
sti
incb
stc
test
xor
leave
xor
add
adc
les
add
jae
idiv
ret
flds
repz
push
das
cmp
out
jp
add
sub
pop
jecxz
out
js
jns
sub
lcall
popf
fwait
je,pn
add
adc
test
lahf
sbb
into
mov
fsubl
lock
xor
test
mov
add
mov
das
test
xchg
insb
xor
or
call
pop
lock
xor
lds
jmp
adc
sbb
cmpsl
xor
scas
jnp
das
mov
cmp
push
sbb
fwait
pop
ret
push
iret
ret
cmp
jmp
call
sbb
xchg
psubsb
test
pushl
adc
hlt
add
lret
test
inc
xchg
mov
push
bound
sbb
out
test
or
fsts
add
pop
test
push
dec
or
popf
mov
inc
sbb
in
mov
jge
xchg
repz
adc
add
push
mov
call
add
stc
jne
imul
mov
add
decl
popa
addr16
pushl
or
call
lds
in
sbb
orl
cmpsb
in
imul
lcall
adc
out
xor
pop
xchg
out
in
push
and
cmp
jae
push
out
ud0
pushl
imul
add
push
pop
inc
lock
jmp
pusha
movsl
leave
xor
add
idiv
sti
out
mov
sbbb
je
sbb
mov
je
adc
lock
lahf
jmp
cs
cld
lock
adc
add
movsb
jne
in
cs
mov
pushf
pushl
ret
je
add
jo
inc
pusha
pusha
fwait
rclb
fstl
movsb
mov
jns
ret
jmp
mov
das
test
add
push
jb
cld
adc
add
push
jmp
dec
fstps
negb
xchg
icebp
daa
add
adc
fwait
mov
or
pop
or
movsb
and
add
pop
inc
movsb
xchg
incl
lock
fs
pushf
movsb
and
insb
jle
pushf
push
movsb
rcrb
fwait
inc
jno
add
add
inc
mov
call
ss
call
mov
adc
repz
outsl
push
add
pusha
dec
sub
aam
sub
hlt
scas
lds
push
or
in
push
add
pop
leave
incb
add
lahf
ret
call
repnz
add
jmp
cmp
jne
fisttpl
test
fwait
jne
dec
cmp
es
mov
xchg
repz
jne
fwait
inc
loope
xchg
mov
sub
jo
loope
imul
and
addr16
xor
incl
add
jo
fisttpll
jmp
mov
mov
jge
fsin
add
jmp
jne
outsb
ds
outsb
push
add
cltd
repz
fsubrl
or
cmp
aas
mov
imul
imul
call
push
icebp
imul
jp
dec
pop
jb
call
add
pop
mov
mov
lods
mov
das
mov
add
push
les
incl
lds
mov
arpl
jmp
addr16
adc
rorb
in
pop
adc
fwait
ud0
stos
aas
mov
mov
push
jnp
mov
loopne
inc
or
jne
add
jg
stos
nop
jmp
pushf
sti
outsb
adc
xor
loope
sahf
lcall
dec
shrb
clc
inc
xor
aas
adc
mov
cld
sub
mov
pop
lcall
loopne
xor
lcall
mov
add
adc
out
in
cld
cltd
adc
enter
iret
iret
stos
repz
xor
add
jae
jns
push
xor
mov
loopne
lods
fwait
lahf
adc
nop
sub
push
jmp
hlt
adc
inc
jmp
push
lldt
and
add
idiv
je
cltd
jne
mov
jmp
mov
push
jmp
jb
hlt
jmp
loopne
dec
mov
add
mov
mov
mov
jp
lock
xchg
movsb
bound
or
cld
arpl
call
bound
lds
call
fwait
push
mov
cs
add
inc
add
jnp
add
adc
inc
lds
add
pop
or
sub
call
inc
les
jb
dec
aaa
inc
add
movsl
test
add
sbb
clc
int3
push
call
jmp
data16
add
or
pop
xor
ret
mov
fstps
mov
mov
pop
shl
test
je
dec
cmpsl
movsl
sub
mov
add
lock
mov
mov
out
add
insl
add
add
cs
add
ss
pop
add
insl
or
fisubrl
sub
lret
add
xor
imul
enter
out
add
xor
add
xor
lock
add
jge
xchg
push
out
xchg
push
jl
movsl
add
xchg
add
sub
lahf
pushf
jne
and
test
jnp
pop
lret
add
mov
bound
xor
in
add
aaa
loop
in
push
js
xchg
sub
sbb
out
aas
add
mov
sbb
add
out
lods
xchg
cltd
or
dec
in
negl
rolb
push
mov
sbb
out
pop
sub
mov
notb
cmp
add
add
sbbl
enter
jae
add
pop
pop
cmpsl
jmp
outsl
ss
inc
fisubrl
ds
mov
andl
or
lcall
xchg
mov
push
jl
sahf
lahf
pop
mov
add
call
jnp
call
add
add
ljmp
pop
jb
jmp
mov
jmp
popf
cmpb
bound
mov
xchg
pop
je
xlat
pop
add
mov
orb
shlb
add
jno
decl
loopne
arpl
dec
loop
fs
popa
add
out
call
pop
jno
or
aad
push
loopne
add
or
mov
xchg
ljmp
loopne
add
or
mov
outsl
pushl
or
incl
leave
pop
call
add
test
mov
sbb
mov
aaa
lcall
sahf
add
test
bound
add
lock
lcall
pop
or
popa
rcrb
call
lcall
or
push
ds
cltd
lea
lcall
fiadds
call
imul
test
lock
xorl
adc
cmp
xchg
sahf
add
pop
xor
clc
sahf
adc
add
sbb
outsb
cltd
sbb
xchg
pop
cltd
pop
das
push
cltd
xchg
xchg
xor
call
popf
xchg
lods
cld
sbb
sub
dec
and
cltd
push
xchg
pop
xor
push
lods
xchg
scas
push
cltd
aas
pop
popf
cwtl
aaa
xchg
add
out
in
dec
pop
sub
mov
rcll
dec
pop
jmp
cwtl
pop
xchg
jl
incl
add
jecxz
jmp
js
call
loop
sbb
pop
push
xlat
incb
sub
testl
cmpsb
jmp
push
xlat
decb
ss
mov
pop
xchg
mov
fwait
push
aad
js
pop
xor
mov
incl
jbe
cld
cltd
pop
sbb
cmp
add
sahf
ret
hlt
push
or
repz
and
push
add
or
pop
add
fdivrp
imul
js
push
add
lea
fisttpl
fnstenv
clc
ss
call
xchg
les
add
mov
incl
popf
or
decl
insb
jmp
xor
das
inc
add
dec
jg
hlt
ja
push
icebp
xchg
je
jle
call
xchg
test
notl
jns
mov
pushf
inc
add
lds
pop
rorl
test
mov
pop
lahf
add
cmpsb
pusha
adc
enter
xlat
sbb
in
js
add
xchg
or
iret
insb
xchg
lcall
lcall
add
xchg
jp
testl
push
or
jne
xchg
ljmp
xchg
mull
stos
xor
xchg
ljmp
clc
xchg
mov
popf
add
xor
test
or
xchg
ljmp
sub
rorb
in
mov
rorl
jmp
xor
push
jmp
add
push
scas
aas
fmull
lock
sub
and
sub
jnp
nop
and
cmpsl
mov
cmpsl
adc
xchg
and
pop
jmp
stos
fiadds
jmp
inc
lock
addr16
bound
mov
xchg
inc
andb
push
lods
push
mov
xchg
lcall
jmp
jl
call
filds
add
pop
outsb
fxch
addb
hlt
push
testl
adcl
shll
pop
call
pusha
ds
testl
jl
lock
lcall
fiadds
pop
sub
push
pop
jg
inc
insb
ljmp
mov
je
jo
in
test
mov
jmp
add
repz
mov
call
push
cmp
testl
jno
shrb
jns
mov
jno
ljmp
out
pop
call
scas
cs
sahf
js
jne
jo
rorb
jo
pushl
aad
outsb
js
in
ss
call
push
cs
rcl
ja
jmp
lcall
js
or
push
incl
add
js
lock
call
push
ds
jmp
out
in
sti
call
lock
or
push
in
jae
add
movsl
movsl
fwait
lret
inc
movsl
xchg
mov
fiadds
incl
les
add
lret
inc
pop
xchg
decl
loope
lock
sbb
fdivs
leave
xor
clc
jne
cld
cmpsl
adc
jne
sbb
or
les
dec
jle
or
sbb
push
sti
out
lret
sub
cli
mov
or
add
or
lock
push
sbb
sahf
popf
testb
popf
cli
rolb
lods
cli
inc
add
loopne
inc
lock
cld
loopne
pop
mov
add
add
fbld
add
stc
nop
xchg
xlat
test
out
cmp
cwtl
mov
sti
xchg
js
xchg
cmpsl
lahf
nop
mov
mov
push
adc
xor
rcl
inc
jmp
sbbl
xchg
addr16
ljmp
clc
call
or
mov
lcall
cld
lcall
mov
dec
push
mov
testb
std
push
push
push
inc
jmp
mov
call
repnz
push
sbb
jne
jnp
xlat
scas
xorb
cmpsb
out
out
pusha
mov
sbb
and
add
fadds
sti
cs
sub
push
add
repz
les
jmp
mov
push
mov
gs
es
push
es
pop
call
add
mov
jmp
mov
jmp
insl
sub
out
push
ljmp
call
jbe
or
mov
paddq
jns
jne
insl
pop
aam
jns
ret
push
mov
add
xchg
pop
call
inc
ds
push
jno
sar
jbe
inc
clc
add
add
mov
clc
jno
mov
add
add
mov
add
popf
add
cmp
clc
outsl
dec
sti
out
enter
cmpsb
mov
inc
pop
rorl
sbb
pop
ljmp
call
add
sbb
cli
mov
pop
movsl
ret
je
test
cs
xor
jno
mov
mov
jmp
jecxz
mov
mov
jmp
pop
adc
mov
inc
lock
bound
add
ljmp
sbb
mov
mov
mull
dec
inc
add
pop
push
inc
lahf
xchg
jg
loope
loope
dec
mov
push
shr
push
inc
jmp
add
or
mov
adc
push
xchg
xor
adc
fwait
inc
mov
mov
inc
jmp
add
rorl
mov
rcr
sbb
add
adc
jp
xchg
into
pop
in
cmp
iret
mov
cmp
enter
iret
icebp
call
add
ffreep
inc
lock
scas
fadd
call
lea
add
fwait
outsb
mov
jmp
repz
push
push
xor
call
das
inc
jmp
insl
adc
mov
jge
repz
call
push
add
fistpll
inc
bound
push
into
mov
push
xor
add
scas
aad
insb
xlat
pop
hlt
insl
push
int3
jl
push
or
das
sub
out
xor
xor
push
xchg
dec
pop
lcall
cmp
repz
jnp
add
call
ljmp
and
das
dec
or
out
leave
jmp
add
add
push
cmp
jne
mov
push
popa
pop
cs
dec
and
mov
push
call
and
push
nop
int3
repz
ret
xchg
pushl
mov
pushl
nop
jne
rcll
add
aaa
mov
loope
add
pop
nop
jne
lock
adc
cwtl
jge
incl
add
sbb
jno
push
decb
in
mov
lock
add
imul
subb
adc
lock
or
mov
jne
xchg
sub
add
lahf
or
lock
or
mov
jg
mov
outsb
add
jge
out
xor
add
mov
dec
mov
jge
popa
mov
push
jmp
mov
push
jmp
mov
push
jmp
inc
shrb
call
add
inc
mov
dec
mov
add
xchg
push
lds
es
xor
add
jge
add
movaps
cmc
insl
push
add
add
push
cmpl
jge
rcrl
sbb
pop
dec
xlat
mov
xchg
cmp
inc
xlat
rclb
xlat
cld
fadds
xorb
adc
out
mov
daa
lds
pusha
daa
mov
mov
cmp
cmp
jmp
xor
dec
add
push
sbb
rolb
add
add
test
mov
out
push
mov
rep
add
jmp
or
pop
cld
imul
pop
inc
incb
mov
push
lcall
incl
add
adc
push
mov
mov
nop
pushl
popf
add
call
add
push
dec
or
cmp
in
or
movl
mov
sar
call
cmpl
push
adc
lcall
int
mov
push
push
adc
call
cmpsb
inc
cld
push
mov
push
adc
call
push
pop
cld
call
lock
ret
cmp
jno
xchg
xlat
rcrl
pop
insl
xchg
inc
fmul
add
mov
push
add
lock
js
lahf
nop
xchg
inc
xchg
test
mov
lock
enter
add
outsl
xchg
lock
push
mov
js
addr16
aad
rorl
jge
inc
xor
aaa
and
icebp
insl
add
pop
sahf
sbb
scas
add
dec
inc
add
push
shll
add
jmp
sbb
xchg
fs
jg
xor
stc
lock
push
mov
mov
adc
icebp
push
jmp
xchg
pop
das
sub
scas
movb
imul
adc
pop
test
mov
es
jg
xchg
outsb
hlt
mov
jg
fimull
cmp
add
das
or
out
mov
cltd
fwait
add
mov
jg
loope
xor
out
outsb
push
scas
jne
push
inc
lret
icebp
jnp
mov
xor
push
jne
pop
xchg
dec
jge
sahf
or
das
sub
lock
outsb
jle
jle
jp
cld
mov
popf
jne
leave
sub
push
push
jb
out
call
add
jl
call
addr16
icebp
jnp
out
jne,pt
ret
rorl
idivl
jmp
outsl
xlat
sub
out
or
sub
mov
or
xchg
mov
and
add
xorb
or
call
jle
clc
call
addb
in
jmp
push
int
incl
add
test
cltd
or
mov
jle
rolb
add
add
jne
loope
cmp
imul
xor
push
subl
enter
lcall
imul
sbb
icebp
outsl
add
idivl
insb
cmp
insl
mov
fistpll
xorl
add
mov
mov
jmp
nop
xchg
mov
cmp
jo
add
insl
divl
roll
xchg
nop
inc
int3
sbb
add
xchg
mov
sti
sub
nop
xchg
xor
cmp
mov
push
fcom
cs
lock
push
xor
ljmp
jl
xchg
mov
jo
add
inc
jge
sbbb
je
or
mov
mov
jnp
rcl
std
mov
xlat
jnp
adc
outsl
cmp
jnp
aam
icebp
loopne
xchg
jl
sbbb
insb
inc
sahf
jnp
rcll
jnp
cmp
jmp
out
jnp
andb
add
cwtl
jl
sbbb
addb
inc
dec
add
out
push
push
movl
call
insb
sar
mov
test
push
add
jb
sti
add
push
jmp
vbroadcastss
add
jne
jp
shl
dec
mov
hlt
jns
lods
inc
xchg
shlb
jecxz
cmp
pop
sbbl
out
es
add
mov
hlt
imull
cmp
push
shll
jns
loope
aam
add
mov
push
push
jb
call
imul
jl
call
call
push
jno
call
mov
mov
orl
add
or
call
mov
mov
add
jl
inc
add
pushl
insl
mov
call
add
push
fsubrp
and
push
xchg
sarb
push
test
push
std
push
enter
sarb
xor
xacquire
jne
xchg
sbb
icebp
push
adc
pop
sbb
cmp
test
addr16
add
push
popa
stc
pop
fdivrs
push
das
xor
jne
push
leave
cld
mov
add
cmp
mov
lcall
mov
sbb
xor
lock
clc
pop
mov
pushl
cltd
xor
push
push
adc
xor
test
dec
repnz
jg,pt
repnz
mov
js
filds
add
inc
in
lds
jmp
adc
repnz
jle
push
add
js
jle
or
xchg
mov
or
fsubrs
push
int3
in
call
clc
out
ja
adc
mov
testl
fadd
xchg
js
sbbb
call
sbb
icebp
pop
sbbl
add
ja
push
lret
pusha
into
dec
into
out
add
mov
out
mov
inc
les
sti
adc
add
jl
outsb
outsl
jge
jl
outsb
push
and
leave
stos
cld
push
push
jb
sbb
pop
mov
xor
out
es
scas
cmpsl
sbb
lahf
push
call
add
add
cmp
or
or
popa
je
repz
leave
into
fdivp
jne
pop
jne
loop
mov
or
popf
xchg
cld
jge
call
adc
jae
mov
or
mov
sbb
je
out
jge
call
jno
add
pop
arpl
xor
or
jne
bnd
mov
incl
add
mov
sarl
xchg
jne
loope
decl
jne
loope
lret
jl
mov
add
fwait
add
sbb
in
cld
cmc
pop
pop
rolb
addr16
enter
lock
shll
mov
jl
and
ret
ds
jl
cwtl
lds
inc
lock
in
mov
jl
xor
ret
lcall
add
pop
or
xor
xchg
xor
pop
jl
les
fisttpl
call
pop
mov
xor
pop
jp
xchg
push
cmp
push
pop
cmpsl
jnp
fildll
pop
add
rol
jp
push
rol
jg
hlt
or
fisttps
mov
sar
and
call
lds
aam
pop
cmp
aas
fisttps
sti
loopne
call
les
jne
or
adc
pop
xor
rol
jp
push
rol
je
or
or
jp
fisubrs
pop
inc
add
call
cmpl
add
lods
jae
pmulhw
call
out
push
add
cli
pop
subl
test
sub
add
ficoms
xor
addr16
push
andb
call
roll
xor
repz
mov
stos
jae
jne
sbb
inc
jmp
jae
jne
mov
popf
mov
sbb
call
push
add
cld
pop
ror
dec
aam
xor
or
push
add
fwait
push
add
in
stc
incl
mov
ja
fmuls
push
jl
out
in
push
out
je
sar
pushl
out
mov
push
out
je
mov
out
je
popa
pop
call
loopne
add
dec
sub
je
add
add
dec
push
pushl
fnsave
add
add
out
dec
push
sbb
je
lock
mov
subl
ret
xor
call
inc
sbb
add
push
js
adc
xor
or
dec
lcall
jmp
lock
enter
dec
sahf
dec
pushl
ss
or
xchg
mov
daa
mov
jno
js
jmp
out
sbb
scas
imul
or
mov
mov
out
bswap
filds
out
mov
call
inc
rcr
call
icebp
jmp
hlt
push
fadd
call
ja
lret
xchg
jno
adc
push
rol
push
jo
imul
jbe
push
outsb
icebp
jmp
sbb
add
or
call
ja
lret
mov
cltd
jbe
adc
icebp
sti
outsl
cld
push
fadd
call
ja
lret
pushf
and
cli
fdivl
push
rol
mull
dec
out
outsl
add
pop
lea
jo
in
inc
cmp
add
jo
jo
arpl
insl
ja
add
jb
imul
out
mov
add
add
push
adcl
pcmpgtw
add
stc
daa
jle
pop
call
outsb
pusha
imul
jmp
cmp
lret
outsl
jne
lret
and
inc
mov
stc
pop
inc
rorb
je,pn
daa
cli
repz
mov
sbb
pop
add
dec
incl
out
fmull
jne
hlt
je
icebp
fadd
dec
hlt
je
scas
pop
pop
call
add
movsl
enter
jbe
add
std
cmpb
jne
adc
je
xorl
push
repz
jno
ret
hlt
je
or
je
jno
repz
mov
repz
mov
repz
shrl
in
mov
dec
rol
sbb
aas
lock
pop
std
je
jecxz
fs
lock
jnp
pop
add
inc
adc
decl
xor
in
xor
pusha
je
cld
lods
out
pop
cwtl
jne
lahf
adc
xchg
ljmp
push
ret
mov
mov
xchg
and
add
mov
dec
pop
inc
ja
cmp
jae
in
fs
add
enter
lock
pop
xor
sahf
add
push
fcmovnb
pmulhw
mov
cmpl
cli
add
jne
insb
fs
jmp
sbb
sbb
call
add
inc
push
out
scas
ret
lock
jmp
or
push
inc
add
pop
adc
pop
insb
leave
adc
mov
cld
imul
outsl
bnd
adcb
add
pop
call
jmp
insb
dec
jg
jp
js
insb
ds
pop
add
imul
sbb
add
adc
imul
test
pop
lcall
pusha
xchg
out
outsl
call
mov
aaa
pop
subl
add
imul
pushf
ret
jle
movsl
stos
aaa
xor
in
imul
mov
mov
loope
adc
inc
jmp
hlt
imul
sub
pop
inc
stos
je
and
xchg
add
mov
push
addr16
xor
out
fsubrl
dec
pop
call
or
jb
push
mov
je
add
icebp
dec
sti
inc
int
imul
leave
dec
xor
or
push
call
xchg
jae
stc
push
jne
into
inc
cld
data16
out
dec
clc
push
dec
dec
sub
add
stos
inc
jmp
push
add
imul
lock
sti
out
mov
dec
jmp
push
or
jp
add
jno
shll
testl
incl
pop
data16
add
pop
insb
jo
call
pop
cmp
hlt
pop
mov
faddl
es
decl
jo
clc
push
stos
shll
xor
mov
cmpsb
sub
fildll
add
add
pop
aaa
xchg
add
je
je
or
fsubrs
add
fadds
jmp
int
enter
repz
lret
jo
sub
xor
push
xchg
pop
ljmp
adc
push
push
mov
int
ret
cmc
cmc
out
pop
mov
adc
push
push
stos
xor
lods
cmpsl
push
icebp
push
sbb
push
cmp
jp
adc
push
aas
xor
sub
addr16
fdivp
pop
push
iret
pusha
lcall
pop
add
filds
mov
mov
cmp
mov
mov
call
sti
cmpsl
je
lret
loope
test
out
aaa
push
jne
sub
stos
add
dec
push
push
bound
vpackuswb
push
repnz
shll
scas
or
sti
adc
ficomps
mov
outsl
ret
lea
dec
sub
sbb
call
or
add
out
push
jne
lret
jl
sahf
fsub
inc
fcmovu
push
dec
pop
xor
add
sbb
incb
daa
inc
sbb
inc
or
add
push
push
mov
je
add
ret
fdivp
imul
leave
inc
in
or
pushl
rcll
lcall
mov
inc
out
dec
hlt
call
lock
fnstcw
ret
pop
aaa
inc
lock
fmull
das
add
pop
stos
insl
sti
das
clc
push
mov
arpl
add
das
aad
ret
xor
insb
push
aaa
icebp
xor
scas
add
mov
testl
fs
rorl
loop
out
gs
dec
mov
dec
mov
cmp
inc
insb
push
cmp
pop
cwtl
test
cmpsl
mov
pop
les
mov
jne
push
xchg
pop
aas
gs
cmp
jb
testb
sti
outsb
cmp
gs
add
dec
lret
cs
aas
mov
ror
push
jmp
aaa
mov
cltd
insb
movsl
push
push
rorb
jmp
aaa
mov
mov
sub
fs
lret
dec
or
pop
sahf
out
popa
aaa
xor
cltd
insb
inc
lidtl
int
out
out
dec
fisubrs
dec
loope
inc
nop
mov
add
add
push
mov
clc
pop
jmp
pusha
push
or
pop
xchg
insb
call
fs
jbe
lret
arpl
lret
subl
fsincos
inc
or
mov
jmp
mov
add
cmp
test
out
fs
hlt
scas
cs
jmp
mov
rcrb
fs
ret
fs
add
cmp
xchg
sub
push
fwait
cmp
in
out
lds
repz
addb
pop
call
mov
jne
lock
mov
mov
incl
lock
jne
lock
add
je
jno
in
and
or
ss
lcall
lcall
jbe
lock
add
pop
jmp
add
sarb
push
pop
call
jno
add
aaa
ds
mov
pushl
mov
jne
lock
mov
cmp
ret
into
mov
imul
pushf
cmp
decl
fs
cwtl
add
lock
div
outsl
add
aaa
xor
add
out
outsl
add
xor
add
insl
mov
push
sti
sbb
inc
je
testb
scas
add
pop
inc
pop
inc
mov
imul
pusha
push
xor
fnstenv
popa
sarl
into
fstpl
pop
mov
push
add
xor
xchg
jnp
popa
sahf
jp
push
push
mov
sub
fwait
jns
dec
popa
jbe
and
sub
in
sub
fs
daa
popa
push
frstor
jmp
inc
scas
and
push
mov
inc
mov
popa
es
outsb
push
push
xor
lcall
lods
das
add
dec
pusha
mov
dec
pop
fisubrs
mov
fimuls
pusha
push
inc
lods
sbb
push
lcall
das
das
inc
jmp
rclb
pop
jmp
pusha
adc
mov
xlat
pop
push
xorl
push
push
call
mov
push
xchg
pop
adc
jl
push
pushl
in
fisubl
jae
popl
je
add
jb
call
xchg
ret
dec
mov
out
std
out
incl
idiv
into
call
mov
call
aam
out
or
shl
dec
call
mov
loopne
call
out
lods
call
idiv
mov
into
mov
in
call
push
test
ljmp
call
incl
xor
stc
in
push
pop
sbb
loopne
gs
fdivrs
cmpsb
inc
push
mov
pushl
test
add
cmpsb
inc
or
adc
jae
insb
push
mov
pop
das
cmp
mov
and
negl
add
add
push
xor
call
inc
sub
aad
or
push
or
enter
outsb
mov
out
pop
or
inc
mov
or
add
pop
ffree
out
pop
aam
sbb
call
gs
jge
and
ljmp
mov
out
out
outsb
push
inc
scas
pop
shll
pop
fildl
adc
add
add
pop
mov
fs
pop
cmpsb
cmp
add
into
jp
push
fs
test
dec
shr
fs
cmp
ret
out
lock
repnz
incl
cs
lock
lods
outsl
syscall
jmp
ret
repz
repz
ret
mov
mov
pusha
call
add
add
add
xor
add
aas
push
add
fwait
lret
daa
sub
pop
jne
sbb
mov
adc
adc
shll
pop
call
push
pop
addr16
jns
testl
movsb
inc
ljmp
and
xchg
pop
push
sbb
mov
mov
std
fldt
add
pop
or
ror
out
mov
jmp
incb
push
jle
mul
out
xor
loope
sar
mov
push
outsl
push
fadds
pushl
cmpsb
fldt
fadds
call
mov
idiv
inc
imul
add
call
inc
add
mov
faddl
add
in
call
cmpsb
in
div
mov
add
push
xchg
mov
lock
jb
notl
popa
jmp
mov
neg
icebp
popa
jne
pop
adc
fcoms
mov
adc
push
jne
inc
push
mov
nop
cltd
popa
incl
xlat
pusha
incl
add
aas
imull
popa
jne
ja
mov
dec
jno
lcall
mov
in
inc
shll
push
sub
ljmp
pop
pushf
insb
pop
pop
pop
insb
sub
dec
pop
cvtps2pd
inc
pop
ds
inc
cmp
popa
imull
mov
loopne
push
popa
loopne
pop
pop
push
popa
iret
xchg
stc
pop
pop
adc
sub
add
pop
rcrl
imul
dec
mov
jmp
inc
test
call
or
test
pusha
outsl
sub
fmuls
sbb
dec
push
mov
pop
cld
pop
inc
shl
imul
add
dec
ret
mov
push
jb
rclb
pop
lea
pop
xor
push
mov
fs
add
ret
repz
add
scas
push
jmp
repz
push
aad
imul
pop
mov
fs
push
jmp
pop
pop
jne
aas
sar
shll
jmp
adc
add
repz
dec
add
outsl
xchg
data16
push
mov
mov
push
cmp
xor
test
add
fs
incb
mov
inc
jmp
fdivrl
incl
mov
add
adc
lock
mov
sub
jmp
mov
push
in
idiv
mov
jmp
push
mov
xor
mov
incl
inc
dec
jmp
mov
add
lock
mov
push
incl
xchg
inc
fcomps
enter
lock
pop
jmp
sbb
inc
lock
bswap
or
jl
cmpb
lcall
fildll
lcall
jl
push
fdivrs
lcall
pop
pop
adc
insl
nop
push
lcall
push
add
add
inc
xor
xchg
fmul
push
add
loop
pop
jns
cmp
addr16
cmpsb
sbbl
pop
jmp
push
aas
push
jmp
add
mov
pop
push
data16
mov
lock
shl
gs
pop
jge
push
lret
inc
push
ds
cmp
push
mov
fdivs
pop
fists
insb
fists
pop
inc
incl
lea
add
push
pop
test
pop
mov
jl
cwtl
xchg
pop
cmpsl
push
pushf
aas
cmpsl
push
ficomps
shl
push
into
pop
cmp
push
xor
mov
jge
push
subl
cmpsb
repz
push
notl
js
fdivrs
push
mov
xchg
pushf
ljmp
add
mov
pushf
call
fwait
in
movsb
push
call
add
add
ds
divl
dec
pop
ss
push
lcall
lcall
dec
and
or
call
adc
fdivr
dec
push
call
out
push
neg
cmp
xchg
sub
and
aad
mov
mov
or
leave
fwait
add
push
loop
add
ljmp
mov
or
mov
jbe
inc
cld
add
loope
xor
or
cld
call
xor
call
int3
add
pop
test
or
jle
cld
mov
fldt
mov
call
or
add
mov
movl
popa
ljmp
popa
ljmp
pop
mov
or
pop
jmp
xchg
shl
add
outsl
adc
adc
popf
iret
add
aas
add
daa
mov
pop
jne
jne
mov
jge
dec
mull
in
push
or
jg
pop
mov
push
ljmp
mov
adc
out
adc
or
pop
jns
pop
test
jecxz
inc
lock
lock
pop
pop
incl
add
add
inc
lock
shrl
push
fimuls
xchg
call
add
pushf
mov
cmove
sub
std
fs
push
andb
xchg
out
inc
ljmp
inc
pop
jle
das
sbb
sub
push
subl
addr16
pop
je
dec
mov
jbe
ret
je
out
ss
sbb
add
imul
inc
inc
imulb
test
push
pop
hlt
fcomi
pop
add
add
adc
fcomps
out
push
jmp
sub
fs
pop
inc
inc
jmp
jl
pop
ljmp
xor
fs
push
jmp
mov
adc
testl
xlat
pop
ljmp
cld
insb
add
pop
lcall
push
add
inc
imul
xchg
pop
repz
push
cmp
cmp
mov
call
adcl
and
add
leave
scas
cld
mov
int3
cmpsb
mov
mov
sar
mov
mov
in
mov
add
mov
je
lret
testl
add
pushl
cmpl
xor
jmp
out
in
pushl
ljmp
jae
ljmp
mov
jmp
jmp
decl
mov
push
jb
call
mov
cmp
scas
push
push
jne
add
push
mov
xor
mov
std
jno
jg
pop
divl
imul
push
lcall
inc
iret
mov
test
mov
js
lcall
aas
adcb
into
sbb
daa
adc
pop
loopne
push
pop
call
imul
shrl
pop
add
mov
add
les
push
push
es
pop
test
add
mov
lea
jmp
adc
add
xor
push
jge
loopne
movswl
ret
jg
fmull
dec
pop
sub
stc
jb
pop
add
push
fadds
jmp
or
ficomps
aaa
dec
cld
pop
das
aam
push
popf
incb
push
popf
push
push
xor
dec
pop
in
mov
test
call
loopne
add
testb
out
sarl
out
xchg
ljmp
sub
jmp
xor
jmp
jmp
fidivrl
inc
dec
mov
lea
out
call
adc
jmp
or
dec
sbb
sti
ds
jmp
imul
adc
jne
lret
insl
mov
pushf
jg
test
add
dec
decl
xor
sub
ds
inc
repz
pop
xor
add
cli
inc
add
std
fldt
mov
call
or
cmp
push
jns
sbb
cltd
or
mov
mov
sub
xchg
mov
lcall
jne
mov
mov
mov
dec
or
xor
vphsubdq
jne
mov
mov
mov
xor
ds
decl
or
addr16
mov
pop
mov
jnp
push
lcall
sbb
insl
pop
stos
cltd
sbb
push
pop
pop
add
xchg
cs
cld
pop
mov
icebp
mov
lock
xchg
nop
inc
mov
cmpb
add
cmp
pop
pop
inc
xchg
jmp
mov
xor
push
imul
push
insb
fadds
dec
mov
sti
cwtl
pop
add
data16
and
sbb
push
add
test
icebp
pop
inc
cs
push
call
push
push
jge
inc
inc
mov
add
mov
add
mov
cs
jge
and
aam
push
add
bound
xchg
push
repnz
testl
jmp
pop
xchg
jmp
add
pop
inc
add
les
pop
dec
sbb
dec
scas
xlat
dec
pop
push
test
push
repnz
les
sub
push
jmp
add
aam
pop
lcall
cltd
add
popl
push
mov
mov
dec
call
xchg
ds
ljmp
and
cmp
sub
decl
sub
jmp
repz
mov
sub
out
sub
sub
pop
mov
fs
push
inc
inc
dec
addr16
pushl
mov
add
call
mov
dec
lea
xchg
sbb
lcall
inc
inc
mov
decl
inc
jmp
sub
call
les
pop
jns
negl
mov
jne
mov
push
in
decl
xchg
out
and
dec
mov
and
mov
adc
idiv
sahf
push
lcall
mov
and
mov
lcall
dec
subl
sahf
add
add
out
fbstp
scas
lcall
mov
lock
sti
out
push
dec
lcall
adc
rorl
clc
test
mov
mov
push
sub
out
insl
dec
jmp
lret
fisttps
dec
jne
iret
sbb
int3
call
xchg
incl
add
clc
dec
call
lahf
adc
push
pop
xchg
inc
pop
dec
cmp
xor
dec
inc
push
inc
dec
jne
xor
cmp
clc
pop
mov
inc
cmp
call
cld
pop
push
sub
mov
cld
sti
pop
lock
dec
pop
inc
fmull
shl
pop
sub
mov
xchg
push
xorb
fdiv
cs
enter
add
test
fistl
cmpsl
add
pop
testb
in
dec
std
push
sarl
inc
fidivrs
mov
jmp
dec
dec
ds
dec
insl
int3
mov
in
sti
fildl
xor
dec
jae
add
mov
test
add
ds
repz
and
inc
pop
jmp
in
mov
shl
xchg
inc
push
cmp
test
inc
mov
movl
loop
mov
add
fwait
shlb
test
inc
jne
dec
int
push
xor
mov
mulb
push
fwait
sub
mov
xor
test
and
call
idivl
out
mov
mov
push
add
add
mov
inc
dec
shlb
cmp
daa
inc
dec
loope
mov
rorb
push
or
pop
dec
idiv
xchg
xor
xor
out
pushf
incl
shrl
mov
ss
leave
shll
int3
hlt
daa
inc
fchs
dec
mov
rorl
call
dec
push
add
xchg
lcall
cmc
pop
inc
add
inc
mov
mov
hlt
add
and
dec
push
pop
jnp
aas
cltd
lock
sbb
push
sbb
and
lock
push
incl
cs
jge
imul
in
je
mov
call
fs
fs
sub
add
iret
cld
mov
jge
push
mov
and
mov
enter
lock
pop
cli
out
add
jg
pushf
push
jg
fimuls
push
rcl
inc
into
dec
movsl
cs
cld
push
test
je
inc
inc
cmpsb
dec
jge
xchg
dec
das
inc
sbb
psubsw
dec
pop
inc
cmp
pop
inc
jle
test
andl
push
inc
outsb
dec
inc
sub
imull
push
nop
aam
dec
dec
enter
xlat
inc
je
movl
dec
mov
inc
adc
popa
inc
push
dec
sub
inc
push
dec
sbb
pop
add
les
inc
in
push
cmp
push
push
push
mov
inc
jne
mov
mov
mov
mov
das
cmp
sbb
sub
pop
mov
add
and
lods
pushl
ss
jle
ds
loop
mov
out
lahf
cmp
dec
sub
mov
sub
cmp
mov
inc
jne
sub
push
cmp
add
std
rorl
jo
in
sbb
out
mov
call
add
and
jmp
je
pop
inc
or
inc
lock
iret
je
and
mov
jle
mov
decl
je
orl
sti
call
jne
jne
loop
push
cmpsl
faddl
flds
rol
jmp
aam
fcmovb
inc
jmp
dec
dec
dec
aam
jne
pop
call
add
add
push
call
lahf
and
in
mov
out
add
pushf
dec
jne
xor
pop
mov
inc
ljmp
stos
xchg
scas
add
add
pop
xchg
lds
inc
inc
jno
jne
imul
jmp
cltd
shr
or
shr
xchg
sti
mov
mov
inc
or
cmpb
jmp
lock
lock
gs
sti
test
inc
mov
outsb
add
inc
es
cmpsl
mov
es
sbb
xchg
add
mov
cmpsl
add
pop
adc
aas
mov
daa
add
imul
push
inc
movb
lea
lods
rcrb
jae
inc
jmp
sbb
les
iret
subb
add
mov
mull
add
sbb
mov
inc
fmul
lea
mov
pop
xchg
inc
jmp
mov
into
incl
jns
cs
dec
aaa
test
out
cmpb
mov
cmp
push
dec
cs
sbb
rcrb
ret
ds
shrl
xor
aaa
sub
out
bound
lcall
test
std
cmpsb
mov
out
dec
lods
cmp
jne
mov
dec
ret
rorl
jbe
cmp
aam
cmp
in
mov
rolb
mov
movl
cli
inc
hlt
cmp
incl
or
xor
repz
add
add
repz
loope
jge
or
sarb
add
sbb
ss
psubsb
mov
idiv
push
jns
call
nop
mov
out
cmpsl
ret
sbb
cmp
add
mov
lret
push
dec
or
lods
cltd
push
cmpsb
jge
inc
push
push
sbb
add
xor
inc
mov
std
inc
pushl
filds
jns
negl
or
add
lock
inc
incl
sub
cmp
fadds
push
push
xchg
xor
dec
inc
inc
jne
push
sbb
dec
jne
lcall
out
add
gs
cmp
pop
lea
incl
mov
faddl
add
mov
xorl
jmp
and
cmp
pop
mov
inc
inc
lock
xchg
ds
mov
mov
pop
pop
jmp
or
cmp
cmp
inc
std
push
adc
cmp
cmp
mov
pushf
daa
pop
cmp
inc
lds
shrl
test
mov
add
add
cmp
sbb
push
inc
daa
cmp
cmp
rcrb
xchg
and
ljmp
ljmp
daa
mull
das
dec
mov
cmp
pushf
pop
xor
dec
sbb
lods
inc
xor
mov
cli
cmp
inc
mov
je
push
xor
call
push
sbb
testl
xor
divb
je
testb
mov
call
fidivs
xor
cmp
ds
mov
or
sbb
sub
adc
cmp
lret
in
xchg
mov
inc
lea
add
add
or
cmp
or
push
ds
sub
in
jecxz
cs
je
xor
roll
cltd
push
mov
or
fcomi
inc
mov
push
jne
je
loope
jp
mov
rorb
test
add
inc
clc
dec
add
repz
add
imul
dec
imul
add
dec
lea
jne
je
lock
jnp
das
or
jl
sub
movsl
inc
ret
xor
call
add
inc
mov
lea
aaa
dec
jle
out
xchg
inc
ljmp
xor
mov
sub
pop
jmp
cmpl
cs
mov
sbb
xchg
psubsb
sarb
ljmp
divl
lods
call
fsqrt
inc
lock
addr16
aas
frstor
sub
lahf
dec
aas
mov
aaa
aas
aam
push
cs
mull
pop
cmpsb
aas
movsl
or
add
add
xchg
lea
xchg
aas
pop
lods
call
add
jno
aaa
out
aaa
outsb
mov
fbstp
jo
enter
pop
pop
rcrl
ss
mov
mov
aas
cmpsl
lea
aaa
push
adcl
aas
popl
xchg
or
jns
aaa
jg
jmp
xor
out
add
fisubrl
dec
das
fidivrs
lock
lods
add
dec
aaa
mov
sub
outsb
mov
ljmp
mov
lcall
into
aaa
jne
fcmovne
cmpsl
xchg
aaa
pushl
push
call
pop
daa
negl
ss
sbb
cmpsl
dec
push
ss
push
ss
js,pt
call
sub
mull
ficomps
cs
xor
decl
add
fucomi
stos
push
mov
xor
out
and
ss
push
test
hlt
mov
hlt
je
push
jle
call
jbe
out
mull
out
mov
dec
bnd
in
cmc
out
loopne
add
or
add
testl
or
add
repz
push
addl
cltd
repnz
rorl
jl
call
push
popa
pop
add
or
je
icebp
fdivrp
call
je
push
jl
call
lock
add
cli
mov
jno
das
divl
je
inc
sub
cmp
or
inc
mov
pcmpeqw
div
pop
add
add
das
ljmp
lock
add
lock
add
jne
xor
outsb
cmp
mov
sub
ljmp
enter
sbb
xchg
outsb
mov
and
push
call
jns
xor
addr16
or
dec
pop
pop
sbb
jle
jl
aas
xor
cmp
add
mov
or
inc
mov
pop
xor
xor
xor
sub
pop
mov
dec
subb
xor
aaa
fmuls
stos
or
fnstenv
jae
pop
scas
iret
popf
lock
xor
sub
fstl
lds
jmp
and
xor
addl
outsl
xor
testb
fwait
daa
cmp
dec
fldl
xor
inc
adc
inc
jmp
jae
jne
scas
fidivl
jne
fidivrl
call
and
out
pop
xor
loop
mov
inc
jmp
or
push
mov
cmp
dec
ds
or
cltd
das
xor
xchg
add
dec
pop
add
sbb
dec
push
inc
or
int
xor
add
and
rorl
push
mov
lret
push
fs
movsb
add
inc
ja
decb
bound
call
mov
jne
fimuls
sbb
bound
call
outsb
sti
push
std
out
aaa
lock
fwait
push
add
filds
add
add
je
and
andnps
cld
sbb
add
jne
out
je
add
cld
lock
cmp
and
jne
pop
stc
stos
outsl
xor
addr16
sub
dec
pop
dec
decl
xchg
stc
fiadds
mov
jo
push
cwtl
push
add
pop
jne
xchg
gs
add
add
nop
sub
cwtl
cmp
push
ret
xor
call
inc
push
add
iret
loopne
pop
sub
cmp
cli
inc
lock
adc
mov
push
xchg
pop
pushf
or
pop
shrb
push
scas
jnp
enter
xor
push
pushf
mov
aaa
lret
sbb
lock
add
lret
aaa
sahf
loop
movsl
shl
xor
aaa
popf
nop
push
wrmsr
sahf
stos
pop
sahf
hlt
ss
orb
das
xchg
or
jb
xlat
das
roll
adc
fmull
enter
mov
jbe
xor
rcll
cmpsl
mov
fildll
jne
mov
call
add
sub
jl
push
push
addb
xor
push
mov
call
jle
add
test
jmp
xor
out
repz
push
dec
das
imul
rcl
insb
iret
aaa
decl
es
xchg
add
je
add
add
repz
dec
adc
push
in
add
sub
mov
jns
out
jae
decb
out
sub
jno
cmp
cmc
mov
pop
hlt
faddl
decb
es
jmp
xor
es
out
divl
hlt
jne
loop
stos
data16
mov
lcall
jae
pushl
addr16
add
fcomip
jmp
je
jno
enter
add
ss
mov
mov
sub
scas
les
lahf
hlt
cmpb
mov
addr16
and
or
cli
inc
lock
outsb
call
fnsave
sub
icebp
pop
and
fsubs
lock
outsb
call
mov
inc
xor
add
pop
cmp
pop
inc
mov
mov
mov
sbb
pop
call
xor
xor
fbstp
xor
fadds
mov
mov
mov
dec
scas
stos
pop
push
scas
cmpsl
sub
inc
in
push
pushf
mov
push
xor
add
scas
mov
pop
mov
xor
nop
add
add
sbb
stos
pushf
out
cmpsl
add
loop
xor
iret
inc
add
outsb
out
daa
add
sub
pop
push
mov
imul
push
xor
or
lods
xor
adc
data16
add
das
mov
ljmp
in
sti
adcl
out
inc
jmp
add
repz
or
dec
mov
push
imul
jmp
xor
out
popf
sub
mov
lea
and
mov
jmp
or
addr16
mov
sub
icebp
jmp
enter
push
ret
sub
push
call
rol
jae
add
out
sbb
dec
cmc
dec
push
mov
mov
fs
loope
pop
mov
add
pop
mov
jmp
inc
shl
call
add
inc
sbbb
xor
add
decl
lods
cmp
test
clc
push
divl
std
lcall
and
aam
out
pop
clc
push
add
divl
test
push
nop
pushf
fisubrl
filds
lcall
test
pop
enter
iret
pop
dec
cmp
and
cmp
mov
xor
xlat
in
mov
mov
mov
xorl
mov
stos
out
lods
add
jmp
add
das
fisubrl
add
add
pop
add
lods
dec
xor
lock
popf
lcall
pop
jle
sbb
jg
add
xor
mov
sub
or
sbb
sti
test
in
sbb
adc
inc
pop
xorl
push
insb
xchg
inc
and
sub
jne
xor
sub
add
push
jecxz
jg
push
xor
add
push
xor
cli
add
mov
push
jp
and
das
push
popf
call
add
fnstenv
aas
sub
mov
das
sub
adc
das
mov
push
adc
fidivs
mov
daa
lcall
push
push
inc
daa
mov
decl
leave
jge
aaa
divl
sub
jmp
cmpsb
movd
add
jns
testl
cmp
fbld
xor
adc
je
jb
loopne
pop
sub
add
xor
dec
div
push
xlat
out
shll
call
out
mov
pusha
xchg
daa
jmp
fcoms
or
lea
jmp
add
mov
lock
incl
add
lods
jmp
aam
push
cmc
cmpb
and
add
inc
or
test
add
or
decl
sbb
orb
out
jne
add
gs
push
pop
pop
call
inc
sahf
out
push
hlt
jne
add
lahf
push
hlt
mov
push
xor
pop
add
or
fadds
pop
sub
jl
insl
sub
out
jl
pop
fcomps
fbstp
sub
inc
cmp
push
inc
adc
scas
mov
sbb
sub
ljmp
inc
addr16
sub
inc
adc
mov
push
cld
sub
dec
into
popa
incl
add
jbe
inc
sbb
call
aas
push
pushf
dec
aas
and
sub
pop
mov
pop
and
mov
sub
and
lock
and
xor
and
cmpsl
xchg
and
sub
pop
nop
ds
jbe
cmp
pop
jmp
jp
push
movsb
mov
cltd
sti
and
add
mov
jg
fmull
in
add
mov
cmpsl
add
or
add
add
pusha
in
or
pop
or
fisttpl
in
mov
hlt
mov
gs
xor
sub
xchg
and
call
and
fisttpl
hlt
push
or
add
sub
in
push
add
shrb
mov
decl
sub
lret
and
repz
out
ja
and
loope
sub
es
cs
dec
sbb
pushf
jne
sti
in
add
out
enter
push
mov
mov
cld
jae
push
dec
push
pop
call
nop
inc
sti
push
roll
cmp
or
jne
add
call
les
jne
in
je
jno
popf
ljmp
roll
mov
pop
loop
idivl
in
mov
ss
jne
in
je
inc
out
outsb
add
repnz
mov
inc
clc
cltd
push
add
inc
repz
test
imul
das
push
insl
stos
notl
sar
lds
sub
or
outsl
lock
mov
add
mov
das
add
pop
ret
lcall
mov
sub
mov
fs
call
out
aam
jns
xor
out
sbb
nop
nop
sub
iret
lcall
incl
test
or
cmpsb
jle
cmpsl
shrb
push
aaa
cmpb
xor
mov
loopne
jg
mul
stos
push
dec
sub
add
sbb
push
sahf
pop
test
push
outsl
inc
sbb
sub
in
gs
sub
shll
das
and
cwtl
jp
ret
pop
and
test
rorl
jne
mov
imull
daa
add
pop
cltd
xor
and
gs
and
test
jbe
dec
pop
add
vmovaps
push
sub
add
rorl
xchg
test
add
enter
dec
test
jmp
sti
pop
decl
repz
sbb
out
cvtps2pd
pop
call
cmc
jne
pop
call
cltd
pop
shl
cmp
xlat
pop
loopne
iret
pop
lcall
lcall
add
aas
cmp
cvtps2pd
jle
and
hlt
lret
daa
lds
and
xor
sbb
data16
cltd
pop
push
pop
cmp
xlat
pop
aam
iret
pop
incl
dec
sbb
test
cld
out
inc
add
mov
out
push
ret
out
mov
dec
call
incl
fcomi
inc
call
jl
idiv
inc
sti
xchg
add
es
jmp
addr16
incl
mov
ds
jne
add
incb
in
jmp
sahf
incl
inc
clc
jo
incl
je
inc
icebp
insb
add
das
rorb
sbb
cltd
push
xchg
out
mov
ljmp
daa
push
xor
mov
es
pop
inc
std
add
dec
add
add
das
add
pop
and
jmp
dec
and
push
jnp
add
lock
jecxz
sbb
daa
test
xor
inc
ret
inc
sub
xor
cmpl
sbb
incl
push
insl
adc
xor
ret
xchg
mov
pop
sbb
add
inc
mov
ljmp
pop
outsl
sbb
call
and
lock
cmpsl
add
imul
das
js,pn
daa
sbb
pop
add
and
sub
inc
andb
mov
scas
push
sbb
lock
sbbb
in
push
xor
fmull
in
and
add
add
sub
sti
push
and
aam
and
jg
sbb
mov
dec
mov
adc
push
es
adc
xchg
pop
mov
pushf
pop
and
jo
sbb
jb
adc
fcomi
popf
out
shr
mov
stc
repz
pop
bound
or
push
rorb
add
mov
ret
add
mov
mov
mov
call
xchg
jns
push
mov
call
incl
mov
adcl
push
push
jge
mov
cmpl
adc
adc
je
sub
pop
jle
enter
mov
test
pop
lret
add
or
lds
sub
xchg
dec
pop
leave
or
decl
add
push
adc
adc
jae
or
or
pop
pop
pop
pop
inc
rorl
loop
jne
js
rcrb
or
xchg
push
jae
inc
mov
lahf
ret
xchg
or
movsb
jnp
or
insl
arpl
push
xchg
cmp
add
shll
add
shll
jmp
cmp
add
add
lods
mov
dec
jo
decl
mov
insl
xchg
adc
lock
add
dec
bound
or
das
add
push
movsl
xchg
pop
jnp
psllq
fbld
rolb
sysret
dec
and
sbb
enter
iret
sbb
mov
jns
call
and
push
jmp
add
add
mov
mov
add
fmuls
or
fimuls
lds
xchg
mov
push
push
clc
leave
loope
mov
sbb
call
in
jae
inc
sub
mov
push
add
push
aas
and
push
ror
mov
jmp
jmp
pushl
mov
test
push
cmp
sbb
or
imul
sti
mov
adc
sbb
adc
mov
ret
enter
push
xlat
add
cmp
or
xchg
call
mov
mov
pop
pop
ljmp
inc
cmc
sbbb
in
xchg
pop
add
sti
insb
sub
push
add
imul
add
decb
test
jge
cld
out
adc
decb
jno
lcall
lcall
jle
call
and
pop
pop
rol
pop
add
in
xorl
adc
jle
call
push
jle
jl
call
incl
add
jne
jmp
std
ss
jne
clc
je
icebp
dec
call
mov
mov
sbb
mov
aas
cmpb
xchg
adc
pop
sub
js
insl
push
lcall
push
jne
xchg
jne
stc
sti
cmp
popf
sbb
jne
mov
xchg
xchg
mov
ret
mov
or
add
pop
push
jne
mov
xchg
outsl
fstpl
pop
dec
add
mov
jns
push
jne
add
pop
dec
cmc
sbb
aaa
cltd
mov
jns
push
jne
and
pop
or
scas
push
pop
push
jb
out
jmp
xor
call
dec
add
adc
add
fwait
loopne
pop
jge
sbb
inc
incl
mov
pop
ret
add
push
jb
add
adc
push
jmp
add
push
fs
mov
mov
sub
ss
pop
push
popf
loopne
cld
loope
dec
adc
pop
pop
addl
in
mov
add
jle
call
jo
and
out
lret
jmp
repz
add
and
cmp
add
sbb
cmp
pop
call
adc
sbb
adc
in
sbb
mov
repz
mov
mov
jmp
repz
add
repz
movsb
out
add
repz
inc
pop
repz
add
lretw
jle
repz
jbe
negl
jle
call
push
and
xchg
and
je
lcall
add
add
je
push
jbe
jmp
jmp
jmp
jne
out
je
mov
xchg
decl
ficomps
hlt
jno
cwtl
ljmp
je
or
or
mov
lock
je
mov
pushl
fisttps
lock
fwait
xchg
incl
add
pop
pushl
fbstp
xchg
out
out
jne
stc
sub
jmp
or
jnp
ret
mov
add
ds
xor
pop
sbb
jmp
movups
pop
add
pop
add
pop
or
xlat
repz
test
sbb
scas
jecxz
add
pop
add
and
cltd
sbb
add
cwtl
and
add
and
or
pop
add
lock
ret
mov
jo
jne
push
adc
arpl
push
xchg
push
jmp
add
push
lahf
dec
xor
call
xchg
testb
sbb
shlb
into
xchg
call
add
xor
lret
mov
add
add
fwait
lock
jne
sbb
test
repz
or
andl
adc
or
test
pop
icebp
fwait
out
xchg
adc
sti
adc
mov
stc
adc
xchg
sti
push
scas
adc
adc
repz
push
add
repz
sub
push
lea
adc
add
call
adc
into
insb
xchg
imul
jle
mov
repz
add
sub
jmp
jmp
jne
xchg
insb
pop
jmp
xchg
call
mov
adc
in
pop
add
repz
xchg
and
push
dec
data16
add
push
notl
addl
inc
push
notl
addb
add
aaa
repnz
call
pop
call
nop
push
out
lea
ljmp
decb
and
jne
mov
jge
leave
jg
adcl
jae
cmpl
jg
and
pushl
bound
cmp
or
jne
jecxz
mov
or
lods
sbb
rorb
lock
call
add
inc
inc
add
sti
fstl
inc
lock
decl
inc
je
jbe
add
push
jne
add
pop
jne
adc
call
and
call
pushl
sub
inc
push
lcall
sub
push
push
lcall
sub
gs
cmp
jne
dec
jae
sbb
add
and
or
mull
mov
decb
push
jmp
aas
jl
faddl
mov
nop
push
outsl
add
nop
es
pop
rcrb
xchg
cs
dec
push
pushf
pop
pop
sbb
aas
add
or
add
outsl
or
adc
popl
fldenv
dec
push
pop
or
xchg
lock
adc
jecxz
adc
add
mov
add
lods
push
scas
adc
or
jmp
inc
and
imul
inc
or
jmp
fildl
data16
rcl
sahf
mov
aam
push
popa
arpl
or
sub
sbb
test
or
add
jbe
ret
or
stos
je
imulb
ret
or
fsubp
push
push
dec
in
push
mov
inc
mov
cmpl
dec
scas
in
add
repz
add
andl
gs
jmp
mov
xchg
ret
decb
push
inc
add
mov
add
add
pushl
loopne
mov
add
xor
incb
jmp
pop
xchg
add
mov
repnz
push
xchg
mov
clc
push
scas
insl
sahf
insl
pop
call
mov
xchg
decl
daa
mov
scas
jl
xcrypt-ecb
cmpsl
lret
lahf
mov
ret
add
add
mov
test
jle
jmp
or
pop
les
cmpsb
adc
shrb
clc
lds
scas
gs
adc
das
dec
adc
or
inc
pcmpeqw
pop
mov
mov
add
out
jae
out
sbb
dec
adc
mov
add
dec
test
add
addb
adc
or
jle
sti
icebp
inc
and
imul
stc
pop
jmp
lds
aam
and
outsl
andb
inc
fwait
sbb
test
adc
cltd
sbb
jae
adc
sub
aaa
or
adc
pop
pop
movsl
pop
or
push
or
adc
push
jmp
add
add
fists
notl
jmp
out
or
add
add
jnp
inc
or
mov
lds
sbb
sub
push
rorl
push
or
daa
je
xchg
or
push
lods
incl
jl
jne
aam
mov
decl
les
jo
push
add
mov
and
loope
call
cwtl
or
push
and
insb
les
arpl
xor
or
out
nop
jmp
in
xor
mov
incb
pop
mov
call
jge
call
testl
ja
call
or
push
test
cmc
call
mov
push
mul
sub
add
mov
xchg
mov
enter
push
mov
sbbb
inc
push
dec
decl
call
loopne
pop
add
or
imul
add
inc
xchg
lock
mov
lret
xchg
dec
ud0
push
jne
inc
pop
mov
repnz
out
jo
incl
add
push
fwait
push
fcmovnu
add
inc
decl
push
sbb
data16
testl
dec
push
jne
mov
cld
push
enter
rorb
push
inc
movsl
cmp
pop
add
in
fildl
add
sti
mov
les
mov
cwtl
pop
or
jnp
testl
cltd
out
jmp
add
add
sub
pop
jmp
jne
push
loop
inc
sub
mov
jl,pt
scas
adc
fcomp
inc
jmp
sbb
jbe
cwtl
pop
pop
push
jg
mov
ja
pop
cwtl
imul
sti
dec
lret
js
pop
shrb
pop
lock
jb
jno
inc
push
inc
push
pop
enter
cwtl
out
xchg
call
loop
add
adc
je
call
add
add
int
or
push
add
repz
cmc
in
or
imul
dec
hlt
cmp
repz
addr16
cmp
out
lods
dec
hlt
push
or
hlt
push
add
addr16
adc
inc
nop
iret
outsl
cli
imulb
push
push
push
push
fwait
pop
jmp
out
pop
cmc
add
call
rep
mov
add
add
add
cs
jnp
adc
fwait
push
stos
mov
push
cmc
add
incb
out
or
or
out
mov
adc
call
incl
adcl
sbb
jle
or
add
out
mov
incl
jle
addr16
outsb
adc
inc
jno
inc
decl
adc
jne
add
pop
add
or
ret
push
mov
adc
lea
std
jne
and
pusha
pop
or
rcrb
sbb
inc
roll
add
lock
inc
inc
and
add
lock
add
xchg
add
push
repz
in
or
pop
or
pop
ficompl
mov
mov
add
shr
add
pop
sub
inc
add
lock
bswap
jge
ljmp
jb
negl
insl
jno
jbe
lock
or
cmpsb
pop
or
or
pushf
ljmp
adc
addr16
or
inc
sub
cmp
incl
sbb
aas
xor
jl
push
es
xchg
cmpsb
mov
imul
push
or
std
or
out
aas
jb
add
inc
test
add
add
lock
fwait
xor
add
mov
into
nop
out
out
pusha
dec
iret
add
lock
jbe
and
add
mov
sahf
nop
out
out
push
add
icebp
inc
fwait
gs
mov
outsb
nop
out
out
rorb
add
addb
or
out
cmpsl
je
add
push
inc
cli
pushl
ljmp
add
add
add
push
cli
mov
call
push
xor
call
imulb
out
dec
add
mov
adc
xor
repz
add
jmp
mov
pop
add
mov
mov
addr16
mov
add
inc
add
adc
ds
jmp
mov
hlt
jnp
fs
add
add
xor
push
add
jnp
add
mov
push
decl
ljmp
leave
aas
add
add
cltd
pcmpeqw
loope
cld
incl
push
jne
push
nop
push
call
mov
sub
cmp
out
sub
nop
aaa
push
fldenv
xchg
push
push
add
add
add
inc
pushf
pop
cmp
or
mov
out
lret
pop
icebp
add
out
fwait
imul
push
cmp
out
lock
pop
decl
jb
dec
aaa
inc
or
lcall
lock
jecxz
movsl
cmc
sbb
and
mov
fwait
cli
out
or
lcall
add
fwait
sbb
cld
out
loopne
fbld
incl
add
sbb
mov
add
leave
mov
in
cli
les
in
add
lock
jmp
out
add
repnz
add
outsl
lret
push
faddl
into
ljmp
iret
stos
add
outsb
jecxz
mov
sarl
inc
jmp
pop
sti
pushf
mov
add
test
add
sti
jnp
push
sbb
enter
shll
xor
push
cld
ficoms
enter
int3
pop
pop
push
add
xor
mov
add
ret
hlt
cli
addr16
push
in
xlat
les
inc
jmp
lock
add
in
lds
xor
push
add
dec
mov
mov
shl
mov
add
sub
sbb
inc
jmp
sub
andl
lock
test
push
add
repz
push
fisttps
inc
icebp
call
jnp
jmp
hlt
jae
adc
leave
stos
mov
jns
push
xor
sub
push
jne
mov
verw
jnp
add
add
xchg
add
test
add
rol
std
dec
dec
jle
or
or
pop
dec
loopne
pop
and
mov
add
test
inc
push
into
lea
push
add
stos
pop
leave
sub
add
decb
inc
out
inc
flds
je
push
mov
inc
lock
add
add
dec
mov
cli
jmp
ret
or
call
mov
add
ja
call
pop
add
jnp
jbe
pusha
pop
xchg
pop
ret
push
xchg
add
jne
inc
fadds
lea
or
inc
lock
or
sbb
add
stos
ss
or
xchg
ja
idivl
incb
add
add
jae
or
pop
adc
inc
out
adc
jae
or
dec
cmpsl
lds
lock
cmp
mov
in
dec
cwtl
lea
sti
sti
pop
test
jno
jmp
lods
insl
add
faddl
sub
clc
add
std
add
push
inc
leave
inc
sti
inc
wrmsr
jno
int3
xor
jmp
add
add
out
movsb
fwait
push
sti
loope
test
sbbl
cmp
add
push
sub
insb
stos
out
lock
add
pop
adc
adc
inc
xor
push
testl
push
addb
push
cli
addr16
xor
xchg
or
hlt
int3
cmp
jbe
adc
mov
test
cmc
push
add
cld
add
or
inc
jmp
dec
data16
push
push
add
repz
insb
add
test
out
repnz
repnz
test
in
push
add
repz
add
xrelease
jmp
repz
push
bound
inc
cmp
and
sub
clc
je
icebp
jae
add
ljmp
imul
inc
in
mov
or
xor
fadds
add
push
aas
enter
roll
add
and
inc
pop
push
jne
rcl
add
shlb
aas
cwtl
add
add
and
inc
sbb
jne
mov
pop
add
or
je
insl
sub
sti
inc
add
aas
inc
or
jne
icebp
popf
pop
add
jmp
push
shl
add
add
in
push
push
mov
and
jne
jne
clc
dec
or
pushl
dec
decb
ds
inc
jge
decl
fs
outsb
add
cli
out
pusha
add
push
shl
dec
pop
add
inc
in
jae
ljmp
out
jbe
cwtl
in
add
pop
and
or
decb
adc
add
pop
xchg
or
in
jbe
push
jb
gs
add
gs
aad
pop
psrlw
ja
aad
cmp
rorb
test
add
mov
sbb
sar
mull
decl
sbb
inc
lock
int
adc
push
lock
fmull
push
imul
mov
push
inc
sbb
add
cltd
push
jmp
add
dec
inc
adc
fdivl
xchg
or
jmp
ljmp
jno
lcall
loopne
ret
xor
lret
imul
stos
jecxz
cmp
fiadds
test
mov
add
in
push
xchg
mov
inc
cld
add
out
clc
pop
outsb
cmc
or
repz
fcoml
je
pop
jo
push
inc
add
fidivs
add
repz
dec
jp
jg
repz
add
push
jg
cmp
jnp
adcl
sub
push
jmp
mov
jmp
hlt
jae
xor
adc
or
add
mov
xlat
jb
xchg
rorb
add
or
mov
mov
add
xchg
inc
mov
or
add
aaa
sarb
movsb
ss
and
movl
mov
add
or
hlt
std
call
loope
je
popa
popf
sub
sahf
add
test
in
mov
filds
or
add
fldl
xor
fucomp
add
fldl
addl
jne
data16
scas
and
add
fldl
jmp
jae
in
add
lods
inc
call
mov
add
lock
jle
repz
or
dec
ljmp
lock
pop
loop
punpckhwd
fcmovb
lods
push
push
add
fucomp
jbe
fldl
addl
popf
inc
push
pop
mov
lock
jo
sbb
xchg
mov
ja
les
adc
dec
add
sub
call
inc
mov
lret
and
mov
call
add
push
jmp
add
push
cmpsb
jno
fdivrp
stc
xchg
pop
inc
mov
adc
incb
int3
data16
in
pop
icebp
insl
sti
add
push
ss
inc
lock
fcoml
adc
inc
lock
push
lock
cltd
imul
add
add
push
jmp
jmp
and
adc
sub
test
icebp
je
int3
pushf
push
jmp
push
pop
sub
mov
pop
add
inc
and
sub
icebp
je
fwait
jo
jmp
loop
inc
jmp
add
fwait
push
jmp
mov
out
int3
push
add
xor
jbe
mov
add
sbb
push
insb
dec
mov
add
push
add
mov
jae
mov
cli
inc
addb
outsb
rolb
and
jno,pn
add
aaa
in
jae
add
jae
popa
or
aad
incl
add
add
icebp
dec
lock
in
mov
jne
fucom
test
std
jne
loop
mov
std
jne
loop
mov
std
jne
loop
mov
std
jne
jecxz
mov
out
std
jne
jecxz
mov
out
jmp
push
lock
lods
inc
push
add
filds
xor
and
sbb
push
add
hlt
ret
add
and
call
pop
in
inc
lock
int3
enter
lock
je
mov
add
mov
data16
lods
in
ret
mov
mov
push
cld
mov
cltd
divl
pop
mov
test
in
mov
clc
out
jbe
scas
push
xor
testl
sub
add
xor
scas
inc
clc
es
jmp
por
mov
cs
add
push
push
outsb
notb
add
clc
pop
sbb
mov
out
in
hlt
pop
xchg
xor
jno
fiadds
pop
lock
add
andl
cwtl
adc
jle
imul
out
lea
outsl
mov
nop
lods
les
add
mov
test
add
repz
repz
fs
push
shrl
jmp
repz
mov
call
mov
push
mov
test
fisubs
push
or
in
push
add
and
call
add
add
jae
inc
sub
inc
jmp
out
cmp
jmp
repnz
ret
std
sti
push
push
push
jno
mov
into
pop
push
jmp
pushl
cmc
jae
mov
cld
ljmp
hlt
out
or
add
movsl
repz
jmp
ds
or
mov
push
std
call
add
loop
jb
jno
sub
hlt
jae
mov
repz
lahf
repz
push
mov
mov
scas
push
pushl
bnd
stc
repz
mov
idiv
dec
xchg
std
mov
dec
idiv
outsl
xchg
push
lock
repnz
push
mov
idiv
dec
loopne
sbbb
cmp
dec
inc
push
daa
push
std
pop
sub
mov
add
mov
pusha
ss
lock
mov
or
out
stos
add
inc
xchg
mov
in
repz
pop
dec
add
xchg
pop
or
push
add
test
push
inc
add
ja
xchg
imul
or
push
sahf
outsb
loopne
sbb
shr
or
ret
xor
fistps
jle
in
arpl
add
in
insl
hlt
mov
fwait
mov
in
pop
jmp
push
jmp
jle
in
inc
hlt
push
mov
cmc
push
in
inc
or
push
jmp
hlt
fmulp
jge
jmp
sar
mov
fucomi
jnp
fbstp
hlt
pop
sti
cmc
insl
clc
fisubs
jmp
jmp
xor
lret
xchg
cwtl
or
repz
ljmp
mov
add
or
call
repnz
add
jmp
inc
jnp
jle
stos
je
stos
cmp
sub
jmp
cmc
sbb
pop
inc
loopne
ret
repz
fisttpll
mov
jle
xor
repz
xor
add
and
mov
lods
iret
bound
fpatan
push
call
pusha
cmp
pop
add
int3
loop
jae
jmp
mov
add
fisubl
push
push
add
int3
mul
mov
add
adcl
xchg
jbe
xorb
je
add
call
or
jb
lcall
callw
push
add
cmp
dec
add
push
cmp
outsb
into
cmp
push
or
pop
pushl
add
dec
add
aaa
inc
add
add
xor
jne
int3
mov
testl
lock
add
jae
pop
add
psllw
enter
fucomi
je
lock
repnz
fidivl
add
icebp
icebp
xchg
or
add
jne
out
daa
cmp
or
mov
pop
sub
sbb
incb
sbb
or
testl
mov
out
jbe
fildll
pop
neg
jno
icebp
out
pop
mov
pop
jb
jb
shl
and
jbe
fistpll
and
add
dec
testl
jb
fldt
popf
lock
sbb
add
rclb
outsb
call
mov
push
pop
mov
sub
out
or
ficoms
es
cwtl
lock
push
sbb
call
sub
fcmovnb
sbbb
out
jmp
cmp
jns
out
jmp
jmp
out
inc
pop
lcall
mov
test
add
movsb
out
jmp
lahf
add
jmp
sbb
push
jo
hlt
cmp
clc
xchg
jmp
fistps
test
stos
cmp
sub
out
stc
sbb
pop
pop
call
mov
lods
aaa
call
adc
mov
mov
out
icebp
sbb
lcall
je
les
inc
add
add
rcrl
imul
incl
xchg
dec
cmc
std
leave
pop
call
jg
incl
push
dec
pop
or
or
cld
movl
xor
cmc
std
push
add
add
pop
ret
pop
or
dec
add
xor
inc
jecxz
inc
sbb
xor
icebp
dec
add
push
loop
test
add
hlt
std
push
xor
cmp
or
aas
cwtl
or
lock
add
fs
idiv
fcoml
fistpll
add
fcomp
mov
in
enter
push
imul
sbb
pop
and
lret
jns
lock
xchg
clc
mov
push
das
add
add
pop
stos
test
aas
lcall
loopne
scas
addr16
inc
add
cmp
or
xor
orl
fldl
icebp
out
add
gs
insb
cmc
in
in
push
pop
or
add
out
es
lock
xchg
hlt
or
and
scas
inc
lock
rcl
inc
jmp
icebp
pushf
in
pop
lahf
and
incb
outsb
loopne
add
xor
inc
add
push
imul
fs
jle
fmull
pop
mov
loop
jbe
out
cltd
insb
aaa
in
shl
mov
sbb
dec
pop
lock
in
test
push
ja
jecxz
xor
out
adc
add
repz
test
int
mov
repz
ds
repz
push
addl
add
and
dec
push
aas
sub
jecxz
mov
inc
add
and
call
push
and
jmp
in
outsb
or
mov
push
xchg
loope
call
je
fdivr
jle
push
call
outsb
shl
fsubrl
jmp
ficomps
in
sub
push
push
bound
xchg
add
lock
jmp
pop
push
push
or
mov
incl
add
cld
int3
sbb
inc
leave
push
add
leave
pop
test
imul
std
push
popa
loop
dec
mov
push
push
xor
cmp
fsub
dec
add
mov
in
std
push
add
inc
pop
or
or
push
decl
enter
int3
aam
inc
xor
add
add
cmp
std
jne
out
les
hlt
add
push
test
add
ljmp
cmp
dec
sub
imul
add
lock
idivb
in
add
lock
dec
lock
pop
mov
cs
jo
inc
add
xlat
daa
inc
lock
add
std
out
pop
insb
test
addr16
inc
add
add
outsl
sub
pop
sti
ds
pop
add
out
cmp
out
inc
xor
jmp
ljmp
jmp
jmp
xchg
cmp
dec
imul
shr
jmp
sti
xlat
in
call
pop
pop
xchg
xchg
push
inc
jmp
add
pop
rcrl
pop
pop
lock
add
or
jmp
sub
pop
sbb
add
sarl
lods
fnclex
xchg
mov
inc
jmp
add
sbb
outsl
jae
pushl
mov
add
dec
mov
add
mov
and
xor
movsl
jmp
stos
lds
jmp
xchg
fistl
add
sub
pop
or
das
push
cmp
xor
pusha
insl
loopne
test
in
push
out
sub
ds
pushl
out
mov
jb
fisubl
sub
mov
testl
add
xlat
aas
or
push
call
adc
jb
addr16
dec
push
xor
sbb
pushl
mov
out
sahf
in
jmp
sbb
ds
push
cli
inc
std
sbb
mov
lret
je
pop
inc
mov
jne
in
or
clc
jl
mov
leave
dec
fdivrp
push
adc
push
push
inc
sub
mov
in
mov
mov
loop
stc
daa
lock
outsb
inc
fdivrs
inc
add
lock
fildl
out
add
xor
add
pop
mov
movsl
addr16
inc
add
je
testl
add
jo
add
cmp
dec
or
icebp
xchg
std
je
fsubrl
mov
sti
out
imul
inc
inc
mov
mov
pop
sub
sbb
out
sbb
incb
add
call
push
lock
jmp
add
fisttpll
push
dec
movsl
jo
ss
in
cs
and
sar
movntq
popw
fldl
cld
fdivl
in
into
sub
lock
jb
sbb
lock
in
monitor
dec
faddl
add
jmp
pop
add
out
test
sbb
inc
lock
jmp
in
fcoml
xchg
fstpt
in
leave
in
repz
adc
jo
sahf
push
call
pusha
push
repz
adc
inc
inc
jmp
in
xchg
mov
jmp
mov
add
xchg
inc
inc
jmp
jns
add
int3
push
cld
es
psubsb
fdivr
and
lock
imulb
es
cld
cltd
mov
push
hlt
xor
daa
leave
fimull
add
call
jae
mov
std
jb
imul
dec
pop
pop
nop
fsub
out
add
idiv
push
xchg
add
add
mov
dec
cld
push
cmpsb
cmp
push
mov
adc
pop
das
test
lods
sub
imul
lret
ljmp
push
xor
leave
insb
add
insl
dec
add
dec
out
cld
icebp
mov
rclb
pop
mov
lock
or
inc
jecxz
ja
adc
xchg
and
test
add
in
push
sbb
pop
incl
push
adc
fcomi
mov
push
loop
xor
je
cmp
sbb
pop
incl
dec
pop
or
cmp
lock
xor
gs
je
dec
js
and
je
clc
push
adc
jp
out
jbe
test
push
out
xorb
sbb
insb
add
xor
add
fmul
loope
push
loope
insb
push
shl
ss
hlt
fnstenv
or
repnz
loope
insb
jmp
add
aas
aad
loope
insb
jle
movsb
testb
lcall
enter
loope
imul
add
shll
flds
lock
jmp
loope
pop
jmp
loopne
fcomps
mov
add
popa
testb
xchg
aam
loopne
mov
imul
test
mov
push
adc
push
or
push
in
insb
add
push
sbb
fsin
jmp
repz
sbbl
xchg
repz
test
repnz
add
adc
incb
mov
lea
pop
ret
out
sbb
repz
test
add
cmpsl
inc
insb
aas
aad
ds
out
ja
test
test
mov
fcmovnu
dec
jmp
adc
test
aad
std
lcall
pop
aas
inc
mov
std
push
mov
mov
decl
add
stc
ljmp
in
cmpl
or
add
dec
add
jmp
ljmp
lcall
ljmp
mov
lea
push
ret
or
mov
push
cmp
fdivp
push
mov
inc
mov
inc
lock
rolb
fmull
xlat
mov
cld
sar
lahf
in
adc
mov
cli
test
sar
ja
in
add
lock
sbb
adc
movsl
enter
lods
xchg
jmp
jne
mov
jno
decb
das
push
cwtl
jmp
pop
fsubp
cmp
and
jmp
xor
adc
lcall
sbb
or
fnsave
xor
sub
into
stos
lahf
mov
cmp
add
add
add
test
ficomps
in
cld
mov
xchg
cld
int
cmp
outsb
sbb
cmp
mov
fucomp
lds
jmp
fsubrl
jno
push
mov
call
push
mov
faddl
cmp
mov
subl
aam
xor
pop
add
add
inc
ljmp
mov
adc
add
test
pop
insb
insb
rcl
decb
in
push
add
js
idiv
aad
fldt
sti
out
mov
dec
je
aam
fisubs
test
add
jmp
repz
cmpsb
sub
adc
cmpsb
out
adc
push
add
insb
inc
sar
jbe
in
ljmp
add
mull
aad
sti
and
notl
aad
mov
sbb
push
in
les
mov
jle
push
or
mov
jns
add
mov
or
adc
pop
dec
mov
decl
mov
jmp
scas
dec
lea
cld
pushl
sbb
cmpsb
jne
cmpsb
scas
std
push
xor
add
jle
cld
scas
std
nop
xor
sub
push
call
mov
push
nop
xchg
mov
imul
imul
mov
dec
out
or
push
or
cmp
xor
cmp
loopne
or
push
or
roll
mov
sub
xor
call
add
in
lret
cmpsb
mov
or
call
sub
aam
pop
fcoml
loop
sub
ljmp
out
enter
lock
inc
fadd
ja
inc
lock
fsubs
fildll
inc
and
flds
push
sbb
push
ss
mov
pop
je
test
adc
add
ss
jmp
inc
enter
rcr
pop
lahf
rcrl
rolb
mov
push
sub
rcrl
mov
or
fsqrt
in
jg
push
jmp
test
ret
insb
test
add
rcrl
or
es
mov
test
jo
pusha
sar
sti
out
addl
aam
addb
xor
jmp
call
je
outsb
dec
mov
jmp
arpl
jmp
enter
xor
or
inc
adc
jb
je
adc
aaa
decl
jmp
push
call
je
dec
pop
mov
ljmp
cmpsb
sub
xchg
test
jmp
add
iret
dec
incl
outsb
scas
jae
sbbl
leave
ret
push
mov
adc
push
xor
aas
inc
fldenv
push
pop
add
add
movl
add
mov
clc
push
incb
decl
jnp
add
add
test
inc
aam
mov
add
adc
incl
add
movl
nop
inc
int3
pop
add
add
adc
inc
int3
lock
push
daa
rcr
inc
loope
rcrb
dec
dec
jae
scas
incl
sahf
add
gs
loopne,pn
or
loopne
add
lret
sbb
enter
add
adc
je
neg
cld
add
lahf
int
je
or
inc
lock
or
mov
add
mov
icebp
in
aad
call
mov
je
pop
cmpsb
xor
mov
out
ret
mov
mov
jmp
dec
mov
jmp
xchg
jns
test
or
iret
les
fs
lock
cmp
add
adc
add
push
fidivrs
push
jmp
sub
pop
jmp
add
mov
xchg
xlat
inc
jmp
add
push
es
test
jmp
fdivl
call
xor
inc
shll
push
shlb
lods
cld
mov
or
repz
adcl
or
jmp
in
andb
add
repz
mov
pop
fiadds
jb
int
icebp
je
lock
ss
lods
scas
fs
xor
call
sbb
mov
xchg
sbb
jmp
out
call
mov
call
outsb
inc
loopne
or
lea
cmp
cld
test
jmp
add
jnp
dec
cmp
mov
add
push
enter
cmp
std
jne
mov
or
push
add
mov
push
stc
xchg
mov
jne
loopne
inc
sbb
pop
incl
or
cmp
xor
jne
push
cmp
sub
adc
ret
push
mov
xchg
clc
jae
push
idivb
call
and
ds
cltd
pop
jne
add
and
mov
lock
add
test
jne
push
pop
enter
lock
lods
aas
mov
fimull
in
cmpsb
inc
inc
lock
add
leave
or
lods
test
add
fstpl
lea
sub
pop
les
inc
repnz
jne
xor
incb
shll
push
sti
mov
add
clc
rclb
clc
pop
or
leave
push
or
fsts
jg
pop
cld
sti
pop
shrl
stos
pop
lock
jb
mov
cmp
shr
lock
jmp
enter
xchg
or
std
fcmovb
xor
mov
mov
jle
cli
pop
add
sbb
jmp
jle
add
sub
fistl
mov
pop
cmc
xchg
in
push
cmpl
cmpsl
xorl
mov
sti
or
cmp
xchg
lock
cld
cmp
leave
add
call
pop
push
add
shl
cmp
ret
add
pop
push
mov
add
add
inc
clc
xchg
rolb
add
je
mov
aad
jp
pop
sbb
add
repz
add
repz
add
dec
ss
sti
mov
adc
das
sti
mov
ljmp
xchg
dec
dec
lock
inc
mov
add
xor
call
add
popf
inc
add
jno
add
pop
sbb
nop
ret
bnd
scas
mov
or
adc
push
subl
inc
cld
icebp
add
add
lods
push
inc
push
sub
and
add
pop
lds
data16
add
call
push
inc
lock
add
push
lock
mov
lock
xor
sub
fldl
call
jns
call
add
rcr
mov
add
loopne
clc
inc
mov
int
sub
inc
lock
adc
dec
pop
hlt
sbb
inc
add
pop
enter
repnz
add
jecxz
out
jb
add
incb
add
pop
pop
xor
incl
fmull
pop
jmp
into
sbb
adcl
adc
mov
negb
cs
inc
xor
out
push
scas
push
inc
lock
push
jmp
jmp
pop
cld
cmovs
fldt
scas
into
push
lds
int3
es
into
in
rolb
push
shufps
add
jmp
pop
in
sbb
push
cmp
xor
lds
into
cld
loop
add
jo
fldt
mov
in
push
cmp
inc
jmp
mov
inc
sbb
rcrb
adc
adc
in
inc
jmp
and
inc
loopne
inc
mov
add
add
push
subl
or
jmp
sbb
mov
sub
push
push
aas
lods
dec
je
les
test
repz
sbb
les
jmp
imul
std
incl
mov
jnp
cltd
pop
outsl
push
push
pop
or
push
arpl
push
pop
loopne
cld
mov
std
incl
add
jae
jne
loopne
outsl
inc
sar
jne
shll
xor
pushl
shll
xchg
cld
ret
not
std
decl
std
jne
shll
jno
outsb
jmp
jnp
sbb
add
add
aas
inc
int3
xchg
pushl
outsb
inc
shr
or
movl
lret
pop
dec
int3
cmp
std
lret
cmp
add
in
lret
sbb
sbb
add
fistpl
add
fistl
loop
lret
leave
fisttpl
loop
lret
int
add
int3
lret
mov
lret
xchg
fcomi
mov
jns
ljmp
fnclex
orl
enter
push
jnp
push
test
add
xchg
stos
daa
ret
into
cld
and
xor
push
pop
xor
jmp
lock
jmp
add
push
cs
pushf
ret
lock
pop
lock
pop
lock
stos
iret
daa
xchg
arpl
retw
addr16
lret
rorb
push
jmp
fcompl
pop
jmp
inc
lock
pop
sbb
es
jb
add
insb
mov
sbb
cld
lret
arpl
push
ret
sbb
outsb
mov
das
cmc
test
pop
lcall
cli
fistl
sub
ret
jo
imulb
mov
sar
das
pop
adcl
jmp
mov
mov
test
mov
add
rorl
add
cmp
add
and
ljmp
mov
jp
mov
sar
inc
mov
or
jne
jmp
xchg
std
add
std
mov
xlat
std
pushl
outsb
decl
mov
inc
into
std
call
ds
out
cs
std
jne
fsub
dec
std
mov
std
incl
fwait
outsb
dec
inc
clc
lock
incl
add
int
cld
loope
aas
add
icebp
mov
fcmovb
cli
push
bound
inc
ret
lods
int
mov
data16
inc
add
add
out
jg
std
jmp
into
std
jne
fsubr
insl
jle
mov
jnp
test
add
xor
adc
jge
fimull
sub
or
imul
xor
lock
lock
sti
mov
cmpsl
data16
incb
add
lahf
dec
pop
lcall
sti
out
pop
enter
push
jmp
add
jo
add
pop
out
xor
xchg
incb
shrl
aaa
add
movsl
movsl
fidivl
push
cmpsb
mov
push
cmp
sbb
sub
add
mov
jne
lock
jmp
or
xor
sbb
leave
faddl
mov
jmp
xorb
dec
cmc
xchg
mov
push
in
mov
add
mov
std
cld
add
inc
js
cmpsb
xor
cmp
movsb
lret
mov
push
push
add
imul
lods
mov
test
add
out
dec
sub
cld
xchg
and
cld
out
enter
add
push
jge
mov
loopne
mov
aaa
jmp
cli
fsubr
out
dec
inc
clc
bound
mov
add
inc
les
cmp
into
sar
mov
add
out
sub
clc
add
mov
dec
add
jmp
xor
or
pop
cmp
je
sub
or
inc
cmp
pushl
ret
push
dec
cld
call
xchg
std
or
int3
mov
subl
adc
in
shl
lock
mov
jmp
sub
ds
hlt
push
sbb
mov
or
jge
jmp
mov
push
incl
add
les
std
jl
std
jne
loopne
imul
xchg
add
add
repz
inc
dec
xchg
add
ret
lock
je
int
or
pop
pushl
out
mov
shrl
sbb
out
add
enter
lods
add
mov
jmp
xor
lock
ljmp
clc
and
cld
enter
iret
in
cmp
add
out
lock
add
lock
dec
clc
cwtl
mov
lcall
out
bnd
xlat
push
jnp
testb
mov
jnp
ret
pop
cld
in
stc
xchg
scas
add
cld
push
pop
adc
fstl
mov
mov
pusha
cld
addr16
lock
mov
incl
cmp
sbb
icebp
push
jmp
mov
lock
notb
lock
ret
ret
push
dec
pop
roll
enter
scas
mov
add
in
pop
pushf
out
xor
ret
add
mov
add
sub
cmpsl
dec
call
shl
add
jmp
add
jbe
or
or
push
in
je
mov
mov
xor
adc
hlt
sub
je
mov
xchg
push
roll
jmp
out
xor
jle
pop
push
mov
or
mov
adc
imulb
ret
repz
pop
dec
mov
call
push
or
mov
or
lcall
push
add
enter
int
lea
inc
jns
call
lock
decl
jnp
inc
lock
jmp
pop
call
jno
add
sbb
sbb
jne
dec
icebp
punpckhdq
jae
jno
ljmp
jae
jecxz
push
add
call
jmp
dec
clc
or
movsb
movsb
std
jne
ljmp
add
movsb
or
dec
mov
adc
mov
push
xor
sbb
jge
mov
inc
cld
lock
add
outsl
xor
push
addl
mov
push
call
pop
fildl
add
sub
or
push
and
lods
roll
lock
mov
push
pop
inc
cld
rclb
lods
add
add
ljmp
lret
add
ljmp
mov
cmp
mov
jae
das
ds
lods
inc
push
and
je
push
jbe
test
xorl
sub
sarb
rcr
divb
push
xor
stos
pop
and
mov
repnz
mov
add
inc
mov
mov
sub
add
stos
or
movsl
or
adc
push
sub
arpl
jbe
in
test
mov
mov
mov
dec
lea
inc
cmp
mov
mov
cmp
xor
or
sub
es
cmp
in
mov
sbb
mov
cmp
adc
add
push
add
repz
add
xor
psubsw
xor
jmp
xor
add
ljmp
mov
push
or
mov
mov
pop
mov
add
cmp
mov
xor
jmp
jecxz
das
add
or
or
add
dec
adc
pop
or
sbb
pop
add
add
or
leave
sbb
add
gs
mov
movl
ret
dec
or
add
jnp
sbb
pop
sub
pop
leave
dec
push
add
faddl
call
or
pop
sub
pop
leave
dec
push
add
loope
inc
gs
inc
add
pop
or
add
test
mov
mov
stc
scas
dec
sti
inc
xchg
jge
sbbl
shlb
fadd
pop
daa
test
in
imul
add
ficomps
sub
jnp
stos
rclb
call
imul
inc
in
popf
add
or
popl
add
mov
cli
lcall
call
pop
into
mov
push
and
mov
mov
jmp
inc
int3
pop
imul
jae
xor
mov
mov
jae
sbb
ss
mov
ret
int
xor
sti
push
push
push
push
jl
dec
jg
add
jg
adc
add
lds
xor
push
mov
push
xchg
pushf
mov
pop
pop
jg
ret
lods
cmpsb
call
inc
adc
inc
in
sbb
fidivl
jae
jbe
hlt
jmp
xchg
mov
movq
loopne
mov
pop
mov
mov
dec
mov
pushf
aas
stos
lods
nop
add
cmp
leave
sub
push
mov
test
cmp
push
mov
inc
in
jp
fsubl
mov
int
test
push
add
repz
pop
push
and
jge
push
lret
mov
outsb
add
repz
pop
add
aas
adc
jnp
inc
adc
inc
gs
add
incb
add
push
popa
cs
cmpl
or
fdivp
pop
call
fdivp
adc
push
std
out
jne
std
mov
jae
icebp
inc
lcall
jae
dec
loope
call
shl
idiv
les
pushl
pop
xor
std
jne
outsb
jae
xor
decl
inc
adc
mov
jae
stos
cmpl
add
add
shrl
or
fs
lds
lock
xor
mov
pop
mov
lret
mov
and
clc
or
aaa
aas
enter
add
add
mov
mov
add
or
cmp
jnp
scas
mov
arpl
cmp
jmp
addl
call
sti
scas
out
inc
mov
leave
xor
std
add
popf
out
dec
add
push
ret
and
in
in
repnz
jns
lock
outsb
cs
sahf
leave
and
scas
fisttpl
cwtl
inc
lret
jge
or
ds
scas
mov
mov
jae
call
scas
push
call
sub
add
aam
push
cmp
mov
xor
pop
or
cmp
stos
bound
push
pop
daa
cmp
mov
call
jmp
mov
aam
je
cmpsb
xor
mov
sti
cld
jmp
gs
lods
or
repz
fmull
lods
sub
inc
rol
repz
cmp
mov
add
pop
sti
push
insb
addb
jmp
hlt
push
add
mov
in
jmp
pop
push
push
and
out
mov
lods
je
jle
or
shlb
push
scas
jae
pop
xor
add
call
mov
add
fdivs
pusha
data16
decl
jnp
in
repz
jne
je
or
orl
add
pop
stos
je
je
hlt
and
call
mov
adc
ss
gs
or
call
cmp
sub
adc
decl
cld
mov
mov
sub
call
sub
addb
in
fisttps
lock
add
mov
aas
call
add
in
sub
loopne
mov
cs
or
call
jmp
cs
stos
scas
out
add
decb
ficoms
mov
mov
arpl
dec
insl
pop
fimull
push
lcall
fmull
and
shl
mov
je
add
lds
dec
sbb
add
pop
pop
fmull
loop
cs
adc
sub
push
sbb
mov
aaa
xchg
stos
mov
lock
jmp
push
jb
inc
lods
sbb
pop
adc
ficomps
fwait
inc
xor
jle
clc
sahf
sub
stos
loope
inc
add
lret
call
cs
sahf
popa
das
lahf
stos
test
xor
mov
lcall
add
fwait
incb
add
mov
fld
test
or
sti
out
xor
mov
incl
push
clc
call
mov
push
add
lods
push
call
aam
repz
or
lock
sbb
repz
inc
jmp
push
cmc
call
mov
push
gs
push
push
sub
mov
hlt
push
or
jmp
jns
popf
enter
cmc
push
add
and
shl
push
mov
lret
stos
lods
push
call
push
add
sbb
add
add
inc
mov
ret
jmp
and
sbb
stc
movsb
mov
inc
inc
or
or
loope
add
test
pop
leave
dec
add
mov
jmp
add
add
pop
je
test
aas
ret
icebp
push
cmpb
or
pop
je
test
pop
stc
cmp
fadd
inc
pop
lcall
add
jl
loop
jg
ss
sub
in
mov
add
xor
lods
mov
add
lahf
popf
adc
fisubrl
jne
pop
or
add
aaa
loop
call
lahf
add
pop
fisubrl
clc
lock
add
jae
mov
pop
popf
enter
cmpl
stos
jb
dec
mov
sbb
loop
out
xor
adc
adc
mov
or
stc
add
popa
aas
inc
jo
add
flds
lock
add
imul
sti
jp
icebp
pushf
adc
daa
or
add
cmpsl
jnp
movsl
sahf
shll
les
mov
jnp
es
mov
test
push
push
lret
push
xor
mov
dec
pop
mov
imul
test
aaa
jmp
inc
jmp
push
mov
inc
aad
in
cmp
inc
lock
lock
jmp
inc
lock
add
lock
jmp
int3
xor
punpckhdq
push
add
out
inc
hlt
mov
fiadds
mov
mov
pushl
mov
movsb
pop
aaa
lea
aaa
lea
aaa
lcall
and
inc
xor
rcrl
inc
fcompl
jno
loopne
jno
in
lahf
fisttpl
sub
scas
mov
xchg
xchg
inc
xchg
add
xchg
sbb
sub
jmp
cmp
add
repz
ret
repz
add
aam
mov
rclb
cmpl
je
rolb
cmp
add
inc
and
xlat
fisttpl
dec
cs
jne
and
iret
call
lcall
add
add
mov
add
or
test
xlat
jecxz
mov
mov
jne
xorb
jne
inc
xchg
je
cld
push
ffreep
mov
shrb
inc
lock
cwtl
das
lock
push
push
ja
mov
add
out
ss
ret
inc
inc
lock
sub
lock
push
push
aas
and
add
add
popa
add
sti
outsl
aaa
sbb
dec
xor
scas
push
push
pop
fidivrl
add
outsl
ss
pop
scas
add
cmpsb
test
or
add
xlat
xchg
testb
add
cmp
sbb
lods
je
pop
data16
hlt
scas
insb
dec
lahf
movsb
push
aaa
mov
sbb
fwait
add
sbb
cld
ret
add
cld
scas
cwtl
dec
movsb
sbb
and
lods
dec
cmp
fadds
popf
or
xor
fiadds
jne
aad
insl
dec
rcll
dec
int
lcall
mov
mov
fiadds
out
xchg
jl
xchg
add
inc
xchg
nop
lock
pop
jmp
insb
stos
mov
hlt
mov
add
es
clc
mov
stc
push
call
jecxz
in
push
movsb
cmpb
jmp
stos
inc
inc
jmp
repz
jbe
call
mov
xchg
inc
in
ret
out
mul
cwtl
bound
fnsave
call
dec
repz
xchg
inc
mov
xchg
inc
mov
add
inc
sub
out
andb
add
dec
movl
pop
push
gs
push
outsb
lds
outsb
std
mov
push
call
dec
call
cmpl
inc
dec
insl
jb
fisubrl
pushl
cmp
add
movsl
hlt
addr16
inc
add
add
mov
std
jne
insl
jae
and
rclb
aaa
mov
pop
ljmp
outsb
std
push
lahf
ja
rcr
je
ja
pop
mov
mov
sar
sbb
sbb
inc
lock
inc
dec
pop
pusha
push
mov
call
scas
add
lock
inc
in
shr
or
inc
call
ret
add
sub
in
lock
sub
les
lock
enter
out
scas
inc
or
cmp
jne
ja
add
scas
cmp
fildl
sub
lds
lock
xor
jmp
test
sub
lea
jb
ljmp
sbb
fsubl
sub
lahf
xchg
mov
sti
xchg
jmp
xchg
lods
icebp
sbb
test
mov
cs
jmp
mov
lods
mov
test
push
add
movsb
lahf
add
test
sub
mov
cmp
stos
lahf
int
incl
add
int
jge
add
mov
shl
xchg
inc
xchg
inc
mov
pop
xchg
cwtl
test
leave
push
or
add
add
jae
xchg
pop
enter
mov
dec
fcompl
mov
push
push
mov
mov
lods
pop
add
dec
ret
push
mov
pop
push
mov
je
imul
push
mov
icebp
repz
push
push
mov
pop
push
in
mov
mov
sub
mov
add
cld
daa
incl
add
std
push
fs
in
push
add
jne
gs
jno
cmc
pushl
rorb
aaa
mov
sbb
cli
int3
outsb
dec
call
ss
ljmp
std
or
push
cmp
std
jne
jnp
push
or
jl
pushl
jp
push
out
mov
in
jae
loope
popa
incl
add
mov
jae
fnstcw
arpl
gs
push
lock
das
sbb
fimull
push
not
sti
out
das
cmpsb
fcom
inc
fists
adc
sarb
pop
mov
out
xchg
pusha
inc
xor
or
and
sub
lock
xchg
mov
lock
or
lcall
ja
sbb
lock
add
mov
add
imulb
cld
das
or
cmpsb
incb
add
dec
inc
sbb
movsl
mov
sti
out
push
out
push
cs
pusha
mov
jmp
loope
adc
fwait
inc
pushf
mov
dec
pop
jmp
inc
xor
sahf
das
cld
xor
movsb
cmp
and
mov
jmp
shrb
loop
popl
stos
cmpsl
cmovb
sti
outsb
pushf
mov
fwait
and
movsl
sub
in
movsl
popl
xor
add
dec
das
pushf
lcall
lcall
push
call
lcall
dec
popf
enter
push
bound
ret
mov
push
push
add
mov
or
dec
inc
cld
add
dec
inc
jmp
mov
push
sar
inc
inc
jmp
xor
call
repnz
aas
jo
lahf
movsb
fcmovnu
inc
repz
out
addr16
bound
repz
je
mov
or
arpl
add
decl
pop
push
push
push
std
idiv
add
movsb
or
jbe
addr16
jmp
std
jmp
std
jne
outsb
jae
mov
ret
push
mov
ret
add
outsb
add
call
and
push
push
add
call
cs
jmp
std
leave
lret
push
add
push
add
addr16
add
out
mov
add
lock
mov
mov
std
das
cltd
mov
or
mov
les
lock
imul
xchg
stos
mov
pop
mov
popf
xor
add
pop
cwtl
stos
std
int
mov
je
xchg
hlt
scas
aaa
mov
sub
xchg
mov
mov
add
push
insb
inc
add
or
cmp
pop
sahf
in
stos
mov
push
mov
popf
lea
les
add
rcrl
fsubrl
push
scas
loopne
pop
cltd
cmp
jl
rcrl
cmp
mov
cmp
lahf
adc
mov
sub
popa
filds
add
call
inc
xor
push
lods
pop
in
call
inc
pop
scas
jp
jg
loope
add
jo
push
cld
pushl
xchg
cltd
es
imul
fistl
clc
xchg
adc
je
pop
sub
notb
ret
push
lcall
sub
push
cltd
or
ficomps
push
psubsb
cwtl
inc
sti
cmp
scas
nop
adc
xchg
jecxz
lcall
nop
cwtl
decb
push
cmp
xchg
pop
outsb
push
cmp
sub
push
push
jb
cwtl
je
dec
jno
dec
push
or
add
inc
add
stos
pop
incl
aam
jne
sar
jne
imul
out
out
test
leave
fildl
add
add
iret
imul
add
pop
es
inc
and
inc
add
inc
mov
inc
leave
fucom
or
or
xor
add
je
addl
lock
jne
or
std
incl
jbe
clc
mov
bound
lock
std
aaa
sub
outsl
push
or
aam
sahf
incb
add
lcall
mov
mov
inc
dec
faddl
mov
or
cmp
pop
jge
shr
aaa
mov
sti
lahf
cmp
mov
cmpl
out
push
dec
cld
jnp
xchg
xor
inc
push
pop
js
sub
lahf
or
cmp
xor
sti
pop
push
sbb
add
add
xchg
sub
xor
test
and
xlat
sahf
jbe
mov
shlb
xchg
cmp
push
mov
dec
sbb
imul
adcl
jge
cmpsl
add
sbb
int3
xor
jmp
sub
xchg
pop
adc
in
add
jge
pushf
ficomps
mov
in
scas
popf
add
js
movsl
popf
cmp
popf
pop
mov
add
add
pop
xchg
psubusw
jmp
sbb
push
push
fprem
imul
xchg
test
mov
call
imul
push
sbb
imul
repz
je
push
adc
pop
push
call
pusha
scas
sahf
or
call
add
inc
pop
xchg
mov
xchg
je
fwait
mov
je
jl
in
mov
xchg
out
add
adc
push
out
push
push
sbb
sbbl
jae
push
std
jmp
xchg
jmp
adc
movsb
arpl
dec
mov
std
call
std
mov
repz
jnp
jne
pusha
xor
jae
ret
dec
pop
push
mov
jb
or
negb
out
mov
inc
dec
pop
push
call
leave
loop
mov
or
push
or
or
jecxz
lcall
outsb
std
jne
pop
cmp
pop
outsb
or
lock
cmpsl
fldl
js
pop
lahf
adc
out
fiaddl
sbb
add
xor
add
std
cmpsl
stos
xor
inc
fwait
out
addr16
sub
or
mov
in
add
stos
cltd
je
negl
inc
sub
cld
popf
xchg
stos
outsl
pop
xchg
cltd
imul
mov
incb
mov
cltd
je
mov
push
fists
shr
das
mov
pusha
fadds
test
ret
inc
jmp
stc
add
xor
xor
adc
mov
sub
xchg
fisttpl
mov
fstpl
outsl
xchg
pop
pushf
mov
and
leave
push
ret
fmuls
loope
fidivrl
es
fwait
or
pop
or
lcall
cmc
sub
xchg
jae
sbb
cltd
nop
push
cwtl
negb
loope
je
into
cltd
add
mov
jl
test
pop
push
push
cmp
sahf
imul
fwait
es
xchg
jmp
xlat
inc
add
pop
push
es
lea
call
loop
adc
pusha
daa
addr16
mov
inc
jmp
idiv
out
fisttpll
out
in
decb
add
jns
sti
mov
push
jl
nop
je
push
cmp
fidivrs
cmp
add
loopne
imul
xor
jl
cld
inc
mov
cmpb
incl
iret
inc
inc
add
bound
add
rorb
incl
shl
push
xor
inc
inc
dec
outsb
jae
add
push
add
call
push
add
call
aad
mov
decl
push
aaa
pop
pushf
sub
add
pop
mov
add
inc
inc
or
or
call
sub
pop
fdivrs
inc
lock
addl
xchg
xor
or
fsubrs
inc
in
dec
mov
add
in
add
mov
sub
sub
or
addl
or
dec
out
call
inc
lock
sahf
dec
fcomps
inc
lock
inc
mov
xchg
xor
enter
cmp
lcall
pop
inc
call
andl
add
fs
sbb
push
out
loope
jmp
xchg
adc
and
add
lods
xchg
inc
xchg
movsl
adc
sahf
inc
xor
lea
or
cmp
lahf
mov
adcl
cld
lcall
fcoml
inc
xchg
fcoml
xor
iret
cmpsb
lea
adc
sahf
dec
das
daa
lea
xor
imul
add
jmp
dec
cmp
mov
add
push
mov
xor
push
rol
pushl
add
mov
test
in
push
out
dec
int3
pop
inc
sub
ss
sti
sahf
lock
out
into
mov
out
aam
sahf
inc
mov
lock
push
jb
mov
cmp
mov
je
mov
pop
jg
sbb
mov
or
adc
sbbl
xorl
and
rcrl
into
mov
add
bound
jmp
xorb
pop
jno
mov
xor
jle
lock
rorl
incl
std
pop
push
lds
add
ljmp
add
fldl
inc
jmp
jp
jb
mov
aas
add
mov
jae
fucomip
inc
pop
pop
push
call
pop
test
jae
insb
stos
out
mov
dec
mov
xchg
inc
xor
lcall
jmp
ret
push
xchg
inc
or
push
cmp
lods
sub
add
cmpsl
movsl
ret
pop
nop
inc
xor
xchg
and
add
ficompl
repnz
add
mov
out
mov
cmp
push
mov
out
gs
sti
fists
and
mov
mov
xchg
mov
jmp
xchg
mov
jmp
fwait
inc
psadbw
testb
fwait
clc
xor
shrb
jb
mov
xchg
inc
sti
rolb
mov
xchg
ljmp
mov
adc
xchg
cld
divb
call
mov
insb
mov
mov
loope
cmc
xor
xchg
fs
cmp
pop
sbb
sub
mov
push
test
and
adc
add
xor
push
add
xchg
inc
cld
xchg
repz
xchg
std
inc
inc
jmp
jae
sub
mov
test
insb
and
xor
cmp
mov
or
mov
dec
adc
aas
jmp
inc
push
add
popa
adc
xchg
les
pushl
mov
outsb
popa
mov
mov
je
adcl
incl
add
mov
rolb
mov
lret
push
ljmp
push
js
add
addr16
add
inc
inc
or
or
insb
jne
jbe
cld
lock
call
nop
roll
in
or
orl
mov
sti
jmp
push
pushl
imul
jbe
jne
jbe
or
add
push
incl
ja
sbb
icebp
adc
dec
mov
or
lock
inc
inc
lock
adc
in
inc
xchg
ret
lds
popf
lcall
in
mov
pop
add
popf
lea
or
adc
add
cwtl
adc
fadds
jmp
icebp
mov
fs
inc
aam
add
fisttps
mov
add
mov
or
movsl
sbb
lahf
and
out
inc
decb
pop
lea
jbe
ja
mov
cmp
imul
mov
cli
les
lock
mov
fdivl
dec
mov
add
int3
adc
push
jmp
xorb
add
add
out
jno
xor
out
xchg
xor
add
inc
pop
inc
jae
roll
inc
inc
push
les
xor
lcall
add
call
sti
loopne
lods
test
mov
in
jb
clc
jmp
in
sti
pop
clc
cmp
shll
jmp
repz
lcall
repz
add
mov
push
lcall
repnz
xchg
repz
filds
call
outsb
aam
hlt
push
or
insb
push
push
jne
inc
rorl
incl
aad
xor
test
sti
or
hlt
lock
mov
je
jle
jae
popa
mov
decb
clc
pop
or
add
add
adc
add
pushl
xchg
jae
mov
pop
add
mov
jne
mov
pop
add
std
jmp
mov
or
sbb
call
or
push
adc
push
ficoms
push
incl
call
mov
inc
xor
jne
jle
clc
call
adc
repz
pusha
inc
or
add
in
ljmp
icebp
int
fsubrs
add
add
scas
jl
xchg
dec
addr16
out
mov
cld
sbbl
mov
aas
pop
add
jae
add
lock
cld
daa
mov
mov
jmp
cld
test
outsb
add
pop
add
xchg
lods
scas
add
ret
jb
jns
cwtl
gs
fmul
addb
mov
xor
mov
inc
inc
lock
xchg
pop
popf
sbbb
pushf
pop
fidivrs
pop
jmp
add
mov
lock
push
dec
pop
idivb
pop
jmp
pushf
jmp
jmp
jg
mov
mov
fadds
xchg
mov
shll
or
rorl
or
inc
add
hlt
or
mov
hlt
repnz
jbe
jo
mov
inc
jo
bnd
mov
iret
loope
inc
push
das
jge
arpl
adc
xchg
and
push
add
sub
sarl
incb
push
cmc
push
push
in
push
lea
sar
fsubrl
sub
jbe
jae
jbe
fsubr
mull
fmull
cli
jecxz
loopne
aam
add
mov
mov
imul
mov
jnp
sub
imul
movsb
arpl
out
and
shl
inc
hlt
in
inc
into
testl
incl
cld
in
and
push
mov
push
pushf
cmp
jbe
or
in
insb
dec
push
add
loope
add
mov
jbe
sbb
push
lcall
cmp
jmp
jl
inc
xchg
add
sahf
add
add
jne
pushf
loope
out
xchg
add
ss
push
jno
inc
inc
fnstenv
call
or
push
add
enter
add
mov
ret
and
mov
jmp
or
out
dec
add
xor
add
add
fs
xchg
bound
xchg
or
pushl
mov
sub
iret
daa
sub
incl
add
sti
mov
add
lock
mov
add
push
scas
inc
loopne
in
lock
sbb
mov
xchg
daa
mov
cmpsb
jle
xor
hlt
mov
and
nop
pop
cmc
push
jmp
pushf
jg
jmp
inc
lock
repz
add
xchg
popa
mov
test
push
jle
xor
mov
cwtl
inc
jle
pushf
jbe
cmp
xor
add
jge
cwtl
push
jle
xchg
or
xchg
lock
cmpsl
repz
std
outsb
jl
out
or
test
jle
pusha
jo
test
out
call
ret
inc
jmp
outsb
jl
xor
mov
outsl
jl
outsl
je
xchg
or
dec
adc
les
jbe
jmp
outsb
jl
hlt
add
imul
adcl
cmovbe
mov
mov
jbe,pn
adc
xor
add
push
outsb
inc
test
outsb
jl
add
add
orl
inc
xchg
ret
and
cmc
dec
xorb
addr16
lcall
cmp
leave
and
fadds
pushl
dec
or
call
add
mov
cld
into
negl
cmpl
pop
or
push
mov
lret
imull
cmp
or
jl
sub
jae
xchg
add
cmpl
or
push
ds
aaa
out
jl
out
je
gs
incb
add
push
or
pushl
repnz
mulb
inc
iret
dec
xchg
movsb
xorl
cld
out
daa
test
ja
cmpsl
imulb
xorl
dec
pop
in
xorl
cli
out
test
aas
xchg
stos
divb
les
pop
lds
dec
pop
push
test
test
add
outsb
mov
dec
adc
test
sbb
mov
jp
lcall
int3
jnp
jp
stc
jmp
push
or
inc
ret
subl
mov
cmpsb
int3
lods
adcl
popf
addl
jmp
add
lea
pop
xlat
add
scas
call
add
in
add
push
xlat
dec
sub
mov
jg
repz
fwait
xchg
push
add
or
lods
jnp
add
rep
inc
push
jmp
jmp
gs
add
sbb
jmp
in
mov
loope
and
jns
cmp
outsl
xchg
sbb
or
in
push
out
addr16
icebp
sbb
gs
add
xor
test
repz
cmp
outsb
movsb
inc
pop
jmp
scas
jge
jmp
jmp
jns
arpl
repnz
inc
sbb
es
sbb
jmp
insl
lock
dec
add
cmp
or
fsubp
xchg
lcall
jae
mov
imul
leave
test
jne
add
xchg
jne
xchg
mov
dec
call
rolb
mov
or
ficoml
push
jae
sbbl
inc
cld
lret
sub
int
push
insl
cmpl
sar
jno
mov
fnstsw
das
inc
lock
je
jae
mov
rolb
lock
ds
add
adc
jmp
cmpl
ret
inc
push
add
lock
je
jae
jo
xor
pcmpeqb
add
lock
in
pushl
push
inc
push
pusha
xchg
insl
add
inc
push
mov
push
dec
sub
jns
add
icebp
push
jmp
add
add
or
mov
or
pop
gs
icebp
push
jmp
add
scas
ret
mov
or
jmp
xchg
pop
jmp
add
mov
add
push
into
div
pop
loopne
cmpsb
jbe
leave
jbe
or
cld
mov
ds
popf
in
outsb
int
add
cld
cwtl
insb
popa
adc
add
inc
in
mov
add
loopne
pop
cmp
je
bound
repz
mov
xor
or
testl
mov
je
adc
xor
or
clc
std
mov
jne
out
jne
jl
jne
xor
enter
cli
push
fidivrs
je
pusha
mov
xor
loopne
inc
out
loopne
lods
add
mov
cld
dec
and
ljmp
jle
je
add
out
fdivp
std
jbe
hlt
je
fisubrs
call
sahf
outsb
fdivrp
adc
std
jne
loope
dec
scas
hlt
std
jne
loope
dec
fdivp
std
jne
hlt
adc
or
jae
fimuls
ret
or
jne
loope
dec
fdivp
add
pop
pop
hlt
add
add
repnz
lahf
repnz
push
repz
scas
sbb
sub
pop
bnd
mov
inc
decl
pop
leave
dec
call
outsl
xorb
addr16
sti
shl
or
pop
daa
mov
push
jmp
test
mov
add
lock
inc
inc
and
add
push
inc
add
cli
repz
mov
sbb
dec
out
lcall
stc
pop
add
mov
add
add
sub
lock
cmc
or
add
mov
jne
jbe
lahf
mov
push
mov
decb
push
cmpsb
jl
in
jge
loopne
jmp
int3
daa
add
mov
jge
xor
sub
in
jge
jge
jae
jae
jmp
add
aaa
jmp
lds
jnp
jl
cmp
sarl
sbb
jmp
int3
cmpsl
add
mov
add
add
xor
arpl
jb
out
mov
pop
mov
jp
jnp
cmp
sub
pop
rcll
and
mov
mov
jno
jmp
in
jno
mov
add
jo
mov
push
daa
sub
pop
cmc
sub
aam
outsb
outsl
mov
pop
mov
ljmp
sti
pop
dec
scas
lcall
ss
pop
inc
imul
es
jmp
jnp
pushf
sti
pop
nop
cmpsl
push
cmp
jns
pop
sti
pop
add
out
dec
mov
push
in
je
sub
xchg
add
adc
add
fs
incl
mov
ds
std
faddl
call
dec
fprem1
pushl
popa
dec
jbe
std
mov
hlt
std
pushl
inc
call
in
mov
sahf
in
std
call
mov
divl
in
std
lcall
xor
mov
hlt
std
jmp
sub
push
in
inc
clc
lock
incl
add
in
jae
add
adc
or
push
mov
dec
cli
push
bound
lock
call
imul
ret
decl
lahf
js
jg
js
std
jne
push
xor
push
imul
or
adc
lock
je
ss
or
shr
nop/reserved
add
fs
je
ss
or
add
idivb
out
cmpsb
ja
imul
out
psubusb
iret
fbstp
sbb
mov
inc
mov
push
shll
mov
push
in
cmpsl
mov
imul
mov
js
inc
fdivs
movsl
js
jp
out
imul
pop
sub
pop
outsl
sti
ja
shlb
jns
add
stos
pop
lock
jb
cmp
ss
in
imul
push
js
inc
sar
mov
andl
js
cli
sub
insb
callw
insl
fwait
ja
sub
js
subb
inc
pop
push
aad
out
stos
insl
jb
call
inc
pop
les
lods
data16
fcomip
push
or
add
in
push
add
out
das
lods
outsb
out
add
add
jecxz
je
dec
add
out
incb
add
mov
add
and
movsb
iret
in
scas
sub
push
inc
pop
adc
jmp
lcall
test
pop
push
cld
repz
add
jge
fildl
lods
gs
js
jmp
jg
mov
add
inc
mov
inc
in
or
mov
lret
mov
jae
scas
jbe
inc
cli
out
aas
hlt
std
mov
jmp
push
mov
mov
orl
test
cmc
std
dec
jbe
call
pushf
inc
out
push
mov
loopne
pop
rol
or
fs
push
add
std
or
pop
daa
push
add
cmp
and
cmc
dec
push
lock
add
ljmp
jmp
call
enter
scas
mov
pop
lock
imul
jbe
xor
jmp
call
fiaddl
je
test
sbb
or
popa
cmc
je
enter
jbe
pop
inc
add
mov
ljmp
gs
mov
je
test
jne
clc
lds
shr
jmp
inc
mov
rorl
icebp
hlt
je
call
faddl
jmp
inc
lock
jmp
add
push
scas
mov
lock
jmp
xchg
jo
jp
outsl
jle
movsl
shrl
mov
add
add
push
adc
pop
jmp
push
add
rol
insb
repz
dec
jne
je
jno
je
pop
insb
push
imul
push
jge
pop
push
xor
jl
call
pop
mov
push
fs
mov
imul
scas
je
jmp
imul
loope
add
or
and
aad
imul
cs
std
je
jno
cmpsb
jecxz
pop
xchg
clc
mov
out
jecxz
mov
jle
loop
cs
jo
mov
sar
popf
and
mov
dec
pop
inc
pop
push
pushl
outsl
push
call
pusha
sbb
push
testb
add
stc
in
std
fnstenv
addl
inc
add
out
xchg
hlt
jae
dec
pushl
int
inc
mov
std
mov
in
std
incl
push
call
xchg
scas
ljmp
int
inc
data16
std
mov
in
std
inc
outsb
push
call
scas
xchg
hlt
std
mov
in
std
push
shl
invd
arpl
incb
add
shlb
test
and
outsb
jno
enter
fisttps
jno
iret
sub
imul
jge
js
scas
push
adc
dec
jo
mov
decb
inc
mov
jg
jo
jp
jno
ja
imulb
pop
out
lods
mov
movsl
jle
push
xchg
dec
xorl
add
dec
xchg
sar
icebp
jo
xor
lock
push
jmp
push
imul
addr16
jo
jge
outsl
div
loopne
add
cmpsl
add
xor
js
addr16
adc
call
or
jmp
scas
addr16
jo
icebp
lock
call
inc
in
and
push
add
add
mov
jnp
outsb
outsl
imul
add
add
scas
ret
add
icebp
lock
jl
pushl
push
pop
push
mov
pop
fiaddl
jmp
mov
testb
inc
cmp
xor
inc
push
clc
call
push
or
jmp
repz
add
scas
pop
out
push
push
add
xchg
pushw
mov
mov
mov
sarl
clc
call
adc
add
repz
dec
shrl
std
adc
outsb
mov
fs
bound
std
fnstcw
out
push
idiv
mov
int
mov
nop
inc
inc
sbb
mov
cmc
std
incl
rolb
std
mov
add
decl
inc
cmp
add
lahf
idiv
cmc
std
jne
shll
in
pushl
push
incb
jae
mov
inc
ljmp
hlt
std
lea
cmc
lcall
dec
inc
shl
push
jl
je
xchg
inc
inc
mov
push
fsubrl
lret
repz
add
add
pop
jne
pop
testl
xchg
dec
insl
mov
jne
idivl
or
scas
add
popf
jne
filds
dec
out
sarl
pop
je
mov
imulb
xor
cmpsl
insl
add
scas
out
cmp
fdivr
xchg
pop
xorl
je
addr16
cmpsb
testl
add
outsb
shrb
pop
lea
fcmovu
pop
sub
insl
ss
imull
sub
cmp
push
lcall
out
outsb
mov
mov
pop
sub
pop
jns
push
insl
jb
cmp
arpl
notl
out
out
iret
movsb
std
mul
outsb
lret
arpl
mov
pop
in
sahf
cltd
mov
add
xchg
arpl
idiv
outsb
and
xchg
imul
arpl
jle
pushl
or
cmpsb
int3
lcall
xor
jle
testb
fs
cmp
pop
outsb
lret
mov
mov
pushf
incb
xchg
lcall
xor
cmpsb
inc
imulb
push
push
stos
dec
popa
push
aas
pop
push
add
sub
inc
push
push
popa
inc
add
pusha
cld
decb
je
dec
dec
psubsw
dec
shl
mov
sti
inc
hlt
in
dec
into
orl
incl
dec
cli
ljmp
data16
dec
cmp
es
dec
mov
std
jne
jl,pt
or
push
call
xchg
push
cli
cmp
out
imul
std
leave
fildl
add
add
xor
push
inc
dec
ljmp
std
mov
inc
add
stc
daa
cwtl
add
inc
push
mov
or
cmp
mov
fdivr
xchg
mov
fdivrp
addr16
out
inc
pop
test
add
jne
sti
add
aas
mov
xchg
jne
fsubr
sti
daa
pop
cli
out
sub
mov
cmp
hlt
outsl
iret
mov
ds
mov
dec
negl
imul
lock
inc
xor
cmp
sbb
cmc
sub
cld
mov
lock
pop
mov
xor
cmp
xadd
or
int
repnz
add
pop
jmp
mov
mov
call
mov
mov
outsb
and
inc
repz
sbb
sbb
add
outsb
out
pop
pusha
pop
mov
into
sub
or
add
fsubrs
call
add
or
lock
std
roll
add
pop
add
dec
mov
cmp
fildl
rcll
sub
add
insb
and
xor
leave
sti
cli
mov
scas
enter
or
jne
fcomp
sti
xchg
push
pop
call
sub
in
mov
sti
pop
inc
in
call
inc
pusha
je
stos
test
cwtl
mov
sbb
push
xor
cld
pop
and
jae
add
mov
push
adc
or
jae
mov
out
std
push
orl
xchg
dec
dec
or
xor
out
cmp
std
call
mov
inc
sub
jne
pop
out
xor
loopne
std
decl
push
mov
jne
ret
outsb
out
pop
or
add
ljmp
add
cmp
jne
ret
scas
in
inc
popf
cmp
jne
ret
cs
jne
out
or
sbb
add
ss
lock
sti
daa
mov
jo
jno
xor
sub
outsl
movsl
mov
add
sub
call
xor
lock
xorb
out
pop
addr16
out
push
incb
add
add
lock
dec
inc
je
je
xchg
mov
lcall
mov
das
add
outsl
add
inc
fcomp
mov
fisubl
sbb
pop
add
insl
add
gs
jno
out
or
call
adc
sarb
xlat
data16
mov
cmc
sub
call
add
add
fisubs
inc
lock
ss
pop
push
hlt
js
idivb
lods
pop
pop
call
test
pop
jmp
je
xchg
call
cmc
mov
cmc
jne
ljmp
mov
enter
lcall
add
mov
add
push
add
jo
add
pop
adc
add
sti
mov
inc
add
movsl
jecxz
and
mulb
jecxz
xchg
loope
mov
jmp
enter
enter
out
pop
pop
bound
mov
mov
test
notb
mov
addr16
stos
sbb
andl
ret
mov
or
or
andb
shl
and
add
outsl
addb
ljmp
and
ret
inc
hlt
flds
add
mov
xor
pushf
or
push
test
jno
pushl
mov
xchg
inc
dec
call
adc
lcall
out
bound
add
cltd
aas
adc
sbb
std
jne
xchg
out
push
in
fsub
out
push
push
add
add
fmull
call
andl
jae
outsb
and
enter
lods
ljmp
lock
mov
out
lcall
imul
mov
add
repz
stos
scas
add
inc
outsl
inc
mov
or
sbb
sbb
ret
xlat
scas
add
sbb
pusha
popa
imul
jo
je
inc
and
add
outsl
inc
popa
je
aaa
dec
cld
pop
nop
lcall
imul
jnp
test
cmp
dec
fnstenv
lods
popa
popf
imul
xchg
cmp
call
call
enter
std
test
int
cli
inc
mov
inc
test
in
pushl
je
mov
add
enter
add
add
outsb
lahf
pop
popa
enter
or
mov
jo
out
add
lock
int
dec
pop
cmp
sarb
insb
jno
add
push
sbb
adc
pusha
ds
xlat
in
insl
bound
push
xchg
sti
push
repz
loopne
jne
pop
hlt
sti
outsb
out
and
push
jmp
nop
rolb
inc
jae
incl
inc
je
add
dec
in
mov
push
pop
or
lahf
add
es
push
je
sbb
cmp
je
imul
jmp
fwait
in
push
repnz
add
out
je
or
sarb
and
stos
call
push
divl
adc
or
repz
sbb
pushf
add
sbb
add
adc
add
add
or
mov
loop
rorb
nop
mov
and
flds
mov
std
jne
out
or
lcall
add
jne
out
or
cmp
std
call
lret
cmp
jmp
call
leave
lret
add
push
adc
add
hlt
add
and
call
xchg
inc
ljmp
add
dec
call
lret
add
repnz
mov
xchg
pop
jae
outsb
lcall
imul
ret
add
insb
out
add
lock
out
inc
int
jmp
ss
xlat
loopne
add
popf
popa
setg
jmp
sub
add
mov
push
cmpsl
pop
add
sbb
jns
incb
add
lahf
mov
incl
push
je
inc
sbb
addr16
mov
pop
sbb
push
pop
sti
js
adc
push
and
aas
fldln2
pop
movsb
push
mov
pop
jmp
add
popf
xchg
add
xchg
test
push
fldl
jmp
aam
ljmp
enter
stc
sub
call
pop
into
fidivrl
adc
es
add
push
mov
mov
mull
ret
lahf
pop
jp
mov
popa
xor
or
add
pop
adc
jg
jno
push
add
push
shl
sbb
inc
jle
sub
call
jb
adc
mov
repnz
add
push
imul
repz
jb
push
je
add
add
add
repz
je
repz
or
mov
sbb
test
push
je
push
and
jmp
repz
xor
incl
repz
je
insb
out
repz
mov
push
adc
dec
push
jmp
ret
or
jne
fbld
pop
pop
or
std
idivb
push
stc
loop
pop
add
sbb
push
repz
add
push
add
add
pop
mov
lock
add
hlt
dec
cmp
push
cmp
add
aas
mov
mov
std
push
push
cmp
call
popa
mov
lcall
xchg
decb
out
xchg
push
add
ret
dec
out
mov
add
add
fs
jae
mov
mov
xchg
popa
add
sti
lahf
iret
adc
pop
in
pushl
sti
pop
movsl
outsl
jmp
fcomps
add
lock
popf
shrl
leave
fcomps
jge
imul
call
imul
mov
mov
pusha
sub
fisttps
add
lock
cltd
sub
push
cmp
pop
and
add
rolb
pop
or
xchg
dec
test
not
push
mov
mov
addr16
fdivs
addr16
pop
add
sub
sub
fcmovu
xchg
sbb
jae
mov
mov
jmp
mov
psllw
add
sbbl
mov
cli
xor
mov
repnz
decb
es
jmp
add
add
andl
pop
inc
push
and
add
inc
fwait
in
fsub
add
addl
sbb
imul
inc
push
je
or
cmp
sbb
aad
lret
idivl
leave
into
das
push
imul
pop
ss
in
sti
mov
popf
add
xchg
pop
cmp
hlt
sti
mov
xor
add
push
std
cld
mov
push
or
daa
pop
inc
pop
mov
push
add
push
out
hlt
dec
ds
push
add
lods
enter
jmp
xor
addr16
add
icebp
cmp
ret
cmp
add
sbb
pop
aas
adc
dec
add
clc
int
sbb
add
add
pop
nop
lret
mov
sub
or
int3
outsl
scas
std
sub
add
push
popa
add
mov
add
mov
flds
std
lea
ljmp
lcall
xor
mov
lcall
sahf
add
xchg
jo
add
mov
jle
add
lock
add
insl
pushf
push
outsl
pusha
add
lock
ret
pop
cmp
das
std
dec
lea
imul
ljmp
aas
std
aaa
movsl
or
jmp
jnp
daa
pusha
sbb
sub
add
inc
je
incb
or
lock
add
or
std
out
pop
inc
jae
out
imull
push
dec
dec
mov
shl
sub
xor
rolb
cmp
rcll
sbb
add
inc
xchg
sbb
inc
imul
add
push
jmp
push
jbe
push
pop
lock
call
add
inc
push
icebp
jb
test
dec
dec
call
inc
cmp
sub
les
pusha
fldcw
dec
sbb
popf
in
lock
sti
pop
pop
movsl
in
lock
loopne
test
js
push
jmp
add
add
push
out
push
nop
mov
dec
push
iret
insb
jmp
lock
jecxz
dec
pushl
push
fs
repz
mov
push
ret
pusha
andb
or
add
or
pop
sti
xchg
shufps
add
test
push
call
pushf
dec
jmp
hlt
push
add
add
in
repz
push
pop
call
pushf
mov
mov
mov
sti
mov
leave
dec
std
hlt
pop
sbb
flds
out
jge
cmpl
cmp
jl
lea
xchg
mov
pop
mov
aas
xchg
callw
std
call
mov
decl
fistl
inc
inc
mov
rolb
mov
pop
or
sar
incl
sti
jne
cmpb
push
cld
adc
add
inc
or
ljmp
mov
cld
xchg
cwtl
push
movl
pop
cmpl
std
call
jae
push
incl
push
je
and
xchg
aad
add
add
cmp
inc
push
jnp
jg
pushf
insl
stos
addr16
ret
into
add
outsl
fstl
into
adc
test
dec
ret
decl
or
xor
scas
enter
adc
pop
add
sbb
pop
fstl
push
stos
push
add
test
push
jb
enter
push
add
dec
pop
add
sti
push
sub
in
pop
rolb
push
cs
fildl
jmp
add
add
jnp
dec
aaa
fucomp
dec
mov
xlat
repz
sti
sub
pop
shr
pop
push
aad
pop
repz
std
push
push
add
pop
icebp
push
jmp
mov
aad
fistl
jmp
add
pop
enter
loop
ret
sbb
jmp
push
scas
fsubr
dec
adc
xchg
add
repz
shrl
testb
push
mov
sbb
fsubrl
pusha
inc
adc
dec
mov
and
repz
lea
push
push
xchg
repz
jb
inc
repz
subb
lret
out
call
repz
add
rcl
data16
sub
pop
dec
jns
int
ret
add
repz
add
repz
sub
inc
jmp
in
push
add
mov
xlat
add
mov
cld
popa
and
or
je
cmpb
das
pop
inc
scas
lea
push
inc
rolb
flds
add
mov
add
fisubrs
cli
jmp
mov
clc
mov
cmp
mov
add
add
xchg
mov
add
add
dec
add
jae
mov
hlt
cs
call
jle
cli
call
dec
repnz
push
imul
pop
orb
push
sub
insl
clc
push
out
clc
add
lock
scas
pop
test
mov
sti
pop
add
aam
mov
iret
in
add
add
lock
lcall
and
sar
sbb
pop
cwtl
cmp
lds
push
dec
cwtl
or
sub
das
sbb
add
imul
sbb
arpl
mov
pop
mov
push
cmpsb
dec
xchg
pushf
lret
les
scas
inc
sbb
inc
test
out
daa
add
ffree
out
sub
out
push
pop
fiaddl
pop
sbb
push
dec
cli
inc
aam
iret
adc
dec
mov
dec
jmp
cmp
call
fcomi
pop
jmp
dec
mov
mov
jnp
call
dec
mov
call
add
inc
pop
stc
dec
sti
idivb
add
inc
in
sbb
and
push
call
add
add
inc
xchg
cmp
xchg
sub
es
cs
jge
inc
enter
jmp
sbb
aas
jmp
cs
call
pop
add
jnp
jmp
repz
repz
mov
idivb
xor
aas
jmp
repz
ds
out
pop
inc
adc
cmp
jno
ret
mov
push
mov
inc
call
add
aas
or
cld
mov
inc
jmp
loope
incb
dec
or
pushl
add
call
inc
insb
dec
imul
pop
ret
pushl
decl
pop
add
div
icebp
pop
roll
jne
fiadds
jmp
jecxz
pushl
shl
popf
cs
push
fildll
add
pop
jmp
out
aaa
pop
pop
pop
jmp
imul
aas
pop
add
pop
pop
jmp
imul
inc
pop
dec
pop
jmp
push
in
dec
pop
or
jmp
lock
and
call
test
dec
leave
stos
inc
lock
and
call
or
cwtl
out
add
int
stos
inc
lock
add
adc
loopne
subb
add
add
or
enter
outsl
add
aad
stos
inc
lock
dec
mov
es
sub
call
stos
stos
inc
lock
and
enter
or
push
out
mov
daa
add
in
test
fbld
add
in
je
mov
mov
push
in
lods
mov
sahf
and
fbld
add
in
movsb
lods
add
mov
xchg
sub
daa
add
jmp
lods
xor
outsb
and
fisubs
lods
xor
push
and
jmp
lods
xor
and
jmp
lods
xor
and
jmp
lods
xor
push
and
jmp
stos
mov
add
adc
push
test
inc
and
mov
fstl
pop
pop
sub
inc
and
mov
inc
add
adc
pop
sub
inc
and
push
ljmp
in
inc
and
pop
call
hlt
inc
and
inc
jge
repz
sub
aas
and
mov
jmp
sti
pop
test
aas
and
xchg
decl
add
repz
and
pop
pushl
repz
and
inc
lcall
repz
and
dec
out
out
pop
add
cwtl
add
and
dec
and
or
and
push
and
or
and
outsb
and
or
and
dec
and
and
outsb
and
and
pop
and
and
and
and
and
and
add
jne
aas
add
pop
lods
pop
dec
add
and
lock
mov
add
xor
add
in
sub
cli
mov
sub
add
js
add
lock
jb
bnd
mov
add
sub
dec
pop
lea
add
hlt
sub
cld
mov
das
add
mov
add
add
jo
add
push
cmp
ret
add
jge
xchg
ljmp
xor
add
das
lds
pop
pop
stc
add
push
sub
xchg
call
sti
aas
sbb
add
dec
in
and
mov
jmp
or
push
jmp
out
aaa
ds
add
push
jmp
add
add
push
stos
add
sti
call
cld
inc
and
add
dec
in
add
mov
jmp
adc
push
out
mov
pushf
cld
aad
daa
inc
repz
push
or
add
repz
paddsw
push
mov
or
jmp
ja
icebp
repz
add
or
jnp
push
cmp
pop
or
jmp
icebp
inc
std
test
repz
and
pop
or
jmp
je
add
repz
sub
push
or
repz
mov
or
jmp
repz
rorb
xor
decb
sbb
add
or
inc
into
sbbb
cltd
or
add
add
cmp
call
mov
mov
pop
enter
add
mov
out
push
ljmp
not
jg
mov
xchg
add
imul
push
or
in
jb
mov
add
pop
xor
add
sarb
pop
add
nop
sbb
pop
mov
add
lock
adcb
sub
into
or
add
xchg
lock
fwait
das
xor
icebp
out
lock
repz
sub
add
mov
mov
in
sub
incl
adcl
fsubrs
daa
std
xor
jp
movsl
fbld
decl
sbb
mov
jmp
in
sub
out
lock
jns
add
add
ljmp
or
stc
imul
pusha
repz
lcall
mov
decl
add
add
nop
dec
out
push
jmp
add
lea
repz
jmp
cmpsb
xor
jmp
call
sahf
test
adc
add
push
jmp
mov
out
mov
xchg
loop
out
sarl
mov
lock
jmp
int3
xor
test
sti
test
sub
roll
in
call
nop
fadd
in
lea
clc
rcll
mov
push
add
repz
add
or
add
outsl
jmp
mov
adc
add
loop
add
outsb
inc
sub
ds
mov
push
sbb
je
jle
paddsw
push
mov
add
jmp
testl
add
pusha
mov
add
add
xchg
and
xchg
or
xchg
lds
add
jl
push
add
std
add
pop
add
mov
mov
loopne
push
add
add
mov
mov
xlat
sbb
dec
mov
add
rorb
add
jne
mov
xchg
sbb
or
lock
add
cmpsb
mov
in
sub
push
add
add
mov
inc
xchg
cs
sbb
sub
mov
hlt
sub
push
add
insl
mov
jns
adc
sub
add
push
add
outsb
out
mov
adc
mov
ret
out
xor
jnp
test
in
std
mov
dec
imul
adcb
rorl
pop
js
out
sbb
add
add
mov
incb
push
inc
loop
inc
lock
xchg
add
in
lock
adc
out
jmp
pop
lock
test
add
jg
adc
push
jmp
add
sbb
ret
mov
pop
pop
pop
in
push
jmp
adc
push
jmp
add
outsl
jno
or
add
fadds
lock
bound
add
fisttps
jmp
push
xor
test
pop
lock
cmp
imul
pusha
jbe
add
repz
mov
or
jmp
repz
mov
or
jmp
push
dec
xchg
hlt
test
in
push
jne
imul
outsl
or
add
mov
lods
in
push
add
add
test
out
push
add
add
xchg
push
mov
out
push
add
push
add
sbb
mov
or
jmp
repz
mov
or
jmp
pop
or
add
outsb
pop
mov
addb
mov
mov
push
mov
add
or
and
sbbb
jne
push
mov
add
or
add
add
lcall
lods
sbb
or
mov
sbb
mov
add
out
push
pop
ret
mov
push
push
shlb
adc
cli
cmp
xor
sbb
xchg
dec
cmc
fdiv
lret
lock
xorb
fadd
call
sub
add
add
mov
std
incl
add
sbb
lcall
jb
in
out
adc
and
imul
xlat
cwtl
cmp
cmpsl
rol
pop
ljmp
push
cwtl
sub
incb
dec
inc
pop
lock
pop
adc
aad
jnp
cmpl
jmp
add
jno
cmp
push
jmp
call
add
psubq
cmp
jg
sub
das
mov
cmp
xor
mov
in
lock
out
add
add
mov
pop
lock
pusha
popf
adc
jmp
inc
out
push
push
scas
or
mov
add
lock
pusha
test
or
add
adcb
push
jmp
add
jge
sbb
add
push
jmp
cmp
bnd
in
push
jne
mov
in
push
mov
or
jmp
pop
xor
jo
add
repz
sar
xor
mov
push
or
lahf
or
stc
xchg
jge
fxch
xor
popa
in
add
repz
add
or
jmp
repz
adcl
add
or
sbb
bound
inc
out
mov
mov
hlt
push
adcl
dec
jnp
sub
add
add
add
es
push
xchg
mov
std
pop
iret
dec
pop
ret
movl
mov
jle
flds
dec
pop
js
sbb
jns
cmp
add
add
fldenv
call
push
mov
std
mov
fcmovne
stc
ds
mov
mov
add
and
fiaddl
ret
incb
adc
add
pushf
and
and
add
sbb
js
in
sbb
scas
sbb
adc
sbb
add
mov
imul
jbe
incl
add
movsl
adcl
loopne
push
std
mov
adc
cmpsb
cmp
fistps
sbb
iret
mov
pop
in
sbb
pop
add
sbb
add
jnp
sbb
sbb
filds
lock
inc
out
pushf
inc
add
pop
adc
jne
in
add
jle
jnp
push
jmp
incl
pop
lcall
adc
jmp
add
push
pop
sbb
mov
xor
call
jno
pop
stos
mov
xlat
lcall
out
sbb
sbb
int3
sbb
call
stos
sbb
les
jnp
int3
sbb
sbbb
dec
int
fdivl
or
add
mov
mov
in
lock
outsb
fildl
add
add
mov
lods
add
jno
add
repz
fldl
jl
addl
jmp
clc
add
jmp
repz
mov
add
jmp
adc
push
jb
shll
mov
addl
fwait
push
add
repz
jb
add
add
repz
rcr
loope
sub
push
sub
fadds
add
or
add
cmp
in
imul
push
cmp
mov
sahf
jp
and
jp
and
sub
lret
lcall
loopne
lea
decl
or
xchg
cmp
enter
mov
sub
incl
add
ret
je
mov
jmp
add
add
jmp
cmp
add
add
inc
add
cmp
add
test
mov
mov
ja
jl
in
sbb
add
dec
xchg
mov
imul
add
icebp
mov
add
sbb
add
imul
fistpl
lock
add
xchg
mov
pushl
fs
in
sbb
xor
and
fadds
addr16
sbb
mov
outsb
daa
or
add
outsb
add
lock
imulb
pop
out
insl
sub
shrb
clc
ja
inc
add
lock
in
push
jmp
rclb
jmp
add
loope
popa
xor
je
call
jge
add
add
add
add
cs
add
roll
cs
mov
cli
xor
add
mull
inc
sbb
int3
out
add
adc
sarl
sbbb
lock
add
jmp
xor
dec
add
mov
xchg
add
repz
add
out
jae
pop
cmp
dec
push
mov
xchg
imul
int
sub
fmulp
aas
call
inc
in
fnstcw
jnp
jmp
and
push
sbb
mov
pop
add
sub
push
jno
xchg
and
pop
push
push
gs
int
stc
cltd
rclb
cmp
pop
push
sub
add
add
and
inc
dec
and
fcoms
into
adc
out
adc
std
sub
dec
and
add
mov
out
insb
cmc
dec
mov
shll
and
push
mov
and
repnz
add
les
push
push
rol
out
and
std
mov
push
push
mov
inc
and
push
dec
mov
dec
cli
cs
mov
add
loop
mov
mov
jae
sub
subb
lret
cmp
jb
mov
and
mov
and
cmpsb
into
and
lret
mov
nopl
cmp
push
add
inc
or
lock
jne
adc
ljmp
lcall
mov
mov
jge
adc
add
repz
je
add
lcall
daa
push
sti
mov
adc
pushf
stc
adc
xchg
adc
hlt
cmpsb
sti
pop
jae
lods
adc
push
jmp
mov
ret
call
cli
add
test
jnp
call
jmp
test
mov
jmp
xchg
jecxz
xchg
add
inc
jnp
adc
add
mov
jmp
pop
lock
inc
and
sbb
sub
in
push
push
test
notl
add
inc
sbb
jo
add
aaa
repz
add
pushl
fmull
nop
repz
add
jge
test
repz
push
pusha
or
add
add
pop
mov
push
mov
fs
fnstcw
jmp
testb
jmp
mul
jmp
repz
jb
jb
jmp
repz
subl
icebp
cli
je
nop
push
add
mov
out
mov
in
push
mov
or
jmp
or
push
add
fldenv
add
add
leave
mov
add
fstps
sbb
xchg
or
add
add
mov
jl
cli
mov
mov
add
and
enter
push
add
in
decl
mov
add
das
mov
inc
mov
pop
sub
cmpsl
stc
add
add
or
and
mov
push
add
clc
xlat
and
cli
rcll
jle
ret
add
push
add
cmp
and
cli
adc
sbb
ret
push
fimuls
lcall
jl
hlt
sub
rcll
and
and
sub
sub
add
fs
pop
add
add
test
and
sub
push
add
sub
fidivl
sub
shl
push
jmp
std
jae
jmp
call
inc
mov
ds
sub
pop
mov
mov
sbbl
sub
aam
jmp
jmp
push
in
lock
out
xchg
pop
jmp
add
add
push
int3
add
mov
out
xchg
jmp
int3
push
int3
xlat
push
hlt
pop
lock
ret
lret
mov
jae
lock
sarl
int3
rorl
aas
stc
out
nop
dec
add
sub
inc
call
push
lahf
cmp
mov
imulb
mov
inc
inc
int
rclb
add
std
sub
jle
and
mov
sbb
ss
jb
inc
out
lock
ljmp
int
push
ss
cmp
mov
std
and
ret
ret
push
and
xchg
add
enter
pop
inc
and
xor
jge
lds
add
xchg
jbe
add
xor
adc
daa
es
clc
mov
std
incl
and
mov
push
push
inc
fucom
stos
daa
out
std
cmp
pop
and
jo
movl
add
cmp
mov
add
cmp
incl
sahf
repz
out
mov
mov
lock
mov
mov
negl
add
add
and
int3
inc
iret
push
imul
pop
clc
sbb
inc
sub
sub
lods
adc
add
sub
cmpsb
and
stc
test
addl
lds
add
movsb
into
and
xchg
adcb
sub
aam
mov
aad
mov
rorb
call
sub
mov
fmull
add
mov
add
jnp
pop
adc
inc
and
fists
mov
push
xor
and
inc
mov
cmp
push
ljmp
and
push
add
pushf
mov
cmp
dec
mov
out
mov
insb
enter
sub
cmpsl
sbb
add
add
fisttpl
loopne
add
push
jmp
mov
test
mov
movsl
jbe,pn
outsb
pop
jno
jp
decl
mov
jle
sbb
cmp
mov
ljmp
push
scas
sbb
jmp
sbb
mov
adc
add
insb
inc
cld
sbb
add
insl
pop
add
shlb
in
add
ret
xchg
pop
push
sahf
inc
lret
cmp
and
xor
and
pushf
dec
push
jb
int
int3
sti
jmp
push
jb
mov
test
push
pop
enter
xchg
ljmp
pop
add
mov
leave
testl
in
out
std
push
mov
sub
fucomi
std
jmp
ds
or
mov
stos
lcall
add
and
pop
or
mov
add
repnz
jnp
mov
adc
or
add
sub
jp
inc
aaa
and
stc
cmp
pushl
mov
es
stc
mov
std
call
lret
in
or
add
mov
and
das
cmc
test
xor
add
ficoms
aam
or
add
jae
add
add
outsb
pop
add
lock
and
decl
jmp
lods
add
rorl
das
loopne
mov
jnp
int3
add
out
and
jno
test
rorl
jge
xlat
imul
aaa
pop
fidivrs
cwtl
xor
cmpsl
dec
inc
mov
push
jle
test
jb
rcl
outsl
mov
add
ficomps
rcr
popa
mov
mov
sbb
push
xor
in
cmpsb
mov
xor
inc
sbb
ljmp
call
ljmp
nop
jp
loop
js
loop
int3
mov
sbb
and
mov
and
or
scas
xor
sbb
adc
jmp
ret
int3
fildl
add
nop
sahf
sbb
pop
test
rcr
lcall
adc
or
mov
jmp
into
ljmp
and
pop
andl
lock
daa
in
repz
add
repz
jl
jo
add
xchg
sbb
jnp
repz
js
and
add
mov
dec
repnz
scas
out
bound
in
cmp
decb
leave
xchg
add
and
sub
std
push
dec
lahf
int3
call
cmp
pop
push
add
dec
dec
push
push
rcl
out
jmp
cmp
push
js
int3
mov
std
out
repnz
out
loop
ret
sahf
cmp
cmp
movsb
or
add
jb
cmp
sub
jno
cmp
sbb
pop
xchg
sub
sti
jecxz
xchg
push
add
cld
mov
scas
ja
out
xchg
nop
pop
add
das
add
outsb
sbb
add
test
fdivrl
and
xchg
mov
add
add
jnp
mov
movl
scas
in
add
gs
sbb
pop
int3
addr16
movsl
xor
xchg
in
add
jns
out
imul
out
aaa
inc
clc
test
fiaddl
inc
lret
sub
add
decb
xor
add
add
fldl
fistpl
out
xchg
lock
bound
lret
pop
ljmp
mov
ret
or
push
adc
mov
fistl
out
das
xchg
sbb
sbb
lahf
rcl
lcall
mov
push
mov
and
mov
mov
mov
and
inc
popa
mov
repz
hlt
push
add
push
decl
add
mov
lahf
mov
ret
mov
cmp
out
loop
jb
jecxz
push
arpl
js
sbb
sub
fisttpll
outsl
pop
add
jmp
dec
add
jmp
repz
jmp
notb
call
in
xchg
or
arpl
mulb
ljmp
add
stc
testb
jmp
sub
movb
out
inc
dec
xlat
pushl
push
test
dec
inc
mov
push
push
cmp
xorl
mov
add
sbb
add
add
adc
add
push
pop
dec
mov
loop
out
mov
mov
push
push
shlb
icebp
incl
add
xor
jg
addl
xor
and
add
lea
cmp
or
add
std
add
mov
cmp
inc
cltd
dec
out
dec
push
fistpl
dec
push
mov
add
mov
inc
dec
cmp
lea
sub
mov
imul
jge
sbb
out
mov
out
lea
add
lock
pushl
pop
add
lock
mov
imull
in
pop
adc
scas
in
add
repz
fiadds
adc
jmp
cwtl
clc
jg
repz
jmp
add
pop
fisttpl
jmp
pop
add
lock
bound
push
ljmp
je
pop
lock
hlt
cld
push
clc
pop
lock
jo
pop
or
add
push
jmp
add
jg
sti
repz
jmp
sbb
mov
in
add
cltd
out
mov
in
add
jge
sti
repz
add
xor
int
push
add
add
jmp
add
out
push
add
out
push
add
lock
jmp
repz
add
pop
add
cwtl
inc
ror
push
push
jae
js
and
jns
pmulhw
push
sub
jle
add
repz
movsb
mov
sahf
hlt
inc
andb
mov
sub
pop
push
fcmovnb
add
jg
stc
out
push
add
add
aaa
out
add
pop
lcall
add
std
inc
orb
bound
inc
or
enter
testb
push
jae
dec
lret
leave
push
ret
mov
push
mov
push
mov
pop
mov
push
dec
mov
sub
add
push
push
push
mov
add
push
repz
test
sub
push
add
ffree
lret
ror
ffree
lret
push
mov
jno
adc
pop
and
pop
shl
mov
lods
int
lock
adc
call
jnp
setg
add
out
cltd
inc
xchg
dec
inc
jae
fstpt
cs
jae
or
sbb
add
cmp
mov
push
test
addr16
test
push
pop
rcr
lcall
add
aam
movsb
or
outsl
lret
or
rcr
jo
in
jbe
xchg
bnd
cmp
call
test
fcomi
xchg
iret
dec
push
push
sti
dec
ja
add
jmp
add
pusha
mov
stos
iret
sbb
loopne
in
jb
sbb
xchg
nop
add
pusha
pop
cmc
or
push
fildll
call
sbb
in
push
jb
mov
add
or
in
mov
jbe
pop
popf
lods
lds
sar
adc
je
add
jmp
add
push
add
cmpsl
inc
pop
jmp
or
push
push
jge
pop
insb
xchg
mov
pusha
sub
aam
xchg
push
cld
jmp
mov
out
stc
push
add
insl
xlat
addb
and
lock
pusha
and
addb
lret
pop
in
push
push
sub
sarb
jg
sbb
add
fsub
or
enter
xlat
adcl
add
jmp
xor
add
scas
das
or
push
xor
cltd
push
or
mov
daa
leave
or
pop
aaa
dec
xchg
in
add
adc
add
jbe
inc
cltd
jnp
mov
lret
add
dec
inc
add
pop
je
ret
mov
mov
jp
mov
jae
incb
xor
sar
cmc
inc
add
push
mov
rorb
lods
daa
mov
lods
mull
pop
add
push
sbb
push
add
lock
outsl
lock
add
cmp
mov
or
inc
cmp
mov
add
pop
and
imul
dec
or
cmpsb
or
stc
push
sub
jmp
add
paddd
clc
out
outsl
inc
std
jle
xor
rorb
push
out
inc
adc
loope
imul
ds
ljmp
or
lock
xor
add
idivl
loopne
jg
inc
xlat
out
jo
xor
pusha
add
sub
xchg
pushl
xor
les
imul
jg
inc
out
jo
xor
punpcklwd
lds
jno
lds
call
cmpb
pop
add
xchg
pop
jb
orl
add
inc
ljmp
sti
push
out
and
mov
lods
and
mov
push
cld
xor
std
or
call
xor
psubb
jle
test
push
xor
rcr
fcmovb
sub
add
loop
int
pop
in
xor
icebp
subl
fmuls
clc
les
mov
add
mov
add
testl
into
nop
cmc
jg
ret
mov
das
in
pop
lcall
movl
into
cwtl
in
sbb
push
testl
rcl
sbb
pop
xchg
aas
push
cmp
mov
jmp
add
pop
add
inc
jl
inc
add
lock
xor
sbb
add
rclb
dec
mov
mov
xor
add
lock
sti
mov
add
jae
decb
inc
popf
sbb
imul
test
mov
xor
cld
adcb
add
lock
sti
inc
pop
add
jno
ud0
pop
std
mov
iret
js
inc
out
add
out
sub
lock
add
addr16
roll
fcoms
sti
jg
inc
sahf
add
clc
or
in
aad
xchg
xchg
popa
fcomps
cmp
sub
jmp
mov
push
jo
xor
out
push
or
add
std
pop
adc
inc
add
add
push
repnz
sti
mov
imul
sbb
push
jl
pop
lret
mov
add
xchg
mov
or
pushl
or
sub
jge
test
stc
orb
push
sti
sbb
sbb
call
xor
call
std
or
mov
jmp
loop
mov
lods
daa
push
pusha
add
mov
in
pusha
lods
lock
jo
xchg
inc
lods
pop
test
jo
inc
je
rolb
insb
inc
or
imul
rcr
jo
xchg
hlt
pop
call
sbb
add
mov
shll
jg
mov
faddl
xor
mov
adc
rolb
ret
out
incl
add
jecxz
xor
mov
shll
jg
inc
push
mov
vmovaps
xchg
mov
push
add
aas
push
mov
push
pop
pop
nop
out
ret
push
push
adcb
jg
jno
leave
mov
mul
jle
movq
mov
scas
mov
xor
mov
and
les
cmpsl
mov
mov
add
stos
adc
sbb
inc
lock
cli
jg
scas
pop
mov
add
xchg
mov
ret
push
std
mov
stos
or
dec
mov
jle
cmp
adc
test
or
pop
or
dec
mov
jle
clc
lahf
sbb
hlt
add
push
jge
or
jno
filds
inc
jge
add
arpl
sub
divl
push
jmp
xor
pop
mov
add
adc
mov
or
dec
out
sub
pop
sbb
add
iret
andb
pop
xchg
lods
adc
add
movsb
adc
inc
jge
test
mov
xchg
sbb
add
add
add
xchg
lods
adc
add
mov
nop
movsb
adc
add
fs
subl
clc
cmp
dec
cld
imulb
sbb
fcoml
add
add
clc
sbb
jecxz
cmpsb
out
icebp
inc
xchg
inc
cltd
inc
in
rcll
cmc
out
pop
stos
imul
hlt
push
add
dec
xchg
jae
add
jo
orb
push
push
mov
add
xor
movsb
add
es
mov
dec
aas
jmp
jb
or
insl
sbb
test
fadds
add
repnz
jno
scas
adc
shlb
adc
jns
outsb
adc
test
adc
call
test
dec
adc
mov
adc
add
outsb
adc
mov
fdiv
mov
add
sbb
cmp
xchg
add
adc
jae
xchg
incb
scas
or
sbbl
sahf
pushf
mov
out
adc
lock
add
lock
pop
imul
mov
int
and
ds
ja
clc
je
or
cmp
add
mov
add
sbb
cltd
sti
xor
add
ret
mov
loope
ja
mov
ljmp
iret
inc
jae
icebp
jnp
mov
ja
orl
les
mov
or
dec
pop
xor
add
jae
push
or
insl
int3
or
das
inc
xchg
cmp
insl
mov
pop
pop
testb
pop
mov
xchg
or
mov
jp
add
enter
inc
push
out
and
sbb
pop
inc
and
add
xchg
addr16
scas
jp
xchg
or
mov
mov
cmp
push
out
pop
popa
xor
arpl
mov
dec
lret
repz
or
add
das
les
mull
out
xchg
mov
js
add
add
push
subl
jecxz
xchg
out
dec
aas
jmp
jmp
mov
cmpsl
pop
call
xorl
mul
cli
adc
xor
mov
icebp
repz
mov
sahf
std
scas
insb
lds
popf
inc
inc
add
adc
add
stos
outsl
inc
jl
sub
add
mov
jo
test
in
lds
call
icebp
pop
add
std
push
mov
sbb
clc
or
ret
cltd
add
add
adcl
add
inc
add
pop
sbb
std
mov
jl
sbbl
stc
dec
or
jb
rorb
add
jnp
xorl
adc
mov
mov
call
in
push
in
add
jmp
ja
call
mov
sar
cmpsb
or
ret
stos
or
lret
daa
aad
dec
mov
jbe
and
pop
test
insb
mov
dec
or
movsl
sti
jnp
adc
loopne
movsl
repz
jnp
sbb
sub
dec
or
lock
test
sbb
test
sub
jmp
dec
cwtl
rorl
incb
lock
mov
push
imul
mov
mov
out
jo
inc
nop
mov
iret
jp
ret
lods
or
mov
jbe
divb
add
add
lcall
or
mov
out
xchg
jbe
call
pop
jl
out
mov
inc
xlat
mov
jne
pop
mov
movsl
hlt
inc
mov
aaa
out
push
or
std
adc
inc
testl
mov
push
out
sbb
xchg
cld
divl
push
pop
std
add
hlt
pop
outsb
imull
shr
push
aas
jmp
add
fucomi
sti
push
out
shlb
add
repz
xor
lds
std
es
push
add
ficompl
sbb
je
idiv
das
sbb
sub
fs
notb
out
idiv
std
insb
ja
std
fidivrs
mov
cld
or
inc
sub
or
popa
hlt
les
jmp
mov
imul
add
push
call
dec
data16
fiadds
cmpsl
fimull
sahf
add
je
jle
cmpb
cld
fisubs
ret
push
mov
mov
push
inc
adcl
divl
leave
arpl
adc
add
ret
roll
cli
sahf
add
rolb
add
mov
or
arpl
jns
mov
test
lds
repnz
cmp
lds
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
add
lock
out
lock
out
lock
out
lock
out
lock
out
lock
in
cld
or
mov
jo
jecxz
cmp
shll
daa
out
es
dec
daa
pop
jno
imul
daa
pop
insb
adc
dec
imul
adc
ljmp
inc
sbb
leave
lret
addr16
leave
mov
xor
bound
adc
insl
add
add
arpl
adc
cli
fsubrs
or
popa
shll
arpl
add
jb
shll
popl
popa
insl
xchg
ja
and
jbe
pusha
bound
imul
inc
fs
inc
insb
sub
jmp
mov
add
add
add
add
add
add
add
pop
add
add
add
dec
add
add
add
pop
add
add
add
dec
add
add
sub
fstl
mov
pop
push
add
or
dec
adc
dec
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
lock
add
lock
add
lock
add
filds
add
filds
add
filds
add
filds
add
filds
add
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
add
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
fdivs
lock
je
jle
jne
pop
add
ja
mov
gs
inc
jnp
jmp
jmp
jp
jmp
enter
repz
pop
or
es
add
repz
loope
addr16
jp
cli
filds
insb
push
imul
stc
aam
jno
js
sbb
pop
arpl
xchg
arpl
mov
xchg
push
fs
repz
mov
jp
xchg
mov
and
fdiv
imul
ja
jle
add
mov
xor
xchg
outsl
push
or
add
push
xor
imul
outsl
push
mov
js
arpl
jne
jne
pop
jb
stc
js
outsb
ljmp
negb
add
arpl
sub
insb
sbb
addr16
add
jns
jae
or
xor
jge
popa
inc
pop
jbe
pop
or
je
outsl
lock
imul
add
insl
arpl
fs
mov
jno
andl
inc
inc
jb
adc
sbb
pop
adc
inc
gs
fisubrs
cld
inc
jb
adc
adc
frstor
rorl
jns
in
pop
insb
int
jo
aam
pop
pop
ret
add
int3
icebp
add
mov
jo
loopne
xor
loopne
add
add
popf
scas
jno
xchg
frstor
add
outsb
lock
bound
push
popl
popa
jl
outsb
push
jne
bound
jnp
pop
pop
mov
jnp
jno
pop
mov
insb
jge
inc
insb
push
je
jne
xor
cmp
xor
and
add
dec
insl
imul
addr16
add
pop
push
outsl
jne
into
imul
add
scas
je
imul
or
pop
add
lock
sbb
filds
shll
pusha
shlb
out
pusha
into
outsl
xchg
push
iret
bound
push
outsl
enter
mov
arpl
test
jb
pop
pop
jo
inc
js
mov
pop
mov
ss
aaa
xor
hlt
push
imul
pop
jmp
add
push
inc
add
adc
inc
or
inc
incb
jno
and
pop
arpl
out
popa
or
jnp
adc
in
jbe
add
pop
insl
push
imul
and
sbb
and
sbb
pop
jae
dec
popa
pop
outsb
cs
imul
arpl
subl
jo
popa
add
pop
outsb
jle
add
je
add
ja
add
je
gs
pop
arpl
insb
insb
sub
jo
sub
add
gs
jb
ja
xor
data16
pop
insb
imul
pop
jbe
add
pop
pop
gs
pop
popa
add
ss
add
data16
popa
lock
xchg
add
mov
xor
xchg
lods
jbe
add
xchg
imul
mov
push
jb
jno
xchg
addr16
pop
dec
jl
pop
dec
fisubrs
and
popa
or
push
jo
or
pop
popa
fs
je
or
pop
jb
sub
aad
jo
into
add
out
jbe
rorl
data16
adc
imul
jae
leave
out
arpl
add
pop
shll
push
xlat
pop
mov
aam
lock
int
xchg
pop
insb
dec
pusha
xchg
pop
pop
pop
lcall
pop
jl
push
bound
push
pop
mov
dec
fs
sbb
pusha
dec
pop
or
dec
arpl
pop
push
arpl
jns
addr16
pop
xor
dec
imul
bound
arpl
add
pop
or
jnp
pop
sbb
pop
stc
outsb
fildl
adc
pop
add
lcall
lret
xchg
outsb
ret
xor
subl
fwait
imul
rep
mov
pop
push
jb
dec
dec
outsb
mov
add
repz
jno
push
dec
jno
adc
jbe
adc
pop
add
sbb
arpl
hlt
sbb
arpl
les
xor
rcrl
sbb
mov
imul
add
js
insl
call
add
fs
or
sub
xor
xor
addr16
add
popa
arpl
data16
add
jbe
imul
js
jae
add
xor
or
dec
pop
outsb
leave
jns
popa
cmp
add
imul
pop
outsb
mov
outsl
ss
popa
add
jns
gs
outsl
add
fs
pop
jns
popa
std
arpl
out
pop
outsb
je
cli
gs
gs
xlat
sbb
xlat
ret
ja
lock
add
adc
xor
add
xchg
int
add
pop
addr16
insl
pop
pop
fisubs
xchg
jo
push
subl
mov
xchg
add
xchg
pop
addr16
fisubs
cmp
outsl
add
insb
insl
push
adc
jo
lock
arpl
cmp
add
pop
arpl
inc
popa
imul
adc
outsb
shrl
outsl
out
push
fdivs
add
je
pop
lock
je
js
pop
xchg
pop
add
ja
push
pushf
push
fsubrs
sarl
push
lret
gs
jle
out
pop
pop
leave
bound
mov
arpl
outsl
push
pop
addb
pop
mov
jne
insb
dec
jbe
sbb
ja
inc
pusha
pop
pop
lock
pop
popa
push
gs
addr16
add
add
add
pusha
push
pop
lock
dec
fcomps
cmp
arpl
mov
ja
sbb
into
dec
jbe
ret
adc
pop
outsb
or
pop
jbe
in
bound
mov
int3
lcall
rcll
jb
xchg
pop
fs
inc
data16
dec
pop
ja
dec
pop
outsb
mov
pop
mov
jno
sbb
add
xor
bound
insb
dec
daa
pop
das
sbb
sbb
sbb
sbb
dec
adc
add
data16
popa
mov
jb
arpl
push
gs
push
insl
popa
addr16
add
gs
clc
data16
xor
imul
arpl
mull
push
inc
pop
outsb
cmp
insb
add
pusha
imul
add
pusha
outsl
das
pop
add
add
addr16
js
pop
insb
insb
leave
dec
pop
jae
data16
dec
outsb
add
xor
pop
xor
cltd
bound
and
gs
bound
cmp
lock
jbe
push
cmp
addr16
frstor
int
jne
rcr
cmp
sbb
ljmp
aam
add
jmp
popa
jmp
add
jmp
jno
push
xor
or
add
fstpl
subl
outsb
pop
ret
pop
insb
push
ficomps
pop
xchg
push
jno
xchg
inc
push
insb
inc
jg
jo
jg
arpl
ficomps
and
dec
popa
or
arpl
add
cmp
add
pop
adc
inc
arpl
popa
cmp
pop
cmp
add
sbb
push
push
pop
shlb
lock
add
add
xor
mov
add
pop
into
jne
outsl
faddl
cwtl
jb
jae
pop
push
jns
outsl
or
jne
outsl
shlb
jbe
sub
sbb
xchg
insb
aad
dec
push
out
and
add
xor
push
add
or
push
adc
dec
or
adc
push
shlb
add
cmp
adc
aas
lret
xor
fsubrs
sbb
inc
cmp
dec
xor
dec
push
and
push
push
mov
mov
cmp
xor
repz
add
cmc
push
dec
cmpsb
das
cmp
out
push
add
repz
add
add
and
inc
mov
das
push
add
imul
je
xchg
fs
pop
outsl
pop
lret
jb
inc
je
xor
outsl
imul
insb
insb
insb
pop
outsb
imul
dec
je
inc
outsb
addr16
dec
gs
pop
jns
imul
push
add
sbb
add
or
add
push
outsb
gs
add
cmp
cmp
gs
push
fs
outsl
imul
push
jb
xchg
push
push
pop
subl
sub
add
lock
add
adc
jo
add
cs
pusha
add
add
loop
js
roll
dec
pop
les
add
lock
add
add
aad
data16
push
jb
les
outsb
ret
add
out
add
jo
pop
arpl
pop
insb
lock
dec
mov
push
ja
inc
out
lock
out
cli
sub
test
dec
cs
and
test
jno
test
subl
sub
add
sub
sub
xor
add
push
out
dec
jecxz
xor
out
stos
pop
movl
je
jo
add
out
lock
xlat
jae
shll
add
out
lock
pusha
dec
jae
inc
pusha
push
add
repnz
add
pop
add
xor
adcl
pop
jmp
add
repz
inc
mov
mov
pop
call
repz
dec
push
add
pop
or
add
xrelease
jmp
or
insl
dec
out
arpl
fcoms
jmp
push
or
push
add
popf
insl
imul
es
stc
mov
push
call
repz
dec
loopne
ss
jb
addb
jmp
flds
mov
imul
pop
imul
add
add
mov
insl
xchg
inc
insl
inc
outsb
jo
je
push
sub
aas
outsl
add
or
add
imul
insb
je
pop
push
insb
jae
or
add
pop
add
dec
xor
outsb
popa
cmc
or
add
out
push
jae
sbb
dec
and
outsl
sub
je
fwait
push
addr16
pop
jne
stos
inc
jae
pushf
pusha
outsb
andb
pop
outsb
sub
imul
lcall
ss
fs
test
jbe
cmp
push
push
xlat
sbb
in
jecxz
insl
add
and
dec
gs
and
and
add
loope
or
cs
int
outsl
sub
push
pop
gs
movsb
adc
cmp
push
hlt
std
mov
int
xchg
jo
sbb
add
jae
clc
jmp
push
outsl
push
jo
sub
inc
push
std
xor
outsl
adc
sbb
ja
fisubl
mov
jae
data16
das
pop
push
pop
push
xor
add
pop
pop
add
pop
iret
jno
std
mov
dec
jo
jo
pop
mov
dec
pop
aam
adc
pop
into
sbb
or
jne
push
aam
lea
jo
add
pop
addr16
cmpsl
aas
sub
adc
pop
addr16
inc
push
or
cmp
adc
cs
add
push
shrb
insl
sahf
add
cmp
aaa
loope
adc
in
fiadds
dec
push
arpl
cmp
lds
dec
jle
je,pt
sub
jmp
in
cmp
decl
pop
outsb
inc
loopne
jo
sbb
push
aaa
cmpsl
push
aas
sbb
imul
sbb
popa
je
push
popa
jb
inc
jno
sbb
imul
add
xor
outsb
arpl
cmp
push
movsl
jb,pt
mov
add
test
jbe
mov
xor
dec
insb
insb
outsb
bound
je
outsb
fs
aas
gs
push
dec
imul
addr16
cs
popa
outsb
int3
imul
push
add
push
add
push
imul
add
cs
mov
or
mov
insb
jo
sub
je
loopne
jb
lret
mov
insb
jo
stos
imul
movl
je
lret
jb
inc
popf
insb
dec
dec
cmpsl
add
cmpsl
jno
and
pusha
inc
pop
je
arpl
push
add
pop
pusha
jb
jb
push
or
ds
outsb
and
popa
add
aad
jno
xlat
cmp
lock
push
jo
pop
jno
fimuls
arpl
add
xor
popa
mov
xor
pop
xchg
insb
xor
imul
scas
push
add
push
stos
push
mov
jl
rcrb
mov
pop
inc
outsb
ret
inc
lock
pop
pop
insl
xchg
jb
pop
test
sub
mov
push
mov
pop
push
adcb
adc
aas
imul
test
sbb
outsl
sbb
push
pop
push
aaa
pop
pop
insl
inc
pop
aad
pop
add
cmp
push
cli
xor
arpl
inc
test
inc
inc
ret
sbb
push
arpl
push
insl
sbb
sbb
sub
push
imul
pop
je
cmpsb
arpl
addr16
popf
xor
add
add
inc
insb
jno
inc
push
insl
mov
pop
push
je
push
push
nop
inc
inc
mov
push
xchg
pop
jge
aaa
jb
add
gs
repz
add
repz
add
repz
add
repz
add
repz
add
dec
push
add
dec
push
add
pop
push
add
pop
push
add
dec
push
add
dec
push
add
sbb
add
sbb
add
or
or
add
sbb
add
sbb
add
or
add
or
add
flds
add
leave
add
add
flds
dec
push
sbbb
jnp
adc
das
xor
lock
pop
dec
sub
dec
pop
pop
sub
in
repnz
repnz
or
enter
mov
sbb
add
aad
push
pop
mov
es
je
or
xchg
add
std
jno
mov
add
xchg
adc
arpl
enter
mov
push
pop
inc
lret
pop
rclb
jb
pop
sub
je
out
ss
push
jp
pop
and
adc
pop
sbb
jb,pn
pop
sub
push
push
cld
push
out
frstor
pop
push
inc
inc
mov
cmp
gs
gs
inc
dec
xlat
push
sbb
pop
cmp
ss
jae
push
out
lea
pop
mov
add
mov
stc
adc
xchg
bound
push
outsb
ficoml
push
sarb
xor
add
mov
push
lock
xchg
push
cmp
mov
pop
mov
dec
pop
imul
rcrl
repz
sub
dec
and
pop
inc
inc
mov
inc
addr16
inc
je
mov
imul
push
sbb
mov
push
sbb
imul
xchg
aaa
outsb
add
add
andb
push
pop
arpl
dec
push
movsl
pop
fs
pop
daa
inc
push
bound
push
push
jmp
dec
outsb
je
sbb
push
addb
add
pop
dec
or
jae
add
sbb
mov
add
outsb
cs
add
outsb
imul
push
add
dec
inc
inc
add
in
inc
inc
in
add
inc
gs
push
jb
sbb
imul
pop
jb
inc
inc
insb
push
insb
pop
insb
stos
dec
cmp
jne
insb
inc
push
jns
and
sbb
push
jle
insb
bound
add
pop
je
lock
arpl
insl
push
xor
push
je
scas
xor
push
loop
data16
add
xor
into
jo,pt
shll
insl
filds
pop
ret
insl
sbb
ret
inc
pushf
add
pop
xchg
adc
shrb
inc
popf
shrl
movsb
out
and
xchg
add
inc
pushf
mov
dec
add
arpl
dec
arpl
insl
push
xor
pop
je
pop
lods
aaa
inc
daa
and
xchg
add
pop
lcall
ss
aaa
adc
pop
out
add
pop
inc
inc
lods
bound
mov
aaa
sub
mov
xor
cmp
and
es
outsl
lret
imul
xchg
push
gs
pop
or
xor
jo
push
sub
xor
aaa
inc
daa
inc
pop
mov
add
add
mov
outsl
and
add
push
xor
jmp
adc
mov
xlat
inc
jae
sbb
cltd
repz
push
imul
mov
inc
push
enter
and
push
pop
lds
pop
shlb
shlb
sub
and
filds
adc
add
hlt
xor
push
std
repz
pop
fistl
inc
int
pop
push
sbb
aaa
insl
add
imul
push
push
add
data16
gs
gs
insb
popa
jp
inc
pop
imul
outsl
je
bound
dec
pop
je
sbb
rorl
popa
mov
cmp
push
and
add
data16
pcmpgtb
xor
pop
ljmp
popa
std
or
pop
pop
imul
pop
je
adc
cli
cmp
shlb
fs
mov
lret
bound
stos
cmp
int
pop
les
dec
mov
add
insl
arpl
insl
insb
adc
cmp
imul
bound
dec
sub
add
mov
fidivs
push
arpl
cmp
jecxz
pop
imul
xor
jp
inc
push
insb
lock
push
jb
adc
mov
ds
add
push
arpl
push
pop
pop
enter
shlb
pop
out
inc
push
shll
cmpsb
aas
dec
push
out
dec
push
mov
add
add
push
les
mov
pop
mov
and
xor
adc
stos
insb
add
lcall
cmp
roll
cmp
pop
inc
push
push
aas
inc
push
faddl
cmp
pop
dec
push
push
cmp
popa
ret
popa
ret
push
fidivs
or
push
cmp
pop
or
ss
push
test
pop
gs
out
xchg
push
add
nop
push
push
lock
inc
add
daa
fs
push
push
and
das
xor
adc
arpl
loope
arpl
das
daa
push
mov
ss
jp
pop
dec
mov
pop
and
lds
push
push
mov
push
je
sbb
push
and
rcrl
jmp
or
arpl
ret
leave
add
xlat
push
jo
hlt
dec
push
cmp
inc
pop
pop
fwait
imul
xlat
push
push
and
pop
imul
or
mov
and
or
data16
test
jb
scas
push
je
js
popa
add
and
push
dec
outsl
ja
jae
sti
sub
inc
pop
dec
push
push
jge
jno
mov
add
xor
inc
push
or
dec
popa
mov
push
popa
pop
fstpt
push
jb
pop
data16
adc
test
pusha
jb
and
mov
pop
je
shrl
push
sarb
inc
add
dec
ret
addr16
mov
xor
dec
mov
inc
ret
xor
push
dec
mov
dec
and
push
add
add
sarb
and
outsb
add
xor
push
dec
push
pop
loop
xor
arpl
rsqrtps
cmp
push
jne
adc
mov
push
jb
or
and
dec
or
pop
sbb
mov
pop
cli
add
addr16
pusha
dec
dec
pop
ds
out
aas
pop
shll
push
pop
fisubrl
pop
pop
movsl
insb
push
out
push
push
les
pop
mov
dec
inc
pop
xchg
aas
pop
pop
fadds
dec
test
sub
cmp
pop
push
xchg
push
test
arpl
lock
push
fcompl
pop
push
arpl
lock
pusha
ret
es
add
xchg
pop
cs
loopne
jb
xchg
inc
push
cmp
add
xor
pop
sti
nop
sub
imul
push
push
je
dec
pop
jo
aas
pop
add
push
pop
arpl
out
inc
cmpsl
xlat
add
or
ss
jge
pop
inc
jnp
arpl
daa
fs
test
push
push
push
mov
addr16
cmp
push
pop
sub
add
fstl
pop
dec
stc
ss
mov
add
xor
fs
xor
imul
inc
fs
push
push
gs
arpl
pop
jb
cltd
arpl
leave
imul
pop
insl
lods
push
push
outsl
jnp
add
sub
mov
outsl
jae
arpl
mov
imul
gs
imul
add
cmp
jl
aas
outsl
outsl
sub
or
jo
sbb
lock
int
dec
outsb
les
push
outsb
int
cmp
inc
pop
addr16
inc
dec
add
lock
je
push
arpl
push
arpl
xor
in
push
dec
dec
lods
dec
add
fs
loopne
push
lock
dec
push
add
cmp
push
jb
ret
adc
jl
pop
mov
and
dec
pop
jb
insb
fs
bound
jnp
push
rolb
dec
fcoms
arpl
arpl
scas
xor
and
dec
aaa
pusha
lds
int3
xor
cltd
push
aaa
gs
arpl
scas
inc
xor
pop
sub
sbb
adc
jl
push
bound
sbb
add
mulb
ret
dec
cmp
pop
dec
dec
push
ret
bound
fldcw
and
imul
enter
mov
and
add
dec
add
cmp
pop
xchg
add
sbb
addr16
mov
insb
cmp
push
push
cmp
pop
insb
jmp
fwait
daa
je
add
pop
pop
adc
daa
outsb
sub
mov
outsb
setne
sbb
jno
push
pop
jno
arpl
ds
insl
iret
es
push
pop
push
jne
and
pop
inc
rorb
lcall
pop
jmp
sub
and
mov
bound
mov
pop
jae
das
popa
jae
cmp
add
dec
pop
inc
push
or
jno
mov
push
jne
sub
cmc
pop
js,pn
data16
xor
fildl
push
jae
xor
cld
pop
add
xor
xor
jo,pn
pop
je
or
data16
sub
lods
dec
jb
mov
pop
push
mov
dec
imul
sub
gs
popa
outsb
gs
or
add
arpl
lock
dec
cs
add
inc
push
outsb
rcll
data16
mov
lock
ret
pop
pop
jb
scas
xor
pop
add
push
pop
jne
add
lods
notl
mov
push
addr16
adc
push
xchg
and
xchg
or
dec
jo
sbb
data16
or
dec
loope
and
push
jno
add
int
adc
push
and
mov
sub
mov
bound
xchg
inc
js
pop
mov
cmp
dec
add
jge
add
jge
int
mov
push
lcall
pop
pop
imul
push
aaa
sarl
pop
ret
shlb
push
popf
xor
inc
push
xchg
sub
pop
cmpb
xor
add
dec
das
and
xor
pop
pop
es
push
popa
cmp
bound
pop
mov
cs
mov
push
sub
add
cmp
mov
aas
aaa
push
lcall
add
and
jne
shrl
sahf
lods
cmp
aam
jno
mov
fs
movsl
cmp
cwtl
xor
add
in
push
dec
das
call
bound
fsub
push
mov
jne
mov
sub
rolb
or
pop
push
push
dec
cmp
inc
sub
push
inc
aad
sub
pop
push
fisttpll
add
outsb
sub
test
push
pop
out
sub
inc
dec
idivl
insb
pusha
outsb
je
clc
fs
pop
add
add
xchg
add
fs
insb
dec
repz
push
jp
data16
daa
jb
add
and
and
pop
outsl
add
sub
pop
je
out
outsl
cs
and
addr16
fldt
fs
cld
pop
je
imull
outsl
pop
cwtl
repz
pop
pushf
and
arpl
and
xor
fcompl
pop
jge
jno
add
aam
je
mov
push
or
dec
arpl
pop
add
pop
shlb
jecxz
pop
fmull
mov
arpl
mov
rorb
insl
into
pop
push
pop
ret
insb
int
push
data16
incl
jae
push
gs
mov
scas
push
test
dec
mov
pop
add
sbbl
dec
andps
add
pop
and
popa
jo
pop
mov
inc
and
test
xor
dec
aaa
sahf
bound
sub
cmp
ss
bound
out
daa
cmp
xor
ss
xor
scas
daa
test
pop
jp
ret
pop
roll
cmp
xor
lods
das
pop
popa
xchg
cmp
lahf
push
pop
pop
mov
add
dec
cmp
xor
pop
xchg
xor
add
xor
pusha
inc
push
or
add
or
jb
das
xor
xor
sub
aaa
rorb
mov
push
addr16
ss
add
sbb
push
pop
lcall
push
jnp
push
push
jp
xor
mov
add
xor
dec
mov
push
insl
pop
rolb
push
xchg
cmp
and
xor
push
addr16
xchg
xor
xor
fwait
xor
dec
and
add
pop
gs
out
outsl
iret
pop
popa
arpl
add
fwait
push
popa
jb
push
jo
cltd
inc
push
push
jmp
stc
dec
dec
cltd
inc
push
push
add
pop
cld
dec
add
out
jb
and
add
sbb
gs
int
je
pop
cmp
out
or
xchg
pop
outsl
cmp
push
add
pop
cmp
out
or
movsb
pop
pop
add
and
pop
pop
pop
je
out
dec
outsl
lock
jne
and
aaa
rcrb
shlb
inc
add
push
loope
and
add
push
arpl
pop
jb
and
adc
push
je
les
and
dec
push
add
xor
insb
aam
pop
jo
lea
pop
fiadds
pop
les
jb
pusha
sbb
std
add
pop
inc
test
dec
push
jne
add
mov
or
dec
xor
add
dec
and
aas
cmp
or
cmp
push
dec
shlb
inc
stos
inc
pop
inc
sbb
inc
cld
or
cli
push
in
test
lret
dec
stos
inc
ret
jmp
adc
hlt
fidivrl
ret
adc
dec
movsl
das
mov
dec
mov
cmp
rorl
bound
sbb
add
loop
sti
inc
xlat
clc
clc
sbb
cmc
repz
lret
dec
add
push
sub
xor
mov
clc
inc
adc
xor
push
and
jbe
std
and
hlt
xor
push
and
outsb
shl
inc
push
mov
inc
sub
xor
aad
push
lahf
es
adc
cs
adc
pop
mov
and
xchg
add
std
and
jno
add
arpl
add
push
popf
xor
das
add
cmp
aaa
je
mov
repnz
push
lret
and
pop
inc
lods
daa
imul
out
and
aas
dec
sbb
pop
popa
and
insl
fincstp
inc
xor
cli
insl
je
push
outsb
popa
mov
popa
jns
push
imul
add
add
in
jne
pop
popa
outsb
cmp
add
adc
inc
insb
sub
push
mov
push
popa
gs
imul
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
or
push
fstl
fs
mov
pop
je
add
and
inc
or
inc
mov
adc
int3
push
jno
mov
outsl
adc
dec
arpl
pusha
push
jb
andb
mov
outsl
adc
dec
arpl
rclb
mov
pop
je
fsubl
iret
xchg
dec
imul
pop
ja
mov
ret
ds
les
xchg
and
inc
and
lock
push
push
lcall
add
add
and
pop
lock
add
dec
sub
pop
push
pop
sbb
xor
pop
and
pop
pop
ss
inc
cmp
pop
inc
and
and
dec
xor
mov
and
xor
push
lock
les
sbb
sub
and
aas
fwait
pop
loope
lcall
pop
mov
add
add
and
jmp
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
ret
xor
pop
sbb
and
hlt
push
jb
or
insb
add
aas
jno
sbb
pop
cmc
or
arpl
and
shl
push
pop
fstp
push
insl
movsb
add
shll
mov
add
push
jno
lret
es
jno
or
insl
add
xor
add
ljmp
ja
sbb
das
or
inc
dec
aam
push
and
loope
gs
lock
add
in
jno
call
out
insl
arpl
cli
outsl
je
out
dec
popa
add
lcall
inc
imul
hlt
jns
mov
lock
icebp
pusha
data16
lcall
hlt
jns
jge
pop
pop
lock
aad
xor
lods
push
insl
xor
pop
ret
dec
iret
xor
les
sub
or
pushf
pop
sub
lods
sub
std
sub
lods
sub
xor
iret
mov
repnz
add
arpl
hlt
push
jno
sbb
jno
add
je
adc
imul
cmp
les
pop
inc
ret
and
jbe
arpl
insb
add
lds
lock
inc
insb
xadd
xor
cltd
xor
cmp
ficompl
jnp
mov
mov
das
aam
xchg
push
ret
sub
sub
lock
dec
sub
add
sbb
xchg
sub
movsb
push
out
xorb
sub
daa
adc
cmp
and
aas
cmp
repnz
sub
add
and
es
and
and
sub
pop
movsl
and
fldcw
and
adc
mov
dec
sbb
add
les
arpl
mov
add
inc
fsubrs
hlt
ss
loope
mov
mov
das
adc
in
sbb
dec
inc
adc
movsb
cmp
mov
cmp
sti
repz
arpl
sub
cmp
add
cmp
arpl
pop
sub
cmp
or
or
push
je
xchg
sub
repz
inc
fiaddl
add
xor
pop
inc
push
dec
push
push
mov
je
imulb
lea
push
insb
idiv
push
jo
outsb
jl
ds
jp
pusha
inc
mov
sti
fs
dec
ljmp
push
jmp
sti
push
lods
idiv
inc
dec
add
push
in
out
fs
idiv
dec
sbb
push
add
cld
inc
jb
clc
out
pusha
dec
div
jae
mov
pusha
add
sti
cs
or
insb
add
inc
jb
outsb
xor
insl
add
and
xor
add
popf
add
lock
add
fdivr
jecxz
cld
adc
leave
arpl
jecxz
jl
mov
mov
lods
inc
stos
sbb
in
jl
mov
add
test
lods
cmp
and
pop
add
es
pushl
arpl
sub
sbb
insl
dec
mov
es
or
and
and
and
sub
pop
dec
xor
ss
push
add
mov
add
push
out
movl
flds
sbb
aad
pop
pop
lea
sbb
rolb
add
push
mov
add
push
dec
add
push
and
push
dec
add
push
adc
enter
xchg
push
stc
add
push
lock
push
repz
add
pop
add
fiadds
lock
sbb
push
xor
repz
and
and
dec
into
fbstp
cmp
lea
jne
shll
les
dec
insl
les
add
and
shrb
mov
and
jno
shrb
test
xor
dec
xchg
cmp
lcall
jbe
out
and
pop
arpl
xor
jmp
cmpsl
and
and
push
push
or
and
inc
sbb
es
add
loope
gs
jno
in
pop
and
add
cmc
popf
push
jae
cli
call
loopne
push
movsb
cli
jne
stos
movsb
and
outsl
cmp
pop
xchg
out
arpl
pop
gs
pop
popa
jb
out
and
pop
push
xchg
inc
push
add
out
push
jmp
in
cs
add
in
and
jmp
imul
pop
inc
cmp
pop
add
add
pop
dec
imul
sbb
xor
mov
bound
sub
movb
lock
inc
jb
aas
sub
add
dec
dec
xor
sbb
imul
sub
dec
lock
push
lods
jbe
dec
lock
and
jno
xor
addr16
xchg
daa
pop
lds
and
jno
xor
fs
dec
and
movsl
dec
add
mov
repnz
jle
sub
popf
pop
je
mov
sub
inc
xor
loope
or
wrmsr
pop
aaa
sbb
sbb
out
sub
and
inc
dec
cmp
daa
adc
or
cmp
es
xor
add
mov
push
adc
mov
das
std
daa
mov
xor
int3
xor
add
add
sbb
lods
pop
jns
pushf
dec
jns
lret
pop
jl
lock
popf
sub
and
push
mov
inc
sub
dec
sub
lock
add
sub
sbb
dec
add
sub
hlt
dec
push
sbb
and
add
and
jo
int
inc
fxch
daa
add
add
xchg
inc
push
mov
fidivs
cs
and
je
sbb
pop
mov
or
and
fsubl
add
push
jmp
filds
addr16
loop
add
mov
dec
insb
or
fisubrs
lods
out
add
ds
sub
add
stc
pusha
jae
in
push
push
fldenv
lsl
call
clc
pushl
mulb
in
loope
add
outsb
je
jecxz
jae
in
fs
inc
pop
jae
inc
fs
outsb
jae
inc
pop
jae
push
outsl
gs
dec
popa
jp
dec
outsl
imul
push
or
mulb
in
jae
pop
popa
popa
jb
inc
insb
test
pusha
inc
mov
cmp
je
jmp
jno
add
loope
insb
xchg
inc
pop
inc
fs
add
dec
out
daa
add
ljmp
pop
or
pop
add
insb
sbb
xor
inc
or
insl
sbb
sahf
ds
ss
add
mov
sub
cs
sub
inc
les
and
xchg
and
imul
push
lock
push
les
arpl
add
xchg
push
outsb
xchg
das
add
arpl
mov
cmp
mov
dec
and
push
push
xor
cmp
xchg
das
and
inc
sub
sti
cmp
push
not
inc
sbb
inc
fcmovnbe
sti
maskmovq
idivl
cli
xor
fdivrs
sub
negb
add
sub
cmp
push
mov
sbb
int3
das
and
mov
add
add
and
in
and
xor
push
movsb
push
mov
fucom
xor
xor
jecxz
idiv
mov
in
pushl
and
arpl
shr
dec
xlat
sbb
and
aaa
jno
and
incl
in
push
inc
sbb
pop
push
aas
int
inc
xor
adc
cmp
repz
addr16
push
cmp
icebp
add
into
sbb
sbb
push
inc
mov
mov
mov
pop
pop
popa
mov
repz
dec
cmpsl
scas
push
aas
mov
adc
scas
mov
and
push
repnz
add
divl
stos
idiv
inc
test
inc
mov
aas
push
push
stc
cmp
insb
mov
popa
add
jecxz
jae
in
fsts
jb
add
fidivs
call
lock
jb
aas
add
or
out
imul
jecxz
je
out
push
push
mov
jne
fwait
push
jne
movsb
add
add
jb
cwtl
add
gs
movsl
mov
push
and
in
in
sub
popf
repz
fisubrs
xlat
mov
add
add
in
cwtl
push
add
in
and
dec
and
fnstcw
xchg
inc
push
push
push
pop
ljmp
dec
sti
xor
je
ljmp
inc
lods
add
lods
xor
insl
and
in
or
add
and
mov
fbld
mov
sub
mov
sub
adc
lcall
add
xor
and
and
in
in
cmp
sbb
in
push
lea
jae
mov
dec
push
mov
push
dec
cmp
xor
pop
inc
inc
sbb
popa
sbb
dec
sbb
cmp
sbb
xor
add
sbb
cs
es
or
pop
and
sbb
xor
add
sbb
lds
or
shlb
adc
mov
loopne
xchg
push
push
pop
add
incl
pop
lahf
adc
arpl
repz
insl
popl
sbb
fwait
push
inc
inc
xchg
fldcw
test
data16
inc
jb
hlt
dec
push
cmp
arpl
sub
insl
push
aam
arpl
sub
jb
sub
push
or
sub
jmp
pop
adc
add
push
sbb
in
dec
push
sbb
outsb
or
sub
pop
fcmovb
sbb
iret
push
inc
mov
mov
call
pop
jo
cmp
outsb
je
out
je
out
and
jae
test
bound
dec
cmp
push
jo
popa
jae
dec
push
push
lret
insb
mov
data16
add
out
data16
add
in
jae
sub
pusha
pop
add
dec
sub
add
add
popa
je
fdivr
inc
call
fdivr
pop
pop
cmp
dec
mov
push
lock
sub
lret
fldenv
cs
shrb
jae
imul
lods
and
sbb
aad
sbb
leave
lods
inc
pop
add
mov
xchg
sub
mov
push
jne
mov
add
inc
cmp
xchg
dec
add
movsl
dec
xor
push
add
jae
aaa
sbb
insl
inc
dec
push
insb
inc
add
add
out
add
sub
add
out
add
out
add
pop
cmpsl
add
cmpsl
add
cmp
add
cmpsl
add
add
inc
cmpsl
add
cmpsl
add
and
cmpsl
add
sub
add
cmpsl
add
sub
add
das
cmpsl
add
xor
add
xor
add
push
daa
add
adc
daa
add
sbb
add
sbb
add
pop
daa
add
and
add
mov
add
mov
add
mov
add
jnp
add
add
jnp
sub
ret
hlt
daa
xchg
test
repz
test
repz
xchg
test
repz
xchg
test
repz
movsl
test
repz
mov
repz
test
repz
mov
sub
int
sub
lock
sub
jne
sub
xor
sub
add
in
mov
sub
or
sub
mov
ret
or
leave
or
leave
or
aad
pop
add
adc
dec
add
pop
rcrl
add
pop
cltd
add
push
xlat
mov
dec
fcomps
add
sbb
add
or
sbb
aas
insb
mov
loop
jae
or
sbb
push
push
in
loope
push
push
cmp
outsb
loopne
sub
or
cmpsb
clc
or
mov
outsl
shlb
sbb
stc
lret
rcrb
loope
rcl
sub
mov
fildll
adc
sub
insb
add
mov
int
arpl
int
pop
aad
loope
pop
into
jecxz
mov
int
jmp
repnz
cmp
arpl
loop
xor
clc
pop
insb
dec
scas
and
dec
sbb
bound
or
and
xlat
fadds
repnz
jmp
lahf
out
lock
and
add
ss
pop
add
adc
les
and
mov
sbb
sub
out
roll
and
daa
les
aad
nop
and
ss
sbb
sub
out
xchg
inc
jns
mov
sub
xor
push
cmp
mov
dec
sbb
dec
adc
inc
add
and
sbb
pop
je
sub
fistl
or
add
xlat
and
inc
sub
int3
sbb
in
dec
hlt
clc
adc
and
gs
repz
arpl
or
jb
cmp
imul
add
insb
les
sub
jmp
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
add
repz
add
repz
add
leave
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
pop
or
add
add
dec
or
add
add
pop
or
add
add
dec
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
lods
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
add
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
call
pop
cmp
jge
loop
outsl
pop
cmp
gs
idiv
lock
jmp
cltd
std
jmp
repz
add
add
repz
call
repz
add
repz
jmp
repz
std
jmp
xor
add
xchg
lcall
jnp
std
jmp
icebp
push
add
repnz
add
push
add
hlt
push
add
repz
add
repz
add
repz
add
repz
add
repz
add
and
pop
add
testb
xor
and
add
inc
cwtl
daa
and
hlt
or
adc
sub
iret
or
push
in
test
or
lods
or
repnz
push
xchg
lahf
or
mov
or
sbb
cmc
or
cltd
cltd
lcall
lahf
cwtl
adc
ja
push
add
fwait
or
arpl
or
icebp
xchg
sbb
test
daa
dec
mov
das
repnz
and
add
call
cmpsb
sbb
sbb
add
lock
add
pop
stos
std
lock
std
jmp
add
out
scas
add
push
mov
add
add
test
add
icebp
test
add
add
lods
add
decl
scas
add
lock
add
add
lock
add
stos
add
icebp
mov
add
dec
scas
add
lock
add
add
add
jmp
pop
pop
jecxz
lock
out
sysret
out
pop
pop
out
lock
out
lock
jecxz
out
out
fists
jmp
lock
jmp
lock
jecxz
lock
scas
xchg
jecxz
cmpsl
push
jmp
lahf
xchg
out
xchg
push
jmp
lock
jmp
lock
jecxz
ja
out
outsl
push
jecxz
lock
out
lock
out
lock
jecxz
inc
xchg
add
notl
add
repz
add
jae
jg
jae
sub
push
add
jae
call
repz
add
repz
je
orb
add
push
orb
idivl
jae
jg
repz
sub
pop
sub
idiv
or
push
add
repz
jae
dec
repz
enter
jmp
repz
sub
pop
add
jae
call
in
idiv
or
push
sub
push
add
pop
mov
add
mov
add
adc
cmp
sub
adc
cmp
adc
adc
jmp
mov
cmp
adc
jmp
mov
add
mov
add
or
add
or
add
or
cmp
adc
pop
mov
add
lahf
add
add
lock
addl
lock
add
jo
add
jo
adcl
lahf
adcl
lock
add
call
xchg
add
clc
lahf
add
call
cmpsl
add
lock
clc
xchg
add
lock
add
call
popf
add
lock
incl
call
popf
add
clc
xchg
push
popf
add
call
popf
incl
add
clc
popf
push
popf
incl
lock
add
call
push
out
add
push
out
add
out
repnz
out
repnz
out
add
out
add
push
filds
repnz
out
lock
out
lock
out
repnz
out
lock
fiadds
repnz
out
add
push
out
repnz
out
repnz
out
lock
out
lock
out
lock
filds
repnz
filds
repnz
out
add
lock
out
add
out
lock
out
lock
out
add
out
add
out
repnz
out
lock
out
add
out
add
push
add
icebp
or
jmp
repz
or
repz
loope
push
or
icebp
push
add
repz
icebp
icebp
or
loope
push
add
repz
jmp
adc
add
xchg
std
push
repz
add
add
adc
push
xrelease
call
repz
add
rcll
add
rcll
add
adc
push
repz
add
xchg
call
repz
add
xchg
xchg
std
jmp
cwtl
cmpsb
jge
or
add
mov
addb
cmpsb
std
fldcw
addb
push
add
fldcw
addb
cmpsb
std
incl
add
stos
jge
cwtl
stos
jge
cwtl
or
add
push
addb
cmpsb
jge
cwtl
stos
jge
mov
add
or
add
flds
jge
dec
cmpsb
std
decl
addb
push
addb
add
jge
dec
cmpsb
std
lcall
cmpsb
std
lcall
push
add
or
add
lock
add
lock
loope
jg
add
add
outsl
pop
loope
lock
add
push
pop
loope
dec
lahf
add
lock
add
lock
add
daa
pop
loope
lock
add
lock
add
repnz
add
repnz
add
mov
add
lock
add
lock
add
xor
add
xor
add
repnz
add
xor
add
xor
lock
out
lock
out
lock
add
inc
out
clc
inc
out
lock
out
lock
out
clc
inc
out
clc
inc
out
lock
add
inc
out
lock
out
lock
out
lock
out
call
add
add
inc
out
call
push
out
lock
out
lock
out
lock
add
inc
out
clc
add
add
inc
out
add
call
add
add
inc
out
clc
inc
out
call
inc
add
hlt
push
add
repz
add
repz
in
incb
hlt
call
hlt
incb
repz
jmp
repz
aas
jmp
in
call
in
push
inc
jmp
repz
add
repz
aas
jmp
hlt
push
inc
stc
add
repz
and
repz
and
mov
add
mov
and
repz
and
repz
add
xor
jmp
xor
and
xor
jmp
cltd
or
and
dec
add
cltd
or
and
or
add
dec
add
mov
add
dec
add
dec
or
add
inc
and
inc
and
add
add
dec
dec
inc
add
inc
and
dec
add
sbb
add
dec
inc
and
or
and
dec
add
or
add
or
inc
and
dec
inc
add
dec
inc
and
or
leave
dec
add
add
leave
or
lock
inc
add
mov
inc
add
scas
add
shrb
inc
inc
lock
add
popl
lock
inc
inc
add
rcrb
add
scas
add
lock
inc
add
lahf
add
nop
inc
inc
lock
inc
add
popl
inc
lock
adc
inc
inc
rcrb
add
popl
rcrb
add
in
mov
add
lock
or
lock
or
in
lahf
or
lock
out
adc
jmp
add
pop
out
add
lock
jmp
add
push
out
lock
add
add
or
push
out
lock
or
push
jmp
or
add
add
add
add
add
or
add
add
pop
out
adc
out
lock
jmp
or
add
or
push
jmp
add
add
or
push
out
lock
or
push
out
rolb
jmp
add
add
add
or
add
jmp
out
jmp
out
jmp
push
add
repz
call
jmp
add
repz
call
sti
push
add
jmp
call
sti
push
add
repz
add
jmp
add
repz
jmp
repz
add
repz
add
jmp
add
repz
add
sti
out
call
jmp
add
add
repz
add
sti
push
add
jmp
add
repz
test
mov
jmp
dec
xchg
add
flds
add
cltd
xchg
std
jns
push
add
sbb
add
flds
add
or
add
cltd
xchg
add
fsts
std
dec
add
add
add
adc
xchg
std
lcall
add
add
sbb
add
or
add
dec
xchg
add
cltd
xchg
std
lcall
add
dec
push
add
mov
add
pop
push
add
sbb
add
or
add
pop
xchg
add
lock
add
lahf
icebp
add
lahf
icebp
out
pop
add
lock
add
mov
repz
lahf
icebp
push
filds
add
filds
add
lahf
add
loopne
add
mov
add
repz
lcall
repz
filds
add
filds
add
mov
icebp
out
fcomip
jmp
lahf
add
lock
icebp
add
lahf
icebp
add
lahf
icebp
add
pop
icebp
ljmp
pop
icebp
jmp
pop
add
lahf
add
add
out
repz
pop
mov
add
push
out
lock
xchg
ss
mov
sub
mov
add
add
push
out
lock
mov
sub
mov
add
push
out
lock
mov
sub
lock
out
lock
imul
mov
sub
mov
add
push
out
lock
cmp
dec
mov
cmp
mov
add
push
out
lock
add
int
xchg
sub
add
repz
add
repz
add
xchg
imul
mov
jmp
repz
add
and
std
jmp
repz
add
repz
add
repz
add
repz
add
xchg
cmpsl
les
std
mov
xchg
test
xchg
xchg
les
std
xlat
adc
mov
mov
push
mov
mov
add
mov
roll
frndint
inc
frndint
pushl
cld
dec
frndint
dec
frndint
sti
frndint
fcmovnu
cld
decl
fdivr
dec
xor
std
jmp
xor
std
pushl
xor
call
xor
pushl
std
jmp
xor
jg
std
ljmp
std
incl
add
std
jmp
aaa
std
incl
aaa
std
lcall
std
call
ss
pushl
std
jnp
std
push
xchg
xor
aaa
sub
ljmp
aam
jmp
ds
pop
je
call
pop
decl
push
incl
bound
ljmp
add
mov
out
add
sub
sub
xlat
inc
sub
inc
outsl
add
lock
mov
add
lock
jmp
push
das
call
arpl
incl
inc
xor
ja
xor
outsl
test
jmp
lcall
add
lock
decl
movsl
xor
out
lock
inc
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
add
push
fnstenv
incl
xor
add
test
xor
test
xlat
test
iret
test
movl
add
push
jns
cmpsl
test
add
push
outsl
sub
xchg
sub
outsl
test
addr16
sub
add
or
sbb
test
sbb
or
ret
add
flds
std
push
lret
jg
cmp
fiaddl
std
or
cmp
sbb
aad
test
rorl
std
scas
sbb
cmp
or
jne
cmp
lret
xchg
cmp
fiaddl
std
fwait
lret
jecxz
cmp
pop
test
add
xor
incl
add
ss
push
ss
incl
std
inc
xor
pushl
std
ljmp
std
incl
xor
pushl
xor
call
ss
pushl
ss
flds
add
aaa
std
jmp
std
decl
std
aas
aaa
std
lcall
std
decl
push
add
pop
xor
lcall
xor
incl
add
xor
pushl
xor
push
xor
ljmp
jmp
lcall
sub
push
in
sub
add
xchg
cs
aas
mov
add
lock
sub
lcall
enter
je
decl
bound
pop
push
sub
ljmp
add
pop
sub
out
push
sub
out
sub
fbld
sub
add
iret
ljmp
inc
out
mov
in
ljmp
outsl
add
lock
sub
xchg
mov
decl
push
in
xor
add
cld
jmp
sbb
jmp
add
add
and
jmp
add
pop
sub
aad
lret
cmp
push
push
add
hlt
mov
pop
xchg
push
faddl
test
mov
inc
add
lock
push
add
repnz
add
in
pop
inc
icebp
sbbb
out
mov
out
inc
inc
ljmp
adc
push
inc
or
dec
daa
lock
add
div
jo
fsubp
outsl
and
bnd
push
out
adc
hlt
leave
cmc
mov
imul
jb
add
adc
ds
sti
negb
pop
les
cld
hlt
insb
iret
clc
jecxz
mov
jmp
and
movsl
sar
inc
addb
push
xor
inc
repz
or
bound
or
outsl
push
fucompp
ds
aad
push
inc
sar
dec
add
lds
or
add
sbb
popa
leave
xor
fidivrs
inc
add
loopne
popa
add
dec
outsl
clc
es
imul
leave
ljmp
outsl
sub
arpl
outsl
jae
add
sub
jo
sub
push
add
popa
popa
pop
es
imul
jne
add
daa
inc
imul
inc
gs
push
outsb
je
add
aas
push
insl
adc
adc
mov
sbb
sbb
adc
insb
add
inc
ja
add
lock
sbb
jnp
les
inc
add
pop
add
ret
jae
popa
int
sbb
lock
sbb
inc
mov
aas
lock
cltd
inc
sbb
arpl
pop
add
xchg
ss
push
fwait
adc
add
add
pop
fs
mov
lock
inc
push
cld
arpl
sbb
pop
sub
testl
pop
cmp
rclb
enter
or
pop
cld
fldcw
adc
push
in
add
pop
cs
lcall
aam
std
adc
out
clc
push
shl
add
add
fcomps
cmpsb
out
push
sar
and
add
clc
iret
sbb
or
adc
xor
cwtl
push
push
repz
addr16
out
add
mov
stc
decl
repz
adc
dec
pop
or
jno
jecxz
dec
jecxz
pusha
xor
int
bound
xor
shll
stc
popw
or
ljmp
add
clc
out
pavgb
add
shll
divl
adc
jae
or
lret
jno
mov
add
repnz
push
add
icebp
iret
jb
out
inc
mov
push
in
test
out
pop
add
mov
xchg
es
jo
addr16
ds
outsb
je
pop
mov
ljmp
add
and
jno
add
xor
gs
xor
pop
insl
xor
jmp
aas
pop
jae
jno
pop
adc
aas
jb
and
adc
icebp
and
push
outsb
cmp
outsl
push
hlt
or
sub
dec
pop
das
inc
xor
sbb
ds
popa
outsb
test
mov
jno
inc
decl
xchg
and
std
shll
add
mov
je
add
xor
and
aam
addr16
leave
inc
add
hlt
add
xlat
add
push
arpl
cmp
sbb
pop
fiadds
sbb
sub
aad
adc
adc
fdivl
jb
add
jb
add
xor
adc
insb
pushf
outsl
add
xchg
push
push
push
pushf
mov
adc
inc
adc
add
xchg
mov
scas
push
fs
movsl
pop
push
in
pop
ss
jge
inc
repz
das
in
out
testb
adc
cmc
andl
in
jecxz
add
pop
sub
sub
push
ds
inc
add
push
sub
cld
jecxz
push
loope
pop
push
shl
out
popa
push
push
sbb
iret
adc
out
pop
sbb
cld
or
add
sub
pop
pushf
push
faddl
popf
cmc
adc
push
mov
rcl
loop
out
add
repnz
mov
bound
jmp
add
repnz
mov
hlt
bound
rcrb
out
jecxz
jno
pop
add
scas
in
insb
pop
mov
bound
dec
lcall
cltd
jecxz
cmp
cmp
movsl
in
aam
push
add
cmp
jb
aaa
in
sub
cmp
push
in
aam
push
aaa
mulb
dec
in
or
cmp
xchg
aam
into
inc
in
mov
in
jb
sub
ds
imul
aaa
jg
push
sub
gs
add
add
outsb
imul
outsl
gs
jo
jae
jno
call
add
cmp
push
pop
insl
cmp
std
incl
add
outsl
jae
cmp
xor
add
shlb
je
je
jo
arpl
pop
outsl
insb
sbb
ja
adc
gs
je
je
jno
popa
cmp
inc
std
ds
imul
imul
pushf
pop
jae
mov
incl
insl
add
test
int3
lock
push
pop
xchg
aad
add
sub
add
inc
repnz
inc
lahf
add
lock
cmc
jno
repz
cmp
add
icebp
xor
jno
aam
inc
aas
pusha
add
fdiv
pop
add
xor
add
lock
icebp
in
loopne
int3
adc
lock
jae
je
jae
push
repnz
aad
add
lock
pusha
lret
or
ljmp
pop
push
add
in
icebp
xchg
jmp
into
push
lret
stc
lret
hlt
xchg
jmp
stos
add
jne
add
mov
push
sti
out
push
pop
cltd
out
std
out
sub
cli
test
dec
out
imull
fisubl
aad
call
out
add
cmp
xor
inc
add
pop
sbb
into
ljmp
int3
in
out
rol
out
add
scas
push
sbb
frstpm(287
pop
call
lds
sbb
imul
stc
jo
and
ljmp
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
movsb
inc
int3
int3
and
lret
call
push
ret
inc
sub
fdivl
leave
adc
outsl
xor
or
add
clc
jge
cld
imul
mov
or
jmp
aam
mov
ror
jg
adcl
call
ret
lds
push
in
push
in
lret
test
add
jge
clc
jnp
testl
jnp
testl
imul
mov
adc
dec
clc
jge
cld
add
mov
repz
push
add
stc
jg
hlt
jae
decl
cwtl
jg
hlt
lret
mov
push
lock
inc
call
add
lods
repnz
decl
rolb
test
stc
sbb
dec
add
in
jnp
jmp
mov
mov
pop
inc
or
add
add
shr
add
dec
aaa
rorb
inc
int3
int3
lods
inc
int3
int3
movsb
inc
int3
int3
and
psubsb
sub
xlat
out
cmpsl
jb
xorl
addr16
add
out
jg
movsb
dec
xor
mov
imul
add
test
mov
xchg
dec
inc
cld
lock
add
dec
add
add
add
ret
fdivr
sbbl
inc
cld
jnp
orl
out
negl
movsb
dec
xor
mov
jg
lea
mov
sub
inc
int3
int3
lods
inc
int3
int3
movsb
inc
int3
int3
inc
jle
mov
fidivrs
xor
pop
jns,pt
pop
pop
mov
int3
int3
lods
inc
int3
int3
movsb
inc
int3
int3
lds
mov
add
decb
std
stos
dec
inc
lock
int3
xor
int3
int3
sub
int3
int3
and
int3
int3
lds
adcl
add
in
dec
inc
lock
clc
mov
inc
lock
clc
inc
pop
mov
call
ret
jnp
or
lret
mov
rol
int3
inc
jl
push
scas
lret
add
lock
add
jmp
inc
decl
jl
dec
adc
adc
cld
idivl
add
add
pop
mov
add
lock
add
and
mov
inc
int3
int3
sub
int3
int3
and
int3
int3
movsl
jnp
mov
xchg
jnp
mov
push
push
inc
lock
int3
mov
int3
int3
lods
inc
int3
int3
add
movsb
inc
int3
int3
and
push
mov
cmpl
incl
mov
sub
rcrl
jnp
or
or
je
add
lock
pop
mov
jge
cld
imul
cmp
leave
sti
mov
lds
add
jnp
lock
adc
add
jno
std
push
xchg
jp
or
or
clc
adcl
xor
adcl
enter
lret
mov
inc
or
enter
jmp
imul
ror
sub
xchg
and
in
mov
add
adcb
out
push
jg
lock
jae
out
add
cmp
lock
mov
or
jns
fisttps
add
or
add
mov
add
fdivr
adc
imul
cmpl
xor
or
mov
orl
sub
rcr
mov
jg
hlt
add
imul
adc
jmp
lods
outsb
add
lock
mov
mov
lock
mov
cmpl
lods
outsb
push
push
mov
mov
add
or
jo
sbb
int
std
ljmp
mov
out
lods
incl
mov
mov
sbb
add
ret
cwtl
xchg
sti
lcall
ret
cmp
jle
mov
jge
hlt
jnp
jmp
xor
xchg
pusha
xchg
mov
jge
loopne
std
cld
aas
and
xor
int3
int3
lds
adcl
lock
std
mov
inc
lock
clc
cwtl
push
inc
lock
clc
mov
add
imul
imul
push
jnp
pop
push
sar
mov
leave
ror
cmp
int3
inc
sub
hlt
add
add
lock
add
mov
leave
ror
cmp
int3
lds
adcl
rol
mov
jnp,pt
das
mov
jg
imul
hlt
jnp
repz
add
jg
clc
imul
add
insl
inc
je
jae
testl
fldt
mov
jle
sbb
aam
jne
jge
clc
jnp
or
mov
lds
mov
fwait
jns
mov
cs
cld
std
add
rorb
mov
int
int3
int3
xor
int3
int3
add
sub
int3
int3
and
int3
int3
movsl
jge
adcl
cmp
xor
lock
add
decl
sti
call
xchg
or
repz
jge
clc
mov
decl
lock
lock
les
enter
add
jmp
jle
add
decl
das
or
push
add
lock
add
les
pop
jg
lock
add
pop
sahf
outsl
imul
add
push
add
lock
dec
inc
lock
hlt
mov
inc
dec
inc
lock
mov
xlat
out
or
std
subl
adc
repz
mov
mov
push
ror
cmp
int3
add
and
cmp
repz
sub
add
inc
hlt
leave
ror
cmp
int3
movsb
cmp
int3
and
sbb
inc
jl
jo
lock
or
xlat
mov
add
imul
or
push
push
jp
or
jge
call
lock
in
scas
or
les
add
jns
out
push
fdivrp
das
lock
push
push
addr16
lock
mov
xlat
mov
aad
push
aam
out
mov
std
xorl
add
pop
pop
mov
jge
hlt
jnp
fisttps
inc
aad
cmp
shl
call
jnp
call
les
mov
jnp
adc
add
fisttps
add
dec
adc
shl
mov
imull
sbb
or
mov
out
xor
mov
push
frstor
subl
sub
out
bound
push
cld
scas
add
and
xor
lahf
in
daa
enter
xchg
cli
incl
int3
fildl
add
mov
dec
inc
lock
jae
jnp
loopne
mov
dec
mov
ds
fistpl
push
out
ljmp
lock
mov
mov
dec
xor
gs
lock
dec
dec
inc
lock
push
out
ljmp
lock
mov
mov
out
mov
jae
les
pop
add
lock
push
imul
push
dec
pop
std
push
add
mov
pop
mov
dec
fsubrs
xlat
mov
popl
imul
push
imul
inc
lock
xchg
pop
gs
subl
dec
push
mov
add
and
fdiv
mov
inc
or
dec
loopne
sti
ret
dec
mov
sub
adc
scas
jmp
inc
nop
or
add
aaa
call
mov
stc
dec
mov
or
lret
in
dec
dec
inc
lock
dec
sub
add
xor
cmpl
in
dec
inc
lock
decl
adc
dec
mov
dec
call
jae
or
std
dec
dec
inc
lock
std
xorl
popa
enter
lock
in
dec
mov
push
call
add
les
pushl
or
sub
add
dec
dec
inc
lock
inc
sub
or
das
call
xor
dec
xchg
or
stc
fisttps
pop
jg
xor
jns
or
pop
mov
mov
inc
or
add
fs
aam
addr16
pushl
push
push
mov
lds
add
int3
int3
add
and
int3
int3
movsl
in
mov
rol
and
int3
int3
lds
mov
imul
dec
mov
mov
lahf
les
xor
int3
inc
mov
push
pop
lret
add
cmpsl
in
dec
xor
push
call
jae
or
call
cld
pop
push
xor
push
incl
mov
xor
add
sub
inc
js
add
lock
inc
fsubr
push
add
das
int3
repz
push
add
lods
bound
add
push
lds
pop
add
lock
imul
test
adc
ds
popa
std
add
fimull
in
outsb
dec
inc
lock
add
lock
or
cmc
outsb
dec
inc
lock
add
lock
loopne
enter
or
fcom
ds
push
add
jae
call
jne
in
incb
movsl
loopne
xor
mov
imul
dec
inc
lock
repz
mov
or
mov
add
scas
dec
mov
mov
in
bound
lock
inc
lock
pop
add
sarl
add
add
pusha
add
xor
std
adc
xchg
inc
lock
cld
dec
xor
push
call
jae
add
xor
mov
aad
pusha
std
subl
mov
movsl
in
xor
push
call
jae
or
lods
push
xchg
mov
or
inc
loopne
mov
add
mov
pusha
add
mov
mov
mov
push
add
mov
or
repz
push
fdivs
idiv
filds
repz
lea
imul
add
mov
fistl
lock
xor
xchg
imul
lock
jmp
xorl
push
lret
sbb
add
mov
ds
leave
testl
lock
mov
repz
in
mov
add
mov
jmp
nop
sub
aaa
enter
aaa
dec
inc
lock
mov
sbb
mov
cmp
lock
dec
imull
add
add
idivl
jno
add
lock
mov
xor
mov
ds
inc
lock
fmuls
push
push
call
jae
add
std
bound
lock
aad
pop
std
test
aam
xor
jb
mov
xor
lock
add
sbb
dec
mov
add
les
push
xchg
call
mov
add
add
lock
jecxz
mov
int3
int3
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
add
lock
add
call
xor
xor
xor
test
lock
add
aam
add
mov
xor
das
xor
push
xor
xor
fwait
xor
ss
xor
add
aas
mov
cmp
cmp
lahf
cmp
ds
cmp
jmp
add
add
cmc
cmp
cmp
cmp
cmp
mov
cmp
and
cmp
cmp
jecxz
sub
cmp
cmp
cmp
cmp
dec
cmp
insb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jne
xchg
cmp
pop
cmp
cmp
add
lods
cmp
cmp
pop
cmp
cmp
hlt
cmp
ds
cmp
ds
cmp
ds
cmp
ds
push
aas
add
sbb
shll
sub
les
cmp
mov
push
aas
xchg
aaa
jne
jbe
xchg
test
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
lock
add
lock
add
lock
add
lods
lret
mov
inc
add
inc
add
inc
add
lret
enter
int3
lret
ror
inc
add
lret
fmul
inc
add
lret
loopne
inc
add
lret
call
lret
lock
hlt
lret
clc
lret
cld
lret
add
inc
add
inc
add
lret
inc
add
inc
add
lret
inc
add
inc
add
lret
inc
add
inc
add
lret
inc
add
inc
add
lret
inc
add
inc
add
lret
inc
add
inc
add
lret
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
lret
inc
add
inc
add
int3
inc
add
inc
add
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
inc
add
inc
add
int3
inc
add
lret
inc
add
inc
add
int3
inc
add
int3
inc
add
inc
add
int3
inc
add
inc
add
int3
inc
add
inc
add
inc
add
int3
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
lret
inc
add
add
lret
inc
add
inc
add
add
lret
push
int3
inc
add
inc
add
add
inc
add
add
int3
inc
add
int3
inc
add
int3
inc
add
lret
cwtl
int3
inc
add
inc
add
inc
add
lret
inc
add
inc
add
inc
add
inc
add
int3
inc
add
lret
enter
int3
int3
inc
add
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
int3
inc
add
rolb
lock
hlt
rolb
clc
rolb
cld
rolb
add
inc
add
inc
add
roll
or
inc
add
roll
or
inc
add
inc
add
roll
sbb
inc
add
inc
add
roll
and
inc
add
roll
sub
inc
add
roll
xor
inc
add
roll
cmp
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
roll
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
roll
int3
roll
rcl
inc
add
roll
inc
roll
fcom
inc
add
roll
loopne
inc
add
roll
in
rolb
call
roll
hlt
rolb
in
roll
lock
hlt
roll
clc
roll
cld
roll
add
inc
add
inc
add
inc
add
rolb
or
inc
add
roll
adc
inc
add
inc
add
roll
roll
inc
add
rolb
sbb
inc
add
rolb
and
inc
add
rolb
sub
inc
add
rolb
xor
inc
add
rolb
cmp
inc
add
rolb
lock
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
roll
sub
inc
add
inc
add
add
inc
add
add
inc
add
rolb
mov
inc
add
rolb
mov
inc
add
rolb
cwtl
rolb
pushf
rolb
and
inc
add
rolb
inc
roll
movsb
rolb
or
inc
add
rolb
xor
inc
add
inc
add
rolb
mov
inc
add
inc
add
inc
add
inc
add
rolb
in
roll
push
roll
add
inc
add
rolb
enter
int3
rolb
rcl
inc
add
rolb
fcom
inc
add
rolb
mov
inc
add
inc
add
rolb
in
inc
add
roll
rcl
add
rolb
in
rolb
sbb
inc
add
rolb
in
inc
add
roll
hlt
rolb
pop
rolb
cld
roll
sub
inc
add
add
roll
clc
rolb
mov
inc
add
rolb
add
inc
add
inc
add
rolb
cld
roll
or
inc
add
inc
add
roll
cwtl
rolb
adc
inc
add
inc
add
add
inc
add
inc
add
roll
and
inc
add
inc
add
roll
sub
inc
add
roll
int3
rolb
hlt
roll
xor
inc
add
roll
cmp
inc
add
inc
add
add
roll
rolb
movsb
rolb
mov
roll
pushf
rolb
dec
roll
dec
roll
push
roll
roll
push
roll
lods
roll
rcl
add
rolb
pop
roll
sub
inc
add
add
inc
add
add
roll
insb
roll
jo
inc
add
add
inc
add
inc
add
add
inc
add
rolb
fcom
inc
add
roll
loopne
inc
add
roll
adc
add
inc
add
roll
js
inc
add
inc
add
roll
xchg
roll
adc
inc
add
add
rolb
pushf
roll
mov
inc
add
roll
movsb
roll
lods
rolb
test
inc
add
inc
add
roll
inc
roll
adc
add
roll
push
roll
inc
add
add
roll
and
inc
add
inc
add
roll
xor
inc
add
roll
mov
roll
push
rolb
rcl
add
roll
hlt
roll
adc
add
roll
int3
roll
pushf
rolb
rcl
inc
add
roll
mov
roll
or
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
inc
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
into
inc
add
inc
add
into
inc
add
inc
add
into
inc
add
inc
add
into
inc
add
inc
add
into
inc
add
inc
add
into
inc
add
inc
add
into
inc
add
inc
add
into
inc
add
into
inc
add
inc
add
inc
add
inc
add
int
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
into
inc
add
inc
add
into
inc
add
int
add
inc
add
inc
add
inc
add
into
inc
add
into
inc
add
into
inc
add
inc
add
inc
add
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
into
inc
add
iret
inc
add
inc
add
iret
inc
add
inc
add
int
add
iret
inc
add
inc
add
iret
inc
add
inc
add
iret
inc
add
inc
add
iret
inc
add
inc
add
into
inc
add
iret
inc
add
inc
add
iret
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
iret
inc
add
add
inc
add
add
int
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
add
int
add
inc
add
add
iret
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
inc
add
inc
add
iret
inc
add
add
iret
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
int
add
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
inc
add
iret
inc
add
int
add
rolb
add
inc
add
rolb
jo
inc
add
inc
add
int
add
rolb
adc
inc
add
rolb
sbb
inc
add
rolb
and
inc
add
inc
add
add
rolb
sub
inc
add
rolb
xor
inc
add
rolb
cmp
inc
add
inc
add
add
int
add
inc
add
add
inc
add
iret
inc
add
add
inc
add
int
add
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
add
inc
add
add
rolb
mov
inc
add
inc
add
rolb
cwtl
rolb
lods
into
inc
add
inc
add
inc
add
inc
add
rolb
mov
inc
add
inc
add
inc
add
rolb
mov
rolb
enter
adc
inc
add
rolb
cmp
inc
add
rolb
aam
inc
add
add
rolb
inc
add
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
push
mov
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
call
mov
push
push
call
push
push
call
movl
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
movl
pop
ret
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
cmpl
jne
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
movl
mov
add
mov
mov
add
mov
add
mov
add
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
pusha
mov
movl
movl
push
push
call
push
call
mov
movl
movl
lea
push
lea
push
lea
push
call
movzwl
cmp
je
xor
jmp
lea
push
push
push
push
push
call
test
je
xor
jmp
lea
push
push
push
push
push
call
test
je
xor
jmp
mov
mov
mov
lea
push
push
push
mov
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
jne
xor
jmp
movl
movl
movl
movl
movl
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
call
pop
call
pop
call
pop
call
pop
jmp
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
