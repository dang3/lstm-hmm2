push
cltd
sti
incl
inc
add
push
jae
jb
outsb
addr16
or
shrl
or
add
jl
ss
jo
ret
mov
bound
arpl
pop
or
fs
das
incl
push
jns
je
insl
jmp
mov
pop
int3
nop
inc
push
sbb
rolb
fs
mov
nop
mov
fs
inc
test
mov
pushf
cwtl
xchg
nop
inc
push
sbb
sbb
addb
fs
inc
cmp
jl
fs
inc
js
xor
push
sub
jo
decl
mov
call
testb
je
movzwl
nop
out
in
xor
ret
xor
xlat
dec
push
sbb
push
inc
jg
inc
popa
arpl
and
jb
popa
outsb
and
imul
xor
xor
add
gs
and
push
imul
fists
jb
data16
sub
and
je
popa
and
in
incl
gs
outsl
jo
outsb
je
lock
ret
lea
or
mov
or
outsl
pop
dec
add
inc
or
adc
push
or
or
or
fstps
sub
adc
addr16
xchg
adc
adc
fildll
fildll
add
adc
sbb
pop
and
jp
add
lret
push
mov
adc
pop
and
sub
lods
sub
and
sub
sub
xor
mov
cs
dec
sub
xor
mov
xor
add
lret
mov
cmp
xor
addr16
add
add
neg
jns
fildll
jbe
pushl
adc
cmp
add
js
adc
mov
es
inc
das
add
and
or
mov
mov
cmpl
rorl
ss
je
jno
mov
shr
movzbl
mov
decb
rol
and
jns
fistl
add
ljmp
mov
incl
sbb
and
add
dec
mov
test
add
lret
push
mov
mov
add
mov
push
loopne
arpl
popa
loopne
cmpl
mov
or
inc
cld
add
orl
adc
std
sub
lea
mov
mov
cmp
movsl
ss
lock
and
push
jb
adc
mov
inc
sbb
insl
sti
mov
mov
and
push
push
and
sub
hlt
adc
push
inc
mov
rorb
add
insl
imul
fcmove
mov
push
mov
icebp
outsb
mov
jle
mov
push
loopne
jle
sub
mov
rorl
lret
sub
jnp
sbb
push
or
mov
je
jmp
or
sarb
push
push
mov
test
xor
cmp
push
push
push
mov
lea
mov
add
out
dec
adc
lea
mov
or
fnstsw
add
pop
movsb
add
mov
testb
movb
pop
mov
cmc
into
pop
pop
arpl
mov
sub
cmp
outsb
clc
mov
aas
mov
mov
push
and
push
or
ret
xchg
addb
push
cmp
add
fstpt
jmp
or
cmp
in
punpckhdq
testl
push
jne
xor
push
mov
cmp
jbe
sub
add
jmp
test
jne
push
xlat
mov
arpl
nop
add
outsl
push
lahf
cld
pusha
movsb
mov
add
nop
mov
jnp
fisttpll
sbb
and
jmp
sti
sbb
ficomps
add
mov
add
cmp
jbe
out
das
mov
out
mov
xchg
adc
lret
insb
fisubs
or
add
cmpl
push
jne
andl
or
mov
inc
stc
shlb
mov
add
dec
and
neg
cmp
jae
fdivrs
adc
stc
push
jecxz
inc
sub
sub
pop
test
jo
rolb
pop
or
fs
fisttps
add
mov
mov
fadd
mov
jle
cmp
and
sub
jecxz
jle
mov
iret
xchg
fdivl
in
notb
jbe
or
shr
cmp
jb
inc
sub
inc
mov
jmp
movsl
inc
and
data16
mov
inc
mov
sub
dec
lea
sub
cmp
pop
mov
or
loop
leave
loope
out
mov
lea
mov
mov
mov
rolb
fisubl
je
adc
lods
sbb
dec
add
sarl
xor
out
or
jbe
mov
sbb
pop
sbb
pop
adc
add
mov
pop
xor
je
xchg
or
adc
cmp
dec
out
leave
sbbb
test
cmp
aam
jmp
push
jno
and
adc
std
mov
and
inc
movsbl
xor
pushl
mov
add
test
adc
push
inc
loopne
mov
cmp
add
push
add
aam
add
cmp
jne
mov
test
imul
stos
jle
das
mov
add
es
sub
lea
cld
mov
fbld
mov
pop
cmp
jb
mov
fstl
sbb
imul
mov
arpl
mov
sbb
hlt
add
mov
pusha
adc
andb
add
arpl
lea
mov
xor
pop
mov
mov
movl
jle
adc
adc
push
or
imull
iret
mov
pop
inc
movsb
btr
outsl
inc
dec
sbb
fcmovu
jne
pop
add
or
outsb
and
inc
fst
leave
jne
lea
pusha
jecxz
orb
movsl
xchg
or
loope
imul
jmp
daa
cltd
sbb
and
repnz
pusha
not
shl
sub
sbb
or
fcomps
or
pop
mov
daa
and
scas
pop
scas
test
lret
lret
xor
cmp
sbb
lret
and
pop
shlb
repz
ret
enter
dec
add
mov
push
pop
mov
lods
sub
rorb
ret
push
cld
xchg
out
movsl
roll
mov
jne
subl
ss
imul
xor
dec
gs
push
dec
dec
pop
push
push
mov
sbb
adc
ss
xor
push
inc
adc
cmp
mov
pop
xchg
jne
xchg
sub
outsb
addr16
xchg
xlat
and
push
fstps
fs
sbb
jmp
enter
sbb
mov
insl
sbb
add
lock
mov
cmp
mov
xor
push
mov
mov
pop
jne
or
or
inc
push
jne
pop
push
inc
cmp
inc
outsl
inc
pop
xor
faddl
imul
fbstp
cmp
xchg
cmp
add
cmp
sbb
jmp
das
dec
clc
sub
push
pop
movsb
insl
mov
sbb
mul
mov
sub
mov
iret
rclb
lahf
xor
in
cmp
sbb
das
push
mov
movl
fadd
add
in
mov
lock
add
clc
mov
testl
loop
sub
test
outsb
sub
xchg
or
lret
jb
adc
mov
push
mov
mov
mov
mov
sti
sbb
arpl
mov
jno
roll
imul
jmp
cmp
addr16
sub
push
jnp
push
sbb
clc
lcall
addr16
mov
inc
sbb
sub
mov
push
leave
mov
cld
sub
cmp
jb
lea
cmc
sub
sbb
jae
pop
int3
xor
add
inc
inc
cli
notb
jbe
lea
and
inc
pushf
add
jmp
xor
pop
das
push
ds
pop
sarl
or
inc
jge
dec
mov
mov
cld
or
mov
mov
ficompl
lea
or
pop
nop
into
and
cmp
roll
xlat
xchg
add
icebp
pop
clc
inc
inc
cs
dec
push
or
les
or
inc
push
out
sub
stc
sub
xor
fsubr
sub
bound
cmp
daa
fists
out
xor
push
imul
addr16
call
jmp
aam
jl
fisubrs
or
jmp
loope
mov
in
test
andb
shlb
push
ret
andl
popl
push
pop
mov
or
cld
inc
mov
add
xchg
outsb
push
xor
ret
enter
iret
push
xor
roll
lret
push
inc
push
jo
pop
shr
pop
ss
pop
test
adc
outsb
insb
adc
or
sti
dec
lods
neg
fldz
fstl
inc
sub
lods
push
in
or
icebp
mov
sbb
jne
shll
adc
add
mov
test
jne
inc
dec
cmp
je
in
sbb
jb
xlat
cmp
outsl
mov
jae
rclb
or
inc
jmp
movsl
inc
insl
or
xchg
mov
adc
dec
push
pop
or
ret
test
jbe
sub
pushf
jnp
jg
jns
and
push
inc
add
fmuls
test
add
pop
mov
mov
loop
jnp
jo
mov
repnz
mov
mov
xor
les
mov
sbb
pop
sbb
int3
insl
sahf
xchg
sbb
pop
or
sbb
inc
es
xchg
sbb
sbb
or
cltd
inc
pop
jg
mov
adc
mov
adc
inc
add
mov
sub
cwtl
mov
in
add
xor
in
push
faddp
xchg
cli
xchg
inc
push
push
out
ret
jne
in
cmp
ja
pop
or
adc
lock
pop
sbb
leave
or
cmc
scas
aam
fimull
add
push
fmuls
inc
or
lock
push
or
adc
bound
clc
imul
or
mov
pop
pop
mov
jo
xlat
add
jnp
mov
icebp
insb
stos
mov
xor
push
xor
mov
ret
xchg
ja
adc
push
adc
insl
aas
jbe
aas
push
mov
sub
sbb
test
and
and
jge
imul
push
push
or
sbb
xchg
mov
adc
rclb
and
sarb
in
push
mov
mov
movlps
push
add
add
rol
fisubs
fwait
or
adc
cmpl
adc
bound
adc
inc
in
addb
fldcw
out
inc
in
push
pop
lock
imul
mov
pop
dec
mov
test
jl
inc
mov
cmp
jne
add
fistpl
mov
adc
mov
add
push
or
inc
dec
jne
push
or
xor
loopne
loopne
xor
add
scas
ss
call
or
or
lea
dec
in
mov
in
fsubr
and
add
adc
adc
inc
imul
test
mov
push
xchg
adc
psrld
int3
mov
mov
mov
adc
clc
test
adcb
sub
mov
push
sti
pop
out
fdivrl
hlt
adc
mov
outsb
mov
or
jl
and
outsl
pop
push
sub
or
ficomps
test
psubusw
cmpb
pop
fistl
jb
add
inc
jle
dec
loopne
fldenv
aaa
mov
mov
sub
sub
je
add
sub
sub
pop
fs
jg,pt
mov
xchg
incl
cmp
out
add
xchg
ljmp
dec
push
mov
sti
repnz
push
dec
jne
xor
testb
ss
lea
leave
xchg
fildl
mov
adc
pop
inc
add
ret
mov
cmp
and
push
iret
fxtract
add
adcl
call
ja
mov
push
pop
je,pt
push
js
andl
movsb
clc
mov
call
xchg
mov
in
or
adc
movsl
repnz
jo
xchg
sbb
aad
repz
adc
jno
jne
mov
subl
xor
or
aaa
mov
sbb
mov
push
es
jb
mov
inc
adc
push
mov
std
mov
outsl
dec
sti
movsb
push
xchg
movsl
jl
cmpb
pop
pop
xchg
dec
testl
call
std
std
mov
jnp
mov
pop
movl
or
ds
ret
inc
in
xor
add
push
in
push
mov
ror
and
xor
aaa
insb
jnp
dec
cmpl
jbe
xchg
jne
mov
js
inc
mov
sahf
add
testb
fcomp
fisttpl
mov
int3
rcr
pop
and
cs
pop
sbb
shll
xor
mov
mov
lret
jmp
in
test
pop
jmp
mov
cmpsl
dec
ret
and
xchg
movzbl
fninit
fsts
xchg
js
or
mov
adc
cmpsb
jmp
insl
test
subl
and
mov
lcall
cwtl
xor
enter
cmpsl
cmp
xor
mov
or
jb
inc
mov
mov
push
arpl
es
pcmpeqb
mov
lods
ja
pushl
jle
jne
mov
adc
xchg
adc
push
cmp
aam
or
add
jne
gs
call
std
das
cmp
gs
outsl
jb
lods
popa
imul
popa
jae
fcomp
dec
hlt
outsl
arpl
mov
push
push
sti
pop
jae
popa
insb
insb
and
and
xor
in
mov
mov
cmp
pop
jae
xor
mov
outsb
imul
outsb
cmpsl
add
xorl
pop
dec
inc
in
out
popl
dec
outsb
adc
gs
cltd
jae
fstps
pop
push
mov
or
std
push
push
xor
xor
mov
ss
sbb
clc
cmp
out
add
add
add
clc
jbe
mov
cltd
inc
or
pop
inc
out
and
pop
push
clc
cmp
jne
adc
out
mov
roll
movl
outsl
ds
in
inc
clc
add
movl
je
out
rolb
mov
inc
add
ss
sbb
add
pushl
fimull
mov
loop
push
in
fcomi
push
pop
or
push
cld
mov
out
sbb
loope
lea
xorl
xor
mov
push
or
jbe
mov
mov
jle
mov
call
out
inc
popf
jmp
data16
data16
jbe
lahf
mov
dec
mov
push
or
add
ja
xor
inc
mov
jnp
negb
ret
jne
and
adc
ja
std
bound
mov
aas
shlb
outsl
add
push
mov
cmp
fwait
stc
lock
jne
mov
mov
add
fcmovnbe
loope
inc
or
jno
or
and
push
mov
mov
pop
ds
rorl
mov
jnp
das
lahf
sbb
fistpll
fimuls
mov
fs
pop
sub
or
add
pop
in
xor
mov
rcrl
data16
es
cltd
mov
jecxz
dec
fcoml
adc
adc
add
ret
inc
adc
aam
or
iret
enter
sbb
jne
movsl
pop
loop
inc
or
je
push
xchg
dec
sbb
insb
and
or
lret
faddp
and
jmp
stc
dec
aaa
xor
shrb
out
add
pushf
orl
mov
mov
subl
sbb
call
jecxz
add
lock
xor
mov
mov
flds
fisttpl
jo
mov
ja
xor
xchg
or
sbb
jg
sti
xor
jg
mov
push
push
push
xchg
pop
pop
jne
sbb
xlat
sub
fstpt
repz
mov
mov
mov
and
incl
sub
jle
cmp
jg
sub
inc
cmp
sarl
cmc
aas
push
decl
jmp
mov
jmp
mov
jmp
bound
sub
ljmp
fmull
std
sarl
test
dec
mov
movb
add
mov
and
cli
jb
leave
push
push
hlt
jne
pop
mov
ds
sub
outsl
lea
mov
adc
mull
cli
addr16
pop
cmp
je
fimull
ja
sub
jg
incl
ljmp
jle
rorb
push
mov
aad
scas
pop
adcb
and
cmpsb
imul
lods
imul
test
inc
stos
fildll
push
neg
and
or
jge
push
fstpt
pop
add
xchg
sub
testb
adc
mov
add
and
sub
das
in
test
outsl
mov
or
mov
mov
das
push
retw
mov
sbb
or
adc
add
pop
xor
or
or
bound
xchg
add
add
pop
jnp
xor
push
push
or
add
xor
pop
pusha
test
sub
data16
pop
hlt
sbb
shrl
adc
mov
pop
cmp
adc
and
nop
out
sbbb
addb
mov
and
push
in
mov
add
push
jb
add
mov
ja
mov
or
jne
pop
mov
lea
bound
loope
push
xor
or
imul
cmp
mov
jl
out
dec
add
insb
push
roll
add
add
mov
ret
ret
add
rorl
andl
ficoml
cmp
jl
ffree
sub
fsts
dec
add
cmpsl
mov
mov
xor
sbb
lcall
adc
lahf
imul
mov
es
repz
push
hlt
in
dec
pop
subl
or
push
inc
sub
outsl
mov
mov
push
sub
je
and
mov
pop
pop
je
xor
daa
adc
mov
clc
and
add
sub
or
aaa
pop
loop
and
addb
add
sub
lods
aad
adc
dec
or
jge
jmp
inc
jmp
neg
push
lods
fdivrs
js
pop
sub
jno
and
mov
mov
inc
lods
les
add
dec
gs
mov
notl
add
push
leave
ljmp
aad
dec
pop
xor
mov
into
sbb
and
outsb
dec
xor
out
cmp
es
lea
add
fldt
leave
cltd
leave
mov
fbstp
pop
sbb
outsb
outsb
mov
inc
scas
jmp
iret
xchg
sbb
inc
inc
stc
xor
enter
sbb
jmp
push
fcomp
stos
fnstenv
or
out
mov
leave
and
jg
aas
in
pop
jns
add
add
inc
push
inc
pushf
or
ret
mov
adc
stc
leave
dec
adcb
sbb
imul
inc
jle
daa
stc
add
mov
repz
adc
out
xchg
sub
sub
or
xor
leave
sbb
mov
repz
inc
jbe
imul
cmp
mov
mov
bound
jmp
lods
inc
cmpb
xlat
fadds
outsb
xor
xchg
jmp
mov
push
push
int3
into
sbb
rorl
mov
push
pop
incl
nop
mov
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
or
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
ljmp
pushl
lds
iret
decl
js
inc
mov
stos
mov
cmp
jmp
mov
or
mov
pop
out
sub
imul
divl
jl
xor
incl
xchg
push
mov
inc
mov
push
inc
mov
push
sbb
sarb
inc
jbe
int3
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
lcall
repnz
aam
imul
loope
jp
iret
inc
bound
ds
push
sar
jmp
mov
addl
cmp
xor
mov
pop
cmp
lock
mov
popa
mov
and
pop
mov
repz
mov
subb
and
and
outsb
bound
xor
scas
lret
and
mov
sbb
push
or
stc
or
xchg
push
adc
mov
stc
nop
add
jmp
and
mov
push
xor
push
add
addb
push
push
fists
mov
movl
xor
ss
clc
add
ss
inc
xor
xor
sub
push
mov
hlt
cmp
xchg
sub
out
jno
jmp
inc
push
clc
data16
or
mov
adc
push
dec
inc
push
push
inc
push
inc
pop
pop
std
dec
or
insb
jo
imul
push
dec
dec
imul
stos
push
sub
mov
jecxz
fldcw
insb
jmp
add
and
leave
mov
inc
cmc
xchg
hlt
es
flds
or
popa
cmp
loopne
sbb
sbb
adc
out
pop
push
movaps
in
fimull
inc
call
mov
or
push
or
mov
stos
mov
cmp
add
jg
rep
pop
les
rep
shll
pop
js
loop
mov
pop
fsubl
xchg
jmp
cmp
je
pop
mov
inc
jge
push
outsb
or
test
xor
add
sbb
jne
jne
repz
ret
mov
mov
shlb
movsl
jbe
mov
jne
and
imul
jb
jg
mov
fistpll
add
and
inc
cmp
clc
ds
fbstp
pop
mov
mov
mov
mov
sarl
inc
orb
daa
or
mov
mov
fistpl
ds
push
mov
adc
loop
pop
lea
push
sbb
daa
mov
sarb
xchg
ret
jl
aaa
or
mov
inc
cmp
and
lock
push
jecxz
inc
mov
jecxz
mov
sbb
mov
jb
cmp
jne
pop
pop
pop
xchg
xchg
or
jne
or
andl
ljmp
rorl
or
mov
add
jnp
iret
pop
push
xchg
jmp
dec
jle
test
es
loope
mov
sqrtps
scas
mov
loope
push
jae
je
cld
pop
jnp
pop
xchg
sbb
shrb
outsl
push
and
mov
sbb
push
data16
or
sub
bound
jg
pop
int
mov
sub
add
pop
aaa
ss
and
cmp
push
cmp
rorb
ss
xor
pop
and
mov
mov
or
inc
add
orb
inc
ud2
adc
sub
icebp
shlb
adc
arpl
js
sub
stos
adc
mov
adc
mov
pop
sbb
enter
and
cmpsl
mov
pop
popl
push
pop
mov
shlb
dec
add
mov
push
ljmp
call
push
and
add
or
or
adcb
divl
push
push
sbb
cs
pop
cmpsl
pop
add
mov
push
pop
push
push
xchg
sub
sbb
jmp
dec
std
jmp
or
mov
addl
sbb
dec
into
xchg
fcoms
loope
dec
jb
shlb
cmp
int3
ficompl
pop
mov
call
test
adc
sbb
lret
outsb
hlt
mov
mov
das
nop
dec
icebp
push
mov
cmpsl
or
ljmp
add
cmpl
je
inc
clc
sub
movsb
andb
mov
lea
push
sarl
cmp
pop
stos
mov
jp
inc
ds
in
cmp
jbe
or
push
and
push
cmp
pop
or
out
je
add
fildll
mov
push
sbb
sub
xor
sbb
negl
pop
sub
mov
insl
mov
lret
outsl
fistps
movl
mov
or
jecxz
sub
mov
stos
adc
es
insl
and
repnz
xor
nop
scas
movsb
jnp
cmp
testb
xchg
call
jle
pop
cmp
adc
push
or
sbb
in
xorl
mov
inc
outsl
ret
push
ja
sub
inc
rcr
jecxz
pop
push
push
push
push
jmp
ret
adc
and
jae
xor
pop
xlat
dec
lea
mov
pusha
add
inc
mov
inc
or
pushf
outsl
fs
aam
or
adc
xchg
mov
mov
pop
bound
sub
cld
ret
pop
cld
imull
xchg
cmp
sub
pop
cmp
push
sub
int
sub
je
jmp
add
sti
jg
call
xor
push
cmp
cmp
in
sti
insl
adc
and
cmp
cmp
mov
jmp
idivl
es
jmp
mov
jmp
bndldx
into
aam
call
mov
jmp
mov
popa
mov
insl
xor
pop
iret
mov
test
or
pop
pop
push
shll
mov
ret
cmp
cmpsb
dec
ds
pop
pop
dec
insb
jo
cmp
inc
dec
adc
xchg
mov
sub
sti
scas
mov
and
xor
or
ret
add
pushf
mov
xor
cltd
data16
mov
adc
imul
sub
or
int3
mov
ficomps
mov
les
pop
mov
cmp
xchg
add
sarl
pop
sti
or
add
adc
mov
mov
int3
js
data16
pop
int
shrl
loopne
dec
fdivl
pop
add
add
js
adc
movsb
cs
sbb
fs
cmp
mov
std
rorl
gs
aas
cmp
jle
pop
xor
inc
dec
and
cmp
jg
xor
nop
movl
sbb
pop
jp
dec
mov
sub
inc
scas
push
xor
dec
movb
mov
mov
lea
mov
mov
add
decl
or
jmp
pop
fwait
insb
pop
jge
daa
add
sbb
or
xchg
mov
pop
daa
mov
mov
add
mov
add
jb
mov
pop
adc
adc
dec
rcr
mov
sub
in
and
and
mov
mov
mov
sub
mov
mov
neg
sbb
inc
mov
outsl
adc
mov
in
pushl
add
mov
mov
sub
ret
jl
icebp
pop
push
add
data16
push
mov
lahf
sbb
cmp
orb
or
jecxz
sbb
push
in
sbb
jl
pushf
sbb
push
xchg
sbb
and
sbb
imul
pop
add
mov
aaa
mov
inc
xchg
cmpb
adc
lods
push
push
bswap
loope
jbe
mov
jne
sahf
adc
testl
in
add
or
xor
xchg
jbe
jne
pop
add
xchg
pop
sbb
jbe
je
push
mov
sbb
mov
repnz
mov
push
fwait
int3
ss
pmuludq
icebp
jne
sbb
mov
xor
mov
push
icebp
lods
add
mov
popw
fiadds
cmp
and
or
lret
ja
rolb
in
mov
push
dec
jl
rolb
push
sbb
mov
mov
adc
sbb
add
aam
xchg
push
or
mov
fisubl
daa
and
inc
jg
add
cs
stos
inc
mov
les
pop
push
adc
outsl
jmp
fdivs
jnp
dec
shrb
jnp
inc
or
aad
or
and
rorb
push
sub
in
xchg
pop
movw
pop
icebp
pusha
stos
push
pushf
mov
adc
pop
int3
mov
mov
xchg
jae
or
or
pushf
add
adc
adc
mov
push
fmull
pushf
je
push
xchg
xor
cwtl
add
sbb
data16
inc
icebp
push
insb
jg
div
push
frstor
pop
lea
cmp
sub
push
loopne
pop
mov
test
jl
out
jecxz
jge
outsl
lret
xor
inc
mov
add
push
rol
ficoms
sbb
pop
xor
das
jge
xor
jl
sbb
mov
mov
lea
jp
xor
push
and
or
dec
add
mov
add
cmpl
mov
pop
sub
jmp
push
cmp
and
pop
add
insb
mov
cmc
xor
in
add
cmp
in
pop
cmp
xor
inc
dec
nop
and
test
shl
fs
fisubrs
sub
pop
add
loope
aaa
xchg
add
add
mov
pop
lds
or
cld
add
jo
sub
repnz
adc
adc
mov
sub
stc
push
adc
sbb
sbb
dec
push
cmp
je
in
push
xchg
lcall
fbstp
pop
rorl
inc
cld
jo
jnp
lea
sub
les
cli
push
test
push
pop
psrlw
dec
clc
inc
lret
mov
jo
and
das
pop
add
jno
xor
mov
adc
or
lcall
cld
dec
repz
push
push
pop
adc
pop
cmp
and
push
jmp
sub
ljmp
mov
mov
into
cmp
pushl
add
dec
jmp
cltd
push
shl
mov
sbb
and
dec
jne
iret
jns
ja
mov
pop
lcall
andl
ret
or
mov
jno
je
push
movsb
or
dec
adc
leave
jae
cmp
xchg
dec
inc
int3
mov
test
mov
aaa
sbb
outsb
cmpb
pop
cld
pop
es
jl
cmp
mov
pop
hlt
jge
sub
dec
sbb
fnstenv
add
push
addr16
or
adc
jmp
mov
jmp
add
ret
mov
lock
dec
mov
dec
cmp
jl
mov
cmp
add
or
fcom
dec
mov
ret
sub
call
in
out
add
or
inc
fsubr
stos
jecxz
lcall
jb
repz
sub
jmp
iret
sbb
and
pop
pop
xlat
or
inc
shrb
mov
in
xlat
data16
out
and
sbb
rorl
ss
gs
or
dec
push
or
leave
and
daa
adc
loopne
pop
mov
xor
xor
addl
popa
and
jne
sub
mov
mov
clc
dec
ret
dec
adc
clc
push
sbb
ret
or
rcrb
add
data16
push
stc
xor
jecxz
adc
outsb
clc
cmp
jl
icebp
sub
xorb
ret
sub
addl
in
pextrw
sbb
pop
jl
jnp
or
xor
push
push
xlat
outsl
mov
outsl
push
sbb
movl
lret
push
cmp
insl
xor
lds
insl
cmp
jl
pop
pop
enter
inc
jle
insb
jmp
cmp
xchg
sub
sbb
inc
cmp
leave
cmp
lods
fsts
incb
daa
xchg
jp
pushl
add
add
xchg
mov
xor
push
jl
loope
inc
call
fisubl
mov
sti
add
outsl
mov
cmp
mov
decl
jp
sub
mov
out
fdivrl
clc
cmpps
add
sub
cmp
cmp
push
jle
mov
push
sbb
push
cwtl
cmp
mov
fidivs
xchg
enter
push
sub
iret
fidivrs
sub
push
mov
rcrl
cmp
jl
push
jae
test
jg
out
cmp
pop
mov
push
add
sarb
and
je
cmp
push
cmp
je
cmp
je
mov
rdtsc
cmp
aad
add
out
or
sub
inc
or
mov
mov
adc
mov
das
out
jmp
push
mov
mov
into
add
dec
sub
insl
mov
jg
call
pop
sbbl
sub
dec
gs
cmp
add
or
mov
call
loopne
rorl
and
shlb
jbe
test
sub
mov
mov
xlat
loopne
je
or
fcomps
daa
fbld
jns
pushl
pop
ds
sti
cmp
jl
repz
and
nop
pop
cmp
cmp
sub
movsb
inc
mov
push
sbb
jmp
jecxz
add
jnp
or
inc
cmp
sbb
ret
mov
rorb
pop
outsl
cld
sub
ret
push
clc
sub
jle
ret
jo
cmp
adc
inc
add
das
outsl
or
xor
je
or
dec
imul
push
push
je
xor
or
mov
adc
mov
mov
repnz
lahf
das
jmp
adc
mov
sahf
mov
incl
add
je
cld
or
cmp
shr
pop
pop
add
in
sbb
pop
inc
subb
in
adc
adc
add
jne
lock
dec
int
xor
xchg
inc
ljmp
and
psadbw
jb
enter
xchg
sahf
or
cs
push
cmc
lods
sub
or
lods
cmp
jo
mov
adc
outsl
inc
imull
push
add
fmuls
or
add
add
or
rcl
movsl
and
jne
adcb
ss
cli
movb
cmp
sbb
jae
mov
sbb
addr16
xorb
jnp
adc
xor
adc
repz
push
pop
xor
push
cmpsl
cmp
dec
push
jg
cmp
pop
pop
mov
clc
and
mull
mov
test
mov
rorb
cmp
dec
or
pop
pop
push
push
mov
add
inc
sub
lret
sub
data16
rol
xchg
mov
cwtl
pop
add
or
push
pop
clc
dec
pop
mov
push
cmpsl
divl
push
xor
mov
inc
or
pop
add
pop
test
mov
add
xor
inc
push
outsb
adc
push
push
test
insb
mov
jmp
div
insl
call
aaa
and
imull
subl
sbb
cmp
xor
pop
loopne
cmp
sbb
mul
out
xchg
imul
pop
dec
lock
outsl
xchg
clc
iret
jg
lea
mov
out
loopne
pop
xor
or
mov
mov
in
inc
in
jge
add
sub
jbe
mov
leave
stc
and
into
mov
adc
push
sbb
push
or
dec
xlat
arpl
dec
rcrl
andb
xor
push
lock
sbb
pop
ret
add
push
cmpl
mov
test
int3
or
dec
mov
jl
inc
adc
mov
mov
pop
or
xchg
mov
fstpt
decl
dec
jne
mov
mov
lret
add
lcall
push
push
sub
xchg
dec
daa
jmp
jae
mov
ret
pop
add
pop
int
out
jo
xor
fsubrs
ds
sbb
push
test
and
inc
clc
testl
sbb
in
add
add
scas
test
ljmp
ja
les
push
sahf
and
jbe
jne
sbb
cmp
xchg
mov
into
jmp
and
jae
add
je
push
loop
mov
inc
xor
test
sub
es
decb
ss
inc
sti
andb
or
test
popl
mov
and
lods
es
clc
xor
mov
js
adc
mov
jbe
add
mov
fstl
mov
ret
xchg
into
test
mov
mov
call
sbb
pop
add
pushf
adc
std
insl
mov
or
pop
js
pop
jge
cs
or
add
mov
stos
cmp
std
in
mov
ljmp
movsl
cmp
lea
pop
addr16
xchg
in
mov
dec
cmp
aaa
ja
sub
cmp
mov
outsb
mov
sti
inc
push
push
xor
xor
fs
dec
repz
ja
mov
idiv
mov
push
xchg
ret
push
movb
mov
mov
dec
jle
jmp
inc
add
aad
add
roll
icebp
call
or
imul
gs
xor
cs
insb
fucomip
mov
cmpsl
inc
gs
outsl
outsb
addr16
popa
xor
insl
xor
loopne
mov
xchg
jecxz
mov
aaa
subb
pushw
add
push
cltd
mov
sub
je
sbb
add
cmp
mov
mov
cmpsl
mov
dec
sbb
xor
fcomp
add
out
mov
cld
dec
pop
push
mov
sbb
cmp
loopne
add
test
clc
nop
les
std
pop
jecxz
and
push
push
repz
iret
in
sub
sub
call
sarb
pushf
or
pop
cwtl
xchg
cs
or
sbbb
mov
cmp
js
cmp
jne
or
popf
inc
inc
je
fsubrl
rorb
pop
imulb
iret
push
test
push
adc
sti
jge
int3
push
je
pop
aaa
cs
pop
repz
cmc
add
out
sub
adcb
loop
inc
out
arpl
gs
fsubrs
sbb
and
test
sbb
mov
push
push
adc
push
shl
add
or
mov
push
mov
addr16
jne
mov
and
in
or
sub
xor
testl
push
mov
es
aam
adc
fcmovu
dec
shll
pop
icebp
pop
or
push
or
push
ljmp
push
mov
rcll
jo
mov
mov
jne
in
add
pop
xchg
shlb
add
adc
add
pop
repnz
push
add
inc
mov
cmp
jnp
push
filds
mov
pop
aas
aaa
adc
pop
and
aam
or
or
jg
pop
je
jnp
adc
or
pop
mov
push
mov
push
add
cmp
push
ja
dec
rolb
stos
cmp
push
mov
sarb
faddl
add
sbb
aam
mov
pop
and
fs
loope
clc
dec
ret
and
loope
ja
and
jle
pop
push
mov
hlt
sub
inc
mov
nop
addr16
xor
fs
iret
or
imul
xchg
in
sbb
in
loopne
enter
fmul
and
imul
mov
fdivs
adc
or
push
loop
pop
ret
xchg
and
mov
adc
inc
outsl
mov
decb
loopne
or
lods
aam
cwtl
es
arpl
add
cmp
sub
pop
xor
jl
hlt
scas
adc
loopne
jge
ret
mov
addr16
sub
jmp
xchg
mov
lock
add
nop
adc
test
fisubs
dec
and
ds
pusha
pop
pop
orl
push
adcl
dec
or
enter
cmp
enter
xor
enter
sub
and
orl
sbb
orl
adc
or
cmp
enter
cmp
nop
inc
push
hlt
lock
repnz
xchg
mov
mov
push
testl
xlat
or
push
es
pushf
xchg
pop
enter
dec
loop
pop
icebp
and
hlt
orl
cmc
div
clc
or
enter
sti
xor
and
and
and
in
or
enter
call
jmp
and
and
and
aam
or
enter
fmuls
enter
enter
fstp
enter
ffreep
shll
or
ret
orl
enter
and
lret
enter
int
enter
iret
mov
and
mov
or
enter
mov
mov
and
and
and
movsb
fmuls
enter
mov
mov
add
inc
or
inc
inc
mov
add
sub
daa
jge
inc
js
gs
or
dec
and
scas
pop
adc
nop
push
enter
sahf
inc
dec
gs
jo
dec
fmulp
pop
nop
fs
fs
pop
inc
push
mov
je
push
adc
mov
adc
rcrb
inc
dec
outsb
repnz
jb
sbb
sbb
inc
popa
add
mov
enter
jo
in
cmp
jo
pop
adc
pop
rorb
or
or
or
mov
pusha
push
sub
pop
dec
ljmp
or
imul
outsl
nop
cmpb
push
popa
outsb
test
gs
push
fmul
mov
outsb
jbe
jb
insb
outsl
ja
adc
arpl
cmp
test
dec
cmpsb
mov
mov
cld
pop
sub
mov
pusha
lret
jae
jbe
imul
adc
sbb
arpl
mov
push
cmp
and
and
loope
mov
imul
add
pop
nop
in
or
insb
rorl
loope
pop
push
outsl
imul
pusha
jge
pop
or
or
inc
les
inc
je
pop
inc
xchg
inc
rclb
xlat
add
lret
add
adc
inc
inc
arpl
push
mov
dec
scas
popa
lea
pusha
fs
rorb
js
gs
nop
mov
mov
scas
push
je
arpl
nop
adc
or
pop
and
adc
lret
xor
je
insb
inc
imul
test
pop
push
popa
inc
fldenv
or
lahf
enter
sbb
and
les
fsub
and
inc
popa
outsb
fs
sub
add
pop
sub
mov
andl
jb
adc
inc
fsts
cmpsl
push
stos
data16
xchg
or
hlt
mov
arpl
clc
aas
adc
cs
xor
inc
xor
and
pop
or
jbe
mov
push
and
sbb
and
nopl
mov
push
cs
adc
fildl
cmc
div
mov
add
adc
roll
je,pn
pop
cs
inc
mov
pop
arpl
adc
pusha
ret
decl
test
mov
mov
sbb
dec
hlt
add
sub
lahf
or
adcb
ret
dec
shll
cmp
andb
aas
mov
mov
testl
xor
or
mov
sub
mov
sub
inc
mov
sbb
rdpmc
aaa
mov
outsb
rorl
scas
jae
xor
sub
xchg
push
ss
xchg
ljmp
ret
mov
push
or
ss
testl
or
dec
mov
jp
xchg
adc
inc
sub
cwtl
jne
in
incl
addb
cmp
jl
cmpb
jbe
or
or
pop
dec
adc
fcomp
ret
cmp
sub
add
pusha
fs
data16
push
imul
pop
outsb
push
dec
jbe
sbb
push
adc
aad
pusha
mov
aaa
or
jne
or
jns
idiv
push
cld
ja
pop
stos
mov
inc
dec
mov
ret
lcall
push
outsl
dec
scas
cmp
incl
adc
ret
push
or
pop
sub
sub
jbe
out
call
add
mov
sub
jmp
mov
dec
jne
xor
in
adc
leave
push
aaa
adc
pop
dec
xchg
mov
pop
or
sbb
push
imul
pop
add
jmp
jo
pushl
mov
negl
cmp
aam
cmc
pop
pop
pop
pop
xor
inc
ljmp
pop
or
jl
add
cmp
orw
xchg
add
fldcw
mov
call
mov
andl
in
mov
and
fildll
ret
sub
inc
mov
rorl
fildll
stc
mov
std
outsl
fucomi
xor
add
push
push
fcom
fstsw
sahf
jae
call
mov
add
ffree
ffree
ffree
ffree
pop
ljmp
add
aas
pop
push
mov
out
and
or
gs
and
ljmp
add
sub
xor
or
sub
inc
sub
ljmp
jge
outsl
push
shl
fbstp
mov
push
sete
pop
mov
mov
sbb
sub
ud1
adc
jb
dec
shlb
mov
insl
jp
sahf
add
addr16
push
pop
bound
ja
jb
cmp
and
add
test
inc
ljmp
jl
inc
mov
repnz
push
xchg
mov
shrb
and
mov
decl
out
xchg
es
aas
mov
pop
add
lods
add
sbb
decl
jne
movzbl
or
fidivl
std
dec
rcll
cmp
movsb
mov
test
fldt
std
inc
sti
lock
setne
jmp
sbb
push
push
in
ret
fisubl
adc
or
pop
xor
nop
insl
jnp
movb
and
or
sub
or
xor
or
and
pop
add
or
fmull
sub
mov
sub
dec
adc
aad
es
and
push
pop
repnz
loopne
imul
icebp
adc
and
je
mov
add
sbb
clc
daa
or
fildl
xor
sbb
mov
pop
adc
xlat
add
clc
cmp
jne
dec
pop
jg
aaa
inc
inc
xchg
jecxz
das
mov
test
pop
push
mov
lds
xlat
rorl
loope
cmp
call
lods
roll
ja
add
clc
clc
push
insb
cld
push
mov
inc
insl
pop
add
push
mov
mov
xchg
or
inc
inc
cmpl
mov
shrb
loopne
dec
mov
lock
or
dec
pop
mov
js
jne
aas
jle
push
imul
es
neg
and
filds
fwait
pushfw
add
je
test
jne
loop
mov
lea
ret
add
ret
sbb
imul
cmp
inc
inc
sbb
inc
sub
xor
sbb
cmp
inc
sub
mov
jl
jp
in
cli
mov
and
movsl
mov
lods
rcll
movsb
and
or
pop
pop
pop
xlat
mov
xor
or
xor
mov
in
repz
je
mov
cmp
pusha
sub
jg
cmp
ja
sub
mov
inc
or
pop
dec
jp
ljmp
jno
mov
mov
push
dec
cmp
jne
adc
push
sbb
clc
inc
or
cmpsl
xchg
sti
movsl
fildl
lcall
roll
cs
mov
pand
outsb
and
lea
cmpsb
lods
mov
subl
cmpl
inc
lcall
push
sub
stos
jae
push
mov
mov
push
push
jp
mov
es
pop
pop
push
inc
sbb
scas
shl
pop
jl
add
mov
push
bound
mov
ds
cmp
jbe
mov
xchg
add
add
dec
mov
arpl
mov
fnsave
add
sbb
and
add
add
insb
mov
fdivrs
mov
dec
sub
mov
roll
cmp
xchg
movsb
loopne
pop
or
rcrl
test
mov
gs
rcrl
xchg
push
adc
into
jecxz
add
pop
lock
jge
or
lea
adc
or
lods
subb
clc
cmc
arpl
push
bnd
mov
cmp
outsb
mov
adc
gs
es
mov
lret
lods
jmp
out
mov
outsl
cmp
adc
mov
add
pop
fdivrs
jae
fildl
in
mov
aaa
xor
cs
movsb
xchg
or
gs
mov
rep
or
hlt
adc
sbb
pusha
cmp
aaa
mov
scas
dec
popf
pusha
insl
inc
cmp
xor
mov
cmp
imul
out
shrb
ret
xchg
add
pop
daa
jle
fcomps
movsl
cmp
adc
sub
je
leave
pop
jnp
aas
ret
and
mov
sahf
sbb
ljmp
jne
lea
mov
dec
push
aaa
dec
mov
clc
and
cltd
jno
sub
fldl
arpl
fldcw
jmp
add
bswap
sbb
jb
push
cli
aam
pop
hlt
xor
rorl
mov
rcrl
mov
push
nop
fcoms
faddl
and
test
notl
inc
and
dec
add
mov
ljmp
fucomi
mov
cmpsl
cs
adc
push
dec
cmp
xchg
adc
cmp
jne
jle
ss
push
bound
cmp
jbe
sbb
adc
jmp
mov
popa
leave
pushf
and
lods
adc
jmp
mov
ja
testl
cmp
mov
pop
cmp
mov
or
mov
dec
cmc
add
ja
add
jns
lahf
mov
shlb
dec
mov
mov
pop
push
leave
mov
repz
adc
aaa
mov
mov
je
mov
push
inc
je
mov
inc
je
mov
add
jp
mov
pop
mov
ret
mov
and
lret
dec
pop
fildl
adc
mov
clc
adc
pop
outsl
vmwrite
xchg
pop
dec
fcomps
and
movsb
xor
jp
scas
fnstsw
sbb
adc
and
push
iretw
lahf
push
lock
mov
shl
sbb
orl
xor
add
xchg
xor
roll
inc
push
jo
push
inc
ret
mov
inc
sbb
add
fiadds
outsb
iret
adc
mov
fsubp
mov
inc
loopne
xlat
pop
mov
xor
jne
mov
in
hlt
out
dec
pusha
mov
add
adc
mov
into
mov
pop
jg
jmp
sub
out
aam
mov
pop
ret
fnstenv
pop
push
inc
outsb
mov
out
jle
xor
xchg
mov
idivl
test
rorb
sub
imulb
mov
add
or
outsl
push
pop
lcall
loopne
xchg
xchg
orl
cmp
jg
cmpsb
ficomps
adc
pop
in
inc
jg
dec
mov
stos
push
pushf
add
cmp
jne
pop
pop
mov
or
fbld
mov
jbe
cli
mov
psllq
add
mov
sub
or
fcompl
popa
mov
jle
xor
test
adc
fsubr
add
jg
add
or
sbb
cmp
pop
arpl
and
data16
lea
pop
and
pop
xchg
sub
cmp
dec
pop
adc
ja
movhps
cmp
add
shrb
pop
push
sbb
mov
cld
mov
addr16
cmp
pop
jmp
dec
dec
inc
hlt
fsubrs
mov
dec
lods
or
add
ret
cltd
jo
mov
stos
ret
jle
dec
aam
ret
jg
xor
or
sbb
sbb
or
add
sbb
aaa
rolb
inc
inc
je
stos
loop
mov
adc
or
and
daa
fwait
insl
inc
sbb
pop
add
test
mov
jg
or
mov
mov
add
leave
mov
mov
sub
icebp
mov
in
and
adc
mov
jmp
mov
test
or
nop
dec
int3
jle
dec
mov
repz
inc
push
rorb
mov
in
dec
jne
cli
ret
sbb
call
mov
stos
jecxz
cmp
or
insb
in
push
mov
cs
ret
dec
jns
lret
mov
and
or
cmp
xchg
mov
out
pushf
fwait
popf
ja
mov
mov
cmp
je
push
push
and
inc
dec
or
lcall
push
rcrl
inc
loop
push
lock
mov
imul
mov
movsl
or
and
fscale
jle
adc
inc
sub
sub
fst
sahf
sub
sub
out
aaa
or
sbb
sub
sub
fsubrl
out
dec
lods
cld
add
adc
imul
push
mov
mov
cmp
testl
cmc
adc
jle
add
mov
movb
imul
in
lret
aas
imul
clc
adc
fldl
repz
fabs
push
in
divb
and
frndint
jmp
fcomp
fstsw
fwait
pop
outsl
dec
mov
inc
testb
xor
mov
ljmp
fbstp
mov
mov
mov
inc
sub
dec
rorb
or
xor
popf
jmp
clc
fildl
or
les
call
or
add
call
jae
out
mov
mov
jb
add
add
or
xchg
js
xlat
in
jmp
data16
mov
fs
outsb
jg
mov
and
je
sti
push
or
shr
mov
add
dec
jne
loopne
out
cmc
fs
movups
arpl
or
pop
mov
lcall
div
lods
add
or
jge
ret
mov
aad
add
pop
mov
adc
jmp
loopne
jae
dec
add
add
fildll
cli
aaa
je
or
or
fidivl
inc
jecxz
pop
ficomps
mov
or
jne
into
and
jne
dec
sub
jmp
mov
add
pop
push
jo
iret
adc
push
and
mov
insl
mov
cmpsb
adc
sub
movb
cmpb
idivl
ret
pop
jmp
fisttpl
js
and
sbb
sub
icebp
test
pop
fstcw
fnclex
fld
fbstp
out
shrl
mov
cmp
aas
mov
add
push
mov
xor
inc
push
inc
pop
push
push
cmp
je
adc
cmp
test
inc
shrb
add
aas
dec
jne
cmpsb
pop
scas
push
andb
in
outsl
sbb
push
add
loopne
mov
or
xlat
fstpt
ds
mov
dec
adc
or
pop
mov
ret
xchg
jmp
data16
and
loopne
pushl
cmp
jae
fimull
imul
sbb
pop
imul
xchg
sub
inc
imul
popl
scas
hlt
enter
add
stc
mov
cpuid
dec
fstl
mov
push
shlb
sub
pop
outsl
das
ljmp
or
loopne
cs
push
inc
xchg
mov
pop
push
arpl
push
aam
jb
mov
fldt
fstpl
fwait
and
flds
jb
adc
add
add
frstor
and
in
shll
icebp
and
pop
pop
jmp
divl
cli
lods
inc
pusha
or
push
in
outsl
in
scas
clc
repz
push
clc
sbb
sub
mov
add
stc
inc
pop
sbb
dec
jae
hlt
shlb
in
inc
icebp
in
out
add
shrb
pusha
xor
ret
push
xchg
shr
add
add
fildl
or
inc
jl
xor
fstpl
fwait
xchg
pop
pop
imul
lds
rorb
mov
or
ficoms
dec
mov
inc
mov
dec
insb
cltd
lret
jo
cmp
mov
jl
adc
call
mov
or
enter
loopne
js
insb
dec
and
fnstenv
mov
add
mulb
sbb
nop
add
and
dec
dec
or
fnstcw
push
sub
std
add
mov
inc
push
jg
in
mov
lods
mov
jge
addb
or
call
jb
add
sti
insb
cmp
movsl
test
push
xor
ja
or
loopne
mov
jnp
add
inc
dec
mov
mov
dec
mov
lahf
cltd
idiv
imul
pop
rcll
sar
add
sub
pop
test
jbe
mov
stc
add
xor
add
out
mov
jne
std
std
add
pop
adc
outsl
push
xor
jbe
jb
lods
loop
call
xchg
inc
or
ret
push
sbb
add
rorl
xorl
cs
dec
mov
jl
imul
adc
movsb
adc
or
xor
pusha
repnz
fwait
lods
mov
xchg
add
or
dec
lock
data16
push
mov
push
fs
fsubrs
dec
pop
mov
bound
or
adcb
dec
ss
outsb
insl
adc
mov
adc
add
lods
rcl
cmp
dec
mov
pop
jb
or
fists
ficompl
sbb
aam
cltd
in
imul
inc
or
sbb
jno
xor
push
bts
push
push
outsb
dec
rol
aaa
ret
insb
push
clc
ret
xor
dec
inc
sti
je
sub
lods
and
mov
inc
sub
mov
mov
rcrl
fiaddl
add
adc
lea
xchg
testl
pop
adc
cli
int
dec
xchg
cmp
jae
popf
xchg
adc
push
add
ss
xor
add
outsb
inc
or
or
add
jg
adc
dec
push
inc
or
inc
cmp
adc
insb
stc
or
push
cmp
popl
je
fimull
inc
hlt
sub
mov
js
add
fdivl
adc
jge
or
mov
dec
out
mov
push
lock
repnz
or
inc
in
add
aaa
jecxz
sbb
sbb
out
ljmp
jecxz
stos
in
pop
mov
cli
in
sub
imul
lcall
in
or
out
iret
in
push
out
repnz
mov
push
and
cwtl
push
pusha
jo
add
sbb
inc
jge
xlat
pop
add
mov
xchg
sub
cmp
pop
popf
mov
add
add
jne
cmpsl
mov
add
lods
rorl
cmp
adc
fisubl
lgs
bound
call
xchg
sbb
movsl
add
inc
fistpl
xor
bound
or
mov
push
jno
lock
mov
mov
xor
pushf
inc
les
pop
push
in
movntps
jecxz
add
inc
inc
jnp
jne
or
aas
or
jp
orl
jl
jmp
mov
xorl
pop
adc
cmp
jne
shlb
test
into
dec
addl
adc
inc
xor
jns
add
add
or
mov
adc
push
aam
fdivs
adc
in
sbb
mov
cmp
mov
rolb
add
ud0
scas
loop
add
add
loope
scas
sbb
mov
sub
add
xlat
sbb
add
popf
pop
fnstenv
lret
or
sbb
jnp
adc
pop
dec
adc
sti
sub
sub
jae
add
or
das
inc
jl
jge
dec
pop
dec
mov
pop
sti
lea
fisubs
ja
andb
dec
inc
and
std
push
inc
les
cltd
add
or
decl
or
or
add
add
add
or
or
add
mov
ss
mov
cld
xchg
pop
lcall
les
mov
mov
push
les
pop
push
fsubrs
sbb
and
dec
cmp
add
mov
punpcklwd
shll
pop
cld
and
add
dec
and
or
sub
xchg
and
aam
or
and
dec
mov
les
or
jmp
mov
cmp
adc
sbb
mov
popf
sub
sbb
cmpsb
dec
je
add
jg
add
add
xor
xor
mov
leave
inc
mov
mov
and
adc
adc
fdivrs
adc
pop
xchg
loopne
aaa
sbb
xorb
iret
or
xchg
jecxz
test
jl
xchg
mov
filds
jnp
and
add
mov
das
decl
jmp
sub
je
pop
je
jmp
mov
jne
dec
jno
mov
dec
enter
adc
mov
mov
cmp
jne
addr16
fidivs
add
lcall
fisubs
fidivrl
xchg
fisubrs
mov
frstor
push
or
add
aam
lea
inc
add
dec
dec
jns
add
in
in
call
or
add
lcall
add
and
add
test
pop
addb
dec
xchg
cwtl
addl
imul
pushf
cmp
pop
xor
and
add
cmp
loop
xchg
fs
movsl
jmp
adc
dec
push
jb
add
imul
cltd
or
test
sbb
into
add
jp
repz
dec
dec
or
addr16
and
xor
push
or
out
lret
or
dec
sti
outsl
dec
out
cmpb
ds
sub
dec
and
jbe
arpl
push
adc
add
nop
bound
mov
or
adc
pop
sub
popf
or
adc
sub
clc
and
test
mov
arpl
jmp
xchg
and
dec
das
push
dec
icebp
push
or
sahf
or
add
adc
or
iret
clc
mov
sub
fs
fs
jne
or
mov
xor
dec
roll
inc
imul
pop
shr
divl
sbbb
pushf
cmp
jg
je
mov
test
and
sub
clc
lahf
cmp
mov
daa
std
stos
pop
aad
mov
notb
sbb
orb
push
mov
data16
pop
clc
lret
jbe
adc
inc
add
sub
jae
fimull
int
sbb
ret
stos
dec
jge
sub
add
outsb
pop
pushf
rorb
push
aam
divl
inc
ljmp
mov
lea
sbb
test
or
popa
lea
inc
lret
push
mov
mov
repz
push
in
clc
lock
add
fcomi
outsb
leave
and
pop
add
mov
mov
cmp
or
xchg
fsts
lock
inc
add
pop
lcall
cmp
jne
adc
insl
pop
mov
xor
or
incb
je
dec
fisubrs
jne
mov
sub
je
jmp
mov
jmp
add
sub
jne
ret
jmp
inc
idiv
jle
jae
add
push
add
mov
add
or
popa
int
mov
jl
sub
or
popa
fcmovnb
ja
ss
rclb
subb
mov
jns
push
sub
add
pop
pop
add
sub
push
xor
or
movsb
jne
mov
push
sti
fmuls
les
jne
cmp
jg
mov
gs
xor
sub
add
mov
adc
imul
add
sbb
mov
xchg
push
negl
push
mov
cld
je
andb
ret
ret
push
fadd
mov
sbb
fsub
clc
flds
mov
scas
adc
push
ljmp
add
call
add
jge
out
push
pop
or
mov
and
xchg
rcrl
or
push
push
or
js
test
out
dec
and
mov
fdivrl
mov
jl
aas
mov
ficomps
sbb
movzbl
pop
jge
and
out
and
shr
or
add
movsb
jns
in
fnstenv
mov
sub
jb
and
je
jne
sarl
in
in
lock
fmuls
ljmp
out
shlb
xor
lock
xor
pop
in
sub
jmp
clc
jmp
out
add
jno
ret
in
add
or
jmp
push
sbb
jbe
inc
pop
mov
cmp
jle
adc
fs
cmp
repnz
fcoms
adcl
mov
mov
xor
lock
mov
pushf
and
mov
fstl
nop
ss
and
mov
ljmp
push
xchg
xor
and
xor
jnp
mov
pop
pop
les
fdiv
xchg
daa
nop
sbb
mov
pop
xlat
sub
hlt
dec
sti
push
jae
insl
or
mov
xchg
fmuls
fs
add
add
repz
and
xor
stos
mov
into
repnz
jmp
dec
or
lret
movsb
test
mov
pop
push
lret
adc
sub
dec
enter
mov
cmc
pushf
cmp
adc
sub
leave
js
mov
add
into
push
or
xor
inc
sbbl
test
dec
or
add
nop
or
pop
sbb
inc
or
es
add
clc
add
out
leave
arpl
or
jne,pt
or
lea
add
inc
push
sbb
sbb
ljmp
adc
pop
jo
stos
dec
adc
cltd
in
mov
add
push
sbb
mov
into
cmp
adc
dec
adc
in
xchg
sbb
and
pushf
adc
fs
sbb
loopne
xchg
cmp
popf
xor
mov
adc
adc
aam
cld
push
int3
inc
fdiv
add
add
movsb
sti
adc
add
mov
test
sub
mov
fcomps
or
mov
fstpl
fwait
jmp
or
call
inc
inc
roll
dec
fisubrl
repz
sub
ror
mov
incb
xor
pop
psubw
sub
jb
add
je
mov
xchg
jp
mov
dec
mov
in
pop
fs
or
adc
cs
ror
dec
mov
cli
or
sub
and
pop
das
push
add
in
push
in
adc
mov
xor
addb
aas
ss
arpl
cli
adc
leave
push
test
or
int
mov
cmp
repnz
ss
add
sub
jmp
sbb
fisubrl
mov
or
mov
lea
inc
out
inc
inc
dec
gs
lods
xchg
out
pop
and
cmpb
cmp
and
mov
inc
orl
sahf
mov
add
or
movsb
cs
mov
decb
outsb
bound
add
sub
xchg
ret
jo
and
int3
inc
jb
subb
call
shlb
xor
adcl
jno
and
ds
je
inc
inc
or
dec
cmp
sub
test
cli
mov
cli
cmp
push
xchg
in
cmp
dec
sub
push
sarl
jmp
rorb
bound
mov
xchg
jne
sbb
sub
or
or
cwtl
mov
cwtl
adc
push
insl
push
pop
sbb
ret
cmp
or
sub
push
in
push
cmc
mov
sbb
dec
jne
push
sub
in
cwtl
gs
mov
cmp
sbb
mov
or
xor
xabort
lcall
ret
dec
add
inc
popf
bound
decl
aaa
jmp
ficompl
ljmp
je
sub
loop
ss
je
fmuls
push
andb
sbb
test
pop
nop
jle
ret
pop
mov
daa
pop
dec
mov
rcll
push
xor
lock
mov
mov
push
add
ds
mov
subb
stc
fwait
mov
cwtl
sbb
nop
inc
push
add
lods
rcrb
push
mov
lahf
popf
movsb
cmp
shr
clc
pop
je
sbb
jmp
int3
jmp
in
adc
mov
cld
ja
dec
pop
dec
scas
call
xor
lret
dec
or
xor
xlat
gs
jnp
mov
push
loop
orl
add
mov
sbb
and
dec
dec
and
lahf
pop
xlat
loopne
jne,pn
pop
xchg
mov
out
mov
aam
and
pusha
pusha
int
int3
and
out
sbb
fstps
test
int3
out
pop
mov
xor
es
mov
cltd
cwtl
mov
inc
psllq
lcall
dec
pushf
mov
add
cmp
dec
ret
push
sub
je
inc
add
add
imul
ret
cmc
int
out
subl
pusha
xor
xchg
in
xchg
inc
add
scas
roll
dec
xor
repz
and
mov
cld
movb
mov
mov
and
mov
fiadds
les
aad
ja,pt
jl
inc
lea
sub
arpl
and
push
dec
pushf
shlb
dec
xor
mov
pop
mov
jbe
sbb
mov
push
add
lods
fwait
insb
stos
xlat
dec
and
dec
pop
cs
insb
pop
or
hlt
cli
dec
in
test
popf
and
sbbl
sbb
sub
sub
bound
sti
dec
ficoms
push
ret
dec
sbb
or
mov
adc
inc
add
add
test
loop
add
sub
popa
sub
inc
enter
inc
mov
popf
push
add
push
or
push
inc
int3
xor
bound
mov
xchg
cmp
popf
jge
inc
fmuls
gs
mov
dec
idivl
in
sahf
aam
dec
popa
mov
push
lret
sahf
nop
movsl
movsb
sub
clc
int
mov
js
or
inc
fnstsw
push
ret
enter
push
cmp
arpl
and
repz
sub
fwait
test
mov
lock
mov
jg
pop
push
jg
cmp
or
adc
popf
je
lea
cmpsl
sub
sbb
xor
mov
sarl
mov
push
mov
mov
pop
dec
lahf
add
push
pusha
subb
popa
push
sub
dec
lret
dec
sbb
cmpsb
fisubs
jb
rcll
cmp
sub
sbb
es
jae
add
or
shrb
mov
jmp
insl
loopne
inc
ret
or
loopne
inc
lock
dec
mov
sbb
outsl
je
pop
cmc
ss
jle
mov
cltd
repz
pop
in
push
lock
clc
dec
repnz
in
sub
mov
js
sbb
gs
add
push
mov
rolb
aaa
and
mov
inc
jno
mov
rol
aam
pop
in
fs
inc
adc
fsubrl
add
xor
xor
pop
push
push
cmp
je
jmp
inc
nop
push
xor
inc
xor
sub
jmp
and
gs
xchg
in
ret
mov
add
gs
xchg
or
or
push
push
xchg
cmpsl
mov
xchg
mov
cmpsl
nop
mov
fwait
or
loop
mov
mull
jle
cld
cmpl
sete
mov
test
or
lods
cmpsb
mov
testl
xchg
fisttpl
in
mov
xor
decb
adc
sub
dec
mov
sbb
mov
sub
and
mov
push
aam
add
arpl
jle
mov
aaa
mov
into
fcomp
dec
jmp
xchg
xchg
ds
inc
dec
inc
pop
pushf
mov
inc
dec
xchg
add
mov
nop
out
mov
mov
cmpsb
aad
add
sbbl
and
in
push
fsubr
rolb
or
add
or
mov
cmp
push
rcr
adc
das
push
in
xor
hlt
add
mov
mov
lock
pop
xchg
sub
mov
sub
pop
enter
enter
aad
fimull
pusha
pop
repnz
push
push
mov
jnp
mov
mov
push
sbb
rolb
in
mov
fwait
stos
jge
and
call
or
push
mov
mov
arpl
sub
jmp
pop
movb
or
in
push
jp
and
and
push
sbb
pop
inc
xor
and
nop
inc
into
or
cmp
sub
cmp
cmp
loop
cmp
sub
mov
fstps
stos
xchg
cmp
dec
hlt
jb
ljmp
add
mov
fisubrs
mov
jne
adc
sub
sbb
or
push
xchg
in
addb
pop
rolb
cmpb
popa
ret
adc
or
testl
adc
or
sbb
leave
or
into
and
movsb
jns
dec
or
inc
sub
test
add
add
bound
inc
add
push
dec
int3
mov
sbb
sub
xor
mov
xor
sbb
test
inc
rcr
and
jmp
or
shr
clc
mov
xor
test
jg
mov
mov
out
add
or
mov
jmp
and
pop
imul
js
inc
and
subb
fmull
dec
lret
inc
inc
xchg
pop
mov
rorl
cmp
inc
push
sti
jbe
xchg
pop
hlt
jge
cmp
jl
add
and
sbb
and
xor
daa
outsl
xor
sahf
xchg
or
mov
ret
ret
cs
dec
xchg
jle
and
cmp
fdivr
dec
mov
cmp
mov
adc
arpl
xchg
pop
jmp
incl
bound
pop
ja
inc
adc
xlat
faddl
sarb
repz
ret
push
cmp
lods
adc
jl
pop
dec
adc
cmovne
adc
in
pop
cmp
sub
pop
or
push
adc
jae
das
and
mov
xchg
dec
sub
xor
xor
push
xchg
ret
pop
movsb
push
pop
aaa
outsl
pusha
and
add
popa
sbb
push
cmc
ret
sub
inc
push
leave
push
rdpmc
stos
inc
ljmp
cmp
push
fnsave
lret
je
cmpb
dec
push
inc
lods
sbb
or
sub
orl
mov
push
cs
sub
add
push
push
in
cs
outsl
mov
lea
aas
inc
add
ret
sub
cmpsb
cli
dec
push
stos
sub
cmp
jbe
nop
shl
or
xlat
adc
cltd
int3
or
push
push
adc
or
test
aad
out
lods
xor
scas
sub
stos
int3
mov
or
cltd
xor
inc
inc
and
int
fdivrl
xor
mov
in
push
push
movsb
scas
pushl
popa
pop
aaa
pop
sub
jb
inc
mov
enter
inc
xor
sti
test
lret
jne
sub
or
popa
adc
movb
in
mov
push
movl
or
push
or
mov
icebp
add
data16
mov
add
mov
push
subb
shr
mov
push
mov
pop
loopne
call
cwtl
mov
cwtl
rclb
xchg
pop
aas
movb
punpckhdq
dec
sub
lahf
in
jbe
rorb
mov
dec
pop
mov
aam
cmpsl
lcall
add
jae
rcrb
adc
stc
push
sbb
lods
jle
mov
lcall
xchg
add
repnz
lds
inc
adc
fwait
rolb
or
sbb
into
adc
pop
shlb
out
mov
push
and
sbb
aaa
xchg
add
sbb
add
jnp
mov
push
pop
dec
inc
push
fs
in
in
sbb
sbb
pop
repnz
pop
fdivl
and
pushf
loopne
or
sub
and
cmpl
pop
repnz
push
insb
adc
test
sarb
inc
sub
sarb
sbb
and
sub
mov
sbb
enter
xor
enter
popa
pop
mov
scas
push
cmp
xor
pop
fldenv
add
enter
je
mov
movsl
mov
cld
push
sub
mov
adc
enter
and
sbb
sbb
or
into
test
out
push
scas
sarb
notl
push
out
or
insl
das
fs
imul
mov
fs
xchg
add
or
dec
push
loopne
push
pop
idiv
femms
and
mov
orl
jae
pop
lods
fdivr
out
mov
outsb
imul
jb
jns
test
imul
pop
lcall
das
push
or
fs
gs
outsb
outsw
xchg
pop
xchg
mov
scas
and
xor
rolb
inc
jl
sar
xchg
or
add
inc
jmp
pop
inc
bound
sarl
jno
add
cmp
xchg
or
mov
cmc
and
test
dec
jae
push
push
or
adc
pop
gs
jmp
pop
or
test
out
xlat
add
or
adc
inc
add
outsb
xor
call
movsl
mov
lea
pop
cmpl
mov
mov
lea
dec
or
pushf
fisttpll
or
aaa
aad
imul
inc
ret
clc
mov
std
add
vmovq
arpl
inc
cli
mov
mov
push
mov
push
rorb
adc
inc
jb
mov
pop
imul
arpl
jbe
outsl
mov
push
mov
int3
iret
push
push
adc
jl
lahf
inc
das
mov
mov
push
roll
aam
push
subl
add
mov
xor
mov
aam
dec
std
jmp
fimuls
push
adc
mov
pop
sti
testb
sbb
call
inc
imul
nop
stos
jmp
jo
arpl
js
inc
out
xor
mov
int
and
rorb
pusha
fidivrl
inc
adc
sub
push
jne
fst
mov
iret
fcmove
shrb
scas
add
sbb
imul
cmpsb
jmp
mov
scas
imul
lcall
enter
pop
shll
pop
pop
dec
dec
lcall
cmp
loopne
add
je
imul
lcall
pop
or
inc
add
int
jmp
pop
pusha
hlt
pop
les
fldl
cmpsb
pop
in
add
in
mov
add
subb
xor
fwait
xchg
sub
insb
sub
test
xorl
mov
xor
enter
sub
pushf
insb
dec
shlb
movsb
cmp
xor
sbb
dec
xor
test
movsb
push
mov
sub
fwait
xchg
int
shrb
xchg
sbb
nop
xorl
push
mov
pushf
insb
dec
ss
test
xor
cmp
adc
jl
js
dec
xor
je
jo
nop
out
mov
sahf
xchg
int
lods
sub
pusha
sub
into
cmp
shrb
or
pushf
push
cmp
sub
mov
sub
sub
les
push
mov
mov
pop
clc
mov
dec
sbb
mov
sub
mov
enter
pusha
mov
fwait
cmp
cmp
fwait
xchg
dec
jb
or
sbb
and
and
push
xor
sub
mov
mov
xchg
pop
movsb
rorb
add
imul
shlb
cmpsb
leave
and
sub
call
cmp
sahf
adc
sub
inc
lahf
jns
adc
leave
push
adc
sti
add
fs
jo
in
inc
movd
jge
lea
mov
insb
aaa
pop
xchg
loope
sbb
adc
arpl
gs
das
add
bound
enter
dec
mov
aas
push
sub
ret
add
dec
xor
mov
loope
loopne
sbb
xor
repz
insl
fwait
aam
push
or
fildll
in
enter
inc
enter
add
rorb
add
mov
adc
inc
and
insb
xchg
dec
push
nop
sbb
cld
mov
clc
jno
mov
sub
jnp
xchg
insb
pop
push
sbb
mov
mov
mov
sub
push
sbb
pushf
test
mov
add
adc
fmuls
xlat
test
iret
imul
adc
movsl
cmp
icebp
sarl
xor
movsb
xchg
or
cmpsl
jnp
cmp
in
cmp
mov
jecxz
mov
push
pop
and
add
fs
out
mov
or
nop
addr16
fs
pop
mov
mov
jns
jl
push
movsb
loop
push
add
faddl
add
or
push
push
push
mov
jl
sub
mov
cmp
lods
sub
cmp
xchg
pop
xor
mov
xchg
adc
sbb
and
push
and
pop
and
pop
jb
sub
jb
and
cmp
xchg
xor
test
and
cmp
sahf
xchg
dec
lcall
int
dec
inc
adc
mov
dec
or
out
and
insb
mov
in
push
fdivr
cltd
fs
pop
push
mov
adc
sahf
outsl
loopne
addr16
sub
je
test
mov
dec
jo
in
arpl
adc
add
outsl
je
fs
inc
push
jns
jne
dec
jne
inc
imul
imul
jl
jb
pop
outsl
jb
insl
jo
idivl
insl
push
je
rsqrtps
inc
popa
je
adc
jns
inc
outsl
outsl
insb
psadbw
bnd
je
inc
jns
inc
pmulhuw
hlt
push
aaa
dec
inc
mov
pusha
sub
sub
or
clc
mov
and
shll
or
add
push
inc
outsb
mov
or
or
jp
add
inc
cmpsb
pop
outsb
daa
dec
loop
dec
jecxz
or
mov
lcall
add
fucomp
dec
cs
cmp
and
pop
enter
ja
adc
pop
adc
add
nop
cmp
pop
sbb
sbb
stc
mov
adc
adc
adc
mov
shll
and
inc
pop
mov
xchg
cs
sub
arpl
mov
adc
or
or
shrl
inc
leave
loopne
pop
mov
wbinvd
sub
addr16
shlb
and
inc
rolb
or
xchg
jl
sub
add
adc
in
jbe
sub
arpl
push
xor
or
pop
sbb
mov
icebp
leave
push
out
lea
addr16
int3
cmc
adc
jb
jl
fsubl
sub
adc
or
lods
dec
pusha
insb
lret
add
mov
inc
ret
sbb
movsb
mov
sbb
xchg
pop
arpl
mov
and
xchg
ret
or
xorb
imul
mov
rorl
ret
sub
test
mov
or
xchg
dec
inc
outsl
pop
add
in
push
mov
add
in
gs
les
dec
iret
adc
lret
and
movb
adc
mov
call
sub
xchg
in
pop
sub
xor
xchg
in
push
push
dec
out
mov
add
leave
and
pop
les
nop
pop
enter
enter
imull
cltd
inc
dec
xor
sbb
lds
shrl
inc
push
lds
js
xor
ljmp
xchg
cmp
jg
dec
push
mov
gs
adc
sub
in
mov
mov
sub
dec
je
push
lods
shrb
xor
imul
xor
mov
jo
sahf
mov
nop
pop
bnd
jno
sar
mov
das
jno
adc
mov
xor
clc
xor
mov
pushf
hlt
and
dec
jae
mov
add
mov
push
rorb
mov
daa
in
inc
sahf
adc
xchg
mov
jne
in
nop
and
mov
test
push
mov
enter
das
int3
or
ret
les
cwtl
fcomp
mov
add
mov
add
and
xchg
inc
repnz
nop
add
imull
inc
outsl
fistpl
inc
dec
or
push
dec
imul
outsb
roll
lock
jne
or
ljmp
orl
fs
mov
enter
enter
ret
mov
add
inc
mov
adc
imul
dec
xor
lods
jge
pop
add
adc
scas
gs
test
scas
ss
add
xchg
and
dec
jmp
out
in
inc
xchg
add
push
dec
outsl
sub
pop
pop
pop
adc
call
inc
pop
jae
add
pop
push
add
fldt
xorb
test
sub
add
outsb
pop
jp
or
test
icebp
xchg
das
fcmovne
pop
aam
cmp
jae
dec
fldt
data16
jmp
adc
inc
clc
inc
out
fldenv
push
lock
add
fnstcw
xor
lea
adc
adc
add
pop
pop
clc
test
andl
insb
shrb
add
bsr
rol
inc
dec
dec
jne
sub
mov
jne
inc
inc
inc
inc
insl
and
jb
push
shll
push
and
inc
inc
test
jae
pop
in
fiadds
fcomps
ss
jne
push
adc
movsl
pusha
movl
gs
or
mov
add
fmuls
outsb
test
inc
adc
subb
idiv
and
cmc
fnstenv
enter
shll
inc
test
xor
and
or
add
or
push
push
ds
imull
pop
mov
dec
push
mov
clc
sbb
clc
fimull
enter
jae
sahf
jnp
clc
or
or
inc
push
inc
ds
loopne
xchg
andl
cmp
loopne
add
rorb
jl
or
shlb
jp
lcall
inc
or
sbb
inc
xchg
out
fmull
sbb
mov
push
in
loope
xor
sbb
pushf
and
xchg
pop
clc
repz
mov
push
in
pop
add
push
xor
add
add
jg
cs
rorb
decl
push
or
imul
cwtl
mov
jl
movb
pop
sbb
cmp
xor
sbb
addb
fisubrs
adc
mov
push
pop
cmp
cmp
sub
jp
cmp
dec
add
cmp
je
lods
jne
mov
inc
fs
mov
push
mov
pop
addb
or
dec
mov
adc
pop
sbb
jecxz
sbb
push
sbb
cwtl
es
add
imull
stc
mov
jp
pop
stos
push
in
ss
sub
pop
mov
aam
mov
inc
pop
iret
dec
push
mov
mov
add
shlb
and
inc
shlb
fists
fdivrp
fildl
push
jns
cmp
js
es
pop
ss
and
hlt
push
mov
pop
push
test
add
movsb
jns
iret
lock
call
cld
daa
rcl
roll
cmp
pop
push
add
shll
cmp
mov
in
pop
inc
lods
inc
loopne
lea
jp
stos
clc
pushf
mov
mov
pusha
push
hlt
cmp
int
or
cmp
sbb
inc
add
into
cmp
in
mov
jmp
and
sbb
fs
jl
test
sbb
or
xchg
xchg
bound
das
ljmp
mov
les
sbb
jl
jge
fs
or
rcrl
lret
add
hlt
adc
in
adc
popf
xor
test
mov
in
mov
push
xchg
add
shrb
scas
pop
add
leave
rcrb
add
mov
lcall
pop
lcall
rorl
in
maxps
adc
out
add
and
aad
sbb
push
rol
stc
cmpb
mov
clc
repnz
pop
daa
push
and
jbe
loopne
cltd
lods
xor
sbb
sbb
mov
mov
fsts
icebp
mov
inc
and
sbbb
sbb
pop
xor
pushl
add
lcall
sub
call
fs
pop
inc
fadd
in
arpl
mov
adc
fmull
mov
cltd
fcompl
enter
fcom
movzwl
ss
nop
sbb
mov
pop
int3
ror
sbb
push
inc
ss
cmp
lods
sbb
enterw
enter
dec
and
ljmp
dec
int
sub
aaa
shlb
ja
nop
les
je
pop
sub
and
xchg
loop
mov
fwait
cmpsb
imul
frstors
add
mov
add
ds
js
xorl
add
loope
ja
mov
orl
add
mov
fs
mov
mov
lret
push
xor
mov
push
push
or
mov
cmp
shlb
test
mov
cs
dec
test
ljmp
mov
cs
pushf
push
sbb
pusha
pushf
jno
sbb
push
cwtl
cmp
cs
cwtl
jmp
rclb
dec
push
jmp
dec
pusha
sbb
and
es
pop
arpl
adc
mov
and
and
xchg
jb
push
mov
ret
std
test
pop
jbe
mov
nop
or
nop
xchg
push
xlat
jmp
pop
or
push
in
in
xchg
inc
enter
jecxz
loop
push
xchg
or
gs
jnp
dec
push
cmpb
pop
leave
jno
loopne
sbb
in
xchg
mov
xor
adc
xchg
repnz
cmp
ret
out
push
sub
in
sahf
inc
enter
fsub
fsub
mov
push
popf
or
das
test
sub
xchg
dec
xlat
push
int
flds
fstps
mov
lcall
fidivrl
int
lret
ficoml
in
ss
roll
sbb
ss
ficompl
leave
add
sbb
jl
or
add
daa
push
mov
pop
mov
push
sbb
and
and
dec
testb
mov
jno
sbb
sbb
in
in
pop
xor
adc
jecxz
fsubl
add
adc
sbb
xchg
xchg
rcrb
fsubrs
aam
sub
cmp
sub
inc
bound
fcmovnb
pop
mov
adc
dec
ss
enter
enter
add
hlt
es
repnz
rcr
add
andl
push
sarl
ret
lsl
push
nop
daa
ss
insl
mov
loop
cwtl
les
adc
in
rcrb
mov
mov
sbb
and
mov
dec
or
dec
and
mov
or
lods
adc
and
mov
inc
loop
ljmp
dec
sub
mov
xorl
adc
and
sub
sbb
enter
cltd
mov
pop
cmp
jl
je
sub
daa
sub
nop
hlt
mov
nop
mov
push
ljmp
xchg
les
les
nop
add
in
pop
jo
cmp
test
mov
xor
mov
or
shlb
jne
inc
repz
mov
pop
mov
pop
push
stos
pop
dec
push
mov
push
enter
pop
insb
add
inc
outsl
jne
mov
mov
inc
arpl
sbb
xor
push
xor
nop
push
xor
test
xchg
gs
outsb
cmovne
and
leave
data16
cmove
imul
daa
and
inc
out
pop
je
cmovnp
cwtl
mov
dec
add
fs
in
faddp
adc
add
push
iret
add
or
loopne,pt
fcomps
out
pusha
mov
ja
or
xlat
in
push
mov
adc
and
repz
push
mov
add
aam
int
fs
sub
inc
les
jo
out
rorb
xchg
cld
jl
into
loopne
or
lar
bnd
je
push
adc
out
xor
loopne
mov
lea
addr16
je
sahf
ret
adc
repnz
mov
je
test
inc
adc
xchg
pop
add
cmp
pop
in
adc
dec
jns
mov
outsb
jns
lock
and
push
packssdw
out
add
inc
mov
mov
xor
loopne
xor
mov
fs
cmp
hlt
add
mov
or
push
lock
test
xor
mov
aad
push
pop
insb
dec
add
mov
cltd
jl
push
mov
cmp
sbb
dec
jl
pushl
xor
ret
fdivrl
cmp
add
out
aad
add
lret
sar
mov
jne
jecxz
test
inc
push
ret
adc
mov
pop
stc
push
cltd
xlat
cmpsl
cmp
mov
shl
xchg
addr16
inc
sti
icebp
push
jge
pusha
decb
cmp
je
jl
adc
push
sbb
inc
mov
mov
sbb
aas
enter
imul
adc
add
out
pop
mov
bts
ret
int3
mov
call
jge
nop
popf
cmp
mov
stos
dec
movl
push
sti
aaa
jle
test
pop
pop
lds
fidivrs
shl
inc
adc
cmp
cmp
add
cmc
loopne
fidivl
inc
lods
insb
xor
jle
or
pusha
int3
inc
stos
inc
pop
ljmp
shlb
mov
testb
or
data16
test
lret
mov
inc
sbb
push
sbb
shll
mov
mov
incl
or
mov
xchg
or
daa
lret
and
sub
inc
add
xlat
rcr
popl
or
lock
jns
es
push
ljmp
ljmp
imul
sbb
dec
jle
in
fucom
sbb
sti
pushf
pusha
xchg
stos
xchg
cmp
and
cmp
push
in
jne
or
and
jo
in
sub
push
ret
cmp
lahf
in
jne
mov
xchg
test
mov
mov
and
es
loopne
repnz
mov
in
adc
cmpl
in
mov
and
mov
out
adc
xchg
add
insl
repz
test
rcrb
pop
add
jb
in
in
fcmovne
mov
scas
xchg
mov
clc
sti
rcrl
int
in
ss
cmpsl
cmp
xchg
or
ja
lret
lret
push
es
sbb
clc
cmpsl
lods
cs
das
outsl
adc
mov
cltd
inc
cmpl
sub
push
jl
mov
jns
sar
jbe
jnp
pop
addl
popa
sarl
mov
lret
lret
lret
ljmp
repz
loopne
lret
lret
lret
int3
pop
out
inc
or
dec
test
outsl
fwait
xchg
mov
adc
scas
sbb
dec
mov
ss
xor
lret
notl
ljmp
jns
mov
add
scas
les
mov
pop
ja
lods
xor
mov
add
ja
movntps
push
subl
mov
inc
les
scas
pusha
ja
adc
shlb
fwait
sub
xor
aaa
mov
lret
push
sbb
pop
aam
shrb
push
int
cli
enter
lret
fisttps
pop
cwtl
sub
xchg
and
pop
pop
pop
and
cmp
mov
sti
sub
xor
orb
insl
lahf
out
in
out
mov
hlt
test
lret
fistpl
cmp
push
adc
jae
pop
outsb
outsb
fwait
mov
rorl
push
addr16
ds
pop
neg
ss
aaa
or
cmpsb
cltd
jo
pusha
movsl
ljmp
insb
jno
stos
pop
add
push
pop
pop
pop
pop
sbb
into
pop
jnp
push
dec
in
rcrb
sub
in
cmp
mov
pop
pop
lea
cmp
lea
adc
push
cwtl
xor
in
in
sub
decl
int3
xchg
pop
xchg
int3
hlt
xchg
pop
cld
in
jge
or
or
loop
or
push
ret
mov
cld
jb
aad
shlb
adc
repnz
leave
pop
ljmp
push
loope
in
out
out
out
popf
mov
aad
pop
icebp
mov
fcmovne
fadds
clc
lods
movsl
xor
mov
lcall
xchg
and
out
sbb
hlt
and
lret
lret
lret
pop
adc
mov
jbe
cltd
mov
lret
imul
stos
mov
pusha
testb
inc
jle
sub
jle
cltd
dec
push
in
fstp
outsl
pop
lea
insb
add
inc
mov
fstpt
movsb
test
ss
repnz
test
daa
cwtl
xchg
add
lds
in
imul
insl
mov
test
into
repnz
lret
mov
xor
xchg
mov
mov
dec
add
std
xchg
pop
pop
mov
xor
jns
jns
xchg
in
dec
mov
out
cmpsb
lcall
mov
push
in
sbb
mov
jns
sbb
jle
mov
jbe
jns
ja
cwtl
mov
decb
xrelease
leave
cmc
xchg
xchg
inc
xchg
pop
inc
jge
cs
fsubr
pop
dec
fldenv
je
and
scas
mov
cmpl
fwait
pop
or
das
mov
pop
outsb
outsb
fwait
jns
mov
inc
dec
sbbb
inc
aaa
xchg
push
pop
mov
movsb
xor
xchg
xchg
xchg
mov
movsb
sub
ja
jg
xchg
and
jl
fdivl
outsl
fwait
imul
adc
mov
gs
ja
add
shll
fstpt
insl
aad
divb
arpl
jae
pop
in
out
fidivrl
in
jns
jns
out
aas
in
add
hlt
xor
test
cmpsb
rcl
outsl
fwait
mov
or
test
mov
das
das
das
das
loopne
fisttpll
sbb
adcb
jmp
int
pushf
in
ret
jns
mov
mov
imul
mov
jle
orl
pushl
outsl
ljmp
pop
cmc
inc
aad
push
mov
out
cmp
outsl
aaa
mov
push
in
push
dec
dec
pop
jge
sub
jae
mov
mov
popl
push
mov
push
bound
xchg
cmp
sahf
lret
lret
iret
push
incl
jo
push
std
lea
fsubrp
into
lret
cmp
pop
repnz
push
mov
xor
jnp
mov
pop
test
jge
mov
cli
adc
icebp
cs
in
mov
movups
sbb
addr16
adc
jns
jns
lds
nop
addr16
mov
in
cmpsl
mov
xchg
sahf
xchg
addr16
sbbl
inc
xchg
stc
inc
mov
pop
pop
fimuls
jmp
inc
jno
pop
pop
pop
pop
sub
dec
jo
js
and
outsb
outsb
insb
pop
add
cmp
adc
add
lcall
inc
fists
jge
in
jns
sbb
testb
jg
fucom
in
adc
mov
adc
adc
fwait
mov
ljmp
cmc
sbb
shlb
xchg
xchg
outsb
pop
in
out
gs
in
rclb
cmp
pop
fidivrs
mov
scas
inc
shl
mov
mov
cmpsl
aaa
enter
pushf
inc
repnz
int3
fcomps
mov
loope
fcmovnu
out
mov
jl
mov
out
jbe
fwait
or
jno
xchg
dec
test
aas
jns
mov
mov
out
cmpb
dec
stos
push
out
mov
in
rep
outsl
test
gs
bound
cmp
gs
pop
jns
jne
xor
jo
das
outsl
insl
fdivrp
jl
sub
call
out
mov
das
das
das
das
pusha
pop
mov
pop
cmpsl
cmp
xchg
sbb
pop
pop
ss
push
push
repnz
mov
sbb
repz
pop
pusha
repz
cmp
stc
mov
lret
fndisi(8087
jno
add
sbb
adc
and
xchg
mov
fwait
mov
flds
rcr
mov
xchg
xor
test
mov
pop
inc
aad
cltd
stos
push
int3
xlat
mov
jns
jl
mov
fmull
sub
repz
pop
mov
ret
ljmp
mov
xchg
loopne
lahf
sub
clc
sub
imul
push
xchg
lods
xorl
test
daa
jmp
repz
pop
jnp
movsb
mov
push
leave
push
loope
cld
lods
pop
and
imul
cmp
iret
pusha
imul
jae
push
arpl
sub
dec
jnp
repnz
mov
inc
pop
sbbb
stos
cmp
popa
repz
adc
mov
or
jae
and
nop
and
jp
jmp
das
cld
sub
adc
in
jle
mov
mov
push
adc
sarl
std
add
hlt
pop
das
in
jle
push
fstpl
sti
cwtl
xor
cmpsl
das
in
sbb
rcll
stc
mov
adc
xchg
ret
xor
idivb
mov
sub
fs
mov
ret
mov
adc
mov
lods
scas
mull
scas
cld
ret
mov
jns
lcall
lret
lret
pop
inc
mov
ds
testl
int
pop
jg
inc
cwtl
dec
push
in
test
xor
das
and
insl
gs
sahf
fs
pop
aaa
mov
ja
lods
test
loope
pushf
divb
and
pop
pop
imul
scas
popf
aad
jecxz
pop
cmp
nop
push
xchg
push
repz
insl
outsb
inc
cmp
leave
pop
ljmp
out
push
call
jns
ret
xchg
test
repz
jmp
dec
clc
fisubl
or
sti
push
lcall
and
mov
out
insl
or
sbb
push
sub
movsl
int
out
adc
jbe
mov
lea
push
outsl
call
in
in
testb
in
jle
cltd
sub
add
push
das
das
outsl
mov
sbb
gs
inc
shlb
mov
insb
push
cmp
pop
push
inc
ja
rclb
das
das
js
jle
daa
mov
push
cmpl
inc
aas
imul
ss
popa
xchg
repnz
fisttpl
pushf
ret
jbe
add
fucomi
out
lods
clc
mov
lahf
add
pop
mov
adcl
cs
xor
fstpt
sbb
aam
daa
testl
jns
ror
pop
out
call
push
in
jns
jns
loop,pt
mov
cmc
stos
mov
jns
jns
ror
int3
cld
sahf
test
lret
pop
mov
lahf
xor
fcmovb
push
adcb
mov
lea
scas
shr
jbe
mov
cmpsb
lods
icebp
and
popf
andl
dec
jb
xchg
cmp
scas
test
pop
pusha
cmp
sbbb
jbe
call
das
test
inc
jo
stos
pop
and
mov
cmp
int
push
mov
fstpt
sub
mov
mov
mov
dec
pop
or
repnz
xchg
cmc
push
xor
or
in
scas
xchg
into
mov
or
out
sbb
cmpb
pop
pop
pop
popa
push
mov
das
pop
int
mov
and
shlb
test
push
jno
lds
add
mov
pop
pop
pop
cmp
or
inc
xlat
in
lock
jl
pop
pop
mov
sti
xor
xor
lret
sub
test
imul
xlat
out
push
xchg
pushl
stc
aam
mov
jge
jns
iret
repz
mov
stc
cmp
addr16
push
pop
sbbl
jns
out
and
cmp
jns
iret
js
aaa
push
or
out
cmp
push
xor
iret
repz
daa
adc
or
rcrl
sub
clc
cmp
out
mov
cmc
out
sarl
repz
ud0
fst
js
lret
out
sub
in
sahf
ret
mov
out
mov
mov
jns
cmpsb
sahf
lret
scas
xchg
fsts
out
sub
sbbl
iret
repnz
pusha
jno
mov
sbb
loope
xor
add
and
test
in
lcall
pushl
fs
push
mov
pop
scas
out
sahf
iret
repz
je
xor
sub
nop
jnp
ja
pop
xchg
push
jge
push
mov
enter
xor
and
and
stos
adc
xor
addr16
aas
sbb
loope
mov
stc
cmp
decl
test
iret
repz
sbb
clc
lahf
addr16
test
sub
repz
add
or
fsubs
lahf
out
lods
rcrb
push
mov
mov
add
cmp
repz
subl
repnz
out
imul
ds
adc
or
jne
out
sub
sub
push
inc
in
iret
repnz
cmp
push
pop
fidivs
repz
dec
cmp
lock
mov
shr
incl
aaa
jmp
xchg
xchg
xchg
xchg
imulb
pop
add
xor
imul
cmp
lcall
cmp
xor
mov
fbld
lods
in
pop
lret
inc
jl
sub
dec
inc
push
stos
push
and
dec
pop
xorb
mov
fidivs
xor
inc
or
pop
xor
std
nop
xor
jp
push
hlt
or
das
outsl
xor
outsl
jle
cltd
out
in
mov
push
sbb
ret
jnp
fistl
xchg
ficoml
xor
arpl
frstor
lret
pop
lock
add
push
add
fwait
lret
loop
jbe
mov
lds
repnz
jp
pop
cmpl
mov
or
sub
fwait
stos
pop
sbb
mov
pop
mov
iret
scas
cmp
mov
push
outsb
pop
xor
movsb
push
add
cmp
lea
cmp
or
jmp
in
cmp
sub
int
xchg
data16
jae
decl
xchg
mov
in
push
subb
mov
lods
mov
and
call
popf
repz
fidivs
or
out
insl
pop
pop
xor
sbb
mov
bswap
pusha
icebp
sub
mov
cmpxchg
fisttpll
sub
jbe
int3
das
fwait
xchg
xchg
xchg
bound
xchg
gs
les
outsl
mov
aam
outsb
cmpsl
ljmp
ja
out
mov
lcall
jbe
push
int3
incl
mov
fwait
or
fisubs
mov
aam
notb
adc
cmpsl
xchg
sbb
pushf
loope
and
mov
push
shl
push
cmp
aas
sub
and
or
in
xor
out
out
xor
adc
xchg
or
das
outsl
lahf
and
je
cmp
mov
stc
xchg
add
mov
fnstcw
mov
imulb
repnz
mov
cmp
es
fucom
lods
rolb
test
push
inc
adc
in
clc
lret
or
insl
int
mov
pcmpeqb
pushl
push
dec
scas
rcll
pop
aaa
mov
ret
cld
and
adc
lret
lret
fcomi
scas
cmc
inc
mov
divb
pop
jns
sti
in
call
loope
and
imul
jns
cli
dec
mov
repz
xor
in
jbe
hlt
cmpsb
xor
pop
sub
cltd
in
in
out
aaa
lods
inc
cli
mov
add
mov
out
inc
mov
or
and
fcomi
cmpsl
mov
lock
dec
cmp
xor
pop
xchg
inc
cli
dec
sbb
push
mov
jg
mov
jmp
fidivrl
jae
cmp
cmc
jle
popa
cld
sub
lcall
mov
in
loope
lods
aaa
mov
xor
xor
ljmp
insb
fidivrs
push
inc
dec
jp
ret
les
add
daa
adc
jmp
inc
fwait
jne
dec
cmp
ja
jns
push
dec
js
xchg
fsubr
clc
jl
mov
lods
fstp
dec
xchg
scas
test
neg
les
enter
xchg
xchg
jg
xchg
jp
lea
out
fbld
dec
inc
add
orl
call
push
mov
fisubrl
pusha
iret
adc
mov
cmp
addl
out
shrl
lea
inc
jnp
fdivrs
fcmovnu
ret
icebp
dec
cmp
inc
push
cld
imul
jns
nop
int
jle
je
push
sub
xor
insl
repz
cwtl
cmp
fcomi
or
adc
lret
fistpl
insl
fdivl
push
cwtl
pop
add
out
aam
aaa
sar
push
loopne
mov
das
outsl
fwait
sbb
in
outsl
sub
outsb
cs
rclb
xchg
dec
and
loopne
push
jns
fdivrl
inc
cmc
xchg
pop
ret
push
fcompl
fistl
cmp
out
lods
test
lahf
push
out
inc
add
sub
push
icebp
adc
mov
dec
dec
jne
ss
sbb
pop
inc
ret
pop
fimuls
cs
movsb
push
into
mov
cmp
fstpl
xorl
dec
adcl
mov
stc
jmp
clc
inc
mov
insb
fidivrs
xchg
sbb
inc
mov
movsl
dec
push
jae
sub
and
fnstcw
mov
jo
and
mov
insl
daa
push
lret
lret
pop
mov
dec
clc
test
lret
lret
lret
lret
and
add
inc
push
mov
jnp
fdivr
aam
daa
sub
mov
push
int3
or
imul
in
int
pop
mov
in
cmc
push
xlat
mov
lods
or
xchg
and
ja
and
ret
lcall
rorb
or
ja
arpl
sub
out
sbb
inc
aam
dec
dec
fstpl
fwait
mov
inc
pop
in
jle
mov
das
and
lret
lret
pop
xchg
sub
ds
outsl
mov
jns
push
decl
push
mov
mov
dec
sbb
dec
push
inc
das
das
das
das
inc
mov
inc
fwait
arpl
cmpl
push
mov
call
cmp
push
lods
xchg
outsl
cld
push
sbb
push
push
sub
add
pop
cld
dec
fcmovb
mov
adc
jmp
repnz
xchg
xor
sti
push
leave
repnz
test
xor
jae
repnz
aad
mov
pop
ja
push
shlb
jge
xor
jge
cmpsl
push
dec
xchg
dec
jne
jp
popf
xchg
dec
and
mov
cmp
lret
fldt
int3
inc
mov
sbbl
mov
mov
stc
add
push
loop
jbe
test
aam
loope
sub
in
imul
add
addr16
xchg
pop
add
test
call
int3
lcall
das
das
lahf
pop
decl
mov
out
jle
cmp
das
and
mov
cmp
push
push
nop
jmp
cs
insl
mov
pop
mov
add
mov
out
cmpsl
push
and
rcrb
mov
and
push
sbb
leave
pop
call
lods
aad
sti
clc
shl
xor
insl
aas
decl
lods
dec
repz
jmp
mov
jbe
in
insl
daa
sbb
inc
lcall
inc
mov
in
in
pop
lock
push
out
or
pop
ficomps
out
into
aaa
mov
fstpt
or
or
daa
test
push
stos
mov
add
sub
bnd
inc
mov
xchg
adc
in
repz
test
xchg
jl
es
fistpl
fbld
dec
jb
push
mov
cs
enter
test
cmc
cmp
lret
inc
scas
push
fimull
xchg
add
inc
xor
push
pop
xchg
cmc
roll
and
dec
sub
push
scas
xor
ss
outsl
pop
int3
cmp
cmp
mov
ja
xor
int3
lcall
js
push
lds
adc
in
in
lods
sbb
mov
xchg
add
mov
in
dec
mov
inc
push
int
lret
popa
sarb
scas
sbb
inc
aaa
dec
mov
call
shl
repnz
sahf
or
cmp
in
rolb
pop
mov
insb
fisttpl
sub
in
ret
jle
pop
jge
push
push
sbbb
gs
call
sbb
outsb
fisttpll
clts
lods
mov
push
mov
jns
mov
inc
enter
push
xchg
movsb
fwait
aam
mov
pop
inc
dec
sbb
xor
push
int
js
lds
aas
inc
div
jae
mov
push
popf
inc
mov
inc
xchg
cmp
out
outsl
or
aas
or
addr16
das
mov
cwtl
jmp
rcrb
and
fisubrs
xchg
and
aad
jnp
pop
xor
adc
mov
insb
stc
pusha
mov
xor
test
jp
mov
fcompl
callw
or
fsub
out
sub
sub
and
out
in
push
dec
stos
and
fcoml
sbb
jbe
jo
mov
dec
dec
iret
lret
jbe
jne
pop
pop
pop
fiadds
push
inc
aas
aam
gs
sub
pop
pop
pop
pop
es
and
lret
mov
and
and
ljmp
push
pop
dec
xor
add
je
jecxz
lods
pop
mov
rclb
mov
outsl
sbb
and
jns
fcmovu
in
add
cmc
add
jl
daa
shl
in
rcl
fisubs
mov
or
ja
rep
xchg
push
ret
test
cs
das
outsl
mov
addb
sti
pushf
mov
mov
lods
push
aad
pop
pop
pop
clc
sbb
adc
jmp
sbb
in
mov
out
inc
in
in
out
push
lods
repz
jnp
or
loopne
mov
ja
ret
scas
or
mov
xchg
je
inc
mov
push
mov
subb
aaa
xchg
mov
std
pushl
mov
push
sbb
in
outsb
in
mov
mov
xlat
fnsave
rcll
push
and
das
das
adc
ljmp
dec
les
mul
lret
shll
imul
icebp
mov
xchg
mov
repnz
xlat
jp
jp
int3
pushf
das
das
outsl
ja
mov
outsb
in
xchg
xchg
adc
jae
pop
fidivs
orl
lcall
insl
jbe
nop
adc
push
and
xchg
es
xor
in
insl
cli
das
sub
sahf
out
scas
lock
sbb
out
in
test
or
fisttpll
das
test
repz
divb
daa
jbe
mov
lret
pop
ja
push
and
xor
loope
test
aaa
ret
out
jb
lret
fmulp
pusha
bound
outsb
pop
icebp
mov
sbb
fadd
adc
inc
mov
mov
in
iret
xchg
jnp
mov
mov
mov
int
outsb
idivb
imul
mov
mov
jbe
sbb
arpl
ja
out
outsl
fwait
popa
adc
jbe
add
cmpsl
push
dec
mov
pop
fidivrs
inc
mov
pop
pop
pop
lds
popa
add
shrl
jns
pop
jbe
add
jno
xor
inc
pushf
pop
js
push
stos
inc
mov
cs
js
rcr
fcmovnbe
adc
dec
fmuls
mov
or
outsb
adc
mov
sub
xchg
filds
mov
outsl
int
mov
outsl
jmp
adc
cmpsb
ljmp
jae
ret
jmp
fstpt
dec
test
xor
lret
mov
jns
ss
fisubl
xchg
push
ret
int
in
inc
in
or
mov
lret
lret
pop
sbbl
clc
push
lea
mov
jl
push
pushf
push
cmp
jns
jns
inc
xchg
adc
outsl
lret
in
in
scas
shrl
daa
ljmp
jnp
pop
repz
push
lret
xchg
adcb
leave
stc
xlat
in
xor
cmpsb
pop
out
jns
fidivs
push
push
add
adc
sbb
ja
loopne
ret
int
rcll
pop
dec
nop
mov
mov
xchg
or
sbb
add
pop
xchg
mov
in
xchg
jno
and
lret
fcmovne
mov
int3
cmp
in
ljmp
mov
lret
fucom
mov
xor
in
add
hlt
imul
das
das
outsl
in
adc
ss
cmpsb
ja
out
xchg
nop
sbb
repnz
out
stos
push
pop
xor
mov
lret
lret
lret
jge
daa
ds
pusha
repnz
mov
lret
lret
mov
loopne
aam
xor
scas
fdivs
xchg
xchg
xchg
ds
repz
dec
repz
das
das
outsl
sub
cmp
fs
adc
cwtl
int
hlt
std
ficoml
in
arpl
jns
in
stc
icebp
gs
dec
sbb
jns
test
sub
movsb
leave
push
addl
inc
dec
sub
xor
dec
xor
inc
jns
jns
les
sbb
inc
shll
mov
jns
sbb
inc
adc
push
xor
outsl
ljmp
insl
cwtl
aaa
orl
in
repz
pop
cmpsb
pop
into
out
jg
push
ja
popa
in
in
adc
xchg
int3
js
inc
mov
in
in
mov
and
ljmp
lcall
xlat
fidivrs
cs
push
sub
push
xchg
push
add
imulb
call
cltd
xchg
cs
outsl
aaa
jl
pushf
inc
dec
jbe
mov
mov
add
mov
shr
pushf
into
jbe
jns
jle
ds
pop
jb
cmp
movsb
in
out
daa
in
adc
and
daa
lahf
nop
push
aaa
xchg
mov
insb
sti
jge
mov
jae
jmp
in
adc
fcmovu
jbe
push
jb
mov
out
jbe
jns
sbb
insl
shr
icebp
std
mov
push
xchg
lods
mov
inc
xor
lahf
dec
mov
fildll
repnz
cmp
aad
rcrl
push
in
in
out
fisubl
push
xlat
xor
jecxz
fwait
out
shl
movsl
sbb
push
mov
call
mov
ret
in
insl
repz
add
sbb
test
xchg
fmuls
int
jl
nop
popa
sahf
pop
push
xor
mov
fwait
mov
mov
ret
out
jae
jns
lods
aad
ret
shrb
mov
mov
sbb
dec
pop
push
mov
dec
data16
fldt
and
and
fcompl
mov
mov
jns
enter
jae
out
mov
jns
js
popa
fmuls
ja
lods
fwait
lret
fldt
push
jne
ja
mov
mov
out
mov
sbb
xchg
rcr
fwait
movsl
stos
hlt
scas
and
ret
sti
mov
fstpt
loopne
add
jns
jns
xchg
jecxz
push
inc
arpl
mov
xchg
imul
in
pop
jns
sti
shr
mov
ret
dec
pop
cld
jp
jns
jns
dec
fs
shll
xor
add
insl
repz
sbb
xlat
adc
test
cmpsl
jbe
mov
sub
pop
lods
sbb
and
xor
jl
inc
mov
sahf
push
or
mov
mov
jnp
enter
enter
mov
jge
xchg
xchg
add
dec
das
outsl
fwait
stos
dec
xchg
aad
rcrl
imull
fisubrs
das
sub
mov
inc
mov
fstpt
fistpl
cmpsl
adc
fadds
xchg
jbe
jns
ds
pop
mov
push
fcmovnb
inc
mov
push
leave
jae
mov
es
lea
xchg
pusha
lods
inc
xchg
dec
add
aad
ss
outsl
call
std
movsb
inc
pop
lcall
aam
insl
ret
lret
sbb
lret
cmp
out
ja
xchg
int
insl
hlt
lock
and
popf
cmp
out
in
cmp
lcall
jns
fucomi
hlt
adc
shll
dec
insb
out
in
repz
clc
loopne
dec
in
ds
push
mov
mov
fcmovne
mov
push
mov
pop
shlb
jbe
xchg
ror
aam
xor
fistl
xor
xchg
xchg
xchg
xchg
add
mov
fucom
push
ss
aaa
xchg
decl
add
jge
loopne
repnz
dec
mov
cli
add
cmp
insl
in
leave
inc
sub
imul
fwait
lret
lret
mov
mov
fisttpll
lods
jne
pop
xchg
shl
repnz
add
push
add
pop
dec
push
pusha
xor
aaa
jbe
mov
mov
jnp
popa
cmp
in
aam
in
insl
repz
xor
adc
in
or
cld
bound
pop
loope
mov
jmp
daa
inc
out
mov
push
repz
sub
fdivl
rorb
stos
push
pop
dec
mov
repz
mov
xor
xor
in
sbb
and
push
add
cmc
sti
jmp
in
jmp
push
repz
dec
test
in
push
test
mov
jns
cmpsl
out
ss
lcall
jmp
mov
js
push
sbb
pusha
loopne
or
clc
dec
ds
mov
loopne
hlt
jne
mov
lods
sbbl
das
das
outsl
aaa
pop
adc
sub
or
pop
sbb
das
das
outsb
xor
test
mov
setbe
fcmovnu
push
mov
mull
sahf
and
jbe
jns
cmp
sub
xchg
jbe
lret
fucomi
out
sbb
sub
or
dec
pop
mov
push
fwait
lret
lret
lret
pop
jmp
dec
sbb
cmp
ss
jbe
mov
jmp
arpl
cmpsl
in
cwtl
scas
mov
or
sbb
jns
fstpt
scas
cmp
pop
jmp
mov
test
sub
fidivrs
mov
lahf
cmpsb
adc
ror
in
shrl
push
sbb
sub
cmc
ret
adc
or
lret
lret
dec
mov
sbb
out
fwait
lret
imul
xchg
out
fsubs
add
js
outsb
and
imulb
or
xchg
adc
pop
pop
pop
pop
inc
or
add
mov
fcompl
int3
mov
mov
in
out
jae
or
jle
dec
jmp
in
mov
inc
insb
aaa
repz
xchg
mov
lret
mov
int
stc
mov
dec
out
pop
je
xchg
mov
js
in
push
imul
adc
mov
test
xchg
mov
lret
imul
dec
mov
sbb
pop
outsl
data16
test
stos
cld
out
rcll
icebp
inc
lret
mov
cmp
insl
outsl
test
inc
xlat
mov
lea
mov
mov
fstpt
add
lcall
inc
mov
jns
xchg
mov
mov
cmp
insl
repz
and
dec
mov
int3
fidivs
je
ret
mov
jb
insl
pop
pop
cltd
aas
sub
out
xor
fcompl
dec
ret
pop
xor
dec
sbb
or
add
rorl
mov
cmp
addl
lcall
mov
push
lods
rclb
cmpsb
in
mov
inc
push
je
daa
cmp
icebp
insl
cld
jo
xchg
pop
outsb
out
ss
stos
ficompl
sbb
bnd
sti
into
jo
add
xchg
imul
stc
aam
js
repnz
pop
mov
in
insl
aad
arpl
mov
pop
out
popa
scas
insb
lret
lret
lret
out
xor
dec
fwait
popf
fldcw
out
jbe
or
inc
stc
jp
ljmp
mov
mov
or
adc
mov
fcmovnu
outsb
jae
jmp
or
or
sbbl
dec
fisubrs
imul
push
bound
jmp
repz
in
mov
outsb
std
bound
fwait
lret
pop
mov
xlat
xchg
push
inc
into
call
xor
shrl
pop
shlb
movsb
pop
fildl
mov
dec
test
pop
adc
xor
rcr
pop
outsl
dec
pop
mov
sahf
cmp
movsb
jns
jns
sub
cmp
call
and
ss
jns
adc
je
cmc
mov
bnd
fucomi
xor
scas
jb
ljmp
jae
jns
inc
mov
ss
in
ja
pop
fidivrl
jnp
add
mov
in
fisttpl
inc
mov
js
nop
adc
sub
adc
imul
mov
loop
xlat
mov
insb
outsb
cs
mov
mov
jb
add
imul
ss
out
insl
or
xor
test
out
repnz
les
enter
cs
outsl
loopne
mov
pop
dec
filds
sub
shll
push
jl
pop
stos
jle
adc
rcrb
fwait
adc
pop
daa
mov
fwait
jbe
inc
mov
jle
shl
in
movsl
pop
push
movsl
cltd
xor
je
pop
adc
in
in
xor
addl
mov
in
or
xchg
sbb
cs
adc
push
filds
out
add
jl
sahf
jae
dec
aas
repnz
lea
xchg
aas
sarl
or
outsl
rcl
in
in
xor
arpl
sbb
cmp
xchg
test
flds
lahf
outsl
mov
inc
dec
jno
jge
in
inc
sbb
insl
repz
xchg
cmpl
jne
int
lock
sub
fildl
fwait
lret
or
lret
jns
fisttpl
ds
push
lds
icebp
jbe
out
jae
push
dec
pop
jecxz
jno
dec
ret
cs
out
mov
sbb
mov
mov
ja
jnp
mov
xchg
mov
cmp
and
add
dec
mov
data16
xchg
jbe
out
lcall
call
jmp
push
pop
in
out
or
jl
pop
std
int3
in
mov
push
clc
xor
inc
lcall
in
lea
out
fiaddl
push
clc
mov
lret
int
lods
imulb
aad
loop
outsb
push
stos
add
xor
sbb
jns
loope
loopne
scas
jp
xor
mov
jae
jns
sbb
mov
out
adc
jo
lods
out
les
mov
push
mov
das
outsl
ja
xchg
subb
sub
cmp
dec
mov
mov
mov
jl
sahf
int
outsb
xlat
or
push
xor
and
movsl
outsl
ja
fstpt
nop
sti
std
and
jb
add
mov
dec
fstp
outsb
cs
repz
cs
jae
push
sub
mov
ss
rolb
adcb
lahf
mov
jge
sbb
cs
adc
insl
repz
xchg
shr
nop
dec
jbe
in
in
cld
mov
jg
xor
push
push
outsb
aaa
adc
repnz
push
out
sub
fistpl
mov
in
stos
mov
mov
daa
xor
mov
loopne
gs
xor
or
fstpl
and
movsb
dec
scas
jne
and
jb
shrb
sbb
into
push
sub
dec
mov
pop
pop
arpl
dec
adc
insl
sub
sbb
fdivl
xor
cmp
and
push
imul
in
dec
or
das
pop
pop
pop
pop
mov
mov
push
inc
push
fcompl
add
push
mov
dec
lret
fucomi
into
sbb
inc
enter
pop
sub
fwait
lret
lret
lret
mov
sbb
lahf
xchg
in
mov
cwtl
negl
or
mov
aaa
xor
ljmp
mov
jns
dec
sahf
outsl
je
push
je
repz
dec
or
std
dec
cli
iret
mov
lret
fildl
cmpsb
notb
or
xchg
outsl
aaa
xchg
lods
hlt
dec
mov
clc
mov
fistpl
mov
movsb
jae
dec
lahf
pop
ret
outsb
mov
cmp
sbbb
rcr
push
clc
or
ja
push
push
fdivl
popa
and
shll
lret
call
mov
mov
mov
movl
mov
jno
and
add
push
mov
lods
lahf
ja
fsub
mov
sub
and
jbe
pop
mov
inc
mov
sbb
repnz
fcoms
add
fistpl
pop
repz
les
xor
mov
mov
aam
jo
mov
insl
ret
xchg
imul
outsl
mov
pop
dec
jl
mov
mov
das
das
pusha
xchg
ss
data16
and
mov
add
mov
cwtl
sbb
repnz
ret
mov
jg
insl
or
aas
mov
xor
mov
in
icebp
or
insl
push
sti
stc
and
add
addr16
jae
and
pop
clc
call
sahf
adc
pusha
inc
repz
sti
xchg
mov
sbb
das
mov
mov
int3
and
or
pop
cmp
mov
sub
hlt
jae
add
jae
decl
scas
sub
cmc
mov
mov
pop
and
cli
cmc
lcall
and
arpl
cmp
ja
xor
push
fdivs
addr16
xor
mov
jns
mov
mov
out
stos
jne
mov
pop
push
cld
dec
jns
xchg
mov
xchg
mov
pop
sub
mov
or
sbb
jp
test
jae
aas
repz
movsb
lock
enter
push
scas
scas
adcb
fstpt
pop
dec
test
mov
or
movsl
xchg
mov
pop
das
cmp
outsb
xchg
jmp
daa
cmpsl
push
fisttpl
out
aaa
sbb
pop
mov
jns
jns
pusha
inc
adc
sub
push
ds
jbe
jns
dec
jge
add
imul
or
in
mov
pop
pop
fidivs
imul
sub
mov
fwait
pushf
fistpll
inc
cld
data16
mov
mov
mov
cmp
in
in
mov
or
cmc
or
in
in
push
sub
mov
mov
out
rorb
dec
ficoms
jl
jne
xchg
xchg
push
insb
jg
inc
lea
arpl
fidivs
in
adc
idivl
mov
dec
out
mov
pop
mov
jns
mov
cmp
adc
mov
outsb
jae
and
add
les
outsl
aaa
inc
hlt
jg
dec
cld
and
pop
cmc
ds
fisubrs
leave
mov
scas
sbb
jo
mov
mov
mov
cmpsb
div
iret
xlat
ds
jns
mov
xchg
sub
mov
mov
jo
jns
rolb
mov
ret
or
dec
jl
cltd
adcb
pusha
lret
loop
fmull
mov
add
cltd
jbe
pop
xchg
stos
orl
mov
fstpt
mov
rclb
das
outsl
fstpt
push
ret
loope
fs
ljmp
push
addr16
mov
jns
mov
xor
lods
add
sbb
add
mov
mov
outsb
lret
inc
int3
pusha
ret
out
sbb
repnz
fwait
or
mov
insl
in
inc
mov
mov
jns
fwait
xchg
xchg
mov
nop
dec
push
or
mov
fsubrl
adc
jl
nop
add
xchg
adc
aaa
mov
andl
in
adc
jbe
das
fdiv
pop
adc
pop
movsl
push
sbb
stc
push
divl
icebp
xor
mov
fistl
xchg
xor
dec
icebp
xor
int
fstpl
mov
xchg
fs
mov
outsl
aaa
xchg
lret
mov
mov
fstpl
xchg
sub
sub
data16
mov
mov
mov
mov
sub
dec
sub
mov
pop
sahf
xchg
xchg
xchg
lret
lea
jb
push
jl
jo
fstp
sbb
ljmp
or
adc
dec
and
jns
insl
pop
stc
outsl
xchg
jecxz
xchg
inc
das
jge
jns
scas
lahf
testb
vmwrite
jns
test
sbb
out
pop
sbb
jae
test
mov
mov
hlt
das
das
das
outsl
ss
insl
sub
pop
mov
das
cmpsb
inc
mov
sbb
ss
pop
pop
pop
stos
sub
dec
xchg
pop
repz
jg
in
sahf
je
scas
subb
push
mov
cmpsb
arpl
pop
repz
xor
xchg
inc
mov
movsb
sub
mov
jl
cmp
sbb
popf
cmp
ret
push
addr16
das
das
outsl
shll
inc
scas
cmpsl
and
inc
repnz
aaa
cs
das
das
jbe
mov
cmp
cmpps
aaa
insb
lods
and
mov
xor
outsb
sbb
jg
fistl
pop
in
sub
lea
push
ret
ud0
fstpt
das
dec
jecxz
lret
subb
jno
jns
ficoml
pop
js
push
push
mov
lahf
das
fisubrs
lret
mov
push
stos
mov
pushl
add
in
in
or
sbb
xchg
jge
repnz
mov
lret
xor
xor
in
out
movsl
mov
inc
loopne
testl
jge
out
lock
daa
inc
add
outsb
outsl
adc
lret
and
insl
dec
mov
insb
xchg
and
cwtl
sbb
repz
and
fsubrl
in
and
fsubr
lcall
cmp
add
dec
and
and
push
push
cli
pop
inc
inc
ds
fwait
dec
jnp
or
push
aam
push
cmp
pop
pop
pop
fsubp
and
pop
loopne
bound
insl
pop
push
fnstsw
xor
sbb
scas
ficompl
daa
jae
cmp
out
sub
fisubs
hlt
pop
test
xchg
mov
out
sub
inc
dec
pusha
xchg
inc
lea
lret
lret
lret
pop
pop
dec
xor
jle
aas
sbb
xor
fwait
pop
out
imul
xor
mov
icebp
push
mov
fcmovne
or
nop
cli
inc
pop
push
fstpt
jp
xchg
xchg
xchg
jne
or
sbb
cmp
and
repnz
dec
dec
push
jbe
mov
mov
out
pop
sub
xchg
sbb
in
push
and
xor
dec
jns
jns
inc
int
int
sub
outsb
jae
mov
fwait
xchg
dec
rcll
mov
out
int
cmp
push
push
push
aaa
xchg
xchg
inc
or
xlat
ljmp
hlt
inc
pop
inc
xchg
or
sbb
ss
mov
test
sbb
cmp
data16
sbb
ss
addl
popa
insl
jbe
jns
cmp
jno
mov
out
repnz
loopne
sub
adc
int
es
sub
sbb
sbb
push
loopne
repnz
mov
hlt
pop
fidivs
nop
addr16
in
repz
lret
aam
insl
pop
pop
pop
inc
lahf
stos
test
push
fdivrs
pop
shrl
sbbl
dec
xchg
pop
pop
fdivrs
clc
das
push
stc
xchg
mov
fcomps
mov
int3
sbb
insl
push
dec
lret
mov
and
mov
mov
push
or
sbb
pop
ja
push
mov
xchg
sub
cmpsb
pop
lret
lret
lret
sbb
jp
aam
or
fsubrp
and
inc
push
loop
and
daa
data16
repnz
inc
insb
add
mov
inc
insl
rep
mov
jnp
pop
out
movsb
sbb
lcall
pop
cmp
sub
fldt
mov
xchg
mov
jne
loopne
insb
cmp
pop
mov
or
sub
sbb
jb
dec
je
scas
pop
xor
cmp
idiv
mov
lret
lret
jge
push
mov
lea
pop
jbe
mov
sbbl
arpl
out
ja
mov
lock
xor
and
push
mov
push
sbb
mov
aaa
xchg
xchg
add
shlb
mov
into
mov
fstp
mov
push
dec
lahf
jae
out
addr16
arpl
sbb
push
lret
lret
lret
fucomp
addr16
enter
mov
in
xchg
xchg
mov
fstpt
mov
adc
inc
stos
fsubr
lcall
pop
fwait
sbb
cmp
das
mov
jnp
sbb
xchg
in
scas
movsb
ss
mov
pop
push
insb
test
lret
lret
jmp
sbb
push
sbb
inc
stos
fs
loope
lret
lret
lret
jle
sbb
xlat
outsl
mov
xor
pop
out
mov
xchg
ss
das
lds
pop
xor
pop
pop
xor
movsl
fldl
imul
pop
fs
sbbb
out
lcall
mov
fildl
pop
fimuls
cmc
jnp
aaa
or
sarl
and
loopne
cmp
shl
in
out
inc
sahf
arpl
dec
out
fcmovne
in
xor
inc
int3
lret
cld
ds
dec
and
pop
cmp
das
insl
pop
ficomps
sbb
jl
mov
push
jl
sbb
imul
fcmovne
fsubrp
xor
sbb
jae
pop
adc
lea
fcoms
repnz
add
pop
movsb
adc
lods
push
rorl
sarl
pop
jns
frstor
ret
gs
stos
lret
cmp
lock
std
sbb
mov
xchg
outsl
adc
cmpl
xchg
mov
mov
sbb
stos
inc
mov
jns
ljmp
jnp
bnd
push
popa
mov
jp
hlt
test
repnz
fsub
aad
dec
js
xchg
out
inc
jge
repnz
cs
mov
dec
repnz
mull
push
adc
mov
orl
push
mov
insl
lods
scas
pop
add
into
xchg
push
out
out
push
cmpb
xlat
jb
test
fistl
xor
adc
outsb
lock
mov
int
mov
stc
ret
or
dec
aaa
xchg
xchg
fisubl
mov
xor
mov
icebp
repz
jae
jns
mov
push
cmpb
stos
in
repz
out
negb
sbb
sub
in
cld
push
orb
in
add
xchg
xchg
dec
jmp
mov
ja
sub
in
sbb
es
mov
cmp
jbe
lret
fcmovnu
xchg
xchg
sbbl
adc
or
xchg
aam
add
add
loop
mov
or
lret
leave
imul
sbb
ljmp
cmp
mov
shlb
data16
push
ret
jle
jmp
fwait
lret
lret
lahf
pop
scas
and
xchg
fldt
mov
push
or
and
jo
jns
push
push
jbe
or
push
in
int
cmp
in
in
rorl
js
bound
in
pushf
aam
jo
faddp
aas
adc
mov
mov
xchg
fildll
fimull
push
adc
or
mov
or
sbbl
and
and
mov
dec
jp
lahf
in
mov
cmp
mov
sbb
lret
fidivs
outsl
inc
xchg
es
call
pop
pop
pop
mov
cmp
or
pop
xchg
mov
test
xor
sbb
jecxz
das
outsl
ja
insb
inc
push
xchg
out
xchg
sbb
mov
ds
lods
leave
and
pop
fsubrp
adc
cli
mov
mov
push
fstpl
sbb
movsb
ljmp
fistl
ss
xor
push
jns
out
mov
add
pop
push
jmp
lret
stos
insl
add
stc
nop
xchg
int3
xor
push
sti
push
roll
sub
fwait
xchg
xchg
xchg
mov
mov
lret
aam
cld
jno
mov
outsl
aaa
test
ja
fwait
jns
in
add
cmp
pslld
jle
mov
lods
mov
mov
or
test
ja
adc
fstpt
push
and
sti
sub
mov
push
jo
pop
mov
mov
mov
ja
in
outsl
fildl
int
xor
add
jns
test
cmpsl
lods
lret
cmp
push
jns
fcmovne
insl
mov
mov
test
fwait
mov
repz
lahf
sbb
ss
cwtl
addr16
sub
imul
ss
je
and
xor
das
cmp
ffree
scas
inc
or
es
pop
insl
repz
roll
mov
or
xchg
ds
cmp
out
out
pop
cltd
xorb
js
lcall
shlb
clc
jb
mov
xchg
dec
xchg
mov
mov
loop
pop
mov
sbb
mov
test
mov
cmp
sub
xchg
mov
inc
and
push
dec
pop
lock
mov
jne
fwait
cmp
fwait
lret
fldt
idivl
mov
outsl
sbb
xchg
out
pop
mov
das
pop
or
add
and
cmc
jp
lahf
add
arpl
in
mov
cmp
outsb
xor
push
aam
addr16
jns
into
lret
lds
adc
or
inc
pop
test
insl
mov
push
jae
mov
stos
ret
aad
xor
xchg
xor
out
imul
cmp
push
outsl
ja
mov
stc
stc
xchg
or
jae
jns
sub
add
xchg
imul
cmp
inc
out
mov
repz
jp
pusha
inc
cwtl
pushf
push
test
cmc
dec
in
in
or
sub
xchg
and
stos
pop
int
in
cmpl
or
hlt
inc
in
iret
push
mov
xor
test
jbe
out
fldl
push
fnsave
add
fsubrl
stos
repnz
jns
mov
mov
jb
repnz
jbe
mov
js
loop
scas
fmuls
stos
push
inc
insb
or
mov
or
jns
ret
stos
popa
jae
mov
or
popa
dec
inc
or
cmp
cli
stos
rolb
ja
in
push
push
rcr
fbld
push
enter
jl
xchg
xchg
pop
sbb
test
leave
jmp
push
sbb
fimuls
xor
sub
cs
test
jne
je
pop
pop
loopne
sahf
push
loope
push
jecxz
subb
out
fcmovnu
cmp
jmp
mov
stos
add
lahf
mov
lds
jns
lret
ja
out
inc
push
mov
in
das
mov
mov
outsl
cmp
or
adcb
fidivrs
in
loop
dec
in
cmp
push
cmpsl
pop
adc
mov
pop
pop
xor
mov
push
mov
into
fwait
in
out
ja
xchg
mov
enter
in
sub
jns
das
cmpsb
lea
in
cmp
fwait
or
jl
insb
lahf
in
in
push
or
dec
rclb
gs
test
fcoms
ret
push
daa
xchg
sub
jae
cld
pop
fdivl
cs
xlat
repnz
into
mov
add
mov
dec
inc
jae
int
jae
cwtl
stos
jbe
sbbl
push
je
add
or
or
or
fcoms
mov
pop
mov
push
loop
xor
cmp
push
cmpsb
xchg
pop
out
lcall
and
mov
xchg
pop
xor
mov
fs
sbb
add
push
xor
xchg
mov
sbb
push
rcll
imul
shl
in
negb
pop
lea
imul
and
ds
ljmp
insl
jb
push
fcompl
nop
and
pop
insl
lret
fcmovnu
jns
pop
sahf
xchg
cmpsl
movsb
xor
mov
lret
seto
jle
das
outsl
lahf
rcll
adc
out
sub
mov
das
das
sahf
mov
pop
and
xchg
xchg
xchg
inc
icebp
jo
mov
mov
inc
stos
mov
push
je
xchg
cli
cs
das
outsl
pop
and
add
push
jecxz
gs
insl
sub
inc
std
or
rcrl
rclb
mov
dec
test
out
pusha
lea
or
lret
lret
lret
lret
inc
dec
ja
jmp
test
fwait
out
stos
jnp
lret
lret
lret
push
pop
mov
push
or
inc
int
lret
lret
outsb
and
sbb
xchg
xchg
mov
and
mov
outsb
pop
fsubrp
sbb
mov
lods
ja
mov
jg
sahf
int3
mov
aam
mov
mov
pop
ds
lcall
int3
dec
pop
fisubrs
xor
nop
cltd
sub
pop
pop
pop
push
cmp
scas
pop
stos
es
insl
pop
es
mov
cltd
sub
fwait
mov
or
xlat
out
stos
nop
and
push
into
lret
lret
pop
loope
mov
nop
stos
adc
push
jae
xor
mov
mov
pushf
xor
in
outsb
sbb
ret
lahf
adc
mov
pop
stos
mov
out
sub
gs
xchg
dec
inc
dec
xor
xchg
xchg
sarl
dec
push
add
sbbl
mov
stos
cmp
xchg
mov
iret
adc
add
cmpb
cmp
sbb
mov
xchg
repnz
inc
dec
adc
and
repnz
popa
inc
ficomps
movsl
inc
lods
mov
js
inc
or
jns
mov
adc
insl
insl
int3
pop
push
mov
fidivs
cmpsb
mov
scas
push
mov
mov
push
mov
repz
and
push
and
jns
jns
cmpsb
lods
lcall
adc
popa
dec
loopne
dec
loop
outsl
test
out
sbb
dec
insl
fidivs
das
jp
shlb
push
enter
shlb
ss
fcmovne
in
imul
ljmp
cmp
das
inc
xchg
pop
fwait
mov
cs
dec
orl
sbb
sbb
test
xlat
inc
int
mov
jbe
lods
ljmp
jg
xchg
mov
bound
xchg
or
ja
scas
push
mov
scas
pop
push
lcall
das
or
xchg
and
int
repz
std
pop
xchg
test
xchg
sahf
in
cmp
jmp
jns
adc
in
mov
jecxz
pop
cmp
pop
mov
shr
ret
adc
sbb
pushf
add
pop
fisubs
pop
insb
cmp
repz
inc
push
dec
into
jl
js
sub
mov
int
hlt
stc
inc
and
test
daa
adc
outsb
aaa
xchg
xchg
adc
inc
ret
lds
daa
adc
clc
mov
sub
bnd
adc
mov
in
push
pop
int
int
xchg
in
adc
mov
push
inc
shrb
mov
push
out
sbbl
mov
aam
add
jnp
or
outsb
insb
in
xor
add
outsb
add
inc
aas
xchg
scas
sbb
inc
jo
jmp
and
jecxz
sbb
in
out
inc
cmc
sar
push
icebp
jecxz
in
add
cli
addb
mov
aaa
mov
jbe
fdivrl
mov
mov
and
fcomp
lods
sarl
xor
das
outsl
adc
fstl
pop
test
mov
inc
int3
hlt
dec
aam
daa
jecxz
frstor
jecxz
lret
imul
sbb
dec
nop
mov
fwait
lret
fnclex
inc
or
repz
adc
add
or
idiv
repnz
pop
into
cmp
in
in
cwtl
mov
int
cmp
sti
sbb
int
fucomp
in
mov
mov
pop
adc
and
outsb
mov
or
ss
int3
push
movsb
pop
pop
fisubrs
popa
sbb
loopne
dec
jns
fistpl
pop
idiv
iret
xchg
sbb
sbb
jns
sub
sbb
popf
jnp
and
sub
ljmp
mov
test
dec
test
imul
jmp
add
mov
in
add
adc
add
int
out
push
out
xorb
div
sbb
inc
sbb
sti
fld1
out
sbb
push
es
outsb
jae
cmovl
xchg
test
push
ret
movsb
leave
int
es
iret
addr16
dec
jmp
lods
in
in
xchg
pusha
cmp
in
fs
repnz
inc
or
cs
push
mov
xor
pop
daa
outsl
lods
cwtl
push
vmovmskps
aas
test
sbb
cld
mov
dec
pop
int
mov
out
stos
cmp
decb
sub
or
aad
pop
fiadds
adc
adc
mov
repnz
mov
jns
mov
and
inc
js
movsl
dec
mov
repnz
mov
mov
outsb
outsb
pop
and
adc
nop
ja
mov
test
ja
mov
out
cmc
cmpsb
mov
insl
jl
sbb
outsl
aaa
cmp
adc
mov
insb
push
fcmovne
call
pop
pop
fidivs
imul
popa
mov
nop
das
das
outsl
fstp
dec
or
cli
dec
stc
and
sbb
push
movsb
mov
stc
in
gs
das
das
mov
rcrb
movsl
sub
loope
lds
sub
das
das
das
arpl
dec
fstps
out
and
adc
das
das
das
jno
mov
pop
repz
scas
dec
outsb
cs
das
push
jmp
mov
jns
mov
and
fwait
mov
sti
adc
jnp
cmp
int
add
mov
or
mov
cmp
xchg
int
lea
aam
push
enter
popf
dec
or
sar
stos
or
cs
bound
pop
inc
push
jns
fildl
or
mov
jns
rorl
xor
adc
jns
push
inc
jp
insb
mov
out
into
mov
xchg
push
xchg
iret
in
lret
push
in
in
cmp
fisttpl
and
push
int
loope
push
stc
ds
rcrb
add
subb
mov
lahf
int
lahf
in
adc
inc
push
jne
call
sbb
jnp
adc
fwait
lret
mov
pop
iret
fwait
call
fstpt
scas
dec
mov
std
lret
fisttpl
pop
mov
xchg
aas
hlt
in
mov
imul
int3
mov
mov
in
addr16
xchg
rcll
lock
xor
arpl
fimull
in
in
idiv
push
fwait
stc
unpckhps
sarl
out
cmp
cltd
add
loopne
sbb
addr16
and
movsb
or
jne
sbb
mov
mov
test
cli
fnstcw
out
fidivrs
lea
in
jno
mov
pop
pop
cmp
sbb
xor
sbb
xchg
pusha
popa
fdivs
lcall
add
ror
outsb
mov
and
aad
and
ret
shl
inc
mov
xlat
out
into
js
xchg
xchg
xchg
xchg
mov
mov
nop
lahf
xchg
movsb
mov
jp
xchg
daa
aad
mov
test
in
scas
mov
push
ljmp
cld
out
in
leave
in
push
mov
mov
pop
fsubrl
cs
popa
enter
lea
pop
imul
mov
fdivs
pop
sub
mov
add
inc
stos
ja
in
outsl
aaa
dec
fists
mov
pop
dec
ds
pop
pop
pop
fisubrs
lods
xchg
test
fldl
push
rcr
cmp
sbb
push
repz
insl
int
and
loop
mov
mov
loopne
fstps
test
mov
push
mov
sbb
cmp
outsb
jge
and
xchg
pop
sbb
stos
pop
sub
fwait
sbb
pop
jb
jl
or
push
fcmovu
dec
scas
mov
bound
mov
adc
pushf
clc
addl
dec
and
shrl
outsl
mov
loopnew
mov
aam
stos
ret
pop
ss
cwtl
or
push
sbb
rcr
or
inc
lea
mov
or
jns
pop
cmp
push
inc
push
jbe
cmp
lods
sbb
push
mov
outsb
int3
call
xor
imull
and
je
add
pop
xor
xor
adc
mov
xchg
movsb
clc
push
pop
ret
fsubrl
dec
sub
push
mov
movsl
and
adc
cltd
xor
mov
mov
xorl
sbb
sub
or
fcomps
lods
daa
adc
mov
leave
xchg
mov
push
in
dec
jae
mov
ds
lods
inc
hlt
mov
xchg
jns
test
rol
dec
push
or
and
push
je
mov
xor
and
sbbb
pop
aaa
mov
int3
mov
loop
adc
mov
out
ret
outsb
or
push
mov
outsl
ja
test
push
fstpl
leave
out
xchg
xchg
xchg
pop
test
out
es
inc
inc
loopne
test
mov
test
ret
imul
add
clc
mov
or
ss
je
xlat
int
push
imul
aam
pop
xchg
aaa
ss
call
mov
pop
or
scas
push
inc
cs
mov
xchg
test
inc
sub
test
mov
cmpsl
xor
xchg
lods
sub
adc
cwtl
in
fucom
aam
dec
in
ss
xchg
out
in
stos
xchg
add
and
bound
outsl
fnsave
mov
inc
ljmp
frstor
push
mov
loopne
aas
pop
cs
outsl
test
sbb
jns
sbb
fdivrs
inc
sti
xor
negb
pusha
fimuls
jle
mov
out
in
sub
loope
push
pop
ret
repnz
cmp
iret
aad
add
xor
stc
push
xor
push
mov
lahf
adc
pushf
ljmp
ret
loope
out
out
mov
pop
popf
loopne
mov
hlt
xor
lret
lret
ret
fsub
loopne
and
fisubrs
lcall
je
pushf
cli
mov
mov
outsl
sbb
jl
jmp
mov
arpl
sbb
jo
cmp
nop
mov
outsl
ja
rorl
ret
pop
pop
pop
jno
push
mov
cmp
sti
push
fidivrl
cmp
out
in
adc
inc
aad
pop
icebp
mov
ret
movsl
push
ror
outsb
push
mov
xorl
jge
ret
xchg
movsb
sbb
dec
arpl
xor
pop
mov
pop
sbb
insb
push
test
inc
and
jmp
ss
sbb
iret
gs
or
shr
or
pop
je
mov
daa
inc
pusha
jb
cmc
in
dec
daa
adc
mov
inc
xor
enter
das
outsl
hlt
inc
inc
pusha
or
mov
insl
pop
inc
bound
push
pop
xchg
xor
pop
sub
cmp
jns
mov
push
nop
pop
and
ja
jns
ss
mov
sti
xchg
add
pop
bound
mov
jecxz
rcll
fucomp
mov
iret
push
out
mov
mov
les
xchg
mov
shlb
shl
fdivrs
mov
sbb
ret
jbe
and
jne
into
shrb
out
hlt
fpatan
jbe
mov
adc
xchg
mov
fistpl
ss
ljmp
shlb
test
or
mov
fidivs
xchg
pushf
add
pop
dec
scas
sbb
pop
pop
pop
pop
pop
pop
in
loopne
sbb
adc
fldl
add
and
add
and
in
outsb
mov
xchg
pop
sub
xchg
sbb
sub
mov
out
dec
inc
ret
jns
cmp
lahf
std
sbb
xchg
mov
test
xor
bound
pop
in
ljmp
inc
loop
xchg
xchg
das
mov
ret
pop
adc
jl
add
adc
cmp
mov
or
sub
enter
cmp
jbe
pop
sub
in
sub
in
fmull
cmp
test
movsb
mov
test
mov
arpl
test
mov
out
pop
inc
scas
arpl
fisttpl
fdivl
in
dec
orl
idivl
pop
cmp
lret
lret
lret
and
jnp
add
pop
aaa
cli
je
mov
cmp
xor
dec
jb
sahf
hlt
push
xor
in
out
jae
jmp
push
mov
mov
int
adc
insl
cmp
fwait
lret
lret
lret
and
jmp
or
and
gs
in
jns
nop
lcall
xor
cmp
outsb
sbb
fidivs
das
das
outsl
int3
rclb
jbe
jg
bound
sahf
aaa
in
aad
leave
cld
std
add
cs
sbb
xor
js
mov
das
adc
repnz
sbb
push
push
mov
in
repz
call
xchg
mov
out
out
std
jnp
or
push
jmp
stos
xor
mov
pop
dec
xchg
arpl
dec
nop
bound
push
mov
int
jbe
lahf
out
cmpsb
out
inc
push
fstpt
fidivrl
mov
stos
sub
jns
fldl
xchg
mov
test
lock
and
sub
and
inc
sbb
adc
xchg
xor
mov
stos
cmp
jp
sub
fdivrl
jno
aam
jge
xchg
sub
and
jns
addb
rolb
jnp
leave
adc
aam
ljmp
cmp
jbe
inc
and
xlat
inc
cld
mov
jns
lds
xchg
hlt
test
xchg
std
mov
xor
cmp
sub
fisubrs
fwait
xor
in
sub
adc
sti
pop
inc
xchg
loop
push
dec
or
lods
pop
push
xchg
repz
das
fnsave
sub
test
pusha
lods
mov
fisttpll
jl
inc
fcompl
xor
mov
dec
out
lret
fsubrl
cmpsb
add
jo
add
das
fnsave
sarl
mov
jns
and
and
imul
mov
lds
push
pop
out
movsl
or
mov
cmc
pop
loopne
jge
mov
inc
popa
rorb
pop
cwtl
inc
fistps
loopne
scas
repz
mov
xchg
mov
mov
fsts
movsb
cmp
mov
adc
or
or
fsub
out
in
add
leave
add
mov
mov
jns
sti
mov
xchg
cli
test
in
scas
jns
cmp
jp
mov
popa
mov
mov
jbe
into
sub
mov
mov
xlat
das
outsl
aaa
xchg
cs
aaa
sub
push
push
pusha
imul
mov
adc
std
inc
ds
and
push
mov
mov
stos
add
mov
fldl
inc
scas
jns
scas
mov
sbb
lods
insl
dec
out
pop
mov
lods
out
pop
cwtl
sub
ret
int
lret
rcrb
xchg
fisubl
repz
rorb
repnz
mov
in
out
imulb
aas
lea
dec
out
mov
in
mov
adc
imul
roll
lcall
inc
dec
pop
or
jge
fwait
pop
and
pushf
mov
or
outsl
aaa
xchg
xchg
cmpl
and
dec
xor
das
das
into
or
xor
out
jbe
in
loopne
add
push
lods
int
insl
repz
dec
mov
inc
add
aaa
mov
fildl
jbe
call
sub
fcmovnu
ss
incl
cmp
repnz
mov
es
pushf
lret
in
fiaddl
leave
mov
xor
fwait
jg
ret
loopne
iret
sub
iret
and
cmpsl
xchg
lcall
xlat
inc
lods
mov
js
fdivs
out
ret
fiaddl
daa
sarb
mov
sbb
cs
push
in
cmp
jl
in
push
pop
pop
std
adc
add
movsl
add
arpl
scas
or
outsl
fwait
mov
int3
aad
fwait
xlat
jmp
enter
pop
fimuls
enter
bound
sbb
mov
mov
jmp
push
push
cmp
mov
mov
inc
shr
xor
icebp
xor
pop
cmp
cmpsb
push
loop
aas
mov
jno
fstl
fidivrl
adc
lret
mov
mov
push
aaa
push
adc
cmc
mov
mov
mov
push
mov
mov
mull
out
nop
lret
fcmovnu
outsb
arpl
clc
test
mov
xor
adc
in
mov
jns
arpl
dec
fmul
jge
xlat
xchg
popf
or
cmpsb
out
out
xchg
or
or
mov
adc
arpl
mov
and
mov
push
negb
sar
popl
sarl
mov
aad
cmpsb
dec
jns
ss
push
lods
jl
inc
lcall
daa
imul
out
lret
mov
mov
xor
mov
aad
mov
test
in
repnz
dec
hlt
mov
cmp
repnz
cltd
aaa
push
and
fwait
lods
ret
xchg
shll
call
cmp
fcmovne
leave
xchg
xchg
mov
adc
movsb
ja
mov
pop
and
push
xchg
adc
add
xchg
inc
sub
mov
adc
xor
jecxz
pop
inc
repz
out
xchg
mov
aas
ret
add
aaa
xchg
mov
mov
push
lret
mov
insl
inc
pop
movsl
mov
inc
jns
mov
adc
add
popa
jns
jns
or
cmp
xchg
pop
xorl
or
outsl
ja
hlt
hlt
inc
mov
xlat
nop
push
mov
adc
jle
out
es
xlat
cwtl
jbe
scas
or
push
add
movsb
sti
mov
das
int3
jns
add
fisttpl
mov
leave
ss
vlddqu
sahf
mov
pusha
repz
and
pop
pop
pop
pop
sbb
ret
data16
jl
mov
sub
aad
loop
push
inc
in
mov
adc
insl
fidivrs
pop
movb
repnz
mov
lods
cmp
incl
mov
push
int
mov
cmp
push
sub
testl
jns
mov
jo
adc
pushl
cmp
and
jbe
lcall
sbb
jae
divb
andb
mov
stc
xor
rcrl
mov
push
fsubp
sbb
lahf
in
mov
add
sarl
test
jmp
loope
fldl
mov
sbb
enter
testl
cmpsl
push
jl
xchg
lea
xor
out
jns
lret
out
or
mull
ficoms
fsts
xchg
leave
fucom
repnz
xchg
adc
or
jnp
dec
movsb
xor
add
add
inc
fidivrs
xor
aas
mov
scas
or
aam
in
add
xorb
jae
mov
jle
dec
mov
int
in
push
push
mov
inc
cs
int
ds
ret
daa
jns
insb
icebp
xor
mov
insl
dec
pop
aam
test
stc
lret
lret
lret
lret
pop
sarb
test
add
push
mov
mov
icebp
nop
pop
loop
negb
fisttpl
in
out
ja
sbb
movsb
js
rolb
sar
das
outsl
ja
int
fwait
ss
mov
dec
cmp
push
popa
fidivs
pop
sti
mov
call
scas
ret
sarb
cmpsl
mov
pop
pop
insl
cs
push
fmull
or
fstpl
push
jnp
ss
les
jne
aad
int
jnp
inc
jbe
in
out
jbe
mov
loop
mov
bound
xor
push
and
in
xor
out
imul
and
jnp
lea
mov
mov
outsl
fwait
xchg
xchg
int
call
or
loopne
repz
fstp
ss
leave
mov
xchg
fldenv
push
xchg
mov
jns
mov
lahf
ficoml
in
fists
outsl
bnd
cmp
sti
mov
jge
inc
insl
insl
fsubrp
ss
push
xchg
or
movsb
inc
pop
fidivrs
fiadds
imul
adc
push
std
xor
repnz
out
out
cmpsl
mov
inc
lcall
loopne
repnz
outsl
push
mov
add
xchg
mov
stc
dec
fs
inc
ret
inc
daa
mov
fisttpl
int
jl
inc
cmpsb
test
fcomi
int3
in
lret
repnz
push
ss
cmc
adc
jae
pop
hlt
int
int
in
test
lock
mov
loop
outsl
mov
xor
outsb
xor
das
incl
sbb
fisubl
ss
das
das
ret
notb
xchg
cmp
mov
fistpl
sub
dec
clc
mov
mov
jb
add
jae
pop
add
cmpsb
mov
fisubrl
outsl
mov
or
leave
inc
adc
mov
cs
das
push
clc
cmc
mov
lock
add
aaa
xorb
xchg
pop
mov
and
pop
add
out
fidivrl
xchg
sahf
cmp
js
aad
jg
inc
bnd
enter
jb
xor
out
out
mov
inc
dec
sub
aaa
cmp
xchg
push
movsb
in
push
adcl
lret
lret
fisttpl
fcoml
mov
fidivs
fwait
inc
push
ror
pusha
mov
pop
cmpsl
gs
fcompl
sub
jne
mov
das
fildl
icebp
push
add
cld
push
shl
repnz
mov
stc
in
mov
xor
es
test
lods
mov
fisubl
out
sahf
cmc
popa
insb
pop
jle
out
lods
call
lret
lret
xchg
insl
pusha
ror
mov
outsl
aaa
mov
mov
dec
and
mov
das
das
aaa
lock
pop
data16
and
int
pop
pop
fimuls
inc
dec
inc
divl
rorb
fstpl
iret
lahf
pop
inc
mov
stos
xor
mov
mov
mov
out
add
cmp
leave
movsb
inc
cmpl
popf
sub
or
orl
repnz
xor
cmpsl
xchg
sbb
movsb
out
repnz
pop
clc
das
movsb
xchg
jge
or
sub
out
mov
movsb
xchg
repnz
nop
pop
lahf
pushfw
cmpsb
outsl
pop
inc
outsl
push
lcall
xorb
ds
rcl
insl
outsb
lds
les
sbb
xor
das
das
fstp
pop
cld
lahf
pop
inc
push
leave
scas
bound
loopne
sub
push
xor
ja
lods
push
ljmp
test
xchg
mov
adc
push
jns
mov
outsl
aaa
inc
fisubl
lea
dec
xor
rorl
inc
les
mov
sbb
int3
fistpl
stos
fisubrs
cmpsb
in
int
or
xor
inc
out
mov
test
push
stos
jg
sbb
in
out
ja
mov
les
mov
adc
jecxz
jbe
aaa
xchg
xchg
mov
cmp
fsubl
jne
pop
fwait
lret
lret
or
or
sub
insl
adc
gs
movsl
in
int
add
add
imul
mov
adc
sarl
xor
inc
jmp
popa
fidivs
test
lret
mov
jg
mov
lcall
mov
jle
out
xor
jae
or
sbb
int
push
fcoml
loope
mov
cmpb
add
lea
fstp
mov
subl
mov
fistl
nop
mov
inc
nop
ljmp
fstps
add
dec
rorb
fwait
lret
mov
or
shr
ljmp
data16
jl
pop
push
int
arpl
and
mov
or
sub
aad
cmp
add
outsl
adc
fs
xor
sahf
or
testb
sbb
xchg
aaa
push
daa
sub
mov
inc
aam
xor
or
int
xlat
xor
mov
pushf
imul
orb
dec
outsb
cs
outsl
cmp
js
pop
ss
rcr
and
dec
shll
js
insl
fsubrp
sbb
lcall
mov
movsb
jns
jns
int3
jns
subl
sbb
sbbb
fisttpl
addb
shll
jae
sbb
fnstcw
out
flds
mov
adcb
or
xchg
push
iret
je
pop
fisubrs
daa
xchg
in
sub
insb
cmp
mov
push
popa
rcrb
popa
push
loopne
jbe
test
ljmp
pop
push
adc
mov
fdivl
andb
pushf
repnz
and
cltd
inc
mov
cmp
insl
mov
int3
or
push
mov
mov
aad
rcl
xchg
pop
sbb
sbb
ss
loopne
mov
stos
ret
sub
in
in
dec
stc
add
push
dec
mov
xchg
mov
in
ret
pop
mov
xor
cmpsb
mov
ss
lcall
or
out
dec
mov
push
ljmp
mov
sub
in
stos
int
xchg
arpl
shrb
pop
fisubl
stos
xchg
and
xchg
lcall
push
cltd
fbstp
jle
and
or
test
push
test
inc
pop
mov
jo
inc
mov
lret
mov
les
pop
mov
scas
into
add
dec
or
fcmovnu
out
dec
inc
xchg
dec
or
or
mov
push
inc
scas
insb
jns
lock
mov
xor
call
fsubrp
jle
push
daa
repnz
mov
mov
insl
imul
pop
out
push
xor
add
jp
pushf
cld
adc
pushf
shlb
push
lahf
xchg
mov
nop
mov
xlat
lods
inc
bound
adc
pop
jmp
mov
dec
add
into
sti
push
add
test
fldt
sti
inc
notb
cmp
mov
mov
sub
addr16
test
sub
insl
cs
push
cli
jb
nop
lret
lret
lret
pop
daa
stc
and
xor
mov
lret
mov
mov
pop
add
jns
in
jl
fildll
sbb
or
jns
jns
ficoms
pushf
mov
pop
mov
mov
sbb
pushf
sub
ja
cmp
call
jmp
dec
cmpsl
ret
and
fs
outsl
je
jns
inc
inc
hlt
movsb
int3
in
insl
and
das
outsl
lods
cmp
pop
add
cltd
xlat
loop
vpacksswb
clc
test
mov
sbb
fadds
ficoms
xor
fcmove
das
sub
int3
jno
pop
pop
sarb
or
movsb
out
in
movl
mov
inc
mov
mov
outsl
mov
fisubrs
lcall
in
and
pop
pop
imul
mov
test
mov
mov
daa
pop
dec
mov
bound
xchg
sub
sbb
ljmp
fisubrs
cs
movsb
add
les
add
insl
data16
xlat
mov
lret
lret
lret
pop
lcall
lods
xor
test
les
sbb
inc
in
out
push
xor
aaa
lock
das
dec
jne
cmc
pop
and
fdivl
movsb
sbb
lcall
test
mov
inc
mov
xorb
push
lret
lret
pop
pop
shlb
mov
ss
mov
pusha
push
fcomps
pushf
cmp
arpl
adc
xchg
xchg
clc
dec
clc
and
mov
out
loopne
imul
xchg
mov
jae
xor
xor
pop
lea
cli
hlt
jp
lahf
pop
mov
sub
shl
dec
cmp
xchg
mov
or
jmp
lret
push
fildl
insw
push
rcll
sub
js
push
sbb
xor
xorb
sbb
cltd
fwait
sbb
pop
mov
add
aam
imul
andb
sbb
in
pop
cmp
cltd
and
xor
repnz
inc
or
lea
jg
xor
pop
ret
mov
ljmp
out
cmp
out
les
or
add
xor
aas
xlat
ljmp
and
testb
daa
mov
scas
mov
and
loope
xchg
fwait
lcall
fcoms
xor
mov
and
fwait
jge
lds
mov
dec
push
push
int3
bound
sub
jnp
stos
in
int
dec
and
cmp
push
cmp
call
outsb
fstp
outsb
outsb
mov
std
int
xor
jp
sti
adc
fildl
lds
adc
dec
test
loop
dec
or
out
adc
push
xchg
and
inc
sbb
sub
jae
dec
adc
ret
push
lods
stos
loopne
add
pusha
scas
lret
fcmovne
in
mov
push
push
stc
ljmp
jnp
loop
jb
xchg
mov
add
cmc
xchg
iret
xor
adc
mov
jmp
test
ja
or
sbb
mov
mov
and
fcmovnb
ficoms
bound
jl
pushf
outsb
ja
mov
cmp
addr16
repnz
insl
pop
mov
sbb
mov
das
outsl
sbb
in
fsts
xchg
pusha
sub
lds
cmp
xchg
jp
jg
fidivrs
and
mov
inc
mov
ficomps
pop
mov
inc
mov
outsb
movsl
jb
push
fwait
lret
lret
and
scas
or
fisubl
sub
push
mov
cs
sahf
mov
sti
scas
cmp
ret
lods
mov
push
push
fstpt
ljmp
or
jae
jns
mov
xchg
sbb
sub
mov
cmp
jle
in
mov
movsb
hlt
cwtl
adc
xor
mov
sbb
jp
fimull
jg
adc
sbb
dec
repnz
inc
push
pop
adc
add
rorl
repz
pusha
loopne
jno
push
stc
out
loope
pop
out
aaa
mov
sbb
mov
mov
pop
fldt
ss
cmp
out
jno
mov
jns
jnp
pop
pop
mov
and
sbb
das
das
mov
xor
sbb
in
add
fstpt
jl
dec
mov
xor
mov
jae
and
cld
fs
fisubs
rorl
in
ss
stos
stc
cli
rcrb
dec
stos
rcrl
pushf
push
adc
jo
xor
xchg
lahf
mov
sub
pushf
sbb
mov
xchg
scas
or
lcall
lret
das
outsl
xor
adcb
and
or
das
das
das
inc
mov
push
push
mov
push
fadds
mov
jo
shr
ret
imul
cli
das
out
sahf
dec
fstp
inc
dec
test
inc
inc
ljmp
das
das
outsl
cmc
aaa
adc
repnz
cmp
xchg
mov
cmp
test
fs
fcmovne
in
scas
movsl
int3
mov
push
addr16
lret
lret
lret
loopne
sub
jo
gs
xor
fnsave
fwait
push
out
out
fdivl
xlat
ret
inc
aam
fst
jb
jg
mov
adc
cmp
jno
cs
xor
inc
cmpsl
mov
jns
push
cwtl
shrb
in
pop
ret
push
sbb
in
push
mov
or
std
and
lret
jo
push
pop
pop
pop
fstpt
xchg
in
popa
outsl
ja
lret
mov
rclb
ja
insl
jg
mov
das
das
divl
std
movsl
mov
mov
pop
push
sbb
inc
jge
fsubr
jge
inc
jb
add
dec
addr16
fidivs
xchg
nop
push
push
jo
ret
xor
pcmpeqw
adc
xchg
pusha
add
mov
mov
mov
push
cld
mov
push
cli
and
xchg
mov
or
es
ljmp
pop
std
pusha
add
in
inc
fldt
daa
lds
mov
xchg
mov
mov
loop
mov
in
fwait
ror
jne
pop
ja
adc
outsb
fildl
mov
outsb
sub
xor
inc
scas
out
mov
cwtl
and
scas
into
hlt
mov
cmp
pop
pop
cs
sbb
xchg
xchg
sub
pop
pop
pop
popf
lock
in
bound
aas
sbb
xor
sahf
and
xor
stos
push
lret
fidivrs
into
pop
pop
pop
fcomps
ljmp
xchg
jl
adc
rcrl
gs
fidivl
mov
lret
jns
mov
mov
mov
jo
inc
or
or
jns
sti
rcll
out
lods
dec
add
mov
or
fld
sub
test
shlb
mov
popf
add
in
out
push
sub
dec
add
int
in
push
faddl
in
pop
mov
lea
outsb
sbb
pusha
repz
sub
cmc
ja
pop
pop
pop
sbb
and
push
call
xor
in
out
fildll
mov
repz
dec
push
ja
jp
fcmovne
mov
data16
inc
movsb
cltd
lods
aaa
in
lcall
inc
cmp
adc
insl
fdivs
ss
loopne
das
outsl
jne
sbb
mov
push
mov
ss
in
and
int
xchg
test
outsl
aaa
repnz
inc
fldenv
inc
repz
pop
pop
pop
fisubrs
je
xchg
and
ds
mov
push
pop
lahf
pop
addr16
or
mov
dec
pop
test
xchg
push
lea
fisubrl
mov
enter
int
outsl
pop
mov
sub
insl
outsb
pop
inc
xor
shr
stos
mov
or
and
or
cmpsb
mov
cmp
loop
jns
mov
pushf
sbb
cmpsb
inc
rclb
movsl
push
or
out
mov
and
and
out
sbb
add
sbb
clc
mov
jae
mov
rcr
xchg
pop
sub
out
loope
xor
jo
mov
mov
jmp
mov
ret
cwtl
xor
mov
in
add
xchg
mov
fisttpl
and
pusha
sub
mov
add
lock
pushl
sbb
jecxz
jb
repnz
sbb
std
xchg
adc
pop
pop
dec
xor
in
in
mov
push
mov
loopne
imul
jo
adc
int
sub
mov
fstpl
jl
ret
arpl
es
in
mov
dec
arpl
jbe
imul
cmp
sti
fnsave
sbb
inc
ljmp
or
inc
sbb
testb
aas
loopne
sar
stc
cmp
push
jecxz
and
jle
in
mov
push
cs
jns
push
jno
pop
ror
scas
ds
pop
mov
in
fldt
stc
aam
sub
push
das
das
das
das
je
push
sub
mov
mov
mov
das
mov
pusha
cmp
adc
insl
pop
add
js
xor
hlt
xlat
xor
pop
test
stc
mov
pop
inc
cmc
pop
mov
loop
dec
stc
adc
lret
lods
aad
adc
aam
add
xchg
out
fildl
push
push
mov
push
cli
loop
das
das
jne
jb
addl
leave
fstpl
sub
lcall
daa
pushw
aad
in
or
out
add
mov
and
int3
fidivrs
std
mov
fxch
lea
inc
push
xchg
pop
mov
jbe
aam
push
jne
jl
loope
mov
push
push
jg
mov
pop
scas
push
mov
mov
mov
fildl
mov
js
rolb
sub
mov
movsb
pop
pop
ljmp
xchg
mov
scas
bound
mov
adc
sbb
cmp
shlb
stc
cmp
out
outsb
repz
jecxz
mov
jno
cmc
push
addl
jns
jns
xorl
call
sbb
inc
cmp
dec
push
gs
pushf
push
cmpsl
repnz
stos
mov
les
sbb
push
jo
nop
lea
and
sbb
mov
lcall
ss
mov
cwtl
cmc
mov
gs
out
mov
mov
ja
mov
pop
rol
fwait
cmp
fstpt
arpl
repnz
lea
push
repnz
lcall
rcrl
or
pushf
jb
dec
incl
outsl
fwait
xchg
mov
pop
dec
mov
clc
and
das
das
das
das
ljmp
das
or
push
ss
jae
mov
andl
cmp
jae
fisttpll
xchg
sbb
repnz
or
pop
loop
int3
and
int
or
shrb
mov
mov
cmpsb
pop
fmull
or
out
data16
pop
shrb
repnz
out
imul
jo
jns
int
xor
cmp
hlt
hlt
into
cltd
jbe
mov
fwait
jnp
and
test
in
out
aad
sti
scas
or
mov
sub
or
mov
out
out
push
das
outsl
aaa
xchg
xchg
repz
out
fmull
pop
fisubrs
pop
call
leave
out
cli
std
cmp
pop
pop
pop
pop
sbb
inc
mov
jo
popf
movsb
mov
pop
mov
sarl
or
cmp
fstpt
adc
js
mov
pop
xor
add
cs
outsb
cs
cmp
fprem1
shrb
fsubrl
or
ret
sbb
lods
mov
aas
inc
pop
pop
fsubrs
push
jno
loopne
mov
daa
aaa
xchg
js
les
sti
jg
mov
in
dec
add
sbb
out
insl
sbb
add
push
inc
out
add
scas
adc
fnstsw
xchg
xchg
xchg
jns
ss
hlt
inc
pop
push
mov
sub
xchg
xchg
shl
pop
in
cmp
icebp
enter
ja
hlt
movsl
mov
or
das
jmp
lds
pop
xor
insb
pop
push
leave
mov
cmp
test
jne
dec
rorl
cmp
pushl
fcmovnu
add
add
xchg
out
jae
je
mov
dec
jnp
or
popf
pop
pop
fsubp
test
cli
bound
sahf
push
and
pop
sbb
lret
pop
xchg
fwait
lret
fistpl
sub
jg
scas
sub
lcall
mov
jne
outsb
mov
loope
mov
out
sbb
aaa
mov
shrb
ljmp
stc
sub
jns
mov
movsl
int3
arpl
mov
test
into
mov
pusha
jae
xchg
mov
cmp
push
and
adc
mov
and
ror
inc
dec
mov
jmp
sbb
cmp
into
arpl
fcmovnu
out
mov
in
and
pop
movsb
fsubl
in
sarl
lret
push
xchg
in
ja
jp
jl
push
out
stos
inc
jb,pn
insl
xchg
int
sub
bound
pushl
int
adc
fadds
xor
lcall
or
pop
enter
mov
dec
push
push
lret
rol
xor
push
and
sbb
mov
fwait
outsb
dec
mov
je
pushl
xchg
je
repnz
or
pop
ss
pop
jge
xchg
mov
out
dec
jmp
ljmp
sub
sub
jge
xchg
xchg
xchg
jne
cmp
sub
insl
cmp
sbb
jns
fistl
push
and
jecxz
cmpsb
mov
push
lret
mov
push
fildl
sub
sahf
out
inc
or
push
ror
or
ds
insl
notl
cli
xchg
and
insl
in
and
int
cmpsb
out
mov
ss
mov
rcrb
in
or
pop
fnsave
sub
and
sub
mov
adc
in
ret
in
outsb
in
xchg
hlt
pop
in
ljmp
ror
in
scas
pmaddwd
xchg
mov
push
frstor
shl
cmpsb
jbe
pop
inc
mov
fistpl
pop
mov
data16
pop
mov
mov
lcall
clc
mov
mov
fidivl
leave
insl
fwait
add
jns
dec
clc
push
stos
cmp
int
insl
mov
dec
pop
push
pop
aaa
mov
mov
inc
and
sarl
xchg
sbb
adc
jecxz
js
inc
ret
lret
pop
enter
xor
sub
stos
mov
cld
jns
int
lods
and
xor
mov
stc
jl
xorb
mov
push
jecxz
adc
int
sbb
inc
lcall
xchg
cmp
dec
rcrl
icebp
das
bound
adc
mov
cmp
or
mov
push
adc
xchg
xchg
mov
repnz
fs
inc
aad
cmp
icebp
loop
jb
xchg
xchg
add
mov
or
inc
aaa
arpl
mov
cs
loope
lods
xchg
jb
aad
hlt
ror
pop
adc
jl
add
jbe
out
je
cmp
gs
call
subb
mov
mov
in
xchg
mov
push
sub
pop
jmp
xchg
xchg
xchg
outsl
ds
mov
cwtl
aad
cmp
sbb
out
add
dec
mov
lret
sbb
data16
test
mov
jl
in
inc
xor
fwait
push
les
je
in
pop
pop
movsb
arpl
mov
mov
push
dec
das
nop
lret
bnd
mov
pop
roll
repz
or
xor
dec
pusha
jmp
stos
daa
or
mov
mov
sti
mov
xchg
pop
scas
mov
jns
int
int
leave
lcall
fdivrs
lcall
cli
cmp
leave
fidivs
outsl
ja
adc
pop
sarl
les
insl
bnd
xchg
cld
cmp
inc
out
repz
xor
mov
ljmp
sub
leave
pop
fcompl
cmpsl
shrl
mov
cmpsb
adc
fildll
repnz
cmp
mov
enter
dec
jge
repnz
stos
push
imul
fcomi
repnz
bound
and
or
ds
fimuls
or
and
mov
test
repnz
mov
pop
fwait
push
test
fwait
stos
out
push
dec
iret
and
cmpsb
push
ds
xor
adc
dec
jae
imul
loopne
push
mov
mov
lahf
adc
dec
repz
sub
mov
xchg
lret
test
fildl
outsb
outsb
mov
mov
sti
jns
imul
sbb
aas
add
add
loope
lods
rcll
xchg
lcall
outsl
iret
in
clc
cmpsl
mov
mov
jns
mov
pop
mov
push
rcll
sbb
lcall
bound
pop
push
fwait
mov
lret
ja
pop
and
in
into
push
add
mov
xor
int
in
adc
jp
xchg
and
sbb
jp
dec
push
aaa
adc
lahf
les
add
inc
fstl
ds
aam
loope
cld
inc
andl
or
bound
insl
outsl
aas
jmp
jno
leave
in
movsb
or
xor
fmul
jmp
add
mov
outsb
outsl
mov
push
push
jmp
pop
fisubrs
movups
fistps
xlat
fstpl
pop
jp
pop
nop
imul
sub
xchg
sbbb
sub
cmp
outsb
fsubrl
inc
loopne
mov
nop
cmpsb
shrl
sbb
mov
push
out
mov
add
jmp
cmp
stc
rclb
pusha
cltd
xchg
xchg
outsb
ret
mov
pop
out
loopne
mov
cli
testl
mov
xchg
mov
mov
lea
call
mov
jns
aam
in
ret
repnz
icebp
adc
repnz
add
xor
xchg
pop
fidivs
aam
mov
adc
mov
pop
movsl
imul
das
popa
or
fistl
rcl
fwait
add
in
ja
cmp
xor
and
xlat
lret
inc
mov
movsb
pushf
loopne
lret
lret
lret
pop
push
jnp
or
cmc
dec
sti
insl
ficomps
sbb
cmp
push
dec
clc
outsl
fwait
mov
xor
adc
sarl
push
outsl
in
in
loop
pop
push
bound
sbb
or
mov
arpl
lret
lret
lret
test
aas
push
add
call
popf
pop
repnz
aaa
mov
daa
pop
loope
cmp
push
cltd
jg
test
out
pop
cmp
sahf
fcmovnu
fsubr
mov
mov
add
pmulhuw
mov
jmp
sub
jmp
push
dec
dec
ret
int3
cmp
cld
mov
mov
imull
mov
mov
sbb
and
mov
mov
jl
push
jns
jns
mov
data16
mov
repz
xor
xor
sbb
lret
dec
jg
add
loope
mov
adc
cmp
mov
push
out
lcall
aas
inc
cli
xchg
test
iret
imul
mul
inc
fisubrl
cmp
in
movsl
jnp
stos
lods
lea
faddl
rcll
mov
aas
outsl
fimull
sbb
inc
sahf
insl
sbb
mov
shlb
pushl
insl
repz
bound
mov
jns
aas
je
sub
out
add
in
add
sbb
rcr
cmpb
pop
mov
stos
fs
mov
mov
out
insl
inc
mov
ficomps
dec
ja
outsb
repz
inc
nop
jbe
sbb
mov
dec
fwait
lret
sbb
mov
dec
scas
add
stc
dec
mov
pop
fimuls
loope
cwtl
sbb
mov
adc
mov
jne
in
out
mov
ljmp
outsl
mov
adc
ss
shlb
xchg
adc
xchg
pop
in
cmpsl
shrl
mov
pop
in
js
mov
push
jae
mov
xor
js
out
negb
shr
pop
pop
or
xchg
mov
repnz
shlb
dec
add
test
rolb
in
jge
adc
lret
lret
lret
daa
mov
not
aaa
xor
push
inc
std
jb
xor
aaa
outsb
xchg
jmp
fidivl
xor
cld
cmc
test
mov
iret
ret
push
bnd
xor
dec
lahf
imul
in
insl
repz
icebp
in
xchg
push
jp
repnz
in
cli
xor
loopne
dec
push
das
outsl
pop
shr
clc
pusha
sbb
loop
fidivs
das
das
aad
pushf
push
iret
lahf
xchg
jb
js
cld
jo
insl
mov
dec
lret
lret
lret
dec
ds
cmp
enter
mov
lret
lret
fisubrs
fwait
jbe
jne
dec
fdivrs
int
xor
addl
shll
cwtl
ljmp
fwait
mov
jae
xlat
xchg
pop
adc
fcomps
lret
das
mov
pusha
lods
mov
subb
outsb
cs
push
iret
fldl
insl
mov
scas
arpl
lahf
test
fcmovu
inc
int
lahf
and
adc
cs
das
outsl
pop
push
jmp
sarl
jp
sahf
jp
cmp
outsb
cld
or
mov
mov
rorb
add
push
push
in
out
lods
jle
into
das
cmpl
out
cmpsl
pusha
fs
mov
in
out
loopne
gs
ss
not
mov
dec
lds
jns
mov
aam
hlt
pop
stos
jge
lds
push
add
mov
jl
test
push
sti
inc
xor
pop
int3
push
shl
test
pop
sub
fwait
out
outsb
cs
outsl
mov
add
jno
ss
fidivs
ja
or
mov
pop
pop
fidivs
pop
icebp
adc
sub
pop
pop
pop
int3
mov
mov
arpl
pop
pop
xor
jns
push
jge
mov
ljmp
aas
push
nop
std
sbb
std
lcall
fadds
or
cmp
xrelease
nop
lcall
push
in
cmpsb
jl
js
lods
adc
fisttpll
mov
insl
jae
mov
lret
js
push
cmp
imul
xorl
fsubrl
or
push
shlb
mov
into
pop
fistpll
xchg
pop
mov
dec
dec
adc
loop
lahf
mov
in
or
fstpt
inc
ljmp
push
mov
int3
lock
cmpsb
in
out
ss
inc
dec
data16
push
out
sbb
in
pop
fidivrs
push
cmp
out
push
mov
pop
test
adc
pop
add
mov
push
int3
jnp
pusha
sub
sti
in
sbb
jl
sar
das
das
das
outsl
mov
call
cmp
das
das
das
jns
push
cmp
into
sub
mov
xor
nop
lret
mov
jnp
stos
mov
push
or
cmc
test
popf
sub
xchg
out
adc
mov
lret
lret
pop
adc
test
test
mov
lret
adc
adc
mov
fidivs
outsl
out
dec
out
lods
movsb
je
push
sub
inc
std
or
outsl
xor
insb
adc
imul
std
xor
out
scas
push
mov
mov
call
jg
or
in
jae
add
dec
mov
out
xor
cltd
xchg
xchg
and
jle
mov
mov
jecxz
dec
mov
xlat
mov
hlt
lret
mov
push
mov
inc
inc
pop
mov
pop
push
fucom
xor
outsl
hlt
lds
jbe
repz
lret
inc
push
test
das
xchg
cmp
add
add
xor
xchg
add
ret
inc
cmc
mov
dec
xor
mov
cmp
mov
mov
repnz
push
loopne
rcr
mov
sbb
jns
stos
int3
stos
mov
push
mov
stc
xor
mov
mov
xchg
ds
imul
cmp
das
das
outsl
int3
aam
inc
jbe
es
cld
aaa
ljmp
das
icebp
jns
push
jge
sub
push
jb
lret
into
cs
popa
dec
or
lcall
push
inc
xchg
pop
dec
jl
mov
imul
mov
cld
mov
lret
pop
pop
lahf
lret
out
popa
pop
adc
jns
sbb
fldt
pusha
xlat
sub
mov
mov
xchg
mov
lret
pop
sub
cli
fcomip
insb
ret
jg
mov
sbb
xchg
fmuls
arpl
dec
sub
cld
pop
fucomi
ss
subb
inc
jo
xor
jl
or
test
ja
mov
xor
pop
fidivrs
sbb
lds
ljmp
add
push
stos
dec
test
sbb
mov
xchg
and
test
and
or
jno
dec
and
fcmovne
in
push
jle
in
lahf
mov
or
xchg
mov
lcall
or
pop
ds
dec
imul
ljmp
add
mov
xor
in
inc
add
fwait
ret
lret
fistl
adcl
mov
movl
ret
jns
pushf
push
xchg
mov
jmp
xchg
or
out
or
xchg
divl
mov
lret
lret
fcmovne
outsb
int3
dec
stos
jae
je
mov
fwait
lret
adc
js
and
shlb
xor
pop
pop
fiadds
dec
lret
addb
int
mov
lods
imul
cmp
pop
pop
fdivs
insb
mov
push
inc
xor
add
lahf
nop
pop
push
insl
repz
push
ret
clc
sarb
ss
lahf
push
lret
in
push
mov
repz
ret
insl
dec
and
xchg
hlt
mov
mov
ss
sbb
push
mov
mov
mov
jge
sarl
mov
jns
jns
xchg
fildll
jnp
addr16
lods
cmpl
add
mov
popf
andl
add
xchg
xchg
mov
inc
or
or
inc
xor
xchg
pop
cli
cmp
lcall
jb
lahf
mov
aad
add
mov
inc
ljmp
jns
mov
fcoml
insl
xor
mov
dec
pop
mov
adcl
in
cmpl
or
lret
xchg
and
popf
xchg
jbe
inc
pop
lcall
and
notb
scas
daa
add
dec
js
hlt
adc
out
mov
test
lahf
and
push
mov
xchg
xchg
sbb
lret
outsl
add
mov
push
push
dec
or
pop
es
scas
insl
repz
adc
jno
pop
cwtl
out
mov
in
in
inc
int3
xlat
cmp
jo
add
fisubl
aaa
sub
and
pop
out
add
js
ss
aaa
xor
lret
push
les
rolb
sub
sbb
cli
xchg
int
pop
test
sbb
sahf
loopne
jae
or
pop
cmpsb
ret
ljmp
les
bound
and
adc
xchg
mov
add
add
ja
ja
test
das
das
outsl
aaa
inc
xchg
ds
sbb
fcmovu
outsb
cs
rcr
cmp
xor
mov
sub
mov
fidivs
sbb
sbb
push
jns
jns
std
ret
in
adc
mov
ret
xchg
repnz
das
mov
out
pushw
fcomi
repnz
sarb
scas
shll
repnz
mov
push
dec
mov
out
lock
sbb
jo
rcl
shrb
push
and
sub
push
jecxz
push
test
jae
jns
and
inc
sbb
repz
rcll
mov
in
inc
pop
ffree
lods
mov
outsb
cs
test
pop
push
out
testb
in
outsl
in
push
xchg
je
lret
fcmovne
and
mov
shrl
je
ficoml
movsl
iret
pop
out
push
and
fst
in
cmpb
xor
imul
push
pop
cmp
push
loop
add
sub
imul
pusha
ja
in
mov
push
rorl
aad
pop
outsb
aaa
or
push
sub
xchg
mov
ljmp
push
jecxz
dec
sti
pop
pop
ficomps
std
xchg
xor
mov
scas
outsl
loopne
mov
imull
aaa
add
les
mov
adc
mov
mov
pusha
arpl
cmp
outsl
rolb
or
addr16
shl
fwait
mov
es
ja
hlt
aam
sbb
sbb
xor
in
mov
xchg
push
sub
and
or
and
pusha
scas
int
and
fistl
add
fistl
add
lret
jae
or
pop
repz
pop
lret
in
fwait
stc
lods
sbb
ja
lea
push
outsb
jle
xor
sbb
pop
xchg
fisubrs
mov
sbb
movsl
ljmp
jecxz
inc
and
int
fwait
pop
xor
or
adc
xchg
mov
mov
js
xchg
add
mov
imulb
mov
sub
xchg
adc
pop
jbe
xor
and
divb
xor
dec
insb
pop
lods
cmp
int
je
mov
mov
insl
stos
lcall
int
pop
test
std
jp
rclb
cmp
mov
xchg
mov
ja
xor
mov
pop
mov
push
or
jge
scas
xchg
mov
psubd
or
mov
repz
in
cmp
popl
in
in
push
mov
push
sbb
push
mov
lahf
sbb
std
pop
fcmovne
push
pop
cmp
lret
lret
into
lcall
addb
popa
cs
lea
or
rcrl
push
fldl
call
and
xchg
loopne
fidivs
xchg
lret
movsb
in
pop
sbb
add
push
repnz
push
lret
ljmp
addr16
lret
mov
adc
mov
insl
ficoms
fildll
cmp
in
repz
bound
lcall
gs
push
push
push
and
add
out
scas
pop
fwait
sbb
push
mov
mov
in
xchg
mov
fcmovnbe
aam
flds
mov
sbb
ss
sbb
push
jle
mov
pop
mov
jl
adc
jns
mov
dec
push
enter
ret
clc
insl
repz
imul
push
or
loopne
jb
mov
dec
xchg
in
lcall
mov
insb
and
jmp
scas
sub
or
nop
pop
adc
fmull
jecxz
subl
push
jo
or
aad
or
lcall
test
cltd
pop
cs
jns
out
sarl
dec
daa
adcl
adc
sub
jns
jp
hlt
fidivs
mov
jbe
pusha
jae
lods
mov
ret
outsl
insl
pop
fidivrs
or
xor
aas
push
xlat
ljmp
push
js
adc
pop
pop
lea
fxch
out
pop
add
fsubrp
jbe
mov
push
push
insl
into
aas
mov
insb
pop
pop
stos
stos
pop
push
mov
jl
jno
xor
das
xor
loop
pop
cltd
cmp
jns
and
loop
loop
cmc
mov
ja
and
cmc
adc
adc
lds
xor
inc
or
mov
outsb
mov
mov
jns
lahf
mov
push
lcall
xchg
ss
and
jns
pop
jne
pop
imul
repnz
xchg
sub
and
in
in
sahf
jns
cmp
pop
test
scas
int
in
xor
push
addb
mov
aad
cmpsl
jb
movsl
inc
call
inc
xchg
push
jmp
pop
and
les
lret
lret
lods
xor
fmull
push
ja
jg
das
ss
jmp
pushf
cltd
insb
out
fidivrs
mov
notl
loope
stc
push
jns
jns
cmc
sub
sti
dec
cltd
pop
xor
arpl
jns
rclb
stc
ja
mov
int
sub
in
in
dec
mov
ja
dec
ret
nop
cltd
cmp
sbb
add
mov
sub
lret
pop
enter
xor
cmpsb
sbb
mov
mov
cli
or
or
dec
out
add
fdivrl
inc
stos
push
mov
outsb
ja
mov
push
out
shl
movsb
enter
and
ror
xor
adc
mov
jns
scas
add
xchg
jmp
aad
dec
das
outsl
sbb
lahf
data16
das
das
mov
and
pop
add
das
das
das
das
cli
mov
inc
cwtl
and
ret
js
mov
sub
in
mov
movb
sbb
mov
int
or
out
stc
push
das
outsl
aaa
xchg
ljmp
xor
cmp
fptan
sahf
and
inc
mov
cs
xchg
jp
decl
push
enter
xor
xchg
xchg
fistpl
ror
mov
insb
pop
fisubrs
mov
pop
fbld
dec
gs
jne
fdiv
push
push
mov
ss
aaa
xchg
mov
adc
xchg
imul
push
fdivl
inc
fwait
orl
xor
fisubl
insl
gs
jae
aaa
cmp
out
rorb
xor
push
mov
fstp
out
test
or
out
lods
sbb
pop
inc
ror
or
rcrl
add
lret
lret
or
pusha
or
into
int3
push
andb
lret
cmc
in
jle
cmp
bnd
test
lahf
and
push
out
lods
push
addb
cmpsb
loopew
scas
test
lret
in
in
dec
xchg
stc
shrb
mov
jge
sbb
adc
sbb
xchg
outsb
out
mov
dec
lock
mov
aaa
xchg
stos
cwtl
xchg
mov
outsl
sbb
push
push
dec
lcall
das
and
hlt
cltd
jg
pop
aam
shrb
loop
sbb
insl
mov
loop
iret
in
ja
repnz
push
mov
cmc
pop
lretw
or
push
jns
cmp
jae
les
mov
xor
fsubl
jbe
sbb
pop
ss
cmp
mov
fdiv
sti
rcl
stc
xlat
pusha
gs
pop
aad
jbe
jmp
cmp
int
scas
cmp
lcall
xor
mov
mov
or
xlat
fidivrs
mov
gs
data16
inc
jge
add
pop
ds
jne
mov
pushf
adc
dec
std
cwtl
inc
fdivs
addr16
insb
mov
mov
sbb
clc
jbe
pop
cltd
sub
out
cmp
outsl
jg
ss
stc
push
or
pusha
movl
sahf
sub
jne
mov
adc
or
sbb
mov
mov
subb
mov
pop
jle
movsb
aaa
mov
xor
xor
in
enter
outsb
jb
sbb
fsubrp
jbe
add
pop
fcmovnbe
ss
ds
fstpl
xor
jns
inc
jmp
sbb
add
fstpl
pop
mov
and
sub
and
sub
stc
pop
cwtl
adc
stos
mov
movsb
sbb
push
xor
push
fwait
push
push
pushf
icebp
shll
lods
adc
dec
jne
jge
in
cmp
fld1
movsb
dec
pop
sub
ret
call
dec
in
dec
mov
dec
in
icebp
push
aam
out
ret
pop
mov
push
das
outsl
aaa
inc
push
stos
idivl
push
ret
mov
adc
shlb
pushf
adc
insl
xor
mov
fcomps
mov
mov
pop
in
mov
and
in
es
jo
aad
adc
leave
lret
lret
shrl
jmp
hlt
ja
adc
popa
xchg
in
fsubrp
jbe
jno
push
nop
cmpsl
sub
mov
sbb
fcmovnu
pop
outsb
icebp
out
xlat
orb
pop
fcmovnb
movsb
mov
fldl
add
dec
adc
mov
adc
add
push
adc
test
mov
shrb
ror
lcall
ss
xchg
xchg
mul
stos
inc
xor
mov
lahf
out
popa
dec
cmp
mov
inc
mov
mov
push
hlt
aas
mov
push
fstpl
out
mov
shrl
push
iret
xchg
adc
xchg
sub
xor
mov
jmp
stos
pop
push
ret
fistpl
jae
push
add
mov
ja
add
sbb
cmpsb
int3
mov
lret
sub
xor
jns
mov
outsl
mov
enter
pop
shll
jae
sub
scas
iret
push
push
pop
out
or
mov
xchg
ljmp
stos
add
and
enter
sbb
loop
mov
stos
out
in
scas
sub
cmc
int3
imul
adc
int
mov
flds
sub
xchg
dec
fistpl
fwait
pop
sbb
mov
aaa
ss
mov
xchg
cs
dec
hlt
jp
data16
pop
mov
cwtl
fisubrs
das
outsl
aas
mov
fsts
jge
lea
push
lahf
mov
pop
mov
loop
jae
imul
loope
push
adc
pop
leave
pushf
xorl
sub
mov
aas
pop
and
cmpsb
pop
pop
fsub
aam
sbb
sbb
daa
push
xchg
mov
lret
addl
insl
jbe
mov
out
das
das
aaa
xchg
pop
repz
push
repz
das
lret
fidivs
xchg
ljmp
jno
movsl
dec
pop
cmp
pop
bound
lahf
in
pusha
out
pop
lret
stos
ljmp
push
push
int3
mov
lcall
jns
jns
add
shrl
aad
sbb
sub
jns
xchg
outsl
mov
test
dec
sub
cld
jecxz
cmp
dec
push
repnz
inc
or
ds
adc
push
repnz
cmp
les
sub
add
lahf
mov
out
test
popa
or
je
dec
mov
rcrl
mov
push
jle
dec
outsb
clc
sub
mov
inc
mov
mov
into
aaa
xchg
xchg
xchg
and
cmp
cld
sbbl
jbe
dec
cmp
mov
iret
lds
loope
mov
xchg
test
sbb
ss
jns
mov
mov
popf
fnstcw
add
inc
jecxz
jg
mov
je
and
ja
ffree
xlat
insl
outsb
cs
fcoms
fmull
push
insl
ja
jo
inc
push
stos
or
lret
or
arpl
cltd
mov
mov
out
test
or
inc
mov
bound
mov
lahf
das
out
jnp
cld
sbb
rol
in
ret
cmp
jo
aam
insb
and
aam
fsubrs
cwtl
in
in
into
scas
ljmp
xor
sahf
repnz
out
rclb
cmp
mov
cmpsl
or
cmp
lea
adc
pushf
push
mov
jne
xchg
stc
dec
xchg
insl
xlat
test
mov
mov
xchg
outsl
ja
fs
sbbb
mov
and
xchg
mov
outsb
fidivl
xor
adcb
sub
pop
xchg
aaa
lcall
xchg
aaa
jle
sbb
xchg
lret
popa
xor
mov
or
or
das
das
das
jno
ljmp
pop
fstp
gs
xor
loopne
dec
push
sar
pop
mov
mov
mov
dec
shlb
imul
int3
mov
mov
les
jge
in
fsubs
mov
into
mov
sbb
add
es
sub
test
adc
push
xor
pop
sbb
mov
push
fcomps
mov
ret
in
loopne
lcall
ja
pop
and
jae
fst
das
mov
ss
shrl
xchg
xchg
mov
dec
lock
cmp
mov
test
fwait
xchg
outsb
add
push
and
pop
fucomi
lds
lds
imul
in
sbbb
popa
ds
outsb
jae
lods
push
test
adc
int
int
das
and
mov
loop
xchg
in
test
jo
ss
mov
insb
push
xchg
popa
insb
adc
and
fists
out
and
out
es
inc
lret
fstpt
stos
sub
xor
inc
dec
mov
adc
cmpsb
cld
lods
cmp
out
mov
test
sahf
outsb
pop
push
pop
or
xchg
xor
in
outsb
addl
dec
push
rorl
daa
scas
or
shll
pop
mov
inc
pop
fidivs
in
lods
jecxz
add
or
add
outsb
pop
popa
out
pop
and
stc
mov
fisttpl
jmp
int3
mov
or
and
inc
std
bound
xchg
mov
mov
mov
dec
loope
jb
push
lret
mov
mov
sub
shll
mov
push
push
xchg
adc
outsb
push
les
stc
js
lock
call
jecxz
xor
adc
cmpsb
test
adc
jl
mov
push
insl
fdivrs
sub
dec
cmp
fnstsw
mov
test
cltd
fwait
push
jno
lret
pop
sbb
jbe
test
stos
lea
arpl
cmp
cmp
mov
ret
pushf
jne
push
insl
pop
pop
pop
stos
push
ja
xchg
out
icebp
push
int3
ds
mov
sub
push
scas
scas
popf
jg
pop
lds
insl
adc
sub
lahf
fmuls
or
out
movsl
loop
jmp
dec
jns
mov
repz
test
stos
or
fidivrl
repnz
fldl
xchg
mov
push
rep
das
js
cmp
fistpl
pop
lock
fstl
add
xor
lds
mov
add
bound
sbb
add
pushf
roll
ljmp
adc
fwait
lret
pop
xor
mov
je
xchg
pop
sbb
sbb
fisttpll
ss
jge
mov
out
ss
jae
and
adc
sbb
fdivl
jne
fnstenv
ja
push
mov
subb
cld
fwait
lret
lret
or
dec
cmp
enter
ficompl
jbe
lret
ja
sub
ret
aaa
sbb
insb
pop
pop
adcl
sbb
jns
mov
mov
cmp
mov
fiaddl
and
repz
stos
push
int
mov
mov
push
ret
in
in
xor
mov
mov
mov
pop
int
mov
push
xlat
or
das
dec
fcomps
and
sti
lea
imul
enter
ss
inc
movsl
push
xchg
and
mov
stc
loope
loopne
or
dec
jo
mov
jns
mov
and
dec
mov
xor
repz
daa
inc
pop
jmp
push
imul
mov
iret
test
fnstcw
int3
jb
repnz
nop
dec
loopne
push
repz
inc
cltd
dec
stc
ret
xor
dec
test
repz
fwait
lret
lret
lret
sbb
adc
jae
add
mov
sar
sbb
aam
push
or
outsb
cs
mov
push
mov
xlat
insl
xchg
jb
mov
popf
adc
scas
in
in
jge
pop
pop
sbb
adc
pop
cmp
mov
jns
sbb
jnp
outsl
fwait
xchg
std
loop
out
sti
mov
or
fisubrs
call
inc
push
test
xor
ja
dec
xchg
hlt
mov
mov
push
out
shlb
mov
aaa
push
dec
mov
add
mov
xor
shl
imul
scas
cmp
repnz
bound
push
loope
dec
jle
out
repnz
mov
and
imul
rcr
jp
or
jbe
fs
push
ja
popf
lret
mov
mov
dec
ss
das
outsl
ret
mov
push
fdivs
insl
xor
xor
fstpt
cmp
sbb
sub
in
ss
jns
inc
push
add
xchg
cli
jns
jg
lods
sub
pop
repz
scas
mov
shlb
arpl
jae
mov
add
jge
jns
outsb
outsb
or
or
popa
cmp
in
mov
mov
movsb
adc
fcmovnu
out
mov
inc
lahf
xchg
mov
outsl
rcrb
cmp
cmc
das
das
das
das
mov
jbe
push
dec
scas
jns
and
clc
sub
aad
or
mov
xchg
lcall
hlt
mov
sarb
cmpsl
lcall
mov
sbb
fcomi
lahf
jmp
sub
cmp
dec
cmp
mov
dec
adc
push
jle
fdivrs
nop
xor
out
ss
mov
pop
outsb
adc
xchg
push
jp
push
inc
add
pop
lds
pop
or
in
sbb
adc
loope
push
lahf
fidivrl
xchg
pop
and
flds
les
das
outsl
mov
jg
mov
sarb
das
das
das
lods
sub
pop
sbb
sub
mov
lret
outsb
cs
ds
cmp
pop
in
adc
and
dec
and
or
lret
fistpl
xchg
cltd
loope
fidivrs
ss
push
dec
lea
pusha
or
mov
xchg
sub
mov
insl
mov
mov
sub
ja
int
fcmovne
sub
out
xor
inc
xchg
mov
pop
fsubrp
jbe
adc
lahf
idiv
xchg
ja
rcrb
fstpl
repz
in
cmpsb
inc
mov
imul
push
inc
xor
jns
mov
mov
jg
push
rcll
push
sbb
movsb
es
fwait
mov
jp
shl
ds
nop
stos
jns
jns
push
xchg
scas
lds
int3
push
fnstsw
lret
adc
xchg
ss
imul
jbe
cvtdq2ps
push
lock
jns
mov
sbb
pusha
jns
jns
aad
mov
sahf
js
sub
jns
aas
mov
int
mov
add
push
pusha
xor
push
push
hlt
cmp
in
int
in
and
xchg
int3
or
in
loopne
jns
pop
stc
aaa
jo
mov
mov
jns
jae
mov
movsl
pop
and
insl
push
mov
inc
movsb
ds
das
sub
mov
adc
dec
push
xor
mov
mov
imul
mov
outsl
sbb
sbbl
out
movsl
std
outsb
xchg
xlat
dec
ss
sub
xor
mov
bound
xchg
movsb
fstpl
insl
fisubrs
mov
cmp
jp
arpl
adc
in
mov
or
test
pop
jbe
aad
ds
cmp
cmp
mov
mov
push
inc
nop
mov
repz
jo
lret
sub
jns
xor
test
scas
jnp
jae
out
jge
stc
pop
ja
movsb
mov
fucomi
rcll
mov
bnd
in
lcall
dec
ds
movsb
inc
jg
repnz
xor
psubw
mov
jns
loope
dec
ficoml
icebp
mov
jae
cld
setno
mov
add
lret
lret
pop
xchg
inc
sbb
out
pop
testl
es
stc
xchg
add
scas
pop
xchg
jnp
push
mov
or
dec
xchg
mov
mov
mov
insb
push
mov
outsb
dec
push
mov
in
out
pxor
ljmp
fdivrs
mov
sti
outsl
hlt
mov
adcb
popf
mov
ret
inc
sub
jnp
inc
and
lods
xchg
mov
daa
mov
cld
xchg
jge
jno
sahf
out
mov
xchg
adc
stos
loopne
subl
jbe
in
lods
mov
fcomps
or
addr16
adc
repz
mov
das
mov
sbb
and
adc
and
mov
add
inc
fnsave
and
fsubrp
cmp
sub
cmp
jb
lahf
cmpsb
and
xchg
pop
in
and
push
mov
cmp
enter
in
xchg
jae
dec
cmc
fwait
mov
xor
pop
mov
mov
inc
sbb
xchg
adc
push
cmp
ljmp
and
mov
les
xchg
add
jbe
scas
imul
pop
lcall
pop
push
or
pop
fcoml
push
add
adc
inc
mov
xchg
js
mov
or
push
adc
aas
mov
dec
faddl
or
mov
ljmp
jge
clc
test
je
jb
jns
je
data16
mov
shr
mov
mov
mov
bound
xor
push
das
inc
push
push
repz
lds
sub
addr16
stos
dec
adc
inc
sub
in
pop
mov
loopne
stc
inc
addr16
push
ljmp
inc
jge
aaa
mov
mov
inc
in
lods
cmp
jno
loopne
add
std
inc
test
fisubrs
inc
and
inc
shr
jbe
test
sub
dec
xor
fistpl
adc
pop
idivb
xchg
mov
lret
ficoml
push
in
sbb
roll
xchg
xchg
add
add
lea
das
das
outsl
adc
mov
mov
adc
dec
cmp
outsb
cs
mov
movsb
cs
mov
jno
das
insb
pop
pop
test
pop
fstpt
rorb
or
enter
lea
cmp
imul
jb
bound
push
in
ljmp
jns
clc
fsubrs
inc
aaa
xor
push
xchg
mov
stos
sub
fwait
xchg
mov
repz
shll
lock
mov
mov
lahf
jns
imul
iret
sub
mov
in
repz
xor
push
mov
push
add
mov
in
in
sub
pop
push
inc
add
xor
fcmovne
in
push
in
sti
sbb
leave
orl
out
movsl
pop
in
cmp
popf
sub
fildl
dec
mov
lret
lret
or
pop
pop
push
lcall
cmp
jecxz
fwait
pop
ja
leave
sbb
pop
sti
or
fstpl
dec
ljmp
mov
filds
xchg
lock
dec
addr16
out
les
andl
inc
dec
fistpl
in
popa
hlt
xorb
dec
out
fs
xchg
xchg
mov
cmp
sub
test
fisubl
mov
outsb
outsb
fwait
xchg
dec
mov
push
cmpsl
push
xchg
fstpl
popa
cltd
stos
into
daa
js
mov
jae
pop
fadds
or
or
insl
mov
xchg
and
lods
push
shl
fiaddl
out
xchg
jl
mov
lret
lret
fcmovne
insl
divb
rorb
std
lods
mov
or
push
aaa
jnp
jle
push
sub
or
xchg
es
push
or
das
dec
dec
aaa
sub
test
xchg
pop
dec
andl
rcr
dec
cmp
mov
mov
or
imul
pop
pop
pop
pop
mov
insb
mov
frstor
pop
pop
jbe
arpl
pop
mov
in
push
movsb
mov
xor
sti
mov
daa
jne
ja
sbb
repz
inc
or
std
adc
sub
stos
jbe
mov
lret
jp
mov
jns
in
test
push
jge
out
dec
out
fidivs
mov
scas
mov
hlt
jmp
dec
jns
mov
dec
jo
sbb
mov
mov
iret
sbb
jbe,pt
adc
in
xor
in
mov
ret
fistl
repz
int3
sbb
in
lcall
add
enter
mov
cli
ret
inc
push
push
out
insb
ficoml
scas
sbb
pop
xchg
pop
mov
xor
nop
enter
shrb
xor
dec
cmp
aam
fcomps
push
pusha
ja
insl
cmpsl
es
lahf
lcall
dec
pop
pop
pop
pop
or
pop
js
outsb
xorb
je
int
aad
pop
in
hlt
scas
or
add
ret
repnz
mov
mov
test
pop
xor
stos
stos
shll
xor
inc
lods
mov
and
pop
jbe
jp
lret
shll
fisttpl
daa
scas
sti
pop
xchg
repz
mov
push
popa
jecxz
pop
fiadds
ror
lods
mov
jns
push
test
test
loopne
add
mov
inc
out
mov
dec
scas
lahf
xchg
enter
fwait
js
xchg
lods
sub
ss
jle
int
out
inc
push
xor
pop
mov
outsl
fwait
xchg
mov
ja
movb
movsb
pop
repnz
xor
das
das
mov
mov
mov
mov
call
repnz
inc
fcoml
lret
pop
cld
pop
fistl
dec
pop
pop
loopne
leave
rcl
jecxz
adc
popa
outsl
sti
repnz
and
sar
sahf
and
arpl
pop
fsubp
out
je
inc
loopne
popa
test
push
ret
pop
pop
pop
pop
lret
andb
lcall
adc
inc
scas
mov
pop
push
nop
pushf
in
xchg
xchg
xchg
xchg
shlb
call
mov
lcall
mov
out
fsubrl
inc
lds
ss
test
push
fidivs
cmp
call
mov
cmp
jge
cmpsl
int
in
repnz
or
mov
rcrl
mov
lods
mov
scas
sbb
dec
fistpll
insl
mov
inc
int
subb
test
cld
outsb
cs
outsl
pop
fcmovnu
xchg
adc
fnstenv
test
adc
pop
xor
leave
cwtl
and
stos
mov
pop
jle
lods
inc
pop
xor
outsl
insl
or
push
adc
or
mov
push
fdivs
scas
out
push
imul
xor
aaa
pop
or
int
adc
adc
aas
xlat
sub
dec
sbb
lret
or
cmpxchg
xchg
mov
mov
push
movsb
push
pop
inc
cmp
outsb
outsl
fwait
xor
aas
nop
outsb
test
lret
dec
push
mov
xchg
jb
mov
gs
mov
imull
scas
adc
xor
repnz
sub
es
mov
pusha
in
mov
repz
cld
xchg
in
dec
adc
out
push
out
int3
bound
cmp
add
ja
outsl
dec
push
popa
sti
sbb
test
insl
test
pop
cs
outsl
aas
fmull
movsb
mov
out
sub
xorl
ljmp
ss
das
outsl
insl
imulb
movsb
pushf
sbb
data16
push
mov
adc
adcb
mov
mov
xchg
push
test
mov
mov
dec
leave
mov
dec
int
add
jne
outsl
ja
je
push
movb
inc
leave
mov
inc
pop
fisubrs
push
mov
sub
inc
or
pop
shrl
push
je
lret
fcmovne
lcall
sbb
cmp
mov
int
sbb
imul
scas
xchg
outsl
leave
repz
adc
enter
mov
aas
pop
loope
andb
sbb
fisttpl
dec
loop
mov
outsl
ja
lds
movsl
adc
mov
dec
mov
mov
insb
arpl
and
sbb
into
ja
pop
repz
push
pusha
push
fisubl
sbb
insl
loop
inc
ljmp
or
es
movsl
fsubp
or
sbb
inc
adc
xor
roll
or
mov
aaa
out
fcoms
fistl
inc
pop
test
cltd
sbb
mov
inc
cmpsl
jecxz
test
mov
sub
cld
fstl
cmp
dec
jnp,pn
mov
and
jo
mov
repnz
scas
adc
push
jbe
mov
fstpt
ss
cli
add
mov
jb
pop
push
adc
int
add
sbb
pop
pop
outsb
test
cli
ss
int3
inc
push
fldcw
add
out
cmpsb
pop
sub
aam
cld
mov
insl
inc
jne
pop
sub
dec
or
out
jo
mov
push
pop
pop
int
and
int
add
mov
lret
pop
inc
rcrb
push
sub
js
sbb
push
int
lods
lahf
rcll
xchg
pop
mov
dec
imul
data16
ficoml
pop
adc
sub
nop
push
dec
mov
popf
aas
xchg
fs
mov
jmp
out
jecxz
lahf
mov
xchg
aam
cs
lret
mov
add
imul
imul
movsl
inc
dec
mov
mov
cmp
lods
imul
and
push
jbe
cs
jge
outsl
mov
jge
mov
or
push
nop
in
scas
jns
sub
cld
je
clc
xor
mov
lods
fucom
in
push
inc
push
dec
xlat
xor
sub
out
adc
pop
pop
cmp
push
sbb
push
lret
test
mov
mov
adc
lock
insl
fisubrs
jmp
inc
jg
pop
and
lret
bnd
jns
and
fcos
int
mov
out
xor
insb
xor
subb
call
shll
jg
rcrl
push
ret
inc
push
pop
daa
mov
cmpsb
fnstenv
add
push
in
and
mov
ss
jnp
imul
fstpt
movsb
in
bt
and
xchg
mov
fdivrs
mov
outsl
fwait
xchg
xchg
cmp
add
out
jecxz
das
das
das
pushf
jmp
out
mov
push
insl
inc
out
mov
divl
imul
popl
push
cmp
out
inc
xchg
xchg
in
fs
lret
lret
dec
lods
pop
pop
mov
pop
pop
fdivs
mov
pop
sbb
cmpsb
push
fdivl
or
fwait
mov
fnstsw
or
ja
insl
stos
test
add
outsb
cs
sbb
add
movsb
pushf
aaa
mov
in
inc
or
mov
cs
add
movsl
ljmp
push
xchg
add
cwtl
hlt
loopne
int
fstpt
lcall
popf
add
cmp
cs
fsubr
jbe
lret
xchg
jbe
and
arpl
jmp
mov
pop
icebp
aam
dec
popf
fisubs
xchg
and
xor
fbstp
pop
dec
cmpsl
out
test
mov
push
or
popf
inc
jbe
movsl
sbb
scas
dec
cmp
jo
mov
xchg
mov
sbb
push
push
cmp
jb
xor
mov
xor
test
fidivs
outsl
fwait
repz
loopne
or
cmc
pop
outsb
mov
insl
mov
arpl
push
push
sarl
loope
sbb
fsts
mov
je
jns
push
adc
stos
fidivs
sub
jle
test
in
or
and
sbb
inc
popf
dec
mov
adc
or
jle
clc
mov
pop
loope
push
mov
pop
scas
xor
fdivl
inc
addr16
int
repz
mov
lahf
addr16
xchg
jno
movswl
lcall
pop
and
sbb
fsubrp
sub
lret
push
ljmp
in
pop
pop
pop
lock
cltd
adc
icebp
pop
shrb
xchg
or
cmp
push
jle
mov
iret
sti
js
mov
jmp
or
pop
jae
jns
mov
jecxz
in
dec
int
mov
push
push
aam
lcall
shll
mov
mov
inc
mov
out
out
mov
xor
dec
dec
sbb
fidivrs
rol
int3
arpl
mov
mov
push
rorl
scas
inc
int
lods
push
jmp
pop
pop
scas
pop
fs
mov
sub
dec
adcl
sbb
arpl
mov
pop
inc
imul
and
jmp
aaa
lret
lcall
pop
jge
outsb
cs
das
in
stc
xorl
adc
mov
test
sub
out
outsb
inc
rcr
sub
ret
lods
inc
jge
loopne
mov
pop
xchg
xchg
mov
in
jns
stc
es
sbb
push
fstps
aam
xchg
cmp
punpckhwd
aad
inc
xor
inc
xchg
das
das
xor
xchg
or
setp
int3
lock
insb
cs
jmp
jg
add
jne
push
jecxz
sbb
repz
xchg
or
add
xchg
xchg
movsl
sub
inc
bound
lret
dec
pop
mov
xchg
shlb
fdivl
xchg
jae
orl
das
xchg
xchg
mov
dec
loope
in
in
add
cmc
les
or
ja
int
add
in
pop
shrl
xchg
push
mov
mov
into
fucomp
mov
lahf
popa
out
xor
dec
push
mov
xchg
adc
stos
addr16
xchg
push
jg
ljmp
repnz
ds
pop
fidivrl
out
fcoml
pop
jb
dec
aaa
mov
lret
sbb
lock
mov
mov
jo
je
lret
sbbb
clc
shl
pop
mov
or
and
les
add
push
push
add
mov
popf
or
out
aas
mov
int
lret
fdivrp
cmp
lret
pop
sbb
imul
xchg
aas
sarb
sbb
dec
inc
xor
mov
mov
adcl
cmp
mov
inc
push
ljmp
add
mov
outsl
orl
mov
xchg
int3
dec
movq
xchg
mov
sbb
mov
shll
sbbb
adc
ror
sbb
jbe
mov
push
and
xchg
xchg
scas
sub
repnz
loop
jbe
add
fcoml
fildll
imul
mov
ss
scas
mov
in
das
das
outsl
dec
or
insl
add
movsl
mov
cs
incl
pop
jns
xchg
arpl
and
mov
into
sbb
or
jne
mov
loope
loopne
mov
xchg
xor
hlt
mov
pushf
cmpsl
mov
xchg
mov
sbb
imul
pop
or
mov
mov
lret
lret
test
dec
rclb
lods
mov
aam
xchg
xchg
xchg
push
jae
or
cltd
ljmp
outsb
int3
rolb
dec
xchg
out
in
add
mov
jns
sti
xchg
data16
mov
out
pop
rol
dec
xchg
sbb
into
in
lock
adc
jl
sub
sbb
sbbl
clc
sbb
push
aam
outsb
sbb
hlt
cmp
pop
sbb
sti
or
sbb
pusha
inc
sahf
and
test
aad
outsb
xchg
stos
test
scas
lods
sbb
add
pop
pop
xor
insb
pop
rcr
pop
negl
xorb
sub
lahf
aam
lret
lret
lret
dec
pop
cmp
pop
push
enter
ss
or
xor
cmp
mov
cmp
shrl
cwtl
inc
xchg
inc
or
dec
jo
sub
lcall
out
mov
decb
mov
add
push
fsubs
ljmp
pop
ret
lea
stos
arpl
push
ret
sub
ror
fsub
add
mov
adc
repnz
inc
imul
lret
add
mov
xor
adc
pop
jne
adc
scas
mov
outsb
inc
sbb
lahf
int3
loope
outsb
sarl
mov
pmulhw
mov
push
mov
aad
mov
lcall
and
and
jns
jecxz
out
subb
cwtl
mov
sub
insl
xor
push
jae
sub
or
fidivs
fwait
sub
ss
mov
mov
fs
fdivrl
jg
mov
cmpsb
movb
mov
test
fstpt
pop
inc
push
je
out
pop
mov
mov
ret
or
push
mov
neg
push
jnp
xor
or
insl
ja
mov
dec
or
js
mov
fldt
sub
loopne
sbb
arpl
popfw
ss
mov
aaa
in
mov
in
shl
orl
mov
bound
pop
mov
ljmp
roll
insb
cmc
arpl
ja
stos
add
mov
repz
ja
mov
test
xchg
pop
jno
inc
xlat
inc
aas
lret
pop
fcoml
xchg
aaa
movsb
je
jae
push
mov
das
outsl
ljmp
inc
xor
xchg
inc
dec
rcrb
sbb
sbb
hlt
not
pop
jbe
xchg
jns
jns
jp
ds
lcall
jno
movsb
incl
ja
repz
or
push
movsb
xchg
sub
mov
out
jbe
mov
dec
push
in
xor
and
fscale
in
adc
push
cmp
push
and
xchg
mov
lcall
or
ja
add
das
in
dec
ds
and
lods
or
or
mov
mov
ljmp
inc
outsl
jecxz
sbbl
or
mov
out
xor
fidivs
das
sub
leave
bound
mov
fwait
mov
loop
pop
pop
push
pop
jbe
adc
pop
sbb
scas
jbe
xchg
xchg
cli
lods
test
dec
xor
push
ja
popf
sub
insb
das
das
outsl
stc
adc
and
cmpsl
inc
xchg
fcomip
pop
mov
das
call
fiadds
xor
andb
fcmovu
shll
xor
out
adc
adc
jne
rorl
add
xlat
call
sahf
nop
and
add
lret
fisttpl
adc
test
jbe
fildl
mov
cmp
jns
imul
repz
imul
insl
add
adc
pop
adc
in
push
mov
in
daa
adc
jo
ret
xchg
mov
pop
popa
mov
mov
mov
and
fidivs
or
sti
das
pop
das
ffreep
and
imul
out
fistl
test
mov
sbb
adc
iret
mov
jmp
mov
arpl
pusha
mov
in
outsb
cmp
ja
lods
pop
push
cli
cmpl
mov
divl
pop
sarl
std
out
sub
xchg
out
jae
hlt
pushf
pop
xchg
xchg
jo
repz
mov
push
inc
cmp
inc
int
pop
inc
cwtl
mul
sbb
ficomps
mov
add
cmp
add
mov
out
scas
rol
inc
pop
arpl
inc
push
jae
int
out
xchg
ret
push
enter
jbe
inc
int3
push
push
push
ss
cmp
push
and
insl
pop
pop
pop
lock
setp
mov
std
push
pop
mov
mov
in
sub
mov
jns
or
xchg
jne
add
xor
mov
jb
push
pop
xor
ret
push
adc
in
or
out
lods
mov
adc
push
loopne
xchg
repnz
jg
or
fdiv
xor
inc
orl
pop
fidivrs
add
dec
dec
pop
mov
imul
mov
mov
add
add
fcmovnu
out
insl
dec
insb
inc
in
pusha
lahf
and
mov
push
or
push
mov
or
stc
and
inc
fucompp
xchg
mov
mov
push
mov
gs
push
ss
inc
mov
jmp
mov
jp
pop
dec
jae
scas
cltd
xor
ss
popa
cmp
ret
sbb
fstpl
push
into
clc
xchg
cmp
sbb
repnz
stc
insb
or
clc
pop
xor
add
int
repz
mov
mov
sub
inc
jne
fwait
stc
pusha
sarl
mov
lods
dec
mov
xchg
mov
aaa
xor
aaa
fcmovne
int3
cwtl
push
cli
cmp
lahf
pop
jg
jg
das
xor
lock
and
xor
cli
mov
mov
repnz
xor
repz
out
lret
lret
fcmovne
sub
mov
and
test
mov
adcl
mov
imul
add
outsl
aaa
push
insb
repnz
fisubrs
fcompl
jl
dec
mov
jae
lahf
lret
lret
test
stc
fnstcw
dec
mov
ss
lods
dec
push
in
mov
cmp
sub
aad
ljmp
jl
jbe
jns
mov
loopne
xor
push
and
pop
fmul
fldt
lret
xchg
loop
cs
sbb
push
xor
int
dec
mov
lds
ficoml
repz
and
xchg
xlat
mov
jecxz
cmp
jns
pmulhw
in
push
lods
fadds
add
ja
lret
fistpl
push
loope
or
outsl
repnz
lret
je
cld
mov
ss
jnp
rorl
repnz
pop
pop
fsubp
cmc
sbb
shlb
das
mov
gs
call
push
loope
adc
cmpsb
push
ljmp
lods
cmp
jno
lcall
stos
mov
bnd
ja
into
addr16
decb
sbb
adc
negb
fs
sub
pop
xchg
adc
std
mov
in
ficoms
jmp
mov
inc
xchg
adc
pop
loop
bnd
stc
jmp
mov
loopne
jmp
fcompl
repz
inc
aas
add
dec
sbb
fsubr
and
jnp
cmp
lret
or
lock
jnp
addl
test
inc
lea
cmpsl
in
jo
mov
rolb
mov
jbe
jne
mov
fildl
insl
call
dec
jns
mov
jae
aaa
sbb
dec
mov
repnz
shrb
loopne
mov
loop
cwtl
xchg
xor
adc
fistpl
fdivrs
test
loope
cs
mov
mov
mov
dec
add
jp
xlat
mov
cld
push
mov
lods
and
outsb
push
shrl
mov
jbe
cmp
lcall
push
aad
add
inc
loope
add
cmpsb
inc
mov
mov
mov
mov
pop
lea
mov
mov
rcrl
mov
adcl
push
mov
adc
and
jp
inc
stos
sbb
push
push
jb
jns
jp
inc
sub
ljmp
mov
xchg
cmp
repnz
ret
ja
scas
xchg
adcb
outsb
adc
mov
and
je
jbe
mov
outsl
ja
adc
xor
aaa
or
int
test
push
roll
mov
pop
ficoms
popa
in
cld
ja
pop
sub
stc
sub
mov
fdivl
sub
add
sbb
lcall
roll
das
in
movsb
inc
cli
es
jae
fs
add
idivb
inc
add
scas
mov
mov
cmpsl
call
or
sbb
fcmovbe
lods
sub
in
je
stos
insl
insl
cs
outsl
inc
inc
cmp
pop
pop
push
and
cmp
cmp
adc
inc
and
sarb
jge
ja
pop
ret
jns
jns
lret
mov
lds
mov
es
jns
and
pop
jne
iret
mov
ret
jb
dec
mov
insb
ljmp
es
sub
mov
scas
sbb
push
dec
add
loope
inc
mov
mov
add
mov
mov
pop
xor
movsb
pusha
pop
hlt
jg
mov
jp
cmp
das
outsl
mov
out
pusha
jmp
insb
and
or
ja
fisttpl
shrl
lret
lret
call
fwait
pop
mov
testl
sbb
mov
loopne
fstp
jl
sub
or
out
sbb
in
outsb
adc
bound
out
in
dec
mov
mov
sahf
adc
inc
mov
mov
cmp
fldcw
mov
dec
jg
js
jo
sbbl
insl
insl
stc
lods
xor
imul
rclb
mov
jno
lcall
nop
loopne
lahf
jo
add
pop
ret
in
mov
cmp
lcall
jbe
pop
or
outsl
icebp
and
clc
and
xchg
cmp
mov
xchg
movsb
mov
push
cld
jg
push
dec
sub
sub
enter
in
and
ss
sbb
stc
imul
xchg
outsl
mov
inc
jb
sub
jno
push
mov
int3
pop
pop
pop
mov
mov
pop
and
dec
fsubrs
pop
inc
or
out
pop
mov
loope
ror
mov
add
xchg
or
lret
fldt
movsl
std
mov
loop
jp
inc
in
movsl
int
ficoml
sub
mov
cmpsl
cwtl
or
xor
adc
mov
inc
addl
loopne
fsts
mov
arpl
lret
inc
dec
cmp
inc
add
js
outsl
sbb
sbb
adc
mov
fsubl
imul
jns
jmp
adc
aas
push
hlt
aad
outsb
aaa
push
stos
adc
adc
int
jns
pop
and
inc
jbe
jb
sub
cmpsb
inc
stc
int3
adc
repnz
mov
mov
hlt
mov
je
mov
jmp
pop
or
outsb
outsb
mov
dec
aad
sub
int
mov
fcmovne
or
or
or
jne
insl
scas
dec
test
fwait
mov
movb
cmp
xchg
jns
imul
das
das
out
sub
inc
xor
je
sti
outsb
mov
lea
jle
inc
repnz
add
push
divb
mov
ror
movsb
sbb
xchg
int
stos
mov
pop
scas
outsb
fnsave
std
stc
mov
aam
push
xor
inc
int
in
jecxz,pn
ret
icebp
cwtl
add
repnz
test
pop
jmp
mov
xchg
add
mov
out
or
or
aas
xchg
mov
cmp
mov
jns
inc
fldenv
aaa
xchg
int3
add
sbbl
or
ljmp
jle
call
pop
jne
mov
jae
ljmp
lret
in
mov
cmp
adc
out
sub
test
stc
and
imul
lret
sub
jns
jns
lcall
and
adc
stos
inc
mov
lock
xchg
sub
inc
and
mov
pop
popf
cli
or
add
jmp
and
jns
sbb
test
adc
aad
inc
int
mull
add
outsb
fwait
mov
dec
mov
arpl
xchg
shr
dec
sbb
ja
dec
pop
xlat
or
mov
push
push
push
out
repnz
inc
bnd
clc
cs
pop
popa
jo
lahf
fcmovne
push
mov
mull
or
outsb
or
push
xorb
push
push
fnstenv
pop
pop
pop
pop
clc
pop
sub
sub
loopne
rcll
pop
pop
jg
or
andb
add
pop
mov
arpl
pop
mov
sub
pop
lcall
and
sbb
dec
adc
aaa
iret
sub
dec
push
orl
mov
mov
insl
pop
aam
rcll
cld
mov
and
arpl
nop
push
aam
add
fistl
aaa
ja
cmp
adc
add
ja
repnz
cwtl
xchg
mov
aaa
js
push
aad
in
out
cmp
in
repz
insl
ffreep
lret
ror
in
inc
rorb
push
pop
jp
mov
push
and
jnp
ja
andl
jne
testl
aam
das
outsl
jl
mov
pushf
not
or
shrl
out
sbb
test
vmwrite
adc
pop
out
xchg
inc
mov
jns
jns
stos
inc
jne
fwait
es
jmp
and
mov
inc
cld
cltd
orb
inc
mov
lods
push
jo
xchg
es
pop
stos
sbb
in
scas
jns
lods
inc
cmp
dec
cmc
arpl
fcmovne
in
xor
outsb
loope
push
inc
nop
into
test
aaa
xchg
mov
sbb
add
cmpsl
mov
mov
jbe
push
test
dec
pop
ss
fstp
jle
hlt
aaa
add
fisttpll
and
in
xchg
push
divb
xor
in
and
jp
cmp
fcmovb
and
mov
imul
jae
mov
in
lahf
fcomi
mov
add
and
jns
test
in
call
fdivl
mov
and
mov
pop
push
add
in
sar
int
add
xor
add
push
add
sub
int3
dec
pusha
data16
cmp
outsl
aaa
xchg
mov
les
sbb
lret
mov
and
out
mov
inc
roll
jle
insl
fsubp
iret
adc
test
dec
pushf
adc
adc
mov
out
pop
daa
subl
mov
mov
mov
xchg
sbbl
scas
clc
int
pop
mov
out
inc
and
and
xor
pop
mov
sbb
js
pop
stos
mov
lods
sbb
sti
out
jbe
xchg
xchg
mov
lock
jns
xor
mov
push
ds
test
repz
inc
sbb
lahf
lret
fcos
add
mov
mov
movsb
mov
in
jmp
shl
cmpsl
int
jecxz
outsl
xchg
pop
scas
int
in
test
addb
and
jne
and
ljmp
fldl
mov
cmp
add
cld
cld
shlb
mov
jg
dec
insb
lahf
jnp
mov
fisubs
lods
int3
outsb
sbb
sub
pop
mov
add
and
inc
sub
pop
pop
pop
pop
pop
add
mov
dec
dec
or
outsb
in
outsb
cs
jns
outsb
std
inc
test
xchg
cmp
outsb
leave
jp
or
mov
dec
lods
mov
repnz
rol
dec
xchg
lret
pusha
popf
cs
insl
repz
xor
xor
hlt
pop
lods
rcl
fwait
lret
lret
lret
cmp
std
add
add
sbb
ret
ret
lahf
lds
mov
les
jne
jmp
mov
jbe
jl
out
shll
scas
and
scas
push
lret
sbb
adc
jg,pn
addr16
lret
lret
popa
sub
cli
scas
push
loopne
ja
bound
sub
pop
stc
jecxz
dec
mov
mov
out
outsb
sub
out
xor
incb
mov
in
xlat
push
pop
iret
ret
sub
sarb
fidivrl
inc
test
mov
push
mov
pop
sub
push
pop
fadd
pop
pop
pop
pop
pushf
cmp
int3
stc
mov
cmp
stos
pop
shll
inc
mov
aas
adc
or
outsl
call
addr16
mov
ja
icebp
imul
imul
mov
sub
push
inc
jae
sti
pop
test
in
push
hlt
pop
push
inc
jnp
fistpl
jbe
test
mov
lret
mov
mov
imul
lods
mov
adc
out
and
pop
movsl
ja
das
outsl
ja
xor
xlat
lds
adc
in
outsb
cs
shl
test
mov
mov
jl
enter
imul
out
repnz
mov
dec
cmp
aaa
pop
pop
jo
addr16
lods
mov
insl
xchg
mov
cld
jmp
push
xor
aad
call
rclb
nop
daa
or
mov
inc
fs
mov
jns
shrl
sbb
mov
lods
inc
jo
inc
cmc
lea
and
insl
subb
aas
test
jmp
lock
add
jo
mov
xchg
xchg
mov
cs
and
inc
xor
push
call
add
ljmp
or
into
pop
fwait
mov
mov
sub
popf
testl
push
insl
repz
push
cmpsb
sbb
cmp
out
in
daa
mov
gs
mov
jo
adc
sbb
in
sbb
jp
outsl
out
jl
mov
mov
add
bound
aam
popf
adcb
lahf
jg
sub
flds
sahf
add
pop
push
ficomps
xor
xchg
mov
cmp
xchg
sub
shlb
fstpt
lods
pop
xchg
scas
xor
mov
mov
iret
mov
outsl
sub
mov
int
push
ret
in
jae
testl
clc
mov
bound
mov
out
push
in
mov
int3
lcall
jno
mov
sbb
add
add
test
aaa
xchg
xchg
mov
lcall
in
jnp
fstp
ss
outsl
mov
adc
ja
jne
in
mov
pop
lds
iret
lret
lret
pop
mov
jns
cmc
sbb
mov
or
arpl
bnd
mov
lret
rcll
pop
xor
out
out
mov
mov
mov
hlt
xor
fcoml
in
int3
pop
sbb
push
mov
stc
ret
fisubl
push
push
dec
push
scas
xor
rcr
fstl
mov
inc
lds
stc
add
mov
or
fcompl
adc
je
cmp
insb
ret
in
fcmovnu
out
jg
fnstenv
add
adc
out
mov
lahf
ret
dec
or
jns
mov
mov
dec
lock
xchg
xor
mov
cmpb
scas
lret
loope
rol
push
out
in
inc
aad
arpl
mov
ss
dec
xchg
mov
orb
mov
jnp
add
pop
ss
in
sbb
xlat
jo
mov
arpl
mov
ror
mov
xchg
push
lret
mov
mov
jnp
testl
lret
sub
xchg
mov
outsb
mov
mov
push
leave
mov
mov
fildll
or
outsb
xlat
adc
rcr
loope
movsb
js
adc
xor
leave
cs
inc
fwait
xchg
xchg
xchg
pop
pop
rcl
arpl
sub
je
mov
repnz
jp
in
loope
jns
inc
repz
jge
mov
cwtl
xchg
push
jle
repnz
mov
movl
test
or
test
dec
repnz
lret
pop
cmp
push
mov
comiss
repnz
lcall
pop
sbb
not
outsb
repz
and
push
ret
pop
fsubrp
dec
out
adc
add
in
mov
fcomps
subb
push
pop
mov
nop
add
mov
adc
lret
lret
lret
test
dec
fmuls
mov
mov
sbbb
dec
xor
xchg
xor
test
dec
and
fildl
xchg
mov
dec
loop
in
insl
mov
jne
imul
xchg
push
in
mov
int
fwait
pop
jg
popf
and
lret
insl
mov
jns
fldt
push
hlt
roll
jnp
sbb
aas
xor
jns
inc
sub
call
adc
mov
mov
push
push
ret
arpl
lret
lret
jecxz
in
fistpll
pop
cmp
sarl
mov
add
cltd
push
inc
lods
aad
ficomps
mov
and
aad
enter
sub
lea
mov
pop
dec
or
mov
je
mov
inc
rcrb
sahf
push
or
out
sub
out
push
push
cmpsb
out
lret
sub
lods
jbe
in
mov
push
xlat
mov
fsubrl
cwtl
mov
sbb
mov
push
outsb
push
insl
cs
push
popf
or
lret
fistl
sbb
cld
test
mov
ss
lea
xor
in
scas
mov
push
inc
push
inc
vcvtpd2psy
xlat
mov
int
idivl
arpl
imul
sub
loopne
or
out
mov
inc
jbe
test
adcl
in
movsb
in
inc
aas
xchg
subl
loope
inc
ljmp
lret
fwait
mov
mov
iret
or
cmp
mov
repz
xor
repnz
lret
cli
notl
in
repz
ss
xchg
push
cltd
push
aas
movsb
arpl
xor
iret
cmp
les
mov
out
in
inc
stos
pop
xor
or
loopne
xchg
mov
fistl
out
cltd
in
xlat
inc
sbb
mov
dec
out
popa
mov
sbb
in
sub
jg
cmp
and
aam
xchg
or
fwait
lret
fistpl
inc
sbb
lea
xchg
mov
pop
or
cli
js
mov
fists
dec
jmp
jge
pop
pushf
out
in
push
ja
cltd
js
xchg
movsl
fnstenv
sti
inc
jg
scas
cs
scas
jmp
or
ror
in
inc
xchg
repz
daa
jecxz
pushf
arpl
dec
movsl
out
mov
cmc
cli
lcall
scas
mov
jl
mov
addr16
cli
shl
xor
dec
dec
outsb
lcall
fcomps
jge
jae
or
mov
jg
fistpl
and
fstl
jmp
cmp
int3
dec
inc
inc
int
mov
adc
lret
lret
lret
add
inc
bound
dec
xor
pusha
in
fwait
lods
mov
mov
bound
mov
xchg
movsl
pop
sbb
push
mov
dec
inc
out
mov
stos
cmp
sbb
test
std
insl
pop
fsubrp
outsl
jns
test
sub
mov
mov
fs
movsl
inc
xlat
and
cwtl
xchg
pop
repz
and
test
fnstenv
std
xlat
push
xor
mov
xchg
pop
shlb
into
pop
lods
arpl
xchg
mov
mov
nop
push
jl
icebp
mov
lods
rcrb
add
add
repz
int
sub
pop
movsb
in
aaa
aad
scas
sub
cs
enter
add
xchg
mov
das
jp
sub
jbe
lcall
outsl
fwait
xchg
inc
lods
and
push
call
fidivs
sbb
inc
int3
ljmp
mov
push
cmpsl
jb
insl
pop
pop
ficoms
push
dec
out
and
or
das
shrl
jge
bound
in
lods
sbb
jg
mov
subb
int
jne
fisttpl
sbb
sub
je
ret
push
loop
xchg
pop
lcall
or
or
nop
not
dec
ffree
fildl
bound
xor
stc
and
or
jbe
add
out
pop
cld
xchg
mov
stos
mov
and
add
sbb
pop
sub
sub
outsl
es
imul
jbe
inc
sti
push
mov
scas
adc
pop
mov
repnz
mov
out
outsl
mov
cmp
andl
movsb
pop
mov
cmc
ja
lods
scas
mov
lcall
lcall
imul
lcall
xchg
test
mov
sbb
dec
sub
jae
mov
test
out
push
dec
idiv
ljmp
pop
sahf
lahf
push
mov
out
repnz
daa
xchg
decb
jmp
push
repz
jp
pop
add
aad
dec
sub
lcall
daa
mov
fstpt
fld
inc
mov
shlb
jns
in
imul
ret
cmpsl
fistpl
mov
ret
lcall
outsl
fwait
xchg
jne
cmp
in
cltd
pop
or
add
aam
pop
scas
cmp
jns
jns
popf
fmuls
mov
jge
pop
pop
jae
jns
mov
push
pop
pop
jmp
pop
pop
fdivp
sub
sub
testl
outsl
mov
mov
push
popa
mov
mov
mov
push
xchg
inc
and
push
rcrb
and
cmp
in
pop
pop
fidivs
repz
scas
sbb
xor
mov
pop
jbe
adc
mov
out
jbe
pop
or
loopne
stos
cmp
mov
movsl
loopne
xchg
mov
pop
mov
js
pusha
pusha
jmp
sbbl
pop
jmp
mov
sub
ds
pop
pop
scas
lcall
xchg
mov
fstl
fs
fnop
icebp
mov
pop
aam
mov
inc
xor
lods
mov
cwtl
in
mov
pop
mov
sub
or
sub
movsl
pushf
test
clc
sub
cmp
fucomi
rorl
push
scas
fisubrs
fs
xorl
inc
pop
ja
test
and
jbe
das
outsl
aaa
push
add
in
mov
lret
xor
jmp
xor
pop
pop
fidivrs
jo
xchg
dec
adc
arpl
mov
fnsave
mov
inc
mov
or
out
add
in
outsb
mov
lret
fiaddl
fdivr
ss
cmpsl
int
in
mov
jl
clc
sti
inc
adc
inc
jne
je
mov
mov
pop
fidivrs
loopne
xchg
loopne,pn
stos
mov
sub
mov
out
push
fadd
jecxz
rorb
sbb
je
push
sarb
lcall
cwtl
ds
sub
inc
in
outsb
outsl
out
or
xor
into
sti
jae
mov
stos
pop
and
out
insb
hlt
add
sbb
popa
mov
roll
cli
mov
mov
fcoml
repz
mov
adc
cmpb
dec
xchg
xchg
in
in
outsb
neg
dec
sbb
jp
dec
sti
inc
arpl
pop
inc
int
mov
pusha
inc
aam
rcrl
test
sbb
dec
mov
imul
and
das
das
addr16
sbb
xor
test
sub
insl
pop
pop
fsubrp
aad
aas
cltd
aaa
xorl
mov
pop
scas
push
outsl
add
cmp
fdivrl
lods
inc
jmp
pusha
adcl
scas
das
sbb
into
mov
int
mov
mov
mov
arpl
out
mov
cmpl
dec
push
in
out
iret
jmp
push
mulb
mov
cld
ret
int3
jl
stos
sbb
outsl
movsl
ret
adc
mulb
in
outsl
insb
fidivrs
cmpl
mov
or
das
das
das
lods
ss
or
cmc
bnd
sub
or
push
sbb
adc
sbb
jbe
push
adc
push
mov
push
imul
cmp
dec
inc
and
sbbb
and
jp
xchg
outsl
aaa
mov
mov
push
mov
das
das
das
pop
jne
sub
mov
jecxz
cmp
mov
outsb
lock
dec
ss
or
mov
jl
jns
jns
shr
cmpsb
fcmovnbe
je
jle
loopne
shr
arpl
cmp
or
push
mov
lea
inc
jae
jmp
std
jnp
mov
ret
in
mov
mov
out
subl
das
xor
test
push
stos
pop
pop
fsubrp
rolb
sahf
mov
mov
xlat
mov
add
mov
iret
sti
jb
shl
call
xlat
or
push
mov
sahf
dec
repnz
outsl
fwait
icebp
stos
sbb
inc
dec
lahf
loope
or
xor
js
lcall
popa
mov
out
xor
pop
outsb
inc
test
mov
out
xchg
fsts
pop
aaa
movsl
fstpl
fisubl
int
or
mov
pusha
cmp
insl
fidivs
sub
mov
sbb
mov
shll
in
or
mov
dec
push
cwtl
outsb
cs
das
mov
sbb
call
sbb
mov
sarb
mov
lods
pop
push
lcall
jns
fstpt
dec
or
cmp
test
lahf
adc
stos
jbe
xchg
lods
inc
andb
and
sahf
or
sbb
pop
fidivs
push
arpl
ficoml
mov
add
pop
ljmp
xor
push
mov
jbe
outsb
add
ss
fisubrs
mov
scas
cmp
xor
ljmp
mov
outsl
movsl
lret
sbb
mov
mov
fistpl
pop
push
jne
lret
int
pop
adc
mov
dec
mov
out
xchg
stos
jnp
addl
mov
mov
call
lret
pop
mov
test
andl
sarb
xor
jle
cmp
cmp
fildl
xchg
adcb
sbb
push
mov
mov
push
lret
scas
xchg
popa
adc
xchg
movsb
mov
push
inc
repz
sbb
ljmp
sbb
call
jae
pusha
adc
push
pop
shll
dec
andl
je
lret
lret
js
insb
sbb
or
cvttps2pi
outsb
outsl
ja
xchg
test
xchg
and
cmp
mov
push
push
mov
xchg
dec
xlat
filds
jns
mov
add
or
jne
int
in
lcall
sbb
inc
in
and
jb
pusha
push
or
aaa
inc
fwait
xchg
pop
aas
jl
popa
xchg
stos
stos
in
mov
or
lahf
in
ljmp
jl
movsb
rcrl
inc
dec
add
jl
cmp
push
mov
lock
in
in
mov
stos
enter
stos
int
int
lret
mov
mov
xchg
xor
dec
stos
sti
and
int3
or
push
loop
mov
sub
push
jo
jns
nop
cmp
out
in
fldenv
jno
mov
dec
pop
xor
push
popf
test
mov
daa
lret
fistl
iret
jne
cmpsl
sbb
fwait
lret
lret
je
dec
push
mull
dec
cli
cld
jne
xor
in
jg
mov
ds
xlat
add
roll
es
xchg
push
sbb
jnp
lods
lahf
mov
loop
pop
xchg
cmc
adc
addl
out
insl
xchg
jb
push
mov
push
lea
call
adc
pushf
or
dec
push
loope
adc
int
in
xor
mov
sbb
out
hlt
gs
clc
daa
bound
cs
fldt
push
cmp
sbbl
fistl
mov
adc
shll
push
mov
scas
xlat
das
outsl
mov
repnz
out
push
push
xor
cs
das
aaa
jmp
cmp
cld
and
fldt
xor
or
xchg
cmp
test
and
cld
pop
or
aas
fcoms
xor
aaa
dec
jle
mov
movsb
int3
sbb
ds
jmp
mov
ss
and
add
jns
jmp
adc
mov
outsl
xchg
and
movsl
dec
or
mov
mov
pop
mov
out
out
popa
lock
out
pop
insb
add
push
sub
outsl
insl
test
daa
jnp
sbb
cmp
mov
mov
addr16
or
in
out
mov
out
mov
jg
mov
mov
mov
push
leave
pop
out
fcomps
push
xor
fs
in
jo
jno
jbe
insl
insb
in
xchg
sub
pop
pop
fisubrs
aam
xchg
add
mov
popa
clc
sub
mov
mov
lret
fcmovne
adc
mov
adc
fwait
xchg
aaa
sahf
aam
lds
push
mov
cld
movsb
fwait
out
fcmovnu
xor
dec
ss
fs
lods
pop
mov
leave
sub
cmp
dec
shr
xchg
sbb
fldcw
ja
sub
outsl
mov
js
push
test
in
addr16
outsl
jg
daa
insb
lcall
sub
fnsave
inc
pop
lcall
out
and
cmpsl
cmp
fwait
lret
addb
lds
jae
pop
stos
es
jge
outsl
aaa
mov
les
ret
pop
push
add
das
das
das
das
push
rcrl
lea
incl
push
ss
jl
dec
mov
scas
mov
and
mov
test
int
out
into
fldlg2
scas
or
xor
push
mov
je
std
das
outsl
fwait
mov
pop
outsl
sbb
and
jbe
pop
jno
xchg
das
das
das
das
fld
cli
sahf
pushf
dec
mov
jge
fidivs
das
testb
xlat
or
pushf
ds
jmp
fidivrl
pop
xchg
sub
fldt
jae
and
jb
sbb
int
lret
lret
cmp
mov
in
adc
xor
and
int
in
push
push
adc
xchg
sub
iret
fsubrl
sbb
xchg
loope
pop
jle
aaa
mov
test
jae
push
or
movsl
fs
movsb
ljmp
das
rorl
or
lret
lret
pop
inc
sub
cmp
shll
xchg
test
push
lahf
push
mov
outsl
sbb
cs
xor
outsb
sbb
dec
mov
xchg
in
scas
fsin
mov
jnp
dec
mov
and
je
imul
je
inc
and
lcall
xor
cmovs
sbbb
es
inc
add
mov
popa
or
rolb
cmp
cmp
adc
in
arpl
mov
fwait
lret
push
mov
pop
jmp
imul
xchg
icebp
mov
mov
arpl
push
sahf
js
jns
jns
pushf
pop
repz
iret
int3
push
decb
call
jae
xor
dec
and
jno
or
jbe
lds
loope
dec
sbb
add
push
jae
pop
xchg
jmp
mov
mov
mov
xchg
xchg
mov
and
mov
sub
mov
aad
cmp
in
fistpl
lods
lea
int
rol
xor
jbe
rcrb
lret
pop
inc
aad
cmpb
dec
mov
lea
jecxz
out
and
xlat
in
jbe
lea
inc
inc
or
pop
inc
ja
mov
sbb
je
fisubs
test
adc
cli
xchg
mov
adc
push
adc
xor
xchg
sub
dec
sbb
rcrb
rcl
add
xchg
mov
aas
lret
or
mov
iret
repnz
inc
dec
das
outsl
or
mov
scas
dec
out
sub
fwait
xchg
ss
jl
adc
fwait
jns
out
or
xor
es
ds
xchg
mov
orb
and
fwait
scas
leave
xor
sbb
dec
xor
je
xchg
stc
int
mov
inc
push
movsl
mov
or
lahf
sub
add
push
negb
repnz
push
out
push
mov
xor
fldt
or
mov
test
lret
add
push
cmpsl
rclb
adc
aaa
xchg
xchg
xchg
sahf
ds
fiaddl
clc
cli
jo
stos
loopne
mov
pop
ss
addl
bnd
jns
xlat
and
add
test
mov
shrl
test
inc
mov
sbb
call
bound
pop
int
lods
sub
sbb
in
icebp
popf
xor
mov
ja
fildl
mov
xchg
ficompl
ss
cs
lret
jecxz
inc
daa
popa
mov
iret
push
cmp
pop
sub
xchg
and
lret
push
push
subl
mov
mov
outsb
outsl
pop
mov
dec
in
aad
lahf
scas
push
cmpsb
mov
jbe
repnz
faddl
push
xchg
jns
mov
dec
jno
gs
dec
mov
mov
daa
icebp
adc
mov
xor
shll
mov
mov
jns
lahf
push
mov
pop
daa
add
test
adc
xorl
jb
lods
jmp
dec
stc
int
in
insl
fdiv
mov
movsb
fs
pop
rorl
fistpl
inc
cmp
js
sahf
dec
rcr
repz
adc
insb
aaa
cmp
enter
jae
mov
mov
inc
test
and
out
gs
arpl
sub
lret
in
in
repnz
mov
pusha
outsb
mov
push
adc
in
insl
jecxz
in
mov
or
cmp
out
sbb
lret
bound
jle
push
dec
jnp
test
cmpsb
mov
add
sub
popa
pshufw
xchg
fldt
and
jae
in
outsb
stos
sbb
xchg
cld
jo
scas
fstpt
andl
cmp
shl
test
ds
std
fcomi
push
xchg
sysenter
or
int
and
test
mov
out
jp
aaa
mov
xchg
das
lret
push
pop
imul
mov
xchg
mov
repz
jae
into
pop
repz
adc
inc
mov
cs
ror
mov
fstl
xor
mov
jno
adc
outsb
cs
outsl
adc
cmp
jae
in
lds
lret
fisttpl
loopne
dec
ret
mov
lret
shlb
inc
xchg
cmpsl
dec
hlt
mov
sub
ficompl
adc
mov
or
ss
ja
imul
adc
dec
les
inc
iret
xchg
or
cmp
int
pop
adc
cmp
mov
popa
mov
jae
push
mov
pop
es
in
scas
and
sbb
inc
fidivrl
movsb
ss
lret
fucom
dec
push
test
shll
inc
and
ret
and
adc
inc
clc
pushl
jno
je
and
xlat
adc
xchg
bound
movsb
inc
push
addr16
pop
add
jb
cmp
incl
je
popf
arpl
std
push
frstor
jns
repz
js
bound
mov
pop
loope
adc
data16
incl
cli
dec
pusha
popa
scas
pop
dec
mov
pop
ja
decl
stos
clc
sub
movsl
in
cli
sub
popa
jnp
int
movsb
das
dec
orl
in
in
daa
push
pop
cli
mov
dec
push
cltd
ret
in
in
cli
xchg
daa
sahf
aam
popf
out
arpl
scas
jnp
lcall
mov
loope
repz
or
pop
xchg
shrd
ficomps
jle
into
or
incl
jl
jno
mov
xchg
sar
cmp
lock
pusha
jmp
dec
cmp
stos
les
push
das
fisttpl
mov
sub
and
jnp
lss
dec
lods
mov
das
jge
lock
dec
dec
lret
sbb
lret
xor
sbb
jmp
dec
sbb
mov
sti
imul
xchg
mov
pop
test
jmp
and
pushl
fwait
rorb
stos
loopne
mov
lahf
insl
data16
adc
sbb
mov
call
dec
sbb
cld
sub
inc
dec
lcall
sti
into
nop
xor
call
mov
dec
imul
jnp
sbb
in
lcall
mov
inc
call
ljmp
push
sahf
loopne
test
adc
push
inc
sub
outsb
mov
xor
or
ljmp
mov
ss
mov
aas
pushf
mov
jae
ficomps
add
jl
inc
ret
lcall
in
pop
stos
add
fbstp
lds
addr16
inc
lcall
jmp
pop
leave
pop
xchg
std
dec
cltd
xor
ljmp
call
or
xor
movsl
mov
or
mov
jmp
mov
cmpsb
in
fmulp
lcall
cmp
or
sbb
out
inc
mov
in
incl
push
xor
mov
scas
ret
std
push
adc
fwait
and
mov
pushl
xor
mov
inc
adc
mov
push
dec
push
movsl
jbe
cld
stos
ja
std
fisubrs
inc
test
pushf
js
or
in
divl
mov
fcmovne
pop
nop
jmp
pop
jne
cs
or
adc
stos
bound
outsb
stc
or
inc
pop
push
mov
jmp
aaa
inc
scas
mov
jb
mov
popa
and
pop
enter
stos
repz
or
lcall
cs
int3
cmp
sub
or
mov
test
push
push
nop
pop
jp
push
and
les
adc
or
pop
pop
sbb
jmp
jmp
enter
pusha
inc
sbb
pop
shll
mov
inc
lret
push
pop
lods
or
jg
ljmp
enter
xchg
jecxz
ja
imul
stos
add
cltd
add
adc
pushl
jp
mov
fwait
mov
jge
stos
and
in
sub
aaa
sub
fsubs
push
add
adc
cmp
inc
adc
arpl
cmp
and
popf
inc
inc
mov
sub
jmp
inc
and
and
or
pop
hlt
sub
inc
pop
push
push
je
mov
incl
ds
dec
pusha
adc
ret
push
nop
int3
xorb
lods
out
sbbb
xchg
pop
jle
inc
push
or
xlat
pop
sbb
mov
jno
leave
shrb
lods
movsb
sub
sbb
cmp
sub
shlb
sub
and
in
out
adc
fimuls
xor
in
into
cmpb
aam
mov
sahf
add
outsl
scas
jmp
outsb
xlat
call
add
out
das
mov
push
cs
mov
bswap
aaa
pop
mov
daa
out
hlt
push
lcall
xor
jg
mov
cs
clc
mov
fisttpll
out
dec
fcoms
rol
fwait
outsb
outsl
sub
scas
push
inc
jae
scas
in
inc
jle
fiadds
jg
and
jb
pop
arpl
xor
pop
jmp
sbb
fmul
movsb
xor
cld
pushl
jo
loop
mov
outsl
subb
out
mov
push
cmp
jge
scas
pop
mov
pushl
mov
cwtl
xchg
std
dec
outsb
fistps
xor
dec
ss
mov
outsl
cld
jg
sbb
mov
and
daa
aaa
aam
cmpsl
dec
in
daa
repnz
jg
mov
push
mov
jae
mov
and
decl
mov
mov
add
sub
and
add
add
push
jge
cld
adc
inc
add
pop
popa
lahf
mov
pop
xchg
cmp
push
lods
pop
pop
call
inc
sbb
pop
xchg
gs
out
scas
or
gs
lods
xchg
mov
cmp
hlt
in
cwtl
and
mov
adc
dec
sbb
sbb
icebp
push
or
xor
mov
jmp
out
sub
into
sbb
pop
mov
das
mov
int
shrb
pop
hlt
sub
cmpsl
inc
sub
lcall
sbb
fs
rol
out
xchg
jne
jns
and
jg
incl
dec
pop
inc
fisubs
fiadds
xchg
out
pop
cmp
sub
cmp
dec
sarl
insb
cmp
cmovl
imull
sbb
jo
in
ljmp
lods
add
xor
out
pop
std
xlat
add
jg
out
cli
inc
ret
pushl
ficoml
in
ss
movsl
jo
int
add
rcrb
fcoms
add
push
cmp
jle
xor
pop
lds
insb
fists
aaa
std
mov
aas
sub
ljmp
inc
std
in
in
pop
or
cmc
iret
int
test
aaa
in
lahf
jne
mov
fistpll
gs
fstl
adc
mov
mov
add
adc
xchg
call
sub
insl
std
cmpsl
push
dec
out
lds
clc
shrl
jnp
decl
stos
xchg
fidivrl
and
outsl
sub
mov
dec
or
jmp
lods
imul
cmp
mov
inc
adc
xchg
cmp
mov
pop
mov
das
pop
sbb
loope
jmp
subb
in
mov
sub
test
add
roll
rorl
jg
jg
loopne
nop
inc
or
inc
icebp
mov
xor
add
lret
push
inc
push
sti
cmpsb
incl
lods
pop
aad
inc
adc
mov
movsb
xchg
fs
mov
mov
add
test
sahf
aas
es
cmpsl
inc
hlt
adc
mov
jecxz
jne
add
lahf
jl
xchg
and
jns
adcl
lods
stc
xor
int3
jne
add
es
adc
adc
sets
jbe
add
lods
pop
int3
mov
mov
adc
sbb
inc
xor
daa
adc
dec
icebp
call
mov
sbb
subl
xor
addl
movb
pop
adc
fisttpll
fldenv
outsb
ja
jl
add
sbb
frstor
mov
or
xor
xor
add
mov
add
cmp
ss
stc
sbb
pop
inc
rcr
xchg
clc
push
jae
mov
cld
push
adc
push
adc
mov
pop
dec
mov
cs
fnsave
cmpb
les
jmp
xor
fldln2
movsl
jmp
or
notb
int
lahf
and
or
jmp
addr16
in
in
mov
pusha
jns
into
test
cmp
fs
xchg
in
jns
mov
add
xchg
fwait
out
out
mov
les
js
and
mov
fwait
mov
fmul
ja
add
inc
xor
in
sub
int
jo
shll
or
enter
fsubrs
enter
jle
dec
in
stos
rclb
lcall
scas
add
xchg
jo
enter
adc
add
and
rclb
push
push
test
in
mov
sbb
lret
out
pushl
or
xor
in
ss
xchg
insl
add
push
in
dec
sar
in
cld
cmp
jmp
xor
call
jnp
cld
jns
xor
call
xor
hlt
mov
mov
or
sub
arpl
inc
push
mov
hlt
mov
mov
ret
rorb
jle
add
add
jg
add
sbb
call
in
inc
adc
aam
dec
push
ljmp
mov
sbb
sahf
dec
fstps
shll
jmp
imul
fstp
and
in
pushl
and
mov
fldenv
xor
call
lds
mov
inc
dec
je
adc
pop
inc
lret
xorl
daa
mov
stc
xor
mov
add
mov
adc
popf
inc
lcall
push
enter
and
dec
and
sub
mov
enter
adc
dec
lret
inc
adc
mov
pop
pusha
sbb
xchg
push
sub
xchg
mov
sbb
loopne
xchg
push
xor
inc
leave
xor
fsts
xchg
andb
shl
pop
sub
adc
pop
jo
xchg
or
mov
in
and
pop
and
xchg
or
and
xchg
mov
add
lcall
jo
jmp
in
adc
pop
xchg
mov
push
or
push
or
or
cs
pop
sbb
mov
lret
int3
enter
enter
fcomp
flds
out
lret
loopne
jecxz
in
sti
xchg
mov
xor
outsb
je
insl
and
and
out
cmp
je
xor
xor
xor
xor
ss
cmp
inc
inc
push
or
testl
call
add
dec
pop
insb
mov
sub
xchg
shlb
pop
add
jbe
testb
clc
insb
add
add
push
push
cltd
fs
adc
pop
mov
aaa
push
pop
and
add
and
and
dec
shll
push
pop
xor
shll
insb
je
test
xor
rorl
shll
aam
ss
shll
in
hlt
cld
add
imul
imul
inc
sbb
inc
or
in
jb
pop
sbb
and
pop
mov
cmp
dec
sahf
sbb
xchg
dec
arpl
fs
repnz
inc
adc
mov
push
jb
enter
push
mov
and
pop
inc
pushf
scas
mov
sub
insb
lcall
ficoms
cmp
insb
jl
dec
shll
pushf
lods
mov
rcr
in
cld
adc
pop
add
rorb
or
ret
test
imull
mov
ffreep
mov
add
shrb
addr16
or
ret
pop
mov
add
or
mov
add
jb
fmuls
dec
pop
xchg
pop
mov
into
js
pop
fwait
adc
outsl
das
imul
or
xchg
pop
add
add
andl
add
push
movsb
jecxz
fucomp
aas
in
dec
je
xor
xchg
movsb
pop
mov
xlat
xchg
or
pushf
inc
jecxz
les
dec
xlat
je
add
jg
pop
xchg
jnp
cmp
or
scas
and
inc
jae
mull
cmpsb
jl
or
mov
pop
hlt
neg
inc
das
hlt
fisttpl
jae
rorl
jns
jl
mov
xlat
lods
pop
lcall
pop
pop
mov
hlt
or
jae
movsb
pop
roll
xchg
cld
pop
je
fwait
mov
adc
sub
dec
add
push
nop
push
add
add
mov
push
nop
inc
add
mov
adc
adc
in
xchg
lcall
add
inc
gs
inc
push
push
insb
gs
data16
push
imul
or
sbb
inc
insb
insb
outsl
arpl
dec
imul
xor
je
push
and
gs
dec
jb
push
imul
outsl
dec
jne
je
in
in
adc
xchg
mov
arpl
inc
adc
mov
jae
jb
outsb
inc
or
jns
fdivrs
push
imul
sahf
or
xchg
push
mov
adc
popa
xchg
cltd
and
out
and
sbb
sbb
inc
fs
femms
fdiv
xor
dec
popa
outsb
fs
das
add
add
or
push
inc
mov
jbe
fwait
sti
outsl
insl
insl
dec
xchg
outsb
sub
or
add
push
mov
test
jae
mov
jbe
xchg
push
jb
jnp
push
outsb
push
xchg
cmpsl
mov
sbb
push
je
sbb
inc
sbb
fisttpl
popa
imul
in
xor
add
add
mov
and
sbb
imul
adc
outsb
jmp
jbe
jp
pusha
push
cmp
or
add
jae
jo
jnp
add
push
xor
push
clc
and
insl
push
ss
and
lcall
addr16
inc
outsb
jne
inc
addr16
or
push
imul
cmc
sbb
jbe
gs
or
arpl
lods
andl
dec
cmp
push
cmpsb
fucom
mov
inc
inc
or
push
ret
enter
loope
flds
cmp
addr16
mov
and
dec
jo
dec
gs
xor
cs
aas
movntq
out
cmp
cmp
push
xlat
js
inc
insb
fistl
jo
add
in
sub
push
pop
rorb
adc
push
inc
jb
in
inc
outsl
jne
adc
add
or
mov
or
outsl
lcall
or
clc
cmp
jb
jae
cmp
ficompl
push
rcll
adc
lods
test
adc
popf
call
inc
cli
bound
andl
push
outsl
ja
xchg
test
add
iret
cmp
out
pop
push
dec
jmp
dec
in
cmp
xchg
mov
cmp
jbe
adc
arpl
cmp
sarb
rorb
inc
leave
inc
or
inc
add
dec
add
add
add
dec
jbe
sub
popl
add
incb
sub
lock
and
pop
push
pushf
sub
in
sub
adc
sub
int
insb
inc
pop
add
subl
add
xchg
adc
mov
adc
jl
add
sbb
sub
nop
je,pn
pop
mov
add
repnz
add
and
imul
add
sub
mov
add
or
push
cli
push
rolb
xlat
bound
repz
adc
lret
imul
andb
dec
je
add
dec
jae
add
leave
jb
daa
mov
mov
call
dec
shll
adc
jae
mov
push
add
sbb
add
add
add
add
add
incl
add
add
add
add
inc
xchg
add
mov
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
nop
cld
inc
add
daa
inc
