mov
push
dec
out
hlt
add
cmp
add
add
pop
add
push
mov
pushl
push
push
call
leave
ret
adc
or
out
or
or
clc
popl
fcmovnbe
out
inc
cld
add
and
adc
add
outsb
mov
sub
es
sbbl
pop
fs
sbb
add
lods
mov
push
push
sbbl
jbe
sub
sahf
mov
mov
cld
pop
jnp
imulb
jne
lods
addr16
push
mulb
sbb
or
sarb
cld
cmp
jne
sbb
in
movb
jmp
push
push
insl
in
mov
sub
and
pop
lds
or
jnp
dec
int
push
arpl
out
xchg
pop
mov
aaa
cld
inc
ja
lock
les
sub
out
sti
lock
add
or
xchg
mov
imul
mov
xor
or
jne
test
jno
and
cbtw
xor
ret
fildl
xor
clc
mov
adc
mov
cmp
xor
sbb
xor
aaa
and
push
jb
popa
xchg
lods
sbb
add
jge
sub
cmp
iret
adc
test
add
into
or
add
or
push
inc
xchg
cmp
cmp
pop
inc
bswap
scas
or
jbe
dec
xchg
add
or
mov
xchg
sub
xchg
sub
add
push
movzbl
and
mov
test
mov
or
sbb
add
jmp
adc
xchg
lock
push
sti
adc
shlb
psrlq
mov
adc
shrb
dec
xchg
je
mov
xchg
clc
and
icebp
adc
cli
add
sbb
cmp
xchg
add
jmp
adc
faddp
pop
std
in
mov
repnz
or
rcr
xor
sbb
out
jecxz
sub
and
mov
aaa
xor
lea
aas
and
push
add
and
jb
add
dec
or
lret
push
push
stos
sti
push
and
jno
mulb
or
dec
repz
jbe
or
daa
inc
add
jecxz
sbb
mov
mov
cmp
rorb
addl
add
or
push
dec
andb
es
jp
pop
das
jmp
rol
repnz
push
int
shlb
push
mov
hlt
popa
xchg
sbb
shlb
mov
pusha
in
cmp
je
jb
subl
add
add
xor
jmp
rcl
push
jne
add
pop
and
sti
jne
add
fidivl
ret
lock
xchg
xchg
add
add
adc
sub
popa
and
fcompl
pop
testl
jne
xchg
in
push
hlt
sbb
adc
hlt
ljmp
daa
subl
or
in
les
mov
ret
and
repz
in
sub
mov
xorl
or
cmp
mov
repz
popa
shr
mov
xor
push
sbb
sbb
mov
inc
or
add
fildl
push
cld
mov
mov
jecxz
push
shr
adc
sbb
pop
and
rep
pop
xor
pop
aaa
jmp
fisttpl
jne
jecxz
rep
pop
jecxz
fistpll
adc
or
jne
or
inc
mov
pop
inc
push
push
push
ja
jnp
bound
inc
sub
mov
cmp
ret
adc
out
sub
cltd
mov
add
mov
add
fnstenv
rclb
cmp
pop
in
outsl
fildl
outsl
jb
leave
inc
jne
pop
push
push
lods
jge
imul
mov
cmp
add
mov
pop
enter
sbb
sti
xlat
push
add
mov
push
cld
or
sub
xchg
cmp
sbb
add
add
in
adc
incl
pop
mov
cld
mov
pop
jmp
xchg
jno
in
push
xchg
icebp
xchg
mov
jg
sub
xor
sbbb
lahf
mov
out
pop
mov
sub
ret
jbe
clc
clc
in
mov
xor
jbe
call
adc
movl
cmpsl
mov
mov
add
mov
rolb
push
push
inc
repz
pop
shr
outsl
sbb
popa
mov
push
sbbb
dec
popa
mov
aas
je
pop
hlt
push
or
je
mov
cmp
clc
cmp
xor
ficoms
nop
jmp
mov
add
hlt
mov
pop
sbb
inc
mov
pop
sbb
adc
scas
adc
or
test
push
pop
or
pushl
xchg
fcomip
bound
rcl
shl
mov
or
or
repnz
add
out
mov
mov
cmp
ds
push
rclb
pusha
inc
ds
in
je
cmp
ljmp
add
xor
addr16
je
inc
loop
and
popf
xchg
int
aaa
aaa
test
or
xchg
and
add
inc
push
push
mov
or
enter
sbb
sbb
ret
pmulhuw
xor
push
push
push
out
popa
jbe
aam
cwtl
pusha
mov
adc
sarb
dec
lcall
or
pop
jmp
mov
sub
jg
cmp
outsb
mov
add
sbb
inc
or
sub
ds
dec
ficompl
or
pop
jae
xchg
fisttps
add
pop
sub
cmp
cmpb
push
in
jb
mov
jmp
andl
sbb
or
imul
subl
or
xchg
mov
mov
add
mov
inc
sub
adc
mov
rcrb
sbb
lcall
pop
or
jge
sub
add
pop
adc
inc
imul
js
das
pop
pop
sbb
fs
sub
xlat
jne
std
sub
and
jae
repz
pop
fistl
jecxz
xchg
cmp
fistl
pop
xor
xchg
jno
stc
pop
cmp
adc
inc
out
jae
inc
jns
out
data16
frstor
mov
adc
or
sbb
jge
add
icebp
add
xchg
in
adc
in
insb
ss
push
cli
test
xor
mov
mov
mov
mov
mov
mov
js
sbb
out
aam
aas
adc
jge
rcrl
icebp
fwait
shlb
push
jmp
in
int
shll
push
xchg
pop
mov
roll
movsl
call
inc
loopne
mov
imul
mov
push
imul
enter
je
push
pop
adc
jmp
cmp
xor
data16
jl
test
jmp
mov
fistl
dec
in
pop
leave
inc
sub
push
iret
dec
mov
test
adc
out
ret
loopne
and
in
mov
jecxz
lock
cmp
mov
mov
in
in
sbb
gs
lea
sub
xor
sahf
or
xchg
mov
or
data16
adc
aaa
or
cmp
shr
inc
xor
lds
mov
sbb
adc
pop
push
xor
or
aas
lahf
sub
sub
sub
push
outsb
sbb
and
inc
out
js
xorps
ja
mov
xchg
ror
outsb
push
aam
add
inc
fst
cwtl
lret
sbb
lock
popl
xchg
js
fadd
pop
adc
ja
cmp
or
add
xchg
aam
aad
mov
sbb
iret
sub
xchg
add
add
jge
xchg
in
shrb
or
push
push
mov
imul
or
nop
mov
add
cld
mov
popw
fisubrl
push
inc
sub
add
bound
rclb
frstor
test
aam
jmp
add
lds
mov
jle
mov
add
stc
add
loopne
jno
xor
icebp
or
movsb
dec
outsb
into
jge
inc
or
or
cmpsb
stos
test
mov
leave
pop
insl
jns
cmp
nop
xor
add
nop
lods
nop
cmp
sub
ds
inc
cmp
or
mov
nop
jl
cmp
nop
jg
add
add
push
inc
or
fnstcw
push
sub
punpcklwd
jp
inc
or
fstpt
mov
lret
bswap
shr
and
fldt
dec
push
mov
adc
mov
mov
push
nop
mov
jle
mov
stos
das
outsb
loop
pop
nop
das
add
pop
mov
jmp
pop
mov
call
adc
jno
push
and
mov
sbb
ds
pop
loopne
stc
in
repz
xor
and
add
lods
cmp
adc
xchg
cmp
or
and
mov
push
xchg
mov
out
jns
sbb
les
adc
mov
mov
xor
cmp
push
pop
sbb
clc
and
clc
lret
and
fldcw
rcll
or
sbb
push
mov
inc
sbb
test
and
cmc
out
mov
mov
call
lock
push
enter
call
or
cmpsl
jecxz
cld
cmp
inc
addr16
pop
and
inc
xor
in
push
lcall
or
dec
cmp
es
and
pusha
mov
push
psadbw
dec
cwtl
jmp
push
lds
inc
nop
pop
fsubrp
add
pop
and
or
loopne
xchg
in
or
pushf
add
cmpb
repz
adc
or
pop
push
addr16
incl
int3
jp
push
mov
bound
adc
or
imul
xor
jne
xor
pop
std
push
sarl
and
dec
sub
in
xor
call
add
mov
insl
fs
xor
mov
hlt
inc
add
sbb
pop
dec
icebp
dec
hlt
pop
lock
das
pop
mov
cmp
rolb
mov
fiaddl
pop
sbb
insb
cld
dec
push
enter
and
fwait
push
sub
cmp
out
or
push
push
push
push
adc
lea
cmp
outsb
push
add
movb
aas
sub
cmp
jb
add
mov
pop
jnp
mov
lea
movl
movl
icebp
dec
pop
jle
fdivrl
xor
sub
pop
or
std
scas
cld
bnd
or
pop
pop
pop
pop
repz
into
jae
adc
mov
jg
insl
sti
mov
mov
push
adc
xor
and
add
push
mov
push
rol
add
mov
xor
and
lea
add
sarl
mov
sti
and
add
and
pop
jmp
dec
or
rcll
lret
xor
and
lea
add
rol
sti
pop
in
push
add
pop
scas
cmc
add
pop
xchg
pop
leave
repnz
xchg
adc
test
inc
mov
dec
add
sub
xchg
in
subb
testl
mov
ljmp
mov
lret
pop
mov
adc
repnz
mov
mov
dec
xchg
cmpsb
cmp
or
sbb
push
testb
sti
pop
inc
mov
rcrb
out
mov
pop
push
pop
pop
es
mov
cli
pop
stos
mov
add
pop
dec
xchg
dec
enter
das
adc
inc
mov
push
adc
add
and
aas
xchg
cmp
sti
shl
mov
pop
lret
fs
out
loope
and
pop
aaa
ret
cmp
pop
jle
xchg
pop
leave
repnz
adc
inc
and
inc
mov
dec
clc
mov
sub
xchg
in
outsl
addr16
dec
sub
xchg
sti
inc
cmp
incl
mov
xor
fwait
test
or
and
insl
sub
mov
adc
or
in
cmp
inc
ljmp
mov
adc
mov
dec
fcoms
mov
pop
mov
jle
sub
daa
mov
pop
enter
xor
aam
add
inc
xchg
add
cmp
aam
and
mov
pop
in
xor
jl
pop
fs
test
gs
lods
les
fdiv
push
inc
jmp
sub
popf
jnp
mov
or
xchg
jnp
xchg
in
sub
or
sti
or
sbb
and
sbb
pop
mov
mov
pop
inc
mov
ret
int3
addl
cld
lret
int3
or
or
imul
in
test
outsl
inc
subb
loopnew
sub
cmp
xchg
mov
mov
or
repnz
jle
notl
pop
nop
in
xor
mov
lret
xlat
sub
xchg
roll
or
add
add
stos
lret
add
dec
mov
jns
add
cmp
stos
xchg
push
jg
cwtl
in
inc
mov
or
in
sbb
jno
mov
je
shl
loope
ret
jmp
push
out
pop
push
jecxz
inc
push
push
xchg
addl
subl
pop
cli
jae
mov
ret
inc
daa
push
js
add
movb
sbb
loop
pop
cld
je
andb
testb
dec
add
sbb
add
or
mov
or
bswap
mov
fistpl
mov
mov
in
jnp
and
leave
mov
bound
jbe
int3
daa
enter
mov
push
and
dec
xor
int
aas
cmp
sti
mov
adc
insl
int
mov
daa
lea
gs
hlt
xor
in
push
or
xor
arpl
mov
insl
loope
ficoml
in
in
insb
jp
sub
not
and
and
or
add
pop
mov
add
add
inc
clc
mov
insl
or
rol
mov
mov
or
fcomps
stc
mov
cmp
mov
xor
xor
mov
enter
mov
enter
and
jno
fdivrl
inc
lret
adc
sbb
or
shll
add
sbb
sbb
mov
jo
les
cwtl
add
shrl
mov
aam
jne
or
jo
andb
por
push
fnstsw
and
leave
aaa
lock
xor
push
mov
add
in
push
adc
sti
data16
filds
xchg
mov
xchg
add
jb
pop
mov
and
or
out
fstpt
hlt
inc
push
pop
insb
or
or
mov
jae
push
push
in
or
daa
adc
cmpb
sbb
push
pop
xor
clc
mov
das
pop
mov
cmpsl
jb
sub
mov
mov
or
into
adc
push
int
add
inc
or
push
jl
push
pushf
cld
or
and
jle
add
xor
clc
pop
inc
iret
lcall
push
or
cmc
inc
dec
lock
sub
xor
cmp
sbb
pusha
mov
int3
and
add
adc
mov
add
adc
inc
jb
in
clc
je
push
hlt
or
adcl
jae
inc
or
cmp
insl
add
lcall
xchg
mov
cs
sbb
nop
add
add
push
sbb
or
adc
not
add
or
jmp
inc
aaa
cmpl
hlt
imulb
cmp
push
dec
adc
mov
push
push
push
mov
and
test
add
sub
pop
jbe
and
and
pop
shr
les
xor
push
cmc
jge
cld
dec
push
pop
adc
sub
pushf
inc
adcl
lods
out
jo
inc
mov
mov
xchg
adc
mov
repnz
mov
cli
shrl
sbb
or
je
jnp
inc
jnp
cs
pop
cltd
xlat
or
mov
xchg
push
xchg
push
push
sbb
xor
mov
or
and
lock
pop
lock
js
dec
dec
pop
add
sub
push
add
mov
fdivs
jo
pmulhuw
xchg
mov
mov
lock
mov
stos
cltd
rorb
insb
arpl
lock
rolb
push
mov
lea
sub
adc
daa
add
cmp
mov
adcl
pop
jnp
fwait
gs
outsb
jo
push
arpl
daa
pusha
or
add
mov
shl
std
adc
cmp
sub
and
loope
ljmp
mov
sub
adc
bound
mov
mov
dec
mov
xchg
xchg
lods
mov
sahf
push
xlat
and
je
rclb
pop
ja
ja
mov
in
push
add
cli
test
jle
push
xorl
lods
push
xlat
lods
shlb
js
in
adc
or
push
push
in
mov
in
rcl
add
xchg
fcomp
push
hlt
cmp
inc
push
in
aam
pop
cmp
inc
repnz
sub
and
mov
pop
or
jo
rcl
or
push
fmull
pop
xor
pop
ljmp
or
mov
sub
and
add
andb
jbe
fcomps
adc
fs
xor
mov
mov
push
lods
mov
sub
xchg
mov
lea
dec
and
adc
fdivp
mov
sbb
add
mov
xchg
jo,pn
out
jb
sub
repnz
stos
nop
push
test
lea
pop
jns
shl
aaa
or
mov
fcomps
push
adc
mov
mov
inc
rol
mov
push
adc
push
jnp
adc
mov
jo
mov
inc
mov
add
outsb
adc
add
sbb
pop
sub
lods
push
in
cmp
ss
push
xor
popa
mov
and
mov
or
adc
xor
adc
and
adc
or
mov
push
sub
js
lods
and
sysenter
mov
in
sub
mov
fcomps
call
out
or
jmp
push
mov
in
clc
ret
dec
enter
mov
and
sub
loopne
sub
xorl
sub
and
sub
sub
sub
mov
xor
xchg
hlt
pusha
inc
push
sub
cmp
or
sub
outsb
lods
push
pusha
movsb
mov
mov
adc
ret
sbb
jo
inc
cmpsb
sbb
mov
popa
aaa
in
push
sbb
or
sub
adc
cs
cltd
mov
or
xchg
test
adc
adc
adc
pop
arpl
mov
ss
sub
dec
in
rorl
push
and
and
js
scas
sbb
imul
xor
aam
in
testb
shr
add
cmpsb
sub
xchg
lcall
pop
hlt
dec
mov
ret
adc
sub
arpl
sub
push
adc
cmp
ja
inc
cmp
icebp
inc
xchg
lock
loop
sub
lock
jl
cld
push
mov
pop
cmp
push
std
ds
mov
push
adcl
adc
in
cmp
xlat
and
sub
stos
das
pop
ret
dec
or
and
mov
enter
dec
cli
fwait
cmpsb
jmp
add
add
add
add
or
sahf
mov
inc
cli
or
and
pop
repnz
ficomps
sbb
sti
dec
adc
test
in
ss
cltd
mov
xor
push
mov
adc
imul
mov
sbb
jns
out
cld
sti
cli
stc
add
mov
notb
in
xorl
xor
jecxz
out
ror
jne
pop
bound
sti
sub
push
insb
add
cli
adc
push
push
ret
or
clc
adc
rorb
mov
addb
aaa
mov
fwait
jb
push
movsl
popa
xor
push
dec
jg
fdivs
and
out
and
xchg
add
pop
xor
int
loope
mov
xchg
fdivs
inc
push
adc
nop
sbb
outsl
mov
das
and
mov
jnp
cmpl
fld
pop
adc
cmp
sub
pop
mov
mov
adc
adc
and
popa
mov
dec
shl
sbb
pushf
cmp
cmpsl
xchg
xchg
insl
subl
shlb
or
mov
call
inc
out
lahf
xor
push
or
nop
cs
mull
or
call
clc
cmp
mov
in
imull
mov
ss
hlt
notl
aam
sti
xor
mov
icebp
fwait
jmp
add
pop
pusha
dec
jmp
push
ror
ss
jne
dec
mov
push
pop
lock
pop
adc
dec
call
xor
dec
outsl
lock
or
dec
and
add
inc
xchg
or
xor
xchg
dec
roll
push
mov
popf
xchg
js
sbb
or
movsl
add
xchg
in
add
sbb
aaa
push
or
in
dec
test
or
aaa
xchg
and
push
pushl
test
fisttps
outsl
fsub
mov
or
cmp
shll
sti
nop
cs
and
xchg
add
idivb
loop
inc
cli
das
or
jl
add
xor
push
mov
and
out
addb
mov
adc
imul
push
push
mov
xchg
test
pop
xor
fisttps
shlb
pop
mov
xchg
aaa
fdivl
add
inc
push
adc
pop
inc
xor
iret
call
push
and
or
imul
sti
xor
jmp
pop
scas
sub
outsl
std
bound
ss
enter
and
pop
sbb
mov
pop
in
adc
mov
or
popa
lret
sbb
ss
push
lahf
dec
dec
and
sub
cmc
inc
pop
adc
add
dec
dec
pusha
scas
cmp
stos
inc
push
cmpsl
call
arpl
xor
scas
nop
or
mov
xchg
jo
movsb
jo
pop
xor
mov
popf
inc
jne
aaa
or
lods
nop
add
aaa
clc
adc
push
xor
jp
push
aaa
add
sbb
sub
mov
add
fstl
add
xchg
add
mull
pop
inc
dec
shlb
sbb
in
dec
out
orb
add
xor
ret
jbe
jmp
scas
adc
inc
xchg
jle
daa
lea
sub
sbb
push
xor
and
dec
xor
addr16
add
std
mov
fwait
push
and
jb
sbb
lret
mov
out
pop
cmpsb
sub
push
push
inc
ret
in
xchg
ret
or
cmpsl
jmp
fldenv
sbb
outsb
inc
xor
je
test
jmp
jno
dec
dec
mov
inc
inc
das
pop
xchg
and
cmp
adc
mov
jl
xchg
mov
stos
jge
and
push
inc
fxch
jg
and
lds
lcall
mov
lods
jg
push
aas
xor
or
std
inc
icebp
add
pop
cld
xor
mov
repnz
cmp
jne
sarl
into
faddl
jmp
push
bound
cmp
inc
push
enter
inc
inc
sbb
jle
inc
xchg
xchg
adc
jno
outsb
cld
pop
and
mov
xor
cmp
inc
push
cmp
mov
adc
cltd
dec
movb
popa
mov
or
scas
shrl
test
imul
or
xor
filds
pop
ljmp
xor
pop
cld
or
inc
cld
cld
loop
nop
and
ja
mov
lds
inc
cmpsb
insb
push
xor
jb
or
daa
nop
adc
add
sbb
aas
sub
sbb
push
imul
dec
addr16
push
lret
cltd
push
xchg
and
test
add
or
test
pop
cmp
pop
movb
loopne
in
mov
lahf
and
jns
cld
sbb
sbb
mov
call
and
sub
in
loopne
in
pop
rclb
xchg
add
add
lcall
pop
xor
cmp
ret
ud1
cmpl
push
add
ret
and
sub
sbb
lods
adc
add
loopne
mov
xchg
xor
add
orl
clc
lock
in
cwtl
or
shlb
scas
fnstcw
xchg
xor
inc
cwtl
lock
sti
fcomps
loopne
push
dec
add
sub
jae
lahf
sbb
xor
iret
repz
insl
pop
jle
pop
mov
clc
jne
dec
cwtl
pop
test
fmul
and
sub
lock
dec
enter
inc
inc
jmp
push
in
or
push
mov
adc
outsb
in
pop
xor
sub
data16
sub
push
mov
jbe
and
aaa
in
lea
inc
mov
adc
sbb
inc
lcall
ds
jae
ret
ret
sub
push
aas
hlt
fiadds
or
or
inc
cmpb
cli
inc
cmp
mov
pop
jmp
add
dec
inc
int3
cmp
pop
fadds
in
loopne
inc
or
or
fnsave
xor
insb
add
sbb
das
cmpsb
in
add
imul
mov
leave
jae
into
sbb
xor
and
pop
test
pop
xor
fadds
xor
popf
xchg
adc
add
ss
sub
or
inc
test
sbb
mov
xor
adc
imul
add
push
test
or
pusha
daa
pushf
in
sub
dec
daa
adc
adc
push
movsl
sub
push
fcoms
dec
fistl
xor
rolb
sbb
out
add
out
fimull
mov
mov
mov
test
sub
dec
mov
pop
adc
addl
xchg
push
dec
loopne
xchg
mov
sahf
sbb
movsb
jecxz
pop
dec
adc
inc
or
adc
jl
or
push
lds
pop
in
add
xchg
mov
xor
and
mov
push
xor
dec
cmpsb
rorl
dec
and
clc
loope
arpl
out
sbb
enter
or
nop
add
dec
lret
inc
enter
sbb
hlt
dec
push
dec
orb
mov
orl
add
sbb
cmp
out
aad
jbe
and
imul
pop
ss
ss
inc
repnz
ss
ss
sub
xchg
pop
pusha
mov
fsub
insb
lods
lods
jl
or
xor
loop
call
inc
xor
dec
cmp
in
insb
or
jg
fcomps
popa
adc
adc
ret
fcoms
enter
dec
ret
xchg
or
cmp
int3
mov
push
movsl
jno
popa
xchg
lret
int3
repz
push
and
or
push
aaa
jb
jns
sbb
adc
sbb
add
xchg
push
mov
or
ss
rcl
or
push
aam
adc
or
je
push
add
pop
sbb
sbb
sub
and
clc
jne
cmp
nop
inc
push
sbbl
loopne
mov
add
and
jb
and
leave
push
push
dec
dec
inc
push
hlt
adc
mov
ss
adc
and
and
rol
add
add
stos
int
push
leave
dec
push
sub
mov
cmpsl
movsb
aaa
xor
iret
xchg
sbb
cmp
cmp
scas
and
sahf
jge
arpl
ret
xchg
and
pop
aaa
sub
pop
xchg
xor
push
enter
mov
add
in
push
adc
sub
mov
xchg
adc
cmp
cmpsb
inc
inc
mov
popf
das
and
add
inc
jb
jne
aaa
test
mov
push
enter
loopne
xor
inc
loopne
inc
in
jb
dec
inc
push
or
push
push
test
enter
adc
xor
mov
hlt
das
dec
cmpsb
nop
fmul
pop
int3
cmp
inc
and
cmp
push
cmp
cmp
cmp
add
xchg
and
nop
inc
jne
outsl
fdivs
push
mov
push
int
pop
xchg
dec
push
pop
data16
fsubs
test
pop
push
push
shll
imul
clc
pop
add
jae
sbb
inc
mov
adc
lds
lea
add
sbb
inc
movb
push
hlt
mov
pop
pop
mov
cltd
lea
pop
lcall
in
in
mov
dec
push
sbb
push
push
lock
ljmp
jne
push
jle,pn
mov
sub
or
pop
mov
xchg
mov
int3
mov
mov
xor
jmp
pop
mov
cvtpi2ps
cltd
push
in
cmp
cmp
push
cmp
or
and
and
and
sbb
inc
enter
or
aad
scas
pop
or
and
pop
out
jp
push
andb
and
push
nop
xchg
in
fwait
inc
add
sbb
mov
rcl
and
xchg
in
pop
push
loopne
imul
dec
pop
pop
pop
adc
pop
cmp
and
cmp
mov
lods
add
aad
adc
pop
adc
pop
inc
add
adc
in
cltd
inc
out
clc
jns
enter
pop
jge
and
pop
arpl
pusha
add
add
sbb
imul
adc
sub
jp
mov
and
push
adc
shlb
or
cmpb
sbbl
sbb
and
dec
pop
addr16
fstl
push
and
cmp
xchg
sbb
add
dec
push
mov
sbb
adc
insb
adc
and
adc
push
dec
adc
mov
idiv
fisubs
xor
add
inc
and
xchg
sbb
jmp
sbbl
push
or
sbb
fs
adc
sub
and
add
sub
cs
call
lods
add
jno
aad
nop
push
enter
xor
stos
pop
cmp
es
push
mov
insb
inc
pop
cmp
nop
das
sub
arpl
pop
pop
daa
imul
dec
and
and
repnz
dec
dec
cmp
cmp
pop
lods
nop
cmp
inc
pop
mov
mov
sbb
lahf
sbb
or
and
adc
jmp
push
push
fs
xor
inc
jge
faddl
jge
or
fstl
sbb
test
scas
adcb
sub
lret
scas
adc
dec
pop
and
rolb
nop
add
daa
addr16
test
in
adc
cmp
cmp
loopne
cmp
jbe
pop
enter
insl
adc
roll
aam
cmp
fcomp
sub
xchg
add
aam
nop
dec
sbb
in
aam
cmp
nop
cmp
xlat
push
repnz
cmp
add
mov
hlt
add
cmc
sub
mov
push
sbb
cmpsl
push
in
cmp
xchg
pop
clc
cmp
inc
inc
pop
nop
pop
hlt
push
or
popa
mov
add
push
sub
adc
or
inc
dec
push
mov
sbb
es
and
sbb
bound
push
je
jmp
jo
adc
icebp
sub
jge
roll
push
fsubrs
dec
adc
lret
faddl
fsubs
cmpsl
in
push
in
dec
pop
sub
inc
outsl
dec
scas
inc
adc
adc
adc
popa
push
arpl
jmp
push
sub
pop
sbb
das
and
adc
imul
add
add
xor
fistl
push
andl
push
insb
xor
call
and
push
adc
jns
push
adc
or
mov
mov
lds
mov
cmp
shlb
dec
inc
push
xchg
scas
ljmp
aam
push
adcb
pop
mov
cwtl
sbb
push
adc
pop
and
sbb
xchg
mov
adc
fcomi
add
enter
mov
outsl
jmp
mov
mov
loopne
movsb
pushf
mov
xor
or
outsl
fcoml
sbb
scas
adc
mov
cs
loopne
cmp
jge
or
mov
push
inc
ja
sub
mov
pop
adc
out
add
push
and
in
movzbl
ret
mov
ja
lock
out
mov
push
jge
sub
xor
push
push
adc
cmp
jns
cwtl
ss
shrl
pop
add
int3
leave
cmp
pop
inc
or
xchg
fsts
lock
cld
xchg
adc
mov
fcoml
push
jb
stos
add
fs
jg
imul
in
push
shrl
lods
mov
sbb
and
push
ss
test
jbe
test
adc
push
in
unpcklps
sub
sbb
adc
dec
adc
xlat
ret
push
adc
mov
jbe
dec
mov
js
push
in
popa
mov
adc
outsb
adc
or
and
cmp
add
push
cltd
es
in
das
in
xchg
inc
addr16
outsl
or
or
nop
das
add
adc
xor
push
mov
dec
mov
loop
clc
lea
xor
fimull
out
and
xchg
sbb
in
or
clc
arpl
addr16
int3
mov
jo
lods
pop
push
jnp
insb
div
mov
in
xor
mov
dec
or
mov
aam
sbb
adc
shll
sbb
xchg
lods
fstps
aam
into
mov
out
jne
add
push
jbe
sub
jnp
adc
arpl
popa
lret
js
das
add
pop
xchg
mov
jge
jmp
adc
mov
in
jne
adc
outsb
call
mov
flds
pop
mov
xchg
pusha
mov
adc
orl
xchg
push
in
insl
test
cs
add
call
into
xchg
sarl
lock
fcomip
sbb
push
adc
shl
mov
arpl
or
sbb
mov
call
mov
or
mov
cmpb
jg
and
push
dec
inc
lea
cmp
add
stos
mov
jo,pt
mov
inc
sub
add
sub
and
inc
and
xchg
repz
and
cmp
inc
je
push
and
adc
icebp
xchg
inc
xor
aad
notl
pushf
sbb
andl
jne
pop
enter
adc
addr16
fbld
nop
and
jne
xor
xchg
imul
inc
mov
inc
dec
testb
cmp
push
xchg
icebp
inc
ret
addb
ja
xor
je
and
xchg
or
sub
ret
adc
ffree
cmp
ljmp
add
and
add
sub
sub
pop
inc
lret
add
nop
pop
and
ja
pop
xor
inc
cmp
in
adc
dec
orb
sub
or
clc
jbe
jbe
push
and
push
push
add
daa
enter
push
and
pusha
jmp
mov
mov
call
mov
out
or
cmp
addr16
daa
add
pop
xor
jae
ja
sbb
cmp
cmp
leave
ja
ja
and
sub
sbb
cmp
and
push
adc
in
push
push
adc
popf
mov
leave
push
push
leave
cmp
cmp
cmp
add
inc
and
jns
scas
insb
dec
aaa
or
mov
add
call
cmpb
adc
rolb
cld
add
cmp
movw
rcrl
dec
mov
out
add
adc
gs
ja
mov
scas
mov
and
jmp
pop
xor
add
mov
insb
sub
xor
shll
push
jmp
mov
jp
adcb
or
in
jle
adc
inc
jno
adc
ds
dec
and
or
inc
or
add
rolb
dec
or
shl
sbb
inc
push
push
or
sti
or
inc
fwait
cmp
adc
mov
out
and
cmpsl
lock
mov
xor
xorb
fiaddl
or
mov
rcrl
pushl
push
add
addb
ss
or
xchg
pusha
inc
mov
and
pop
sbb
dec
or
shlb
inc
aad
sub
outsl
push
shrl
outsb
je
stc
fyl2x
and
popf
or
and
pop
and
adc
mov
add
cmp
popf
mov
and
aas
das
and
movsl
adc
sbbb
pop
adc
or
and
jle
lock
or
jnp
add
fsub
mov
or
sub
inc
pop
lock
rcrb
dec
xchg
outsb
sub
mov
adc
or
ss
mov
sbb
and
push
mov
jmp
mov
in
jne
enter
or
jp
sbb
in
dec
ljmp
insb
enter
pusha
or
popa
nop
aam
in
jbe
clc
mov
imul
mov
pop
sahf
and
stos
sbb
ret
dec
jmp
addr16
or
lret
sbb
mov
add
ljmp
inc
add
adc
sbb
sti
add
adc
test
and
adc
test
nop
out
leave
inc
into
aas
fs
or
cltd
sub
jl
rolb
mov
pop
jne
cwtl
xchg
dec
test
add
sub
jg
jne
out
roll
and
jo
jbe
int3
pop
cmpsl
test
xchg
fistpl
bound
dec
jns
inc
dec
sahf
out
add
mov
fcompl
inc
dec
mov
imul
fcmovnbe
or
insl
push
rol
addr16
sbb
or
out
enter
cmp
daa
mov
fistl
lret
rorb
enter
shlb
les
test
add
shrb
shlb
sbb
mov
mov
xor
mov
and
xchg
inc
mov
ret
add
jne
pop
dec
ds
cs
je
sbb
dec
pop
aas
pop
adc
test
and
mov
shrb
xor
adc
xchg
lods
mov
es
aad
fs
xchg
adc
jb
in
xchg
adcl
xorl
adc
xchg
xchg
dec
lahf
mov
adc
fimuls
in
ds
pushf
add
mov
stos
ja
sti
cmp
out
loop
pop
pushl
mov
adc
sti
gs
pop
aas
adc
pop
jle
imul
inc
jno
jle
mov
je
leave
mov
pushf
fwait
sbb
mov
sub
ror
push
and
or
hlt
rolb
clc
push
adc
add
insb
out
add
call
insl
jbe
inc
loopne
pop
imul
cmp
lret
add
ja
decl
lock
and
mov
in
mov
cwtl
pop
inc
push
push
ret
faddl
push
sub
jg
or
enter
xchg
xchg
adc
out
or
add
pop
or
cs
dec
push
xor
xor
or
pop
pop
in
pusha
mov
rclb
ret
mov
pusha
or
lods
mov
dec
test
ficomps
nop
cmp
call
sub
cmp
and
sub
jo
add
pop
hlt
sub
and
push
adc
int3
fadd
cmpb
and
jl
pop
push
jmp
cmp
jmp
leave
sub
add
sub
js
cmp
mov
fcomi
gs
out
push
add
dec
or
lea
xchg
jo
xorb
or
xor
pop
ljmp
pop
and
pusha
xchg
rclb
test
sub
add
or
xchg
fiaddl
pop
sbb
daa
push
inc
sahf
and
out
sbb
in
insb
xchg
or
inc
add
sbb
add
mov
test
cmpl
add
jmp
add
xor
jmp
fcoms
shrb
lea
and
dec
push
rolb
inc
pop
add
pusha
orl
sub
inc
mov
sub
inc
jle
nop
jle
jb
pop
xorb
jns
fs
sub
sahf
sub
out
iret
pop
inc
push
fsub
dec
inc
and
add
lds
cmp
nop
cmc
sbb
jb
push
add
shlb
or
or
inc
push
nop
gs
adc
or
pusha
xchg
jl
loopne
rolb
sbb
xchg
repz
push
add
xor
lods
adc
adc
inc
sub
and
cmp
push
out
mov
adc
mov
je
les
hlt
enter
and
clc
movsb
sbb
or
add
add
adc
sbb
loope
xchg
insl
push
push
in
call
push
sbb
inc
fistps
or
add
int3
cmp
aam
cmc
mov
xchg
push
add
inc
movsb
in
cltd
and
pop
pop
les
and
add
cmpl
dec
push
push
pushf
and
xor
in
fcomps
sub
and
cmp
fwait
push
mov
dec
nop
das
mov
adc
jnp
fsubr
sbb
pusha
sub
adc
push
mov
cmp
inc
mov
andb
aam
mov
mov
push
shr
push
rcrl
je
xorl
sti
into
or
aaa
add
mov
inc
xor
xor
aaa
or
xchg
fisubrs
jg
test
sbbb
mov
addr16
xchg
and
stos
call
mov
sti
fidivs
je
lea
int3
sbb
sahf
mov
sbb
in
lea
out
stos
cmp
or
or
push
shrb
pop
mov
lea
xchg
mov
rcll
pop
push
std
shlb
xchg
jne
nop
jmp
shlb
push
push
into
mov
inc
pop
xlat
cli
iret
outsb
test
in
push
push
sbb
ret
mov
test
movzbl
add
inc
cmp
jb
sub
mov
add
shrl
cs
add
js
xor
fmuls
push
push
push
js
inc
cmp
roll
inc
pop
or
test
xchg
mov
jnp
enter
int3
repz
mov
gs
mov
add
popa
test
popa
mov
xor
imul
xor
and
inc
aas
xor
mov
in
leave
orb
adc
rcl
enter
fwait
add
test
mov
rcl
mov
hlt
cld
and
push
sahf
sbb
in
push
daa
lea
fcom
sub
xor
mov
cmp
rorb
outsb
shll
add
aam
push
cmp
aam
adc
imul
pop
les
int3
jbe
fmuls
pop
sbb
mov
pop
das
and
push
xchg
jne
outsl
out
leave
movsl
popa
cli
inc
mov
shll
pop
dec
cld
add
out
repz
ss
xchg
xor
sahf
test
loope
and
loope
inc
and
loope
mov
sub
xorb
or
mov
outsb
fbld
mov
sbb
sarb
add
sub
inc
pop
in
loopne
sbb
dec
dec
inc
fstps
call
js
sub
insl
pmulhuw
or
outsb
xor
test
unpcklps
cmp
add
or
pop
sar
outsl
xor
add
aad
adc
jge
sub
inc
inc
pop
xchg
dec
xchg
cmp
pop
notl
movb
test
addb
sub
add
mov
push
sbb
mov
and
scas
rcll
xchg
cltd
and
nop
addr16
xchg
xor
mov
aad
mov
push
jno
add
push
clc
push
mov
push
shr
and
push
add
or
pop
mov
cmp
jb
mov
cmp
sub
jmp
push
inc
jb
inc
ja
mov
gs
jmp
cmp
or
add
add
cmp
or
fildl
add
shl
les
movsl
and
gs
inc
sahf
and
mov
sub
test
pop
mov
mov
adc
or
enter
lock
push
sbb
xchg
mov
gs
add
stc
adc
sbb
nop
hlt
int3
lock
xchg
xchg
fucomip
or
cmc
call
add
in
jle
sbb
clc
sahf
and
fdiv
fdiv
xchg
cmp
out
adc
out
rcl
jl
int3
and
dec
mov
loopne
aam
lods
shlb
sbb
arpl
mov
sbb
rorb
shlb
jbe
orl
les
or
pop
and
jns
and
mov
addr16
mov
loopne
in
orl
shll
and
add
inc
cs
and
or
xchg
pushf
cltd
dec
lock
jecxz
rorl
jns
xchg
adc
cwtl
mov
lret
ret
lock
mov
andb
fdivs
in
popa
and
int3
jbe
mov
rcll
xchg
orb
hlt
push
jne
sbb
rolb
cwtl
sbb
add
inc
inc
fistpl
nop
xor
inc
and
mov
in
repnz
push
inc
pusha
and
clc
push
lea
hlt
mov
xor
aad
or
push
fs
push
lahf
movsb
dec
add
cmp
add
mov
inc
push
and
test
outsl
sbb
jne
mov
lret
testb
mov
jmp
adc
mov
inc
dec
jbe
jge
inc
mov
push
jmp
mov
test
hlt
mov
and
notl
xor
stc
inc
and
gs
and
cmpsb
push
cwtl
mov
repnz
jae
fadd
outsl
jmp
test
andl
hlt
mull
add
or
pusha
cs
mov
pop
adc
out
dec
cmp
mov
addl
push
and
push
int
sbb
inc
push
jbe
or
and
ret
xchg
sbb
xchg
testl
std
repnz
das
rorb
jo
pop
add
inc
add
mov
pop
decb
adc
or
mov
test
ret
sub
push
mov
mov
testl
jne
sbb
add
xchg
push
andb
arpl
ss
cmp
cmp
adc
add
dec
sbbb
sahf
leave
orl
add
pop
leave
leave
popa
imul
pop
adc
adc
ficomps
and
inc
pop
mov
and
push
fwait
push
or
sbb
or
jb
jge
orl
cmc
jae
movsl
xchg
push
push
add
hlt
or
add
fsts
xor
sbb
jno
add
sbb
mov
cmp
push
nop
out
jne
inc
nop
inc
push
add
int
fcoms
push
insl
add
outsl
aad
pushl
sub
lods
jmp
loope
icebp
push
add
loopne
inc
pop
aad
add
outsl
pop
or
call
sbb
pop
or
or
or
das
fcoml
sub
fsubs
or
or
adcb
add
rclb
loope
sahf
mov
outsl
in
push
inc
adc
emms
or
xor
es
cmp
push
je
imul
push
push
sbb
jp
xor
clc
dec
shrl
push
in
in
icebp
std
push
ret
dec
call
in
mov
loop
sub
pushl
stos
sbb
sbb
or
cmpsl
call
mov
and
in
xchg
fcompl
pop
xor
pop
lods
jp
loopne
xchg
fxch
loopne
pushf
add
outsl
jmp
es
mov
sahf
fs
loopne
push
filds
cs
je
pushf
add
cmp
faddl
add
add
fimuls
sbb
arpl
shrb
push
lcall
insb
add
or
fs
xchg
adc
or
or
clc
pop
push
test
xor
or
je
xor
jmp
inc
popa
lea
cmp
push
loopne
pop
jne
and
or
add
cmp
adc
mov
inc
cmp
xchg
or
jb
fisttpl
mov
mov
rclb
cld
cmp
push
outsl
jmp
pusha
lret
js
mov
stos
xchg
insb
push
cmp
int3
mov
and
enter
imul
insb
cmpb
mov
xor
adc
or
add
and
mov
push
aad
sbb
insl
inc
loope
call
rolb
es
pop
les
in
scas
call
push
ja
pop
sti
mov
sub
sub
mov
add
pop
in
cwtl
add
and
jae
lods
insl
xorb
or
mov
aad
xor
push
bound
mov
push
bound
loopne
pcmpeqb
and
fsubrs
or
rcrb
daa
imul
iret
dec
sub
out
mov
inc
ret
call
insb
add
imul
xchg
pop
push
aam
push
and
adc
loopne
push
add
dec
push
ficomps
pop
loope
sbb
sbb
repnz
add
add
roll
mov
rcrb
test
andb
rcll
pop
ss
out
adc
pop
je
shll
pusha
mov
icebp
add
cmp
loop
dec
daa
jne
sub
mov
clc
addr16
pop
xor
adc
inc
cmp
pop
mov
incl
inc
cmp
fistpl
lret
bound
push
cmpb
adc
push
push
add
pop
fucomip
shrw
mov
sahf
pop
inc
das
push
fisubs
in
testl
pusha
or
or
enter
test
mov
aaa
cmp
xlat
jno
pop
mov
push
gs
inc
and
or
or
shlb
in
lock
shll
fsub
in
sbb
cmp
sub
scas
or
push
sti
loopne
xchg
add
inc
or
xor
cmp
ret
pop
push
pop
in
xchg
cld
shlb
add
mov
ret
mov
add
jp
int
aaa
lock
in
shrb
xchg
xor
ret
and
push
inc
enter
and
sbb
and
enter
or
sub
in
xchg
lcall
xor
or
push
adc
inc
mov
adc
mov
or
movsb
pop
adc
push
push
fs
add
mov
push
sbb
add
pop
inc
xchg
orw
orl
js
or
and
xchg
nop
movsb
and
test
sbb
mov
or
and
cmpl
mov
cmovge
cmp
and
insb
imul
arpl
or
fidivs
fwait
pop
adc
sbb
add
mov
push
sub
jl
jae
inc
in
xchg
sub
xor
pop
adc
ss
push
or
cmp
je
mov
mov
xchg
pop
test
outsb
sbb
add
lods
push
test
xchg
mov
add
ja
inc
mov
sub
mov
adc
addb
ds
fstl
and
mov
test
add
xchg
mov
dec
adc
imul
repnz
sub
pop
pop
or
iret
jbe
inc
lret
push
pop
and
xor
inc
sbb
inc
mov
mov
xor
sub
cmp
xor
fdivrs
nop
data16
xor
pop
outsb
add
push
add
jbe
rclb
push
insb
or
clc
push
sbb
mov
lds
mov
xor
sbbb
xor
aaa
enter
and
add
xchg
sbb
ja
mov
sbb
and
dec
xchg
or
dec
jle
xor
jl
xor
loop
pop
push
inc
in
mov
or
and
cmp
cmp
mov
adc
clc
xchg
add
enter
fmull
fs
push
cmp
push
pop
repnz
and
dec
scas
sub
cmpsl
mov
cmpl
pusha
repnz
leave
and
sub
shr
and
or
and
sub
lds
pop
cwtl
and
mov
adc
rclb
xchg
xchg
mov
push
pusha
adc
lret
js
ret
insb
es
call
push
xchg
push
ljmp
cmp
loopne
fmuls
dec
xchg
cs
gs
jmp
clc
dec
ja
push
mov
push
mov
dec
es
add
scas
rcrl
mov
push
dec
sti
mov
and
nop
or
inc
mov
daa
nop
xchg
ds
push
cmp
and
lcall
pushf
or
adc
dec
and
ja
push
and
lret
sbb
sub
inc
dec
push
out
fcoml
pop
cmpsl
lcall
cmc
pusha
mov
push
inc
dec
call
enter
test
push
mov
xchg
in
call
out
leave
adc
leave
push
inc
push
cmp
push
or
inc
out
and
test
pop
inc
fs
jb
inc
jo
dec
cs
and
test
and
addb
mov
cmp
mov
adc
into
lock
lcall
test
cmpl
mov
clc
sbb
jmp
dec
xchg
add
or
popf
xor
or
and
les
leave
mov
jmp
jb
bound
dec
and
mov
inc
push
push
xchg
inc
imul
es
pop
or
cmpb
add
fs
cs
lock
enter
cmp
in
scas
sbb
hlt
mov
inc
icebp
sbb
push
nop
in
jo
call
jnp
xor
push
lret
pop
notb
addb
sahf
add
add
inc
stc
imul
in
and
xchg
fdivrs
push
add
mov
pop
inc
inc
mov
xchg
pop
or
push
or
and
cmp
add
sbb
shlb
in
fs
mov
pushl
shll
push
mov
dec
cmp
das
adc
lahf
addb
clc
jb
cmpsb
push
jmp
mov
sbbl
inc
aam
xchg
or
mov
rcrl
popa
ret
loopne
inc
scas
aad
cmp
sub
mov
shrb
sahf
fmull
push
sbb
sarb
cmp
jbe
cmp
ds
inc
mov
cmp
inc
jg
jb
sahf
add
je
shrl
lea
loop
pop
cltd
ljmp
jp
lock
mov
aas
push
mov
mov
mov
dec
hlt
or
sub
sbb
push
imul
or
ja
loope,pt
shll
ja
leave
inc
sbb
xchg
into
lcall
mov
jns
adc
lods
clc
adc
inc
xchg
loop
cmp
jae
aam
js
loopne
in
ds
mov
es
and
push
mov
sub
jbe
pushl
loopne
or
clc
cmp
out
dec
xchg
mov
or
call
lods
sbb
aam
clc
jb
add
add
or
mov
add
lods
adc
pop
dec
ja
sbb
dec
es
inc
call
mov
add
sbb
lock
jp
repnz
inc
les
xchg
add
add
inc
ds
lods
pop
mov
in
ja
lds
add
mov
dec
pusha
adcl
or
jle
enter
pop
or
push
leave
xchg
or
loopne
rclb
push
mov
mov
adc
test
inc
loop
enter
jbe
adc
fsubrs
pop
cmp
jae
pop
fdivrl
xlat
imul
cwtl
testl
inc
mov
jb
scas
pop
sbb
adc
xlat
push
add
pandn
push
sbb
nop
xchg
add
ror
sub
rolb
mov
aaa
or
and
shlb
imul
dec
fiadds
lcall
jge
push
xchg
mov
mov
cmp
popf
adc
lock
sbb
mov
adc
fs
adc
je
das
fld
rorb
sub
and
mov
lcall
pop
pop
add
mov
test
inc
int
cwtl
pop
jge
mov
cmp
ljmp
cmpsl
addr16
inc
dec
nop
mov
or
sbb
add
add
add
test
dec
mov
dec
dec
xchg
push
and
add
dec
insb
inc
push
fldenv
and
shlb
jns
or
aam
rcr
mov
add
nop
dec
and
repnz
mov
mov
stos
add
dec
sub
cmp
dec
popa
dec
mov
je
dec
dec
fsts
jb
dec
lahf
jo
ss
cs
adc
scas
test
mov
nop
mov
leave
add
dec
or
mov
lahf
sub
cs
out
sub
and
jp
cmp
inc
shlb
je
cmpl
jmp
leave
int
fstpt
push
mov
sub
add
test
add
pop
add
sbb
mov
mov
add
push
add
mov
pop
adc
add
dec
sbb
pop
ret
mov
or
add
mov
sahf
mov
jp
lock
and
adc
sub
add
adcl
inc
adc
or
push
push
fstp
cmp
test
call
mov
je
add
push
int
shll
cmp
and
icebp
cli
pop
add
andps
sbb
pop
sub
and
pop
jne
push
or
pusha
inc
daa
jb
xor
or
adc
mov
test
sbb
fisttps
jg
leave
enter
js
add
jnp
push
push
pop
push
cs
popa
adc
and
sub
andb
rolb
cmp
mov
add
push
add
and
and
push
fs
or
or
mul
push
push
notb
sub
adc
es
push
xor
cmp
lcall
in
push
cmc
push
in
out
add
jmp
or
add
sbb
push
sub
ss
pop
clc
jbe
dec
call
push
js
mov
mov
add
jbe
mov
icebp
mov
loop
add
cli
add
stos
adc
js
and
adc
mov
stc
test
push
ret
pop
mov
addb
lret
sub
mov
and
movsb
mov
sbb
ficoms
xchg
test
adc
fdivrl
movsb
or
aaa
filds
mov
jns
fidivs
or
in
sub
jp
sub
or
jnp
jb
push
cmp
jbe
std
push
outsb
mov
dec
xchg
enter
dec
pop
aam
adc
cwtl
sti
ds
jl
sub
bound
pushf
jb
aas
daa
andb
or
and
and
jmp
dec
add
addb
dec
ret
mov
loope
stc
xor
dec
or
jnp
subl
mov
test
and
sbb
mov
int3
movsb
or
adc
xor
xchg
jns
push
push
push
mov
or
and
fsubr
and
adc
hlt
inc
or
xchg
push
sub
insb
inc
jmp
in
adc
push
lea
push
mov
stos
xchg
sbb
dec
cs
jge
inc
cmp
imul
cmc
rcl
lock
inc
push
xchg
push
jp
pusha
fisubs
pop
jecxz
push
hlt
xor
dec
fadds
xor
fld
fadd
mov
push
adc
push
adcb
cmp
in
ljmp
inc
mov
in
jg
sbb
and
out
mov
sbb
insl
sub
mov
sub
add
push
lret
lcall
mov
sahf
int3
or
mov
push
repz
andl
aaa
sub
jge
insb
inc
cmp
aam
adc
xchg
mov
push
hlt
imulb
push
xchg
aam
cmpsb
or
push
add
mov
cmp
inc
push
cmp
shlb
dec
or
in
push
sbb
adc
or
jbe
push
pcmpgtb
int
pop
or
sbb
in
ja
stos
pop
jmp
or
nop
insb
pop
push
lods
add
arpl
pop
pop
stos
xchg
jl
push
addr16
or
push
sbb
and
sbb
mov
stos
fiadds
aas
adc
fucomp
call
iret
jne
and
pusha
mov
jmp
pushl
sbb
mov
sub
push
jge
jne
and
popl
in
add
mov
outsb
sbb
push
add
sbb
mov
in
mov
stc
dec
and
fcmovne
scas
cmp
mov
loopne
sti
aam
cld
push
testl
neg
jbe
inc
shll
dec
lret
lock
push
dec
pop
mov
sub
mov
mov
pop
popf
shll
and
push
sub
js
out
in
sbb
bound
fsubl
mov
add
mov
sub
clc
cmp
and
adc
nop
mov
mov
push
xor
mov
or
push
popl
sysret
cmp
sub
fsubs
shrl
pop
hlt
hlt
xchg
xor
adc
ja
mov
or
push
dec
and
xchg
dec
push
mov
divl
cwtl
pop
mov
dec
aam
pop
pushf
out
cs
fdivl
and
mov
or
je
push
cs
lods
fiaddl
popa
out
cmp
test
add
pop
ja
push
sub
cmp
imull
push
stos
sub
push
fstps
das
bound
es
adc
int3
sbb
adc
icebp
iret
cltd
dec
nop
sub
and
add
fs
arpl
cmp
fs
fstpl
push
jo
jp
int3
or
push
mov
mov
jge
js
imul
pop
loop
bnd
mov
jmp
aaa
pop
test
sbb
sbb
and
imul
jo
add
sbb
cmp
ret
js
fdivs
push
and
and
enter
sub
enter
xor
cmp
enter
inc
dec
dec
push
enter
push
pop
pop
pusha
enter
fs
enter
jl
enter
test
enter
pushf
mov
movsb
test
mov
enter
mov
enter
int3
ror
enter
fcomp
loopne
enter
in
lock
xchg
out
enter
pop
or
xchg
xchg
xchg
adc
sbb
xchg
xchg
xchg
and
sub
xchg
xchg
xchg
xor
inc
inc
xchg
xchg
xchg
xchg
dec
push
push
pop
xchg
xchg
xchg
xchg
pop
pusha
push
xchg
jo
js
xchg
xchg
xchg
xchg
addb
xchg
cwtl
int3
add
fprem
push
cmpb
mov
or
xchg
xor
or
xchg
xor
and
inc
into
push
popf
xor
cmp
jb
or
add
add
and
xor
enter
push
and
inc
sbb
leave
enter
xor
adc
std
ja
setge
lea
mov
cmpsb
sbbl
xchg
out
adcl
add
add
push
cmpl
sbb
mov
scas
rorb
cmp
xor
popa
xorl
das
sar
in
mov
push
push
xor
lea
imul
shrl
or
call
fld
out
add
dec
lea
je
push
mov
add
std
or
dec
mov
add
mov
add
inc
mov
and
and
in
int
or
shr
jbe
jne
pop
outsb
or
sar
ret
pop
pop
or
push
sub
cld
lods
rcll
cmp
std
pcmpeqd
outsl
incl
sub
lea
pop
test
je
mov
mov
lea
dec
cmp
and
or
rolb
or
je
pop
jne
inc
stc
dec
sbb
jne
push
pop
out
test
pop
mov
movl
or
decl
je
mov
or
inc
test
leave
enter
xchg
xchg
xchg
mov
cs
loop
and
pop
mov
or
cld
sub
imul
mov
lea
ror
xor
dec
mov
ret
cs
add
inc
mov
and
movsl
push
mov
sub
sub
push
or
orl
push
xchg
pop
xchg
lods
sub
push
out
sahf
and
adc
or
xor
jns
jae
cmp
pop
jp
neg
sbb
mov
pop
ret
ss
cs
cmp
fstl
adc
fidivs
add
jge
mov
adc
push
add
lods
idiv
mov
test
inc
sbb
pop
pop
inc
push
cmovg
cs
add
pop
and
or
mov
sti
bound
jbe
add
scas
jae
xor
or
jmp
outsl
pop
aad
mov
lret
and
cmp
js
add
in
cmc
sahf
cmpsb
inc
xchg
mov
imul
mov
inc
insl
mov
shr
ret
fwait
lea
jbe
xor
ret
xchg
mov
sbb
lret
mov
mov
add
xor
pop
movsb
jae
inc
add
aad
jge
adc
lods
add
pusha
and
xor
fs
inc
cmp
sub
jb
xor
add
cmp
movhps
and
sbb
push
mov
imul
mov
mov
dec
lea
and
jbe
or
shl
adc
leave
sub
add
sbb
xor
in
adc
fcmovnu
mov
mov
adc
sbb
scas
or
jg
mov
movsb
and
in
xlat
push
insb
jp
lea
pusha
lods
or
cmp
sub
pop
and
sbb
adc
fstpt
test
enter
mov
pop
sbb
inc
dec
add
or
adc
mov
cmp
insb
mov
sub
pop
jbe
dec
add
mov
push
cmc
xor
sti
out
mov
jbe
mov
or
lods
sti
jle
lret
inc
add
inc
xchg
outsb
pop
loop
cmp
and
mov
add
lods
lds
fdivrs
sbb
cmp
jb
inc
push
lods
lea
aas
xchg
test
sub
clc
jmp
add
mul
mov
dec
mov
cmp
bound
out
jp
pusha
push
mov
sub
mov
adc
add
xchg
js
inc
fistpll
add
push
or
or
mov
jle
jle
test
xor
cmp
jae
lea
call
or
jne
inc
inc
push
push
rcr
ja
repnz
dec
aaa
mov
push
mov
sbb
sbb
adc
call
incl
in
mov
imul
cmp
cli
pop
ret
insb
xchg
loope
add
add
adc
fdivs
in
dec
xchg
inc
dec
push
aas
rclb
ffreep
mov
adc
stos
stos
sub
jmp
fstp
shr
lret
jecxz
jb
xor
jg
cmpsb
inc
js
dec
push
mov
data16
movsb
je
pop
mov
mov
test
mov
out
mov
stos
jecxz
rorl
pop
push
ret
cmp
ss
add
jne
jl
adc
mov
sahf
or
mov
or
adc
insl
cmp
out
inc
dec
test
je
out
ret
insb
dec
adc
and
ss
cli
mov
xor
mov
add
add
add
mov
bound
mov
mov
lea
add
lea
push
mov
sbb
mov
add
add
dec
cmp
pop
dec
imull
sub
jne
sahf
cwtl
mov
mov
cld
inc
or
cmp
sbb
sbb
mov
sti
into
into
notl
add
test
sbb
dec
push
xorb
cmp
pop
repz
cmpsl
sub
sub
pop
inc
jo
add
outsb
or
and
jl
jl
push
push
push
es
push
push
call
js
inc
xor
xchg
sbb
adc
mov
jmp
inc
ss
pop
sub
sub
pop
mov
jnp,pt
test
ret
push
push
lea
dec
frstor
jl
dec
out
in
out
adc
cmp
jne
outsb
arpl
add
cmp
add
cmp
push
sub
push
mov
inc
mov
push
push
jno
mov
aad
sbb
mov
adc
or
or
jge
loopne
daa
add
add
add
fs
mov
and
lea
push
inc
push
lea
fwait
addr16
frstor
lea
pop
jnp
and
mov
push
insl
jmp
add
rolb
and
add
mov
aam
movsb
dec
and
cli
push
xor
sub
dec
repz
fadds
push
fistps
ffreep
xchg
cltd
sub
sar
add
cltd
xchg
cmp
jge
push
add
cmp
sbb
jle
bound
push
dec
cmp
lahf
pop
push
cmp
jge
mov
add
inc
cmp
pop
lea
dec
fdivrs
lahf
hlt
pusha
adc
adc
into
add
mov
mov
push
add
test
push
loopne
test
cmp
dec
inc
fistpl
data16
rcr
mov
push
jl
outsl
pop
sub
imul
ret
add
test
scas
add
sub
test
popa
jl
sub
jmp
and
enter
pop
and
xor
lds
push
push
jno
faddl
add
shl
add
aam
stc
pop
pop
sar
add
push
fwait
loope
fs
and
ret
mov
and
into
sub
add
shrb
fisubrl
pop
add
enter
and
and
clc
test
test
mov
ret
rorb
cmp
jbe
push
mov
imul
call
pop
and
cmp
jb
jae
adcl
adc
test
push
push
cmp
nop
adc
cmpsl
aam
mov
pop
dec
xor
test
adc
push
inc
popa
sub
add
and
jle
jmp
pop
and
push
sbbl
imull
int3
pop
test
insl
movsl
xchg
out
xor
jge
scas
push
test
inc
jecxz
in
not
sub
popf
sahf
call
nop
add
adc
bound
xchg
in
push
or
orl
dec
testl
js
sub
xor
imul
jo
xchg
sbb
adc
leave
jne
int3
das
arpl
mov
test
mov
and
roll
fwait
dec
pop
cmp
adc
push
dec
jbe
sub
rcll
mov
jmp
jl
push
lcall
nop
andl
inc
mov
jb
jo
call
sbb
mov
out
outsb
test
ret
mov
and
jo
cmpl
aaa
sbb
dec
dec
fmuls
jl
push
pushf
add
mov
sub
outsl
sub
and
mov
dec
push
in
sbb
ss
pusha
mov
pop
fcoml
or
adc
jno
mov
pushl
adc
frstor
jb
inc
repnz
or
sahf
dec
mov
int3
sbb
sahf
cmpsb
and
xor
mov
lods
mov
push
mov
xor
adc
push
inc
les
push
addb
mov
jne
pop
mov
dec
mov
sbb
adc
js
sub
lods
jmp
push
adc
inc
or
sub
and
or
inc
mov
push
push
pop
push
add
adc
adc
shll
imul
stos
insl
sbb
pop
popf
push
or
jge
or
fistpl
pop
dec
jbe
decl
insl
pop
pop
add
add
icebp
and
movzwl
mov
adc
rol
mov
std
adc
cmp
shlb
or
loop
mov
mov
adc
mov
or
pop
lea
nop
lea
cmp
jge
pop
xor
sbb
out
je
lods
push
sbb
fnstcw
shrb
cmp
stc
push
andl
pop
fstpt
cmpsb
or
cmp
mov
inc
cmp
cmpsl
dec
lock
int3
test
loop
dec
mov
in
and
push
jmp
inc
or
ds
lods
sar
testb
add
out
mov
and
push
inc
out
or
mov
pop
out
or
xor
xchg
mov
push
or
mov
cmp
mov
mov
pop
lods
inc
in
jg
jecxz
or
mov
and
idiv
je
shll
and
or
mov
dec
jo
inc
jle
push
xchg
or
push
add
mov
or
sub
cmp
cmp
sbb
into
or
and
in
sbb
pop
fstpt
data16
pop
pop
push
loope
aas
out
adc
adc
or
push
or
or
roll
shl
pop
lea
or
or
or
roll
fcomps
jb
adc
or
xor
fcom
mov
add
adc
push
dec
enter
mov
sbb
in
xchg
or
add
mulb
mov
mov
push
dec
in
sub
in
inc
inc
and
or
mov
ja
sbb
xor
jnp
add
ficoms
adc
and
repz
push
pop
adc
out
into
add
xor
xor
pop
add
icebp
into
pop
fwait
cmp
add
or
sbb
inc
jne
add
or
pop
addr16
push
cmpl
pop
jae
es
loope
mov
push
jnp
or
or
daa
leave
dec
insl
clc
lods
jge
sbb
iret
pop
lahf
repz
mov
mov
mov
xor
rclb
fisttps
mov
or
int
daa
xchg
dec
push
dec
jne
rorb
hlt
dec
ss
push
pop
sbb
test
repnz
mov
adc
icebp
subb
lea
pop
pop
rorb
shr
outsl
pop
inc
jecxz
or
xchg
out
ss
sbb
ret
sarb
popa
into
sbb
imul
xchg
add
pop
add
das
repz
jns
xor
ficoml
adc
rcll
fisubrl
fisubrl
mov
or
sbb
insb
lcall
rcrb
test
sete
rorb
push
mov
iret
fidivrs
push
notb
adc
sub
and
rorl
lret
fiadds
inc
in
adc
adc
adc
or
sbb
ret
or
cmp
pusha
pop
or
adc
aaa
mov
jns
mov
xchg
mov
lock
or
lock
shll
sbbb
pop
shrb
lock
push
outsb
mov
add
add
test
fiaddl
mov
pushf
and
or
jg
mov
mov
add
jg
mov
addr16
mov
inc
dec
jge
cmpb
push
push
imul
div
pop
add
cmpsl
cmpl
pop
and
adc
pmulhuw
icebp
dec
xor
inc
mov
sbb
lret
push
mov
insb
cmp
data16
jl
nop
rcl
push
add
push
push
lret
nop
adc
jno,pt
adc
xchg
mov
psubusb
mov
ret
add
cmp
mov
pusha
adc
dec
pop
repnz
or
andl
sub
adc
and
movsl
insb
xchg
xor
sbb
adc
call
mov
call
xchg
inc
dec
pop
add
lea
push
jns
sarb
adc
repz
and
adc
pmuludq
pop
sub
or
leave
mov
mov
or
push
jns
stos
into
adc
push
push
push
outsb
lods
divb
xor
ja
lock
push
jmp
adc
or
add
pushl
push
popa
aad
bound
jbe
xor
and
sub
divl
insl
popa
insb
insb
gs
bound
je
cmp
sub
incl
jo
jb
addr16
sub
xor
cmp
sub
and
dec
outsl
out
div
outsl
and
outsb
and
jae
sub
inc
and
mov
fbstp
jb
gs
dec
outsl
jb
imul
push
popa
je
outsl
outsb
cmp
and
das
das
ja
jp
std
out
imul
ja
and
das
xor
incl
dec
imul
sub
in
frstor
ljmp
or
or
adc
in
jp
mov
pop
incl
xor
jae
ja
jb
push
sti
arpl
add
gs
jns
sbb
push
jae
jae
aaa
in
jg
mov
or
popa
bound
add
insl
imul
mov
jbe
sbb
gs
adc
add
outsb
imul
jb
outsl
sub
je
outsl
xchg
sbb
add
jns
jne
add
push
jo
add
jb
pop
test
push
arpl
in
neg
addb
jo
or
outsb
arpl
mov
pcmpgtd
je
mov
movsl
outsb
push
insb
mov
pop
insl
outsl
jg
xor
jb
gs
add
insb
jmp
fcmovne
push
push
bound
dec
jb
jo
xor
stos
insl
imul
mov
sub
data16
orb
fisttpll
arpl
bound
add
inc
gs
popa
jb
outsl
mov
ret
add
ss
mov
popa
imul
sub
sbb
jne
addr16
lods
and
addl
js
lods
cmp
pusha
insb
jns
fs
fadds
or
push
cmpsl
jb
imul
pop
imul
iretw
mov
popa
adc
popa
jp
jae
or
popa
mov
dec
add
ss
push
xor
cmp
test
mov
dec
insl
push
push
push
inc
or
arpl
inc
loope
push
outsl
call
add
in
fisttpll
xlat
jge
test
jo
push
xor
push
insl
iret
adc
jae
imul
adc
js
sbb
push
ja
imul
outsl
sub
mov
popa
addr16
jns
mov
outsl
mov
or
ficompl
mov
mov
adc
cmp
xor
out
imul
or
insb
cmp
bound
xchg
out
sti
js
cmp
xchg
mov
jl
cmp
dec
bound
mov
push
mov
or
or
jp
in
jmp
gs
push
push
sbb
imul
jle
pop
lea
popa
jno
cld
outsl
fistpl
add
sub
mov
sbb
sbb
push
outsl
out
mov
inc
imul
xor
jae
mov
or
shrl
mov
mov
pop
fildl
lret
inc
je
xchg
insb
js
push
jae
add
adc
push
fnsave
jecxz
and
rcr
push
fisubs
mov
mov
jle
iret
loope
xor
in
jne
sub
sub
test
popa
adc
imul
sti
jp
repz
jb
cmpsb
mov
lods
pop
mov
mov
mov
lahf
movsl
jo
cmp
push
stc
cmpsl
shll
gs
add
inc
ret
xor
fisubl
add
or
push
gs
sub
jb
stc
jae
jo
push
and
imul
and
ja
xor
add
imul
mov
dec
xor
out
xor
imul
std
dec
adc
xchg
clc
push
jns
ja
xchg
jo
ss
arpl
outsb
insl
sti
jne
imul
ss
jne
jns
pop
cmp
negl
jae
xchg
mov
mov
loope
imul
scas
cmp
dec
add
outsb
das
mov
aam
jge
jae
xor
jo
dec
pop
mov
mov
popa
or
pop
popa
mov
sar
dec
push
xchg
outsb
in
mov
scas
mov
bound
bound
insl
je
xor
adc
mov
xor
out
in
fsubrl
fisubs
add
dec
or
fisttps
insb
mov
outsl
sub
popa
addr16
scas
clc
gs
data16
pop
subl
mov
movl
pop
push
jae
or
xor
xchg
adcb
loope
inc
rclb
xchg
je
jne
pop
xlat
mov
fs
divb
dec
or
jl
or
bound
pushw
insl
scas
mov
add
jno
addr16
xor
push
add
inc
sti
idiv
inc
inc
inc
push
push
dec
cmp
inc
dec
dec
das
mov
das
addr16
popa
dec
jl
xor
jns
sub
or
gs
jo
sarl
pop
push
dec
push
stc
daa
stc
push
inc
inc
dec
dec
inc
xor
dec
inc
push
pop
push
push
inc
inc
incl
sub
rcll
dec
dec
inc
push
add
psraw
and
inc
push
push
inc
push
inc
pop
dec
jmp
push
mov
lea
pop
inc
sbb
push
cmc
jae
leave
je
mov
ficomps
or
or
xchg
jo
sbbb
dec
daa
add
ja
mov
insb
adc
xor
push
inc
insb
lods
jge
xor
out
dec
rcll
loope
es
dec
mov
mov
or
add
fdivs
inc
inc
or
adc
inc
popa
incb
push
xlat
test
push
sbb
xor
pop
inc
outsb
pop
jae
xchg
lcall
jge
push
mov
shrl
bound
sub
aaa
add
imul
mov
mov
or
and
rcr
add
inc
ret
mov
adc
inc
stos
mov
nopl
and
and
or
push
add
and
mov
add
and
popa
push
xor
lock
daa
sub
pop
xor
stos
les
cs
test
aad
pop
jae
nop
and
or
shlb
sbb
push
mov
sbb
inc
loopne
cmp
cwtl
jb
push
fbld
cmp
and
push
and
push
push
fcomp
in
mov
mov
or
je
adc
inc
ret
out
lcall
or
inc
add
xchg
pop
pop
pop
sub
cmp
cmp
dec
insl
xor
and
push
adc
pop
fstpt
add
push
pop
gs
out
inc
fs
pop
scas
mov
pop
repz
insl
daa
sub
lahf
sbb
add
push
sub
outsl
out
in
scas
jp
popa
das
xor
and
xchg
dec
mov
pop
add
inc
and
cli
and
and
cmp
lds
sub
xchg
add
mov
add
sub
add
and
addr16
or
cmp
or
inc
push
inc
xchg
cltd
mov
lahf
mov
std
inc
int
and
push
call
cs
jbe
cs
lods
daa
pop
gs
jbe
aaa
pop
lods
test
xlat
xchg
jp
mov
inc
push
dec
adc
jo
and
inc
in
data16
pushw
cmp
mov
inc
xchg
sbb
adc
push
sbb
es
std
mov
punpckldq
in
push
gs
lock
dec
push
gs
insb
scas
mov
sbb
mov
fstl
dec
add
mov
leave
stos
xor
imul
and
or
testl
inc
jnp
scas
mov
xor
xor
pusha
push
push
and
cld
jne
andl
shlb
jae
inc
lea
mov
mov
aaa
adc
pop
bound
ss
sbb
cmpb
dec
or
mov
jno
or
outsb
push
test
dec
dec
mov
loopne
dec
inc
andb
xor
fs
fidivs
pop
add
add
xor
sti
jo
fdivr
ret
jae
shlb
mov
jo
lods
stos
inc
add
push
pusha
mov
push
jmp
jae
imul
xor
les
addl
out
sub
inc
sub
push
dec
fdivr
aam
inc
dec
sub
arpl
inc
jo
mov
xchg
or
jae
dec
dec
push
loop
iret
aam
mov
sub
outsl
inc
push
push
sbb
rcrb
push
dec
and
dec
jo
jae
cwtl
mov
pop
adc
pop
mov
sub
test
add
jnp
inc
dec
xchg
inc
inc
inc
push
inc
push
jp
push
or
push
inc
out
sti
mov
push
inc
inc
push
inc
adc
and
push
mov
pop
jecxz
sbb
cmpsl
push
sub
imul
cltd
and
or
xchg
rolb
inc
sbb
je
aad
pop
push
add
mov
insl
fsubrl
xor
and
xor
cmp
aam
cmp
les
enter
sub
cmp
jne
fsubrs
xor
or
adc
or
xor
pop
sbb
mov
xchg
sbb
imulb
js
insb
adc
jo
insl
adc
jp
lret
xchg
mov
popa
scas
inc
arpl
dec
inc
mov
pop
inc
jne
mov
inc
imul
insl
imul
jnp
negb
push
jb
and
outsl
fcomps
divb
or
or
int
mov
adc
flds
aas
dec
cmpsl
and
ret
adc
dec
bnd
adc
je
add
gs
lcall
loope
scas
dec
insb
mov
je
xchg
andb
daa
and
add
and
mov
int
pop
lods
mov
gs
pop
lock
and
ss
insb
adc
jle
mov
mov
pop
flds
fs
shrl
sub
add
mov
in
xor
ret
addr16
push
insl
shll
inc
dec
add
sbb
pushf
icebp
push
mov
jb
loopne
ljmp
adc
cmp
pop
jbe
add
sbb
pop
adc
insb
xor
push
xchg
or
call
inc
inc
psllw
mov
lret
loopne
gs
test
test
insb
xor
gs
jo
lds
jns
sti
pop
lret
mov
and
dec
insb
cwtl
push
xor
dec
push
or
push
sbb
add
push
xor
xorb
adc
lods
es
adc
or
add
adc
pop
inc
dec
inc
sub
pusha
sbb
je
inc
mov
ret
xchg
and
data16
mov
daa
dec
rorl
or
ret
dec
daa
movsl
push
imul
sbb
pop
outsb
test
add
sbb
cmp
mov
add
insb
mov
addl
pop
mov
sbb
subl
cmpsb
pop
or
jnp
jo
das
bound
pop
sub
push
jne
inc
mov
mov
xchg
inc
dec
outsb
js
imul
fadds
enter
push
push
enter
jmp
gs
adc
addl
push
shrl
or
push
mov
stos
and
sub
add
mov
or
loopne
andb
test
mov
inc
mov
mov
subb
xlat
arpl
add
outsl
jne
and
and
pop
or
out
mov
or
push
and
add
pop
push
pop
pusha
jp
fldenv
outsb
sub
rcrb
aaa
and
arpl
xor
push
das
jne
dec
xchg
andb
jne
push
pop
mov
adc
sar
xor
pop
xor
insb
push
sub
or
xlat
cmp
dec
add
or
js
mov
or
dec
sbb
sub
jp
mov
adc
lds
int
hlt
mov
mov
push
add
or
rclb
popl
subl
sub
arpl
inc
sub
jmp
sahf
dec
data16
flds
stos
jge
fcoms
insb
ja
popa
popa
lods
fdivs
inc
mov
faddl
and
xorl
adc
and
add
dec
push
push
dec
dec
or
or
fwait
xchg
mov
mov
mov
adc
data16
inc
int3
pslld
fisubs
loopne
pop
xchg
dec
sbb
mov
adc
dec
or
vmptrld
cmpsb
js
outsl
ficoms
pop
ds
dec
mov
arpl
js
mov
mov
gs
dec
push
xchg
lock
dec
push
cmovge
out
icebp
or
ja
out
push
lcall
inc
xor
inc
xor
cmp
cmp
sub
or
subl
xor
inc
movsb
jge
sub
pop
call
xor
sub
sti
scas
jns
xor
cmp
xor
pop
or
fdivrs
fisttpll
or
hlt
ret
push
adc
outsl
mov
aam
fsubrl
add
push
jl
bound
ss
cmpsb
pop
add
mov
out
pop
outsb
or
mov
dec
test
pop
andb
inc
inc
pop
sbb
pop
orl
add
mov
and
and
or
cmp
outsl
adc
xor
inc
push
dec
xchg
and
xchg
lret
add
or
or
insl
mov
add
mov
je
push
mov
test
bound
jae
and
scas
jns
insl
outsl
jp
pop
mov
and
mov
imul
push
inc
mov
icebp
jbe
pop
adc
enter
or
and
arpl
les
or
dec
ljmp
subl
and
mov
sbb
pop
aaa
adc
mov
out
dec
and
pop
and
adc
data16
pusha
or
adc
movsb
imulb
add
jbe
push
cs
shll
loopne
adc
pop
mov
pop
adc
adcb
les
pop
pop
push
add
mov
mov
insl
xor
xchg
mov
in
icebp
je
lret
mov
mov
pop
nop
cs
inc
sub
dec
mov
dec
mov
sub
inc
dec
push
mov
inc
in
inc
xor
sub
fisttpl
mov
or
fldt
jo
mov
sti
xor
addl
cltd
fadd
sbb
outsl
cli
ljmp
pop
xor
pop
out
pop
adc
movsl
inc
dec
jg
xor
inc
lret
jbe
imul
xchg
push
or
push
xor
into
sub
inc
dec
push
dec
into
xchg
or
or
es
push
push
cmp
arpl
push
cmp
mov
push
ljmp
inc
dec
aaa
cmp
mov
stos
xchg
ss
out
inc
cmovb
add
mov
xorl
cwtl
rolb
mov
andl
cmp
xor
adc
mov
fdivl
or
and
cmp
sub
adc
out
shll
sub
aaa
dec
jg
fdivs
pop
dec
dec
pop
sub
xor
fmuls
xor
sub
jae
test
adc
and
popa
daa
dec
pop
popf
adc
insb
sbb
sbb
push
sub
xchg
adc
mov
push
xchg
and
push
push
xor
fildll
mov
test
andl
mov
or
pop
popa
add
jge
lock
adc
add
pop
jg
add
neg
fisubrs
icebp
xchg
sbb
dec
fidivrl
or
dec
push
push
inc
sbb
or
inc
dec
pop
sub
dec
cmp
into
adc
adc
pop
pop
jne
and
cmp
push
jae
xor
push
test
shrb
xor
pop
xchg
call
inc
pop
imul
and
mov
sbb
iret
dec
add
or
pop
rcr
cmpsl
dec
sub
or
mov
mov
inc
jo
push
add
pop
jno
and
subl
pop
and
cmp
add
and
mov
pop
fmuls
cmc
jno
or
aam
scas
xlat
dec
cs
sahf
or
ret
pop
xchg
adc
inc
mov
push
in
jo
icebp
sub
fs
or
cmp
jg
pop
or
mov
xor
push
dec
pop
es
pop
and
mov
jo
sub
or
pop
mov
or
shrl
mov
xchg
lock
adc
mov
loope
jmp
call
cmp
xor
inc
cmp
sub
xor
inc
sub
insb
sbb
sub
inc
sub
mov
inc
sub
xor
in
mov
inc
jns
icebp
push
loop
xor
fisubrs
les
push
pop
push
ljmp
fcompl
cs
lahf
fildll
jae
dec
test
add
in
or
xchg
push
leave
ja
loope
adc
and
stos
stos
mov
adc
jge
inc
dec
das
mov
pop
mov
dec
pop
pusha
cld
jg
insl
xor
xchg
or
or
push
add
sub
xchg
push
mov
or
mov
andl
cs
xor
add
adc
cwtl
cmp
fadds
pushf
or
pop
push
mov
sbb
lods
lods
xchg
add
in
sbb
andb
pop
mov
dec
fcomp
jb
jmp
mov
orb
test
adc
mov
cs
lret
push
aad
subl
sahf
adc
out
inc
enter
add
xchg
or
scas
sbb
scas
jp
js
inc
push
sub
ret
xorb
adc
js
sbb
mov
mov
push
mov
ret
loope
stc
icebp
pop
mov
mov
adc
push
inc
or
stos
divb
fdivl
dec
inc
add
inc
jmp
arpl
xchg
lret
in
dec
imul
push
pop
jmp
pop
movsb
pop
pop
add
pop
mov
shrl
bound
jnp
jns
mov
lods
pop
push
insb
and
mov
jb
jo
xlat
jno
add
int3
insl
mov
in
push
js
test
add
test
jb
pop
jecxz
mov
xchg
add
pop
sub
lcallw
in
fwait
outsl
add
mov
fldcw
adc
inc
jbe
mov
xor
cmc
sarb
pop
mov
imul
rol
cs
lahf
mov
lret
xor
outsl
fxch
cmp
fwait
in
and
pop
shll
push
ss
cmpsb
loope
aad
dec
add
movl
add
push
in
add
pusha
xorl
push
sub
insb
mov
inc
mov
pop
sub
cmpsl
push
sub
xor
outsb
mov
push
push
arpl
in
or
pop
adc
data16
adc
adc
dec
push
inc
in
hlt
xchg
add
testl
bound
push
lods
inc
cmp
push
jne
sbb
jne
lcall
adc
add
in
out
or
loope
cmp
sahf
or
addb
inc
or
xchg
sub
inc
xor
shll
adc
add
std
shrb
sub
sbb
mov
and
adc
add
xor
and
adc
add
xor
and
ss
push
push
push
cmp
call
add
sbb
or
sbb
or
add
add
in
ffreep
or
movups
adc
or
add
push
add
ljmp
sbb
clts
sbb
or
sub
push
and
ss
das
sub
es
and
sub
and
sub
test
jnp
jmp
add
add
mov
and
sbb
out
lds
add
add
add
in
mov
add
sub
xor
ja
fldlg2
mov
inc
add
cmp
mov
addr16
add
xchg
fsubrp
sub
pop
dec
fldcw
ret
mov
lock
or
and
and
mov
add
sub
pop
adc
loope
sub
inc
dec
sub
and
add
or
mov
pop
add
dec
inc
out
int
mov
xor
mov
sub
push
dec
addr16
outsl
fdivs
xor
jl
outsl
rcll
xchg
add
mov
popf
iret
or
add
adc
pop
add
fistpll
adc
cmp
pop
insb
ss
inc
dec
sbb
das
xchg
push
adc
sub
mov
jnp
dec
ja
insb
notb
or
aaa
jnp
fdivrs
xchg
xchg
mov
sub
mov
jmp
sub
mov
dec
addl
sbb
mov
pop
ret
pop
adc
inc
or
lret
fimuls
insb
fmul
inc
pop
ja
popa
and
ss
scas
xor
mov
or
dec
mov
lahf
xchg
lock
sbb
push
inc
addr16
iret
adc
inc
or
inc
ficomps
mov
lods
stc
daa
inc
inc
add
pop
mov
outsl
dec
notl
or
xchg
dec
js
add
in
ja
pop
mov
adc
cmp
xor
xchg
sub
mov
in
testb
adc
dec
adc
or
and
adc
add
in
cmp
and
add
adc
add
mov
adc
or
jnp
ss
dec
pop
dec
sbb
data16
or
repnz
daa
outsl
add
in
lds
and
mov
gs
fidivs
hlt
mov
and
call
push
sbb
sbb
pop
jbe
es
repnz
outsb
neg
or
and
sbb
cmp
add
add
dec
mov
mov
or
ja
add
xchg
dec
or
cmpsl
pop
stos
xchg
xchg
out
cmp
add
add
fwait
loopne
cli
adc
pop
add
test
xchg
adc
or
pop
data16
mov
cmp
data16
sub
sub
insb
fcoms
add
mov
fwait
dec
mov
mov
fwait
jae
xor
test
dec
mov
das
add
mov
push
adc
mov
mov
inc
add
mov
mov
inc
or
or
mov
dec
rorb
adc
data16
insb
mov
inc
pop
outsb
sub
packssdw
push
outsb
insb
or
and
sub
arpl
inc
or
mov
je
je
imul
mov
push
and
add
jbe
jb
outsb
leave
pop
ss
addb
push
adc
imul
sub
or
gs
lods
push
insl
adc
test
or
sbbb
xor
gs
jo
pop
sbb
and
adc
data16
repz
testb
imul
out
inc
hlt
insb
je
inc
loope
inc
imul
jae
cld
imul
ficompl
push
ja
mov
outsl
fs
subb
and
fldenv
mov
pop
jbe
xorb
sbb
mov
mov
adc
mov
insb
pop
xchg
outsb
int3
push
das
stos
mov
add
cmp
mov
jae
xchg
shlb
ret
push
inc
push
or
nop
test
xor
push
adc
test
int3
outsb
out
dec
cltd
sub
out
stos
and
lcall
xor
push
outsb
out
loopne
adc
mov
add
rclb
jb
enter
insb
sbb
or
adc
xchg
loopne
add
leave
int
push
xor
add
addr16
in
out
rolb
jne
lds
ret
push
add
adc
and
or
cmp
inc
je
sub
mov
dec
cmp
ret
add
inc
rorl
push
movb
dec
cli
dec
outsb
dec
mov
sub
push
sub
cs
mov
or
out
mov
insl
lods
push
leave
and
inc
popa
ds
popf
sub
adc
dec
cmp
mov
jbe
mov
je
push
pop
xor
add
or
mov
stos
adc
sti
cmp
push
inc
insl
jo
xor
subb
pusha
add
popf
dec
xlat
insl
sti
je
pop
imul
mov
pusha
cmp
adc
dec
sub
roll
faddp
ss
inc
adc
adc
lods
sub
int
push
inc
xchg
xchg
jmp
jl
or
jae
sbb
arpl
or
mov
aam
adc
sbb
jbe
je
outsl
jo
push
push
inc
fmull
mov
mov
inc
dec
add
add
cltd
loopne
iret
mov
or
add
add
or
adc
mov
adc
add
hlt
or
shll
pusha
or
ror
adc
push
dec
jbe
nop
mov
enter
xchg
arpl
jnp
nop
jmp
and
add
and
jb,pn
and
sub
jnp
and
daa
dec
testl
sub
daa
inc
cld
inc
sti
xor
add
add
add
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
