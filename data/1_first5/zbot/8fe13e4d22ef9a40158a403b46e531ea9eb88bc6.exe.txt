mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
outsl
testl
pop
dec
outsb
je
addr16
and
rcrb
xor
add
jns
insb
daa
push
outsl
jb
add
jns
incl
imul
add
or
push
je
sub
in
push
ficoml
add
ss
mov
push
rol
add
and
pop
push
dec
bound
arpl
pop
sbb
mov
shl
jae
insl
sbb
and
sbb
jb
popa
arpl
add
aas
mov
add
inc
and
clc
jmp
neg
and
adc
dec
push
in
int
pop
xchg
xchg
gs
ffreep
loopne
jno
out
add
aas
or
mov
add
cmp
je
test
push
notrack
shrd
daa
daa
test
mov
daa
pushf
rcrb
nop
mov
daa
cmpb
daa
daa
daa
jo
insb
push
fs
int3
daa
daa
daa
daa
pusha
pop
in
daa
daa
daa
daa
fcompl
push
clc
lock
daa
dec
push
add
mov
mov
sub
subb
add
xor
ret
jb
mov
inc
cmovo
jb
jb
xor
sub
fcomip
outsl
pop
hlt
mov
cmp
jne
push
add
add
jg
fwait
mov
cmpl
xor
mov
jmp
mov
mov
fcompl
adc
mov
add
mov
fnsave
lea
mov
pop
or
inc
cmp
lcall
add
mov
mov
or
mov
add
push
int
fnsave
repnz
ljmp
add
or
push
lahf
inc
add
adc
sbb
out
test
cmpsl
adc
and
idivb
mov
pop
pop
pop
mov
mov
push
mov
inc
adc
mov
or
dec
add
loopne
or
popw
push
push
outsl
mov
mov
out
int3
lods
sbb
pop
push
push
repz
mov
std
loopne
and
mov
add
cmp
jne
xor
mov
inc
or
or
pop
jmp
fistl
add
cmp
jne
cmp
loopne
cmp
jne
mov
mov
out
clc
test
loope
adc
jo
mov
addl
hlt
or
aam
push
mov
fimuls
addb
pop
sub
add
pop
pop
mov
enter
push
and
push
add
jno
sub
cmpl
push
push
add
popa
daa
imul
dec
imul
sbb
pop
icebp
aaa
pop
adc
pop
mov
add
sub
mov
call
enter
lea
pop
mov
insb
ret
jmp
lret
and
push
push
cmp
push
jl
jne
adc
nop
xchg
xchg
rolb
jnp
jge
mov
lock
rorb
push
cmp
mov
cmp
mov
xor
orb
and
out
push
pop
subb
jge
dec
or
push
pop
daa
lret
mov
pushf
sbb
push
or
in
mov
call
xchg
cmp
sub
repz
movnti
push
adc
pop
jecxz
loope
pusha
adc
test
imul
sub
in
push
pop
sbbb
lcall
jo
ja
and
jae
into
pop
sti
pop
or
or
push
es
add
or
std
std
test
mov
cmpl
xchg
mov
scas
push
insl
cmp
jne
inc
pop
xchg
pop
and
jno
inc
sub
inc
mov
fisttps
dec
pop
mov
dec
lea
lea
jne
rol
loope
lock
dec
sarl
ret
insb
loop
mov
hlt
pop
mov
cmpsb
adc
pop
jmp
or
add
adc
or
jmp
jbe
ja
or
outsl
adc
cmp
lahf
cmp
push
push
es
cmp
rcll
insl
aad
setp
andl
pop
jo
jns
ljmp
sbb
enter
inc
pop
pop
pop
roll
adc
jne
adc
add
outsb
dec
pushf
mov
cmp
adc
div
inc
pop
lcall
xorl
rol
push
inc
cmp
jg
mov
imul
cs
js
pop
mov
lret
xchg
pop
add
pand
stc
lret
mov
ds
shrb
jne
testl
lea
and
dec
mov
fstl
sub
mov
push
add
mov
subl
add
xlat
shl
xor
out
push
sbb
cmp
je
or
jne
or
loopne
jle
sub
neg
pusha
xor
push
add
repnz
cmp
cmc
div
je
push
adc
or
stos
xorb
sub
sub
loop
cmp
xchg
inc
out
rorb
push
mov
mov
or
inc
push
xchg
paddd
adc
push
stc
cmp
jne
pop
jg
cwtl
rolb
orb
and
scas
cs
inc
scas
add
shrl
rcll
sub
dec
pop
cmp
clc
leave
lea
shlb
adc
jbe
sub
outsl
rcrb
pop
test
cmc
shl
mov
test
je
loope
rorl
out
mov
popa
xchg
sarl
xor
int3
xchg
ja
adc
int
mov
push
scas
push
mov
push
dec
push
push
dec
jle
cld
xor
push
cmp
or
andl
push
pop
fsts
and
mov
sti
sub
mov
sti
int
pop
inc
xor
cmp
movl
test
mov
push
cld
js
adc
mov
jle
movb
pop
fs
push
shll
dec
das
pop
ret
push
ret
sti
sub
pop
pop
scas
add
pop
add
test
cld
xchg
mov
lcall
xlat
add
jo
mov
fmuls
jl
xor
jmp
or
or
pop
cmp
push
jne
dec
mov
jge
into
adc
add
lret
jmp
dec
sbb
aaa
fs
bound
pop
xlat
clc
cmp
xor
cmp
push
or
ds
jg
fdivs
test
jns
ret
cli
add
aas
nop
hlt
jmp
sub
sbb
adc
and
pop
xchg
hlt
mov
adc
mov
or
pop
pop
mov
push
mov
push
pop
mov
jmp
mov
jnp
mov
jb
sbb
push
or
sbb
ficoml
xor
mov
jno
add
sub
mov
sbb
mov
cmp
jl
cli
movl
mov
mov
or
and
jl
lock
sub
inc
or
add
out
iret
rolb
cld
dec
std
jbe
clc
adc
adc
mov
or
lahf
in
pop
insb
rolb
pusha
fwait
or
ret
je
outsl
sti
inc
push
push
push
xchg
xor
cmp
sub
add
and
xor
call
jmp
ret
aas
lret
add
push
mov
or
xor
jo
stos
pushl
inc
push
xchg
or
fstpl
sahf
out
fdivs
testb
and
xchg
repnz
and
arpl
mov
xor
pop
cmp
and
fstpt
mov
jecxz
in
aas
subb
jle
rorb
rol
shll
jg
lock
push
movl
push
aad
push
dec
mov
xchg
or
loop
xchg
lea
and
or
loopne
fisttpll
and
or
dec
mov
rolb
mov
lea
rolb
mov
mov
outsl
sub
lds
sub
mov
mov
add
call
jbe
test
lret
jb
mov
clc
add
fisubrs
sbb
lret
and
adc
add
or
jnp
mov
adc
pop
in
fnsave
mov
mov
adc
push
jecxz
fdivrs
pcmpgtb
mov
out
cltd
scas
clc
add
cmp
jp
or
mov
es
sub
fldl
or
sbbb
jo
sbb
jnp
andl
cld
dec
adc
in
rorb
jne
mov
rcll
jae
xchg
lods
sub
add
xlat
mov
repz
jae
icebp
ret
mov
sub
addl
into
push
fsubrl
add
roll
mov
add
or
jo
lea
or
pusha
push
shl
add
shlb
mov
ss
inc
mov
or
mov
mov
mov
pop
cmp
mov
mov
dec
xor
or
mov
hlt
out
add
int
mov
jno
jne
or
fcompl
sbb
mov
and
or
bound
push
cmp
jg
pop
jbe
push
mov
popw
je
cwtl
jbe
push
push
scas
insl
pop
xchg
push
addb
lock
inc
dec
jp
jmp
adc
cmp
mov
sub
jge
pop
adc
push
sbb
clc
jo
mov
dec
or
bnd
add
or
sub
mov
pop
cmpl
sbb
rcll
pop
cmpsl
push
scas
dec
jne
lahf
orb
fidivs
sbb
shll
push
mov
adc
or
addl
pop
clc
outsb
jle
inc
cld
push
cwtl
cmp
adc
cmp
clc
dec
add
and
cmp
add
testl
jmp
xchg
jb
inc
test
or
mov
push
sub
sbb
pop
and
push
jne
aaa
jmp
xchg
or
mov
push
xlat
jno
mov
jbe
xor
push
pop
push
mov
xor
add
add
xor
pushf
sarl
sbb
push
mov
or
test
lds
jae
jmp
movsl
mov
imul
sbb
and
aaa
loop
mov
pop
lock
add
leave
push
js
gs
jne
jo
mov
or
lcall
pop
clc
mov
sub
adc
jne
test
setns
mov
decl
jl
fwait
push
sub
push
jns
clc
enter
bound
test
sbb
or
ret
fdivrs
dec
std
lock
mov
xchg
inc
les
sub
or
fldl
adc
jb
jle
dec
push
lea
shl
lock
test
je
addr16
add
jg
adc
orl
jmp
push
insb
aaa
outsb
movsl
pop
lock
adc
or
or
sbb
into
push
subl
cmp
mov
xchg
or
xor
push
clc
das
sbb
lret
xor
js
xchg
lret
cmp
or
add
sbb
scas
nop
cs
in
jne
sub
lds
adc
test
mov
add
sub
fiadds
push
nop
inc
dec
adc
push
adc
std
mov
outsl
imul
add
or
cltd
cmpsl
mov
sub
jno
cli
sti
shll
jg
sub
add
hlt
ficomps
mov
sub
mov
mov
and
lds
out
das
adc
pusha
mov
fldl
cld
nop
push
cmp
mov
lds
std
push
mov
sub
test
xor
lret
dec
add
pop
mov
sub
sub
out
shrl
aaa
cmpsl
sbb
dec
js
orb
cmp
sub
sbb
test
pop
adc
adc
xor
add
inc
mov
adc
pop
push
les
sbb
fistl
rclb
and
cmp
fildl
cld
je
cmp
mov
push
sbb
jle
mov
fwait
sbb
decl
xchg
test
jle
or
mov
nop
call
or
fstps
mov
movsb
jmp
stos
scas
popf
push
xor
out
push
adc
int3
fidivs
or
ret
in
sar
fbld
xor
mov
dec
inc
pop
or
adc
in
mov
ret
push
jmp
repz
mov
jne
sub
bound
rorb
cmpl
cmpl
adc
mov
mov
xor
push
inc
adc
mov
and
movsl
mov
in
and
add
into
push
or
adc
lds
or
nop
jle
test
jne
cwtl
ja
icebp
pcmpgtb
jo
mov
mov
dec
in
sub
sbb
loopne
or
cmp
push
push
inc
jne
xchg
jbe
jne
xor
aas
mov
fld
imul
aas
mov
add
sbb
je
ljmp
sbb
jg
sub
inc
add
adc
sarl
mov
outsl
jo
inc
repz
leave
jmp
mov
jmp
mov
outsl
add
xchg
jo
repnz
sbb
in
idiv
adc
adc
stc
add
rep
xchg
int
inc
je
cld
lea
xor
std
xor
cld
pop
ds
inc
mov
fldcw
aaa
jbe
add
mov
fists
cs
mov
push
movb
test
mov
scas
clc
jg
mov
sub
cli
dec
sub
jae
mov
call
push
sbbb
jmp
mov
je
cmp
and
pop
cld
je
pop
xor
push
sbb
imul
in
inc
xor
scas
jb
or
and
jne
sub
sbb
lock
adc
jae
subl
adc
mov
scas
xor
cmp
jbe
lret
mov
inc
inc
sbb
ret
ds
dec
lds
push
xor
mov
mov
inc
inc
dec
hlt
or
jg
add
ret
ljmp
cmp
jne
dec
cmpsb
loope
fidivl
sbb
mov
sti
jmp
loop
push
adc
add
and
je
mov
cmp
jne
push
mov
mov
cmp
jne
adc
add
jne
add
in
add
cmp
jne
shr
aam
fstp
sub
push
mov
shr
or
iret
mov
inc
dec
dec
pop
cmp
fadd
or
inc
pop
and
sarl
pushl
mov
cmp
jne
dec
dec
dec
and
lcall
jecxz
or
or
mov
je
mov
adc
mov
inc
or
stos
adc
clc
mov
push
mov
in
fisubs
mov
pusha
and
add
je
or
je
and
je
pop
je
cmpsb
dec
jnp
xor
dec
and
out
push
divl
add
sub
or
cmp
ja
lea
jg
sbb
add
push
es
int
or
jge
jmp
hlt
sti
incl
jle
js
pop
sub
jmp
inc
inc
jmp
mov
xchg
andnps
popa
jb
xchg
and
jbe
push
adc
or
data16
stos
aad
cwtl
pop
xor
mov
pop
pushf
jecxz
pop
mov
mov
xlat
icebp
jbe
jbe
sub
inc
mov
dec
jne
pop
mov
adc
sub
jbe
cmpsb
mov
subl
test
fsubrs
adc
lea
fldt
mov
call
pcmpeqb
lods
xor
sbb
push
and
xor
push
test
xchg
jge
mov
xor
and
stc
jmp
fstp
fldt
insl
bnd
in
xchg
loopne
dec
jg
aas
xchg
cmpl
add
add
stc
in
pushf
or
ret
mov
adc
enter
mov
out
sbb
lret
jg
xchg
xchg
and
inc
mov
mov
cltd
lock
popa
sbb
xchg
add
hlt
and
mov
scas
cld
lret
mov
xor
leave
sbb
mov
mov
inc
jbe
imul
cmp
mov
mov
jmp
lods
lods
inc
cmpb
xlat
fadds
outsb
xor
xchg
mov
or
push
push
int3
into
sbb
rorl
mov
ljmp
test
enter
mov
inc
push
and
daa
lret
into
pop
inc
test
call
pop
inc
in
mov
mov
addr16
leave
repnz
bound
and
incl
outsl
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
inc
mov
call
stos
mov
cmp
or
mov
pop
out
sub
imul
idiv
sub
pushl
jl
xor
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
lcall
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
jmp
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
mov
push
cmpsb
scas
mov
pop
or
addl
cmp
xor
cli
call
pop
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
movsb
mov
and
decl
repz
mov
subb
and
and
outsb
bound
xor
cld
lret
jmp
ss
sti
outsl
shll
movsb
cmp
jne
push
pop
and
add
fcomp
cmp
sub
addb
movzwl
inc
pop
fisubrl
push
test
jo
adc
pop
mov
dec
dec
fildl
in
xor
inc
hlt
mov
sbb
jns
clc
data16
add
and
out
mov
jmp
inc
inc
js
data16
or
leave
out
add
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
sahf
ret
push
dec
popa
jae
push
popa
insb
jne
fninit
fwait
or
pop
cmp
sahf
lock
jmp
daa
xlat
mov
xor
mov
inc
lret
ja
jle
adc
or
push
mov
or
dec
mov
jne
dec
mov
xor
out
jne
mov
mov
mov
cs
fsubl
in
add
pop
or
or
mov
sbb
aaa
int3
or
idivb
rcr
test
or
daa
popa
sub
movups
fs
xchg
insl
and
cltd
or
lock
adc
mov
or
push
cld
ret
cmpsb
ret
cmpl
test
jmp
pop
add
mov
mov
sub
mov
pop
test
inc
add
sbb
in
cmp
je
pop
mov
add
jae
daa
push
mov
mov
push
sbb
cmp
ljmp
lods
mov
mov
mov
sar
push
loope
loop
cmp
mov
dec
jmp
stc
push
std
sti
sub
jb
bswap
add
add
and
jmp
mov
lds
mov
lahf
rclb
mov
aad
lock
scas
xor
test
into
and
add
loop
dec
cmp
adc
and
das
add
lea
inc
push
sbb
loope
pop
pop
and
inc
mov
push
dec
setne
mov
rolb
cmp
mov
mov
mov
shrb
push
call
mov
cmp
fdivl
cmp
fdivl
or
jne
or
push
insb
adcl
pop
popa
lds
dec
and
sbbl
mov
test
test
mov
pop
shl
cmp
mov
mov
cmp
push
dec
jle
jne
mov
pop
lock
jecxz
push
xchg
jmp
loop
shl
push
aam
push
add
repnz
je
pop
add
mov
shrb
mov
pop
push
mov
jge
inc
pop
pop
add
out
mov
mov
cmp
inc
mov
cmpsb
aaa
mov
inc
dec
rol
in
mov
fwait
xchg
daa
pop
push
les
or
sbb
fadd
cmp
pop
lock
pop
mov
in
lock
decl
jle
fistpll
mov
add
sbb
add
dec
jne
dec
out
or
fucomi
sbb
add
sbb
jecxz
loope
ss
dec
cmp
xlat
lahf
push
enter
enter
ds
dec
sub
pop
lcall
xor
call
lahf
in
push
pop
add
mov
lcall
mov
hlt
xor
shlb
sbb
imul
cld
mov
and
rorl
or
or
hlt
hlt
or
or
rcll
xor
push
sbb
xchg
xchg
cmpl
add
and
pop
movb
sbb
add
leave
int3
in
push
call
xor
mov
push
fwait
xchg
pop
iret
cs
lret
and
scas
dec
sti
movsb
orb
jae
sub
pop
push
push
aad
and
sbb
jmp
jne
sub
rolb
add
addr16
pop
cmp
sbb
loope
pop
add
push
adc
loop
popa
addl
cmp
clc
dec
aaa
insl
jecxz
pop
loopne
inc
add
or
test
or
cmp
inc
mov
dec
adc
outsb
add
mov
rorl
icebp
xchg
notb
out
inc
cmp
adc
popa
xchg
loopne
je
dec
sbb
sub
jbe
subb
test
into
notb
test
pop
jbe
dec
xorl
jae
enter
adc
cmc
mov
jne
push
lea
test
je
orl
fimuls
push
cmp
push
sub
sbb
or
mov
je
sub
mov
fstpt
outsl
or
inc
add
jge
loopne
xchg
add
pop
insb
jmp
mov
iret
mov
mov
and
mov
cmp
sub
pop
dec
or
add
jne
fdivs
ret
push
or
push
pop
cltd
pop
add
lds
mov
out
sub
lock
add
addb
cmp
jne
inc
or
mov
inc
inc
pop
call
adc
fsubl
jne
testb
jno
ficoms
sar
out
loop
outsl
inc
jmp
sbb
sbb
imul
sub
adcl
shll
mov
add
xchg
cmp
icebp
adc
or
arpl
jb
inc
setge
jo
xor
cmpsb
movl
or
test
jg
hlt
mov
and
push
addl
push
mov
rcll
and
mov
mov
test
mov
cmp
fcoms
pusha
add
testl
stos
adc
mov
mov
adc
cmc
lea
jae
mov
mov
mov
enter
xor
das
xchg
xor
xor
mov
ret
mov
xor
and
sub
pop
cmp
push
sub
add
cmp
pusha
add
adc
call
xor
push
cmp
sub
ljmp
mov
add
jmp
sub
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
mov
jmp
mov
jmp
mov
xchg
xor
jmp
mov
push
pusha
jmp
mov
popa
pop
data16
xchg
or
jecxz
lea
mov
je
push
outsl
xor
imul
js
test
mov
je
add
cmpsb
add
or
push
inc
sti
sub
mov
rol
push
sub
inc
or
push
mov
ja
mov
or
ja
cmp
push
jb
inc
pop
aas
mov
jg
jne
cmp
xchg
push
repnz
cmp
or
and
aas
mov
xor
pop
stc
mov
xchg
test
dec
mov
hlt
inc
outsl
add
fdivs
dec
add
push
clc
mov
inc
insb
xor
in
jmp
mov
cwtl
cs
or
cltd
jbe
fistpll
mov
cmp
jle
fnstenv
fcom
rcrb
xor
sbb
add
or
loop
and
mov
add
cmp
adc
pminsw
hlt
movb
dec
jg
ret
and
mov
mov
sbb
sti
pop
clc
jbe,pt
add
xor
test
dec
jne
pop
pop
pop
inc
lret
push
pusha
sbb
add
dec
add
push
pop
sub
sbb
adc
daa
shl
adc
fidivrl
idiv
add
test
mov
es
sti
mov
dec
loopne
mov
mov
out
push
shlb
mov
fsts
mov
inc
pop
out
addr16
outsb
jb
add
rolb
sbb
mov
adc
ja
add
mov
mov
leave
outsl
lods
mov
inc
popa
push
cmpw
push
mov
add
mov
pop
sbb
dec
ljmp
cmc
hlt
add
fsubs
add
inc
inc
or
jbe
ret
mov
ror
scas
sahf
adc
cmp
xor
and
roll
and
addr16
sub
dec
loopne
cmpl
push
mov
mov
incl
out
loop
into
inc
inc
sbb
mov
int3
or
pop
add
push
jne
ds
adc
mov
inc
or
xor
xor
bound
jnp
adc
cli
sub
push
xor
push
jne
cmp
je
push
mov
cmp
add
pop
cmp
aad
fldl
mov
and
adc
scas
jmp
mov
pusha
sti
rcrl
imull
inc
and
pop
cmp
jbe
mov
in
repnz
pop
pop
call
clc
dec
jl
lock
clc
lahf
stc
fldl
outsb
addr16
mov
push
sbb
add
test
push
or
cld
push
pop
jmp
jne
pop
xchg
inc
inc
jg
mov
orb
jns
mov
dec
mov
fldcw
jmp
jbe
xchg
adc
test
or
jmp
and
add
and
push
inc
pop
popw
add
jecxz
inc
add
mov
cmp
clc
mov
outsl
push
cwtl
mov
mov
das
stc
mov
movb
mov
cmp
ds
mov
cmpsl
sahf
daa
sbb
cmc
out
push
dec
or
push
mov
rolb
mov
mov
cmpsl
add
bound
xabort
jg
mov
in
icebp
jmp
lea
cmp
push
pushf
mov
sub
push
mov
sbb
cld
out
btc
jns
ja
mov
and
fldl
fistpl
cmp
xchg
imul
mov
jge
xor
or
push
mov
mov
cmp
ret
cmp
je
int
movsb
add
xchg
or
je
add
scas
add
pusha
jmp
inc
add
jns
jmp
push
cmp
or
mov
or
or
addr16
in
lahf
mov
jae
jbe
cmp
or
push
mov
das
add
jp
scas
loopne
pop
add
pop
pop
xor
scas
push
jl
add
and
fnstcw
mov
pop
cld
repnz
fnstcw
or
or
adc
xchg
aas
add
inc
or
aas
ret
sub
je
dec
mov
push
cmp
jle
cld
add
cmp
pop
and
mov
jae
and
and
add
jo
out
popa
cmpl
adc
cmp
je
cmp
mov
jp
fldl
sub
scas
rorl
add
mov
je
mov
mov
lds
push
sbb
dec
clc
add
out
mov
mov
jmp
adc
cmpsb
xor
mov
sub
sbb
mov
dec
jmp
outsb
xchg
int
sub
add
cmp
fs
dec
jne
or
or
mov
cld
jge
aam
cmp
pushl
add
dec
jmp
and
inc
pushf
sbb
repnz
add
pop
dec
jne
lods
push
lcall
jb
lock
xchg
jmp
xchg
roll
jno
mov
rcr
sub
rolb
rorb
and
mov
pusha
or
mov
push
pop
push
jecxz
add
and
cltd
rorb
jo
fidivl
mov
aam
notl
or
lods
push
stos
mov
add
inc
aam
lds
xor
cmc
mov
jp
mov
adc
dec
inc
es
not
dec
rorb
outsl
hlt
adcl
pop
es
jl
pop
rorb
cmp
jge
sub
sbb
adc
mov
outsl
push
or
adc
shr
in
jmp
jmp
push
insl
and
sbb
ss
xchg
lret
mov
sub
mov
mov
add
filds
stc
add
lea
inc
dec
movsb
push
sbb
cli
mov
sub
jns
cltd
mov
push
mov
jbe
std
sub
xlat
adc
imul
add
gs
cmp
inc
xor
push
mov
lea
lock
adc
mov
add
mov
mov
inc
pushf
xor
shrl
push
insb
dec
js
mov
inc
jb
adc
pop
lock
cmp
mov
add
pop
lret
fsubl
pop
mov
bound
or
andb
test
push
daa
lock
jne
sub
or
sub
mov
loopne
je
sub
and
fistl
cld
jmp
rorb
fcmovbe
cli
pop
cmp
je
or
push
push
cmp
sub
pop
mov
or
cmpsl
push
push
das
loopne
push
testb
daa
push
mov
inc
lock
stos
adc
push
cmp
cmp
imul
mov
jno
push
push
nop
pop
cmp
jg
jo
imul
test
sub
fldl
sub
push
and
cmp
inc
push
leave
sub
clc
push
orl
repnz
pushl
mov
pusha
inc
add
pop
xchg
subb
add
add
add
add
cld
mov
shlb
xchg
je
inc
mov
inc
xchg
or
fs
inc
mov
pop
inc
and
push
ja
je
cvtps2pd
or
add
inc
pop
ss
jg
sub
stc
mov
and
ret
mov
nop
pushf
jl
pop
sbb
sub
cmp
push
lods
add
ret
dec
push
or
sti
mov
pop
push
lea
bound
mov
lock
dec
faddl
cmp
xchg
add
sahf
push
xchg
push
mov
mov
push
mov
push
das
rcrb
jl
push
mov
adc
lea
out
cmpsb
mov
inc
sbb
cs
out
push
add
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
cmp
cmp
add
je
mov
dec
mov
in
add
cwtl
clc
jmp
adc
cli
scas
fwait
or
adc
jmp
lcall
add
pop
jo,pn
cs
adc
cmp
mov
call
xor
inc
pop
inc
loopne
xchg
ja
jl
adcb
cmp
adc
jp
mov
call
loopne
inc
sub
ret
mov
repz
pop
jbe
test
dec
push
mov
into
add
int3
jg
out
inc
mov
pop
add
enter
mov
aam
outsb
es
or
dec
repz
adc
and
add
adc
adc
daa
mov
add
test
outsb
into
int3
sbb
and
icebp
jmp
mov
jb
test
xorl
ja
and
orb
xor
mov
cs
clc
inc
add
cld
or
clc
push
push
add
push
mov
mov
add
stc
mov
pop
ret
pop
inc
ficoms
mov
cmp
xor
xor
cmp
pop
push
pop
cmp
or
or
xchg
cmp
adc
bound
pop
add
cs
sbb
cmpsl
loopne
dec
jmp
and
clc
mov
dec
mov
push
mov
jno
inc
js
adc
push
pop
dec
std
mov
inc
mov
cmp
add
rorl
insb
xor
mov
cld
adc
jb
ds
add
adc
dec
jne
lea
add
loopne
or
mov
mov
push
test
push
popa
jge
or
in
pushf
sbb
pop
and
push
adc
sub
jae
sub
push
sub
std
adc
sub
mov
cmp
cmp
or
fildll
sti
add
add
inc
ljmp
pop
pop
icebp
mov
jo
add
je
in
lock
push
or
or
cmp
adc
popa
adc
in
sbb
das
sbb
nop
mov
ja
outsb
enter
and
sar
mov
jne
and
add
cli
adc
pop
pop
ret
clc
insl
xchg
xchg
aas
test
lsl
or
pop
cmc
sbb
inc
push
push
in
add
hlt
mov
push
or
mov
push
call
inc
ja
out
faddl
mov
xor
cmp
xor
cmpl
or
cmp
adc
movzbl
add
shrb
push
retw
xor
les
and
out
cmp
ffree
cmp
je
andl
mov
xlat
push
fucomip
add
push
push
in
sti
jle
das
sbb
add
fmull
scas
add
mov
sub
pop
mov
lea
mov
inc
in
jmp
push
call
lahf
xchg
jge
cmp
jge
mov
cltd
sub
xorb
leave
jo
xchg
add
mov
rorl
mov
cmp
cwtl
xor
int3
inc
sub
nop
sbb
inc
in
inc
add
fwait
insl
xlat
mov
or
add
mov
hlt
add
jp
sbb
or
dec
lods
sbb
xor
mov
outsb
lea
shl
fadds
jne
lret
out
sahf
push
mov
icebp
sub
rolb
inc
aas
inc
daa
inc
scas
aaa
xor
dec
es
jne
inc
cmc
push
sub
xor
fiadds
mov
in
xchg
cmp
cs
pusha
mov
movsb
adc
dec
enter
lret
add
movl
out
xor
xchg
loop
sbb
loope
adc
or
std
jmp
cli
aad
fists
clc
rcrb
lret
jnp
sub
and
xor
cmpsl
icebp
dec
clc
pop
mov
mov
inc
mov
add
xchg
xor
inc
adc
adc
test
xchg
mov
hlt
mov
sub
sbb
sbb
mov
jnp
jne
mov
inc
mov
xchg
icebp
das
ss
sti
mov
pop
push
xchg
push
dec
inc
call
cmp
gs
sbb
mov
adc
mov
pop
jne
sbb
sbb
xchg
add
rolb
cwtl
push
inc
ret
pusha
mov
inc
push
loope
loopne
mov
movsl
jp
push
mov
enter
push
clc
push
sti
jbe
imul
std
inc
mov
cmpb
mov
vmread
pop
fsubl
jle
jbe
xor
fiadds
lahf
mov
inc
sbb
scas
or
or
cmc
mov
or
mov
inc
add
loope
cmpl
in
sub
mov
inc
cmp
outsl
jg
jno
sub
sbb
mov
cmp
andl
pushl
xor
out
stos
lahf
cwtl
lea
sbb
jg
movb
pop
mov
push
push
mov
mov
inc
mov
icebp
or
cmp
dec
add
and
out
hlt
ljmp
jb
gs
xor
cs
insb
cmova
dec
outsl
outsb
addr16
popa
je
dec
sub
or
popa
insl
gs
daa
scas
fmul
push
movsb
neg
jo
push
fucomip
outsl
pop
movb
inc
xor
pop
push
push
lock
add
add
xchg
sbb
sub
add
jo
sub
sbb
test
faddl
cmp
or
dec
cmpsl
rorb
jge
cmp
int
push
add
cmp
add
mov
and
and
push
inc
sbb
jmp
aas
scas
imul
lods
repz
or
out
mov
fildl
in
mov
repz
or
push
jmp
in
xchg
pop
repnz
adc
add
adc
mov
je
inc
cmp
jne
adc
xchg
incl
mul
sub
testb
jbe
add
fneni(8087
addl
or
xchg
pop
sub
repz
test
jae
ret
iret
adc
jg
outsl
data16
popa
jb
cvtps2pi
insb
gs
aaa
pop
jl
jbe
inc
ret
inc
dec
dec
xchg
daa
loope
insb
xlat
mov
push
xchg
adc
add
pushl
ds
push
lock
mov
arpl
jne
das
sarb
cltd
xor
cs
adc
orb
outsb
adc
call
sbb
and
aaa
mov
out
add
xor
lret
loopne
pop
jns
mov
fistps
cmp
xor
push
sub
orl
sbb
ret
sub
push
jno
pop
or
daa
in
xor
mov
paddsb
dec
inc
xchg
inc
hlt
test
ja
mov
add
jl
sbb
arpl
orl
cmp
mov
pusha
jmp
and
cmp
sub
add
popa
and
mov
add
xor
push
pop
mov
jo
enter
mov
push
inc
dec
test
shlb
pop
mov
jae
les
push
push
mov
sub
pop
filds
sbb
mov
outsb
les
add
ret
daa
sbb
dec
lock
cmp
sbb
mov
push
jl
or
and
cmovns
loop
nop
add
pop
js
push
mov
imulb
push
add
js
inc
fistps
mov
aas
or
ret
fadd
jo
icebp
add
test
loope
decl
rorb
rorb
mov
aas
js
mov
inc
mov
mov
dec
inc
cmp
ja
mov
aas
add
adc
inc
jmp
cmp
pop
add
pop
cld
ja
fdivrp
das
push
fcmovb
jmp
or
mov
adc
sbb
lods
xor
and
lret
add
jmp
mov
pop
movsl
pusha
add
dec
lret
shlb
aaa
mov
or
cmp
jb
or
dec
movb
mov
xor
mov
lods
jbe
pop
add
cmp
lea
and
sub
ret
lock
add
jbe
loope
dec
cli
push
imul
pop
or
ja
xor
test
add
xor
roll
cmpl
aas
and
je
cmp
adc
sbbb
sti
orb
mov
call
push
cwtl
and
or
mov
pop
jmp
dec
dec
dec
cld
mov
pop
pusha
mov
or
inc
lcall
lock
adc
dec
cmp
movl
mov
ret
pop
xlat
xor
xor
mov
mov
inc
cli
xorb
sbb
mov
mov
inc
and
out
scas
sbb
and
stos
pop
stc
gs
lret
dec
push
xor
pop
adc
rolb
int3
decb
xor
inc
push
and
sbb
mov
or
hlt
nop
or
fcom
dec
outsl
jmp
adc
or
mov
cmp
stc
cmpsl
das
sub
pop
push
cltd
loopne
add
pusha
xor
test
mov
and
inc
dec
shl
push
mov
test
and
hlt
cmp
inc
lahf
pop
xchg
xchg
pop
mov
or
mov
lahf
cmpsb
fcompl
pop
cmp
mov
sub
shrb
std
stos
insb
add
loopne,pt
adc
xor
sbb
xchg
imul
nop
mov
mov
pop
lea
push
push
mov
mov
sbbb
dec
mov
push
mov
sbb
jp
jno
xor
out
nop
bound
xchg
jno
outsl
data16
incl
mov
in
mov
outsl
repnz
inc
adc
mov
into
mov
mov
subl
add
or
xchg
insl
push
or
inc
mov
or
dec
pop
and
adc
sbb
sub
dec
dec
mov
adc
mov
cmpb
dec
mov
mov
lods
pop
fs
lahf
sub
stos
iret
inc
jbe
lahf
and
and
or
mov
sub
nop
mov
mov
jmp
js
mov
push
dec
or
sbb
mov
outsb
push
and
inc
cmpl
movsb
pop
loopne
out
mov
scas
or
jmp
push
mov
xor
sub
test
imul
mov
rclb
adc
lods
lret
mov
push
jne
fcmovnb
mov
xchg
ja
mov
mov
jae
or
or
cmpl
das
sbb
sbb
leave
push
pop
int
fs
mov
pusha
sub
adc
xchg
push
push
add
pusha
lods
aas
xor
inc
add
jbe
add
sbb
add
push
or
dec
repnz
inc
popa
insb
cld
pop
xchg
dec
popa
insb
pop
add
cs
and
sbb
or
jbe
cmc
fs
gs
push
gs
jb
jns
scas
insl
fidivrl
inc
imul
inc
push
fistpll
inc
outsl
arpl
inc
gs
jne
je
dec
outsl
je
imul
mov
imul
arpl
or
sti
imul
sbb
jb
xor
lcall
push
outsl
insl
bound
outsl
js
imul
ja
nop
or
mov
push
andps
outsb
dec
inc
xor
je
jl
sbb
add
or
inc
sahf
pushf
add
sub
dec
dec
dec
and
adc
inc
dec
dec
adc
fucomi
in
add
cld
setae
in
call
in
xchg
xchg
xchg
xchg
aam
int3
enter
xchg
sarb
mov
test
cmp
cmp
cmp
xchg
nop
mov
test
cmp
je
insb
push
fs
pop
pop
cmp
cmp
push
push
dec
dec
cmp
cmp
inc
inc
cmp
cmp
cmp
xor
sub
or
cmp
and
sbb
mov
xchg
sbb
iret
mov
es
sysenter
mov
mov
adc
add
jb
mov
pmuludq
jb
jb
in
call
jb
aam
jb
jb
int3
enter
jb
jb
mov
jb
lods
test
mov
pushf
cwtl
xchg
nop
jb
jb
mov
jb
jl
je
jb
jb
insb
push
jb
pop
pop
push
push
jns
jb
dec
dec
inc
mov
test
cmp
cmp
push
cmp
cmp
pop
cmp
cmp
push
push
dec
dec
cmp
cmp
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
cmp
cmp
adc
or
mov
cmp
cld
mov
pushf
pushf
pushf
pushf
hlt
lock
call
in
pushf
pushf
pushf
pushf
aam
int3
enter
pushf
sarb
mov
test
pushf
pushf
pushf
movsb
mov
pushf
pushf
xchg
nop
mov
test
pushf
pushf
je
insb
push
fs
pop
mov
pop
andps
dec
jb
and
inc
inc
cmp
jb
jb
xor
sub
jb
jb
and
sbb
jb
jb
adc
or
jb
jb
add
cld
mov
cmp
sbb
hlt
lock
xchg
xchg
xchg
or
in
xchg
xchg
xchg
xchg
aam
xchg
xchg
xchg
xchg
int3
enter
xchg
xchg
xchg
mov
xchg
xchg
xchg
lods
test
mov
pushf
cwtl
xchg
nop
xchg
xchg
xchg
xchg
mov
xchg
xchg
jl
je
xchg
xchg
xchg
xchg
insb
push
xchg
xchg
pop
pop
push
push
xchg
xchg
xchg
xchg
dec
dec
inc
inc
xchg
xchg
xchg
xchg
cmp
xor
mov
sub
mov
rol
loop
or
adc
ret
push
mov
nop
mov
js
cwtl
fnsave
es
and
test
outsb
cmp
or
inc
ljmp
mov
add
inc
and
mov
dec
mov
call
and
mov
sub
pop
push
inc
movsb
pop
inc
ret
aas
and
or
cld
orl
out
cmp
adc
sbb
dec
out
and
push
push
push
lods
cmp
jae
mov
fldt
ret
nop
scas
cmpsl
push
stos
adc
aam
and
push
or
mov
insl
insb
pop
lock
hlt
inc
or
push
inc
jmp
clc
bound
push
push
pop
pop
mov
add
loopne
adc
inc
je
lods
cvtpi2ps
mov
rcrl
repnz
aas
inc
pop
test
sahf
inc
or
inc
arpl
sbb
fstpl
add
mov
gs
push
and
push
dec
inc
inc
dec
add
outsl
mov
pop
xor
pop
push
dec
dec
dec
push
inc
fidivrs
pop
and
in
push
push
pop
sub
insb
mov
dec
pop
dec
dec
dec
inc
push
das
xlat
nop
xchg
sbb
mov
jo
insl
push
cmp
lock
pushf
pushf
je
icebp
repnz
pushf
pushf
pushf
pushf
cmc
div
clc
pushf
pushf
pushf
pushf
stc
cli
sti
cld
pushf
pushf
pushf
pushf
std
jmp
pushf
pushf
pushf
pushf
loope
jecxz
pushf
pushf
pushf
pushf
in
out
pushf
pushf
pushf
pushf
jmp
pushf
pushf
pushf
in
out
out
rcrb
rcl
pushf
pushf
pushf
pushf
aad
xlat
fcomps
fcmovnu
pushf
pushf
pushf
pushf
fstp
ffreep
pushf
pushf
pushf
pushf
rol
les
enter
pushf
leave
lret
pushf
pushf
pushf
pushf
int
iret
mov
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
movsl
cmpsb
cmpsl
test
cwtl
sahf
pushf
test
jo
in
dec
je
jo
insb
dec
add
jno
push
rcrb
ljmp
push
rcrb
mov
xchg
push
sti
jg
rorl
inc
js
gs
imul
xchg
jb
add
and
jo
cmp
mov
inc
dec
gs
jo
nop
in
repnz
mov
cmp
rolb
decl
dec
gs
outsl
jb
mov
mov
out
ja
dec
mov
mov
fidivl
mov
scas
cwtl
mov
push
outsb
mov
add
mov
lock
and
xchg
lock
jb
sub
pushf
xchg
push
jae
cmp
or
sbb
fsubl
outsl
add
mov
inc
inc
imul
nop
add
xchg
sub
scas
pop
mov
push
jle
popa
outsb
addr16
scas
pop
add
pop
orl
jecxz
repnz
outsl
ja
mov
rclb
push
dec
shl
add
jne
add
push
add
fs
jo
fs
push
xchg
enter
jle
gs
mov
inc
mov
adc
cvtdq2ps
mov
insb
scas
sbb
add
cmovne
push
outsl
imul
push
je
or
repnz
xchg
or
inc
popa
jae
fisubs
cmp
mov
inc
inc
push
shrb
inc
mov
xchg
adc
push
loopne
js
jae
adc
fiaddl
ds
inc
push
push
jb
insb
inc
ret
push
add
nop
cmp
add
push
inc
mov
jbe
arpl
nop
xchg
mov
xchg
nop
xchg
or
je
ret
popa
insb
inc
in
scas
or
mov
aas
shrl
jns
mov
inc
mov
mov
loop
inc
popa
fsubl
mov
and
bound
add
xor
push
and
jo
pusha
loopne
fdivrs
aas
or
loopne
inc
push
stos
ds
cmp
adc
popa
data16
sub
sarb
ss
aaa
xor
pop
dec
invd
pop
lds
push
push
inc
insb
jae
hlt
inc
loop
add
cmp
cs
pop
loop
push
insb
jnp
aas
jg
aad
inc
xchg
insb
int3
dec
adc
jb
popa
add
les
jb
sbb
int3
add
insb
mov
out
pusha
cmp
jnp
xor
mov
stos
push
into
repz
mov
mov
or
jnp
sbb
push
loopne
sbb
push
add
les
dec
jl
fdivrl
aas
xor
add
into
ficoms
loopne
shrl
and
ss
add
push
fadd
hlt
outsb
arpl
and
imul
add
ret
adc
repz
add
daa
out
push
cli
out
mov
push
lret
mov
mov
movsb
jbe
mov
mov
daa
and
and
xor
mov
and
inc
scas
mov
inc
shrb
shll
cmp
fdivs
and
movsl
mov
loop
push
mov
scas
cmp
push
cmp
ja
sub
lret
push
fiaddl
ljmp
xorb
bound
push
lahf
inc
pop
sbb
movsb
add
or
mov
mov
cmp
insl
lcall
mov
repz
je
movzbl
push
push
push
or
add
out
mov
cli
daa
imul
repz
jne
mov
jne
inc
inc
ds
mov
sub
or
dec
movsl
cmp
push
incl
and
sti
je
loopne
add
in
out
push
pop
aad
sbb
cmp
rclb
int3
insl
push
adc
fs
iret
leave
adc
or
fs
xchg
lock
cmpsb
sbb
mov
mov
popa
movsl
jo
sub
push
sbbb
inc
jb
cmp
or
outsb
mov
movsb
adc
pop
xchg
push
push
mov
adc
insl
out
ljmp
mov
mov
cmp
jl
cmpb
jbe
adc
or
jge
pop
dec
sub
clc
push
sub
inc
fisubl
popf
add
jno
cld
lahf
dec
ret
mov
icebp
cmp
fdivs
in
decl
sbb
sub
je
jae
cmp
dec
aas
add
mov
pop
xor
push
data16
push
stc
pop
or
lods
pusha
or
jae
inc
dec
jne
lret
loop
mov
leave
jne
sarb
hlt
jnp
jmp
outsl
fidivl
push
ret
mov
shl
icebp
dec
jp
jne
incb
pop
mov
mov
shrb
sub
jbe
add
mov
sub
jmp
out
in
std
mov
dec
jne
push
mov
sub
xor
push
outsb
cltd
les
add
mov
jns
xor
push
pushl
pushl
mov
negl
sbb
in
mov
pop
xchg
jo
cs
dec
inc
dec
cmpsb
mov
add
jl
add
add
fldcw
mov
dec
ja
mov
mov
andl
push
and
fistps
fstpt
js
ret
add
add
sub
add
rorl
fmull
stc
mov
cmp
out
neg
or
fnstsw
sahf
jae
fldcw
add
decb
push
ffree
ffree
ffree
ffree
pop
aad
add
adc
aam
aad
aam
sbb
or
xor
and
adc
cmp
add
push
mov
movsb
aaa
push
xlat
lcall
push
lock
adc
lock
out
cwtl
mov
inc
fcoml
lock
fidivrs
addb
imul
pop
pop
jo
imul
dec
cmp
mov
pop
jns
sub
mov
enter
adc
mov
sbb
cmp
and
xor
es
inc
sub
scas
icebp
ret
add
pop
loopne
push
xchg
pusha
and
jle
or
inc
call
and
stos
pop
lock
mov
adc
mov
jle
aam
cmp
jmp
sbb
pop
rclb
loop
loopne
pop
lea
sbb
test
or
fldt
fcomps
setne
jmp
ss
int3
mov
pushl
pop
enter
addr16
inc
test
dec
ret
in
sub
cmp
xor
icebp
xchg
bound
mov
jecxz
into
adc
jecxz
adc
jmp
and
dec
rorb
sub
sub
clc
or
mov
or
add
jo
loop
add
jo
inc
ja
or
sub
add
sub
sbb
push
push
mov
add
pop
cld
rcrl
jns
ret
jae
mov
jbe
dec
daa
jae
cltd
movsl
daa
jl
push
loope
cld
mov
push
push
ss
push
pop
mov
add
push
push
push
inc
shlb
out
mov
sahf
push
clc
push
rcr
je
push
adc
xchg
mov
cmp
push
mov
sbb
rcrl
scas
movsb
cmp
je
pop
xchg
pusha
push
ljmp
outsb
shrl
inc
mov
sub
sbb
rcr
xor
scas
enter
jne
dec
dec
push
jg
lds
adc
pushf
sarl
push
call
aam
cmp
cld
push
dec
pop
cmp
xor
push
add
lcall
call
mov
adc
cmp
cmp
test
stos
mov
mov
in
rol
cld
imull
push
rolb
enter
xchg
cltd
into
dec
adc
les
or
loop
jecxz
mov
shll
xchg
mov
or
ret
cli
mov
mov
movsl
xor
enter
lea
test
daa
es
mov
sub
jl
jle
or
not
mov
add
clc
mov
jecxz
lahf
movsb
pop
pop
ret
int3
test
nop
dec
mov
pop
lret
lods
mov
pop
fldenv
shlb
pop
pusha
aas
icebp
std
test
ffree
pop
adc
sub
mov
or
mov
iret
arpl
pop
clc
pop
jns
or
pop
xor
xor
repz
mov
mov
in
mov
lock
inc
je
dec
clc
mov
cmp
cli
sbb
ds
rclb
enter
das
xor
in
rcr
iret
xchg
sbb
dec
jmp
test
adc
ljmp
mov
cmp
dec
and
push
out
push
pop
inc
inc
jo
cmp
stos
movsl
fdivrs
outsl
mov
into
mov
pop
sub
jbe
sbb
pop
dec
cmpb
jl
lods
in
adc
dec
mov
mov
jne
test
data16
rcll
xchg
repnz
adc
cwtl
rolb
inc
call
test
loope
addr16
push
in
mov
js
mov
sti
jbe
inc
mov
jl
adc
rol
mov
outsl
rclb
mov
popa
loopne
push
xor
cmp
jne
les
notb
xchg
movb
les
fwait
mov
mov
jo
sub
cmpsl
xchg
sub
adc
mov
call
pop
pop
out
dec
jmp
pop
pop
jg
xchg
push
rolb
or
shlb
cmpsl
add
jge
adc
mov
sarl
cmp
subb
cs
pop
and
jl
sub
jmp
mov
mov
mov
cmp
jne
sub
lods
lret
cmp
jne
fsts
fistpl
and
lods
jmp
adc
mov
lods
movsb
mov
and
inc
sub
mov
leave
jp
sub
in
xor
inc
data16
fildl
sub
testb
jae
sarl
xchg
pop
mov
rep
mov
xor
neg
jg
cmc
js
pop
pop
mov
lcall
xor
cmp
ja
imul
mov
movzbl
add
cld
add
in
dec
inc
flds
jg
decl
sub
loopne
cld
or
jl
or
je
aas
sbb
xchg
ret
and
mov
movsl
notb
data16
pop
jne
lea
mov
lcall
jmp
push
mov
mov
iret
scas
mov
pop
push
push
xchg
push
ljmp
inc
in
xchg
in
or
sub
loopne
cmpsl
orb
fists
inc
je
push
pusha
or
ficompl
imulb
xchg
push
or
jmp
push
push
lcall
ret
sbb
sbb
sbb
popf
cmp
jne
xor
jl
bound
jbe
mov
into
in
ja
aad
jne
jmp
xor
inc
inc
or
sbb
jmp
mov
fidivs
jmp
mov
cld
aas
and
decb
cld
call
pop
js
mov
add
ja
mov
es
cmp
ja
or
sbb
shlb
jecxz
rep
out
orl
push
leave
cmp
lock
ficompl
push
mov
add
int
outsl
push
je
mov
or
je
mov
inc
je
mov
ret
std
imul
mov
pop
push
jl
cld
cmp
jbe
mov
xchg
adc
adc
test
mov
orps
adc
cvtps2pd
push
mov
loopne
mov
inc
iret
dec
jle
sarl
ret
xor
and
mov
out
dec
pop
insb
fisttps
sbb
xchg
push
push
push
mov
mov
call
mov
adc
sahf
xor
js
xchg
icebp
mov
cmp
adc
fistps
sub
inc
or
sbb
xchg
push
jge
mov
in
jg
pop
loopne
inc
lret
orb
cmp
xchg
std
iret
adc
out
dec
cld
lea
sbb
pop
mov
orb
jl
ljmp
pop
sub
rolb
xchg
jg
fisubrs
jge
pop
xlat
mov
lea
fldenv
iret
int
in
lock
xlat
push
xor
stos
or
std
das
inc
adc
mov
neg
jmp
or
add
hlt
ja
mov
stos
xchg
push
mov
data16
mov
insb
mov
inc
dec
pusha
in
or
jg
dec
test
stos
cmp
jne
pop
pop
outsl
aam
loopne
pusha
ret
jg
mov
jg
cli
mov
pop
repz
jge
repnz
adc
mov
cld
mov
xchg
jge
jle
inc
mov
jle
xrelease
or
daa
inc
adc
jb
jp
or
sbbl
jae
sidtl
cs
jg
lea
mov
pop
sahf
sub
adc
add
ja
movswl
mov
add
add
testl
call
mov
cld
cld
jmp
mov
outsl
sahf
inc
nop
dec
dec
inc
dec
inc
dec
lods
or
xor
mov
cwtl
jo
ret
ljmp
ret
idiv
mov
aam
push
or
sbb
sbb
insb
cvtps2pd
dec
stos
orb
jg
fisubrs
stos
neg
sbb
stos
jmp
addl
pop
stos
loop
jmp
mov
les
stos
pop
pop
inc
clc
dec
gs
push
pop
les
push
mov
stos
fisttpll
mov
cwtl
dec
sbb
sub
inc
cmp
add
leave
mov
mov
lret
mov
hlt
insl
jl
cmp
jo
cli
adc
mov
aad
cmp
jmp
lcall
hlt
push
rcrl
inc
test
jne
sbb
testb
lods
inc
in
stos
xor
call
fistps
or
je
inc
jne
pop
ds
pop
hlt
test
and
mov
push
fstpl
repnz
inc
pop
mov
lea
adc
inc
je
inc
cmp
ljmp
mov
xchg
pop
adcb
movsl
fsts
mov
lock
idivb
ret
and
inc
add
and
and
adc
and
sub
mov
sub
sub
out
xlat
cltd
sbb
and
sub
ds
into
mov
push
xor
sub
into
inc
or
xor
sbb
xchg
adc
add
adc
dec
cmp
rolb
fimuls
mov
or
inc
push
mov
adc
jle
clc
addr16
add
movb
cmpb
sub
in
imul
xor
sbb
out
jg
pop
xchg
loope
push
pop
mov
std
fstpt
fldt
fstsw
fwait
mov
testb
je
fidivl
xor
pop
fbstp
lea
mov
inc
sub
dec
loope
fists
in
add
push
cmp
jb
mov
shrb
jns
lcall
outsl
cmpsl
or
or
cmpb
jb
movb
scas
loopne
out
js
decb
and
pop
data16
pusha
xor
rcr
loopne
adc
cmp
inc
xor
out
push
push
push
out
shr
mov
add
jno
adc
ss
jnp
clc
push
adc
jecxz
add
or
sbb
rorl
test
neg
adcl
test
fmuls
or
fisttps
das
sbb
push
inc
sub
push
mov
loopne
jae
dec
add
mov
int
xchg
fcmovu
insl
or
popf
ret
shl
cmp
mov
dec
xchg
mov
sbb
mov
push
sub
call
and
jne
dec
sub
cmp
xchg
cwtl
jl
and
inc
ljmp
dec
adc
sub
movb
cmpb
imull
cmp
jbe
pop
jmp
mov
jecxz
pop
pusha
sbb
inc
pop
adc
dec
aaa
fcomps
push
jns
fwait
lds
push
fldz
cmpsb
cmpsb
fiadds
out
mov
cmp
lods
or
adc
loopne
pusha
jne
icebp
mov
mov
icebp
je
and
fistpll
pop
out
aas
or
cwtl
jne
mov
push
xor
and
std
inc
jbe
mov
adc
aas
jmp
fstpt
rorb
or
test
inc
add
pop
cld
test
insl
and
fsubrl
push
int
cmp
mov
or
add
jae
fimull
mov
fiaddl
jmp
aaa
mov
negb
decl
xchg
stc
es
push
inc
imul
push
addl
nop
jb
aaa
add
push
lahf
mov
xchg
or
imul
lods
push
je
sub
sub
push
faddl
rcll
push
pop
fistps
xor
xorl
add
cmp
idivl
dec
sub
fstpl
fwait
bound
pusha
push
sbb
fcmovnb
cmp
lahf
xor
or
inc
ret
or
xor
push
or
adc
mov
xor
fwait
sahf
insl
adc
push
adc
adc
cmp
clc
out
fistpl
sbb
or
cmp
add
int
inc
stc
inc
lods
fsubp
and
sahf
jae
int3
data16
add
imul
or
data16
adc
cmp
mov
xor
fstpl
fwait
into
mov
mov
dec
outsl
jecxz
lods
mov
adc
add
shlb
lea
mov
insb
xor
xor
push
cmp
xchg
iret
int3
test
and
mulb
fidivrs
push
enter
loopne
xor
adc
fdivr
mov
xor
div
test
jne
sbb
nop
add
sarl
add
jnp
adc
sbb
xchg
lea
add
xchg
imul
add
orb
ss
ja
out
shlb
or
ja
push
jno
or
pop
inc
ja
sbb
out
pushf
push
scas
adc
sub
inc
dec
jne
xor
dec
mov
dec
cltd
idiv
imul
sti
push
inc
or
ds
in
bound
ds
add
pop
ret
or
xor
sbb
hlt
ror
push
and
ret
and
in
test
test
jg
mov
cld
push
clc
hlt
or
push
mov
subb
inc
pop
inc
mov
dec
es
add
xor
sub
adc
add
bound
mov
shl
lods
mov
inc
data16
decw
xor
sub
imul
fcoms
popf
lret
lcall
add
adc
loopne
cmp
xchg
mov
push
int
dec
pop
xor
shlb
add
ret
data16
test
push
mov
dec
stos
xor
add
fdivrs
push
jb
mov
sub
fdivrl
sub
or
xor
add
hlt
lods
in
shlb
pop
push
push
mov
incl
dec
incb
inc
ret
jbe
iret
cmp
fwait
loope
mov
or
in
lods
push
rclb
adc
lcall
sub
adc
ret
sbb
pop
jmp
mov
lea
and
add
nop
mov
xchg
adc
clc
jbe
mov
dec
push
jle
sbb
ljmp
mov
loopne
add
test
pop
arpl
rcrb
sub
push
cmp
inc
sbb
add
mov
mov
pop
inc
cmp
je
cwtl
cld
inc
pushl
add
nop
inc
hlt
scas
pop
cmpb
jne
mov
or
or
ds
outsl
testl
test
xor
adc
inc
in
add
jecxz
cs
outsl
pop
push
in
jge
call
jl
lock
in
xorb
push
enter
mov
xchg
xchg
movsl
es
mov
fwait
or
lret
lcall
adc
ljmp
pop
mov
push
mov
call
jo
call
dec
cmp
push
enter
dec
xlat
insl
lea
jnp
cmp
xor
je
or
lods
xchg
mov
idivb
xor
ss
pusha
cmpl
sub
inc
mov
loopne
jne
or
repnz
add
dec
and
icebp
call
repz
test
ret
aaa
sbb
dec
rolb
enter
jecxz
jb
in
out
xor
addr16
xlat
in
lret
fs
and
stos
pushf
in
out
in
mov
cwtl
repnz
pmullw
pushf
xor
in
sahf
jmp
sbb
je
and
in
je
jmp
or
loope
jne
dec
cmpb
jne
push
mov
js
enter
lret
pop
pop
stos
dec
jp
pushf
std
icebp
cmp
add
add
add
aam
aam
loope
rolb
xchg
jne
adc
push
ds
xor
pop
add
loop
es
movsl
pushf
pop
incl
pusha
movsb
pop
jecxz
push
jecxz
js
inc
dec
push
sub
icebp
ljmp
or
jae
jmp
xchg
movsl
cli
push
pop
and
stos
hlt
mov
push
xchg
jge
mov
add
fimuls
or
and
mov
inc
dec
jne
jge
dec
cmp
dec
mov
or
fidivs
outsb
cmpb
cmp
test
or
or
mov
push
or
mov
add
pop
add
or
or
mov
sbb
sahf
push
xorl
inc
lahf
out
add
iret
fs
lret
mov
out
mov
pop
shlb
jmp
mov
mov
mov
testl
jbe
popf
dec
push
lea
scas
pop
idivl
pop
fdivs
dec
pop
aam
enter
pop
aam
loopne
cmpsl
orb
sbb
xor
mov
mov
mov
add
pushf
mov
je
int3
leave
inc
mov
stos
dec
je
add
jmp
mov
je
aad
fwait
mov
mov
out
sarb
sub
sbb
xchg
pushf
jne
shlb
call
pop
sub
inc
push
jmp
cmp
inc
and
stos
adc
push
push
scas
inc
movzbl
dec
jg
js
test
xchg
pusha
call
add
push
jmp
or
dec
hlt
in
popa
je
or
je
jmp
nop
mov
or
mov
fdiv
fwait
ja
xchg
daa
movsb
mov
sub
push
mov
jp
jne
clc
add
pop
in
xor
cmpsb
into
fiaddl
mov
pushl
cmp
add
mov
sarb
jg
add
mov
mov
notb
or
or
or
jle
dec
popa
movsb
xor
nop
loopne
adc
and
orb
test
das
imul
add
push
pushf
sti
xchg
loope
jbe
lea
in
pop
push
or
sbbb
pusha
jmp
or
xchg
addr16
cmpl
inc
sarl
sbb
inc
pop
addl
shll
addl
and
lea
cli
lock
jge
adc
nop
lret
xchg
mov
fucomip
mov
nop
add
scas
xor
xchg
lea
aam
adc
or
out
jmp
cmpsl
cmp
test
or
or
scas
call
in
rorb
push
cs
test
rolb
and
pop
in
imul
fsts
jmp
leave
jmp
or
in
mov
pop
andb
je
dec
and
rcll
push
fmul
inc
push
push
das
xor
sbb
sub
test
cs
sub
loope
xchg
adc
andb
pop
cmpsl
jle
jmp
jecxz
dec
das
push
dec
add
into
pop
mov
push
dec
adc
xchg
pop
mov
add
testb
cmp
inc
ret
imul
mov
lea
ja
mov
movsb
mov
mov
jno
loope
lds
mov
cmp
jg
adc
push
add
jmp
je
mov
xlat
adc
pop
xor
adc
jbe
xchg
ret
dec
pop
sbb
xchg
add
sbb
xor
xchg
or
inc
and
data16
jbe
xor
ret
mov
jle
adc
sub
jae
jmp
int
push
loope
sbb
jle
popf
adc
ret
mov
cmpsb
mov
jle
add
sar
pop
mov
fsubrp
mull
xor
or
cmp
cli
dec
cmpsb
imul
xor
mov
cmp
movsl
and
inc
daa
loop
js
inc
add
mov
cmp
or
push
cmpsb
mov
leave
or
pop
clc
notl
js
jo
ret
fcompl
or
push
cmp
fmull
add
pop
pushf
popf
mov
inc
mull
repz
notrack
sub
je
dec
je
sub
and
je
or
or
mov
jmp
push
push
push
and
ret
outsb
jbe
push
inc
mov
jle
fadd
or
or
cli
test
mov
gs
mov
pop
fs
add
jg
jl
pop
pop
and
dec
mov
push
mov
rcr
sub
mov
fs
mov
sub
sub
ljmp
test
jmp
and
push
mov
pop
jne
fisubs
das
loop
cmp
cmp
add
jne
cmp
jg
sbb
incl
and
addr16
xor
sub
add
pop
cli
xchg
add
imul
add
addr16
sti
js
add
adc
pop
cld
jmp
in
cld
gs
les
mov
fdivs
test
fcmovu
add
loopne
push
mov
imull
out
shlb
aas
add
adc
lahf
xchg
xchg
mov
jle
cmp
fistl
sarl
dec
sub
addr16
xor
xchg
jle
or
repz
rcrl
push
outsl
cmp
xchg
sub
scas
out
jge
adc
or
xchg
cmp
shl
sarb
jle
outsb
and
xor
fistpl
pop
ljmp
into
add
sbb
push
jmp
pop
sbb
add
and
cmp
push
sub
lods
lock
in
call
mov
in
jmp
aaa
xor
in
repnz
sbb
jmp
lock
scas
push
jbe
decb
cmpb
mov
loop
ja
filds
jno
cs
push
fstps
fdivr
mov
cmp
cmpb
jle
and
mov
jnp
fs
jne
mov
add
adc
ret
repz
or
and
test
push
cmpsl
leave
mov
movsb
and
sbb
loopne
fwait
sub
insl
or
add
adc
xor
lods
rorb
fwait
sub
sarl
lods
inc
lds
fstpt
mov
das
fbstp
add
das
test
test
mov
lock
add
inc
inc
xor
dec
cwtl
mov
sbb
jno
cmp
gs
add
sbb
or
iret
ljmp
stos
test
shrb
scas
mov
fisubs
add
inc
and
jmp
cmp
adc
pop
add
sbb
dec
popa
pop
bound
aaa
and
inc
add
xor
or
and
dec
cmpsb
mov
sub
sbb
add
pop
inc
or
mov
add
push
mov
jg
cmp
test
cmpsb
jo
sbb
and
push
inc
testb
jne,pt
add
mov
sbb
add
jno
sbb
or
and
add
pop
sub
dec
and
orb
xchg
pop
repnz
push
rolb
into
icebp
fwait
shll
xchg
adc
dec
insb
shlb
lods
call
lds
push
pop
sub
push
pop
xchg
clc
sbb
adc
ret
jne
cld
loop
es
popf
sub
jmp
fst
fcomps
insl
dec
out
or
pop
fwait
jmp
sbb
test
mov
jle
fstp
push
dec
movsl
xchg
popa
in
push
dec
push
push
mov
in
call
lock
add
push
mov
sub
jb
or
je
or
xchg
and
and
mov
fwait
stc
es
fsubrl
mov
inc
inc
sub
mov
add
xor
mov
pop
jge
xor
das
sahf
les
lret
push
filds
addl
sub
sbb
lods
xor
or
dec
clc
movsl
sahf
sbb
dec
xchg
jbe
scas
mov
aaa
dec
test
scas
sbb
test
jecxz
daa
xchg
mov
loope
popf
mov
mov
rorb
push
push
mov
test
out
lea
inc
dec
lret
nop
pop
lcall
inc
lock
rclb
lahf
faddl
repnz
sti
or
cmpsl
sbb
pop
add
pop
push
xchg
push
and
into
fbstp
in
shlb
in
loope
call
nop
dec
sub
in
jne
fisttpl
fdivl
xchg
addl
push
stos
push
bound
je
icebp
fiadds
or
popf
add
adc
add
into
pop
mov
or
xchg
cmp
sbb
sub
sub
inc
lock
arpl
mov
push
lods
inc
insl
pushf
mov
jmp
fistps
scas
out
in
aas
mov
ret
push
lcall
or
cmp
pop
sti
ficoml
add
cmpb
push
das
push
push
dec
pshufw
cli
repnz
push
js
xchg
ret
push
xor
subb
dec
shll
xor
jnp
jne
mov
sahf
adc
xor
clc
cmp
or
test
cmpsb
or
jb
sub
clc
xlat
add
adc
stos
sarl
je
sub
je
scas
ret
push
sbb
les
mov
jle
mov
xchg
cs
sbb
cmp
lea
ret
mov
sbb
jge
pop
cld
jle
hlt
mov
pop
call
cmovp
jo
add
jle
dec
dec
add
aas
enter
add
jmp
mov
dec
xchg
jmp
ret
and
push
test
in
adc
inc
jb
jle
call
fs
inc
es
loop
xor
rorb
out
push
addr16
add
fldl
add
sub
add
mov
sub
adc
xor
inc
test
cld
pusha
ja
enter
inc
cmpl
and
ljmp
shrb
mov
mov
aaa
jl
cmp
xor
loopne
and
mov
jle
fidivrl
xor
insb
mov
inc
push
out
sbb
pusha
popa
mov
sbb
inc
sub
clc
scas
adc
mov
sub
frstor
test
sti
inc
negb
cmpb
je
mov
shrl
push
mov
cmp
pop
pop
mov
jbe
andl
pop
sbb
xor
test
lods
mov
dec
sub
repnz
push
mov
add
cld
mov
les
dec
mov
xchg
lea
sub
mov
xchg
add
push
or
shrb
sbb
mov
mov
xorb
mov
fisubs
mov
mov
inc
push
or
lret
push
or
scas
inc
jmp
push
div
and
inc
push
push
sbbl
xor
jmp
push
cmp
add
cmp
xor
xchg
rcrb
adc
mov
mov
subb
insb
test
dec
gs
or
push
pop
add
test
flds
add
movsl
dec
xorl
jnp
jecxz
dec
fstpt
push
les
and
rcll
sti
mov
mov
sarl
lea
repnz
push
ja
push
mov
fwait
push
add
vpmacsww
lret
sti
stos
pop
add
dec
cmpb
rolb
and
ret
mov
adc
push
add
loope
ret
pop
xor
loop
mov
sti
push
jg
cmp
pop
cmp
sbb
call
jno
call
mov
mov
inc
push
xchg
xor
or
pop
roll
push
xchg
add
negl
push
push
dec
sar
lret
push
adc
ljmp
adc
mov
jmp
push
xchg
loopne
dec
nop
and
mov
or
stos
cltd
outsl
cmp
jb
pop
adc
jb
pop
call
popa
popl
sub
loope
adc
or
or
mov
add
mov
cmp
cs
adc
in
or
jge
clc
push
aad
pop
push
in
push
loopne
nop
push
adc
sbb
loopne
cld
js
adcb
mov
sub
lds
out
js
loope
int3
mov
add
xchg
clc
and
cli
roll
and
into
and
pop
jns
call
jb
push
pop
push
push
cmp
inc
cmp
je
jmp
xor
inc
xor
sub
jmp
and
add
mov
dec
shll
or
aam
dec
rorl
or
push
push
das
mov
pop
das
xor
inc
xchg
xor
xlat
pop
mov
add
cmpsb
mov
or
test
jnp
mov
lret
cmpl
mov
dec
mov
and
inc
int3
xchg
inc
push
loopne
sbb
mov
icebp
adc
push
testb
add
or
test
loopne
dec
add
fs
shlb
or
pop
mov
and
pop
or
clc
cmpl
pop
enter
out
ror
shlb
xor
mov
jecxz
loope
pushf
xor
jns
pop
xor
xchg
out
nop
jge
mov
mov
add
enter
mov
fabs
mov
lret
inc
jo
jo
cmp
loop
adc
aad
pop
test
add
xlat
or
sub
out
sbb
mov
and
push
addr16
pop
push
outsb
add
clc
xor
jo
jl
mov
popa
enter
movsb
jb
dec
jb
push
xchg
pop
or
jno
js
mov
arpl
xchg
and
in
shll
jno
mov
loopne
cvttps2pi
push
or
out
jmp
mov
mov
js
mov
mov
xlat
out
ret
daa
mov
push
inc
mov
mov
add
setno
pop
popf
in
sbb
ret
adc
dec
dec
fiaddl
nop
add
sub
adc
inc
aaa
jge
inc
imul
adc
and
ja
and
adc
adc
mov
shll
push
loop
mov
fmull
add
enter
sbbb
add
push
repnz
idivl
xchg
out
mov
adc
or
xorb
mov
jl
pcmpeqw
push
adc
jle
nop
je
jl
lret
fucomip
clc
test
mov
daa
cld
fcoml
cs
pop
mov
dec
push
jne
pop
pushf
xor
sub
in
shrb
inc
arpl
mov
and
mov
movsb
push
and
cmpb
in
inc
mov
lock
cmp
mov
mov
cwtl
xchg
lahf
shlb
pusha
out
dec
int3
inc
adc
dec
or
dec
mov
inc
cli
testl
mov
and
push
push
jb
mov
and
loopne
and
jns
dec
or
inc
fcomps
add
add
adc
mov
mov
mov
nopl
push
inc
loopne
sub
xor
cmp
daa
mov
ja
in
mov
lock
adc
xor
mov
data16
ret
in
pop
addb
xchg
fimuls
xor
cmp
jl
push
and
dec
or
pop
and
mov
fimull
dec
jge
filds
test
cmpsl
push
dec
and
cltd
nop
cmpl
or
stc
inc
loopne
cmp
jge
jl
cmpl
jne
sbb
dec
js
sub
push
add
lods
sbb
inc
or
ret
aas
jno
jbe
js
aaa
in
push
xchg
ds
and
inc
mov
dec
cmp
cmp
xchg
jg
test
sub
popf
testl
enter
movl
mov
shll
pop
mov
jns
push
ficoml
ja
push
pop
lahf
fsubrs
test
or
pop
xor
aas
in
inc
ja
mov
and
vmptrst
sbb
or
popa
push
rorb
adc
push
pop
fs
and
push
or
or
jl
xor
add
fisttpl
into
cld
fwait
or
and
idivl
pop
ja
test
mov
negb
scas
iret
fsub
mov
jne
sbb
test
outsb
push
adc
sub
mov
inc
xor
das
in
insl
ja
pop
push
xlat
jge
ljmp
and
mov
inc
rcrl
incl
inc
inc
jmp
jmp
fadds
push
add
addb
ja
and
inc
sahf
jge
inc
leave
outsb
xor
dec
pusha
and
in
cmp
jl
adc
fmull
icebp
cmpb
cwtl
lea
lock
fists
ret
lock
sub
mov
and
cmp
je
int3
push
ss
mov
xor
mov
add
or
jae
and
lds
sarb
bnd
cmp
mov
sub
ret
mov
adc
sbb
cltd
sbb
sbb
sahf
fisubrs
xchg
daa
loopne
cli
nop
and
ja
mov
daa
mov
sub
jno
add
mov
pop
adc
dec
sahf
add
fstps
pop
inc
loopne
test
inc
jns,pn
fs
jno
add
fsubs
div
mov
daa
shrl
adc
mov
cmpl
hlt
std
test
in
push
mov
fwait
mov
jmp
roll
push
mov
sub
jb
inc
mov
repnz
mov
stos
sbb
jne
dec
loopne
jne
fs
jge
pop
or
pop
mov
mov
clc
pop
mov
pop
nop
add
push
setb
aam
mov
xlat
fs
mov
mov
in
or
addr16
mov
sbb
xor
dec
data16
enter
xchg
jno
add
mov
pop
pop
shr
mov
mov
incl
add
test
xchg
mov
adc
add
lock
divb
pop
decl
call
mov
xchg
ret
mov
mov
mov
outsl
popa
mov
mov
xchg
xor
pop
jne
mov
fmull
retw
aaa
jno
shrb
push
add
jg
ja
cmpw
test
add
xchg
rorl
adc
stos
dec
jne
jmp
push
pop
test
xor
mov
and
add
or
pop
rcrb
xor
test
lret
sub
mov
loopne
pop
in
movsl
pop
mov
pusha
cld
add
fidivs
leave
mov
pusha
subl
or
mov
int
fcomp
mov
mov
cld
inc
call
xor
xor
sub
pxor
mov
push
jg
push
sbb
xorb
out
insl
das
mov
dec
movsl
add
mov
push
mov
pop
pusha
stc
movsb
sbb
mov
pop
mov
mov
jle
xchg
cmp
push
sub
mov
push
imul
pushf
mov
and
mov
pop
out
and
ret
add
pop
nop
lret
ret
sbb
sahf
mov
push
les
inc
rolb
rol
mov
cmpsl
out
mov
pusha
and
enter
mov
and
pushf
inc
xchg
pop
or
or
add
rcrl
mov
outsl
in
sarb
das
fs
add
mov
add
fs
sarl
add
push
popa
insl
pop
jo
scas
sbb
push
jno
and
pop
addr16
and
cmp
pop
pop
shl
push
cmp
ss
ret
sbb
fldl2t
jle
divl
lock
jo
rclb
mov
mov
mov
lcall
mov
inc
adc
xorl
scas
sub
stos
cmp
dec
in
xchg
jnp
push
movsl
jno
xchg
push
mov
insb
jg
hlt
mov
or
fld
mov
testb
adc
add
rol
daa
mov
bound
test
cmp
add
push
jp
stc
push
ret
jl
daa
cmp
in
push
sbb
adc
push
fldl
xor
sahf
or
daa
mov
cwtl
rolb
gs
pop
jno
mov
inc
js
aad
pop
dec
call
inc
dec
call
dec
ret
xchg
dec
mov
push
mov
daa
lock
lea
push
push
sbb
push
inc
lahf
jle
adc
add
rorb
sub
cltd
add
adc
mov
loop
and
clc
in
ret
bnd
sbb
fsubs
lds
push
mov
loop
decb
and
jg
add
pop
mov
jnp
mov
dec
adc
inc
out
inc
xchg
sbb
sahf
test
pop
mov
jne
jb
gs
std
xor
dec
mov
cmpsl
js
jmp
jl
hlt
mov
lea
rcrl
outsb
test
xor
data16
sub
or
loop
cmc
lcall
dec
sbb
xor
or
std
sbb
je
adcl
test
and
adc
rolb
lock
stc
cmp
inc
add
mov
incl
aad
mov
rorl
dec
sbb
data16
and
imul
mov
in
shrl
dec
cltd
loopne
jo
loope
test
push
adc
inc
mov
lret
aas
inc
push
push
lock
xchg
adc
sbb
dec
fisttpll
call
mov
clc
cmp
test
mov
and
inc
push
or
lock
mov
xchg
ret
les
xchg
jp
sub
sbb
mov
mov
aam
mov
xor
test
jnp
lahf
dec
mov
sub
in
xchg
ret
incl
roll
fsubl
nop
outsb
or
ret
inc
decl
cmpl
pop
aaa
mov
rolb
inc
stc
ret
mov
or
lods
pop
xorb
pop
loopne
sbb
mov
inc
icebp
pop
push
mov
pop
add
inc
loopne
sub
cmp
mov
inc
je
test
fistpl
test
push
dec
dec
outsb
adc
pop
jg
int3
xchg
or
dec
or
dec
in
inc
loopne
insb
shlb
ror
cmp
mov
adc
cmp
jl
pop
loop
fs
xor
loop
pusha
stos
imul
xchg
sub
add
xchg
pusha
add
or
frstor
pop
push
dec
push
ds
mov
mov
mov
outsl
es
ror
jne
cmp
jne
add
sbb
lcall
dec
add
add
cli
aam
out
inc
fnstcw
and
movl
out
jecxz
loopne
cmp
dec
repz
shrb
out
add
out
push
outsl
sbb
jno
jne
or
into
clc
cmp
clc
lock
rorb
push
hlt
negl
fsubp
push
sub
fmuls
and
rorb
cmp
enter
and
push
pusha
mov
ds
mov
out
jns
out
jle
lods
nop
lock
mov
cmp
cmp
js
add
repz
pop
lods
jo
mov
pusha
idivl
jns
pop
push
pushf
push
adc
jae
repz
dec
fdivr
inc
je
scas
push
jae
jns
xor
test
lahf
pop
scas
mov
push
insb
add
push
dec
cmp
or
push
or
jg,pn
data16
aaa
pop
add
lret
das
enter
cld
xor
mov
insl
iret
hlt
in
inc
sahf
out
das
in
popa
repnz
nop
call
outsl
cmp
fcoml
jnp
iret
leave
pop
fsubs
adc
iret
leave
jae
inc
int3
dec
enter
cmp
add
in
mov
pop
mov
push
mov
loopne
mov
xlat
mov
push
push
test
movsb
adcl
pushf
pop
testb
xchg
xchg
mov
outsb
push
daa
out
nop
push
dec
mov
pop
mov
sbb
fistpll
repnz
iret
pusha
enter
sbb
mov
daa
sbb
add
or
lods
xor
pop
push
pop
inc
add
sub
mov
cmpl
adc
insb
popf
xchg
mov
insb
out
and
cmpsl
jge
sub
push
and
add
cmpsb
jl
lods
adc
mov
arpl
and
nop
inc
push
cmp
or
aam
sarb
mov
mov
adc
xchg
xor
pop
inc
xorl
jae
mov
cmpb
cmpsl
out
cmpb
fsubrs
push
lahf
test
or
arpl
or
mov
in
inc
jno
xor
js
add
adc
mov
lds
cmp
and
nop
dec
pushf
inc
aaa
adc
xchg
pushf
fisttps
dec
lcall
pop
dec
dec
fcom
push
push
imul
ja
xchg
shlb
int3
pmulhuw
in
enter
in
in
mov
in
in
movsb
mov
in
out
fsubs
xor
push
mov
outsl
movsb
insb
jb
sbbb
test
jb
add
and
push
enter
mov
enter
fnstenv
xchg
mov
mov
pop
xor
jge
leave
sbbb
mov
jb
mov
rcl
pavgb
idivb
xor
testb
je
mov
pop
mov
or
das
or
push
das
sti
leave
fcompl
adc
dec
aas
cmp
xchg
fcoml
or
xchg
mov
enter
xchg
mov
mov
test
cmpsl
outsb
loope
mov
fisubl
ret
pop
enter
pop
shll
xlat
add
and
or
and
enter
jb
fisubl
nop
sub
inc
loope
in
enter
and
ret
and
fwait
and
jecxz
jp
mov
push
jp
pop
pushl
add
sbb
je
mov
pop
ljmp
ficomps
and
mov
adc
cmp
inc
dec
in
xchg
push
in
sbb
inc
cmp
jb
adcb
cmpsl
fwait
aas
fucom
pusha
nop
jns
jb
fildll
add
pop
sbb
lods
pop
das
mov
jbe
or
mov
dec
or
jno
mov
fisubrs
push
add
pushf
int3
psubb
xchg
shrl
jns
sbb
or
mov
push
test
sarb
cmp
pop
das
push
inc
std
push
push
push
sbbb
mov
pop
mov
insl
mov
sbb
xchg
les
and
xchg
dec
es
int3
lods
rorb
cltd
fs
mov
fadd
fmul
cltd
fs
dec
loopne
in
xchg
dec
es
in
movsb
jb
in
xor
lock
movsb
jb
hlt
hlt
test
mov
clc
adc
adc
push
mov
add
in
xor
pop
fsubrl
or
push
es
es
frstor
es
or
jne
cmpsl
and
push
and
jae
add
or
mov
mov
movq
fs
jne
shlb
fmuls
lods
mov
dec
adc
outsl
dec
div
in
in
inc
outsb
cmovg
pop
outsl
jb
inc
insl
jo
xchg
mov
outsl
insl
push
je
pop
push
cmp
and
inc
inc
sbb
roll
mov
jns
pushf
sbb
jae
pop
dec
add
mov
pop
outsl
add
nop
push
out
loope
test
loope
data16
mov
push
je
pushl
clc
adc
ss
stc
add
adc
fsub
aad
pop
test
out
mov
adc
repnz
pop
shrb
loop
adc
inc
cmp
jnp
add
push
mov
lock
xchg
lahf
cmpsl
stc
adc
dec
aam
sub
add
sahf
jnp
call
adc
dec
jnp
in
xor
cmp
dec
sbb
mov
lea
pop
jae
sub
add
ds
imulb
push
inc
mov
test
rorb
push
nop
and
inc
outsb
xor
jnp
mov
insl
pop
in
testl
pop
dec
fidivrl
mov
mov
and
push
movsb
and
sbb
mov
js
test
sbbb
sbb
mov
dec
outsl
in
data16
addr16
iret
rolb
in
inc
jb
sub
sbb
sbb
push
out
inc
nop
sub
addr16
xchg
popa
scas
jp
insl
jo
mov
inc
sub
mov
and
inc
stos
mov
out
push
outsb
divb
int
jecxz
sbbl
mov
arpl
and
adc
fadd
sub
mov
and
jecxz
mov
in
out
outsl
ljmp
or
in
add
in
jg
mov
or
faddl
es
xchg
adc
xor
mov
and
daa
in
and
sbb
loope,pn
test
push
pop
call
and
loop
inc
and
fucomp
outsl
jmp
mov
add
jbe
jmp
aam
mov
cmpsl
adc
js
shrb
adc
pushf
xor
pop
out
jg
pop
inc
push
adc
add
and
push
es
sub
add
fistpl
aas
dec
je
sbb
cmp
add
lahf
gs
mov
loopne
dec
std
add
fldenv
adc
mov
nop
outsl
fisttps
enter
adc
mov
mov
les
jns
fisttpll
mov
jbe
push
sbb
xchg
cmp
xchg
leave
out
scas
in
mov
or
nop
out
pop
call
insb
loopne
ss
add
jmp
inc
rol
pcmpgtd
loopne
xchg
jmp
mov
dec
dec
add
enter
pop
rorb
roll
sub
les
in
mov
fcoml
enter
fsubr
cmp
ljmp
in
lret
js
mov
cltd
loopne
in
add
stos
or
fisubrs
add
fxch
pop
xchg
inc
xchg
sub
jmp
mov
push
je
cli
ret
out
popa
or
in
jmp
adc
inc
sbb
mov
enter
lea
out
fcomps
and
mov
jne
add
pop
test
push
insl
xchg
add
and
push
roll
sarl
or
adc
sub
lahf
ret
add
sbb
pop
push
push
repnz
inc
push
insb
jnp
mov
mov
xchg
loop
xchg
jg
mov
movsb
push
push
push
mov
push
loopne
lock
fcmovu
clc
mov
pop
out
call
and
cld
into
or
fisubrs
cld
testb
push
add
andb
shlb
xor
mov
or
cwtl
and
fnstcw
les
adc
or
adc
jmp
outsl
and
lock
inc
test
imul
lea
mov
ss
mov
add
inc
into
xor
lea
hlt
aaa
cmp
xchg
fcmovb
mov
inc
sub
inc
pop
mov
inc
xchg
sbbl
inc
mov
daa
dec
or
cli
mov
xor
dec
repz
dec
jnp
enter
fdiv
pop
rolb
and
inc
in
cmp
mov
push
jne,pt
pop
push
leave
int3
push
inc
and
fidivl
loopne
adc
or
outsb
cmp
addb
pcmpgtd
lcall
inc
sub
or
mov
xor
mull
and
push
jmp
add
cmp
in
pop
adc
cwtl
and
or
xchg
jb
mov
push
add
stos
mov
pop
ret
aas
leave
test
cwtl
fmull
hlt
fimull
je
mov
or
cmp
or
mov
adc
fmuls
cmp
aaa
adc
enter
fsubrl
xor
das
lock
out
pop
or
sub
add
jb,pn
cmp
aas
adc
jo
mov
adc
push
add
call
loopne,pn
in
in
mov
sub
call
and
nop
decb
sbb
jb
nop
sbb
mov
pusha
mov
sbb
add
inc
and
mov
push
push
jne
in
loop
jns
cmp
add
lahf
fimull
inc
int3
jg
inc
push
mov
cmp
mov
bnd
add
xor
ret
inc
adc
or
hlt
add
hlt
jmp
push
jp
jo
mov
or
mov
jmp
cmc
clc
mov
lcall
bound
ds
jne
or
imul
les
sbb
or
pop
jb
jg
loope
push
xor
cmp
hlt
mov
dec
or
sbb
mov
pop
xor
pop
pop
outsl
dec
popl
and
xchg
inc
iret
jns
arpl
and
div
push
mov
mov
or
push
dec
je
add
popf
mulb
jmp
and
mov
cmp
cmp
jmp
inc
lock
sti
and
or
sbb
add
or
nop
push
daa
call
and
hlt
jp
les
mov
inc
mov
adc
bound
mov
inc
add
movsl
rdmsr
in
jg
cmp
out
pop
test
inc
add
inc
lret
loope
cmp
out
adc
adc
xchg
cltd
loop
pusha
mov
xchg
cmc
mov
hlt
mov
sarl
and
cmp
or
mov
xor
pop
daa
add
lret
xchg
clc
push
sub
add
adc
add
inc
cmpb
test
push
push
fiaddl
test
daa
mov
jb
pop
orl
data16
push
xchg
mov
iret
mov
jg
in
cli
sbb
mov
cmp
ja
sub
sub
mov
repz
push
jp
scas
shl
dec
repz
clc
and
scas
pop
jnp
clc
pop
pop
imul
push
mov
mov
hlt
pop
inc
ljmp
add
clc
jnp
loopne
xor
sbb
adc
dec
mov
mov
mov
adc
insb
inc
mov
clc
fldcw
xor
push
cs
dec
inc
inc
jnp
dec
lock
add
push
dec
xlat
pop
loop
sti
cmp
and
xor
call
xchg
sub
jg
stc
pusha
pop
in
push
loopne
jg
mov
or
loopne
movsbl
or
loopne
aaa
fcoms
mov
pop
shlb
loop
adc
jb
mov
int3
cmp
jne
sar
mov
jge
add
jg
adc
je
dec
je
sti
rclb
jmp
andb
les
ja
je
mov
repnz
adc
add
notb
push
in
push
or
sub
ds
dec
insl
mov
inc
popf
push
dec
idivl
xlat
push
hlt
adc
je
or
cs
add
scas
add
dec
or
pop
rclb
xchg
mov
es
inc
fnsave
insl
leave
sbb
mov
fnsave
shrl
mov
and
test
or
test
aad
rorb
and
test
pushf
mov
mov
stos
cwtl
outsb
push
lock
jmp
adcl
ds
nop
outsb
xlat
mov
popf
nop
inc
sub
xchg
mov
mov
in
cmpsl
inc
mov
and
call
pop
loopne
hlt
or
test
frstor
mov
mov
add
adc
fstps
jb
sti
or
js
shr
push
sub
cmp
test
sbb
mov
jb
or
out
mov
cld
nop
sbb
push
in
aam
cld
sub
je
loopne
xor
cmp
aad
or
and
pop
mov
mov
inc
adc
and
in
mov
loopne
and
loope
cmp
repnz
adc
repz
imul
into
repz
iret
out
adc
sub
mov
dec
xor
push
or
pop
pop
jge
cwtl
inc
pushf
out
push
mov
in
rolb
movsb
cmp
push
cmp
dec
xor
xor
sub
insl
les
sarb
xor
cmp
cmp
in
pop
nop
es
mov
pop
and
fsubl
ss
cwtl
fcomp
aaa
fsubs
fdivs
and
cwtl
xor
sahf
pop
mov
mov
jg
or
rcr
int
ljmp
insl
and
int
or
enter
and
lea
add
mov
jge
loope
incb
sbb
push
cmp
jbe
jg
inc
scas
push
pop
jns
mov
jmp
push
inc
xchg
imul
shlb
xchg
insb
in
jo
fnstsw
pop
ret
dec
cwtl
add
and
popa
and
and
or
popa
lods
and
test
test
ficoml
cmp
mov
dec
dec
out
add
xor
and
mov
add
dec
mov
sahf
xor
xchg
and
in
jb
and
or
push
nop
rclb
jmp
jle
cwtl
lock
nop
mov
add
loope
cmp
push
xor
rolb
push
dec
pop
and
jle
mov
testw
movsl
xchg
das
mov
loope
bnd
mov
in
or
movw
ja
jno
aam
pop
push
or
add
push
pop
aam
xchg
je
push
mov
ret
stc
xchg
push
or
adc
gs
scas
fs
fstl
or
gs
mov
sub
mov
dec
cmp
push
push
inc
test
or
push
jg
ljmp
cmpl
jb
not
mov
dec
sub
xchg
out
je
jg
lahf
inc
insl
jo
jns
add
jne
pop
cwtl
roll
and
gs
and
arpl
or
push
ds
add
mov
outsl
repnz
outsl
jne
xchg
jb
outsb
arpl
add
insb
sub
dec
pusha
xchg
push
ret
iret
xchg
and
fdivrl
fwait
shll
imul
aas
inc
arpl
sub
mov
iret
push
and
mov
mov
mov
ss
fistl
lock
xor
into
xor
xor
imul
or
add
jg
adc
out
ja
push
dec
call
pop
cmp
stos
popf
and
ret
inc
sti
ss
mov
mov
add
inc
sahf
push
sub
jno
pop
gs
arpl
cmp
fstpt
stc
jl
xchg
ret
and
sbb
mov
push
iret
inc
cmp
xchg
loopne
in
jno
pop
dec
pusha
orb
imul
and
outsl
and
enter
and
and
fdivrl
mov
addb
inc
outsb
jns
inc
popa
sbb
push
and
sar
bound
gs
push
aad
and
pop
jo
pop
jle
sahf
testb
scas
sahf
js
push
xor
sbb
loop
jne
push
ljmp
push
movsl
orps
stc
jbe
lea
test
dec
sbb
test
xor
cwtl
cmp
sub
pushl
jne
out
inc
xchg
push
shl
mov
shr
lahf
clc
rclb
les
push
add
loop
jns
aam
lds
clc
or
xlat
sbb
sbb
clc
mov
fdivrs
insl
jge
cmp
je
dec
fsubrl
pop
adc
add
clc
xchg
pop
xorb
mov
js
inc
jle
imul
lahf
inc
and
inc
call
ret
test
aas
loopne
inc
add
addb
mov
push
mov
call
cli
pusha
adcb
add
das
mov
push
sti
cs
or
std
xchg
std
xor
add
and
insb
popa
mov
jb
push
mov
ljmp
fs
arpl
jp
mov
mov
pop
jle
sbb
fcoms
mov
iret
rorl
mov
ljmp
loopne
mov
flds
popf
pusha
addr16
je
enter
leave
les
outsl
pop
js
xor
cmp
std
repnz
dec
jb
or
lret
aam
sub
rolb
orb
and
jns
push
inc
sub
xchg
sti
cmp
sbb
outsb
ja
ret
jno
inc
mov
xchg
fnstenv
loope
or
test
lret
mov
daa
cmp
lock
cmp
or
inc
jb
pop
cld
pop
lods
or
cld
jl
inc
xor
inc
sbb
add
sbb
add
dec
subb
leave
sbb
xchg
xlat
outsb
adc
lock
xlat
popa
sbb
push
inc
dec
jne
mov
or
popa
mov
movsl
nop
pop
mov
inc
out
dec
mov
jne
addl
pop
xchg
leave
pusha
mov
jmp
je
dec
cmp
add
and
sbb
sbb
fistps
rol
sbb
pop
jns
sub
mulb
cmp
inc
mov
mov
out
adc
pushf
adc
xor
cmp
fs
pop
movsb
jnp
jle
pop
add
nop
lea
gs
cmc
sbb
nop
fdivr
in
in
sbb
in
mov
add
stos
pushf
fsubl
imull
pushf
pushf
scas
nop
xchg
xchg
pushf
pushf
pushf
pushf
xchg
xchg
xchg
xchg
pushf
pushf
pushf
pushf
xchg
cwtl
cltd
lcall
popf
sahf
pushf
pushf
pushf
pushf
lahf
addb
addl
xchg
adc
pop
pop
xlat
sbb
cs
mov
sub
or
jb
mov
mov
push
add
inc
add
into
sub
xor
dec
in
rolb
adc
lret
lret
or
dec
push
jbe
mov
mov
pushl
sbb
imulb
fbstp
and
push
cs
dec
xor
add
clc
jle
sub
popa
and
sub
loopne
in
jno
cs
jge
cmp
cmp
mov
pop
sarb
sub
test
mov
xor
pop
dec
mov
gs
adc
or
or
fisttps
lock
pop
cmpsb
fisttpl
mov
dec
jl
scas
push
pusha
xchg
mov
mov
jg
mov
je
mov
dec
and
sbb
inc
add
and
jmp
mov
and
je
jmp
cmp
sbb
test
aam
int3
out
jne
lahf
push
mov
mov
mov
subb
icebp
aas
pop
je
notl
lar
outsl
and
decb
ja
inc
adc
sub
std
jmp
call
jmp
dec
mov
out
divl
cld
push
add
add
ret
mov
movsbl
shrb
sbb
xchg
push
into
sti
jo
mov
in
ds
in
push
lcall
cli
je
add
cmpb
ja
jb
iret
shll
call
add
out
mov
mov
or
lcall
lea
jne
aaa
jnp
push
mov
add
call
dec
lcall
loop
push
mov
inc
mov
lods
cmp
lcall
add
xor
jle
and
pop
loope
jge
js
adc
dec
loop
mov
outsb
adcl
cmp
push
clc
jle
aam
es
lcall
aam
xor
movsl
xlat
lcall
lods
jmp
xor
mov
dec
clc
lods
sub
pop
sbb
mov
or
or
adc
mov
pop
mov
pop
lahf
sub
ret
pop
add
and
or
adc
call
or
mov
adcl
mov
add
lcall
inc
arpl
jne
sub
mov
stos
hlt
xchg
lock
cmp
mov
push
xchg
add
fnsave
or
cmp
lcall
iret
lods
pop
aaa
and
inc
and
les
inc
push
ja
repnz
or
test
mov
jnp
lock
loopne
ja
and
jmp
pop
lock
int
adc
fldt
fstps
fwait
jmp
lahf
hlt
movsb
leave
fucomp
add
inc
add
jbe
add
pushw
or
cmp
test
pop
fmuls
pop
mov
lret
add
mov
mov
pop
jge
jecxz
test
and
or
xchg
lea
repz
mov
js
outsb
fstps
fwait
push
out
sub
fisttpll
inc
push
fistpll
outsl
jo
lds
mov
repz
sti
cmovs
push
xor
push
add
jmp
pop
jmp
jnp
cmp
dec
fucomp
push
and
lods
orb
loopne
sbb
inc
loop
jmp
add
mov
filds
js
jno
pushl
adc
fistpll
add
call
js
orl
xor
out
insl
mov
ja
jae
jl
jnp
jne
pop
adc
dec
or
dec
add
int
call
mov
mov
pop
sti
cltd
fxch
jecxz
or
push
push
xlat
xchg
sbb
add
outsb
or
inc
les
mov
adc
pop
orl
and
adc
and
pop
mov
pop
aad
xchg
inc
pop
add
push
sbb
iret
leave
insl
cld
scas
adc
add
push
inc
imul
xor
fs
gs
je
outsl
push
or
pminub
pusha
popf
sbb
adc
or
lods
and
sbb
sub
sahf
dec
outsb
insb
jns
inc
insb
popa
ss
jb
into
test
dec
roll
repz
ss
push
lods
bound
inc
je
insb
or
outsl
fistpll
push
dec
imul
mov
shrl
or
imul
add
leave
clc
add
dec
mov
gs
add
imul
mov
in
or
or
dec
gs
jnp
mov
ret
flds
outsb
adc
outsb
sub
jne
mov
pop
cs
add
xchg
mov
jnp
inc
jbe
push
gs
arpl
movsl
cmc
popa
mov
rclb
sub
pop
inc
adcl
insl
pop
mov
adc
sub
mov
mov
adc
jne
pop
adc
mov
mov
mov
xchg
xchg
mov
or
sub
lcall
dec
dec
xor
sub
fbld
push
daa
or
cwtl
dec
sahf
pop
and
hlt
pop
sti
add
popf
or
mov
enter
or
mov
sbb
popf
add
ds
push
inc
sub
fiadds
enter
adc
mov
jle
sbb
mov
add
movsb
pusha
xchg
ds
dec
imul
pop
scas
pop
int3
sbb
inc
inc
int3
jae
mov
add
add
addb
imul
repnz
adc
ds
sbbb
jo
mov
dec
push
mov
adc
xchg
add
test
rcr
mov
mov
and
sub
and
jle
inc
mov
cmp
adc
enter
aas
push
push
inc
imul
cwtl
add
mov
and
lods
mov
mov
les
aas
mov
scas
add
sub
xor
and
pop
push
cmp
fs
inc
push
push
push
add
and
inc
push
fisttpl
push
add
decl
push
orl
test
movl
test
test
push
dec
xchg
sbb
sti
mov
push
int3
int3
mov
push
mov
lods
rorb
movsl
mov
cmp
fs
add
dec
or
push
in
sbb
orb
add
ja
sbb
xchg
pusha
ret
adc
adc
rcr
dec
addl
pop
xor
cmp
cmovns
jae
fs
popa
jo
lds
xor
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
and
adc
pop
xlat
lods
mov
mov
add
adcl
test
cmpsl
mov
dec
cld
dec
aaa
mov
test
test
and
dec
repz
xlat
jbe
inc
outsl
pop
mov
adc
pushf
ja
fwait
jge
dec
aaa
movsb
push
aam
sub
push
sbb
ds
push
les
mov
lods
rorl
nop
scas
pop
sbb
ljmp
jge
or
dec
lock
mov
mov
pop
fdivl
enter
pushw
pop
xor
cmpsl
push
push
or
adc
pop
outsl
xchg
mov
in
pop
pop
hlt
push
push
pop
mov
push
pop
xor
push
je
dec
into
lock
pop
jo
push
mov
xor
xchg
outsb
adc
pusha
js
loope
and
inc
xchg
sbb
push
mov
pop
and
add
inc
add
arpl
mov
pop
pop
aas
jno
dec
mov
push
int3
mov
push
adc
cmp
outsb
aam
pop
inc
push
pusha
push
dec
jecxz
ffree
push
push
or
push
inc
mov
iret
pop
and
adc
out
adc
data16
int
out
in
add
inc
cmp
pop
push
xchg
inc
bound
outsl
fiadds
sub
xor
push
ds
dec
xor
insb
and
push
outsb
fimull
test
xlat
pop
mov
xor
int3
inc
in
repnz
out
jbe
mov
andb
push
mov
xchg
push
enter
or
jb
pop
jb
adc
jb
pop
sbb
and
jb
and
and
dec
sub
add
push
cltd
sub
add
repz
aaa
mov
mov
frstor
cmp
cmp
push
adc
loope,pt
aas
dec
and
or
adc
xchg
cs
cmp
sbb
dec
mov
push
cmpsl
or
and
cld
push
repz
iret
les
iret
repz
and
inc
rorb
dec
test
mov
push
test
adc
or
and
in
xor
adc
dec
cmp
jmp
sub
push
jo
in
mov
push
lahf
jle
fdivrs
mov
jl
jbe
jmp
insb
movl
ss
xor
jo
outsb
push
jbe
popa
dec
clc
out
and
das
push
inc
or
jo
loop
call
daa
out
push
jecxz
faddl
pop
inc
mov
jo
icebp
data16
cltd
sbb
cmpsl
lock
aas
inc
shlb
push
gs
mov
pop
icebp
mov
cmpsb
jecxz
adc
outsl
mov
push
into
fcomp
pusha
push
mov
das
mov
pusha
xchg
arpl
rcl
inc
aam
out
loopne
adc
int3
jno
jg
mov
cmp
repz
mov
call
in
pop
inc
int
dec
addb
mov
jecxz
rcrl
ss
clc
outsb
push
xchg
mov
adc
sbb
mov
add
ljmp
inc
std
mov
pop
pushf
inc
xor
testl
jbe
push
loope
icebp
mov
in
mov
adcb
mov
pushl
decl
clc
push
push
push
push
push
push
loop
cmp
lock
call
or
inc
push
adc
repz
sbb
aam
js
mov
push
clc
push
in
sub
or
pop
subl
push
dec
lds
inc
mov
cs
inc
decb
pop
add
cmp
or
pop
pop
std
and
push
popa
addr16
dec
fdivrl
adc
out
fsubp
inc
mov
test
testl
mov
loopne
adc
scas
bsr
arpl
sbb
cmp
cmp
mov
pop
test
mov
push
dec
sub
repz
jb
mov
cmp
repz
mov
mov
lock
cmp
mov
fsubs
push
aaa
pop
sub
sub
push
mov
push
dec
dec
and
or
add
push
mov
and
push
clc
mov
jl
push
push
data16
lret
push
push
jns
sbb
xorl
faddl
adc
enter
cmp
or
push
pushl
inc
movl
loopne
jl
adc
or
outsl
jne
sbb
cmpsl
pop
push
leave
ds
movsb
xor
and
movsb
arpl
movsl
fwait
addb
in
clc
sahf
or
shrl
cld
sbb
or
cmp
cmp
xlat
bound
inc
xchg
cmpsl
je
test
shl
push
mov
ljmp
lret
mov
mull
sbb
or
test
cmp
sbb
imul
sti
rolb
arpl
inc
cld
sub
jne
ja
shl
mov
sbb
adc
loopne
sarl
jl
adc
cmp
mov
cmp
shl
cmp
sub
fcoml
pop
in
nop
iret
add
sbb
pop
or
inc
sbb
or
or
sbbb
leave
sbb
mov
fwait
aas
lcall
push
dec
or
xor
or
imul
and
sbb
les
mov
and
dec
mov
inc
push
and
inc
mov
mov
and
pop
sbb
sub
xchg
lcall
mov
adc
mov
push
subb
or
lock
mov
clc
and
add
push
dec
dec
pop
jo
jecxz,pn
push
stc
push
dec
cld
cld
loopne
rorb
xor
xchg
jo
loope
fisttpll
lea
push
mov
les
mov
pop
shll
pop
sbb
and
das
inc
cmc
and
adc
divb
gs
pushf
loopne
popf
loopne
pusha
xchg
aaa
cmp
bound
hlt
cmp
imul
ret
push
pop
cmp
and
cmp
inc
rcrb
or
xor
rcll
add
pop
xor
inc
dec
rcrb
mov
mov
sub
add
jbe
pop
dec
sbb
rorb
mov
ljmp
inc
xchg
sbb
adc
icebp
push
sbb
jbe
or
leave
xchg
or
push
mov
lea
repz
ds
je,pt
loop
pop
addr16
pusha
fcmovbe
cmp
inc
adc
mov
adc
out
lock
push
lea
push
pusha
subl
lret
mov
push
cmpsb
jg
inc
dec
jne
mov
sub
je
cmp
ret
addr16
mov
out
push
add
mov
jb
xchg
sbb
iret
hlt
push
mov
xchg
popf
dec
dec
fmull
cmp
xchg
dec
fldcw
xchg
arpl
hlt
insb
sbb
jp
push
pop
or
cmp
mov
es
and
sub
sbb
mov
fmull
inc
call
adc
les
dec
insl
jl
and
sub
sti
mov
jne
push
sbb
test
and
and
adc
inc
or
xorb
in
fucom
mov
xor
xorb
inc
sub
rclb
lock
ljmp
push
pop
in
mov
jecxz
inc
mov
dec
call
rcrb
sub
aas
mov
pop
xor
add
sbbl
aaa
pop
add
add
or
adc
jb
pusha
jge
es
push
aad
jge
and
int
inc
lock
into
rorb
push
sbb
data16
xor
aad
cmp
mov
add
mov
xchg
mov
or
push
mov
cltd
jne
or
popa
xor
cli
call
mov
fcompl
repz
or
js
shlb
mov
adc
xor
xor
enter
mov
pop
rolb
and
sub
andb
add
or
cli
dec
jae
pop
popa
sbb
xchg
repz
movsl
sub
sub
push
adcb
pop
subl
xor
push
sub
or
lock
stc
jmp
push
andb
xor
add
add
sti
inc
ss
dec
jp
mov
or
scas
pop
rcrb
js
add
loope
les
jg
push
xchg
fldl
xor
inc
add
mov
popf
ss
cwtl
cwtl
clc
test
aaa
lock
es
pusha
es
sbb
out
sub
jmp
dec
cmp
cmpsl
jmp
push
je
mov
ret
and
and
and
xor
add
fbstp
lds
and
dec
and
add
add
inc
push
and
leave
leave
mov
pop
ret
and
adc
or
mov
sbb
outsb
mov
in
mov
loopne
mov
imul
pop
ds
add
addb
or
pusha
mov
cli
ss
addr16
pop
or
push
inc
test
sbb
sub
mov
sub
hlt
adcl
fisttps
sbb
cmp
inc
mov
mov
xchg
push
pop
bsf
js
jne
test
cmpsb
cmp
mov
cmp
dec
aaa
loope
js
xor
push
in
or
inc
add
xlat
ret
cmp
rcl
cs
add
loopne
or
cmp
stos
cmpsb
aam
cld
mov
jmp
ret
pop
loope
push
stos
add
jg
pop
cmp
lret
sbbl
dec
cmp
jne
dec
mov
jp
add
dec
xchg
or
sub
add
xchg
pop
hlt
mov
imul
jl
add
and
mov
shlb
mov
movsb
fldl
mov
shrb
test
mov
cmp
push
ror
jbe
xchg
call
dec
adcl
xchg
cmpsb
pusha
add
mov
mov
pavgw
mov
add
popf
push
bound
faddl
xchg
dec
push
xor
fs
mov
pop
pop
push
adc
cmp
sbb
push
ja
cmp
push
aas
sub
nop
jo
add
lahf
pop
add
outsl
xchg
movsl
rolb
dec
nop
sahf
mov
aaa
pusha
push
aas
xlat
arpl
loopne
mov
pop
mov
mov
inc
cltd
and
andb
loope
sub
cld
ret
pop
mov
push
or
test
jnp
xchg
movsl
cs
adc
arpl
outsb
xchg
cld
pop
daa
adc
not
dec
imul
pop
fs
fstpt
xor
cmp
mov
dec
ficoml
xchg
hlt
ret
loopne
jo
xchg
or
mov
push
jp
cld
pop
shl
ret
lock
stc
cmp
lock
imul
fsub
and
fst
push
mov
out
sbb
ret
fstpl
and
mov
adc
les
not
fldl
xor
out
sub
inc
movsb
rcrl
inc
lcall
mov
lcall
pushf
arpl
mov
sbb
add
dec
push
scas
ja
push
mov
mov
jo
xchg
jae
jae
loop
inc
aas
ljmp
incl
or
leave
ret
inc
sub
popa
jae
outsb
pop
loopne
movsb
das
mov
jne
out
add
push
push
into
cld
pop
and
inc
decl
js
push
dec
loop
jge
sub
enter
jnp
ljmp
inc
sub
inc
jbe
mov
icebp
push
stos
or
ja
movsl
nop
push
mov
jge
and
mov
aaa
clc
test
xor
push
jae
sbb
or
xchg
mov
xchg
mov
iret
pop
aas
jo
lods
cmp
dec
dec
imul
push
pop
xchg
int
sbb
inc
add
aaa
add
push
or
xor
test
mov
xchg
sahf
jmp
and
push
js
or
jmp
pop
add
mov
cld
adc
sub
add
dec
or
push
sbb
in
cmp
jne
sbb
imul
leave
decl
jle
mov
jae
push
mov
sbb
sbb
and
hlt
jne
idivb
jecxz
out
or
test
and
les
fmulp
shlb
call
fstpl
ret
sub
sbbb
mov
enter
outsl
call
decb
leave
jo
scas
dec
shl
push
jmp
push
scas
sbb
mov
test
inc
jns
mov
push
fildl
and
addb
and
and
xchg
push
fidivs
aad
pushf
shlb
sub
jg
dec
hlt
dec
dec
inc
push
adc
sub
push
outsl
xor
push
subl
add
or
add
aaa
inc
aaa
jb
mov
inc
xor
inc
scas
and
or
mov
adc
es
mov
in
add
shrb
adc
cmpb
add
inc
jne
scas
jmp
dec
lds
adc
inc
jo
sahf
or
fadds
test
seto
dec
adc
pop
inc
and
jnp
add
lds
inc
xorb
ss
fsubrs
test
mov
lock
inc
daa
mov
dec
dec
cmp
sahf
es
mov
out
add
inc
push
nop
sti
xor
push
pop
adc
cwtl
sbb
sar
mov
shl
sbb
cli
xchg
lock
call
out
je
add
lcall
enter
push
fisubl
das
push
ret
pop
xorb
fs
mov
jp
insb
sub
aad
sbb
add
shrl
sbb
push
add
cmovp
leave
je
stos
pop
das
subb
add
mov
bound
pop
push
push
push
inc
adc
lock
jmp
aaa
fmuls
or
test
test
loopne
sub
mov
incl
mov
nop
cmp
ja
and
inc
imul
push
cmpsl
mov
cmp
jl
adc
push
inc
cmp
jne
inc
movsb
dec
sti
decl
jne
les
sub
mov
xor
sbb
xor
ret
jno
aam
imul
inc
push
add
in
inc
mov
lea
movsb
in
aas
push
mov
jo
int
pop
or
nop
rorb
inc
in
or
sub
ret
or
rcll
mov
jecxz
sbb
inc
add
sub
insl
aaa
outsb
imul
mov
div
rcrl
sarb
or
cmp
cmc
daa
out
ret
mov
jo
cltd
mov
jb
sbb
test
js
filds
xor
and
inc
aaa
dec
sbb
mov
pop
pop
mov
add
mov
inc
int3
mov
inc
xor
pushf
and
or
or
dec
stc
add
xchg
aas
or
bound
stos
sbb
cmp
sbb
aam
aaa
lock
cmpsb
mov
bswap
fbstp
inc
mov
and
dec
and
arpl
push
or
jge
jmp
or
jg
lods
add
and
dec
dec
add
and
adc
mov
fildll
mov
pusha
cwtl
adc
dec
xor
mov
jb
dec
movsb
cmp
or
shl
inc
sub
cmp
in
xchg
out
cmp
lock
test
mov
add
out
in
sub
call
push
sbb
push
add
enter
cmp
ja
lds
mov
mov
repnz
jmp
xchg
dec
aam
roll
subl
inc
mov
mov
xchg
divb
adc
pop
push
shlb
pop
and
pop
lea
test
in
sbb
mov
xor
mov
sbb
xchg
jo
sub
xchg
daa
dec
clc
sub
pusha
repz
adc
jecxz
push
pop
movsb
mov
ret
add
push
sub
mov
push
push
clc
mov
xor
dec
dec
lret
in
push
push
pop
and
dec
orl
rcrl
jae
pop
shlb
in
outsb
pop
shr
inc
stc
dec
fbstp
xor
icebp
jo
popa
fdivrs
xor
fdivrs
jnp
push
in
sbb
rorl
stc
dec
adc
fiaddl
push
pop
aaa
sbb
pop
out
out
cmp
and
nop
or
jecxz
inc
scas
nop
dec
cmc
pop
js
enter
cmp
loopne
add
shrb
add
jns
insb
sub
dec
mov
enter
xchg
ljmp
xchg
or
imul
push
jp
cmc
pop
dec
movq
inc
ret
mov
dec
dec
into
pusha
xchg
mov
les
or
mov
in
int
dec
adc
pop
loopne
ljmp
ret
iret
aam
test
or
add
mov
xor
inc
dec
or
adc
addr16
clc
add
call
push
push
inc
lret
push
mov
dec
jb
add
fwait
pop
call
stos
lcall
adc
fidivrl
add
in
in
xchg
lock
sub
dec
loopne
adc
adc
pop
inc
xchg
cld
adc
mov
ret
addr16
jb
sub
clc
hlt
out
lods
xor
scas
sub
and
fcoml
or
shrb
xor
das
push
push
in
mov
and
fiaddl
cmpsb
and
or
loopne
inc
rolb
testb
sub
push
and
andl
mov
inc
mov
adc
mov
jecxz
mov
sub
add
jne
xchg
dec
push
dec
pop
lahf
les
push
shll
push
imul
xchg
add
mov
rcrl
adc
ds
cmp
je
sub
or
pop
xchg
adc
and
dec
or
andb
mov
sbb
xor
mov
adcl
sbb
sub
add
out
daa
push
inc
add
and
pop
add
scas
pop
clc
add
test
inc
ljmp
subb
pop
mov
adc
or
mov
pop
scas
push
dec
adc
mov
mov
push
and
addr16
jne
sub
enter
cmp
mov
or
orl
jo
pop
pop
push
jl
test
and
or
dec
popf
xchg
push
jmp
std
call
mov
filds
les
out
jmp
inc
sbb
dec
les
les
push
xchg
mov
mov
jp
add
aad
pop
insb
fisubs
adc
int
sbb
push
scas
mull
jp
pop
das
push
xchg
cmp
push
lods
mov
xorb
cmp
push
or
mov
sbb
dec
dec
push
jmp
sub
push
icebp
pop
loop
cmpl
andl
and
mov
adc
xor
out
or
daa
inc
pushf
add
xor
adc
inc
fs
les
std
pop
push
xor
or
add
cmp
lea
mov
mov
decb
dec
pop
insl
mov
je
or
dec
xor
enter
loop
mov
std
cmpb
jne
or
add
push
inc
inc
sub
push
int
mov
leave
dec
daa
dec
inc
scas
loop
test
xchg
rolb
xchg
mov
inc
jmp
mov
pop
push
inc
add
cmp
clc
inc
adc
pop
pop
jne
testb
jle
pop
orb
sbb
xor
sar
and
arpl
movaps
rorl
aam
loopne
and
pop
push
push
and
scas
sub
adc
mov
addr16
or
aas
cltd
cmp
adc
lods
dec
or
mov
xchg
je
sbb
aad
mov
shlb
jmp
sub
loop
std
test
inc
faddl
add
lret
xchg
mov
addr16
lods
xor
sub
enter
lcall
sub
adc
mov
mov
adc
xor
dec
inc
shrl
sbbb
adc
rcll
gs
add
cmp
popf
in
pop
mov
lock
shrl
add
idiv
frstor
decl
iret
xchg
notb
sub
sub
mov
mov
dec
adc
or
mov
mov
dec
jl
aas
scas
pop
add
pop
add
add
lods
or
cmc
push
xor
ficoml
mov
cmp
aas
mov
jmp
add
sub
or
test
lea
or
les
rorl
or
xor
adc
add
movsl
scas
cltd
jbe
jge
popa
and
mov
mov
xor
push
pop
jp
jno
test
adc
xor
aam
add
inc
pusha
lds
push
sbb
lret
sar
in
and
cwtl
ret
or
sbb
or
sbb
mov
pop
ret
push
imull
gs
add
mov
sti
lds
or
test
sbb
fdivs
ljmp
and
orb
xor
ret
imul
jl
sub
mov
cmp
repz
xor
xchg
push
rorl
mov
pop
xor
mov
and
data16
add
add
shr
out
in
nop
add
push
jns
adc
dec
jg
push
stos
or
and
jne
mov
fisttpl
insl
or
or
inc
dec
inc
jge
or
outsb
sbb
jle
dec
jno
adc
pop
pop
dec
dec
pusha
hlt
jl
pop
nop
push
aad
and
rcr
sbb
cltd
ret
jg
je
mov
push
cltd
lcall
pop
add
jb
inc
sub
xlat
mov
clc
lret
or
add
pop
mov
xchg
inc
jb
mov
push
jge
or
jle
pusha
addb
push
add
out
xor
jo
adc
pop
push
test
push
mov
push
inc
cmpxchg
xor
enter
pop
js
pusha
sbb
aaa
inc
es
nop
pop
test
insl
jl
scas
in
ret
jno
dec
sub
jbe
jne
fwait
call
subb
daa
pop
pop
mov
xor
test
jnp
mov
sub
cmpl
xchg
imul
add
add
sbb
pusha
xor
and
pop
and
push
sub
icebp
mov
in
mov
pop
pop
jo
jecxz
cmpsl
loop
adc
sbb
or
scas
int3
test
stos
rolb
mov
cmpsl
adc
sbbb
lea
mov
es
xor
cs
and
hlt
iret
shl
sbb
sbb
add
cwtl
mov
insb
pop
xor
movsb
cmc
cmp
dec
bound
xor
push
out
dec
add
cmp
cmp
push
push
daa
inc
cmpsl
test
adc
pusha
add
xchg
dec
fiaddl
cwtl
push
out
or
pop
xchg
xchg
arpl
sub
pop
sub
popf
rorb
outsl
and
dec
movsb
push
push
outsb
and
out
cmp
pusha
das
repz
lods
xchg
notb
ds
pop
push
cmp
push
or
icebp
or
pop
or
cmp
jle
or
push
or
sbb
daa
inc
sub
push
sbbl
inc
xor
dec
push
sub
cltd
cmp
imul
jbe
add
out
mull
lret
stc
dec
lods
adc
dec
dec
in
sub
push
adc
ds
and
gs
push
xchg
cli
test
std
in
lods
mov
cmpsl
movsb
fadd
daa
pop
sub
sub
das
loope
es
push
xchg
adc
pop
fucom
scas
nop
clc
std
jne
lahf
imul
inc
adcl
dec
arpl
dec
loop
lea
xchg
clc
mov
cmp
arpl
adc
push
add
pop
mov
adc
mov
cltd
lret
sbb
push
jp
mov
in
jmp
jg
mov
cmovp
push
and
cmpsb
lds
shlb
push
lea
xchg
jo
js
mov
faddl
inc
insl
xor
faddl
in
push
and
lret
jmp
xchg
movsl
popa
ja
divb
xor
sbb
adc
pop
mov
push
icebp
dec
jo
jnp
jge
hlt
addr16
push
and
inc
push
aam
movb
or
add
xchg
inc
xchg
jmp
mov
shll
mov
jge
xchg
loopne
loopne
enter
fcoml
push
lods
lret
outsb
arpl
mov
ja
adc
and
add
xor
push
cmova
mov
das
aam
push
and
add
inc
ret
pop
sub
test
jle
cmp
je
cli
pop
push
pop
or
ror
iret
jae
pop
lahf
rolb
add
faddl
jb
je
dec
or
adc
mov
or
hlt
ret
nop
mov
nop
xchg
add
out
push
loopne
pop
pop
adc
icebp
jp
lcall
adc
lock
inc
add
cmp
push
mov
pop
jg
dec
or
push
mov
pop
push
repnz
fs
cmpsb
std
movsb
cmp
jge
data16
or
sbb
gs
shlb
test
test
sbb
outsl
jp
cli
or
loopne
mov
mov
cmp
jne
and
test
stos
loopne
movsb
push
lods
pop
xor
or
push
int3
int3
pop
and
mov
xor
int3
test
test
idivl
icebp
lds
cmp
xor
clc
add
push
fisubrl
jnp
jle
or
xchg
pusha
and
mov
nop
lods
push
popf
and
call
pusha
inc
mov
enter
mov
pop
popf
insb
sbb
iret
fs
test
or
nop
xchg
push
adc
pop
sbb
pushf
cmp
arpl
mov
jecxz
push
push
and
cmpsl
scas
mov
mov
xor
pop
dec
in
rclb
and
dec
jb
out
nop
pop
jg
sbb
sub
pop
subl
mov
pop
xor
mov
fcmovu
mov
addr16
sbb
xor
add
pusha
inc
push
orl
mov
or
push
dec
sbb
pop
popw
pop
xchg
ficoms
aaa
jbe
sbb
jmp
addr16
movsb
insl
sub
add
shrd
push
jb
jo
imul
dec
stos
xlat
inc
aam
cmp
pop
rolb
out
clc
push
xchg
add
inc
push
mov
outsb
lcall
adc
xchg
fdivrs
adc
adc
or
pushf
xchg
sbb
ja
mov
stos
pusha
fidivs
push
xchg
fwait
fs
mov
sub
mov
lea
jle
int
sbb
aaa
cmp
adc
add
mov
dec
cmp
jp
lock
push
ja
add
mov
pusha
faddl
dec
push
popa
lahf
dec
add
push
aaa
push
cmpsl
mov
hlt
add
in
push
sub
and
test
mov
inc
sbb
add
inc
aas
xchg
cmpsb
dec
leave
pop
mov
in
fisubl
jmp
adc
sbb
mov
jae
scas
inc
and
enter
sbb
mov
push
and
xchg
idiv
jp
loope
sbb
fldt
outsl
fnstcw
jmp
add
inc
arpl
outsb
sbb
mov
xchg
fdivrl
les
lahf
int
in
and
inc
sbb
or
js
in
outsl
mov
mov
mov
xor
adc
aaa
daa
sub
push
nop
outsb
mov
xor
js
movsb
cmc
cmpl
sbb
mov
dec
mov
cmp
mov
inc
pop
adc
sbb
movaps
outsl
push
mov
sub
outsl
daa
mov
inc
push
pop
push
shlb
push
dec
or
insl
and
pop
fwait
cli
aad
jmp
aaa
pop
adc
inc
cmp
jl
push
jo
or
sbb
mov
mov
sbb
loopne
xchg
andl
loopne,pn
fldenv
ret
jo
cmp
lcall
imul
fisttps
aaa
xchg
movsl
arpl
inc
or
and
imul
xchg
das
inc
out
lock
je
or
cmp
sub
and
fldl
les
pop
mov
push
jb
push
mov
xor
add
cmp
sub
and
enter
xor
xor
lret
aad
loope
test
pop
xor
mov
fsts
dec
mov
and
lea
dec
pop
mov
rclb
pop
pop
imul
dec
mov
lahf
orl
data16
rclb
adc
push
cmp
cmp
loope
cmp
jle
adc
jl
ret
loopne
lret
xchg
push
jo
or
and
pop
pop
push
or
lds
add
adc
push
fidivl
mov
adc
sbb
divl
cmpsl
sub
sbb
cmp
iret
push
dec
inc
add
clc
movb
adc
and
enter
hlt
mov
xchg
popa
je
fnsave
je
hlt
aaa
test
jo
xchg
cld
insl
inc
or
push
pop
add
mov
sub
fbstp
jno
test
dec
adc
push
test
pop
call
push
inc
lret
call
pop
lret
add
cmpsl
movsb
ds
rcr
sbb
adc
call
pop
mov
sahf
jnp
les
jmp
inc
xor
mov
inc
popl
mov
enter
outsl
sub
cmp
push
add
push
push
or
jne
fisttps
lret
cmp
in
outsl
loope
popl
push
out
rcl
aaa
jo
xor
xchg
and
sub
jo
iret
jbe
sbb
mov
in
div
pop
fstp
jl
xor
in
cmp
inc
or
adc
jnp
or
arpl
test
xor
fcoms
scas
sub
mov
leave
xor
nop
dec
push
or
loop
cmpsl
pushl
test
xchg
pusha
push
inc
jo,pt
shl
dec
sub
popa
cmp
cmp
pop
and
outsb
adc
dec
push
inc
pop
inc
add
je
lahf
push
push
sarb
xlat
es
loopne
cmp
push
ja
dec
pushf
sbb
lods
cmc
rol
mov
jmp
scas
sbb
popa
and
mov
jecxz
inc
sbb
scas
cmpsl
inc
xchg
pop
jle
pop
adc
pushl
dec
jne
jp
dec
push
sub
lea
popa
mov
out
lcall
es
mov
test
mov
sub
ret
cli
xchg
cmpsb
xchg
push
lret
ja
sub
add
jg
cs
mov
jmp
mov
or
cmp
jg
sbb
fldenv
fsts
lret
mov
cmp
dec
push
lret
or
arpl
lea
pop
inc
addl
dec
cmp
adc
add
xor
mov
cmp
xor
jb
adc
mov
dec
mov
daa
and
jle
push
mov
add
data16
test
mov
jae
pop
ror
in
cmpsl
nop
add
xchg
jecxz
jmp
lods
mov
sub
jae
inc
fdivrs
xchg
and
jmp
arpl
mov
cmp
leave
mov
and
mov
dec
fwait
add
test
inc
ss
hlt
icebp
dec
push
sbb
pop
adc
cmp
in
jae
inc
xor
cmp
add
mov
xchg
push
pop
mov
pop
fcomi
push
pop
js
mov
testb
inc
mov
inc
push
loope
shlb
inc
sbb
pop
cmp
push
lea
pop
xchg
cld
push
cmpsl
adc
inc
mov
push
std
iret
add
daa
xor
inc
cmpb
jge
jo
cmp
mov
int3
out
sbb
or
fs
xor
fwait
mov
and
aaa
int3
ret
pop
jecxz
pop
dec
xchg
add
leave
sbb
xchg
pop
lock
add
insb
movsb
test
loopne
jno
les
pop
push
pushf
fs
pop
test
sbb
pop
push
popf
or
insl
cmpl
xor
cmp
hlt
data16
aam
addr16
scas
loope
ret
dec
xor
jnp
call
pop
ds
je
int
xchg
jo
imul
adc
mov
xchg
in
adcb
dec
jno
dec
mov
iret
push
pop
mov
xor
fsubrl
sbb
adc
xchg
aam
setbe
sub
lret
push
cmpsl
lock
jmp
adc
sbbb
mov
xchg
xor
addr16
shlb
in
xor
outsl
pop
pop
pusha
jbe
fisttpl
mov
cmp
in
xor
sbb
sbb
je
fwait
pop
outsl
pop
in
or
jne
movsb
and
add
inc
subl
push
pop
add
sub
pop
xor
in
add
into
dec
fadds
pop
mov
mov
or
sub
inc
sub
fisttps
inc
inc
fmuls
aam
icebp
daa
xorl
adc
jns
sub
inc
ss
and
or
aam
inc
add
sub
sbb
xor
fadds
inc
cmp
notb
je
push
data16
arpl
push
cmp
jae
js
jmp
arpl
mov
push
mov
mov
pop
popf
jne
shll
sbb
sbb
add
rcrb
shr
in
adc
fwait
ljmp
in
lods
mov
jne
adc
pusha
sbb
push
je
into
les
mov
push
inc
cs
stc
adc
outsb
sarb
xor
mov
mov
cmp
nop
sbb
xlat
gs
xchg
cmp
push
sbb
repz
xor
and
pop
sub
fsub
add
les
push
es
sub
or
pop
pop
ret
dec
sarb
call
push
aam
aam
jno
dec
xchg
test
jmp
dec
push
imul
adc
pop
jle
movb
pop
out
or
ds
loop
dec
js
inc
push
sbb
sub
sti
nop
xchg
push
fwait
fwait
aaa
sub
jp
fmull
cmp
imul
jge
popa
sub
or
sub
adc
cltd
mov
and
stc
adc
sub
mov
or
xchg
xchg
in
mov
add
adcb
loope
mov
scas
adc
and
adc
insb
push
js
ret
adc
bnd
nop
adc
in
hlt
jns
aas
iret
add
add
sbb
add
xchg
pop
es
adc
and
test
in
and
jl
xchg
add
mov
add
lahf
adc
and
xchg
fldl
add
cmpsw
mov
inc
add
jnp
ja
jmp
fimuls
call
add
cmp
adc
add
jl
push
inc
push
pusha
push
xchg
xor
sahf
add
aam
push
sbb
sbb
lods
arpl
imulb
jb
bnd
popa
das
sbb
repnz
mov
jns
aad
and
mov
iret
inc
call
std
sub
es
pusha
stos
adc
push
ss
push
add
dec
enter
lahf
loopne
add
sbb
out
add
sub
dec
xor
test
les
sqrtps
pop
xchg
ret
out
and
test
push
xchg
add
mull
int
push
mov
jne
mov
push
mov
testb
mov
xchg
aam
mov
xchg
popa
mov
les
imul
sti
les
dec
add
xor
add
lods
push
sub
xor
xor
pop
inc
pop
loopne
mov
or
movsl
es
or
inc
icebp
sub
mov
popf
stos
xchg
adcb
out
jle
mov
aad
sub
mov
cmp
push
xlat
xchg
sub
mov
pop
sub
hlt
inc
mov
ds
sbb
das
dec
sbb
sti
cmp
test
fisttps
cmpb
jne
xor
adc
mov
imul
pushf
mov
ret
cli
test
cld
decb
push
add
pusha
pop
fadds
sub
jnp
jo
sub
mov
movsb
adc
push
loope
test
loop
inc
subb
add
rcrl
div
hlt
aam
lahf
iret
jb
jmp
mov
scas
lock
mov
add
int
sbb
sbb
loopne
or
insl
pop
rcl
add
dec
xor
ds
mov
js
push
push
fistl
or
jnp
cmp
inc
pop
cmp
dec
test
cld
leave
ja
sub
mov
call
rorb
imul
stos
and
mov
cmpsl
mov
or
nop
push
dec
mov
add
adc
les
add
orb
mov
xchg
subl
lea
sbb
add
sahf
push
xchg
adc
push
popa
aaa
adc
mov
andb
add
mov
dec
rclb
mov
repz
add
adc
aaa
jp
clc
jge
rcrb
clc
push
inc
and
out
test
adc
fstl
adc
call
push
jo
sbb
loop
add
hlt
icebp
ret
inc
inc
daa
add
sub
pusha
mov
clc
jnp
push
stos
aas
imul
mov
mov
cmp
ja
mov
negb
cmp
out
cwtl
mov
fstpt
sti
movsb
test
cld
push
or
das
pop
orb
idivl
add
pusha
lea
ret
jns
pop
insl
xchg
lea
xor
enterw
movsb
lea
bound
lcall
aaa
adc
cmp
cmp
dec
testl
xorb
or
cmp
repnz
fdivl
fsubrl
js
in
cli
sub
and
into
push
ret
sbb
cmp
popa
or
rcll
inc
mov
cmc
push
add
add
jnp
xchg
iret
sbb
mov
adc
gs
inc
pusha
mov
cmp
inc
sbb
cmp
loop
aaa
jb
xchg
jbe
jnp
push
filds
pop
hlt
fcoms
add
jmp
mov
imul
bound
xlat
movsl
movsb
push
push
jg
iret
dec
je
dec
ret
pop
jmp
inc
popa
pop
adc
jge
mov
inc
or
push
jmp
mov
jo
fs
lahf
stc
or
fs
or
aam
rcr
fdivrl
out
dec
loope
imul
or
repz
adc
test
out
cmp
xor
push
lods
sub
mov
add
cmp
add
cmp
mov
fdivl
mov
das
mov
jmp
sub
mov
cmp
popa
shl
out
inc
nop
div
push
push
loop
jo
dec
adcb
and
cmp
rclb
adc
cmpsb
rcrb
add
mov
adc
or
dec
jmp
call
adc
or
dec
pop
lds
arpl
xor
jmp
call
and
jne
and
push
mov
or
je
add
add
pushl
push
inc
mov
orl
lahf
fisubl
out
sbb
imul
sbb
loopne
in
jecxz
fcoms
inc
lock
shrl
push
testl
mov
pop
sub
dec
or
pop
add
pop
push
or
nop
hlt
int3
mov
jae
outsb
jno
cmp
push
iret
movsb
add
adc
arpl
roll
jne
add
xor
ret
subb
mov
inc
loope
insl
push
pop
lcall
test
loopne
stos
ret
jmp
cmpsl
inc
jl
lds
insl
sub
inc
inc
out
inc
aad
lock
add
push
popf
or
or
ret
daa
or
es
add
mov
sarl
add
pop
mov
adc
jns
pop
inc
jmp
aas
and
push
je
push
adc
mov
pop
mov
cld
mov
aam
cmp
mov
pop
out
pop
subl
xlat
add
cmpsl
dec
jns
orb
adc
int3
out
push
xor
scas
mov
dec
sub
jmp
push
shl
cmp
cmp
add
dec
mov
cmp
sbb
xchg
adc
and
orl
scas
mov
mov
shl
add
call
scas
inc
or
enter
mov
dec
sub
or
outsl
shrb
ret
cld
add
ljmp
and
ds
pop
iret
outsb
sub
fidivl
and
scas
shl
bound
daa
mov
cmp
arpl
andl
jle
ret
cmpsb
and
jp
xor
jno
stc
mov
sub
dec
sti
out
fidivl
cmp
pusha
jb
jnp
dec
sahf
xchg
test
pop
mov
out
fcmovnbe
daa
fimuls
out
testb
out
and
jmp
xor
nop
fimuls
pop
mov
int3
and
add
popa
mov
nop
ret
mov
pop
jl
pop
xor
insl
das
add
je
pop
push
adc
test
inc
mov
xchg
add
mov
sbb
or
adc
mov
and
and
popf
mov
cld
xchg
movsb
mov
adc
adc
insb
outsb
test
mov
jno
imulb
lea
in
mov
xchg
pop
and
pop
adc
sbb
es
ja
inc
mov
out
jmp
cmp
sbb
shlb
inc
dec
inc
mov
pop
clc
cmc
sbb
jno
cmc
push
and
xchg
jo
inc
aad
jae
jb
jne
inc
or
pop
inc
and
push
movsl
jmp
inc
xchg
sub
call
cmp
add
or
xor
pop
je
jg
aas
mov
and
push
add
testb
cs
test
dec
rorb
movsl
lock
rolb
jg
inc
push
fmul
cmp
inc
call
xorl
into
mov
andl
lea
pop
cmpsb
jns
cltd
mov
sbb
inc
sbb
lret
push
rclb
aas
add
adc
aam
adc
mov
mov
add
mov
rcrl
das
shlb
jle
cmp
mov
push
sub
mov
mov
and
sarl
push
in
call
dec
cmpsl
popa
lods
xchg
shll
mov
mov
pop
cld
pop
mov
xchg
test
cli
inc
lahf
mov
dec
mov
ret
mov
jo
jno
mov
test
pop
repz
shll
hlt
rclb
adc
pop
cmp
jmp
cwtl
fadd
clc
dec
lock
lea
stc
lock
out
dec
or
or
or
inc
and
add
subb
leave
mov
lea
out
call
clc
and
int
dec
and
mov
outsl
mov
cmc
incl
sub
aas
sbb
xor
test
dec
movsl
xchg
xchg
push
in
rolb
jnp
in
push
xchg
dec
bound
mov
push
cltd
outsb
mov
repz
mov
sbb
das
dec
pop
pusha
cmp
loopnew,pn
or
dec
insb
out
push
xor
jbe
jne
je
dec
or
jp
test
xchg
fstpt
mov
subb
push
pop
rorb
orl
sub
imul
cmp
xchg
mov
hlt
jmp
sub
out
adc
psllq
jmp
daa
pop
test
pop
lahf
pop
nop
jmp
push
mov
addl
das
dec
cli
loop
jmp
leave
push
fs
cmp
push
and
xchg
dec
cmp
lods
cmp
push
inc
adc
cmp
jns
mov
dec
or
dec
mov
mov
mov
loopne
lock
lods
inc
or
inc
adc
mov
scas
test
dec
pusha
mov
xchg
std
push
jp
mov
add
ret
mov
movd
and
and
jg
sbb
mov
push
cmp
test
mov
ds
mov
sti
hlt
jl
adc
sbb
xchg
dec
add
add
jo
xorb
pop
lret
maskmovq
testl
xor
and
cmp
and
adc
push
mov
in
call
adc
add
vprotw
xor
lods
xchg
inc
popa
push
lcall
xchg
loopne
jecxz
aaa
push
mov
xchg
pop
rcrl
push
pop
aad
add
inc
negl
cmp
and
pusha
mov
cmp
xchg
sbb
ds
pop
push
fcompl
xchg
pop
popf
xor
add
push
call
add
lods
lock
ds
cld
dec
shlb
es
pop
cmc
xchg
mov
sub
push
daa
xor
or
cwtl
dec
push
push
aaa
cwtl
push
cmp
sub
or
aam
dec
cmp
mov
hlt
sbb
adcb
mov
shrb
or
das
adc
push
or
cmp
lock
popa
adc
lds
push
jo
cmpsl
xchg
xchg
movb
xor
xchg
imul
fwait
loop
mov
dec
dec
mov
mov
rclb
rcr
mov
mov
inc
and
dec
xor
lds
mov
sbb
into
je
pusha
cmpl
test
sbb
jle
or
sbb
in
mov
rorl
clc
lds
cmpl
lea
lock
rol
and
mov
cltd
rol
cmpsl
xor
pop
int
inc
fdivl
in
sub
fdivrl
jnp
cmp
je
add
push
adcb
adc
fisttps
adc
es
ficompl
cld
sti
mov
loopne
dec
sbb
popf
and
test
sbb
ljmp
inc
sbb
dec
push
sbb
out
dec
or
adc
repz
pop
add
mov
lods
cmpb
test
jmp
push
out
daa
push
mov
cmp
cmc
pop
mov
clc
call
push
mov
xor
jnp
mov
and
mov
push
movsl
sbb
int3
enter
icebp
bound
dec
ret
adc
mov
lock
lock
and
fildll
clc
aam
add
mov
add
adc
inc
sbb
adc
cmp
shlb
pop
pop
and
or
cmp
stos
adc
scas
pop
sti
lds
orl
xor
adc
mov
inc
adc
into
les
pop
xchg
inc
adc
sbb
adc
in
fwait
or
mov
or
call
jmp
mov
jl
dec
lock
cs
je
paddusb
ljmp
and
mov
add
jl
add
sub
lock
aad
and
adc
or
xor
or
fisubrs
setne
mov
fwait
ret
add
sbb
cmp
incb
mov
sbb
adc
jge
mov
nop
inc
add
push
outsl
jo
cmpsl
add
filds
xchg
xor
or
inc
inc
xchg
fcompl
pop
inc
notl
arpl
mov
pop
imul
xlat
inc
add
pop
outsb
loopne
inc
sti
dec
jne
or
cmp
jne
daa
call
mov
hlt
dec
mov
sbb
adc
and
push
adcb
pop
pop
scas
or
in
mov
addr16
ret
or
data16
pop
dec
in
sbb
xor
frstor
and
in
sbb
xchg
xorl
pop
andb
dec
jne
in
rorb
jbe
pop
jnp
add
fsubrs
subl
test
mov
addb
lcall
out
gs
jmp
sbb
or
and
fists
mov
aam
lods
push
daa
adc
enter
inc
inc
add
sbb
or
pop
inc
cld
jo
insl
add
inc
sub
sbb
aas
les
inc
ret
xor
test
jge
add
jg
push
dec
cmp
xlat
js
je
xor
pop
mov
pop
xlat
clc
mov
sbb
lcall
adc
orb
stos
inc
push
jle
call
add
add
aaa
sbb
aas
loopne
and
ja
bnd
sbb
les
cmp
and
add
cmp
xorb
jmp
ror
and
push
mov
push
or
sbb
test
add
fs
les
inc
and
dec
sahf
push
imulb
inc
jne
es
and
aam
sbb
xlat
push
or
adc
or
inc
and
jle
imul
pop
or
sbb
or
mov
xchg
je
scas
aas
or
inc
or
xor
xor
adc
jl
bound
push
pop
sbb
xchg
insb
jmp
inc
or
xchg
mov
out
xchg
lods
push
jle
mov
cmp
test
add
pusha
mov
filds
bswap
or
loopne
add
push
rclb
dec
xor
mov
outsb
xor
xlat
dec
js
jp
jmp
dec
sarb
jl
aas
sbb
push
pop
out
inc
push
and
dec
pop
sub
cld
inc
ror
jns
mov
in
cmp
fistpl
pop
push
or
push
arpl
jne
ljmp
popa
inc
fimull
dec
loopne
into
cmp
rorb
inc
je
mov
push
out
sbb
sbb
mov
dec
repnz
mov
pop
subl
stc
and
add
cmp
cwtl
popa
push
mov
push
push
sahf
and
insb
xlat
es
adc
lret
cmp
jne
pop
adc
test
scas
frstor
wrmsr
push
sub
cltd
push
pop
mov
push
and
jmp
cwtl
mov
mov
inc
add
jle
sbb
pusha
and
test
sub
ror
inc
pop
mov
movsb
cld
push
sbb
js
mov
adc
mov
sbb
outsb
jne
inc
dec
adc
lcall
add
jecxz
rcrb
mov
fstl
nop
iret
adc
adc
add
ret
aam
xlat
pop
adc
xor
mov
or
fstpt
sbb
add
loope
adc
dec
arpl
push
test
sub
push
test
inc
sbb
aam
add
jl
xlat
pop
sti
stc
mov
pop
lods
xchg
loope
inc
std
dec
adc
push
adc
fcmovbe
jo
imul
test
adc
or
or
test
add
push
mov
mov
mov
cmpsl
xchg
pop
xchg
ret
lret
or
xchg
hlt
sbb
rclb
adc
sbb
int
or
jne
cmp
xchg
insl
jg
or
in
pop
mov
mov
testb
stos
pop
hlt
jle
mov
or
adc
jo
ror
rol
xchg
fwait
adc
sub
and
add
fdiv
or
call
add
or
inc
push
sub
pop
loopne
xor
push
and
imul
push
and
nop
jp
repz
sbb
push
push
outsb
popf
les
xchg
push
or
sbb
xlat
add
sar
sub
inc
sbb
ret
cmpsl
sbb
dec
in
call
cwtl
dec
xchg
icebp
adc
insb
adc
ds
test
and
cmpsb
or
insb
popa
mov
or
mov
push
mov
in
jb
mov
aam
daa
xor
je
inc
mul
ret
jmp
cmpsl
movl
sub
add
sub
or
sbb
dec
in
adc
bound
leave
adc
mov
mov
mov
jbe
enter
insb
xor
das
clc
das
sub
xorb
pop
add
cmpsl
xor
cmp
test
insl
stos
pop
cmpsl
shlb
inc
cld
xorl
adc
add
test
call
jmp
pop
mov
add
mov
mov
push
cmc
cmp
inc
rorl
pop
push
add
inc
add
mov
push
sbb
call
movzbl
lea
add
mov
pop
or
add
add
imul
cmp
or
or
push
cmp
fisttpl
mov
mov
pop
jo
jle
inc
rorl
or
jge
adc
sub
mov
push
mov
dec
dec
pop
mov
mov
movsb
sar
dec
adc
rcll
cmp
arpl
outsl
fsubs
mov
mov
and
jbe
pop
pop
inc
pop
in
add
lcall
call
outsb
and
xchg
push
push
mov
test
imul
loopne
push
push
push
dec
icebp
add
fs
push
cld
jg
call
xchg
add
into
push
mov
jo
push
inc
and
clc
and
imul
jo
adc
lret
dec
sbb
sbb
out
inc
pusha
arpl
cs
sbb
lahf
mov
mov
mov
mov
inc
mov
mov
call
cmpl
sbb
subl
sub
add
push
int3
lret
cmp
add
and
test
sub
sbb
lret
in
iret
loopne
sub
pop
and
xor
adc
sbb
les
mov
jp
daa
daa
daa
mov
daa
daa
jb
je
daa
daa
daa
daa
jbe
js
daa
daa
daa
daa
jp
jl
daa
daa
daa
daa
jle
pusha
popa
daa
daa
daa
daa
bound
gs
daa
daa
daa
addr16
daa
daa
daa
push
insb
insl
daa
daa
daa
daa
outsb
outsl
push
push
daa
daa
daa
daa
push
push
push
push
daa
daa
daa
daa
push
push
pop
pop
daa
daa
daa
daa
pop
pop
pop
pop
daa
daa
daa
daa
pop
pop
inc
inc
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
inc
inc
dec
dec
daa
daa
daa
daa
dec
dec
dec
dec
daa
daa
daa
daa
dec
dec
xor
cmp
adc
xor
scas
sub
aam
lods
mov
ret
in
add
cmpsb
insb
outsl
pop
sbb
and
scas
divl
addr16
fdivrs
mull
arpl
scas
inc
sbb
adc
mov
decb
sbb
inc
add
movsb
fnstsw
and
cmp
scas
jmp
jge
inc
callw
int
cli
fwait
jae
add
push
or
xchg
and
jle
adc
add
lock
or
jae
je
pop
jnp
xchg
mov
push
je
insb
xor
sbb
push
data16
enter
or
je
arpl
adc
add
repz
gs
imul
mov
insl
or
fiaddl
es
outsb
int
mov
cs
jo
outsl
sbb
push
inc
xchg
add
sbb
or
push
pusha
out
add
inc
jl
or
mov
les
add
xor
int
inc
insb
mov
push
push
push
je
into
insl
dec
outsl
jo
je
jae
fcomi
insl
inc
push
jns
sbb
mov
aam
addr16
and
add
out
ret
sbb
xchg
jge
ss
xor
aas
mov
push
jb
pop
push
subl
ja
ja
dec
dec
and
jb
fimull
lret
lock
push
add
fcomp
or
dec
jl
jp
or
insb
fisubl
lods
push
push
arpl
inc
inc
mov
addr16
inc
outsl
jb
cmp
es
mov
test
mov
xchg
push
sbb
push
pop
mov
scas
test
pushl
mov
dec
or
mov
or
xor
lods
sub
push
aam
aas
inc
imul
lahf
cmp
int
fstpt
and
subb
push
mov
sahf
out
fwait
pusha
push
test
jb
and
push
pusha
jge
mov
dec
loope
xorb
enter
push
cmpsl
shlb
pop
lret
add
icebp
iret
pop
adc
push
pusha
aad
adc
sbb
push
dec
or
add
pop
adc
ret
stos
aas
loopne
inc
leave
inc
adc
rclb
add
scas
les
aas
push
push
dec
mov
les
inc
scas
xlat
xor
cli
inc
sti
xor
add
mov
sahf
cmpsl
enter
inc
push
mov
stos
pusha
call
adc
xchg
cmp
xlat
jbe
and
out
pop
fcoml
sbb
loopne
int
sahf
addr16
mov
call
pop
xchg
pextrw
add
subl
insb
push
xor
roll
pop
pop
sti
lock
shl
add
add
addl
iret
pop
iret
jge
push
or
add
aas
xor
cmp
stos
lods
aas
lsl
push
inc
je
or
mov
out
ds
in
rcrl
test
rclb
jo
cmp
push
cmp
sbb
cs
es
add
add
roll
xor
add
andb
lds
bound
jb
xchg
scas
out
pop
daa
and
loope
rorl
fadds
in
pop
push
inc
popa
pop
pop
xor
sbb
push
mov
in
adc
fcom
imul
xor
add
sbb
adc
mov
or
cmp
jge
sbb
xchg
adc
int3
imul
xchg
push
or
xchg
xor
lret
mov
sbb
faddl
fsub
mov
push
rcll
clc
int3
jae
stos
addl
lahf
pop
data16
mov
es
xchg
test
cmp
fstl
popa
xlat
push
sbb
xchg
mov
addr16
push
sub
xchg
fistpll
add
push
inc
out
sysret
dec
add
push
out
pop
rorb
xor
in
mov
pop
dec
adc
fdivrl
shr
mov
adc
js
fisttps
mov
sbb
add
ja
mov
add
or
push
xchg
mov
fs
insl
popa
addr16
pusha
mov
ror
mov
inc
hlt
mov
or
enter
mov
mov
ds
les
xor
mov
inc
push
and
sbb
pop
pushl
mov
jno
inc
cs
dec
push
push
jne
pop
pushf
pop
dec
mov
mov
das
mov
dec
dec
adc
pushf
push
mov
pop
mov
push
dec
orb
push
push
cld
pop
fs
int3
roll
adc
xchg
addr16
fsubs
lods
pop
sbb
sub
test
dec
lods
ds
pop
jnp
popl
out
xor
or
hlt
lds
testb
nop
add
mov
pop
jo
or
mov
ret
xchg
push
xlat
xor
xchg
outsl
jo
pushf
push
xlat
mov
jae
pop
outsb
xlat
xor
inc
dec
push
push
push
dec
pop
jle
cmp
xchg
sbb
nop
push
movsb
imul
dec
pop
sbb
imul
cmp
repz
push
or
mov
add
scas
push
mov
add
nop
cmp
rorl
rol
xor
inc
dec
jne
sbb
mov
pop
mov
test
push
push
or
mov
xlat
das
cmpsl
mov
or
not
clc
imul
movsb
into
inc
cli
loope
add
adc
mov
inc
or
xor
inc
add
push
pushl
data16
loopne
in
jne
inc
mov
adc
insl
pushf
sbb
or
fmulp
inc
cmp
xor
xor
jmp
adc
add
push
inc
cmp
rclb
movsl
mov
sbb
adc
decl
rolb
addb
or
clc
xchg
enter
inc
pop
shlb
mov
sbb
mov
popa
add
in
cwtl
orb
in
arpl
sbb
mov
or
sub
sbb
dec
addr16
rolb
sub
lock
mov
inc
push
mov
rcrb
imul
rol
pusha
sbb
mov
inc
and
pushf
mov
xlat
cmp
mov
or
scas
mov
in
sub
adc
mov
cmc
push
mov
xlat
sbb
inc
add
jecxz
mov
loope
add
aad
rolb
mov
pop
adc
sbbb
jl
in
sub
jge
push
jge
add
test
cmp
cmc
mov
idivl
add
lret
pop
popa
loope
push
das
dec
add
leave
xchg
push
lds
add
add
loope
cmp
jg
mov
aas
sbb
pop
cmp
addb
clc
mov
add
cmpsl
or
nop
and
mov
add
adc
and
das
xchg
scas
xchg
fiadds
arpl
pop
or
xchg
add
addb
sbb
dec
insb
mov
pop
push
dec
popa
jbe
fldt
shlb
insb
xchg
test
jle
gs
insb
pop
cmp
or
pop
push
imul
rorl
xchg
gs
rcr
pop
scas
outsl
ja
lahf
inc
dec
in
jne
or
arpl
imul
jno
popa
mov
popa
pop
pop
jnp
adc
jmp
jns
jbe
bound
in
dec
and
push
filds
mov
sub
cltd
push
bound
lsl
cmc
inc
popa
pop
pop
jo
push
nop
fidivl
pop
imul
mov
push
addr16
mov
adc
inc
je
inc
push
xchg
stc
cmp
mov
das
or
inc
add
xor
xchg
out
sub
cmp
dec
daa
or
sub
push
inc
inc
sbb
pop
daa
pop
xchg
imul
sbb
mov
mov
or
outsl
sbb
fsts
adc
movsl
andl
lea
nop
sarl
cltd
lods
loope
fcomip
aaa
adc
insb
andb
aaa
int
in
sbb
or
outsw
inc
push
enter
pop
add
pop
ret
outsb
jne
pop
xchg
fwait
or
or
sbb
sbb
addr16
push
arpl
add
jle
inc
inc
imul
das
daa
mov
or
imul
daa
or
mov
sub
in
out
jge
push
fcompl
loop
lcall
ret
push
mov
lock
pop
dec
data16
mov
or
mov
or
fdivs
cmpsl
pop
or
testl
dec
inc
push
push
inc
push
add
rcr
jg
inc
inc
inc
push
dec
push
xor
mov
and
inc
dec
dec
arpl
inc
inc
push
or
dec
inc
push
dec
dec
push
mov
jnp
inc
inc
push
xchg
inc
dec
dec
and
stc
ret
popa
out
inc
inc
xor
xor
jg
sbbb
dec
mov
aas
fiaddl
xchg
inc
push
inc
inc
dec
sbb
push
push
push
dec
sub
dec
pop
fcmovnbe
lcall
inc
mov
aam
inc
inc
inc
das
mov
push
push
push
test
mov
xor
push
xlat
adc
push
push
and
outsl
push
push
dec
push
inc
scas
dec
inc
dec
les
mov
mov
mov
pop
jmp
mov
js
das
pop
test
push
push
push
pop
pusha
inc
imul
cwtl
jl
add
xchg
push
inc
sarb
or
or
rcr
sbb
jne
add
add
or
lea
rcrb
and
sbb
inc
or
dec
sbb
xor
inc
push
cmp
stc
test
or
add
add
pop
sub
add
xlat
loopne
inc
das
shlb
pop
popa
mov
mov
and
sub
es
imul
mov
inc
insb
xchg
test
mov
in
rolb
test
mov
sub
mov
mov
fs
or
pushl
dec
enter
mov
dec
scas
jle
call
cmpl
sub
mov
out
mov
pop
outsl
sub
mov
pop
aad
jno
xor
xchg
push
sbb
das
cmp
mov
das
pop
add
lods
pop
jo
or
jne
leave
lret
push
add
inc
leave
sarb
cmp
inc
or
dec
push
mov
pop
aam
sahf
mov
mov
mov
mov
ss
mov
filds
movsl
mov
mov
out
int
je
movsl
sub
push
mov
mov
jbe
mov
mov
nop
stos
xor
sbb
inc
aam
add
or
in
add
mov
adc
aam
pop
dec
fdivr
add
rcr
and
lock
sbb
pop
push
cmp
add
icebp
jbe
jmp
adc
xor
movb
push
fcomp
inc
popf
ss
cmp
test
or
fisttpl
arpl
push
clc
or
xor
dec
adc
xlat
mov
inc
test
or
call
or
adc
mov
xlat
movsl
outsl
or
xor
mov
inc
sti
inc
ret
lock
imul
push
mov
push
aam
push
inc
fsubrs
test
cmp
gs
testl
lea
push
mov
sub
jb
addl
orb
dec
lcall
mov
loop,pn
neg
addr16
push
das
pop
fsubrl
neg
push
sub
mov
sbb
rorb
sbb
pop
xchg
les
xor
ja
data16
inc
sbb
xchg
test
loope
xchg
pop
loope
rolb
pop
sbb
or
mov
movsb
add
movb
imul
clc
jb
rolb
test
cmpsl
int
sbbl
clc
mov
in
pop
xchg
int
add
adc
mov
push
nop
shll
xchg
dec
add
sbb
dec
or
and
pop
lock
xchg
xchg
mov
pop
dec
pop
add
pop
add
jne
jae
das
jne
rcrb
fiadds
adc
inc
lods
xchg
pop
cld
sbb
mov
inc
test
insl
pop
test
subb
dec
clc
in
clc
testb
push
cmp
enter
sbb
rorl
repnz
add
sbb
ret
ficompl
pop
or
xchg
cld
in
mov
push
jmp
mov
js
add
and
jp
inc
cs
int
shlb
xchg
mov
nop
mov
shrl
add
mov
and
rcr
shlb
loopne
ret
inc
sub
icebp
shlb
cld
fisttpl
nop
mov
add
mov
data16
and
jne
inc
ret
push
sbb
xlat
addb
sub
adc
inc
mov
sbb
jnp
mov
xchg
and
insb
das
cmp
pop
shlb
push
test
sub
add
sahf
pop
insb
xchg
jmp
push
sbb
cmp
add
out
dec
sti
call
repnz
sbb
cld
inc
dec
mov
aas
sarb
xor
insb
adc
push
or
fadds
push
cmp
lock
lea
clc
adc
adc
add
hlt
lock
or
fldenv
or
sbb
sbb
jl
mov
nop
xchg
lret
mov
cli
sbb
movl
or
lods
cmpsl
and
bound
jmp
mov
outsl
shlb
sbb
loopne
adc
inc
mov
sbb
or
pushf
jge
mov
fidivrl
shrl
cmpsl
out
out
idiv
sbb
push
or
push
add
or
pop
or
or
mov
add
xor
or
sbb
rorb
push
inc
push
fsubs
add
add
cmpsb
pop
and
test
jmp
and
jo
ja
mov
mov
aas
lods
roll
jnp
roll
push
xor
and
mov
add
iret
ret
addr16
add
or
dec
push
or
sbb
in
in
and
in
inc
push
push
in
js
push
pop
pop
mov
in
nop
sarl
aad
insl
push
test
and
dec
outsb
or
cs
pop
jno
inc
push
sbb
loopne
xor
mov
add
fimull
add
les
lods
dec
sbb
aad
xchg
and
mov
iret
adc
punpcklbw
mov
sub
jo
dec
and
lret
mov
mov
dec
mov
mov
or
scas
lds
pop
sbb
mov
daa
mov
push
xor
jnp
dec
dec
add
mov
pop
sub
and
jecxz
mov
arpl
test
mov
cmp
xchg
in
lods
inc
add
xchg
pop
repnz
enter
add
dec
pop
mov
adc
pop
xchg
push
xor
add
mov
scas
mov
xlat
popa
jo
add
int
imul
es
das
sub
hlt
xor
add
push
dec
mov
mov
in
dec
mov
sub
not
and
mov
cmp
je
mov
or
mov
push
repnz
jne
add
sub
push
push
add
es
mov
lods
or
loopne
pop
es
mov
addl
orb
clc
call
addr16
outsl
sub
scas
imul
pop
or
shll
sbb
mov
cli
cmp
je
call
push
and
inc
negb
sub
movsb
sbb
add
or
add
add
roll
lods
pop
xor
push
xor
adcl
mov
xorb
or
push
cmp
jle
adc
adc
xchg
jge
mov
push
and
inc
and
lea
jnp
ret
and
jbe
add
xor
cwtl
inc
xor
add
push
dec
imulb
pop
sub
je
xor
sti
cwtl
jecxz
jb
ds
jo
add
cs
cwtl
aas
push
add
loop
lret
dec
push
scas
out
jmp
cld
das
clc
scas
mov
add
pop
push
test
insb
push
in
or
int3
and
ficoml
scas
shrl
xor
mov
fildl
push
xchg
test
cwtl
pop
sbb
add
push
gs
das
lea
lods
mov
lods
aaa
loop
adc
lret
fistl
cld
dec
test
pop
punpcklwd
push
iret
add
jge
fnstenv
enter
outsl
inc
xchg
aas
fcoml
fdivrl
mov
pusha
mov
push
push
add
mov
add
push
enter
je
cmc
fwait
push
imul
std
fcompl
mov
bound
pop
or
push
addb
mov
xchg
ja
sbb
lock
fnstcw
add
pop
in
outsb
jecxz
jne
or
mov
xlat
ret
adc
inc
adc
pop
inc
or
mov
mulb
adc
jmp
pushf
or
add
mov
rorb
mov
mov
in
xor
xor
not
and
imul
clc
add
fsubrl
push
add
mov
lea
mov
add
cmpl
mov
add
sub
pop
sub
test
sub
lds
and
js
test
push
cs
int3
adc
push
stc
fnstsw
icebp
mov
cwtl
push
xchg
push
jo
popa
in
push
loopne
ss
sub
push
popf
mov
mov
mov
jo
mov
mov
out
fsubl
and
sbb
mov
in
daa
mov
movsb
mov
push
lock
sbb
and
fdivrl
ss
insl
pushw
sub
dec
jmp
pop
ret
mov
sub
enter
add
add
xor
sub
inc
inc
adc
or
arpl
add
decb
js
pop
sbb
loopne
movb
mov
mov
mov
pusha
arpl
inc
add
out
dec
flds
pushf
leave
dec
hlt
add
insb
pop
add
loopne
cmp
cmp
pop
push
mov
fldt
add
and
sbb
cmp
pop
sbb
push
je
outsl
lcall
mov
add
mov
mov
add
dec
add
push
sbb
insb
rcrb
add
mov
dec
push
add
mov
lea
adc
mov
loopne
xor
pop
jl
inc
dec
jne
cmpl
push
jge
mov
inc
mov
add
cmp
add
push
cmp
adc
mov
sub
in
loope
jp
mov
adc
pop
push
push
inc
and
and
or
cli
dec
jns
jmp
loopne
mov
mov
sub
mov
or
jmp
dec
mov
pop
sarb
test
add
adc
orb
xor
cld
push
mov
inc
ret
or
loope
push
mov
adc
mov
aam
and
ss
xor
cmp
mov
cmpl
dec
ds
ds
jnp
js
call
std
lea
jmp
cmp
push
mov
sbb
daa
jmp
addr16
xchg
movsb
gs
or
jo
loopne
fs
lea
imul
icebp
fcomip
das
jmp
mov
cmp
ja
clc
dec
inc
movsb
ret
in
loop
clc
pusha
push
mov
cmpb
shlb
icebp
dec
das
push
or
ja
and
cmc
jns
sub
sbb
add
add
mov
push
subb
cld
pop
and
adc
sub
push
addr16
jl
add
daa
dec
jg
adc
adc
dec
mov
pop
pop
lods
or
cld
xchg
aam
inc
movups
mov
shr
push
xchg
adc
fsub
mov
sarb
gs
es
test
mov
scas
mov
je
push
push
push
mov
sub
dec
push
pusha
add
add
push
dec
ret
sti
sbb
or
in
inc
jl
add
push
cmp
filds
int
dec
mov
loope
test
jl
sbb
cs
hlt
push
addl
jb
icebp
sbb
shrb
or
jge
inc
in
jl
cld
push
aas
jne
lret
gs
adc
fsubs
sbb
dec
in
xor
lods
mov
cmp
add
push
rorb
jmp
jne
adc
pop
cwtl
subb
push
cmpsb
shll
es
push
inc
lods
sub
call
sahf
mov
lret
jle
cld
push
mov
push
in
add
fwait
add
popl
outsb
push
mov
push
rolb
shrb
out
fwait
sahf
imul
add
mov
enter
fcomps
pop
add
mov
loopne
movzbl
sbb
fs
jmp
add
shr
pop
inc
push
adc
push
es
jle
mov
int3
cmc
cmp
jl
mov
enter
add
pop
jg
jl
pop
clc
jle
cmpsb
mov
iret
mov
pop
stos
mov
sti
lods
add
mov
call
cmp
dec
push
jg
mov
xchg
add
lock
loopne
ljmp
fmuls
fiaddl
adc
push
xor
mov
pop
sbb
fmuls
cli
xchg
mov
cmp
xchg
sbb
scas
mov
xchg
dec
fdivrp
or
push
push
addl
aad
push
jno
stc
xchg
insb
sub
pop
imul
mov
adc
fldenv
ds
ret
push
jg
cmp
mov
es
cmp
dec
lsl
jl
and
push
mov
inc
dec
jne
cmp
roll
mov
sbb
xor
out
xor
cli
insl
dec
arpl
call
mov
ss
add
sub
add
adc
dec
int3
aam
or
inc
cmp
iret
dec
enter
jp
mov
sarl
in
xchg
enter
inc
imul
cwtl
mov
cwtl
mov
sarb
pushf
lahf
jne
or
sbb
push
fwait
sub
fwait
sti
sbb
and
ret
push
mov
fmuls
rclb
les
leave
and
adc
adc
js
arpl
mov
hlt
or
or
mov
mov
adc
sub
pextrw
xor
loope
jno,pt
adc
fcom
sbb
test
and
dec
inc
shrd
push
and
push
push
outsl
nop
pop
pop
lock
pop
je
jmp
add
sbb
sub
test
cmpsl
mov
je
or
aas
mov
fdivl
mov
jnp
std
add
xchg
insl
in
mov
dec
or
jle
lock
cld
add
negl
inc
push
int3
jmp
mov
jmp
adc
or
imulw
adc
pop
orb
or
inc
and
add
jge
cmc
and
lcall
sub
or
mov
mov
push
pusha
mov
jp
jg
pop
lahf
jp
cwtl
dec
xor
cmpsl
das
sub
mov
add
rorb
add
or
sub
cmpsb
dec
and
fstps
push
and
repnz
orb
pop
mov
mov
push
inc
pause
iret
add
rol
ret
or
addr16
mov
fildll
xchg
add
in
out
rclb
pop
push
imul
sub
ret
scas
ret
push
push
addr16
inc
inc
leave
in
pusha
arpl
hlt
or
sbb
bound
jg
adc
fistl
or
add
in
pop
movsb
decl
dec
sahf
push
sbb
adc
push
lock
aad
in
jo
inc
loopne
pop
mov
pop
lcall
in
hlt
int3
sbb
call
scas
sbb
sbb
mov
call
adc
in
loopne
ljmp
dec
mov
loope
xchg
add
and
int3
and
push
aas
push
add
addb
pop
notb
pop
mov
data16
out
or
adc
fidivl
mov
dec
lods
mov
mov
or
mov
data16
data16
out
mov
test
mov
mov
mov
adc
test
cmp
sbb
in
in
adc
hlt
xlat
mov
loopne
mov
jle
lds
clc
call
aad
cmc
int3
addl
add
xchg
test
icebp
cmp
mov
add
sub
pop
iret
adc
pop
xlat
add
xchg
mov
push
into
cmp
aaa
pop
mov
adc
int3
mov
sbb
shll
mov
xchg
sbb
adc
xor
push
mov
cs
xor
nop
addr16
movaps
dec
rolb
pop
test
cmp
or
test
popl
xchg
adc
ret
cmp
mov
sbb
sbb
cmp
je
sub
sub
shrb
fistpll
repz
sahf
and
filds
and
clc
in
push
bound
mov
dec
sbbl
jg
jo
hlt
rorb
adc
sbb
add
adc
rcrb
push
cmp
cmp
sub
add
aad
and
dec
cmp
mov
mov
add
xchg
andl
lcall
push
out
sbb
and
jmp
rcrb
cmp
pop
adc
push
adc
xchg
repz
push
enter
cld
loope
sub
fbld
and
daa
lock
lock
je
dec
cmp
rorb
xor
jb
pop
insb
pusha
add
pop
mov
setp
pop
aam
jo
and
cs
sub
mov
movl
and
push
int3
xchg
mov
out
aad
mov
ss
xor
push
pop
rcrb
int3
xor
xor
jbe
mov
jl
insl
xor
nop
mov
decl
pushl
xorb
dec
xchg
sbb
loope
xlat
in
sub
imul
or
leave
es
loopne
sbb
sub
lods
insl
fadds
or
adc
or
add
movsl
and
sub
add
ret
ja
inc
gs
imul
add
and
cmpl
or
mov
iret
js
insl
add
jge
mov
insl
pop
push
punpckhdq
adc
arpl
icebp
movsl
cltd
add
sbb
mov
xchg
in
sbb
icebp
out
sbb
dec
pop
or
aas
inc
pop
rcrb
sub
push
pop
xor
inc
adc
fdiv
xchg
and
cwtl
aaa
testl
dec
jo
orps
sub
or
lods
dec
xor
pop
mov
lock
pop
enter
loopne
fsub
aad
and
hlt
add
je
addb
rsm
dec
add
add
pop
enter
inc
and
push
mov
mov
adc
add
fstl
imul
inc
insb
lds
int
jge
add
cmpsl
cmp
je
mov
cmc
out
mov
mov
fldt
fistl
stos
push
push
adc
lock
test
or
cwtl
sahf
rcpps
or
xchg
cmp
mov
stc
jp
sahf
xor
cltd
andb
adc
cmp
rolb
jmp
inc
push
jno
cmc
adc
jnp
sbb
xlat
jl
xor
je
fiaddl
jne
mov
sub
adc
movl
or
loopne
dec
pop
cmp
ja
sbb
and
add
or
and
subl
mov
les
dec
mov
mov
int3
sbb
dec
sahf
and
inc
jne
sub
mov
cmc
add
add
dec
mov
push
or
mov
push
jo
int
fs
pop
xchg
cld
inc
lods
jae
ljmp
jae
loopne
or
or
inc
adc
mov
les
add
mov
jge
xor
jmp
mov
ffreep
inc
mov
cmpsb
test
faddl
cmp
gs
add
cwtl
add
aad
lock
add
sub
sub
mov
mov
push
sbb
adc
lock
push
push
sub
cli
test
lret
repz
sbb
inc
push
and
lods
ss
fistpl
int3
fs
sub
lcall
push
and
add
cmp
lret
push
sbb
dec
lods
out
fdivrs
cmpsl
mov
outsb
lret
hlt
cmp
pusha
stos
aad
xorl
ss
out
add
mov
inc
loopne
ret
dec
dec
inc
cmp
and
jnp
cmp
mov
cmp
aas
dec
outsl
cmp
je
mov
pop
daa
roll
adc
imul
cs
inc
mov
loop
pop
mov
mov
mov
add
or
cmp
xchg
daa
dec
cmp
jne
mov
xor
cmp
adc
or
in
xor
outsb
cmp
ljmp
jmp
cmpsl
lock
stos
jnp
push
add
dec
mov
sti
jp
mov
imul
jg
outsb
fcomps
imul
mov
adc
iret
or
dec
dec
add
adc
insl
cmp
or
mov
sbb
mov
xor
pop
pusha
mov
adc
mov
and
int
jnp
aas
or
sbb
mov
and
shlb
mov
int3
xor
loopne
jp
xor
sbb
jbe
nop
aaa
mov
enter
fdivs
xor
loopne
lock
outsw
clc
stc
dec
xchg
in
fbld
cmpb
decl
call
add
std
adcl
and
into
mov
cmp
arpl
sub
hlt
push
aad
loope
jmp
or
insb
outsl
sbb
or
aad
adc
xor
add
ljmp
loopne
mov
mov
iret
insb
loopne
fsubrs
sbb
es
pop
jle
inc
pop
xchg
imul
rolb
sub
or
push
repz
rcrb
push
rorb
cwtl
stos
add
push
insl
popa
add
fcomi
push
call
bound
inc
add
ror
mov
test
mov
mov
pop
stos
iret
mov
adc
xchg
lods
adc
add
js
and
in
cmpsb
pop
mov
mov
shlb
push
leave
lahf
pop
incb
movsb
movb
pop
cmpsl
and
inc
test
or
in
popa
mov
cmp
popl
sub
outsb
sub
scas
ss
enter
push
imul
xor
cmpb
push
xchg
lds
scas
fcoms
in
mov
lret
arpl
push
lea
aaa
sbb
aaa
movsl
or
movl
or
jge
cmp
sub
stc
in
cmpb
je
pop
out
cmpsl
and
insb
divb
mov
lea
mov
sub
pop
jp
mov
das
cmc
xchg
je
mov
scas
push
sbb
sbb
add
xchg
adc
sub
jmp
jecxz
inc
and
and
xor
push
pop
lcall
or
push
push
test
aaa
enter
sub
adc
call
push
daa
rorl
idivl
rclb
lods
and
popl
xor
mov
push
adc
jb
clc
mov
sbb
sbb
push
pop
jnp
pop
and
ret
xchg
clc
xchg
insl
jno
arpl
inc
dec
ret
pushf
and
or
mov
sahf
sbb
subb
jo
push
ss
leave
add
jmp
clc
or
mov
inc
jl
cld
sbb
dec
call
add
shl
add
add
inc
ret
push
lods
loope
lahf
fcoms
push
mov
sbb
add
xchg
mov
xor
jb
sub
lock
mov
xor
adc
lds
int
scas
push
push
inc
sub
shrl
pop
in
jae
cmp
inc
ret
pushf
pusha
cmp
rol
scas
mov
add
cmpb
add
mov
sbb
int3
imul
jle
rsqrtps
clc
testb
push
sub
dec
sub
scas
rorl
lds
sti
cmp
lds
rcrl
sub
sbb
cmp
push
dec
stos
cmc
roll
or
sbb
cmp
adc
inc
jbe
add
lock
lcall
pop
nop
popa
mov
pop
addb
inc
ret
add
arpl
mov
je
test
adc
outsb
loop
xchg
dec
fidivs
mov
and
sub
or
inc
adc
fisubrs
inc
and
jne
and
es
mov
mov
mov
and
sbb
add
ret
roll
aas
movl
jmp
adc
push
push
les
jo
aad
xchg
cmp
pop
sub
ds
rolb
add
cmpb
pusha
ret
mov
push
popf
or
rcrb
sarl
lock
and
and
smsw
rolb
ret
jo
xorl
add
loop
xchg
jnp
add
jl
sub
arpl
sub
pop
sub
fs
ds
pop
xor
inc
xor
rcll
add
ret
push
shll
adc
sbb
adc
lock
push
mov
push
or
cmp
jne
or
js
push
pop
add
jmp
adc
pop
loopne
dec
sahf
mov
rorl
lcall
sbb
lea
int3
ds
test
add
and
xor
inc
pop
push
call
mov
jno
pop
ja
dec
jecxz
pop
xor
push
pushf
pop
sub
and
add
adc
icebp
loope
sbb
pop
jb
gs
jmp
dec
pop
fists
mov
dec
cmp
jp
and
test
add
dec
inc
or
or
push
inc
mov
data16
and
adc
push
ja
jae
add
test
mov
push
sub
ret
add
cmpsl
scas
xchg
lret
push
cmp
iret
jne
imul
inc
insb
push
inc
cmpsb
mov
adc
adc
mov
push
mov
xchg
xchg
dec
insb
fnstenv
dec
inc
inc
into
pop
sub
cmpsb
pop
lods
jmp
add
mov
loop
bound
pop
lods
xchg
add
pop
fimull
sbb
add
lds
fcmovnu
push
lds
inc
adc
movsb
dec
movb
push
xor
hlt
filds
pop
clc
mov
cmpb
pop
push
add
adc
xchg
rorl
popf
mov
adc
mulb
xchg
cmp
fmuls
adc
test
fldenv
ss
or
xchg
lods
sbb
sub
cli
sub
jne
push
push
fsts
add
shll
mov
ljmp
repnz
pop
call
push
xchg
adc
inc
inc
lea
adc
movb
add
dec
icebp
iret
popa
popf
cmp
loopne
add
or
sbb
adc
data16
dec
pop
adc
not
inc
inc
movb
incb
inc
and
pop
jne
aas
shll
dec
sbbb
es
jo
lea
mov
sbb
or
in
or
mov
ret
add
lea
aam
xchg
rorb
dec
sub
ja
sub
dec
mov
adc
insb
and
clc
pusha
sub
push
loop
movsl
adc
out
mov
xchg
xchg
push
xchg
or
jo
sbb
inc
pop
push
aad
inc
add
add
or
aaa
cmp
cmovp
push
ret
lock
push
aad
roll
mov
or
loopne
ljmp
or
ffreep
filds
out
jp
arpl
or
add
imul
inc
ss
sbb
dec
mov
vpunpcklbw
mov
sbb
sub
or
cmpsl
jne
cmp
inc
push
lahf
ret
out
or
sti
pop
pop
sub
or
or
cltd
sub
inc
faddl
xchg
cmp
rorl
rolb
mov
jne
or
in
in
push
aam
and
and
add
pop
sbb
adc
movsb
mov
push
jp
sub
pop
and
and
test
dec
sbb
neg
pop
ret
add
inc
test
or
notl
loop
call
loop
mov
je
addr16
jne
or
push
mov
jne
push
dec
sbb
mulb
imul
mov
xorl
xchg
imul
or
mov
push
push
push
or
xchg
or
cmpsl
mov
pop
outsb
adcl
push
sub
or
test
lahf
mov
arpl
jbe
mov
sahf
cwtl
iret
mov
inc
jp
aaa
cmp
xor
loope
add
inc
push
out
or
ja
in
jno
or
movsb
into
pop
lods
and
fstl
sbb
shl
jl
mov
jbe
mov
arpl
in
not
xor
shrb
pop
std
jae
lea
mov
xor
adc
addb
mov
dec
dec
xchg
inc
test
sbb
mov
dec
sarb
dec
xor
jbe
daa
pop
mov
stos
int
xorb
cmp
dec
or
addb
or
movsl
rorb
cmp
dec
and
xchg
pop
mov
or
clc
add
sbb
shll
dec
and
lret
rclb
xchg
and
repz
insl
fisubl
adc
and
mov
addb
faddl
add
gs
rolb
xor
sbbb
test
out
bound
adc
rorb
inc
aam
mov
lds
pusha
and
or
or
push
mov
mov
enter
test
jmp
imul
mov
int
test
scas
push
dec
jle
in
add
push
jmp
loope
mov
or
xor
mov
inc
bound
or
imul
mov
sub
lock
push
push
sub
addr16
xchg
lods
and
in
cmp
inc
loop
or
xor
or
jne
or
mov
iret
mov
add
push
jo
cmp
call
pushf
xchg
fadds
out
sarb
or
sub
or
cwtl
dec
outsl
adc
xchg
movsl
cmp
lea
push
mov
push
xchg
int
xchg
test
lea
sub
adc
adc
repz
mov
jne
ror
xchg
push
nop
lea
or
sub
mov
popa
mov
jle
adc
call
mov
mov
dec
test
inc
aas
fiaddl
inc
icebp
and
cmp
ja
repnz
mov
push
pop
pop
rorb
cli
ret
xchg
mov
imul
lea
test
stos
test
jnp
add
mov
mov
roll
sbb
dec
loope
ret
sub
adc
inc
adc
lcall
inc
js
repz
mov
lock
pop
punpcklbw
inc
pop
test
sbb
cmp
test
dec
mov
mov
lret
xchg
or
cmpsl
jp
orb
jp
push
push
cmp
xchg
dec
inc
lea
mov
xchg
jle
movb
rcll
sbb
sbb
nop
adcb
add
pop
aam
pop
mov
ret
adc
jne
cmpsl
and
push
add
in
hlt
lds
rorb
loopne
in
pop
test
popl
movsb
add
fwait
ds
mov
test
cmpb
sbb
or
mov
push
push
push
push
test
jae
jge
and
cs
or
ret
cmp
inc
test
hlt
add
xchg
int3
jno
shrb
cmp
gs
push
stos
sub
popf
push
or
sub
subb
fcomps
inc
xlat
inc
dec
pop
ds
test
mov
or
ss
inc
push
inc
ret
jne
sbb
push
cmp
adcl
xor
push
data16
pop
inc
sbbl
sub
or
cmpsl
and
test
mov
test
xchg
sbb
in
daa
and
mov
popa
jbe
and
mov
ds
sarb
xor
in
adc
adc
and
js
pop
test
loope
jle
testb
push
addr16
inc
fimull
push
xor
push
cmpb
testb
je
pop
jns
pop
xchg
add
jo
xchg
push
lcall
or
ret
fwait
push
mov
and
inc
mulb
push
filds
sbbb
xor
cmp
add
xchg
mov
push
jmp
or
hlt
xlat
mov
or
ficoms
sub
add
test
or
movsl
mov
add
xchg
push
inc
pop
or
add
data16
push
sahf
ret
push
lock
mov
movb
test
xchg
sub
dec
add
fistps
jmp
inc
popa
adc
mov
pushf
ret
xor
xchg
lea
or
shrb
add
add
movsb
or
mov
and
or
dec
mov
shlb
or
mov
sub
ss
mov
cmpsl
sbb
push
jne
push
inc
adc
mov
call
dec
inc
nop
or
mov
mov
push
pop
xor
aam
mov
out
add
cmp
lahf
test
mov
add
and
mov
addb
mov
xchg
pusha
mov
push
sbb
movsb
fcoms
push
rcr
or
neg
subl
or
sbb
sbb
jo
push
cmp
ds
test
mulb
push
insl
jl
adc
loope
and
sub
adc
cmp
sarl
fldenv
xlat
cmp
mov
pop
sub
jl
sub
movaps
stos
pop
pusha
adc
lret
sbb
xchg
sub
mov
nop
cmp
sub
loope
movsb
pusha
call
or
adc
rol
sbb
xor
cwtl
pop
pop
sub
in
xlat
shlb
inc
lds
adc
dec
fdivrs
add
or
test
add
ja
sub
or
sub
fimull
or
cmp
and
mov
imul
push
mov
imul
mov
pop
pop
mov
fistl
mov
mov
push
shlb
dec
dec
mov
jnp
jno
ja
daa
mov
lock
mov
popa
add
xor
enter
cmp
xorb
lock
mov
add
xorb
into
or
xorb
xchg
dec
cmp
mov
in
cld
ja
mov
jg
jns
subb
subb
sbbl
dec
lock
jp
aas
in
push
adc
add
or
adc
and
std
mov
sbb
sub
mov
xor
out
mov
push
push
and
add
adc
mov
mov
cmp
xlat
shr
lret
mov
or
mov
pop
mov
add
sub
inc
and
adc
add
sbb
out
pop
xchg
inc
add
add
fwait
nop
das
push
adc
popa
mov
fnstenv
pop
mov
and
mov
ljmp
jne
and
or
inc
hlt
subb
dec
jecxz
adc
and
push
std
daa
add
and
incb
lahf
sbb
or
inc
cmp
sti
xor
add
mov
push
orb
lret
decb
ret
rorb
icebp
cmp
ss
test
sub
xchg
bound
xor
data16
jge
pop
sub
test
daa
aad
enter
pop
dec
jo
or
rol
sub
subb
aas
push
add
pop
fldl
jne
out
add
cvttps2pi
je
lock
js
add
mov
cwtl
push
outsl
or
jnp
loop
test
imul
or
orb
loopne
int3
fsubs
xor
pop
hlt
test
clc
ret
and
xchg
aam
add
popf
es
add
pusha
mov
xchg
movb
les
imul
repnz
mov
js
test
push
push
fsubrp
loope
mov
rcll
adc
pop
sub
scas
push
pop
mov
inc
stc
push
fisttps
out
pop
sbb
sub
movsb
sbb
movsb
mov
sub
out
adc
clc
or
xchg
add
xchg
cld
mov
push
lods
sahf
and
jle
sbb
sbb
movsb
or
or
mov
adc
jg
jmp
mov
jo
or
or
ret
dec
and
jno
fcompl
filds
push
push
inc
mov
inc
xchg
lcall
jnp
fdivl
xchg
fists
and
pusha
out
mov
addr16
push
inc
push
or
lock
mov
leave
ds
dec
cmp
sub
iret
push
push
iret
je
iret
mov
push
fists
scas
nop
stos
inc
adc
add
cmp
test
dec
or
ret
xor
aad
jne
lret
cmp
xor
and
or
or
and
pop
ja
add
mov
movsl
fistps
clc
adc
dec
or
pop
pusha
and
or
pop
shlb
inc
add
dec
xlat
pop
sub
pop
adc
lahf
outsl
movsl
and
nop
sbb
or
and
add
fcoms
fs
pop
and
bound
cmp
cmpb
subl
dec
mov
pop
xlat
std
or
sub
mov
sbb
fmull
mov
pop
aas
add
adc
mov
and
testl
add
pop
add
movb
jle
notl
clc
test
aad
sub
inc
lahf
add
pusha
imul
or
pop
sbb
and
lock
inc
pop
pop
push
jmp
jmp
mov
sub
jb
je
imul
adc
dec
adc
adc
mov
or
loope
sti
sbb
pushf
and
mov
pop
adc
add
inc
mov
enter
cmpsl
jge
xchg
xchg
pop
sbb
and
or
push
sbb
rolb
sbb
cmp
pop
loopne
cmpsb
jge
or
sub
and
or
fistpl
popa
cmp
jle
push
pop
push
jle
adc
fildl
sub
imul
adc
movsb
jle
or
and
and
test
dec
jmp
jmp
cs
sub
sbb
shr
sub
pop
fidivrl
add
pop
shr
or
lock
loope
inc
fcoms
nop
push
and
push
nop
nop
sub
adc
dec
adc
rcrl
loopne
and
and
add
jae
xor
mov
push
sbb
ret
or
sbb
pushf
xchg
jl
inc
or
pop
mov
ret
adc
addl
jge
inc
scas
js
test
int
shlb
xor
call
jne
or
cmpl
jb
push
mov
xor
lock
test
or
mov
sub
adc
push
lea
lea
lock
sbb
pop
movl
push
push
jl
lea
mov
inc
lahf
rcll
inc
mov
dec
push
push
loope
test
cmpsl
cmp
mov
add
leave
or
sub
add
iret
cmpsl
sbb
sub
sub
daa
and
sub
xor
jge
lret
pop
aas
cmpsl
cs
test
adc
lods
scas
or
pop
fdivrs
into
subb
or
test
cmpsl
fldcw
add
imul
clc
inc
outsl
jl
xor
neg
mov
daa
xor
gs
mov
test
bound
xor
push
sub
dec
fisubs
jmp
ds
cmp
push
out
add
adc
and
cwtl
sub
mov
adc
xchg
adc
insb
popa
jns
jae
push
pop
pop
das
mov
xor
sbb
mov
push
sbb
sbb
daa
and
jae
call
nop
cmc
pop
sbb
mov
push
push
inc
push
mov
inc
dec
dec
add
and
xchg
sub
loop
dec
lret
cmp
in
jo
gs
insb
std
pop
loope
inc
jg
prefetchw
or
cld
jg
loope
dec
pop
xchg
cld
mov
pop
rcll
mov
and
jns
cmp
inc
fisttpll
push
xchg
mov
or
and
imul
out
cmp
call
xor
out
sub
imul
or
adc
sub
jnp
sahf
xor
test
lcallw
ljmp
and
or
sub
add
mov
or
add
mov
dec
cs
adc
ds
mov
movsb
loope
inc
aad
scas
jbe
or
test
shlb
sub
push
push
test
dec
xchg
or
xor
dec
sbb
add
sub
xor
sahf
sub
idivb
mov
and
cmp
adc
and
sub
inc
mov
pushf
test
repz
loopne
shrl
jns
iret
mov
fistps
out
sahf
out
push
out
idiv
pop
rorb
das
ficoms
mov
mov
sub
mov
sbb
add
mov
push
xor
cmpsb
xchg
movb
cmp
js
xchg
xor
fimuls
and
loope
mov
push
cmp
sysexit
ss
lods
inc
shlb
cli
jo
mov
cmpl
inc
push
test
daa
and
fbstp
in
frstor
ret
mov
cmpsb
fsts
xor
testb
iret
cmpb
sub
lret
mov
clc
mov
push
dec
add
pushf
stc
add
inc
push
jmp
inc
mov
push
cmp
push
add
mov
adc
sbb
adc
lea
cmc
jne
xor
movl
adc
add
aaa
les
cs
xor
iret
mov
cmp
notl
sbb
push
test
into
in
pusha
sub
dec
imul
adc
rolb
ror
pop
dec
dec
xor
adc
hlt
xchg
dec
and
sbb
or
mov
xor
rcll
sub
xchg
adc
xor
call
push
push
loope
and
int3
push
pop
mov
jle
leave
popa
add
pushw
push
inc
lret
dec
adc
jg
xor
rol
flds
xchg
sub
ljmp
icebp
lock
ljmp
addl
and
sbbl
add
push
es
xor
and
adc
aam
or
sbb
pop
mov
movsl
and
inc
push
add
popa
outsl
loopne
cwtl
loope
or
or
test
adc
cmc
cmp
sub
jne
sbb
cs
xchg
nop
popf
pop
add
rolb
adc
test
and
add
inc
push
jle
cmc
test
and
xor
dec
jmp
jo
int3
mov
add
leave
icebp
add
popf
movsb
aas
cwtl
pop
and
push
imul
ret
jge
enter
fisubs
aas
inc
sbb
ss
dec
sub
aas
mov
xchg
push
jp
push
add
cld
data16
mov
cmp
je
xor
adc
and
mov
inc
push
cmp
inc
cs
xchg
pop
xor
pop
dec
out
cmpsb
inc
cmp
daa
fnsave
mov
push
movsl
add
pop
rorb
add
mov
icebp
add
or
stos
sub
flds
cmp
cmpsl
xor
push
jo
or
stos
test
fsubrl
aaa
add
test
mov
push
or
and
adc
sti
cmp
cwtl
push
push
mov
dec
push
lcall
pop
into
push
sub
mov
and
push
and
movl
mov
dec
pushf
daa
push
js
fadd
cmp
loope
or
mov
lea
pop
push
lret
in
jmp
dec
js
xchg
xor
loopne
lock
call
ss
cmpl
jecxz
push
and
gs
dec
addb
shrb
icebp
ja
daa
and
mov
call
adc
pop
iret
sub
ret
dec
mov
aad
in
pop
inc
adc
jne
mov
pushf
jecxz
insl
inc
inc
test
mov
shll
lock
cmpsb
ja
lock
jbe
jecxz
shll
nop
call
jl
jmp
cld
loopne
nop
cmpsb
mov
push
and
add
inc
and
arpl
or
push
or
add
pop
test
push
test
xchg
sbb
out
xor
movsb
cmp
lock
sbb
push
stos
test
inc
pop
pop
cmp
or
ret
xor
mov
or
inc
subps
inc
xor
aas
xchg
orb
add
rcr
cmpsl
cmpb
or
or
shl
sub
mov
mov
dec
and
dec
je
iret
and
in
push
mov
loopne
and
and
push
clc
enter
jmp
push
inc
adc
es
lods
hlt
mov
popa
add
jns
cmp
add
jbe
ret
hlt
and
test
and
mov
pop
fdivr
sub
or
sbb
jmp
aam
enter
adc
sbb
test
sbb
mov
and
cmpl
mov
sbb
movsl
inc
ds
pop
cmp
or
adc
je
cmp
arpl
mov
rcl
subl
test
call
xor
shlb
jl
dec
jl
ljmp
jae
xor
add
cmp
push
xor
outsb
push
push
subb
push
cltd
je
js
stos
pop
add
notb
fisubl
dec
addr16
push
out
pop
rolb
push
in
push
jb
xchg
push
enter
and
push
jns
loopne
jb
xchg
lret
clc
pusha
add
or
pusha
or
nop
lret
fs
push
and
xchg
push
add
test
pop
or
je
mov
mov
rolb
xor
sub
push
sub
sahf
adc
pop
mov
jb
sub
push
das
push
popa
fs
inc
outsb
insb
fcmovb
inc
or
pop
push
add
or
aad
roll
outsl
jae
daa
or
adc
shll
dec
jne
jo
jl
enter
lahf
jo
enter
in
mov
aas
ja
ds
jo
lcall
pusha
test
xor
push
push
push
or
fisubrl
sbb
dec
ds
push
inc
movsb
dec
xchg
loopne
push
inc
jb
cmpsl
je
cmpsl
scas
push
les
dec
sbb
pop
add
dec
pop
je
pop
aaa
cmc
adc
test
pusha
and
pop
test
mov
shrb
or
pop
jg
xchg
add
leave
and
sub
cmp
mov
aam
push
xor
cmpsl
mov
push
decl
andb
test
addb
mov
sbb
sbb
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
int3
rcl
sbb
sbb
fcomp
loopne
sbb
sbb
call
sbb
sbb
cld
add
sbb
or
adc
sbb
sbb
sbb
and
sbb
sbb
sub
xor
sbb
sbb
cmp
stos
jg
xor
vcvttss2si
sbb
xorb
mov
sub
shlb
cmp
add
sbb
add
xchg
lcall
jne
aam
dec
gs
mov
nop
xchg
xchg
add
dec
pop
mov
cwtl
loop
sub
add
or
push
or
gs
test
lods
and
cwtl
push
push
movsb
xor
lret
int3
shlb
add
push
sbb
and
inc
sub
shlb
add
push
movsb
xor
xchg
fsubrl
js
adcb
call
cwtl
in
test
dec
gs
sub
hlt
rclb
in
clc
xchg
jl
and
add
gs
sub
or
xchg
add
push
push
movsb
xor
adc
sbb
sbb
sub
push
sbb
nop
and
or
gs
sub
sub
xchg
add
pop
mov
xor
dec
cmp
and
add
xchg
inc
pushl
inc
pop
enter
aas
jne
and
clc
je
gs
gs
mov
insb
outsl
jae
and
inc
pop
sahf
sbb
in
push
adc
mov
xor
pusha
xchg
pop
clc
mov
push
popa
jb
lods
add
shrb
pop
sub
test
addr16
addr16
xchg
gs
in
test
addr16
fs
pop
adc
cmp
jno
jae
js
and
fs
in
dec
pop
and
push
jp
or
sbb
jae
sbb
xorb
and
inc
push
cmpsl
pop
push
mov
pop
pop
test
mov
push
or
mov
fmuls
adc
or
add
jbe
mov
inc
dec
xor
cmp
mulb
jl
outsb
in
add
inc
js
dec
xor
outsb
negb
add
iret
fisubrl
popa
and
mov
daa
and
imul
lods
sbb
shll
sbb
inc
popa
adc
jl
cmpsl
mov
es
fs
jg
fcompl
das
adc
outsl
addr16
jne
insl
aaa
ss
in
outsb
das
pop
fs
cmp
imul
pop
or
rolb
or
adc
xor
cli
sbb
xchg
js
add
fwait
outsl
pop
jo
loope
repz
rclb
rclb
xchg
adc
clc
xchg
sbb
jg
dec
dec
jne
mov
push
cmp
xor
jg
mov
movsl
iret
jbe
cmp
mov
subl
cmpsb
xchg
pusha
mov
push
mov
scas
or
dec
out
in
jo
push
outsl
dec
pop
add
xchg
add
push
in
test
sbb
add
dec
pop
push
mov
adc
sbb
inc
dec
mov
dec
cld
dec
psrad
push
insb
dec
jne
loopne
out
imul
fs
das
or
add
loope
lods
add
jae,pn
pop
add
sub
jno
lds
insb
pusha
leave
repz
jl
xor
mov
mov
les
stos
cmp
adc
outsb
testb
cmc
cmpsl
add
inc
add
pop
shlb
mov
jle
jbe
imul
movsb
nop
jns
mov
cmp
add
sub
jle
sbb
adc
and
push
int
dec
imul
inc
dec
jg
pop
xor
or
sub
lea
jmp
sbb
push
push
dec
sub
cmp
fcomps
and
fsubrs
daa
dec
aam
sub
mov
je
test
test
cmp
cwtl
lret
cli
mov
test
jl
lock
and
int
cs
adc
cmp
dec
psadbw
or
int
pop
xor
push
pop
pop
rcr
add
and
or
sub
jp
out
test
pushf
pushf
fmull
cmp
cmp
pushf
pushf
pushf
cmp
pushf
pushf
pushf
and
and
pushf
pushf
pushf
and
pushf
pushf
pushf
sub
sub
pushf
pushf
pushf
sub
pushf
pushf
pushf
adc
adc
pushf
pushf
pushf
adc
pushf
pushf
pushf
sbb
sbb
pushf
pushf
pushf
sbb
pushf
pushf
pushf
add
add
adc
pushf
add
repz
lock
lret
call
cmp
je
insb
shlb
iret
repz
rclb
cmp
repz
test
mov
xor
sub
and
cmp
repz
adcb
imul
push
jns
out
pop
in
push
in
out
sahf
dec
faddl
cmp
jns
out
xor
sub
mov
lods
adc
pushf
add
repz
test
jl
repz
repz
insb
shlb
cmp
enter
mov
cmp
inc
test
mov
xor
sub
and
loopne
iret
mov
daa
mov
pop
loope
push
pusha
out
mov
inc
cmp
std
mov
iret
fisttpll
or
and
clc
dec
aas
das
pop
mov
shl
push
jns
lcall
enter
inc
pop
adc
fs
sbb
ficoml
outsl
insb
stos
ss
mov
pop
xchg
fmull
mov
push
imul
push
and
ja
fwait
mov
sbb
push
imul
and
pop
daa
and
in
adc
lea
mov
xchg
test
xchg
repnz
mov
mov
aaa
xchg
push
rorb
cmp
test
or
movsb
fcoms
out
je
push
lods
cwtl
xchg
xor
or
push
js
adc
in
cs
arpl
in
js
push
pop
js
mov
sbb
mov
pushf
es
or
push
or
adc
test
bound
mov
and
inc
xchg
cmp
jg
iret
inc
xor
fdivl
leave
jecxz
iret
dec
imul
dec
pop
dec
push
jmp
out
xchg
mov
cmpl
and
mov
mov
push
push
ja
in
xchg
fsubrl
cmp
and
sarb
xor
cmpsl
push
push
mov
mov
xchg
loopne
mov
cmp
ja
pop
lock
push
mov
push
icebp
dec
adc
aaa
jae
mov
push
adc
inc
outsl
jb
popa
je
test
imul
data16
je
out
inc
pop
imul
mov
xchg
scas
inc
mov
mov
pop
cmp
shll
dec
xchg
cld
xor
pop
push
push
mov
xchg
enter
int3
or
and
rorb
notl
cmp
cmp
add
adc
sbb
rclb
mov
and
jo,pt
shlb
test
mov
push
xchg
aad
imul
inc
daa
sub
insl
xchg
and
xor
xor
subb
dec
imul
add
sbb
add
cwtl
mov
mov
push
or
adc
outsl
pop
js
jnp
idivb
bound
pop
es
jb
add
jnp
jb
popa
or
sbb
out
jge
dec
es
insb
bound
jbe
es
gs
pop
jo
addr16
out
jnp
pop
jb
addr16
add
pop
imul
mov
arpl
insb
daa
push
sti
outsb
inc
imul
mov
fnsave
cmpsl
sbb
xchg
mov
xlat
and
pop
fs
daa
mov
cmp
pop
je
jo
jbe
fidivs
arpl
jns
jb
outsb
fdivs
pushw
das
add
in
sti
fimuls
imul
test
sub
in
ret
scas
sub
xchg
mov
lock
dec
ljmp
or
inc
dec
jp
add
push
or
pop
push
nop
inc
das
add
rolb
shlb
movl
inc
jl
or
lds
pushf
mov
loope
push
xor
push
or
nopl
and
dec
inc
cltd
cmpb
xchg
adc
mov
sbb
je
adc
push
sbb
mov
mov
das
mov
outsb
mov
adc
fstpl
dec
adcl
mov
mov
adc
movsl
mov
decl
push
mov
adc
mov
inc
outsl
nop
xchg
xchg
push
test
inc
mov
lcall
sbb
pushf
mov
xchg
xchg
loope
sbb
int3
or
shrl
loope
push
inc
mov
fcmove
insl
fsts
dec
cmp
sbb
pop
sub
lret
adc
sbb
arpl
dec
in
mov
or
nop
lock
dec
pushw
or
rolb
mov
data16
ret
ja
push
inc
sahf
or
xor
roll
add
add
push
pop
pop
or
or
or
or
or
or
repz
adc
adc
cmp
repz
std
cmp
sbb
sbb
push
pop
and
and
and
nop
pop
out
sahf
mov
ss
push
inc
pop
imul
pushf
lods
mov
repz
add
and
repz
repz
push
push
cmp
fwait
lods
mov
cmp
cmp
and
cmp
repz
dec
pop
data16
xchg
sbb
cs
add
add
sub
xchg
lret
push
adc
adc
jb
in
push
or
test
sbb
sbb
xchg
push
cs
or
dec
push
and
jb
in
sub
sub
pop
push
mov
adc
adc
adc
inc
push
inc
dec
in
lret
sbb
movsb
jb
push
sbb
test
pop
jns
sub
sbb
sub
pop
bound
cmpsl
push
jns
arpl
cmpsl
push
jns
aas
and
push
jns
xchg
and
and
xchg
inc
sub
and
aaa
xchg
mov
aas
inc
dec
add
and
cmc
enter
mov
pop
xor
xchg
push
rcr
fadds
pop
sgdtl
jmp
andl
call
push
cmpsb
js
lock
popa
dec
test
and
push
sbb
push
adc
or
fldcw
add
add
test
mov
pop
dec
mov
sub
sbb
mov
test
or
out
cmp
loopne
ss
je
fmuls
sbb
loop
or
dec
dec
fcomps
push
cmpl
adc
jmp
popa
push
xchg
pop
or
jno
leave
and
lock
sbb
push
mov
xchg
and
cmp
jg
adc
adc
lock
imul
pop
fadds
push
loopne
movsb
popa
loopne
jbe
push
cld
add
pop
push
push
ret
mov
dec
pop
xlat
push
inc
cmpb
push
aas
mov
add
es
test
ss
ret
scas
imul
jnp
mov
pop
xchg
dec
loop
sbb
aaa
pop
and
pushf
js
and
fs
imul
idivl
fsub
xor
std
jae
push
mov
movb
inc
test
das
iret
add
dec
in
arpl
iret
pop
dec
push
enter
and
mov
pop
or
insl
jb
in
mov
push
mov
in
push
inc
psubsb
push
jg
mov
xadd
add
orl
dec
adc
cmp
repz
push
pop
popa
repz
repz
cmp
sub
cmp
add
mov
and
aaa
pop
fldcw
fs
pop
fs
es
inc
cmpsl
lcall
xchg
or
sub
push
xchg
mov
sub
aas
icebp
xor
add
add
ret
aam
adc
ss
and
clc
add
and
subl
push
cmpl
mov
adc
sub
je
clc
sbb
clc
push
aam
push
cld
mov
pusha
push
and
push
sbb
push
inc
js
add
shll
sub
jnp
xor
lea
andb
sub
pminub
out
lods
in
stc
xor
pop
aaa
or
call
dec
jo
icebp
push
push
shl
dec
daa
and
cs
dec
xor
lcall
push
adc
adc
lahf
adc
xlat
jns
pop
mov
inc
jmp
mov
ret
jmp
mov
jl
lods
enter
pop
cmp
lods
or
cmp
xor
sbb
dec
fsubs
cmp
and
rorb
jg
cmp
pop
inc
aaa
mov
loopne
fs
mov
addb
dec
or
mov
add
jb
push
adc
rclb
sbb
mulb
adcb
mov
mov
pop
mov
or
jle
inc
in
addb
pop
dec
xchg
sahf
mov
push
rcrb
add
iret
inc
sub
std
sbb
cmp
test
enter
iret
mov
ds
add
xchg
or
clc
push
mov
jecxz
push
dec
push
divl
fstp
aas
mov
sub
sub
and
sub
push
pop
sbb
cmp
movsl
mov
or
sub
and
xor
jmp
fs
sub
ret
movb
ret
incb
push
mov
cwtl
cmpsb
cmpsb
add
aam
lock
roll
cmpsl
aas
mov
cltd
jmp
fnstenv
test
lea
adc
imul
cwtl
das
adc
lds
jmp
mov
lock
loope
mov
sbb
push
or
mov
imul
mov
xor
mov
inc
mov
repz
fisttpll
xchg
cmp
add
jne
jo
push
cs
mov
out
sub
sbb
in
push
pop
je
mov
xchg
pop
jb
or
adc
inc
add
pusha
jbe
fsubrs
imul
mov
mov
and
or
movsl
test
sbb
xchg
pop
push
or
dec
sub
sub
cmc
push
mov
cmp
adc
add
pop
inc
add
or
adc
fidivl
pop
mov
arpl
jo
ret
pop
and
jmp
mov
mov
mov
sub
fcoms
mov
invd
xchg
and
icebp
push
push
fildl
insb
shrb
cmp
sub
pop
inc
mov
sahf
mov
mov
ret
push
ja
sbb
or
mov
xor
jmp
dec
fsubs
dec
dec
inc
dec
push
repnz
pop
mov
mov
insl
jbe
pop
dec
imul
mov
and
xor
xlat
and
decb
or
lret
push
inc
nop
cmp
inc
dec
mov
pop
mov
stos
insl
jl
pushf
dec
out
mov
je
cmpsl
lcall
adc
sub
or
add
jne
mov
insl
insl
insb
add
sti
jmp
cmp
pop
orb
mov
mov
out
or
or
and
mov
add
mov
loop
pushf
orb
sahf
in
dec
fiadds
push
adc
aam
movsb
test
popa
in
sbb
subb
movsl
or
sub
lods
adc
loope
xor
inc
in
or
push
clc
jnp
sbb
cmp
xchg
jbe
shl
loope
xor
or
push
or
das
outsl
test
cmpl
adc
shl
jno
jecxz
inc
add
jb
sub
dec
je
push
outsl
pop
lock
inc
mov
outsl
divb
adcb
push
clc
nop
or
and
dec
xor
mov
adc
cltd
xlat
jo,pn
mov
je
subl
push
pop
test
dec
in
jns
xor
mov
add
repnz
cmp
add
push
inc
sbb
and
lods
sbb
mov
push
add
push
push
leave
xor
std
jno
aaa
mov
push
sub
popa
insb
loop
or
inc
outsl
je
sbb
dec
sbb
test
add
outsb
inc
inc
imul
pop
or
fdivrp
jo
or
sbb
jno
adc
cmpsl
adc
xchg
cs
sbb
pop
xchg
mov
xchg
push
cwtl
pushf
push
add
pusha
mov
mov
push
rorb
rcr
mov
mov
and
mov
sbbl
inc
or
sbb
pushf
jno
enter
jne
lods
jl
fwait
xchg
adc
lods
xchg
push
xchg
andb
dec
mov
xor
push
dec
gs
sbb
in
shll
push
test
jb
adc
mov
icebp
push
jno
daa
addb
loopne
clc
xchg
xchg
addb
and
xchg
push
jg
das
or
adc
nop
inc
jno
out
xchg
and
pop
adc
xchg
jl
inc
js
jl
mov
xchg
lods
inc
pop
jae
dec
lds
mov
mov
inc
push
cld
push
adc
push
cmovge
sbb
push
imul
push
xor
in
out
pop
sub
sarl
mov
inc
inc
je
jl
movsb
in
sbb
jae
cmp
xchg
les
add
pop
add
ja
mov
inc
xor
push
push
frstor
outsl
or
movl
rorl
aaa
push
daa
xchg
pop
jl
clc
jne
shrb
dec
les
mov
jle
lods
inc
cwtl
scas
inc
inc
mov
lods
cmpl
jg
clc
fidivrs
jns
xor
push
jo
sub
test
cwtl
iret
repz
rorb
enter
sub
hlt
dec
aam
adc
pop
push
in
adc
push
and
xchg
out
adc
push
loopne
cmpsb
cmp
push
adc
nop
adc
jnp
add
push
insl
bound
or
push
fnsave
sbb
add
jg
pop
push
sbb
test
test
dec
or
jne
adc
fmul
adc
mov
stos
sbb
mov
ja
or
adc
gs
dec
je
data16
inc
push
pop
add
jbe
or
fcoms
xor
dec
mov
repnz
paddq
push
imul
imul
push
push
push
sbb
lea
sbb
mov
ret
sbb
imul
or
pop
or
jmp
andb
pop
fs
or
jae
jns
js
add
add
mov
std
jg
loopne
mov
rolb
js
ds
adc
sarb
fdivl
fs
push
push
adc
sbb
xor
pusha
sbb
or
sub
inc
lock
xor
xchg
add
or
xchg
out
pop
inc
js
inc
or
mov
dec
push
or
or
fldl2t
sub
es
xorl
decl
or
jbe
addb
or
rcll
mov
mov
sub
push
mov
add
add
adc
adc
xor
pop
mov
fldt
repnz
clts
testl
vmulsd
inc
scas
movsb
xchg
les
add
add
or
cmp
mov
push
mov
push
stos
nop
lock
push
push
jb
cltd
push
adc
mov
and
in
sub
sub
ja
mov
ja
push
mov
js
mov
ljmp
outsl
dec
addb
pop
dec
adc
repz
jle
pop
sbb
or
nop
mov
xor
clts
mul
inc
pop
inc
mov
lret
out
ds
adc
or
mov
push
dec
gs
xchg
loopne
push
mov
ret
lock
mov
enter
imul
and
pop
ror
cmpsb
jae
sbb
addr16
add
outsb
and
icebp
das
call
fisttpl
cwtl
int
loop
add
or
pop
push
out
sahf
mov
jl
stos
jb
pop
adc
or
add
xchg
mov
or
mov
or
aad
adc
or
add
add
inc
pop
pop
xor
push
add
ret
add
fidivrs
cld
adc
lods
jge
mov
jae
jp
add
and
ja
testb
add
cmp
add
sbb
pop
inc
gs
pop
or
add
out
mov
bound
push
nop
cwtl
test
dec
sbb
sbb
pop
pop
adc
addb
gs
shl
es
popa
mov
stos
and
sub
xadd
and
fs
loopne
lods
sbb
xor
push
push
add
push
mov
outsb
cmc
mov
test
subb
out
sbb
push
fsubrl
jo
mov
mov
dec
xorb
push
les
xor
add
push
sarl
mov
mov
es
clc
mov
mov
mov
inc
xchg
xor
ss
shrl
cs
cmp
js
mov
adc
or
cmpsb
sahf
les
cmp
fs
xchg
cmpb
xor
jle
jle
jbe
int3
clc
aam
xor
mov
and
mov
orb
xchg
dec
add
jg
pop
add
add
add
add
nop
add
add
add
incl
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
cmp
in
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
fdivr
fcos
fdivr
add
call
call
call
call
call
call
call
call
dec
ret
mov
dec
dec
dec
dec
icebp
dec
dec
pushl
add
xlat
sbb
push
hlt
stc
xor
repz
pushf
push
test
cld
sbb
sarl
cmp
aam
fldt
mov
xchg
sahf
cmpsl
fnstcw
mov
sbb
dec
iret
jnp
jl
fdivp
ss
inc
sbb
aam
out
cmp
jl
mov
mov
xchg
test
cmpsb
mov
xor
cmp
es
or
dec
push
adc
pop
push
pop
push
lock
lret
call
add
mov
sahf
mov
idivb
addl
add
mov
sahf
push
fadds
ret
cmp
jb
sub
xchg
cs
push
fcompl
or
push
leave
nop
pop
pop
cmp
cmp
adc
pop
or
icebp
movsb
mov
add
nop
cmpsl
pop
mov
add
jns
xor
lahf
out
ret
add
dec
adc
outsl
mov
and
add
inc
mov
add
call
incl
or
or
push
pop
cmp
pop
sbb
incb
push
jo
pop
add
xor
pop
mov
pushl
adc
inc
test
pop
dec
pushf
inc
jp
in
or
pop
jp
fdivrs
and
jne
inc
sbb
dec
in
inc
mov
jo
mov
js
adc
adc
mov
dec
in
add
mov
das
sub
push
test
mov
xor
cmp
cmpsb
inc
add
jns
sbb
popa
testl
add
addr16
xchg
pop
jle
mov
push
aas
mov
add
in
xor
add
pusha
sub
lahf
dec
out
mov
sub
inc
xchg
xor
daa
aam
lahf
nop
daa
push
push
enter
lret
lahf
cld
add
and
scas
stc
push
aam
mov
out
push
mov
xor
int
je
jo
mov
insb
cld
es
int3
add
push
aaa
mov
and
xchg
loope
mov
jp
test
fildll
adc
dec
add
cmp
sub
orb
push
push
inc
out
and
test
add
add
in
mov
adc
das
add
mov
test
adc
in
addb
loopne
lcall
add
mov
mov
mov
mov
mov
or
xchg
cmp
adc
sbb
scas
inc
and
and
das
mov
mov
add
sub
mov
xor
cmp
push
lock
jg
in
inc
inc
inc
inc
inc
inc
inc
inc
test
cmpsb
std
mov
add
cmp
cmp
pushl
pushl
push
clc
iret
repz
sbb
insb
mov
sbb
cmp
test
out
out
or
dec
adc
fnstcw
pop
and
enter
mov
push
adc
sbb
mov
movsb
lahf
negl
push
sub
mov
push
mov
inc
pop
dec
ss
sahf
out
fisubs
jl
ret
jns
jge
sbb
push
rolb
push
inc
lods
ss
mov
push
adc
or
jnp
subb
push
cli
push
nop
push
lahf
idivb
movsb
pop
push
clc
inc
and
jle
ja
push
cld
aaa
dec
sub
adc
adc
push
fs
sbb
push
shlb
enter
insb
ss
and
lock
adc
lahf
out
push
xchg
add
sbb
outsl
hlt
faddp
lret
divb
into
sub
push
adc
ret
ret
mov
pop
mov
pusha
es
mov
push
data16
mov
or
mov
pop
inc
pop
and
lock
mov
mov
push
cltd
cwtl
testl
or
push
test
push
jbe
mov
push
outsl
inc
push
xor
loopne
add
js
push
out
xchg
cmp
adc
jo
push
or
nop
mov
mov
mov
into
push
cmp
enter
sub
xchg
aaa
push
push
movsl
and
outsl
hlt
or
pop
call
hlt
bound
push
push
mov
js
sbb
fdivrp
pop
sti
adc
insb
push
in
push
cmp
sti
mov
pop
xchg
and
push
js
scas
push
mov
add
or
ds
icebp
test
subps
jg
inc
mov
mov
sbb
cmp
inc
and
xchg
dec
cmp
dec
nop
flds
mov
sbb
sbb
sbb
adc
mov
adc
loop
iret
repz
in
pop
gs
jne
cmp
repz
pushf
test
xchg
clc
rorb
mov
pushf
lret
mov
lds
lcall
dec
push
mov
rolb
ficoms
pop
orb
pop
es
ss
adc
push
inc
out
push
jb
and
adc
mov
sbb
xchg
aad
lea
mov
les
sbbb
sbb
sbbb
inc
adc
pop
add
xorb
fisubrs
and
cmpsl
lock
and
nop
popa
ja
or
pop
sbb
or
pop
ret
movl
sub
jae
jbe
adcl
sbb
push
or
movsl
sub
fmull
fs
sqrtps
mov
sub
xor
sarb
adc
adc
cmp
adc
or
testb
adc
sbb
lcall
pop
adc
and
sub
pop
or
push
sbb
dec
xlat
jb
mov
push
pop
daa
cli
sub
lods
test
xchg
imul
or
push
fmuls
in
cmp
push
inc
push
inc
daa
loopne
cmp
jo
daa
or
subl
push
cmc
ror
enter
inc
and
fisubl
jo
imul
mov
outsl
mov
mov
out
dec
push
popa
push
daa
add
cmpsl
inc
outsl
cltd
test
sbb
das
test
mov
lods
pop
imul
mov
dec
sub
repz
mov
clc
shrb
dec
mov
mov
mov
mov
inc
inc
pusha
and
lret
push
daa
jecxz
adc
and
or
lea
or
adc
pop
dec
cwtl
jg
sbb
cmp
jo
xchg
cmp
mov
mov
stc
icebp
es
or
out
sub
or
push
mov
mov
sbb
mov
xchg
xchg
out
ds
or
adc
push
dec
sbb
add
fs
faddl
push
add
push
pop
adc
push
scas
adcb
js
push
or
add
cmp
jl
loop
adc
pop
imul
mov
sbb
out
ficomps
or
shl
std
dec
fcoms
mov
and
dec
ds
xlat
lock
mov
es
push
adc
sub
add
daa
inc
sbb
xchg
mov
mov
pop
jmp
cld
aaa
test
adc
jne
pusha
icebp
testl
cmp
dec
mov
inc
fadds
or
divl
push
push
dec
pop
pop
inc
aaa
rol
add
shrb
push
push
or
shll
adc
adc
shll
and
shll
sub
dec
lret
push
push
ret
inc
pop
jg
dec
xor
xor
fcoml
shll
pop
add
sbb
pop
loopne
dec
sbb
scas
xchg
js
add
data16
cmp
popf
sbb
sbb
mov
sbb
sbb
add
test
push
lock
mov
ja
xor
sub
jl
jl
mov
test
aaa
cmpsb
hlt
bound
mov
out
sbb
jne
mov
int3
adc
dec
sub
or
inc
adc
or
sbb
fwait
pop
outsl
add
lret
pop
mov
aad
insl
cmp
push
adc
and
hlt
jmp
or
mov
cmpsl
cmp
xor
dec
pop
or
ret
inc
out
ljmp
jbe
and
incl
add
scas
loope
and
and
add
in
adc
cmpl
and
daa
and
inc
popa
pop
xor
cmp
sbb
test
aad
inc
ljmp
jnp
mov
inc
or
les
mov
push
dec
fbstp
mov
mov
aaa
mov
dec
add
inc
mov
fldl
push
jp
and
mov
lahf
fwait
add
pop
pop
xor
or
add
sub
cmp
jmp
sub
daa
aad
inc
jae
sub
dec
inc
loope
lods
sbb
loopne
cs
adc
cmp
aaa
inc
dec
lret
movsb
pop
adc
leave
xor
and
push
add
mov
pop
mov
push
insb
insb
out
inc
das
ds
lea
sub
rcll
adc
mov
addr16
in
ss
ret
inc
add
adc
add
push
sub
pop
leave
sbb
outsb
or
push
mov
jle
out
dec
push
sub
mov
mov
dec
or
adc
insl
loopne
dec
shlb
inc
push
ficoms
inc
inc
std
pop
lahf
and
dec
jae
jbe
fistl
and
xor
jmp
enter
cmc
jl
ja
mov
inc
mov
jno
pushl
add
push
add
rcr
pop
incb
mov
sarl
jb
mov
movb
jmp
cmp
jne
jl
fcoms
sbb
or
lret
das
xlat
les
add
idiv
mov
rorb
add
mov
sarb
pop
loop
sti
sbb
add
sti
push
sub
out
loop
dec
and
sbb
cmp
cs
push
lods
repz
fdivrl
cmp
sub
inc
inc
pop
mov
je
pushf
movsl
ret
cmp
mov
adc
out
sub
mov
nop
mov
out
inc
push
pop
outsl
or
sti
or
mov
push
rcr
ret
in
pextrw
sub
icebp
or
and
xchg
sarb
dec
inc
push
inc
in
sub
sbb
push
cli
add
and
mov
sbb
sub
dec
loop
arpl
adc
out
aad
outsl
add
in
lea
movsb
and
jmp
jge
pusha
push
mov
or
push
test
ljmp
adc
add
add
adc
xor
or
inc
pop
arpl
outsl
in
mov
mov
jnp
or
pusha
sti
lock
push
cmpb
lea
movsb
loopne
push
jp
jno
ljmp
cmp
push
xor
gs
pop
orl
lds
push
inc
inc
push
mov
push
mov
cmp
inc
nop
or
add
mov
push
imull
daa
or
inc
in
mov
dec
jne
addr16
and
ret
adc
cmp
jbe
inc
ljmp
add
cmp
sub
push
dec
divb
pop
ret
xchg
push
cmp
inc
jne
and
fstl
stc
rorb
sbb
and
push
and
push
add
add
push
push
sti
dec
mov
sub
pop
rclb
lock
in
dec
movsb
aaa
dec
cmp
push
pop
enter
fisttps
lock
inc
rclb
inc
cmp
test
adc
lock
mov
inc
and
shlb
cmp
push
xchg
or
pusha
push
dec
mov
gs
mov
dec
hlt
mov
mov
mov
jne
add
lea
inc
subb
push
pop
fisubrl
and
shr
fdivs
test
jb
aad
js
and
or
mov
popa
hlt
outsb
es
inc
jo
jl
mov
outsl
jae
jae
mov
add
pop
pop
adc
xchg
ret
cmp
cmc
add
je
out
mov
adc
rcrb
xor
out
rclb
xor
mov
sbb
mov
pop
inc
jo
xchg
ret
ds
mov
fldl
mov
in
daa
inc
add
mov
insb
sbb
sub
or
out
pop
pop
sbb
and
es
jnp
xchg
mov
dec
or
dec
cmc
push
inc
loopne,pn
cwtl
lea
inc
mov
movb
pop
mov
insb
xchg
add
xor
sti
icebp
pusha
or
dec
jmp
out
jae
jo
sbb
out
cmp
pavgw
adc
pop
stos
push
add
test
es
mov
loopne
or
negb
and
lds
stos
je
daa
inc
xlat
insb
push
cs
or
add
add
inc
outsb
and
push
push
testb
aam
add
mov
std
enter
arpl
mov
inc
ret
sub
pushf
jmp
pop
and
mov
jmp
pop
xor
mov
sbb
test
mov
das
push
sub
test
jg
or
add
cmp
push
inc
jmp
popl
clc
fimuls
pop
ficomps
pop
fdivs
mov
jmp
insb
mov
inc
push
dec
test
dec
out
loop
sub
push
pop
dec
cmp
adc
fucomip
mov
mov
sub
in
add
adc
das
sti
cmpb
pop
stc
jo
xor
sahf
push
mov
adc
scas
shlb
mov
mov
mov
cmp
and
cmp
inc
pop
xor
lea
ret
clc
pop
and
or
stc
sub
sub
or
mov
fstpt
dec
es
fcmovne
push
icebp
aas
push
stc
fstpl
fwait
jmp
inc
and
push
and
lret
data16
sbb
adc
cli
imul
test
insl
pop
sub
ss
pusha
rclb
sbb
xor
sbb
or
jmp
sub
mov
sub
add
sbb
in
lret
js
xchg
add
adc
aaa
pop
dec
push
cli
dec
clc
mov
sub
xchg
add
ret
pop
aam
mov
push
movsb
sub
mov
dec
int
cmp
fcmovb
sbb
push
add
push
and
jecxz
repnz
xchg
pop
dec
and
mov
out
in
xorb
imulb
push
and
int
pop
cmpl
imul
xor
mov
inc
dec
jmp
aas
sub
rclb
sbb
add
mov
ds
int3
in
sbb
and
pop
rcrl
add
popa
out
pop
sbb
add
pop
jno
dec
xchg
shl
xchg
lcall
shll
test
adc
xor
jo
sub
pop
inc
dec
cmp
ror
mov
into
push
push
jne
cmpsl
mov
or
mov
popa
bound
mov
bound
and
xor
aas
push
pop
or
push
ss
loopne
ds
inc
in
loopne
incb
or
cmp
sbb
cmpsl
fwait
mov
cmp
cli
test
mov
mov
adc
test
test
les
imul
inc
insb
or
mov
cmc
sub
mov
sbb
cs
pop
and
or
cli
jmp
and
or
loop
inc
pop
push
and
je
xchg
insb
test
push
lock
adc
mov
mov
arpl
push
lods
orb
outsl
je
sub
mov
cmp
data16
lock
adc
add
cmp
cmp
and
or
push
clc
cmp
or
jecxz
cmp
sbb
scas
pop
push
or
add
jo
mov
sub
adc
std
mov
xchg
sub
push
inc
je
test
cmp
xchg
aaa
bound
and
xor
inc
inc
xor
mov
adc
push
and
mov
push
scas
notb
cmp
adc
mov
mov
insl
daa
xchg
sub
orb
jo
cmpsb
inc
add
daa
dec
mov
fwait
fwait
jo
dec
mov
repz
or
lds
inc
mov
leave
faddp
jno
nop
pop
ret
les
inc
push
adc
cwtl
test
call
movsb
imul
lds
lret
andb
pop
out
shlb
push
lods
addr16
das
add
push
xchg
or
and
add
cmp
add
subl
pop
es
mov
test
inc
pop
mov
hlt
add
push
or
popa
jl
mov
inc
cmp
pop
push
stos
fbstp
add
insb
cld
add
mov
inc
sbb
sub
mov
fsub
jecxz
push
cmp
inc
jmp
dec
inc
add
push
or
mulb
lahf
dec
push
cmp
or
xorl
sbb
cmp
xlat
je
in
add
insl
hlt
imul
xor
inc
mov
push
add
fildl
and
addr16
cmp
or
loopne
adc
rcrb
cmp
ror
pop
sub
mov
mov
mov
add
cwtd
pushf
pop
lea
adc
dec
pusha
inc
pop
sar
adc
adc
jge
add
pop
jecxz
lcall
pop
js
rcl
insl
shrl
into
pop
ss
or
adc
sbb
and
dec
pop
xor
xchg
push
and
aas
adc
aas
mov
sub
or
push
jp
insl
andl
sbbb
sbb
jmp
mov
pop
pusha
xchg
ja
lcall
mov
outsb
cwtl
cmpsb
adc
pop
or
inc
pusha
adc
pop
ret
pop
mov
adc
dec
out
pop
jmp
cmp
je
mov
test
mov
xor
jbe
push
adc
sbb
and
push
or
sub
nop
lret
pop
je
and
lahf
push
sarl
pop
je
cmp
or
jmp
cmpsb
scas
sbb
xchg
sub
test
mov
mov
cli
andb
rol
cmpsb
push
push
adc
fwait
rolb
xchg
insb
out
mov
fs
push
jl
pop
mov
mov
dec
cmp
pop
inc
in
mov
inc
xchg
push
in
mov
test
sahf
sub
lahf
jecxz
scas
popf
push
js
pusha
pop
inc
pop
push
punpckhbw
mov
push
pop
mov
sub
sub
sbbl
test
hlt
mov
arpl
movl
push
xor
fs
sub
lret
cmc
pop
cmpsl
push
inc
cmp
arpl
repz
shrl
mov
xor
stos
iret
mov
push
fdivs
insb
and
aam
add
sbb
sbb
sbb
cmp
cmp
negl
daa
mov
shlb
mov
mov
out
and
push
adc
inc
inc
mov
clc
test
and
movsl
nop
adc
sbb
cmc
jp
js
pusha
shll
cltd
mov
jg
add
add
xchg
mov
adc
xor
testl
adc
lock
lret
adc
push
addl
pop
in
jnp
cmp
cmp
insl
mov
stos
scas
cmp
inc
cmp
mov
cmp
inc
mov
xor
test
lods
out
cwtl
addr16
jnp
lea
or
mov
sub
xlat
rolb
cmp
je
mov
push
push
jecxz
inc
and
jae
mov
orl
popa
fnsave
sub
push
dec
je
inc
arpl
sbb
pusha
inc
movl
jo
inc
push
add
pop
pop
pop
sbbl
adc
push
pop
add
jp
jmp
addl
imul
inc
add
mov
mov
ja
add
add
xor
adc
cwtl
cmp
mov
push
add
into
int3
aaa
adc
shlb
fisttpl
or
insb
xor
lahf
xchg
mov
sbb
fs
mov
cs
test
gs
cmpl
jmp
xor
xor
and
push
lahf
cmp
hlt
push
test
mov
insb
xlat
mov
ret
lds
sbb
inc
or
sysexit
push
cmp
aam
bswap
sti
lds
fstpt
aaa
push
cmpsb
or
inc
cmp
les
repnz
adc
jmp
fdivrs
push
and
add
mov
push
outsl
mov
loope
adc
inc
push
data16
sahf
cmpl
in
cs
call
ds
push
mov
and
repz
mov
or
pusha
add
into
add
cmp
sarl
int3
in
divl
inc
pop
sbb
int3
shrb
in
jo
testl
into
adc
push
rorl
xchg
push
ret
fldl
sbb
xchg
clc
or
fs
inc
mov
dec
jle
int3
push
xor
mov
push
arpl
pop
push
std
mov
inc
mov
and
cmp
pop
cmpsl
jg
dec
sbb
out
cmp
jne
out
adc
scas
fsubr
and
loopne
in
in
clc
jne
sub
dec
pop
and
and
test
xchg
movsl
jbe
leave
mov
test
jne
in
loopne
mov
lods
pop
push
das
lcall
push
out
dec
sub
movsb
xor
sub
daa
jne
adc
cmp
jne
cs
lds
and
mov
inc
dec
push
push
dec
dec
pushf
mov
icebp
inc
mov
xchg
test
pop
mov
adc
and
push
mov
test
pushf
push
or
jmp
pushf
jb
inc
jmp
cmp
jne
and
popa
ljmp
clc
in
add
push
mov
js
inc
pusha
push
cmp
inc
mov
or
nop
pop
jecxz,pt
lret
inc
add
out
loopne
add
and
out
mov
cmpb
push
test
pusha
add
inc
fsubrs
test
mov
cld
cmp
add
xchg
inc
rclb
cmpsl
xchg
or
cmp
dec
mov
push
adc
ja
adc
adc
sar
pop
or
mov
pop
or
outsl
cmp
dec
mov
dec
scas
xorb
imul
and
adc
pop
pop
add
cli
push
and
xchg
loopne
mov
sbb
pop
xchg
and
xor
mov
push
sbb
inc
dec
push
insl
das
pop
dec
xor
or
add
push
inc
loopne
push
roll
mov
lret
inc
fcmovnu
mov
dec
push
xchg
dec
adc
add
push
inc
or
xchg
in
cmpsl
das
push
jno
in
outsb
test
cwtl
sbb
stos
mov
pop
jmp
cmp
and
or
dec
sbb
mov
add
orl
dec
push
mov
push
add
xor
sti
push
dec
inc
mov
adc
sbb
dec
sbb
enter
rcrb
arpl
dec
lds
add
pop
nop
inc
cli
cmp
mov
outsl
push
push
sti
ffree
or
popa
pop
adc
add
dec
insl
push
or
ret
mov
adc
add
js
cmpsl
divl
fsubs
ret
sub
ds
add
mov
mov
or
loope
enter
add
add
mov
sbb
dec
fsubs
mov
inc
sub
ljmp
or
sub
adc
and
pop
into
mov
push
xchg
lea
inc
jp
mov
pop
dec
fldl
outsl
pusha
sbb
js
int3
test
shr
add
aam
scas
lods
sbb
mov
xchg
subb
movsb
aaa
pop
lahf
xchg
jne
mov
lret
mov
inc
jle
xor
or
adc
nop
cld
mov
add
push
jno
sub
add
or
dec
adc
lea
mov
les
add
test
mov
pop
in
push
mov
sub
push
inc
and
test
rorb
adc
adc
jne
pop
mov
mov
mov
push
cmp
mov
inc
cmp
cmp
add
or
ret
shrl
mov
jns
adc
inc
dec
cmp
fnstsw
pusha
or
dec
or
shlb
out
aad
sahf
repz
mov
orl
pop
xchg
cs
add
xor
xchg
mov
jmp
sbb
je
in
add
cmp
mov
add
mov
lods
inc
sbbl
push
sarb
in
jl
mov
nop
add
pop
ret
ja
ss
lcall
pop
in
daa
or
cmp
sub
inc
add
add
rorl
add
cmp
xor
sbb
jnp
sub
ret
xor
push
fstl
pop
addb
ret
add
adc
xchg
ja
aaa
rcrb
xchg
jge
adc
lahf
fs
or
ret
pop
je
mov
xor
add
dec
push
and
inc
jns
or
cmp
mov
or
and
sbb
jecxz
cmp
xlat
mov
rorl
pop
cmp
test
push
test
cmpsl
int3
xchg
outsl
call
push
fdivs
add
mov
adc
push
adc
sbb
mov
mov
inc
dec
xor
inc
scas
cmpsl
sbb
cmp
add
mov
mov
or
icebp
dec
int
loop
out
lock
or
je
jl
imul
mov
push
pop
jne
mov
je
mov
imul
cs
push
add
add
sbb
jle
adc
test
and
movsb
es
push
push
sbb
mov
jo
add
jo
and
or
pop
push
mov
push
and
idivb
dec
adc
subb
movl
and
pop
cmp
xchg
xchg
jg
enter
sub
cmpsl
test
adc
test
dec
aaa
scas
pop
xor
or
pop
je
mov
movb
arpl
inc
imul
cmpsb
inc
add
push
in
add
cmp
mull
mov
adc
mov
jecxz
daa
mov
mov
js
xor
scas
add
or
mov
mov
xor
leave
pop
loopne
cs
je
mov
push
mov
adc
mov
push
jo
aas
cmp
xadd
add
cmp
pop
xchg
mov
mov
mov
jb
pop
pop
pop
or
imul
cmp
and
fdivrs
data16
mov
lahf
push
orl
pop
es
sbb
loopne
jo
pop
adc
out
lea
or
ror
mov
dec
imul
mov
push
inc
or
pop
xchg
mov
daa
stos
mov
in
nop
xor
cmp
js
add
cmpsb
out
or
or
ror
std
xchg
test
mov
leave
je
mov
cld
xchg
dec
mov
adc
leave
pop
sbb
mov
inc
xchg
dec
jo
dec
js
add
xor
dec
sbbb
mov
or
ret
leave
movb
fimuls
pop
push
dec
and
rclb
lods
add
or
xchg
jle
dec
test
popf
add
cmpb
and
xorb
adc
jecxz
add
mov
lret
aas
jmp
les
aad
push
jo
push
and
inc
sub
std
lods
icebp
fstl
mov
incl
cld
and
xlat
xchg
imul
call
or
push
xor
fmuls
cld
add
add
push
pop
or
loop
mov
fistl
mov
sbb
outsl
add
mov
and
xor
inc
sbb
or
cmp
je
int3
cmp
frstor
out
push
js
add
inc
mov
mov
pop
jo
adc
add
ret
je
frstor
push
xlat
and
jne
out
sarl
test
adc
divl
mov
mov
cmpsb
pop
outsl
repz
ficompl
mov
mov
or
shlb
cld
add
push
popa
or
sub
push
xor
cltd
inc
mov
test
hlt
sub
inc
and
cwtl
dec
enter
sbb
jne
psllw
cmp
test
mov
jp
ja
mov
add
sub
or
mov
test
cld
outsb
jecxz
icebp
jae
adc
inc
sahf
rorb
insl
jb
or
xor
and
test
hlt
cmp
shr
iret
rcr
or
pushl
fmuls
push
js
push
sub
push
mov
jbe
stos
je
ret
cmp
or
into
mov
orps
imul
mov
mov
add
add
inc
outsb
aas
push
lcall
inc
repnz
sahf
cmpl
dec
or
mov
mov
hlt
lock
ja
ljmp
cs
pop
in
call
popf
aam
adc
adc
jle
inc
mov
add
outsl
dec
sbb
sbb
xchg
js
stos
mov
inc
fcmovu
inc
loop
add
or
jne
adcb
add
flds
mov
call
mov
xchg
add
dec
and
inc
or
loope
mov
int
insb
daa
sub
aam
ja
fwait
lea
fcom
push
fucomp
adc
or
jle
incl
outsb
add
outsb
or
push
inc
scas
sub
inc
xorb
clc
adcl
sbb
push
mov
and
cmp
adc
and
addr16
shrb
sub
or
xchg
add
mov
pop
add
test
push
xor
je
cmp
push
xor
push
xorb
ljmp
mov
jno
mov
push
adc
pushf
push
sbbl
cmp
add
sub
neg
pop
lea
pushf
cmp
out
and
mov
jmp
sub
mov
sbb
cmp
jge
mov
dec
cmp
hlt
test
add
in
daa
js
jp
inc
push
daa
adc
insl
loopne
push
or
cmp
inc
mov
inc
mov
push
ja
dec
and
cltd
dec
dec
subb
popa
inc
sub
or
push
xchg
inc
nop
mov
dec
jmp
sbb
or
rcrb
rolb
mov
shlb
inc
scas
lret
push
scas
js
mov
ret
cmp
push
testb
outsb
xchg
icebp
mov
inc
mov
or
xlat
push
aaa
call
inc
loopne
pop
ja
out
in
or
inc
in
push
xor
addl
xor
movsl
sub
imul
les
push
add
leave
call
jmp
mov
bound
in
outsl
or
dec
add
cmp
mov
or
jne
aaa
adc
es
xlat
jo
add
in
je
mov
sub
jb
mov
pop
and
sub
push
dec
dec
xor
lods
push
adc
test
sti
and
fldl
or
sbb
xor
jbe
popf
pushf
mov
xor
sbb
das
loop
aam
int3
rolb
mov
xchg
push
cmp
add
and
push
leave
or
adc
mov
push
fsubr
push
inc
inc
movups
fadd
loopne
mov
xchg
sbb
sub
aas
aad
push
add
mov
int3
push
pop
cli
std
inc
sbb
lea
stos
jle
adc
in
inc
mov
fsubrs
ret
mov
adc
mov
and
pop
insl
fldt
les
adc
and
add
fwait
hlt
arpl
into
sub
push
mov
jmp
push
xchg
push
push
sbb
scas
sti
call
add
lock
adc
std
adc
js
jne
pop
push
imul
stos
js
call
and
push
mov
sub
adc
mov
add
sti
lock
xor
loopne
clc
mov
jnp
iret
mov
sbb
push
pop
cmp
dec
dec
xor
push
js
adc
sbb
push
adc
add
dec
es
add
imul
and
cli
xchg
pop
mov
xlat
xchg
add
outsl
mov
push
push
mov
popf
les
shlb
jnp
mov
sbb
add
rcrl
dec
into
adc
cmp
sub
movsb
xchg
clc
push
inc
or
fadds
mov
dec
shrb
call
leave
jecxz
push
or
inc
jmp
imul
xchg
pop
xlat
cltd
lock
sti
xor
inc
or
push
ror
test
jo
inc
in
cs
xchg
sarb
mov
jl
mov
es
scas
inc
adc
cwtl
inc
dec
inc
out
cmpsb
push
sub
xor
jge
je
push
add
ret
dec
imul
pushf
mov
outsl
push
cmp
cmpsb
aam
push
add
insb
jecxz
scas
add
rorb
adc
daa
ucomiss
push
sub
sub
dec
dec
cs
or
or
ret
and
notb
push
fstpl
inc
xor
jmp
dec
popa
or
inc
sbb
sub
add
roll
or
or
xor
mov
pop
jmp
sub
push
add
push
cmpsb
xchg
adc
or
add
addr16
push
add
cmpsb
adc
cld
and
add
ss
or
xchg
sarl
pop
adc
mov
cmpsl
dec
dec
dec
lods
push
push
stos
daa
lock
cmpb
push
mov
jae
addr16
int
xchg
inc
fimuls
inc
inc
stc
fiadds
imul
and
xchg
inc
sub
addr16
rorb
sub
dec
dec
inc
mov
or
aas
lahf
add
push
or
adc
jle
dec
ret
push
add
lret
sbbb
cmpb
and
test
xchg
clc
adc
adc
cmp
inc
ja
adc
mov
dec
test
jecxz
jle
xchg
pushf
jne
jae
mov
ljmp
or
adc
es
sub
ljmp
or
flds
fsubrl
add
outsb
fidivrl
or
sbb
cmp
stos
fsubp
inc
dec
scas
pop
mov
pop
add
repnz
sub
icebp
in
aad
fcoms
jle
push
jmp
mov
andb
adc
or
adc
mov
lock
sbb
push
cmp
adc
sbb
sbb
into
push
pop
mov
xor
mov
sub
push
xchg
ljmp
pusha
mov
sbb
rorb
inc
mov
mov
or
or
dec
test
add
jmp
mov
mov
jne
clc
jbe
test
sbb
rclb
jo
dec
sbb
pop
jmp
mov
shlb
xor
xor
idivl
push
sub
add
popf
mov
test
popa
cld
mov
sahf
mov
jne
into
pop
mov
xor
roll
jo
das
mov
cmp
sub
pop
fwait
cmp
mov
or
es
sub
dec
notl
in
push
and
mov
aad
xor
fbstp
add
push
test
mov
insl
cmpsb
adc
add
adc
inc
andl
cmp
push
js
jne
cs
sbb
jmp
popf
push
arpl
lock
mov
xlat
sbb
into
push
dec
jp
xor
xor
cmpsl
sarb
add
testb
data16
movsl
roll
adc
adc
shrb
add
data16
adc
xor
aam
in
or
and
or
sbb
jno
push
inc
push
iret
shll
scas
adc
adc
sub
or
xor
insl
std
dec
add
mov
call
sbb
pop
rcl
movsl
mov
cwtl
push
xlat
fst
dec
inc
mov
jl
addr16
mov
loopne
push
add
aam
sahf
mov
inc
or
call
dec
inc
jle,pn
push
dec
push
cmp
or
pop
jo
or
or
fwait
jne
mov
sahf
test
movsl
mov
leave
inc
ret
pop
movsl
mov
adc
pop
jno
pop
leave
xchg
sbb
fadds
pop
in
mov
dec
sahf
and
push
sub
sbb
push
movl
incl
stc
sub
jnp
sbb
adc
mov
clc
xchg
push
je
movaps
aam
pop
push
rcrb
dec
or
mov
loop
loopne
cwtl
cmpsb
mov
xor
and
jns
dec
call
pop
dec
rolw
outsb
sbb
std
aam
movsl
pop
aam
xchg
pushl
xor
inc
cmp
and
popa
nop
push
xor
popf
js
xchg
inc
stos
jmp
leave
dec
adc
out
sbb
out
cmovb
aas
add
xchg
jne
adc
or
adc
lcall
mov
pusha
and
fsubrl
adc
and
xchg
das
dec
push
into
les
iret
fcoml
adc
mov
inc
orb
dec
pop
sub
ret
dec
mov
scas
mov
cmp
fstpt
je
push
data16
cmp
in
or
adc
adc
ss
jl
push
scas
dec
jmp
dec
cld
dec
adc
xor
dec
es
je
loope
jno
mov
bound
jne
testb
cs
rolb
testb
pop
push
add
or
add
fs
gs
stos
fstpl
xorb
nop
fwait
arpl
stos
mov
adc
pop
pop
insb
and
sti
or
mov
jmp
fs
jo
sub
popa
pusha
out
and
push
pop
xorl
pop
inc
jge
mov
aam
lds
fldl
mov
mov
xchg
mov
push
rorl
repz
mov
movsl
push
aad
pop
icebp
add
inc
mov
mov
xchg
adcl
jg
mov
pop
fildl
adc
xchg
pushl
and
push
adc
cmpsl
pop
push
adc
mov
loopne
jno
pop
dec
push
sahf
movl
scas
xadd
or
ret
push
das
into
ret
adc
das
pop
cmp
lahf
xor
inc
adc
mov
pop
cmp
adc
xor
add
xchg
or
sbb
outsl
cmpsl
les
adc
xchg
dec
pop
sub
nop
push
sbb
mov
cld
ljmp
inc
or
pop
adc
lea
sbbb
or
cmp
lea
mov
dec
lock
and
or
push
sub
pop
jno
mov
cwtl
hlt
or
dec
push
pop
sub
sub
add
push
cld
or
dec
shlb
inc
cmp
movsb
push
rol
push
out
add
sub
push
inc
add
int
pop
or
cmpb
and
xor
sub
xchg
xchg
test
xor
push
inc
xchg
mov
aaa
xor
inc
lods
fildll
mov
je
std
push
xor
sbb
frstor
sbb
fs
dec
adc
jge
dec
subb
incb
std
and
lea
mov
push
cmpb
or
dec
ret
inc
call
ret
pop
inc
and
or
and
adc
jo
or
and
imul
cmp
xor
or
sub
push
xor
mov
pop
out
insb
test
xchg
leave
inc
jb
aas
cmp
imul
inc
mov
xor
rol
sub
and
mov
sbb
cmp
cwtl
push
out
test
mov
movsb
mov
sbb
ja
popa
ja
daa
jno
jp
je
jmp
push
adc
cmp
loopne
cmpsl
xor
mov
jb
ret
rclb
cmc
or
dec
es
mov
fldl
stos
fcompl
adc
ss
adc
inc
and
mov
aam
mov
xor
cli
scas
enter
enter
mov
ljmp
cli
adc
les
mov
jmp
aaa
pop
js
add
push
add
insl
cmp
push
add
ljmp
lock
int3
or
and
sub
sub
adc
mov
xor
and
xor
adc
shlb
sub
dec
or
add
push
testb
or
bnd
in
aam
int3
cmp
xor
mov
shrb
mov
sbb
adcb
leave
mov
or
call
dec
ss
dec
je
push
dec
out
fldl
insl
mov
sub
pop
sub
aad
mov
sub
cmp
js
inc
dec
or
leave
mov
mov
mov
push
sub
hlt
and
aad
rcl
lret
xchg
xchg
inc
inc
sbb
xor
cmp
adc
mov
aaa
test
xchg
or
jne
movb
fmuls
cmp
adc
leave
mov
bound
in
xor
mov
dec
cmpb
jo
sahf
and
lea
push
inc
sbb
xor
dec
cmp
rorl
inc
movl
or
xor
cmpsl
or
dec
lds
xor
adc
mov
adc
mov
push
xchg
cmpsb
adc
sbb
fstpl
hlt
mov
inc
mov
push
xor
jge
js
pop
or
sbb
incb
js
jmp
call
rcrl
mov
es
add
sub
subl
mov
add
inc
ret
adc
lea
pop
jle
sbb
cltd
loop
rcrb
xorb
mov
push
loope
in
imul
lret
push
mov
ja
in
add
sub
inc
pop
mov
pop
sub
out
cmp
test
jo
sti
inc
movb
mov
lea
into
adc
add
loop
cmpl
adc
xor
push
jae
sbb
lods
jbe
fisubl
mov
shlb
addr16
adc
jp
popf
gs
mov
test
scas
jg
sbb
cmc
mov
ret
add
hlt
pop
sbb
shll
rcrl
hlt
adc
add
into
mov
or
or
pop
nop
jmp
movsb
aam
jbe
pop
jge
addr16
mov
jmp
outsl
sbb
mov
pop
and
bound
add
js
out
out
mov
add
push
jno
add
add
push
sbb
cmc
mov
pop
mov
aaa
loop
cmpl
mov
adc
adc
cmpsl
jb
int3
aam
in
fsubrs
popa
cmpsl
and
push
into
pop
mov
jmp
push
sti
loope
fcomip
push
push
sbb
and
daa
aaa
push
scas
add
dec
mov
push
inc
setg
jmp
inc
add
cmpsb
mov
adc
push
dec
cmp
setle
cmp
shll
inc
dec
inc
inc
pop
and
sar
push
xor
xor
cwtl
repnz
mov
mov
jl
stos
aad
icebp
fwait
andb
ret
inc
popa
ljmp
or
and
and
stos
in
daa
test
mov
mov
out
add
dec
jmp
stos
scas
pop
mov
xchg
and
dec
jae
inc
enter
push
push
int3
in
sub
aaa
inc
add
mov
xor
outsl
sub
add
inc
adc
fildll
nop
subl
mov
adc
in
jmp
aaa
or
jns
hlt
jmp
xorl
sbb
shrl
mov
cli
rcl
ret
fmuls
push
bound
call
cmp
std
add
mov
popf
inc
adc
inc
xchg
gs
ljmp
ds
inc
xchg
or
cmc
push
adcl
push
jbe
jne
icebp
jbe
movsl
fbstp
add
aaa
jl
sbb
add
push
xchg
sub
or
xchg
fldcw
xchg
pop
or
add
out
imul
pop
add
push
mov
jnp
clc
push
inc
lock
scas
inc
and
out
sahf
cmpsl
cmp
add
sub
jmp
or
jns
add
ds
sub
push
or
or
mov
ds
xor
add
lea
cmp
push
mov
lret
data16
add
lret
lds
js
xor
shr
popa
and
inc
fsubr
push
les
andps
push
lods
movsb
cs
push
out
mov
mov
cli
add
cmp
repz
inc
push
dec
loopne
out
lea
sub
dec
add
or
aas
adc
inc
cmp
and
add
pop
push
and
test
mov
test
addl
and
popf
pop
inc
gs
out
sbb
subl
adc
sbb
cmp
jne
loope
js
and
sbb
jmp
das
fiadds
push
insb
xchg
jne
mov
cmpb
push
enter
cld
in
int3
lods
daa
ficoms
adc
or
dec
or
push
cmp
out
xchg
cmp
inc
roll
add
leave
inc
notb
jge
adc
sbb
insl
lret
inc
xlat
shrb
jno
sarl
iret
mov
test
int
jne
push
lock
leave
inc
push
hlt
push
imul
testl
jne
jp,pt
dec
and
jne
aaa
or
push
and
mov
mov
cmp
sub
insb
insl
mov
mov
sub
out
mov
mov
jnp
popa
jne
push
pushl
xlat
inc
cmp
test
xlat
xor
icebp
fdivrs
mov
pop
sub
sbbl
adc
xchg
sub
rcll
cmp
sub
pop
xchg
push
ljmp
pop
fisttpll
push
pop
fmull
adc
add
shll
push
out
lds
cmc
andb
ret
xchg
cmpsb
cmp
mov
aas
sub
inc
mov
jg
gs
pusha
nopl
and
push
jnp
cmpsl
mov
mov
in
sbb
test
lods
call
push
incw
std
or
sbb
or
and
adc
lcall
jmp
nop
dec
add
inc
cwtl
jecxz
nop
mov
and
dec
push
sub
cmp
and
call
xor
sub
sub
shl
enter
push
stos
aad
push
dec
xor
add
push
add
push
call
adcl
or
adc
into
sbb
hlt
es
test
sub
icebp
fisttpll
or
clc
mov
cs
fwait
test
sbb
rcrl
mov
and
inc
dec
jne
push
rcr
mov
push
dec
push
adc
mov
mov
orl
pop
mov
adc
xchg
xor
and
sbb
jg
xlat
or
loop
out
fsubrp
inc
pop
xor
cltd
xor
jbe
xor
dec
mov
or
inc
insb
into
jg
add
mov
jecxz,pn
fnstenv
push
fsubl
sub
xor
adc
push
pinsrw
or
inc
add
inc
and
and
cltd
and
xchg
jmp
sbb
push
dec
movsl
hlt
mov
aaa
dec
insb
pusha
shll
test
add
lcall
je
mov
mov
insl
pop
sar
pusha
dec
or
xor
jmp
out
imul
xchg
mov
imul
sbb
xor
dec
ss
add
adc
mov
mov
aas
jmp
lock
cmp
or
inc
cmp
je
dec
mov
lods
test
int3
xor
jne
arpl
and
push
cmp
inc
shl
jle
lds
push
xlat
sub
sar
push
and
add
push
or
pushf
push
sbbb
testl
daa
xchg
jne
mov
call
je
inc
sub
ret
sbb
mov
mov
or
xor
popf
adc
push
add
pop
leave
insb
fs
orl
add
inc
ss
and
sub
imul
cmp
xorl
das
push
push
cltd
rolb
sbb
mulb
arpl
or
pop
lea
in
pop
push
pop
push
add
dec
sub
dec
add
xchg
das
adc
or
cmpb
dec
mov
or
inc
test
dec
adc
and
test
jle
jl
push
mov
or
inc
rcll
xchg
push
inc
in
dec
jo
sub
mov
cmp
inc
lds
outsl
sub
xor
push
mov
dec
addb
sub
js
sbb
in
addr16
incl
jo
push
popa
clc
cmp
jp
cmp
cwtl
mov
xor
testb
add
push
sub
hlt
and
sti
or
loopne
add
inc
ljmp
inc
sti
jle
test
or
aaa
hlt
out
insl
lea
mov
outsb
jae
pushf
mov
pop
jo
xchg
ds
sub
test
or
mov
push
inc
je
and
popf
mov
mov
mov
push
ficompl
add
data16
add
out
add
inc
sub
mov
add
and
sub
push
or
push
or
xchg
adc
pop
jo
cmc
xchg
inc
push
mov
xor
notl
and
cmp
push
jecxz
cs
ds
push
sbb
cmpl
dec
or
adc
mov
mov
in
push
and
cmp
stos
test
and
mov
insb
pop
sub
mov
iret
and
jb
movsb
adc
cmp
insl
pop
cmp
cli
sbb
les
gs
or
pusha
mov
or
fistps
rclb
xor
outsl
mov
stos
adc
faddl
or
cmp
add
mov
xchg
or
sub
sbb
mov
cmp
jg
aad
xor
cli
push
inc
popa
jne
jb
xchg
lea
lret
push
pop
inc
test
imul
add
aam
sbb
mov
clc
add
stc
mov
iret
adc
cmpl
daa
ret
fsubrl
jle
mov
mov
in
sbbl
cld
xor
clc
lock
pop
fdivs
jmp
sub
xlat
imul
lods
cmc
xchg
cs
pop
mov
xor
sti
cmp
cwtl
push
roll
sbb
je
std
sti
jmp
sub
push
lcall
popl
inc
in
inc
pop
subb
notl
outsb
mov
orl
fdivrl
jo
sbb
or
shrb
repz
cmp
pusha
aaa
andl
sub
test
dec
test
xchg
cmp
or
shlb
rcrl
adc
ret
and
into
cmc
int3
out
lea
and
lods
lock
inc
loopne
or
sbb
out
and
or
loope
lds
xlat
mov
nop
cmpl
pop
xor
clc
sbb
xchg
adc
adc
popf
or
ret
pop
sub
adc
das
test
inc
adc
es
pop
or
push
or
dec
add
je
xor
cmpsb
dec
int
xchg
dec
lds
ljmp
mov
mov
pop
sbb
je
sbb
sbb
and
std
and
cmc
bound
inc
or
sbb
movsb
xor
mov
es
aaa
shl
dec
inc
loope
jmp
pushf
push
sub
and
jl
inc
nop
incb
adc
xlat
xchg
lea
mov
je
aad
cmp
faddl
cmp
test
inc
std
js
jo
and
js
aaa
jne
mov
mov
lods
rolb
out
mov
ret
mov
add
lahf
movsb
fwait
mov
sbb
push
or
xor
pop
mov
ss
cmp
adcb
xor
clc
cltd
scas
push
add
push
inc
mov
cmp
jg
stos
fstpl
jo
add
lods
xchg
add
xlat
hlt
call
dec
and
xlat
nop
push
adc
push
inc
inc
imul
mov
jns
test
dec
mov
hlt
xor
lea
adc
dec
ret
sbb
dec
cs
add
lock
mov
push
and
cmp
xor
cmpl
sub
mov
shll
dec
out
sbb
shll
mov
xor
dec
inc
adc
sub
cltd
cwtl
ljmp
lea
gs
clc
cmp
inc
pop
xor
mov
adc
mov
jmp
call
inc
push
inc
xor
dec
inc
mov
jno
lcall
int
arpl
inc
adc
inc
cli
orb
pusha
mov
adc
jo
or
push
cmp
call
pop
adc
je
push
pop
lock
dec
dec
ret
dec
add
jo
or
adc
or
jbe
popa
int
popl
inc
pushf
out
pop
insb
negb
xchg
ss
pop
inc
test
and
test
jno
cmpl
test
add
jno
cmp
cli
adc
add
insb
xchg
cli
js
sub
jo,pn
mov
push
mov
loop
cld
ss
shr
dec
imul
ljmp
pop
cmp
and
inc
inc
or
fidivrs
and
push
imul
mov
cmp
mov
ja
mov
mov
xchg
mov
test
push
rcll
push
aaa
mov
jb
add
jmp
mov
mov
loop
or
add
sbb
xchg
mov
imul
add
push
shr
xor
sub
adc
jae
pop
sbb
jecxz
sbb
mov
sbb
rol
sbbb
or
xor
test
add
cld
pop
lods
arpl
mov
lea
mov
add
add
inc
inc
fstpl
pushl
sub
pop
sbb
mov
scas
adc
mov
push
ficoml
xchg
or
add
mov
pop
or
adc
shll
inc
add
cmp
sub
int3
add
out
das
cld
and
aam
mov
or
je
cmp
fnsave
dec
je
daa
insl
xor
aaa
lock
je
imul
or
inc
xor
sbb
daa
or
out
adc
push
adc
push
xchg
cmp
xor
or
inc
sbb
cmp
push
pop
imul
cwtl
push
sbb
rcll
mov
xlat
shlb
loopne
or
cmpb
pop
xchg
push
push
push
push
rcll
push
xchg
cmpsl
push
and
sbb
inc
daa
sbb
int3
pop
sahf
jge
and
outsb
notl
mov
sub
pop
adc
xchg
add
xor
push
cmpb
je
out
inc
pushf
xchg
xor
or
lds
jno
mov
adc
inc
cmp
std
sub
movsl
xchg
dec
aad
cltd
insb
mov
inc
mov
into
cs
das
cmpsl
fsubs
push
imul
push
into
inc
and
jnp
xor
mov
loopne
mov
xchg
push
sbb
fldenv
test
jne
inc
nop
roll
and
jb
or
dec
or
out
fmulp
xor
adc
mov
adc
rcrb
shlb
inc
push
push
pop
mov
and
lcall
nop
or
outsb
xchg
pop
test
movsl
shr
cmpsl
incl
loope
or
and
arpl
sub
in
pop
adc
pop
jmp
lock
test
mov
inc
dec
add
inc
stos
sub
mov
push
negb
in
adc
and
movsl
aaa
fs
cld
dec
repnz
mov
adc
jo
add
cmp
daa
icebp
xor
adc
scas
add
repz
inc
inc
imull
lock
push
inc
jmp
cmc
jo
xchg
mov
jecxz,pt
lock
add
inc
adc
sbb
xchg
xchg
int
repz
sbb
add
inc
lcall
aam
and
xorps
sub
cld
out
movsb
pop
add
add
dec
ret
fadd
xchg
fisttpl
add
jp
rorb
clc
je
sbb
pop
aaa
inc
aas
test
or
fsts
shll
xchg
push
adc
dec
fists
adc
roll
jp
loope
push
fs
add
xor
mov
inc
lahf
mov
mov
xchg
push
and
or
and
mov
stos
adc
in
and
push
es
xchg
movsb
dec
daa
pop
daa
ss
add
daa
push
lds
mov
loopne
hlt
pusha
push
dec
nop
dec
adc
enter
daa
push
and
add
outsb
test
movsl
shr
push
dec
jo
decb
xor
lret
or
xchg
sbb
scas
sbb
mov
mov
imul
popf
xor
cmp
mov
scas
arpl
je
sub
mov
dec
jp
shl
add
push
add
fdivrl
push
xchg
or
dec
inc
add
pop
xorl
push
sti
daa
and
out
cmpl
gs
mov
lret
sbb
shlb
add
scas
fstl
int3
or
dec
rclb
lods
shlb
lcall
push
adc
xor
mulb
dec
sub
xchg
or
ret
adc
fbstp
adc
pop
out
pop
inc
mov
aaa
aas
cmp
xor
xchg
ja
add
mov
jns
sti
and
add
repnz
or
js
sbb
add
fwait
dec
mov
test
mov
lcall
push
sub
or
in
je
movswl
inc
push
icebp
fbstp
sbb
jle
add
ss
mov
sub
xor
adc
and
call
sbb
pop
jb
cwtl
fs
scas
in
mov
or
push
inc
push
call
stc
sbb
mov
daa
add
fmul
dec
jl
adc
inc
loop
mov
and
repz
outsb
xorl
pop
add
adc
shl
dec
shll
test
dec
loope
leave
sbb
call
adc
cmpsb
into
cmpsl
push
push
pop
jno
arpl
cmc
mov
pusha
add
xchg
test
cmpsl
dec
nop
loopne
xlat
shl
clc
loopne
xchg
jle
je
mov
call
popf
inc
cmp
and
xor
lret
in
pop
and
and
je
faddp
les
and
movsb
sarb
int3
bound
mov
popf
sub
ljmp
dec
andb
pop
out
inc
sub
rcrl
jb
adc
in
xchg
mov
mov
bound
add
icebp
aaa
or
adc
lret
rcrl
stc
mov
mov
push
out
and
ret
pop
adcb
aas
mov
mov
push
hlt
mov
xorb
adc
pusha
inc
push
sarb
mov
outsl
lods
add
call
in
cmp
push
std
pop
sub
daa
mov
in
dec
or
mov
lahf
jne
jge
jne
jnp
fisubs
xchg
pop
push
mov
add
clc
test
sbb
or
ret
push
mov
aam
add
shlb
push
adc
inc
into
lcall
mov
dec
dec
out
bound
push
dec
mov
push
push
xor
daa
adc
pop
lret
push
icebp
pop
mov
and
roll
inc
or
fcoml
test
adc
ds
daa
add
and
xlat
fldl
mov
cmp
and
jo
jne
jle
and
rcll
mov
sbb
mov
sahf
mov
dec
mov
aas
add
leave
sbb
mov
dec
test
icebp
adc
add
out
dec
jmp
aaa
mov
aam
enter
mov
rolb
cmc
insb
inc
lret
lods
cmpl
adc
ja
cmp
and
sub
sbbl
shlb
mov
adc
mov
jbe
dec
andl
adc
cmp
mov
mov
ret
shll
xor
cwtl
sti
pop
cmc
push
push
add
sub
lahf
inc
stos
pushl
xchg
lret
add
lret
xorps
subb
loop
dec
inc
or
nop
push
jecxz
and
in
es
clc
inc
ja
xchg
lock
into
pop
push
add
add
inc
inc
fstps
sbb
dec
push
fcomps
push
add
out
in
fiadds
stc
mov
cmp
push
jmp
testl
push
and
add
and
rolb
sbb
mov
or
or
mov
push
stos
mov
dec
xchg
dec
les
or
xor
mov
lods
fisubrl
ljmp
add
and
xchg
iret
mov
mov
push
push
or
aas
in
js
inc
mov
push
call
mov
aam
mov
pop
shll
pop
inc
imul
adc
inc
test
dec
imul
xchg
mov
hlt
add
je
sub
lea
add
inc
xchg
jmp
stc
cld
adc
or
push
and
xchg
and
push
push
flds
insb
xchg
xor
xor
sbb
cmp
adc
jmp
dec
and
pop
inc
add
pop
fnstsw
and
loope
xor
bound
add
cmp
adc
fnstcw
pop
inc
pusha
loope
mov
mov
js
aaa
outsb
mov
sub
or
sub
push
pop
jne
xor
dec
push
cmp
add
js
or
xchg
inc
xchg
inc
packsswb
mov
adc
or
ficomps
or
addr16
mov
movb
or
jle
xor
inc
adc
cmp
xchg
mov
aam
xor
adc
int
jnp
cli
sub
and
js
std
push
adc
pushl
pop
pop
mov
arpl
loop
or
push
add
lcall
xor
cmp
outsl
data16
in
pop
outsl
add
jo
fisubrl
pop
jle
test
xor
adc
daa
push
or
push
das
rcll
ds
lds
sub
jmp
and
cmp
cmp
movsb
enter
ret
stos
mov
sbb
xchg
btc
lahf
xchg
sbb
inc
pop
andl
mov
sbb
jns
rcpps
mov
jo
inc
repz
fisubrl
mov
fsub
and
adc
sbb
jecxz
shl
push
push
insl
pop
notl
xchg
pop
rol
inc
mov
pop
push
into
in
pusha
adc
push
jns
push
in
lret
mov
xchg
xor
jbe
and
das
dec
mov
fadd
pop
cwtl
sbb
sbb
xchg
xchg
or
lahf
dec
and
daa
or
push
dec
sbb
cld
jo
and
mov
pop
imul
push
xor
xor
dec
lds
pusha
jno
pop
je
pop
push
sbb
pop
push
mov
ret
jle
push
cmp
push
jp
das
inc
sbb
or
std
imul
adc
xor
pop
adc
jecxz
aaa
das
push
mov
cli
iret
mov
push
add
add
jo
jmp
cmpl
xor
cmp
mov
cwtl
movsl
mov
iret
add
rcrb
add
dec
mov
push
push
call
js
call
ljmp
hlt
je
cmpsl
addr16
push
xor
and
cltd
or
pop
inc
or
or
adc
mov
and
pop
rcr
sbb
sarb
xchg
adc
idivb
sbb
push
fldl
mov
or
int3
add
and
and
xor
add
xchg
jns
mov
adc
lods
dec
add
jae,pn
cmpsb
pop
daa
xchg
pushl
inc
add
clc
sbb
je
push
popf
inc
mov
and
adc
fs
sti
jmp
add
adc
or
in
xchg
jno
mov
icebp
addl
add
inc
sbb
push
push
xor
dec
fildl
adc
xor
dec
js
add
gs
popa
add
adc
dec
xorb
dec
push
sbb
por
add
rolb
iret
adc
pusha
ret
cmp
mov
add
out
mov
xor
xor
scas
jne
sti
lahf
mov
lock
and
and
cwtl
je
and
mov
jmp
das
and
sbb
je
xor
jecxz
jne
push
orb
add
pusha
jge
pop
or
push
int3
or
sub
sub
imul
cmp
les
jne
xchg
inc
es
push
cmp
divl
sbb
outsl
push
mov
sbb
lds
and
inc
movsb
movsl
nop
in
xchg
inc
add
push
jecxz
jg
jmp
xchg
jmp
loope
and
pop
add
test
dec
rcll
inc
adc
mov
push
push
inc
cli
add
divl
stos
cld
mov
arpl
and
sbb
cmpsl
in
inc
inc
pop
out
mov
movsb
push
pusha
adc
push
pop
jne
mov
out
sbb
or
dec
roll
sub
je
or
mov
dec
and
add
je
xlat
push
das
xor
sub
outsb
or
jmp
lret
jne
cmp
push
xchg
pusha
out
orl
jnp
push
inc
and
xlat
insb
or
push
add
dec
ja
jo
push
imul
rcl
popa
adc
fists
mov
nop
cwtl
cmp
push
xorb
js
add
clc
in
push
inc
sub
shll
add
cmp
lret
sub
sub
orb
nop
xor
aas
cmp
test
xchg
xchg
ret
inc
lcall
adc
insl
daa
pop
sbb
jle
dec
or
lock
test
sub
movsb
ja
xchg
lds
cli
or
cwtl
mov
lret
add
sbb
shlb
mov
jo
insb
mov
and
mov
divb
adc
rolb
sbb
xchg
popa
daa
or
mov
xor
push
cmp
imul
lret
add
jg
arpl
mov
cs
dec
add
jae
push
scas
pop
imul
daa
jo
lret
pop
sbb
fcompl
jae
jo
test
and
mov
cmpsb
inc
ljmp
imul
or
pop
and
jo
loopne
pop
or
outsl
adc
or
inc
push
fistl
dec
and
adc
jne
test
hlt
xor
daa
push
adc
mov
inc
cs
test
jo
or
ss
add
mov
nop
mov
mov
pop
pop
jmp
push
inc
shlb
push
dec
or
ret
add
adc
xchg
mov
push
and
es
fisubs
add
ret
adc
jns
out
nop
mov
push
add
adc
inc
fcmovbe
jle
or
stos
add
xchg
xor
or
dec
addr16
or
adc
cmpsl
cmp
es
or
rcrl
mov
add
push
jge
or
xlat
push
lahf
mov
cld
xor
imul
sub
pop
sub
movsl
add
lds
js
jbe
adc
psllq
and
jne
cmp
shufpd
call
daa
push
adcb
gs
fs
mov
outsb
ljmp
add
add
ds
add
js
test
sub
xchg
lahf
xor
cmp
leave
add
add
adc
cmp
cs
sbb
xlat
push
pop
lret
xor
pop
iret
loope
push
cmp
and
jns
mov
pop
inc
test
ret
mov
popa
test
out
cs
cmpb
hlt
lahf
je
mov
das
push
xor
adc
add
xor
sti
mov
xchg
es
sub
scas
add
adc
test
push
and
imul
xlat
sub
dec
mov
mov
insb
sub
push
cmp
mov
mov
test
into
inc
daa
cmp
adc
or
mov
add
bnd
xchg
mov
push
aam
add
sti
mov
dec
lods
or
and
sbb
sub
addl
sbb
mov
subb
jle
jmp
sbb
cmc
pushl
mov
add
or
push
sub
rcl
dec
test
or
es
prefetcht0
sbb
mov
push
cwtl
adcb
fnstcw
xor
xor
cmpb
adc
or
sub
jge
ret
popl
pusha
stos
pop
imul
sti
hlt
lahf
std
fcomps
xchg
cld
xor
push
or
fstpl
push
cmp
adc
and
pop
jb
rol
and
retw
dec
jl
insb
loopne
pop
push
push
xchg
loop
mov
cmp
add
arpl
ret
loop
pusha
or
shl
xchg
sarb
les
dec
fnsave
add
push
loopne
jp
rorb
movsl
imul
adc
xchg
adc
or
sbb
or
les
push
mov
cmp
adc
imul
xlat
insb
loope
pop
mov
inc
lods
mov
add
push
aad
mov
push
imul
inc
mov
sarb
jb
inc
add
xchg
inc
sub
dec
scas
sub
sub
jb
ss
xchg
in
mov
jge
adc
hlt
sub
pop
clc
lock
sub
dec
or
in
or
enter
call
rorb
or
jmp
pop
or
call
popf
inc
jl
loopne
inc
fldenv
mov
movsl
subl
fistpll
std
sub
dec
mov
xor
sbb
movsb
cwtl
movsl
cs
jo
mov
std
mov
enter
movb
adc
add
cmp
add
setb
cmp
loop
jle
sub
sbb
lret
shlb
add
adc
adc
jmp
pop
add
negb
testb
rcll
add
mov
enter
mov
dec
mov
inc
nop
nop
insl
sbb
out
cs
mov
dec
jnp
imul
push
mov
mov
add
sbb
inc
adc
mov
jmp
inc
and
in
adc
sarb
loop
rclb
dec
dec
or
loopne
adc
jp
jl
outsl
das
or
mov
sahf
adc
and
jle
adc
mov
cmp
add
add
dec
sub
xorb
dec
adc
into
adc
fmul
adc
ja
add
mov
xlat
jecxz
pop
mov
and
into
adc
cld
push
fmul
inc
dec
add
add
ljmp
mov
sbb
arpl
sbb
xor
fmuls
add
sbb
fsubr
or
shll
in
xchg
fdivl
int3
mov
dec
sbb
xchg
insl
cltd
sbb
mov
leave
xlat
cmp
xchg
aam
adc
dec
imul
sbb
or
add
mov
sbb
sbbb
mov
adc
jg
stos
mov
mov
add
stos
ret
add
das
jg
cs
into
mov
daa
mov
mov
adc
dec
addr16
dec
mov
xlat
adc
imul
pushf
test
jge
dec
bound
cmpsl
dec
inc
enter
or
out
repz
mov
pop
adc
sub
sbb
mov
or
cmp
subb
sbb
notl
jns
mov
daa
adc
insb
xchg
std
xchg
rorb
mov
push
arpl
sub
lock
test
push
inc
xchg
leave
icebp
fs
lock
pop
ja
xor
lcall
sub
inc
sub
cmp
jmp
mov
inc
out
xor
sbb
and
push
ret
mov
add
mov
adc
insb
ss
jle
mov
shrl
dec
or
mov
cmpsb
add
sub
data16
shlb
clc
xchg
sub
test
fcoml
adc
int3
hlt
push
push
cmpsb
movsb
add
mov
xorb
jmp
pop
mov
insb
jecxz
xor
mov
imul
lcall
add
nop
out
or
mov
imulb
lock
je
add
adc
pop
lret
mov
or
mov
push
lahf
mov
jle
aam
in
adc
insb
xrelease
fistpl
ret
dec
ljmp
adc
imul
fsubrs
gs
dec
push
jle
mov
lahf
fcmovb
hlt
sub
lea
fcomps
js
mov
push
dec
lcall
sbb
xchg
test
mov
push
pop
inc
sub
cwtl
jno
fs
inc
or
inc
ss
pop
aam
dec
sub
sbb
pop
cli
or
jmp
test
test
sbb
add
cs
adc
mov
dec
jo
int3
test
xchg
orl
and
push
or
cmp
scas
add
and
fs
aaa
js
jg
adc
push
xor
movsb
loope
mov
or
cmp
js
adc
addb
sub
xchg
lock
sbb
mov
add
mov
or
push
scas
call
add
jno
lods
push
push
or
jno
cmp
add
inc
cmp
push
pop
pop
ret
jnp
fnstcw
add
test
dec
mov
inc
dec
lock
lcall
in
adc
cmp
add
and
test
cmp
or
cmpl
pop
add
xor
adc
xor
imul
adc
push
arpl
pop
add
add
add
dec
loop
addb
and
fimuls
or
mov
sbb
shlb
sbb
cmc
mov
adc
sbb
dec
xorb
add
test
add
mov
add
shll
pusha
cwtl
mov
orl
and
push
je
leave
lcall
and
push
mov
dec
and
and
cmp
in
inc
andl
add
ret
jne
xor
or
enter
ja
xor
dec
inc
inc
in
stc
imul
dec
popf
add
cltd
or
hlt
add
sub
xorl
and
rorb
xchg
adc
mov
insb
sub
jo
adcl
jp
loope
arpl
jbe
rclb
jo
dec
bound
jmp
pusha
inc
add
pop
jbe
adc
xchg
lcall
sub
add
cmpl
rcll
xor
sub
sbb
add
cld
jb
adc
push
or
lock
or
or
xor
iret
mov
jnp
jno
mov
sbb
add
mov
nop
mov
mov
xor
push
lock
in
push
adc
dec
movsl
sbb
adc
test
sub
or
add
pop
pop
pop
dec
hlt
cmp
jno
lret
mov
cmp
sub
popf
sbb
inc
xchg
mov
ret
addb
ret
xchg
dec
rcrb
jg
fisttpl
dec
jnp
add
ret
daa
repz
adc
sub
xor
js
call
cmp
adc
pop
sub
in
shlb
push
inc
push
ss
jp
push
fstpl
adc
add
and
cmp
js
cmp
inc
push
adc
mov
data16
cmpl
inc
pop
dec
push
push
notb
mov
das
sbb
sbb
add
xchg
cmc
xchg
jp
jle
adc
mov
sbb
cmp
adc
push
and
cltd
out
sbb
or
dec
mov
and
lret
adc
sar
leave
push
jo
out
bnd
jno
loopne
sbb
call
mov
add
xchg
rolb
push
in
mov
mov
push
lds
xchg
push
addb
add
adc
insl
out
in
adc
dec
dec
mov
cld
mov
shll
push
sar
lret
jmp
cmp
push
dec
adc
ret
incb
sub
mov
ja
sbb
push
inc
arpl
push
testl
xor
mov
mov
das
loope
scas
dec
cld
mov
and
call
sub
sub
mov
push
in
or
nop
lods
jg
loopne
aam
sub
jge
test
add
push
rorb
pop
sahf
dec
jae
mov
sarl
popf
movswl
mov
adc
clc
push
inc
push
push
cmpsl
int3
add
faddl
movb
ret
outsb
test
out
push
test
ss
inc
daa
pop
or
jp
mov
inc
loope
jnp
ret
je
fwait
clc
in
sub
cmp
mov
inc
push
jg
pop
sub
or
sub
xchg
mov
ret
adc
cmp
ss
push
js
xorb
in
or
adc
add
mov
mov
pop
out
push
pop
mov
ret
and
cmp
je
pop
das
movsb
mov
mov
or
inc
fstpl
ret
lret
je
icebp
shlb
mov
ret
mov
mov
cmpsl
test
nop
test
popa
mov
adc
push
push
fstps
ja
cmc
or
pop
push
adc
cltd
pop
push
xor
decl
das
add
or
das
mov
pop
movsb
inc
lods
ret
ret
sbbb
mov
enter
aad
loope
cmpsl
add
test
cmp
nop
nop
and
xor
ret
ret
test
sbb
stos
xchg
mov
push
ja
cwtl
and
push
test
jp
int
add
jle
pop
mov
pop
test
mov
out
sbb
inc
inc
mov
out
sarl
enter
mov
add
enter
or
mov
xchg
xchg
or
dec
fldcw
push
ljmp
jno
mov
pop
or
lds
je
jle
addr16
orb
adc
and
sbb
inc
fs
js
xor
or
sbb
add
mov
jge
push
xchg
rorb
mov
loopne
out
sub
adc
imul
inc
push
add
xor
pop
push
jmp
mov
push
xchg
popa
xor
in
jbe
pusha
rorl
jl
inc
fs
pushf
outsb
mov
cmp
arpl
xor
push
add
test
dec
jmp
xor
mov
pusha
sbb
or
inc
xchg
fnsave
jmp
mov
sub
enter
adc
add
aaa
insb
jmp
outsl
or
stos
add
jno
adc
sbb
sbb
pop
sbb
les
lods
or
icebp
xchg
or
rcrb
or
in
into
flds
sbb
mov
push
adc
jo
mov
xchg
aas
inc
outsl
pop
dec
jne
mov
iret
add
pushf
sarb
por
movsl
push
dec
loop
inc
cli
and
push
lock
push
stos
push
jbe
jg
pop
xchg
sub
jmp
aam
ljmp
adc
fs
mov
inc
lods
add
popa
sub
sub
mov
mov
fs
inc
adc
icebp
pushf
adc
adc
and
in
adc
sub
mov
and
mov
lock
inc
fs
xchg
popf
sub
loopne
addr16
mov
xor
or
data16
cmpsl
adc
adc
ret
and
xor
sbb
mov
jbe
addb
rcrl
shlb
lods
inc
mov
pop
in
inc
jo
addr16
cli
mov
mov
dec
adc
mov
cmp
mov
sub
ret
mov
mov
dec
or
dec
sub
push
cmp
add
and
incl
push
rorb
adc
lret
inc
out
ret
rolb
xor
fs
push
push
leave
or
dec
dec
sbb
mov
mov
mov
jp
push
test
mov
push
adc
lock
aas
fdivrs
lock
scas
out
ret
call
mov
push
pop
pop
sbb
pop
mov
fcompp
outsb
adc
jne
push
testb
pushw
and
xlat
je
add
inc
adc
enter
push
push
xor
pop
jbe
loope
fs
dec
push
or
add
dec
push
outsb
mov
jl
sbb
sbb
mov
pop
das
subl
jae
inc
daa
adc
shlb
mov
adc
xor
lret
pop
je
andb
js
mov
cmpsb
int3
and
inc
mov
jne
hlt
sub
sbb
cmpsb
pop
or
in
inc
jbe
and
jle
xor
rorb
nop
jne
cmpsb
dec
arpl
fiaddl
jl
daa
pop
jg
dec
lock
xor
addr16
add
push
cmp
aaa
in
and
inc
popw
clc
add
xchg
loopne
pop
sbb
sbb
or
sub
add
mov
out
negl
call
lcall
or
hlt
cli
cmp
and
dec
sbb
or
sbb
add
dec
push
push
mov
mov
pop
xorb
pop
adc
ret
dec
add
fnstcw
dec
mov
dec
mov
inc
add
and
test
js
jno
or
adc
push
or
xchg
mov
xlat
cltd
dec
xchg
sub
sar
daa
fisttpll
xor
cmp
cmp
xor
stos
call
or
orb
pop
aas
sub
mov
hlt
push
xor
or
sbb
push
sbb
dec
dec
and
pop
add
mov
incb
inc
add
incl
push
dec
insb
clc
or
mov
in
int3
inc
add
pusha
dec
test
xor
add
sub
jne
sbb
fimull
dec
sub
pusha
pop
aaa
or
outsl
orl
xor
in
rclb
clc
xlat
adc
pop
or
jo
popa
mov
sbb
call
aam
dec
in
jbe
or
pop
mov
nop
iret
add
pcmpgtw
xor
daa
icebp
and
xlat
and
ja
pusha
ret
daa
in
jg
pop
imul
mov
mov
jl
inc
scas
xchg
hlt
fbld
xchg
and
out
inc
lods
cmp
mov
or
inc
jg
jne
adc
jle
in
pop
and
cmc
test
dec
or
jmp
arpl
push
insb
pop
xor
clc
xchg
cs
jge
sub
jae
push
loopne
jp
jbe
add
test
pop
add
les
test
lods
mov
je
xchg
mov
test
rclb
ljmp
xchg
lret
xor
js
push
scas
sub
sub
cltd
movsl
mov
je
and
fadds
jno
in
sub
lahf
data16
sbb
jne
mov
ret
mov
dec
test
out
sub
or
xorb
mov
mov
xor
mov
jmp
push
add
cmpsl
and
imul
jnp
push
into
push
or
fidivs
idivl
add
sbb
sub
sub
xchg
jo
insb
sti
add
je
sbb
notl
push
mov
cmp
sarl
inc
cmp
dec
push
mov
insb
mov
test
iret
push
push
jne
daa
or
inc
xor
inc
movl
xor
popf
add
inc
lock
add
cwtl
add
shl
pop
fs
inc
pop
push
icebp
cltd
fsubr
rorb
sbb
adcb
or
mov
fs
add
test
popa
or
ret
cmp
js
or
adcl
adc
or
stc
ja
push
rorl
and
inc
dec
pop
or
dec
fildl
inc
sbb
pop
or
or
into
xchg
push
and
xchg
mov
adc
aas
pop
adc
push
mov
addr16
add
inc
shll
push
enter
sbb
pop
mov
adc
addr16
and
sub
jl
aam
daa
push
inc
adc
add
imul
cli
or
mov
negl
sub
pop
and
dec
sarl
inc
mov
jmp
sub
xchg
add
outsl
inc
fs
cmp
sbb
and
addl
jno
xor
enter
and
cmpl
ljmp
mov
add
mov
dec
inc
leave
rcrl
inc
add
dec
adc
jbe
xchg
ja
imul
test
shlb
xchg
add
pop
add
clc
cwtl
add
out
push
jns
arpl
pop
loopne
jg
aas
addl
xor
push
cmp
sub
xchg
sbb
pop
add
aaa
adc
mov
push
xchg
jge
or
add
and
mov
and
push
inc
jo
rorl
jg
pop
jg
mov
orl
ss
sarb
add
add
pusha
inc
pusha
push
sti
jmp
cmc
xor
jne
movsl
rep
scas
lods
adcl
dec
or
pop
insb
insb
and
cltd
aas
outsb
add
test
clc
aas
xchg
xor
dec
lds
jne
mov
push
addl
pop
inc
pop
int
enter
clc
jae
or
push
mov
sub
add
jmp
lods
mov
adc
daa
and
lret
sub
sub
rcrl
dec
jecxz
and
pop
or
or
and
and
lods
popa
pop
jnp
adc
jne
xchg
es
and
push
adc
ret
jno
inc
add
pop
adc
adc
dec
xchg
jo
pop
mov
dec
sub
inc
das
cmpsl
rol
mov
clc
repnz
and
xor
add
sub
in
ds
or
inc
mov
pop
mov
mov
push
imul
mov
or
insb
pusha
ficomps
lock
xchg
mov
xor
inc
sub
inc
cmp
lock
or
mov
lea
fbstp
cwtl
inc
pop
push
sub
cli
add
clc
and
push
adc
iret
subb
jg
insl
pop
lock
or
add
lds
lret
dec
add
jmp
sbb
loop
add
ds
or
inc
sub
xor
jae
xor
aam
push
pop
sti
in
loop
xchg
sub
shrb
mov
pushf
addb
test
inc
pop
out
dec
dec
mov
and
shll
inc
sub
add
rcrl
jne
add
adc
movl
into
add
iret
add
mov
adc
inc
shlb
xor
mov
or
adc
xor
sub
and
pop
bound
in
dec
or
adcb
inc
fiadds
lret
dec
and
pop
cmp
sbbl
sbb
jo
push
push
shlb
js
inc
test
or
fnstsw
add
inc
add
xor
rcrl
adc
add
je
fmull
push
scas
dec
test
jmp
push
subl
mov
jbe
mov
dec
cmp
cltd
and
mov
mov
add
mov
inc
or
loopne
xor
iret
ret
mov
push
fistpl
mov
add
add
xchg
movsb
pusha
insb
push
xor
push
pusha
pusha
stos
scas
ss
add
testb
adc
xor
mov
mov
orl
shrb
adc
inc
call
push
push
pusha
movsb
imul
mov
jnp
ljmp
cmp
clc
aas
psrlw
addr16
loope
or
pop
mov
push
push
sbb
ja
xchg
pop
sub
cwtl
fld
mov
movsb
int3
adc
aam
or
xor
and
in
mov
sbbl
or
mov
mov
imulb
or
repz
push
or
mov
sti
or
xchg
mov
adc
add
or
or
add
sub
add
test
mov
jae
dec
mov
pop
inc
xor
pushf
nop
es
clc
sar
jns
adc
mov
cmp
mov
or
es
push
jne
add
jbe
lcall
loopne
pop
iret
popf
lahf
imul
shl
pop
push
bndldx
movsb
sub
dec
cmpsb
rorl
pusha
xchg
push
mov
icebp
push
insb
addr16
inc
fisttpll
pop
push
dec
xchg
test
icebp
or
fimull
leave
sbb
in
xor
cmp
add
push
or
icebp
wbinvd
and
inc
insl
popl
fcoms
and
xchg
aaa
addr16
stos
or
dec
push
and
dec
mov
dec
push
jno
push
nop
jnp
out
mov
mov
mov
mov
sbb
stc
xor
hlt
hlt
lock
inc
push
lock
rorl
push
dec
pop
fcoms
add
mov
test
js
xor
andl
or
clc
xchg
gs
cmc
push
pop
push
jp
sub
js
and
xchg
lods
push
ret
adc
push
mov
sub
lods
ja
ror
pop
add
pop
add
pop
idivl
mov
fmull
push
adc
test
push
int3
jo
and
sbb
push
xor
dec
push
push
nop
enter
outsb
je
pop
cs
push
ficoms
negb
pop
addr16
jns
out
sbb
orl
rcll
lock
mov
sbb
sub
mov
and
nop
dec
jo
push
shrb
inc
push
mov
mov
xor
test
mov
jne
inc
and
rcr
adc
mov
adc
mov
push
imul
movsl
sbb
xor
in
das
adc
jle
lea
mov
shll
clc
shll
mov
cmp
outsl
pop
mov
dec
dec
push
sbb
std
dec
inc
ret
aad
inc
cmp
addr16
mov
xor
sbb
push
pop
test
push
jl
insb
or
or
pop
xchg
iret
push
add
sub
or
jl
cmp
ficomps
push
fildl
dec
inc
leave
outsb
sbb
xchg
sbb
nop
cld
sub
out
subl
push
inc
clc
push
mov
cli
stos
jle
sbb
push
fwait
icebp
mov
out
pop
aaa
sub
ret
xchg
lea
cmp
mov
mov
push
cltd
adc
incl
xchg
test
push
mov
lahf
clc
and
adc
data16
push
pop
inc
sub
fwait
cmp
lock
daa
xchg
and
push
mov
outsl
sbb
repnz
in
jmp
movsb
sbb
adc
or
lock
cwtl
mov
lock
xchg
sub
xchg
lods
jmp
rcr
xor
sub
orb
pusha
lret
adc
mov
pop
imul
inc
in
cltd
hlt
in
popf
add
push
cmp
cmp
inc
push
ror
mov
and
sbb
inc
imul
adc
or
adc
sahf
in
xor
or
push
pop
nop
loop
jmp
dec
mov
mov
and
push
dec
jae
adc
lods
pop
adc
push
jnp
adc
push
hlt
pop
and
add
or
dec
sub
push
inc
inc
mov
mov
movsb
push
add
mov
dec
fmuls
and
xor
jb
push
pop
adc
add
xor
jo
sub
icebp
xchg
sub
cmp
push
adc
jne
pushf
inc
jg
rcrb
das
test
pop
mov
icebp
fsts
pop
imul
mov
cmp
shlb
inc
lods
adc
cmp
mov
cltd
dec
push
andl
pop
mov
push
arpl
inc
push
mull
or
rcrb
je
mov
pop
es
push
adcl
popa
ret
icebp
dec
jecxz
pusha
push
rorl
inc
inc
or
mov
push
sub
or
dec
mov
mov
add
mov
push
adc
repz
push
mov
mov
push
adc
jo
movsl
mov
les
mov
sub
mov
leave
lret
xchg
enter
or
dec
rclb
jle
xor
lcall
je
xor
pop
cmp
in
push
test
inc
mov
loope
inc
arpl
aad
jle
inc
or
xchg
sbb
adc
push
pushf
push
jne
lock
clc
push
cmp
pusha
addb
add
icebp
gs
add
push
stos
add
clc
push
es
scas
push
mov
mov
jle
mov
rcll
adc
add
jo
not
les
leave
in
and
cmp
jle
jl
xor
fnstsw
ss
ss
add
mov
mov
push
lahf
and
xor
scas
mov
xchg
push
addr16
ds
inc
and
sbb
sbb
imul
pop
push
out
unpckhps
cmp
jle
pop
loope
mov
repz
mov
in
and
jb
aas
aad
int3
pop
adc
adc
adc
fcomps
jbe
and
mov
cmp
sub
mov
adc
icebp
adc
push
and
mov
pushf
arpl
ja
sub
xchg
and
bound
cltd
pop
jmp
mov
xchg
adc
ret
sbb
inc
pop
das
mov
add
das
push
in
fistl
jb
cmp
insl
push
pop
fsubrs
sbb
pop
add
addr16
cmpb
pop
push
pop
jmp
dec
mov
jl
dec
aaa
mov
cmc
pop
xchg
push
xor
popa
add
xchg
loopne
and
adc
xor
pop
adc
pop
mov
shlb
jo
pop
ss
insb
mov
sarl
cmp
jl
or
dec
push
pop
mov
out
in
subb
jg
jmp
push
mov
xor
push
push
push
jg
mov
mov
fbld
lgs
inc
and
jg
push
pop
scas
cmp
adc
and
call
add
pop
leave
fidivrs
sub
add
jne
xchg
xor
sbb
aaa
dec
in
and
add
and
rcrl
inc
lret
add
mov
jge
push
or
push
push
jae
pop
push
or
adc
cmp
inc
mov
imul
jge
ljmp
int3
cwtl
nop
push
enter
push
inc
add
popf
hlt
sahf
dec
in
insb
xchg
sbb
adc
je
push
sbb
jne
dec
lcall
movsl
adc
hlt
sbb
or
add
outsl
fmull
jmp
adc
aaa
cs
sbb
push
pop
adc
sti
leave
jmp
or
nop
jmp
inc
in
repnz
mov
and
sbb
ja
cmp
push
loopne
cmp
out
xor
inc
cmc
rolb
out
xor
lods
and
adc
insl
loope
xorl
add
or
shlb
aas
sbb
push
clc
dec
xor
imul
mov
aam
sarb
das
and
inc
xor
jge
jmp
push
xor
sbb
sarb
popf
negl
outsb
enter
dec
sbb
xchg
addl
movsl
fisubrl
mov
push
out
repz
inc
loopne
in
lods
xchg
repz
int3
bound
lods
mov
adc
adc
push
add
aam
xor
inc
js
or
inc
popf
ret
jmp
sub
or
xor
mov
das
fsubl
adc
aas
insl
xor
jb
mov
add
pusha
in
xchg
or
adc
mov
push
push
mov
sbb
dec
or
or
loope
add
or
popa
pop
cmp
out
nop
lods
adc
mov
andl
mov
outsl
mov
lahf
push
push
or
sbb
pop
adc
sbbl
mov
lcall
adc
mov
push
in
xchg
cmp
clc
pop
rclb
xchg
pop
nop
adc
mov
int
shll
add
add
xor
adc
cwtl
rcrl
inc
dec
jl
in
push
inc
pop
or
and
push
popa
faddl
orl
sub
cmp
mov
pusha
cs
sub
xchg
jno
andl
xchg
mov
xlat
push
in
aaa
dec
cmp
cltd
int
dec
mov
inc
push
mov
inc
sbb
push
es
push
outsb
cmpsl
out
and
test
add
mov
jnp
push
enter
test
lcall
push
jnp
sub
pop
pushf
pop
and
int3
push
movsb
jb
loopne
clc
dec
enter
adc
and
cmp
cltd
dec
mov
test
imulb
and
mov
dec
lock
dec
push
ret
push
dec
inc
add
insl
jno
insb
and
push
inc
gs
pop
adc
in
push
gs
xchg
nop
ss
popf
xchg
inc
mov
das
push
popf
push
jbe
sbb
insl
jo
inc
test
mov
mov
inc
in
inc
out
loopne
adc
jae
dec
or
nop
pop
negl
sbb
jo
cmc
xchg
jo
jecxz
rclb
and
sub
xorl
add
pop
out
jp
mov
push
sub
arpl
popa
xor
push
stos
adc
jl
push
idivb
popf
or
pop
push
add
ret
fsubp
dec
sbb
xor
adc
and
popa
sbb
pop
loopne
push
lea
or
shl
jo
pop
inc
xor
es
xlat
add
or
je
lock
popf
xchg
pop
cmp
sub
sub
mov
push
in
cmp
ss
and
or
sub
fs
out
fmull
or
js
inc
or
pop
push
nop
xchg
xchg
xor
aas
inc
sar
sub
jp
jae
and
add
popa
loop
repnz
sbb
insb
mov
andl
mov
scas
and
inc
loope
inc
mov
fiaddl
inc
sbb
cmpl
lea
xor
sub
mov
inc
bound
fsubl
loope
orb
sub
jno
xchg
and
add
jge
ret
mov
sub
add
in
and
std
mov
aas
xor
test
nop
mov
xchg
mov
dec
bound
mov
push
push
or
rorb
xchg
jg
sbb
xchg
or
sub
movsl
movsb
mov
add
sahf
jnp
jae
aaa
ja
outsb
dec
lret
or
pop
xor
scas
cmc
xor
xor
xchg
xchg
inc
add
dec
cmp
jp
js
push
cmpb
pop
mov
xor
adc
fcoms
addr16
iret
subl
jae
sti
pusha
mov
setae
ret
sub
adc
sbb
stos
cmp
std
mov
inc
enter
cmp
mov
and
xor
js
test
cmp
pop
push
lock
sub
mov
fcoms
cwtl
push
add
ret
sbbb
je
pop
negl
mov
aam
add
insb
call
push
adc
subl
pushf
rclb
dec
pop
bound
in
pop
faddl
sar
lods
loopne
lock
mov
addr16
pushf
mov
into
adc
add
pop
mov
bound
push
push
sbb
inc
inc
or
fadd
jge
addr16
sbb
sbb
push
add
push
popa
or
repz
call
mov
cmp
enter
aas
pop
lcall
mov
mov
mov
out
fcomps
clc
pop
repnz
add
xchg
inc
or
or
or
movl
sub
imul
or
push
mov
sahf
jle
daa
push
call
pop
lock
fmull
or
vmread
or
outsb
lods
or
jecxz
test
push
test
pop
sub
je
cmpsb
and
xor
mov
sbb
leave
push
adc
stos
cmpsl
clc
mov
jmp
pop
push
jo
out
sub
enter
jns
rcl
fcomp
out
push
out
daa
in
push
or
sbb
mov
push
iret
pop
sbb
insl
movsb
mov
sub
ja
push
xor
loop
ds
aaa
pop
xchg
sahf
xor
or
ja
sbb
loopne
push
rcr
inc
jecxz
movsb
add
aaa
das
sbb
add
push
push
daa
sub
iret
xor
les
pop
mov
sbb
mov
inc
inc
xor
xchg
lods
subl
push
rorl
inc
mov
stc
add
inc
mov
cmpsb
sbb
ret
test
dec
mov
xchg
pop
or
inc
movsb
jnp
ret
shlb
xor
add
sti
loope
in
int
mov
and
inc
xchg
mov
adc
les
aaa
dec
add
lock
addb
aas
adc
add
iret
sbb
les
mov
cmp
xor
mov
add
adc
loope
call
jo
pusha
inc
ja
jecxz
lods
xchg
stos
jmp
and
inc
dec
pop
inc
and
sar
and
and
mov
mov
and
push
dec
pusha
sub
int3
add
xor
pop
sub
xchg
rolb
leave
xor
cmpsb
jecxz
pop
inc
daa
rorl
cmpsl
cmp
cmp
test
cmpb
inc
xor
and
cmp
jne
cld
orb
jle
sub
mov
mov
pop
adc
pop
pushf
or
push
xchg
test
aam
sbb
inc
pop
xlat
mov
xor
ret
adc
js
loope
add
push
scas
mov
mov
push
sub
inc
adc
adc
mov
faddl
dec
shll
jg
mov
nop
rolb
cld
mov
popf
outsb
pushw
xchg
push
dec
cli
pop
sbbl
and
sbb
fstpl
adc
imul
sbb
jo
add
push
popf
add
mov
or
sbb
pop
mov
push
xor
lcall
int3
test
mov
movsb
cmp
fdivrs
push
push
push
inc
and
fmuls
mov
movb
rclb
inc
aaa
add
mov
and
loope
mov
arpl
roll
nop
mul
notl
and
mov
lea
mov
xor
push
daa
push
xchg
addr16
push
fs
jnp
scas
adc
int3
adc
mov
jl
mov
or
je
data16
jnp
or
jae
add
cmp
mov
lcall
cmp
dec
xchg
mov
inc
xlat
test
ret
xchg
shll
daa
sti
push
rol
jge
inc
js
je
sti
rorl
lea
sbb
bound
fbld
fldt
sbb
push
push
femms
cwtl
sub
pop
push
mov
popf
or
adc
inc
mov
adc
or
pop
dec
jne
dec
mov
inc
jle
out
testl
mov
movsl
inc
push
orl
jle
cld
je
lds
rcl
xor
insb
push
into
mov
ret
rorl
push
jecxz
add
adc
xor
inc
push
pop
outsb
cmpsl
decb
cmp
mov
loop
or
lret
sbb
mov
or
xchg
test
mov
mov
movsb
mov
mov
inc
sub
cmp
aad
pusha
call
mov
aas
inc
sbb
sbb
je
test
pop
or
pop
daa
je
add
xchg
aas
jl
and
and
jl
push
and
jmp
jne
frstor
jp
jns
mov
xor
or
gs
test
aaa
mov
mov
call
mov
xor
pop
mov
vhsubps
jae
rorl
rorb
xchg
test
test
jne
and
add
jecxz
inc
addr16
icebp
test
or
dec
sbb
pushf
add
popf
ja
fs
mov
lods
adc
les
sbb
jmp
mov
xchg
mov
mov
cmpb
scas
mov
xchg
jg
sbb
or
je
adc
mov
sbb
pop
or
add
jge
push
js
pop
jne
cmp
mov
shlb
lock
adc
movl
shll
fsubl
or
pop
out
cwtl
cs
mov
or
dec
inc
addb
dec
es
add
rolb
lods
adc
xchg
stos
addb
add
push
add
sub
mov
and
les
addb
aaa
mov
scas
jo
je
xchg
popf
jbe
adc
pop
mov
in
pop
call
add
cmp
ret
out
cmpsb
or
aam
in
pusha
mov
inc
push
dec
mov
fsubrl
adc
xor
xchg
inc
fists
inc
aas
enter
push
iret
out
push
subb
sub
xchg
jg
push
jp
les
mov
pop
notb
mov
pop
or
movsl
subl
or
ljmp
mov
test
mov
xor
fidivrs
push
aas
and
xor
and
inc
xor
or
sbb
mov
push
mov
inc
inc
xchg
cmp
and
push
mov
push
add
push
dec
popf
dec
sbb
addl
or
mov
test
xchg
decb
jl
cmp
push
push
xor
jge
cmp
or
icebp
movl
mov
lea
int
test
jne
dec
adc
push
sbb
pop
int
xor
mov
lahf
ljmp
data16
add
jbe
pop
push
test
scas
in
mov
sub
icebp
or
xor
push
les
add
jmp
add
shrl
ret
clc
pop
call
pop
sbb
hlt
outsl
jne
xor
imul
aaa
out
mov
push
iret
clc
xor
sbb
out
fcomps
push
je
inc
loop
hlt
jecxz
aad
push
or
push
pop
out
push
mov
orl
sbb
cmp
daa
scas
cltd
pop
xchg
cmp
pop
mov
push
cs
or
test
pop
add
xor
fs
icebp
or
shrb
stos
cmpsb
ret
xchg
pusha
cmp
rclb
cmpb
and
adc
jg
or
lds
mov
pop
mov
push
or
inc
cmp
xchg
test
xchg
jnp
cmp
xor
popf
jecxz
test
cmp
pop
adc
jle
movsl
mov
xor
mov
bound
rorl
pop
lock
test
jnp
xor
hlt
pop
lea
ss
inc
lea
fwait
dec
xor
xchg
xor
pusha
lds
out
sub
push
cmp
test
sbb
enter
pop
sbb
push
mov
cmp
pop
sbb
add
pop
mov
jge
cmp
jl
or
dec
adc
push
xor
ret
inc
mov
mov
shrl
lods
adc
dec
mov
ret
jae
jo
js
sbb
jo
pop
shr
rolb
adc
push
aaa
and
movsb
incb
aaa
push
cmpsl
fcoms
imul
add
xor
fimuls
jno
gs
xchg
rol
mov
add
pop
loope
add
ja
sbbb
push
xor
push
popf
pop
aam
dec
push
pop
add
cs
mov
pop
dec
test
sbb
dec
sarl
cltd
cmp
les
mov
movsb
scas
xor
pop
aaa
mov
nop
xor
add
inc
addb
jnp
loop
or
mov
push
adc
mov
cmp
pop
or
shrb
dec
in
cmp
lea
repz
push
inc
pop
loop
push
pop
fdivs
cmp
adc
nop
xchg
cltd
xchg
push
fiaddl
imul
inc
loopne
jno
pop
inc
push
inc
pop
inc
adc
andb
test
push
inc
push
pop
xlat
rorb
push
mov
nop
or
pop
cmp
or
rol
jbe
mov
cs
adc
sbb
xchg
rcll
adc
push
scas
xchg
mov
in
insb
ja
adcl
pop
out
jecxz
pop
loope
and
xchg
xor
repz
jg
test
jecxz
loop
sbb
adc
in
jl
je
mov
int3
testl
fnstenv
sbb
push
andl
mov
pop
call
mov
sub
jecxz
stos
lods
mov
sub
sbb
call
leave
pop
xchg
jae
or
stc
mov
dec
nop
ja
mov
push
scas
test
push
xorb
fsubs
aas
jne
mov
aas
cmp
push
nop
add
inc
or
dec
mov
inc
mov
cmc
push
inc
inc
mov
arpl
daa
jmp
sub
mov
pop
push
push
push
and
insl
orl
loope
addb
inc
pusha
stos
xor
and
sbb
test
pusha
shll
arpl
adcb
cmp
cmp
test
pop
sub
sbb
adc
scas
test
sbb
pop
je
mov
lcall
data16
adc
into
orb
jg
sbb
xchg
adc
outsl
sbb
mov
shlb
aas
mov
movsb
or
imul
inc
bound
dec
inc
rcrb
sub
sub
insl
mov
add
push
mov
test
ljmp
xor
dec
jb
rcrb
rcll
pop
adc
in
aaa
pop
adc
or
add
adc
ret
dec
add
shlb
sbb
out
scas
movl
les
cwtl
xchg
in
ret
mov
adc
xchg
add
and
mov
cmp
pop
dec
cmpl
hlt
mov
dec
clc
es
push
les
xchg
or
in
mov
sbb
adc
add
jl
call
jb
adc
pop
add
lahf
rorb
sbb
xchg
xchg
addl
cmp
sbb
adc
jle
mov
cmp
inc
ret
xor
clc
in
addl
scas
rclb
jne
push
mov
xchg
ds
dec
lods
xor
adc
cltd
cmpsl
test
push
pop
cwtl
lock
andb
in
push
int3
sahf
mov
pop
hlt
xor
push
mov
jge
lock
sub
ret
in
sub
in
imul
sbb
rorb
dec
rorl
push
pop
dec
xor
jno
sub
sbbb
add
jb
xor
push
mov
stc
dec
cmp
movsl
inc
dec
xor
scas
xlat
loopne
pop
in
scas
adc
xor
and
push
jno
in
adcl
rol
mov
dec
in
mov
push
inc
cmp
push
dec
inc
push
loopne
shl
sbb
cmp
xchg
push
xor
pop
lcall
iret
cltd
xchg
sub
xchg
cwtl
pop
loop
aam
icebp
push
lock
jmp
cli
rcll
popf
mov
daa
xchg
nop
sub
fisttpll
sbb
adcb
add
cmp
mov
or
or
lret
outsb
fwait
adc
fisubrs
push
test
adc
sub
out
imul
lea
test
and
add
dec
cmp
mov
mov
or
xchg
lock
add
cs
cmp
movsb
ret
jbe
xchg
xor
push
fwait
inc
adcb
fwait
jecxz
stos
sbb
fwait
stos
cld
imul
lret
xchg
mov
imul
leave
int
sub
or
inc
sub
pop
push
stos
mov
and
cmovl
pop
mov
and
repz
add
gs
cmc
and
xor
test
mov
jne
cmpsb
dec
pusha
loopne
add
call
inc
outsb
cmp
add
cmp
cmovno
mov
inc
loop
dec
popf
mov
andb
push
push
ret
fcmovnb
gs
dec
in
xor
adc
popf
daa
add
sbb
testl
sub
adc
cmp
dec
test
jg
xor
pop
mov
test
add
add
and
sub
sub
push
dec
les
or
repnz
ret
push
add
call
mov
cli
dec
pop
cmpb
movb
mov
incl
jno
sbb
dec
cmpsl
add
and
addb
cmp
sbb
inc
jo
xchg
inc
fists
icebp
add
pop
mov
outsb
into
and
movsb
or
imul
cs
aaa
jo
ret
mov
inc
pop
or
or
popa
jb
add
popa
dec
mov
or
jg
inc
cmp
mov
push
test
xchg
inc
or
pop
push
bound
insb
jge
pop
xchg
ret
mov
aaa
add
popa
ljmp
test
mov
inc
rorl
int
mov
out
push
mov
push
inc
fs
xchg
stos
fldcw
push
out
or
mov
int
icebp
or
out
adc
addl
adc
and
add
ljmp
mov
mov
dec
lea
in
inc
insb
and
dec
out
sub
pop
or
movsb
insb
pushf
sbb
add
subl
add
push
mov
dec
ficomps
mov
or
aaa
or
inc
outsl
inc
scas
pop
and
inc
insb
mov
push
mov
push
lock
mov
idivl
std
prefetcht1
mov
mov
mov
mov
mov
int3
mov
mov
or
sub
dec
sub
pmullw
lock
jnp
scas
cmp
jle
push
aad
lods
mov
fstpt
mov
pop
or
mov
sbb
pop
rorl
out
outsb
push
cmp
inc
aas
xor
shll
pop
aas
jbe
mov
jl
ja
data16
xlat
push
dec
fadds
inc
stos
dec
aad
cmpsl
pop
sbb
in
sbb
push
xor
lret
or
push
jb
cmp
fdivs
imul
cmp
or
enter
xchg
cmp
add
or
imul
bnd
jae
cmp
jmp
push
nop
pop
sub
fs
js
cld
jmp
mov
clc
xchg
mov
push
scas
dec
cwtl
inc
dec
add
mov
ds
rcr
mov
xor
or
jl
inc
mov
cmp
inc
sub
daa
dec
lods
inc
mov
cmp
pop
pop
mov
inc
lods
loopne
cmp
gs
add
mov
cmp
or
pop
in
mov
add
push
or
jns
add
sub
xchg
orb
mull
push
dec
dec
push
mov
pop
inc
lea
push
jmp
sbb
dec
mov
psllq
inc
jae
pusha
cmp
lds
xor
popa
cmp
iret
out
popa
mov
jp
inc
push
inc
addb
mov
js
sbbb
cwtl
add
lea
inc
int3
mov
jae
push
imul
add
sub
pop
rcrb
movsl
and
sbb
cwtl
mov
fldl
adc
push
mov
out
cwtl
cwtl
rclb
out
mov
and
mov
mov
mov
test
daa
jp
imul
sbbb
jbe
shll
inc
mov
pop
mov
repnz
repz
lock
sbb
loopne
cld
repnz
cmp
xlat
in
call
les
push
aam
pop
subl
or
scas
push
jl
add
push
pop
nop
shlb
xor
ffreep
das
sbb
push
or
fists
cmpsl
xor
xor
aaa
enter
lock
push
out
clc
fdivrp
mov
insb
mov
rolb
add
inc
jl
or
stos
movsb
mov
pop
or
or
dec
rcl
add
ja
adcb
add
add
push
mov
and
inc
sub
out
inc
bound
aad
jge
xlat
mov
xrelease
push
jnp
push
repnz
or
inc
inc
cmp
mov
test
wbinvd
hlt
mov
shlb
dec
pushf
in
or
sub
push
stos
out
andps
or
insl
cmpb
sbb
popa
and
rolb
push
inc
inc
adc
and
jg
push
push
cs
jmp
insb
lahf
or
xor
je
imul
sbb
pop
inc
out
call
sbb
mov
cmp
pop
and
sub
push
sbb
jo
jnp
frstor
sub
sbb
int
mov
mov
in
or
inc
push
shll
mov
pop
xor
test
mov
fisttpll
mov
addl
nop
pop
pop
and
fsts
or
js
pusha
daa
mov
and
lea
daa
or
orl
push
and
xchg
and
pop
cmp
fbld
inc
mov
bound
js
test
imul
mov
dec
scas
xchg
and
or
loopne
push
mov
inc
push
imul
sbb
test
jo
dec
rol
pop
paddsb
out
lods
out
movsb
ds
and
xchg
icebp
jne
iret
sbb
inc
out
pop
in
xchg
xchg
nop
cld
xlat
or
push
mov
or
cmc
iret
clc
push
test
and
xor
xor
xor
inc
mov
inc
dec
dec
dec
dec
dec
dec
dec
dec
xor
scas
push
or
push
push
push
pop
pop
pop
sarb
pusha
mov
rcl
push
xchg
inc
push
inc
xor
test
fs
xchg
mov
push
dec
shlb
je
imul
mov
adc
scas
add
or
shlb
adc
inc
std
jbe
mov
and
add
add
out
mov
jns
or
add
and
xor
mov
mov
cltd
loopne
sub
jmp
pop
push
pop
shrb
pop
xor
jge
dec
cs
pop
incb
clc
sub
clc
add
je
push
cmp
sti
xchg
lahf
xchg
push
inc
jge
shll
xchg
pop
adc
lahf
mov
sarb
stos
xorl
es
mov
jmp
in
and
add
addl
xor
ja
gs
loope
add
es
sbb
xor
jmp
inc
inc
inc
movsb
pop
mov
call
sbb
sti
dec
pop
jg
xchg
or
lock
xchg
xor
dec
aas
adc
sub
repnz
testb
inc
orb
mov
in
sbb
mov
lock
dec
sbb
add
push
testl
repz
rcll
fisttps
pop
adc
lods
or
ss
push
addr16
outsb
lock
lret
adc
imul
sub
addr16
testb
pop
add
jmp
jmp
xor
push
xchg
out
inc
jmp
popa
add
mov
cmp
jmp
lahf
sub
sub
movsl
sahf
sub
mov
xchg
adc
xchg
or
jmp
inc
sti
push
add
and
mov
push
rcll
and
fistpll
jmp
sub
sbb
ret
test
fdivs
imul
cld
and
lods
stos
nop
mov
nop
not
aam
push
mov
push
cmp
ja
sbb
mov
jle
pushl
jmp
add
pop
incl
popa
jg
pop
fisttpll
popa
cmpb
jg
mov
cwtl
sub
popa
insb
adc
loope
pop
fcmovnbe
pop
add
jp
insl
clc
icebp
xchg
hlt
xchg
sbbb
ret
mov
cmp
add
or
jmp
adc
push
mov
pop
arpl
xor
scas
lods
in
push
in
outsl
sub
pop
dec
pop
xor
adc
lock
outsb
aas
sub
xor
jmp
ss
mov
adc
icebp
hlt
xor
add
pop
leave
pop
nop
pushl
icebp
mov
jmp
in
xlat
adc
in
popa
jl
xchg
adc
nop
jo
popf
hlt
dec
adc
ja
sub
movsb
mov
daa
pop
lea
jo
andb
loop,pn
dec
push
sbb
dec
jno
sbb
sub
jp,pt
arpl
outsb
leave
jl
dec
filds
outsl
or
out
inc
sub
inc
imul
stos
pop
cmpsl
sbb
push
add
lods
insb
xchg
and
add
xlat
push
nop
jbe
or
mov
pusha
idivb
add
xor
add
dec
sbb
insb
movzbl
cmp
fistpll
gs
inc
inc
inc
int3
inc
imul
or
dec
lea
push
inc
cmp
movsl
add
mov
mov
js
inc
sub
nop
jl
push
add
call
or
or
mov
adc
xor
push
inc
jo
add
iret
or
insb
xchg
aas
cmp
inc
imul
xchg
sbb
aas
inc
enter
sub
dec
das
cmp
dec
xor
mov
inc
neg
jl
add
cmp
add
aas
andb
xor
or
mov
loopne
push
popa
xchg
push
jmp
mov
mov
push
add
pop
pop
lret
sbb
jmp
or
adc
mov
mov
jle
and
cmp
sub
mov
cmp
js
imul
cmpsl
add
gs
add
or
sbb
and
imul
clc
pushf
xchg
rcrb
mov
jnp
or
jl
push
xor
pop
imul
lods
aam
inc
fucomi
dec
pop
pusha
push
xor
push
pushf
sub
jp
mov
inc
or
push
cmp
push
add
sub
mov
dec
sarb
addb
mov
push
out
movl
aas
jno
lcall
adc
ret
pop
xchg
mov
adc
cmp
dec
add
xchg
shlb
dec
cld
and
addl
cs
pop
inc
pop
mov
cs
mov
leave
mov
or
out
pop
push
scas
je
adc
cmpsl
mov
insb
ljmp
cmp
sbb
out
mov
roll
push
imul
fcmovnu
jecxz
loope
and
push
or
pop
add
push
stos
add
add
sub
push
lock
or
adc
dec
mov
xchg
lock
fldt
aam
pop
mov
mov
adc
add
pop
outsl
inc
mov
jno
sbbb
subl
inc
pop
cmp
sub
adc
sti
xchg
and
js
les
pop
or
xor
cltd
je
mov
roll
call
cmp
adc
test
test
xchg
jmp
sarl
mov
and
and
mov
sub
xor
mov
and
inc
loope
lods
testb
insb
mov
and
ret
aas
orb
mov
sbb
mov
mov
jecxz
lgs
jnp
pop
jecxz
push
adc
pop
push
je
shl
pop
jp
dec
call
test
adc
je
je
xor
fwait
lcall
shr
lcall
fdivrs
or
es
inc
in
sbb
sbb
test
xor
pop
adc
mov
push
push
mov
jo
and
pop
call
shll
xor
pop
in
inc
stos
mov
ljmp
adc
mov
cmp
sarb
pushf
aad
cmp
jae
mov
pusha
mov
popf
jl
xor
sbb
mov
add
femms
xor
or
mov
mov
rorl
ss
or
mov
push
or
add
out
jl
inc
sub
push
push
ret
sti
pop
mov
push
pop
ljmp
adc
or
jg
mov
pusha
outsl
imul
mov
and
rol
cs
loope
test
jp
sahf
jecxz
or
jmp
adc
add
xchg
pop
loopne
in
sub
and
add
sub
and
lods
icebp
movl
imul
jne
vmread
push
lret
sti
rcrb
fisubrs
sbb
call
sub
lock
adc
movsb
push
mov
ja
out
je
adc
scas
xor
insb
jl
aad
jle
scas
mov
mov
mov
je
sbb
or
cmp
dec
xchg
ds
mov
dec
bound
inc
or
push
out
mov
inc
shll
addb
adc
cmp
subl
mov
xorl
pushf
adc
imul
cmp
add
les
aaa
and
je
mov
and
xchg
es
popl
notb
mov
xchg
ret
nop
mov
sub
xchg
fs
and
enter
mov
adc
stos
push
push
clc
jnp
adc
dec
cltd
inc
mov
fdivrs
fisubrl
adc
or
and
lret
and
popa
push
sbb
mov
xlat
or
inc
cmp
push
icebp
hlt
lods
xchg
add
rolb
inc
iret
flds
mov
rorb
sub
es
scas
sbb
jp
inc
iret
xchg
pop
das
loopne
in
inc
mov
sbb
hlt
insb
mov
enter
enter
and
shlb
cs
js
push
cmp
mov
cmp
inc
cltd
pop
inc
mov
push
cltd
mov
adc
and
imul
push
sbb
jo
cmp
dec
jl
pop
push
test
test
push
xchg
mov
xor
ss
cmpl
mov
add
addl
add
mov
sub
xor
jmp
push
add
dec
inc
pop
or
popa
push
cmp
push
in
mov
call
or
push
fsubrs
add
mov
mov
adc
stos
jno
invd
orl
icebp
xchg
lock
orl
dec
inc
push
mov
lock
inc
cwtl
pop
push
leave
inc
jno
imul
arpl
mov
pop
push
push
inc
adc
fildll
lock
xlat
subb
dec
hlt
sub
dec
adc
and
pop
mov
or
clc
xor
adc
push
stos
xor
test
adc
and
or
imul
adc
add
repnz
inc
push
push
sub
pop
lock
xchg
mov
roll
pop
icebp
add
repz
es
movsl
xor
sbbl
xor
shlb
lea
movsb
adc
push
add
dec
cmc
sub
fadd
push
lock
dec
cmp
shlb
sub
cmp
sbb
mov
iret
inc
repnz
pop
pop
iret
hlt
xor
hlt
fwait
sbb
sub
xchg
lds
movsb
je
push
xor
imul
clc
or
pop
jns
or
xor
sbb
addb
xor
leave
lock
rorl
test
or
iret
adc
ds
pop
fildll
int3
add
add
mov
popa
cs
and
dec
mov
shl
shl
sub
sbb
ja
xor
outsb
and
fistps
scas
or
loopne
and
fwait
sbb
add
jne
clc
ret
into
dec
mov
aaa
test
jl
pop
ss
data16
jg
push
inc
je
or
sbb
shlb
sti
pushf
fwait
decl
jg
push
sbb
add
or
sbb
push
pop
loopne
cmpsb
xor
fneni(8087
mov
push
mov
addb
addl
fistps
or
xlat
out
jae
mov
lods
fs
adc
inc
test
in
adc
jo
pop
sub
add
add
sbb
add
sbb
pop
cmp
or
pop
pop
pusha
outsw
inc
loope
pop
push
xor
subl
mov
push
and
sbb
jp
xor
aad
arpl
mov
nop
ret
mov
iret
dec
or
stos
cmp
or
mov
addr16
rorl
push
push
sub
repnz
clc
leave
push
and
jno
mov
lods
clc
sub
jo
inc
movsb
sbb
add
repnz
lock
clc
in
repnz
and
dec
mov
ret
into
mov
daa
imull
rclb
pop
cmc
adc
test
pop
clc
enter
push
pop
sbb
pop
jo
lock
bound
add
add
and
xchg
pusha
test
movsb
or
and
dec
push
adcb
pop
push
shlb
nop
in
inc
pushf
fwait
cmp
and
xor
pop
add
or
cmpsb
nop
ret
or
adc
sub
sub
add
mov
add
add
adc
ret
pop
and
not
lds
pop
stos
xlat
daa
insb
mov
xor
cmp
lds
mov
mov
mov
adc
adc
js
fisubrs
pop
insb
push
sbb
lcall
lcall
sbb
mov
mov
fsubrs
js
pop
push
push
je
ret
or
cmp
insl
xchg
or
scas
adc
jnp
pop
adc
and
inc
sub
xchg
mov
addb
cmpw
repz
pop
jl
or
mov
mov
movsl
pop
dec
inc
ret
cmpb
lods
dec
je
cwtl
movl
pop
mov
fwait
xlat
sbb
xchg
sarb
mov
mov
rolb
xor
cmp
test
mov
push
sbb
imul
or
xorb
or
aam
adc
hlt
mov
les
mov
xor
adcl
rol
inc
gs
push
mov
call
and
pop
test
push
and
imul
sbb
insl
mov
rcrb
aaa
dec
into
es
ljmp
push
xchg
sub
push
or
stc
insb
mov
ds
mov
jae
data16
or
xchg
test
dec
or
ss
or
inc
and
test
movd
add
in
mov
je
sbb
cmp
es
pop
fdivl
xor
push
jnp
das
or
xor
ds
cmp
jae
sub
push
xchg
loopne
nop
roll
jne
sbb
jnp
addb
mov
test
icebp
push
push
add
cmpsb
xchg
xchg
outsb
dec
xchg
test
fsubrl
pushf
ret
inc
inc
or
xchg
testb
mov
dec
das
testb
ret
outsl
xor
adc
divl
xor
dec
lahf
and
pop
or
cmp
add
mov
dec
jb
push
adc
dec
mov
mov
cmp
push
pop
lods
and
loop
pop
adc
notb
pop
je
sbb
lea
add
jne
pop
xchg
add
les
enter
fsubl
adc
xchg
push
mov
and
stos
pop
inc
mov
je
cmp
and
add
inc
pop
sbb
rcll
insb
rclb
test
addb
push
insb
mov
daa
out
dec
cvtps2pd
aas
je
jb
popa
lret
adc
lret
ja
mov
push
imul
mov
pushf
lret
xor
push
fbstp
out
or
mov
add
pop
jg
fadds
mov
mov
outsb
fidivrs
ds
inc
mov
adc
adc
pop
sbb
rcll
mov
aaa
scas
mov
or
mov
std
inc
pop
inc
call
mov
aaa
je
roll
add
or
pop
mov
pop
outsl
pop
nop
adcb
sub
nop
xor
sbb
or
xchg
or
pop
inc
ret
clc
pop
cmp
cmp
fwait
cmp
cmp
inc
mov
lret
aaa
cs
sub
adc
pop
movb
insb
mov
fimuls
sub
es
sub
mov
fnstenv
je
adc
fs
mov
jl
loopne
push
cs
mov
jbe
inc
ljmp
jbe
and
and
dec
dec
jl
lods
aas
in
data16
mov
sahf
push
popa
and
mov
stos
pop
push
or
loopne
mov
sbb
adc
push
push
sbb
push
jg
jmp
sbb
xor
in
int3
mov
or
out
mov
cmp
jmp
clc
cmp
sahf
gs
daa
test
or
jecxz
adc
sbb
and
es
in
jne
xor
or
push
and
mov
and
add
sbb
push
dec
scas
add
jmp
mov
inc
inc
popf
push
arpl
mov
sarb
clc
mov
jno
cmp
add
hlt
mov
lods
popa
ss
adc
mov
jns
mov
ret
loop
inc
movb
movsl
mov
push
in
mov
inc
adc
lock
push
xchg
jmp
jge
xchg
ja
fcoms
adc
cwtl
jnp
sti
popl
dec
and
push
add
pusha
push
jno
call
push
out
cmovl
jmp
or
orl
xchg
mov
inc
jp
mov
xchg
xchg
addr16
inc
inc
pushf
fiadds
sbb
js
and
inc
dec
push
or
orps
adc
pop
fdivs
mov
inc
lods
out
scas
lock
mov
or
jo
xor
iret
int
xchg
les
pop
and
enter
adc
adc
cmp
sbb
cmp
ss
lcall
mov
ror
cmp
je
mov
cmp
push
sub
lret
imul
push
and
sti
mov
and
xchg
push
push
dec
jb
insl
cmp
jle
lock
jo
xor
pop
daa
cmp
enter
push
ja
fisttpll
push
loopne
inc
push
pop
pop
push
dec
mov
pop
outsl
add
lods
adc
adc
aas
movsl
insb
mov
inc
inc
xchg
jne
cmp
cs
push
dec
mov
fimull
data16
mov
add
and
sub
mov
add
aad
push
dec
sub
lea
clc
mov
push
xor
and
xor
mov
and
orb
jg
orb
aas
pop
orb
aas
sub
inc
inc
mov
and
pushl
xchg
adc
mov
popa
addr16
pop
push
inc
pusha
push
cwtl
and
and
ds
dec
push
je
mov
bound
jno
das
xor
or
dec
ljmp
rcrl
ret
mov
push
xor
jg
inc
cmpl
sbb
jecxz
mov
lahf
rolb
inc
sbbb
xchg
push
push
sbb
jb
sbb
mov
inc
jge
mov
lods
insb
scas
mov
pusha
es
adc
aas
cmp
rorb
add
pop
mov
push
xor
cmp
in
es
sub
xor
and
xlat
cmp
pushf
xor
fmull
adc
call
add
nop
xor
in
jbe
std
push
push
jecxz
sub
sahf
fidivrs
cmp
adc
mov
adc
add
and
adc
loope
push
into
jne
insb
lahf
gs
add
mov
add
sbb
inc
fiaddl
enter
push
mov
lods
lock
shll
in
or
cld
push
dec
mov
aaa
pushl
dec
or
push
jns
add
lcall
or
es
decl
add
sbb
flds
sub
mov
pop
sub
add
rcl
adc
cld
sub
jp
mov
js
jecxz
bound
les
or
pop
xchg
les
sbb
sbb
fsts
mov
cmp
movsl
loope
xor
insl
movsl
mov
pop
scas
movsb
bound
mov
fcomip
sbb
in
loopne
test
cmpsb
jbe
inc
add
enter
leave
pop
mov
or
and
and
loopne
out
bound
mov
xchg
add
sbb
mov
adc
jnp
arpl
pusha
add
dec
push
pop
jo
dec
loop
xor
loopne
fs
ljmp
std
je
push
sbb
sub
dec
repz
mov
test
out
icebp
aam
push
pop
mov
xor
mov
add
lea
movsl
adc
mov
xchg
pop
jne
xor
fidivrs
imul
jno
xor
push
xor
xor
cmpsb
dec
xchg
adc
adc
add
js
push
sub
jle
rorl
mov
jns
mov
or
dec
sti
sbb
cmp
jmp
push
mov
or
and
xlat
xor
mov
sub
fistpl
jo
xchg
rcrb
jmp
shll
adc
aad
mov
rcrl
pop
or
or
out
insl
xchg
xor
fsub
adc
cmpsl
adc
push
sbb
jo
iret
or
test
add
xchg
out
leave
mov
sbb
mov
nop
call
pop
sbb
shll
addr16
add
xchg
jne
lea
aas
and
adc
xchg
sbb
or
inc
push
imul
push
inc
pop
out
or
lcall
adcl
sbb
and
sub
sbb
sbb
cwtl
sub
mov
adc
call
js
mov
movsl
das
add
cmp
jne
cmp
jle
pop
fcoms
call
loop
aas
lea
or
cli
sbb
and
rclb
lcall
scas
hlt
or
sti
jl
inc
test
mov
sbb
insl
dec
add
addr16
shlb
mov
dec
add
dec
ret
add
negb
sbbl
push
cmpsb
mov
cmpb
movb
xchg
add
pop
jne
dec
mov
fadd
pop
and
cwtl
add
xchg
or
and
dec
inc
jne
mov
idivb
mov
push
test
inc
nop
pop
cmpl
pop
sbb
pushf
call
mov
add
rcrb
dec
add
mov
add
filds
aam
sbbl
pop
mov
xchg
cmp
mov
inc
cmp
dec
shl
rcrl
push
and
shll
mov
xor
inc
cmp
out
push
jecxz
add
inc
sbb
push
roll
inc
xor
sbb
dec
lock
and
pop
inc
stc
daa
pop
mov
mov
add
push
mov
push
xchg
cmp
ret
cmpsl
or
lcall
ret
loop
lcall
add
and
sub
call
xchg
add
shll
sub
and
adc
ss
fstpt
jmp
hlt
iret
or
sub
inc
lock
pop
add
jo
mov
ljmp
mov
ret
sub
daa
add
mov
push
mov
call
out
out
movsb
jmp
aam
test
pop
aad
fcmovnbe
jmp
cmp
add
insl
int3
push
call
int3
js
mov
mov
dec
mov
sbb
rolb
xchg
out
add
xchg
sub
sti
dec
jge
test
addr16
shll
fdivrs
sbb
xchg
and
sbb
inc
into
aas
add
or
or
or
or
cmp
cmp
lahf
repnz
adcl
jno
sub
add
inc
popa
xor
loopne
push
or
sbb
das
ret
and
mov
aad
dec
dec
rclb
push
wrmsr
dec
dec
add
test
add
mov
movsb
mov
repnz
popa
jno
sub
movsb
hlt
pushf
mov
jl
sbb
mov
xchg
push
add
insl
jl
sbb
adc
xor
je
cli
outsl
insb
lock
push
cli
in
fisubrs
loop
mov
lods
mov
add
faddp
xor
je
mov
push
cmp
add
andb
add
mov
jp
xchg
ret
movsl
out
leave
cwtl
rcrl
xchg
pop
inc
sub
mov
dec
add
push
pop
mov
sub
mov
sub
xchg
jae
sbb
push
pop
enter
mov
cli
data16
cli
add
iret
mov
push
jge
bound
and
and
xor
je
subb
inc
rcr
and
sub
mov
mov
mov
loope
jae
push
cmp
test
mov
cmp
push
scas
inc
addr16
and
lea
ret
je
push
fxch
and
lcall
inc
xor
filds
mov
pop
adc
sub
dec
push
mov
ja
movsb
mov
sub
mov
mov
outsb
pop
inc
add
and
movsb
rcrb
inc
cmp
je
xor
sub
loopne
xor
xor
lahf
rol
mov
loop
mov
cmp
add
repz
daa
das
loopne
imulb
sbb
add
cli
mov
sbb
add
sti
xor
mov
sub
xor
push
and
cwtl
xorb
mov
out
mov
mov
jb
push
stos
dec
cld
add
sbb
movb
pop
jns
cmpsl
or
dec
dec
cmp
and
inc
call
inc
cmp
and
dec
rcll
subb
movsl
shr
sbb
sbb
test
test
jle
lret
adc
imul
loopne
pop
cmp
and
cltd
pop
mov
xchg
jl
pop
inc
add
add
xor
push
or
iret
lea
inc
cmpsl
jno
adcb
addr16
je
add
xor
das
sbb
ljmp
xchg
add
mov
inc
daa
xchg
icebp
insl
jbe
out
and
pop
add
rorb
int
cwtl
fsubrl
mov
bound
shl
ja
sub
rcl
or
addb
lods
cmpb
cli
add
test
xlat
push
sahf
out
or
jno
adc
add
mov
mov
inc
cs
mov
xor
int
repz
cmp
or
inc
test
test
adc
pop
or
cmp
cmp
lahf
pop
nop
das
jb
in
dec
inc
dec
inc
xor
das
push
cmp
push
jp
or
or
jb
cwtl
divl
dec
incb
ret
sbb
mov
or
jmp
in
add
xor
pushf
adc
push
punpcklwd
and
js
inc
xor
es
test
pop
inc
pusha
pop
negl
push
or
jmp
in
testb
push
fsubr
sub
and
push
leave
imul
pop
add
xor
inc
sbb
pop
test
addb
mov
push
mov
or
dec
outsl
and
pop
call
add
inc
xor
mov
and
mov
jecxz
cld
hlt
fldl
push
aam
add
call
adc
aam
or
or
inc
in
fimuls
fsts
dec
clc
lock
ja,pn
std
mov
xor
insl
push
aas
insb
clc
push
mov
or
mov
roll
ret
mov
aaa
les
and
sbb
lods
add
out
mov
adc
or
push
movsb
pop
sbbb
jl
adc
nop
call
jne
decw
nop
or
mov
jno
xchg
lret
sbb
or
andb
mov
rolb
sub
scas
or
xchg
sbb
adc
or
jo
in
push
in
and
pop
pop
fstpl
daa
sbbb
aaa
hlt
cmp
leave
push
or
jo
clc
pushf
or
mov
dec
orl
cmp
xchg
sbb
push
popl
dec
or
cmp
sub
pop
jb
and
pop
add
mov
aas
cmp
roll
aas
jmp
movb
fcomip
addr16
jbe
cmp
inc
adc
sbb
add
or
push
and
push
add
cmp
push
dec
insb
pusha
test
push
das
xor
clc
aas
in
push
cmp
pushf
inc
aam
cli
mov
mov
xor
cmp
adc
or
aam
push
pop
arpl
inc
mov
sbb
adc
or
mov
lret
add
rolb
sub
in
shlb
in
arpl
lods
lock
xor
sub
mov
loop
daa
std
and
pop
stos
sub
nop
ss
pusha
dec
push
or
dec
arpl
cmp
jno
aaa
push
movsb
setno
ret
or
pop
daa
dec
idiv
inc
bound
adc
test
dec
incb
cmp
push
fisttps
test
sub
test
insb
dec
or
std
ljmp
cmp
out
pop
sub
notb
je
sub
je
inc
pop
add
sub
test
inc
xchg
es
sub
xchg
push
mov
mov
je
cmp
and
lret
inc
pop
imul
inc
push
daa
out
mov
test
add
jl
call
jne
jne
jge
movzwl
xchg
in
adc
and
rcrl
dec
roll
loop,pn
mov
and
jns
fcmovne
hlt
pop
aam
mov
and
test
adcl
xor
xlat
and
out
pop
cli
adc
xor
sbb
cmp
jae
arpl
sub
xchg
pop
inc
push
inc
xor
xor
jbe
call
fmull
mov
out
int
stos
std
mov
push
dec
jecxz
push
sub
mov
mov
testb
or
ds
enter
add
pop
ss
ret
xor
or
fsubl
dec
pop
jg
push
fsubrl
jno
loopne
mov
je
sbb
jecxz
jle
imul
pop
rorb
pop
call
ljmp
mov
sub
ljmp
lea
test
sbb
loope
arpl
pushf
pop
mov
out
adc
aaa
mov
adc
je
add
cli
adc
in
inc
nop
or
pushf
in
pusha
push
dec
jg
and
inc
mov
or
adc
ficoml
xchg
inc
push
xchg
fsubs
leave
mov
xchg
cmpsb
push
lret
sti
call
test
push
dec
mov
ss
mov
dec
outsl
les
push
add
add
je
adc
in
push
jmp
push
jecxz
fsub
sbb
inc
lret
lods
dec
or
push
movsl
pop
rol
iret
xchg
push
push
xchg
mov
sub
mov
inc
adc
mov
pop
xor
sub
cld
mov
pop
sub
in
movl
cmp
cli
mov
mov
cmp
mov
inc
inc
cmc
push
mov
pushf
mov
cwtl
pusha
loope
pop
lahf
push
xchg
test
andb
sbb
sbb
loopne
jb
push
je
xchg
or
ja
push
mov
dec
push
push
into
mov
aaa
pushl
jo
mov
ficompl
cmp
std
jmp
jge
xor
roll
xchg
jns
mov
sub
xchg
or
cmp
pop
or
xor
jo
mov
jp
xchg
mov
pop
pop
adc
pop
ret
filds
or
pop
std
out
xchg
pop
jo
jnp
inc
xor
xor
out
in
andb
ficompl
mov
ja
fistpll
mov
mov
inc
cwtl
sub
mov
inc
loope
in
pop
imul
xor
js
data16
mov
clc
pop
orl
pop
jno
jle
adc
pop
out
or
and
sub
sbb
cmp
xchg
xchg
pop
loopne
cmpsl
add
jmp
sub
mov
dec
xor
dec
pop
popf
xor
imul
add
inc
lds
or
dec
loopne
xor
ds
out
and
push
sbb
jmp
jge
mov
je
add
insb
inc
push
adc
aaa
pop
xor
sbb
push
inc
mov
dec
dec
fs
mov
out
xchg
jmp
mov
add
push
inc
jmp
cmp
jne
sbb
ss
jle
dec
test
loope
lock
sbb
sbb
dec
lock
jne
lahf
mov
xchg
jmp
sbb
cs
inc
sub
mov
jb
and
movb
pop
pop
push
cmp
stos
cmp
ss
adc
xor
and
lock
and
mov
lds
inc
js
ret
pop
icebp
and
sub
mov
mov
sbb
and
pop
pusha
int
dec
sbb
push
push
push
mov
scas
cmp
jb
outsb
add
mov
add
inc
mov
iret
clc
cmp
hlt
push
lods
push
lock
mov
in
push
js
iret
jnp
mov
ds
test
xor
repz
out
fdivl
inc
aam
jnp
repz
ror
inc
dec
enter
cmp
push
les
xor
jecxz
add
jge
cmp
in
cli
mov
cwtl
mov
daa
inc
enter
popa
shrb
pop
cmp
xlat
mov
cmp
xchg
add
and
in
movsb
mov
adc
xor
push
popf
xor
aas
and
shrl
daa
mov
stos
add
xor
int3
xor
or
inc
daa
dec
outsb
arpl
mov
lahf
or
push
add
dec
arpl
sbb
aam
cmp
test
addr16
testb
ss
adc
add
push
popw
cltd
inc
add
dec
add
iret
lds
cwtl
pop
orb
inc
insb
out
sub
xor
lds
jne
shlb
into
inc
mov
xor
sbb
push
mov
push
inc
jae
jmp
repnz
loope
mov
pop
pop
push
inc
ja
ja
enter
pop
dec
and
or
or
fidivs
sbb
xor
push
popl
popa
or
sub
leave
add
cs
mov
aad
rorl
mov
push
add
push
inc
ss
lcall
inc
push
dec
sahf
testl
mov
push
insl
outsl
fs
cmpsl
xor
or
mov
mov
or
ds
sti
jbe
or
push
pop
mov
sbb
adc
sbb
xor
jl
xor
or
jge
loope
ds
cs
push
add
inc
jmp
xor
ja
dec
into
divl
dec
inc
imul
inc
fs
js
aaa
in
inc
push
decb
pop
and
pop
in
push
xchg
add
or
sbb
add
adc
enter
pop
mov
inc
and
cmpb
push
xor
out
sub
out
push
jo
add
add
and
push
pop
cmp
add
xchg
mov
out
push
sbbb
pop
push
lock
xchg
and
mov
pop
adc
jp
loope
adc
dec
add
ljmp
add
or
ja
push
imul
or
inc
jp
dec
test
or
sbb
mov
mov
aas
jno
fists
xchg
pushf
cmp
bound
out
add
or
or
shrb
push
fstpt
orl
outsl
mov
insb
or
or
sub
cmpsl
dec
imul
enter
push
push
ljmp
inc
std
das
mov
pop
pop
inc
das
cmp
or
into
sub
sub
stos
or
fmul
fiaddl
push
popf
pop
pop
add
insb
or
pop
ja
sbb
cli
xor
rorw
adc
mov
dec
or
pop
or
cmp
outsb
fs
jns
jo
sahf
mov
mov
or
mov
or
imul
jge
jnp
adc
cmpsb
xchg
add
jo
cmp
add
add
clc
or
or
addr16
adc
adc
in
add
outsb
data16
adc
pop
cwtl
into
popa
icebp
and
gs
push
or
xor
jge
adc
or
xor
add
cmp
and
or
mov
mov
mov
mov
push
jb
rolb
adc
mov
sbb
mov
adc
adc
js
push
adc
addb
sbb
cmpsb
pop
and
push
ja
test
inc
add
or
add
cltd
mov
or
imul
or
iret
insb
add
ja
pop
or
xor
inc
popa
push
rcr
mov
xchg
adc
sbb
jne
jns
or
scas
or
mov
or
mov
add
addr16
push
push
dec
push
mov
add
add
push
sbb
and
ret
out
jb
neg
outsl
add
sub
sbb
sbb
add
adc
add
dec
mov
or
push
sub
pop
xchg
cwtl
dec
insl
fwait
or
push
testl
add
iret
xor
xchg
clc
jl
fistpl
xchg
sarb
loope
subb
mov
filds
sub
test
inc
call
lods
jle
push
xor
jg
insb
mov
mov
push
pusha
xchg
in
cwtl
inc
inc
mov
mov
xchg
sbb
xorb
xchg
pop
or
pushf
push
pusha
pop
xchg
popl
fwait
popa
jl
idiv
bound
pop
jns
imul
ffree
call
push
call
negl
mov
push
push
and
push
add
push
inc
add
repz
cmp
jmp
add
add
add
add
add
add
mov
ret
pop
dec
adc
adc
sbb
add
adc
push
out
insl
loope
inc
inc
add
js
pop
movsb
subb
xchg
loopne
or
adc
or
mov
and
push
decb
xchg
mov
mov
pushl
scas
ljmp
pop
lods
ljmp
stc
jmp
aaa
stos
xor
push
imul
rcl
jl
out
push
cmp
pushf
repz
outsl
enter
out
ds
sub
jb
mov
jae
je
adcl
xchg
test
push
push
pop
or
push
sbb
out
mov
push
or
dec
nop
mov
idivl
sti
xor
pop
test
pop
lcall
jge
imul
lock
repz
jnp
push
cmp
push
js
dec
into
xchg
cs
mov
ljmp
push
in
pushf
inc
or
in
xchg
mov
pop
and
shlb
adc
adc
jmp
dec
daa
notb
adc
add
pop
rorb
push
xlat
loope
inc
outsl
pop
sbb
cmp
mov
add
sub
test
rcrl
xchg
add
xor
push
adc
push
inc
inc
and
ds
or
ds
sbb
dec
mov
pop
adc
lret
push
xor
mov
push
in
jo,pt
popa
inc
dec
sahf
mov
mov
push
dec
loope
push
shr
dec
pop
adc
pop
pusha
ja
popa
fmull
add
xchg
inc
fstl
aam
pop
xchg
sbb
loope
xchg
xor
sbb
testl
pop
sbb
leave
push
sub
or
mov
pop
inc
jo
rcl
adc
movsl
or
push
aam
push
inc
hlt
test
lcall
repz
dec
push
jg
mov
sldt
sub
outsb
sub
or
or
cvtps2pd
cld
and
push
push
sub
add
sbb
jecxz
mov
inc
inc
jo
add
cmpsl
mov
je
hlt
xor
fsubs
lcall
sbb
enter
mov
mov
sbb
pop
notl
in
push
in
add
rorl
js
hlt
inc
in
xor
repz
aad
movsl
push
call
push
fldenv
inc
je
pop
or
adc
and
push
inc
mov
gs
mov
scas
jmp
push
and
repnz
and
mov
rcr
xor
iret
fwait
dec
add
dec
inc
pop
pusha
out
pop
sbb
and
or
pop
push
cmp
push
fimull
mov
mov
inc
pop
and
push
shl
rolb
icebp
and
or
push
sub
pop
ret
cltd
cmp
push
push
ss
int
or
sub
xor
xor
cltd
xlat
incl
push
sub
push
test
js
into
cltd
in
mov
pop
inc
dec
adc
sub
xlat
dec
jo
pop
cwtl
fwait
sub
pop
lea
or
cli
and
jbe
ja
popa
adc
stos
dec
dec
inc
cwtl
push
xlat
sub
mov
pop
cs
dec
adc
gs
jnp
push
pushf
jecxz
pusha
dec
dec
sahf
and
das
push
aad
fmull
mov
es
fwait
wrmsr
mov
insb
pop
ss
imul
push
add
xor
or
jae
cli
fiaddl
mov
bnd
fdivrl
int
sub
addl
cmp
pop
jae
mov
xor
popl
fwait
mov
das
xor
mov
and
rolb
push
fisttpll
add
int
nop
sbb
popf
mov
push
sbb
dec
cltd
add
icebp
mov
les
imul
dec
in
fistps
cmp
xorl
sbb
les
add
sbb
dec
std
cmp
aad
mov
mov
sub
int3
pop
jg
sub
lcall
nop
cmpsl
pop
jo
push
inc
adc
push
out
dec
cmp
push
add
test
push
rcrb
cwtl
sbb
fimuls
stos
or
adc
add
xlat
dec
ds
mov
test
push
inc
aas
lds
cwtl
incl
mov
insl
sbb
cwtl
out
adc
enter
or
dec
push
sbb
push
in
movsb
jg
xor
push
pop
sub
or
xchg
bound
xor
sar
sti
or
cwtl
push
mov
and
inc
mov
xlat
sbb
fadds
into
je
push
dec
pop
clc
jo
and
inc
inc
leave
ret
rolb
cmc
insb
loopne
add
pop
mov
mov
inc
fcomip
mov
dec
mov
pop
dec
or
jp
adc
lds
push
outsl
inc
mov
dec
lock
adc
xchg
adc
or
out
jo
fisttpll
inc
mov
ret
inc
sbb
sarb
rolb
adc
rolb
sbb
mov
loope
lcall
fs
test
faddp
out
cmp
xchg
dec
inc
inc
pop
lds
insl
mov
and
addb
sbb
sub
inc
loopne
push
frstor
xor
roll
dec
push
jo
jbe
rol
test
push
inc
push
into
enter
cmp
xchg
mov
fmuls
dec
ja
add
loopne
mov
jo
push
insl
dec
fisubrs
int3
cmp
cmp
loopne
icebp
xor
enter
inc
push
rorb
jmp
dec
dec
lahf
scas
popf
cs
adc
push
adc
cmp
pop
frstor
inc
clc
js
lds
addl
and
jbe
sbb
into
rolb
pop
in
pop
jnp
inc
orl
push
roll
jl
loopne
mov
pop
push
mov
aaa
mov
mov
icebp
aam
inc
pop
sbb
lds
mov
pop
movsb
push
fcompl
aas
in
mov
cmp
or
test
sub
inc
and
or
or
test
mov
inc
push
fdivs
mov
out
insb
add
sbb
mov
es
inc
jmp
ss
pop
sub
or
mov
daa
in
out
nop
mov
inc
and
mov
cmp
pop
or
ss
scas
adc
and
and
mov
xchg
js
inc
cwtl
and
cwtl
test
mov
inc
je
dec
imul
sub
jne
ds
xor
clc
scas
loopne
xchg
nop
mov
and
fisubs
scas
push
inc
adc
xchg
sbbl
sahf
push
aaa
lea
pop
aad
test
andps
adc
mov
mov
stos
lcall
test
dec
insb
movsb
in
addr16
adc
cmp
aam
mov
testl
or
je
and
sbb
push
inc
pop
mov
jl
or
lahf
mov
sub
sub
ja
push
gs
stos
adc
cwtl
inc
push
adc
and
js
mov
sbb
mov
je
adc
fwait
mov
mov
adc
push
push
xor
adc
xchg
push
dec
mov
jbe
dec
into
jae
hlt
mov
and
in
xor
and
lods
add
lock
clc
dec
and
mov
cmp
mov
les
lock
jno
adc
adc
cmp
movsb
stc
lods
adcl
mov
imul
mov
pop
ret
add
sbb
inc
sar
and
pop
push
inc
rcll
mov
mov
or
or
push
cmpsl
dec
loope
or
inc
inc
je
mov
push
sub
push
cmc
test
mov
in
jbe
cmp
mov
mov
sbb
enter
mov
cmp
test
jge
lahf
je
mov
inc
pop
mov
add
dec
je
push
cmpl
adc
jbe
pop
cwtl
loopne
loopne
enter
xchg
js
xchg
push
lcall
mov
pop
mov
fsubs
sbb
add
repz
mov
xchg
rorb
sub
test
cmpsb
je
sbb
loope
aad
mov
enter
inc
test
test
sbb
or
addr16
loopne
mov
mov
push
sub
std
lock
xchg
out
pop
push
add
add
or
adc
push
mov
pop
sbb
inc
out
jo
loopne
pop
rolb
xor
mov
xor
nop
das
ja
cmp
jae
testb
sbb
pop
lcall
mov
add
or
add
add
or
lahf
shlb
imul
pop
pop
insb
call
sbb
cmpsl
mov
add
pop
cwtl
or
shll
fstps
mov
into
push
sub
int
hlt
or
stos
mov
mov
push
pusha
add
dec
sbb
sub
adc
xchg
cmp
aad
jno
pop
dec
test
lds
sbb
push
pop
mov
or
mov
add
movb
push
adc
and
or
fs
sub
sub
push
inc
aas
mov
jo
mov
hlt
dec
loop
add
mov
sbb
add
add
sub
adc
add
js
or
mov
and
movntps
add
pop
sbb
ljmp
mov
outsb
sub
add
pop
das
jecxz
nop
and
sub
rcr
add
sub
add
inc
sub
or
jle
inc
popa
mov
push
sti
int
sub
push
inc
add
add
mov
or
add
fiadds
leave
xlat
dec
inc
sahf
fistl
inc
lret
add
lods
inc
dec
inc
js
xchg
dec
incb
xlat
dec
fsts
mov
sbb
inc
lea
outsl
int
inc
inc
pop
mov
rcrb
lods
push
xchg
push
cmp
inc
sti
sbb
pop
jmp
sub
inc
pop
adc
mov
out
add
cmpb
adc
call
fstl
scas
fsubs
insl
dec
icebp
jp
out
add
and
add
cmpsb
add
lahf
pop
add
jmp
rol
jne
mov
fcomps
add
sbb
jb
sbb
lret
and
mov
adc
cmp
js
dec
push
ds
sbb
test
adc
in
mov
fucomi
arpl
je
inc
add
jmp
jge
dec
cli
test
or
and
push
pop
ret
ret
repnz
push
mov
insb
imul
ret
adc
out
sbb
jmp
adc
inc
and
iret
pop
clc
cmpsb
mov
cmp
push
sub
inc
addb
in
cmp
push
add
lods
loop
push
adc
mov
movswl
xchg
ror
push
rcll
lea
lods
movsb
mov
sub
sbb
pop
adc
add
inc
pop
shll
sbb
adcl
insl
mov
fs
fcmovb
inc
scas
subl
cmp
pop
out
push
mov
jmp
inc
inc
or
rorb
add
cmp
cs
adc
jno
arpl
insl
mov
das
mov
scas
repz
cmpb
and
mov
and
xor
sub
xor
sbb
pop
out
xlat
fisttpll
cmp
dec
push
adc
push
sti
ret
dec
in
xchg
fnstenv
and
mov
xchg
mov
or
mov
and
or
ret
movsb
push
stos
aas
push
sub
pop
or
je
ss
jmp
enter
sub
inc
or
inc
push
in
or
outsl
mov
into
pop
ja
cld
movhps
push
ss
push
outsb
cmpsl
stc
cmp
mov
sbb
and
icebp
cmp
popa
and
mov
add
and
lods
cwtl
sarb
sti
xchg
js
mov
jle
push
popl
negb
jmp
test
push
adc
shll
sbb
pop
mov
sub
xor
adc
aas
xorb
mov
push
and
or
adc
jne
cmpsb
adc
xchg
mov
cmpsb
mov
mov
faddl
mov
daa
sti
add
add
inc
das
sub
or
inc
sub
daa
pop
mov
inc
pusha
jl
shrb
fisubs
cld
jl
mov
xchg
inc
pop
and
and
jle
sbb
je
inc
xchg
aad
push
jp
addr16
fs
and
test
cmp
and
out
ss
pop
das
or
inc
push
mov
adc
insb
pop
mov
adc
push
add
stc
sub
add
push
in
movsb
pusha
add
shlb
int
sbb
push
cmp
nop
nop
jl
mov
xor
sbbb
xor
ds
js
fwait
or
mov
pop
mov
mov
test
jge
lock
add
ja
les
orl
ret
cmp
lcall
arpl
and
inc
add
jge
inc
xor
hlt
sbb
sbb
and
pop
rcll
sub
and
sarl
sub
inc
enter
sbb
test
xor
int
enter
sub
shrb
or
adc
lea
push
mov
sbb
js
nop
mov
pop
mov
push
inc
dec
jne
repnz
stc
push
mov
clc
subl
inc
in
cwtl
js
pop
loope
pop
jae
inc
ficoms
pop
adc
dec
inc
lret
out
testb
inc
call
push
ljmp
add
dec
push
lret
mov
adc
loop
mov
enter
inc
stos
push
mov
enter
xchg
mov
into
push
push
ret
ret
pushf
cwtl
jno
xor
ret
xchg
jg
adc
inc
xchg
jl
cs
fsubrs
aas
push
bound
rolb
les
adc
cmp
arpl
push
sub
movb
mov
insb
call
or
xchg
frstor
stos
and
and
adc
or
out
pop
mov
jmp
mov
mov
push
mov
daa
and
test
add
lods
cmpsb
pop
lahf
mov
ret
sub
lock
lret
mov
xor
jo
mov
add
mov
pushf
add
idiv
orb
sub
fsubrl
fcmovnb
sub
aaa
inc
cmp
pop
add
dec
lock
jne
mov
mov
push
mov
in
push
add
add
mov
pushl
adc
cmpl
dec
jg
cmpl
adc
fidivrs
xchg
pop
je
mov
jo
or
por
sbb
or
data16
out
psubw
inc
shr
or
cwtl
popa
and
testb
test
dec
mov
sub
lret
push
inc
pop
aaa
add
ffree
sbbb
loope
sbb
xchg
push
or
fistpl
and
pop
dec
nop
and
pop
outsl
or
roll
cmp
mov
xchg
push
pusha
push
rclb
jne
addr16
lahf
lods
push
sbb
add
mov
jb
cmp
loopne
cld
movsb
in
ljmp
in
rorl
gs
sbb
aam
and
sbb
dec
lea
ja
adc
mov
push
lea
push
or
sarb
ds
push
outsb
adc
xor
jg
std
sub
lods
stos
cld
outsl
or
lds
sbb
out
fstp
sti
in
or
pop
mov
mov
pop
mov
dec
ja
mov
dec
xor
and
ss
or
sbb
insl
scas
mov
pop
mov
lcall
jns
jge
and
xchg
ss
adc
xchg
jle
daa
test
mov
and
add
fcompl
loopne
or
lods
adc
dec
cmp
or
shll
in
add
dec
sub
sub
adc
lods
push
popf
mov
incl
mov
mov
cld
rcrb
add
dec
je
cwtl
add
dec
data16
leave
inc
dec
addl
sbb
and
jge
int
decl
push
cmp
pop
add
imul
or
fucomi
adc
jne
sbb
or
adc
push
das
out
imul
lret
pop
jns
or
mov
push
inc
sbb
leave
cli
push
in
or
mov
jg
mov
das
xor
je
ret
push
out
cmp
jge
and
inc
mov
popa
test
and
fadds
mov
and
cmp
or
icebp
xlat
mov
aaa
inc
jl
call
push
cmp
inc
dec
inc
mov
dec
mov
or
ss
pop
jb
xor
push
stos
adc
popa
push
xlat
cmpsb
add
add
pop
shlb
popf
adc
mov
and
fnstenv
mov
push
mov
mov
push
les
lock
jmp
xor
cmp
xchg
mov
dec
outsl
add
in
adc
push
test
orb
inc
mov
or
jno
sbb
jge
mov
add
sub
mov
add
inc
movsl
rcrl
in
jmp
and
lret
push
mov
xor
inc
jmp
cwtl
xor
cmp
mov
inc
inc
sbb
xchg
js
adc
rep
or
testb
mov
mov
daa
fbstp
and
sub
xor
adc
addr16
mov
lock
pusha
les
pop
dec
fiaddl
and
jmp
rorb
xor
orl
adc
mov
pop
andl
jnp
push
clc
loopne
mov
sub
out
mov
subl
or
or
subb
add
loope
add
or
pop
push
xor
cmpsl
ret
mov
fndisi(8087
es
sub
andb
into
ret
cmp
adc
mov
shll
mov
or
mov
cmp
and
push
inc
shrl
stos
cmovno
orl
dec
and
cld
orb
rcrl
ja
andl
insb
ljmp
pop
out
add
outsb
sub
or
xchg
sub
mov
aas
jmp
jb
xchg
fwait
mov
pusha
or
adc
mov
jo
cmp
jnp
mov
sbb
lock
mov
xlat
out
sbb
cmpsb
sbb
aas
pop
or
and
cmovg
fsubs
mov
scas
dec
xor
mov
arpl
or
aad
and
outsb
xchg
rorb
inc
pop
mov
sub
es
pushf
mov
xchg
inc
mov
lret
neg
out
and
inc
leave
xchg
or
fldt
or
cmp
sub
add
add
inc
mov
and
in
xchg
sahf
push
filds
add
sbb
ja
xor
das
sub
fidivs
movsl
sub
or
js
add
call
insb
dec
jp
jle
jne
mov
pop
iret
cs
add
xchg
cli
mov
xchg
sbb
fcompl
cmp
jmp
cmp
mov
jo
pop
and
pusha
dec
add
mov
xlat
xchg
add
les
xor
lcall
mov
in
outsb
adc
call
hlt
sub
push
xchg
movsl
pop
xchg
mov
add
xchg
loopne
sub
repnz
jo
dec
test
sahf
jle
adc
push
jl
jge
js
pop
das
daa
push
fiaddl
jo
mov
fcomps
mov
cmp
stos
xchg
in
pushf
inc
pop
dec
xor
cmp
call
and
dec
jns
sub
add
and
jo
add
and
push
push
adc
dec
mov
sbb
sub
and
push
push
push
push
push
and
outsl
fldl
add
iret
sub
and
jbe
movsb
mov
mov
popa
jo
or
sub
mov
pop
sub
adc
xchg
adc
mov
xchg
ljmp
push
pop
xor
mov
add
or
and
sbb
nop
xor
dec
inc
loope
inc
das
xchg
mov
adc
ja
mov
dec
lahf
dec
sbb
xor
outsb
outsl
jb
sbb
dec
pop
sbb
sub
lahf
mov
and
fbld
addb
mov
sub
test
dec
push
pop
imul
sub
data16
sahf
xchg
pop
mov
mov
or
ss
push
sub
call
scas
add
jo
sbb
mov
test
stc
xor
loopne
pop
cld
mov
ret
jne
std
aas
cmpb
mov
pop
aam
xchg
and
mov
test
mov
sbb
xchg
xor
jge
xchg
xchg
cmpb
sbb
cmpsb
adc
add
xor
ret
outsl
inc
sbb
ret
mov
and
push
fdivl
rcrb
xchg
jge
or
pop
movsb
add
mov
fldenv
pop
aas
mov
cmp
lods
xchg
mov
add
add
enter
sbb
frstor
rclb
lods
mov
test
mov
into
jecxz
mov
in
lock
xchg
aam
cmp
add
dec
jnp
add
push
mov
popa
dec
sbb
repnz
cli
insl
pop
sub
fisubrs
bound
xor
jg
test
gs
sahf
mov
jl
les
lock
add
test
xor
push
push
cmc
ret
repz
push
sub
jb
xlat
das
call
adc
cmc
xor
call
jbe
xchg
inc
mov
loopne
js
aaa
inc
pusha
mov
subl
sbb
cmp
je
adc
mov
jecxz
adc
cmpsb
aam
mov
dec
and
addr16
push
cltd
fdivl
jno
inc
adc
outsb
pop
imul
cld
fsubrs
loopne,pt
mov
or
mov
mov
push
sbb
insb
add
nop
inc
push
lahf
mov
testb
sbb
mov
jmp
andb
std
pop
idivb
pop
push
daa
xchg
pop
ljmp
andl
pushf
or
pop
cmp
daa
loope
adc
aaa
jmp
lea
gs
add
mov
push
inc
adc
or
lods
scas
ljmp
hlt
xchg
cmp
fs
add
aas
add
mov
adc
dec
jmp
imul
jp
jo
inc
jg
je
and
mov
or
mov
push
or
test
ja
pop
pop
mov
sbb
daa
stos
jmp
test
fwait
es
dec
cld
cmp
jne
sbb
and
sbb
aas
inc
xchg
sub
add
pop
ret
sbb
cmp
pushf
loope
or
sbb
outsl
insl
xor
pop
sahf
sbb
repnz
sbb
gs
out
mov
inc
adc
or
and
mov
dec
push
xchg
mov
dec
inc
xlat
enter
out
add
test
addl
mov
or
sbb
inc
sub
or
sbb
movsb
push
lea
test
popa
add
inc
xlat
xchg
adc
cwtl
cmp
orl
jnp
cmp
or
jo
adc
jne
adc
sbb
dec
in
lods
xorl
xchg
pop
push
ljmp
out
in
in
pop
mov
pop
push
sub
je
ss
or
test
sbb
xor
jae
subb
hlt
nop
add
adc
or
ret
or
dec
inc
leave
or
push
hlt
cmp
mov
inc
and
pop
xor
clc
push
rorb
or
adc
adc
adc
lock
dec
int
xchg
sbb
and
inc
sub
mov
xchg
pop
mov
dec
mov
and
dec
xchg
or
sub
lock
out
pop
and
iret
jmp
sbb
idivb
cmc
fcoms
data16
je
pop
pusha
in
cmpsb
gs
xlat
or
jno
addr16
add
push
sub
arpl
aam
mov
mov
fs
inc
add
mov
lock
dec
and
sub
lock
cli
push
cmp
aas
sub
xor
add
xchg
push
cmpb
sbb
inc
xchg
mov
push
and
xchg
push
pop
and
scas
popf
ds
fidivl
add
pop
mov
sub
roll
sub
push
dec
aaa
add
js
out
fistpl
shr
add
lea
popa
fs
rcrl
mov
mov
jo
and
mov
add
mov
inc
jne
cmp
xchg
mov
orb
mov
nop
or
test
fsts
out
mov
in
out
mov
repz
cwtl
lret
sub
mov
or
inc
adc
pop
js
add
sub
jle
sub
push
adc
mov
push
push
push
or
jl
fistpll
and
insb
sbb
daa
pop
sbb
or
xor
and
pop
decl
fistpll
xlat
rorl
mov
pop
mov
pop
pusha
ljmp
adc
pushf
add
aad
incl
lods
jno
out
fwait
jno
push
stc
sbb
repz
jp
aad
sbb
sbb
rcr
jle
icebp
adc
fcomps
cwtl
mov
or
aas
push
je
adc
inc
js
imul
sub
ret
jg
mov
and
mov
jl
mov
arpl
xor
pop
xorl
test
cmpsb
mov
popa
fistpll
xor
dec
pop
mov
aaa
cmp
sub
sbb
cli
push
mov
add
insl
jmp
sbb
cmp
out
push
ret
test
loope
outsb
movsl
and
cld
push
sbb
adc
or
aaa
cmp
and
cs
sbb
xorl
movl
lods
mov
and
cmp
and
add
add
push
sbb
add
cmp
inc
decl
cmp
mov
or
cmp
popa
iret
cmp
into
and
push
xchg
js
lcall
mov
out
pop
pshufw
inc
inc
fisttpl
pusha
bound
stc
popa
mov
adc
sub
iret
push
ret
mov
mov
or
inc
mov
jmp
mov
add
add
add
setno
pop
orl
add
dec
daa
add
int3
sub
negl
aad
add
xor
pop
testl
mov
mov
aam
add
movsw
aam
ja
shll
es
in
dec
jmp
stos
cmp
outsb
jmp
sarb
cmp
popa
in
cmpl
add
aad
int3
lock
imul
mov
into
xchg
int3
mov
jnp
ficoml
mov
xor
inc
imul
out
push
inc
adc
jne
out
lods
inc
cmp
cmp
ds
mov
pop
movsb
mov
inc
mov
dec
pop
pop
lods
jo
cmp
popa
loopne
imul
cmp
or
inc
daa
fdivs
xor
movsb
jno
push
sub
lock
mov
jne
ljmp
loop
pusha
dec
arpl
or
jo
adc
out
es
testb
lods
and
sub
dec
or
cmc
push
mov
sbb
adc
push
dec
je
add
xchg
ret
mov
je
cmp
push
arpl
jmp
int
mulb
jl
sub
imul
imul
mov
or
inc
enter
out
push
loopne
or
pusha
or
push
ret
outsl
cmpsb
mov
push
sbb
mov
ret
testb
xchg
adc
loopne
or
jo
call
ss
and
pop
das
orb
sbb
in
cwtl
cmp
addl
sbb
rorl
inc
xchg
push
push
jo
jg
add
or
scas
add
pop
lcall
mov
xchg
lods
inc
cld
aad
cmp
jne
mov
das
xchg
mov
ret
or
inc
pop
rolb
fisubrl
in
cs
inc
loop
xchg
jmp
mov
jo
sub
mov
pop
loope
and
sbb
sub
fs
xchg
call
mov
aam
icebp
divl
jo
loop
jp
push
and
fwait
dec
adc
inc
rolb
mov
inc
ja
add
outsb
mov
mov
push
cmp
jbe
data16
loope
push
cmp
shll
push
out
jae
adc
scas
push
outsb
fwait
ret
push
ficompl
jge
pop
sub
xor
movb
push
inc
jo
mov
in
fbld
jne
jl
imul
xchg
or
jl
push
and
not
ds
pop
add
push
cmp
and
mov
call
pop
xchg
dec
ds
sti
jg
popa
or
andps
ret
shll
scas
push
xor
movb
xchg
add
xor
sub
in
add
add
dec
pop
test
adc
push
inc
arpl
in
mov
dec
adc
test
mov
mov
les
cltd
cmp
mov
or
inc
decl
adc
out
popa
mov
aaa
jne
mov
jbe
add
js
cmp
sbb
pop
add
mov
adc
andl
inc
dec
cld
jne
cmpb
pop
out
roll
push
iret
cmp
mov
sub
or
xor
sub
pusha
cmpb
test
cltd
add
insb
add
test
rorb
mov
maxps
outsl
in
jns
daa
push
inc
dec
jae
std
jmp
sbb
rcrb
inc
and
jns
rclb
testb
out
pop
and
dec
pop
sub
mov
sbb
dec
cmpsb
ss
push
or
xor
add
mov
lods
lea
mov
adcb
or
or
fisubs
xchg
cmpb
hlt
fdivs
sub
neg
ffree
add
add
xchg
js
sbb
dec
fldl
or
shrb
daa
push
je
sub
add
cmp
add
jbe
daa
js
ret
and
adc
adc
fidivrs
enter
add
push
or
add
sbb
scas
jge
jmp
or
or
call
or
dec
push
setg
add
sub
dec
pop
push
popa
jne
sub
inc
push
add
and
out
inc
jg
or
push
test
incl
xchg
mov
push
jmp
mov
jns
es
test
shlb
mov
es
nop
fdivrs
and
mov
add
leave
jb
lods
cmp
nop
pop
sbb
mov
mov
subl
rcr
imull
mov
push
xor
push
call
pop
pop
sti
inc
aas
add
inc
dec
dec
inc
dec
push
adc
dec
lahf
jo
mov
sub
mov
sub
adc
jge
or
sbb
test
cmpl
mov
dec
insl
mov
mov
xchg
js
fmull
loopne
cmpsb
cmp
or
call
adc
adc
sbb
addl
xchg
mov
inc
data16
add
imul
scas
orb
cwtl
fwait
push
mov
cli
mov
fidivs
andl
icebp
jecxz
icebp
call
jbe
les
jne
bound
dec
mov
add
out
and
iret
je
mov
push
cmp
mov
jg
inc
and
inc
cmpl
jne
pusha
adc
sbb
push
push
cs
mov
mov
or
dec
cmc
repnz
cmp
sub
cli
stos
dec
cmp
lea
inc
cmp
je
es
imul
sbbl
movsl
cmpsb
nop
sub
nop
mov
mull
jne
cld
sub
hlt
mov
and
lods
addr16
xchg
sbbb
add
mov
sbb
dec
mov
xchg
xor
scas
dec
cmp
lahf
sahf
cs
lea
inc
pop
xchg
ss
outsl
fcomps
pop
insb
stos
incl
adc
jne
subl
repz
adc
sub
sbb
mov
push
les
bound
sbb
lods
inc
adc
sub
notl
jmp
and
sub
add
lret
fcompl
push
incl
push
or
mov
arpl
push
mov
addr16
cmp
push
ss
cld
sub
mov
adc
mov
adc
pop
orb
cmp
iret
dec
add
ret
in
fwait
sub
or
nop
insl
flds
jmp
fwait
pusha
in
lods
push
adc
add
sarl
inc
mov
or
scas
jmp
xor
cmp
jbe
nop
jb
inc
dec
loope
add
sbb
jne
pop
negb
fs
fs
xchg
aam
and
shlb
mov
aam
iret
mov
les
add
roll
cmpl
aaa
mov
sahf
and
loope
push
das
push
add
adc
and
push
add
pop
inc
mov
in
jle
xor
pop
jae
dec
das
mov
jg
and
or
test
xchg
scas
mov
lock
xchg
ret
mov
xor
shll
mov
xchg
or
sub
call
fistpl
add
and
int
movsb
push
dec
loope
jge
add
ljmp
arpl
cmp
push
push
and
rcll
mov
dec
scas
lea
subb
adc
or
sahf
push
cli
and
pop
mov
in
sti
dec
inc
cmpl
inc
inc
je
pop
sbb
cmpb
andl
jmp
shlb
je
test
popl
mov
xor
sarb
call
xor
sub
dec
sub
adc
cs
push
cmp
sub
bound
adc
inc
iret
mov
adc
add
inc
push
jle
add
or
jb
sub
xor
and
movsb
and
jle
mov
xchg
lret
rolb
fimuls
or
popf
int3
xchg
sbb
mov
dec
ljmp
pusha
pop
jb
jg
lahf
daa
or
sub
sbb
push
sub
sbb
cmp
je
push
arpl
lahf
test
inc
lahf
pop
cmp
add
insb
jmp
fildl
mov
dec
mov
enter
mov
inc
dec
movsb
jp
mov
test
add
cmp
sbbl
in
arpl
mov
jne
arpl
cmp
or
push
stos
push
ds
shlb
aaa
sarb
int3
imul
lret
push
scas
iret
dec
nop
icebp
sub
push
mov
add
lock
dec
dec
popa
or
and
dec
rorl
pop
loopne
test
add
insl
iret
lods
xor
adc
and
roll
xchg
movsb
sub
test
mov
mov
xchg
adc
movl
into
lods
and
inc
cmpxchg
rcll
xlat
pop
out
sub
add
scas
data16
int3
test
and
push
adc
jbe
fwait
add
aam
icebp
insl
add
loopne
push
inc
jo
sbbl
ss
sbb
add
xor
jmp
dec
add
push
outsl
push
inc
aaa
add
push
sbb
out
stos
fildl
aad
nop
push
xor
or
mov
pop
js
mov
fcompl
stos
fwait
add
lret
inc
lock
push
rcrb
mov
in
pop
addl
pop
enter
pop
loope
pop
stos
mov
adc
js
xchg
lods
nop
pop
outsl
dec
inc
and
and
je
bound
outsb
add
sbb
add
inc
inc
test
sahf
sahf
lds
mov
mov
adc
pop
fdivl
int3
test
test
cmp
roll
mov
inc
rolb
sbb
mov
pop
test
shlb
mov
add
cmpl
fisubrl
rolb
mov
add
inc
fsubl
xor
or
aas
and
mov
sub
movb
pop
push
inc
pop
lods
pop
cmp
push
cmpsb
rcrb
jecxz
sub
ljmp
add
in
push
addl
mov
jg
fists
mov
pusha
push
jno
xor
mov
je
shl
cmpl
xchg
in
or
lea
mov
loopne
mov
mov
push
adc
sbbl
adc
je
aad
jp
fsubl
or
or
jmp
or
adc
repnz
add
push
jecxz
pop
fdivl
fildl
sub
sbb
xchg
int3
js
adc
testl
pop
cwtl
mov
xor
cmpsl
call
and
or
adc
loop
dec
testb
pop
out
dec
jmp
dec
les
dec
pop
or
subl
xchg
xor
adc
iret
mov
and
in
cmp
push
add
or
add
and
adc
dec
cmp
arpl
inc
or
mov
out
inc
aaa
push
and
add
and
adc
test
mov
adc
push
dec
jl
add
hlt
dec
sbb
leave
neg
mov
push
rcl
out
scas
sbb
add
sbb
push
imul
inc
inc
sar
xor
adc
adc
mov
outsl
pop
push
xchg
add
cmpl
rcll
popa
ret
pop
fimull
sub
int
mov
add
lods
jne
xchg
jne
outsb
adc
xchg
icebp
pusha
or
sbb
xchg
aas
scas
ret
push
je
ret
cmp
adc
adc
mov
dec
mov
mov
mov
or
and
stc
in
add
lods
sbb
add
mov
fisubrl
jno
lret
fcompl
push
mov
clc
movsb
mov
pop
add
insb
pop
fcmovu
jbe
cltd
adc
and
dec
insb
loopne
outsb
cmpsb
jne
addl
xchg
test
mov
out
jmp
push
sub
into
jmp
add
lock
jecxz
imul
jg
movups
jp
imul
sub
dec
push
enter
dec
in
adc
dec
nop
bound
sbb
adc
std
add
or
aad
rcrl
inc
and
and
sbb
insb
shlb
in
popa
xchg
adc
icebp
test
add
sub
push
dec
mov
cld
paddb
sub
mov
mov
sbb
cmpb
and
xchg
sub
add
or
rolb
bound
and
out
jg
pushf
inc
dec
cmp
loopne
add
or
enter
ljmp
loopne
mov
or
scas
iret
mov
and
dec
xor
adc
and
fiaddl
push
and
or
mov
xor
or
call
inc
setge
sub
xchg
sbb
inc
xchg
nop
mov
lahf
cmpsb
and
sub
bound
jmp
dec
xchg
imul
mov
inc
nop
lods
xor
or
add
sbb
add
clc
sbb
jg
inc
repnz
ret
or
add
add
bound
push
add
or
add
ja
scas
das
push
add
dec
xchg
add
fadds
push
ss
xorl
jne
pop
aas
xor
subb
dec
sar
movsb
push
enter
add
mov
push
fdivs
or
xor
sbb
shlb
push
bound
sarb
or
int
enter
aas
dec
fstl
xchg
pop
sub
jecxz
mov
imul
push
scas
ret
add
lret
mov
into
or
pop
shll
pop
jne
pop
push
pop
movsl
or
push
orb
ret
jmp
xorb
lsl
bound
xchg
xor
jb
mov
cmp
inc
pop
push
sub
test
mov
insb
pop
loop
adc
push
jne
cltd
or
cmc
loopne
dec
jmp
mov
inc
cmp
sub
dec
cmp
sbb
rorb
add
add
push
pop
push
push
adc
push
sti
mov
jmp
imul
jb
pop
mov
scas
imul
add
insb
test
or
or
or
dec
lahf
pop
loope
pop
push
orl
jmp
imul
and
mov
pop
cltd
mov
dec
adc
je
push
and
sbb
adc
call
jl
sti
push
ss
mov
cmp
or
outsb
std
jmp
mov
or
jmp
insb
mov
test
add
push
roll
jno
mov
xchg
sbb
imul
ja
ds
shlb
mov
pop
int
lock
rcrl
pusha
sub
jge
xchg
sbb
adc
mov
dec
sbb
int
shrb
adc
stos
xlat
loopne
jge
add
push
ds
dec
mov
incb
pushf
mov
insl
loope
and
and
loopne
cmpb
hlt
lods
clc
jmp
or
jmp
sub
loop
nop
xchg
adc
out
and
nop
jmp
mov
adc
sbb
jne
xor
or
outsl
addb
and
push
icebp
add
add
rcrb
sarb
int
add
sub
push
int3
and
fstl
stc
mov
inc
fldt
or
xor
and
sbb
test
add
jmp
imul
push
cwtl
sub
sbb
adc
xor
ss
sbb
shl
jg
or
mov
xor
aaa
adc
push
add
pushaw
push
jmp
push
ljmp
and
xchg
lahf
loopne
orl
push
sbb
inc
loopne
je
or
add
nop
or
loopne
adc
push
adc
out
add
sbb
loop
sbb
add
add
add
push
or
dec
test
daa
fstps
xor
dec
scas
data16
dec
mov
cwtl
gs
mov
and
cmp
out
sub
in
sub
inc
popf
in
incl
lahf
mov
js
xchg
stos
paddq
cmpb
imul
mov
add
in
in
add
repnz
outsl
sbb
mov
xor
ret
xor
push
and
ret
shlb
add
mov
sbb
outsl
cmp
aad
jl
cmp
cmp
jo
inc
pop
je
ret
and
xchg
scas
or
adc
push
into
shlb
push
sarb
lcall
shlb
mov
movsb
mov
push
or
stc
filds
test
mov
inc
addb
and
scas
add
xor
xor
add
insl
sbb
jb
pop
insb
shlb
lods
dec
faddl
push
mov
lea
dec
xor
xor
loope
mov
mov
rcl
add
mov
shl
fistl
loopne
sarb
dec
add
cmp
test
cli
xor
das
jne
mov
les
mov
in
inc
repz
rorb
pop
lock
mov
jae
pop
test
insb
dec
fwait
adc
mov
mov
loop
xor
mov
stos
ds
mov
sbb
sbb
popa
dec
adc
test
scas
mov
dec
decl
or
lock
cltd
and
je
push
and
nop
je
adc
xlat
sbb
lock
cmp
test
pop
push
and
and
dec
sbb
jl
sub
inc
push
pop
add
aas
das
notl
scas
ret
leave
or
sub
subb
xchg
push
movups
clc
or
mov
mov
mov
inc
shll
xlat
mov
test
sub
shll
inc
inc
jmp
push
xchg
nop
jo
or
test
out
adc
sbbb
xlat
sub
dec
test
jmp
mov
add
ljmp
mov
push
and
push
dec
movsl
ret
js
int
and
call
addr16
mov
ja
je
testl
orps
sub
arpl
mov
movsl
int3
mov
xchg
call
insl
leave
sub
mov
add
insl
inc
mov
jmp
and
orb
test
jnp
cmc
adc
pop
loopne
nop
aam
push
les
sub
paddw
es
lret
xchg
push
dec
mov
call
mov
les
pusha
sub
or
push
mov
or
mov
stc
icebp
ds
or
cld
into
xchg
loopne
add
movsb
rcl
mov
adc
dec
or
add
inc
dec
or
mov
or
xor
add
dec
or
js
jno
movsb
add
adc
ja
mov
add
push
lar
fsubs
or
pusha
jecxz
ljmp
mov
mov
dec
xchg
and
dec
lock
jbe
fiadds
mov
pushf
sbb
fnstsw
in
mov
sbb
push
insb
and
xchg
add
ja
fs
lahf
mov
xchg
movsb
insl
pusha
sbb
add
es
xchg
push
movsb
stos
lahf
mov
inc
rcrl
int3
dec
clc
or
xor
sbb
pop
fadds
mov
xchg
mov
xlat
int3
shlb
or
pop
mov
mov
cmpsl
daa
jge
je
fadds
jle
out
xor
cmp
xor
test
xorl
pop
scas
loope
dec
cmp
clc
sub
call
adc
or
pusha
std
and
inc
sbb
push
or
jge
add
roll
inc
mov
loop
pop
mov
rolb
testb
mov
sti
push
sub
loop
xor
push
and
cld
pop
xchg
sub
sbb
dec
push
cld
and
and
cld
sbb
std
mov
nop
adc
mov
fs
inc
in
cmp
pop
push
mov
aad
subl
pop
pop
js
orl
mov
iret
add
mov
sbb
push
mov
addr16
or
lahf
mov
fidivrl
sub
pop
pop
andb
pop
adc
jg
add
enter
loopne
adc
mov
xor
movl
sbb
jp
mov
cwtl
test
adc
fs
es
sbb
inc
es
jl
adc
sub
dec
subl
push
inc
imul
xor
pop
and
add
xor
add
popa
hlt
xchg
add
pop
adcb
es
leave
lidtl
inc
cmpsl
sarb
jne
fdivrs
adc
daa
mov
dec
test
dec
daa
daa
daa
daa
xor
pop
mov
insb
sbb
mov
leave
and
jo
add
xorl
pop
adc
pop
in
lds
mov
push
pop
jnp
jge
push
add
xor
dec
dec
andb
dec
dec
test
daa
testb
pop
or
push
push
imul
xchg
dec
mov
dec
cmpsl
dec
orl
jmp
mov
enter
mov
adc
jo
rolb
xchg
adc
ror
sub
push
cmpb
sbbl
adc
mov
dec
ss
test
mov
xor
xor
inc
sub
popf
xor
push
leave
das
rclb
notl
xchg
xlat
call
dec
inc
pusha
mov
jl
xor
test
out
jl
or
jle
pop
and
or
ja
lret
push
push
push
pop
mov
adc
aas
cmp
pop
pusha
xor
sbb
arpl
ret
inc
jne
sahf
or
or
movsl
or
jns
sub
lds
mov
cld
out
mov
xorl
mov
fwait
jo
and
outsb
pop
pop
incl
enter
dec
push
pop
push
jo
adc
push
js
pop
out
mov
mov
adc
pushf
push
jns
xchg
cmpl
xor
ds
fistpl
ljmp
push
ja
adc
and
mov
sqrtps
push
pop
inc
cmp
xchg
cmp
mov
pusha
add
imul
cmp
sbb
ja
mov
xchg
push
mov
push
push
sub
lods
and
pop
add
cli
and
imulb
testb
out
jae
dec
cmp
sub
push
jmp
sbb
pop
es
jo
dec
push
cmp
jne
dec
ss
dec
out
jno
add
fildl
sub
addl
mov
negb
mov
inc
sbb
icebp
dec
shlb
pop
xor
mov
shlb
mov
adc
and
lock
aas
inc
mov
je
adc
ss
outsl
insb
and
outsl
jne
and
jbe
outsb
insb
sbb
imul
adc
aam
aam
inc
cwtl
or
popa
scas
add
es
stos
mov
mov
mov
cmp
das
cmpl
mov
pop
lods
lea
push
mov
in
fists
leave
cmp
sbb
sub
lods
or
or
mov
adc
sbb
add
sbb
inc
add
push
nop
dec
xor
pop
sbbb
add
pop
cmp
into
or
or
pop
insb
xchg
shlb
and
dec
lahf
sub
fs
xchg
pop
into
call
mov
jmp
fisttpl
adc
cmp
ds
fldcw
sub
push
mov
inc
dec
out
add
jmp
insb
sbb
push
and
lock
int
push
mov
pop
pusha
sbb
fs
dec
or
lret
push
cmp
pop
arpl
and
adc
ret
xchg
mov
pop
dec
add
movl
es
add
nop
push
xor
mov
and
xchg
movsl
nop
dec
loope
outsb
arpl
dec
inc
pop
adc
xor
sbb
sub
or
incw
lods
subl
mov
jle
or
push
testb
adc
insb
xchg
add
jns
popa
xchg
sar
lret
testb
and
and
clc
sub
cmp
or
xchg
sbb
cmp
out
rcrl
add
aas
push
or
sub
or
inc
bound
xor
mov
das
xchg
push
and
imul
out
jl
dec
cmp
popa
or
daa
mov
mov
sub
mov
sub
push
ja
cmpsb
inc
mov
aas
add
mov
cmp
sbb
xor
add
add
dec
pusha
in
jbe
sbb
push
jmp
sbb
mov
mov
jo
inc
into
push
and
test
pop
ret
push
sar
nop
cmc
or
jne
sub
outsl
add
and
shl
and
cmp
je
outsb
adc
ja
mov
jns
lds
mov
or
ja
xchg
lahf
mov
xor
inc
and
pop
roll
inc
daa
pop
sub
mov
add
sbb
imul
dec
or
sahf
pop
jo
mov
dec
mov
inc
sub
pop
cmp
mov
fnstenv
xchg
xor
inc
xchg
dec
or
adc
aaa
or
pop
inc
jg
cmpsl
lods
xchg
jne
mov
sbb
fucom
cmp
jge
jnp
mov
pop
xor
mov
mov
shrb
shrb
clc
sbb
cmp
inc
ret
sbb
and
sti
mov
cmp
pop
or
mov
adc
subl
cmpsb
push
mov
and
sbb
or
insl
ffreep
cmp
add
add
xor
jecxz
ret
rcl
cltd
sbb
cmp
lea
imul
imul
aad
or
xchg
lock
xchg
xor
or
dec
les
ja
lcall
add
mov
fs
inc
add
cmc
in
mov
in
shrb
not
aaa
inc
sbb
lret
push
adc
sarl
fwait
and
mov
xor
idivl
pop
xchg
mov
and
add
or
loope
pop
add
and
xchg
ds
xor
dec
mov
imul
jecxz
nop
stos
jno
rcll
cltd
mov
jo,pt
mov
stc
sub
add
adc
cltd
or
scas
insb
push
inc
xor
inc
aad
or
out
fprem
loope,pt
mov
sub
add
test
push
clc
sbb
cmp
imul
pop
mov
sbb
mov
test
jb
ret
or
pop
or
testb
mov
push
js
popa
and
mov
mov
mov
outsl
push
movsl
sbb
mov
bound
adc
push
adc
mov
pop
or
enter
mov
pop
mov
mov
mov
sub
sub
push
sub
mov
test
je
pop
pop
adc
and
aaa
jmp
shl
outsl
ret
cltd
lods
arpl
adc
ljmp
pop
mov
push
popa
xchg
fidivs
or
xorb
lea
cs
xor
into
jno
dec
dec
add
cwtl
jmp
in
in
movsl
sbbb
push
mov
and
fcoms
movsb
stos
xchg
add
stos
psraw
insl
and
mov
test
push
pop
sub
test
dec
loopne
loopne
shl
mov
add
test
or
sub
jns
or
jb
arpl
mov
ja
adc
jae
les
dec
or
add
mov
jo
xchg
push
ljmp
cli
pusha
lods
push
cmp
pushf
sbbl
mov
mov
mov
or
push
or
or
mov
xchg
es
inc
nop
lret
xor
jbe
dec
cs
sbb
iret
or
nop
or
mov
cs
mov
incb
mov
cmp
xchg
dec
inc
pop
out
sahf
ljmp
lods
enter
adc
lds
outsl
jecxz
inc
dec
dec
dec
inc
dec
dec
adc
sbb
push
lds
adc
rcr
push
out
nop
push
movsb
or
pop
sbb
xchg
xchg
inc
or
aam
inc
mov
dec
sbb
mov
cmp
jge
movb
test
ss
inc
inc
mov
and
sub
loopne
mov
adc
pop
shl
popa
fistpl
pop
and
push
cmc
repnz
adc
or
dec
jp
xor
inc
popl
lds
mov
andb
adc
xlat
mov
arpl
mov
fwait
daa
fldl
in
xchg
aam
sbb
cltd
add
inc
inc
lds
adc
mov
scas
add
xor
or
test
loop
add
adc
aam
adc
add
or
loopne
lahf
xor
jb
test
dec
push
sbb
and
or
mov
xor
add
arpl
in
int3
shr
arpl
and
subb
dec
ja
adc
xor
ret
sub
dec
or
dec
call
stos
stos
ss
sub
rolb
ret
dec
adc
subb
xchg
sbb
mov
push
inc
js
cltd
les
pusha
pop
add
xchg
pop
push
fcmovnb
test
das
ljmp
dec
mov
sbb
jmp
sbb
js
rolb
nop
ret
xor
adc
and
testl
sbb
adcb
jp
icebp
cmpsb
pop
fcoms
push
aaa
xlat
cmpl
sbb
inc
stos
cmpb
test
pop
les
mov
je
push
addb
scas
insb
pop
push
sub
in
dec
push
pop
nop
lea
push
xor
inc
sub
add
push
outsl
test
jp
push
inc
jno
js
in
and
cmp
xlat
cmp
mov
sub
pop
or
out
xor
lretw
ret
push
mov
or
sbb
push
cld
vmread
imul
sub
jle
es
mov
jne
test
inc
push
mov
lock
repnz
inc
cmp
inc
nop
or
inc
add
dec
cld
or
jne
leave
hlt
inc
inc
call
subb
sub
sbb
jne
push
add
ret
inc
adc
cmpsb
adc
xor
jo
inc
add
mov
or
dec
shrb
inc
cmpsb
test
inc
das
bound
lock
popf
push
fmuls
ret
shlb
lcall
push
dec
fdivs
inc
and
push
adc
xchg
daa
stos
jecxz
jle
xchg
add
inc
or
mov
insl
lret
xor
loope
and
pop
mov
pop
push
xchg
and
cwtl
jl
imul
cmp
mov
sbb
clc
push
stos
xchg
icebp
push
jg
jecxz
ret
push
jg
adc
adcb
je
sbb
lods
push
jbe
test
insb
jae
dec
repnz
test
sbb
mov
dec
sbb
repz
sbb
add
imul
je
xor
stos
adc
jg
sub
adc
jg
and
cmp
scas
icebp
imul
fstpt
push
inc
bound
jb
cmp
add
jns
add
adc
mov
add
sbb
lret
xor
xor
adc
addr16
lret
popf
inc
dec
add
xchg
mov
push
pop
sub
fstpl
cmp
icebp
popf
call
cwtl
sub
cvtps2pi
call
xchg
xchg
mov
scas
idivb
jg
movl
xchg
test
das
jne
and
in
lcall
push
dec
xchg
fsts
inc
add
stos
and
loop
xchg
in
add
xchg
outsl
pop
icebp
inc
aam
cmp
xor
xor
inc
cltd
adc
bound
adc
daa
inc
das
mov
sti
cmp
cmp
in
cmp
fcompl
sub
xor
add
mov
sub
ret
xor
rclb
sub
ss
inc
sub
pop
in
push
inc
push
fimuls
test
add
adcl
loopne
adc
mov
xor
xlat
aaa
faddl
sbb
mov
mov
mov
xor
mov
dec
movsb
clc
jle
ss
push
hlt
loopne
nop
push
sbb
imul
dec
loope
repnz
or
mov
xor
mov
lock
dec
xor
sub
adc
xor
test
sti
es
and
nop
out
lcall
push
push
mov
or
pop
in
gs
sub
outsb
or
push
dec
sbb
push
cmp
inc
sub
jge
xor
fldcw
add
dec
or
test
dec
arpl
cmp
pop
pop
cld
and
xor
xor
cltd
lods
cmpsl
or
push
cmpb
loopne
dec
sbb
sbb
mov
lret
fldenv
mov
jno
mov
mov
cmp
jmp
je
xchg
fucomp
fldcw
mov
mov
adc
je
jge
cmp
or
sub
sbb
fistpl
pop
int3
jmp
mov
push
fnstenv
xorl
push
pusha
loopne
ja
or
arpl
xor
cmp
jb
movsl
or
sarb
nop
test
cmp
bound
jo
addr16
cwtl
jno
pop
cmp
scas
out
arpl
jne
lods
pop
call
mov
inc
mov
adc
jle
rolb
cmp
sbb
inc
fdiv
add
in
push
inc
push
dec
arpl
fcoms
test
jmp
sub
xchg
into
xchg
push
ret
sbb
andl
and
rcll
push
cmp
pop
pop
icebp
nop
sbb
or
pusha
or
add
loope
mov
sbb
out
adc
sbb
mov
enter
in
cmpb
repz
or
push
or
inc
sub
dec
dec
sub
pop
add
and
push
adc
gs
mov
daa
mov
movsl
les
aaa
sbb
xchg
mov
pop
mov
loopne
fistpll
mov
sbb
jge
pushf
fdivrp
mov
sub
inc
imul
xchg
outsb
add
add
or
inc
out
pop
pushf
cmpb
adc
std
dec
inc
movsl
sub
inc
add
aas
push
jb
xchg
xchg
add
or
jne
mov
sbb
jo
push
mov
ss
push
inc
or
pusha
push
mov
add
jmp
loope
xor
pop
add
mov
xor
in
xchg
mov
push
jnp
cmp
lcall
fcoms
aaa
cli
fisubrs
test
sbb
in
fiaddl
arpl
inc
pop
ljmp
testl
adc
pushf
in
inc
enter
and
push
loop
sub
and
mov
dec
push
jmp
aam
fldenv
add
add
andb
adc
movsb
adc
mov
loopne
jle
ja
xchg
fsubrs
add
cmc
loopne
iret
fildl
mov
sahf
inc
sahf
xchg
and
adc
adc
rorb
push
cs
loop
or
pop
pop
insl
sub
in
lods
sbb
dec
in
stos
nop
xor
xchg
xor
xchg
js
sub
dec
mov
xchg
test
cltd
dec
mov
aam
hlt
rolb
jne
cmp
add
imul
add
dec
lods
insb
push
test
jecxz
int
xor
nop
push
inc
or
sbb
mov
adc
arpl
add
das
lock
scas
push
jno
stos
lea
dec
cmp
xchg
insb
add
inc
cmp
and
xchg
inc
rol
mov
pop
cmp
jne
ret
jmp
sub
mov
sti
jo
iret
sub
sbb
and
ljmp
pop
icebp
hlt
xchg
orb
xor
fidivl
dec
sbb
in
lahf
sub
lahf
add
call
inc
mov
jb
and
dec
mov
add
inc
pop
and
inc
push
mov
into
sub
sar
je
iret
adc
xor
sub
jnp
sub
add
sbb
insl
pop
pusha
dec
jae
insb
cmp
push
rorb
pop
mov
lret
iret
adc
movsb
rolb
mov
or
ljmp
adc
jno
and
and
nop
sbb
test
sbbl
and
lahf
adc
rol
es
xlat
push
jp
ja
clc
pop
mov
inc
pop
push
push
inc
jae
je
shll
ret
or
in
je
mov
push
jbe
mov
loopne
je
xor
push
movsl
stc
mov
cmp
mov
ret
pop
cmp
bound
mov
add
mov
test
inc
add
mov
xchg
cmc
dec
js
sub
mov
pop
push
dec
adc
or
cmp
push
lret
push
insb
xchg
leavew
lret
mov
sub
push
mov
dec
mov
pop
shlb
sbb
add
or
inc
mulb
fsubl
mov
pop
lret
cmp
addb
add
push
add
cmp
add
mov
cmp
sar
fldcw
inc
sub
push
pop
dec
ds
dec
push
pop
lock
jg
pop
cmpl
adc
iret
ljmp
in
jg
dec
push
jns
mov
dec
movzwl
mov
pop
es
gs
mov
nop
ja
jle
xchg
add
mov
dec
jmp
adc
sbb
shr
sub
sbb
push
push
scas
sbb
xchg
inc
inc
js
inc
push
shlb
add
xchg
pop
adc
mov
fld
jge
lock
fwait
add
mov
aad
adc
jg
cmpsb
es
movsl
xor
jne
dec
sbb
inc
and
or
test
adc
inc
xor
pop
pusha
dec
jb
adc
cwtl
or
mov
or
push
adc
sub
mov
xchg
data16
mov
and
inc
lret
pushf
push
sub
or
mov
imul
mov
pop
sbb
or
xor
dec
leave
mov
cmp
dec
lods
lret
sbb
loopne
pusha
adc
into
cmp
ja
sbb
sub
push
outsl
pop
nop
lock
clc
and
cmp
je
rolb
or
lock
loop
push
cmp
jne
cwtl
pop
sbb
inc
dec
and
dec
xchg
inc
and
or
int
lock
pop
dec
lock
mov
mov
or
and
fsts
jne
es
push
or
imul
xor
or
mov
add
mov
popa
lods
rcl
ret
lea
test
loopne
and
data16
add
xchg
add
sub
and
adc
sub
add
sti
jne
xor
shlb
cli
test
lcall
sub
jecxz
ljmp
mov
sbb
sbb
rclb
jp
mov
pop
mov
pop
xchg
lock
inc
sar
jmp
push
sbb
shlb
push
mov
loop
fmull
mov
hlt
adc
loopne
xchg
add
or
test
cld
aaa
dec
jmp
push
loope
add
jb
push
cmp
xor
test
ja
call
mov
mov
mov
add
rcrb
aaa
pushl
sbb
and
andl
lock
xor
and
push
scas
mov
lods
in
jmp
inc
mov
xchg
arpl
aaa
ds
push
or
mov
and
mov
movl
add
mov
mov
and
sbb
cmpsb
adc
xor
rclb
push
pop
pusha
dec
adc
mov
inc
xor
int3
adc
jnp,pn
or
mov
popa
mov
aaa
test
pop
push
cltd
stc
or
jmp
std
arpl
pop
pusha
jne
xchg
and
jl
jo
add
jns
jg
inc
pop
mov
mov
mov
add
add
fisubrs
ret
inc
js
adc
jo
inc
jecxz
ss
daa
cmp
mov
mov
pop
cmp
lds
inc
rorb
mov
movsb
jmp
inc
dec
adc
dec
mov
mov
lock
in
and
inc
mov
scas
mov
dec
filds
pop
pop
rcrb
ja
mov
rcll
push
add
xchg
hlt
bound
test
inc
xlat
shll
daa
push
sbb
pusha
inc
mov
fcompl
scas
and
pop
inc
inc
cmp
rcrb
lock
in
rcrl
mov
negb
add
xor
mov
jmp
in
inc
push
ss
adc
sub
mov
add
mov
into
pop
jg
fs
scas
cli
or
pop
and
test
cli
movl
scas
or
testl
mov
mov
dec
jecxz
adc
pop
add
sarb
adc
push
insb
mov
gs
bound
std
adc
sub
sbb
sti
cmp
add
lock
xchg
mov
call
insl
mov
push
sbbl
mov
push
aad
push
mov
adc
je
pushl
sub
xchg
inc
jmp
lods
mov
cmpb
mov
mov
inc
and
and
inc
and
push
xor
outsl
leave
xor
inc
popa
mov
xor
push
or
jnp
mov
movsl
lds
sub
sahf
jo
push
sbb
lock
mov
mov
inc
fsubp
or
or
or
jp
adc
ret
pop
mov
or
and
or
inc
push
testb
add
cltd
cmp
cs
dec
or
xor
cli
pop
pop
out
inc
jge
fisubrs
or
insb
sbb
add
jp
pop
cmp
mov
test
mov
inc
mov
sbb
and
push
lcall
push
pop
mov
and
lcall
push
roll
inc
ret
xchg
and
daa
jle
nop
lock
jmp
test
push
clc
jo,pn
mov
mov
or
xchg
xor
xor
push
ficoml
sub
jo
lret
lea
push
int
neg
rclb
div
movsl
adc
xchg
mov
jl
cmpb
pop
out
scas
addr16
xchg
sbb
rcrb
push
aam
pop
je
cltd
push
movsb
sub
and
sbb
jne
icebp
dec
cwtl
loop
cmpb
fdivl
or
pop
add
jecxz
xor
adc
xchg
xor
push
mov
jbe
lds
inc
pop
xchg
stos
imul
pop
dec
test
cwtl
jecxz
fcoms
adc
sbbb
sbb
loopne
aaa
leave
add
rol
lods
mov
jb
push
jle
sarb
test
pop
dec
mov
adc
fcomps
push
sub
xchg
dec
adc
mov
adc
rorb
add
addl
inc
pop
jle
popa
insb
and
jne
mov
arpl
xor
sub
ss
xchg
sbb
inc
pop
lea
mov
roll
push
cmpsb
jno
movsl
cmp
mov
sub
pop
jmp
inc
mov
and
mov
sbb
push
pop
xchg
push
aaa
or
sub
lahf
add
rorb
push
mov
xor
fbld
cmp
je
test
aaa
lds
mov
sbb
loop
sti
sbb
lods
inc
imul
in
mov
subb
jb
push
nop
mov
mov
mov
adc
and
lret
mov
jl
inc
adc
push
outsb
test
cmpsl
aam
inc
dec
push
pop
add
insb
pusha
and
push
mov
xchg
nop
dec
add
out
bound
mov
push
fiadds
pop
aas
sbb
movb
popa
adc
add
mov
lret
popf
or
cmpsl
daa
aaa
enter
sbb
sub
add
cld
mov
rcll
adc
mov
sub
mov
outsb
inc
add
xchg
add
mov
daa
fildll
test
push
push
pop
add
inc
sbb
cwtl
push
lock
mov
popa
jb
fs
mov
les
mov
push
xor
xchg
inc
fnstcw
push
je
adc
lret
mulb
pop
pop
lret
push
mov
mov
add
out
add
mov
xchg
bswap
push
nop
or
ret
cli
outsl
outsb
cmp
xchg
sub
mov
dec
sub
sub
dec
test
cmp
jne
jne
cmp
push
mov
mov
lock
inc
inc
addl
adc
push
xlat
inc
jbe
sbb
inc
pushf
mov
pop
adc
inc
push
xor
push
push
and
xor
rorb
lret
mov
inc
mov
adc
decb
sbb
adc
push
xchg
jmp
insb
call
jnp
adc
icebp
push
fst
mov
xorb
sarl
mov
loopne
xor
cmp
xor
test
or
stos
mov
xchg
pop
mov
inc
cmp
push
inc
loop
out
pop
add
jno
test
mov
imul
xchg
add
in
dec
fwait
or
or
mov
and
push
sub
aad
inc
push
push
cwtl
daa
xchg
lea
xlat
fstpl
xchg
xchg
and
sarl
xor
fildll
lea
je
jecxz
push
rclb
test
sub
mov
lret
dec
sahf
dec
sbb
insb
cmpsb
push
xchg
dec
bound
add
push
scas
sub
ja
movsb
mov
sti
jne
pop
push
outsl
pop
or
and
movsb
mov
or
shrb
int
arpl
test
aas
push
and
and
das
adc
stos
repz
or
test
mov
int3
add
adc
shrb
inc
mov
xor
insl
fs
addr16
adc
out
lock
push
movb
inc
mov
adcb
push
lret
cmp
cmpsl
bswap
in
jmp
fwait
and
push
add
push
test
iret
and
das
and
pop
sbb
dec
fsubrp
cwtl
inc
sbb
inc
adc
inc
outsb
iret
enter
mov
or
das
add
pop
rclb
xlat
int3
push
pop
das
enter
sbb
sahf
les
das
out
into
mov
inc
cmp
lahf
adc
mov
cmpsb
icebp
fmuls
inc
aaa
cmc
mov
shrb
in
cwtl
and
enter
inc
mov
lcall
or
jae
sbb
pusha
jo
sub
je
or
jae
push
lods
push
jae
dec
popa
sarb
push
xorb
jae
into
lcall
out
dec
dec
sahf
jnp
mov
jae
jae
imul
fists
jae
mulb
pop
lret
das
add
jae
or
jno
inc
out
pop
enter
jae
jae
mov
imul
loope
xchg
js
and
fwait
repz
imul
sub
jle
jnp
sub
push
stos
add
mov
out
roll
sub
icebp
dec
xchg
shll
dec
icebp
push
mov
xor
rclb
mov
push
in
aaa
or
and
adc
xchg
add
xlat
adc
fwait
fildl
and
dec
xor
mov
mov
mov
jecxz
rcr
fwait
imul
dec
or
xor
mov
cltd
cmc
sbb
arpl
pop
aas
outsb
and
and
mov
stos
aam
or
xchg
sbb
loope
imul
sbbl
out
push
or
xor
sbb
or
or
cmp
push
stos
xchg
outsw
repz
nop
into
cmp
and
mov
loop
subb
fbstp
in
mov
aam
popa
scas
out
jnp
je
adc
jmp
inc
lahf
stc
or
xchg
jge
imul
outsl
inc
sbb
sti
mov
mov
cmpsb
add
adc
jae
push
sbb
shrl
in
inc
pop
clc
js
ret
out
mov
cli
jle
mov
and
dec
xorl
mov
jns
xchg
mov
dec
lds
mov
mov
dec
mov
xchg
fsubrs
sub
cld
stos
stos
or
movl
mull
ds
lods
pusha
and
stos
or
jl
clc
popa
insb
into
sub
push
mov
stos
aam
jae
sub
or
pop
jl
mov
lods
inc
mov
cmpsb
dec
pop
stos
sbbb
push
push
stos
shll
outsb
jo
xchg
in
add
ret
pop
clc
add
out
bound
fwait
fwait
pop
adcl
cmp
hlt
dec
test
adc
shlb
pop
shr
idiv
xchg
inc
loopne
jne
cld
inc
push
mov
cmc
xchg
push
or
mov
xchg
jg
mov
mov
outsb
cs
lods
scas
mov
movsb
lcall
mov
sbb
mov
mov
mov
shrb
push
popa
mov
hlt
js
xchg
jl
je
inc
pop
outsb
and
cs
dec
cmpsl
scas
jo
pop
mov
movl
call
int
lods
push
or
jae
mov
rcr
fwait
out
ficompl
xor
or
xchg
cmp
jbe
cmpsl
cmp
negb
xchg
or
stos
frstor
xchg
sti
mov
scas
mov
and
xor
or
roll
or
enter
jecxz
loopne
pop
pop
xchg
pop
mov
or
dec
lock
jo
adc
pusha
mov
mov
lock
adc
xor
jle
sub
std
clc
clc
loop
add
jne
sbb
pop
aas
jle
lds
ret
xor
push
loope
arpl
mov
rcl
jg
pop
cld
clc
ljmp
cmp
add
adc
or
test
push
das
push
aam
mov
xchg
pop
sahf
or
ds
mov
dec
popf
xchg
popa
pop
or
xor
stos
sub
mov
aam
js
jecxz
mov
in
inc
dec
movsl
or
mov
aaa
movsb
and
sbb
stc
in
ss
push
loopne
xchg
jmp
cmpsb
andl
loop
pop
lods
out
rcl
mov
adc
call
dec
xor
and
push
imul
cmp
cmp
sbb
xlat
scas
fcompl
cmp
loopne
lds
fs
outsl
push
shrl
pop
or
inc
cld
gs
or
loopne
sub
dec
mov
and
divb
mov
sahf
loop
push
sti
push
xor
xor
andb
lea
add
adc
mov
stos
xchg
cld
mov
sub
or
shll
jae
jle
aaa
add
aas
clc
push
lods
xchg
pop
shl
jae
push
outsb
leave
and
out
dec
iret
xchg
aas
cltd
faddl
mov
lock
inc
cli
sbbb
js
mov
or
xorl
dec
jae
incl
or
lock
out
and
icebp
decb
cmc
imul
je
push
jmp
pop
xlat
mov
cs
pusha
or
xor
enter
lcall
add
xchg
sub
movsb
jb
mov
cs
cwtl
sub
mov
test
xorl
sbb
daa
xchg
xor
test
call
ror
hlt
test
je
int
push
adc
pop
leave
jecxz
cmp
push
mov
fnstenv
loopne
or
xchg
int3
push
push
loopne
out
loopne
or
scas
xchg
aas
jle
jg
mov
jb
pop
pop
out
cs
aam
jle
ret
push
es
sbb
push
data16
cmpsl
cs
out
scas
nop
push
or
rolb
mov
cmp
xor
pop
dec
movsb
repnz
in
push
orb
notl
ret
and
adc
cmp
ja
fstpt
push
scas
or
pushf
sub
jl
jle
jg
div
mov
jns
popl
insl
add
sub
fwait
lock
loope
enter
std
push
dec
xor
jecxz
rcrl
inc
sbb
or
mov
cld
lock
imulb
filds
mov
test
int3
jp
inc
add
inc
in
fisttps
pusha
pop
jl
rcrl
notb
jecxz
xor
aaa
xchg
sahf
jl
jl
pop
cld
jp
incb
in
outsl
add
and
or
jl,pn
fidivrl
cltd
dec
lcall
jle
hlt
loopne
pop
ds
mov
xchg
sub
xchg
aas
xor
aam
mov
test
and
mov
inc
lcall
xor
out
push
mov
js
sub
dec
mov
sahf
outsb
lret
adcl
sbb
outsb
fistps
decb
push
or
call
and
push
repz
icebp
rcrl
fidivl
cmovge
sbb
outsb
outsb
outsb
lods
test
les
sbb
adc
mov
lods
dec
and
test
lret
lret
int
int
mov
sub
out
out
in
inc
mov
int
aad
bound
add
int
lea
js
outsb
dec
test
les
sti
jge
jns
std
js
or
iret
jae
jae
mov
gs
or
sbb
jae
xchg
aad
notl
cmp
sub
insl
xbegin
inc
scas
mov
cmp
adc
pop
mov
js
aas
in
add
lahf
imul
loopne
bound
xor
cmpb
lock
dec
ret
divb
or
ja
orl
es
in
adc
or
icebp
jmp
fisubrs
or
jg
jecxz
rcrl
cmc
dec
sarb
jp,pt
ret
lods
lds
cli
push
ficomps
xor
cld
push
adc
js
jb
daa
sbb
adc
cmp
movsb
mov
inc
inc
aas
ds
aam
mov
in
outsb
dec
jnp
loop
jmp
mov
rcrb
sub
adc
lock
ss
jmp
or
pop
cmp
shrb
and
adc
ds
push
nop
outsl
pushf
mov
push
data16
mov
mov
fwait
jmp
sbb
push
mov
or
stos
dec
in
cmc
aam
xor
aam
mov
hlt
push
nop
push
outsb
ret
mov
jo
repnz
dec
loopne
or
mov
fldenv
push
xor
cmc
pop
dec
xchg
loope
out
sub
cmc
and
test
or
push
ficoml
sbb
cmpb
lcall
pop
lcall
ss
push
or
and
clc
insl
inc
add
popa
mov
jmp
shl
push
push
mov
cs
adcb
bound
shrb
loope
sbb
ficoms
ja
jo
loopne
push
call
test
sub
adc
xor
cwtl
push
cli
stc
icebp
xor
push
lcall
pop
test
clc
xchg
mov
push
push
cmp
pop
jo
push
push
pusha
stos
lds
sbb
cmpsb
mov
fmul
sub
xchg
and
jne
into
push
ljmp
inc
jns
dec
movsl
and
inc
data16
pop
mov
lock
adcb
jl
jae
lods
pop
pop
out
clc
pushf
subb
push
pop
push
jl
add
dec
aas
cltd
scas
hlt
fcoml
push
stos
ret
jp
add
sbb
cmp
lret
push
inc
mov
or
push
add
mov
mov
rcl
mov
push
jle
loope
push
sbb
cld
icebp
popa
pop
push
pop
adc
ss
addr16
imul
push
cmp
and
push
push
or
push
and
xchg
icebp
xlat
ret
je
test
push
mov
loopne
and
out
mov
hlt
jns
in
fildl
pusha
push
icebp
out
clc
imul
push
and
rcrb
inc
jns
and
in
jl
rcll
incb
cmc
jne
jecxz
cmp
pop
idiv
pop
mov
rclb
adc
add
ret
xchg
imulb
fcomps
jns
adc
jle
imul
cmp
push
sub
js
mov
gs
and
out
xchg
jmp
mov
into
lahf
push
push
push
jns
pop
pop
dec
adc
lods
decb
mov
adc
out
test
repnz
jns
iret
xchg
or
repz
out
push
sahf
dec
js
decb
out
jl
cmp
ret
scas
add
lahf
dec
cmp
dec
out
cmp
icebp
adc
push
decb
push
pop
std
xchg
inc
iret
repz
pop
gs
xchg
movsb
pop
loop
aad
out
mov
outsb
out
shl
cmp
xor
cld
dec
out
pop
aaa
and
sub
xchg
js
sbb
decb
repz
or
cwtl
mov
and
or
repz
stc
sbb
jp
mov
nop
rcrb
mov
dec
mov
add
ds
pop
decb
fdivrl
rcrl
and
mov
cmpsl
mov
orl
inc
sti
decb
and
pop
lcall
inc
adc
mov
and
jno
push
sahf
lret
mov
cmp
out
shlb
xchg
push
test
loop
cmp
clc
cmp
out
push
outsl
loope
loope
jns
xchg
jp
pop
into
addr16
and
push
inc
jno
repz
mov
dec
movsl
cli
cmp
dec
decb
into
pop
lods
xor
inc
jmp
clc
adcl
xchg
call
loope
push
jbe
jo
iret
and
negb
iret
decb
inc
fstpl
loop
inc
mov
stc
cmp
dec
decb
sbb
adc
scas
jbe
pusha
out
jmp
clc
int3
sbb
insb
into
loope,pt
push
xor
inc
scas
push
pusha
push
into
imul
dec
je
or
ljmp
clc
lock
inc
add
loopne
cmp
push
icebp
dec
cmpsl
lret
jp
insb
in
ucomiss
cld
mov
add
les
mov
in
or
insb
pop
out
mov
push
adcl
and
andb
ret
inc
scas
in
mov
push
push
pop
jo
cmp
adcb
and
iret
sub
jo
imul
arpl
mov
mov
subb
cmc
in
xor
aas
jl
jp
ja
lods
in
fcoms
stos
dec
dec
subl
add
lret
mov
and
imul
jbe
or
int
pushl
fiaddl
mov
push
cld
mov
lcall
loopne
add
aam
inc
and
mov
clc
jb
push
decl
popf
push
cwtl
rorl
xor
jecxz
js
popa
jbe
test
in
push
lcall
and
test
lahf
aaa
decl
add
loopne
leave
nop
stos
and
loop
push
fidivl
sub
add
jmp
push
cmp
jmp
adc
fdiv
pop
sarb
pop
jge
out
ss
inc
push
icebp
lret
mov
test
je
inc
test
sarb
push
mov
fistps
mov
pop
lret
add
rcll
repnz
icebp
dec
clc
ss
shrl
ret
cmp
adcl
aas
push
std
orl
test
push
mov
ss
sbb
rorl
fildll
subb
repnz
jg
ljmp
fidivl
mov
decb
push
fcos
cmp
ljmp
ljmp
test
loope
test
icebp
sbb
lods
mov
aad
dec
sbb
outsb
jl
decb
lcall
loop
f2xm1
ss
cli
cmc
je
inc
rorb
cli
push
jl
test
cs
mov
jne
sbb
fiadds
fstpl
mov
pop
shlb
or
nop
int3
fcoml
sbb
scas
rolb
loop
lcall
pop
fbld
imul
inc
ja
roll
inc
out
mov
cmp
cmp
dec
jp
mov
jmp
mov
enter
fisubrs
insl
sub
cmpsl
cmp
ret
mov
roll
icebp
gs
leave
into
push
xor
sbb
sub
cli
out
mov
pop
mov
inc
jecxz
shlb
push
scas
jmp
iret
sbb
push
cmp
cmc
shlb
popf
aad
icebp
jmp
cmp
leave
sub
sbb
and
pop
pushf
sbb
icebp
fmuls
pusha
insb
outsl
fcoml
fists
inc
sub
shl
mov
test
mov
leave
jbe
inc
mull
scas
mov
loopne
ss
inc
mov
mov
push
xchg
inc
fsubrl
pop
push
mov
pop
movsl
sbb
je
pop
push
mov
ljmp
sbb
mov
popf
lock
jl
xchg
out
hlt
fmulp
dec
clc
sbb
lret
xchg
xchg
incb
cld
cmp
inc
mov
sub
aam
hlt
loope
mov
mov
sub
lods
cmp
sar
movhps
ljmp
mov
enter
loopne
mov
inc
fidivrs
pop
push
data16
sbb
fs
je
inc
fcoms
daa
adc
lds
ret
xchg
mov
cltd
rep
push
xor
cs
and
loopne
jo
cmpb
outsb
ret
pop
sarl
push
scas
push
mov
pop
push
aas
sub
addr16
sbb
aad
outsl
inc
lcall
fsubrs
leave
xchg
std
js
mov
adc
cmpsl
ljmp
adc
sbb
or
add
sbb
in
pusha
jmp
or
sbb
mov
stos
test
mov
int3
xor
pop
push
cmp
ja
mov
jecxz
cli
mov
shlb
xchg
pop
xchg
fimuls
pop
pushf
add
test
cmp
getsec
pusha
lahf
lret
and
cmpsb
adc
push
mov
and
das
icebp
sub
jbe
push
or
dec
push
cli
cmp
ret
ss
fbld
jbe
mov
xchg
dec
sbb
pop
fisttps
incb
adc
inc
hlt
rcrb
rorb
fisubrl
ficomps
mov
pushl
mov
push
andl
dec
ret
outsb
pop
add
ret
into
jb
xor
fcmovb
jecxz
andl
lcall
decb
xchg
gs
sbb
fmul
sub
and
push
adc
pushf
stos
cmp
scas
mov
rcll
fiadds
outsb
scas
ret
sbb
jmp
dec
das
insb
popa
leave
sahf
jmp
dec
lods
and
into
xor
jl
push
aas
sbb
mov
pop
add
lock
lds
sbb
lock
adc
cmp
xorl
cld
sbb
clc
icebp
push
adc
lods
insb
nop
mov
ds
xor
lret
pop
lods
jne
ljmp
adc
iret
aam
jb
mov
ss
mulb
xchg
or
inc
push
decl
pop
andl
dec
lahf
nop
fdivp
stos
aas
mov
ret
or
lret
add
es
je
mov
pusha
xchg
cmpsl
lock
cmp
incb
jae
shl
cmp
push
dec
std
loope
sahf
stc
lahf
xor
dec
or
mov
shrb
int
les
cmp
mov
sbbl
dec
test
mov
pushf
cli
popf
xchg
mov
mov
adc
sbb
lds
xchg
push
mov
jge
icebp
jmp
inc
fs
out
bound
popf
cmp
fucom
mov
loopne
jmp
cmp
mov
shll
loop
sbb
or
sub
in
pop
pandn
aaa
cmp
sahf
jo
inc
add
pop
ficoms
mov
or
out
and
mov
loopne
cltd
xchg
mov
mov
je
cmc
ljmp
sub
adc
push
decb
dec
pop
out
mov
cmp
mov
icebp
insl
mov
cmp
jb
lock
rorl
lods
xor
movsb
gs
ss
daa
lahf
in
cmpl
add
rclb
loope
push
popf
incl
xor
roll
jl
outsb
fbld
stc
sbb
jp
xor
mov
rcll
sahf
mov
add
mov
fidivrs
rolb
cmp
outsb
fcompl
push
dec
jmp
rolb
mov
loop
and
dec
jl
adc
and
mov
mov
dec
sgdtl
jle
push
int3
fdivr
inc
dec
cmp
rcrl
lret
shlb
mov
add
popf
xorb
pop
mov
stos
pusha
cmp
ror
mov
fldl2t
rorl
ret
lods
add
call
in
stos
shrl
cmp
mov
roll
pop
loopne
sahf
incw
rol
mov
lcall
out
dec
cld
cmc
hlt
add
cmp
lods
cs
out
pop
pop
adcb
pop
add
pushf
jge
add
int3
push
sbb
js
adc
pop
test
scas
ss
xchg
dec
loopne
out
sarb
ret
mov
test
hlt
shrl
mov
push
jle
ds
push
sbb
mov
out
clc
out
inc
in
xchg
ljmp
shlb
ret
repz
push
mov
add
add
stos
out
roll
stos
sub
inc
add
inc
stos
push
stos
outsb
or
addb
sub
sub
fisubrl
dec
mov
stos
mov
pusha
and
adc
push
stos
inc
fwait
adc
int3
pusha
add
ljmp
push
stos
cld
shlb
cmp
clc
jle
push
adc
sbb
or
pop
loop
iret
mov
cmp
jge
mov
jo
nopl
xor
mov
rorl
push
xor
loope
ffreep
xchg
lods
mov
mov
popa
mov
cli
icebp
mov
mov
subl
jge
xchg
dec
lock
icebp
mov
mov
and
lcall
sub
jns
mov
aad
icebp
inc
adc
mov
inc
cmpsl
ss
jp,pt
pop
jl
icebp
test
mov
or
or
push
mov
and
add
sub
les
cli
mov
dec
push
js
push
fwait
cmp
cmpsl
stos
pop
loop
mov
sub
shll
sbb
adc
mov
xor
bswap
pop
lock
clc
push
int
gs
stc
and
fsubrp
shll
dec
jbe
mov
out
testl
cli
add
dec
movsl
ficoml
rcll
pop
push
cwtl
daa
in
add
das
ds
push
shll
sbb
nop
popl
push
adc
fs
ds
cli
sbb
mulb
aaa
rcrb
jno
cmpsl
adc
dec
lret
pop
or
jge
fninit
cmp
adc
cmp
add
sub
lahf
hlt
xchg
jno
mov
fucomp
mov
scas
pop
jle
push
movsb
mov
das
add
xor
idivl
scas
ret
xchg
mov
dec
mov
icebp
xor
jns
pop
or
dec
adc
cmp
and
inc
inc
or
mov
call
sbb
cmpsl
inc
aaa
aaa
mov
add
aas
shll
dec
mov
aaa
aaa
push
imul
mov
aaa
aaa
test
cmp
es
add
aaa
aaa
aaa
add
jne
xchg
push
js
nop
outsb
outsb
ds
stc
jmp
std
pop
or
sbb
outsb
outsb
outsb
mov
push
sub
shlb
js
add
mov
fs
js
out
adc
xchg
inc
shlb
jp
inc
ljmp
or
je
cmp
in
adc
fcoms
push
out
mov
add
mov
jbe
sarb
sbb
psadbw
dec
mov
ret
loopew
dec
dec
stos
cld
adc
int
aas
pop
cmp
push
push
sub
scas
out
sbb
stos
setl
push
insl
insl
lcall
push
inc
imul
or
push
cld
mov
add
pusha
rcrb
icebp
jmp
xor
out
xor
subl
sub
dec
ds
jl,pt
xor
xchg
stc
pop
cmp
add
hlt
call
fistps
lods
rcrb
xor
cwtl
cmp
mov
mov
xchg
sbb
xor
jge
ret
out
mov
xchg
jl
stos
cmp
aas
cmp
mov
adc
cmp
je
cli
out
pop
cmp
and
jle
add
loopne
clc
loop
das
xchg
sub
lcall
mov
cmp
and
adc
movsb
push
rorl
push
cmp
decb
sahf
jecxz
loopne
xchg
add
or
movb
mov
cmp
push
popf
enter
mov
je
mov
sub
pop
xchg
adc
jle
jg
rcrl
enter
pop
mov
shrl
call
mov
sbb
std
push
xor
xor
or
enter
sbb
add
daa
sarl
push
push
push
fdivrs
clc
xchg
mov
icebp
sarb
mov
add
inc
inc
xor
sar
clc
fwait
add
fbld
out
or
lods
mov
cmp
add
sahf
dec
xor
ja
mov
xchg
push
popa
icebp
loop
rcll
aas
ds
filds
dec
add
ja
je
imull
jecxz
push
jle
nop
nop
adc
push
push
icebp
jge
out
rorb
fcomps
shl
jmp
popf
sar
sub
lock
and
jo
mov
cmp
out
push
cwtl
and
sarb
mov
fcoms
aaa
jle
jp
lcall
push
dec
divb
lea
mov
movsb
fadd
cmp
out
dec
add
shll
inc
push
les
repz
in
aad
cmpsl
mov
inc
je
and
cmp
mov
cwtl
and
lret
ret
mov
push
push
dec
test
fsubrs
sti
call
pop
adc
mov
dec
pop
insl
jl
ficoml
sbb
jle
shrl
mov
jle
shll
imulb
fimull
cld
push
repnz
or
aas
cs
push
adc
xchg
hlt
shrb
mov
mov
adc
rol
js
repnz
js
mov
mov
outsb
xor
movsb
js
push
jbe
popa
xchg
mov
dec
loope
aad
hlt
cmp
jle
mov
ljmp
test
inc
mov
push
jl
scas
mov
mov
lock
lock
push
mov
inc
adc
mov
std
xchg
jle
shrb
add
xor
bound
ja
jle
pop
dec
dec
les
in
xor
call
ficompl
add
dec
movd
sahf
data16
and
aam
out
shr
aad
pusha
daa
sub
pop
daa
movsb
ds
inc
pop
insb
rcrb
pop
scas
sub
pop
aas
cvtpi2ps
stos
sbb
mov
inc
jo
repnz
ret
mov
insl
jb
xor
es
repnz
push
jle
jg
insb
dec
enter
mov
test
mov
je
insl
idivb
jle
mov
decb
add
sbb
cli
aam
sahf
dec
xchg
add
mov
rclb
jmp
insb
int
mov
outsl
stos
lea
lahf
push
jle
das
pop
mov
lods
es
cmpsl
ja
pop
adcl
sti
ljmp
into
nop
rclb
andb
inc
jne
mov
or
fisubl
push
jl
push
xor
daa
andl
push
mov
insb
imul
mov
sbb
lock
xchg
outsb
mov
inc
pusha
rolb
xchg
insl
imul
clc
insb
outsb
and
adc
faddp
lods
dec
stos
scas
mov
insb
lcall
icebp
loope
mov
inc
cwtl
cmpb
cmp
hlt
mov
mov
data16
push
xor
out
xchg
inc
sbb
cli
pusha
outsl
sbb
mov
xor
outsb
shrb
sti
roll
js
je
pop
cmc
bound
sub
test
pop
lods
rorb
mov
call
pop
jg
clc
mov
sub
fildl
aaa
pusha
daa
adc
jl,pt
cld
je
jmp
add
sarb
cmp
sahf
xchg
or
jbe
aam
lret
push
dec
sbb
test
cmp
push
push
pop
cld
push
fimull
scas
cli
cmpsl
out
push
loopne
pop
pop
mov
pop
aad
jo
data16
mov
adcb
aad
mov
sahf
pop
sbb
adc
ficomps
jg
cli
xchg
test
cmp
dec
push
jb
add
test
rclb
push
loope
sub
or
mov
insl
or
outsb
loopne
push
xor
adc
or
jo
add
sti
lods
lcall
clc
xlat
loopne
aas
insl
scas
imul
sti
mov
xchg
icebp
and
mov
lods
add
inc
lahf
jle
shrl
push
das
fimuls
aas
pop
jl
mov
faddl
mov
lret
scas
jno
or
in
push
jb
push
call
or
je
int3
xchg
xor
push
fcomps
loopne
or
repz
and
loope
clc
jmp
out
push
jo
push
test
push
addr16
jge
dec
push
enter
insb
mov
imul
cli
arpl
or
mov
mov
fsubrs
clc
cld
out
mov
xor
cmc
jb
xchg
push
mov
push
sub
mov
mov
out
loopne
jo
out
pop
mov
mov
imull
adc
sbb
mov
cmc
loopne
std
in
in
or
lahf
les
pop
clc
push
adcl
dec
nop
insb
cmpsb
pop
clc
mov
les
dec
mov
sub
lods
scas
rol
shrb
clc
mov
aas
xchg
ss
cmpl
pop
sub
xor
pop
loop
cmovo
js
sub
dec
stos
push
xor
or
xchg
leave
or
fsubr
sub
pop
das
mov
mov
fdivr
push
loop
cli
adc
xchg
scas
lret
mov
jbe
popw
pop
dec
mov
aad
call
test
mov
lds
or
dec
out
outsb
jge
ljmp
lret
mov
sbb
arpl
push
jl
and
pushf
out
mov
pushf
push
and
pop
lahf
ss
test
sbb
or
lods
les
decb
cltd
shlb
add
xor
jle
push
cmp
lret
push
mov
fidivrs
add
ret
and
adc
ret
rorl
xchg
jno
xchg
mov
loop
in
or
mov
xor
in
into
js
pop
js
ficoml
adcb
inc
jmp
push
pop
fcmove
je
imul
add
fnstsw
pop
xchg
push
and
lods
hlt
call
popa
std
mov
mov
mov
push
jl
sbb
enter
ja
sarb
cli
mov
cmp
push
dec
lret
push
fdivrs
cmp
hlt
jle
fsub
sbb
cltd
mov
fcmovb
es
cld
sub
pop
mov
push
aaa
push
mov
jge
and
cmp
mov
addb
mov
out
mov
adc
sbb
jmp
int3
sbb
rolb
jecxz
rcll
sbb
mov
lock
rorb
js
push
call
lock
outsb
push
push
subb
cmp
jl
pop
cmp
push
sub
loopne
pop
and
in
jge
xor
movsb
jnp
xlat
xchg
les
in
in
mov
cli
add
xor
xor
ret
and
adc
jo
test
mov
jns
js
loope
ljmp
stos
xchg
aas
je
lahf
lods
or
sbb
xlat
mov
lods
cmpsl
clc
push
mov
add
jp
mov
mov
pop
mov
pop
jl
cmp
stos
xchg
cmp
cli
dec
rol
mov
dec
scas
inc
pop
jl
in
sub
pop
fisubl
xor
setnp
add
push
cmp
inc
mov
sbb
sub
sahf
comiss
fstp
popa
daa
adc
inc
ja
push
test
pop
xchg
loopne
mov
or
idiv
xchg
push
push
out
leave
ds
cmp
inc
and
mov
pop
icebp
sub
xlat
repnz
movsl
sbb
addl
pop
js
xchg
fld
aam
test
xchg
lds
mov
cmp
loopne
add
jbe,pt
cmc
mov
imul
pop
jp
xchg
faddp
mov
sahf
ds
aam
dec
pop
jl,pt
dec
pop
xchg
divb
mov
push
jecxz
mov
xor
xor
test
sub
aaa
jecxz
mov
ret
fcmovnbe
cmpb
lods
rol
or
adc
jecxz,pt
aad
pop
imul
mov
dec
and
pop
inc
mov
dec
xchg
adc
fmulp
bound
test
xchg
pushf
add
fisubrs
sub
xlat
xor
inc
clc
movsb
jb
aam
adc
jp
out
jle
push
jl
or
push
jl
push
mov
cltd
loop
push
sbb
je
popf
xchg
sahf
pop
in
cmp
das
inc
xchg
mov
ljmp
sbb
mov
mov
inc
jp
sub
roll
adc
ds
xchg
daa
sbb
jle
xchg
lock
es
sub
pop
adc
hlt
mov
loop
cmp
dec
aas
jl
push
loopew
inc
add
xor
cmp
lret
push
mov
and
jle
add
movsb
pop
xchg
xchg
lcall
inc
shrb
enter
and
loopne
and
mov
ljmp
push
adc
adc
rolb
cmp
in
push
ret
sub
xlat
inc
std
mov
push
sahf
fisubrs
cwtl
ss
xchg
shll
lds
adc
rorb
push
push
inc
pop
pop
das
jle
add
pop
sbb
inc
and
loopne
jno
lock
mov
movl
mov
loop
fwait
cs
out
mov
call
inc
scas
dec
or
je
sahf
cmp
mov
push
lret
inc
pop
aas
inc
xor
pop
popf
jbe
cmp
push
jl
mov
fnop
stc
cmpsb
loopne
push
insb
push
xor
adc
or
cmpsb
stos
lock
cmc
mov
jmp
mov
jle
pop
pop
jl,pt
jp
neg
jle
idivb
rcl
cwtl
push
or
and
lock
in
push
shl
and
sub
in
mov
sub
and
fcmove
cmp
cwtl
xchg
or
lahf
aas
movsb
sbb
lods
loope
jl
mov
out
jbe
push
push
push
insl
adcl
mov
dec
shlb
iret
loope
mov
ds
mov
in
jge
adc
cmpsb
andl
popf
cwtl
sbb
add
test
pop
add
loop
cmp
cmc
sbb
jns
mov
mov
push
ljmp
cmp
mov
ffree
pop
jp
inc
fimull
push
subb
ss
rorl
jns
cmp
fxch
sub
sub
testl
test
enter
es
mov
in
mov
mov
xchg
cltd
es
cmc
rorl
sub
sub
jecxz
and
mov
rorb
divb
in
cli
mov
mov
mov
add
test
mov
jns
rclb
in
in
xchg
aas
pop
lods
jo
jbe
push
pop
scas
test
mov
ss
nop
mov
fisubrl
pop
cli
aam
xchg
test
clc
jecxz
jne
fimuls
lock
outsl
loopne
pop
sbb
call
loopne
loop
mov
or
ret
cltd
pop
xor
pop
fwait
loopne
stos
scas
sbb
mov
jge
ds
push
aad
pop
adc
scas
lcall
mov
sub
dec
test
les
in
sub
ret
ret
stos
out
inc
test
cmpsb
adcb
inc
out
ret
ret
imull
int3
cld
mov
in
int3
insl
mov
rcrl
scas
jbe
cld
cmpl
test
sbb
mov
sbb
or
cmp
jl
lds
lret
jp
dec
fdivrl
clc
jno
ja
sahf
add
and
xor
lock
jnp
jo
jno
outsb
xor
sahf
repnz
loop
out
jb
pop
pop
arpl
push
dec
sti
lret
and
test
ret
mulb
lock
adc
inc
filds
mov
stos
ficompl
aad
insb
cmp
ljmp
mov
cmp
push
mov
mov
jo
push
jo
pop
sbb
mov
inc
cmpsb
push
and
test
add
and
cmpsl
jno
xlat
divl
or
std
lds
ljmp
shrb
push
jnp
les
cmp
push
shlb
mov
clc
sub
iret
clc
lock
inc
es
xor
cmc
call
in
and
jnp
adc
in
loop
js
les
pop
jle
clc
cmc
rclb
mov
sub
mov
cli
sbb
ss
cmp
pop
out
in
mov
icebp
xor
jecxz
push
add
les
jecxz
cmp
push
sub
jp
clc
jno
xor
xchg
cmp
mov
idiv
pop
mov
insb
fldt
mov
inc
int
test
aaa
loopne
sub
out
xchg
and
dec
jl
cmc
mov
andl
cmp
cld
mov
push
dec
mov
data16
ja
shrb
mov
push
clc
hlt
cmp
push
fisubrs
fdivl
loop
icebp
lds
pop
inc
mov
xchg
cmp
sub
mul
add
add
push
sahf
int
inc
or
outsl
movsb
pop
pop
jo
and
sub
xchg
aad
ret
scas
out
stos
popf
adc
movsl
aas
mov
rcll
adc
mov
jle
icebp
jmp
cmp
out
cmp
sbb
loopne,pt
cmp
xchg
push
cmc
and
movsb
rcrl
fadd
test
xor
mov
adc
insb
nop
hlt
and
add
or
loope
movsb
jns
filds
je
out
shrl
bnd
shll
xor
cli
loop
pop
sbb
jb
mov
mov
cmp
add
gs
mov
in
stos
nop
scas
cmp
pop
mov
cs
cmp
rorl
lods
in
add
icebp
lds
dec
push
inc
dec
jl
stos
mull
mov
xor
and
rcrb
into
loope
mov
mov
adcl
fistl
adc
push
es
stc
and
adc
sub
je
imulb
repnz
incl
xor
sahf
and
ljmp
pop
jge
in
loop
addr16
cmp
push
cs
iret
xchg
es
pop
pop
ret
inc
sbb
jle
fildll
adc
pop
das
jo
mov
mov
or
dec
push
in
pop
jo
lock
lea
pop
les
ds
pop
sbbl
ret
out
sahf
cmpsl
cmp
cs
mov
js
or
mov
out
call
xchg
cmp
xor
loopne
shll
movaps
mov
fidivs
rcr
jge
roll
push
dec
in
shll
sahf
mov
clc
pop
adc
mov
cmp
dec
scas
and
mov
push
loop
in
and
in
lock
outsl
xor
insl
aas
sbb
in
shrb
maxps
fcomp
hlt
add
push
loop
adc
add
pop
out
ficoml
fsts
clc
mov
sbb
fistps
mov
mov
adc
jge
loope
out
mov
das
xchg
cli
lock
pop
jg
xchg
mov
cmp
int
out
push
sbb
jecxz
cmp
dec
data16
jle
jne,pn
add
cmp
outsb
pop
xor
xor
jbe
decl
sbb
adc
mov
xchg
and
or
icebp
pusha
outsb
add
xor
popa
sub
call
pusha
js
loope
pop
shlb
sub
in
xor
cmc
or
js
jmp
push
add
testb
pop
mov
lret
and
mov
push
out
pop
shr
sti
or
jmp
adc
mov
arpl
fcom
pop
xchg
jp
mov
xchg
outsl
lock
jne
pop
orl
inc
sub
sub
jl,pn
orl
in
sahf
in
rclb
sbb
push
les
shl
std
cli
ds
or
cmp
adc
jbe
inc
pop
ljmp
mov
lock
and
lcall
dec
cmp
push
or
mov
pop
lahf
cwtl
outsl
mov
subl
mov
cld
jo
out
js
popf
pop
cs
mov
mov
inc
lea
ficoml
pop
mov
ficompl
cmp
ja
xchg
and
pop
jns
push
jb
leave
pop
js,pt
dec
jecxz
loopne
sub
push
jmp
aad
scas
punpckhdq
fimuls
lds
repnz
adc
cwtl
fs
lock
dec
loopne
cmp
pop
push
std
clc
xorb
dec
nop
repnz
push
rol
cmpsl
pop
or
push
loop
lods
test
cmp
jge,pt
lock
mov
and
lock
jp
jno
mov
inc
sbb
add
add
or
pop
mov
fdivl
jne
pop
das
push
dec
cli
cmp
inc
loope
fwait
jno,pt
loope
inc
insb
or
sarl
dec
loopne
shrb
adc
dec
jmp
bound
or
loopne
sub
insb
mov
pop
xlat
movsb
js,pt
lods
sbb
pop
or
cmp
mov
xchg
je
adc
hlt
or
xchg
push
fildll
ret
rcrl
push
pop
sbb
pop
imul
fdivp
mov
cmp
push
mov
roll
shlb
lods
sti
mov
jp
rol
inc
mov
xor
jle
jnp
jle
fisubs
pop
mov
push
out
push
int
fistps
add
in
rcl
out
test
and
aaa
inc
and
pxor
cmp
jecxz
sahf
jecxz
dec
dec
aaa
bound
mov
xor
test
mov
cmpl
and
or
orb
adc
inc
push
inc
aaa
mov
sbb
fs
in
push
repz
sub
rcl
aad
xchg
popa
inc
stos
pop
int3
mov
mov
aam
mov
fdivrs
mov
mov
pop
jge
lock
call
aas
ds
and
push
inc
imul
data16
mov
pushf
adc
in
cmp
lock
cmp
push
mov
loopne
adc
loopne
mov
fimuls
aad
shlb
aaa
aaa
aaa
add
cmp
and
jge
aaa
jns
repz
repnz
push
cmp
cmp
jmp
add
jge
mov
aas
push
jno
out
loop
idiv
ret
xchg
xchg
movsb
pushf
data16
je
xchg
ja
cmp
loopne
fldt
in
cmp
pop
dec
sahf
xor
dec
jae
loop
fmuls
dec
cmpsl
lahf
loopne
enter
xchg
push
add
pop
das
out
dec
icebp
jecxz
clc
insb
mov
sub
jg
pop
aas
jl
lock
jecxz
movsb
jge
in
push
sub
loopne
mov
int3
push
jbe
fisubrl
lcall
vcmppd
movsl
push
mov
loopne
paddb
jge
cmc
sahf
aad
mov
js
js
aam
xor
push
jbe
mov
sub
cmp
jecxz
std
inc
inc
lock
xor
dec
xor
mov
jp,pt
jp
fcompl
sbb
dec
cld
js
mov
int3
stos
in
loopne
fisttpll
sahf
pop
int3
call
test
sti
sbb
mov
movsl
out
mov
dec
mov
pop
sahf
xchg
inc
addl
gs
pop
push
sbb
mov
pop
fcmovb
aam
aas
dec
fsubr
add
add
mov
xchg
loope
cmp
fdivp
pop
push
mov
lret
fcoms
lds
pop
imul
loopne
fbstp
dec
pusha
xchg
xor
lds
sbb
fs
xchg
push
inc
out
mov
inc
cmp
mov
outsl
icebp
jmp
rorb
call
mov
mov
dec
lret
sub
sbb
shrl
jecxz
loopne
scas
pop
fs
xchg
aad
dec
mov
mov
mov
mov
scas
pop
cltd
xorb
clc
cli
ds
aas
stos
adc
lock
js
inc
data16
mov
mov
jp
cmp
sub
sbb
xor
into
jp
jp
mov
xor
inc
inc
jbe
out
aad
inc
and
and
insb
xorb
test
pop
rolb
pop
int
jp
jmp
xor
out
fdivs
bound
jno
sbb
push
iret
lcall
mov
ss
add
es
push
fidivrl
lahf
jle
mov
dec
push
mov
sub
inc
bound
ljmp
push
pop
mov
push
cltd
adc
mov
rcrb
fmul
sar
scas
sub
mov
jo
jp
imul
aaa
test
lock
adc
mov
sbb
sti
jle
pop
sbb
ret
dec
cmpsb
sub
push
jmp
repz
sbb
icebp
cmp
sarl
fistpl
jmp
pop
aas
pop
fidivl
sub
testl
inc
lcall
loopne
jg
ss
sahf
xchg
pop
mov
push
subl
in
mov
dec
sbbb
lahf
jl
sub
sbb
and
notl
pop
mov
push
popf
cmc
mov
mov
jmp
ret
stos
jo
call
sub
movhps
xchg
ja
rcl
outsb
adc
xchg
ret
cmpsl
sbb
outsb
inc
in
rorb
cs
pop
rclb
xchg
cs
jl
loope
jl,pn
or
dec
test
cs
orb
adc
lods
dec
cmpsb
sarb
loop
rcll
sbb
sbb
lret
or
hlt
ret
cmp
sub
and
or
dec
cli
test
jecxz
add
not
sahf
push
cmp
or
ds
jge
jecxz
out
inc
mov
adc
push
and
test
loopne
inc
jb
roll
loope
sahf
fisubrl
sbb
or
or
push
aas
pop
cld
xchg
and
cli
ss
ret
xchg
les
jle
xchg
in
lods
cmc
fcmovbe
jl
hlt
ds
gs
pop
andb
cmc
jecxz
clc
addl
pop
jae
aam
loopne
lock
cmpsb
pop
pop
ficoms
xchg
loopne
call
out
je
sbb
jns
fcmovnu
jle
push
nop
fistps
fisubrl
lea
jle
fwait
icebp
fxch
jle
nop
loopne
jmp
sub
jo
aaa
fdivrp
sub
clc
adc
test
cmp
xlat
test
pop
ljmp
sbb
int3
mov
movd
ja
xchg
add
mov
das
call
into
xchg
mov
fdiv
ljmp
mov
test
add
dec
dec
cmp
adc
ja
push
cld
hlt
pop
xchg
call
xor
cltd
cli
fadds
pop
push
sbb
dec
pop
bound
idivl
mov
cmp
pusha
cmp
mov
insl
push
jmp
enter
shrb
repz
cs
pop
adc
ret
add
jmp
stos
das
dec
test
push
sbb
pop
lret
scas
in
adcb
inc
jp
jecxz
push
sbb
test
add
mov
icebp
jecxz
ljmp
cmp
outsb
inc
pop
jge
ljmp
mov
cmp
jl
push
pushf
aam
jl
jno
ds
ret
inc
stos
cmc
cmp
inc
jb
inc
out
andl
imul
jl
pop
lea
or
insb
jp
jecxz
test
test
in
cmp
fistpll
rclb
mov
xchg
icebp
jnp
bound
fidivs
pop
xchg
mov
xlat
mov
hlt
or
test
loopne
mov
inc
pusha
sahf
js
push
rol
std
mov
sbb
sbb
mov
mov
clc
je
ds
fimull
test
mov
adc
push
dec
adc
pop
clc
mov
ret
sub
js
cmp
mov
jl
cmp
or
scas
sbb
ljmp
add
pop
lea
jp
mov
fidivrl
xlat
ds
cmpsl
pop
pop
jle
cmp
or
repz
xchg
in
inc
mov
mov
mov
cwtl
mov
cltd
enter
lds
xchg
xchg
cld
outsl
xchg
into
jns
mov
push
or
push
int
mov
and
inc
push
loopne
push
jl
and
push
push
push
ds
cmpsb
cld
and
push
push
xchg
cmp
cmpsb
or
xchg
arpl
ds
lahf
outsb
and
decb
push
cmp
out
pop
dec
pushf
dec
shlb
js
adc
jle
jne
fiadds
mov
adc
push
dec
mov
aam
xchg
popa
push
ds
mov
pop
mov
cmc
ljmp
test
cmpsb
stos
shl
imul
out
test
cmp
mov
in
inc
sub
cli
jge
or
aas
sbb
fmuls
loopne
outsb
mov
in
mov
jge
push
loope
jbe
sbb
ret
scas
pop
jle
mov
jle
push
repz
enter
movsl
or
push
xor
clc
mov
movsb
add
loop
cmp
add
fimull
mull
cmp
mov
cld
jo
sub
dec
sub
lock
jmp
pop
xchg
scas
sub
movb
sbbl
iret
sahf
jl
mov
bound
jle
repz
lods
dec
xor
js
rclb
add
mov
test
xor
push
hlt
sub
jb
or
adc
js
xchg
or
ja
shll
pop
cltd
mov
in
aas
mov
add
jb
test
mov
jmp
fadds
xor
lret
aad
mov
mov
mov
loopne
shll
repz
sub
cli
rolb
testl
xor
pop
mov
dec
les
xchg
mov
mov
ret
xor
dec
jns
sub
gs
jp
js
pop
sub
xchg
mov
pop
sbb
jae
sahf
test
push
xchg
das
lds
ds
orb
or
mov
fs
and
cmp
inc
icebp
sbb
loope
mov
stos
mov
popf
push
ja
cmp
push
mov
xlat
push
mov
pop
pop
shl
jl
pushf
fidivs
xor
es
xlat
xor
addb
xchg
sub
adc
jbe
cmpsb
subb
pop
adc
pop
mov
mov
out
sub
pop
lods
outsl
mov
add
sbb
mov
xor
push
addr16
fstl
mov
jg
cmp
in
or
std
pop
and
push
dec
jecxz
and
mov
inc
mov
ret
pushf
push
pop
mov
mov
cli
out
int
cld
js
push
loopne
fcoml
rolb
push
popf
test
test
mov
sub
lock
pop
cmp
add
inc
inc
push
jp
sahf
add
mov
lock
jle
jecxz
xchg
stos
dec
push
cwtl
hlt
jecxz
movsl
movsb
jno
xchg
repnz
cmp
cmp
xor
dec
sbb
mov
das
mov
lcall
pop
push
rolb
sub
inc
stos
lahf
mov
adcb
adc
mov
xchg
mov
jbe
jmp
hlt
pop
pop
aam
js
jle
push
loopne
in
mov
ja
sarl
popa
pop
pop
test
test
adc
push
stc
call
adc
movsb
orb
in
and
aaa
loopne
out
inc
lods
cltd
add
insb
push
jg
mov
xor
test
xchg
movsb
dec
push
cmp
push
mov
xor
fcoms
and
or
jne
pop
mov
pushf
sahf
cmpsb
xor
adc
setne
add
rol
or
les
ss
out
imul
js,pt
jp
jbe
push
mov
mov
sbb
out
sbb
jge
call
push
mov
cmpsb
mov
mov
sarb
lock
cmp
push
and
rolb
aaa
and
lods
shr
loop
call
imul
bound
and
rclb
ret
fistpl
mov
jo
mov
mov
push
adc
xor
rcrl
sbb
adc
pop
cmp
and
das
icebp
ljmp
inc
movsb
adc
xor
fwait
notb
add
call
into
cmp
cmp
jae,pn
pop
cmp
out
aad
push
sarb
push
jmp
pusha
pop
xchg
icebp
js
mov
mov
push
or
call
mov
and
pusha
add
test
nopl
call
lods
fisubrl
cmp
shrb
mov
jmp
mov
sbb
pop
push
add
mov
fcmovb
xchg
pop
mov
aas
push
call
dec
sub
jp
jl
xchg
adc
mov
push
cmp
outsl
xchg
fdivrs
negl
adc
ret
sub
pop
jle
ret
or
sbb
scas
mov
xchg
into
ss
dec
jle
std
icebp
sbb
xchg
jbe
adc
sub
xor
rorb
das
stos
in
push
dec
ds
mov
aas
mov
cmp
loop
clc
dec
fisttpll
mov
ss
cli
icebp
fiadds
testb
xchg
ret
in
cmp
leave
fcom
imul
xchg
mov
mov
clc
loope
loope
push
andl
jo
movsb
inc
aam
xor
stos
dec
jl
jmp
cmp
mov
stc
data16
push
jp
mov
imulb
in
loope
fs
sahf
dec
xchg
data16
mov
mov
dec
shl
scas
int
insb
or
mov
or
int3
or
hlt
jnp
inc
dec
mov
repnz
xchg
clc
ds
inc
adc
aaa
shr
nop
clc
not
loop
and
pop
jo
std
sbb
or
and
pop
mov
mov
into
sahf
jle
sub
cmpsl
lods
ret
mov
aas
pushf
cmp
xor
xor
add
pop
movsb
iret
repz
movsb
ss
mov
xor
mov
mov
mov
div
push
loope
add
lods
adc
push
movsb
mov
xchg
fdivrs
jle
sub
sbb
mul
rcrl
adc
dec
out
push
and
idivl
std
insb
mov
loop
adc
cmc
test
xor
aaa
ror
arpl
nopl
jle
dec
xchg
jecxz
shrb
jno,pn
mov
out
inc
nop
clc
xchg
repnz
push
nop
cmc
call
imul
lods
cmpsb
cld
cmp
mov
inc
mov
and
pop
add
pop
out
adc
out
ret
xchg
fiadds
clc
jbe
add
and
sub
mov
cli
sbb
lcall
push
insb
stos
and
fimuls
pop
mov
xor
je
cmpsb
mov
jge
inc
push
jp
cld
cmp
ficomps
jle
dec
sub
rcl
divl
loop
loopne
mov
or
mov
movswl
insb
sbb
je
push
xchg
in
mov
es
clc
ds
push
mov
je
insb
xchg
cmp
xlat
test
movsl
pop
stc
movsl
popl
cmp
dec
daa
loopne
shll
dec
call
add
into
out
cmp
orb
inc
test
shrb
push
stos
lods
add
lds
es
or
mov
fdivrs
xor
scas
jle
movsb
push
mov
daa
jnp,pn
inc
sub
pop
push
cmp
xor
movd
aad
mov
jg
sahf
lahf
cs
jle
cltd
nop
pop
loopne
sub
lea
push
sarb
cmpsl
movswl
loop
pop
aaa
jl
test
call
ret
cs
mov
outsb
and
fldenv
pop
loopne
jb
pop
lea
hlt
push
and
insb
cmp
inc
jg
jno
sbb
and
cmc
shlb
jp
std
ljmp
imul
clc
jmp
jo
sbb
outsb
push
jp
cld
cmp
ds
push
fdiv
and
sti
mov
mov
mov
shlb
pop
rorb
pop
xor
clc
cmc
subb
mov
mov
js
mov
lds
push
jbe
nop
hlt
les
mov
std
lock
pop
and
push
scas
int3
aam
pop
nopl
fdivrs
sub
jle
push
mov
push
insb
xchg
mov
out
addr16
repnz
icebp
lcall
push
repnz
and
out
fs
das
lock
jae
jmp
pop
lahf
lods
sbb
push
cmpsl
jle
fsubrs
mov
int3
fnstcw
andb
mov
imul
mov
mov
bnd
pop
das
jle
push
lock
push
lock
ret
ret
mov
xchg
push
ficomps
jo
sbb
bound
repz
lcall
xor
jl
iret
iret
pushf
scas
xchg
xor
mov
gs
jle
add
xchg
mov
mov
out
and
ja
mov
cmp
mov
dec
aam
lods
insb
fimuls
lahf
shl
push
push
add
push
mov
clc
cs
mov
lock
sbb
dec
dec
pop
test
xor
mov
jl
fsubs
mov
add
push
add
ja
lock
das
clc
jb
out
ficomps
aad
mov
aad
jle
fimuls
cli
subb
testb
lock
int3
cmpsb
push
add
hlt
call
es
sahf
and
jl
pushf
adc
push
mov
cli
mov
xchg
cli
jo
jg
imull
add
xchg
jae
mov
pop
mov
repnz
incb
sahf
lahf
divl
cld
xchg
pop
js
sbb
nopl
jo
inc
push
push
pushf
or
aad
inc
out
mov
jbe
int
shl
shlb
and
adcb
aam
sub
sbb
mov
ficompl
clc
jmp
insb
pop
pop
imul
loope
lock
je
or
out
dec
mov
ss
jo
jnp
aas
cmp
ret
adc
cmp
xchg
clc
outsb
pusha
loope
out
shll
shl
cmp
add
clc
clc
jmp
mov
int3
xchg
push
rolb
dec
insb
dec
inc
pop
lock
aaa
cmp
test
inc
out
sar
jo
cltd
ds
mov
jle
dec
ljmp
add
cmp
ds
in
sbbb
mov
mov
rclb
jle
add
dec
and
mov
dec
or
mov
sarl
cld
insb
std
xchg
jmp
add
mov
cs
mov
stos
dec
leave
imul
stos
gs
hlt
loope
dec
mov
call
scas
cmp
enter
or
icebp
mov
add
hlt
xchg
loop
jne
jns
xchg
sub
js,pt
push
ror
pop
pushf
mov
lods
xor
push
jp
lea
adc
lea
add
add
iret
jge
icebp
adc
dec
cld
mov
inc
outsb
jbe
mov
sti
fcom
data16
jp
ja
sbb
xor
sbb
lds
inc
adc
lock
push
pusha
push
ss
testb
sarb
imul
mov
loop
mov
xchg
cmc
popa
and
push
push
cltd
adc
cld
les
cli
mov
add
std
cs
lods
mov
mov
push
rol
inc
adc
fiaddl
inc
sbb
bound
in
cmp
imul
subb
push
mov
or
xor
xor
cli
mov
jp
sbb
nop
test
sarl
inc
adc
stc
mov
jl
dec
test
repnz
movl
push
pop
test
pop
stos
inc
dec
xchg
cli
es
jae
pop
push
into
adc
or
xchg
inc
inc
jecxz
mov
repnz
test
lods
ret
adc
es
scas
ds
ds
dec
dec
sbb
xchg
inc
outsl
adc
pop
xlat
arpl
lahf
rol
daa
pop
jnp
jg
push
push
cmc
add
xor
xor
aad
mov
loop
or
ret
mov
sbb
pop
lahf
push
clc
leave
imul
cli
inc
or
loop
out
pop
shl
add
cmp
bound
mov
jmp
rorb
and
push
cmp
cmpsb
and
mov
push
xchg
pop
push
js
lods
jle
cs
scas
push
lock
pop
mov
or
dec
inc
loopne
push
out
call
jb
add
test
je
loope
xchg
adc
mov
repnz
and
fistps
mov
add
mov
cmp
mulb
mov
out
or
sbb
out
fnstenv
adc
lahf
pop
cmp
fisubs
mov
fldcw
cmpsl
adc
subb
popl
jno
sub
xchg
stos
pusha
xrelease
cli
jecxz
mov
loop
pop
mov
hlt
es
adc
and
xchg
test
fistpll
mov
orps
divb
fmuls
cmp
pop
mov
adc
adc
fnstcw
aas
jno
jp
lock
je
jnp
mov
stos
in
aad
outsb
jl
push
and
scas
fimuls
loop
cmp
mov
stos
pop
push
jecxz
mov
scas
cld
les
jp
inc
sbb
xchg
pop
jle
cli
ljmp
in
push
hlt
leave
mov
js
es
cld
push
adcb
and
sbb
lock
pop
mov
and
hlt
not
es
faddl
pop
mov
sahf
adc
add
mov
ss
and
shrb
cmp
xor
fsubrs
cmpsb
adcl
cwtl
xchg
mov
jo
inc
lods
or
mov
add
mov
sar
loope
xorb
cs
mov
dec
jecxz
jno
cmp
adc
fmuls
cli
clc
pop
mov
jecxz
sahf
push
and
mov
shlb
add
push
call
sub
test
xor
pop
xlat
fistpll
scas
mov
enter
mov
cmpsb
jp
push
popa
and
cs
ret
addb
jbe
push
pop
mov
add
or
outsl
or
or
roll
ja
inc
xchg
push
sahf
test
test
cmp
rcrb
ss
xchg
jb
out
popa
inc
lahf
push
mov
icebp
mov
pushf
and
rorl
pop
popf
or
mov
push
push
test
dec
icebp
clc
icebp
imul
std
adc
stos
sbbl
std
xchg
xor
inc
or
sbb
out
std
sbb
mov
or
mov
lock
or
out
lret
out
adc
or
pop
pavgw
xor
or
lahf
shrb
push
loopne
or
mov
lea
jo
cmp
hlt
add
inc
test
cli
fidivrl
js
or
sbb
cmp
xor
push
push
pop
cmp
aas
bound
clc
pop
xchg
pop
push
cmp
sub
not
jno
pop
mov
incb
aam
ret
xchg
sbb
mov
fcoms
mul
xlat
stos
mul
dec
ret
pushf
imul
jns
jl
cli
shl
stc
icebp
aam
testb
push
scas
aad
mov
jmp
pushf
mov
hlt
jbe
les
adc
fisubl
loop
hlt
loopne
lock
ret
cmp
jge
jp
fs
jp
pop
bound
scas
cmp
push
lahf
ds
ds
pop
or
jmp
arpl
loop
cmpsl
sbb
add
rcrl
es
mov
xor
pushf
jo
cs
jo
subb
jle
ljmp
jg
dec
cmpsb
jne
rorb
sahf
pop
push
dec
int3
mov
push
cmp
lods
mov
loopne
testb
sub
push
aas
rolb
pusha
mov
fistpll
fnstcw
inc
pusha
into
out
jge
call
mov
push
in
lret
cmp
mov
jge
pop
clc
inc
hlt
add
loopne
cmp
out
and
inc
xchg
fimuls
cmp
sti
jp
mov
in
ss
shl
clc
sub
stc
cld
orb
xor
aad
pop
add
mov
xchg
dec
imul
cli
fidivrl
xor
lds
es
xchg
not
ret
push
push
shr
add
pusha
push
mov
push
push
mov
sbb
and
shlb
dec
mov
imul
popa
inc
sbb
push
cld
icebp
leave
rclb
mov
dec
loop
or
in
cs
push
or
in
jmp
repnz
movsb
ja
repz
and
mov
or
pop
inc
xchg
mov
xchg
sbb
xchg
out
inc
xor
inc
loopne
sub
dec
stos
jo
jge
icebp
roll
xlat
pusha
push
movsl
cli
cmc
outsl
and
sbb
mov
not
or
and
and
jmp
pop
jg
rcl
faddl
mov
jmp
movsb
pop
mov
outsl
jmp
jnp
cltd
in
into
jnp
gs
pop
jmp
push
or
fsubrl
cmp
pop
jo
lahf
jo,pt
test
adc
or
call
fcmovu
inc
mov
sbb
cmpsb
cmpsl
pop
scas
fiadds
call
ret
and
adc
jl
icebp
push
xchg
repz
shrl
ret
js
xchg
push
adc
repnz
mov
addb
insb
scas
push
cld
pop
xor
jge
push
cs
out
rcll
inc
lods
pop
sub
mov
loopne
orl
loopne
out
stos
scas
push
jge
sub
loopne
loop
aam
pushf
or
dec
fcoml
pop
das
ss
push
mov
xor
rol
pop
push
sub
xlat
in
push
out
in
hlt
jecxz
movsl
sub
push
nop
dec
cmp
mov
mov
shl
add
clc
mov
pop
inc
iret
or
cs
jle
cmpsb
pop
xchg
adc
clc
xchg
loop
out
outsl
stos
add
sbb
adc
call
and
xchg
int3
or
loopne
fmull
jo
lods
jo
mov
xchg
aas
xchg
push
ret
jbe
clc
cmc
adc
in
js
rorl
mov
mov
mov
clc
mov
dec
pop
jecxz
mov
jle
je
push
push
test
clc
dec
push
mov
ljmp
iret
push
movsl
dec
pop
out
mov
ret
movl
jae
xchg
insb
ds
cmp
jp
mov
jge
scas
hlt
jo
clc
push
xchg
testl
jmp
cmpsl
in
sbb
cmc
ljmp
xchg
mov
fdivr
mov
adc
push
pop
push
xchg
dec
fwait
add
pop
inc
loopne
test
adc
pop
jge
jle
frstor
adc
lret
mov
add
std
lock
les
pusha
test
divl
pop
mov
out
rclb
addb
lock
inc
push
repnz
out
pushf
in
mov
shll
pop
add
out
jmp
adc
loop
push
lock
mov
mov
cli
xor
insb
stos
test
scas
jae
aad
and
dec
mov
out
loopne
sbb
or
and
std
cli
arpl
std
dec
or
cld
mov
xor
div
xchg
jno
jecxz
fsts
add
mov
push
pop
cld
cmc
cmp
xchg
jge
xor
rcr
jle,pt
stos
ljmp
jp
push
inc
call
mov
xlat
jp
cmpb
js
loope
fcompl
icebp
jmp
leave
mov
mov
jno
xor
or
or
fwait
push
xchg
enter
add
add
scas
xchg
xchg
scas
sbb
and
push
std
cmc
push
jl
lock
hlt
mov
jmp
pop
xadd
mov
dec
pop
inc
movsbl
add
std
jb
scas
iret
mov
sahf
jp
jnp
or
lds
pop
pop
mov
aaa
mov
xchg
lock
cld
cld
mov
and
fbld
icebp
add
out
mov
inc
add
adc
cmp
cmp
adc
or
pop
mov
clc
inc
pop
test
cmpxchg
das
inc
mov
jb
xchg
sub
out
cli
cmc
sahf
test
jle
es
movsl
jno,pt
jle
sarb
js
and
out
jo
mov
and
arpl
inc
xchg
shrl
jp
dec
cmp
xlat
out
filds
in
dec
sub
sub
cmp
sbb
cli
cs
mov
xchg
test
clc
cmpsb
cmp
filds
clc
mov
icebp
sub
ds
jp
jge
sub
ret
adc
and
cmpsl
rorb
cld
inc
and
loopne
cmpxchg
push
cwtl
and
popa
sbb
loopne
hlt
add
data16
insb
test
stc
and
mov
xchg
adc
lods
pop
hlt
clc
icebp
loopne
dec
sbb
add
aas
push
jle
fstpt
ficomps
cmpsb
js
jle
les
jbe
push
rcrb
pop
paddd
repz
push
insb
es
data16
fisubs
mov
pop
ficoml
jle
lock
insb
and
or
shl
jecxz
cmp
push
inc
inc
adc
inc
in
dec
cmp
in
dec
mov
subl
lds
mov
loop
rclb
dec
repz
jbe
mov
into
or
sub
dec
addr16
xchg
mov
inc
mov
ds
lock
inc
movhps
clc
call
mov
sbb
mov
loopne
mov
call
gs
ds
out
cmp
arpl
pop
sahf
xor
out
lock
jle
outsl
xlat
jbe
push
cmp
dec
sarb
push
test
stos
xchg
mov
rcr
adc
sti
loope
and
test
inc
mov
ret
inc
or
jge
int
cmpsl
jns
adc
sbb
ja
and
stos
inc
pusha
add
push
out
sbb
pop
sbb
ds
andb
xor
aas
lock
mov
or
jp
repz
xor
jl
sti
pop
xor
push
jbe
loopne
pop
and
bound
fldl
jl,pt
xchg
into
xchg
js
and
inc
cld
xchg
push
sub
pop
add
out
nop
pop
sub
out
xlat
das
pop
pop
jl
sahf
adc
int3
inc
fs
and
lahf
mov
jp
add
inc
xchg
sti
arpl
push
push
push
fbstp
mov
cld
add
ret
movsl
shl
jmp
shlb
test
jge
jge
mov
dec
xor
inc
cltd
sub
pop
cpuid
mov
jge
je
or
push
adc
ljmp
cmp
inc
sub
gs
pop
pop
mov
addr16
mov
gs
pop
mov
fucomi
loop
jmp
sbb
fucomi
loop
lret
pop
pop
setle
add
pop
mov
jno
shll
cltd
orb
lcall
aad
jb
dec
mov
imul
dec
or
sub
popa
je
mov
jbe
xor
sbb
cmp
inc
mov
enter
sbb
or
dec
clc
movsl
sbb
pushf
and
in
push
cmpl
jl
stos
je
or
jp,pt
adc
outsb
into
mov
lcall
push
jle
pop
pop
jp
int
cmp
jnp
jl
loope
inc
out
sub
stos
push
fistps
cmc
pop
mov
sub
in
out
aam
dec
pop
adc
loopne
cmpsb
outsb
xchg
add
rorb
sbb
js
jl
mov
fadds
dec
and
test
clc
icebp
icebp
sti
xor
andb
and
xchg
hlt
addr16
hlt
aam
adc
jmp
setb
sti
cld
dec
push
mov
orl
mov
femms
dec
das
cld
pop
xchg
fwait
add
or
xchg
shlb
xchg
cmp
pop
mov
mov
faddl
xor
xlat
fmuls
stos
mov
fdivrs
in
pop
stos
lock
mov
adc
inc
loop
mov
js
mov
xchg
filds
notb
out
iret
cs
hlt
cmp
sbbb
jp
add
mov
pop
ds
paddw
icebp
std
mov
and
mov
lahf
aas
aam
add
add
xor
js
push
dec
es
adc
lds
orb
clc
pop
mov
mov
or
dec
rcl
out
jnp
inc
fcoml
das
xchg
data16
in
xchg
cmc
mov
in
pop
addb
adc
sbb
in
subl
jg
or
jge
bound
cmp
push
insl
adc
pop
jp
jnp
xchg
mov
inc
dec
movsl
dec
xor
int
aaa
loope
lock
pushf
xor
pop
xor
inc
xchg
dec
ljmp
je
fmull
not
popf
das
push
xor
pop
shll
push
das
test
inc
lahf
pop
cmp
push
mull
shlb
pop
push
xchg
icebp
jp
cmp
lahf
mov
jbe
sbb
out
lcall
add
lret
push
pop
and
mov
xchg
cwtl
cli
loope
cmp
sahf
mov
jno
or
push
jb
jns
mov
pop
pop
cli
dec
std
inc
jl
sub
popa
jl,pt
sub
mov
pusha
fadds
add
jl
xor
andl
dec
xor
jl
push
pop
test
clc
and
sahf
mov
mov
xor
and
xchg
loop
xchg
sti
jp,pt
inc
hlt
cmp
cli
pop
shrl
mul
lcall
sbb
loope
push
push
jmp
inc
clc
iret
cmp
jg
fs
test
movb
ret
aad
adc
sarb
push
lods
idivl
ds
pusha
pushf
jecxz
int
sbb
mov
shrb
in
push
aam
adc
out
into
pop
sbb
not
mov
fisubrs
fsubrl
cli
dec
dec
jns
push
dec
xchg
ljmp
dec
pop
jb
loopne
xor
incb
cmp
push
jl
ficoms
inc
adc
sbb
loop
push
fs
cmp
add
jbe
xchg
add
fnstsw
or
aas
adc
out
push
pop
daa
sar
repnz
in
mov
cmp
adc
jbe
mov
ret
imul
lds
mov
dec
cmc
out
pop
push
sbb
adc
mov
mov
jge
hlt
ljmp
adc
addr16
sbb
ja
jge
jle
bound
cs
mov
dec
add
pop
mov
ror
fdivrl
cli
jecxz
pop
push
outsb
pop
push
dec
mov
clc
sahf
or
fwait
or
rclb
mov
cli
mov
sarb
jnp
inc
je
lahf
jl,pt
scas
loop
sub
mov
mov
jae
aas
inc
jmp
xchg
pop
rclb
lods
ficomps
movd
aas
jle
fisttps
jecxz
scas
pop
movq
mov
jg
sub
aad
xlat
into
sbbl
aas
cmp
lock
arpl
sbb
int
icebp
sbb
push
es
lods
aaa
mov
add
pop
into
xlat
jg
pop
inc
test
mov
jae
test
jp
push
xchg
out
lret
shr
fs
fidivrl
cmp
clc
dec
enter
xor
xor
or
xlat
or
push
sbb
outsb
loop
jno
sbb
ror
test
int3
in
jno
sub
fdivs
ds
loop
mov
jo
shr
fidivrl
xchg
ret
hlt
push
test
outsb
fcoms
dec
aas
mov
les
out
sub
loopne
ljmp
cld
cmp
pop
fs
jle
icebp
xchg
sbb
inc
push
addb
sub
mov
aas
ds
cmp
gs
xor
dec
mov
ss
dec
jmp
fdivl
xchg
and
pop
stos
cmp
mulb
call
xchg
repz
test
hlt
sub
sub
push
iret
xchg
pop
movups
jp
or
jge
popa
add
or
out
pop
mov
jo
movsl
or
sub
cmp
sarb
bound
fisubs
rcrl
xor
jecxz
adc
ss
idiv
jp
cld
into
sub
lahf
jmp
inc
sbb
sti
in
push
bound
xor
jl
ljmp
add
inc
mov
inc
xchg
and
aas
add
push
test
clc
jecxz
adc
xchg
repz
pop
aas
pop
cld
xor
rolb
fdivr
mov
xchg
or
mov
fsubr
xchg
jl,pt
pop
cmpsb
xlat
enter
xorb
cmp
pop
fcomp
xchg
jp
xor
fmuls
cmpsb
into
mov
xor
ds
sahf
sarb
jle
mov
pop
mov
jo
insl
sbb
sbb
lds
fcoms
mov
rorb
push
cli
push
lea
mov
push
test
xor
add
rol
sub
xlat
hlt
movb
loope
or
cmp
icebp
push
shrb
and
push
inc
rol
pop
pop
mov
js
sub
xchg
inc
fiaddl
cmc
sti
adc
cmp
fmuls
test
sub
ljmp
js
fdivs
ficompl
out
inc
ret
adc
enter
aaa
push
jle
dec
jbe
cmp
add
aaa
hlt
loopne
cmpl
cmc
shl
scas
ficompl
jle
ret
jecxz
mul
mov
in
es
cli
sbb
mov
lret
push
lods
lret
out
ret
out
lock
mov
jns
pusha
push
es
loop
mov
push
mov
cmp
sahf
sahf
mov
mov
mov
adc
mov
push
or
imul
push
xor
jbe
push
pop
lahf
sub
push
and
cs
push
test
stos
sbb
inc
js,pt
insb
les
jl
gs
je
ret
pop
or
pop
pop
pop
mov
lods
rcrb
cmp
pop
or
into
fdivr
lret
mov
push
sbb
pusha
cmp
add
sarl
call
roll
inc
pop
mov
push
xchg
iret
cmp
push
pop
fdivrs
call
lock
cwtl
arpl
mov
call
pop
xchg
sbb
mov
rol
cmpsb
push
fcoms
jo
test
out
loop
cwtl
lock
mov
push
jmp
jo
push
dec
lret
jle
inc
and
cli
mov
sbb
or
mov
cmpsl
insb
je
rolb
push
inc
ds
call
scas
lret
fs
jmp
push
jmp
loopne
push
clc
icebp
cld
out
mov
insb
jbe
mov
scas
inc
loop
pop
pop
movsb
ss
fbld
js
or
mov
mov
out
ja
push
mov
mov
ret
mov
sbb
popa
sub
mov
idiv
push
cwtl
pusha
push
insb
mov
mov
in
popf
adc
loope
push
int3
movsb
cmp
loop
insb
rcrb
lock
sbb
add
mov
outsb
add
push
cli
lock
and
dec
adc
icebp
mov
inc
loopne
loopne
out
roll
jne
rolb
mov
icebp
sbb
les
gs
lock
and
inc
cmp
mov
call
ljmp
cmp
or
insl
xor
bound
leave
js
cmp
lock
dec
es
adc
das
dec
sub
cmp
add
jge
cmpsb
jo
push
aas
call
mov
dec
mov
fwait
lock
add
les
or
mov
cld
lret
mov
cli
jo
jge
jle
mov
in
push
cmpsb
or
add
cs
mov
fisubs
es
inc
xchg
adc
hlt
push
push
iret
jbe
jle
in
lods
mov
std
orl
push
daa
push
mov
es
dec
pop
lahf
push
inc
in
dec
and
mov
sbb
hlt
loop
or
loopne
cmp
dec
sbb
sub
cmp
cmp
std
mov
addr16
push
loopne
push
jle
pop
into
out
add
lret
aaa
push
cmpsl
mov
hlt
push
paddb
jle
mov
add
leave
fdivrl
cli
insb
outsb
pop
xor
mov
or
js
dec
cmp
fs
add
pop
jle
sti
inc
mov
cmpsl
pop
cmp
xorb
rolb
rol
dec
add
lods
sbb
push
sub
sbb
pop
pop
mov
ret
repnz
fwait
lock
hlt
push
sub
adc
pop
mov
into
mov
add
mov
pop
cld
insl
jmp
sub
mov
mov
cmp
adc
and
or
inc
mov
addr16
loope
shrl
and
shl
cli
and
lretw
mov
jae
loope
adc
push
loopne
xchg
cli
lock
pusha
dec
in
bnd
lock
jnp,pt
scas
shl
mov
xlat
ja
test
fisttpl
movhps
mov
adc
pop
mov
je
shrb
mov
cmpsl
sub
pop
dec
sbb
inc
xchg
cmpsl
mov
dec
push
pusha
scas
jle
or
jmp
out
inc
outsb
orl
rorl
inc
push
aad
adc
pop
test
cs
lock
xchg
je
out
les
fisttpl
les
pop
pop
orb
jns
mov
xchg
mov
mov
ds
repnz
pop
add
js
sahf
ss
shlb
push
push
loopne,pn
pop
cmpsb
fnstcw
faddl
cmp
add
cmp
call
pop
rorl
mov
xor
clc
lock
cmc
sbb
or
std
lea
or
in
add
clc
adc
push
dec
mov
jp
hlt
mov
je,pt
cmpsb
jg
ljmp
testb
and
sub
sbb
out
aas
jno
pop
jo
movsb
out
aad
clc
scas
int
inc
das
dec
fnstcw
shll
shl
scas
inc
es
and
and
push
in
je
hlt
out
data16
mov
ds
adc
fisttpl
dec
push
cmp
negb
loope
cmp
repnz
pop
inc
scas
pop
out
pop
in
sub
cmp
scas
xor
adc
cs
inc
aas
out
push
fiadds
in
jnp
pop
fcmovbe
jle
mov
subb
jns
lret
ficomps
das
out
jb
mov
fcmovbe
push
add
push
jl
fwait
icebp
sbbb
in
pushf
mov
rorl
prefetch
or
and
icebp
insl
ror
add
lahf
test
sbb
or
pop
fldcw
rcrl
mov
or
xchg
out
jp
movsl
inc
or
data16
fcoml
imul
out
mov
inc
mov
mov
jl
lret
mov
or
hlt
call
int3
push
cli
jl,pt
xchg
loop
rorb
inc
lods
pop
dec
sub
jl
loop
sbb
sub
std
mov
jecxz
in
sbb
in
ret
add
sub
cmpsl
clc
jmp
test
mov
fcompl
or
andb
inc
xchg
lods
ret
jmp
aas
mov
in
or
cli
js
add
arpl
sub
hlt
push
cli
or
daa
lods
sub
iret
aas
lea
jl
add
sahf
sar
stc
cli
icebp
sbb
push
mov
mov
stos
arpl
xchg
or
xchg
mov
cltd
js
push
cmp
push
dec
ret
add
mov
mov
aas
push
loopne
mov
pushw
call
stc
mov
push
sti
je
rorl
cmp
sub
sti
test
mov
sbb
cs
aad
push
psubb
addr16
jle
clc
icebp
loope
cmpxchg
add
jmp
aas
xchg
scas
mov
sub
notb
add
shr
shll
or
jle
jnp
iret
daa
adcb
cli
call
sbb
xor
sahf
subb
add
aad
cwtl
cmp
mov
xor
repz
insl
mov
test
mov
jb
clc
je
loop
rolb
lock
inc
add
lock
add
add
mov
and
icebp
mov
jecxz
aaa
stc
lahf
jne
popa
jp
adc
sub
cmpsb
jb
jmp
aas
call
jae
push
add
icebp
xchg
call
arpl
js
jmp
cld
clc
jo
xorb
add
add
pop
jmp
push
pop
xchg
ret
call
jne
mov
mov
lock
ds
jb
nop
repnz
push
sbb
es
xor
jecxz
iret
jnp
sti
or
push
mov
scas
andl
mov
shll
jl
cmpsl
cmpsl
lcall
pushf
ljmp
mov
push
xchg
rorb
aam
scas
or
jle
xchg
inc
mov
cmp
das
jle
jl
inc
mov
and
fs
stos
fidivrs
lahf
or
inc
or
adc
cs
test
jle
mov
std
js
or
sbb
dec
mov
push
shrb
lods
push
out
mov
hlt
movl
push
shlb
add
or
xchg
insb
js
lock
clc
sbbl
es
xchg
push
ss
scas
mov
cwtl
movsb
push
pop
push
aam
jnp
mov
imul
sahf
push
push
js
cmp
mov
sub
clc
mov
ret
inc
push
repnz
push
jbe
cmp
repz
pop
int3
mov
mov
xchg
scas
xor
xchg
cs
cli
push
mov
decb
xor
clc
pop
add
js
hlt
sbb
loopne
in
mov
inc
sub
add
mov
jb,pn
ret
sahf
cmpsb
dec
sahf
mov
ljmp
sbb
dec
pop
jl
stos
xorl
cmp
mov
jnp
pop
mov
add
shlb
fisubrl
adc
sbb
pop
sub
or
pop
pop
rcrl
xor
loopne
mov
sahf
pusha
clc
push
cld
and
push
jbe
xchg
inc
mov
mov
into
repz
adcb
xor
sub
shlb
outsl
push
aam
out
sbb
sbb
mov
cmpsb
repz
or
mov
or
add
lods
pop
test
add
sarl
mov
cwtl
jbe
cwtl
push
idivl
jl
push
sbb
cmp
ss
ficoms
decb
test
clc
loope
call
popf
fcmovnu
and
sbb
dec
inc
mov
std
hlt
cli
subb
xchg
sbb
fdivl
dec
xor
jns
hlt
insl
js
leave
ret
add
add
push
adc
sub
pop
pop
sub
pop
jge
sahf
mov
subl
sbb
mov
mov
mov
imul
aad
sbbb
mov
pop
lods
xchg
inc
sub
xchg
repz
xchg
sbb
cmp
lock
jmp
ret
es
and
aas
push
bound
andb
push
ds
sub
out
rorl
fidivs
fimull
ficomps
subb
jmp
in
pusha
mov
loope
add
cltd
inc
ja
mov
add
inc
enter
out
arpl
loope
jb
ljmp
test
and
adc
cmp
stos
adc
in
aam
filds
push
and
pop
enter
daa
sahf
test
scas
mov
inc
cmc
fdiv
xor
sbb
orl
add
add
cli
jge,pt
cltd
adc
data16
jge
sbb
maxps
jo
fisubl
push
popf
dec
insb
mov
or
push
xchg
xchg
es
sbb
mov
call
pop
jbe
dec
mov
push
rcl
lods
cld
lret
xor
push
push
cld
aas
call
pusha
adc
loopne
jg
sbb
adc
out
sti
xor
pop
outsb
repnz
loopne
mov
cmp
pop
mov
ds
rorl
jecxz
mov
and
sti
call
gs
lock
xchg
mov
aam
sub
negb
mov
cli
inc
sub
setl
dec
out
or
xchg
jle,pn
ljmp
inc
std
hlt
add
pop
jg
pushf
push
pop
sbb
push
jmp
dec
adc
jns
add
add
out
movb
xlat
and
xor
insl
imul
cli
lock
test
inc
scas
repnz
mov
dec
jl
ds
fstpt
movsb
pop
pop
ret
adc
pop
cmp
pop
popf
inc
test
cmp
xchg
sbb
aas
pop
sbb
daa
outsb
bound
add
cmp
or
mov
filds
adc
or
add
cmp
fmuls
sub
stos
es
rol
mov
mov
xchg
sti
sbb
add
test
aas
mov
inc
enter
pop
mov
data16
mov
cld
and
adc
mov
adc
and
xchg
mov
outsb
sub
andl
bound
cmc
jle
push
fistps
loopne
push
mov
ljmp
scas
lret
xchg
ds
ja
lss
and
cmp
les
mov
mov
cld
xor
imul
fsubs
fdivs
mov
mov
xchg
sub
daa
mov
rcr
adcb
sbb
adc
push
cld
mov
in
jbe
shll
dec
mov
push
push
add
mov
fcomps
das
fs
adc
and
pop
pop
adc
inc
jge
pusha
movsl
mov
fsubrp
mov
jge
mov
mov
iret
lock
mov
cmp
jnp
push
dec
cli
mov
pop
jge
loopne
movsb
lcall
push
xchg
stos
fcomps
repnz
loop
shr
mov
aad
mov
sub
lea
mov
inc
or
outsb
sub
addr16
dec
push
std
sub
aad
aad
test
pop
scas
mov
ret
popf
cmc
add
cmp
je
fucomip
ret
dec
jne
stos
jno
leave
push
test
push
add
cmp
xlat
lret
jle
inc
mov
pop
push
adc
hlt
ljmp
add
mov
je
inc
rol
inc
into
inc
sbb
sub
hlt
loopne
mov
and
push
das
ss
fwait
cmp
stos
call
lds
add
xchg
adc
andl
aas
sub
pop
cmpsl
push
pop
scas
mov
jge
push
stos
jle
push
fwait
or
xor
hlt
jl
push
hlt
fcomp
repnz
fwait
lock
je
push
mov
data16
cld
mov
test
andl
sbb
int
add
mov
jle
adc
aas
cmp
hlt
sbb
xchg
lahf
mov
pop
fdivrl
sbb
push
arpl
jo
fs
jle
jecxz
das
jne
ljmp
fisubrs
xchg
into
jle
jo
dec
sub
fimuls
cmp
subl
adc
add
dec
ja
stos
adc
loop
xor
cmc
stos
push
xor
hlt
jecxz
pusha
cmp
nop
push
cmp
pop
rorb
sbb
mov
lock
shl
in
rorb
sbb
scas
pop
xchg
cmc
and
lods
push
movsb
iret
rolb
je
mov
adc
mov
hlt
mov
cmpsb
addr16
arpl
icebp
loope
adc
or
inc
out
and
std
jge,pt
push
push
ficoms
jmp
inc
and
mov
jmp
add
aaa
jbe
dec
fbstp
sbb
inc
js
cmp
cli
arpl
mov
negb
mov
or
cmp
test
pop
jg
adc
inc
push
mov
fcomps
mov
adc
not
xchg
ljmp
jg
sarb
rorb
in
push
sti
inc
sub
mov
shlb
outsl
sahf
clc
add
jl
jnp
icebp
scas
jl
pusha
pop
out
shrl
fiaddl
enter
js
dec
inc
ljmp
mov
xor
test
or
adc
jle
insb
shrl
dec
mov
es
pushf
ds
in
push
push
loop
push
or
pop
jl
push
mov
sub
adc
imul
dec
xchg
enter
jno
int3
cmp
lret
std
jbe
push
ret
das
sbb
sti
js
sbb
movsb
sub
or
mov
sbb
pushf
cmp
cmp
mov
movsb
jb
lock
dec
lcall
hlt
rorl
cmp
cmp
mov
add
adc
or
shlb
jbe
mov
mov
mov
loopne
mov
stc
int3
mov
into
shlb
pusha
sbb
lret
cld
mov
adc
shrb
ds
push
inc
sti
add
inc
js
cmp
cmp
dec
push
jl
push
mov
jl
adc
xor
push
jle
fidivl
insl
pop
out
dec
icebp
pop
pop
jp
xchg
jle
inc
lock
pop
fdivs
push
jnp
push
sbb
shlb
in
xor
sahf
test
inc
mov
cwtl
scas
and
xor
pop
sub
inc
xchg
clc
or
test
out
cs
adc
and
push
aam
adc
mov
mov
sub
xlat
les
dec
inc
fadds
lods
icebp
dec
js
or
stos
dec
sti
sbb
imull
mov
sar
push
cld
jp
les
mov
mov
xchg
jno
jl
ds
mov
rclb
rclb
mov
mov
xor
test
xchg
sar
pop
xchg
int3
fstl
and
pushf
jbe
in
test
clc
xchg
inc
clc
cli
jo
jecxz
jns
or
cmpl
jne
sub
ret
adcb
pop
or
aad
sub
cmp
jle
and
repnz
inc
adc
xor
pop
sahf
sub
xchg
imull
adc
ret
push
pop
mov
in
inc
je
cli
cmc
call
xchg
add
aam
inc
lock
enter
aaa
sahf
popa
addb
mov
enter
jle
xchg
ficomps
push
mov
jo
jnp
adc
dec
xchg
out
sarb
ss
ret
pop
xchg
jnp
push
into
mov
inc
call
sbb
lock
pop
test
jecxz
ds
je
jbe
or
xchg
movsl
aas
jle
insb
push
lcall
hlt
push
add
push
jne
shl
loopne
loop
lahf
add
xchg
cmpsl
ja
push
jp
push
xchg
jge
aam
ds
cs
punpckhdq
lods
adc
jnp
scas
jle
and
loop
fildl
pop
lcall
scas
dec
sahf
sahf
daa
xchg
lahf
insb
not
cmpsl
add
dec
mov
lock
shrb
popf
aas
push
push
sahf
out
push
or
lcall
pop
mov
push
sti
jns
ss
aaa
aaa
xchg
xchg
jmp
xchg
mull
ds
pop
mov
adc
dec
or
movl
push
and
cli
loope
repz
xlat
mov
lret
xlat
sahf
rorl
scas
jl
inc
ret
push
fisttpl
push
test
xorb
sbb
jge
dec
pop
cwtl
jae
xchg
sbb
rcrb
clc
cmc
call
cmp
test
into
cli
push
pop
pop
adc
sbb
rcl
sahf
jne
fdivs
cltd
jp
inc
clc
jecxz
icebp
subb
add
jg
scas
xchg
jns
pop
mov
imul
ljmp
cltd
mov
sbbb
rolb
push
push
insl
mov
push
aaa
insb
jnp
and
pop
fisttpl
or
fistl
mov
mov
jmp
pop
and
adc
mov
int3
jae
adc
pushf
testl
arpl
lods
inc
mov
lock
mov
jno
dec
lods
outsb
cwtl
sti
daa
add
pusha
daa
std
xchg
rcrb
adc
clc
js,pt
or
fisubl
add
hlt
jmp
or
mov
cld
inc
aam
negb
repnz
js
push
inc
loop
mov
xchg
push
enter
adc
out
in
aas
pop
lock
sbb
push
fidivs
mov
pop
sub
pop
loopne
insl
int3
xlat
and
inc
int3
jp
std
stc
xor
jecxz
lahf
rclb
push
int3
mov
pop
pop
scas
gs
das
lea
pop
adc
xchg
or
sbb
stos
popf
js
lods
dec
jbe
hlt
sbb
cmpsb
xorl
inc
jle,pt
lcall
add
scas
push
mov
mov
imul
push
bound
fisubrs
movsb
cmpsl
das
pop
aas
push
fimull
adcb
mov
icebp
jbe
orl
in
cmp
pop
mov
mov
test
pop
jl
scas
jle
sbb
xchg
jge
cmp
mov
pop
mov
cli
hlt
divl
add
sbb
in
jg
jae
sarb
or
cld
or
xchg
jb
stc
jae
jl
pop
xorb
sub
clc
cli
mov
bound
or
lods
or
rcl
inc
scas
xchg
adc
rcr
mov
repz
lahf
ja
mov
mov
mov
test
add
push
lods
add
das
jge
cmp
ja
fs
aas
jp
mov
push
mov
lahf
cmp
mov
fistps
rclb
sbb
jne
mov
jp
push
enter
sbb
mov
out
cmp
adc
jp
xchg
lods
clc
loopne
ret
cwtl
addr16
sahf
je
push
pop
cmp
mov
adc
cmpsb
inc
add
pop
fidivrl
icebp
loopne
xchg
mov
call
cmp
push
fisubrs
jnp
cld
cmp
rorb
sub
in
enter
jo
mov
jmp
xchg
pop
je
sbb
out
dec
fistpl
fsubp
mov
gs
mov
cmp
sahf
ret
ss
sub
shr
ret
pop
scas
cmp
gs
and
push
jns
fiaddl
fs
pop
mov
test
mov
and
cmp
pop
mov
daa
or
cmp
jp
popa
cli
clc
je
loop
mov
add
cmp
cwtl
sub
or
push
xchg
add
inc
js
cmp
mov
or
dec
sbb
push
adc
jp
mov
push
rcrb
push
jle
and
jp
sub
clc
call
mov
xchg
shll
cmp
jle
shlb
scas
or
loopne
jb
inc
stos
test
ljmp
mov
cli
mov
leave
mov
sti
test
sbb
nop
in
ficoms
jns
mov
xchg
insb
or
mov
repnz
in
mov
xor
jnp
daa
hlt
push
and
data16
cmp
jno
addr16
pop
jbe
ret
pop
clc
adc
add
dec
pop
push
add
mov
pop
pop
push
pop
orps
lahf
xor
push
mov
dec
or
fildll
sahf
sub
push
in
testl
sub
jle
iret
or
add
jb
rclb
jp
aas
jl
jp
jle
sahf
jno
jmp
sbb
cwtl
cmp
cli
clc
loope
sbb
xor
notl
and
push
sbb
test
jb
lahf
out
sbb
out
jl
and
cs
ret
insb
repnz
jae
ret
adc
mov
aad
cmp
pusha
out
dec
xor
lods
inc
inc
js
fisubrs
es
inc
adc
inc
jge
or
sbb
sub
mov
rclb
ficoml
scas
pop
repnz
mov
mov
test
jg
push
pop
mov
int
mov
inc
fnstcw
mov
sbb
lahf
pop
adc
in
cld
test
ret
cli
jge
mov
fistps
pop
pop
loop
in
xor
jb
cmp
mov
dec
ja
pop
das
pop
cmp
movsb
cs
inc
mov
movl
ss
pop
mov
cmc
push
cmpsb
sub
rorb
pop
mov
fldenv
shll
xor
mov
clc
jp
test
mov
add
or
cmc
jle
leave
bound
push
decb
jl
push
lds
mov
mov
fisubrl
cwtl
push
aad
cmp
js
es
inc
inc
loop
dec
pusha
loopne
push
or
fldz
orb
cmp
rorb
fisubrl
cld
add
mov
and
stos
lret
xchg
test
inc
mov
dec
clc
sti
adc
jnp
stos
adc
call
ret
into
jne
lods
and
xor
mov
movl
scas
loopne
pop
icebp
ret
xor
mov
xor
push
sbb
pop
push
mov
or
sub
or
sbb
loop
insb
mov
mov
add
xchg
jle
pop
jnp,pn
call
jmp
mov
in
and
loop
gs
inc
rep
push
dec
push
cmpsl
sbb
cld
lock
outsl
dec
and
bound
iret
sbb
adc
adc
push
movsb
jmp
adc
and
and
lods
mov
add
pop
mov
jb
mov
cwtl
push
push
popa
and
jae
inc
inc
cmpsb
dec
repz
sub
push
or
int3
pop
mov
push
sbbl
arpl
rorb
lcall
adc
daa
lahf
cs
test
mov
pop
fists
pop
sbb
cli
or
jo
jno
push
pop
push
repnz
in
dec
imul
daa
xchg
mov
lock
les
cmc
fisubrs
mov
pop
mov
insb
dec
pop
dec
lret
leave
pop
dec
loope
loope
push
cmp
jl
jo
push
push
xor
push
stc
push
movsl
mov
jp
lock
shrl
cmovnp
scas
inc
scas
push
std
js
dec
push
movsb
dec
xchg
xor
pop
jg
mov
enter
inc
lret
je
mov
clc
add
mov
jp
lods
pop
pop
aas
ficomps
test
jl
pop
cmpsb
bound
repnz
fadds
daa
jmp
sub
mov
clc
ljmp
mov
inc
movsb
hlt
lock
mov
pop
adc
mov
cmp
das
add
mov
xchg
je,pt
fs
lahf
into
je
sub
dec
push
xchg
loop
hlt
sahf
jne
rorl
add
cmp
ss
icebp
jnp
loopne
xchg
leave
js
sahf
or
jp
ret
addb
add
popa
sub
cmpsl
rcrb
out
push
enter
xchg
roll
xchg
fs
shlb
sbb
mov
fiaddl
fistps
mov
mov
and
push
testb
int
pop
jl,pt
push
stos
xlat
ljmp
lods
mov
test
mov
ficompl
or
jge
shrb
mov
dec
mov
imul
mov
and
mov
xor
roll
inc
pushf
loop
loopne
mov
and
stos
sbb
pop
dec
stos
push
xchg
aam
cmpsb
gs
rcl
ja
push
jecxz
jae
push
cmp
fs
clc
lahf
mov
std
push
inc
jo
sbb
jl
xchg
add
pop
cld
mov
and
cmp
out
andl
lds
adc
and
fistpl
mov
jmp
add
jb
out
xchg
mov
sti
mov
ret
loop
stos
lods
dec
jmp
out
inc
adc
pop
fdivl
inc
inc
sahf
int
iret
pop
test
hlt
cmp
stos
imul
rcll
cs
jae
jge
loop
test
loop
mov
test
jl
rorb
cmc
pop
adc
pop
xchg
pusha
push
cmp
sti
icebp
push
add
jns
shlb
sti
inc
add
fsubs
loope
clc
je
push
es
dec
les
pop
outsb
data16
cmp
nop
enter
mov
xor
stos
mov
ds
comiss
addr16
fcom
call
dec
and
jl
jle
hlt
dec
and
pop
mov
mov
dec
fldenv
or
adc
call
lods
adc
out
xlat
test
pop
mov
bound
xchg
cli
cmp
add
loope
jmp
clc
cmc
in
inc
push
cmpsb
out
aam
icebp
jecxz
ds
mov
xchg
mov
sub
jnp
jl
mov
stos
dec
rcrb
xchg
sbb
xchg
adc
imul
jecxz
repnz
sub
jb
sub
adc
adc
xchg
cwtl
orl
push
cmp
shl
jle
jp
loop
and
and
ljmp
xlat
mov
les
adc
jle
ret
or
jmp
mov
dec
subl
xor
cwtl
and
call
mov
mov
sbb
aam
ljmp
lds
xor
test
sbb
fsubrs
xor
out
repnz
sahf
ja
cld
pop
imull
sub
cmpsb
mov
lea
mov
cmpsb
xor
ja
inc
or
movb
out
mov
or
mov
addb
adc
push
loopne
mov
loopne
rcl
push
lods
cmp
lret
sbb
sub
nop
sbb
push
pop
inc
in
idivl
dec
xchg
out
pop
pusha
adc
sbb
iret
int
push
inc
sti
add
sbb
xor
fisubs
clc
test
sub
data16
rorl
cmp
out
mov
cs
clc
cmp
int3
sub
lret
add
xchg
cmp
ja
pushf
or
mov
das
sub
inc
pushf
adc
mov
cmp
pop
out
xlat
out
mov
xor
mov
and
mov
jmp
sbb
dec
fimull
and
and
push
dec
loop
xlat
mov
inc
pushf
push
add
cli
cs
jge
hlt
js
xor
dec
adc
mov
add
mov
frstor
bound
add
mov
les
mov
push
in
inc
fcomps
inc
pusha
ficomps
outsb
cwtl
cmpsb
mov
hlt
rorl
sub
outsb
pop
mov
aad
inc
adc
loope
cli
pusha
mov
jge
and
insb
jg
push
xchg
aad
xor
mov
jge
sub
fs
mov
outsb
ss
pop
jl
js
movsb
es
aaa
push
loope
xor
and
push
insb
ljmp
push
sahf
jno,pt
dec
xor
jo
jecxz
scas
je
adc
sbb
inc
jmp
clc
test
es
imul
cld
movsb
test
shll
adc
les
adc
adc
adc
test
orl
jle
movsl
cs
cmp
roll
adc
popa
sbb
js
xchg
les
ror
int3
inc
or
jl
mov
cld
sub
or
scas
lahf
jle
sbb
je
mov
fists
fs
in
cmp
test
mov
adc
sub
nop
ds
sar
jge
loope
mov
mov
xlat
push
mov
mov
scas
ret
adc
cmp
rolb
xchg
xchg
cwtl
jle
pop
aam
std
test
sbb
scas
ss
icebp
or
lods
lds
movsb
push
and
hlt
in
pusha
inc
push
mov
xchg
mov
push
insb
clc
mov
add
loopne
pop
cmp
sbb
or
inc
inc
es
push
jge
dec
sbb
cli
xacquire
cmp
jno
lds
in
idivb
out
cmpsl
iret
inc
rorb
mov
dec
add
jle
xor
loope
rclb
xchg
add
loop
sar
stos
in
and
orl
test
in
xor
pop
jecxz
pushf
jge
mov
pop
in
dec
lcall
sarb
mov
lcall
cmp
test
xor
dec
cltd
inc
mov
xor
cmc
xlat
mull
mov
xor
mov
inc
das
push
mov
inc
outsl
jno
and
add
jp
xchg
jle
pop
pop
add
rcll
mov
mov
lods
adcl
dec
jl
mov
cmp
or
push
and
mov
aad
ret
or
jo
loopne
insl
pop
pop
sbb
xlat
push
pop
mov
push
aad
cmpsl
inc
lods
ss
inc
outsb
fidivrs
clc
pop
pop
mov
rorl
test
mov
es
mov
mov
and
mov
les
jl
lods
push
mov
or
jle
aas
push
push
push
enter
mov
push
cmp
adc
cs
clc
loopne
test
adc
push
cmp
ficomps
xor
sub
js
add
or
xor
into
dec
mov
cmpsb
mov
das
ficomps
sahf
sbbb
repz
mov
lock
fimuls
scas
xchg
pop
inc
jg
out
movsbl
mov
sbb
adc
icebp
out
inc
jp
add
inc
clc
mov
sbb
jle
lock
adcl
add
cli
dec
cs
enter
push
popa
movsl
aad
pop
dec
or
cmpl
aam
inc
mov
fbstp
dec
popl
mov
jp
push
imul
cmpsl
xchg
sahf
xor
push
sub
test
inc
jl
adc
jle
aas
rcrb
sub
mov
das
ds
jl
mov
xor
cwtl
in
cli
fdivrs
js
dec
cmpsl
pushf
ds
sbb
or
js
cmp
cs
xor
sahf
adc
push
adc
jge
lock
jp
daa
cmp
in
mov
incb
jge
popa
hlt
mov
dec
mov
fs
inc
imull
sbb
dec
scas
scas
pop
add
pusha
cmpsb
out
sbb
dec
fs
scas
daa
stos
lock
std
rolb
push
dec
add
xor
adc
aam
punpckhdq
xchg
inc
stos
ds
mov
or
xchg
xor
xchg
cmp
setbe
ljmp
mov
push
cs
adcl
pop
call
sbb
jbe
xchg
movl
jle
pop
movsb
xchg
das
sbb
mov
add
push
pusha
cmpsl
mov
scas
in
mov
fdivl
sbb
inc
inc
mov
pop
loop
out
outsb
ret
push
negl
or
in
mov
cmp
roll
pop
xchg
in
lods
add
clts
mov
cmpsl
arpl
divb
sub
stos
mull
adc
xor
push
repnz
les
mov
push
xor
jnp
aas
mov
dec
in
rcrb
cmc
faddl
les
movsb
mov
inc
adc
loope
lcall
ljmp
das
push
ds
decl
sub
or
mov
ret
cmpsl
pop
scas
push
jle
pop
aam
in
cmp
loop
mov
jbe
lods
daa
push
cwtl
gs
pop
xor
rorl
and
and
dec
mov
loope
mov
jl
adc
loope
cmpsb
clc
jo
push
fs
rol
imul
xlat
mov
lds
inc
pop
push
push
in
into
mov
mov
sbb
js
mov
repnz
pop
jge
xchg
pop
inc
mov
pusha
and
push
dec
sahf
shll
cmp
mov
sbb
loop
cli
loop
in
lcall
lods
cmc
add
push
mov
add
or
adc
mov
and
xchg
xchg
leave
fs
rol
int3
dec
sbb
enter
cmp
jmp
test
xchg
ret
data16
cmc
adc
loope
xlat
je
and
imull
das
fistpll
ss
cmp
insb
xchg
ffreep
pop
and
daa
sub
push
shl
rcll
fidivs
sbb
cmp
push
mov
add
sub
not
lret
icebp
sarb
ret
pop
ficoms
mov
add
inc
lock
xor
out
ficompl
cmp
xchg
repz
xor
pop
inc
cmpsb
push
mov
inc
fnstenv
pop
sahf
scas
jne
sbb
and
sub
std
icebp
add
xchg
sub
fbld
icebp
sub
je
jbe
jb
lret
lea
sbb
mov
outsl
js
cmp
mov
jbe
add
pop
in
icebp
sahf
repz
inc
stos
dec
inc
jnp
push
test
outsb
xchg
sbb
call
jo
jecxz
cwtl
nop
adc
mov
mov
xchg
xor
lret
cmp
lock
andl
xor
out
sub
repnz
nop
hlt
adc
mov
cmp
add
outsl
mov
stc
out
js
jg
push
push
out
out
sub
mov
das
jl,pt
and
or
ja
les
mov
add
fimuls
sub
cmp
adc
loope
fwait
idivb
pushf
push
ljmp
mov
and
adc
mov
or
push
push
cmp
cmc
mov
mov
xor
inc
and
stos
sub
cmp
pushf
and
or
mov
push
stos
sub
into
cmp
xor
adc
cmp
cli
sub
cmp
pusha
je
dec
call
andb
xchg
clc
sbb
pop
lcall
les
cmpsb
dec
loop
inc
jecxz
sbb
loopne
mov
imul
pushf
fcmovnb
pop
or
or
mov
icebp
inc
loopne
mov
rcl
mov
mov
and
jl
fsts
cmp
mov
mov
sbb
pop
aaa
jecxz
sub
adc
insl
xchg
sub
mov
xchg
cwtl
rcrb
dec
cmovno
jle
out
das
arpl
jl
sbb
adcb
mov
insb
sti
adc
in
ss
icebp
and
pop
stos
adc
adc
adc
pop
pushf
pop
sbb
ds
out
insl
pop
scas
shlb
frstor
jl
int3
roll
push
inc
call
mul
or
mov
movsb
xor
xchg
mov
jp
push
lds
je
in
sahf
inc
pop
aas
sbb
ficompl
sub
push
push
loop
pop
or
es
mov
std
push
cmp
ret
push
mov
pusha
cmp
rorb
pop
test
aad
fidivrl
jg
inc
or
add
sbb
and
push
shrb
mov
je
popf
inc
pop
arpl
mov
lahf
pop
cmp
cmp
in
imul
cmp
push
ret
jb
jge
mov
dec
fisubrs
andb
cld
xchg
ds
mov
int3
hlt
icebp
pop
cmp
lret
xchg
mov
jl
in
out
mov
dec
pop
xlat
stc
push
test
call
pop
lods
clc
hlt
mov
sahf
push
data16
aas
testb
adc
lahf
pop
out
xor
call
jp
mov
insb
dec
jmp
cmp
sub
jl
pop
outsb
stos
nop
repz
pop
push
scas
cli
lock
sbb
fcoms
cmp
icebp
std
xor
add
mov
ret
sbb
push
sbb
call
adc
hlt
loop
xchg
into
sahf
adcb
push
js
pop
cld
and
xchg
mov
in
mov
cld
lock
addl
jb
mov
dec
mov
test
add
pop
pop
out
rorb
cwtl
ljmp
test
loope,pt
out
and
incb
add
mov
lock
mov
pop
or
insl
push
mov
push
pop
sbb
lods
outsl
repnz
mov
pop
xchg
add
cld
js
pusha
xor
gs
clc
lock
xor
jl
into
lods
rolb
pop
stos
sbb
fsubl
out
or
ljmp
xor
adc
negl
push
lock
add
std
cmp
cwtl
inc
fisubrl
and
add
sub
jmp
xorl
sarl
sar
imul
pop
xor
movsl
adc
xchg
push
xor
test
test
push
mov
dec
in
sbb
icebp
jmp
fcmovbe
orb
faddl
or
or
icebp
js
dec
je
inc
jb
xor
cmp
inc
mulb
mov
adc
dec
loopne
call
inc
inc
xchg
and
or
les
adc
push
xor
sub
mov
inc
lret
dec
aas
ss
leave
sub
loop
jbe
sahf
cld
cmpsl
xor
inc
lahf
push
jmp
xchg
cmc
cli
rolb
or
mov
insb
andb
fildll
adc
test
orl
jae
mov
and
and
rolb
or
sub
je
mov
std
cli
mov
fdivs
scas
sub
mov
add
mov
adc
pusha
sub
mov
mov
pop
add
add
lcall
cmp
pusha
vphaddubq
aam
sbb
stos
xchg
pop
sbb
adc
mov
aas
push
loopne
popa
xchg
sarb
and
loopne
outsl
or
mov
mull
bound
pop
xor
jecxz
jl
and
ss
pop
xchg
shlb
cs
or
pop
insb
sbb
ret
pop
stos
add
out
lret
jmp
add
add
ret
add
fcomip
shll
es
cli
pushf
popa
xchg
lea
pop
ds
adc
push
jge
xchg
lret
cmp
mov
mov
jno
loope,pt
test
and
fimull
incb
pop
out
pop
and
subl
mov
adc
lahf
cs
sub
xchg
mov
jp
int3
movsl
inc
clc
push
cmova
sahf
push
out
jp
xchg
aam
sbb
scas
mov
nop
test
ds
fwait
push
aad
mov
push
mov
lret
pop
jle
icebp
into
and
call
ja
test
pop
das
jle
xor
cwtl
mov
mov
subl
add
jmp
add
pop
xor
cwtl
dec
mov
lahf
arpl
pop
lock
js
jb
je
loope
inc
jp
or
push
das
push
ds
mov
cmpsl
adc
mov
fisubl
dec
xchg
fstpl
push
ret
push
lret
cmp
lock
fwait
mull
jb
test
inc
pop
inc
cli
mov
cs
fs
pop
fistpll
ljmp
jle
aad
daa
mov
or
xchg
jp
push
lret
loopne
sti
loopne
ret
mov
xchg
mov
sbb
shrl
xchg
not
dec
pop
aas
ss
icebp
mov
imul
pop
mov
outsl
add
sub
dec
popa
test
bound
mov
adc
push
cmc
popa
add
sbb
mov
loopne
loope
subl
jp
test
js
in
mov
inc
add
mov
in
loope
js
sbb
pop
shrl
clc
jg
js
mov
inc
ss
pop
pusha
rcrb
pop
js
scas
jp
nop
mov
cmp
dec
shlb
popf
jbe
add
pop
aas
jl
push
add
sarb
leave
mov
das
add
or
fldt
push
and
outsb
jnp
ret
stos
fwait
jno
cmc
cmp
loopw
mov
out
call
rcrb
lret
ds
jo
xchg
cmpsb
das
pushf
jbe
jge
add
pop
popf
and
mov
outsl
loope
and
mov
sub
push
jl
or
fmuls
push
mov
in
add
aam
aaa
add
mov
adc
mov
mov
loopne
inc
adc
hlt
xchg
jle
xor
test
loopne
lock
cmp
fs
jmp
push
cmp
rcr
cs
hlt
pusha
inc
js
add
push
ss
bound
and
movsb
pop
mov
jmp
sbb
push
mov
or
xchg
pop
data16
ficompl
icebp
inc
cmp
pop
jl
cmp
cs
lret
faddl
dec
push
mov
inc
mov
pop
xor
imul
clc
cmc
call
dec
stos
mov
push
inc
pop
repnz
mov
pop
pop
pop
and
and
pop
push
xor
mov
int
adc
jge
test
mov
xor
jl
add
fs
nop
push
pop
sbb
arpl
pop
lahf
cltd
jecxz
lahf
ds
insl
ss
hlt
mov
dec
inc
mov
rcrb
cmpsb
jl
loope
xor
out
loopne
and
mov
pop
das
jo
ds
pop
mov
mov
pop
out
ret
cli
push
pop
cmpsl
mov
cld
sbb
mov
push
add
sub
mov
mov
lret
sahf
lock
iret
ds
div
and
ja
push
mov
jbe
fcoms
fcmovb
and
push
out
pop
das
ds
mov
movb
scas
add
scas
mov
jmp
bound
add
pop
sub
pop
or
dec
stc
ljmp
loope
repnz
fiadds
jo
mov
cmp
jmp
xor
adc
fwait
pop
rcr
dec
push
jl
fcompl
push
adc
sub
dec
xor
outsl
loope
jp
enter
and
das
test
loop
sbb
push
pop
jp
adc
xor
stos
pop
jecxz
jne
test
push
rolb
and
adc
into
mov
and
cmc
sahf
ret
cmp
mov
out
out
mov
fsubrs
sbb
push
sahf
jp
and
xlat
lea
cmp
jb
adc
sbb
das
movsb
xchg
scas
dec
scas
add
out
loopne
mov
js
negl
adc
insl
mov
cmp
dec
les
mov
repnz
mov
stc
enter
scas
repz
xlat
xlat
dec
push
mov
mov
outsl
es
lods
inc
and
cmpsl
mov
mov
call
cmp
or
bound
test
and
jmp
hlt
jmp
jno
xchg
and
sahf
inc
negl
sbb
pop
add
xchg
rcll
xchg
mov
icebp
loop
pop
lahf
test
out
jbe
push
icebp
lret
pop
out
hlt
cld
std
clc
mov
and
mov
push
dec
int3
add
xor
adc
int3
sarb
ss
loopne
les
imull
mov
dec
jmp
cmpsb
ss
xchg
mov
xor
popl
pop
pop
pop
inc
sbb
outsb
mov
add
sahf
cld
nop
sub
jne
cmp
xor
mov
sbb
mov
inc
repz
mov
or
mov
cmp
std
hlt
loope
cmp
fstl
add
xlat
jecxz
lods
xchg
lret
rol
imulb
scas
lret
pusha
psrlq
cmp
bnd
jge
ret
mov
mov
jo
jl
ret
mov
das
or
mov
test
cmpsb
hlt
loop
mov
pop
xorb
jmp
jo
mov
push
pop
fisttps
ret
mov
hlt
rcr
clc
jb
mov
xchg
mov
push
jl
cmpsl
repnz
xchg
clc
xchg
xor
lods
rcr
pusha
or
aad
inc
dec
and
in
pop
ds
add
cli
imul
je
dec
mov
mov
dec
mov
jle
je
push
ljmpw
jl
repz
lock
sub
pop
cmp
ljmp
cmc
add
xor
mov
jo
ficompl
out
xor
dec
ds
rclb
test
stos
jle
shrb
aam
call
test
pop
pushf
inc
neg
add
dec
bound
mov
outsb
pop
jb
or
pop
cmp
popa
insb
cmp
ljmp
cwtd
repnz
imul
adc
jo
divb
stos
enter
aas
mov
push
mov
sbb
arpl
mov
mov
pop
mov
js
pop
mov
lock
cli
je
out
push
and
je
cs
out
aad
mov
cmp
loopne
or
xchg
mov
mov
fwait
jp
push
xchg
and
adc
xor
ss
cwtl
fimull
fsubrl
cmp
bound
pop
and
xorl
nop
inc
out
mov
lods
add
sub
clc
sbb
ljmp
jp
push
sub
jo
jns
and
add
xchg
lret
jbe
fcmovb
arpl
xor
or
pop
pop
push
movsb
pop
outsb
out
push
xor
loopne
stos
sbbb
cmp
rolb
mov
add
push
mov
clc
add
jge
pusha
hlt
jecxz
dec
decb
pop
jbe
sti
sbb
and
and
sub
cmp
pop
mov
dec
or
pop
popaw
lea
pop
add
mov
hlt
in
sahf
sub
mov
mov
sti
mov
rorb
sbb
pop
mov
jne
push
push
mov
sbb
popa
inc
xchg
cs
pop
pop
push
cmpsb
cmpsb
call
sti
test
and
add
popf
inc
mov
add
inc
push
sarb
das
mov
jnp
lcall
pushf
sbb
sbb
and
ror
fsubrs
notb
sti
lcall
aaa
in
lock
rcll
xchg
xchg
pop
std
icebp
jecxz
repnz
fldz
scas
fists
push
in
cmp
cmc
dec
into
jecxz
jp
mov
addr16
mov
pop
jl
aad
jmp
test
lds
fiadds
clc
inc
lds
lea
or
cmp
cmpb
adcb
push
pop
push
lret
push
loopne
test
and
sbb
lods
and
out
fdivp
dec
int3
in
mov
scas
into
fisubl
xchg
or
inc
add
pop
sar
bound
pop
shl
lods
fnstsw
jp
rcrl
inc
test
jle
pop
hlt
sahf
xor
mov
xor
jo
xchg
call
adc
pop
jge
je
lea
lcall
jmp
xchg
mov
cmp
xor
cmp
in
inc
icebp
lock
ret
mov
or
jge,pt
mov
xor
cwtl
outsl
push
loop
dec
xor
jg
cmp
xor
cmp
mov
stos
out
pushf
jp
ss
adc
aad
sbb
leave
mov
mov
inc
sub
stos
lret
xor
xchg
sub
ss
mov
mov
adc
jl
fstpt
xor
out
mov
ds
dec
mov
mov
test
mov
shr
icebp
mov
mov
orb
xor
icebp
lds
and
push
jg
cmc
inc
aam
add
test
push
lea
loop
ljmp
jmp
sub
clc
or
addb
inc
sahf
xchg
lret
fbld
jle
aam
jno
add
test
pop
arpl
sub
add
mov
imul
sub
pushf
mov
icebp
add
popa
push
mov
adc
sub
or
xchg
cld
lret
push
cwtl
add
je
adc
stos
push
cs
jp
xchg
inc
and
cmp
pop
push
lcall
mov
cld
adc
ret
xchg
daa
clc
pop
inc
sbb
mov
mov
lock
pusha
mov
add
push
cwtl
mov
mov
dec
add
pop
and
mov
lret
dec
jl
icebp
loope
inc
and
xchg
lock
cmpsb
mov
mov
aad
push
cmp
data16
rclb
mov
rcrb
insb
adc
add
xor
clc
cmc
and
outsb
out
sub
das
push
jo,pt
cmp
inc
mov
jmp
bound
add
pop
loop
faddl
mov
mov
shl
cmc
fs
xchg
lahf
repnz
cmpsl
inc
pusha
lock
and
xor
aas
jl
inc
or
adc
sti
les
mov
inc
jne
adc
or
adc
jb
mov
clc
cmc
push
fdivs
shll
in
icebp
insb
shll
ds
adc
fmul
movsb
jl
push
push
loopne
lods
dec
jle,pt
and
pop
aas
jle
push
dec
jae
mov
fcmovb
dec
aaa
loopne
je
cmp
scas
cmp
ficoms
mov
cmp
xchg
dec
mov
aam
or
lods
je
jbe
ret
jne
enter
push
push
cmpb
jp
fsts
and
push
pop
test
pop
cmp
adc
xorl
mov
out
aas
inc
inc
cmp
popa
pop
mov
push
mov
mov
or
scas
xchg
shl
jge
loope
push
sbb
pusha
dec
mov
int
lock
lock
sub
dec
inc
xchg
jmp
icebp
enter
push
out
int
jge
pop
cld
js
xchg
pop
sbb
pop
and
adc
orl
add
inc
clc
lock
jle
test
ljmp
xor
shlb
xchg
and
js
test
xchg
stos
fisubs
push
js
loope
fists
or
cmp
xchg
cltd
hlt
push
out
scas
ret
rcr
ljmp
rorb
jl
loopne
repnz
das
or
adcl
cli
sub
sahf
xchg
stos
fidivrl
lock
roll
jns
insl
pop
pusha
or
xchg
enter
sbb
push
mov
lahf
inc
adc
mov
adc
adc
in
sti
xchg
mov
in
push
or
or
xor
out
adc
push
ljmp
xor
mov
rcrl
pop
mov
cli
adc
call
and
push
es
adcl
xor
mov
int3
pop
mov
push
arpl
mov
mov
cmp
cli
test
fsubs
rcrb
pushf
sub
sub
mov
xchg
rorl
xchg
ret
test
leave
insb
push
push
cmp
test
push
xlat
jo
push
jno
jecxz
adc
aaa
dec
clc
jne
loope
inc
test
xor
cli
hlt
ds
mov
sbb
aam
in
mov
shl
xchg
and
mov
cmpsb
aam
mov
adc
push
mov
call
insb
fisubl
mov
sub
cli
cs
int
mov
in
dec
pop
sahf
imulb
ret
je
jb
addr16
jnp
inc
notl
adc
test
inc
sbb
and
sbb
js
loop
xchg
stos
and
xor
or
mov
sahf
mov
pop
adc
or
adcb
das
push
fnstsw
dec
pop
in
test
mov
pusha
lock
cld
es
mov
sbb
bound
xor
out
xchg
inc
js
ret
out
and
sub
in
lcall
hlt
fisubrl
lods
jbe
mov
ds
pop
cmp
enter
lock
inc
xor
jle
jp
cmp
pop
push
xor
es
shlb
stc
lret
daa
cmc
mov
push
shrl
mov
cli
sub
andb
ret
orb
je
iret
and
loope
dec
push
add
mov
adc
push
sti
push
mov
adc
and
cmp
hlt
xor
scas
out
and
dec
filds
mov
push
int3
cmpsb
push
adc
test
je
sbb
lods
mov
adc
aas
mov
dec
dec
xchg
ljmp
xchg
sbbb
call
pop
push
pop
pop
adc
sahf
sti
sub
stos
pop
repnz
inc
xor
xchg
cmpsb
or
lock
mov
pop
mov
decl
js
mov
clc
push
dec
xchg
negb
pop
js,pt
std
push
push
pushf
xchg
sub
jp
xor
adc
test
dec
jp
bound
push
shlb
cs
mov
sub
pop
jae
pop
jl
icebp
fcoml
loop
mov
pop
das
adc
push
les
mov
loop,pt
mov
inc
pop
icebp
cmc
xorl
call
dec
outsb
fwait
sbb
mov
dec
js
add
lcall
mov
pop
loopne
std
or
shlb
cmp
jge
adc
sub
cwtl
or
xchg
fsubl
shlb
je
dec
lahf
js
cmp
fcoms
and
das
cmp
inc
sub
jnp
cmp
mov
cs
or
add
repnz
sti
call
in
sub
jnp
loop
in
add
shr
lods
jo
icebp
testb
movsl
jge
fsubr
sahf
push
mov
outsb
jo
into
mov
mul
sar
stos
dec
dec
mov
mov
inc
cmp
inc
xchg
push
repnz
adc
ds
dec
jecxz
push
xor
mov
xchg
pop
or
psrld
in
inc
push
es
pop
mov
les
data16
push
jle
ss
inc
clc
loopne
add
xor
pop
sbbl
sub
out
dec
jbe
inc
imul
imul
xchg
stos
xchg
mov
out
mov
rcl
cwtl
out
xchg
pop
cmpsl
xor
or
mov
fists
sub
lret
or
add
ljmp
scas
js
jecxz
mov
push
or
mov
mov
rcrb
mov
or
lock
jmp
andb
add
pop
pop
jl
xlat
add
loopne
sbb
ljmp
xchg
sahf
push
lock
cmp
movb
cmp
movsb
dec
sbb
bound
sbb
mov
sub
lods
je
mov
addl
push
adc
fmul
bnd
push
loope
ret
rol
pusha
xor
stos
mov
jge
pop
lods
mov
bound
mov
ljmp
and
aam
push
clc
adc
pushf
xor
mov
push
mov
or
aam
les
outsl
loop
in
sbb
mov
xchg
clc
insb
xor
xlat
mov
mov
xor
and
nop
test
mov
test
push
int3
sbb
das
push
aam
aad
les
addb
add
sub
sbb
loope
sbb
adc
ds
jbe
mov
int3
ss
add
lods
or
adc
loop
adc
dec
sbb
fst
inc
ret
cmp
adc
aad
push
lods
ffreep
cli
mov
mov
jle
mov
pop
push
inc
enter
orl
icebp
cmp
leave
scas
inc
mov
outsb
dec
out
mov
inc
adc
aad
jle
lock
stos
cmp
ficompl
and
jnp
cmp
xchg
xchg
in
cmpsb
mov
pop
add
and
sbb
add
xchg
std
mov
loopne
aam
mov
jno
lock
imul
lock
push
call
call
pop
fidivrs
loopne
jno
ds
jmp
xchg
mov
inc
dec
cmp
loope
fsts
sub
insb
in
shlb
clc
sarb
test
inc
cmc
pop
pop
fwait
add
loop
scas
lret
outsb
loope
adc
push
cli
sbb
int
add
aaa
jl
cli
lcall
subb
leave
add
icebp
jecxz
jecxz
dec
pop
lret
insb
outsb
outsb
or
sub
lea
loope
push
mov
lds
pop
mov
cmc
fcomp
imul
std
pinsrw
js
ds
cmpsb
mov
sub
mov
fidivl
push
loopne
sti
jmp
jp
mov
add
lock
xor
cld
out
or
mov
jmp
into
cmp
rcll
mov
jge
jle
mov
fnstcw
dec
push
sahf
mov
lock
xchg
je
xchg
xor
jae
add
and
bound
icebp
rorl
jg
push
push
stos
testb
rcr
lods
mov
loope
fidivl
or
jbe
push
add
mov
fdivr
mov
ds
jae
jl
in
out
mov
jl
loopne
test
add
mov
adc
sub
xchg
test
setg
pop
fs
sbb
movsb
xchg
fadds
hlt
xor
subl
subb
xor
fidivl
xor
xlat
sub
lock
mov
adc
jl
loopne
inc
shlb
mov
cmpb
aas
push
pop
push
mov
std
fdivl
std
mov
ds
sub
mov
cltd
push
sub
jnp
fildll
out
rcl
sahf
add
in
xchg
xchg
mov
add
push
cmp
lahf
and
cli
or
lea
insb
das
ljmp
sahf
aam
jl
or
sbb
xchg
addr16
ja
push
pop
inc
dec
out
inc
adc
mov
nop
adc
adc
sbb
push
lock
clc
lock
cmpsb
rclb
shll
rcrb
xor
xlat
popl
fistps
loop
mov
cli
stos
lock
fildll
sub
jns
clc
xchg
pop
cld
fnstsw
mov
fdivrs
repz
rol
pushf
xor
jnp
sar
cli
jmp
and
outsl
mov
clc
rcr
inc
mov
xor
sub
std
push
out
imul
mov
loop
test
enter
ss
dec
jl
popa
cmp
pop
add
inc
fmuls
mov
sub
loopne
aas
jge
int
jo
mov
xorb
fwait
sub
add
sti
repnz
lock
movsb
push
xchg
fs
cli
push
dec
imul
bound
mov
lock
enter
adc
loope
cli
inc
aad
dec
xchg
push
mov
hlt
test
xor
mov
incb
mov
mov
mov
pop
pop
rcrl
addb
lret
outsl
jmp
adc
loope
shrl
xchg
jne
sbb
jo
mov
or
fisttpl
loopne
aaa
push
mov
mov
test
mov
cmp
adc
xor
ds
movb
cld
push
in
call
scas
jl
sbb
sub
or
cmp
adc
shl
arpl
pop
fs
jle
ds
and
mov
push
cld
stc
movsb
es
call
icebp
xor
xchg
cld
fidivl
ds
stc
mov
mul
shll
outsl
or
lds
push
xor
and
inc
sti
sub
cmp
jmp
add
xor
and
add
fcompl
fadds
cs
lods
scas
iret
bound
push
or
jbe
jbe
jns
mov
inc
mov
mov
into
jp
and
rolb
push
push
fisubs
pop
push
test
inc
ds
add
lods
ret
xchg
sbb
jge
icebp
jo
ficoml
mov
sti
insl
rorb
pop
mov
xchg
int
int
dec
and
nop
dec
adc
outsb
stos
sbb
or
int
int
jge
and
shll
int
dec
xor
add
sub
sbb
int
clc
xchg
jmp
sarb
int
int
gs
jnp
pop
lods
xor
mov
imul
int
and
inc
cmc
sbb
xchg
movsl
xor
adcb
dec
cmp
jno
lods
pop
sbb
icebp
rorl
xchg
enter
popf
pop
cmp
in
les
cmp
push
mov
sub
mov
out
clc
jge
and
in
test
pop
pop
mov
fisubs
dec
orl
hlt
adc
imul
lods
xchg
jl
clc
xor
or
jecxz
ds
sbb
xchg
cmpsb
roll
mov
cmpsl
sahf
std
xchg
lock
cmpsl
into
sahf
adc
xor
add
inc
clc
push
jno
lock
pop
cmp
jl
in
xchg
sub
fcmovnbe
cmp
loop
lock
pop
in
cmpsb
inc
push
out
call
fimuls
sarb
sub
loopne
or
mov
pop
fbld
jbe
fisubrs
jno
das
sarb
xor
sub
ret
incb
mov
nop
loop
lock
and
test
sbb
ja
mov
mov
sub
out
cmc
pop
sahf
add
out
sbb
rolb
pop
jge
mov
mov
dec
jle
dec
sub
aad
jmp
sub
cli
add
scas
mov
loop
icebp
insb
sub
dec
cmpsl
lcall
aas
mov
leave
es
arpl
jmp
shrb
out
decb
pop
dec
cmp
cwtl
rorb
or
dec
rorb
pushf
and
jb
ds
mov
push
clc
cmpsl
push
lret
cli
push
push
xchg
sahf
push
jno
sub
das
es
pop
stos
mov
or
lss
pavgb
scas
push
mov
adc
adc
sub
mov
dec
dec
push
ret
mov
inc
shl
insb
pop
dec
int3
push
dec
clc
dec
loope
enter
pusha
sbb
adc
lcall
sti
adc
js
mov
cmp
jae
mov
push
jo
add
shr
cwtl
aam
clc
mov
bnd
inc
or
or
loope
inc
cmpsl
je
add
js
mov
out
int3
pop
les
add
cwtl
fimuls
mov
push
jle
cwtl
fistl
adc
pop
cltd
sbb
clc
push
inc
xchg
mov
test
pop
mov
je
sub
lahf
adc
push
pop
push
aaa
insl
out
jbe
or
scas
push
je
loope
or
addr16
push
sarl
add
push
lret
push
rcl
ss
inc
in
lret
sbbl
cs
out
scas
rorb
or
mov
push
fidivl
icebp
jecxz
mov
lret
xor
out
test
mov
into
int3
in
xorb
pop
das
cmp
cmp
xchg
fstps
inc
inc
pop
mov
das
pop
sbb
sar
mov
sbb
sti
mov
sarb
test
inc
cmp
xor
sahf
pop
subl
cmc
test
sub
lea
dec
stos
pop
jle
roll
in
inc
or
idivl
sub
gs
cli
and
dec
mov
push
pushf
jmp
mov
aas
lods
sub
xlat
sbb
mov
aaa
loop
fcoml
jl
insb
xorb
xchg
xlat
sbbb
fisubs
jp
gs
inc
std
sub
cld
mov
lock
sbb
mov
movb
sbb
xor
pop
fcompl
adc
mov
ljmp
cmc
xchg
mov
jecxz
es
loopne
mov
dec
xchg
xlat
scas
lsl
push
mov
cmpsb
outsl
je
aas
in
mov
mov
popa
pop
adc
xchg
xchg
leave
jbe
dec
pop
movl
cmp
jecxz
push
jl
cli
cmp
push
nop
testb
push
les
movswl
mov
shlb
push
fmuls
xor
xor
icebp
loop
xchg
ljmp
clc
lahf
adc
xor
daa
mov
fistpl
pmulhuw
daa
jbe
push
mov
mov
lock
insl
mov
sub
push
mov
aad
inc
mov
or
or
fstpl
divps
sub
data16
jb,pt
pop
das
pop
inc
mov
and
cld
mov
enter
lock
add
jbe
loop
test
dec
call
mov
lahf
cmp
out
sub
xchg
adc
loopne
clc
mov
sbb
insl
sbb
xor
pop
pop
aas
inc
outsb
jb
fsubr
insl
iret
or
testl
call
lahf
add
dec
inc
pop
inc
push
jg
inc
inc
pop
inc
shr
push
lret
es
testb
mov
enter
sbbl
ret
test
fs
shrb
test
das
jecxz
xor
push
push
sbb
in
and
aam
mov
xorb
push
sarb
xchg
cli
std
jp
cwtl
mov
cmp
xlat
push
jo
ljmp
and
dec
repz
pop
jg
pop
push
enter
aam
push
xchg
xchg
inc
jp
jl
jp
mov
adc
out
loop
rorb
mov
sbb
imulb
stos
lahf
push
mov
adc
sbb
in
aam
adc
sub
cmpsl
stos
mov
xchg
dec
rclb
jge
push
cld
jbe
pop
push
sbb
push
pushl
psrad
lock
data16
test
bound
inc
out
lcall
cli
gs
pandn
scas
mov
clc
xor
loopne
sub
js
and
jge
aaa
fistps
push
and
jbe
push
clc
inc
mov
cmovns
and
outsl
sub
cmp
mov
jge
icebp
sarl
jp
and
mov
aam
fdivrs
jmp
and
push
or
xchg
lock
imul
in
insb
cmc
addb
js
loop
xchg
test
inc
add
dec
mov
adc
rcll
cli
dec
push
test
int
stc
clc
shrb
mov
mov
push
and
ficoml
test
cmp
dec
mov
int3
ret
cmp
jle
out
divl
std
dec
mov
adc
sahf
adc
adc
loope
mov
mov
sub
jnp
shll
xchg
sub
or
ja
inc
pop
mov
jg
mov
mov
stos
xchg
idivb
add
mov
lret
js
adc
pop
repz
lds
hlt
repz
dec
scas
jle
inc
pop
sbb
mov
int
pop
js
ss
insb
sar
fisubrs
push
adc
xchg
fs
in
pop
jl
popf
cli
orb
loop
jne
adc
mov
pop
fists
lods
movsl
xchg
xchg
movsb
mov
mov
push
loop
mov
push
lea
dec
push
lds
nop
int3
xchg
jp
or
inc
pushf
adc
push
pop
test
cli
adc
mov
xor
push
imul
sub
pop
pop
fsubrl
adc
and
es
mov
rclb
inc
cwtl
dec
je
inc
mov
pop
mov
sti
call
mov
or
or
mov
pop
jl
and
enter
ds
cmp
rolb
fneni(8087
pop
mov
test
xor
push
mov
dec
lock
aaa
push
jp
pushl
xchg
nop
icebp
popa
xchg
cmpb
push
aas
xor
jo
out
jno
sub
pop
add
orl
jle
shlb
loopne
ds
mov
adc
jb
inc
xchg
pop
cmpsb
lock
jb
or
adc
cli
clc
call
or
iretw
rorl
mov
pushf
mov
xchg
fsubrl
into
push
aas
xor
cmpsb
lds
xor
inc
xchg
cli
enter
push
loopne
dec
lods
subb
add
xchg
jnp,pn
pushf
sahf
cmc
cmp
cli
mov
mov
test
jl
sub
and
sbb
fisttps
xchg
xor
lret
jo
ds
xchg
in
cmp
fld1
in
mov
sub
outsb
sbbb
ret
shr
jno,pt
fwait
push
es
inc
push
adc
outsl
or
pop
out
xor
xchg
mov
pop
pop
stos
mov
mov
lods
push
sbb
sub
cld
sub
sahf
jne
mov
jle
xor
mov
mov
idivl
or
jp
loopne
test
shlb
sub
aad
cmpsb
cld
lcall
std
push
and
xchg
pop
shl
xor
cmp
mov
shlb
sub
les
sbb
xchg
or
inc
xchg
pop
call
sub
and
or
fdivrl
pop
push
lock
es
push
and
or
jp
adc
and
lock
cmp
test
ds
sbb
add
enter
pop
mov
and
push
les
push
dec
fisttps
mov
test
into
xchg
adc
cwtl
ljmp
fucomip
sti
pop
ret
into
jp
sar
scas
sbb
cmp
mov
mov
out
test
mov
or
xlat
scas
dec
sbbb
pop
xor
loopne
inc
or
sub
cwtl
pop
mov
and
test
mov
fisubs
sbb
jle
cmp
lret
mov
jl
fmull
mov
or
mov
out
ret
addl
fldcw
and
mov
and
decb
cwtl
out
cmpsl
dec
in
scas
dec
aas
push
movsb
add
pop
lahf
les
jge
hlt
cmc
mov
lods
mov
mov
or
fldl
sahf
add
jp,pt
ja
les
loopne
pop
push
fdivrl
sub
cwtl
pop
jbe
sbb
mov
mov
out
xchg
inc
sbb
ss
push
sbb
dec
mov
xchg
pop
dec
jns
push
jg
out
lret
sub
aad
mov
xor
jb
pop
pop
out
pushf
push
push
ds
sbb
pop
movd
cmp
into
test
xor
ljmp
bound
pushf
adc
push
jge
add
inc
inc
pop
jle
repnz
icebp
inc
loopne
cmovl
movsb
movsb
sbb
mov
sub
mov
mov
mov
push
andb
mov
cld
js
mov
repnz
out
sti
loopne
mov
xor
fwait
shrb
dec
xor
jno
je
pop
subl
cmp
jo
std
test
ljmp
cwtl
jb
hlt
cmp
mov
dec
or
push
lret
inc
dec
out
sub
rclb
icebp
call
mov
hlt
in
bound
dec
in
aas
rcr
je
and
mov
lods
or
add
aas
lea
jp
add
mov
repnz
xor
shll
xchg
rcl
hlt
pop
fmull
cltd
dec
sbb
push
and
push
xor
insb
push
jl
jecxz
xor
jmp
mov
pop
clc
lock
fwait
je
pop
pop
arpl
xor
lods
les
ds
push
into
jb
cmp
daa
or
push
rorb
rcll
loopne
mov
sahf
sahf
cmc
cmp
pushf
push
fsubl
sbbl
adc
adc
test
shl
sti
ljmp
sbb
mov
add
cmpsb
jg
cwtl
push
push
or
rcll
cld
cs
ret
pusha
xor
cmp
roll
pop
cmp
scas
lret
fiadds
out
jnp
jmp
and
je
outsl
mov
jne
xor
stos
pop
inc
subl
mov
les
jb
ret
jns
push
rolb
xchg
sbb
ljmp
or
pushf
dec
out
dec
fcmovbe
mov
lods
out
dec
adc
mov
pop
cmpsb
sbb
cld
push
cmp
mov
mov
cld
and
loop
sbb
int
pop
and
pusha
ja
dec
les
xor
lahf
xchg
xor
mov
call
xlat
repz
xor
lret
loop
adc
sbb
mov
add
sub
mov
mov
jle
inc
mov
loopne
add
cli
arpl
idivl
inc
adc
or
test
loopne
jo
push
xchg
cs
pop
push
movsb
enter
in
cmp
icebp
ljmp
push
sub
pop
push
mov
push
test
jecxz
jge
mov
fcomip
cmp
ret
mov
int3
cmp
repnz
push
jno
xor
std
adc
sbb
sbb
rcrl
loop
in
mov
cli
add
pop
sbb
xor
cmp
pop
push
cs
sub
push
push
test
cli
ds
adc
pop
fiaddl
les
andb
xchg
lahf
test
mov
les
shlb
ljmp
sub
faddp
dec
jl
rorb
pushl
adc
pop
or
loopne
or
je
pop
dec
cmp
fdivl
out
sub
push
sub
pop
mov
and
insb
test
cli
jl
das
sbb
movsl
cmp
sbb
jge
jecxz
cmp
xchg
xchg
fdivl
ficoms
clc
or
out
xor
mov
inc
lea
test
and
inc
ret
call
jge
ljmp
xchg
clc
inc
iret
shl
jmp
xchg
in
test
jo
mov
mov
outsl
add
adc
dec
shr
sti
xchg
das
jne
hlt
std
jl
mov
inc
inc
adc
jne
shr
imul
mov
shll
xchg
mov
fimuls
test
mov
test
add
jmp
je
rep
xor
push
jae
sahf
xchg
mov
jle
icebp
movsb
cld
dec
xchg
std
xchg
pop
clc
sbb
repnz
mov
cli
push
fsubrl
jb
push
js
cmp
pop
xchg
jns
fisubl
test
rol
ret
sub
sub
cmp
rclb
cmpsl
cmp
dec
mov
cld
cmpsb
jp
mov
mov
jmp
sub
into
dec
mov
inc
shrl
shr
push
dec
adc
mov
fadds
mov
sti
push
mov
icebp
shlb
repz
push
and
ljmp
mov
icebp
cmpsl
into
cmpsl
push
pop
mov
mov
movsl
js
jge
sub
xor
jge
push
pop
sbb
inc
inc
inc
jl
out
mov
dec
pop
cli
xchg
std
jl
std
xor
xchg
inc
mov
js
jo
jbe
pop
mov
xchg
or
fcomps
orl
js
test
lahf
movsl
rclb
into
loop
rcl
dec
push
in
mov
mov
add
mov
mov
or
loop
pusha
rorl
push
cmp
xchg
dec
adc
notl
fdiv
insb
js
sbb
mov
ja
add
stos
xchg
call
outsl
mov
insb
push
outsb
repnz
xchg
les
xchg
dec
push
mov
movsb
lods
cmp
movsb
subb
hlt
out
lahf
push
cmp
ja
mov
mov
add
loope,pn
icebp
jmp
std
add
loop
sub
je
es
icebp
icebp
sub
int3
sti
and
dec
adc
add
inc
inc
nop
outsl
fmuls
mov
pop
jl
xchg
lods
inc
push
dec
adc
pcmpeqd
shlb
data16
cs
cmp
and
pop
cld
cli
scas
cmpsb
lods
mov
pop
mov
ja
sbbl
jbe
fmull
mov
rolb
out
dec
cli
clc
adc
je
subb
mov
mov
cmp
dec
pop
mov
push
and
imul
ret
mov
xor
mov
in
xchg
shrl
shlb
mov
insb
test
aaa
jecxz
rcrl
out
inc
mov
stc
inc
js
and
jbe
push
dec
and
push
push
cmp
or
mov
in
aas
add
xchg
lcall
mov
daa
xor
cwtl
pusha
cmp
insl
cld
fisubrs
cmpsb
nop
or
ljmp
jl
cmp
in
leave
daa
push
mov
fcmovnb
ja
mov
and
sahf
jge
mov
add
shr
js
xor
or
or
js
movl
aaa
lret
enter
xlat
pop
test
fcoms
lods
add
sub
cli
push
dec
ja
pop
pop
pop
mov
dec
sahf
push
out
roll
jl
and
inc
dec
clc
push
loop
jbe
push
pushf
inc
xchg
xchg
jae
cli
cs
int3
add
sbb
loope
dec
or
push
adc
jge
pop
xor
xor
aaa
hlt
sbb
jp
add
mov
ss
pop
andl
adc
shlb
inc
inc
sub
mov
aas
pop
sub
pop
adc
inc
dec
adc
xor
in
inc
es
mov
jge
mov
orb
adcl
dec
aad
dec
mov
in
mov
nop
rcll
mov
repnz
or
and
and
dec
xchg
mov
pop
jo
mov
ret
push
push
insb
mov
mov
mov
mov
clc
xor
mov
cmp
scas
data16
cmpb
sbb
divb
pop
pushf
push
xchg
test
cmp
mov
lahf
push
sub
jge
lret
xchg
insb
mov
jge
sub
push
cmp
jmp
jecxz
movl
mov
mov
push
dec
xchg
xor
icebp
rol
fistpll
fs
hlt
lcall
xchg
push
jns
daa
pop
scas
mov
mov
pop
push
or
lea
fistpll
ret
jmp
lock
cmp
push
cwtl
movsl
addr16
orl
pop
lods
push
dec
call
sbb
subl
or
jnp
jmp
cmp
push
dec
jge
inc
jne
cli
cs
clc
out
or
sub
rcrl
decb
fdivr
es
pop
mov
ljmp
dec
std
loopne
dec
fsubrl
test
push
inc
cld
mov
xchg
jbe
sub
loop
addl
ja
jp
es
jbe
sub
bound
mov
and
mov
js
repnz
pushf
jo
lock
movl
and
jmp
adcl
adc
testl
lock
jo
mov
mov
sbb
pop
mov
jno
inc
jle
ret
in
inc
push
fs
std
cmc
pusha
xor
pop
or
xchg
rolb
push
out
and
pop
cli
loopne
stc
cld
hlt
adcb
adcl
lds
mov
movsb
lods
dec
inc
add
loopne
test
std
xor
fdiv
popa
and
pop
pop
push
cmc
lret
cmp
adc
jnp
mov
sar
adc
js
xchg
add
icebp
mov
adc
sub
pop
sub
das
mov
sbb
hlt
ljmp
lods
sarb
ret
js
jmp
clc
lock
test
fsub
xchg
pop
inc
inc
cli
in
loope
roll
pop
js
fcomip
lds
lcall
mov
and
fimull
xor
jnp
std
hlt
jmp
xchg
cld
mov
cmp
icebp
sub
popa
insb
hlt
pop
pop
pop
jge
hlt
push
sbb
xchg
jge
repnz
stos
ja
sahf
shrb
mov
pop
fisttps
mov
cmp
pushl
push
pop
cld
loope
adc
enter
ljmp
test
cld
iret
andb
lock
insl
cs
ret
push
mov
lods
pop
mov
push
mov
add
inc
cmp
icebp
sbb
adc
push
or
popf
orl
cwtl
test
adc
cwtl
icebp
mov
sbb
test
pop
inc
adc
js
and
fbld
xor
ds
dec
jbe
shlb
mov
or
push
xchg
andl
dec
ficompl
mov
and
movsb
loope
test
insb
outsl
cli
data16
sub
xchg
bswap
xchg
daa
pop
adc
xchg
pop
movsl
xlat
aad
dec
outsb
pusha
push
push
movb
iret
into
cmp
out
inc
mov
sbbb
subb
xchg
add
mov
cmp
rcrb
movsbl
add
and
or
subb
bound
fdivp
rcl
mov
stos
lret
arpl
mov
and
mov
xor
les
push
xchg
mov
inc
inc
jae
or
pop
in
sub
lahf
inc
add
cli
xchg
pusha
xlat
xchg
sub
subps
dec
rol
push
sub
inc
push
add
mov
cmpsl
shrb
fwait
cltd
or
pusha
push
mov
dec
xorw
lock
jbe
loop
mov
movsl
loop
jb
jo
addl
test
into
clc
hlt
loope
mov
jbe
cli
and
sbb
jb
push
jle
mov
frstor
xor
mov
dec
pop
adc
out
test
mov
dec
cli
jne
jo
dec
fwait
loopne
hlt
cmpsb
lock
mov
add
je
loopne
sub
sarb
jnp
popf
dec
sahf
rcrb
lock
inc
jge
push
out
jbe
data16
cmp
js
push
cmpsl
mov
lock
ret
dec
movsb
data16
dec
mov
lods
repz
jae
push
in
jo
out
or
or
dec
cld
lods
add
push
jp
mov
sub
loop
dec
push
sbb
pop
ja
xor
sub
xchg
icebp
ljmp
mov
mov
daa
js
orb
shrb
test
inc
inc
cmp
icebp
jl
inc
loopne
mov
dec
loop
cwtl
rcl
mov
clc
sub
adc
xchg
pop
loopne
cmp
roll
xchg
into
xor
push
push
jl
and
adc
filds
int3
shlb
sbb
inc
push
and
pop
adc
sbb
leave
arpl
cmp
clc
icebp
push
daa
inc
add
adc
das
movsl
dec
inc
mov
jecxz
out
and
ja
ds
mov
and
or
rcrb
mov
sbb
cmp
aam
fisttpl
into
push
imul
inc
jno
pusha
xchg
fimull
jle,pt
mov
fidivl
bound
jp
sarb
loop
pop
jge
dec
clc
mov
push
mov
nop
jle
fwait
icebp
dec
les
rorb
inc
mov
jno
and
test
std
lock
ret
pop
insb
or
les
ljmp
out
sti
mov
and
lcall
dec
pop
ret
pop
cld
and
sub
pop
js
andl
adc
int3
or
jecxz
adc
dec
pop
pusha
jge
jo
mov
pop
and
jl
sbb
insb
js
or
jmp
push
imul
dec
mov
add
add
dec
jmp
bound
enter
push
pop
clc
imul
fwait
push
pop
sarb
ja
loopne
lcall
ret
and
and
or
cmp
lea
cmp
pop
sbb
cld
mov
mov
out
clc
pop
mov
loope
xor
adcl
lcall
loopne
bound
rol
cli
icebp
out
sub
mul
adc
pop
or
dec
jecxz
pop
imul
pop
in
lods
rorb
stos
imulb
ss
cmp
mov
sbb
pop
lods
les
in
adc
faddp
push
cs
mov
pop
ds
pop
inc
aam
les
xchg
into
mov
scas
nopl
mov
sti
jecxz
mov
cli
cwtl
rclb
hlt
cmpsl
frstor
cs
test
movsb
xchg
mov
ret
fidivl
je
movsb
clc
sti
pop
loopne
jae
mov
das
fdivrl
les
or
xor
inc
dec
lods
loopne
or
inc
fnsetpm(287
stos
sbb
lock
xchg
js
xchg
lods
js
bound
cmp
addr16
cmpsb
adc
dec
pop
stos
add
jle
jnp
cmp
hlt
aaa
hlt
hlt
call
mov
jmp
out
ret
sarb
out
loopne
lods
roll
ds
mov
pop
jge
push
lods
lcall
movl
push
cld
insl
dec
fisttps
xor
inc
sbb
mov
clc
cltd
xchg
rolb
xor
sub
ret
icebp
jmp
sahf
inc
mov
pop
and
inc
bts
pop
xchg
xor
xchg
orb
js
insb
push
sub
jl
mov
jle
subb
lods
jns
lcall
push
fists
clc
clc
jmp
xchg
mov
rcl
je
rorl
scas
xchg
xor
out
lahf
jbe
mov
gs
dec
test
adc
jp
mov
mov
rorl
cmc
jecxz
pushf
xchg
icebp
ds
sahf
mov
addr16
mov
mov
mov
xor
sub
xchg
insl
cmp
movsb
xor
inc
hlt
pop
or
add
jge
sbb
es
test
adc
orb
sub
and
test
or
mov
pusha
cld
ds
fs
add
mov
icebp
outsb
jne
adc
je
leave
bound
addr16
inc
xor
xor
fstps
jno
lods
pop
xor
lock
xchg
mov
mov
aad
mov
das
push
call
adc
rorb
mov
push
or
ljmp
and
ret
aad
ficompl
loopne
xchg
loop
inc
cmp
or
mov
out
std
jo
cmp
jmp
shrb
jne
cmp
nop
xchg
mov
pusha
mov
daa
lea
enter
je
loope
hlt
aas
sarb
mov
inc
loop
repz
xorl
movsb
push
dec
jmp
cmp
mov
or
jge
out
daa
jl
icebp
sahf
es
adc
jp
sub
shrb
inc
xor
enter
pushl
hlt
push
push
sub
mov
jle
xor
cmp
clc
jmp
jmp
testl
lahf
push
movl
call
mov
lahf
pop
popl
push
sub
js
pop
xor
icebp
fs
dec
into
imul
pop
addb
sub
push
out
gs
scas
dec
pop
jp
call
sub
pop
test
rol
sub
pop
aas
ds
int
ret
mov
adcb
adc
dec
pop
inc
pop
sbb
into
lock
lock
push
adc
fbld
idivb
inc
inc
cmp
loop
mov
pop
addl
mov
mov
addb
push
jle
and
jecxz
loop
xchg
inc
test
lock
and
int3
icebp
xorl
dec
dec
mulb
add
push
xchg
cli
scas
outsb
insb
je
mov
jle
test
mov
jp
cwtl
pushf
stc
cmp
int3
out
or
fwait
inc
push
mov
cmp
lock
push
repnz
xchg
cmp
fidivrs
add
cld
outsb
dec
cmc
clc
push
sarb
clc
jbe
lock
pop
adc
jne
jmp
wrmsr
jle
int3
arpl
mov
enter
adc
mov
pop
mov
hlt
add
sbb
sahf
dec
jl
pop
jns
xor
mov
xchg
cmp
dec
pop
cltd
pop
rcr
imul
shlb
fs
mov
jbe
lea
cmp
jp
iret
or
and
loopne
test
bound
mov
sub
iret
pop
pmaxub
sbb
jg
jnp
xchg
aam
into
cmp
sbb
loop
ficoms
jle
xor
in
pop
cmp
enter
xor
nop
or
nopl
lock
jo
mov
jo
in
bnd
test
push
jo
jp
mov
or
pop
pop
push
pcmpeqd
push
aas
jg
cli
sahf
jp
es
pop
cmp
int3
jb
out
mov
js
inc
pushf
ret
js
mov
push
push
data16
or
cmp
cld
jo
cmp
sub
mov
mov
pushf
fcomps
shrl
scas
mov
int3
jne
inc
adc
push
shlb
pop
jp
orl
sti
lods
and
mov
cmpb
fdivs
loopne
mov
jo
es
cmc
mov
sbb
and
push
ret
pop
jge
in
sar
jb
and
in
mov
lcall
sbb
decb
and
inc
outsl
or
or
xchg
adc
rorb
xchg
int3
out
inc
adc
pushf
popf
push
pop
pushf
pop
ljmp
fbstp
mov
sahf
filds
dec
es
fiaddl
lods
pop
cmp
adcb
cld
daa
sub
iret
dec
imul
or
pop
popa
aad
sbb
inc
inc
fs
shl
push
cmp
inc
dec
mov
sbb
shl
aad
mov
sbb
cwtl
cmp
ret
pop
lods
les
jecxz
nop
mov
jbe
jl
push
mov
ss
push
jge
fimull
push
nopl
ds
addr16
pavgw
fnsave
loop
fdivrl
inc
or
loopne
testl
jge
push
jp
mov
cmp
lea
cmp
popa
es
sub
or
repnz
pop
andb
sbb
popa
sbb
mov
bound
test
pop
cmpb
mov
bound
test
pusha
cmp
fsubrs
mov
int
test
or
mov
int3
es
and
add
addl
push
jl
or
dec
pop
or
icebp
gs
and
dec
xchg
inc
add
jl
pop
push
mov
out
outsl
pop
lea
add
loopne
cmp
or
sbb
insb
inc
xchg
xor
xchg
outsb
pop
test
ss
mov
sub
inc
clc
add
inc
ret
mov
cmp
rcrb
stos
roll
test
scas
cmp
sub
mov
cld
insb
xchg
sbb
mov
sub
mov
loop
shl
inc
in
shlb
shrb
push
clc
lods
inc
mov
pop
lcall
ret
mov
mov
popa
scas
jl
jp
nop
cli
jecxz
and
pop
mov
rorb
ficompl
out
pop
js
mov
scas
push
insb
cmp
dec
scas
sti
fs
sbbl
movsl
sub
movsb
inc
xor
popf
xor
jl
ljmp
and
in
or
dec
jno
lcall
or
test
loopne
add
out
push
rol
out
xchg
test
xchg
adc
or
inc
loope
stos
jb
inc
fsubrs
xor
pushf
fs
adc
jge
jle
adc
sub
push
sub
loop
scas
mov
mov
mov
lds
js
aam
les
xchg
arpl
xchg
stos
movsb
jl
dec
loop
loopne
push
test
add
push
test
out
sahf
inc
hlt
call
rcrl
mov
mov
pop
cs
lea
inc
dec
jo
ficoms
leave
add
or
out
jnp
mov
test
cmc
cmp
mov
xchg
ds
or
pop
push
dec
sbb
rclb
les
jmp
shl
cmpsb
add
jo
icebp
jge
loopne
push
jne
xchg
lret
dec
mov
pop
clc
push
je
jbe
xor
mov
jge
stos
pop
dec
arpl
cmpsb
sbb
testl
out
in
and
scas
jmp
pop
nop
repz
adc
fsub
pop
jge
repnz
jb
out
inc
jecxz
xlat
pop
jnp
xchg
jg
je
orb
lret
mov
out
in
sub
cli
push
pop
mov
test
dec
int
shll
jo
in
mov
pop
push
movb
testl
add
add
push
aas
jbe
cmp
inc
xor
mov
xor
test
in
pop
scas
int3
add
pushf
or
jno
rorl
stc
stos
jp
imul
mov
adc
lcall
add
inc
jl
sbb
aad
lock
sbb
sbb
jle
popf
add
mov
dec
ret
enter
sub
data16
push
cmc
iret
push
aaa
mov
jp
xchg
les
cli
movswl
push
ret
pop
mov
fisubs
jp
mov
sub
push
pop
mov
push
jbe
push
jge
test
inc
mov
mov
and
ljmp
jge
ret
jmp
pop
cmpsl
pop
dec
xor
push
push
pop
pop
cs
cld
sub
ja
cmc
or
jp
pop
and
cwtl
fildl
sti
jbe
adc
xor
movl
inc
rcrb
js
negl
leave
inc
lcall
cli
fidivrs
out
lcall
add
es
hlt
add
cmp
mov
cmp
xchg
icebp
add
rcrl
adc
clc
pop
jo
es
xor
mov
pop
mov
and
lret
loop
ret
fisubs
jl
inc
xchg
outsb
les
lods
push
cmc
pop
aam
sub
in
mov
stc
jp
pop
test
rcll
mov
ss
push
mov
pusha
jns
add
or
in
mov
fdivrs
fucomip
dec
int3
clc
es
add
sti
lock
jb
mov
jbe
test
mov
out
hlt
jnp
loope
cmp
in
cmp
ret
loopne
cld
nop
rorb
cwtl
mov
icebp
ljmp
subb
aad
test
bound
stos
rorl
leave
enter
mov
popl
mov
out
cwtl
jbe
ljmp
xor
cli
cmp
ja
insb
fnsave
daa
in
jle
cs
pop
das
pop
pop
adc
push
ficoms
cs
clc
mov
mov
and
or
or
cmpsb
mov
pop
sub
lods
adcb
bound
std
add
push
pop
mov
mov
sub
cs
jl
jbe
mov
xchg
xchg
mov
and
in
pop
es
mov
mov
and
jl
dec
inc
mov
jnp
adc
mov
fdivrs
testl
mov
fists
mov
mov
repnz
xchg
pusha
js
mov
pop
cmpsb
sahf
lods
dec
ljmp
clc
jmp
loope
pop
ds
pop
loop
push
push
js
xchg
dec
cmp
je
pop
pop
add
fsubrs
rcll
int
shrb
fidivl
insb
jle
jge
jo
insb
sub
lock
push
cltd
mov
or
in
fadds
xor
xchg
shl
cmpsl
subl
jle
clc
cli
sarb
cmp
mov
or
scas
loope
xchg
cli
mov
pandn
xchg
cs
add
insb
inc
int
push
hlt
jle
cmp
lock
jle
data16
jecxz
scas
ds
clc
push
aas
in
mov
rolb
sarl
and
mov
aaa
hlt
jae
lods
dec
in
pandn
xchg
lock
add
push
lods
not
and
add
or
test
xor
sbb
es
ds
push
js
jo
lock
push
nop
push
loope
je
and
test
hlt
xchg
mov
daa
test
sbb
jge
sbbb
bound
mov
jge
out
mov
ds
test
call
add
pop
rolb
les
cmc
jmp
mov
sbb
mov
adc
xchg
cmp
fisttpl
shrb
mov
js
lods
insb
fs
inc
outsl
add
fbstp
jbe
mov
dec
dec
inc
dec
sub
jecxz
arpl
push
pop
sbb
pop
jge
lock
sub
call
je
push
inc
bound
add
lock
les
jmp
and
xchg
add
loop
jl
roll
faddl
call
into
inc
mov
xor
xchg
or
pop
repnz
xor
ja
push
ret
ficoml
fdivrs
cld
xor
notb
dec
jge
mov
inc
add
xchg
add
fwait
mov
and
jge
out
sub
adc
les
inc
imul
inc
pop
mov
dec
mov
icebp
sarl
dec
mov
lods
cli
xor
rcl
add
mov
shr
pop
nopl
mov
sahf
popa
cmp
sbb
lret
ds
lock
jp
adc
push
xor
push
jle
addb
cld
insb
xchg
mov
push
mov
pop
mov
push
mov
xchg
or
dec
add
lcall
and
fdivp
xor
std
mov
xor
or
pop
adc
pop
push
loope
add
or
sahf
scas
jmp
clc
call
out
cmc
xor
mov
jno
sti
addb
loope
test
fsts
sub
mov
push
ret
rolb
hlt
mov
inc
inc
jmp
pop
pop
ds
push
lods
sbb
inc
clc
cwtl
test
cmp
lcall
mov
pop
adc
ror
mov
shr
jge
out
adc
pop
or
cmc
test
stos
and
orb
xchg
mov
mov
push
adc
pop
mov
mov
test
mov
cmp
hlt
insb
movsl
xchg
xor
inc
xchg
scas
pop
mov
insb
sbbb
movswl
imul
jbe
xlat
mov
mov
adc
mov
dec
xor
add
sti
push
loope
xor
out
adc
in
add
mov
sbb
pusha
fwait
or
ret
stos
punpcklbw
loop
aas
in
jne
mov
mov
stos
ficomps
mov
mov
stos
or
popf
inc
in
es
jle
pop
sub
mov
loop
mov
inc
rorb
xor
cmc
in
les
mov
lods
out
imul
clc
lahf
lods
out
pop
dec
movsb
addr16
lahf
xchg
pop
sub
and
imul
ret
fsubs
fdivrl
inc
scas
mov
jle
xor
push
dec
aam
loopne
repz
loopne
lahf
xor
repz
adc
xchg
lock
fisttps
pop
out
mov
jl
lret
adc
dec
movsb
imul
cmp
lret
cmp
xchg
add
cmpsb
jnp
xchg
or
push
in
adc
cld
jp
cmp
shl
testb
adc
jb
jl
sti
loopne
pop
jbe
outsl
jo
cltd
aad
pop
aas
xchg
js
cmp
fadd
jmp
rol
loope
into
push
inc
push
cmp
lahf
mov
push
lret
filds
in
jp
into
sbb
test
pop
pop
and
pushf
out
pop
lea
inc
rorl
add
das
pusha
dec
test
mul
mov
cmp
dec
cmp
sub
ljmp
mov
and
pushf
sahf
cmp
out
inc
adc
push
fcmovnb
pop
scas
pop
fcomps
aam
mov
ret
mov
ficompl
adc
out
mov
loope
sbb
sub
cli
add
in
lcall
pop
pop
pop
push
fbld
sub
xchg
clc
push
fs
shrb
mov
popa
sub
jp
mov
cltd
sahf
lods
repnz
pop
cmp
add
push
addr16
inc
inc
pop
and
xor
push
and
push
loop
mov
clc
push
ss
sbb
hlt
push
xor
mov
pop
cmp
jge,pt
push
call
sbb
nop
dec
sub
dec
sahf
test
push
push
sbbl
nop
adc
nopl
popa
ffreep
adc
je
fcoms
or
hlt
insb
xchg
xor
hlt
loope
test
jg
aad
loop
gs
sub
lods
dec
fisubrl
rorb
pmaxub
gs
and
inc
jmp
xchg
xor
xchg
js
stos
jge
jge
ret
outsb
retw
dec
xchg
mov
or
icebp
inc
bswap
loop
cmp
mov
push
pushf
aam
rolb
dec
or
and
enter
jle
das
mov
add
out
mov
clc
arpl
push
ds
mov
loopne
out
mov
into
mov
jne
js
sar
loope
repz
gs
mov
or
push
push
mov
xlat
js
add
push
bound
or
inc
testb
mov
loop
push
add
test
add
test
mov
shll
lahf
fistpll
call
icebp
sahf
cmp
or
popf
sti
inc
cwtl
pop
clc
test
mov
dec
out
sub
push
inc
jo
inc
loopne
inc
mov
daa
adc
xor
sbbl
sbb
mov
mov
arpl
lcall
sti
out
pop
lods
mov
negl
inc
cmp
push
lahf
sarb
pop
dec
iret
xchg
in
les
aad
xor
dec
mov
push
lea
mov
cmpsb
aaa
jg
mulb
popf
out
cmp
fcmovb
rcl
jne
jns
cltd
mov
scas
das
jbe
sub
adc
push
clc
add
xor
lock
cli
or
mov
mov
push
lds
xlat
or
cpuid
ret
cld
ficoml
int3
mov
cmp
call
outsb
inc
mov
scas
jle
orl
test
inc
sarb
ret
and
out
push
out
adc
bound
sbb
rclb
and
mov
lds
imul
rol
cmc
movsb
rcr
pop
mov
shr
add
sub
mov
or
or
orl
rcrl
inc
push
in
imul
jl
jne
pop
jle
in
movswl
clc
xchg
push
out
dec
lods
xchg
clc
aam
push
jne
pop
inc
movsbl
leave
jbe
xor
cltd
clc
ljmp
jno
loope
inc
sub
cli
push
pop
scas
pop
mov
scas
inc
mulb
mov
call
jo
lods
dec
push
xchg
pop
cmp
push
outsb
sahf
aas
movsl
inc
sbb
and
dec
lods
pop
int3
insb
xchg
shl
test
and
andb
rol
pop
out
lcall
push
jp
sub
push
push
mov
pop
lcall
out
xchg
xchg
test
cwtl
push
sub
add
adcb
lahf
xor
xchg
xor
jle
mov
shl
dec
lock
jmp
push
mov
jae
cmp
stos
and
adc
jbe
add
cmp
pop
push
inc
xor
mov
test
cmp
popl
pop
sti
mov
xchg
shlb
aam
push
jge
insl
mov
or
hlt
jmp
push
ret
dec
stos
jb
pop
mov
sbb
hlt
and
xor
pop
pop
aas
mov
aad
adc
pop
outsb
cwtl
mov
mov
and
cwtl
pop
cwtl
push
mov
rcr
insl
ds
inc
sbb
pusha
scas
cli
aad
sub
je
fimuls
mov
or
mov
inc
push
xor
sbb
insb
xor
gs
mov
inc
xchg
movsb
push
inc
dec
jge
mov
aam
add
add
mov
ret
mov
cwtl
sbb
xor
fsubs
bound
fs
filds
bound
insb
jbe
clc
cmp
popa
loop
cli
bound
cli
sub
pop
lods
dec
sub
and
and
rorl
adc
mov
push
or
das
push
inc
les
nop
mov
add
fcmovb
sbb
imul
rol
pop
lock
pop
jns
fdivrl
push
sbb
xor
sub
dec
mov
mov
push
inc
std
sar
imul
or
insb
add
and
xchg
into
insb
loop
dec
sarb
or
add
pop
test
push
aaa
push
sbb
loope
adc
je
scas
push
jae
jge
gs
mov
loope
add
sub
in
pop
pop
js
daa
cmpsb
push
pop
inc
mov
dec
cld
ljmp
adc
filds
cwtl
scas
cld
adc
jo
fimuls
mov
stc
out
mov
xchg
rclb
cmp
or
aad
push
orl
shrl
sbb
jp
loope
mov
into
clc
or
lock
push
jne
jl
cld
push
xchg
in
xor
movsb
xchg
jp
mov
jl
rorb
jecxz
jecxz
jl
ds
jnp
lcall
outsl
sbb
cwtl
add
jge
sbb
mov
fmuls
std
fs
adc
andl
loopne
mov
mov
mov
aam
xor
xchg
shlb
cmpb
mov
into
dec
mov
lcall
xchg
nop
dec
fisubl
mov
push
pop
inc
es
aam
lahf
cmp
and
clc
add
cmpsl
jb
and
rolb
push
xor
xor
adc
sbb
imul
and
adc
push
adc
fisttps
mov
loop
cmc
in
mov
sti
jl
jo
test
jo
lcall
divps
push
xchg
mov
jbe
adc
mov
jmp
cmp
or
ss
js
xor
sbb
js
mov
lock
mov
and
adc
sbb
sub
sbb
test
push
mov
les
fiaddl
hlt
dec
xchg
rcrl
mov
roll
in
prefetchw
out
add
icebp
mov
push
push
mov
lea
dec
pop
es
pushf
cwtl
mov
push
sarb
icebp
mov
call
pushf
xchg
mov
fsubrl
dec
outsb
repz
cmp
pusha
add
cmc
mov
jbe
or
jmp
fldenv
movsl
mov
lahf
inc
xor
inc
push
stos
cmpb
sahf
faddp
pop
xorb
mov
jle
xor
push
inc
fnstsw
and
rcr
mov
out
cmp
das
inc
aas
xchg
stos
pop
mov
dec
and
loopne
or
mov
bound
leave
std
jo
or
jle
fmuls
push
fidivl
or
jp
enter
idivl
pop
clc
test
xor
popf
push
push
roll
sbb
jns
clc
ljmp
mov
outsl
adc
and
dec
mov
les
inc
cmp
sbb
aas
pusha
jno
adc
scas
jns
lock
jge
mov
sar
xor
rorl
push
and
and
push
jle
inc
fnstenv
rcrl
push
test
xor
jle
cmpsb
cwtl
hlt
pop
nop
scas
push
cmp
imul
push
lahf
xor
pop
pop
xchg
cmp
jecxz
jge
mov
pop
cmp
enter
sbb
pop
pop
inc
adc
clc
sarb
jmp
jbe
sub
mov
and
push
jmp
hlt
bound
xor
push
fiaddl
pop
cmp
loop
in
sub
pushf
test
mov
test
sti
pop
cld
addb
dec
stc
add
cmp
xchg
lods
out
push
insl
inc
mov
sahf
push
jle
icebp
xchg
jns
in
jmp
adc
cwtl
mov
jge
clc
ss
pop
sub
movl
jo
and
out
jge
push
in
fwait
mov
ret
dec
in
pop
pop
cmp
sbb
cmp
cmc
test
lea
out
and
scas
push
cmp
jbe
stos
icebp
in
xor
push
ja
adc
jo
ljmp
xchg
xor
testl
pop
mov
mov
xchg
lock
fimuls
pop
fistps
loope
push
pop
fs
aaa
test
mov
inc
out
jo
xchg
shl
gs
fiaddl
push
mov
mov
insl
shlb
adc
rclb
push
fwait
clc
mov
adc
cmpxchg
push
js
loop
mov
xor
rolb
adc
rcr
out
out
pop
rolb
cmp
push
icebp
vpcmpgtb
mov
ljmp
outsb
adc
sub
push
call
testl
xor
cli
jge
adc
mov
sub
adc
pop
inc
mull
pop
rcrb
jae
pop
pop
in
les
in
nop
ret
fsub
movsb
fisttps
pop
test
loope
les
in
and
ret
xchg
xor
inc
adc
sbb
sub
out
add
jbe
out
or
add
dec
pmaxub
cmp
mov
jmp
shlb
dec
push
pop
stos
nop
sub
xor
cltd
push
push
cmpsl
xchg
mov
in
dec
in
mov
mov
push
xor
lock
cwtl
rol
imul
add
dec
sbb
lock
int3
out
call
ds
cwtl
pop
pop
mov
sbb
andb
imul
adc
mov
mov
les
incb
pushf
sbb
scas
lock
insl
shl
push
clc
fs
jle
jp
mov
mov
push
mov
mov
mov
inc
decb
fiadds
sahf
inc
fstpl
pmovmskb
or
repnz
test
fnstcw
cmp
sub
pop
mov
loopne
clc
pop
mov
mov
mov
sbb
jle
icebp
or
lock
push
push
xor
jle
dec
jno
loope
mov
mov
mov
out
insb
cld
xor
inc
out
sub
xchg
mov
and
pop
out
ret
ret
scas
sti
adc
or
mov
sub
cmp
pop
clc
aaa
pop
fistpll
filds
bound
das
cmp
mov
push
ds
pop
jo
bound
mov
jb
pusha
mov
mov
push
cli
loopne
data16
aam
mov
sbb
insl
or
pandn
pop
push
sub
imul
cmp
dec
add
xor
rol
shlb
inc
stos
shlb
mov
lods
xchg
mov
mov
sahf
sub
rcll
xchg
hlt
xor
mov
mov
sbb
js
lock
fsub
mov
imul
jnp
ds
shl
faddp
xor
fwait
push
mov
insb
sar
sub
xor
insl
sub
fsubrs
mov
dec
sbb
call
arpl
or
xor
pop
test
dec
xorb
int
ss
jecxz
push
rclb
comiss
mov
pusha
loopne
rorl
pop
testb
mov
xorb
sub
add
hlt
and
icebp
call
clc
xor
adc
pop
lret
lret
pop
cmpb
scas
pop
orb
js
mov
or
jl
mov
imul
add
inc
test
clc
lock
xorl
mov
daa
stos
xor
adc
mov
fisttps
sub
pop
inc
aam
mov
es
fwait
adc
jbe
and
data16
in
je
into
aam
sbb
rolb
mov
mov
call
scas
adc
sub
pushf
push
insl
jg
in
daa
dec
pop
sbb
xor
lds
aaa
jo
inc
movl
dec
loop
sbb
pop
rol
sarb
pop
adc
jo
in
cmpsb
add
insl
lret
add
mov
add
inc
nop
jle
es
and
cmp
icebp
les
and
mov
mov
xchg
popf
mov
and
sbb
lock
push
push
ds
lret
mov
pop
iret
andb
ret
ret
hlt
nop
push
lock
mov
hlt
call
leave
shl
pop
popa
and
mov
add
pop
sar
sarl
sbb
push
lret
push
add
es
mov
cli
icebp
mov
or
add
xchg
cli
mov
mov
pop
and
fists
sbb
js
sarb
loopne
xchg
sbb
stos
stc
push
in
jl
ja
rorl
repnz
in
dec
sbb
jp
jp
mov
xchg
fdivrl
movl
cmpsl
sbb
sub
mov
mov
stos
mov
cmpsb
mov
hlt
imul
sbb
mov
orb
jbe
adc
mov
dec
cwtl
nop
cmp
inc
fistpll
inc
mov
pop
cld
inc
aam
inc
cmp
add
sub
mov
data16
and
bound
cmpl
clc
sub
push
mov
lds
enter
add
pusha
pop
loope
test
lea
xor
addb
in
fistps
enter
shlb
jp
jle
mov
rcrb
push
sbb
clc
xor
pop
jp
lahf
mov
and
dec
push
inc
fmulp
nop
push
jl
inc
arpl
dec
iret
inc
mov
dec
inc
pop
jo
test
and
mov
out
dec
mov
cmc
sub
js
gs
cmp
adc
ljmp
fsubrs
sti
hlt
xlat
sti
je
arpl
ret
lods
mov
sub
rcrb
dec
cmp
jo
mov
sub
push
fcmovb
cmovae
in
je
or
and
aam
repnz
out
lret
aam
and
loopne
dec
aam
pop
dec
nop
cmp
add
loope
inc
test
dec
cwtl
subb
cmp
test
inc
pop
sbb
adc
mov
ss
mov
push
mov
rolb
in
hlt
xor
dec
call
fildll
sbb
call
mov
and
sbb
inc
cmpsb
stos
lods
stos
dec
das
or
add
fs
lods
sahf
subb
inc
es
cmpl
js
push
cwtl
inc
mov
xchg
mov
rol
mov
test
cmp
cmp
movsb
jnp
icebp
jmp
imul
imul
adcl
adc
shl
xchg
mov
bound
jecxz,pt
ucomiss
enter
movsb
loop
inc
nopl
xor
not
addl
icebp
sub
push
jle
sbb
push
rcll
mov
push
popa
imul
dec
pop
fisttps
mov
push
push
pop
cmp
mov
dec
xor
mov
xchg
cmp
icebp
cltd
les
ja
bound
pop
aas
ds
cld
sub
test
hlt
loopne
loopne
pop
rorl
js
sbb
in
clc
adc
pop
subb
mov
lds
mov
test
xorb
jns
lods
shll
inc
out
jge
mov
jb
and
add
or
cmpsb
pop
push
out
and
pop
fadds
lock
cli
mov
fcomps
in
adc
add
or
xchg
loope
adc
int
xchg
xor
push
push
adc
and
fdivrl
jmp
popf
lcall
push
pop
jl,pt
and
sbb
repnz
mov
sub
dec
or
loope
dec
sbb
pusha
mov
cmp
push
xor
push
sub
cmp
inc
test
je
packssdw
rcrb
jne
pop
sub
sub
adc
std
push
mov
in
aaa
pushf
jno
push
cltd
aas
jle
sbb
dec
add
sbb
lea
jo
mov
cmp
scas
add
ret
mov
jle
test
call
movsl
es
cmp
jp
loop
bound
in
sbb
mov
or
lock
shlb
xlat
adc
shlb
jno
and
call
sbb
shll
iret
fmulp
test
lods
xchg
jle
mov
pop
hlt
mov
in
push
imul
jle
pop
and
pusha
sub
or
inc
lret
adc
insb
fimuls
movups
push
adc
jbe
ss
sub
cmc
ljmp
jle
aaa
mov
addr16
mov
xchg
adc
jl
or
int3
cmpb
inc
stos
mov
dec
scas
xor
lock
mov
and
ror
pusha
dec
popf
cmp
push
pop
es
push
cmp
je
sar
cmc
loop
scas
int3
add
mov
stos
cmp
data16
mov
sub
std
inc
sbb
mov
mov
cld
icebp
inc
outsb
pop
nop
jnp
in
cwtl
shr
dec
lods
scas
icebp
arpl
mov
jle
out
push
loop
cli
mov
loopne
gs
jecxz
inc
or
xchg
sbb
inc
mov
sub
rorb
les
xchg
and
or
xchg
lcall
dec
stos
add
jl
lock
lock
mov
dec
mov
adc
out
adc
je
dec
out
les
not
lret
and
int3
dec
nop
push
push
insl
jbe
cld
sahf
test
out
xor
adc
cli
bound
inc
jl
iret
jp
test
lods
test
lcall
adc
cmpsl
mov
inc
scas
xchg
inc
call
or
movsb
and
ret
mov
cmp
les
mov
push
scas
sbb
shld
rorl
lea
loop
scas
outsb
std
pop
xor
mov
sbb
inc
mov
pushf
add
repz
cltd
jmp
or
dec
clc
push
out
jae
cli
popa
loopne
rolb
xchg
fstps
mov
sbb
test
push
cmp
xor
loope
icebp
jle
lods
sbb
leave
mov
popa
orb
jge
clc
sub
hlt
xchg
lods
sbb
int3
popf
ljmp
mov
sahf
test
jl
mov
mov
aam
lock
xchg
ret
repnz
jae
loop
rorl
or
ja
lahf
push
cld
hlt
aam
xor
flds
addr16
xchg
mov
adc
cmp
lret
in
das
loope
push
clc
ret
loop
fiaddl
push
and
jge
test
je
sbb
mov
je
clc
fistps
shlb
gs
mov
inc
movsb
xor
sub
sub
mov
jno
out
xor
negl
push
mov
push
xchg
xor
hlt
aad
nop
orl
and
inc
mov
mov
stos
push
dec
pop
jge
js
add
or
push
sbb
faddl
push
sub
sbb
cmc
dec
clc
test
mov
cld
icebp
loopne
rcll
mov
push
add
pop
js
adc
in
sbb
ficoml
pop
pop
or
dec
sub
test
in
cli
mov
test
push
sti
cmp
loop
add
jp
outsb
cmpsl
in
out
inc
mov
or
sbb
orb
ficompl
push
push
fs
add
fistl
xchg
xor
xor
pop
pop
mov
and
ja
jbe
int
adc
jp
pop
push
negb
mov
cmp
jle
mov
adc
inc
inc
mov
mov
push
jecxz
das
sti
sub
scas
ret
inc
xchg
push
mov
dec
push
ss
inc
push
ds
shr
jbe
daa
js
insb
jl
sub
sbb
and
cmp
xor
hlt
fstpt
loop
sub
stos
cmp
pop
pop
cmp
dec
pop
mov
iret
dec
pop
ret
mov
sub
mov
lahf
adcl
addr16
inc
shrb
jbe
xchg
adc
mov
cmp
hlt
mov
ffreep
aaa
fiaddl
push
in
xchg
add
add
mov
mov
cmpsb
inc
rolb
pusha
ljmp
mov
add
int3
push
insb
js
test
cltd
mov
and
lock
repnz
push
mov
push
lds
jnp
cmp
xor
sub
ret
add
shl
popa
loopne
ja
mov
cwtl
loope
jecxz
jnp
mov
icebp
loop
arpl
arpl
cmpsb
mov
jp
mov
and
pop
inc
pop
jp
sub
shl
xchg
lea
iret
mov
cli
add
sbb
cmova
push
rorl
xchg
adc
mov
push
dec
mov
sub
or
push
aaa
bsf
jg
xchg
es
cmp
lret
add
fwait
pushl
mov
jecxz
or
idivb
aaa
aaa
mov
adc
into
push
sahf
xchg
testl
jl
mov
add
push
clc
push
out
mov
adcb
add
xor
mov
push
mov
pop
pop
dec
pop
inc
sub
rcrl
inc
and
ret
adc
pusha
sti
lcall
es
into
insb
mov
clc
loopne
lock
and
dec
scas
cld
dec
sub
loopne
rolb
cmp
add
imul
xor
adc
hlt
adc
sarb
jmp
daa
sub
pop
dec
jp
nop
cmpsb
femms
mov
scas
es
sbb
lods
inc
cmp
sbb
cmp
fbld
xorb
cmpsb
xchg
cmpb
fsubl
mov
mov
jp
cwtl
mov
lds
lahf
fiaddl
jmp
mov
sahf
clc
xor
insb
pop
es
pop
call
or
sub
test
mov
cmpsb
pop
sub
pop
and
icebp
push
nop
cmp
pop
in
jbe
dec
popl
cltd
xor
add
cld
pop
jmp
clc
jno
loopne
or
or
mov
cmp
insb
cwtl
sbb
jnp
fdivrp
inc
pop
pop
call
or
pmullw
cli
push
aaa
mov
stos
add
addb
call
negb
lods
shlb
or
iret
pop
pop
aam
pop
xchg
pop
sbb
or
sahf
cmp
dec
push
xabort
fadds
mov
inc
adc
xchg
and
fisttps
ret
mov
ret
pop
aas
ds
or
sti
pop
ret
pushf
pop
adc
fcomip
cmp
adc
insb
push
fs
das
jle
icebp
jbe
inc
hlt
inc
cli
xchg
icebp
add
inc
out
xor
cli
ret
test
icebp
rolb
in
adc
push
lods
mov
pop
fbld
mov
xchg
mov
rolb
inc
fldcw
popa
test
dec
hlt
adc
xchg
js
movsb
inc
popf
lock
loop
mov
adc
std
fadds
es
and
adc
cli
sub
fdivl
or
inc
pusha
adc
sbb
xchg
dec
les
stos
pop
sbb
or
clc
or
mov
xchg
movmskps
pop
sbb
xchg
sub
rcrb
xadd
lds
js
outsl
push
sbb
lock
out
sub
xor
dec
cmp
push
js
mov
adc
lret
popf
ds
jne
push
mov
dec
faddp
stos
xchg
xor
or
ja
clc
pusha
sti
es
aaa
fnsave
or
les
cmp
dec
adc
addb
jnp
mov
jne
mov
xchg
fs
sub
xchg
outsw
sahf
movsl
pop
cmp
cmp
push
push
je
cmp
add
dec
out
hlt
mov
xorb
mov
jno
stos
and
jp
fnstenv
shll
repz
loopne
sbb
sbb
sti
sbb
orps
xor
ss
adc
mov
std
jl
frstor
das
jbe
cmp
pop
push
cmp
test
inc
lods
aaa
xchg
notl
pop
idivl
sub
movsl
add
pop
push
xor
cs
out
inc
clc
pop
sbbb
push
out
add
inc
clc
jle
cmc
ret
xchg
call
and
scas
cmp
adc
ss
fwait
adc
mov
ljmp
test
lock
jecxz
adc
mulb
es
and
push
xor
or
stos
xchg
sub
es
jmp
mov
mov
cmp
call
sub
insb
out
in
cli
xlat
sbb
add
sbbb
xor
xor
fisttps
jmp
mov
xchg
sbb
outsb
jle
push
es
mov
mov
lods
inc
sub
xor
mov
mov
icebp
outsb
mov
inc
push
jle
jl
or
mov
loopne
inc
sbb
dec
lret
rcll
aam
xchg
movsb
fiaddl
add
dec
pop
xlat
in
mov
xchg
fiadds
xchg
and
nop
mov
mov
or
mov
loopne
ljmp
xchg
push
pop
cmp
or
cld
imul
fstpt
hlt
pop
outsb
pop
test
jb
mov
jnp
dec
or
insb
xchg
bound
push
aas
loope
or
ret
inc
fidivrs
aas
mov
clc
jnp
sbb
andl
adc
xchg
in
push
iret
test
pop
js
call
data16
leave
dec
dec
test
lret
xor
mov
pushf
loop
rclb
mov
mov
ss
xor
push
mov
adc
in
cld
mov
inc
out
or
imul
cmp
int3
xor
fcmovb
inc
mov
dec
add
push
mov
in
lea
add
mov
push
arpl
adc
pop
cmpsb
xchg
jo
sbb
loop
imul
mov
mov
out
or
jbe
jae
jp
push
adc
lods
out
inc
dec
or
push
add
mov
jb
adc
xchg
test
add
dec
or
outsb
out
xor
and
lock
lock
inc
pusha
jp
dec
loopne
and
pop
push
jbe
mov
jl
xchg
icebp
push
push
rolb
femms
ljmp
rolb
ds
lahf
push
shrl
mov
sbb
clc
insb
cmp
xor
in
sbb
mov
inc
pop
test
cs
sub
into
dec
inc
jmp
jne
movsb
push
jg
pcmpeqd
mov
insl
jne
pop
mov
ret
dec
out
stos
comiss
dec
adc
or
loope
push
cmp
out
inc
sub
bound
cld
ljmp
cmp
aad
mov
sbb
push
and
pop
cmpsb
adc
mov
js
out
std
xor
insb
sub
mov
mov
fists
ljmp
mov
pop
jge
sub
lods
pop
or
lock
out
cli
add
and
add
pusha
ret
out
roll
pop
inc
push
mov
pop
pop
pop
jl
cmp
pop
adc
mov
dec
cmp
fimuls
bound
mov
rorl
mov
sarb
pop
adc
and
adc
cmp
mov
cmpw
ljmp
add
xor
sbbb
stos
std
cli
lock
mov
mov
cmpsl
sahf
enter
cmp
das
cmp
das
fimuls
sbb
pop
insl
jbe
out
leave
push
fs
test
ret
or
inc
adc
pop
sub
loopne
aaa
aam
out
jge
je
ret
jl
xchg
sbb
movsb
jb
pop
pop
bound
inc
cmp
repnz
xor
fincstp
pusha
hlt
add
lds
xchg
sub
clc
repnz
mov
out
shl
in
fst
cs
push
mov
lock
push
mov
popf
scas
sub
orl
std
cli
add
std
fldl
and
lods
decl
push
push
xor
mov
je
mov
jecxz
loopne
icebp
add
rcr
jbe
cmp
pop
adc
mov
sbb
xlat
rorb
push
ljmp
fildll
loop
lret
faddl
jo
mov
push
icebp
fadd
xchg
mov
lock
cli
int3
imul
mov
push
imul
push
cmc
jecxz
xchg
or
mov
lock
and
aas
imul
xor
sahf
or
mov
ds
xchg
inc
xchg
push
mov
or
pop
adc
adc
mov
lock
add
add
jae
jl
jnp
js
test
insb
sub
fwait
out
lcall
stos
sbb
sbb
in
cmp
mov
inc
aam
or
jmp
ds
xor
mov
pusha
loopne
jle
mov
lds
pop
push
sbb
gs
adc
jle,pn
dec
jge
cmp
cmp
jl
lret
flds
ret
cli
ds
test
clc
and
ret
nop
mov
nop
jbe
mov
popf
test
fsubrp
mov
inc
pop
adc
xlat
xor
xor
out
pop
jbe
ss
mov
jecxz
cmpsb
pusha
cld
mov
mov
iret
inc
push
push
je
xchg
icebp
pop
out
adc
pop
lret
lahf
sbb
outsl
fnsave
mul
jb
jo
fsubr
inc
adc
je
push
cmp
test
push
jp
stc
into
or
test
add
jle,pt
add
pop
mov
inc
cld
movsb
mov
jno
dec
adc
mov
dec
rsqrtps
rolb
push
mov
mov
xchg
push
mov
pop
mov
push
lret
mov
push
mov
cli
add
pop
repnz
test
out
cs
jle
sbb
or
frstor
jl
neg
orb
fsubl
mov
ss
cmp
jge
hlt
popa
lret
repnz
cwtl
push
insb
add
xchg
adc
incb
jns
test
inc
loope
push
in
inc
dec
icebp
jmp
sbb
push
inc
ss
loop
ds
pushf
jge
repnz
adc
adcb
push
lret
sarb
xor
subl
add
xor
popw
sti
add
xchg
stos
cmpsl
fisubl
sbb
aas
cmp
xor
ret
pop
lds
mov
inc
movb
mov
movsb
adc
inc
sbb
fildll
out
mov
inc
jl
xor
cmpb
loopne
cmc
loope
pop
shlb
add
mov
pop
fwait
sar
lock
inc
add
pop
add
and
add
dec
mov
stos
push
jbe
jmp
pop
mov
ds
addr16
add
shlb
xor
mov
rolb
dec
sbb
lock
push
xchg
sub
mov
ret
cmp
shll
inc
adc
push
jge
sbb
out
mov
fisttps
xchg
mov
leave
ret
aad
pop
push
cltd
push
pusha
shl
test
adc
lock
enter
push
inc
jl
adc
sub
in
adc
push
das
mov
lock
or
incb
je
and
adc
lods
ja
loope
add
dec
sub
jp
and
inc
mov
addb
add
in
mov
adc
xchg
xchg
and
pop
sbb
insl
aam
rol
idivl
je
mov
or
pop
loop
ror
jbe
rcrl
fwait
fwait
fwait
paddsb
popa
fstpt
cmp
push
stos
in
jno
in
in
and
clc
push
pop
cmp
loopne
adc
mov
bound
jbe
mov
xorl
test
push
scas
out
mov
hlt
in
inc
add
arpl
adc
xorb
dec
mov
out
lods
fists
rcrl
pop
add
push
int3
add
ds
das
lods
xchg
and
and
adc
hlt
imul
dec
mov
mov
or
jp
outsb
outsb
or
push
insl
pop
jecxz
ret
pop
jnp
jl
push
fcompl
movsb
lret
xor
xor
cmpsb
pusha
jnp
daa
cs
add
jl
inc
dec
loopne
cli
push
push
dec
movsb
and
repz
sti
jmp
test
sti
rcrb
subb
jg
xor
ret
decb
cmp
push
out
pop
cvtpi2ps
add
in
pop
push
mov
cmpsl
sub
outsb
sub
mov
mov
jbe
les
xchg
test
inc
jp
push
fimuls
addr16
test
pop
ja
add
filds
es
mov
jmp
mov
loopne
push
mov
xchg
push
xchg
stos
ds
mov
xchg
push
mov
scas
fcoms
outsl
mov
dec
xor
pop
les
dec
sbb
rolb
mov
idivb
ret
adc
jp
push
xor
sub
lods
sub
adc
ror
pop
cld
add
jb
out
in
and
mov
mov
sbb
in
inc
jg
mov
push
adc
adc
pop
push
out
cmp
ljmp
and
push
mov
xor
data16
push
jp
loopne
out
cmpsb
dec
jp
xor
cwtl
les
xor
das
adc
push
test
xlat
add
mov
mov
icebp
jmp
testl
jbe
push
cli
clc
inc
loop
imul
cmpsb
popf
adc
dec
pop
xchg
and
out
xor
jecxz
lds
jl
scas
inc
pop
mov
fimuls
cmp
jle
or
mov
jmp
fists
cmp
and
rorb
or
xchg
xor
add
outsb
ljmp
and
ds
inc
ja
jp
push
mov
adcl
dec
xor
sub
push
shl
pop
movsl
pop
mov
mov
and
mov
fs
icebp
sub
notl
cld
outsb
fcoms
adc
pop
fistps
bound
push
pop
sbb
movsl
out
adc
repnz
call
das
adc
test
les
mov
mov
mov
lret
mov
cmovge
orl
cld
lock
icebp
lock
cmp
inc
sbb
add
test
pop
test
or
mov
sbb
jo
daa
cmc
push
clc
hlt
shrl
in
arpl
lahf
ret
push
fistps
addb
cmc
icebp
call
imul
cmp
jl
add
inc
or
or
pop
fcmovb
xor
adc
add
push
adc
clc
scas
dec
test
add
mov
out
add
pop
dec
scas
pavgw
lds
xor
movsl
mov
cli
add
cld
cli
push
cld
cs
adc
dec
ret
sahf
orb
sbb
les
adc
mov
cmp
or
xor
cs
sbb
lcall
bound
inc
push
add
add
outsl
adc
lcall
cmp
aaa
loop
mov
push
add
push
fidivrl
jl
pop
push
data16
loop
and
aas
jle
imul
outsb
ret
test
jns
mov
inc
xchg
ds
in
dec
cli
loop
and
loope
xchg
mov
popa
mov
xchg
out
subl
es
sbb
cld
or
outsb
cmp
lods
pop
sbb
inc
push
sbb
dec
and
and
add
js
popa
lret
dec
jmp
arpl
ret
stos
stos
mul
imul
xchg
loope
lock
push
xor
loope
les
and
lock
ficomps
xchg
je
jecxz
mov
mov
inc
inc
adc
testl
ja
or
push
mov
out
jl
cmp
mov
xchg
fldt
aad
insl
fdivrs
push
lret
shrb
call
ret
les
add
cmpsl
in
push
xlat
test
and
shr
mov
jge
jl
mov
comiss
pusha
mov
jecxz
stc
pop
pop
adc
dec
xchg
push
xor
outsb
shll
or
cld
push
push
pop
or
bnd
adc
xlat
xor
pusha
movsb
inc
pusha
push
ljmp
clc
mov
out
add
push
arpl
mov
add
fmuls
mov
clc
sbb
sub
push
clc
dec
jl
inc
cmp
add
lcall
adc
or
jg
cld
sub
add
int3
and
xchg
les
mov
int3
jne
divl
sub
fiaddl
loop
cmpsl
pop
sub
cmpsl
cmpsb
sub
jge
outsb
movsb
add
dec
lret
sbb
sbb
lock
push
popa
mov
and
shlb
rorb
out
sub
pop
subl
mov
add
andl
aas
push
adc
aas
dec
cld
fiaddl
mov
clc
hlt
xchg
sti
push
fisubs
fildll
mov
ljmp
dec
jmp
aam
add
sub
movsb
scas
jb
loope
inc
mov
pushf
lcall
mov
hlt
cmp
mov
add
mov
pop
dec
je
insl
mov
add
mov
or
mov
out
jg
fdivs
push
xchg
sahf
pusha
fcmovb
jg
test
jle
mov
cs
pop
and
sahf
sbb
jb,pt
mov
add
pop
ffreep
push
mov
nop
lret
imul
es
movsl
imul
lods
mov
loope
outsl
into
fwait
stos
xor
aas
ds
lret
push
notl
mov
push
mov
lods
and
dec
pop
mov
push
xchg
adc
adc
out
jge
das
push
sub
fcmovnb
popa
clc
xor
sub
shrl
pop
mov
inc
dec
lods
sub
cmpsl
push
sbb
in
aad
testb
and
add
clc
lret
out
xorl
bound
sbb
dec
inc
fcmove
fs
pop
pop
outsb
sub
rorl
pop
dec
lds
push
out
shr
fs
push
fnstcw
push
push
xchg
lods
push
dec
scas
mov
dec
add
and
int3
push
loope
cltd
scas
dec
jge
cmp
and
arpl
xchg
push
sbb
mov
fsubr
mov
repnz
pushf
shrb
cmp
test
sbb
push
ljmp
push
and
add
scas
mov
adc
dec
hlt
xchg
test
es
xor
jg
ds
imul
flds
jl
xchg
orb
xor
loopne
loope
scas
clc
icebp
call
mov
mov
xchg
add
cli
je
cwtl
push
xor
insb
mov
mov
and
inc
xor
xor
gs
inc
mov
mov
bound
ljmp
jl
push
mov
cli
nop
es
dec
mov
ds
fcoml
cmp
inc
mov
fistps
arpl
pop
sarb
roll
movsl
inc
lods
push
loopne
js
mov
jne
lret
xor
out
lock
ret
orb
test
dec
cmp
jo
inc
or
jo
fiadds
sti
cmp
jl
mov
out
test
sbb
sar
pushf
push
inc
fwait
loopne
sub
testl
fidivl
hlt
cmc
push
sar
pop
stc
xor
dec
mov
jae
xor
out
add
sbb
pop
push
xchg
mov
sahf
outsl
movsbl
shl
filds
stos
sbb
stos
mov
mov
insb
xor
and
inc
add
jns
mov
adcb
pop
pop
mov
jae
loope
test
sbb
inc
aas
sarb
cmp
pop
cmpsb
loopne
pop
rsqrtps
mov
pusha
pop
or
xor
jle
je
inc
loop
lock
std
dec
cmp
xchg
adc
out
sar
lods
ja
lcall
adc
pop
mov
jp
mov
sub
push
mov
pop
add
xor
icebp
xchg
ficoms
sbb
clc
xor
xchg
js
sbb
gs
xor
jg
aam
cmpb
cmp
or
stos
sahf
mov
out
mov
insb
outsb
pop
pop
clc
mov
dec
add
dec
aas
push
test
in
xchg
pop
out
dec
cld
js
jl
jp
sub
and
or
inc
fsubp
add
or
faddl
daa
loopne
ljmp
lret
add
fsubrl
inc
rclb
pop
lock
cmp
ds
push
imul
and
inc
jle
dec
add
movsl
xchg
mov
movsb
push
lods
jle
adc
popa
arpl
cmp
fwait
clc
test
lock
loopne
out
mov
adc
scas
jne
cmp
dec
stos
adc
je
incb
cwtl
in
movswl
pop
fldenv
xchg
inc
push
je
jnp
mov
add
incb
dec
clc
pop
rcl
in
cs
mov
xor
cli
xchg
xor
cmp
pusha
imul
roll
in
loop
out
fcmovbe
push
por
mov
dec
push
jge
add
loop
out
jnp
pop
pop
push
inc
jmp
js
jbe
leave
ds
stos
push
xchg
sbb
xor
sarl
sbb
and
sub
stc
lods
lock
cmp
pusha
xchg
into
xor
jbe
mov
sbb
call
clc
push
xchg
jle
add
cli
push
jge
push
ljmp
mov
test
jo
je
dec
insb
insl
mov
mov
jle
add
adc
sbb
neg
aas
xchg
in
mov
jmp
cmp
leave
pop
je
mov
inc
jmp
jecxz
cmpsl
fs
mov
clts
inc
cs
cmpps
adc
sub
xor
add
loop
fs
pushf
inc
jb
push
pop
inc
cmp
and
shr
bound
dec
or
mov
adc
mov
mov
fs
adcl
out
repnz
test
das
push
adc
shlb
idivl
scas
insb
push
movsl
shl
out
or
xchg
xor
out
enter
inc
nop
mov
push
and
jp
lret
mov
nop
cmp
jmp
add
cli
jne
loop
ds
into
loopne
jp
das
cmp
or
push
sahf
jle
cld
push
mov
dec
pop
fisttps
push
mov
shlb
je
push
das
pop
push
pop
pop
xor
je
add
xchg
shr
ret
enter
addr16
hlt
jbe
jl
shlb
cmp
leave
pop
add
cmp
mov
push
sub
inc
jp
outsb
in
mov
push
xchg
loope
sub
scas
mov
dec
iret
mov
push
rolb
inc
xlat
xchg
sbbl
test
xchg
addr16
xchg
fs
and
loop
dec
add
pop
cli
jl
adc
rcll
popf
lret
xor
lret
pop
mov
and
jo
add
sysret
std
or
xchg
dec
and
clc
cmp
dec
es
pop
ja
mov
outsb
pop
stos
mov
sbb
or
lods
ret
mov
ficomps
xchg
jp
mov
fsubrl
repnz
and
pop
mov
add
push
xor
aas
or
pushf
out
push
mov
cli
add
loopne
xchg
movsb
adc
ja
ficomps
dec
lret
adc
rclb
sahf
loop
mov
or
sbb
clc
ja
pop
jle
js
loope
std
xchg
sub
push
idivl
inc
sbb
adc
pop
fsubp
dec
adc
dec
xor
lret
outsb
test
ss
test
inc
xor
icebp
and
push
shl
cld
pop
mov
fdivrl
mov
sar
xor
inc
cli
adc
adc
adc
push
add
sub
test
adc
xchg
cmp
jnp
mov
jecxz
sub
pop
cli
faddl
sub
or
mov
pop
mov
fsts
imul
pushf
call
mov
jnp
mov
push
aad
clc
cmp
add
and
mov
sbb
sbb
lock
rorb
mov
in
sahf
mov
fbstp
lock
lods
or
mov
jnp
rorb
and
subb
inc
inc
test
inc
dec
jo
dec
dec
loope
xchg
cmc
jle
add
mov
mov
and
rcrb
daa
cld
clc
xchg
rorl
scas
mov
sbb
jbe
loopne
cmpsb
cmc
out
ret
pop
test
pop
xor
std
enter
and
loop
leave
cmp
pop
aam
lret
inc
gs
mov
int
filds
das
push
or
fwait
push
xor
aam
inc
loope
lea
scas
pop
test
push
push
mov
cmp
test
shll
fmul
lods
movb
aas
mov
ljmp
or
js
ds
sub
das
movb
push
flds
push
cli
mov
rcrb
loopne
js
imul
pop
mov
dec
leave
sbb
sub
jge
insb
pop
mov
imul
or
fidivl
out
clc
pxor
test
mov
cmp
add
pop
mov
mov
js
test
fsubl
pop
push
adc
decb
mov
lock
inc
jbe
jmp
push
ret
pop
insl
cmp
out
mov
xchg
pop
mov
adc
js
jge
pop
ss
pop
ficomps
fsub
sbb
stos
sub
jo
jne
push
jecxz
cmpl
mov
das
sbb
adc
ror
push
mov
int
loope
add
inc
adc
loop
xchg
inc
push
jp
xor
and
in
add
cmp
sbb
jge
mov
mov
ja
xchg
ljmp
loope
divb
imul
pop
mov
mov
add
movl
push
sub
dec
js
jmp
cli
mov
jb
cmp
icebp
rcl
mov
xchg
inc
std
scas
and
je
dec
fsubrl
aam
cmpsb
and
mov
repnz
cmp
scas
or
les
mov
xchg
and
mov
fcompl
push
cld
clc
outsb
int
loopne
push
dec
jl
inc
sub
jl
fdivr
popa
sbb
mov
dec
fbld
and
adc
xchg
push
lret
sbb
les
inc
pop
sub
fiaddl
outsb
jle
out
xchg
add
push
es
xlat
fwait
cli
jge
xchg
loopne
xchg
loop
rorb
or
imulb
ret
xor
icebp
lods
les
jl
pusha
cmc
call
cmp
jle,pn
cmpsb
pop
fcompl
das
or
mov
test
jbe
mov
mov
or
das
sbb
or
pop
call
scas
cmp
jmp
leave
add
dec
imul
pop
sbb
ljmp
push
das
cmp
mov
ja
cltd
pop
mov
add
sbb
and
std
rolb
sbb
mov
mov
outsl
or
dec
adc
cmpsb
inc
inc
xor
and
cmp
push
add
aam
loope
add
pop
mov
roll
shlb
adc
jns
inc
push
lods
mov
adcl
mov
fwait
jo
and
pop
enter
test
psubsb
pushf
mov
cs
add
adc
pop
mov
pop
jg
mov
sbb
xor
fdivrl
jne
loopne
scas
xlat
es
bound
loopne
lcall
sti
inc
jns
lods
inc
cmp
lret
insb
mov
pop
mov
ds
jo
mov
xor
out
or
shld
cs
mov
dec
aam
pop
je
lock
add
loop
addr16
fistpll
lock
pusha
aam
cs
cli
js
nop
cli
fdivs
pushf
decb
pop
push
or
roll
mov
lahf
xor
test
ficomps
sub
add
out
les
js
rol
subl
repnz
fisttpll
daa
les
add
xchg
cli
lods
ficompl
cs
sub
lcall
push
stos
cmp
cltd
push
cmp
cmp
sbb
scas
adc
stos
cmp
mov
repnz
je
ljmp
add
add
aam
lock
jno
xchg
add
jo
icebp
loopne
lods
cmp
ret
push
pop
dec
cs
jl
sub
call
pop
cmp
loope
repnz
lahf
mov
mov
lock
inc
outsl
sti
shl
inc
mov
out
adc
loop
sub
sub
xor
push
outsb
push
test
js
mov
xlat
pop
movsb
mov
inc
mov
jecxz
push
cli
jbe
scas
or
jle
cmp
mov
pop
xchg
movsl
ret
pop
mov
stos
lcall
push
filds
testb
lock
push
in
stos
ljmp
fisttpll
arpl
arpl
inc
ss
pop
data16
pop
push
cmp
pushf
xchg
stos
lods
popf
fldt
repz
or
dec
mov
xchg
sub
dec
sbb
imul
cmp
xor
sbb
or
and
xchg
out
movsl
inc
shlb
ffreep
scas
add
xorb
or
jl
jecxz
loop
pop
ficoml
mov
test
loop
mov
mov
icebp
idivl
fs
in
dec
sahf
mov
xchg
test
out
in
pop
call
adc
inc
inc
fcomip
jns
jl
sub
push
in
xor
jl
data16
lods
jne
cld
hlt
outsl
mov
cmp
nop
js,pt
cmp
int
push
cmp
jg
cmp
dec
sub
push
jge
decb
push
hlt
test
pushf
rclb
bound
mov
cmp
cmp
jl
mov
aad
sarl
jo
push
into
cmp
lea
lock
test
ljmp
wbinvd
sbb
pop
jae
sub
xor
and
aas
pop
jp
xlat
into
mov
movsb
mov
lret
hlt
mov
jl
fistps
jecxz
cltd
test
rol
mov
jbe
cmp
jmp
rolb
jno
jecxz
int3
adc
pop
cmpb
into
mov
pop
int3
push
movsb
cmp
lret
and
mov
gs
rclb
and
and
add
jmp
clc
mov
mov
cmpsb
push
aam
mov
or
fisubs
inc
inc
pusha
push
ftst
dec
js
clc
aam
ds
mov
js
clc
jge
cld
fisubrl
mov
add
mov
adc
cli
push
rcll
and
or
pop
mov
imul
push
cld
mov
aaa
sub
pop
mov
add
sbb
call
fdivrl
mov
dec
das
cli
sarl
int3
mov
mov
xor
mov
lods
sti
add
dec
or
mov
aaa
aaa
aaa
aaa
inc
gs
repnz
jle
xor
ja
cmp
xchg
adc
xor
jp
add
outsl
insl
loop
andb
cld
and
in
pxor
pop
shlb
ret
scas
push
mov
test
mov
nop
jge
pop
aam
es
inc
and
dec
cmc
lds
js
cmp
and
dec
je
cmp
jmp
stos
add
pop
add
bound
jge
adc
mov
lods
js
outsl
pushf
lahf
add
push
mov
jne
jmp
enter
aad
push
mov
rcll
pop
add
fucomip
ret
cmp
lock
lcall
dec
pop
jg
pop
pop
jne
rorb
in
xor
jl
call
mov
outsl
push
orl
and
mov
adc
dec
or
loop
mov
pop
pop
lahf
pop
loop
xchg
dec
jle
cmp
aaa
outsb
adc
inc
insb
xchg
push
sub
sub
jns
insl
testb
cmp
stos
scas
enter
bound
adc
push
lock
lock
enter
jbe
shll
clc
into
xchg
jb
imul
sbb
push
jge
cwtl
jp
movsb
xor
int3
push
clc
cmp
mov
mov
or
sub
stc
push
xchg
bound
push
loopne
out
dec
sub
xor
push
jle
jmp
pushf
add
rolb
adc
jb
or
and
cmpsl
xchg
jle
push
bound
data16
addr16
js
ljmp
ret
push
sbbb
push
in
push
leave
add
mov
mov
imull
cs
and
mov
cmp
pushf
or
idivl
xlat
mov
ret
pop
jo
or
push
sarb
popf
es
lret
je
cmp
das
rorl
xor
lds
mov
mov
rcrl
lea
fs
pop
push
loopne
cmp
and
movl
mov
mov
dec
fcoml
jno
adc
lock
cmpsl
hlt
push
stos
les
movsb
cld
lcall
scas
xor
inc
mov
ljmp
loopne
clc
xor
int
imull
push
pop
fiaddl
js
or
pop
mov
shrl
sbb
xlat
ret
pop
js
push
scas
xchg
data16
inc
call
popf
push
jno
jl
andl
imul
clc
loopne
cmp
les
loop
aad
ret
fbstp
cmpsb
cld
dec
outsl
add
divl
lods
clc
hlt
das
and
addr16
sahf
in
das
idiv
hlt
adc
out
mov
out
pop
sub
push
cli
mov
js
pop
inc
xchg
inc
inc
pop
jge
jp
roll
sarb
jp
cmc
xchg
jnp
xor
inc
dec
pop
sbb
inc
inc
aas
or
into
push
cmp
scas
in
movsb
out
pop
movb
mov
stc
jp
mov
sbb
jmp
dec
and
mov
scas
push
loopne
mov
fldenv
jo
pop
sub
loop
lcall
mov
pop
and
xor
ror
pop
jno
push
cmc
dec
fdivrp
sbb
lods
scas
push
mov
aas
or
pusha
mov
mov
sbb
fdivrs
pop
data16
fistpll
xchg
roll
aam
cwtl
add
mov
icebp
sub
aad
jle
js
adc
push
mov
dec
adc
mov
rcl
ds
inc
in
mov
xchg
in
lods
scas
dec
ljmp
js
jo
movsb
and
mov
xchg
sub
adc
sub
loope
cs
lret
pop
inc
clc
add
add
mov
pushf
lea
fists
xchg
inc
mov
hlt
test
cmpsb
or
push
shrl
add
fdivrl
and
bnd
hlt
addb
add
jp
mov
jbe
inc
adc
inc
add
xchg
mov
xor
sbb
inc
sarb
dec
fists
jle
lcall
mov
dec
jl
scas
sbb
roll
js
das
lret
xchg
test
dec
std
out
lret
xor
xor
clc
cs
adc
scas
push
pop
mov
xor
das
mov
lret
lock
mov
sar
sarb
nop
out
cmp
mov
push
cmp
push
insb
xor
ds
int3
out
or
test
scas
sbb
sarb
lock
sub
mov
sub
jle
orb
fsubs
jbe
push
cmp
cmp
add
sbb
cmpsb
sub
aad
insl
adc
outsb
inc
icebp
rorl
dec
xor
and
sub
movsb
xchg
mov
sbb
out
jg
rcr
cli
inc
aad
and
out
mov
push
mov
hlt
aas
mov
add
dec
test
dec
addl
faddl
shlb
mov
and
cmc
pusha
or
inc
das
jle
je
faddl
mov
addl
outsl
loope
hlt
fadds
sub
lds
push
rolb
popa
xor
clc
je
ljmp
pop
std
jp
jle
iret
dec
sbb
dec
jo
test
out
jl
push
xchg
xor
les
out
aas
dec
data16
lcall
lret
dec
add
mov
adc
ja
add
movsb
mov
push
sbb
rol
ficoml
xor
pop
mov
inc
daa
outsl
xchg
inc
out
inc
fiadds
pop
inc
cli
jle
mov
les
sub
push
filds
pusha
pop
sahf
mov
cmpsl
sti
repnz
adc
shll
push
repnz
inc
addl
sbb
adc
iret
and
into
pop
rolb
fwait
jp
add
dec
pop
loopne
push
mov
mov
pop
inc
adc
int
insl
cmp
jecxz
mov
mov
pop
pop
jo
rorb
in
ja
insb
xchg
ss
xchg
pop
push
sub
push
cmp
or
jecxz
daa
mov
xor
nop
mov
push
mov
jp
adc
call
cli
mov
pop
sahf
loopne
jecxz
pop
lods
sub
mov
and
pop
fcoml
fcmovu
jg
jp
push
dec
ret
mov
dec
dec
and
mov
out
mov
jnp
sahf
xor
mov
ret
push
mov
cli
mov
jp
gs
pop
xchg
mov
cld
xchg
pop
fcoms
and
imul
mov
clc
int
test
fdivrs
push
xor
loop,pn
inc
jmp
dec
dec
cmpb
or
insb
or
outsb
and
jb
sbb
ds
in
in
hlt
or
mov
sub
jp
add
andb
out
js
xor
les
fcom
adc
mov
bound
mul
adc
or
mov
fdivrl
fisubl
lcall
jl
and
movsb
jp
ret
jge
and
pusha
testl
loope
add
js
xor
testl
mov
xchg
adc
jp
pop
push
dec
mov
xchg
fbld
cli
loopne
pop
dec
cli
xor
into
pop
outsl
scas
scas
insl
mov
lahf
rcl
xor
icebp
xorl
fs
cmpsb
sub
out
scas
seta
in
divb
dec
push
xor
dec
loope
mov
subl
sub
pop
mov
loopne
pop
cld
js
es
in
ljmp
add
mov
sahf
and
std
jg
mov
arpl
scas
ret
into
hlt
jno
sbb
shrb
pop
mov
and
pop
sub
dec
inc
push
pop
aas
jl
xchg
mov
clc
sub
mov
cmp
dec
and
push
jmp
mov
ss
pushf
sub
xor
loopne
xor
push
mov
arpl
movsl
jp
inc
int
sbb
cmp
cli
cmp
daa
jge
lret
adc
roll
pop
sbb
jg
pop
cld
lcall
pop
mov
mov
das
loopne
push
js
lock
out
mov
inc
sbb
jmp
insb
fistps
sub
push
or
pusha
or
lea
out
dec
adc
pop
out
insl
push
movswl
call
shlb
cmc
loop
stos
loopne
fcomip
ret
xor
shll
lods
shrl
les
lret
outsb
mov
out
mov
lret
movb
aam
movsb
jp
rcrl
lcall
mov
sbb
adc
ljmp
lcall
jl
out
push
mov
loop
add
fsubs
ljmp
js
add
fidivrl
in
cmpsb
lret
adc
shlb
sbb
icebp
ljmp
ja
mov
cs
loope
xchg
test
cmp
aad
dec
cwtl
xor
in
test
leave
cli
inc
ljmp
add
ret
jo
xchg
push
cmc
lret
push
xchg
inc
out
mov
in
idivb
jge
nopl
or
adc
cmp
add
or
je
enter
push
mov
out
sub
adc
js
cmp
test
fcompl
in
xchg
pop
mov
fs
cmp
adc
subb
pusha
adc
loopne
or
mov
pop
jg
std
int3
ficomps
or
sarb
and
or
stc
fwait
sub
sub
js
and
pusha
adc
sbb
pop
xor
cmp
sub
inc
pop
sub
fstpt
pop
add
loop
and
mov
xchg
cmc
fidivl
loop
clc
mov
gs
cmp
cmc
mov
inc
jg
mov
sbb
jo
and
mov
adc
jb
clc
cmp
clc
add
ds
dec
insb
sbb
loopne
and
cmc
loope
mov
and
cld
icebp
in
pusha
cli
aam
xor
out
ds
cmc
dec
mov
pop
inc
les
loop
notl
dec
dec
adc
and
fimuls
rcl
sti
xor
shrl
jl
lock
out
cmovb
adc
nop
repnz
lret
jno
mov
ja
jnp
cmp
add
inc
sub
xchg
clc
add
inc
mulb
adc
inc
imul
mov
sub
mov
outsb
mov
jg
clc
mov
divb
lcall
xor
ret
dec
jp
shl
mov
clc
movsb
cwtl
test
mov
sub
jae
cmp
push
xchg
jp
test
movsb
mov
fildll
test
jg
cli
mov
lds
sub
mov
ret
and
sbb
mov
jo
dec
xadd
mov
adc
icebp
inc
js
and
dec
xchg
xlat
es
es
popf
lret
hlt
mov
dec
ficomps
xlat
mov
push
sub
mov
cmc
ljmp
dec
ss
lods
div
inc
xor
jnp
dec
ljmp
fs
lock
mov
xchg
jp
push
test
mov
jno
mov
clc
movsl
fisubrl
ljmp
pop
adc
in
push
lods
sbb
inc
or
and
sub
add
push
pop
cli
lock
repnz
sbb
in
inc
je
cs
push
repz
mov
pop
mov
adc
ds
adc
xor
hlt
insl
xchg
call
cli
icebp
add
xchg
fs
vxorps
insb
jecxz
cmp
or
sti
or
aad
les
fstps
jp
in
pop
test
sbbl
cmp
pop
shll
mov
push
jecxz
xor
pusha
out
lods
nopl
data16
xchg
add
lods
fisttpll
mov
dec
ret
ss
std
cli
mov
fstpl
pop
jl
pushf
loope
outsb
or
dec
jecxz
sbb
mov
dec
push
mov
jae
fsubl
cmpsb
scas
idiv
sbb
rclb
cmpsl
xchg
pop
lock
icebp
loopne
inc
std
xor
sahf
cli
jp
arpl
ds
ret
sahf
xor
sbb
or
xorb
push
adc
lcall
cmpsl
scas
dec
add
test
lret
jne
or
xor
cli
cmp
idiv
lock
xchg
mov
pop
rep
push
push
sbb
lock
push
adc
or
outsb
call
sbb
ljmp
lock
add
cmpsl
mov
mov
dec
push
sarl
pop
cs
hlt
mov
in
and
mov
jp
sbb
hlt
dec
fcoms
jg
outsl
inc
sbb
xchg
dec
cmpsl
nop
pop
xchg
rcl
sti
mov
lods
xor
push
addb
or
sub
dec
lock
mov
test
dec
lahf
icebp
movsb
popa
jo
inc
mov
sub
loope
shrl
shl
xchg
loop
jp
jp
jle
je
pop
cld
icebp
sbb
pop
sbb
mov
sub
mov
pop
cmp
js
vcvtpd2psx
mov
inc
hlt
sub
shl
sub
loopne
cmpsl
push
in
jnp
jo
orb
rcll
test
mov
pop
mov
loop
jo
rorl
sub
push
les
sbb
pop
add
jle
and
mov
push
add
test
push
ficoml
notb
push
dec
lahf
popa
mov
shrb
mov
mov
jge
jnp
push
in
fs
cli
ljmp
lcall
pop
cld
fimull
push
ror
adcb
test
push
in
add
roll
movsb
jp
push
das
push
loopne
fsubrl
out
push
test
lods
inc
add
or
sub
mov
mov
adc
or
lods
loop
dec
js
std
xorb
loop
mov
imul
mov
or
ds
jp
out
sub
mov
jno
pushf
in
sbb
js
xchg
pushf
nop
add
push
xlat
lea
in
movsb
pop
or
cmp
cli
loope
test
xor
push
pop
jp
pop
dec
jp
mov
pop
pop
pop
cld
push
call
rclb
jl
xchg
and
les
aam
fdivs
sbb
mov
and
xchg
push
ss
pop
mov
jecxz
stos
dec
jle
sub
lret
pop
hlt
cmpb
pop
stos
mov
ds
jno
insl
pop
icebp
jmp
xchg
sub
shr
inc
nop
outsb
mov
xor
rcrb
pop
mov
rolb
mov
sbb
es
push
out
and
add
mov
rcr
mov
push
test
adc
and
je
adc
mov
adc
xchg
or
xor
sbb
sbb
pop
sub
andb
cld
arpl
jno
sbb
mov
push
mov
jl
sbb
fs
xchg
or
js
adc
add
popl
push
add
and
dec
ljmp
push
loopne
inc
loop
cmpb
pminsw
lock
push
icebp
sbb
mov
mov
adc
js
pop
pavgw
pop
testb
push
aas
lea
cmp
dec
in
or
shll
mov
jle
int
mov
lods
popf
mov
add
cmpsl
jo
xchg
mov
fidivrl
adc
jmp
sarl
pop
sbb
andb
dec
stos
pop
enter
sub
sbb
xor
icebp
dec
ljmp
cmc
or
or
stos
fidivrs
mov
aas
cmpsb
or
scas
push
xchg
push
adc
outsl
shrb
add
inc
mov
sti
xchg
sub
test
mov
mov
xor
nop
dec
sub
std
push
inc
lret
sbb
in
fmull
xchg
repz
lock
mov
sbb
or
lock
int
mov
clc
fstl
sbb
popa
hlt
rol
cmp
popf
push
dec
adc
enter
sbb
addr16
mov
push
push
lock
mov
ret
addb
lods
psrad
add
and
sti
loopne
lock
bound
and
sbb
adc
icebp
mov
xchg
jbe
movsb
or
or
or
add
fcomps
pop
mov
inc
inc
pop
into
push
add
xchg
cli
mov
or
add
test
pop
ds
ja
xchg
push
addb
int3
mov
xlat
nop
scas
mov
sahf
shr
adc
push
shl
push
push
es
push
jb
adc
inc
fists
cs
push
clc
loop
pop
or
aad
lock
stos
sar
je
xchg
cmpsb
jge
aas
cmp
gs
mov
rcll
es
mov
push
adcl
and
inc
dec
out
inc
test
lock
cld
bound
or
scas
xchg
jns
fisttps
jmp
mov
xlat
ret
mov
inc
mov
push
out
insb
sub
and
cmp
lret
movb
lret
mov
add
inc
dec
fcoms
scas
and
int3
inc
pop
ds
add
jle
cmp
in
in
mov
adc
sahf
in
fcoml
addr16
mov
rorb
push
mov
sti
pop
jnp
nop
xchg
mov
pop
cmp
addb
out
pop
jbe
out
xlat
es
add
lods
aas
inc
repnz
rorb
pushf
jle
pop
scas
iret
sbb
and
nop
sub
ret
pop
and
add
dec
insl
std
mov
icebp
xchg
lret
hlt
bound
into
dec
mov
add
clc
add
clc
cmpsb
negb
cmp
in
sub
scas
insl
jge
lods
mov
dec
pop
test
cwtl
pop
push
lcall
ret
add
aad
cmpsl
out
inc
js
jle
cmp
hlt
lods
pop
mov
mov
add
cmp
cmpsb
jle
add
adc
ficoml
addl
aad
add
add
pop
pop
adc
scas
adcb
fcmovbe
adc
push
les
rcl
pop
test
sbb
pusha
fldl
dec
push
add
inc
and
loop
fstl
pusha
sbb
jmp
outsw
mov
add
jle
xchg
push
pop
or
and
dec
loop
sub
rclb
iret
rcrb
jge
out
sub
lahf
mov
imul
cld
lea
daa
sbb
push
xor
pop
sbb
lock
inc
loop
cs
dec
fs
fadd
dec
push
xor
inc
mov
js
inc
pop
adc
mov
adcl
nop
push
test
lock
lods
ficoml
xchg
cmc
pop
jge
jns
mov
push
addr16
cmp
call
pop
mov
add
xor
mov
dec
or
test
in
shlb
jg
jp
pop
loopne
enter
stos
pushf
jns
test
jmp
test
divl
ss
aaa
mov
sub
loope
lods
adc
xchg
sbb
in
fucom
daa
mov
sbb
loopne
cmpsl
outsl
xchg
outsb
call
xchg
ds
sbb
rolb
into
cmp
lock
ds
hlt
rcl
xor
cwtl
pop
push
mov
jp
and
cmp
cld
scas
das
mov
inc
shl
pop
fidivs
out
dec
ret
and
sarb
scas
mov
pop
pop
les
mov
mov
mov
dec
add
movsl
cmc
addr16
push
testb
or
sbb
jo
mov
mov
movsb
mov
mov
test
xor
mov
push
scas
data16
ret
pop
insb
xchg
add
sar
jp
inc
and
mov
push
fadds
shlb
pop
aam
dec
and
cmpsb
cmpsl
mov
sbbl
nop
lods
clc
lock
push
cmpb
inc
inc
fldenv
cmp
mov
popl
xchg
pop
hlt
aaa
shl
add
push
cmp
sarl
mov
mov
outsl
inc
sbbb
sbb
fisubl
inc
xchg
mov
pop
pop
loop
dec
jecxz
xchg
add
mov
nop
call
push
xchg
push
aas
or
jnp
adc
fadds
pop
cs
or
mov
cmp
ja
stos
and
js
andb
movsb
push
and
jecxz
pop
xchg
cmp
fwait
ds
pop
cld
js
push
adc
fmull
jmp
data16
rclb
sub
rol
dec
out
in
je
jnp
sti
sub
mov
into
in
cmp
ljmp
hlt
jle
pop
mov
repz
call
fidivrl
cli
std
js
mov
insb
gs
lea
sbb
and
adc
or
je
sbb
clc
shlb
mull
iret
aam
pop
sbb
fisttps
scas
push
cli
ss
push
inc
loop
ljmp
lods
dec
cwtl
xchg
mov
loop
fbld
adcb
mov
mov
mov
in
xor
sarl
jg
inc
dec
adc
cmp
xchg
adc
mov
outsb
push
or
in
push
ds
push
pop
add
mov
xchg
idivb
clc
cli
loopne
cmc
aam
adc
ds
push
adc
test
stc
cmp
mov
ds
and
and
adc
bound
mov
test
xchg
mov
subl
fsubrs
roll
mov
mov
mul
movl
in
mov
add
sub
clc
fdivs
or
sahf
test
data16
pop
filds
ficoms
mov
das
test
jo
stos
sbb
repnz
je
fdivrl
es
xor
xor
push
cmp
add
test
jl
and
mov
sub
and
test
cmp
shrl
dec
mov
jbe
sarl
mov
pop
jecxz
pop
test
pop
fwait
sahf
pop
jecxz
dec
clc
bound
lock
lods
fidivs
cmc
aad
mov
movsb
lahf
cmp
mov
pmaxub
sbb
dec
jp
outsb
outsb
or
stos
mov
dec
scas
add
jle
adc
xor
inc
adc
and
adc
ficoml
pinsrw
jae
xlat
nop
jbe
cmp
cltd
outsl
dec
pop
mov
mov
out
add
ss
dec
xor
in
leave
mov
cmp
in
or
lret
sbb
sub
test
jo
in
stc
scas
rclb
xchg
loope
jmp
ljmp
mov
mov
xchg
subb
sub
hlt
mov
mov
addr16
test
sbb
rorb
movsl
cmp
rorb
push
cmpsb
stos
push
out
addr16
cwtl
std
cmpsb
push
ds
pusha
jg
fstpl
sbb
jns
inc
lods
and
clc
mov
clc
or
xchg
mov
test
ljmp
inc
adc
fsubs
pminsw
dec
xor
loopne
enter
mov
jmp
cmp
sub
sub
xor
lcall
ret
dec
jecxz
jle
fsubp
mov
mov
mov
fs
mov
xchg
mov
dec
imul
cwtl
pop
mov
decb
movsb
cltd
add
adc
xadd
adc
inc
push
and
dec
mov
jo
fwait
pop
orl
aaa
and
push
xor
loop
xchg
inc
scas
pop
das
dec
cld
clc
fidivs
bound
sbb
mov
std
clc
inc
and
hlt
sahf
mov
inc
daa
mov
cwtl
dec
jge
pop
xchg
cmp
add
xchg
pop
testb
push
sub
test
jo
xchg
adc
or
rolw
orl
sub
imul
adc
push
adc
lcall
mov
mov
jl
xchg
movsb
dec
sbb
mov
lret
movsl
addl
icebp
enter
lock
sub
and
or
adcl
outsb
aad
adc
or
jae
inc
mov
jnp
popa
adc
jae
outsb
rcrb
inc
aad
mov
push
icebp
cmp
rcl
cs
ret
sahf
insl
int3
push
xchg
aam
add
scas
clc
dec
divl
in
inc
mov
jbe
jle
xchg
js
into
arpl
push
sub
pusha
stos
xor
insl
dec
mov
rclb
movsl
pop
mov
mov
mov
mov
test
cwtl
push
xchg
sub
movsb
mull
xorb
fidivl
mov
pop
aaa
std
js
cmp
inc
mov
xor
test
dec
or
add
push
sub
sbb
outsb
adcb
clc
hlt
jbe
into
jp
aad
mov
rcl
out
ss
hlt
ljmp
lods
mov
mov
and
sub
es
mov
or
add
loopne
aam
jecxz
imul
std
adc
dec
jp
pop
jge
ret
jbe
imul
push
push
mov
xchg
loopne
outsl
xchg
fnsave
test
movsb
aas
pop
mov
jl
hlt
ret
stc
or
and
shll
lods
sub
adc
push
std
add
add
mul
xlat
aad
out
cli
push
fs
fcmovb
sub
dec
stos
pop
ds
pop
or
inc
gs
inc
std
jo
cmc
dec
mov
mov
pop
or
stos
lret
jp
fbld
dec
pop
and
push
mov
ficoml
mov
dec
xlat
and
mov
jbe
dec
lcall
mov
ret
cli
pusha
jnp
orb
rorb
or
movl
clc
les
cld
mov
out
std
cli
xor
mov
xor
mov
mov
add
jo
in
or
pop
shrl
rcrl
mov
loop
ds
imull
pop
jno
mov
and
add
jge
imul
mov
push
cs
cmp
enter
jno
xor
push
out
pop
jl
js
fsubr
cmp
mov
cmp
push
hlt
cs
in
cwtl
enter
and
inc
iret
es
test
xchg
pop
mov
pop
fisubrs
repnz
jp
adc
inc
lods
ret
jge
and
mov
sub
sub
scas
js
cmp
arpl
or
stc
cs
rolb
push
jo
xchg
mov
adc
add
notl
sbb
adc
int
aaa
xor
jmp
sbb
pop
ss
clc
sti
lock
jecxz
scas
imul
js
sub
clc
fistl
xchg
adc
inc
cmp
sbb
fstps
in
es
aas
xorb
subl
scas
imull
out
dec
push
mov
dec
dec
mov
dec
aam
bound
or
mov
movsl
xchg
and
pop
jmp
dec
rcl
mov
cmp
add
mov
jl
sbb
pop
pop
cwtl
sbb
pop
out
cmpsl
cmp
lahf
adc
mov
clc
push
cli
mov
and
xchg
mov
jo
jecxz
inc
push
xor
pop
lods
ret
arpl
mov
xchg
in
ljmp
lods
mov
aam
loopne
shl
cs
leave
xor
cld
mov
mov
loope
sbb
fdivs
mov
cmp
test
call
jnp
xchg
or
push
fisubs
and
or
xor
imul
mov
inc
loop
ret
or
loopne
mov
dec
js
out
adc
push
clc
and
data16
push
cmp
hlt
push
sarb
rorl
bnd
imulb
adc
rol
cmc
push
scas
inc
rorb
into
jg
clc
xor
std
jp
mov
pop
mov
pop
jle
ret
bound
psrld
clc
and
js
pop
inc
sbb
jp
cmp
sahf
jge
fisubrs
out
jnp
loop
pop
outsb
cmp
adc
out
xchg
bound
mov
push
sub
pushf
out
add
and
jns
sbb
adc
and
loop
gs
rcr
xchg
js
add
xchg
xor
pop
prefetcht2
push
xor
xor
jae
and
icebp
ljmp
ss
mov
and
clc
nop
mov
stos
fisttps
xchg
or
inc
ds
and
cmpl
addr16
pop
add
fiaddl
ficompl
xor
xchg
mov
jbe
aad
rolb
sub
pop
aas
cmpb
pop
cmp
dec
rclb
loop
add
xor
jo
sbb
cli
clc
sbb
dec
int3
cmc
inc
push
fadd
ret
pop
pop
and
pusha
push
movsl
fidivrs
mov
xor
adc
aas
push
movsb
dec
jg
or
mov
hlt
inc
jmp
sbb
mov
loopne
jle
clc
icebp
sub
hlt
sbb
push
ljmp
test
das
fcomps
mov
sbb
dec
pusha
cmpsb
addl
jle
insb
jl
orb
test
cmp
repnz
in
add
inc
mov
rolb
movl
lahf
fsubp
pop
inc
pop
lahf
sahf
cwtl
gs
or
mov
xchg
mov
cmp
popa
push
lods
sti
dec
sub
sahf
xchg
repz
aam
call
or
test
aam
mov
fistpll
jno
loopne
mov
xor
mov
dec
into
push
jnp
sub
pop
mov
sti
call
mov
enter
icebp
sub
stos
jbe
loop
cwtl
push
sbb
mov
test
jecxz
or
fldenv
ljmp
mov
or
ret
shll
shlb
cmp
xor
xchg
dec
call
mov
pop
sti
dec
jmp
pop
aam
xor
movsb
dec
add
lods
shrb
pop
mov
or
mov
mov
lods
je
loope
adc
xchg
jmp
dec
adc
pop
popf
lcall
push
dec
pop
ja
push
rcr
sbb
int3
data16
dec
sub
mov
mov
sbb
inc
repz
scas
cs
stos
adc
jp
call
push
ljmp
xor
add
xchg
pop
push
outsl
data16
mov
lock
pop
sbb
xor
ljmp
arpl
outsl
and
jne
xchg
hlt
jecxz
mov
loopne
and
adc
xor
inc
aaa
sub
mov
sub
cltd
ret
nop
scas
xchg
push
push
xchg
mov
pop
sti
mov
push
and
mov
fsubs
inc
adc
lock
jle
idivb
jg
int3
std
mov
add
or
mov
stos
jp
adc
dec
sahf
and
outsb
add
inc
xchg
add
loopne
pop
imul
gs
sbb
inc
repnz
adc
pop
ljmp
mov
sub
loop
and
sub
jge
push
mov
cmpsb
popa
mov
push
or
sub
sbbb
ret
mov
sub
jb
ret
pop
dec
push
and
xor
je
or
in
dec
adc
in
int
xchg
divps
sbb
cs
enter
mov
jge
cmp
ret
dec
jmp
ljmp
mov
stos
bound
dec
lods
jns
pop
bnd
mov
out
fs
mov
insb
movsl
push
xor
inc
xchg
cld
add
push
cli
test
fists
loop
mulb
sub
js
into
push
out
aad
jp
movsl
call
je
jns
imul
imul
push
loope
cwtl
aam
cmpsl
movsb
inc
popa
sub
negl
es
bound
mov
in
out
popf
mov
inc
push
sarb
enter
lock
add
sub
jbe
rcl
mov
xchg
leave
and
or
jne
adc
out
adc
js
mov
test
ljmp
sub
pop
aas
fdivp
enter
ljmp
xchg
out
rcl
je
mov
xchg
enter
adc
xor
mov
jmp
mov
xchg
and
icebp
add
cli
push
or
fdivp
js
xor
aam
dec
ret
into
xchg
ficomps
fwait
or
fmuls
mov
sbb
data16
push
jge
aam
jmp
aad
cmp
push
lods
push
xor
addb
faddl
mov
insb
dec
or
mov
xchg
lock
ljmp
add
std
test
inc
push
mov
lea
and
lret
js
scas
push
adc
mov
jo
ret
sbbb
les
sti
dec
loop
lret
push
dec
insl
mov
mov
adc
push
icebp
ds
pushf
clc
pusha
xor
cmpl
lds
fldenv
stos
dec
fcoms
out
shrb
ds
sub
stos
outsl
into
and
jmp
pop
movsl
pop
or
sahf
shlb
xchg
push
bound
loopne
shlb
ret
cli
or
cmpsb
push
jns
xchg
loopne
jp
cli
lock
xchg
mull
dec
loop
loopne
mov
pop
scas
jle
push
push
out
push
cs
test
ficoml
test
xchg
in
push
jnp
jle
adc
pushf
mov
adc
mov
test
mov
push
fdivrl
adc
xor
nop
lock
sub
mov
loop
shlb
pop
dec
push
jecxz
iret
or
push
in
mov
hlt
repz
mul
loop
cmpsb
sbb
jo
jp
imul
loope
add
subl
pushf
mov
mov
mov
xor
cmc
or
clc
jmp
nop
int
xchg
icebp
or
gs
lret
mov
outsb
mov
pushf
pop
cmpsb
fcoms
cmp
insb
out
jnp
mov
mov
lret
adc
fs
push
cmp
ss
pop
js
pop
sbb
push
mov
xor
adc
call
push
pop
cmp
ds
push
pop
lods
add
cmp
fcomip
cmp
and
dec
push
jnp
dec
sbb
dec
mov
out
stos
inc
dec
pop
aaa
loopne
jg
into
or
dec
fadds
sub
adc
hlt
pushw
hlt
lds
dec
sbb
out
jnp
aam
popa
into
test
mov
lahf
in
sarb
inc
fxam
mov
jg
inc
cmp
stos
arpl
or
bound
jnp
mov
shl
jge
das
cli
out
loop
bound
add
out
jge
pop
ficomps
fimull
xor
mov
es
add
dec
into
and
mov
mov
loope
outsb
xchg
scas
push
ljmp
mov
movsl
adcl
push
movsl
scas
bound
pop
jl
jecxz
fisubl
or
mov
dec
lods
xlat
xor
test
sub
xor
shlb
out
lcall
sbb
adc
push
das
cmp
les
movsl
mov
out
popa
ret
pop
or
hlt
das
sbb
testl
shrb
inc
call
push
push
inc
mov
iret
jnp
pusha
pusha
dec
inc
nop
add
ret
jge
dec
mov
sbb
pop
mov
mov
into
xor
xor
adc
jbe
daa
push
out
repnz
ret
mov
mov
dec
xor
ljmp
mov
and
sbb
daa
xor
xchg
in
push
lret
or
out
mov
outsb
lea
test
push
add
dec
cmpsb
and
addr16
push
popa
bound
mov
mov
mov
mov
pop
pusha
add
pop
dec
xchg
rorb
jge
mov
out
pop
inc
push
add
mov
sahf
daa
jmp
xor
add
mov
test
orl
punpckhbw
subb
ret
push
jecxz
out
lret
mov
into
mov
mov
daa
mov
adc
jmp
inc
mov
lods
out
mov
pop
xchg
jbe
subb
icebp
push
dec
sub
mov
pop
es
xor
inc
pop
xchg
hlt
mov
cmpsb
test
inc
lock
jnp
pushf
cmp
insl
mov
into
stos
stos
es
pop
pop
test
mov
xor
pop
add
mov
pop
mov
ret
xchg
sbb
aad
add
push
sti
in
lea
mov
rclb
xchg
ror
divl
subl
das
dec
loope
pop
cld
ret
insb
pop
add
pop
repnz
xchg
in
filds
inc
loope
xchg
js
add
into
jl
lods
xor
mov
jp
xchg
xchg
pop
das
jl,pt
aaa
icebp
in
mov
cli
mov
mov
mov
push
dec
cmp
ret
mov
push
jbe
ja
dec
cmc
bound
jbe
loop
or
out
mov
sbb
lods
mov
cli
hlt
pusha
pop
rorb
ds
mov
jle
ds
mov
ds
scas
addr16
adc
xchg
aam
jle
scas
add
or
mov
sbb
aas
inc
jge
fsubrs
dec
jg
xchg
icebp
cmc
jecxz
push
add
jo
pop
and
xor
mov
aad
add
ja
dec
mov
push
fimuls
pop
sub
and
or
xchg
addb
fmuls
jo
mov
and
add
jae
xlat
ret
cli
pop
push
adcb
clc
divb
xor
adcb
xlat
and
mov
or
movsb
icebp
push
xchg
pop
mov
pusha
fsubl
js
outsb
add
js
jge
pop
mov
mov
ret
sbb
adc
enter
mov
dec
push
or
icebp
rorb
out
data16
inc
pusha
jle
jg
and
or
add
imul
mov
mov
mov
pushf
mov
push
and
xor
das
adc
mov
scas
test
es
xchg
lock
jae
cmp
inc
cmp
and
lock
push
dec
mov
xor
pusha
cmp
mov
xor
shlb
mov
std
add
mov
lock
xchg
ds
push
aas
cli
jmp
lds
in
jl
in
aas
clc
clc
dec
call
xor
test
loope
negb
repz
jle
mov
rcr
sub
stc
dec
out
int3
rorl
call
adc
icebp
test
faddl
test
test
add
sti
lods
inc
cmp
dec
mov
xor
dec
cmp
lcall
in
insl
pop
or
mov
or
jmp
xor
inc
inc
dec
add
jle
sarb
xor
mov
or
lcall
imul
mov
loope
lock
cltd
out
insl
inc
idivl
cmp
xchg
fcom
fiaddl
rclb
or
or
jno
mov
push
enter
cmp
cs
or
mov
aad
js
pop
add
insb
jl
mov
xchg
add
dec
or
xchg
shrb
inc
iret
and
sbb
xor
out
test
jmp
nop
dec
enter
mov
outsl
xchg
or
aam
xor
js
aaa
mov
in
ljmp
jl
sbb
fs
push
push
dec
inc
add
jbe
push
bound
mov
into
enter
jno
ljmp
es
call
pop
sub
js
mov
loop
enter
mov
add
or
push
outsl
incb
ds
add
cmc
jmp
xor
pop
jbe
jle
ljmp
adc
inc
das
adc
xchg
shrl
cmp
mov
pop
fptan
call
xorb
mov
xor
loopne
jg
push
mov
mov
int
cmp
sub
and
sbb
sub
sbb
aam
ret
cmp
push
loop
mov
mov
jp,pn
sbb
mov
mov
pop
inc
mov
xor
hlt
dec
mov
pop
xchg
scas
enter
cwtl
js
call
xchg
jp
xor
cmpsb
jmp
insl
or
jl
adc
aas
fdivrl
mov
stc
arpl
pop
or
sub
push
fildll
insb
hlt
or
add
jecxz
popa
jmp
nop
jno
clc
push
xlat
and
clc
inc
jno
out
rolb
xchg
mov
test
decl
cs
stc
or
or
mov
data16
ss
cmp
jl
in
or
pusha
mov
cmp
nop
mov
fisubl
test
out
sbb
shr
sarl
mul
sti
jmp
mov
jns
and
loopne
test
and
leave
std
test
add
pop
lock
outsb
loopne
push
in
inc
jp
adc
inc
xchg
mov
pop
in
or
push
push
call
dec
insb
jne
mov
pop
or
int
test
ret
sahf
inc
lods
add
or
fistl
je
or
sbb
xchg
and
call
je
mov
mov
adc
jle
cmp
pop
push
mov
or
ss
and
fdivrs
adc
cmpsl
cld
lock
fs
xor
fildl
push
cmp
lea
pusha
cmp
lods
ja
shll
cli
push
loopne
sahf
inc
adc
ja
mov
push
dec
cmp
dec
shlb
std
mov
lea
push
and
les
fidivrl
lcall
push
push
mov
xchg
mov
jo
rclb
scas
jle
jp
or
mul
pop
int
cltd
rorb
lcall
or
int3
scas
addr16
mov
in
loopne
pop
outsb
jecxz
loopne
dec
inc
js
lock
mov
pop
inc
or
fdecstp
or
pushw
mov
add
dec
push
seto
js
lock
lret
loope
js
aam
adc
stos
je
int
cmp
ljmp
push
cmpsb
push
add
shll
add
jle
clc
hlt
mov
data16
cmp
divl
arpl
mov
mov
jo
sub
loopne
mov
adc
cli
mov
jecxz
bound
jns
cmp
adc
hlt
nopl
cmc
adc
and
xchg
rol
add
cmpsb
das
xor
lock
enter
xor
mov
pop
outsb
mov
lock
mov
lods
cld
enter
andb
pop
lods
in
inc
rolb
pop
cld
scas
js
adcb
in
lock
xchg
jle
ja
adc
mov
popa
add
cmp
les
loope
rol
ffreep
call
adc
stos
shlb
xor
filds
lea
testb
movsb
sbb
stos
jle
test
in
push
pop
and
js
mov
mov
mov
adc
insl
rorb
gs
pop
and
push
pop
and
movsb
xchg
xchg
js
inc
pop
fwait
sub
or
rcl
fdivrl
jl
and
les
jae
mov
ret
jmp
inc
pusha
pop
gs
add
dec
imul
push
icebp
es
lods
xchg
push
sub
into
aad
pop
or
pop
mov
xchg
repz
xchg
rorb
cld
clc
jp
loope
dec
push
pop
movsb
ret
movb
fcomip
mov
outsb
or
adc
xchg
rcll
ficomps
sub
das
add
ret
stos
or
push
mov
inc
sbb
insb
hlt
lret
jo
sahf
pop
call
mov
mov
call
out
iret
add
lret
out
adc
xchg
xchg
cs
lock
scas
mov
arpl
xchg
cmpl
sub
ret
shrl
les
or
filds
mov
inc
mov
mov
rorl
jbe
fdivrs
and
jecxz
out
jle
pop
sbb
fsubrl
jb
movsl
add
inc
push
test
jnp
aas
add
loope
cwtl
divb
mov
cld
clc
mov
sub
push
icebp
mov
rcrb
pop
adc
out
mov
aam
add
or
cmpsl
sbb
icebp
mov
and
sbb
jb
mov
jg
sbb
dec
cwtl
rcrl
jle
mov
cmp
fiaddl
push
pop
jp
ljmp
jp
push
imul
pop
je
lea
mov
stos
add
ds
pop
and
sbb
test
lcall
sub
dec
lcall
sbb
mov
loopne
stos
lret
mov
andb
test
or
jecxz
js
jp
into
es
cmp
adc
ljmp
js
mov
cmp
pop
jle
movsb
pop
daa
push
in
stos
adc
mov
sub
and
adcl
dec
mov
stos
fildll
call
sbbb
jl
jo
mov
dec
inc
or
xor
add
and
jl
into
or
push
inc
add
sub
je
shufps
xabort
cld
mov
hlt
sar
fnstenv
dec
lahf
js,pt
adc
add
orl
inc
jo
aas
dec
cmp
call
push
sub
xchg
mov
pop
pusha
add
pop
or
mov
rcll
pop
das
test
testb
arpl
faddp
mov
mov
pop
gs
pop
jge
lds
call
lods
cwtl
pushf
sahf
lahf
jle
or
pop
mov
add
push
mov
and
xchg
push
loop
ljmp
fdivr
lock
dec
loopne
push
es
popa
inc
js
fisubs
or
mov
sub
ret
cli
add
js
push
inc
les
loope
sbb
lock
cwtl
inc
xchg
dec
test
add
push
dec
pop
sar
js
sbb
shll
fimull
test
push
stos
ljmp
mov
cmp
les
adc
add
fists
stos
mov
test
sbb
stos
jo
fidivs
jmp
fidivrl
ds
roll
sbb
push
push
xchg
clc
xor
hlt
sbb
jno
xor
ds
sub
mov
and
inc
and
addb
int3
test
cmpsb
fiadds
loop
arpl
dec
rcrb
add
aam
adc
adc
push
or
into
mov
test
push
jmp
pushf
jne
cmpb
push
dec
xlat
cmc
xchg
andb
psubsw
push
inc
in
adc
loop
add
nop
div
xchg
loope
pop
cli
inc
jae
int3
fs
insb
pop
or
notl
movsl
mov
pushl
mov
loop
sub
cmp
adc
rol
mov
mov
shrl
call
fistpl
leave
xchg
dec
fildl
mov
pop
dec
das
ds
ret
cli
testb
test
nop
cmp
cs
mov
aas
push
mov
cmp
fdivp
loope
inc
push
aas
push
jecxz
call
cld
loopne
cmp
movsb
js
call
outsl
popa
fsubl
push
push
or
fiadds
sbb
mov
adc
stos
call
cwtl
in
lret
adc
adc
adc
fcmovne
mov
jo
cmp
in
inc
int
push
fs
shrl
jl
lods
enter
sarb
es
stos
mov
cs
adc
andb
adc
inc
loope
xchg
push
stos
mov
fbld
lods
cs
mov
aas
add
inc
push
sbb
repnz
lods
mov
cmpb
fs
and
out
scas
jae
in
ret
movsl
cli
cli
jle
and
es
pop
dec
and
faddl
ds
cmp
add
sbb
fwait
jecxz
add
movsb
bound
into
out
cmpsl
daa
icebp
insb
loop
jl
faddl
lret
movb
jle
add
ds
mov
ret
or
dec
popa
pop
out
rcr
jp
xchg
ds
jle
int
adc
sarb
mov
sub
mov
movsl
pop
cmp
aas
mov
adc
cwtl
aaa
mov
mov
mov
test
push
stos
pop
sahf
mov
mov
out
or
lret
push
dec
jge
jne
sbb
insl
out
or
cmp
inc
fsubs
js
aas
push
cmpsb
push
inc
mov
arpl
cmp
imul
xor
insl
cs
pop
test
or
pop
pop
pop
test
fsubl
mov
mov
scas
movd
mov
aam
mov
xor
lds
js
daa
fmull
pop
dec
fadd
xor
loopne,pt
sbb
pop
mov
scas
rorb
mov
popf
out
and
jecxz
mov
inc
cmp
rorb
xchg
xor
fwait
jb
jp
outsb
test
mov
add
test
cmc
inc
push
xorb
bound
jmp
aam
scas
dec
es
ds
push
jno
push
ds
mov
mov
sbb
clc
pushf
mov
cmp
or
lea
mov
loope
mov
jno
std
and
roll
xchg
lea
xchg
fisubs
mov
mov
jbe
sarl
rol
in
jp
jns
cmp
push
rol
mov
xor
or
inc
pop
pop
pop
lret
inc
mov
loop
jnp
inc
or
pop
stos
cwtl
lods
js
jecxz
mov
push
rcll
mov
rclb
aas
out
movsb
or
inc
cmp
mov
sti
jge
add
pop
xor
mov
insb
jb
popf
jle
or
cwtl
fs
jb
inc
mov
icebp
roll
adc
xchg
shlb
xor
ds
cld
lods
and
push
sbb
shlb
push
popl
xor
nop
fdivl
fbld
push
inc
sbb
xchg
push
jmp
pop
mov
test
add
push
xor
popl
cmpsl
stos
lret
mov
ss
mul
out
ret
dec
leave
lahf
mov
xchg
xlat
sti
js
imul
fisubl
push
mov
add
mov
filds
lea
nop
cmp
jge
sbb
inc
call
adc
jno
inc
ljmp
mov
sahf
notl
hlt
add
sbb
sub
sbb
mov
movsb
mov
out
or
mov
push
cmp
roll
xor
add
and
enter
jp
mov
aam
fldl
fs
xorb
xor
sbb
pop
inc
loope
pop
nop
orb
sub
movsl
mov
xor
mov
xchg
push
add
rorb
adc
adc
or
fcomps
sub
icebp
or
sbb
sub
pop
aas
or
and
ds
lds
movsl
lods
jp
movsl
cmpsl
lret
aas
std
push
push
pop
inc
aas
inc
fsubr
aad
xor
roll
cmp
and
mov
loope
jbe
mov
shll
mov
add
js
and
inc
dec
addr16
inc
sub
ret
mov
inc
cli
push
ljmp
sub
xchg
xchg
cmp
mov
insb
ret
sbb
xchg
into
add
mov
js
cmp
orl
mov
les
inc
cmpsb
clc
pusha
ljmp
in
sub
or
mov
es
push
test
cmp
out
jmp
cli
dec
mov
pop
out
mul
call
jle
jbe
testb
mov
rcrb
out
lods
push
movlps
add
insl
pusha
adc
lahf
xchg
enter
out
mov
inc
xchg
jmp
xor
aad
dec
push
ljmp
lea
stos
out
loope
addr16
sbbb
mov
add
mov
and
out
fdivr
adc
in
fs
out
mov
mov
mov
ds
loope
fisubrs
in
pushf
lods
fists
mov
cld
push
out
mov
loopne
cli
sub
clc
faddl
jl
icebp
adc
mov
dec
stos
jmp
adc
jp
sub
add
fiadds
ds
das
or
xchg
inc
clc
pushf
cmp
push
mov
mov
cmc
bound
mov
clc
push
fnstcw
cmp
jp
jbe
and
lret
aam
pop
aaa
push
bound
into
inc
aas
xor
cmp
rcrb
aam
inc
push
enter
vmovddup
sub
mov
inc
filds
rclb
out
xor
lds
mov
testl
jle
loop
shrb
mov
and
clc
add
loop
pop
dec
cmp
mov
add
mov
es
and
subl
mov
rcrb
cmp
mov
ficoml
xchg
inc
dec
and
and
dec
loop
inc
das
fcomip
xlat
dec
adc
xor
in
pop
cmp
idivl
add
sarb
inc
movl
push
push
pop
ds
pop
testb
push
stos
adc
out
dec
aam
insb
mov
pusha
adcl
cmp
xchg
cld
dec
addr16
mov
mov
xor
xor
adc
xchg
mov
test
cmp
out
js
roll
mov
cld
out
sub
push
adc
push
adc
test
push
into
repnz
pop
inc
psadbw
repnz
loop
pop
pushf
xor
loope
mul
xchg
mov
dec
pop
js
hlt
neg
movsb
test
bound
int3
ret
clc
add
lods
sub
rorl
pop
push
lret
ds
test
lock
mov
jmp
icebp
pop
shlb
mov
pop
and
testl
lds
mov
fwait
pop
pop
or
frstor
ret
test
in
pushf
fsts
dec
jno
sarb
dec
scas
dec
das
fs
int3
xchg
ret
or
in
mov
sbb
lock
sahf
clc
mov
loop
mov
push
cld
push
sub
jge
aam
clc
mov
mov
lcall
xchg
imul
inc
push
or
imul
jle
je
xchg
ds
cmp
pop
imul
push
lods
ljmp
mov
xlat
xor
roll
std
je
lea
lock
mov
jmp
cmp
lahf
dec
cmp
lock
mov
push
jno
lcall
mov
add
js
clc
jno
out
pop
push
xor
cltd
dec
mov
jl
inc
adc
das
lret
add
les
jns
mov
aam
inc
cli
aaa
std
add
std
xchg
in
outsl
in
push
sarb
dec
inc
and
dec
sbb
mov
push
cmpsb
push
movsb
push
test
pusha
pop
dec
or
sarb
lret
test
outsb
mov
cmpsb
sbb
pop
repnz
loop,pn
movsb
add
jbe
adc
xor
xor
cld
ds
test
jno
dec
gs
mov
scas
imul
lcall
pop
mov
test
sbb
or
pop
jge
or
cmp
mov
sbb
icebp
jecxz
loopnew
add
jle
lahf
ret
bound
push
mov
aas
adc
shl
cmp
mov
cmp
cmp
pop
mov
cli
add
jo
dec
cmp
push
cld
mov
cmpsl
and
sbb
rorl
imul
fiadds
nop
test
pop
mov
push
mov
fidivrs
dec
clc
dec
sbb
dec
loopne
push
dec
insl
das
ljmp
test
sub
popf
push
inc
mov
push
fsubrl
xor
xchg
cmc
in
adc
dec
pop
leave
jp
adc
jge
push
fldenv
imul
loop
fsub
es
pop
lock
push
jns
mov
clc
fsubs
outsb
lea
clc
mov
adc
add
je
ficompl
sub
dec
loope
lret
sbb
into
in
test
xchg
hlt
xchg
pop
loopne
pop
inc
jmp
pop
mov
aaa
mov
enter
mov
aam
popa
pop
pop
jl
rorb
andl
cmp
jge
in
or
cmp
leave
scas
jg
jp
ret
popf
test
and
sub
mov
mov
mov
sbb
daa
mov
movsl
int
ljmp
xor
cmp
xor
pop
fisubs
push
mov
push
xchg
cwtl
sub
je
fcmovbe
xchg
hlt
cmp
push
pop
pop
jg
mov
dec
cmpsb
or
mov
add
xchg
inc
lahf
pusha
mov
jp
adc
and
test
inc
into
loopne
xchg
or
inc
dec
add
data16
inc
sbb
push
mov
int
mov
xchg
icebp
lock
inc
or
mov
repnz
lret
and
pop
mov
mov
mov
mov
mov
push
subl
out
mov
cmp
mov
sbb
dec
sti
call
mov
xchg
cmp
cmp
pop
pop
rclb
imul
xchg
lret
or
sbb
mov
pop
aas
icebp
push
icebp
sahf
pop
addr16
jns
xchg
lea
push
inc
mov
pop
stos
lock
ss
mov
inc
push
std
dec
xchg
js
cs
nop
ds
mov
jmp
mov
icebp
pop
pop
mov
mov
hlt
mov
mov
pop
xchg
clc
xor
adc
lock
adc
insb
out
das
add
rorb
mov
sbb
pushf
std
xorb
add
jge
inc
lret
dec
frstor
cli
lock
mov
xchg
mov
pop
cvtps2pi
mov
roll
cmpsl
jno
rorl
sbb
shl
mov
push
fs
fdivs
dec
dec
pop
lock
pop
pop
pusha
add
dec
dec
inc
lcall
cltd
mov
mov
fsubl
cmp
pop
adc
add
or
or
and
mov
mov
xor
jo
clc
add
sbb
mov
and
mov
or
add
nop
aad
cld
mov
test
sbb
inc
icebp
jnp
jmp
or
add
cmp
loope
xchg
iret
insl
push
cmpsb
xorl
cmc
xor
ja
push
pop
pop
mov
in
outsb
push
and
and
sarb
mov
movb
adc
loopne
push
xchg
push
js
stos
jl
jp
or
or
push
or
push
subb
call
xor
test
jle
int3
push
adc
lret
rolb
mov
jmp
dec
je
jmp
les
adcb
mov
jne
ss
xor
hlt
sub
aam
sldt
and
cli
rclb
push
push
jl
shlb
dec
pop
adc
adc
xor
dec
icebp
jecxz
pop
cmp
push
mov
ret
sub
sub
lock
add
cmpsb
adc
int3
das
insb
jg
inc
mov
add
mov
pusha
mov
sbb
sarl
scas
jle
movsb
lret
sbb
adc
push
mov
cwtl
divl
jbe
inc
sub
cmpsl
pop
subb
sbb
cltd
ljmp
clc
loop
lds
adc
xor
dec
lock
push
je
xor
xchg
jl
xchg
xor
es
mov
es
and
aam
cmpsl
cmp
lods
int3
add
xlat
and
xchg
xchg
movb
fsubl
rorl
sarb
in
xor
out
test
sub
ja
and
fs
fs
scas
ret
dec
mov
xor
jl
enter
xchg
jle
and
loope
hlt
and
dec
pusha
hlt
pop
pop
adc
hlt
movsb
arpl
js
mov
les
mov
push
lock
fcomip
call
inc
bound
pop
out
xchg
inc
lock
cmovbe
pop
orl
js
jae
andb
dec
imul
nop
inc
jle
lahf
scas
sahf
out
lods
mov
mov
aad
push
loope
mov
insb
jb
lock
insb
ret
jo
mov
xor
clc
jle
xor
sti
mov
xor
addl
iret
add
xchg
test
out
sbb
mov
call
mov
lahf
push
hlt
cmp
clc
jnp
pop
mov
push
icebp
rcrb
dec
in
into
lock
mov
adc
xor
pop
popa
inc
ljmp
inc
mov
inc
ljmp
insl
cld
or
xchg
push
jmp
adc
lret
or
clc
jl
push
mov
fldt
xchg
mov
mov
push
lret
int3
push
sbb
mov
or
jmp
pop
add
sbb
imul
call
sbb
stos
test
rcrl
shrb
mov
repz
push
lods
fisubrs
inc
or
lods
jl
popa
loop
sahf
push
jle
fwait
call
insl
push
or
pop
add
jle
arpl
std
loope
call
and
mov
shrl
pop
pop
inc
loope
into
and
ret
movsb
je
cld
pusha
mov
jmp
jmp
add
push
and
imul
les
mov
fidivrs
inc
mov
pop
scas
and
sub
fisubrs
aaa
scas
fwait
mov
scas
sub
xchg
out
lret
fs
sbb
inc
int
es
add
ret
lcall
rol
hlt
push
xor
insb
or
js
loop
xor
jg
push
xchg
popf
xchg
or
lock
xor
hlt
or
push
mov
pop
mov
adc
test
int3
adc
pushf
mov
icebp
pop
ret
cmp
mul
mov
mov
in
shlb
icebp
and
push
imull
pop
cmpsb
pop
sub
ror
mov
and
xchg
lods
xchg
adc
lcall
out
pop
sbb
aaa
adc
mov
jmp
test
xchg
out
inc
mov
or
cmp
pop
add
clc
in
push
lods
roll
jecxz
clc
push
jl
dec
clc
inc
cmp
daa
lret
xor
mov
sti
adc
fisttpl
or
push
jle
xchg
push
das
mov
add
shlb
mov
cmpsb
jno
cld
mov
push
sbb
push
push
jb
push
adc
cmp
out
xor
imul
int
pusha
lock
shlb
jge
ds
cwtl
push
icebp
mov
jle
jp
dec
lcall
cmpsb
mov
and
push
push
inc
sarb
jmp
pop
adc
pusha
lea
jle
dec
xchg
jl
rclb
jl
movsb
test
push
dec
or
inc
inc
mov
push
daa
add
fcmovb
das
test
imul
lods
imul
xchg
xor
push
shl
mov
push
xor
sahf
insb
cmp
sbb
fcmovb
lea
ret
rclb
orb
pop
jle
adc
lcall
adc
pop
mov
es
lret
ja
aam
mov
fbstp
out
test
sti
in
rcrb
cmpsb
bound
sub
mov
lods
add
lods
les
lahf
ds
dec
pop
repnz
push
lahf
sbb
es
inc
push
insl
mov
xchg
and
sub
and
in
ficomps
popf
sti
cld
js
or
scas
inc
sbb
and
jp
push
rcrl
call
mov
pop
push
cmp
hlt
or
aam
xacquire
outsb
and
adc
mov
sbb
rolb
bound
rcrb
push
loope
dec
notb
mov
dec
fildll
and
jbe
shlb
shlb
sbb
pushw
or
pop
ds
loop
fisubs
xchg
mov
push
mov
test
in
sub
jp
or
xor
dec
mov
mov
aam
insb
call
ss
jbe
repnz
push
je
push
stc
aas
or
scas
test
fsubrs
cmc
ret
das
add
out
out
fwait
into
xchg
lock
out
inc
clc
inc
ret
lret
insb
divb
xchg
pop
sbb
lcall
push
gs
add
lcall
adc
js
mov
pop
inc
adc
jl
push
mov
rorl
push
mov
sbb
movsl
pusha
and
add
dec
fsubrl
scas
sub
add
inc
ret
sbb
mov
jecxz
shl
loope
arpl
mov
sbb
mov
xor
lahf
enter
or
and
push
ds
mov
adcl
adc
jo
stc
pop
adc
sahf
scas
or
das
pop
popf
cld
xchg
cmp
cli
std
cmp
cs
pop
sahf
test
fcomip
rclb
push
insb
pop
pop
sbb
das
insb
sbb
aam
ljmp
test
fiadds
cmpsb
mov
mov
mov
xchg
jp
and
xchg
vmovsd
adc
shr
cmp
shr
push
pop
outsb
adc
xchg
sbb
jge
shll
es
in
bound
lock
test
out
shll
pop
rorb
push
je
mov
popa
lock
push
pop
jae
shl
adc
dec
js
or
sub
jle
jns
mov
cmp
or
push
lahf
fwait
fwait
mov
fisubrl
cltd
push
cmpl
xor
out
inc
add
insb
in
xor
movsb
daa
jle
imulb
fcomps
xchg
leave
adc
mov
pop
xchg
loopne
xchg
fldt
jecxz
ret
ror
adc
mov
bound
loopne
sub
jb
mov
into
mov
inc
xor
mulb
clc
pop
adc
inc
orb
push
loopne
jmp
fiaddl
arpl
das
push
sub
aas
sbb
dec
orb
push
je
shlb
inc
pop
push
jno
std
add
inc
cmpb
push
mov
cli
lods
lock
sbb
cmp
ret
lods
insb
jp
icebp
jbe
repz
test
insl
sti
and
add
lea
out
or
nop
out
cltd
jns
inc
inc
cmp
clc
push
ficomps
or
jecxz
push
jne
mov
lret
mov
hlt
cmp
dec
push
inc
mov
test
shl
icebp
jecxz
mov
shl
daa
shlb
cmpb
pop
mov
cmp
cmp
jnp
and
dec
jo
sahf
pushf
stc
xchg
mov
jl
cmp
ret
repz
js
or
mov
push
sub
cwtl
pop
out
test
dec
add
mov
add
jl
daa
lods
xchg
and
shll
cmp
mov
ds
adc
outsl
add
ret
push
dec
dec
ljmp
jg
push
out
inc
jmp
sbb
add
jno
adc
daa
clc
bound
mov
jns
or
push
xchg
mov
adcl
sbb
mov
jp
fidivl
mov
xchg
mov
cli
loopne
icebp
dec
mov
inc
int
add
push
and
mov
shufps
inc
clc
loopne
mov
push
nop
std
xchg
imul
mov
pop
testl
sub
add
sub
dec
sbb
mov
js
pop
das
mov
fsubrl
loopne
sbb
js
sbb
ds
push
out
int3
add
mov
or
mov
pop
ret
jbe
sarb
movsb
out
sti
inc
xchg
pop
mov
add
mov
loope
shll
ret
loop
les
lds
lret
mov
sarl
jmp
push
inc
out
mov
es
mov
cmp
add
les
and
aaa
inc
pop
mov
inc
jnp
and
icebp
in
das
ds
adc
sub
leave
sarb
sbb
rclb
inc
sub
call
and
es
push
scas
push
xor
push
inc
jecxz
inc
xchg
neg
repnz
inc
jns
sbb
arpl
rcll
cmp
xabort
iret
out
rcl
pop
insb
pop
adc
push
js
fisttpll
push
stc
xchg
clc
mov
es
pop
out
addr16
jnp
rcll
mov
js
jp
or
stos
sbb
push
sub
cmpsl
lret
sti
loope
mov
jle
inc
out
mov
add
and
loope
sarb
inc
mov
les
sub
in
xchg
rorl
jp
xor
in
into
sub
movl
clc
sub
loopne
rorb
jle
nop
clc
push
adc
xchg
push
push
jnp
pop
push
mov
jl
adc
cmp
sbb
xchg
les
lods
shlb
cwtl
test
andb
pop
out
clc
push
add
clc
push
cmp
jle
icebp
out
arpl
inc
aas
jl
or
out
inc
rol
mov
out
daa
sub
ret
into
cmp
xor
ret
ljmp
mov
dec
les
loope
cltd
mov
mov
cmc
sbb
pop
pop
jge
or
out
out
data16
aam
adc
lret
xchg
nop
test
lock
movb
cmp
mov
cmp
adc
sahf
mov
pop
and
popa
push
nop
shl
jp
cmpsb
pushf
jbe
cmp
cmp
js
add
imul
and
sub
and
mov
xor
jle
mov
cli
mov
push
aad
shlb
add
cmpsb
pop
mov
out
jp
push
test
std
mov
addb
or
das
xchg
sbb
inc
aas
mov
mov
or
mov
sbb
sbb
fstl
cmp
adc
pushf
test
call
pop
imul
outsl
dec
and
loope
cmc
or
sahf
jne
cmp
push
aad
leave
clc
cmc
cs
cmp
sub
pop
add
clc
rorb
fsubrp
fildl
mov
test
adc
fcomps
cmc
add
loop
rcrb
xor
clc
cmp
je
mov
ja
xor
sbb
inc
add
ds
lahf
ss
aam
inc
je
dec
ret
or
movsb
jnp
jne
fistps
inc
ds
mov
add
cmp
jo
ss
cs
and
aas
lret
rorb
out
loopne
fcomip
mov
and
sti
icebp
push
and
clc
xchg
testb
leave
add
sti
ds
mov
pop
pushf
xchg
mov
int3
lds
mov
ret
pop
scas
add
adc
xlat
out
pop
lcall
jns
popa
xor
ret
ds
cli
ljmp
cmp
clc
mov
push
adc
jle
adc
jle
mov
aad
loopne
mov
cmp
jne
push
scas
fldl
pop
pop
inc
clc
stos
mov
call
mov
out
mov
sbb
mov
ret
rcrl
cmpsb
jns
add
xchg
xor
mov
fs
movsl
push
adc
pop
mov
ret
xor
mov
ficoms
or
push
fidivrl
pop
mov
int3
outsb
pop
fiadds
adc
je
out
mov
inc
xor
cld
and
pop
add
pop
jl
xor
ss
jbe
cmpsb
cmp
mov
adc
mov
out
scas
adc
mov
adc
xchg
jp
dec
add
insl
loopne
psubusb
add
cwtl
cmp
out
add
mov
xchg
sbb
cli
push
fs
ret
xchg
inc
insl
push
dec
pop
aas
cmpb
dec
pop
jp
clc
je
mov
fadd
rcrb
mov
test
enter
call
adc
dec
jecxz
or
cmp
pop
js
cmc
cltd
push
hlt
push
out
push
scas
pop
sbb
cmpsl
loopne
adc
hlt
imul
rclb
mov
mov
and
loop
jmp
lock
out
jle
cmp
jecxz
ljmp
shlb
pop
outsl
xchg
xchg
ficomps
dec
jmp
pusha
push
lea
adc
jns
rcrl
mov
and
pop
insb
js
imul
test
pop
dec
cmpsb
cmc
insb
aas
push
lods
cli
clc
das
dec
fs
mov
or
cmp
pushf
sub
imul
inc
xor
movsb
and
loopne
and
rcrl
popa
cmp
mov
adc
mov
test
es
js
fcmovbe
daa
loopne
stos
pop
xor
push
or
insb
mov
call
out
jl
inc
jp
add
test
push
sbb
mov
and
sar
dec
add
ss
push
loopne
pop
idiv
sub
out
add
sbb
sub
je
jle
mov
fisubl
insb
inc
xor
divb
jle
pushf
rolb
icebp
jge
loop
in
jecxz
insb
cmp
lock
stc
mov
dec
xor
hlt
inc
or
jl
mov
mov
push
mov
push
fdivp
xor
rorl
loopne
icebp
adcb
jnp
sbb
clc
xor
and
sub
and
adc
fmuls
xor
dec
xchg
cld
mov
adc
or
inc
pop
scas
fs
repnz
or
lods
mov
shrb
sbb
pop
pop
das
xor
jl
cmp
push
aaa
das
popa
fs
jo
push
mov
ljmp
jl
test
cld
add
rorb
dec
out
sub
jmp
mov
or
fadd
add
sbbb
adc
out
bnd
das
jge
mov
jb
fsub
pushf
sub
jl
fnstsw
jg
add
push
js
rorb
movsb
ds
out
jp
add
sbb
lahf
into
outsl
mov
mov
lock
xchg
stos
loop
xor
clc
jo
pop
out
cmp
sbb
jl
out
mov
shrb
cmp
jl
lock
sub
dec
stos
pop
lahf
sahf
sub
pop
cld
imul
aam
scas
ss
xor
scas
aad
xor
push
add
push
aam
jbe
sbb
enter
jg
dec
mov
lcall
inc
fdivrl
in
sti
testb
pop
imul
pop
dec
jmp
ja
ss
bound
push
mov
pop
les
and
js
sbb
fdiv
cwtl
aam
dec
and
lahf
add
jge
push
and
inc
loope
dec
cld
test
xor
pop
cmp
std
push
jo
mov
add
sar
pusha
popa
loopne
cmp
adc
rcrb
nop
adc
pusha
jne
add
cmp
cmp
icebp
cmp
dec
lods
xor
push
mov
lcall
pushf
insl
test
or
sti
xor
sbb
sub
xlat
add
xchg
cmp
pop
lods
or
cmpsl
xor
bound
out
cmp
lock
dec
in
in
fmul
push
and
add
loopne
mov
inc
push
adc
lods
mov
pop
rcrb
sbb
jnp
pop
mov
xor
lcall
and
jge
mov
arpl
mov
adc
notb
inc
shr
les
sub
mov
test
sbb
aaa
loopne
lret
mov
sahf
push
shl
loop
popf
cli
sbb
out
cmp
loopne
mov
lods
andw
repnz
out
loope
push
fistps
inc
shlb
icebp
loop
dec
hlt
xor
pop
push
xchg
jle
je
cltd
mov
in
push
icebp
xor
test
movsl
mov
xor
fwait
out
mov
out
and
pop
jo
fwait
adc
xor
dec
add
xchg
push
xor
mov
sbb
sbb
and
rcrb
mov
fcom
add
orb
adc
in
mov
jmp
and
xor
sub
push
add
cmpsl
mov
cmpb
add
loopne
push
rolb
pop
cld
cmp
nop
push
jp
rcrl
cld
and
or
add
outsl
or
dec
cs
adc
dec
movsb
jp
stc
hlt
rcrb
mov
hlt
cmp
out
sarb
pushf
xor
jp
rcll
and
les
adc
mov
sub
lds
jle
push
js
jle
clc
dec
pop
cmpsl
push
movsb
sbb
mov
jge
nop
push
mov
add
push
mov
mov
mov
insb
pop
add
scas
cmpsb
add
shlb
test
lock
loopne
inc
test
dec
lock
or
js
je
push
mov
ret
inc
stos
insb
add
aam
cmp
ret
dec
outsl
add
shl
mov
jno
rorl
and
jb
xor
jmp
fimuls
rorl
lock
inc
cmp
jle
jno
cmp
inc
daa
pop
adc
or
xor
lock
cli
lock
cltd
dec
les
pop
rcrl
rcll
mov
push
xor
jb
inc
aas
or
sub
xchg
ret
daa
mov
xchg
clc
cmp
stos
jp
push
jbe
mov
dec
cwtl
adc
mov
idiv
js
sbb
mov
data16
lock
sub
mov
daa
ret
mov
xor
subl
inc
mov
dec
fsubrl
jnp
xor
js
test
jae
lahf
and
or
xchg
sahf
mov
fs
mov
inc
fmulp
rol
cmpb
movsl
enter
cmc
mov
sbb
xchg
fmul
push
cmc
cmpsb
push
lds
stos
or
das
pop
adc
negl
jp
data16
shufps
adc
rolb
jge
loope
or
dec
jge
adc
dec
adc
inc
add
in
push
popf
jp
jg
push
xorl
js
xor
fprem1
rcl
and
xchg
xor
xor
icebp
outsb
stc
add
testb
fldl
pop
andl
pop
add
insl
pop
lret
cli
inc
andl
or
mov
mov
pop
xor
mov
shrb
or
call
std
and
ljmp
xor
pop
addl
push
push
jp
jo
jo
or
loopne
into
pushf
scas
jne
dec
sbb
cwtl
js
pusha
shll
push
int
out
or
je
movsl
adc
shl
loopne
mov
dec
xchg
fmull
ds
cmpl
pusha
mov
inc
mov
lea
dec
mov
dec
inc
jne
xlat
cmpl
push
mov
pop
outsl
cs
or
jl
sbb
mov
wrmsr
jl,pt
inc
rcl
sbb
lods
mov
mov
orl
lods
pop
sbb
roll
in
dec
jo
mov
icebp
xchg
sbb
jmp
or
mov
lods
ret
push
leave
mov
adc
sbb
enter
push
mov
push
stc
jne
test
clc
lret
insl
dec
mov
cmp
rorl
mov
cmp
imull
push
mov
sarl
mov
out
loope
adc
pop
cmpsb
out
fisubl
fwait
movsl
sahf
mov
jge
or
jg
xor
add
pop
loop
ds
mov
mov
inc
stc
je
mov
inc
cmpsb
fimull
dec
les
or
push
and
push
push
addl
mov
lock
cli
pop
lods
cmp
out
mov
mov
xor
fimuls
mov
mov
divl
push
dec
xor
fistpl
dec
lar
xor
je
mov
loopne
push
call
or
add
jno
sub
ret
scas
push
mov
in
les
mov
cmp
aad
mov
sar
adc
push
add
fsts
mov
cmpsb
pusha
lods
in
pop
adc
shl
inc
out
out
and
inc
aam
or
dec
aas
fnop
cmpsl
stos
int
mov
jecxz
out
sbb
pop
lods
jae
faddl
lock
jp
pop
cld
sbbb
pop
push
aas
in
fnstsw
pop
or
aas
movsb
imul
popf
repnz
je
lods
add
cwtl
add
test
sub
fs
cmpl
frstor
cmpsl
cwtl
mov
dec
pop
inc
pop
addb
aas
and
les
insb
jge
ret
jge,pt
mov
sbb
leave
add
and
sbb
cld
pop
gs
std
lock
pop
push
pushf
loopne
out
es
pop
jg
pop
jbe
loope
sti
jno
push
add
and
rol
dec
rolb
shll
in
pop
lahf
testl
insb
xchg
cvtps2pd
in
pop
ret
or
mov
adc
jle
mov
movsl
add
mov
jo
es
mov
pop
or
icebp
test
push
mov
shrl
test
test
movl
add
orl
scas
mov
cmc
or
mov
pop
movsb
mov
ds
push
sbb
loope
xchg
fs
ret
outsb
mov
lock
cs
xchg
and
cwtl
out
loop
clc
jne
es
addl
pop
lods
inc
mov
add
out
push
push
popa
add
mov
imul
gs
js
jle
adc
pop
adc
jo
les
loopne
and
xor
fildll
pop
stc
cmp
cli
out
fbstp
cltd
rcrb
js
in
adc
je
loopne
mov
dec
insb
pop
and
cmp
fistps
xchg
ds
mov
in
les
mov
sub
inc
adc
out
push
mov
cmp
cmp
jbe
js
xchg
dec
inc
xor
aaa
fdivrs
fists
push
mov
fs
add
pop
push
call
lock
imul
sti
hlt
push
adc
pushf
fcomp
pop
jo
or
xchg
mov
cmp
imul
nop
daa
adc
or
clc
xor
loop
mov
or
pushl
pop
jns
push
xlat
cmc
jmp
xchg
mov
das
in
and
imul
cmp
movsb
mov
test
ds
pop
jle
sbb
mov
repnz
xadd
sti
or
fcoml
js
push
or
movsb
fidivl
jno
hlt
inc
sbbb
ss
add
xchg
test
jl
mov
scas
push
push
adc
pop
adc
dec
inc
cmp
cld
cmp
addr16
cltd
jbe
aaa
lret
sbb
jmp
loopne
cwtl
xchg
test
scas
or
call
sub
rcl
inc
mov
shlb
fildll
loope
stos
adc
addr16
sub
jbe
rorb
xor
pop
clc
sahf
std
loopne
cli
jecxz
xor
and
rolb
addr16
cli
cmp
dec
inc
xchg
xor
int3
mov
jle
cmp
mov
test
sbb
jge
aas
int3
shl
test
in
js
mov
in
stos
xlat
pop
bound
and
xor
out
xchg
mov
movsb
mov
insb
lock
sub
push
outsb
cld
cld
not
cli
ljmp
fadds
and
lds
sub
add
enter
push
dec
and
and
idivb
ds
jle
inc
jbe
push
mov
aad
mov
jae
imull
bound
popa
inc
and
fs
adc
jge
dec
ds
xchg
mov
hlt
push
pop
mov
sub
cmpl
jo
ds
dec
inc
test
add
sbb
add
sahf
test
test
fldl
xchg
lock
mov
push
inc
xor
adc
jb
cld
icebp
enter
stc
xor
pop
pusha
or
aam
pop
movl
mov
dec
out
cmpsl
mov
bound
jnp
andb
stos
ss
mov
inc
mov
jle
xlat
outsl
push
and
out
das
cld
push
jmp
jecxz
sbbb
nop
ret
repnz
dec
ret
lods
push
movsb
jne
inc
pop
push
cmp
dec
cli
xor
cmpsb
js
dec
loop
dec
mov
out
cmp
jmp
cmp
dec
jmp
shrb
add
jmp
add
mov
pop
lcall
sbb
xchg
add
test
movsb
arpl
push
pop
les
dec
ss
out
aad
loopne
pop
add
cmp
add
clc
or
fcmovb
mov
fwait
pandn
shr
fmul
wbinvd
movsbl
mov
clc
test
hlt
fsubrl
inc
pop
loope
mov
dec
sbbb
sti
call
cmp
inc
pop
jge
loop
mov
xlat
mov
xchg
adc
lret
lds
pop
pop
sti
cmp
rol
cmp
adc
dec
xchg
hlt
add
xor
loop
add
push
pop
clc
mov
mull
cmp
jp
popf
scas
aaa
mov
addr16
xor
fdivrs
inc
fsubrs
xchg
jge
mov
inc
push
mov
movl
cld
sbb
aam
aam
stos
in
andl
pop
push
repz
mov
subl
sub
loopne
test
push
sub
out
shr
das
or
pop
adc
in
cmp
dec
push
pop
or
push
je
mov
outsb
gs
xor
mov
dec
cld
cmp
push
lcall
or
dec
fwait
imul
addr16
cld
aam
xchg
jle
pop
rolb
in
scas
jg
cmp
mov
inc
sub
jnp
aad
hlt
lds
sarb
lret
add
into
shrl
jecxz
lock
lods
sbb
imulb
xor
mov
jne
cmpsl
inc
pop
pop
enter
mov
div
test
adc
inc
dec
je
shrl
lds
jmp
mov
or
xor
pop
fidivs
and
adc
xor
push
imul
pop
jl
les
jno
shrb
inc
aam
mov
xchg
arpl
xor
xchg
mov
jl
mov
stos
cwtl
shrl
sti
sti
js
std
js
pop
mov
jg
popa
outsb
jle
jp
aam
sub
hlt
ret
mov
movsbl
fstpt
jnp
into
stos
sbb
lds
ret
pop
outsb
or
ds
pop
and
or
jnp
test
xchg
fisubrl
rcpps
pusha
pop
and
int
fwait
jecxz
cmp
push
jl
and
std
and
lahf
outsb
add
outsb
xchg
dec
nop
shll
dec
loopne
mov
mov
sbbl
jl
xchg
cmp
cli
fstpl
pop
sbb
or
loop
popl
push
jg
push
or
and
or
lods
les
fstl
mov
sarb
mov
inc
adc
mov
rorb
ss
loopne
dec
loopne
mov
and
push
pop
jecxz
jno
mull
push
dec
call
in
jb
mov
call
aaa
jae
test
lock
and
popa
lods
rol
and
and
and
test
xor
jl
and
mov
adc
repz
or
push
xor
fs
stos
jno
jb
mov
movsl
addr16
sub
out
mov
pop
and
subb
mov
mov
pop
dec
aaa
add
mov
pop
decb
lcall
inc
test
ss
decb
das
loop
orb
movsl
icebp
adc
cs
ljmp
mov
incb
xor
loop
add
jle
fstpl
jbe
loopne
cmc
loop
ret
arpl
add
fsubrl
adc
stc
inc
adc
repz
push
bound
cmpsl
and
mov
aam
jno
jle
sub
cs
out
inc
popa
add
std
dec
call
push
lods
xchg
ja
or
xchg
ret
sahf
cmpb
add
js
cmp
pushw
outsb
das
jmp
add
pop
data16
lods
mov
dec
mov
mov
jle
push
pop
mov
testb
lods
jp
xchg
sbb
push
into
fwait
lahf
ds
cmp
mov
jge
jle
push
sub
or
es
popa
sub
hlt
inc
xor
idivb
xchg
push
add
cli
sti
xor
sbb
mov
ffreep
mull
daa
es
pop
add
jp
rorl
adc
subb
insb
or
mov
dec
mov
cld
dec
jle
insb
outsb
or
in
cmpsb
adc
xchg
lfs
push
popl
pop
pop
inc
lcall
or
arpl
mov
xchg
sahf
mov
addb
mov
and
and
jns
decl
inc
movsb
mov
bound
subl
in
mul
fldt
pop
pop
shlb
mov
mov
xor
sbb
sub
mov
xor
add
stos
jo
pop
pop
lea
cld
popf
rcrb
movsbl
outsl
loopne
jns
test
lock
shl
mov
mov
inc
inc
cmp
icebp
and
push
push
xchg
clc
jle
movsl
addl
ds
adc
cmp
hlt
loop
mov
cld
dec
js
mov
icebp
sarl
je
sub
mov
pop
xlat
cmpsl
pop
sbb
jl
sbb
sub
ljmp
popf
mov
sbb
jle
out
shll
add
bound
push
outsb
inc
repnz
pop
cld
mov
arpl
shl
cltd
lock
nop
push
jecxz
aam
sub
and
cmp
push
test
mov
pop
push
sbb
push
lcall
lcall
loop
arpl
xchg
loop,pt
or
enter
cld
test
loopne
dec
cmp
cs
ret
add
lock
pop
mov
sti
inc
inc
inc
push
in
cli
je
icebp
or
add
repnz
ret
xchg
movsl
negl
insb
dec
cmp
arpl
xchg
mov
and
push
sub
mov
or
adc
scas
sti
and
stos
out
in
jo
cmp
hlt
or
adc
mov
push
inc
cld
fisubrl
cmp
pop
inc
subl
aam
or
adc
je
mov
je
sbb
or
sbb
xor
cli
jmp
xor
insl
pop
loopnew
in
or
and
push
rcrb
mov
fmuls
push
jge
add
inc
jmp
cli
call
and
dec
ss
adc
inc
loop
cmc
or
fadds
sbb
mov
scas
rolb
sbb
sub
mov
mov
mov
aas
ljmp
out
xchg
cs
js
jecxz
iret
outsl
lret
add
add
push
pusha
bound
or
inc
and
and
loope
jmp
mov
les
je
mov
enter
lock
xor
dec
mov
mov
jl
xchg
cs
jecxz
int
lds
mov
adc
jbe
sahf
clc
mov
out
sti
xchg
stc
loop
mov
dec
shlb
lcall
ljmp
dec
sti
add
pop
cwtl
mov
icebp
testb
adc
ja
xchg
xchg
repnz
clc
cli
mov
adc
pop
lahf
pop
scas
mov
call
adc
daa
cmc
rorb
pop
lcall
and
hlt
lock
pop
test
test
add
jnp
cmp
cwtl
subl
dec
popf
mov
cmp
xor
mov
inc
mov
ret
sbbl
clc
and
lcall
fisubrs
sbb
push
out
or
test
jmp
mov
ret
loope
sbb
pop
shrl
add
sbb
sub
add
ret
push
mov
dec
mov
stos
loopne
lock
push
dec
ret
pop
into
cmp
call
sarb
insl
fs
bound
rorl
in
dec
push
fs
out
clc
loope
pop
lahf
insb
adc
lods
rclb
dec
aas
mov
ss
sbb
imul
pop
push
xchg
mov
add
jb
bound
clc
popa
loope
insl
pop
dec
ljmp
mov
jns
add
sbb
cld
push
leave
xor
inc
sahf
cmc
push
sub
std
lock
test
add
cmp
fmuls
dec
cld
fs
mov
and
cmpsl
inc
pop
push
sub
cli
fistps
daa
outsb
push
xchg
xchg
idivl
push
hlt
push
pop
shll
jbe
jl
aas
pop
nop
pop
mov
and
and
gs
jbe
jl
dec
add
xchg
sbb
ss
pop
imul
bound
cmp
dec
mov
jl
clc
mov
cmpsb
xorb
jo
ja
call
cwtl
hlt
mov
pop
shrl
add
xchg
repz
mov
mov
adc
xchg
rol
mov
int
nop
rorb
push
lar
push
lahf
jp
jge
shr
jmp
clc
hlt
fcom
ficomps
in
pop
mov
rorl
and
cs
idivb
mov
and
sahf
lret
pop
or
pop
or
add
mov
pop
xchg
adc
les
inc
xchg
hlt
mov
xor
sbb
inc
cli
jle
cli
mov
ret
mov
xor
cmc
jle
adc
add
push
es
out
lods
clc
jmp
sbb
test
xor
adc
out
imul
add
dec
cld
sub
dec
jbe
orl
xor
pop
aas
or
dec
stos
cli
add
adc
dec
sahf
jo
xor
fistl
shr
sti
hlt
sarb
mov
cld
cli
lock
adc
js
pop
pop
add
inc
in
sbb
shrl
shrb
cmp
mov
std
jo
mov
inc
es
inc
mov
jle
jl
sti
push
cmp
rorb
adc
hlt
or
or
fs
xor
aas
sbbb
inc
and
sbbb
cs
mov
add
rcrb
pop
xchg
ds
adc
push
mov
cmpsb
jmp
mov
lret
icebp
xchg
decl
dec
pusha
pushw
add
push
jge
sbb
je
out
fdivrs
and
nop
pop
loop
das
idivb
mov
js
push
adc
sahf
loopne
sub
ret
inc
fidivl
setle
push
push
lds
jnp
xor
mov
xchg
push
and
loopne
enter
pop
fcmovnu
cmp
outsl
mov
jno
pushf
fbstp
push
push
jle
movsb
mov
mov
aad
add
test
fbld
mov
sbb
cli
cltd
mov
pop
clc
sahf
out
bnd
clc
loope
mov
ficoml
xchg
pop
scas
out
dec
mov
push
shl
lock
pxor
pop
xor
addb
fiaddl
fiaddl
data16
and
pop
mov
lahf
ret
je
jp
jg
in
mov
pop
aas
movsb
jp
push
fbld
rolb
lahf
aam
loopne
icebp
adc
or
and
lods
jg
pop
xchg
movsb
mov
dec
lods
sub
jae
push
pop
cld
mov
jg
pop
push
or
push
fiaddl
adc
fimull
jno
addb
addb
mov
mov
shlb
out
mov
push
push
movsb
push
or
sub
mov
sti
loop
jp
sub
dec
inc
sub
ja
leave
dec
in
test
in
imul
addl
inc
out
mov
inc
orl
jp
jmp
cmpsl
push
and
dec
sti
add
in
dec
mov
push
xlat
int3
loopne
sub
imul
enter
pop
inc
mov
inc
je
xchg
cmp
cld
sub
jmp
mov
ds
jg
js
paddw
push
cli
enter
adc
push
mov
jecxz
ret
bound
je
data16
lcall
pop
cmp
loop
dec
cmp
mov
je
push
imul
cld
fnstenv
jmp
test
pop
pop
push
mov
mov
jle
cmpsb
in
adc
lods
icebp
shl
xchg
inc
push
push
loop
mov
mov
jge
stos
es
test
jns
pop
subb
jo
lahf
into
lock
scas
ds
popf
mov
pusha
lahf
jle
mul
push
cmp
lock
test
lret
inc
sbb
and
pop
ss
mov
mov
xor
xlat
in
pop
cli
jge
imulb
xor
shlb
sbb
bound
push
jl
push
dec
fldl
lods
dec
or
lods
test
cmp
je
fiaddl
pop
mov
shlb
icebp
addl
loope
xchg
in
inc
pop
cmpb
push
sub
pop
mov
scas
je
lods
cmp
add
mov
jmp
adc
stos
pop
rcrb
adc
pushf
aaa
out
dec
adc
mov
fsubrs
scas
scas
mov
icebp
enter
fcmovb
dec
lods
dec
cmp
mov
sub
popa
bound
lock
cmp
daa
pop
jle
sub
push
sub
gs
pop
jno
push
cli
xor
jno
sahf
xorb
mov
mov
xor
cs
xor
das
andl
inc
rcr
stos
xchg
scas
mov
push
jbe
xchg
mov
mov
rcrb
mov
add
inc
dec
filds
pushf
lcall
imul
sub
les
fbld
iret
loopne
aad
inc
rcl
add
ret
and
adc
pusha
add
mov
jmp
fisubl
sub
sbb
adc
inc
subb
pusha
mov
inc
insb
cmc
sub
jle
je
mov
std
icebp
mov
adc
mov
cwtl
btc
push
daa
sbb
out
mov
insb
ret
out
pop
push
or
add
xchg
and
adc
or
jnp
adc
mov
ficomps
sbb
mov
sbbb
sbb
cmp
lock
mov
clc
jo,pt
mov
out
xchg
fmul
jg
rsqrtps
xorl
rcl
adc
add
push
lds
add
jl
sbb
xchg
rcrb
ds
mov
sub
push
pop
int3
loop
lods
push
sar
call
jnp
pop
clc
ljmp
aad
xor
bndstx
shll
jg
sub
jmp
xchg
sarl
mov
adc
clc
inc
sub
clc
mov
inc
pop
jg
nop
sub
daa
pop
sarl
movb
in
das
aad
out
mov
xor
cwtl
scas
insb
outsl
insb
daa
xor
cli
mov
in
mov
divps
mov
fcmovbe
add
jbe
dec
cmp
bnd
sub
rorb
pop
std
popa
dec
out
and
bound
xlat
cmc
and
clc
xchg
loop
jge
dec
xor
test
cmp
sahf
jno
ljmp
ror
jl
mov
lock
call
mov
lcall
es
sarl
push
scas
movsb
testl
idiv
sub
bound
mov
fadds
cmp
pop
or
mov
mov
outsb
adc
sarl
pop
and
mov
outsl
add
pop
inc
jp
lock
clc
mov
cwtl
out
push
cmp
test
sbb
push
add
movd
clc
outsb
int
jb
jo
fs
add
setnp
jp
into
repnz
push
pop
mov
push
mov
jl
adc
addr16
es
ds
dec
sub
sub
xor
xor
movsb
mov
imul
inc
sbb
test
daa
or
ljmp
cmc
ljmp
popa
mov
shr
add
je
push
inc
pusha
xchg
testl
sbb
popl
mov
filds
push
addr16
add
test
popa
push
dec
enter
xchg
testb
out
mov
or
inc
xor
add
mov
sahf
clc
icebp
add
mov
or
ss
fldl
jl
jb
pushw
add
pop
shlb
aam
mov
inc
adc
js
fwait
rcrb
mov
push
sti
xor
out
repz
inc
jmp
dec
adc
f2xm1
mov
push
fwait
ret
shrb
push
js
jo
push
push
enter
push
nop
jle
adc
or
sub
clc
hlt
adc
mov
pop
mov
mov
cmp
and
mov
ds
inc
sti
or
int
int
mov
sbb
add
sbb
iret
int
int
mov
jle
mov
xchg
in
xchg
hlt
and
loop
mov
daa
out
pop
cli
mov
mov
mov
dec
cmpsb
outsb
rcl
push
aam
dec
lock
and
sti
mov
sbb
or
repz
iret
addl
pop
clc
cmp
inc
rorl
dec
pop
es
sti
cwtl
sbb
addr16
jo
int3
fistl
cmc
push
icebp
or
sub
dec
pop
jge
xor
in
mov
pop
hlt
dec
clc
mov
idivl
sub
and
hlt
pusha
adc
ss
aam
xor
and
popa
out
sbb
sbb
icebp
loop
dec
mov
lods
adc
out
pop
les
pop
movsl
pop
test
fidivrl
lret
rcrl
adc
hlt
sbb
xchg
lahf
sub
movsb
sbb
in
sub
mov
fsub
cmp
xor
add
dec
lds
in
out
lods
loop
add
inc
loope
mov
mov
add
push
cmpsb
mov
pop
cmp
jle
jg
push
jle
add
inc
push
orl
sbb
mov
sbb
stos
loop
callw
in
adc
push
jno
outsb
xor
test
rcrb
dec
lods
mov
add
mov
lock
mov
loope
das
lret
xchg
xlat
push
out
enter
lret
add
stos
pop
push
cmp
inc
ret
add
out
inc
pop
mov
sahf
fmull
rorb
dec
out
icebp
movl
push
ret
int3
jge
jl
mov
xor
outsl
test
loope,pt
lock
out
mov
stc
pusha
dec
jmp
call
mov
jle
jp
jle
outsl
js
loope
sub
pop
js
cmp
xchg
jle
push
insl
and
ja
test
je
rol
aas
outsb
test
inc
adc
shlb
cmp
fiadds
xchg
test
push
push
cli
aas
sub
call
je
mov
mov
arpl
xchg
hlt
push
pop
cmp
mov
cmp
xor
out
call
es
sahf
iret
mov
js
mov
sub
mov
lahf
xchg
push
les
xchg
into
adc
clc
add
add
add
loopne
imul
xor
data16
pop
jbe
ljmp
dec
push
adc
mov
out
pop
add
jg
movsbl
es
movsb
jge
fidivrl
pop
ficomps
data16
adc
push
out
pop
fs
pop
js
pop
das
lods
jl
push
into
enter
and
rcll
rol
js
pusha
and
push
ljmp
pmaxub
jl
xor
mov
imul
sbb
popa
jecxz
cmp
or
ss
mov
mov
outsb
andb
mov
sub
mov
andl
xchg
push
sbb
sbb
sbb
xchg
or
ret
inc
cmp
pop
pop
ds
inc
std
test
pop
int3
xchg
jle
cmp
pop
mov
pop
push
xor
out
mov
sbb
or
push
stos
sbb
jmp
mov
orl
push
ds
sub
xchg
push
repnz
dec
jp
sub
sbb
into
xchg
sbb
hlt
aaa
andl
scas
add
jp
jb
jge
push
rcr
or
movsb
repnz
mov
fbld
lock
xchg
jne
sub
pop
cmp
pop
sbb
aam
out
jno
icebp
call
data16
scas
or
push
js
lock
mov
das
or
inc
cli
lock
cmp
or
cmp
add
pop
insb
rol
repz
dec
aas
movsl
pusha
in
cld
loope
aas
mov
lahf
repnz
clc
shll
outsb
jle
mov
adc
popa
lock
loopne
dec
orb
shrb
xchg
push
mov
rorl
movsb
pushf
lods
outsb
xor
lds
xchg
push
and
ret
xchg
movsl
lods
out
ret
jo
sahf
rclb
loopne
cmpsb
sub
in
rolb
iret
pop
fucomp
mov
cld
add
sbb
aad
stos
out
in
cs
sbb
cmp
and
pop
mov
cmpsb
mov
inc
push
test
pop
push
pop
xchg
imul
pop
jl
push
mov
or
fimull
xor
mov
outsl
into
jnp
jecxz
push
es
jecxz
sbbb
into
imul
sbbl
push
push
popa
mov
mov
insl
leave
inc
out
xor
and
out
repz
lcall
adc
testl
jb
xchg
aad
pop
push
pop
add
pop
mov
pop
test
mov
xor
jo
jge
sub
shl
adc
inc
clc
jle
dec
dec
mov
ficomps
scas
xlat
pop
push
leave
xor
adc
shl
movsb
addb
pop
add
push
ret
ss
jg
roll
imul
or
das
loope
jp
xorb
ds
or
ret
mov
sub
mov
in
mov
jno
xlat
shll
sub
ror
mov
je
mov
cmp
or
mov
stos
test
aaa
xchg
sub
adc
movsl
mov
sub
xchg
fnstsw
popa
sub
dec
sbb
cmpsb
push
mov
xchg
rolb
pushf
cmp
pop
inc
call
mov
bound
sub
das
mov
fucompp
mov
jle
mov
sbb
dec
loopne
aam
cmpsb
and
mov
adc
mov
mov
jae
add
inc
fsubrl
negb
push
pusha
jl
jo
std
fsubs
mov
lahf
xor
sub
mov
out
fimull
mul
stos
push
and
pop
stc
push
and
add
push
loopne
sahf
pop
inc
and
stos
pop
bound
lea
dec
cmp
jmp
or
das
dec
popf
jp
dec
pop
dec
inc
scas
test
call
clc
mov
lea
mov
sub
cli
push
jl
dec
cmp
xchg
daa
into
out
xlat
test
ret
out
fs
pop
adc
scas
inc
sarb
lea
sbb
mov
insl
loope
es
sub
and
loopne
mov
or
xor
adc
jl
subb
dec
addb
push
movsb
subl
jl
inc
dec
mov
push
orl
jbe
xor
mov
mov
xadd
test
jl
ret
mov
sbb
je
loop
mov
dec
inc
aad
std
movsb
xchg
fsubs
xor
lock
sti
shlb
loop
lcall
pop
ds
lahf
aam
inc
mov
out
jnp
idivl
pcmpeqb
mov
insb
mov
adc
bswap
shlb
ret
test
sub
adc
insl
mov
loope
out
mov
sub
lahf
pop
add
ficoml
push
jno
inc
add
incb
dec
mov
mov
or
movsl
in
icebp
inc
inc
cmp
divb
pop
sub
cltd
jno
rcrb
mov
lock
lret
lea
adc
lret
pop
rcrb
jge
ds
cmp
add
xor
in
jo
fcomi
sbb
mov
fcomps
test
mov
test
stos
repnz
popl
cld
mov
fcmovnu
pop
pop
mov
clc
into
adc
leave
inc
clc
enter
add
mov
shlb
clc
and
xchg
cmp
icebp
jmp
xlat
jne
in
es
pop
jno
loopne
icebp
mov
push
out
scas
jge,pt
pop
in
mov
cmc
sbb
xchg
cmp
jb
lock
repnz
lret
ret
sbb
xlat
loope
loopne
dec
rorb
sub
adc
and
aad
mov
mov
in
lret
jb
mov
dec
pop
dec
sub
xchg
shr
shll
mov
cmp
xchg
jno
fistpl
or
push
push
mov
sahf
loope
jecxz
add
xor
and
add
add
sub
enter
fidivl
sarb
push
loopne
sub
cmp
xchg
clc
cmc
sub
popa
adc
cmp
clc
add
cld
je
xchg
jo
push
pop
dec
mov
adc
inc
insb
fistl
cmp
push
cmp
ljmp
fucomi
jecxz
pop
divb
fs
sbb
nop
sbb
inc
mov
add
sarb
in
cmp
jno
push
xchg
jae
pushf
imul
pop
fwait
rorl
and
jmp
jo
mov
push
lock
insb
mov
cmp
out
and
pusha
xor
mov
and
ror
adc
push
pop
pop
js
sarb
mov
xor
xor
jne
hlt
cmp
mov
fs
jecxz
jnp
fbld
xor
hlt
inc
std
cli
push
mov
mov
fstp
fdivrs
ret
pop
je
out
ret
add
push
mov
inc
sbb
adc
loop
adc
popa
mov
addr16
mov
sub
rorb
ss
add
aam
jmp
mov
test
lods
cmp
inc
test
dec
sbb
cmpsb
fidivl
pop
nop
or
jp
aas
lods
loop
pushf
sbb
jb
mov
insb
pop
pop
cmp
jnp
mov
push
icebp
xor
and
push
insl
fimuls
sarb
cli
in
or
dec
outsb
jg
sbb
hlt
push
stc
js
lcall
xchg
cmp
cmp
addl
sbb
adc
hlt
add
rorl
dec
xor
mov
clc
mov
icebp
rolb
clc
icebp
mov
ljmp
or
push
scas
dec
cmp
mov
test
iret
das
fimuls
add
aam
lock
pop
mov
adc
sti
in
dec
cmp
push
movsl
pop
mov
in
add
xchg
sbb
adc
outsb
sbb
pop
das
push
cmpsb
push
fsubl
add
sbb
lret
jle
pop
lahf
mov
es
cltd
cmpsl
jo
loopne
lea
sahf
mov
adc
jo
inc
dec
mov
loopne
mov
and
lret
sahf
iret
es
lea
adc
jl
pop
pop
test
or
jb
adc
sbb
cmpb
mov
cmp
jmp
popl
ljmp
sub
jo
add
pushf
push
daa
cmp
insl
std
jo
lcall
xchg
cmpsl
ja
sbb
pop
xlat
mov
mov
test
add
jle
or
mov
out
mov
dec
loop
les
idiv
adc
mov
jae
shl
out
dec
xchg
in
mov
movsb
inc
jl
ljmp
push
loope
push
and
inc
or
sbb
pop
sub
adc
jl
cmc
xor
scas
cmpsl
pushf
sti
in
pop
push
xchg
rolb
bound
mov
insb
aas
mov
pop
rolb
fwait
cmpsb
adc
insb
add
mov
sbb
out
mov
lds
inc
lret
push
js
push
mov
out
jnp
outsb
fistpll
jge
ds
cmp
in
ret
bound
add
push
outsb
add
cs
loopne
aam
jg
xchg
scas
pop
cmp
pop
push
test
out
inc
neg
cmp
js
mov
xor
stos
add
dec
std
adc
mov
sbb
sbb
push
xchg
ficomps
mov
addb
into
mov
faddp
inc
add
or
add
fdivs
faddp
pop
add
jge
aas
dec
inc
add
or
xchg
icebp
rcll
mov
cmpsb
arpl
or
inc
pop
cmp
jle
xchg
orb
adc
sub
cmp
pop
scas
inc
imul
jecxz
jno
fwait
mov
lret
or
push
sbb
in
xchg
mov
add
stos
mov
xlat
mov
mul
shl
subl
dec
or
push
sub
fmuls
mov
in
mov
jge
js
es
je
pusha
push
adc
cli
cli
in
cld
movsl
lds
std
jo
nop
jbe
adc
mov
push
mov
mov
add
inc
inc
fadds
and
lock
jecxz
fcomp
je
hlt
ret
sti
popf
jp
pop
jbe
sahf
hlt
cmpsb
push
add
ds
hlt
lock
dec
nop
push
arpl
sarb
dec
pusha
movsb
push
bound
xchg
lcall
add
mov
jg
add
add
and
lods
mov
aad
loop
dec
loopne
shlb
call
ljmp
inc
test
mov
rcl
xchg
pop
dec
scas
inc
cli
xchg
les
rol
shl
loopne
ret
clc
lods
mov
loop
sbb
bnd
mov
sbb
icebp
or
test
lret
adc
dec
adc
cmp
cli
cmpsl
lds
arpl
shr
inc
push
shlb
arpl
popf
fwait
sbb
push
inc
cmc
loopne
inc
or
push
xor
cli
jo
push
push
dec
rolb
fmuls
inc
mov
xchg
push
rolb
dec
jo
pop
dec
mov
popa
repnz
data16
xchg
scas
das
jo
xor
jg
mov
jge
insb
and
repz
mov
cmp
mov
data16
xchg
sub
or
xchg
jmp
bound
fsubs
add
cmc
fcoml
push
push
movsb
sbb
pop
or
orb
mov
lret
rcrb
roll
aad
fldcw
pushf
out
shl
pop
mov
xchg
inc
cmp
xchg
test
xor
pusha
loop
jnp
insb
aaa
xchg
or
outsb
jne
cmp
xchg
mov
divl
orb
mov
sub
sbbl
cmp
add
pop
ficoms
push
sbb
mov
mov
jo
mov
fwait
js
addl
scas
daa
loope
push
or
and
or
pop
in
movsl
out
arpl
sahf
sbb
in
push
inc
in
shlb
push
das
dec
cmp
adc
push
mov
fdivp
repz
mov
stos
cmp
mov
lods
jns
rsqrtps
cmp
out
dec
imul
mov
jmp
add
jo
push
pop
fildl
loopne
pop
sahf
fmuls
movsb
pop
ret
shlb
jge
je
adc
cmp
mov
push
push
insb
insb
jl
jl
gs
jno
out
add
ss
jne
addb
adc
lods
lds
sub
inc
btl
jecxz
dec
scas
ljmp
push
inc
scas
add
and
add
jmp
push
xor
sti
sub
jg
and
add
push
or
push
xchg
leave
cmpb
add
test
ss
mov
push
jge
icebp
lock
push
into
ret
cmc
xor
je
test
jle
fucomi
sbb
stc
hlt
es
or
adcl
sub
shl
loope
mov
mov
divb
hlt
adcb
push
jbe
sbb
sub
ffreep
xchg
sar
cmc
dec
xchg
or
lock
jle
or
mov
js
outsb
mov
rcl
push
mov
jnp
iret
xchg
mov
adc
scas
pop
shl
dec
add
push
add
mov
lods
add
inc
pop
sbbl
jge
outsl
xchg
sub
dec
sub
test
lock
cmp
movl
or
scas
adc
scas
jl
push
pop
loop
imul
adc
into
inc
push
clc
mov
shlb
adc
in
je
fdivrp
or
imul
in
cmc
jecxz
sub
jb
enter
cmp
xor
cld
and
pop
loope
out
add
andl
xor
dec
pop
mov
das
in
shlb
jle
out
outsl
add
lock
adc
icebp
loopne
jl
push
and
xor
clc
mov
rclb
jle
ljmp
orb
cli
push
rclb
in
or
push
or
clc
cwtl
add
mov
sub
sbb
out
mov
pop
jo
dec
xor
aad
cmp
test
mov
into
fdivrs
pop
inc
mov
dec
in
mov
scas
rorb
ljmp
mov
and
jl
pop
xchg
repz
adc
mov
mov
inc
enter
into
xor
fsub
loopne
lret
pusha
cmp
loopne
mov
negl
sarl
sub
push
jnp
filds
sahf
pop
mov
xchg
int
cmc
es
cmc
dec
mov
jl
icebp
adc
pop
adc
pusha
add
lret
loopne
movhps
push
mov
add
call
cmp
mov
jl
mov
clc
jbe
sti
in
jecxz
cmp
cmp
je
call
push
pop
jge
stos
xchg
out
and
movsb
mov
pop
or
xchg
xor
mov
xchg
add
push
in
xor
and
cwtl
cwtl
mov
xor
shl
inc
mov
cli
loope
add
pop
rorb
jmp
jnp
je
fists
push
jmp
rclb
insb
out
inc
call
jl
dec
test
sbb
fldl
out
jle
push
test
sub
add
pop
mov
lds
cmp
mov
mov
mov
and
cli
mov
inc
fisubl
aam
push
ds
fwait
xor
rolb
jp
addr16
popl
les
adc
dec
cli
pop
pop
pop
cmp
cmp
ds
cmp
jns
shrb
cli
xor
dec
mov
sub
icebp
loop
outsb
push
es
sub
jl
inc
adc
sbb
sbb
cmp
rorl
scas
pop
fists
mov
pop
icebp
scas
inc
push
mov
push
std
hlt
lock
sti
jle
js
pop
cmp
ljmp
into
in
leave
adc
pop
sbb
imul
pop
adc
inc
loop
sub
cmp
add
sti
push
mov
out
mov
cli
mov
out
insb
sbb
and
loop
dec
loope
adc
xchg
in
movsl
out
xchg
push
sub
iret
shl
sbb
xor
roll
jo
test
in
pop
aas
jl
ja
dec
fisubrl
sbb
mov
cmpb
or
shll
arpl
push
mov
push
loope
sub
pop
mov
subl
inc
pop
insb
or
lods
lods
aad
mov
and
imul
push
pop
or
push
xor
push
loope
mov
xor
icebp
adc
loopne
mov
lahf
out
or
push
mov
stos
xor
push
repnz
js
loope
lret
or
popf
push
clc
xchg
pop
dec
xor
cld
ror
dec
push
insb
sbb
jecxz
xchg
clc
jo
test
add
les
fst
es
dec
xor
add
add
imul
fwait
clc
inc
aad
repnz
cmp
pop
or
pop
push
test
pop
fistpll
mov
test
jmp
cmp
insl
mov
bound
fsub
test
xor
push
jmp
mov
pop
mov
sub
push
clc
xor
mov
inc
clc
and
adc
pop
mov
adcl
dec
jge
push
xor
mov
cltd
imul
cwtl
in
cmp
ljmp
cmp
mov
js
pop
jle
sbb
in
cmpsb
jle
pusha
sub
bound
loop
add
jp
pushf
xorb
and
lcall
push
and
or
loop
into
mov
jge
cld
mov
xchg
and
xor
std
jp
cli
push
insl
addb
jmp
xor
sbb
jl
es
mov
scas
and
mov
mov
push
mov
pusha
dec
daa
adc
das
out
and
xchg
frstor
je
scas
mov
and
or
ficoms
lods
and
hlt
mov
test
std
inc
psubusb
fdivs
dec
push
pushf
cli
mov
mov
negb
scas
or
jo
jnp
add
sub
or
xchg
test
pop
test
jnp
add
and
cmp
sub
lcall
fbld
cmc
dec
add
mov
loop
jne
jb
xorb
rol
clc
outsb
test
stc
mov
jl
xchg
js
push
inc
mov
data16
adc
add
fxch
pop
jp
or
ret
xchg
cli
cmc
jmp
mov
sbb
or
call
or
or
inc
and
ret
or
xchg
aam
jbe
pop
sbb
dec
loop
sub
inc
or
pop
ficompl
or
repnz
out
enter
scas
dec
push
inc
mov
test
sub
sbb
adc
mov
nopl
cmp
xor
fst
xchg
hlt
jmp
push
mov
sti
clc
jmp
clc
fidivrs
dec
sbb
icebp
jge
nop
sub
inc
sbb
hlt
sbb
mov
dec
fisubl
insb
inc
pop
fiaddl
sti
pop
add
cltd
cmpb
adc
adc
in
das
push
bound
dec
push
push
cli
cld
dec
cli
hlt
cmp
lods
mov
sub
adcl
pop
ret
lds
outsb
pusha
jo
test
adc
push
orl
stos
mov
loopw
inc
adc
testl
cs
or
xor
cmpsl
jle
clc
push
push
xchg
inc
ss
into
pop
mov
mov
jge
clc
ljmp
js
dec
ret
int3
in
mov
sub
add
pop
mov
jl
repnz
fists
or
add
stos
into
pushf
push
loopne
inc
jle
or
les
aad
lods
dec
cmp
rcrl
jecxz
je
popa
jo
xor
xchg
leave
xchg
mov
inc
ljmp
lds
movsl
cmp
adc
enter
inc
jge
xchg
add
idivb
mov
ds
mov
insb
mov
push
subb
push
cmp
adc
jp
fmul
clc
inc
fbstp
jbe
mov
pop
mov
sarb
pop
pop
mov
negb
and
mov
shrb
rolb
imul
mov
in
mov
cltd
decb
cmp
push
adc
sahf
xor
xchg
outsl
or
ja
lock
xchg
dec
mov
adcb
stos
loope
js
mov
mov
sbb
adcb
mov
mov
push
loopne
inc
pop
xchg
push
mov
xorl
inc
sbb
lahf
and
jno
loop
dec
jg
xor
xchg
mov
jle
test
cmp
rorb
mov
push
iret
mov
es
xchg
lods
test
test
inc
adc
sbb
in
pushf
enter
and
fists
pop
jno
fs
dec
fldcw
pop
int3
clc
mov
jl
pop
addl
pop
mov
loop
mov
sbb
adc
sbb
cmp
outsb
fists
data16
mull
mov
sbb
shl
or
clc
jmp
lret
loop
and
pop
aaa
xlat
cmp
movsb
push
fiadds
lahf
test
shll
and
push
lahf
inc
rolb
movsb
stos
or
xchg
lock
stos
mov
mov
adc
ljmp
mov
or
imull
add
outsl
mov
add
ror
lods
mov
sub
push
clc
cli
jecxz
pushf
std
or
push
shl
idivl
and
xor
jmp
mov
and
or
and
and
mov
adc
or
and
addl
sbb
testl
xor
fdivrs
mov
nop
lea
lock
mov
cmp
jecxz
cmp
lret
testl
xor
lahf
ret
sub
pop
inc
out
rorb
mov
loop
int3
pop
pop
push
cld
fadds
dec
ss
mov
das
push
add
xor
jl
mov
adc
testl
lods
ret
mov
rorl
loop
mov
mov
jle
fstpl
pop
pop
and
push
inc
in
xchg
imul
inc
popfw
jle
in
ds
mov
jne
ljmp
xchg
jecxz
jl,pt
jg
inc
cs
cwtl
pop
jno
xchg
xchg
insl
mov
jp
movsl
mov
push
lock
push
jecxz
data16
xchg
pushf
adc
jmp
shlb
loope
and
sar
xor
je
inc
repnz
push
icebp
jge
hlt
addl
loope
jecxz
xchg
dec
ds
dec
jb
mov
xor
push
shll
ret
mov
mov
mov
jge
lock
pushf
mov
pop
nop
rolb
iret
xlat
sub
add
loopne
push
mov
es
pusha
je
pop
inc
sub
sahf
loopne
loop
push
mov
pop
out
das
fadd
cmp
rcl
and
cltd
movsb
adc
out
daa
icebp
lcall
pop
jmp
loopne
or
push
xchg
fistps
jmp
ret
rolb
jno
stos
shlb
pushf
mov
lcall
cmc
adc
or
jnp
adc
inc
jecxz
test
movsb
repz
fwait
hlt
daa
loopne
aas
cwtl
pop
mov
cmp
icebp
mov
inc
push
mov
sub
mov
or
xor
jge
js
sub
push
lahf
add
icebp
rorl
push
pop
dec
mov
add
lock
mov
pop
cmp
ds
dec
pop
out
inc
les
push
clc
lret
ret
pop
mov
roll
push
xor
add
or
imul
rclb
jecxz
les
add
test
cli
cli
lods
dec
shl
mov
imul
into
ljmp
dec
clc
in
and
and
or
cmp
cmp
mov
lock
pusha
pop
data16
lret
stc
cmp
imul
or
pop
sub
insl
cmp
pop
lock
and
push
mov
lock
test
mov
cmpsb
into
dec
cmpb
call
ljmp
xchg
les
push
movsl
fdivs
aam
aas
xor
ret
xchg
sbb
add
and
push
lahf
mov
hlt
je
xchg
std
mov
dec
sbb
loopne
lods
movsb
lcall
sahf
mov
scas
or
xchg
ret
iret
dec
or
push
ja
jmp
sbb
jl
inc
sahf
inc
dec
inc
sub
cmp
verr
push
pop
mov
jge
mov
movb
out
jnp
or
dec
enter
ljmp
shl
mov
ds
ja
out
testb
jl
lahf
xor
xor
fiadds
cmp
xorb
sbb
leave
ret
setb
xchg
mov
js
dec
scas
mov
push
jmp
pop
sub
out
inc
clc
aam
mov
inc
or
lock
mov
pop
es
les
push
mov
sahf
mov
and
sub
setle
cli
xor
jnp
cmpsl
push
push
lahf
and
das
mov
test
mov
jecxz
mov
mov
lock
loope
inc
nop
fsts
fidivrs
or
jnp
and
dec
fists
xchg
mov
jle
movsl
test
jo
inc
aas
orb
pop
ss
and
pop
mov
or
mov
pushf
mov
data16
jmp
call
mov
cs
jge
pop
pop
inc
nop
nop
cmp
dec
mov
mov
xor
push
add
insl
jl
dec
inc
aam
scas
and
jne
arpl
pop
and
movsb
xor
cmc
fs
xlat
jle
aas
outsb
lds
scas
adc
ficoms
or
sbb
push
cld
push
les
inc
jmp
dec
std
icebp
loope
dec
mov
push
sbb
insl
mov
push
mov
lahf
js
sub
jge
or
jne
jecxz
stos
scas
rorl
xor
fistpll
pop
lcall
lret
jmp
sub
out
cwtl
sbb
clc
jecxz
setp
mov
push
ds
jmp
adc
in
ret
mov
inc
pop
jle
insl
lods
pushf
dec
mov
mov
lea
jl
pop
shlb
out
sbb
cmp
mov
cld
cli
out
test
stos
loope
xchg
push
adc
scas
xchg
cmovbe
mov
movaps
stos
mov
xchg
fwait
pop
push
inc
stos
pop
iret
ss
repz
sbb
test
push
lret
test
aas
fs
aam
push
fadds
pop
sbb
push
inc
js
ret
out
pop
sbb
mov
cld
or
rcrl
inc
psadbw
cmp
jp
cmc
dec
cld
js
mov
stc
das
mov
pop
fbstp
mov
test
aad
popa
jge
push
jecxz
ja
dec
in
push
cld
hlt
adc
scas
loop
or
dec
dec
lock
pop
mov
data16
loop
fisubrs
insl
sbb
call
push
mov
push
and
pop
dec
pop
pop
push
push
movsl
mov
jo
js
pmaddwd
scas
inc
mov
pushf
inc
stos
mov
lret
add
cmp
xchg
dec
or
mov
test
call
push
mov
cmc
mov
cld
sahf
sub
js
xlat
xchg
fadd
jle
js
sbb
fldcw
mov
lock
and
insb
int
in
gs
dec
add
and
pop
ljmp
cli
and
jnp
xchg
out
xor
fisubs
loopne
movsb
push
add
xchg
pop
fcmove
push
push
cmp
cmc
test
xchg
repz
sub
mov
jp
bound
push
test
daa
cmp
jmp
cs
js
mov
add
les
inc
cmp
gs
lret
mov
pop
lcall
sbb
sti
mov
push
movsl
dec
roll
mov
das
mov
in
sub
pop
out
rcrl
loop
xchg
cmp
add
push
mov
sarl
and
testl
clc
jecxz
insb
pop
xchg
lods
jge
adc
dec
ss
sub
mov
dec
pop
pop
and
dec
arpl
scas
iret
shlb
lods
lock
out
pop
icebp
xlat
clc
adc
mov
lcall
or
jecxz
sub
xor
mov
nopl
mov
xchg
push
ljmp
mov
sbb
or
mov
cld
push
enter
stc
repz
push
or
jo
mov
out
push
filds
sbb
filds
mov
push
dec
fcoml
mov
xchg
add
stos
or
fcmovbe
cmp
pop
lods
or
pop
cmpsb
mov
mov
aas
sbb
pusha
icebp
or
adc
loop
add
ret
add
sub
mov
mov
inc
imul
add
lods
dec
in
dec
sbb
shrl
inc
add
int
adcl
sbb
mov
lret
insl
or
aad
aam
jne
jge
dec
bnd
inc
call
out
push
jbe
add
mov
pushf
mov
adcb
orb
add
mov
and
insl
jp
and
inc
add
or
inc
push
nop
mov
and
stos
sbb
lret
cmp
sbb
cmp
cld
jb
sub
enter
add
sbb
into
ficomps
fcom
add
mov
sbbb
add
push
sbb
je
sahf
and
xchg
in
inc
cmp
fidivs
arpl
push
inc
jo
mov
nop
inc
jmp
lds
cmp
shl
cmp
hlt
add
jge
cmc
mov
test
push
mov
sub
ret
mov
add
xchg
lret
jecxz
push
test
loop
nop
xor
dec
js
jae
push
jle
dec
test
call
xor
jmp
aam
in
dec
sub
loopne
jo
sbb
jb
jge
icebp
push
ss
jbe
push
mov
and
mov
dec
fcompl
mov
imulb
sahf
pop
pushf
push
inc
jo
mov
rcll
push
mov
push
or
lods
and
hlt
inc
add
and
dec
jl
js
stos
scas
pop
lods
ret
xor
movsl
mov
lahf
gs
aad
sub
outsl
clc
js
outsl
dec
pop
ds
cmpsb
ja
call
or
sbb
leave
mov
shlb
add
stos
pop
lahf
je
int
lds
das
ret
or
clc
push
shlb
stc
adc
pop
sarb
pop
clc
cwtl
mov
lods
push
push
adc
xchg
jbe
cmp
cmp
aas
mov
mov
sub
arpl
xchg
and
xchg
icebp
pop
mov
dec
inc
pop
xchg
xchg
jo
in
aaa
cwtl
cmpb
adc
ret
outsl
jecxz
subb
cs
mov
and
mull
ret
ds
sub
call
punpcklbw
stc
mov
loope
or
arpl
add
dec
mov
adc
inc
pop
mov
mov
arpl
jl
adc
sub
pop
lahf
push
cmp
sbb
adc
inc
rorb
push
fistpl
bnd
pop
loop
push
mov
cmp
xor
movsb
pop
xchg
and
clc
and
mov
test
out
sti
icebp
sbb
xchg
add
ret
add
ljmp
cmc
mov
cs
cmc
ret
test
jle
mov
add
outsb
cmp
add
sti
jbe
outsb
outsb
outsb
notb
jnp
fisttpll
outsb
outsb
outsb
jp
das
dec
into
push
mov
andl
outsb
inc
sti
push
sub
xchg
jp
bswap
add
les
cmp
cli
cmp
lods
push
loop
rclb
idivl
push
cmp
inc
jg
xor
pop
es
lods
xchg
dec
jle
pop
inc
clc
or
lret
dec
clc
push
gs
sbb
pop
mov
lahf
sub
sbb
adc
fildl
insb
xchg
push
mov
loopne
fistl
or
outsb
dec
cld
xor
xor
popa
sbb
jle
sub
xchg
jno
lcallw
jae
inc
cmc
pop
or
sub
push
lea
es
scas
xor
mov
pop
sarb
push
add
jno
pop
dec
lds
dec
jg
iret
data16
out
ljmp
test
dec
mov
loopne
inc
dec
movsb
outsb
dec
clc
sub
in
test
xor
ljmp
scas
out
adc
cltd
loop
pop
repnz
ret
xor
hlt
pop
les
bound
scas
fisttps
cmp
data16
add
jo
sub
insl
mov
shrl
sti
jb
int
push
lock
nop
cmp
loop
adc
andl
clc
imul
jecxz
addl
cmovp
push
cld
jp
add
adc
push
cmp
aam
repnz
inc
setb
pop
out
das
mov
fidivrl
cld
js
push
movsb
mov
sti
and
cmpsl
mov
fcmovnu
xchg
push
rolb
inc
cmp
xchg
jecxz
xchg
fcomp
lahf
arpl
push
pushf
jl
fcmovnbe
imul
sub
dec
cmp
js
repnz
jp
push
aas
into
pushf
dec
jle
add
xor
out
cmpsl
js
cmp
xor
xchg
cmpb
xor
add
jno
sbb
jl
fcmovnu
mov
xchg
cli
dec
mov
shlb
mov
or
stos
push
xchg
xchg
std
mov
mov
dec
or
sbb
repz
scas
inc
cli
jge
ja
push
int
dec
mov
add
test
mov
xchg
cs
push
sti
add
sti
jecxz
mov
mov
inc
ret
lods
and
ficoml
cmc
add
xor
mov
inc
xor
xchg
std
add
xor
cmp
fs
dec
jg
xchg
icebp
and
push
or
push
xchg
mov
sub
iret
mov
loop
ret
xchg
rolb
cmpsb
stos
pcmpgtb
jo
mov
add
sbb
stos
dec
aam
das
gs
xchg
flds
mov
inc
jb
je
fidivrl
or
jbe
mov
push
cs
outsl
sbb
pavgw
cmp
js
nop
mov
arpl
add
rcll
xchg
test
sub
mov
pop
and
filds
mov
ljmp
cld
push
mov
dec
mov
mov
je
loopne
loop
out
fdivrs
inc
iret
jno
fiadds
dec
aas
mov
scas
and
les
out
lret
jae
lret
sbb
cmpsl
test
ret
mov
das
pop
mov
rolb
cmp
pop
pop
dec
shr
mov
dec
cmp
push
pop
inc
inc
mov
iret
nop
jle
lcall
lea
dec
pop
jo
out
dec
lcall
mov
mov
jge
jne
add
mov
lods
jae
add
push
ds
addl
mov
into
out
rorl
jbe
outsl
cwtl
nop
add
sbb
pop
mov
pop
push
inc
push
scas
loop
pop
and
add
add
xor
sub
sub
mov
and
push
sub
stc
xor
and
adc
mov
inc
sahf
jns
ret
inc
insb
les
cmp
mov
sbb
pop
cmp
cmc
clc
mov
repz
jle
sbb
add
jge
pop
je
pop
inc
jno
fistps
pop
sub
add
push
pop
mov
mov
out
insl
cmpsb
or
nop
mov
push
loope
sti
repnz
mov
out
pop
fsubrp
and
or
sub
inc
js
jo
call
js
subl
int
cs
mov
pop
pushf
loope
mov
and
sbb
pop
pop
outsb
sbb
add
imul
or
les
sti
call
shrb
out
dec
into
movsl
test
clc
lea
mov
stos
pop
or
fists
outsb
hlt
das
lret
lods
movsb
out
clc
sub
jg
or
mov
mov
lret
xchg
addr16
loopne
jb
pushf
mov
push
js
dec
ret
out
mov
cli
es
outsb
divl
cmpb
push
add
pop
loopne
cmpsl
repz
loopne
cmpsb
out
cmpb
cli
adc
mov
push
lret
mov
sub
dec
mov
push
aad
js
inc
pop
push
popf
pop
in
jmp
push
xchg
cmp
pop
cmp
insl
mov
rol
mov
hlt
roll
mov
scas
rolb
or
mov
sbbb
or
shrl
sub
mov
jp
pop
pop
cltd
adcb
js,pt
bound
lods
inc
je
adc
pop
iret
test
stos
out
and
pop
cmpsb
dec
cs
je
inc
fisttps
jo
pushf
sbb
jg
ds
arpl
nop
shlb
mov
inc
pop
xor
cs
inc
push
jg
pushf
and
push
js
xchg
cmp
gs
xchg
lret
sahf
shl
psrlw
aam
icebp
mov
mov
cmc
or
xchg
push
psrad
test
ljmp
iret
push
sbb
xchg
lock
xor
les
mov
jg
pop
jb
mov
push
sub
xchg
daa
adc
xchg
dec
fisttpl
dec
fisttps
scas
jle
lret
inc
jle
mov
fbld
mov
pusha
sahf
sbb
mov
pop
lds
imul
push
stos
mov
lock
xchg
out
fsubs
test
or
jle
popa
sarl
sti
pop
add
cmp
je
adc
std
rcrb
cmp
mov
and
xchg
add
mov
jnp
loopne
nop
scas
cmp
aam
sbb
cltd
dec
js
imul
imull
push
movb
into
jl
and
negl
into
cli
fidivrl
sub
jo
or
shl
and
fidivrl
pop
pop
aam
lret
add
stc
sub
inc
js
sbb
lcall
sahf
push
loopne
das
inc
push
or
xchg
inc
shll
add
push
shl
rorb
xorb
int3
jb
cmpb
icebp
or
inc
jns
sbb
icebp
jecxz
jle
sbb
nop
xor
imul
mov
push
loopne
cmp
xor
push
add
loopne
hlt
ljmp
cmp
hlt
sbb
and
or
cwtl
mov
xchg
xor
mov
pop
dec
jmp
repnz
rcl
lret
xor
mov
repnz
or
pushf
sbb
adc
lds
mov
and
mov
jo
test
pop
das
inc
pop
xchg
orb
mov
loop
lea
popf
into
mov
mov
popa
out
pop
mov
jbe
fimull
loop
fldcw
and
js
fwait
lea
idivl
lahf
cwtl
push
lret
sbb
les
outsl
test
sarb
fbld
mov
jg
xor
vcmpss
cmp
into
and
mov
adc
rorl
mov
mov
sub
mov
out
std
add
out
shr
mov
cmpsl
jne
and
mov
clc
popa
test
mov
sbb
mov
xchg
hlt
gs
int
push
add
dec
pop
mov
jge
andb
adc
scas
mov
push
and
filds
data16
inc
adc
iret
mov
inc
and
pop
xchg
and
add
nop
orb
push
mov
sub
cmpsl
ljmp
jmp
push
hlt
lock
mov
out
pop
daa
mov
test
and
lret
cs
inc
mov
test
xor
mov
lds
sarb
jae
inc
cmp
mov
xchg
jecxz
mov
inc
adc
sbb
xchg
scas
mov
sbb
ret
jl
int
dec
lock
and
sbb
cli
fdivrp
pusha
das
push
ja
ja
mov
fsubp
lods
or
fwait
and
mov
pusha
or
flds
sub
mov
cmp
sbb
push
cltd
and
lahf
ds
fwait
std
mov
mov
inc
les
pop
into
sbb
push
cmp
sbb
stc
out
outsl
or
and
and
movsb
cwtl
jge
nop
mov
jnp
lock
cmp
imul
bound
lock
adc
mov
or
mov
shlb
xchg
inc
lock
pop
shrl
adc
jnp
pop
push
ljmp
call
and
call
push
clc
jmp
jp
xchg
es
ja
and
cltd
mov
pop
pop
or
mov
ret
pop
test
dec
aam
rorb
push
and
cmp
cwtl
daa
xchg
ret
adc
dec
test
test
xchg
subb
add
cmp
jecxz
xor
sub
scas
lods
stos
into
idivb
sub
push
fistps
cmp
bound
mov
lahf
xchg
add
rcrl
call
dec
pop
mov
das
inc
cmpsl
lcall
outsb
ret
inc
dec
jae
sub
add
add
push
subb
pop
lods
push
push
cli
dec
or
jbe
mov
lock
addb
mov
fisttps
ret
imul
mov
adc
adc
movl
pop
bswap
or
aad
and
pop
aad
push
pop
shrb
les
rorb
lret
jb,pn
adc
push
sahf
ret
jae
adc
mov
xor
mov
or
jge
xchg
jns
bound
fs
pop
mov
xchg
pop
inc
sti
dec
pop
and
push
mov
cs
sbb
inc
icebp
ret
sbb
nop
jp
mov
rcr
cmp
dec
daa
push
jnp
rol
hlt
jge
pop
cmp
pop
or
adc
sti
jge
out
jns
pop
mov
adc
cmp
jle
and
mov
add
xchg
fdivs
lock
cld
adc
cmp
lret
push
mov
cmp
cmpsb
out
add
stos
test
in
mov
into
sub
adc
and
xor
ljmp
mov
nop
pop
pop
ljmp
lret
les
cmp
xchg
addr16
and
jl
pop
test
adc
mov
pop
rorb
lock
scas
cwtl
adc
shlb
sahf
mov
push
add
add
fs
push
popf
inc
adc
fisttps
mov
xchg
push
mov
loopne
push
pop
xchg
incl
arpl
pushf
test
subb
mov
lea
and
push
insb
lock
jb
pushf
and
push
sahf
push
mov
pop
add
add
mov
xchg
cmc
outsb
out
movsl
das
jmp
add
enter
icebp
mov
insb
fdivrs
cmp
add
cld
jne
das
mov
lock
movsb
mov
ss
jle
mov
mov
mov
test
decb
outsb
shlb
gs
mov
jmp
or
xor
pop
pop
out
cld
jnp
jmp
mov
add
mov
sub
add
cmp
pop
sub
mov
sbb
jb
fwait
movsl
pop
mov
mov
and
sahf
mov
adc
adc
jle
fs
push
adc
cwtl
out
push
pop
cld
lds
pushf
sub
int3
pop
and
std
adc
ljmp
cmp
push
sbb
mov
dec
out
shll
mov
stos
fisubrl
mov
loopne
pop
and
rclb
xorb
les
and
cli
dec
lock
dec
mov
scas
mov
in
or
push
js
in
xchg
std
ss
iret
mov
gs
push
mov
insb
insl
dec
dec
stos
call
subb
stos
mov
sub
int
outsl
push
xchg
rolb
mov
dec
pop
aad
jp
outsb
xchg
imul
add
mov
mov
xor
jmp
je
xchg
or
inc
dec
pop
dec
arpl
and
push
cmpl
xchg
xchg
xchg
int3
xor
xchg
movsb
rol
das
mov
add
sarl
dec
jecxz
add
hlt
test
add
add
xchg
mov
jo
inc
cli
ficoms
add
pop
xor
je
jg
pop
sahf
pop
dec
ljmp
sbb
mov
subb
rol
sub
mov
sub
loopne
mov
ret
stos
into
xor
dec
mov
push
in
enter
cmp
add
pop
adc
or
xor
lahf
xor
pop
fcmovb
shll
hlt
jl
test
call
clc
jecxz
and
add
push
popa
push
int
jg
loop
aam
xor
pop
or
ret
ficompl
into
leave
lods
imul
sub
mov
jle
xor
test
in
dec
add
lds
aam
sbb
loop
add
rcrl
jl
add
jl
lock
cmp
cmp
in
mov
ds
adcb
sbbb
lcall
or
les
fnstenv
test
push
fbld
out
push
js
dec
imul
daa
mov
xlat
xchg
mov
xor
mov
lods
rcr
ss
out
jl
pop
popa
dec
xchg
insl
repnz
cmp
add
sub
lea
sub
ss
test
in
dec
insl
xor
js,pt
sbb
out
push
clc
pop
add
adc
movsl
pushf
or
imul
es
lock
movsb
xchg
lcall
push
sbb
test
xor
jnp
icebp
arpl
out
push
into
add
je
mov
addr16
inc
scas
push
or
mov
mov
dec
or
cli
in
mov
fcomip
loope
dec
mov
repz
push
inc
xlat
mov
xchg
loopne
call
xchg
push
sbb
jl
sub
int
jb
push
cmp
pop
in
add
push
xchg
aam
pop
inc
mov
fwait
int3
push
loopne
addb
adc
aas
sbb
mov
pop
jl
insb
data16
out
sysexit
or
mov
out
roll
pushf
movb
insb
sub
fisubs
mov
jge
mov
cmp
sbb
xchg
dec
jle
stos
lahf
and
ja
loopne
les
std
clc
or
mov
mov
or
mov
mov
and
xor
sub
and
sub
jle
jo
add
icebp
std
insl
nop
je
sahf
sbb
jbe
xor
sbb
rolb
xchg
push
and
stos
es
xor
push
push
rolb
or
in
adc
cmc
pop
push
xor
arpl
lcall
mov
pop
xor
iret
mov
pop
je
shrl
call
push
into
lahf
hlt
or
loop
arpl
push
add
je
xor
stc
inc
add
scas
pop
mov
push
lods
cmp
hlt
or
mov
cli
add
inc
push
enter
push
and
aas
sub
jecxz
cmpl
ds
inc
cmp
hlt
ret
and
hlt
mov
dec
popf
mov
cld
add
mov
xchg
data16
cmc
jge
pop
bound
adc
ret
std
xor
aas
or
mov
xor
mov
cmp
mov
fisttps
incb
out
push
not
lea
jno
cmp
cwtl
rorb
sbbb
pop
loopne
sbb
adcb
jnp
mov
pop
add
or
popf
or
xor
or
add
sub
ss
icebp
jg
push
sahf
or
std
or
adc
sti
imul
or
loope
push
pushf
data16
cmp
icebp
sbb
sub
movsb
cmpsl
push
shr
or
push
mov
push
cmp
mov
xchg
lret
jle
dec
out
out
pop
jp
add
sub
cwtl
dec
test
jb
xchg
dec
push
shr
push
in
lock
adc
mov
push
jmp
xor
dec
cld
dec
mov
add
xchg
pop
ss
and
adc
pop
call
or
add
cmp
lret
sub
pop
psrad
and
into
jo
push
dec
filds
sarb
popa
pushf
mov
fnstenv
movsl
cmpl
inc
add
pop
scas
addl
ja
jnp
mov
icebp
push
popa
mov
repnz
insb
adc
cmpsb
cmpl
pop
mov
cmp
aas
jl
cmc
pusha
idivb
push
pusha
lods
mov
sahf
jg
push
imulb
inc
pop
mov
imul
std
and
mov
add
push
mov
mov
fldt
push
rcll
dec
out
enter
pop
lods
rorl
ds
lret
mov
pusha
mov
insb
ficoml
inc
mov
pop
sbb
mov
call
mov
cmp
adc
sti
or
ret
mov
roll
nop
push
mov
sahf
cmpsl
sub
push
mov
test
push
lds
cmp
mov
adcb
push
rcrb
mov
mov
adc
inc
rol
pop
stc
int3
insb
xor
jmp
cld
push
push
and
or
jo
inc
loopne
xlat
cmovg
in
push
jae
data16
fucomi
stc
fistl
stos
cmp
dec
cmc
dec
inc
repnz
inc
movsl
mov
int3
cli
xor
repz
repz
aam
pop
xchg
cli
push
ss
es
imul
push
xor
rolb
cli
mov
movsb
pushf
adc
inc
and
aas
dec
sbb
adc
cli
mov
or
cli
cmp
jecxz
jnp
out
call
mov
es
cs
das
adc
mov
push
and
mov
ds
add
ljmp
rclb
negl
shl
push
mov
cld
clc
in
fcom
sub
pop
movsb
lret
pop
jge
icebp
jno
mov
call
inc
xor
pop
outsl
js
mov
pop
xchg
sbb
je
push
loope
dec
mov
mov
nop
insl
adc
ret
mov
mov
or
popl
or
jle
xchg
aam
aad
bound
test
ljmp
add
js
jecxz
pop
scas
aam
or
pop
pop
dec
orb
inc
loopne
cmp
cmpsb
sub
and
nop
ret
data16
sub
inc
mov
test
rorl
lods
xor
loope
dec
and
je
cmc
fldenv
adc
cmpb
pop
push
fbld
xchg
shlb
cmp
arpl
and
jmp
or
hlt
add
pop
stos
movsl
mov
out
jb
mov
out
mov
lret
idivl
adc
inc
mov
xor
lret
add
lcall
loope
xchg
ret
ss
mov
pop
cmp
cmp
cmp
cmp
sub
ljmp
ret
outsl
cmp
int3
jbe
sbb
jmp
adc
dec
ds
add
std
lock
es
jle
sahf
push
push
loopne
lock
aam
mov
icebp
stos
cmp
xor
mov
js
mov
test
shlb
add
into
addb
dec
mov
xchg
es
pop
icebp
cmp
cmp
xor
cld
movsb
test
or
aad
sub
mov
das
cmp
mov
mov
or
mov
inc
or
fisubrs
xor
cltd
dec
cmp
scas
push
loop
mov
jne
into
xchg
sub
loope
ljmp
ja
int3
std
lock
repnz
pop
mov
imul
xor
cmpb
xor
in
and
mov
pop
xchg
and
inc
xor
mov
mov
or
dec
pop
dec
fs
adc
add
fdivl
les
dec
popf
xchg
cmp
ss
sub
lods
mov
xchg
ljmp
push
pop
insb
mov
push
and
lahf
adc
adcl
adc
jmp
test
daa
push
xchg
add
or
loopne
ljmp
xchg
xchg
mov
xchg
hlt
loopne
pusha
inc
adc
pop
xor
or
mov
mov
hlt
jle
push
jo
cld
sub
aam
inc
es
sub
fbld
insl
mov
jle
mov
js
icebp
sbb
sar
jp
mov
lods
push
loope
daa
pop
out
jae
jne
lahf
cmp
cmovo
sbb
ret
pop
add
test
stos
mov
ljmp
cs
loope
shll
xor
and
jle
hlt
cmpsb
fs
out
les
adc
adc
push
dec
fs
lock
mov
ficoms
adc
movsl
dec
sti
xchg
push
mov
orb
loopne
test
or
inc
loop
jle
push
cmpsl
lock
subl
test
dec
jo
fsubrs
clc
shrb
sbb
jge
icebp
cmp
cld
mov
push
mov
out
xchg
mov
mov
xorl
push
adc
adc
pushf
lods
xor
or
jle
pop
push
mov
mov
pop
popa
jo
jns
sbb
dec
mov
popl
addr16
in
sub
int3
sub
andl
inc
and
mov
jnp
shll
xor
sahf
daa
imul
xchg
mov
repz
or
addb
or
add
xchg
hlt
mov
roll
xchg
sub
jnp
mov
loope
call
dec
or
bound
jne
dec
cltd
ljmp
mov
inc
jmp
adc
in
dec
cld
popa
loopne
or
jp
or
push
in
ret
dec
sbb
push
inc
xchg
push
push
ljmp
pop
popa
call
xchg
hlt
inc
mov
cmc
pop
jmp
pop
out
mov
in
sub
push
cmp
adc
cs
testl
inc
pop
movsb
addr16
mov
cld
cmc
jmp
lods
inc
js
or
jno
fs
xor
cltd
jp
andl
loop
mov
mov
mov
aas
cmp
xor
mov
mov
stos
in
jns
ljmp
sub
cmc
sub
test
jle
pop
pop
add
inc
je
sub
sahf
xchg
icebp
mov
xor
enter
inc
out
push
std
adc
testb
pop
xlat
push
mov
in
loop
xchg
jle
add
pop
push
or
pop
pop
pusha
add
pop
sbb
scas
pop
pop
add
or
mov
mov
rolb
div
jae
mov
icebp
ds
inc
add
sbb
lcall
rcr
push
xchg
or
add
out
insb
add
xchg
ds
idivb
xchg
xor
sub
mov
push
and
fscale
nop
xchg
add
mov
adc
add
jle
cmp
jb
ret
imul
xor
ds
clc
push
sbb
push
lods
jecxz
movswl
sti
mov
in
jns
loopne
movsl
imul
pop
ficomps
dec
or
loope
inc
pop
pop
mov
add
sbb
jno
and
fwait
addl
add
loopne
in
cmp
loopne
sahf
xor
mov
cli
mov
imulb
push
sbb
pop
pop
mov
mov
sbb
mov
aaa
sub
mov
jo
ds
popf
and
hlt
movsl
je
xor
lods
les
mov
notl
mov
inc
outsb
pop
add
add
pushf
stos
rorl
xlat
and
ljmp
aam
push
mov
ss
inc
cmpsl
pop
mov
test
lret
std
and
in
fisubrl
mov
sbb
sub
sub
cmc
push
pop
popa
cli
xchg
mov
mov
test
xor
xchg
jns
inc
sub
pop
pushl
jecxz
push
addr16
sbb
and
push
pop
add
ja
inc
mov
xor
loope
xchg
inc
xorb
dec
ljmp
jle
js
push
sbb
popl
lods
cmp
pop
aas
sub
jl
mov
jo
loop
imul
cmp
xchg
fcompl
pop
sub
mov
pop
mov
cli
mov
pop
or
addl
pusha
lock
or
push
jae
dec
outsl
add
aam
push
inc
inc
mov
shll
loopne
sbb
pop
int3
fs
std
add
sbb
xchg
dec
clc
add
inc
dec
es
xor
jecxz
inc
insb
sahf
scas
adc
fistl
add
mov
sbb
pop
inc
fsts
sbb
je
stos
dec
sub
test
pushf
mov
sub
mov
fimull
js
ja
ljmp
in
mov
adc
test
cmp
arpl
xchg
xchg
pop
pop
loopne
mov
inc
inc
ja
jp
and
inc
out
jo
mov
add
cs
dec
dec
cltd
push
orb
xorb
sbb
hlt
shlb
sbb
clc
jle
mov
ficoms
jl
inc
js
je
fnstcw
loopne
insb
popa
test
out
std
repnz
loope
ja
or
shrl
out
test
insb
je
mov
mov
pop
mov
adc
in
stos
sub
out
aam
iret
xchg
mov
lock
clc
xor
dec
sarb
cld
sbbb
push
pop
nop
fidivs
dec
lods
or
pop
pop
push
mov
sahf
les
fdivrs
xchg
test
stos
mov
lret
jp
push
lods
inc
bswap
push
push
sub
clc
adc
icebp
ljmp
cmc
xchg
xchg
pusha
xchg
jmp
push
ljmp
sbb
scas
test
loope
cmp
sub
inc
lea
ret
xor
outsb
pop
sahf
testl
scas
mov
push
pushf
dec
cmp
pop
ret
dec
imul
adc
mov
loope
ret
aam
js
hlt
add
sbb
movsb
outsl
push
fstl
pop
pop
or
scas
stos
push
flds
sub
ljmp
mov
clc
je
sub
stos
ja
andb
or
pop
sub
ret
lcall
cmp
enter
es
insl
sbb
pop
push
mov
icebp
sbb
mov
xchg
fidivs
hlt
ljmp
and
fisubrl
jbe
mov
jmp
mov
ljmp
and
mov
es
ljmp
mov
mov
pop
clc
sub
pop
imul
mov
aas
and
xchg
jmp
cmpsl
pop
mov
test
fs
inc
adcb
push
nop
mov
mov
add
aam
lcall
mov
adc
xchg
and
inc
inc
repnz
call
imul
daa
hlt
add
in
out
push
jb
pop
insl
mov
daa
in
hlt
jl
call
and
mov
mov
sbb
jnp
stos
adc
scas
or
add
mov
jmp
and
les
lods
test
loop
xor
fildll
mul
mov
adc
or
push
jle
inc
cmp
addb
rorl
mov
mov
cmpsl
mov
mov
pusha
mov
test
push
sub
jp
outsb
int3
cld
sub
push
add
lods
push
cli
dec
pop
pop
push
xchg
int
ss
mov
push
cwtl
xchg
jle,pt
clc
dec
add
loopne
lock
sahf
ds
iret
inc
pushf
mov
cmp
insl
add
adc
rol
out
lock
jp
sbb
dec
jmp
jle
cmp
ljmp
lcall
stc
aam
pop
pop
jg
cmp
popf
or
andl
pop
shl
pop
jecxz
fdivs
call
xchg
inc
out
cmpsb
lds
loope
in
popa
ret
lods
inc
call
enter
out
shll
addb
gs
cmp
mov
les
push
mov
mov
dec
clc
cmc
ds
push
fidivrs
stc
pop
loop
xchg
hlt
xor
or
andl
clc
xor
dec
sbb
mov
nopl
arpl
or
icebp
push
std
or
inc
in
bound
imul
lahf
lret
mov
clc
add
loopne
push
mov
mov
xchg
jmp
or
mov
jge,pt
hlt
mov
xlat
inc
or
cmp
daa
cmp
xor
sub
mov
loopne
pusha
jbe
push
cmp
lock
test
mov
std
fisubs
sar
aaa
hlt
dec
out
push
in
mov
lds
rorl
inc
mov
scas
dec
push
addr16
xor
mov
loope
sbb
jle
fimuls
jl
ret
push
pushf
ror
fsubrl
sbbb
pop
hlt
jge
out
ficoml
push
xor
insb
push
sub
enter
pop
rolb
test
cli
inc
data16
repnz
or
fs
sub
jmp
scas
mov
inc
jmp
daa
and
cmp
mov
mov
fcompl
dec
das
pop
mov
fstpl
test
push
sub
and
ret
xchg
int
fmul
andb
loopne
sub
xor
cs
mov
clc
or
jb
rcrl
js
adc
or
nopl
negl
outsw
fidivrl
adc
jecxz
jne
mov
jge
orl
pushf
addr16
or
ljmp
push
mov
js
mov
mov
sahf
and
test
pop
push
jp
shlb
cmc
adc
pop
je
mov
xchg
stc
enter
xor
pop
cmpsb
add
ds
dec
xor
nop
dec
negl
xchg
dec
mov
cltd
adc
xchg
push
mov
je
sbb
mov
pop
xchg
cmpsl
in
jbe
pop
and
push
clc
xor
xor
jp
bound
cmp
fs
cli
je
loop
push
jo
mov
jge
clc
sub
push
test
or
arpl
jnp
in
lret
incl
out
xchg
cli
fidivs
in
ret
popl
push
fistps
hlt
mov
cmc
pusha
jge
or
notl
jge
mov
jg
dec
cltd
cmp
fildll
jo
ror
sbb
popf
jp
pop
ror
inc
lods
addb
pop
clc
cmp
xor
ret
jp
loop
popf
fdiv
xor
jl
cmc
aas
jns
stos
lods
xor
je
push
loop
lea
fmulp
shll
je
adc
shlb
inc
xor
jmp
ljmp
dec
pushf
test
test
es
movsb
xchg
jmp
jb
js
cs
test
xor
add
push
mov
in
pop
test
sbb
cmc
jnp
scas
stos
shlb
cs
movb
jle
jl
xchg
arpl
mov
push
mov
rcr
pop
nop
jne
cmpsl
mov
add
ficomps
xchg
shlb
movsb
fmull
pop
add
pop
mov
add
scas
lcall
jle
adc
dec
mov
call
jp
sub
mov
adc
cmp
in
rolb
sbb
push
xchg
loope
clc
jne
in
pop
xor
pop
mov
scas
mov
ret
add
dec
xor
jmp
xorl
js
ficompl
js
adc
jge
pop
dec
and
jbe
ja
ss
js
ljmp
pop
mov
dec
lcall
psubsb
xlat
mov
cmp
adc
loopne
loop
and
std
lock
fdivs
movsb
test
dec
jge
jmp
and
cmp
or
lock
mov
fsubrs
sub
add
push
jb
pop
fs
clc
cli
add
cmpsb
sbb
addr16
ds
fnstenv
ret
inc
loope
rolb
mov
cwtl
insl
rorb
loope
fsubrp
mov
stos
sti
mov
cmp
sbb
mov
inc
ljmp
xchg
jmp
dec
inc
les
loopne
scas
imul
or
and
mov
or
fimull
es
push
movsl
and
inc
je
pop
push
cmpb
xor
out
pop
orb
jno
imul
mov
je
fdiv
roll
xchg
mov
mov
mov
hlt
mov
mov
sbb
xchg
sub
jp
je
push
loopne
mov
ret
inc
cmp
jle
cltd
icebp
pop
add
les
push
cmp
cs
scas
xchg
push
out
cs
xchg
aad
sub
es
bound
sbb
out
add
cmc
sub
or
in
and
dec
sbb
adc
mov
add
mov
pop
jp
data16
cs
ret
scas
and
movsb
inc
mov
cs
add
out
xor
cmpsl
pop
pandn
mov
mov
mov
out
hlt
sbb
xor
inc
hlt
ja
mov
xlat
add
cmp
inc
imul
sbb
mov
mov
cmc
xlat
and
repz
adc
and
dec
test
jle
mov
dec
sbb
mov
xchg
ljmp
cmpb
and
and
push
xor
ret
mov
add
push
and
and
push
sbb
fbld
dec
mov
imul
pushf
add
mov
jl
sub
test
arpl
js
clc
xor
sbb
dec
jge
mov
jge
ss
pop
sub
addr16
bndstx
pop
mov
sub
add
repnz
adc
sbb
nop
sarl
lock
clc
fmull
es
mov
sub
adc
sbb
pop
cld
mov
jae
mov
lods
shlb
inc
fisubrs
js
mov
push
into
pop
mov
test
cmc
mov
sbb
inc
cmc
bound
mov
pop
es
mov
fisubrl
mov
or
xchg
pop
cwtl
int
cmp
dec
mov
push
inc
cwtl
lret
js
or
cmp
mov
push
scas
and
in
xchg
xchg
rorb
movsb
or
mov
fistpl
push
jl
sub
push
jb
add
jno
mov
mov
cs
mov
insb
pushf
dec
cmpsl
das
mov
rcrb
aas
ds
mov
call
loope
dec
push
cs
mov
jo
push
dec
nop
mov
dec
push
mov
lahf
xchg
aas
mov
dec
jne
test
push
mov
push
dec
xlat
mull
xchg
testb
jno
hlt
lret
jg
fiadds
sbb
test
icebp
call
or
inc
fiadds
aas
sub
dec
push
mov
sbb
cmp
pop
sub
icebp
xchg
xlat
mov
mov
push
cmpl
divl
data16
sahf
ret
pop
mov
pop
adc
inc
imul
cmpb
dec
add
bound
mov
lea
jp
and
push
push
fimuls
aas
and
loop
push
sbbb
nop
xor
mov
pop
scas
adc
cld
bound
daa
scas
dec
jno
ja
test
mov
sbb
mov
jp
loop
lods
stos
insl
mov
fs
add
loop
adc
jmp
inc
cli
mov
loop
mov
test
and
mov
cmp
inc
gs
fsubs
sahf
push
cmpsl
nopl
dec
lret
data16
push
mov
push
movsb
ds
dec
dec
cli
add
popa
repnz
movsb
out
mov
fdivrl
mov
repz
nop
or
or
setl
js
jmp
iret
test
jmp
xchg
mov
aad
mul
xor
adcb
cmp
jno
add
stc
or
push
cmp
sub
mov
movsb
adcl
cmp
xor
ret
js
in
clc
lock
cmp
dec
xchg
lock
xor
out
add
sti
loop
leave
insb
mov
fstl
not
sub
data16
aas
mov
cs
clc
jnp
cltd
pushf
test
ret
xor
orb
jle
clc
xor
outsl
or
pushf
jo
cmp
dec
fcompl
loop
clc
dec
push
sbb
xchg
cmpsb
jle
jb
xchg
addb
add
sbb
push
ret
or
adc
outsb
sbb
mov
fisubrs
lods
icebp
std
pushaw
adcb
js
or
scas
sub
add
mov
daa
movsb
imull
xor
mov
data16
mov
pushf
idivb
add
or
sbb
in
mul
mov
jbe
jne
push
fidivrl
pop
sub
std
pop
adc
xchg
sahf
or
sub
xchg
add
pop
test
inc
or
stos
sbb
arpl
push
cmp
pop
mov
mov
loope
aas
xchg
inc
jecxz
std
cs
in
loop
aas
cmp
inc
xchg
xchg
subb
daa
subl
jmp
adcb
iret
xchg
wrmsr
mov
aas
sub
xchg
je
lcall
out
rol
pop
xor
aam
dec
xor
aam
xor
jecxz
imul
stos
mov
subps
mov
cmp
stos
sbb
sub
mov
mov
repnz
cmp
add
repnz
pop
nop
test
cli
js
jl
enter
mov
dec
aas
pop
push
js
subb
push
dec
pop
js
and
add
movsb
xchg
icebp
test
faddp
daa
icebp
fdivl
out
inc
jmp
cmpl
or
in
das
mov
cmc
lock
mov
adc
pop
test
pop
out
insb
push
jge
ljmp
sub
add
push
cmpl
rcl
xchg
mov
xchg
pop
testb
mov
rol
nop
pop
mov
jl
fucomip
es
inc
dec
pop
lds
push
andb
cmpsl
testl
mov
or
inc
pushf
sub
ljmp
cmp
clc
mov
mov
dec
dec
fbld
jbe
ret
andl
das
mov
adc
ljmp
inc
js
shl
add
pusha
les
js
aaa
adcb
sbb
pop
lods
mov
add
cld
pop
popw
ret
cmp
ret
inc
mov
and
cmpsb
mov
fsubr
lock
stos
xor
mov
test
aas
lea
test
jg
cli
movsb
pop
add
mov
mov
jmp
push
arpl
pusha
xchg
sbb
dec
dec
unpcklps
push
imul
xchg
mov
lods
insb
in
pop
xchg
fidivrl
fisubrl
cmp
inc
inc
pop
movsl
in
add
jle
adc
mov
mov
mov
add
xchg
scas
lods
ret
xlat
xor
and
je
cmp
ret
aam
mov
mov
xor
push
inc
add
pop
jl
add
stc
cmp
lods
lcall
les
dec
loop
fwait
mov
pop
in
and
enter
out
dec
cld
xorb
jb
shlb
das
mov
xor
mov
xor
and
xor
pop
lahf
ds
cmpsb
lret
sbb
pop
fisttpll
in
js
leave
test
cmp
adc
fsub
dec
movsl
dec
out
adc
push
sbb
cmp
inc
mov
cmp
scas
lods
pop
jle
xchg
frstor
lret
push
jecxz
push
in
xchg
sahf
data16
jnp
pop
cmpsl
adc
scas
pop
xchg
push
and
pop
inc
outsb
push
and
dec
xchg
pop
mov
adc
adcl
xor
jbe
int
lock
loop
sub
iret
push
and
jge
add
pop
jbe
in
xchg
and
cld
pop
pop
ficompl
cmpsb
repnz
sub
roll
fs
adc
test
jecxz
roll
push
adc
scas
dec
clc
sbb
sbb
xchg
ret
mov
stos
adc
mov
rorl
xchg
das
xchg
push
mov
xchg
pop
pop
sbb
sarb
mov
aad
les
movsb
mov
pop
mov
fcomi
push
jae,pt
loop
or
add
cmp
push
push
jp
xlat
push
out
ja
jp
fs
fwait
leave
xchg
sub
sub
testb
sub
sbb
cwtl
call
mov
xchg
inc
dec
jno
ds
fists
loop
mov
les
out
sbbl
jb
js
fs
decb
fistpl
adc
sub
dec
insl
data16
sbb
xchg
mov
mov
icebp
lret
movsb
inc
dec
in
xor
xchg
enter
push
stos
cmp
sbb
push
imul
stos
cwtl
pop
fs
inc
pop
loop
add
hlt
orb
cpuid
leave
sbb
add
adc
cmp
mov
ds
fdivr
jno
inc
les
mov
mov
jge
outsb
ret
ret
and
popf
lock
pop
fdivrl
pop
out
dec
sti
insb
outsb
scas
jmp
sahf
mov
push
fisttpl
out
out
imul
jo
and
js
adc
cmp
xchg
je
daa
xchg
jnp
inc
in
add
add
sbb
lock
hlt
mov
adc
sahf
mov
mov
push
jmp
in
or
rolb
outsb
in
xchg
mov
cmp
pop
std
into
int3
dec
lea
pop
jg
pop
cld
mov
add
and
dec
and
lock
in
or
or
jg
mov
ss
sub
push
adc
mov
mov
inc
movsb
xor
push
ss
aas
ds
mov
xor
xchg
lds
mov
pop
xchg
fistps
jle
adc
jno
loop
pop
xor
insb
rolb
loopne
xabort
or
mov
sbb
fistps
arpl
sahf
enter
cmp
pop
push
and
dec
inc
mov
xchg
push
call
dec
addb
fimuls
mov
js
or
push
mov
div
cmp
in
lods
adc
push
movsb
xchg
loop
pop
movsb
cld
enter
mov
outsb
lret
pop
test
hlt
popa
mov
pusha
aaa
ds
ds
add
shl
mov
mov
adc
dec
mov
in
test
bound
dec
cli
xor
lods
adc
pop
divps
cld
push
test
loop
xchg
adc
xchg
insl
les
pop
mov
push
icebp
call
jbe
nop
adc
aas
es
mov
xchg
aam
clc
mov
ret
sbb
psllw
xor
in
jp
hlt
inc
jmp
sub
scas
int
jbe
jg
dec
sub
xor
filds
and
mov
inc
dec
dec
in
sub
stos
sarb
filds
and
aad
in
push
movl
les
bound
rcr
xor
lods
xchg
icebp
outsb
popf
mov
adcb
dec
test
rol
or
loope
ds
fisttps
jg
mov
and
ficompl
cmp
mov
cs
insb
jge
sbb
sbb
ret
jge
icebp
inc
rcll
adc
lock
ret
mov
pop
es
sbb
xor
adc
cmc
mov
add
aad
mov
stos
pop
jl
sbb
rcrb
jo
mull
mov
iret
hlt
cmpb
mov
cmc
sbb
xchg
call
mov
push
enter
lahf
xorb
call
pop
out
adc
inc
sbb
cs
pop
inc
pop
mov
cmp
int3
mov
ret
scas
les
inc
adc
cs
clc
cmc
loope
js
push
mov
mov
pop
xorl
push
mov
push
sahf
pop
fisttpl
aaa
loope
jle
lock
ljmp
pop
xchg
add
and
andb
adc
sub
cs
mov
and
stos
out
add
inc
sbb
cmp
mov
aaa
and
jmp
lahf
or
punpckldq
outsl
jmp
xor
cmp
call
cmp
insb
adc
loope
or
and
pop
ss
gs
and
mov
scas
pop
ljmp
repnz
lahf
dec
insb
lret
aam
test
add
lods
pop
push
mov
mov
es
ret
sti
nop
xor
pop
ficoml
adc
jl
enter
jbe
push
pop
add
cwtl
pop
cli
insl
bound
das
add
je
jp
and
adc
dec
fs
test
sti
jle
repnz
test
mov
lahf
scas
pminsw
add
fbld
addl
mov
sub
mov
shr
imul
scas
testl
xorb
dec
mov
xor
shl
stos
nop
and
and
jl
sbb
xor
stos
je
mov
push
loope
fisubs
imul
mov
lret
jp
aas
into
push
andl
clc
ds
test
pop
adc
or
cmc
test
inc
cs
mov
xor
nop
ds
mov
shlb
dec
lods
sahf
mov
or
aas
test
arpl
daa
clc
imulb
jno
push
sbb
call
repnz
testl
pop
push
jl
icebp
mov
cld
subl
mov
lahf
xor
jb
pop
inc
aam
nop
fistpll
xchg
fmulp
mov
sbb
pop
cli
mov
jo
fwait
loop
sub
jle
pop
mov
bound
in
in
pop
jg
lods
add
mov
lock
pop
fcomps
aas
fistpl
mov
pop
jp
cmpsb
mov
sbb
push
dec
mov
push
lock
adc
pop
cmp
jae
dec
pop
sbb
push
loopne
sahf
dec
or
cld
ljmp
sub
add
jle,pn
add
jge
xchg
fcmovbe
and
inc
adc
push
pop
rcrb
pushf
push
pop
imul
or
sub
mov
pop
pop
inc
sbb
xor
hlt
hlt
insl
jmp
jecxz
in
push
cmpl
sub
shrb
mov
es
mov
lock
test
sub
sbb
inc
jge
mov
xor
inc
es
mov
pop
ret
jmp
pop
lods
xlat
cmp
jne
call
pop
dec
pop
cmp
lahf
movsl
and
pop
mov
out
aas
mov
addr16
pop
inc
pop
cmp
les
sub
addr16
xor
jbe
sub
mov
pop
cwtl
adc
or
outsb
pop
pop
or
add
sbb
jno
out
sbb
and
orb
hlt
loope
aam
adcl
scas
mov
jge
roll
jl
aaa
nop
orl
mov
sbb
movsb
jle
mov
push
out
clc
das
in
scas
rol
fsubrs
gs
addl
pop
xor
fs
lods
int3
mov
aad
leave
dec
pop
or
pop
subl
cmp
add
jno
call
lds
in
js
jge
scas
les
js
mov
jnp
add
mov
fwait
xor
sarb
hlt
clc
inc
loope
mov
loopne
fs
fisttps
rclb
scas
xlat
ficoms
loopne
rclb
mov
push
cmp
and
cli
nop
mov
rclb
lods
popl
pop
push
pop
pop
or
jmp
in
mov
pop
sub
jle
xchg
aam
pop
fucomp
lcall
xor
xchg
mov
dec
stc
ret
xchg
mov
hlt
roll
into
int
mov
push
or
pop
cmp
test
subb
mov
jge
popa
loope
lds
hlt
dec
xchg
pop
mov
ds
mov
adc
ficoms
sub
cmpsl
shll
ret
pusha
push
fiaddl
dec
shrb
add
inc
fsubs
stos
sahf
add
popf
inc
xchg
call
and
cld
lock
cmp
enter
ljmp
loop
outsl
jmp
sti
lock
push
mov
test
pop
test
pop
loopne
dec
stos
xchg
adc
cmp
pop
push
pop
cmp
mov
dec
loope
adc
testb
sub
push
lock
es
mov
or
and
shl
xlat
sbb
mov
adc
jbe
into
xchg
xchg
or
shlb
roll
push
icebp
clc
sbb
ss
aam
out
add
mov
sbb
dec
inc
push
ficoms
pop
pop
add
mov
imul
inc
sub
orb
cmp
enter
inc
sbb
addr16
cld
les
outsb
cwtl
dec
call
cmc
loopne
js
cmp
cmp
xor
ljmp
pusha
loop
aas
jl
mov
out
lret
divb
or
push
adc
test
jae
fucomi
nop
push
in
inc
or
jecxz
loopne
jmp
sbb
jp
or
or
cld
cmp
ret
add
iret
xchg
fcomps
inc
call
mov
clc
clc
dec
pusha
push
dec
fdivl
sahf
sbb
xor
xchg
ja
push
push
rcrb
xchg
pop
insb
inc
loope
adc
iret
in
jge
enter
test
cs
add
jg
test
cmpsb
inc
jnp
sub
mov
sbb
push
call
stos
push
adc
xchg
mov
cmp
fsub
or
imul
leave
rorl
dec
pop
or
push
fistps
and
sub
pusha
xchg
addr16
lahf
out
pop
inc
ret
rcr
mov
aas
sbb
bndstx
cmp
mov
in
in
mov
jp
mov
test
jg
push
pop
test
sub
xchg
jmp
push
push
aas
mov
fwait
loope
push
lret
js
ret
add
jle
mov
mov
or
add
push
std
jmp
mov
pavgb
sti
inc
incl
test
ficompl
or
bound
pushf
and
sbb
xchg
sbb
movsl
fists
push
clc
aam
mov
pop
cmpsl
mov
adc
ret
dec
xlat
cmc
inc
pop
adc
or
mov
out
outsl
pop
cmp
mov
xchg
xchg
push
jle
push
cmpsb
loop
jecxz
xor
fcompl
dec
mov
jno
and
pop
aas
inc
into
out
mov
inc
rclb
sbb
pop
pop
cmp
fsubl
xchg
adc
aas
ds
mov
out
sub
dec
ss
pop
pop
ss
sub
and
and
pop
fstpt
push
xchg
pushf
dec
sub
dec
xchg
lock
andb
lods
aas
pop
push
cs
shll
xchg
lret
push
movb
addb
rcrb
std
sahf
hlt
sub
xchg
shlb
xor
cmp
shr
mov
sub
cwtl
push
filds
loopne
bound
inc
add
mov
dec
and
push
dec
lea
lock
mov
jle
cmp
mul
jnp
mov
jl
cmpsl
ficompl
or
mov
cld
clc
sub
mov
cwtl
addb
push
cmp
mov
lock
movsl
jno
or
bound
lods
rorb
lret
mov
cmp
rorb
iret
les
mov
sbb
gs
pop
sub
nop
xor
mov
dec
lcall
stos
push
mov
pop
decb
cmp
add
xor
and
subl
jp
cmpsl
pop
cmp
insl
push
repz
xchg
and
loop
xchg
adc
cld
loopne
aas
addl
clc
sub
sbb
lret
jecxz
or
adc
loop
jns
push
mov
iret
dec
xchg
and
add
add
xchg
mov
mov
and
sti
push
ret
cmp
scas
in
clc
and
rorb
stos
add
cltd
or
enter
sahf
cwtl
enter
fimuls
inc
mov
or
je
dec
inc
aas
loopne
sub
je
adc
aam
sarb
mull
push
je
arpl
mov
imull
insb
insb
and
add
cmp
sbb
sub
sbbb
mov
sahf
xor
sub
cmpb
sbb
in
add
pop
or
add
cmpb
xchg
or
mov
xor
imulb
jle
add
inc
add
inc
std
add
fucomi
pop
mov
sbb
lret
pop
pop
test
jecxz
mov
imul
js
call
dec
repnz
js
adc
and
ss
xchg
iret
insb
and
mov
dec
jge
in
dec
insb
fildl
stos
cmp
aas
int3
jne
cmc
ret
leave
fdivs
fcmovne
mov
cs
gs
push
dec
rorb
xchg
lret
pop
test
adc
xor
and
mov
test
and
sub
out
cmp
or
int
insl
and
pushf
arpl
dec
mov
and
jg
cmpsb
stos
and
cli
imul
sarl
mov
mov
popa
mov
add
clc
add
std
adc
cmp
push
repnz
scas
mov
std
cmp
sbb
push
cmp
sub
and
lock
cmpsl
lea
cmp
scas
inc
mov
jecxz
cmpl
test
mov
mov
fwait
lock
adc
cmpsb
jp
xchg
jle
mov
mov
lahf
inc
cld
mov
adc
rcl
sahf
mov
jp
test
sahf
cli
test
lret
lea
mov
mov
lock
movl
or
sub
sbb
jp
outsb
jmp
sbb
aas
iret
xor
js
clc
push
daa
adc
xchg
mov
lret
pop
ficomps
call
ljmp
ds
mov
ret
shll
xchg
or
nop
enter
jle
mov
sub
or
sahf
into
stos
sub
push
mov
inc
xchg
std
xchg
adc
push
adc
ss
pop
sub
jle
or
loopne
and
cmpsb
sar
adc
clc
inc
add
clc
mov
push
and
inc
repnz
pop
aas
pop
xchg
add
xchg
lock
pandn
jp
mov
aad
push
and
add
xlat
addl
and
fisubrl
ljmp
js
xor
divb
pusha
sbb
add
mov
and
icebp
inc
loopne
inc
jb
fs
and
out
adc
out
lds
lret
adc
jecxz
popf
sti
lock
mov
aad
sarl
xlat
int3
pop
das
test
xchg
cld
ret
imul
mov
sar
add
add
mov
hlt
loopne
sbb
adc
fs
clc
xor
xchg
ljmp
mov
stos
cld
xchg
cmpsb
dec
les
mov
jle
xor
fdivl
sub
loopne
leave
cli
shrb
xchg
jl
push
inc
call
xchg
ljmp
xchg
loopne
xor
push
rol
adcl
fldcw
cmp
xor
int3
movsb
push
dec
in
sbb
sbb
lods
inc
adc
xor
aaa
aam
mov
push
push
or
js
mov
inc
jo
loop
aam
in
push
push
lods
aaa
sbbl
and
sbb
pop
cli
jb
testb
push
sbb
ret
shrb
ds
sub
jmp
inc
js
hlt
xchg
xor
push
lock
icebp
sbb
push
push
push
cmp
test
lods
mov
cmpsl
pop
mov
cli
and
lods
lcall
mov
insl
push
test
and
movb
jmp
pop
clc
stos
pusha
in
nop
test
mov
jp
roll
lahf
js
xor
ss
and
xchg
arpl
les
adc
adc
push
es
pop
data16
cmp
inc
mov
xor
pop
rol
sti
sahf
sub
mov
fbstp
lods
mov
push
cmp
lret
dec
ljmp
loope
or
adc
ret
js
es
cmp
and
shll
js
fildll
hlt
shrl
call
pop
ljmp
and
pop
jle
or
inc
mov
das
lock
add
pop
adc
inc
add
pi2fw
fisubl
in
je
inc
fdivs
cmc
shll
insb
sti
enter
cmp
das
das
scas
mov
mov
mov
outsl
sub
cwtl
cli
sbb
rorb
ljmp
xchg
hlt
out
jno
leave
dec
stos
mov
cltd
cmp
pop
jg
xchg
adc
rcl
into
xor
cmp
mov
nop
xchg
pop
or
pusha
mov
icebp
fs
xor
pop
xor
subl
insb
mov
cmp
push
aas
scas
cmpb
jle
jmp
lret
int3
push
pop
test
jge
jo
shl
nop
loope
add
adc
jle
or
or
xchg
add
lret
loop
les
sub
xchg
ds
jle
cmp
out
in
in
jbe
cli
or
lods
ret
aas
inc
cmp
test
js
in
pop
push
loopne
das
push
inc
sbb
xor
mov
das
adc
stos
push
and
ljmp
or
adc
jle
pop
aam
cli
mov
fsubrs
xchg
sbb
mov
add
jmp
das
inc
ljmp
add
aas
bound
add
inc
jmp
jb
div
daa
test
xchg
sahf
jo
imul
fidivrs
outsb
jmp
frstor
pop
rcrb
cmpsl
inc
adc
fstl
bt
cmp
and
mov
cltd
add
xor
loop
xchg
push
insb
and
jmp
cs
out
in
or
aam
mov
cmp
loop
add
test
daa
sub
inc
pop
pop
rolb
leave
cli
xchg
xchg
xor
fs
test
mov
insb
out
hlt
cmpl
testl
inc
test
js
push
mov
mov
insb
jmp
ret
inc
fists
xchg
jle
jg
rolb
mov
add
mov
mov
xchg
stos
cmp
stos
and
imul
push
mov
lret
outsb
xchg
mov
mov
aam
imulb
ds
push
mov
push
xor
push
shlb
in
xchg
cmp
jo
fmuls
or
insb
cs
dec
inc
pop
jle
pop
cmpsb
pushf
and
enter
inc
push
pop
mov
out
loopne
add
adc
pop
repnz
xchg
fs
ljmp
sti
fsubrp
mov
jmp
push
dec
dec
rolb
stos
test
cli
icebp
loopne
or
xchg
jb
std
mov
sub
mov
fisttpll
or
jo
arpl
adc
fdivs
shrl
xchg
sub
stos
push
popa
and
dec
int3
add
push
bnd
daa
stos
out
rorl
sahf
sbb
push
pop
ret
xchg
call
jge
and
push
clc
test
ljmp
jbe
rolb
loop
cmp
mov
ss
push
cmpsl
ja
jbe
fdivrl
outsb
cmp
not
pop
loopne
cld
subl
ja
std
orb
dec
push
les
jl
aas
jo
loop
mov
mov
mov
cltd
movsl
test
dec
rol
call
pop
ss
les
leave
cmp
js,pt
mov
lods
xor
mov
lahf
aaa
shll
out
mov
jecxz
aam
or
mov
ret
adc
xchg
shlb
and
movsb
mov
or
inc
mov
cwtl
and
loopne
xchg
fcomps
inc
add
outsl
push
jmpw
mov
mov
xor
jl
xlat
sahf
call
lret
ss
outsb
or
xchg
icebp
and
add
xor
or
aas
dec
int
push
adc
dec
pop
aam
outsb
and
lds
push
pop
les
sbb
loope
lcall
ljmp
fsubs
xlat
dec
jge
out
cmp
dec
insb
dec
xlat
scas
aas
add
lods
mov
add
lea
addr16
fadds
mov
inc
mov
lock
pop
add
jbe
cmp
sub
pop
mov
sbb
adc
movsbl
mov
lret
jo
aam
cmp
pop
stos
les
pop
mov
xchg
loop,pn
gs
fs
jl
cli
jne
movsl
pop
cmp
enter
int
arpl
sar
pushl
xchg
xor
addr16
cmpsl
inc
xor
adc
cmp
loope
scas
jae
aas
movsl
das
cmp
mov
aam
nop
movsb
add
jge
fisubrl
nop
cmp
adc
adc
and
lock
xchg
ffree
jge
lods
cmp
dec
cld
js
mov
mov
dec
rclb
les
imul
nop
pop
add
cmp
scas
jl
xor
pop
clc
push
xchg
test
fwait
push
fists
add
pop
mov
lock
pop
adc
push
cld
and
mov
loopne,pt
aam
jbe
sbb
inc
pop
and
xchg
out
pop
fs
js
hlt
nop
push
push
jg
dec
push
ja
ds
sbb
xorb
hlt
push
mov
and
popf
sbbl
arpl
clc
and
js
push
mov
aas
jle,pt
ret
insl
push
sub
or
int
popf
pop
push
push
sbbl
pop
and
add
and
xlat
es
add
jno
mov
pusha
lock
mov
pushf
leave
add
xor
xchg
jne
push
mov
js
lock
add
sbb
lods
out
mov
push
mov
ja
loope
ret
cmp
dec
into
sbb
cli
push
sub
aam
movsl
leave
fidivl
mov
jp
rcll
cmpsl
lahf
mov
loop
fistl
adc
ss
stos
xchg
repz
pop
push
test
inc
pminsw
in
daa
dec
cwtl
mov
das
push
out
jo
pop
mov
dec
push
movb
and
inc
stos
in
test
mov
popl
int3
sahf
divb
inc
pop
or
pop
ss
mov
mov
mov
cs
push
cmp
ljmp
add
jl
dec
movl
inc
cmp
sbb
mov
push
imul
and
dec
or
pop
inc
roll
stos
jle
lahf
jle
icebp
or
js
fcmovnb
adc
stos
jle
pop
or
add
xor
adc
mov
jno
xchg
insb
clc
pop
and
jle
lock
fwait
lcall
ret
jge
shrl
loop
fidivrs
out
jge
adc
es
fsubr
sub
shlb
repnz
dec
cli
mov
xor
mov
loop
lods
idiv
xchg
insb
sahf
loope
fwait
dec
sub
push
pop
les
pusha
xor
mov
jae
dec
jne
iret
xchg
inc
mov
lcall
sub
inc
sub
test
imul
cmp
pop
pop
jle
xchg
or
sbb
popa
out
mov
mov
jmp
add
rol
lcall
mov
rcr
ljmp
or
jge
js
dec
insl
push
mov
jo
add
adc
inc
pop
push
daa
mov
loope
mov
cmp
test
clc
push
jecxz
movsb
mov
inc
push
popa
orl
les
jbe
subl
sahf
pop
mov
jmp
dec
and
cmp
push
pop
mov
inc
mov
inc
xchg
loopne
inc
push
ror
faddl
ret
adc
dec
fdivl
fs
and
add
sbb
repz
push
inc
pop
push
pusha
scas
jg
cli
rol
add
ja
add
scas
mov
or
mov
pop
andb
aas
iret
iret
add
jecxz
arpl
fwait
out
ds
jl
lods
lods
adc
cmp
jle
add
adc
incb
lsl
outsl
jns
sub
sbb
push
repnz
es
mov
js
and
int3
test
xchg
clc
dec
mov
clc
fdivrs
jge,pn
cwtl
cli
mov
loopne
aad
fbstp
push
mov
test
clc
xor
jmp
out
ret
xchg
pop
adcl
inc
cmovs
lods
pushf
xor
test
cld
add
dec
or
and
xor
xchg
std
cld
int
cli
mov
and
jns
sbbl
test
aaa
gs
sti
ljmp
mul
imul
movsl
push
or
xor
sbb
clc
push
jo
jmp
jo
mov
jle
add
divb
push
sub
scas
push
add
icebp
movsb
mov
out
adc
push
mov
cld
mov
mov
mov
arpl
jo
mov
int
ret
les
sbb
cmp
cmp
ss
xchg
aad
sub
dec
std
clc
hlt
xor
clc
aam
nop
hlt
mov
sbb
cld
dec
lds
mov
das
or
inc
push
or
out
xor
aam
loop
mov
rol
sub
test
ljmp
loop
cltd
jp
leave
ret
mov
cs
push
and
push
cmp
mov
sbb
push
in
xor
add
jl
pusha
pop
pushf
lahf
and
lock
fiadds
call
dec
and
mov
icebp
lock
adc
mov
mov
int3
mov
std
fs
in
jbe
dec
dec
jp
loope
cwtl
into
shll
add
mov
mov
adc
aam
lea
icebp
dec
push
mov
shlb
inc
cmp
cmp
stc
cmpsb
sar
jecxz
mov
out
shll
mov
and
mov
xchg
out
dec
push
out
in
adc
mov
jecxz
jecxz
pop
mov
jl
comiss
mov
jle
fs
mov
add
push
mov
pop
cmp
sub
rorl
sub
push
mov
icebp
dec
sub
mov
filds
jno
adcb
sub
insl
add
xchg
push
jl
lret
push
pop
push
nop
loop
sti
cld
stos
adc
orb
or
stc
mov
and
mov
and
rorl
scas
lods
cmc
loope
push
sub
lods
xchg
out
loop
push
push
lret
jp
in
pop
jge
jp
sbb
insb
cmp
add
mov
sysret
lahf
mov
ffree
cmp
shlb
out
fildl
cmp
push
jmp
adcb
mov
outsb
ret
ljmp
or
mov
push
es
out
mov
aam
push
in
mov
jle
push
mov
cmp
cmp
out
ret
filds
push
inc
sbb
mov
repnz
hlt
add
mov
sbb
into
ja
inc
or
push
push
jle
mov
popa
mov
daa
insb
add
sub
movd
push
cmpsb
fnstcw
mov
adc
or
rolb
in
and
adc
push
pop
sarb
xor
push
and
add
push
ss
adc
das
adc
xor
mov
xchg
pop
sbb
sbb
movl
add
in
fisubrl
clc
popa
inc
ljmp
mov
loopne
ret
ret
dec
xchg
movsl
mov
ds
inc
sbb
mov
inc
enter
mov
es
scas
insb
adc
lret
outsl
inc
lahf
jo,pt
push
lods
or
fs
adc
movsb
int
stos
lock
enter
mov
sub
cmp
fs
js
jp
lods
dec
mov
filds
pop
xchg
loopne
push
test
jg
pop
push
jge
mov
push
mov
push
cld
scas
sbb
repnz
dec
pop
mov
pop
shl
mov
addl
xor
xchg
popf
jle
push
hlt
pushf
xor
mov
xchg
xor
push
xchg
lahf
icebp
clc
add
jmp
addr16
xchg
test
adc
fidivs
leave
sti
js
aaa
mov
or
fildll
aam
jno
jp
shll
call
jle
add
mov
out
ret
ret
cli
into
add
inc
jecxz
jg
leave
mov
mov
and
push
jmp
dec
hlt
inc
in
pop
xchg
cmp
mov
fidivrs
call
ljmp
pop
dec
mov
js
cmp
sahf
icebp
dec
pop
push
inc
jp
into
push
orl
fdivrs
add
cmpsb
fbld
les
jb
addr16
sahf
sbb
mov
cmp
gs
aad
dec
bound
js
pop
add
addb
and
jge
out
lods
out
add
inc
sar
mov
fs
je
dec
gs
jne
daa
cltd
and
imul
icebp
testb
data16
sub
aad
outsb
movsl
test
sti
add
loope
fsubp
mov
clc
rorb
or
das
cmp
xchg
bound
sbb
aam
mov
push
movsl
xchg
mov
movd
jl
shrb
mov
sbb
xchg
fdivrl
dec
sbb
pop
bnd
mov
mov
adc
lcall
mov
or
and
xorb
sti
call
aaa
jbe
inc
js
pop
sbb
mov
jmp
sbb
xor
sahf
jge
ds
and
inc
test
or
sub
or
sbb
push
cmpsb
xchg
or
pxor
and
push
pushf
add
lods
aam
cmpsb
shl
lods
mov
outsl
inc
scas
xchg
movsb
push
nop
mov
dec
ret
rolb
sarb
scas
ds
dec
filds
mov
mov
movsb
stos
jl
add
mov
xor
pop
mov
push
shl
or
jp
jge
adc
lahf
outsl
jmp
test
mov
mov
insl
pusha
int3
fimuls
adc
stc
push
subb
or
lock
xchg
shlb
add
inc
cmovno
push
add
pop
add
out
cmp
sbb
rcrb
pop
mov
xor
mov
loopne
mov
mov
mov
inc
aas
int3
push
sbb
pop
sbb
and
mov
jle
es
inc
addr16
out
or
inc
or
jo
push
ja
in
adcb
xor
out
mov
pop
dec
les
imul
or
pop
fs
stc
pusha
adc
mov
ret
xchg
mov
test
push
cmp
ret
xchg
scas
and
in
and
icebp
icebp
inc
ret
sbb
test
mov
fs
and
adc
fbld
clc
imul
ds
mov
clc
jnp
mov
subb
inc
out
jno
ds
rcrb
idiv
pop
push
pop
jle
or
jmp
clc
jle
sub
bound
and
aam
push
jle
sarb
inc
add
adc
std
lods
arpl
pop
pop
dec
jns
xlat
in
or
jno
inc
daa
inc
xor
jno
test
mov
cmp
cld
push
call
push
stos
lock
movsb
pushf
out
jmp
shlb
sbb
addr16
push
mov
dec
out
sub
sarl
jbe
icebp
test
cltd
imul
clc
jbe
xchg
xchg
mov
scas
or
mov
jnp
or
cmp
sbbb
shll
rcrb
test
shl
pop
shrw
cmc
jo
rcll
jg
jp
adc
xchg
aam
test
add
push
pop
fs
aam
in
push
rclb
fisubrs
mov
or
aaa
push
sbb
jg
pop
adc
cmp
sub
arpl
jmp
shrl
cmp
negb
ret
imul
cmpsb
loope
and
lock
rorl
jle
fildll
push
ss
jle
mov
mov
mov
jbe
test
xchg
mov
bound
jecxz
xchg
js
pop
dec
fcmove
outsb
test
cmp
mov
sbb
pop
mov
test
loope
mov
inc
mov
pop
xchg
xor
pop
lock
movb
clc
pop
ret
pushf
lods
inc
loopne
adc
les
add
sahf
sbb
cli
xor
das
jle
sbb
imul
or
jle
jno
push
adc
out
popa
mov
lret
cli
hlt
xchg
ds
insb
cmp
cmpsl
ljmp
jg
jne
aam
xchg
sub
xor
cmp
addps
not
sub
dec
sub
out
loope
jns
aaa
subb
imul
test
sbb
cli
jle
pop
or
cmp
push
pop
inc
cmpsb
lock
loop
sahf
sbb
adc
pop
js
loop
pop
out
xchg
mov
xor
cs
out
sarb
daa
pop
mov
sub
jae
scas
push
jge
sub
mov
pop
and
sub
out
jge
add
xchg
cld
cli
mov
out
enter
das
jge
cld
fsubs
xor
call
dec
mov
fisubl
cmp
repz
fs
xchg
sub
mov
scas
cld
and
mov
add
sbb
push
mov
inc
das
jecxz
and
rorb
jle
insb
pop
cmp
xorb
jle
fwait
jp
mov
push
and
sbb
andl
jle
add
sbb
cmpsl
stos
out
mov
pop
and
push
insl
dec
adc
mov
jbe
add
cmp
jle
cmp
nop
scas
shl
fbld
into
or
mov
inc
out
and
lahf
jbe
mov
jg
fsubr
je
push
aas
ds
scas
or
sti
gs
aas
pop
lret
cmp
mov
and
fwait
movsb
mov
pop
cltd
pop
outsb
int
mov
ffreep
rol
add
and
sub
shrl
dec
jns
js
xor
out
jecxz
pop
roll
stos
mov
shlb
loope
xor
aas
ljmp
sbb
cwtl
or
inc
xchg
mov
jmp
pushf
xor
add
cmp
cs
mov
jl
jge
popa
mov
xchg
xor
mov
cmp
inc
sbb
push
sub
test
push
xor
int
scas
dec
xchg
adc
ds
add
mov
enter
mov
add
mov
pop
fmull
mov
xchg
cmpl
rorl
aam
cmc
adc
pop
or
push
mov
pusha
jge
jmp
and
push
pop
lock
mov
cmp
jecxz
jnp
lock
sbb
cmp
mov
or
cmp
std
negb
jno
add
mov
sub
jbe
ljmp
aad
lcall
push
mov
xlat
cmpl
jns
cmp
pusha
cmp
out
xchg
fcomps
outsb
push
or
jno
mov
jle
mov
aad
sbb
pop
pop
aas
jle
push
out
mov
and
jecxz
mov
push
imul
inc
hlt
or
loopne
addr16
cmp
cli
jecxz
js
xor
stos
inc
and
inc
test
ret
pop
jle
loop
pop
pop
dec
jp
dec
mov
xor
pop
dec
mov
lret
push
mov
jp
mov
push
push
mov
or
add
test
mov
cmpsb
xor
aam
add
push
cmp
xor
lahf
cld
icebp
or
call
ljmp
pop
shrb
and
sub
and
cmp
mov
add
pop
repz
inc
out
and
clc
sbbb
insb
call
test
and
les
std
lock
ds
loopne
movsb
pushf
in
fsubr
push
cs
les
xor
cmp
push
lahf
shlb
or
xchg
pop
dec
ret
outsl
push
mov
push
push
lret
adcl
pop
mov
cwtl
mov
inc
rorb
mov
repnz
repnz
sarb
outsb
in
xor
add
rorl
sbb
insl
mov
inc
mov
xchg
cwtl
subb
das
xor
imul
sbb
adc
add
std
aam
push
lea
cmp
rcrb
sub
idivl
dec
rcrb
jno
jbe
nop
je
mov
lahf
js
cli
mov
mov
mov
and
sub
in
fucompp
dec
loope
cs
repnz
loope
pop
push
inc
push
inc
nop
scas
jle
or
js
icebp
rcr
mov
sub
cmp
sbb
push
or
movhlps
xchg
sti
push
rolb
cmpsb
scas
sbb
mov
out
ja
xchg
add
push
cli
fdivrl
and
mov
jo
xor
pop
insb
cs
xchg
test
dec
hlt
popa
mov
or
jmp
mov
sub
arpl
dec
push
add
iret
out
loopne
loop
dec
lahf
jecxz
xchg
push
not
rcrb
push
push
lds
sahf
icebp
lcall
xchg
dec
cmp
mov
cmp
jge
mov
mov
jecxz
aas
cld
cmp
in
out
lcall
sarl
push
fadds
loopne
je
std
ss
sahf
xchg
movhlps
sbb
jecxz
lods
mov
daa
adc
in
out
int3
lcall
cmp
rol
aam
out
sbb
push
mov
jno
insb
inc
add
dec
les
imul
insb
cwtl
adc
rdmsr
lcall
mov
pop
cld
add
pop
inc
fdivrl
mov
xchg
pandn
stos
dec
inc
pop
fcoms
fdivrs
cmp
pop
pop
pop
pop
fisubs
sub
mov
and
fdivs
lea
in
xchg
mov
mov
stos
and
lcall
or
shll
cli
hlt
mov
icebp
mov
sbb
in
hlt
jnp
mov
dec
push
mov
test
cmp
popf
xchg
ds
pop
jl
sbbl
jnp
retw
jns
cwtl
xchg
popl
cmp
sbb
loop
pop
add
pop
mov
mov
movsb
pusha
dec
mov
adc
pushf
cmp
js
mov
inc
pushf
aaa
nop
lock
pop
mov
lahf
ds
rclb
data16
push
jge
jmp
xchg
fs
divb
and
cmp
frstor
push
out
sbb
pushf
fs
mov
shlb
dec
clc
jle
addb
shrb
pop
push
xor
pop
clc
xchg
call
jbe
out
ss
ret
test
cmp
je
scas
dec
pop
adc
cmp
jle
push
pushf
adc
hlt
shll
enter
mov
jae
mov
xchg
lock
xchg
repnz
shll
ficompl
adc
inc
cs
into
fs
jp
pop
std
xor
mov
lcall
lcall
jge
ss
sub
pop
ljmp
push
mov
idiv
mov
lock
sub
and
xchg
or
jge
sub
pop
mov
insb
pop
mov
sar
call
bound
or
sti
int3
sbb
imul
cli
fld
data16
addr16
mov
sar
stos
lahf
std
jb
mov
filds
nop
ficomps
sahf
mov
bound
filds
pop
adc
mov
mov
fwait
loopne
jecxz
pusha
int3
inc
ds
icebp
dec
sbb
loop
cltd
into
insb
out
ffreep
fdivr
mov
jge
pop
lea
fucomi
es
mov
es
or
mov
iret
and
inc
orb
shlb
jp
mov
shl
shl
int3
cs
imul
ret
loope
push
ficoms
aam
scas
sahf
stc
xchg
mov
js
mov
dec
ret
ds
scas
in
outsb
sbb
xchg
loope
add
lcall
fs
gs
and
sbb
out
dec
aam
lahf
mov
jne
ja
loopne
dec
xchg
xchg
xor
test
push
das
test
mov
mov
sbb
add
mov
cmpsl
cmp
fs
jb
pop
mov
scas
push
test
mov
mov
push
fdivrs
js
jnp
dec
pushf
pusha
ret
inc
jo
mov
gs
addb
push
js
push
bound
mov
jp
adc
push
push
push
pop
popa
pusha
sbb
push
aas
push
icebp
les
push
pusha
hlt
aad
ret
add
dec
mov
movsb
pop
rcrb
dec
xchg
cmp
dec
sarb
lock
hlt
add
inc
fisubs
pushw
add
inc
jne
lods
jle
push
es
je
sub
push
xchg
push
fst
aaa
cmc
xor
dec
add
rcrb
notb
out
adc
mov
ret
push
jp
dec
and
xchg
jbe
or
pop
push
jle
dec
ret
pop
js
mov
into
xor
insb
arpl
sahf
rorl
sbb
clc
push
push
ret
cli
loop
lea
std
or
jle
jl
testb
adc
cld
add
jnp
arpl
inc
loope
test
mov
pop
cmp
xchg
fcmovu
negl
mov
in
sbb
sahf
fwait
fwait
or
pop
imul
lret
lods
insb
fs
mov
cmp
fistl
adc
push
test
mov
hlt
add
xlat
mov
les
sbb
mov
sub
mov
or
jmp
cwtl
lret
jno
mov
add
dec
pop
cmp
sbb
add
xor
jbe
mov
pop
sub
cld
push
adc
mov
mov
addr16
jbe
ret
jp
sub
inc
mov
pop
ffreep
mov
ds
call
jns
cld
lods
scas
dec
pusha
or
mov
out
and
aad
mov
cmpsb
flds
sbb
movsb
cli
jl
fisubs
mov
jl
sub
fildll
mov
jmp
mov
mov
es
jecxz
out
sbb
mov
aaa
cld
or
shl
mov
imul
push
push
aam
push
loope
cmc
sbb
mov
inc
jl
fmuls
sbb
mov
push
dec
jl
das
jmp
nop
mov
cs
dec
loopne
mov
jg
push
mov
adcl
mov
pop
in
sarb
adc
test
ljmp
cwtl
lcall
adcl
pop
les
ds
out
stos
sbb
mov
shll
hlt
push
adc
mov
inc
call
xor
leave
cwtl
jo
fcmovnb
jnp
jo
dec
dec
xor
enter
pop
pop
mov
xor
mov
lret
dec
dec
movsl
out
lock
push
cmp
pop
clc
push
ret
push
sbb
insb
inc
dec
ret
or
cmp
cli
clc
aaa
sub
mov
cld
cli
icebp
ljmp
sub
cmp
and
ja
mov
push
icebp
lock
enter
mov
xchg
scas
bound
or
dec
pop
inc
adc
cmp
jp
jne
xor
mov
inc
shll
xor
insb
stos
mov
sbb
push
call
push
fs
mov
jb
lods
outsl
pop
push
test
mov
scas
ds
out
test
fcomi
les
adc
push
add
mov
orl
push
or
push
xor
into
jmp
jp
jo
data16
and
xchg
sarb
rorb
xor
lods
push
mov
jo
push
xor
mov
cld
mov
pop
xor
call
cmpl
sbb
rcr
jb
xor
push
or
je
mov
jge
xor
fstpl
or
xchg
test
rol
lds
lret
jmp
pop
mov
lcall
lcall
dec
loope
mov
test
jge
cmp
mov
xchg
arpl
js
adc
push
mov
xlat
js
jl
xor
or
sbb
mov
inc
and
cs
jns
mov
mov
imul
enter
pushf
xorb
mov
dec
enter
jl
stos
repnz
mov
mov
loopne
hlt
jp
cwtl
cmp
xor
jge
loopne
cli
cmp
sbb
mov
lock
pusha
test
cwtl
add
fimuls
push
pop
fimull
jae
pop
nop
add
loope
sbb
mov
inc
shll
lock
imul
jp
ds
push
clc
push
push
hlt
adc
icebp
loope
adc
push
mov
lock
cmpsl
lock
mull
push
movl
fsubrs
and
adc
inc
cwtl
in
cmc
sub
mov
inc
push
fwait
je
xlat
cmp
push
rorl
xchg
hlt
jl
sub
and
xor
jmp
das
jmp
mov
jecxz
clc
push
pusha
lods
dec
aam
or
xchg
out
sti
aam
xchg
mov
mov
dec
fsubrs
inc
pop
or
stos
in
xchg
lock
mov
add
push
shlb
jecxz
xchg
sbb
xchg
cmp
adc
insb
fisubl
push
pushf
lock
out
lds
test
mov
sub
das
mov
mov
lods
clc
xchg
scas
cltd
push
xchg
ljmp
inc
mov
mov
ds
orb
daa
sub
pop
dec
int3
sub
idivb
and
test
outsb
push
into
cmp
jo
pushf
jb
jle
xchg
sbb
shrb
out
inc
or
inc
cli
xor
xorb
icebp
sub
aam
ret
ljmp
pop
push
movsl
push
cld
mov
dec
adc
push
lock
ds
mov
lds
mov
out
lock
mov
into
mov
inc
xor
push
xor
test
jmp
mov
loop
xchg
push
pop
pop
sahf
aad
xorb
sub
cs
mov
adc
cmp
clc
xchg
mov
pop
cmp
divl
pushf
jbe
scas
pop
out
pop
js
psubb
xor
lock
mov
and
adc
and
push
sarl
and
dec
cld
xchg
shlb
movsb
pop
mov
cmp
push
pop
inc
repnz
das
push
ss
cmp
notb
jb
mov
jl
add
xchg
or
mov
and
out
rcl
sub
push
pop
inc
dec
mov
ljmp
dec
sub
lock
les
adc
into
aas
push
adc
or
loop
rorb
popa
push
dec
lea
ds
add
mov
pop
test
sub
cmp
popl
pusha
outsb
mov
loopne
ljmp
cs
stos
or
cli
into
icebp
sti
call
bound
mov
mov
outsl
test
clc
or
mov
lds
lods
cmp
push
cs
loopne
pop
out
dec
jge
jl
adc
jle
pop
aam
cmc
inc
add
aad
xchg
jge
imul
add
call
sbb
add
addl
inc
cld
adc
mov
pusha
rcr
push
cld
ss
insb
rorb
push
mov
haddpd
mov
movsb
pop
cmp
enter
pop
mov
mov
outsb
adc
icebp
ret
mov
cmp
pop
shrb
push
push
notb
jmp
hlt
jge
sbb
mov
cmp
repnz
push
jle
data16
pause
xor
mov
loop
add
or
sub
mov
pop
je
pusha
push
or
hlt
outsb
pusha
pop
push
pop
and
push
jmp
mov
adc
shlb
jle
sub
mov
movsl
pop
call
sarl
cli
pop
mov
cmpsb
xabort
xchg
mov
mov
mov
stos
test
dec
js
clc
and
mov
pop
aas
mov
lcall
jmp
fldenv
adc
cli
mov
mov
pop
nop
or
xchg
lock
mov
lock
pushf
jg
ds
mov
or
scas
popf
cmp
fsubs
insb
out
push
mov
or
and
ret
push
in
inc
outsb
outsb
cmp
xchg
or
mov
out
mov
lods
dec
pop
mov
mov
lock
inc
mov
ljmp
enter
clc
js
lret
jl
andl
jbe
sub
push
add
aam
xchg
sub
aam
clc
jle
js
repz
ljmp
pop
xchg
or
jmp
clc
inc
ljmp
pop
hlt
or
dec
je
loopne
dec
or
cmp
loopne
pop
push
jne
push
push
or
cld
mov
cmp
ljmp
push
jmp
clc
or
cmp
sbb
rorb
ret
cmpsl
mov
aas
add
xchg
dec
imul
pop
inc
lahf
adc
dec
arpl
or
push
mov
pushf
mov
pop
dec
xchg
ljmp
push
mov
jo
imul
lock
and
push
lea
and
rcrl
push
jo
je
lret
inc
movb
addr16
add
call
cld
test
sub
push
mov
insb
sti
push
pusha
add
add
mov
lock
xlat
mov
push
mov
faddl
out
push
aam
xor
jl
fdivrs
sub
adc
sbb
sub
loopne
cmp
mov
sbb
ds
add
jecxz
movsb
xlat
and
sbb
rolb
sahf
hlt
or
fiadds
adc
adc
cmpb
out
insl
cld
inc
scas
fcmovb
cmp
cmc
fld
sti
push
mov
test
mov
sarl
cli
icebp
js
sbb
mulb
adc
pop
pop
mov
outsl
mov
dec
cmp
movsl
mov
pop
dec
push
or
ljmp
adc
mov
sbb
xchg
ret
sbb
hlt
mov
pop
loop
jbe
adc
lret
jl
loope
bound
test
out
mov
das
and
sub
cmpsl
sbb
shrb
xorb
mov
js
sahf
test
fldenv
sub
cmp
xchg
adc
insl
jmp
mov
popa
jge
leave
cmp
bnd
inc
outsl
std
sbb
and
adc
js
lret
les
lods
xchg
mov
jbe
insb
in
and
and
bound
add
repnz
jb
and
dec
fmuls
icebp
hlt
cs
jp
fidivs
xchg
mov
xor
ret
mov
mov
roll
rolb
inc
pop
xchg
and
or
add
jo
ret
pop
shl
xchg
incl
insb
jmp
mov
pop
lahf
push
mov
mov
add
aam
adc
jg
mov
sbb
and
inc
xchg
orb
call
cwtl
xchg
lods
jecxz
loope
dec
out
dec
mov
popa
mov
ljmp
adc
dec
ret
icebp
mov
lret
push
xchg
into
mov
out
in
mov
inc
pop
ror
lds
js
mov
jmp
pop
ret
sbb
fiaddl
in
mov
push
imul
jp
add
sarb
dec
fnstsw
cmp
leave
adcl
dec
push
decl
mov
or
notb
xor
movsl
xor
in
sub
adc
push
pushf
xchg
addb
mov
push
sub
sbb
xor
and
xchg
js
icebp
testb
cmpl
movsl
jb
push
sahf
dec
sbb
dec
jge
jge
test
js
andl
xchg
mov
cmpsl
mov
cmp
sti
pop
sbb
add
shlb
pop
fbld
xchg
outsb
cmc
xor
cmp
cltd
rclb
and
jp
clc
loope
nop
pop
add
je
lret
loopne
shr
ds
jnp
loop
imulb
mov
fiadds
ds
pop
mov
clc
bound
rclb
pop
ret
xor
sbb
loopne
fs
clc
imulb
mov
or
mov
iret
les
outsb
ficomps
dec
mov
push
xor
mov
inc
jno
cmp
push
rorb
dec
lahf
sahf
cwtl
sbb
lods
or
bound
inc
sub
pop
pop
cli
or
push
push
inc
mov
ret
repnz
ret
rcl
or
sbb
mov
adc
cli
pop
pop
loopne
pushf
lret
subb
mov
cld
js
js
mov
inc
lret
xchg
inc
cwtl
or
inc
ss
fnstcw
cld
inc
in
cs
adc
or
lea
in
pop
mov
sbb
jns
push
daa
adc
iret
imul
divb
pusha
dec
in
and
cmp
idiv
sbb
mov
jns
into
dec
jns
inc
adc
movsb
ds
jl
and
cld
js
xchg
add
es
pop
pop
push
icebp
lds
cmp
mov
push
pusha
outsb
lods
sbb
fsubrp
ret
mov
push
xchg
out
adc
push
mov
dec
nop
push
mov
std
cmp
and
mov
sub
jle
xchg
fucom
xchg
xor
inc
or
jmp
test
test
sbb
sub
fcomps
adc
cmp
mov
out
xor
bound
shrl
mov
cwtl
add
mov
dec
push
icebp
loopne
test
dec
mov
adc
popf
or
mov
adc
cwtl
pop
jo
icebp
lret
scas
cmp
jno
loop
inc
nop
rclb
lahf
dec
cmp
xor
loopne
addr16
aam
push
xor
mov
rcrb
jg
shrb
aam
cmp
adcb
dec
adc
clc
hlt
pop
cli
cmpsl
cli
lret
rolb
lea
adc
jno
dec
xchg
adc
int3
js
or
cs
mov
adc
test
hlt
sbbb
sbb
mov
sbb
sbb
pop
mov
push
clc
mov
xor
mov
dec
enter
jle
rcrl
jmp
and
ljmp
or
hlt
sbb
or
fwait
sahf
mov
or
mov
add
push
enter
add
mov
fmul
xchg
fwait
lods
inc
orps
mov
ja
or
roll
adc
or
je
mov
lcall
iret
and
push
rcrb
dec
sub
popf
loop
push
xlat
and
testb
pop
dec
aaa
bound
xor
js
sbb
sub
pop
cmc
mov
imul
jle
cmp
loopne
pop
mov
mov
push
jge
fwait
mov
into
mov
or
push
sub
test
xchg
push
out
add
hlt
dec
adc
mov
inc
adc
es
out
sub
and
mov
inc
dec
xchg
cmc
pop
xor
mov
xor
rorb
add
insl
adc
jne
mov
mov
or
ds
lret
out
arpl
loop
ds
jle
jno
push
push
inc
fcoml
push
lods
xchg
ss
cs
les
sub
push
scas
sarb
frstor
fcompl
or
les
push
jmp
dec
jl
xchg
lret
xor
sti
out
in
push
sahf
mov
pop
inc
pop
into
sti
js
loopne
loop
dec
and
sarb
mov
jo
push
mov
subl
mov
mov
in
and
pop
dec
js
mov
hlt
and
sbb
loope
pop
sti
lods
push
imul
cmp
nop
mov
sub
arpl
push
adc
cmpsb
inc
dec
sbb
mov
xchg
push
leave
add
adc
rcl
sti
mov
or
xor
mov
aam
xor
bound
sbb
cwtl
iret
inc
lods
aam
mov
jl
jbe
enter
testl
and
add
ja
dec
pop
movsl
xchg
adc
scas
lret
push
pop
jg
mov
mov
enter
fimuls
es
stos
cmp
sar
inc
mov
bound
sbb
mov
mov
inc
or
xlat
adcb
xchg
fsubrp
loope
daa
push
cmp
adc
sbb
or
cmp
jmp
stos
imul
mov
jle
xchg
push
hlt
imul
add
push
shr
add
ds
gs
pop
mov
rclb
movsb
xchg
mov
outsl
mov
pushf
sub
xor
adc
test
push
ret
lea
sbb
mov
inc
call
insl
cmp
js,pt
call
ljmpw
es
inc
aad
hlt
xorb
mov
loopne
mov
lock
dec
sti
adc
xchg
pushf
pusha
jecxz
addb
push
insb
scas
in
jecxz
push
fdivl
jmp
js
ljmp
and
jle
aam
pop
in
and
pop
jl
enter
or
je
mov
cmp
sub
ds
repnz
pop
or
mov
stc
inc
sub
es
mov
inc
loopne
pop
mov
sbb
add
fiaddl
mov
or
nop
mov
fcmovnb
insb
pop
negl
jp
insl
mov
ficoml
mov
mov
inc
cmp
lods
mov
loope
and
divb
adc
jo
nop
les
xchg
dec
lock
cli
jne
inc
cmp
jno
mov
cmpsb
add
rcrb
cmp
xchg
cli
jecxz
fldcw
xor
push
jo
enter
sbb
arpl
xchg
xor
repz
cld
or
push
lcall
out
cmpb
roll
mov
rcr
mov
or
orl
sbb
add
xchg
clc
js
sbb
lods
dec
int3
xchg
xchg
movsb
push
jo
xchg
xor
mov
inc
subb
ja
xchg
fadds
add
or
bnd
mov
addb
push
or
sbb
shr
inc
cmp
ret
int3
sbb
cmp
aad
cmp
add
scas
and
dec
or
mov
jo
push
xchg
xor
sbb
shll
test
add
fistps
clc
loopne
leave
xlat
or
fsubrs
mov
lret
pop
push
les
ljmp
ss
orb
in
mov
mov
push
push
stos
icebp
rclb
in
ljmp
aam
lret
jp
shrl
orb
sub
out
fnstenv
cmp
addr16
push
inc
loop
lock
das
mov
mov
faddl
or
mov
subb
pop
inc
jecxz
movb
pop
add
roll
les
xor
jae
or
cli
shlb
sbb
cmp
mov
out
outsw
jnp
je
dec
stos
adc
insb
xor
mov
sarb
jp
cmp
cmp
push
push
push
fimuls
inc
es
inc
xlat
adc
out
std
xchg
clc
notb
das
xor
scas
xorb
xlat
mov
mov
ficoms
push
push
movsb
stos
neg
and
adc
xor
cmp
cmc
fbld
dec
pop
jle
loope
xor
hlt
shrl
inc
stos
in
mov
xchg
xor
mov
popa
vxorpd
movsb
pushf
rolb
ja
push
cmpsl
scas
xor
pop
inc
xor
push
pop
arpl
clc
std
adc
or
outsb
fnstenv
repz
cltd
mov
cwtl
pop
sarb
mov
xor
stos
xchg
mov
rclb
and
and
mov
loop
xor
or
test
cmp
mov
mov
inc
mov
xchg
shr
mov
and
xor
mov
ret
xchg
in
ret
pop
out
mov
js
rcl
dec
movsb
push
dec
add
mov
inc
ljmp
fsubrp
clc
mov
fbld
and
ret
rcl
ret
fwait
das
and
jno
sub
pop
lret
cmp
js
stos
adc
hlt
cmp
inc
subb
xor
ljmp
inc
fmull
push
cmpsb
push
aam
movsb
inc
repz
jns
push
decb
add
cld
lock
mov
es
jo
sar
hlt
icebp
movsb
nop
sub
mov
lock
fwait
cmc
cmp
syscall
sarb
pop
jo,pt
add
iret
icebp
pop
cs
js
cmp
xchg
jl
ret
jle,pn
adc
push
lcall
push
cld
pop
push
mov
shlw
mov
loopne
jp
mov
out
xor
pop
nop
push
xchg
sbb
xor
pop
pop
ret
fcomp
add
dec
ljmp
dec
clc
jo
cwtl
into
sahf
pop
movsb
mov
push
sub
fs
test
mov
enter
xchg
lds
jb
and
cli
jle
ret
and
fimull
rolb
jl
clc
mov
jmp
cld
push
jecxz
jl
push
int
insb
lods
scas
movsb
mov
mov
mov
ds
lret
inc
cld
shl
inc
mov
mov
fistpll
pop
pop
mov
vucomiss
pop
mov
mul
push
mul
xor
inc
andb
jle
dec
insb
out
or
push
jle
dec
push
es
push
sbb
dec
pop
mov
push
and
pop
inc
xor
test
test
pusha
mov
loop
pop
xchg
inc
cmp
hlt
lock
cwtl
movl
push
xchg
cli
clc
cs
sbb
mov
mov
or
cmp
clc
and
andb
repnz
mov
inc
push
sahf
addr16
pop
dec
mov
add
adc
mov
jo
mov
cs
sbbb
sub
insl
fldl
test
mov
imul
cmp
test
out
sarb
pop
dec
outsb
pop
mov
mov
adc
cltd
cmpsb
or
std
dec
call
pop
pop
add
rclb
pop
loopne
add
xchg
flds
push
je
enter
bts
push
jns
jge
lock
lcall
mov
imul
vhaddps
and
pop
pmaxub
mov
dec
sub
bound
pop
cmpsb
jbe
lds
mov
cmpsb
dec
sbb
movsl
push
mov
and
ja
ret
icebp
js,pt
xor
dec
jge
jge
mov
mov
out
into
pusha
mov
out
sbb
pop
xchg
mov
sbb
or
mov
fcmovu
jle
out
jnp
out
fs
mov
fisttpll
inc
into
pushf
lods
std
rcl
fdivl
push
cs
or
mov
mov
xchg
and
jge
ljmp
or
cld
ds
mov
pop
push
repz
subl
mov
roll
lock
lea
add
cmp
inc
sub
mov
out
jl
adc
xor
mov
push
mov
inc
pop
add
lock
sahf
insl
nop
mov
mov
sti
inc
cmp
xchg
and
mov
push
das
orb
mov
divl
pop
mov
push
rcl
bound
or
rorb
icebp
loop
stos
inc
sbb
movsb
add
mov
xchg
mov
cli
hlt
inc
inc
mov
in
jl
es
lock
je
shl
push
aad
pop
and
fsubr
pop
loope
push
cmp
push
std
imul
scas
ret
mov
jge
or
push
cmc
rcrb
pop
sahf
scas
loope
lds
lock
mov
xchg
mov
enter
sub
xor
pop
pop
sub
icebp
inc
popa
sbb
sbb
test
mov
xor
xor
ljmp
lcall
mov
icebp
jle
cmp
insb
sbb
or
inc
adc
xchg
inc
lret
daa
push
mov
cltd
ss
adc
push
jle
mov
roll
add
sarb
mov
cltd
in
sbb
fidivs
cli
push
push
mov
lods
fidivrl
js
mov
cwtl
cwtl
repz
ja
inc
add
out
push
ret
cs
cs
or
mov
cltd
movsb
jne
mov
mov
bound
fcomps
mov
and
and
dec
daa
test
fbld
adc
push
mov
fldenv
icebp
mov
imul
nop
mov
rcl
and
ret
dec
push
stc
xchg
out
pop
cmp
mov
inc
out
and
cmp
jns
test
sub
jne
loop
inc
jne
adc
aas
mov
ficomps
cmpl
adc
inc
pop
movsb
mov
sub
out
pop
and
cmpsl
stos
icebp
mov
dec
js
inc
aaa
cwtl
movsb
ret
xchg
xor
je
pop
aad
pop
lahf
and
jp
ljmp
mov
sti
add
push
adc
dec
lods
repnz
icebp
mov
icebp
ljmp
pop
add
mov
push
sbb
mov
hlt
pusha
add
xor
scas
push
or
out
mov
push
in
jge
ljmp
cmpsb
call
add
inc
sbb
mov
shrb
cmpsl
push
pop
sbb
aam
cwtl
mov
cmove
mov
ret
lds
mov
jecxz
std
js
fcoml
push
sahf
jle
in
rolb
lahf
addb
loopne
add
ljmp
mov
add
sub
push
loop
xlat
js
push
or
gs
jno
xchg
add
and
nop
in
and
scas
jle
bound
inc
mov
sub
subl
scas
icebp
icebp
jmp
stos
push
mov
or
mov
cwtl
and
pusha
mov
loope
add
sub
pushf
cmpsl
xor
loope
adc
test
lods
inc
jle
mov
das
jbe
dec
mov
rcl
stos
pop
push
or
adc
mov
loopne
xchg
push
lcall
cmpsl
fists
mov
or
sbb
jecxz
cs
cmp
or
mov
stos
push
popa
push
and
dec
push
gs
pushf
mov
mul
psubusb
sub
sbb
andb
pop
lret
mov
xchg
mov
dec
and
movsb
cmp
cmpsb
sbb
clc
popa
push
addr16
popa
adc
or
add
add
insb
dec
pop
mov
ja
mov
es
js
mov
fdivr
fisubs
loopne
aam
cmp
jo
lods
inc
loopne
jne
push
orb
nop
sti
sub
aaa
jbe
mov
pop
dec
fwait
and
mov
and
lahf
jb
cmpsb
pushf
repz
js,pt
jbe
cwtl
xchg
clc
mov
lret
xchg
sahf
fcoml
and
cltd
pusha
dec
sbb
push
out
roll
dec
ret
add
mov
push
push
mov
lock
mov
inc
rcr
cmpsb
mov
aas
test
dec
sbb
sbb
lds
sarl
inc
std
mov
iret
ret
lock
adc
pusha
add
jge
daa
ret
in
in
dec
lods
or
and
cli
stc
cli
inc
in
sbb
xchg
add
cmpl
ljmp
xor
inc
mov
push
out
ret
mov
xor
inc
fdivl
pushf
dec
inc
jecxz
lahf
dec
jb
xor
es
lahf
dec
loopne
hlt
mov
or
jl
sbb
add
arpl
jbe,pt
mov
mov
lds
stos
jnp
push
filds
enter
idivb
test
pop
mov
fdivr
fcomi
aas
cmp
je
adc
sbb
jo
out
lret
cmp
and
cli
cmc
in
xchg
mov
mov
mov
add
movsl
lock
mov
adc
pop
or
inc
cmpb
jo
jl
nop
lods
sbb
mov
sub
arpl
shr
dec
scas
sbb
push
mov
addr16
ds
fisubrs
scas
pop
insb
pop
inc
push
sbb
pop
sahf
data16
jb
push
and
jns
daa
push
and
scas
stos
cmc
dec
ret
shlb
ss
mov
dec
jmp
cmp
pop
hlt
add
mov
aam
cmpsb
loop
push
inc
fnsave
adcl
fnstcw
clc
test
nop
jo
dec
gs
adc
jnp
mov
bound
cld
mov
xchg
pop
mov
add
and
int3
jne
rcll
idivl
xor
adc
std
lock
rcll
mov
pop
mov
lock
fnstsw
xchg
imul
shlb
jecxz
cwtl
jo
leave
repnz
push
pop
pop
nop
daa
inc
cmp
clc
loope
mov
cmovne
xor
ret
sbbb
loope
jle
bound
dec
jge
xor
addl
inc
sarb
sahf
sbb
popf
dec
aaa
push
cmc
mov
adc
jnp
or
and
clc
pop
and
mov
jmp
jbe
mov
orl
add
idivl
loopne
cmp
pusha
shl
aad
adc
adc
mov
lock
jo
cmp
mov
cvtpi2ps
or
lds
cmc
adc
adc
push
mov
mov
loope
rol
mov
push
adc
cmp
stos
add
mov
std
clc
jmp
fidivrl
pop
test
jne
cli
and
jle
faddl
les
mov
pop
xchg
lret
mov
bound
and
les
outsl
ljmp
sub
sbb
push
inc
lock
or
mov
and
mov
aas
std
and
cli
ficompl
inc
xor
adc
sti
ljmp
xor
push
xlat
les
icebp
cltd
ret
sar
sbb
js
jne
fsubrl
cmpsl
xor
fsubrs
rcrl
push
cmc
push
loopne
gs
inc
inc
idivl
lea
test
lock
mov
imul
daa
ret
lahf
es
or
inc
jp
or
mov
xor
arpl
push
push
inc
jge
mov
jge
cmp
ds
pop
push
cmp
movsb
push
pandn
pop
sbb
push
jle
shrl
push
inc
add
mov
pop
bound
lcall
cli
orb
sti
jb
sub
adc
data16
inc
js
ds
mov
cmp
jmp
jo
inc
popf
insl
cmpsb
inc
std
subl
fs
ret
loopne
mov
ret
cli
mov
mov
inc
scas
mov
cmp
lds
in
sub
pop
dec
in
or
cmovns
adc
mov
adc
xor
hlt
sti
sub
pop
std
in
sub
jnp
fidivs
outsb
adc
movsb
dec
pop
test
jle
icebp
mov
lods
push
fcmovb
jnp
jge
lret
mov
dec
test
adc
xchg
sub
add
jmp
adc
test
les
mov
mov
mov
loopne
fbld
mov
xchg
add
or
scas
jne
loopne
scas
fistpll
ret
out
pop
test
sub
lods
sahf
jle
test
mov
sbb
xorb
shll
inc
mov
fidivrl
test
pop
cld
cmp
ljmp
mov
push
aad
add
mov
sti
jle
out
dec
movsb
adc
bound
push
push
pop
mov
adc
andl
pop
cmp
push
push
push
sub
scas
popa
js
jle
dec
push
incb
rorb
enter
fmull
inc
sub
test
xchg
pop
mov
test
pop
cwtl
fwait
js
pop
pop
add
lock
sbb
out
das
adc
inc
ret
and
and
cmpsl
or
loop
adc
cltd
clc
sti
mov
ss
pop
jp
add
mov
add
push
jl
movsl
testb
insb
mov
pop
pop
std
clc
xor
es
lock
call
ja
cmp
push
and
cmp
repnz
sbb
xor
and
imul
mov
pusha
into
les
push
ds
sbb
sub
fmul
decl
scas
mov
rolb
xlat
dec
pop
xchg
cmpsb
cltd
add
clc
ljmp
into
clc
pop
iret
rol
idivl
jbe,pn
ficomps
add
rclb
dec
icebp
jle
insb
inc
cmp
sub
mov
pop
push
xchg
daa
and
fcmovu
push
add
sahf
mov
es
movsb
loopne
test
repnz
fstpt
push
push
icebp
rorb
mov
xor
dec
dec
dec
call
dec
jp
mov
jbe
movsl
xor
sub
stc
addr16
call
push
dec
loop
xchg
mov
das
mov
mov
fildll
shlb
lcall
mov
ds
sub
test
xchg
out
or
jne
addl
jp
outsb
cmpsl
in
xor
mov
cs
mov
push
mov
push
or
mov
xchg
mov
in
and
nop
cmp
filds
hlt
adc
mov
jl
mov
xor
cltd
mov
pop
pop
and
push
call
add
loop
lds
push
shl
mov
jmp
add
push
cli
roll
roll
and
ret
sti
loopne
sahf
mov
cs
lret
stos
shr
je
fdivrp
loop
roll
xchg
cmpsl
add
xor
pop
mov
pop
shl
out
lahf
adc
and
pop
pop
sub
jo
cmp
mov
dec
pushf
es
cs
mov
lret
mov
fs
ror
mov
adc
adc
push
cli
lock
lock
dec
ds
js
out
aaa
push
cmp
lcall
inc
inc
aas
mov
push
shl
jle
out
sbb
xor
fdivs
mov
and
mov
add
int
cld
adc
jge
mov
or
add
sbb
jnp
test
or
sti
push
incb
xchg
push
mov
loopne
mov
pop
lock
movsl
push
loop
xor
cld
mov
clc
or
or
inc
jg
push
rcrb
jle
mov
mov
push
sbb
sti
aad
imul
shlb
jne
add
ret
adc
cmp
repnz
sub
xlat
xchg
jns
add
pop
mov
sbb
test
cli
cmp
xchg
mov
mov
add
cmp
nop
js
sbb
je
xlat
out
lcall
js
mov
arpl
adc
arpl
jns
stos
jl
cmp
bound
out
in
inc
std
push
jno
and
popa
fs
and
add
loope
cs
je
je
pop
rcr
and
inc
xchg
jno
cli
cmc
cmp
push
and
mov
jecxz
enter
jns
jb
adc
test
repnz
or
mov
xor
fxrstor
mulb
subl
dec
icebp
fwait
and
dec
sub
xchg
icebp
ss
es
pusha
and
lahf
mov
stc
xorb
or
or
out
pop
mov
shl
adc
les
mov
adc
xchg
movsb
fwait
sbb
sbb
mov
pop
xor
xchg
rclb
sub
js
mov
and
lret
pop
xchg
scas
addb
fbld
or
aam
pop
mov
inc
scas
add
push
je
jns
out
orl
sub
cmp
andl
js
jp
push
xor
pop
shl
lods
sub
lret
outsb
out
cmpl
aaa
mov
rclb
ret
mov
sar
jmp
jecxz
add
lds
loop
repz
pop
xor
xchg
pop
mov
negb
xchg
xlat
or
adc
adc
sahf
and
xor
rorb
dec
mov
xor
adc
insb
repnz
ja
out
mov
xchg
adc
sub
mov
adcb
lods
lret
lock
std
push
scas
sti
inc
push
fists
mov
xchg
adc
subb
rol
or
cmp
push
sub
mov
sbb
inc
cwtl
es
cmp
jo
inc
jl
jae
int3
mov
mov
push
into
test
sbb
mov
icebp
inc
adc
int
inc
pop
jo
sahf
pop
cmp
cmp
mov
ja
sub
pop
push
es
cltd
adc
xchg
cmp
loop
rcrl
dec
cmpsb
jmp
pop
mov
sbb
mov
jecxz
shrb
cmp
daa
adc
idivb
mov
mov
sti
rolb
rcrb
outsb
outsb
cmpb
jmp
sbb
and
rolb
xlat
outsb
cmp
jmp
xchg
out
sbb
and
fiaddl
rorl
bound
dec
pop
shlb
sbb
add
mov
test
out
pop
add
cmpsb
mov
in
cmpsb
stos
roll
in
adc
mov
fbld
out
int
jmp
and
inc
in
repnz
mov
shlb
sarb
sub
mov
and
lea
xchg
mov
bound
push
mov
rclb
loopne
filds
les
stc
shrb
mov
and
or
push
cli
jo
sbb
popa
dec
xchg
test
mov
call
jl
out
sbb
testl
das
loopne
push
cmpsb
dec
ds
mov
js
cli
clc
jmp
cmp
adc
jl
sbbb
xchg
stos
pop
jb
jb
sbb
sarb
in
dec
xchg
xor
mov
or
mov
pop
daa
mov
in
jp
adc
adc
inc
rol
cmc
inc
int3
jl
js
and
or
insb
mov
mov
and
dec
mov
movsb
js
dec
pop
loopne
cmovbe
inc
mov
imul
jp
rolb
push
jle
mov
int
mov
mov
jae
int3
in
inc
add
add
cli
sub
sahf
sub
addl
aas
dec
lcall
into
imul
xchg
xlat
cmc
xchg
mov
and
aam
leave
js
cli
mov
aas
pop
cmp
xlat
out
sbb
ljmp
shll
in
test
inc
lods
jb
lods
inc
push
or
test
je
push
sbb
inc
lock
into
xchg
and
mov
js
inc
popa
insb
add
jp
insl
xor
rclb
in
xor
xor
pusha
int3
pop
in
adc
cmp
lret
andl
cmpsb
out
and
call
sub
and
pop
mov
mov
inc
adc
out
shlb
mov
test
js
push
adc
sahf
in
loope
loope
jmp
xlat
cmp
ljmp
adc
sbb
jge
mov
iret
jbe
push
imulb
xchg
int3
push
xchg
sub
jp
mov
xorl
sbb
jge
repz
dec
mov
pushf
or
or
in
xchg
nop
lock
loopne
adc
push
sbb
test
sbb
cwtl
inc
out
or
inc
cli
test
adc
cli
or
ds
jno
lea
xchg
mov
sbb
cmp
sub
mov
add
mov
dec
or
sub
test
cs
imul
or
mov
cwtl
fsubl
adc
sbb
insl
outsb
xor
in
jle
push
ficoms
int3
pop
xchg
pop
adc
mov
mov
jl
sbb
aad
in
out
cmp
repz
movsl
push
sbb
test
imul
mov
sti
pop
andb
pop
nop
or
mov
cmp
mov
pop
jle
jo
mov
ret
and
adc
xor
insb
pop
xor
jp
mov
je
lock
pop
mov
xchg
cmpb
push
mov
or
rorb
add
std
icebp
ret
shrb
sbb
push
scas
xor
sbb
pop
push
enter
loope
ret
ret
and
xor
xlat
push
es
mov
cld
aaa
pop
imul
js
pusha
cs
dec
clc
in
scas
dec
pop
jg
add
sub
jno
subb
repz
mov
jmp
push
adc
mov
push
sbb
mov
insb
mov
cmc
add
lret
fmuls
lcall
call
push
lahf
dec
adc
sbb
jge
clc
hlt
or
nop
and
mov
push
inc
xor
xchg
pusha
test
mov
je
mov
loop
mov
and
jl
mov
rcrb
faddl
push
sbb
add
icebp
icebp
sti
jno
inc
sbb
mov
jle
cmc
or
inc
int3
dec
mov
sub
scas
jp
hlt
sbbb
or
jle
sbb
gs
mov
mov
in
jmp
cmp
lret
rolb
inc
movsb
out
lock
xchg
shlb
mov
mov
sub
stc
sbb
clc
mov
rolb
es
cltd
push
xchg
sub
inc
repnz
dec
inc
fistpll
hlt
shll
subb
sub
pop
and
xor
mov
pushf
push
mov
xchg
movsb
ds
jbe
popf
sub
xor
jbe
cs
jge
cmpsb
dec
popa
loop
mov
inc
inc
jl
sub
movsb
pop
es
lea
jb
mov
inc
or
pop
jmp
sub
sub
jbe
into
cs
rolb
dec
jl
loopne
outsb
xchg
cwtl
sub
into
icebp
mov
test
les
add
pop
pop
pop
mov
xchg
psubusb
sbb
repnz
mov
hlt
out
fs
sbb
cmp
subb
pop
aas
pop
push
pop
pushf
int3
mov
insb
push
wbinvd
jl
jecxz
scas
push
mov
shrb
lret
mov
stos
fst
jge
sbb
cmp
jne
inc
lock
gs
es
or
cmp
mov
xchg
lret
es
pop
cmp
mov
pop
pop
fs
mov
inc
mov
fcomps
cmp
rcr
rolb
mov
xor
lock
into
je
xchg
sub
icebp
add
cs
sub
jle
loop
add
mov
ret
jle
pushw
or
xor
loop
out
xchg
pusha
add
cld
xchg
lods
call
mov
insl
outsl
mov
sahf
orb
sbb
inc
sbb
and
mov
call
mov
jne
pusha
cmpsl
sbb
jge
sti
mov
mov
dec
push
loop
loop
inc
movsb
sti
mov
xor
aam
xor
adc
and
loop
inc
loopne
and
add
cmp
and
mov
push
push
dec
shrb
or
mov
push
mov
inc
je
pop
xor
addb
pop
mov
loopne
or
dec
sub
movb
adc
mov
es
cmpsl
mov
push
addb
mov
popa
add
gs
mov
insb
or
or
push
into
xor
fwait
loopne
movsb
cmpl
lds
mov
pop
push
dec
loopne
aas
cmpsb
inc
lcall
adc
lock
ret
add
cld
fs
or
lods
ja
mov
ficoms
xchg
cli
out
aam
movsl
mov
sub
das
outsl
dec
sub
loopne
sbb
sbb
cwtl
test
daa
pop
cli
mov
xchg
or
push
out
xor
rcr
rclb
dec
ljmp
add
pop
mov
jp
add
adc
pusha
sub
mov
mov
mov
ds
pop
xchg
out
movsb
add
cli
icebp
loop
xor
or
mov
dec
dec
fnstsw
adc
inc
popa
cmc
sbb
cmp
ja
idivl
and
push
ret
clc
in
out
addr16
stc
lcall
pop
mov
xchg
jmp
lds
xchg
xchg
fisubrl
inc
mov
pop
shlb
das
sarb
mov
sahf
in
inc
lods
aaa
mul
mov
sbb
out
fstps
cmp
into
in
sub
fwait
lock
sub
mov
fs
xor
xchg
lahf
mov
xor
jecxz
rol
mov
mov
jo
lret
fists
ds
loop
rorb
cmpsl
inc
pusha
lods
orb
add
jecxz
and
arpl
cmc
cli
jbe
cmp
jne
loope
mov
lret
fisubrl
ljmp
pop
cmp
ds
pop
jle
scas
inc
mov
xor
cld
cmpsl
mov
or
push
sahf
or
clc
popa
ljmp
mov
or
xchg
fldt
pop
jmp
ds
loopne
inc
sub
jecxz
std
jb
jge
pusha
xor
cmp
into
pushf
inc
add
scas
lret
cmp
inc
add
xor
xor
sub
in
mov
in
ret
pop
adc
mov
in
cmp
or
sub
lcall
sub
pop
test
jl
movsb
and
ss
mov
pop
js
or
and
nopl
fwait
nop
ja
shrb
xchg
je
das
test
jp
ja
cmp
jp
add
or
push
shrb
dec
sbb
insl
insb
sub
pop
mov
sbb
das
loope
sbb
sarb
sub
ret
pop
jne
cmc
mov
mov
test
xlat
fs
rolb
or
and
aas
push
jle
fldt
scas
movsl
rcr
and
push
jle
mov
ljmp
dec
pop
xlat
xchg
jl
inc
imul
pushl
jb
std
clc
push
rorl
mov
out
mov
aam
enter
pop
adc
ss
gs
mov
ret
pop
enter
pushf
out
pushf
sbb
add
xor
lea
insl
jge
out
lahf
mov
dec
out
das
insb
add
fcomps
push
fxtract
stos
aam
fidivrs
loopne
dec
inc
arpl
sub
mov
and
int3
add
cmp
push
pop
pushf
cltd
adcl
lock
sbb
pop
gs
xor
fs
pop
aaa
xor
or
int
ret
or
aaa
in
in
sub
xchg
outsl
jmp
hlt
int3
xchg
push
mov
movsl
gs
xor
into
fs
mov
add
cli
pusha
jl
jmp
mov
inc
movl
xlat
sbbl
mov
ret
or
nop
push
popa
sub
mov
rorl
or
mov
in
push
das
call
data16
sbb
and
and
add
lods
mov
or
pop
aas
cmp
mov
shll
adc
adc
adc
clc
lea
adc
orl
ror
jle
adcb
and
loope
movsl
cld
pop
mov
push
jecxz
jne
and
dec
in
int3
loop
out
xchg
push
xor
adc
test
lcall
cmpsb
mov
sub
scas
rcr
dec
jmp
adc
jp
roll
insb
packsswb
sbbl
mov
js
lcall
ret
adc
fcmovb
pop
jge
ficoml
pop
aam
mov
pusha
pop
add
pop
movsb
ljmp
repnz
bound
xchg
mov
cmp
icebp
or
mov
roll
lods
pop
sub
jecxz
inc
sbb
lahf
pop
out
sahf
int3
push
sahf
gs
push
mov
inc
or
xchg
lods
jp
les
mov
mov
aaa
mov
pop
fs
test
inc
xor
popl
scas
cmp
mov
push
jle
fs
mov
xchg
jno
mov
pop
adc
mov
push
adc
scas
out
testb
outsl
or
or
mov
sub
and
out
fisubs
sbb
jne
push
push
sbb
add
add
lods
imul
jp
or
adc
fs
xor
cmp
aad
popa
mov
test
jp
clc
dec
pop
jb
fs
aas
divb
mov
push
dec
mov
pop
test
movsl
jbe
xchg
and
adcl
jne
sarl
int
mov
nop
dec
mov
push
movb
xchg
jmp
and
cmp
sub
mov
sub
xchg
lock
sub
cmp
repnz
sbbl
fildl
mov
xchg
aad
fwait
fwait
fwait
inc
lret
rorl
adc
in
jo
sahf
aas
or
cli
cmc
sbb
or
lods
fdiv
das
jmp
sti
cmp
or
je
mov
js
or
xor
add
loopne
cmova
xchg
mov
push
pop
sbb
cmp
cmpsb
fs
pop
cmp
xchg
push
aas
xor
fstps
ljmp
mov
aam
js
lock
jb
call
mulb
mov
js
test
negb
loop
loope
aad
shll
in
or
jnp
sahf
jle,pn
lea
cld
dec
jl
xor
cmpsl
pop
jle
pop
lret
cs
jge
cmc
add
call
lea
mov
push
sbb
jg
mov
loopne
sbbb
dec
in
jp
push
xor
xchg
clc
cmp
stc
pusha
out
inc
test
push
dec
cmp
inc
xchg
mov
mov
pop
pop
fdivl
add
jmp
insb
cmpsw
xchg
hlt
fwait
rol
fmuls
and
mov
bound
xchg
pop
inc
inc
jo
mov
dec
out
orl
lods
mov
subb
mov
lcall
or
xchg
jle
jg
bound
mulb
je
movsb
cwtl
repz
cwtl
sbb
inc
rcrb
sbb
pusha
pop
mov
popl
sbb
mov
inc
inc
sahf
and
mov
push
scas
gs
and
cmovo
lods
xchg
test
ds
mov
aas
mov
jecxz
out
fmull
and
fsts
fnsetpm(287
add
dec
lods
or
xchg
stos
inc
jbe
push
mov
jp
xchg
xchg
sub
jge
loop
rcrb
push
in
mov
lock
loope
jp
loop
je
icebp
imul
xorb
adc
or
les
mov
mov
stos
xchg
pop
mov
scas
dec
adc
or
repnz
pop
stc
sbb
ret
mov
adc
aam
lds
setg
ret
and
inc
xchg
push
fisttps
inc
fs
pop
jb
in
mov
ret
mov
dec
les
or
inc
pop
mov
or
push
in
lret
jae
sub
icebp
mov
les
incb
fwait
movb
dec
mov
xchg
add
or
sahf
fcoml
mov
movb
sub
lock
add
mov
mov
aam
jno
bound
icebp
jbe
shl
in
sub
inc
insl
mov
push
mov
out
je
pop
std
mov
adc
pusha
add
push
inc
add
outsl
cli
push
mov
xchg
pop
sub
in
mov
cld
sets
mov
ret
insb
xchg
icebp
adc
lret
add
icebp
es
daa
mov
mov
into
rcll
inc
js
loopne
push
push
sbb
mov
pop
pop
jp
mov
loop
out
pop
jp
jns
jl
pusha
mov
xor
dec
ret
sbb
jp
call
cmp
push
icebp
sbb
popf
in
lock
icebp
arpl
repz
fs
cmp
or
fbstp
rcll
les
jp,pt
jg
sarb
pop
je
or
xor
dec
or
comiss
rcll
adc
out
test
repz
loopne
xorl
xor
ficompl
push
fcomip
xchg
jle
js
loopne
out
or
rolb
pop
hlt
or
aad
or
pop
and
pop
in
bnd
mov
lea
sbb
cmpsb
push
loopne
inc
add
loope
mov
pop
cwtl
push
mov
imul
cmp
mov
fwait
je
out
push
push
cmpsb
stos
push
fistps
aaa
sbb
ucomiss
xor
or
lock
dec
inc
push
mov
inc
pop
push
sbb
test
ret
movsb
shlb
pop
aas
fs
sahf
mov
inc
aas
jge
outsb
ljmp
addl
sub
fcmovnb
pop
clc
mov
pusha
pop
rorb
cmp
push
cmpsl
xchg
push
and
cmp
scas
ds
mov
xchg
cmpl
lret
push
dec
mov
mov
std
cmpsb
pushf
call
adc
sbb
incb
xlat
inc
fbld
pop
push
leave
test
mov
out
scas
adcl
inc
in
aad
test
rclb
rorl
dec
dec
hlt
fnsave
mov
pop
test
pusha
mov
loope
ret
scas
jo
iret
sti
sbb
clc
js
xchg
fs
lcall
ljmp
or
sbb
ds
cmc
in
mov
xlat
adc
mov
int3
rcll
and
ret
mov
lret
xor
xor
mov
orb
mov
out
aas
push
jl
inc
outsl
mov
xor
pop
lea
mov
cmc
jecxz
hlt
pop
push
mov
dec
stc
mov
mov
loop
dec
rcr
je
and
pop
mov
xor
fiaddl
cmp
rcr
push
xor
add
in
call
inc
push
and
jge
mov
idiv
pop
jmp
cld
stos
mov
movsb
push
test
xchg
sbb
push
clc
enter
dec
sbb
pop
cld
pop
cmpb
dec
or
jmp
jl
inc
ficompl
les
jge
testb
jno
xchg
jo
adc
dec
add
mov
scas
dec
loopne
loop
mov
popf
add
out
shll
loop
push
add
jae
hlt
jmp
dec
push
and
iret
add
and
cmp
test
movb
mov
popa
loop
rclb
jecxz
adcl
inc
sbb
and
mov
les
loope
fdivs
sbb
xor
cmc
push
inc
mov
enter
mov
push
cmp
pop
sub
lods
lahf
xchg
jle
mov
jecxz
sub
jbe
xchg
pop
mov
fwait
add
add
inc
sub
pop
adc
xchg
loopne
mov
loope
and
mov
push
loopne
ljmp
pop
sub
mov
andl
add
sub
push
pop
push
push
loope
jge
or
mov
ret
sbbl
fcoml
cmpsb
lock
mov
mov
loope
mov
dec
and
add
stc
xor
mov
loopne
inc
inc
das
and
mov
ret
movsb
sub
cmp
jo
xchg
mov
jo
jnp
sub
push
push
int
pop
adc
mov
int
int
mov
add
int3
shlb
jbe
sub
pop
pop
mov
loopne
js
je
pop
int3
xchg
insb
loope
fimuls
stos
out
popa
mov
test
or
jno
mov
sbb
mov
mov
pop
xor
adc
push
push
push
ljmp
mov
setle
mov
fbld
jle
out
adc
ficompl
lock
imul
mov
jo
push
mov
loop
sub
test
and
sarl
cmp
psrad
xchg
hlt
dec
js
add
sub
dec
mov
cltd
cmp
dec
call
or
lahf
fidivrl
je
insb
std
sub
pop
fdivp
daa
sub
sahf
outsb
jne
loopne
fsubs
pop
mov
cmp
jbe
in
xchg
jnp
xchg
shlb
or
xchg
sbb
pop
aaa
mov
push
inc
xchg
lret
mov
jl
jecxz
push
mov
nop
dec
daa
cmc
jnp
sub
insb
sub
mov
cmpsl
add
hlt
sbb
fcomp
jbe
lcall
test
xor
loopne
mov
les
cli
out
les
lds
dec
jp
clc
lods
dec
clc
in
sahf
lret
sahf
add
or
ds
sahf
adc
in
out
aam
dec
out
sbb
pop
mov
sbb
push
enter
push
ret
mov
jge
jo
jbe
dec
and
cli
clc
loop
add
dec
sub
sti
stos
cmp
icebp
xchg
cmovp
sbb
push
mov
ficomps
fdivs
stos
xor
dec
jp
push
or
pop
out
pop
xchg
push
rcr
in
jns
test
loopne
data16
pop
mov
inc
inc
jg
cmp
int3
ljmp
push
adc
and
scas
push
ret
mov
xor
and
xor
insb
outsb
mov
ret
or
cmpsb
inc
jmp
mov
xchg
xchg
lods
or
fcmove
mov
mov
aas
push
subb
jl
inc
cmp
fsubrs
insb
sbb
push
inc
lret
fidivrs
or
inc
pusha
sub
pop
lds
ss
adc
addl
cld
and
and
adc
pop
in
lea
ret
stc
and
dec
pop
mov
mov
push
dec
cs
inc
test
cli
pop
call
mov
adcb
rclb
icebp
add
sbb
jg
jge,pt
sbb
ds
cmpsl
clc
xor
dec
ss
cmc
hlt
sbb
rclb
mov
pop
or
sbbl
je
cwtl
shlb
js
inc
jo
call
aaa
stos
sub
xor
call
cmpsl
pop
aas
jge
cmpsl
stc
and
add
push
pop
lret
and
lds
clc
mov
fiaddl
jl
xor
push
mov
hlt
loop
sti
fsubrl
cli
push
inc
jp
mov
jnp
fsubl
or
push
mov
subb
das
mov
add
add
and
dec
jmp
ffreep
inc
out
jg
pusha
fcmovu
adc
inc
jl
adc
imul
mov
call
or
sub
sbb
sub
sub
cmp
inc
aaa
int3
adc
fs
cmc
loopne
aad
leave
xchg
mov
xchg
cmp
insb
mov
adc
out
push
mov
dec
add
adc
sbbb
sbb
lock
cmpb
push
int3
movsl
bound
pop
and
mov
nop
push
adc
js
sarb
aaa
fisttps
outsb
rcr
jno
xorl
and
push
loop
jg
push
pushf
in
addr16
lock
jl
pop
push
fdivl
push
cmp
fiadds
shlb
jb
shr
xchg
out
fwait
rol
mov
mov
nop
test
inc
das
or
add
inc
inc
push
jp
loopne
mov
xor
adc
xchg
push
jl
insl
pusha
inc
pop
xor
sub
sbb
ret
jl
les
mov
imull
pop
push
push
es
mov
addr16
or
bound
inc
pop
push
daa
add
adc
cmp
scas
sub
sysret
filds
clc
lds
aas
lea
lea
dec
pop
fisubs
and
fbld
mov
dec
xchg
mov
mov
icebp
push
stos
testl
call
test
scas
pop
jg
sti
loopne
xchg
mov
clc
out
and
lods
mul
scas
pop
cmp
adcl
inc
push
jge
jbe
imul
xchg
test
push
mov
and
jo
test
mov
cmp
pop
jb
fistpl
mov
or
jle
fcmovbe
scas
ds
je
mov
mov
ficoms
or
movb
inc
cmp
mov
inc
cmp
pop
test
bound
jl
cwtl
je
test
jge
scas
pushf
sbb
pop
aad
nop
out
mov
das
ficompl
push
pop
xchg
push
orl
add
jl
sub
mov
pop
cmp
jns
mov
icebp
ret
not
and
jle
xor
sub
lret
lret
js
push
popl
pop
xor
mov
andl
jnp
add
fimull
imul
cmp
mov
jp
out
out
sbb
push
or
xor
pop
std
push
mov
adc
data16
pop
add
bound
xchg
xchg
jle
pop
jl
and
add
xchg
sahf
xchg
adc
inc
inc
or
arpl
clc
cmp
sub
or
mov
jl
ljmp
pop
mov
sahf
adc
std
js
lods
mov
orb
push
pop
shlb
les
ret
mov
xchg
dec
testl
sbb
add
les
enter
cld
xor
push
je
xchg
inc
sbb
push
ss
pop
das
or
mov
xor
sbb
pop
jbe
add
cmp
jp
js
and
ds
jle
je
xchg
in
cltd
and
add
mov
and
insl
lahf
inc
aas
adc
cmpsl
inc
lret
lods
sti
test
adc
jp
mulb
iret
test
push
mov
testb
aas
test
mov
dec
or
pop
les
js
lock
pop
xchg
pop
jecxz
aam
push
cmp
hlt
loopne
and
mov
mov
adc
jle
in
es
adc
xor
in
icebp
sub
das
mov
jo
push
jp
inc
test
mov
jg
ror
in
cld
and
stos
add
dec
popl
je
jle
shrb
pop
adc
mov
or
and
orl
out
jo
into
mov
jp
ljmp
adc
fadd
xchg
push
icebp
xchg
xchg
push
jge
addl
and
mov
testb
mov
dec
fnstcw
mov
cmp
stos
inc
push
xor
sub
lret
cmpps
xor
outsb
outsb
outsb
or
shrl
pop
ds
scas
inc
adc
ljmp
pop
sbb
cmp
xchg
ds
mov
nop
out
xchg
mov
mov
adc
jnp
daa
mov
loopne
clc
adc
rorl
insb
aas
push
adc
push
mov
popa
mov
jmp
pushf
jbe
push
fidivs
sahf
xor
sahf
scas
daa
cltd
js
insb
cmp
cltd
inc
and
mov
adc
xchg
mov
mov
and
or
fists
cli
fcmovnbe
ss
ss
outsb
stos
test
insl
nop
adc
cli
rcrb
or
outsb
push
mov
mov
push
loop
pop
mov
in
pop
pop
js
mov
das
pop
push
outsb
and
inc
aas
or
jle
inc
loopne
mov
jge
js
push
dec
insb
or
push
les
and
and
add
pop
or
or
dec
sbb
mov
into
movsb
enter
loopne
jmp
mov
mov
inc
arpl
push
sarb
cmp
mov
and
xor
sbb
dec
cmp
lea
adc
fcmovnb
pop
cmp
cs
or
sbb
into
cmp
cmpsb
shlb
jp
pop
stos
and
mov
cmpsb
push
xchg
mov
mov
or
xchg
push
xor
xor
mov
ds
cmp
or
inc
jl
xchg
shlb
mov
push
push
inc
pop
xchg
or
loopne
scas
pop
inc
jle
sub
sub
cwtl
outsb
js
jle
xor
add
jnp
pop
and
sbb
outsb
mov
lea
and
cld
cmp
add
scas
push
rep
pop
cld
push
xor
out
es
cmpsl
xchg
adc
or
std
lock
mov
or
xchg
loop
dec
mov
test
in
cmp
icebp
loope
xchg
push
or
add
stos
out
mov
and
adc
xchg
cli
adcb
sahf
and
add
mov
push
mov
xchg
jbe
mov
outsb
rolb
rcrb
les
dec
mov
je
mov
scas
or
bound
loope
jmp
scas
or
dec
insb
inc
or
aad
lock
push
sub
xchg
sti
insb
dec
rcrl
xchg
sbb
or
mov
roll
push
pushf
jbe
lods
add
cmp
xlat
sbbb
or
mov
mov
push
les
mov
movb
cld
rorl
sub
push
mov
dec
out
mul
arpl
stos
push
sahf
xchg
and
xor
xor
lods
adc
pop
addl
pusha
sub
jl
dec
mov
loopne
mov
dec
fisubrs
or
cmp
mov
inc
mov
stos
push
insl
and
jno
or
and
iret
jno
mov
testl
test
iret
add
stos
fiadds
das
sub
xor
cmpsl
mov
sub
std
clc
nop
cmp
pop
js
ljmp
sti
pop
mov
lret
in
pop
or
iret
sub
pop
sahf
add
jne
loop
hlt
mov
in
push
mov
cs
int
jns
and
cmp
dec
xlat
cmpsb
sub
fdiv
fiaddl
jecxz
pop
into
jg
mov
test
outsl
call
clc
push
mov
pop
scas
loopne
ds
pop
js
push
mov
push
call
lret
push
lock
lods
push
pop
gs
add
mov
mov
mov
jne
jle
fistps
adc
xor
in
lea
and
push
stos
test
clc
dec
push
and
adc
mov
ds
loopne
and
subl
sbb
mov
aam
out
daa
test
pop
add
mov
jmp
inc
ficomps
mov
adc
jge
sub
mov
pop
lret
add
xor
and
mov
in
mull
inc
sub
sub
pop
cmp
out
mov
pop
jl
sarl
or
cs
mov
and
xor
bound
push
lret
xchg
jmp
cmp
jbe
or
jp
icebp
xchg
mov
mov
mov
mov
inc
clc
imul
aad
pop
call
test
jecxz
adc
jb
call
pop
mov
jg
test
mov
js
fbstp
pop
addr16
adc
icebp
push
mov
xor
dec
enter
into
xchg
pop
std
sub
mov
pusha
xchg
sbb
xor
sbb
hlt
or
jo
fisubrl
sbb
jns
push
cli
cmc
jl
hlt
hlt
sahf
shrl
xchg
or
mov
lods
dec
data16
jmp
out
xchg
add
add
push
lret
sbbl
adc
bound
inc
add
lds
mov
aam
mov
sbb
jnp
loop
xchg
enter
jge
pop
call
push
pop
dec
js
pop
jl
stos
icebp
add
sub
into
mov
sub
pop
xchg
lock
aas
hlt
fldt
mov
hlt
jp
loope
loopne
test
nop
mov
call
shll
mov
add
push
mov
xor
js
pusha
jns
insb
fcomip
lds
push
es
inc
pop
jp
lea
aas
sbb
inc
mov
movsb
push
sti
lods
jp
mov
and
scas
push
movsl
add
mov
jg
pxor
inc
enter
pop
jl
dec
or
fs
sahf
jnp
cli
sbb
mov
insb
sbb
lds
push
jmp
test
xchg
adc
and
lods
inc
rclb
pop
insb
mov
loopne
test
xorb
push
xor
lds
pop
sub
pop
lret
loopne
stos
hlt
add
jmp
mov
stos
mov
dec
pop
pop
sub
paddq
sbb
movb
fdivs
hlt
hlt
fwait
pop
mov
xor
mov
jmp
mov
scas
sbb
loopne
add
dec
jl
sbb
sti
adc
or
mov
xorb
add
jge
rolb
das
pop
sbb
cmp
js
nop
stos
adc
pop
popa
mov
xchg
je
jbe
add
xchg
dec
pop
rolb
lods
and
mov
xchg
shr
and
or
loop
ljmp
loop
cmp
sub
add
ret
shlb
cwtl
or
adc
mov
loope
out
in
adc
lock
ficoml
clc
icebp
loope
stos
cmp
ret
aaa
xor
pop
aas
ds
mov
push
adc
inc
sbb
mov
lock
push
cmp
aad
es
stos
sarb
shlb
lcall
movsl
push
dec
cmp
test
jp
dec
scas
test
cmpsl
jl
jecxz
fcmovne
test
push
pop
add
ret
rorb
pop
test
dec
push
jae
sti
lock
rolb
or
cmpsb
es
dec
push
lock
loopne
mov
mov
sub
jecxz
push
pop
test
push
clc
or
and
mov
hlt
add
mov
into
or
sahf
xchg
sti
push
loopne
insb
stos
out
dec
cs
popa
test
fbld
jnp
add
cmc
ret
test
dec
mov
push
add
out
add
pop
dec
repnz
inc
out
dec
dec
loope
push
mov
mov
add
aas
jp
jnp
mov
mov
inc
scas
jle
inc
lret
xchg
stos
adc
ss
sub
lods
adc
mov
pop
inc
test
into
lods
sub
clc
jle
jo
mov
pop
ret
xchg
and
pop
adc
test
je
push
aas
sahf
push
or
mov
push
sub
jne
int3
push
jge
push
sarb
ljmp
dec
adc
dec
inc
in
int
jge
xchg
test
inc
sub
icebp
in
add
jle
loop
or
mov
mov
mov
pop
ja
std
push
rorb
hlt
jmp
in
push
aam
addl
mov
sbbb
popf
popf
pop
mov
leave
add
lret
call
insb
inc
inc
push
aas
fimuls
mov
repz
jne
or
sub
mov
mov
add
ljmp
inc
xlat
rcll
stos
push
inc
outsb
js
add
movsb
xor
call
popa
jge
in
sarb
clc
xchg
push
pop
mov
pop
fwait
push
jle
cmp
jo
xchg
inc
pop
pop
std
clc
mov
and
out
fidivrs
stos
arpl
or
and
add
insl
adc
js
fdivrs
lcall
sahf
mov
fbld
push
imul
cltd
adc
loop
mov
pusha
add
mov
cmpsb
mov
aam
mov
adcb
adc
inc
sahf
push
jno
push
ds
pop
dec
sub
dec
pcmpgtd
jnp
jmp
iret
lods
xchg
inc
daa
clc
faddl
scas
test
jg
push
xor
cwtl
sahf
loopne
das
or
mov
jmp
xor
testb
mov
adc
adc
and
pop
jl
pop
inc
mov
dec
jg
data16
mov
jo
sub
mov
mov
call
mov
clc
sub
pusha
sbb
repz
or
jp
mov
dec
pop
outsl
xchg
in
dec
xor
mov
mov
push
sysenter
lahf
test
mov
ret
jbe
hlt
jle
lock
insb
cmp
push
cmc
lock
jno
je
and
stc
test
nop
ds
add
mov
jle
inc
and
fsubrs
ffree
ss
xchg
lock
cld
adc
cmpl
clc
into
mov
lock
push
xor
cmc
dec
outsl
fists
fistps
das
jecxz
setb
lods
jne
rcll
loopne
xchg
mov
dec
loop
mov
push
test
loopne
test
mov
lahf
push
mov
and
js
fimuls
xor
sub
imul
mov
mulb
jge
add
pop
push
ret
xchg
outsb
adc
loopne
dec
mov
cs
popf
jno
loop
mov
mov
jp
hlt
sub
lret
adc
mov
add
mov
cmpsb
rorl
out
pop
mov
xchg
stos
pop
pop
cli
lock
ror
sub
ds
xchg
add
nop
jo
mov
outsb
mov
cmp
insb
pop
imul
lahf
rorb
pop
pop
jle
xchg
inc
pushf
in
fnstenv
jb
ds
loop
fsubl
sarb
ficoms
and
mov
jno
add
and
hlt
gs
in
xor
outsl
loope
fs
loop
sbb
shll
mov
dec
imul
fcmovne
jp
loope
mov
push
lret
push
int
loopne
and
jle
lea
sbbb
push
mov
fildll
clc
dec
out
inc
insb
jge,pt
mov
out
push
call
pop
fnstcw
pop
cmp
rorl
mov
js
std
xor
jae
es
or
add
enter
clc
jp
js
pop
aas
movsl
data16
nop
xor
push
sbb
cmp
icebp
loope
mov
sub
lock
push
hlt
push
loopne
jae
mov
lea
sbb
cmp
loope
cmp
cs
pop
cld
clc
lock
add
push
scas
adc
lahf
lods
xchg
in
out
std
sub
dec
cld
std
inc
cmc
adcb
loopne
shll
and
inc
cwtl
cmp
mov
cmp
add
jl
fildl
or
loopne
sbbb
mov
cld
es
bound
js
sbb
js
loope
sub
xchg
pop
adc
cmp
inc
pop
cmp
cmp
imul
jle
mul
ret
int3
and
add
gs
jg
clc
inc
mov
sbbl
push
jo
loopne
pop
pop
sbb
cmc
jo
inc
dec
add
xchg
test
rcll
mov
inc
mov
or
or
out
adc
jnp
sahf
cmc
push
push
xchg
mov
pop
arpl
je
dec
or
push
xor
out
aaa
sub
xchg
pop
unpcklps
jle,pn
jo
mov
insl
daa
cmc
inc
js
scas
into
mov
mov
lcall
or
adc
mov
xor
dec
lahf
jo
enter
pop
leave
pop
mov
sub
sub
cmp
mov
fidivrl
aas
push
jns
loop
sbb
inc
sbb
mov
cmp
sbb
xchg
adc
push
cld
and
stos
shlb
fbld
clc
jae
push
movsl
inc
aam
or
arpl
pop
sbb
out
or
push
and
enter
mov
jno
mov
popa
add
js
daa
and
test
push
lock
int3
adc
xchg
movb
cld
out
xchg
mov
push
nop
push
dec
jle
or
mov
or
not
les
int
or
clc
ja
adc
leave
ret
mov
idiv
jmp
jne
pushf
orl
mov
adc
iret
in
push
cmp
rorb
rolb
addl
sbb
into
fidivl
test
andl
cmp
mov
mov
icebp
test
add
mov
call
subb
das
mov
mov
xlat
fsubrl
inc
sbb
ds
mov
push
faddp
push
pusha
and
ja,pn
negl
mov
mov
daa
dec
testl
adc
push
dec
pop
mov
cmpsb
cmp
mov
xchg
adc
sub
std
jb
push
cmp
inc
dec
mov
mov
ds
mov
fsubrp
inc
fidivrs
data16
les
ss
aaa
mov
or
xchg
gs
pop
aas
jl
lock
push
lea
pop
sarb
js
cltd
cmp
cli
xchg
add
mov
aas
add
pop
cmp
add
hlt
add
sub
fwait
and
inc
pop
cld
sub
bound
dec
enter
jno
movsb
subb
pop
add
sub
inc
ficomps
clc
jmp
jne
int3
or
sub
std
dec
sarl
add
mov
movb
cmpsl
test
fidivs
in
pop
jo
mov
call
test
push
out
lds
mov
dec
sbb
mov
push
xor
in
fnstcw
out
xor
mov
sbb
icebp
cli
mov
pop
lock
fmull
mov
mov
sahf
push
mov
fs
pop
xor
rolb
sbb
sub
mov
shlb
mov
or
push
fs
movsl
mov
cld
mov
outsl
sub
int
ja
ficoms
jg
mov
in
sbb
lock
mov
pop
subl
loopne
mov
dec
arpl
das
sbb
sbb
push
xor
mov
cmp
jno
js
jge
push
nop
mov
loop
stc
enter
outsb
cwtl
sbb
push
pop
movsb
stos
iret
test
xchg
push
test
ds
or
in
xor
pop
pop
aas
lea
dec
mov
and
dec
js
pop
mov
sar
les
cs
lods
bound
pop
cmp
je
fsubrp
fwait
imul
rorl
mov
notb
out
xor
sbb
clc
jno
lds
or
push
cmp
push
cmp
cmp
fwait
stc
sub
imul
cltd
xor
push
and
lds
adc
ret
jp
and
icebp
and
lods
jbe
push
pop
aam
icebp
mov
in
lcall
icebp
sbb
aas
jo
jle
js
loopne
mov
es
lahf
ds
pop
fldcw
push
and
sub
pop
cwtl
push
sahf
mov
mov
fs
dec
add
sbb
cs
dec
mov
icebp
aam
add
adc
ds
add
jnp
iret
jp
aas
dec
inc
mov
and
mov
jno
jns
sbb
fists
inc
lahf
mov
sub
add
iret
dec
jmp
sbb
ljmp
inc
dec
es
gs
sahf
int
loope
js
jmp
pushf
fs
lret
push
test
orl
roll
mov
push
das
push
sbb
out
mov
cs
dec
and
mov
out
jo
mov
in
shrb
lods
or
mov
repnz
iret
pop
idivb
nop
lods
add
cmp
outsb
ret
fidivs
mov
shrb
adc
repnz
insb
mov
ja
push
int
jl
adc
shlb
sahf
mov
mov
push
daa
push
push
pop
dec
push
push
mov
sub
inc
sub
fisttps
xchg
ss
pop
je
cs
insb
icebp
es
ljmp
je
jnp
test
outsb
arpl
cwtl
cmpsl
sub
pop
pop
sub
jb
hlt
push
jmp
cmpsb
std
lret
mov
mov
mov
mov
aad
jbe
jns
into
imul
or
lahf
dec
fwait
insb
dec
loopne
pop
fistpll
jecxz
imul
daa
clc
sahf
jae
inc
lds
push
pop
imul
adc
xchg
js
adc
lock
fsubl
cmp
sub
loopne
lea
loop
adc
lret
adc
icebp
mov
int
mov
hlt
adc
push
nop
lods
mov
subb
cld
mov
psubsb
test
push
pop
loopne
les
imul
xchg
pop
pop
into
jle
cld
outsl
sbb
inc
inc
arpl
inc
inc
and
mov
in
push
xchg
cs
xor
jp
xchg
lock
cmc
call
mov
jno
pusha
shlb
push
sbb
ljmp
imul
dec
mov
out
gs
filds
out
arpl
outsl
sub
movl
ljmpw
daa
adc
sub
je
jecxz
mov
mov
or
lock
movsl
push
arpl
xchg
loop
add
jnp
mov
xchg
or
mov
mov
lds
mov
pop
shlb
icebp
push
les
pop
or
push
lods
imul
jne
inc
mov
lahf
xchg
inc
jbe
lcall
iret
fldl
cltd
loopne
insb
imul
push
jp
pop
cmc
sbbb
ds
ljmp
push
jmp
subb
adc
pop
lods
pop
pop
js
imul
mov
mov
inc
in
cmp
ds
xchg
rol
ss
js
or
add
fdivr
pop
or
jle
daa
mov
cmc
or
in
rclb
or
popl
xchg
movb
aam
push
lcall
push
mov
nop
xchg
clc
mov
and
push
dec
test
rorb
ds
popf
cmpsl
bound
inc
sub
loop
jp
lock
cli
icebp
lcall
ss
sbb
inc
insl
out
clc
add
lea
lea
pop
insl
mov
dec
imul
pop
inc
ss
in
shrb
push
xor
mov
xor
mov
adc
xchg
mov
or
sub
dec
jmp
testl
jecxz
xchg
push
insl
sar
cmp
push
mov
rolb
jo
push
or
mov
mov
outsb
inc
cmp
or
jl
pop
xor
pop
jp
sbb
xchg
outsb
jle
adc
sub
ja
inc
and
ljmp
and
xchg
movsb
insb
cltd
xlat
test
insl
pop
sub
mov
ds
and
loopne
test
ret
lods
popf
mov
mov
arpl
push
mov
scas
out
sarb
jmp
mov
or
fmull
sbb
mov
xor
pop
mov
jnp
jle
push
inc
add
add
inc
push
jecxz
test
xchg
pop
addr16
js
add
loope
mov
dec
jl
sub
mov
imul
pop
xor
push
inc
and
loopne
loopne
mov
push
xchg
leave
out
cwtl
clc
mov
push
dec
xchg
shrl
sub
cmpxchg
bound
sbb
push
clc
mov
sti
jle
scas
or
les
mov
sbb
pop
mov
jo
push
cld
out
data16
pop
jl
pushf
push
notl
shrl
cmp
scas
push
stos
xchg
sbb
test
lods
mov
mov
push
lcall
aas
and
subb
adc
jl
adc
or
push
es
push
fstps
mov
mov
jp
cmc
leave
dec
mov
sub
push
jecxz
xor
ficomps
pusha
cmp
cli
bound
sub
jle
clts
iret
shrb
ja
call
push
mov
jo
insb
and
mov
pushf
push
ds
js
clc
data16
jnp
push
cmp
dec
push
pop
icebp
mov
stos
push
in
mov
mov
jo
int
sub
jl
aaa
test
pop
push
sbbb
jbe
mov
xor
mov
xchg
addl
jge
clc
dec
mov
add
cmp
dec
imul
fisttpll
xchg
xchg
fidivrs
shll
pop
js
push
fld1
std
roll
sub
repnz
sbb
scas
jne
push
inc
pop
xor
xor
mov
loope
ret
shlb
add
std
icebp
adcb
push
dec
push
jg
pushl
ret
jmp
std
and
mov
pop
add
mov
dec
out
cmpsl
jb
fmull
loop
xchg
clc
popa
in
jnp
mov
xor
movsb
adc
mov
pop
icebp
pop
mov
cs
test
sbb
mov
sbb
iret
fadd
cmp
mov
lds
insl
pop
push
jae
divps
loope
call
dec
stos
bound
add
dec
test
push
imul
or
jno
ljmp
sub
mov
pushl
nop
sub
inc
cli
lcall
lods
add
dec
add
mov
xor
jno
mov
call
shlb
ljmp
ror
sub
jmp
loopne
mov
xchg
cwtl
adc
sub
mov
xor
scas
mov
scas
shl
rolb
xchg
sahf
jo
jp
lcall
xor
inc
pop
ret
dec
loopne
xchg
xor
scas
push
sbb
jne
push
xor
jp
xor
xchg
xchg
or
das
push
data16
xorb
and
jge
out
hlt
mov
lret
lea
mov
cwtl
pop
jl
jle
clc
add
mov
mov
movsb
push
xchg
cmpsb
insb
test
push
shrb
adc
js
shrb
pop
nopl
pop
jecxz
fnstcw
jo
rcr
jg
and
fidivrl
inc
repnz
fs
aas
lret
jnp
xchg
cwtl
inc
mov
add
dec
fistps
ss
ret
xor
rol
scas
lock
and
imulb
sbb
mov
cmp
lcall
bound
cmp
imul
push
mov
inc
sahf
xchg
xlat
or
pop
clc
cld
insb
add
dec
or
pop
xchg
xchg
sub
or
rol
ljmpw
xchg
jbe
jno
loopne
pop
and
dec
pop
jp
leave
lret
sub
aaa
ss
aaa
xchg
jmp
mov
pop
imul
daa
mov
ficoms
and
inc
insb
pop
fnstenv
jle
jb
subl
xchg
adc
loop
ret
ret
jge
clc
mov
sarb
push
fimuls
push
das
inc
xchg
clc
jnp
jp
test
or
jge,pt
adc
adc
hlt
loopne
sub
sbb
icebp
add
bound
jge
sahf
test
sbb
jle
xorb
call
aas
xchg
mov
mov
fildll
dec
fmull
enter
ret
cmovp
push
cmp
pop
sbb
add
sahf
pusha
andb
insb
ja
outsl
stos
repnz
insb
xchg
xlat
dec
adc
add
icebp
sbb
or
cmc
xchg
in
out
lcall
insl
mov
lods
insb
testb
adc
dec
repz
push
jbe
rcrb
icebp
inc
jl
pop
test
push
rolb
cs
and
iret
incb
jmp
inc
clc
out
dec
sarb
out
mov
or
mov
sarl
and
xchg
jmp
cmpsb
sbb
mov
lock
jae
mov
in
xchg
jo
movsb
adc
add
jne
nop
mov
ljmp
lock
xchg
mov
and
ds
inc
pop
sub
movsb
push
mov
xor
rol
mov
test
gs
shrb
xchg
lock
or
adc
call
dec
ret
adc
pop
ja
std
jle
add
mov
dec
test
fildll
add
mov
je
icebp
adc
cmp
cmc
std
dec
out
out
add
xor
movsl
xlat
sahf
insb
inc
or
add
xor
ret
ret
pop
push
ja
ja
hlt
xor
mov
je
mov
mov
lock
je
lock
add
mov
add
adcl
add
mov
cmp
mov
add
mov
push
fidivrl
inc
jo
push
adcb
rol
scas
jle
lret
jbe
sub
cli
pop
or
loop
xchg
sbb
xor
sbb
shr
xchg
push
loope
push
dec
push
adc
rcr
and
imull
sub
or
cld
imul
cmpsb
insl
fs
sub
adc
decl
sti
push
pop
cld
mov
xchg
mov
jg
xchg
clc
xchg
addr16
and
pusha
sbb
fnstsw
imul
test
lock
push
pop
jl
dec
dec
push
repz
mov
and
jnp
enter
test
push
push
inc
mov
sbb
in
and
pop
cld
mov
movhps
mov
aas
call
ss
fidivrl
cmpsb
add
inc
mov
and
dec
pop
pop
cltd
ret
in
in
xlat
xlat
es
out
mov
aad
hlt
push
mov
movsb
xchg
icebp
shrl
scas
pop
and
xchg
mov
in
outsb
outsb
mov
sbb
xor
inc
mov
adc
outsb
cltd
jno
mov
xchg
sub
insl
outsb
outsb
outsb
outsb
lret
out
jne
popf
sbb
lret
pushf
imul
xchg
je
push
sub
or
pop
push
xor
mov
in
lods
test
cmp
std
stos
andb
xorb
lock
jp
add
push
hlt
stos
int3
add
outsb
add
lds
fsubr
xor
add
xor
fisubrs
loope
divl
jmp
int
icebp
shrl
pop
mov
adc
out
push
mov
popa
bound
push
mov
add
push
call
pop
aas
and
pushf
inc
sub
cmp
cmp
aam
scas
cld
jp
mov
insb
mov
hlt
lods
cmp
dec
jnp
add
mov
sar
mov
repnz
lock
cs
inc
xor
jle
movsl
inc
mov
add
outsb
mov
mov
loopne
test
jp
int3
call
mov
mov
mov
int
push
std
dec
or
jno
sbb
lahf
idivl
add
sti
and
bound
jle
xor
pushw
aad
adc
inc
aam
test
bound
jge
pop
les
jne
adc
clc
push
pop
mov
pop
push
mov
fisubrl
push
clc
mov
shl
pop
lock
mulb
pop
or
scas
or
call
push
jne
adc
inc
or
sub
mov
ss
fnstsw
sarb
xchg
pop
inc
adc
add
dec
push
mov
cmp
or
mov
out
adc
xor
pop
ss
jno
sahf
enter
movsl
lods
sbb
arpl
mov
dec
icebp
loop
lock
ret
popf
sub
sar
or
mov
out
test
add
repz
insb
les
loope
in
lods
std
test
or
js
ljmp
lret
lahf
movsb
ds
add
jno
arpl
push
sar
xchg
mov
mov
bound
js
inc
jl
lock
loop
pop
push
cmpsl
lock
and
mov
push
out
or
ret
lcall
sti
lock
inc
pop
es
add
out
rcrl
add
jl
ljmp
clc
mov
push
pop
xchg
mov
dec
add
insb
xchg
sti
nop
xor
out
ret
ret
sub
push
xchg
add
stos
mov
and
jecxz
mov
or
out
jmp
cmp
add
adc
sahf
xchg
lcall
jbe
jne
xor
rcrb
push
or
sbb
pop
pusha
xchg
push
movsb
hlt
inc
jl
icebp
out
ret
lock
stc
ret
inc
sbb
xor
rorb
push
fcmovnu
test
ljmp
adc
enter
lret
ret
test
jg
insl
or
or
xlat
fidivrs
inc
subb
adc
scas
loopne
cmpsl
cmpsl
imul
jg
subl
shlb
dec
inc
test
sbb
clc
hlt
and
add
in
mov
adc
leave
scas
adc
dec
adc
lret
pop
mov
xchg
mov
sbb
test
push
sub
call
cmpsb
or
cmpb
add
jbe
mov
mov
mov
icebp
jmp
jo
pop
mov
daa
adc
add
dec
sub
das
sarl
inc
push
ret
mov
adc
loopne
mov
cs
shlb
inc
es
pushf
adc
ljmp
shr
add
mulb
pop
inc
jl
or
xlat
aaa
xchg
outsb
add
jmp
jl
jp
sbb
add
mov
loope
call
xchg
adc
lock
out
push
daa
push
xchg
loop
daa
dec
pop
xchg
imul
xor
addb
idivl
xchg
les
js
inc
xor
lds
inc
or
xchg
ds
push
xchg
mov
ds
mov
cmpsb
xor
adc
jge
inc
push
bound
pop
sbb
jl
pushl
adc
xor
mov
dec
rcl
iret
xchg
inc
movsl
je
outsb
mov
sti
lods
rorb
xchg
in
sbb
jne
xor
jne
lock
push
adc
icebp
jg
cmp
pusha
dec
or
inc
prefetch
push
ss
sbb
and
xlat
out
aad
adc
ret
sbb
call
cli
cmp
xchg
ds
push
bound
inc
loop
cli
ljmp
pop
insb
js
loopne
pusha
jle
mov
mov
pop
pop
mov
jle
or
clc
mov
mov
cmpsl
bound
inc
mov
jp
call
out
cmp
inc
mov
add
mov
aam
inc
bound
lcall
lret
or
pop
iret
popa
push
sbb
mov
and
push
adc
es
add
add
inc
call
lahf
test
out
cmpsb
fdivr
scas
mov
pop
hlt
sbb
mov
nop
jg
jmp
xchg
or
jbe
out
outsb
sbb
add
dec
test
icebp
dec
cmp
push
aaa
clc
mov
mov
in
push
jbe
out
rclb
ss
or
pop
adc
sti
addb
loope
mov
std
lock
sbb
lock
je
jmp
mov
xchg
clc
add
pop
scas
jno
push
or
pop
jo
add
movsl
mul
ret
push
dec
fsubrs
dec
sbb
xchg
cmpsb
in
push
jo
mov
adc
sbb
sti
test
fcomip
decb
bound
repz
xchg
pop
fcmovb
nop
in
ss
or
cmp
das
xor
rolb
jne
sbbl
clc
pop
fistps
dec
fdivr
sbb
ds
cld
add
add
add
sub
loope
cmp
repnz
sbb
xchg
pusha
out
adc
pop
pop
loope
cmp
cli
movsb
sub
pop
in
sub
ja
std
mov
jle
movsb
int3
pop
iret
cmc
insb
fistpll
or
cmp
cmp
dec
and
mov
cli
loop
pop
pusha
sub
int3
mov
fadds
inc
inc
mov
push
or
add
fildll
sbb
lret
pop
invlpg
repnz
imul
subl
icebp
hlt
loope
out
dec
mov
hlt
daa
xchg
icebp
sar
pop
movl
ficoms
lods
pop
shl
dec
cs
sbb
sarl
test
mov
adc
mov
jmp
pop
hlt
mov
lock
pop
daa
aas
and
sbb
repnz
fprem
ljmp
cmp
std
icebp
jge
pop
test
mov
das
hlt
and
jp
add
daa
out
inc
mov
mov
jo
pop
jl
and
pop
inc
cwtl
sub
push
mov
popf
xor
sbb
add
repz
jbe
fsts
test
push
dec
add
sub
sub
pop
pusha
sbbl
or
ljmp
clc
lock
lahf
cli
fbld
sbb
test
inc
pop
xchg
movsb
pop
clc
cs
pop
rorb
outsb
push
jns
xor
fs
data16
add
scas
sub
push
mov
sub
xchg
adc
les
mov
and
or
push
cmp
jo
cmpsb
roll
pop
adc
les
icebp
loop
std
fcoml
inc
pop
scas
gs
lcall
jle
pop
jp
or
cld
fadds
push
and
xchg
xlat
xlat
and
ds
ss
fistpl
inc
jp
loopne
insb
enter
push
cmp
in
push
inc
push
mov
mov
mov
adc
pop
das
scas
test
es
adc
lea
orb
push
negl
pop
andb
or
jle
aad
shll
sub
mov
loop
add
mov
sahf
dec
jp
loope
aad
cmp
push
mov
pop
pop
jl
bound
push
add
push
pop
adc
mov
out
xchg
js
mov
lea
lea
stos
mov
shr
loope
cltd
in
adcb
jl
jo
scas
push
pop
dec
jg
subb
mov
sub
cmp
sar
mov
test
sbb
loop
pop
jl
fwait
push
or
or
sti
jmp
push
out
je
add
mov
ds
stos
idivb
inc
jmp
loopne
fs
mov
and
out
pop
inc
js
loope
xor
cmp
pop
inc
test
xchg
clc
sbbl
lret
sarb
sub
and
push
sbb
ds
sbb
das
fisubrl
pop
stos
loop
push
stos
pop
lret
rolb
mov
pop
je
loop
push
xchg
adc
cmp
add
daa
add
inc
shl
jmp
inc
push
sbb
loopne
jne
cmpsl
xchg
aam
int
addb
les
or
mov
clc
loopne
mov
lahf
inc
pop
fdivp
inc
into
out
cmp
inc
lcall
xlat
mov
and
lret
sahf
inc
adc
cmc
push
lret
in
movsb
jne
fndisi(8087
fnstcw
adc
cli
js
hlt
loop
xor
fnstcw
sbb
in
jl
adc
add
ret
mov
std
nop
out
mov
push
xchg
inc
loope
outsl
mov
or
loope
mov
push
dec
pushf
xchg
add
cmc
sub
jae
add
loopne
pushw
push
andb
cmp
les
pop
mov
js
mov
rcrb
mov
add
adc
test
sarb
adc
hlt
loope
jecxz
sti
test
pushf
cmp
mov
icebp
scas
cwtl
pushl
sbb
ret
add
aam
jbe
jmp
int3
and
leave
outsl
ljmp
xor
shlb
shl
pop
pop
dec
mov
adcb
insl
pop
cmp
fnsave
dec
dec
push
nop
orb
hlt
or
outsl
push
lret
jne
mov
pushf
cvtps2pd
pop
mov
jae
sub
mov
or
shll
push
push
pop
xor
fdivrp
fsubrl
ret
xor
push
and
shlb
rclb
rorl
and
sti
gs
sbbb
xor
sub
xchg
insb
or
les
hlt
ret
and
and
sub
dec
xor
pop
aas
cs
pop
lcall
fcmovnb
xchg
cmpl
mov
ds
push
clc
adc
sbb
fiaddl
inc
inc
pop
in
xchg
adc
pop
rolb
cmpsl
lahf
test
adc
repz
incb
mov
inc
adc
data16
sbb
cmp
mov
and
cltd
pop
jmp
adc
add
jae
repz
pushf
adc
imul
cli
xor
xchg
pushf
mov
in
jg
add
or
hlt
push
or
ret
out
or
jp
mov
mov
stos
ljmp
or
mov
aam
pop
sub
mov
rclb
stos
xchg
jmp
add
jp
rol
ja
or
es
xchg
mov
cmp
test
out
rolb
inc
jp
jle
xor
jo
mov
pop
inc
jbe
bound
cmp
push
mov
xchg
dec
fbstp
aad
inc
call
push
adc
rorl
jecxz
jae
xchg
xchg
dec
pushf
in
inc
loop
and
pop
adc
xor
xlat
pop
mov
inc
imul
and
lock
clc
cmpsb
je
or
xchg
or
ds
dec
sbb
inc
inc
dec
roll
hlt
test
cli
lock
cmp
bound
cmp
xchg
subb
mov
jle
jg
rol
mov
adc
stc
mov
pop
lret
push
lds
push
push
cwtl
mov
jecxz
notl
rorb
jp
sbb
in
insl
lock
fwait
sbb
pop
enter
js
addr16
lock
roll
outsb
stos
jl
mov
pop
or
dec
cmpsb
mov
ljmp
fists
mov
mov
xor
loopne
jp
mov
hlt
or
repnz
sti
xor
clc
inc
sub
fisubrl
mov
inc
ds
jmp
inc
add
adc
inc
push
add
lds
je,pt
jmp
xor
call
in
or
call
push
add
inc
int3
adc
mov
lock
sub
in
and
repz
jg
pop
lcall
mov
mov
dec
and
add
leave
mov
dec
add
jl
and
les
lcall
ljmp
movsl
adc
inc
jl
out
and
add
xchg
out
adc
jge
cmp
scas
dec
dec
mov
ljmp
jo
push
add
shll
aam
sbb
pop
mov
jp
hlt
loopne
rcrl
iret
mov
sbbb
fbstp
scas
das
or
notl
jle
ficoml
sub
mov
out
lcall
cmpsb
pop
inc
out
in
cli
mov
jnp
push
push
push
sub
test
jb
clc
shlb
cmp
arpl
xchg
inc
leave
jp
jge
push
jge
jg
mov
xorb
sub
pop
dec
cld
jp
xlat
push
adc
sbb
mov
or
adc
rolb
test
insb
jb,pt
mul
ficompl
pop
int3
stos
and
fadds
fidivrl
sub
aam
jecxz
nop
jp
clc
dec
mov
mov
loopne
gs
mov
ds
cmpsl
mov
add
lcall
je
stos
jp
dec
pop
pushf
xchg
lods
cltd
adc
pushf
dec
mov
jle
fs
fucomi
pop
mov
mov
popf
push
data16
push
cltd
mov
add
dec
jecxz
jbe
fwait
push
repz
fwait
fwait
fwait
and
test
jmp
mov
cmp
mov
loop
movl
mov
test
loop
and
adc
cmp
mov
out
sti
sub
or
cmp
fisubs
pop
ss
hlt
add
repnz
dec
and
jns
cmp
lock
fdivrl
cmpsw
mov
push
popw
nop
sahf
ds
fcompl
jmp
lds
mov
dec
daa
add
xor
test
cmp
xorb
popa
loope
dec
sahf
jl
test
orl
add
divl
rolb
lock
inc
pop
roll
es
adc
push
inc
pop
and
rorl
imul
ds
fsub
outsl
pusha
lock
mov
stos
mov
pop
dec
cmp
mov
xor
rorb
jl
add
pop
xchg
lock
xlat
xchg
push
inc
jg
add
fiadds
jle
xlat
pushf
mov
shlb
push
and
pop
sbb
test
and
scas
mov
sub
sar
add
out
es
cld
icebp
mov
pop
jnp
xchg
cmp
clc
lods
pop
sbb
sbb
lods
sub
mov
mov
popa
leave
cmpsb
mov
das
cmp
js
lods
pushl
xchg
jno
ret
ss
clc
pop
cmp
add
and
stos
pop
sbb
sbb
jl
inc
clc
jb
or
mov
add
push
and
cli
pusha
jmp
pinsrw
popf
hlt
mov
dec
daa
push
pop
jbe
test
pop
add
mov
bound
sub
jb
cmpsl
sbb
adc
push
fcmovnbe
mov
mov
cli
sub
xor
js
sbb
jno
xor
jle
xchg
xchg
inc
sarb
mov
sti
shr
inc
push
pop
lock
and
pushf
lret
mov
test
shlb
call
enter
int
repnz
cmp
pusha
pop
lret
cmp
enter
mov
pop
mov
mov
clc
mov
enter
pusha
insl
ret
dec
sbb
xor
inc
cmpsb
cmp
pop
inc
xor
insb
pop
dec
cmp
movsb
lods
repz
mov
movsb
sbb
lock
xchg
dec
out
cltd
adc
sub
ss
icebp
hlt
hlt
sbb
adc
lret
add
xor
lods
test
pop
mov
push
cmp
jle
aad
sub
movsb
push
pop
es
pop
loop
adc
jp
xor
sub
dec
cld
cmp
and
loop
mov
leave
in
xor
ret
stos
fstps
mov
or
pop
mov
adc
inc
adc
insb
sarb
or
push
lahf
lock
mov
fcompl
mov
adc
pop
movsb
pop
int3
push
stc
pop
inc
mov
mov
icebp
adc
insb
mov
jmp
push
bswap
cli
jb
fists
fcomp
rcrb
and
inc
mov
testl
adc
xor
or
loopne
test
pop
jmp
jl
lods
pop
scas
pop
push
mov
shl
sahf
push
mov
movb
dec
mov
aam
cwtl
movsb
mov
and
and
lcall
mov
mov
mov
push
and
shlb
lret
call
xor
and
outsb
ficomps
inc
stos
cmpsb
mov
das
ds
jl
xchg
jns
mov
or
push
pop
das
push
loopne
mov
fists
aad
movsb
pop
cmp
sub
push
movb
cmp
test
pop
lea
xor
popl
push
out
or
and
arpl
ret
cmp
ja
push
or
jecxz
pop
scas
inc
cmp
cmp
add
add
sbb
inc
test
add
inc
ds
mov
inc
pop
movsb
lahf
ljmp
out
add
push
inc
xchg
clc
add
pop
ficomps
mov
or
jg
mov
xlat
nop
decb
or
push
rcl
sahf
mov
adc
es
xor
xor
push
cmp
fs
scas
push
dec
add
clc
jecxz
xor
out
sti
sahf
push
sub
in
add
lods
sub
xchg
push
pop
repnz
inc
orl
mov
add
fadd
jo
mov
lock
loop
and
stos
inc
xchg
mov
and
mov
ucomiss
test
aam
lock
jl
jo
je
inc
loop
jnp
jl
mov
pop
fisttps
lds
int3
lods
mov
fcoml
sbbb
pushf
loopne
adc
xor
sti
cs
cmp
jp
sbb
nop
hlt
pop
pusha
sbbl
mov
mov
adc
fcoml
rcl
or
lahf
scas
test
mov
push
test
inc
bound
leave
call
cmp
icebp
popf
fbstp
xchg
or
fcmovu
pop
nop
jp
repnz
xchg
es
sti
adc
das
jbe
sub
cld
and
jae
rcrb
jno
fmul
add
and
mov
dec
mov
lock
adc
inc
mov
mov
or
out
lret
dec
adc
in
clc
je
out
adc
cmpsl
xlat
lret
sbb
sahf
sub
cmp
movsb
xor
sbb
je
mov
adc
mov
es
cwtl
lods
sahf
idivb
aas
mov
ss
ja
xchg
fcom
jp,pt
sarl
push
mov
sub
out
add
inc
sub
ds
push
mov
fs
and
inc
addr16
movd
out
leave
cmp
call
arpl
push
dec
xor
lds
push
pop
mov
inc
pop
push
cli
jmp
adc
int
jns
stos
aam
fprem
dec
sbb
popa
cmp
mov
jl
out
add
inc
ficoml
iret
push
jp
mov
test
dec
sbb
jge
mov
add
ficoms
shrb
mov
sahf
paddsb
push
jne
rolb
lahf
push
xchg
cmp
sub
pop
pop
push
pusha
mov
stc
repnz
pop
cli
lock
xchg
dec
sarl
les
jo
inc
out
and
sub
in
sub
std
es
enter
imul
das
cmp
cmp
push
cli
iret
add
and
adc
shlb
mov
push
pop
rcrl
add
push
fwait
or
test
add
icebp
ret
ljmp
pop
push
pop
das
pop
insl
sarl
and
je
mov
imul
aam
xchg
jbe
push
std
test
dec
xor
sti
icebp
loop
jg
and
mov
iret
adc
jp
lock
cs
scas
add
fcoms
fists
inc
in
sbb
adc
mov
call
mov
add
jp
movsb
jle
adc
pop
orl
sub
adc
clc
dec
mov
ds
clc
jecxz
mov
pop
pop
and
aam
lret
clc
mov
inc
popa
pop
lea
ret
add
xchg
fdivrl
xor
addb
aam
push
mov
mov
jp
int
clc
mov
cmp
jle,pt
insb
negl
cmc
mov
or
shlb
pop
add
rorb
inc
mov
mov
enter
shl
fs
jg
mov
lock
sbb
cmp
xchg
mov
push
jecxz
shrl
and
je
dec
cs
xor
pop
ret
or
mov
pop
adc
sti
sub
fidivrs
sti
insb
xchg
cld
ret
stos
out
cmc
and
fucomp
out
adc
push
pusha
mov
cmc
jecxz
mov
out
dec
insb
daa
adc
dec
push
addr16
out
xchg
sbb
rcl
push
inc
ljmp
cmp
in
sbb
mov
xchg
and
xor
out
cld
pop
adc
mov
orb
xchg
cmp
ds
mov
ds
cmp
outsb
or
pop
fisttps
pop
adc
ret
jo
cmpsl
out
xchg
dec
push
xchg
es
mov
xor
loopne
adc
xchg
xor
mov
sub
xor
into
pop
add
mov
xlat
seto
cltd
in
inc
orb
sti
mov
repz
loop
icebp
subl
sub
scas
push
repnz
xor
ss
jge
test
sbb
mov
add
mov
or
das
or
pop
loopne
cmp
adc
jb
jae
ret
xchg
adc
fs
pop
xchg
arpl
mov
push
ja
push
mov
cmp
call
mov
divb
ds
jl
ss
ss
in
in
push
mov
jno
jb
popf
add
cwtl
adcb
add
enter
rclb
aad
push
clc
lock
mov
push
dec
ret
xlat
lcall
mov
mov
push
push
sti
orb
pushf
push
notl
test
and
cmp
aam
aam
push
mov
int
xchg
pop
adc
scas
mov
mov
sbb
xchg
mov
xlat
mov
out
mov
mov
push
shll
aam
or
mov
or
pop
adc
lcall
das
test
adc
sub
out
dec
cmc
mov
or
shr
je
int
mov
insb
pop
dec
cli
incb
lcall
jg
jle
cmp
icebp
dec
add
mov
bound
clc
cmpsb
cs
mov
dec
add
add
push
imul
nop
ss
cmp
dec
jmp
push
aad
lret
clc
cmpsb
icebp
inc
arpl
push
cs
push
sub
loop
xchg
mov
add
dec
loopne
sti
or
mov
jge
std
or
add
adc
and
clc
push
sbb
mov
xchg
pop
ror
pop
fld
clc
ret
or
lods
out
jbe
stc
shlb
mov
repz
fdivr
push
lss
jl
loop
adc
ffreep
ss
mov
mov
cmp
fimull
daa
leave
mov
cwtl
xor
pop
les
mov
aaa
pop
cmpsl
sahf
ret
js
inc
bound
jno
gs
inc
sbb
adc
or
mov
mov
clc
lods
push
push
and
dec
cmp
inc
rol
sbb
jp
shl
or
xor
jb
imul
mov
repnz
ljmp
jecxz
mov
and
cmp
gs
lods
rorb
iret
xor
popl
loope
in
inc
test
insb
add
scas
ret
jbe
cmp
mov
jbe
ficomps
jle,pt
rorb
test
movsb
dec
mov
jmp
sbb
fiaddl
or
clc
movsl
test
scas
push
test
xchg
jecxz
mov
cltd
stos
push
mov
mov
pop
mov
inc
xor
arpl
pop
mov
in
or
xchg
int
and
rol
xor
cmpsb
scas
xchg
loopne
ret
cmp
scas
gs
addl
add
pop
outsb
inc
dec
push
pop
lahf
inc
shrl
jno
js
or
shl
jl
and
mov
stc
dec
mov
hlt
adc
sbb
out
sti
jbe
cs
imul
call
pop
cltd
mov
mov
and
ss
adc
icebp
cmp
stos
xchg
xor
adc
inc
inc
add
pop
mov
pop
pushf
movsb
stos
mov
sbb
pop
fs
xchg
cmp
cmp
and
loopne
or
enter
bound
xor
cld
cli
lock
adc
loop
test
mov
mov
stc
repnz
ret
rorb
iret
jo
xchg
nop
ds
xor
and
jp
out
pop
sbb
push
pop
pop
sub
cld
rorb
jg
out
loop
fdiv
pusha
inc
cmp
rclb
cltd
jae
xchg
hlt
out
xor
and
sub
lea
cli
rorl
icebp
clc
jmp
mov
test
push
pop
cmp
or
push
movsb
clts
pop
xchg
incw
movsb
cs
hlt
outsl
mov
test
mov
push
mov
mov
inc
or
dec
outsb
mov
popl
in
addb
and
pop
aam
dec
scas
ficoms
imul
and
inc
aaa
sbb
call
jecxz
sbb
das
dec
fildll
push
sub
add
stos
jle
cli
ljmp
mov
cmp
or
pop
push
filds
adc
aad
mov
scas
in
inc
jmp
aas
fnsave
fimuls
cmp
or
stc
dec
jbe
daa
in
sbb
lret
adc
out
jl
dec
jecxz
cltd
sbb
xchg
jle
aas
push
dec
jg
mov
divl
cs
movsl
mov
std
pop
and
cld
fistl
cmpsb
das
or
fistpl
pop
nop
cmpsb
mov
stos
jnp
ffreep
mov
out
xlat
imul
push
dec
insb
pop
out
rol
xchg
pusha
ret
outsl
cmp
clc
inc
aad
add
cmpsl
andps
loop
mov
in
inc
outsb
xchg
lock
jp
shlb
rol
leave
lock
cli
movb
xchg
mov
cmp
mov
shrb
or
push
ds
std
int3
push
add
mov
push
addr16
mov
shll
adc
or
jmp
out
ret
arpl
push
pushf
sti
cmp
dec
sbb
or
adc
sub
fimull
and
jl
push
pop
jno
cmp
aas
pop
mov
idivl
inc
gs
fldl
clc
cs
sbb
pop
xlat
push
push
push
sub
cld
mov
aam
rolb
pop
sub
push
mov
ss
nop
icebp
adc
mov
mov
push
xchg
xchg
loop
repz
and
into
je
int
in
daa
pop
sub
decl
sahf
inc
push
addr16
fwait
mov
iret
outsb
adc
xchg
lret
mov
ds
jle
dec
lahf
inc
les
adc
pop
aaa
orl
mull
rcrl
xchg
icebp
xor
xlat
or
pop
add
mov
hlt
hlt
outsl
std
jp
jbe
xchg
ja
das
sub
out
sbb
outsb
cmc
stos
loop
lock
cmp
clc
arpl
testl
mov
cmp
into
cltd
pop
sub
xchg
test
jno
out
or
popl
lods
lea
mov
lds
fmuls
clc
xchg
test
rcrb
jp
negb
and
out
push
and
int
pop
fsubrs
cli
jbe
leave
scas
mov
xor
mov
mov
or
inc
enter
ret
fisttpl
jle
xor
sbb
rol
add
xlat
mov
jo
mov
sti
jmp
mov
jno
cmp
dec
popa
or
pop
sbb
fcom
push
mov
jl
scas
xchg
cs
addb
gs
faddl
enter
xor
out
mov
clc
cwtl
xor
add
push
andb
rcll
shrb
loop
repnz
xor
js
aam
sbb
mov
sti
pop
femms
sub
mov
push
imul
adc
fs
sub
clc
dec
les
mov
fidivrl
std
ficoml
add
lea
jp
jge
jp
scas
out
mov
or
mov
sbb
sbb
dec
call
in
push
cmp
cmpsb
xchg
xchg
mov
shrb
popa
ds
cs
aam
push
jg,pn
rorl
stos
std
sub
mov
and
mov
sub
loope
push
lcall
xor
xchg
fisubrs
loop
clc
sbbb
test
adc
ds
loopne
sbb
les
mov
and
rcl
das
out
mov
sarl
sbb
lret
sbb
cld
jp
cwtl
pop
stos
dec
add
xchg
imul
pop
nop
jo
mov
fsubrl
cmp
outsb
and
mov
notl
jmp
jno
fisubrs
bound
fsubrl
ds
pop
dec
pop
or
aas
mov
fildll
dec
jmp
xchg
jle
dec
jp
in
into
push
subl
or
loope
movsl
pusha
adc
xor
xor
ljmp
fmul
nop
negl
enter
push
rcll
dec
jge
ljmp
and
imul
fisubrs
outsl
or
fs
scas
cmp
testb
ljmp
mov
add
out
mov
xchg
sub
sbb
pop
sbb
imul
lock
mov
pop
push
xchg
aaa
push
mov
movsb
pop
int
add
out
cmp
or
test
pop
pop
add
repz
outsb
sbb
mov
jb
push
cli
jno
jmp
pop
ljmp
push
jge
push
inc
or
loop
cld
lock
sub
xchg
mov
pop
or
clc
jle
or
add
and
hlt
pop
outsl
dec
sub
xchg
add
arpl
ds
ja
or
pop
repnz
lds
xchg
sub
jmp
bound
lock
aas
fdiv
testb
clc
lock
insb
rclb
adc
divps
cwtl
fnstsw
mov
into
icebp
adc
push
mov
rcrl
pop
jl
test
in
xchg
out
test
lds
mov
outsb
je
add
push
push
cmp
cltd
rclb
movsb
sti
loope
test
and
aaa
and
adc
sbb
pop
sub
add
xchg
nop
lock
push
xor
ret
test
sahf
andl
pusha
roll
or
pop
movsl
adc
jmp
cmp
movsb
das
loope
push
addr16
lds
jecxz
fs
mov
sbbl
dec
cmp
clc
aam
movsb
and
jecxz
lock
push
inc
jno
loope
rcrl
std
call
lock
adc
jno
lahf
push
dec
test
pandn
dec
mov
mov
cmpsl
pop
pop
mov
loop
add
adc
inc
fisubl
shrb
adc
jle
sub
inc
in
lea
scas
jle
in
int
adc
adc
cmp
out
jle
mov
dec
dec
in
aam
lea
mov
mov
iret
sub
aas
inc
inc
in
jae
lret
andl
hlt
call
pop
cmpsb
sub
cmp
adc
mov
mov
mov
add
imul
movsb
jbe
rorl
int3
push
and
cmp
testb
cmp
mov
pusha
fists
lahf
pusha
xchg
mov
insb
pop
mov
clc
insb
outsb
or
push
mov
clc
pusha
nop
into
cli
mov
negl
clc
push
movsb
pushf
mov
fsts
filds
mov
xor
lods
and
repz
sbb
mov
push
movsl
dec
pop
push
xor
or
sub
cs
cli
cli
fidivrl
mov
gs
cmc
xor
pushf
inc
inc
mov
daa
or
mov
adc
and
push
inc
out
pop
filds
sbb
nop
mov
inc
sbb
jbe
insb
xor
and
mov
push
dec
loop
jne
mov
outsb
lahf
sbbb
cmp
js
enter
push
bound
pop
pop
pop
sarl
mov
xchg
rol
ret
pop
sub
movsl
xor
cmc
in
ret
push
jl
cld
je
loope
cmp
fmuls
adc
and
cli
xor
xchg
and
push
mov
or
push
mov
pop
mov
sbb
fmull
adc
loop
arpl
test
lock
sub
clc
or
mov
cmp
lock
mov
fdivrl
cltd
ss
pusha
push
outsl
daa
ljmp
mov
ds
jno
das
push
push
repnz
lea
rcll
leave
in
sarb
lret
lcall
negl
sahf
lcall
je
xchg
push
jbe
xchg
cld
sahf
fwait
fwait
cmp
outsl
mov
jb
or
cmp
loopne
add
insl
inc
xor
cmp
cld
jge
hlt
inc
sarb
xor
in
loope
cmpsl
out
xchg
and
aad
repnz
arpl
pop
std
jo
mov
les
inc
or
loopne
ret
cwtl
jbe
mov
outsl
dec
or
or
pop
rorb
adc
in
fiadds
cli
pop
insb
pushf
ja
fwait
negb
hlt
dec
lret
and
add
add
cmpb
inc
inc
pop
adc
mov
jle
mov
inc
cmp
jo
out
rcrl
cmpsb
and
inc
push
shrb
xchg
or
and
mov
int
push
pusha
ds
addr16
jecxz
in
inc
mov
lods
pop
xchg
jle
add
pop
pop
mov
sbb
add
add
out
mulb
js
test
pop
mov
bound
mov
lcall
mov
sbb
popf
jge
adc
sahf
push
dec
mov
pop
das
mov
pusha
sub
pop
jp
pop
cmp
enter
scas
pop
or
xor
lcall
or
or
jecxz
dec
add
out
test
mov
xor
loop
or
out
icebp
comiss
push
cmp
inc
inc
xchg
bound
push
mov
pop
std
push
je
xchg
add
xor
adc
push
sub
bound
mov
and
jp
lahf
insl
fcoml
inc
stos
sti
pop
pusha
lods
mov
pop
aad
mov
inc
cmp
loopne
repnz
mov
es
jl
iret
pop
daa
xor
adc
adc
icebp
insb
xchg
cwtl
out
pop
ds
mov
les
sub
mul
lds
push
adc
adc
mov
cmpsl
ret
xor
pop
mov
adc
sub
jns
mov
adc
in
and
stos
jno
decb
call
cmpsl
daa
add
add
mov
push
out
scas
inc
mov
pop
pop
mov
xchg
clc
cli
xchg
sbb
jp
insl
cli
mov
push
insb
dec
sarb
rclb
xchg
mov
es
das
test
addl
add
fbld
clc
ljmp
xchg
add
mov
inc
xchg
inc
push
mov
adc
into
xor
adc
lahf
mov
call
lods
cwtl
aam
js
sbb
loopne
pop
js
jl
pusha
cmpsl
sub
cwtl
cmpsb
push
or
adc
inc
clc
mov
loop
pop
cmp
in
pop
cli
cld
lock
sahf
push
mov
mov
mov
or
pop
dec
ret
adc
push
and
enter
outsl
jbe
cmp
jg
pop
or
aas
sbb
sub
nop
clc
hlt
sar
shlb
ljmp
sarl
xchg
jle
js
int
push
sahf
dec
jl
sbbl
mov
es
fstpl
push
jmp
test
sbb
mov
push
push
add
adc
lret
mov
mov
in
jbe
adc
add
lds
mov
in
cli
pusha
popf
ljmp
dec
dec
sahf
out
sub
test
xchg
adc
jecxz
dec
or
mov
scas
imul
dec
sub
xchg
dec
js
sub
loopne
xchg
mov
call
aam
jmp
mov
dec
stc
jno
scas
add
fs
call
mov
xchg
in
jecxz
push
jbe
pop
jb
pop
pop
test
faddp
xchg
cs
movsb
cmp
and
and
pop
adc
enter
mov
add
lahf
rcl
jb
pop
pop
adc
js
test
inc
inc
lock
xchg
lock
jne
out
lret
hlt
pop
cwtl
les
mov
lret
add
out
sub
or
mov
into
inc
jecxz
inc
mov
cmp
loop
into
jle
movsb
sahf
jo
js
nop
push
iret
push
push
adc
lds
in
jg
jle
pshufw
into
xor
sbb
mov
inc
cwtl
ss
cmp
pop
stos
push
push
call
dec
js
dec
dec
imul
and
idivb
je
cmp
sbb
ds
pop
in
and
sub
mov
mov
xor
cltd
xor
test
or
sub
loopne
cs
sahf
aam
aaa
cmc
or
inc
inc
pop
jl
lock
pushf
int3
lds
or
sub
out
aam
inc
ja
cltd
dec
fadds
fcoml
imul
cmp
ds
das
jle
add
enter
loope
sti
sahf
xchg
push
push
notb
fsubl
mov
push
test
loopne
dec
ds
adc
jmp
mul
sbb
stos
loopne
jae
push
mov
out
dec
ret
and
inc
filds
out
sub
aam
sub
mov
xor
cli
js
out
pop
je
xor
dec
out
ret
cli
lret
dec
cwtl
mov
jle
mov
jno
shr
test
pop
sahf
icebp
call
xor
shl
ds
push
test
inc
pop
out
lods
push
jmp
roll
sbb
icebp
xor
xchg
popf
mov
rcl
js
outsb
push
dec
das
scas
js,pt
hlt
inc
mov
bound
pusha
jne
xchg
js
cli
orb
repnz
push
sti
cmp
sub
add
jl
xchg
lret
out
aaa
aaa
aaa
mov
or
out
repz
movsb
dec
aaa
aaa
aaa
aaa
scas
xchg
and
out
stos
std
insb
adc
clc
sbb
aaa
push
gs
inc
push
cmp
roll
je
cmp
loopne
inc
sar
mov
xor
addb
mov
jmp
mov
jge
cld
icebp
adc
stc
int3
push
add
insl
cli
jno
push
add
data16
jo
addl
movsb
std
inc
clc
sub
aas
jge
test
cli
and
cmp
je
cli
cmp
aad
jg
js
xor
push
or
and
jp
sbb
fildl
test
mov
leave
fldt
jecxz
add
pop
mov
cmp
inc
icebp
loop
clc
call
int3
jbe
add
outsb
and
out
xchg
bound
addr16
in
out
xchg
movsl
add
add
push
cmpsb
mov
dec
movsl
not
pop
into
jns
mov
mov
sarb
sbb
lods
fsts
scas
lret
lock
inc
cli
es
mov
adc
cmc
inc
and
pushaw
into
cmp
mov
dec
cmp
or
jge
scas
xor
or
xchg
dec
push
pop
jl
negl
push
pop
mov
adc
dec
or
bound
in
jmp
test
lret
lods
jmp
in
insb
pop
xchg
cwtl
daa
orb
push
das
push
cmp
jbe
mov
loopne
dec
pop
aam
inc
xchg
dec
push
or
out
inc
mov
ret
mov
xor
fbld
or
stos
aas
jmp
xchg
aad
jbe
sbb
mov
clc
orb
repz
mov
mov
mov
add
mov
in
cld
ss
push
incb
loop
bound
lret
test
fiadds
jbe
leave
or
sbb
hlt
stos
add
movsl
add
stos
cmp
outsb
outsb
or
ja
cmp
popa
push
cli
push
fistps
mov
sbb
int3
adc
dec
mov
cmpsl
int3
xchg
pushf
and
lock
pop
in
inc
mov
sti
mov
aad
adc
and
mov
out
mov
sarl
insl
std
es
cmp
in
addb
fadds
mov
in
cmp
cmp
call
shl
inc
mov
cmpsl
cmp
lret
lock
adcl
fisubs
dec
stos
mov
ljmp
push
xor
dec
push
in
inc
loope
and
test
jge
ljmp
cmp
cmp
pop
jg
pop
push
sarb
sbb
repnz
pop
adc
cmpsb
mov
pop
and
les
cmp
filds
fiadds
inc
pop
stos
add
add
push
xor
mov
inc
adc
add
jecxz
lock
sbb
xor
clc
mov
add
push
push
out
fldenv
sbbb
push
in
imul
push
mov
mov
adc
cli
mov
xchg
test
push
fbstp
pop
out
fmul
cmp
clc
jle
mov
xor
movsb
dec
pop
outsb
adc
xlat
into
xchg
out
movsl
mov
mov
sti
pusha
add
lods
xor
mov
xchg
call
scas
shl
and
imul
inc
je
adc
insb
clc
mov
sub
push
outsw
jmp
add
pushf
mov
icebp
cmc
shr
cmp
push
push
sti
pop
dec
mov
imul
mov
jnp
cmp
out
push
clc
les
xor
ret
sbb
xchg
pop
insl
das
lods
jbe
jo
loope
sbb
repnz
mov
clc
out
out
outsb
mov
xor
jo
mov
cmc
add
loop
mov
negl
xor
or
dec
push
and
jp
pop
cmp
test
stos
enter
push
dec
mov
add
mov
mov
test
and
js
data16
jp
mov
in
sub
mov
nop
xor
rcrl
mov
daa
xchg
xchg
lods
cmc
pop
or
dec
and
xor
jmp
cmpsl
divl
inc
mov
fdivrl
jb
push
xchg
xchg
pop
aas
push
inc
mov
mov
add
sbb
rcr
mov
xor
notl
jl
or
sahf
enter
aas
lods
repnz
and
mov
pushl
aas
adc
pop
data16
ljmp
jge
mov
jo
and
in
mov
cs
cld
fwait
mov
or
xor
add
mov
inc
mov
push
sar
dec
loope
sub
leave
fidivs
xor
in
sbb
adcb
jl
fsubrp
cmpsb
out
xor
cmc
mov
mov
mov
es
xchg
arpl
lret
lahf
sahf
lahf
dec
jge
out
into
xchg
sahf
ret
cmpl
negl
lock
sbb
neg
push
scas
je
or
xor
iret
xchg
or
sbb
ficoms
sti
adc
mov
add
pusha
xor
mov
sbb
loop
pusha
pusha
add
jo
int3
inc
cld
mov
inc
adc
cs
push
ret
insb
enter
jecxz
loop
push
in
lahf
xchg
mov
dec
and
or
sbb
dec
andb
cli
add
and
je
fnstsw
add
daa
dec
les
jecxz
dec
loop
cmp
jae
dec
mov
inc
xchg
push
in
xor
cmpb
fidivs
mov
xchg
mov
hlt
ds
adc
or
addr16
pop
int3
outsb
daa
clc
dec
adc
clc
aam
icebp
lcall
push
sahf
xchg
pop
push
out
mov
push
xor
jge
or
pop
and
mov
lds
scas
and
and
data16
aam
xchg
outsb
pushf
sahf
int
les
cmpsb
out
jge
cli
fistl
movsl
mov
addr16
movups
es
push
negl
iret
jle
pop
xor
pop
and
imul
and
aam
jns
dec
jp
cmpsl
fists
and
clc
xor
adc
jo
jbe
pop
scas
movsl
ss
lods
push
lea
sub
lds
lock
shll
sbb
std
xor
cmp
js,pn
ret
dec
loop
and
into
add
out
adc
icebp
sbb
pop
mov
sbb
in
je
outsb
and
pop
loop
shl
add
adc
es
in
sub
insb
or
sub
mov
jecxz
stos
mov
ljmp
inc
jo
loope
icebp
nop
hlt
pop
adc
rcrl
mov
out
inc
cmp
inc
outsb
jge
out
dec
cmp
mov
les
std
popa
loop
xchg
cmpl
xlat
fisubl
mov
outsl
call
push
sbb
negl
and
leave
test
mov
out
sub
mov
dec
loop
xor
push
pop
mov
or
ftst
fwait
aam
ficompl
and
xor
cld
lock
jecxz
stc
or
mov
xchg
pop
fistpl
jl
fdivr
fisttpll
loop
sti
stos
out
pushf
fisubl
hlt
ret
jo
or
test
mov
mov
aaa
out
orl
addr16
push
xlat
push
int3
call
xchg
pop
add
aad
loope
insb
fsubrs
xor
mov
clc
hlt
adc
scas
es
shl
xchg
cmp
nop
mov
stc
lret
and
aaa
test
cs
cltd
xchg
fsubrs
xchg
xor
mov
testb
adc
push
hlt
icebp
mov
lea
ds
push
lcall
xor
pusha
daa
pop
push
jbe
les
aas
nop
push
data16
call
cmp
or
mov
inc
outsl
in
sbb
scas
lods
negl
inc
bound
xor
cmp
cli
divps
pop
and
sarb
clc
jle
and
jle
jns
mov
fucomi
fmull
pop
mov
xor
push
ret
fwait
jge
jnp
aaa
loope
adc
mov
mov
nop
hlt
xor
mov
stos
adcl
pop
jno
dec
loopne
pop
sbb
test
cmp
lods
inc
jbe
pop
hlt
jge,pt
sbb
lcall
test
pop
stc
cli
movsl
dec
jmp
loope
and
popa
push
xor
mov
nop
aas
mov
inc
mov
jns
outsb
insb
and
adc
inc
pusha
ss
fidivl
xchg
xor
mov
cmp
push
xorb
call
jb
ret
adc
mov
add
shll
std
xchg
test
adc
ret
mov
xchg
ror
adc
xor
aam
jb
into
stos
sbbb
mov
lcall
js
mov
sub
xor
icebp
dec
enter
aad
push
xor
inc
clc
inc
pop
cmp
js
pusha
pop
add
ret
hlt
push
ds
and
fdivrs
cli
incb
daa
clc
andb
pop
std
out
int
out
push
out
add
andb
fnstsw
cmp
sbb
mulb
.byte
cmpsl
.byte
mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
outsl
testl
pop
dec
outsb
je
addr16
and
rcrb
xor
add
jns
insb
daa
push
outsl
jb
add
jns
incl
imul
add
or
push
je
sub
in
push
ficoml
add
ss
mov
push
rol
add
and
pop
push
dec
bound
arpl
pop
sbb
mov
shl
jae
insl
sbb
and
sbb
jb
popa
arpl
add
aas
mov
add
inc
and
clc
jmp
neg
and
adc
dec
push
in
int
pop
xchg
xchg
gs
ffreep
loopne
jno
out
add
aas
or
mov
add
cmp
je
test
push
notrack
shrd
daa
daa
test
mov
daa
pushf
rcrb
nop
mov
daa
cmpb
daa
daa
daa
jo
insb
push
fs
int3
daa
daa
daa
daa
pusha
pop
in
daa
daa
daa
daa
fcompl
push
clc
lock
daa
dec
push
add
mov
mov
sub
subb
add
xor
ret
jb
mov
inc
cmovo
jb
jb
xor
sub
fcomip
outsl
pop
hlt
mov
cmp
jne
push
add
add
jg
fwait
mov
cmpl
xor
mov
jmp
mov
mov
fcompl
adc
mov
add
mov
fnsave
lea
mov
pop
or
inc
cmp
lcall
add
mov
mov
or
mov
add
push
int
fnsave
repnz
ljmp
add
or
push
lahf
inc
add
adc
sbb
out
test
cmpsl
adc
and
idivb
mov
pop
pop
pop
mov
mov
push
mov
inc
adc
mov
or
dec
add
loopne
or
popw
push
push
outsl
mov
mov
out
int3
lods
sbb
pop
push
push
repz
mov
std
loopne
and
mov
add
cmp
jne
xor
mov
inc
or
or
pop
jmp
fistl
add
cmp
jne
cmp
loopne
cmp
jne
mov
mov
out
clc
test
loope
adc
jo
mov
addl
hlt
or
aam
push
mov
fimuls
addb
pop
sub
add
pop
pop
mov
enter
push
and
push
add
jno
sub
cmpl
push
push
add
popa
daa
imul
dec
imul
sbb
pop
icebp
aaa
pop
adc
pop
mov
add
sub
mov
call
enter
lea
pop
mov
insb
ret
jmp
lret
and
push
push
cmp
push
jl
jne
adc
nop
xchg
xchg
rolb
jnp
jge
mov
lock
rorb
push
cmp
mov
cmp
mov
xor
orb
and
out
push
pop
subb
jge
dec
or
push
pop
daa
lret
mov
pushf
sbb
push
or
in
mov
call
xchg
cmp
sub
repz
movnti
push
adc
pop
jecxz
loope
pusha
adc
test
imul
sub
in
push
pop
sbbb
lcall
jo
ja
and
jae
into
pop
sti
pop
or
or
push
es
add
or
std
std
test
mov
cmpl
xchg
mov
scas
push
insl
cmp
jne
inc
pop
xchg
pop
and
jno
inc
sub
inc
mov
fisttps
dec
pop
mov
dec
lea
lea
jne
rol
loope
lock
dec
sarl
ret
insb
loop
mov
hlt
pop
mov
cmpsb
adc
pop
jmp
or
add
adc
or
jmp
jbe
ja
or
outsl
adc
cmp
lahf
cmp
push
push
es
cmp
rcll
insl
aad
setp
andl
pop
jo
jns
ljmp
sbb
enter
inc
pop
pop
pop
roll
adc
jne
adc
add
outsb
dec
pushf
mov
cmp
adc
div
inc
pop
lcall
xorl
rol
push
inc
cmp
jg
mov
imul
cs
js
pop
mov
lret
xchg
pop
add
pand
stc
lret
mov
ds
shrb
jne
testl
lea
and
dec
mov
fstl
sub
mov
push
add
mov
subl
add
xlat
shl
xor
out
push
sbb
cmp
je
or
jne
or
loopne
jle
sub
neg
pusha
xor
push
add
repnz
cmp
cmc
div
je
push
adc
or
stos
xorb
sub
sub
loop
cmp
xchg
inc
out
rorb
push
mov
mov
or
inc
push
xchg
paddd
adc
push
stc
cmp
jne
pop
jg
cwtl
rolb
orb
and
scas
cs
inc
scas
add
shrl
rcll
sub
dec
pop
cmp
clc
leave
lea
shlb
adc
jbe
sub
outsl
rcrb
pop
test
cmc
shl
mov
test
je
loope
rorl
out
mov
popa
xchg
sarl
xor
int3
xchg
ja
adc
int
mov
push
scas
push
mov
push
dec
push
push
dec
jle
cld
xor
push
cmp
or
andl
push
pop
fsts
and
mov
sti
sub
mov
sti
int
pop
inc
xor
cmp
movl
test
mov
push
cld
js
adc
mov
jle
movb
pop
fs
push
shll
dec
das
pop
ret
push
ret
sti
sub
pop
pop
scas
add
pop
add
test
cld
xchg
mov
lcall
xlat
add
jo
mov
fmuls
jl
xor
jmp
or
or
pop
cmp
push
jne
dec
mov
jge
into
adc
add
lret
jmp
dec
sbb
aaa
fs
bound
pop
xlat
clc
cmp
xor
cmp
push
or
ds
jg
fdivs
test
jns
ret
cli
add
aas
nop
hlt
jmp
sub
sbb
adc
and
pop
xchg
hlt
mov
adc
mov
or
pop
pop
mov
push
mov
push
pop
mov
jmp
mov
jnp
mov
jb
sbb
push
or
sbb
ficoml
xor
mov
jno
add
sub
mov
sbb
mov
cmp
jl
cli
movl
mov
mov
or
and
jl
lock
sub
inc
or
add
out
iret
rolb
cld
dec
std
jbe
clc
adc
adc
mov
or
lahf
in
pop
insb
rolb
pusha
fwait
or
ret
je
outsl
sti
inc
push
push
push
xchg
xor
cmp
sub
add
and
xor
call
jmp
ret
aas
lret
add
push
mov
or
xor
jo
stos
pushl
inc
push
xchg
or
fstpl
sahf
out
fdivs
testb
and
xchg
repnz
and
arpl
mov
xor
pop
cmp
and
fstpt
mov
jecxz
in
aas
subb
jle
rorb
rol
shll
jg
lock
push
movl
push
aad
push
dec
mov
xchg
or
loop
xchg
lea
and
or
loopne
fisttpll
and
or
dec
mov
rolb
mov
lea
rolb
mov
mov
outsl
sub
lds
sub
mov
mov
add
call
jbe
test
lret
jb
mov
clc
add
fisubrs
sbb
lret
and
adc
add
or
jnp
mov
adc
pop
in
fnsave
mov
mov
adc
push
jecxz
fdivrs
pcmpgtb
mov
out
cltd
scas
clc
add
cmp
jp
or
mov
es
sub
fldl
or
sbbb
jo
sbb
jnp
andl
cld
dec
adc
in
rorb
jne
mov
rcll
jae
xchg
lods
sub
add
xlat
mov
repz
jae
icebp
ret
mov
sub
addl
into
push
fsubrl
add
roll
mov
add
or
jo
lea
or
pusha
push
shl
add
shlb
mov
ss
inc
mov
or
mov
mov
mov
pop
cmp
mov
mov
dec
xor
or
mov
hlt
out
add
int
mov
jno
jne
or
fcompl
sbb
mov
and
or
bound
push
cmp
jg
pop
jbe
push
mov
popw
je
cwtl
jbe
push
push
scas
insl
pop
xchg
push
addb
lock
inc
dec
jp
jmp
adc
cmp
mov
sub
jge
pop
adc
push
sbb
clc
jo
mov
dec
or
bnd
add
or
sub
mov
pop
cmpl
sbb
rcll
pop
cmpsl
push
scas
dec
jne
lahf
orb
fidivs
sbb
shll
push
mov
adc
or
addl
pop
clc
outsb
jle
inc
cld
push
cwtl
cmp
adc
cmp
clc
dec
add
and
cmp
add
testl
jmp
xchg
jb
inc
test
or
mov
push
sub
sbb
pop
and
push
jne
aaa
jmp
xchg
or
mov
push
xlat
jno
mov
jbe
xor
push
pop
push
mov
xor
add
add
xor
pushf
sarl
sbb
push
mov
or
test
lds
jae
jmp
movsl
mov
imul
sbb
and
aaa
loop
mov
pop
lock
add
leave
push
js
gs
jne
jo
mov
or
lcall
pop
clc
mov
sub
adc
jne
test
setns
mov
decl
jl
fwait
push
sub
push
jns
clc
enter
bound
test
sbb
or
ret
fdivrs
dec
std
lock
mov
xchg
inc
les
sub
or
fldl
adc
jb
jle
dec
push
lea
shl
lock
test
je
addr16
add
jg
adc
orl
jmp
push
insb
aaa
outsb
movsl
pop
lock
adc
or
or
sbb
into
push
subl
cmp
mov
xchg
or
xor
push
clc
das
sbb
lret
xor
js
xchg
lret
cmp
or
add
sbb
scas
nop
cs
in
jne
sub
lds
adc
test
mov
add
sub
fiadds
push
nop
inc
dec
adc
push
adc
std
mov
outsl
imul
add
or
cltd
cmpsl
mov
sub
jno
cli
sti
shll
jg
sub
add
hlt
ficomps
mov
sub
mov
mov
and
lds
out
das
adc
pusha
mov
fldl
cld
nop
push
cmp
mov
lds
std
push
mov
sub
test
xor
lret
dec
add
pop
mov
sub
sub
out
shrl
aaa
cmpsl
sbb
dec
js
orb
cmp
sub
sbb
test
pop
adc
adc
xor
add
inc
mov
adc
pop
push
les
sbb
fistl
rclb
and
cmp
fildl
cld
je
cmp
mov
push
sbb
jle
mov
fwait
sbb
decl
xchg
test
jle
or
mov
nop
call
or
fstps
mov
movsb
jmp
stos
scas
popf
push
xor
out
push
adc
int3
fidivs
or
ret
in
sar
fbld
xor
mov
dec
inc
pop
or
adc
in
mov
ret
push
jmp
repz
mov
jne
sub
bound
rorb
cmpl
cmpl
adc
mov
mov
xor
push
inc
adc
mov
and
movsl
mov
in
and
add
into
push
or
adc
lds
or
nop
jle
test
jne
cwtl
ja
icebp
pcmpgtb
jo
mov
mov
dec
in
sub
sbb
loopne
or
cmp
push
push
inc
jne
xchg
jbe
jne
xor
aas
mov
fld
imul
aas
mov
add
sbb
je
ljmp
sbb
jg
sub
inc
add
adc
sarl
mov
outsl
jo
inc
repz
leave
jmp
mov
jmp
mov
outsl
add
xchg
jo
repnz
sbb
in
idiv
adc
adc
stc
add
rep
xchg
int
inc
je
cld
lea
xor
std
xor
cld
pop
ds
inc
mov
fldcw
aaa
jbe
add
mov
fists
cs
mov
push
movb
test
mov
scas
clc
jg
mov
sub
cli
dec
sub
jae
mov
call
push
sbbb
jmp
mov
je
cmp
and
pop
cld
je
pop
xor
push
sbb
imul
in
inc
xor
scas
jb
or
and
jne
sub
sbb
lock
adc
jae
subl
adc
mov
scas
xor
cmp
jbe
lret
mov
inc
inc
sbb
ret
ds
dec
lds
push
xor
mov
mov
inc
inc
dec
hlt
or
jg
add
ret
ljmp
cmp
jne
dec
cmpsb
loope
fidivl
sbb
mov
sti
jmp
loop
push
adc
add
and
je
mov
cmp
jne
push
mov
mov
cmp
jne
adc
add
jne
add
in
add
cmp
jne
shr
aam
fstp
sub
push
mov
shr
or
iret
mov
inc
dec
dec
pop
cmp
fadd
or
inc
pop
and
sarl
pushl
mov
cmp
jne
dec
dec
dec
and
lcall
jecxz
or
or
mov
je
mov
adc
mov
inc
or
stos
adc
clc
mov
push
mov
in
fisubs
mov
pusha
and
add
je
or
je
and
je
pop
je
cmpsb
dec
jnp
xor
dec
and
out
push
divl
add
sub
or
cmp
ja
lea
jg
sbb
add
push
es
int
or
jge
jmp
hlt
sti
incl
jle
js
pop
sub
jmp
inc
inc
jmp
mov
xchg
andnps
popa
jb
xchg
and
jbe
push
adc
or
data16
stos
aad
cwtl
pop
xor
mov
pop
pushf
jecxz
pop
mov
mov
xlat
icebp
jbe
jbe
sub
inc
mov
dec
jne
pop
mov
adc
sub
jbe
cmpsb
mov
subl
test
fsubrs
adc
lea
fldt
mov
call
pcmpeqb
lods
xor
sbb
push
and
xor
push
test
xchg
jge
mov
xor
and
stc
jmp
fstp
fldt
insl
bnd
in
xchg
loopne
dec
jg
aas
xchg
cmpl
add
add
stc
in
pushf
or
ret
mov
adc
enter
mov
out
sbb
lret
jg
xchg
xchg
and
inc
mov
mov
cltd
lock
popa
sbb
xchg
add
hlt
and
mov
scas
cld
lret
mov
xor
leave
sbb
mov
mov
inc
jbe
imul
cmp
mov
mov
jmp
lods
lods
inc
cmpb
xlat
fadds
outsb
xor
xchg
mov
or
push
push
int3
into
sbb
rorl
mov
ljmp
test
enter
mov
inc
push
and
daa
lret
into
pop
inc
test
call
pop
inc
in
mov
mov
addr16
leave
repnz
bound
and
incl
outsl
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
inc
mov
call
stos
mov
cmp
or
mov
pop
out
sub
imul
idiv
sub
pushl
jl
xor
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
lcall
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
jmp
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
mov
push
cmpsb
scas
mov
pop
or
addl
cmp
xor
cli
call
pop
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
movsb
mov
and
decl
repz
mov
subb
and
and
outsb
bound
xor
cld
lret
jmp
ss
sti
outsl
shll
movsb
cmp
jne
push
pop
and
add
fcomp
cmp
sub
addb
movzwl
inc
pop
fisubrl
push
test
jo
adc
pop
mov
dec
dec
fildl
in
xor
inc
hlt
mov
sbb
jns
clc
data16
add
and
out
mov
jmp
inc
inc
js
data16
or
leave
out
add
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
sahf
ret
push
dec
popa
jae
push
popa
insb
jne
fninit
fwait
or
pop
cmp
sahf
lock
jmp
daa
xlat
mov
xor
mov
inc
lret
ja
jle
adc
or
push
mov
or
dec
mov
jne
dec
mov
xor
out
jne
mov
mov
mov
cs
fsubl
in
add
pop
or
or
mov
sbb
aaa
int3
or
idivb
rcr
test
or
daa
popa
sub
movups
fs
xchg
insl
and
cltd
or
lock
adc
mov
or
push
cld
ret
cmpsb
ret
cmpl
test
jmp
pop
add
mov
mov
sub
mov
pop
test
inc
add
sbb
in
cmp
je
pop
mov
add
jae
daa
push
mov
mov
push
sbb
cmp
ljmp
lods
mov
mov
mov
sar
push
loope
loop
cmp
mov
dec
jmp
stc
push
std
sti
sub
jb
bswap
add
add
and
jmp
mov
lds
mov
lahf
rclb
mov
aad
lock
scas
xor
test
into
and
add
loop
dec
cmp
adc
and
das
add
lea
inc
push
sbb
loope
pop
pop
and
inc
mov
push
dec
setne
mov
rolb
cmp
mov
mov
mov
shrb
push
call
mov
cmp
fdivl
cmp
fdivl
or
jne
or
push
insb
adcl
pop
popa
lds
dec
and
sbbl
mov
test
test
mov
pop
shl
cmp
mov
mov
cmp
push
dec
jle
jne
mov
pop
lock
jecxz
push
xchg
jmp
loop
shl
push
aam
push
add
repnz
je
pop
add
mov
shrb
mov
pop
push
mov
jge
inc
pop
pop
add
out
mov
mov
cmp
inc
mov
cmpsb
aaa
mov
inc
dec
rol
in
mov
fwait
xchg
daa
pop
push
les
or
sbb
fadd
cmp
pop
lock
pop
mov
in
lock
decl
jle
fistpll
mov
add
sbb
add
dec
jne
dec
out
or
fucomi
sbb
add
sbb
jecxz
loope
ss
dec
cmp
xlat
lahf
push
enter
enter
ds
dec
sub
pop
lcall
xor
call
lahf
in
push
pop
add
mov
lcall
mov
hlt
xor
shlb
sbb
imul
cld
mov
and
rorl
or
or
hlt
hlt
or
or
rcll
xor
push
sbb
xchg
xchg
cmpl
add
and
pop
movb
sbb
add
leave
int3
in
push
call
xor
mov
push
fwait
xchg
pop
iret
cs
lret
and
scas
dec
sti
movsb
orb
jae
sub
pop
push
push
aad
and
sbb
jmp
jne
sub
rolb
add
addr16
pop
cmp
sbb
loope
pop
add
push
adc
loop
popa
addl
cmp
clc
dec
aaa
insl
jecxz
pop
loopne
inc
add
or
test
or
cmp
inc
mov
dec
adc
outsb
add
mov
rorl
icebp
xchg
notb
out
inc
cmp
adc
popa
xchg
loopne
je
dec
sbb
sub
jbe
subb
test
into
notb
test
pop
jbe
dec
xorl
jae
enter
adc
cmc
mov
jne
push
lea
test
je
orl
fimuls
push
cmp
push
sub
sbb
or
mov
je
sub
mov
fstpt
outsl
or
inc
add
jge
loopne
xchg
add
pop
insb
jmp
mov
iret
mov
mov
and
mov
cmp
sub
pop
dec
or
add
jne
fdivs
ret
push
or
push
pop
cltd
pop
add
lds
mov
out
sub
lock
add
addb
cmp
jne
inc
or
mov
inc
inc
pop
call
adc
fsubl
jne
testb
jno
ficoms
sar
out
loop
outsl
inc
jmp
sbb
sbb
imul
sub
adcl
shll
mov
add
xchg
cmp
icebp
adc
or
arpl
jb
inc
setge
jo
xor
cmpsb
movl
or
test
jg
hlt
mov
and
push
addl
push
mov
rcll
and
mov
mov
test
mov
cmp
fcoms
pusha
add
testl
stos
adc
mov
mov
adc
cmc
lea
jae
mov
mov
mov
enter
xor
das
xchg
xor
xor
mov
ret
mov
xor
and
sub
pop
cmp
push
sub
add
cmp
pusha
add
adc
call
xor
push
cmp
sub
ljmp
mov
add
jmp
sub
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
mov
jmp
mov
jmp
mov
xchg
xor
jmp
mov
push
pusha
jmp
mov
popa
pop
data16
xchg
or
jecxz
lea
mov
je
push
outsl
xor
imul
js
test
mov
je
add
cmpsb
add
or
push
inc
sti
sub
mov
rol
push
sub
inc
or
push
mov
ja
mov
or
ja
cmp
push
jb
inc
pop
aas
mov
jg
jne
cmp
xchg
push
repnz
cmp
or
and
aas
mov
xor
pop
stc
mov
xchg
test
dec
mov
hlt
inc
outsl
add
fdivs
dec
add
push
clc
mov
inc
insb
xor
in
jmp
mov
cwtl
cs
or
cltd
jbe
fistpll
mov
cmp
jle
fnstenv
fcom
rcrb
xor
sbb
add
or
loop
and
mov
add
cmp
adc
pminsw
hlt
movb
dec
jg
ret
and
mov
mov
sbb
sti
pop
clc
jbe,pt
add
xor
test
dec
jne
pop
pop
pop
inc
lret
push
pusha
sbb
add
dec
add
push
pop
sub
sbb
adc
daa
shl
adc
fidivrl
idiv
add
test
mov
es
sti
mov
dec
loopne
mov
mov
out
push
shlb
mov
fsts
mov
inc
pop
out
addr16
outsb
jb
add
rolb
sbb
mov
adc
ja
add
mov
mov
leave
outsl
lods
mov
inc
popa
push
cmpw
push
mov
add
mov
pop
sbb
dec
ljmp
cmc
hlt
add
fsubs
add
inc
inc
or
jbe
ret
mov
ror
scas
sahf
adc
cmp
xor
and
roll
and
addr16
sub
dec
loopne
cmpl
push
mov
mov
incl
out
loop
into
inc
inc
sbb
mov
int3
or
pop
add
push
jne
ds
adc
mov
inc
or
xor
xor
bound
jnp
adc
cli
sub
push
xor
push
jne
cmp
je
push
mov
cmp
add
pop
cmp
aad
fldl
mov
and
adc
scas
jmp
mov
pusha
sti
rcrl
imull
inc
and
pop
cmp
jbe
mov
in
repnz
pop
pop
call
clc
dec
jl
lock
clc
lahf
stc
fldl
outsb
addr16
mov
push
sbb
add
test
push
or
cld
push
pop
jmp
jne
pop
xchg
inc
inc
jg
mov
orb
jns
mov
dec
mov
fldcw
jmp
jbe
xchg
adc
test
or
jmp
and
add
and
push
inc
pop
popw
add
jecxz
inc
add
mov
cmp
clc
mov
outsl
push
cwtl
mov
mov
das
stc
mov
movb
mov
cmp
ds
mov
cmpsl
sahf
daa
sbb
cmc
out
push
dec
or
push
mov
rolb
mov
mov
cmpsl
add
bound
xabort
jg
mov
in
icebp
jmp
lea
cmp
push
pushf
mov
sub
push
mov
sbb
cld
out
btc
jns
ja
mov
and
fldl
fistpl
cmp
xchg
imul
mov
jge
xor
or
push
mov
mov
cmp
ret
cmp
je
int
movsb
add
xchg
or
je
add
scas
add
pusha
jmp
inc
add
jns
jmp
push
cmp
or
mov
or
or
addr16
in
lahf
mov
jae
jbe
cmp
or
push
mov
das
add
jp
scas
loopne
pop
add
pop
pop
xor
scas
push
jl
add
and
fnstcw
mov
pop
cld
repnz
fnstcw
or
or
adc
xchg
aas
add
inc
or
aas
ret
sub
je
dec
mov
push
cmp
jle
cld
add
cmp
pop
and
mov
jae
and
and
add
jo
out
popa
cmpl
adc
cmp
je
cmp
mov
jp
fldl
sub
scas
rorl
add
mov
je
mov
mov
lds
push
sbb
dec
clc
add
out
mov
mov
jmp
adc
cmpsb
xor
mov
sub
sbb
mov
dec
jmp
outsb
xchg
int
sub
add
cmp
fs
dec
jne
or
or
mov
cld
jge
aam
cmp
pushl
add
dec
jmp
and
inc
pushf
sbb
repnz
add
pop
dec
jne
lods
push
lcall
jb
lock
xchg
jmp
xchg
roll
jno
mov
rcr
sub
rolb
rorb
and
mov
pusha
or
mov
push
pop
push
jecxz
add
and
cltd
rorb
jo
fidivl
mov
aam
notl
or
lods
push
stos
mov
add
inc
aam
lds
xor
cmc
mov
jp
mov
adc
dec
inc
es
not
dec
rorb
outsl
hlt
adcl
pop
es
jl
pop
rorb
cmp
jge
sub
sbb
adc
mov
outsl
push
or
adc
shr
in
jmp
jmp
push
insl
and
sbb
ss
xchg
lret
mov
sub
mov
mov
add
filds
stc
add
lea
inc
dec
movsb
push
sbb
cli
mov
sub
jns
cltd
mov
push
mov
jbe
std
sub
xlat
adc
imul
add
gs
cmp
inc
xor
push
mov
lea
lock
adc
mov
add
mov
mov
inc
pushf
xor
shrl
push
insb
dec
js
mov
inc
jb
adc
pop
lock
cmp
mov
add
pop
lret
fsubl
pop
mov
bound
or
andb
test
push
daa
lock
jne
sub
or
sub
mov
loopne
je
sub
and
fistl
cld
jmp
rorb
fcmovbe
cli
pop
cmp
je
or
push
push
cmp
sub
pop
mov
or
cmpsl
push
push
das
loopne
push
testb
daa
push
mov
inc
lock
stos
adc
push
cmp
cmp
imul
mov
jno
push
push
nop
pop
cmp
jg
jo
imul
test
sub
fldl
sub
push
and
cmp
inc
push
leave
sub
clc
push
orl
repnz
pushl
mov
pusha
inc
add
pop
xchg
subb
add
add
add
add
cld
mov
shlb
xchg
je
inc
mov
inc
xchg
or
fs
inc
mov
pop
inc
and
push
ja
je
cvtps2pd
or
add
inc
pop
ss
jg
sub
stc
mov
and
ret
mov
nop
pushf
jl
pop
sbb
sub
cmp
push
lods
add
ret
dec
push
or
sti
mov
pop
push
lea
bound
mov
lock
dec
faddl
cmp
xchg
add
sahf
push
xchg
push
mov
mov
push
mov
push
das
rcrb
jl
push
mov
adc
lea
out
cmpsb
mov
inc
sbb
cs
out
push
add
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
cmp
cmp
add
je
mov
dec
mov
in
add
cwtl
clc
jmp
adc
cli
scas
fwait
or
adc
jmp
lcall
add
pop
jo,pn
cs
adc
cmp
mov
call
xor
inc
pop
inc
loopne
xchg
ja
jl
adcb
cmp
adc
jp
mov
call
loopne
inc
sub
ret
mov
repz
pop
jbe
test
dec
push
mov
into
add
int3
jg
out
inc
mov
pop
add
enter
mov
aam
outsb
es
or
dec
repz
adc
and
add
adc
adc
daa
mov
add
test
outsb
into
int3
sbb
and
icebp
jmp
mov
jb
test
xorl
ja
and
orb
xor
mov
cs
clc
inc
add
cld
or
clc
push
push
add
push
mov
mov
add
stc
mov
pop
ret
pop
inc
ficoms
mov
cmp
xor
xor
cmp
pop
push
pop
cmp
or
or
xchg
cmp
adc
bound
pop
add
cs
sbb
cmpsl
loopne
dec
jmp
and
clc
mov
dec
mov
push
mov
jno
inc
js
adc
push
pop
dec
std
mov
inc
mov
cmp
add
rorl
insb
xor
mov
cld
adc
jb
ds
add
adc
dec
jne
lea
add
loopne
or
mov
mov
push
test
push
popa
jge
or
in
pushf
sbb
pop
and
push
adc
sub
jae
sub
push
sub
std
adc
sub
mov
cmp
cmp
or
fildll
sti
add
add
inc
ljmp
pop
pop
icebp
mov
jo
add
je
in
lock
push
or
or
cmp
adc
popa
adc
in
sbb
das
sbb
nop
mov
ja
outsb
enter
and
sar
mov
jne
and
add
cli
adc
pop
pop
ret
clc
insl
xchg
xchg
aas
test
lsl
or
pop
cmc
sbb
inc
push
push
in
add
hlt
mov
push
or
mov
push
call
inc
ja
out
faddl
mov
xor
cmp
xor
cmpl
or
cmp
adc
movzbl
add
shrb
push
retw
xor
les
and
out
cmp
ffree
cmp
je
andl
mov
xlat
push
fucomip
add
push
push
in
sti
jle
das
sbb
add
fmull
scas
add
mov
sub
pop
mov
lea
mov
inc
in
jmp
push
call
lahf
xchg
jge
cmp
jge
mov
cltd
sub
xorb
leave
jo
xchg
add
mov
rorl
mov
cmp
cwtl
xor
int3
inc
sub
nop
sbb
inc
in
inc
add
fwait
insl
xlat
mov
or
add
mov
hlt
add
jp
sbb
or
dec
lods
sbb
xor
mov
outsb
lea
shl
fadds
jne
lret
out
sahf
push
mov
icebp
sub
rolb
inc
aas
inc
daa
inc
scas
aaa
xor
dec
es
jne
inc
cmc
push
sub
xor
fiadds
mov
in
xchg
cmp
cs
pusha
mov
movsb
adc
dec
enter
lret
add
movl
out
xor
xchg
loop
sbb
loope
adc
or
std
jmp
cli
aad
fists
clc
rcrb
lret
jnp
sub
and
xor
cmpsl
icebp
dec
clc
pop
mov
mov
inc
mov
add
xchg
xor
inc
adc
adc
test
xchg
mov
hlt
mov
sub
sbb
sbb
mov
jnp
jne
mov
inc
mov
xchg
icebp
das
ss
sti
mov
pop
push
xchg
push
dec
inc
call
cmp
gs
sbb
mov
adc
mov
pop
jne
sbb
sbb
xchg
add
rolb
cwtl
push
inc
ret
pusha
mov
inc
push
loope
loopne
mov
movsl
jp
push
mov
enter
push
clc
push
sti
jbe
imul
std
inc
mov
cmpb
mov
vmread
pop
fsubl
jle
jbe
xor
fiadds
lahf
mov
inc
sbb
scas
or
or
cmc
mov
or
mov
inc
add
loope
cmpl
in
sub
mov
inc
cmp
outsl
jg
jno
sub
sbb
mov
cmp
andl
pushl
xor
out
stos
lahf
cwtl
lea
sbb
jg
movb
pop
mov
push
push
mov
mov
inc
mov
icebp
or
cmp
dec
add
and
out
hlt
ljmp
jb
gs
xor
cs
insb
cmova
dec
outsl
outsb
addr16
popa
je
dec
sub
or
popa
insl
gs
daa
scas
fmul
push
movsb
neg
jo
push
fucomip
outsl
pop
movb
inc
xor
pop
push
push
lock
add
add
xchg
sbb
sub
add
jo
sub
sbb
test
faddl
cmp
or
dec
cmpsl
rorb
jge
cmp
int
push
add
cmp
add
mov
and
and
push
inc
sbb
jmp
aas
scas
imul
lods
repz
or
out
mov
fildl
in
mov
repz
or
push
jmp
in
xchg
pop
repnz
adc
add
adc
mov
je
inc
cmp
jne
adc
xchg
incl
mul
sub
testb
jbe
add
fneni(8087
addl
or
xchg
pop
sub
repz
test
jae
ret
iret
adc
jg
outsl
data16
popa
jb
cvtps2pi
insb
gs
aaa
pop
jl
jbe
inc
ret
inc
dec
dec
xchg
daa
loope
insb
xlat
mov
push
xchg
adc
add
pushl
ds
push
lock
mov
arpl
jne
das
sarb
cltd
xor
cs
adc
orb
outsb
adc
call
sbb
and
aaa
mov
out
add
xor
lret
loopne
pop
jns
mov
fistps
cmp
xor
push
sub
orl
sbb
ret
sub
push
jno
pop
or
daa
in
xor
mov
paddsb
dec
inc
xchg
inc
hlt
test
ja
mov
add
jl
sbb
arpl
orl
cmp
mov
pusha
jmp
and
cmp
sub
add
popa
and
mov
add
xor
push
pop
mov
jo
enter
mov
push
inc
dec
test
shlb
pop
mov
jae
les
push
push
mov
sub
pop
filds
sbb
mov
outsb
les
add
ret
daa
sbb
dec
lock
cmp
sbb
mov
push
jl
or
and
cmovns
loop
nop
add
pop
js
push
mov
imulb
push
add
js
inc
fistps
mov
aas
or
ret
fadd
jo
icebp
add
test
loope
decl
rorb
rorb
mov
aas
js
mov
inc
mov
mov
dec
inc
cmp
ja
mov
aas
add
adc
inc
jmp
cmp
pop
add
pop
cld
ja
fdivrp
das
push
fcmovb
jmp
or
mov
adc
sbb
lods
xor
and
lret
add
jmp
mov
pop
movsl
pusha
add
dec
lret
shlb
aaa
mov
or
cmp
jb
or
dec
movb
mov
xor
mov
lods
jbe
pop
add
cmp
lea
and
sub
ret
lock
add
jbe
loope
dec
cli
push
imul
pop
or
ja
xor
test
add
xor
roll
cmpl
aas
and
je
cmp
adc
sbbb
sti
orb
mov
call
push
cwtl
and
or
mov
pop
jmp
dec
dec
dec
cld
mov
pop
pusha
mov
or
inc
lcall
lock
adc
dec
cmp
movl
mov
ret
pop
xlat
xor
xor
mov
mov
inc
cli
xorb
sbb
mov
mov
inc
and
out
scas
sbb
and
stos
pop
stc
gs
lret
dec
push
xor
pop
adc
rolb
int3
decb
xor
inc
push
and
sbb
mov
or
hlt
nop
or
fcom
dec
outsl
jmp
adc
or
mov
cmp
stc
cmpsl
das
sub
pop
push
cltd
loopne
add
pusha
xor
test
mov
and
inc
dec
shl
push
mov
test
and
hlt
cmp
inc
lahf
pop
xchg
xchg
pop
mov
or
mov
lahf
cmpsb
fcompl
pop
cmp
mov
sub
shrb
std
stos
insb
add
loopne,pt
adc
xor
sbb
xchg
imul
nop
mov
mov
pop
lea
push
push
mov
mov
sbbb
dec
mov
push
mov
sbb
jp
jno
xor
out
nop
bound
xchg
jno
outsl
data16
incl
mov
in
mov
outsl
repnz
inc
adc
mov
into
mov
mov
subl
add
or
xchg
insl
push
or
inc
mov
or
dec
pop
and
adc
sbb
sub
dec
dec
mov
adc
mov
cmpb
dec
mov
mov
lods
pop
fs
lahf
sub
stos
iret
inc
jbe
lahf
and
and
or
mov
sub
nop
mov
mov
jmp
js
mov
push
dec
or
sbb
mov
outsb
push
and
inc
cmpl
movsb
pop
loopne
out
mov
scas
or
jmp
push
mov
xor
sub
test
imul
mov
rclb
adc
lods
lret
mov
push
jne
fcmovnb
mov
xchg
ja
mov
mov
jae
or
or
cmpl
das
sbb
sbb
leave
push
pop
int
fs
mov
pusha
sub
adc
xchg
push
push
add
pusha
lods
aas
xor
inc
add
jbe
add
sbb
add
push
or
dec
repnz
inc
popa
insb
cld
pop
xchg
dec
popa
insb
pop
add
cs
and
sbb
or
jbe
cmc
fs
gs
push
gs
jb
jns
scas
insl
fidivrl
inc
imul
inc
push
fistpll
inc
outsl
arpl
inc
gs
jne
je
dec
outsl
je
imul
mov
imul
arpl
or
sti
imul
sbb
jb
xor
lcall
push
outsl
insl
bound
outsl
js
imul
ja
nop
or
mov
push
andps
outsb
dec
inc
xor
je
jl
sbb
add
or
inc
sahf
pushf
add
sub
dec
dec
dec
and
adc
inc
dec
dec
adc
fucomi
in
add
cld
setae
in
call
in
xchg
xchg
xchg
xchg
aam
int3
enter
xchg
sarb
mov
test
cmp
cmp
cmp
xchg
nop
mov
test
cmp
je
insb
push
fs
pop
pop
cmp
cmp
push
push
dec
dec
cmp
cmp
inc
inc
cmp
cmp
cmp
xor
sub
or
cmp
and
sbb
mov
xchg
sbb
iret
mov
es
sysenter
mov
mov
adc
add
jb
mov
pmuludq
jb
jb
in
call
jb
aam
jb
jb
int3
enter
jb
jb
mov
jb
lods
test
mov
pushf
cwtl
xchg
nop
jb
jb
mov
jb
jl
je
jb
jb
insb
push
jb
pop
pop
push
push
jns
jb
dec
dec
inc
mov
test
cmp
cmp
push
cmp
cmp
pop
cmp
cmp
push
push
dec
dec
cmp
cmp
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
cmp
cmp
adc
or
mov
cmp
cld
mov
pushf
pushf
pushf
pushf
hlt
lock
call
in
pushf
pushf
pushf
pushf
aam
int3
enter
pushf
sarb
mov
test
pushf
pushf
pushf
movsb
mov
pushf
pushf
xchg
nop
mov
test
pushf
pushf
je
insb
push
fs
pop
mov
pop
andps
dec
jb
and
inc
inc
cmp
jb
jb
xor
sub
jb
jb
and
sbb
jb
jb
adc
or
jb
jb
add
cld
mov
cmp
sbb
hlt
lock
xchg
xchg
xchg
or
in
xchg
xchg
xchg
xchg
aam
xchg
xchg
xchg
xchg
int3
enter
xchg
xchg
xchg
mov
xchg
xchg
xchg
lods
test
mov
pushf
cwtl
xchg
nop
xchg
xchg
xchg
xchg
mov
xchg
xchg
jl
je
xchg
xchg
xchg
xchg
insb
push
xchg
xchg
pop
pop
push
push
xchg
xchg
xchg
xchg
dec
dec
inc
inc
xchg
xchg
xchg
xchg
cmp
xor
mov
sub
mov
rol
loop
or
adc
ret
push
mov
nop
mov
js
cwtl
fnsave
es
and
test
outsb
cmp
or
inc
ljmp
mov
add
inc
and
mov
dec
mov
call
and
mov
sub
pop
push
inc
movsb
pop
inc
ret
aas
and
or
cld
orl
out
cmp
adc
sbb
dec
out
and
push
push
push
lods
cmp
jae
mov
fldt
ret
nop
scas
cmpsl
push
stos
adc
aam
and
push
or
mov
insl
insb
pop
lock
hlt
inc
or
push
inc
jmp
clc
bound
push
push
pop
pop
mov
add
loopne
adc
inc
je
lods
cvtpi2ps
mov
rcrl
repnz
aas
inc
pop
test
sahf
inc
or
inc
arpl
sbb
fstpl
add
mov
gs
push
and
push
dec
inc
inc
dec
add
outsl
mov
pop
xor
pop
push
dec
dec
dec
push
inc
fidivrs
pop
and
in
push
push
pop
sub
insb
mov
dec
pop
dec
dec
dec
inc
push
das
xlat
nop
xchg
sbb
mov
jo
insl
push
cmp
lock
pushf
pushf
je
icebp
repnz
pushf
pushf
pushf
pushf
cmc
div
clc
pushf
pushf
pushf
pushf
stc
cli
sti
cld
pushf
pushf
pushf
pushf
std
jmp
pushf
pushf
pushf
pushf
loope
jecxz
pushf
pushf
pushf
pushf
in
out
pushf
pushf
pushf
pushf
jmp
pushf
pushf
pushf
in
out
out
rcrb
rcl
pushf
pushf
pushf
pushf
aad
xlat
fcomps
fcmovnu
pushf
pushf
pushf
pushf
fstp
ffreep
pushf
pushf
pushf
pushf
rol
les
enter
pushf
leave
lret
pushf
pushf
pushf
pushf
int
iret
mov
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
pushf
pushf
pushf
movsl
cmpsb
cmpsl
test
cwtl
sahf
pushf
test
jo
in
dec
je
jo
insb
dec
add
jno
push
rcrb
ljmp
push
rcrb
mov
xchg
push
sti
jg
rorl
inc
js
gs
imul
xchg
jb
add
and
jo
cmp
mov
inc
dec
gs
jo
nop
in
repnz
mov
cmp
rolb
decl
dec
gs
outsl
jb
mov
mov
out
ja
dec
mov
mov
fidivl
mov
scas
cwtl
mov
push
outsb
mov
add
mov
lock
and
xchg
lock
jb
sub
pushf
xchg
push
jae
cmp
or
sbb
fsubl
outsl
add
mov
inc
inc
imul
nop
add
xchg
sub
scas
pop
mov
push
jle
popa
outsb
addr16
scas
pop
add
pop
orl
jecxz
repnz
outsl
ja
mov
rclb
push
dec
shl
add
jne
add
push
add
fs
jo
fs
push
xchg
enter
jle
gs
mov
inc
mov
adc
cvtdq2ps
mov
insb
scas
sbb
add
cmovne
push
outsl
imul
push
je
or
repnz
xchg
or
inc
popa
jae
fisubs
cmp
mov
inc
inc
push
shrb
inc
mov
xchg
adc
push
loopne
js
jae
adc
fiaddl
ds
inc
push
push
jb
insb
inc
ret
push
add
nop
cmp
add
push
inc
mov
jbe
arpl
nop
xchg
mov
xchg
nop
xchg
or
je
ret
popa
insb
inc
in
scas
or
mov
aas
shrl
jns
mov
inc
mov
mov
loop
inc
popa
fsubl
mov
and
bound
add
xor
push
and
jo
pusha
loopne
fdivrs
aas
or
loopne
inc
push
stos
ds
cmp
adc
popa
data16
sub
sarb
ss
aaa
xor
pop
dec
invd
pop
lds
push
push
inc
insb
jae
hlt
inc
loop
add
cmp
cs
pop
loop
push
insb
jnp
aas
jg
aad
inc
xchg
insb
int3
dec
adc
jb
popa
add
les
jb
sbb
int3
add
insb
mov
out
pusha
cmp
jnp
xor
mov
stos
push
into
repz
mov
mov
or
jnp
sbb
push
loopne
sbb
push
add
les
dec
jl
fdivrl
aas
xor
add
into
ficoms
loopne
shrl
and
ss
add
push
fadd
hlt
outsb
arpl
and
imul
add
ret
adc
repz
add
daa
out
push
cli
out
mov
push
lret
mov
mov
movsb
jbe
mov
mov
daa
and
and
xor
mov
and
inc
scas
mov
inc
shrb
shll
cmp
fdivs
and
movsl
mov
loop
push
mov
scas
cmp
push
cmp
ja
sub
lret
push
fiaddl
ljmp
xorb
bound
push
lahf
inc
pop
sbb
movsb
add
or
mov
mov
cmp
insl
lcall
mov
repz
je
movzbl
push
push
push
or
add
out
mov
cli
daa
imul
repz
jne
mov
jne
inc
inc
ds
mov
sub
or
dec
movsl
cmp
push
incl
and
sti
je
loopne
add
in
out
push
pop
aad
sbb
cmp
rclb
int3
insl
push
adc
fs
iret
leave
adc
or
fs
xchg
lock
cmpsb
sbb
mov
mov
popa
movsl
jo
sub
push
sbbb
inc
jb
cmp
or
outsb
mov
movsb
adc
pop
xchg
push
push
mov
adc
insl
out
ljmp
mov
mov
cmp
jl
cmpb
jbe
adc
or
jge
pop
dec
sub
clc
push
sub
inc
fisubl
popf
add
jno
cld
lahf
dec
ret
mov
icebp
cmp
fdivs
in
decl
sbb
sub
je
jae
cmp
dec
aas
add
mov
pop
xor
push
data16
push
stc
pop
or
lods
pusha
or
jae
inc
dec
jne
lret
loop
mov
leave
jne
sarb
hlt
jnp
jmp
outsl
fidivl
push
ret
mov
shl
icebp
dec
jp
jne
incb
pop
mov
mov
shrb
sub
jbe
add
mov
sub
jmp
out
in
std
mov
dec
jne
push
mov
sub
xor
push
outsb
cltd
les
add
mov
jns
xor
push
pushl
pushl
mov
negl
sbb
in
mov
pop
xchg
jo
cs
dec
inc
dec
cmpsb
mov
add
jl
add
add
fldcw
mov
dec
ja
mov
mov
andl
push
and
fistps
fstpt
js
ret
add
add
sub
add
rorl
fmull
stc
mov
cmp
out
neg
or
fnstsw
sahf
jae
fldcw
add
decb
push
ffree
ffree
ffree
ffree
pop
aad
add
adc
aam
aad
aam
sbb
or
xor
and
adc
cmp
add
push
mov
movsb
aaa
push
xlat
lcall
push
lock
adc
lock
out
cwtl
mov
inc
fcoml
lock
fidivrs
addb
imul
pop
pop
jo
imul
dec
cmp
mov
pop
jns
sub
mov
enter
adc
mov
sbb
cmp
and
xor
es
inc
sub
scas
icebp
ret
add
pop
loopne
push
xchg
pusha
and
jle
or
inc
call
and
stos
pop
lock
mov
adc
mov
jle
aam
cmp
jmp
sbb
pop
rclb
loop
loopne
pop
lea
sbb
test
or
fldt
fcomps
setne
jmp
ss
int3
mov
pushl
pop
enter
addr16
inc
test
dec
ret
in
sub
cmp
xor
icebp
xchg
bound
mov
jecxz
into
adc
jecxz
adc
jmp
and
dec
rorb
sub
sub
clc
or
mov
or
add
jo
loop
add
jo
inc
ja
or
sub
add
sub
sbb
push
push
mov
add
pop
cld
rcrl
jns
ret
jae
mov
jbe
dec
daa
jae
cltd
movsl
daa
jl
push
loope
cld
mov
push
push
ss
push
pop
mov
add
push
push
push
inc
shlb
out
mov
sahf
push
clc
push
rcr
je
push
adc
xchg
mov
cmp
push
mov
sbb
rcrl
scas
movsb
cmp
je
pop
xchg
pusha
push
ljmp
outsb
shrl
inc
mov
sub
sbb
rcr
xor
scas
enter
jne
dec
dec
push
jg
lds
adc
pushf
sarl
push
call
aam
cmp
cld
push
dec
pop
cmp
xor
push
add
lcall
call
mov
adc
cmp
cmp
test
stos
mov
mov
in
rol
cld
imull
push
rolb
enter
xchg
cltd
into
dec
adc
les
or
loop
jecxz
mov
shll
xchg
mov
or
ret
cli
mov
mov
movsl
xor
enter
lea
test
daa
es
mov
sub
jl
jle
or
not
mov
add
clc
mov
jecxz
lahf
movsb
pop
pop
ret
int3
test
nop
dec
mov
pop
lret
lods
mov
pop
fldenv
shlb
pop
pusha
aas
icebp
std
test
ffree
pop
adc
sub
mov
or
mov
iret
arpl
pop
clc
pop
jns
or
pop
xor
xor
repz
mov
mov
in
mov
lock
inc
je
dec
clc
mov
cmp
cli
sbb
ds
rclb
enter
das
xor
in
rcr
iret
xchg
sbb
dec
jmp
test
adc
ljmp
mov
cmp
dec
and
push
out
push
pop
inc
inc
jo
cmp
stos
movsl
fdivrs
outsl
mov
into
mov
pop
sub
jbe
sbb
pop
dec
cmpb
jl
lods
in
adc
dec
mov
mov
jne
test
data16
rcll
xchg
repnz
adc
cwtl
rolb
inc
call
test
loope
addr16
push
in
mov
js
mov
sti
jbe
inc
mov
jl
adc
rol
mov
outsl
rclb
mov
popa
loopne
push
xor
cmp
jne
les
notb
xchg
movb
les
fwait
mov
mov
jo
sub
cmpsl
xchg
sub
adc
mov
call
pop
pop
out
dec
jmp
pop
pop
jg
xchg
push
rolb
or
shlb
cmpsl
add
jge
adc
mov
sarl
cmp
subb
cs
pop
and
jl
sub
jmp
mov
mov
mov
cmp
jne
sub
lods
lret
cmp
jne
fsts
fistpl
and
lods
jmp
adc
mov
lods
movsb
mov
and
inc
sub
mov
leave
jp
sub
in
xor
inc
data16
fildl
sub
testb
jae
sarl
xchg
pop
mov
rep
mov
xor
neg
jg
cmc
js
pop
pop
mov
lcall
xor
cmp
ja
imul
mov
movzbl
add
cld
add
in
dec
inc
flds
jg
decl
sub
loopne
cld
or
jl
or
je
aas
sbb
xchg
ret
and
mov
movsl
notb
data16
pop
jne
lea
mov
lcall
jmp
push
mov
mov
iret
scas
mov
pop
push
push
xchg
push
ljmp
inc
in
xchg
in
or
sub
loopne
cmpsl
orb
fists
inc
je
push
pusha
or
ficompl
imulb
xchg
push
or
jmp
push
push
lcall
ret
sbb
sbb
sbb
popf
cmp
jne
xor
jl
bound
jbe
mov
into
in
ja
aad
jne
jmp
xor
inc
inc
or
sbb
jmp
mov
fidivs
jmp
mov
cld
aas
and
decb
cld
call
pop
js
mov
add
ja
mov
es
cmp
ja
or
sbb
shlb
jecxz
rep
out
orl
push
leave
cmp
lock
ficompl
push
mov
add
int
outsl
push
je
mov
or
je
mov
inc
je
mov
ret
std
imul
mov
pop
push
jl
cld
cmp
jbe
mov
xchg
adc
adc
test
mov
orps
adc
cvtps2pd
push
mov
loopne
mov
inc
iret
dec
jle
sarl
ret
xor
and
mov
out
dec
pop
insb
fisttps
sbb
xchg
push
push
push
mov
mov
call
mov
adc
sahf
xor
js
xchg
icebp
mov
cmp
adc
fistps
sub
inc
or
sbb
xchg
push
jge
mov
in
jg
pop
loopne
inc
lret
orb
cmp
xchg
std
iret
adc
out
dec
cld
lea
sbb
pop
mov
orb
jl
ljmp
pop
sub
rolb
xchg
jg
fisubrs
jge
pop
xlat
mov
lea
fldenv
iret
int
in
lock
xlat
push
xor
stos
or
std
das
inc
adc
mov
neg
jmp
or
add
hlt
ja
mov
stos
xchg
push
mov
data16
mov
insb
mov
inc
dec
pusha
in
or
jg
dec
test
stos
cmp
jne
pop
pop
outsl
aam
loopne
pusha
ret
jg
mov
jg
cli
mov
pop
repz
jge
repnz
adc
mov
cld
mov
xchg
jge
jle
inc
mov
jle
xrelease
or
daa
inc
adc
jb
jp
or
sbbl
jae
sidtl
cs
jg
lea
mov
pop
sahf
sub
adc
add
ja
movswl
mov
add
add
testl
call
mov
cld
cld
jmp
mov
outsl
sahf
inc
nop
dec
dec
inc
dec
inc
dec
lods
or
xor
mov
cwtl
jo
ret
ljmp
ret
idiv
mov
aam
push
or
sbb
sbb
insb
cvtps2pd
dec
stos
orb
jg
fisubrs
stos
neg
sbb
stos
jmp
addl
pop
stos
loop
jmp
mov
les
stos
pop
pop
inc
clc
dec
gs
push
pop
les
push
mov
stos
fisttpll
mov
cwtl
dec
sbb
sub
inc
cmp
add
leave
mov
mov
lret
mov
hlt
insl
jl
cmp
jo
cli
adc
mov
aad
cmp
jmp
lcall
hlt
push
rcrl
inc
test
jne
sbb
testb
lods
inc
in
stos
xor
call
fistps
or
je
inc
jne
pop
ds
pop
hlt
test
and
mov
push
fstpl
repnz
inc
pop
mov
lea
adc
inc
je
inc
cmp
ljmp
mov
xchg
pop
adcb
movsl
fsts
mov
lock
idivb
ret
and
inc
add
and
and
adc
and
sub
mov
sub
sub
out
xlat
cltd
sbb
and
sub
ds
into
mov
push
xor
sub
into
inc
or
xor
sbb
xchg
adc
add
adc
dec
cmp
rolb
fimuls
mov
or
inc
push
mov
adc
jle
clc
addr16
add
movb
cmpb
sub
in
imul
xor
sbb
out
jg
pop
xchg
loope
push
pop
mov
std
fstpt
fldt
fstsw
fwait
mov
testb
je
fidivl
xor
pop
fbstp
lea
mov
inc
sub
dec
loope
fists
in
add
push
cmp
jb
mov
shrb
jns
lcall
outsl
cmpsl
or
or
cmpb
jb
movb
scas
loopne
out
js
decb
and
pop
data16
pusha
xor
rcr
loopne
adc
cmp
inc
xor
out
push
push
push
out
shr
mov
add
jno
adc
ss
jnp
clc
push
adc
jecxz
add
or
sbb
rorl
test
neg
adcl
test
fmuls
or
fisttps
das
sbb
push
inc
sub
push
mov
loopne
jae
dec
add
mov
int
xchg
fcmovu
insl
or
popf
ret
shl
cmp
mov
dec
xchg
mov
sbb
mov
push
sub
call
and
jne
dec
sub
cmp
xchg
cwtl
jl
and
inc
ljmp
dec
adc
sub
movb
cmpb
imull
cmp
jbe
pop
jmp
mov
jecxz
pop
pusha
sbb
inc
pop
adc
dec
aaa
fcomps
push
jns
fwait
lds
push
fldz
cmpsb
cmpsb
fiadds
out
mov
cmp
lods
or
adc
loopne
pusha
jne
icebp
mov
mov
icebp
je
and
fistpll
pop
out
aas
or
cwtl
jne
mov
push
xor
and
std
inc
jbe
mov
adc
aas
jmp
fstpt
rorb
or
test
inc
add
pop
cld
test
insl
and
fsubrl
push
int
cmp
mov
or
add
jae
fimull
mov
fiaddl
jmp
aaa
mov
negb
decl
xchg
stc
es
push
inc
imul
push
addl
nop
jb
aaa
add
push
lahf
mov
xchg
or
imul
lods
push
je
sub
sub
push
faddl
rcll
push
pop
fistps
xor
xorl
add
cmp
idivl
dec
sub
fstpl
fwait
bound
pusha
push
sbb
fcmovnb
cmp
lahf
xor
or
inc
ret
or
xor
push
or
adc
mov
xor
fwait
sahf
insl
adc
push
adc
adc
cmp
clc
out
fistpl
sbb
or
cmp
add
int
inc
stc
inc
lods
fsubp
and
sahf
jae
int3
data16
add
imul
or
data16
adc
cmp
mov
xor
fstpl
fwait
into
mov
mov
dec
outsl
jecxz
lods
mov
adc
add
shlb
lea
mov
insb
xor
xor
push
cmp
xchg
iret
int3
test
and
mulb
fidivrs
push
enter
loopne
xor
adc
fdivr
mov
xor
div
test
jne
sbb
nop
add
sarl
add
jnp
adc
sbb
xchg
lea
add
xchg
imul
add
orb
ss
ja
out
shlb
or
ja
push
jno
or
pop
inc
ja
sbb
out
pushf
push
scas
adc
sub
inc
dec
jne
xor
dec
mov
dec
cltd
idiv
imul
sti
push
inc
or
ds
in
bound
ds
add
pop
ret
or
xor
sbb
hlt
ror
push
and
ret
and
in
test
test
jg
mov
cld
push
clc
hlt
or
push
mov
subb
inc
pop
inc
mov
dec
es
add
xor
sub
adc
add
bound
mov
shl
lods
mov
inc
data16
decw
xor
sub
imul
fcoms
popf
lret
lcall
add
adc
loopne
cmp
xchg
mov
push
int
dec
pop
xor
shlb
add
ret
data16
test
push
mov
dec
stos
xor
add
fdivrs
push
jb
mov
sub
fdivrl
sub
or
xor
add
hlt
lods
in
shlb
pop
push
push
mov
incl
dec
incb
inc
ret
jbe
iret
cmp
fwait
loope
mov
or
in
lods
push
rclb
adc
lcall
sub
adc
ret
sbb
pop
jmp
mov
lea
and
add
nop
mov
xchg
adc
clc
jbe
mov
dec
push
jle
sbb
ljmp
mov
loopne
add
test
pop
arpl
rcrb
sub
push
cmp
inc
sbb
add
mov
mov
pop
inc
cmp
je
cwtl
cld
inc
pushl
add
nop
inc
hlt
scas
pop
cmpb
jne
mov
or
or
ds
outsl
testl
test
xor
adc
inc
in
add
jecxz
cs
outsl
pop
push
in
jge
call
jl
lock
in
xorb
push
enter
mov
xchg
xchg
movsl
es
mov
fwait
or
lret
lcall
adc
ljmp
pop
mov
push
mov
call
jo
call
dec
cmp
push
enter
dec
xlat
insl
lea
jnp
cmp
xor
je
or
lods
xchg
mov
idivb
xor
ss
pusha
cmpl
sub
inc
mov
loopne
jne
or
repnz
add
dec
and
icebp
call
repz
test
ret
aaa
sbb
dec
rolb
enter
jecxz
jb
in
out
xor
addr16
xlat
in
lret
fs
and
stos
pushf
in
out
in
mov
cwtl
repnz
pmullw
pushf
xor
in
sahf
jmp
sbb
je
and
in
je
jmp
or
loope
jne
dec
cmpb
jne
push
mov
js
enter
lret
pop
pop
stos
dec
jp
pushf
std
icebp
cmp
add
add
add
aam
aam
loope
rolb
xchg
jne
adc
push
ds
xor
pop
add
loop
es
movsl
pushf
pop
incl
pusha
movsb
pop
jecxz
push
jecxz
js
inc
dec
push
sub
icebp
ljmp
or
jae
jmp
xchg
movsl
cli
push
pop
and
stos
hlt
mov
push
xchg
jge
mov
add
fimuls
or
and
mov
inc
dec
jne
jge
dec
cmp
dec
mov
or
fidivs
outsb
cmpb
cmp
test
or
or
mov
push
or
mov
add
pop
add
or
or
mov
sbb
sahf
push
xorl
inc
lahf
out
add
iret
fs
lret
mov
out
mov
pop
shlb
jmp
mov
mov
mov
testl
jbe
popf
dec
push
lea
scas
pop
idivl
pop
fdivs
dec
pop
aam
enter
pop
aam
loopne
cmpsl
orb
sbb
xor
mov
mov
mov
add
pushf
mov
je
int3
leave
inc
mov
stos
dec
je
add
jmp
mov
je
aad
fwait
mov
mov
out
sarb
sub
sbb
xchg
pushf
jne
shlb
call
pop
sub
inc
push
jmp
cmp
inc
and
stos
adc
push
push
scas
inc
movzbl
dec
jg
js
test
xchg
pusha
call
add
push
jmp
or
dec
hlt
in
popa
je
or
je
jmp
nop
mov
or
mov
fdiv
fwait
ja
xchg
daa
movsb
mov
sub
push
mov
jp
jne
clc
add
pop
in
xor
cmpsb
into
fiaddl
mov
pushl
cmp
add
mov
sarb
jg
add
mov
mov
notb
or
or
or
jle
dec
popa
movsb
xor
nop
loopne
adc
and
orb
test
das
imul
add
push
pushf
sti
xchg
loope
jbe
lea
in
pop
push
or
sbbb
pusha
jmp
or
xchg
addr16
cmpl
inc
sarl
sbb
inc
pop
addl
shll
addl
and
lea
cli
lock
jge
adc
nop
lret
xchg
mov
fucomip
mov
nop
add
scas
xor
xchg
lea
aam
adc
or
out
jmp
cmpsl
cmp
test
or
or
scas
call
in
rorb
push
cs
test
rolb
and
pop
in
imul
fsts
jmp
leave
jmp
or
in
mov
pop
andb
je
dec
and
rcll
push
fmul
inc
push
push
das
xor
sbb
sub
test
cs
sub
loope
xchg
adc
andb
pop
cmpsl
jle
jmp
jecxz
dec
das
push
dec
add
into
pop
mov
push
dec
adc
xchg
pop
mov
add
testb
cmp
inc
ret
imul
mov
lea
ja
mov
movsb
mov
mov
jno
loope
lds
mov
cmp
jg
adc
push
add
jmp
je
mov
xlat
adc
pop
xor
adc
jbe
xchg
ret
dec
pop
sbb
xchg
add
sbb
xor
xchg
or
inc
and
data16
jbe
xor
ret
mov
jle
adc
sub
jae
jmp
int
push
loope
sbb
jle
popf
adc
ret
mov
cmpsb
mov
jle
add
sar
pop
mov
fsubrp
mull
xor
or
cmp
cli
dec
cmpsb
imul
xor
mov
cmp
movsl
and
inc
daa
loop
js
inc
add
mov
cmp
or
push
cmpsb
mov
leave
or
pop
clc
notl
js
jo
ret
fcompl
or
push
cmp
fmull
add
pop
pushf
popf
mov
inc
mull
repz
notrack
sub
je
dec
je
sub
and
je
or
or
mov
jmp
push
push
push
and
ret
outsb
jbe
push
inc
mov
jle
fadd
or
or
cli
test
mov
gs
mov
pop
fs
add
jg
jl
pop
pop
and
dec
mov
push
mov
rcr
sub
mov
fs
mov
sub
sub
ljmp
test
jmp
and
push
mov
pop
jne
fisubs
das
loop
cmp
cmp
add
jne
cmp
jg
sbb
incl
and
addr16
xor
sub
add
pop
cli
xchg
add
imul
add
addr16
sti
js
add
adc
pop
cld
jmp
in
cld
gs
les
mov
fdivs
test
fcmovu
add
loopne
push
mov
imull
out
shlb
aas
add
adc
lahf
xchg
xchg
mov
jle
cmp
fistl
sarl
dec
sub
addr16
xor
xchg
jle
or
repz
rcrl
push
outsl
cmp
xchg
sub
scas
out
jge
adc
or
xchg
cmp
shl
sarb
jle
outsb
and
xor
fistpl
pop
ljmp
into
add
sbb
push
jmp
pop
sbb
add
and
cmp
push
sub
lods
lock
in
call
mov
in
jmp
aaa
xor
in
repnz
sbb
jmp
lock
scas
push
jbe
decb
cmpb
mov
loop
ja
filds
jno
cs
push
fstps
fdivr
mov
cmp
cmpb
jle
and
mov
jnp
fs
jne
mov
add
adc
ret
repz
or
and
test
push
cmpsl
leave
mov
movsb
and
sbb
loopne
fwait
sub
insl
or
add
adc
xor
lods
rorb
fwait
sub
sarl
lods
inc
lds
fstpt
mov
das
fbstp
add
das
test
test
mov
lock
add
inc
inc
xor
dec
cwtl
mov
sbb
jno
cmp
gs
add
sbb
or
iret
ljmp
stos
test
shrb
scas
mov
fisubs
add
inc
and
jmp
cmp
adc
pop
add
sbb
dec
popa
pop
bound
aaa
and
inc
add
xor
or
and
dec
cmpsb
mov
sub
sbb
add
pop
inc
or
mov
add
push
mov
jg
cmp
test
cmpsb
jo
sbb
and
push
inc
testb
jne,pt
add
mov
sbb
add
jno
sbb
or
and
add
pop
sub
dec
and
orb
xchg
pop
repnz
push
rolb
into
icebp
fwait
shll
xchg
adc
dec
insb
shlb
lods
call
lds
push
pop
sub
push
pop
xchg
clc
sbb
adc
ret
jne
cld
loop
es
popf
sub
jmp
fst
fcomps
insl
dec
out
or
pop
fwait
jmp
sbb
test
mov
jle
fstp
push
dec
movsl
xchg
popa
in
push
dec
push
push
mov
in
call
lock
add
push
mov
sub
jb
or
je
or
xchg
and
and
mov
fwait
stc
es
fsubrl
mov
inc
inc
sub
mov
add
xor
mov
pop
jge
xor
das
sahf
les
lret
push
filds
addl
sub
sbb
lods
xor
or
dec
clc
movsl
sahf
sbb
dec
xchg
jbe
scas
mov
aaa
dec
test
scas
sbb
test
jecxz
daa
xchg
mov
loope
popf
mov
mov
rorb
push
push
mov
test
out
lea
inc
dec
lret
nop
pop
lcall
inc
lock
rclb
lahf
faddl
repnz
sti
or
cmpsl
sbb
pop
add
pop
push
xchg
push
and
into
fbstp
in
shlb
in
loope
call
nop
dec
sub
in
jne
fisttpl
fdivl
xchg
addl
push
stos
push
bound
je
icebp
fiadds
or
popf
add
adc
add
into
pop
mov
or
xchg
cmp
sbb
sub
sub
inc
lock
arpl
mov
push
lods
inc
insl
pushf
mov
jmp
fistps
scas
out
in
aas
mov
ret
push
lcall
or
cmp
pop
sti
ficoml
add
cmpb
push
das
push
push
dec
pshufw
cli
repnz
push
js
xchg
ret
push
xor
subb
dec
shll
xor
jnp
jne
mov
sahf
adc
xor
clc
cmp
or
test
cmpsb
or
jb
sub
clc
xlat
add
adc
stos
sarl
je
sub
je
scas
ret
push
sbb
les
mov
jle
mov
xchg
cs
sbb
cmp
lea
ret
mov
sbb
jge
pop
cld
jle
hlt
mov
pop
call
cmovp
jo
add
jle
dec
dec
add
aas
enter
add
jmp
mov
dec
xchg
jmp
ret
and
push
test
in
adc
inc
jb
jle
call
fs
inc
es
loop
xor
rorb
out
push
addr16
add
fldl
add
sub
add
mov
sub
adc
xor
inc
test
cld
pusha
ja
enter
inc
cmpl
and
ljmp
shrb
mov
mov
aaa
jl
cmp
xor
loopne
and
mov
jle
fidivrl
xor
insb
mov
inc
push
out
sbb
pusha
popa
mov
sbb
inc
sub
clc
scas
adc
mov
sub
frstor
test
sti
inc
negb
cmpb
je
mov
shrl
push
mov
cmp
pop
pop
mov
jbe
andl
pop
sbb
xor
test
lods
mov
dec
sub
repnz
push
mov
add
cld
mov
les
dec
mov
xchg
lea
sub
mov
xchg
add
push
or
shrb
sbb
mov
mov
xorb
mov
fisubs
mov
mov
inc
push
or
lret
push
or
scas
inc
jmp
push
div
and
inc
push
push
sbbl
xor
jmp
push
cmp
add
cmp
xor
xchg
rcrb
adc
mov
mov
subb
insb
test
dec
gs
or
push
pop
add
test
flds
add
movsl
dec
xorl
jnp
jecxz
dec
fstpt
push
les
and
rcll
sti
mov
mov
sarl
lea
repnz
push
ja
push
mov
fwait
push
add
vpmacsww
lret
sti
stos
pop
add
dec
cmpb
rolb
and
ret
mov
adc
push
add
loope
ret
pop
xor
loop
mov
sti
push
jg
cmp
pop
cmp
sbb
call
jno
call
mov
mov
inc
push
xchg
xor
or
pop
roll
push
xchg
add
negl
push
push
dec
sar
lret
push
adc
ljmp
adc
mov
jmp
push
xchg
loopne
dec
nop
and
mov
or
stos
cltd
outsl
cmp
jb
pop
adc
jb
pop
call
popa
popl
sub
loope
adc
or
or
mov
add
mov
cmp
cs
adc
in
or
jge
clc
push
aad
pop
push
in
push
loopne
nop
push
adc
sbb
loopne
cld
js
adcb
mov
sub
lds
out
js
loope
int3
mov
add
xchg
clc
and
cli
roll
and
into
and
pop
jns
call
jb
push
pop
push
push
cmp
inc
cmp
je
jmp
xor
inc
xor
sub
jmp
and
add
mov
dec
shll
or
aam
dec
rorl
or
push
push
das
mov
pop
das
xor
inc
xchg
xor
xlat
pop
mov
add
cmpsb
mov
or
test
jnp
mov
lret
cmpl
mov
dec
mov
and
inc
int3
xchg
inc
push
loopne
sbb
mov
icebp
adc
push
testb
add
or
test
loopne
dec
add
fs
shlb
or
pop
mov
and
pop
or
clc
cmpl
pop
enter
out
ror
shlb
xor
mov
jecxz
loope
pushf
xor
jns
pop
xor
xchg
out
nop
jge
mov
mov
add
enter
mov
fabs
mov
lret
inc
jo
jo
cmp
loop
adc
aad
pop
test
add
xlat
or
sub
out
sbb
mov
and
push
addr16
pop
push
outsb
add
clc
xor
jo
jl
mov
popa
enter
movsb
jb
dec
jb
push
xchg
pop
or
jno
js
mov
arpl
xchg
and
in
shll
jno
mov
loopne
cvttps2pi
push
or
out
jmp
mov
mov
js
mov
mov
xlat
out
ret
daa
mov
push
inc
mov
mov
add
setno
pop
popf
in
sbb
ret
adc
dec
dec
fiaddl
nop
add
sub
adc
inc
aaa
jge
inc
imul
adc
and
ja
and
adc
adc
mov
shll
push
loop
mov
fmull
add
enter
sbbb
add
push
repnz
idivl
xchg
out
mov
adc
or
xorb
mov
jl
pcmpeqw
push
adc
jle
nop
je
jl
lret
fucomip
clc
test
mov
daa
cld
fcoml
cs
pop
mov
dec
push
jne
pop
pushf
xor
sub
in
shrb
inc
arpl
mov
and
mov
movsb
push
and
cmpb
in
inc
mov
lock
cmp
mov
mov
cwtl
xchg
lahf
shlb
pusha
out
dec
int3
inc
adc
dec
or
dec
mov
inc
cli
testl
mov
and
push
push
jb
mov
and
loopne
and
jns
dec
or
inc
fcomps
add
add
adc
mov
mov
mov
nopl
push
inc
loopne
sub
xor
cmp
daa
mov
ja
in
mov
lock
adc
xor
mov
data16
ret
in
pop
addb
xchg
fimuls
xor
cmp
jl
push
and
dec
or
pop
and
mov
fimull
dec
jge
filds
test
cmpsl
push
dec
and
cltd
nop
cmpl
or
stc
inc
loopne
cmp
jge
jl
cmpl
jne
sbb
dec
js
sub
push
add
lods
sbb
inc
or
ret
aas
jno
jbe
js
aaa
in
push
xchg
ds
and
inc
mov
dec
cmp
cmp
xchg
jg
test
sub
popf
testl
enter
movl
mov
shll
pop
mov
jns
push
ficoml
ja
push
pop
lahf
fsubrs
test
or
pop
xor
aas
in
inc
ja
mov
and
vmptrst
sbb
or
popa
push
rorb
adc
push
pop
fs
and
push
or
or
jl
xor
add
fisttpl
into
cld
fwait
or
and
idivl
pop
ja
test
mov
negb
scas
iret
fsub
mov
jne
sbb
test
outsb
push
adc
sub
mov
inc
xor
das
in
insl
ja
pop
push
xlat
jge
ljmp
and
mov
inc
rcrl
incl
inc
inc
jmp
jmp
fadds
push
add
addb
ja
and
inc
sahf
jge
inc
leave
outsb
xor
dec
pusha
and
in
cmp
jl
adc
fmull
icebp
cmpb
cwtl
lea
lock
fists
ret
lock
sub
mov
and
cmp
je
int3
push
ss
mov
xor
mov
add
or
jae
and
lds
sarb
bnd
cmp
mov
sub
ret
mov
adc
sbb
cltd
sbb
sbb
sahf
fisubrs
xchg
daa
loopne
cli
nop
and
ja
mov
daa
mov
sub
jno
add
mov
pop
adc
dec
sahf
add
fstps
pop
inc
loopne
test
inc
jns,pn
fs
jno
add
fsubs
div
mov
daa
shrl
adc
mov
cmpl
hlt
std
test
in
push
mov
fwait
mov
jmp
roll
push
mov
sub
jb
inc
mov
repnz
mov
stos
sbb
jne
dec
loopne
jne
fs
jge
pop
or
pop
mov
mov
clc
pop
mov
pop
nop
add
push
setb
aam
mov
xlat
fs
mov
mov
in
or
addr16
mov
sbb
xor
dec
data16
enter
xchg
jno
add
mov
pop
pop
shr
mov
mov
incl
add
test
xchg
mov
adc
add
lock
divb
pop
decl
call
mov
xchg
ret
mov
mov
mov
outsl
popa
mov
mov
xchg
xor
pop
jne
mov
fmull
retw
aaa
jno
shrb
push
add
jg
ja
cmpw
test
add
xchg
rorl
adc
stos
dec
jne
jmp
push
pop
test
xor
mov
and
add
or
pop
rcrb
xor
test
lret
sub
mov
loopne
pop
in
movsl
pop
mov
pusha
cld
add
fidivs
leave
mov
pusha
subl
or
mov
int
fcomp
mov
mov
cld
inc
call
xor
xor
sub
pxor
mov
push
jg
push
sbb
xorb
out
insl
das
mov
dec
movsl
add
mov
push
mov
pop
pusha
stc
movsb
sbb
mov
pop
mov
mov
jle
xchg
cmp
push
sub
mov
push
imul
pushf
mov
and
mov
pop
out
and
ret
add
pop
nop
lret
ret
sbb
sahf
mov
push
les
inc
rolb
rol
mov
cmpsl
out
mov
pusha
and
enter
mov
and
pushf
inc
xchg
pop
or
or
add
rcrl
mov
outsl
in
sarb
das
fs
add
mov
add
fs
sarl
add
push
popa
insl
pop
jo
scas
sbb
push
jno
and
pop
addr16
and
cmp
pop
pop
shl
push
cmp
ss
ret
sbb
fldl2t
jle
divl
lock
jo
rclb
mov
mov
mov
lcall
mov
inc
adc
xorl
scas
sub
stos
cmp
dec
in
xchg
jnp
push
movsl
jno
xchg
push
mov
insb
jg
hlt
mov
or
fld
mov
testb
adc
add
rol
daa
mov
bound
test
cmp
add
push
jp
stc
push
ret
jl
daa
cmp
in
push
sbb
adc
push
fldl
xor
sahf
or
daa
mov
cwtl
rolb
gs
pop
jno
mov
inc
js
aad
pop
dec
call
inc
dec
call
dec
ret
xchg
dec
mov
push
mov
daa
lock
lea
push
push
sbb
push
inc
lahf
jle
adc
add
rorb
sub
cltd
add
adc
mov
loop
and
clc
in
ret
bnd
sbb
fsubs
lds
push
mov
loop
decb
and
jg
add
pop
mov
jnp
mov
dec
adc
inc
out
inc
xchg
sbb
sahf
test
pop
mov
jne
jb
gs
std
xor
dec
mov
cmpsl
js
jmp
jl
hlt
mov
lea
rcrl
outsb
test
xor
data16
sub
or
loop
cmc
lcall
dec
sbb
xor
or
std
sbb
je
adcl
test
and
adc
rolb
lock
stc
cmp
inc
add
mov
incl
aad
mov
rorl
dec
sbb
data16
and
imul
mov
in
shrl
dec
cltd
loopne
jo
loope
test
push
adc
inc
mov
lret
aas
inc
push
push
lock
xchg
adc
sbb
dec
fisttpll
call
mov
clc
cmp
test
mov
and
inc
push
or
lock
mov
xchg
ret
les
xchg
jp
sub
sbb
mov
mov
aam
mov
xor
test
jnp
lahf
dec
mov
sub
in
xchg
ret
incl
roll
fsubl
nop
outsb
or
ret
inc
decl
cmpl
pop
aaa
mov
rolb
inc
stc
ret
mov
or
lods
pop
xorb
pop
loopne
sbb
mov
inc
icebp
pop
push
mov
pop
add
inc
loopne
sub
cmp
mov
inc
je
test
fistpl
test
push
dec
dec
outsb
adc
pop
jg
int3
xchg
or
dec
or
dec
in
inc
loopne
insb
shlb
ror
cmp
mov
adc
cmp
jl
pop
loop
fs
xor
loop
pusha
stos
imul
xchg
sub
add
xchg
pusha
add
or
frstor
pop
push
dec
push
ds
mov
mov
mov
outsl
es
ror
jne
cmp
jne
add
sbb
lcall
dec
add
add
cli
aam
out
inc
fnstcw
and
movl
out
jecxz
loopne
cmp
dec
repz
shrb
out
add
out
push
outsl
sbb
jno
jne
or
into
clc
cmp
clc
lock
rorb
push
hlt
negl
fsubp
push
sub
fmuls
and
rorb
cmp
enter
and
push
pusha
mov
ds
mov
out
jns
out
jle
lods
nop
lock
mov
cmp
cmp
js
add
repz
pop
lods
jo
mov
pusha
idivl
jns
pop
push
pushf
push
adc
jae
repz
dec
fdivr
inc
je
scas
push
jae
jns
xor
test
lahf
pop
scas
mov
push
insb
add
push
dec
cmp
or
push
or
jg,pn
data16
aaa
pop
add
lret
das
enter
cld
xor
mov
insl
iret
hlt
in
inc
sahf
out
das
in
popa
repnz
nop
call
outsl
cmp
fcoml
jnp
iret
leave
pop
fsubs
adc
iret
leave
jae
inc
int3
dec
enter
cmp
add
in
mov
pop
mov
push
mov
loopne
mov
xlat
mov
push
push
test
movsb
adcl
pushf
pop
testb
xchg
xchg
mov
outsb
push
daa
out
nop
push
dec
mov
pop
mov
sbb
fistpll
repnz
iret
pusha
enter
sbb
mov
daa
sbb
add
or
lods
xor
pop
push
pop
inc
add
sub
mov
cmpl
adc
insb
popf
xchg
mov
insb
out
and
cmpsl
jge
sub
push
and
add
cmpsb
jl
lods
adc
mov
arpl
and
nop
inc
push
cmp
or
aam
sarb
mov
mov
adc
xchg
xor
pop
inc
xorl
jae
mov
cmpb
cmpsl
out
cmpb
fsubrs
push
lahf
test
or
arpl
or
mov
in
inc
jno
xor
js
add
adc
mov
lds
cmp
and
nop
dec
pushf
inc
aaa
adc
xchg
pushf
fisttps
dec
lcall
pop
dec
dec
fcom
push
push
imul
ja
xchg
shlb
int3
pmulhuw
in
enter
in
in
mov
in
in
movsb
mov
in
out
fsubs
xor
push
mov
outsl
movsb
insb
jb
sbbb
test
jb
add
and
push
enter
mov
enter
fnstenv
xchg
mov
mov
pop
xor
jge
leave
sbbb
mov
jb
mov
rcl
pavgb
idivb
xor
testb
je
mov
pop
mov
or
das
or
push
das
sti
leave
fcompl
adc
dec
aas
cmp
xchg
fcoml
or
xchg
mov
enter
xchg
mov
mov
test
cmpsl
outsb
loope
mov
fisubl
ret
pop
enter
pop
shll
xlat
add
and
or
and
enter
jb
fisubl
nop
sub
inc
loope
in
enter
and
ret
and
fwait
and
jecxz
jp
mov
push
jp
pop
pushl
add
sbb
je
mov
pop
ljmp
ficomps
and
mov
adc
cmp
inc
dec
in
xchg
push
in
sbb
inc
cmp
jb
adcb
cmpsl
fwait
aas
fucom
pusha
nop
jns
jb
fildll
add
pop
sbb
lods
pop
das
mov
jbe
or
mov
dec
or
jno
mov
fisubrs
push
add
pushf
int3
psubb
xchg
shrl
jns
sbb
or
mov
push
test
sarb
cmp
pop
das
push
inc
std
push
push
push
sbbb
mov
pop
mov
insl
mov
sbb
xchg
les
and
xchg
dec
es
int3
lods
rorb
cltd
fs
mov
fadd
fmul
cltd
fs
dec
loopne
in
xchg
dec
es
in
movsb
jb
in
xor
lock
movsb
jb
hlt
hlt
test
mov
clc
adc
adc
push
mov
add
in
xor
pop
fsubrl
or
push
es
es
frstor
es
or
jne
cmpsl
and
push
and
jae
add
or
mov
mov
movq
fs
jne
shlb
fmuls
lods
mov
dec
adc
outsl
dec
div
in
in
inc
outsb
cmovg
pop
outsl
jb
inc
insl
jo
xchg
mov
outsl
insl
push
je
pop
push
cmp
and
inc
inc
sbb
roll
mov
jns
pushf
sbb
jae
pop
dec
add
mov
pop
outsl
add
nop
push
out
loope
test
loope
data16
mov
push
je
pushl
clc
adc
ss
stc
add
adc
fsub
aad
pop
test
out
mov
adc
repnz
pop
shrb
loop
adc
inc
cmp
jnp
add
push
mov
lock
xchg
lahf
cmpsl
stc
adc
dec
aam
sub
add
sahf
jnp
call
adc
dec
jnp
in
xor
cmp
dec
sbb
mov
lea
pop
jae
sub
add
ds
imulb
push
inc
mov
test
rorb
push
nop
and
inc
outsb
xor
jnp
mov
insl
pop
in
testl
pop
dec
fidivrl
mov
mov
and
push
movsb
and
sbb
mov
js
test
sbbb
sbb
mov
dec
outsl
in
data16
addr16
iret
rolb
in
inc
jb
sub
sbb
sbb
push
out
inc
nop
sub
addr16
xchg
popa
scas
jp
insl
jo
mov
inc
sub
mov
and
inc
stos
mov
out
push
outsb
divb
int
jecxz
sbbl
mov
arpl
and
adc
fadd
sub
mov
and
jecxz
mov
in
out
outsl
ljmp
or
in
add
in
jg
mov
or
faddl
es
xchg
adc
xor
mov
and
daa
in
and
sbb
loope,pn
test
push
pop
call
and
loop
inc
and
fucomp
outsl
jmp
mov
add
jbe
jmp
aam
mov
cmpsl
adc
js
shrb
adc
pushf
xor
pop
out
jg
pop
inc
push
adc
add
and
push
es
sub
add
fistpl
aas
dec
je
sbb
cmp
add
lahf
gs
mov
loopne
dec
std
add
fldenv
adc
mov
nop
outsl
fisttps
enter
adc
mov
mov
les
jns
fisttpll
mov
jbe
push
sbb
xchg
cmp
xchg
leave
out
scas
in
mov
or
nop
out
pop
call
insb
loopne
ss
add
jmp
inc
rol
pcmpgtd
loopne
xchg
jmp
mov
dec
dec
add
enter
pop
rorb
roll
sub
les
in
mov
fcoml
enter
fsubr
cmp
ljmp
in
lret
js
mov
cltd
loopne
in
add
stos
or
fisubrs
add
fxch
pop
xchg
inc
xchg
sub
jmp
mov
push
je
cli
ret
out
popa
or
in
jmp
adc
inc
sbb
mov
enter
lea
out
fcomps
and
mov
jne
add
pop
test
push
insl
xchg
add
and
push
roll
sarl
or
adc
sub
lahf
ret
add
sbb
pop
push
push
repnz
inc
push
insb
jnp
mov
mov
xchg
loop
xchg
jg
mov
movsb
push
push
push
mov
push
loopne
lock
fcmovu
clc
mov
pop
out
call
and
cld
into
or
fisubrs
cld
testb
push
add
andb
shlb
xor
mov
or
cwtl
and
fnstcw
les
adc
or
adc
jmp
outsl
and
lock
inc
test
imul
lea
mov
ss
mov
add
inc
into
xor
lea
hlt
aaa
cmp
xchg
fcmovb
mov
inc
sub
inc
pop
mov
inc
xchg
sbbl
inc
mov
daa
dec
or
cli
mov
xor
dec
repz
dec
jnp
enter
fdiv
pop
rolb
and
inc
in
cmp
mov
push
jne,pt
pop
push
leave
int3
push
inc
and
fidivl
loopne
adc
or
outsb
cmp
addb
pcmpgtd
lcall
inc
sub
or
mov
xor
mull
and
push
jmp
add
cmp
in
pop
adc
cwtl
and
or
xchg
jb
mov
push
add
stos
mov
pop
ret
aas
leave
test
cwtl
fmull
hlt
fimull
je
mov
or
cmp
or
mov
adc
fmuls
cmp
aaa
adc
enter
fsubrl
xor
das
lock
out
pop
or
sub
add
jb,pn
cmp
aas
adc
jo
mov
adc
push
add
call
loopne,pn
in
in
mov
sub
call
and
nop
decb
sbb
jb
nop
sbb
mov
pusha
mov
sbb
add
inc
and
mov
push
push
jne
in
loop
jns
cmp
add
lahf
fimull
inc
int3
jg
inc
push
mov
cmp
mov
bnd
add
xor
ret
inc
adc
or
hlt
add
hlt
jmp
push
jp
jo
mov
or
mov
jmp
cmc
clc
mov
lcall
bound
ds
jne
or
imul
les
sbb
or
pop
jb
jg
loope
push
xor
cmp
hlt
mov
dec
or
sbb
mov
pop
xor
pop
pop
outsl
dec
popl
and
xchg
inc
iret
jns
arpl
and
div
push
mov
mov
or
push
dec
je
add
popf
mulb
jmp
and
mov
cmp
cmp
jmp
inc
lock
sti
and
or
sbb
add
or
nop
push
daa
call
and
hlt
jp
les
mov
inc
mov
adc
bound
mov
inc
add
movsl
rdmsr
in
jg
cmp
out
pop
test
inc
add
inc
lret
loope
cmp
out
adc
adc
xchg
cltd
loop
pusha
mov
xchg
cmc
mov
hlt
mov
sarl
and
cmp
or
mov
xor
pop
daa
add
lret
xchg
clc
push
sub
add
adc
add
inc
cmpb
test
push
push
fiaddl
test
daa
mov
jb
pop
orl
data16
push
xchg
mov
iret
mov
jg
in
cli
sbb
mov
cmp
ja
sub
sub
mov
repz
push
jp
scas
shl
dec
repz
clc
and
scas
pop
jnp
clc
pop
pop
imul
push
mov
mov
hlt
pop
inc
ljmp
add
clc
jnp
loopne
xor
sbb
adc
dec
mov
mov
mov
adc
insb
inc
mov
clc
fldcw
xor
push
cs
dec
inc
inc
jnp
dec
lock
add
push
dec
xlat
pop
loop
sti
cmp
and
xor
call
xchg
sub
jg
stc
pusha
pop
in
push
loopne
jg
mov
or
loopne
movsbl
or
loopne
aaa
fcoms
mov
pop
shlb
loop
adc
jb
mov
int3
cmp
jne
sar
mov
jge
add
jg
adc
je
dec
je
sti
rclb
jmp
andb
les
ja
je
mov
repnz
adc
add
notb
push
in
push
or
sub
ds
dec
insl
mov
inc
popf
push
dec
idivl
xlat
push
hlt
adc
je
or
cs
add
scas
add
dec
or
pop
rclb
xchg
mov
es
inc
fnsave
insl
leave
sbb
mov
fnsave
shrl
mov
and
test
or
test
aad
rorb
and
test
pushf
mov
mov
stos
cwtl
outsb
push
lock
jmp
adcl
ds
nop
outsb
xlat
mov
popf
nop
inc
sub
xchg
mov
mov
in
cmpsl
inc
mov
and
call
pop
loopne
hlt
or
test
frstor
mov
mov
add
adc
fstps
jb
sti
or
js
shr
push
sub
cmp
test
sbb
mov
jb
or
out
mov
cld
nop
sbb
push
in
aam
cld
sub
je
loopne
xor
cmp
aad
or
and
pop
mov
mov
inc
adc
and
in
mov
loopne
and
loope
cmp
repnz
adc
repz
imul
into
repz
iret
out
adc
sub
mov
dec
xor
push
or
pop
pop
jge
cwtl
inc
pushf
out
push
mov
in
rolb
movsb
cmp
push
cmp
dec
xor
xor
sub
insl
les
sarb
xor
cmp
cmp
in
pop
nop
es
mov
pop
and
fsubl
ss
cwtl
fcomp
aaa
fsubs
fdivs
and
cwtl
xor
sahf
pop
mov
mov
jg
or
rcr
int
ljmp
insl
and
int
or
enter
and
lea
add
mov
jge
loope
incb
sbb
push
cmp
jbe
jg
inc
scas
push
pop
jns
mov
jmp
push
inc
xchg
imul
shlb
xchg
insb
in
jo
fnstsw
pop
ret
dec
cwtl
add
and
popa
and
and
or
popa
lods
and
test
test
ficoml
cmp
mov
dec
dec
out
add
xor
and
mov
add
dec
mov
sahf
xor
xchg
and
in
jb
and
or
push
nop
rclb
jmp
jle
cwtl
lock
nop
mov
add
loope
cmp
push
xor
rolb
push
dec
pop
and
jle
mov
testw
movsl
xchg
das
mov
loope
bnd
mov
in
or
movw
ja
jno
aam
pop
push
or
add
push
pop
aam
xchg
je
push
mov
ret
stc
xchg
push
or
adc
gs
scas
fs
fstl
or
gs
mov
sub
mov
dec
cmp
push
push
inc
test
or
push
jg
ljmp
cmpl
jb
not
mov
dec
sub
xchg
out
je
jg
lahf
inc
insl
jo
jns
add
jne
pop
cwtl
roll
and
gs
and
arpl
or
push
ds
add
mov
outsl
repnz
outsl
jne
xchg
jb
outsb
arpl
add
insb
sub
dec
pusha
xchg
push
ret
iret
xchg
and
fdivrl
fwait
shll
imul
aas
inc
arpl
sub
mov
iret
push
and
mov
mov
mov
ss
fistl
lock
xor
into
xor
xor
imul
or
add
jg
adc
out
ja
push
dec
call
pop
cmp
stos
popf
and
ret
inc
sti
ss
mov
mov
add
inc
sahf
push
sub
jno
pop
gs
arpl
cmp
fstpt
stc
jl
xchg
ret
and
sbb
mov
push
iret
inc
cmp
xchg
loopne
in
jno
pop
dec
pusha
orb
imul
and
outsl
and
enter
and
and
fdivrl
mov
addb
inc
outsb
jns
inc
popa
sbb
push
and
sar
bound
gs
push
aad
and
pop
jo
pop
jle
sahf
testb
scas
sahf
js
push
xor
sbb
loop
jne
push
ljmp
push
movsl
orps
stc
jbe
lea
test
dec
sbb
test
xor
cwtl
cmp
sub
pushl
jne
out
inc
xchg
push
shl
mov
shr
lahf
clc
rclb
les
push
add
loop
jns
aam
lds
clc
or
xlat
sbb
sbb
clc
mov
fdivrs
insl
jge
cmp
je
dec
fsubrl
pop
adc
add
clc
xchg
pop
xorb
mov
js
inc
jle
imul
lahf
inc
and
inc
call
ret
test
aas
loopne
inc
add
addb
mov
push
mov
call
cli
pusha
adcb
add
das
mov
push
sti
cs
or
std
xchg
std
xor
add
and
insb
popa
mov
jb
push
mov
ljmp
fs
arpl
jp
mov
mov
pop
jle
sbb
fcoms
mov
iret
rorl
mov
ljmp
loopne
mov
flds
popf
pusha
addr16
je
enter
leave
les
outsl
pop
js
xor
cmp
std
repnz
dec
jb
or
lret
aam
sub
rolb
orb
and
jns
push
inc
sub
xchg
sti
cmp
sbb
outsb
ja
ret
jno
inc
mov
xchg
fnstenv
loope
or
test
lret
mov
daa
cmp
lock
cmp
or
inc
jb
pop
cld
pop
lods
or
cld
jl
inc
xor
inc
sbb
add
sbb
add
dec
subb
leave
sbb
xchg
xlat
outsb
adc
lock
xlat
popa
sbb
push
inc
dec
jne
mov
or
popa
mov
movsl
nop
pop
mov
inc
out
dec
mov
jne
addl
pop
xchg
leave
pusha
mov
jmp
je
dec
cmp
add
and
sbb
sbb
fistps
rol
sbb
pop
jns
sub
mulb
cmp
inc
mov
mov
out
adc
pushf
adc
xor
cmp
fs
pop
movsb
jnp
jle
pop
add
nop
lea
gs
cmc
sbb
nop
fdivr
in
in
sbb
in
mov
add
stos
pushf
fsubl
imull
pushf
pushf
scas
nop
xchg
xchg
pushf
pushf
pushf
pushf
xchg
xchg
xchg
xchg
pushf
pushf
pushf
pushf
xchg
cwtl
cltd
lcall
popf
sahf
pushf
pushf
pushf
pushf
lahf
addb
addl
xchg
adc
pop
pop
xlat
sbb
cs
mov
sub
or
jb
mov
mov
push
add
inc
add
into
sub
xor
dec
in
rolb
adc
lret
lret
or
dec
push
jbe
mov
mov
pushl
sbb
imulb
fbstp
and
push
cs
dec
xor
add
clc
jle
sub
popa
and
sub
loopne
in
jno
cs
jge
cmp
cmp
mov
pop
sarb
sub
test
mov
xor
pop
dec
mov
gs
adc
or
or
fisttps
lock
pop
cmpsb
fisttpl
mov
dec
jl
scas
push
pusha
xchg
mov
mov
jg
mov
je
mov
dec
and
sbb
inc
add
and
jmp
mov
and
je
jmp
cmp
sbb
test
aam
int3
out
jne
lahf
push
mov
mov
mov
subb
icebp
aas
pop
je
notl
lar
outsl
and
decb
ja
inc
adc
sub
std
jmp
call
jmp
dec
mov
out
divl
cld
push
add
add
ret
mov
movsbl
shrb
sbb
xchg
push
into
sti
jo
mov
in
ds
in
push
lcall
cli
je
add
cmpb
ja
jb
iret
shll
call
add
out
mov
mov
or
lcall
lea
jne
aaa
jnp
push
mov
add
call
dec
lcall
loop
push
mov
inc
mov
lods
cmp
lcall
add
xor
jle
and
pop
loope
jge
js
adc
dec
loop
mov
outsb
adcl
cmp
push
clc
jle
aam
es
lcall
aam
xor
movsl
xlat
lcall
lods
jmp
xor
mov
dec
clc
lods
sub
pop
sbb
mov
or
or
adc
mov
pop
mov
pop
lahf
sub
ret
pop
add
and
or
adc
call
or
mov
adcl
mov
add
lcall
inc
arpl
jne
sub
mov
stos
hlt
xchg
lock
cmp
mov
push
xchg
add
fnsave
or
cmp
lcall
iret
lods
pop
aaa
and
inc
and
les
inc
push
ja
repnz
or
test
mov
jnp
lock
loopne
ja
and
jmp
pop
lock
int
adc
fldt
fstps
fwait
jmp
lahf
hlt
movsb
leave
fucomp
add
inc
add
jbe
add
pushw
or
cmp
test
pop
fmuls
pop
mov
lret
add
mov
mov
pop
jge
jecxz
test
and
or
xchg
lea
repz
mov
js
outsb
fstps
fwait
push
out
sub
fisttpll
inc
push
fistpll
outsl
jo
lds
mov
repz
sti
cmovs
push
xor
push
add
jmp
pop
jmp
jnp
cmp
dec
fucomp
push
and
lods
orb
loopne
sbb
inc
loop
jmp
add
mov
filds
js
jno
pushl
adc
fistpll
add
call
js
orl
xor
out
insl
mov
ja
jae
jl
jnp
jne
pop
adc
dec
or
dec
add
int
call
mov
mov
pop
sti
cltd
fxch
jecxz
or
push
push
xlat
xchg
sbb
add
outsb
or
inc
les
mov
adc
pop
orl
and
adc
and
pop
mov
pop
aad
xchg
inc
pop
add
push
sbb
iret
leave
insl
cld
scas
adc
add
push
inc
imul
xor
fs
gs
je
outsl
push
or
pminub
pusha
popf
sbb
adc
or
lods
and
sbb
sub
sahf
dec
outsb
insb
jns
inc
insb
popa
ss
jb
into
test
dec
roll
repz
ss
push
lods
bound
inc
je
insb
or
outsl
fistpll
push
dec
imul
mov
shrl
or
imul
add
leave
clc
add
dec
mov
gs
add
imul
mov
in
or
or
dec
gs
jnp
mov
ret
flds
outsb
adc
outsb
sub
jne
mov
pop
cs
add
xchg
mov
jnp
inc
jbe
push
gs
arpl
movsl
cmc
popa
mov
rclb
sub
pop
inc
adcl
insl
pop
mov
adc
sub
mov
mov
adc
jne
pop
adc
mov
mov
mov
xchg
xchg
mov
or
sub
lcall
dec
dec
xor
sub
fbld
push
daa
or
cwtl
dec
sahf
pop
and
hlt
pop
sti
add
popf
or
mov
enter
or
mov
sbb
popf
add
ds
push
inc
sub
fiadds
enter
adc
mov
jle
sbb
mov
add
movsb
pusha
xchg
ds
dec
imul
pop
scas
pop
int3
sbb
inc
inc
int3
jae
mov
add
add
addb
imul
repnz
adc
ds
sbbb
jo
mov
dec
push
mov
adc
xchg
add
test
rcr
mov
mov
and
sub
and
jle
inc
mov
cmp
adc
enter
aas
push
push
inc
imul
cwtl
add
mov
and
lods
mov
mov
les
aas
mov
scas
add
sub
xor
and
pop
push
cmp
fs
inc
push
push
push
add
and
inc
push
fisttpl
push
add
decl
push
orl
test
movl
test
test
push
dec
xchg
sbb
sti
mov
push
int3
int3
mov
push
mov
lods
rorb
movsl
mov
cmp
fs
add
dec
or
push
in
sbb
orb
add
ja
sbb
xchg
pusha
ret
adc
adc
rcr
dec
addl
pop
xor
cmp
cmovns
jae
fs
popa
jo
lds
xor
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
and
adc
pop
xlat
lods
mov
mov
add
adcl
test
cmpsl
mov
dec
cld
dec
aaa
mov
test
test
and
dec
repz
xlat
jbe
inc
outsl
pop
mov
adc
pushf
ja
fwait
jge
dec
aaa
movsb
push
aam
sub
push
sbb
ds
push
les
mov
lods
rorl
nop
scas
pop
sbb
ljmp
jge
or
dec
lock
mov
mov
pop
fdivl
enter
pushw
pop
xor
cmpsl
push
push
or
adc
pop
outsl
xchg
mov
in
pop
pop
hlt
push
push
pop
mov
push
pop
xor
push
je
dec
into
lock
pop
jo
push
mov
xor
xchg
outsb
adc
pusha
js
loope
and
inc
xchg
sbb
push
mov
pop
and
add
inc
add
arpl
mov
pop
pop
aas
jno
dec
mov
push
int3
mov
push
adc
cmp
outsb
aam
pop
inc
push
pusha
push
dec
jecxz
ffree
push
push
or
push
inc
mov
iret
pop
and
adc
out
adc
data16
int
out
in
add
inc
cmp
pop
push
xchg
inc
bound
outsl
fiadds
sub
xor
push
ds
dec
xor
insb
and
push
outsb
fimull
test
xlat
pop
mov
xor
int3
inc
in
repnz
out
jbe
mov
andb
push
mov
xchg
push
enter
or
jb
pop
jb
adc
jb
pop
sbb
and
jb
and
and
dec
sub
add
push
cltd
sub
add
repz
aaa
mov
mov
frstor
cmp
cmp
push
adc
loope,pt
aas
dec
and
or
adc
xchg
cs
cmp
sbb
dec
mov
push
cmpsl
or
and
cld
push
repz
iret
les
iret
repz
and
inc
rorb
dec
test
mov
push
test
adc
or
and
in
xor
adc
dec
cmp
jmp
sub
push
jo
in
mov
push
lahf
jle
fdivrs
mov
jl
jbe
jmp
insb
movl
ss
xor
jo
outsb
push
jbe
popa
dec
clc
out
and
das
push
inc
or
jo
loop
call
daa
out
push
jecxz
faddl
pop
inc
mov
jo
icebp
data16
cltd
sbb
cmpsl
lock
aas
inc
shlb
push
gs
mov
pop
icebp
mov
cmpsb
jecxz
adc
outsl
mov
push
into
fcomp
pusha
push
mov
das
mov
pusha
xchg
arpl
rcl
inc
aam
out
loopne
adc
int3
jno
jg
mov
cmp
repz
mov
call
in
pop
inc
int
dec
addb
mov
jecxz
rcrl
ss
clc
outsb
push
xchg
mov
adc
sbb
mov
add
ljmp
inc
std
mov
pop
pushf
inc
xor
testl
jbe
push
loope
icebp
mov
in
mov
adcb
mov
pushl
decl
clc
push
push
push
push
push
push
loop
cmp
lock
call
or
inc
push
adc
repz
sbb
aam
js
mov
push
clc
push
in
sub
or
pop
subl
push
dec
lds
inc
mov
cs
inc
decb
pop
add
cmp
or
pop
pop
std
and
push
popa
addr16
dec
fdivrl
adc
out
fsubp
inc
mov
test
testl
mov
loopne
adc
scas
bsr
arpl
sbb
cmp
cmp
mov
pop
test
mov
push
dec
sub
repz
jb
mov
cmp
repz
mov
mov
lock
cmp
mov
fsubs
push
aaa
pop
sub
sub
push
mov
push
dec
dec
and
or
add
push
mov
and
push
clc
mov
jl
push
push
data16
lret
push
push
jns
sbb
xorl
faddl
adc
enter
cmp
or
push
pushl
inc
movl
loopne
jl
adc
or
outsl
jne
sbb
cmpsl
pop
push
leave
ds
movsb
xor
and
movsb
arpl
movsl
fwait
addb
in
clc
sahf
or
shrl
cld
sbb
or
cmp
cmp
xlat
bound
inc
xchg
cmpsl
je
test
shl
push
mov
ljmp
lret
mov
mull
sbb
or
test
cmp
sbb
imul
sti
rolb
arpl
inc
cld
sub
jne
ja
shl
mov
sbb
adc
loopne
sarl
jl
adc
cmp
mov
cmp
shl
cmp
sub
fcoml
pop
in
nop
iret
add
sbb
pop
or
inc
sbb
or
or
sbbb
leave
sbb
mov
fwait
aas
lcall
push
dec
or
xor
or
imul
and
sbb
les
mov
and
dec
mov
inc
push
and
inc
mov
mov
and
pop
sbb
sub
xchg
lcall
mov
adc
mov
push
subb
or
lock
mov
clc
and
add
push
dec
dec
pop
jo
jecxz,pn
push
stc
push
dec
cld
cld
loopne
rorb
xor
xchg
jo
loope
fisttpll
lea
push
mov
les
mov
pop
shll
pop
sbb
and
das
inc
cmc
and
adc
divb
gs
pushf
loopne
popf
loopne
pusha
xchg
aaa
cmp
bound
hlt
cmp
imul
ret
push
pop
cmp
and
cmp
inc
rcrb
or
xor
rcll
add
pop
xor
inc
dec
rcrb
mov
mov
sub
add
jbe
pop
dec
sbb
rorb
mov
ljmp
inc
xchg
sbb
adc
icebp
push
sbb
jbe
or
leave
xchg
or
push
mov
lea
repz
ds
je,pt
loop
pop
addr16
pusha
fcmovbe
cmp
inc
adc
mov
adc
out
lock
push
lea
push
pusha
subl
lret
mov
push
cmpsb
jg
inc
dec
jne
mov
sub
je
cmp
ret
addr16
mov
out
push
add
mov
jb
xchg
sbb
iret
hlt
push
mov
xchg
popf
dec
dec
fmull
cmp
xchg
dec
fldcw
xchg
arpl
hlt
insb
sbb
jp
push
pop
or
cmp
mov
es
and
sub
sbb
mov
fmull
inc
call
adc
les
dec
insl
jl
and
sub
sti
mov
jne
push
sbb
test
and
and
adc
inc
or
xorb
in
fucom
mov
xor
xorb
inc
sub
rclb
lock
ljmp
push
pop
in
mov
jecxz
inc
mov
dec
call
rcrb
sub
aas
mov
pop
xor
add
sbbl
aaa
pop
add
add
or
adc
jb
pusha
jge
es
push
aad
jge
and
int
inc
lock
into
rorb
push
sbb
data16
xor
aad
cmp
mov
add
mov
xchg
mov
or
push
mov
cltd
jne
or
popa
xor
cli
call
mov
fcompl
repz
or
js
shlb
mov
adc
xor
xor
enter
mov
pop
rolb
and
sub
andb
add
or
cli
dec
jae
pop
popa
sbb
xchg
repz
movsl
sub
sub
push
adcb
pop
subl
xor
push
sub
or
lock
stc
jmp
push
andb
xor
add
add
sti
inc
ss
dec
jp
mov
or
scas
pop
rcrb
js
add
loope
les
jg
push
xchg
fldl
xor
inc
add
mov
popf
ss
cwtl
cwtl
clc
test
aaa
lock
es
pusha
es
sbb
out
sub
jmp
dec
cmp
cmpsl
jmp
push
je
mov
ret
and
and
and
xor
add
fbstp
lds
and
dec
and
add
add
inc
push
and
leave
leave
mov
pop
ret
and
adc
or
mov
sbb
outsb
mov
in
mov
loopne
mov
imul
pop
ds
add
addb
or
pusha
mov
cli
ss
addr16
pop
or
push
inc
test
sbb
sub
mov
sub
hlt
adcl
fisttps
sbb
cmp
inc
mov
mov
xchg
push
pop
bsf
js
jne
test
cmpsb
cmp
mov
cmp
dec
aaa
loope
js
xor
push
in
or
inc
add
xlat
ret
cmp
rcl
cs
add
loopne
or
cmp
stos
cmpsb
aam
cld
mov
jmp
ret
pop
loope
push
stos
add
jg
pop
cmp
lret
sbbl
dec
cmp
jne
dec
mov
jp
add
dec
xchg
or
sub
add
xchg
pop
hlt
mov
imul
jl
add
and
mov
shlb
mov
movsb
fldl
mov
shrb
test
mov
cmp
push
ror
jbe
xchg
call
dec
adcl
xchg
cmpsb
pusha
add
mov
mov
pavgw
mov
add
popf
push
bound
faddl
xchg
dec
push
xor
fs
mov
pop
pop
push
adc
cmp
sbb
push
ja
cmp
push
aas
sub
nop
jo
add
lahf
pop
add
outsl
xchg
movsl
rolb
dec
nop
sahf
mov
aaa
pusha
push
aas
xlat
arpl
loopne
mov
pop
mov
mov
inc
cltd
and
andb
loope
sub
cld
ret
pop
mov
push
or
test
jnp
xchg
movsl
cs
adc
arpl
outsb
xchg
cld
pop
daa
adc
not
dec
imul
pop
fs
fstpt
xor
cmp
mov
dec
ficoml
xchg
hlt
ret
loopne
jo
xchg
or
mov
push
jp
cld
pop
shl
ret
lock
stc
cmp
lock
imul
fsub
and
fst
push
mov
out
sbb
ret
fstpl
and
mov
adc
les
not
fldl
xor
out
sub
inc
movsb
rcrl
inc
lcall
mov
lcall
pushf
arpl
mov
sbb
add
dec
push
scas
ja
push
mov
mov
jo
xchg
jae
jae
loop
inc
aas
ljmp
incl
or
leave
ret
inc
sub
popa
jae
outsb
pop
loopne
movsb
das
mov
jne
out
add
push
push
into
cld
pop
and
inc
decl
js
push
dec
loop
jge
sub
enter
jnp
ljmp
inc
sub
inc
jbe
mov
icebp
push
stos
or
ja
movsl
nop
push
mov
jge
and
mov
aaa
clc
test
xor
push
jae
sbb
or
xchg
mov
xchg
mov
iret
pop
aas
jo
lods
cmp
dec
dec
imul
push
pop
xchg
int
sbb
inc
add
aaa
add
push
or
xor
test
mov
xchg
sahf
jmp
and
push
js
or
jmp
pop
add
mov
cld
adc
sub
add
dec
or
push
sbb
in
cmp
jne
sbb
imul
leave
decl
jle
mov
jae
push
mov
sbb
sbb
and
hlt
jne
idivb
jecxz
out
or
test
and
les
fmulp
shlb
call
fstpl
ret
sub
sbbb
mov
enter
outsl
call
decb
leave
jo
scas
dec
shl
push
jmp
push
scas
sbb
mov
test
inc
jns
mov
push
fildl
and
addb
and
and
xchg
push
fidivs
aad
pushf
shlb
sub
jg
dec
hlt
dec
dec
inc
push
adc
sub
push
outsl
xor
push
subl
add
or
add
aaa
inc
aaa
jb
mov
inc
xor
inc
scas
and
or
mov
adc
es
mov
in
add
shrb
adc
cmpb
add
inc
jne
scas
jmp
dec
lds
adc
inc
jo
sahf
or
fadds
test
seto
dec
adc
pop
inc
and
jnp
add
lds
inc
xorb
ss
fsubrs
test
mov
lock
inc
daa
mov
dec
dec
cmp
sahf
es
mov
out
add
inc
push
nop
sti
xor
push
pop
adc
cwtl
sbb
sar
mov
shl
sbb
cli
xchg
lock
call
out
je
add
lcall
enter
push
fisubl
das
push
ret
pop
xorb
fs
mov
jp
insb
sub
aad
sbb
add
shrl
sbb
push
add
cmovp
leave
je
stos
pop
das
subb
add
mov
bound
pop
push
push
push
inc
adc
lock
jmp
aaa
fmuls
or
test
test
loopne
sub
mov
incl
mov
nop
cmp
ja
and
inc
imul
push
cmpsl
mov
cmp
jl
adc
push
inc
cmp
jne
inc
movsb
dec
sti
decl
jne
les
sub
mov
xor
sbb
xor
ret
jno
aam
imul
inc
push
add
in
inc
mov
lea
movsb
in
aas
push
mov
jo
int
pop
or
nop
rorb
inc
in
or
sub
ret
or
rcll
mov
jecxz
sbb
inc
add
sub
insl
aaa
outsb
imul
mov
div
rcrl
sarb
or
cmp
cmc
daa
out
ret
mov
jo
cltd
mov
jb
sbb
test
js
filds
xor
and
inc
aaa
dec
sbb
mov
pop
pop
mov
add
mov
inc
int3
mov
inc
xor
pushf
and
or
or
dec
stc
add
xchg
aas
or
bound
stos
sbb
cmp
sbb
aam
aaa
lock
cmpsb
mov
bswap
fbstp
inc
mov
and
dec
and
arpl
push
or
jge
jmp
or
jg
lods
add
and
dec
dec
add
and
adc
mov
fildll
mov
pusha
cwtl
adc
dec
xor
mov
jb
dec
movsb
cmp
or
shl
inc
sub
cmp
in
xchg
out
cmp
lock
test
mov
add
out
in
sub
call
push
sbb
push
add
enter
cmp
ja
lds
mov
mov
repnz
jmp
xchg
dec
aam
roll
subl
inc
mov
mov
xchg
divb
adc
pop
push
shlb
pop
and
pop
lea
test
in
sbb
mov
xor
mov
sbb
xchg
jo
sub
xchg
daa
dec
clc
sub
pusha
repz
adc
jecxz
push
pop
movsb
mov
ret
add
push
sub
mov
push
push
clc
mov
xor
dec
dec
lret
in
push
push
pop
and
dec
orl
rcrl
jae
pop
shlb
in
outsb
pop
shr
inc
stc
dec
fbstp
xor
icebp
jo
popa
fdivrs
xor
fdivrs
jnp
push
in
sbb
rorl
stc
dec
adc
fiaddl
push
pop
aaa
sbb
pop
out
out
cmp
and
nop
or
jecxz
inc
scas
nop
dec
cmc
pop
js
enter
cmp
loopne
add
shrb
add
jns
insb
sub
dec
mov
enter
xchg
ljmp
xchg
or
imul
push
jp
cmc
pop
dec
movq
inc
ret
mov
dec
dec
into
pusha
xchg
mov
les
or
mov
in
int
dec
adc
pop
loopne
ljmp
ret
iret
aam
test
or
add
mov
xor
inc
dec
or
adc
addr16
clc
add
call
push
push
inc
lret
push
mov
dec
jb
add
fwait
pop
call
stos
lcall
adc
fidivrl
add
in
in
xchg
lock
sub
dec
loopne
adc
adc
pop
inc
xchg
cld
adc
mov
ret
addr16
jb
sub
clc
hlt
out
lods
xor
scas
sub
and
fcoml
or
shrb
xor
das
push
push
in
mov
and
fiaddl
cmpsb
and
or
loopne
inc
rolb
testb
sub
push
and
andl
mov
inc
mov
adc
mov
jecxz
mov
sub
add
jne
xchg
dec
push
dec
pop
lahf
les
push
shll
push
imul
xchg
add
mov
rcrl
adc
ds
cmp
je
sub
or
pop
xchg
adc
and
dec
or
andb
mov
sbb
xor
mov
adcl
sbb
sub
add
out
daa
push
inc
add
and
pop
add
scas
pop
clc
add
test
inc
ljmp
subb
pop
mov
adc
or
mov
pop
scas
push
dec
adc
mov
mov
push
and
addr16
jne
sub
enter
cmp
mov
or
orl
jo
pop
pop
push
jl
test
and
or
dec
popf
xchg
push
jmp
std
call
mov
filds
les
out
jmp
inc
sbb
dec
les
les
push
xchg
mov
mov
jp
add
aad
pop
insb
fisubs
adc
int
sbb
push
scas
mull
jp
pop
das
push
xchg
cmp
push
lods
mov
xorb
cmp
push
or
mov
sbb
dec
dec
push
jmp
sub
push
icebp
pop
loop
cmpl
andl
and
mov
adc
xor
out
or
daa
inc
pushf
add
xor
adc
inc
fs
les
std
pop
push
xor
or
add
cmp
lea
mov
mov
decb
dec
pop
insl
mov
je
or
dec
xor
enter
loop
mov
std
cmpb
jne
or
add
push
inc
inc
sub
push
int
mov
leave
dec
daa
dec
inc
scas
loop
test
xchg
rolb
xchg
mov
inc
jmp
mov
pop
push
inc
add
cmp
clc
inc
adc
pop
pop
jne
testb
jle
pop
orb
sbb
xor
sar
and
arpl
movaps
rorl
aam
loopne
and
pop
push
push
and
scas
sub
adc
mov
addr16
or
aas
cltd
cmp
adc
lods
dec
or
mov
xchg
je
sbb
aad
mov
shlb
jmp
sub
loop
std
test
inc
faddl
add
lret
xchg
mov
addr16
lods
xor
sub
enter
lcall
sub
adc
mov
mov
adc
xor
dec
inc
shrl
sbbb
adc
rcll
gs
add
cmp
popf
in
pop
mov
lock
shrl
add
idiv
frstor
decl
iret
xchg
notb
sub
sub
mov
mov
dec
adc
or
mov
mov
dec
jl
aas
scas
pop
add
pop
add
add
lods
or
cmc
push
xor
ficoml
mov
cmp
aas
mov
jmp
add
sub
or
test
lea
or
les
rorl
or
xor
adc
add
movsl
scas
cltd
jbe
jge
popa
and
mov
mov
xor
push
pop
jp
jno
test
adc
xor
aam
add
inc
pusha
lds
push
sbb
lret
sar
in
and
cwtl
ret
or
sbb
or
sbb
mov
pop
ret
push
imull
gs
add
mov
sti
lds
or
test
sbb
fdivs
ljmp
and
orb
xor
ret
imul
jl
sub
mov
cmp
repz
xor
xchg
push
rorl
mov
pop
xor
mov
and
data16
add
add
shr
out
in
nop
add
push
jns
adc
dec
jg
push
stos
or
and
jne
mov
fisttpl
insl
or
or
inc
dec
inc
jge
or
outsb
sbb
jle
dec
jno
adc
pop
pop
dec
dec
pusha
hlt
jl
pop
nop
push
aad
and
rcr
sbb
cltd
ret
jg
je
mov
push
cltd
lcall
pop
add
jb
inc
sub
xlat
mov
clc
lret
or
add
pop
mov
xchg
inc
jb
mov
push
jge
or
jle
pusha
addb
push
add
out
xor
jo
adc
pop
push
test
push
mov
push
inc
cmpxchg
xor
enter
pop
js
pusha
sbb
aaa
inc
es
nop
pop
test
insl
jl
scas
in
ret
jno
dec
sub
jbe
jne
fwait
call
subb
daa
pop
pop
mov
xor
test
jnp
mov
sub
cmpl
xchg
imul
add
add
sbb
pusha
xor
and
pop
and
push
sub
icebp
mov
in
mov
pop
pop
jo
jecxz
cmpsl
loop
adc
sbb
or
scas
int3
test
stos
rolb
mov
cmpsl
adc
sbbb
lea
mov
es
xor
cs
and
hlt
iret
shl
sbb
sbb
add
cwtl
mov
insb
pop
xor
movsb
cmc
cmp
dec
bound
xor
push
out
dec
add
cmp
cmp
push
push
daa
inc
cmpsl
test
adc
pusha
add
xchg
dec
fiaddl
cwtl
push
out
or
pop
xchg
xchg
arpl
sub
pop
sub
popf
rorb
outsl
and
dec
movsb
push
push
outsb
and
out
cmp
pusha
das
repz
lods
xchg
notb
ds
pop
push
cmp
push
or
icebp
or
pop
or
cmp
jle
or
push
or
sbb
daa
inc
sub
push
sbbl
inc
xor
dec
push
sub
cltd
cmp
imul
jbe
add
out
mull
lret
stc
dec
lods
adc
dec
dec
in
sub
push
adc
ds
and
gs
push
xchg
cli
test
std
in
lods
mov
cmpsl
movsb
fadd
daa
pop
sub
sub
das
loope
es
push
xchg
adc
pop
fucom
scas
nop
clc
std
jne
lahf
imul
inc
adcl
dec
arpl
dec
loop
lea
xchg
clc
mov
cmp
arpl
adc
push
add
pop
mov
adc
mov
cltd
lret
sbb
push
jp
mov
in
jmp
jg
mov
cmovp
push
and
cmpsb
lds
shlb
push
lea
xchg
jo
js
mov
faddl
inc
insl
xor
faddl
in
push
and
lret
jmp
xchg
movsl
popa
ja
divb
xor
sbb
adc
pop
mov
push
icebp
dec
jo
jnp
jge
hlt
addr16
push
and
inc
push
aam
movb
or
add
xchg
inc
xchg
jmp
mov
shll
mov
jge
xchg
loopne
loopne
enter
fcoml
push
lods
lret
outsb
arpl
mov
ja
adc
and
add
xor
push
cmova
mov
das
aam
push
and
add
inc
ret
pop
sub
test
jle
cmp
je
cli
pop
push
pop
or
ror
iret
jae
pop
lahf
rolb
add
faddl
jb
je
dec
or
adc
mov
or
hlt
ret
nop
mov
nop
xchg
add
out
push
loopne
pop
pop
adc
icebp
jp
lcall
adc
lock
inc
add
cmp
push
mov
pop
jg
dec
or
push
mov
pop
push
repnz
fs
cmpsb
std
movsb
cmp
jge
data16
or
sbb
gs
shlb
test
test
sbb
outsl
jp
cli
or
loopne
mov
mov
cmp
jne
and
test
stos
loopne
movsb
push
lods
pop
xor
or
push
int3
int3
pop
and
mov
xor
int3
test
test
idivl
icebp
lds
cmp
xor
clc
add
push
fisubrl
jnp
jle
or
xchg
pusha
and
mov
nop
lods
push
popf
and
call
pusha
inc
mov
enter
mov
pop
popf
insb
sbb
iret
fs
test
or
nop
xchg
push
adc
pop
sbb
pushf
cmp
arpl
mov
jecxz
push
push
and
cmpsl
scas
mov
mov
xor
pop
dec
in
rclb
and
dec
jb
out
nop
pop
jg
sbb
sub
pop
subl
mov
pop
xor
mov
fcmovu
mov
addr16
sbb
xor
add
pusha
inc
push
orl
mov
or
push
dec
sbb
pop
popw
pop
xchg
ficoms
aaa
jbe
sbb
jmp
addr16
movsb
insl
sub
add
shrd
push
jb
jo
imul
dec
stos
xlat
inc
aam
cmp
pop
rolb
out
clc
push
xchg
add
inc
push
mov
outsb
lcall
adc
xchg
fdivrs
adc
adc
or
pushf
xchg
sbb
ja
mov
stos
pusha
fidivs
push
xchg
fwait
fs
mov
sub
mov
lea
jle
int
sbb
aaa
cmp
adc
add
mov
dec
cmp
jp
lock
push
ja
add
mov
pusha
faddl
dec
push
popa
lahf
dec
add
push
aaa
push
cmpsl
mov
hlt
add
in
push
sub
and
test
mov
inc
sbb
add
inc
aas
xchg
cmpsb
dec
leave
pop
mov
in
fisubl
jmp
adc
sbb
mov
jae
scas
inc
and
enter
sbb
mov
push
and
xchg
idiv
jp
loope
sbb
fldt
outsl
fnstcw
jmp
add
inc
arpl
outsb
sbb
mov
xchg
fdivrl
les
lahf
int
in
and
inc
sbb
or
js
in
outsl
mov
mov
mov
xor
adc
aaa
daa
sub
push
nop
outsb
mov
xor
js
movsb
cmc
cmpl
sbb
mov
dec
mov
cmp
mov
inc
pop
adc
sbb
movaps
outsl
push
mov
sub
outsl
daa
mov
inc
push
pop
push
shlb
push
dec
or
insl
and
pop
fwait
cli
aad
jmp
aaa
pop
adc
inc
cmp
jl
push
jo
or
sbb
mov
mov
sbb
loopne
xchg
andl
loopne,pn
fldenv
ret
jo
cmp
lcall
imul
fisttps
aaa
xchg
movsl
arpl
inc
or
and
imul
xchg
das
inc
out
lock
je
or
cmp
sub
and
fldl
les
pop
mov
push
jb
push
mov
xor
add
cmp
sub
and
enter
xor
xor
lret
aad
loope
test
pop
xor
mov
fsts
dec
mov
and
lea
dec
pop
mov
rclb
pop
pop
imul
dec
mov
lahf
orl
data16
rclb
adc
push
cmp
cmp
loope
cmp
jle
adc
jl
ret
loopne
lret
xchg
push
jo
or
and
pop
pop
push
or
lds
add
adc
push
fidivl
mov
adc
sbb
divl
cmpsl
sub
sbb
cmp
iret
push
dec
inc
add
clc
movb
adc
and
enter
hlt
mov
xchg
popa
je
fnsave
je
hlt
aaa
test
jo
xchg
cld
insl
inc
or
push
pop
add
mov
sub
fbstp
jno
test
dec
adc
push
test
pop
call
push
inc
lret
call
pop
lret
add
cmpsl
movsb
ds
rcr
sbb
adc
call
pop
mov
sahf
jnp
les
jmp
inc
xor
mov
inc
popl
mov
enter
outsl
sub
cmp
push
add
push
push
or
jne
fisttps
lret
cmp
in
outsl
loope
popl
push
out
rcl
aaa
jo
xor
xchg
and
sub
jo
iret
jbe
sbb
mov
in
div
pop
fstp
jl
xor
in
cmp
inc
or
adc
jnp
or
arpl
test
xor
fcoms
scas
sub
mov
leave
xor
nop
dec
push
or
loop
cmpsl
pushl
test
xchg
pusha
push
inc
jo,pt
shl
dec
sub
popa
cmp
cmp
pop
and
outsb
adc
dec
push
inc
pop
inc
add
je
lahf
push
push
sarb
xlat
es
loopne
cmp
push
ja
dec
pushf
sbb
lods
cmc
rol
mov
jmp
scas
sbb
popa
and
mov
jecxz
inc
sbb
scas
cmpsl
inc
xchg
pop
jle
pop
adc
pushl
dec
jne
jp
dec
push
sub
lea
popa
mov
out
lcall
es
mov
test
mov
sub
ret
cli
xchg
cmpsb
xchg
push
lret
ja
sub
add
jg
cs
mov
jmp
mov
or
cmp
jg
sbb
fldenv
fsts
lret
mov
cmp
dec
push
lret
or
arpl
lea
pop
inc
addl
dec
cmp
adc
add
xor
mov
cmp
xor
jb
adc
mov
dec
mov
daa
and
jle
push
mov
add
data16
test
mov
jae
pop
ror
in
cmpsl
nop
add
xchg
jecxz
jmp
lods
mov
sub
jae
inc
fdivrs
xchg
and
jmp
arpl
mov
cmp
leave
mov
and
mov
dec
fwait
add
test
inc
ss
hlt
icebp
dec
push
sbb
pop
adc
cmp
in
jae
inc
xor
cmp
add
mov
xchg
push
pop
mov
pop
fcomi
push
pop
js
mov
testb
inc
mov
inc
push
loope
shlb
inc
sbb
pop
cmp
push
lea
pop
xchg
cld
push
cmpsl
adc
inc
mov
push
std
iret
add
daa
xor
inc
cmpb
jge
jo
cmp
mov
int3
out
sbb
or
fs
xor
fwait
mov
and
aaa
int3
ret
pop
jecxz
pop
dec
xchg
add
leave
sbb
xchg
pop
lock
add
insb
movsb
test
loopne
jno
les
pop
push
pushf
fs
pop
test
sbb
pop
push
popf
or
insl
cmpl
xor
cmp
hlt
data16
aam
addr16
scas
loope
ret
dec
xor
jnp
call
pop
ds
je
int
xchg
jo
imul
adc
mov
xchg
in
adcb
dec
jno
dec
mov
iret
push
pop
mov
xor
fsubrl
sbb
adc
xchg
aam
setbe
sub
lret
push
cmpsl
lock
jmp
adc
sbbb
mov
xchg
xor
addr16
shlb
in
xor
outsl
pop
pop
pusha
jbe
fisttpl
mov
cmp
in
xor
sbb
sbb
je
fwait
pop
outsl
pop
in
or
jne
movsb
and
add
inc
subl
push
pop
add
sub
pop
xor
in
add
into
dec
fadds
pop
mov
mov
or
sub
inc
sub
fisttps
inc
inc
fmuls
aam
icebp
daa
xorl
adc
jns
sub
inc
ss
and
or
aam
inc
add
sub
sbb
xor
fadds
inc
cmp
notb
je
push
data16
arpl
push
cmp
jae
js
jmp
arpl
mov
push
mov
mov
pop
popf
jne
shll
sbb
sbb
add
rcrb
shr
in
adc
fwait
ljmp
in
lods
mov
jne
adc
pusha
sbb
push
je
into
les
mov
push
inc
cs
stc
adc
outsb
sarb
xor
mov
mov
cmp
nop
sbb
xlat
gs
xchg
cmp
push
sbb
repz
xor
and
pop
sub
fsub
add
les
push
es
sub
or
pop
pop
ret
dec
sarb
call
push
aam
aam
jno
dec
xchg
test
jmp
dec
push
imul
adc
pop
jle
movb
pop
out
or
ds
loop
dec
js
inc
push
sbb
sub
sti
nop
xchg
push
fwait
fwait
aaa
sub
jp
fmull
cmp
imul
jge
popa
sub
or
sub
adc
cltd
mov
and
stc
adc
sub
mov
or
xchg
xchg
in
mov
add
adcb
loope
mov
scas
adc
and
adc
insb
push
js
ret
adc
bnd
nop
adc
in
hlt
jns
aas
iret
add
add
sbb
add
xchg
pop
es
adc
and
test
in
and
jl
xchg
add
mov
add
lahf
adc
and
xchg
fldl
add
cmpsw
mov
inc
add
jnp
ja
jmp
fimuls
call
add
cmp
adc
add
jl
push
inc
push
pusha
push
xchg
xor
sahf
add
aam
push
sbb
sbb
lods
arpl
imulb
jb
bnd
popa
das
sbb
repnz
mov
jns
aad
and
mov
iret
inc
call
std
sub
es
pusha
stos
adc
push
ss
push
add
dec
enter
lahf
loopne
add
sbb
out
add
sub
dec
xor
test
les
sqrtps
pop
xchg
ret
out
and
test
push
xchg
add
mull
int
push
mov
jne
mov
push
mov
testb
mov
xchg
aam
mov
xchg
popa
mov
les
imul
sti
les
dec
add
xor
add
lods
push
sub
xor
xor
pop
inc
pop
loopne
mov
or
movsl
es
or
inc
icebp
sub
mov
popf
stos
xchg
adcb
out
jle
mov
aad
sub
mov
cmp
push
xlat
xchg
sub
mov
pop
sub
hlt
inc
mov
ds
sbb
das
dec
sbb
sti
cmp
test
fisttps
cmpb
jne
xor
adc
mov
imul
pushf
mov
ret
cli
test
cld
decb
push
add
pusha
pop
fadds
sub
jnp
jo
sub
mov
movsb
adc
push
loope
test
loop
inc
subb
add
rcrl
div
hlt
aam
lahf
iret
jb
jmp
mov
scas
lock
mov
add
int
sbb
sbb
loopne
or
insl
pop
rcl
add
dec
xor
ds
mov
js
push
push
fistl
or
jnp
cmp
inc
pop
cmp
dec
test
cld
leave
ja
sub
mov
call
rorb
imul
stos
and
mov
cmpsl
mov
or
nop
push
dec
mov
add
adc
les
add
orb
mov
xchg
subl
lea
sbb
add
sahf
push
xchg
adc
push
popa
aaa
adc
mov
andb
add
mov
dec
rclb
mov
repz
add
adc
aaa
jp
clc
jge
rcrb
clc
push
inc
and
out
test
adc
fstl
adc
call
push
jo
sbb
loop
add
hlt
icebp
ret
inc
inc
daa
add
sub
pusha
mov
clc
jnp
push
stos
aas
imul
mov
mov
cmp
ja
mov
negb
cmp
out
cwtl
mov
fstpt
sti
movsb
test
cld
push
or
das
pop
orb
idivl
add
pusha
lea
ret
jns
pop
insl
xchg
lea
xor
enterw
movsb
lea
bound
lcall
aaa
adc
cmp
cmp
dec
testl
xorb
or
cmp
repnz
fdivl
fsubrl
js
in
cli
sub
and
into
push
ret
sbb
cmp
popa
or
rcll
inc
mov
cmc
push
add
add
jnp
xchg
iret
sbb
mov
adc
gs
inc
pusha
mov
cmp
inc
sbb
cmp
loop
aaa
jb
xchg
jbe
jnp
push
filds
pop
hlt
fcoms
add
jmp
mov
imul
bound
xlat
movsl
movsb
push
push
jg
iret
dec
je
dec
ret
pop
jmp
inc
popa
pop
adc
jge
mov
inc
or
push
jmp
mov
jo
fs
lahf
stc
or
fs
or
aam
rcr
fdivrl
out
dec
loope
imul
or
repz
adc
test
out
cmp
xor
push
lods
sub
mov
add
cmp
add
cmp
mov
fdivl
mov
das
mov
jmp
sub
mov
cmp
popa
shl
out
inc
nop
div
push
push
loop
jo
dec
adcb
and
cmp
rclb
adc
cmpsb
rcrb
add
mov
adc
or
dec
jmp
call
adc
or
dec
pop
lds
arpl
xor
jmp
call
and
jne
and
push
mov
or
je
add
add
pushl
push
inc
mov
orl
lahf
fisubl
out
sbb
imul
sbb
loopne
in
jecxz
fcoms
inc
lock
shrl
push
testl
mov
pop
sub
dec
or
pop
add
pop
push
or
nop
hlt
int3
mov
jae
outsb
jno
cmp
push
iret
movsb
add
adc
arpl
roll
jne
add
xor
ret
subb
mov
inc
loope
insl
push
pop
lcall
test
loopne
stos
ret
jmp
cmpsl
inc
jl
lds
insl
sub
inc
inc
out
inc
aad
lock
add
push
popf
or
or
ret
daa
or
es
add
mov
sarl
add
pop
mov
adc
jns
pop
inc
jmp
aas
and
push
je
push
adc
mov
pop
mov
cld
mov
aam
cmp
mov
pop
out
pop
subl
xlat
add
cmpsl
dec
jns
orb
adc
int3
out
push
xor
scas
mov
dec
sub
jmp
push
shl
cmp
cmp
add
dec
mov
cmp
sbb
xchg
adc
and
orl
scas
mov
mov
shl
add
call
scas
inc
or
enter
mov
dec
sub
or
outsl
shrb
ret
cld
add
ljmp
and
ds
pop
iret
outsb
sub
fidivl
and
scas
shl
bound
daa
mov
cmp
arpl
andl
jle
ret
cmpsb
and
jp
xor
jno
stc
mov
sub
dec
sti
out
fidivl
cmp
pusha
jb
jnp
dec
sahf
xchg
test
pop
mov
out
fcmovnbe
daa
fimuls
out
testb
out
and
jmp
xor
nop
fimuls
pop
mov
int3
and
add
popa
mov
nop
ret
mov
pop
jl
pop
xor
insl
das
add
je
pop
push
adc
test
inc
mov
xchg
add
mov
sbb
or
adc
mov
and
and
popf
mov
cld
xchg
movsb
mov
adc
adc
insb
outsb
test
mov
jno
imulb
lea
in
mov
xchg
pop
and
pop
adc
sbb
es
ja
inc
mov
out
jmp
cmp
sbb
shlb
inc
dec
inc
mov
pop
clc
cmc
sbb
jno
cmc
push
and
xchg
jo
inc
aad
jae
jb
jne
inc
or
pop
inc
and
push
movsl
jmp
inc
xchg
sub
call
cmp
add
or
xor
pop
je
jg
aas
mov
and
push
add
testb
cs
test
dec
rorb
movsl
lock
rolb
jg
inc
push
fmul
cmp
inc
call
xorl
into
mov
andl
lea
pop
cmpsb
jns
cltd
mov
sbb
inc
sbb
lret
push
rclb
aas
add
adc
aam
adc
mov
mov
add
mov
rcrl
das
shlb
jle
cmp
mov
push
sub
mov
mov
and
sarl
push
in
call
dec
cmpsl
popa
lods
xchg
shll
mov
mov
pop
cld
pop
mov
xchg
test
cli
inc
lahf
mov
dec
mov
ret
mov
jo
jno
mov
test
pop
repz
shll
hlt
rclb
adc
pop
cmp
jmp
cwtl
fadd
clc
dec
lock
lea
stc
lock
out
dec
or
or
or
inc
and
add
subb
leave
mov
lea
out
call
clc
and
int
dec
and
mov
outsl
mov
cmc
incl
sub
aas
sbb
xor
test
dec
movsl
xchg
xchg
push
in
rolb
jnp
in
push
xchg
dec
bound
mov
push
cltd
outsb
mov
repz
mov
sbb
das
dec
pop
pusha
cmp
loopnew,pn
or
dec
insb
out
push
xor
jbe
jne
je
dec
or
jp
test
xchg
fstpt
mov
subb
push
pop
rorb
orl
sub
imul
cmp
xchg
mov
hlt
jmp
sub
out
adc
psllq
jmp
daa
pop
test
pop
lahf
pop
nop
jmp
push
mov
addl
das
dec
cli
loop
jmp
leave
push
fs
cmp
push
and
xchg
dec
cmp
lods
cmp
push
inc
adc
cmp
jns
mov
dec
or
dec
mov
mov
mov
loopne
lock
lods
inc
or
inc
adc
mov
scas
test
dec
pusha
mov
xchg
std
push
jp
mov
add
ret
mov
movd
and
and
jg
sbb
mov
push
cmp
test
mov
ds
mov
sti
hlt
jl
adc
sbb
xchg
dec
add
add
jo
xorb
pop
lret
maskmovq
testl
xor
and
cmp
and
adc
push
mov
in
call
adc
add
vprotw
xor
lods
xchg
inc
popa
push
lcall
xchg
loopne
jecxz
aaa
push
mov
xchg
pop
rcrl
push
pop
aad
add
inc
negl
cmp
and
pusha
mov
cmp
xchg
sbb
ds
pop
push
fcompl
xchg
pop
popf
xor
add
push
call
add
lods
lock
ds
cld
dec
shlb
es
pop
cmc
xchg
mov
sub
push
daa
xor
or
cwtl
dec
push
push
aaa
cwtl
push
cmp
sub
or
aam
dec
cmp
mov
hlt
sbb
adcb
mov
shrb
or
das
adc
push
or
cmp
lock
popa
adc
lds
push
jo
cmpsl
xchg
xchg
movb
xor
xchg
imul
fwait
loop
mov
dec
dec
mov
mov
rclb
rcr
mov
mov
inc
and
dec
xor
lds
mov
sbb
into
je
pusha
cmpl
test
sbb
jle
or
sbb
in
mov
rorl
clc
lds
cmpl
lea
lock
rol
and
mov
cltd
rol
cmpsl
xor
pop
int
inc
fdivl
in
sub
fdivrl
jnp
cmp
je
add
push
adcb
adc
fisttps
adc
es
ficompl
cld
sti
mov
loopne
dec
sbb
popf
and
test
sbb
ljmp
inc
sbb
dec
push
sbb
out
dec
or
adc
repz
pop
add
mov
lods
cmpb
test
jmp
push
out
daa
push
mov
cmp
cmc
pop
mov
clc
call
push
mov
xor
jnp
mov
and
mov
push
movsl
sbb
int3
enter
icebp
bound
dec
ret
adc
mov
lock
lock
and
fildll
clc
aam
add
mov
add
adc
inc
sbb
adc
cmp
shlb
pop
pop
and
or
cmp
stos
adc
scas
pop
sti
lds
orl
xor
adc
mov
inc
adc
into
les
pop
xchg
inc
adc
sbb
adc
in
fwait
or
mov
or
call
jmp
mov
jl
dec
lock
cs
je
paddusb
ljmp
and
mov
add
jl
add
sub
lock
aad
and
adc
or
xor
or
fisubrs
setne
mov
fwait
ret
add
sbb
cmp
incb
mov
sbb
adc
jge
mov
nop
inc
add
push
outsl
jo
cmpsl
add
filds
xchg
xor
or
inc
inc
xchg
fcompl
pop
inc
notl
arpl
mov
pop
imul
xlat
inc
add
pop
outsb
loopne
inc
sti
dec
jne
or
cmp
jne
daa
call
mov
hlt
dec
mov
sbb
adc
and
push
adcb
pop
pop
scas
or
in
mov
addr16
ret
or
data16
pop
dec
in
sbb
xor
frstor
and
in
sbb
xchg
xorl
pop
andb
dec
jne
in
rorb
jbe
pop
jnp
add
fsubrs
subl
test
mov
addb
lcall
out
gs
jmp
sbb
or
and
fists
mov
aam
lods
push
daa
adc
enter
inc
inc
add
sbb
or
pop
inc
cld
jo
insl
add
inc
sub
sbb
aas
les
inc
ret
xor
test
jge
add
jg
push
dec
cmp
xlat
js
je
xor
pop
mov
pop
xlat
clc
mov
sbb
lcall
adc
orb
stos
inc
push
jle
call
add
add
aaa
sbb
aas
loopne
and
ja
bnd
sbb
les
cmp
and
add
cmp
xorb
jmp
ror
and
push
mov
push
or
sbb
test
add
fs
les
inc
and
dec
sahf
push
imulb
inc
jne
es
and
aam
sbb
xlat
push
or
adc
or
inc
and
jle
imul
pop
or
sbb
or
mov
xchg
je
scas
aas
or
inc
or
xor
xor
adc
jl
bound
push
pop
sbb
xchg
insb
jmp
inc
or
xchg
mov
out
xchg
lods
push
jle
mov
cmp
test
add
pusha
mov
filds
bswap
or
loopne
add
push
rclb
dec
xor
mov
outsb
xor
xlat
dec
js
jp
jmp
dec
sarb
jl
aas
sbb
push
pop
out
inc
push
and
dec
pop
sub
cld
inc
ror
jns
mov
in
cmp
fistpl
pop
push
or
push
arpl
jne
ljmp
popa
inc
fimull
dec
loopne
into
cmp
rorb
inc
je
mov
push
out
sbb
sbb
mov
dec
repnz
mov
pop
subl
stc
and
add
cmp
cwtl
popa
push
mov
push
push
sahf
and
insb
xlat
es
adc
lret
cmp
jne
pop
adc
test
scas
frstor
wrmsr
push
sub
cltd
push
pop
mov
push
and
jmp
cwtl
mov
mov
inc
add
jle
sbb
pusha
and
test
sub
ror
inc
pop
mov
movsb
cld
push
sbb
js
mov
adc
mov
sbb
outsb
jne
inc
dec
adc
lcall
add
jecxz
rcrb
mov
fstl
nop
iret
adc
adc
add
ret
aam
xlat
pop
adc
xor
mov
or
fstpt
sbb
add
loope
adc
dec
arpl
push
test
sub
push
test
inc
sbb
aam
add
jl
xlat
pop
sti
stc
mov
pop
lods
xchg
loope
inc
std
dec
adc
push
adc
fcmovbe
jo
imul
test
adc
or
or
test
add
push
mov
mov
mov
cmpsl
xchg
pop
xchg
ret
lret
or
xchg
hlt
sbb
rclb
adc
sbb
int
or
jne
cmp
xchg
insl
jg
or
in
pop
mov
mov
testb
stos
pop
hlt
jle
mov
or
adc
jo
ror
rol
xchg
fwait
adc
sub
and
add
fdiv
or
call
add
or
inc
push
sub
pop
loopne
xor
push
and
imul
push
and
nop
jp
repz
sbb
push
push
outsb
popf
les
xchg
push
or
sbb
xlat
add
sar
sub
inc
sbb
ret
cmpsl
sbb
dec
in
call
cwtl
dec
xchg
icebp
adc
insb
adc
ds
test
and
cmpsb
or
insb
popa
mov
or
mov
push
mov
in
jb
mov
aam
daa
xor
je
inc
mul
ret
jmp
cmpsl
movl
sub
add
sub
or
sbb
dec
in
adc
bound
leave
adc
mov
mov
mov
jbe
enter
insb
xor
das
clc
das
sub
xorb
pop
add
cmpsl
xor
cmp
test
insl
stos
pop
cmpsl
shlb
inc
cld
xorl
adc
add
test
call
jmp
pop
mov
add
mov
mov
push
cmc
cmp
inc
rorl
pop
push
add
inc
add
mov
push
sbb
call
movzbl
lea
add
mov
pop
or
add
add
imul
cmp
or
or
push
cmp
fisttpl
mov
mov
pop
jo
jle
inc
rorl
or
jge
adc
sub
mov
push
mov
dec
dec
pop
mov
mov
movsb
sar
dec
adc
rcll
cmp
arpl
outsl
fsubs
mov
mov
and
jbe
pop
pop
inc
pop
in
add
lcall
call
outsb
and
xchg
push
push
mov
test
imul
loopne
push
push
push
dec
icebp
add
fs
push
cld
jg
call
xchg
add
into
push
mov
jo
push
inc
and
clc
and
imul
jo
adc
lret
dec
sbb
sbb
out
inc
pusha
arpl
cs
sbb
lahf
mov
mov
mov
mov
inc
mov
mov
call
cmpl
sbb
subl
sub
add
push
int3
lret
cmp
add
and
test
sub
sbb
lret
in
iret
loopne
sub
pop
and
xor
adc
sbb
les
mov
jp
daa
daa
daa
mov
daa
daa
jb
je
daa
daa
daa
daa
jbe
js
daa
daa
daa
daa
jp
jl
daa
daa
daa
daa
jle
pusha
popa
daa
daa
daa
daa
bound
gs
daa
daa
daa
addr16
daa
daa
daa
push
insb
insl
daa
daa
daa
daa
outsb
outsl
push
push
daa
daa
daa
daa
push
push
push
push
daa
daa
daa
daa
push
push
pop
pop
daa
daa
daa
daa
pop
pop
pop
pop
daa
daa
daa
daa
pop
pop
inc
inc
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
inc
inc
dec
dec
daa
daa
daa
daa
dec
dec
dec
dec
daa
daa
daa
daa
dec
dec
xor
cmp
adc
xor
scas
sub
aam
lods
mov
ret
in
add
cmpsb
insb
outsl
pop
sbb
and
scas
divl
addr16
fdivrs
mull
arpl
scas
inc
sbb
adc
mov
decb
sbb
inc
add
movsb
fnstsw
and
cmp
scas
jmp
jge
inc
callw
int
cli
fwait
jae
add
push
or
xchg
and
jle
adc
add
lock
or
jae
je
pop
jnp
xchg
mov
push
je
insb
xor
sbb
push
data16
enter
or
je
arpl
adc
add
repz
gs
imul
mov
insl
or
fiaddl
es
outsb
int
mov
cs
jo
outsl
sbb
push
inc
xchg
add
sbb
or
push
pusha
out
add
inc
jl
or
mov
les
add
xor
int
inc
insb
mov
push
push
push
je
into
insl
dec
outsl
jo
je
jae
fcomi
insl
inc
push
jns
sbb
mov
aam
addr16
and
add
out
ret
sbb
xchg
jge
ss
xor
aas
mov
push
jb
pop
push
subl
ja
ja
dec
dec
and
jb
fimull
lret
lock
push
add
fcomp
or
dec
jl
jp
or
insb
fisubl
lods
push
push
arpl
inc
inc
mov
addr16
inc
outsl
jb
cmp
es
mov
test
mov
xchg
push
sbb
push
pop
mov
scas
test
pushl
mov
dec
or
mov
or
xor
lods
sub
push
aam
aas
inc
imul
lahf
cmp
int
fstpt
and
subb
push
mov
sahf
out
fwait
pusha
push
test
jb
and
push
pusha
jge
mov
dec
loope
xorb
enter
push
cmpsl
shlb
pop
lret
add
icebp
iret
pop
adc
push
pusha
aad
adc
sbb
push
dec
or
add
pop
adc
ret
stos
aas
loopne
inc
leave
inc
adc
rclb
add
scas
les
aas
push
push
dec
mov
les
inc
scas
xlat
xor
cli
inc
sti
xor
add
mov
sahf
cmpsl
enter
inc
push
mov
stos
pusha
call
adc
xchg
cmp
xlat
jbe
and
out
pop
fcoml
sbb
loopne
int
sahf
addr16
mov
call
pop
xchg
pextrw
add
subl
insb
push
xor
roll
pop
pop
sti
lock
shl
add
add
addl
iret
pop
iret
jge
push
or
add
aas
xor
cmp
stos
lods
aas
lsl
push
inc
je
or
mov
out
ds
in
rcrl
test
rclb
jo
cmp
push
cmp
sbb
cs
es
add
add
roll
xor
add
andb
lds
bound
jb
xchg
scas
out
pop
daa
and
loope
rorl
fadds
in
pop
push
inc
popa
pop
pop
xor
sbb
push
mov
in
adc
fcom
imul
xor
add
sbb
adc
mov
or
cmp
jge
sbb
xchg
adc
int3
imul
xchg
push
or
xchg
xor
lret
mov
sbb
faddl
fsub
mov
push
rcll
clc
int3
jae
stos
addl
lahf
pop
data16
mov
es
xchg
test
cmp
fstl
popa
xlat
push
sbb
xchg
mov
addr16
push
sub
xchg
fistpll
add
push
inc
out
sysret
dec
add
push
out
pop
rorb
xor
in
mov
pop
dec
adc
fdivrl
shr
mov
adc
js
fisttps
mov
sbb
add
ja
mov
add
or
push
xchg
mov
fs
insl
popa
addr16
pusha
mov
ror
mov
inc
hlt
mov
or
enter
mov
mov
ds
les
xor
mov
inc
push
and
sbb
pop
pushl
mov
jno
inc
cs
dec
push
push
jne
pop
pushf
pop
dec
mov
mov
das
mov
dec
dec
adc
pushf
push
mov
pop
mov
push
dec
orb
push
push
cld
pop
fs
int3
roll
adc
xchg
addr16
fsubs
lods
pop
sbb
sub
test
dec
lods
ds
pop
jnp
popl
out
xor
or
hlt
lds
testb
nop
add
mov
pop
jo
or
mov
ret
xchg
push
xlat
xor
xchg
outsl
jo
pushf
push
xlat
mov
jae
pop
outsb
xlat
xor
inc
dec
push
push
push
dec
pop
jle
cmp
xchg
sbb
nop
push
movsb
imul
dec
pop
sbb
imul
cmp
repz
push
or
mov
add
scas
push
mov
add
nop
cmp
rorl
rol
xor
inc
dec
jne
sbb
mov
pop
mov
test
push
push
or
mov
xlat
das
cmpsl
mov
or
not
clc
imul
movsb
into
inc
cli
loope
add
adc
mov
inc
or
xor
inc
add
push
pushl
data16
loopne
in
jne
inc
mov
adc
insl
pushf
sbb
or
fmulp
inc
cmp
xor
xor
jmp
adc
add
push
inc
cmp
rclb
movsl
mov
sbb
adc
decl
rolb
addb
or
clc
xchg
enter
inc
pop
shlb
mov
sbb
mov
popa
add
in
cwtl
orb
in
arpl
sbb
mov
or
sub
sbb
dec
addr16
rolb
sub
lock
mov
inc
push
mov
rcrb
imul
rol
pusha
sbb
mov
inc
and
pushf
mov
xlat
cmp
mov
or
scas
mov
in
sub
adc
mov
cmc
push
mov
xlat
sbb
inc
add
jecxz
mov
loope
add
aad
rolb
mov
pop
adc
sbbb
jl
in
sub
jge
push
jge
add
test
cmp
cmc
mov
idivl
add
lret
pop
popa
loope
push
das
dec
add
leave
xchg
push
lds
add
add
loope
cmp
jg
mov
aas
sbb
pop
cmp
addb
clc
mov
add
cmpsl
or
nop
and
mov
add
adc
and
das
xchg
scas
xchg
fiadds
arpl
pop
or
xchg
add
addb
sbb
dec
insb
mov
pop
push
dec
popa
jbe
fldt
shlb
insb
xchg
test
jle
gs
insb
pop
cmp
or
pop
push
imul
rorl
xchg
gs
rcr
pop
scas
outsl
ja
lahf
inc
dec
in
jne
or
arpl
imul
jno
popa
mov
popa
pop
pop
jnp
adc
jmp
jns
jbe
bound
in
dec
and
push
filds
mov
sub
cltd
push
bound
lsl
cmc
inc
popa
pop
pop
jo
push
nop
fidivl
pop
imul
mov
push
addr16
mov
adc
inc
je
inc
push
xchg
stc
cmp
mov
das
or
inc
add
xor
xchg
out
sub
cmp
dec
daa
or
sub
push
inc
inc
sbb
pop
daa
pop
xchg
imul
sbb
mov
mov
or
outsl
sbb
fsts
adc
movsl
andl
lea
nop
sarl
cltd
lods
loope
fcomip
aaa
adc
insb
andb
aaa
int
in
sbb
or
outsw
inc
push
enter
pop
add
pop
ret
outsb
jne
pop
xchg
fwait
or
or
sbb
sbb
addr16
push
arpl
add
jle
inc
inc
imul
das
daa
mov
or
imul
daa
or
mov
sub
in
out
jge
push
fcompl
loop
lcall
ret
push
mov
lock
pop
dec
data16
mov
or
mov
or
fdivs
cmpsl
pop
or
testl
dec
inc
push
push
inc
push
add
rcr
jg
inc
inc
inc
push
dec
push
xor
mov
and
inc
dec
dec
arpl
inc
inc
push
or
dec
inc
push
dec
dec
push
mov
jnp
inc
inc
push
xchg
inc
dec
dec
and
stc
ret
popa
out
inc
inc
xor
xor
jg
sbbb
dec
mov
aas
fiaddl
xchg
inc
push
inc
inc
dec
sbb
push
push
push
dec
sub
dec
pop
fcmovnbe
lcall
inc
mov
aam
inc
inc
inc
das
mov
push
push
push
test
mov
xor
push
xlat
adc
push
push
and
outsl
push
push
dec
push
inc
scas
dec
inc
dec
les
mov
mov
mov
pop
jmp
mov
js
das
pop
test
push
push
push
pop
pusha
inc
imul
cwtl
jl
add
xchg
push
inc
sarb
or
or
rcr
sbb
jne
add
add
or
lea
rcrb
and
sbb
inc
or
dec
sbb
xor
inc
push
cmp
stc
test
or
add
add
pop
sub
add
xlat
loopne
inc
das
shlb
pop
popa
mov
mov
and
sub
es
imul
mov
inc
insb
xchg
test
mov
in
rolb
test
mov
sub
mov
mov
fs
or
pushl
dec
enter
mov
dec
scas
jle
call
cmpl
sub
mov
out
mov
pop
outsl
sub
mov
pop
aad
jno
xor
xchg
push
sbb
das
cmp
mov
das
pop
add
lods
pop
jo
or
jne
leave
lret
push
add
inc
leave
sarb
cmp
inc
or
dec
push
mov
pop
aam
sahf
mov
mov
mov
mov
ss
mov
filds
movsl
mov
mov
out
int
je
movsl
sub
push
mov
mov
jbe
mov
mov
nop
stos
xor
sbb
inc
aam
add
or
in
add
mov
adc
aam
pop
dec
fdivr
add
rcr
and
lock
sbb
pop
push
cmp
add
icebp
jbe
jmp
adc
xor
movb
push
fcomp
inc
popf
ss
cmp
test
or
fisttpl
arpl
push
clc
or
xor
dec
adc
xlat
mov
inc
test
or
call
or
adc
mov
xlat
movsl
outsl
or
xor
mov
inc
sti
inc
ret
lock
imul
push
mov
push
aam
push
inc
fsubrs
test
cmp
gs
testl
lea
push
mov
sub
jb
addl
orb
dec
lcall
mov
loop,pn
neg
addr16
push
das
pop
fsubrl
neg
push
sub
mov
sbb
rorb
sbb
pop
xchg
les
xor
ja
data16
inc
sbb
xchg
test
loope
xchg
pop
loope
rolb
pop
sbb
or
mov
movsb
add
movb
imul
clc
jb
rolb
test
cmpsl
int
sbbl
clc
mov
in
pop
xchg
int
add
adc
mov
push
nop
shll
xchg
dec
add
sbb
dec
or
and
pop
lock
xchg
xchg
mov
pop
dec
pop
add
pop
add
jne
jae
das
jne
rcrb
fiadds
adc
inc
lods
xchg
pop
cld
sbb
mov
inc
test
insl
pop
test
subb
dec
clc
in
clc
testb
push
cmp
enter
sbb
rorl
repnz
add
sbb
ret
ficompl
pop
or
xchg
cld
in
mov
push
jmp
mov
js
add
and
jp
inc
cs
int
shlb
xchg
mov
nop
mov
shrl
add
mov
and
rcr
shlb
loopne
ret
inc
sub
icebp
shlb
cld
fisttpl
nop
mov
add
mov
data16
and
jne
inc
ret
push
sbb
xlat
addb
sub
adc
inc
mov
sbb
jnp
mov
xchg
and
insb
das
cmp
pop
shlb
push
test
sub
add
sahf
pop
insb
xchg
jmp
push
sbb
cmp
add
out
dec
sti
call
repnz
sbb
cld
inc
dec
mov
aas
sarb
xor
insb
adc
push
or
fadds
push
cmp
lock
lea
clc
adc
adc
add
hlt
lock
or
fldenv
or
sbb
sbb
jl
mov
nop
xchg
lret
mov
cli
sbb
movl
or
lods
cmpsl
and
bound
jmp
mov
outsl
shlb
sbb
loopne
adc
inc
mov
sbb
or
pushf
jge
mov
fidivrl
shrl
cmpsl
out
out
idiv
sbb
push
or
push
add
or
pop
or
or
mov
add
xor
or
sbb
rorb
push
inc
push
fsubs
add
add
cmpsb
pop
and
test
jmp
and
jo
ja
mov
mov
aas
lods
roll
jnp
roll
push
xor
and
mov
add
iret
ret
addr16
add
or
dec
push
or
sbb
in
in
and
in
inc
push
push
in
js
push
pop
pop
mov
in
nop
sarl
aad
insl
push
test
and
dec
outsb
or
cs
pop
jno
inc
push
sbb
loopne
xor
mov
add
fimull
add
les
lods
dec
sbb
aad
xchg
and
mov
iret
adc
punpcklbw
mov
sub
jo
dec
and
lret
mov
mov
dec
mov
mov
or
scas
lds
pop
sbb
mov
daa
mov
push
xor
jnp
dec
dec
add
mov
pop
sub
and
jecxz
mov
arpl
test
mov
cmp
xchg
in
lods
inc
add
xchg
pop
repnz
enter
add
dec
pop
mov
adc
pop
xchg
push
xor
add
mov
scas
mov
xlat
popa
jo
add
int
imul
es
das
sub
hlt
xor
add
push
dec
mov
mov
in
dec
mov
sub
not
and
mov
cmp
je
mov
or
mov
push
repnz
jne
add
sub
push
push
add
es
mov
lods
or
loopne
pop
es
mov
addl
orb
clc
call
addr16
outsl
sub
scas
imul
pop
or
shll
sbb
mov
cli
cmp
je
call
push
and
inc
negb
sub
movsb
sbb
add
or
add
add
roll
lods
pop
xor
push
xor
adcl
mov
xorb
or
push
cmp
jle
adc
adc
xchg
jge
mov
push
and
inc
and
lea
jnp
ret
and
jbe
add
xor
cwtl
inc
xor
add
push
dec
imulb
pop
sub
je
xor
sti
cwtl
jecxz
jb
ds
jo
add
cs
cwtl
aas
push
add
loop
lret
dec
push
scas
out
jmp
cld
das
clc
scas
mov
add
pop
push
test
insb
push
in
or
int3
and
ficoml
scas
shrl
xor
mov
fildl
push
xchg
test
cwtl
pop
sbb
add
push
gs
das
lea
lods
mov
lods
aaa
loop
adc
lret
fistl
cld
dec
test
pop
punpcklwd
push
iret
add
jge
fnstenv
enter
outsl
inc
xchg
aas
fcoml
fdivrl
mov
pusha
mov
push
push
add
mov
add
push
enter
je
cmc
fwait
push
imul
std
fcompl
mov
bound
pop
or
push
addb
mov
xchg
ja
sbb
lock
fnstcw
add
pop
in
outsb
jecxz
jne
or
mov
xlat
ret
adc
inc
adc
pop
inc
or
mov
mulb
adc
jmp
pushf
or
add
mov
rorb
mov
mov
in
xor
xor
not
and
imul
clc
add
fsubrl
push
add
mov
lea
mov
add
cmpl
mov
add
sub
pop
sub
test
sub
lds
and
js
test
push
cs
int3
adc
push
stc
fnstsw
icebp
mov
cwtl
push
xchg
push
jo
popa
in
push
loopne
ss
sub
push
popf
mov
mov
mov
jo
mov
mov
out
fsubl
and
sbb
mov
in
daa
mov
movsb
mov
push
lock
sbb
and
fdivrl
ss
insl
pushw
sub
dec
jmp
pop
ret
mov
sub
enter
add
add
xor
sub
inc
inc
adc
or
arpl
add
decb
js
pop
sbb
loopne
movb
mov
mov
mov
pusha
arpl
inc
add
out
dec
flds
pushf
leave
dec
hlt
add
insb
pop
add
loopne
cmp
cmp
pop
push
mov
fldt
add
and
sbb
cmp
pop
sbb
push
je
outsl
lcall
mov
add
mov
mov
add
dec
add
push
sbb
insb
rcrb
add
mov
dec
push
add
mov
lea
adc
mov
loopne
xor
pop
jl
inc
dec
jne
cmpl
push
jge
mov
inc
mov
add
cmp
add
push
cmp
adc
mov
sub
in
loope
jp
mov
adc
pop
push
push
inc
and
and
or
cli
dec
jns
jmp
loopne
mov
mov
sub
mov
or
jmp
dec
mov
pop
sarb
test
add
adc
orb
xor
cld
push
mov
inc
ret
or
loope
push
mov
adc
mov
aam
and
ss
xor
cmp
mov
cmpl
dec
ds
ds
jnp
js
call
std
lea
jmp
cmp
push
mov
sbb
daa
jmp
addr16
xchg
movsb
gs
or
jo
loopne
fs
lea
imul
icebp
fcomip
das
jmp
mov
cmp
ja
clc
dec
inc
movsb
ret
in
loop
clc
pusha
push
mov
cmpb
shlb
icebp
dec
das
push
or
ja
and
cmc
jns
sub
sbb
add
add
mov
push
subb
cld
pop
and
adc
sub
push
addr16
jl
add
daa
dec
jg
adc
adc
dec
mov
pop
pop
lods
or
cld
xchg
aam
inc
movups
mov
shr
push
xchg
adc
fsub
mov
sarb
gs
es
test
mov
scas
mov
je
push
push
push
mov
sub
dec
push
pusha
add
add
push
dec
ret
sti
sbb
or
in
inc
jl
add
push
cmp
filds
int
dec
mov
loope
test
jl
sbb
cs
hlt
push
addl
jb
icebp
sbb
shrb
or
jge
inc
in
jl
cld
push
aas
jne
lret
gs
adc
fsubs
sbb
dec
in
xor
lods
mov
cmp
add
push
rorb
jmp
jne
adc
pop
cwtl
subb
push
cmpsb
shll
es
push
inc
lods
sub
call
sahf
mov
lret
jle
cld
push
mov
push
in
add
fwait
add
popl
outsb
push
mov
push
rolb
shrb
out
fwait
sahf
imul
add
mov
enter
fcomps
pop
add
mov
loopne
movzbl
sbb
fs
jmp
add
shr
pop
inc
push
adc
push
es
jle
mov
int3
cmc
cmp
jl
mov
enter
add
pop
jg
jl
pop
clc
jle
cmpsb
mov
iret
mov
pop
stos
mov
sti
lods
add
mov
call
cmp
dec
push
jg
mov
xchg
add
lock
loopne
ljmp
fmuls
fiaddl
adc
push
xor
mov
pop
sbb
fmuls
cli
xchg
mov
cmp
xchg
sbb
scas
mov
xchg
dec
fdivrp
or
push
push
addl
aad
push
jno
stc
xchg
insb
sub
pop
imul
mov
adc
fldenv
ds
ret
push
jg
cmp
mov
es
cmp
dec
lsl
jl
and
push
mov
inc
dec
jne
cmp
roll
mov
sbb
xor
out
xor
cli
insl
dec
arpl
call
mov
ss
add
sub
add
adc
dec
int3
aam
or
inc
cmp
iret
dec
enter
jp
mov
sarl
in
xchg
enter
inc
imul
cwtl
mov
cwtl
mov
sarb
pushf
lahf
jne
or
sbb
push
fwait
sub
fwait
sti
sbb
and
ret
push
mov
fmuls
rclb
les
leave
and
adc
adc
js
arpl
mov
hlt
or
or
mov
mov
adc
sub
pextrw
xor
loope
jno,pt
adc
fcom
sbb
test
and
dec
inc
shrd
push
and
push
push
outsl
nop
pop
pop
lock
pop
je
jmp
add
sbb
sub
test
cmpsl
mov
je
or
aas
mov
fdivl
mov
jnp
std
add
xchg
insl
in
mov
dec
or
jle
lock
cld
add
negl
inc
push
int3
jmp
mov
jmp
adc
or
imulw
adc
pop
orb
or
inc
and
add
jge
cmc
and
lcall
sub
or
mov
mov
push
pusha
mov
jp
jg
pop
lahf
jp
cwtl
dec
xor
cmpsl
das
sub
mov
add
rorb
add
or
sub
cmpsb
dec
and
fstps
push
and
repnz
orb
pop
mov
mov
push
inc
pause
iret
add
rol
ret
or
addr16
mov
fildll
xchg
add
in
out
rclb
pop
push
imul
sub
ret
scas
ret
push
push
addr16
inc
inc
leave
in
pusha
arpl
hlt
or
sbb
bound
jg
adc
fistl
or
add
in
pop
movsb
decl
dec
sahf
push
sbb
adc
push
lock
aad
in
jo
inc
loopne
pop
mov
pop
lcall
in
hlt
int3
sbb
call
scas
sbb
sbb
mov
call
adc
in
loopne
ljmp
dec
mov
loope
xchg
add
and
int3
and
push
aas
push
add
addb
pop
notb
pop
mov
data16
out
or
adc
fidivl
mov
dec
lods
mov
mov
or
mov
data16
data16
out
mov
test
mov
mov
mov
adc
test
cmp
sbb
in
in
adc
hlt
xlat
mov
loopne
mov
jle
lds
clc
call
aad
cmc
int3
addl
add
xchg
test
icebp
cmp
mov
add
sub
pop
iret
adc
pop
xlat
add
xchg
mov
push
into
cmp
aaa
pop
mov
adc
int3
mov
sbb
shll
mov
xchg
sbb
adc
xor
push
mov
cs
xor
nop
addr16
movaps
dec
rolb
pop
test
cmp
or
test
popl
xchg
adc
ret
cmp
mov
sbb
sbb
cmp
je
sub
sub
shrb
fistpll
repz
sahf
and
filds
and
clc
in
push
bound
mov
dec
sbbl
jg
jo
hlt
rorb
adc
sbb
add
adc
rcrb
push
cmp
cmp
sub
add
aad
and
dec
cmp
mov
mov
add
xchg
andl
lcall
push
out
sbb
and
jmp
rcrb
cmp
pop
adc
push
adc
xchg
repz
push
enter
cld
loope
sub
fbld
and
daa
lock
lock
je
dec
cmp
rorb
xor
jb
pop
insb
pusha
add
pop
mov
setp
pop
aam
jo
and
cs
sub
mov
movl
and
push
int3
xchg
mov
out
aad
mov
ss
xor
push
pop
rcrb
int3
xor
xor
jbe
mov
jl
insl
xor
nop
mov
decl
pushl
xorb
dec
xchg
sbb
loope
xlat
in
sub
imul
or
leave
es
loopne
sbb
sub
lods
insl
fadds
or
adc
or
add
movsl
and
sub
add
ret
ja
inc
gs
imul
add
and
cmpl
or
mov
iret
js
insl
add
jge
mov
insl
pop
push
punpckhdq
adc
arpl
icebp
movsl
cltd
add
sbb
mov
xchg
in
sbb
icebp
out
sbb
dec
pop
or
aas
inc
pop
rcrb
sub
push
pop
xor
inc
adc
fdiv
xchg
and
cwtl
aaa
testl
dec
jo
orps
sub
or
lods
dec
xor
pop
mov
lock
pop
enter
loopne
fsub
aad
and
hlt
add
je
addb
rsm
dec
add
add
pop
enter
inc
and
push
mov
mov
adc
add
fstl
imul
inc
insb
lds
int
jge
add
cmpsl
cmp
je
mov
cmc
out
mov
mov
fldt
fistl
stos
push
push
adc
lock
test
or
cwtl
sahf
rcpps
or
xchg
cmp
mov
stc
jp
sahf
xor
cltd
andb
adc
cmp
rolb
jmp
inc
push
jno
cmc
adc
jnp
sbb
xlat
jl
xor
je
fiaddl
jne
mov
sub
adc
movl
or
loopne
dec
pop
cmp
ja
sbb
and
add
or
and
subl
mov
les
dec
mov
mov
int3
sbb
dec
sahf
and
inc
jne
sub
mov
cmc
add
add
dec
mov
push
or
mov
push
jo
int
fs
pop
xchg
cld
inc
lods
jae
ljmp
jae
loopne
or
or
inc
adc
mov
les
add
mov
jge
xor
jmp
mov
ffreep
inc
mov
cmpsb
test
faddl
cmp
gs
add
cwtl
add
aad
lock
add
sub
sub
mov
mov
push
sbb
adc
lock
push
push
sub
cli
test
lret
repz
sbb
inc
push
and
lods
ss
fistpl
int3
fs
sub
lcall
push
and
add
cmp
lret
push
sbb
dec
lods
out
fdivrs
cmpsl
mov
outsb
lret
hlt
cmp
pusha
stos
aad
xorl
ss
out
add
mov
inc
loopne
ret
dec
dec
inc
cmp
and
jnp
cmp
mov
cmp
aas
dec
outsl
cmp
je
mov
pop
daa
roll
adc
imul
cs
inc
mov
loop
pop
mov
mov
mov
add
or
cmp
xchg
daa
dec
cmp
jne
mov
xor
cmp
adc
or
in
xor
outsb
cmp
ljmp
jmp
cmpsl
lock
stos
jnp
push
add
dec
mov
sti
jp
mov
imul
jg
outsb
fcomps
imul
mov
adc
iret
or
dec
dec
add
adc
insl
cmp
or
mov
sbb
mov
xor
pop
pusha
mov
adc
mov
and
int
jnp
aas
or
sbb
mov
and
shlb
mov
int3
xor
loopne
jp
xor
sbb
jbe
nop
aaa
mov
enter
fdivs
xor
loopne
lock
outsw
clc
stc
dec
xchg
in
fbld
cmpb
decl
call
add
std
adcl
and
into
mov
cmp
arpl
sub
hlt
push
aad
loope
jmp
or
insb
outsl
sbb
or
aad
adc
xor
add
ljmp
loopne
mov
mov
iret
insb
loopne
fsubrs
sbb
es
pop
jle
inc
pop
xchg
imul
rolb
sub
or
push
repz
rcrb
push
rorb
cwtl
stos
add
push
insl
popa
add
fcomi
push
call
bound
inc
add
ror
mov
test
mov
mov
pop
stos
iret
mov
adc
xchg
lods
adc
add
js
and
in
cmpsb
pop
mov
mov
shlb
push
leave
lahf
pop
incb
movsb
movb
pop
cmpsl
and
inc
test
or
in
popa
mov
cmp
popl
sub
outsb
sub
scas
ss
enter
push
imul
xor
cmpb
push
xchg
lds
scas
fcoms
in
mov
lret
arpl
push
lea
aaa
sbb
aaa
movsl
or
movl
or
jge
cmp
sub
stc
in
cmpb
je
pop
out
cmpsl
and
insb
divb
mov
lea
mov
sub
pop
jp
mov
das
cmc
xchg
je
mov
scas
push
sbb
sbb
add
xchg
adc
sub
jmp
jecxz
inc
and
and
xor
push
pop
lcall
or
push
push
test
aaa
enter
sub
adc
call
push
daa
rorl
idivl
rclb
lods
and
popl
xor
mov
push
adc
jb
clc
mov
sbb
sbb
push
pop
jnp
pop
and
ret
xchg
clc
xchg
insl
jno
arpl
inc
dec
ret
pushf
and
or
mov
sahf
sbb
subb
jo
push
ss
leave
add
jmp
clc
or
mov
inc
jl
cld
sbb
dec
call
add
shl
add
add
inc
ret
push
lods
loope
lahf
fcoms
push
mov
sbb
add
xchg
mov
xor
jb
sub
lock
mov
xor
adc
lds
int
scas
push
push
inc
sub
shrl
pop
in
jae
cmp
inc
ret
pushf
pusha
cmp
rol
scas
mov
add
cmpb
add
mov
sbb
int3
imul
jle
rsqrtps
clc
testb
push
sub
dec
sub
scas
rorl
lds
sti
cmp
lds
rcrl
sub
sbb
cmp
push
dec
stos
cmc
roll
or
sbb
cmp
adc
inc
jbe
add
lock
lcall
pop
nop
popa
mov
pop
addb
inc
ret
add
arpl
mov
je
test
adc
outsb
loop
xchg
dec
fidivs
mov
and
sub
or
inc
adc
fisubrs
inc
and
jne
and
es
mov
mov
mov
and
sbb
add
ret
roll
aas
movl
jmp
adc
push
push
les
jo
aad
xchg
cmp
pop
sub
ds
rolb
add
cmpb
pusha
ret
mov
push
popf
or
rcrb
sarl
lock
and
and
smsw
rolb
ret
jo
xorl
add
loop
xchg
jnp
add
jl
sub
arpl
sub
pop
sub
fs
ds
pop
xor
inc
xor
rcll
add
ret
push
shll
adc
sbb
adc
lock
push
mov
push
or
cmp
jne
or
js
push
pop
add
jmp
adc
pop
loopne
dec
sahf
mov
rorl
lcall
sbb
lea
int3
ds
test
add
and
xor
inc
pop
push
call
mov
jno
pop
ja
dec
jecxz
pop
xor
push
pushf
pop
sub
and
add
adc
icebp
loope
sbb
pop
jb
gs
jmp
dec
pop
fists
mov
dec
cmp
jp
and
test
add
dec
inc
or
or
push
inc
mov
data16
and
adc
push
ja
jae
add
test
mov
push
sub
ret
add
cmpsl
scas
xchg
lret
push
cmp
iret
jne
imul
inc
insb
push
inc
cmpsb
mov
adc
adc
mov
push
mov
xchg
xchg
dec
insb
fnstenv
dec
inc
inc
into
pop
sub
cmpsb
pop
lods
jmp
add
mov
loop
bound
pop
lods
xchg
add
pop
fimull
sbb
add
lds
fcmovnu
push
lds
inc
adc
movsb
dec
movb
push
xor
hlt
filds
pop
clc
mov
cmpb
pop
push
add
adc
xchg
rorl
popf
mov
adc
mulb
xchg
cmp
fmuls
adc
test
fldenv
ss
or
xchg
lods
sbb
sub
cli
sub
jne
push
push
fsts
add
shll
mov
ljmp
repnz
pop
call
push
xchg
adc
inc
inc
lea
adc
movb
add
dec
icebp
iret
popa
popf
cmp
loopne
add
or
sbb
adc
data16
dec
pop
adc
not
inc
inc
movb
incb
inc
and
pop
jne
aas
shll
dec
sbbb
es
jo
lea
mov
sbb
or
in
or
mov
ret
add
lea
aam
xchg
rorb
dec
sub
ja
sub
dec
mov
adc
insb
and
clc
pusha
sub
push
loop
movsl
adc
out
mov
xchg
xchg
push
xchg
or
jo
sbb
inc
pop
push
aad
inc
add
add
or
aaa
cmp
cmovp
push
ret
lock
push
aad
roll
mov
or
loopne
ljmp
or
ffreep
filds
out
jp
arpl
or
add
imul
inc
ss
sbb
dec
mov
vpunpcklbw
mov
sbb
sub
or
cmpsl
jne
cmp
inc
push
lahf
ret
out
or
sti
pop
pop
sub
or
or
cltd
sub
inc
faddl
xchg
cmp
rorl
rolb
mov
jne
or
in
in
push
aam
and
and
add
pop
sbb
adc
movsb
mov
push
jp
sub
pop
and
and
test
dec
sbb
neg
pop
ret
add
inc
test
or
notl
loop
call
loop
mov
je
addr16
jne
or
push
mov
jne
push
dec
sbb
mulb
imul
mov
xorl
xchg
imul
or
mov
push
push
push
or
xchg
or
cmpsl
mov
pop
outsb
adcl
push
sub
or
test
lahf
mov
arpl
jbe
mov
sahf
cwtl
iret
mov
inc
jp
aaa
cmp
xor
loope
add
inc
push
out
or
ja
in
jno
or
movsb
into
pop
lods
and
fstl
sbb
shl
jl
mov
jbe
mov
arpl
in
not
xor
shrb
pop
std
jae
lea
mov
xor
adc
addb
mov
dec
dec
xchg
inc
test
sbb
mov
dec
sarb
dec
xor
jbe
daa
pop
mov
stos
int
xorb
cmp
dec
or
addb
or
movsl
rorb
cmp
dec
and
xchg
pop
mov
or
clc
add
sbb
shll
dec
and
lret
rclb
xchg
and
repz
insl
fisubl
adc
and
mov
addb
faddl
add
gs
rolb
xor
sbbb
test
out
bound
adc
rorb
inc
aam
mov
lds
pusha
and
or
or
push
mov
mov
enter
test
jmp
imul
mov
int
test
scas
push
dec
jle
in
add
push
jmp
loope
mov
or
xor
mov
inc
bound
or
imul
mov
sub
lock
push
push
sub
addr16
xchg
lods
and
in
cmp
inc
loop
or
xor
or
jne
or
mov
iret
mov
add
push
jo
cmp
call
pushf
xchg
fadds
out
sarb
or
sub
or
cwtl
dec
outsl
adc
xchg
movsl
cmp
lea
push
mov
push
xchg
int
xchg
test
lea
sub
adc
adc
repz
mov
jne
ror
xchg
push
nop
lea
or
sub
mov
popa
mov
jle
adc
call
mov
mov
dec
test
inc
aas
fiaddl
inc
icebp
and
cmp
ja
repnz
mov
push
pop
pop
rorb
cli
ret
xchg
mov
imul
lea
test
stos
test
jnp
add
mov
mov
roll
sbb
dec
loope
ret
sub
adc
inc
adc
lcall
inc
js
repz
mov
lock
pop
punpcklbw
inc
pop
test
sbb
cmp
test
dec
mov
mov
lret
xchg
or
cmpsl
jp
orb
jp
push
push
cmp
xchg
dec
inc
lea
mov
xchg
jle
movb
rcll
sbb
sbb
nop
adcb
add
pop
aam
pop
mov
ret
adc
jne
cmpsl
and
push
add
in
hlt
lds
rorb
loopne
in
pop
test
popl
movsb
add
fwait
ds
mov
test
cmpb
sbb
or
mov
push
push
push
push
test
jae
jge
and
cs
or
ret
cmp
inc
test
hlt
add
xchg
int3
jno
shrb
cmp
gs
push
stos
sub
popf
push
or
sub
subb
fcomps
inc
xlat
inc
dec
pop
ds
test
mov
or
ss
inc
push
inc
ret
jne
sbb
push
cmp
adcl
xor
push
data16
pop
inc
sbbl
sub
or
cmpsl
and
test
mov
test
xchg
sbb
in
daa
and
mov
popa
jbe
and
mov
ds
sarb
xor
in
adc
adc
and
js
pop
test
loope
jle
testb
push
addr16
inc
fimull
push
xor
push
cmpb
testb
je
pop
jns
pop
xchg
add
jo
xchg
push
lcall
or
ret
fwait
push
mov
and
inc
mulb
push
filds
sbbb
xor
cmp
add
xchg
mov
push
jmp
or
hlt
xlat
mov
or
ficoms
sub
add
test
or
movsl
mov
add
xchg
push
inc
pop
or
add
data16
push
sahf
ret
push
lock
mov
movb
test
xchg
sub
dec
add
fistps
jmp
inc
popa
adc
mov
pushf
ret
xor
xchg
lea
or
shrb
add
add
movsb
or
mov
and
or
dec
mov
shlb
or
mov
sub
ss
mov
cmpsl
sbb
push
jne
push
inc
adc
mov
call
dec
inc
nop
or
mov
mov
push
pop
xor
aam
mov
out
add
cmp
lahf
test
mov
add
and
mov
addb
mov
xchg
pusha
mov
push
sbb
movsb
fcoms
push
rcr
or
neg
subl
or
sbb
sbb
jo
push
cmp
ds
test
mulb
push
insl
jl
adc
loope
and
sub
adc
cmp
sarl
fldenv
xlat
cmp
mov
pop
sub
jl
sub
movaps
stos
pop
pusha
adc
lret
sbb
xchg
sub
mov
nop
cmp
sub
loope
movsb
pusha
call
or
adc
rol
sbb
xor
cwtl
pop
pop
sub
in
xlat
shlb
inc
lds
adc
dec
fdivrs
add
or
test
add
ja
sub
or
sub
fimull
or
cmp
and
mov
imul
push
mov
imul
mov
pop
pop
mov
fistl
mov
mov
push
shlb
dec
dec
mov
jnp
jno
ja
daa
mov
lock
mov
popa
add
xor
enter
cmp
xorb
lock
mov
add
xorb
into
or
xorb
xchg
dec
cmp
mov
in
cld
ja
mov
jg
jns
subb
subb
sbbl
dec
lock
jp
aas
in
push
adc
add
or
adc
and
std
mov
sbb
sub
mov
xor
out
mov
push
push
and
add
adc
mov
mov
cmp
xlat
shr
lret
mov
or
mov
pop
mov
add
sub
inc
and
adc
add
sbb
out
pop
xchg
inc
add
add
fwait
nop
das
push
adc
popa
mov
fnstenv
pop
mov
and
mov
ljmp
jne
and
or
inc
hlt
subb
dec
jecxz
adc
and
push
std
daa
add
and
incb
lahf
sbb
or
inc
cmp
sti
xor
add
mov
push
orb
lret
decb
ret
rorb
icebp
cmp
ss
test
sub
xchg
bound
xor
data16
jge
pop
sub
test
daa
aad
enter
pop
dec
jo
or
rol
sub
subb
aas
push
add
pop
fldl
jne
out
add
cvttps2pi
je
lock
js
add
mov
cwtl
push
outsl
or
jnp
loop
test
imul
or
orb
loopne
int3
fsubs
xor
pop
hlt
test
clc
ret
and
xchg
aam
add
popf
es
add
pusha
mov
xchg
movb
les
imul
repnz
mov
js
test
push
push
fsubrp
loope
mov
rcll
adc
pop
sub
scas
push
pop
mov
inc
stc
push
fisttps
out
pop
sbb
sub
movsb
sbb
movsb
mov
sub
out
adc
clc
or
xchg
add
xchg
cld
mov
push
lods
sahf
and
jle
sbb
sbb
movsb
or
or
mov
adc
jg
jmp
mov
jo
or
or
ret
dec
and
jno
fcompl
filds
push
push
inc
mov
inc
xchg
lcall
jnp
fdivl
xchg
fists
and
pusha
out
mov
addr16
push
inc
push
or
lock
mov
leave
ds
dec
cmp
sub
iret
push
push
iret
je
iret
mov
push
fists
scas
nop
stos
inc
adc
add
cmp
test
dec
or
ret
xor
aad
jne
lret
cmp
xor
and
or
or
and
pop
ja
add
mov
movsl
fistps
clc
adc
dec
or
pop
pusha
and
or
pop
shlb
inc
add
dec
xlat
pop
sub
pop
adc
lahf
outsl
movsl
and
nop
sbb
or
and
add
fcoms
fs
pop
and
bound
cmp
cmpb
subl
dec
mov
pop
xlat
std
or
sub
mov
sbb
fmull
mov
pop
aas
add
adc
mov
and
testl
add
pop
add
movb
jle
notl
clc
test
aad
sub
inc
lahf
add
pusha
imul
or
pop
sbb
and
lock
inc
pop
pop
push
jmp
jmp
mov
sub
jb
je
imul
adc
dec
adc
adc
mov
or
loope
sti
sbb
pushf
and
mov
pop
adc
add
inc
mov
enter
cmpsl
jge
xchg
xchg
pop
sbb
and
or
push
sbb
rolb
sbb
cmp
pop
loopne
cmpsb
jge
or
sub
and
or
fistpl
popa
cmp
jle
push
pop
push
jle
adc
fildl
sub
imul
adc
movsb
jle
or
and
and
test
dec
jmp
jmp
cs
sub
sbb
shr
sub
pop
fidivrl
add
pop
shr
or
lock
loope
inc
fcoms
nop
push
and
push
nop
nop
sub
adc
dec
adc
rcrl
loopne
and
and
add
jae
xor
mov
push
sbb
ret
or
sbb
pushf
xchg
jl
inc
or
pop
mov
ret
adc
addl
jge
inc
scas
js
test
int
shlb
xor
call
jne
or
cmpl
jb
push
mov
xor
lock
test
or
mov
sub
adc
push
lea
lea
lock
sbb
pop
movl
push
push
jl
lea
mov
inc
lahf
rcll
inc
mov
dec
push
push
loope
test
cmpsl
cmp
mov
add
leave
or
sub
add
iret
cmpsl
sbb
sub
sub
daa
and
sub
xor
jge
lret
pop
aas
cmpsl
cs
test
adc
lods
scas
or
pop
fdivrs
into
subb
or
test
cmpsl
fldcw
add
imul
clc
inc
outsl
jl
xor
neg
mov
daa
xor
gs
mov
test
bound
xor
push
sub
dec
fisubs
jmp
ds
cmp
push
out
add
adc
and
cwtl
sub
mov
adc
xchg
adc
insb
popa
jns
jae
push
pop
pop
das
mov
xor
sbb
mov
push
sbb
sbb
daa
and
jae
call
nop
cmc
pop
sbb
mov
push
push
inc
push
mov
inc
dec
dec
add
and
xchg
sub
loop
dec
lret
cmp
in
jo
gs
insb
std
pop
loope
inc
jg
prefetchw
or
cld
jg
loope
dec
pop
xchg
cld
mov
pop
rcll
mov
and
jns
cmp
inc
fisttpll
push
xchg
mov
or
and
imul
out
cmp
call
xor
out
sub
imul
or
adc
sub
jnp
sahf
xor
test
lcallw
ljmp
and
or
sub
add
mov
or
add
mov
dec
cs
adc
ds
mov
movsb
loope
inc
aad
scas
jbe
or
test
shlb
sub
push
push
test
dec
xchg
or
xor
dec
sbb
add
sub
xor
sahf
sub
idivb
mov
and
cmp
adc
and
sub
inc
mov
pushf
test
repz
loopne
shrl
jns
iret
mov
fistps
out
sahf
out
push
out
idiv
pop
rorb
das
ficoms
mov
mov
sub
mov
sbb
add
mov
push
xor
cmpsb
xchg
movb
cmp
js
xchg
xor
fimuls
and
loope
mov
push
cmp
sysexit
ss
lods
inc
shlb
cli
jo
mov
cmpl
inc
push
test
daa
and
fbstp
in
frstor
ret
mov
cmpsb
fsts
xor
testb
iret
cmpb
sub
lret
mov
clc
mov
push
dec
add
pushf
stc
add
inc
push
jmp
inc
mov
push
cmp
push
add
mov
adc
sbb
adc
lea
cmc
jne
xor
movl
adc
add
aaa
les
cs
xor
iret
mov
cmp
notl
sbb
push
test
into
in
pusha
sub
dec
imul
adc
rolb
ror
pop
dec
dec
xor
adc
hlt
xchg
dec
and
sbb
or
mov
xor
rcll
sub
xchg
adc
xor
call
push
push
loope
and
int3
push
pop
mov
jle
leave
popa
add
pushw
push
inc
lret
dec
adc
jg
xor
rol
flds
xchg
sub
ljmp
icebp
lock
ljmp
addl
and
sbbl
add
push
es
xor
and
adc
aam
or
sbb
pop
mov
movsl
and
inc
push
add
popa
outsl
loopne
cwtl
loope
or
or
test
adc
cmc
cmp
sub
jne
sbb
cs
xchg
nop
popf
pop
add
rolb
adc
test
and
add
inc
push
jle
cmc
test
and
xor
dec
jmp
jo
int3
mov
add
leave
icebp
add
popf
movsb
aas
cwtl
pop
and
push
imul
ret
jge
enter
fisubs
aas
inc
sbb
ss
dec
sub
aas
mov
xchg
push
jp
push
add
cld
data16
mov
cmp
je
xor
adc
and
mov
inc
push
cmp
inc
cs
xchg
pop
xor
pop
dec
out
cmpsb
inc
cmp
daa
fnsave
mov
push
movsl
add
pop
rorb
add
mov
icebp
add
or
stos
sub
flds
cmp
cmpsl
xor
push
jo
or
stos
test
fsubrl
aaa
add
test
mov
push
or
and
adc
sti
cmp
cwtl
push
push
mov
dec
push
lcall
pop
into
push
sub
mov
and
push
and
movl
mov
dec
pushf
daa
push
js
fadd
cmp
loope
or
mov
lea
pop
push
lret
in
jmp
dec
js
xchg
xor
loopne
lock
call
ss
cmpl
jecxz
push
and
gs
dec
addb
shrb
icebp
ja
daa
and
mov
call
adc
pop
iret
sub
ret
dec
mov
aad
in
pop
inc
adc
jne
mov
pushf
jecxz
insl
inc
inc
test
mov
shll
lock
cmpsb
ja
lock
jbe
jecxz
shll
nop
call
jl
jmp
cld
loopne
nop
cmpsb
mov
push
and
add
inc
and
arpl
or
push
or
add
pop
test
push
test
xchg
sbb
out
xor
movsb
cmp
lock
sbb
push
stos
test
inc
pop
pop
cmp
or
ret
xor
mov
or
inc
subps
inc
xor
aas
xchg
orb
add
rcr
cmpsl
cmpb
or
or
shl
sub
mov
mov
dec
and
dec
je
iret
and
in
push
mov
loopne
and
and
push
clc
enter
jmp
push
inc
adc
es
lods
hlt
mov
popa
add
jns
cmp
add
jbe
ret
hlt
and
test
and
mov
pop
fdivr
sub
or
sbb
jmp
aam
enter
adc
sbb
test
sbb
mov
and
cmpl
mov
sbb
movsl
inc
ds
pop
cmp
or
adc
je
cmp
arpl
mov
rcl
subl
test
call
xor
shlb
jl
dec
jl
ljmp
jae
xor
add
cmp
push
xor
outsb
push
push
subb
push
cltd
je
js
stos
pop
add
notb
fisubl
dec
addr16
push
out
pop
rolb
push
in
push
jb
xchg
push
enter
and
push
jns
loopne
jb
xchg
lret
clc
pusha
add
or
pusha
or
nop
lret
fs
push
and
xchg
push
add
test
pop
or
je
mov
mov
rolb
xor
sub
push
sub
sahf
adc
pop
mov
jb
sub
push
das
push
popa
fs
inc
outsb
insb
fcmovb
inc
or
pop
push
add
or
aad
roll
outsl
jae
daa
or
adc
shll
dec
jne
jo
jl
enter
lahf
jo
enter
in
mov
aas
ja
ds
jo
lcall
pusha
test
xor
push
push
push
or
fisubrl
sbb
dec
ds
push
inc
movsb
dec
xchg
loopne
push
inc
jb
cmpsl
je
cmpsl
scas
push
les
dec
sbb
pop
add
dec
pop
je
pop
aaa
cmc
adc
test
pusha
and
pop
test
mov
shrb
or
pop
jg
xchg
add
leave
and
sub
cmp
mov
aam
push
xor
cmpsl
mov
push
decl
andb
test
addb
mov
sbb
sbb
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
int3
rcl
sbb
sbb
fcomp
loopne
sbb
sbb
call
sbb
sbb
cld
add
sbb
or
adc
sbb
sbb
sbb
and
sbb
sbb
sub
xor
sbb
sbb
cmp
stos
jg
xor
vcvttss2si
sbb
xorb
mov
sub
shlb
cmp
add
sbb
add
xchg
lcall
jne
aam
dec
gs
mov
nop
xchg
xchg
add
dec
pop
mov
cwtl
loop
sub
add
or
push
or
gs
test
lods
and
cwtl
push
push
movsb
xor
lret
int3
shlb
add
push
sbb
and
inc
sub
shlb
add
push
movsb
xor
xchg
fsubrl
js
adcb
call
cwtl
in
test
dec
gs
sub
hlt
rclb
in
clc
xchg
jl
and
add
gs
sub
or
xchg
add
push
push
movsb
xor
adc
sbb
sbb
sub
push
sbb
nop
and
or
gs
sub
sub
xchg
add
pop
mov
xor
dec
cmp
and
add
xchg
inc
pushl
inc
pop
enter
aas
jne
and
clc
je
gs
gs
mov
insb
outsl
jae
and
inc
pop
sahf
sbb
in
push
adc
mov
xor
pusha
xchg
pop
clc
mov
push
popa
jb
lods
add
shrb
pop
sub
test
addr16
addr16
xchg
gs
in
test
addr16
fs
pop
adc
cmp
jno
jae
js
and
fs
in
dec
pop
and
push
jp
or
sbb
jae
sbb
xorb
and
inc
push
cmpsl
pop
push
mov
pop
pop
test
mov
push
or
mov
fmuls
adc
or
add
jbe
mov
inc
dec
xor
cmp
mulb
jl
outsb
in
add
inc
js
dec
xor
outsb
negb
add
iret
fisubrl
popa
and
mov
daa
and
imul
lods
sbb
shll
sbb
inc
popa
adc
jl
cmpsl
mov
es
fs
jg
fcompl
das
adc
outsl
addr16
jne
insl
aaa
ss
in
outsb
das
pop
fs
cmp
imul
pop
or
rolb
or
adc
xor
cli
sbb
xchg
js
add
fwait
outsl
pop
jo
loope
repz
rclb
rclb
xchg
adc
clc
xchg
sbb
jg
dec
dec
jne
mov
push
cmp
xor
jg
mov
movsl
iret
jbe
cmp
mov
subl
cmpsb
xchg
pusha
mov
push
mov
scas
or
dec
out
in
jo
push
outsl
dec
pop
add
xchg
add
push
in
test
sbb
add
dec
pop
push
mov
adc
sbb
inc
dec
mov
dec
cld
dec
psrad
push
insb
dec
jne
loopne
out
imul
fs
das
or
add
loope
lods
add
jae,pn
pop
add
sub
jno
lds
insb
pusha
leave
repz
jl
xor
mov
mov
les
stos
cmp
adc
outsb
testb
cmc
cmpsl
add
inc
add
pop
shlb
mov
jle
jbe
imul
movsb
nop
jns
mov
cmp
add
sub
jle
sbb
adc
and
push
int
dec
imul
inc
dec
jg
pop
xor
or
sub
lea
jmp
sbb
push
push
dec
sub
cmp
fcomps
and
fsubrs
daa
dec
aam
sub
mov
je
test
test
cmp
cwtl
lret
cli
mov
test
jl
lock
and
int
cs
adc
cmp
dec
psadbw
or
int
pop
xor
push
pop
pop
rcr
add
and
or
sub
jp
out
test
pushf
pushf
fmull
cmp
cmp
pushf
pushf
pushf
cmp
pushf
pushf
pushf
and
and
pushf
pushf
pushf
and
pushf
pushf
pushf
sub
sub
pushf
pushf
pushf
sub
pushf
pushf
pushf
adc
adc
pushf
pushf
pushf
adc
pushf
pushf
pushf
sbb
sbb
pushf
pushf
pushf
sbb
pushf
pushf
pushf
add
add
adc
pushf
add
repz
lock
lret
call
cmp
je
insb
shlb
iret
repz
rclb
cmp
repz
test
mov
xor
sub
and
cmp
repz
adcb
imul
push
jns
out
pop
in
push
in
out
sahf
dec
faddl
cmp
jns
out
xor
sub
mov
lods
adc
pushf
add
repz
test
jl
repz
repz
insb
shlb
cmp
enter
mov
cmp
inc
test
mov
xor
sub
and
loopne
iret
mov
daa
mov
pop
loope
push
pusha
out
mov
inc
cmp
std
mov
iret
fisttpll
or
and
clc
dec
aas
das
pop
mov
shl
push
jns
lcall
enter
inc
pop
adc
fs
sbb
ficoml
outsl
insb
stos
ss
mov
pop
xchg
fmull
mov
push
imul
push
and
ja
fwait
mov
sbb
push
imul
and
pop
daa
and
in
adc
lea
mov
xchg
test
xchg
repnz
mov
mov
aaa
xchg
push
rorb
cmp
test
or
movsb
fcoms
out
je
push
lods
cwtl
xchg
xor
or
push
js
adc
in
cs
arpl
in
js
push
pop
js
mov
sbb
mov
pushf
es
or
push
or
adc
test
bound
mov
and
inc
xchg
cmp
jg
iret
inc
xor
fdivl
leave
jecxz
iret
dec
imul
dec
pop
dec
push
jmp
out
xchg
mov
cmpl
and
mov
mov
push
push
ja
in
xchg
fsubrl
cmp
and
sarb
xor
cmpsl
push
push
mov
mov
xchg
loopne
mov
cmp
ja
pop
lock
push
mov
push
icebp
dec
adc
aaa
jae
mov
push
adc
inc
outsl
jb
popa
je
test
imul
data16
je
out
inc
pop
imul
mov
xchg
scas
inc
mov
mov
pop
cmp
shll
dec
xchg
cld
xor
pop
push
push
mov
xchg
enter
int3
or
and
rorb
notl
cmp
cmp
add
adc
sbb
rclb
mov
and
jo,pt
shlb
test
mov
push
xchg
aad
imul
inc
daa
sub
insl
xchg
and
xor
xor
subb
dec
imul
add
sbb
add
cwtl
mov
mov
push
or
adc
outsl
pop
js
jnp
idivb
bound
pop
es
jb
add
jnp
jb
popa
or
sbb
out
jge
dec
es
insb
bound
jbe
es
gs
pop
jo
addr16
out
jnp
pop
jb
addr16
add
pop
imul
mov
arpl
insb
daa
push
sti
outsb
inc
imul
mov
fnsave
cmpsl
sbb
xchg
mov
xlat
and
pop
fs
daa
mov
cmp
pop
je
jo
jbe
fidivs
arpl
jns
jb
outsb
fdivs
pushw
das
add
in
sti
fimuls
imul
test
sub
in
ret
scas
sub
xchg
mov
lock
dec
ljmp
or
inc
dec
jp
add
push
or
pop
push
nop
inc
das
add
rolb
shlb
movl
inc
jl
or
lds
pushf
mov
loope
push
xor
push
or
nopl
and
dec
inc
cltd
cmpb
xchg
adc
mov
sbb
je
adc
push
sbb
mov
mov
das
mov
outsb
mov
adc
fstpl
dec
adcl
mov
mov
adc
movsl
mov
decl
push
mov
adc
mov
inc
outsl
nop
xchg
xchg
push
test
inc
mov
lcall
sbb
pushf
mov
xchg
xchg
loope
sbb
int3
or
shrl
loope
push
inc
mov
fcmove
insl
fsts
dec
cmp
sbb
pop
sub
lret
adc
sbb
arpl
dec
in
mov
or
nop
lock
dec
pushw
or
rolb
mov
data16
ret
ja
push
inc
sahf
or
xor
roll
add
add
push
pop
pop
or
or
or
or
or
or
repz
adc
adc
cmp
repz
std
cmp
sbb
sbb
push
pop
and
and
and
nop
pop
out
sahf
mov
ss
push
inc
pop
imul
pushf
lods
mov
repz
add
and
repz
repz
push
push
cmp
fwait
lods
mov
cmp
cmp
and
cmp
repz
dec
pop
data16
xchg
sbb
cs
add
add
sub
xchg
lret
push
adc
adc
jb
in
push
or
test
sbb
sbb
xchg
push
cs
or
dec
push
and
jb
in
sub
sub
pop
push
mov
adc
adc
adc
inc
push
inc
dec
in
lret
sbb
movsb
jb
push
sbb
test
pop
jns
sub
sbb
sub
pop
bound
cmpsl
push
jns
arpl
cmpsl
push
jns
aas
and
push
jns
xchg
and
and
xchg
inc
sub
and
aaa
xchg
mov
aas
inc
dec
add
and
cmc
enter
mov
pop
xor
xchg
push
rcr
fadds
pop
sgdtl
jmp
andl
call
push
cmpsb
js
lock
popa
dec
test
and
push
sbb
push
adc
or
fldcw
add
add
test
mov
pop
dec
mov
sub
sbb
mov
test
or
out
cmp
loopne
ss
je
fmuls
sbb
loop
or
dec
dec
fcomps
push
cmpl
adc
jmp
popa
push
xchg
pop
or
jno
leave
and
lock
sbb
push
mov
xchg
and
cmp
jg
adc
adc
lock
imul
pop
fadds
push
loopne
movsb
popa
loopne
jbe
push
cld
add
pop
push
push
ret
mov
dec
pop
xlat
push
inc
cmpb
push
aas
mov
add
es
test
ss
ret
scas
imul
jnp
mov
pop
xchg
dec
loop
sbb
aaa
pop
and
pushf
js
and
fs
imul
idivl
fsub
xor
std
jae
push
mov
movb
inc
test
das
iret
add
dec
in
arpl
iret
pop
dec
push
enter
and
mov
pop
or
insl
jb
in
mov
push
mov
in
push
inc
psubsb
push
jg
mov
xadd
add
orl
dec
adc
cmp
repz
push
pop
popa
repz
repz
cmp
sub
cmp
add
mov
and
aaa
pop
fldcw
fs
pop
fs
es
inc
cmpsl
lcall
xchg
or
sub
push
xchg
mov
sub
aas
icebp
xor
add
add
ret
aam
adc
ss
and
clc
add
and
subl
push
cmpl
mov
adc
sub
je
clc
sbb
clc
push
aam
push
cld
mov
pusha
push
and
push
sbb
push
inc
js
add
shll
sub
jnp
xor
lea
andb
sub
pminub
out
lods
in
stc
xor
pop
aaa
or
call
dec
jo
icebp
push
push
shl
dec
daa
and
cs
dec
xor
lcall
push
adc
adc
lahf
adc
xlat
jns
pop
mov
inc
jmp
mov
ret
jmp
mov
jl
lods
enter
pop
cmp
lods
or
cmp
xor
sbb
dec
fsubs
cmp
and
rorb
jg
cmp
pop
inc
aaa
mov
loopne
fs
mov
addb
dec
or
mov
add
jb
push
adc
rclb
sbb
mulb
adcb
mov
mov
pop
mov
or
jle
inc
in
addb
pop
dec
xchg
sahf
mov
push
rcrb
add
iret
inc
sub
std
sbb
cmp
test
enter
iret
mov
ds
add
xchg
or
clc
push
mov
jecxz
push
dec
push
divl
fstp
aas
mov
sub
sub
and
sub
push
pop
sbb
cmp
movsl
mov
or
sub
and
xor
jmp
fs
sub
ret
movb
ret
incb
push
mov
cwtl
cmpsb
cmpsb
add
aam
lock
roll
cmpsl
aas
mov
cltd
jmp
fnstenv
test
lea
adc
imul
cwtl
das
adc
lds
jmp
mov
lock
loope
mov
sbb
push
or
mov
imul
mov
xor
mov
inc
mov
repz
fisttpll
xchg
cmp
add
jne
jo
push
cs
mov
out
sub
sbb
in
push
pop
je
mov
xchg
pop
jb
or
adc
inc
add
pusha
jbe
fsubrs
imul
mov
mov
and
or
movsl
test
sbb
xchg
pop
push
or
dec
sub
sub
cmc
push
mov
cmp
adc
add
pop
inc
add
or
adc
fidivl
pop
mov
arpl
jo
ret
pop
and
jmp
mov
mov
mov
sub
fcoms
mov
invd
xchg
and
icebp
push
push
fildl
insb
shrb
cmp
sub
pop
inc
mov
sahf
mov
mov
ret
push
ja
sbb
or
mov
xor
jmp
dec
fsubs
dec
dec
inc
dec
push
repnz
pop
mov
mov
insl
jbe
pop
dec
imul
mov
and
xor
xlat
and
decb
or
lret
push
inc
nop
cmp
inc
dec
mov
pop
mov
stos
insl
jl
pushf
dec
out
mov
je
cmpsl
lcall
adc
sub
or
add
jne
mov
insl
insl
insb
add
sti
jmp
cmp
pop
orb
mov
mov
out
or
or
and
mov
add
mov
loop
pushf
orb
sahf
in
dec
fiadds
push
adc
aam
movsb
test
popa
in
sbb
subb
movsl
or
sub
lods
adc
loope
xor
inc
in
or
push
clc
jnp
sbb
cmp
xchg
jbe
shl
loope
xor
or
push
or
das
outsl
test
cmpl
adc
shl
jno
jecxz
inc
add
jb
sub
dec
je
push
outsl
pop
lock
inc
mov
outsl
divb
adcb
push
clc
nop
or
and
dec
xor
mov
adc
cltd
xlat
jo,pn
mov
je
subl
push
pop
test
dec
in
jns
xor
mov
add
repnz
cmp
add
push
inc
sbb
and
lods
sbb
mov
push
add
push
push
leave
xor
std
jno
aaa
mov
push
sub
popa
insb
loop
or
inc
outsl
je
sbb
dec
sbb
test
add
outsb
inc
inc
imul
pop
or
fdivrp
jo
or
sbb
jno
adc
cmpsl
adc
xchg
cs
sbb
pop
xchg
mov
xchg
push
cwtl
pushf
push
add
pusha
mov
mov
push
rorb
rcr
mov
mov
and
mov
sbbl
inc
or
sbb
pushf
jno
enter
jne
lods
jl
fwait
xchg
adc
lods
xchg
push
xchg
andb
dec
mov
xor
push
dec
gs
sbb
in
shll
push
test
jb
adc
mov
icebp
push
jno
daa
addb
loopne
clc
xchg
xchg
addb
and
xchg
push
jg
das
or
adc
nop
inc
jno
out
xchg
and
pop
adc
xchg
jl
inc
js
jl
mov
xchg
lods
inc
pop
jae
dec
lds
mov
mov
inc
push
cld
push
adc
push
cmovge
sbb
push
imul
push
xor
in
out
pop
sub
sarl
mov
inc
inc
je
jl
movsb
in
sbb
jae
cmp
xchg
les
add
pop
add
ja
mov
inc
xor
push
push
frstor
outsl
or
movl
rorl
aaa
push
daa
xchg
pop
jl
clc
jne
shrb
dec
les
mov
jle
lods
inc
cwtl
scas
inc
inc
mov
lods
cmpl
jg
clc
fidivrs
jns
xor
push
jo
sub
test
cwtl
iret
repz
rorb
enter
sub
hlt
dec
aam
adc
pop
push
in
adc
push
and
xchg
out
adc
push
loopne
cmpsb
cmp
push
adc
nop
adc
jnp
add
push
insl
bound
or
push
fnsave
sbb
add
jg
pop
push
sbb
test
test
dec
or
jne
adc
fmul
adc
mov
stos
sbb
mov
ja
or
adc
gs
dec
je
data16
inc
push
pop
add
jbe
or
fcoms
xor
dec
mov
repnz
paddq
push
imul
imul
push
push
push
sbb
lea
sbb
mov
ret
sbb
imul
or
pop
or
jmp
andb
pop
fs
or
jae
jns
js
add
add
mov
std
jg
loopne
mov
rolb
js
ds
adc
sarb
fdivl
fs
push
push
adc
sbb
xor
pusha
sbb
or
sub
inc
lock
xor
xchg
add
or
xchg
out
pop
inc
js
inc
or
mov
dec
push
or
or
fldl2t
sub
es
xorl
decl
or
jbe
addb
or
rcll
mov
mov
sub
push
mov
add
add
adc
adc
xor
pop
mov
fldt
repnz
clts
testl
vmulsd
inc
scas
movsb
xchg
les
add
add
or
cmp
mov
push
mov
push
stos
nop
lock
push
push
jb
cltd
push
adc
mov
and
in
sub
sub
ja
mov
ja
push
mov
js
mov
ljmp
outsl
dec
addb
pop
dec
adc
repz
jle
pop
sbb
or
nop
mov
xor
clts
mul
inc
pop
inc
mov
lret
out
ds
adc
or
mov
push
dec
gs
xchg
loopne
push
mov
ret
lock
mov
enter
imul
and
pop
ror
cmpsb
jae
sbb
addr16
add
outsb
and
icebp
das
call
fisttpl
cwtl
int
loop
add
or
pop
push
out
sahf
mov
jl
stos
jb
pop
adc
or
add
xchg
mov
or
mov
or
aad
adc
or
add
add
inc
pop
pop
xor
push
add
ret
add
fidivrs
cld
adc
lods
jge
mov
jae
jp
add
and
ja
testb
add
cmp
add
sbb
pop
inc
gs
pop
or
add
out
mov
bound
push
nop
cwtl
test
dec
sbb
sbb
pop
pop
adc
addb
gs
shl
es
popa
mov
stos
and
sub
xadd
and
fs
loopne
lods
sbb
xor
push
push
add
push
mov
outsb
cmc
mov
test
subb
out
sbb
push
fsubrl
jo
mov
mov
dec
xorb
push
les
xor
add
push
sarl
mov
mov
es
clc
mov
mov
mov
inc
xchg
xor
ss
shrl
cs
cmp
js
mov
adc
or
cmpsb
sahf
les
cmp
fs
xchg
cmpb
xor
jle
jle
jbe
int3
clc
aam
xor
mov
and
mov
orb
xchg
dec
add
jg
pop
add
add
add
add
nop
add
add
add
incl
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
cmp
in
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
fdivr
fcos
fdivr
add
call
call
call
call
call
call
call
call
dec
ret
mov
dec
dec
dec
dec
icebp
dec
dec
pushl
add
xlat
sbb
push
hlt
stc
xor
repz
pushf
push
test
cld
sbb
sarl
cmp
aam
fldt
mov
xchg
sahf
cmpsl
fnstcw
mov
sbb
dec
iret
jnp
jl
fdivp
ss
inc
sbb
aam
out
cmp
jl
mov
mov
xchg
test
cmpsb
mov
xor
cmp
es
or
dec
push
adc
pop
push
pop
push
lock
lret
call
add
mov
sahf
mov
idivb
addl
add
mov
sahf
push
fadds
ret
cmp
jb
sub
xchg
cs
push
fcompl
or
push
leave
nop
pop
pop
cmp
cmp
adc
pop
or
icebp
movsb
mov
add
nop
cmpsl
pop
mov
add
jns
xor
lahf
out
ret
add
dec
adc
outsl
mov
and
add
inc
mov
add
call
incl
or
or
push
pop
cmp
pop
sbb
incb
push
jo
pop
add
xor
pop
mov
pushl
adc
inc
test
pop
dec
pushf
inc
jp
in
or
pop
jp
fdivrs
and
jne
inc
sbb
dec
in
inc
mov
jo
mov
js
adc
adc
mov
dec
in
add
mov
das
sub
push
test
mov
xor
cmp
cmpsb
inc
add
jns
sbb
popa
testl
add
addr16
xchg
pop
jle
mov
push
aas
mov
add
in
xor
add
pusha
sub
lahf
dec
out
mov
sub
inc
xchg
xor
daa
aam
lahf
nop
daa
push
push
enter
lret
lahf
cld
add
and
scas
stc
push
aam
mov
out
push
mov
xor
int
je
jo
mov
insb
cld
es
int3
add
push
aaa
mov
and
xchg
loope
mov
jp
test
fildll
adc
dec
add
cmp
sub
orb
push
push
inc
out
and
test
add
add
in
mov
adc
das
add
mov
test
adc
in
addb
loopne
lcall
add
mov
mov
mov
mov
mov
or
xchg
cmp
adc
sbb
scas
inc
and
and
das
mov
mov
add
sub
mov
xor
cmp
push
lock
jg
in
inc
inc
inc
inc
inc
inc
inc
inc
test
cmpsb
std
mov
add
cmp
cmp
pushl
pushl
push
clc
iret
repz
sbb
insb
mov
sbb
cmp
test
out
out
or
dec
adc
fnstcw
pop
and
enter
mov
push
adc
sbb
mov
movsb
lahf
negl
push
sub
mov
push
mov
inc
pop
dec
ss
sahf
out
fisubs
jl
ret
jns
jge
sbb
push
rolb
push
inc
lods
ss
mov
push
adc
or
jnp
subb
push
cli
push
nop
push
lahf
idivb
movsb
pop
push
clc
inc
and
jle
ja
push
cld
aaa
dec
sub
adc
adc
push
fs
sbb
push
shlb
enter
insb
ss
and
lock
adc
lahf
out
push
xchg
add
sbb
outsl
hlt
faddp
lret
divb
into
sub
push
adc
ret
ret
mov
pop
mov
pusha
es
mov
push
data16
mov
or
mov
pop
inc
pop
and
lock
mov
mov
push
cltd
cwtl
testl
or
push
test
push
jbe
mov
push
outsl
inc
push
xor
loopne
add
js
push
out
xchg
cmp
adc
jo
push
or
nop
mov
mov
mov
into
push
cmp
enter
sub
xchg
aaa
push
push
movsl
and
outsl
hlt
or
pop
call
hlt
bound
push
push
mov
js
sbb
fdivrp
pop
sti
adc
insb
push
in
push
cmp
sti
mov
pop
xchg
and
push
js
scas
push
mov
add
or
ds
icebp
test
subps
jg
inc
mov
mov
sbb
cmp
inc
and
xchg
dec
cmp
dec
nop
flds
mov
sbb
sbb
sbb
adc
mov
adc
loop
iret
repz
in
pop
gs
jne
cmp
repz
pushf
test
xchg
clc
rorb
mov
pushf
lret
mov
lds
lcall
dec
push
mov
rolb
ficoms
pop
orb
pop
es
ss
adc
push
inc
out
push
jb
and
adc
mov
sbb
xchg
aad
lea
mov
les
sbbb
sbb
sbbb
inc
adc
pop
add
xorb
fisubrs
and
cmpsl
lock
and
nop
popa
ja
or
pop
sbb
or
pop
ret
movl
sub
jae
jbe
adcl
sbb
push
or
movsl
sub
fmull
fs
sqrtps
mov
sub
xor
sarb
adc
adc
cmp
adc
or
testb
adc
sbb
lcall
pop
adc
and
sub
pop
or
push
sbb
dec
xlat
jb
mov
push
pop
daa
cli
sub
lods
test
xchg
imul
or
push
fmuls
in
cmp
push
inc
push
inc
daa
loopne
cmp
jo
daa
or
subl
push
cmc
ror
enter
inc
and
fisubl
jo
imul
mov
outsl
mov
mov
out
dec
push
popa
push
daa
add
cmpsl
inc
outsl
cltd
test
sbb
das
test
mov
lods
pop
imul
mov
dec
sub
repz
mov
clc
shrb
dec
mov
mov
mov
mov
inc
inc
pusha
and
lret
push
daa
jecxz
adc
and
or
lea
or
adc
pop
dec
cwtl
jg
sbb
cmp
jo
xchg
cmp
mov
mov
stc
icebp
es
or
out
sub
or
push
mov
mov
sbb
mov
xchg
xchg
out
ds
or
adc
push
dec
sbb
add
fs
faddl
push
add
push
pop
adc
push
scas
adcb
js
push
or
add
cmp
jl
loop
adc
pop
imul
mov
sbb
out
ficomps
or
shl
std
dec
fcoms
mov
and
dec
ds
xlat
lock
mov
es
push
adc
sub
add
daa
inc
sbb
xchg
mov
mov
pop
jmp
cld
aaa
test
adc
jne
pusha
icebp
testl
cmp
dec
mov
inc
fadds
or
divl
push
push
dec
pop
pop
inc
aaa
rol
add
shrb
push
push
or
shll
adc
adc
shll
and
shll
sub
dec
lret
push
push
ret
inc
pop
jg
dec
xor
xor
fcoml
shll
pop
add
sbb
pop
loopne
dec
sbb
scas
xchg
js
add
data16
cmp
popf
sbb
sbb
mov
sbb
sbb
add
test
push
lock
mov
ja
xor
sub
jl
jl
mov
test
aaa
cmpsb
hlt
bound
mov
out
sbb
jne
mov
int3
adc
dec
sub
or
inc
adc
or
sbb
fwait
pop
outsl
add
lret
pop
mov
aad
insl
cmp
push
adc
and
hlt
jmp
or
mov
cmpsl
cmp
xor
dec
pop
or
ret
inc
out
ljmp
jbe
and
incl
add
scas
loope
and
and
add
in
adc
cmpl
and
daa
and
inc
popa
pop
xor
cmp
sbb
test
aad
inc
ljmp
jnp
mov
inc
or
les
mov
push
dec
fbstp
mov
mov
aaa
mov
dec
add
inc
mov
fldl
push
jp
and
mov
lahf
fwait
add
pop
pop
xor
or
add
sub
cmp
jmp
sub
daa
aad
inc
jae
sub
dec
inc
loope
lods
sbb
loopne
cs
adc
cmp
aaa
inc
dec
lret
movsb
pop
adc
leave
xor
and
push
add
mov
pop
mov
push
insb
insb
out
inc
das
ds
lea
sub
rcll
adc
mov
addr16
in
ss
ret
inc
add
adc
add
push
sub
pop
leave
sbb
outsb
or
push
mov
jle
out
dec
push
sub
mov
mov
dec
or
adc
insl
loopne
dec
shlb
inc
push
ficoms
inc
inc
std
pop
lahf
and
dec
jae
jbe
fistl
and
xor
jmp
enter
cmc
jl
ja
mov
inc
mov
jno
pushl
add
push
add
rcr
pop
incb
mov
sarl
jb
mov
movb
jmp
cmp
jne
jl
fcoms
sbb
or
lret
das
xlat
les
add
idiv
mov
rorb
add
mov
sarb
pop
loop
sti
sbb
add
sti
push
sub
out
loop
dec
and
sbb
cmp
cs
push
lods
repz
fdivrl
cmp
sub
inc
inc
pop
mov
je
pushf
movsl
ret
cmp
mov
adc
out
sub
mov
nop
mov
out
inc
push
pop
outsl
or
sti
or
mov
push
rcr
ret
in
pextrw
sub
icebp
or
and
xchg
sarb
dec
inc
push
inc
in
sub
sbb
push
cli
add
and
mov
sbb
sub
dec
loop
arpl
adc
out
aad
outsl
add
in
lea
movsb
and
jmp
jge
pusha
push
mov
or
push
test
ljmp
adc
add
add
adc
xor
or
inc
pop
arpl
outsl
in
mov
mov
jnp
or
pusha
sti
lock
push
cmpb
lea
movsb
loopne
push
jp
jno
ljmp
cmp
push
xor
gs
pop
orl
lds
push
inc
inc
push
mov
push
mov
cmp
inc
nop
or
add
mov
push
imull
daa
or
inc
in
mov
dec
jne
addr16
and
ret
adc
cmp
jbe
inc
ljmp
add
cmp
sub
push
dec
divb
pop
ret
xchg
push
cmp
inc
jne
and
fstl
stc
rorb
sbb
and
push
and
push
add
add
push
push
sti
dec
mov
sub
pop
rclb
lock
in
dec
movsb
aaa
dec
cmp
push
pop
enter
fisttps
lock
inc
rclb
inc
cmp
test
adc
lock
mov
inc
and
shlb
cmp
push
xchg
or
pusha
push
dec
mov
gs
mov
dec
hlt
mov
mov
mov
jne
add
lea
inc
subb
push
pop
fisubrl
and
shr
fdivs
test
jb
aad
js
and
or
mov
popa
hlt
outsb
es
inc
jo
jl
mov
outsl
jae
jae
mov
add
pop
pop
adc
xchg
ret
cmp
cmc
add
je
out
mov
adc
rcrb
xor
out
rclb
xor
mov
sbb
mov
pop
inc
jo
xchg
ret
ds
mov
fldl
mov
in
daa
inc
add
mov
insb
sbb
sub
or
out
pop
pop
sbb
and
es
jnp
xchg
mov
dec
or
dec
cmc
push
inc
loopne,pn
cwtl
lea
inc
mov
movb
pop
mov
insb
xchg
add
xor
sti
icebp
pusha
or
dec
jmp
out
jae
jo
sbb
out
cmp
pavgw
adc
pop
stos
push
add
test
es
mov
loopne
or
negb
and
lds
stos
je
daa
inc
xlat
insb
push
cs
or
add
add
inc
outsb
and
push
push
testb
aam
add
mov
std
enter
arpl
mov
inc
ret
sub
pushf
jmp
pop
and
mov
jmp
pop
xor
mov
sbb
test
mov
das
push
sub
test
jg
or
add
cmp
push
inc
jmp
popl
clc
fimuls
pop
ficomps
pop
fdivs
mov
jmp
insb
mov
inc
push
dec
test
dec
out
loop
sub
push
pop
dec
cmp
adc
fucomip
mov
mov
sub
in
add
adc
das
sti
cmpb
pop
stc
jo
xor
sahf
push
mov
adc
scas
shlb
mov
mov
mov
cmp
and
cmp
inc
pop
xor
lea
ret
clc
pop
and
or
stc
sub
sub
or
mov
fstpt
dec
es
fcmovne
push
icebp
aas
push
stc
fstpl
fwait
jmp
inc
and
push
and
lret
data16
sbb
adc
cli
imul
test
insl
pop
sub
ss
pusha
rclb
sbb
xor
sbb
or
jmp
sub
mov
sub
add
sbb
in
lret
js
xchg
add
adc
aaa
pop
dec
push
cli
dec
clc
mov
sub
xchg
add
ret
pop
aam
mov
push
movsb
sub
mov
dec
int
cmp
fcmovb
sbb
push
add
push
and
jecxz
repnz
xchg
pop
dec
and
mov
out
in
xorb
imulb
push
and
int
pop
cmpl
imul
xor
mov
inc
dec
jmp
aas
sub
rclb
sbb
add
mov
ds
int3
in
sbb
and
pop
rcrl
add
popa
out
pop
sbb
add
pop
jno
dec
xchg
shl
xchg
lcall
shll
test
adc
xor
jo
sub
pop
inc
dec
cmp
ror
mov
into
push
push
jne
cmpsl
mov
or
mov
popa
bound
mov
bound
and
xor
aas
push
pop
or
push
ss
loopne
ds
inc
in
loopne
incb
or
cmp
sbb
cmpsl
fwait
mov
cmp
cli
test
mov
mov
adc
test
test
les
imul
inc
insb
or
mov
cmc
sub
mov
sbb
cs
pop
and
or
cli
jmp
and
or
loop
inc
pop
push
and
je
xchg
insb
test
push
lock
adc
mov
mov
arpl
push
lods
orb
outsl
je
sub
mov
cmp
data16
lock
adc
add
cmp
cmp
and
or
push
clc
cmp
or
jecxz
cmp
sbb
scas
pop
push
or
add
jo
mov
sub
adc
std
mov
xchg
sub
push
inc
je
test
cmp
xchg
aaa
bound
and
xor
inc
inc
xor
mov
adc
push
and
mov
push
scas
notb
cmp
adc
mov
mov
insl
daa
xchg
sub
orb
jo
cmpsb
inc
add
daa
dec
mov
fwait
fwait
jo
dec
mov
repz
or
lds
inc
mov
leave
faddp
jno
nop
pop
ret
les
inc
push
adc
cwtl
test
call
movsb
imul
lds
lret
andb
pop
out
shlb
push
lods
addr16
das
add
push
xchg
or
and
add
cmp
add
subl
pop
es
mov
test
inc
pop
mov
hlt
add
push
or
popa
jl
mov
inc
cmp
pop
push
stos
fbstp
add
insb
cld
add
mov
inc
sbb
sub
mov
fsub
jecxz
push
cmp
inc
jmp
dec
inc
add
push
or
mulb
lahf
dec
push
cmp
or
xorl
sbb
cmp
xlat
je
in
add
insl
hlt
imul
xor
inc
mov
push
add
fildl
and
addr16
cmp
or
loopne
adc
rcrb
cmp
ror
pop
sub
mov
mov
mov
add
cwtd
pushf
pop
lea
adc
dec
pusha
inc
pop
sar
adc
adc
jge
add
pop
jecxz
lcall
pop
js
rcl
insl
shrl
into
pop
ss
or
adc
sbb
and
dec
pop
xor
xchg
push
and
aas
adc
aas
mov
sub
or
push
jp
insl
andl
sbbb
sbb
jmp
mov
pop
pusha
xchg
ja
lcall
mov
outsb
cwtl
cmpsb
adc
pop
or
inc
pusha
adc
pop
ret
pop
mov
adc
dec
out
pop
jmp
cmp
je
mov
test
mov
xor
jbe
push
adc
sbb
and
push
or
sub
nop
lret
pop
je
and
lahf
push
sarl
pop
je
cmp
or
jmp
cmpsb
scas
sbb
xchg
sub
test
mov
mov
cli
andb
rol
cmpsb
push
push
adc
fwait
rolb
xchg
insb
out
mov
fs
push
jl
pop
mov
mov
dec
cmp
pop
inc
in
mov
inc
xchg
push
in
mov
test
sahf
sub
lahf
jecxz
scas
popf
push
js
pusha
pop
inc
pop
push
punpckhbw
mov
push
pop
mov
sub
sub
sbbl
test
hlt
mov
arpl
movl
push
xor
fs
sub
lret
cmc
pop
cmpsl
push
inc
cmp
arpl
repz
shrl
mov
xor
stos
iret
mov
push
fdivs
insb
and
aam
add
sbb
sbb
sbb
cmp
cmp
negl
daa
mov
shlb
mov
mov
out
and
push
adc
inc
inc
mov
clc
test
and
movsl
nop
adc
sbb
cmc
jp
js
pusha
shll
cltd
mov
jg
add
add
xchg
mov
adc
xor
testl
adc
lock
lret
adc
push
addl
pop
in
jnp
cmp
cmp
insl
mov
stos
scas
cmp
inc
cmp
mov
cmp
inc
mov
xor
test
lods
out
cwtl
addr16
jnp
lea
or
mov
sub
xlat
rolb
cmp
je
mov
push
push
jecxz
inc
and
jae
mov
orl
popa
fnsave
sub
push
dec
je
inc
arpl
sbb
pusha
inc
movl
jo
inc
push
add
pop
pop
pop
sbbl
adc
push
pop
add
jp
jmp
addl
imul
inc
add
mov
mov
ja
add
add
xor
adc
cwtl
cmp
mov
push
add
into
int3
aaa
adc
shlb
fisttpl
or
insb
xor
lahf
xchg
mov
sbb
fs
mov
cs
test
gs
cmpl
jmp
xor
xor
and
push
lahf
cmp
hlt
push
test
mov
insb
xlat
mov
ret
lds
sbb
inc
or
sysexit
push
cmp
aam
bswap
sti
lds
fstpt
aaa
push
cmpsb
or
inc
cmp
les
repnz
adc
jmp
fdivrs
push
and
add
mov
push
outsl
mov
loope
adc
inc
push
data16
sahf
cmpl
in
cs
call
ds
push
mov
and
repz
mov
or
pusha
add
into
add
cmp
sarl
int3
in
divl
inc
pop
sbb
int3
shrb
in
jo
testl
into
adc
push
rorl
xchg
push
ret
fldl
sbb
xchg
clc
or
fs
inc
mov
dec
jle
int3
push
xor
mov
push
arpl
pop
push
std
mov
inc
mov
and
cmp
pop
cmpsl
jg
dec
sbb
out
cmp
jne
out
adc
scas
fsubr
and
loopne
in
in
clc
jne
sub
dec
pop
and
and
test
xchg
movsl
jbe
leave
mov
test
jne
in
loopne
mov
lods
pop
push
das
lcall
push
out
dec
sub
movsb
xor
sub
daa
jne
adc
cmp
jne
cs
lds
and
mov
inc
dec
push
push
dec
dec
pushf
mov
icebp
inc
mov
xchg
test
pop
mov
adc
and
push
mov
test
pushf
push
or
jmp
pushf
jb
inc
jmp
cmp
jne
and
popa
ljmp
clc
in
add
push
mov
js
inc
pusha
push
cmp
inc
mov
or
nop
pop
jecxz,pt
lret
inc
add
out
loopne
add
and
out
mov
cmpb
push
test
pusha
add
inc
fsubrs
test
mov
cld
cmp
add
xchg
inc
rclb
cmpsl
xchg
or
cmp
dec
mov
push
adc
ja
adc
adc
sar
pop
or
mov
pop
or
outsl
cmp
dec
mov
dec
scas
xorb
imul
and
adc
pop
pop
add
cli
push
and
xchg
loopne
mov
sbb
pop
xchg
and
xor
mov
push
sbb
inc
dec
push
insl
das
pop
dec
xor
or
add
push
inc
loopne
push
roll
mov
lret
inc
fcmovnu
mov
dec
push
xchg
dec
adc
add
push
inc
or
xchg
in
cmpsl
das
push
jno
in
outsb
test
cwtl
sbb
stos
mov
pop
jmp
cmp
and
or
dec
sbb
mov
add
orl
dec
push
mov
push
add
xor
sti
push
dec
inc
mov
adc
sbb
dec
sbb
enter
rcrb
arpl
dec
lds
add
pop
nop
inc
cli
cmp
mov
outsl
push
push
sti
ffree
or
popa
pop
adc
add
dec
insl
push
or
ret
mov
adc
add
js
cmpsl
divl
fsubs
ret
sub
ds
add
mov
mov
or
loope
enter
add
add
mov
sbb
dec
fsubs
mov
inc
sub
ljmp
or
sub
adc
and
pop
into
mov
push
xchg
lea
inc
jp
mov
pop
dec
fldl
outsl
pusha
sbb
js
int3
test
shr
add
aam
scas
lods
sbb
mov
xchg
subb
movsb
aaa
pop
lahf
xchg
jne
mov
lret
mov
inc
jle
xor
or
adc
nop
cld
mov
add
push
jno
sub
add
or
dec
adc
lea
mov
les
add
test
mov
pop
in
push
mov
sub
push
inc
and
test
rorb
adc
adc
jne
pop
mov
mov
mov
push
cmp
mov
inc
cmp
cmp
add
or
ret
shrl
mov
jns
adc
inc
dec
cmp
fnstsw
pusha
or
dec
or
shlb
out
aad
sahf
repz
mov
orl
pop
xchg
cs
add
xor
xchg
mov
jmp
sbb
je
in
add
cmp
mov
add
mov
lods
inc
sbbl
push
sarb
in
jl
mov
nop
add
pop
ret
ja
ss
lcall
pop
in
daa
or
cmp
sub
inc
add
add
rorl
add
cmp
xor
sbb
jnp
sub
ret
xor
push
fstl
pop
addb
ret
add
adc
xchg
ja
aaa
rcrb
xchg
jge
adc
lahf
fs
or
ret
pop
je
mov
xor
add
dec
push
and
inc
jns
or
cmp
mov
or
and
sbb
jecxz
cmp
xlat
mov
rorl
pop
cmp
test
push
test
cmpsl
int3
xchg
outsl
call
push
fdivs
add
mov
adc
push
adc
sbb
mov
mov
inc
dec
xor
inc
scas
cmpsl
sbb
cmp
add
mov
mov
or
icebp
dec
int
loop
out
lock
or
je
jl
imul
mov
push
pop
jne
mov
je
mov
imul
cs
push
add
add
sbb
jle
adc
test
and
movsb
es
push
push
sbb
mov
jo
add
jo
and
or
pop
push
mov
push
and
idivb
dec
adc
subb
movl
and
pop
cmp
xchg
xchg
jg
enter
sub
cmpsl
test
adc
test
dec
aaa
scas
pop
xor
or
pop
je
mov
movb
arpl
inc
imul
cmpsb
inc
add
push
in
add
cmp
mull
mov
adc
mov
jecxz
daa
mov
mov
js
xor
scas
add
or
mov
mov
xor
leave
pop
loopne
cs
je
mov
push
mov
adc
mov
push
jo
aas
cmp
xadd
add
cmp
pop
xchg
mov
mov
mov
jb
pop
pop
pop
or
imul
cmp
and
fdivrs
data16
mov
lahf
push
orl
pop
es
sbb
loopne
jo
pop
adc
out
lea
or
ror
mov
dec
imul
mov
push
inc
or
pop
xchg
mov
daa
stos
mov
in
nop
xor
cmp
js
add
cmpsb
out
or
or
ror
std
xchg
test
mov
leave
je
mov
cld
xchg
dec
mov
adc
leave
pop
sbb
mov
inc
xchg
dec
jo
dec
js
add
xor
dec
sbbb
mov
or
ret
leave
movb
fimuls
pop
push
dec
and
rclb
lods
add
or
xchg
jle
dec
test
popf
add
cmpb
and
xorb
adc
jecxz
add
mov
lret
aas
jmp
les
aad
push
jo
push
and
inc
sub
std
lods
icebp
fstl
mov
incl
cld
and
xlat
xchg
imul
call
or
push
xor
fmuls
cld
add
add
push
pop
or
loop
mov
fistl
mov
sbb
outsl
add
mov
and
xor
inc
sbb
or
cmp
je
int3
cmp
frstor
out
push
js
add
inc
mov
mov
pop
jo
adc
add
ret
je
frstor
push
xlat
and
jne
out
sarl
test
adc
divl
mov
mov
cmpsb
pop
outsl
repz
ficompl
mov
mov
or
shlb
cld
add
push
popa
or
sub
push
xor
cltd
inc
mov
test
hlt
sub
inc
and
cwtl
dec
enter
sbb
jne
psllw
cmp
test
mov
jp
ja
mov
add
sub
or
mov
test
cld
outsb
jecxz
icebp
jae
adc
inc
sahf
rorb
insl
jb
or
xor
and
test
hlt
cmp
shr
iret
rcr
or
pushl
fmuls
push
js
push
sub
push
mov
jbe
stos
je
ret
cmp
or
into
mov
orps
imul
mov
mov
add
add
inc
outsb
aas
push
lcall
inc
repnz
sahf
cmpl
dec
or
mov
mov
hlt
lock
ja
ljmp
cs
pop
in
call
popf
aam
adc
adc
jle
inc
mov
add
outsl
dec
sbb
sbb
xchg
js
stos
mov
inc
fcmovu
inc
loop
add
or
jne
adcb
add
flds
mov
call
mov
xchg
add
dec
and
inc
or
loope
mov
int
insb
daa
sub
aam
ja
fwait
lea
fcom
push
fucomp
adc
or
jle
incl
outsb
add
outsb
or
push
inc
scas
sub
inc
xorb
clc
adcl
sbb
push
mov
and
cmp
adc
and
addr16
shrb
sub
or
xchg
add
mov
pop
add
test
push
xor
je
cmp
push
xor
push
xorb
ljmp
mov
jno
mov
push
adc
pushf
push
sbbl
cmp
add
sub
neg
pop
lea
pushf
cmp
out
and
mov
jmp
sub
mov
sbb
cmp
jge
mov
dec
cmp
hlt
test
add
in
daa
js
jp
inc
push
daa
adc
insl
loopne
push
or
cmp
inc
mov
inc
mov
push
ja
dec
and
cltd
dec
dec
subb
popa
inc
sub
or
push
xchg
inc
nop
mov
dec
jmp
sbb
or
rcrb
rolb
mov
shlb
inc
scas
lret
push
scas
js
mov
ret
cmp
push
testb
outsb
xchg
icebp
mov
inc
mov
or
xlat
push
aaa
call
inc
loopne
pop
ja
out
in
or
inc
in
push
xor
addl
xor
movsl
sub
imul
les
push
add
leave
call
jmp
mov
bound
in
outsl
or
dec
add
cmp
mov
or
jne
aaa
adc
es
xlat
jo
add
in
je
mov
sub
jb
mov
pop
and
sub
push
dec
dec
xor
lods
push
adc
test
sti
and
fldl
or
sbb
xor
jbe
popf
pushf
mov
xor
sbb
das
loop
aam
int3
rolb
mov
xchg
push
cmp
add
and
push
leave
or
adc
mov
push
fsubr
push
inc
inc
movups
fadd
loopne
mov
xchg
sbb
sub
aas
aad
push
add
mov
int3
push
pop
cli
std
inc
sbb
lea
stos
jle
adc
in
inc
mov
fsubrs
ret
mov
adc
mov
and
pop
insl
fldt
les
adc
and
add
fwait
hlt
arpl
into
sub
push
mov
jmp
push
xchg
push
push
sbb
scas
sti
call
add
lock
adc
std
adc
js
jne
pop
push
imul
stos
js
call
and
push
mov
sub
adc
mov
add
sti
lock
xor
loopne
clc
mov
jnp
iret
mov
sbb
push
pop
cmp
dec
dec
xor
push
js
adc
sbb
push
adc
add
dec
es
add
imul
and
cli
xchg
pop
mov
xlat
xchg
add
outsl
mov
push
push
mov
popf
les
shlb
jnp
mov
sbb
add
rcrl
dec
into
adc
cmp
sub
movsb
xchg
clc
push
inc
or
fadds
mov
dec
shrb
call
leave
jecxz
push
or
inc
jmp
imul
xchg
pop
xlat
cltd
lock
sti
xor
inc
or
push
ror
test
jo
inc
in
cs
xchg
sarb
mov
jl
mov
es
scas
inc
adc
cwtl
inc
dec
inc
out
cmpsb
push
sub
xor
jge
je
push
add
ret
dec
imul
pushf
mov
outsl
push
cmp
cmpsb
aam
push
add
insb
jecxz
scas
add
rorb
adc
daa
ucomiss
push
sub
sub
dec
dec
cs
or
or
ret
and
notb
push
fstpl
inc
xor
jmp
dec
popa
or
inc
sbb
sub
add
roll
or
or
xor
mov
pop
jmp
sub
push
add
push
cmpsb
xchg
adc
or
add
addr16
push
add
cmpsb
adc
cld
and
add
ss
or
xchg
sarl
pop
adc
mov
cmpsl
dec
dec
dec
lods
push
push
stos
daa
lock
cmpb
push
mov
jae
addr16
int
xchg
inc
fimuls
inc
inc
stc
fiadds
imul
and
xchg
inc
sub
addr16
rorb
sub
dec
dec
inc
mov
or
aas
lahf
add
push
or
adc
jle
dec
ret
push
add
lret
sbbb
cmpb
and
test
xchg
clc
adc
adc
cmp
inc
ja
adc
mov
dec
test
jecxz
jle
xchg
pushf
jne
jae
mov
ljmp
or
adc
es
sub
ljmp
or
flds
fsubrl
add
outsb
fidivrl
or
sbb
cmp
stos
fsubp
inc
dec
scas
pop
mov
pop
add
repnz
sub
icebp
in
aad
fcoms
jle
push
jmp
mov
andb
adc
or
adc
mov
lock
sbb
push
cmp
adc
sbb
sbb
into
push
pop
mov
xor
mov
sub
push
xchg
ljmp
pusha
mov
sbb
rorb
inc
mov
mov
or
or
dec
test
add
jmp
mov
mov
jne
clc
jbe
test
sbb
rclb
jo
dec
sbb
pop
jmp
mov
shlb
xor
xor
idivl
push
sub
add
popf
mov
test
popa
cld
mov
sahf
mov
jne
into
pop
mov
xor
roll
jo
das
mov
cmp
sub
pop
fwait
cmp
mov
or
es
sub
dec
notl
in
push
and
mov
aad
xor
fbstp
add
push
test
mov
insl
cmpsb
adc
add
adc
inc
andl
cmp
push
js
jne
cs
sbb
jmp
popf
push
arpl
lock
mov
xlat
sbb
into
push
dec
jp
xor
xor
cmpsl
sarb
add
testb
data16
movsl
roll
adc
adc
shrb
add
data16
adc
xor
aam
in
or
and
or
sbb
jno
push
inc
push
iret
shll
scas
adc
adc
sub
or
xor
insl
std
dec
add
mov
call
sbb
pop
rcl
movsl
mov
cwtl
push
xlat
fst
dec
inc
mov
jl
addr16
mov
loopne
push
add
aam
sahf
mov
inc
or
call
dec
inc
jle,pn
push
dec
push
cmp
or
pop
jo
or
or
fwait
jne
mov
sahf
test
movsl
mov
leave
inc
ret
pop
movsl
mov
adc
pop
jno
pop
leave
xchg
sbb
fadds
pop
in
mov
dec
sahf
and
push
sub
sbb
push
movl
incl
stc
sub
jnp
sbb
adc
mov
clc
xchg
push
je
movaps
aam
pop
push
rcrb
dec
or
mov
loop
loopne
cwtl
cmpsb
mov
xor
and
jns
dec
call
pop
dec
rolw
outsb
sbb
std
aam
movsl
pop
aam
xchg
pushl
xor
inc
cmp
and
popa
nop
push
xor
popf
js
xchg
inc
stos
jmp
leave
dec
adc
out
sbb
out
cmovb
aas
add
xchg
jne
adc
or
adc
lcall
mov
pusha
and
fsubrl
adc
and
xchg
das
dec
push
into
les
iret
fcoml
adc
mov
inc
orb
dec
pop
sub
ret
dec
mov
scas
mov
cmp
fstpt
je
push
data16
cmp
in
or
adc
adc
ss
jl
push
scas
dec
jmp
dec
cld
dec
adc
xor
dec
es
je
loope
jno
mov
bound
jne
testb
cs
rolb
testb
pop
push
add
or
add
fs
gs
stos
fstpl
xorb
nop
fwait
arpl
stos
mov
adc
pop
pop
insb
and
sti
or
mov
jmp
fs
jo
sub
popa
pusha
out
and
push
pop
xorl
pop
inc
jge
mov
aam
lds
fldl
mov
mov
xchg
mov
push
rorl
repz
mov
movsl
push
aad
pop
icebp
add
inc
mov
mov
xchg
adcl
jg
mov
pop
fildl
adc
xchg
pushl
and
push
adc
cmpsl
pop
push
adc
mov
loopne
jno
pop
dec
push
sahf
movl
scas
xadd
or
ret
push
das
into
ret
adc
das
pop
cmp
lahf
xor
inc
adc
mov
pop
cmp
adc
xor
add
xchg
or
sbb
outsl
cmpsl
les
adc
xchg
dec
pop
sub
nop
push
sbb
mov
cld
ljmp
inc
or
pop
adc
lea
sbbb
or
cmp
lea
mov
dec
lock
and
or
push
sub
pop
jno
mov
cwtl
hlt
or
dec
push
pop
sub
sub
add
push
cld
or
dec
shlb
inc
cmp
movsb
push
rol
push
out
add
sub
push
inc
add
int
pop
or
cmpb
and
xor
sub
xchg
xchg
test
xor
push
inc
xchg
mov
aaa
xor
inc
lods
fildll
mov
je
std
push
xor
sbb
frstor
sbb
fs
dec
adc
jge
dec
subb
incb
std
and
lea
mov
push
cmpb
or
dec
ret
inc
call
ret
pop
inc
and
or
and
adc
jo
or
and
imul
cmp
xor
or
sub
push
xor
mov
pop
out
insb
test
xchg
leave
inc
jb
aas
cmp
imul
inc
mov
xor
rol
sub
and
mov
sbb
cmp
cwtl
push
out
test
mov
movsb
mov
sbb
ja
popa
ja
daa
jno
jp
je
jmp
push
adc
cmp
loopne
cmpsl
xor
mov
jb
ret
rclb
cmc
or
dec
es
mov
fldl
stos
fcompl
adc
ss
adc
inc
and
mov
aam
mov
xor
cli
scas
enter
enter
mov
ljmp
cli
adc
les
mov
jmp
aaa
pop
js
add
push
add
insl
cmp
push
add
ljmp
lock
int3
or
and
sub
sub
adc
mov
xor
and
xor
adc
shlb
sub
dec
or
add
push
testb
or
bnd
in
aam
int3
cmp
xor
mov
shrb
mov
sbb
adcb
leave
mov
or
call
dec
ss
dec
je
push
dec
out
fldl
insl
mov
sub
pop
sub
aad
mov
sub
cmp
js
inc
dec
or
leave
mov
mov
mov
push
sub
hlt
and
aad
rcl
lret
xchg
xchg
inc
inc
sbb
xor
cmp
adc
mov
aaa
test
xchg
or
jne
movb
fmuls
cmp
adc
leave
mov
bound
in
xor
mov
dec
cmpb
jo
sahf
and
lea
push
inc
sbb
xor
dec
cmp
rorl
inc
movl
or
xor
cmpsl
or
dec
lds
xor
adc
mov
adc
mov
push
xchg
cmpsb
adc
sbb
fstpl
hlt
mov
inc
mov
push
xor
jge
js
pop
or
sbb
incb
js
jmp
call
rcrl
mov
es
add
sub
subl
mov
add
inc
ret
adc
lea
pop
jle
sbb
cltd
loop
rcrb
xorb
mov
push
loope
in
imul
lret
push
mov
ja
in
add
sub
inc
pop
mov
pop
sub
out
cmp
test
jo
sti
inc
movb
mov
lea
into
adc
add
loop
cmpl
adc
xor
push
jae
sbb
lods
jbe
fisubl
mov
shlb
addr16
adc
jp
popf
gs
mov
test
scas
jg
sbb
cmc
mov
ret
add
hlt
pop
sbb
shll
rcrl
hlt
adc
add
into
mov
or
or
pop
nop
jmp
movsb
aam
jbe
pop
jge
addr16
mov
jmp
outsl
sbb
mov
pop
and
bound
add
js
out
out
mov
add
push
jno
add
add
push
sbb
cmc
mov
pop
mov
aaa
loop
cmpl
mov
adc
adc
cmpsl
jb
int3
aam
in
fsubrs
popa
cmpsl
and
push
into
pop
mov
jmp
push
sti
loope
fcomip
push
push
sbb
and
daa
aaa
push
scas
add
dec
mov
push
inc
setg
jmp
inc
add
cmpsb
mov
adc
push
dec
cmp
setle
cmp
shll
inc
dec
inc
inc
pop
and
sar
push
xor
xor
cwtl
repnz
mov
mov
jl
stos
aad
icebp
fwait
andb
ret
inc
popa
ljmp
or
and
and
stos
in
daa
test
mov
mov
out
add
dec
jmp
stos
scas
pop
mov
xchg
and
dec
jae
inc
enter
push
push
int3
in
sub
aaa
inc
add
mov
xor
outsl
sub
add
inc
adc
fildll
nop
subl
mov
adc
in
jmp
aaa
or
jns
hlt
jmp
xorl
sbb
shrl
mov
cli
rcl
ret
fmuls
push
bound
call
cmp
std
add
mov
popf
inc
adc
inc
xchg
gs
ljmp
ds
inc
xchg
or
cmc
push
adcl
push
jbe
jne
icebp
jbe
movsl
fbstp
add
aaa
jl
sbb
add
push
xchg
sub
or
xchg
fldcw
xchg
pop
or
add
out
imul
pop
add
push
mov
jnp
clc
push
inc
lock
scas
inc
and
out
sahf
cmpsl
cmp
add
sub
jmp
or
jns
add
ds
sub
push
or
or
mov
ds
xor
add
lea
cmp
push
mov
lret
data16
add
lret
lds
js
xor
shr
popa
and
inc
fsubr
push
les
andps
push
lods
movsb
cs
push
out
mov
mov
cli
add
cmp
repz
inc
push
dec
loopne
out
lea
sub
dec
add
or
aas
adc
inc
cmp
and
add
pop
push
and
test
mov
test
addl
and
popf
pop
inc
gs
out
sbb
subl
adc
sbb
cmp
jne
loope
js
and
sbb
jmp
das
fiadds
push
insb
xchg
jne
mov
cmpb
push
enter
cld
in
int3
lods
daa
ficoms
adc
or
dec
or
push
cmp
out
xchg
cmp
inc
roll
add
leave
inc
notb
jge
adc
sbb
insl
lret
inc
xlat
shrb
jno
sarl
iret
mov
test
int
jne
push
lock
leave
inc
push
hlt
push
imul
testl
jne
jp,pt
dec
and
jne
aaa
or
push
and
mov
mov
cmp
sub
insb
insl
mov
mov
sub
out
mov
mov
jnp
popa
jne
push
pushl
xlat
inc
cmp
test
xlat
xor
icebp
fdivrs
mov
pop
sub
sbbl
adc
xchg
sub
rcll
cmp
sub
pop
xchg
push
ljmp
pop
fisttpll
push
pop
fmull
adc
add
shll
push
out
lds
cmc
andb
ret
xchg
cmpsb
cmp
mov
aas
sub
inc
mov
jg
gs
pusha
nopl
and
push
jnp
cmpsl
mov
mov
in
sbb
test
lods
call
push
incw
std
or
sbb
or
and
adc
lcall
jmp
nop
dec
add
inc
cwtl
jecxz
nop
mov
and
dec
push
sub
cmp
and
call
xor
sub
sub
shl
enter
push
stos
aad
push
dec
xor
add
push
add
push
call
adcl
or
adc
into
sbb
hlt
es
test
sub
icebp
fisttpll
or
clc
mov
cs
fwait
test
sbb
rcrl
mov
and
inc
dec
jne
push
rcr
mov
push
dec
push
adc
mov
mov
orl
pop
mov
adc
xchg
xor
and
sbb
jg
xlat
or
loop
out
fsubrp
inc
pop
xor
cltd
xor
jbe
xor
dec
mov
or
inc
insb
into
jg
add
mov
jecxz,pn
fnstenv
push
fsubl
sub
xor
adc
push
pinsrw
or
inc
add
inc
and
and
cltd
and
xchg
jmp
sbb
push
dec
movsl
hlt
mov
aaa
dec
insb
pusha
shll
test
add
lcall
je
mov
mov
insl
pop
sar
pusha
dec
or
xor
jmp
out
imul
xchg
mov
imul
sbb
xor
dec
ss
add
adc
mov
mov
aas
jmp
lock
cmp
or
inc
cmp
je
dec
mov
lods
test
int3
xor
jne
arpl
and
push
cmp
inc
shl
jle
lds
push
xlat
sub
sar
push
and
add
push
or
pushf
push
sbbb
testl
daa
xchg
jne
mov
call
je
inc
sub
ret
sbb
mov
mov
or
xor
popf
adc
push
add
pop
leave
insb
fs
orl
add
inc
ss
and
sub
imul
cmp
xorl
das
push
push
cltd
rolb
sbb
mulb
arpl
or
pop
lea
in
pop
push
pop
push
add
dec
sub
dec
add
xchg
das
adc
or
cmpb
dec
mov
or
inc
test
dec
adc
and
test
jle
jl
push
mov
or
inc
rcll
xchg
push
inc
in
dec
jo
sub
mov
cmp
inc
lds
outsl
sub
xor
push
mov
dec
addb
sub
js
sbb
in
addr16
incl
jo
push
popa
clc
cmp
jp
cmp
cwtl
mov
xor
testb
add
push
sub
hlt
and
sti
or
loopne
add
inc
ljmp
inc
sti
jle
test
or
aaa
hlt
out
insl
lea
mov
outsb
jae
pushf
mov
pop
jo
xchg
ds
sub
test
or
mov
push
inc
je
and
popf
mov
mov
mov
push
ficompl
add
data16
add
out
add
inc
sub
mov
add
and
sub
push
or
push
or
xchg
adc
pop
jo
cmc
xchg
inc
push
mov
xor
notl
and
cmp
push
jecxz
cs
ds
push
sbb
cmpl
dec
or
adc
mov
mov
in
push
and
cmp
stos
test
and
mov
insb
pop
sub
mov
iret
and
jb
movsb
adc
cmp
insl
pop
cmp
cli
sbb
les
gs
or
pusha
mov
or
fistps
rclb
xor
outsl
mov
stos
adc
faddl
or
cmp
add
mov
xchg
or
sub
sbb
mov
cmp
jg
aad
xor
cli
push
inc
popa
jne
jb
xchg
lea
lret
push
pop
inc
test
imul
add
aam
sbb
mov
clc
add
stc
mov
iret
adc
cmpl
daa
ret
fsubrl
jle
mov
mov
in
sbbl
cld
xor
clc
lock
pop
fdivs
jmp
sub
xlat
imul
lods
cmc
xchg
cs
pop
mov
xor
sti
cmp
cwtl
push
roll
sbb
je
std
sti
jmp
sub
push
lcall
popl
inc
in
inc
pop
subb
notl
outsb
mov
orl
fdivrl
jo
sbb
or
shrb
repz
cmp
pusha
aaa
andl
sub
test
dec
test
xchg
cmp
or
shlb
rcrl
adc
ret
and
into
cmc
int3
out
lea
and
lods
lock
inc
loopne
or
sbb
out
and
or
loope
lds
xlat
mov
nop
cmpl
pop
xor
clc
sbb
xchg
adc
adc
popf
or
ret
pop
sub
adc
das
test
inc
adc
es
pop
or
push
or
dec
add
je
xor
cmpsb
dec
int
xchg
dec
lds
ljmp
mov
mov
pop
sbb
je
sbb
sbb
and
std
and
cmc
bound
inc
or
sbb
movsb
xor
mov
es
aaa
shl
dec
inc
loope
jmp
pushf
push
sub
and
jl
inc
nop
incb
adc
xlat
xchg
lea
mov
je
aad
cmp
faddl
cmp
test
inc
std
js
jo
and
js
aaa
jne
mov
mov
lods
rolb
out
mov
ret
mov
add
lahf
movsb
fwait
mov
sbb
push
or
xor
pop
mov
ss
cmp
adcb
xor
clc
cltd
scas
push
add
push
inc
mov
cmp
jg
stos
fstpl
jo
add
lods
xchg
add
xlat
hlt
call
dec
and
xlat
nop
push
adc
push
inc
inc
imul
mov
jns
test
dec
mov
hlt
xor
lea
adc
dec
ret
sbb
dec
cs
add
lock
mov
push
and
cmp
xor
cmpl
sub
mov
shll
dec
out
sbb
shll
mov
xor
dec
inc
adc
sub
cltd
cwtl
ljmp
lea
gs
clc
cmp
inc
pop
xor
mov
adc
mov
jmp
call
inc
push
inc
xor
dec
inc
mov
jno
lcall
int
arpl
inc
adc
inc
cli
orb
pusha
mov
adc
jo
or
push
cmp
call
pop
adc
je
push
pop
lock
dec
dec
ret
dec
add
jo
or
adc
or
jbe
popa
int
popl
inc
pushf
out
pop
insb
negb
xchg
ss
pop
inc
test
and
test
jno
cmpl
test
add
jno
cmp
cli
adc
add
insb
xchg
cli
js
sub
jo,pn
mov
push
mov
loop
cld
ss
shr
dec
imul
ljmp
pop
cmp
and
inc
inc
or
fidivrs
and
push
imul
mov
cmp
mov
ja
mov
mov
xchg
mov
test
push
rcll
push
aaa
mov
jb
add
jmp
mov
mov
loop
or
add
sbb
xchg
mov
imul
add
push
shr
xor
sub
adc
jae
pop
sbb
jecxz
sbb
mov
sbb
rol
sbbb
or
xor
test
add
cld
pop
lods
arpl
mov
lea
mov
add
add
inc
inc
fstpl
pushl
sub
pop
sbb
mov
scas
adc
mov
push
ficoml
xchg
or
add
mov
pop
or
adc
shll
inc
add
cmp
sub
int3
add
out
das
cld
and
aam
mov
or
je
cmp
fnsave
dec
je
daa
insl
xor
aaa
lock
je
imul
or
inc
xor
sbb
daa
or
out
adc
push
adc
push
xchg
cmp
xor
or
inc
sbb
cmp
push
pop
imul
cwtl
push
sbb
rcll
mov
xlat
shlb
loopne
or
cmpb
pop
xchg
push
push
push
push
rcll
push
xchg
cmpsl
push
and
sbb
inc
daa
sbb
int3
pop
sahf
jge
and
outsb
notl
mov
sub
pop
adc
xchg
add
xor
push
cmpb
je
out
inc
pushf
xchg
xor
or
lds
jno
mov
adc
inc
cmp
std
sub
movsl
xchg
dec
aad
cltd
insb
mov
inc
mov
into
cs
das
cmpsl
fsubs
push
imul
push
into
inc
and
jnp
xor
mov
loopne
mov
xchg
push
sbb
fldenv
test
jne
inc
nop
roll
and
jb
or
dec
or
out
fmulp
xor
adc
mov
adc
rcrb
shlb
inc
push
push
pop
mov
and
lcall
nop
or
outsb
xchg
pop
test
movsl
shr
cmpsl
incl
loope
or
and
arpl
sub
in
pop
adc
pop
jmp
lock
test
mov
inc
dec
add
inc
stos
sub
mov
push
negb
in
adc
and
movsl
aaa
fs
cld
dec
repnz
mov
adc
jo
add
cmp
daa
icebp
xor
adc
scas
add
repz
inc
inc
imull
lock
push
inc
jmp
cmc
jo
xchg
mov
jecxz,pt
lock
add
inc
adc
sbb
xchg
xchg
int
repz
sbb
add
inc
lcall
aam
and
xorps
sub
cld
out
movsb
pop
add
add
dec
ret
fadd
xchg
fisttpl
add
jp
rorb
clc
je
sbb
pop
aaa
inc
aas
test
or
fsts
shll
xchg
push
adc
dec
fists
adc
roll
jp
loope
push
fs
add
xor
mov
inc
lahf
mov
mov
xchg
push
and
or
and
mov
stos
adc
in
and
push
es
xchg
movsb
dec
daa
pop
daa
ss
add
daa
push
lds
mov
loopne
hlt
pusha
push
dec
nop
dec
adc
enter
daa
push
and
add
outsb
test
movsl
shr
push
dec
jo
decb
xor
lret
or
xchg
sbb
scas
sbb
mov
mov
imul
popf
xor
cmp
mov
scas
arpl
je
sub
mov
dec
jp
shl
add
push
add
fdivrl
push
xchg
or
dec
inc
add
pop
xorl
push
sti
daa
and
out
cmpl
gs
mov
lret
sbb
shlb
add
scas
fstl
int3
or
dec
rclb
lods
shlb
lcall
push
adc
xor
mulb
dec
sub
xchg
or
ret
adc
fbstp
adc
pop
out
pop
inc
mov
aaa
aas
cmp
xor
xchg
ja
add
mov
jns
sti
and
add
repnz
or
js
sbb
add
fwait
dec
mov
test
mov
lcall
push
sub
or
in
je
movswl
inc
push
icebp
fbstp
sbb
jle
add
ss
mov
sub
xor
adc
and
call
sbb
pop
jb
cwtl
fs
scas
in
mov
or
push
inc
push
call
stc
sbb
mov
daa
add
fmul
dec
jl
adc
inc
loop
mov
and
repz
outsb
xorl
pop
add
adc
shl
dec
shll
test
dec
loope
leave
sbb
call
adc
cmpsb
into
cmpsl
push
push
pop
jno
arpl
cmc
mov
pusha
add
xchg
test
cmpsl
dec
nop
loopne
xlat
shl
clc
loopne
xchg
jle
je
mov
call
popf
inc
cmp
and
xor
lret
in
pop
and
and
je
faddp
les
and
movsb
sarb
int3
bound
mov
popf
sub
ljmp
dec
andb
pop
out
inc
sub
rcrl
jb
adc
in
xchg
mov
mov
bound
add
icebp
aaa
or
adc
lret
rcrl
stc
mov
mov
push
out
and
ret
pop
adcb
aas
mov
mov
push
hlt
mov
xorb
adc
pusha
inc
push
sarb
mov
outsl
lods
add
call
in
cmp
push
std
pop
sub
daa
mov
in
dec
or
mov
lahf
jne
jge
jne
jnp
fisubs
xchg
pop
push
mov
add
clc
test
sbb
or
ret
push
mov
aam
add
shlb
push
adc
inc
into
lcall
mov
dec
dec
out
bound
push
dec
mov
push
push
xor
daa
adc
pop
lret
push
icebp
pop
mov
and
roll
inc
or
fcoml
test
adc
ds
daa
add
and
xlat
fldl
mov
cmp
and
jo
jne
jle
and
rcll
mov
sbb
mov
sahf
mov
dec
mov
aas
add
leave
sbb
mov
dec
test
icebp
adc
add
out
dec
jmp
aaa
mov
aam
enter
mov
rolb
cmc
insb
inc
lret
lods
cmpl
adc
ja
cmp
and
sub
sbbl
shlb
mov
adc
mov
jbe
dec
andl
adc
cmp
mov
mov
ret
shll
xor
cwtl
sti
pop
cmc
push
push
add
sub
lahf
inc
stos
pushl
xchg
lret
add
lret
xorps
subb
loop
dec
inc
or
nop
push
jecxz
and
in
es
clc
inc
ja
xchg
lock
into
pop
push
add
add
inc
inc
fstps
sbb
dec
push
fcomps
push
add
out
in
fiadds
stc
mov
cmp
push
jmp
testl
push
and
add
and
rolb
sbb
mov
or
or
mov
push
stos
mov
dec
xchg
dec
les
or
xor
mov
lods
fisubrl
ljmp
add
and
xchg
iret
mov
mov
push
push
or
aas
in
js
inc
mov
push
call
mov
aam
mov
pop
shll
pop
inc
imul
adc
inc
test
dec
imul
xchg
mov
hlt
add
je
sub
lea
add
inc
xchg
jmp
stc
cld
adc
or
push
and
xchg
and
push
push
flds
insb
xchg
xor
xor
sbb
cmp
adc
jmp
dec
and
pop
inc
add
pop
fnstsw
and
loope
xor
bound
add
cmp
adc
fnstcw
pop
inc
pusha
loope
mov
mov
js
aaa
outsb
mov
sub
or
sub
push
pop
jne
xor
dec
push
cmp
add
js
or
xchg
inc
xchg
inc
packsswb
mov
adc
or
ficomps
or
addr16
mov
movb
or
jle
xor
inc
adc
cmp
xchg
mov
aam
xor
adc
int
jnp
cli
sub
and
js
std
push
adc
pushl
pop
pop
mov
arpl
loop
or
push
add
lcall
xor
cmp
outsl
data16
in
pop
outsl
add
jo
fisubrl
pop
jle
test
xor
adc
daa
push
or
push
das
rcll
ds
lds
sub
jmp
and
cmp
cmp
movsb
enter
ret
stos
mov
sbb
xchg
btc
lahf
xchg
sbb
inc
pop
andl
mov
sbb
jns
rcpps
mov
jo
inc
repz
fisubrl
mov
fsub
and
adc
sbb
jecxz
shl
push
push
insl
pop
notl
xchg
pop
rol
inc
mov
pop
push
into
in
pusha
adc
push
jns
push
in
lret
mov
xchg
xor
jbe
and
das
dec
mov
fadd
pop
cwtl
sbb
sbb
xchg
xchg
or
lahf
dec
and
daa
or
push
dec
sbb
cld
jo
and
mov
pop
imul
push
xor
xor
dec
lds
pusha
jno
pop
je
pop
push
sbb
pop
push
mov
ret
jle
push
cmp
push
jp
das
inc
sbb
or
std
imul
adc
xor
pop
adc
jecxz
aaa
das
push
mov
cli
iret
mov
push
add
add
jo
jmp
cmpl
xor
cmp
mov
cwtl
movsl
mov
iret
add
rcrb
add
dec
mov
push
push
call
js
call
ljmp
hlt
je
cmpsl
addr16
push
xor
and
cltd
or
pop
inc
or
or
adc
mov
and
pop
rcr
sbb
sarb
xchg
adc
idivb
sbb
push
fldl
mov
or
int3
add
and
and
xor
add
xchg
jns
mov
adc
lods
dec
add
jae,pn
cmpsb
pop
daa
xchg
pushl
inc
add
clc
sbb
je
push
popf
inc
mov
and
adc
fs
sti
jmp
add
adc
or
in
xchg
jno
mov
icebp
addl
add
inc
sbb
push
push
xor
dec
fildl
adc
xor
dec
js
add
gs
popa
add
adc
dec
xorb
dec
push
sbb
por
add
rolb
iret
adc
pusha
ret
cmp
mov
add
out
mov
xor
xor
scas
jne
sti
lahf
mov
lock
and
and
cwtl
je
and
mov
jmp
das
and
sbb
je
xor
jecxz
jne
push
orb
add
pusha
jge
pop
or
push
int3
or
sub
sub
imul
cmp
les
jne
xchg
inc
es
push
cmp
divl
sbb
outsl
push
mov
sbb
lds
and
inc
movsb
movsl
nop
in
xchg
inc
add
push
jecxz
jg
jmp
xchg
jmp
loope
and
pop
add
test
dec
rcll
inc
adc
mov
push
push
inc
cli
add
divl
stos
cld
mov
arpl
and
sbb
cmpsl
in
inc
inc
pop
out
mov
movsb
push
pusha
adc
push
pop
jne
mov
out
sbb
or
dec
roll
sub
je
or
mov
dec
and
add
je
xlat
push
das
xor
sub
outsb
or
jmp
lret
jne
cmp
push
xchg
pusha
out
orl
jnp
push
inc
and
xlat
insb
or
push
add
dec
ja
jo
push
imul
rcl
popa
adc
fists
mov
nop
cwtl
cmp
push
xorb
js
add
clc
in
push
inc
sub
shll
add
cmp
lret
sub
sub
orb
nop
xor
aas
cmp
test
xchg
xchg
ret
inc
lcall
adc
insl
daa
pop
sbb
jle
dec
or
lock
test
sub
movsb
ja
xchg
lds
cli
or
cwtl
mov
lret
add
sbb
shlb
mov
jo
insb
mov
and
mov
divb
adc
rolb
sbb
xchg
popa
daa
or
mov
xor
push
cmp
imul
lret
add
jg
arpl
mov
cs
dec
add
jae
push
scas
pop
imul
daa
jo
lret
pop
sbb
fcompl
jae
jo
test
and
mov
cmpsb
inc
ljmp
imul
or
pop
and
jo
loopne
pop
or
outsl
adc
or
inc
push
fistl
dec
and
adc
jne
test
hlt
xor
daa
push
adc
mov
inc
cs
test
jo
or
ss
add
mov
nop
mov
mov
pop
pop
jmp
push
inc
shlb
push
dec
or
ret
add
adc
xchg
mov
push
and
es
fisubs
add
ret
adc
jns
out
nop
mov
push
add
adc
inc
fcmovbe
jle
or
stos
add
xchg
xor
or
dec
addr16
or
adc
cmpsl
cmp
es
or
rcrl
mov
add
push
jge
or
xlat
push
lahf
mov
cld
xor
imul
sub
pop
sub
movsl
add
lds
js
jbe
adc
psllq
and
jne
cmp
shufpd
call
daa
push
adcb
gs
fs
mov
outsb
ljmp
add
add
ds
add
js
test
sub
xchg
lahf
xor
cmp
leave
add
add
adc
cmp
cs
sbb
xlat
push
pop
lret
xor
pop
iret
loope
push
cmp
and
jns
mov
pop
inc
test
ret
mov
popa
test
out
cs
cmpb
hlt
lahf
je
mov
das
push
xor
adc
add
xor
sti
mov
xchg
es
sub
scas
add
adc
test
push
and
imul
xlat
sub
dec
mov
mov
insb
sub
push
cmp
mov
mov
test
into
inc
daa
cmp
adc
or
mov
add
bnd
xchg
mov
push
aam
add
sti
mov
dec
lods
or
and
sbb
sub
addl
sbb
mov
subb
jle
jmp
sbb
cmc
pushl
mov
add
or
push
sub
rcl
dec
test
or
es
prefetcht0
sbb
mov
push
cwtl
adcb
fnstcw
xor
xor
cmpb
adc
or
sub
jge
ret
popl
pusha
stos
pop
imul
sti
hlt
lahf
std
fcomps
xchg
cld
xor
push
or
fstpl
push
cmp
adc
and
pop
jb
rol
and
retw
dec
jl
insb
loopne
pop
push
push
xchg
loop
mov
cmp
add
arpl
ret
loop
pusha
or
shl
xchg
sarb
les
dec
fnsave
add
push
loopne
jp
rorb
movsl
imul
adc
xchg
adc
or
sbb
or
les
push
mov
cmp
adc
imul
xlat
insb
loope
pop
mov
inc
lods
mov
add
push
aad
mov
push
imul
inc
mov
sarb
jb
inc
add
xchg
inc
sub
dec
scas
sub
sub
jb
ss
xchg
in
mov
jge
adc
hlt
sub
pop
clc
lock
sub
dec
or
in
or
enter
call
rorb
or
jmp
pop
or
call
popf
inc
jl
loopne
inc
fldenv
mov
movsl
subl
fistpll
std
sub
dec
mov
xor
sbb
movsb
cwtl
movsl
cs
jo
mov
std
mov
enter
movb
adc
add
cmp
add
setb
cmp
loop
jle
sub
sbb
lret
shlb
add
adc
adc
jmp
pop
add
negb
testb
rcll
add
mov
enter
mov
dec
mov
inc
nop
nop
insl
sbb
out
cs
mov
dec
jnp
imul
push
mov
mov
add
sbb
inc
adc
mov
jmp
inc
and
in
adc
sarb
loop
rclb
dec
dec
or
loopne
adc
jp
jl
outsl
das
or
mov
sahf
adc
and
jle
adc
mov
cmp
add
add
dec
sub
xorb
dec
adc
into
adc
fmul
adc
ja
add
mov
xlat
jecxz
pop
mov
and
into
adc
cld
push
fmul
inc
dec
add
add
ljmp
mov
sbb
arpl
sbb
xor
fmuls
add
sbb
fsubr
or
shll
in
xchg
fdivl
int3
mov
dec
sbb
xchg
insl
cltd
sbb
mov
leave
xlat
cmp
xchg
aam
adc
dec
imul
sbb
or
add
mov
sbb
sbbb
mov
adc
jg
stos
mov
mov
add
stos
ret
add
das
jg
cs
into
mov
daa
mov
mov
adc
dec
addr16
dec
mov
xlat
adc
imul
pushf
test
jge
dec
bound
cmpsl
dec
inc
enter
or
out
repz
mov
pop
adc
sub
sbb
mov
or
cmp
subb
sbb
notl
jns
mov
daa
adc
insb
xchg
std
xchg
rorb
mov
push
arpl
sub
lock
test
push
inc
xchg
leave
icebp
fs
lock
pop
ja
xor
lcall
sub
inc
sub
cmp
jmp
mov
inc
out
xor
sbb
and
push
ret
mov
add
mov
adc
insb
ss
jle
mov
shrl
dec
or
mov
cmpsb
add
sub
data16
shlb
clc
xchg
sub
test
fcoml
adc
int3
hlt
push
push
cmpsb
movsb
add
mov
xorb
jmp
pop
mov
insb
jecxz
xor
mov
imul
lcall
add
nop
out
or
mov
imulb
lock
je
add
adc
pop
lret
mov
or
mov
push
lahf
mov
jle
aam
in
adc
insb
xrelease
fistpl
ret
dec
ljmp
adc
imul
fsubrs
gs
dec
push
jle
mov
lahf
fcmovb
hlt
sub
lea
fcomps
js
mov
push
dec
lcall
sbb
xchg
test
mov
push
pop
inc
sub
cwtl
jno
fs
inc
or
inc
ss
pop
aam
dec
sub
sbb
pop
cli
or
jmp
test
test
sbb
add
cs
adc
mov
dec
jo
int3
test
xchg
orl
and
push
or
cmp
scas
add
and
fs
aaa
js
jg
adc
push
xor
movsb
loope
mov
or
cmp
js
adc
addb
sub
xchg
lock
sbb
mov
add
mov
or
push
scas
call
add
jno
lods
push
push
or
jno
cmp
add
inc
cmp
push
pop
pop
ret
jnp
fnstcw
add
test
dec
mov
inc
dec
lock
lcall
in
adc
cmp
add
and
test
cmp
or
cmpl
pop
add
xor
adc
xor
imul
adc
push
arpl
pop
add
add
add
dec
loop
addb
and
fimuls
or
mov
sbb
shlb
sbb
cmc
mov
adc
sbb
dec
xorb
add
test
add
mov
add
shll
pusha
cwtl
mov
orl
and
push
je
leave
lcall
and
push
mov
dec
and
and
cmp
in
inc
andl
add
ret
jne
xor
or
enter
ja
xor
dec
inc
inc
in
stc
imul
dec
popf
add
cltd
or
hlt
add
sub
xorl
and
rorb
xchg
adc
mov
insb
sub
jo
adcl
jp
loope
arpl
jbe
rclb
jo
dec
bound
jmp
pusha
inc
add
pop
jbe
adc
xchg
lcall
sub
add
cmpl
rcll
xor
sub
sbb
add
cld
jb
adc
push
or
lock
or
or
xor
iret
mov
jnp
jno
mov
sbb
add
mov
nop
mov
mov
xor
push
lock
in
push
adc
dec
movsl
sbb
adc
test
sub
or
add
pop
pop
pop
dec
hlt
cmp
jno
lret
mov
cmp
sub
popf
sbb
inc
xchg
mov
ret
addb
ret
xchg
dec
rcrb
jg
fisttpl
dec
jnp
add
ret
daa
repz
adc
sub
xor
js
call
cmp
adc
pop
sub
in
shlb
push
inc
push
ss
jp
push
fstpl
adc
add
and
cmp
js
cmp
inc
push
adc
mov
data16
cmpl
inc
pop
dec
push
push
notb
mov
das
sbb
sbb
add
xchg
cmc
xchg
jp
jle
adc
mov
sbb
cmp
adc
push
and
cltd
out
sbb
or
dec
mov
and
lret
adc
sar
leave
push
jo
out
bnd
jno
loopne
sbb
call
mov
add
xchg
rolb
push
in
mov
mov
push
lds
xchg
push
addb
add
adc
insl
out
in
adc
dec
dec
mov
cld
mov
shll
push
sar
lret
jmp
cmp
push
dec
adc
ret
incb
sub
mov
ja
sbb
push
inc
arpl
push
testl
xor
mov
mov
das
loope
scas
dec
cld
mov
and
call
sub
sub
mov
push
in
or
nop
lods
jg
loopne
aam
sub
jge
test
add
push
rorb
pop
sahf
dec
jae
mov
sarl
popf
movswl
mov
adc
clc
push
inc
push
push
cmpsl
int3
add
faddl
movb
ret
outsb
test
out
push
test
ss
inc
daa
pop
or
jp
mov
inc
loope
jnp
ret
je
fwait
clc
in
sub
cmp
mov
inc
push
jg
pop
sub
or
sub
xchg
mov
ret
adc
cmp
ss
push
js
xorb
in
or
adc
add
mov
mov
pop
out
push
pop
mov
ret
and
cmp
je
pop
das
movsb
mov
mov
or
inc
fstpl
ret
lret
je
icebp
shlb
mov
ret
mov
mov
cmpsl
test
nop
test
popa
mov
adc
push
push
fstps
ja
cmc
or
pop
push
adc
cltd
pop
push
xor
decl
das
add
or
das
mov
pop
movsb
inc
lods
ret
ret
sbbb
mov
enter
aad
loope
cmpsl
add
test
cmp
nop
nop
and
xor
ret
ret
test
sbb
stos
xchg
mov
push
ja
cwtl
and
push
test
jp
int
add
jle
pop
mov
pop
test
mov
out
sbb
inc
inc
mov
out
sarl
enter
mov
add
enter
or
mov
xchg
xchg
or
dec
fldcw
push
ljmp
jno
mov
pop
or
lds
je
jle
addr16
orb
adc
and
sbb
inc
fs
js
xor
or
sbb
add
mov
jge
push
xchg
rorb
mov
loopne
out
sub
adc
imul
inc
push
add
xor
pop
push
jmp
mov
push
xchg
popa
xor
in
jbe
pusha
rorl
jl
inc
fs
pushf
outsb
mov
cmp
arpl
xor
push
add
test
dec
jmp
xor
mov
pusha
sbb
or
inc
xchg
fnsave
jmp
mov
sub
enter
adc
add
aaa
insb
jmp
outsl
or
stos
add
jno
adc
sbb
sbb
pop
sbb
les
lods
or
icebp
xchg
or
rcrb
or
in
into
flds
sbb
mov
push
adc
jo
mov
xchg
aas
inc
outsl
pop
dec
jne
mov
iret
add
pushf
sarb
por
movsl
push
dec
loop
inc
cli
and
push
lock
push
stos
push
jbe
jg
pop
xchg
sub
jmp
aam
ljmp
adc
fs
mov
inc
lods
add
popa
sub
sub
mov
mov
fs
inc
adc
icebp
pushf
adc
adc
and
in
adc
sub
mov
and
mov
lock
inc
fs
xchg
popf
sub
loopne
addr16
mov
xor
or
data16
cmpsl
adc
adc
ret
and
xor
sbb
mov
jbe
addb
rcrl
shlb
lods
inc
mov
pop
in
inc
jo
addr16
cli
mov
mov
dec
adc
mov
cmp
mov
sub
ret
mov
mov
dec
or
dec
sub
push
cmp
add
and
incl
push
rorb
adc
lret
inc
out
ret
rolb
xor
fs
push
push
leave
or
dec
dec
sbb
mov
mov
mov
jp
push
test
mov
push
adc
lock
aas
fdivrs
lock
scas
out
ret
call
mov
push
pop
pop
sbb
pop
mov
fcompp
outsb
adc
jne
push
testb
pushw
and
xlat
je
add
inc
adc
enter
push
push
xor
pop
jbe
loope
fs
dec
push
or
add
dec
push
outsb
mov
jl
sbb
sbb
mov
pop
das
subl
jae
inc
daa
adc
shlb
mov
adc
xor
lret
pop
je
andb
js
mov
cmpsb
int3
and
inc
mov
jne
hlt
sub
sbb
cmpsb
pop
or
in
inc
jbe
and
jle
xor
rorb
nop
jne
cmpsb
dec
arpl
fiaddl
jl
daa
pop
jg
dec
lock
xor
addr16
add
push
cmp
aaa
in
and
inc
popw
clc
add
xchg
loopne
pop
sbb
sbb
or
sub
add
mov
out
negl
call
lcall
or
hlt
cli
cmp
and
dec
sbb
or
sbb
add
dec
push
push
mov
mov
pop
xorb
pop
adc
ret
dec
add
fnstcw
dec
mov
dec
mov
inc
add
and
test
js
jno
or
adc
push
or
xchg
mov
xlat
cltd
dec
xchg
sub
sar
daa
fisttpll
xor
cmp
cmp
xor
stos
call
or
orb
pop
aas
sub
mov
hlt
push
xor
or
sbb
push
sbb
dec
dec
and
pop
add
mov
incb
inc
add
incl
push
dec
insb
clc
or
mov
in
int3
inc
add
pusha
dec
test
xor
add
sub
jne
sbb
fimull
dec
sub
pusha
pop
aaa
or
outsl
orl
xor
in
rclb
clc
xlat
adc
pop
or
jo
popa
mov
sbb
call
aam
dec
in
jbe
or
pop
mov
nop
iret
add
pcmpgtw
xor
daa
icebp
and
xlat
and
ja
pusha
ret
daa
in
jg
pop
imul
mov
mov
jl
inc
scas
xchg
hlt
fbld
xchg
and
out
inc
lods
cmp
mov
or
inc
jg
jne
adc
jle
in
pop
and
cmc
test
dec
or
jmp
arpl
push
insb
pop
xor
clc
xchg
cs
jge
sub
jae
push
loopne
jp
jbe
add
test
pop
add
les
test
lods
mov
je
xchg
mov
test
rclb
ljmp
xchg
lret
xor
js
push
scas
sub
sub
cltd
movsl
mov
je
and
fadds
jno
in
sub
lahf
data16
sbb
jne
mov
ret
mov
dec
test
out
sub
or
xorb
mov
mov
xor
mov
jmp
push
add
cmpsl
and
imul
jnp
push
into
push
or
fidivs
idivl
add
sbb
sub
sub
xchg
jo
insb
sti
add
je
sbb
notl
push
mov
cmp
sarl
inc
cmp
dec
push
mov
insb
mov
test
iret
push
push
jne
daa
or
inc
xor
inc
movl
xor
popf
add
inc
lock
add
cwtl
add
shl
pop
fs
inc
pop
push
icebp
cltd
fsubr
rorb
sbb
adcb
or
mov
fs
add
test
popa
or
ret
cmp
js
or
adcl
adc
or
stc
ja
push
rorl
and
inc
dec
pop
or
dec
fildl
inc
sbb
pop
or
or
into
xchg
push
and
xchg
mov
adc
aas
pop
adc
push
mov
addr16
add
inc
shll
push
enter
sbb
pop
mov
adc
addr16
and
sub
jl
aam
daa
push
inc
adc
add
imul
cli
or
mov
negl
sub
pop
and
dec
sarl
inc
mov
jmp
sub
xchg
add
outsl
inc
fs
cmp
sbb
and
addl
jno
xor
enter
and
cmpl
ljmp
mov
add
mov
dec
inc
leave
rcrl
inc
add
dec
adc
jbe
xchg
ja
imul
test
shlb
xchg
add
pop
add
clc
cwtl
add
out
push
jns
arpl
pop
loopne
jg
aas
addl
xor
push
cmp
sub
xchg
sbb
pop
add
aaa
adc
mov
push
xchg
jge
or
add
and
mov
and
push
inc
jo
rorl
jg
pop
jg
mov
orl
ss
sarb
add
add
pusha
inc
pusha
push
sti
jmp
cmc
xor
jne
movsl
rep
scas
lods
adcl
dec
or
pop
insb
insb
and
cltd
aas
outsb
add
test
clc
aas
xchg
xor
dec
lds
jne
mov
push
addl
pop
inc
pop
int
enter
clc
jae
or
push
mov
sub
add
jmp
lods
mov
adc
daa
and
lret
sub
sub
rcrl
dec
jecxz
and
pop
or
or
and
and
lods
popa
pop
jnp
adc
jne
xchg
es
and
push
adc
ret
jno
inc
add
pop
adc
adc
dec
xchg
jo
pop
mov
dec
sub
inc
das
cmpsl
rol
mov
clc
repnz
and
xor
add
sub
in
ds
or
inc
mov
pop
mov
mov
push
imul
mov
or
insb
pusha
ficomps
lock
xchg
mov
xor
inc
sub
inc
cmp
lock
or
mov
lea
fbstp
cwtl
inc
pop
push
sub
cli
add
clc
and
push
adc
iret
subb
jg
insl
pop
lock
or
add
lds
lret
dec
add
jmp
sbb
loop
add
ds
or
inc
sub
xor
jae
xor
aam
push
pop
sti
in
loop
xchg
sub
shrb
mov
pushf
addb
test
inc
pop
out
dec
dec
mov
and
shll
inc
sub
add
rcrl
jne
add
adc
movl
into
add
iret
add
mov
adc
inc
shlb
xor
mov
or
adc
xor
sub
and
pop
bound
in
dec
or
adcb
inc
fiadds
lret
dec
and
pop
cmp
sbbl
sbb
jo
push
push
shlb
js
inc
test
or
fnstsw
add
inc
add
xor
rcrl
adc
add
je
fmull
push
scas
dec
test
jmp
push
subl
mov
jbe
mov
dec
cmp
cltd
and
mov
mov
add
mov
inc
or
loopne
xor
iret
ret
mov
push
fistpl
mov
add
add
xchg
movsb
pusha
insb
push
xor
push
pusha
pusha
stos
scas
ss
add
testb
adc
xor
mov
mov
orl
shrb
adc
inc
call
push
push
pusha
movsb
imul
mov
jnp
ljmp
cmp
clc
aas
psrlw
addr16
loope
or
pop
mov
push
push
sbb
ja
xchg
pop
sub
cwtl
fld
mov
movsb
int3
adc
aam
or
xor
and
in
mov
sbbl
or
mov
mov
imulb
or
repz
push
or
mov
sti
or
xchg
mov
adc
add
or
or
add
sub
add
test
mov
jae
dec
mov
pop
inc
xor
pushf
nop
es
clc
sar
jns
adc
mov
cmp
mov
or
es
push
jne
add
jbe
lcall
loopne
pop
iret
popf
lahf
imul
shl
pop
push
bndldx
movsb
sub
dec
cmpsb
rorl
pusha
xchg
push
mov
icebp
push
insb
addr16
inc
fisttpll
pop
push
dec
xchg
test
icebp
or
fimull
leave
sbb
in
xor
cmp
add
push
or
icebp
wbinvd
and
inc
insl
popl
fcoms
and
xchg
aaa
addr16
stos
or
dec
push
and
dec
mov
dec
push
jno
push
nop
jnp
out
mov
mov
mov
mov
sbb
stc
xor
hlt
hlt
lock
inc
push
lock
rorl
push
dec
pop
fcoms
add
mov
test
js
xor
andl
or
clc
xchg
gs
cmc
push
pop
push
jp
sub
js
and
xchg
lods
push
ret
adc
push
mov
sub
lods
ja
ror
pop
add
pop
add
pop
idivl
mov
fmull
push
adc
test
push
int3
jo
and
sbb
push
xor
dec
push
push
nop
enter
outsb
je
pop
cs
push
ficoms
negb
pop
addr16
jns
out
sbb
orl
rcll
lock
mov
sbb
sub
mov
and
nop
dec
jo
push
shrb
inc
push
mov
mov
xor
test
mov
jne
inc
and
rcr
adc
mov
adc
mov
push
imul
movsl
sbb
xor
in
das
adc
jle
lea
mov
shll
clc
shll
mov
cmp
outsl
pop
mov
dec
dec
push
sbb
std
dec
inc
ret
aad
inc
cmp
addr16
mov
xor
sbb
push
pop
test
push
jl
insb
or
or
pop
xchg
iret
push
add
sub
or
jl
cmp
ficomps
push
fildl
dec
inc
leave
outsb
sbb
xchg
sbb
nop
cld
sub
out
subl
push
inc
clc
push
mov
cli
stos
jle
sbb
push
fwait
icebp
mov
out
pop
aaa
sub
ret
xchg
lea
cmp
mov
mov
push
cltd
adc
incl
xchg
test
push
mov
lahf
clc
and
adc
data16
push
pop
inc
sub
fwait
cmp
lock
daa
xchg
and
push
mov
outsl
sbb
repnz
in
jmp
movsb
sbb
adc
or
lock
cwtl
mov
lock
xchg
sub
xchg
lods
jmp
rcr
xor
sub
orb
pusha
lret
adc
mov
pop
imul
inc
in
cltd
hlt
in
popf
add
push
cmp
cmp
inc
push
ror
mov
and
sbb
inc
imul
adc
or
adc
sahf
in
xor
or
push
pop
nop
loop
jmp
dec
mov
mov
and
push
dec
jae
adc
lods
pop
adc
push
jnp
adc
push
hlt
pop
and
add
or
dec
sub
push
inc
inc
mov
mov
movsb
push
add
mov
dec
fmuls
and
xor
jb
push
pop
adc
add
xor
jo
sub
icebp
xchg
sub
cmp
push
adc
jne
pushf
inc
jg
rcrb
das
test
pop
mov
icebp
fsts
pop
imul
mov
cmp
shlb
inc
lods
adc
cmp
mov
cltd
dec
push
andl
pop
mov
push
arpl
inc
push
mull
or
rcrb
je
mov
pop
es
push
adcl
popa
ret
icebp
dec
jecxz
pusha
push
rorl
inc
inc
or
mov
push
sub
or
dec
mov
mov
add
mov
push
adc
repz
push
mov
mov
push
adc
jo
movsl
mov
les
mov
sub
mov
leave
lret
xchg
enter
or
dec
rclb
jle
xor
lcall
je
xor
pop
cmp
in
push
test
inc
mov
loope
inc
arpl
aad
jle
inc
or
xchg
sbb
adc
push
pushf
push
jne
lock
clc
push
cmp
pusha
addb
add
icebp
gs
add
push
stos
add
clc
push
es
scas
push
mov
mov
jle
mov
rcll
adc
add
jo
not
les
leave
in
and
cmp
jle
jl
xor
fnstsw
ss
ss
add
mov
mov
push
lahf
and
xor
scas
mov
xchg
push
addr16
ds
inc
and
sbb
sbb
imul
pop
push
out
unpckhps
cmp
jle
pop
loope
mov
repz
mov
in
and
jb
aas
aad
int3
pop
adc
adc
adc
fcomps
jbe
and
mov
cmp
sub
mov
adc
icebp
adc
push
and
mov
pushf
arpl
ja
sub
xchg
and
bound
cltd
pop
jmp
mov
xchg
adc
ret
sbb
inc
pop
das
mov
add
das
push
in
fistl
jb
cmp
insl
push
pop
fsubrs
sbb
pop
add
addr16
cmpb
pop
push
pop
jmp
dec
mov
jl
dec
aaa
mov
cmc
pop
xchg
push
xor
popa
add
xchg
loopne
and
adc
xor
pop
adc
pop
mov
shlb
jo
pop
ss
insb
mov
sarl
cmp
jl
or
dec
push
pop
mov
out
in
subb
jg
jmp
push
mov
xor
push
push
push
jg
mov
mov
fbld
lgs
inc
and
jg
push
pop
scas
cmp
adc
and
call
add
pop
leave
fidivrs
sub
add
jne
xchg
xor
sbb
aaa
dec
in
and
add
and
rcrl
inc
lret
add
mov
jge
push
or
push
push
jae
pop
push
or
adc
cmp
inc
mov
imul
jge
ljmp
int3
cwtl
nop
push
enter
push
inc
add
popf
hlt
sahf
dec
in
insb
xchg
sbb
adc
je
push
sbb
jne
dec
lcall
movsl
adc
hlt
sbb
or
add
outsl
fmull
jmp
adc
aaa
cs
sbb
push
pop
adc
sti
leave
jmp
or
nop
jmp
inc
in
repnz
mov
and
sbb
ja
cmp
push
loopne
cmp
out
xor
inc
cmc
rolb
out
xor
lods
and
adc
insl
loope
xorl
add
or
shlb
aas
sbb
push
clc
dec
xor
imul
mov
aam
sarb
das
and
inc
xor
jge
jmp
push
xor
sbb
sarb
popf
negl
outsb
enter
dec
sbb
xchg
addl
movsl
fisubrl
mov
push
out
repz
inc
loopne
in
lods
xchg
repz
int3
bound
lods
mov
adc
adc
push
add
aam
xor
inc
js
or
inc
popf
ret
jmp
sub
or
xor
mov
das
fsubl
adc
aas
insl
xor
jb
mov
add
pusha
in
xchg
or
adc
mov
push
push
mov
sbb
dec
or
or
loope
add
or
popa
pop
cmp
out
nop
lods
adc
mov
andl
mov
outsl
mov
lahf
push
push
or
sbb
pop
adc
sbbl
mov
lcall
adc
mov
push
in
xchg
cmp
clc
pop
rclb
xchg
pop
nop
adc
mov
int
shll
add
add
xor
adc
cwtl
rcrl
inc
dec
jl
in
push
inc
pop
or
and
push
popa
faddl
orl
sub
cmp
mov
pusha
cs
sub
xchg
jno
andl
xchg
mov
xlat
push
in
aaa
dec
cmp
cltd
int
dec
mov
inc
push
mov
inc
sbb
push
es
push
outsb
cmpsl
out
and
test
add
mov
jnp
push
enter
test
lcall
push
jnp
sub
pop
pushf
pop
and
int3
push
movsb
jb
loopne
clc
dec
enter
adc
and
cmp
cltd
dec
mov
test
imulb
and
mov
dec
lock
dec
push
ret
push
dec
inc
add
insl
jno
insb
and
push
inc
gs
pop
adc
in
push
gs
xchg
nop
ss
popf
xchg
inc
mov
das
push
popf
push
jbe
sbb
insl
jo
inc
test
mov
mov
inc
in
inc
out
loopne
adc
jae
dec
or
nop
pop
negl
sbb
jo
cmc
xchg
jo
jecxz
rclb
and
sub
xorl
add
pop
out
jp
mov
push
sub
arpl
popa
xor
push
stos
adc
jl
push
idivb
popf
or
pop
push
add
ret
fsubp
dec
sbb
xor
adc
and
popa
sbb
pop
loopne
push
lea
or
shl
jo
pop
inc
xor
es
xlat
add
or
je
lock
popf
xchg
pop
cmp
sub
sub
mov
push
in
cmp
ss
and
or
sub
fs
out
fmull
or
js
inc
or
pop
push
nop
xchg
xchg
xor
aas
inc
sar
sub
jp
jae
and
add
popa
loop
repnz
sbb
insb
mov
andl
mov
scas
and
inc
loope
inc
mov
fiaddl
inc
sbb
cmpl
lea
xor
sub
mov
inc
bound
fsubl
loope
orb
sub
jno
xchg
and
add
jge
ret
mov
sub
add
in
and
std
mov
aas
xor
test
nop
mov
xchg
mov
dec
bound
mov
push
push
or
rorb
xchg
jg
sbb
xchg
or
sub
movsl
movsb
mov
add
sahf
jnp
jae
aaa
ja
outsb
dec
lret
or
pop
xor
scas
cmc
xor
xor
xchg
xchg
inc
add
dec
cmp
jp
js
push
cmpb
pop
mov
xor
adc
fcoms
addr16
iret
subl
jae
sti
pusha
mov
setae
ret
sub
adc
sbb
stos
cmp
std
mov
inc
enter
cmp
mov
and
xor
js
test
cmp
pop
push
lock
sub
mov
fcoms
cwtl
push
add
ret
sbbb
je
pop
negl
mov
aam
add
insb
call
push
adc
subl
pushf
rclb
dec
pop
bound
in
pop
faddl
sar
lods
loopne
lock
mov
addr16
pushf
mov
into
adc
add
pop
mov
bound
push
push
sbb
inc
inc
or
fadd
jge
addr16
sbb
sbb
push
add
push
popa
or
repz
call
mov
cmp
enter
aas
pop
lcall
mov
mov
mov
out
fcomps
clc
pop
repnz
add
xchg
inc
or
or
or
movl
sub
imul
or
push
mov
sahf
jle
daa
push
call
pop
lock
fmull
or
vmread
or
outsb
lods
or
jecxz
test
push
test
pop
sub
je
cmpsb
and
xor
mov
sbb
leave
push
adc
stos
cmpsl
clc
mov
jmp
pop
push
jo
out
sub
enter
jns
rcl
fcomp
out
push
out
daa
in
push
or
sbb
mov
push
iret
pop
sbb
insl
movsb
mov
sub
ja
push
xor
loop
ds
aaa
pop
xchg
sahf
xor
or
ja
sbb
loopne
push
rcr
inc
jecxz
movsb
add
aaa
das
sbb
add
push
push
daa
sub
iret
xor
les
pop
mov
sbb
mov
inc
inc
xor
xchg
lods
subl
push
rorl
inc
mov
stc
add
inc
mov
cmpsb
sbb
ret
test
dec
mov
xchg
pop
or
inc
movsb
jnp
ret
shlb
xor
add
sti
loope
in
int
mov
and
inc
xchg
mov
adc
les
aaa
dec
add
lock
addb
aas
adc
add
iret
sbb
les
mov
cmp
xor
mov
add
adc
loope
call
jo
pusha
inc
ja
jecxz
lods
xchg
stos
jmp
and
inc
dec
pop
inc
and
sar
and
and
mov
mov
and
push
dec
pusha
sub
int3
add
xor
pop
sub
xchg
rolb
leave
xor
cmpsb
jecxz
pop
inc
daa
rorl
cmpsl
cmp
cmp
test
cmpb
inc
xor
and
cmp
jne
cld
orb
jle
sub
mov
mov
pop
adc
pop
pushf
or
push
xchg
test
aam
sbb
inc
pop
xlat
mov
xor
ret
adc
js
loope
add
push
scas
mov
mov
push
sub
inc
adc
adc
mov
faddl
dec
shll
jg
mov
nop
rolb
cld
mov
popf
outsb
pushw
xchg
push
dec
cli
pop
sbbl
and
sbb
fstpl
adc
imul
sbb
jo
add
push
popf
add
mov
or
sbb
pop
mov
push
xor
lcall
int3
test
mov
movsb
cmp
fdivrs
push
push
push
inc
and
fmuls
mov
movb
rclb
inc
aaa
add
mov
and
loope
mov
arpl
roll
nop
mul
notl
and
mov
lea
mov
xor
push
daa
push
xchg
addr16
push
fs
jnp
scas
adc
int3
adc
mov
jl
mov
or
je
data16
jnp
or
jae
add
cmp
mov
lcall
cmp
dec
xchg
mov
inc
xlat
test
ret
xchg
shll
daa
sti
push
rol
jge
inc
js
je
sti
rorl
lea
sbb
bound
fbld
fldt
sbb
push
push
femms
cwtl
sub
pop
push
mov
popf
or
adc
inc
mov
adc
or
pop
dec
jne
dec
mov
inc
jle
out
testl
mov
movsl
inc
push
orl
jle
cld
je
lds
rcl
xor
insb
push
into
mov
ret
rorl
push
jecxz
add
adc
xor
inc
push
pop
outsb
cmpsl
decb
cmp
mov
loop
or
lret
sbb
mov
or
xchg
test
mov
mov
movsb
mov
mov
inc
sub
cmp
aad
pusha
call
mov
aas
inc
sbb
sbb
je
test
pop
or
pop
daa
je
add
xchg
aas
jl
and
and
jl
push
and
jmp
jne
frstor
jp
jns
mov
xor
or
gs
test
aaa
mov
mov
call
mov
xor
pop
mov
vhsubps
jae
rorl
rorb
xchg
test
test
jne
and
add
jecxz
inc
addr16
icebp
test
or
dec
sbb
pushf
add
popf
ja
fs
mov
lods
adc
les
sbb
jmp
mov
xchg
mov
mov
cmpb
scas
mov
xchg
jg
sbb
or
je
adc
mov
sbb
pop
or
add
jge
push
js
pop
jne
cmp
mov
shlb
lock
adc
movl
shll
fsubl
or
pop
out
cwtl
cs
mov
or
dec
inc
addb
dec
es
add
rolb
lods
adc
xchg
stos
addb
add
push
add
sub
mov
and
les
addb
aaa
mov
scas
jo
je
xchg
popf
jbe
adc
pop
mov
in
pop
call
add
cmp
ret
out
cmpsb
or
aam
in
pusha
mov
inc
push
dec
mov
fsubrl
adc
xor
xchg
inc
fists
inc
aas
enter
push
iret
out
push
subb
sub
xchg
jg
push
jp
les
mov
pop
notb
mov
pop
or
movsl
subl
or
ljmp
mov
test
mov
xor
fidivrs
push
aas
and
xor
and
inc
xor
or
sbb
mov
push
mov
inc
inc
xchg
cmp
and
push
mov
push
add
push
dec
popf
dec
sbb
addl
or
mov
test
xchg
decb
jl
cmp
push
push
xor
jge
cmp
or
icebp
movl
mov
lea
int
test
jne
dec
adc
push
sbb
pop
int
xor
mov
lahf
ljmp
data16
add
jbe
pop
push
test
scas
in
mov
sub
icebp
or
xor
push
les
add
jmp
add
shrl
ret
clc
pop
call
pop
sbb
hlt
outsl
jne
xor
imul
aaa
out
mov
push
iret
clc
xor
sbb
out
fcomps
push
je
inc
loop
hlt
jecxz
aad
push
or
push
pop
out
push
mov
orl
sbb
cmp
daa
scas
cltd
pop
xchg
cmp
pop
mov
push
cs
or
test
pop
add
xor
fs
icebp
or
shrb
stos
cmpsb
ret
xchg
pusha
cmp
rclb
cmpb
and
adc
jg
or
lds
mov
pop
mov
push
or
inc
cmp
xchg
test
xchg
jnp
cmp
xor
popf
jecxz
test
cmp
pop
adc
jle
movsl
mov
xor
mov
bound
rorl
pop
lock
test
jnp
xor
hlt
pop
lea
ss
inc
lea
fwait
dec
xor
xchg
xor
pusha
lds
out
sub
push
cmp
test
sbb
enter
pop
sbb
push
mov
cmp
pop
sbb
add
pop
mov
jge
cmp
jl
or
dec
adc
push
xor
ret
inc
mov
mov
shrl
lods
adc
dec
mov
ret
jae
jo
js
sbb
jo
pop
shr
rolb
adc
push
aaa
and
movsb
incb
aaa
push
cmpsl
fcoms
imul
add
xor
fimuls
jno
gs
xchg
rol
mov
add
pop
loope
add
ja
sbbb
push
xor
push
popf
pop
aam
dec
push
pop
add
cs
mov
pop
dec
test
sbb
dec
sarl
cltd
cmp
les
mov
movsb
scas
xor
pop
aaa
mov
nop
xor
add
inc
addb
jnp
loop
or
mov
push
adc
mov
cmp
pop
or
shrb
dec
in
cmp
lea
repz
push
inc
pop
loop
push
pop
fdivs
cmp
adc
nop
xchg
cltd
xchg
push
fiaddl
imul
inc
loopne
jno
pop
inc
push
inc
pop
inc
adc
andb
test
push
inc
push
pop
xlat
rorb
push
mov
nop
or
pop
cmp
or
rol
jbe
mov
cs
adc
sbb
xchg
rcll
adc
push
scas
xchg
mov
in
insb
ja
adcl
pop
out
jecxz
pop
loope
and
xchg
xor
repz
jg
test
jecxz
loop
sbb
adc
in
jl
je
mov
int3
testl
fnstenv
sbb
push
andl
mov
pop
call
mov
sub
jecxz
stos
lods
mov
sub
sbb
call
leave
pop
xchg
jae
or
stc
mov
dec
nop
ja
mov
push
scas
test
push
xorb
fsubs
aas
jne
mov
aas
cmp
push
nop
add
inc
or
dec
mov
inc
mov
cmc
push
inc
inc
mov
arpl
daa
jmp
sub
mov
pop
push
push
push
and
insl
orl
loope
addb
inc
pusha
stos
xor
and
sbb
test
pusha
shll
arpl
adcb
cmp
cmp
test
pop
sub
sbb
adc
scas
test
sbb
pop
je
mov
lcall
data16
adc
into
orb
jg
sbb
xchg
adc
outsl
sbb
mov
shlb
aas
mov
movsb
or
imul
inc
bound
dec
inc
rcrb
sub
sub
insl
mov
add
push
mov
test
ljmp
xor
dec
jb
rcrb
rcll
pop
adc
in
aaa
pop
adc
or
add
adc
ret
dec
add
shlb
sbb
out
scas
movl
les
cwtl
xchg
in
ret
mov
adc
xchg
add
and
mov
cmp
pop
dec
cmpl
hlt
mov
dec
clc
es
push
les
xchg
or
in
mov
sbb
adc
add
jl
call
jb
adc
pop
add
lahf
rorb
sbb
xchg
xchg
addl
cmp
sbb
adc
jle
mov
cmp
inc
ret
xor
clc
in
addl
scas
rclb
jne
push
mov
xchg
ds
dec
lods
xor
adc
cltd
cmpsl
test
push
pop
cwtl
lock
andb
in
push
int3
sahf
mov
pop
hlt
xor
push
mov
jge
lock
sub
ret
in
sub
in
imul
sbb
rorb
dec
rorl
push
pop
dec
xor
jno
sub
sbbb
add
jb
xor
push
mov
stc
dec
cmp
movsl
inc
dec
xor
scas
xlat
loopne
pop
in
scas
adc
xor
and
push
jno
in
adcl
rol
mov
dec
in
mov
push
inc
cmp
push
dec
inc
push
loopne
shl
sbb
cmp
xchg
push
xor
pop
lcall
iret
cltd
xchg
sub
xchg
cwtl
pop
loop
aam
icebp
push
lock
jmp
cli
rcll
popf
mov
daa
xchg
nop
sub
fisttpll
sbb
adcb
add
cmp
mov
or
or
lret
outsb
fwait
adc
fisubrs
push
test
adc
sub
out
imul
lea
test
and
add
dec
cmp
mov
mov
or
xchg
lock
add
cs
cmp
movsb
ret
jbe
xchg
xor
push
fwait
inc
adcb
fwait
jecxz
stos
sbb
fwait
stos
cld
imul
lret
xchg
mov
imul
leave
int
sub
or
inc
sub
pop
push
stos
mov
and
cmovl
pop
mov
and
repz
add
gs
cmc
and
xor
test
mov
jne
cmpsb
dec
pusha
loopne
add
call
inc
outsb
cmp
add
cmp
cmovno
mov
inc
loop
dec
popf
mov
andb
push
push
ret
fcmovnb
gs
dec
in
xor
adc
popf
daa
add
sbb
testl
sub
adc
cmp
dec
test
jg
xor
pop
mov
test
add
add
and
sub
sub
push
dec
les
or
repnz
ret
push
add
call
mov
cli
dec
pop
cmpb
movb
mov
incl
jno
sbb
dec
cmpsl
add
and
addb
cmp
sbb
inc
jo
xchg
inc
fists
icebp
add
pop
mov
outsb
into
and
movsb
or
imul
cs
aaa
jo
ret
mov
inc
pop
or
or
popa
jb
add
popa
dec
mov
or
jg
inc
cmp
mov
push
test
xchg
inc
or
pop
push
bound
insb
jge
pop
xchg
ret
mov
aaa
add
popa
ljmp
test
mov
inc
rorl
int
mov
out
push
mov
push
inc
fs
xchg
stos
fldcw
push
out
or
mov
int
icebp
or
out
adc
addl
adc
and
add
ljmp
mov
mov
dec
lea
in
inc
insb
and
dec
out
sub
pop
or
movsb
insb
pushf
sbb
add
subl
add
push
mov
dec
ficomps
mov
or
aaa
or
inc
outsl
inc
scas
pop
and
inc
insb
mov
push
mov
push
lock
mov
idivl
std
prefetcht1
mov
mov
mov
mov
mov
int3
mov
mov
or
sub
dec
sub
pmullw
lock
jnp
scas
cmp
jle
push
aad
lods
mov
fstpt
mov
pop
or
mov
sbb
pop
rorl
out
outsb
push
cmp
inc
aas
xor
shll
pop
aas
jbe
mov
jl
ja
data16
xlat
push
dec
fadds
inc
stos
dec
aad
cmpsl
pop
sbb
in
sbb
push
xor
lret
or
push
jb
cmp
fdivs
imul
cmp
or
enter
xchg
cmp
add
or
imul
bnd
jae
cmp
jmp
push
nop
pop
sub
fs
js
cld
jmp
mov
clc
xchg
mov
push
scas
dec
cwtl
inc
dec
add
mov
ds
rcr
mov
xor
or
jl
inc
mov
cmp
inc
sub
daa
dec
lods
inc
mov
cmp
pop
pop
mov
inc
lods
loopne
cmp
gs
add
mov
cmp
or
pop
in
mov
add
push
or
jns
add
sub
xchg
orb
mull
push
dec
dec
push
mov
pop
inc
lea
push
jmp
sbb
dec
mov
psllq
inc
jae
pusha
cmp
lds
xor
popa
cmp
iret
out
popa
mov
jp
inc
push
inc
addb
mov
js
sbbb
cwtl
add
lea
inc
int3
mov
jae
push
imul
add
sub
pop
rcrb
movsl
and
sbb
cwtl
mov
fldl
adc
push
mov
out
cwtl
cwtl
rclb
out
mov
and
mov
mov
mov
test
daa
jp
imul
sbbb
jbe
shll
inc
mov
pop
mov
repnz
repz
lock
sbb
loopne
cld
repnz
cmp
xlat
in
call
les
push
aam
pop
subl
or
scas
push
jl
add
push
pop
nop
shlb
xor
ffreep
das
sbb
push
or
fists
cmpsl
xor
xor
aaa
enter
lock
push
out
clc
fdivrp
mov
insb
mov
rolb
add
inc
jl
or
stos
movsb
mov
pop
or
or
dec
rcl
add
ja
adcb
add
add
push
mov
and
inc
sub
out
inc
bound
aad
jge
xlat
mov
xrelease
push
jnp
push
repnz
or
inc
inc
cmp
mov
test
wbinvd
hlt
mov
shlb
dec
pushf
in
or
sub
push
stos
out
andps
or
insl
cmpb
sbb
popa
and
rolb
push
inc
inc
adc
and
jg
push
push
cs
jmp
insb
lahf
or
xor
je
imul
sbb
pop
inc
out
call
sbb
mov
cmp
pop
and
sub
push
sbb
jo
jnp
frstor
sub
sbb
int
mov
mov
in
or
inc
push
shll
mov
pop
xor
test
mov
fisttpll
mov
addl
nop
pop
pop
and
fsts
or
js
pusha
daa
mov
and
lea
daa
or
orl
push
and
xchg
and
pop
cmp
fbld
inc
mov
bound
js
test
imul
mov
dec
scas
xchg
and
or
loopne
push
mov
inc
push
imul
sbb
test
jo
dec
rol
pop
paddsb
out
lods
out
movsb
ds
and
xchg
icebp
jne
iret
sbb
inc
out
pop
in
xchg
xchg
nop
cld
xlat
or
push
mov
or
cmc
iret
clc
push
test
and
xor
xor
xor
inc
mov
inc
dec
dec
dec
dec
dec
dec
dec
dec
xor
scas
push
or
push
push
push
pop
pop
pop
sarb
pusha
mov
rcl
push
xchg
inc
push
inc
xor
test
fs
xchg
mov
push
dec
shlb
je
imul
mov
adc
scas
add
or
shlb
adc
inc
std
jbe
mov
and
add
add
out
mov
jns
or
add
and
xor
mov
mov
cltd
loopne
sub
jmp
pop
push
pop
shrb
pop
xor
jge
dec
cs
pop
incb
clc
sub
clc
add
je
push
cmp
sti
xchg
lahf
xchg
push
inc
jge
shll
xchg
pop
adc
lahf
mov
sarb
stos
xorl
es
mov
jmp
in
and
add
addl
xor
ja
gs
loope
add
es
sbb
xor
jmp
inc
inc
inc
movsb
pop
mov
call
sbb
sti
dec
pop
jg
xchg
or
lock
xchg
xor
dec
aas
adc
sub
repnz
testb
inc
orb
mov
in
sbb
mov
lock
dec
sbb
add
push
testl
repz
rcll
fisttps
pop
adc
lods
or
ss
push
addr16
outsb
lock
lret
adc
imul
sub
addr16
testb
pop
add
jmp
jmp
xor
push
xchg
out
inc
jmp
popa
add
mov
cmp
jmp
lahf
sub
sub
movsl
sahf
sub
mov
xchg
adc
xchg
or
jmp
inc
sti
push
add
and
mov
push
rcll
and
fistpll
jmp
sub
sbb
ret
test
fdivs
imul
cld
and
lods
stos
nop
mov
nop
not
aam
push
mov
push
cmp
ja
sbb
mov
jle
pushl
jmp
add
pop
incl
popa
jg
pop
fisttpll
popa
cmpb
jg
mov
cwtl
sub
popa
insb
adc
loope
pop
fcmovnbe
pop
add
jp
insl
clc
icebp
xchg
hlt
xchg
sbbb
ret
mov
cmp
add
or
jmp
adc
push
mov
pop
arpl
xor
scas
lods
in
push
in
outsl
sub
pop
dec
pop
xor
adc
lock
outsb
aas
sub
xor
jmp
ss
mov
adc
icebp
hlt
xor
add
pop
leave
pop
nop
pushl
icebp
mov
jmp
in
xlat
adc
in
popa
jl
xchg
adc
nop
jo
popf
hlt
dec
adc
ja
sub
movsb
mov
daa
pop
lea
jo
andb
loop,pn
dec
push
sbb
dec
jno
sbb
sub
jp,pt
arpl
outsb
leave
jl
dec
filds
outsl
or
out
inc
sub
inc
imul
stos
pop
cmpsl
sbb
push
add
lods
insb
xchg
and
add
xlat
push
nop
jbe
or
mov
pusha
idivb
add
xor
add
dec
sbb
insb
movzbl
cmp
fistpll
gs
inc
inc
inc
int3
inc
imul
or
dec
lea
push
inc
cmp
movsl
add
mov
mov
js
inc
sub
nop
jl
push
add
call
or
or
mov
adc
xor
push
inc
jo
add
iret
or
insb
xchg
aas
cmp
inc
imul
xchg
sbb
aas
inc
enter
sub
dec
das
cmp
dec
xor
mov
inc
neg
jl
add
cmp
add
aas
andb
xor
or
mov
loopne
push
popa
xchg
push
jmp
mov
mov
push
add
pop
pop
lret
sbb
jmp
or
adc
mov
mov
jle
and
cmp
sub
mov
cmp
js
imul
cmpsl
add
gs
add
or
sbb
and
imul
clc
pushf
xchg
rcrb
mov
jnp
or
jl
push
xor
pop
imul
lods
aam
inc
fucomi
dec
pop
pusha
push
xor
push
pushf
sub
jp
mov
inc
or
push
cmp
push
add
sub
mov
dec
sarb
addb
mov
push
out
movl
aas
jno
lcall
adc
ret
pop
xchg
mov
adc
cmp
dec
add
xchg
shlb
dec
cld
and
addl
cs
pop
inc
pop
mov
cs
mov
leave
mov
or
out
pop
push
scas
je
adc
cmpsl
mov
insb
ljmp
cmp
sbb
out
mov
roll
push
imul
fcmovnu
jecxz
loope
and
push
or
pop
add
push
stos
add
add
sub
push
lock
or
adc
dec
mov
xchg
lock
fldt
aam
pop
mov
mov
adc
add
pop
outsl
inc
mov
jno
sbbb
subl
inc
pop
cmp
sub
adc
sti
xchg
and
js
les
pop
or
xor
cltd
je
mov
roll
call
cmp
adc
test
test
xchg
jmp
sarl
mov
and
and
mov
sub
xor
mov
and
inc
loope
lods
testb
insb
mov
and
ret
aas
orb
mov
sbb
mov
mov
jecxz
lgs
jnp
pop
jecxz
push
adc
pop
push
je
shl
pop
jp
dec
call
test
adc
je
je
xor
fwait
lcall
shr
lcall
fdivrs
or
es
inc
in
sbb
sbb
test
xor
pop
adc
mov
push
push
mov
jo
and
pop
call
shll
xor
pop
in
inc
stos
mov
ljmp
adc
mov
cmp
sarb
pushf
aad
cmp
jae
mov
pusha
mov
popf
jl
xor
sbb
mov
add
femms
xor
or
mov
mov
rorl
ss
or
mov
push
or
add
out
jl
inc
sub
push
push
ret
sti
pop
mov
push
pop
ljmp
adc
or
jg
mov
pusha
outsl
imul
mov
and
rol
cs
loope
test
jp
sahf
jecxz
or
jmp
adc
add
xchg
pop
loopne
in
sub
and
add
sub
and
lods
icebp
movl
imul
jne
vmread
push
lret
sti
rcrb
fisubrs
sbb
call
sub
lock
adc
movsb
push
mov
ja
out
je
adc
scas
xor
insb
jl
aad
jle
scas
mov
mov
mov
je
sbb
or
cmp
dec
xchg
ds
mov
dec
bound
inc
or
push
out
mov
inc
shll
addb
adc
cmp
subl
mov
xorl
pushf
adc
imul
cmp
add
les
aaa
and
je
mov
and
xchg
es
popl
notb
mov
xchg
ret
nop
mov
sub
xchg
fs
and
enter
mov
adc
stos
push
push
clc
jnp
adc
dec
cltd
inc
mov
fdivrs
fisubrl
adc
or
and
lret
and
popa
push
sbb
mov
xlat
or
inc
cmp
push
icebp
hlt
lods
xchg
add
rolb
inc
iret
flds
mov
rorb
sub
es
scas
sbb
jp
inc
iret
xchg
pop
das
loopne
in
inc
mov
sbb
hlt
insb
mov
enter
enter
and
shlb
cs
js
push
cmp
mov
cmp
inc
cltd
pop
inc
mov
push
cltd
mov
adc
and
imul
push
sbb
jo
cmp
dec
jl
pop
push
test
test
push
xchg
mov
xor
ss
cmpl
mov
add
addl
add
mov
sub
xor
jmp
push
add
dec
inc
pop
or
popa
push
cmp
push
in
mov
call
or
push
fsubrs
add
mov
mov
adc
stos
jno
invd
orl
icebp
xchg
lock
orl
dec
inc
push
mov
lock
inc
cwtl
pop
push
leave
inc
jno
imul
arpl
mov
pop
push
push
inc
adc
fildll
lock
xlat
subb
dec
hlt
sub
dec
adc
and
pop
mov
or
clc
xor
adc
push
stos
xor
test
adc
and
or
imul
adc
add
repnz
inc
push
push
sub
pop
lock
xchg
mov
roll
pop
icebp
add
repz
es
movsl
xor
sbbl
xor
shlb
lea
movsb
adc
push
add
dec
cmc
sub
fadd
push
lock
dec
cmp
shlb
sub
cmp
sbb
mov
iret
inc
repnz
pop
pop
iret
hlt
xor
hlt
fwait
sbb
sub
xchg
lds
movsb
je
push
xor
imul
clc
or
pop
jns
or
xor
sbb
addb
xor
leave
lock
rorl
test
or
iret
adc
ds
pop
fildll
int3
add
add
mov
popa
cs
and
dec
mov
shl
shl
sub
sbb
ja
xor
outsb
and
fistps
scas
or
loopne
and
fwait
sbb
add
jne
clc
ret
into
dec
mov
aaa
test
jl
pop
ss
data16
jg
push
inc
je
or
sbb
shlb
sti
pushf
fwait
decl
jg
push
sbb
add
or
sbb
push
pop
loopne
cmpsb
xor
fneni(8087
mov
push
mov
addb
addl
fistps
or
xlat
out
jae
mov
lods
fs
adc
inc
test
in
adc
jo
pop
sub
add
add
sbb
add
sbb
pop
cmp
or
pop
pop
pusha
outsw
inc
loope
pop
push
xor
subl
mov
push
and
sbb
jp
xor
aad
arpl
mov
nop
ret
mov
iret
dec
or
stos
cmp
or
mov
addr16
rorl
push
push
sub
repnz
clc
leave
push
and
jno
mov
lods
clc
sub
jo
inc
movsb
sbb
add
repnz
lock
clc
in
repnz
and
dec
mov
ret
into
mov
daa
imull
rclb
pop
cmc
adc
test
pop
clc
enter
push
pop
sbb
pop
jo
lock
bound
add
add
and
xchg
pusha
test
movsb
or
and
dec
push
adcb
pop
push
shlb
nop
in
inc
pushf
fwait
cmp
and
xor
pop
add
or
cmpsb
nop
ret
or
adc
sub
sub
add
mov
add
add
adc
ret
pop
and
not
lds
pop
stos
xlat
daa
insb
mov
xor
cmp
lds
mov
mov
mov
adc
adc
js
fisubrs
pop
insb
push
sbb
lcall
lcall
sbb
mov
mov
fsubrs
js
pop
push
push
je
ret
or
cmp
insl
xchg
or
scas
adc
jnp
pop
adc
and
inc
sub
xchg
mov
addb
cmpw
repz
pop
jl
or
mov
mov
movsl
pop
dec
inc
ret
cmpb
lods
dec
je
cwtl
movl
pop
mov
fwait
xlat
sbb
xchg
sarb
mov
mov
rolb
xor
cmp
test
mov
push
sbb
imul
or
xorb
or
aam
adc
hlt
mov
les
mov
xor
adcl
rol
inc
gs
push
mov
call
and
pop
test
push
and
imul
sbb
insl
mov
rcrb
aaa
dec
into
es
ljmp
push
xchg
sub
push
or
stc
insb
mov
ds
mov
jae
data16
or
xchg
test
dec
or
ss
or
inc
and
test
movd
add
in
mov
je
sbb
cmp
es
pop
fdivl
xor
push
jnp
das
or
xor
ds
cmp
jae
sub
push
xchg
loopne
nop
roll
jne
sbb
jnp
addb
mov
test
icebp
push
push
add
cmpsb
xchg
xchg
outsb
dec
xchg
test
fsubrl
pushf
ret
inc
inc
or
xchg
testb
mov
dec
das
testb
ret
outsl
xor
adc
divl
xor
dec
lahf
and
pop
or
cmp
add
mov
dec
jb
push
adc
dec
mov
mov
cmp
push
pop
lods
and
loop
pop
adc
notb
pop
je
sbb
lea
add
jne
pop
xchg
add
les
enter
fsubl
adc
xchg
push
mov
and
stos
pop
inc
mov
je
cmp
and
add
inc
pop
sbb
rcll
insb
rclb
test
addb
push
insb
mov
daa
out
dec
cvtps2pd
aas
je
jb
popa
lret
adc
lret
ja
mov
push
imul
mov
pushf
lret
xor
push
fbstp
out
or
mov
add
pop
jg
fadds
mov
mov
outsb
fidivrs
ds
inc
mov
adc
adc
pop
sbb
rcll
mov
aaa
scas
mov
or
mov
std
inc
pop
inc
call
mov
aaa
je
roll
add
or
pop
mov
pop
outsl
pop
nop
adcb
sub
nop
xor
sbb
or
xchg
or
pop
inc
ret
clc
pop
cmp
cmp
fwait
cmp
cmp
inc
mov
lret
aaa
cs
sub
adc
pop
movb
insb
mov
fimuls
sub
es
sub
mov
fnstenv
je
adc
fs
mov
jl
loopne
push
cs
mov
jbe
inc
ljmp
jbe
and
and
dec
dec
jl
lods
aas
in
data16
mov
sahf
push
popa
and
mov
stos
pop
push
or
loopne
mov
sbb
adc
push
push
sbb
push
jg
jmp
sbb
xor
in
int3
mov
or
out
mov
cmp
jmp
clc
cmp
sahf
gs
daa
test
or
jecxz
adc
sbb
and
es
in
jne
xor
or
push
and
mov
and
add
sbb
push
dec
scas
add
jmp
mov
inc
inc
popf
push
arpl
mov
sarb
clc
mov
jno
cmp
add
hlt
mov
lods
popa
ss
adc
mov
jns
mov
ret
loop
inc
movb
movsl
mov
push
in
mov
inc
adc
lock
push
xchg
jmp
jge
xchg
ja
fcoms
adc
cwtl
jnp
sti
popl
dec
and
push
add
pusha
push
jno
call
push
out
cmovl
jmp
or
orl
xchg
mov
inc
jp
mov
xchg
xchg
addr16
inc
inc
pushf
fiadds
sbb
js
and
inc
dec
push
or
orps
adc
pop
fdivs
mov
inc
lods
out
scas
lock
mov
or
jo
xor
iret
int
xchg
les
pop
and
enter
adc
adc
cmp
sbb
cmp
ss
lcall
mov
ror
cmp
je
mov
cmp
push
sub
lret
imul
push
and
sti
mov
and
xchg
push
push
dec
jb
insl
cmp
jle
lock
jo
xor
pop
daa
cmp
enter
push
ja
fisttpll
push
loopne
inc
push
pop
pop
push
dec
mov
pop
outsl
add
lods
adc
adc
aas
movsl
insb
mov
inc
inc
xchg
jne
cmp
cs
push
dec
mov
fimull
data16
mov
add
and
sub
mov
add
aad
push
dec
sub
lea
clc
mov
push
xor
and
xor
mov
and
orb
jg
orb
aas
pop
orb
aas
sub
inc
inc
mov
and
pushl
xchg
adc
mov
popa
addr16
pop
push
inc
pusha
push
cwtl
and
and
ds
dec
push
je
mov
bound
jno
das
xor
or
dec
ljmp
rcrl
ret
mov
push
xor
jg
inc
cmpl
sbb
jecxz
mov
lahf
rolb
inc
sbbb
xchg
push
push
sbb
jb
sbb
mov
inc
jge
mov
lods
insb
scas
mov
pusha
es
adc
aas
cmp
rorb
add
pop
mov
push
xor
cmp
in
es
sub
xor
and
xlat
cmp
pushf
xor
fmull
adc
call
add
nop
xor
in
jbe
std
push
push
jecxz
sub
sahf
fidivrs
cmp
adc
mov
adc
add
and
adc
loope
push
into
jne
insb
lahf
gs
add
mov
add
sbb
inc
fiaddl
enter
push
mov
lods
lock
shll
in
or
cld
push
dec
mov
aaa
pushl
dec
or
push
jns
add
lcall
or
es
decl
add
sbb
flds
sub
mov
pop
sub
add
rcl
adc
cld
sub
jp
mov
js
jecxz
bound
les
or
pop
xchg
les
sbb
sbb
fsts
mov
cmp
movsl
loope
xor
insl
movsl
mov
pop
scas
movsb
bound
mov
fcomip
sbb
in
loopne
test
cmpsb
jbe
inc
add
enter
leave
pop
mov
or
and
and
loopne
out
bound
mov
xchg
add
sbb
mov
adc
jnp
arpl
pusha
add
dec
push
pop
jo
dec
loop
xor
loopne
fs
ljmp
std
je
push
sbb
sub
dec
repz
mov
test
out
icebp
aam
push
pop
mov
xor
mov
add
lea
movsl
adc
mov
xchg
pop
jne
xor
fidivrs
imul
jno
xor
push
xor
xor
cmpsb
dec
xchg
adc
adc
add
js
push
sub
jle
rorl
mov
jns
mov
or
dec
sti
sbb
cmp
jmp
push
mov
or
and
xlat
xor
mov
sub
fistpl
jo
xchg
rcrb
jmp
shll
adc
aad
mov
rcrl
pop
or
or
out
insl
xchg
xor
fsub
adc
cmpsl
adc
push
sbb
jo
iret
or
test
add
xchg
out
leave
mov
sbb
mov
nop
call
pop
sbb
shll
addr16
add
xchg
jne
lea
aas
and
adc
xchg
sbb
or
inc
push
imul
push
inc
pop
out
or
lcall
adcl
sbb
and
sub
sbb
sbb
cwtl
sub
mov
adc
call
js
mov
movsl
das
add
cmp
jne
cmp
jle
pop
fcoms
call
loop
aas
lea
or
cli
sbb
and
rclb
lcall
scas
hlt
or
sti
jl
inc
test
mov
sbb
insl
dec
add
addr16
shlb
mov
dec
add
dec
ret
add
negb
sbbl
push
cmpsb
mov
cmpb
movb
xchg
add
pop
jne
dec
mov
fadd
pop
and
cwtl
add
xchg
or
and
dec
inc
jne
mov
idivb
mov
push
test
inc
nop
pop
cmpl
pop
sbb
pushf
call
mov
add
rcrb
dec
add
mov
add
filds
aam
sbbl
pop
mov
xchg
cmp
mov
inc
cmp
dec
shl
rcrl
push
and
shll
mov
xor
inc
cmp
out
push
jecxz
add
inc
sbb
push
roll
inc
xor
sbb
dec
lock
and
pop
inc
stc
daa
pop
mov
mov
add
push
mov
push
xchg
cmp
ret
cmpsl
or
lcall
ret
loop
lcall
add
and
sub
call
xchg
add
shll
sub
and
adc
ss
fstpt
jmp
hlt
iret
or
sub
inc
lock
pop
add
jo
mov
ljmp
mov
ret
sub
daa
add
mov
push
mov
call
out
out
movsb
jmp
aam
test
pop
aad
fcmovnbe
jmp
cmp
add
insl
int3
push
call
int3
js
mov
mov
dec
mov
sbb
rolb
xchg
out
add
xchg
sub
sti
dec
jge
test
addr16
shll
fdivrs
sbb
xchg
and
sbb
inc
into
aas
add
or
or
or
or
cmp
cmp
lahf
repnz
adcl
jno
sub
add
inc
popa
xor
loopne
push
or
sbb
das
ret
and
mov
aad
dec
dec
rclb
push
wrmsr
dec
dec
add
test
add
mov
movsb
mov
repnz
popa
jno
sub
movsb
hlt
pushf
mov
jl
sbb
mov
xchg
push
add
insl
jl
sbb
adc
xor
je
cli
outsl
insb
lock
push
cli
in
fisubrs
loop
mov
lods
mov
add
faddp
xor
je
mov
push
cmp
add
andb
add
mov
jp
xchg
ret
movsl
out
leave
cwtl
rcrl
xchg
pop
inc
sub
mov
dec
add
push
pop
mov
sub
mov
sub
xchg
jae
sbb
push
pop
enter
mov
cli
data16
cli
add
iret
mov
push
jge
bound
and
and
xor
je
subb
inc
rcr
and
sub
mov
mov
mov
loope
jae
push
cmp
test
mov
cmp
push
scas
inc
addr16
and
lea
ret
je
push
fxch
and
lcall
inc
xor
filds
mov
pop
adc
sub
dec
push
mov
ja
movsb
mov
sub
mov
mov
outsb
pop
inc
add
and
movsb
rcrb
inc
cmp
je
xor
sub
loopne
xor
xor
lahf
rol
mov
loop
mov
cmp
add
repz
daa
das
loopne
imulb
sbb
add
cli
mov
sbb
add
sti
xor
mov
sub
xor
push
and
cwtl
xorb
mov
out
mov
mov
jb
push
stos
dec
cld
add
sbb
movb
pop
jns
cmpsl
or
dec
dec
cmp
and
inc
call
inc
cmp
and
dec
rcll
subb
movsl
shr
sbb
sbb
test
test
jle
lret
adc
imul
loopne
pop
cmp
and
cltd
pop
mov
xchg
jl
pop
inc
add
add
xor
push
or
iret
lea
inc
cmpsl
jno
adcb
addr16
je
add
xor
das
sbb
ljmp
xchg
add
mov
inc
daa
xchg
icebp
insl
jbe
out
and
pop
add
rorb
int
cwtl
fsubrl
mov
bound
shl
ja
sub
rcl
or
addb
lods
cmpb
cli
add
test
xlat
push
sahf
out
or
jno
adc
add
mov
mov
inc
cs
mov
xor
int
repz
cmp
or
inc
test
test
adc
pop
or
cmp
cmp
lahf
pop
nop
das
jb
in
dec
inc
dec
inc
xor
das
push
cmp
push
jp
or
or
jb
cwtl
divl
dec
incb
ret
sbb
mov
or
jmp
in
add
xor
pushf
adc
push
punpcklwd
and
js
inc
xor
es
test
pop
inc
pusha
pop
negl
push
or
jmp
in
testb
push
fsubr
sub
and
push
leave
imul
pop
add
xor
inc
sbb
pop
test
addb
mov
push
mov
or
dec
outsl
and
pop
call
add
inc
xor
mov
and
mov
jecxz
cld
hlt
fldl
push
aam
add
call
adc
aam
or
or
inc
in
fimuls
fsts
dec
clc
lock
ja,pn
std
mov
xor
insl
push
aas
insb
clc
push
mov
or
mov
roll
ret
mov
aaa
les
and
sbb
lods
add
out
mov
adc
or
push
movsb
pop
sbbb
jl
adc
nop
call
jne
decw
nop
or
mov
jno
xchg
lret
sbb
or
andb
mov
rolb
sub
scas
or
xchg
sbb
adc
or
jo
in
push
in
and
pop
pop
fstpl
daa
sbbb
aaa
hlt
cmp
leave
push
or
jo
clc
pushf
or
mov
dec
orl
cmp
xchg
sbb
push
popl
dec
or
cmp
sub
pop
jb
and
pop
add
mov
aas
cmp
roll
aas
jmp
movb
fcomip
addr16
jbe
cmp
inc
adc
sbb
add
or
push
and
push
add
cmp
push
dec
insb
pusha
test
push
das
xor
clc
aas
in
push
cmp
pushf
inc
aam
cli
mov
mov
xor
cmp
adc
or
aam
push
pop
arpl
inc
mov
sbb
adc
or
mov
lret
add
rolb
sub
in
shlb
in
arpl
lods
lock
xor
sub
mov
loop
daa
std
and
pop
stos
sub
nop
ss
pusha
dec
push
or
dec
arpl
cmp
jno
aaa
push
movsb
setno
ret
or
pop
daa
dec
idiv
inc
bound
adc
test
dec
incb
cmp
push
fisttps
test
sub
test
insb
dec
or
std
ljmp
cmp
out
pop
sub
notb
je
sub
je
inc
pop
add
sub
test
inc
xchg
es
sub
xchg
push
mov
mov
je
cmp
and
lret
inc
pop
imul
inc
push
daa
out
mov
test
add
jl
call
jne
jne
jge
movzwl
xchg
in
adc
and
rcrl
dec
roll
loop,pn
mov
and
jns
fcmovne
hlt
pop
aam
mov
and
test
adcl
xor
xlat
and
out
pop
cli
adc
xor
sbb
cmp
jae
arpl
sub
xchg
pop
inc
push
inc
xor
xor
jbe
call
fmull
mov
out
int
stos
std
mov
push
dec
jecxz
push
sub
mov
mov
testb
or
ds
enter
add
pop
ss
ret
xor
or
fsubl
dec
pop
jg
push
fsubrl
jno
loopne
mov
je
sbb
jecxz
jle
imul
pop
rorb
pop
call
ljmp
mov
sub
ljmp
lea
test
sbb
loope
arpl
pushf
pop
mov
out
adc
aaa
mov
adc
je
add
cli
adc
in
inc
nop
or
pushf
in
pusha
push
dec
jg
and
inc
mov
or
adc
ficoml
xchg
inc
push
xchg
fsubs
leave
mov
xchg
cmpsb
push
lret
sti
call
test
push
dec
mov
ss
mov
dec
outsl
les
push
add
add
je
adc
in
push
jmp
push
jecxz
fsub
sbb
inc
lret
lods
dec
or
push
movsl
pop
rol
iret
xchg
push
push
xchg
mov
sub
mov
inc
adc
mov
pop
xor
sub
cld
mov
pop
sub
in
movl
cmp
cli
mov
mov
cmp
mov
inc
inc
cmc
push
mov
pushf
mov
cwtl
pusha
loope
pop
lahf
push
xchg
test
andb
sbb
sbb
loopne
jb
push
je
xchg
or
ja
push
mov
dec
push
push
into
mov
aaa
pushl
jo
mov
ficompl
cmp
std
jmp
jge
xor
roll
xchg
jns
mov
sub
xchg
or
cmp
pop
or
xor
jo
mov
jp
xchg
mov
pop
pop
adc
pop
ret
filds
or
pop
std
out
xchg
pop
jo
jnp
inc
xor
xor
out
in
andb
ficompl
mov
ja
fistpll
mov
mov
inc
cwtl
sub
mov
inc
loope
in
pop
imul
xor
js
data16
mov
clc
pop
orl
pop
jno
jle
adc
pop
out
or
and
sub
sbb
cmp
xchg
xchg
pop
loopne
cmpsl
add
jmp
sub
mov
dec
xor
dec
pop
popf
xor
imul
add
inc
lds
or
dec
loopne
xor
ds
out
and
push
sbb
jmp
jge
mov
je
add
insb
inc
push
adc
aaa
pop
xor
sbb
push
inc
mov
dec
dec
fs
mov
out
xchg
jmp
mov
add
push
inc
jmp
cmp
jne
sbb
ss
jle
dec
test
loope
lock
sbb
sbb
dec
lock
jne
lahf
mov
xchg
jmp
sbb
cs
inc
sub
mov
jb
and
movb
pop
pop
push
cmp
stos
cmp
ss
adc
xor
and
lock
and
mov
lds
inc
js
ret
pop
icebp
and
sub
mov
mov
sbb
and
pop
pusha
int
dec
sbb
push
push
push
mov
scas
cmp
jb
outsb
add
mov
add
inc
mov
iret
clc
cmp
hlt
push
lods
push
lock
mov
in
push
js
iret
jnp
mov
ds
test
xor
repz
out
fdivl
inc
aam
jnp
repz
ror
inc
dec
enter
cmp
push
les
xor
jecxz
add
jge
cmp
in
cli
mov
cwtl
mov
daa
inc
enter
popa
shrb
pop
cmp
xlat
mov
cmp
xchg
add
and
in
movsb
mov
adc
xor
push
popf
xor
aas
and
shrl
daa
mov
stos
add
xor
int3
xor
or
inc
daa
dec
outsb
arpl
mov
lahf
or
push
add
dec
arpl
sbb
aam
cmp
test
addr16
testb
ss
adc
add
push
popw
cltd
inc
add
dec
add
iret
lds
cwtl
pop
orb
inc
insb
out
sub
xor
lds
jne
shlb
into
inc
mov
xor
sbb
push
mov
push
inc
jae
jmp
repnz
loope
mov
pop
pop
push
inc
ja
ja
enter
pop
dec
and
or
or
fidivs
sbb
xor
push
popl
popa
or
sub
leave
add
cs
mov
aad
rorl
mov
push
add
push
inc
ss
lcall
inc
push
dec
sahf
testl
mov
push
insl
outsl
fs
cmpsl
xor
or
mov
mov
or
ds
sti
jbe
or
push
pop
mov
sbb
adc
sbb
xor
jl
xor
or
jge
loope
ds
cs
push
add
inc
jmp
xor
ja
dec
into
divl
dec
inc
imul
inc
fs
js
aaa
in
inc
push
decb
pop
and
pop
in
push
xchg
add
or
sbb
add
adc
enter
pop
mov
inc
and
cmpb
push
xor
out
sub
out
push
jo
add
add
and
push
pop
cmp
add
xchg
mov
out
push
sbbb
pop
push
lock
xchg
and
mov
pop
adc
jp
loope
adc
dec
add
ljmp
add
or
ja
push
imul
or
inc
jp
dec
test
or
sbb
mov
mov
aas
jno
fists
xchg
pushf
cmp
bound
out
add
or
or
shrb
push
fstpt
orl
outsl
mov
insb
or
or
sub
cmpsl
dec
imul
enter
push
push
ljmp
inc
std
das
mov
pop
pop
inc
das
cmp
or
into
sub
sub
stos
or
fmul
fiaddl
push
popf
pop
pop
add
insb
or
pop
ja
sbb
cli
xor
rorw
adc
mov
dec
or
pop
or
cmp
outsb
fs
jns
jo
sahf
mov
mov
or
mov
or
imul
jge
jnp
adc
cmpsb
xchg
add
jo
cmp
add
add
clc
or
or
addr16
adc
adc
in
add
outsb
data16
adc
pop
cwtl
into
popa
icebp
and
gs
push
or
xor
jge
adc
or
xor
add
cmp
and
or
mov
mov
mov
mov
push
jb
rolb
adc
mov
sbb
mov
adc
adc
js
push
adc
addb
sbb
cmpsb
pop
and
push
ja
test
inc
add
or
add
cltd
mov
or
imul
or
iret
insb
add
ja
pop
or
xor
inc
popa
push
rcr
mov
xchg
adc
sbb
jne
jns
or
scas
or
mov
or
mov
add
addr16
push
push
dec
push
mov
add
add
push
sbb
and
ret
out
jb
neg
outsl
add
sub
sbb
sbb
add
adc
add
dec
mov
or
push
sub
pop
xchg
cwtl
dec
insl
fwait
or
push
testl
add
iret
xor
xchg
clc
jl
fistpl
xchg
sarb
loope
subb
mov
filds
sub
test
inc
call
lods
jle
push
xor
jg
insb
mov
mov
push
pusha
xchg
in
cwtl
inc
inc
mov
mov
xchg
sbb
xorb
xchg
pop
or
pushf
push
pusha
pop
xchg
popl
fwait
popa
jl
idiv
bound
pop
jns
imul
ffree
call
push
call
negl
mov
push
push
and
push
add
push
inc
add
repz
cmp
jmp
add
add
add
add
add
add
mov
ret
pop
dec
adc
adc
sbb
add
adc
push
out
insl
loope
inc
inc
add
js
pop
movsb
subb
xchg
loopne
or
adc
or
mov
and
push
decb
xchg
mov
mov
pushl
scas
ljmp
pop
lods
ljmp
stc
jmp
aaa
stos
xor
push
imul
rcl
jl
out
push
cmp
pushf
repz
outsl
enter
out
ds
sub
jb
mov
jae
je
adcl
xchg
test
push
push
pop
or
push
sbb
out
mov
push
or
dec
nop
mov
idivl
sti
xor
pop
test
pop
lcall
jge
imul
lock
repz
jnp
push
cmp
push
js
dec
into
xchg
cs
mov
ljmp
push
in
pushf
inc
or
in
xchg
mov
pop
and
shlb
adc
adc
jmp
dec
daa
notb
adc
add
pop
rorb
push
xlat
loope
inc
outsl
pop
sbb
cmp
mov
add
sub
test
rcrl
xchg
add
xor
push
adc
push
inc
inc
and
ds
or
ds
sbb
dec
mov
pop
adc
lret
push
xor
mov
push
in
jo,pt
popa
inc
dec
sahf
mov
mov
push
dec
loope
push
shr
dec
pop
adc
pop
pusha
ja
popa
fmull
add
xchg
inc
fstl
aam
pop
xchg
sbb
loope
xchg
xor
sbb
testl
pop
sbb
leave
push
sub
or
mov
pop
inc
jo
rcl
adc
movsl
or
push
aam
push
inc
hlt
test
lcall
repz
dec
push
jg
mov
sldt
sub
outsb
sub
or
or
cvtps2pd
cld
and
push
push
sub
add
sbb
jecxz
mov
inc
inc
jo
add
cmpsl
mov
je
hlt
xor
fsubs
lcall
sbb
enter
mov
mov
sbb
pop
notl
in
push
in
add
rorl
js
hlt
inc
in
xor
repz
aad
movsl
push
call
push
fldenv
inc
je
pop
or
adc
and
push
inc
mov
gs
mov
scas
jmp
push
and
repnz
and
mov
rcr
xor
iret
fwait
dec
add
dec
inc
pop
pusha
out
pop
sbb
and
or
pop
push
cmp
push
fimull
mov
mov
inc
pop
and
push
shl
rolb
icebp
and
or
push
sub
pop
ret
cltd
cmp
push
push
ss
int
or
sub
xor
xor
cltd
xlat
incl
push
sub
push
test
js
into
cltd
in
mov
pop
inc
dec
adc
sub
xlat
dec
jo
pop
cwtl
fwait
sub
pop
lea
or
cli
and
jbe
ja
popa
adc
stos
dec
dec
inc
cwtl
push
xlat
sub
mov
pop
cs
dec
adc
gs
jnp
push
pushf
jecxz
pusha
dec
dec
sahf
and
das
push
aad
fmull
mov
es
fwait
wrmsr
mov
insb
pop
ss
imul
push
add
xor
or
jae
cli
fiaddl
mov
bnd
fdivrl
int
sub
addl
cmp
pop
jae
mov
xor
popl
fwait
mov
das
xor
mov
and
rolb
push
fisttpll
add
int
nop
sbb
popf
mov
push
sbb
dec
cltd
add
icebp
mov
les
imul
dec
in
fistps
cmp
xorl
sbb
les
add
sbb
dec
std
cmp
aad
mov
mov
sub
int3
pop
jg
sub
lcall
nop
cmpsl
pop
jo
push
inc
adc
push
out
dec
cmp
push
add
test
push
rcrb
cwtl
sbb
fimuls
stos
or
adc
add
xlat
dec
ds
mov
test
push
inc
aas
lds
cwtl
incl
mov
insl
sbb
cwtl
out
adc
enter
or
dec
push
sbb
push
in
movsb
jg
xor
push
pop
sub
or
xchg
bound
xor
sar
sti
or
cwtl
push
mov
and
inc
mov
xlat
sbb
fadds
into
je
push
dec
pop
clc
jo
and
inc
inc
leave
ret
rolb
cmc
insb
loopne
add
pop
mov
mov
inc
fcomip
mov
dec
mov
pop
dec
or
jp
adc
lds
push
outsl
inc
mov
dec
lock
adc
xchg
adc
or
out
jo
fisttpll
inc
mov
ret
inc
sbb
sarb
rolb
adc
rolb
sbb
mov
loope
lcall
fs
test
faddp
out
cmp
xchg
dec
inc
inc
pop
lds
insl
mov
and
addb
sbb
sub
inc
loopne
push
frstor
xor
roll
dec
push
jo
jbe
rol
test
push
inc
push
into
enter
cmp
xchg
mov
fmuls
dec
ja
add
loopne
mov
jo
push
insl
dec
fisubrs
int3
cmp
cmp
loopne
icebp
xor
enter
inc
push
rorb
jmp
dec
dec
lahf
scas
popf
cs
adc
push
adc
cmp
pop
frstor
inc
clc
js
lds
addl
and
jbe
sbb
into
rolb
pop
in
pop
jnp
inc
orl
push
roll
jl
loopne
mov
pop
push
mov
aaa
mov
mov
icebp
aam
inc
pop
sbb
lds
mov
pop
movsb
push
fcompl
aas
in
mov
cmp
or
test
sub
inc
and
or
or
test
mov
inc
push
fdivs
mov
out
insb
add
sbb
mov
es
inc
jmp
ss
pop
sub
or
mov
daa
in
out
nop
mov
inc
and
mov
cmp
pop
or
ss
scas
adc
and
and
mov
xchg
js
inc
cwtl
and
cwtl
test
mov
inc
je
dec
imul
sub
jne
ds
xor
clc
scas
loopne
xchg
nop
mov
and
fisubs
scas
push
inc
adc
xchg
sbbl
sahf
push
aaa
lea
pop
aad
test
andps
adc
mov
mov
stos
lcall
test
dec
insb
movsb
in
addr16
adc
cmp
aam
mov
testl
or
je
and
sbb
push
inc
pop
mov
jl
or
lahf
mov
sub
sub
ja
push
gs
stos
adc
cwtl
inc
push
adc
and
js
mov
sbb
mov
je
adc
fwait
mov
mov
adc
push
push
xor
adc
xchg
push
dec
mov
jbe
dec
into
jae
hlt
mov
and
in
xor
and
lods
add
lock
clc
dec
and
mov
cmp
mov
les
lock
jno
adc
adc
cmp
movsb
stc
lods
adcl
mov
imul
mov
pop
ret
add
sbb
inc
sar
and
pop
push
inc
rcll
mov
mov
or
or
push
cmpsl
dec
loope
or
inc
inc
je
mov
push
sub
push
cmc
test
mov
in
jbe
cmp
mov
mov
sbb
enter
mov
cmp
test
jge
lahf
je
mov
inc
pop
mov
add
dec
je
push
cmpl
adc
jbe
pop
cwtl
loopne
loopne
enter
xchg
js
xchg
push
lcall
mov
pop
mov
fsubs
sbb
add
repz
mov
xchg
rorb
sub
test
cmpsb
je
sbb
loope
aad
mov
enter
inc
test
test
sbb
or
addr16
loopne
mov
mov
push
sub
std
lock
xchg
out
pop
push
add
add
or
adc
push
mov
pop
sbb
inc
out
jo
loopne
pop
rolb
xor
mov
xor
nop
das
ja
cmp
jae
testb
sbb
pop
lcall
mov
add
or
add
add
or
lahf
shlb
imul
pop
pop
insb
call
sbb
cmpsl
mov
add
pop
cwtl
or
shll
fstps
mov
into
push
sub
int
hlt
or
stos
mov
mov
push
pusha
add
dec
sbb
sub
adc
xchg
cmp
aad
jno
pop
dec
test
lds
sbb
push
pop
mov
or
mov
add
movb
push
adc
and
or
fs
sub
sub
push
inc
aas
mov
jo
mov
hlt
dec
loop
add
mov
sbb
add
add
sub
adc
add
js
or
mov
and
movntps
add
pop
sbb
ljmp
mov
outsb
sub
add
pop
das
jecxz
nop
and
sub
rcr
add
sub
add
inc
sub
or
jle
inc
popa
mov
push
sti
int
sub
push
inc
add
add
mov
or
add
fiadds
leave
xlat
dec
inc
sahf
fistl
inc
lret
add
lods
inc
dec
inc
js
xchg
dec
incb
xlat
dec
fsts
mov
sbb
inc
lea
outsl
int
inc
inc
pop
mov
rcrb
lods
push
xchg
push
cmp
inc
sti
sbb
pop
jmp
sub
inc
pop
adc
mov
out
add
cmpb
adc
call
fstl
scas
fsubs
insl
dec
icebp
jp
out
add
and
add
cmpsb
add
lahf
pop
add
jmp
rol
jne
mov
fcomps
add
sbb
jb
sbb
lret
and
mov
adc
cmp
js
dec
push
ds
sbb
test
adc
in
mov
fucomi
arpl
je
inc
add
jmp
jge
dec
cli
test
or
and
push
pop
ret
ret
repnz
push
mov
insb
imul
ret
adc
out
sbb
jmp
adc
inc
and
iret
pop
clc
cmpsb
mov
cmp
push
sub
inc
addb
in
cmp
push
add
lods
loop
push
adc
mov
movswl
xchg
ror
push
rcll
lea
lods
movsb
mov
sub
sbb
pop
adc
add
inc
pop
shll
sbb
adcl
insl
mov
fs
fcmovb
inc
scas
subl
cmp
pop
out
push
mov
jmp
inc
inc
or
rorb
add
cmp
cs
adc
jno
arpl
insl
mov
das
mov
scas
repz
cmpb
and
mov
and
xor
sub
xor
sbb
pop
out
xlat
fisttpll
cmp
dec
push
adc
push
sti
ret
dec
in
xchg
fnstenv
and
mov
xchg
mov
or
mov
and
or
ret
movsb
push
stos
aas
push
sub
pop
or
je
ss
jmp
enter
sub
inc
or
inc
push
in
or
outsl
mov
into
pop
ja
cld
movhps
push
ss
push
outsb
cmpsl
stc
cmp
mov
sbb
and
icebp
cmp
popa
and
mov
add
and
lods
cwtl
sarb
sti
xchg
js
mov
jle
push
popl
negb
jmp
test
push
adc
shll
sbb
pop
mov
sub
xor
adc
aas
xorb
mov
push
and
or
adc
jne
cmpsb
adc
xchg
mov
cmpsb
mov
mov
faddl
mov
daa
sti
add
add
inc
das
sub
or
inc
sub
daa
pop
mov
inc
pusha
jl
shrb
fisubs
cld
jl
mov
xchg
inc
pop
and
and
jle
sbb
je
inc
xchg
aad
push
jp
addr16
fs
and
test
cmp
and
out
ss
pop
das
or
inc
push
mov
adc
insb
pop
mov
adc
push
add
stc
sub
add
push
in
movsb
pusha
add
shlb
int
sbb
push
cmp
nop
nop
jl
mov
xor
sbbb
xor
ds
js
fwait
or
mov
pop
mov
mov
test
jge
lock
add
ja
les
orl
ret
cmp
lcall
arpl
and
inc
add
jge
inc
xor
hlt
sbb
sbb
and
pop
rcll
sub
and
sarl
sub
inc
enter
sbb
test
xor
int
enter
sub
shrb
or
adc
lea
push
mov
sbb
js
nop
mov
pop
mov
push
inc
dec
jne
repnz
stc
push
mov
clc
subl
inc
in
cwtl
js
pop
loope
pop
jae
inc
ficoms
pop
adc
dec
inc
lret
out
testb
inc
call
push
ljmp
add
dec
push
lret
mov
adc
loop
mov
enter
inc
stos
push
mov
enter
xchg
mov
into
push
push
ret
ret
pushf
cwtl
jno
xor
ret
xchg
jg
adc
inc
xchg
jl
cs
fsubrs
aas
push
bound
rolb
les
adc
cmp
arpl
push
sub
movb
mov
insb
call
or
xchg
frstor
stos
and
and
adc
or
out
pop
mov
jmp
mov
mov
push
mov
daa
and
test
add
lods
cmpsb
pop
lahf
mov
ret
sub
lock
lret
mov
xor
jo
mov
add
mov
pushf
add
idiv
orb
sub
fsubrl
fcmovnb
sub
aaa
inc
cmp
pop
add
dec
lock
jne
mov
mov
push
mov
in
push
add
add
mov
pushl
adc
cmpl
dec
jg
cmpl
adc
fidivrs
xchg
pop
je
mov
jo
or
por
sbb
or
data16
out
psubw
inc
shr
or
cwtl
popa
and
testb
test
dec
mov
sub
lret
push
inc
pop
aaa
add
ffree
sbbb
loope
sbb
xchg
push
or
fistpl
and
pop
dec
nop
and
pop
outsl
or
roll
cmp
mov
xchg
push
pusha
push
rclb
jne
addr16
lahf
lods
push
sbb
add
mov
jb
cmp
loopne
cld
movsb
in
ljmp
in
rorl
gs
sbb
aam
and
sbb
dec
lea
ja
adc
mov
push
lea
push
or
sarb
ds
push
outsb
adc
xor
jg
std
sub
lods
stos
cld
outsl
or
lds
sbb
out
fstp
sti
in
or
pop
mov
mov
pop
mov
dec
ja
mov
dec
xor
and
ss
or
sbb
insl
scas
mov
pop
mov
lcall
jns
jge
and
xchg
ss
adc
xchg
jle
daa
test
mov
and
add
fcompl
loopne
or
lods
adc
dec
cmp
or
shll
in
add
dec
sub
sub
adc
lods
push
popf
mov
incl
mov
mov
cld
rcrb
add
dec
je
cwtl
add
dec
data16
leave
inc
dec
addl
sbb
and
jge
int
decl
push
cmp
pop
add
imul
or
fucomi
adc
jne
sbb
or
adc
push
das
out
imul
lret
pop
jns
or
mov
push
inc
sbb
leave
cli
push
in
or
mov
jg
mov
das
xor
je
ret
push
out
cmp
jge
and
inc
mov
popa
test
and
fadds
mov
and
cmp
or
icebp
xlat
mov
aaa
inc
jl
call
push
cmp
inc
dec
inc
mov
dec
mov
or
ss
pop
jb
xor
push
stos
adc
popa
push
xlat
cmpsb
add
add
pop
shlb
popf
adc
mov
and
fnstenv
mov
push
mov
mov
push
les
lock
jmp
xor
cmp
xchg
mov
dec
outsl
add
in
adc
push
test
orb
inc
mov
or
jno
sbb
jge
mov
add
sub
mov
add
inc
movsl
rcrl
in
jmp
and
lret
push
mov
xor
inc
jmp
cwtl
xor
cmp
mov
inc
inc
sbb
xchg
js
adc
rep
or
testb
mov
mov
daa
fbstp
and
sub
xor
adc
addr16
mov
lock
pusha
les
pop
dec
fiaddl
and
jmp
rorb
xor
orl
adc
mov
pop
andl
jnp
push
clc
loopne
mov
sub
out
mov
subl
or
or
subb
add
loope
add
or
pop
push
xor
cmpsl
ret
mov
fndisi(8087
es
sub
andb
into
ret
cmp
adc
mov
shll
mov
or
mov
cmp
and
push
inc
shrl
stos
cmovno
orl
dec
and
cld
orb
rcrl
ja
andl
insb
ljmp
pop
out
add
outsb
sub
or
xchg
sub
mov
aas
jmp
jb
xchg
fwait
mov
pusha
or
adc
mov
jo
cmp
jnp
mov
sbb
lock
mov
xlat
out
sbb
cmpsb
sbb
aas
pop
or
and
cmovg
fsubs
mov
scas
dec
xor
mov
arpl
or
aad
and
outsb
xchg
rorb
inc
pop
mov
sub
es
pushf
mov
xchg
inc
mov
lret
neg
out
and
inc
leave
xchg
or
fldt
or
cmp
sub
add
add
inc
mov
and
in
xchg
sahf
push
filds
add
sbb
ja
xor
das
sub
fidivs
movsl
sub
or
js
add
call
insb
dec
jp
jle
jne
mov
pop
iret
cs
add
xchg
cli
mov
xchg
sbb
fcompl
cmp
jmp
cmp
mov
jo
pop
and
pusha
dec
add
mov
xlat
xchg
add
les
xor
lcall
mov
in
outsb
adc
call
hlt
sub
push
xchg
movsl
pop
xchg
mov
add
xchg
loopne
sub
repnz
jo
dec
test
sahf
jle
adc
push
jl
jge
js
pop
das
daa
push
fiaddl
jo
mov
fcomps
mov
cmp
stos
xchg
in
pushf
inc
pop
dec
xor
cmp
call
and
dec
jns
sub
add
and
jo
add
and
push
push
adc
dec
mov
sbb
sub
and
push
push
push
push
push
and
outsl
fldl
add
iret
sub
and
jbe
movsb
mov
mov
popa
jo
or
sub
mov
pop
sub
adc
xchg
adc
mov
xchg
ljmp
push
pop
xor
mov
add
or
and
sbb
nop
xor
dec
inc
loope
inc
das
xchg
mov
adc
ja
mov
dec
lahf
dec
sbb
xor
outsb
outsl
jb
sbb
dec
pop
sbb
sub
lahf
mov
and
fbld
addb
mov
sub
test
dec
push
pop
imul
sub
data16
sahf
xchg
pop
mov
mov
or
ss
push
sub
call
scas
add
jo
sbb
mov
test
stc
xor
loopne
pop
cld
mov
ret
jne
std
aas
cmpb
mov
pop
aam
xchg
and
mov
test
mov
sbb
xchg
xor
jge
xchg
xchg
cmpb
sbb
cmpsb
adc
add
xor
ret
outsl
inc
sbb
ret
mov
and
push
fdivl
rcrb
xchg
jge
or
pop
movsb
add
mov
fldenv
pop
aas
mov
cmp
lods
xchg
mov
add
add
enter
sbb
frstor
rclb
lods
mov
test
mov
into
jecxz
mov
in
lock
xchg
aam
cmp
add
dec
jnp
add
push
mov
popa
dec
sbb
repnz
cli
insl
pop
sub
fisubrs
bound
xor
jg
test
gs
sahf
mov
jl
les
lock
add
test
xor
push
push
cmc
ret
repz
push
sub
jb
xlat
das
call
adc
cmc
xor
call
jbe
xchg
inc
mov
loopne
js
aaa
inc
pusha
mov
subl
sbb
cmp
je
adc
mov
jecxz
adc
cmpsb
aam
mov
dec
and
addr16
push
cltd
fdivl
jno
inc
adc
outsb
pop
imul
cld
fsubrs
loopne,pt
mov
or
mov
mov
push
sbb
insb
add
nop
inc
push
lahf
mov
testb
sbb
mov
jmp
andb
std
pop
idivb
pop
push
daa
xchg
pop
ljmp
andl
pushf
or
pop
cmp
daa
loope
adc
aaa
jmp
lea
gs
add
mov
push
inc
adc
or
lods
scas
ljmp
hlt
xchg
cmp
fs
add
aas
add
mov
adc
dec
jmp
imul
jp
jo
inc
jg
je
and
mov
or
mov
push
or
test
ja
pop
pop
mov
sbb
daa
stos
jmp
test
fwait
es
dec
cld
cmp
jne
sbb
and
sbb
aas
inc
xchg
sub
add
pop
ret
sbb
cmp
pushf
loope
or
sbb
outsl
insl
xor
pop
sahf
sbb
repnz
sbb
gs
out
mov
inc
adc
or
and
mov
dec
push
xchg
mov
dec
inc
xlat
enter
out
add
test
addl
mov
or
sbb
inc
sub
or
sbb
movsb
push
lea
test
popa
add
inc
xlat
xchg
adc
cwtl
cmp
orl
jnp
cmp
or
jo
adc
jne
adc
sbb
dec
in
lods
xorl
xchg
pop
push
ljmp
out
in
in
pop
mov
pop
push
sub
je
ss
or
test
sbb
xor
jae
subb
hlt
nop
add
adc
or
ret
or
dec
inc
leave
or
push
hlt
cmp
mov
inc
and
pop
xor
clc
push
rorb
or
adc
adc
adc
lock
dec
int
xchg
sbb
and
inc
sub
mov
xchg
pop
mov
dec
mov
and
dec
xchg
or
sub
lock
out
pop
and
iret
jmp
sbb
idivb
cmc
fcoms
data16
je
pop
pusha
in
cmpsb
gs
xlat
or
jno
addr16
add
push
sub
arpl
aam
mov
mov
fs
inc
add
mov
lock
dec
and
sub
lock
cli
push
cmp
aas
sub
xor
add
xchg
push
cmpb
sbb
inc
xchg
mov
push
and
xchg
push
pop
and
scas
popf
ds
fidivl
add
pop
mov
sub
roll
sub
push
dec
aaa
add
js
out
fistpl
shr
add
lea
popa
fs
rcrl
mov
mov
jo
and
mov
add
mov
inc
jne
cmp
xchg
mov
orb
mov
nop
or
test
fsts
out
mov
in
out
mov
repz
cwtl
lret
sub
mov
or
inc
adc
pop
js
add
sub
jle
sub
push
adc
mov
push
push
push
or
jl
fistpll
and
insb
sbb
daa
pop
sbb
or
xor
and
pop
decl
fistpll
xlat
rorl
mov
pop
mov
pop
pusha
ljmp
adc
pushf
add
aad
incl
lods
jno
out
fwait
jno
push
stc
sbb
repz
jp
aad
sbb
sbb
rcr
jle
icebp
adc
fcomps
cwtl
mov
or
aas
push
je
adc
inc
js
imul
sub
ret
jg
mov
and
mov
jl
mov
arpl
xor
pop
xorl
test
cmpsb
mov
popa
fistpll
xor
dec
pop
mov
aaa
cmp
sub
sbb
cli
push
mov
add
insl
jmp
sbb
cmp
out
push
ret
test
loope
outsb
movsl
and
cld
push
sbb
adc
or
aaa
cmp
and
cs
sbb
xorl
movl
lods
mov
and
cmp
and
add
add
push
sbb
add
cmp
inc
decl
cmp
mov
or
cmp
popa
iret
cmp
into
and
push
xchg
js
lcall
mov
out
pop
pshufw
inc
inc
fisttpl
pusha
bound
stc
popa
mov
adc
sub
iret
push
ret
mov
mov
or
inc
mov
jmp
mov
add
add
add
setno
pop
orl
add
dec
daa
add
int3
sub
negl
aad
add
xor
pop
testl
mov
mov
aam
add
movsw
aam
ja
shll
es
in
dec
jmp
stos
cmp
outsb
jmp
sarb
cmp
popa
in
cmpl
add
aad
int3
lock
imul
mov
into
xchg
int3
mov
jnp
ficoml
mov
xor
inc
imul
out
push
inc
adc
jne
out
lods
inc
cmp
cmp
ds
mov
pop
movsb
mov
inc
mov
dec
pop
pop
lods
jo
cmp
popa
loopne
imul
cmp
or
inc
daa
fdivs
xor
movsb
jno
push
sub
lock
mov
jne
ljmp
loop
pusha
dec
arpl
or
jo
adc
out
es
testb
lods
and
sub
dec
or
cmc
push
mov
sbb
adc
push
dec
je
add
xchg
ret
mov
je
cmp
push
arpl
jmp
int
mulb
jl
sub
imul
imul
mov
or
inc
enter
out
push
loopne
or
pusha
or
push
ret
outsl
cmpsb
mov
push
sbb
mov
ret
testb
xchg
adc
loopne
or
jo
call
ss
and
pop
das
orb
sbb
in
cwtl
cmp
addl
sbb
rorl
inc
xchg
push
push
jo
jg
add
or
scas
add
pop
lcall
mov
xchg
lods
inc
cld
aad
cmp
jne
mov
das
xchg
mov
ret
or
inc
pop
rolb
fisubrl
in
cs
inc
loop
xchg
jmp
mov
jo
sub
mov
pop
loope
and
sbb
sub
fs
xchg
call
mov
aam
icebp
divl
jo
loop
jp
push
and
fwait
dec
adc
inc
rolb
mov
inc
ja
add
outsb
mov
mov
push
cmp
jbe
data16
loope
push
cmp
shll
push
out
jae
adc
scas
push
outsb
fwait
ret
push
ficompl
jge
pop
sub
xor
movb
push
inc
jo
mov
in
fbld
jne
jl
imul
xchg
or
jl
push
and
not
ds
pop
add
push
cmp
and
mov
call
pop
xchg
dec
ds
sti
jg
popa
or
andps
ret
shll
scas
push
xor
movb
xchg
add
xor
sub
in
add
add
dec
pop
test
adc
push
inc
arpl
in
mov
dec
adc
test
mov
mov
les
cltd
cmp
mov
or
inc
decl
adc
out
popa
mov
aaa
jne
mov
jbe
add
js
cmp
sbb
pop
add
mov
adc
andl
inc
dec
cld
jne
cmpb
pop
out
roll
push
iret
cmp
mov
sub
or
xor
sub
pusha
cmpb
test
cltd
add
insb
add
test
rorb
mov
maxps
outsl
in
jns
daa
push
inc
dec
jae
std
jmp
sbb
rcrb
inc
and
jns
rclb
testb
out
pop
and
dec
pop
sub
mov
sbb
dec
cmpsb
ss
push
or
xor
add
mov
lods
lea
mov
adcb
or
or
fisubs
xchg
cmpb
hlt
fdivs
sub
neg
ffree
add
add
xchg
js
sbb
dec
fldl
or
shrb
daa
push
je
sub
add
cmp
add
jbe
daa
js
ret
and
adc
adc
fidivrs
enter
add
push
or
add
sbb
scas
jge
jmp
or
or
call
or
dec
push
setg
add
sub
dec
pop
push
popa
jne
sub
inc
push
add
and
out
inc
jg
or
push
test
incl
xchg
mov
push
jmp
mov
jns
es
test
shlb
mov
es
nop
fdivrs
and
mov
add
leave
jb
lods
cmp
nop
pop
sbb
mov
mov
subl
rcr
imull
mov
push
xor
push
call
pop
pop
sti
inc
aas
add
inc
dec
dec
inc
dec
push
adc
dec
lahf
jo
mov
sub
mov
sub
adc
jge
or
sbb
test
cmpl
mov
dec
insl
mov
mov
xchg
js
fmull
loopne
cmpsb
cmp
or
call
adc
adc
sbb
addl
xchg
mov
inc
data16
add
imul
scas
orb
cwtl
fwait
push
mov
cli
mov
fidivs
andl
icebp
jecxz
icebp
call
jbe
les
jne
bound
dec
mov
add
out
and
iret
je
mov
push
cmp
mov
jg
inc
and
inc
cmpl
jne
pusha
adc
sbb
push
push
cs
mov
mov
or
dec
cmc
repnz
cmp
sub
cli
stos
dec
cmp
lea
inc
cmp
je
es
imul
sbbl
movsl
cmpsb
nop
sub
nop
mov
mull
jne
cld
sub
hlt
mov
and
lods
addr16
xchg
sbbb
add
mov
sbb
dec
mov
xchg
xor
scas
dec
cmp
lahf
sahf
cs
lea
inc
pop
xchg
ss
outsl
fcomps
pop
insb
stos
incl
adc
jne
subl
repz
adc
sub
sbb
mov
push
les
bound
sbb
lods
inc
adc
sub
notl
jmp
and
sub
add
lret
fcompl
push
incl
push
or
mov
arpl
push
mov
addr16
cmp
push
ss
cld
sub
mov
adc
mov
adc
pop
orb
cmp
iret
dec
add
ret
in
fwait
sub
or
nop
insl
flds
jmp
fwait
pusha
in
lods
push
adc
add
sarl
inc
mov
or
scas
jmp
xor
cmp
jbe
nop
jb
inc
dec
loope
add
sbb
jne
pop
negb
fs
fs
xchg
aam
and
shlb
mov
aam
iret
mov
les
add
roll
cmpl
aaa
mov
sahf
and
loope
push
das
push
add
adc
and
push
add
pop
inc
mov
in
jle
xor
pop
jae
dec
das
mov
jg
and
or
test
xchg
scas
mov
lock
xchg
ret
mov
xor
shll
mov
xchg
or
sub
call
fistpl
add
and
int
movsb
push
dec
loope
jge
add
ljmp
arpl
cmp
push
push
and
rcll
mov
dec
scas
lea
subb
adc
or
sahf
push
cli
and
pop
mov
in
sti
dec
inc
cmpl
inc
inc
je
pop
sbb
cmpb
andl
jmp
shlb
je
test
popl
mov
xor
sarb
call
xor
sub
dec
sub
adc
cs
push
cmp
sub
bound
adc
inc
iret
mov
adc
add
inc
push
jle
add
or
jb
sub
xor
and
movsb
and
jle
mov
xchg
lret
rolb
fimuls
or
popf
int3
xchg
sbb
mov
dec
ljmp
pusha
pop
jb
jg
lahf
daa
or
sub
sbb
push
sub
sbb
cmp
je
push
arpl
lahf
test
inc
lahf
pop
cmp
add
insb
jmp
fildl
mov
dec
mov
enter
mov
inc
dec
movsb
jp
mov
test
add
cmp
sbbl
in
arpl
mov
jne
arpl
cmp
or
push
stos
push
ds
shlb
aaa
sarb
int3
imul
lret
push
scas
iret
dec
nop
icebp
sub
push
mov
add
lock
dec
dec
popa
or
and
dec
rorl
pop
loopne
test
add
insl
iret
lods
xor
adc
and
roll
xchg
movsb
sub
test
mov
mov
xchg
adc
movl
into
lods
and
inc
cmpxchg
rcll
xlat
pop
out
sub
add
scas
data16
int3
test
and
push
adc
jbe
fwait
add
aam
icebp
insl
add
loopne
push
inc
jo
sbbl
ss
sbb
add
xor
jmp
dec
add
push
outsl
push
inc
aaa
add
push
sbb
out
stos
fildl
aad
nop
push
xor
or
mov
pop
js
mov
fcompl
stos
fwait
add
lret
inc
lock
push
rcrb
mov
in
pop
addl
pop
enter
pop
loope
pop
stos
mov
adc
js
xchg
lods
nop
pop
outsl
dec
inc
and
and
je
bound
outsb
add
sbb
add
inc
inc
test
sahf
sahf
lds
mov
mov
adc
pop
fdivl
int3
test
test
cmp
roll
mov
inc
rolb
sbb
mov
pop
test
shlb
mov
add
cmpl
fisubrl
rolb
mov
add
inc
fsubl
xor
or
aas
and
mov
sub
movb
pop
push
inc
pop
lods
pop
cmp
push
cmpsb
rcrb
jecxz
sub
ljmp
add
in
push
addl
mov
jg
fists
mov
pusha
push
jno
xor
mov
je
shl
cmpl
xchg
in
or
lea
mov
loopne
mov
mov
push
adc
sbbl
adc
je
aad
jp
fsubl
or
or
jmp
or
adc
repnz
add
push
jecxz
pop
fdivl
fildl
sub
sbb
xchg
int3
js
adc
testl
pop
cwtl
mov
xor
cmpsl
call
and
or
adc
loop
dec
testb
pop
out
dec
jmp
dec
les
dec
pop
or
subl
xchg
xor
adc
iret
mov
and
in
cmp
push
add
or
add
and
adc
dec
cmp
arpl
inc
or
mov
out
inc
aaa
push
and
add
and
adc
test
mov
adc
push
dec
jl
add
hlt
dec
sbb
leave
neg
mov
push
rcl
out
scas
sbb
add
sbb
push
imul
inc
inc
sar
xor
adc
adc
mov
outsl
pop
push
xchg
add
cmpl
rcll
popa
ret
pop
fimull
sub
int
mov
add
lods
jne
xchg
jne
outsb
adc
xchg
icebp
pusha
or
sbb
xchg
aas
scas
ret
push
je
ret
cmp
adc
adc
mov
dec
mov
mov
mov
or
and
stc
in
add
lods
sbb
add
mov
fisubrl
jno
lret
fcompl
push
mov
clc
movsb
mov
pop
add
insb
pop
fcmovu
jbe
cltd
adc
and
dec
insb
loopne
outsb
cmpsb
jne
addl
xchg
test
mov
out
jmp
push
sub
into
jmp
add
lock
jecxz
imul
jg
movups
jp
imul
sub
dec
push
enter
dec
in
adc
dec
nop
bound
sbb
adc
std
add
or
aad
rcrl
inc
and
and
sbb
insb
shlb
in
popa
xchg
adc
icebp
test
add
sub
push
dec
mov
cld
paddb
sub
mov
mov
sbb
cmpb
and
xchg
sub
add
or
rolb
bound
and
out
jg
pushf
inc
dec
cmp
loopne
add
or
enter
ljmp
loopne
mov
or
scas
iret
mov
and
dec
xor
adc
and
fiaddl
push
and
or
mov
xor
or
call
inc
setge
sub
xchg
sbb
inc
xchg
nop
mov
lahf
cmpsb
and
sub
bound
jmp
dec
xchg
imul
mov
inc
nop
lods
xor
or
add
sbb
add
clc
sbb
jg
inc
repnz
ret
or
add
add
bound
push
add
or
add
ja
scas
das
push
add
dec
xchg
add
fadds
push
ss
xorl
jne
pop
aas
xor
subb
dec
sar
movsb
push
enter
add
mov
push
fdivs
or
xor
sbb
shlb
push
bound
sarb
or
int
enter
aas
dec
fstl
xchg
pop
sub
jecxz
mov
imul
push
scas
ret
add
lret
mov
into
or
pop
shll
pop
jne
pop
push
pop
movsl
or
push
orb
ret
jmp
xorb
lsl
bound
xchg
xor
jb
mov
cmp
inc
pop
push
sub
test
mov
insb
pop
loop
adc
push
jne
cltd
or
cmc
loopne
dec
jmp
mov
inc
cmp
sub
dec
cmp
sbb
rorb
add
add
push
pop
push
push
adc
push
sti
mov
jmp
imul
jb
pop
mov
scas
imul
add
insb
test
or
or
or
dec
lahf
pop
loope
pop
push
orl
jmp
imul
and
mov
pop
cltd
mov
dec
adc
je
push
and
sbb
adc
call
jl
sti
push
ss
mov
cmp
or
outsb
std
jmp
mov
or
jmp
insb
mov
test
add
push
roll
jno
mov
xchg
sbb
imul
ja
ds
shlb
mov
pop
int
lock
rcrl
pusha
sub
jge
xchg
sbb
adc
mov
dec
sbb
int
shrb
adc
stos
xlat
loopne
jge
add
push
ds
dec
mov
incb
pushf
mov
insl
loope
and
and
loopne
cmpb
hlt
lods
clc
jmp
or
jmp
sub
loop
nop
xchg
adc
out
and
nop
jmp
mov
adc
sbb
jne
xor
or
outsl
addb
and
push
icebp
add
add
rcrb
sarb
int
add
sub
push
int3
and
fstl
stc
mov
inc
fldt
or
xor
and
sbb
test
add
jmp
imul
push
cwtl
sub
sbb
adc
xor
ss
sbb
shl
jg
or
mov
xor
aaa
adc
push
add
pushaw
push
jmp
push
ljmp
and
xchg
lahf
loopne
orl
push
sbb
inc
loopne
je
or
add
nop
or
loopne
adc
push
adc
out
add
sbb
loop
sbb
add
add
add
push
or
dec
test
daa
fstps
xor
dec
scas
data16
dec
mov
cwtl
gs
mov
and
cmp
out
sub
in
sub
inc
popf
in
incl
lahf
mov
js
xchg
stos
paddq
cmpb
imul
mov
add
in
in
add
repnz
outsl
sbb
mov
xor
ret
xor
push
and
ret
shlb
add
mov
sbb
outsl
cmp
aad
jl
cmp
cmp
jo
inc
pop
je
ret
and
xchg
scas
or
adc
push
into
shlb
push
sarb
lcall
shlb
mov
movsb
mov
push
or
stc
filds
test
mov
inc
addb
and
scas
add
xor
xor
add
insl
sbb
jb
pop
insb
shlb
lods
dec
faddl
push
mov
lea
dec
xor
xor
loope
mov
mov
rcl
add
mov
shl
fistl
loopne
sarb
dec
add
cmp
test
cli
xor
das
jne
mov
les
mov
in
inc
repz
rorb
pop
lock
mov
jae
pop
test
insb
dec
fwait
adc
mov
mov
loop
xor
mov
stos
ds
mov
sbb
sbb
popa
dec
adc
test
scas
mov
dec
decl
or
lock
cltd
and
je
push
and
nop
je
adc
xlat
sbb
lock
cmp
test
pop
push
and
and
dec
sbb
jl
sub
inc
push
pop
add
aas
das
notl
scas
ret
leave
or
sub
subb
xchg
push
movups
clc
or
mov
mov
mov
inc
shll
xlat
mov
test
sub
shll
inc
inc
jmp
push
xchg
nop
jo
or
test
out
adc
sbbb
xlat
sub
dec
test
jmp
mov
add
ljmp
mov
push
and
push
dec
movsl
ret
js
int
and
call
addr16
mov
ja
je
testl
orps
sub
arpl
mov
movsl
int3
mov
xchg
call
insl
leave
sub
mov
add
insl
inc
mov
jmp
and
orb
test
jnp
cmc
adc
pop
loopne
nop
aam
push
les
sub
paddw
es
lret
xchg
push
dec
mov
call
mov
les
pusha
sub
or
push
mov
or
mov
stc
icebp
ds
or
cld
into
xchg
loopne
add
movsb
rcl
mov
adc
dec
or
add
inc
dec
or
mov
or
xor
add
dec
or
js
jno
movsb
add
adc
ja
mov
add
push
lar
fsubs
or
pusha
jecxz
ljmp
mov
mov
dec
xchg
and
dec
lock
jbe
fiadds
mov
pushf
sbb
fnstsw
in
mov
sbb
push
insb
and
xchg
add
ja
fs
lahf
mov
xchg
movsb
insl
pusha
sbb
add
es
xchg
push
movsb
stos
lahf
mov
inc
rcrl
int3
dec
clc
or
xor
sbb
pop
fadds
mov
xchg
mov
xlat
int3
shlb
or
pop
mov
mov
cmpsl
daa
jge
je
fadds
jle
out
xor
cmp
xor
test
xorl
pop
scas
loope
dec
cmp
clc
sub
call
adc
or
pusha
std
and
inc
sbb
push
or
jge
add
roll
inc
mov
loop
pop
mov
rolb
testb
mov
sti
push
sub
loop
xor
push
and
cld
pop
xchg
sub
sbb
dec
push
cld
and
and
cld
sbb
std
mov
nop
adc
mov
fs
inc
in
cmp
pop
push
mov
aad
subl
pop
pop
js
orl
mov
iret
add
mov
sbb
push
mov
addr16
or
lahf
mov
fidivrl
sub
pop
pop
andb
pop
adc
jg
add
enter
loopne
adc
mov
xor
movl
sbb
jp
mov
cwtl
test
adc
fs
es
sbb
inc
es
jl
adc
sub
dec
subl
push
inc
imul
xor
pop
and
add
xor
add
popa
hlt
xchg
add
pop
adcb
es
leave
lidtl
inc
cmpsl
sarb
jne
fdivrs
adc
daa
mov
dec
test
dec
daa
daa
daa
daa
xor
pop
mov
insb
sbb
mov
leave
and
jo
add
xorl
pop
adc
pop
in
lds
mov
push
pop
jnp
jge
push
add
xor
dec
dec
andb
dec
dec
test
daa
testb
pop
or
push
push
imul
xchg
dec
mov
dec
cmpsl
dec
orl
jmp
mov
enter
mov
adc
jo
rolb
xchg
adc
ror
sub
push
cmpb
sbbl
adc
mov
dec
ss
test
mov
xor
xor
inc
sub
popf
xor
push
leave
das
rclb
notl
xchg
xlat
call
dec
inc
pusha
mov
jl
xor
test
out
jl
or
jle
pop
and
or
ja
lret
push
push
push
pop
mov
adc
aas
cmp
pop
pusha
xor
sbb
arpl
ret
inc
jne
sahf
or
or
movsl
or
jns
sub
lds
mov
cld
out
mov
xorl
mov
fwait
jo
and
outsb
pop
pop
incl
enter
dec
push
pop
push
jo
adc
push
js
pop
out
mov
mov
adc
pushf
push
jns
xchg
cmpl
xor
ds
fistpl
ljmp
push
ja
adc
and
mov
sqrtps
push
pop
inc
cmp
xchg
cmp
mov
pusha
add
imul
cmp
sbb
ja
mov
xchg
push
mov
push
push
sub
lods
and
pop
add
cli
and
imulb
testb
out
jae
dec
cmp
sub
push
jmp
sbb
pop
es
jo
dec
push
cmp
jne
dec
ss
dec
out
jno
add
fildl
sub
addl
mov
negb
mov
inc
sbb
icebp
dec
shlb
pop
xor
mov
shlb
mov
adc
and
lock
aas
inc
mov
je
adc
ss
outsl
insb
and
outsl
jne
and
jbe
outsb
insb
sbb
imul
adc
aam
aam
inc
cwtl
or
popa
scas
add
es
stos
mov
mov
mov
cmp
das
cmpl
mov
pop
lods
lea
push
mov
in
fists
leave
cmp
sbb
sub
lods
or
or
mov
adc
sbb
add
sbb
inc
add
push
nop
dec
xor
pop
sbbb
add
pop
cmp
into
or
or
pop
insb
xchg
shlb
and
dec
lahf
sub
fs
xchg
pop
into
call
mov
jmp
fisttpl
adc
cmp
ds
fldcw
sub
push
mov
inc
dec
out
add
jmp
insb
sbb
push
and
lock
int
push
mov
pop
pusha
sbb
fs
dec
or
lret
push
cmp
pop
arpl
and
adc
ret
xchg
mov
pop
dec
add
movl
es
add
nop
push
xor
mov
and
xchg
movsl
nop
dec
loope
outsb
arpl
dec
inc
pop
adc
xor
sbb
sub
or
incw
lods
subl
mov
jle
or
push
testb
adc
insb
xchg
add
jns
popa
xchg
sar
lret
testb
and
and
clc
sub
cmp
or
xchg
sbb
cmp
out
rcrl
add
aas
push
or
sub
or
inc
bound
xor
mov
das
xchg
push
and
imul
out
jl
dec
cmp
popa
or
daa
mov
mov
sub
mov
sub
push
ja
cmpsb
inc
mov
aas
add
mov
cmp
sbb
xor
add
add
dec
pusha
in
jbe
sbb
push
jmp
sbb
mov
mov
jo
inc
into
push
and
test
pop
ret
push
sar
nop
cmc
or
jne
sub
outsl
add
and
shl
and
cmp
je
outsb
adc
ja
mov
jns
lds
mov
or
ja
xchg
lahf
mov
xor
inc
and
pop
roll
inc
daa
pop
sub
mov
add
sbb
imul
dec
or
sahf
pop
jo
mov
dec
mov
inc
sub
pop
cmp
mov
fnstenv
xchg
xor
inc
xchg
dec
or
adc
aaa
or
pop
inc
jg
cmpsl
lods
xchg
jne
mov
sbb
fucom
cmp
jge
jnp
mov
pop
xor
mov
mov
shrb
shrb
clc
sbb
cmp
inc
ret
sbb
and
sti
mov
cmp
pop
or
mov
adc
subl
cmpsb
push
mov
and
sbb
or
insl
ffreep
cmp
add
add
xor
jecxz
ret
rcl
cltd
sbb
cmp
lea
imul
imul
aad
or
xchg
lock
xchg
xor
or
dec
les
ja
lcall
add
mov
fs
inc
add
cmc
in
mov
in
shrb
not
aaa
inc
sbb
lret
push
adc
sarl
fwait
and
mov
xor
idivl
pop
xchg
mov
and
add
or
loope
pop
add
and
xchg
ds
xor
dec
mov
imul
jecxz
nop
stos
jno
rcll
cltd
mov
jo,pt
mov
stc
sub
add
adc
cltd
or
scas
insb
push
inc
xor
inc
aad
or
out
fprem
loope,pt
mov
sub
add
test
push
clc
sbb
cmp
imul
pop
mov
sbb
mov
test
jb
ret
or
pop
or
testb
mov
push
js
popa
and
mov
mov
mov
outsl
push
movsl
sbb
mov
bound
adc
push
adc
mov
pop
or
enter
mov
pop
mov
mov
mov
sub
sub
push
sub
mov
test
je
pop
pop
adc
and
aaa
jmp
shl
outsl
ret
cltd
lods
arpl
adc
ljmp
pop
mov
push
popa
xchg
fidivs
or
xorb
lea
cs
xor
into
jno
dec
dec
add
cwtl
jmp
in
in
movsl
sbbb
push
mov
and
fcoms
movsb
stos
xchg
add
stos
psraw
insl
and
mov
test
push
pop
sub
test
dec
loopne
loopne
shl
mov
add
test
or
sub
jns
or
jb
arpl
mov
ja
adc
jae
les
dec
or
add
mov
jo
xchg
push
ljmp
cli
pusha
lods
push
cmp
pushf
sbbl
mov
mov
mov
or
push
or
or
mov
xchg
es
inc
nop
lret
xor
jbe
dec
cs
sbb
iret
or
nop
or
mov
cs
mov
incb
mov
cmp
xchg
dec
inc
pop
out
sahf
ljmp
lods
enter
adc
lds
outsl
jecxz
inc
dec
dec
dec
inc
dec
dec
adc
sbb
push
lds
adc
rcr
push
out
nop
push
movsb
or
pop
sbb
xchg
xchg
inc
or
aam
inc
mov
dec
sbb
mov
cmp
jge
movb
test
ss
inc
inc
mov
and
sub
loopne
mov
adc
pop
shl
popa
fistpl
pop
and
push
cmc
repnz
adc
or
dec
jp
xor
inc
popl
lds
mov
andb
adc
xlat
mov
arpl
mov
fwait
daa
fldl
in
xchg
aam
sbb
cltd
add
inc
inc
lds
adc
mov
scas
add
xor
or
test
loop
add
adc
aam
adc
add
or
loopne
lahf
xor
jb
test
dec
push
sbb
and
or
mov
xor
add
arpl
in
int3
shr
arpl
and
subb
dec
ja
adc
xor
ret
sub
dec
or
dec
call
stos
stos
ss
sub
rolb
ret
dec
adc
subb
xchg
sbb
mov
push
inc
js
cltd
les
pusha
pop
add
xchg
pop
push
fcmovnb
test
das
ljmp
dec
mov
sbb
jmp
sbb
js
rolb
nop
ret
xor
adc
and
testl
sbb
adcb
jp
icebp
cmpsb
pop
fcoms
push
aaa
xlat
cmpl
sbb
inc
stos
cmpb
test
pop
les
mov
je
push
addb
scas
insb
pop
push
sub
in
dec
push
pop
nop
lea
push
xor
inc
sub
add
push
outsl
test
jp
push
inc
jno
js
in
and
cmp
xlat
cmp
mov
sub
pop
or
out
xor
lretw
ret
push
mov
or
sbb
push
cld
vmread
imul
sub
jle
es
mov
jne
test
inc
push
mov
lock
repnz
inc
cmp
inc
nop
or
inc
add
dec
cld
or
jne
leave
hlt
inc
inc
call
subb
sub
sbb
jne
push
add
ret
inc
adc
cmpsb
adc
xor
jo
inc
add
mov
or
dec
shrb
inc
cmpsb
test
inc
das
bound
lock
popf
push
fmuls
ret
shlb
lcall
push
dec
fdivs
inc
and
push
adc
xchg
daa
stos
jecxz
jle
xchg
add
inc
or
mov
insl
lret
xor
loope
and
pop
mov
pop
push
xchg
and
cwtl
jl
imul
cmp
mov
sbb
clc
push
stos
xchg
icebp
push
jg
jecxz
ret
push
jg
adc
adcb
je
sbb
lods
push
jbe
test
insb
jae
dec
repnz
test
sbb
mov
dec
sbb
repz
sbb
add
imul
je
xor
stos
adc
jg
sub
adc
jg
and
cmp
scas
icebp
imul
fstpt
push
inc
bound
jb
cmp
add
jns
add
adc
mov
add
sbb
lret
xor
xor
adc
addr16
lret
popf
inc
dec
add
xchg
mov
push
pop
sub
fstpl
cmp
icebp
popf
call
cwtl
sub
cvtps2pi
call
xchg
xchg
mov
scas
idivb
jg
movl
xchg
test
das
jne
and
in
lcall
push
dec
xchg
fsts
inc
add
stos
and
loop
xchg
in
add
xchg
outsl
pop
icebp
inc
aam
cmp
xor
xor
inc
cltd
adc
bound
adc
daa
inc
das
mov
sti
cmp
cmp
in
cmp
fcompl
sub
xor
add
mov
sub
ret
xor
rclb
sub
ss
inc
sub
pop
in
push
inc
push
fimuls
test
add
adcl
loopne
adc
mov
xor
xlat
aaa
faddl
sbb
mov
mov
mov
xor
mov
dec
movsb
clc
jle
ss
push
hlt
loopne
nop
push
sbb
imul
dec
loope
repnz
or
mov
xor
mov
lock
dec
xor
sub
adc
xor
test
sti
es
and
nop
out
lcall
push
push
mov
or
pop
in
gs
sub
outsb
or
push
dec
sbb
push
cmp
inc
sub
jge
xor
fldcw
add
dec
or
test
dec
arpl
cmp
pop
pop
cld
and
xor
xor
cltd
lods
cmpsl
or
push
cmpb
loopne
dec
sbb
sbb
mov
lret
fldenv
mov
jno
mov
mov
cmp
jmp
je
xchg
fucomp
fldcw
mov
mov
adc
je
jge
cmp
or
sub
sbb
fistpl
pop
int3
jmp
mov
push
fnstenv
xorl
push
pusha
loopne
ja
or
arpl
xor
cmp
jb
movsl
or
sarb
nop
test
cmp
bound
jo
addr16
cwtl
jno
pop
cmp
scas
out
arpl
jne
lods
pop
call
mov
inc
mov
adc
jle
rolb
cmp
sbb
inc
fdiv
add
in
push
inc
push
dec
arpl
fcoms
test
jmp
sub
xchg
into
xchg
push
ret
sbb
andl
and
rcll
push
cmp
pop
pop
icebp
nop
sbb
or
pusha
or
add
loope
mov
sbb
out
adc
sbb
mov
enter
in
cmpb
repz
or
push
or
inc
sub
dec
dec
sub
pop
add
and
push
adc
gs
mov
daa
mov
movsl
les
aaa
sbb
xchg
mov
pop
mov
loopne
fistpll
mov
sbb
jge
pushf
fdivrp
mov
sub
inc
imul
xchg
outsb
add
add
or
inc
out
pop
pushf
cmpb
adc
std
dec
inc
movsl
sub
inc
add
aas
push
jb
xchg
xchg
add
or
jne
mov
sbb
jo
push
mov
ss
push
inc
or
pusha
push
mov
add
jmp
loope
xor
pop
add
mov
xor
in
xchg
mov
push
jnp
cmp
lcall
fcoms
aaa
cli
fisubrs
test
sbb
in
fiaddl
arpl
inc
pop
ljmp
testl
adc
pushf
in
inc
enter
and
push
loop
sub
and
mov
dec
push
jmp
aam
fldenv
add
add
andb
adc
movsb
adc
mov
loopne
jle
ja
xchg
fsubrs
add
cmc
loopne
iret
fildl
mov
sahf
inc
sahf
xchg
and
adc
adc
rorb
push
cs
loop
or
pop
pop
insl
sub
in
lods
sbb
dec
in
stos
nop
xor
xchg
xor
xchg
js
sub
dec
mov
xchg
test
cltd
dec
mov
aam
hlt
rolb
jne
cmp
add
imul
add
dec
lods
insb
push
test
jecxz
int
xor
nop
push
inc
or
sbb
mov
adc
arpl
add
das
lock
scas
push
jno
stos
lea
dec
cmp
xchg
insb
add
inc
cmp
and
xchg
inc
rol
mov
pop
cmp
jne
ret
jmp
sub
mov
sti
jo
iret
sub
sbb
and
ljmp
pop
icebp
hlt
xchg
orb
xor
fidivl
dec
sbb
in
lahf
sub
lahf
add
call
inc
mov
jb
and
dec
mov
add
inc
pop
and
inc
push
mov
into
sub
sar
je
iret
adc
xor
sub
jnp
sub
add
sbb
insl
pop
pusha
dec
jae
insb
cmp
push
rorb
pop
mov
lret
iret
adc
movsb
rolb
mov
or
ljmp
adc
jno
and
and
nop
sbb
test
sbbl
and
lahf
adc
rol
es
xlat
push
jp
ja
clc
pop
mov
inc
pop
push
push
inc
jae
je
shll
ret
or
in
je
mov
push
jbe
mov
loopne
je
xor
push
movsl
stc
mov
cmp
mov
ret
pop
cmp
bound
mov
add
mov
test
inc
add
mov
xchg
cmc
dec
js
sub
mov
pop
push
dec
adc
or
cmp
push
lret
push
insb
xchg
leavew
lret
mov
sub
push
mov
dec
mov
pop
shlb
sbb
add
or
inc
mulb
fsubl
mov
pop
lret
cmp
addb
add
push
add
cmp
add
mov
cmp
sar
fldcw
inc
sub
push
pop
dec
ds
dec
push
pop
lock
jg
pop
cmpl
adc
iret
ljmp
in
jg
dec
push
jns
mov
dec
movzwl
mov
pop
es
gs
mov
nop
ja
jle
xchg
add
mov
dec
jmp
adc
sbb
shr
sub
sbb
push
push
scas
sbb
xchg
inc
inc
js
inc
push
shlb
add
xchg
pop
adc
mov
fld
jge
lock
fwait
add
mov
aad
adc
jg
cmpsb
es
movsl
xor
jne
dec
sbb
inc
and
or
test
adc
inc
xor
pop
pusha
dec
jb
adc
cwtl
or
mov
or
push
adc
sub
mov
xchg
data16
mov
and
inc
lret
pushf
push
sub
or
mov
imul
mov
pop
sbb
or
xor
dec
leave
mov
cmp
dec
lods
lret
sbb
loopne
pusha
adc
into
cmp
ja
sbb
sub
push
outsl
pop
nop
lock
clc
and
cmp
je
rolb
or
lock
loop
push
cmp
jne
cwtl
pop
sbb
inc
dec
and
dec
xchg
inc
and
or
int
lock
pop
dec
lock
mov
mov
or
and
fsts
jne
es
push
or
imul
xor
or
mov
add
mov
popa
lods
rcl
ret
lea
test
loopne
and
data16
add
xchg
add
sub
and
adc
sub
add
sti
jne
xor
shlb
cli
test
lcall
sub
jecxz
ljmp
mov
sbb
sbb
rclb
jp
mov
pop
mov
pop
xchg
lock
inc
sar
jmp
push
sbb
shlb
push
mov
loop
fmull
mov
hlt
adc
loopne
xchg
add
or
test
cld
aaa
dec
jmp
push
loope
add
jb
push
cmp
xor
test
ja
call
mov
mov
mov
add
rcrb
aaa
pushl
sbb
and
andl
lock
xor
and
push
scas
mov
lods
in
jmp
inc
mov
xchg
arpl
aaa
ds
push
or
mov
and
mov
movl
add
mov
mov
and
sbb
cmpsb
adc
xor
rclb
push
pop
pusha
dec
adc
mov
inc
xor
int3
adc
jnp,pn
or
mov
popa
mov
aaa
test
pop
push
cltd
stc
or
jmp
std
arpl
pop
pusha
jne
xchg
and
jl
jo
add
jns
jg
inc
pop
mov
mov
mov
add
add
fisubrs
ret
inc
js
adc
jo
inc
jecxz
ss
daa
cmp
mov
mov
pop
cmp
lds
inc
rorb
mov
movsb
jmp
inc
dec
adc
dec
mov
mov
lock
in
and
inc
mov
scas
mov
dec
filds
pop
pop
rcrb
ja
mov
rcll
push
add
xchg
hlt
bound
test
inc
xlat
shll
daa
push
sbb
pusha
inc
mov
fcompl
scas
and
pop
inc
inc
cmp
rcrb
lock
in
rcrl
mov
negb
add
xor
mov
jmp
in
inc
push
ss
adc
sub
mov
add
mov
into
pop
jg
fs
scas
cli
or
pop
and
test
cli
movl
scas
or
testl
mov
mov
dec
jecxz
adc
pop
add
sarb
adc
push
insb
mov
gs
bound
std
adc
sub
sbb
sti
cmp
add
lock
xchg
mov
call
insl
mov
push
sbbl
mov
push
aad
push
mov
adc
je
pushl
sub
xchg
inc
jmp
lods
mov
cmpb
mov
mov
inc
and
and
inc
and
push
xor
outsl
leave
xor
inc
popa
mov
xor
push
or
jnp
mov
movsl
lds
sub
sahf
jo
push
sbb
lock
mov
mov
inc
fsubp
or
or
or
jp
adc
ret
pop
mov
or
and
or
inc
push
testb
add
cltd
cmp
cs
dec
or
xor
cli
pop
pop
out
inc
jge
fisubrs
or
insb
sbb
add
jp
pop
cmp
mov
test
mov
inc
mov
sbb
and
push
lcall
push
pop
mov
and
lcall
push
roll
inc
ret
xchg
and
daa
jle
nop
lock
jmp
test
push
clc
jo,pn
mov
mov
or
xchg
xor
xor
push
ficoml
sub
jo
lret
lea
push
int
neg
rclb
div
movsl
adc
xchg
mov
jl
cmpb
pop
out
scas
addr16
xchg
sbb
rcrb
push
aam
pop
je
cltd
push
movsb
sub
and
sbb
jne
icebp
dec
cwtl
loop
cmpb
fdivl
or
pop
add
jecxz
xor
adc
xchg
xor
push
mov
jbe
lds
inc
pop
xchg
stos
imul
pop
dec
test
cwtl
jecxz
fcoms
adc
sbbb
sbb
loopne
aaa
leave
add
rol
lods
mov
jb
push
jle
sarb
test
pop
dec
mov
adc
fcomps
push
sub
xchg
dec
adc
mov
adc
rorb
add
addl
inc
pop
jle
popa
insb
and
jne
mov
arpl
xor
sub
ss
xchg
sbb
inc
pop
lea
mov
roll
push
cmpsb
jno
movsl
cmp
mov
sub
pop
jmp
inc
mov
and
mov
sbb
push
pop
xchg
push
aaa
or
sub
lahf
add
rorb
push
mov
xor
fbld
cmp
je
test
aaa
lds
mov
sbb
loop
sti
sbb
lods
inc
imul
in
mov
subb
jb
push
nop
mov
mov
mov
adc
and
lret
mov
jl
inc
adc
push
outsb
test
cmpsl
aam
inc
dec
push
pop
add
insb
pusha
and
push
mov
xchg
nop
dec
add
out
bound
mov
push
fiadds
pop
aas
sbb
movb
popa
adc
add
mov
lret
popf
or
cmpsl
daa
aaa
enter
sbb
sub
add
cld
mov
rcll
adc
mov
sub
mov
outsb
inc
add
xchg
add
mov
daa
fildll
test
push
push
pop
add
inc
sbb
cwtl
push
lock
mov
popa
jb
fs
mov
les
mov
push
xor
xchg
inc
fnstcw
push
je
adc
lret
mulb
pop
pop
lret
push
mov
mov
add
out
add
mov
xchg
bswap
push
nop
or
ret
cli
outsl
outsb
cmp
xchg
sub
mov
dec
sub
sub
dec
test
cmp
jne
jne
cmp
push
mov
mov
lock
inc
inc
addl
adc
push
xlat
inc
jbe
sbb
inc
pushf
mov
pop
adc
inc
push
xor
push
push
and
xor
rorb
lret
mov
inc
mov
adc
decb
sbb
adc
push
xchg
jmp
insb
call
jnp
adc
icebp
push
fst
mov
xorb
sarl
mov
loopne
xor
cmp
xor
test
or
stos
mov
xchg
pop
mov
inc
cmp
push
inc
loop
out
pop
add
jno
test
mov
imul
xchg
add
in
dec
fwait
or
or
mov
and
push
sub
aad
inc
push
push
cwtl
daa
xchg
lea
xlat
fstpl
xchg
xchg
and
sarl
xor
fildll
lea
je
jecxz
push
rclb
test
sub
mov
lret
dec
sahf
dec
sbb
insb
cmpsb
push
xchg
dec
bound
add
push
scas
sub
ja
movsb
mov
sti
jne
pop
push
outsl
pop
or
and
movsb
mov
or
shrb
int
arpl
test
aas
push
and
and
das
adc
stos
repz
or
test
mov
int3
add
adc
shrb
inc
mov
xor
insl
fs
addr16
adc
out
lock
push
movb
inc
mov
adcb
push
lret
cmp
cmpsl
bswap
in
jmp
fwait
and
push
add
push
test
iret
and
das
and
pop
sbb
dec
fsubrp
cwtl
inc
sbb
inc
adc
inc
outsb
iret
enter
mov
or
das
add
pop
rclb
xlat
int3
push
pop
das
enter
sbb
sahf
les
das
out
into
mov
inc
cmp
lahf
adc
mov
cmpsb
icebp
fmuls
inc
aaa
cmc
mov
shrb
in
cwtl
and
enter
inc
mov
lcall
or
jae
sbb
pusha
jo
sub
je
or
jae
push
lods
push
jae
dec
popa
sarb
push
xorb
jae
into
lcall
out
dec
dec
sahf
jnp
mov
jae
jae
imul
fists
jae
mulb
pop
lret
das
add
jae
or
jno
inc
out
pop
enter
jae
jae
mov
imul
loope
xchg
js
and
fwait
repz
imul
sub
jle
jnp
sub
push
stos
add
mov
out
roll
sub
icebp
dec
xchg
shll
dec
icebp
push
mov
xor
rclb
mov
push
in
aaa
or
and
adc
xchg
add
xlat
adc
fwait
fildl
and
dec
xor
mov
mov
mov
jecxz
rcr
fwait
imul
dec
or
xor
mov
cltd
cmc
sbb
arpl
pop
aas
outsb
and
and
mov
stos
aam
or
xchg
sbb
loope
imul
sbbl
out
push
or
xor
sbb
or
or
cmp
push
stos
xchg
outsw
repz
nop
into
cmp
and
mov
loop
subb
fbstp
in
mov
aam
popa
scas
out
jnp
je
adc
jmp
inc
lahf
stc
or
xchg
jge
imul
outsl
inc
sbb
sti
mov
mov
cmpsb
add
adc
jae
push
sbb
shrl
in
inc
pop
clc
js
ret
out
mov
cli
jle
mov
and
dec
xorl
mov
jns
xchg
mov
dec
lds
mov
mov
dec
mov
xchg
fsubrs
sub
cld
stos
stos
or
movl
mull
ds
lods
pusha
and
stos
or
jl
clc
popa
insb
into
sub
push
mov
stos
aam
jae
sub
or
pop
jl
mov
lods
inc
mov
cmpsb
dec
pop
stos
sbbb
push
push
stos
shll
outsb
jo
xchg
in
add
ret
pop
clc
add
out
bound
fwait
fwait
pop
adcl
cmp
hlt
dec
test
adc
shlb
pop
shr
idiv
xchg
inc
loopne
jne
cld
inc
push
mov
cmc
xchg
push
or
mov
xchg
jg
mov
mov
outsb
cs
lods
scas
mov
movsb
lcall
mov
sbb
mov
mov
mov
shrb
push
popa
mov
hlt
js
xchg
jl
je
inc
pop
outsb
and
cs
dec
cmpsl
scas
jo
pop
mov
movl
call
int
lods
push
or
jae
mov
rcr
fwait
out
ficompl
xor
or
xchg
cmp
jbe
cmpsl
cmp
negb
xchg
or
stos
frstor
xchg
sti
mov
scas
mov
and
xor
or
roll
or
enter
jecxz
loopne
pop
pop
xchg
pop
mov
or
dec
lock
jo
adc
pusha
mov
mov
lock
adc
xor
jle
sub
std
clc
clc
loop
add
jne
sbb
pop
aas
jle
lds
ret
xor
push
loope
arpl
mov
rcl
jg
pop
cld
clc
ljmp
cmp
add
adc
or
test
push
das
push
aam
mov
xchg
pop
sahf
or
ds
mov
dec
popf
xchg
popa
pop
or
xor
stos
sub
mov
aam
js
jecxz
mov
in
inc
dec
movsl
or
mov
aaa
movsb
and
sbb
stc
in
ss
push
loopne
xchg
jmp
cmpsb
andl
loop
pop
lods
out
rcl
mov
adc
call
dec
xor
and
push
imul
cmp
cmp
sbb
xlat
scas
fcompl
cmp
loopne
lds
fs
outsl
push
shrl
pop
or
inc
cld
gs
or
loopne
sub
dec
mov
and
divb
mov
sahf
loop
push
sti
push
xor
xor
andb
lea
add
adc
mov
stos
xchg
cld
mov
sub
or
shll
jae
jle
aaa
add
aas
clc
push
lods
xchg
pop
shl
jae
push
outsb
leave
and
out
dec
iret
xchg
aas
cltd
faddl
mov
lock
inc
cli
sbbb
js
mov
or
xorl
dec
jae
incl
or
lock
out
and
icebp
decb
cmc
imul
je
push
jmp
pop
xlat
mov
cs
pusha
or
xor
enter
lcall
add
xchg
sub
movsb
jb
mov
cs
cwtl
sub
mov
test
xorl
sbb
daa
xchg
xor
test
call
ror
hlt
test
je
int
push
adc
pop
leave
jecxz
cmp
push
mov
fnstenv
loopne
or
xchg
int3
push
push
loopne
out
loopne
or
scas
xchg
aas
jle
jg
mov
jb
pop
pop
out
cs
aam
jle
ret
push
es
sbb
push
data16
cmpsl
cs
out
scas
nop
push
or
rolb
mov
cmp
xor
pop
dec
movsb
repnz
in
push
orb
notl
ret
and
adc
cmp
ja
fstpt
push
scas
or
pushf
sub
jl
jle
jg
div
mov
jns
popl
insl
add
sub
fwait
lock
loope
enter
std
push
dec
xor
jecxz
rcrl
inc
sbb
or
mov
cld
lock
imulb
filds
mov
test
int3
jp
inc
add
inc
in
fisttps
pusha
pop
jl
rcrl
notb
jecxz
xor
aaa
xchg
sahf
jl
jl
pop
cld
jp
incb
in
outsl
add
and
or
jl,pn
fidivrl
cltd
dec
lcall
jle
hlt
loopne
pop
ds
mov
xchg
sub
xchg
aas
xor
aam
mov
test
and
mov
inc
lcall
xor
out
push
mov
js
sub
dec
mov
sahf
outsb
lret
adcl
sbb
outsb
fistps
decb
push
or
call
and
push
repz
icebp
rcrl
fidivl
cmovge
sbb
outsb
outsb
outsb
lods
test
les
sbb
adc
mov
lods
dec
and
test
lret
lret
int
int
mov
sub
out
out
in
inc
mov
int
aad
bound
add
int
lea
js
outsb
dec
test
les
sti
jge
jns
std
js
or
iret
jae
jae
mov
gs
or
sbb
jae
xchg
aad
notl
cmp
sub
insl
xbegin
inc
scas
mov
cmp
adc
pop
mov
js
aas
in
add
lahf
imul
loopne
bound
xor
cmpb
lock
dec
ret
divb
or
ja
orl
es
in
adc
or
icebp
jmp
fisubrs
or
jg
jecxz
rcrl
cmc
dec
sarb
jp,pt
ret
lods
lds
cli
push
ficomps
xor
cld
push
adc
js
jb
daa
sbb
adc
cmp
movsb
mov
inc
inc
aas
ds
aam
mov
in
outsb
dec
jnp
loop
jmp
mov
rcrb
sub
adc
lock
ss
jmp
or
pop
cmp
shrb
and
adc
ds
push
nop
outsl
pushf
mov
push
data16
mov
mov
fwait
jmp
sbb
push
mov
or
stos
dec
in
cmc
aam
xor
aam
mov
hlt
push
nop
push
outsb
ret
mov
jo
repnz
dec
loopne
or
mov
fldenv
push
xor
cmc
pop
dec
xchg
loope
out
sub
cmc
and
test
or
push
ficoml
sbb
cmpb
lcall
pop
lcall
ss
push
or
and
clc
insl
inc
add
popa
mov
jmp
shl
push
push
mov
cs
adcb
bound
shrb
loope
sbb
ficoms
ja
jo
loopne
push
call
test
sub
adc
xor
cwtl
push
cli
stc
icebp
xor
push
lcall
pop
test
clc
xchg
mov
push
push
cmp
pop
jo
push
push
pusha
stos
lds
sbb
cmpsb
mov
fmul
sub
xchg
and
jne
into
push
ljmp
inc
jns
dec
movsl
and
inc
data16
pop
mov
lock
adcb
jl
jae
lods
pop
pop
out
clc
pushf
subb
push
pop
push
jl
add
dec
aas
cltd
scas
hlt
fcoml
push
stos
ret
jp
add
sbb
cmp
lret
push
inc
mov
or
push
add
mov
mov
rcl
mov
push
jle
loope
push
sbb
cld
icebp
popa
pop
push
pop
adc
ss
addr16
imul
push
cmp
and
push
push
or
push
and
xchg
icebp
xlat
ret
je
test
push
mov
loopne
and
out
mov
hlt
jns
in
fildl
pusha
push
icebp
out
clc
imul
push
and
rcrb
inc
jns
and
in
jl
rcll
incb
cmc
jne
jecxz
cmp
pop
idiv
pop
mov
rclb
adc
add
ret
xchg
imulb
fcomps
jns
adc
jle
imul
cmp
push
sub
js
mov
gs
and
out
xchg
jmp
mov
into
lahf
push
push
push
jns
pop
pop
dec
adc
lods
decb
mov
adc
out
test
repnz
jns
iret
xchg
or
repz
out
push
sahf
dec
js
decb
out
jl
cmp
ret
scas
add
lahf
dec
cmp
dec
out
cmp
icebp
adc
push
decb
push
pop
std
xchg
inc
iret
repz
pop
gs
xchg
movsb
pop
loop
aad
out
mov
outsb
out
shl
cmp
xor
cld
dec
out
pop
aaa
and
sub
xchg
js
sbb
decb
repz
or
cwtl
mov
and
or
repz
stc
sbb
jp
mov
nop
rcrb
mov
dec
mov
add
ds
pop
decb
fdivrl
rcrl
and
mov
cmpsl
mov
orl
inc
sti
decb
and
pop
lcall
inc
adc
mov
and
jno
push
sahf
lret
mov
cmp
out
shlb
xchg
push
test
loop
cmp
clc
cmp
out
push
outsl
loope
loope
jns
xchg
jp
pop
into
addr16
and
push
inc
jno
repz
mov
dec
movsl
cli
cmp
dec
decb
into
pop
lods
xor
inc
jmp
clc
adcl
xchg
call
loope
push
jbe
jo
iret
and
negb
iret
decb
inc
fstpl
loop
inc
mov
stc
cmp
dec
decb
sbb
adc
scas
jbe
pusha
out
jmp
clc
int3
sbb
insb
into
loope,pt
push
xor
inc
scas
push
pusha
push
into
imul
dec
je
or
ljmp
clc
lock
inc
add
loopne
cmp
push
icebp
dec
cmpsl
lret
jp
insb
in
ucomiss
cld
mov
add
les
mov
in
or
insb
pop
out
mov
push
adcl
and
andb
ret
inc
scas
in
mov
push
push
pop
jo
cmp
adcb
and
iret
sub
jo
imul
arpl
mov
mov
subb
cmc
in
xor
aas
jl
jp
ja
lods
in
fcoms
stos
dec
dec
subl
add
lret
mov
and
imul
jbe
or
int
pushl
fiaddl
mov
push
cld
mov
lcall
loopne
add
aam
inc
and
mov
clc
jb
push
decl
popf
push
cwtl
rorl
xor
jecxz
js
popa
jbe
test
in
push
lcall
and
test
lahf
aaa
decl
add
loopne
leave
nop
stos
and
loop
push
fidivl
sub
add
jmp
push
cmp
jmp
adc
fdiv
pop
sarb
pop
jge
out
ss
inc
push
icebp
lret
mov
test
je
inc
test
sarb
push
mov
fistps
mov
pop
lret
add
rcll
repnz
icebp
dec
clc
ss
shrl
ret
cmp
adcl
aas
push
std
orl
test
push
mov
ss
sbb
rorl
fildll
subb
repnz
jg
ljmp
fidivl
mov
decb
push
fcos
cmp
ljmp
ljmp
test
loope
test
icebp
sbb
lods
mov
aad
dec
sbb
outsb
jl
decb
lcall
loop
f2xm1
ss
cli
cmc
je
inc
rorb
cli
push
jl
test
cs
mov
jne
sbb
fiadds
fstpl
mov
pop
shlb
or
nop
int3
fcoml
sbb
scas
rolb
loop
lcall
pop
fbld
imul
inc
ja
roll
inc
out
mov
cmp
cmp
dec
jp
mov
jmp
mov
enter
fisubrs
insl
sub
cmpsl
cmp
ret
mov
roll
icebp
gs
leave
into
push
xor
sbb
sub
cli
out
mov
pop
mov
inc
jecxz
shlb
push
scas
jmp
iret
sbb
push
cmp
cmc
shlb
popf
aad
icebp
jmp
cmp
leave
sub
sbb
and
pop
pushf
sbb
icebp
fmuls
pusha
insb
outsl
fcoml
fists
inc
sub
shl
mov
test
mov
leave
jbe
inc
mull
scas
mov
loopne
ss
inc
mov
mov
push
xchg
inc
fsubrl
pop
push
mov
pop
movsl
sbb
je
pop
push
mov
ljmp
sbb
mov
popf
lock
jl
xchg
out
hlt
fmulp
dec
clc
sbb
lret
xchg
xchg
incb
cld
cmp
inc
mov
sub
aam
hlt
loope
mov
mov
sub
lods
cmp
sar
movhps
ljmp
mov
enter
loopne
mov
inc
fidivrs
pop
push
data16
sbb
fs
je
inc
fcoms
daa
adc
lds
ret
xchg
mov
cltd
rep
push
xor
cs
and
loopne
jo
cmpb
outsb
ret
pop
sarl
push
scas
push
mov
pop
push
aas
sub
addr16
sbb
aad
outsl
inc
lcall
fsubrs
leave
xchg
std
js
mov
adc
cmpsl
ljmp
adc
sbb
or
add
sbb
in
pusha
jmp
or
sbb
mov
stos
test
mov
int3
xor
pop
push
cmp
ja
mov
jecxz
cli
mov
shlb
xchg
pop
xchg
fimuls
pop
pushf
add
test
cmp
getsec
pusha
lahf
lret
and
cmpsb
adc
push
mov
and
das
icebp
sub
jbe
push
or
dec
push
cli
cmp
ret
ss
fbld
jbe
mov
xchg
dec
sbb
pop
fisttps
incb
adc
inc
hlt
rcrb
rorb
fisubrl
ficomps
mov
pushl
mov
push
andl
dec
ret
outsb
pop
add
ret
into
jb
xor
fcmovb
jecxz
andl
lcall
decb
xchg
gs
sbb
fmul
sub
and
push
adc
pushf
stos
cmp
scas
mov
rcll
fiadds
outsb
scas
ret
sbb
jmp
dec
das
insb
popa
leave
sahf
jmp
dec
lods
and
into
xor
jl
push
aas
sbb
mov
pop
add
lock
lds
sbb
lock
adc
cmp
xorl
cld
sbb
clc
icebp
push
adc
lods
insb
nop
mov
ds
xor
lret
pop
lods
jne
ljmp
adc
iret
aam
jb
mov
ss
mulb
xchg
or
inc
push
decl
pop
andl
dec
lahf
nop
fdivp
stos
aas
mov
ret
or
lret
add
es
je
mov
pusha
xchg
cmpsl
lock
cmp
incb
jae
shl
cmp
push
dec
std
loope
sahf
stc
lahf
xor
dec
or
mov
shrb
int
les
cmp
mov
sbbl
dec
test
mov
pushf
cli
popf
xchg
mov
mov
adc
sbb
lds
xchg
push
mov
jge
icebp
jmp
inc
fs
out
bound
popf
cmp
fucom
mov
loopne
jmp
cmp
mov
shll
loop
sbb
or
sub
in
pop
pandn
aaa
cmp
sahf
jo
inc
add
pop
ficoms
mov
or
out
and
mov
loopne
cltd
xchg
mov
mov
je
cmc
ljmp
sub
adc
push
decb
dec
pop
out
mov
cmp
mov
icebp
insl
mov
cmp
jb
lock
rorl
lods
xor
movsb
gs
ss
daa
lahf
in
cmpl
add
rclb
loope
push
popf
incl
xor
roll
jl
outsb
fbld
stc
sbb
jp
xor
mov
rcll
sahf
mov
add
mov
fidivrs
rolb
cmp
outsb
fcompl
push
dec
jmp
rolb
mov
loop
and
dec
jl
adc
and
mov
mov
dec
sgdtl
jle
push
int3
fdivr
inc
dec
cmp
rcrl
lret
shlb
mov
add
popf
xorb
pop
mov
stos
pusha
cmp
ror
mov
fldl2t
rorl
ret
lods
add
call
in
stos
shrl
cmp
mov
roll
pop
loopne
sahf
incw
rol
mov
lcall
out
dec
cld
cmc
hlt
add
cmp
lods
cs
out
pop
pop
adcb
pop
add
pushf
jge
add
int3
push
sbb
js
adc
pop
test
scas
ss
xchg
dec
loopne
out
sarb
ret
mov
test
hlt
shrl
mov
push
jle
ds
push
sbb
mov
out
clc
out
inc
in
xchg
ljmp
shlb
ret
repz
push
mov
add
add
stos
out
roll
stos
sub
inc
add
inc
stos
push
stos
outsb
or
addb
sub
sub
fisubrl
dec
mov
stos
mov
pusha
and
adc
push
stos
inc
fwait
adc
int3
pusha
add
ljmp
push
stos
cld
shlb
cmp
clc
jle
push
adc
sbb
or
pop
loop
iret
mov
cmp
jge
mov
jo
nopl
xor
mov
rorl
push
xor
loope
ffreep
xchg
lods
mov
mov
popa
mov
cli
icebp
mov
mov
subl
jge
xchg
dec
lock
icebp
mov
mov
and
lcall
sub
jns
mov
aad
icebp
inc
adc
mov
inc
cmpsl
ss
jp,pt
pop
jl
icebp
test
mov
or
or
push
mov
and
add
sub
les
cli
mov
dec
push
js
push
fwait
cmp
cmpsl
stos
pop
loop
mov
sub
shll
sbb
adc
mov
xor
bswap
pop
lock
clc
push
int
gs
stc
and
fsubrp
shll
dec
jbe
mov
out
testl
cli
add
dec
movsl
ficoml
rcll
pop
push
cwtl
daa
in
add
das
ds
push
shll
sbb
nop
popl
push
adc
fs
ds
cli
sbb
mulb
aaa
rcrb
jno
cmpsl
adc
dec
lret
pop
or
jge
fninit
cmp
adc
cmp
add
sub
lahf
hlt
xchg
jno
mov
fucomp
mov
scas
pop
jle
push
movsb
mov
das
add
xor
idivl
scas
ret
xchg
mov
dec
mov
icebp
xor
jns
pop
or
dec
adc
cmp
and
inc
inc
or
mov
call
sbb
cmpsl
inc
aaa
aaa
mov
add
aas
shll
dec
mov
aaa
aaa
push
imul
mov
aaa
aaa
test
cmp
es
add
aaa
aaa
aaa
add
jne
xchg
push
js
nop
outsb
outsb
ds
stc
jmp
std
pop
or
sbb
outsb
outsb
outsb
mov
push
sub
shlb
js
add
mov
fs
js
out
adc
xchg
inc
shlb
jp
inc
ljmp
or
je
cmp
in
adc
fcoms
push
out
mov
add
mov
jbe
sarb
sbb
psadbw
dec
mov
ret
loopew
dec
dec
stos
cld
adc
int
aas
pop
cmp
push
push
sub
scas
out
sbb
stos
setl
push
insl
insl
lcall
push
inc
imul
or
push
cld
mov
add
pusha
rcrb
icebp
jmp
xor
out
xor
subl
sub
dec
ds
jl,pt
xor
xchg
stc
pop
cmp
add
hlt
call
fistps
lods
rcrb
xor
cwtl
cmp
mov
mov
xchg
sbb
xor
jge
ret
out
mov
xchg
jl
stos
cmp
aas
cmp
mov
adc
cmp
je
cli
out
pop
cmp
and
jle
add
loopne
clc
loop
das
xchg
sub
lcall
mov
cmp
and
adc
movsb
push
rorl
push
cmp
decb
sahf
jecxz
loopne
xchg
add
or
movb
mov
cmp
push
popf
enter
mov
je
mov
sub
pop
xchg
adc
jle
jg
rcrl
enter
pop
mov
shrl
call
mov
sbb
std
push
xor
xor
or
enter
sbb
add
daa
sarl
push
push
push
fdivrs
clc
xchg
mov
icebp
sarb
mov
add
inc
inc
xor
sar
clc
fwait
add
fbld
out
or
lods
mov
cmp
add
sahf
dec
xor
ja
mov
xchg
push
popa
icebp
loop
rcll
aas
ds
filds
dec
add
ja
je
imull
jecxz
push
jle
nop
nop
adc
push
push
icebp
jge
out
rorb
fcomps
shl
jmp
popf
sar
sub
lock
and
jo
mov
cmp
out
push
cwtl
and
sarb
mov
fcoms
aaa
jle
jp
lcall
push
dec
divb
lea
mov
movsb
fadd
cmp
out
dec
add
shll
inc
push
les
repz
in
aad
cmpsl
mov
inc
je
and
cmp
mov
cwtl
and
lret
ret
mov
push
push
dec
test
fsubrs
sti
call
pop
adc
mov
dec
pop
insl
jl
ficoml
sbb
jle
shrl
mov
jle
shll
imulb
fimull
cld
push
repnz
or
aas
cs
push
adc
xchg
hlt
shrb
mov
mov
adc
rol
js
repnz
js
mov
mov
outsb
xor
movsb
js
push
jbe
popa
xchg
mov
dec
loope
aad
hlt
cmp
jle
mov
ljmp
test
inc
mov
push
jl
scas
mov
mov
lock
lock
push
mov
inc
adc
mov
std
xchg
jle
shrb
add
xor
bound
ja
jle
pop
dec
dec
les
in
xor
call
ficompl
add
dec
movd
sahf
data16
and
aam
out
shr
aad
pusha
daa
sub
pop
daa
movsb
ds
inc
pop
insb
rcrb
pop
scas
sub
pop
aas
cvtpi2ps
stos
sbb
mov
inc
jo
repnz
ret
mov
insl
jb
xor
es
repnz
push
jle
jg
insb
dec
enter
mov
test
mov
je
insl
idivb
jle
mov
decb
add
sbb
cli
aam
sahf
dec
xchg
add
mov
rclb
jmp
insb
int
mov
outsl
stos
lea
lahf
push
jle
das
pop
mov
lods
es
cmpsl
ja
pop
adcl
sti
ljmp
into
nop
rclb
andb
inc
jne
mov
or
fisubl
push
jl
push
xor
daa
andl
push
mov
insb
imul
mov
sbb
lock
xchg
outsb
mov
inc
pusha
rolb
xchg
insl
imul
clc
insb
outsb
and
adc
faddp
lods
dec
stos
scas
mov
insb
lcall
icebp
loope
mov
inc
cwtl
cmpb
cmp
hlt
mov
mov
data16
push
xor
out
xchg
inc
sbb
cli
pusha
outsl
sbb
mov
xor
outsb
shrb
sti
roll
js
je
pop
cmc
bound
sub
test
pop
lods
rorb
mov
call
pop
jg
clc
mov
sub
fildl
aaa
pusha
daa
adc
jl,pt
cld
je
jmp
add
sarb
cmp
sahf
xchg
or
jbe
aam
lret
push
dec
sbb
test
cmp
push
push
pop
cld
push
fimull
scas
cli
cmpsl
out
push
loopne
pop
pop
mov
pop
aad
jo
data16
mov
adcb
aad
mov
sahf
pop
sbb
adc
ficomps
jg
cli
xchg
test
cmp
dec
push
jb
add
test
rclb
push
loope
sub
or
mov
insl
or
outsb
loopne
push
xor
adc
or
jo
add
sti
lods
lcall
clc
xlat
loopne
aas
insl
scas
imul
sti
mov
xchg
icebp
and
mov
lods
add
inc
lahf
jle
shrl
push
das
fimuls
aas
pop
jl
mov
faddl
mov
lret
scas
jno
or
in
push
jb
push
call
or
je
int3
xchg
xor
push
fcomps
loopne
or
repz
and
loope
clc
jmp
out
push
jo
push
test
push
addr16
jge
dec
push
enter
insb
mov
imul
cli
arpl
or
mov
mov
fsubrs
clc
cld
out
mov
xor
cmc
jb
xchg
push
mov
push
sub
mov
mov
out
loopne
jo
out
pop
mov
mov
imull
adc
sbb
mov
cmc
loopne
std
in
in
or
lahf
les
pop
clc
push
adcl
dec
nop
insb
cmpsb
pop
clc
mov
les
dec
mov
sub
lods
scas
rol
shrb
clc
mov
aas
xchg
ss
cmpl
pop
sub
xor
pop
loop
cmovo
js
sub
dec
stos
push
xor
or
xchg
leave
or
fsubr
sub
pop
das
mov
mov
fdivr
push
loop
cli
adc
xchg
scas
lret
mov
jbe
popw
pop
dec
mov
aad
call
test
mov
lds
or
dec
out
outsb
jge
ljmp
lret
mov
sbb
arpl
push
jl
and
pushf
out
mov
pushf
push
and
pop
lahf
ss
test
sbb
or
lods
les
decb
cltd
shlb
add
xor
jle
push
cmp
lret
push
mov
fidivrs
add
ret
and
adc
ret
rorl
xchg
jno
xchg
mov
loop
in
or
mov
xor
in
into
js
pop
js
ficoml
adcb
inc
jmp
push
pop
fcmove
je
imul
add
fnstsw
pop
xchg
push
and
lods
hlt
call
popa
std
mov
mov
mov
push
jl
sbb
enter
ja
sarb
cli
mov
cmp
push
dec
lret
push
fdivrs
cmp
hlt
jle
fsub
sbb
cltd
mov
fcmovb
es
cld
sub
pop
mov
push
aaa
push
mov
jge
and
cmp
mov
addb
mov
out
mov
adc
sbb
jmp
int3
sbb
rolb
jecxz
rcll
sbb
mov
lock
rorb
js
push
call
lock
outsb
push
push
subb
cmp
jl
pop
cmp
push
sub
loopne
pop
and
in
jge
xor
movsb
jnp
xlat
xchg
les
in
in
mov
cli
add
xor
xor
ret
and
adc
jo
test
mov
jns
js
loope
ljmp
stos
xchg
aas
je
lahf
lods
or
sbb
xlat
mov
lods
cmpsl
clc
push
mov
add
jp
mov
mov
pop
mov
pop
jl
cmp
stos
xchg
cmp
cli
dec
rol
mov
dec
scas
inc
pop
jl
in
sub
pop
fisubl
xor
setnp
add
push
cmp
inc
mov
sbb
sub
sahf
comiss
fstp
popa
daa
adc
inc
ja
push
test
pop
xchg
loopne
mov
or
idiv
xchg
push
push
out
leave
ds
cmp
inc
and
mov
pop
icebp
sub
xlat
repnz
movsl
sbb
addl
pop
js
xchg
fld
aam
test
xchg
lds
mov
cmp
loopne
add
jbe,pt
cmc
mov
imul
pop
jp
xchg
faddp
mov
sahf
ds
aam
dec
pop
jl,pt
dec
pop
xchg
divb
mov
push
jecxz
mov
xor
xor
test
sub
aaa
jecxz
mov
ret
fcmovnbe
cmpb
lods
rol
or
adc
jecxz,pt
aad
pop
imul
mov
dec
and
pop
inc
mov
dec
xchg
adc
fmulp
bound
test
xchg
pushf
add
fisubrs
sub
xlat
xor
inc
clc
movsb
jb
aam
adc
jp
out
jle
push
jl
or
push
jl
push
mov
cltd
loop
push
sbb
je
popf
xchg
sahf
pop
in
cmp
das
inc
xchg
mov
ljmp
sbb
mov
mov
inc
jp
sub
roll
adc
ds
xchg
daa
sbb
jle
xchg
lock
es
sub
pop
adc
hlt
mov
loop
cmp
dec
aas
jl
push
loopew
inc
add
xor
cmp
lret
push
mov
and
jle
add
movsb
pop
xchg
xchg
lcall
inc
shrb
enter
and
loopne
and
mov
ljmp
push
adc
adc
rolb
cmp
in
push
ret
sub
xlat
inc
std
mov
push
sahf
fisubrs
cwtl
ss
xchg
shll
lds
adc
rorb
push
push
inc
pop
pop
das
jle
add
pop
sbb
inc
and
loopne
jno
lock
mov
movl
mov
loop
fwait
cs
out
mov
call
inc
scas
dec
or
je
sahf
cmp
mov
push
lret
inc
pop
aas
inc
xor
pop
popf
jbe
cmp
push
jl
mov
fnop
stc
cmpsb
loopne
push
insb
push
xor
adc
or
cmpsb
stos
lock
cmc
mov
jmp
mov
jle
pop
pop
jl,pt
jp
neg
jle
idivb
rcl
cwtl
push
or
and
lock
in
push
shl
and
sub
in
mov
sub
and
fcmove
cmp
cwtl
xchg
or
lahf
aas
movsb
sbb
lods
loope
jl
mov
out
jbe
push
push
push
insl
adcl
mov
dec
shlb
iret
loope
mov
ds
mov
in
jge
adc
cmpsb
andl
popf
cwtl
sbb
add
test
pop
add
loop
cmp
cmc
sbb
jns
mov
mov
push
ljmp
cmp
mov
ffree
pop
jp
inc
fimull
push
subb
ss
rorl
jns
cmp
fxch
sub
sub
testl
test
enter
es
mov
in
mov
mov
xchg
cltd
es
cmc
rorl
sub
sub
jecxz
and
mov
rorb
divb
in
cli
mov
mov
mov
add
test
mov
jns
rclb
in
in
xchg
aas
pop
lods
jo
jbe
push
pop
scas
test
mov
ss
nop
mov
fisubrl
pop
cli
aam
xchg
test
clc
jecxz
jne
fimuls
lock
outsl
loopne
pop
sbb
call
loopne
loop
mov
or
ret
cltd
pop
xor
pop
fwait
loopne
stos
scas
sbb
mov
jge
ds
push
aad
pop
adc
scas
lcall
mov
sub
dec
test
les
in
sub
ret
ret
stos
out
inc
test
cmpsb
adcb
inc
out
ret
ret
imull
int3
cld
mov
in
int3
insl
mov
rcrl
scas
jbe
cld
cmpl
test
sbb
mov
sbb
or
cmp
jl
lds
lret
jp
dec
fdivrl
clc
jno
ja
sahf
add
and
xor
lock
jnp
jo
jno
outsb
xor
sahf
repnz
loop
out
jb
pop
pop
arpl
push
dec
sti
lret
and
test
ret
mulb
lock
adc
inc
filds
mov
stos
ficompl
aad
insb
cmp
ljmp
mov
cmp
push
mov
mov
jo
push
jo
pop
sbb
mov
inc
cmpsb
push
and
test
add
and
cmpsl
jno
xlat
divl
or
std
lds
ljmp
shrb
push
jnp
les
cmp
push
shlb
mov
clc
sub
iret
clc
lock
inc
es
xor
cmc
call
in
and
jnp
adc
in
loop
js
les
pop
jle
clc
cmc
rclb
mov
sub
mov
cli
sbb
ss
cmp
pop
out
in
mov
icebp
xor
jecxz
push
add
les
jecxz
cmp
push
sub
jp
clc
jno
xor
xchg
cmp
mov
idiv
pop
mov
insb
fldt
mov
inc
int
test
aaa
loopne
sub
out
xchg
and
dec
jl
cmc
mov
andl
cmp
cld
mov
push
dec
mov
data16
ja
shrb
mov
push
clc
hlt
cmp
push
fisubrs
fdivl
loop
icebp
lds
pop
inc
mov
xchg
cmp
sub
mul
add
add
push
sahf
int
inc
or
outsl
movsb
pop
pop
jo
and
sub
xchg
aad
ret
scas
out
stos
popf
adc
movsl
aas
mov
rcll
adc
mov
jle
icebp
jmp
cmp
out
cmp
sbb
loopne,pt
cmp
xchg
push
cmc
and
movsb
rcrl
fadd
test
xor
mov
adc
insb
nop
hlt
and
add
or
loope
movsb
jns
filds
je
out
shrl
bnd
shll
xor
cli
loop
pop
sbb
jb
mov
mov
cmp
add
gs
mov
in
stos
nop
scas
cmp
pop
mov
cs
cmp
rorl
lods
in
add
icebp
lds
dec
push
inc
dec
jl
stos
mull
mov
xor
and
rcrb
into
loope
mov
mov
adcl
fistl
adc
push
es
stc
and
adc
sub
je
imulb
repnz
incl
xor
sahf
and
ljmp
pop
jge
in
loop
addr16
cmp
push
cs
iret
xchg
es
pop
pop
ret
inc
sbb
jle
fildll
adc
pop
das
jo
mov
mov
or
dec
push
in
pop
jo
lock
lea
pop
les
ds
pop
sbbl
ret
out
sahf
cmpsl
cmp
cs
mov
js
or
mov
out
call
xchg
cmp
xor
loopne
shll
movaps
mov
fidivs
rcr
jge
roll
push
dec
in
shll
sahf
mov
clc
pop
adc
mov
cmp
dec
scas
and
mov
push
loop
in
and
in
lock
outsl
xor
insl
aas
sbb
in
shrb
maxps
fcomp
hlt
add
push
loop
adc
add
pop
out
ficoml
fsts
clc
mov
sbb
fistps
mov
mov
adc
jge
loope
out
mov
das
xchg
cli
lock
pop
jg
xchg
mov
cmp
int
out
push
sbb
jecxz
cmp
dec
data16
jle
jne,pn
add
cmp
outsb
pop
xor
xor
jbe
decl
sbb
adc
mov
xchg
and
or
icebp
pusha
outsb
add
xor
popa
sub
call
pusha
js
loope
pop
shlb
sub
in
xor
cmc
or
js
jmp
push
add
testb
pop
mov
lret
and
mov
push
out
pop
shr
sti
or
jmp
adc
mov
arpl
fcom
pop
xchg
jp
mov
xchg
outsl
lock
jne
pop
orl
inc
sub
sub
jl,pn
orl
in
sahf
in
rclb
sbb
push
les
shl
std
cli
ds
or
cmp
adc
jbe
inc
pop
ljmp
mov
lock
and
lcall
dec
cmp
push
or
mov
pop
lahf
cwtl
outsl
mov
subl
mov
cld
jo
out
js
popf
pop
cs
mov
mov
inc
lea
ficoml
pop
mov
ficompl
cmp
ja
xchg
and
pop
jns
push
jb
leave
pop
js,pt
dec
jecxz
loopne
sub
push
jmp
aad
scas
punpckhdq
fimuls
lds
repnz
adc
cwtl
fs
lock
dec
loopne
cmp
pop
push
std
clc
xorb
dec
nop
repnz
push
rol
cmpsl
pop
or
push
loop
lods
test
cmp
jge,pt
lock
mov
and
lock
jp
jno
mov
inc
sbb
add
add
or
pop
mov
fdivl
jne
pop
das
push
dec
cli
cmp
inc
loope
fwait
jno,pt
loope
inc
insb
or
sarl
dec
loopne
shrb
adc
dec
jmp
bound
or
loopne
sub
insb
mov
pop
xlat
movsb
js,pt
lods
sbb
pop
or
cmp
mov
xchg
je
adc
hlt
or
xchg
push
fildll
ret
rcrl
push
pop
sbb
pop
imul
fdivp
mov
cmp
push
mov
roll
shlb
lods
sti
mov
jp
rol
inc
mov
xor
jle
jnp
jle
fisubs
pop
mov
push
out
push
int
fistps
add
in
rcl
out
test
and
aaa
inc
and
pxor
cmp
jecxz
sahf
jecxz
dec
dec
aaa
bound
mov
xor
test
mov
cmpl
and
or
orb
adc
inc
push
inc
aaa
mov
sbb
fs
in
push
repz
sub
rcl
aad
xchg
popa
inc
stos
pop
int3
mov
mov
aam
mov
fdivrs
mov
mov
pop
jge
lock
call
aas
ds
and
push
inc
imul
data16
mov
pushf
adc
in
cmp
lock
cmp
push
mov
loopne
adc
loopne
mov
fimuls
aad
shlb
aaa
aaa
aaa
add
cmp
and
jge
aaa
jns
repz
repnz
push
cmp
cmp
jmp
add
jge
mov
aas
push
jno
out
loop
idiv
ret
xchg
xchg
movsb
pushf
data16
je
xchg
ja
cmp
loopne
fldt
in
cmp
pop
dec
sahf
xor
dec
jae
loop
fmuls
dec
cmpsl
lahf
loopne
enter
xchg
push
add
pop
das
out
dec
icebp
jecxz
clc
insb
mov
sub
jg
pop
aas
jl
lock
jecxz
movsb
jge
in
push
sub
loopne
mov
int3
push
jbe
fisubrl
lcall
vcmppd
movsl
push
mov
loopne
paddb
jge
cmc
sahf
aad
mov
js
js
aam
xor
push
jbe
mov
sub
cmp
jecxz
std
inc
inc
lock
xor
dec
xor
mov
jp,pt
jp
fcompl
sbb
dec
cld
js
mov
int3
stos
in
loopne
fisttpll
sahf
pop
int3
call
test
sti
sbb
mov
movsl
out
mov
dec
mov
pop
sahf
xchg
inc
addl
gs
pop
push
sbb
mov
pop
fcmovb
aam
aas
dec
fsubr
add
add
mov
xchg
loope
cmp
fdivp
pop
push
mov
lret
fcoms
lds
pop
imul
loopne
fbstp
dec
pusha
xchg
xor
lds
sbb
fs
xchg
push
inc
out
mov
inc
cmp
mov
outsl
icebp
jmp
rorb
call
mov
mov
dec
lret
sub
sbb
shrl
jecxz
loopne
scas
pop
fs
xchg
aad
dec
mov
mov
mov
mov
scas
pop
cltd
xorb
clc
cli
ds
aas
stos
adc
lock
js
inc
data16
mov
mov
jp
cmp
sub
sbb
xor
into
jp
jp
mov
xor
inc
inc
jbe
out
aad
inc
and
and
insb
xorb
test
pop
rolb
pop
int
jp
jmp
xor
out
fdivs
bound
jno
sbb
push
iret
lcall
mov
ss
add
es
push
fidivrl
lahf
jle
mov
dec
push
mov
sub
inc
bound
ljmp
push
pop
mov
push
cltd
adc
mov
rcrb
fmul
sar
scas
sub
mov
jo
jp
imul
aaa
test
lock
adc
mov
sbb
sti
jle
pop
sbb
ret
dec
cmpsb
sub
push
jmp
repz
sbb
icebp
cmp
sarl
fistpl
jmp
pop
aas
pop
fidivl
sub
testl
inc
lcall
loopne
jg
ss
sahf
xchg
pop
mov
push
subl
in
mov
dec
sbbb
lahf
jl
sub
sbb
and
notl
pop
mov
push
popf
cmc
mov
mov
jmp
ret
stos
jo
call
sub
movhps
xchg
ja
rcl
outsb
adc
xchg
ret
cmpsl
sbb
outsb
inc
in
rorb
cs
pop
rclb
xchg
cs
jl
loope
jl,pn
or
dec
test
cs
orb
adc
lods
dec
cmpsb
sarb
loop
rcll
sbb
sbb
lret
or
hlt
ret
cmp
sub
and
or
dec
cli
test
jecxz
add
not
sahf
push
cmp
or
ds
jge
jecxz
out
inc
mov
adc
push
and
test
loopne
inc
jb
roll
loope
sahf
fisubrl
sbb
or
or
push
aas
pop
cld
xchg
and
cli
ss
ret
xchg
les
jle
xchg
in
lods
cmc
fcmovbe
jl
hlt
ds
gs
pop
andb
cmc
jecxz
clc
addl
pop
jae
aam
loopne
lock
cmpsb
pop
pop
ficoms
xchg
loopne
call
out
je
sbb
jns
fcmovnu
jle
push
nop
fistps
fisubrl
lea
jle
fwait
icebp
fxch
jle
nop
loopne
jmp
sub
jo
aaa
fdivrp
sub
clc
adc
test
cmp
xlat
test
pop
ljmp
sbb
int3
mov
movd
ja
xchg
add
mov
das
call
into
xchg
mov
fdiv
ljmp
mov
test
add
dec
dec
cmp
adc
ja
push
cld
hlt
pop
xchg
call
xor
cltd
cli
fadds
pop
push
sbb
dec
pop
bound
idivl
mov
cmp
pusha
cmp
mov
insl
push
jmp
enter
shrb
repz
cs
pop
adc
ret
add
jmp
stos
das
dec
test
push
sbb
pop
lret
scas
in
adcb
inc
jp
jecxz
push
sbb
test
add
mov
icebp
jecxz
ljmp
cmp
outsb
inc
pop
jge
ljmp
mov
cmp
jl
push
pushf
aam
jl
jno
ds
ret
inc
stos
cmc
cmp
inc
jb
inc
out
andl
imul
jl
pop
lea
or
insb
jp
jecxz
test
test
in
cmp
fistpll
rclb
mov
xchg
icebp
jnp
bound
fidivs
pop
xchg
mov
xlat
mov
hlt
or
test
loopne
mov
inc
pusha
sahf
js
push
rol
std
mov
sbb
sbb
mov
mov
clc
je
ds
fimull
test
mov
adc
push
dec
adc
pop
clc
mov
ret
sub
js
cmp
mov
jl
cmp
or
scas
sbb
ljmp
add
pop
lea
jp
mov
fidivrl
xlat
ds
cmpsl
pop
pop
jle
cmp
or
repz
xchg
in
inc
mov
mov
mov
cwtl
mov
cltd
enter
lds
xchg
xchg
cld
outsl
xchg
into
jns
mov
push
or
push
int
mov
and
inc
push
loopne
push
jl
and
push
push
push
ds
cmpsb
cld
and
push
push
xchg
cmp
cmpsb
or
xchg
arpl
ds
lahf
outsb
and
decb
push
cmp
out
pop
dec
pushf
dec
shlb
js
adc
jle
jne
fiadds
mov
adc
push
dec
mov
aam
xchg
popa
push
ds
mov
pop
mov
cmc
ljmp
test
cmpsb
stos
shl
imul
out
test
cmp
mov
in
inc
sub
cli
jge
or
aas
sbb
fmuls
loopne
outsb
mov
in
mov
jge
push
loope
jbe
sbb
ret
scas
pop
jle
mov
jle
push
repz
enter
movsl
or
push
xor
clc
mov
movsb
add
loop
cmp
add
fimull
mull
cmp
mov
cld
jo
sub
dec
sub
lock
jmp
pop
xchg
scas
sub
movb
sbbl
iret
sahf
jl
mov
bound
jle
repz
lods
dec
xor
js
rclb
add
mov
test
xor
push
hlt
sub
jb
or
adc
js
xchg
or
ja
shll
pop
cltd
mov
in
aas
mov
add
jb
test
mov
jmp
fadds
xor
lret
aad
mov
mov
mov
loopne
shll
repz
sub
cli
rolb
testl
xor
pop
mov
dec
les
xchg
mov
mov
ret
xor
dec
jns
sub
gs
jp
js
pop
sub
xchg
mov
pop
sbb
jae
sahf
test
push
xchg
das
lds
ds
orb
or
mov
fs
and
cmp
inc
icebp
sbb
loope
mov
stos
mov
popf
push
ja
cmp
push
mov
xlat
push
mov
pop
pop
shl
jl
pushf
fidivs
xor
es
xlat
xor
addb
xchg
sub
adc
jbe
cmpsb
subb
pop
adc
pop
mov
mov
out
sub
pop
lods
outsl
mov
add
sbb
mov
xor
push
addr16
fstl
mov
jg
cmp
in
or
std
pop
and
push
dec
jecxz
and
mov
inc
mov
ret
pushf
push
pop
mov
mov
cli
out
int
cld
js
push
loopne
fcoml
rolb
push
popf
test
test
mov
sub
lock
pop
cmp
add
inc
inc
push
jp
sahf
add
mov
lock
jle
jecxz
xchg
stos
dec
push
cwtl
hlt
jecxz
movsl
movsb
jno
xchg
repnz
cmp
cmp
xor
dec
sbb
mov
das
mov
lcall
pop
push
rolb
sub
inc
stos
lahf
mov
adcb
adc
mov
xchg
mov
jbe
jmp
hlt
pop
pop
aam
js
jle
push
loopne
in
mov
ja
sarl
popa
pop
pop
test
test
adc
push
stc
call
adc
movsb
orb
in
and
aaa
loopne
out
inc
lods
cltd
add
insb
push
jg
mov
xor
test
xchg
movsb
dec
push
cmp
push
mov
xor
fcoms
and
or
jne
pop
mov
pushf
sahf
cmpsb
xor
adc
setne
add
rol
or
les
ss
out
imul
js,pt
jp
jbe
push
mov
mov
sbb
out
sbb
jge
call
push
mov
cmpsb
mov
mov
sarb
lock
cmp
push
and
rolb
aaa
and
lods
shr
loop
call
imul
bound
and
rclb
ret
fistpl
mov
jo
mov
mov
push
adc
xor
rcrl
sbb
adc
pop
cmp
and
das
icebp
ljmp
inc
movsb
adc
xor
fwait
notb
add
call
into
cmp
cmp
jae,pn
pop
cmp
out
aad
push
sarb
push
jmp
pusha
pop
xchg
icebp
js
mov
mov
push
or
call
mov
and
pusha
add
test
nopl
call
lods
fisubrl
cmp
shrb
mov
jmp
mov
sbb
pop
push
add
mov
fcmovb
xchg
pop
mov
aas
push
call
dec
sub
jp
jl
xchg
adc
mov
push
cmp
outsl
xchg
fdivrs
negl
adc
ret
sub
pop
jle
ret
or
sbb
scas
mov
xchg
into
ss
dec
jle
std
icebp
sbb
xchg
jbe
adc
sub
xor
rorb
das
stos
in
push
dec
ds
mov
aas
mov
cmp
loop
clc
dec
fisttpll
mov
ss
cli
icebp
fiadds
testb
xchg
ret
in
cmp
leave
fcom
imul
xchg
mov
mov
clc
loope
loope
push
andl
jo
movsb
inc
aam
xor
stos
dec
jl
jmp
cmp
mov
stc
data16
push
jp
mov
imulb
in
loope
fs
sahf
dec
xchg
data16
mov
mov
dec
shl
scas
int
insb
or
mov
or
int3
or
hlt
jnp
inc
dec
mov
repnz
xchg
clc
ds
inc
adc
aaa
shr
nop
clc
not
loop
and
pop
jo
std
sbb
or
and
pop
mov
mov
into
sahf
jle
sub
cmpsl
lods
ret
mov
aas
pushf
cmp
xor
xor
add
pop
movsb
iret
repz
movsb
ss
mov
xor
mov
mov
mov
div
push
loope
add
lods
adc
push
movsb
mov
xchg
fdivrs
jle
sub
sbb
mul
rcrl
adc
dec
out
push
and
idivl
std
insb
mov
loop
adc
cmc
test
xor
aaa
ror
arpl
nopl
jle
dec
xchg
jecxz
shrb
jno,pn
mov
out
inc
nop
clc
xchg
repnz
push
nop
cmc
call
imul
lods
cmpsb
cld
cmp
mov
inc
mov
and
pop
add
pop
out
adc
out
ret
xchg
fiadds
clc
jbe
add
and
sub
mov
cli
sbb
lcall
push
insb
stos
and
fimuls
pop
mov
xor
je
cmpsb
mov
jge
inc
push
jp
cld
cmp
ficomps
jle
dec
sub
rcl
divl
loop
loopne
mov
or
mov
movswl
insb
sbb
je
push
xchg
in
mov
es
clc
ds
push
mov
je
insb
xchg
cmp
xlat
test
movsl
pop
stc
movsl
popl
cmp
dec
daa
loopne
shll
dec
call
add
into
out
cmp
orb
inc
test
shrb
push
stos
lods
add
lds
es
or
mov
fdivrs
xor
scas
jle
movsb
push
mov
daa
jnp,pn
inc
sub
pop
push
cmp
xor
movd
aad
mov
jg
sahf
lahf
cs
jle
cltd
nop
pop
loopne
sub
lea
push
sarb
cmpsl
movswl
loop
pop
aaa
jl
test
call
ret
cs
mov
outsb
and
fldenv
pop
loopne
jb
pop
lea
hlt
push
and
insb
cmp
inc
jg
jno
sbb
and
cmc
shlb
jp
std
ljmp
imul
clc
jmp
jo
sbb
outsb
push
jp
cld
cmp
ds
push
fdiv
and
sti
mov
mov
mov
shlb
pop
rorb
pop
xor
clc
cmc
subb
mov
mov
js
mov
lds
push
jbe
nop
hlt
les
mov
std
lock
pop
and
push
scas
int3
aam
pop
nopl
fdivrs
sub
jle
push
mov
push
insb
xchg
mov
out
addr16
repnz
icebp
lcall
push
repnz
and
out
fs
das
lock
jae
jmp
pop
lahf
lods
sbb
push
cmpsl
jle
fsubrs
mov
int3
fnstcw
andb
mov
imul
mov
mov
bnd
pop
das
jle
push
lock
push
lock
ret
ret
mov
xchg
push
ficomps
jo
sbb
bound
repz
lcall
xor
jl
iret
iret
pushf
scas
xchg
xor
mov
gs
jle
add
xchg
mov
mov
out
and
ja
mov
cmp
mov
dec
aam
lods
insb
fimuls
lahf
shl
push
push
add
push
mov
clc
cs
mov
lock
sbb
dec
dec
pop
test
xor
mov
jl
fsubs
mov
add
push
add
ja
lock
das
clc
jb
out
ficomps
aad
mov
aad
jle
fimuls
cli
subb
testb
lock
int3
cmpsb
push
add
hlt
call
es
sahf
and
jl
pushf
adc
push
mov
cli
mov
xchg
cli
jo
jg
imull
add
xchg
jae
mov
pop
mov
repnz
incb
sahf
lahf
divl
cld
xchg
pop
js
sbb
nopl
jo
inc
push
push
pushf
or
aad
inc
out
mov
jbe
int
shl
shlb
and
adcb
aam
sub
sbb
mov
ficompl
clc
jmp
insb
pop
pop
imul
loope
lock
je
or
out
dec
mov
ss
jo
jnp
aas
cmp
ret
adc
cmp
xchg
clc
outsb
pusha
loope
out
shll
shl
cmp
add
clc
clc
jmp
mov
int3
xchg
push
rolb
dec
insb
dec
inc
pop
lock
aaa
cmp
test
inc
out
sar
jo
cltd
ds
mov
jle
dec
ljmp
add
cmp
ds
in
sbbb
mov
mov
rclb
jle
add
dec
and
mov
dec
or
mov
sarl
cld
insb
std
xchg
jmp
add
mov
cs
mov
stos
dec
leave
imul
stos
gs
hlt
loope
dec
mov
call
scas
cmp
enter
or
icebp
mov
add
hlt
xchg
loop
jne
jns
xchg
sub
js,pt
push
ror
pop
pushf
mov
lods
xor
push
jp
lea
adc
lea
add
add
iret
jge
icebp
adc
dec
cld
mov
inc
outsb
jbe
mov
sti
fcom
data16
jp
ja
sbb
xor
sbb
lds
inc
adc
lock
push
pusha
push
ss
testb
sarb
imul
mov
loop
mov
xchg
cmc
popa
and
push
push
cltd
adc
cld
les
cli
mov
add
std
cs
lods
mov
mov
push
rol
inc
adc
fiaddl
inc
sbb
bound
in
cmp
imul
subb
push
mov
or
xor
xor
cli
mov
jp
sbb
nop
test
sarl
inc
adc
stc
mov
jl
dec
test
repnz
movl
push
pop
test
pop
stos
inc
dec
xchg
cli
es
jae
pop
push
into
adc
or
xchg
inc
inc
jecxz
mov
repnz
test
lods
ret
adc
es
scas
ds
ds
dec
dec
sbb
xchg
inc
outsl
adc
pop
xlat
arpl
lahf
rol
daa
pop
jnp
jg
push
push
cmc
add
xor
xor
aad
mov
loop
or
ret
mov
sbb
pop
lahf
push
clc
leave
imul
cli
inc
or
loop
out
pop
shl
add
cmp
bound
mov
jmp
rorb
and
push
cmp
cmpsb
and
mov
push
xchg
pop
push
js
lods
jle
cs
scas
push
lock
pop
mov
or
dec
inc
loopne
push
out
call
jb
add
test
je
loope
xchg
adc
mov
repnz
and
fistps
mov
add
mov
cmp
mulb
mov
out
or
sbb
out
fnstenv
adc
lahf
pop
cmp
fisubs
mov
fldcw
cmpsl
adc
subb
popl
jno
sub
xchg
stos
pusha
xrelease
cli
jecxz
mov
loop
pop
mov
hlt
es
adc
and
xchg
test
fistpll
mov
orps
divb
fmuls
cmp
pop
mov
adc
adc
fnstcw
aas
jno
jp
lock
je
jnp
mov
stos
in
aad
outsb
jl
push
and
scas
fimuls
loop
cmp
mov
stos
pop
push
jecxz
mov
scas
cld
les
jp
inc
sbb
xchg
pop
jle
cli
ljmp
in
push
hlt
leave
mov
js
es
cld
push
adcb
and
sbb
lock
pop
mov
and
hlt
not
es
faddl
pop
mov
sahf
adc
add
mov
ss
and
shrb
cmp
xor
fsubrs
cmpsb
adcl
cwtl
xchg
mov
jo
inc
lods
or
mov
add
mov
sar
loope
xorb
cs
mov
dec
jecxz
jno
cmp
adc
fmuls
cli
clc
pop
mov
jecxz
sahf
push
and
mov
shlb
add
push
call
sub
test
xor
pop
xlat
fistpll
scas
mov
enter
mov
cmpsb
jp
push
popa
and
cs
ret
addb
jbe
push
pop
mov
add
or
outsl
or
or
roll
ja
inc
xchg
push
sahf
test
test
cmp
rcrb
ss
xchg
jb
out
popa
inc
lahf
push
mov
icebp
mov
pushf
and
rorl
pop
popf
or
mov
push
push
test
dec
icebp
clc
icebp
imul
std
adc
stos
sbbl
std
xchg
xor
inc
or
sbb
out
std
sbb
mov
or
mov
lock
or
out
lret
out
adc
or
pop
pavgw
xor
or
lahf
shrb
push
loopne
or
mov
lea
jo
cmp
hlt
add
inc
test
cli
fidivrl
js
or
sbb
cmp
xor
push
push
pop
cmp
aas
bound
clc
pop
xchg
pop
push
cmp
sub
not
jno
pop
mov
incb
aam
ret
xchg
sbb
mov
fcoms
mul
xlat
stos
mul
dec
ret
pushf
imul
jns
jl
cli
shl
stc
icebp
aam
testb
push
scas
aad
mov
jmp
pushf
mov
hlt
jbe
les
adc
fisubl
loop
hlt
loopne
lock
ret
cmp
jge
jp
fs
jp
pop
bound
scas
cmp
push
lahf
ds
ds
pop
or
jmp
arpl
loop
cmpsl
sbb
add
rcrl
es
mov
xor
pushf
jo
cs
jo
subb
jle
ljmp
jg
dec
cmpsb
jne
rorb
sahf
pop
push
dec
int3
mov
push
cmp
lods
mov
loopne
testb
sub
push
aas
rolb
pusha
mov
fistpll
fnstcw
inc
pusha
into
out
jge
call
mov
push
in
lret
cmp
mov
jge
pop
clc
inc
hlt
add
loopne
cmp
out
and
inc
xchg
fimuls
cmp
sti
jp
mov
in
ss
shl
clc
sub
stc
cld
orb
xor
aad
pop
add
mov
xchg
dec
imul
cli
fidivrl
xor
lds
es
xchg
not
ret
push
push
shr
add
pusha
push
mov
push
push
mov
sbb
and
shlb
dec
mov
imul
popa
inc
sbb
push
cld
icebp
leave
rclb
mov
dec
loop
or
in
cs
push
or
in
jmp
repnz
movsb
ja
repz
and
mov
or
pop
inc
xchg
mov
xchg
sbb
xchg
out
inc
xor
inc
loopne
sub
dec
stos
jo
jge
icebp
roll
xlat
pusha
push
movsl
cli
cmc
outsl
and
sbb
mov
not
or
and
and
jmp
pop
jg
rcl
faddl
mov
jmp
movsb
pop
mov
outsl
jmp
jnp
cltd
in
into
jnp
gs
pop
jmp
push
or
fsubrl
cmp
pop
jo
lahf
jo,pt
test
adc
or
call
fcmovu
inc
mov
sbb
cmpsb
cmpsl
pop
scas
fiadds
call
ret
and
adc
jl
icebp
push
xchg
repz
shrl
ret
js
xchg
push
adc
repnz
mov
addb
insb
scas
push
cld
pop
xor
jge
push
cs
out
rcll
inc
lods
pop
sub
mov
loopne
orl
loopne
out
stos
scas
push
jge
sub
loopne
loop
aam
pushf
or
dec
fcoml
pop
das
ss
push
mov
xor
rol
pop
push
sub
xlat
in
push
out
in
hlt
jecxz
movsl
sub
push
nop
dec
cmp
mov
mov
shl
add
clc
mov
pop
inc
iret
or
cs
jle
cmpsb
pop
xchg
adc
clc
xchg
loop
out
outsl
stos
add
sbb
adc
call
and
xchg
int3
or
loopne
fmull
jo
lods
jo
mov
xchg
aas
xchg
push
ret
jbe
clc
cmc
adc
in
js
rorl
mov
mov
mov
clc
mov
dec
pop
jecxz
mov
jle
je
push
push
test
clc
dec
push
mov
ljmp
iret
push
movsl
dec
pop
out
mov
ret
movl
jae
xchg
insb
ds
cmp
jp
mov
jge
scas
hlt
jo
clc
push
xchg
testl
jmp
cmpsl
in
sbb
cmc
ljmp
xchg
mov
fdivr
mov
adc
push
pop
push
xchg
dec
fwait
add
pop
inc
loopne
test
adc
pop
jge
jle
frstor
adc
lret
mov
add
std
lock
les
pusha
test
divl
pop
mov
out
rclb
addb
lock
inc
push
repnz
out
pushf
in
mov
shll
pop
add
out
jmp
adc
loop
push
lock
mov
mov
cli
xor
insb
stos
test
scas
jae
aad
and
dec
mov
out
loopne
sbb
or
and
std
cli
arpl
std
dec
or
cld
mov
xor
div
xchg
jno
jecxz
fsts
add
mov
push
pop
cld
cmc
cmp
xchg
jge
xor
rcr
jle,pt
stos
ljmp
jp
push
inc
call
mov
xlat
jp
cmpb
js
loope
fcompl
icebp
jmp
leave
mov
mov
jno
xor
or
or
fwait
push
xchg
enter
add
add
scas
xchg
xchg
scas
sbb
and
push
std
cmc
push
jl
lock
hlt
mov
jmp
pop
xadd
mov
dec
pop
inc
movsbl
add
std
jb
scas
iret
mov
sahf
jp
jnp
or
lds
pop
pop
mov
aaa
mov
xchg
lock
cld
cld
mov
and
fbld
icebp
add
out
mov
inc
add
adc
cmp
cmp
adc
or
pop
mov
clc
inc
pop
test
cmpxchg
das
inc
mov
jb
xchg
sub
out
cli
cmc
sahf
test
jle
es
movsl
jno,pt
jle
sarb
js
and
out
jo
mov
and
arpl
inc
xchg
shrl
jp
dec
cmp
xlat
out
filds
in
dec
sub
sub
cmp
sbb
cli
cs
mov
xchg
test
clc
cmpsb
cmp
filds
clc
mov
icebp
sub
ds
jp
jge
sub
ret
adc
and
cmpsl
rorb
cld
inc
and
loopne
cmpxchg
push
cwtl
and
popa
sbb
loopne
hlt
add
data16
insb
test
stc
and
mov
xchg
adc
lods
pop
hlt
clc
icebp
loopne
dec
sbb
add
aas
push
jle
fstpt
ficomps
cmpsb
js
jle
les
jbe
push
rcrb
pop
paddd
repz
push
insb
es
data16
fisubs
mov
pop
ficoml
jle
lock
insb
and
or
shl
jecxz
cmp
push
inc
inc
adc
inc
in
dec
cmp
in
dec
mov
subl
lds
mov
loop
rclb
dec
repz
jbe
mov
into
or
sub
dec
addr16
xchg
mov
inc
mov
ds
lock
inc
movhps
clc
call
mov
sbb
mov
loopne
mov
call
gs
ds
out
cmp
arpl
pop
sahf
xor
out
lock
jle
outsl
xlat
jbe
push
cmp
dec
sarb
push
test
stos
xchg
mov
rcr
adc
sti
loope
and
test
inc
mov
ret
inc
or
jge
int
cmpsl
jns
adc
sbb
ja
and
stos
inc
pusha
add
push
out
sbb
pop
sbb
ds
andb
xor
aas
lock
mov
or
jp
repz
xor
jl
sti
pop
xor
push
jbe
loopne
pop
and
bound
fldl
jl,pt
xchg
into
xchg
js
and
inc
cld
xchg
push
sub
pop
add
out
nop
pop
sub
out
xlat
das
pop
pop
jl
sahf
adc
int3
inc
fs
and
lahf
mov
jp
add
inc
xchg
sti
arpl
push
push
push
fbstp
mov
cld
add
ret
movsl
shl
jmp
shlb
test
jge
jge
mov
dec
xor
inc
cltd
sub
pop
cpuid
mov
jge
je
or
push
adc
ljmp
cmp
inc
sub
gs
pop
pop
mov
addr16
mov
gs
pop
mov
fucomi
loop
jmp
sbb
fucomi
loop
lret
pop
pop
setle
add
pop
mov
jno
shll
cltd
orb
lcall
aad
jb
dec
mov
imul
dec
or
sub
popa
je
mov
jbe
xor
sbb
cmp
inc
mov
enter
sbb
or
dec
clc
movsl
sbb
pushf
and
in
push
cmpl
jl
stos
je
or
jp,pt
adc
outsb
into
mov
lcall
push
jle
pop
pop
jp
int
cmp
jnp
jl
loope
inc
out
sub
stos
push
fistps
cmc
pop
mov
sub
in
out
aam
dec
pop
adc
loopne
cmpsb
outsb
xchg
add
rorb
sbb
js
jl
mov
fadds
dec
and
test
clc
icebp
icebp
sti
xor
andb
and
xchg
hlt
addr16
hlt
aam
adc
jmp
setb
sti
cld
dec
push
mov
orl
mov
femms
dec
das
cld
pop
xchg
fwait
add
or
xchg
shlb
xchg
cmp
pop
mov
mov
faddl
xor
xlat
fmuls
stos
mov
fdivrs
in
pop
stos
lock
mov
adc
inc
loop
mov
js
mov
xchg
filds
notb
out
iret
cs
hlt
cmp
sbbb
jp
add
mov
pop
ds
paddw
icebp
std
mov
and
mov
lahf
aas
aam
add
add
xor
js
push
dec
es
adc
lds
orb
clc
pop
mov
mov
or
dec
rcl
out
jnp
inc
fcoml
das
xchg
data16
in
xchg
cmc
mov
in
pop
addb
adc
sbb
in
subl
jg
or
jge
bound
cmp
push
insl
adc
pop
jp
jnp
xchg
mov
inc
dec
movsl
dec
xor
int
aaa
loope
lock
pushf
xor
pop
xor
inc
xchg
dec
ljmp
je
fmull
not
popf
das
push
xor
pop
shll
push
das
test
inc
lahf
pop
cmp
push
mull
shlb
pop
push
xchg
icebp
jp
cmp
lahf
mov
jbe
sbb
out
lcall
add
lret
push
pop
and
mov
xchg
cwtl
cli
loope
cmp
sahf
mov
jno
or
push
jb
jns
mov
pop
pop
cli
dec
std
inc
jl
sub
popa
jl,pt
sub
mov
pusha
fadds
add
jl
xor
andl
dec
xor
jl
push
pop
test
clc
and
sahf
mov
mov
xor
and
xchg
loop
xchg
sti
jp,pt
inc
hlt
cmp
cli
pop
shrl
mul
lcall
sbb
loope
push
push
jmp
inc
clc
iret
cmp
jg
fs
test
movb
ret
aad
adc
sarb
push
lods
idivl
ds
pusha
pushf
jecxz
int
sbb
mov
shrb
in
push
aam
adc
out
into
pop
sbb
not
mov
fisubrs
fsubrl
cli
dec
dec
jns
push
dec
xchg
ljmp
dec
pop
jb
loopne
xor
incb
cmp
push
jl
ficoms
inc
adc
sbb
loop
push
fs
cmp
add
jbe
xchg
add
fnstsw
or
aas
adc
out
push
pop
daa
sar
repnz
in
mov
cmp
adc
jbe
mov
ret
imul
lds
mov
dec
cmc
out
pop
push
sbb
adc
mov
mov
jge
hlt
ljmp
adc
addr16
sbb
ja
jge
jle
bound
cs
mov
dec
add
pop
mov
ror
fdivrl
cli
jecxz
pop
push
outsb
pop
push
dec
mov
clc
sahf
or
fwait
or
rclb
mov
cli
mov
sarb
jnp
inc
je
lahf
jl,pt
scas
loop
sub
mov
mov
jae
aas
inc
jmp
xchg
pop
rclb
lods
ficomps
movd
aas
jle
fisttps
jecxz
scas
pop
movq
mov
jg
sub
aad
xlat
into
sbbl
aas
cmp
lock
arpl
sbb
int
icebp
sbb
push
es
lods
aaa
mov
add
pop
into
xlat
jg
pop
inc
test
mov
jae
test
jp
push
xchg
out
lret
shr
fs
fidivrl
cmp
clc
dec
enter
xor
xor
or
xlat
or
push
sbb
outsb
loop
jno
sbb
ror
test
int3
in
jno
sub
fdivs
ds
loop
mov
jo
shr
fidivrl
xchg
ret
hlt
push
test
outsb
fcoms
dec
aas
mov
les
out
sub
loopne
ljmp
cld
cmp
pop
fs
jle
icebp
xchg
sbb
inc
push
addb
sub
mov
aas
ds
cmp
gs
xor
dec
mov
ss
dec
jmp
fdivl
xchg
and
pop
stos
cmp
mulb
call
xchg
repz
test
hlt
sub
sub
push
iret
xchg
pop
movups
jp
or
jge
popa
add
or
out
pop
mov
jo
movsl
or
sub
cmp
sarb
bound
fisubs
rcrl
xor
jecxz
adc
ss
idiv
jp
cld
into
sub
lahf
jmp
inc
sbb
sti
in
push
bound
xor
jl
ljmp
add
inc
mov
inc
xchg
and
aas
add
push
test
clc
jecxz
adc
xchg
repz
pop
aas
pop
cld
xor
rolb
fdivr
mov
xchg
or
mov
fsubr
xchg
jl,pt
pop
cmpsb
xlat
enter
xorb
cmp
pop
fcomp
xchg
jp
xor
fmuls
cmpsb
into
mov
xor
ds
sahf
sarb
jle
mov
pop
mov
jo
insl
sbb
sbb
lds
fcoms
mov
rorb
push
cli
push
lea
mov
push
test
xor
add
rol
sub
xlat
hlt
movb
loope
or
cmp
icebp
push
shrb
and
push
inc
rol
pop
pop
mov
js
sub
xchg
inc
fiaddl
cmc
sti
adc
cmp
fmuls
test
sub
ljmp
js
fdivs
ficompl
out
inc
ret
adc
enter
aaa
push
jle
dec
jbe
cmp
add
aaa
hlt
loopne
cmpl
cmc
shl
scas
ficompl
jle
ret
jecxz
mul
mov
in
es
cli
sbb
mov
lret
push
lods
lret
out
ret
out
lock
mov
jns
pusha
push
es
loop
mov
push
mov
cmp
sahf
sahf
mov
mov
mov
adc
mov
push
or
imul
push
xor
jbe
push
pop
lahf
sub
push
and
cs
push
test
stos
sbb
inc
js,pt
insb
les
jl
gs
je
ret
pop
or
pop
pop
pop
mov
lods
rcrb
cmp
pop
or
into
fdivr
lret
mov
push
sbb
pusha
cmp
add
sarl
call
roll
inc
pop
mov
push
xchg
iret
cmp
push
pop
fdivrs
call
lock
cwtl
arpl
mov
call
pop
xchg
sbb
mov
rol
cmpsb
push
fcoms
jo
test
out
loop
cwtl
lock
mov
push
jmp
jo
push
dec
lret
jle
inc
and
cli
mov
sbb
or
mov
cmpsl
insb
je
rolb
push
inc
ds
call
scas
lret
fs
jmp
push
jmp
loopne
push
clc
icebp
cld
out
mov
insb
jbe
mov
scas
inc
loop
pop
pop
movsb
ss
fbld
js
or
mov
mov
out
ja
push
mov
mov
ret
mov
sbb
popa
sub
mov
idiv
push
cwtl
pusha
push
insb
mov
mov
in
popf
adc
loope
push
int3
movsb
cmp
loop
insb
rcrb
lock
sbb
add
mov
outsb
add
push
cli
lock
and
dec
adc
icebp
mov
inc
loopne
loopne
out
roll
jne
rolb
mov
icebp
sbb
les
gs
lock
and
inc
cmp
mov
call
ljmp
cmp
or
insl
xor
bound
leave
js
cmp
lock
dec
es
adc
das
dec
sub
cmp
add
jge
cmpsb
jo
push
aas
call
mov
dec
mov
fwait
lock
add
les
or
mov
cld
lret
mov
cli
jo
jge
jle
mov
in
push
cmpsb
or
add
cs
mov
fisubs
es
inc
xchg
adc
hlt
push
push
iret
jbe
jle
in
lods
mov
std
orl
push
daa
push
mov
es
dec
pop
lahf
push
inc
in
dec
and
mov
sbb
hlt
loop
or
loopne
cmp
dec
sbb
sub
cmp
cmp
std
mov
addr16
push
loopne
push
jle
pop
into
out
add
lret
aaa
push
cmpsl
mov
hlt
push
paddb
jle
mov
add
leave
fdivrl
cli
insb
outsb
pop
xor
mov
or
js
dec
cmp
fs
add
pop
jle
sti
inc
mov
cmpsl
pop
cmp
xorb
rolb
rol
dec
add
lods
sbb
push
sub
sbb
pop
pop
mov
ret
repnz
fwait
lock
hlt
push
sub
adc
pop
mov
into
mov
add
mov
pop
cld
insl
jmp
sub
mov
mov
cmp
adc
and
or
inc
mov
addr16
loope
shrl
and
shl
cli
and
lretw
mov
jae
loope
adc
push
loopne
xchg
cli
lock
pusha
dec
in
bnd
lock
jnp,pt
scas
shl
mov
xlat
ja
test
fisttpl
movhps
mov
adc
pop
mov
je
shrb
mov
cmpsl
sub
pop
dec
sbb
inc
xchg
cmpsl
mov
dec
push
pusha
scas
jle
or
jmp
out
inc
outsb
orl
rorl
inc
push
aad
adc
pop
test
cs
lock
xchg
je
out
les
fisttpl
les
pop
pop
orb
jns
mov
xchg
mov
mov
ds
repnz
pop
add
js
sahf
ss
shlb
push
push
loopne,pn
pop
cmpsb
fnstcw
faddl
cmp
add
cmp
call
pop
rorl
mov
xor
clc
lock
cmc
sbb
or
std
lea
or
in
add
clc
adc
push
dec
mov
jp
hlt
mov
je,pt
cmpsb
jg
ljmp
testb
and
sub
sbb
out
aas
jno
pop
jo
movsb
out
aad
clc
scas
int
inc
das
dec
fnstcw
shll
shl
scas
inc
es
and
and
push
in
je
hlt
out
data16
mov
ds
adc
fisttpl
dec
push
cmp
negb
loope
cmp
repnz
pop
inc
scas
pop
out
pop
in
sub
cmp
scas
xor
adc
cs
inc
aas
out
push
fiadds
in
jnp
pop
fcmovbe
jle
mov
subb
jns
lret
ficomps
das
out
jb
mov
fcmovbe
push
add
push
jl
fwait
icebp
sbbb
in
pushf
mov
rorl
prefetch
or
and
icebp
insl
ror
add
lahf
test
sbb
or
pop
fldcw
rcrl
mov
or
xchg
out
jp
movsl
inc
or
data16
fcoml
imul
out
mov
inc
mov
mov
jl
lret
mov
or
hlt
call
int3
push
cli
jl,pt
xchg
loop
rorb
inc
lods
pop
dec
sub
jl
loop
sbb
sub
std
mov
jecxz
in
sbb
in
ret
add
sub
cmpsl
clc
jmp
test
mov
fcompl
or
andb
inc
xchg
lods
ret
jmp
aas
mov
in
or
cli
js
add
arpl
sub
hlt
push
cli
or
daa
lods
sub
iret
aas
lea
jl
add
sahf
sar
stc
cli
icebp
sbb
push
mov
mov
stos
arpl
xchg
or
xchg
mov
cltd
js
push
cmp
push
dec
ret
add
mov
mov
aas
push
loopne
mov
pushw
call
stc
mov
push
sti
je
rorl
cmp
sub
sti
test
mov
sbb
cs
aad
push
psubb
addr16
jle
clc
icebp
loope
cmpxchg
add
jmp
aas
xchg
scas
mov
sub
notb
add
shr
shll
or
jle
jnp
iret
daa
adcb
cli
call
sbb
xor
sahf
subb
add
aad
cwtl
cmp
mov
xor
repz
insl
mov
test
mov
jb
clc
je
loop
rolb
lock
inc
add
lock
add
add
mov
and
icebp
mov
jecxz
aaa
stc
lahf
jne
popa
jp
adc
sub
cmpsb
jb
jmp
aas
call
jae
push
add
icebp
xchg
call
arpl
js
jmp
cld
clc
jo
xorb
add
add
pop
jmp
push
pop
xchg
ret
call
jne
mov
mov
lock
ds
jb
nop
repnz
push
sbb
es
xor
jecxz
iret
jnp
sti
or
push
mov
scas
andl
mov
shll
jl
cmpsl
cmpsl
lcall
pushf
ljmp
mov
push
xchg
rorb
aam
scas
or
jle
xchg
inc
mov
cmp
das
jle
jl
inc
mov
and
fs
stos
fidivrs
lahf
or
inc
or
adc
cs
test
jle
mov
std
js
or
sbb
dec
mov
push
shrb
lods
push
out
mov
hlt
movl
push
shlb
add
or
xchg
insb
js
lock
clc
sbbl
es
xchg
push
ss
scas
mov
cwtl
movsb
push
pop
push
aam
jnp
mov
imul
sahf
push
push
js
cmp
mov
sub
clc
mov
ret
inc
push
repnz
push
jbe
cmp
repz
pop
int3
mov
mov
xchg
scas
xor
xchg
cs
cli
push
mov
decb
xor
clc
pop
add
js
hlt
sbb
loopne
in
mov
inc
sub
add
mov
jb,pn
ret
sahf
cmpsb
dec
sahf
mov
ljmp
sbb
dec
pop
jl
stos
xorl
cmp
mov
jnp
pop
mov
add
shlb
fisubrl
adc
sbb
pop
sub
or
pop
pop
rcrl
xor
loopne
mov
sahf
pusha
clc
push
cld
and
push
jbe
xchg
inc
mov
mov
into
repz
adcb
xor
sub
shlb
outsl
push
aam
out
sbb
sbb
mov
cmpsb
repz
or
mov
or
add
lods
pop
test
add
sarl
mov
cwtl
jbe
cwtl
push
idivl
jl
push
sbb
cmp
ss
ficoms
decb
test
clc
loope
call
popf
fcmovnu
and
sbb
dec
inc
mov
std
hlt
cli
subb
xchg
sbb
fdivl
dec
xor
jns
hlt
insl
js
leave
ret
add
add
push
adc
sub
pop
pop
sub
pop
jge
sahf
mov
subl
sbb
mov
mov
mov
imul
aad
sbbb
mov
pop
lods
xchg
inc
sub
xchg
repz
xchg
sbb
cmp
lock
jmp
ret
es
and
aas
push
bound
andb
push
ds
sub
out
rorl
fidivs
fimull
ficomps
subb
jmp
in
pusha
mov
loope
add
cltd
inc
ja
mov
add
inc
enter
out
arpl
loope
jb
ljmp
test
and
adc
cmp
stos
adc
in
aam
filds
push
and
pop
enter
daa
sahf
test
scas
mov
inc
cmc
fdiv
xor
sbb
orl
add
add
cli
jge,pt
cltd
adc
data16
jge
sbb
maxps
jo
fisubl
push
popf
dec
insb
mov
or
push
xchg
xchg
es
sbb
mov
call
pop
jbe
dec
mov
push
rcl
lods
cld
lret
xor
push
push
cld
aas
call
pusha
adc
loopne
jg
sbb
adc
out
sti
xor
pop
outsb
repnz
loopne
mov
cmp
pop
mov
ds
rorl
jecxz
mov
and
sti
call
gs
lock
xchg
mov
aam
sub
negb
mov
cli
inc
sub
setl
dec
out
or
xchg
jle,pn
ljmp
inc
std
hlt
add
pop
jg
pushf
push
pop
sbb
push
jmp
dec
adc
jns
add
add
out
movb
xlat
and
xor
insl
imul
cli
lock
test
inc
scas
repnz
mov
dec
jl
ds
fstpt
movsb
pop
pop
ret
adc
pop
cmp
pop
popf
inc
test
cmp
xchg
sbb
aas
pop
sbb
daa
outsb
bound
add
cmp
or
mov
filds
adc
or
add
cmp
fmuls
sub
stos
es
rol
mov
mov
xchg
sti
sbb
add
test
aas
mov
inc
enter
pop
mov
data16
mov
cld
and
adc
mov
adc
and
xchg
mov
outsb
sub
andl
bound
cmc
jle
push
fistps
loopne
push
mov
ljmp
scas
lret
xchg
ds
ja
lss
and
cmp
les
mov
mov
cld
xor
imul
fsubs
fdivs
mov
mov
xchg
sub
daa
mov
rcr
adcb
sbb
adc
push
cld
mov
in
jbe
shll
dec
mov
push
push
add
mov
fcomps
das
fs
adc
and
pop
pop
adc
inc
jge
pusha
movsl
mov
fsubrp
mov
jge
mov
mov
iret
lock
mov
cmp
jnp
push
dec
cli
mov
pop
jge
loopne
movsb
lcall
push
xchg
stos
fcomps
repnz
loop
shr
mov
aad
mov
sub
lea
mov
inc
or
outsb
sub
addr16
dec
push
std
sub
aad
aad
test
pop
scas
mov
ret
popf
cmc
add
cmp
je
fucomip
ret
dec
jne
stos
jno
leave
push
test
push
add
cmp
xlat
lret
jle
inc
mov
pop
push
adc
hlt
ljmp
add
mov
je
inc
rol
inc
into
inc
sbb
sub
hlt
loopne
mov
and
push
das
ss
fwait
cmp
stos
call
lds
add
xchg
adc
andl
aas
sub
pop
cmpsl
push
pop
scas
mov
jge
push
stos
jle
push
fwait
or
xor
hlt
jl
push
hlt
fcomp
repnz
fwait
lock
je
push
mov
data16
cld
mov
test
andl
sbb
int
add
mov
jle
adc
aas
cmp
hlt
sbb
xchg
lahf
mov
pop
fdivrl
sbb
push
arpl
jo
fs
jle
jecxz
das
jne
ljmp
fisubrs
xchg
into
jle
jo
dec
sub
fimuls
cmp
subl
adc
add
dec
ja
stos
adc
loop
xor
cmc
stos
push
xor
hlt
jecxz
pusha
cmp
nop
push
cmp
pop
rorb
sbb
mov
lock
shl
in
rorb
sbb
scas
pop
xchg
cmc
and
lods
push
movsb
iret
rolb
je
mov
adc
mov
hlt
mov
cmpsb
addr16
arpl
icebp
loope
adc
or
inc
out
and
std
jge,pt
push
push
ficoms
jmp
inc
and
mov
jmp
add
aaa
jbe
dec
fbstp
sbb
inc
js
cmp
cli
arpl
mov
negb
mov
or
cmp
test
pop
jg
adc
inc
push
mov
fcomps
mov
adc
not
xchg
ljmp
jg
sarb
rorb
in
push
sti
inc
sub
mov
shlb
outsl
sahf
clc
add
jl
jnp
icebp
scas
jl
pusha
pop
out
shrl
fiaddl
enter
js
dec
inc
ljmp
mov
xor
test
or
adc
jle
insb
shrl
dec
mov
es
pushf
ds
in
push
push
loop
push
or
pop
jl
push
mov
sub
adc
imul
dec
xchg
enter
jno
int3
cmp
lret
std
jbe
push
ret
das
sbb
sti
js
sbb
movsb
sub
or
mov
sbb
pushf
cmp
cmp
mov
movsb
jb
lock
dec
lcall
hlt
rorl
cmp
cmp
mov
add
adc
or
shlb
jbe
mov
mov
mov
loopne
mov
stc
int3
mov
into
shlb
pusha
sbb
lret
cld
mov
adc
shrb
ds
push
inc
sti
add
inc
js
cmp
cmp
dec
push
jl
push
mov
jl
adc
xor
push
jle
fidivl
insl
pop
out
dec
icebp
pop
pop
jp
xchg
jle
inc
lock
pop
fdivs
push
jnp
push
sbb
shlb
in
xor
sahf
test
inc
mov
cwtl
scas
and
xor
pop
sub
inc
xchg
clc
or
test
out
cs
adc
and
push
aam
adc
mov
mov
sub
xlat
les
dec
inc
fadds
lods
icebp
dec
js
or
stos
dec
sti
sbb
imull
mov
sar
push
cld
jp
les
mov
mov
xchg
jno
jl
ds
mov
rclb
rclb
mov
mov
xor
test
xchg
sar
pop
xchg
int3
fstl
and
pushf
jbe
in
test
clc
xchg
inc
clc
cli
jo
jecxz
jns
or
cmpl
jne
sub
ret
adcb
pop
or
aad
sub
cmp
jle
and
repnz
inc
adc
xor
pop
sahf
sub
xchg
imull
adc
ret
push
pop
mov
in
inc
je
cli
cmc
call
xchg
add
aam
inc
lock
enter
aaa
sahf
popa
addb
mov
enter
jle
xchg
ficomps
push
mov
jo
jnp
adc
dec
xchg
out
sarb
ss
ret
pop
xchg
jnp
push
into
mov
inc
call
sbb
lock
pop
test
jecxz
ds
je
jbe
or
xchg
movsl
aas
jle
insb
push
lcall
hlt
push
add
push
jne
shl
loopne
loop
lahf
add
xchg
cmpsl
ja
push
jp
push
xchg
jge
aam
ds
cs
punpckhdq
lods
adc
jnp
scas
jle
and
loop
fildl
pop
lcall
scas
dec
sahf
sahf
daa
xchg
lahf
insb
not
cmpsl
add
dec
mov
lock
shrb
popf
aas
push
push
sahf
out
push
or
lcall
pop
mov
push
sti
jns
ss
aaa
aaa
xchg
xchg
jmp
xchg
mull
ds
pop
mov
adc
dec
or
movl
push
and
cli
loope
repz
xlat
mov
lret
xlat
sahf
rorl
scas
jl
inc
ret
push
fisttpl
push
test
xorb
sbb
jge
dec
pop
cwtl
jae
xchg
sbb
rcrb
clc
cmc
call
cmp
test
into
cli
push
pop
pop
adc
sbb
rcl
sahf
jne
fdivs
cltd
jp
inc
clc
jecxz
icebp
subb
add
jg
scas
xchg
jns
pop
mov
imul
ljmp
cltd
mov
sbbb
rolb
push
push
insl
mov
push
aaa
insb
jnp
and
pop
fisttpl
or
fistl
mov
mov
jmp
pop
and
adc
mov
int3
jae
adc
pushf
testl
arpl
lods
inc
mov
lock
mov
jno
dec
lods
outsb
cwtl
sti
daa
add
pusha
daa
std
xchg
rcrb
adc
clc
js,pt
or
fisubl
add
hlt
jmp
or
mov
cld
inc
aam
negb
repnz
js
push
inc
loop
mov
xchg
push
enter
adc
out
in
aas
pop
lock
sbb
push
fidivs
mov
pop
sub
pop
loopne
insl
int3
xlat
and
inc
int3
jp
std
stc
xor
jecxz
lahf
rclb
push
int3
mov
pop
pop
scas
gs
das
lea
pop
adc
xchg
or
sbb
stos
popf
js
lods
dec
jbe
hlt
sbb
cmpsb
xorl
inc
jle,pt
lcall
add
scas
push
mov
mov
imul
push
bound
fisubrs
movsb
cmpsl
das
pop
aas
push
fimull
adcb
mov
icebp
jbe
orl
in
cmp
pop
mov
mov
test
pop
jl
scas
jle
sbb
xchg
jge
cmp
mov
pop
mov
cli
hlt
divl
add
sbb
in
jg
jae
sarb
or
cld
or
xchg
jb
stc
jae
jl
pop
xorb
sub
clc
cli
mov
bound
or
lods
or
rcl
inc
scas
xchg
adc
rcr
mov
repz
lahf
ja
mov
mov
mov
test
add
push
lods
add
das
jge
cmp
ja
fs
aas
jp
mov
push
mov
lahf
cmp
mov
fistps
rclb
sbb
jne
mov
jp
push
enter
sbb
mov
out
cmp
adc
jp
xchg
lods
clc
loopne
ret
cwtl
addr16
sahf
je
push
pop
cmp
mov
adc
cmpsb
inc
add
pop
fidivrl
icebp
loopne
xchg
mov
call
cmp
push
fisubrs
jnp
cld
cmp
rorb
sub
in
enter
jo
mov
jmp
xchg
pop
je
sbb
out
dec
fistpl
fsubp
mov
gs
mov
cmp
sahf
ret
ss
sub
shr
ret
pop
scas
cmp
gs
and
push
jns
fiaddl
fs
pop
mov
test
mov
and
cmp
pop
mov
daa
or
cmp
jp
popa
cli
clc
je
loop
mov
add
cmp
cwtl
sub
or
push
xchg
add
inc
js
cmp
mov
or
dec
sbb
push
adc
jp
mov
push
rcrb
push
jle
and
jp
sub
clc
call
mov
xchg
shll
cmp
jle
shlb
scas
or
loopne
jb
inc
stos
test
ljmp
mov
cli
mov
leave
mov
sti
test
sbb
nop
in
ficoms
jns
mov
xchg
insb
or
mov
repnz
in
mov
xor
jnp
daa
hlt
push
and
data16
cmp
jno
addr16
pop
jbe
ret
pop
clc
adc
add
dec
pop
push
add
mov
pop
pop
push
pop
orps
lahf
xor
push
mov
dec
or
fildll
sahf
sub
push
in
testl
sub
jle
iret
or
add
jb
rclb
jp
aas
jl
jp
jle
sahf
jno
jmp
sbb
cwtl
cmp
cli
clc
loope
sbb
xor
notl
and
push
sbb
test
jb
lahf
out
sbb
out
jl
and
cs
ret
insb
repnz
jae
ret
adc
mov
aad
cmp
pusha
out
dec
xor
lods
inc
inc
js
fisubrs
es
inc
adc
inc
jge
or
sbb
sub
mov
rclb
ficoml
scas
pop
repnz
mov
mov
test
jg
push
pop
mov
int
mov
inc
fnstcw
mov
sbb
lahf
pop
adc
in
cld
test
ret
cli
jge
mov
fistps
pop
pop
loop
in
xor
jb
cmp
mov
dec
ja
pop
das
pop
cmp
movsb
cs
inc
mov
movl
ss
pop
mov
cmc
push
cmpsb
sub
rorb
pop
mov
fldenv
shll
xor
mov
clc
jp
test
mov
add
or
cmc
jle
leave
bound
push
decb
jl
push
lds
mov
mov
fisubrl
cwtl
push
aad
cmp
js
es
inc
inc
loop
dec
pusha
loopne
push
or
fldz
orb
cmp
rorb
fisubrl
cld
add
mov
and
stos
lret
xchg
test
inc
mov
dec
clc
sti
adc
jnp
stos
adc
call
ret
into
jne
lods
and
xor
mov
movl
scas
loopne
pop
icebp
ret
xor
mov
xor
push
sbb
pop
push
mov
or
sub
or
sbb
loop
insb
mov
mov
add
xchg
jle
pop
jnp,pn
call
jmp
mov
in
and
loop
gs
inc
rep
push
dec
push
cmpsl
sbb
cld
lock
outsl
dec
and
bound
iret
sbb
adc
adc
push
movsb
jmp
adc
and
and
lods
mov
add
pop
mov
jb
mov
cwtl
push
push
popa
and
jae
inc
inc
cmpsb
dec
repz
sub
push
or
int3
pop
mov
push
sbbl
arpl
rorb
lcall
adc
daa
lahf
cs
test
mov
pop
fists
pop
sbb
cli
or
jo
jno
push
pop
push
repnz
in
dec
imul
daa
xchg
mov
lock
les
cmc
fisubrs
mov
pop
mov
insb
dec
pop
dec
lret
leave
pop
dec
loope
loope
push
cmp
jl
jo
push
push
xor
push
stc
push
movsl
mov
jp
lock
shrl
cmovnp
scas
inc
scas
push
std
js
dec
push
movsb
dec
xchg
xor
pop
jg
mov
enter
inc
lret
je
mov
clc
add
mov
jp
lods
pop
pop
aas
ficomps
test
jl
pop
cmpsb
bound
repnz
fadds
daa
jmp
sub
mov
clc
ljmp
mov
inc
movsb
hlt
lock
mov
pop
adc
mov
cmp
das
add
mov
xchg
je,pt
fs
lahf
into
je
sub
dec
push
xchg
loop
hlt
sahf
jne
rorl
add
cmp
ss
icebp
jnp
loopne
xchg
leave
js
sahf
or
jp
ret
addb
add
popa
sub
cmpsl
rcrb
out
push
enter
xchg
roll
xchg
fs
shlb
sbb
mov
fiaddl
fistps
mov
mov
and
push
testb
int
pop
jl,pt
push
stos
xlat
ljmp
lods
mov
test
mov
ficompl
or
jge
shrb
mov
dec
mov
imul
mov
and
mov
xor
roll
inc
pushf
loop
loopne
mov
and
stos
sbb
pop
dec
stos
push
xchg
aam
cmpsb
gs
rcl
ja
push
jecxz
jae
push
cmp
fs
clc
lahf
mov
std
push
inc
jo
sbb
jl
xchg
add
pop
cld
mov
and
cmp
out
andl
lds
adc
and
fistpl
mov
jmp
add
jb
out
xchg
mov
sti
mov
ret
loop
stos
lods
dec
jmp
out
inc
adc
pop
fdivl
inc
inc
sahf
int
iret
pop
test
hlt
cmp
stos
imul
rcll
cs
jae
jge
loop
test
loop
mov
test
jl
rorb
cmc
pop
adc
pop
xchg
pusha
push
cmp
sti
icebp
push
add
jns
shlb
sti
inc
add
fsubs
loope
clc
je
push
es
dec
les
pop
outsb
data16
cmp
nop
enter
mov
xor
stos
mov
ds
comiss
addr16
fcom
call
dec
and
jl
jle
hlt
dec
and
pop
mov
mov
dec
fldenv
or
adc
call
lods
adc
out
xlat
test
pop
mov
bound
xchg
cli
cmp
add
loope
jmp
clc
cmc
in
inc
push
cmpsb
out
aam
icebp
jecxz
ds
mov
xchg
mov
sub
jnp
jl
mov
stos
dec
rcrb
xchg
sbb
xchg
adc
imul
jecxz
repnz
sub
jb
sub
adc
adc
xchg
cwtl
orl
push
cmp
shl
jle
jp
loop
and
and
ljmp
xlat
mov
les
adc
jle
ret
or
jmp
mov
dec
subl
xor
cwtl
and
call
mov
mov
sbb
aam
ljmp
lds
xor
test
sbb
fsubrs
xor
out
repnz
sahf
ja
cld
pop
imull
sub
cmpsb
mov
lea
mov
cmpsb
xor
ja
inc
or
movb
out
mov
or
mov
addb
adc
push
loopne
mov
loopne
rcl
push
lods
cmp
lret
sbb
sub
nop
sbb
push
pop
inc
in
idivl
dec
xchg
out
pop
pusha
adc
sbb
iret
int
push
inc
sti
add
sbb
xor
fisubs
clc
test
sub
data16
rorl
cmp
out
mov
cs
clc
cmp
int3
sub
lret
add
xchg
cmp
ja
pushf
or
mov
das
sub
inc
pushf
adc
mov
cmp
pop
out
xlat
out
mov
xor
mov
and
mov
jmp
sbb
dec
fimull
and
and
push
dec
loop
xlat
mov
inc
pushf
push
add
cli
cs
jge
hlt
js
xor
dec
adc
mov
add
mov
frstor
bound
add
mov
les
mov
push
in
inc
fcomps
inc
pusha
ficomps
outsb
cwtl
cmpsb
mov
hlt
rorl
sub
outsb
pop
mov
aad
inc
adc
loope
cli
pusha
mov
jge
and
insb
jg
push
xchg
aad
xor
mov
jge
sub
fs
mov
outsb
ss
pop
jl
js
movsb
es
aaa
push
loope
xor
and
push
insb
ljmp
push
sahf
jno,pt
dec
xor
jo
jecxz
scas
je
adc
sbb
inc
jmp
clc
test
es
imul
cld
movsb
test
shll
adc
les
adc
adc
adc
test
orl
jle
movsl
cs
cmp
roll
adc
popa
sbb
js
xchg
les
ror
int3
inc
or
jl
mov
cld
sub
or
scas
lahf
jle
sbb
je
mov
fists
fs
in
cmp
test
mov
adc
sub
nop
ds
sar
jge
loope
mov
mov
xlat
push
mov
mov
scas
ret
adc
cmp
rolb
xchg
xchg
cwtl
jle
pop
aam
std
test
sbb
scas
ss
icebp
or
lods
lds
movsb
push
and
hlt
in
pusha
inc
push
mov
xchg
mov
push
insb
clc
mov
add
loopne
pop
cmp
sbb
or
inc
inc
es
push
jge
dec
sbb
cli
xacquire
cmp
jno
lds
in
idivb
out
cmpsl
iret
inc
rorb
mov
dec
add
jle
xor
loope
rclb
xchg
add
loop
sar
stos
in
and
orl
test
in
xor
pop
jecxz
pushf
jge
mov
pop
in
dec
lcall
sarb
mov
lcall
cmp
test
xor
dec
cltd
inc
mov
xor
cmc
xlat
mull
mov
xor
mov
inc
das
push
mov
inc
outsl
jno
and
add
jp
xchg
jle
pop
pop
add
rcll
mov
mov
lods
adcl
dec
jl
mov
cmp
or
push
and
mov
aad
ret
or
jo
loopne
insl
pop
pop
sbb
xlat
push
pop
mov
push
aad
cmpsl
inc
lods
ss
inc
outsb
fidivrs
clc
pop
pop
mov
rorl
test
mov
es
mov
mov
and
mov
les
jl
lods
push
mov
or
jle
aas
push
push
push
enter
mov
push
cmp
adc
cs
clc
loopne
test
adc
push
cmp
ficomps
xor
sub
js
add
or
xor
into
dec
mov
cmpsb
mov
das
ficomps
sahf
sbbb
repz
mov
lock
fimuls
scas
xchg
pop
inc
jg
out
movsbl
mov
sbb
adc
icebp
out
inc
jp
add
inc
clc
mov
sbb
jle
lock
adcl
add
cli
dec
cs
enter
push
popa
movsl
aad
pop
dec
or
cmpl
aam
inc
mov
fbstp
dec
popl
mov
jp
push
imul
cmpsl
xchg
sahf
xor
push
sub
test
inc
jl
adc
jle
aas
rcrb
sub
mov
das
ds
jl
mov
xor
cwtl
in
cli
fdivrs
js
dec
cmpsl
pushf
ds
sbb
or
js
cmp
cs
xor
sahf
adc
push
adc
jge
lock
jp
daa
cmp
in
mov
incb
jge
popa
hlt
mov
dec
mov
fs
inc
imull
sbb
dec
scas
scas
pop
add
pusha
cmpsb
out
sbb
dec
fs
scas
daa
stos
lock
std
rolb
push
dec
add
xor
adc
aam
punpckhdq
xchg
inc
stos
ds
mov
or
xchg
xor
xchg
cmp
setbe
ljmp
mov
push
cs
adcl
pop
call
sbb
jbe
xchg
movl
jle
pop
movsb
xchg
das
sbb
mov
add
push
pusha
cmpsl
mov
scas
in
mov
fdivl
sbb
inc
inc
mov
pop
loop
out
outsb
ret
push
negl
or
in
mov
cmp
roll
pop
xchg
in
lods
add
clts
mov
cmpsl
arpl
divb
sub
stos
mull
adc
xor
push
repnz
les
mov
push
xor
jnp
aas
mov
dec
in
rcrb
cmc
faddl
les
movsb
mov
inc
adc
loope
lcall
ljmp
das
push
ds
decl
sub
or
mov
ret
cmpsl
pop
scas
push
jle
pop
aam
in
cmp
loop
mov
jbe
lods
daa
push
cwtl
gs
pop
xor
rorl
and
and
dec
mov
loope
mov
jl
adc
loope
cmpsb
clc
jo
push
fs
rol
imul
xlat
mov
lds
inc
pop
push
push
in
into
mov
mov
sbb
js
mov
repnz
pop
jge
xchg
pop
inc
mov
pusha
and
push
dec
sahf
shll
cmp
mov
sbb
loop
cli
loop
in
lcall
lods
cmc
add
push
mov
add
or
adc
mov
and
xchg
xchg
leave
fs
rol
int3
dec
sbb
enter
cmp
jmp
test
xchg
ret
data16
cmc
adc
loope
xlat
je
and
imull
das
fistpll
ss
cmp
insb
xchg
ffreep
pop
and
daa
sub
push
shl
rcll
fidivs
sbb
cmp
push
mov
add
sub
not
lret
icebp
sarb
ret
pop
ficoms
mov
add
inc
lock
xor
out
ficompl
cmp
xchg
repz
xor
pop
inc
cmpsb
push
mov
inc
fnstenv
pop
sahf
scas
jne
sbb
and
sub
std
icebp
add
xchg
sub
fbld
icebp
sub
je
jbe
jb
lret
lea
sbb
mov
outsl
js
cmp
mov
jbe
add
pop
in
icebp
sahf
repz
inc
stos
dec
inc
jnp
push
test
outsb
xchg
sbb
call
jo
jecxz
cwtl
nop
adc
mov
mov
xchg
xor
lret
cmp
lock
andl
xor
out
sub
repnz
nop
hlt
adc
mov
cmp
add
outsl
mov
stc
out
js
jg
push
push
out
out
sub
mov
das
jl,pt
and
or
ja
les
mov
add
fimuls
sub
cmp
adc
loope
fwait
idivb
pushf
push
ljmp
mov
and
adc
mov
or
push
push
cmp
cmc
mov
mov
xor
inc
and
stos
sub
cmp
pushf
and
or
mov
push
stos
sub
into
cmp
xor
adc
cmp
cli
sub
cmp
pusha
je
dec
call
andb
xchg
clc
sbb
pop
lcall
les
cmpsb
dec
loop
inc
jecxz
sbb
loopne
mov
imul
pushf
fcmovnb
pop
or
or
mov
icebp
inc
loopne
mov
rcl
mov
mov
and
jl
fsts
cmp
mov
mov
sbb
pop
aaa
jecxz
sub
adc
insl
xchg
sub
mov
xchg
cwtl
rcrb
dec
cmovno
jle
out
das
arpl
jl
sbb
adcb
mov
insb
sti
adc
in
ss
icebp
and
pop
stos
adc
adc
adc
pop
pushf
pop
sbb
ds
out
insl
pop
scas
shlb
frstor
jl
int3
roll
push
inc
call
mul
or
mov
movsb
xor
xchg
mov
jp
push
lds
je
in
sahf
inc
pop
aas
sbb
ficompl
sub
push
push
loop
pop
or
es
mov
std
push
cmp
ret
push
mov
pusha
cmp
rorb
pop
test
aad
fidivrl
jg
inc
or
add
sbb
and
push
shrb
mov
je
popf
inc
pop
arpl
mov
lahf
pop
cmp
cmp
in
imul
cmp
push
ret
jb
jge
mov
dec
fisubrs
andb
cld
xchg
ds
mov
int3
hlt
icebp
pop
cmp
lret
xchg
mov
jl
in
out
mov
dec
pop
xlat
stc
push
test
call
pop
lods
clc
hlt
mov
sahf
push
data16
aas
testb
adc
lahf
pop
out
xor
call
jp
mov
insb
dec
jmp
cmp
sub
jl
pop
outsb
stos
nop
repz
pop
push
scas
cli
lock
sbb
fcoms
cmp
icebp
std
xor
add
mov
ret
sbb
push
sbb
call
adc
hlt
loop
xchg
into
sahf
adcb
push
js
pop
cld
and
xchg
mov
in
mov
cld
lock
addl
jb
mov
dec
mov
test
add
pop
pop
out
rorb
cwtl
ljmp
test
loope,pt
out
and
incb
add
mov
lock
mov
pop
or
insl
push
mov
push
pop
sbb
lods
outsl
repnz
mov
pop
xchg
add
cld
js
pusha
xor
gs
clc
lock
xor
jl
into
lods
rolb
pop
stos
sbb
fsubl
out
or
ljmp
xor
adc
negl
push
lock
add
std
cmp
cwtl
inc
fisubrl
and
add
sub
jmp
xorl
sarl
sar
imul
pop
xor
movsl
adc
xchg
push
xor
test
test
push
mov
dec
in
sbb
icebp
jmp
fcmovbe
orb
faddl
or
or
icebp
js
dec
je
inc
jb
xor
cmp
inc
mulb
mov
adc
dec
loopne
call
inc
inc
xchg
and
or
les
adc
push
xor
sub
mov
inc
lret
dec
aas
ss
leave
sub
loop
jbe
sahf
cld
cmpsl
xor
inc
lahf
push
jmp
xchg
cmc
cli
rolb
or
mov
insb
andb
fildll
adc
test
orl
jae
mov
and
and
rolb
or
sub
je
mov
std
cli
mov
fdivs
scas
sub
mov
add
mov
adc
pusha
sub
mov
mov
pop
add
add
lcall
cmp
pusha
vphaddubq
aam
sbb
stos
xchg
pop
sbb
adc
mov
aas
push
loopne
popa
xchg
sarb
and
loopne
outsl
or
mov
mull
bound
pop
xor
jecxz
jl
and
ss
pop
xchg
shlb
cs
or
pop
insb
sbb
ret
pop
stos
add
out
lret
jmp
add
add
ret
add
fcomip
shll
es
cli
pushf
popa
xchg
lea
pop
ds
adc
push
jge
xchg
lret
cmp
mov
mov
jno
loope,pt
test
and
fimull
incb
pop
out
pop
and
subl
mov
adc
lahf
cs
sub
xchg
mov
jp
int3
movsl
inc
clc
push
cmova
sahf
push
out
jp
xchg
aam
sbb
scas
mov
nop
test
ds
fwait
push
aad
mov
push
mov
lret
pop
jle
icebp
into
and
call
ja
test
pop
das
jle
xor
cwtl
mov
mov
subl
add
jmp
add
pop
xor
cwtl
dec
mov
lahf
arpl
pop
lock
js
jb
je
loope
inc
jp
or
push
das
push
ds
mov
cmpsl
adc
mov
fisubl
dec
xchg
fstpl
push
ret
push
lret
cmp
lock
fwait
mull
jb
test
inc
pop
inc
cli
mov
cs
fs
pop
fistpll
ljmp
jle
aad
daa
mov
or
xchg
jp
push
lret
loopne
sti
loopne
ret
mov
xchg
mov
sbb
shrl
xchg
not
dec
pop
aas
ss
icebp
mov
imul
pop
mov
outsl
add
sub
dec
popa
test
bound
mov
adc
push
cmc
popa
add
sbb
mov
loopne
loope
subl
jp
test
js
in
mov
inc
add
mov
in
loope
js
sbb
pop
shrl
clc
jg
js
mov
inc
ss
pop
pusha
rcrb
pop
js
scas
jp
nop
mov
cmp
dec
shlb
popf
jbe
add
pop
aas
jl
push
add
sarb
leave
mov
das
add
or
fldt
push
and
outsb
jnp
ret
stos
fwait
jno
cmc
cmp
loopw
mov
out
call
rcrb
lret
ds
jo
xchg
cmpsb
das
pushf
jbe
jge
add
pop
popf
and
mov
outsl
loope
and
mov
sub
push
jl
or
fmuls
push
mov
in
add
aam
aaa
add
mov
adc
mov
mov
loopne
inc
adc
hlt
xchg
jle
xor
test
loopne
lock
cmp
fs
jmp
push
cmp
rcr
cs
hlt
pusha
inc
js
add
push
ss
bound
and
movsb
pop
mov
jmp
sbb
push
mov
or
xchg
pop
data16
ficompl
icebp
inc
cmp
pop
jl
cmp
cs
lret
faddl
dec
push
mov
inc
mov
pop
xor
imul
clc
cmc
call
dec
stos
mov
push
inc
pop
repnz
mov
pop
pop
pop
and
and
pop
push
xor
mov
int
adc
jge
test
mov
xor
jl
add
fs
nop
push
pop
sbb
arpl
pop
lahf
cltd
jecxz
lahf
ds
insl
ss
hlt
mov
dec
inc
mov
rcrb
cmpsb
jl
loope
xor
out
loopne
and
mov
pop
das
jo
ds
pop
mov
mov
pop
out
ret
cli
push
pop
cmpsl
mov
cld
sbb
mov
push
add
sub
mov
mov
lret
sahf
lock
iret
ds
div
and
ja
push
mov
jbe
fcoms
fcmovb
and
push
out
pop
das
ds
mov
movb
scas
add
scas
mov
jmp
bound
add
pop
sub
pop
or
dec
stc
ljmp
loope
repnz
fiadds
jo
mov
cmp
jmp
xor
adc
fwait
pop
rcr
dec
push
jl
fcompl
push
adc
sub
dec
xor
outsl
loope
jp
enter
and
das
test
loop
sbb
push
pop
jp
adc
xor
stos
pop
jecxz
jne
test
push
rolb
and
adc
into
mov
and
cmc
sahf
ret
cmp
mov
out
out
mov
fsubrs
sbb
push
sahf
jp
and
xlat
lea
cmp
jb
adc
sbb
das
movsb
xchg
scas
dec
scas
add
out
loopne
mov
js
negl
adc
insl
mov
cmp
dec
les
mov
repnz
mov
stc
enter
scas
repz
xlat
xlat
dec
push
mov
mov
outsl
es
lods
inc
and
cmpsl
mov
mov
call
cmp
or
bound
test
and
jmp
hlt
jmp
jno
xchg
and
sahf
inc
negl
sbb
pop
add
xchg
rcll
xchg
mov
icebp
loop
pop
lahf
test
out
jbe
push
icebp
lret
pop
out
hlt
cld
std
clc
mov
and
mov
push
dec
int3
add
xor
adc
int3
sarb
ss
loopne
les
imull
mov
dec
jmp
cmpsb
ss
xchg
mov
xor
popl
pop
pop
pop
inc
sbb
outsb
mov
add
sahf
cld
nop
sub
jne
cmp
xor
mov
sbb
mov
inc
repz
mov
or
mov
cmp
std
hlt
loope
cmp
fstl
add
xlat
jecxz
lods
xchg
lret
rol
imulb
scas
lret
pusha
psrlq
cmp
bnd
jge
ret
mov
mov
jo
jl
ret
mov
das
or
mov
test
cmpsb
hlt
loop
mov
pop
xorb
jmp
jo
mov
push
pop
fisttps
ret
mov
hlt
rcr
clc
jb
mov
xchg
mov
push
jl
cmpsl
repnz
xchg
clc
xchg
xor
lods
rcr
pusha
or
aad
inc
dec
and
in
pop
ds
add
cli
imul
je
dec
mov
mov
dec
mov
jle
je
push
ljmpw
jl
repz
lock
sub
pop
cmp
ljmp
cmc
add
xor
mov
jo
ficompl
out
xor
dec
ds
rclb
test
stos
jle
shrb
aam
call
test
pop
pushf
inc
neg
add
dec
bound
mov
outsb
pop
jb
or
pop
cmp
popa
insb
cmp
ljmp
cwtd
repnz
imul
adc
jo
divb
stos
enter
aas
mov
push
mov
sbb
arpl
mov
mov
pop
mov
js
pop
mov
lock
cli
je
out
push
and
je
cs
out
aad
mov
cmp
loopne
or
xchg
mov
mov
fwait
jp
push
xchg
and
adc
xor
ss
cwtl
fimull
fsubrl
cmp
bound
pop
and
xorl
nop
inc
out
mov
lods
add
sub
clc
sbb
ljmp
jp
push
sub
jo
jns
and
add
xchg
lret
jbe
fcmovb
arpl
xor
or
pop
pop
push
movsb
pop
outsb
out
push
xor
loopne
stos
sbbb
cmp
rolb
mov
add
push
mov
clc
add
jge
pusha
hlt
jecxz
dec
decb
pop
jbe
sti
sbb
and
and
sub
cmp
pop
mov
dec
or
pop
popaw
lea
pop
add
mov
hlt
in
sahf
sub
mov
mov
sti
mov
rorb
sbb
pop
mov
jne
push
push
mov
sbb
popa
inc
xchg
cs
pop
pop
push
cmpsb
cmpsb
call
sti
test
and
add
popf
inc
mov
add
inc
push
sarb
das
mov
jnp
lcall
pushf
sbb
sbb
and
ror
fsubrs
notb
sti
lcall
aaa
in
lock
rcll
xchg
xchg
pop
std
icebp
jecxz
repnz
fldz
scas
fists
push
in
cmp
cmc
dec
into
jecxz
jp
mov
addr16
mov
pop
jl
aad
jmp
test
lds
fiadds
clc
inc
lds
lea
or
cmp
cmpb
adcb
push
pop
push
lret
push
loopne
test
and
sbb
lods
and
out
fdivp
dec
int3
in
mov
scas
into
fisubl
xchg
or
inc
add
pop
sar
bound
pop
shl
lods
fnstsw
jp
rcrl
inc
test
jle
pop
hlt
sahf
xor
mov
xor
jo
xchg
call
adc
pop
jge
je
lea
lcall
jmp
xchg
mov
cmp
xor
cmp
in
inc
icebp
lock
ret
mov
or
jge,pt
mov
xor
cwtl
outsl
push
loop
dec
xor
jg
cmp
xor
cmp
mov
stos
out
pushf
jp
ss
adc
aad
sbb
leave
mov
mov
inc
sub
stos
lret
xor
xchg
sub
ss
mov
mov
adc
jl
fstpt
xor
out
mov
ds
dec
mov
mov
test
mov
shr
icebp
mov
mov
orb
xor
icebp
lds
and
push
jg
cmc
inc
aam
add
test
push
lea
loop
ljmp
jmp
sub
clc
or
addb
inc
sahf
xchg
lret
fbld
jle
aam
jno
add
test
pop
arpl
sub
add
mov
imul
sub
pushf
mov
icebp
add
popa
push
mov
adc
sub
or
xchg
cld
lret
push
cwtl
add
je
adc
stos
push
cs
jp
xchg
inc
and
cmp
pop
push
lcall
mov
cld
adc
ret
xchg
daa
clc
pop
inc
sbb
mov
mov
lock
pusha
mov
add
push
cwtl
mov
mov
dec
add
pop
and
mov
lret
dec
jl
icebp
loope
inc
and
xchg
lock
cmpsb
mov
mov
aad
push
cmp
data16
rclb
mov
rcrb
insb
adc
add
xor
clc
cmc
and
outsb
out
sub
das
push
jo,pt
cmp
inc
mov
jmp
bound
add
pop
loop
faddl
mov
mov
shl
cmc
fs
xchg
lahf
repnz
cmpsl
inc
pusha
lock
and
xor
aas
jl
inc
or
adc
sti
les
mov
inc
jne
adc
or
adc
jb
mov
clc
cmc
push
fdivs
shll
in
icebp
insb
shll
ds
adc
fmul
movsb
jl
push
push
loopne
lods
dec
jle,pt
and
pop
aas
jle
push
dec
jae
mov
fcmovb
dec
aaa
loopne
je
cmp
scas
cmp
ficoms
mov
cmp
xchg
dec
mov
aam
or
lods
je
jbe
ret
jne
enter
push
push
cmpb
jp
fsts
and
push
pop
test
pop
cmp
adc
xorl
mov
out
aas
inc
inc
cmp
popa
pop
mov
push
mov
mov
or
scas
xchg
shl
jge
loope
push
sbb
pusha
dec
mov
int
lock
lock
sub
dec
inc
xchg
jmp
icebp
enter
push
out
int
jge
pop
cld
js
xchg
pop
sbb
pop
and
adc
orl
add
inc
clc
lock
jle
test
ljmp
xor
shlb
xchg
and
js
test
xchg
stos
fisubs
push
js
loope
fists
or
cmp
xchg
cltd
hlt
push
out
scas
ret
rcr
ljmp
rorb
jl
loopne
repnz
das
or
adcl
cli
sub
sahf
xchg
stos
fidivrl
lock
roll
jns
insl
pop
pusha
or
xchg
enter
sbb
push
mov
lahf
inc
adc
mov
adc
adc
in
sti
xchg
mov
in
push
or
or
xor
out
adc
push
ljmp
xor
mov
rcrl
pop
mov
cli
adc
call
and
push
es
adcl
xor
mov
int3
pop
mov
push
arpl
mov
mov
cmp
cli
test
fsubs
rcrb
pushf
sub
sub
mov
xchg
rorl
xchg
ret
test
leave
insb
push
push
cmp
test
push
xlat
jo
push
jno
jecxz
adc
aaa
dec
clc
jne
loope
inc
test
xor
cli
hlt
ds
mov
sbb
aam
in
mov
shl
xchg
and
mov
cmpsb
aam
mov
adc
push
mov
call
insb
fisubl
mov
sub
cli
cs
int
mov
in
dec
pop
sahf
imulb
ret
je
jb
addr16
jnp
inc
notl
adc
test
inc
sbb
and
sbb
js
loop
xchg
stos
and
xor
or
mov
sahf
mov
pop
adc
or
adcb
das
push
fnstsw
dec
pop
in
test
mov
pusha
lock
cld
es
mov
sbb
bound
xor
out
xchg
inc
js
ret
out
and
sub
in
lcall
hlt
fisubrl
lods
jbe
mov
ds
pop
cmp
enter
lock
inc
xor
jle
jp
cmp
pop
push
xor
es
shlb
stc
lret
daa
cmc
mov
push
shrl
mov
cli
sub
andb
ret
orb
je
iret
and
loope
dec
push
add
mov
adc
push
sti
push
mov
adc
and
cmp
hlt
xor
scas
out
and
dec
filds
mov
push
int3
cmpsb
push
adc
test
je
sbb
lods
mov
adc
aas
mov
dec
dec
xchg
ljmp
xchg
sbbb
call
pop
push
pop
pop
adc
sahf
sti
sub
stos
pop
repnz
inc
xor
xchg
cmpsb
or
lock
mov
pop
mov
decl
js
mov
clc
push
dec
xchg
negb
pop
js,pt
std
push
push
pushf
xchg
sub
jp
xor
adc
test
dec
jp
bound
push
shlb
cs
mov
sub
pop
jae
pop
jl
icebp
fcoml
loop
mov
pop
das
adc
push
les
mov
loop,pt
mov
inc
pop
icebp
cmc
xorl
call
dec
outsb
fwait
sbb
mov
dec
js
add
lcall
mov
pop
loopne
std
or
shlb
cmp
jge
adc
sub
cwtl
or
xchg
fsubl
shlb
je
dec
lahf
js
cmp
fcoms
and
das
cmp
inc
sub
jnp
cmp
mov
cs
or
add
repnz
sti
call
in
sub
jnp
loop
in
add
shr
lods
jo
icebp
testb
movsl
jge
fsubr
sahf
push
mov
outsb
jo
into
mov
mul
sar
stos
dec
dec
mov
mov
inc
cmp
inc
xchg
push
repnz
adc
ds
dec
jecxz
push
xor
mov
xchg
pop
or
psrld
in
inc
push
es
pop
mov
les
data16
push
jle
ss
inc
clc
loopne
add
xor
pop
sbbl
sub
out
dec
jbe
inc
imul
imul
xchg
stos
xchg
mov
out
mov
rcl
cwtl
out
xchg
pop
cmpsl
xor
or
mov
fists
sub
lret
or
add
ljmp
scas
js
jecxz
mov
push
or
mov
mov
rcrb
mov
or
lock
jmp
andb
add
pop
pop
jl
xlat
add
loopne
sbb
ljmp
xchg
sahf
push
lock
cmp
movb
cmp
movsb
dec
sbb
bound
sbb
mov
sub
lods
je
mov
addl
push
adc
fmul
bnd
push
loope
ret
rol
pusha
xor
stos
mov
jge
pop
lods
mov
bound
mov
ljmp
and
aam
push
clc
adc
pushf
xor
mov
push
mov
or
aam
les
outsl
loop
in
sbb
mov
xchg
clc
insb
xor
xlat
mov
mov
xor
and
nop
test
mov
test
push
int3
sbb
das
push
aam
aad
les
addb
add
sub
sbb
loope
sbb
adc
ds
jbe
mov
int3
ss
add
lods
or
adc
loop
adc
dec
sbb
fst
inc
ret
cmp
adc
aad
push
lods
ffreep
cli
mov
mov
jle
mov
pop
push
inc
enter
orl
icebp
cmp
leave
scas
inc
mov
outsb
dec
out
mov
inc
adc
aad
jle
lock
stos
cmp
ficompl
and
jnp
cmp
xchg
xchg
in
cmpsb
mov
pop
add
and
sbb
add
xchg
std
mov
loopne
aam
mov
jno
lock
imul
lock
push
call
call
pop
fidivrs
loopne
jno
ds
jmp
xchg
mov
inc
dec
cmp
loope
fsts
sub
insb
in
shlb
clc
sarb
test
inc
cmc
pop
pop
fwait
add
loop
scas
lret
outsb
loope
adc
push
cli
sbb
int
add
aaa
jl
cli
lcall
subb
leave
add
icebp
jecxz
jecxz
dec
pop
lret
insb
outsb
outsb
or
sub
lea
loope
push
mov
lds
pop
mov
cmc
fcomp
imul
std
pinsrw
js
ds
cmpsb
mov
sub
mov
fidivl
push
loopne
sti
jmp
jp
mov
add
lock
xor
cld
out
or
mov
jmp
into
cmp
rcll
mov
jge
jle
mov
fnstcw
dec
push
sahf
mov
lock
xchg
je
xchg
xor
jae
add
and
bound
icebp
rorl
jg
push
push
stos
testb
rcr
lods
mov
loope
fidivl
or
jbe
push
add
mov
fdivr
mov
ds
jae
jl
in
out
mov
jl
loopne
test
add
mov
adc
sub
xchg
test
setg
pop
fs
sbb
movsb
xchg
fadds
hlt
xor
subl
subb
xor
fidivl
xor
xlat
sub
lock
mov
adc
jl
loopne
inc
shlb
mov
cmpb
aas
push
pop
push
mov
std
fdivl
std
mov
ds
sub
mov
cltd
push
sub
jnp
fildll
out
rcl
sahf
add
in
xchg
xchg
mov
add
push
cmp
lahf
and
cli
or
lea
insb
das
ljmp
sahf
aam
jl
or
sbb
xchg
addr16
ja
push
pop
inc
dec
out
inc
adc
mov
nop
adc
adc
sbb
push
lock
clc
lock
cmpsb
rclb
shll
rcrb
xor
xlat
popl
fistps
loop
mov
cli
stos
lock
fildll
sub
jns
clc
xchg
pop
cld
fnstsw
mov
fdivrs
repz
rol
pushf
xor
jnp
sar
cli
jmp
and
outsl
mov
clc
rcr
inc
mov
xor
sub
std
push
out
imul
mov
loop
test
enter
ss
dec
jl
popa
cmp
pop
add
inc
fmuls
mov
sub
loopne
aas
jge
int
jo
mov
xorb
fwait
sub
add
sti
repnz
lock
movsb
push
xchg
fs
cli
push
dec
imul
bound
mov
lock
enter
adc
loope
cli
inc
aad
dec
xchg
push
mov
hlt
test
xor
mov
incb
mov
mov
mov
pop
pop
rcrl
addb
lret
outsl
jmp
adc
loope
shrl
xchg
jne
sbb
jo
mov
or
fisttpl
loopne
aaa
push
mov
mov
test
mov
cmp
adc
xor
ds
movb
cld
push
in
call
scas
jl
sbb
sub
or
cmp
adc
shl
arpl
pop
fs
jle
ds
and
mov
push
cld
stc
movsb
es
call
icebp
xor
xchg
cld
fidivl
ds
stc
mov
mul
shll
outsl
or
lds
push
xor
and
inc
sti
sub
cmp
jmp
add
xor
and
add
fcompl
fadds
cs
lods
scas
iret
bound
push
or
jbe
jbe
jns
mov
inc
mov
mov
into
jp
and
rolb
push
push
fisubs
pop
push
test
inc
ds
add
lods
ret
xchg
sbb
jge
icebp
jo
ficoml
mov
sti
insl
rorb
pop
mov
xchg
int
int
dec
and
nop
dec
adc
outsb
stos
sbb
or
int
int
jge
and
shll
int
dec
xor
add
sub
sbb
int
clc
xchg
jmp
sarb
int
int
gs
jnp
pop
lods
xor
mov
imul
int
and
inc
cmc
sbb
xchg
movsl
xor
adcb
dec
cmp
jno
lods
pop
sbb
icebp
rorl
xchg
enter
popf
pop
cmp
in
les
cmp
push
mov
sub
mov
out
clc
jge
and
in
test
pop
pop
mov
fisubs
dec
orl
hlt
adc
imul
lods
xchg
jl
clc
xor
or
jecxz
ds
sbb
xchg
cmpsb
roll
mov
cmpsl
sahf
std
xchg
lock
cmpsl
into
sahf
adc
xor
add
inc
clc
push
jno
lock
pop
cmp
jl
in
xchg
sub
fcmovnbe
cmp
loop
lock
pop
in
cmpsb
inc
push
out
call
fimuls
sarb
sub
loopne
or
mov
pop
fbld
jbe
fisubrs
jno
das
sarb
xor
sub
ret
incb
mov
nop
loop
lock
and
test
sbb
ja
mov
mov
sub
out
cmc
pop
sahf
add
out
sbb
rolb
pop
jge
mov
mov
dec
jle
dec
sub
aad
jmp
sub
cli
add
scas
mov
loop
icebp
insb
sub
dec
cmpsl
lcall
aas
mov
leave
es
arpl
jmp
shrb
out
decb
pop
dec
cmp
cwtl
rorb
or
dec
rorb
pushf
and
jb
ds
mov
push
clc
cmpsl
push
lret
cli
push
push
xchg
sahf
push
jno
sub
das
es
pop
stos
mov
or
lss
pavgb
scas
push
mov
adc
adc
sub
mov
dec
dec
push
ret
mov
inc
shl
insb
pop
dec
int3
push
dec
clc
dec
loope
enter
pusha
sbb
adc
lcall
sti
adc
js
mov
cmp
jae
mov
push
jo
add
shr
cwtl
aam
clc
mov
bnd
inc
or
or
loope
inc
cmpsl
je
add
js
mov
out
int3
pop
les
add
cwtl
fimuls
mov
push
jle
cwtl
fistl
adc
pop
cltd
sbb
clc
push
inc
xchg
mov
test
pop
mov
je
sub
lahf
adc
push
pop
push
aaa
insl
out
jbe
or
scas
push
je
loope
or
addr16
push
sarl
add
push
lret
push
rcl
ss
inc
in
lret
sbbl
cs
out
scas
rorb
or
mov
push
fidivl
icebp
jecxz
mov
lret
xor
out
test
mov
into
int3
in
xorb
pop
das
cmp
cmp
xchg
fstps
inc
inc
pop
mov
das
pop
sbb
sar
mov
sbb
sti
mov
sarb
test
inc
cmp
xor
sahf
pop
subl
cmc
test
sub
lea
dec
stos
pop
jle
roll
in
inc
or
idivl
sub
gs
cli
and
dec
mov
push
pushf
jmp
mov
aas
lods
sub
xlat
sbb
mov
aaa
loop
fcoml
jl
insb
xorb
xchg
xlat
sbbb
fisubs
jp
gs
inc
std
sub
cld
mov
lock
sbb
mov
movb
sbb
xor
pop
fcompl
adc
mov
ljmp
cmc
xchg
mov
jecxz
es
loopne
mov
dec
xchg
xlat
scas
lsl
push
mov
cmpsb
outsl
je
aas
in
mov
mov
popa
pop
adc
xchg
xchg
leave
jbe
dec
pop
movl
cmp
jecxz
push
jl
cli
cmp
push
nop
testb
push
les
movswl
mov
shlb
push
fmuls
xor
xor
icebp
loop
xchg
ljmp
clc
lahf
adc
xor
daa
mov
fistpl
pmulhuw
daa
jbe
push
mov
mov
lock
insl
mov
sub
push
mov
aad
inc
mov
or
or
fstpl
divps
sub
data16
jb,pt
pop
das
pop
inc
mov
and
cld
mov
enter
lock
add
jbe
loop
test
dec
call
mov
lahf
cmp
out
sub
xchg
adc
loopne
clc
mov
sbb
insl
sbb
xor
pop
pop
aas
inc
outsb
jb
fsubr
insl
iret
or
testl
call
lahf
add
dec
inc
pop
inc
push
jg
inc
inc
pop
inc
shr
push
lret
es
testb
mov
enter
sbbl
ret
test
fs
shrb
test
das
jecxz
xor
push
push
sbb
in
and
aam
mov
xorb
push
sarb
xchg
cli
std
jp
cwtl
mov
cmp
xlat
push
jo
ljmp
and
dec
repz
pop
jg
pop
push
enter
aam
push
xchg
xchg
inc
jp
jl
jp
mov
adc
out
loop
rorb
mov
sbb
imulb
stos
lahf
push
mov
adc
sbb
in
aam
adc
sub
cmpsl
stos
mov
xchg
dec
rclb
jge
push
cld
jbe
pop
push
sbb
push
pushl
psrad
lock
data16
test
bound
inc
out
lcall
cli
gs
pandn
scas
mov
clc
xor
loopne
sub
js
and
jge
aaa
fistps
push
and
jbe
push
clc
inc
mov
cmovns
and
outsl
sub
cmp
mov
jge
icebp
sarl
jp
and
mov
aam
fdivrs
jmp
and
push
or
xchg
lock
imul
in
insb
cmc
addb
js
loop
xchg
test
inc
add
dec
mov
adc
rcll
cli
dec
push
test
int
stc
clc
shrb
mov
mov
push
and
ficoml
test
cmp
dec
mov
int3
ret
cmp
jle
out
divl
std
dec
mov
adc
sahf
adc
adc
loope
mov
mov
sub
jnp
shll
xchg
sub
or
ja
inc
pop
mov
jg
mov
mov
stos
xchg
idivb
add
mov
lret
js
adc
pop
repz
lds
hlt
repz
dec
scas
jle
inc
pop
sbb
mov
int
pop
js
ss
insb
sar
fisubrs
push
adc
xchg
fs
in
pop
jl
popf
cli
orb
loop
jne
adc
mov
pop
fists
lods
movsl
xchg
xchg
movsb
mov
mov
push
loop
mov
push
lea
dec
push
lds
nop
int3
xchg
jp
or
inc
pushf
adc
push
pop
test
cli
adc
mov
xor
push
imul
sub
pop
pop
fsubrl
adc
and
es
mov
rclb
inc
cwtl
dec
je
inc
mov
pop
mov
sti
call
mov
or
or
mov
pop
jl
and
enter
ds
cmp
rolb
fneni(8087
pop
mov
test
xor
push
mov
dec
lock
aaa
push
jp
pushl
xchg
nop
icebp
popa
xchg
cmpb
push
aas
xor
jo
out
jno
sub
pop
add
orl
jle
shlb
loopne
ds
mov
adc
jb
inc
xchg
pop
cmpsb
lock
jb
or
adc
cli
clc
call
or
iretw
rorl
mov
pushf
mov
xchg
fsubrl
into
push
aas
xor
cmpsb
lds
xor
inc
xchg
cli
enter
push
loopne
dec
lods
subb
add
xchg
jnp,pn
pushf
sahf
cmc
cmp
cli
mov
mov
test
jl
sub
and
sbb
fisttps
xchg
xor
lret
jo
ds
xchg
in
cmp
fld1
in
mov
sub
outsb
sbbb
ret
shr
jno,pt
fwait
push
es
inc
push
adc
outsl
or
pop
out
xor
xchg
mov
pop
pop
stos
mov
mov
lods
push
sbb
sub
cld
sub
sahf
jne
mov
jle
xor
mov
mov
idivl
or
jp
loopne
test
shlb
sub
aad
cmpsb
cld
lcall
std
push
and
xchg
pop
shl
xor
cmp
mov
shlb
sub
les
sbb
xchg
or
inc
xchg
pop
call
sub
and
or
fdivrl
pop
push
lock
es
push
and
or
jp
adc
and
lock
cmp
test
ds
sbb
add
enter
pop
mov
and
push
les
push
dec
fisttps
mov
test
into
xchg
adc
cwtl
ljmp
fucomip
sti
pop
ret
into
jp
sar
scas
sbb
cmp
mov
mov
out
test
mov
or
xlat
scas
dec
sbbb
pop
xor
loopne
inc
or
sub
cwtl
pop
mov
and
test
mov
fisubs
sbb
jle
cmp
lret
mov
jl
fmull
mov
or
mov
out
ret
addl
fldcw
and
mov
and
decb
cwtl
out
cmpsl
dec
in
scas
dec
aas
push
movsb
add
pop
lahf
les
jge
hlt
cmc
mov
lods
mov
mov
or
fldl
sahf
add
jp,pt
ja
les
loopne
pop
push
fdivrl
sub
cwtl
pop
jbe
sbb
mov
mov
out
xchg
inc
sbb
ss
push
sbb
dec
mov
xchg
pop
dec
jns
push
jg
out
lret
sub
aad
mov
xor
jb
pop
pop
out
pushf
push
push
ds
sbb
pop
movd
cmp
into
test
xor
ljmp
bound
pushf
adc
push
jge
add
inc
inc
pop
jle
repnz
icebp
inc
loopne
cmovl
movsb
movsb
sbb
mov
sub
mov
mov
mov
push
andb
mov
cld
js
mov
repnz
out
sti
loopne
mov
xor
fwait
shrb
dec
xor
jno
je
pop
subl
cmp
jo
std
test
ljmp
cwtl
jb
hlt
cmp
mov
dec
or
push
lret
inc
dec
out
sub
rclb
icebp
call
mov
hlt
in
bound
dec
in
aas
rcr
je
and
mov
lods
or
add
aas
lea
jp
add
mov
repnz
xor
shll
xchg
rcl
hlt
pop
fmull
cltd
dec
sbb
push
and
push
xor
insb
push
jl
jecxz
xor
jmp
mov
pop
clc
lock
fwait
je
pop
pop
arpl
xor
lods
les
ds
push
into
jb
cmp
daa
or
push
rorb
rcll
loopne
mov
sahf
sahf
cmc
cmp
pushf
push
fsubl
sbbl
adc
adc
test
shl
sti
ljmp
sbb
mov
add
cmpsb
jg
cwtl
push
push
or
rcll
cld
cs
ret
pusha
xor
cmp
roll
pop
cmp
scas
lret
fiadds
out
jnp
jmp
and
je
outsl
mov
jne
xor
stos
pop
inc
subl
mov
les
jb
ret
jns
push
rolb
xchg
sbb
ljmp
or
pushf
dec
out
dec
fcmovbe
mov
lods
out
dec
adc
mov
pop
cmpsb
sbb
cld
push
cmp
mov
mov
cld
and
loop
sbb
int
pop
and
pusha
ja
dec
les
xor
lahf
xchg
xor
mov
call
xlat
repz
xor
lret
loop
adc
sbb
mov
add
sub
mov
mov
jle
inc
mov
loopne
add
cli
arpl
idivl
inc
adc
or
test
loopne
jo
push
xchg
cs
pop
push
movsb
enter
in
cmp
icebp
ljmp
push
sub
pop
push
mov
push
test
jecxz
jge
mov
fcomip
cmp
ret
mov
int3
cmp
repnz
push
jno
xor
std
adc
sbb
sbb
rcrl
loop
in
mov
cli
add
pop
sbb
xor
cmp
pop
push
cs
sub
push
push
test
cli
ds
adc
pop
fiaddl
les
andb
xchg
lahf
test
mov
les
shlb
ljmp
sub
faddp
dec
jl
rorb
pushl
adc
pop
or
loopne
or
je
pop
dec
cmp
fdivl
out
sub
push
sub
pop
mov
and
insb
test
cli
jl
das
sbb
movsl
cmp
sbb
jge
jecxz
cmp
xchg
xchg
fdivl
ficoms
clc
or
out
xor
mov
inc
lea
test
and
inc
ret
call
jge
ljmp
xchg
clc
inc
iret
shl
jmp
xchg
in
test
jo
mov
mov
outsl
add
adc
dec
shr
sti
xchg
das
jne
hlt
std
jl
mov
inc
inc
adc
jne
shr
imul
mov
shll
xchg
mov
fimuls
test
mov
test
add
jmp
je
rep
xor
push
jae
sahf
xchg
mov
jle
icebp
movsb
cld
dec
xchg
std
xchg
pop
clc
sbb
repnz
mov
cli
push
fsubrl
jb
push
js
cmp
pop
xchg
jns
fisubl
test
rol
ret
sub
sub
cmp
rclb
cmpsl
cmp
dec
mov
cld
cmpsb
jp
mov
mov
jmp
sub
into
dec
mov
inc
shrl
shr
push
dec
adc
mov
fadds
mov
sti
push
mov
icebp
shlb
repz
push
and
ljmp
mov
icebp
cmpsl
into
cmpsl
push
pop
mov
mov
movsl
js
jge
sub
xor
jge
push
pop
sbb
inc
inc
inc
jl
out
mov
dec
pop
cli
xchg
std
jl
std
xor
xchg
inc
mov
js
jo
jbe
pop
mov
xchg
or
fcomps
orl
js
test
lahf
movsl
rclb
into
loop
rcl
dec
push
in
mov
mov
add
mov
mov
or
loop
pusha
rorl
push
cmp
xchg
dec
adc
notl
fdiv
insb
js
sbb
mov
ja
add
stos
xchg
call
outsl
mov
insb
push
outsb
repnz
xchg
les
xchg
dec
push
mov
movsb
lods
cmp
movsb
subb
hlt
out
lahf
push
cmp
ja
mov
mov
add
loope,pn
icebp
jmp
std
add
loop
sub
je
es
icebp
icebp
sub
int3
sti
and
dec
adc
add
inc
inc
nop
outsl
fmuls
mov
pop
jl
xchg
lods
inc
push
dec
adc
pcmpeqd
shlb
data16
cs
cmp
and
pop
cld
cli
scas
cmpsb
lods
mov
pop
mov
ja
sbbl
jbe
fmull
mov
rolb
out
dec
cli
clc
adc
je
subb
mov
mov
cmp
dec
pop
mov
push
and
imul
ret
mov
xor
mov
in
xchg
shrl
shlb
mov
insb
test
aaa
jecxz
rcrl
out
inc
mov
stc
inc
js
and
jbe
push
dec
and
push
push
cmp
or
mov
in
aas
add
xchg
lcall
mov
daa
xor
cwtl
pusha
cmp
insl
cld
fisubrs
cmpsb
nop
or
ljmp
jl
cmp
in
leave
daa
push
mov
fcmovnb
ja
mov
and
sahf
jge
mov
add
shr
js
xor
or
or
js
movl
aaa
lret
enter
xlat
pop
test
fcoms
lods
add
sub
cli
push
dec
ja
pop
pop
pop
mov
dec
sahf
push
out
roll
jl
and
inc
dec
clc
push
loop
jbe
push
pushf
inc
xchg
xchg
jae
cli
cs
int3
add
sbb
loope
dec
or
push
adc
jge
pop
xor
xor
aaa
hlt
sbb
jp
add
mov
ss
pop
andl
adc
shlb
inc
inc
sub
mov
aas
pop
sub
pop
adc
inc
dec
adc
xor
in
inc
es
mov
jge
mov
orb
adcl
dec
aad
dec
mov
in
mov
nop
rcll
mov
repnz
or
and
and
dec
xchg
mov
pop
jo
mov
ret
push
push
insb
mov
mov
mov
mov
clc
xor
mov
cmp
scas
data16
cmpb
sbb
divb
pop
pushf
push
xchg
test
cmp
mov
lahf
push
sub
jge
lret
xchg
insb
mov
jge
sub
push
cmp
jmp
jecxz
movl
mov
mov
push
dec
xchg
xor
icebp
rol
fistpll
fs
hlt
lcall
xchg
push
jns
daa
pop
scas
mov
mov
pop
push
or
lea
fistpll
ret
jmp
lock
cmp
push
cwtl
movsl
addr16
orl
pop
lods
push
dec
call
sbb
subl
or
jnp
jmp
cmp
push
dec
jge
inc
jne
cli
cs
clc
out
or
sub
rcrl
decb
fdivr
es
pop
mov
ljmp
dec
std
loopne
dec
fsubrl
test
push
inc
cld
mov
xchg
jbe
sub
loop
addl
ja
jp
es
jbe
sub
bound
mov
and
mov
js
repnz
pushf
jo
lock
movl
and
jmp
adcl
adc
testl
lock
jo
mov
mov
sbb
pop
mov
jno
inc
jle
ret
in
inc
push
fs
std
cmc
pusha
xor
pop
or
xchg
rolb
push
out
and
pop
cli
loopne
stc
cld
hlt
adcb
adcl
lds
mov
movsb
lods
dec
inc
add
loopne
test
std
xor
fdiv
popa
and
pop
pop
push
cmc
lret
cmp
adc
jnp
mov
sar
adc
js
xchg
add
icebp
mov
adc
sub
pop
sub
das
mov
sbb
hlt
ljmp
lods
sarb
ret
js
jmp
clc
lock
test
fsub
xchg
pop
inc
inc
cli
in
loope
roll
pop
js
fcomip
lds
lcall
mov
and
fimull
xor
jnp
std
hlt
jmp
xchg
cld
mov
cmp
icebp
sub
popa
insb
hlt
pop
pop
pop
jge
hlt
push
sbb
xchg
jge
repnz
stos
ja
sahf
shrb
mov
pop
fisttps
mov
cmp
pushl
push
pop
cld
loope
adc
enter
ljmp
test
cld
iret
andb
lock
insl
cs
ret
push
mov
lods
pop
mov
push
mov
add
inc
cmp
icebp
sbb
adc
push
or
popf
orl
cwtl
test
adc
cwtl
icebp
mov
sbb
test
pop
inc
adc
js
and
fbld
xor
ds
dec
jbe
shlb
mov
or
push
xchg
andl
dec
ficompl
mov
and
movsb
loope
test
insb
outsl
cli
data16
sub
xchg
bswap
xchg
daa
pop
adc
xchg
pop
movsl
xlat
aad
dec
outsb
pusha
push
push
movb
iret
into
cmp
out
inc
mov
sbbb
subb
xchg
add
mov
cmp
rcrb
movsbl
add
and
or
subb
bound
fdivp
rcl
mov
stos
lret
arpl
mov
and
mov
xor
les
push
xchg
mov
inc
inc
jae
or
pop
in
sub
lahf
inc
add
cli
xchg
pusha
xlat
xchg
sub
subps
dec
rol
push
sub
inc
push
add
mov
cmpsl
shrb
fwait
cltd
or
pusha
push
mov
dec
xorw
lock
jbe
loop
mov
movsl
loop
jb
jo
addl
test
into
clc
hlt
loope
mov
jbe
cli
and
sbb
jb
push
jle
mov
frstor
xor
mov
dec
pop
adc
out
test
mov
dec
cli
jne
jo
dec
fwait
loopne
hlt
cmpsb
lock
mov
add
je
loopne
sub
sarb
jnp
popf
dec
sahf
rcrb
lock
inc
jge
push
out
jbe
data16
cmp
js
push
cmpsl
mov
lock
ret
dec
movsb
data16
dec
mov
lods
repz
jae
push
in
jo
out
or
or
dec
cld
lods
add
push
jp
mov
sub
loop
dec
push
sbb
pop
ja
xor
sub
xchg
icebp
ljmp
mov
mov
daa
js
orb
shrb
test
inc
inc
cmp
icebp
jl
inc
loopne
mov
dec
loop
cwtl
rcl
mov
clc
sub
adc
xchg
pop
loopne
cmp
roll
xchg
into
xor
push
push
jl
and
adc
filds
int3
shlb
sbb
inc
push
and
pop
adc
sbb
leave
arpl
cmp
clc
icebp
push
daa
inc
add
adc
das
movsl
dec
inc
mov
jecxz
out
and
ja
ds
mov
and
or
rcrb
mov
sbb
cmp
aam
fisttpl
into
push
imul
inc
jno
pusha
xchg
fimull
jle,pt
mov
fidivl
bound
jp
sarb
loop
pop
jge
dec
clc
mov
push
mov
nop
jle
fwait
icebp
dec
les
rorb
inc
mov
jno
and
test
std
lock
ret
pop
insb
or
les
ljmp
out
sti
mov
and
lcall
dec
pop
ret
pop
cld
and
sub
pop
js
andl
adc
int3
or
jecxz
adc
dec
pop
pusha
jge
jo
mov
pop
and
jl
sbb
insb
js
or
jmp
push
imul
dec
mov
add
add
dec
jmp
bound
enter
push
pop
clc
imul
fwait
push
pop
sarb
ja
loopne
lcall
ret
and
and
or
cmp
lea
cmp
pop
sbb
cld
mov
mov
out
clc
pop
mov
loope
xor
adcl
lcall
loopne
bound
rol
cli
icebp
out
sub
mul
adc
pop
or
dec
jecxz
pop
imul
pop
in
lods
rorb
stos
imulb
ss
cmp
mov
sbb
pop
lods
les
in
adc
faddp
push
cs
mov
pop
ds
pop
inc
aam
les
xchg
into
mov
scas
nopl
mov
sti
jecxz
mov
cli
cwtl
rclb
hlt
cmpsl
frstor
cs
test
movsb
xchg
mov
ret
fidivl
je
movsb
clc
sti
pop
loopne
jae
mov
das
fdivrl
les
or
xor
inc
dec
lods
loopne
or
inc
fnsetpm(287
stos
sbb
lock
xchg
js
xchg
lods
js
bound
cmp
addr16
cmpsb
adc
dec
pop
stos
add
jle
jnp
cmp
hlt
aaa
hlt
hlt
call
mov
jmp
out
ret
sarb
out
loopne
lods
roll
ds
mov
pop
jge
push
lods
lcall
movl
push
cld
insl
dec
fisttps
xor
inc
sbb
mov
clc
cltd
xchg
rolb
xor
sub
ret
icebp
jmp
sahf
inc
mov
pop
and
inc
bts
pop
xchg
xor
xchg
orb
js
insb
push
sub
jl
mov
jle
subb
lods
jns
lcall
push
fists
clc
clc
jmp
xchg
mov
rcl
je
rorl
scas
xchg
xor
out
lahf
jbe
mov
gs
dec
test
adc
jp
mov
mov
rorl
cmc
jecxz
pushf
xchg
icebp
ds
sahf
mov
addr16
mov
mov
mov
xor
sub
xchg
insl
cmp
movsb
xor
inc
hlt
pop
or
add
jge
sbb
es
test
adc
orb
sub
and
test
or
mov
pusha
cld
ds
fs
add
mov
icebp
outsb
jne
adc
je
leave
bound
addr16
inc
xor
xor
fstps
jno
lods
pop
xor
lock
xchg
mov
mov
aad
mov
das
push
call
adc
rorb
mov
push
or
ljmp
and
ret
aad
ficompl
loopne
xchg
loop
inc
cmp
or
mov
out
std
jo
cmp
jmp
shrb
jne
cmp
nop
xchg
mov
pusha
mov
daa
lea
enter
je
loope
hlt
aas
sarb
mov
inc
loop
repz
xorl
movsb
push
dec
jmp
cmp
mov
or
jge
out
daa
jl
icebp
sahf
es
adc
jp
sub
shrb
inc
xor
enter
pushl
hlt
push
push
sub
mov
jle
xor
cmp
clc
jmp
jmp
testl
lahf
push
movl
call
mov
lahf
pop
popl
push
sub
js
pop
xor
icebp
fs
dec
into
imul
pop
addb
sub
push
out
gs
scas
dec
pop
jp
call
sub
pop
test
rol
sub
pop
aas
ds
int
ret
mov
adcb
adc
dec
pop
inc
pop
sbb
into
lock
lock
push
adc
fbld
idivb
inc
inc
cmp
loop
mov
pop
addl
mov
mov
addb
push
jle
and
jecxz
loop
xchg
inc
test
lock
and
int3
icebp
xorl
dec
dec
mulb
add
push
xchg
cli
scas
outsb
insb
je
mov
jle
test
mov
jp
cwtl
pushf
stc
cmp
int3
out
or
fwait
inc
push
mov
cmp
lock
push
repnz
xchg
cmp
fidivrs
add
cld
outsb
dec
cmc
clc
push
sarb
clc
jbe
lock
pop
adc
jne
jmp
wrmsr
jle
int3
arpl
mov
enter
adc
mov
pop
mov
hlt
add
sbb
sahf
dec
jl
pop
jns
xor
mov
xchg
cmp
dec
pop
cltd
pop
rcr
imul
shlb
fs
mov
jbe
lea
cmp
jp
iret
or
and
loopne
test
bound
mov
sub
iret
pop
pmaxub
sbb
jg
jnp
xchg
aam
into
cmp
sbb
loop
ficoms
jle
xor
in
pop
cmp
enter
xor
nop
or
nopl
lock
jo
mov
jo
in
bnd
test
push
jo
jp
mov
or
pop
pop
push
pcmpeqd
push
aas
jg
cli
sahf
jp
es
pop
cmp
int3
jb
out
mov
js
inc
pushf
ret
js
mov
push
push
data16
or
cmp
cld
jo
cmp
sub
mov
mov
pushf
fcomps
shrl
scas
mov
int3
jne
inc
adc
push
shlb
pop
jp
orl
sti
lods
and
mov
cmpb
fdivs
loopne
mov
jo
es
cmc
mov
sbb
and
push
ret
pop
jge
in
sar
jb
and
in
mov
lcall
sbb
decb
and
inc
outsl
or
or
xchg
adc
rorb
xchg
int3
out
inc
adc
pushf
popf
push
pop
pushf
pop
ljmp
fbstp
mov
sahf
filds
dec
es
fiaddl
lods
pop
cmp
adcb
cld
daa
sub
iret
dec
imul
or
pop
popa
aad
sbb
inc
inc
fs
shl
push
cmp
inc
dec
mov
sbb
shl
aad
mov
sbb
cwtl
cmp
ret
pop
lods
les
jecxz
nop
mov
jbe
jl
push
mov
ss
push
jge
fimull
push
nopl
ds
addr16
pavgw
fnsave
loop
fdivrl
inc
or
loopne
testl
jge
push
jp
mov
cmp
lea
cmp
popa
es
sub
or
repnz
pop
andb
sbb
popa
sbb
mov
bound
test
pop
cmpb
mov
bound
test
pusha
cmp
fsubrs
mov
int
test
or
mov
int3
es
and
add
addl
push
jl
or
dec
pop
or
icebp
gs
and
dec
xchg
inc
add
jl
pop
push
mov
out
outsl
pop
lea
add
loopne
cmp
or
sbb
insb
inc
xchg
xor
xchg
outsb
pop
test
ss
mov
sub
inc
clc
add
inc
ret
mov
cmp
rcrb
stos
roll
test
scas
cmp
sub
mov
cld
insb
xchg
sbb
mov
sub
mov
loop
shl
inc
in
shlb
shrb
push
clc
lods
inc
mov
pop
lcall
ret
mov
mov
popa
scas
jl
jp
nop
cli
jecxz
and
pop
mov
rorb
ficompl
out
pop
js
mov
scas
push
insb
cmp
dec
scas
sti
fs
sbbl
movsl
sub
movsb
inc
xor
popf
xor
jl
ljmp
and
in
or
dec
jno
lcall
or
test
loopne
add
out
push
rol
out
xchg
test
xchg
adc
or
inc
loope
stos
jb
inc
fsubrs
xor
pushf
fs
adc
jge
jle
adc
sub
push
sub
loop
scas
mov
mov
mov
lds
js
aam
les
xchg
arpl
xchg
stos
movsb
jl
dec
loop
loopne
push
test
add
push
test
out
sahf
inc
hlt
call
rcrl
mov
mov
pop
cs
lea
inc
dec
jo
ficoms
leave
add
or
out
jnp
mov
test
cmc
cmp
mov
xchg
ds
or
pop
push
dec
sbb
rclb
les
jmp
shl
cmpsb
add
jo
icebp
jge
loopne
push
jne
xchg
lret
dec
mov
pop
clc
push
je
jbe
xor
mov
jge
stos
pop
dec
arpl
cmpsb
sbb
testl
out
in
and
scas
jmp
pop
nop
repz
adc
fsub
pop
jge
repnz
jb
out
inc
jecxz
xlat
pop
jnp
xchg
jg
je
orb
lret
mov
out
in
sub
cli
push
pop
mov
test
dec
int
shll
jo
in
mov
pop
push
movb
testl
add
add
push
aas
jbe
cmp
inc
xor
mov
xor
test
in
pop
scas
int3
add
pushf
or
jno
rorl
stc
stos
jp
imul
mov
adc
lcall
add
inc
jl
sbb
aad
lock
sbb
sbb
jle
popf
add
mov
dec
ret
enter
sub
data16
push
cmc
iret
push
aaa
mov
jp
xchg
les
cli
movswl
push
ret
pop
mov
fisubs
jp
mov
sub
push
pop
mov
push
jbe
push
jge
test
inc
mov
mov
and
ljmp
jge
ret
jmp
pop
cmpsl
pop
dec
xor
push
push
pop
pop
cs
cld
sub
ja
cmc
or
jp
pop
and
cwtl
fildl
sti
jbe
adc
xor
movl
inc
rcrb
js
negl
leave
inc
lcall
cli
fidivrs
out
lcall
add
es
hlt
add
cmp
mov
cmp
xchg
icebp
add
rcrl
adc
clc
pop
jo
es
xor
mov
pop
mov
and
lret
loop
ret
fisubs
jl
inc
xchg
outsb
les
lods
push
cmc
pop
aam
sub
in
mov
stc
jp
pop
test
rcll
mov
ss
push
mov
pusha
jns
add
or
in
mov
fdivrs
fucomip
dec
int3
clc
es
add
sti
lock
jb
mov
jbe
test
mov
out
hlt
jnp
loope
cmp
in
cmp
ret
loopne
cld
nop
rorb
cwtl
mov
icebp
ljmp
subb
aad
test
bound
stos
rorl
leave
enter
mov
popl
mov
out
cwtl
jbe
ljmp
xor
cli
cmp
ja
insb
fnsave
daa
in
jle
cs
pop
das
pop
pop
adc
push
ficoms
cs
clc
mov
mov
and
or
or
cmpsb
mov
pop
sub
lods
adcb
bound
std
add
push
pop
mov
mov
sub
cs
jl
jbe
mov
xchg
xchg
mov
and
in
pop
es
mov
mov
and
jl
dec
inc
mov
jnp
adc
mov
fdivrs
testl
mov
fists
mov
mov
repnz
xchg
pusha
js
mov
pop
cmpsb
sahf
lods
dec
ljmp
clc
jmp
loope
pop
ds
pop
loop
push
push
js
xchg
dec
cmp
je
pop
pop
add
fsubrs
rcll
int
shrb
fidivl
insb
jle
jge
jo
insb
sub
lock
push
cltd
mov
or
in
fadds
xor
xchg
shl
cmpsl
subl
jle
clc
cli
sarb
cmp
mov
or
scas
loope
xchg
cli
mov
pandn
xchg
cs
add
insb
inc
int
push
hlt
jle
cmp
lock
jle
data16
jecxz
scas
ds
clc
push
aas
in
mov
rolb
sarl
and
mov
aaa
hlt
jae
lods
dec
in
pandn
xchg
lock
add
push
lods
not
and
add
or
test
xor
sbb
es
ds
push
js
jo
lock
push
nop
push
loope
je
and
test
hlt
xchg
mov
daa
test
sbb
jge
sbbb
bound
mov
jge
out
mov
ds
test
call
add
pop
rolb
les
cmc
jmp
mov
sbb
mov
adc
xchg
cmp
fisttpl
shrb
mov
js
lods
insb
fs
inc
outsl
add
fbstp
jbe
mov
dec
dec
inc
dec
sub
jecxz
arpl
push
pop
sbb
pop
jge
lock
sub
call
je
push
inc
bound
add
lock
les
jmp
and
xchg
add
loop
jl
roll
faddl
call
into
inc
mov
xor
xchg
or
pop
repnz
xor
ja
push
ret
ficoml
fdivrs
cld
xor
notb
dec
jge
mov
inc
add
xchg
add
fwait
mov
and
jge
out
sub
adc
les
inc
imul
inc
pop
mov
dec
mov
icebp
sarl
dec
mov
lods
cli
xor
rcl
add
mov
shr
pop
nopl
mov
sahf
popa
cmp
sbb
lret
ds
lock
jp
adc
push
xor
push
jle
addb
cld
insb
xchg
mov
push
mov
pop
mov
push
mov
xchg
or
dec
add
lcall
and
fdivp
xor
std
mov
xor
or
pop
adc
pop
push
loope
add
or
sahf
scas
jmp
clc
call
out
cmc
xor
mov
jno
sti
addb
loope
test
fsts
sub
mov
push
ret
rolb
hlt
mov
inc
inc
jmp
pop
pop
ds
push
lods
sbb
inc
clc
cwtl
test
cmp
lcall
mov
pop
adc
ror
mov
shr
jge
out
adc
pop
or
cmc
test
stos
and
orb
xchg
mov
mov
push
adc
pop
mov
mov
test
mov
cmp
hlt
insb
movsl
xchg
xor
inc
xchg
scas
pop
mov
insb
sbbb
movswl
imul
jbe
xlat
mov
mov
adc
mov
dec
xor
add
sti
push
loope
xor
out
adc
in
add
mov
sbb
pusha
fwait
or
ret
stos
punpcklbw
loop
aas
in
jne
mov
mov
stos
ficomps
mov
mov
stos
or
popf
inc
in
es
jle
pop
sub
mov
loop
mov
inc
rorb
xor
cmc
in
les
mov
lods
out
imul
clc
lahf
lods
out
pop
dec
movsb
addr16
lahf
xchg
pop
sub
and
imul
ret
fsubs
fdivrl
inc
scas
mov
jle
xor
push
dec
aam
loopne
repz
loopne
lahf
xor
repz
adc
xchg
lock
fisttps
pop
out
mov
jl
lret
adc
dec
movsb
imul
cmp
lret
cmp
xchg
add
cmpsb
jnp
xchg
or
push
in
adc
cld
jp
cmp
shl
testb
adc
jb
jl
sti
loopne
pop
jbe
outsl
jo
cltd
aad
pop
aas
xchg
js
cmp
fadd
jmp
rol
loope
into
push
inc
push
cmp
lahf
mov
push
lret
filds
in
jp
into
sbb
test
pop
pop
and
pushf
out
pop
lea
inc
rorl
add
das
pusha
dec
test
mul
mov
cmp
dec
cmp
sub
ljmp
mov
and
pushf
sahf
cmp
out
inc
adc
push
fcmovnb
pop
scas
pop
fcomps
aam
mov
ret
mov
ficompl
adc
out
mov
loope
sbb
sub
cli
add
in
lcall
pop
pop
pop
push
fbld
sub
xchg
clc
push
fs
shrb
mov
popa
sub
jp
mov
cltd
sahf
lods
repnz
pop
cmp
add
push
addr16
inc
inc
pop
and
xor
push
and
push
loop
mov
clc
push
ss
sbb
hlt
push
xor
mov
pop
cmp
jge,pt
push
call
sbb
nop
dec
sub
dec
sahf
test
push
push
sbbl
nop
adc
nopl
popa
ffreep
adc
je
fcoms
or
hlt
insb
xchg
xor
hlt
loope
test
jg
aad
loop
gs
sub
lods
dec
fisubrl
rorb
pmaxub
gs
and
inc
jmp
xchg
xor
xchg
js
stos
jge
jge
ret
outsb
retw
dec
xchg
mov
or
icebp
inc
bswap
loop
cmp
mov
push
pushf
aam
rolb
dec
or
and
enter
jle
das
mov
add
out
mov
clc
arpl
push
ds
mov
loopne
out
mov
into
mov
jne
js
sar
loope
repz
gs
mov
or
push
push
mov
xlat
js
add
push
bound
or
inc
testb
mov
loop
push
add
test
add
test
mov
shll
lahf
fistpll
call
icebp
sahf
cmp
or
popf
sti
inc
cwtl
pop
clc
test
mov
dec
out
sub
push
inc
jo
inc
loopne
inc
mov
daa
adc
xor
sbbl
sbb
mov
mov
arpl
lcall
sti
out
pop
lods
mov
negl
inc
cmp
push
lahf
sarb
pop
dec
iret
xchg
in
les
aad
xor
dec
mov
push
lea
mov
cmpsb
aaa
jg
mulb
popf
out
cmp
fcmovb
rcl
jne
jns
cltd
mov
scas
das
jbe
sub
adc
push
clc
add
xor
lock
cli
or
mov
mov
push
lds
xlat
or
cpuid
ret
cld
ficoml
int3
mov
cmp
call
outsb
inc
mov
scas
jle
orl
test
inc
sarb
ret
and
out
push
out
adc
bound
sbb
rclb
and
mov
lds
imul
rol
cmc
movsb
rcr
pop
mov
shr
add
sub
mov
or
or
orl
rcrl
inc
push
in
imul
jl
jne
pop
jle
in
movswl
clc
xchg
push
out
dec
lods
xchg
clc
aam
push
jne
pop
inc
movsbl
leave
jbe
xor
cltd
clc
ljmp
jno
loope
inc
sub
cli
push
pop
scas
pop
mov
scas
inc
mulb
mov
call
jo
lods
dec
push
xchg
pop
cmp
push
outsb
sahf
aas
movsl
inc
sbb
and
dec
lods
pop
int3
insb
xchg
shl
test
and
andb
rol
pop
out
lcall
push
jp
sub
push
push
mov
pop
lcall
out
xchg
xchg
test
cwtl
push
sub
add
adcb
lahf
xor
xchg
xor
jle
mov
shl
dec
lock
jmp
push
mov
jae
cmp
stos
and
adc
jbe
add
cmp
pop
push
inc
xor
mov
test
cmp
popl
pop
sti
mov
xchg
shlb
aam
push
jge
insl
mov
or
hlt
jmp
push
ret
dec
stos
jb
pop
mov
sbb
hlt
and
xor
pop
pop
aas
mov
aad
adc
pop
outsb
cwtl
mov
mov
and
cwtl
pop
cwtl
push
mov
rcr
insl
ds
inc
sbb
pusha
scas
cli
aad
sub
je
fimuls
mov
or
mov
inc
push
xor
sbb
insb
xor
gs
mov
inc
xchg
movsb
push
inc
dec
jge
mov
aam
add
add
mov
ret
mov
cwtl
sbb
xor
fsubs
bound
fs
filds
bound
insb
jbe
clc
cmp
popa
loop
cli
bound
cli
sub
pop
lods
dec
sub
and
and
rorl
adc
mov
push
or
das
push
inc
les
nop
mov
add
fcmovb
sbb
imul
rol
pop
lock
pop
jns
fdivrl
push
sbb
xor
sub
dec
mov
mov
push
inc
std
sar
imul
or
insb
add
and
xchg
into
insb
loop
dec
sarb
or
add
pop
test
push
aaa
push
sbb
loope
adc
je
scas
push
jae
jge
gs
mov
loope
add
sub
in
pop
pop
js
daa
cmpsb
push
pop
inc
mov
dec
cld
ljmp
adc
filds
cwtl
scas
cld
adc
jo
fimuls
mov
stc
out
mov
xchg
rclb
cmp
or
aad
push
orl
shrl
sbb
jp
loope
mov
into
clc
or
lock
push
jne
jl
cld
push
xchg
in
xor
movsb
xchg
jp
mov
jl
rorb
jecxz
jecxz
jl
ds
jnp
lcall
outsl
sbb
cwtl
add
jge
sbb
mov
fmuls
std
fs
adc
andl
loopne
mov
mov
mov
aam
xor
xchg
shlb
cmpb
mov
into
dec
mov
lcall
xchg
nop
dec
fisubl
mov
push
pop
inc
es
aam
lahf
cmp
and
clc
add
cmpsl
jb
and
rolb
push
xor
xor
adc
sbb
imul
and
adc
push
adc
fisttps
mov
loop
cmc
in
mov
sti
jl
jo
test
jo
lcall
divps
push
xchg
mov
jbe
adc
mov
jmp
cmp
or
ss
js
xor
sbb
js
mov
lock
mov
and
adc
sbb
sub
sbb
test
push
mov
les
fiaddl
hlt
dec
xchg
rcrl
mov
roll
in
prefetchw
out
add
icebp
mov
push
push
mov
lea
dec
pop
es
pushf
cwtl
mov
push
sarb
icebp
mov
call
pushf
xchg
mov
fsubrl
dec
outsb
repz
cmp
pusha
add
cmc
mov
jbe
or
jmp
fldenv
movsl
mov
lahf
inc
xor
inc
push
stos
cmpb
sahf
faddp
pop
xorb
mov
jle
xor
push
inc
fnstsw
and
rcr
mov
out
cmp
das
inc
aas
xchg
stos
pop
mov
dec
and
loopne
or
mov
bound
leave
std
jo
or
jle
fmuls
push
fidivl
or
jp
enter
idivl
pop
clc
test
xor
popf
push
push
roll
sbb
jns
clc
ljmp
mov
outsl
adc
and
dec
mov
les
inc
cmp
sbb
aas
pusha
jno
adc
scas
jns
lock
jge
mov
sar
xor
rorl
push
and
and
push
jle
inc
fnstenv
rcrl
push
test
xor
jle
cmpsb
cwtl
hlt
pop
nop
scas
push
cmp
imul
push
lahf
xor
pop
pop
xchg
cmp
jecxz
jge
mov
pop
cmp
enter
sbb
pop
pop
inc
adc
clc
sarb
jmp
jbe
sub
mov
and
push
jmp
hlt
bound
xor
push
fiaddl
pop
cmp
loop
in
sub
pushf
test
mov
test
sti
pop
cld
addb
dec
stc
add
cmp
xchg
lods
out
push
insl
inc
mov
sahf
push
jle
icebp
xchg
jns
in
jmp
adc
cwtl
mov
jge
clc
ss
pop
sub
movl
jo
and
out
jge
push
in
fwait
mov
ret
dec
in
pop
pop
cmp
sbb
cmp
cmc
test
lea
out
and
scas
push
cmp
jbe
stos
icebp
in
xor
push
ja
adc
jo
ljmp
xchg
xor
testl
pop
mov
mov
xchg
lock
fimuls
pop
fistps
loope
push
pop
fs
aaa
test
mov
inc
out
jo
xchg
shl
gs
fiaddl
push
mov
mov
insl
shlb
adc
rclb
push
fwait
clc
mov
adc
cmpxchg
push
js
loop
mov
xor
rolb
adc
rcr
out
out
pop
rolb
cmp
push
icebp
vpcmpgtb
mov
ljmp
outsb
adc
sub
push
call
testl
xor
cli
jge
adc
mov
sub
adc
pop
inc
mull
pop
rcrb
jae
pop
pop
in
les
in
nop
ret
fsub
movsb
fisttps
pop
test
loope
les
in
and
ret
xchg
xor
inc
adc
sbb
sub
out
add
jbe
out
or
add
dec
pmaxub
cmp
mov
jmp
shlb
dec
push
pop
stos
nop
sub
xor
cltd
push
push
cmpsl
xchg
mov
in
dec
in
mov
mov
push
xor
lock
cwtl
rol
imul
add
dec
sbb
lock
int3
out
call
ds
cwtl
pop
pop
mov
sbb
andb
imul
adc
mov
mov
les
incb
pushf
sbb
scas
lock
insl
shl
push
clc
fs
jle
jp
mov
mov
push
mov
mov
mov
inc
decb
fiadds
sahf
inc
fstpl
pmovmskb
or
repnz
test
fnstcw
cmp
sub
pop
mov
loopne
clc
pop
mov
mov
mov
sbb
jle
icebp
or
lock
push
push
xor
jle
dec
jno
loope
mov
mov
mov
out
insb
cld
xor
inc
out
sub
xchg
mov
and
pop
out
ret
ret
scas
sti
adc
or
mov
sub
cmp
pop
clc
aaa
pop
fistpll
filds
bound
das
cmp
mov
push
ds
pop
jo
bound
mov
jb
pusha
mov
mov
push
cli
loopne
data16
aam
mov
sbb
insl
or
pandn
pop
push
sub
imul
cmp
dec
add
xor
rol
shlb
inc
stos
shlb
mov
lods
xchg
mov
mov
sahf
sub
rcll
xchg
hlt
xor
mov
mov
sbb
js
lock
fsub
mov
imul
jnp
ds
shl
faddp
xor
fwait
push
mov
insb
sar
sub
xor
insl
sub
fsubrs
mov
dec
sbb
call
arpl
or
xor
pop
test
dec
xorb
int
ss
jecxz
push
rclb
comiss
mov
pusha
loopne
rorl
pop
testb
mov
xorb
sub
add
hlt
and
icebp
call
clc
xor
adc
pop
lret
lret
pop
cmpb
scas
pop
orb
js
mov
or
jl
mov
imul
add
inc
test
clc
lock
xorl
mov
daa
stos
xor
adc
mov
fisttps
sub
pop
inc
aam
mov
es
fwait
adc
jbe
and
data16
in
je
into
aam
sbb
rolb
mov
mov
call
scas
adc
sub
pushf
push
insl
jg
in
daa
dec
pop
sbb
xor
lds
aaa
jo
inc
movl
dec
loop
sbb
pop
rol
sarb
pop
adc
jo
in
cmpsb
add
insl
lret
add
mov
add
inc
nop
jle
es
and
cmp
icebp
les
and
mov
mov
xchg
popf
mov
and
sbb
lock
push
push
ds
lret
mov
pop
iret
andb
ret
ret
hlt
nop
push
lock
mov
hlt
call
leave
shl
pop
popa
and
mov
add
pop
sar
sarl
sbb
push
lret
push
add
es
mov
cli
icebp
mov
or
add
xchg
cli
mov
mov
pop
and
fists
sbb
js
sarb
loopne
xchg
sbb
stos
stc
push
in
jl
ja
rorl
repnz
in
dec
sbb
jp
jp
mov
xchg
fdivrl
movl
cmpsl
sbb
sub
mov
mov
stos
mov
cmpsb
mov
hlt
imul
sbb
mov
orb
jbe
adc
mov
dec
cwtl
nop
cmp
inc
fistpll
inc
mov
pop
cld
inc
aam
inc
cmp
add
sub
mov
data16
and
bound
cmpl
clc
sub
push
mov
lds
enter
add
pusha
pop
loope
test
lea
xor
addb
in
fistps
enter
shlb
jp
jle
mov
rcrb
push
sbb
clc
xor
pop
jp
lahf
mov
and
dec
push
inc
fmulp
nop
push
jl
inc
arpl
dec
iret
inc
mov
dec
inc
pop
jo
test
and
mov
out
dec
mov
cmc
sub
js
gs
cmp
adc
ljmp
fsubrs
sti
hlt
xlat
sti
je
arpl
ret
lods
mov
sub
rcrb
dec
cmp
jo
mov
sub
push
fcmovb
cmovae
in
je
or
and
aam
repnz
out
lret
aam
and
loopne
dec
aam
pop
dec
nop
cmp
add
loope
inc
test
dec
cwtl
subb
cmp
test
inc
pop
sbb
adc
mov
ss
mov
push
mov
rolb
in
hlt
xor
dec
call
fildll
sbb
call
mov
and
sbb
inc
cmpsb
stos
lods
stos
dec
das
or
add
fs
lods
sahf
subb
inc
es
cmpl
js
push
cwtl
inc
mov
xchg
mov
rol
mov
test
cmp
cmp
movsb
jnp
icebp
jmp
imul
imul
adcl
adc
shl
xchg
mov
bound
jecxz,pt
ucomiss
enter
movsb
loop
inc
nopl
xor
not
addl
icebp
sub
push
jle
sbb
push
rcll
mov
push
popa
imul
dec
pop
fisttps
mov
push
push
pop
cmp
mov
dec
xor
mov
xchg
cmp
icebp
cltd
les
ja
bound
pop
aas
ds
cld
sub
test
hlt
loopne
loopne
pop
rorl
js
sbb
in
clc
adc
pop
subb
mov
lds
mov
test
xorb
jns
lods
shll
inc
out
jge
mov
jb
and
add
or
cmpsb
pop
push
out
and
pop
fadds
lock
cli
mov
fcomps
in
adc
add
or
xchg
loope
adc
int
xchg
xor
push
push
adc
and
fdivrl
jmp
popf
lcall
push
pop
jl,pt
and
sbb
repnz
mov
sub
dec
or
loope
dec
sbb
pusha
mov
cmp
push
xor
push
sub
cmp
inc
test
je
packssdw
rcrb
jne
pop
sub
sub
adc
std
push
mov
in
aaa
pushf
jno
push
cltd
aas
jle
sbb
dec
add
sbb
lea
jo
mov
cmp
scas
add
ret
mov
jle
test
call
movsl
es
cmp
jp
loop
bound
in
sbb
mov
or
lock
shlb
xlat
adc
shlb
jno
and
call
sbb
shll
iret
fmulp
test
lods
xchg
jle
mov
pop
hlt
mov
in
push
imul
jle
pop
and
pusha
sub
or
inc
lret
adc
insb
fimuls
movups
push
adc
jbe
ss
sub
cmc
ljmp
jle
aaa
mov
addr16
mov
xchg
adc
jl
or
int3
cmpb
inc
stos
mov
dec
scas
xor
lock
mov
and
ror
pusha
dec
popf
cmp
push
pop
es
push
cmp
je
sar
cmc
loop
scas
int3
add
mov
stos
cmp
data16
mov
sub
std
inc
sbb
mov
mov
cld
icebp
inc
outsb
pop
nop
jnp
in
cwtl
shr
dec
lods
scas
icebp
arpl
mov
jle
out
push
loop
cli
mov
loopne
gs
jecxz
inc
or
xchg
sbb
inc
mov
sub
rorb
les
xchg
and
or
xchg
lcall
dec
stos
add
jl
lock
lock
mov
dec
mov
adc
out
adc
je
dec
out
les
not
lret
and
int3
dec
nop
push
push
insl
jbe
cld
sahf
test
out
xor
adc
cli
bound
inc
jl
iret
jp
test
lods
test
lcall
adc
cmpsl
mov
inc
scas
xchg
inc
call
or
movsb
and
ret
mov
cmp
les
mov
push
scas
sbb
shld
rorl
lea
loop
scas
outsb
std
pop
xor
mov
sbb
inc
mov
pushf
add
repz
cltd
jmp
or
dec
clc
push
out
jae
cli
popa
loopne
rolb
xchg
fstps
mov
sbb
test
push
cmp
xor
loope
icebp
jle
lods
sbb
leave
mov
popa
orb
jge
clc
sub
hlt
xchg
lods
sbb
int3
popf
ljmp
mov
sahf
test
jl
mov
mov
aam
lock
xchg
ret
repnz
jae
loop
rorl
or
ja
lahf
push
cld
hlt
aam
xor
flds
addr16
xchg
mov
adc
cmp
lret
in
das
loope
push
clc
ret
loop
fiaddl
push
and
jge
test
je
sbb
mov
je
clc
fistps
shlb
gs
mov
inc
movsb
xor
sub
sub
mov
jno
out
xor
negl
push
mov
push
xchg
xor
hlt
aad
nop
orl
and
inc
mov
mov
stos
push
dec
pop
jge
js
add
or
push
sbb
faddl
push
sub
sbb
cmc
dec
clc
test
mov
cld
icebp
loopne
rcll
mov
push
add
pop
js
adc
in
sbb
ficoml
pop
pop
or
dec
sub
test
in
cli
mov
test
push
sti
cmp
loop
add
jp
outsb
cmpsl
in
out
inc
mov
or
sbb
orb
ficompl
push
push
fs
add
fistl
xchg
xor
xor
pop
pop
mov
and
ja
jbe
int
adc
jp
pop
push
negb
mov
cmp
jle
mov
adc
inc
inc
mov
mov
push
jecxz
das
sti
sub
scas
ret
inc
xchg
push
mov
dec
push
ss
inc
push
ds
shr
jbe
daa
js
insb
jl
sub
sbb
and
cmp
xor
hlt
fstpt
loop
sub
stos
cmp
pop
pop
cmp
dec
pop
mov
iret
dec
pop
ret
mov
sub
mov
lahf
adcl
addr16
inc
shrb
jbe
xchg
adc
mov
cmp
hlt
mov
ffreep
aaa
fiaddl
push
in
xchg
add
add
mov
mov
cmpsb
inc
rolb
pusha
ljmp
mov
add
int3
push
insb
js
test
cltd
mov
and
lock
repnz
push
mov
push
lds
jnp
cmp
xor
sub
ret
add
shl
popa
loopne
ja
mov
cwtl
loope
jecxz
jnp
mov
icebp
loop
arpl
arpl
cmpsb
mov
jp
mov
and
pop
inc
pop
jp
sub
shl
xchg
lea
iret
mov
cli
add
sbb
cmova
push
rorl
xchg
adc
mov
push
dec
mov
sub
or
push
aaa
bsf
jg
xchg
es
cmp
lret
add
fwait
pushl
mov
jecxz
or
idivb
aaa
aaa
mov
adc
into
push
sahf
xchg
testl
jl
mov
add
push
clc
push
out
mov
adcb
add
xor
mov
push
mov
pop
pop
dec
pop
inc
sub
rcrl
inc
and
ret
adc
pusha
sti
lcall
es
into
insb
mov
clc
loopne
lock
and
dec
scas
cld
dec
sub
loopne
rolb
cmp
add
imul
xor
adc
hlt
adc
sarb
jmp
daa
sub
pop
dec
jp
nop
cmpsb
femms
mov
scas
es
sbb
lods
inc
cmp
sbb
cmp
fbld
xorb
cmpsb
xchg
cmpb
fsubl
mov
mov
jp
cwtl
mov
lds
lahf
fiaddl
jmp
mov
sahf
clc
xor
insb
pop
es
pop
call
or
sub
test
mov
cmpsb
pop
sub
pop
and
icebp
push
nop
cmp
pop
in
jbe
dec
popl
cltd
xor
add
cld
pop
jmp
clc
jno
loopne
or
or
mov
cmp
insb
cwtl
sbb
jnp
fdivrp
inc
pop
pop
call
or
pmullw
cli
push
aaa
mov
stos
add
addb
call
negb
lods
shlb
or
iret
pop
pop
aam
pop
xchg
pop
sbb
or
sahf
cmp
dec
push
xabort
fadds
mov
inc
adc
xchg
and
fisttps
ret
mov
ret
pop
aas
ds
or
sti
pop
ret
pushf
pop
adc
fcomip
cmp
adc
insb
push
fs
das
jle
icebp
jbe
inc
hlt
inc
cli
xchg
icebp
add
inc
out
xor
cli
ret
test
icebp
rolb
in
adc
push
lods
mov
pop
fbld
mov
xchg
mov
rolb
inc
fldcw
popa
test
dec
hlt
adc
xchg
js
movsb
inc
popf
lock
loop
mov
adc
std
fadds
es
and
adc
cli
sub
fdivl
or
inc
pusha
adc
sbb
xchg
dec
les
stos
pop
sbb
or
clc
or
mov
xchg
movmskps
pop
sbb
xchg
sub
rcrb
xadd
lds
js
outsl
push
sbb
lock
out
sub
xor
dec
cmp
push
js
mov
adc
lret
popf
ds
jne
push
mov
dec
faddp
stos
xchg
xor
or
ja
clc
pusha
sti
es
aaa
fnsave
or
les
cmp
dec
adc
addb
jnp
mov
jne
mov
xchg
fs
sub
xchg
outsw
sahf
movsl
pop
cmp
cmp
push
push
je
cmp
add
dec
out
hlt
mov
xorb
mov
jno
stos
and
jp
fnstenv
shll
repz
loopne
sbb
sbb
sti
sbb
orps
xor
ss
adc
mov
std
jl
frstor
das
jbe
cmp
pop
push
cmp
test
inc
lods
aaa
xchg
notl
pop
idivl
sub
movsl
add
pop
push
xor
cs
out
inc
clc
pop
sbbb
push
out
add
inc
clc
jle
cmc
ret
xchg
call
and
scas
cmp
adc
ss
fwait
adc
mov
ljmp
test
lock
jecxz
adc
mulb
es
and
push
xor
or
stos
xchg
sub
es
jmp
mov
mov
cmp
call
sub
insb
out
in
cli
xlat
sbb
add
sbbb
xor
xor
fisttps
jmp
mov
xchg
sbb
outsb
jle
push
es
mov
mov
lods
inc
sub
xor
mov
mov
icebp
outsb
mov
inc
push
jle
jl
or
mov
loopne
inc
sbb
dec
lret
rcll
aam
xchg
movsb
fiaddl
add
dec
pop
xlat
in
mov
xchg
fiadds
xchg
and
nop
mov
mov
or
mov
loopne
ljmp
xchg
push
pop
cmp
or
cld
imul
fstpt
hlt
pop
outsb
pop
test
jb
mov
jnp
dec
or
insb
xchg
bound
push
aas
loope
or
ret
inc
fidivrs
aas
mov
clc
jnp
sbb
andl
adc
xchg
in
push
iret
test
pop
js
call
data16
leave
dec
dec
test
lret
xor
mov
pushf
loop
rclb
mov
mov
ss
xor
push
mov
adc
in
cld
mov
inc
out
or
imul
cmp
int3
xor
fcmovb
inc
mov
dec
add
push
mov
in
lea
add
mov
push
arpl
adc
pop
cmpsb
xchg
jo
sbb
loop
imul
mov
mov
out
or
jbe
jae
jp
push
adc
lods
out
inc
dec
or
push
add
mov
jb
adc
xchg
test
add
dec
or
outsb
out
xor
and
lock
lock
inc
pusha
jp
dec
loopne
and
pop
push
jbe
mov
jl
xchg
icebp
push
push
rolb
femms
ljmp
rolb
ds
lahf
push
shrl
mov
sbb
clc
insb
cmp
xor
in
sbb
mov
inc
pop
test
cs
sub
into
dec
inc
jmp
jne
movsb
push
jg
pcmpeqd
mov
insl
jne
pop
mov
ret
dec
out
stos
comiss
dec
adc
or
loope
push
cmp
out
inc
sub
bound
cld
ljmp
cmp
aad
mov
sbb
push
and
pop
cmpsb
adc
mov
js
out
std
xor
insb
sub
mov
mov
fists
ljmp
mov
pop
jge
sub
lods
pop
or
lock
out
cli
add
and
add
pusha
ret
out
roll
pop
inc
push
mov
pop
pop
pop
jl
cmp
pop
adc
mov
dec
cmp
fimuls
bound
mov
rorl
mov
sarb
pop
adc
and
adc
cmp
mov
cmpw
ljmp
add
xor
sbbb
stos
std
cli
lock
mov
mov
cmpsl
sahf
enter
cmp
das
cmp
das
fimuls
sbb
pop
insl
jbe
out
leave
push
fs
test
ret
or
inc
adc
pop
sub
loopne
aaa
aam
out
jge
je
ret
jl
xchg
sbb
movsb
jb
pop
pop
bound
inc
cmp
repnz
xor
fincstp
pusha
hlt
add
lds
xchg
sub
clc
repnz
mov
out
shl
in
fst
cs
push
mov
lock
push
mov
popf
scas
sub
orl
std
cli
add
std
fldl
and
lods
decl
push
push
xor
mov
je
mov
jecxz
loopne
icebp
add
rcr
jbe
cmp
pop
adc
mov
sbb
xlat
rorb
push
ljmp
fildll
loop
lret
faddl
jo
mov
push
icebp
fadd
xchg
mov
lock
cli
int3
imul
mov
push
imul
push
cmc
jecxz
xchg
or
mov
lock
and
aas
imul
xor
sahf
or
mov
ds
xchg
inc
xchg
push
mov
or
pop
adc
adc
mov
lock
add
add
jae
jl
jnp
js
test
insb
sub
fwait
out
lcall
stos
sbb
sbb
in
cmp
mov
inc
aam
or
jmp
ds
xor
mov
pusha
loopne
jle
mov
lds
pop
push
sbb
gs
adc
jle,pn
dec
jge
cmp
cmp
jl
lret
flds
ret
cli
ds
test
clc
and
ret
nop
mov
nop
jbe
mov
popf
test
fsubrp
mov
inc
pop
adc
xlat
xor
xor
out
pop
jbe
ss
mov
jecxz
cmpsb
pusha
cld
mov
mov
iret
inc
push
push
je
xchg
icebp
pop
out
adc
pop
lret
lahf
sbb
outsl
fnsave
mul
jb
jo
fsubr
inc
adc
je
push
cmp
test
push
jp
stc
into
or
test
add
jle,pt
add
pop
mov
inc
cld
movsb
mov
jno
dec
adc
mov
dec
rsqrtps
rolb
push
mov
mov
xchg
push
mov
pop
mov
push
lret
mov
push
mov
cli
add
pop
repnz
test
out
cs
jle
sbb
or
frstor
jl
neg
orb
fsubl
mov
ss
cmp
jge
hlt
popa
lret
repnz
cwtl
push
insb
add
xchg
adc
incb
jns
test
inc
loope
push
in
inc
dec
icebp
jmp
sbb
push
inc
ss
loop
ds
pushf
jge
repnz
adc
adcb
push
lret
sarb
xor
subl
add
xor
popw
sti
add
xchg
stos
cmpsl
fisubl
sbb
aas
cmp
xor
ret
pop
lds
mov
inc
movb
mov
movsb
adc
inc
sbb
fildll
out
mov
inc
jl
xor
cmpb
loopne
cmc
loope
pop
shlb
add
mov
pop
fwait
sar
lock
inc
add
pop
add
and
add
dec
mov
stos
push
jbe
jmp
pop
mov
ds
addr16
add
shlb
xor
mov
rolb
dec
sbb
lock
push
xchg
sub
mov
ret
cmp
shll
inc
adc
push
jge
sbb
out
mov
fisttps
xchg
mov
leave
ret
aad
pop
push
cltd
push
pusha
shl
test
adc
lock
enter
push
inc
jl
adc
sub
in
adc
push
das
mov
lock
or
incb
je
and
adc
lods
ja
loope
add
dec
sub
jp
and
inc
mov
addb
add
in
mov
adc
xchg
xchg
and
pop
sbb
insl
aam
rol
idivl
je
mov
or
pop
loop
ror
jbe
rcrl
fwait
fwait
fwait
paddsb
popa
fstpt
cmp
push
stos
in
jno
in
in
and
clc
push
pop
cmp
loopne
adc
mov
bound
jbe
mov
xorl
test
push
scas
out
mov
hlt
in
inc
add
arpl
adc
xorb
dec
mov
out
lods
fists
rcrl
pop
add
push
int3
add
ds
das
lods
xchg
and
and
adc
hlt
imul
dec
mov
mov
or
jp
outsb
outsb
or
push
insl
pop
jecxz
ret
pop
jnp
jl
push
fcompl
movsb
lret
xor
xor
cmpsb
pusha
jnp
daa
cs
add
jl
inc
dec
loopne
cli
push
push
dec
movsb
and
repz
sti
jmp
test
sti
rcrb
subb
jg
xor
ret
decb
cmp
push
out
pop
cvtpi2ps
add
in
pop
push
mov
cmpsl
sub
outsb
sub
mov
mov
jbe
les
xchg
test
inc
jp
push
fimuls
addr16
test
pop
ja
add
filds
es
mov
jmp
mov
loopne
push
mov
xchg
push
xchg
stos
ds
mov
xchg
push
mov
scas
fcoms
outsl
mov
dec
xor
pop
les
dec
sbb
rolb
mov
idivb
ret
adc
jp
push
xor
sub
lods
sub
adc
ror
pop
cld
add
jb
out
in
and
mov
mov
sbb
in
inc
jg
mov
push
adc
adc
pop
push
out
cmp
ljmp
and
push
mov
xor
data16
push
jp
loopne
out
cmpsb
dec
jp
xor
cwtl
les
xor
das
adc
push
test
xlat
add
mov
mov
icebp
jmp
testl
jbe
push
cli
clc
inc
loop
imul
cmpsb
popf
adc
dec
pop
xchg
and
out
xor
jecxz
lds
jl
scas
inc
pop
mov
fimuls
cmp
jle
or
mov
jmp
fists
cmp
and
rorb
or
xchg
xor
add
outsb
ljmp
and
ds
inc
ja
jp
push
mov
adcl
dec
xor
sub
push
shl
pop
movsl
pop
mov
mov
and
mov
fs
icebp
sub
notl
cld
outsb
fcoms
adc
pop
fistps
bound
push
pop
sbb
movsl
out
adc
repnz
call
das
adc
test
les
mov
mov
mov
lret
mov
cmovge
orl
cld
lock
icebp
lock
cmp
inc
sbb
add
test
pop
test
or
mov
sbb
jo
daa
cmc
push
clc
hlt
shrl
in
arpl
lahf
ret
push
fistps
addb
cmc
icebp
call
imul
cmp
jl
add
inc
or
or
pop
fcmovb
xor
adc
add
push
adc
clc
scas
dec
test
add
mov
out
add
pop
dec
scas
pavgw
lds
xor
movsl
mov
cli
add
cld
cli
push
cld
cs
adc
dec
ret
sahf
orb
sbb
les
adc
mov
cmp
or
xor
cs
sbb
lcall
bound
inc
push
add
add
outsl
adc
lcall
cmp
aaa
loop
mov
push
add
push
fidivrl
jl
pop
push
data16
loop
and
aas
jle
imul
outsb
ret
test
jns
mov
inc
xchg
ds
in
dec
cli
loop
and
loope
xchg
mov
popa
mov
xchg
out
subl
es
sbb
cld
or
outsb
cmp
lods
pop
sbb
inc
push
sbb
dec
and
and
add
js
popa
lret
dec
jmp
arpl
ret
stos
stos
mul
imul
xchg
loope
lock
push
xor
loope
les
and
lock
ficomps
xchg
je
jecxz
mov
mov
inc
inc
adc
testl
ja
or
push
mov
out
jl
cmp
mov
xchg
fldt
aad
insl
fdivrs
push
lret
shrb
call
ret
les
add
cmpsl
in
push
xlat
test
and
shr
mov
jge
jl
mov
comiss
pusha
mov
jecxz
stc
pop
pop
adc
dec
xchg
push
xor
outsb
shll
or
cld
push
push
pop
or
bnd
adc
xlat
xor
pusha
movsb
inc
pusha
push
ljmp
clc
mov
out
add
push
arpl
mov
add
fmuls
mov
clc
sbb
sub
push
clc
dec
jl
inc
cmp
add
lcall
adc
or
jg
cld
sub
add
int3
and
xchg
les
mov
int3
jne
divl
sub
fiaddl
loop
cmpsl
pop
sub
cmpsl
cmpsb
sub
jge
outsb
movsb
add
dec
lret
sbb
sbb
lock
push
popa
mov
and
shlb
rorb
out
sub
pop
subl
mov
add
andl
aas
push
adc
aas
dec
cld
fiaddl
mov
clc
hlt
xchg
sti
push
fisubs
fildll
mov
ljmp
dec
jmp
aam
add
sub
movsb
scas
jb
loope
inc
mov
pushf
lcall
mov
hlt
cmp
mov
add
mov
pop
dec
je
insl
mov
add
mov
or
mov
out
jg
fdivs
push
xchg
sahf
pusha
fcmovb
jg
test
jle
mov
cs
pop
and
sahf
sbb
jb,pt
mov
add
pop
ffreep
push
mov
nop
lret
imul
es
movsl
imul
lods
mov
loope
outsl
into
fwait
stos
xor
aas
ds
lret
push
notl
mov
push
mov
lods
and
dec
pop
mov
push
xchg
adc
adc
out
jge
das
push
sub
fcmovnb
popa
clc
xor
sub
shrl
pop
mov
inc
dec
lods
sub
cmpsl
push
sbb
in
aad
testb
and
add
clc
lret
out
xorl
bound
sbb
dec
inc
fcmove
fs
pop
pop
outsb
sub
rorl
pop
dec
lds
push
out
shr
fs
push
fnstcw
push
push
xchg
lods
push
dec
scas
mov
dec
add
and
int3
push
loope
cltd
scas
dec
jge
cmp
and
arpl
xchg
push
sbb
mov
fsubr
mov
repnz
pushf
shrb
cmp
test
sbb
push
ljmp
push
and
add
scas
mov
adc
dec
hlt
xchg
test
es
xor
jg
ds
imul
flds
jl
xchg
orb
xor
loopne
loope
scas
clc
icebp
call
mov
mov
xchg
add
cli
je
cwtl
push
xor
insb
mov
mov
and
inc
xor
xor
gs
inc
mov
mov
bound
ljmp
jl
push
mov
cli
nop
es
dec
mov
ds
fcoml
cmp
inc
mov
fistps
arpl
pop
sarb
roll
movsl
inc
lods
push
loopne
js
mov
jne
lret
xor
out
lock
ret
orb
test
dec
cmp
jo
inc
or
jo
fiadds
sti
cmp
jl
mov
out
test
sbb
sar
pushf
push
inc
fwait
loopne
sub
testl
fidivl
hlt
cmc
push
sar
pop
stc
xor
dec
mov
jae
xor
out
add
sbb
pop
push
xchg
mov
sahf
outsl
movsbl
shl
filds
stos
sbb
stos
mov
mov
insb
xor
and
inc
add
jns
mov
adcb
pop
pop
mov
jae
loope
test
sbb
inc
aas
sarb
cmp
pop
cmpsb
loopne
pop
rsqrtps
mov
pusha
pop
or
xor
jle
je
inc
loop
lock
std
dec
cmp
xchg
adc
out
sar
lods
ja
lcall
adc
pop
mov
jp
mov
sub
push
mov
pop
add
xor
icebp
xchg
ficoms
sbb
clc
xor
xchg
js
sbb
gs
xor
jg
aam
cmpb
cmp
or
stos
sahf
mov
out
mov
insb
outsb
pop
pop
clc
mov
dec
add
dec
aas
push
test
in
xchg
pop
out
dec
cld
js
jl
jp
sub
and
or
inc
fsubp
add
or
faddl
daa
loopne
ljmp
lret
add
fsubrl
inc
rclb
pop
lock
cmp
ds
push
imul
and
inc
jle
dec
add
movsl
xchg
mov
movsb
push
lods
jle
adc
popa
arpl
cmp
fwait
clc
test
lock
loopne
out
mov
adc
scas
jne
cmp
dec
stos
adc
je
incb
cwtl
in
movswl
pop
fldenv
xchg
inc
push
je
jnp
mov
add
incb
dec
clc
pop
rcl
in
cs
mov
xor
cli
xchg
xor
cmp
pusha
imul
roll
in
loop
out
fcmovbe
push
por
mov
dec
push
jge
add
loop
out
jnp
pop
pop
push
inc
jmp
js
jbe
leave
ds
stos
push
xchg
sbb
xor
sarl
sbb
and
sub
stc
lods
lock
cmp
pusha
xchg
into
xor
jbe
mov
sbb
call
clc
push
xchg
jle
add
cli
push
jge
push
ljmp
mov
test
jo
je
dec
insb
insl
mov
mov
jle
add
adc
sbb
neg
aas
xchg
in
mov
jmp
cmp
leave
pop
je
mov
inc
jmp
jecxz
cmpsl
fs
mov
clts
inc
cs
cmpps
adc
sub
xor
add
loop
fs
pushf
inc
jb
push
pop
inc
cmp
and
shr
bound
dec
or
mov
adc
mov
mov
fs
adcl
out
repnz
test
das
push
adc
shlb
idivl
scas
insb
push
movsl
shl
out
or
xchg
xor
out
enter
inc
nop
mov
push
and
jp
lret
mov
nop
cmp
jmp
add
cli
jne
loop
ds
into
loopne
jp
das
cmp
or
push
sahf
jle
cld
push
mov
dec
pop
fisttps
push
mov
shlb
je
push
das
pop
push
pop
pop
xor
je
add
xchg
shr
ret
enter
addr16
hlt
jbe
jl
shlb
cmp
leave
pop
add
cmp
mov
push
sub
inc
jp
outsb
in
mov
push
xchg
loope
sub
scas
mov
dec
iret
mov
push
rolb
inc
xlat
xchg
sbbl
test
xchg
addr16
xchg
fs
and
loop
dec
add
pop
cli
jl
adc
rcll
popf
lret
xor
lret
pop
mov
and
jo
add
sysret
std
or
xchg
dec
and
clc
cmp
dec
es
pop
ja
mov
outsb
pop
stos
mov
sbb
or
lods
ret
mov
ficomps
xchg
jp
mov
fsubrl
repnz
and
pop
mov
add
push
xor
aas
or
pushf
out
push
mov
cli
add
loopne
xchg
movsb
adc
ja
ficomps
dec
lret
adc
rclb
sahf
loop
mov
or
sbb
clc
ja
pop
jle
js
loope
std
xchg
sub
push
idivl
inc
sbb
adc
pop
fsubp
dec
adc
dec
xor
lret
outsb
test
ss
test
inc
xor
icebp
and
push
shl
cld
pop
mov
fdivrl
mov
sar
xor
inc
cli
adc
adc
adc
push
add
sub
test
adc
xchg
cmp
jnp
mov
jecxz
sub
pop
cli
faddl
sub
or
mov
pop
mov
fsts
imul
pushf
call
mov
jnp
mov
push
aad
clc
cmp
add
and
mov
sbb
sbb
lock
rorb
mov
in
sahf
mov
fbstp
lock
lods
or
mov
jnp
rorb
and
subb
inc
inc
test
inc
dec
jo
dec
dec
loope
xchg
cmc
jle
add
mov
mov
and
rcrb
daa
cld
clc
xchg
rorl
scas
mov
sbb
jbe
loopne
cmpsb
cmc
out
ret
pop
test
pop
xor
std
enter
and
loop
leave
cmp
pop
aam
lret
inc
gs
mov
int
filds
das
push
or
fwait
push
xor
aam
inc
loope
lea
scas
pop
test
push
push
mov
cmp
test
shll
fmul
lods
movb
aas
mov
ljmp
or
js
ds
sub
das
movb
push
flds
push
cli
mov
rcrb
loopne
js
imul
pop
mov
dec
leave
sbb
sub
jge
insb
pop
mov
imul
or
fidivl
out
clc
pxor
test
mov
cmp
add
pop
mov
mov
js
test
fsubl
pop
push
adc
decb
mov
lock
inc
jbe
jmp
push
ret
pop
insl
cmp
out
mov
xchg
pop
mov
adc
js
jge
pop
ss
pop
ficomps
fsub
sbb
stos
sub
jo
jne
push
jecxz
cmpl
mov
das
sbb
adc
ror
push
mov
int
loope
add
inc
adc
loop
xchg
inc
push
jp
xor
and
in
add
cmp
sbb
jge
mov
mov
ja
xchg
ljmp
loope
divb
imul
pop
mov
mov
add
movl
push
sub
dec
js
jmp
cli
mov
jb
cmp
icebp
rcl
mov
xchg
inc
std
scas
and
je
dec
fsubrl
aam
cmpsb
and
mov
repnz
cmp
scas
or
les
mov
xchg
and
mov
fcompl
push
cld
clc
outsb
int
loopne
push
dec
jl
inc
sub
jl
fdivr
popa
sbb
mov
dec
fbld
and
adc
xchg
push
lret
sbb
les
inc
pop
sub
fiaddl
outsb
jle
out
xchg
add
push
es
xlat
fwait
cli
jge
xchg
loopne
xchg
loop
rorb
or
imulb
ret
xor
icebp
lods
les
jl
pusha
cmc
call
cmp
jle,pn
cmpsb
pop
fcompl
das
or
mov
test
jbe
mov
mov
or
das
sbb
or
pop
call
scas
cmp
jmp
leave
add
dec
imul
pop
sbb
ljmp
push
das
cmp
mov
ja
cltd
pop
mov
add
sbb
and
std
rolb
sbb
mov
mov
outsl
or
dec
adc
cmpsb
inc
inc
xor
and
cmp
push
add
aam
loope
add
pop
mov
roll
shlb
adc
jns
inc
push
lods
mov
adcl
mov
fwait
jo
and
pop
enter
test
psubsb
pushf
mov
cs
add
adc
pop
mov
pop
jg
mov
sbb
xor
fdivrl
jne
loopne
scas
xlat
es
bound
loopne
lcall
sti
inc
jns
lods
inc
cmp
lret
insb
mov
pop
mov
ds
jo
mov
xor
out
or
shld
cs
mov
dec
aam
pop
je
lock
add
loop
addr16
fistpll
lock
pusha
aam
cs
cli
js
nop
cli
fdivs
pushf
decb
pop
push
or
roll
mov
lahf
xor
test
ficomps
sub
add
out
les
js
rol
subl
repnz
fisttpll
daa
les
add
xchg
cli
lods
ficompl
cs
sub
lcall
push
stos
cmp
cltd
push
cmp
cmp
sbb
scas
adc
stos
cmp
mov
repnz
je
ljmp
add
add
aam
lock
jno
xchg
add
jo
icebp
loopne
lods
cmp
ret
push
pop
dec
cs
jl
sub
call
pop
cmp
loope
repnz
lahf
mov
mov
lock
inc
outsl
sti
shl
inc
mov
out
adc
loop
sub
sub
xor
push
outsb
push
test
js
mov
xlat
pop
movsb
mov
inc
mov
jecxz
push
cli
jbe
scas
or
jle
cmp
mov
pop
xchg
movsl
ret
pop
mov
stos
lcall
push
filds
testb
lock
push
in
stos
ljmp
fisttpll
arpl
arpl
inc
ss
pop
data16
pop
push
cmp
pushf
xchg
stos
lods
popf
fldt
repz
or
dec
mov
xchg
sub
dec
sbb
imul
cmp
xor
sbb
or
and
xchg
out
movsl
inc
shlb
ffreep
scas
add
xorb
or
jl
jecxz
loop
pop
ficoml
mov
test
loop
mov
mov
icebp
idivl
fs
in
dec
sahf
mov
xchg
test
out
in
pop
call
adc
inc
inc
fcomip
jns
jl
sub
push
in
xor
jl
data16
lods
jne
cld
hlt
outsl
mov
cmp
nop
js,pt
cmp
int
push
cmp
jg
cmp
dec
sub
push
jge
decb
push
hlt
test
pushf
rclb
bound
mov
cmp
cmp
jl
mov
aad
sarl
jo
push
into
cmp
lea
lock
test
ljmp
wbinvd
sbb
pop
jae
sub
xor
and
aas
pop
jp
xlat
into
mov
movsb
mov
lret
hlt
mov
jl
fistps
jecxz
cltd
test
rol
mov
jbe
cmp
jmp
rolb
jno
jecxz
int3
adc
pop
cmpb
into
mov
pop
int3
push
movsb
cmp
lret
and
mov
gs
rclb
and
and
add
jmp
clc
mov
mov
cmpsb
push
aam
mov
or
fisubs
inc
inc
pusha
push
ftst
dec
js
clc
aam
ds
mov
js
clc
jge
cld
fisubrl
mov
add
mov
adc
cli
push
rcll
and
or
pop
mov
imul
push
cld
mov
aaa
sub
pop
mov
add
sbb
call
fdivrl
mov
dec
das
cli
sarl
int3
mov
mov
xor
mov
lods
sti
add
dec
or
mov
aaa
aaa
aaa
aaa
inc
gs
repnz
jle
xor
ja
cmp
xchg
adc
xor
jp
add
outsl
insl
loop
andb
cld
and
in
pxor
pop
shlb
ret
scas
push
mov
test
mov
nop
jge
pop
aam
es
inc
and
dec
cmc
lds
js
cmp
and
dec
je
cmp
jmp
stos
add
pop
add
bound
jge
adc
mov
lods
js
outsl
pushf
lahf
add
push
mov
jne
jmp
enter
aad
push
mov
rcll
pop
add
fucomip
ret
cmp
lock
lcall
dec
pop
jg
pop
pop
jne
rorb
in
xor
jl
call
mov
outsl
push
orl
and
mov
adc
dec
or
loop
mov
pop
pop
lahf
pop
loop
xchg
dec
jle
cmp
aaa
outsb
adc
inc
insb
xchg
push
sub
sub
jns
insl
testb
cmp
stos
scas
enter
bound
adc
push
lock
lock
enter
jbe
shll
clc
into
xchg
jb
imul
sbb
push
jge
cwtl
jp
movsb
xor
int3
push
clc
cmp
mov
mov
or
sub
stc
push
xchg
bound
push
loopne
out
dec
sub
xor
push
jle
jmp
pushf
add
rolb
adc
jb
or
and
cmpsl
xchg
jle
push
bound
data16
addr16
js
ljmp
ret
push
sbbb
push
in
push
leave
add
mov
mov
imull
cs
and
mov
cmp
pushf
or
idivl
xlat
mov
ret
pop
jo
or
push
sarb
popf
es
lret
je
cmp
das
rorl
xor
lds
mov
mov
rcrl
lea
fs
pop
push
loopne
cmp
and
movl
mov
mov
dec
fcoml
jno
adc
lock
cmpsl
hlt
push
stos
les
movsb
cld
lcall
scas
xor
inc
mov
ljmp
loopne
clc
xor
int
imull
push
pop
fiaddl
js
or
pop
mov
shrl
sbb
xlat
ret
pop
js
push
scas
xchg
data16
inc
call
popf
push
jno
jl
andl
imul
clc
loopne
cmp
les
loop
aad
ret
fbstp
cmpsb
cld
dec
outsl
add
divl
lods
clc
hlt
das
and
addr16
sahf
in
das
idiv
hlt
adc
out
mov
out
pop
sub
push
cli
mov
js
pop
inc
xchg
inc
inc
pop
jge
jp
roll
sarb
jp
cmc
xchg
jnp
xor
inc
dec
pop
sbb
inc
inc
aas
or
into
push
cmp
scas
in
movsb
out
pop
movb
mov
stc
jp
mov
sbb
jmp
dec
and
mov
scas
push
loopne
mov
fldenv
jo
pop
sub
loop
lcall
mov
pop
and
xor
ror
pop
jno
push
cmc
dec
fdivrp
sbb
lods
scas
push
mov
aas
or
pusha
mov
mov
sbb
fdivrs
pop
data16
fistpll
xchg
roll
aam
cwtl
add
mov
icebp
sub
aad
jle
js
adc
push
mov
dec
adc
mov
rcl
ds
inc
in
mov
xchg
in
lods
scas
dec
ljmp
js
jo
movsb
and
mov
xchg
sub
adc
sub
loope
cs
lret
pop
inc
clc
add
add
mov
pushf
lea
fists
xchg
inc
mov
hlt
test
cmpsb
or
push
shrl
add
fdivrl
and
bnd
hlt
addb
add
jp
mov
jbe
inc
adc
inc
add
xchg
mov
xor
sbb
inc
sarb
dec
fists
jle
lcall
mov
dec
jl
scas
sbb
roll
js
das
lret
xchg
test
dec
std
out
lret
xor
xor
clc
cs
adc
scas
push
pop
mov
xor
das
mov
lret
lock
mov
sar
sarb
nop
out
cmp
mov
push
cmp
push
insb
xor
ds
int3
out
or
test
scas
sbb
sarb
lock
sub
mov
sub
jle
orb
fsubs
jbe
push
cmp
cmp
add
sbb
cmpsb
sub
aad
insl
adc
outsb
inc
icebp
rorl
dec
xor
and
sub
movsb
xchg
mov
sbb
out
jg
rcr
cli
inc
aad
and
out
mov
push
mov
hlt
aas
mov
add
dec
test
dec
addl
faddl
shlb
mov
and
cmc
pusha
or
inc
das
jle
je
faddl
mov
addl
outsl
loope
hlt
fadds
sub
lds
push
rolb
popa
xor
clc
je
ljmp
pop
std
jp
jle
iret
dec
sbb
dec
jo
test
out
jl
push
xchg
xor
les
out
aas
dec
data16
lcall
lret
dec
add
mov
adc
ja
add
movsb
mov
push
sbb
rol
ficoml
xor
pop
mov
inc
daa
outsl
xchg
inc
out
inc
fiadds
pop
inc
cli
jle
mov
les
sub
push
filds
pusha
pop
sahf
mov
cmpsl
sti
repnz
adc
shll
push
repnz
inc
addl
sbb
adc
iret
and
into
pop
rolb
fwait
jp
add
dec
pop
loopne
push
mov
mov
pop
inc
adc
int
insl
cmp
jecxz
mov
mov
pop
pop
jo
rorb
in
ja
insb
xchg
ss
xchg
pop
push
sub
push
cmp
or
jecxz
daa
mov
xor
nop
mov
push
mov
jp
adc
call
cli
mov
pop
sahf
loopne
jecxz
pop
lods
sub
mov
and
pop
fcoml
fcmovu
jg
jp
push
dec
ret
mov
dec
dec
and
mov
out
mov
jnp
sahf
xor
mov
ret
push
mov
cli
mov
jp
gs
pop
xchg
mov
cld
xchg
pop
fcoms
and
imul
mov
clc
int
test
fdivrs
push
xor
loop,pn
inc
jmp
dec
dec
cmpb
or
insb
or
outsb
and
jb
sbb
ds
in
in
hlt
or
mov
sub
jp
add
andb
out
js
xor
les
fcom
adc
mov
bound
mul
adc
or
mov
fdivrl
fisubl
lcall
jl
and
movsb
jp
ret
jge
and
pusha
testl
loope
add
js
xor
testl
mov
xchg
adc
jp
pop
push
dec
mov
xchg
fbld
cli
loopne
pop
dec
cli
xor
into
pop
outsl
scas
scas
insl
mov
lahf
rcl
xor
icebp
xorl
fs
cmpsb
sub
out
scas
seta
in
divb
dec
push
xor
dec
loope
mov
subl
sub
pop
mov
loopne
pop
cld
js
es
in
ljmp
add
mov
sahf
and
std
jg
mov
arpl
scas
ret
into
hlt
jno
sbb
shrb
pop
mov
and
pop
sub
dec
inc
push
pop
aas
jl
xchg
mov
clc
sub
mov
cmp
dec
and
push
jmp
mov
ss
pushf
sub
xor
loopne
xor
push
mov
arpl
movsl
jp
inc
int
sbb
cmp
cli
cmp
daa
jge
lret
adc
roll
pop
sbb
jg
pop
cld
lcall
pop
mov
mov
das
loopne
push
js
lock
out
mov
inc
sbb
jmp
insb
fistps
sub
push
or
pusha
or
lea
out
dec
adc
pop
out
insl
push
movswl
call
shlb
cmc
loop
stos
loopne
fcomip
ret
xor
shll
lods
shrl
les
lret
outsb
mov
out
mov
lret
movb
aam
movsb
jp
rcrl
lcall
mov
sbb
adc
ljmp
lcall
jl
out
push
mov
loop
add
fsubs
ljmp
js
add
fidivrl
in
cmpsb
lret
adc
shlb
sbb
icebp
ljmp
ja
mov
cs
loope
xchg
test
cmp
aad
dec
cwtl
xor
in
test
leave
cli
inc
ljmp
add
ret
jo
xchg
push
cmc
lret
push
xchg
inc
out
mov
in
idivb
jge
nopl
or
adc
cmp
add
or
je
enter
push
mov
out
sub
adc
js
cmp
test
fcompl
in
xchg
pop
mov
fs
cmp
adc
subb
pusha
adc
loopne
or
mov
pop
jg
std
int3
ficomps
or
sarb
and
or
stc
fwait
sub
sub
js
and
pusha
adc
sbb
pop
xor
cmp
sub
inc
pop
sub
fstpt
pop
add
loop
and
mov
xchg
cmc
fidivl
loop
clc
mov
gs
cmp
cmc
mov
inc
jg
mov
sbb
jo
and
mov
adc
jb
clc
cmp
clc
add
ds
dec
insb
sbb
loopne
and
cmc
loope
mov
and
cld
icebp
in
pusha
cli
aam
xor
out
ds
cmc
dec
mov
pop
inc
les
loop
notl
dec
dec
adc
and
fimuls
rcl
sti
xor
shrl
jl
lock
out
cmovb
adc
nop
repnz
lret
jno
mov
ja
jnp
cmp
add
inc
sub
xchg
clc
add
inc
mulb
adc
inc
imul
mov
sub
mov
outsb
mov
jg
clc
mov
divb
lcall
xor
ret
dec
jp
shl
mov
clc
movsb
cwtl
test
mov
sub
jae
cmp
push
xchg
jp
test
movsb
mov
fildll
test
jg
cli
mov
lds
sub
mov
ret
and
sbb
mov
jo
dec
xadd
mov
adc
icebp
inc
js
and
dec
xchg
xlat
es
es
popf
lret
hlt
mov
dec
ficomps
xlat
mov
push
sub
mov
cmc
ljmp
dec
ss
lods
div
inc
xor
jnp
dec
ljmp
fs
lock
mov
xchg
jp
push
test
mov
jno
mov
clc
movsl
fisubrl
ljmp
pop
adc
in
push
lods
sbb
inc
or
and
sub
add
push
pop
cli
lock
repnz
sbb
in
inc
je
cs
push
repz
mov
pop
mov
adc
ds
adc
xor
hlt
insl
xchg
call
cli
icebp
add
xchg
fs
vxorps
insb
jecxz
cmp
or
sti
or
aad
les
fstps
jp
in
pop
test
sbbl
cmp
pop
shll
mov
push
jecxz
xor
pusha
out
lods
nopl
data16
xchg
add
lods
fisttpll
mov
dec
ret
ss
std
cli
mov
fstpl
pop
jl
pushf
loope
outsb
or
dec
jecxz
sbb
mov
dec
push
mov
jae
fsubl
cmpsb
scas
idiv
sbb
rclb
cmpsl
xchg
pop
lock
icebp
loopne
inc
std
xor
sahf
cli
jp
arpl
ds
ret
sahf
xor
sbb
or
xorb
push
adc
lcall
cmpsl
scas
dec
add
test
lret
jne
or
xor
cli
cmp
idiv
lock
xchg
mov
pop
rep
push
push
sbb
lock
push
adc
or
outsb
call
sbb
ljmp
lock
add
cmpsl
mov
mov
dec
push
sarl
pop
cs
hlt
mov
in
and
mov
jp
sbb
hlt
dec
fcoms
jg
outsl
inc
sbb
xchg
dec
cmpsl
nop
pop
xchg
rcl
sti
mov
lods
xor
push
addb
or
sub
dec
lock
mov
test
dec
lahf
icebp
movsb
popa
jo
inc
mov
sub
loope
shrl
shl
xchg
loop
jp
jp
jle
je
pop
cld
icebp
sbb
pop
sbb
mov
sub
mov
pop
cmp
js
vcvtpd2psx
mov
inc
hlt
sub
shl
sub
loopne
cmpsl
push
in
jnp
jo
orb
rcll
test
mov
pop
mov
loop
jo
rorl
sub
push
les
sbb
pop
add
jle
and
mov
push
add
test
push
ficoml
notb
push
dec
lahf
popa
mov
shrb
mov
mov
jge
jnp
push
in
fs
cli
ljmp
lcall
pop
cld
fimull
push
ror
adcb
test
push
in
add
roll
movsb
jp
push
das
push
loopne
fsubrl
out
push
test
lods
inc
add
or
sub
mov
mov
adc
or
lods
loop
dec
js
std
xorb
loop
mov
imul
mov
or
ds
jp
out
sub
mov
jno
pushf
in
sbb
js
xchg
pushf
nop
add
push
xlat
lea
in
movsb
pop
or
cmp
cli
loope
test
xor
push
pop
jp
pop
dec
jp
mov
pop
pop
pop
cld
push
call
rclb
jl
xchg
and
les
aam
fdivs
sbb
mov
and
xchg
push
ss
pop
mov
jecxz
stos
dec
jle
sub
lret
pop
hlt
cmpb
pop
stos
mov
ds
jno
insl
pop
icebp
jmp
xchg
sub
shr
inc
nop
outsb
mov
xor
rcrb
pop
mov
rolb
mov
sbb
es
push
out
and
add
mov
rcr
mov
push
test
adc
and
je
adc
mov
adc
xchg
or
xor
sbb
sbb
pop
sub
andb
cld
arpl
jno
sbb
mov
push
mov
jl
sbb
fs
xchg
or
js
adc
add
popl
push
add
and
dec
ljmp
push
loopne
inc
loop
cmpb
pminsw
lock
push
icebp
sbb
mov
mov
adc
js
pop
pavgw
pop
testb
push
aas
lea
cmp
dec
in
or
shll
mov
jle
int
mov
lods
popf
mov
add
cmpsl
jo
xchg
mov
fidivrl
adc
jmp
sarl
pop
sbb
andb
dec
stos
pop
enter
sub
sbb
xor
icebp
dec
ljmp
cmc
or
or
stos
fidivrs
mov
aas
cmpsb
or
scas
push
xchg
push
adc
outsl
shrb
add
inc
mov
sti
xchg
sub
test
mov
mov
xor
nop
dec
sub
std
push
inc
lret
sbb
in
fmull
xchg
repz
lock
mov
sbb
or
lock
int
mov
clc
fstl
sbb
popa
hlt
rol
cmp
popf
push
dec
adc
enter
sbb
addr16
mov
push
push
lock
mov
ret
addb
lods
psrad
add
and
sti
loopne
lock
bound
and
sbb
adc
icebp
mov
xchg
jbe
movsb
or
or
or
add
fcomps
pop
mov
inc
inc
pop
into
push
add
xchg
cli
mov
or
add
test
pop
ds
ja
xchg
push
addb
int3
mov
xlat
nop
scas
mov
sahf
shr
adc
push
shl
push
push
es
push
jb
adc
inc
fists
cs
push
clc
loop
pop
or
aad
lock
stos
sar
je
xchg
cmpsb
jge
aas
cmp
gs
mov
rcll
es
mov
push
adcl
and
inc
dec
out
inc
test
lock
cld
bound
or
scas
xchg
jns
fisttps
jmp
mov
xlat
ret
mov
inc
mov
push
out
insb
sub
and
cmp
lret
movb
lret
mov
add
inc
dec
fcoms
scas
and
int3
inc
pop
ds
add
jle
cmp
in
in
mov
adc
sahf
in
fcoml
addr16
mov
rorb
push
mov
sti
pop
jnp
nop
xchg
mov
pop
cmp
addb
out
pop
jbe
out
xlat
es
add
lods
aas
inc
repnz
rorb
pushf
jle
pop
scas
iret
sbb
and
nop
sub
ret
pop
and
add
dec
insl
std
mov
icebp
xchg
lret
hlt
bound
into
dec
mov
add
clc
add
clc
cmpsb
negb
cmp
in
sub
scas
insl
jge
lods
mov
dec
pop
test
cwtl
pop
push
lcall
ret
add
aad
cmpsl
out
inc
js
jle
cmp
hlt
lods
pop
mov
mov
add
cmp
cmpsb
jle
add
adc
ficoml
addl
aad
add
add
pop
pop
adc
scas
adcb
fcmovbe
adc
push
les
rcl
pop
test
sbb
pusha
fldl
dec
push
add
inc
and
loop
fstl
pusha
sbb
jmp
outsw
mov
add
jle
xchg
push
pop
or
and
dec
loop
sub
rclb
iret
rcrb
jge
out
sub
lahf
mov
imul
cld
lea
daa
sbb
push
xor
pop
sbb
lock
inc
loop
cs
dec
fs
fadd
dec
push
xor
inc
mov
js
inc
pop
adc
mov
adcl
nop
push
test
lock
lods
ficoml
xchg
cmc
pop
jge
jns
mov
push
addr16
cmp
call
pop
mov
add
xor
mov
dec
or
test
in
shlb
jg
jp
pop
loopne
enter
stos
pushf
jns
test
jmp
test
divl
ss
aaa
mov
sub
loope
lods
adc
xchg
sbb
in
fucom
daa
mov
sbb
loopne
cmpsl
outsl
xchg
outsb
call
xchg
ds
sbb
rolb
into
cmp
lock
ds
hlt
rcl
xor
cwtl
pop
push
mov
jp
and
cmp
cld
scas
das
mov
inc
shl
pop
fidivs
out
dec
ret
and
sarb
scas
mov
pop
pop
les
mov
mov
mov
dec
add
movsl
cmc
addr16
push
testb
or
sbb
jo
mov
mov
movsb
mov
mov
test
xor
mov
push
scas
data16
ret
pop
insb
xchg
add
sar
jp
inc
and
mov
push
fadds
shlb
pop
aam
dec
and
cmpsb
cmpsl
mov
sbbl
nop
lods
clc
lock
push
cmpb
inc
inc
fldenv
cmp
mov
popl
xchg
pop
hlt
aaa
shl
add
push
cmp
sarl
mov
mov
outsl
inc
sbbb
sbb
fisubl
inc
xchg
mov
pop
pop
loop
dec
jecxz
xchg
add
mov
nop
call
push
xchg
push
aas
or
jnp
adc
fadds
pop
cs
or
mov
cmp
ja
stos
and
js
andb
movsb
push
and
jecxz
pop
xchg
cmp
fwait
ds
pop
cld
js
push
adc
fmull
jmp
data16
rclb
sub
rol
dec
out
in
je
jnp
sti
sub
mov
into
in
cmp
ljmp
hlt
jle
pop
mov
repz
call
fidivrl
cli
std
js
mov
insb
gs
lea
sbb
and
adc
or
je
sbb
clc
shlb
mull
iret
aam
pop
sbb
fisttps
scas
push
cli
ss
push
inc
loop
ljmp
lods
dec
cwtl
xchg
mov
loop
fbld
adcb
mov
mov
mov
in
xor
sarl
jg
inc
dec
adc
cmp
xchg
adc
mov
outsb
push
or
in
push
ds
push
pop
add
mov
xchg
idivb
clc
cli
loopne
cmc
aam
adc
ds
push
adc
test
stc
cmp
mov
ds
and
and
adc
bound
mov
test
xchg
mov
subl
fsubrs
roll
mov
mov
mul
movl
in
mov
add
sub
clc
fdivs
or
sahf
test
data16
pop
filds
ficoms
mov
das
test
jo
stos
sbb
repnz
je
fdivrl
es
xor
xor
push
cmp
add
test
jl
and
mov
sub
and
test
cmp
shrl
dec
mov
jbe
sarl
mov
pop
jecxz
pop
test
pop
fwait
sahf
pop
jecxz
dec
clc
bound
lock
lods
fidivs
cmc
aad
mov
movsb
lahf
cmp
mov
pmaxub
sbb
dec
jp
outsb
outsb
or
stos
mov
dec
scas
add
jle
adc
xor
inc
adc
and
adc
ficoml
pinsrw
jae
xlat
nop
jbe
cmp
cltd
outsl
dec
pop
mov
mov
out
add
ss
dec
xor
in
leave
mov
cmp
in
or
lret
sbb
sub
test
jo
in
stc
scas
rclb
xchg
loope
jmp
ljmp
mov
mov
xchg
subb
sub
hlt
mov
mov
addr16
test
sbb
rorb
movsl
cmp
rorb
push
cmpsb
stos
push
out
addr16
cwtl
std
cmpsb
push
ds
pusha
jg
fstpl
sbb
jns
inc
lods
and
clc
mov
clc
or
xchg
mov
test
ljmp
inc
adc
fsubs
pminsw
dec
xor
loopne
enter
mov
jmp
cmp
sub
sub
xor
lcall
ret
dec
jecxz
jle
fsubp
mov
mov
mov
fs
mov
xchg
mov
dec
imul
cwtl
pop
mov
decb
movsb
cltd
add
adc
xadd
adc
inc
push
and
dec
mov
jo
fwait
pop
orl
aaa
and
push
xor
loop
xchg
inc
scas
pop
das
dec
cld
clc
fidivs
bound
sbb
mov
std
clc
inc
and
hlt
sahf
mov
inc
daa
mov
cwtl
dec
jge
pop
xchg
cmp
add
xchg
pop
testb
push
sub
test
jo
xchg
adc
or
rolw
orl
sub
imul
adc
push
adc
lcall
mov
mov
jl
xchg
movsb
dec
sbb
mov
lret
movsl
addl
icebp
enter
lock
sub
and
or
adcl
outsb
aad
adc
or
jae
inc
mov
jnp
popa
adc
jae
outsb
rcrb
inc
aad
mov
push
icebp
cmp
rcl
cs
ret
sahf
insl
int3
push
xchg
aam
add
scas
clc
dec
divl
in
inc
mov
jbe
jle
xchg
js
into
arpl
push
sub
pusha
stos
xor
insl
dec
mov
rclb
movsl
pop
mov
mov
mov
mov
test
cwtl
push
xchg
sub
movsb
mull
xorb
fidivl
mov
pop
aaa
std
js
cmp
inc
mov
xor
test
dec
or
add
push
sub
sbb
outsb
adcb
clc
hlt
jbe
into
jp
aad
mov
rcl
out
ss
hlt
ljmp
lods
mov
mov
and
sub
es
mov
or
add
loopne
aam
jecxz
imul
std
adc
dec
jp
pop
jge
ret
jbe
imul
push
push
mov
xchg
loopne
outsl
xchg
fnsave
test
movsb
aas
pop
mov
jl
hlt
ret
stc
or
and
shll
lods
sub
adc
push
std
add
add
mul
xlat
aad
out
cli
push
fs
fcmovb
sub
dec
stos
pop
ds
pop
or
inc
gs
inc
std
jo
cmc
dec
mov
mov
pop
or
stos
lret
jp
fbld
dec
pop
and
push
mov
ficoml
mov
dec
xlat
and
mov
jbe
dec
lcall
mov
ret
cli
pusha
jnp
orb
rorb
or
movl
clc
les
cld
mov
out
std
cli
xor
mov
xor
mov
mov
add
jo
in
or
pop
shrl
rcrl
mov
loop
ds
imull
pop
jno
mov
and
add
jge
imul
mov
push
cs
cmp
enter
jno
xor
push
out
pop
jl
js
fsubr
cmp
mov
cmp
push
hlt
cs
in
cwtl
enter
and
inc
iret
es
test
xchg
pop
mov
pop
fisubrs
repnz
jp
adc
inc
lods
ret
jge
and
mov
sub
sub
scas
js
cmp
arpl
or
stc
cs
rolb
push
jo
xchg
mov
adc
add
notl
sbb
adc
int
aaa
xor
jmp
sbb
pop
ss
clc
sti
lock
jecxz
scas
imul
js
sub
clc
fistl
xchg
adc
inc
cmp
sbb
fstps
in
es
aas
xorb
subl
scas
imull
out
dec
push
mov
dec
dec
mov
dec
aam
bound
or
mov
movsl
xchg
and
pop
jmp
dec
rcl
mov
cmp
add
mov
jl
sbb
pop
pop
cwtl
sbb
pop
out
cmpsl
cmp
lahf
adc
mov
clc
push
cli
mov
and
xchg
mov
jo
jecxz
inc
push
xor
pop
lods
ret
arpl
mov
xchg
in
ljmp
lods
mov
aam
loopne
shl
cs
leave
xor
cld
mov
mov
loope
sbb
fdivs
mov
cmp
test
call
jnp
xchg
or
push
fisubs
and
or
xor
imul
mov
inc
loop
ret
or
loopne
mov
dec
js
out
adc
push
clc
and
data16
push
cmp
hlt
push
sarb
rorl
bnd
imulb
adc
rol
cmc
push
scas
inc
rorb
into
jg
clc
xor
std
jp
mov
pop
mov
pop
jle
ret
bound
psrld
clc
and
js
pop
inc
sbb
jp
cmp
sahf
jge
fisubrs
out
jnp
loop
pop
outsb
cmp
adc
out
xchg
bound
mov
push
sub
pushf
out
add
and
jns
sbb
adc
and
loop
gs
rcr
xchg
js
add
xchg
xor
pop
prefetcht2
push
xor
xor
jae
and
icebp
ljmp
ss
mov
and
clc
nop
mov
stos
fisttps
xchg
or
inc
ds
and
cmpl
addr16
pop
add
fiaddl
ficompl
xor
xchg
mov
jbe
aad
rolb
sub
pop
aas
cmpb
pop
cmp
dec
rclb
loop
add
xor
jo
sbb
cli
clc
sbb
dec
int3
cmc
inc
push
fadd
ret
pop
pop
and
pusha
push
movsl
fidivrs
mov
xor
adc
aas
push
movsb
dec
jg
or
mov
hlt
inc
jmp
sbb
mov
loopne
jle
clc
icebp
sub
hlt
sbb
push
ljmp
test
das
fcomps
mov
sbb
dec
pusha
cmpsb
addl
jle
insb
jl
orb
test
cmp
repnz
in
add
inc
mov
rolb
movl
lahf
fsubp
pop
inc
pop
lahf
sahf
cwtl
gs
or
mov
xchg
mov
cmp
popa
push
lods
sti
dec
sub
sahf
xchg
repz
aam
call
or
test
aam
mov
fistpll
jno
loopne
mov
xor
mov
dec
into
push
jnp
sub
pop
mov
sti
call
mov
enter
icebp
sub
stos
jbe
loop
cwtl
push
sbb
mov
test
jecxz
or
fldenv
ljmp
mov
or
ret
shll
shlb
cmp
xor
xchg
dec
call
mov
pop
sti
dec
jmp
pop
aam
xor
movsb
dec
add
lods
shrb
pop
mov
or
mov
mov
lods
je
loope
adc
xchg
jmp
dec
adc
pop
popf
lcall
push
dec
pop
ja
push
rcr
sbb
int3
data16
dec
sub
mov
mov
sbb
inc
repz
scas
cs
stos
adc
jp
call
push
ljmp
xor
add
xchg
pop
push
outsl
data16
mov
lock
pop
sbb
xor
ljmp
arpl
outsl
and
jne
xchg
hlt
jecxz
mov
loopne
and
adc
xor
inc
aaa
sub
mov
sub
cltd
ret
nop
scas
xchg
push
push
xchg
mov
pop
sti
mov
push
and
mov
fsubs
inc
adc
lock
jle
idivb
jg
int3
std
mov
add
or
mov
stos
jp
adc
dec
sahf
and
outsb
add
inc
xchg
add
loopne
pop
imul
gs
sbb
inc
repnz
adc
pop
ljmp
mov
sub
loop
and
sub
jge
push
mov
cmpsb
popa
mov
push
or
sub
sbbb
ret
mov
sub
jb
ret
pop
dec
push
and
xor
je
or
in
dec
adc
in
int
xchg
divps
sbb
cs
enter
mov
jge
cmp
ret
dec
jmp
ljmp
mov
stos
bound
dec
lods
jns
pop
bnd
mov
out
fs
mov
insb
movsl
push
xor
inc
xchg
cld
add
push
cli
test
fists
loop
mulb
sub
js
into
push
out
aad
jp
movsl
call
je
jns
imul
imul
push
loope
cwtl
aam
cmpsl
movsb
inc
popa
sub
negl
es
bound
mov
in
out
popf
mov
inc
push
sarb
enter
lock
add
sub
jbe
rcl
mov
xchg
leave
and
or
jne
adc
out
adc
js
mov
test
ljmp
sub
pop
aas
fdivp
enter
ljmp
xchg
out
rcl
je
mov
xchg
enter
adc
xor
mov
jmp
mov
xchg
and
icebp
add
cli
push
or
fdivp
js
xor
aam
dec
ret
into
xchg
ficomps
fwait
or
fmuls
mov
sbb
data16
push
jge
aam
jmp
aad
cmp
push
lods
push
xor
addb
faddl
mov
insb
dec
or
mov
xchg
lock
ljmp
add
std
test
inc
push
mov
lea
and
lret
js
scas
push
adc
mov
jo
ret
sbbb
les
sti
dec
loop
lret
push
dec
insl
mov
mov
adc
push
icebp
ds
pushf
clc
pusha
xor
cmpl
lds
fldenv
stos
dec
fcoms
out
shrb
ds
sub
stos
outsl
into
and
jmp
pop
movsl
pop
or
sahf
shlb
xchg
push
bound
loopne
shlb
ret
cli
or
cmpsb
push
jns
xchg
loopne
jp
cli
lock
xchg
mull
dec
loop
loopne
mov
pop
scas
jle
push
push
out
push
cs
test
ficoml
test
xchg
in
push
jnp
jle
adc
pushf
mov
adc
mov
test
mov
push
fdivrl
adc
xor
nop
lock
sub
mov
loop
shlb
pop
dec
push
jecxz
iret
or
push
in
mov
hlt
repz
mul
loop
cmpsb
sbb
jo
jp
imul
loope
add
subl
pushf
mov
mov
mov
xor
cmc
or
clc
jmp
nop
int
xchg
icebp
or
gs
lret
mov
outsb
mov
pushf
pop
cmpsb
fcoms
cmp
insb
out
jnp
mov
mov
lret
adc
fs
push
cmp
ss
pop
js
pop
sbb
push
mov
xor
adc
call
push
pop
cmp
ds
push
pop
lods
add
cmp
fcomip
cmp
and
dec
push
jnp
dec
sbb
dec
mov
out
stos
inc
dec
pop
aaa
loopne
jg
into
or
dec
fadds
sub
adc
hlt
pushw
hlt
lds
dec
sbb
out
jnp
aam
popa
into
test
mov
lahf
in
sarb
inc
fxam
mov
jg
inc
cmp
stos
arpl
or
bound
jnp
mov
shl
jge
das
cli
out
loop
bound
add
out
jge
pop
ficomps
fimull
xor
mov
es
add
dec
into
and
mov
mov
loope
outsb
xchg
scas
push
ljmp
mov
movsl
adcl
push
movsl
scas
bound
pop
jl
jecxz
fisubl
or
mov
dec
lods
xlat
xor
test
sub
xor
shlb
out
lcall
sbb
adc
push
das
cmp
les
movsl
mov
out
popa
ret
pop
or
hlt
das
sbb
testl
shrb
inc
call
push
push
inc
mov
iret
jnp
pusha
pusha
dec
inc
nop
add
ret
jge
dec
mov
sbb
pop
mov
mov
into
xor
xor
adc
jbe
daa
push
out
repnz
ret
mov
mov
dec
xor
ljmp
mov
and
sbb
daa
xor
xchg
in
push
lret
or
out
mov
outsb
lea
test
push
add
dec
cmpsb
and
addr16
push
popa
bound
mov
mov
mov
mov
pop
pusha
add
pop
dec
xchg
rorb
jge
mov
out
pop
inc
push
add
mov
sahf
daa
jmp
xor
add
mov
test
orl
punpckhbw
subb
ret
push
jecxz
out
lret
mov
into
mov
mov
daa
mov
adc
jmp
inc
mov
lods
out
mov
pop
xchg
jbe
subb
icebp
push
dec
sub
mov
pop
es
xor
inc
pop
xchg
hlt
mov
cmpsb
test
inc
lock
jnp
pushf
cmp
insl
mov
into
stos
stos
es
pop
pop
test
mov
xor
pop
add
mov
pop
mov
ret
xchg
sbb
aad
add
push
sti
in
lea
mov
rclb
xchg
ror
divl
subl
das
dec
loope
pop
cld
ret
insb
pop
add
pop
repnz
xchg
in
filds
inc
loope
xchg
js
add
into
jl
lods
xor
mov
jp
xchg
xchg
pop
das
jl,pt
aaa
icebp
in
mov
cli
mov
mov
mov
push
dec
cmp
ret
mov
push
jbe
ja
dec
cmc
bound
jbe
loop
or
out
mov
sbb
lods
mov
cli
hlt
pusha
pop
rorb
ds
mov
jle
ds
mov
ds
scas
addr16
adc
xchg
aam
jle
scas
add
or
mov
sbb
aas
inc
jge
fsubrs
dec
jg
xchg
icebp
cmc
jecxz
push
add
jo
pop
and
xor
mov
aad
add
ja
dec
mov
push
fimuls
pop
sub
and
or
xchg
addb
fmuls
jo
mov
and
add
jae
xlat
ret
cli
pop
push
adcb
clc
divb
xor
adcb
xlat
and
mov
or
movsb
icebp
push
xchg
pop
mov
pusha
fsubl
js
outsb
add
js
jge
pop
mov
mov
ret
sbb
adc
enter
mov
dec
push
or
icebp
rorb
out
data16
inc
pusha
jle
jg
and
or
add
imul
mov
mov
mov
pushf
mov
push
and
xor
das
adc
mov
scas
test
es
xchg
lock
jae
cmp
inc
cmp
and
lock
push
dec
mov
xor
pusha
cmp
mov
xor
shlb
mov
std
add
mov
lock
xchg
ds
push
aas
cli
jmp
lds
in
jl
in
aas
clc
clc
dec
call
xor
test
loope
negb
repz
jle
mov
rcr
sub
stc
dec
out
int3
rorl
call
adc
icebp
test
faddl
test
test
add
sti
lods
inc
cmp
dec
mov
xor
dec
cmp
lcall
in
insl
pop
or
mov
or
jmp
xor
inc
inc
dec
add
jle
sarb
xor
mov
or
lcall
imul
mov
loope
lock
cltd
out
insl
inc
idivl
cmp
xchg
fcom
fiaddl
rclb
or
or
jno
mov
push
enter
cmp
cs
or
mov
aad
js
pop
add
insb
jl
mov
xchg
add
dec
or
xchg
shrb
inc
iret
and
sbb
xor
out
test
jmp
nop
dec
enter
mov
outsl
xchg
or
aam
xor
js
aaa
mov
in
ljmp
jl
sbb
fs
push
push
dec
inc
add
jbe
push
bound
mov
into
enter
jno
ljmp
es
call
pop
sub
js
mov
loop
enter
mov
add
or
push
outsl
incb
ds
add
cmc
jmp
xor
pop
jbe
jle
ljmp
adc
inc
das
adc
xchg
shrl
cmp
mov
pop
fptan
call
xorb
mov
xor
loopne
jg
push
mov
mov
int
cmp
sub
and
sbb
sub
sbb
aam
ret
cmp
push
loop
mov
mov
jp,pn
sbb
mov
mov
pop
inc
mov
xor
hlt
dec
mov
pop
xchg
scas
enter
cwtl
js
call
xchg
jp
xor
cmpsb
jmp
insl
or
jl
adc
aas
fdivrl
mov
stc
arpl
pop
or
sub
push
fildll
insb
hlt
or
add
jecxz
popa
jmp
nop
jno
clc
push
xlat
and
clc
inc
jno
out
rolb
xchg
mov
test
decl
cs
stc
or
or
mov
data16
ss
cmp
jl
in
or
pusha
mov
cmp
nop
mov
fisubl
test
out
sbb
shr
sarl
mul
sti
jmp
mov
jns
and
loopne
test
and
leave
std
test
add
pop
lock
outsb
loopne
push
in
inc
jp
adc
inc
xchg
mov
pop
in
or
push
push
call
dec
insb
jne
mov
pop
or
int
test
ret
sahf
inc
lods
add
or
fistl
je
or
sbb
xchg
and
call
je
mov
mov
adc
jle
cmp
pop
push
mov
or
ss
and
fdivrs
adc
cmpsl
cld
lock
fs
xor
fildl
push
cmp
lea
pusha
cmp
lods
ja
shll
cli
push
loopne
sahf
inc
adc
ja
mov
push
dec
cmp
dec
shlb
std
mov
lea
push
and
les
fidivrl
lcall
push
push
mov
xchg
mov
jo
rclb
scas
jle
jp
or
mul
pop
int
cltd
rorb
lcall
or
int3
scas
addr16
mov
in
loopne
pop
outsb
jecxz
loopne
dec
inc
js
lock
mov
pop
inc
or
fdecstp
or
pushw
mov
add
dec
push
seto
js
lock
lret
loope
js
aam
adc
stos
je
int
cmp
ljmp
push
cmpsb
push
add
shll
add
jle
clc
hlt
mov
data16
cmp
divl
arpl
mov
mov
jo
sub
loopne
mov
adc
cli
mov
jecxz
bound
jns
cmp
adc
hlt
nopl
cmc
adc
and
xchg
rol
add
cmpsb
das
xor
lock
enter
xor
mov
pop
outsb
mov
lock
mov
lods
cld
enter
andb
pop
lods
in
inc
rolb
pop
cld
scas
js
adcb
in
lock
xchg
jle
ja
adc
mov
popa
add
cmp
les
loope
rol
ffreep
call
adc
stos
shlb
xor
filds
lea
testb
movsb
sbb
stos
jle
test
in
push
pop
and
js
mov
mov
mov
adc
insl
rorb
gs
pop
and
push
pop
and
movsb
xchg
xchg
js
inc
pop
fwait
sub
or
rcl
fdivrl
jl
and
les
jae
mov
ret
jmp
inc
pusha
pop
gs
add
dec
imul
push
icebp
es
lods
xchg
push
sub
into
aad
pop
or
pop
mov
xchg
repz
xchg
rorb
cld
clc
jp
loope
dec
push
pop
movsb
ret
movb
fcomip
mov
outsb
or
adc
xchg
rcll
ficomps
sub
das
add
ret
stos
or
push
mov
inc
sbb
insb
hlt
lret
jo
sahf
pop
call
mov
mov
call
out
iret
add
lret
out
adc
xchg
xchg
cs
lock
scas
mov
arpl
xchg
cmpl
sub
ret
shrl
les
or
filds
mov
inc
mov
mov
rorl
jbe
fdivrs
and
jecxz
out
jle
pop
sbb
fsubrl
jb
movsl
add
inc
push
test
jnp
aas
add
loope
cwtl
divb
mov
cld
clc
mov
sub
push
icebp
mov
rcrb
pop
adc
out
mov
aam
add
or
cmpsl
sbb
icebp
mov
and
sbb
jb
mov
jg
sbb
dec
cwtl
rcrl
jle
mov
cmp
fiaddl
push
pop
jp
ljmp
jp
push
imul
pop
je
lea
mov
stos
add
ds
pop
and
sbb
test
lcall
sub
dec
lcall
sbb
mov
loopne
stos
lret
mov
andb
test
or
jecxz
js
jp
into
es
cmp
adc
ljmp
js
mov
cmp
pop
jle
movsb
pop
daa
push
in
stos
adc
mov
sub
and
adcl
dec
mov
stos
fildll
call
sbbb
jl
jo
mov
dec
inc
or
xor
add
and
jl
into
or
push
inc
add
sub
je
shufps
xabort
cld
mov
hlt
sar
fnstenv
dec
lahf
js,pt
adc
add
orl
inc
jo
aas
dec
cmp
call
push
sub
xchg
mov
pop
pusha
add
pop
or
mov
rcll
pop
das
test
testb
arpl
faddp
mov
mov
pop
gs
pop
jge
lds
call
lods
cwtl
pushf
sahf
lahf
jle
or
pop
mov
add
push
mov
and
xchg
push
loop
ljmp
fdivr
lock
dec
loopne
push
es
popa
inc
js
fisubs
or
mov
sub
ret
cli
add
js
push
inc
les
loope
sbb
lock
cwtl
inc
xchg
dec
test
add
push
dec
pop
sar
js
sbb
shll
fimull
test
push
stos
ljmp
mov
cmp
les
adc
add
fists
stos
mov
test
sbb
stos
jo
fidivs
jmp
fidivrl
ds
roll
sbb
push
push
xchg
clc
xor
hlt
sbb
jno
xor
ds
sub
mov
and
inc
and
addb
int3
test
cmpsb
fiadds
loop
arpl
dec
rcrb
add
aam
adc
adc
push
or
into
mov
test
push
jmp
pushf
jne
cmpb
push
dec
xlat
cmc
xchg
andb
psubsw
push
inc
in
adc
loop
add
nop
div
xchg
loope
pop
cli
inc
jae
int3
fs
insb
pop
or
notl
movsl
mov
pushl
mov
loop
sub
cmp
adc
rol
mov
mov
shrl
call
fistpl
leave
xchg
dec
fildl
mov
pop
dec
das
ds
ret
cli
testb
test
nop
cmp
cs
mov
aas
push
mov
cmp
fdivp
loope
inc
push
aas
push
jecxz
call
cld
loopne
cmp
movsb
js
call
outsl
popa
fsubl
push
push
or
fiadds
sbb
mov
adc
stos
call
cwtl
in
lret
adc
adc
adc
fcmovne
mov
jo
cmp
in
inc
int
push
fs
shrl
jl
lods
enter
sarb
es
stos
mov
cs
adc
andb
adc
inc
loope
xchg
push
stos
mov
fbld
lods
cs
mov
aas
add
inc
push
sbb
repnz
lods
mov
cmpb
fs
and
out
scas
jae
in
ret
movsl
cli
cli
jle
and
es
pop
dec
and
faddl
ds
cmp
add
sbb
fwait
jecxz
add
movsb
bound
into
out
cmpsl
daa
icebp
insb
loop
jl
faddl
lret
movb
jle
add
ds
mov
ret
or
dec
popa
pop
out
rcr
jp
xchg
ds
jle
int
adc
sarb
mov
sub
mov
movsl
pop
cmp
aas
mov
adc
cwtl
aaa
mov
mov
mov
test
push
stos
pop
sahf
mov
mov
out
or
lret
push
dec
jge
jne
sbb
insl
out
or
cmp
inc
fsubs
js
aas
push
cmpsb
push
inc
mov
arpl
cmp
imul
xor
insl
cs
pop
test
or
pop
pop
pop
test
fsubl
mov
mov
scas
movd
mov
aam
mov
xor
lds
js
daa
fmull
pop
dec
fadd
xor
loopne,pt
sbb
pop
mov
scas
rorb
mov
popf
out
and
jecxz
mov
inc
cmp
rorb
xchg
xor
fwait
jb
jp
outsb
test
mov
add
test
cmc
inc
push
xorb
bound
jmp
aam
scas
dec
es
ds
push
jno
push
ds
mov
mov
sbb
clc
pushf
mov
cmp
or
lea
mov
loope
mov
jno
std
and
roll
xchg
lea
xchg
fisubs
mov
mov
jbe
sarl
rol
in
jp
jns
cmp
push
rol
mov
xor
or
inc
pop
pop
pop
lret
inc
mov
loop
jnp
inc
or
pop
stos
cwtl
lods
js
jecxz
mov
push
rcll
mov
rclb
aas
out
movsb
or
inc
cmp
mov
sti
jge
add
pop
xor
mov
insb
jb
popf
jle
or
cwtl
fs
jb
inc
mov
icebp
roll
adc
xchg
shlb
xor
ds
cld
lods
and
push
sbb
shlb
push
popl
xor
nop
fdivl
fbld
push
inc
sbb
xchg
push
jmp
pop
mov
test
add
push
xor
popl
cmpsl
stos
lret
mov
ss
mul
out
ret
dec
leave
lahf
mov
xchg
xlat
sti
js
imul
fisubl
push
mov
add
mov
filds
lea
nop
cmp
jge
sbb
inc
call
adc
jno
inc
ljmp
mov
sahf
notl
hlt
add
sbb
sub
sbb
mov
movsb
mov
out
or
mov
push
cmp
roll
xor
add
and
enter
jp
mov
aam
fldl
fs
xorb
xor
sbb
pop
inc
loope
pop
nop
orb
sub
movsl
mov
xor
mov
xchg
push
add
rorb
adc
adc
or
fcomps
sub
icebp
or
sbb
sub
pop
aas
or
and
ds
lds
movsl
lods
jp
movsl
cmpsl
lret
aas
std
push
push
pop
inc
aas
inc
fsubr
aad
xor
roll
cmp
and
mov
loope
jbe
mov
shll
mov
add
js
and
inc
dec
addr16
inc
sub
ret
mov
inc
cli
push
ljmp
sub
xchg
xchg
cmp
mov
insb
ret
sbb
xchg
into
add
mov
js
cmp
orl
mov
les
inc
cmpsb
clc
pusha
ljmp
in
sub
or
mov
es
push
test
cmp
out
jmp
cli
dec
mov
pop
out
mul
call
jle
jbe
testb
mov
rcrb
out
lods
push
movlps
add
insl
pusha
adc
lahf
xchg
enter
out
mov
inc
xchg
jmp
xor
aad
dec
push
ljmp
lea
stos
out
loope
addr16
sbbb
mov
add
mov
and
out
fdivr
adc
in
fs
out
mov
mov
mov
ds
loope
fisubrs
in
pushf
lods
fists
mov
cld
push
out
mov
loopne
cli
sub
clc
faddl
jl
icebp
adc
mov
dec
stos
jmp
adc
jp
sub
add
fiadds
ds
das
or
xchg
inc
clc
pushf
cmp
push
mov
mov
cmc
bound
mov
clc
push
fnstcw
cmp
jp
jbe
and
lret
aam
pop
aaa
push
bound
into
inc
aas
xor
cmp
rcrb
aam
inc
push
enter
vmovddup
sub
mov
inc
filds
rclb
out
xor
lds
mov
testl
jle
loop
shrb
mov
and
clc
add
loop
pop
dec
cmp
mov
add
mov
es
and
subl
mov
rcrb
cmp
mov
ficoml
xchg
inc
dec
and
and
dec
loop
inc
das
fcomip
xlat
dec
adc
xor
in
pop
cmp
idivl
add
sarb
inc
movl
push
push
pop
ds
pop
testb
push
stos
adc
out
dec
aam
insb
mov
pusha
adcl
cmp
xchg
cld
dec
addr16
mov
mov
xor
xor
adc
xchg
mov
test
cmp
out
js
roll
mov
cld
out
sub
push
adc
push
adc
test
push
into
repnz
pop
inc
psadbw
repnz
loop
pop
pushf
xor
loope
mul
xchg
mov
dec
pop
js
hlt
neg
movsb
test
bound
int3
ret
clc
add
lods
sub
rorl
pop
push
lret
ds
test
lock
mov
jmp
icebp
pop
shlb
mov
pop
and
testl
lds
mov
fwait
pop
pop
or
frstor
ret
test
in
pushf
fsts
dec
jno
sarb
dec
scas
dec
das
fs
int3
xchg
ret
or
in
mov
sbb
lock
sahf
clc
mov
loop
mov
push
cld
push
sub
jge
aam
clc
mov
mov
lcall
xchg
imul
inc
push
or
imul
jle
je
xchg
ds
cmp
pop
imul
push
lods
ljmp
mov
xlat
xor
roll
std
je
lea
lock
mov
jmp
cmp
lahf
dec
cmp
lock
mov
push
jno
lcall
mov
add
js
clc
jno
out
pop
push
xor
cltd
dec
mov
jl
inc
adc
das
lret
add
les
jns
mov
aam
inc
cli
aaa
std
add
std
xchg
in
outsl
in
push
sarb
dec
inc
and
dec
sbb
mov
push
cmpsb
push
movsb
push
test
pusha
pop
dec
or
sarb
lret
test
outsb
mov
cmpsb
sbb
pop
repnz
loop,pn
movsb
add
jbe
adc
xor
xor
cld
ds
test
jno
dec
gs
mov
scas
imul
lcall
pop
mov
test
sbb
or
pop
jge
or
cmp
mov
sbb
icebp
jecxz
loopnew
add
jle
lahf
ret
bound
push
mov
aas
adc
shl
cmp
mov
cmp
cmp
pop
mov
cli
add
jo
dec
cmp
push
cld
mov
cmpsl
and
sbb
rorl
imul
fiadds
nop
test
pop
mov
push
mov
fidivrs
dec
clc
dec
sbb
dec
loopne
push
dec
insl
das
ljmp
test
sub
popf
push
inc
mov
push
fsubrl
xor
xchg
cmc
in
adc
dec
pop
leave
jp
adc
jge
push
fldenv
imul
loop
fsub
es
pop
lock
push
jns
mov
clc
fsubs
outsb
lea
clc
mov
adc
add
je
ficompl
sub
dec
loope
lret
sbb
into
in
test
xchg
hlt
xchg
pop
loopne
pop
inc
jmp
pop
mov
aaa
mov
enter
mov
aam
popa
pop
pop
jl
rorb
andl
cmp
jge
in
or
cmp
leave
scas
jg
jp
ret
popf
test
and
sub
mov
mov
mov
sbb
daa
mov
movsl
int
ljmp
xor
cmp
xor
pop
fisubs
push
mov
push
xchg
cwtl
sub
je
fcmovbe
xchg
hlt
cmp
push
pop
pop
jg
mov
dec
cmpsb
or
mov
add
xchg
inc
lahf
pusha
mov
jp
adc
and
test
inc
into
loopne
xchg
or
inc
dec
add
data16
inc
sbb
push
mov
int
mov
xchg
icebp
lock
inc
or
mov
repnz
lret
and
pop
mov
mov
mov
mov
mov
push
subl
out
mov
cmp
mov
sbb
dec
sti
call
mov
xchg
cmp
cmp
pop
pop
rclb
imul
xchg
lret
or
sbb
mov
pop
aas
icebp
push
icebp
sahf
pop
addr16
jns
xchg
lea
push
inc
mov
pop
stos
lock
ss
mov
inc
push
std
dec
xchg
js
cs
nop
ds
mov
jmp
mov
icebp
pop
pop
mov
mov
hlt
mov
mov
pop
xchg
clc
xor
adc
lock
adc
insb
out
das
add
rorb
mov
sbb
pushf
std
xorb
add
jge
inc
lret
dec
frstor
cli
lock
mov
xchg
mov
pop
cvtps2pi
mov
roll
cmpsl
jno
rorl
sbb
shl
mov
push
fs
fdivs
dec
dec
pop
lock
pop
pop
pusha
add
dec
dec
inc
lcall
cltd
mov
mov
fsubl
cmp
pop
adc
add
or
or
and
mov
mov
xor
jo
clc
add
sbb
mov
and
mov
or
add
nop
aad
cld
mov
test
sbb
inc
icebp
jnp
jmp
or
add
cmp
loope
xchg
iret
insl
push
cmpsb
xorl
cmc
xor
ja
push
pop
pop
mov
in
outsb
push
and
and
sarb
mov
movb
adc
loopne
push
xchg
push
js
stos
jl
jp
or
or
push
or
push
subb
call
xor
test
jle
int3
push
adc
lret
rolb
mov
jmp
dec
je
jmp
les
adcb
mov
jne
ss
xor
hlt
sub
aam
sldt
and
cli
rclb
push
push
jl
shlb
dec
pop
adc
adc
xor
dec
icebp
jecxz
pop
cmp
push
mov
ret
sub
sub
lock
add
cmpsb
adc
int3
das
insb
jg
inc
mov
add
mov
pusha
mov
sbb
sarl
scas
jle
movsb
lret
sbb
adc
push
mov
cwtl
divl
jbe
inc
sub
cmpsl
pop
subb
sbb
cltd
ljmp
clc
loop
lds
adc
xor
dec
lock
push
je
xor
xchg
jl
xchg
xor
es
mov
es
and
aam
cmpsl
cmp
lods
int3
add
xlat
and
xchg
xchg
movb
fsubl
rorl
sarb
in
xor
out
test
sub
ja
and
fs
fs
scas
ret
dec
mov
xor
jl
enter
xchg
jle
and
loope
hlt
and
dec
pusha
hlt
pop
pop
adc
hlt
movsb
arpl
js
mov
les
mov
push
lock
fcomip
call
inc
bound
pop
out
xchg
inc
lock
cmovbe
pop
orl
js
jae
andb
dec
imul
nop
inc
jle
lahf
scas
sahf
out
lods
mov
mov
aad
push
loope
mov
insb
jb
lock
insb
ret
jo
mov
xor
clc
jle
xor
sti
mov
xor
addl
iret
add
xchg
test
out
sbb
mov
call
mov
lahf
push
hlt
cmp
clc
jnp
pop
mov
push
icebp
rcrb
dec
in
into
lock
mov
adc
xor
pop
popa
inc
ljmp
inc
mov
inc
ljmp
insl
cld
or
xchg
push
jmp
adc
lret
or
clc
jl
push
mov
fldt
xchg
mov
mov
push
lret
int3
push
sbb
mov
or
jmp
pop
add
sbb
imul
call
sbb
stos
test
rcrl
shrb
mov
repz
push
lods
fisubrs
inc
or
lods
jl
popa
loop
sahf
push
jle
fwait
call
insl
push
or
pop
add
jle
arpl
std
loope
call
and
mov
shrl
pop
pop
inc
loope
into
and
ret
movsb
je
cld
pusha
mov
jmp
jmp
add
push
and
imul
les
mov
fidivrs
inc
mov
pop
scas
and
sub
fisubrs
aaa
scas
fwait
mov
scas
sub
xchg
out
lret
fs
sbb
inc
int
es
add
ret
lcall
rol
hlt
push
xor
insb
or
js
loop
xor
jg
push
xchg
popf
xchg
or
lock
xor
hlt
or
push
mov
pop
mov
adc
test
int3
adc
pushf
mov
icebp
pop
ret
cmp
mul
mov
mov
in
shlb
icebp
and
push
imull
pop
cmpsb
pop
sub
ror
mov
and
xchg
lods
xchg
adc
lcall
out
pop
sbb
aaa
adc
mov
jmp
test
xchg
out
inc
mov
or
cmp
pop
add
clc
in
push
lods
roll
jecxz
clc
push
jl
dec
clc
inc
cmp
daa
lret
xor
mov
sti
adc
fisttpl
or
push
jle
xchg
push
das
mov
add
shlb
mov
cmpsb
jno
cld
mov
push
sbb
push
push
jb
push
adc
cmp
out
xor
imul
int
pusha
lock
shlb
jge
ds
cwtl
push
icebp
mov
jle
jp
dec
lcall
cmpsb
mov
and
push
push
inc
sarb
jmp
pop
adc
pusha
lea
jle
dec
xchg
jl
rclb
jl
movsb
test
push
dec
or
inc
inc
mov
push
daa
add
fcmovb
das
test
imul
lods
imul
xchg
xor
push
shl
mov
push
xor
sahf
insb
cmp
sbb
fcmovb
lea
ret
rclb
orb
pop
jle
adc
lcall
adc
pop
mov
es
lret
ja
aam
mov
fbstp
out
test
sti
in
rcrb
cmpsb
bound
sub
mov
lods
add
lods
les
lahf
ds
dec
pop
repnz
push
lahf
sbb
es
inc
push
insl
mov
xchg
and
sub
and
in
ficomps
popf
sti
cld
js
or
scas
inc
sbb
and
jp
push
rcrl
call
mov
pop
push
cmp
hlt
or
aam
xacquire
outsb
and
adc
mov
sbb
rolb
bound
rcrb
push
loope
dec
notb
mov
dec
fildll
and
jbe
shlb
shlb
sbb
pushw
or
pop
ds
loop
fisubs
xchg
mov
push
mov
test
in
sub
jp
or
xor
dec
mov
mov
aam
insb
call
ss
jbe
repnz
push
je
push
stc
aas
or
scas
test
fsubrs
cmc
ret
das
add
out
out
fwait
into
xchg
lock
out
inc
clc
inc
ret
lret
insb
divb
xchg
pop
sbb
lcall
push
gs
add
lcall
adc
js
mov
pop
inc
adc
jl
push
mov
rorl
push
mov
sbb
movsl
pusha
and
add
dec
fsubrl
scas
sub
add
inc
ret
sbb
mov
jecxz
shl
loope
arpl
mov
sbb
mov
xor
lahf
enter
or
and
push
ds
mov
adcl
adc
jo
stc
pop
adc
sahf
scas
or
das
pop
popf
cld
xchg
cmp
cli
std
cmp
cs
pop
sahf
test
fcomip
rclb
push
insb
pop
pop
sbb
das
insb
sbb
aam
ljmp
test
fiadds
cmpsb
mov
mov
mov
xchg
jp
and
xchg
vmovsd
adc
shr
cmp
shr
push
pop
outsb
adc
xchg
sbb
jge
shll
es
in
bound
lock
test
out
shll
pop
rorb
push
je
mov
popa
lock
push
pop
jae
shl
adc
dec
js
or
sub
jle
jns
mov
cmp
or
push
lahf
fwait
fwait
mov
fisubrl
cltd
push
cmpl
xor
out
inc
add
insb
in
xor
movsb
daa
jle
imulb
fcomps
xchg
leave
adc
mov
pop
xchg
loopne
xchg
fldt
jecxz
ret
ror
adc
mov
bound
loopne
sub
jb
mov
into
mov
inc
xor
mulb
clc
pop
adc
inc
orb
push
loopne
jmp
fiaddl
arpl
das
push
sub
aas
sbb
dec
orb
push
je
shlb
inc
pop
push
jno
std
add
inc
cmpb
push
mov
cli
lods
lock
sbb
cmp
ret
lods
insb
jp
icebp
jbe
repz
test
insl
sti
and
add
lea
out
or
nop
out
cltd
jns
inc
inc
cmp
clc
push
ficomps
or
jecxz
push
jne
mov
lret
mov
hlt
cmp
dec
push
inc
mov
test
shl
icebp
jecxz
mov
shl
daa
shlb
cmpb
pop
mov
cmp
cmp
jnp
and
dec
jo
sahf
pushf
stc
xchg
mov
jl
cmp
ret
repz
js
or
mov
push
sub
cwtl
pop
out
test
dec
add
mov
add
jl
daa
lods
xchg
and
shll
cmp
mov
ds
adc
outsl
add
ret
push
dec
dec
ljmp
jg
push
out
inc
jmp
sbb
add
jno
adc
daa
clc
bound
mov
jns
or
push
xchg
mov
adcl
sbb
mov
jp
fidivl
mov
xchg
mov
cli
loopne
icebp
dec
mov
inc
int
add
push
and
mov
shufps
inc
clc
loopne
mov
push
nop
std
xchg
imul
mov
pop
testl
sub
add
sub
dec
sbb
mov
js
pop
das
mov
fsubrl
loopne
sbb
js
sbb
ds
push
out
int3
add
mov
or
mov
pop
ret
jbe
sarb
movsb
out
sti
inc
xchg
pop
mov
add
mov
loope
shll
ret
loop
les
lds
lret
mov
sarl
jmp
push
inc
out
mov
es
mov
cmp
add
les
and
aaa
inc
pop
mov
inc
jnp
and
icebp
in
das
ds
adc
sub
leave
sarb
sbb
rclb
inc
sub
call
and
es
push
scas
push
xor
push
inc
jecxz
inc
xchg
neg
repnz
inc
jns
sbb
arpl
rcll
cmp
xabort
iret
out
rcl
pop
insb
pop
adc
push
js
fisttpll
push
stc
xchg
clc
mov
es
pop
out
addr16
jnp
rcll
mov
js
jp
or
stos
sbb
push
sub
cmpsl
lret
sti
loope
mov
jle
inc
out
mov
add
and
loope
sarb
inc
mov
les
sub
in
xchg
rorl
jp
xor
in
into
sub
movl
clc
sub
loopne
rorb
jle
nop
clc
push
adc
xchg
push
push
jnp
pop
push
mov
jl
adc
cmp
sbb
xchg
les
lods
shlb
cwtl
test
andb
pop
out
clc
push
add
clc
push
cmp
jle
icebp
out
arpl
inc
aas
jl
or
out
inc
rol
mov
out
daa
sub
ret
into
cmp
xor
ret
ljmp
mov
dec
les
loope
cltd
mov
mov
cmc
sbb
pop
pop
jge
or
out
out
data16
aam
adc
lret
xchg
nop
test
lock
movb
cmp
mov
cmp
adc
sahf
mov
pop
and
popa
push
nop
shl
jp
cmpsb
pushf
jbe
cmp
cmp
js
add
imul
and
sub
and
mov
xor
jle
mov
cli
mov
push
aad
shlb
add
cmpsb
pop
mov
out
jp
push
test
std
mov
addb
or
das
xchg
sbb
inc
aas
mov
mov
or
mov
sbb
sbb
fstl
cmp
adc
pushf
test
call
pop
imul
outsl
dec
and
loope
cmc
or
sahf
jne
cmp
push
aad
leave
clc
cmc
cs
cmp
sub
pop
add
clc
rorb
fsubrp
fildl
mov
test
adc
fcomps
cmc
add
loop
rcrb
xor
clc
cmp
je
mov
ja
xor
sbb
inc
add
ds
lahf
ss
aam
inc
je
dec
ret
or
movsb
jnp
jne
fistps
inc
ds
mov
add
cmp
jo
ss
cs
and
aas
lret
rorb
out
loopne
fcomip
mov
and
sti
icebp
push
and
clc
xchg
testb
leave
add
sti
ds
mov
pop
pushf
xchg
mov
int3
lds
mov
ret
pop
scas
add
adc
xlat
out
pop
lcall
jns
popa
xor
ret
ds
cli
ljmp
cmp
clc
mov
push
adc
jle
adc
jle
mov
aad
loopne
mov
cmp
jne
push
scas
fldl
pop
pop
inc
clc
stos
mov
call
mov
out
mov
sbb
mov
ret
rcrl
cmpsb
jns
add
xchg
xor
mov
fs
movsl
push
adc
pop
mov
ret
xor
mov
ficoms
or
push
fidivrl
pop
mov
int3
outsb
pop
fiadds
adc
je
out
mov
inc
xor
cld
and
pop
add
pop
jl
xor
ss
jbe
cmpsb
cmp
mov
adc
mov
out
scas
adc
mov
adc
xchg
jp
dec
add
insl
loopne
psubusb
add
cwtl
cmp
out
add
mov
xchg
sbb
cli
push
fs
ret
xchg
inc
insl
push
dec
pop
aas
cmpb
dec
pop
jp
clc
je
mov
fadd
rcrb
mov
test
enter
call
adc
dec
jecxz
or
cmp
pop
js
cmc
cltd
push
hlt
push
out
push
scas
pop
sbb
cmpsl
loopne
adc
hlt
imul
rclb
mov
mov
and
loop
jmp
lock
out
jle
cmp
jecxz
ljmp
shlb
pop
outsl
xchg
xchg
ficomps
dec
jmp
pusha
push
lea
adc
jns
rcrl
mov
and
pop
insb
js
imul
test
pop
dec
cmpsb
cmc
insb
aas
push
lods
cli
clc
das
dec
fs
mov
or
cmp
pushf
sub
imul
inc
xor
movsb
and
loopne
and
rcrl
popa
cmp
mov
adc
mov
test
es
js
fcmovbe
daa
loopne
stos
pop
xor
push
or
insb
mov
call
out
jl
inc
jp
add
test
push
sbb
mov
and
sar
dec
add
ss
push
loopne
pop
idiv
sub
out
add
sbb
sub
je
jle
mov
fisubl
insb
inc
xor
divb
jle
pushf
rolb
icebp
jge
loop
in
jecxz
insb
cmp
lock
stc
mov
dec
xor
hlt
inc
or
jl
mov
mov
push
mov
push
fdivp
xor
rorl
loopne
icebp
adcb
jnp
sbb
clc
xor
and
sub
and
adc
fmuls
xor
dec
xchg
cld
mov
adc
or
inc
pop
scas
fs
repnz
or
lods
mov
shrb
sbb
pop
pop
das
xor
jl
cmp
push
aaa
das
popa
fs
jo
push
mov
ljmp
jl
test
cld
add
rorb
dec
out
sub
jmp
mov
or
fadd
add
sbbb
adc
out
bnd
das
jge
mov
jb
fsub
pushf
sub
jl
fnstsw
jg
add
push
js
rorb
movsb
ds
out
jp
add
sbb
lahf
into
outsl
mov
mov
lock
xchg
stos
loop
xor
clc
jo
pop
out
cmp
sbb
jl
out
mov
shrb
cmp
jl
lock
sub
dec
stos
pop
lahf
sahf
sub
pop
cld
imul
aam
scas
ss
xor
scas
aad
xor
push
add
push
aam
jbe
sbb
enter
jg
dec
mov
lcall
inc
fdivrl
in
sti
testb
pop
imul
pop
dec
jmp
ja
ss
bound
push
mov
pop
les
and
js
sbb
fdiv
cwtl
aam
dec
and
lahf
add
jge
push
and
inc
loope
dec
cld
test
xor
pop
cmp
std
push
jo
mov
add
sar
pusha
popa
loopne
cmp
adc
rcrb
nop
adc
pusha
jne
add
cmp
cmp
icebp
cmp
dec
lods
xor
push
mov
lcall
pushf
insl
test
or
sti
xor
sbb
sub
xlat
add
xchg
cmp
pop
lods
or
cmpsl
xor
bound
out
cmp
lock
dec
in
in
fmul
push
and
add
loopne
mov
inc
push
adc
lods
mov
pop
rcrb
sbb
jnp
pop
mov
xor
lcall
and
jge
mov
arpl
mov
adc
notb
inc
shr
les
sub
mov
test
sbb
aaa
loopne
lret
mov
sahf
push
shl
loop
popf
cli
sbb
out
cmp
loopne
mov
lods
andw
repnz
out
loope
push
fistps
inc
shlb
icebp
loop
dec
hlt
xor
pop
push
xchg
jle
je
cltd
mov
in
push
icebp
xor
test
movsl
mov
xor
fwait
out
mov
out
and
pop
jo
fwait
adc
xor
dec
add
xchg
push
xor
mov
sbb
sbb
and
rcrb
mov
fcom
add
orb
adc
in
mov
jmp
and
xor
sub
push
add
cmpsl
mov
cmpb
add
loopne
push
rolb
pop
cld
cmp
nop
push
jp
rcrl
cld
and
or
add
outsl
or
dec
cs
adc
dec
movsb
jp
stc
hlt
rcrb
mov
hlt
cmp
out
sarb
pushf
xor
jp
rcll
and
les
adc
mov
sub
lds
jle
push
js
jle
clc
dec
pop
cmpsl
push
movsb
sbb
mov
jge
nop
push
mov
add
push
mov
mov
mov
insb
pop
add
scas
cmpsb
add
shlb
test
lock
loopne
inc
test
dec
lock
or
js
je
push
mov
ret
inc
stos
insb
add
aam
cmp
ret
dec
outsl
add
shl
mov
jno
rorl
and
jb
xor
jmp
fimuls
rorl
lock
inc
cmp
jle
jno
cmp
inc
daa
pop
adc
or
xor
lock
cli
lock
cltd
dec
les
pop
rcrl
rcll
mov
push
xor
jb
inc
aas
or
sub
xchg
ret
daa
mov
xchg
clc
cmp
stos
jp
push
jbe
mov
dec
cwtl
adc
mov
idiv
js
sbb
mov
data16
lock
sub
mov
daa
ret
mov
xor
subl
inc
mov
dec
fsubrl
jnp
xor
js
test
jae
lahf
and
or
xchg
sahf
mov
fs
mov
inc
fmulp
rol
cmpb
movsl
enter
cmc
mov
sbb
xchg
fmul
push
cmc
cmpsb
push
lds
stos
or
das
pop
adc
negl
jp
data16
shufps
adc
rolb
jge
loope
or
dec
jge
adc
dec
adc
inc
add
in
push
popf
jp
jg
push
xorl
js
xor
fprem1
rcl
and
xchg
xor
xor
icebp
outsb
stc
add
testb
fldl
pop
andl
pop
add
insl
pop
lret
cli
inc
andl
or
mov
mov
pop
xor
mov
shrb
or
call
std
and
ljmp
xor
pop
addl
push
push
jp
jo
jo
or
loopne
into
pushf
scas
jne
dec
sbb
cwtl
js
pusha
shll
push
int
out
or
je
movsl
adc
shl
loopne
mov
dec
xchg
fmull
ds
cmpl
pusha
mov
inc
mov
lea
dec
mov
dec
inc
jne
xlat
cmpl
push
mov
pop
outsl
cs
or
jl
sbb
mov
wrmsr
jl,pt
inc
rcl
sbb
lods
mov
mov
orl
lods
pop
sbb
roll
in
dec
jo
mov
icebp
xchg
sbb
jmp
or
mov
lods
ret
push
leave
mov
adc
sbb
enter
push
mov
push
stc
jne
test
clc
lret
insl
dec
mov
cmp
rorl
mov
cmp
imull
push
mov
sarl
mov
out
loope
adc
pop
cmpsb
out
fisubl
fwait
movsl
sahf
mov
jge
or
jg
xor
add
pop
loop
ds
mov
mov
inc
stc
je
mov
inc
cmpsb
fimull
dec
les
or
push
and
push
push
addl
mov
lock
cli
pop
lods
cmp
out
mov
mov
xor
fimuls
mov
mov
divl
push
dec
xor
fistpl
dec
lar
xor
je
mov
loopne
push
call
or
add
jno
sub
ret
scas
push
mov
in
les
mov
cmp
aad
mov
sar
adc
push
add
fsts
mov
cmpsb
pusha
lods
in
pop
adc
shl
inc
out
out
and
inc
aam
or
dec
aas
fnop
cmpsl
stos
int
mov
jecxz
out
sbb
pop
lods
jae
faddl
lock
jp
pop
cld
sbbb
pop
push
aas
in
fnstsw
pop
or
aas
movsb
imul
popf
repnz
je
lods
add
cwtl
add
test
sub
fs
cmpl
frstor
cmpsl
cwtl
mov
dec
pop
inc
pop
addb
aas
and
les
insb
jge
ret
jge,pt
mov
sbb
leave
add
and
sbb
cld
pop
gs
std
lock
pop
push
pushf
loopne
out
es
pop
jg
pop
jbe
loope
sti
jno
push
add
and
rol
dec
rolb
shll
in
pop
lahf
testl
insb
xchg
cvtps2pd
in
pop
ret
or
mov
adc
jle
mov
movsl
add
mov
jo
es
mov
pop
or
icebp
test
push
mov
shrl
test
test
movl
add
orl
scas
mov
cmc
or
mov
pop
movsb
mov
ds
push
sbb
loope
xchg
fs
ret
outsb
mov
lock
cs
xchg
and
cwtl
out
loop
clc
jne
es
addl
pop
lods
inc
mov
add
out
push
push
popa
add
mov
imul
gs
js
jle
adc
pop
adc
jo
les
loopne
and
xor
fildll
pop
stc
cmp
cli
out
fbstp
cltd
rcrb
js
in
adc
je
loopne
mov
dec
insb
pop
and
cmp
fistps
xchg
ds
mov
in
les
mov
sub
inc
adc
out
push
mov
cmp
cmp
jbe
js
xchg
dec
inc
xor
aaa
fdivrs
fists
push
mov
fs
add
pop
push
call
lock
imul
sti
hlt
push
adc
pushf
fcomp
pop
jo
or
xchg
mov
cmp
imul
nop
daa
adc
or
clc
xor
loop
mov
or
pushl
pop
jns
push
xlat
cmc
jmp
xchg
mov
das
in
and
imul
cmp
movsb
mov
test
ds
pop
jle
sbb
mov
repnz
xadd
sti
or
fcoml
js
push
or
movsb
fidivl
jno
hlt
inc
sbbb
ss
add
xchg
test
jl
mov
scas
push
push
adc
pop
adc
dec
inc
cmp
cld
cmp
addr16
cltd
jbe
aaa
lret
sbb
jmp
loopne
cwtl
xchg
test
scas
or
call
sub
rcl
inc
mov
shlb
fildll
loope
stos
adc
addr16
sub
jbe
rorb
xor
pop
clc
sahf
std
loopne
cli
jecxz
xor
and
rolb
addr16
cli
cmp
dec
inc
xchg
xor
int3
mov
jle
cmp
mov
test
sbb
jge
aas
int3
shl
test
in
js
mov
in
stos
xlat
pop
bound
and
xor
out
xchg
mov
movsb
mov
insb
lock
sub
push
outsb
cld
cld
not
cli
ljmp
fadds
and
lds
sub
add
enter
push
dec
and
and
idivb
ds
jle
inc
jbe
push
mov
aad
mov
jae
imull
bound
popa
inc
and
fs
adc
jge
dec
ds
xchg
mov
hlt
push
pop
mov
sub
cmpl
jo
ds
dec
inc
test
add
sbb
add
sahf
test
test
fldl
xchg
lock
mov
push
inc
xor
adc
jb
cld
icebp
enter
stc
xor
pop
pusha
or
aam
pop
movl
mov
dec
out
cmpsl
mov
bound
jnp
andb
stos
ss
mov
inc
mov
jle
xlat
outsl
push
and
out
das
cld
push
jmp
jecxz
sbbb
nop
ret
repnz
dec
ret
lods
push
movsb
jne
inc
pop
push
cmp
dec
cli
xor
cmpsb
js
dec
loop
dec
mov
out
cmp
jmp
cmp
dec
jmp
shrb
add
jmp
add
mov
pop
lcall
sbb
xchg
add
test
movsb
arpl
push
pop
les
dec
ss
out
aad
loopne
pop
add
cmp
add
clc
or
fcmovb
mov
fwait
pandn
shr
fmul
wbinvd
movsbl
mov
clc
test
hlt
fsubrl
inc
pop
loope
mov
dec
sbbb
sti
call
cmp
inc
pop
jge
loop
mov
xlat
mov
xchg
adc
lret
lds
pop
pop
sti
cmp
rol
cmp
adc
dec
xchg
hlt
add
xor
loop
add
push
pop
clc
mov
mull
cmp
jp
popf
scas
aaa
mov
addr16
xor
fdivrs
inc
fsubrs
xchg
jge
mov
inc
push
mov
movl
cld
sbb
aam
aam
stos
in
andl
pop
push
repz
mov
subl
sub
loopne
test
push
sub
out
shr
das
or
pop
adc
in
cmp
dec
push
pop
or
push
je
mov
outsb
gs
xor
mov
dec
cld
cmp
push
lcall
or
dec
fwait
imul
addr16
cld
aam
xchg
jle
pop
rolb
in
scas
jg
cmp
mov
inc
sub
jnp
aad
hlt
lds
sarb
lret
add
into
shrl
jecxz
lock
lods
sbb
imulb
xor
mov
jne
cmpsl
inc
pop
pop
enter
mov
div
test
adc
inc
dec
je
shrl
lds
jmp
mov
or
xor
pop
fidivs
and
adc
xor
push
imul
pop
jl
les
jno
shrb
inc
aam
mov
xchg
arpl
xor
xchg
mov
jl
mov
stos
cwtl
shrl
sti
sti
js
std
js
pop
mov
jg
popa
outsb
jle
jp
aam
sub
hlt
ret
mov
movsbl
fstpt
jnp
into
stos
sbb
lds
ret
pop
outsb
or
ds
pop
and
or
jnp
test
xchg
fisubrl
rcpps
pusha
pop
and
int
fwait
jecxz
cmp
push
jl
and
std
and
lahf
outsb
add
outsb
xchg
dec
nop
shll
dec
loopne
mov
mov
sbbl
jl
xchg
cmp
cli
fstpl
pop
sbb
or
loop
popl
push
jg
push
or
and
or
lods
les
fstl
mov
sarb
mov
inc
adc
mov
rorb
ss
loopne
dec
loopne
mov
and
push
pop
jecxz
jno
mull
push
dec
call
in
jb
mov
call
aaa
jae
test
lock
and
popa
lods
rol
and
and
and
test
xor
jl
and
mov
adc
repz
or
push
xor
fs
stos
jno
jb
mov
movsl
addr16
sub
out
mov
pop
and
subb
mov
mov
pop
dec
aaa
add
mov
pop
decb
lcall
inc
test
ss
decb
das
loop
orb
movsl
icebp
adc
cs
ljmp
mov
incb
xor
loop
add
jle
fstpl
jbe
loopne
cmc
loop
ret
arpl
add
fsubrl
adc
stc
inc
adc
repz
push
bound
cmpsl
and
mov
aam
jno
jle
sub
cs
out
inc
popa
add
std
dec
call
push
lods
xchg
ja
or
xchg
ret
sahf
cmpb
add
js
cmp
pushw
outsb
das
jmp
add
pop
data16
lods
mov
dec
mov
mov
jle
push
pop
mov
testb
lods
jp
xchg
sbb
push
into
fwait
lahf
ds
cmp
mov
jge
jle
push
sub
or
es
popa
sub
hlt
inc
xor
idivb
xchg
push
add
cli
sti
xor
sbb
mov
ffreep
mull
daa
es
pop
add
jp
rorl
adc
subb
insb
or
mov
dec
mov
cld
dec
jle
insb
outsb
or
in
cmpsb
adc
xchg
lfs
push
popl
pop
pop
inc
lcall
or
arpl
mov
xchg
sahf
mov
addb
mov
and
and
jns
decl
inc
movsb
mov
bound
subl
in
mul
fldt
pop
pop
shlb
mov
mov
xor
sbb
sub
mov
xor
add
stos
jo
pop
pop
lea
cld
popf
rcrb
movsbl
outsl
loopne
jns
test
lock
shl
mov
mov
inc
inc
cmp
icebp
and
push
push
xchg
clc
jle
movsl
addl
ds
adc
cmp
hlt
loop
mov
cld
dec
js
mov
icebp
sarl
je
sub
mov
pop
xlat
cmpsl
pop
sbb
jl
sbb
sub
ljmp
popf
mov
sbb
jle
out
shll
add
bound
push
outsb
inc
repnz
pop
cld
mov
arpl
shl
cltd
lock
nop
push
jecxz
aam
sub
and
cmp
push
test
mov
pop
push
sbb
push
lcall
lcall
loop
arpl
xchg
loop,pt
or
enter
cld
test
loopne
dec
cmp
cs
ret
add
lock
pop
mov
sti
inc
inc
inc
push
in
cli
je
icebp
or
add
repnz
ret
xchg
movsl
negl
insb
dec
cmp
arpl
xchg
mov
and
push
sub
mov
or
adc
scas
sti
and
stos
out
in
jo
cmp
hlt
or
adc
mov
push
inc
cld
fisubrl
cmp
pop
inc
subl
aam
or
adc
je
mov
je
sbb
or
sbb
xor
cli
jmp
xor
insl
pop
loopnew
in
or
and
push
rcrb
mov
fmuls
push
jge
add
inc
jmp
cli
call
and
dec
ss
adc
inc
loop
cmc
or
fadds
sbb
mov
scas
rolb
sbb
sub
mov
mov
mov
aas
ljmp
out
xchg
cs
js
jecxz
iret
outsl
lret
add
add
push
pusha
bound
or
inc
and
and
loope
jmp
mov
les
je
mov
enter
lock
xor
dec
mov
mov
jl
xchg
cs
jecxz
int
lds
mov
adc
jbe
sahf
clc
mov
out
sti
xchg
stc
loop
mov
dec
shlb
lcall
ljmp
dec
sti
add
pop
cwtl
mov
icebp
testb
adc
ja
xchg
xchg
repnz
clc
cli
mov
adc
pop
lahf
pop
scas
mov
call
adc
daa
cmc
rorb
pop
lcall
and
hlt
lock
pop
test
test
add
jnp
cmp
cwtl
subl
dec
popf
mov
cmp
xor
mov
inc
mov
ret
sbbl
clc
and
lcall
fisubrs
sbb
push
out
or
test
jmp
mov
ret
loope
sbb
pop
shrl
add
sbb
sub
add
ret
push
mov
dec
mov
stos
loopne
lock
push
dec
ret
pop
into
cmp
call
sarb
insl
fs
bound
rorl
in
dec
push
fs
out
clc
loope
pop
lahf
insb
adc
lods
rclb
dec
aas
mov
ss
sbb
imul
pop
push
xchg
mov
add
jb
bound
clc
popa
loope
insl
pop
dec
ljmp
mov
jns
add
sbb
cld
push
leave
xor
inc
sahf
cmc
push
sub
std
lock
test
add
cmp
fmuls
dec
cld
fs
mov
and
cmpsl
inc
pop
push
sub
cli
fistps
daa
outsb
push
xchg
xchg
idivl
push
hlt
push
pop
shll
jbe
jl
aas
pop
nop
pop
mov
and
and
gs
jbe
jl
dec
add
xchg
sbb
ss
pop
imul
bound
cmp
dec
mov
jl
clc
mov
cmpsb
xorb
jo
ja
call
cwtl
hlt
mov
pop
shrl
add
xchg
repz
mov
mov
adc
xchg
rol
mov
int
nop
rorb
push
lar
push
lahf
jp
jge
shr
jmp
clc
hlt
fcom
ficomps
in
pop
mov
rorl
and
cs
idivb
mov
and
sahf
lret
pop
or
pop
or
add
mov
pop
xchg
adc
les
inc
xchg
hlt
mov
xor
sbb
inc
cli
jle
cli
mov
ret
mov
xor
cmc
jle
adc
add
push
es
out
lods
clc
jmp
sbb
test
xor
adc
out
imul
add
dec
cld
sub
dec
jbe
orl
xor
pop
aas
or
dec
stos
cli
add
adc
dec
sahf
jo
xor
fistl
shr
sti
hlt
sarb
mov
cld
cli
lock
adc
js
pop
pop
add
inc
in
sbb
shrl
shrb
cmp
mov
std
jo
mov
inc
es
inc
mov
jle
jl
sti
push
cmp
rorb
adc
hlt
or
or
fs
xor
aas
sbbb
inc
and
sbbb
cs
mov
add
rcrb
pop
xchg
ds
adc
push
mov
cmpsb
jmp
mov
lret
icebp
xchg
decl
dec
pusha
pushw
add
push
jge
sbb
je
out
fdivrs
and
nop
pop
loop
das
idivb
mov
js
push
adc
sahf
loopne
sub
ret
inc
fidivl
setle
push
push
lds
jnp
xor
mov
xchg
push
and
loopne
enter
pop
fcmovnu
cmp
outsl
mov
jno
pushf
fbstp
push
push
jle
movsb
mov
mov
aad
add
test
fbld
mov
sbb
cli
cltd
mov
pop
clc
sahf
out
bnd
clc
loope
mov
ficoml
xchg
pop
scas
out
dec
mov
push
shl
lock
pxor
pop
xor
addb
fiaddl
fiaddl
data16
and
pop
mov
lahf
ret
je
jp
jg
in
mov
pop
aas
movsb
jp
push
fbld
rolb
lahf
aam
loopne
icebp
adc
or
and
lods
jg
pop
xchg
movsb
mov
dec
lods
sub
jae
push
pop
cld
mov
jg
pop
push
or
push
fiaddl
adc
fimull
jno
addb
addb
mov
mov
shlb
out
mov
push
push
movsb
push
or
sub
mov
sti
loop
jp
sub
dec
inc
sub
ja
leave
dec
in
test
in
imul
addl
inc
out
mov
inc
orl
jp
jmp
cmpsl
push
and
dec
sti
add
in
dec
mov
push
xlat
int3
loopne
sub
imul
enter
pop
inc
mov
inc
je
xchg
cmp
cld
sub
jmp
mov
ds
jg
js
paddw
push
cli
enter
adc
push
mov
jecxz
ret
bound
je
data16
lcall
pop
cmp
loop
dec
cmp
mov
je
push
imul
cld
fnstenv
jmp
test
pop
pop
push
mov
mov
jle
cmpsb
in
adc
lods
icebp
shl
xchg
inc
push
push
loop
mov
mov
jge
stos
es
test
jns
pop
subb
jo
lahf
into
lock
scas
ds
popf
mov
pusha
lahf
jle
mul
push
cmp
lock
test
lret
inc
sbb
and
pop
ss
mov
mov
xor
xlat
in
pop
cli
jge
imulb
xor
shlb
sbb
bound
push
jl
push
dec
fldl
lods
dec
or
lods
test
cmp
je
fiaddl
pop
mov
shlb
icebp
addl
loope
xchg
in
inc
pop
cmpb
push
sub
pop
mov
scas
je
lods
cmp
add
mov
jmp
adc
stos
pop
rcrb
adc
pushf
aaa
out
dec
adc
mov
fsubrs
scas
scas
mov
icebp
enter
fcmovb
dec
lods
dec
cmp
mov
sub
popa
bound
lock
cmp
daa
pop
jle
sub
push
sub
gs
pop
jno
push
cli
xor
jno
sahf
xorb
mov
mov
xor
cs
xor
das
andl
inc
rcr
stos
xchg
scas
mov
push
jbe
xchg
mov
mov
rcrb
mov
add
inc
dec
filds
pushf
lcall
imul
sub
les
fbld
iret
loopne
aad
inc
rcl
add
ret
and
adc
pusha
add
mov
jmp
fisubl
sub
sbb
adc
inc
subb
pusha
mov
inc
insb
cmc
sub
jle
je
mov
std
icebp
mov
adc
mov
cwtl
btc
push
daa
sbb
out
mov
insb
ret
out
pop
push
or
add
xchg
and
adc
or
jnp
adc
mov
ficomps
sbb
mov
sbbb
sbb
cmp
lock
mov
clc
jo,pt
mov
out
xchg
fmul
jg
rsqrtps
xorl
rcl
adc
add
push
lds
add
jl
sbb
xchg
rcrb
ds
mov
sub
push
pop
int3
loop
lods
push
sar
call
jnp
pop
clc
ljmp
aad
xor
bndstx
shll
jg
sub
jmp
xchg
sarl
mov
adc
clc
inc
sub
clc
mov
inc
pop
jg
nop
sub
daa
pop
sarl
movb
in
das
aad
out
mov
xor
cwtl
scas
insb
outsl
insb
daa
xor
cli
mov
in
mov
divps
mov
fcmovbe
add
jbe
dec
cmp
bnd
sub
rorb
pop
std
popa
dec
out
and
bound
xlat
cmc
and
clc
xchg
loop
jge
dec
xor
test
cmp
sahf
jno
ljmp
ror
jl
mov
lock
call
mov
lcall
es
sarl
push
scas
movsb
testl
idiv
sub
bound
mov
fadds
cmp
pop
or
mov
mov
outsb
adc
sarl
pop
and
mov
outsl
add
pop
inc
jp
lock
clc
mov
cwtl
out
push
cmp
test
sbb
push
add
movd
clc
outsb
int
jb
jo
fs
add
setnp
jp
into
repnz
push
pop
mov
push
mov
jl
adc
addr16
es
ds
dec
sub
sub
xor
xor
movsb
mov
imul
inc
sbb
test
daa
or
ljmp
cmc
ljmp
popa
mov
shr
add
je
push
inc
pusha
xchg
testl
sbb
popl
mov
filds
push
addr16
add
test
popa
push
dec
enter
xchg
testb
out
mov
or
inc
xor
add
mov
sahf
clc
icebp
add
mov
or
ss
fldl
jl
jb
pushw
add
pop
shlb
aam
mov
inc
adc
js
fwait
rcrb
mov
push
sti
xor
out
repz
inc
jmp
dec
adc
f2xm1
mov
push
fwait
ret
shrb
push
js
jo
push
push
enter
push
nop
jle
adc
or
sub
clc
hlt
adc
mov
pop
mov
mov
cmp
and
mov
ds
inc
sti
or
int
int
mov
sbb
add
sbb
iret
int
int
mov
jle
mov
xchg
in
xchg
hlt
and
loop
mov
daa
out
pop
cli
mov
mov
mov
dec
cmpsb
outsb
rcl
push
aam
dec
lock
and
sti
mov
sbb
or
repz
iret
addl
pop
clc
cmp
inc
rorl
dec
pop
es
sti
cwtl
sbb
addr16
jo
int3
fistl
cmc
push
icebp
or
sub
dec
pop
jge
xor
in
mov
pop
hlt
dec
clc
mov
idivl
sub
and
hlt
pusha
adc
ss
aam
xor
and
popa
out
sbb
sbb
icebp
loop
dec
mov
lods
adc
out
pop
les
pop
movsl
pop
test
fidivrl
lret
rcrl
adc
hlt
sbb
xchg
lahf
sub
movsb
sbb
in
sub
mov
fsub
cmp
xor
add
dec
lds
in
out
lods
loop
add
inc
loope
mov
mov
add
push
cmpsb
mov
pop
cmp
jle
jg
push
jle
add
inc
push
orl
sbb
mov
sbb
stos
loop
callw
in
adc
push
jno
outsb
xor
test
rcrb
dec
lods
mov
add
mov
lock
mov
loope
das
lret
xchg
xlat
push
out
enter
lret
add
stos
pop
push
cmp
inc
ret
add
out
inc
pop
mov
sahf
fmull
rorb
dec
out
icebp
movl
push
ret
int3
jge
jl
mov
xor
outsl
test
loope,pt
lock
out
mov
stc
pusha
dec
jmp
call
mov
jle
jp
jle
outsl
js
loope
sub
pop
js
cmp
xchg
jle
push
insl
and
ja
test
je
rol
aas
outsb
test
inc
adc
shlb
cmp
fiadds
xchg
test
push
push
cli
aas
sub
call
je
mov
mov
arpl
xchg
hlt
push
pop
cmp
mov
cmp
xor
out
call
es
sahf
iret
mov
js
mov
sub
mov
lahf
xchg
push
les
xchg
into
adc
clc
add
add
add
loopne
imul
xor
data16
pop
jbe
ljmp
dec
push
adc
mov
out
pop
add
jg
movsbl
es
movsb
jge
fidivrl
pop
ficomps
data16
adc
push
out
pop
fs
pop
js
pop
das
lods
jl
push
into
enter
and
rcll
rol
js
pusha
and
push
ljmp
pmaxub
jl
xor
mov
imul
sbb
popa
jecxz
cmp
or
ss
mov
mov
outsb
andb
mov
sub
mov
andl
xchg
push
sbb
sbb
sbb
xchg
or
ret
inc
cmp
pop
pop
ds
inc
std
test
pop
int3
xchg
jle
cmp
pop
mov
pop
push
xor
out
mov
sbb
or
push
stos
sbb
jmp
mov
orl
push
ds
sub
xchg
push
repnz
dec
jp
sub
sbb
into
xchg
sbb
hlt
aaa
andl
scas
add
jp
jb
jge
push
rcr
or
movsb
repnz
mov
fbld
lock
xchg
jne
sub
pop
cmp
pop
sbb
aam
out
jno
icebp
call
data16
scas
or
push
js
lock
mov
das
or
inc
cli
lock
cmp
or
cmp
add
pop
insb
rol
repz
dec
aas
movsl
pusha
in
cld
loope
aas
mov
lahf
repnz
clc
shll
outsb
jle
mov
adc
popa
lock
loopne
dec
orb
shrb
xchg
push
mov
rorl
movsb
pushf
lods
outsb
xor
lds
xchg
push
and
ret
xchg
movsl
lods
out
ret
jo
sahf
rclb
loopne
cmpsb
sub
in
rolb
iret
pop
fucomp
mov
cld
add
sbb
aad
stos
out
in
cs
sbb
cmp
and
pop
mov
cmpsb
mov
inc
push
test
pop
push
pop
xchg
imul
pop
jl
push
mov
or
fimull
xor
mov
outsl
into
jnp
jecxz
push
es
jecxz
sbbb
into
imul
sbbl
push
push
popa
mov
mov
insl
leave
inc
out
xor
and
out
repz
lcall
adc
testl
jb
xchg
aad
pop
push
pop
add
pop
mov
pop
test
mov
xor
jo
jge
sub
shl
adc
inc
clc
jle
dec
dec
mov
ficomps
scas
xlat
pop
push
leave
xor
adc
shl
movsb
addb
pop
add
push
ret
ss
jg
roll
imul
or
das
loope
jp
xorb
ds
or
ret
mov
sub
mov
in
mov
jno
xlat
shll
sub
ror
mov
je
mov
cmp
or
mov
stos
test
aaa
xchg
sub
adc
movsl
mov
sub
xchg
fnstsw
popa
sub
dec
sbb
cmpsb
push
mov
xchg
rolb
pushf
cmp
pop
inc
call
mov
bound
sub
das
mov
fucompp
mov
jle
mov
sbb
dec
loopne
aam
cmpsb
and
mov
adc
mov
mov
jae
add
inc
fsubrl
negb
push
pusha
jl
jo
std
fsubs
mov
lahf
xor
sub
mov
out
fimull
mul
stos
push
and
pop
stc
push
and
add
push
loopne
sahf
pop
inc
and
stos
pop
bound
lea
dec
cmp
jmp
or
das
dec
popf
jp
dec
pop
dec
inc
scas
test
call
clc
mov
lea
mov
sub
cli
push
jl
dec
cmp
xchg
daa
into
out
xlat
test
ret
out
fs
pop
adc
scas
inc
sarb
lea
sbb
mov
insl
loope
es
sub
and
loopne
mov
or
xor
adc
jl
subb
dec
addb
push
movsb
subl
jl
inc
dec
mov
push
orl
jbe
xor
mov
mov
xadd
test
jl
ret
mov
sbb
je
loop
mov
dec
inc
aad
std
movsb
xchg
fsubs
xor
lock
sti
shlb
loop
lcall
pop
ds
lahf
aam
inc
mov
out
jnp
idivl
pcmpeqb
mov
insb
mov
adc
bswap
shlb
ret
test
sub
adc
insl
mov
loope
out
mov
sub
lahf
pop
add
ficoml
push
jno
inc
add
incb
dec
mov
mov
or
movsl
in
icebp
inc
inc
cmp
divb
pop
sub
cltd
jno
rcrb
mov
lock
lret
lea
adc
lret
pop
rcrb
jge
ds
cmp
add
xor
in
jo
fcomi
sbb
mov
fcomps
test
mov
test
stos
repnz
popl
cld
mov
fcmovnu
pop
pop
mov
clc
into
adc
leave
inc
clc
enter
add
mov
shlb
clc
and
xchg
cmp
icebp
jmp
xlat
jne
in
es
pop
jno
loopne
icebp
mov
push
out
scas
jge,pt
pop
in
mov
cmc
sbb
xchg
cmp
jb
lock
repnz
lret
ret
sbb
xlat
loope
loopne
dec
rorb
sub
adc
and
aad
mov
mov
in
lret
jb
mov
dec
pop
dec
sub
xchg
shr
shll
mov
cmp
xchg
jno
fistpl
or
push
push
mov
sahf
loope
jecxz
add
xor
and
add
add
sub
enter
fidivl
sarb
push
loopne
sub
cmp
xchg
clc
cmc
sub
popa
adc
cmp
clc
add
cld
je
xchg
jo
push
pop
dec
mov
adc
inc
insb
fistl
cmp
push
cmp
ljmp
fucomi
jecxz
pop
divb
fs
sbb
nop
sbb
inc
mov
add
sarb
in
cmp
jno
push
xchg
jae
pushf
imul
pop
fwait
rorl
and
jmp
jo
mov
push
lock
insb
mov
cmp
out
and
pusha
xor
mov
and
ror
adc
push
pop
pop
js
sarb
mov
xor
xor
jne
hlt
cmp
mov
fs
jecxz
jnp
fbld
xor
hlt
inc
std
cli
push
mov
mov
fstp
fdivrs
ret
pop
je
out
ret
add
push
mov
inc
sbb
adc
loop
adc
popa
mov
addr16
mov
sub
rorb
ss
add
aam
jmp
mov
test
lods
cmp
inc
test
dec
sbb
cmpsb
fidivl
pop
nop
or
jp
aas
lods
loop
pushf
sbb
jb
mov
insb
pop
pop
cmp
jnp
mov
push
icebp
xor
and
push
insl
fimuls
sarb
cli
in
or
dec
outsb
jg
sbb
hlt
push
stc
js
lcall
xchg
cmp
cmp
addl
sbb
adc
hlt
add
rorl
dec
xor
mov
clc
mov
icebp
rolb
clc
icebp
mov
ljmp
or
push
scas
dec
cmp
mov
test
iret
das
fimuls
add
aam
lock
pop
mov
adc
sti
in
dec
cmp
push
movsl
pop
mov
in
add
xchg
sbb
adc
outsb
sbb
pop
das
push
cmpsb
push
fsubl
add
sbb
lret
jle
pop
lahf
mov
es
cltd
cmpsl
jo
loopne
lea
sahf
mov
adc
jo
inc
dec
mov
loopne
mov
and
lret
sahf
iret
es
lea
adc
jl
pop
pop
test
or
jb
adc
sbb
cmpb
mov
cmp
jmp
popl
ljmp
sub
jo
add
pushf
push
daa
cmp
insl
std
jo
lcall
xchg
cmpsl
ja
sbb
pop
xlat
mov
mov
test
add
jle
or
mov
out
mov
dec
loop
les
idiv
adc
mov
jae
shl
out
dec
xchg
in
mov
movsb
inc
jl
ljmp
push
loope
push
and
inc
or
sbb
pop
sub
adc
jl
cmc
xor
scas
cmpsl
pushf
sti
in
pop
push
xchg
rolb
bound
mov
insb
aas
mov
pop
rolb
fwait
cmpsb
adc
insb
add
mov
sbb
out
mov
lds
inc
lret
push
js
push
mov
out
jnp
outsb
fistpll
jge
ds
cmp
in
ret
bound
add
push
outsb
add
cs
loopne
aam
jg
xchg
scas
pop
cmp
pop
push
test
out
inc
neg
cmp
js
mov
xor
stos
add
dec
std
adc
mov
sbb
sbb
push
xchg
ficomps
mov
addb
into
mov
faddp
inc
add
or
add
fdivs
faddp
pop
add
jge
aas
dec
inc
add
or
xchg
icebp
rcll
mov
cmpsb
arpl
or
inc
pop
cmp
jle
xchg
orb
adc
sub
cmp
pop
scas
inc
imul
jecxz
jno
fwait
mov
lret
or
push
sbb
in
xchg
mov
add
stos
mov
xlat
mov
mul
shl
subl
dec
or
push
sub
fmuls
mov
in
mov
jge
js
es
je
pusha
push
adc
cli
cli
in
cld
movsl
lds
std
jo
nop
jbe
adc
mov
push
mov
mov
add
inc
inc
fadds
and
lock
jecxz
fcomp
je
hlt
ret
sti
popf
jp
pop
jbe
sahf
hlt
cmpsb
push
add
ds
hlt
lock
dec
nop
push
arpl
sarb
dec
pusha
movsb
push
bound
xchg
lcall
add
mov
jg
add
add
and
lods
mov
aad
loop
dec
loopne
shlb
call
ljmp
inc
test
mov
rcl
xchg
pop
dec
scas
inc
cli
xchg
les
rol
shl
loopne
ret
clc
lods
mov
loop
sbb
bnd
mov
sbb
icebp
or
test
lret
adc
dec
adc
cmp
cli
cmpsl
lds
arpl
shr
inc
push
shlb
arpl
popf
fwait
sbb
push
inc
cmc
loopne
inc
or
push
xor
cli
jo
push
push
dec
rolb
fmuls
inc
mov
xchg
push
rolb
dec
jo
pop
dec
mov
popa
repnz
data16
xchg
scas
das
jo
xor
jg
mov
jge
insb
and
repz
mov
cmp
mov
data16
xchg
sub
or
xchg
jmp
bound
fsubs
add
cmc
fcoml
push
push
movsb
sbb
pop
or
orb
mov
lret
rcrb
roll
aad
fldcw
pushf
out
shl
pop
mov
xchg
inc
cmp
xchg
test
xor
pusha
loop
jnp
insb
aaa
xchg
or
outsb
jne
cmp
xchg
mov
divl
orb
mov
sub
sbbl
cmp
add
pop
ficoms
push
sbb
mov
mov
jo
mov
fwait
js
addl
scas
daa
loope
push
or
and
or
pop
in
movsl
out
arpl
sahf
sbb
in
push
inc
in
shlb
push
das
dec
cmp
adc
push
mov
fdivp
repz
mov
stos
cmp
mov
lods
jns
rsqrtps
cmp
out
dec
imul
mov
jmp
add
jo
push
pop
fildl
loopne
pop
sahf
fmuls
movsb
pop
ret
shlb
jge
je
adc
cmp
mov
push
push
insb
insb
jl
jl
gs
jno
out
add
ss
jne
addb
adc
lods
lds
sub
inc
btl
jecxz
dec
scas
ljmp
push
inc
scas
add
and
add
jmp
push
xor
sti
sub
jg
and
add
push
or
push
xchg
leave
cmpb
add
test
ss
mov
push
jge
icebp
lock
push
into
ret
cmc
xor
je
test
jle
fucomi
sbb
stc
hlt
es
or
adcl
sub
shl
loope
mov
mov
divb
hlt
adcb
push
jbe
sbb
sub
ffreep
xchg
sar
cmc
dec
xchg
or
lock
jle
or
mov
js
outsb
mov
rcl
push
mov
jnp
iret
xchg
mov
adc
scas
pop
shl
dec
add
push
add
mov
lods
add
inc
pop
sbbl
jge
outsl
xchg
sub
dec
sub
test
lock
cmp
movl
or
scas
adc
scas
jl
push
pop
loop
imul
adc
into
inc
push
clc
mov
shlb
adc
in
je
fdivrp
or
imul
in
cmc
jecxz
sub
jb
enter
cmp
xor
cld
and
pop
loope
out
add
andl
xor
dec
pop
mov
das
in
shlb
jle
out
outsl
add
lock
adc
icebp
loopne
jl
push
and
xor
clc
mov
rclb
jle
ljmp
orb
cli
push
rclb
in
or
push
or
clc
cwtl
add
mov
sub
sbb
out
mov
pop
jo
dec
xor
aad
cmp
test
mov
into
fdivrs
pop
inc
mov
dec
in
mov
scas
rorb
ljmp
mov
and
jl
pop
xchg
repz
adc
mov
mov
inc
enter
into
xor
fsub
loopne
lret
pusha
cmp
loopne
mov
negl
sarl
sub
push
jnp
filds
sahf
pop
mov
xchg
int
cmc
es
cmc
dec
mov
jl
icebp
adc
pop
adc
pusha
add
lret
loopne
movhps
push
mov
add
call
cmp
mov
jl
mov
clc
jbe
sti
in
jecxz
cmp
cmp
je
call
push
pop
jge
stos
xchg
out
and
movsb
mov
pop
or
xchg
xor
mov
xchg
add
push
in
xor
and
cwtl
cwtl
mov
xor
shl
inc
mov
cli
loope
add
pop
rorb
jmp
jnp
je
fists
push
jmp
rclb
insb
out
inc
call
jl
dec
test
sbb
fldl
out
jle
push
test
sub
add
pop
mov
lds
cmp
mov
mov
mov
and
cli
mov
inc
fisubl
aam
push
ds
fwait
xor
rolb
jp
addr16
popl
les
adc
dec
cli
pop
pop
pop
cmp
cmp
ds
cmp
jns
shrb
cli
xor
dec
mov
sub
icebp
loop
outsb
push
es
sub
jl
inc
adc
sbb
sbb
cmp
rorl
scas
pop
fists
mov
pop
icebp
scas
inc
push
mov
push
std
hlt
lock
sti
jle
js
pop
cmp
ljmp
into
in
leave
adc
pop
sbb
imul
pop
adc
inc
loop
sub
cmp
add
sti
push
mov
out
mov
cli
mov
out
insb
sbb
and
loop
dec
loope
adc
xchg
in
movsl
out
xchg
push
sub
iret
shl
sbb
xor
roll
jo
test
in
pop
aas
jl
ja
dec
fisubrl
sbb
mov
cmpb
or
shll
arpl
push
mov
push
loope
sub
pop
mov
subl
inc
pop
insb
or
lods
lods
aad
mov
and
imul
push
pop
or
push
xor
push
loope
mov
xor
icebp
adc
loopne
mov
lahf
out
or
push
mov
stos
xor
push
repnz
js
loope
lret
or
popf
push
clc
xchg
pop
dec
xor
cld
ror
dec
push
insb
sbb
jecxz
xchg
clc
jo
test
add
les
fst
es
dec
xor
add
add
imul
fwait
clc
inc
aad
repnz
cmp
pop
or
pop
push
test
pop
fistpll
mov
test
jmp
cmp
insl
mov
bound
fsub
test
xor
push
jmp
mov
pop
mov
sub
push
clc
xor
mov
inc
clc
and
adc
pop
mov
adcl
dec
jge
push
xor
mov
cltd
imul
cwtl
in
cmp
ljmp
cmp
mov
js
pop
jle
sbb
in
cmpsb
jle
pusha
sub
bound
loop
add
jp
pushf
xorb
and
lcall
push
and
or
loop
into
mov
jge
cld
mov
xchg
and
xor
std
jp
cli
push
insl
addb
jmp
xor
sbb
jl
es
mov
scas
and
mov
mov
push
mov
pusha
dec
daa
adc
das
out
and
xchg
frstor
je
scas
mov
and
or
ficoms
lods
and
hlt
mov
test
std
inc
psubusb
fdivs
dec
push
pushf
cli
mov
mov
negb
scas
or
jo
jnp
add
sub
or
xchg
test
pop
test
jnp
add
and
cmp
sub
lcall
fbld
cmc
dec
add
mov
loop
jne
jb
xorb
rol
clc
outsb
test
stc
mov
jl
xchg
js
push
inc
mov
data16
adc
add
fxch
pop
jp
or
ret
xchg
cli
cmc
jmp
mov
sbb
or
call
or
or
inc
and
ret
or
xchg
aam
jbe
pop
sbb
dec
loop
sub
inc
or
pop
ficompl
or
repnz
out
enter
scas
dec
push
inc
mov
test
sub
sbb
adc
mov
nopl
cmp
xor
fst
xchg
hlt
jmp
push
mov
sti
clc
jmp
clc
fidivrs
dec
sbb
icebp
jge
nop
sub
inc
sbb
hlt
sbb
mov
dec
fisubl
insb
inc
pop
fiaddl
sti
pop
add
cltd
cmpb
adc
adc
in
das
push
bound
dec
push
push
cli
cld
dec
cli
hlt
cmp
lods
mov
sub
adcl
pop
ret
lds
outsb
pusha
jo
test
adc
push
orl
stos
mov
loopw
inc
adc
testl
cs
or
xor
cmpsl
jle
clc
push
push
xchg
inc
ss
into
pop
mov
mov
jge
clc
ljmp
js
dec
ret
int3
in
mov
sub
add
pop
mov
jl
repnz
fists
or
add
stos
into
pushf
push
loopne
inc
jle
or
les
aad
lods
dec
cmp
rcrl
jecxz
je
popa
jo
xor
xchg
leave
xchg
mov
inc
ljmp
lds
movsl
cmp
adc
enter
inc
jge
xchg
add
idivb
mov
ds
mov
insb
mov
push
subb
push
cmp
adc
jp
fmul
clc
inc
fbstp
jbe
mov
pop
mov
sarb
pop
pop
mov
negb
and
mov
shrb
rolb
imul
mov
in
mov
cltd
decb
cmp
push
adc
sahf
xor
xchg
outsl
or
ja
lock
xchg
dec
mov
adcb
stos
loope
js
mov
mov
sbb
adcb
mov
mov
push
loopne
inc
pop
xchg
push
mov
xorl
inc
sbb
lahf
and
jno
loop
dec
jg
xor
xchg
mov
jle
test
cmp
rorb
mov
push
iret
mov
es
xchg
lods
test
test
inc
adc
sbb
in
pushf
enter
and
fists
pop
jno
fs
dec
fldcw
pop
int3
clc
mov
jl
pop
addl
pop
mov
loop
mov
sbb
adc
sbb
cmp
outsb
fists
data16
mull
mov
sbb
shl
or
clc
jmp
lret
loop
and
pop
aaa
xlat
cmp
movsb
push
fiadds
lahf
test
shll
and
push
lahf
inc
rolb
movsb
stos
or
xchg
lock
stos
mov
mov
adc
ljmp
mov
or
imull
add
outsl
mov
add
ror
lods
mov
sub
push
clc
cli
jecxz
pushf
std
or
push
shl
idivl
and
xor
jmp
mov
and
or
and
and
mov
adc
or
and
addl
sbb
testl
xor
fdivrs
mov
nop
lea
lock
mov
cmp
jecxz
cmp
lret
testl
xor
lahf
ret
sub
pop
inc
out
rorb
mov
loop
int3
pop
pop
push
cld
fadds
dec
ss
mov
das
push
add
xor
jl
mov
adc
testl
lods
ret
mov
rorl
loop
mov
mov
jle
fstpl
pop
pop
and
push
inc
in
xchg
imul
inc
popfw
jle
in
ds
mov
jne
ljmp
xchg
jecxz
jl,pt
jg
inc
cs
cwtl
pop
jno
xchg
xchg
insl
mov
jp
movsl
mov
push
lock
push
jecxz
data16
xchg
pushf
adc
jmp
shlb
loope
and
sar
xor
je
inc
repnz
push
icebp
jge
hlt
addl
loope
jecxz
xchg
dec
ds
dec
jb
mov
xor
push
shll
ret
mov
mov
mov
jge
lock
pushf
mov
pop
nop
rolb
iret
xlat
sub
add
loopne
push
mov
es
pusha
je
pop
inc
sub
sahf
loopne
loop
push
mov
pop
out
das
fadd
cmp
rcl
and
cltd
movsb
adc
out
daa
icebp
lcall
pop
jmp
loopne
or
push
xchg
fistps
jmp
ret
rolb
jno
stos
shlb
pushf
mov
lcall
cmc
adc
or
jnp
adc
inc
jecxz
test
movsb
repz
fwait
hlt
daa
loopne
aas
cwtl
pop
mov
cmp
icebp
mov
inc
push
mov
sub
mov
or
xor
jge
js
sub
push
lahf
add
icebp
rorl
push
pop
dec
mov
add
lock
mov
pop
cmp
ds
dec
pop
out
inc
les
push
clc
lret
ret
pop
mov
roll
push
xor
add
or
imul
rclb
jecxz
les
add
test
cli
cli
lods
dec
shl
mov
imul
into
ljmp
dec
clc
in
and
and
or
cmp
cmp
mov
lock
pusha
pop
data16
lret
stc
cmp
imul
or
pop
sub
insl
cmp
pop
lock
and
push
mov
lock
test
mov
cmpsb
into
dec
cmpb
call
ljmp
xchg
les
push
movsl
fdivs
aam
aas
xor
ret
xchg
sbb
add
and
push
lahf
mov
hlt
je
xchg
std
mov
dec
sbb
loopne
lods
movsb
lcall
sahf
mov
scas
or
xchg
ret
iret
dec
or
push
ja
jmp
sbb
jl
inc
sahf
inc
dec
inc
sub
cmp
verr
push
pop
mov
jge
mov
movb
out
jnp
or
dec
enter
ljmp
shl
mov
ds
ja
out
testb
jl
lahf
xor
xor
fiadds
cmp
xorb
sbb
leave
ret
setb
xchg
mov
js
dec
scas
mov
push
jmp
pop
sub
out
inc
clc
aam
mov
inc
or
lock
mov
pop
es
les
push
mov
sahf
mov
and
sub
setle
cli
xor
jnp
cmpsl
push
push
lahf
and
das
mov
test
mov
jecxz
mov
mov
lock
loope
inc
nop
fsts
fidivrs
or
jnp
and
dec
fists
xchg
mov
jle
movsl
test
jo
inc
aas
orb
pop
ss
and
pop
mov
or
mov
pushf
mov
data16
jmp
call
mov
cs
jge
pop
pop
inc
nop
nop
cmp
dec
mov
mov
xor
push
add
insl
jl
dec
inc
aam
scas
and
jne
arpl
pop
and
movsb
xor
cmc
fs
xlat
jle
aas
outsb
lds
scas
adc
ficoms
or
sbb
push
cld
push
les
inc
jmp
dec
std
icebp
loope
dec
mov
push
sbb
insl
mov
push
mov
lahf
js
sub
jge
or
jne
jecxz
stos
scas
rorl
xor
fistpll
pop
lcall
lret
jmp
sub
out
cwtl
sbb
clc
jecxz
setp
mov
push
ds
jmp
adc
in
ret
mov
inc
pop
jle
insl
lods
pushf
dec
mov
mov
lea
jl
pop
shlb
out
sbb
cmp
mov
cld
cli
out
test
stos
loope
xchg
push
adc
scas
xchg
cmovbe
mov
movaps
stos
mov
xchg
fwait
pop
push
inc
stos
pop
iret
ss
repz
sbb
test
push
lret
test
aas
fs
aam
push
fadds
pop
sbb
push
inc
js
ret
out
pop
sbb
mov
cld
or
rcrl
inc
psadbw
cmp
jp
cmc
dec
cld
js
mov
stc
das
mov
pop
fbstp
mov
test
aad
popa
jge
push
jecxz
ja
dec
in
push
cld
hlt
adc
scas
loop
or
dec
dec
lock
pop
mov
data16
loop
fisubrs
insl
sbb
call
push
mov
push
and
pop
dec
pop
pop
push
push
movsl
mov
jo
js
pmaddwd
scas
inc
mov
pushf
inc
stos
mov
lret
add
cmp
xchg
dec
or
mov
test
call
push
mov
cmc
mov
cld
sahf
sub
js
xlat
xchg
fadd
jle
js
sbb
fldcw
mov
lock
and
insb
int
in
gs
dec
add
and
pop
ljmp
cli
and
jnp
xchg
out
xor
fisubs
loopne
movsb
push
add
xchg
pop
fcmove
push
push
cmp
cmc
test
xchg
repz
sub
mov
jp
bound
push
test
daa
cmp
jmp
cs
js
mov
add
les
inc
cmp
gs
lret
mov
pop
lcall
sbb
sti
mov
push
movsl
dec
roll
mov
das
mov
in
sub
pop
out
rcrl
loop
xchg
cmp
add
push
mov
sarl
and
testl
clc
jecxz
insb
pop
xchg
lods
jge
adc
dec
ss
sub
mov
dec
pop
pop
and
dec
arpl
scas
iret
shlb
lods
lock
out
pop
icebp
xlat
clc
adc
mov
lcall
or
jecxz
sub
xor
mov
nopl
mov
xchg
push
ljmp
mov
sbb
or
mov
cld
push
enter
stc
repz
push
or
jo
mov
out
push
filds
sbb
filds
mov
push
dec
fcoml
mov
xchg
add
stos
or
fcmovbe
cmp
pop
lods
or
pop
cmpsb
mov
mov
aas
sbb
pusha
icebp
or
adc
loop
add
ret
add
sub
mov
mov
inc
imul
add
lods
dec
in
dec
sbb
shrl
inc
add
int
adcl
sbb
mov
lret
insl
or
aad
aam
jne
jge
dec
bnd
inc
call
out
push
jbe
add
mov
pushf
mov
adcb
orb
add
mov
and
insl
jp
and
inc
add
or
inc
push
nop
mov
and
stos
sbb
lret
cmp
sbb
cmp
cld
jb
sub
enter
add
sbb
into
ficomps
fcom
add
mov
sbbb
add
push
sbb
je
sahf
and
xchg
in
inc
cmp
fidivs
arpl
push
inc
jo
mov
nop
inc
jmp
lds
cmp
shl
cmp
hlt
add
jge
cmc
mov
test
push
mov
sub
ret
mov
add
xchg
lret
jecxz
push
test
loop
nop
xor
dec
js
jae
push
jle
dec
test
call
xor
jmp
aam
in
dec
sub
loopne
jo
sbb
jb
jge
icebp
push
ss
jbe
push
mov
and
mov
dec
fcompl
mov
imulb
sahf
pop
pushf
push
inc
jo
mov
rcll
push
mov
push
or
lods
and
hlt
inc
add
and
dec
jl
js
stos
scas
pop
lods
ret
xor
movsl
mov
lahf
gs
aad
sub
outsl
clc
js
outsl
dec
pop
ds
cmpsb
ja
call
or
sbb
leave
mov
shlb
add
stos
pop
lahf
je
int
lds
das
ret
or
clc
push
shlb
stc
adc
pop
sarb
pop
clc
cwtl
mov
lods
push
push
adc
xchg
jbe
cmp
cmp
aas
mov
mov
sub
arpl
xchg
and
xchg
icebp
pop
mov
dec
inc
pop
xchg
xchg
jo
in
aaa
cwtl
cmpb
adc
ret
outsl
jecxz
subb
cs
mov
and
mull
ret
ds
sub
call
punpcklbw
stc
mov
loope
or
arpl
add
dec
mov
adc
inc
pop
mov
mov
arpl
jl
adc
sub
pop
lahf
push
cmp
sbb
adc
inc
rorb
push
fistpl
bnd
pop
loop
push
mov
cmp
xor
movsb
pop
xchg
and
clc
and
mov
test
out
sti
icebp
sbb
xchg
add
ret
add
ljmp
cmc
mov
cs
cmc
ret
test
jle
mov
add
outsb
cmp
add
sti
jbe
outsb
outsb
outsb
notb
jnp
fisttpll
outsb
outsb
outsb
jp
das
dec
into
push
mov
andl
outsb
inc
sti
push
sub
xchg
jp
bswap
add
les
cmp
cli
cmp
lods
push
loop
rclb
idivl
push
cmp
inc
jg
xor
pop
es
lods
xchg
dec
jle
pop
inc
clc
or
lret
dec
clc
push
gs
sbb
pop
mov
lahf
sub
sbb
adc
fildl
insb
xchg
push
mov
loopne
fistl
or
outsb
dec
cld
xor
xor
popa
sbb
jle
sub
xchg
jno
lcallw
jae
inc
cmc
pop
or
sub
push
lea
es
scas
xor
mov
pop
sarb
push
add
jno
pop
dec
lds
dec
jg
iret
data16
out
ljmp
test
dec
mov
loopne
inc
dec
movsb
outsb
dec
clc
sub
in
test
xor
ljmp
scas
out
adc
cltd
loop
pop
repnz
ret
xor
hlt
pop
les
bound
scas
fisttps
cmp
data16
add
jo
sub
insl
mov
shrl
sti
jb
int
push
lock
nop
cmp
loop
adc
andl
clc
imul
jecxz
addl
cmovp
push
cld
jp
add
adc
push
cmp
aam
repnz
inc
setb
pop
out
das
mov
fidivrl
cld
js
push
movsb
mov
sti
and
cmpsl
mov
fcmovnu
xchg
push
rolb
inc
cmp
xchg
jecxz
xchg
fcomp
lahf
arpl
push
pushf
jl
fcmovnbe
imul
sub
dec
cmp
js
repnz
jp
push
aas
into
pushf
dec
jle
add
xor
out
cmpsl
js
cmp
xor
xchg
cmpb
xor
add
jno
sbb
jl
fcmovnu
mov
xchg
cli
dec
mov
shlb
mov
or
stos
push
xchg
xchg
std
mov
mov
dec
or
sbb
repz
scas
inc
cli
jge
ja
push
int
dec
mov
add
test
mov
xchg
cs
push
sti
add
sti
jecxz
mov
mov
inc
ret
lods
and
ficoml
cmc
add
xor
mov
inc
xor
xchg
std
add
xor
cmp
fs
dec
jg
xchg
icebp
and
push
or
push
xchg
mov
sub
iret
mov
loop
ret
xchg
rolb
cmpsb
stos
pcmpgtb
jo
mov
add
sbb
stos
dec
aam
das
gs
xchg
flds
mov
inc
jb
je
fidivrl
or
jbe
mov
push
cs
outsl
sbb
pavgw
cmp
js
nop
mov
arpl
add
rcll
xchg
test
sub
mov
pop
and
filds
mov
ljmp
cld
push
mov
dec
mov
mov
je
loopne
loop
out
fdivrs
inc
iret
jno
fiadds
dec
aas
mov
scas
and
les
out
lret
jae
lret
sbb
cmpsl
test
ret
mov
das
pop
mov
rolb
cmp
pop
pop
dec
shr
mov
dec
cmp
push
pop
inc
inc
mov
iret
nop
jle
lcall
lea
dec
pop
jo
out
dec
lcall
mov
mov
jge
jne
add
mov
lods
jae
add
push
ds
addl
mov
into
out
rorl
jbe
outsl
cwtl
nop
add
sbb
pop
mov
pop
push
inc
push
scas
loop
pop
and
add
add
xor
sub
sub
mov
and
push
sub
stc
xor
and
adc
mov
inc
sahf
jns
ret
inc
insb
les
cmp
mov
sbb
pop
cmp
cmc
clc
mov
repz
jle
sbb
add
jge
pop
je
pop
inc
jno
fistps
pop
sub
add
push
pop
mov
mov
out
insl
cmpsb
or
nop
mov
push
loope
sti
repnz
mov
out
pop
fsubrp
and
or
sub
inc
js
jo
call
js
subl
int
cs
mov
pop
pushf
loope
mov
and
sbb
pop
pop
outsb
sbb
add
imul
or
les
sti
call
shrb
out
dec
into
movsl
test
clc
lea
mov
stos
pop
or
fists
outsb
hlt
das
lret
lods
movsb
out
clc
sub
jg
or
mov
mov
lret
xchg
addr16
loopne
jb
pushf
mov
push
js
dec
ret
out
mov
cli
es
outsb
divl
cmpb
push
add
pop
loopne
cmpsl
repz
loopne
cmpsb
out
cmpb
cli
adc
mov
push
lret
mov
sub
dec
mov
push
aad
js
inc
pop
push
popf
pop
in
jmp
push
xchg
cmp
pop
cmp
insl
mov
rol
mov
hlt
roll
mov
scas
rolb
or
mov
sbbb
or
shrl
sub
mov
jp
pop
pop
cltd
adcb
js,pt
bound
lods
inc
je
adc
pop
iret
test
stos
out
and
pop
cmpsb
dec
cs
je
inc
fisttps
jo
pushf
sbb
jg
ds
arpl
nop
shlb
mov
inc
pop
xor
cs
inc
push
jg
pushf
and
push
js
xchg
cmp
gs
xchg
lret
sahf
shl
psrlw
aam
icebp
mov
mov
cmc
or
xchg
push
psrad
test
ljmp
iret
push
sbb
xchg
lock
xor
les
mov
jg
pop
jb
mov
push
sub
xchg
daa
adc
xchg
dec
fisttpl
dec
fisttps
scas
jle
lret
inc
jle
mov
fbld
mov
pusha
sahf
sbb
mov
pop
lds
imul
push
stos
mov
lock
xchg
out
fsubs
test
or
jle
popa
sarl
sti
pop
add
cmp
je
adc
std
rcrb
cmp
mov
and
xchg
add
mov
jnp
loopne
nop
scas
cmp
aam
sbb
cltd
dec
js
imul
imull
push
movb
into
jl
and
negl
into
cli
fidivrl
sub
jo
or
shl
and
fidivrl
pop
pop
aam
lret
add
stc
sub
inc
js
sbb
lcall
sahf
push
loopne
das
inc
push
or
xchg
inc
shll
add
push
shl
rorb
xorb
int3
jb
cmpb
icebp
or
inc
jns
sbb
icebp
jecxz
jle
sbb
nop
xor
imul
mov
push
loopne
cmp
xor
push
add
loopne
hlt
ljmp
cmp
hlt
sbb
and
or
cwtl
mov
xchg
xor
mov
pop
dec
jmp
repnz
rcl
lret
xor
mov
repnz
or
pushf
sbb
adc
lds
mov
and
mov
jo
test
pop
das
inc
pop
xchg
orb
mov
loop
lea
popf
into
mov
mov
popa
out
pop
mov
jbe
fimull
loop
fldcw
and
js
fwait
lea
idivl
lahf
cwtl
push
lret
sbb
les
outsl
test
sarb
fbld
mov
jg
xor
vcmpss
cmp
into
and
mov
adc
rorl
mov
mov
sub
mov
out
std
add
out
shr
mov
cmpsl
jne
and
mov
clc
popa
test
mov
sbb
mov
xchg
hlt
gs
int
push
add
dec
pop
mov
jge
andb
adc
scas
mov
push
and
filds
data16
inc
adc
iret
mov
inc
and
pop
xchg
and
add
nop
orb
push
mov
sub
cmpsl
ljmp
jmp
push
hlt
lock
mov
out
pop
daa
mov
test
and
lret
cs
inc
mov
test
xor
mov
lds
sarb
jae
inc
cmp
mov
xchg
jecxz
mov
inc
adc
sbb
xchg
scas
mov
sbb
ret
jl
int
dec
lock
and
sbb
cli
fdivrp
pusha
das
push
ja
ja
mov
fsubp
lods
or
fwait
and
mov
pusha
or
flds
sub
mov
cmp
sbb
push
cltd
and
lahf
ds
fwait
std
mov
mov
inc
les
pop
into
sbb
push
cmp
sbb
stc
out
outsl
or
and
and
movsb
cwtl
jge
nop
mov
jnp
lock
cmp
imul
bound
lock
adc
mov
or
mov
shlb
xchg
inc
lock
pop
shrl
adc
jnp
pop
push
ljmp
call
and
call
push
clc
jmp
jp
xchg
es
ja
and
cltd
mov
pop
pop
or
mov
ret
pop
test
dec
aam
rorb
push
and
cmp
cwtl
daa
xchg
ret
adc
dec
test
test
xchg
subb
add
cmp
jecxz
xor
sub
scas
lods
stos
into
idivb
sub
push
fistps
cmp
bound
mov
lahf
xchg
add
rcrl
call
dec
pop
mov
das
inc
cmpsl
lcall
outsb
ret
inc
dec
jae
sub
add
add
push
subb
pop
lods
push
push
cli
dec
or
jbe
mov
lock
addb
mov
fisttps
ret
imul
mov
adc
adc
movl
pop
bswap
or
aad
and
pop
aad
push
pop
shrb
les
rorb
lret
jb,pn
adc
push
sahf
ret
jae
adc
mov
xor
mov
or
jge
xchg
jns
bound
fs
pop
mov
xchg
pop
inc
sti
dec
pop
and
push
mov
cs
sbb
inc
icebp
ret
sbb
nop
jp
mov
rcr
cmp
dec
daa
push
jnp
rol
hlt
jge
pop
cmp
pop
or
adc
sti
jge
out
jns
pop
mov
adc
cmp
jle
and
mov
add
xchg
fdivs
lock
cld
adc
cmp
lret
push
mov
cmp
cmpsb
out
add
stos
test
in
mov
into
sub
adc
and
xor
ljmp
mov
nop
pop
pop
ljmp
lret
les
cmp
xchg
addr16
and
jl
pop
test
adc
mov
pop
rorb
lock
scas
cwtl
adc
shlb
sahf
mov
push
add
add
fs
push
popf
inc
adc
fisttps
mov
xchg
push
mov
loopne
push
pop
xchg
incl
arpl
pushf
test
subb
mov
lea
and
push
insb
lock
jb
pushf
and
push
sahf
push
mov
pop
add
add
mov
xchg
cmc
outsb
out
movsl
das
jmp
add
enter
icebp
mov
insb
fdivrs
cmp
add
cld
jne
das
mov
lock
movsb
mov
ss
jle
mov
mov
mov
test
decb
outsb
shlb
gs
mov
jmp
or
xor
pop
pop
out
cld
jnp
jmp
mov
add
mov
sub
add
cmp
pop
sub
mov
sbb
jb
fwait
movsl
pop
mov
mov
and
sahf
mov
adc
adc
jle
fs
push
adc
cwtl
out
push
pop
cld
lds
pushf
sub
int3
pop
and
std
adc
ljmp
cmp
push
sbb
mov
dec
out
shll
mov
stos
fisubrl
mov
loopne
pop
and
rclb
xorb
les
and
cli
dec
lock
dec
mov
scas
mov
in
or
push
js
in
xchg
std
ss
iret
mov
gs
push
mov
insb
insl
dec
dec
stos
call
subb
stos
mov
sub
int
outsl
push
xchg
rolb
mov
dec
pop
aad
jp
outsb
xchg
imul
add
mov
mov
xor
jmp
je
xchg
or
inc
dec
pop
dec
arpl
and
push
cmpl
xchg
xchg
xchg
int3
xor
xchg
movsb
rol
das
mov
add
sarl
dec
jecxz
add
hlt
test
add
add
xchg
mov
jo
inc
cli
ficoms
add
pop
xor
je
jg
pop
sahf
pop
dec
ljmp
sbb
mov
subb
rol
sub
mov
sub
loopne
mov
ret
stos
into
xor
dec
mov
push
in
enter
cmp
add
pop
adc
or
xor
lahf
xor
pop
fcmovb
shll
hlt
jl
test
call
clc
jecxz
and
add
push
popa
push
int
jg
loop
aam
xor
pop
or
ret
ficompl
into
leave
lods
imul
sub
mov
jle
xor
test
in
dec
add
lds
aam
sbb
loop
add
rcrl
jl
add
jl
lock
cmp
cmp
in
mov
ds
adcb
sbbb
lcall
or
les
fnstenv
test
push
fbld
out
push
js
dec
imul
daa
mov
xlat
xchg
mov
xor
mov
lods
rcr
ss
out
jl
pop
popa
dec
xchg
insl
repnz
cmp
add
sub
lea
sub
ss
test
in
dec
insl
xor
js,pt
sbb
out
push
clc
pop
add
adc
movsl
pushf
or
imul
es
lock
movsb
xchg
lcall
push
sbb
test
xor
jnp
icebp
arpl
out
push
into
add
je
mov
addr16
inc
scas
push
or
mov
mov
dec
or
cli
in
mov
fcomip
loope
dec
mov
repz
push
inc
xlat
mov
xchg
loopne
call
xchg
push
sbb
jl
sub
int
jb
push
cmp
pop
in
add
push
xchg
aam
pop
inc
mov
fwait
int3
push
loopne
addb
adc
aas
sbb
mov
pop
jl
insb
data16
out
sysexit
or
mov
out
roll
pushf
movb
insb
sub
fisubs
mov
jge
mov
cmp
sbb
xchg
dec
jle
stos
lahf
and
ja
loopne
les
std
clc
or
mov
mov
or
mov
mov
and
xor
sub
and
sub
jle
jo
add
icebp
std
insl
nop
je
sahf
sbb
jbe
xor
sbb
rolb
xchg
push
and
stos
es
xor
push
push
rolb
or
in
adc
cmc
pop
push
xor
arpl
lcall
mov
pop
xor
iret
mov
pop
je
shrl
call
push
into
lahf
hlt
or
loop
arpl
push
add
je
xor
stc
inc
add
scas
pop
mov
push
lods
cmp
hlt
or
mov
cli
add
inc
push
enter
push
and
aas
sub
jecxz
cmpl
ds
inc
cmp
hlt
ret
and
hlt
mov
dec
popf
mov
cld
add
mov
xchg
data16
cmc
jge
pop
bound
adc
ret
std
xor
aas
or
mov
xor
mov
cmp
mov
fisttps
incb
out
push
not
lea
jno
cmp
cwtl
rorb
sbbb
pop
loopne
sbb
adcb
jnp
mov
pop
add
or
popf
or
xor
or
add
sub
ss
icebp
jg
push
sahf
or
std
or
adc
sti
imul
or
loope
push
pushf
data16
cmp
icebp
sbb
sub
movsb
cmpsl
push
shr
or
push
mov
push
cmp
mov
xchg
lret
jle
dec
out
out
pop
jp
add
sub
cwtl
dec
test
jb
xchg
dec
push
shr
push
in
lock
adc
mov
push
jmp
xor
dec
cld
dec
mov
add
xchg
pop
ss
and
adc
pop
call
or
add
cmp
lret
sub
pop
psrad
and
into
jo
push
dec
filds
sarb
popa
pushf
mov
fnstenv
movsl
cmpl
inc
add
pop
scas
addl
ja
jnp
mov
icebp
push
popa
mov
repnz
insb
adc
cmpsb
cmpl
pop
mov
cmp
aas
jl
cmc
pusha
idivb
push
pusha
lods
mov
sahf
jg
push
imulb
inc
pop
mov
imul
std
and
mov
add
push
mov
mov
fldt
push
rcll
dec
out
enter
pop
lods
rorl
ds
lret
mov
pusha
mov
insb
ficoml
inc
mov
pop
sbb
mov
call
mov
cmp
adc
sti
or
ret
mov
roll
nop
push
mov
sahf
cmpsl
sub
push
mov
test
push
lds
cmp
mov
adcb
push
rcrb
mov
mov
adc
inc
rol
pop
stc
int3
insb
xor
jmp
cld
push
push
and
or
jo
inc
loopne
xlat
cmovg
in
push
jae
data16
fucomi
stc
fistl
stos
cmp
dec
cmc
dec
inc
repnz
inc
movsl
mov
int3
cli
xor
repz
repz
aam
pop
xchg
cli
push
ss
es
imul
push
xor
rolb
cli
mov
movsb
pushf
adc
inc
and
aas
dec
sbb
adc
cli
mov
or
cli
cmp
jecxz
jnp
out
call
mov
es
cs
das
adc
mov
push
and
mov
ds
add
ljmp
rclb
negl
shl
push
mov
cld
clc
in
fcom
sub
pop
movsb
lret
pop
jge
icebp
jno
mov
call
inc
xor
pop
outsl
js
mov
pop
xchg
sbb
je
push
loope
dec
mov
mov
nop
insl
adc
ret
mov
mov
or
popl
or
jle
xchg
aam
aad
bound
test
ljmp
add
js
jecxz
pop
scas
aam
or
pop
pop
dec
orb
inc
loopne
cmp
cmpsb
sub
and
nop
ret
data16
sub
inc
mov
test
rorl
lods
xor
loope
dec
and
je
cmc
fldenv
adc
cmpb
pop
push
fbld
xchg
shlb
cmp
arpl
and
jmp
or
hlt
add
pop
stos
movsl
mov
out
jb
mov
out
mov
lret
idivl
adc
inc
mov
xor
lret
add
lcall
loope
xchg
ret
ss
mov
pop
cmp
cmp
cmp
cmp
sub
ljmp
ret
outsl
cmp
int3
jbe
sbb
jmp
adc
dec
ds
add
std
lock
es
jle
sahf
push
push
loopne
lock
aam
mov
icebp
stos
cmp
xor
mov
js
mov
test
shlb
add
into
addb
dec
mov
xchg
es
pop
icebp
cmp
cmp
xor
cld
movsb
test
or
aad
sub
mov
das
cmp
mov
mov
or
mov
inc
or
fisubrs
xor
cltd
dec
cmp
scas
push
loop
mov
jne
into
xchg
sub
loope
ljmp
ja
int3
std
lock
repnz
pop
mov
imul
xor
cmpb
xor
in
and
mov
pop
xchg
and
inc
xor
mov
mov
or
dec
pop
dec
fs
adc
add
fdivl
les
dec
popf
xchg
cmp
ss
sub
lods
mov
xchg
ljmp
push
pop
insb
mov
push
and
lahf
adc
adcl
adc
jmp
test
daa
push
xchg
add
or
loopne
ljmp
xchg
xchg
mov
xchg
hlt
loopne
pusha
inc
adc
pop
xor
or
mov
mov
hlt
jle
push
jo
cld
sub
aam
inc
es
sub
fbld
insl
mov
jle
mov
js
icebp
sbb
sar
jp
mov
lods
push
loope
daa
pop
out
jae
jne
lahf
cmp
cmovo
sbb
ret
pop
add
test
stos
mov
ljmp
cs
loope
shll
xor
and
jle
hlt
cmpsb
fs
out
les
adc
adc
push
dec
fs
lock
mov
ficoms
adc
movsl
dec
sti
xchg
push
mov
orb
loopne
test
or
inc
loop
jle
push
cmpsl
lock
subl
test
dec
jo
fsubrs
clc
shrb
sbb
jge
icebp
cmp
cld
mov
push
mov
out
xchg
mov
mov
xorl
push
adc
adc
pushf
lods
xor
or
jle
pop
push
mov
mov
pop
popa
jo
jns
sbb
dec
mov
popl
addr16
in
sub
int3
sub
andl
inc
and
mov
jnp
shll
xor
sahf
daa
imul
xchg
mov
repz
or
addb
or
add
xchg
hlt
mov
roll
xchg
sub
jnp
mov
loope
call
dec
or
bound
jne
dec
cltd
ljmp
mov
inc
jmp
adc
in
dec
cld
popa
loopne
or
jp
or
push
in
ret
dec
sbb
push
inc
xchg
push
push
ljmp
pop
popa
call
xchg
hlt
inc
mov
cmc
pop
jmp
pop
out
mov
in
sub
push
cmp
adc
cs
testl
inc
pop
movsb
addr16
mov
cld
cmc
jmp
lods
inc
js
or
jno
fs
xor
cltd
jp
andl
loop
mov
mov
mov
aas
cmp
xor
mov
mov
stos
in
jns
ljmp
sub
cmc
sub
test
jle
pop
pop
add
inc
je
sub
sahf
xchg
icebp
mov
xor
enter
inc
out
push
std
adc
testb
pop
xlat
push
mov
in
loop
xchg
jle
add
pop
push
or
pop
pop
pusha
add
pop
sbb
scas
pop
pop
add
or
mov
mov
rolb
div
jae
mov
icebp
ds
inc
add
sbb
lcall
rcr
push
xchg
or
add
out
insb
add
xchg
ds
idivb
xchg
xor
sub
mov
push
and
fscale
nop
xchg
add
mov
adc
add
jle
cmp
jb
ret
imul
xor
ds
clc
push
sbb
push
lods
jecxz
movswl
sti
mov
in
jns
loopne
movsl
imul
pop
ficomps
dec
or
loope
inc
pop
pop
mov
add
sbb
jno
and
fwait
addl
add
loopne
in
cmp
loopne
sahf
xor
mov
cli
mov
imulb
push
sbb
pop
pop
mov
mov
sbb
mov
aaa
sub
mov
jo
ds
popf
and
hlt
movsl
je
xor
lods
les
mov
notl
mov
inc
outsb
pop
add
add
pushf
stos
rorl
xlat
and
ljmp
aam
push
mov
ss
inc
cmpsl
pop
mov
test
lret
std
and
in
fisubrl
mov
sbb
sub
sub
cmc
push
pop
popa
cli
xchg
mov
mov
test
xor
xchg
jns
inc
sub
pop
pushl
jecxz
push
addr16
sbb
and
push
pop
add
ja
inc
mov
xor
loope
xchg
inc
xorb
dec
ljmp
jle
js
push
sbb
popl
lods
cmp
pop
aas
sub
jl
mov
jo
loop
imul
cmp
xchg
fcompl
pop
sub
mov
pop
mov
cli
mov
pop
or
addl
pusha
lock
or
push
jae
dec
outsl
add
aam
push
inc
inc
mov
shll
loopne
sbb
pop
int3
fs
std
add
sbb
xchg
dec
clc
add
inc
dec
es
xor
jecxz
inc
insb
sahf
scas
adc
fistl
add
mov
sbb
pop
inc
fsts
sbb
je
stos
dec
sub
test
pushf
mov
sub
mov
fimull
js
ja
ljmp
in
mov
adc
test
cmp
arpl
xchg
xchg
pop
pop
loopne
mov
inc
inc
ja
jp
and
inc
out
jo
mov
add
cs
dec
dec
cltd
push
orb
xorb
sbb
hlt
shlb
sbb
clc
jle
mov
ficoms
jl
inc
js
je
fnstcw
loopne
insb
popa
test
out
std
repnz
loope
ja
or
shrl
out
test
insb
je
mov
mov
pop
mov
adc
in
stos
sub
out
aam
iret
xchg
mov
lock
clc
xor
dec
sarb
cld
sbbb
push
pop
nop
fidivs
dec
lods
or
pop
pop
push
mov
sahf
les
fdivrs
xchg
test
stos
mov
lret
jp
push
lods
inc
bswap
push
push
sub
clc
adc
icebp
ljmp
cmc
xchg
xchg
pusha
xchg
jmp
push
ljmp
sbb
scas
test
loope
cmp
sub
inc
lea
ret
xor
outsb
pop
sahf
testl
scas
mov
push
pushf
dec
cmp
pop
ret
dec
imul
adc
mov
loope
ret
aam
js
hlt
add
sbb
movsb
outsl
push
fstl
pop
pop
or
scas
stos
push
flds
sub
ljmp
mov
clc
je
sub
stos
ja
andb
or
pop
sub
ret
lcall
cmp
enter
es
insl
sbb
pop
push
mov
icebp
sbb
mov
xchg
fidivs
hlt
ljmp
and
fisubrl
jbe
mov
jmp
mov
ljmp
and
mov
es
ljmp
mov
mov
pop
clc
sub
pop
imul
mov
aas
and
xchg
jmp
cmpsl
pop
mov
test
fs
inc
adcb
push
nop
mov
mov
add
aam
lcall
mov
adc
xchg
and
inc
inc
repnz
call
imul
daa
hlt
add
in
out
push
jb
pop
insl
mov
daa
in
hlt
jl
call
and
mov
mov
sbb
jnp
stos
adc
scas
or
add
mov
jmp
and
les
lods
test
loop
xor
fildll
mul
mov
adc
or
push
jle
inc
cmp
addb
rorl
mov
mov
cmpsl
mov
mov
pusha
mov
test
push
sub
jp
outsb
int3
cld
sub
push
add
lods
push
cli
dec
pop
pop
push
xchg
int
ss
mov
push
cwtl
xchg
jle,pt
clc
dec
add
loopne
lock
sahf
ds
iret
inc
pushf
mov
cmp
insl
add
adc
rol
out
lock
jp
sbb
dec
jmp
jle
cmp
ljmp
lcall
stc
aam
pop
pop
jg
cmp
popf
or
andl
pop
shl
pop
jecxz
fdivs
call
xchg
inc
out
cmpsb
lds
loope
in
popa
ret
lods
inc
call
enter
out
shll
addb
gs
cmp
mov
les
push
mov
mov
dec
clc
cmc
ds
push
fidivrs
stc
pop
loop
xchg
hlt
xor
or
andl
clc
xor
dec
sbb
mov
nopl
arpl
or
icebp
push
std
or
inc
in
bound
imul
lahf
lret
mov
clc
add
loopne
push
mov
mov
xchg
jmp
or
mov
jge,pt
hlt
mov
xlat
inc
or
cmp
daa
cmp
xor
sub
mov
loopne
pusha
jbe
push
cmp
lock
test
mov
std
fisubs
sar
aaa
hlt
dec
out
push
in
mov
lds
rorl
inc
mov
scas
dec
push
addr16
xor
mov
loope
sbb
jle
fimuls
jl
ret
push
pushf
ror
fsubrl
sbbb
pop
hlt
jge
out
ficoml
push
xor
insb
push
sub
enter
pop
rolb
test
cli
inc
data16
repnz
or
fs
sub
jmp
scas
mov
inc
jmp
daa
and
cmp
mov
mov
fcompl
dec
das
pop
mov
fstpl
test
push
sub
and
ret
xchg
int
fmul
andb
loopne
sub
xor
cs
mov
clc
or
jb
rcrl
js
adc
or
nopl
negl
outsw
fidivrl
adc
jecxz
jne
mov
jge
orl
pushf
addr16
or
ljmp
push
mov
js
mov
mov
sahf
and
test
pop
push
jp
shlb
cmc
adc
pop
je
mov
xchg
stc
enter
xor
pop
cmpsb
add
ds
dec
xor
nop
dec
negl
xchg
dec
mov
cltd
adc
xchg
push
mov
je
sbb
mov
pop
xchg
cmpsl
in
jbe
pop
and
push
clc
xor
xor
jp
bound
cmp
fs
cli
je
loop
push
jo
mov
jge
clc
sub
push
test
or
arpl
jnp
in
lret
incl
out
xchg
cli
fidivs
in
ret
popl
push
fistps
hlt
mov
cmc
pusha
jge
or
notl
jge
mov
jg
dec
cltd
cmp
fildll
jo
ror
sbb
popf
jp
pop
ror
inc
lods
addb
pop
clc
cmp
xor
ret
jp
loop
popf
fdiv
xor
jl
cmc
aas
jns
stos
lods
xor
je
push
loop
lea
fmulp
shll
je
adc
shlb
inc
xor
jmp
ljmp
dec
pushf
test
test
es
movsb
xchg
jmp
jb
js
cs
test
xor
add
push
mov
in
pop
test
sbb
cmc
jnp
scas
stos
shlb
cs
movb
jle
jl
xchg
arpl
mov
push
mov
rcr
pop
nop
jne
cmpsl
mov
add
ficomps
xchg
shlb
movsb
fmull
pop
add
pop
mov
add
scas
lcall
jle
adc
dec
mov
call
jp
sub
mov
adc
cmp
in
rolb
sbb
push
xchg
loope
clc
jne
in
pop
xor
pop
mov
scas
mov
ret
add
dec
xor
jmp
xorl
js
ficompl
js
adc
jge
pop
dec
and
jbe
ja
ss
js
ljmp
pop
mov
dec
lcall
psubsb
xlat
mov
cmp
adc
loopne
loop
and
std
lock
fdivs
movsb
test
dec
jge
jmp
and
cmp
or
lock
mov
fsubrs
sub
add
push
jb
pop
fs
clc
cli
add
cmpsb
sbb
addr16
ds
fnstenv
ret
inc
loope
rolb
mov
cwtl
insl
rorb
loope
fsubrp
mov
stos
sti
mov
cmp
sbb
mov
inc
ljmp
xchg
jmp
dec
inc
les
loopne
scas
imul
or
and
mov
or
fimull
es
push
movsl
and
inc
je
pop
push
cmpb
xor
out
pop
orb
jno
imul
mov
je
fdiv
roll
xchg
mov
mov
mov
hlt
mov
mov
sbb
xchg
sub
jp
je
push
loopne
mov
ret
inc
cmp
jle
cltd
icebp
pop
add
les
push
cmp
cs
scas
xchg
push
out
cs
xchg
aad
sub
es
bound
sbb
out
add
cmc
sub
or
in
and
dec
sbb
adc
mov
add
mov
pop
jp
data16
cs
ret
scas
and
movsb
inc
mov
cs
add
out
xor
cmpsl
pop
pandn
mov
mov
mov
out
hlt
sbb
xor
inc
hlt
ja
mov
xlat
add
cmp
inc
imul
sbb
mov
mov
cmc
xlat
and
repz
adc
and
dec
test
jle
mov
dec
sbb
mov
xchg
ljmp
cmpb
and
and
push
xor
ret
mov
add
push
and
and
push
sbb
fbld
dec
mov
imul
pushf
add
mov
jl
sub
test
arpl
js
clc
xor
sbb
dec
jge
mov
jge
ss
pop
sub
addr16
bndstx
pop
mov
sub
add
repnz
adc
sbb
nop
sarl
lock
clc
fmull
es
mov
sub
adc
sbb
pop
cld
mov
jae
mov
lods
shlb
inc
fisubrs
js
mov
push
into
pop
mov
test
cmc
mov
sbb
inc
cmc
bound
mov
pop
es
mov
fisubrl
mov
or
xchg
pop
cwtl
int
cmp
dec
mov
push
inc
cwtl
lret
js
or
cmp
mov
push
scas
and
in
xchg
xchg
rorb
movsb
or
mov
fistpl
push
jl
sub
push
jb
add
jno
mov
mov
cs
mov
insb
pushf
dec
cmpsl
das
mov
rcrb
aas
ds
mov
call
loope
dec
push
cs
mov
jo
push
dec
nop
mov
dec
push
mov
lahf
xchg
aas
mov
dec
jne
test
push
mov
push
dec
xlat
mull
xchg
testb
jno
hlt
lret
jg
fiadds
sbb
test
icebp
call
or
inc
fiadds
aas
sub
dec
push
mov
sbb
cmp
pop
sub
icebp
xchg
xlat
mov
mov
push
cmpl
divl
data16
sahf
ret
pop
mov
pop
adc
inc
imul
cmpb
dec
add
bound
mov
lea
jp
and
push
push
fimuls
aas
and
loop
push
sbbb
nop
xor
mov
pop
scas
adc
cld
bound
daa
scas
dec
jno
ja
test
mov
sbb
mov
jp
loop
lods
stos
insl
mov
fs
add
loop
adc
jmp
inc
cli
mov
loop
mov
test
and
mov
cmp
inc
gs
fsubs
sahf
push
cmpsl
nopl
dec
lret
data16
push
mov
push
movsb
ds
dec
dec
cli
add
popa
repnz
movsb
out
mov
fdivrl
mov
repz
nop
or
or
setl
js
jmp
iret
test
jmp
xchg
mov
aad
mul
xor
adcb
cmp
jno
add
stc
or
push
cmp
sub
mov
movsb
adcl
cmp
xor
ret
js
in
clc
lock
cmp
dec
xchg
lock
xor
out
add
sti
loop
leave
insb
mov
fstl
not
sub
data16
aas
mov
cs
clc
jnp
cltd
pushf
test
ret
xor
orb
jle
clc
xor
outsl
or
pushf
jo
cmp
dec
fcompl
loop
clc
dec
push
sbb
xchg
cmpsb
jle
jb
xchg
addb
add
sbb
push
ret
or
adc
outsb
sbb
mov
fisubrs
lods
icebp
std
pushaw
adcb
js
or
scas
sub
add
mov
daa
movsb
imull
xor
mov
data16
mov
pushf
idivb
add
or
sbb
in
mul
mov
jbe
jne
push
fidivrl
pop
sub
std
pop
adc
xchg
sahf
or
sub
xchg
add
pop
test
inc
or
stos
sbb
arpl
push
cmp
pop
mov
mov
loope
aas
xchg
inc
jecxz
std
cs
in
loop
aas
cmp
inc
xchg
xchg
subb
daa
subl
jmp
adcb
iret
xchg
wrmsr
mov
aas
sub
xchg
je
lcall
out
rol
pop
xor
aam
dec
xor
aam
xor
jecxz
imul
stos
mov
subps
mov
cmp
stos
sbb
sub
mov
mov
repnz
cmp
add
repnz
pop
nop
test
cli
js
jl
enter
mov
dec
aas
pop
push
js
subb
push
dec
pop
js
and
add
movsb
xchg
icebp
test
faddp
daa
icebp
fdivl
out
inc
jmp
cmpl
or
in
das
mov
cmc
lock
mov
adc
pop
test
pop
out
insb
push
jge
ljmp
sub
add
push
cmpl
rcl
xchg
mov
xchg
pop
testb
mov
rol
nop
pop
mov
jl
fucomip
es
inc
dec
pop
lds
push
andb
cmpsl
testl
mov
or
inc
pushf
sub
ljmp
cmp
clc
mov
mov
dec
dec
fbld
jbe
ret
andl
das
mov
adc
ljmp
inc
js
shl
add
pusha
les
js
aaa
adcb
sbb
pop
lods
mov
add
cld
pop
popw
ret
cmp
ret
inc
mov
and
cmpsb
mov
fsubr
lock
stos
xor
mov
test
aas
lea
test
jg
cli
movsb
pop
add
mov
mov
jmp
push
arpl
pusha
xchg
sbb
dec
dec
unpcklps
push
imul
xchg
mov
lods
insb
in
pop
xchg
fidivrl
fisubrl
cmp
inc
inc
pop
movsl
in
add
jle
adc
mov
mov
mov
add
xchg
scas
lods
ret
xlat
xor
and
je
cmp
ret
aam
mov
mov
xor
push
inc
add
pop
jl
add
stc
cmp
lods
lcall
les
dec
loop
fwait
mov
pop
in
and
enter
out
dec
cld
xorb
jb
shlb
das
mov
xor
mov
xor
and
xor
pop
lahf
ds
cmpsb
lret
sbb
pop
fisttpll
in
js
leave
test
cmp
adc
fsub
dec
movsl
dec
out
adc
push
sbb
cmp
inc
mov
cmp
scas
lods
pop
jle
xchg
frstor
lret
push
jecxz
push
in
xchg
sahf
data16
jnp
pop
cmpsl
adc
scas
pop
xchg
push
and
pop
inc
outsb
push
and
dec
xchg
pop
mov
adc
adcl
xor
jbe
int
lock
loop
sub
iret
push
and
jge
add
pop
jbe
in
xchg
and
cld
pop
pop
ficompl
cmpsb
repnz
sub
roll
fs
adc
test
jecxz
roll
push
adc
scas
dec
clc
sbb
sbb
xchg
ret
mov
stos
adc
mov
rorl
xchg
das
xchg
push
mov
xchg
pop
pop
sbb
sarb
mov
aad
les
movsb
mov
pop
mov
fcomi
push
jae,pt
loop
or
add
cmp
push
push
jp
xlat
push
out
ja
jp
fs
fwait
leave
xchg
sub
sub
testb
sub
sbb
cwtl
call
mov
xchg
inc
dec
jno
ds
fists
loop
mov
les
out
sbbl
jb
js
fs
decb
fistpl
adc
sub
dec
insl
data16
sbb
xchg
mov
mov
icebp
lret
movsb
inc
dec
in
xor
xchg
enter
push
stos
cmp
sbb
push
imul
stos
cwtl
pop
fs
inc
pop
loop
add
hlt
orb
cpuid
leave
sbb
add
adc
cmp
mov
ds
fdivr
jno
inc
les
mov
mov
jge
outsb
ret
ret
and
popf
lock
pop
fdivrl
pop
out
dec
sti
insb
outsb
scas
jmp
sahf
mov
push
fisttpl
out
out
imul
jo
and
js
adc
cmp
xchg
je
daa
xchg
jnp
inc
in
add
add
sbb
lock
hlt
mov
adc
sahf
mov
mov
push
jmp
in
or
rolb
outsb
in
xchg
mov
cmp
pop
std
into
int3
dec
lea
pop
jg
pop
cld
mov
add
and
dec
and
lock
in
or
or
jg
mov
ss
sub
push
adc
mov
mov
inc
movsb
xor
push
ss
aas
ds
mov
xor
xchg
lds
mov
pop
xchg
fistps
jle
adc
jno
loop
pop
xor
insb
rolb
loopne
xabort
or
mov
sbb
fistps
arpl
sahf
enter
cmp
pop
push
and
dec
inc
mov
xchg
push
call
dec
addb
fimuls
mov
js
or
push
mov
div
cmp
in
lods
adc
push
movsb
xchg
loop
pop
movsb
cld
enter
mov
outsb
lret
pop
test
hlt
popa
mov
pusha
aaa
ds
ds
add
shl
mov
mov
adc
dec
mov
in
test
bound
dec
cli
xor
lods
adc
pop
divps
cld
push
test
loop
xchg
adc
xchg
insl
les
pop
mov
push
icebp
call
jbe
nop
adc
aas
es
mov
xchg
aam
clc
mov
ret
sbb
psllw
xor
in
jp
hlt
inc
jmp
sub
scas
int
jbe
jg
dec
sub
xor
filds
and
mov
inc
dec
dec
in
sub
stos
sarb
filds
and
aad
in
push
movl
les
bound
rcr
xor
lods
xchg
icebp
outsb
popf
mov
adcb
dec
test
rol
or
loope
ds
fisttps
jg
mov
and
ficompl
cmp
mov
cs
insb
jge
sbb
sbb
ret
jge
icebp
inc
rcll
adc
lock
ret
mov
pop
es
sbb
xor
adc
cmc
mov
add
aad
mov
stos
pop
jl
sbb
rcrb
jo
mull
mov
iret
hlt
cmpb
mov
cmc
sbb
xchg
call
mov
push
enter
lahf
xorb
call
pop
out
adc
inc
sbb
cs
pop
inc
pop
mov
cmp
int3
mov
ret
scas
les
inc
adc
cs
clc
cmc
loope
js
push
mov
mov
pop
xorl
push
mov
push
sahf
pop
fisttpl
aaa
loope
jle
lock
ljmp
pop
xchg
add
and
andb
adc
sub
cs
mov
and
stos
out
add
inc
sbb
cmp
mov
aaa
and
jmp
lahf
or
punpckldq
outsl
jmp
xor
cmp
call
cmp
insb
adc
loope
or
and
pop
ss
gs
and
mov
scas
pop
ljmp
repnz
lahf
dec
insb
lret
aam
test
add
lods
pop
push
mov
mov
es
ret
sti
nop
xor
pop
ficoml
adc
jl
enter
jbe
push
pop
add
cwtl
pop
cli
insl
bound
das
add
je
jp
and
adc
dec
fs
test
sti
jle
repnz
test
mov
lahf
scas
pminsw
add
fbld
addl
mov
sub
mov
shr
imul
scas
testl
xorb
dec
mov
xor
shl
stos
nop
and
and
jl
sbb
xor
stos
je
mov
push
loope
fisubs
imul
mov
lret
jp
aas
into
push
andl
clc
ds
test
pop
adc
or
cmc
test
inc
cs
mov
xor
nop
ds
mov
shlb
dec
lods
sahf
mov
or
aas
test
arpl
daa
clc
imulb
jno
push
sbb
call
repnz
testl
pop
push
jl
icebp
mov
cld
subl
mov
lahf
xor
jb
pop
inc
aam
nop
fistpll
xchg
fmulp
mov
sbb
pop
cli
mov
jo
fwait
loop
sub
jle
pop
mov
bound
in
in
pop
jg
lods
add
mov
lock
pop
fcomps
aas
fistpl
mov
pop
jp
cmpsb
mov
sbb
push
dec
mov
push
lock
adc
pop
cmp
jae
dec
pop
sbb
push
loopne
sahf
dec
or
cld
ljmp
sub
add
jle,pn
add
jge
xchg
fcmovbe
and
inc
adc
push
pop
rcrb
pushf
push
pop
imul
or
sub
mov
pop
pop
inc
sbb
xor
hlt
hlt
insl
jmp
jecxz
in
push
cmpl
sub
shrb
mov
es
mov
lock
test
sub
sbb
inc
jge
mov
xor
inc
es
mov
pop
ret
jmp
pop
lods
xlat
cmp
jne
call
pop
dec
pop
cmp
lahf
movsl
and
pop
mov
out
aas
mov
addr16
pop
inc
pop
cmp
les
sub
addr16
xor
jbe
sub
mov
pop
cwtl
adc
or
outsb
pop
pop
or
add
sbb
jno
out
sbb
and
orb
hlt
loope
aam
adcl
scas
mov
jge
roll
jl
aaa
nop
orl
mov
sbb
movsb
jle
mov
push
out
clc
das
in
scas
rol
fsubrs
gs
addl
pop
xor
fs
lods
int3
mov
aad
leave
dec
pop
or
pop
subl
cmp
add
jno
call
lds
in
js
jge
scas
les
js
mov
jnp
add
mov
fwait
xor
sarb
hlt
clc
inc
loope
mov
loopne
fs
fisttps
rclb
scas
xlat
ficoms
loopne
rclb
mov
push
cmp
and
cli
nop
mov
rclb
lods
popl
pop
push
pop
pop
or
jmp
in
mov
pop
sub
jle
xchg
aam
pop
fucomp
lcall
xor
xchg
mov
dec
stc
ret
xchg
mov
hlt
roll
into
int
mov
push
or
pop
cmp
test
subb
mov
jge
popa
loope
lds
hlt
dec
xchg
pop
mov
ds
mov
adc
ficoms
sub
cmpsl
shll
ret
pusha
push
fiaddl
dec
shrb
add
inc
fsubs
stos
sahf
add
popf
inc
xchg
call
and
cld
lock
cmp
enter
ljmp
loop
outsl
jmp
sti
lock
push
mov
test
pop
test
pop
loopne
dec
stos
xchg
adc
cmp
pop
push
pop
cmp
mov
dec
loope
adc
testb
sub
push
lock
es
mov
or
and
shl
xlat
sbb
mov
adc
jbe
into
xchg
xchg
or
shlb
roll
push
icebp
clc
sbb
ss
aam
out
add
mov
sbb
dec
inc
push
ficoms
pop
pop
add
mov
imul
inc
sub
orb
cmp
enter
inc
sbb
addr16
cld
les
outsb
cwtl
dec
call
cmc
loopne
js
cmp
cmp
xor
ljmp
pusha
loop
aas
jl
mov
out
lret
divb
or
push
adc
test
jae
fucomi
nop
push
in
inc
or
jecxz
loopne
jmp
sbb
jp
or
or
cld
cmp
ret
add
iret
xchg
fcomps
inc
call
mov
clc
clc
dec
pusha
push
dec
fdivl
sahf
sbb
xor
xchg
ja
push
push
rcrb
xchg
pop
insb
inc
loope
adc
iret
in
jge
enter
test
cs
add
jg
test
cmpsb
inc
jnp
sub
mov
sbb
push
call
stos
push
adc
xchg
mov
cmp
fsub
or
imul
leave
rorl
dec
pop
or
push
fistps
and
sub
pusha
xchg
addr16
lahf
out
pop
inc
ret
rcr
mov
aas
sbb
bndstx
cmp
mov
in
in
mov
jp
mov
test
jg
push
pop
test
sub
xchg
jmp
push
push
aas
mov
fwait
loope
push
lret
js
ret
add
jle
mov
mov
or
add
push
std
jmp
mov
pavgb
sti
inc
incl
test
ficompl
or
bound
pushf
and
sbb
xchg
sbb
movsl
fists
push
clc
aam
mov
pop
cmpsl
mov
adc
ret
dec
xlat
cmc
inc
pop
adc
or
mov
out
outsl
pop
cmp
mov
xchg
xchg
push
jle
push
cmpsb
loop
jecxz
xor
fcompl
dec
mov
jno
and
pop
aas
inc
into
out
mov
inc
rclb
sbb
pop
pop
cmp
fsubl
xchg
adc
aas
ds
mov
out
sub
dec
ss
pop
pop
ss
sub
and
and
pop
fstpt
push
xchg
pushf
dec
sub
dec
xchg
lock
andb
lods
aas
pop
push
cs
shll
xchg
lret
push
movb
addb
rcrb
std
sahf
hlt
sub
xchg
shlb
xor
cmp
shr
mov
sub
cwtl
push
filds
loopne
bound
inc
add
mov
dec
and
push
dec
lea
lock
mov
jle
cmp
mul
jnp
mov
jl
cmpsl
ficompl
or
mov
cld
clc
sub
mov
cwtl
addb
push
cmp
mov
lock
movsl
jno
or
bound
lods
rorb
lret
mov
cmp
rorb
iret
les
mov
sbb
gs
pop
sub
nop
xor
mov
dec
lcall
stos
push
mov
pop
decb
cmp
add
xor
and
subl
jp
cmpsl
pop
cmp
insl
push
repz
xchg
and
loop
xchg
adc
cld
loopne
aas
addl
clc
sub
sbb
lret
jecxz
or
adc
loop
jns
push
mov
iret
dec
xchg
and
add
add
xchg
mov
mov
and
sti
push
ret
cmp
scas
in
clc
and
rorb
stos
add
cltd
or
enter
sahf
cwtl
enter
fimuls
inc
mov
or
je
dec
inc
aas
loopne
sub
je
adc
aam
sarb
mull
push
je
arpl
mov
imull
insb
insb
and
add
cmp
sbb
sub
sbbb
mov
sahf
xor
sub
cmpb
sbb
in
add
pop
or
add
cmpb
xchg
or
mov
xor
imulb
jle
add
inc
add
inc
std
add
fucomi
pop
mov
sbb
lret
pop
pop
test
jecxz
mov
imul
js
call
dec
repnz
js
adc
and
ss
xchg
iret
insb
and
mov
dec
jge
in
dec
insb
fildl
stos
cmp
aas
int3
jne
cmc
ret
leave
fdivs
fcmovne
mov
cs
gs
push
dec
rorb
xchg
lret
pop
test
adc
xor
and
mov
test
and
sub
out
cmp
or
int
insl
and
pushf
arpl
dec
mov
and
jg
cmpsb
stos
and
cli
imul
sarl
mov
mov
popa
mov
add
clc
add
std
adc
cmp
push
repnz
scas
mov
std
cmp
sbb
push
cmp
sub
and
lock
cmpsl
lea
cmp
scas
inc
mov
jecxz
cmpl
test
mov
mov
fwait
lock
adc
cmpsb
jp
xchg
jle
mov
mov
lahf
inc
cld
mov
adc
rcl
sahf
mov
jp
test
sahf
cli
test
lret
lea
mov
mov
lock
movl
or
sub
sbb
jp
outsb
jmp
sbb
aas
iret
xor
js
clc
push
daa
adc
xchg
mov
lret
pop
ficomps
call
ljmp
ds
mov
ret
shll
xchg
or
nop
enter
jle
mov
sub
or
sahf
into
stos
sub
push
mov
inc
xchg
std
xchg
adc
push
adc
ss
pop
sub
jle
or
loopne
and
cmpsb
sar
adc
clc
inc
add
clc
mov
push
and
inc
repnz
pop
aas
pop
xchg
add
xchg
lock
pandn
jp
mov
aad
push
and
add
xlat
addl
and
fisubrl
ljmp
js
xor
divb
pusha
sbb
add
mov
and
icebp
inc
loopne
inc
jb
fs
and
out
adc
out
lds
lret
adc
jecxz
popf
sti
lock
mov
aad
sarl
xlat
int3
pop
das
test
xchg
cld
ret
imul
mov
sar
add
add
mov
hlt
loopne
sbb
adc
fs
clc
xor
xchg
ljmp
mov
stos
cld
xchg
cmpsb
dec
les
mov
jle
xor
fdivl
sub
loopne
leave
cli
shrb
xchg
jl
push
inc
call
xchg
ljmp
xchg
loopne
xor
push
rol
adcl
fldcw
cmp
xor
int3
movsb
push
dec
in
sbb
sbb
lods
inc
adc
xor
aaa
aam
mov
push
push
or
js
mov
inc
jo
loop
aam
in
push
push
lods
aaa
sbbl
and
sbb
pop
cli
jb
testb
push
sbb
ret
shrb
ds
sub
jmp
inc
js
hlt
xchg
xor
push
lock
icebp
sbb
push
push
push
cmp
test
lods
mov
cmpsl
pop
mov
cli
and
lods
lcall
mov
insl
push
test
and
movb
jmp
pop
clc
stos
pusha
in
nop
test
mov
jp
roll
lahf
js
xor
ss
and
xchg
arpl
les
adc
adc
push
es
pop
data16
cmp
inc
mov
xor
pop
rol
sti
sahf
sub
mov
fbstp
lods
mov
push
cmp
lret
dec
ljmp
loope
or
adc
ret
js
es
cmp
and
shll
js
fildll
hlt
shrl
call
pop
ljmp
and
pop
jle
or
inc
mov
das
lock
add
pop
adc
inc
add
pi2fw
fisubl
in
je
inc
fdivs
cmc
shll
insb
sti
enter
cmp
das
das
scas
mov
mov
mov
outsl
sub
cwtl
cli
sbb
rorb
ljmp
xchg
hlt
out
jno
leave
dec
stos
mov
cltd
cmp
pop
jg
xchg
adc
rcl
into
xor
cmp
mov
nop
xchg
pop
or
pusha
mov
icebp
fs
xor
pop
xor
subl
insb
mov
cmp
push
aas
scas
cmpb
jle
jmp
lret
int3
push
pop
test
jge
jo
shl
nop
loope
add
adc
jle
or
or
xchg
add
lret
loop
les
sub
xchg
ds
jle
cmp
out
in
in
jbe
cli
or
lods
ret
aas
inc
cmp
test
js
in
pop
push
loopne
das
push
inc
sbb
xor
mov
das
adc
stos
push
and
ljmp
or
adc
jle
pop
aam
cli
mov
fsubrs
xchg
sbb
mov
add
jmp
das
inc
ljmp
add
aas
bound
add
inc
jmp
jb
div
daa
test
xchg
sahf
jo
imul
fidivrs
outsb
jmp
frstor
pop
rcrb
cmpsl
inc
adc
fstl
bt
cmp
and
mov
cltd
add
xor
loop
xchg
push
insb
and
jmp
cs
out
in
or
aam
mov
cmp
loop
add
test
daa
sub
inc
pop
pop
rolb
leave
cli
xchg
xchg
xor
fs
test
mov
insb
out
hlt
cmpl
testl
inc
test
js
push
mov
mov
insb
jmp
ret
inc
fists
xchg
jle
jg
rolb
mov
add
mov
mov
xchg
stos
cmp
stos
and
imul
push
mov
lret
outsb
xchg
mov
mov
aam
imulb
ds
push
mov
push
xor
push
shlb
in
xchg
cmp
jo
fmuls
or
insb
cs
dec
inc
pop
jle
pop
cmpsb
pushf
and
enter
inc
push
pop
mov
out
loopne
add
adc
pop
repnz
xchg
fs
ljmp
sti
fsubrp
mov
jmp
push
dec
dec
rolb
stos
test
cli
icebp
loopne
or
xchg
jb
std
mov
sub
mov
fisttpll
or
jo
arpl
adc
fdivs
shrl
xchg
sub
stos
push
popa
and
dec
int3
add
push
bnd
daa
stos
out
rorl
sahf
sbb
push
pop
ret
xchg
call
jge
and
push
clc
test
ljmp
jbe
rolb
loop
cmp
mov
ss
push
cmpsl
ja
jbe
fdivrl
outsb
cmp
not
pop
loopne
cld
subl
ja
std
orb
dec
push
les
jl
aas
jo
loop
mov
mov
mov
cltd
movsl
test
dec
rol
call
pop
ss
les
leave
cmp
js,pt
mov
lods
xor
mov
lahf
aaa
shll
out
mov
jecxz
aam
or
mov
ret
adc
xchg
shlb
and
movsb
mov
or
inc
mov
cwtl
and
loopne
xchg
fcomps
inc
add
outsl
push
jmpw
mov
mov
xor
jl
xlat
sahf
call
lret
ss
outsb
or
xchg
icebp
and
add
xor
or
aas
dec
int
push
adc
dec
pop
aam
outsb
and
lds
push
pop
les
sbb
loope
lcall
ljmp
fsubs
xlat
dec
jge
out
cmp
dec
insb
dec
xlat
scas
aas
add
lods
mov
add
lea
addr16
fadds
mov
inc
mov
lock
pop
add
jbe
cmp
sub
pop
mov
sbb
adc
movsbl
mov
lret
jo
aam
cmp
pop
stos
les
pop
mov
xchg
loop,pn
gs
fs
jl
cli
jne
movsl
pop
cmp
enter
int
arpl
sar
pushl
xchg
xor
addr16
cmpsl
inc
xor
adc
cmp
loope
scas
jae
aas
movsl
das
cmp
mov
aam
nop
movsb
add
jge
fisubrl
nop
cmp
adc
adc
and
lock
xchg
ffree
jge
lods
cmp
dec
cld
js
mov
mov
dec
rclb
les
imul
nop
pop
add
cmp
scas
jl
xor
pop
clc
push
xchg
test
fwait
push
fists
add
pop
mov
lock
pop
adc
push
cld
and
mov
loopne,pt
aam
jbe
sbb
inc
pop
and
xchg
out
pop
fs
js
hlt
nop
push
push
jg
dec
push
ja
ds
sbb
xorb
hlt
push
mov
and
popf
sbbl
arpl
clc
and
js
push
mov
aas
jle,pt
ret
insl
push
sub
or
int
popf
pop
push
push
sbbl
pop
and
add
and
xlat
es
add
jno
mov
pusha
lock
mov
pushf
leave
add
xor
xchg
jne
push
mov
js
lock
add
sbb
lods
out
mov
push
mov
ja
loope
ret
cmp
dec
into
sbb
cli
push
sub
aam
movsl
leave
fidivl
mov
jp
rcll
cmpsl
lahf
mov
loop
fistl
adc
ss
stos
xchg
repz
pop
push
test
inc
pminsw
in
daa
dec
cwtl
mov
das
push
out
jo
pop
mov
dec
push
movb
and
inc
stos
in
test
mov
popl
int3
sahf
divb
inc
pop
or
pop
ss
mov
mov
mov
cs
push
cmp
ljmp
add
jl
dec
movl
inc
cmp
sbb
mov
push
imul
and
dec
or
pop
inc
roll
stos
jle
lahf
jle
icebp
or
js
fcmovnb
adc
stos
jle
pop
or
add
xor
adc
mov
jno
xchg
insb
clc
pop
and
jle
lock
fwait
lcall
ret
jge
shrl
loop
fidivrs
out
jge
adc
es
fsubr
sub
shlb
repnz
dec
cli
mov
xor
mov
loop
lods
idiv
xchg
insb
sahf
loope
fwait
dec
sub
push
pop
les
pusha
xor
mov
jae
dec
jne
iret
xchg
inc
mov
lcall
sub
inc
sub
test
imul
cmp
pop
pop
jle
xchg
or
sbb
popa
out
mov
mov
jmp
add
rol
lcall
mov
rcr
ljmp
or
jge
js
dec
insl
push
mov
jo
add
adc
inc
pop
push
daa
mov
loope
mov
cmp
test
clc
push
jecxz
movsb
mov
inc
push
popa
orl
les
jbe
subl
sahf
pop
mov
jmp
dec
and
cmp
push
pop
mov
inc
mov
inc
xchg
loopne
inc
push
ror
faddl
ret
adc
dec
fdivl
fs
and
add
sbb
repz
push
inc
pop
push
pusha
scas
jg
cli
rol
add
ja
add
scas
mov
or
mov
pop
andb
aas
iret
iret
add
jecxz
arpl
fwait
out
ds
jl
lods
lods
adc
cmp
jle
add
adc
incb
lsl
outsl
jns
sub
sbb
push
repnz
es
mov
js
and
int3
test
xchg
clc
dec
mov
clc
fdivrs
jge,pn
cwtl
cli
mov
loopne
aad
fbstp
push
mov
test
clc
xor
jmp
out
ret
xchg
pop
adcl
inc
cmovs
lods
pushf
xor
test
cld
add
dec
or
and
xor
xchg
std
cld
int
cli
mov
and
jns
sbbl
test
aaa
gs
sti
ljmp
mul
imul
movsl
push
or
xor
sbb
clc
push
jo
jmp
jo
mov
jle
add
divb
push
sub
scas
push
add
icebp
movsb
mov
out
adc
push
mov
cld
mov
mov
mov
arpl
jo
mov
int
ret
les
sbb
cmp
cmp
ss
xchg
aad
sub
dec
std
clc
hlt
xor
clc
aam
nop
hlt
mov
sbb
cld
dec
lds
mov
das
or
inc
push
or
out
xor
aam
loop
mov
rol
sub
test
ljmp
loop
cltd
jp
leave
ret
mov
cs
push
and
push
cmp
mov
sbb
push
in
xor
add
jl
pusha
pop
pushf
lahf
and
lock
fiadds
call
dec
and
mov
icebp
lock
adc
mov
mov
int3
mov
std
fs
in
jbe
dec
dec
jp
loope
cwtl
into
shll
add
mov
mov
adc
aam
lea
icebp
dec
push
mov
shlb
inc
cmp
cmp
stc
cmpsb
sar
jecxz
mov
out
shll
mov
and
mov
xchg
out
dec
push
out
in
adc
mov
jecxz
jecxz
pop
mov
jl
comiss
mov
jle
fs
mov
add
push
mov
pop
cmp
sub
rorl
sub
push
mov
icebp
dec
sub
mov
filds
jno
adcb
sub
insl
add
xchg
push
jl
lret
push
pop
push
nop
loop
sti
cld
stos
adc
orb
or
stc
mov
and
mov
and
rorl
scas
lods
cmc
loope
push
sub
lods
xchg
out
loop
push
push
lret
jp
in
pop
jge
jp
sbb
insb
cmp
add
mov
sysret
lahf
mov
ffree
cmp
shlb
out
fildl
cmp
push
jmp
adcb
mov
outsb
ret
ljmp
or
mov
push
es
out
mov
aam
push
in
mov
jle
push
mov
cmp
cmp
out
ret
filds
push
inc
sbb
mov
repnz
hlt
add
mov
sbb
into
ja
inc
or
push
push
jle
mov
popa
mov
daa
insb
add
sub
movd
push
cmpsb
fnstcw
mov
adc
or
rolb
in
and
adc
push
pop
sarb
xor
push
and
add
push
ss
adc
das
adc
xor
mov
xchg
pop
sbb
sbb
movl
add
in
fisubrl
clc
popa
inc
ljmp
mov
loopne
ret
ret
dec
xchg
movsl
mov
ds
inc
sbb
mov
inc
enter
mov
es
scas
insb
adc
lret
outsl
inc
lahf
jo,pt
push
lods
or
fs
adc
movsb
int
stos
lock
enter
mov
sub
cmp
fs
js
jp
lods
dec
mov
filds
pop
xchg
loopne
push
test
jg
pop
push
jge
mov
push
mov
push
cld
scas
sbb
repnz
dec
pop
mov
pop
shl
mov
addl
xor
xchg
popf
jle
push
hlt
pushf
xor
mov
xchg
xor
push
xchg
lahf
icebp
clc
add
jmp
addr16
xchg
test
adc
fidivs
leave
sti
js
aaa
mov
or
fildll
aam
jno
jp
shll
call
jle
add
mov
out
ret
ret
cli
into
add
inc
jecxz
jg
leave
mov
mov
and
push
jmp
dec
hlt
inc
in
pop
xchg
cmp
mov
fidivrs
call
ljmp
pop
dec
mov
js
cmp
sahf
icebp
dec
pop
push
inc
jp
into
push
orl
fdivrs
add
cmpsb
fbld
les
jb
addr16
sahf
sbb
mov
cmp
gs
aad
dec
bound
js
pop
add
addb
and
jge
out
lods
out
add
inc
sar
mov
fs
je
dec
gs
jne
daa
cltd
and
imul
icebp
testb
data16
sub
aad
outsb
movsl
test
sti
add
loope
fsubp
mov
clc
rorb
or
das
cmp
xchg
bound
sbb
aam
mov
push
movsl
xchg
mov
movd
jl
shrb
mov
sbb
xchg
fdivrl
dec
sbb
pop
bnd
mov
mov
adc
lcall
mov
or
and
xorb
sti
call
aaa
jbe
inc
js
pop
sbb
mov
jmp
sbb
xor
sahf
jge
ds
and
inc
test
or
sub
or
sbb
push
cmpsb
xchg
or
pxor
and
push
pushf
add
lods
aam
cmpsb
shl
lods
mov
outsl
inc
scas
xchg
movsb
push
nop
mov
dec
ret
rolb
sarb
scas
ds
dec
filds
mov
mov
movsb
stos
jl
add
mov
xor
pop
mov
push
shl
or
jp
jge
adc
lahf
outsl
jmp
test
mov
mov
insl
pusha
int3
fimuls
adc
stc
push
subb
or
lock
xchg
shlb
add
inc
cmovno
push
add
pop
add
out
cmp
sbb
rcrb
pop
mov
xor
mov
loopne
mov
mov
mov
inc
aas
int3
push
sbb
pop
sbb
and
mov
jle
es
inc
addr16
out
or
inc
or
jo
push
ja
in
adcb
xor
out
mov
pop
dec
les
imul
or
pop
fs
stc
pusha
adc
mov
ret
xchg
mov
test
push
cmp
ret
xchg
scas
and
in
and
icebp
icebp
inc
ret
sbb
test
mov
fs
and
adc
fbld
clc
imul
ds
mov
clc
jnp
mov
subb
inc
out
jno
ds
rcrb
idiv
pop
push
pop
jle
or
jmp
clc
jle
sub
bound
and
aam
push
jle
sarb
inc
add
adc
std
lods
arpl
pop
pop
dec
jns
xlat
in
or
jno
inc
daa
inc
xor
jno
test
mov
cmp
cld
push
call
push
stos
lock
movsb
pushf
out
jmp
shlb
sbb
addr16
push
mov
dec
out
sub
sarl
jbe
icebp
test
cltd
imul
clc
jbe
xchg
xchg
mov
scas
or
mov
jnp
or
cmp
sbbb
shll
rcrb
test
shl
pop
shrw
cmc
jo
rcll
jg
jp
adc
xchg
aam
test
add
push
pop
fs
aam
in
push
rclb
fisubrs
mov
or
aaa
push
sbb
jg
pop
adc
cmp
sub
arpl
jmp
shrl
cmp
negb
ret
imul
cmpsb
loope
and
lock
rorl
jle
fildll
push
ss
jle
mov
mov
mov
jbe
test
xchg
mov
bound
jecxz
xchg
js
pop
dec
fcmove
outsb
test
cmp
mov
sbb
pop
mov
test
loope
mov
inc
mov
pop
xchg
xor
pop
lock
movb
clc
pop
ret
pushf
lods
inc
loopne
adc
les
add
sahf
sbb
cli
xor
das
jle
sbb
imul
or
jle
jno
push
adc
out
popa
mov
lret
cli
hlt
xchg
ds
insb
cmp
cmpsl
ljmp
jg
jne
aam
xchg
sub
xor
cmp
addps
not
sub
dec
sub
out
loope
jns
aaa
subb
imul
test
sbb
cli
jle
pop
or
cmp
push
pop
inc
cmpsb
lock
loop
sahf
sbb
adc
pop
js
loop
pop
out
xchg
mov
xor
cs
out
sarb
daa
pop
mov
sub
jae
scas
push
jge
sub
mov
pop
and
sub
out
jge
add
xchg
cld
cli
mov
out
enter
das
jge
cld
fsubs
xor
call
dec
mov
fisubl
cmp
repz
fs
xchg
sub
mov
scas
cld
and
mov
add
sbb
push
mov
inc
das
jecxz
and
rorb
jle
insb
pop
cmp
xorb
jle
fwait
jp
mov
push
and
sbb
andl
jle
add
sbb
cmpsl
stos
out
mov
pop
and
push
insl
dec
adc
mov
jbe
add
cmp
jle
cmp
nop
scas
shl
fbld
into
or
mov
inc
out
and
lahf
jbe
mov
jg
fsubr
je
push
aas
ds
scas
or
sti
gs
aas
pop
lret
cmp
mov
and
fwait
movsb
mov
pop
cltd
pop
outsb
int
mov
ffreep
rol
add
and
sub
shrl
dec
jns
js
xor
out
jecxz
pop
roll
stos
mov
shlb
loope
xor
aas
ljmp
sbb
cwtl
or
inc
xchg
mov
jmp
pushf
xor
add
cmp
cs
mov
jl
jge
popa
mov
xchg
xor
mov
cmp
inc
sbb
push
sub
test
push
xor
int
scas
dec
xchg
adc
ds
add
mov
enter
mov
add
mov
pop
fmull
mov
xchg
cmpl
rorl
aam
cmc
adc
pop
or
push
mov
pusha
jge
jmp
and
push
pop
lock
mov
cmp
jecxz
jnp
lock
sbb
cmp
mov
or
cmp
std
negb
jno
add
mov
sub
jbe
ljmp
aad
lcall
push
mov
xlat
cmpl
jns
cmp
pusha
cmp
out
xchg
fcomps
outsb
push
or
jno
mov
jle
mov
aad
sbb
pop
pop
aas
jle
push
out
mov
and
jecxz
mov
push
imul
inc
hlt
or
loopne
addr16
cmp
cli
jecxz
js
xor
stos
inc
and
inc
test
ret
pop
jle
loop
pop
pop
dec
jp
dec
mov
xor
pop
dec
mov
lret
push
mov
jp
mov
push
push
mov
or
add
test
mov
cmpsb
xor
aam
add
push
cmp
xor
lahf
cld
icebp
or
call
ljmp
pop
shrb
and
sub
and
cmp
mov
add
pop
repz
inc
out
and
clc
sbbb
insb
call
test
and
les
std
lock
ds
loopne
movsb
pushf
in
fsubr
push
cs
les
xor
cmp
push
lahf
shlb
or
xchg
pop
dec
ret
outsl
push
mov
push
push
lret
adcl
pop
mov
cwtl
mov
inc
rorb
mov
repnz
repnz
sarb
outsb
in
xor
add
rorl
sbb
insl
mov
inc
mov
xchg
cwtl
subb
das
xor
imul
sbb
adc
add
std
aam
push
lea
cmp
rcrb
sub
idivl
dec
rcrb
jno
jbe
nop
je
mov
lahf
js
cli
mov
mov
mov
and
sub
in
fucompp
dec
loope
cs
repnz
loope
pop
push
inc
push
inc
nop
scas
jle
or
js
icebp
rcr
mov
sub
cmp
sbb
push
or
movhlps
xchg
sti
push
rolb
cmpsb
scas
sbb
mov
out
ja
xchg
add
push
cli
fdivrl
and
mov
jo
xor
pop
insb
cs
xchg
test
dec
hlt
popa
mov
or
jmp
mov
sub
arpl
dec
push
add
iret
out
loopne
loop
dec
lahf
jecxz
xchg
push
not
rcrb
push
push
lds
sahf
icebp
lcall
xchg
dec
cmp
mov
cmp
jge
mov
mov
jecxz
aas
cld
cmp
in
out
lcall
sarl
push
fadds
loopne
je
std
ss
sahf
xchg
movhlps
sbb
jecxz
lods
mov
daa
adc
in
out
int3
lcall
cmp
rol
aam
out
sbb
push
mov
jno
insb
inc
add
dec
les
imul
insb
cwtl
adc
rdmsr
lcall
mov
pop
cld
add
pop
inc
fdivrl
mov
xchg
pandn
stos
dec
inc
pop
fcoms
fdivrs
cmp
pop
pop
pop
pop
fisubs
sub
mov
and
fdivs
lea
in
xchg
mov
mov
stos
and
lcall
or
shll
cli
hlt
mov
icebp
mov
sbb
in
hlt
jnp
mov
dec
push
mov
test
cmp
popf
xchg
ds
pop
jl
sbbl
jnp
retw
jns
cwtl
xchg
popl
cmp
sbb
loop
pop
add
pop
mov
mov
movsb
pusha
dec
mov
adc
pushf
cmp
js
mov
inc
pushf
aaa
nop
lock
pop
mov
lahf
ds
rclb
data16
push
jge
jmp
xchg
fs
divb
and
cmp
frstor
push
out
sbb
pushf
fs
mov
shlb
dec
clc
jle
addb
shrb
pop
push
xor
pop
clc
xchg
call
jbe
out
ss
ret
test
cmp
je
scas
dec
pop
adc
cmp
jle
push
pushf
adc
hlt
shll
enter
mov
jae
mov
xchg
lock
xchg
repnz
shll
ficompl
adc
inc
cs
into
fs
jp
pop
std
xor
mov
lcall
lcall
jge
ss
sub
pop
ljmp
push
mov
idiv
mov
lock
sub
and
xchg
or
jge
sub
pop
mov
insb
pop
mov
sar
call
bound
or
sti
int3
sbb
imul
cli
fld
data16
addr16
mov
sar
stos
lahf
std
jb
mov
filds
nop
ficomps
sahf
mov
bound
filds
pop
adc
mov
mov
fwait
loopne
jecxz
pusha
int3
inc
ds
icebp
dec
sbb
loop
cltd
into
insb
out
ffreep
fdivr
mov
jge
pop
lea
fucomi
es
mov
es
or
mov
iret
and
inc
orb
shlb
jp
mov
shl
shl
int3
cs
imul
ret
loope
push
ficoms
aam
scas
sahf
stc
xchg
mov
js
mov
dec
ret
ds
scas
in
outsb
sbb
xchg
loope
add
lcall
fs
gs
and
sbb
out
dec
aam
lahf
mov
jne
ja
loopne
dec
xchg
xchg
xor
test
push
das
test
mov
mov
sbb
add
mov
cmpsl
cmp
fs
jb
pop
mov
scas
push
test
mov
mov
push
fdivrs
js
jnp
dec
pushf
pusha
ret
inc
jo
mov
gs
addb
push
js
push
bound
mov
jp
adc
push
push
push
pop
popa
pusha
sbb
push
aas
push
icebp
les
push
pusha
hlt
aad
ret
add
dec
mov
movsb
pop
rcrb
dec
xchg
cmp
dec
sarb
lock
hlt
add
inc
fisubs
pushw
add
inc
jne
lods
jle
push
es
je
sub
push
xchg
push
fst
aaa
cmc
xor
dec
add
rcrb
notb
out
adc
mov
ret
push
jp
dec
and
xchg
jbe
or
pop
push
jle
dec
ret
pop
js
mov
into
xor
insb
arpl
sahf
rorl
sbb
clc
push
push
ret
cli
loop
lea
std
or
jle
jl
testb
adc
cld
add
jnp
arpl
inc
loope
test
mov
pop
cmp
xchg
fcmovu
negl
mov
in
sbb
sahf
fwait
fwait
or
pop
imul
lret
lods
insb
fs
mov
cmp
fistl
adc
push
test
mov
hlt
add
xlat
mov
les
sbb
mov
sub
mov
or
jmp
cwtl
lret
jno
mov
add
dec
pop
cmp
sbb
add
xor
jbe
mov
pop
sub
cld
push
adc
mov
mov
addr16
jbe
ret
jp
sub
inc
mov
pop
ffreep
mov
ds
call
jns
cld
lods
scas
dec
pusha
or
mov
out
and
aad
mov
cmpsb
flds
sbb
movsb
cli
jl
fisubs
mov
jl
sub
fildll
mov
jmp
mov
mov
es
jecxz
out
sbb
mov
aaa
cld
or
shl
mov
imul
push
push
aam
push
loope
cmc
sbb
mov
inc
jl
fmuls
sbb
mov
push
dec
jl
das
jmp
nop
mov
cs
dec
loopne
mov
jg
push
mov
adcl
mov
pop
in
sarb
adc
test
ljmp
cwtl
lcall
adcl
pop
les
ds
out
stos
sbb
mov
shll
hlt
push
adc
mov
inc
call
xor
leave
cwtl
jo
fcmovnb
jnp
jo
dec
dec
xor
enter
pop
pop
mov
xor
mov
lret
dec
dec
movsl
out
lock
push
cmp
pop
clc
push
ret
push
sbb
insb
inc
dec
ret
or
cmp
cli
clc
aaa
sub
mov
cld
cli
icebp
ljmp
sub
cmp
and
ja
mov
push
icebp
lock
enter
mov
xchg
scas
bound
or
dec
pop
inc
adc
cmp
jp
jne
xor
mov
inc
shll
xor
insb
stos
mov
sbb
push
call
push
fs
mov
jb
lods
outsl
pop
push
test
mov
scas
ds
out
test
fcomi
les
adc
push
add
mov
orl
push
or
push
xor
into
jmp
jp
jo
data16
and
xchg
sarb
rorb
xor
lods
push
mov
jo
push
xor
mov
cld
mov
pop
xor
call
cmpl
sbb
rcr
jb
xor
push
or
je
mov
jge
xor
fstpl
or
xchg
test
rol
lds
lret
jmp
pop
mov
lcall
lcall
dec
loope
mov
test
jge
cmp
mov
xchg
arpl
js
adc
push
mov
xlat
js
jl
xor
or
sbb
mov
inc
and
cs
jns
mov
mov
imul
enter
pushf
xorb
mov
dec
enter
jl
stos
repnz
mov
mov
loopne
hlt
jp
cwtl
cmp
xor
jge
loopne
cli
cmp
sbb
mov
lock
pusha
test
cwtl
add
fimuls
push
pop
fimull
jae
pop
nop
add
loope
sbb
mov
inc
shll
lock
imul
jp
ds
push
clc
push
push
hlt
adc
icebp
loope
adc
push
mov
lock
cmpsl
lock
mull
push
movl
fsubrs
and
adc
inc
cwtl
in
cmc
sub
mov
inc
push
fwait
je
xlat
cmp
push
rorl
xchg
hlt
jl
sub
and
xor
jmp
das
jmp
mov
jecxz
clc
push
pusha
lods
dec
aam
or
xchg
out
sti
aam
xchg
mov
mov
dec
fsubrs
inc
pop
or
stos
in
xchg
lock
mov
add
push
shlb
jecxz
xchg
sbb
xchg
cmp
adc
insb
fisubl
push
pushf
lock
out
lds
test
mov
sub
das
mov
mov
lods
clc
xchg
scas
cltd
push
xchg
ljmp
inc
mov
mov
ds
orb
daa
sub
pop
dec
int3
sub
idivb
and
test
outsb
push
into
cmp
jo
pushf
jb
jle
xchg
sbb
shrb
out
inc
or
inc
cli
xor
xorb
icebp
sub
aam
ret
ljmp
pop
push
movsl
push
cld
mov
dec
adc
push
lock
ds
mov
lds
mov
out
lock
mov
into
mov
inc
xor
push
xor
test
jmp
mov
loop
xchg
push
pop
pop
sahf
aad
xorb
sub
cs
mov
adc
cmp
clc
xchg
mov
pop
cmp
divl
pushf
jbe
scas
pop
out
pop
js
psubb
xor
lock
mov
and
adc
and
push
sarl
and
dec
cld
xchg
shlb
movsb
pop
mov
cmp
push
pop
inc
repnz
das
push
ss
cmp
notb
jb
mov
jl
add
xchg
or
mov
and
out
rcl
sub
push
pop
inc
dec
mov
ljmp
dec
sub
lock
les
adc
into
aas
push
adc
or
loop
rorb
popa
push
dec
lea
ds
add
mov
pop
test
sub
cmp
popl
pusha
outsb
mov
loopne
ljmp
cs
stos
or
cli
into
icebp
sti
call
bound
mov
mov
outsl
test
clc
or
mov
lds
lods
cmp
push
cs
loopne
pop
out
dec
jge
jl
adc
jle
pop
aam
cmc
inc
add
aad
xchg
jge
imul
add
call
sbb
add
addl
inc
cld
adc
mov
pusha
rcr
push
cld
ss
insb
rorb
push
mov
haddpd
mov
movsb
pop
cmp
enter
pop
mov
mov
outsb
adc
icebp
ret
mov
cmp
pop
shrb
push
push
notb
jmp
hlt
jge
sbb
mov
cmp
repnz
push
jle
data16
pause
xor
mov
loop
add
or
sub
mov
pop
je
pusha
push
or
hlt
outsb
pusha
pop
push
pop
and
push
jmp
mov
adc
shlb
jle
sub
mov
movsl
pop
call
sarl
cli
pop
mov
cmpsb
xabort
xchg
mov
mov
mov
stos
test
dec
js
clc
and
mov
pop
aas
mov
lcall
jmp
fldenv
adc
cli
mov
mov
pop
nop
or
xchg
lock
mov
lock
pushf
jg
ds
mov
or
scas
popf
cmp
fsubs
insb
out
push
mov
or
and
ret
push
in
inc
outsb
outsb
cmp
xchg
or
mov
out
mov
lods
dec
pop
mov
mov
lock
inc
mov
ljmp
enter
clc
js
lret
jl
andl
jbe
sub
push
add
aam
xchg
sub
aam
clc
jle
js
repz
ljmp
pop
xchg
or
jmp
clc
inc
ljmp
pop
hlt
or
dec
je
loopne
dec
or
cmp
loopne
pop
push
jne
push
push
or
cld
mov
cmp
ljmp
push
jmp
clc
or
cmp
sbb
rorb
ret
cmpsl
mov
aas
add
xchg
dec
imul
pop
inc
lahf
adc
dec
arpl
or
push
mov
pushf
mov
pop
dec
xchg
ljmp
push
mov
jo
imul
lock
and
push
lea
and
rcrl
push
jo
je
lret
inc
movb
addr16
add
call
cld
test
sub
push
mov
insb
sti
push
pusha
add
add
mov
lock
xlat
mov
push
mov
faddl
out
push
aam
xor
jl
fdivrs
sub
adc
sbb
sub
loopne
cmp
mov
sbb
ds
add
jecxz
movsb
xlat
and
sbb
rolb
sahf
hlt
or
fiadds
adc
adc
cmpb
out
insl
cld
inc
scas
fcmovb
cmp
cmc
fld
sti
push
mov
test
mov
sarl
cli
icebp
js
sbb
mulb
adc
pop
pop
mov
outsl
mov
dec
cmp
movsl
mov
pop
dec
push
or
ljmp
adc
mov
sbb
xchg
ret
sbb
hlt
mov
pop
loop
jbe
adc
lret
jl
loope
bound
test
out
mov
das
and
sub
cmpsl
sbb
shrb
xorb
mov
js
sahf
test
fldenv
sub
cmp
xchg
adc
insl
jmp
mov
popa
jge
leave
cmp
bnd
inc
outsl
std
sbb
and
adc
js
lret
les
lods
xchg
mov
jbe
insb
in
and
and
bound
add
repnz
jb
and
dec
fmuls
icebp
hlt
cs
jp
fidivs
xchg
mov
xor
ret
mov
mov
roll
rolb
inc
pop
xchg
and
or
add
jo
ret
pop
shl
xchg
incl
insb
jmp
mov
pop
lahf
push
mov
mov
add
aam
adc
jg
mov
sbb
and
inc
xchg
orb
call
cwtl
xchg
lods
jecxz
loope
dec
out
dec
mov
popa
mov
ljmp
adc
dec
ret
icebp
mov
lret
push
xchg
into
mov
out
in
mov
inc
pop
ror
lds
js
mov
jmp
pop
ret
sbb
fiaddl
in
mov
push
imul
jp
add
sarb
dec
fnstsw
cmp
leave
adcl
dec
push
decl
mov
or
notb
xor
movsl
xor
in
sub
adc
push
pushf
xchg
addb
mov
push
sub
sbb
xor
and
xchg
js
icebp
testb
cmpl
movsl
jb
push
sahf
dec
sbb
dec
jge
jge
test
js
andl
xchg
mov
cmpsl
mov
cmp
sti
pop
sbb
add
shlb
pop
fbld
xchg
outsb
cmc
xor
cmp
cltd
rclb
and
jp
clc
loope
nop
pop
add
je
lret
loopne
shr
ds
jnp
loop
imulb
mov
fiadds
ds
pop
mov
clc
bound
rclb
pop
ret
xor
sbb
loopne
fs
clc
imulb
mov
or
mov
iret
les
outsb
ficomps
dec
mov
push
xor
mov
inc
jno
cmp
push
rorb
dec
lahf
sahf
cwtl
sbb
lods
or
bound
inc
sub
pop
pop
cli
or
push
push
inc
mov
ret
repnz
ret
rcl
or
sbb
mov
adc
cli
pop
pop
loopne
pushf
lret
subb
mov
cld
js
js
mov
inc
lret
xchg
inc
cwtl
or
inc
ss
fnstcw
cld
inc
in
cs
adc
or
lea
in
pop
mov
sbb
jns
push
daa
adc
iret
imul
divb
pusha
dec
in
and
cmp
idiv
sbb
mov
jns
into
dec
jns
inc
adc
movsb
ds
jl
and
cld
js
xchg
add
es
pop
pop
push
icebp
lds
cmp
mov
push
pusha
outsb
lods
sbb
fsubrp
ret
mov
push
xchg
out
adc
push
mov
dec
nop
push
mov
std
cmp
and
mov
sub
jle
xchg
fucom
xchg
xor
inc
or
jmp
test
test
sbb
sub
fcomps
adc
cmp
mov
out
xor
bound
shrl
mov
cwtl
add
mov
dec
push
icebp
loopne
test
dec
mov
adc
popf
or
mov
adc
cwtl
pop
jo
icebp
lret
scas
cmp
jno
loop
inc
nop
rclb
lahf
dec
cmp
xor
loopne
addr16
aam
push
xor
mov
rcrb
jg
shrb
aam
cmp
adcb
dec
adc
clc
hlt
pop
cli
cmpsl
cli
lret
rolb
lea
adc
jno
dec
xchg
adc
int3
js
or
cs
mov
adc
test
hlt
sbbb
sbb
mov
sbb
sbb
pop
mov
push
clc
mov
xor
mov
dec
enter
jle
rcrl
jmp
and
ljmp
or
hlt
sbb
or
fwait
sahf
mov
or
mov
add
push
enter
add
mov
fmul
xchg
fwait
lods
inc
orps
mov
ja
or
roll
adc
or
je
mov
lcall
iret
and
push
rcrb
dec
sub
popf
loop
push
xlat
and
testb
pop
dec
aaa
bound
xor
js
sbb
sub
pop
cmc
mov
imul
jle
cmp
loopne
pop
mov
mov
push
jge
fwait
mov
into
mov
or
push
sub
test
xchg
push
out
add
hlt
dec
adc
mov
inc
adc
es
out
sub
and
mov
inc
dec
xchg
cmc
pop
xor
mov
xor
rorb
add
insl
adc
jne
mov
mov
or
ds
lret
out
arpl
loop
ds
jle
jno
push
push
inc
fcoml
push
lods
xchg
ss
cs
les
sub
push
scas
sarb
frstor
fcompl
or
les
push
jmp
dec
jl
xchg
lret
xor
sti
out
in
push
sahf
mov
pop
inc
pop
into
sti
js
loopne
loop
dec
and
sarb
mov
jo
push
mov
subl
mov
mov
in
and
pop
dec
js
mov
hlt
and
sbb
loope
pop
sti
lods
push
imul
cmp
nop
mov
sub
arpl
push
adc
cmpsb
inc
dec
sbb
mov
xchg
push
leave
add
adc
rcl
sti
mov
or
xor
mov
aam
xor
bound
sbb
cwtl
iret
inc
lods
aam
mov
jl
jbe
enter
testl
and
add
ja
dec
pop
movsl
xchg
adc
scas
lret
push
pop
jg
mov
mov
enter
fimuls
es
stos
cmp
sar
inc
mov
bound
sbb
mov
mov
inc
or
xlat
adcb
xchg
fsubrp
loope
daa
push
cmp
adc
sbb
or
cmp
jmp
stos
imul
mov
jle
xchg
push
hlt
imul
add
push
shr
add
ds
gs
pop
mov
rclb
movsb
xchg
mov
outsl
mov
pushf
sub
xor
adc
test
push
ret
lea
sbb
mov
inc
call
insl
cmp
js,pt
call
ljmpw
es
inc
aad
hlt
xorb
mov
loopne
mov
lock
dec
sti
adc
xchg
pushf
pusha
jecxz
addb
push
insb
scas
in
jecxz
push
fdivl
jmp
js
ljmp
and
jle
aam
pop
in
and
pop
jl
enter
or
je
mov
cmp
sub
ds
repnz
pop
or
mov
stc
inc
sub
es
mov
inc
loopne
pop
mov
sbb
add
fiaddl
mov
or
nop
mov
fcmovnb
insb
pop
negl
jp
insl
mov
ficoml
mov
mov
inc
cmp
lods
mov
loope
and
divb
adc
jo
nop
les
xchg
dec
lock
cli
jne
inc
cmp
jno
mov
cmpsb
add
rcrb
cmp
xchg
cli
jecxz
fldcw
xor
push
jo
enter
sbb
arpl
xchg
xor
repz
cld
or
push
lcall
out
cmpb
roll
mov
rcr
mov
or
orl
sbb
add
xchg
clc
js
sbb
lods
dec
int3
xchg
xchg
movsb
push
jo
xchg
xor
mov
inc
subb
ja
xchg
fadds
add
or
bnd
mov
addb
push
or
sbb
shr
inc
cmp
ret
int3
sbb
cmp
aad
cmp
add
scas
and
dec
or
mov
jo
push
xchg
xor
sbb
shll
test
add
fistps
clc
loopne
leave
xlat
or
fsubrs
mov
lret
pop
push
les
ljmp
ss
orb
in
mov
mov
push
push
stos
icebp
rclb
in
ljmp
aam
lret
jp
shrl
orb
sub
out
fnstenv
cmp
addr16
push
inc
loop
lock
das
mov
mov
faddl
or
mov
subb
pop
inc
jecxz
movb
pop
add
roll
les
xor
jae
or
cli
shlb
sbb
cmp
mov
out
outsw
jnp
je
dec
stos
adc
insb
xor
mov
sarb
jp
cmp
cmp
push
push
push
fimuls
inc
es
inc
xlat
adc
out
std
xchg
clc
notb
das
xor
scas
xorb
xlat
mov
mov
ficoms
push
push
movsb
stos
neg
and
adc
xor
cmp
cmc
fbld
dec
pop
jle
loope
xor
hlt
shrl
inc
stos
in
mov
xchg
xor
mov
popa
vxorpd
movsb
pushf
rolb
ja
push
cmpsl
scas
xor
pop
inc
xor
push
pop
arpl
clc
std
adc
or
outsb
fnstenv
repz
cltd
mov
cwtl
pop
sarb
mov
xor
stos
xchg
mov
rclb
and
and
mov
loop
xor
or
test
cmp
mov
mov
inc
mov
xchg
shr
mov
and
xor
mov
ret
xchg
in
ret
pop
out
mov
js
rcl
dec
movsb
push
dec
add
mov
inc
ljmp
fsubrp
clc
mov
fbld
and
ret
rcl
ret
fwait
das
and
jno
sub
pop
lret
cmp
js
stos
adc
hlt
cmp
inc
subb
xor
ljmp
inc
fmull
push
cmpsb
push
aam
movsb
inc
repz
jns
push
decb
add
cld
lock
mov
es
jo
sar
hlt
icebp
movsb
nop
sub
mov
lock
fwait
cmc
cmp
syscall
sarb
pop
jo,pt
add
iret
icebp
pop
cs
js
cmp
xchg
jl
ret
jle,pn
adc
push
lcall
push
cld
pop
push
mov
shlw
mov
loopne
jp
mov
out
xor
pop
nop
push
xchg
sbb
xor
pop
pop
ret
fcomp
add
dec
ljmp
dec
clc
jo
cwtl
into
sahf
pop
movsb
mov
push
sub
fs
test
mov
enter
xchg
lds
jb
and
cli
jle
ret
and
fimull
rolb
jl
clc
mov
jmp
cld
push
jecxz
jl
push
int
insb
lods
scas
movsb
mov
mov
mov
ds
lret
inc
cld
shl
inc
mov
mov
fistpll
pop
pop
mov
vucomiss
pop
mov
mul
push
mul
xor
inc
andb
jle
dec
insb
out
or
push
jle
dec
push
es
push
sbb
dec
pop
mov
push
and
pop
inc
xor
test
test
pusha
mov
loop
pop
xchg
inc
cmp
hlt
lock
cwtl
movl
push
xchg
cli
clc
cs
sbb
mov
mov
or
cmp
clc
and
andb
repnz
mov
inc
push
sahf
addr16
pop
dec
mov
add
adc
mov
jo
mov
cs
sbbb
sub
insl
fldl
test
mov
imul
cmp
test
out
sarb
pop
dec
outsb
pop
mov
mov
adc
cltd
cmpsb
or
std
dec
call
pop
pop
add
rclb
pop
loopne
add
xchg
flds
push
je
enter
bts
push
jns
jge
lock
lcall
mov
imul
vhaddps
and
pop
pmaxub
mov
dec
sub
bound
pop
cmpsb
jbe
lds
mov
cmpsb
dec
sbb
movsl
push
mov
and
ja
ret
icebp
js,pt
xor
dec
jge
jge
mov
mov
out
into
pusha
mov
out
sbb
pop
xchg
mov
sbb
or
mov
fcmovu
jle
out
jnp
out
fs
mov
fisttpll
inc
into
pushf
lods
std
rcl
fdivl
push
cs
or
mov
mov
xchg
and
jge
ljmp
or
cld
ds
mov
pop
push
repz
subl
mov
roll
lock
lea
add
cmp
inc
sub
mov
out
jl
adc
xor
mov
push
mov
inc
pop
add
lock
sahf
insl
nop
mov
mov
sti
inc
cmp
xchg
and
mov
push
das
orb
mov
divl
pop
mov
push
rcl
bound
or
rorb
icebp
loop
stos
inc
sbb
movsb
add
mov
xchg
mov
cli
hlt
inc
inc
mov
in
jl
es
lock
je
shl
push
aad
pop
and
fsubr
pop
loope
push
cmp
push
std
imul
scas
ret
mov
jge
or
push
cmc
rcrb
pop
sahf
scas
loope
lds
lock
mov
xchg
mov
enter
sub
xor
pop
pop
sub
icebp
inc
popa
sbb
sbb
test
mov
xor
xor
ljmp
lcall
mov
icebp
jle
cmp
insb
sbb
or
inc
adc
xchg
inc
lret
daa
push
mov
cltd
ss
adc
push
jle
mov
roll
add
sarb
mov
cltd
in
sbb
fidivs
cli
push
push
mov
lods
fidivrl
js
mov
cwtl
cwtl
repz
ja
inc
add
out
push
ret
cs
cs
or
mov
cltd
movsb
jne
mov
mov
bound
fcomps
mov
and
and
dec
daa
test
fbld
adc
push
mov
fldenv
icebp
mov
imul
nop
mov
rcl
and
ret
dec
push
stc
xchg
out
pop
cmp
mov
inc
out
and
cmp
jns
test
sub
jne
loop
inc
jne
adc
aas
mov
ficomps
cmpl
adc
inc
pop
movsb
mov
sub
out
pop
and
cmpsl
stos
icebp
mov
dec
js
inc
aaa
cwtl
movsb
ret
xchg
xor
je
pop
aad
pop
lahf
and
jp
ljmp
mov
sti
add
push
adc
dec
lods
repnz
icebp
mov
icebp
ljmp
pop
add
mov
push
sbb
mov
hlt
pusha
add
xor
scas
push
or
out
mov
push
in
jge
ljmp
cmpsb
call
add
inc
sbb
mov
shrb
cmpsl
push
pop
sbb
aam
cwtl
mov
cmove
mov
ret
lds
mov
jecxz
std
js
fcoml
push
sahf
jle
in
rolb
lahf
addb
loopne
add
ljmp
mov
add
sub
push
loop
xlat
js
push
or
gs
jno
xchg
add
and
nop
in
and
scas
jle
bound
inc
mov
sub
subl
scas
icebp
icebp
jmp
stos
push
mov
or
mov
cwtl
and
pusha
mov
loope
add
sub
pushf
cmpsl
xor
loope
adc
test
lods
inc
jle
mov
das
jbe
dec
mov
rcl
stos
pop
push
or
adc
mov
loopne
xchg
push
lcall
cmpsl
fists
mov
or
sbb
jecxz
cs
cmp
or
mov
stos
push
popa
push
and
dec
push
gs
pushf
mov
mul
psubusb
sub
sbb
andb
pop
lret
mov
xchg
mov
dec
and
movsb
cmp
cmpsb
sbb
clc
popa
push
addr16
popa
adc
or
add
add
insb
dec
pop
mov
ja
mov
es
js
mov
fdivr
fisubs
loopne
aam
cmp
jo
lods
inc
loopne
jne
push
orb
nop
sti
sub
aaa
jbe
mov
pop
dec
fwait
and
mov
and
lahf
jb
cmpsb
pushf
repz
js,pt
jbe
cwtl
xchg
clc
mov
lret
xchg
sahf
fcoml
and
cltd
pusha
dec
sbb
push
out
roll
dec
ret
add
mov
push
push
mov
lock
mov
inc
rcr
cmpsb
mov
aas
test
dec
sbb
sbb
lds
sarl
inc
std
mov
iret
ret
lock
adc
pusha
add
jge
daa
ret
in
in
dec
lods
or
and
cli
stc
cli
inc
in
sbb
xchg
add
cmpl
ljmp
xor
inc
mov
push
out
ret
mov
xor
inc
fdivl
pushf
dec
inc
jecxz
lahf
dec
jb
xor
es
lahf
dec
loopne
hlt
mov
or
jl
sbb
add
arpl
jbe,pt
mov
mov
lds
stos
jnp
push
filds
enter
idivb
test
pop
mov
fdivr
fcomi
aas
cmp
je
adc
sbb
jo
out
lret
cmp
and
cli
cmc
in
xchg
mov
mov
mov
add
movsl
lock
mov
adc
pop
or
inc
cmpb
jo
jl
nop
lods
sbb
mov
sub
arpl
shr
dec
scas
sbb
push
mov
addr16
ds
fisubrs
scas
pop
insb
pop
inc
push
sbb
pop
sahf
data16
jb
push
and
jns
daa
push
and
scas
stos
cmc
dec
ret
shlb
ss
mov
dec
jmp
cmp
pop
hlt
add
mov
aam
cmpsb
loop
push
inc
fnsave
adcl
fnstcw
clc
test
nop
jo
dec
gs
adc
jnp
mov
bound
cld
mov
xchg
pop
mov
add
and
int3
jne
rcll
idivl
xor
adc
std
lock
rcll
mov
pop
mov
lock
fnstsw
xchg
imul
shlb
jecxz
cwtl
jo
leave
repnz
push
pop
pop
nop
daa
inc
cmp
clc
loope
mov
cmovne
xor
ret
sbbb
loope
jle
bound
dec
jge
xor
addl
inc
sarb
sahf
sbb
popf
dec
aaa
push
cmc
mov
adc
jnp
or
and
clc
pop
and
mov
jmp
jbe
mov
orl
add
idivl
loopne
cmp
pusha
shl
aad
adc
adc
mov
lock
jo
cmp
mov
cvtpi2ps
or
lds
cmc
adc
adc
push
mov
mov
loope
rol
mov
push
adc
cmp
stos
add
mov
std
clc
jmp
fidivrl
pop
test
jne
cli
and
jle
faddl
les
mov
pop
xchg
lret
mov
bound
and
les
outsl
ljmp
sub
sbb
push
inc
lock
or
mov
and
mov
aas
std
and
cli
ficompl
inc
xor
adc
sti
ljmp
xor
push
xlat
les
icebp
cltd
ret
sar
sbb
js
jne
fsubrl
cmpsl
xor
fsubrs
rcrl
push
cmc
push
loopne
gs
inc
inc
idivl
lea
test
lock
mov
imul
daa
ret
lahf
es
or
inc
jp
or
mov
xor
arpl
push
push
inc
jge
mov
jge
cmp
ds
pop
push
cmp
movsb
push
pandn
pop
sbb
push
jle
shrl
push
inc
add
mov
pop
bound
lcall
cli
orb
sti
jb
sub
adc
data16
inc
js
ds
mov
cmp
jmp
jo
inc
popf
insl
cmpsb
inc
std
subl
fs
ret
loopne
mov
ret
cli
mov
mov
inc
scas
mov
cmp
lds
in
sub
pop
dec
in
or
cmovns
adc
mov
adc
xor
hlt
sti
sub
pop
std
in
sub
jnp
fidivs
outsb
adc
movsb
dec
pop
test
jle
icebp
mov
lods
push
fcmovb
jnp
jge
lret
mov
dec
test
adc
xchg
sub
add
jmp
adc
test
les
mov
mov
mov
loopne
fbld
mov
xchg
add
or
scas
jne
loopne
scas
fistpll
ret
out
pop
test
sub
lods
sahf
jle
test
mov
sbb
xorb
shll
inc
mov
fidivrl
test
pop
cld
cmp
ljmp
mov
push
aad
add
mov
sti
jle
out
dec
movsb
adc
bound
push
push
pop
mov
adc
andl
pop
cmp
push
push
push
sub
scas
popa
js
jle
dec
push
incb
rorb
enter
fmull
inc
sub
test
xchg
pop
mov
test
pop
cwtl
fwait
js
pop
pop
add
lock
sbb
out
das
adc
inc
ret
and
and
cmpsl
or
loop
adc
cltd
clc
sti
mov
ss
pop
jp
add
mov
add
push
jl
movsl
testb
insb
mov
pop
pop
std
clc
xor
es
lock
call
ja
cmp
push
and
cmp
repnz
sbb
xor
and
imul
mov
pusha
into
les
push
ds
sbb
sub
fmul
decl
scas
mov
rolb
xlat
dec
pop
xchg
cmpsb
cltd
add
clc
ljmp
into
clc
pop
iret
rol
idivl
jbe,pn
ficomps
add
rclb
dec
icebp
jle
insb
inc
cmp
sub
mov
pop
push
xchg
daa
and
fcmovu
push
add
sahf
mov
es
movsb
loopne
test
repnz
fstpt
push
push
icebp
rorb
mov
xor
dec
dec
dec
call
dec
jp
mov
jbe
movsl
xor
sub
stc
addr16
call
push
dec
loop
xchg
mov
das
mov
mov
fildll
shlb
lcall
mov
ds
sub
test
xchg
out
or
jne
addl
jp
outsb
cmpsl
in
xor
mov
cs
mov
push
mov
push
or
mov
xchg
mov
in
and
nop
cmp
filds
hlt
adc
mov
jl
mov
xor
cltd
mov
pop
pop
and
push
call
add
loop
lds
push
shl
mov
jmp
add
push
cli
roll
roll
and
ret
sti
loopne
sahf
mov
cs
lret
stos
shr
je
fdivrp
loop
roll
xchg
cmpsl
add
xor
pop
mov
pop
shl
out
lahf
adc
and
pop
pop
sub
jo
cmp
mov
dec
pushf
es
cs
mov
lret
mov
fs
ror
mov
adc
adc
push
cli
lock
lock
dec
ds
js
out
aaa
push
cmp
lcall
inc
inc
aas
mov
push
shl
jle
out
sbb
xor
fdivs
mov
and
mov
add
int
cld
adc
jge
mov
or
add
sbb
jnp
test
or
sti
push
incb
xchg
push
mov
loopne
mov
pop
lock
movsl
push
loop
xor
cld
mov
clc
or
or
inc
jg
push
rcrb
jle
mov
mov
push
sbb
sti
aad
imul
shlb
jne
add
ret
adc
cmp
repnz
sub
xlat
xchg
jns
add
pop
mov
sbb
test
cli
cmp
xchg
mov
mov
add
cmp
nop
js
sbb
je
xlat
out
lcall
js
mov
arpl
adc
arpl
jns
stos
jl
cmp
bound
out
in
inc
std
push
jno
and
popa
fs
and
add
loope
cs
je
je
pop
rcr
and
inc
xchg
jno
cli
cmc
cmp
push
and
mov
jecxz
enter
jns
jb
adc
test
repnz
or
mov
xor
fxrstor
mulb
subl
dec
icebp
fwait
and
dec
sub
xchg
icebp
ss
es
pusha
and
lahf
mov
stc
xorb
or
or
out
pop
mov
shl
adc
les
mov
adc
xchg
movsb
fwait
sbb
sbb
mov
pop
xor
xchg
rclb
sub
js
mov
and
lret
pop
xchg
scas
addb
fbld
or
aam
pop
mov
inc
scas
add
push
je
jns
out
orl
sub
cmp
andl
js
jp
push
xor
pop
shl
lods
sub
lret
outsb
out
cmpl
aaa
mov
rclb
ret
mov
sar
jmp
jecxz
add
lds
loop
repz
pop
xor
xchg
pop
mov
negb
xchg
xlat
or
adc
adc
sahf
and
xor
rorb
dec
mov
xor
adc
insb
repnz
ja
out
mov
xchg
adc
sub
mov
adcb
lods
lret
lock
std
push
scas
sti
inc
push
fists
mov
xchg
adc
subb
rol
or
cmp
push
sub
mov
sbb
inc
cwtl
es
cmp
jo
inc
jl
jae
int3
mov
mov
push
into
test
sbb
mov
icebp
inc
adc
int
inc
pop
jo
sahf
pop
cmp
cmp
mov
ja
sub
pop
push
es
cltd
adc
xchg
cmp
loop
rcrl
dec
cmpsb
jmp
pop
mov
sbb
mov
jecxz
shrb
cmp
daa
adc
idivb
mov
mov
sti
rolb
rcrb
outsb
outsb
cmpb
jmp
sbb
and
rolb
xlat
outsb
cmp
jmp
xchg
out
sbb
and
fiaddl
rorl
bound
dec
pop
shlb
sbb
add
mov
test
out
pop
add
cmpsb
mov
in
cmpsb
stos
roll
in
adc
mov
fbld
out
int
jmp
and
inc
in
repnz
mov
shlb
sarb
sub
mov
and
lea
xchg
mov
bound
push
mov
rclb
loopne
filds
les
stc
shrb
mov
and
or
push
cli
jo
sbb
popa
dec
xchg
test
mov
call
jl
out
sbb
testl
das
loopne
push
cmpsb
dec
ds
mov
js
cli
clc
jmp
cmp
adc
jl
sbbb
xchg
stos
pop
jb
jb
sbb
sarb
in
dec
xchg
xor
mov
or
mov
pop
daa
mov
in
jp
adc
adc
inc
rol
cmc
inc
int3
jl
js
and
or
insb
mov
mov
and
dec
mov
movsb
js
dec
pop
loopne
cmovbe
inc
mov
imul
jp
rolb
push
jle
mov
int
mov
mov
jae
int3
in
inc
add
add
cli
sub
sahf
sub
addl
aas
dec
lcall
into
imul
xchg
xlat
cmc
xchg
mov
and
aam
leave
js
cli
mov
aas
pop
cmp
xlat
out
sbb
ljmp
shll
in
test
inc
lods
jb
lods
inc
push
or
test
je
push
sbb
inc
lock
into
xchg
and
mov
js
inc
popa
insb
add
jp
insl
xor
rclb
in
xor
xor
pusha
int3
pop
in
adc
cmp
lret
andl
cmpsb
out
and
call
sub
and
pop
mov
mov
inc
adc
out
shlb
mov
test
js
push
adc
sahf
in
loope
loope
jmp
xlat
cmp
ljmp
adc
sbb
jge
mov
iret
jbe
push
imulb
xchg
int3
push
xchg
sub
jp
mov
xorl
sbb
jge
repz
dec
mov
pushf
or
or
in
xchg
nop
lock
loopne
adc
push
sbb
test
sbb
cwtl
inc
out
or
inc
cli
test
adc
cli
or
ds
jno
lea
xchg
mov
sbb
cmp
sub
mov
add
mov
dec
or
sub
test
cs
imul
or
mov
cwtl
fsubl
adc
sbb
insl
outsb
xor
in
jle
push
ficoms
int3
pop
xchg
pop
adc
mov
mov
jl
sbb
aad
in
out
cmp
repz
movsl
push
sbb
test
imul
mov
sti
pop
andb
pop
nop
or
mov
cmp
mov
pop
jle
jo
mov
ret
and
adc
xor
insb
pop
xor
jp
mov
je
lock
pop
mov
xchg
cmpb
push
mov
or
rorb
add
std
icebp
ret
shrb
sbb
push
scas
xor
sbb
pop
push
enter
loope
ret
ret
and
xor
xlat
push
es
mov
cld
aaa
pop
imul
js
pusha
cs
dec
clc
in
scas
dec
pop
jg
add
sub
jno
subb
repz
mov
jmp
push
adc
mov
push
sbb
mov
insb
mov
cmc
add
lret
fmuls
lcall
call
push
lahf
dec
adc
sbb
jge
clc
hlt
or
nop
and
mov
push
inc
xor
xchg
pusha
test
mov
je
mov
loop
mov
and
jl
mov
rcrb
faddl
push
sbb
add
icebp
icebp
sti
jno
inc
sbb
mov
jle
cmc
or
inc
int3
dec
mov
sub
scas
jp
hlt
sbbb
or
jle
sbb
gs
mov
mov
in
jmp
cmp
lret
rolb
inc
movsb
out
lock
xchg
shlb
mov
mov
sub
stc
sbb
clc
mov
rolb
es
cltd
push
xchg
sub
inc
repnz
dec
inc
fistpll
hlt
shll
subb
sub
pop
and
xor
mov
pushf
push
mov
xchg
movsb
ds
jbe
popf
sub
xor
jbe
cs
jge
cmpsb
dec
popa
loop
mov
inc
inc
jl
sub
movsb
pop
es
lea
jb
mov
inc
or
pop
jmp
sub
sub
jbe
into
cs
rolb
dec
jl
loopne
outsb
xchg
cwtl
sub
into
icebp
mov
test
les
add
pop
pop
pop
mov
xchg
psubusb
sbb
repnz
mov
hlt
out
fs
sbb
cmp
subb
pop
aas
pop
push
pop
pushf
int3
mov
insb
push
wbinvd
jl
jecxz
scas
push
mov
shrb
lret
mov
stos
fst
jge
sbb
cmp
jne
inc
lock
gs
es
or
cmp
mov
xchg
lret
es
pop
cmp
mov
pop
pop
fs
mov
inc
mov
fcomps
cmp
rcr
rolb
mov
xor
lock
into
je
xchg
sub
icebp
add
cs
sub
jle
loop
add
mov
ret
jle
pushw
or
xor
loop
out
xchg
pusha
add
cld
xchg
lods
call
mov
insl
outsl
mov
sahf
orb
sbb
inc
sbb
and
mov
call
mov
jne
pusha
cmpsl
sbb
jge
sti
mov
mov
dec
push
loop
loop
inc
movsb
sti
mov
xor
aam
xor
adc
and
loop
inc
loopne
and
add
cmp
and
mov
push
push
dec
shrb
or
mov
push
mov
inc
je
pop
xor
addb
pop
mov
loopne
or
dec
sub
movb
adc
mov
es
cmpsl
mov
push
addb
mov
popa
add
gs
mov
insb
or
or
push
into
xor
fwait
loopne
movsb
cmpl
lds
mov
pop
push
dec
loopne
aas
cmpsb
inc
lcall
adc
lock
ret
add
cld
fs
or
lods
ja
mov
ficoms
xchg
cli
out
aam
movsl
mov
sub
das
outsl
dec
sub
loopne
sbb
sbb
cwtl
test
daa
pop
cli
mov
xchg
or
push
out
xor
rcr
rclb
dec
ljmp
add
pop
mov
jp
add
adc
pusha
sub
mov
mov
mov
ds
pop
xchg
out
movsb
add
cli
icebp
loop
xor
or
mov
dec
dec
fnstsw
adc
inc
popa
cmc
sbb
cmp
ja
idivl
and
push
ret
clc
in
out
addr16
stc
lcall
pop
mov
xchg
jmp
lds
xchg
xchg
fisubrl
inc
mov
pop
shlb
das
sarb
mov
sahf
in
inc
lods
aaa
mul
mov
sbb
out
fstps
cmp
into
in
sub
fwait
lock
sub
mov
fs
xor
xchg
lahf
mov
xor
jecxz
rol
mov
mov
jo
lret
fists
ds
loop
rorb
cmpsl
inc
pusha
lods
orb
add
jecxz
and
arpl
cmc
cli
jbe
cmp
jne
loope
mov
lret
fisubrl
ljmp
pop
cmp
ds
pop
jle
scas
inc
mov
xor
cld
cmpsl
mov
or
push
sahf
or
clc
popa
ljmp
mov
or
xchg
fldt
pop
jmp
ds
loopne
inc
sub
jecxz
std
jb
jge
pusha
xor
cmp
into
pushf
inc
add
scas
lret
cmp
inc
add
xor
xor
sub
in
mov
in
ret
pop
adc
mov
in
cmp
or
sub
lcall
sub
pop
test
jl
movsb
and
ss
mov
pop
js
or
and
nopl
fwait
nop
ja
shrb
xchg
je
das
test
jp
ja
cmp
jp
add
or
push
shrb
dec
sbb
insl
insb
sub
pop
mov
sbb
das
loope
sbb
sarb
sub
ret
pop
jne
cmc
mov
mov
test
xlat
fs
rolb
or
and
aas
push
jle
fldt
scas
movsl
rcr
and
push
jle
mov
ljmp
dec
pop
xlat
xchg
jl
inc
imul
pushl
jb
std
clc
push
rorl
mov
out
mov
aam
enter
pop
adc
ss
gs
mov
ret
pop
enter
pushf
out
pushf
sbb
add
xor
lea
insl
jge
out
lahf
mov
dec
out
das
insb
add
fcomps
push
fxtract
stos
aam
fidivrs
loopne
dec
inc
arpl
sub
mov
and
int3
add
cmp
push
pop
pushf
cltd
adcl
lock
sbb
pop
gs
xor
fs
pop
aaa
xor
or
int
ret
or
aaa
in
in
sub
xchg
outsl
jmp
hlt
int3
xchg
push
mov
movsl
gs
xor
into
fs
mov
add
cli
pusha
jl
jmp
mov
inc
movl
xlat
sbbl
mov
ret
or
nop
push
popa
sub
mov
rorl
or
mov
in
push
das
call
data16
sbb
and
and
add
lods
mov
or
pop
aas
cmp
mov
shll
adc
adc
adc
clc
lea
adc
orl
ror
jle
adcb
and
loope
movsl
cld
pop
mov
push
jecxz
jne
and
dec
in
int3
loop
out
xchg
push
xor
adc
test
lcall
cmpsb
mov
sub
scas
rcr
dec
jmp
adc
jp
roll
insb
packsswb
sbbl
mov
js
lcall
ret
adc
fcmovb
pop
jge
ficoml
pop
aam
mov
pusha
pop
add
pop
movsb
ljmp
repnz
bound
xchg
mov
cmp
icebp
or
mov
roll
lods
pop
sub
jecxz
inc
sbb
lahf
pop
out
sahf
int3
push
sahf
gs
push
mov
inc
or
xchg
lods
jp
les
mov
mov
aaa
mov
pop
fs
test
inc
xor
popl
scas
cmp
mov
push
jle
fs
mov
xchg
jno
mov
pop
adc
mov
push
adc
scas
out
testb
outsl
or
or
mov
sub
and
out
fisubs
sbb
jne
push
push
sbb
add
add
lods
imul
jp
or
adc
fs
xor
cmp
aad
popa
mov
test
jp
clc
dec
pop
jb
fs
aas
divb
mov
push
dec
mov
pop
test
movsl
jbe
xchg
and
adcl
jne
sarl
int
mov
nop
dec
mov
push
movb
xchg
jmp
and
cmp
sub
mov
sub
xchg
lock
sub
cmp
repnz
sbbl
fildl
mov
xchg
aad
fwait
fwait
fwait
inc
lret
rorl
adc
in
jo
sahf
aas
or
cli
cmc
sbb
or
lods
fdiv
das
jmp
sti
cmp
or
je
mov
js
or
xor
add
loopne
cmova
xchg
mov
push
pop
sbb
cmp
cmpsb
fs
pop
cmp
xchg
push
aas
xor
fstps
ljmp
mov
aam
js
lock
jb
call
mulb
mov
js
test
negb
loop
loope
aad
shll
in
or
jnp
sahf
jle,pn
lea
cld
dec
jl
xor
cmpsl
pop
jle
pop
lret
cs
jge
cmc
add
call
lea
mov
push
sbb
jg
mov
loopne
sbbb
dec
in
jp
push
xor
xchg
clc
cmp
stc
pusha
out
inc
test
push
dec
cmp
inc
xchg
mov
mov
pop
pop
fdivl
add
jmp
insb
cmpsw
xchg
hlt
fwait
rol
fmuls
and
mov
bound
xchg
pop
inc
inc
jo
mov
dec
out
orl
lods
mov
subb
mov
lcall
or
xchg
jle
jg
bound
mulb
je
movsb
cwtl
repz
cwtl
sbb
inc
rcrb
sbb
pusha
pop
mov
popl
sbb
mov
inc
inc
sahf
and
mov
push
scas
gs
and
cmovo
lods
xchg
test
ds
mov
aas
mov
jecxz
out
fmull
and
fsts
fnsetpm(287
add
dec
lods
or
xchg
stos
inc
jbe
push
mov
jp
xchg
xchg
sub
jge
loop
rcrb
push
in
mov
lock
loope
jp
loop
je
icebp
imul
xorb
adc
or
les
mov
mov
stos
xchg
pop
mov
scas
dec
adc
or
repnz
pop
stc
sbb
ret
mov
adc
aam
lds
setg
ret
and
inc
xchg
push
fisttps
inc
fs
pop
jb
in
mov
ret
mov
dec
les
or
inc
pop
mov
or
push
in
lret
jae
sub
icebp
mov
les
incb
fwait
movb
dec
mov
xchg
add
or
sahf
fcoml
mov
movb
sub
lock
add
mov
mov
aam
jno
bound
icebp
jbe
shl
in
sub
inc
insl
mov
push
mov
out
je
pop
std
mov
adc
pusha
add
push
inc
add
outsl
cli
push
mov
xchg
pop
sub
in
mov
cld
sets
mov
ret
insb
xchg
icebp
adc
lret
add
icebp
es
daa
mov
mov
into
rcll
inc
js
loopne
push
push
sbb
mov
pop
pop
jp
mov
loop
out
pop
jp
jns
jl
pusha
mov
xor
dec
ret
sbb
jp
call
cmp
push
icebp
sbb
popf
in
lock
icebp
arpl
repz
fs
cmp
or
fbstp
rcll
les
jp,pt
jg
sarb
pop
je
or
xor
dec
or
comiss
rcll
adc
out
test
repz
loopne
xorl
xor
ficompl
push
fcomip
xchg
jle
js
loopne
out
or
rolb
pop
hlt
or
aad
or
pop
and
pop
in
bnd
mov
lea
sbb
cmpsb
push
loopne
inc
add
loope
mov
pop
cwtl
push
mov
imul
cmp
mov
fwait
je
out
push
push
cmpsb
stos
push
fistps
aaa
sbb
ucomiss
xor
or
lock
dec
inc
push
mov
inc
pop
push
sbb
test
ret
movsb
shlb
pop
aas
fs
sahf
mov
inc
aas
jge
outsb
ljmp
addl
sub
fcmovnb
pop
clc
mov
pusha
pop
rorb
cmp
push
cmpsl
xchg
push
and
cmp
scas
ds
mov
xchg
cmpl
lret
push
dec
mov
mov
std
cmpsb
pushf
call
adc
sbb
incb
xlat
inc
fbld
pop
push
leave
test
mov
out
scas
adcl
inc
in
aad
test
rclb
rorl
dec
dec
hlt
fnsave
mov
pop
test
pusha
mov
loope
ret
scas
jo
iret
sti
sbb
clc
js
xchg
fs
lcall
ljmp
or
sbb
ds
cmc
in
mov
xlat
adc
mov
int3
rcll
and
ret
mov
lret
xor
xor
mov
orb
mov
out
aas
push
jl
inc
outsl
mov
xor
pop
lea
mov
cmc
jecxz
hlt
pop
push
mov
dec
stc
mov
mov
loop
dec
rcr
je
and
pop
mov
xor
fiaddl
cmp
rcr
push
xor
add
in
call
inc
push
and
jge
mov
idiv
pop
jmp
cld
stos
mov
movsb
push
test
xchg
sbb
push
clc
enter
dec
sbb
pop
cld
pop
cmpb
dec
or
jmp
jl
inc
ficompl
les
jge
testb
jno
xchg
jo
adc
dec
add
mov
scas
dec
loopne
loop
mov
popf
add
out
shll
loop
push
add
jae
hlt
jmp
dec
push
and
iret
add
and
cmp
test
movb
mov
popa
loop
rclb
jecxz
adcl
inc
sbb
and
mov
les
loope
fdivs
sbb
xor
cmc
push
inc
mov
enter
mov
push
cmp
pop
sub
lods
lahf
xchg
jle
mov
jecxz
sub
jbe
xchg
pop
mov
fwait
add
add
inc
sub
pop
adc
xchg
loopne
mov
loope
and
mov
push
loopne
ljmp
pop
sub
mov
andl
add
sub
push
pop
push
push
loope
jge
or
mov
ret
sbbl
fcoml
cmpsb
lock
mov
mov
loope
mov
dec
and
add
stc
xor
mov
loopne
inc
inc
das
and
mov
ret
movsb
sub
cmp
jo
xchg
mov
jo
jnp
sub
push
push
int
pop
adc
mov
int
int
mov
add
int3
shlb
jbe
sub
pop
pop
mov
loopne
js
je
pop
int3
xchg
insb
loope
fimuls
stos
out
popa
mov
test
or
jno
mov
sbb
mov
mov
pop
xor
adc
push
push
push
ljmp
mov
setle
mov
fbld
jle
out
adc
ficompl
lock
imul
mov
jo
push
mov
loop
sub
test
and
sarl
cmp
psrad
xchg
hlt
dec
js
add
sub
dec
mov
cltd
cmp
dec
call
or
lahf
fidivrl
je
insb
std
sub
pop
fdivp
daa
sub
sahf
outsb
jne
loopne
fsubs
pop
mov
cmp
jbe
in
xchg
jnp
xchg
shlb
or
xchg
sbb
pop
aaa
mov
push
inc
xchg
lret
mov
jl
jecxz
push
mov
nop
dec
daa
cmc
jnp
sub
insb
sub
mov
cmpsl
add
hlt
sbb
fcomp
jbe
lcall
test
xor
loopne
mov
les
cli
out
les
lds
dec
jp
clc
lods
dec
clc
in
sahf
lret
sahf
add
or
ds
sahf
adc
in
out
aam
dec
out
sbb
pop
mov
sbb
push
enter
push
ret
mov
jge
jo
jbe
dec
and
cli
clc
loop
add
dec
sub
sti
stos
cmp
icebp
xchg
cmovp
sbb
push
mov
ficomps
fdivs
stos
xor
dec
jp
push
or
pop
out
pop
xchg
push
rcr
in
jns
test
loopne
data16
pop
mov
inc
inc
jg
cmp
int3
ljmp
push
adc
and
scas
push
ret
mov
xor
and
xor
insb
outsb
mov
ret
or
cmpsb
inc
jmp
mov
xchg
xchg
lods
or
fcmove
mov
mov
aas
push
subb
jl
inc
cmp
fsubrs
insb
sbb
push
inc
lret
fidivrs
or
inc
pusha
sub
pop
lds
ss
adc
addl
cld
and
and
adc
pop
in
lea
ret
stc
and
dec
pop
mov
mov
push
dec
cs
inc
test
cli
pop
call
mov
adcb
rclb
icebp
add
sbb
jg
jge,pt
sbb
ds
cmpsl
clc
xor
dec
ss
cmc
hlt
sbb
rclb
mov
pop
or
sbbl
je
cwtl
shlb
js
inc
jo
call
aaa
stos
sub
xor
call
cmpsl
pop
aas
jge
cmpsl
stc
and
add
push
pop
lret
and
lds
clc
mov
fiaddl
jl
xor
push
mov
hlt
loop
sti
fsubrl
cli
push
inc
jp
mov
jnp
fsubl
or
push
mov
subb
das
mov
add
add
and
dec
jmp
ffreep
inc
out
jg
pusha
fcmovu
adc
inc
jl
adc
imul
mov
call
or
sub
sbb
sub
sub
cmp
inc
aaa
int3
adc
fs
cmc
loopne
aad
leave
xchg
mov
xchg
cmp
insb
mov
adc
out
push
mov
dec
add
adc
sbbb
sbb
lock
cmpb
push
int3
movsl
bound
pop
and
mov
nop
push
adc
js
sarb
aaa
fisttps
outsb
rcr
jno
xorl
and
push
loop
jg
push
pushf
in
addr16
lock
jl
pop
push
fdivl
push
cmp
fiadds
shlb
jb
shr
xchg
out
fwait
rol
mov
mov
nop
test
inc
das
or
add
inc
inc
push
jp
loopne
mov
xor
adc
xchg
push
jl
insl
pusha
inc
pop
xor
sub
sbb
ret
jl
les
mov
imull
pop
push
push
es
mov
addr16
or
bound
inc
pop
push
daa
add
adc
cmp
scas
sub
sysret
filds
clc
lds
aas
lea
lea
dec
pop
fisubs
and
fbld
mov
dec
xchg
mov
mov
icebp
push
stos
testl
call
test
scas
pop
jg
sti
loopne
xchg
mov
clc
out
and
lods
mul
scas
pop
cmp
adcl
inc
push
jge
jbe
imul
xchg
test
push
mov
and
jo
test
mov
cmp
pop
jb
fistpl
mov
or
jle
fcmovbe
scas
ds
je
mov
mov
ficoms
or
movb
inc
cmp
mov
inc
cmp
pop
test
bound
jl
cwtl
je
test
jge
scas
pushf
sbb
pop
aad
nop
out
mov
das
ficompl
push
pop
xchg
push
orl
add
jl
sub
mov
pop
cmp
jns
mov
icebp
ret
not
and
jle
xor
sub
lret
lret
js
push
popl
pop
xor
mov
andl
jnp
add
fimull
imul
cmp
mov
jp
out
out
sbb
push
or
xor
pop
std
push
mov
adc
data16
pop
add
bound
xchg
xchg
jle
pop
jl
and
add
xchg
sahf
xchg
adc
inc
inc
or
arpl
clc
cmp
sub
or
mov
jl
ljmp
pop
mov
sahf
adc
std
js
lods
mov
orb
push
pop
shlb
les
ret
mov
xchg
dec
testl
sbb
add
les
enter
cld
xor
push
je
xchg
inc
sbb
push
ss
pop
das
or
mov
xor
sbb
pop
jbe
add
cmp
jp
js
and
ds
jle
je
xchg
in
cltd
and
add
mov
and
insl
lahf
inc
aas
adc
cmpsl
inc
lret
lods
sti
test
adc
jp
mulb
iret
test
push
mov
testb
aas
test
mov
dec
or
pop
les
js
lock
pop
xchg
pop
jecxz
aam
push
cmp
hlt
loopne
and
mov
mov
adc
jle
in
es
adc
xor
in
icebp
sub
das
mov
jo
push
jp
inc
test
mov
jg
ror
in
cld
and
stos
add
dec
popl
je
jle
shrb
pop
adc
mov
or
and
orl
out
jo
into
mov
jp
ljmp
adc
fadd
xchg
push
icebp
xchg
xchg
push
jge
addl
and
mov
testb
mov
dec
fnstcw
mov
cmp
stos
inc
push
xor
sub
lret
cmpps
xor
outsb
outsb
outsb
or
shrl
pop
ds
scas
inc
adc
ljmp
pop
sbb
cmp
xchg
ds
mov
nop
out
xchg
mov
mov
adc
jnp
daa
mov
loopne
clc
adc
rorl
insb
aas
push
adc
push
mov
popa
mov
jmp
pushf
jbe
push
fidivs
sahf
xor
sahf
scas
daa
cltd
js
insb
cmp
cltd
inc
and
mov
adc
xchg
mov
mov
and
or
fists
cli
fcmovnbe
ss
ss
outsb
stos
test
insl
nop
adc
cli
rcrb
or
outsb
push
mov
mov
push
loop
pop
mov
in
pop
pop
js
mov
das
pop
push
outsb
and
inc
aas
or
jle
inc
loopne
mov
jge
js
push
dec
insb
or
push
les
and
and
add
pop
or
or
dec
sbb
mov
into
movsb
enter
loopne
jmp
mov
mov
inc
arpl
push
sarb
cmp
mov
and
xor
sbb
dec
cmp
lea
adc
fcmovnb
pop
cmp
cs
or
sbb
into
cmp
cmpsb
shlb
jp
pop
stos
and
mov
cmpsb
push
xchg
mov
mov
or
xchg
push
xor
xor
mov
ds
cmp
or
inc
jl
xchg
shlb
mov
push
push
inc
pop
xchg
or
loopne
scas
pop
inc
jle
sub
sub
cwtl
outsb
js
jle
xor
add
jnp
pop
and
sbb
outsb
mov
lea
and
cld
cmp
add
scas
push
rep
pop
cld
push
xor
out
es
cmpsl
xchg
adc
or
std
lock
mov
or
xchg
loop
dec
mov
test
in
cmp
icebp
loope
xchg
push
or
add
stos
out
mov
and
adc
xchg
cli
adcb
sahf
and
add
mov
push
mov
xchg
jbe
mov
outsb
rolb
rcrb
les
dec
mov
je
mov
scas
or
bound
loope
jmp
scas
or
dec
insb
inc
or
aad
lock
push
sub
xchg
sti
insb
dec
rcrl
xchg
sbb
or
mov
roll
push
pushf
jbe
lods
add
cmp
xlat
sbbb
or
mov
mov
push
les
mov
movb
cld
rorl
sub
push
mov
dec
out
mul
arpl
stos
push
sahf
xchg
and
xor
xor
lods
adc
pop
addl
pusha
sub
jl
dec
mov
loopne
mov
dec
fisubrs
or
cmp
mov
inc
mov
stos
push
insl
and
jno
or
and
iret
jno
mov
testl
test
iret
add
stos
fiadds
das
sub
xor
cmpsl
mov
sub
std
clc
nop
cmp
pop
js
ljmp
sti
pop
mov
lret
in
pop
or
iret
sub
pop
sahf
add
jne
loop
hlt
mov
in
push
mov
cs
int
jns
and
cmp
dec
xlat
cmpsb
sub
fdiv
fiaddl
jecxz
pop
into
jg
mov
test
outsl
call
clc
push
mov
pop
scas
loopne
ds
pop
js
push
mov
push
call
lret
push
lock
lods
push
pop
gs
add
mov
mov
mov
jne
jle
fistps
adc
xor
in
lea
and
push
stos
test
clc
dec
push
and
adc
mov
ds
loopne
and
subl
sbb
mov
aam
out
daa
test
pop
add
mov
jmp
inc
ficomps
mov
adc
jge
sub
mov
pop
lret
add
xor
and
mov
in
mull
inc
sub
sub
pop
cmp
out
mov
pop
jl
sarl
or
cs
mov
and
xor
bound
push
lret
xchg
jmp
cmp
jbe
or
jp
icebp
xchg
mov
mov
mov
mov
inc
clc
imul
aad
pop
call
test
jecxz
adc
jb
call
pop
mov
jg
test
mov
js
fbstp
pop
addr16
adc
icebp
push
mov
xor
dec
enter
into
xchg
pop
std
sub
mov
pusha
xchg
sbb
xor
sbb
hlt
or
jo
fisubrl
sbb
jns
push
cli
cmc
jl
hlt
hlt
sahf
shrl
xchg
or
mov
lods
dec
data16
jmp
out
xchg
add
add
push
lret
sbbl
adc
bound
inc
add
lds
mov
aam
mov
sbb
jnp
loop
xchg
enter
jge
pop
call
push
pop
dec
js
pop
jl
stos
icebp
add
sub
into
mov
sub
pop
xchg
lock
aas
hlt
fldt
mov
hlt
jp
loope
loopne
test
nop
mov
call
shll
mov
add
push
mov
xor
js
pusha
jns
insb
fcomip
lds
push
es
inc
pop
jp
lea
aas
sbb
inc
mov
movsb
push
sti
lods
jp
mov
and
scas
push
movsl
add
mov
jg
pxor
inc
enter
pop
jl
dec
or
fs
sahf
jnp
cli
sbb
mov
insb
sbb
lds
push
jmp
test
xchg
adc
and
lods
inc
rclb
pop
insb
mov
loopne
test
xorb
push
xor
lds
pop
sub
pop
lret
loopne
stos
hlt
add
jmp
mov
stos
mov
dec
pop
pop
sub
paddq
sbb
movb
fdivs
hlt
hlt
fwait
pop
mov
xor
mov
jmp
mov
scas
sbb
loopne
add
dec
jl
sbb
sti
adc
or
mov
xorb
add
jge
rolb
das
pop
sbb
cmp
js
nop
stos
adc
pop
popa
mov
xchg
je
jbe
add
xchg
dec
pop
rolb
lods
and
mov
xchg
shr
and
or
loop
ljmp
loop
cmp
sub
add
ret
shlb
cwtl
or
adc
mov
loope
out
in
adc
lock
ficoml
clc
icebp
loope
stos
cmp
ret
aaa
xor
pop
aas
ds
mov
push
adc
inc
sbb
mov
lock
push
cmp
aad
es
stos
sarb
shlb
lcall
movsl
push
dec
cmp
test
jp
dec
scas
test
cmpsl
jl
jecxz
fcmovne
test
push
pop
add
ret
rorb
pop
test
dec
push
jae
sti
lock
rolb
or
cmpsb
es
dec
push
lock
loopne
mov
mov
sub
jecxz
push
pop
test
push
clc
or
and
mov
hlt
add
mov
into
or
sahf
xchg
sti
push
loopne
insb
stos
out
dec
cs
popa
test
fbld
jnp
add
cmc
ret
test
dec
mov
push
add
out
add
pop
dec
repnz
inc
out
dec
dec
loope
push
mov
mov
add
aas
jp
jnp
mov
mov
inc
scas
jle
inc
lret
xchg
stos
adc
ss
sub
lods
adc
mov
pop
inc
test
into
lods
sub
clc
jle
jo
mov
pop
ret
xchg
and
pop
adc
test
je
push
aas
sahf
push
or
mov
push
sub
jne
int3
push
jge
push
sarb
ljmp
dec
adc
dec
inc
in
int
jge
xchg
test
inc
sub
icebp
in
add
jle
loop
or
mov
mov
mov
pop
ja
std
push
rorb
hlt
jmp
in
push
aam
addl
mov
sbbb
popf
popf
pop
mov
leave
add
lret
call
insb
inc
inc
push
aas
fimuls
mov
repz
jne
or
sub
mov
mov
add
ljmp
inc
xlat
rcll
stos
push
inc
outsb
js
add
movsb
xor
call
popa
jge
in
sarb
clc
xchg
push
pop
mov
pop
fwait
push
jle
cmp
jo
xchg
inc
pop
pop
std
clc
mov
and
out
fidivrs
stos
arpl
or
and
add
insl
adc
js
fdivrs
lcall
sahf
mov
fbld
push
imul
cltd
adc
loop
mov
pusha
add
mov
cmpsb
mov
aam
mov
adcb
adc
inc
sahf
push
jno
push
ds
pop
dec
sub
dec
pcmpgtd
jnp
jmp
iret
lods
xchg
inc
daa
clc
faddl
scas
test
jg
push
xor
cwtl
sahf
loopne
das
or
mov
jmp
xor
testb
mov
adc
adc
and
pop
jl
pop
inc
mov
dec
jg
data16
mov
jo
sub
mov
mov
call
mov
clc
sub
pusha
sbb
repz
or
jp
mov
dec
pop
outsl
xchg
in
dec
xor
mov
mov
push
sysenter
lahf
test
mov
ret
jbe
hlt
jle
lock
insb
cmp
push
cmc
lock
jno
je
and
stc
test
nop
ds
add
mov
jle
inc
and
fsubrs
ffree
ss
xchg
lock
cld
adc
cmpl
clc
into
mov
lock
push
xor
cmc
dec
outsl
fists
fistps
das
jecxz
setb
lods
jne
rcll
loopne
xchg
mov
dec
loop
mov
push
test
loopne
test
mov
lahf
push
mov
and
js
fimuls
xor
sub
imul
mov
mulb
jge
add
pop
push
ret
xchg
outsb
adc
loopne
dec
mov
cs
popf
jno
loop
mov
mov
jp
hlt
sub
lret
adc
mov
add
mov
cmpsb
rorl
out
pop
mov
xchg
stos
pop
pop
cli
lock
ror
sub
ds
xchg
add
nop
jo
mov
outsb
mov
cmp
insb
pop
imul
lahf
rorb
pop
pop
jle
xchg
inc
pushf
in
fnstenv
jb
ds
loop
fsubl
sarb
ficoms
and
mov
jno
add
and
hlt
gs
in
xor
outsl
loope
fs
loop
sbb
shll
mov
dec
imul
fcmovne
jp
loope
mov
push
lret
push
int
loopne
and
jle
lea
sbbb
push
mov
fildll
clc
dec
out
inc
insb
jge,pt
mov
out
push
call
pop
fnstcw
pop
cmp
rorl
mov
js
std
xor
jae
es
or
add
enter
clc
jp
js
pop
aas
movsl
data16
nop
xor
push
sbb
cmp
icebp
loope
mov
sub
lock
push
hlt
push
loopne
jae
mov
lea
sbb
cmp
loope
cmp
cs
pop
cld
clc
lock
add
push
scas
adc
lahf
lods
xchg
in
out
std
sub
dec
cld
std
inc
cmc
adcb
loopne
shll
and
inc
cwtl
cmp
mov
cmp
add
jl
fildl
or
loopne
sbbb
mov
cld
es
bound
js
sbb
js
loope
sub
xchg
pop
adc
cmp
inc
pop
cmp
cmp
imul
jle
mul
ret
int3
and
add
gs
jg
clc
inc
mov
sbbl
push
jo
loopne
pop
pop
sbb
cmc
jo
inc
dec
add
xchg
test
rcll
mov
inc
mov
or
or
out
adc
jnp
sahf
cmc
push
push
xchg
mov
pop
arpl
je
dec
or
push
xor
out
aaa
sub
xchg
pop
unpcklps
jle,pn
jo
mov
insl
daa
cmc
inc
js
scas
into
mov
mov
lcall
or
adc
mov
xor
dec
lahf
jo
enter
pop
leave
pop
mov
sub
sub
cmp
mov
fidivrl
aas
push
jns
loop
sbb
inc
sbb
mov
cmp
sbb
xchg
adc
push
cld
and
stos
shlb
fbld
clc
jae
push
movsl
inc
aam
or
arpl
pop
sbb
out
or
push
and
enter
mov
jno
mov
popa
add
js
daa
and
test
push
lock
int3
adc
xchg
movb
cld
out
xchg
mov
push
nop
push
dec
jle
or
mov
or
not
les
int
or
clc
ja
adc
leave
ret
mov
idiv
jmp
jne
pushf
orl
mov
adc
iret
in
push
cmp
rorb
rolb
addl
sbb
into
fidivl
test
andl
cmp
mov
mov
icebp
test
add
mov
call
subb
das
mov
mov
xlat
fsubrl
inc
sbb
ds
mov
push
faddp
push
pusha
and
ja,pn
negl
mov
mov
daa
dec
testl
adc
push
dec
pop
mov
cmpsb
cmp
mov
xchg
adc
sub
std
jb
push
cmp
inc
dec
mov
mov
ds
mov
fsubrp
inc
fidivrs
data16
les
ss
aaa
mov
or
xchg
gs
pop
aas
jl
lock
push
lea
pop
sarb
js
cltd
cmp
cli
xchg
add
mov
aas
add
pop
cmp
add
hlt
add
sub
fwait
and
inc
pop
cld
sub
bound
dec
enter
jno
movsb
subb
pop
add
sub
inc
ficomps
clc
jmp
jne
int3
or
sub
std
dec
sarl
add
mov
movb
cmpsl
test
fidivs
in
pop
jo
mov
call
test
push
out
lds
mov
dec
sbb
mov
push
xor
in
fnstcw
out
xor
mov
sbb
icebp
cli
mov
pop
lock
fmull
mov
mov
sahf
push
mov
fs
pop
xor
rolb
sbb
sub
mov
shlb
mov
or
push
fs
movsl
mov
cld
mov
outsl
sub
int
ja
ficoms
jg
mov
in
sbb
lock
mov
pop
subl
loopne
mov
dec
arpl
das
sbb
sbb
push
xor
mov
cmp
jno
js
jge
push
nop
mov
loop
stc
enter
outsb
cwtl
sbb
push
pop
movsb
stos
iret
test
xchg
push
test
ds
or
in
xor
pop
pop
aas
lea
dec
mov
and
dec
js
pop
mov
sar
les
cs
lods
bound
pop
cmp
je
fsubrp
fwait
imul
rorl
mov
notb
out
xor
sbb
clc
jno
lds
or
push
cmp
push
cmp
cmp
fwait
stc
sub
imul
cltd
xor
push
and
lds
adc
ret
jp
and
icebp
and
lods
jbe
push
pop
aam
icebp
mov
in
lcall
icebp
sbb
aas
jo
jle
js
loopne
mov
es
lahf
ds
pop
fldcw
push
and
sub
pop
cwtl
push
sahf
mov
mov
fs
dec
add
sbb
cs
dec
mov
icebp
aam
add
adc
ds
add
jnp
iret
jp
aas
dec
inc
mov
and
mov
jno
jns
sbb
fists
inc
lahf
mov
sub
add
iret
dec
jmp
sbb
ljmp
inc
dec
es
gs
sahf
int
loope
js
jmp
pushf
fs
lret
push
test
orl
roll
mov
push
das
push
sbb
out
mov
cs
dec
and
mov
out
jo
mov
in
shrb
lods
or
mov
repnz
iret
pop
idivb
nop
lods
add
cmp
outsb
ret
fidivs
mov
shrb
adc
repnz
insb
mov
ja
push
int
jl
adc
shlb
sahf
mov
mov
push
daa
push
push
pop
dec
push
push
mov
sub
inc
sub
fisttps
xchg
ss
pop
je
cs
insb
icebp
es
ljmp
je
jnp
test
outsb
arpl
cwtl
cmpsl
sub
pop
pop
sub
jb
hlt
push
jmp
cmpsb
std
lret
mov
mov
mov
mov
aad
jbe
jns
into
imul
or
lahf
dec
fwait
insb
dec
loopne
pop
fistpll
jecxz
imul
daa
clc
sahf
jae
inc
lds
push
pop
imul
adc
xchg
js
adc
lock
fsubl
cmp
sub
loopne
lea
loop
adc
lret
adc
icebp
mov
int
mov
hlt
adc
push
nop
lods
mov
subb
cld
mov
psubsb
test
push
pop
loopne
les
imul
xchg
pop
pop
into
jle
cld
outsl
sbb
inc
inc
arpl
inc
inc
and
mov
in
push
xchg
cs
xor
jp
xchg
lock
cmc
call
mov
jno
pusha
shlb
push
sbb
ljmp
imul
dec
mov
out
gs
filds
out
arpl
outsl
sub
movl
ljmpw
daa
adc
sub
je
jecxz
mov
mov
or
lock
movsl
push
arpl
xchg
loop
add
jnp
mov
xchg
or
mov
mov
lds
mov
pop
shlb
icebp
push
les
pop
or
push
lods
imul
jne
inc
mov
lahf
xchg
inc
jbe
lcall
iret
fldl
cltd
loopne
insb
imul
push
jp
pop
cmc
sbbb
ds
ljmp
push
jmp
subb
adc
pop
lods
pop
pop
js
imul
mov
mov
inc
in
cmp
ds
xchg
rol
ss
js
or
add
fdivr
pop
or
jle
daa
mov
cmc
or
in
rclb
or
popl
xchg
movb
aam
push
lcall
push
mov
nop
xchg
clc
mov
and
push
dec
test
rorb
ds
popf
cmpsl
bound
inc
sub
loop
jp
lock
cli
icebp
lcall
ss
sbb
inc
insl
out
clc
add
lea
lea
pop
insl
mov
dec
imul
pop
inc
ss
in
shrb
push
xor
mov
xor
mov
adc
xchg
mov
or
sub
dec
jmp
testl
jecxz
xchg
push
insl
sar
cmp
push
mov
rolb
jo
push
or
mov
mov
outsb
inc
cmp
or
jl
pop
xor
pop
jp
sbb
xchg
outsb
jle
adc
sub
ja
inc
and
ljmp
and
xchg
movsb
insb
cltd
xlat
test
insl
pop
sub
mov
ds
and
loopne
test
ret
lods
popf
mov
mov
arpl
push
mov
scas
out
sarb
jmp
mov
or
fmull
sbb
mov
xor
pop
mov
jnp
jle
push
inc
add
add
inc
push
jecxz
test
xchg
pop
addr16
js
add
loope
mov
dec
jl
sub
mov
imul
pop
xor
push
inc
and
loopne
loopne
mov
push
xchg
leave
out
cwtl
clc
mov
push
dec
xchg
shrl
sub
cmpxchg
bound
sbb
push
clc
mov
sti
jle
scas
or
les
mov
sbb
pop
mov
jo
push
cld
out
data16
pop
jl
pushf
push
notl
shrl
cmp
scas
push
stos
xchg
sbb
test
lods
mov
mov
push
lcall
aas
and
subb
adc
jl
adc
or
push
es
push
fstps
mov
mov
jp
cmc
leave
dec
mov
sub
push
jecxz
xor
ficomps
pusha
cmp
cli
bound
sub
jle
clts
iret
shrb
ja
call
push
mov
jo
insb
and
mov
pushf
push
ds
js
clc
data16
jnp
push
cmp
dec
push
pop
icebp
mov
stos
push
in
mov
mov
jo
int
sub
jl
aaa
test
pop
push
sbbb
jbe
mov
xor
mov
xchg
addl
jge
clc
dec
mov
add
cmp
dec
imul
fisttpll
xchg
xchg
fidivrs
shll
pop
js
push
fld1
std
roll
sub
repnz
sbb
scas
jne
push
inc
pop
xor
xor
mov
loope
ret
shlb
add
std
icebp
adcb
push
dec
push
jg
pushl
ret
jmp
std
and
mov
pop
add
mov
dec
out
cmpsl
jb
fmull
loop
xchg
clc
popa
in
jnp
mov
xor
movsb
adc
mov
pop
icebp
pop
mov
cs
test
sbb
mov
sbb
iret
fadd
cmp
mov
lds
insl
pop
push
jae
divps
loope
call
dec
stos
bound
add
dec
test
push
imul
or
jno
ljmp
sub
mov
pushl
nop
sub
inc
cli
lcall
lods
add
dec
add
mov
xor
jno
mov
call
shlb
ljmp
ror
sub
jmp
loopne
mov
xchg
cwtl
adc
sub
mov
xor
scas
mov
scas
shl
rolb
xchg
sahf
jo
jp
lcall
xor
inc
pop
ret
dec
loopne
xchg
xor
scas
push
sbb
jne
push
xor
jp
xor
xchg
xchg
or
das
push
data16
xorb
and
jge
out
hlt
mov
lret
lea
mov
cwtl
pop
jl
jle
clc
add
mov
mov
movsb
push
xchg
cmpsb
insb
test
push
shrb
adc
js
shrb
pop
nopl
pop
jecxz
fnstcw
jo
rcr
jg
and
fidivrl
inc
repnz
fs
aas
lret
jnp
xchg
cwtl
inc
mov
add
dec
fistps
ss
ret
xor
rol
scas
lock
and
imulb
sbb
mov
cmp
lcall
bound
cmp
imul
push
mov
inc
sahf
xchg
xlat
or
pop
clc
cld
insb
add
dec
or
pop
xchg
xchg
sub
or
rol
ljmpw
xchg
jbe
jno
loopne
pop
and
dec
pop
jp
leave
lret
sub
aaa
ss
aaa
xchg
jmp
mov
pop
imul
daa
mov
ficoms
and
inc
insb
pop
fnstenv
jle
jb
subl
xchg
adc
loop
ret
ret
jge
clc
mov
sarb
push
fimuls
push
das
inc
xchg
clc
jnp
jp
test
or
jge,pt
adc
adc
hlt
loopne
sub
sbb
icebp
add
bound
jge
sahf
test
sbb
jle
xorb
call
aas
xchg
mov
mov
fildll
dec
fmull
enter
ret
cmovp
push
cmp
pop
sbb
add
sahf
pusha
andb
insb
ja
outsl
stos
repnz
insb
xchg
xlat
dec
adc
add
icebp
sbb
or
cmc
xchg
in
out
lcall
insl
mov
lods
insb
testb
adc
dec
repz
push
jbe
rcrb
icebp
inc
jl
pop
test
push
rolb
cs
and
iret
incb
jmp
inc
clc
out
dec
sarb
out
mov
or
mov
sarl
and
xchg
jmp
cmpsb
sbb
mov
lock
jae
mov
in
xchg
jo
movsb
adc
add
jne
nop
mov
ljmp
lock
xchg
mov
and
ds
inc
pop
sub
movsb
push
mov
xor
rol
mov
test
gs
shrb
xchg
lock
or
adc
call
dec
ret
adc
pop
ja
std
jle
add
mov
dec
test
fildll
add
mov
je
icebp
adc
cmp
cmc
std
dec
out
out
add
xor
movsl
xlat
sahf
insb
inc
or
add
xor
ret
ret
pop
push
ja
ja
hlt
xor
mov
je
mov
mov
lock
je
lock
add
mov
add
adcl
add
mov
cmp
mov
add
mov
push
fidivrl
inc
jo
push
adcb
rol
scas
jle
lret
jbe
sub
cli
pop
or
loop
xchg
sbb
xor
sbb
shr
xchg
push
loope
push
dec
push
adc
rcr
and
imull
sub
or
cld
imul
cmpsb
insl
fs
sub
adc
decl
sti
push
pop
cld
mov
xchg
mov
jg
xchg
clc
xchg
addr16
and
pusha
sbb
fnstsw
imul
test
lock
push
pop
jl
dec
dec
push
repz
mov
and
jnp
enter
test
push
push
inc
mov
sbb
in
and
pop
cld
mov
movhps
mov
aas
call
ss
fidivrl
cmpsb
add
inc
mov
and
dec
pop
pop
cltd
ret
in
in
xlat
xlat
es
out
mov
aad
hlt
push
mov
movsb
xchg
icebp
shrl
scas
pop
and
xchg
mov
in
outsb
outsb
mov
sbb
xor
inc
mov
adc
outsb
cltd
jno
mov
xchg
sub
insl
outsb
outsb
outsb
outsb
lret
out
jne
popf
sbb
lret
pushf
imul
xchg
je
push
sub
or
pop
push
xor
mov
in
lods
test
cmp
std
stos
andb
xorb
lock
jp
add
push
hlt
stos
int3
add
outsb
add
lds
fsubr
xor
add
xor
fisubrs
loope
divl
jmp
int
icebp
shrl
pop
mov
adc
out
push
mov
popa
bound
push
mov
add
push
call
pop
aas
and
pushf
inc
sub
cmp
cmp
aam
scas
cld
jp
mov
insb
mov
hlt
lods
cmp
dec
jnp
add
mov
sar
mov
repnz
lock
cs
inc
xor
jle
movsl
inc
mov
add
outsb
mov
mov
loopne
test
jp
int3
call
mov
mov
mov
int
push
std
dec
or
jno
sbb
lahf
idivl
add
sti
and
bound
jle
xor
pushw
aad
adc
inc
aam
test
bound
jge
pop
les
jne
adc
clc
push
pop
mov
pop
push
mov
fisubrl
push
clc
mov
shl
pop
lock
mulb
pop
or
scas
or
call
push
jne
adc
inc
or
sub
mov
ss
fnstsw
sarb
xchg
pop
inc
adc
add
dec
push
mov
cmp
or
mov
out
adc
xor
pop
ss
jno
sahf
enter
movsl
lods
sbb
arpl
mov
dec
icebp
loop
lock
ret
popf
sub
sar
or
mov
out
test
add
repz
insb
les
loope
in
lods
std
test
or
js
ljmp
lret
lahf
movsb
ds
add
jno
arpl
push
sar
xchg
mov
mov
bound
js
inc
jl
lock
loop
pop
push
cmpsl
lock
and
mov
push
out
or
ret
lcall
sti
lock
inc
pop
es
add
out
rcrl
add
jl
ljmp
clc
mov
push
pop
xchg
mov
dec
add
insb
xchg
sti
nop
xor
out
ret
ret
sub
push
xchg
add
stos
mov
and
jecxz
mov
or
out
jmp
cmp
add
adc
sahf
xchg
lcall
jbe
jne
xor
rcrb
push
or
sbb
pop
pusha
xchg
push
movsb
hlt
inc
jl
icebp
out
ret
lock
stc
ret
inc
sbb
xor
rorb
push
fcmovnu
test
ljmp
adc
enter
lret
ret
test
jg
insl
or
or
xlat
fidivrs
inc
subb
adc
scas
loopne
cmpsl
cmpsl
imul
jg
subl
shlb
dec
inc
test
sbb
clc
hlt
and
add
in
mov
adc
leave
scas
adc
dec
adc
lret
pop
mov
xchg
mov
sbb
test
push
sub
call
cmpsb
or
cmpb
add
jbe
mov
mov
mov
icebp
jmp
jo
pop
mov
daa
adc
add
dec
sub
das
sarl
inc
push
ret
mov
adc
loopne
mov
cs
shlb
inc
es
pushf
adc
ljmp
shr
add
mulb
pop
inc
jl
or
xlat
aaa
xchg
outsb
add
jmp
jl
jp
sbb
add
mov
loope
call
xchg
adc
lock
out
push
daa
push
xchg
loop
daa
dec
pop
xchg
imul
xor
addb
idivl
xchg
les
js
inc
xor
lds
inc
or
xchg
ds
push
xchg
mov
ds
mov
cmpsb
xor
adc
jge
inc
push
bound
pop
sbb
jl
pushl
adc
xor
mov
dec
rcl
iret
xchg
inc
movsl
je
outsb
mov
sti
lods
rorb
xchg
in
sbb
jne
xor
jne
lock
push
adc
icebp
jg
cmp
pusha
dec
or
inc
prefetch
push
ss
sbb
and
xlat
out
aad
adc
ret
sbb
call
cli
cmp
xchg
ds
push
bound
inc
loop
cli
ljmp
pop
insb
js
loopne
pusha
jle
mov
mov
pop
pop
mov
jle
or
clc
mov
mov
cmpsl
bound
inc
mov
jp
call
out
cmp
inc
mov
add
mov
aam
inc
bound
lcall
lret
or
pop
iret
popa
push
sbb
mov
and
push
adc
es
add
add
inc
call
lahf
test
out
cmpsb
fdivr
scas
mov
pop
hlt
sbb
mov
nop
jg
jmp
xchg
or
jbe
out
outsb
sbb
add
dec
test
icebp
dec
cmp
push
aaa
clc
mov
mov
in
push
jbe
out
rclb
ss
or
pop
adc
sti
addb
loope
mov
std
lock
sbb
lock
je
jmp
mov
xchg
clc
add
pop
scas
jno
push
or
pop
jo
add
movsl
mul
ret
push
dec
fsubrs
dec
sbb
xchg
cmpsb
in
push
jo
mov
adc
sbb
sti
test
fcomip
decb
bound
repz
xchg
pop
fcmovb
nop
in
ss
or
cmp
das
xor
rolb
jne
sbbl
clc
pop
fistps
dec
fdivr
sbb
ds
cld
add
add
add
sub
loope
cmp
repnz
sbb
xchg
pusha
out
adc
pop
pop
loope
cmp
cli
movsb
sub
pop
in
sub
ja
std
mov
jle
movsb
int3
pop
iret
cmc
insb
fistpll
or
cmp
cmp
dec
and
mov
cli
loop
pop
pusha
sub
int3
mov
fadds
inc
inc
mov
push
or
add
fildll
sbb
lret
pop
invlpg
repnz
imul
subl
icebp
hlt
loope
out
dec
mov
hlt
daa
xchg
icebp
sar
pop
movl
ficoms
lods
pop
shl
dec
cs
sbb
sarl
test
mov
adc
mov
jmp
pop
hlt
mov
lock
pop
daa
aas
and
sbb
repnz
fprem
ljmp
cmp
std
icebp
jge
pop
test
mov
das
hlt
and
jp
add
daa
out
inc
mov
mov
jo
pop
jl
and
pop
inc
cwtl
sub
push
mov
popf
xor
sbb
add
repz
jbe
fsts
test
push
dec
add
sub
sub
pop
pusha
sbbl
or
ljmp
clc
lock
lahf
cli
fbld
sbb
test
inc
pop
xchg
movsb
pop
clc
cs
pop
rorb
outsb
push
jns
xor
fs
data16
add
scas
sub
push
mov
sub
xchg
adc
les
mov
and
or
push
cmp
jo
cmpsb
roll
pop
adc
les
icebp
loop
std
fcoml
inc
pop
scas
gs
lcall
jle
pop
jp
or
cld
fadds
push
and
xchg
xlat
xlat
and
ds
ss
fistpl
inc
jp
loopne
insb
enter
push
cmp
in
push
inc
push
mov
mov
mov
adc
pop
das
scas
test
es
adc
lea
orb
push
negl
pop
andb
or
jle
aad
shll
sub
mov
loop
add
mov
sahf
dec
jp
loope
aad
cmp
push
mov
pop
pop
jl
bound
push
add
push
pop
adc
mov
out
xchg
js
mov
lea
lea
stos
mov
shr
loope
cltd
in
adcb
jl
jo
scas
push
pop
dec
jg
subb
mov
sub
cmp
sar
mov
test
sbb
loop
pop
jl
fwait
push
or
or
sti
jmp
push
out
je
add
mov
ds
stos
idivb
inc
jmp
loopne
fs
mov
and
out
pop
inc
js
loope
xor
cmp
pop
inc
test
xchg
clc
sbbl
lret
sarb
sub
and
push
sbb
ds
sbb
das
fisubrl
pop
stos
loop
push
stos
pop
lret
rolb
mov
pop
je
loop
push
xchg
adc
cmp
add
daa
add
inc
shl
jmp
inc
push
sbb
loopne
jne
cmpsl
xchg
aam
int
addb
les
or
mov
clc
loopne
mov
lahf
inc
pop
fdivp
inc
into
out
cmp
inc
lcall
xlat
mov
and
lret
sahf
inc
adc
cmc
push
lret
in
movsb
jne
fndisi(8087
fnstcw
adc
cli
js
hlt
loop
xor
fnstcw
sbb
in
jl
adc
add
ret
mov
std
nop
out
mov
push
xchg
inc
loope
outsl
mov
or
loope
mov
push
dec
pushf
xchg
add
cmc
sub
jae
add
loopne
pushw
push
andb
cmp
les
pop
mov
js
mov
rcrb
mov
add
adc
test
sarb
adc
hlt
loope
jecxz
sti
test
pushf
cmp
mov
icebp
scas
cwtl
pushl
sbb
ret
add
aam
jbe
jmp
int3
and
leave
outsl
ljmp
xor
shlb
shl
pop
pop
dec
mov
adcb
insl
pop
cmp
fnsave
dec
dec
push
nop
orb
hlt
or
outsl
push
lret
jne
mov
pushf
cvtps2pd
pop
mov
jae
sub
mov
or
shll
push
push
pop
xor
fdivrp
fsubrl
ret
xor
push
and
shlb
rclb
rorl
and
sti
gs
sbbb
xor
sub
xchg
insb
or
les
hlt
ret
and
and
sub
dec
xor
pop
aas
cs
pop
lcall
fcmovnb
xchg
cmpl
mov
ds
push
clc
adc
sbb
fiaddl
inc
inc
pop
in
xchg
adc
pop
rolb
cmpsl
lahf
test
adc
repz
incb
mov
inc
adc
data16
sbb
cmp
mov
and
cltd
pop
jmp
adc
add
jae
repz
pushf
adc
imul
cli
xor
xchg
pushf
mov
in
jg
add
or
hlt
push
or
ret
out
or
jp
mov
mov
stos
ljmp
or
mov
aam
pop
sub
mov
rclb
stos
xchg
jmp
add
jp
rol
ja
or
es
xchg
mov
cmp
test
out
rolb
inc
jp
jle
xor
jo
mov
pop
inc
jbe
bound
cmp
push
mov
xchg
dec
fbstp
aad
inc
call
push
adc
rorl
jecxz
jae
xchg
xchg
dec
pushf
in
inc
loop
and
pop
adc
xor
xlat
pop
mov
inc
imul
and
lock
clc
cmpsb
je
or
xchg
or
ds
dec
sbb
inc
inc
dec
roll
hlt
test
cli
lock
cmp
bound
cmp
xchg
subb
mov
jle
jg
rol
mov
adc
stc
mov
pop
lret
push
lds
push
push
cwtl
mov
jecxz
notl
rorb
jp
sbb
in
insl
lock
fwait
sbb
pop
enter
js
addr16
lock
roll
outsb
stos
jl
mov
pop
or
dec
cmpsb
mov
ljmp
fists
mov
mov
xor
loopne
jp
mov
hlt
or
repnz
sti
xor
clc
inc
sub
fisubrl
mov
inc
ds
jmp
inc
add
adc
inc
push
add
lds
je,pt
jmp
xor
call
in
or
call
push
add
inc
int3
adc
mov
lock
sub
in
and
repz
jg
pop
lcall
mov
mov
dec
and
add
leave
mov
dec
add
jl
and
les
lcall
ljmp
movsl
adc
inc
jl
out
and
add
xchg
out
adc
jge
cmp
scas
dec
dec
mov
ljmp
jo
push
add
shll
aam
sbb
pop
mov
jp
hlt
loopne
rcrl
iret
mov
sbbb
fbstp
scas
das
or
notl
jle
ficoml
sub
mov
out
lcall
cmpsb
pop
inc
out
in
cli
mov
jnp
push
push
push
sub
test
jb
clc
shlb
cmp
arpl
xchg
inc
leave
jp
jge
push
jge
jg
mov
xorb
sub
pop
dec
cld
jp
xlat
push
adc
sbb
mov
or
adc
rolb
test
insb
jb,pt
mul
ficompl
pop
int3
stos
and
fadds
fidivrl
sub
aam
jecxz
nop
jp
clc
dec
mov
mov
loopne
gs
mov
ds
cmpsl
mov
add
lcall
je
stos
jp
dec
pop
pushf
xchg
lods
cltd
adc
pushf
dec
mov
jle
fs
fucomi
pop
mov
mov
popf
push
data16
push
cltd
mov
add
dec
jecxz
jbe
fwait
push
repz
fwait
fwait
fwait
and
test
jmp
mov
cmp
mov
loop
movl
mov
test
loop
and
adc
cmp
mov
out
sti
sub
or
cmp
fisubs
pop
ss
hlt
add
repnz
dec
and
jns
cmp
lock
fdivrl
cmpsw
mov
push
popw
nop
sahf
ds
fcompl
jmp
lds
mov
dec
daa
add
xor
test
cmp
xorb
popa
loope
dec
sahf
jl
test
orl
add
divl
rolb
lock
inc
pop
roll
es
adc
push
inc
pop
and
rorl
imul
ds
fsub
outsl
pusha
lock
mov
stos
mov
pop
dec
cmp
mov
xor
rorb
jl
add
pop
xchg
lock
xlat
xchg
push
inc
jg
add
fiadds
jle
xlat
pushf
mov
shlb
push
and
pop
sbb
test
and
scas
mov
sub
sar
add
out
es
cld
icebp
mov
pop
jnp
xchg
cmp
clc
lods
pop
sbb
sbb
lods
sub
mov
mov
popa
leave
cmpsb
mov
das
cmp
js
lods
pushl
xchg
jno
ret
ss
clc
pop
cmp
add
and
stos
pop
sbb
sbb
jl
inc
clc
jb
or
mov
add
push
and
cli
pusha
jmp
pinsrw
popf
hlt
mov
dec
daa
push
pop
jbe
test
pop
add
mov
bound
sub
jb
cmpsl
sbb
adc
push
fcmovnbe
mov
mov
cli
sub
xor
js
sbb
jno
xor
jle
xchg
xchg
inc
sarb
mov
sti
shr
inc
push
pop
lock
and
pushf
lret
mov
test
shlb
call
enter
int
repnz
cmp
pusha
pop
lret
cmp
enter
mov
pop
mov
mov
clc
mov
enter
pusha
insl
ret
dec
sbb
xor
inc
cmpsb
cmp
pop
inc
xor
insb
pop
dec
cmp
movsb
lods
repz
mov
movsb
sbb
lock
xchg
dec
out
cltd
adc
sub
ss
icebp
hlt
hlt
sbb
adc
lret
add
xor
lods
test
pop
mov
push
cmp
jle
aad
sub
movsb
push
pop
es
pop
loop
adc
jp
xor
sub
dec
cld
cmp
and
loop
mov
leave
in
xor
ret
stos
fstps
mov
or
pop
mov
adc
inc
adc
insb
sarb
or
push
lahf
lock
mov
fcompl
mov
adc
pop
movsb
pop
int3
push
stc
pop
inc
mov
mov
icebp
adc
insb
mov
jmp
push
bswap
cli
jb
fists
fcomp
rcrb
and
inc
mov
testl
adc
xor
or
loopne
test
pop
jmp
jl
lods
pop
scas
pop
push
mov
shl
sahf
push
mov
movb
dec
mov
aam
cwtl
movsb
mov
and
and
lcall
mov
mov
mov
push
and
shlb
lret
call
xor
and
outsb
ficomps
inc
stos
cmpsb
mov
das
ds
jl
xchg
jns
mov
or
push
pop
das
push
loopne
mov
fists
aad
movsb
pop
cmp
sub
push
movb
cmp
test
pop
lea
xor
popl
push
out
or
and
arpl
ret
cmp
ja
push
or
jecxz
pop
scas
inc
cmp
cmp
add
add
sbb
inc
test
add
inc
ds
mov
inc
pop
movsb
lahf
ljmp
out
add
push
inc
xchg
clc
add
pop
ficomps
mov
or
jg
mov
xlat
nop
decb
or
push
rcl
sahf
mov
adc
es
xor
xor
push
cmp
fs
scas
push
dec
add
clc
jecxz
xor
out
sti
sahf
push
sub
in
add
lods
sub
xchg
push
pop
repnz
inc
orl
mov
add
fadd
jo
mov
lock
loop
and
stos
inc
xchg
mov
and
mov
ucomiss
test
aam
lock
jl
jo
je
inc
loop
jnp
jl
mov
pop
fisttps
lds
int3
lods
mov
fcoml
sbbb
pushf
loopne
adc
xor
sti
cs
cmp
jp
sbb
nop
hlt
pop
pusha
sbbl
mov
mov
adc
fcoml
rcl
or
lahf
scas
test
mov
push
test
inc
bound
leave
call
cmp
icebp
popf
fbstp
xchg
or
fcmovu
pop
nop
jp
repnz
xchg
es
sti
adc
das
jbe
sub
cld
and
jae
rcrb
jno
fmul
add
and
mov
dec
mov
lock
adc
inc
mov
mov
or
out
lret
dec
adc
in
clc
je
out
adc
cmpsl
xlat
lret
sbb
sahf
sub
cmp
movsb
xor
sbb
je
mov
adc
mov
es
cwtl
lods
sahf
idivb
aas
mov
ss
ja
xchg
fcom
jp,pt
sarl
push
mov
sub
out
add
inc
sub
ds
push
mov
fs
and
inc
addr16
movd
out
leave
cmp
call
arpl
push
dec
xor
lds
push
pop
mov
inc
pop
push
cli
jmp
adc
int
jns
stos
aam
fprem
dec
sbb
popa
cmp
mov
jl
out
add
inc
ficoml
iret
push
jp
mov
test
dec
sbb
jge
mov
add
ficoms
shrb
mov
sahf
paddsb
push
jne
rolb
lahf
push
xchg
cmp
sub
pop
pop
push
pusha
mov
stc
repnz
pop
cli
lock
xchg
dec
sarl
les
jo
inc
out
and
sub
in
sub
std
es
enter
imul
das
cmp
cmp
push
cli
iret
add
and
adc
shlb
mov
push
pop
rcrl
add
push
fwait
or
test
add
icebp
ret
ljmp
pop
push
pop
das
pop
insl
sarl
and
je
mov
imul
aam
xchg
jbe
push
std
test
dec
xor
sti
icebp
loop
jg
and
mov
iret
adc
jp
lock
cs
scas
add
fcoms
fists
inc
in
sbb
adc
mov
call
mov
add
jp
movsb
jle
adc
pop
orl
sub
adc
clc
dec
mov
ds
clc
jecxz
mov
pop
pop
and
aam
lret
clc
mov
inc
popa
pop
lea
ret
add
xchg
fdivrl
xor
addb
aam
push
mov
mov
jp
int
clc
mov
cmp
jle,pt
insb
negl
cmc
mov
or
shlb
pop
add
rorb
inc
mov
mov
enter
shl
fs
jg
mov
lock
sbb
cmp
xchg
mov
push
jecxz
shrl
and
je
dec
cs
xor
pop
ret
or
mov
pop
adc
sti
sub
fidivrs
sti
insb
xchg
cld
ret
stos
out
cmc
and
fucomp
out
adc
push
pusha
mov
cmc
jecxz
mov
out
dec
insb
daa
adc
dec
push
addr16
out
xchg
sbb
rcl
push
inc
ljmp
cmp
in
sbb
mov
xchg
and
xor
out
cld
pop
adc
mov
orb
xchg
cmp
ds
mov
ds
cmp
outsb
or
pop
fisttps
pop
adc
ret
jo
cmpsl
out
xchg
dec
push
xchg
es
mov
xor
loopne
adc
xchg
xor
mov
sub
xor
into
pop
add
mov
xlat
seto
cltd
in
inc
orb
sti
mov
repz
loop
icebp
subl
sub
scas
push
repnz
xor
ss
jge
test
sbb
mov
add
mov
or
das
or
pop
loopne
cmp
adc
jb
jae
ret
xchg
adc
fs
pop
xchg
arpl
mov
push
ja
push
mov
cmp
call
mov
divb
ds
jl
ss
ss
in
in
push
mov
jno
jb
popf
add
cwtl
adcb
add
enter
rclb
aad
push
clc
lock
mov
push
dec
ret
xlat
lcall
mov
mov
push
push
sti
orb
pushf
push
notl
test
and
cmp
aam
aam
push
mov
int
xchg
pop
adc
scas
mov
mov
sbb
xchg
mov
xlat
mov
out
mov
mov
push
shll
aam
or
mov
or
pop
adc
lcall
das
test
adc
sub
out
dec
cmc
mov
or
shr
je
int
mov
insb
pop
dec
cli
incb
lcall
jg
jle
cmp
icebp
dec
add
mov
bound
clc
cmpsb
cs
mov
dec
add
add
push
imul
nop
ss
cmp
dec
jmp
push
aad
lret
clc
cmpsb
icebp
inc
arpl
push
cs
push
sub
loop
xchg
mov
add
dec
loopne
sti
or
mov
jge
std
or
add
adc
and
clc
push
sbb
mov
xchg
pop
ror
pop
fld
clc
ret
or
lods
out
jbe
stc
shlb
mov
repz
fdivr
push
lss
jl
loop
adc
ffreep
ss
mov
mov
cmp
fimull
daa
leave
mov
cwtl
xor
pop
les
mov
aaa
pop
cmpsl
sahf
ret
js
inc
bound
jno
gs
inc
sbb
adc
or
mov
mov
clc
lods
push
push
and
dec
cmp
inc
rol
sbb
jp
shl
or
xor
jb
imul
mov
repnz
ljmp
jecxz
mov
and
cmp
gs
lods
rorb
iret
xor
popl
loope
in
inc
test
insb
add
scas
ret
jbe
cmp
mov
jbe
ficomps
jle,pt
rorb
test
movsb
dec
mov
jmp
sbb
fiaddl
or
clc
movsl
test
scas
push
test
xchg
jecxz
mov
cltd
stos
push
mov
mov
pop
mov
inc
xor
arpl
pop
mov
in
or
xchg
int
and
rol
xor
cmpsb
scas
xchg
loopne
ret
cmp
scas
gs
addl
add
pop
outsb
inc
dec
push
pop
lahf
inc
shrl
jno
js
or
shl
jl
and
mov
stc
dec
mov
hlt
adc
sbb
out
sti
jbe
cs
imul
call
pop
cltd
mov
mov
and
ss
adc
icebp
cmp
stos
xchg
xor
adc
inc
inc
add
pop
mov
pop
pushf
movsb
stos
mov
sbb
pop
fs
xchg
cmp
cmp
and
loopne
or
enter
bound
xor
cld
cli
lock
adc
loop
test
mov
mov
stc
repnz
ret
rorb
iret
jo
xchg
nop
ds
xor
and
jp
out
pop
sbb
push
pop
pop
sub
cld
rorb
jg
out
loop
fdiv
pusha
inc
cmp
rclb
cltd
jae
xchg
hlt
out
xor
and
sub
lea
cli
rorl
icebp
clc
jmp
mov
test
push
pop
cmp
or
push
movsb
clts
pop
xchg
incw
movsb
cs
hlt
outsl
mov
test
mov
push
mov
mov
inc
or
dec
outsb
mov
popl
in
addb
and
pop
aam
dec
scas
ficoms
imul
and
inc
aaa
sbb
call
jecxz
sbb
das
dec
fildll
push
sub
add
stos
jle
cli
ljmp
mov
cmp
or
pop
push
filds
adc
aad
mov
scas
in
inc
jmp
aas
fnsave
fimuls
cmp
or
stc
dec
jbe
daa
in
sbb
lret
adc
out
jl
dec
jecxz
cltd
sbb
xchg
jle
aas
push
dec
jg
mov
divl
cs
movsl
mov
std
pop
and
cld
fistl
cmpsb
das
or
fistpl
pop
nop
cmpsb
mov
stos
jnp
ffreep
mov
out
xlat
imul
push
dec
insb
pop
out
rol
xchg
pusha
ret
outsl
cmp
clc
inc
aad
add
cmpsl
andps
loop
mov
in
inc
outsb
xchg
lock
jp
shlb
rol
leave
lock
cli
movb
xchg
mov
cmp
mov
shrb
or
push
ds
std
int3
push
add
mov
push
addr16
mov
shll
adc
or
jmp
out
ret
arpl
push
pushf
sti
cmp
dec
sbb
or
adc
sub
fimull
and
jl
push
pop
jno
cmp
aas
pop
mov
idivl
inc
gs
fldl
clc
cs
sbb
pop
xlat
push
push
push
sub
cld
mov
aam
rolb
pop
sub
push
mov
ss
nop
icebp
adc
mov
mov
push
xchg
xchg
loop
repz
and
into
je
int
in
daa
pop
sub
decl
sahf
inc
push
addr16
fwait
mov
iret
outsb
adc
xchg
lret
mov
ds
jle
dec
lahf
inc
les
adc
pop
aaa
orl
mull
rcrl
xchg
icebp
xor
xlat
or
pop
add
mov
hlt
hlt
outsl
std
jp
jbe
xchg
ja
das
sub
out
sbb
outsb
cmc
stos
loop
lock
cmp
clc
arpl
testl
mov
cmp
into
cltd
pop
sub
xchg
test
jno
out
or
popl
lods
lea
mov
lds
fmuls
clc
xchg
test
rcrb
jp
negb
and
out
push
and
int
pop
fsubrs
cli
jbe
leave
scas
mov
xor
mov
mov
or
inc
enter
ret
fisttpl
jle
xor
sbb
rol
add
xlat
mov
jo
mov
sti
jmp
mov
jno
cmp
dec
popa
or
pop
sbb
fcom
push
mov
jl
scas
xchg
cs
addb
gs
faddl
enter
xor
out
mov
clc
cwtl
xor
add
push
andb
rcll
shrb
loop
repnz
xor
js
aam
sbb
mov
sti
pop
femms
sub
mov
push
imul
adc
fs
sub
clc
dec
les
mov
fidivrl
std
ficoml
add
lea
jp
jge
jp
scas
out
mov
or
mov
sbb
sbb
dec
call
in
push
cmp
cmpsb
xchg
xchg
mov
shrb
popa
ds
cs
aam
push
jg,pn
rorl
stos
std
sub
mov
and
mov
sub
loope
push
lcall
xor
xchg
fisubrs
loop
clc
sbbb
test
adc
ds
loopne
sbb
les
mov
and
rcl
das
out
mov
sarl
sbb
lret
sbb
cld
jp
cwtl
pop
stos
dec
add
xchg
imul
pop
nop
jo
mov
fsubrl
cmp
outsb
and
mov
notl
jmp
jno
fisubrs
bound
fsubrl
ds
pop
dec
pop
or
aas
mov
fildll
dec
jmp
xchg
jle
dec
jp
in
into
push
subl
or
loope
movsl
pusha
adc
xor
xor
ljmp
fmul
nop
negl
enter
push
rcll
dec
jge
ljmp
and
imul
fisubrs
outsl
or
fs
scas
cmp
testb
ljmp
mov
add
out
mov
xchg
sub
sbb
pop
sbb
imul
lock
mov
pop
push
xchg
aaa
push
mov
movsb
pop
int
add
out
cmp
or
test
pop
pop
add
repz
outsb
sbb
mov
jb
push
cli
jno
jmp
pop
ljmp
push
jge
push
inc
or
loop
cld
lock
sub
xchg
mov
pop
or
clc
jle
or
add
and
hlt
pop
outsl
dec
sub
xchg
add
arpl
ds
ja
or
pop
repnz
lds
xchg
sub
jmp
bound
lock
aas
fdiv
testb
clc
lock
insb
rclb
adc
divps
cwtl
fnstsw
mov
into
icebp
adc
push
mov
rcrl
pop
jl
test
in
xchg
out
test
lds
mov
outsb
je
add
push
push
cmp
cltd
rclb
movsb
sti
loope
test
and
aaa
and
adc
sbb
pop
sub
add
xchg
nop
lock
push
xor
ret
test
sahf
andl
pusha
roll
or
pop
movsl
adc
jmp
cmp
movsb
das
loope
push
addr16
lds
jecxz
fs
mov
sbbl
dec
cmp
clc
aam
movsb
and
jecxz
lock
push
inc
jno
loope
rcrl
std
call
lock
adc
jno
lahf
push
dec
test
pandn
dec
mov
mov
cmpsl
pop
pop
mov
loop
add
adc
inc
fisubl
shrb
adc
jle
sub
inc
in
lea
scas
jle
in
int
adc
adc
cmp
out
jle
mov
dec
dec
in
aam
lea
mov
mov
iret
sub
aas
inc
inc
in
jae
lret
andl
hlt
call
pop
cmpsb
sub
cmp
adc
mov
mov
mov
add
imul
movsb
jbe
rorl
int3
push
and
cmp
testb
cmp
mov
pusha
fists
lahf
pusha
xchg
mov
insb
pop
mov
clc
insb
outsb
or
push
mov
clc
pusha
nop
into
cli
mov
negl
clc
push
movsb
pushf
mov
fsts
filds
mov
xor
lods
and
repz
sbb
mov
push
movsl
dec
pop
push
xor
or
sub
cs
cli
cli
fidivrl
mov
gs
cmc
xor
pushf
inc
inc
mov
daa
or
mov
adc
and
push
inc
out
pop
filds
sbb
nop
mov
inc
sbb
jbe
insb
xor
and
mov
push
dec
loop
jne
mov
outsb
lahf
sbbb
cmp
js
enter
push
bound
pop
pop
pop
sarl
mov
xchg
rol
ret
pop
sub
movsl
xor
cmc
in
ret
push
jl
cld
je
loope
cmp
fmuls
adc
and
cli
xor
xchg
and
push
mov
or
push
mov
pop
mov
sbb
fmull
adc
loop
arpl
test
lock
sub
clc
or
mov
cmp
lock
mov
fdivrl
cltd
ss
pusha
push
outsl
daa
ljmp
mov
ds
jno
das
push
push
repnz
lea
rcll
leave
in
sarb
lret
lcall
negl
sahf
lcall
je
xchg
push
jbe
xchg
cld
sahf
fwait
fwait
cmp
outsl
mov
jb
or
cmp
loopne
add
insl
inc
xor
cmp
cld
jge
hlt
inc
sarb
xor
in
loope
cmpsl
out
xchg
and
aad
repnz
arpl
pop
std
jo
mov
les
inc
or
loopne
ret
cwtl
jbe
mov
outsl
dec
or
or
pop
rorb
adc
in
fiadds
cli
pop
insb
pushf
ja
fwait
negb
hlt
dec
lret
and
add
add
cmpb
inc
inc
pop
adc
mov
jle
mov
inc
cmp
jo
out
rcrl
cmpsb
and
inc
push
shrb
xchg
or
and
mov
int
push
pusha
ds
addr16
jecxz
in
inc
mov
lods
pop
xchg
jle
add
pop
pop
mov
sbb
add
add
out
mulb
js
test
pop
mov
bound
mov
lcall
mov
sbb
popf
jge
adc
sahf
push
dec
mov
pop
das
mov
pusha
sub
pop
jp
pop
cmp
enter
scas
pop
or
xor
lcall
or
or
jecxz
dec
add
out
test
mov
xor
loop
or
out
icebp
comiss
push
cmp
inc
inc
xchg
bound
push
mov
pop
std
push
je
xchg
add
xor
adc
push
sub
bound
mov
and
jp
lahf
insl
fcoml
inc
stos
sti
pop
pusha
lods
mov
pop
aad
mov
inc
cmp
loopne
repnz
mov
es
jl
iret
pop
daa
xor
adc
adc
icebp
insb
xchg
cwtl
out
pop
ds
mov
les
sub
mul
lds
push
adc
adc
mov
cmpsl
ret
xor
pop
mov
adc
sub
jns
mov
adc
in
and
stos
jno
decb
call
cmpsl
daa
add
add
mov
push
out
scas
inc
mov
pop
pop
mov
xchg
clc
cli
xchg
sbb
jp
insl
cli
mov
push
insb
dec
sarb
rclb
xchg
mov
es
das
test
addl
add
fbld
clc
ljmp
xchg
add
mov
inc
xchg
inc
push
mov
adc
into
xor
adc
lahf
mov
call
lods
cwtl
aam
js
sbb
loopne
pop
js
jl
pusha
cmpsl
sub
cwtl
cmpsb
push
or
adc
inc
clc
mov
loop
pop
cmp
in
pop
cli
cld
lock
sahf
push
mov
mov
mov
or
pop
dec
ret
adc
push
and
enter
outsl
jbe
cmp
jg
pop
or
aas
sbb
sub
nop
clc
hlt
sar
shlb
ljmp
sarl
xchg
jle
js
int
push
sahf
dec
jl
sbbl
mov
es
fstpl
push
jmp
test
sbb
mov
push
push
add
adc
lret
mov
mov
in
jbe
adc
add
lds
mov
in
cli
pusha
popf
ljmp
dec
dec
sahf
out
sub
test
xchg
adc
jecxz
dec
or
mov
scas
imul
dec
sub
xchg
dec
js
sub
loopne
xchg
mov
call
aam
jmp
mov
dec
stc
jno
scas
add
fs
call
mov
xchg
in
jecxz
push
jbe
pop
jb
pop
pop
test
faddp
xchg
cs
movsb
cmp
and
and
pop
adc
enter
mov
add
lahf
rcl
jb
pop
pop
adc
js
test
inc
inc
lock
xchg
lock
jne
out
lret
hlt
pop
cwtl
les
mov
lret
add
out
sub
or
mov
into
inc
jecxz
inc
mov
cmp
loop
into
jle
movsb
sahf
jo
js
nop
push
iret
push
push
adc
lds
in
jg
jle
pshufw
into
xor
sbb
mov
inc
cwtl
ss
cmp
pop
stos
push
push
call
dec
js
dec
dec
imul
and
idivb
je
cmp
sbb
ds
pop
in
and
sub
mov
mov
xor
cltd
xor
test
or
sub
loopne
cs
sahf
aam
aaa
cmc
or
inc
inc
pop
jl
lock
pushf
int3
lds
or
sub
out
aam
inc
ja
cltd
dec
fadds
fcoml
imul
cmp
ds
das
jle
add
enter
loope
sti
sahf
xchg
push
push
notb
fsubl
mov
push
test
loopne
dec
ds
adc
jmp
mul
sbb
stos
loopne
jae
push
mov
out
dec
ret
and
inc
filds
out
sub
aam
sub
mov
xor
cli
js
out
pop
je
xor
dec
out
ret
cli
lret
dec
cwtl
mov
jle
mov
jno
shr
test
pop
sahf
icebp
call
xor
shl
ds
push
test
inc
pop
out
lods
push
jmp
roll
sbb
icebp
xor
xchg
popf
mov
rcl
js
outsb
push
dec
das
scas
js,pt
hlt
inc
mov
bound
pusha
jne
xchg
js
cli
orb
repnz
push
sti
cmp
sub
add
jl
xchg
lret
out
aaa
aaa
aaa
mov
or
out
repz
movsb
dec
aaa
aaa
aaa
aaa
scas
xchg
and
out
stos
std
insb
adc
clc
sbb
aaa
push
gs
inc
push
cmp
roll
je
cmp
loopne
inc
sar
mov
xor
addb
mov
jmp
mov
jge
cld
icebp
adc
stc
int3
push
add
insl
cli
jno
push
add
data16
jo
addl
movsb
std
inc
clc
sub
aas
jge
test
cli
and
cmp
je
cli
cmp
aad
jg
js
xor
push
or
and
jp
sbb
fildl
test
mov
leave
fldt
jecxz
add
pop
mov
cmp
inc
icebp
loop
clc
call
int3
jbe
add
outsb
and
out
xchg
bound
addr16
in
out
xchg
movsl
add
add
push
cmpsb
mov
dec
movsl
not
pop
into
jns
mov
mov
sarb
sbb
lods
fsts
scas
lret
lock
inc
cli
es
mov
adc
cmc
inc
and
pushaw
into
cmp
mov
dec
cmp
or
jge
scas
xor
or
xchg
dec
push
pop
jl
negl
push
pop
mov
adc
dec
or
bound
in
jmp
test
lret
lods
jmp
in
insb
pop
xchg
cwtl
daa
orb
push
das
push
cmp
jbe
mov
loopne
dec
pop
aam
inc
xchg
dec
push
or
out
inc
mov
ret
mov
xor
fbld
or
stos
aas
jmp
xchg
aad
jbe
sbb
mov
clc
orb
repz
mov
mov
mov
add
mov
in
cld
ss
push
incb
loop
bound
lret
test
fiadds
jbe
leave
or
sbb
hlt
stos
add
movsl
add
stos
cmp
outsb
outsb
or
ja
cmp
popa
push
cli
push
fistps
mov
sbb
int3
adc
dec
mov
cmpsl
int3
xchg
pushf
and
lock
pop
in
inc
mov
sti
mov
aad
adc
and
mov
out
mov
sarl
insl
std
es
cmp
in
addb
fadds
mov
in
cmp
cmp
call
shl
inc
mov
cmpsl
cmp
lret
lock
adcl
fisubs
dec
stos
mov
ljmp
push
xor
dec
push
in
inc
loope
and
test
jge
ljmp
cmp
cmp
pop
jg
pop
push
sarb
sbb
repnz
pop
adc
cmpsb
mov
pop
and
les
cmp
filds
fiadds
inc
pop
stos
add
add
push
xor
mov
inc
adc
add
jecxz
lock
sbb
xor
clc
mov
add
push
push
out
fldenv
sbbb
push
in
imul
push
mov
mov
adc
cli
mov
xchg
test
push
fbstp
pop
out
fmul
cmp
clc
jle
mov
xor
movsb
dec
pop
outsb
adc
xlat
into
xchg
out
movsl
mov
mov
sti
pusha
add
lods
xor
mov
xchg
call
scas
shl
and
imul
inc
je
adc
insb
clc
mov
sub
push
outsw
jmp
add
pushf
mov
icebp
cmc
shr
cmp
push
push
sti
pop
dec
mov
imul
mov
jnp
cmp
out
push
clc
les
xor
ret
sbb
xchg
pop
insl
das
lods
jbe
jo
loope
sbb
repnz
mov
clc
out
out
outsb
mov
xor
jo
mov
cmc
add
loop
mov
negl
xor
or
dec
push
and
jp
pop
cmp
test
stos
enter
push
dec
mov
add
mov
mov
test
and
js
data16
jp
mov
in
sub
mov
nop
xor
rcrl
mov
daa
xchg
xchg
lods
cmc
pop
or
dec
and
xor
jmp
cmpsl
divl
inc
mov
fdivrl
jb
push
xchg
xchg
pop
aas
push
inc
mov
mov
add
sbb
rcr
mov
xor
notl
jl
or
sahf
enter
aas
lods
repnz
and
mov
pushl
aas
adc
pop
data16
ljmp
jge
mov
jo
and
in
mov
cs
cld
fwait
mov
or
xor
add
mov
inc
mov
push
sar
dec
loope
sub
leave
fidivs
xor
in
sbb
adcb
jl
fsubrp
cmpsb
out
xor
cmc
mov
mov
mov
es
xchg
arpl
lret
lahf
sahf
lahf
dec
jge
out
into
xchg
sahf
ret
cmpl
negl
lock
sbb
neg
push
scas
je
or
xor
iret
xchg
or
sbb
ficoms
sti
adc
mov
add
pusha
xor
mov
sbb
loop
pusha
pusha
add
jo
int3
inc
cld
mov
inc
adc
cs
push
ret
insb
enter
jecxz
loop
push
in
lahf
xchg
mov
dec
and
or
sbb
dec
andb
cli
add
and
je
fnstsw
add
daa
dec
les
jecxz
dec
loop
cmp
jae
dec
mov
inc
xchg
push
in
xor
cmpb
fidivs
mov
xchg
mov
hlt
ds
adc
or
addr16
pop
int3
outsb
daa
clc
dec
adc
clc
aam
icebp
lcall
push
sahf
xchg
pop
push
out
mov
push
xor
jge
or
pop
and
mov
lds
scas
and
and
data16
aam
xchg
outsb
pushf
sahf
int
les
cmpsb
out
jge
cli
fistl
movsl
mov
addr16
movups
es
push
negl
iret
jle
pop
xor
pop
and
imul
and
aam
jns
dec
jp
cmpsl
fists
and
clc
xor
adc
jo
jbe
pop
scas
movsl
ss
lods
push
lea
sub
lds
lock
shll
sbb
std
xor
cmp
js,pn
ret
dec
loop
and
into
add
out
adc
icebp
sbb
pop
mov
sbb
in
je
outsb
and
pop
loop
shl
add
adc
es
in
sub
insb
or
sub
mov
jecxz
stos
mov
ljmp
inc
jo
loope
icebp
nop
hlt
pop
adc
rcrl
mov
out
inc
cmp
inc
outsb
jge
out
dec
cmp
mov
les
std
popa
loop
xchg
cmpl
xlat
fisubl
mov
outsl
call
push
sbb
negl
and
leave
test
mov
out
sub
mov
dec
loop
xor
push
pop
mov
or
ftst
fwait
aam
ficompl
and
xor
cld
lock
jecxz
stc
or
mov
xchg
pop
fistpl
jl
fdivr
fisttpll
loop
sti
stos
out
pushf
fisubl
hlt
ret
jo
or
test
mov
mov
aaa
out
orl
addr16
push
xlat
push
int3
call
xchg
pop
add
aad
loope
insb
fsubrs
xor
mov
clc
hlt
adc
scas
es
shl
xchg
cmp
nop
mov
stc
lret
and
aaa
test
cs
cltd
xchg
fsubrs
xchg
xor
mov
testb
adc
push
hlt
icebp
mov
lea
ds
push
lcall
xor
pusha
daa
pop
push
jbe
les
aas
nop
push
data16
call
cmp
or
mov
inc
outsl
in
sbb
scas
lods
negl
inc
bound
xor
cmp
cli
divps
pop
and
sarb
clc
jle
and
jle
jns
mov
fucomi
fmull
pop
mov
xor
push
ret
fwait
jge
jnp
aaa
loope
adc
mov
mov
nop
hlt
xor
mov
stos
adcl
pop
jno
dec
loopne
pop
sbb
test
cmp
lods
inc
jbe
pop
hlt
jge,pt
sbb
lcall
test
pop
stc
cli
movsl
dec
jmp
loope
and
popa
push
xor
mov
nop
aas
mov
inc
mov
jns
outsb
insb
and
adc
inc
pusha
ss
fidivl
xchg
xor
mov
cmp
push
xorb
call
jb
ret
adc
mov
add
shll
std
xchg
test
adc
ret
mov
xchg
ror
adc
xor
aam
jb
into
stos
sbbb
mov
lcall
js
mov
sub
xor
icebp
dec
enter
aad
push
xor
inc
clc
inc
pop
cmp
js
pusha
pop
add
ret
hlt
push
ds
and
fdivrs
cli
incb
daa
clc
andb
pop
std
out
int
out
push
out
add
andb
fnstsw
cmp
sbb
mulb
lcall
addr16
cmpsb
dec
or
xchg
and
shll
sub
mov
lods
xor
push
adc
dec
ss
insb
shrb
xchg
and
mov
and
mov
sub
push
ss
inc
mov
add
dec
loopne
inc
pop
adc
pop
adc
sar
lock
pop
push
scas
sub
sub
sbb
sub
jp
push
sub
loope
das
push
mov
mov
lock
sbb
sub
stos
sub
popf
in
in
push
or
clc
sub
nopl
and
or
das
dec
xchg
outsb
xchg
pop
and
jle
out
jmp
mov
push
or
das
test
add
hlt
sbb
in
enter
sbb
push
mov
fs
rclb
sub
xchg
test
pop
xor
xchg
push
lret
mov
movsb
ss
sahf
lods
adc
lock
and
ret
jmp
pusha
xor
pop
js
xchg
movsl
xchg
push
push
pusha
cmp
jo
fsubs
sbb
jno
jnp
or
pop
sub
pop
loopne
ret
push
xchg
js
add
rolb
lock
xor
pushf
adc
aam
push
dec
mov
test
sub
insb
pop
aaa
add
jo
and
and
sar
clc
leave
ret
rol
call
rclb
dec
pop
into
test
jmp
xchg
cld
dec
cmp
cmp
and
pop
pop
mov
call
rolb
add
xor
lock
cmp
jle
mov
rcrb
adc
cmp
movb
fnstenv
movsb
cmp
ficompl
cmpsb
sahf
icebp
xchg
add
inc
cld
loopne
jbe
outsb
es
orl
xchg
adc
aad
in
daa
mov
es
jno
cwtl
jge
test
fs
cli
add
cmp
sbb
inc
cmp
ja
inc
loopne
mov
addl
push
test
lods
add
or
lahf
aas
les
les
fs
fdivs
jl
sarb
rolb
mov
push
out
nop
sti
dec
sbb
es
mov
mov
jmp
mov
sub
loopne
jb
sbb
push
dec
lret
icebp
add
xchg
je
jl
add
sbb
out
xorl
xor
fdivr
xchg
mov
movsb
testb
xlat
jmp
enter
jl
mov
shr
jne
mov
xchg
cli
test
cmp
cwtl
data16
inc
inc
sbb
jbe
inc
pop
adc
and
jbe
mov
or
sub
ds
xor
dec
dec
testl
je
jmp
popw
scas
push
aas
cmp
mov
rcrb
pop
sub
sub
mov
adc
test
ror
or
pop
xchg
push
cmpsb
shl
popa
xchg
jecxz
push
out
mov
push
clc
xchg
inc
loop
pushf
push
mov
ljmp
mov
jle
push
clc
jmp
cmp
add
cmp
mov
cld
movb
add
dec
mov
imul
cmpsl
cmovo
mov
push
lcall
and
lock
loope
jcxz
or
xor
lcall
pop
jne
call
xor
scas
lahf
shlb
inc
lock
cwtl
cld
jbe
rcrb
sahf
cs
shlb
mull
mov
adc
sub
inc
loopne
push
sahf
xchg
or
xchg
hlt
inc
xlat
xchg
xor
hlt
jecxz
or
loop
mov
out
jp
mov
adc
aaa
mov
sub
scas
lea
mov
inc
arpl
sti
mov
pop
lret
lods
cmp
ret
jp
xchg
iret
fidivs
mov
cld
sub
into
icebp
arpl
shrl
push
or
cmp
out
lods
add
add
mov
rcl
inc
mov
adc
xchg
sbb
sahf
xor
scas
pop
cmp
mov
and
fcmove
push
insb
sbb
clc
sbb
shlb
jmp
sbb
xchg
push
ret
mov
shl
adc
faddl
clc
clc
loopne
int3
xchg
or
es
mov
dec
cmp
outsb
jns
outsb
shll
mov
push
ret
in
rcr
fdivrl
lcall
sub
inc
sbb
cli
jle
movsb
add
and
add
adc
clc
jmp
inc
sbb
mov
mov
aas
cmp
out
mov
cmp
scas
pop
ds
mov
and
lock
stc
add
pop
sub
scas
ds
jb
jne
pushf
adc
pop
aas
add
fidivl
pop
fs
hlt
dec
les
aam
pop
push
pop
std
or
mov
f2xm1
lock
nop
das
add
sub
cmc
jge
lods
pop
bound
lret
pop
inc
lods
cmc
xchg
mov
jl
pop
add
lock
data16
lock
and
jno
sbb
lret
push
cwtl
cs
jne
cmp
pop
cwtl
jp
mov
xlat
pop
pop
pop
sbb
pop
jg
mov
xchg
and
mov
mov
js
pop
test
mov
mov
into
add
fdivrp
in
xchg
mov
icebp
mov
call
gs
scas
xchg
cmc
xor
popf
add
stos
adc
push
ret
inc
in
jecxz
int3
lea
mov
cmp
out
and
xlat
aam
pushf
dec
mov
mov
or
xor
inc
cmp
cmc
ss
sbb
ret
popa
cmp
clc
imul
ds
popf
sarb
mov
cmp
filds
mov
sbb
icebp
sbb
or
mov
outsb
testl
pop
bound
clc
loopne
cli
mov
pop
shlb
push
xchg
add
sub
jo
cs
scas
ffreep
inc
aam
enter
cmpsl
movsb
aad
and
adc
jb
jp
dec
out
or
lock
mov
jbe
pop
out
push
gs
push
jge
jecxz
fstps
dec
nop
stos
inc
xor
xchg
fucom
loopne
clc
mov
in
mov
addr16
inc
jl
pop
inc
push
jl
cmc
rolb
clc
mov
nopl
test
mov
imul
js
mov
add
aaa
movsb
xchg
cs
sbb
adc
mov
imul
push
dec
rclb
jle
xorl
pop
adc
and
cli
je
push
loop
shll
cli
jmp
aam
xchg
aaa
clc
cmc
pop
mov
loope
mov
out
dec
mov
pop
mov
mov
dec
xorb
xchg
add
repz
and
add
aam
out
mov
negl
call
mov
loop
sbb
inc
jecxz
out
loop
cmc
call
movsb
lock
test
push
mov
xchg
ss
and
dec
rolb
mov
loopne
cmp
imul
mov
jle
les
icebp
pop
cmp
pop
js
and
pop
aas
and
lods
pop
mov
fidivs
xchg
jnp
repnz
cltd
or
test
xor
jmp
dec
mov
push
add
jne
cs
push
mov
mov
mov
fdivl
xchg
pop
xor
movl
jmp
xchg
jl
mov
ljmp
insl
mov
xchg
gs
xchg
not
push
jge
popa
fimuls
gs
jmp
lahf
jb
mov
rorb
loop
mov
push
test
jnp
icebp
mov
fisubs
ret
lock
clc
js,pt
xlat
pop
pop
push
fistpll
mov
xlat
xor
rolb
pop
inc
pop
inc
mov
cwtl
insl
out
xchg
mov
push
das
dec
sbb
mov
push
inc
add
test
push
les
push
addr16
dec
ljmp
sbb
add
or
lds
fcomps
mov
es
mov
or
fbld
iret
jl
mov
jp
xor
mov
fsubs
inc
das
sbb
or
mov
nop
mov
divb
loopne
pop
test
call
mov
daa
das
inc
sbb
out
fcoms
sbb
into
fdiv
lock
shrb
mov
add
mov
or
loopne
arpl
clc
push
mov
mov
cmp
and
xor
mov
push
divb
adc
sub
push
fnstcw
test
rolb
mov
and
cmp
cs
ds
fsubs
movsl
xchg
inc
mov
lods
add
in
clc
fdivrs
sbb
mov
movsl
sub
js
sar
imul
int3
das
mov
jle
sub
mov
ds
pop
cld
popa
add
clc
negb
loope
and
clc
flds
inc
dec
xor
stos
mov
pop
xor
out
mov
inc
cmpsb
pop
add
push
sub
pop
mov
add
push
int
xchg
hlt
mov
mov
and
mov
add
sahf
mov
and
cmp
les
call
pop
pop
pop
std
inc
cs
sbb
andl
xchg
or
and
fcoms
clc
and
dec
cmp
and
scas
and
jo
fcompl
lock
xor
js
nop
mov
xchg
pop
dec
add
js
jl
and
mov
fiadds
xchg
sbbb
pop
and
cwtl
lcall
mov
fdivl
push
fisubrs
ds
lret
hlt
stc
push
shlb
jbe
adc
mov
pop
sbb
shlb
mov
loopne
pop
inc
scas
es
pop
stos
cmp
adc
ficoml
mov
test
xor
cwtl
xchg
xor
sub
jbe
ds
in
sbb
mov
clc
push
out
ss
and
mov
loop
inc
mov
je
sbb
push
jo,pn
push
in
ret
test
add
aas
loopne
push
out
cmpsl
fcmove
xor
sub
xchg
addl
jecxz
rclb
fs
mov
fcompl
popa
sarb
sbb
ds
sub
out
add
sbb
out
inc
ljmp
sahf
stos
cltd
clc
jle
cli
xchg
es
pop
fwait
push
test
fldl
jp
imul
fidivs
mov
add
xchg
fsubs
stos
ret
int3
scas
ret
repnz
pop
add
movsl
cmp
fadd
or
jmp
add
iret
jno
pop
or
xor
cmp
sub
pop
ret
and
mov
mov
cwtl
fmull
pop
fbstp
dec
mov
xchg
jae
sahf
xchg
sbb
mov
mov
movb
idivl
rcrb
cmp
push
mov
sbb
push
mov
xchg
cmpsb
lcall
je
filds
pusha
sub
inc
lahf
sbb
loope
cmpsl
arpl
int
xchg
cmp
mul
add
inc
loopne
xchg
les
cmp
jg
sbb
or
lret
sbb
add
mov
pop
cmp
jnp
mov
decl
shlb
mov
xchg
jle
fs
incb
in
ret
push
sub
jmp
lods
call
pop
xchg
in
xchg
cmp
sbb
mov
cmp
jo
cs
into
jge
pop
inc
stc
mov
and
fwait
les
or
mov
mov
ljmp
mov
add
inc
xor
ja
adc
psubusb
dec
out
js
icebp
loope
clc
jo
pushf
cs
xchg
cmp
insb
mov
repz
inc
lret
adc
jp
sahf
push
inc
cld
int3
and
push
xchg
add
xchg
pop
and
inc
aas
adc
lock
xor
and
or
sub
incl
rcrb
inc
xchg
test
notl
decl
inc
test
ficompl
imul
lock
adc
inc
in
xrelease
lcall
dec
cld
inc
test
sbb
or
lcall
ljmp
insb
mov
inc
stc
lods
test
or
insl
fwait
shll
mov
xlat
inc
loop
hlt
xchg
lahf
dec
cltd
ljmp
arpl
loop
lcall
add
xchg
cltd
dec
adc
pop
in
aam
jp
add
inc
in
xchg
or
pop
rorb
pop
sub
repnz
jmp
shlb
push
pop
inc
xchg
in
jge
push
jecxz
jns
add
add
aaa
xor
jb
add
aad
add
mov
lcall
sub
into
popa
test
in
fiadds
inc
sub
cmp
cltd
fdivr
call
out
push
cmp
cli
mov
fs
mov
sbb
mov
pop
mov
jmp
and
jg
ja
inc
jmp
xchg
leave
dec
xchg
adc
dec
fstl
popa
out
push
test
lcall
imul
hlt
sub
sub
adc
fisubrs
or
pushl
mov
sub
push
popf
jnp
push
addb
fs
rcrb
popa
ret
fs
sbb
jge
jnp
inc
addb
hlt
adc
pusha
popf
dec
fsts
mov
dec
dec
lret
fstps
push
fists
adc
lcall
xor
cs
sbb
add
lcall
jl
lds
mov
hlt
sbb
and
pop
roll
adc
or
mov
or
or
jo
setle
jecxz
stos
or
fisubs
add
jae
ds
jb
sbb
push
adcb
sub
mov
loop
pop
sub
je
iret
nop
insl
mov
call
cld
sarl
inc
mov
push
add
test
and
and
outsl
mov
fcomps
inc
sarb
sbb
xchg
sub
pop
in
cmpsb
jg
idivb
or
aaa
add
test
das
add
je
inc
icebp
dec
jp
lret
jecxz
ss
mov
mov
mov
arpl
sbb
call
out
or
mov
mov
or
in
cmp
mov
repz
push
mov
cmp
mov
incl
xor
sub
push
pop
push
lods
mov
jnp
sbb
adc
insb
push
pop
mov
push
popa
push
lahf
stos
jnp
sub
or
ds
decl
xchg
dec
mov
adc
pop
xchg
fildll
cld
dec
and
mov
in
and
movsl
pop
leave
lea
mov
jnp
into
mov
fcomps
int3
pop
inc
jne
sub
clc
ljmp
es
aas
flds
test
and
incl
in
test
shll
mov
add
or
call
leave
repz
add
cmpsl
fs
incl
sub
pop
pop
jbe
test
fidivs
inc
mov
das
and
ss
in
mov
stos
aas
outsl
dec
pop
lods
setp
ror
adc
pushl
insl
fisubl
pop
cs
cmp
adc
push
lods
decl
iret
popa
mov
xchg
pop
xchg
in
aad
lcall
ret
clc
mov
aas
push
jmp
loopne
push
and
cwtl
jnp
push
jbe
add
test
les
movsl
std
loopne
in
inc
jmp
jmp
faddl
call
repz
add
sub
sub
std
lcall
insw
xchg
pop
and
lret
lods
sti
in
out
jae
fcmovbe
xchg
aad
sub
call
mov
add
cmpsb
push
fldenv
or
lcall
lods
incl
push
cmc
push
sti
adc
sbb
xor
rclb
ljmp
rolb
in
sarl
idiv
jnp
pop
inc
movsl
mov
dec
lock
cli
test
in
dec
mov
jmp
daa
mov
add
jp
mov
and
stos
not
add
xchg
jmp
inc
lahf
insl
xor
call
jl
punpckhwd
wrmsr
jne
mov
jb
loop
inc
fprem
pusha
fucomip
xchg
movsb
in
inc
ds
sub
out
inc
push
loopne
fcomip
out
jno
xchg
push
pop
mov
ds
jg
xor
push
test
mov
incl
cmpsl
xchg
push
fwait
mov
outsb
jge
push
cmp
jp
mov
mov
ss
mov
faddp
push
arpl
enter
in
int3
push
mov
inc
xchg
lcall
imul
mov
lret
dec
movsb
xchg
inc
pop
pop
mov
sbb
call
cli
fnsave
xor
in
fidivrs
push
mov
add
xor
fs
into
std
sbb
pop
mov
cmpsb
stc
inc
sbb
jno
test
add
dec
std
aad
loope
pushl
cld
decl
daa
in
xor
fcmovbe
retw
cmp
ret
or
imul
lcall
incl
pop
test
cmp
dec
ret
jge
movl
shl
cs
rorl
ljmp
sub
mov
dec
cmpsb
loopne
icebp
out
idivb
in
js
bound
xchg
mov
mov
daa
leave
cmp
cmp
inc
incl
bts
dec
mov
movq
sbb
inc
out
or
cmp
push
repz
cmc
jmp
xchg
je
rclb
jle
mov
xchg
xchg
ljmp
dec
inc
sbb
sub
std
test
pushf
fldl
cmp
cltd
fmuls
mov
mov
mov
das
jae
xchg
enter
ds
jmp
jnp
add
mov
mov
pushl
add
fs
jne
mov
aas
or
sub
clc
imul
rorl
aaa
cs
in
es
nop
add
cmpsb
cmp
data16
nop
jbe
into
xor
outsb
sub
ret
pushl
cld
cwtl
enter
addr16
cmp
iret
inc
fbstp
pop
push
iret
repnz
dec
cmp
pusha
mov
shll
xchg
and
jecxz
xchg
cmp
clc
out
add
stc
sub
dec
outsl
mul
jno
jge
xchg
movsb
scas
pop
fldl
cwtl
incl
jecxz
or
int
mov
divl
pop
add
inc
rcrb
cmpl
lock
sbb
inc
pop
int
into
xchg
gs
shlb
sub
mov
out
sub
shrb
push
pop
sbbl
lds
mov
daa
divl
cmc
call
aad
xor
addr16
lahf
jg
sbb
ficoml
leave
push
jmp
pop
in
iret
aaa
popa
outsl
je
cmp
mov
mov
imul
xchg
cmp
test
jae
gs
jmp
fs
cmc
cmp
dec
push
sub
cmpsl
sub
pop
clc
jmp
xlat
mov
push
xchg
loopne
lcall
repz
pop
or
out
jb
pop
xor
jmp
scas
outsb
add
out
adc
ljmp
addr16
sar
mov
out
mov
cmp
mov
in
in
daa
stos
cli
decl
mov
scas
movb
ljmp
ljmp
outsl
dec
stos
aad
shrl
mov
dec
dec
pop
clc
nop
dec
leave
dec
cld
gs
clc
in
jmp
mov
jmp
cmp
sbb
jmp
inc
add
lock
aam
pop
test
shrd
lcall
js
pushf
imul
sbb
jmp
outsl
mov
sbbl
ret
jmp
push
lods
push
dec
mul
push
frstor
mov
pushl
dec
dec
out
ljmp
jecxz
lahf
and
aaa
insl
adc
push
sbb
cli
push
cmc
out
popf
xor
and
mov
cmc
ljmp
in
mov
ret
mov
xchg
mov
mov
inc
repnz
pushl
outsb
lds
fwait
or
clc
xchg
das
divb
mov
cs
lret
lcall
jb
xchg
stos
pop
push
and
xor
aas
lock
xor
fcompl
dec
fimull
adc
lods
pop
push
mov
decl
arpl
fs
ss
shrl
jb
lret
out
push
nop
adc
dec
inc
cmp
push
xor
dec
in
xchg
call
mov
es
scas
mov
push
in
mov
jmp
mov
jl
push
daa
add
mov
imulb
inc
cli
call
sbb
test
push
mov
push
fxch
mov
aaa
ljmp
movsb
jg
push
out
repz
std
decb
pop
rcr
mov
ljmp
js
mull
adc
shl
inc
dec
pop
push
sti
subl
push
gs
ljmp
or
lret
sub
jge
in
mov
aad
inc
imul
jno
cmp
lcall
sti
scas
mov
inc
cmp
std
je
repz
pop
sbb
cwtl
rcr
lcall
xor
sahf
inc
pop
dec
mov
sbb
bound
and
pop
ds
xor
daa
or
cmp
jno
js
jno
sbb
pusha
fs
adc
aaa
push
jo
aas
cmp
bound
sbb
pop
or
add
xchg
scas
inc
push
mov
and
mov
adc
cmp
xor
or
and
lea
jmp
mov
int
hlt
mov
fsubs
test
int3
pop
js
repz
insl
mov
mov
jl
jo
pop
or
push
imul
push
adc
sbb
call
sahf
out
test
jo
xor
jnp
cmp
push
dec
and
mov
test
adc
or
and
lock
adc
or
sub
hlt
clc
cld
enter
mov
imul
push
mov
push
push
imul
inc
mov
mov
lcall
in
mov
push
je
jnp
jge
dec
outsb
push
and
inc
push
push
cmp
mov
xlat
mov
push
mov
push
sbb
push
int
jns
push
mov
loopne
sahf
negl
push
lods
pop
sbb
lahf
loopne
fsubrp
faddp
jbe
push
ror
out
push
fs
outsb
lahf
data16
push
push
jo
sub
add
rolb
inc
xchg
rclb
mov
mov
sahf
out
aas
push
inc
data16
ds
imul
push
or
js
clc
adc
fnsave
add
icebp
push
xchg
outsl
mov
pusha
mov
mov
adc
adc
mov
inc
mov
mov
xor
fisttps
push
mov
lret
mov
call
or
ret
cmp
mov
nop
inc
push
lea
shr
fcomip
std
jmp
adc
dec
or
adc
push
add
sbb
xor
jmp
adc
or
push
or
sbb
jmp
dec
sbb
movsl
imul
inc
test
dec
inc
mov
push
xlat
incb
movsl
repnz
ljmp
adc
mov
or
add
aaa
or
or
cmp
jne
mov
cmp
xor
mov
insl
insb
cmp
and
fmul
add
fs
jno
fstpt
je
jo
in
in
inc
stos
jl
js
dec
addr16
mov
or
push
inc
outsl
or
fcoms
push
js
in
fldt
sbb
adc
push
sbb
mov
xor
stc
mov
pop
in
pop
fadds
adcb
pusha
adc
shlb
fnstenv
sbb
rclb
out
xchg
insb
fwait
mov
rcrb
pop
pop
push
and
outsl
adc
or
lea
les
push
jne
push
lret
js
and
lds
xchg
adc
mov
add
xor
mov
add
ja
pop
dec
aam
push
andb
sub
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
jg
xorb
xchg
outsb
je
repnz
sti
imul
add
and
xor
push
je
mov
jp
pop
rolb
push
push
ss
sbb
adc
jnp
sbb
push
sub
or
mov
dec
sbbl
outsb
cs
sub
outsb
cmp
rol
cmpsb
sbb
test
cmp
std
and
outsl
inc
je
jl
mov
repz
xchg
pushf
movsb
lods
mov
cmp
repz
int3
aam
in
ds
repz
hlt
cld
add
or
jns
out
sbb
sub
sahf
out
sahf
cmp
dec
push
pop
fs
out
insb
je
test
add
leave
leave
leave
add
inc
xchg
test
je
jb
repnz
or
fs
adc
enter
inc
dec
inc
sahf
xchg
js
in
scas
movsb
and
iret
lock
daa
and
add
mov
insb
inc
xor
sbb
clts
inc
ffree
getsec
or
adc
mov
cmp
out
adc
sahf
or
test
int3
out
jbe
fsubr
enter
sahf
out
sahf
xor
push
fs
jns
out
nop
movsb
mov
fsubs
add
adc
dec
scas
inc
push
push
or
out
adcl
sbbb
paddusb
fwait
push
add
push
popa
push
aaa
lods
push
dec
rolb
push
mov
jo
push
sbbb
nop
aas
jnp
imul
aas
push
rolb
inc
jp
sahf
push
pushl
aas
adc
jnp
mov
rcrl
sbb
ljmp
xor
push
push
sarl
mov
cmpsb
xor
sti
jnp
hlt
rorl
mov
or
push
iret
repz
add
or
add
sahf
cmpsl
stc
cmp
adc
adc
adc
out
cmp
push
or
jnp
add
jl
sbb
nop
sbb
push
iret
repz
adc
or
cmpsl
stc
cmp
adc
or
add
out
inc
adc
and
sahf
out
xchg
add
push
shl
sahf
mov
ret
fistpll
push
negl
clc
push
and
les
adc
out
xor
dec
push
jns
pop
or
add
sarl
add
dec
cmp
cmp
repz
iret
repz
addb
iret
repz
mov
sahf
out
mov
mov
sahf
out
ficomps
xlat
jno
call
dec
pop
addb
push
jnp
bound
or
jno
fimuls
punpckldq
ret
add
mov
jle
arpl
out
pop
jnp
out
or
mov
pop
in
bound
andb
xor
movswl
insl
mov
and
xor
jle
mov
ja
cmpsl
das
sti
xcrypt-cbc
cmpsl
xchg
xchg
out
call
or
xchg
xchg
xchg
add
adc
push
nop
adcb
cmp
mov
cmp
cmp
add
sbb
pusha
xor
cmp
push
xchg
xchg
fildl
adc
jl
xchg
push
or
out
push
cmp
xor
add
sahf
out
dec
pusha
aaa
mov
out
pop
xor
nop
pushf
clc
fiaddl
rorb
push
pop
mov
and
aam
mov
fadds
sahf
out
lcall
push
jns
out
fs
nop
movsb
out
sahf
out
shr
clc
iret
repz
add
and
inc
pop
add
add
std
jnp
pop
add
or
nop
pop
mov
mov
std
cld
iret
repz
aam
in
clc
clc
sahf
out
ds
mull
divb
sahf
out
cmc
dec
hlt
pop
repz
sahf
out
repnz
sahf
out
sahf
lock
mov
out
in
loopne
hlt
jmp
daa
dec
repz
ljmp
mov
cmp
push
out
ss
adc
andb
cmp
and
push
rorl
rcrl
std
out
dec
outsb
push
rorb
or
add
add
out
cmp
xchg
adc
movsl
addr16
sbb
repz
inc
inc
mov
xchg
pusha
inc
daa
and
dec
outsl
inc
xlat
loopne
and
cmp
adc
mov
shrl
push
sub
daa
add
insl
rorl
out
xchg
rcrb
adc
jecxz
adc
mov
insl
xchg
pop
add
outsl
xchg
stc
mov
mov
sti
cld
std
cmp
repz
add
cmpb
repz
add
and
and
inc
push
scas
xchg
push
imul
mov
lods
int3
push
mov
iret
shl
lock
mov
sbb
inc
nop
cbtw
out
sahf
out
mov
imul
loopne
pop
iret
and
mov
cs
jo
push
pop
aaa
push
nop
mov
mov
les
push
pusha
or
mov
in
insl
dec
adc
sbb
xor
dec
cmpsl
pusha
scas
pushw
fnstsw
push
sub
adc
jne
or
push
pop
inc
pop
test
lods
dec
dec
push
ss
outsb
notl
push
out
jo
test
subb
add
mov
add
mov
dec
iret
sbb
jo
aam
jle
or
dec
int3
push
mov
dec
iret
icebp
push
je
or
mov
dec
jnp
loopne
cmpsb
push
adcb
push
mov
sbb
lock
das
pop
cltd
adc
notb
fdivrp
push
notb
and
fisubrs
mov
push
enter
cmp
mov
out
cmp
adc
outsb
nop
lods
inc
in
adcl
xchg
fs
inc
idivl
mov
and
push
fs
ja
loopne
inc
mov
rcrb
mov
push
shlb
mov
push
xor
pop
sbb
neg
dec
into
add
pop
ficoms
fadds
fiadds
nop
jo,pn
and
mov
push
inc
dec
fidivrs
adc
call
or
sbb
xchg
or
aam
jg
sarl
mov
outsb
cmp
shl
jecxz
ja
dec
cs
outsb
pop
add
das
inc
push
test
test
subb
push
push
out
mov
ss
mov
mov
pop
mov
cmp
push
cmp
enter
out
mov
imulb
sub
rorb
fidivrs
fisttps
push
int3
dec
or
js
loope
pop
mov
les
cmp
pop
cwtl
push
jbe
push
push
jp,pt
cmp
shlb
inc
out
mov
sbb
push
lock
mov
cmpsb
shrb
pop
xor
jl
sbb
es
test
sbb
jne
jne
xchg
or
outsb
fistpll
sbb
mov
push
iret
das
and
cld
push
enter
jnp
add
xor
inc
pop
popl
test
push
push
out
imul
lods
mov
or
neg
jnp
shlb
call
xchg
xor
sbb
outsb
push
outsl
mov
add
add
and
inc
dec
orb
add
loopne
imull
orb
dec
push
inc
adc
inc
inc
adc
nop
push
add
daa
and
add
inc
mov
push
dec
add
add
out
jnp
or
inc
sbb
inc
and
outsl
fcomip
fimuls
and
pop
dec
aaa
push
pop
dec
add
lcall
idivb
cmp
jecxz
inc
neg
jne
mov
mov
push
xchg
dec
xor
mov
or
inc
push
push
push
cs
and
inc
xlat
loopne
pop
push
cs
and
xor
mov
dec
inc
cmp
inc
ljmp
add
push
and
icebp
xchg
and
add
add
or
cld
xchg
idivb
add
sub
stc
cmp
pop
rolb
sbb
pop
inc
fimuls
push
mov
addb
imul
pop
mov
jg
clc
aas
push
pop
jmp
pop
in
jns
cld
add
cld
or
cmp
jnp
clts
aas
jg
inc
addb
add
inc
jge
mov
test
mov
pusha
mov
jns
push
addl
ret
xchg
pcmpgtd
clc
daa
jle
fldcw
jae
add
sbb
ficompl
lahf
cmpsl
out
cmp
sub
cmp
add
push
push
sbb
push
aas
pop
sbb
xchg
add
mov
mov
xor
pop
std
cmp
push
fnstsw
add
repz
ss
jb
push
jbe
jbe
iret
jle
rolb
loope
cmp
pusha
bswap
fs
rol
push
mov
lock
xor
add
sahf
push
xor
repz
adc
imul
mov
xor
jg
add
add
lcall
iret
repz
decl
out
iret
ret
shrl
inc
mov
out
xlat
rcll
and
cmp
imull
pop
mov
ds
pop
test
jne
outsl
add
outsl
fadds
push
clc
lock
aas
mov
pop
clc
dec
add
mov
outsl
jnp
inc
pop
outsl
clc
popl
imul
addr16
aaa
add
push
mov
in
xlat
pop
sbb
pop
lret
sbb
nopl
out
cs
jle
dec
add
inc
xlat
int3
data16
pop
in
les
test
ja
pop
mov
aas
add
sub
rcrl
and
addr16
inc
add
push
xchg
fsubrl
aaa
adc
add
jo
or
push
sbb
loop
dec
fldcw
jge
cmp
sbb
push
sub
popf
int
mov
add
inc
addl
push
xor
flds
sbb
pop
jo
pusha
outsl
aas
lcall
roll
lock
fcompl
jl
sbb
push
sbb
insl
mov
pop
or
test
push
shl
sbbb
jge
into
and
adc
push
sbb
testl
adc
add
jae
out
mov
incl
and
or
add
mov
cmp
sbbl
out
das
daa
sbb
cmp
and
daa
iret
fnstenv
and
xor
lahf
and
mov
and
ja
mov
or
dec
push
dec
push
mov
data16
xor
push
daa
lret
xor
xchg
outsb
push
andl
push
ja
mov
daa
dec
addl
daa
sbb
orl
ja
push
daa
clc
push
cmc
mov
ja
mov
push
jg
add
xchg
or
jl
cmpl
xor
daa
pop
ret
aas
xchg
and
daa
in
pop
fs
push
movsl
daa
dec
sub
fidivrs
push
aas
push
xor
mov
loope
daa
cmp
cmp
jns
cmp
pop
push
es
mov
xchg
push
int3
push
and
jbe
mov
and
mov
ja
mov
push
push
negl
mov
fs
xlat
push
lret
outsl
jnp
daa
push
and
push
mov
mov
push
or
mov
daa
dec
daa
hlt
cwtl
insl
outsl
push
daa
sahf
daa
xor
push
push
addr16
or
push
xchg
adc
xchg
test
into
incb
or
mov
jg
cltd
std
scas
dec
push
pop
es
xor
aad
sub
sub
dec
dec
pop
jb
dec
fisubs
mov
out
in
and
pop
adc
fmuls
fcoml
clc
fwait
and
jecxz
add
mov
lds
mov
daa
or
pop
dec
pushf
es
sbb
pop
add
arpl
daa
ds
in
popa
jecxz
daa
xor
arpl
ss
xchg
add
adc
lahf
cmp
or
pusha
or
pusha
cmp
push
bnd
cmp
push
aas
or
xchg
ljmp
inc
inc
es
daa
into
inc
out
arpl
fsubrs
mov
or
pop
xor
fbstp
shl
nop
in
inc
xchg
sbb
or
stos
movsb
adc
es
repz
sbb
fsubl
xor
push
xlat
in
pop
ja
cmpsb
arpl
aas
das
es
bound
jle
cmp
daa
push
inc
sub
popa
adc
xor
cmp
mov
push
sub
push
outsl
cmp
outsb
data16
inc
push
rcr
sub
int3
je
push
inc
mov
adc
ja
and
inc
aas
call
popa
pop
adc
sub
xchg
or
jmp
dec
push
in
and
pop
xor
dec
xchg
daa
dec
es
mov
adc
pop
adc
addr16
adc
or
sub
and
daa
pushf
mov
cltd
jle
add
jecxz
push
xchg
sbb
mov
daa
jl
daa
fstps
push
jl
fldz
fnstcw
and
clc
or
sbb
xchg
es
mov
daa
dec
xor
dec
mov
jbe
xor
dec
daa
dec
daa
dec
pushf
adc
ds
clc
dec
je
dec
into
sbb
adcl
sarl
dec
mov
aas
sbb
adcl
mov
int
xor
cltd
cltd
mov
mov
cltd
add
and
inc
and
shlb
stos
aas
xchg
int3
cwtl
ss
nopl
inc
nop
inc
xchg
mov
in
dec
fadds
cwtl
jb
or
sbb
sub
sbb
mov
lock
shll
shl
aas
push
and
inc
xchg
jne
or
add
pushl
inc
pusha
and
cmp
addl
pusha
cmp
inc
stos
xchg
and
push
adc
faddp
pushf
fisubl
fisttpl
aaa
and
daa
and
insl
jno
and
cwtl
stos
sub
mov
fstl
mov
fnstenv
lds
push
and
loop
and
sbb
fnsave
push
in
repnz
daa
and
jae
jmp
xchg
add
inc
js
aad
lds
hlt
test
cmc
and
sti
add
sub
push
adcb
call
setns
mov
jns
iret
push
lret
xor
pop
mov
lock
cs
xchg
repnz
mov
orl
pushf
out
imul
jo
pop
in
jge
add
dec
add
stos
push
add
push
shll
into
jae
ss
clc
imul
and
add
sbbb
dec
add
push
jmp
pop
in
fidivl
xchg
push
mov
or
push
std
ret
je
dec
add
idivl
addr16
xor
mov
dec
insl
push
or
push
fdivrp
mov
sbb
dec
and
ret
jo
neg
repz
inc
outsl
jbe
push
jae
outsb
loopne
rcl
push
gs
add
or
xor
sbb
push
cmp
jnp
or
pop
mov
mov
xor
pop
adc
outsb
jo
rorl
add
jns
adc
or
push
loopne
bndstx
cli
std
js
testl
daa
adc
outsl
adc
shrl
outsb
out
rcl
or
addr16
insl
les
sub
mov
add
es
add
push
cmp
push
add
insb
jnp
mov
mov
sub
arpl
out
push
popa
xor
jno
add
push
pop
outsl
gs
popl
cmp
imul
push
rcrl
inc
cmp
insl
mov
pop
insb
outsl
fisttps
pop
in
push
aaa
sub
jo
cmp
call
lret
push
dec
outsl
icebp
hlt
mov
or
sbbl
push
outsl
inc
pop
mov
in
add
jb
and
jnp
push
insl
push
jbe
and
sbb
adc
mov
arpl
jae
push
sub
mov
jp
and
mov
addr16
mov
mov
pop
and
aaa
clc
hlt
push
pop
and
push
or
mov
fnsave
push
scas
lret
and
mov
cmp
mov
outsl
ss
gs
scas
testb
adc
xor
outsb
mov
and
pop
mov
imul
adcb
imul
push
popa
cmp
pop
out
fiaddl
roll
add
mov
jns
push
xchg
sbb
rcl
das
or
sbb
mov
pop
daa
cmp
imul
loopne
xor
popa
adc
push
ror
sbb
jb
das
or
pop
mov
add
inc
push
push
outsl
jb
ss
daa
outsb
push
dec
push
sahf
adc
stos
aaa
inc
repnz
faddp
add
iret
dec
dec
cmpsb
add
or
or
push
pop
add
ja
ret
jge
outsl
dec
imul
push
adc
jge
push
outsl
sub
shrb
push
push
out
aad
lahf
insb
sub
mull
aaa
xorb
fidivrl
out
push
jne
scas
sub
icebp
pop
dec
lahf
cs
addr16
jecxz
jmp
xor
pop
push
out
fs
gs
in
cmp
popa
xlat
push
movl
mov
xor
xor
popl
or
xchg
es
faddp
es
add
push
iret
mov
add
loope
movl
sbb
xchg
mov
xchg
pop
sbb
popf
lds
ret
ja
mov
fldt
hlt
mov
xchg
sub
imull
cmp
or
out
fimull
fisubs
add
cs
arpl
inc
inc
cmpb
pop
pop
push
sbbl
jg
bound
cs
divb
inc
insb
lcall
add
jb
push
mov
jnp
outsl
mov
pop
fwait
add
iret
xchg
adc
mov
mull
jae
sbb
dec
outsb
out
pop
mov
test
addr16
fiaddl
dec
pop
shll
imul
pop
jbe
imul
lret
xor
clc
add
inc
repz
mov
gs
mov
cmpsl
out
cmp
loopne
jnp
aas
popa
jnp
jbe
fisubrs
add
mov
test
mov
inc
stos
arpl
je
ja
loope
lds
mov
adc
sub
iret
sbb
subb
ret
sbb
jmp
pop
jne
out
pusha
roll
or
das
jbe
imul
scas
and
mov
xchg
aaa
push
in
ljmp
sbb
inc
shrl
lock
jmp
jg
add
out
dec
xchg
jbe
pop
xchg
mov
dec
out
and
ljmp
lock
data16
ret
lea
sbb
pop
adc
xchg
dec
scas
sub
scas
push
inc
mov
xorl
dec
das
pop
cli
mov
js
into
mov
ret
mov
jbe
pop
inc
ret
popa
dec
filds
pop
jo
ret
jno
pop
bound
pop
lret
stos
push
mov
jb
xchg
jae
add
mov
jae
xlat
xor
fwait
outsl
out
cs
cs
xor
dec
xor
fwait
mov
ljmp
mov
inc
pop
stos
push
stos
push
push
adc
lahf
ret
sub
stos
pop
push
mov
push
adc
jae
xor
push
pxor
addr16
inc
mov
stos
jb
outsb
xor
xor
rolb
imul
xor
push
insl
jae
mov
movb
in
pop
mov
mov
scas
arpl
shll
cmp
xchg
and
or
mov
addr16
outsb
xor
sbb
mov
mov
and
lcall
jmp
out
arpl
push
cwtl
sbb
push
sbb
arpl
fadds
pop
scas
pop
jecxz
adc
ss
cmc
lret
and
jp
popa
mov
rcrl
repz
daa
push
and
addr16
pop
dec
imul
mov
jae
shrl
cmpsl
mov
inc
adc
lahf
test
adc
ret
fldl2e
mov
pop
lret
xchg
fs
adc
addl
sbb
sbb
outsl
xlat
bound
jne
mov
and
xor
leave
loop
out
cmpsl
jmp
dec
mov
daa
scas
lcall
jo
shrl
divb
adc
imul
pop
in
xchg
imul
outsl
lds
jae
outsb
jg
adc
inc
jae
stos
xchg
punpckhdq
pop
daa
adc
inc
in
xchg
cmpsl
rolb
iret
push
shr
test
ret
sub
push
out
jne
aaa
mov
repz
jns
movsl
mov
insl
in
hlt
out
sub
inc
mov
stos
fdivs
mov
sub
insl
cmp
lea
add
jae
lds
fistps
sbb
popa
outsl
lcall
pop
pop
pop
lods
fcompl
inc
cmp
jne,pn
inc
testl
jo
scas
mov
mov
push
jae
mov
xchg
outsb
daa
or
xchg
xchg
aas
iret
inc
lds
inc
inc
mov
outsl
aas
jg
roll
adc
js
add
jb
adc
pop
pop
aas
mov
cmp
jae
sub
daa
test
js
out
push
pop
sub
mov
pop
addl
dec
and
cmp
imul
dec
imul
jecxz
inc
pop
dec
and
sub
mov
mov
stos
mov
in
icebp
jne
pop
jp
sub
push
loopne
inc
push
decb
lds
pop
pop
jne
xchg
inc
bound
lahf
sbb
and
aad
mov
pop
mov
xlat
ds
mov
adc
in
inc
psrlq
out
sbb
mov
in
jo
ficomps
or
jbe
fiaddl
and
dec
mov
rep
pcmpeqd
adc
cvttps2pi
lock
dec
lret
push
ljmp
and
mov
scas
dec
aas
fwait
fwait
mov
jl
fildll
jne
adc
push
mov
aaa
jae
divb
iret
sbb
or
inc
jecxz
js
xor
cmc
or
jp
arpl
ds
shrl
stos
mov
sbb
rorb
push
jmp
xchg
data16
add
out
jbe
pop
adc
pop
dec
mov
scas
js
incl
repz
xchg
loop
add
add
aas
xchg
shrl
je
ret
xchg
imul
jmp
stos
lds
jbe
cmpsl
sub
ret
pop
divl
jmp
jo
aam
mov
sbb
sbb
and
shll
loop
mov
xor
pop
inc
sbb
push
pop
cmpsl
mov
mov
sbb
movl
pop
loop
callw
xor
imul
pop
adc
iret
push
mov
stos
mov
scas
rolb
pop
iret
adc
sub
mov
or
adc
sbb
or
xor
mov
mov
pop
mov
js
add
or
notl
jo
out
pop
add
adc
outsl
xor
xlat
stos
push
stos
xlat
bound
ret
or
dec
jg
outsl
lods
lds
or
stos
push
ljmp
and
outsl
sbbl
adc
addl
sbb
scas
add
push
adc
adc
push
cmp
push
sub
bound
pop
fbld
aaa
jno
sub
fdivl
or
iret
sub
push
jbe
cmp
xlat
sub
mov
mov
mov
pop
adc
and
jne
pop
xor
or
mov
inc
xchg
sbb
lods
adc
jnp
add
mov
das
or
sub
pop
pop
and
lds
mov
xchg
sarl
push
in
les
mov
inc
out
pop
dec
pop
adc
jge
push
and
scas
xlat
imul
mov
jae
jmp
jge
or
das
ds
ret
or
push
mov
inc
add
sbb
jmp
ja
xchg
adc
adc
xor
andb
mov
xchg
outsl
pop
adc
sbb
les
pop
add
movsb
pop
mov
adc
jns
outsb
bt
or
rol
and
lret
imul
pop
jl
push
arpl
jmp
mov
jo
adc
or
push
jp
adc
hlt
pop
outsl
ds
jnp
push
push
ret
outsb
pop
xchg
dec
or
sub
add
and
andb
jo
daa
pop
repz
shrl
or
and
loope
mov
iret
cmp
cwtl
jnp
cmp
jno
or
sub
mov
mov
inc
pop
pop
jns
adc
mov
adc
dec
xchg
cmpb
sbb
ret
and
dec
mov
outsl
cmp
lret
dec
add
out
popf
out
out
ja
push
push
jns
cmp
popf
arpl
fadds
jo
push
insl
mov
test
cltd
gs
sbb
fs
jo
adc
movsl
xchg
xor
xor
jae
mov
and
inc
and
out
in
rcll
push
mov
adc
jae
pop
ret
or
adc
leave
adc
lahf
adc
mov
adc
mov
pushf
adc
cmc
cmp
dec
adc
pop
fisttpl
add
out
imul
jb
adc
ret
sbb
push
mov
das
adc
es
push
movsl
popfw
inc
add
dec
push
adc
sahf
push
xorb
xchg
fwait
inc
add
jb
int
cmp
adc
adc
mov
mov
shl
xchg
imul
insb
fldenv
into
cmp
sub
cmp
cmp
mov
adc
cmp
gs
push
dec
mov
iret
out
movsl
sti
sub
inc
or
push
inc
cmpb
ss
outsb
adc
mov
xor
jo
out
loope
ret
and
aaa
adc
into
inc
jo
push
dec
jb
adc
ret
add
clc
in
js
adc
outsb
and
push
mov
mov
mov
xchg
mov
and
jp
rolb
cmpsb
inc
repz
scas
ss
daa
add
dec
scas
in
add
cs
imul
mov
gs
and
movsb
inc
adc
ss
arpl
adc
rorb
cmpsb
movsb
adc
arpl
jg
popa
inc
add
sar
add
jo
or
pop
jb
jne
fwait
push
cmp
sbb
lods
pop
xchg
arpl
push
dec
gs
adc
sub
or
jp
outsl
dec
add
push
outsl
popa
or
dec
and
sub
pop
adcb
cmpb
sbb
data16
sub
pop
mov
ficoms
add
shl
sbb
sbb
adc
pusha
lock
jb
adc
or
xor
inc
lret
push
outsb
insb
les
flds
lret
sbb
mov
dec
push
fadds
or
sub
mov
in
adc
inc
gs
mov
or
push
data16
xchg
add
add
imul
sbb
fimuls
push
paddusb
popa
daa
jl
and
or
sub
in
loop
rcrl
sub
cmp
pop
or
inc
and
sub
daa
dec
adc
jle
fsts
sbb
add
inc
mov
aas
ficomps
jbe
cmp
and
and
xor
pop
and
xlat
and
int3
push
mov
das
mov
daa
adc
sub
inc
push
push
bt
jo
leave
dec
xchg
inc
add
fadds
sub
pushf
sub
inc
repz
and
sbb
xor
sbb
sbb
xchg
sub
and
adc
imul
dec
pop
sbb
pop
cmp
and
ja
cwtl
shl
movsb
sbb
sahf
test
pop
push
scas
add
sarb
adc
call
xchg
fldcw
or
mov
or
pusha
inc
xchg
and
dec
inc
add
and
loopne
pop
xor
pusha
adc
inc
adc
or
adc
cmp
push
imul
push
outsl
fldl
je
adc
sub
imul
jecxz
je
fidivs
inc
or
inc
xor
and
add
sub
pop
jp
mov
jne
jae
js
jecxz
add
xchg
push
outsb
push
stos
fs
pop
add
je
ja
mov
arpl
adc
imul
or
stc
pop
sub
add
popa
xchg
sbb
jae
jb
mov
es
orb
ret
jo
or
inc
push
cmpsb
sub
jbe
dec
push
outsl
jnp
adc
push
and
pop
xchg
add
xor
shrb
cmp
fdivs
outsl
xchg
fisubrl
jbe
stos
sub
add
test
or
outsb
sub
or
sub
addl
mov
add
pop
sub
and
lods
stc
shl
inc
ret
sbbl
add
aad
jno
sarb
and
icebp
jle
mov
mov
push
jle
test
mov
aas
dec
in
or
lret
and
arpl
insb
into
loopne
cmp
rcrl
push
addb
shlb
lcall
jge
push
adc
xor
pop
js
jl
adc
gs
jl
ret
pushw
test
fstpt
sbb
sub
je
sbb
insl
inc
inc
inc
and
fldt
sbb
lret
jnp
push
pop
es
jo
aaa
movsb
and
jmp
and
repnz
jae
jo
inc
mov
xor
movsl
flds
sbb
jb
xchg
push
xchg
insl
mov
stos
add
or
shll
lea
adc
insb
mov
dec
mov
mov
and
call
xor
pusha
adc
arpl
subl
pop
sub
add
outsl
inc
outsl
pop
sbb
or
xor
and
movsl
jg
fisubrl
or
sbb
popf
and
mov
imul
and
int3
movsl
mov
inc
jae
adcl
jmp
imul
and
je
sub
or
cmp
imul
xor
test
fmull
insb
lock
push
inc
dec
fs
dec
push
sub
adc
pop
call
jns
rclb
mov
sbb
and
rol
sub
fisubs
stos
sbb
cmp
and
movsb
push
dec
adc
or
ret
mov
adc
test
jno
inc
jb
std
dec
jno
sbb
lret
sbb
les
imul
js
add
fcmovu
outsb
lea
mov
fiadds
or
or
or
inc
add
lods
int3
sbb
xchg
jb
inc
and
pop
add
cwtl
and
mov
jge
es
mov
mov
lds
add
pop
cmp
inc
sbb
ficoml
or
daa
imul
arpl
popf
repz
cld
pop
cmp
pusha
fistl
cmc
inc
add
jo
adc
and
fprem
shlb
sbb
adc
int3
jne
enter
sub
int
in
sub
je
sub
pop
or
and
aaa
cmp
dec
sarb
outsl
repnz
mov
dec
pop
imul
add
fistl
rcl
repnz
stos
sbb
and
aaa
push
xchg
cmp
inc
pop
push
fs
int
mov
jo
jg
je
jne
imul
and
xchg
data16
dec
jb
mov
arpl
imull
adc
sbb
repz
dec
enter
inc
sbb
mov
sub
or
subl
fistpl
mov
dec
imul
add
dec
imul
testb
inc
xor
add
maskmovq
negl
loope
arpl
es
cmp
in
and
fdivs
jo
sbb
jae
sbb
push
jb
inc
and
adcw
lods
inc
pop
in
fneni(8087
rclb
scas
cmpsb
insl
lods
sbb
pop
jno
inc
add
inc
pop
xchg
and
rcrl
push
mov
or
sbb
into
and
jne
push
popa
mov
orb
dec
inc
adc
ret
fimull
mov
das
pop
fs
test
sbb
insb
mov
add
and
mov
jmp
push
adc
mov
leave
add
add
flds
addb
cmp
xor
ss
jns
movsl
sbb
lahf
sub
mov
fildl
sbb
or
inc
sbb
test
ljmp
jno
adc
int3
out
inc
sub
jge
xchg
popa
filds
scas
push
insb
mov
sbb
mov
add
aaa
addb
lahf
or
arpl
adc
xor
lret
cmp
inc
or
test
cwtl
fildl
ret
pop
sbb
fldt
push
ss
data16
pop
fisubl
rclb
or
inc
and
mov
stc
and
jmp
lea
movsl
popa
sub
stos
xor
mov
dec
test
repz
cmp
sbb
jmp
sbb
inc
adc
and
mov
pop
pop
loopne
inc
inc
daa
mov
shll
ret
movsl
push
xchg
addl
outsl
lods
jmp
adc
push
lods
add
adc
add
xor
sub
test
jb
aas
dec
dec
pop
out
jne
fsubl
add
lock
pop
inc
sub
and
popl
addr16
xor
mov
cmp
movsb
mov
pmuludq
add
sbb
push
inc
movups
mov
inc
and
pusha
outsb
dec
pushf
shlb
pop
mov
push
push
push
or
lahf
inc
dec
inc
inc
test
xlat
aas
cld
and
inc
inc
push
push
sub
imul
or
out
testl
push
pop
aad
or
adc
add
popa
add
ficompl
dec
lahf
je,pn
jae
jbe
insb
imul
mov
cmp
pop
push
call
movsl
sahf
push
cs
add
push
mov
sbb
jb
push
daa
mov
dec
push
and
inc
push
or
add
add
add
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
inc
aam
add
dec
add
