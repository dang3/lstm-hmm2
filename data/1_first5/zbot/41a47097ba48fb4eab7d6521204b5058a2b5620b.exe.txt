push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
push
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movl
pop
ret
int3
push
mov
movl
pop
ret
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
mov
add
mov
mov
add
mov
add
mov
add
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
cmpl
jne
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
push
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
pusha
mov
movl
push
push
call
push
call
mov
lea
push
push
push
push
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
push
push
call
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
jne
xor
jmp
movl
movl
movl
movl
movl
movl
movl
push
push
call
push
push
call
push
push
call
push
call
mov
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
lea
push
push
push
push
push
call
test
je
xor
jmp
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
mov
call
pop
call
pop
call
pop
call
pop
jmp
mov
pop
ret
int3
add
add
inc
inc
add
je
inc
jnp
inc
dec
jo
and
add
jp
fs
jl
jb
data16
or
add
jp
fs
jl
jb
data16
jmp
jo
dec
into
outsl
jne
int3
pop
popa
outsb
aad
gs
xor
add
gs
mov
jno
add
jne
inc
xor
add
je
add
cwtl
jp
outsl
xchg
imul
adc
add
je
inc
jo
insb
push
pop
popa
outsb
dec
js
push
xor
add
push
inc
add
inc
add
inc
add
adc
inc
add
push
inc
add
adc
je
jecxz
arpl
outsl
jb
loop
add
in
popa
fs
jl
jb
gs
add
mov
jo
outsb
xchg
js
xor
insb
insb
xor
add
cs
js
add
add
pop
gs
arpl
fs
js
add
arpl
add
pop
jnp
je
jae
inc
inc
js
arpl
adc
add
jp
je
jae
inc
add
adc
add
jns
popa
add
add
pop
inc
fdivs
add
jp
je
jb
push
jecxz
je
rcrb
add
outsb
popa
jo
ja
outsl
rclb
add
lcall
xor
insb
insb
xor
add
je
cmpl
andb
nop
add
xor
add
mov
nop
xor
add
xor
add
xor
sti
add
and
add
sti
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
icebp
sbb
fstpt
push
fsts
ja
shr
addr16
fldt
xchg
fsubrl
xchg
leave
and
sbb
insl
outsb
push
mov
push
push
shrb
xchg
out
or
xor
add
add
adc
inc
xor
inc
dec
push
jmp
add
adc
add
adc
jmp
dec
xor
add
adc
in
xor
adc
adc
adc
adc
add
adc
adc
adc
add
xor
add
adc
add
adc
add
adc
jae
adc
add
xor
add
adc
add
add
jmp
add
adc
adc
adc
jmp
xor
jmp
xor
sbb
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
add
xor
jmp
xor
jmp
xor
mov
adc
insl
xor
jmp
xor
add
adc
add
adc
add
adc
add
adc
add
jbe
js
adc
add
add
enter
fsubr
add
fmuls
add
enter
enter
cwtl
adc
add
adc
pusha
ss
fs
cld
jo
add
add
add
add
adc
add
add
pop
adc
add
add
or
add
inc
popa
je
adc
add
push
add
dec
xor
add
dec
add
sbb
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
adc
adc
add
repnz
jne
xchg
add
adc
sub
push
sub
icebp
cli
sti
jb
mov
add
push
or
scas
push
or
add
add
call
dec
and
add
ret
sti
ret
out
in
bound
add
adc
push
sub
aam
push
push
idivl
jno
add
jecxz
psubsb
fldl
test
xchg
jge
push
jmp
div
pop
add
adc
mov
xor
push
cmp
cmp
jecxz
clc
xchg
imul
push
sbb
in
add
mov
ret
jmp
imulb
xchg
add
adc
mov
xor
bound
add
or
mov
es
push
pop
imul
mov
pop
jecxz
bound
mov
pop
adc
jmp
popa
fdivr
pushf
sub
push
cmc
push
push
add
dec
or
loop
push
ret
ret
pushf
add
xor
stos
sub
xchg
int
xor
sub
loop
cmp
jecxz
loope
add
jmp
xor
ret
push
loope
add
push
incl
pushl
out
or
pusha
adc
sbb
mov
arpl
sub
arpl
sub
push
or
lds
push
inc
add
aas
xchg
jge
fdivs
cmpl
rcrb
or
add
sbb
add
adc
or
add
push
faddl
add
mov
lea
or
xor
or
jecxz
jle
enter
fbld
jbe
xor
cld
sub
fmul
ret
mov
out
repz
leave
jmp
add
or
mov
imul
add
xor
jl
ret
into
xchg
add
test
push
test
push
scas
addr16
mov
add
test
lock
sbb
mov
add
adc
xor
clc
pop
mov
push
adc
dec
je
add
or
adc
pop
ds
add
sub
jmp
mov
lock
add
push
push
push
repz
xchg
int3
jmp
imul
stos
xor
add
shl
add
test
mov
jmp
xor
je
into
mov
repnz
int
or
dec
jb
or
pop
add
sbb
js
in
outsb
lock
add
out
subl
adc
sbb
add
decl
dec
xlat
inc
jge
adc
jmp
fidivs
cli
je
pop
and
call
push
fbstp
add
ds
cld
enter
push
bound
insb
add
jb
clc
fwait
sub
fbstp
ljmp
in
dec
mov
push
adc
in
fcmovnbe
adc
mov
adc
push
add
test
hlt
add
decl
xchg
aad
add
jecxz
jne
inc
add
sbb
loopne
ret
mov
decl
sbb
mov
bswap
adcl
shlb
add
pusha
in
orl
add
add
lods
xchg
pop
jecxz
mov
or
outsl
push
incb
add
or
mov
sbb
cld
lcall
push
call
data16
xor
incl
adc
das
out
mov
sub
lds
xor
jge
stos
sub
or
jbe
js
aas
loopne
mov
lock
out
mov
add
sbb
pop
add
enter
jecxz
push
add
cmc
sbb
add
push
test
fstpl
lea
cmp
pop
incl
mov
jno
or
ss
test
sub
xor
add
addr16
lret
stos
add
inc
loopne
xlat
and
push
fdivrl
sbb
jmp
pop
xor
pop
xor
ret
add
cs
in
outsl
shr
test
gs
popf
inc
pop
jns
in
sbb
push
fsubl
dec
stc
adc
add
xchg
sti
mov
inc
roll
pop
push
out
into
inc
push
jns
fstpt
add
pop
stos
fimull
add
test
cmp
mov
cmp
in
stc
xchg
xor
stos
add
sti
int3
ret
inc
mov
leave
pop
call
pusha
jmp
adc
jmp
or
std
outsb
jg
push
push
punpcklwd
inc
jns
lcall
xor
cmp
imul
lods
adc
jmp
rcrb
aad
push
push
jmp
clc
push
xlat
push
test
clc
rcl
add
inc
pop
in
push
pop
inc
or
jmp
cld
decl
inc
mov
and
jne
mov
leave
ret
push
mov
adc
or
jmp
or
in
out
insb
out
leave
sbb
push
push
hlt
pushl
call
inc
movsb
ljmp
xchg
jge
xor
ja
mov
incl
in
jne
fidivl
cmpsb
pop
sti
out
ljmp
in
filds
sub
jbe
mov
xlat
add
movb
jno
in
jne
stos
jbe
dec
ds
decl
rorl
sbb
mov
adc
mov
pop
jbe
sbb
std
pushf
fucomi
jne
add
jbe
xor
or
js
in
out
lahf
sti
out
and
incl
adc
inc
xor
xchg
sti
into
dec
push
in
mov
or
pop
scas
fdivr
pop
xor
je
mov
jmp
insl
jmp
in
add
jmp
or
and
dec
js
in
add
mov
xchg
scas
jno
in
jecxz
dec
fcom
inc
add
xor
dec
enter
cmp
jmp
hlt
out
fucomi
pop
jmp
push
inc
mov
mov
loopne
movsb
adc
jmp
pop
xlat
jne
fiaddl
jmp
dec
xlat
jne
mov
stc
testb
cld
sarl
ret
add
xchg
mov
cmp
adc
cmp
adc
jo
cmp
in
or
dec
out
mov
sub
pop
enter
cld
sub
push
sbb
leave
stos
push
xlat
push
xchg
les
push
hlt
jmp
jno
push
dec
orl
add
js
daa
fs
xchg
incl
clc
andl
insl
clc
add
int3
jmp
rolb
cwtl
aad
je
jmp
add
cltd
aad
call
pop
hlt
fucomp
call
jmp
jmp
or
sti
incl
adc
jmp
idivl
push
cmp
ljmp
jmp
dec
loopne
add
adc
jne
mov
jmp
je
add
mov
pop
cltd
in
add
xor
sub
add
sub
and
add
cwtl
jl
mov
in
hlt
push
push
lcall
fisttpl
jmp
test
sbb
add
fcmovnu
mov
call
shlb
jmp
mov
sub
rcll
or
jmp
jne
sub
xor
call
cli
mov
jmp
mov
ror
lea
push
push
pop
icebp
shr
lods
rcr
jnp
adc
add
pop
icebp
dec
xor
cmpsb
loopne
jmp
xchg
adc
jp
jecxz
outsb
popf
jmp
fidivl
adc
mov
loope
cmp
fcoms
jmp
out
ffreep
xchg
pop
adc
subb
add
add
add
push
dec
sub
xor
sahf
jno
aam
lock
and
sbb
add
int3
push
push
mov
call
cli
mov
push
mov
sub
cli
lock
ss
pop
fsubrs
inc
enter
mov
and
into
dec
clc
push
and
std
xchg
shll
adc
add
adc
jmp
xchg
jmp
test
inc
jmp
pop
mov
sbb
sbb
mov
jae
dec
dec
or
sbb
leave
stos
rcll
jmp
inc
and
add
pop
push
push
lock
pop
leave
ret
push
mov
mov
into
mov
mov
push
or
add
or
stos
pop
add
pop
mov
leave
ret
push
mov
push
mov
iret
mov
mov
repz
pop
leave
pop
lret
call
push
push
add
cld
adc
adc
cwtl
dec
jge
jnp
repz
arpl
pop
leave
lcall
les
add
xor
xchg
lcall
push
jns
sub
cmp
add
add
mov
ret
or
js
xor
es
cmp
stc
jns
add
dec
mov
jns
sahf
inc
add
lock
adc
mov
outsb
aad
adc
jae
add
popl
push
pop
or
pop
stos
mov
inc
add
add
inc
in
je
jmp
ss
mov
out
iret
out
je
fisubrs
adc
mov
shl
lods
je
jno
sbb
jg
int
xchg
in
daa
loope
fs
dec
mov
std
sub
add
ds
mov
jns
into
popa
add
adc
fcmovu
stos
adc
add
addr16
lock
mov
das
jp
and
add
add
adc
test
xor
sbb
mov
mov
iret
jne
add
sbb
cmc
xchg
popf
inc
pop
adc
push
mov
call
pop
clc
dec
mov
mov
lds
jne
aad
iret
jmp
lret
jmp
call
iret
lcall
xchg
iret
jne
xchg
dec
clc
je
mov
call
into
or
add
lock
incl
and
xor
std
pop
call
or
jne
imul
cmp
mov
and
mov
clc
mov
std
call
xchg
idiv
push
sahf
ret
pop
adc
or
add
popf
popf
in
orl
mov
sbb
add
adc
add
mov
jge
sbb
add
add
cwtl
mov
add
mov
add
mov
add
or
data16
in
jmp
mov
jno
jno
in
test
xor
hlt
loope
add
movsb
lret
loopne
and
add
mov
test
mov
xlat
add
push
cmp
push
inc
std
ficoms
clc
movsb
js
push
rolw
push
push
adc
incb
add
sti
push
or
adc
std
sahf
push
sub
inc
and
mov
jmp
push
adc
mov
test
cld
add
xor
mov
sub
xor
inc
aad
les
cmpsb
push
and
repz
loopne
insl
mov
lea
adc
cmpl
dec
sti
cmpsl
add
int
mul
inc
stc
loopne
and
sub
lds
adc
les
sbb
add
jecxz
push
xor
jp
andb
and
test
adc
out
inc
fisubrl
mov
cwtl
jge
stos
pop
adc
jge
sbb
shr
loope
adc
add
xchg
and
insb
adc
stos
jbe
call
stos
and
in
sub
jl
push
add
sbb
aam
roll
mov
inc
jmp
add
flds
jmp
es
add
bnd
lret
incl
and
call
incl
in
add
aad
leave
lcall
sub
add
rolb
inc
add
xor
adc
xchg
sub
ljmp
or
call
add
add
out
jmp
pushl
add
add
xchg
sbb
pusha
fildl
add
imul
inc
out
incl
pop
leave
pop
pop
add
ss
xorl
push
cltd
add
incl
ja
sub
mov
idiv
fsub
push
lret
mov
add
and
sub
cmp
jns
jns
cld
add
dec
sub
ljmp
jae
cld
xor
sub
cmpsb
das
mov
inc
inc
or
incb
add
sub
pop
adc
je
cmp
push
add
sub
lds
adc
add
jb
movsl
imul
mov
sbb
mov
add
xor
adc
cmp
add
in
fistl
inc
add
adc
add
adc
xor
fdivrl
jmp
inc
movsl
sbb
jmp
add
insl
mov
xor
popf
sub
sub
cmc
push
mov
jmp
add
adc
shll
cmp
xor
fcmovnb
aas
add
mov
add
xor
xchg
sub
add
mov
jmp
cs
jb
xchg
std
sbb
jmp
imul
je
sbb
enter
pop
sbb
cld
mov
outsb
adc
loop
ds
or
sbb
enter
mov
leave
stos
xor
adc
cmp
sbb
cmp
shll
cmp
ret
add
xor
add
xor
add
jne
pusha
test
inc
jl
imul
cwtl
adc
push
cmp
push
cmp
dec
mov
or
cld
stc
mov
cmp
push
cmp
push
add
dec
xchg
adc
mov
sbb
sar
jae
mov
pushl
shlb
inc
jmp
cmc
jmp
add
iret
or
sub
rorl
insl
rcrl
sbb
add
xor
push
stos
ja
orl
dec
pop
mov
call
mov
jmp
faddl
add
cmpsb
jmp
add
cli
jmp
inc
out
insl
sbb
jle
xor
xor
inc
sub
mov
fld
add
xor
sub
mov
pop
inc
or
add
movsl
enter
jecxz
add
adc
call
outsl
incl
cld
add
xor
jmp
cmpsb
loope
fnstenvs
mov
fnstcw
adc
cmp
add
xchg
inc
jno
adc
or
adc
jmp
fmuls
add
int
fmull
adc
insl
xor
jmp
xchg
pop
jle
mov
fsub
les
lds
ss
adc
or
adc
hlt
xor
imul
roll
mov
add
repnz
js
adc
jb
xchg
test
mov
jmp
nop
fucompp
add
xor
insb
shlb
push
mov
push
xchg
stc
sti
inc
jmp
les
xor
adc
aam
gs
adc
jmp
fsubl
call
les
shll
scas
mov
ret
push
adc
mov
jle
ret
push
andb
jg
shlb
call
push
pop
push
push
dec
xchg
cld
out
jg
push
call
cwtl
mov
push
pop
movsl
in
out
dec
jmp
iret
inc
jmp
pop
aas
movsl
call
incl
out
jg
mov
sbb
jmp
lea
push
jo
leave
add
push
aad
out
jg
pushl
add
lock
hlt
dec
scas
repnz
out
push
xchg
fdivp
push
lcall
or
aad
out
xor
fldcw
lret
out
lcall
xor
pop
imul
mov
jmp
movsl
icebp
aad
lods
adc
lcall
sbb
lcall
xor
js
rorl
push
ret
add
mov
loope
mov
lcall
int
inc
lea
lock
aam
dec
lcall
cs
add
adc
ret
movsl
sbb
xchg
aad
les
jb
daa
add
jns
or
sub
loopne
rcrl
xchg
into
roll
adc
jle
cmp
aam
mov
aad
lods
das
out
shll
add
xchg
in
roll
jle
push
mov
jbe
or
and
jmp
mov
xor
test
jl
add
add
adc
cmpsb
scas
ret
out
sahf
std
stos
pop
xchg
sar
push
mov
xchg
push
out
jle
pusha
pop
mov
pop
or
push
in
sar
add
mov
push
add
shll
push
add
jae
test
lret
ret
mov
mov
clc
mov
push
clc
jmp
fisttps
add
shll
inc
or
add
sub
lods
pop
cmpsb
call
adc
or
jmp
add
adc
sbb
or
dec
rolb
add
adc
push
mov
add
sbb
mov
cld
call
push
dec
clc
pop
xchg
or
lahf
ds
jmp
cli
mov
jo
idiv
ja
jne
lret
xor
add
std
mov
imul
dec
sar
incl
sar
jne
pop
adc
push
enter
pusha
iret
lea
lods
jle
add
inc
cltd
xor
and
add
in
enter
mov
xor
lods
cmp
mov
insl
push
add
xor
add
lods
xchg
xor
push
lods
jle
outsl
xchg
int
cld
stos
ja
add
fldl
add
push
shl
cmc
jnp
xchg
sbb
iret
cld
mov
hlt
add
test
shlb
push
cld
pop
xor
add
adc
push
push
stos
jns
dec
mov
cmp
daa
add
loop
add
or
pop
sbb
daa
add
lods
mov
xor
add
jmp
loopne
popa
push
shll
lahf
out
adc
jae
aam
or
mov
jl
or
jge
movsb
jb
add
and
mov
cmp
sbb
xchg
das
add
or
push
ss
mov
add
sbb
pop
lods
adc
jmp
mov
or
decl
or
xor
adc
jmp
xor
sti
pop
sbb
addr16
add
add
xor
imul
ror
sub
adc
out
push
mov
xor
add
jecxz
push
inc
fadd
ljmp
sbb
inc
or
adc
jmp
dec
or
out
addb
mov
je
hlt
stc
sub
repnz
leave
jne
cmp
pop
push
in
enter
push
push
mov
inc
xor
mov
fistl
movzbl
inc
cmp
cwtl
pop
push
nop
fwait
ds
pop
and
nop
and
or
jl
or
nop
iret
or
add
xchg
cltd
inc
jl
sbb
jg
sbb
lret
xchg
jns
jl
pushf
dec
nop
jg
sbb
pop
push
rol
mov
shll
add
rorl
je
or
cmp
ss
push
inc
pop
or
ss
or
push
stos
jecxz
pop
xor
sbb
into
jmp
pop
mov
lahf
mov
rorl
jae
adc
pop
mov
sub
scas
nop
mov
es
mov
sub
in
iret
pop
into
push
sbb
addb
pop
adc
fs
sbb
xor
sbb
lret
into
add
push
pop
xor
mov
add
add
aam
add
mov
lods
add
cmpps
shr
add
mov
mov
call
enter
ret
es
push
add
adc
pop
xor
cld
mov
jmp
jle
lds
out
orl
add
into
fs
inc
mov
in
pop
lcall
into
cmpsb
mov
imulb
fs
and
je
jmp
insl
aas
or
incb
jl
call
pusha
mov
out
gs
add
add
adc
test
std
mov
add
mov
jne
std
ds
add
pop
mov
jmp
mov
ret
jmp
fnstcw
call
rolb
jmp
in
mov
incl
and
pop
leave
pop
mov
add
lret
jne
daa
bound
push
daa
and
sub
int3
decl
or
add
jae
test
data16
call
add
adc
add
in
sbb
rclb
mov
add
adc
setg
inc
cld
cmp
mov
test
lret
dec
fmuls
addr16
or
add
xor
call
scas
js
dec
cltd
mov
sti
sbb
js
sahf
out
lret
and
cmc
jle
xor
add
cld
or
xlat
and
cmp
dec
push
pop
cmp
call
mov
mov
je
das
inc
hlt
loope
push
cld
sbb
rolb
xor
js
jle
hlt
or
ret
je
std
lret
xchg
add
fmuls
sbb
lret
inc
repz
add
mov
pop
lret
scas
mov
cltd
in
lret
sub
push
mov
fisubs
pop
add
stos
dec
call
or
inc
hlt
sub
dec
imul
push
or
mov
repnz
push
xchg
push
sti
ret
inc
cmp
stos
add
xchg
mov
lahf
in
push
dec
sbb
sbb
cli
jbe
ror
cmp
addl
gs
jge
gs
jmp
in
pop
xor
adc
mov
xchg
popa
addl
adc
enter
adc
lock
divl
pushf
xor
mov
jmp
outsb
adc
jmp
add
push
jp
inc
jmp
or
mov
insb
add
pop
rclb
call
mov
jne
shl
dec
in
xor
mov
popl
adc
cmp
in
dec
dec
or
les
add
enter
test
add
cwtl
adc
adcb
adc
adc
jne
int3
adc
or
add
dec
hlt
add
mov
lcall
add
jns
or
mov
dec
bound
call
or
call
push
out
inc
or
jp
add
add
ret
push
mov
jge
xor
sub
repz
cli
pop
add
xor
add
xor
cmp
pop
add
fcmovnb
lock
adc
popf
inc
cs
ljmp
jnp
sbb
push
or
jne
xchg
add
add
cli
mov
sub
jp
fisubl
add
lock
mov
xlat
push
orb
xchg
inc
or
xor
add
mov
jmp
stos
stos
fldt
fdivrs
xorl
jb
add
inc
and
lret
jmp
add
dec
add
movsb
es
xor
stos
pop
jbe
in
push
mov
mov
sub
xlat
pop
sub
js
mov
jmp
add
adc
inc
and
xor
mov
stos
clc
push
dec
jb
mov
add
inc
inc
mov
add
sahf
jge
jns
adc
mov
out
push
add
and
mov
fstps
cli
mov
push
push
xor
shrl
push
ret
bound
clc
or
clc
insb
and
push
jle
mov
ret
les
adc
lea
into
jo
ds
adc
mov
clc
sbb
pushf
incb
add
test
push
or
icebp
or
add
sub
xor
repz
xor
sub
or
xadd
scas
add
push
fdivl
stc
sti
fdivl
stc
gs
pop
sub
movsb
rol
adc
mov
sti
and
sti
lea
adc
nop
add
aad
adc
fsubl
stc
mov
lea
adc
sbb
add
aam
add
sub
xor
hlt
cli
xor
sub
pop
out
pop
rorl
xor
xor
mov
pop
into
outsb
dec
mov
pop
call
sarb
jae
cli
movsb
inc
adc
ja
int
fldt
and
push
lea
and
pop
add
in
stc
add
bound
cli
bound
test
sbb
xor
or
jb
mov
xor
cwtl
pop
ret
std
xor
push
sarb
mov
jne
cmpsl
push
pusha
push
pop
adc
lock
int
test
cli
mov
cs
cmpsl
pop
adc
mov
loop
out
loop
nop
add
mov
or
xor
ljmp
shll
add
xchg
inc
push
lcall
shl
push
sbbl
pop
adc
dec
jmp
jo
ljmp
lods
mov
insl
jbe
add
das
push
shrl
adc
jb
loop
or
loope
fs
enter
add
rol
in
rorl
mov
stos
lea
inc
adc
aaa
adc
repz
ljmp
cli
mov
mov
mov
sub
push
add
mov
movsl
xor
nop
pop
xor
shl
adc
sub
adc
bound
loope
insb
mov
repz
inc
sbb
mov
add
cmpsl
mull
inc
test
in
pop
pop
xlat
add
rol
or
rorl
sbb
mov
pushf
or
or
rorl
add
lahf
cli
xor
popf
pushf
pop
pop
add
and
fwait
add
fsts
xor
jmp
xor
cmp
js
add
movsb
rol
pop
ret
mov
cmpsl
mull
icebp
cmpsl
cli
lea
add
or
mov
adc
or
mov
xor
mov
lea
xchg
add
and
icebp
mov
add
pushf
inc
aaa
push
sub
sbb
call
scas
mov
cmp
jb
inc
inc
jl
add
jle
sti
and
add
ffree
ret
sub
mov
rcpps
mov
shlb
lret
repz
sti
in
adc
pop
sub
sub
xor
bound
movsb
nop
out
inc
pop
push
add
movaps
xor
out
repnz
jne
fcomp
mov
xor
repz
ljmp
scas
fs
cs
jnp
add
push
aaa
and
aam
add
sahf
xchg
repnz
nop
mov
stc
jg
imul
push
xor
bound
out
daa
popl
add
fbld
ret
sub
out
bnd
add
scas
daa
mov
push
push
sub
add
mov
lods
lea
xchg
xor
pushw
dec
in
insl
aam
ljmp
clc
je
add
or
aaa
cmp
lret
mov
add
lock
fldl2e
insb
lock
in
ficompl
mov
xor
test
sbb
xor
stos
lea
lods
jl
inc
adc
adc
push
insl
xor
adc
cmp
add
adc
mov
jnp
or
jnp
lea
adc
rorl
add
pop
addr16
call
movsb
clc
or
movsb
cli
lea
add
ret
lds
xor
sbb
xor
mov
stos
lret
push
cmp
mov
add
ja
incl
testl
or
mov
pushf
aad
adc
fidivrl
inc
push
or
inc
push
mov
mov
add
jb
mov
clc
sub
lock
mov
mov
add
scas
ret
mov
mov
cli
lds
out
push
mov
or
jmp
mov
idivl
je
stc
mov
sbb
jl
addl
fdivrl
add
psubq
and
test
adc
cmp
aaa
ljmp
rorl
testl
scas
std
mov
jae
ljmp
jecxz
cmovnp
add
xor
dec
sbb
sub
xor
cmpsb
mov
es
negb
cltd
insl
sbb
add
add
dec
xor
repnz
fdivl
loop
push
ljmp
cmp
aad
add
sarl
mov
mov
test
icebp
and
adc
insb
rorl
ljmp
xor
stos
xor
test
mov
shrl
adc
push
fwait
cmpsb
decl
inc
sahf
or
add
aas
lods
lea
test
outsl
xchg
pop
vpsrlw
icebp
xor
dec
loope
cmp
lea
jne
mov
mov
call
mov
inc
mov
ret
aas
mov
arpl
add
adc
jne
pushf
inc
clc
xlat
movsl
pop
fsts
add
aad
movb
aaa
int
push
movsl
daa
add
leave
adc
faddl
mov
add
push
xor
pop
movsl
das
mov
lock
iret
jmp
ret
in
add
mov
inc
sbb
arpl
insb
incl
int3
adc
add
lret
lock
inc
xchg
out
add
push
inc
add
js
jmp
insb
xchg
roll
cmp
test
cmp
push
inc
xor
mov
xor
mov
adc
push
inc
xor
ds
mov
aad
push
jnp
xor
mov
inc
add
xchg
add
mov
fs
mov
mov
lods
push
enter
leave
rorb
xor
and
adc
add
adc
and
dec
call
sbb
or
adc
and
adc
popa
cmp
xor
or
lock
cltd
mov
xor
and
xchg
and
mov
in
fnstsw
test
mov
push
jmp
lea
adc
adc
add
sbb
push
push
rcl
mov
in
cltd
cmp
add
pop
insb
dec
push
add
jecxz
in
inc
push
add
cs
xor
insb
adc
stos
in
mov
mov
push
jne
stos
add
or
adc
jmp
in
adc
sbb
aaa
inc
jmp
xor
inc
xor
scas
ljmp
lahf
mov
jb
add
notb
add
mov
pop
inc
add
jge
imul
clc
jo
mov
rcl
in
mov
mov
mov
pop
xor
lret
mov
add
sbb
mov
popl
lea
fldenv
mov
mov
rorl
fadds
add
repnz
mov
adc
push
hlt
or
sub
and
push
roll
add
mov
inc
dec
adc
clc
dec
leave
mov
cld
out
testl
sub
ret
add
jecxz
in
push
addr16
xor
int3
xor
shll
xchg
add
je
aad
dec
lret
ja
inc
fldenv
ss
add
lock
mov
xor
add
jo
roll
dec
lret
push
inc
xor
add
inc
xor
ds
xor
mov
stos
das
aam
add
jb
mov
pop
jg
call
mov
mov
movlps
or
jp
xor
mov
es
cmpsl
adc
or
mov
add
mov
jb
call
mov
xchg
movsb
sbb
sti
sub
sbb
or
add
stos
or
sub
xor
sbb
xlat
lods
mov
adc
inc
and
pop
xchg
psubsw
sub
movsb
lcall
imul
mov
icebp
add
pop
adc
pop
movhps
cmp
lahf
push
ss
sahf
inc
lea
lods
fisubrs
adc
push
cmp
xchg
clc
dec
or
shl
add
mov
ret
dec
mov
cmp
adc
pop
mov
add
mov
add
sahf
jne
mov
cltd
rcl
adc
add
add
adc
out
adc
jmp
insb
mov
out
ret
dec
mov
sbbl
test
clc
decb
add
or
movl
pop
xchg
add
out
arpl
jne
xchg
add
inc
sbb
decl
jmp
sbb
add
dec
jo
je
add
mov
add
adc
in
xchg
cld
mov
fs
add
mov
pushl
arpl
or
jmp
add
sbb
inc
jnp,pn
jne
adc
mov
xchg
sti
jl
and
test
decl
xor
inc
incl
add
clc
adc
pop
cmpsl
fwait
mov
insb
fwait
xor
fstpt
lds
add
mov
add
xchg
xor
dec
cld
mov
sbb
mov
jno
sub
fidivs
lcall
ret
jne
adc
pop
mov
stc
add
adc
cmp
pop
jmp
add
push
fstps
add
xor
cld
push
and
sub
xor
out
adc
mov
mov
fwait
cmpsb
push
into
and
scas
arpl
fnsave
push
and
add
scas
in
mov
push
jnp
aas
mov
jp
xchg
and
sbb
inc
dec
cmp
lods
sbb
outsb
fwait
es
gs
jmp
add
pop
mov
je
fwait
push
xchg
mov
in
jne
xchg
scas
mov
cld
in
sub
or
xchg
jge
xor
leave
sbb
scas
add
ljmp
mov
mov
hlt
sbb
cwtl
repz
fimuls
cwtl
lea
inc
call
sub
add
out
jne
mov
add
nop
shr
jecxz
jmp
lcall
add
push
add
ja
add
pushl
jg
jmp
push
rcrb
fnsave
push
push
sbb
adc
xor
or
pushl
push
or
dec
push
push
lcall
adc
push
rcl
je
inc
push
jecxz
add
sbb
add
insl
push
inc
and
mov
mov
arpl
add
aad
inc
out
push
push
xor
mov
stos
jp
imul
pop
leave
dec
flds
ljmp
xor
mov
leave
or
inc
xor
in
xor
js
fdivrs
adc
xor
icebp
xlat
jb
adc
add
stos
fadd
out
icebp
lods
add
pop
lods
mov
jp
fisubrl
lods
lcall
inc
jmp
dec
jmp
fwait
and
sbb
add
jb
clc
xor
arpl
cltd
aam
jle
pop
lods
cld
or
insb
cwtl
inc
lods
fcompl
ss
xchg
push
jmp
sub
mov
stos
add
and
inc
mov
push
stos
inc
cmc
ja
xchg
pop
mov
inc
icebp
stos
test
into
jg
aaa
and
stos
test
shlb
jmp
adc
xchg
jge
cwtl
add
adc
fwait
sub
add
xor
movsb
push
mov
add
call
mov
sub
jmp
cmp
lock
lcall
and
repnz
push
xorl
jne
stos
jno
jmp
xor
add
jmp
sub
pop
jno
push
cmpsb
add
jmp
jno
push
sbbl
cwtl
xchg
mov
add
aad
add
jmp
mov
sbb
rep
pop
push
sarb
add
movsl
popl
roll
pop
or
add
push
lock
aas
adc
lea
clc
movsl
sub
add
dec
in
sbbl
pusha
jmp
pushl
clc
ljmp
js
mov
add
adc
inc
mov
in
call
xor
out
mov
push
test
mov
stos
push
incl
test
leave
inc
dec
sti
jle
std
mov
outsb
rclb
fcompl
out
cld
push
fidivrs
pusha
imul
aaa
add
subb
or
ljmp
andb
or
lcall
and
or
mov
push
xchg
sub
jl
cmp
add
xor
add
xor
cmp
sub
movsl
adc
adc
adc
cs
cmp
data16
cmp
jae
jmp
mov
push
adc
and
add
das
or
sub
jbe
xchg
mov
add
xchg
jl
push
cmpsb
cmp
xor
decl
jmp
xchg
dec
bound
pop
xor
add
outsl
inc
add
adc
fwait
mov
fcos
test
adc
jmp
xchg
xchg
mov
adc
push
int
pushl
iret
cld
int
jmp
add
ret
lods
mov
xchg
jne
out
rorl
int3
lods
mov
and
jmp
ds
pushl
push
xchg
xor
imul
mov
xor
sbb
in
nop
add
xor
cltd
iret
and
jmp
mov
mov
add
inc
les
mov
mov
push
or
add
sbb
push
add
cwtl
or
icebp
jp
decl
roll
aam
add
pop
inc
mov
inc
and
inc
hlt
testl
push
pop
inc
mov
add
je
fwait
cmp
add
push
add
popf
and
jne
mov
sub
mov
loopne
mov
xor
les
sub
add
dec
call
cmp
jp
jge
das
mov
fsubl
mov
xor
movsl
jne
or
mov
and
ret
jne
out
sub
add
adc
idiv
faddl
pushf
inc
dec
dec
movsl
or
add
es
int3
or
adc
push
lcall
or
push
xchg
js
push
adc
add
adc
and
push
ficoms
sahf
movsb
into
xchg
xor
xor
loope
inc
rclb
jb
xor
dec
stos
jg
mov
mov
in
std
loope
and
push
outsb
push
in
add
pop
ret
jmp
repz
push
in
fwait
mov
movsb
mov
adc
adc
clc
out
or
movsb
pushf
and
cs
add
movsl
push
nop
add
jne
fwait
mov
jmp
lcall
xor
push
or
sbb
mov
mov
cmp
jl
pop
sub
add
in
push
sbb
cmc
xor
sbb
sub
fsubrl
jl
inc
xchg
fsubl
jne
xchg
or
push
das
imul
jl
adc
or
add
xor
push
push
dec
and
xchg
sub
push
mov
incl
mov
leave
ret
push
mov
xchg
lock
or
movzwl
incl
add
or
es
or
pop
loop
sbb
inc
lock
cwtl
jecxz
scas
sbb
jge
cwtl
adc
add
jne
mov
clc
add
jne
mov
adc
sub
incl
mov
lea
inc
call
pushl
mov
call
call
add
sub
mov
loop
jbe
inc
cmp
out
dec
jmp
pop
rcll
or
inc
aad
insb
lret
xor
inc
outsl
stos
adc
mov
or
in
and
add
inc
jnp
adc
pop
jne
push
pop
or
or
add
and
data16
jne
rorl
push
lret
jnp
mov
add
lock
mov
stos
mov
loopne
pushf
sbb
pop
outsl
lea
xchg
mov
inc
lahf
movsb
xchg
popa
lea
mov
test
mov
inc
and
push
lds
mov
xor
imul
cmp
mov
movsb
insl
mov
jb
lahf
lds
add
xchg
sub
enter
mov
xor
mov
mov
add
daa
pop
jmp
es
sbb
dec
jno
roll
or
adc
lret
pop
push
aad
in
sbb
push
lea
dec
mov
cmp
fs
mov
jl
lea
add
mov
sahf
pop
mov
adc
xchg
mov
out
cs
xor
call
and
jmp
sub
aad
push
pusha
xchg
sub
dec
mov
or
int
jmp
lea
movsl
inc
sub
mov
push
call
or
add
push
add
pop
sub
call
rcll
punpcklbw
sub
test
xchg
jne
rcrb
ret
decl
mov
inc
pushl
test
adc
sub
call
push
aam
fisttpl
test
mov
pop
adc
test
jmp
add
sbb
push
jmp
stos
inc
fistpll
or
fbld
push
inc
add
add
call
out
pop
fisubs
call
popa
push
sbb
aas
adc
inc
addr16
cmp
pushf
push
dec
cmpsb
adc
sbb
xor
and
stos
push
xchg
lcall
mov
sar
add
mov
adc
mov
add
jno
insb
xchg
push
mov
test
inc
popf
inc
jl
jo
adc
push
jns
cs
sbb
inc
popf
es
sub
push
loopne
mov
adc
pop
and
in
pushf
test
mov
lret
jmp
push
sub
mov
ret
inc
sub
push
and
rclb
mov
rcrb
sbb
pop
sahf
mov
insl
mov
pushf
lea
and
hlt
ds
sbb
sbb
mov
aas
and
aam
mov
sbb
cmpsb
ss
mov
mov
xchg
lds
or
push
xchg
lret
push
lods
pop
ret
loope
or
cmp
sub
mov
xchg
inc
loope
add
data16
and
add
xchg
cmp
call
cmp
shr
cmp
push
inc
adc
or
xchg
xchg
stos
jne
mov
adc
adc
arpl
das
lret
sub
add
inc
cmp
dec
lock
ja
mov
jge
mov
sahf
movsb
mov
push
pushl
fwait
add
add
test
add
adc
add
sahf
push
push
pop
cmp
sbb
call
mov
adc
add
mov
inc
mov
add
cmp
sub
dec
cmp
push
mov
outsb
add
jb
je
add
call
loope
mov
rolb
je
add
xchg
add
xor
pop
mov
mov
jle
ds
repnz
das
xchg
addl
xor
adc
jnp
je
cli
xchg
add
pop
jbe
add
jnp
leave
repnz
cli
idivl
jno
add
icebp
js
icebp
adc
add
in
outsl
aam
mov
adc
add
adc
add
add
adc
add
xor
add
cli
or
xor
cld
xchg
shr
or
ljmp
adc
add
sbb
xor
call
shrb
xor
push
std
test
outsl
pop
shr
mov
les
fs
shr
stos
jo
mov
test
subl
out
cmp
and
rclb
adc
push
aaa
aaa
xchg
add
cld
sbb
mov
mov
mov
push
lahf
jp
clc
cltd
sub
mov
shl
jbe
mov
das
test
or
jmp
nop
push
add
scas
add
mov
xor
aaa
nop
push
add
add
add
and
fisttps
insb
adc
cwtl
xchg
cmp
inc
pop
incl
notl
push
inc
lods
add
dec
xor
inc
sbb
jne
scas
cmpsb
aad
stos
mov
xor
add
scas
out
out
push
int
push
inc
call
int
push
sti
decl
test
stos
call
leave
test
outsb
enter
mov
jmp
xchg
aas
add
mov
or
add
iret
push
inc
inc
dec
mov
jb
xor
je
aad
add
insl
mov
add
adc
cltd
or
push
daa
add
add
stos
test
insb
xchg
xchg
jmp
add
or
mov
data16
add
insl
stos
jmp
xchg
mov
xchg
add
insl
xchg
mov
inc
xchg
lcall
push
add
imul
push
loope
incl
adc
aam
subb
xor
lcall
push
add
jmp
add
sub
dec
push
cmpl
xchg
mov
xchg
xchg
in
sldt
cmp
xchg
xchg
outsb
in
movsb
pop
shr
stos
les
xchg
test
mov
dec
subl
xor
lods
xorb
sub
xchg
push
sub
xchg
push
sbbl
testb
divb
or
dec
mov
fdivr
fisubs
add
call
shlb
out
incl
xorl
mov
cmp
fldcw
mov
sub
pushf
cmp
test
adc
ror
adc
jo
das
call
xchg
mov
jmp
adc
xor
lds
xor
sub
or
push
add
inc
jg
add
or
jne
xchg
test
fbld
cmpsl
add
and
fisttps
jne
fwait
inc
shr
mov
jne
jo
sar
iret
inc
pop
leave
lret
push
add
sti
push
scas
sbb
sub
fwait
mov
rcrb
add
movl
dec
inc
hlt
add
out
or
add
adc
lea
push
push
xchg
inc
hlt
enter
xor
xchg
jmp
sbb
idiv
mov
enter
cmp
add
xor
dec
in
pop
xchg
add
gs
ljmp
inc
or
hlt
push
sahf
mov
push
loop
xor
xchg
sahf
mov
push
cltd
lock
add
jb
je
loopne
call
add
mov
add
xchg
xor
pop
in
incl
ret
je
repz
ds
push
es
jae
xchg
pushl
jle
add
adc
fwait
inc
bound
xchg
fimull
xchg
add
pop
loope
adc
xchg
rcrl
roll
fwait
insb
xchg
scas
mov
jge
or
in
jnp
fmull
jg
adc
mov
mov
test
lods
xlat
insb
xor
pop
cmc
nop
add
adc
insb
test
adc
ret
es
lcall
adc
jmp
mov
ljmp
xor
test
leave
jl
cltd
roll
testb
inc
sub
dec
adc
repnz
add
jmp
sub
mov
mov
pop
xchg
hlt
mov
jl
cmp
mov
or
adc
mov
pop
test
outsb
sarl
sar
push
cltd
call
xchg
in
mov
and
das
fsts
pushl
add
inc
bound
sub
pop
call
mov
sbb
push
out
out
mul
mov
xor
loopne
jmp
stc
test
fisttps
idiv
ja
je
sbb
jmp
out
add
mov
add
add
lcall
mov
lcall
mov
mov
sar
add
xlat
mov
pushl
pop
sti
out
cmp
mull
cmp
rclb
sub
lcall
pop
mov
and
decb
jmp
aas
pushf
neg
sbbl
inc
pop
sbb
leave
xchg
lock
push
mov
xor
mov
aad
mov
mov
nop
call
add
push
cmc
sahf
xorl
add
imul
push
jmp
sarl
push
aad
mov
or
aaa
jp
sbb
add
fwait
xchg
mov
jns
sti
push
cmp
in
inc
fidivs
push
sbb
insb
nop
out
pop
fnstsw
sti
into
and
mov
dec
stos
or
fbstp
add
dec
adc
pushf
ja
push
add
jg
lea
loope
cld
mov
cld
mov
call
add
or
popa
fdiv
adc
jbe
or
and
push
sbb
xor
jb
cld
or
jmp
movsb
or
mov
leave
dec
es
or
cs
js
mov
jne
lret
push
mov
and
lods
js
aad
js
xorl
adc
jb
push
inc
xor
imul
or
xor
aas
or
push
les
cmp
xchg
movsl
imul
mov
ret
inc
adc
cwtl
aad
sbb
add
popa
sub
mov
in
xchg
or
add
push
push
enter
subb
lcall
push
inc
jnp
and
call
xor
sar
aas
sbb
inc
add
aad
inc
enter
fcoms
decl
mov
push
clc
mov
jo
aad
outsl
inc
push
jmp
out
fimuls
jmp
sbb
das
xor
jmp
pop
fwait
add
mov
notb
or
mov
dec
xchg
xor
inc
out
mov
in
shlb
fidivrs
adc
insl
sbb
out
push
mov
mov
insb
add
or
inc
clc
pop
imul
leave
xor
add
jb
je
xor
add
insl
adc
and
fwait
mov
add
mov
clc
mov
mov
mov
in
adc
adc
insb
pop
mov
add
dec
aas
lahf
mov
test
shl
adc
pushf
js
data16
jbe
sti
dec
push
mov
jmp
pushf
cmp
inc
mov
push
mov
mov
inc
xor
inc
pop
fdivl
xor
push
fwait
inc
jbe
mov
add
sahf
add
sbb
add
inc
test
popa
insb
bound
inc
or
repz
push
xor
icebp
adc
dec
shr
mov
add
adc
pop
shll
test
pop
xchg
mov
adc
cmc
adc
adc
inc
jmp
repz
stc
xchg
jne
bnd
push
jo
jg
fdivrl
ret
test
jne
mov
shll
add
mov
and
das
test
jne
ret
or
incl
clc
pusha
incl
and
mov
idivb
and
jmp
sub
sar
rcrb
mov
hlt
movl
lcall
mov
push
sbb
xor
adc
cwtl
sar
addr16
adc
addb
mov
sar
xlat
inc
pushl
cwtl
push
std
xchg
inc
or
pop
xor
pop
push
call
add
push
xorl
pushl
adc
aaa
pushf
pushl
mov
add
cmovb
or
push
sbbb
xchg
inc
add
add
dec
roll
add
add
sbb
xor
call
sub
nop
inc
lock
xchg
ret
cli
xchg
lds
shrb
lret
and
aas
mov
add
nop
jp
cltd
jge
out
mov
xchg
out
ja
incl
sub
mov
xor
add
add
out
subl
add
jae
clc
xchg
adcl
xlat
icebp
adc
mov
jb
clc
test
inc
xor
notl
cltd
xchg
fs
aas
jb
sbb
adc
add
mov
xchg
cltd
xchg
fldenv
jo
add
lods
jb
xchg
mov
adc
js
push
incl
ret
jmp
fabs
addr16
inc
sahf
mov
jmp
mov
lahf
xchg
stos
scas
jno
pop
repz
push
adc
aas
inc
jmp
xor
xchg
jmp
insl
aam
jne
and
jbe
jno
je
push
pop
mov
push
add
out
loopne
lcall
mov
pop
inc
add
cs
sub
lods
jl
insb
jae
mov
decl
cmp
adc
mov
lcall
enter
push
adc
jne
mov
mov
xchg
ljmp
nop
icebp
sarb
sbb
add
insl
mov
decl
out
mov
mov
add
imul
push
mov
rcrl
decl
outsl
and
mov
cltd
jmp
mov
setne
decl
mov
dec
cwtl
call
xor
dec
mov
nop
aas
test
clc
cmp
jmp
xchg
sub
dec
inc
lods
jge
add
inc
stc
or
add
in
sti
xchg
adc
add
insb
adc
outsb
or
ljmp
xchg
stc
sti
dec
push
cmp
push
cmp
cmp
add
xor
inc
add
cs
pop
sbb
enter
in
add
adc
mov
insl
push
addl
repnz
add
ds
dec
add
adc
pop
xor
adc
cld
arpl
lock
insl
into
addb
mov
jo
subl
xorl
jmp
sbbb
mov
test
sub
cmpb
xor
inc
movsl
add
add
mov
popf
or
addb
mov
insl
push
je
gs
push
mov
addr16
sar
adcb
xor
xor
sub
xchg
neg
mov
push
cmpsb
adc
inc
fs
mov
mov
push
add
sbb
adc
jae
dec
xorl
lcall
mov
pop
addl
outsb
data16
bound
repnz
imul
insl
incl
ja
bound
fsts
push
inc
gs
call
shlb
fdivrs
mov
xchg
decl
jne
clc
fwait
lret
leave
ret
push
mov
pushl
xchg
jne
jo
in
pushl
rorl
inc
mov
or
test
add
pop
adc
lods
js
cmp
cmp
mov
pop
shlb
clc
add
add
xchg
jne
xor
cmc
notl
inc
or
imul
incl
mov
cmp
aas
or
test
outsb
sub
cmp
add
jge
mov
rolb
cmp
loopne
jmp
add
cmpsb
rclb
and
imul
pop
jg
loope
stc
pop
cltd
sarl
jle
sti
lret
jbe
in
mov
js
or
lods
lds
dec
add
nop
test
jle
loope
mov
cs
xchg
lods
push
pop
jg
les
fldcw
jg
push
fs
popf
fs
les
nop
xchg
adc
cltd
add
repz
add
adc
idivl
push
ret
addb
mov
add
push
push
add
imul
aam
popf
or
mov
in
xchg
ret
mov
stos
jge
push
rorl
fs
push
jmp
cmp
add
loopne
in
in
into
outsb
scas
imul
push
iret
push
xchg
imul
xchg
cltd
jg
pop
inc
int
ljmp
pop
mov
test
pop
imul
cmovg
aad
adc
fs
test
out
out
jl
jl
adc
pushf
aad
dec
sbb
pop
ret
mov
cld
scas
sbb
hlt
push
or
mov
xor
add
pusha
sti
call
dec
js
xor
adc
incl
out
call
loopne
xor
call
int
pop
inc
addr16
push
decl
popa
pop
call
xor
lret
ljmp
js
xor
cld
mov
push
pop
out
or
std
incl
add
add
sub
xor
out
push
inc
sub
inc
dec
inc
jne
jae
xor
jl
dec
movsb
jl
ds
jg
push
mov
clc
mov
outsb
xor
shrl
push
pop
incl
jnp
je
mov
outsb
jbe
je
test
out
loopne
add
cmp
pop
add
pop
sarb
ret
insl
icebp
pop
mov
js
jno
jnp
jle
jbe
cmp
fildl
jne
adc
jne
addr16
out
adc
or
outsl
jnp
cli
in
les
xchg
pop
aaa
addr16
push
addr16
or
inc
addr16
cld
xchg
xor
adc
icebp
ss
js
shll
add
call
cmp
data16
dec
and
lock
push
jnp
fst
gs
leave
add
jne
lock
lock
js
push
test
add
sar
data16
jp
push
add
repnz
hlt
push
add
sbbl
jne
lret
loopne
xchg
call
pushw
sbb
xchg
jne
pushl
je
add
cli
decl
add
mov
mov
int3
imul
mov
pushf
inc
and
xor
adc
dec
cld
call
or
incl
sbb
sti
rorl
call
popf
adc
mov
cmp
jmp
push
inc
add
into
incl
add
out
jne
stc
outsb
pushl
negl
cmpsl
jmp
ret
push
mov
pushl
stc
call
jne
inc
out
inc
jmp
ljmp
sbb
ds
jmp
push
daa
jne
call
aaa
jne
push
and
int3
jmp
add
jmp
or
fld
adc
jnp
mov
daa
or
loope
js
cmp
js
xor
mov
xor
sti
inc
decl
call
leave
jnp
out
out
adc
js
sbb
dec
js
push
push
add
mov
jl
js
cmp
loope
out
js
add
fldl
dec
ret
into
mov
out
ds
dec
insl
in
add
call
js
mov
adc
lds
adc
xor
sub
jmp
mov
les
sbb
lock
add
jmp
mov
nop
mov
xor
jbe
pop
sub
lock
xchg
bound
cltd
jle
lds
sti
or
jo
inc
xor
test
out
call
ja,pn
ljmp
jo
push
xor
sub
lock
jbe
mov
mov
pusha
aad
in
sub
xor
sub
into
pop
in
mov
insl
bound
and
pushl
xor
add
sahf
add
jmp
fldt
or
aad
test
sub
xor
sbb
outsb
cmpsl
in
jne
in
popa
addr16
xor
imul
cltd
xor
cmc
popa
addr16
adc
push
rcrl
xor
incl
enter
fsts
cmp
or
push
add
lock
inc
mov
add
in
test
jbe
push
jmp
es
add
push
add
fsub
je
mov
std
ljmp
sbb
ljmp
orb
push
cltd
xor
insl
popa
xor
adc
add
adc
jmp
out
push
mov
imul
add
xor
cmp
imul
je
dec
push
pop
mov
call
arpl
test
push
push
out
pop
mov
out
sti
popw
or
out
je
push
in
add
add
imul
cmp
out
xor
mov
sbb
dec
ljmp
jmp
pop
sti
es
dec
insb
add
xchg
adc
je
or
lcall
push
je
ret
je
cltd
and
je
les
aam
jmp
jae
lea
cld
outsb
enter
jmp
scas
jae
push
sbb
les
adc
pop
mov
out
cld
sti
add
push
lock
es
adc
inc
sub
jle
xchg
and
stc
cs
aam
imull
adc
stc
pop
add
pop
fpatan
ret
xor
std
inc
jmp
sub
inc
pop
mov
push
jl
pop
xor
shrb
dec
fiadds
jbe
into
jns
cmp
pop
xor
aad
rolb
scas
aad
out
adc
call
sub
sub
pop
mov
popl
add
lds
sub
test
insb
in
sbbl
mov
je
dec
testl
fcoms
cmpl
je
daa
pop
daa
ljmp
loop
incl
add
mov
jne
jecxz
or
sar
jecxz
hlt
ja
pop
call
leave
insb
daa
adc
mov
lock
gs
call
mov
pushl
loop
lock
gs
call
xchg
in
pop
out
pop
jecxz
xorl
add
test
outsb
testb
mov
jmp
testl
inc
dec
add
imul
mov
div
cltd
dec
inc
jmp
inc
inc
call
pop
inc
incl
jbe
pushl
imul
pop
outsb
inc
jmp
mul
dec
cmpsb
inc
call
inc
and
and
mov
jae
ds
adc
fidivs
decl
adc
fistpl
add
test
cltd
ret
sbb
repz
xor
adc
idivb
pop
mov
jo
in
flds
lcall
andb
add
fcmovb
mov
pop
xor
adc
fstpt
loope
jo
or
sub
adc
scas
or
adc
aaa
lock
and
call
add
push
fcmovb
add
inc
repz
lock
cld
push
or
jo
pop
add
push
pop
xor
push
ret
jmp
outsl
shl
jmp
clc
jmpw
xor
jmp
call
les
fstpl
adc
loope
adc
add
fwait
lcall
sub
push
call
pop
jmp
mov
sbb
pop
mov
ljmp
xlat
pop
call
pop
call
incl
scas
mov
incb
mov
out
xchg
call
add
cmp
imul
loop
lcall
fadds
pop
xor
ljmp
add
pop
cmp
shll
rolb
inc
mov
xor
jno
jmp
dec
iret
incl
inc
jne
mov
out
fwait
out
push
cmp
push
gs
sub
mov
insl
or
cld
dec
adcl
leave
ret
fcos
mov
or
add
add
imul
sub
clc
push
cmpl
sti
xor
stc
insb
push
xchg
mov
lock
xor
add
imul
mov
inc
je
sbb
incb
pop
sbb
insb
call
sub
sti
push
mov
cld
out
adc
insb
mov
pop
mov
pushf
pop
xchg
ss
pop
inc
push
pop
mov
jns
xchg
sub
add
insb
jmp
fimull
call
ret
xlat
in
inc
jecxz
sbb
aam
aam
shll
xor
sub
aas
mov
not
push
adc
pop
in
sub
lock
imul
ror
push
into
pop
scas
push
imul
leave
sbb
inc
and
je
arpl
lods
lret
add
shll
sub
outsl
sub
lcall
push
xor
jg
sub
and
nop
pop
push
incl
cmpsb
cmp
loope
mov
push
mov
xor
add
addr16
jmp
or
orl
call
adc
lahf
pop
jmp
jne
fneni(8087
pop
add
pop
ret
inc
mov
xchg
arpl
call
inc
shlb
xor
inc
sbb
fmul
ljmp
mov
call
ljmp
je
cld
repnz
ja
pop
call
add
push
push
sti
push
cmp
mov
push
decb
mov
or
sbb
push
push
test
je
pusha
insl
loop
push
mov
imul
push
xchg
sbb
adc
inc
xor
les
scas
std
mov
xor
mov
or
leave
rorb
add
mov
cs
xor
xor
imul
adc
dec
dec
aas
fisubs
je
jnp
incb
or
and
imul
lods
add
ds
xchg
sbb
ss
push
dec
loope
out
cs
leave
imul
into
fstpl
and
lock
add
call
ret
add
ds
cmc
aas
ss
repnz
movsl
and
aam
lret
out
xchg
ss
push
call
fstpl
push
aam
bound
out
or
sbb
aas
xlat
push
ds
cs
test
sub
push
pushf
testl
mov
add
push
in
cmp
add
dec
xchg
mov
dec
into
pusha
sbb
sbb
push
jmp
insl
adc
mov
dec
cmpsb
inc
sbb
ficoms
adc
test
sbb
ret
incl
xor
or
add
push
clc
sbb
mov
push
push
mov
sbb
imul
push
push
jne
or
decb
push
mov
pop
call
jg
sti
incl
mov
call
imul
dec
outsb
scas
xor
xor
inc
add
ret
dec
mov
jne
mov
je
rolb
mov
xor
xor
or
xor
add
fcoms
jmp
aad
adc
incl
push
cmove
call
inc
stos
mov
jne
and
or
loope
inc
xor
pop
cltd
adc
jle
inc
or
adc
mov
push
in
pop
mov
hlt
mov
incl
cmpsb
push
aaa
xor
out
mov
lcall
add
adc
jne
mov
fs
shr
or
inc
add
nop
js
mov
dec
not
fnstenv
int
fs
or
sub
jl
call
xor
call
imul
jmp
fs
fnstcw
call
jbe
inc
cmp
inc
fisubs
int
add
pop
push
cmp
pop
mov
test
add
adc
mov
call
jns
dec
mov
stos
fs
add
loop
jmp
lods
inc
pop
fs
cmp
movsl
out
ret
add
pop
ret
dec
jl
dec
ds
stc
push
dec
out
jae
pushl
cmp
push
or
push
inc
jmp
add
adc
mov
std
inc
jmp
adc
call
mov
xchg
std
inc
inc
rorb
sub
insb
dec
out
hlt
dec
jmp
cmp
cmpsb
xchg
mov
inc
jmp
xchg
dec
mov
lcall
mov
pushl
negl
in
stos
cmp
decl
inc
testl
add
and
inc
add
sar
pop
shlb
fdivrs
mov
add
inc
xor
pushf
fdiv
aaa
mov
call
xor
cld
sbb
call
fdiv
xchg
cmpl
fs
idiv
xchg
je
fwait
je
test
inc
call
mov
mov
add
pop
call
xchg
lcall
mov
popa
jl
pop
mov
lcall
sahf
cs
jmp
imul
negl
xchg
pop
mov
pushl
xchg
in
ss
call
pop
mov
notl
insb
xchg
pop
ds
fnstsw
mov
scas
popa
lcall
sub
lock
sahf
popa
call
push
clc
pop
jmp
testb
sahf
adc
xor
or
out
jo
push
push
out
into
mov
push
fnstcw
mov
cmpsb
jecxz
gs
shr
jmp
push
test
xchg
push
ret
sub
adc
sbb
jno
fnsave
add
scas
dec
pop
pop
add
or
jno
pusha
push
cmp
sahf
dec
dec
je
jecxz,pt
push
add
call
add
add
sub
xchg
or
dec
xchg
or
shl
xchg
push
jmp
pop
popa
dec
add
sub
push
dec
call
shll
add
push
roll
jmp
sar
out
call
and
mov
andl
adc
or
pop
sub
xor
sub
shr
adc
and
adc
jmp
out
adc
jmp
dec
dec
imul
rclb
sahf
clc
inc
lcall
cmp
pop
xor
imul
adc
add
iret
daa
inc
fsubr
je
and
incl
add
mov
dec
popf
hlt
idivl
dec
push
pusha
mov
lcall
call
ret
pop
xchg
cmc
fcomip
aas
jmp
sub
jmp
jo
call
popf
in
pop
jmp
xor
lock
jmp
mov
mov
jb
push
incb
add
mov
decl
nop
popf
inc
xchg
inc
pop
push
adc
mov
loop
call
sub
sub
imul
rcrb
mov
push
pushl
inc
jmp
sub
dec
push
call
les
xorl
fs
jo
pop
push
je
mov
inc
pop
pop
add
pop
sahf
mov
jns
fcoml
xchg
push
push
dec
sahf
xlat
cs
pushf
push
dec
mov
mov
jbe
out
jle
push
out
data16
ss
pushf
dec
push
xchg
roll
pop
mov
ds
mov
adc
xlat
cs
pushf
sahf
dec
push
xchg
lea
pop
cltd
cli
push
pop
add
xchg
jo
dec
imul
negb
add
dec
shl
fwait
dec
ficomps
ficomps
loope
inc
dec
xchg
pop
inc
mov
jae
inc
pushl
jmp
cmp
xor
lea
aas
jmp
outsb
decl
pop
scas
adc
xor
add
mov
cs
jne
dec
ds
or
ret
xor
icebp
or
std
push
in
inc
jne
in
pop
adc
call
lcall
cli
cwtl
inc
fstpl
add
add
add
add
push
test
adc
add
push
testl
dec
in
pop
sbb
push
xor
push
and
lea
add
test
decl
je
push
gs
call
rcl
jae
jno
add
enter
mov
pushl
mov
mov
and
jmp
push
xor
pushl
cltd
test
jg
push
cmp
ss
adc
mov
loope
call
sub
or
call
mov
dec
in
dec
jl
inc
add
xor
lock
ja
jmp
inc
xor
mov
mov
jmp
aas
cld
add
movsb
lret
push
jmp
mov
sub
jl
call
mov
in
call
adc
push
nop
lock
pop
lcall
inc
xor
dec
mov
xchg
es
pushl
mov
imul
outsl
or
add
ss
xor
push
sub
loop
mov
cmp
fcomps
xchg
insb
cmp
inc
scas
mov
mov
cmc
or
mov
dec
pop
decb
incb
out
inc
jmp
pop
fsubp
shlb
pop
shr
pop
test
pop
movb
shr
imul
pop
mov
inc
push
add
xchg
cmp
pop
xor
jmp
pop
jle
idivb
adc
add
inc
jmp
xor
stc
xor
call
cmpsl
aaa
idivl
lcall
xchg
addl
mov
scas
cmp
xchg
jne
pop
dec
mov
mov
lea
add
sbb
sarb
testl
jno
or
jmp
bound
push
mov
adc
pop
testl
das
push
pop
call
xor
push
dec
push
pop
call
outsl
movsl
in
pop
jmp
mov
stos
idiv
out
scas
jge
fucomip
mov
sar
inc
data16
add
scas
ljmp
xor
fdiv
outsl
jmp
pop
and
jmp
mov
mov
pusha
mov
std
outsl
jmp
jne
mov
mov
push
push
mov
cld
ret
or
xor
sar
int3
or
pop
pop
push
lcall
sar
push
fisttps
call
add
js
jmp
mov
subl
mov
or
dec
sub
jo
imul
add
icebp
cmp
insb
xchg
add
xor
ds
std
ficoms
add
mov
repz
mov
push
push
mov
pop
jmp
push
mov
xchg
jmp
xor
rolb
add
sub
lcall
cmc
dec
inc
cltd
mov
nop
xor
mov
inc
fiadds
ds
mov
in
mov
es
cld
sub
call
push
mov
inc
add
mov
ret
cmp
out
jle
sbb
mov
cltd
inc
jo
fisttpll
push
pop
adc
iret
pop
shr
push
add
jl
ds
scas
inc
hlt
sub
call
cld
mov
xchg
xor
push
fisttpll
push
add
sub
jae
out
mov
xor
out
mov
cmp
sub
aas
mov
xor
aas
or
dec
inc
call
and
jge
call
insl
aas
call
xor
mov
pop
xchg
test
insl
aas
mov
fsts
pushl
addr16
sub
leave
adc
int
call
adc
daa
aas
je
aaa
and
pushl
or
lcall
add
or
lea
insb
lcall
addl
movsl
cld
idiv
out
jne
jb
lea
dec
jecxz
in
loop
call
jecxz
jae
pop
movsl
int3
mull
pushl
mov
outsl
jecxz
call
xor
mov
mov
sub
pop
lcall
scas
pop
testl
and
fildl
xor
xchg
faddl
add
mov
inc
pop
decl
fadds
pop
xor
call
movsb
inc
pop
in
jecxz
push
jmp
ja
call
outsl
cwtl
in
ja
jl
pop
lods
ret
cmpsb
push
mov
xchg
fadds
fldenv
faddp
xchg
loopne
scas
push
incl
pop
test
dec
pop
mov
inc
dec
in
inc
push
fdivl
ss
sahf
sub
cwtl
add
xchg
cmp
es
cltd
adcl
pop
arpl
push
pop
xchg
xchg
push
xchg
pop
pop
cmp
out
push
hlt
cmp
xchg
inc
cmp
shll
jmp
mov
das
push
and
cmp
pop
push
push
mov
mov
pusha
mov
mov
jo
adc
call
cmp
add
idivl
xor
adc
jmp
jmp
add
sarb
adc
push
mov
test
adc
repz
jle
call
idivb
call
push
aaa
add
pop
shl
dec
add
call
mov
mov
subl
adc
cmp
pop
divb
add
push
addr16
add
pop
call
pop
sti
incl
in
leave
dec
adc
push
adc
add
pop
ljmp
in
or
lods
mov
pop
mov
add
out
pop
mov
cmpsb
xchg
push
inc
ds
jno
push
add
loop
or
push
and
fists
rolb
out
decl
xor
mov
xor
push
inc
xor
sbb
into
test
dec
incl
jne
aad
mov
leave
cmp
sub
lods
inc
cld
lcall
dec
jne
and
jge
add
jne
sbb
insb
add
xor
fucomi
push
insb
add
pushf
test
xor
je
sti
pop
shr
dec
dec
push
outsb
arpl
push
xorl
popa
adc
fdivs
sub
cmp
cmp
pop
xor
push
test
dec
ret
push
pop
inc
jg
fdivrs
add
fldenv
mov
lea
pushf
sti
xchg
sub
jbe
lods
dec
fsts
jmp
or
adc
dec
les
add
aaa
cs
xchg
cmp
jns
xchg
movsl
xor
cmp
mov
iret
sti
sbb
cmpsb
es
sub
sub
adc
test
mov
and
adc
jmp
je
add
fdivrs
imul
das
iret
repz
in
cmp
jle
mov
sub
psubsw
fldpi
inc
jmp
repz
fs
imul
cmc
jecxz
shll
mov
fidivrs
call
add
add
push
decb
enter
push
jmp
add
in
mov
imul
enter
dec
enter
sbb
jmp
test
pushl
push
sbb
enter
push
jmp
inc
sahf
incl
mov
testl
mov
add
jecxz
call
sub
or
call
or
insl
rcrb
mov
sub
push
dec
add
jbe
mov
push
incl
sbb
dec
jmp
inc
inc
je
std
pop
push
test
mov
push
call
pop
add
xor
dec
add
xchg
xor
and
push
lcall
sub
iret
std
rolb
cltd
jmp
jle
nop
in
jle
dec
jmp
xor
adc
movsb
and
call
rolb
pop
and
nop
in
adc
dec
ss
sub
dec
es
push
ss
shrb
sub
cltd
push
ss
or
inc
pop
dec
divb
xchg
pop
fildl
xchg
push
xor
jbe
add
jl
jbe
mov
xor
dec
cmpsb
xor
out
xor
inc
cmp
jle
xchg
and
divb
lock
push
pushw
dec
mov
cld
cmpsl
add
lock
daa
ss
clc
xor
in
call
data16
fisubrs
add
xlat
mov
push
cmp
hlt
and
xor
sub
mov
add
call
cmp
cld
inc
jmp
out
pop
jle
mov
call
xor
add
cmp
sti
cltd
jmp
ljmp
xor
int
xor
lods
cli
adc
jmp
push
lret
push
add
ljmp
push
ljmp
mov
clc
mov
push
jmp
incl
pop
add
fsubs
jmp
jo
daa
inc
or
je
shrb
sarb
repz
pop
mov
aas
scas
test
inc
fdivr
call
sbb
fisttpl
or
inc
add
mov
xor
lock
decl
test
add
inc
fdivr
push
cmp
add
pushf
sub
or
call
test
push
imull
push
mov
or
bound
incl
inc
xor
mov
cmpl
mov
mov
xlat
out
push
test
push
call
sub
pushl
mov
sahf
leave
inc
add
sub
arpl
mov
mov
inc
lods
inc
decl
adc
mov
in
inc
pop
insb
data16
icebp
push
xor
orb
lds
xor
iret
movsl
xchg
pushf
pop
push
xor
add
xchg
mov
inc
mov
cmp
xor
xor
inc
gs
sub
test
xor
pop
dec
xorb
addr16
mov
data16
cmp
xchg
cmpsb
xor
mov
dec
inc
xchg
cmpsl
lock
faddl
add
out
xor
mov
xor
or
mov
out
incl
popa
sbb
rcrb
cmp
out
in
cmp
xchg
mov
call
jge
scas
into
add
insb
xor
shr
cmp
mov
xor
sbb
cmpsb
sub
sub
decl
mov
add
cmp
movsl
popa
xor
or
jg
xor
testl
lods
inc
cld
inc
popa
sti
mov
int3
push
mov
mov
dec
decl
add
fsub
jnp
xlat
decb
or
dec
and
mov
mov
incl
pop
idiv
jge
jne
int3
shrb
fdivs
pop
pop
call
pop
sti
call
xchg
aad
add
lret
push
mov
xlat
decb
pop
pop
add
popa
aad
add
mov
int
cltd
jbe
incl
add
ret
add
xor
int
pop
loop
jmp
mov
fdivl
inc
jne
add
ja
dec
adc
incl
push
shlb
ret
dec
cld
add
lods
in
add
xor
jne
aad
cmp
inc
mov
mov
adc
cmp
push
arpl
mov
mov
rorl
popl
sbb
push
fldt
ds
add
ss
pop
daa
push
inc
cs
das
dec
add
push
mov
lcall
pop
sub
leave
popa
xor
mov
rol
sub
push
xchg
dec
shr
inc
test
push
add
sub
xchg
sti
jno
adc
shr
inc
sbb
mov
jae
sub
add
xor
inc
jmp
repz
mov
dec
decl
push
lods
inc
repz
pushl
daa
push
je
popf
cmpb
xor
out
in
incl
bound
push
cltd
repz
pop
add
add
lods
out
mov
call
and
je
fnstsw
sub
sub
inc
jmp
jo
push
cmp
pop
subl
imul
aas
pop
shlb
cmp
adc
lret
mov
aaa
inc
cwtl
inc
out
or
push
cwtl
shll
inc
std
lcall
add
lods
add
psrlq
jne
shll
mov
roll
mov
leave
fcmovnu
idivl
rorl
sub
je
add
add
sbb
setne
inc
clc
or
add
push
repz
pop
add
jns
imul
clc
aaa
push
mov
xchg
sar
inc
xchg
inc
jne
xchg
ret
cmp
sub
add
adc
adc
or
movsl
push
lea
aad
std
int3
aas
ljmp
add
stos
popf
sbb
xor
inc
mov
sub
ljmp
mov
aas
ljmp
inc
stos
call
push
jns
push
push
jl
sub
lods
adc
add
add
rol
into
sub
sub
mov
sub
mov
jbe
cmpsb
mov
cmpsl
add
sub
cmp
mov
adc
and
aad
movsb
and
aas
push
sub
inc
pushf
insb
pusha
inc
sub
xorb
cs
leave
ss
sub
mov
xchg
xchg
das
add
push
sub
add
imul
popf
sub
mov
or
mov
pop
sub
mov
sub
jle
cmp
jbe
sub
pop
push
test
pop
sub
push
leave
adc
lcall
idivl
aaa
sub
sbb
cs
sub
push
cltd
adc
jle
sub
push
add
leave
das
testl
imull
cmp
and
out
pop
subb
pop
sub
sarl
call
call
cmpsl
mov
out
and
jge
idiv
cmpsl
out
or
pusha
pop
call
aaa
mov
out
repz
dec
in
call
ljmp
out
jne
add
add
dec
add
push
add
add
jle
imul
cmpsl
pushl
popf
inc
cld
mov
cmp
jl
add
pushl
cld
idiv
daa
jmp
cmp
jmp
daa
std
push
push
cmp
std
dec
mov
or
imul
je
add
add
not
xchg
jne
xchg
mov
leave
stc
mov
and
mov
add
xor
divl
cmp
aaa
pushl
cmp
add
inc
add
mov
xor
lea
dec
pop
mov
je
adc
add
cmp
add
movsb
dec
sub
xlat
xor
mov
cmp
les
sub
jbe
cmp
sarl
mov
out
inc
std
jno
cmpsb
jno
push
sahf
cmp
mov
mov
test
lea
mov
adc
sahf
scas
les
cmp
push
mov
lods
xor
jle
call
add
cmp
data16
cmp
push
pop
push
push
cmp
adc
cmp
cmp
add
cs
cmp
and
and
dec
andl
in
sbb
lods
mov
fwait
test
pop
xor
sahf
or
xchg
sti
and
std
xchg
xchg
mov
jmp
dec
sbb
push
shll
adc
xchg
dec
lahf
pop
inc
bound
inc
cmp
sub
movsb
xchg
add
and
lcall
or
decl
sti
pop
in
aaa
jmp
jmp
ljmp
por
movsl
fucomip
mov
out
pushl
ljmp
divl
mov
jbe
ljmp
jmp
call
pop
mov
testl
add
ljmp
fcomip
dec
test
cmp
ljmp
jne
jmp
jmp
push
fcomip
ljmp
clc
sub
push
add
push
aaa
or
sub
sub
add
dec
test
or
dec
scas
pop
or
popa
push
movsb
mov
inc
xor
sub
in
add
pop
and
int3
cmpb
mov
das
add
mov
scas
pop
cltd
cltd
jmp
sub
call
js
fnsave
das
pushl
mov
pcmpgtd
call
sub
or
lods
cmp
adc
add
cld
aaa
ss
lods
lods
call
xchg
mov
push
aad
push
and
and
xor
test
mov
jae
lds
sahf
aaa
popa
and
mov
outsl
xchg
mov
and
inc
and
sub
xor
inc
jbe
push
inc
jno
sub
aaa
data16
loopne
push
leave
cs
and
adc
call
add
push
fincstp
add
mov
ret
mov
mov
cld
push
xor
sbb
sub
icebp
sbb
mov
xor
idiv
cmpsb
pop
lods
mov
in
and
xor
mov
and
adc
fiaddl
addr16
shrb
fdivrl
sub
pop
aas
and
jge
inc
add
xor
add
jmp
std
jmp
ljmp
push
incl
roll
add
in
lcall
ljmp
and
mov
pusha
sbb
out
cmpsb
outsl
lock
push
ljmp
out
pop
jo
add
inc
jo
cmp
sbb
sbb
out
call
add
loope
pop
add
fldt
xor
jne
in
mov
test
call
fisttpl
mov
push
icebp
test
call
jg,pt
mov
push
xor
push
stos
sbb
or
lret
push
lgs
mov
add
add
xor
inc
data16
sti
leave
push
imul
pop
daa
stc
inc
xor
push
jmp
and
call
cltd
adc
pop
xchg
sarl
cld
pop
inc
popf
cwtl
pop
inc
ror
adc
and
les
dec
dec
pop
adc
pop
push
stos
or
cmpsl
add
test
push
xor
lods
call
pop
cltd
xor
or
cmp
out
mov
mov
push
xor
notl
add
xlat
test
sbb
cmpsb
xor
movsb
inc
xor
lods
inc
xor
leave
jno
mov
add
push
imul
push
jae
pop
cld
fdivr
ret
xor
call
shll
stos
and
add
cwtl
push
call
xchg
xor
call
sbb
sti
je
ss
mull
push
push
push
pop
jne
sbb
inc
lods
ja
hlt
sbb
pop
roll
cmpsl
sti
scas
mov
pushl
xor
add
loope
adc
pop
or
add
shrb
adc
test
sbb
add
testl
xchg
in
pop
dec
adc
jb
push
jb
lea
inc
mov
js
je
aas
pop
sti
call
and
jae
xor
add
sbb
sub
pushl
clc
sub
dec
mov
loop
push
cmp
sbb
test
add
jge
xor
inc
xor
xor
and
sbb
movsl
xor
xchg
push
ja
xor
outsb
int
jne
ret
int3
cmpsl
pop
fnstsw
dec
fnsave
pushl
cmc
add
add
inc
les
faddl
cmp
push
sbb
decl
xchg
add
push
je
test
add
in
add
mov
dec
mov
fnstcw
fisubrs
xor
inc
sbb
xchg
jno
jnp
ret
pop
sbb
or
jne
sbb
xor
jno
insl
mov
xchg
pushf
sbb
or
js
dec
xor
sub
sbb
jbe
and
xor
dec
xor
sbb
add
sbb
xor
cmp
jne
and
das
sbb
xor
sbb
or
negb
pop
xor
ss
add
dec
stos
add
shll
mov
test
push
xadd
in
sbb
jg
decl
xor
mov
jmp
sub
enter
addr16
add
or
sbb
cmp
cmp
sub
push
jb
xchg
les
enter
sub
pop
dec
dec
sbb
stos
ljmp
sub
xchg
mov
jne
aam
ds
scas
jbe
adc
aas
add
je
clc
ja
cmp
call
adc
pop
mov
dec
call
sub
add
sub
mov
mov
push
dec
add
mov
add
mov
call
std
mov
pop
ljmp
sbb
inc
sahf
adc
xor
jno
call
inc
dec
push
pusha
xchg
inc
xor
sar
pop
xor
push
add
jmp
sub
out
rcrb
jo
sar
inc
and
inc
jmp
into
sub
lcall
stc
out
xchg
lock
xchg
inc
jbe
sub
dec
ret
pop
in
sub
fsubl
sbb
and
shrl
jo
sub
pop
push
ret
cltd
cli
out
add
sub
cltd
call
add
xor
sub
or
or
pop
sub
sbb
mov
sub
arpl
pop
push
into
stc
push
in
add
xor
sahf
sub
mov
add
sbb
cmpsb
mov
call
xchg
adc
add
jo
xor
inc
in
pop
pop
add
adc
add
adc
add
adc
les
add
inc
pop
ss
push
mov
mov
call
push
sbb
jmp
xor
mov
sub
mov
pop
lcall
inc
pop
fiadds
pop
jmp
and
or
mov
pop
push
stos
sub
sub
pop
lcall
adc
jmp
das
testl
add
pop
popa
lock
pop
fdivrl
imul
push
addr16
inc
sar
cmp
sbb
jne
sbb
movsb
or
incl
cmc
adc
idiv
por
sbb
test
xlat
ljmp
incl
push
inc
dec
push
loope
decl
dec
jmp
add
fdivs
sbb
lods
fcomip
mov
ljmp
cmovno
jmp
mov
sarl
enter
add
add
test
pop
ljmp
dec
ljmp
lds
lds
sub
test
dec
notl
push
xchg
xor
jg
xor
add
xor
out
sub
xorl
sbb
dec
add
mov
add
xor
adc
into
movsb
sub
subl
scas
jne
mov
jne
lcall
lods
sub
mov
sbb
xchg
popf
jbe
sub
data16
sti
out
movsl
sub
push
xchg
dec
testl
aas
popf
ds
mov
adc
sub
add
adc
sti
push
sub
dec
push
push
adc
add
das
push
loope
imulb
xor
call
sbb
pop
sbb
mov
jle
sub
jnp
adc
sub
adc
sub
adc
xchg
jle
addr16
sub
mov
jbe
push
push
xchg
adc
add
pushf
call
and
adc
inc
or
sub
add
or
jmp
pop
leave
out
push
pop
adc
inc
xchg
adc
push
xlat
or
xor
adc
aam
call
and
cmp
add
inc
sub
jne
cmp
pushf
push
popf
inc
mov
xor
push
add
pop
adc
add
add
inc
jmp
mov
jne
sub
push
adc
dec
mov
push
add
pop
and
add
sbbl
push
bound
pushl
jb,pn
pop
cmp
add
push
lea
fsubrs
or
jl
cmp
push
add
lods
inc
cmp
sbb
lcall
xor
cmp
fcoms
jne
lock
incl
cmp
jne
cmp
mov
fwait
jmp
in
in
sbb
push
stos
sbb
jge
out
mov
decl
xor
adc
inc
xor
les
lock
and
les
inc
es
cmp
lcall
xor
add
enter
add
adc
std
stos
and
or
out
mov
out
inc
out
add
xor
add
out
aaa
xor
ss
add
push
add
xor
rorl
dec
and
sti
cltd
mov
inc
je
xchg
insb
add
adc
fwait
lret
cmp
sbb
dec
and
add
lods
pop
ss
pop
mov
and
adc
aad
movhps
hlt
adc
fwait
dec
push
jmp
and
pcmpeqb
inc
mov
popf
arpl
out
cltd
ja
jmp
roll
and
mov
sbb
mov
and
cltd
xchg
sub
movlps
mov
ret
push
xor
pop
xchg
sub
add
jbe
cwtl
out
adc
xchg
cmp
add
sbb
and
mov
jp
shll
out
push
push
ud0
jns
cltd
push
and
push
add
pop
add
out
pcmpeqw
or
test
push
clc
idivb
add
scas
shr
mov
ltr
cmp
jmp
xor
mov
call
ljmp
fbstp
pushl
cmp
mov
sub
ljmp
ljmp
pushl
pushl
dec
stos
push
call
aas
imul
aas
xor
jne
cmp
mov
sub
incl
add
lods
push
call
ljmp
pushl
pushl
cmp
lcall
push
cs
fbstp
mov
xor
call
xor
and
mov
jle
aas
divl
sub
int3
jle
lcall
push
popf
push
data16
pop
aas
cmp
dec
pop
lock
and
movsb
out
and
add
and
push
and
sbb
incl
push
enter
and
testb
jmp
ret
inc
or
dec
in
mov
pop
push
push
add
cmp
sub
insb
stos
nop
push
add
pop
adc
ljmp
test
mov
jae
push
jmp
xorl
sub
xchg
add
in
push
dec
mov
pop
jmp
dec
cmp
jp
and
mov
xlat
jae
test
mov
adc
loope
xchg
add
or
lods
add
add
cld
xorb
sub
mov
push
or
test
dec
icebp
lahf
sahf
add
push
fs
add
inc
jmp
dec
mov
fmuls
or
call
mov
lret
mov
cmp
dec
pop
mov
or
push
orl
es
push
push
bound
ret
or
cmpsl
adc
lds
jmp
push
pushl
jne
or
dec
in
add
aam
sub
hlt
std
jne
aaa
xchg
pushf
out
push
lcall
pushl
mov
int3
xchg
cmpsl
sub
and
stos
or
lret
out
mov
adc
push
mov
lcall
or
or
lret
mov
stos
or
fstpl
mov
sbb
jg
dec
dec
sbb
push
addl
ret
pop
mov
add
jge
adc
mov
cmpl
jne
es
pop
push
and
inc
sti
mov
jle
pop
mov
adc
add
repz
enter
mov
out
loopne
jle
adc
out
or
or
jno
mov
incl
add
ss
jne
jp
mov
rolb
xchg
sbb
ret
mov
in
mov
push
mov
dec
xor
adc
mov
jle
sbb
mov
into
sbb
lcall
out
and
sbb
mov
sub
lcall
add
hlt
iret
aas
hlt
outsb
or
adc
adc
adc
push
fstl
xchg
xchg
stos
and
or
xchg
mov
sbb
arpl
fwait
adc
jmp
xchg
push
into
jmp
xor
cli
push
jp
je
iret
dec
rcrl
cwtl
call
lahf
and
xor
pushl
push
outsl
out
dec
pop
out
jp
xor
cmpsl
cmp
xchg
lahf
clc
push
push
je
addl
cmp
and
imul
mov
push
pop
cmpsl
pop
push
cwtl
pop
out
addl
sub
inc
pop
mov
fstpt
xor
mov
adcl
add
jp
add
sbb
jne
ret
out
add
subb
sub
ret
lret
enter
in
mov
lock
mov
or
gs
add
movsb
push
call
add
pop
add
popf
inc
hlt
sbb
jne
out
movsb
push
call
rcl
cli
lea
push
pushl
cmp
inc
lock
outsl
mov
pushl
add
decb
mov
das
mov
jl
push
xchg
testl
mov
or
mov
stos
mov
or
pop
jb
cmpl
jb
into
fxsave
call
sahf
inc
hlt
sbb
sub
cld
or
jne
xchg
pop
std
jbe
sbb
xchg
lcall
mov
add
test
sbb
xchg
pop
pop
je
jp,pt
or
movsb
jmp
jne
push
fwait
cld
push
sbb
adc
nop
ss
mov
push
add
icebp
sbb
outsb
lds
sbb
ss
int3
outsl
add
inc
and
aad
pop
or
into
cs
je
scas
add
cmp
scas
sbb
add
add
mov
jbe
sbb
mov
add
outsb
sbb
mov
inc
sbb
nop
and
fistps
inc
outsb
call
inc
hlt
cmpsl
cmp
call
bound
adc
lods
ficoms
jmp
es
call
add
sub
roll
stc
sbb
mov
cmp
or
add
sub
mov
xor
rclb
or
jae
hlt
ds
js
xor
out
push
cs
out
call
push
adc
icebp
mov
add
das
inc
xchg
addr16
jne
sbb
or
jge
jmp
mov
add
or
mov
xchg
aaa
add
call
lea
add
enter
in
pop
add
fadds
lock
push
aad
push
and
aad
push
out
adc
pop
adc
loope
sub
andl
jl
mov
add
xchg
jl
dec
xchg
pop
lcall
pushl
cs
jne
popa
pop
jne
add
pop
pop
jne
inc
xchg
or
adc
push
xor
incl
and
push
adc
jmp
mov
ljmp
jo
repnz
jmp
jne
shrl
mov
test
scas
inc
or
mov
jmp
jne
roll
jne
mov
les
jg
jg
add
outsl
lcall
xor
mov
mov
push
push
dec
adc
or
insl
push
mov
repz
adc
mov
aad
add
xchg
sub
and
adc
mov
push
fs
faddp
add
mov
cwtl
ficoms
jne
mov
in
inc
sbb
mov
adc
add
bound
adc
mov
cs
lods
jae
add
jle
adc
or
bound
xchg
pop
push
add
pop
popl
push
data16
call
fs
push
dec
mov
jo
repz
mov
adc
push
stos
pop
in
mov
push
sub
je
sbb
xchg
incb
add
inc
icebp
mov
jecxz
out
xchg
jl
xor
push
into
mov
pushl
scas
cld
mov
xchg
inc
mov
je
pop
scas
stc
sahf
and
mov
push
xor
add
mov
loopne
std
jne
daa
jne
iret
lea
call
lret
movsl
testb
or
add
push
or
add
lea
push
call
andl
sti
or
add
lds
call
cmp
adc
add
xchg
jl
test
lea
add
or
push
adc
gs
cmp
and
lea
push
jmp
and
lea
xor
outsb
daa
cld
out
xchg
adc
test
adc
in
test
sbb
dec
jne
mov
push
addl
push
pop
sti
es
jge
or
out
xor
add
xchg
push
out
cmpsl
test
je
xchg
repz
adc
and
xor
std
mov
or
incl
stos
dec
jmp
or
add
pop
dec
adc
mov
stos
xchg
sub
jmp
cwtl
sub
sbb
std
lea
push
rcrb
push
std
sti
pop
dec
xchg
sbb
adc
xchg
mov
cld
dec
adc
cmp
dec
movsb
cld
sub
push
movsb
cld
sbb
add
loop
ss
std
adc
cld
jno
ficomps
inc
cmp
jle
nop
lods
adc
add
mov
push
shll
loop
adc
std
je
sub
lea
cmp
loope
xchg
cmpl
cld
push
xchg
cld
je
and
pop
and
decb
pop
jmp
imul
test
sti
jmp
add
out
ud2
sub
adc
adc
orl
lds
sub
sub
lods
xchg
into
inc
out
or
add
jne
jo
cwtl
call
jle
mov
push
push
add
aad
sar
and
call
lds
push
std
dec
call
push
dec
dec
pop
mov
fcoms
test
or
add
inc
sbb
adc
pop
add
inc
sub
sahf
test
push
call
or
mov
add
push
add
xlat
or
mov
out
rep
jmp
in
add
in
or
sahf
xchg
fwait
lcall
sbb
add
leave
mov
jmp
daa
add
fsubr
sbb
cmpsb
orl
jg,pt
sub
mov
es
dec
push
mov
ud0
add
push
push
ret
mov
jnp
mov
cwtl
repnz
pushf
pop
push
fisubs
dec
xor
stc
mov
sbb
sbb
mov
cmp
add
fs
push
xchg
rclb
stc
movsl
subb
pop
movsl
cli
lea
dec
addr16
xor
jbe
inc
stc
xor
stc
gs
outsb
jmp
or
ret
cmp
pop
jmp
inc
sar
push
testb
add
adc
enter
xchg
xor
add
cld
xor
jmp
xor
je
sbb
fidivrs
test
outsl
adc
jmp
cmp
dec
shr
scas
decb
dec
sahf
push
mov
in
xor
cli
jle
or
aad
data16
add
xor
out
xchg
call
daa
idiv
insb
add
repz
lods
sub
sbb
xchg
xor
je
pop
sar
push
sub
inc
add
ret
mov
sar
out
lods
call
push
jne
jecxz
mov
or
pop
ljmp
cltd
sub
pushl
sbb
mov
or
ljmp
sbb
xchg
mov
or
cmp
pushl
pushl
cld
mov
cmp
adc
mov
or
ljmp
push
call
jo
xchg
decl
test
dec
or
push
dec
pop
mov
call
lods
sub
test
inc
aaa
dec
mov
in
add
in
or
cmpsb
aam
xchg
sahf
lds
sub
scas
mov
mov
incl
add
inc
je
cmp
sbb
enter
push
sbbl
dec
lret
or
gs
cs
jge
and
repz
push
ss
pop
sbb
shl
jl
icebp
sbb
adc
ret
sbb
fwait
push
cmp
fdivl
add
movsl
cmc
in
incb
add
std
mov
push
sbb
nop
ss
cmpsl
pop
xchg
cmc
rolb
mov
insl
sbb
icebp
adc
cmp
or
rol
in
in
jo
cmc
loope
fstpl
sbb
hlt
sti
sti
push
mov
cmp
cs
rolb
fwait
adc
movsl
pop
push
jmp
sbbl
push
or
or
sub
jne
add
cmp
rclb
push
add
xchg
clc
sub
cwtl
pop
sub
pop
cmp
je
dec
or
in
pop
mov
mov
jmp
cmp
mov
pushl
loop
jmp
call
xor
dec
hlt
jbe
adc
add
jle
insb
add
out
dec
fs
call
incl
int
pushl
adc
mov
pop
add
sarb
add
push
call
test
rorb
cmpsl
push
call
and
testl
cmpsb
cmp
sbb
mov
add
inc
mov
jmp
jno
test
add
adc
pop
out
mov
sbb
jne
seta
je
pushl
push
cmp
push
bound
mov
xor
incl
test
incb
or
movsb
or
jmp
add
nop
fimuls
or
adc
jne
add
bound
std
cmp
and
jnp
call
hlt
enter
add
and
std
stc
mov
xor
cmp
add
mov
add
lret
cld
cwtl
fdivr
cwtl
pushl
jg
divl
xorl
xchg
adc
cli
push
jmp
mov
pop
out
inc
jb
mov
adc
fdivp
mov
pop
add
into
fwait
imul
std
sbb
test
push
dec
adc
add
icebp
fstl
xchg
icebp
pop
sbbb
int3
push
jle
sarb
icebp
lods
cli
scas
push
nop
push
pop
icebp
xchg
push
dec
jmp
pop
push
inc
sbb
add
xor
mov
jmp
aaa
icebp
fcompl
stc
xchg
xchg
aaa
icebp
addr16
add
add
jmp
aaa
icebp
pushf
ljmp
jmp
mov
inc
jmp
xor
jl
clc
addr16
sbb
fsubrp
push
sub
mov
icebp
jl
jmp
or
cmpsb
sbb
mov
icebp
cmpsb
mul
negb
sub
and
sti
lock
add
call
leave
push
mov
mov
imul
cltd
mov
outsl
imul
adc
out
jle
jle
cltd
adc
int3
sar
inc
jmp
inc
je
ljmp
fdivrl
add
fildll
sub
or
cwtl
dec
sar
mov
add
push
jmp
dec
cmp
mov
mov
pop
decb
sar
addr16
add
mov
lea
pop
and
outsb
mov
ss
out
push
add
clc
cmp
incl
stc
sbb
mov
mov
addr16
lock
push
push
xchg
out
cmp
add
lahf
test
incb
jne
adc
add
ja
stos
cmp
add
cld
mov
sbb
ljmp
jbe
js
or
fsubl
xorb
add
sbb
jne
aad
mov
cmpsb
cmc
out
adc
push
push
lea
xchg
cld
jno
ss
add
cs
add
push
inc
int
in
dec
int
sbb
pop
stos
add
inc
xor
add
add
cmp
fs
aaa
jbe
jmp
cld
xor
push
loope
adc
dec
xchg
mov
or
adc
sahf
addr16
jmp
dec
jmp
inc
xor
lock
cltd
sahf
in
pushl
xor
cmpsb
cmp
sub
aam
xor
pop
adc
cmc
adc
push
or
jne
add
xor
or
insb
adc
adc
daa
pop
push
je
call
sbb
inc
jmp
repnz
and
sbb
adc
jo
add
adc
fsubrl
cs
jmp
cmc
adc
jmp
cmc
cwtl
ret
rolb
jmp
repnz
add
pushl
cmpsl
add
sbb
add
adc
push
add
pop
xor
inc
pop
adc
add
push
mov
inc
or
fdivs
mov
add
adc
sub
leave
ret
cmpb
arpl
and
aas
inc
fcoms
jne
add
pop
leave
or
add
push
inc
or
dec
repnz
sbb
andl
shr
adc
or
add
xor
push
add
mov
sbb
jbe
push
mov
adc
test
push
push
pop
leave
jae
add
push
jne
ds
add
inc
icebp
inc
inc
xor
cvtpi2ps
imul
push
insl
add
cmp
inc
inc
xor
or
cmp
repnz
dec
icebp
add
inc
or
ljmp
inc
inc
lock
adc
add
pop
or
jge
nop
cmc
jecxz
lcall
xchg
lods
or
adc
jns
ljmp
jb
jmp
stos
or
inc
jb
aaa
pusha
in
movsl
sbb
sbb
sub
add
shl
push
push
pusha
in
incb
sub
shl
mov
jo
mov
sub
xor
lock
adc
pop
sbb
add
pop
in
lock
cmp
jmp
jae
insl
rorl
jmp
or
lods
xor
loop
pusha
add
jo
add
sub
fiaddl
mov
ljmp
pop
push
add
or
inc
jmp
xchg
jle
push
shl
mov
inc
gs
in
sldt
push
insb
adc
and
test
jle
fs
dec
ret
fbstp
out
adc
xchg
into
jmp
add
add
add
sbb
jmp
sub
or
add
jno
add
mov
add
add
and
out
or
adc
subl
add
dec
xchg
add
nop
and
sbb
mov
inc
push
mov
mov
pusha
jmp
call
ljmp
inc
lock
add
pop
dec
in
add
adc
or
aas
inc
fcoms
jne
xor
ljmp
in
inc
add
xor
jne
mov
pop
add
loop
jae
inc
or
or
or
inc
inc
xor
pop
add
bnd
add
ljmp
fldl
xor
pop
add
xchg
sbb
cmp
pop
add
lods
push
jno
add
test
jns
std
add
icebp
lahf
insb
lea
push
add
ss
leave
adc
jbe
inc
add
out
mov
jae
movsl
inc
xchg
add
out
sti
xchg
pusha
fstl
fdivr
xchg
add
pop
push
pop
adc
ljmp
outsb
sti
dec
out
in
inc
pusha
loope
in
sti
aaa
pusha
jns
movsl
sbb
dec
scas
in
sti
movsl
clc
insl
jno
add
cld
and
jno
std
movsb
jmp
dec
jno
std
lods
out
in
jno
cld
push
lods
out
inc
ret
out
es
push
and
ret
in
jle
push
stos
fadd
fnstenv
aas
mov
and
lcall
call
loop
popa
sbb
ja
jmp
mov
or
jecxz
push
jmp
add
stc
mov
xor
mov
sbb
add
aam
in
fcmovnb
stc
xor
je
or
or
pushf
adc
or
add
popf
adc
jne
clc
imul
sbb
jne
clc
aas
aaa
ljmp
mov
pushl
ljmp
add
addr16
rorb
lret
add
mov
jle
pop
sbb
jo
call
je
push
mov
pop
add
dec
pushl
jo
aas
dec
sbb
pop
inc
sbb
push
xchg
jae
push
xor
pop
xor
pop
pop
cmp
outsl
or
xor
test
add
and
or
mov
xor
add
cmp
mov
in
add
movsl
sahf
ret
ljmp
add
mov
add
insl
cmp
es
add
in
dec
call
test
enter
add
add
divl
test
sarb
push
add
in
mov
add
xchg
add
xor
test
rcr
add
out
pop
inc
add
pushf
adc
add
adc
rcr
stos
jmp
adc
add
mov
add
xchg
mov
xor
mov
pop
jmp
add
adc
jns
pop
push
pop
test
mov
in
jmp
add
adc
outsl
xor
sbb
jmp
lods
jae
add
lea
shlb
or
inc
dec
adc
xor
in
mov
xor
scas
jo
call
cli
loope
jmp
sub
pop
mov
es
call
out
stc
adc
mov
loop
xor
cmpsb
mov
push
mulb
std
sub
or
sub
adc
push
add
xor
push
add
cmp
jae
aad
inc
sub
adc
add
push
inc
add
ljmp
or
shlb
inc
fsts
aad
adc
push
lock
fsubr
jae
xorb
enter
sub
add
push
add
inc
push
call
adc
or
incl
add
adc
push
lahf
jo
call
add
mov
lea
sbb
push
outsl
jo
call
shll
mov
jae
xchg
jnp
dec
jo
push
out
mov
sbb
outsl
rclb
or
jne
cmc
incb
shll
lods
inc
cmc
fs
je
inc
es
push
cmc
je
add
push
cmp
stc
add
hlt
je
adc
cmc
je
add
repz
adc
out
mov
in
add
mov
add
xor
call
mov
inc
add
enter
add
cmp
outsb
xlat
and
xor
add
push
jg
add
or
xlat
and
xor
add
push
push
hlt
ljmp
hlt
loopne
add
daa
cltd
test
iret
fisubrs
jge
ficomps
jge
ficomps
mov
fdivrp
ljmp
sub
xor
loopne
xlat
xchg
bnd
lods
mov
fsubrp
add
addr16
mov
add
add
in
hlt
call
sbb
pop
js
fisttps
test
push
push
add
or
jb
fdivrp
xorb
xchg
adc
push
in
jmp
loop
mov
incb
push
add
xor
cltd
ljmp
sub
fdivrp
mov
mov
adc
jo
cltd
std
testb
add
add
mov
rcr
fdivp
jmp
adc
jmp
dec
adc
lea
xor
push
jo
push
add
mov
add
adc
jmp
pop
sub
mov
or
fisttpll
jmp
decl
loop
or
pop
punpckhbw
inc
add
pop
adc
lahf
pop
jmp
fildll
add
pop
pop
adc
rcrl
incl
loop
push
fs
push
call
test
pushl
jecxz
or
fs
xor
mov
jmp
repz
jnp
jge
lock
sbb
inc
xor
mov
xor
sub
add
sub
sbb
xor
adc
arpl
jb
mov
cmp
dec
add
flds
jnp
out
out
je
push
ja
sbbl
in
inc
push
cmp
jge
lock
cltd
mov
in
add
mov
out
xor
test
xor
pop
ja
out
sub
sub
mov
rclb
fldcw
inc
xor
jae
cmp
movsl
adc
add
jo
mov
push
pop
push
add
ds
pusha
loope
loopne
in
cld
jmp
sub
fistl
inc
lock
mov
cwtl
fistl
fistpl
push
scas
pusha
loope
jb
or
lock
mov
mov
push
jecxz
mov
sbb
shrl
inc
add
mov
fsin
into
add
dec
lahf
mov
out
in
add
dec
bnd
inc
fxch
stos
inc
adc
bound
popa
adc
or
ret
je
fcmovne
stos
xor
pop
xchg
je
or
dec
into
push
sarb
mov
into
fimull
sub
maxps
jae
add
sub
call
add
add
mov
inc
cwtl
ljmp
mov
jae
jo
test
outsl
pop
inc
hlt
add
jae
jo
test
pop
inc
clc
and
add
cmp
adc
adc
std
mov
std
jne
mov
or
fists
pushl
cmp
pushl
add
cmp
flds
int
jle
xor
std
cmpl
sub
cmp
ljmp
cld
repnz
ds
fdivrl
add
repnz
out
xor
jmp
mov
cmp
push
jle
ss
xor
jg
xor
xor
je
add
xchg
jmp
mov
inc
sti
jg
push
ja
out
jmp
inc
sub
js
mov
add
fists
ja
popa
push
ja
leave
cs
mov
adc
mov
sbb
adc
or
mov
xlat
std
out
inc
aam
in
jg
in
icebp
les
cld
mov
fsubrp
xlat
pop
clc
push
or
cmp
push
adc
cmp
add
push
aaa
xlat
sbb
push
in
in
daa
xlat
sbb
popa
fucomp
popf
or
jno
xlat
jge
clc
shl
add
xor
gs
xlat
rcll
fldcw
xor
sub
push
pop
jns
test
pusha
add
int
or
jne
es
inc
call
loop
bound
jo
jmp
jecxz
out
testb
sub
je
add
aad
loopne
dec
into
loopne
call
rcr
xchg
mov
pop
call
cmpsb
or
outsb
add
xor
push
scas
jo
fmull
and
je
ficompl
rcl
int
pop
xor
push
hlt
add
add
loop
push
repnz
push
push
hlt
push
add
push
arpl
mov
mov
or
or
jmp
mov
ljmp
push
ljmp
xchg
xchg
ljmp
std
mov
jae
jo
call
jmp
jg
jmp
std
jne
mov
pushl
mov
mov
add
je
ret
cmp
pop
and
xchg
cli
out
xchg
jmp
sub
sub
jmp
add
push
jmp
add
add
xor
pop
loope
lods
add
movsl
inc
add
mov
sub
sub
fdiv
fisubl
push
aad
add
subl
xor
jo,pt
pop
add
mov
movsb
mov
mov
mov
ljmp
mov
jmp
shll
mov
stos
shlb
rolb
pop
adc
push
mov
push
cs
dec
mov
loope
and
and
push
jmp
jmp
and
cs
adc
sub
rcll
push
lock
add
push
mov
lods
sub
sub
adc
add
cmp
jmp
add
cmp
sub
adc
inc
push
jmp
sub
push
add
sbb
pop
xlat
sar
rcl
inc
jmp
xor
jae
push
cs
sbb
aas
sar
insb
pop
lret
mov
mov
add
adc
push
pop
sar
je
mov
enter
push
jb
xchg
ret
aad
sar
inc
sub
sbb
test
sar
jo
iret
in
sub
inc
jmp
test
rorl
xor
add
ljmp
inc
dec
push
add
push
inc
add
lds
sub
add
cmc
int
imul
push
inc
add
aas
inc
enter
fsts
cmp
int
dec
cmp
sar
das
push
add
cmc
mov
xchg
jge
mov
push
mov
hlt
jle
std
push
imul
add
mov
lds
or
xor
mov
add
add
xor
pop
pop
jno
add
jnp
add
es
xor
sub
jl
cmp
mov
jnp
add
cmpsl
inc
inc
xor
pop
add
mov
fcmovb
test
out
mov
jecxz
jbe
ficoml
mov
in
sub
idivb
mov
mov
shl
xchg
in
add
xor
jmp
cmpsb
in
pop
popf
mov
xor
add
mov
jge
mov
call
push
xor
jno
push
jmp
add
or
sbb
push
jmp
inc
lods
iret
sub
add
cmp
and
xor
in
sbb
inc
jne
cmc
jbe
add
sarl
aad
cmp
shll
adc
dec
xchg
ljmp
iret
je
cli
cld
jnp
or
adc
jbe
push
add
jle
inc
jmp
jae
call
repnz
sbb
xchg
cmpsl
test
dec
sbb
outsb
xchg
int
inc
fsts
add
or
xchg
push
add
xchg
pop
sub
repz
inc
mov
bnd
sbb
lea
cmpsl
sub
adc
clc
sbb
xor
push
incl
ja
jae
ja
or
loop
call
add
pop
popf
ljmp
sbb
mov
or
xchg
insl
incl
mov
or
add
cld
rorb
enter
lock
ds
fadds
pushl
mov
out
out
std
mov
sahf
cmp
pop
add
mov
ds
mov
call
or
insb
pop
push
xor
push
push
xor
jecxz
sub
mov
ss
std
lods
xchg
ljmp
fiadds
add
cmpsb
loope
add
loop
cmc
dec
pop
or
and
out
inc
leave
repz
xchg
int
cmp
shrl
stc
cmp
loop
hlt
push
mov
adc
stos
mov
sub
mov
inc
push
out
and
mov
cmp
shll
push
add
mov
ja
sub
int3
push
or
addr16
aaa
mov
roll
xchg
out
add
pop
loope
int3
xchg
aam
out
mov
inc
icebp
jmp
dec
jbe
xchg
xor
mov
xchg
and
pop
adc
das
movb
cmp
inc
loope
push
cmp
imul
jmp
orl
add
mov
loope
cmp
add
incl
and
je
dec
mov
ficoms
or
push
lret
push
lret
dec
dec
jp
adc
shr
popa
mov
sub
sbb
int
lret
pusha
ja
addr16
adc
clc
inc
sub
mov
je
sarl
or
add
incl
aam
jmp
outsb
into
imul
sub
lods
data16
jmp
mov
inc
add
pop
inc
inc
pop
mov
or
cmpsb
lahf
decl
add
jg
inc
sbb
push
outsl
insb
or
xchg
outsl
std
fildll
jmp
call
leave
ficompl
push
xchg
les
adc
add
pop
cld
push
pop
imul
enter
dec
push
sbb
sbb
mov
cmp
push
outsl
imul
jmp
push
inc
ja
add
pop
in
pop
out
mov
add
pop
add
cmp
in
push
dec
dec
pusha
adc
mov
pusha
clc
jecxz
mov
mov
imul
xor
push
push
adc
add
rorl
fldlg2
dec
add
je
rdtsc
mov
cmp
ljmp
mov
add
xchg
cmp
push
or
adc
xchg
fwait
idivl
stc
fdivrp
sub
popa
jmp
add
jmp
push
sub
pop
cld
push
sub
pop
adc
sbb
xor
movsl
sbb
pop
push
enter
sbb
cmovb
in
push
dec
xchg
fucomp
shl
add
xor
jns
out
sti
sti
lods
xchg
call
faddl
push
mov
inc
sub
xchg
mov
cmpsb
inc
add
add
mov
ljmp
je
add
xor
push
cmp
and
jmp
add
es
mov
out
pop
add
xor
test
popa
jmp
adc
scas
mov
repnz
xor
test
xor
jb
sub
sti
mov
xchg
cltd
test
scas
out
add
cmc
lds
addr16
aam
je
dec
adc
aam
lds
fcoml
std
add
adc
lcall
adc
or
adc
out
cmp
mov
lea
or
test
fmull
test
lcall
adc
mov
or
std
push
add
mov
xchg
mov
aam
jmp
mov
add
sti
inc
jmp
add
dec
rorb
add
sarl
lock
add
dec
xor
test
scas
jle
xor
xlat
ss
fsin
pushf
aad
dec
ds
add
or
fwait
mov
insb
add
xor
and
inc
inc
xor
ret
sahf
dec
adc
pop
mov
mov
dec
faddp
repnz
pushf
sahf
aad
into
adc
vminps
test
pop
fidivl
adc
clc
cmpsl
ds
in
cmp
xchg
les
add
and
nop
add
rclb
outsl
les
out
std
ljmp
aam
in
aam
jb
xor
mulb
adc
dec
xor
adc
dec
cmp
aam
xor
pop
pop
add
adc
mov
popa
idivb
pop
test
jbe
jl
sbb
xchg
jl
sub
aam
faddl
add
ret
mov
mov
mov
cld
ss
ss
push
dec
add
lods
fiaddl
push
idivb
aaa
test
adc
idivb
fwait
sub
sub
push
bound
ret
loope
ret
lods
push
test
or
sbb
add
sub
test
xor
bound
add
std
add
inc
sti
pop
fmull
push
pop
decl
push
pop
xchg
idiv
pop
fdivr
push
mov
std
add
clc
mov
pop
push
adc
movsl
sbb
movsl
push
call
adcl
std
lea
jmp
pop
ljmp
pop
ljmp
or
push
mov
add
xchg
ret
jmp
or
ljmp
push
and
push
xor
sbb
je
add
xor
inc
inc
repnz
lea
push
std
sahf
add
push
and
stos
jb
push
dec
cltd
sti
jg
xlat
jbe
push
jmp
mov
call
add
mov
repz
push
js
pop
adc
inc
jo
aas
loop
mov
ljmp
add
leave
repz
stos
add
xor
adc
or
inc
in
xor
add
mov
sbb
into
inc
fucomp
push
xchg
gs
or
outsl
dec
sub
adc
add
and
add
mov
or
repnz
or
or
stos
inc
xor
adc
xor
mov
inc
jae
dec
mov
aas
mov
mov
xchg
lock
mov
xor
jb
lea
adc
push
or
adc
mov
add
mov
add
stc
inc
test
mov
add
cmp
dec
cmp
push
insl
or
jmp
out
fldl
xchg
call
mov
dec
jmp
insl
adc
je
lods
pop
mov
dec
mov
pop
les
xor
or
in
inc
add
adc
mov
jb
push
add
jb
lea
add
test
mov
sub
sbb
rcr
cmpl
je
pop
data16
mov
pusha
movl
nop
out
mov
fstl
push
call
push
dec
mov
add
dec
enter
pushl
dec
shr
in
push
pushl
in
mov
fstpt
lea
add
pop
inc
add
push
or
push
loopne
jo
fidivrl
icebp
mov
mov
fs
adc
sar
subl
call
stos
test
add
jo
pushl
add
xor
add
xor
dec
int3
xor
lret
dec
dec
int3
add
loope
dec
rolb
xchg
add
fsubl
rcll
ret
std
sub
xor
add
add
notl
push
lock
jmp
enter
fiadds
imul
push
mov
mov
testb
gs
xchg
fistpll
cmp
adc
push
jmp
inc
inc
fldt
dec
jmp
popa
cmp
mov
xchg
iret
mov
mov
in
add
mov
jb
mov
inc
xor
icebp
outsl
push
mov
adc
call
push
inc
jmp
pop
push
subl
inc
repz
cwtl
sub
insl
hlt
mov
xchg
xlat
jae
add
mov
call
cmp
cmp
jmp
xor
sub
mov
inc
popa
sub
push
cld
mov
cld
adc
out
push
add
xchg
rcr
cmp
and
adc
push
mov
lcall
mov
jne
fiadds
mov
in
sbb
les
pop
fs
dec
adc
xlat
push
adc
sar
mov
push
pop
push
in
adc
push
lea
push
push
and
push
dec
push
loopne
xor
lea
pop
call
xchg
jb
or
add
jmp
add
arpl
inc
mov
jae
dec
pop
or
test
sti
clc
add
push
adc
je
and
inc
xor
add
cs
clc
xor
andb
test
stc
iret
and
push
inc
xor
mov
mov
stos
pop
das
out
cld
out
sbb
test
iret
jg
mov
stos
push
sub
inc
inc
xor
mov
in
iret
test
sub
insb
inc
add
add
out
inc
inc
xor
jge
ljmp
xor
push
pop
push
test
xor
in
mov
rol
mulb
and
lcall
lods
testb
lods
fmulp
test
lret
mov
cli
into
gs
sbb
dec
mov
xlat
mov
jle
add
mov
loope
bound
into
jns
in
cld
mov
ret
mov
add
jmp
call
push
adc
dec
aam
mov
lret
shl
jecxz
jb
or
imul
or
or
inc
mov
jecxz
mov
jmp
jmp
add
or
icebp
mov
inc
imul
aam
cs
int
icebp
xor
das
sti
lret
ss
inc
fldt
call
or
insl
pop
pop
add
jp
or
iret
test
or
add
repz
mov
xor
dec
clc
mov
roll
pop
adc
add
push
or
add
mov
add
inc
lock
pop
add
pop
add
fnsave
mov
hlt
fcomps
mov
or
ja
mov
cmp
or
out
jecxz
jecxz
mov
cmp
jge
out
xor
add
stos
add
xor
pop
js
cli
decl
daa
pop
xlat
repz
add
js
jmp
lock
int
add
push
decl
inc
cld
fldcw
jno
movsl
js
sub
xor
lret
fistps
push
stos
add
test
call
add
flds
jmp
inc
inc
in
dec
stos
and
xor
jl
fldenv
add
xor
lret
mov
adc
add
sbb
push
jmp
jnp
adc
xchg
ds
and
inc
lock
push
imul
repz
and
iret
dec
sub
clc
aaa
aas
fstps
push
sub
aas
test
add
and
inc
jb
jmp
inc
insl
adc
xchg
pop
cmpsb
push
xor
add
xchg
push
leave
stos
fdivrs
xor
mov
push
sub
push
mov
and
add
xor
and
add
inc
pushl
cmc
dec
loopne
xor
or
inc
ljmp
jnp
mov
mov
xor
dec
push
add
les
ficomps
add
sub
ss
sub
xor
mov
and
cmp
adc
mov
ret
cmp
cmpl
inc
rorb
mov
jmp
cmovno
add
inc
int3
sbb
add
mov
mov
cmpl
je
fistpl
add
mov
inc
add
adc
jne
rorb
aas
fmull
rorb
add
pop
cmpl
je
repnz
push
jmp
call
add
jb
mov
add
mov
jbe
sbb
dec
pop
in
cmp
fcmove
dec
xor
cmp
je
xchg
les
enter
dec
or
popa
dec
les
add
movsl
fidivrl
in
je
stc
dec
or
push
call
inc
int3
xor
je
es
ss
je
adc
insl
es
lds
out
insb
push
jecxz
je
les
je
rorl
out
add
fstl
push
popa
mov
pop
movsb
sbbb
cmp
add
jge
cmp
mov
sbb
mov
sbb
mov
std
iret
push
inc
add
inc
or
mov
ffree
adc
loope
sbb
sbb
mov
mov
mov
mov
mov
test
fnsave
push
daa
in
inc
incl
dec
inc
xor
ret
add
daa
xchg
fdivl
lods
call
add
add
sub
lahf
inc
jne
lahf
test
mov
sbb
clc
add
add
jb
add
jmp
xor
jae
outsl
pusha
mov
fsts
dec
mov
outsl
fwait
test
outsl
mov
adc
inc
push
add
cmpsb
pop
lock
mov
inc
sub
scas
ds
sub
sub
fscale
mov
xchg
mov
add
cmpb
jne
push
das
jmp
mov
std
xor
jmp
aaa
fnstcw
mov
std
pushl
lods
lds
lock
add
mov
std
pushl
lahf
ljmp
add
loopne
call
pop
or
nop
xlat
std
fistl
je
fnstenv
call
pop
sahf
ljmp
fscale
pushl
nop
push
faddp
je
imulb
mov
insl
ret
fldenv
fidivs
clc
enter
into
test
fsqrt
inc
add
rolb
or
mov
imul
add
les
repz
incl
ret
in
ret
je
push
push
insb
pop
cmc
mov
mov
mov
add
imul
sub
js
and
adc
add
out
and
add
sub
jnp
sub
mov
loop
bound
cmpsb
ret
add
data16
add
outsb
add
mov
cmpl
cmpsl
mov
call
test
lods
pop
jb
adc
cmp
jge
lods
sub
or
inc
jb
mov
adc
push
adc
adc
lret
call
bound
xorl
stc
roll
add
rorb
jmp
xor
add
mov
pushl
lods
je
mov
addr16
repz
cli
loopne
pop
or
sub
inc
jno
jnp
jmp
loope
bound
daa
adc
mov
sbb
fcomip
mov
mov
fisubrl
scas
push
inc
je
rorl
add
fwait
inc
adc
xchg
stc
or
xchg
add
ret
adcl
inc
aam
leave
lret
push
andl
aaa
jae
sbb
cmp
in
add
adc
aam
je
push
add
das
sti
incl
clc
lea
dec
call
pavgw
pushl
pushl
aad
or
incw
add
sbb
ds
lcall
jae
pop
jecxz
jmp
aam
mov
lods
jae
sub
jmp
mov
jae
loopne
sub
and
cmp
mov
stos
addr16
mov
stos
mov
mov
je
test
movb
ds
incl
add
out
mov
xor
sub
ds
add
xor
adc
dec
ss
xchg
or
push
sarb
je
inc
out
addr16
clc
stos
jns
adc
rorb
stos
ret
sar
jmp
lods
ss
jnp
and
inc
test
dec
mov
push
stos
call
imulb
xor
inc
mov
jmp
popf
mov
dec
in
jle
cmp
lods
jge
xor
add
inc
sub
and
mov
sub
sub
dec
cmp
adc
jmp
and
xchg
ret
sbb
xor
jmp
add
jns
add
xor
push
repz
jl
xor
adc
dec
add
dec
adc
jmp
scas
mov
xorl
jne
xchg
pop
adc
or
pusha
imul
inc
jge
mov
call
push
pop
add
xchg
test
or
xor
add
xchg
inc
cld
daa
in
adc
add
add
push
imul
decl
jnp
dec
jmp
ljmp
loopne
call
pop
loopne
push
ljmp
jl
jmp
imul
xorl
jne
imul
test
incl
cld
lcall
sbb
inc
movsb
inc
call
jmp
or
or
pushl
std
add
push
xor
mov
add
inc
sub
xor
xor
push
out
or
and
ds
ss
mov
stos
stos
daa
cmpsb
mov
add
sbb
or
test
mov
add
sub
leave
ss
add
add
mov
xor
pushl
leave
sub
sbb
lods
arpl
adc
add
xchg
fisttpl
sub
cmc
in
cmpsl
out
xor
ss
cltd
stos
mov
dec
cmpsb
psubusb
call
sub
xor
enter
sbbb
call
jg
add
cmpsb
call
xor
adcb
add
mov
and
aaa
popf
or
aaa
xchg
mov
dec
movsl
lea
inc
movsl
repz
lahf
pop
add
and
addl
and
xor
je
mov
test
inc
stos
and
push
pop
cmp
ss
add
xor
or
sbb
pushf
fstl
inc
out
pop
pop
pushl
inc
std
scas
aaa
hlt
fsub
aaa
hlt
out
mov
pusha
jno
push
inc
movsl
je
stos
pop
clc
mov
adc
push
mov
hlt
sahf
add
mov
out
mov
push
sldt
mov
mov
inc
iret
push
add
xchg
ljmp
add
movsl
decb
pop
mov
std
adcl
cmpl
xchg
sbb
test
popa
flds
add
xchg
ljmp
xchg
add
fs
cs
ficompl
pop
mov
pushl
mov
sbbl
push
sbb
mov
xorl
or
add
jae
add
mov
in
mov
add
mov
lods
add
xor
aaa
or
enter
jnp
leave
jae
add
fdivl
or
or
jno
push
leave
jae
add
cmp
mov
add
inc
aas
in
popa
sub
hlt
popa
ret
or
out
add
in
add
pop
cmpsl
cmpl
add
jg
or
insl
pop
pop
clc
adc
test
pop
addl
dec
aam
pop
push
pop
add
mov
pop
mov
data16
add
imul
inc
fs
inc
cs
inc
inc
fisubs
aad
add
add
sbb
mov
and
cmp
dec
or
push
lods
out
daa
out
gs
xor
xchg
cmp
and
jmp
jns
jo
jle
sub
cmp
add
mov
call
mov
lea
roll
lcall
and
add
and
iret
es
call
xchg
push
lea
or
push
fisubl
or
dec
test
je
xchg
jl
xor
es
mov
pop
cmp
push
push
jne
insb
sub
xchg
jne
insb
hlt
addr16
imul
ret
mov
sub
jnp
mov
add
jo
je
lea
pop
in
cld
lock
push
sbb
add
pop
pop
and
or
lods
ljmp
add
jne
sbb
add
adc
leave
pop
jmp
add
shlb
out
gs
sbb
pushl
imul
out
cmpb
or
lods
sub
or
add
cmp
mov
mov
movsl
stos
dec
adc
mov
inc
xchg
or
es
adc
test
call
test
mov
je
push
lods
pusha
pop
push
mov
cmp
les
incl
aas
adc
mov
je
sub
cld
cmp
add
jae
ret
call
and
cmp
add
sub
clc
sar
add
push
cs
xchg
inc
mov
mov
int3
push
adc
add
lods
in
scas
sahf
pop
ds
ljmp
xchg
sub
stos
mov
dec
jne
xor
clc
cmc
fisubrl
push
adc
add
sub
mov
aam
lret
jmp
add
add
adc
scas
stos
sbb
insb
movsb
xchg
add
jnp
lods
daa
pop
sahf
pop
sbb
popa
mov
adc
cmp
popf
je
stos
dec
clc
mov
mov
fdivr
sbb
popf
je
int
xchg
loop
mov
jmp
dec
or
cld
sahf
je
ret
sub
push
sahf
lahf
pop
add
outsb
pop
je
mov
xor
pop
xor
add
mov
je
subb
push
push
sahf
je
mov
popa
or
pop
mov
sbb
pushl
jns
punpckldq
shrb
rclb
cmp
enter
in
adc
test
pop
add
xor
and
adc
mov
pop
mov
push
inc
lock
xor
push
incl
out
dec
popa
std
push
popa
jae
fildl
call
add
adc
jne
fcomi
call
inc
fcomps
sbb
add
cld
adc
add
dec
in
push
addr16
xor
cmp
or
push
daa
inc
adc
aam
jne
mov
sub
testb
pop
clc
outsl
pop
add
clc
aaa
data16
jo
jg
leave
es
call
shrl
add
xor
sbbb
pop
call
pop
call
fisubrl
arpl
inc
in
dec
lock
rclb
fwait
add
add
in
push
xor
ljmp
pushf
pop
and
fwait
shll
sub
jnp
push
and
fwait
and
divb
lock
call
shll
push
mov
subl
loope
cmp
xor
aam
es
test
fwait
adc
xchg
and
cmp
xchg
fwait
xor
fldt
pop
lcall
add
dec
lcall
loope
rcl
inc
mov
lret
push
loope
mov
jl
mov
mov
adc
sub
pop
and
adc
scas
xor
mov
pop
mov
add
or
shrl
call
addr16
shl
cwtl
xor
into
mov
loopne
dec
or
add
loop
and
jmp
xor
xor
xor
std
jne
sbb
outsb
push
add
push
inc
add
pop
call
adc
jae
daa
fisttpl
sbb
std
pop
inc
leave
adc
jne
jge
xor
jge
std
jne
sbb
outsb
dec
add
daa
push
rorb
add
cmp
push
outsl
clc
mov
pop
adc
jne
jl
mov
rorb
add
dec
sbb
jmp
add
mov
inc
xor
or
hlt
incl
ret
orb
add
mov
sti
jae
sub
cmpb
sbb
jg
jb
or
add
les
adc
cmpl
cmp
insb
leave
add
xor
add
xor
das
or
repnz
clc
fadds
inc
jbe
clc
xor
ret
inc
test
imul
and
add
adc
ss
in
ja
push
add
adc
orl
mov
cltd
aaa
iret
stos
stos
ss
call
sbb
add
push
and
lea
adc
xchg
jne
push
and
push
fimull
in
mov
call
inc
mov
call
mov
stos
and
js
or
loope
xlat
int3
ss
and
lods
xchg
test
pop
mov
popf
inc
data16
out
lahf
inc
imul
hlt
mov
or
inc
xchg
xor
add
aas
push
push
add
xchg
sbb
add
inc
push
pop
cmpsl
lret
rorl
jmp
das
sbb
xor
add
xor
jbe
adc
add
nop
sub
adc
pop
lock
dec
je
fwait
dec
insb
add
lock
dec
xchg
mov
xchg
je
push
push
lea
aas
lea
inc
pushl
jmp
psubsb
fcoml
push
loopne
int
in
pop
mov
pushl
jns
clc
aas
imul
aam
jecxz
aad
lds
adc
add
sbb
testb
enter
add
enter
adc
pushf
daa
inc
enter
inc
xchg
lcall
cltd
addb
adc
mov
lock
cld
mov
xchg
add
jge
xor
stos
lahf
mov
jbe
add
test
in
mov
out
clc
add
mov
cmpsb
ljmp
das
mov
jl
jle
sub
add
mov
sahf
jmp
add
add
push
jle
je
es
pusha
xchg
jp
jmp
or
fists
test
ds
inc
add
icebp
cmc
inc
sub
add
cmp
fwait
sub
jno
sbb
inc
xor
mov
daa
add
or
add
push
hlt
or
cmp
cmc
push
xchg
mov
add
add
xor
push
mov
cwtl
in
fwait
notl
into
mov
sub
and
pop
pop
xchg
std
test
nop
cmc
cs
jae
into
addr16
test
xlat
or
test
and
shll
test
js
cs
cmp
xchg
sbb
jp
or
xchg
pop
aaa
lret
jmp
add
mov
sbb
insb
inc
adc
repz
sti
mov
and
mov
in
jmp
pop
test
insl
sar
adc
cld
xchg
repnz
fs
mov
daa
mov
jo
dec
push
sub
ja
into
mov
jne
add
out
hlt
push
rolb
nop
lcall
or
or
cs
pop
and
std
xorl
push
fstl
hlt
testl
inc
clc
enter
fsubrs
add
mov
mov
pushl
add
incb
add
mov
fs
enter
not
add
popa
movsl
mov
iret
movsl
jbe
pushf
add
jnp
sbbl
xor
andb
movsl
jae
out
add
in
sbb
pushf
cmp
movsl
je
ljmp
ds
rorl
test
jmp
inc
xchg
incb
add
cmpsb
imul
xor
sbb
ret
inc
roll
xchg
adc
mov
sub
data16
inc
into
loope
cmp
adc
aas
lds
sub
xchg
cmp
xchg
sbb
cwtl
xchg
out
mov
mov
jecxz
sub
add
sahf
or
mov
out
xor
call
stos
xor
out
fdivs
sub
cs
sbb
or
jl
dec
push
or
addb
jl
mov
or
ret
shl
mov
je
stos
jns
lea
add
or
push
cmp
cmpsl
cmp
mov
add
push
orb
sbb
mov
jb
push
push
cmp
insb
cmp
mov
pop
orb
sbb
mov
mov
push
dec
jne
mov
in
jmp
jmp
pop
jmp
aad
or
ret
push
mov
pop
pushf
add
jl
xor
push
add
push
mov
sub
jne
test
cmp
push
sbbl
je
jle
leave
mov
add
cmp
pop
dec
mov
jae
mov
push
ljmp
push
cmp
sub
sbbl
je
jle
leave
or
add
int
jmp
jb
std
jne
mov
lds
mov
jae
das
sub
call
cwtl
xor
pop
xor
mov
call
out
lahf
incb
dec
pop
mov
cmp
mov
std
cmpsb
lds
je
mov
lret
shll
pop
or
leave
and
outsb
add
adc
xchg
int3
pusha
push
cmc
xor
mov
add
cli
incb
add
xchg
mov
dec
mov
call
adc
scas
xchg
adc
mov
cld
inc
jo
push
sbb
sbb
push
out
cmc
sub
adc
pusha
dec
mov
push
adc
pop
sub
mov
push
add
jnp
sub
xlat
daa
add
add
sub
cltd
xchg
popf
mov
mov
add
add
aam
mov
add
stos
lret
mov
into
adc
mov
cld
outsb
inc
lock
sub
sbb
mov
inc
xchg
repz
stos
jae
lcall
sbb
aam
mov
and
adc
pushf
mov
cld
incl
mov
pop
out
fwait
inc
fstpl
cmp
mov
xlat
inc
add
rorl
pop
sarl
scas
imul
lahf
jmp
outsb
mov
dec
inc
call
mov
sub
sub
xchg
mov
aam
mov
rcrb
xchg
pop
roll
push
push
mov
clc
repnz
or
and
incl
roll
daa
and
call
add
ret
push
mov
imul
sbb
call
or
test
mov
adc
inc
inc
cwtl
stos
jae
cmpsl
sub
call
xor
add
mov
xchg
or
pop
lods
std
jne
mov
std
jne
jecxz
dec
aad
sahf
movsb
iret
sahf
je
jecxz
pop
add
push
inc
int
sub
inc
sti
fwait
jnp
xor
nop
les
addr16
scas
inc
add
pop
or
push
jns
dec
out
cmp
stos
mov
popf
enter
push
mov
in
push
ret
mov
dec
cld
sbb
dec
inc
xor
pushf
outsb
xchg
pop
cld
data16
call
add
push
adc
mov
pop
sub
sbb
sahf
xchg
rolb
popf
sbb
popf
or
mov
cmp
xchg
shll
pushf
mov
xchg
and
dec
adc
fcmovnbe
add
stos
cld
in
in
mov
shlb
add
add
stos
jge
lds
and
xchg
adc
ss
jl
cmp
loop
adc
aam
xor
call
es
pushw
sbb
push
xchg
decb
push
or
pop
fwait
jmp
jmp
cli
cmp
es
xchg
dec
xchg
jo
mov
jmp
inc
cld
cwtl
movsl
jae
push
add
jmp
add
cld
jnp
inc
pushf
test
test
int
je
pop
sub
xor
jl
mov
test
xor
cld
sbb
pushf
test
xchg
pop
mov
int
pop
add
ss
fistpll
lods
inc
or
pushl
mov
or
test
push
stos
dec
incl
test
call
pop
push
clc
call
dec
fs
test
lcall
divl
pop
lds
jae
inc
xchg
fisttps
ret
push
mov
test
pop
fists
mov
call
cmp
jae
mov
mov
lcall
lahf
xchg
pop
push
cs
rcrb
inc
out
mov
flds
add
mov
push
pop
cltd
add
stos
flds
add
icebp
mov
daa
incb
inc
clc
out
lahf
lcall
in
lcall
push
cltd
je
arpl
mov
shl
and
stos
imul
stos
std
clc
mov
pop
incb
mov
add
lods
xchg
adc
add
adc
lock
lds
adc
pop
nop
movsb
xchg
call
or
mov
xchg
mov
adc
ficoml
or
add
mov
ret
xorb
stos
arpl
or
cld
outsb
in
call
mov
aad
xor
or
stos
push
add
cltd
into
xchg
das
cltd
scas
sbbb
add
jmp
xchg
test
ss
fwait
inc
cmp
push
add
pop
jmp
jno
add
xor
xor
add
ja
add
sub
xorb
push
fidivrl
sub
xor
clc
push
arpl
ss
jl
pushf
cmpsb
in
push
adc
sbb
call
je
add
mov
xor
incl
aaa
cmp
stos
xor
aaa
ret
push
popa
mov
out
add
mov
add
mov
lock
inc
inc
mov
adc
cmp
popf
std
mov
into
jne
scas
jmp
xlat
fwait
xchg
fwait
jae
jo
push
pushl
jae
ja
in
incl
add
movsl
out
test
adc
push
pop
adc
call
aaa
adc
lcall
std
jne
lods
pop
push
test
xchg
pop
xlat
test
stc
dec
xor
mov
data16
sahf
inc
nop
incb
adcl
xchg
das
mov
out
jmp
ret
and
call
xchg
loope
inc
mov
xor
push
and
adc
sbb
push
jecxz
push
push
dec
xchg
je
sarl
cmp
sarb
loope
lods
add
test
ficomps
add
imul
xor
xchg
cmp
adc
xchg
imul
xorb
add
add
inc
scas
adc
insb
aam
jbe
outsl
inc
insl
in
repnz
fisttpll
adcl
adc
jne
inc
in
int3
xchg
lds
push
aaa
sbbb
adcb
insb
cmpsb
xor
subb
xor
mov
cmpb
decl
sub
dec
in
in
jo
mov
xchg
outsb
in
call
stc
jne
call
add
mov
jnp
pushf
ja
les
stos
xor
xchg
ret
lds
push
movsl
or
shl
scas
stos
fdivr
adc
je
lcall
mov
or
dec
mov
jle
loope
test
je
pushf
or
push
mul
push
cli
push
add
dec
mov
push
xchg
xor
cmp
mov
add
orb
mov
add
test
call
frstor
add
or
je
das
call
or
push
and
mov
inc
add
or
call
call
test
mov
scas
cmpsl
std
repnz
pop
add
cld
mov
inc
ljmp
rolb
sbb
mov
fwait
mov
push
outsl
push
or
jo
call
aad
inc
or
push
add
imul
inc
popa
sub
dec
mov
and
imul
xor
clc
xchg
inc
cld
out
rcll
out
and
jne
ret
sahf
xchg
incb
add
lret
push
in
sbb
xor
inc
add
fmuls
xor
sbb
dec
gs
push
mov
inc
inc
xor
fsubrs
pop
lods
add
pop
movsb
xchg
test
sahf
imul
shr
sbb
add
inc
ret
fdivl
adc
imul
add
mov
dec
lock
fcomps
sub
add
mov
xchg
mov
clc
sub
in
cmp
adc
add
push
xor
mov
jl
adc
std
inc
mov
jl
mov
imul
cmpl
popf
addb
insb
xchg
xor
sbb
mov
jp
loope
mov
ret
jp
or
push
or
xchg
add
out
push
push
fidivrs
and
data16
into
ds
insl
inc
jnp
mov
inc
jnp
scas
push
js
sbb
jae
cmp
jp
mov
aam
subb
jp
loope
movsl
push
outsb
mov
adc
jmp
xor
call
add
aam
incl
push
jb
cwtl
sahf
add
movsl
or
int3
insl
dec
push
mov
inc
inc
enter
rcrb
sbb
cmp
sahf
mov
mov
push
mov
pop
cld
das
sbb
push
movsl
jae
jo
push
inc
std
inc
cld
jecxz
inc
sub
adc
push
das
cwtl
jl
add
pop
push
or
cmp
push
call
and
sbb
sbb
push
addr16
mov
add
adc
rorl
imulb
xor
hlt
out
xchg
lods
sbb
rcl
mov
inc
sbbl
call
negb
push
in
jmp
lcall
dec
jp
repnz
add
mov
add
mov
call
sub
rcrl
xchg
cli
mov
xor
mov
xor
mov
jns
pushf
push
inc
sub
jns
popl
stos
lock
jl
ret
pop
mov
or
sbb
adc
fwait
sub
add
add
mov
insl
shr
xor
sti
fisttpll
xchg
in
or
push
xor
push
push
inc
xor
rcrb
adc
sahf
pushf
jmp
dec
lock
pop
or
fwait
pop
in
jne
jns
insl
mov
in
pop
dec
dec
shr
loope
cmp
jns
dec
sbb
call
loop
add
add
push
js
xchg
rorl
aaa
mov
sub
je
outsl
and
je
jbe
loope
add
rcrl
push
shr
cmp
dec
shr
loope
lds
ljmp
and
ja
jmp
lods
iret
inc
add
adc
add
xchg
jo
lahf
mov
rolb
add
xchg
sbb
leave
adc
jne
cwtl
loopne
sbb
or
les
jne
cwtl
add
mov
cmp
rclb
out
jle
add
pop
or
andb
jmp
imul
xor
jae
jg
or
adc
call
push
add
and
xchg
repnz
jne
lcall
add
mov
mov
cs
add
sbb
inc
xor
adc
ljmp
out
cld
es
cli
out
mov
pop
add
sub
sbb
xor
dec
jl
lcall
jg
je
and
push
mov
push
or
cmp
mov
clc
idiv
and
lcall
sub
xchg
fdiv
out
adc
cmp
inc
inc
xor
and
imul
adc
push
frstor
addl
xchg
out
push
hlt
jnp
inc
and
repz
xchg
add
mov
in
out
push
mov
adc
insb
xor
je
adc
das
sahf
mov
je
xchg
lock
lahf
lds
lock
insb
sbb
movb
jle
nop
lods
mov
sbb
shr
add
and
cmp
hlt
adc
xor
xor
jmp
xor
pop
icebp
ja
je
jnp
adc
adc
aam
inc
inc
jmp
scas
lock
xor
jae
jg
sti
push
or
mov
mov
adc
lahf
fidivl
fldcw
jno
push
sbb
add
insb
jl
xchg
cmp
pop
test
aam
ss
jmp
or
iret
xor
add
add
or
pop
pushl
in
inc
cld
mov
cld
push
adc
push
add
add
cmp
adc
push
pop
or
cld
popa
dec
push
jo
push
pushl
inc
clc
rcll
add
pushl
popf
jae
pop
and
enter
outsb
jp
call
push
jae
aaa
and
call
rdpmc
clc
add
lahf
jae
popf
jae
ja
clc
call
xchg
jae
or
sub
and
jge
add
stos
ljmp
sar
sub
add
jno
in
dec
loope
nop
dec
cs
inc
sbb
iret
xor
lods
xchg
sbb
or
out
mov
pop
clc
cmp
xchg
sub
xor
dec
imulb
jo
add
mov
add
xor
sbb
lcall
push
in
jg
adc
add
add
divb
jno
mov
mov
lcall
xorb
jmp
xchg
imul
out
shr
fwait
add
xchg
jo
adc
cld
int
jo
inc
les
dec
jge
jl
adc
jo
mov
scas
inc
add
xor
fbstp
inc
int
fwait
xchg
into
and
jo
cmpb
call
jae
jo
and
jmp
xorl
jmp
mov
cwtl
xchg
ret
ljmp
sbb
lock
sbb
mov
push
adcb
sub
mov
das
xchg
sub
jmp
lods
push
or
or
and
pusha
dec
push
aam
sahf
inc
dec
mov
xlat
jmp
jno
dec
ret
xor
cli
call
add
fstp
aam
inc
push
jb
sbb
add
std
jne
xchg
jae
pop
in
in
std
jne
mov
jne
nop
xchg
and
pushl
nop
js
cltd
std
jne
add
nop
jo
scas
cltd
std
jne
nop
push
inc
mov
cltd
std
pop
ds
rorb
mov
mov
sbb
out
pushf
xchg
std
mov
xchg
std
jne
mov
std
pop
cltd
push
decl
insl
mov
divl
ds
add
add
ja
and
jl
lcall
and
es
add
mov
xchg
cld
je
xchg
pop
or
addb
mov
or
test
xlat
dec
dec
lea
inc
icebp
lds
cmp
xor
push
push
cltd
loopne
inc
xor
pushf
jne
jnp
or
dec
add
ds
pop
inc
jo
sub
xchg
sbb
add
cmp
and
es
mov
xor
xchg
mov
push
cmp
mov
or
rcr
std
subl
in
andl
mov
or
adc
scas
inc
xor
pop
xchg
lods
push
insl
lods
xchg
in
outsl
cmp
cmp
xor
inc
daa
xchg
mov
leave
push
adc
add
push
and
jmp
add
add
cmp
insb
cwtl
sbbb
xor
or
loope
adc
add
lret
test
insl
je
sbb
mov
mov
rclb
cmp
fwait
test
sti
insl
inc
sub
inc
rcl
sbb
inc
sub
insl
cmpsb
dec
sbb
icebp
pop
insl
pusha
test
add
roll
mov
jmp
mov
hlt
es
mov
lcall
pop
ljmp
mull
xchg
std
jne
call
push
pop
xchg
xchg
push
pushf
shl
daa
xchg
dec
push
aaa
lods
ljmp
pushl
shr
cmpl
bound
lcall
test
xchg
std
push
adcb
or
popa
dec
jmp
xchg
std
adc
sbb
inc
pop
adc
mov
in
std
incl
inc
std
incl
ret
xor
inc
jo
jg
aad
cmp
orb
test
test
dec
xchg
add
std
mov
ljmp
pop
pop
testb
jg
jno
incl
out
mov
jmp
iret
test
or
and
mov
ret
xor
mulb
jmp
je
xchg
dec
dec
push
sti
jg
adc
push
or
lods
lahf
xor
shll
lahf
and
imul
imul
imul
adc
js
imul
mov
popa
in
jg
fcomip
imul
mov
ja
rolb
jl
jg
jl
rclb
lods
mov
dec
jecxz
jg
imul
xchg
fadds
ja
imul
fdivr
outsb
mov
aam
imul
push
push
pop
push
push
push
fdivr
ss
shl
inc
imul
inc
loopne
adc
or
mov
mov
sar
or
inc
jmp
push
fsin
sub
test
pop
mov
lods
out
mov
add
push
inc
mov
lret
sar
adc
out
push
add
decb
or
add
test
mov
adc
jne
cld
fmull
out
shlb
mov
and
dec
pop
out
dec
inc
xchg
jnp
cwtl
insb
mov
call
aad
add
add
xchg
push
jne
sti
rorb
xchg
js
inc
or
pushl
lahf
pop
push
call
and
inc
inc
xor
add
jge
pushf
gs
sbb
push
sub
div
pop
sbb
add
std
jl
cmp
pop
jmp
int
je
and
lret
dec
xor
xor
mov
pusha
push
pop
xchg
add
adc
lret
jecxz
sti
mov
push
sub
lods
lahf
add
xor
cmp
add
icebp
inc
add
jge
cmp
push
ret
call
xchg
add
dec
sub
lods
lods
out
xor
call
add
adc
fnstenv
sub
adc
jmp
mov
fldl
mov
and
mov
out
xor
xchg
les
xchg
add
adc
sahf
xchg
cmpl
adc
sub
gs
dec
dec
shr
mov
jnp
add
sub
incl
repz
adc
add
add
sbb
inc
sub
or
jmp
andl
jmp
xor
fidivrs
jl
mov
bound
icebp
pop
loopne
ss
mull
xchg
mov
loopne
add
add
aaa
push
push
insb
loope
jmp
sbb
mov
fs
fisubs
dec
sub
fiadds
add
jge
decl
lea
inc
std
jne
jmp
mov
rcrb
inc
mov
sbb
inc
sbb
jne
ficoms
movsb
negb
or
jae
out
rcr
mov
inc
std
jne
jno
imul
ret
std
adc
ret
xlat
jb
mov
fidivs
xor
inc
incl
add
fidivs
fs
or
fdivrp
std
jne
fnsave
xor
inc
push
js
jge
test
mov
push
test
sub
push
mov
cmpsb
sub
and
test
inc
loop
repz
outsb
pushl
clc
imul
stc
push
test
out
mul
addr16
sub
add
aad
out
pop
sar
xchg
fmul
repz
push
stos
adc
mov
jbe
sahf
filds
lcall
inc
xor
or
cs
test
adc
inc
cmc
pop
call
mov
xor
call
in
inc
and
nop
imul
popf
shrl
call
add
adc
or
call
adcb
add
fildl
or
lods
js
les
mov
push
jo
popa
cwtl
aad
hlt
lods
js
mov
mov
int3
and
sahf
not
call
js
popa
mov
imul
push
decb
push
sub
popa
std
pushf
or
into
out
sub
insb
popa
out
jp
pusha
add
mov
imulb
mov
inc
jmp
sahf
aam
sub
mov
dec
jle
mov
xor
pusha
std
xchg
mov
push
pop
sub
add
pusha
out
jmp
jo
je
ss
sarb
jmp
es
fcompl
inc
jmp
das
jmp
std
lcall
fwait
ljmp
jae
jo
jg
std
jne
in
xchg
inc
outsl
jmp
std
decl
mov
ljmp
in
xlat
inc
mov
out
std
ljmp
lahf
std
jg
loop
out
jne
in
mov
mov
out
std
ljmp
push
call
shld
jmp
std
jne
jmp
incb
add
out
mov
out
std
pushl
adc
jbe
mov
int
incb
outsb
je
pushf
jne,pn
outsb
mov
inc
imul
push
insb
decb
hlt
inc
inc
cmpsb
je
push
cmpsb
je
dec
add
negl
or
out
sti
or
sbb
xor
jmp
mov
leave
incb
add
test
je
je
jmp
outsb
lods
add
inc
gs
and
jne
sub
mov
pop
sbb
into
stos
outsl
imul
cmp
add
or
out
xor
or
pop
pop
adc
or
add
or
pop
xor
shrb
mov
test
pop
movsl
out
es
adc
add
dec
cmp
or
jo
adc
mov
cli
insb
mov
inc
bound
roll
inc
insl
xchg
je
or
shll
inc
je
adc
out
cs
decl
popa
pushf
es
je
sbb
inc
push
and
mov
push
add
mov
std
out
rcrl
fisubs
je
add
orb
popl
pop
je
ljmp
fisubrs
pop
je
test
inc
jge
call
hlt
lcall
hlt
push
insb
mov
dec
cli
sar
mov
xor
rolb
or
cwtl
fcoms
add
mov
call
add
jae
mov
inc
inc
add
mov
out
nop
adc
or
add
fimuls
mov
cmp
inc
sbb
push
call
push
shlb
arpl
lock
inc
inc
dec
mov
add
mov
dec
aas
add
xchg
sbb
sbb
rorb
mov
fadds
xchg
dec
loop
fcoms
mov
int
pushl
ret
inc
pop
incb
add
xchg
sbb
fs
jge
int
adc
mov
adc
std
or
mov
pop
out
mov
lods
test
dec
mov
mov
pop
js
incl
pop
fdivrl
pop
aam
push
jo
jno
sbb
sub
jmp
push
fisttpll
mov
addr16
lahf
ret
call
adc
inc
jo
sar
add
jl
pop
orl
adc
cld
out
jno
mov
push
in
mov
in
jo
cmp
or
aad
and
divl
insb
jno
xchg
pop
orb
loopne
pop
mov
adc
pusha
mov
sbb
dec
out
aam
jo
or
es
pop
int
lds
imulb
insb
movb
aas
pop
lahf
inc
xor
jge
xchg
lods
dec
pop
pop
popf
jle
pop
cmp
or
sbb
adc
inc
das
ljmp
mull
call
pop
push
jmp
xor
call
xor
test
and
mull
lahf
pop
out
cmp
loop
in
add
jle
test
pop
je
add
ficompl
dec
out
fmulp
mov
into
pop
dec
cmp
sub
fimuls
rorl
mov
pop
data16
ljmp
sahf
mov
loope
xchg
inc
mov
loope
jmp
adc
push
dec
and
jmp
inc
jg
sub
jmp
das
dec
mov
mov
loope
incl
add
push
call
and
mov
test
cmp
adc
mov
loope
lcall
push
call
loope
loop
jg
push
inc
pop
jmp
std
push
push
out
push
out
mov
xchg
mov
xor
fildl
insl
mulb
and
out
out
je
add
ja
je
aad
aas
into
insl
mov
push
outsb
mov
lods
insl
scas
loopne
mulb
add
insl
mov
insl
incb
lods
insl
jbe
dec
imulb
insb
mov
ss
pop
rclb
in
insl
decb
arpl
inc
dec
insb
je
inc
fnstcw
ss
insb
je
cmpsb
mov
push
adc
insl
add
pop
loope
pop
mov
mov
nop
loope
push
jge
mov
imul
out
gs
pop
pop
insl
into
enter
push
xchg
pop
mov
sarl
jne
push
inc
xor
in
adc
rorb
mov
jg
std
idivb
jle
xor
inc
cmp
jns
xchg
movsb
outsl
add
enter
dec
loopne
pop
add
lds
mov
inc
cwtl
into
inc
jmp
repz
out
xchg
xchg
pop
push
push
adc
adc
imul
je
push
loopne
push
add
lcall
push
add
out
jmp
outsb
pop
imul
mov
push
mov
xchg
addr16
add
jg
inc
jmp
iret
out
decb
loopne
mulb
xlat
jb
mov
adc
xor
push
dec
enter
sbb
jae
ja
push
call
adc
or
add
push
testb
adc
dec
in
pop
or
push
and
push
xor
lea
inc
mov
cwtl
jmp
cli
call
add
ret
shlb
popa
enter
cmp
jne
mov
dec
mov
xor
jmp
mov
test
std
pushl
add
push
ss
addr16
cwtl
aas
add
ds
xlat
ds
imul
in
xchg
imul
mov
jmp
imul
lcall
pop
cmp
add
movsb
aad
repnz
pop
fabs
mov
out
fisubrl
lods
xor
scas
lods
fcmove
stc
jnp
jmp
aad
xchg
xor
pop
cltd
add
jecxz
sbb
xor
imul
jge
imul
int
mov
mov
in
jb
aad
push
pop
push
sbb
push
popf
and
setge
call
test
adc
fdivl
push
call
pop
fists
add
in
rolb
inc
mov
and
cmp
push
cmp
imul
push
push
pop
xchg
imul
push
add
push
jnp
cmp
scas
leave
push
pushf
out
dec
fcompp
xchg
fcompp
push
push
and
push
je
dec
mov
enter
adc
cmpsb
lods
nop
iret
xchg
cltd
push
lcall
mov
cld
and
mov
orb
dec
mov
pop
dec
push
aam
cmp
adc
push
aam
push
mov
inc
push
ds
sbb
add
add
push
cs
imul
test
add
push
fidivl
add
mov
std
pushl
mov
mov
ja
std
call
pop
and
outsl
mov
std
jmp
out
js
iret
mov
std
jmp
mov
sti
ljmp
jle
add
xadd
add
arpl
push
push
jmp
dec
out
sub
mov
dec
fsts
xor
inc
cltd
sti
ljmp
mov
fiaddl
cmp
add
cmp
iretw
data16
in
pop
xchg
adc
gs
push
mov
or
imul
inc
pop
xor
je
jns
add
jb
ret
mov
cmp
shll
movsl
jmp
mov
mov
gs
popa
add
cmpsl
fimull
push
nop
cli
out
pop
gs
cltd
leave
and
inc
mov
out
add
cmpsb
addr16
push
dec
data16
or
lock
dec
jae
addr16
loopne
inc
adc
gs
scas
inc
add
xor
jns
xchg
lods
push
aaa
leave
lock
call
fdivs
jno
adc
js
call
ret
push
inc
bound
test
fisubs
ss
ffreep
dec
inc
mov
mov
push
cmpsb
push
fisubrl
cmpsl
fcmovnbe
ljmp
outsb
dec
push
add
xchg
dec
pushf
jp
cmpsb
int
dec
enter
push
jb
xchg
ret
cmc
insb
in
jmp
dec
ss
sbb
leave
cltd
xor
adc
aad
sub
fldenv
fcmovbe
cmp
xor
rcrb
dec
sbb
mov
and
dec
dec
outsb
adc
push
std
push
call
add
inc
imul
cli
xor
std
jmp
lock
mov
ds
lcall
mov
roll
mov
fisttpl
push
mov
mov
cmp
addr16
inc
cld
shrl
inc
sub
sbb
add
inc
insl
dec
dec
sbb
or
incl
shll
shlb
add
cmpsl
mov
push
inc
xchg
inc
inc
enter
sarb
out
es
jmp
cmp
jg
cmp
stc
not
push
shr
arpl
sahf
or
incb
bound
mov
jle
ret
pop
push
ret
insl
dec
in
dec
test
je
adc
cmp
mov
popa
je
push
rcr
add
cs
popa
je
mov
pop
or
pop
call
jne
add
or
push
mov
xor
dec
inc
in
add
xor
cmpsl
dec
jo
popa
je
adc
or
fisubs
add
adc
adc
or
add
bound
cmp
lret
sbb
sbb
dec
dec
push
clc
aam
out
add
jmp
inc
rorb
add
adc
mov
mov
inc
ret
call
add
adc
pusha
movsl
sbb
stc
mov
add
dec
adc
add
push
sub
adc
add
and
pop
fstp
daa
add
add
jno
sar
orb
push
call
fisttps
bound
mov
add
xor
push
jmp
mov
call
jg
call
push
fldl
sar
mull
sub
mov
ja
and
push
fwait
add
xor
push
adc
test
xchg
dec
jb
dec
pop
mov
adc
fisubrl
xor
sar
mov
add
push
mov
out
cwtl
jmp
xchg
movl
adc
out
sahf
adc
mov
mov
mov
scas
sbb
jne
push
rcll
data16
ret
jmp
push
push
or
popa
or
inc
mov
push
push
jle
pop
insb
hlt
leave
mov
push
rol
add
int3
dec
negl
ret
inc
pop
repnz
add
adc
inc
cld
cmp
jae
xor
xchg
sub
mov
mov
push
out
pop
test
push
cmp
imul
add
jno
idiv
and
pop
je
stos
push
dec
cli
pop
cld
out
imul
add
cld
xor
and
pop
and
add
repnz
lock
inc
adc
cmp
rol
cltd
add
cmp
jmp
pop
mov
repnz
shrl
popf
jmp
pop
test
lea
sbb
repnz
aad
pop
pop
sbb
faddl
inc
insl
jmp
jo
pop
fsubrs
cmp
sbb
cmp
pusha
lahf
inc
addb
jmp
mov
add
xchg
shll
push
or
fdivs
cmp
sbb
sub
add
cltd
sub
in
icebp
adc
dec
jbe
int
icebp
mov
shl
push
add
xlat
xor
cmp
loop
inc
or
push
inc
jmp
jge
mov
pop
shl
loope
jge
scas
pop
inc
cmc
inc
neg
add
xor
add
je
sbb
incb
sbb
out
scas
mov
je
sbb
fcompl
rclb
call
lods
cmc
inc
je
cmp
in
rcrb
ficomps
call
loop
rolb
add
pop
cmp
call
jmp
and
inc
or
jae
add
mov
cmp
mov
shlb
inc
fstpl
call
or
out
or
incl
sbb
jne
mov
call
addl
add
rorb
rcrb
jb
lods
lcall
jmp
repz
add
rcrl
push
add
or
add
inc
xor
je
add
adc
inc
je
jle
or
add
outsb
pop
sub
or
daa
or
pop
xor
fimuls
add
mov
addr16
int
mov
adc
out
sbbl
xchg
cmp
hlt
into
mov
mov
outsl
data16
std
adc
jns
push
pop
addb
fcompl
add
sub
out
xor
test
jmp
add
xchg
sub
push
push
pop
cwtl
rolb
jne
dec
aad
outsb
pop
pop
sub
adc
add
flds
mov
sbb
xor
pop
cmp
mov
push
add
sub
pop
cmpsl
inc
popa
cmp
add
ds
cmp
lock
inc
add
lods
jo
outsb
inc
add
adc
outsb
cmpsl
das
out
add
rorb
ljmp
adc
in
pop
jae
and
jae
sbb
lea
sar
rol
xlat
mov
xchg
repz
scas
lods
push
pop
inc
push
push
jb
xchg
ret
dec
mov
mov
inc
idiv
add
xor
ss
stc
inc
jmp
ss
add
xor
mov
stc
inc
or
cmp
subl
es
adc
fs
std
push
clc
sar
add
scas
in
aaa
aas
fldt
not
xchg
mov
aaa
inc
or
out
test
arpl
mov
add
push
add
lcall
movsb
scas
fdivr
call
inc
ret
aas
faddl
inc
jo
dec
xchg
repnz
fsub
mov
adc
adc
add
popf
cld
decl
std
mov
incl
das
pushl
sub
cs
call
cmpl
add
mov
xchg
sar
add
sub
sub
add
icebp
xor
xor
add
es
out
sub
cmp
add
dec
leave
inc
xor
add
rcll
into
or
xor
xchg
shll
test
loop
inc
xchg
or
add
in
lcall
mov
inc
mov
push
movsl
cmpsb
sub
inc
lcall
sub
mov
in
subb
aad
outsb
sub
sbb
inc
outsl
or
mov
push
aas
lods
nop
add
movsl
push
enter
or
lret
xchg
pop
ss
mov
icebp
and
mov
aas
imul
cmpsl
rcrl
sbb
dec
nop
fidivrl
inc
push
push
stc
pextrw
xchg
or
xor
mov
add
adc
mov
dec
aas
aas
mov
std
mul
ss
sbb
fidivrs
xchg
ds
stos
mov
push
das
addr16
xchg
jmp
add
mov
adc
cmp
mov
mov
add
mov
data16
shll
cs
xor
inc
filds
rorb
adc
mov
jo
lcall
jae
ret
sbb
add
int
data16
adc
call
push
shlb
mov
push
incb
add
out
adc
add
sbb
push
sub
push
xchg
dec
out
call
push
jle
inc
rcl
jae
mov
cli
mov
adc
push
sub
decb
adc
or
jmp
or
push
adc
sub
add
sub
decl
sub
fsubrs
ljmp
sbb
add
sub
mov
shll
sbb
sub
sub
push
cltd
icebp
mov
repz
call
sti
push
je
arpl
push
xor
stos
or
incl
sti
pop
test
fdiv
leave
fdivrp
call
test
mov
push
xor
std
mov
cli
adc
or
adc
inc
and
ret
add
add
adc
fnstcw
mov
push
idiv
les
call
dec
dec
add
push
pop
cmp
push
dec
ljmp
dec
repnz
aas
dec
sub
outsb
adc
aad
push
fisttpll
push
and
push
scas
out
push
xchg
push
nop
dec
inc
push
outsl
push
out
cmp
fcom
push
xor
xchg
lods
push
add
arpl
jno
adc
outsb
mov
mov
insb
cmp
aad
xchg
cmp
push
aad
call
in
call
add
in
sub
out
cmp
insb
cltd
aas
push
sbbl
hlt
cmpsb
jmp
push
gs
jmp
xor
je
inc
dec
push
xor
cmp
and
add
out
out
sub
push
mov
imul
push
sbb
xor
popa
cmp
inc
mov
std
jne
in
hlt
xor
pushl
in
mov
dec
pop
sub
aad
mov
std
push
out
push
lcall
or
pop
sbb
jns
add
arpl
call
push
jae
fwait
jecxz
lock
push
add
add
jae
xor
xor
pmulhw
add
rcrl
push
mov
xchg
ret
in
push
jo
loope
fmul
jo
fwait
in
cmp
xor
sbb
sub
je
scas
or
add
and
lcall
xchg
ret
push
adc
and
ljmp
out
push
incb
add
add
xor
lcall
pop
xchg
mov
push
ss
lret
das
sub
es
cmp
push
pop
pop
lea
sub
or
pop
xchg
xor
add
add
push
std
out
imul
pushl
push
arpl
cmp
subb
insl
cltd
add
cmpb
dec
lahf
push
push
sbb
adc
jb
dec
dec
cmp
cmpsb
adc
add
fistpll
mov
call
cmp
ficoml
call
and
adc
cli
jle
jg
in
cmp
sub
sbbb
jmp
clc
loop
daa
add
push
push
lods
pop
ret
and
or
test
mov
add
jmp
jl
cmp
idiv
cmc
xor
out
adc
test
repnz
data16
or
ja
push
incl
call
sub
ds
cmp
jge
adc
mov
out
ss
adc
je
ljmp
xor
out
idivl
inc
cmp
shlb
aaa
fiadds
add
xlat
jl
out
cmp
add
jle
in
pop
int3
ficoms
push
in
enter
mov
cmpl
cmc
xchg
sub
enter
jae
pop
leave
fcmovnbe
inc
cld
mov
add
dec
dec
testb
adc
int
decl
adc
add
inc
lock
adc
add
dec
out
push
lds
push
add
aad
ljmp
subb
adc
daa
aas
subb
adc
call
xor
pop
jmp
test
sti
cmpsb
lock
subb
mov
dec
jb
mov
jns
roll
dec
sub
and
xchg
pop
xor
cmpsb
ret
pop
data16
add
cs
xor
add
sti
sti
imul
jb
dec
dec
dec
stos
int
xor
dec
adc
jne
pushl
dec
pushl
sub
subl
inc
dec
pop
xor
pop
std
pop
mov
push
out
xor
cmp
mov
mov
bound
adc
xor
xchg
add
jnp
les
imulb
xor
sub
sub
sub
xor
and
cmp
les
mov
pop
shr
sbb
sub
pop
xor
inc
lds
adc
xor
inc
jne
call
lock
dec
push
sub
pop
push
jnp
add
add
sub
add
cmp
cmp
cmp
sub
mov
inc
add
xor
cld
push
cli
scas
mov
push
push
adc
add
jae
add
xlat
sti
jmp
jno
dec
shll
mov
imul
popa
push
sub
popf
inc
xor
js
add
fsubrp
xor
add
arpl
call
dec
pop
and
aam
cld
sbb
add
lea
push
jb
push
pop
push
sub
adc
rcl
or
add
push
add
adc
push
pushl
stos
inc
loopne
dec
push
push
mov
inc
add
add
cwtl
roll
cwtl
push
add
push
jae
add
loop
incl
add
lea
push
sub
pop
push
or
xor
add
sub
iret
repz
cmp
inc
add
inc
inc
je
add
xor
inc
je
in
mov
cld
add
icebp
out
out
jno
mov
xchg
sub
aaa
xchg
in
scas
pop
cld
add
xor
sbb
cmp
add
das
sti
incb
add
inc
je
ret
sub
je
roll
xor
inc
xor
inc
outsb
repnz
lods
sub
test
add
stos
adc
std
imul
loopne
xor
add
int3
das
inc
test
sub
aam
dec
mov
adc
xor
cld
in
int
push
xchg
push
jo
inc
inc
or
call
in
movsl
inc
push
inc
into
mov
addl
add
add
dec
les
xor
mov
shr
fistl
add
mov
shll
sar
call
out
mov
inc
and
ljmp
jbe
xor
outsb
or
add
call
repnz
jb
or
xor
mov
call
mov
fildl
pop
fdivr
call
icebp
sub
and
sub
adc
test
xor
inc
jmp
notl
jmp
xor
inc
mov
incb
test
push
das
pop
out
ret
add
push
mov
add
add
jb
sar
push
lret
mov
add
adc
leave
dec
das
addr16
add
inc
inc
out
clc
call
fsts
add
xchg
aad
push
lods
lock
fsub
cld
popf
fdivr
and
dec
inc
enter
sbb
mov
pop
sbb
je
xlat
adc
popf
or
inc
cwtl
adc
add
add
mov
inc
out
fadds
inc
int3
call
xor
inc
out
cmp
add
aaa
test
cmpb
int
sbb
push
ljmp
insb
notb
aas
fdivr
push
or
add
dec
sbb
decl
inc
xor
push
mov
add
adc
stos
inc
xor
pop
push
out
stos
inc
xor
pop
cld
add
push
pop
stos
inc
xor
add
dec
das
test
push
add
cmpsl
add
fsubrl
jmp
idivl
mov
cmpsl
add
insb
stos
icebp
adc
push
test
negl
adc
push
ror
add
negl
adc
sbb
push
idivl
adc
jmp
add
out
testb
lret
idivb
adc
jmp
mov
adc
jmp
cmpsb
idivb
mov
xor
sar
pop
mov
xor
incl
pop
pop
test
sub
ljmp
xor
call
xor
and
add
add
std
or
test
sub
sbb
sub
aam
int
and
sub
aam
mov
sub
xor
aam
popf
leave
adc
sub
aam
ljmp
adc
and
pop
cmp
pop
fsts
jmp
fistpll
and
pop
jmp
add
pop
cmp
pop
mov
jmp
ss
mov
jmp
aas
cmp
pop
fsts
jmp
pop
xor
fsts
jmp
fbstp
push
pop
dec
adc
and
out
xor
or
jmp
lahf
xor
sbb
jmp
xor
add
dec
adc
out
add
sti
sti
add
push
mov
inc
xor
add
dec
mov
inc
xor
out
or
adc
fldl
loop
fwait
jmp
add
or
fldl
or
mov
push
rcr
inc
xor
out
jnp
add
dec
jmp
inc
xor
in
imul
call
inc
xor
mov
or
faddl
push
jnp
add
add
adc
faddl
adc
dec
ljmp
push
adc
xor
jmp
test
push
jmp
add
insb
in
xor
pop
xor
jno
xor
inc
xor
cmp
cmpsl
lock
adc
add
psubsw
sbb
in
add
add
add
cmpsl
lock
adc
add
psubsw
xor
jmp
push
xor
inc
xor
hlt
xor
add
icebp
adc
stos
sub
or
insb
adc
xor
in
out
loopne
adc
loope
add
add
xor
jmp
aas
adc
jmp
xor
call
xor
sub
add
adc
jmp
cmp
xor
in
xor
ljmp
adc
loope
or
jmp
add
jmp
xchg
push
mov
mov
add
dec
nop
sbb
adc
jne
lcall
dec
or
cwtl
push
lds
mov
nop
push
add
adc
mov
or
add
mov
mov
sar
fwait
inc
dec
adc
and
sldt
pop
out
sbb
dec
adc
add
int
sbb
adc
or
adc
mov
lcall
sub
addl
stos
mov
mov
jno
sbbb
cmp
add
push
add
mov
pop
xor
cmp
jno
add
mov
push
shll
scas
lret
les
inc
movsb
inc
roll
mov
add
movsb
xchg
je
push
xor
pop
add
cmp
add
cmp
add
jo
sbb
jmp
pop
add
xor
addb
add
push
out
cmp
test
push
push
adc
xor
cltd
adc
adc
mov
aam
jp
adc
add
adc
addb
add
push
pop
sub
lahf
pop
fdivs
jnp
pop
xor
sbb
adc
cmpb
jmp
fwait
aas
pop
sub
add
in
xor
push
inc
push
add
lcall
inc
cmp
cltd
int
test
cmp
cltd
sbb
and
jo
cld
add
xor
mov
adc
jmp
xor
jo
adc
jmp
pop
push
add
pop
mov
push
sbb
mov
add
add
sub
jmp
mov
sub
mov
jmp
loope
mov
dec
mov
adc
add
and
je
push
inc
test
hlt
orl
leave
push
adc
sbbl
and
fs
pop
cs
mov
push
push
inc
call
lcall
adc
add
cwtl
pop
push
mov
orl
jbe
iret
push
add
pop
xchg
shrb
xchg
or
jae
fistl
jne
xchg
test
inc
pop
add
xor
call
and
orb
sub
push
pop
jecxz
mov
jmp
mov
pop
test
xor
add
inc
pop
add
xor
dec
xor
test
add
mov
mov
add
ficoml
add
sub
add
mov
sub
cmp
test
cmp
add
add
test
outsl
sbb
adc
ret
mov
and
es
add
and
add
xor
inc
scas
add
mov
jmp
subl
lcall
xchg
add
add
mov
sub
cld
in
xor
cmpsl
mov
fwait
mov
jno
mov
je
jg
movsl
test
mov
aaa
and
mov
ljmp
and
sahf
lods
dec
out
add
and
or
shl
xchg
enter
sbb
xor
jb
adc
xor
sub
mov
sbb
jmp
xor
fnstenv
inc
std
stos
lods
adc
pop
sbb
add
loope
mov
sbb
jmp
xor
jo
std
add
xor
testl
xor
shll
mov
push
and
add
and
call
mov
inc
mov
xchg
test
or
add
sbb
rorb
adc
jne
mov
dec
sti
add
enter
aam
incl
push
add
adc
call
add
mov
add
inc
mov
push
add
mov
add
xor
push
add
sub
adc
sub
add
jno
sbb
sbb
call
mov
pop
xor
sub
sbb
mov
sysexit
sub
add
add
xor
mov
mov
sub
add
loope
pop
jae
add
push
mov
and
xor
sub
add
inc
jg
xor
pop
ljmp
pop
cmp
inc
mov
out
aam
push
jecxz
jo
jmp
add
test
divb
pop
push
xor
clc
negb
sbb
add
add
mov
scas
inc
push
or
cltd
sub
in
jg
scas
mov
sub
pop
mov
fs
lock
in
mov
or
inc
cs
mov
mul
into
cld
mov
add
adc
add
xor
jb
sbb
sbb
add
ss
add
add
in
cli
ds
sbb
cs
xchg
in
adc
and
adc
and
push
pop
jno
sbb
pusha
pushf
lock
xor
add
push
add
mov
or
mov
pusha
stos
add
jmp
inc
sbb
jmp
xor
addr16
add
loope
mov
adc
jne
popf
test
push
adc
mov
add
xchg
rorl
xchg
adc
add
mov
dec
cli
push
orl
mov
clc
cli
das
out
xchg
adc
add
pop
add
push
pop
add
enter
les
add
fsubs
addl
insb
sub
add
and
dec
fwait
int3
call
pop
inc
pop
pop
xor
pushl
sub
out
mov
add
sub
out
stos
imul
out
xor
out
iret
pop
jae
add
scas
adc
add
xor
jae
scas
scas
and
xor
add
sub
or
sub
out
mov
out
aaa
xor
stos
push
int3
fadds
mov
or
mov
push
add
cmpsl
push
and
das
push
add
jl
cmpsb
adc
xor
out
in
add
mov
jmp
jno
adc
add
outsb
adc
adc
jp
sti
in
add
aam
bound
adc
add
adc
mov
add
jmp
push
sbb
jo
xor
pop
xor
or
adc
mov
adc
add
adc
add
add
lea
xor
frstor
xor
mov
ljmp
repnz
sahf
adc
adc
lock
jmp
cs
pusha
shl
jmp
cli
imul
xchg
imul
add
lock
add
pop
xchg
mov
cli
jmp
cs
int
xchg
cli
jmp
fwait
jmp
lds
lea
cmp
mov
dec
fdivr
out
mov
pop
jmp
xor
adc
adc
mov
or
cwtl
push
xchg
add
and
mov
cwtl
das
mov
insl
pop
mov
loope
push
add
adc
mov
xchg
test
dec
adc
mov
pop
add
sbb
push
mov
out
push
out
pop
movb
adc
inc
in
jge
jmp
adc
arpl
enter
xor
push
add
insb
pop
add
add
xor
xor
orl
call
mov
cmp
jmp
cmp
add
ss
popa
lcall
sbb
movsb
xchg
out
dec
sub
add
mov
push
add
test
call
pop
adc
add
xor
add
xor
push
inc
add
test
add
sub
mov
xor
divb
adc
bound
mov
jno
cs
add
pop
fdivr
out
ljmp
add
cld
or
jmp
or
or
add
mov
xor
ljmp
add
dec
adc
add
sahf
in
mov
xor
pop
cs
add
xchg
xchg
sub
push
jno
push
in
add
adc
call
lock
lock
add
pop
sar
in
inc
enter
popl
into
lea
ret
mov
xor
addr16
adc
jmp
outsb
icebp
sbb
mov
cmp
add
cli
std
jle
xchg
lret
mov
adc
xor
add
xor
neg
cs
imull
adc
call
push
mov
in
adc
fcoml
out
add
lock
repz
test
adc
add
dec
adc
dec
xor
cmp
or
add
add
and
and
cmp
mov
adc
and
cmp
pop
xchg
enter
mov
cmp
imul
dec
dec
xchg
out
jl
mov
add
mov
dec
and
xchg
imul
cmp
decl
add
or
inc
push
xor
jle
or
testb
xchg
and
rorl
mov
sub
sbb
jle
or
xor
ret
rcrb
mov
jle
jo
or
jae
mov
jne
je
and
xchg
mov
ljmp
rclb
aaa
out
xchg
stos
rcr
btl
or
xor
dec
cmp
mov
and
xchg
and
mov
xchg
pop
sub
adc
jle
aam
or
fsubrp
cmp
adc
sub
adc
adc
adc
call
inc
adc
stos
cltd
mov
add
sbb
sub
pop
add
fwait
xor
push
inc
adc
mov
xor
add
pop
scas
test
aaa
fildl
frstor
das
cltd
sub
cld
mov
outsl
or
push
add
stos
or
mov
jb
xchg
fwait
popa
add
adc
adc
lods
std
cmp
xor
out
jl
inc
rcrb
adc
movsl
notb
test
sbb
lods
lret
jmp
fdivl
gs
push
jecxz
movl
in
xor
jo
xor
xor
incb
push
out
push
pop
fcoml
loopne
add
jae
shrl
inc
fimull
test
jecxz
sbb
and
inc
sbb
xor
mov
or
add
or
andl
enter
test
push
and
sbb
add
pop
add
push
loopne
push
push
daa
xor
popf
adc
add
adc
add
adc
add
mov
sbbl
mov
shll
or
dec
adc
mov
jns
add
sti
jl
xor
clc
add
std
jl
stos
outsl
adc
std
jp
add
and
add
test
faddl
xor
ja
mov
mov
add
cmp
xchg
adc
std
mov
mov
stc
std
jmp
add
scas
lret
mov
add
jno
ljmp
inc
loopne
mov
mov
stos
sub
pop
mov
adc
fiaddl
add
aaa
mov
stos
cmpsb
repz
rclb
cwtl
jp
cmp
xor
insb
inc
aaa
cwtl
xchg
decb
rol
push
xor
mov
jg
xlat
test
jb,pn
adc
jbe
sbb
add
shll
roll
mov
jb
xchg
xchg
mov
xchg
lcall
mov
arpl
add
out
jbe
lret
rdtsc
adc
add
pop
add
jp
bound
adc
outsl
arpl
add
dec
push
and
cmp
dec
ljmp
push
adc
bound
loop
push
push
mov
jns
mov
adc
dec
shl
xor
jmp
lret
in
adc
lock
add
ds
jmp
add
xor
push
add
push
or
jmp
jge
inc
int
lcall
icebp
fwait
inc
lds
push
add
lret
add
loop
inc
lds
scas
sub
cli
iret
aaa
mov
cmp
mov
mov
or
jns
mov
sub
pop
cmp
inc
hlt
in
mov
dec
push
push
inc
in
add
out
decb
adc
mov
out
sar
inc
push
shr
adc
dec
and
mov
sbbb
fistps
mov
push
cmp
sbb
outsb
sarl
mov
shlb
jae
loope
cli
inc
rorb
inc
or
add
or
std
mov
lahf
adc
push
mov
das
stos
mov
daa
lods
mov
sbb
incb
cmp
jne
rcll
push
out
add
sbb
lea
movsl
mov
adc
std
add
lods
loop
dec
push
cmp
add
cld
mov
mov
adc
and
in
adc
mov
or
add
ljmp
nop
ljmp
and
jmp
mov
out
dec
or
push
or
add
pop
push
push
and
adc
sbb
es
adc
mov
out
mov
cmc
mov
jmp
mov
push
add
popa
lahf
movsl
sub
or
and
push
add
stos
pop
add
mov
push
add
sahf
movsb
loop
sub
mov
call
shr
stos
orl
or
or
bound
inc
add
xor
xor
or
and
mov
cmp
sahf
lret
sub
and
cmp
mov
lds
add
xor
out
xor
movsb
xchg
xor
push
cmp
jmp
dec
mov
push
push
adc
jg
xor
cmp
mov
pop
adc
adc
addr16
testb
adc
mov
pop
adc
sbb
mov
nop
sar
mov
add
mov
add
and
call
cwtl
inc
and
cwtl
push
and
xchg
pop
and
call
dec
jl
cmp
cmc
xlat
sub
pop
mov
out
xor
sbb
and
jnp
xchg
std
add
mov
lock
cmpsb
sbb
int
ss
pop
test
into
in
jns
dec
mov
pop
mov
add
stos
inc
inc
call
insl
adc
add
adc
jl
cs
add
xor
jne
repnz
jnp
cmpb
notl
mov
stos
mov
daa
lods
mov
fstps
mov
cwtl
add
xor
lahf
push
and
push
mov
jmp
call
lods
jnp
add
xchg
cmpsb
add
mov
add
bound
or
je
sub
xchg
xor
ret
testl
pop
add
sbbl
inc
push
pop
mov
fadds
inc
xchg
mov
aad
loopne
pop
pop
mov
fwait
stos
out
pop
mov
in
sti
aad
xlat
push
ret
inc
mov
mov
out
xor
jb
xor
xorl
jmp
xor
push
loopne
mov
and
dec
add
out
fcoms
mov
or
jmp
imul
and
test
arpl
ja
repnz
cmp
push
lcall
call
xor
push
shll
arpl
mov
add
daa
mov
inc
fsubl
cmp
jno
dec
pushf
imul
cld
and
lret
pushf
pop
and
cmpsb
dec
jmp
pushf
pop
and
fwait
inc
and
in
andl
add
xchg
mov
add
add
add
incb
inc
repz
jl
adc
sub
je
pushf
dec
and
mov
pop
cmp
repz
sub
xor
int
adc
rorb
ficoms
sub
andb
and
and
push
int
mov
cmpsb
sub
sbbb
add
sti
mov
loope
dec
out
stos
sbb
mov
dec
int
ret
arpl
jb
ljmp
into
std
pushl
out
sub
add
xor
lea
add
xor
add
inc
in
cwtl
mov
mov
lret
mov
lods
icebp
fwait
jecxz
stos
repz
add
in
add
pop
xor
add
lcall
push
sub
pusha
in
sbb
pop
jb
add
push
sub
mov
sarb
add
sub
add
xchg
xor
pop
out
int3
mov
aaa
pop
orl
mov
add
rcr
push
stos
fistps
mov
icebp
lods
add
lods
daa
add
xor
cltd
cmpsl
shr
pop
sbb
push
mov
add
xor
add
xor
jl
ficoms
orl
add
adc
bound
sub
cmp
fisttpll
jmp
imul
xchg
ss
rol
ss
orl
in
sbb
mov
loopne
mov
push
jmp
ret
leave
xor
mov
mov
mov
sub
mov
mov
push
push
cwtl
nop
lret
call
inc
int3
and
lahf
mov
push
xor
mov
xor
add
in
add
cwtl
adc
add
mov
je
test
add
cmpsl
sbb
enter
xor
inc
out
jmp
nop
imul
lcall
adc
das
push
jl
inc
out
push
sub
test
imul
inc
adc
mov
or
mov
or
or
imul
add
xchg
and
mov
dec
mov
push
stos
mov
adc
push
jecxz
inc
mov
mov
out
mov
jecxz
test
add
add
stc
cmp
clc
add
lods
adc
andb
rcr
pop
adc
add
and
unpcklps
inc
push
dec
cmp
imul
cmc
mov
out
push
es
add
rcl
jbe,pt
jb
pop
add
daa
xor
xor
add
cs
and
add
inc
xchg
pop
aad
xchg
call
ss
je
jmpw
add
cmp
jle
vpcomuw
add
leave
std
call
xor
mov
adc
jmp
xor
pusha
mov
add
xor
std
bound
add
jmp
add
ret
jno
adc
je
mov
jo
daa
add
xor
mov
add
mov
adc
outsl
jne
add
mov
aad
stc
xor
jae
mov
adc
mov
incl
add
mov
mov
adc
incl
add
mov
push
sbb
mov
mov
add
add
enter
clc
mov
mov
je
mov
test
xchg
adc
dec
push
and
sub
dec
push
daa
daa
int
aam
test
xor
mov
xor
xchg
sti
std
decl
mov
aaa
mov
fildll
aaa
jae
add
repnz
inc
cmp
or
xor
je
insb
cmp
ret
stos
outsb
fldl
jmp
mov
jmp
mov
jmp
mov
aad
xor
mov
stos
jbe
aas
sub
pop
shlb
jecxz
hlt
add
jle
add
out
add
jb
inc
lret
jne
mov
push
stos
inc
push
cmp
push
xchg
jnp
inc
cld
out
in
jb
cs
xchg
add
jmp
jno
jo
icebp
cld
ljmp
cwtl
dec
or
ret
jae
sub
add
jne
scas
push
add
jae
and
pop
in
xor
xor
and
aad
xor
call
adc
mov
adc
or
ret
sub
stc
sbb
pop
lea
xchg
inc
hlt
ret
arpl
lods
jno
sbb
cmc
pop
mov
or
test
mov
mov
cmp
add
inc
cld
cmp
or
add
aas
lods
popa
out
pop
nop
stos
mov
cmp
push
cli
jge
sub
push
sahf
dec
aas
jmp
inc
cli
std
out
clc
xchg
fsubl
jb
jge
movsb
add
cmp
mov
std
cmpl
xor
aas
andl
inc
xchg
or
call
add
aaa
pop
mov
mov
cltd
xor
add
push
push
push
lahf
js
or
push
add
push
dec
add
js
subl
push
jecxz
push
movl
or
adc
cld
mov
or
je
xorb
aaa
mov
inc
push
xor
inc
out
aaa
test
daa
jbe
addb
push
jmp
add
lods
daa
or
lods
and
sub
add
xor
inc
ljmp
xor
repz
jl
mov
rorb
inc
je
dec
mov
add
mov
out
jmp
add
lods
mov
mov
add
jbe
and
jmp
or
outsb
inc
add
adc
xchg
add
test
jecxz
mov
jg
lds
out
jl
xchg
cmpsl
or
lcall
lds
xchg
inc
xor
jge
arpl
mov
dec
fistpll
pop
je
ds
sbb
adc
add
mov
xor
subb
sbb
lea
lock
mov
push
add
stos
pusha
lret
ljmp
add
loope
icebp
push
notb
aad
hlt
cmp
add
mov
test
wbinvd
repz
aad
pusha
repz
jo
ss
rcr
or
test
push
mov
cmc
repz
dec
mov
pusha
cmc
ss
icebp
sub
mov
icebp
xor
mov
jns
or
jno
push
mov
jne
adc
push
mov
jne
or
push
xchg
cmc
mov
push
adc
add
dec
in
and
aas
mov
adc
mov
adc
mov
stos
mov
in
xor
push
inc
rorl
jecxz
mov
jnp
add
inc
shr
add
subl
push
jecxz
fldenv
mov
dec
push
or
cmpl
fmuls
jmp
push
pushl
inc
jns
subl
loop
mov
cmp
adc
pusha
sbb
or
lahf
jmp
fldcw
sbb
mov
fiadds
imulb
add
test
or
xor
outsl
je
adcb
test
push
mov
and
mov
daa
or
xor
add
mov
je
or
jae
xor
rcrb
es
mov
sahf
ret
adc
fisttps
out
sub
jo
add
jno
in
orb
ss
out
out
outsl
ror
repnz
roll
adc
push
addb
mov
nop
cmpsl
add
aad
and
mov
push
inc
pop
sub
jg
jge
rclb
add
adc
push
and
add
shrl
sbb
out
call
es
fisttps
push
adc
jmp
lcall
sub
ja
pusha
push
sbb
jo
xchg
shl
adc
bound
xrelease
push
out
add
xor
mov
movsb
push
add
aam
out
cli
cld
jmp
arpl
jmp
inc
xchg
in
xor
repnz
sub
add
pushf
rcrl
sbb
sbb
xor
jae
sub
faddp
ja
jg
and
add
roll
push
cltd
push
xchg
sbb
or
enter
leave
xlat
std
mov
out
push
or
stc
add
lods
inc
add
pop
decb
cwtl
jl
mov
test
mov
sub
rcll
icebp
shll
enter
jecxz
push
cmpsl
stos
pop
inc
xor
mov
outsl
rcl
mov
mov
shll
enter
jecxz
dec
add
xor
mov
cmp
jns
lock
push
xor
je
adc
aam
add
sub
add
hlt
xor
ljmp
add
imul
xor
inc
adcb
push
ss
sub
sub
jle
pop
sub
jmp
pop
fidivl
pop
repz
push
jg
movsl
and
lret
lahf
test
adc
outsl
loope
xchg
inc
das
test
fbstp
out
xor
cs
xchg
mov
push
and
mov
adc
bts
push
test
add
or
out
bound
mov
fbstp
ja
aas
nop
cli
push
out
in
jmp
sbb
out
mov
into
out
lds
sub
idiv
nop
or
lock
jne
pop
sbb
icebp
jle
andl
imul
std
ret
pop
sub
add
out
push
pusha
push
xchg
in
stc
mov
lcall
mov
out
mov
inc
call
cmpl
xchg
imulb
ja
popf
jne
mov
out
std
leave
jmp
and
pushf
inc
lock
inc
pop
aas
jmp
sub
ja
sub
add
sbb
out
std
add
or
lock
clc
mov
push
gs
xlat
std
mov
sbb
pushl
or
sti
movhps
inc
sbb
pop
shrl
pop
dec
jmp
push
adc
in
in
pop
add
dec
mov
mov
test
push
adcb
dec
mov
addr16
cmpsb
inc
add
sti
decl
add
std
jns
arpl
jg
cmp
adc
mov
push
push
std
add
xor
jge
decl
xor
push
aam
mov
add
out
jge
fildll
add
lods
scas
add
into
jb
jnp
add
jg
sbb
jb
jnp
push
add
add
shl
test
mov
xchg
xor
or
add
mov
mov
data16
add
mov
mov
dec
mov
je
mov
sti
push
add
adc
cmpsb
mov
out
test
adc
add
mov
mov
lahf
insb
sub
dec
mov
in
out
add
xor
fwait
loop
test
fld
sub
and
jns
out
ret
jmp
lock
adc
sub
jle,pn
out
incb
xor
add
xchg
pop
add
sbb
mov
bound
mov
in
mov
mov
lcall
jo
orl
call
jmp
ljmp
syscall
jnp
mov
add
call
call
js
xor
add
adc
xchg
ljmp
xor
std
mov
xor
mov
clc
pop
sub
pushf
inc
int
jb
lea
data16
pop
or
lahf
js
fsubrs
mov
sbb
test
out
and
sldt
iret
rclb
pop
push
call
and
dec
inc
sbb
cmp
mov
push
mov
inc
push
call
xor
sbb
es
xchg
push
push
mov
inc
push
call
xchg
je
ret
dec
mov
cmc
call
nop
mov
mov
adc
test
sbb
add
dec
adc
je
dec
add
scas
je
add
fsts
xchg
add
jg
mov
clc
dec
lock
jae
cli
mov
pusha
and
push
in
call
jb
add
xor
dec
jo
mov
mov
jle
add
fisttps
xor
lock
stos
out
mov
mov
or
je
add
mov
add
orb
pop
jbe
or
add
xor
adc
std
cmpsb
dec
inc
lock
or
add
clc
mov
mov
mov
pusha
in
fiadds
fcomps
inc
xor
inc
sti
push
jmp
out
repnz
in
int3
ljmp
xor
or
sbb
jb
adc
dec
jae
push
bound
popf
lods
jmp
add
cld
mov
mov
xchg
jmp
jmp
add
mov
repz
cld
aam
mov
idiv
push
out
repnz
mov
cmp
push
add
jecxz
pusha
out
out
mov
push
call
xor
jnp
sbb
adc
rorb
inc
leave
pop
aas
jmp
inc
cli
clc
sahf
add
jge,pn
and
adc
and
inc
call
pop
mov
xchg
clc
outsb
fwait
inc
icebp
bound
jne
out
andl
lret
ror
jmp
in
mov
sbb
mov
shl
jmp
adc
add
out
ljmp
out
add
jmp
inc
pop
sti
in
add
jg
sub
dec
or
mov
push
jg
pusha
addr16
aad
decl
cli
push
mov
xchg
xorl
xor
jg
cmpl
decl
out
ldmxcsr
jg
out
cltd
mov
cmovbe
sub
add
push
inc
adcl
add
add
and
push
push
mov
js
add
jns
js
fcompl
xorl
sti
dec
movsl
pop
pop
ljmp
push
test
push
push
sbbb
or
add
call
das
or
mov
jecxz
jmp
test
sti
das
add
sbb
add
arpl
inc
mov
or
shr
mov
cld
sti
mov
ljmp
test
adc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
jmp
xor
jmp
xor
in
sbb
mov
pop
mov
das
iret
inc
xor
and
jno
pop
fadds
shlb
pop
int
and
pop
je
xor
adc
add
sbb
lds
sarb
leave
pop
jne
leave
pop
sub
rorl
xor
push
xor
add
insl
add
jns
pop
push
pop
cli
xchg
jb
or
or
rorl
mov
mov
fs
imul
outsb
mov
jae
outsl
mov
and
jae
cmp
jae
ljmp
jae
jae
je
ja
imul
push
adc
or
add
pop
pop
add
pop
pop
add
dec
pop
add
dec
pop
add
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fcoms
add
fcoms
add
xor
and
xor
jmp
or
add
or
inc
mov
push
scas
in
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
fcomps
aam
adc
mov
bound
add
add
bound
jecxz
ja
add
and
adc
inc
ret
jmp
add
xor
cli
pop
adc
or
jo
sbb
xor
add
jo
insb
das
outsb
popa
add
js
jae
ja
cmp
push
add
pusha
add
arpl
adc
bound
sub
xor
sub
adc
popa
jns
add
mov
add
js
outsl
pop
sbb
ss
and
imul
jbe
push
insl
jns
je
bound
arpl
insl
jo
xor
pop
jb
std
jno
xchg
or
sub
mov
xor
gs
pop
lret
fs
dec
in
outsb
dec
shlb
add
pop
fdivs
inc
faddl
das
add
xor
add
outsb
push
or
add
cwtl
pusha
fs
cwtl
add
popa
arpl
in
fs
xchg
add
mov
jecxz
jb
loope
jb
rorb
imul
insb
pop
aam
add
jno
in
push
mov
daa
add
xchg
adc
insb
mov
jno
jnp
addr16
add
xchg
ja
jo
js
popa
push
popa
or
mov
add
enter
fnstenv
and
xor
and
add
addr16
imul
bound
push
mov
out
add
adc
jno
insb
mov
jbe
add
jbe
je
popa
out
sbb
push
sub
ret
pop
add
ret
adc
mov
adc
aas
xchg
bound
xor
cmp
gs
arpl
or
jno
or
pop
adc
sbb
sub
outsb
shrb
inc
jne
into
push
jno
rcll
outsb
enter
enter
mov
and
test
push
jo
add
mov
add
cmp
ss
and
sbb
ja
jmp
in
add
outsb
out
push
add
je
insl
bound
jae
ja
jo
adc
sub
arpl
adc
and
imul
jo
xor
outsl
out
gs
pop
pop
popa
jns
pop
sub
xor
adc
jnp
pop
outsb
out
pop
push
imul
cmp
ret
insl
mov
popa
add
popa
pop
outsb
scas
insb
add
je
mov
add
data16
gs
je
arpl
insl
insb
insb
xor
jo
dec
arpl
push
addr16
ret
dec
js
pusha
in
push
nop
dec
add
insb
mov
add
add
jae
in
pop
addr16
or
xor
pop
mov
addr16
lret
add
mov
add
into
pop
ja
mov
jbe
push
cltd
push
pop
or
add
pop
push
xor
pop
pop
fldlg2
pusha
ja
adc
shlb
add
je
js
jo
add
je
arpl
je
je
push
cmp
add
jb
jbe
bound
xor
push
xorl
push
push
std
gs
popa
out
bound
bound
xlat
data16
ja
jbe
ja
jae
add
imul
gs
push
pushw
adc
pusha
adc
jne
adc
pop
adc
push
jbe
ja
data16
data16
jmp
addr16
insb
add
push
push
rclb
jno
cmp
lea
add
insl
jo
mov
insl
insl
setns
or
jb
sti
jg
add
push
insb
outsb
mov
jnp
push
lret
outsb
jno
ret
xor
inc
jne
lret
jno
adc
jb
mov
sbb
add
jne
jmp
adc
add
mov
adc
jae
push
jae
push
jbe
jne
outsl
ljmp
outsl
decb
sub
sbb
xor
sub
sub
jb
bound
sbb
outsl
sub
add
cmp
and
outsl
arpl
adc
ss
adc
cld
cmp
add
fsubs
xor
jmp
cmp
subl
pop
outsb
imul
gs
arpl
xor
xor
xchg
add
pop
jne
fucomip
jb
rcrb
ja
mov
enter
aam
pusha
xlat
in
insw
into
dec
pusha
arpl
inc
jb
xchg
inc
push
jo
in
jb
nop
add
xor
pop
outsb
jge
pop
add
mov
pop
insl
xchg
pop
outsb
push
in
pop
pop
arpl
addr16
fisubl
dec
enter
xor
xor
pop
jno
mov
bound
in
gs
aam
pop
or
adc
js
jo
jno
arpl
add
jne
addr16
pop
out
xlat
pop
mov
jne
ja
push
imul
dec
jb
jo
js
adc
pop
add
shrb
imul
dec
jne
out
xchg
inc
arpl
push
push
ja
adc
jb
pop
mov
je
out
push
data16
dec
popa
out
pop
imul
cmp
push
adc
jno
jae
pop
pop
outsl
add
adc
insl
lret
adc
mov
insl
mov
adc
xchg
insl
imul
add
jo
jmp
std
push
addr16
adc
rcrb
inc
ficoms
jno
pusha
arpl
imul
xchg
push
jb
xchg
data16
xchg
arpl
xor
popa
adc
addr16
sub
jo
int3
pop
push
popa
sarl
popa
add
add
outsl
imul
jae
cmp
cwtl
imul
imul
outsb
je
stos
and
xor
jb
insb
std
pop
add
sub
sub
add
cmp
jnp
insb
popa
sbb
jb
cmp
sbb
gs
daa
inc
popa
addr16
xor
data16
outsl
je
sub
fsubrs
jbe
outsb
arpl
add
cmp
outsb
add
insb
pop
outsb
fnsave
add
out
insw
inc
fildll
nop
imul
add
fcompl
sbb
pusha
insb
adc
lcall
xor
xor
mov
add
pusha
xor
add
pop
pop
xor
addr16
pop
pop
add
mov
mov
jne
nop
mov
xor
nop
sbb
test
add
iret
pop
popa
push
iret
pusha
add
insb
je
iret
add
adc
pusha
dec
adc
xor
xor
push
sbb
inc
mov
and
fs
cmp
out
push
dec
xchg
pusha
unpcklps
pusha
xor
pusha
aad
mov
loope
mov
out
add
faddl
pop
int3
adc
iret
aaa
inc
jno
adc
mov
adc
arpl
cmp
pop
xchg
xor
pop
adcb
xchg
cmp
pop
xor
add
add
push
mov
mov
xor
imul
xor
aad
push
sub
clc
or
clc
pop
push
cs
inc
or
loope
add
xor
add
outsb
nop
sbb
pop
xchg
lar
loop
push
cmp
outsb
xchg
dec
arpl
add
or
adc
outsl
mov
dec
xchg
dec
arpl
movsl
cmp
jmp
test
sub
iret
xchg
cmp
xchg
inc
arpl
pop
add
aas
sub
jb
gs
push
and
sub
and
shlb
push
jo
das
sub
test
jb
inc
imul
aaa
pop
insb
mov
je
jo
push
mov
sub
xchg
bound
mov
add
or
inc
dec
adc
push
dec
inc
dec
popa
push
dec
pop
bound
inc
push
inc
xor
inc
xor
add
add
adc
add
or
xor
add
out
mov
add
cmp
push
jle
push
inc
insl
xor
inc
out
insl
push
jmp
pop
insl
es
jns
pop
insl
pop
mov
jb
adc
pop
outsb
loop
fs
aad
insl
jb
sahf
pop
add
xchg
jb
fstpl
pop
add
mov
add
add
xor
pop
insb
lret
adc
add
sub
arpl
aas
add
push
push
inc
cli
pop
dec
xor
fs
push
push
cmp
jb
cmp
jb
aas
lds
adc
add
adc
bound
dec
mov
inc
add
pop
adc
dec
xchg
outsl
loop
xchg
jno
inc
test
add
push
mov
adc
add
adc
pusha
leave
cmp
push
aam
pop
insl
fiadds
dec
fdivrl
push
mov
into
out
mov
inc
xor
sbb
insb
adc
push
dec
inc
push
mov
arpl
jge
je
jb
add
xor
popa
sub
add
or
add
or
cmp
add
sub
add
sbb
add
xor
call
xor
movsb
fcomi
inc
jle
inc
imul
jmp
cmp
jmp
dec
xor
adc
add
add
and
dec
inc
popa
dec
xor
add
adc
inc
add
sub
push
add
dec
push
imul
popa
jae
adc
add
repz
decl
addr16
cwtl
adc
add
into
std
decl
addr16
jne
insl
outsb
je
adc
add
pop
add
aas
outsl
mov
imul
jo
or
je
dec
pop
add
xor
push
ja
sub
push
arpl
add
cmp
inc
insl
test
jno
adc
jo
pop
enter
into
add
xor
add
enter
sbb
outsl
addr16
push
pop
sbb
test
add
mov
add
adc
scas
push
jb
test
jbe
fdivl
add
mov
add
add
loope
push
jno
adc
lds
cmp
inc
pop
mov
aaa
cmp
cmp
insl
arpl
lea
ss
pop
push
sbb
xorl
pop
xchg
sbb
cmp
aas
jb
imull
inc
add
insl
ljmp
cmp
dec
dec
cmp
push
cld
mov
inc
pop
dec
add
cli
notb
cmp
std
or
add
icebp
inc
adc
test
or
fisttpl
loope
int3
dec
fbstp
add
sbb
dec
into
cmp
inc
sub
push
or
inc
sbb
je
addl
mov
gs
xchg
repz
outsb
pop
dec
xor
cmp
leave
dec
cmp
push
sbb
je
inc
inc
sub
arpl
push
imul
push
xor
popa
aaa
popa
mov
inc
sub
nopl
stos
add
je
loopne
sub
cmp
jb
popa
imul
pop
sub
xor
push
lock
outsl
cmpb
cs
daa
arpl
jo
inc
cmp
and
pop
inc
and
add
or
xor
jae
call
push
or
fmuls
outsb
les
outsb
je
fs
outsb
ja
push
arpl
outsl
jle
add
add
and
movsb
add
xor
or
mov
in
and
out
aas
rcrb
and
push
aad
or
popf
fs
data16
inc
lahf
pop
insl
add
cwtl
dec
cmp
push
je
sbb
dec
or
xor
inc
insl
xchg
addr16
gs
outsb
sub
bound
or
sub
inc
fadds
addps
adc
insl
jp
loope
pop
pop
and
xor
popa
insl
or
fs
fldt
dec
sbb
and
dec
int
and
adc
push
adc
sub
fmull
xor
out
pop
adc
sub
cli
out
psubd
insl
sarb
dec
push
xchg
add
lea
inc
add
xor
mov
cs
push
outsl
inc
dec
imul
inc
or
jb
adc
xor
jo
add
sub
pusha
inc
push
dec
inc
xor
fs
xor
add
xor
and
mov
push
shrl
xor
push
adc
push
dec
outsb
rcr
pop
xchg
fisttpll
mov
lret
sbbb
imul
jo,pn
in
inc
arpl
fs
jbe
jae
mov
cmp
arpl
fs
arpl
arpl
jno
ja
mov
adc
push
inc
ja
add
push
js
push
inc
je
push
cmp
jo
divb
jno
add
ja
pop
cmp
jo
int3
add
insl
xor
lret
cmp
insl
imul
pop
push
outsl
fwait
cs
dec
pop
jo
cmpsb
add
mov
cmp
mov
inc
insl
mov
pop
je
imul
fs
data16
outsb
add
dec
adc
cmp
imul
inc
outsb
ds
jb
cmp
adc
outsl
pop
popa
jb
add
sbb
dec
je
cmp
sbb
fs
cwtl
push
imul
push
jae
fmuls
xor
push
push
add
push
addr16
fldt
aam
add
int
push
jno
xchg
inc
xor
inc
push
int3
lea
add
xor
push
xor
pusha
insb
xchg
lods
inc
arpl
add
imul
jb
in
add
decl
pop
and
dec
pop
push
addr16
adc
pop
pop
sbb
pop
push
push
insl
inc
sbb
push
mov
push
arpl
adc
push
cmp
inc
and
fcoms
inc
int3
inc
adc
insb
pop
sub
std
cmp
dec
rorb
pop
xor
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
jmp
add
xor
jmp
xor
mov
out
imulb
add
and
cs
sub
add
rcll
xor
or
das
fistpl
imull
fisttpl
imull
mov
cli
imulb
mov
push
add
xchg
dec
cmpl
jno
outsb
sub
add
inc
outsb
dec
mov
xor
mov
insb
jmp
push
push
orb
cmp
popa
add
inc
add
sub
data16
ss
sbb
pop
jb
or
outsb
jae
push
push
push
fmull
jae
push
je
imul
xor
outsb
jae
push
push
push
pushf
dec
imul
add
xor
addr16
pop
xchg
jb
lret
xor
gs
add
insb
sub
jno
je
push
pop
inc
and
dec
outsl
cmp
outsl
ss
jns
popa
pop
push
xor
pop
jbe
adc
pop
or
insl
dec
add
inc
adc
push
icebp
das
push
stc
rcll
bound
ljmp
add
inc
pop
adc
add
fcoms
in
arpl
mov
xchg
dec
jo
movsb
addr16
xor
inc
inc
jecxz
dec
outsb
ret
insb
lds
jb
ja
jo
imul
pop
add
dec
push
arpl
imul
pop
jb
push
imul
dec
jno
adc
addr16
xor
dec
cmp
add
das
add
pusha
pop
push
inc
xor
or
xor
inc
or
int3
fs
cmp
push
add
xor
push
add
dec
adc
xor
dec
int3
push
or
inc
sahf
insb
in
aaa
cld
bound
aaa
mov
sub
test
lcall
dec
cmp
out
bound
ds
jo
add
dec
insl
cmp
jne
xorl
cs
xor
add
pop
gs
sub
dec
arpl
popa
and
adc
stos
inc
xor
adc
jmp
out
pop
jb
ds
insb
rcrb
lcall
jae
rcll
mov
loopne
mov
inc
addr16
pop
insb
xchg
gs
push
jle
xor
adcl
ja
jne
arpl
pop
es
das
bound
add
imul
pop
sbb
gs
add
and
icebp
inc
outsl
and
add
outsl
les
pop
jb
add
mov
jb
cld
inc
insb
cmpsl
xor
fistl
int
aas
jne
pop
inc
push
enter
cwtl
arpl
insl
outsl
imul
aas
push
cmp
arpl
push
mov
je
mov
xor
test
add
fisttpl
gs
add
and
inc
outsl
xor
pop
pusha
ljmp
subl
pop
arpl
inc
dec
bound
cli
ds
popa
lock
inc
cmp
pop
inc
sbb
adc
push
insl
pop
adc
sbb
xor
int
insb
adc
dec
add
jne
insl
adc
gs
repnz
add
or
je
push
xor
cmp
mov
loop
inc
push
in
outsb
inc
jae
cmp
xor
lods
xor
pop
lea
inc
push
fs
jo
pop
imul
cmp
pop
sub
xor
push
dec
ljmp
push
inc
push
gs
xor
dec
dec
xor
pop
xor
sbb
add
inc
mulb
ret
dec
add
pop
mov
loopne
lds
xor
lret
fs
lods
sub
pop
repz
sub
push
fldenv
push
leave
adc
mov
inc
add
sub
pop
je
sub
push
insl
inc
cltd
aaa
jb
dec
gs
push
inc
add
add
jle
arpl
jns
pop
xor
push
pop
inc
cs
imul
cli
or
sbb
add
cli
push
pop
mov
clc
xor
xor
adc
mov
int
pop
leave
inc
mov
in
popa
mov
aas
jno
in
arpl
mov
pop
add
insb
mov
add
ja
jl
dec
outsl
jbe
jae
pop
xor
xor
pop
xorl
data16
pop
jb
add
imul
pop
and
xor
gs
pop
add
pop
je
sub
pop
inc
xor
dec
jg
je
lds
jb
add
push
outsl
mov
pop
imul
imul
add
jne
xor
push
arpl
loopne
insl
mov
cmp
ss
pop
add
xchg
pop
pop
arpl
pop
add
mov
pop
arpl
xor
arpl
add
lcall
orb
jbe
sbb
add
push
push
pop
and
push
jbe
mov
push
add
or
push
jle
jb
rclb
add
data16
xchg
bound
or
arpl
andb
fwait
bound
stos
cmp
and
cs
pop
rolb
xor
inc
xchg
add
xor
push
arpl
xorl
cmp
ds
push
push
pusha
push
push
xchg
adc
cmp
sub
cmp
pusha
aaa
and
daa
or
or
add
add
push
and
adc
inc
and
sti
push
sbb
pop
xor
fistl
inc
les
inc
xor
push
xor
enter
add
int
arpl
lock
add
pushf
fisubs
arpl
and
xchg
das
outsb
jmp
push
jb
inc
push
jae
xchg
xor
add
insl
dec
adc
inc
pop
cmp
inc
xor
sub
add
hlt
inc
cmp
push
xor
pop
dec
pop
adc
adc
push
pop
inc
jne
add
pop
stos
inc
dec
push
mov
fidivs
je
cmp
xor
inc
mov
pop
outsl
xchg
popa
add
xor
fs
pop
mov
insb
lods
pop
push
jb
add
push
data16
push
data16
xor
movsb
push
jno
fs
imul
push
push
sub
imul
je
ja
outsl
add
push
data16
xor
add
push
inc
cld
decl
arpl
arpl
aaa
push
inc
imul
jb
rcll
xor
pop
insb
in
rorl
xor
aad
sub
je
sahf
xor
testl
gs
mov
aaa
pop
jb
lds
movsl
stos
bound
pop
imul
push
addr16
push
push
fs
pop
add
test
push
bound
aaa
push
xor
pop
pop
pusha
jb
dec
cmp
or
gs
add
sbb
sbb
and
add
push
add
pop
loop
push
out
movsl
inc
negl
add
inc
les
and
lcall
cs
data16
nop
aad
data16
out
les
mov
addb
jge
lods
inc
jge
mov
sub
xchg
daa
out
pop
daa
pop
push
test
inc
add
daa
dec
push
ja
dec
popa
xor
add
pop
push
inc
push
inc
adc
popa
pop
inc
adc
cmp
sbb
pop
push
push
sbb
adc
sbb
and
arpl
call
inc
pop
fcmovu
sub
push
adc
jmp
inc
rolb
pop
rcll
push
mov
fdivl
pop
stos
fstpt
mov
push
jae
push
inc
insl
jbe
pop
jnp
push
inc
xchg
jb
add
xchg
sub
inc
push
pop
aaa
jno
aas
inc
push
adcb
sbb
sbb
push
jb
or
sbb
push
cmp
inc
addr16
pop
and
arpl
stos
push
push
outsl
lcall
je
ljmp
pop
dec
imul
dec
insb
add
js
insb
dec
jb
mov
dec
outsl
add
mov
jae
lcall
inc
rolb
stos
xor
pop
add
lds
insb
popl
jb
jecxz
jb
inc
jo
imul
push
push
push
outsl
jg
inc
popa
sbb
xor
aam
inc
jne
inc
imul
dec
outsl
ss
jae
xor
xor
in
adc
lods
pop
jb
or
pop
adc
arpl
mov
add
push
insl
add
add
int
jne
insb
pop
push
fsubrs
add
fsts
pop
fmuls
dec
add
cwtl
pop
je
pushf
push
push
nop
das
pop
add
push
push
mov
pop
mov
push
add
push
addr16
pop
push
arpl
pop
addr16
push
add
jg
pop
inc
pop
inc
pop
pop
jb
pop
pop
pop
sub
adc
push
push
inc
or
push
cmp
and
out
or
repz
mulb
std
aas
cmp
daa
loopne
lret
aaa
lods
sub
push
mov
and
xor
dec
ret
xor
push
daa
test
test
push
movsl
das
addl
dec
mov
cmp
xor
adc
push
add
push
and
xor
cmp
and
dec
xor
inc
jb
xor
sub
adc
sbb
xor
dec
xor
hlt
daa
arpl
loopne
insb
add
cmp
xor
shl
pop
addr16
shrl
add
add
xor
shll
mov
int
arpl
add
imul
subl
jnp
adc
mov
ss
lea
arpl
sub
dec
pop
pop
jb
jg
pop
cmp
jno
addl
js
cmp
or
gs
and
jae
dec
outsl
add
pop
jae
pop
imul
pop
cmp
jmp
les
dec
outsl
outsb
pop
jae
pop
xor
inc
pop
outsb
mov
add
insl
adc
cwtl
aaa
outsb
inc
mov
gs
push
lods
adc
lcall
gs
insl
lods
adc
fwait
inc
jae
mov
pop
test
outsl
jae
inc
jb
or
fs
pusha
pop
je
dec
dec
add
pop
push
arpl
ds
adc
push
inc
push
popa
jb
out
ds
adc
dec
addr16
das
push
std
cld
das
push
add
lock
add
push
jno
cmc
dec
jo
fisttps
or
add
lret
int3
enter
filds
inc
pop
ret
insl
ret
add
mov
rorb
pop
add
push
inc
mov
pop
popa
popf
sahf
dec
ja
mov
pop
xchg
je
inc
ss
pop
xor
dec
xchg
inc
sub
push
push
dec
push
sub
add
cmp
cmp
sbb
and
testl
push
and
aaa
cli
add
cmp
push
cld
xor
pop
fldl
pop
std
dec
or
cmp
ss
cmc
inc
rorb
and
adc
xchg
push
xor
xor
xor
nop
push
xchg
aaa
jae
subl
and
jp
dec
push
push
dec
arpl
aaa
je
adc
gs
jecxz
popa
cmp
arpl
aaa
je
or
sbb
pop
fsts
out
or
add
dec
xor
dec
and
pop
and
fisttpll
pop
mov
push
inc
arpl
xor
pop
dec
das
sahf
inc
dec
xor
cmp
add
aaa
add
out
cmp
pop
aaa
inc
pushf
hlt
push
jle
and
test
sti
pop
jo
loop
add
loopne
gs
std
pushl
in
pusha
jae
repnz
je
loope
je
jecxz
imul
pop
jo
lock
insb
inc
popa
popa
dec
pop
push
push
mov
inc
xor
cmp
gs
push
popa
jp
decl
add
jae
jl
dec
popa
test
incl
loop
inc
and
outsb
ja
loopne
add
out
push
xor
add
xorb
xchg
outsl
sub
mov
add
dec
cmp
pop
arpl
inc
push
orl
insb
xor
das
cmp
jb
pop
dec
pop
inc
pop
sub
add
xor
insb
xor
repnz
add
inc
add
adc
dec
cmc
or
out
data16
add
xor
arpl
mov
jno
xorl
jb
mov
cltd
push
mov
test
cmpl
aaa
jne
cltd
es
and
xor
xor
push
es
pusha
cmpb
cmp
add
cmp
addr16
pop
in
das
dec
sub
cmp
dec
cmp
inc
inc
es
adc
adc
xor
cmp
and
daa
add
add
mull
xor
push
push
push
mov
add
push
mov
add
and
sub
dec
xchg
xor
push
xor
cld
test
call
addl
shll
stc
call
add
sub
dec
and
add
call
xor
sub
mulb
sbb
ss
arpl
or
push
push
push
and
arpl
add
out
jb,pn
push
and
inc
in
and
and
jno
adc
inc
je
xor
les
add
inc
add
loop
gs
pop
outsl
js
insl
pop
mov
clc
arpl
mov
fisubrs
mov
outsb
cs
dec
pop
gs
add
mull
jg
jno
and
pop
or
add
push
inc
push
pop
push
push
inc
and
insb
popa
dec
jecxz
jae
dec
jne
sub
jmp
inc
add
leave
push
xor
push
sub
mov
dec
cmp
inc
cmp
jl
xor
or
inc
push
cmpsb
idivb
mov
in
inc
push
in
cwtl
inc
insb
nop
mov
arpl
cwtl
dec
addr16
ja
aaa
je
clc
xor
cld
sub
xor
xor
add
push
hlt
in
inc
and
add
xor
test
xor
sub
push
cmp
jmp
cs
sub
adc
cs
push
push
fists
xor
setg
add
adc
and
cs
xor
pop
jecxz
shrb
sub
adc
daa
xchg
cmp
dec
addb
xchg
xchg
add
lcall
add
push
lcall
loopne
dec
push
xor
push
push
push
es
das
cmp
dec
sub
dec
and
outsl
and
pop
or
xor
dec
inc
cs
sbb
and
cmp
aaa
add
cmp
and
pop
test
and
or
addr16
arpl
loop
das
clc
loope
push
sahf
divb
popa
mov
je
orb
test
test
insb
xchg
add
xor
jmp
xor
jmp
xor
jmp
xor
jmp
add
addr16
or
add
cld
das
addr16
pop
aaa
outsb
jmp
popa
aaa
xor
push
xor
mov
pushl
sti
fs
stos
pop
jo
add
outsl
popa
mov
pushl
sti
fs
stos
pop
jae
hlt
outsl
add
hlt
cs
imul
jne
in
pop
repnz
jae
ljmp
push
test
insl
pop
stos
cli
push
or
imul
in
xor
hlt
imul
insb
jno
pusha
xor
out
outsl
outsb
sbb
insb
icebp
jae
stos
cmp
aas
jmp
add
jmp
pop
xor
cld
xor
arpl
sahf
xor
or
sub
outsl
int
sub
insl
ffree
sub
into
cmp
aam
add
fsubrs
xchg
sahf
pop
popa
xchg
xchg
imul
add
xor
add
xor
add
xor
add
add
xor
add
inc
cmp
sbb
addr16
xor
arpl
adc
xor
sbb
inc
or
sbb
and
sbb
loopne
push
sub
xor
jmp
fnsave
out
cmp
xor
cmp
sub
sbb
add
add
das
xor
mov
pop
xor
mov
inc
jb
cmp
push
xor
inc
xor
hlt
inc
sub
inc
xor
aaa
inc
dec
inc
aaa
add
pop
inc
imul
pop
push
es
popa
xor
jno
pop
es
lock
dec
sub
sub
insl
push
sbb
jno
lock
adc
js
add
out
insl
rcrl
xor
pop
addr16
xchg
mov
xor
sbb
push
aas
add
and
into
or
cmp
and
and
lock
and
jmp
insl
ficoms
sti
lock
imul
sub
outsb
inc
cmc
je
inc
dec
imul
xor
imul
popa
popa
inc
imull
cmp
in
push
adcl
inc
negb
test
outsl
pop
loop
jb
adc
jb
imul
dec
out
fs
negl
mov
rep
pop
sbb
data16
pop
jb
inc
dec
gs
inc
add
call
dec
outsl
xor
insb
insl
push
xor
add
push
inc
and
imul
sub
and
inc
loope
inc
sbb
es
test
and
sub
pusha
push
add
ret
sub
bound
push
push
call
pushf
inc
das
jne
in
cs
insb
cld
xor
hlt
lea
icebp
sub
stc
das
jo
aas
xor
add
cmp
xchg
sbb
popa
adcb
pop
aaa
pop
icebp
add
pop
inc
es
xor
ds
inc
adc
ds
sub
push
cmp
xor
in
xor
add
push
or
fsubrp
or
std
adc
aas
loopne
cli
and
daa
or
push
mov
das
shlb
lds
mov
das
xor
and
dec
add
xchg
shlb
sub
inc
mov
sub
inc
pusha
hlt
scas
ds
push
xchg
push
adc
and
jne
and
jno
push
inc
aas
cmp
pop
jmp
add
popa
pop
adc
insb
jmp
arpl
inc
cmp
cmp
jno
push
cs
or
adc
sbb
and
mov
sbb
sti
add
sub
adc
and
push
xor
push
cmp
add
xor
jmp
js
cmp
leave
movd
stos
jmp
js
cmp
inc
adc
add
out
inc
out
lcall
adc
loop
test
das
adc
add
inc
imul
pop
jb
inc
dec
imul
add
jae
popa
divb
sub
pusha
je
dec
js
jl
jno
jp
inc
outsb
fs
imul
jb
loop
push
je
jno
ja
xor
pop
pop
add
imul
xor
xor
add
pop
data16
push
xor
out
sub
xor
add
xor
add
pop
add
xor
sub
mov
xor
add
incl
aaa
xor
add
dec
add
xor
xor
xor
sbb
insl
and
sub
sbb
or
je
add
std
in
sub
lods
push
insl
xlat
mov
push
aas
aad
and
insl
and
leave
pop
add
shll
jbe
pop
add
enter
pop
loope
lea
cmp
add
fwait
sub
cltd
cmp
cmp
pop
xor
aaa
push
inc
dec
ss
das
pop
in
xor
push
push
daa
cmp
sub
and
dec
cmp
xor
sub
daa
add
sbb
adc
out
out
xor
push
and
jecxz
lret
daa
or
cli
es
mov
xor
add
shlb
xor
and
inc
shlb
xchg
inc
les
adc
arpl
xor
lea
sbb
scas
inc
add
shlb
imul
push
pop
jne
adc
push
sbb
outsb
or
je
xor
and
pop
daa
jb
push
and
cli
xor
pop
dec
push
xor
dec
xor
daa
add
in
push
sub
dec
push
jmp
repnz
push
jmp
push
add
xor
mov
xor
add
in
outsb
jmp
imul
outsb
cmpsl
fidivs
sbb
pop
jae
fsubrl
lods
inc
jbe
je
pusha
add
pusha
jb
repnz
insb
pop
out
jmp
loopne
das
aaa
adc
pop
loopne
das
add
mov
push
cmp
mov
pop
dec
imull
push
in
pop
inc
and
push
sub
loop
insl
xor
push
jb
cmc
pusha
push
xor
outsb
add
mull
outsl
lock
test
jb
into
and
pop
cmp
sbb
int3
sbb
jb
mov
jb
sbbb
lods
dec
dec
mov
sub
add
lea
imul
add
push
popa
dec
js
insb
inc
lods
cmp
je
and
dec
add
push
inc
arpl
stc
push
jb
inc
sbb
add
add
add
out
xor
loope
jo
or
in
es
push
push
xor
adc
add
inc
shlb
shlb
out
fildll
sbb
and
jnp
ret
sbb
adc
es
and
push
xor
out
xor
out
xor
out
xor
out
xor
scas
pop
push
xor
ss
sub
push
das
pop
add
inc
or
add
and
dec
sbb
sbb
notl
sub
negb
inc
inc
add
and
adc
sbb
xor
xor
and
daa
add
xor
or
and
add
add
enter
fimull
and
popf
push
and
and
daa
mov
jb
jle
insb
mov
push
test
pop
stos
push
xor
jo
xorl
gs
cmp
adc
arpl
or
movhps
jmp
mov
dec
push
inc
sub
xor
add
daa
jo
das
cmp
sub
dec
adc
push
out
aas
push
jmp
ds
pop
je
imull
outsb
fdivl
pop
mov
push
add
jae
pop
mov
outsb
icebp
pop
pop
xor
jb
push
mov
dec
popa
inc
cmc
inc
gs
cmp
mov
push
inc
pushf
aam
popa
imul
jmp
jo
push
bound
add
xor
subb
push
xor
cmp
insl
sub
inc
mov
xor
push
fidivrl
pop
insl
das
pop
xor
jne
xchg
divb
xor
jno
cmp
xor
cmp
sub
and
pcmpeqw
jo
sbb
mov
enter
and
incl
shlb
add
push
jo
cmp
mov
and
bound
mov
sbb
cmp
add
xor
push
fs
push
push
pop
jge
push
add
aas
push
add
sbb
dec
sbb
sbb
push
add
add
loop
push
add
cmp
out
es
inc
and
flds
cld
das
add
rclb
cmp
out
inc
adc
push
xchg
not
fdivs
jecxz
inc
incb
call
popf
and
in
inc
pop
pop
jge
xor
lcall
aaa
mov
popa
repz
cmp
pop
and
in
ss
negl
push
incl
add
out
pop
sti
cmp
icebp
imul
pushl
add
sub
loop
cld
or
jno
add
push
push
lock
fdivs
adc
add
pop
mov
sub
cli
push
mov
lods
imul
push
aas
xor
call
sbb
icebp
aad
jmp
pop
add
xor
insb
push
pop
pop
jnp
lock
subb
jo
jbe
pop
cmp
or
lock
dec
add
push
cmc
jno
push
jo
pop
sbb
in
dec
add
inc
outsl
add
sub
mov
pusha
insl
daa
inc
popa
and
je
sub
das
add
cmp
pop
imul
gs
push
outsl
data16
sbb
gs
aas
outsb
out
jae
popa
in
cmp
sbb
jne
daa
jno
adc
xor
popa
pop
add
stos
sub
fistps
xor
test
push
push
mov
inc
outsl
inc
add
xor
push
arpl
xor
arpl
aas
and
jge
pop
add
insl
add
add
push
sub
dec
in
and
jl
arpl
daa
sbb
and
rcrl
dec
rorl
lds
sahf
jno
jo
pop
fisubrl
add
xor
and
xchg
test
and
mov
and
sbb
das
arpl
mov
push
adc
adc
xchg
push
outsb
adc
and
adc
xor
xor
dec
xor
std
push
push
push
or
and
adc
push
loope
inc
and
or
push
pop
adc
fbstp
pop
and
jecxz
out
add
std
jecxz
pop
rolb
sti
sbb
hlt
repnz
std
push
xor
add
add
mov
xchg
neg
das
xchg
inc
das
mov
int3
jecxz
repz
add
mov
xchg
mov
xor
mov
cmp
pop
inc
adc
das
inc
add
adcl
add
popa
jmp
pop
in
jno
stc
fdivrs
cmp
lock
adc
insl
dec
sbb
push
inc
inc
add
ss
jae
icebp
hlt
jno
out
aad
cmp
gs
sub
icebp
jno
sub
je
or
imul
lock
popa
lds
data16
add
aaa
ds
sub
enter
mov
leave
jo
insl
xchg
and
jno
and
dec
popf
cmp
je
sub
add
lods
sub
outsl
insb
shll
jmp
push
in
cmp
add
fdivrs
add
dec
inc
add
dec
inc
add
dec
inc
add
loopne
add
fnstsw
add
loopne
add
aas
add
fstpt
add
xor
inc
xor
inc
add
inc
add
sub
add
inc
add
inc
add
add
sub
jnp
inc
add
and
xor
adc
xor
xor
shll
xor
das
inc
xor
sub
inc
xor
sbb
les
xor
sbb
xor
inc
xor
mov
sbb
inc
xor
inc
xor
jl
xor
inc
xor
jp
xor
inc
xor
jge
add
xor
jl
xor
push
inc
xor
push
xor
pop
inc
xor
pop
inc
xor
pop
jno
inc
pusha
jno
ds
jno
fbld
adc
pusha
jno
movsl
popa
jno
pop
bound
inc
les
or
icebp
adc
adc
icebp
adc
icebp
adc
enter
int
add
adc
icebp
adc
shl
adc
shl
adc
mov
adc
mov
adc
icebp
adc
mov
jno
repz
jno
lock
jno
add
xor
jmp
xor
jmp
xor
stos
push
icebp
bound
pop
cld
lcall
cmp
xor
xlat
push
xor
dec
jmp
xor
inc
pop
jmp
xor
repz
sbb
xor
or
push
dec
insl
adc
xor
repz
cmc
bound
push
sub
jecxz
icebp
or
xor
loope
add
xor
add
sub
add
jo
outsl
mov
inc
jno
adc
or
mov
je
xor
add
adc
and
jno
and
je
and
adc
push
inc
xor
or
cmp
insb
hlt
pop
das
cs
inc
insb
add
daa
jo
mull
popa
jb
xor
mov
sub
test
xor
add
dec
adc
adc
jo
dec
pop
imul
popa
push
cmp
arpl
inc
popa
push
sti
xor
xor
add
test
arpl
stos
es
cltd
pop
das
gs
scas
xor
sbb
movsb
pop
addr16
nop
sub
lret
arpl
xor
xchg
xor
pop
sub
add
fadds
adc
push
jo
jmp
jbe
dec
daa
gs
xor
iret
adc
daa
push
add
adc
arpl
dec
daa
inc
iret
sbb
arpl
sub
dec
add
les
sub
enter
int3
jl
arpl
ficoml
mov
int3
xor
or
aam
cmp
sub
icebp
int
xor
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
add
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
add
add
dec
adc
add
add
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
add
or
add
fcoms
add
fcoms
add
enter
enter
fcoms
add
fcoms
add
enter
enter
cwtl
adc
add
adc
add
adc
add
adc
add
adc
add
add
dec
adc
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
add
insl
add
xor
add
insl
add
xor
add
insl
add
xor
add
insl
add
xor
add
insb
loopne
dec
add
lret
into
and
xor
hlt
addr16
insb
loopne
push
in
add
dec
add
xor
add
outsl
add
sahf
insl
add
xor
and
insl
add
xor
or
insl
add
insl
add
add
xor
add
out
xor
inc
xor
jecxz
and
ds
xor
ljmp
and
xor
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
rorl
xor
repz
aam
xor
rcl
ss
cmp
mov
pop
aaa
and
cmp
icebp
and
adc
pop
cmp
lock
add
dec
cmp
out
sub
add
or
call
sub
push
out
pop
and
decb
sbb
inc
or
jmp
xor
pop
fbld
push
add
push
call
pop
and
jecxz
and
adc
aaa
xor
clc
xlat
sbb
add
xor
jmp
std
in
into
addb
xor
std
in
adc
jmp
cmpsb
cmp
in
addb
mov
add
mov
add
pop
adc
std
decl
std
add
std
add
lcall
decl
std
add
std
add
std
add
add
or
add
add
sbb
std
lcall
adc
std
decl
fcoms
add
adc
dec
cmp
int3
adc
add
adc
add
cmp
enter
enter
cwtl
cmp
mov
decl
outsl
add
xor
jle
add
xor
pushl
outsl
std
data16
xor
call
add
xor
incl
add
ja
add
outsl
std
pushl
jbe
outsb
std
xor
lcall
outsb
std
pushl
insl
std
pushl
insl
add
xor
insl
std
imulb
add
jno
pushl
or
addl
xor
adc
insl
add
xor
add
dec
add
mov
addl
mov
pop
test
out
and
addl
xor
add
adc
add
xchg
out
inc
adc
add
movl
xor
addl
add
movl
xor
andl
pop
test
adc
andl
out
inc
xchg
pop
test
adc
add
adc
addl
add
xchg
out
and
xorl
out
add
and
jmp
xor
jmp
xor
and
or
adc
jmp
mov
add
mov
sub
and
leave
xor
leave
xor
leave
mov
or
adc
leave
xor
jmp
xor
jmp
lods
adc
jmp
sub
add
and
loope
adc
jmp
xor
loope
adc
jmp
enter
mov
adc
or
adc
or
adc
add
adc
add
add
push
adc
add
add
pusha
adc
add
add
pop
adc
add
add
dec
adc
or
adc
or
add
adc
add
adc
or
adc
add
adc
add
adc
or
adc
add
adc
or
adc
add
adc
or
adc
or
adc
or
adc
add
jae
pushl
imul
xor
add
imul
cmp
add
imul
xor
incl
cmp
ljmp
jae
add
imul
xor
add
jae
add
add
jae
ljmp
imul
xor
add
jae
add
jae
add
cmp
xor
add
jne
add
insl
add
sub
pushl
insl
add
sub
add
test
add
test
add
insl
incl
xor
xor
jecxz
jnp
jecxz
jnp
add
adc
jecxz
adc
add
adc
jecxz
jnp
add
add
adc
jecxz
adc
jecxz
adc
in
adc
xor
add
adc
add
adc
add
adc
jecxz
jnp
add
adc
xor
add
jnp
in
jnp
add
adc
add
adc
in
jnp
add
adc
jecxz
jp
in
adc
in
adc
push
sub
add
xchg
add
sar
jmp
cli
jmp
adc
jmp
xor
jmp
lea
imul
xchg
add
xor
call
push
jp
push
xor
push
xor
call
push
jp
call
adc
imul
xchg
add
adc
imul
add
xchg
add
adc
ljmp
adc
add
adc
std
decl
jge
enter
fcoms
or
fcoms
add
adc
add
cwtl
adc
or
mov
or
adc
add
mov
or
push
add
adc
or
dec
adc
add
pop
adc
or
add
add
dec
push
add
push
or
push
or
push
add
or
add
adc
add
jae
add
xor
add
imul
jae
add
xor
or
imul
jae
add
xor
add
imul
icebp
push
or
imul
repz
or
push
add
imul
icebp
push
or
push
or
add
imul
icebp
push
add
imul
xor
or
push
or
push
or
imul
repz
or
push
or
insl
add
xor
or
add
jae
add
xor
add
adc
add
aam
add
adc
add
adc
add
aam
add
adc
add
aam
add
xor
add
out
xor
inc
jno
out
add
icebp
xor
add
adc
inc
icebp
xor
add
adc
inc
xor
inc
icebp
adc
add
adc
add
xor
add
adc
inc
xor
add
xor
inc
xor
add
adc
add
adc
inc
xor
inc
xor
inc
jno
xlat
inc
xor
add
adc
fnstenv
aam
fnstenv
aam
jmp
jb
call
jb
add
add
jb
call
xor
jmp
xor
stc
xor
pop
jmp
repnz
jmp
repnz
fnstenv
adc
jmp
repnz
jmp
repnz
stc
xor
fptan
rcrl
jmp
xor
pop
fptan
sar
call
xor
stc
xor
pop
stc
xor
add
sar
incl
add
adc
clc
sarl
add
sar
decl
adc
clc
sar
pop
or
add
fcom
aas
and
adc
and
adc
clc
sar
pop
fcoms
and
ficoml
and
jns
add
adc
add
jns
add
jns
add
jns
add
adc
add
adc
add
adc
add
add
adc
add
add
std
lcall
std
add
sbb
add
imul
xor
add
imul
sub
imul
sub
push
stc
pop
xor
imul
add
imul
sub
imul
xor
pushl
imul
and
imul
imul
add
imul
xor
pop
sub
push
stc
pop
xor
adc
add
adc
sti
push
adc
add
out
inc
adc
add
adc
add
adc
sti
cs
add
adc
sti
push
adc
add
out
out
jae
add
sbb
sti
ficoms
out
jae
add
adc
repz
and
repz
adc
repz
add
add
repz
and
add
add
add
add
hlt
xor
repz
repz
hlt
xor
repz
jae
sub
sbb
sub
jae
sub
pop
add
xor
sbb
jmp
std
jb
jmp
add
xor
test
xor
jmp
loop
add
xor
add
xor
add
ret
jmp
xor
test
mov
push
add
xorb
xor
adc
jmp
sub
push
add
dec
push
add
sbb
addps
add
or
adc
add
sbb
pop
sbb
adc
push
add
or
cmovs
prefetcht1
add
pop
push
add
or
add
gs
decl
adc
add
push
es
dec
adc
add
mov
std
call
inc
std
clc
cmp
decl
adc
std
pushl
std
jmp
xor
add
jnp
add
jg
call
decl
sub
inc
jnp
add
jnp
add
repz
cmp
jmp
fwait
sub
push
jnp
add
jnp
add
xchg
daa
incl
outsl
sub
inc
sub
idivb
add
jnp
add
dec
and
fisubrs
sub
into
jp
add
jnp
add
pop
and
mov
sub
incl
add
jnp
add
adc
mov
sub
jle
out
xor
add
adc
and
lahf
sub
xor
add
adc
add
adc
add
adc
add
adc
sub
es
sub
push
jo
sub
jo
sub
jo
sub
outsl
sbb
out
outsl
mov
sub
add
outsl
lret
sub
outsl
shrl
pop
sub
outsl
subl
popa
sub
outsl
xor
outsl
xor
outsl
sti
sub
outsl
in
daa
mov
lret
dec
outsl
std
mov
dec
outsl
std
inc
sbb
inc
sbb
push
or
jno
outsl
std
push
sbb
sbbl
outsl
std
mov
outsl
std
ret
pop
outsl
std
fwait
pop
outsl
std
fisttps
std
iret
add
dec
outsl
std
mov
pop
outsl
std
std
dec
outsl
std
insl
dec
outsl
std
jns
outsl
std
sbb
xchg
or
xchg
outsl
std
adc
sbb
jmp
or
std
leave
push
outsl
std
test
fidivrs
std
lcall
cmp
fidivl
std
call
cmp
decl
adc
add
add
std
lcall
add
pop
xor
std
incl
std
lcall
std
lcall
std
ljmp
xor
std
lcall
ss
jmp
adc
add
ss
dec
adc
add
std
incl
ss
fcoms
add
loopne
std
jmp
xor
decl
inc
and
sahf
mov
call
jnp
add
add
xchg
and
jle
and
jbe
and
outsb
jmp
jmp
and
pop
xchg
and
push
jmp
decl
and
inc
mov
and
ss
add
andl
push
jnp
add
cltd
sub
push
xchg
sub
sub
mulb
out
data16
out
daa
fimuls
daa
call
adc
dec
mov
sub
add
mov
adc
sub
insb
push
sub
insb
sbb
xchg
jle
in
sub
cmc
daa
outsb
insb
or
data16
pop
sub
and
push
insb
and
dec
insb
dec
sub
das
sub
insb
pop
daa
ss
jnp
cs
dec
daa
es
dec
daa
push
insb
mov
daa
push
insb
jns
push
insb
in
imul
add
imulb
daa
out
imul
fisubrs
es
imul
imul
pop
imul
packssdw
cmp
dec
imul
push
imul
dec
imul
push
imul
dec
imul
push
imul
dec
imul
xor
arpl
std
jnp
push
adcl
adcl
mov
push
xchg
push
push
jmp
add
adc
jmp
adc
leave
adc
mov
adc
sbb
push
or
push
imul
jnp
imul
add
push
add
push
ja
dec
push
add
push
decl
lcall
jbe
ljmp
dec
jbe
inc
jbe
dec
jbe
lcall
push
add
add
add
outsl
dec
jbe
call
jbe
pushl
jbe
call
jne
fdivs
decl
push
add
mov
jne
decl
push
add
lds
jno
mov
xor
pop
push
mov
add
xor
leave
pop
pop
xchg
in
bound
add
add
xchg
cmc
out
xchg
in
bound
jo
insb
add
repnz
pushl
add
ffree
in
aad
out
pusha
lret
mov
xor
insb
rcr
out
push
xlat
out
pusha
lret
hlt
xor
out
pusha
nop
dec
jno
adc
xor
out
pusha
nop
addr16
add
incl
je
insb
andb
andl
push
in
cmc
push
repz
add
push
mov
ret
mov
out
shl
add
adc
repz
xchg
ljmp
jb
add
jg
or
adc
out
rorl
rol
aas
rcll
or
jecxz
out
and
lret
jecxz
jecxz
repnz
aad
add
adc
mov
add
add
xchg
clc
or
adc
mov
clc
fsubr
testb
inc
rcl
bnd
fsubrs
jno
repz
lcall
insb
lret
arpl
xor
push
test
out
ds
jl
pop
jne
shll
pop
hlt
jae
arpl
ds
pop
sti
bound
dec
dec
es
sub
loope
sbb
stc
jae
and
pusha
or
in
cwtl
xor
data16
push
outsl
dec
insl
imul
lods
add
ja
jae
push
data16
cmc
dec
std
jmp
adc
fs
insl
call
adc
scas
outsb
dec
rcrb
or
ds
cmovbe
add
popa
bound
movsb
cmovae
inc
insb
fs
jne
insb
cmc
push
std
jmp
cmovae
bound
js
outsb
push
push
inc
gs
inc
insb
arpl
sbb
bound
jecxz
jo
add
out
bound
push
push
add
jle
jmp
pop
ds
pop
test
out
jbe
add
add
scas
call
jne
jg
dec
and
shlb
test
fs
jp
mov
jae
fucomip
jno
mov
in
icebp
jbe
jp
adc
mov
in
outsl
lock
dec
xor
in
adcl
out
loop
out
clc
add
xchg
icebp
cli
ljmp
stc
ret
out
and
insb
out
fcmovbe
pusha
sti
aam
out
mov
pop
out
mov
idiv
adc
shlb
mov
ljmp
pop
mov
adc
out
mov
jbe
in
cli
fidivrs
iret
rcrl
sarl
dec
rcl
pop
add
adc
out
mov
incl
bnd
add
xor
bound
sub
call
imul
imul
push
repnz
shll
fucomp
ret
out
in
mov
std
mov
aad
int3
shl
bound
xchg
out
outsl
cli
pusha
lds
mov
arpl
int3
xor
jno
xchg
divb
inc
es
nop
and
jmp
imulb
add
addr16
inc
pop
in
or
dec
divb
sti
sub
dec
in
pop
jno
lcall
dec
inc
inc
jns
push
cmp
data16
das
pop
std
incl
fs
jb
jnp
jae
push
lods
add
jno
out
pop
outsb
in
jp
lea
gs
push
data16
jl
outsl
add
jae
outsb
jge
xor
cmpsb
inc
imul
lret
push
push
je
jae
insl
insb
inc
inc
movsb
insl
pop
popa
mov
xchg
add
insb
insb
jmp
push
mov
insb
add
xor
jmp
jae
cmp
xchg
imul
xor
jmp
dec
mov
jno
adc
arpl
jecxz
dec
xor
jo
dec
out
dec
imul
add
xor
in
jae
dec
in
cmp
insl
sbb
push
in
xor
repz
jg
xor
xor
or
sti
add
cltd
lret
adc
rcr
and
unpcklps
rol
idivb
sti
fdiv
dec
out
xchg
xlat
cs
es
jbe
xor
lds
testl
adc
fists
int
sti
das
adc
add
out
int3
push
add
test
cli
outsl
adc
add
test
loop
out
mov
insb
adc
out
or
xchg
jecxz
jmp
jg
dec
pop
jbe
inc
push
inc
loop
inc
inc
lds
add
inc
pusha
std
loop
xlat
bound
sti
mov
std
or
ljmp
out
imul
inc
add
add
out
or
jecxz
sub
jmp
sbb
clc
imul
out
lahf
enter
enter
movsb
mov
imul
jecxz
fwait
cwtl
bnd
jl
pop
xchg
pop
ret
add
pushf
push
std
jmp
imul
mov
imul
ljmp
decl
dec
je
inc
inc
push
add
dec
je
inc
insb
dec
ds
dec
je
inc
jno
dec
sbb
add
outsl
inc
cmp
sbb
add
outsl
push
hlt
fs
push
fcoms
outsl
push
icebp
cmp
adc
add
add
ja
ficoml
sub
cmpsl
jae
push
xor
inc
xor
in
ficoml
add
fsubp
rolb
xor
out
ret
insb
rcl
fidivs
xor
xchg
int
jmp
sub
xchg
pop
fbld
imul
xor
fisubs
imul
xor
fidivs
push
loope
pop
pop
in
incl
add
dec
add
sub
jae
cmp
jb
imul
inc
push
loop
add
and
dec
xor
repnz
jnp
insb
unpcklps
add
adc
jecxz
mov
loope
out
mov
loop
xor
in
pop
es
dec
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
add
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
add
pop
add
mov
add
mov
add
add
cwtl
pop
add
cwtl
pop
add
insl
dec
int3
int3
gs
int3
int3
add
in
push
mov
mov
stos
jno
ret
in
in
push
ffreep
xor
aad
outsl
xor
clc
mov
lea
stos
fstps
mov
cmp
aas
jp
add
or
ror
in
adc
mov
lea
stos
enter
je
push
add
add
shl
mov
add
lea
mov
das
add
lea
mov
xor
push
sub
testl
jbe
repz
adc
jmp
push
hlt
mov
decl
cmp
pop
jae
lea
stos
push
add
mov
fwait
or
xor
decl
dec
call
mov
or
icebp
fistps
mov
mov
popa
mov
mov
pop
mov
adc
mov
xchg
mov
jmp
and
ror
dec
int3
int3
insl
dec
int3
int3
gs
int3
int3
add
in
adcl
add
in
imul
inc
pop
std
xorl
mov
add
sar
addr16
adc
out
push
pushl
mov
xor
jmp
adc
mov
jo
xchg
push
inc
cld
xor
add
or
add
pop
or
lea
mov
aam
push
stos
mov
mov
lock
lds
mov
add
or
int3
int3
jne
int3
int3
insl
inc
int3
int3
gs
int3
int3
in
in
mov
decl
ds
dec
int3
int3
in
dec
int3
int3
in
int3
int3
fs
mov
mov
lcall
push
inc
xor
int3
int3
in
dec
int3
int3
in
int3
int3
fs
adc
push
dec
adc
fdivl
aam
incb
inc
add
xor
add
mov
loope
mov
les
lea
stos
leave
sqrtps
roll
push
pop
sar
dec
mov
in
push
outsb
sar
add
adc
jmp
mov
mov
decl
sbb
testl
mov
dec
cmc
push
mov
sub
pop
test
add
imul
and
mov
mov
int3
int3
in
inc
int3
int3
in
int3
int3
add
in
mov
adc
add
inc
xor
int3
int3
insl
inc
int3
int3
gs
int3
int3
add
in
adcl
inc
sub
test
hlt
or
or
xchg
mov
mov
or
add
adc
imul
shll
dec
cld
stos
mov
jno
mov
fs
cli
cmp
and
lock
adc
mov
std
rdtsc
adc
push
cltd
mov
stos
or
cmp
lsl
add
or
add
or
mov
mov
add
xor
add
ds
std
mov
int3
test
mov
mov
stos
jecxz
fs
push
inc
mov
stos
into
out
test
mov
mov
out
add
nop
stc
add
adc
push
cmp
push
lock
je
js
adc
test
push
stos
fisttps
cmp
add
mov
sti
mov
jae
cmp
loopne
mov
jae
push
sub
jns
push
mov
xor
jns
stos
mov
add
popf
inc
hlt
stos
loope
mov
adc
dec
add
xor
inc
adc
or
je
cmpl
insb
dec
pushl
adc
push
mov
add
mov
lahf
or
mov
sbb
dec
push
std
decl
in
dec
test
out
jl
std
subl
inc
lea
sbb
cld
inc
mov
stos
loope
std
sbb
push
mov
stos
sti
ds
les
test
fisttpl
add
dec
add
mov
pop
xchg
aas
xchg
mov
add
ret
push
loopne
and
ficomps
int3
int3
fs
in
adc
push
sbb
push
inc
xor
add
lahf
inc
clc
add
std
mov
les
popf
inc
cld
stos
loopne
push
stos
call
pop
push
callw
push
lock
pop
int3
int3
in
in
mov
ja
push
inc
add
xor
mov
out
ror
pusha
int3
int3
fs
in
adcl
decl
mov
sahf
sarb
stos
fmull
mov
pushf
dec
hlt
mov
and
clc
test
sti
mov
lods
push
je
mov
testl
lcall
sbb
out
jne
popf
inc
clc
mov
add
das
mov
popf
inc
adc
adc
add
mov
popf
jns
sub
xor
or
jmp
in
push
int3
int3
cmc
pop
int3
int3
in
pop
int3
int3
in
int3
int3
test
lds
adc
add
mov
lahf
cld
pop
sar
dec
leave
in
pushl
repz
pushf
dec
clc
add
add
decl
xor
hlt
shlb
inc
xor
fcompl
mov
jmp
pushf
or
xor
decl
in
add
push
inc
add
adc
ret
add
cmpl
push
push
add
jno
sub
xor
mov
push
inc
xor
mov
push
inc
add
xor
call
push
mov
in
popf
lods
dec
std
subl
adc
xor
pop
mov
cmp
mov
int3
int3
add
in
mov
sbb
inc
sub
sbb
add
xor
pusha
int3
int3
gs
int3
int3
test
lds
adc
add
fwait
inc
or
add
insb
mov
adc
test
fisttps
jns
mov
mov
inc
call
xor
call
fdivrp
ljmp
fsubr
push
mov
push
push
dec
push
lock
jecxz
fdivl
mov
in
dec
cmp
mov
loope
rcll
jne
lds
add
cmp
mov
inc
add
mov
jecxz
cmp
pop
mov
sub
je
cltd
dec
call
adc
adc
adc
dec
roll
shl
inc
adc
inc
insl
in
inc
cltd
cltd
dec
or
fcoml
push
stos
out
mov
aaa
add
in
push
add
jl
std
subl
dec
pop
xchg
mov
jmp
cltd
push
in
cmp
cld
dec
dec
add
icebp
adc
dec
sbb
les
test
fildl
xor
or
adc
lcall
cmp
xor
sbb
mov
mov
loope
inc
rcrl
push
lock
xchg
addr16
inc
xor
adc
mov
mov
loope
add
out
add
adc
jne
mov
add
stos
sti
push
lret
adc
push
inc
jo
push
lock
fsubrs
insb
add
popf
inc
loopne
mov
xor
xor
push
inc
xor
out
cmc
dec
std
addl
cmc
sbb
movsb
xor
add
mov
lahf
dec
fdivs
pushf
mov
dec
lds
push
inc
xor
inc
xor
adc
xor
call
and
push
lock
in
aaa
push
call
mov
or
in
xor
add
in
mov
push
inc
xor
jmp
jl
decl
sbb
jo
dec
mov
push
inc
xor
out
std
dec
std
sub
lahf
aam
aad
dec
idiv
ficoms
addr16
aam
mov
push
inc
xor
out
mov
sbb
aam
aad
push
stos
rcr
mov
push
inc
xor
dec
sub
sahf
adc
call
sti
jmp
les
add
adc
xor
sbb
aam
mov
dec
dec
push
mov
push
inc
xor
cld
push
add
dec
mov
mov
roll
int3
int3
in
int3
int3
test
mov
out
int3
in
int3
int3
fs
in
push
pop
loope
cmp
stos
daa
in
push
lock
add
jmp
jb
int3
int3
in
in
push
sbb
add
jae
push
lock
popf
dec
std
pushl
inc
mov
jecxz
add
adc
in
mov
aam
int3
int3
test
les
adc
add
push
inc
fmull
into
repz
adc
insb
dec
add
xor
add
popf
dec
or
add
call
mov
or
std
add
rorb
sub
push
inc
xor
add
cmp
push
inc
xor
add
xor
jmp
sbb
add
adc
add
adc
jne
mov
push
inc
xor
push
jo
mov
test
out
cmp
push
inc
xor
xor
cmp
or
jmp
adc
fisubs
rclb
mov
sub
push
inc
xor
add
mov
mov
add
notl
jae
push
lock
adc
shrb
inc
xor
push
lock
movsl
inc
std
pushl
inc
mov
in
aad
add
inc
std
subl
hlt
test
decl
xor
push
jo
push
call
mov
or
insb
inc
xchg
fwait
push
cld
sub
out
jae
fwait
inc
loopne
fwait
dec
faddl
inc
add
jo
mov
add
push
lock
inc
xchg
jecxz
or
xor
sti
push
cltd
pop
idiv
jle
les
add
push
push
in
sar
add
xchg
lcall
lock
je
add
xor
or
adc
clc
dec
iret
out
jae
cltd
or
pop
sar
add
adc
fcomip
mov
xor
testl
xor
adc
add
xor
divl
cmp
push
lock
inc
cltd
fwait
or
fwait
sub
decl
xor
mov
push
inc
xor
mov
push
inc
xor
testl
add
adc
mov
add
xor
push
sbb
into
mov
push
inc
xor
push
jo
push
call
mov
add
cmp
push
inc
add
xor
out
fildl
icebp
mov
sub
xor
clc
push
lock
je
jae
push
lock
pop
mov
sbb
push
inc
xor
shlb
cwtl
jecxz
jb
int3
int3
xor
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
es
xor
mov
xor
push
add
add
add
cs
cmp
cs
cmp
das
test
insl
das
in
cmp
sub
cmp
sub
ds
xchg
jne,pt
int
dec
sub
mov
fwait
aas
fsubrs
scas
aas
fisubrs
int3
aas
add
out
add
stc
aas
add
push
sub
add
inc
add
mov
and
xor
and
xor
lea
lea
xor
and
xor
sbb
dec
es
inc
xor
and
popa
xor
es
lods
and
stos
xor
and
adc
adc
sub
repz
mov
es
xor
add
es
xor
es
xor
pushl
sub
or
and
push
and
xor
and
xor
and
mov
mov
and
fldenv
or
daa
pop
and
clc
push
inc
xor
adc
jno
lods
pop
mov
xor
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
