and
inc
add
inc
add
add
add
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
enter
int3
adc
rclb
inc
add
adc
fcoms
inc
add
adc
loopne
inc
add
adc
call
adc
lock
hlt
adc
clc
adc
cld
adc
add
add
adc
add
inc
add
adc
add
inc
add
adc
add
inc
add
adc
add
inc
add
adc
add
inc
add
adc
add
inc
add
adc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
adc
add
adc
add
adc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
inc
add
inc
add
inc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
adc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
inc
add
adc
inc
add
adc
inc
add
add
add
add
jp
add
fsubrp
nop
xor
ljmp
mov
jns
add
out
pop
aaa
ret
aaa
mov
out
mov
aaa
push
out
std
aaa
dec
loope
cmp
lods
cmp
fists
cmp
jecxz
cmp
loop
cmp
in
cmp
in
cmp
in
cmp
in
cmp
cmp
dec
in
cmp
add
stos
cmp
xchg
jecxz
cmp
cltd
jecxz
jno,pt
and
sub
pop
ds
out
ds
out
ds
out
jg,pt
icebp
ds
in
aas
fs
aas
insb
in
aas
ja
aas
aas
cmpsb
in
aas
movsl
in
aas
mov
pop
aas
mov
in
aas
loopne
lahf
aas
add
in
aas
push
in
add
add
inc
flds
add
xor
jmp
jae
dec
jmp
xchg
xor
ljmp
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
flds
add
add
flds
add
add
flds
add
add
add
inc
add
mov
inc
mov
add
es
fs
mov
jb
stos
jns
ficompl
popa
fs
mov
jb
stos
jns
mov
mov
jne
mov
mov
inc
flds
add
mov
inc
add
mov
add
and
dec
mov
outsl
push
stos
inc
imul
jns
flds
add
mov
popa
outsb
mov
push
flds
add
inc
add
inc
add
fiaddl
fiaddl
sbb
inc
add
fadds
lret
add
mov
inc
mov
test
add
mov
jb
cmpsl
jns
add
mov
xor
inc
mov
add
ja
jbe
push
lods
cs
mov
add
mov
add
dec
test
arpl
lods
cs
add
mov
add
sub
jb
pop
mov
outsl
arpl
add
btr
repnz
in
xchg
inc
lret
mov
add
insb
push
add
mov
shrl
jo
mov
outsl
rcr
add
mov
xor
add
movsl
mov
arpl
test
subl
add
jge
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
fldl2t
add
jmp
add
jmp
add
jmp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
cmp
add
aas
dec
push
jmp
popa
flds
leave
pop
xlat
add
pusha
aam
jmp
flds
jmp
mov
add
push
flds
jmp
add
add
jno
add
pop
flds
in
popa
fiaddl
call
push
fldl
add
fldl
add
or
add
and
dec
faddl
add
faddl
cmpl
fcoml
add
int3
add
mov
faddl
add
faddl
add
add
and
add
mov
add
mov
add
jnp
add
jnp
add
add
add
dec
faddl
add
dec
add
scas
cli
add
dec
faddl
add
add
cmp
add
cmp
add
or
add
or
add
bound
add
bound
add
fisubrl
bound
add
bound
add
bound
adc
out
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
enter
sbb
dec
add
xor
add
inc
add
xor
ljmp
add
bound
add
bound
add
bound
add
ret
popa
into
roll
bound
pop
add
arpl
xor
add
push
add
fldl2t
add
jmp
add
test
jb
lods
into
bound
jno
fldl2t
xchg
data16
aaa
fldl2t
pop
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
popa
flds
jmp
popa
flds
jmp
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
add
add
dec
flds
add
flds
add
flds
add
flds
add
flds
add
fadds
add
fadds
add
flds
add
flds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
add
jnp
add
mov
add
add
fadds
add
add
dec
fadds
add
add
cmp
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
bound
add
bound
push
add
xor
bound
push
add
enter
mov
push
add
nop
push
add
fcoml
bound
push
add
sahf
push
add
fnstenv
push
pop
fsts
push
pop
push
fnstenvs
push
pop
push
data16
pop
fldenv
push
pop
flds
data16
pop
push
data16
add
mov
data16
pop
fnstenv
push
pop
fincstp
push
data16
add
cmovge
mov
dec
data16
pop
fnstcw
dec
pop
fabs
dec
data16
add
aas
dec
pop
flds
arpl
aad
xchg
aad
aad
xor
aad
and
add
aad
add
aad
pop
cwtl
aad
xor
flds
pop
xchg
aad
jmp
sub
add
aad
jne
aad
dec
sub
add
sbb
add
sbb
add
sub
add
sub
add
and
aad
imull
aad
adc
cmp
add
lahf
mov
mov
add
xchg
mov
add
pop
movsb
add
aad
add
cmpsl
mov
add
shll
add
and
add
adc
add
shll
add
jnp
add
pop
mov
add
mov
aam
add
aam
add
aam
add
aam
add
adc
add
jecxz
add
bound
add
cmp
dec
cmp
cmp
add
sub
add
inc
cmp
adc
add
push
cmp
cmp
add
sarb
add
sarb
call
cmp
movsb
cmp
js
add
sarb
int3
cmp
stos
cmp
xor
add
adc
add
sbb
cmp
add
xchg
cmp
add
test
add
into
cmp
add
fsts
push
pop
fsincos
push
fldenvs
inc
data16
inc
data16
inc
pop
fprem1
inc
data16
inc
pop
fnstcw
inc
data16
inc
data16
pop
flds
fnstenvs
inc
data16
pop
fsts
add
in
pop
fyl2x
inc
data16
inc
data16
inc
data16
inc
pop
fldenv
inc
pop
fnstenv
data16
pop
fsts
push
data16
cmc
and
fldl
mov
and
add
and
add
and
add
mov
fldl
sbb
fldl
and
mov
fldl
aas
mov
fldl
fwait
mov
fldl
pop
mov
fldl
lcall
fldl
stc
popf
fldl
test
sbb
fldl
cltd
sbb
fldl
jnp
fldl
cmp
sbb
sahf
add
insl
sahf
add
popa
sahf
add
jge
add
lea
add
add
add
cmp
add
stos
pushf
add
cmp
add
mov
add
movsl
mov
add
xor
add
or
add
sti
fadds
add
stos
add
jns
add
sbb
fadds
add
scas
add
pop
scas
add
movsl
scas
add
mov
push
push
add
cli
push
add
ficoms
bound
push
add
in
add
call
push
add
jo
add
mov
bound
add
pushf
push
add
movsb
push
add
ljmp
loop
push
add
push
push
add
push
add
push
push
add
cmp
bound
add
push
add
inc
push
add
add
add
push
add
aam
add
mov
mov
add
bound
cmp
cmp
pop
fyl2xp1
cmp
pop
fcos
cmp
pop
fstps
fldenvs
cmp
mov
pop
fstps
data16
pop
fnstenv
cmp
sub
pop
flds
cmp
mov
data16
cmp
out
pop
cmp
lret
cmp
pop
fld
cmp
lret
push
pop
fnstcw
cmp
lds
data16
pop
fstps
data16
sub
fldl
sbb
add
fldl
addr16
fldl
imul
add
xor
add
fldl
stos
fldl
sbb
fldl
add
push
fldl
loope
fldl
shll
add
mov
js
add
imul
jns
fldl
sub
add
dec
fldl
fisttps
add
fldl
push
sub
fldl
fwait
xchg
fldl
add
movsl
add
das
cmpsb
add
inc
cmpsb
add
jae
add
sbb
add
xor
lret
sbb
leave
add
icebp
leave
add
add
leave
add
pop
roll
pop
roll
imul
add
add
aaa
iret
add
add
add
std
into
add
iret
into
add
jecxz
add
mov
add
dec
into
add
push
movsl
add
ja
add
ja
add
imul
add
add
jne
add
bound
cmp
bound
bound
add
fidivrl
add
cld
cmp
bound
push
add
xorb
bound
bound
add
bound
dec
add
mov
add
add
add
dec
add
mov
dec
add
ljmp
bound
bound
dec
add
push
dec
add
scas
dec
add
lcall
bound
add
filds
loop
add
loop
add
loop
jmp
add
testb
pop
pop
dec
pop
add
hlt
add
fildl
bound
dec
pop
fstps
fldenvs
add
lea
fnstcw
add
aam
bound
add
test
add
adc
fld1
add
mov
dec
pop
add
mov
add
cli
add
sbb
bound
add
in
bound
dec
pop
dec
data16
jmp
stos
aad
gs
aad
stc
popf
aad
repz
aad
nop
add
sbb
aad
mov
aad
mov
sbb
aad
sbbl
add
sbb
add
aad
xchg
and
add
aad
jmp
inc
lods
aad
sbb
aad
sub
aad
pop
movsl
aad
jns
aad
dec
xchg
aad
push
lods
aad
add
fiaddl
add
flds
add
std
mov
dec
loopne
inc
js
addr16
icebp
cld
and
pop
mov
xor
dec
jmp
jecxz
cmpsb
xchg
pop
imul
jmp
jae
ret
rcrl
fcomps
push
into
cs
movsl
cwtl
mov
xor
testb
push
jae
dec
scas
push
cli
xor
sub
rclb
flds
mov
dec
xchg
cmc
pop
dec
rcll
mov
add
add
loop
bound
push
dec
mov
daa
push
iret
rol
dec
popf
test
mov
lds
call
and
ds
push
mov
mov
push
cmpsb
sbb
pusha
mov
cmp
ja
repnz
lea
mov
fisubl
sbb
movsl
outsb
lea
test
xchg
lahf
aam
std
jge
rcr
jb
push
fsubs
out
test
mov
push
popf
add
cs
fidivrl
push
bound
jmp
popf
jo
into
jo
jmp
jmp
shll
push
jmp
ret
add
andl
in
lret
jmp
scas
lret
xchg
testl
sbb
mov
xchg
mov
xchg
stos
bound
cs
je
push
cmp
adc
adc
mov
std
je
in
lea
lret
mov
cmpsb
daa
jns
insl
mov
daa
adc
lret
popa
and
daa
adc
jmp
and
arpl
aam
adc
fsts
ret
pusha
test
sbb
in
out
pop
sub
push
shrb
clc
cmp
xor
adc
enter
or
fmull
sbb
add
test
cs
in
shrb
mov
addl
mov
adc
push
pop
aas
lods
inc
xchg
iret
adc
test
mov
iret
pop
jae
mov
stos
push
movsb
adc
sbb
orb
sbb
rclb
push
movsl
add
hlt
dec
std
ljmp
jns
mov
iret
add
jnp
add
adc
xchg
pop
push
iret
adc
jbe
stos
jnp
inc
bound
fistl
jae
add
clc
repnz
xchg
push
sahf
push
jl
rclb
mov
andl
mov
jae
pop
add
mov
test
rolb
push
push
pusha
add
cmp
xchg
jecxz
shlb
lret
add
movsb
and
push
mov
add
ja
adc
mov
mov
mov
pop
shll
xor
fnstenv
test
cld
pop
fisttps
bound
lods
xchg
jl
jg
add
aad
jmp
add
test
in
data16
add
cmp
pop
add
sbb
add
fnstcw
add
stc
add
imul
sbb
xchg
and
icebp
add
imul
and
loope
inc
fldcw
fisubrl
and
add
popa
pop
add
pusha
flds
lret
or
data16
jmp
fsts
imul
flds
jmp
pop
flds
jmp
pop
jmp
add
pop
out
jmp
pop
leave
add
outsb
sbb
fstps
jmp
pop
mov
add
imul
add
pop
cltd
add
outsb
stc
fcomps
jmp
pop
loope
jmp
add
jmp
jnp
cmp
mov
rolb
lcall
add
sub
dec
aad
add
or
cmp
mov
cmp
dec
add
lock
filds
cmp
push
add
rclb
push
shl
add
fildll
add
shll
shll
or
enter
or
add
shll
lret
aam
add
roll
add
roll
aam
add
rcrl
rcrl
mov
cwtl
add
push
push
lock
or
lock
bound
push
pop
lock
or
repnz
or
repnz
bound
add
or
repnz
bound
add
or
or
or
bound
add
or
repnz
or
repnz
or
bound
add
or
fldl2t
or
jmp
add
fldl2t
or
fldl2t
or
fldl2t
or
fldl2t
or
fsubr
or
fldl2t
or
jmp
or
test
jmp
add
fldl2t
or
sub
fsqrt
add
fldl2t
or
jmp
add
fldl2t
or
or
jmp
or
fsubr
or
jmp
fldenv
add
pop
mov
add
push
js
jmp
imul
and
add
pop
jae
jmp
inc
add
pop
roll
jmp
imul
add
pop
test
jmp
imul
jmp
imul
add
pusha
iret
add
pop
js
jmp
data16
add
pop
fadds
jmp
lret
into
inc
add
aad
add
mov
push
add
into
sbb
mov
xchg
add
into
jns
mov
cmp
mov
rolb
mov
adc
jnp
imul
dec
aad
add
into
or
cmp
mov
dec
into
dec
add
repnz
xlat
add
cmp
push
add
into
adc
add
xlat
sub
sti
int
add
into
xor
add
xlat
or
gs
int
add
aam
add
or
lock
lock
bound
add
lock
lock
bound
push
lock
lock
bound
add
lock
repnz
or
or
repnz
bound
add
or
or
bound
add
or
repnz
or
bound
add
or
fldl2t
or
fucompp
or
jmp
or
fldl2t
or
add
jmp
or
jmp
add
fldl2t
or
fsubr
or
fldl2t
or
jmp
or
mov
jmp
or
jmp
or
add
jmp
or
sub
fsqrt
add
jmp
or
flds
fsubs
add
imul
jmp
pop
fadds
jmp
imul
add
imul
pop
add
bound
imul
add
in
jmp
imul
add
imul
jmp
and
test
add
pop
mov
sti
add
add
imul
roll
add
add
shlb
lret
shlb
add
mov
rolb
add
incl
mov
pop
add
int
add
sarb
mov
cmp
jnp
roll
mov
str
push
add
int
add
rorb
add
mov
dec
rorb
cmp
icebp
add
incl
add
rclb
rclb
push
shl
add
sub
lock
or
lock
bound
decb
lock
or
lock
lock
lock
bound
incb
lock
or
lock
lock
or
lock
bound
push
or
or
repnz
or
or
bound
cld
add
or
fldl2t
or
hlt
or
fsqrt
cld
inc
fldl2t
or
jmp
or
fcmovu
cld
push
fldl2t
or
fldl2t
or
jmp
or
fldl2t
or
fldl2t
or
fldl2t
or
jmp
cld
and
jmp
or
sub
jmp
cld
jo
jmp
or
jmp
or
jmp
or
flds
fstps
aad
jmp
pop
jecxz
sub
add
inc
add
imul
add
fmulp
add
imul
jmp
imul
add
pop
xchg
add
add
fcomps
fwait
add
pop
fildl
jmp
jle
add
imul
jmp
pop
loopne
jmp
dec
lods
add
inc
ds
cmp
add
cmp
add
decl
sti
add
decl
sti
decb
add
incl
add
ljmp
sti
das
add
std
roll
mov
pop
add
std
mov
dec
jg
mov
std
loope
mov
push
add
pop
add
xchg
add
cmp
mov
ja
jnp
aaa
add
roll
cmp
adc
dec
add
daa
add
std
mov
lock
or
cli
mov
cli
dec
lock
repnz
or
lock
push
lock
adc
add
add
or
lock
je
lock
xor
lock
lret
or
lock
and
lock
stos
lock
add
lock
test
cli
inc
lock
ljmp
cli
pop
lock
sbb
lock
lcall
cli
jl
lock
cmp
lock
fisubl
or
bound
sti
insb
add
jmp
cli
clc
fldl2t
sti
data16
sti
fcompp
jmp
cli
sbb
popa
fldl2t
sti
mov
jmp
sti
and
cli
or
jmp
sti
xor
jmp
or
jmp
sti
sbb
cli
add
jmp
sti
loopne
jmp
cli
test
pop
fldl2t
sti
sub
jmp
jmp
or
fldl2t
sti
call
fldl2t
cli
xor
add
push
add
dec
addl
dec
ret
add
cmp
add
cmp
add
sub
jmp
sbb
fsubrs
add
or
add
idiv
cli
push
add
jmp
scas
add
fsubs
add
push
add
leave
jle
jmp
add
fiadds
jmp
test
push
add
push
add
mov
add
js
add
push
add
imul
add
fldl
cmp
sbb
cmp
insl
add
repz
add
or
add
repz
add
idiv
add
loop
add
add
or
adc
pusha
loopne
adc
cli
loope
add
loope
add
loop
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loopne
sbb
pop
pop
jmp
or
adc
or
or
add
pop
xor
pop
add
pop
or
add
or
rorb
bound
add
bound
add
call
add
cli
add
in
add
bound
add
bound
add
bound
add
bound
pop
sub
dec
xor
lret
clc
insl
gs
push
cmc
cmpsl
arpl
js
in
fstpt
out
mov
clc
pusha
lods
add
jecxz
dec
adc
or
push
lock
dec
hlt
hlt
jg
push
jmp
scas
inc
in
inc
mov
aaa
xchg
xchg
ss
movsl
xchg
pop
aas
insb
mov
test
lret
xor
mov
arpl
mov
minps
jae
pop
xor
mov
repz
movsl
dec
inc
inc
push
fistl
aaa
sbb
add
cmpsb
mov
mov
rol
in
fbld
lea
daa
inc
aas
test
xor
xor
inc
es
push
fcoml
push
adc
and
push
imul
mov
or
sub
xchg
das
iret
fidivrs
sub
jns
pop
pop
mov
loopne
outsb
sub
xchg
sbbl
fs
jns
adc
add
scas
or
add
pop
mov
mov
mov
fdivrp
mov
call
push
add
add
jg
loope
repz
or
arpl
pop
lods
imul
insb
sbb
int
test
insb
mov
mov
sbb
cmc
int
mov
cmp
adc
gs
cld
add
fsubl
rcr
adc
pop
mov
sti
mov
lods
mov
bound
mov
mov
mov
fmuls
mov
xchg
inc
fsubrl
aam
outsb
ss
jnp
mov
mov
outsl
sbb
fucomp
add
clc
mov
push
add
test
repnz
jns
or
in
push
inc
stc
scas
lretw
mov
lret
ficoms
imul
mov
mov
cmp
mov
mov
add
in
aad
mov
insb
add
decb
and
cltd
gs
incb
mulb
dec
xlat
pop
mul
inc
sub
fs
pop
lret
into
cltd
cmp
outsb
sub
movsl
pop
pop
inc
arpl
iret
andb
call
cmp
jbe
movb
jg
in
adc
mov
or
popf
ds
repz
or
add
fsubrs
pop
xchg
cmp
pusha
push
add
pop
fbstp
or
mov
add
push
sub
aas
mov
push
lods
jle
scas
pop
and
mov
jns
xchg
cli
ja
push
enter
jmp
inc
jne
jns
add
jbe
mov
jg
pop
add
push
pop
mov
int3
ljmp
and
inc
push
addr16
roll
out
sub
jnp
and
pop
add
xlat
ret
shlb
scas
push
ficomps
adc
arpl
das
xor
insl
add
pushf
mov
push
jmp
js
jb
test
add
ja
mov
jnp
mov
shlb
ds
aad
test
fdivrl
fisttpl
imull
roll
add
dec
pop
ficompl
into
mov
negb
lahf
mov
xor
mov
in
or
bound
or
inc
mov
data16
xchg
lret
imul
insb
dec
clc
loopne
add
addb
xchg
add
sbb
pop
mov
imul
sub
mov
pop
cli
fiadds
mov
push
xchg
mov
and
mov
movsl
fld
mov
aam
mov
sbb
jae
mov
mov
ror
xchg
std
pop
fldcw
ficoms
dec
test
popa
cmp
mov
inc
ret
mov
jne
sbb
cmpsb
addr16
pop
pusha
mov
test
dec
shrb
push
stos
sub
add
in
sar
movsb
iret
or
xchg
insl
and
mov
mov
lock
lods
inc
hlt
es
dec
push
out
push
cmp
and
mov
inc
add
mov
add
loop
add
add
fstps
jae
movsb
test
out
sub
lcall
adcb
mov
mov
pop
daa
cmpsl
enter
popl
call
ret
rcll
ficoml
mov
call
outsl
sbbb
push
stos
stos
cmp
js
and
cmp
or
adc
pop
xchg
fistps
push
imul
add
or
mov
mov
out
aaa
pop
nop
rclb
andl
and
in
repz
mov
push
add
inc
pop
rcr
pop
mov
xchg
jmp
cmp
jno
xchg
mov
adc
cmpsb
dec
aas
cmp
mov
mov
or
lea
push
xlat
int3
pop
adc
xlat
inc
add
js
outsb
subl
mov
ljmp
xlat
and
insb
int3
and
nop
iret
cli
notl
jns
and
and
dec
sub
in
insl
inc
xor
jle
inc
and
das
std
aas
xchg
pop
out
fisttpll
iret
sbb
jb
arpl
shlb
mov
mov
aam
push
adc
jne
in
call
push
adc
dec
jle
pop
cmp
cmp
mov
pop
pop
imul
out
jae
mov
nop
stos
xchg
loop
jo
mov
jns
mov
icebp
pop
adc
mov
int3
arpl
push
inc
or
dec
icebp
push
mulb
mov
add
lods
rep
cli
mov
mov
mov
mov
das
jbe
and
fwait
jnp
adc
out
out
repz
xor
sbb
aad
scas
fimull
add
fldenv
add
lcall
jo
mov
jbe
out
mov
push
mov
les
mov
ds
add
mov
jns
aaa
mov
pushf
in
fcoml
cli
clc
ret
pop
dec
sbb
xchg
enter
loop
scas
xchg
in
lds
add
mov
push
dec
je
lea
imul
jg
loope
push
push
jg
lods
icebp
push
lret
test
dec
add
mov
cmpsl
pop
test
xor
push
in
add
fdivrp
jno
repz
mov
call
cmpb
lahf
mov
in
stos
mov
sbb
into
pop
xor
push
cmp
ss
push
cmc
pop
inc
jp
insl
pop
arpl
add
lret
mov
loope
aas
outsl
int3
stc
cs
xlat
loopne
int
scas
jo
mov
add
and
inc
mov
sbb
bound
push
jp
fwait
dec
push
mov
mov
bound
cmpsb
mov
push
shll
adc
pop
mov
and
dec
push
jns
call
ds
xor
dec
sub
int3
inc
add
xchg
outsb
subl
cmp
ret
push
xchg
dec
add
out
push
js
pop
or
push
and
fldt
aas
push
dec
push
push
sbb
cmp
jmp
sub
inc
xchg
adc
mov
das
sbb
scas
cmp
movsb
movsb
fmulp
fst
mov
mov
and
imul
inc
add
xor
out
pop
sub
xchg
pop
push
sbb
or
notl
cld
add
and
push
cmp
sarb
add
push
sub
fnstenv
imul
shrl
add
dec
xchg
add
outsb
pop
or
aas
fimull
hlt
mov
rolb
or
xor
lods
pushf
test
pop
cmpl
notl
pop
add
push
xchg
add
sbb
negb
stos
rdtsc
sbb
scas
adc
les
adc
push
adc
repz
push
sbb
pop
pop
dec
and
cmp
xchg
push
cmp
adc
nop
sarb
add
inc
aas
jo
xchg
leave
loop
cmp
mov
cmp
in
pushf
aaa
sub
outsl
sbb
push
xor
js
xchg
xor
shll
push
fcoms
xor
push
test
daa
ret
es
xchg
bound
mov
inc
out
push
sub
mov
js
aam
mov
sub
sub
les
or
cmc
data16
das
dec
push
lcall
pop
pop
push
adc
fcomi
std
in
in
dec
push
add
pop
mov
out
cmp
aad
cmp
mov
xor
int
or
mov
jg
inc
stos
mov
add
cmc
mov
xchg
jle
sub
cli
mov
ja
out
push
xor
cli
repnz
call
adc
shrb
inc
mov
shll
inc
cmpsb
pop
and
cmp
sub
iret
lods
xchg
mulb
cmpsl
sbb
mov
xor
popl
xchg
xchg
xor
or
sbbl
mov
pushf
lods
cmc
es
jp
pop
cltd
ret
mov
jmp
lea
push
mov
js
mov
shll
test
pcmpgtd
mov
push
cmpb
cmp
pop
addb
mov
mov
and
cld
mov
imul
inc
cwtl
daa
loop
add
movsl
in
movsb
out
mov
out
inc
and
in
arpl
loope
mov
out
inc
std
in
mov
or
mov
sbb
out
call
sub
jb
flds
xchg
int3
std
cmpsb
xor
cld
ja
dec
incb
dec
ret
cli
loop
add
sub
inc
stc
xor
jge
xor
push
out
repnz
int3
pop
lock
adc
or
sbb
leave
cmc
xor
idiv
and
stos
xchg
aam
mov
ficoml
ds
xor
lock
mov
dec
cld
repz
shrl
add
movsl
std
out
aam
addr16
shr
adc
shr
mov
pop
lds
les
xchg
sbb
scas
mov
and
xchg
ret
fsts
shll
adc
xor
lret
dec
pop
cmp
stos
inc
adc
stos
inc
sahf
mov
xchg
sbb
add
mov
add
xlat
inc
sub
call
stc
movsl
aam
dec
fs
lods
and
mov
loopne
mov
data16
pop
adc
ficoms
sub
lret
cmp
insl
shl
clc
shl
fcomip
push
dec
cmpsb
movsl
or
in
cltd
sbb
scas
inc
fnstenv
add
gs
ljmp
push
sub
je
pop
pop
mov
enter
pop
adc
jne
fdivl
scas
push
mov
xorb
jp
xor
add
push
es
das
mov
cmp
sub
mov
push
ss
stos
xchg
aaa
lahf
push
mov
test
in
xor
inc
push
cmp
cmp
sbb
and
pusha
enter
cmc
ficompl
sub
jne
sub
dec
gs
mov
adcl
rolb
ds
les
fmul
inc
mov
push
mov
mov
jmp
fs
stos
aas
cld
and
sahf
fdivrl
sti
mov
ss
pop
add
push
cmp
lds
sarl
add
outsl
call
add
repnz
jno
pop
xchg
ss
pop
mov
inc
add
jle
addr16
jb
pop
mov
int
cmpsb
lods
xchg
into
rclb
shrb
aas
inc
add
iret
sbb
jae
daa
cmc
les
inc
jbe
mov
fidivrs
xchg
add
in
xchg
test
dec
in
mov
gs
xor
iret
and
xor
pop
scas
pop
push
push
add
inc
jecxz
push
clc
ficompl
sub
mov
fdiv
and
sbb
dec
gs
cmc
movsl
movsb
pop
inc
scas
or
cld
aas
movsb
aam
popl
insb
and
sub
xchg
aad
xor
test
cmp
call
pusha
addb
mov
adc
sbb
cmpsl
inc
cmp
sbb
fildl
les
jmp
lret
cld
jle
jne
ret
fs
xor
inc
sub
cs
pushf
ret
cmpl
jecxz
cltd
push
dec
ja
fimull
sbb
data16
pop
js
fs
add
mov
ss
add
sar
stos
xorl
int3
roll
and
jl
mov
fiaddl
scas
jne
cld
inc
ljmp
push
popa
repz
dec
cmp
shll
clc
or
push
pop
cmpsl
mov
adc
insb
mov
jmp
test
inc
cmp
push
add
add
lcall
pop
mov
jns
call
clc
pop
sub
test
fdivp
cmc
sbb
scas
testl
push
add
mov
lock
dec
test
mov
or
push
cltd
xor
aad
sahf
lock
pusha
fisttpl
or
imul
jno
add
sub
sub
shll
xor
add
cli
xor
add
cmp
lret
add
inc
sbb
scas
test
and
xor
dec
sub
nop
xchg
cmc
js
cmp
or
sti
shlb
add
mov
les
dec
xor
sahf
pop
or
dec
add
stos
arpl
and
pop
leave
pop
or
push
jae
jp
and
push
jno
fisttps
bound
cmpb
mov
aad
and
pop
inc
jb
mov
int
rorb
push
lret
adc
imul
mov
cmp
lcall
pusha
iret
xor
jae
mov
lcall
jne
adc
enter
mov
call
clc
jo
das
pop
int
xchg
mov
inc
fcomps
cmp
mov
xor
out
xchg
js
push
stc
adc
mov
mov
pop
subl
js
xor
gs
push
add
mov
xchg
adcb
fiaddl
test
xchg
push
xchg
ret
mov
xor
out
push
enter
inc
and
push
lods
inc
mov
dec
push
and
scas
mov
jge
push
ss
cwtl
popf
xlat
aad
xor
je
mov
icebp
push
pop
mov
stos
mov
fwait
mov
add
jg
add
jmp
loop
jbe
jg
cmc
mov
cs
add
ja
xchg
mov
call
mov
xor
cmpsl
inc
int3
es
cli
stos
divl
push
out
mov
add
in
pop
inc
nop
addr16
jmp
pop
or
jo
sub
les
sbb
hlt
mov
cld
xchg
mov
add
call
mov
dec
dec
sub
inc
sub
stos
inc
sbb
dec
adc
and
or
dec
jg
inc
faddp
mov
in
lss
mov
repnz
div
jp
cld
in
mov
push
cmp
cmc
inc
repz
out
adc
adc
and
rcr
jmp
xor
std
test
sti
mov
mov
test
xorb
pop
push
stc
mov
jge
pop
xchg
out
or
fwait
in
xor
adc
add
jp
push
loop
shlb
loope
hlt
paddsb
add
dec
outsl
movsl
insl
stos
add
pop
test
fdiv
xor
call
sbb
jae
and
aas
iret
and
enter
roll
aas
jb
mov
jne
repz
insb
jge,pt
imul
mov
add
push
jle
std
arpl
std
cmc
icebp
xchg
addr16
push
dec
add
daa
add
push
and
int
pop
xorl
and
mov
bound
push
add
dec
push
rcrl
or
jb
sub
ljmp
leave
ja
aad
aas
and
lods
push
bnd
and
pop
and
daa
iret
mov
fdivs
or
mov
jl
cld
sbb
das
popf
insb
sbb
adc
cli
stos
push
shrb
mov
inc
andl
lods
adc
hlt
jecxz
add
pop
or
dec
enter
cmp
xchg
in
adc
jbe
and
imul
xchg
sahf
lahf
cltd
pop
xchg
jo
cmpsb
mov
mov
inc
dec
cmp
popf
inc
or
inc
inc
pop
cmp
inc
insl
lods
add
andb
ds
js
jecxz
aaa
inc
rcrl
scas
cmpsb
jbe
aaa
mov
pop
subl
adc
repnz
icebp
out
pop
test
ror
or
mov
rcll
shr
fcomi
push
adc
push
pop
cmp
gs
mov
ss
out
push
out
test
cmpsb
sub
xlat
lds
pop
push
std
aas
imul
scas
jno
and
je
adc
mov
in
int3
ret
leave
repnz
imul
imul
jp
ss
pop
lcall
xchg
mov
dec
adc
jns
mull
and
and
scas
xchg
sbb
jnp
and
add
pop
rolb
adc
loop
xchg
jbe
pop
std
inc
popa
in
push
sti
in
and
imul
sub
or
test
rcll
arpl
lret
sbbb
mov
neg
sbb
icebp
jecxz
cli
adcb
push
mov
add
pop
or
in
jb
dec
jg
jno
adc
fdivl
into
fdivl
or
stc
insl
rcll
cmpsb
fnop
add
leave
adc
out
leave
loope
imul
xor
inc
ss
loopne
inc
push
jbe
scas
xor
sahf
lods
inc
jno
pushf
adc
clc
pop
loop
jbe
outsl
incb
pop
into
rcl
dec
sahf
inc
mov
jns
imul
adc
popa
mov
mov
pop
sbb
cmc
mov
dec
inc
ficoml
inc
dec
inc
adc
sub
icebp
push
jp
push
pop
jns
les
jb
call
mov
fwait
mov
push
push
add
loope
aaa
add
pop
xchg
push
sub
mov
jp
push
dec
mov
mov
dec
sarl
push
fcomp
sbb
flds
add
das
inc
jns
pusha
andb
ret
pop
in
add
cld
hlt
inc
frstor
cmpsb
xchg
adc
mov
push
mov
mov
fmul
mov
dec
or
es
xchg
push
sub
jl
sbb
push
sub
mov
mov
xchg
inc
lock
xlat
add
ret
outsl
out
cmpsb
mov
aam
or
jp
stc
mov
pop
sub
daa
dec
sbb
inc
aas
xchg
insl
dec
push
int3
dec
andl
pop
jae
sbbb
adc
rolb
movb
xchg
inc
scas
clc
jne
lahf
or
int3
dec
fs
jnp
repz
mov
mov
or
push
cmp
cmp
gs
xor
dec
aam
inc
or
repnz
inc
pop
cld
int
incl
mov
pop
mov
int3
jno
adc
mov
int3
adc
dec
adc
cmp
push
and
adc
xor
xchg
pop
push
fcomp
insb
cmc
clc
sbb
outsl
jmp
cwtl
loopne
pop
push
mov
fwait
movsb
mov
loopne
int3
xor
add
shlb
mov
inc
cmp
xlat
js
fistl
cmpsb
xchg
adcb
dec
shll
mov
sbb
pop
test
xor
push
sahf
fbstp
pop
out
jp
pop
int
cmp
lods
add
cmpsb
fisttpll
das
out
and
and
into
jnp
loope
imul
add
int3
popa
push
cmp
out
jbe
push
sub
pop
xchg
push
sbb
adc
lock
dec
mov
divb
inc
mov
fcompl
je
ret
sub
pop
sbb
fbstp
imul
xor
aam
repnz
std
js
mov
out
lcall
add
mov
and
cmp
cltd
dec
imul
leave
dec
dec
lret
mov
jno
push
push
xchg
int
sahf
jl
jno
and
or
inc
loop
fcom
movsl
cmp
in
adc
incb
add
aas
mov
ljmp
dec
pop
mov
jge
xlat
sti
sub
mov
jge
jo
test
xor
jae
repnz
push
push
mov
cltd
lds
hlt
or
push
mov
mov
or
fnstsw
or
jns
jecxz
dec
push
or
sbb
movb
jns
stos
mov
popf
xchg
jg
jmp
push
jge
xchg
aas
roll
sbb
xchg
sahf
add
push
test
sbb
jp
pop
pop
addl
mov
or
imul
daa
or
rorb
xor
mov
sub
loope
or
mov
xor
cmp
push
iret
add
xchg
dec
mov
push
adc
adc
leave
xchg
mov
push
es
add
xor
fcoms
vpsrlq
mov
jo
pushf
dec
ret
rcrl
popf
push
add
jle
or
jp
sbb
cmpb
lahf
inc
sub
xor
push
push
cmp
inc
push
adc
hlt
xchg
or
mov
aam
rclb
mov
adcl
add
in
cmpsb
mov
outsl
aam
jns
add
xor
push
mov
sub
cmp
lahf
dec
sbb
push
sub
stc
xchg
mov
mov
push
jg
and
and
sar
pop
push
cmpb
dec
mov
add
and
clc
jns
inc
cmp
jbe
cmpsl
lock
in
adc
jbe
aad
mov
enter
cmpsl
lret
mov
add
dec
fwait
imul
scas
xchg
mov
inc
mov
push
mov
xchg
jl
mov
repz
fidivl
ja
sub
cmp
add
clc
clc
add
mov
sub
lahf
fsubp
mov
and
mov
sbb
push
mov
imul
xchg
rcl
stos
mov
push
es
movsl
ficomps
scas
pushf
xor
pop
mov
stos
sbb
scas
fstps
dec
pushf
mov
adc
lock
adc
cmp
incb
ret
push
fidivrs
xor
mov
lret
xor
pop
mov
mov
scas
mov
sub
jnp
lods
xchg
ret
push
out
sbb
or
or
nop
in
rcrl
into
lock
jecxz
lahf
add
rcr
dec
aad
push
int
push
hlt
xchg
add
add
nop
fwait
mov
fistl
mov
scas
push
cwtl
mov
jo
sub
aam
inc
cmpsl
call
mov
push
rcll
lea
cmp
and
movsl
andl
cld
push
cmp
mov
push
rcr
fsubrl
push
adc
push
push
mov
inc
add
add
or
or
in
cmp
or
cwtl
push
add
aam
stc
mov
mov
adc
mov
dec
add
jns
jg
cld
std
leave
or
incl
mov
cmp
fwait
cwtl
xlat
lock
mov
dec
test
and
inc
mov
adc
sub
push
lea
push
xchg
stos
add
call
xlat
or
rorl
adc
jp
jg
and
call
bound
and
in
popa
xchg
in
cli
popa
ljmp
adc
sbb
adc
iret
dec
adc
movsl
sbb
mov
pop
cwtl
fnstcw
push
sbb
pop
out
dec
add
popf
and
arpl
sub
loope
ljmp
call
mov
mov
sahf
mov
popf
test
insb
fmull
decl
jle
mov
les
mov
scas
psubusw
loope
cwtl
cmpb
cwtl
inc
or
gs
cmp
test
inc
sbb
cmp
add
into
xor
inc
add
adc
jge
push
lds
popl
or
test
aas
sub
jl
cmp
sbb
sbb
aam
fs
sbb
jnp
lods
cmp
call
lods
mov
jne
stos
xor
add
nop
mov
mov
jo
mov
xchg
sahf
mov
mov
sub
sub
sbb
mov
mov
das
jp
repnz
pop
ret
lcall
pop
mov
push
rcrl
mov
stc
jg
insb
into
jne
in
xchg
insb
xlat
inc
mov
pusha
push
aam
push
mov
dec
push
out
test
je
add
insl
sbb
push
imul
popf
push
push
in
xor
neg
add
inc
addb
and
stc
cld
push
mov
or
int
incb
cmpsl
arpl
scas
push
cmp
jp
mov
loope
add
loopne
outsl
stc
aad
jns
aam
adc
cmc
lods
adc
sbbb
stos
jmp
scas
call
ds
add
mov
sti
stos
sub
xchg
popf
out
jge
shr
mov
inc
cmpsl
hlt
data16
inc
leave
fistl
pop
mov
inc
dec
sldt
gs
cmp
inc
sbb
sub
xor
mov
add
pop
cmp
jns
aas
mov
add
push
addr16
pop
or
scas
cmp
and
lock
int
pop
ss
scas
cmp
in
dec
sub
pop
or
push
pop
loopne
add
mov
mov
push
adc
aaa
sti
sub
rcrb
mov
sub
dec
cmpsl
sbb
outsb
cmp
std
bnd
add
out
pop
lods
shlb
pop
loop
jp
dec
adc
in
push
cmp
movsl
xchg
mov
hlt
cli
incl
mov
test
push
test
int
cmp
mov
sahf
cmc
push
lea
test
daa
test
cld
adc
push
mov
or
nop
jl
fnstcw
pop
lds
shr
lret
aaa
and
inc
sbb
cmpsb
in
rclb
jl
ljmp
insb
addb
jnp
mov
jmp
stc
jl
in
xchg
inc
cltd
mov
xorb
pop
sbb
ret
push
mov
sub
ja
rcr
out
cmp
pop
cmc
jecxz
sbb
cld
fwait
cmp
test
in
loopne
xchg
cs
add
dec
imul
or
sub
lds
repnz
cwtl
cmc
filds
push
jle
imul
lea
inc
sub
and
xchg
and
aad
and
hlt
subb
mov
mov
pop
in
cmpsl
adc
cmovle
xor
arpl
mov
in
lds
outsl
pop
test
dec
sbb
inc
das
mov
mov
das
daa
rcrb
mov
sub
xor
push
icebp
cmp
and
jg
icebp
rcr
dec
lods
test
or
es
nop
popf
pop
xchg
cmp
cmp
mov
push
sub
test
jle
daa
sahf
sbb
movsl
iret
and
cli
shr
add
fxch
mov
sti
push
cmpsl
xchg
sbb
sub
repz
subb
inc
mov
xor
incl
inc
ret
jge
fcompl
jg
adc
cli
in
lods
jb
jae
push
xor
jns
pop
cwtl
stos
and
cmp
les
mov
inc
cld
jge
jp
aad
ficomps
dec
test
push
stos
mov
pop
ficoms
cmp
adc
mov
ret
sub
out
or
push
or
add
popa
pop
fcomps
mov
mov
fnstcw
jle
jae
push
add
ds
lcall
leave
loopne
add
daa
fwait
test
pop
pop
adc
lcall
adc
ja
icebp
js
inc
imul
je,pt
ficoml
sbb
mov
and
lods
lock
and
adc
pop
das
shlb
xor
fstps
jmp
push
lret
xor
shlb
cwtl
arpl
jmp
repnz
punpckldq
lcall
mov
sub
mov
mov
xor
call
pop
ja
sub
mov
cmpsl
in
adc
and
jge
jbe
jmp
pop
std
lret
cwtl
ja
pop
and
cmpsb
popa
inc
std
xor
stos
xor
out
cmp
mov
icebp
sti
mov
icebp
aad
and
repz
sbb
jecxz
mov
push
mov
ret
mov
fwait
cmp
loop
stc
cwtl
jne
ss
push
icebp
push
dec
inc
and
std
aad
jno
fistpl
mov
xchg
xor
mull
dec
or
mov
sub
pop
aas
pop
stos
mulb
outsl
push
test
int
in
popa
out
or
xor
out
add
out
add
out
add
out
add
call
add
call
add
jmp
add
jmp
add
ljmp
fldl2e
add
ljmp
add
fldpi
add
jecxz
fldlg2
add
in
fldlg2
add
in
add
xlat
bnd
add
pop
loop
jecxz
loopne
cmc
out
out
pusha
in
jmp
popa
flds
jmp
popa
flds
call
popa
flds
jmp
flds
jmp
flds
ljmp
add
popa
flds
in
flds
in
add
add
popa
flds
out
popa
flds
out
flds
out
popa
flds
out
flds
icebp
popa
flds
icebp
popa
flds
loopne
flds
loopne
flds
repz
flds
repz
flds
loop
flds
loop
flds
add
add
aas
xlat
add
xlat
add
push
xlat
add
dec
xlat
add
cmp
add
cmp
add
or
add
or
add
sti
add
sti
add
add
xlat
add
or
add
sti
add
sti
add
lret
add
lret
add
mov
add
lret
add
leave
add
mov
add
mov
add
or
fmull
add
fisttpll
add
fisttpll
add
fisttpll
add
add
bound
or
add
or
add
add
bound
bound
or
add
bound
add
or
add
bound
add
or
add
bound
add
or
add
into
add
bound
or
add
or
add
bound
add
testb
jbe
or
roll
add
push
add
add
flds
add
popa
add
adc
fsts
add
fldenv
add
push
add
in
add
add
lods
add
and
add
inc
add
lea
push
add
add
push
add
popf
add
adc
add
fsts
pop
add
add
fprem1
add
insl
add
flds
daa
data16
lahf
pop
loope
xlat
popa
loope
dec
pop
loope
pop
data16
jg
loope
out
loope
pop
pop
loope
pop
data16
pop
loope
daa
data16
lahf
pop
loope
xlat
popa
loope
dec
pop
loope
call
pop
loope
test
loope
sub
add
popa
loope
dec
pop
loope
mov
popa
loope
or
add
popa
loope
pop
pop
loope
cwtl
popa
loope
sbb
add
data16
cwtl
popa
loope
pop
data16
fsubs
add
xchg
fisttpl
add
fmull
add
or
ret
add
fmull
add
or
loop
or
inc
fisttpl
add
fimull
add
or
rcr
or
adc
add
fisttpl
add
fisttpl
add
mov
or
fimull
add
or
into
fimull
add
fimull
add
fisttpl
add
fimull
add
or
scas
fimull
add
fimull
add
fimull
add
or
dec
aad
add
aad
add
add
or
add
bound
add
bound
or
add
bound
add
bound
mov
or
add
or
add
or
add
or
add
or
add
or
add
bound
or
add
or
add
bound
or
add
or
add
fstps
pop
fstps
imul
add
fiaddl
fptan
add
pop
fptan
add
fldenv
imul
add
fnstenv
add
fnstenv
add
imul
add
add
rolb
flds
imul
add
add
rolb
flds
imul
add
add
loop
imul
add
push
add
fld
add
ret
fnstenv
add
xor
fld
add
ret
imul
xor
add
data16
bound
add
loop
rcrb
add
popa
loop
out
popa
loop
out
loop
outsb
pop
loop
popaw
loop
cs
loop
es
loop
scas
pop
loop
cmpsb
popa
loop
into
popa
loop
pusha
loop
dec
pop
loop
inc
popa
loop
into
popa
loop
pusha
loop
dec
pop
loop
inc
popa
loop
fisubs
add
pusha
loop
pop
add
add
loop
mov
pusha
loop
ds
loop
ss
loop
add
pop
add
pop
add
add
add
pop
add
pop
add
pop
add
xlat
pop
add
pop
add
pop
add
pop
add
xlat
pop
add
pop
add
pop
add
xlat
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
sti
add
bound
add
add
sti
add
bound
add
or
add
or
add
bound
add
pop
bound
add
add
lock
bound
add
bound
add
bound
add
fadds
bound
add
bound
add
bound
faddl
bound
add
mov
pop
add
xchg
add
ljmp
fldcw
add
add
push
mov
push
dec
add
fxch
add
out
addr16
add
filds
addr16
add
jmp
addr16
add
jecxz
addr16
add
jmp
add
loope
addr16
add
in
add
cmc
add
in
addr16
add
call
add
add
popa
fiadds
shlb
add
popa
fiadds
hlt
add
add
popa
fiadds
in
popa
fiadds
ljmp
add
popa
fiadds
shlb
add
popa
fiadds
mulb
add
pusha
fildl
in
fiadds
out
imul
out
loopne
loope
rorl
loope
rorl
lock
rolb
jecxz
rorl
jecxz
rorl
rep
rorl
repz
loop
aam
loop
aam
repnz
aam
repnz
in
pop
aad
fstl
or
not
or
pop
fmuls
pop
fmuls
pop
fmuls
xlat
xlat
or
xlat
or
or
mov
or
or
xchg
or
test
push
push
movsl
leave
push
push
jne
push
push
test
push
push
test
push
push
test
push
push
push
leave
push
push
inc
leave
push
push
inc
leave
push
push
add
leave
push
push
inc
leave
push
push
inc
leave
push
push
add
leave
push
push
add
mov
adc
insl
scas
adc
gs
minps
adc
insl
scas
adc
gs
minps
adc
insl
scas
adc
gs
minps
adc
insl
scas
pcmpgtw
add
jae
adc
add
push
adc
lea
adc
dec
mov
je
pop
pop
insl
scas
pop
pop
jne
sbb
push
sbb
pop
mov
sbb
dec
mov
sbb
add
imul
sbb
icebp
sbb
loope
pop
ret
loope
dec
ret
rcrl
dec
ret
rcrl
js
add
js
add
push
ret
pop
ret
add
loop
dec
ret
dec
ret
jns
add
jns
add
imul
jmp
pop
push
dec
inc
jle
add
jbe
sti
pop
outsb
data16
pop
push
dec
lds
aad
lds
inc
lds
inc
sbb
inc
sbb
inc
sbb
add
sbb
inc
sbb
add
add
sbb
add
hlt
add
in
add
in
sbb
add
aam
sbb
inc
sbb
sbb
pusha
xlat
add
fildl
repz
rorb
in
aad
fsubrl
mull
push
out
pop
aam
stc
jno
adc
push
leave
adc
sbb
movups
movups
or
adc
cmp
adc
sbb
adc
or
adc
pop
int3
adc
test
adc
pop
int3
adc
push
lret
adc
lret
lret
push
mov
push
push
xchg
int
push
xchg
int
push
test
adc
pop
xchg
int3
adc
pop
xchg
mov
sbb
cmpl
sbb
xor
sbb
arpl
sbb
bound
sbb
pop
mov
sbb
dec
mov
sbb
sbb
jnp
sbb
imul
sbb
sbb
pop
cmpsb
sbb
pop
mov
sbb
sbb
dec
xchg
sbb
sbb
js
sbb
push
cmpsl
sbb
pop
cmpsl
sbb
pop
mov
sbb
sbb
dec
xchg
sbb
sbb
add
sbb
sbb
add
bound
add
bound
add
bound
in
add
out
add
loope
fpatan
add
in
add
xlat
add
roll
fcos
add
sti
add
pop
add
fcos
add
testl
fldenv
add
xchg
add
xchg
add
addr16
flds
fldenv
add
flds
add
add
out
add
call
add
ljmp
fxam
add
add
popa
flds
frstor
add
popa
flds
add
add
popa
flds
fldenv
add
data16
or
add
flds
test
data16
imul
flds
jmp
in
mov
add
imul
add
jno
add
imul
add
jno
add
mov
mov
add
popa
xlat
add
popa
roll
lock
roll
loop
into
add
popa
lret
mov
adc
add
sub
pop
fdivrl
add
push
add
jno
add
aad
add
aad
add
fildl
add
faddl
add
fcoml
add
fcoml
add
fcoml
add
fcoml
add
fisttpl
add
fisttpl
add
fcoml
add
fcoml
add
fistl
add
fistl
iret
fistl
mov
fistl
add
fildl
add
fildl
jle
add
add
add
add
add
xor
shll
andl
incb
pop
mov
add
adc
pop
mov
add
ret
mov
add
add
bound
add
bound
add
bound
adc
bound
pop
bound
add
fiaddl
bound
add
bound
add
jns
jne
sbb
arpl
push
in
cmp
icebp
xor
repnz
pop
repz
xor
sub
and
lock
and
and
jecxz
xor
out
shl
add
aaa
fisubs
add
in
and
push
adc
push
add
movsl
shl
insl
add
fincstp
xor
or
loope
into
inc
add
xlat
shll
stc
iret
sbb
push
mov
aad
out
mov
or
popa
jmp
popa
flds
jmp
outsl
loope
in
mov
adc
sub
adc
sbb
adc
add
xchg
adc
lea
adc
and
mov
mov
adc
jp
mov
stos
xchg
lock
jecxz
fwait
xchg
adc
test
cwtl
and
imul
rorl
std
xchg
adc
xchg
adc
adc
nop
adc
cmp
jge
adc
push
cmp
pop
xchg
adc
cmpsl
dec
adc
adc
jge
jge
adc
outsb
adc
adc
je
adc
adc
xchg
ret
xlat
incl
cli
incl
cli
incl
lret
add
incl
mov
fcos
add
flds
add
add
pusha
mov
add
add
data16
add
add
data16
add
add
pusha
mov
add
incb
pusha
mov
add
add
arpl
add
fs
add
popa
scas
add
popa
scas
add
pop
scas
add
popa
mov
add
add
popa
mov
add
add
bound
jge
bound
or
jge
bound
add
loopne
inc
int
push
call
fldz
add
out
mov
fnstcw
mov
fsts
add
lret
mov
fldenv
mov
fxch
add
fnstenv
jl
fptan
add
das
jl
fldpi
add
sbb
incl
jae
inc
jl
fstps
jl
fld
add
pop
jl
fsts
add
fsts
mov
fnstenv
jl
fnstenv
jl
fstps
data16
jl
fstps
jl
flds
and
add
inc
sbb
jl
rolb
add
popa
les
std
sub
add
popa
ret
add
push
sbb
popa
rolb
int
sbb
cli
popa
iret
add
popa
aam
sbb
sbb
andb
add
sbb
inc
data16
sub
sbb
xlat
popa
jmp
sbb
imul
add
data16
or
popa
loopne
cmc
xchg
add
popa
loope
fnsave
add
sbb
add
adc
or
inc
adc
adc
inc
adc
pop
add
inc
add
fmull
add
inc
add
fmull
add
inc
add
adc
add
cmp
push
inc
add
fstl
add
inc
add
fcoml
add
inc
add
pop
inc
add
fmull
add
inc
add
fcoml
add
inc
add
adc
notl
adc
jnp
inc
add
add
bound
inc
bound
push
cld
add
aas
add
loop
inc
lds
add
jle
bound
adc
jge
bound
add
bound
add
idivb
enter
into
jnp
bound
jl
out
pop
bound
inc
bound
add
bound
jge
sub
inc
bound
add
bound
inc
bound
jge
add
pop
jl
fnstcw
add
fstpt
and
add
andb
movl
and
cmp
pop
jg
fxch
add
cmpsl
jg
fnstcw
jg
pop
fsts
add
fnstcw
andb
jmp
andb
aaa
andb
das
andb
sbb
dec
fldenv
mov
push
fstps
mov
faddl
loop
add
pop
movb
loop
add
faddl
cmc
loop
add
popa
faddl
fucom
sbb
jb
out
add
pop
loopne
aad
sbb
dec
pop
filds
test
pop
faddl
mov
sbb
into
popa
fiaddl
cltd
loop
add
jecxz
add
aam
inc
jecxz
add
filds
xchg
add
sbb
imul
add
loop
add
popa
loop
movsl
loop
add
fadds
jmp
inc
add
inc
add
fmuls
add
pop
inc
add
or
pop
inc
add
fadds
add
fmuls
add
inc
add
fadds
cmpsl
push
inc
add
fadds
lret
push
inc
add
jo
push
add
adc
imul
inc
add
fisttpll
add
push
inc
add
xor
push
push
add
add
insl
inc
add
add
inc
cmc
add
bound
xchg
inc
bound
add
inc
bound
xchg
inc
bound
xchg
inc
bound
add
inc
bound
into
xchg
inc
rolb
notb
bound
add
inc
bound
xchg
inc
stc
add
bound
add
rclb
add
bound
xchg
inc
fxch
add
xchg
mov
flds
mov
mov
fldcw
xchg
add
fldenv
xchg
mov
fstps
xchg
and
mov
jne
aas
xchg
and
dec
add
xlat
xchg
and
push
add
lret
xchg
and
roll
fxch
xchg
and
dec
add
xchg
xchg
and
popl
inc
fnstenv
and
cmp
xchg
and
inc
add
fnstcw
mov
fnstenv
mov
in
jno
sbb
in
add
add
popa
jecxz
lods
in
sbb
popa
in
in
sbb
scas
out
insl
int3
sbb
adc
repz
int3
sbb
popa
enter
sbb
data16
add
in
mov
popa
in
imul
fiaddl
jns
sbb
andl
add
popa
fldl
cmp
sbb
mov
add
sbb
sbb
add
adc
add
push
or
add
addr16
add
addr16
add
faddl
add
fmull
add
faddl
add
inc
add
add
arpl
add
faddl
add
pusha
inc
add
pusha
inc
add
fmull
jmp
add
fmull
add
pusha
inc
add
inc
add
or
sti
pop
inc
add
imul
cli
nop
inc
bound
add
inc
bound
xchg
inc
bound
add
inc
bound
add
inc
bound
xchg
inc
bound
nop
inc
bound
add
inc
bound
inc
fimuls
or
mov
adc
popl
hlt
add
bound
popl
sub
inc
bound
adc
mov
fsts
push
fnstenv
mov
flds
add
jg
mov
fstps
add
orl
repnz
rcll
pop
fnstcw
add
mov
add
flds
xchg
and
xor
pop
fnstcw
and
add
das
xchg
and
push
add
sbb
pop
fsts
xchg
and
add
pusha
in
add
pop
add
in
sbb
pop
jecxz
in
sbb
inc
add
add
in
sbb
les
add
sbb
push
pop
mov
add
popa
aad
push
fstpl
add
pop
ljmp
pop
in
cltd
fstpl
add
in
sbb
inc
pop
in
add
fstps
add
out
sbb
inc
pop
testb
fstps
add
add
sbb
sbb
jecxz
sub
sbb
add
aad
add
dec
pop
inc
add
fldcw
add
flds
add
jnp
inc
add
pop
inc
add
add
inc
add
fmuls
add
inc
add
add
inc
add
or
mov
add
sub
mov
add
add
fcoms
add
inc
add
or
sub
add
dec
fmuls
add
inc
add
inc
add
add
bound
add
bound
add
mov
mov
adc
rolb
bound
mov
hlt
add
cli
mov
lahf
add
bound
mov
popf
add
bound
mov
adc
inc
bound
mov
jb
adc
mov
xor
inc
fildl
bound
add
bound
jne
push
fldl2t
add
mov
add
fnstenv
add
out
add
out
add
call
xchg
fld1
add
out
add
add
fincstp
xchg
add
mov
add
iret
add
ret
xchg
f2xm1
add
out
add
xlat
xchg
fxtract
add
jecxz
flds
jmp
flds
or
mov
mov
flds
call
popa
flds
fnstenv
in
popa
flds
mov
popa
fiadds
frstor
add
add
sbb
call
xchg
add
xchg
add
sbb
ljmp
add
push
mov
pop
push
sbb
in
push
mov
pop
inc
sbb
out
inc
flds
add
sbb
out
testb
icebp
xchg
add
cltd
sbb
loopne
flds
rorb
test
cmp
aas
add
mov
add
int
add
cmp
aas
add
int
add
add
loop
aas
add
aas
add
inc
lds
add
pushl
mov
aas
add
mov
aas
add
mov
aas
add
mov
aas
add
lds
add
push
les
add
inc
les
add
bound
cmp
bound
mov
cmp
bound
cmp
fdivp
call
cmc
incl
xor
jne
cmp
scas
and
bound
cmp
shlb
add
cmp
sub
add
cmp
add
cmp
bound
aas
inc
bound
and
inc
bound
ds
bound
ds
es
loopne
and
add
arpl
sarb
and
adc
arpl
sarb
flds
es
mov
and
shll
and
les
and
aad
arpl
cmpb
fld
and
mov
fldenv
mov
fsts
add
flds
mov
fnstenv
cmp
and
mov
fsts
cmp
fnstcw
cmp
lock
cmp
xchg
cltd
sbb
adc
xchg
cltd
jg
add
mov
jns
sbb
repnz
jns
sbb
in
xchg
pop
dec
sbb
aam
xchg
pop
aas
sbb
movl
das
sbb
mov
xchg
cmp
fadds
pusha
mov
add
sbb
push
jle
add
sbb
inc
outsb
sbb
sub
sbb
sub
dec
sbb
sub
fadds
adc
sbb
add
jmp
aas
add
call
sarl
adc
aas
add
mov
aas
add
mov
incl
mov
mov
aas
add
mov
inc
sarl
mov
sarl
lods
mov
jmp
sarl
mov
sarb
fwait
mov
inc
lds
add
lds
add
jmp
mov
call
aas
add
incl
aas
add
and
jmp
and
fnstcw
add
and
bound
and
bound
inc
bound
add
cmp
cmp
add
cmp
and
bound
inc
bound
cmp
dec
and
bound
inc
bound
add
cmp
imul
bound
cmp
adc
add
cmp
bound
and
bound
cmp
add
cmp
add
leave
cmp
and
and
arpl
adc
cmp
and
lock
fxch
and
loopne
and
shlb
fnop
cmp
and
sarb
fld
and
mov
and
xchg
and
mov
and
nop
cmp
fsts
cmp
flds
cmp
mov
fsubs
mov
fcoms
mov
fadds
mov
fdivr
das
push
sbb
sbb
inc
sbb
sbb
fadds
adc
sbb
incl
add
sbb
incb
sbb
loope
cmp
mov
add
mov
cltd
jnp
add
mov
jns
sbb
mov
cmp
pop
sbb
movsl
add
sbb
xchg
jo
pop
cmp
add
sub
add
fadds
jo
sbb
imul
add
jmp
add
mov
lds
add
lds
add
adc
inc
lds
add
lds
add
adc
lds
add
add
mov
adc
add
mov
adc
xchg
mov
adc
mov
call
aas
add
call
aas
add
call
aas
add
out
add
mov
adc
rol
aas
add
mov
inc
mov
and
bound
cmp
add
cmp
add
cmp
and
bound
std
and
jmp
and
fnstcw
bound
and
bound
and
bound
inc
bound
and
bound
and
bound
and
bound
inc
bound
add
cmp
add
cmp
clc
and
bound
inc
bound
and
bound
cmp
flds
cmp
push
cmp
cmp
cmp
arpl
and
fsts
cmp
in
cmp
and
dec
repz
cmp
and
es
fchs
cmp
flds
cmp
fsts
cmp
flds
cmp
fsts
arpl
mov
es
nop
cmp
and
push
es
cmpb
flds
inc
jl
add
sbb
cltd
jg
add
sbb
cwtl
jg
add
sbb
jnp
fadds
inc
pop
sbb
jp
fadds
xor
add
fadds
and
sbb
pop
aas
fadds
adc
sbb
aas
aas
fadds
add
fadds
lock
add
jg
add
outsl
sbb
addl
fdivr
mov
aas
fadds
mov
sbb
gs
fadds
mov
aas
fadds
nop
sub
add
sbb
sarl
mov
add
mov
aas
add
mov
aas
add
mov
aas
add
mov
aas
add
mov
incl
push
mov
incl
add
aas
add
call
sarl
xchg
mov
aas
add
sarl
jno
add
mov
mov
aas
add
add
ret
add
and
bound
inc
and
bound
inc
bound
cmp
inc
cmc
cmp
inc
and
bound
cmp
add
cmp
and
leave
cmp
bound
and
bound
and
jmp
and
fnstcw
bound
add
cmp
sbb
add
cmp
leave
pop
add
cmp
mov
cmp
out
add
cmp
flds
arpl
mov
and
nop
cmp
fldenv
cmp
arpl
jo
mov
fldenv
mov
fsts
mov
flds
mov
fnstenv
cmp
cmp
mov
flds
cmp
cmp
arpl
loopne
and
inc
and
sarb
and
push
and
sarb
flds
inc
inc
fiaddl
mov
dec
sbb
adc
cmp
add
fiaddl
nop
sub
add
sbb
sbbb
add
sbb
fnstenv
jnp
cltd
jnp
add
sbb
push
data16
mov
push
sbb
mov
inc
sbb
popf
inc
fadds
and
sbb
pushf
inc
fadds
adc
sbb
jg
fadds
add
fadds
lock
add
sbb
loopne
sbb
push
sbb
shrb
add
and
aas
add
call
mov
inc
mov
call
mov
jmp
mov
decl
add
dec
add
cmp
add
sub
add
cmp
add
sub
add
add
mov
add
aad
add
mov
add
aad
add
aad
add
aad
add
jno
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
jge
add
xchg
add
jge
add
xchg
add
jge
add
xchg
add
jge
add
xchg
add
jge
add
xchg
add
jge
add
xchg
add
jge
add
fldpi
pop
pop
fucom
pop
data16
add
out
add
out
add
out
add
out
add
add
out
add
out
add
out
add
out
arpl
push
sub
fld1
and
mov
fnstenv
sub
fldl2e
and
mov
fsts
sub
fldlg2
push
flds
sub
flds
out
shlb
lock
add
mov
loopne
sbb
loope
fiaddl
rolb
dec
sbb
lock
fiaddl
sarb
add
aas
fiaddl
mov
sbb
repnz
fiaddl
mov
aas
flds
nop
mov
add
insb
flds
cmpb
out
ja
jo
sbb
divb
ja
mov
jg
add
sbb
fdivrs
fadds
inc
sbb
fstpt
fadds
xor
add
aas
fadds
and
sbb
std
aas
flds
adc
mov
add
lds
add
ret
mov
inc
ret
mov
pushl
mov
aas
add
ret
pusha
mov
aas
add
add
repnz
ds
add
loop
aas
add
ret
pop
insb
inc
lds
add
pushl
mov
lds
add
pushl
lds
add
mov
aas
add
and
leave
sub
bound
sub
bound
sub
ljmp
fsubs
add
sub
leave
and
bound
and
bound
sub
mov
add
sub
pushf
and
bound
inc
bound
sub
bound
inc
lret
repz
shlb
add
sub
add
sub
add
sub
and
and
and
adc
fnstcw
and
mov
sub
fstps
cmc
lods
je
sub
and
shrb
and
add
arpl
shrb
fyl2x
and
arpl
mov
and
loop
arpl
mov
and
nop
sub
flds
hlt
cmp
fldenv
repz
fldenv
repz
fldcw
repz
flds
sub
jae
xor
add
icebp
jae
and
sbb
sub
xchg
add
jae
add
add
mov
lock
jae
loopne
sbb
mov
dec
sbb
mov
jae
sarb
add
dec
sbb
mov
jae
mov
push
jae
nop
mov
add
sbb
cmpsl
xor
jo
sbb
xor
pusha
jbe
add
adc
push
inc
sbb
add
jmp
data16
pushl
lds
add
sub
incl
aas
add
lds
add
jmp
aas
add
pushl
addr16
inc
mov
pushl
addr16
jmp
addr16
pushl
addr16
inc
mov
push
mov
jmp
mov
pushl
insb
incl
ret
add
hlt
call
and
incl
push
daa
add
sub
fbld
add
sub
in
call
jae
inc
in
inc
jecxz
inc
repz
mov
cs
bound
sub
mov
add
sub
xchg
and
bound
sub
inc
pop
add
sub
bound
call
sub
inc
cmc
incl
sub
pop
cmc
pushl
fsts
and
fsts
jb
mov
fnstcw
es
mov
fnstcw
es
es
and
sbb
jb
dec
sub
frndint
and
and
std
and
and
fisubs
and
iret
and
sub
fld
and
and
mov
push
and
mov
mov
mov
leave
add
sbb
data16
add
outsl
dec
sbb
push
dec
sbb
imul
xor
sbb
push
pop
mov
add
fiaddl
adc
jle
add
add
mov
add
fiaddl
lock
add
fiaddl
loopne
sbb
popa
cmp
add
cmp
add
fiaddl
rorb
arpl
add
cmp
add
jl
add
into
mov
jmp
ret
mov
ret
lods
mov
incl
imul
mov
aas
add
stos
imul
mov
imul
xor
incl
imul
jb
aas
add
imul
bound
pushl
imul
add
add
imul
mov
aas
add
imul
mov
sub
ret
loopne
incl
ret
in
decl
sub
cmc
repnz
cmp
push
repz
push
hlt
lcall
pusha
adc
inc
or
add
sub
add
sub
bound
adc
cmpb
dec
enter
sbb
sub
bound
hlt
ljmp
pop
hlt
lcall
pop
and
bound
adc
bound
pop
hlt
ljmp
sub
fsts
pop
insl
mov
cmc
dec
insl
xchg
sub
insl
subl
sub
fsts
sub
fsts
sub
fnstcw
flds
mov
fnstenv
sub
fstps
fldenv
sub
fstps
fsts
sub
fnstcw
flds
sub
fnstcw
lock
fstps
sub
sub
flds
sub
flds
jae
flds
mov
sbb
bound
add
jb
add
push
flds
orb
add
sbb
cmpsb
insl
flds
pusha
inc
sbb
test
sbb
test
aas
inc
sbb
stos
push
flds
xor
sbb
stos
shrl
and
fiaddl
adc
add
sbb
scas
push
out
jns
add
add
dec
sbb
and
sbb
add
push
aas
add
add
mov
aas
add
mov
decb
repnz
add
loop
aas
add
mov
decb
cmpb
pushl
mov
aas
add
mov
aas
add
mov
aas
add
mov
aas
add
mov
aas
add
addr16
ljmp
aas
add
incl
test
add
sub
mov
sub
pop
add
sub
pop
and
add
sub
movsb
pop
add
sub
mov
add
sub
ret
jmp
out
stc
pop
inc
bound
pop
inc
bound
pop
inc
bound
pop
inc
bound
punpckldq
pop
inc
bound
vsubps
pop
out
mov
pop
inc
bound
jmp
xchg
imul
aas
stc
push
fnop
pop
and
push
stc
gs
pop
and
inc
mov
mov
mov
fsts
adc
mov
fnstenv
mov
fldenv
mov
fnstcw
pop
mov
fnstenv
mov
fnstcw
pop
and
lcall
fstps
adc
jl
flds
pop
and
add
flds
in
sbb
pop
popa
flds
cmpsl
sub
add
flds
rcrb
sbb
inc
dec
flds
rorb
add
dec
flds
mov
sbb
and
add
outsb
flds
nop
cltd
sbb
add
flds
orb
add
sbb
out
flds
scas
sbb
jmp
add
add
mov
flds
loopne
flds
loopne
flds
repnz
add
popa
flds
in
flds
fsubl
add
cwtl
sbb
add
sbb
add
sbb
add
add
lret
sbb
add
add
ficompl
add
data16
add
sbb
add
add
sbb
add
and
add
pop
sbb
add
faddl
add
sbb
add
faddl
add
sbb
add
faddl
add
add
add
fwait
sbb
add
add
stos
sbb
add
add
cltd
sbb
add
add
push
fildl
add
aas
add
add
lret
aas
add
add
lock
add
add
jmp
add
std
inc
add
add
bound
inc
add
bound
add
bound
inc
add
add
inc
add
add
in
add
add
bound
add
bound
inc
add
add
out
add
add
call
add
stc
cmp
add
add
add
flds
add
jb
fxch
add
fs
fldpi
add
fsts
fnstcw
aas
fld
add
xchg
aas
add
cmpl
fnstcw
aas
fnstcw
fsts
aas
flds
ds
fstps
add
fnstcw
flds
jge
pushf
flds
inc
pop
flds
pop
mov
add
flds
pop
jl
add
pop
flds
ds
flds
push
pop
flds
xor
add
add
popa
flds
xchg
cmp
add
popa
flds
xchg
add
pushf
flds
mov
mov
add
jl
add
insb
flds
je
flds
sub
add
add
flds
scas
aas
flds
push
pop
flds
add
add
add
add
adc
add
add
add
lock
add
cmpsb
xlat
add
movsl
add
test
add
push
cmpsb
add
movsb
xlat
add
inc
cmpsb
add
or
add
xor
add
cli
faddl
add
add
leave
fldl
add
mov
add
add
mov
movsb
add
mov
movsb
add
jge
add
into
movsl
add
jl
add
bound
add
bound
add
bound
add
bound
bound
add
bound
add
add
bound
add
add
bound
add
add
bound
add
bound
add
bound
add
dec
add
pusha
dec
add
pop
add
arpl
add
push
add
pop
add
add
adc
jge
sbb
jnp
mov
cltd
add
mov
fcoms
add
inc
fdivs
xor
fsubs
dec
fcomps
lahf
push
add
fsubs
add
pop
fsubs
add
pop
fsubs
add
pop
fcoms
add
mov
ficoml
stos
fiaddl
int3
fidivl
add
rcr
add
popa
fiaddl
or
mov
call
pop
into
call
retw
add
mov
pop
lret
adc
pop
adc
mov
or
mov
lock
data16
incl
addr16
dec
pop
mov
aas
addr16
decl
mov
jg
stos
incl
pop
cmpsb
jmp
addr16
cs
sar
xor
pushl
pop
mov
in
jge
pop
add
or
gs
pop
add
aad
add
xlat
sbb
push
xlat
imul
xlat
pop
add
aad
add
aad
add
aad
add
aad
add
aad
add
and
das
add
push
add
daa
add
cmp
and
adc
push
and
aas
add
aad
add
add
inc
add
das
push
add
inc
add
dec
add
aam
add
add
scas
add
rolb
add
add
arpl
add
arpl
sub
add
dec
arpl
add
imul
add
adcb
xchg
adc
or
decb
or
add
cli
jb
icebp
add
mov
push
sbb
movsb
push
dec
cmpsb
xor
test
push
loop
in
inc
out
dec
inc
xchg
loopne
sti
xchg
loope
mov
add
pop
incl
test
dec
test
inc
test
mov
test
add
test
add
test
add
test
test
test
mov
test
add
movsb
add
test
add
test
add
xor
nop
test
add
test
add
stos
add
add
bound
bound
cmp
xor
bound
cmp
bound
pop
bound
push
bound
adc
bound
adc
xor
std
jo
ret
xor
in
xor
aad
xor
rolb
bound
stos
bound
push
lods
bound
push
scas
bound
push
xor
push
xor
push
and
push
and
push
add
fldcw
push
test
cs
add
push
jnp
xor
jp
das
push
imul
xor
jg
xor
outsb
fnstenv
push
insl
fnstenv
push
insb
fnstenv
push
and
mov
cmp
sbb
stos
pop
inc
push
test
pop
inc
push
lahf
pop
inc
push
out
pop
inc
push
fstpl
push
fcompl
push
jecxz
inc
push
repnz
dec
push
icebp
pop
dec
push
loopne
dec
push
pop
pop
dec
push
add
pop
dec
push
and
adc
dec
pop
add
dec
mov
std
push
fs
call
dec
call
ud0
adc
push
or
pop
adc
push
or
push
pop
or
push
sbb
pop
pop
push
lcall
inc
cld
pop
pop
dec
cld
pop
push
cld
nop
pop
pop
inc
cld
pop
pop
loopne
adc
pop
fdivrp
add
sti
add
pop
add
add
sti
add
add
add
pop
sbb
pop
test
pop
cmpsb
sti
or
mov
std
pop
aad
std
aad
std
outsl
aad
std
fs
std
lahf
aad
std
jne
sub
jb
sub
lahf
aad
std
jno
sub
outsb
aad
std
mov
aad
std
cmpsb
aad
std
dec
aad
std
cmp
mov
cmp
stos
or
sub
movsb
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
or
lahf
or
aad
nop
pop
push
add
inc
push
or
xor
adc
es
pop
add
dec
push
incl
add
add
push
in
add
pop
incb
pop
icebp
add
push
repz
pop
hlt
add
pop
cmc
add
imul
imul
mov
pop
or
lcall
add
pop
cld
add
imul
add
adc
loop
add
loop
add
loope
add
loop
add
loop
add
loop
add
lods
loop
add
loop
add
loop
add
loop
add
loop
add
jecxz
add
mov
mov
test
add
jecxz
and
loope
add
loope
add
loope
add
loope
add
lret
loop
add
add
loop
add
leave
add
mov
bound
or
xchg
popa
orl
popa
xchg
xchg
popa
jge
xchg
popa
or
xchg
popa
incl
xchg
popa
cli
pop
cwtl
popa
stc
pop
cltd
popa
or
lcall
pop
pushf
popa
cmc
pop
popf
popa
push
or
popa
adc
mov
popa
repnz
mov
popa
cmc
pop
movsl
popa
out
pop
cmpsb
popa
xchg
or
popa
mov
test
popa
and
mov
popa
and
mov
and
mov
sbb
lea
hlt
fiaddl
or
fiaddl
or
ficoml
or
ficoml
lods
fimull
movsl
ficoml
and
pop
or
fidivrl
or
fidivrl
or
fidivrl
or
fidivl
pop
ficompl
or
ficoml
or
fimull
aam
dec
sti
add
dec
sti
std
cld
inc
sti
push
cli
mov
inc
cli
test
arpl
mov
add
jg
add
nop
cld
add
xchg
cld
stc
add
mov
and
and
jne
inc
sahf
jge
pop
xchg
andl
cmp
mov
aaa
jle
and
jbe
and
outsb
or
sub
and
pop
mull
and
fsubl
xor
and
inc
cwtl
and
sub
pop
sub
ss
and
push
pop
and
push
pop
and
push
add
pop
sti
and
idiv
and
jmp
push
rcr
fs
fldcw
add
push
xchg
and
push
and
push
les
fsts
and
push
or
push
or
and
push
and
push
or
loope
push
and
pop
push
or
xchg
push
cmp
mov
and
and
push
mov
and
sbb
insl
push
xor
arpl
and
test
dec
add
fisttps
and
sti
push
sbbb
arpl
or
pop
sti
adc
subb
and
inc
mov
push
inc
adc
push
inc
adc
push
inc
psubq
push
sti
push
inc
jne
push
inc
insb
sti
pop
xorl
subl
adcl
adc
sub
ret
cmp
cli
pop
inc
add
cli
pop
inc
or
and
sti
adc
sarb
cli
mov
fnstenv
scas
stc
or
mov
insl
stc
mov
stc
imul
fwait
stc
push
clc
xchg
stc
jae
mov
stc
jle
mov
leave
cld
stos
stc
int
movsb
stc
iret
cld
popf
stc
lods
cld
xchg
stc
cld
xchg
xchg
dec
stc
mov
cld
dec
stc
adc
inc
stc
push
cld
dec
stc
pop
sti
inc
stc
cmp
stc
or
aas
stc
repz
adc
jmp
jns
add
ja
sti
clc
cmp
stc
jg
or
stc
cli
icebp
and
fnsetpm(287
clc
and
fsub
and
aam
ret
les
mov
xchg
es
adc
mov
jecxz
mov
pushf
ljmp
mov
and
jge
add
adc
inc
insl
stc
and
pop
addb
add
and
dec
add
sub
cmp
jmp
and
and
and
cmp
add
add
andl
push
andb
push
mov
and
pop
and
dec
roll
cwtl
dec
roll
cmpsb
dec
aad
movsl
dec
aam
aam
xlat
add
loop
flds
add
out
dec
fiaddl
in
inc
faddl
mov
dec
loope
test
dec
jecxz
ja
loop
jbe
in
jne
in
inc
dec
out
inc
dec
out
jmp
cmc
jmp
insb
movsb
clc
add
add
add
add
pop
testb
pop
testb
push
imul
or
or
or
or
mov
cmc
push
pop
mov
andps
notb
insb
adc
adc
adc
adc
adc
data16
pop
push
negb
insb
pop
negb
fs
cmc
sbb
sbb
idivl
pop
divl
push
imull
mull
sub
add
sub
inc
fildll
testl
lods
testb
scas
testb
testb
mov
idivb
mov
dec
fildll
idivb
mov
xor
fistps
divb
fists
notb
fistpll
notb
and
jp
and
add
add
xor
femms
sub
wbinvd
adc
invd
or
push
or
push
or
push
or
in
xchg
push
pmuludq
push
rcr
xchg
push
rcr
mov
push
ret
push
aad
mov
push
mov
stos
test
fwait
fwait
cmpsl
push
lcall
push
xchg
mov
jbe
cmpsb
push
jno
imul
mov
mov
mov
test
add
inc
xor
xor
inc
aaa
xor
inc
xor
inc
cmp
mov
inc
cmp
xchg
inc
cmp
xor
ds
inc
inc
xor
inc
inc
xor
inc
inc
xor
inc
inc
xor
inc
inc
xor
inc
inc
xor
xor
xor
inc
dec
xor
inc
dec
xor
inc
dec
xor
inc
dec
xor
inc
dec
xor
inc
dec
xor
inc
push
xor
push
push
xchg
div
push
jae
repz
jae
repz
jae
repz
jae
repz
push
or
pop
push
or
pop
push
div
pop
push
out
repz
xor
repz
xor
repz
xor
repz
add
nop
mull
mull
xchg
cmpsl
push
insl
imull
push
imul
push
push
stos
jae
imull
xchg
scas
jae
imull
push
insb
divl
push
divl
push
jmp
dec
testb
div
call
inc
imul
call
aas
neg
call
call
add
call
adc
and
or
divb
clc
cmc
push
or
cmc
dec
or
cmc
dec
or
cmc
loop
aam
loope
mov
cmc
fimuls
mov
cmc
mov
mov
cmc
mov
xchg
cmc
mov
stc
inc
adc
fdivrs
adc
add
push
sar
dec
inc
push
mov
and
mov
and
inc
jne
xchg
and
add
push
add
and
jg
cmp
pusha
xlat
add
in
roll
fst
fisttpl
cmc
lret
icebp
out
sbb
jmp
or
repz
std
xchg
sti
sub
aad
add
roll
cmpsb
orb
add
pusha
arpl
arpl
imul
outsl
cmp
jae
bound
data16
bndldx
jle
arpl
jb
and
imul
insb
outsl
sti
insl
jo
mull
ja
gs
out
jns
jg
pop
addl
push
mov
pop
int
xchg
push
rcll
add
lahf
lahf
jmp
mov
cmpsl
jecxz
stos
stos
pop
leave
scas
scas
cmp
mov
bound
pusha
mov
mov
jp
lret
push
into
and
push
cmp
sub
testb
xchg
and
inc
sahf
sub
cmp
push
xor
add
out
sbb
or
aad
incb
cmc
xor
push
pop
cmp
push
gs
repz
notl
pop
lcall
sbb
jmp
sub
push
or
dec
adc
fidivrl
add
fidivs
or
mov
mov
sti
scas
mov
xchg
ror
rcll
mov
cmpsb
mov
lahf
sahf
lahf
lret
fwait
into
cmpsl
xchg
mov
mov
mov
scas
scas
scas
mov
ja
addr16
fs
pop
pusha
mov
push
pop
in
js
lock
jbe
outsb
jo
fsubs
jle
data16
jnp
data16
jle
orl
ja
pop
xor
mov
sbb
mov
movsl
add
mov
movsb
pop
into
cmp
das
xor
fisubrl
cmpb
inc
jl
out
dec
xor
cmp
jo
repnz
pop
inc
cli
or
add
call
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
mov
fscale
add
push
fldl
add
add
jnp
add
jnp
add
mov
add
mov
add
jnp
add
jnp
std
add
add
dec
flds
add
flds
add
flds
add
add
dec
flds
add
flds
add
flds
add
std
pop
or
add
sti
fadds
add
fadds
add
flds
add
flds
add
fadds
add
fadds
add
fadds
add
pop
mov
fadds
add
add
bound
add
bound
add
bound
add
popa
mov
fnsave
xor
add
add
bound
add
bound
add
bound
add
les
lcall
push
call
push
dec
xor
add
add
bound
add
bound
add
bound
add
bound
pop
lcall
repz
incl
lea
add
bound
add
bound
add
bound
add
bound
add
bound
fidivs
add
fidivl
add
dec
add
out
add
out
fld
sbb
add
out
bound
add
out
add
out
fldenv
add
out
arpl
call
add
add
out
add
call
add
fldenv
loop
call
add
sti
lcall
repz
inc
call
stc
dec
stc
jnp
add
shr
adc
shr
adc
shr
adc
mov
adc
mov
subb
adc
stos
loopne
jecxz
loopne
fistl
call
adc
add
adc
jae
subb
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
sti
aad
add
aad
add
aad
add
aad
add
aad
add
lret
aad
add
aad
add
aad
add
add
jnp
add
mov
add
mov
add
jnp
add
adc
cmp
stos
cmp
fdivr
ja
lcall
adc
bound
mov
jl
int
fwait
es
mov
pop
fisubl
data16
push
sbb
dec
fisttpll
and
stos
mov
cltd
push
sbb
nop
aas
shrl
outsl
adc
insl
int3
adc
adc
pop
mov
cs
addr16
cli
jae
mov
in
sub
popf
mov
mov
outsb
dec
movl
add
push
and
jge
test
fbstp
add
push
fdivp
dec
push
or
les
inc
or
sub
dec
xchg
push
adc
inc
cli
lock
notl
xor
arpl
lcall
xchg
cmp
je
jle
repnz
lods
fldt
bound
mov
in
aam
pop
sub
mov
sahf
and
jae
and
lock
adc
enter
add
sbb
fxch
jge
add
das
add
fldenv
fldenv
add
flds
dec
pop
flds
add
flds
inc
data16
or
add
popa
flds
xor
add
flds
les
add
pop
flds
or
flds
mov
flds
add
flds
cmpsl
popa
flds
leave
add
add
popa
flds
push
inc
rcll
idivl
dec
fs
jl
pushf
pop
push
ss
loopne
and
insl
sbb
das
repnz
imul
adc
pop
push
fdiv
rolb
call
pop
mov
je
mov
shll
adc
sub
mov
xorl
int
es
je
sbb
lods
into
add
testl
push
xlat
and
call
insb
insl
cmp
inc
inc
add
add
ds
aas
and
xor
pop
xor
push
dec
es
mov
add
cld
mov
arpl
ret
inc
push
scas
negl
mov
rorb
xor
rcrb
xor
shrb
xor
sarb
xor
pop
lret
and
inc
jnp
xchg
out
jge
dec
adc
ds
fidivl
stos
jo
sarb
push
pop
rcr
push
push
shr
push
jle
fldcw
jne
fucomp
leave
les
nop
int
cmpsb
stos
adc
lods
add
sub
sarl
mov
mov
jno
jnp
flds
test
pop
aas
scas
jae
mov
sbb
loope
loop
xchg
inc
pop
repz
iret
pop
add
fmul
sub
pushf
iret
cmp
repz
pop
mov
adc
pop
ds
xchg
loope
xchg
jbe
clc
mov
mov
mov
shrb
add
sarb
mov
into
imul
xchg
jp
insb
outsb
ret
jbe
test
xchg
stos
ja
lock
out
sbb
mov
xor
and
outsl
xor
adc
push
adc
adc
and
inc
mov
dec
pop
dec
add
xchg
fstps
fstl
pushl
movsl
scas
mov
popf
cmpsl
sahf
test
inc
mov
add
xor
pop
inc
loop
cmp
lds
ds
in
into
xor
lds
icebp
out
rorl
ds
les
lds
mov
or
lret
or
and
outsl
sbb
mov
mov
movntps
sbb
iret
sbb
add
pop
lds
mov
cmp
push
sarb
outsl
push
loop
cmpsb
pop
jno
mov
dec
lret
or
mov
ss
adc
xchg
cmp
jb
dec
or
cmp
lret
xchg
fwait
lret
sub
inc
fdivrp
gs
in
cmp
dec
out
fcoms
jp
pandn
pop
inc
int3
and
into
xor
int3
inc
dec
jle
push
mov
mov
fs
cltd
xchg
ret
adc
lcall
ret
mov
into
sarl
into
jecxz
push
int3
repz
dec
iret
adc
iret
and
int
dec
xor
inc
dec
or
push
cmp
xchg
cmp
repz
loope
arpl
icebp
repz
add
push
into
adc
cmp
ficomps
pop
inc
lock
lds
jbe
paddusw
sahf
addr16
push
rcll
sti
iret
mov
cmc
mov
xor
insb
insb
inc
leave
mov
stc
pop
ficompl
dec
out
clc
std
jecxz
mov
test
or
shl
shlb
mul
into
jno
jmp
inc
jae
pop
add
xchg
add
cwtl
cmpsb
fistps
or
mov
adc
dec
cmp
and
imul
or
sbb
fstpt
in
lret
ds
xor
ds
xor
lea
mov
ds
adc
gs
aas
insl
mov
aas
push
mov
aas
cmp
and
nop
cmp
aad
sub
fstl
lret
mov
cmp
aas
xchg
cmc
loop
mov
enter
sti
jge
leave
and
mov
push
xor
fidivs
cli
cmp
scas
pop
loopne
xchg
jecxz
or
sbb
dec
adc
mov
adc
xor
bound
add
mov
out
mov
jp
leave
sbb
sub
lock
rcr
xor
ds
jne
imul
bound
insl
cmc
ficoml
push
lret
nop
sbb
or
inc
loope
lahf
leave
cli
sahf
hlt
add
das
or
mov
push
outsb
sahf
jp
adc
push
xchg
and
test
jb
ja
repz
stos
push
push
pop
pushf
pop
xor
add
scas
sbb
xchg
mov
jg
mov
aas
adc
es
nop
fidivrl
adc
xor
mov
add
es
filds
xchg
test
jno
add
adc
fdivs
pusha
scas
add
cmpsb
lahf
pop
mov
addr16
or
insl
sarb
mov
and
xor
mov
inc
inc
aam
addr16
inc
andl
stc
mov
adc
sub
inc
mov
jmp
jl
mov
lock
arpl
add
cmp
mov
add
movsl
or
jae
xor
jno
daa
jp
mov
push
ret
cmp
lock
stos
or
aaa
pop
adc
aaa
mov
aaa
cmp
bswap
mov
scas
inc
pop
pushf
add
push
pop
mov
shlb
pushfw
add
pusha
sub
cwtl
add
in
fcmove
sahf
scas
xchg
mov
push
adc
pop
dec
out
xlat
fistpl
cmpsb
arpl
cmpsb
jnp
decl
and
aam
stc
in
and
fadds
add
add
cmp
add
dec
add
dec
xlat
add
inc
add
cmp
add
add
or
add
sti
aad
add
aad
add
add
or
add
sti
aad
add
aad
add
aad
add
jecxz
sbbb
jge
add
mov
sub
jno
xlat
xor
popf
aas
add
bound
popa
add
imul
lock
jno
jmp
jne
testl
popa
add
lahf
gs
ficoms
jno
es
jne
cmp
jle
inc
add
bound
add
add
bound
add
add
bound
add
out
add
out
add
out
add
out
add
out
add
out
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
fsts
or
xor
std
das
aas
or
das
add
pop
xor
cs
xor
es
xor
push
pop
xor
push
pop
xor
push
add
imul
jmp
xlat
add
fisubrs
mov
or
mov
std
imul
mov
pop
xor
scas
pop
xor
cmpsb
imul
sahf
imul
xchg
dec
in
fmull
std
xchg
jle
cs
jbe
cs
outsb
pop
cs
imul
pop
imul
jmp
popa
flds
add
fildl
add
or
add
sti
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
fiaddl
add
add
cmp
add
cmp
add
dec
fiaddl
add
add
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
arpl
add
add
arpl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
inc
xchg
add
rcll
add
add
add
lock
add
flds
pop
in
xchg
add
flds
push
fstl
add
add
hlt
xchg
add
aam
add
aam
add
xchg
add
flds
jg
xchg
add
flds
cli
in
xchg
add
jnp
add
enter
push
add
lahf
pop
inc
add
aad
add
mov
inc
add
aad
add
inc
add
add
lods
mov
add
add
or
aad
add
inc
inc
add
inc
add
aad
add
inc
inc
add
add
pop
inc
inc
add
add
mov
add
repnz
inc
add
add
aad
inc
add
aad
add
inc
inc
add
popl
add
push
inc
out
pop
inc
fistpl
bound
pop
inc
bound
inc
bound
mov
cmp
push
insb
or
popa
test
mov
xor
stos
aas
add
bound
dec
xor
push
popa
mov
pushl
push
xchg
je
inc
lea
add
bound
ds
iret
cmp
or
cmp
add
cmp
cmp
add
xchg
mov
xchg
mov
fnstenv
out
add
cld
shlb
in
push
mov
aam
jnp
rolb
fnstcw
xchg
pop
pop
mov
fnstenv
sub
fxch
push
pop
mov
mov
pushf
xlat
mov
add
xchg
stos
fs
out
add
jp
add
lock
push
sti
leave
add
mov
cmp
sbb
push
lods
add
push
jo
cmc
adc
sub
repz
popa
flds
inc
mov
and
test
jmp
mov
and
jne
add
dec
sub
loop
sub
and
sahf
or
loope
popa
flds
dec
add
out
add
fs
jnp
addr16
dec
mov
jge
inc
cmpsl
je
popa
flds
sbbl
shrb
or
mov
push
aaa
sub
add
cmpsl
pop
mov
adc
pop
hlt
mov
cmp
mov
int
icebp
fldl
add
pop
adc
decl
sbb
or
fildl
add
and
mov
pop
mov
inc
push
sti
fiaddl
add
or
shlb
add
push
mull
mov
mov
imul
mov
arpl
fiaddl
add
push
ljmp
cmp
ffreep
rcr
add
lock
dec
and
jp
mov
fs
mov
lsl
xor
je
xor
adc
add
adc
cmp
push
pop
add
bound
pop
test
push
inc
pop
insb
push
push
bound
xor
enter
sub
bound
mov
clc
mov
popf
mov
pushf
movsl
lods
bound
xor
jg,pn
sub
pop
pop
cmp
push
add
fldcw
les
lods
ret
test
mov
call
mov
outsb
pop
cmpsl
add
dec
stos
or
mov
cmp
cmp
mov
xor
jge
je
adc
test
inc
fwait
sahf
mov
add
rorl
cwtl
lcall
mov
out
fsts
lods
add
rcrb
or
loopne
or
mov
add
mov
or
xlat
test
push
subb
xor
in
mov
fs
mov
mov
push
arpl
add
fs
out
insb
enter
flds
stos
adc
clc
mov
xor
bound
sbb
out
adc
pop
dec
rclb
loopne
lds
popa
leave
push
repz
add
pop
fsubrs
jmp
sti
data16
jne
jno
pop
in
mov
orl
repnz
add
and
roll
push
iret
pop
or
ret
sbb
cmp
add
dec
fnsave
adc
arpl
add
add
inc
fwait
lods
mov
test
xchg
dec
mov
cli
clc
xor
imul
and
daa
or
cmp
cld
fbstp
cmp
add
and
js
mov
movsb
jo
hlt
mov
bound
mov
cmpsb
shl
scas
stos
clc
mov
in
mov
jecxz
add
add
popa
push
bound
int3
sub
iret
sub
add
pop
xor
push
add
movsl
cmpsb
add
and
mov
sub
xchg
loope
test
sub
lock
mov
mov
nop
sti
stc
pop
pop
dec
mov
mov
jle
pop
add
sbbb
fsts
repz
push
addb
xchg
mov
orb
fld
mov
sbb
mov
cmp
dec
and
adc
pop
mov
fnstcw
dec
xchg
lret
out
fldcw
push
test
cs
fldcw
push
or
fincstp
cmp
in
push
xor
or
popa
push
stos
arpl
add
mov
flds
call
mov
in
jmp
in
cmpsb
incb
je
or
insb
int
mov
jmp
sbb
xor
faddl
cmp
pushf
push
sbb
pushf
test
cltd
lret
adc
inc
xchg
cmpl
mov
push
mov
cs
add
jmp
clc
xchg
sahf
je
cmpsl
movsl
sub
data16
mov
popa
flds
mov
xchg
dec
add
aad
push
mov
dec
push
ljmp
sbb
dec
dec
dec
sbb
test
aas
push
and
test
jns
push
mov
ror
iret
aam
add
lahf
inc
jo
aad
add
adc
int3
add
sbb
lea
and
mov
xor
lock
aad
add
dec
adcb
je
movsl
mov
lea
ficoms
iret
ret
dec
or
and
out
mov
repz
cmp
cmp
sbb
push
cmp
sbb
addr16
adc
sbb
pop
xor
adc
dec
push
jp
xor
pop
cmp
imul
int3
and
sub
dec
dec
adc
add
lds
mov
add
roll
xchg
icebp
pushl
cmp
or
lock
push
mov
jmp
add
leave
xor
mov
out
fnstenv
hlt
and
sbb
sub
clc
add
inc
ss
fcoms
ljmp
dec
std
lahf
and
add
ljmp
test
add
push
adc
in
add
out
or
mov
push
sub
add
out
frndint
xor
shlb
jbe
aad
lret
cmp
stc
leave
cmp
fcmovnb
outsb
pop
in
sub
add
rclb
mov
pop
movsb
lahf
mov
incl
arpl
adc
orl
lret
pusha
roll
scas
adc
popa
mov
sub
jo
sbb
xor
lcall
push
xor
cmpsb
pop
aas
push
xchg
add
sub
mov
mov
inc
and
stos
addl
stos
dec
add
push
popl
test
ljmp
add
jno
mov
mov
xchg
vrcpps
xchg
dec
inc
xchg
nop
in
xchg
addl
mov
ss
fsubl
das
in
adc
in
pop
xor
lahf
cltd
push
repnz
sub
mov
rcrl
fisttps
add
cld
ret
in
push
add
rolb
adc
fisubrs
repnz
es
dec
dec
loope,pt
cmp
in
sub
jp
inc
add
aas
popa
daa
and
arpl
pop
arpl
push
adc
xor
sbb
sbb
bound
sbb
sub
jnp
push
pop
xor
pop
pop
sub
add
mov
add
jge
repnz
mov
mov
lret
lahf
scas
push
xchg
fwait
mov
fimuls
push
idivb
mov
mov
in
jg
jg
fcomps
and
loope
and
mov
fprem
inc
movsb
test
mov
mov
cmp
dec
mov
fwait
push
push
rol
push
mov
jb
cmpsb
xchg
dec
aas
lods
mov
f2xm1
and
out
shll
sub
xor
xchg
jge
dec
sub
sub
cmp
call
inc
imul
sub
xchg
add
nop
outsl
cs
mov
lea
stos
push
std
out
or
add
adcb
rorl
add
stc
out
or
cli
dec
out
push
repnz
fdivs
testl
loope
cmpsb
sub
inc
enter
popf
xor
jmp
dec
lret
xor
mov
popa
flds
and
out
add
cli
mov
adc
je
test
aas
add
add
or
adc
jecxz
push
in
sbb
shll
clc
fdivr
sub
fadd
daa
mov
ret
and
aam
into
incb
cld
scas
or
add
iret
dec
mov
sti
fildl
add
cmp
add
push
dec
mov
pop
cmp
incl
jmp
dec
popa
jg
add
inc
mov
std
sbb
mov
add
mov
and
xor
in
fidivrl
movsb
in
pop
enter
test
mov
bound
mov
bound
or
pop
adc
sbb
adc
dec
or
add
leave
sub
pop
sub
sbb
into
mov
lret
mov
imul
dec
sub
cs
push
and
cmp
push
push
and
inc
push
imul
add
add
popa
gs
addr16
xchg
inc
sbb
pop
and
outsl
decl
pop
js
mov
pop
and
frndint
std
push
fdiv
adc
add
pop
hlt
fdivrp
push
mul
add
mov
les
dec
rclb
fldcw
in
push
mov
cmp
mov
mov
mov
addr16
lods
add
inc
outsb
xchg
repz
sub
jb
mov
fadds
sub
and
inc
ret
inc
mov
mov
dec
flds
push
xchg
add
cli
jbe
mov
fadds
mov
add
int
add
mov
sub
mov
add
sub
xor
inc
xor
jecxz
sub
dec
jmp
test
sub
pop
push
int3
xor
fbld
xchg
sub
xor
jae
adc
aad
shlb
cmp
insl
shlb
iret
dec
mov
sbb
xchg
mov
and
and
loopne
pop
add
add
inc
mov
daa
je
add
push
add
dec
fmuls
pop
dec
fadds
add
inc
out
cmp
add
push
loop
adc
xor
unpckhps
xlat
add
push
mov
dec
cmpl
add
add
mov
push
push
or
inc
pop
hlt
mov
pop
push
cld
mov
rep
push
push
mov
pop
nop
xchg
bound
lahf
xchg
xlat
stos
fwait
mov
jne
dec
outsb
pop
cmp
push
rorl
dec
movsl
les
pusha
or
pop
mov
push
push
mov
std
inc
mov
sbb
add
pop
lods
iret
push
add
loope
cmp
adc
pop
mov
imull
sub
loopne
daa
xchg
sub
add
jg
cli
int3
ret
rcl
cmpsb
hlt
add
shlb
mov
rorl
add
cmpsl
adc
lret
out
jb
jmp
add
hlt
cltd
out
cmp
xchg
add
imul
icebp
or
jecxz
addr16
add
sub
cwtl
out
fsts
add
adc
xchg
jbe
add
add
fdivs
fxch
daa
xor
xlat
sub
fldcw
add
and
stos
and
inc
xlat
push
out
pop
ficomps
sbb
push
inc
xchg
pusha
pushf
jg
arpl
sub
push
andl
inc
mov
enter
or
mov
std
cmp
fwait
add
adc
mov
popa
flds
movsb
fcompl
pop
test
xchg
arpl
addb
mov
rcll
and
jmp
dec
repnz
fstps
ret
jge
sub
outsl
popa
lret
faddl
add
xchg
mov
popf
loop
cwtl
add
outsb
test
sbb
add
add
jecxz
sbb
faddl
add
insb
mov
ljmp
lcall
das
sbb
push
xor
and
gs
add
dec
sar
shrb
aad
mov
and
int3
mov
rcl
les
jp
in
je
loopne
imul
sar
mul
in
bound
jbe
inc
inc
dec
add
inc
inc
inc
sub
data16
add
add
sub
aas
sbb
sub
and
xchg
repz
xchg
psubsw
push
add
add
cmpsl
mov
jl
mov
mov
add
adcl
cmpsb
mov
and
adc
bound
add
bound
sbb
inc
imull
xor
xor
das
xor
test
out
fldenv
negb
nop
call
arpl
out
adc
xchg
xor
mov
cltd
adc
aam
push
xchg
addr16
lea
sbb
jb
fxch
or
icebp
sbb
ja
sbb
clc
inc
push
and
cwtl
popf
dec
aaa
stos
cmpsl
push
inc
mov
mov
add
dec
movsl
int3
aaa
jae
lret
lcall
cmp
fldcw
test
xor
xchg
mov
sarl
stos
es
mov
flds
pop
fnstcw
lods
jns
dec
lods
cli
insl
mov
les
jmp
enter
cltd
sub
sub
sbb
les
cltd
adc
mov
push
mov
mov
jbe
jb
add
sti
sub
mov
adc
cmpsb
sub
scas
sub
enter
xchg
jmp
pop
adc
add
imul
test
xor
xor
out
add
add
addr16
sbb
xchg
lahf
adc
mov
pop
adc
or
or
fimull
add
sarl
xchg
push
push
mov
fisttpl
les
dec
inc
test
inc
inc
jns
inc
push
cmp
inc
dec
nop
mov
push
fistps
xchg
mov
pushf
lahf
xchg
bound
xchg
jg
sub
xchg
int3
bound
int3
rcll
enter
stos
mov
pop
stos
lahf
add
xchg
xchg
scas
xchg
in
leave
xchg
repz
shl
mov
xchg
jecxz
add
bound
mov
bound
jmp
jg
jmp
pop
jne
sub
pop
mov
dec
pop
add
push
pop
mov
xor
je
cmp
mov
jmp
xor
sub
fxch
sbb
xchg
and
mov
sbb
mov
adc
jg
lret
add
cmpsl
lods
inc
jb
out
stos
pop
jle,pt
add
jne
xchg
divl
enter
dec
dec
mov
into
inc
jno
jge
adc
rol
sub
xor
push
sbb
ljmp
pop
aad
adc
js
repz
add
xchg
flds
and
flds
in
jo
or
pop
in
sbb
cmc
in
add
xor
push
loop
ljmp
arpl
xor
ja
sub
pop
lret
xchg
jae
popa
flds
frstor
call
cltd
ljmp
inc
cmp
data16
les
shlb
roll
dec
flds
inc
xor
dec
mov
dec
scas
inc
pop
cmp
jo
push
cwtl
jp
xor
xchg
push
flds
add
pop
push
sbb
js
pop
push
add
and
add
daa
cmp
add
sub
faddl
add
faddl
add
push
cwtl
sahf
push
addl
jg
xlat
leave
sbb
mov
add
push
lret
rorb
nop
xchg
xchg
adc
insb
lods
scas
sbb
xor
stos
adc
mov
pop
push
xlat
lahf
daa
cmp
mov
addr16
cmpsl
out
pop
sbb
lds
dec
xchg
bound
frstor
dec
xchg
jl
lock
pop
mov
fistpll
bound
mov
pop
inc
add
bound
jne
leave
mov
in
lahf
neg
xchg
xchg
push
iret
loope
mov
mov
scas
test
lahf
out
mov
push
loop
cmpb
mov
mov
scas
int
pushf
jl
nop
test
jp
ret
add
bound
sub
xor
xor
sub
xchg
sbb
pop
fldenv
and
xor
cld
sub
icebp
repnz
fcmovnu
cmc
add
jmp
add
push
push
jbe
or
fnstcw
rcll
mov
imul
mov
push
addr16
in
jae
fcmovu
mov
and
mov
cmp
fldenv
imul
xchg
push
dec
sub
frstor
and
int3
fsubrs
sub
out
flds
jge
enter
mov
mov
mov
popa
xor
in
dec
mov
push
dec
jge
and
popa
flds
shlb
add
loopne
out
mov
sbb
cwtl
pushf
sbb
sub
popa
flds
add
sub
inc
orl
repz
jnp
add
adc
add
pop
xlat
sbb
push
out
add
rcll
add
push
add
push
or
sbb
adc
sub
add
add
sbb
push
mov
or
cmp
test
in
frstor
mov
jl
push
dec
imul
jns
je
scas
je
add
add
fildl
pop
push
out
sbb
add
mov
xor
xchg
bndstx
sub
add
xlat
loopne
pop
shl
std
std
iret
jmp
push
mov
mov
inc
jge
mov
pop
xchg
push
pop
movsb
in
dec
lods
mov
xor
cwtl
int
inc
add
test
shrl
mov
std
sbb
mov
sub
xor
and
bound
mov
and
jmp
lods
fistpll
sbb
je
mov
push
add
jnp
lret
jle
inc
mov
fnstcw
shll
dec
xchg
xchg
cmp
fnstenv
sub
loope
add
outsb
xchg
fnstenv
mov
and
sarb
flds
jbe
adc
fnstcw
add
fsincos
add
mov
dec
inc
jb
insl
and
mov
bound
jno
add
add
push
flds
out
inc
xchg
add
sub
add
add
add
jl
jge
mov
test
add
mov
js
inc
pop
flds
das
mov
fwait
addr16
test
add
mov
xchg
xorl
daa
mov
lea
mov
add
lock
jmp
add
rol
add
roll
rol
add
rol
add
mov
je
popa
mov
ja
lods
les
insb
out
mov
outsl
out
add
jecxz
je
xchg
mov
ja
movsl
cs
fsubrs
das
cmp
add
adc
cmp
add
int
add
imul
and
aas
add
add
add
aas
add
sarl
add
das
add
mov
aas
add
aas
add
loopne
and
cmpsb
jno
sahf
stos
jne
ret
and
into
and
and
pop
xor
and
inc
inc
and
pop
dec
dec
sub
inc
xor
push
push
and
push
push
pop
mov
pusha
cmp
push
addr16
lods
insl
insb
nop
imul
repnz
bound
mov
inc
lcall
dec
xchg
shll
mov
xor
leave
ds
adc
gs
iret
insb
imul
push
jno
add
xor
ficomps
adcl
jo
sbb
insb
enter
mov
add
lcall
fnstcw
add
fxch
add
add
add
fldcw
add
flds
flds
mov
inc
add
fnstcw
add
sbb
add
add
sub
add
fstps
add
fnstenv
sub
push
add
flds
add
flds
sti
popa
js
cld
popa
je
jmp
popa
xchg
add
popa
jo
int3
popa
outsl
add
add
add
popa
mov
xchg
popa
cmpsl
add
popa
lret
popa
flds
cmpsl
cwtl
mov
add
insb
add
flds
add
mov
or
leave
add
addw
mov
cmp
add
mov
add
leave
add
popa
addl
ret
popa
flds
mov
mov
sub
imul
add
test
push
push
pop
ljmp
lret
fisttpl
gs
js
cmp
add
outsb
lret
add
mov
je
imul
jne
jae
rorl
add
cmpsb
insb
insl
mov
jno
add
popa
mov
cmpsl
aas
cmpsb
jae
push
push
cmpsl
outsb
xchg
aad
add
flds
add
or
add
scas
loope
std
bound
jae
xor
mov
test
dec
rcll
outsl
push
inc
popf
push
mov
sbb
jae
xor
mov
cltd
xchg
aas
bound
inc
bound
fwait
aas
bound
inc
outsb
icebp
iret
jae
xchg
pushl
mov
pop
roll
dec
xlat
inc
repz
push
jno
push
ret
add
push
dec
shll
jo
aad
fwait
push
adc
adcl
jo
add
fnstenv
mov
ftst
add
and
and
and
and
jno
and
lea
fsts
and
scas
xor
fnstenv
das
and
cmp
xor
and
filds
fyl2x
add
jmp
add
in
fldenv
xor
fldcw
mov
fnstcw
aaa
mov
flds
xchg
pop
add
fsqrt
add
add
data16
cmp
popa
flds
test
jae
xor
add
popa
popf
add
popa
flds
hlt
inc
cwtl
add
add
add
add
cwtl
add
xchg
xchg
add
or
add
xchg
add
enter
lret
fcmovne
cltd
add
mov
cwtl
add
mov
nop
add
pop
test
aas
add
add
mov
add
or
inc
dec
inc
add
push
inc
add
mov
inc
add
push
inc
add
dec
inc
add
add
add
aad
add
aad
add
iret
add
add
mov
aad
add
fldl
add
fldl
add
inc
add
sub
flds
add
stos
aas
add
sahf
aas
bound
push
mov
bound
sahf
aas
bound
xor
adc
imul
gs
pop
push
ficomps
xor
push
jae
sbb
sub
add
push
add
push
add
data16
pop
jbe
sbb
add
pop
add
push
add
sbb
bound
add
pop
add
bound
jb
jb
add
arpl
fldenv
add
fyl2x
std
imul
std
pop
jecxz
add
pusha
fucomi
add
mov
flds
and
xor
and
jns
and
and
and
fs
and
add
and
sub
and
shr
and
int3
call
and
mov
and
into
mov
and
mov
and
push
loopne
fnstenv
add
flds
add
fldcw
mov
add
xchg
add
popa
flds
xor
lods
push
pop
cmpl
scas
flds
or
add
pop
mov
add
popa
mov
add
popa
mov
add
jl,pn
add
outsl
cs
sub
pop
fnstsw
outsb
xlat
cmp
xor
outsb
aad
test
flds
movsl
add
je
add
mov
add
xchg
in
add
jle
and
mov
push
imul
js
outsl
pop
addl
add
fldl
add
popa
push
push
testb
js
pop
fs
das
test
or
lret
flds
add
and
push
fnsave
imul
insl
add
fsts
lret
fldenv
test
add
fcomp
cmp
arpl
dec
add
bound
add
sub
dec
bound
add
bound
add
bound
add
sbb
add
bound
inc
bound
add
sub
arpl
inc
xchg
aas
bound
add
bound
add
bound
add
flds
flds
movb
mov
lcall
cmp
xchg
inc
inc
bound
inc
bound
cwtl
aas
bound
cmp
ljmp
fsts
push
inc
mov
add
aam
iret
fld
add
fstps
bound
xor
sub
fldcw
mov
fxam
das
mov
flds
and
xor
and
xor
and
es
clc
sub
and
stos
pop
and
scas
push
add
lcall
fnstenv
pop
add
enter
jmp
popa
jge
mov
add
popa
flds
jmp
popa
mov
add
popa
pushf
add
movsb
add
jbe
pop
data16
pop
addb
insw
add
addw
pop
addb
data16
popa
mov
xchg
add
pop
insb
add
popa
add
pop
addl
popa
mov
add
addr16
popa
addb
popa
addl
popa
mov
add
lods
add
add
add
add
and
clc
aad
add
jb
data16
aad
add
aad
add
aad
add
aad
add
pop
add
aad
add
sti
mov
sbb
mov
sbb
sbb
js
sbb
js
mov
inc
and
lds
or
fwait
inc
and
aad
add
inc
add
push
inc
add
push
inc
add
cltd
inc
bound
pop
bound
add
sub
je
add
add
popf
inc
bound
inc
bound
ret
bound
inc
bound
bound
bound
bound
inc
bound
and
or
addb
lods
inc
filds
inc
fldt
add
add
cld
add
sti
add
fpatan
add
in
add
ljmp
fldlg2
add
fxam
add
out
add
pop
out
mov
fld
sub
fnstcw
mov
fldenv
test
mov
fnstcw
add
fnstcw
add
xchg
fnstcw
add
fnstenv
add
flds
inc
add
int
inc
add
add
sub
orl
add
adc
add
inc
flds
push
out
scas
add
movsl
cltd
add
popf
cltd
add
add
sub
add
popa
addb
popa
je
mov
jg
popa
jle
lea
add
js
dec
pushw
inc
pop
js
push
data16
pop
jg
jmp
add
add
pop
jg
push
xchg
add
pop
jge
add
mov
data16
add
fidivrl
data16
add
js
iret
fisubl
add
fimull
mov
out
inc
add
cmp
cmp
add
sub
xor
cmp
add
dec
fiaddl
add
add
cmp
mov
inc
jmp
add
jmp
inc
add
fiaddl
add
fiaddl
add
flds
add
scas
dec
inc
ja
add
xchg
scas
aas
inc
mov
mov
push
mov
xor
sbb
ss
and
cmp
add
add
cmp
add
add
cmp
add
cmp
lahf
add
add
xor
mov
cmp
add
add
xor
xchg
push
inc
push
mov
dec
aas
inc
mov
cmp
bound
cmp
bound
xor
bound
cmp
sub
fldcw
cmp
cwtl
xor
das
test
add
sbb
adc
sbb
xchg
sub
and
mov
add
mov
mov
xor
xchg
lods
add
xchg
xor
mov
fnstenv
add
mov
nop
xchg
movsb
add
mov
jnp
bound
fnstenv
test
sbb
js
pop
lea
add
dec
push
jl
inc
push
outsb
mov
gs
xor
sbb
and
jb
inc
jnp
adc
flds
hlt
adc
add
or
data16
rolb
jne
rolb
jbe
add
jge
xlat
add
add
adc
flds
or
cwtl
xchg
add
lods
je
xchg
gs
xchg
xchg
ja
mov
xchg
js
popa
flds
cmp
je
inc
add
add
jns
jbe
fs
mov
add
aad
add
add
js
arpl
js
push
add
insl
add
jb
mov
jbe
mov
insb
add
add
mov
or
inc
add
inc
add
mov
inc
add
mov
out
jno
add
subl
lcall
mov
addr16
lcall
jle
dec
outsb
bound
push
gs
lods
pop
inc
dec
movsb
push
popa
push
mov
inc
dec
push
mov
push
bound
pop
jae
fisttpl
sub
popa
addr16
incl
add
pop
imul
adc
push
arpl
std
sbb
icebp
dec
pop
jp
repnz
bound
pop
imul
push
arpl
xor
pop
jb
repnz
bound
pop
imul
mov
xchg
add
fsts
ss
pop
loope
sub
or
fldcw
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
mov
add
out
fnstcw
xor
loope
jp
flds
add
fwait
and
and
and
mov
js
push
push
outsl
pop
jae
and
push
dec
add
pop
ljmp
mov
outsb
sub
dec
push
inc
icebp
int3
fsubrl
repnz
add
repz
mov
and
subl
mov
mov
adc
mov
sbb
pusha
movsl
mov
jb
mov
and
fisttpl
add
jp
or
hlt
fiaddl
jb
push
pop
push
push
iret
ljmp
rorl
iret
sbb
or
sbb
call
fdivl
push
mov
inc
cmpsl
mov
mov
dec
cmpsl
fmuls
dec
mov
lea
jmp
addl
jne
fcmovnu
jmp
and
mov
cmc
aad
nop
mov
lods
and
inc
arpl
bound
sbbb
lea
icebp
push
pushl
sbb
jae
or
movsl
sbb
pushf
call
repz
cmp
push
push
fldcw
sub
mov
xchg
bound
push
inc
add
sti
scas
add
add
scas
rclb
xor
inc
data16
pop
jb
movsb
xor
push
cmp
incb
imul
fcomp
fsubl
sbb
mov
lea
push
adc
push
sahf
pop
cli
mov
bound
cmp
mov
inc
ds
aaa
jnp
es
sbb
add
lret
adc
adc
hlt
pop
dec
cltd
out
mov
push
xor
xor
in
add
jns
pop
fisttpll
pop
xlat
out
fsub
addb
out
mov
xchg
add
lcall
and
push
je
fldl
out
pusha
fdivrl
out
rclb
pop
call
adc
shrb
adc
xchg
rorl
std
add
adc
cmpsl
adc
test
add
in
mov
cmp
loope
pop
sbb
pop
inc
xlat
add
mov
call
inc
jmp
daa
xlat
add
test
in
mov
in
in
add
inc
add
push
test
push
roll
push
rcr
mov
push
enter
hlt
test
push
add
lock
nop
and
rcr
fs
and
dec
mov
shl
faddl
bswap
js
cmc
add
inc
mov
sub
dec
mov
jb
les
cmc
icebp
xchg
inc
add
sarl
add
push
insl
aam
icebp
insb
call
fsubs
shl
fcmovb
xchg
add
les
dec
inc
jmp
mov
sti
jae
dec
enter
push
icebp
mov
lock
mov
imul
hlt
sub
inc
add
add
pop
xor
stos
mov
push
ret
xor
pop
rclb
add
jnp
je
lock
call
adc
nop
shll
lock
fisttpl
jae
lock
fcomp
inc
bound
sub
fnstcw
inc
bound
aaa
jp
mov
dec
insl
push
xor
fstps
push
cltd
out
jle
leave
jl
enter
mov
sbb
jmp
mov
adc
fcoms
sub
add
fstps
addl
lret
adc
xor
lcall
cltd
out
xchg
mov
and
add
inc
movsb
add
hlt
add
fs
sarl
mov
popa
leave
add
nop
loopne
insb
push
gs
push
jb
or
lcall
jmp
add
icebp
divb
and
sub
notl
je
inc
loopne
mov
cltd
add
hlt
sbb
fildll
aas
or
cltd
add
fcomp
mov
jle
or
dec
push
mov
lcall
push
dec
fmuls
xchg
cmp
addl
add
cmp
mov
mov
push
out
dec
fiadds
add
aam
lret
or
add
cli
fimull
adc
fisttpl
add
jne
inc
adc
test
aad
add
jne
shlb
imul
fiaddl
push
push
movsb
adc
jae
or
push
aam
mov
mov
lock
sbb
test
push
lea
add
lock
sti
inc
push
cld
or
and
cmp
mov
pop
hlt
add
bound
cmp
fs
adc
push
inc
add
mov
loopne
loope
push
add
outsl
xor
or
mov
test
pusha
jge
dec
add
out
bound
xor
and
push
imul
addl
add
mov
rcr
fcmovbe
sti
scas
sbb
das
cmpsb
fsts
inc
xchg
out
mov
nopl
out
frstor
andl
aas
fisubl
imul
add
cltd
out
and
sub
jb
add
cmpsb
sub
mov
addr16
pop
cltd
add
sar
cld
xor
inc
jmp
data16
adc
fscale
fdivrl
inc
jmp
sub
push
sbb
xchg
flds
jmp
jge
xchg
in
imul
flds
jmp
and
dec
dec
fisubrl
mov
add
cmc
leave
inc
jmp
out
dec
call
stc
lea
hlt
and
incl
test
pop
and
xor
push
sub
xchg
rorb
push
mov
sti
or
sbb
add
push
add
and
ret
jo
lcall
mov
testb
std
and
dec
scas
inc
or
jae
aad
out
sti
add
dec
or
push
je
add
bound
xor
add
test
mov
add
movsb
push
arpl
add
test
add
bound
sbb
mov
push
ja
test
adc
or
aas
add
add
bound
fwait
dec
xor
mov
or
in
jmp
xor
mov
or
jb
add
daa
add
cmpsb
sbb
lock
add
jb
mov
popa
cli
inc
lock
add
popa
mov
stos
mov
call
inc
add
ds
xchg
out
fldl
inc
aaa
add
xchg
mov
test
xchg
cmp
fnstcw
pop
das
fldenv
mov
pop
out
bound
adc
mov
cmpl
mov
out
inc
jmp
pop
les
lret
add
sub
push
daa
fldl2t
or
or
mov
xchg
outsb
fs
jnp
add
cmpl
in
mov
ljmp
dec
pop
in
in
fsubrl
mov
sarl
flds
mov
cmp
and
movsl
add
std
push
jmp
pop
pop
addl
add
imul
fstl
mov
js
mov
mov
jnp
test
mov
mov
scas
jnp
or
dec
frstor
dec
mov
fnstsw
mov
fisttpll
dec
fstl
add
subb
xor
adc
mov
bound
adc
cmp
pop
ret
push
das
push
add
repz
bound
inc
bound
pop
call
jmp
jl
decl
pop
inc
mov
push
mov
in
push
adc
inc
int3
jae
pop
cwtl
xchg
movsl
jg
mov
mov
jl
mov
jb
mov
jae
sub
fbstp
sbb
push
mov
fdivrp
xor
and
xlat
mov
add
jmp
add
enter
fsub
xchg
push
fsts
bound
mov
stc
cmp
bound
push
inc
jmp
dec
aam
push
sbb
xchg
in
les
hlt
cmp
call
lds
faddl
sbb
jl
inc
call
inc
aam
out
jae
call
adc
jo
add
sub
addr16
xchg
or
add
sbb
sbb
jb
fnstenv
lods
push
jmp
pusha
xchg
daa
flds
bound
cs
pop
and
jmp
sub
test
mov
adc
pop
call
adc
or
and
insl
insl
fiaddl
jmp
popa
aad
flds
movsb
data16
sub
stc
fistpll
inc
pop
xchg
add
dec
fadds
push
cmp
and
mov
add
or
and
sti
faddl
add
cmp
or
add
std
add
xlat
jae
xor
jmp
add
fcomps
into
enter
xlat
je
mov
push
add
adc
or
std
xor
add
lock
adc
mov
decb
and
test
add
jl
or
rolb
ffreep
add
enter
enter
sub
shrb
filds
ss
pusha
scas
rol
rolb
mov
mov
xchg
test
rolb
add
rolb
dec
mov
in
lcall
mov
jns
js
les
adc
scas
inc
add
ret
js
filds
push
jmp
outsl
jmp
cs
xlat
out
das
sarl
sub
xchg
dec
mov
sub
sbb
push
and
xchg
or
xor
inc
fucom
js
push
repnz
sbb
cwtl
outsl
rcrb
popa
daa
shlb
add
dec
or
xor
lods
jmp
adc
fldenv
cmp
cmc
js
std
out
xchg
dec
out
les
push
scas
lods
mov
les
sbb
out
push
fcmovnbe
sbbl
sbbb
dec
insb
testb
aad
mov
shll
add
popa
shrl
mov
lcall
adc
icebp
iret
adc
push
sbb
and
mov
int
in
xchg
jmp
adc
jae
adc
bound
sarb
nop
je
mov
flds
mov
fadds
cmp
les
adc
push
mov
add
cmp
dec
push
inc
or
lea
shll
dec
je
adc
xadd
or
dec
sub
add
outsl
dec
push
sbb
inc
mov
mov
loop
push
call
xchg
mov
and
add
jge
and
or
pushl
dec
add
mov
ss
jno
fistl
mov
or
bound
xchg
jne
mov
inc
fwait
mov
inc
out
jge
out
cs
jmp
ret
adc
sarb
adc
rcrl
adc
lods
rolb
lods
add
idivb
cmp
jecxz
cli
add
js
ljmp
or
lret
add
lds
scas
sub
push
out
sub
pushf
imull
cmp
adc
xorb
popf
push
test
inc
les
jmp
inc
les
fstps
insl
test
xchg
jb
jle
push
xor
fisttpll
sub
ds
or
call
or
daa
test
push
bound
fbld
mov
pop
shll
in
sub
mov
sar
arpl
out
aam
mov
shll
fldenv
xor
add
sti
scas
lret
andb
test
mov
mov
add
popa
sub
aas
add
adc
add
pop
roll
fiaddl
mov
sbb
dec
lea
pop
cmc
push
bound
flds
in
jle
or
pop
or
je
cmc
sbb
popa
sub
dec
testb
sub
cld
sub
inc
jmp
push
inc
and
sub
adc
add
cmp
add
mov
dec
lcall
addb
jecxz
inc
add
pop
mov
push
cli
es
push
in
and
decl
push
cmovo
pop
mov
jle
pop
jns
inc
aad
or
xchg
jl
dec
flds
jo
adc
pop
push
or
xor
dec
cltd
or
fnstenv
rolb
mov
ret
jno
inc
ret
jno
ret
xchg
sub
out
jns
outsb
or
push
test
or
jge
dec
out
mov
cmpsb
mov
mov
insl
loope
cmpsl
jae
inc
hlt
mov
and
adc
add
mov
test
adc
jnp
inc
or
cmpsb
adc
jp
inc
add
add
adc
inc
adc
data16
adc
fyl2xp1
inc
bound
shr
cld
adcb
inc
add
jmp
sbb
addr16
pop
pop
out
bound
jno
jmp
mov
push
add
sbb
dec
flds
dec
mov
and
xor
les
mov
jb
pop
aam
add
xchg
movsb
mov
cs
cmpsl
add
xlat
adc
leave
out
jp
cmpsl
add
lock
loope
push
jecxz
adc
push
aaa
pop
in
cli
and
subl
pop
into
shll
add
adc
js
sti
aad
call
leave
int3
std
xchg
adc
push
fidivrl
push
rorl
sub
shl
aas
cmp
decb
and
sbb
mov
sar
push
push
icebp
lcall
cs
sbb
jmp
mov
cmp
add
sar
pop
leave
mov
std
push
hlt
inc
stc
xor
push
cmpsb
add
fsubrl
xor
adc
mov
test
in
test
and
add
push
aad
xor
fadd
stc
adc
fldl
je
add
add
push
fwait
inc
dec
jnp
pushl
dec
or
cmp
inc
cmp
add
movsb
subb
xchg
push
or
adc
rorl
scas
dec
inc
add
jo
call
and
mov
cmp
pop
push
clc
cmp
cmpsb
adc
jae
jg
add
mov
add
mov
adc
xor
bound
or
mov
add
mov
lds
inc
cmp
pop
mov
push
std
mov
mov
add
lock
push
lock
clc
bound
mov
repz
call
ds
clc
sbb
add
cltd
jl
call
mulb
fistl
or
jb
push
jno
jno
out
fstps
loopne
mov
fsubl
out
pop
sar
lret
jmp
fnstenv
push
push
jge
fldenv
sub
pop
lock
add
out
bound
or
or
jb
push
popa
mov
push
lock
sub
add
add
popa
fsts
cmc
pop
adc
aas
fisubrl
pushw
add
xchg
roll
jmp
xlat
add
push
je
cmc
push
jmp
adc
add
lea
dec
inc
mov
pop
xor
and
push
adc
and
inc
jmp
xor
and
push
insb
stos
aad
inc
stos
add
sbb
sub
and
xchg
shll
sub
loop
add
mov
add
push
lock
adc
adc
adcl
je
push
test
push
mov
pop
sbb
in
cmpsl
or
jno
add
call
inc
mov
push
call
push
mov
cmp
fldl
add
mov
arpl
sub
push
mov
jo
inc
cmp
add
jmp
decl
mov
in
cmp
or
bound
and
lds
xor
and
mov
add
testb
xchg
lahf
int3
out
inc
add
jmp
dec
cmp
mov
aaa
lahf
lds
movb
mov
push
aas
bound
push
and
add
sub
mov
das
jne
or
mov
pop
lds
mov
mov
int
mov
cmp
loope
jecxz
add
mov
or
psubsw
test
shr
add
daa
out
xchg
dec
sbb
out
pop
mov
bnd
sbb
aad
nop
aad
negb
jmp
sub
xchg
scas
ret
in
jmp
daa
sar
ret
aaa
nop
test
inc
mov
mov
mov
es
xlat
sbb
xor
mov
orl
fldenv
outsb
xor
push
in
fcoml
pusha
gs
add
std
insl
push
inc
jae
push
push
dec
sbb
push
rcrb
sbb
mov
pop
add
jo
leave
xchg
add
pusha
and
aad
push
sbb
xor
and
std
aas
add
inc
int
xchg
xchg
mov
add
in
and
cmp
inc
mov
add
js
sub
les
pop
mov
movl
fmull
lods
pop
mov
adc
add
out
mov
fiaddl
cmpl
je
dec
adc
fstpl
push
cltd
pop
leave
add
add
lret
or
out
adc
mov
adc
clc
cwtl
or
mov
xor
scas
mov
mov
dec
mov
lods
test
sbb
mov
sbb
mov
pusha
mov
out
out
adc
repnz
lods
bound
repnz
je
jp
lock
jmp
mov
out
test
adc
out
add
xchg
test
cmp
in
mov
jl
add
mov
int
mov
pop
mov
into
cld
out
dec
add
fists
aad
add
fsubs
lods
repnz
mov
jb
fisubs
cmp
ljmp
inc
clc
mov
push
dec
pusha
fnstenv
add
or
sub
out
out
int3
idivl
mov
dec
xor
and
out
in
xor
ljmp
sar
or
push
ds
or
lock
lds
sbb
or
add
fldcw
add
push
cmpsb
jge
pop
sub
in
lcall
xchg
daa
mov
pop
mov
push
push
pop
lods
jmp
jle
aad
adc
adc
lods
pop
xor
ljmp
sbb
add
call
cmp
inc
cmp
daa
jmp
ficoms
scas
mov
xchg
push
shrl
out
call
test
or
add
rclb
add
out
mov
sub
push
push
rcrb
repz
push
push
in
or
dec
jno
js
flds
xchg
ds
jne
jno
add
fmuls
call
adc
dec
rorb
add
arpl
add
movsl
mov
shl
enter
push
mov
jno
xor
or
bound
xchg
je
inc
dec
and
stos
mov
jge
mov
filds
call
out
ljmp
xchg
xchg
adc
mov
inc
or
xor
mov
jp
cmp
sti
movups
pop
add
add
inc
add
lds
test
fisttpll
mov
inc
cmp
mov
jb
aaa
out
fldcw
ucomiss
pop
fsub
add
test
loopne
arpl
adc
xlat
and
out
sbb
push
and
jno
push
arpl
arpl
mov
cmp
xor
mov
mov
call
pop
mov
mov
call
in
push
xchg
out
fcomp
xchg
repnz
cmp
add
jno
xchg
add
mov
push
data16
lock
and
out
dec
push
roll
adc
jmp
sub
add
adc
sarb
jmp
fwait
dec
jecxz
and
add
fistl
mov
arpl
add
dec
and
xor
stc
push
jmp
lret
fcomps
lcall
popa
flds
sahf
fcompl
sub
stos
or
cmc
mul
dec
sti
and
mov
add
mov
insl
mov
clc
inc
sti
or
aaa
mov
adc
push
dec
and
ljmp
ss
xor
aad
push
add
in
xchg
fildl
xor
addl
push
add
add
cmp
and
or
aaa
cltd
sbb
add
cmp
push
mov
pusha
inc
and
in
call
mov
mov
mov
sub
pop
pop
jnp
pop
mov
push
cs
cmp
outsl
idivb
bound
inc
and
mov
mov
mov
or
es
add
jle
cltd
std
in
push
fsubl
dec
and
les
mov
mov
cmc
cmp
out
push
and
mov
add
add
bound
add
xor
addb
dec
lcall
fucomp
scas
adc
fsts
stc
leave
enter
mov
xchg
insb
pop
pop
add
flds
jecxz
mov
call
sbb
fsub
add
pop
add
jmp
hlt
xchg
add
inc
bound
xchg
pop
mov
sub
sbb
das
cld
pop
mov
fwait
out
inc
pop
cwtl
mov
mov
jecxz
pop
aad
stos
out
shrl
jmp
dec
seto
add
xor
mov
iret
inc
jmp
movsl
loop
xor
int3
push
sbb
push
cltd
add
int
jmp
flds
bound
std
and
or
inc
jb
jmp
popa
bound
fiadds
cmc
mov
mov
flds
jmp
cmpsb
fldcw
popa
loope
xorl
je
ss
inc
push
adc
int
jo
add
mov
adc
sbb
add
push
mov
rolb
pop
ret
fldcw
repz
pop
inc
mov
idivb
fidivl
je
je
mov
std
adc
add
lods
je
ret
mov
pop
call
lcall
mov
fldl
adcb
mov
mov
inc
sbb
add
jle
dec
call
xchg
sbb
push
add
movsb
add
or
outsl
scas
sarl
sub
call
cmp
test
aam
fwait
mov
xchg
push
popa
ret
bound
addr16
inc
add
cmp
in
and
pushf
or
pop
iret
les
mov
add
test
mov
enter
add
add
add
in
pushl
cltd
popf
adc
outsl
sarl
fnstenv
or
subb
dec
adcl
jmp
and
in
sbb
stos
add
sbb
mov
scas
mov
add
cwtl
jb
lret
sub
sbb
out
fwait
ds
jmp
mov
shrb
add
jp
xor
call
adc
xlat
sbb
popl
sub
mov
xor
cltd
daa
ret
call
adc
pusha
lcall
pop
ljmp
jmp
in
jecxz
ja
flds
rcrl
or
pop
test
jg
inc
xchg
xchg
sbb
cmp
add
xchg
sbb
jb
push
xchg
mov
jne
sbb
bound
pop
inc
test
sbb
bound
cmp
sub
cmp
es
cmp
sub
cmp
es
cmp
add
shll
and
arpl
les
inc
sub
repnz
test
xor
or
push
cmp
push
mov
xor
jae
push
add
mov
clc
ret
sbb
call
cmp
cld
add
aad
xor
push
pop
xor
push
addr16
inc
cs
in
repnz
jmp
fwait
add
jno
push
call
bound
cld
bound
out
push
dec
cmp
js
or
movsl
adcb
add
and
inc
add
cli
xor
bound
mov
push
or
xchg
cltd
dec
fwait
les
test
xchg
jp
mov
mov
jge
jp
insl
pop
fisttpl
mov
popa
ret
add
das
mov
hlt
xor
fnstcw
or
cmc
jl
aad
sub
call
aaa
xchg
or
mov
ret
bound
call
or
pop
mov
cli
or
stos
fbstp
daa
adc
mov
adc
mov
add
fld
ret
int3
jmp
adc
bound
jmp
sahf
push
popa
repz
ljmp
cld
mov
adc
stos
pop
scas
push
out
arpl
mov
xlat
pop
flds
test
pop
cmc
or
jmp
pop
jbe
scas
pop
stos
adc
or
push
push
mov
mov
fwait
ss
dec
inc
fadd
or
and
mov
mov
loope
jmp
fstpl
mov
and
pop
stc
out
sub
stos
popa
and
push
lods
call
jnp
cmpsl
xlat
jae
jnp
pop
pop
lcall
lock
cmp
aam
jmp
adc
cli
aas
fildl
add
mov
add
jg
cli
add
andl
pushl
int3
call
jo
test
scas
stos
gs
flds
push
in
pusha
adc
leave
sbb
test
add
arpl
inc
add
push
lcall
dec
mov
push
adc
in
ja
mov
test
push
rcll
add
shll
mov
push
dec
push
jl
pop
jb
add
out
mov
cmc
mov
std
nop
dec
xlat
std
mov
jnp
add
or
test
or
stos
lret
lea
outsl
or
mov
ret
add
xor
aad
fstl
mov
cmpsb
test
mov
test
add
jle
and
mov
daa
add
xchg
ds
mov
sbb
lods
pop
xor
xlat
sbb
mov
call
xor
push
and
cmpsl
adc
cld
out
and
fadds
mov
outsb
adc
lods
cld
repz
sbb
rclb
lods
faddl
out
idivb
or
jns
mov
pop
fnstcw
js
cmc
divl
add
mov
xor
jp
add
lods
add
jb
sub
xchg
xlat
adc
push
rcrb
add
bound
shlb
pop
dec
in
loop
je
jmp
pop
lock
es
cmp
int
inc
add
fildl
loop
jae
mov
and
stc
jbe
jmp
call
ds
adc
shr
add
or
les
ret
icebp
popa
rol
arpl
out
xlat
add
das
ljmp
out
pop
mov
mov
inc
cs
and
das
inc
and
sub
jne
mov
mov
mov
mov
and
inc
add
sub
and
in
imul
add
call
mov
sar
pop
mov
mov
push
push
mov
adc
pushf
fimull
call
mov
incl
test
add
aas
add
cwtl
add
fldt
cmp
inc
mov
jmp
xor
xor
inc
add
or
inc
add
adcl
inc
add
inc
or
jne
mov
pop
out
inc
bound
add
mov
inc
add
lea
iret
mov
push
std
lods
inc
adc
jne
mov
sub
pushl
inc
xor
adc
bound
fldcw
divl
mov
add
cltd
je
add
push
testl
fistpl
insb
xor
call
fildll
pushf
adc
dec
pop
ret
sbb
sub
ss
test
adc
and
lret
daa
add
mov
or
pop
or
jno
call
or
lahf
in
rcll
call
jmp
movsl
popa
adc
cld
mov
mov
fimuls
pushf
adc
sbb
add
sub
xchg
or
push
outsl
leave
push
sar
adc
aaa
mov
test
repnz
or
popa
sbb
sbb
push
jnp
loopne
fsubl
cmpsl
addb
es
jmp
or
xor
mov
shll
cld
add
lcall
inc
mov
call
inc
xchg
stc
pop
movsl
xchg
ret
in
push
lock
mov
xor
jg
inc
lahf
sar
jae
push
lret
call
lock
ficoml
cmpsl
pop
loope
clc
sub
jge
lock
push
fcoms
and
jl
das
ret
pop
aaa
dec
inc
mov
dec
and
push
pop
or
add
or
cli
dec
push
push
push
push
pop
rdpmc
leave
xchg
add
mov
lods
xchg
jle
xor
fidivrl
mov
fcoml
inc
loope
sub
ss
sbb
and
repz
pop
mov
add
and
andl
fistpll
xor
lds
mov
aaa
push
out
xchg
add
daa
and
mov
pop
push
or
aad
leave
inc
mov
or
ss
in
jmp
pop
insb
and
arpl
idivb
xor
out
sub
jmp
movsb
push
add
cmp
inc
sbb
out
adc
fildl
push
shl
mov
jl
clc
nop
and
and
ficoms
sbb
clc
pop
call
cli
inc
fstl
add
cltd
std
repz
cs
setg
int3
push
xchg
push
add
dec
stc
nop
mov
movsb
in
and
ljmp
jb
notl
cli
push
mov
ss
mov
or
call
fisttps
xchg
mov
jb
notl
shlb
ja
call
inc
or
fisttpl
xor
mov
imul
sbb
sbb
add
cmp
jmp
out
sbb
sub
jg
enter
insl
jle
or
pop
jmp
push
mov
push
mov
cli
dec
add
mov
push
fildl
fnop
fwait
add
dec
xor
add
out
movl
and
mov
and
pop
cli
pop
add
std
pop
mov
add
add
andb
add
dec
push
andl
rclb
mov
push
inc
and
dec
pop
and
in
mov
call
add
bound
xchg
and
cld
add
lods
fisttps
jae
aam
inc
xchg
cmp
mov
in
xchg
mov
pmuludq
jl
out
jge
bound
mov
pusha
icebp
popa
pop
add
test
mov
fs
mov
mov
and
inc
push
ficoms
add
int
xchg
jb
mov
fldcw
fistl
in
mov
sub
repz
ret
sub
push
stos
daa
jbe
stos
daa
jbe
sub
mov
push
stos
daa
dec
shlb
add
dec
or
fidivs
adcl
into
fs
inc
adc
add
ret
mov
jae
loope
out
fistl
test
out
faddl
add
imul
fadds
jmp
ds
test
lods
mov
and
pop
fucomi
add
pop
push
xchg
lret
popa
flds
insb
lds
push
ljmp
push
insl
cmp
add
fsubl
call
int
xorb
sub
das
cmp
addr16
call
push
mov
out
xor
pop
and
pop
flds
sub
add
call
insb
and
add
outsb
and
fildl
decl
fucomi
adc
and
xor
xchg
cmp
adc
insl
and
fiaddl
push
xchg
decl
jle
and
sti
xlat
insb
and
sub
add
fimull
mov
fnstcw
add
xchg
and
aad
add
mov
fnsave
mov
lcall
lret
out
roll
mov
cmp
iret
cli
clc
lahf
sbb
mov
int3
and
sub
dec
mov
or
and
or
mov
lock
dec
mov
xchg
mov
test
inc
enter
enter
ja
movntq
push
cmp
ja
mov
aam
sub
jle
xchg
pusha
sar
outsl
sbb
inc
bound
test
mov
mov
fld1
inc
adc
dec
pusha
xchg
adc
bound
hlt
mov
fs
mov
icebp
adc
sbb
push
jb
inc
icebp
sub
movsl
stc
fiadds
xlat
adc
mov
sub
add
xor
cltd
js
sub
xchg
jle
int3
insb
lcall
mov
mov
fisubrl
bound
das
add
loopne
gs
adc
jmp
movsl
shlb
adc
pop
flds
bound
clc
and
xlat
daa
and
or
call
dec
push
dec
int
cmp
dec
add
popa
push
shr
out
jbe
lret
mov
int3
mov
bound
xchg
push
fwait
add
pop
push
ss
rcrb
add
call
jno
testl
cld
testl
movb
and
repnz
and
icebp
mov
add
add
sub
or
xor
and
mov
jl
dec
imul
dec
inc
and
dec
push
and
call
or
add
cmp
stos
push
orl
sub
dec
dec
and
push
inc
add
mov
adc
mov
in
dec
bound
mov
xor
push
mov
cld
add
bound
pop
shlb
mov
test
add
lods
enter
jmp
and
ret
and
mov
mov
pop
xchg
fldl
and
scas
int3
and
ret
and
out
add
sub
insb
dec
jo
pop
cmp
shll
jp
stos
add
lret
add
mov
ss
bound
jmp
mov
or
adc
icebp
rolb
enter
mov
cmc
lret
cmp
arpl
insl
dec
and
and
or
test
xor
sbb
sub
rolb
pop
dec
push
fldenv
adc
mul
add
int3
jmp
into
add
cmp
or
jo
loope
out
out
stc
mov
mov
ret
or
cmpsl
mov
add
fildl
jmp
cmpsb
in
sub
sub
std
fcmovu
jg
test
scas
gs
rcrb
fdivl
push
inc
and
jmp
pop
flds
fs
out
pop
flds
jb
insb
add
popa
pop
jmp
add
xchg
push
jmp
pusha
pop
bnd
mov
bound
jb
call
cld
in
xchg
jne
jo
push
movsb
insl
fs
pop
and
pop
flds
add
mov
or
mov
fildl
cvtps2pi
push
add
push
ret
fsubrp
mov
mov
incl
add
pop
dec
fildl
inc
rcrb
push
out
mov
mov
mov
mov
test
mov
cmpsl
faddl
add
lret
call
sub
inc
cmp
mov
out
int
shr
cmp
inc
or
jecxz
add
add
daa
addb
cmp
mov
dec
or
add
movsb
roll
cmpb
xchg
pop
pushf
fnstcw
icebp
mov
movsb
roll
sbbb
mov
fmuls
out
and
and
std
int
bound
add
pop
jnp
add
add
pushl
incl
stc
mov
stos
addl
add
mov
xchg
jo
add
xchg
fwait
sub
fsub
add
sub
fdivs
out
icebp
mov
mov
push
xchg
ficoml
shrb
add
push
int
aam
outsl
insb
xchg
out
lock
jecxz
push
push
pop
das
imul
divl
cmpsl
negl
aad
and
fiadds
gs
sub
add
sub
and
cld
and
fsts
testl
add
popa
pusha
inc
or
or
add
or
add
inc
fmull
xor
cmpb
and
pusha
flds
neg
lods
and
popa
pop
ret
ljmp
clc
push
repnz
lods
pusha
in
lods
pop
lcall
mov
out
jecxz
and
add
pop
push
xor
rorb
cmpsb
sbb
insl
les
imul
dec
imul
mov
fiadds
dec
push
inc
or
popa
and
hlt
mov
roll
mov
inc
roll
xlat
sub
add
movsb
mov
add
jnp
mov
add
flds
jnp
mov
dec
push
loope
push
iret
push
mov
loopne
mov
std
decl
mov
inc
push
loope
xor
mov
data16
mov
cmpb
addb
jmp
es
addb
add
stc
jge
push
addl
nop
bound
mov
outsb
push
xchg
adc
bound
add
loope
add
test
outsb
jmp
addb
fldt
jmp
and
mov
aam
add
aad
cmp
addb
sub
addb
fcmovnbe
add
out
fcomps
xchg
xor
sbb
inc
jno
insb
inc
add
mov
std
out
rolb
vpexpandw
xchg
arpl
ljmp
lock
sbbl
mov
jns
or
inc
sbb
add
out
sarl
gs
mull
xchg
cld
ficoms
add
loopne
mov
arpl
ljmp
mov
add
xchg
push
ficoms
add
popa
fs
adc
popa
flds
int3
incb
push
loopne
ret
dec
std
pop
adc
xchg
pop
push
adc
notl
push
call
fnstsw
gs
sbb
out
add
cmp
popa
nop
mov
add
mov
sbb
add
mov
flds
cmp
sub
mul
add
sbb
fmull
mov
movsb
add
or
or
mov
xlat
mov
add
push
jl
jo
incl
and
add
stos
push
ljmp
mov
mov
add
pop
jp
add
dec
and
add
ud1
fisttpl
xor
test
xor
dec
sbb
fisttpl
mov
mov
inc
popa
test
lock
jnp
inc
aam
aam
es
add
stc
or
test
in
jmp
cld
sbb
inc
add
dec
push
jle
add
bound
inc
add
addb
cltd
addr16
inc
fs
bound
add
test
pop
arpl
push
out
cli
test
dec
outsl
push
xor
call
inc
inc
loope
cmp
addr16
sub
sbb
jge
fidivs
arpl
mov
pusha
rolb
popa
push
cs
stc
and
pop
ret
iret
jl
aad
mov
andl
mov
fsts
fildl
and
out
dec
repz
dec
xor
jg
repz
ds
jg
repz
cs
jg
repz
sahf
cs
aad
sbb
popa
int
pop
inc
shll
add
mov
addr16
inc
or
sbb
in
push
popf
xchg
mov
jmp
and
jl
cs
inc
pusha
and
jmp
jb
loope
stos
dec
enter
pop
xchg
adc
in
ds
sub
cmc
cmp
je
ljmp
popa
fnstcw
out
add
mov
mov
in
std
jmp
xchg
leave
je
mov
mov
ret
add
fmuls
add
jo
sbb
or
push
xchg
adc
punpckhdq
pop
rorl
adc
daa
push
add
or
inc
and
or
andb
add
loop
icebp
cmp
push
and
push
jl
testb
and
push
andb
aam
add
cmp
or
sti
mov
movl
ds
bound
jl
imul
add
shl
test
add
mov
add
xlat
in
add
xchg
aam
mov
in
gs
faddl
add
lods
and
sub
pop
arpl
or
out
testb
push
pop
arpl
subb
aam
jmp
pop
inc
and
addr16
hlt
adc
insl
loope
mov
fldl2t
out
stc
pop
sahf
fldt
mov
cwtl
sub
bound
or
cmpsb
pop
add
cmp
out
xchg
pop
or
add
push
cmpsl
cmc
loope
into
add
xlat
js
in
insb
add
scas
cmc
jecxz
out
add
mov
test
call
jle
ljmp
xchg
add
jns
fcoms
mov
inc
mov
xchg
int
xchg
test
flds
lods
sbb
negl
lcall
popa
data16
ljmp
mov
add
push
and
pusha
flds
add
mov
arpl
cmp
outsb
pop
shlb
pop
sub
dec
xor
pusha
push
jg
std
ret
cmp
popa
out
lret
sbb
test
cmp
call
shll
and
push
std
cmp
mov
faddl
cmp
lods
je
lock
imul
push
std
decb
iret
mov
repnz
cmp
push
lea
push
mov
out
push
fiadds
test
jmp
fiadds
fldl2t
sub
out
jl
push
add
cmp
or
add
sbb
cmp
scas
or
add
jmp
scas
fldl
mov
ja
add
cmp
cmpsb
pop
pop
aas
in
push
loopne
add
bound
push
incl
jnp
push
fsubrp
insl
cli
mov
and
xchg
add
mov
rcrl
mov
mov
dec
test
add
inc
push
out
and
bound
dec
jbe
add
sub
add
sub
enter
push
shlb
movl
out
and
sti
lret
fld1
push
lcall
insb
loopne
dec
bound
rcr
pop
lret
mov
inc
add
mov
addr16
stos
ljmp
mov
mov
ret
subb
xchg
ret
mov
aad
leave
mov
push
push
add
fldenv
clc
ljmp
gs
jmp
xor
lret
dec
jmp
call
decl
lret
das
xlat
xchg
sub
xor
dec
xchg
or
fsubp
popa
and
popa
jo
cmp
xchg
mov
ret
mov
push
insb
add
icebp
mov
into
mov
shr
or
jmp
out
xchg
inc
and
icebp
or
fiadds
jge
jb
pop
or
cmp
sbb
jmp
inc
flds
loopne
add
sub
flds
add
es
add
imul
mov
xchg
pop
adc
add
jae
add
sbb
pop
sbbl
popa
xchg
sub
testl
cmp
jmp
incb
pop
pop
add
in
lgs
pop
add
rolb
jns
test
imul
pushf
xor
sar
add
cmp
dec
fistps
pop
push
movzbl
dec
inc
xor
scas
push
add
arpl
test
jnp
add
inc
mov
mov
pop
xor
ret
test
push
adc
pop
cmp
jb
jb
or
xor
orl
leave
sub
jb
jp
or
cmp
adc
dec
pop
incb
mov
xor
pop
xor
xchg
jle
add
inc
pop
push
add
inc
loope
pop
pmaxub
arpl
sub
mov
sbb
adc
mov
xlat
push
and
testb
mov
add
shlb
jne
out
adc
loop
add
mov
lahf
pop
andb
shlb
addb
add
lock
pop
inc
mov
add
xor
pusha
aas
in
sti
and
or
or
bound
or
add
xchg
loop
insl
cltd
in
jmp
popa
rolb
loope
add
push
pop
mov
popa
leave
adc
mov
adc
cmpl
inc
flds
mul
imul
sub
gs
add
dec
and
jmp
pop
cmp
jmp
xor
jg
fmulp
fstpt
sub
jne
outsl
push
iret
shlb
aam
test
and
decl
pop
cli
inc
fbld
test
and
jmp
repz
inc
sbb
faddl
cmovns
or
mov
and
jmp
and
jnp
test
aam
add
xchg
pop
jnp
inc
sbb
add
arpl
pushl
cmp
std
incl
add
pop
cmc
or
pop
sti
inc
and
clc
roll
add
add
bound
add
add
sbb
in
ss
sub
add
in
idiv
aad
sub
int
sbb
mov
push
pop
push
in
jb
subb
add
loope
or
faddl
jg
test
test
pop
xor
call
lea
or
dec
loope
decb
dec
arpl
inc
pusha
mov
pop
imul
or
or
pop
dec
add
fdivs
push
or
aad
xorb
jmp
adc
sbb
adc
jmp
mov
or
xchg
sbb
xorl
movsl
or
jp
add
mov
or
cmpsb
out
into
jge
lret
jmp
push
gs
inc
inc
shll
and
repnz
push
inc
movsb
push
and
loope
sbb
in
pop
adc
and
add
jbe
or
sub
adc
xchg
out
daa
push
sub
mov
jmp
mov
mov
sub
mov
iret
test
jle
sbb
mov
cmp
lcall
jmp
insl
es
jb
je
add
pop
push
outsb
add
flds
mov
fsubl
pop
frstor
mov
fsubrl
add
cltd
mov
cmp
lods
adc
inc
test
enter
in
mov
mov
push
xchg
add
dec
andl
mov
inc
adc
dec
add
lret
dec
dec
mov
lock
in
cmp
test
lods
cld
sbb
mov
add
out
dec
and
lea
push
inc
and
dec
dec
add
pop
mov
cmp
push
addb
jb
cmp
fs
push
hlt
fs
and
pop
dec
pop
movb
incb
mov
stc
shlb
inc
fwait
mov
dec
push
mov
add
adc
push
in
stos
add
and
inc
mov
orb
imul
call
inc
sbb
push
sub
icebp
mov
mov
clc
mov
into
hlt
mov
sub
mov
jnp
push
aam
stos
pop
jp
fcoml
add
sbb
xorl
les
imul
cli
add
xchg
repnz
cltd
jb
loopne
out
adc
movl
insb
ljmp
arpl
js
out
and
xlat
ret
ljmp
dec
fcoms
idivb
insl
pop
push
loopne
or
lret
jae
out
add
mov
add
flds
test
popa
dec
inc
xchg
jo
sub
and
adc
popa
dec
add
loop
sbb
popa
jo
clc
jnp
cs
rclb
mov
dec
and
popa
stc
pop
inc
dec
call
inc
aad
negb
jmp
arpl
push
xor
imul
and
out
add
adc
test
rorb
cltd
fisttpl
outsb
sbb
mov
or
add
cmp
shrb
or
push
call
xchg
rcl
and
enter
popa
lret
mov
mov
and
incb
aaa
xor
mov
xor
xor
dec
lret
mov
add
lea
cld
xor
dec
lds
mov
mov
cmp
and
dec
test
ds
mov
aam
jg
lods
push
mov
fldl
aas
fcoms
mov
fcoms
mov
fcomps
mov
sbb
sbb
push
sbb
bound
lods
and
mov
jb
lods
and
mov
aas
fstpt
aad
jns
in
loope
repnz
and
std
sub
xchg
and
sub
gs
aaa
sbb
jle
jbe,pt
mov
cmpsb
sbb
cmp
push
cmpb
and
adc
jle
fstpt
xor
out
out
bound
add
fdecstp
cltd
pusha
fs
adc
jmp
fmuls
hlt
add
fildll
xor
gs
ret
jle
mov
mov
pop
sbb
and
pop
inc
in
or
adc
jno
inc
lods
pop
mov
jle
jbe
daa
ss
add
fsub
add
mov
mov
std
outsb
fcompl
testb
loopne
jmp
sahf
flds
jmp
fs
out
jbe
std
push
repnz
mov
je
push
nop
jbe
push
cltd
inc
jo
adc
cmpsb
sbb
ja
add
insl
std
out
bound
popa
flds
shlb
std
into
push
cltd
inc
jo
mov
and
mov
push
push
out
jmp
add
and
icebp
popa
inc
xor
jl
shlb
clc
mov
and
fadds
mov
inc
and
in
paddd
std
decl
pop
insb
dec
pop
addb
and
mov
inc
or
lret
testb
andb
sub
flds
cmp
flds
mov
fadds
xchg
xor
xchg
or
add
ss
negb
mov
add
push
mov
out
add
jl
jp
pop
incb
std
push
or
jl
inc
inc
add
test
and
mov
fiaddl
loope
int
add
adc
add
sub
cs
aas
jmp
lods
cmp
xchg
dec
sti
popa
push
std
testb
sti
or
in
scas
imul
not
fsubs
xor
sbb
or
jmp
jp
test
popa
or
sub
fildl
lock
loope
testb
bound
out
xchg
push
fisubrl
arpl
daa
jbe
stos
daa
jbe
xor
lret
sub
and
cli
sub
xlat
ror
pop
sub
and
cli
and
mov
add
push
xor
lds
inc
jb
xor
xchg
sub
xchg
add
cmpsl
shrb
lcall
push
pop
rclb
jecxz
mov
cmpsb
shrb
sub
jmp
js
jb
inc
add
adc
mov
mov
popf
jge
or
test
jmp
jecxz
mov
sbb
test
pusha
pusha
dec
add
mov
test
insb
pop
imul
add
sub
prefetch
or
rcrl
jg
and
lret
pushf
mov
cmp
xchg
cmp
je
mov
aad
bswap
xlat
mov
inc
paddsw
cmp
dec
fnsave
inc
pop
mov
std
inc
mov
inc
and
loop
jle
loop
str
pop
jns
pop
aad
test
insl
std
jmp
inc
mov
push
add
cmp
addb
pop
adc
mov
cmc
push
hlt
jle
mov
xchg
mov
inc
jle
aad
and
pop
lret
js
inc
inc
add
jmp
and
into
and
cld
test
push
dec
sub
add
add
cmc
and
inc
dec
mov
add
jmp
out
xchg
lods
add
mov
into
xchg
lods
add
out
shll
jg
cmpl
push
jg
js
sbb
add
sub
mov
cmpsl
or
hlt
add
push
enter
and
add
popa
mov
add
push
sbb
cmpsb
cmpsl
cmp
aam
out
dec
dec
insb
sbbl
add
mov
inc
test
pop
push
mov
enter
xlat
pop
pop
jae
and
sbb
mov
mov
adc
popa
bound
scas
xchg
sbb
fwait
sub
xor
loop
or
shll
adc
ja
mov
popa
flds
ret
push
push
outsb
std
jmp
int
and
arpl
inc
and
call
call
inc
leave
cmpl
cwtl
mov
neg
aad
jmp
std
fadds
jmp
pop
ficoms
sbb
and
add
lahf
fiaddl
add
xor
mov
das
fiaddl
add
and
add
lods
in
cmpsb
pop
incl
rcr
add
lret
cmp
adc
adc
jg
add
mov
inc
mov
repz
mov
jmp
mov
mov
out
add
inc
pop
add
add
mov
or
xor
mov
and
mov
add
ljmp
add
mov
and
or
push
or
and
mov
ret
gs
inc
ljmp
jp
inc
mov
inc
jns
adc
and
xor
iret
inc
aas
jmp
sbb
pop
ljmp
sbb
or
add
inc
jp
inc
jle
xbegin
mov
xorb
xchg
jb
loopne
call
clc
iret
dec
dec
mov
fdecstp
test
ss
cmc
adc
inc
pop
adc
sub
sbb
rcl
popa
mov
leave
pusha
rolb
xor
add
push
add
push
jbe
xchg
imul
leave
insl
les
mov
ja
fsub
add
adc
lock
aam
cmp
push
imul
jmp
adc
add
push
bound
daa
fstps
subl
push
jne
popa
push
jecxz
jae
scas
inc
add
and
push
push
fisubl
mov
scas
inc
cld
int3
push
dec
cli
popa
sub
push
and
fs
popa
pop
inc
add
mov
pop
and
add
jns
jmp
out
and
xsaves
pop
insb
and
or
test
movzbl
cmp
lcall
or
or
xchg
data16
lcall
hlt
ljmp
fwait
fs
jmp
mov
and
pop
jl
mov
loopne
insb
pop
push
jle
rcrl
rorb
and
loopne
sysret
cmp
jnp
pop
insb
je
movsb
repnz
movzbl
rolb
test
add
sbb
repz
mov
sbb
add
fnstenv
sbb
and
aas
jge
lret
bound
shlb
xor
out
add
lret
mov
icebp
fstpl
jg
pop
cmpsb
hlt
or
rorb
jg
add
bound
inc
push
jb
mov
sahf
in
aas
jmp
and
xor
sarb
add
add
inc
aas
jmp
stos
pop
dec
movsb
aaa
hlt
fnstcw
add
scas
xlat
insb
pop
ficoms
push
imul
roll
pop
lret
out
outsl
pop
out
fsubs
jb
out
mov
sbb
out
dec
fwait
insl
or
call
ficompl
sbb
mov
cli
add
mov
pop
add
pop
lahf
push
gs
movsl
adc
push
out
add
fsub
add
xor
bound
sbb
sub
stc
call
out
sbb
insl
xor
add
inc
or
in
or
popa
mov
fcompl
xor
les
addl
mov
and
roll
mov
shrb
sbb
jne
fadds
jmp
fdivr
or
popa
mov
in
xor
int3
pop
test
jbe
add
adc
inc
and
addr16
add
push
inc
and
addr16
mov
outsl
enter
imul
mov
mov
mov
xor
leave
cli
sahf
pop
sarl
adc
fimull
mov
cwtl
aam
in
add
dec
sbb
adc
sbb
mov
adc
subl
aam
inc
xchg
push
add
bound
inc
push
ficomps
adc
and
mov
mov
shl
sub
mov
mov
push
aam
cmp
xchg
fidivrs
mov
adc
push
in
mov
jno
minps
test
bound
inc
inc
outsb
rorl
in
ljmp
in
cmp
mov
push
loope
or
bound
clc
inc
fdivrs
and
jnp
dec
push
jb
mov
fxch
pop
and
call
add
push
jae
dec
add
int3
jecxz
pop
repnz
mov
fcomip
loope
bound
cmp
loope
out
adc
or
add
add
fsts
mov
or
push
sbb
shl
imul
lods
push
scas
pop
xchg
or
std
dec
adc
xor
jo
ljmp
int3
jno
mov
add
sahf
mov
mov
pop
lahf
inc
aad
inc
sub
pop
and
leave
lds
mov
mov
jl
jle
push
xor
cmc
fs
cltd
mulb
mov
call
cmp
es
pop
flds
bound
fiaddl
jmp
lds
es
pop
flds
cmp
arpl
and
and
add
faddl
add
and
andb
dec
pop
call
xorl
aaa
jp
add
je
mov
push
mov
cmp
rorl
jmp
rclb
sub
xchg
outsl
ret
sub
mov
xor
cmp
decb
enter
mov
push
mov
push
cmc
or
in
push
orl
jnp
pop
jne
shlb
and
xchg
je
fnstenv
mov
lods
adc
stos
imul
bound
or
xchg
push
jnp
dec
ds
add
xchg
nop
sub
sub
cmp
pop
js
add
or
adc
incb
cmp
insl
out
pop
std
xor
jb
pmaxub
mov
call
fldcw
in
or
and
cmp
daa
ljmp
popa
pop
mov
fldz
xchg
pop
mov
add
sbb
push
sub
sahf
mov
mov
sub
cs
pop
jp
test
jne
pop
outsl
or
idivb
pop
shlb
pop
pusha
push
orb
xchg
pop
inc
cmp
pusha
in
or
cld
xor
add
testb
sbb
push
cltd
and
lds
pusha
push
mov
movsb
add
add
pop
std
divb
and
xchg
shll
addr16
outsb
pop
clc
in
or
flds
fsubp
cmpsb
imul
int
fs
std
mov
call
mov
in
xor
mul
push
inc
adc
mov
in
mov
sahf
add
pop
std
fidivs
xor
rolb
daa
movsb
push
add
jnp
fists
cld
in
pop
pop
insb
or
and
cld
mov
inc
xor
pop
add
lods
pop
movsb
std
pushf
mov
and
outsl
add
cwtl
mov
push
cmp
jl
or
jp
or
decl
cmp
jns
adc
incl
mov
push
fdivr
pushf
mov
inc
xor
pop
add
cmp
pop
std
jl
inc
inc
inc
mov
and
add
dec
lds
decb
movsl
jb
outsl
or
ss
cmc
pop
jno
es
in
cmp
aam
jnp
cwtl
out
cld
int
cmpl
or
repz
arpl
jmp
insl
push
movb
gs
mov
jmp
outsl
dec
arpl
inc
pusha
xor
pop
pop
cmp
jmp
pop
test
popa
out
mov
imul
test
jno
add
fsubp
push
arpl
jmp
out
jmp
loopne
add
nop
push
jo
std
call
outsl
inc
std
call
fistpll
add
push
cmp
add
pop
insb
inc
insb
push
incl
fldenv
subl
ret
xlat
mov
add
outsl
inc
std
call
fisttps
add
or
sub
push
cmp
cwtl
fidivrs
add
xchg
ljmp
lret
mov
pop
int3
mov
sbb
xchg
xchg
add
inc
add
popa
flds
jmp
stos
fadds
or
sti
fstps
stos
mov
enter
pusha
shlb
sbb
pop
je
fsts
sub
out
pop
and
sub
pop
xor
popa
lret
decb
inc
jmp
pop
flds
add
dec
or
scas
jns
add
xlat
mov
je
and
add
scas
jns
add
call
test
push
cmp
outsb
mov
mov
aad
mov
xlat
mov
adc
add
mov
dec
add
in
inc
add
mov
or
push
inc
and
push
cmp
dec
sub
push
adc
cltd
std
push
add
aad
call
rcrb
inc
aas
roll
incb
cmpsl
negl
icebp
cmp
ret
mov
bound
shrl
sub
dec
xchg
aad
bound
aam
mov
add
mov
add
jno,pn
add
inc
loopne
arpl
call
add
mov
jbe
arpl
pop
jo
cmp
repnz
jge
add
xchg
dec
push
out
sti
jmp
andb
fld1
add
data16
out
loope
mov
jge
add
pop
sbb
es
pop
popf
sub
sbbl
call
pop
decb
add
cmpsl
shll
pop
fistpll
add
lods
or
ror
xor
fs
and
pusha
add
jb
inc
cltd
call
mov
mov
out
jmp
popf
add
jns
mov
vmovmskps
popa
dec
or
inc
test
jbe
subl
pop
add
add
add
xor
mov
call
or
push
lahf
mov
xchg
push
mov
mov
add
push
and
dec
cld
pop
call
lret
call
xchg
fadds
jmp
push
pop
rcrb
push
xchg
mov
std
add
inc
dec
add
mov
push
push
shrb
incl
pop
aas
and
sbbl
jl
mov
fidivl
sub
jb
dec
cltd
and
fldl
add
xor
mov
and
cmp
call
and
fildl
mov
pop
add
fiaddl
xchg
push
inc
or
add
mov
mov
cmpsl
add
bound
lret
jne
push
inc
add
insl
or
pop
arpl
call
sbb
add
sbb
sub
mov
cmp
xor
xchg
in
mov
in
jae
cwtl
add
bound
jle
inc
add
xchg
in
sbb
add
dec
sbb
aad
scas
jnp
inc
test
add
add
lret
and
inc
jle
pop
inc
add
cmp
fstps
push
sbb
loopne
out
ret
nop
cmp
inc
icebp
test
pusha
lcall
gs
jl
std
ret
add
pop
enter
rcll
add
cs
mov
add
and
adc
lret
iret
xor
std
mov
add
push
js
mov
add
movsb
dec
in
insb
inc
push
imul
jp
std
repz
popf
das
in
sbb
pop
frstor
hlt
in
pusha
mov
ret
sub
xor
sbb
pop
add
int
mov
stc
xchg
and
jle
and
mov
jmp
jmp
inc
adc
jmp
cmpsb
adc
cmpsb
add
roll
push
cmp
adc
add
mov
mov
js
and
adc
call
push
clc
pop
call
mov
mov
mov
add
mov
add
movsb
shlb
pop
mov
movsb
pushf
push
test
or
call
and
xor
inc
pop
and
xchg
add
clc
cmpl
pop
lods
pop
dec
xlat
cmp
push
pop
movsl
pop
cmp
aaa
push
pop
push
pop
mov
into
andl
out
cmp
iret
cmp
add
inc
pop
insb
adc
mov
add
mov
iret
inc
xor
push
mov
lret
and
push
test
add
arpl
inc
fcomi
call
in
add
jp
lea
mov
add
add
jne
push
inc
add
pop
adc
pop
arpl
call
mov
dec
inc
sub
and
cmpsl
out
mov
fcoml
filds
add
into
imul
cmc
loop
mov
jg
inc
ds
test
roll
add
mov
out
and
call
mov
add
js
push
jae
cmp
out
jmp
cld
inc
add
sahf
js
mov
add
push
call
jp
xchg
sub
clc
inc
push
sub
mov
cltd
inc
jmp
movsl
add
movsl
or
fptan
int3
add
push
es
iret
in
lds
out
popa
fcmovbe
movl
out
jmp
flds
jmp
outsb
cltd
push
aaa
mov
adc
mov
xchg
flds
jmp
or
fscale
pop
jge
call
movsl
flds
jmp
ss
shl
inc
adc
dec
mov
inc
mov
call
mov
movsb
and
cs
sbb
popa
fnstcw
sahf
std
fiadds
ficoms
cld
and
in
push
jmp
sbb
sbb
push
cmc
cld
mov
add
push
stos
mov
and
add
into
lret
enter
fildl
call
cmp
mov
std
mov
and
add
jnp
xchg
faddl
test
push
pusha
call
push
in
cwtl
cli
faddl
mov
sbb
jp
fildl
mov
cs
jle
rorb
pusha
pushf
push
and
incl
std
or
push
jle
bound
sbb
xlat
jg
push
xor
cmp
add
add
test
cmp
add
bswap
dec
dec
jmp
jbe
lret
and
add
and
cmp
add
sbb
xor
loopne
insl
push
incl
dec
das
cli
xchg
aam
nop
xor
add
pop
inc
add
insl
mov
add
pop
xchg
or
hlt
scas
pop
pop
and
cli
out
jecxz
bound
jg
insb
push
cmc
aad
add
dec
out
and
testb
loop
out
out
bound
out
lcall
add
dec
xbegin
bound
fs
dec
out
call
int
sub
incb
bound
test
loopne
popf
loopne
in
add
insb
jecxz
bound
jg
dec
out
mov
add
or
sbbb
add
fnsave
loopne
sub
fldl2t
fs
xor
fstp
add
or
dec
xchg
xor
rcrb
fdivr
out
mov
inc
std
push
fdivr
out
out
cs
inc
add
jno
dec
cmpsb
dec
dec
mov
jb
add
push
faddl
jb
clc
pop
call
sbb
cmpsb
std
popf
sbb
pusha
rcll
clc
pop
call
push
sub
mov
and
add
add
add
pop
or
add
sub
test
pushl
cmc
call
iret
push
or
jl
sub
push
jg
jg
add
inc
in
into
add
sbb
cmp
mov
pop
std
decl
into
ret
insl
add
add
xor
mov
pop
push
inc
mov
inc
pop
jmp
fcoms
fwait
jo
mov
ret
or
loopne
arpl
shlb
mov
lds
bound
aad
or
pop
add
add
es
add
lret
mov
push
test
cmp
mov
aam
mov
mov
imul
inc
pusha
andl
loop
add
xlat
xor
jle
jp
xchg
mov
jge
or
call
cmc
adc
add
ljmp
in
add
lods
pop
fcomps
shlb
fildl
test
ljmp
loope
mov
jle
fsub
add
sarb
lods
dec
fidivrs
hlt
xor
fldenv
inc
xchg
call
cmc
xlat
xchg
out
test
hlt
scas
push
xchg
jo
lods
call
int
mov
flds
jmp
outsb
mov
pop
call
xchg
inc
std
insb
sahf
xlat
subl
std
jo
fs
popa
xor
aas
inc
mov
movsl
call
jb
pop
call
sbb
movsb
call
xchg
inc
jmp
popa
flds
insb
pushf
ficoml
xor
flds
out
ljmp
cltd
add
adc
add
inc
std
jb
cld
adc
movsl
cld
xor
fs
std
add
jbe
call
jmp
jo
inc
dec
adc
mov
mov
mov
jmp
nop
mov
xor
mov
add
fisttpl
pushl
cltd
add
in
std
decb
lret
fildl
int3
mov
pop
mov
xchg
incb
xlat
xor
mov
jge
inc
mov
mov
aas
fiadds
add
push
incl
xor
mov
std
mov
xchg
add
mov
bound
rcrl
xchg
dec
enter
shlb
call
jmp
xor
inc
xchg
scas
pop
and
mov
or
call
lfs
and
add
cmp
lods
call
call
sbb
mov
test
aas
mov
movsl
das
pop
sbb
xor
add
mov
add
mov
add
fldenv
add
pop
enter
out
fsub
add
addr16
out
icebp
cld
or
xchg
inc
xchg
out
mov
out
popa
sub
inc
movsl
call
dec
std
cmp
and
pop
daa
adc
int
add
in
bound
bound
fwait
add
pop
es
push
andl
daa
add
mov
shlb
add
lods
mov
call
mov
mov
add
data16
loopne
jbe
xor
insl
cmp
mov
pusha
cltd
push
dec
mov
jge
mov
mov
xchg
inc
jmp
pusha
flds
ljmp
call
adc
push
cmp
mov
jb
aas
aam
inc
inc
mov
fildl
cld
mov
call
mov
cmp
jnp
inc
push
hlt
stos
and
add
lea
std
decb
fmuls
inc
cmp
mov
out
add
or
push
out
cmp
sti
xlat
std
mov
sbb
add
xchg
incl
movd
icebp
pushl
cld
fs
mov
mov
xlat
add
pop
sbb
add
push
mov
xor
dec
vcvtdq2ps
add
mov
add
scas
ffree
add
push
mov
ror
aas
bound
and
jne
decb
sbb
add
xor
xor
push
flds
sub
test
and
jge
pushf
sbb
fcomps
lahf
mov
fnstcw
lret
push
adc
push
arpl
inc
pusha
icebp
and
imul
mov
mov
int3
in
adc
sub
jb
xchg
leave
pusha
sarb
popa
sbb
or
pusha
iret
inc
popf
bound
fistpl
lret
ret
ljmp
enter
call
hlt
ljmp
lahf
push
push
imul
fsub
add
xchg
add
clc
clc
jb
and
jmp
cmc
dec
pop
mov
int3
out
fldt
or
aam
movl
test
imulb
dec
test
ljmp
dec
fcoms
rol
rolb
push
loopne
test
ret
cmc
pop
call
sub
xor
or
adc
push
inc
mov
std
flds
jmp
mov
pop
call
xchg
mov
std
xchg
cli
movsb
call
lcall
and
and
pusha
flds
adc
adc
push
mov
aas
pusha
lcall
test
inc
stc
incl
mov
faddl
test
push
pushl
pop
mov
mov
add
and
cld
decl
push
or
push
adcb
cmp
mov
cmp
mov
dec
fwait
loopne
inc
xchg
add
mov
fildl
mov
aaa
xor
mov
adc
dec
jle
and
sti
fildl
cmp
xor
test
jns
jmp
mov
xor
fnstenv
push
rorl
mov
andb
xor
add
or
and
bound
xor
outsl
outsb
sbb
scas
adc
mov
mov
andb
xor
add
nop
add
cmpsb
xor
mov
add
popf
sbb
mov
sbb
test
in
iret
mov
xor
mov
out
stos
cltd
out
stos
cltd
out
fwait
cltd
out
fwait
cltd
out
mov
out
mov
cltd
out
stos
cltd
out
stos
cltd
out
cltd
cltd
out
cwtl
cltd
out
mov
out
xor
sub
cltd
out
das
cltd
out
adc
out
pop
cltd
out
or
out
inc
cltd
out
cmp
out
xor
out
sub
out
and
out
sbb
out
adc
add
mov
inc
jmp
pop
cmp
jecxz
inc
jmp
pop
cmp
jbe
inc
jmp
bound
inc
jmp
out
inc
jmp
add
inc
jmp
inc
sbb
inc
jmp
inc
sub
and
inc
jmp
mov
inc
jmp
addr16
inc
jmp
pop
sub
ja
inc
jmp
shrl
jmp
or
inc
or
cmc
inc
sti
fdiv
inc
lret
mov
inc
lret
test
testl
lret
inc
lret
into
inc
mov
cmp
add
or
or
setnp
dec
mov
push
mov
sbb
sbb
pusha
sbb
inc
push
and
ss
and
ss
and
sbb
es
sub
and
sub
jno
sub
das
cs
bound
dec
cwtl
js
dec
add
inc
lret
xor
aas
int
aaa
cmp
fnstcw
cwtl
aaa
aad
cltd
push
lret
dec
sbb
cmp
or
inc
and
inc
sbb
add
mov
ja
and
aaa
out
xor
call
and
jno
and
scas
in
xor
and
inc
in
xor
repz
xor
out
xor
cli
out
xor
jmp
or
stc
cltd
out
stc
cltd
out
push
lcall
sti
cltd
out
sti
cltd
out
rcrl
out
mov
cltd
out
enter
enter
mov
cltd
out
xchg
cltd
out
mov
out
mov
out
outsb
cltd
out
add
out
outsb
cltd
out
push
cltd
out
push
cltd
out
push
cltd
out
dec
cltd
out
ss
out
cs
out
ss
add
fisubrs
mov
cli
call
sbb
add
loopne
and
dec
push
dec
add
add
movsb
mov
movsl
call
jno
mov
ljmp
lds
in
pop
lds
push
dec
add
xchg
ds
scas
sti
sar
roll
jmp
shl
jmp
enter
fisubl
popa
flds
add
mov
pusha
cmp
add
mov
add
jns
xor
xor
add
sbb
inc
sbb
testb
push
dec
push
mov
add
mov
push
mov
xor
dec
xchg
add
inc
int3
cmp
aas
imulb
push
add
and
aas
arpl
aas
fs
and
fs
and
push
sbb
jnp
push
push
pop
xchg
and
fildl
add
popf
in
bound
add
jmp
cmp
mov
cmpsl
sti
cmp
or
bound
inc
add
flds
rorb
sbb
test
dec
inc
push
add
add
mov
and
mov
sub
call
jmp
fnsave
pop
out
sbb
dec
push
aad
stc
add
frstor
test
addl
add
andb
inc
add
fcmovnb
call
mov
fxch
mov
push
and
call
jmp
lret
out
fisubl
push
and
loope
sbb
ljmp
inc
push
out
bound
sti
and
out
popa
mov
call
jmp
aam
dec
ficompl
ja
ss
push
loope
sbb
cli
es
std
push
add
fldenv
mov
pusha
arpl
add
add
sbb
jl
std
outsl
add
add
sbb
jecxz
pop
xchg
push
add
popa
test
shlb
cmpsb
mov
and
popa
flds
jb
sbb
out
daa
mov
or
add
push
subl
popa
flds
insl
mov
pusha
mov
jmp
sub
std
stc
js
pop
jno
jmp
in
clc
cmp
popa
pop
add
hlt
add
popa
fdivs
inc
out
ljmp
mov
fldl2t
and
sbb
test
push
adc
lock
in
mov
ret
inc
movsl
add
fldl2t
or
add
movsl
add
fdivs
test
dec
add
add
fwait
and
scas
inc
cmp
lret
sub
jae
and
lcall
fadds
xor
dec
sub
das
ss
mov
push
lcall
imul
les
add
sbb
xchg
inc
clc
outsb
sbb
pop
inc
add
dec
cmp
or
cmpsl
xor
cmp
add
fdiv
mov
orl
arpl
add
fiaddl
in
or
inc
ds
add
bound
dec
outsb
sbb
jmp
cmp
xchg
add
bound
add
fistl
pop
mov
add
inc
data16
bound
or
fsubs
jnp
mov
int3
lret
movsl
mov
addb
fsts
pusha
pop
cmpsb
inc
inc
fsubrs
add
inc
jo
orl
in
add
sbb
mov
fsub
add
bnd
std
movl
lea
push
roll
mov
inc
addl
addr16
sbb
xor
fstps
jnp
std
out
jl
std
scas
jl
std
mov
addb
pushf
add
popa
flds
mov
mulb
or
fiaddl
cli
idiv
ret
or
fs
fnstcw
ljmp
addl
loopne
add
imul
push
jb
cmc
sbb
cmc
xor
fiaddl
imull
in
aas
aad
imul
add
orl
pusha
inc
lds
cmc
js
pop
adc
xor
adc
adc
push
mov
sub
mov
xchg
in
or
add
inc
inc
or
pmullw
add
add
xchg
inc
pop
add
add
dec
cmp
jns
cmp
je
mov
and
aad
add
fldl
add
call
dec
mov
incl
loopne
enter
mov
cmp
bound
add
push
push
leave
call
dec
js
dec
xor
push
fistps
xchg
and
call
addr16
ja
fldenv
add
add
and
aam
add
sbb
sbb
jmp
sbb
imul
inc
ds
or
push
lods
les
cmp
je
cmp
push
mov
mov
add
xchg
pop
mov
inc
fsub
js
cmc
xrelease
cmc
mov
sti
loopne
out
bound
xlat
fisubs
inc
mov
push
add
and
push
mov
iret
insb
stos
iret
sbb
gs
into
and
arpl
das
out
js
sbb
jge
add
dec
loopne
add
arpl
das
out
loope
aaa
add
fldl2e
jg
xchg
call
sti
out
out
push
and
ret
jmp
sar
and
add
push
push
pop
flds
jb
arpl
adc
enter
xchg
and
loop
jae
pop
add
jmp
ret
add
sbb
add
arpl
inc
add
outsb
fnstenv
cwtl
call
in
stc
jae
arpl
mov
xchg
call
mov
jle
cli
movsb
adc
fnstenv
in
add
out
cmc
add
fadds
inc
inc
jbe
adc
and
in
jne
mov
add
scas
push
and
pop
iret
js
scas
ret
and
add
jnp
pop
repnz
push
popf
mov
cmp
jbe
push
jns
addr16
push
push
out
push
subl
and
mov
inc
adc
lcall
lock
lret
add
jb
sti
fmuls
ret
cmp
bound
or
lret
test
bound
dec
xchg
jl
jle
add
bound
push
push
pcmpgtw
mov
movb
shlb
push
fwait
add
inc
jl
fucomi
loopne
bound
mov
inc
jp
inc
lcall
add
pop
and
inc
add
adc
loop
mov
and
add
std
loopne
jecxz
jmp
sbb
inc
add
jecxz
in
sti
add
fadds
or
sub
or
shl
jns
fsub
add
sub
pop
aam
mov
jle
fsub
add
fbstp
xorl
mov
jge
jmp
call
sub
aam
icebp
imul
movsl
inc
sbbl
hlt
add
cmc
dec
mov
pop
lcall
fldenv
push
out
add
fnstenv
cmpl
sarl
cmc
add
incl
test
cmp
jnp
cmp
loopne
jmp
gs
inc
call
add
push
shr
popa
fldcw
mov
xchg
push
mov
jl
fnsave
cwtl
xor
loope
add
ror
mov
push
jae
loopne
cmp
push
stc
jmp
rolb
xor
pop
jae
outsb
and
popa
flds
int
push
and
std
add
push
jmp
scas
cld
xor
test
imull
call
dec
mov
sbb
and
dec
dec
andl
jns
sub
xor
pop
cmp
and
aad
orl
pushl
push
rorl
and
out
cmp
add
mov
push
dec
add
fldl
add
dec
arpl
xchg
aaa
lods
daa
pop
std
cmp
mov
pop
fs
into
loopne
loope
frstor
bound
stc
mov
mov
add
sbb
outsb
cmp
notl
js
leave
gs
xchg
jge
dec
fdivrs
xchg
add
bound
andl
loopne
arpl
add
bound
fcomps
bound
sbb
loope
add
and
add
sti
fiaddl
pop
mov
add
js,pt
cmp
ja
xchg
shlb
imul
fistpll
shlb
inc
gs
hlt
arpl
int
out
jmp
jmp
pusha
mov
stos
test
or
fldcw
jmp
mov
jecxz
cltd
out
lea
incl
lods
in
pop
xchg
and
add
stc
fld
repnz
pop
aad
in
jl
filds
sub
bound
hlt
mov
out
pusha
fsub
add
push
and
cmc
fistl
sub
flds
call
sbb
push
or
cltd
add
pop
push
into
adc
pop
pop
sub
orl
cmp
add
stc
add
std
add
icebp
add
popa
xor
lods
flds
pop
fsubrp
popa
jb
xor
pop
flds
popa
fnstenv
aam
mov
cmc
neg
mov
imul
pop
cmc
push
decl
adc
sbb
test
inc
icebp
sbb
add
jg
pop
ret
bound
and
out
dec
sbb
icebp
and
mov
iret
fadds
mov
out
and
mov
jl
lahf
mov
add
mov
push
inc
jns
test
decl
xchg
repnz
and
bound
and
xorb
adc
std
loope
sub
cmp
std
movsb
or
pop
and
push
and
vprorvd
inc
pusha
xor
aaa
in
and
xchg
push
in
shlb
and
sub
icebp
cmpl
je
sti
cmp
dec
cs
bound
add
add
in
in
push
test
add
bound
push
push
clc
fcoms
outsb
bound
dec
fistps
rolb
jbe
xlat
inc
bound
xchg
push
pop
and
push
push
and
imul
pusha
popa
push
jmp
jbe
call
popf
mov
out
in
arpl
push
iret
mov
add
and
add
sbb
mov
push
cmp
fstps
mov
push
leave
jmp
fbstp
xchg
xchg
dec
mov
add
out
fnsave
sub
add
popa
scas
add
mov
into
rcll
insl
loopne
add
rclb
call
insl
push
scas
jno
movsb
shll
out
hlt
arpl
adc
add
inc
jno
xchg
adc
js
mov
or
int3
jno
jae
cmp
mov
and
subl
lds
pushf
jno
adc
stos
andw
clc
mov
jl
sub
xchg
lret
jnp
sbb
mov
dec
into
pushl
xlat
add
inc
and
cld
sbb
sub
faddl
mov
sbbb
pop
or
mov
adc
push
mov
adc
adc
pop
scas
add
adc
mov
push
pushl
adc
leave
xchg
add
stc
adc
mul
xchg
das
push
arpl
and
out
sbb
aas
add
and
neg
jnp
sbb
mov
sbb
and
mov
fs
jmp
out
aaa
mov
out
xor
enter
mov
adc
lods
dec
and
test
or
mov
mov
loop
jmp
mov
sti
mov
stos
shll
lret
lds
roll
xor
mov
xor
mov
je
pop
add
inc
mov
out
lcall
jp
mov
cld
push
xchg
stc
inc
bound
push
mov
cmpsb
jmp
fwait
jmp
out
mov
push
add
movsl
or
push
enter
add
sub
jp
call
mov
xor
mov
xor
cmc
pop
mov
pop
lea
out
add
jecxz
jmp
jmp
or
xchg
mov
pop
add
scas
int
dec
popa
flds
je
cmc
and
popa
push
rcr
push
add
popa
loop
lds
flds
jnp
loop
or
sub
push
or
pop
mov
sub
xor
pop
flds
ficoml
add
cmc
and
or
std
hlt
add
inc
jmp
fstpl
inc
arpl
rorl
imul
add
das
leave
xor
bswap
cmp
aaa
xlat
out
push
cmp
out
rolb
lock
lret
in
xlat
jb
mov
jbe
test
jle
les
or
add
test
adc
insl
cmp
or
mov
mov
mov
lock
out
in
adc
xchg
jo
or
cmp
roll
and
jbe
bound
jge
ss
push
mov
fcoml
addr16
hlt
adc
das
std
ja
adc
mov
je
mov
cld
add
pop
mov
xor
stos
push
hlt
xor
sbb
jp
push
sbb
cmc
cld
std
int3
cmp
outsb
icebp
push
add
jb
sub
jge
cld
mov
std
mov
inc
or
andl
push
xorl
xor
xchg
sbb
adc
cli
inc
bound
in
pusha
out
pop
sub
sub
dec
or
jo
xchg
aas
dec
movsb
clc
push
cmc
lret
test
cmc
clc
movsl
lret
pop
push
add
pop
or
push
add
aad
jmp
adc
sub
mov
leave
pusha
push
xchg
jb
adcb
adcb
sahf
cmc
iret
outsl
pop
push
xor
dec
ficoml
dec
loope
sbb
dec
mov
js
add
adc
push
loop
sbb
pop
bound
aad
push
call
test
lret
xchg
and
out
or
adc
and
sbb
push
divb
flds
jmp
cmc
mov
subb
insb
loop
add
popa
push
ja
call
dec
push
mov
inc
jmp
push
lock
sbb
and
mov
je
call
test
mov
aad
jmp
jb
or
inc
stc
adc
enter
xlat
pop
pop
push
push
mov
ret
dec
push
aam
in
push
insb
enter
das
fildl
push
cmp
lods
das
sysexit
xchg
and
inc
out
idivl
adc
idivl
mov
ret
leave
pusha
push
jnp
jg
aas
pop
shlb
inc
fidivl
clc
imul
cmc
xor
or
cmp
mov
and
stc
and
stos
rcrb
xchg
in
test
push
xchg
cmc
adc
sbb
je
and
inc
jl
mov
push
and
add
lahf
add
movsl
cld
inc
adc
and
push
pop
call
xor
xchg
pop
mov
outsb
push
movsw
inc
add
dec
cld
jmp
shll
leave
std
dec
ljmp
imul
leave
inc
or
pushf
push
addr16
iret
and
xchg
dec
or
sbbl
loope
dec
add
mov
add
jb
fildll
in
les
data16
jbe
fsubr
add
out
imul
cli
lods
sbb
jo
imul
jmp
mov
mov
sbb
mov
mov
jp
in
fildll
in
ret
mov
cmp
fstps
dec
xchg
cmp
dec
fs
jmp
add
popa
std
jmp
dec
sbb
and
and
mov
fucomi
ds
in
sahf
jmp
aaa
jno
aad
cmc
mov
mov
ja
mov
bound
jg
mov
add
fcmovnu
aaa
bound
mov
std
lods
gs
jae
pop
popa
popf
jmp
mov
add
popa
mov
xchg
and
add
enter
push
mov
cmp
and
add
mov
aaa
je
in
inc
jmp
dec
jne
cmpsb
pop
pop
leave
flds
push
cs
mov
adc
mov
xchg
in
pop
pusha
sti
push
add
mov
imul
push
mov
cltd
and
add
je
xchg
add
hlt
or
lds
cmp
or
sub
sbb
add
inc
test
jnp
mov
shll
or
jp
and
mov
andl
into
sbb
push
inc
jecxz
and
or
jp
test
mov
xor
gs
les
cli
xchg
inc
add
add
sbb
push
and
pushl
add
ret
data16
xchg
incb
xchg
pop
jmp
je
mov
insb
icebp
push
pop
and
aas
adc
xor
test
push
data16
push
inc
in
cmp
pop
in
lret
pop
jmp
shl
add
inc
add
fsts
rorl
xor
pop
xchg
popa
add
fisubrs
pusha
add
dec
fstps
loop
int3
sbb
inc
jne
add
fnstcw
jecxz
ret
pop
bound
les
daa
test
add
popf
popf
and
iret
and
fcmove
push
test
clc
pusha
dec
cmc
push
xchg
add
fs
dec
arpl
adc
mov
adc
pop
arpl
mov
out
mov
sbb
out
cmpsl
and
cmp
dec
popa
adc
xchg
or
and
sahf
aas
repnz
xchg
hlt
loop
in
lods
jb
std
bound
jns
pop
add
sbb
inc
xlat
mov
ret
faddl
clc
dec
lea
push
mov
pop
push
pushl
add
hlt
pop
pop
add
inc
mov
push
jo
and
adc
or
lods
push
incl
mov
les
sar
test
xchg
or
int
jne
mov
jg
scas
cmpsl
push
push
adc
pop
test
test
push
mov
jnp
sahf
bound
add
bound
mov
jns
mov
mov
mov
mov
ja,pt
jb
jne
cmp
add
mov
or
ja
push
mov
mov
mov
das
iret
cmp
inc
incb
mov
sub
add
or
dec
andl
in
je
or
adc
xor
loope
std
rcrl
pop
pusha
fsub
add
xchg
jmp
outsl
mov
jmp
mov
sbb
add
fisubrl
bound
jb
jle
pusha
inc
and
pop
bound
cld
or
jb
loope,pt
inc
sbb
add
sbb
adc
jns
fs
xor
test
or
sti
pop
nop
sbb
in
xor
jb
lret
in
scas
add
in
xor
lods
sti
xchg
xchg
in
and
dec
xchg
push
std
adc
aas
in
mov
or
xchg
add
add
movsb
sbb
jmp
lret
jb
adc
push
rol
bound
sbb
sarl
push
test
xor
bound
jp
or
push
test
aaa
cmp
fldt
pop
lods
adc
loope
subl
and
bswap
mov
jb
loope
push
stc
smsw
add
std
cli
jmp
nop
dec
or
lcall
push
ss
add
mov
sahf
pop
ret
dec
mov
xchg
jl
das
roll
dec
sahf
mov
add
push
lea
icebp
rorb
or
or
enter
lcall
ljmp
mov
pop
divb
push
fucomip
sbb
push
add
dec
outsl
fldl
add
bound
jmp
sbb
add
push
rorb
ret
jnp,pn
mov
faddl
out
das
cmp
faddl
out
repz
dec
dec
jle
push
jo
f2xm1
fsubl
test
jae
xor
clc
jmp
call
or
js
data16
or
push
clc
outsb
ljmp
lds
xor
jo
jmp
cld
xor
add
xor
cmc
test
outsl
dec
mov
mov
xor
jb
pop
cmpsl
aas
inc
mov
adc
push
bound
pop
or
je
pusha
movsb
sti
inc
mov
jle
jmp
fsubrp
cmp
bound
pop
pop
sub
add
cmpsb
xlat
push
lods
add
out
prefetch
fistpl
or
dec
jmp
xor
fistl
bound
push
pusha
out
sub
sti
hlt
int
add
pop
div
push
std
fsubrl
loope
leave
mov
test
jb
jmp
xchg
push
adc
loopne
sbb
mov
std
fisubl
fldl
mov
std
jle
add
add
aam
cld
hlt
cmp
push
xchg
xchg
cmp
cmp
call
mov
dec
add
push
sahf
jmp
add
std
orl
je
mov
push
sti
dec
leave
sbb
shrb
mov
xchg
pop
push
in
insb
xchg
xlat
add
imulb
add
js
xchg
mov
loopne
adc
enter
cmpsl
adc
nop
inc
add
cli
jne
jb
add
push
ds
movsl
aas
aam
lea
sbb
call
test
pop
shlb
inc
shlb
xchg
stos
adc
mov
add
xlat
mov
pop
push
inc
push
inc
bound
adc
xor
andb
push
and
mov
sub
daa
fsts
add
mov
adc
push
adc
adc
push
inc
add
cmp
push
jne
and
leave
and
mov
add
mov
xchg
shlb
pop
add
out
in
sub
bnd
fldcw
out
or
add
or
fwait
jo
out
mov
or
daa
jmp
out
bound
or
fldenv
loope
cmc
jg
fsub
add
ret
sbb
and
or
mov
mov
mov
pop
enter
sub
scas
xor
or
fists
out
add
mov
push
mov
mov
add
jmp
iret
stos
es
fsubs
add
fs
add
pushaw
inc
std
sub
ss
test
pusha
flds
jb
mov
push
pop
icebp
add
rorl
dec
pusha
inc
sbb
loop
sti
push
fldl
cmp
mov
dec
movsl
and
add
in
popa
jmp
shll
cmp
push
jno
jns
fsts
loopne
call
popa
flds
roll
and
fildl
mov
out
or
add
sti
fcmovnb
add
fwait
inc
jne
mov
mov
stos
mov
lods
call
lea
out
out
push
xor
mov
aam
in
fiaddl
lea
fldt
mov
add
outsb
adc
addb
mov
cli
push
adc
pop
fwait
add
jno
sti
adc
bound
push
arpl
add
and
mul
push
mov
xchg
pushf
add
bound
je
jl
loope
cs
add
int
mov
mov
jne
push
jns
pop
arpl
add
cmp
loope
call
cmp
mov
outsb
mov
adc
mov
std
stc
loope
jbe
not
jb
add
jg
idivb
bound
loop
pop
pop
or
loopne
add
daa
add
xchg
add
mov
dec
push
xchg
xchg
push
pop
push
adc
cmc
xchg
fldcw
bound
xchg
cmpl
out
ss
cmp
mov
xor
test
pop
fwait
add
fldcw
fstl
inc
bound
aaa
pop
add
out
add
pop
repz
jb
ret
jmp
fs
sub
flds
into
dec
test
inc
jmp
popa
lea
push
sub
cmpsb
enter
popa
push
adc
int3
les
pop
lock
call
data16
test
je
mov
data16
insl
int3
lea
add
dec
ret
inc
and
mov
push
pop
cli
dec
or
andb
mov
xor
jbe
loope
mov
sahf
cmpsl
fldl
add
push
mov
add
cmc
das
test
add
sti
stos
or
or
add
mov
pop
inc
pop
mov
or
test
add
xchg
adc
call
add
lret
add
lcall
pop
lcall
pop
lcall
in
ret
pop
bound
ret
xor
clc
jecxz
mov
lock
push
mov
fstl
inc
or
add
xor
sub
cmpsb
push
dec
add
or
aas
bound
je
outsl
pusha
and
mov
push
jle
pushf
mov
dec
sub
aaa
call
sub
cmp
inc
sub
xor
sub
inc
add
fimuls
std
insl
jl
je
fldcw
xchg
jne
add
fists
xor
in
cmp
push
fistps
jmp
add
xlat
sub
pusha
push
test
dec
sub
dec
cwtl
or
pusha
dec
sub
cwtl
jge
xchg
fsub
add
fucom
cmp
hlt
imul
and
xlat
nop
and
pop
lea
icebp
jle
mov
out
pusha
test
out
jmp
testl
imul
flds
insb
mov
mov
dec
adc
and
popa
sbb
mov
lahf
jmp
add
popa
fnstenv
sbb
add
popa
fldcw
pop
icebp
inc
add
flds
push
cmp
mov
jnp
add
cs
ret
clc
push
clc
pusha
fsts
rcrb
xchg
loope
jnp
popa
fsts
ja
pushl
adc
xchg
mov
xor
push
xchg
or
call
mov
popa
int3
fildl
lea
mov
add
call
test
faddl
mov
dec
mov
faddl
add
cli
pushl
rorb
leave
std
decl
sbb
add
sbbl
test
and
jb
add
lret
xrelease
test
lret
dec
push
ret
inc
sbb
jl
jg
adc
mov
push
mov
jmp
andl
xor
adc
add
xchg
add
inc
and
test
jb
mov
xor
loop
mov
push
add
push
and
sahf
sbb
shlb
mov
add
jbe
adc
dec
js
aas
bound
add
push
or
std
lods
dec
push
and
push
mov
push
adc
call
jecxz
push
popf
frndint
pushl
out
cs
orl
jp
push
add
push
or
xor
inc
lret
xlat
mov
sahf
mov
xor
or
outsb
insb
fldcw
inc
jle
pop
pop
fldcw
std
dec
fldcw
std
cmp
scas
aas
ds
sub
scas
aas
ds
scas
aas
jle
outsb
std
mov
jg
dec
fsub
xchg
mov
fsub
add
sti
mov
andb
dec
test
xor
push
pop
add
test
or
jmp
sub
or
jmp
inc
mov
mul
movsl
cmp
popa
pop
dec
or
std
fcoml
sub
fs
inc
loope
test
inc
jmp
cld
cmp
mov
adc
data16
add
lret
lds
sub
sub
jnp
test
aas
cmp
dec
pop
and
aaa
sbb
fdivr
mov
xlat
add
sub
add
jnp
push
push
mov
fcoms
fadds
clc
insb
rolb
dec
cld
cld
dec
leave
sti
adc
sbbb
adc
and
cmpsl
lret
sti
adc
jo
and
add
push
push
or
sub
mov
jg
in
rolb
jmp
out
pop
sub
add
cli
and
jmp
cmp
adc
push
inc
add
sub
or
xor
das
push
pop
es
mov
je
add
push
xchg
lret
dec
and
rorl
jle
add
lock
je
inc
fcoms
std
inc
add
mov
je
ffreep
jmp
push
loop
adc
sbb
add
dec
aad
fsts
add
inc
cmpsl
xor
call
mov
jns
daa
add
cltd
jb
pop
lret
in
ret
and
sub
test
jo
ds
add
xchg
add
mov
mov
mov
xor
and
add
xchg
out
mov
shr
xchg
jmp
add
int
adc
mov
out
insl
fsin
adc
stos
add
in
repnz
fstps
les
pushf
test
out
in
dec
into
popa
leave
dec
inc
aad
cmp
pop
flds
fisubl
xor
call
ficoml
std
hlt
add
std
cld
leave
in
jmp
jno
jb
mov
adc
popa
adc
in
out
add
mov
out
fists
outsb
push
fisubl
lcall
xor
mul
jno
inc
jmp
pop
insl
pop
sar
call
add
xor
xchg
cltd
add
or
adc
popf
out
sti
jmp
or
adc
test
decl
scas
pop
ret
push
mov
daa
add
xchg
mov
jno
mov
add
in
inc
dec
cmpsl
adc
out
pop
mov
popa
dec
or
stc
jmp
ljmp
sti
jne
or
add
sbb
add
dec
in
mulb
adc
std
push
fnstenv
push
arpl
jge
dec
or
xor
inc
add
shll
jnp
adc
aam
call
mov
outsl
dec
adc
dec
or
add
pop
mov
mov
add
push
cmp
jae
xor
call
out
dec
sbb
cmpsb
add
xor
adc
cld
sbb
outsb
in
cld
xchg
fincstp
cmp
insl
out
rclb
cld
inc
bound
sbb
imul
jecxz
dec
popf
out
sub
xor
push
mov
out
mov
leave
add
insb
xlat
shlb
shll
jbe
and
jge
imul
add
rclb
rcrl
push
push
pop
add
sar
outsb
int3
sar
and
int
cmp
add
or
jb
push
insl
enter
call
jmp
lods
xlat
pop
cmpsb
flds
jl
cmc
jb
mov
call
ret
jb
adc
pop
adc
mov
adc
inc
jmp
popa
mov
add
add
add
flds
sarl
mov
jg
jmp
jne
push
stc
hlt
mov
cld
inc
test
std
mov
divb
fwait
divb
xor
sbb
mov
lret
mov
mul
push
test
fstl
xchg
hlt
jo
arpl
dec
add
pop
shlb
adc
or
subb
lods
mov
or
cld
mov
push
cld
mov
pushl
stos
pop
ret
push
mov
lmsw
outsl
mov
jno
xchg
mov
jecxz
xlat
add
in
inc
jnp
adc
cmpsb
add
or
xor
jl
ud0
sti
jne
mov
jne
dec
jae
jecxz
arpl
add
mov
ja
mulb
pop
inc
bound
aaa
mov
push
pop
or
in
jge
je
xlat
adc
jae
sub
fxch
clc
mov
out
fcomps
mov
dec
push
sbb
hlt
cld
cld
pop
ljmp
sub
adc
mov
addr16
inc
add
dec
icebp
sbb
add
cmp
idivb
bound
or
and
std
pop
outsl
fldenv
lea
sbb
jns
cmpsl
add
fxch
inc
stos
lds
lea
jecxz
popa
test
cmp
push
cli
sbb
sbbl
mov
pop
cmpsl
pop
push
jg
xor
mov
pusha
and
jmp
jnp
adc
inc
bound
mov
sbb
fdiv
pop
cmpsb
xor
mov
call
insl
es
and
pop
bound
mov
es
adc
mov
icebp
cld
jo
adc
jmp
push
jmp
add
pop
pop
add
lcall
in
jno
inc
jmp
mov
xor
fstpl
je
ljmp
cld
inc
pusha
dec
loope
repnz
data16
push
rcl
jg
mov
mov
inc
sbbl
jmp
std
push
je
hlt
adc
fstpl
mov
add
adc
or
add
negl
jno
lret
call
test
lret
xchg
sub
push
lds
subb
ds
push
lea
dec
call
xor
push
jmp
cmpsb
sti
adc
jne
ret
stos
dec
push
insl
cmpsb
das
fstpt
fsubrl
bound
push
fmuls
inc
push
jmp
adc
add
mov
cmp
inc
inc
in
mov
jmp
inc
inc
push
xor
mov
and
out
xlat
jo
add
arpl
inc
add
or
je
imul
enter
lret
data16
mov
sbb
adc
paddw
int3
add
add
xorb
iret
std
outsl
push
out
aas
fnstenv
push
pop
int3
add
push
mov
jno
flds
push
daa
push
stos
mov
lret
rorl
lods
pop
loope
xchg
pop
in
add
mov
xor
cltd
out
pop
push
daa
push
xor
ficoms
mov
push
pop
out
repz
cltd
out
mov
in
icebp
cmp
jecxz
mov
pop
out
pop
out
fmul
add
stc
inc
out
cld
sti
xchg
les
dec
flds
mov
movsb
aad
mov
gs
pop
add
mov
lret
mov
out
jo
sub
xor
test
movsb
std
jle
adc
add
lcall
sahf
push
xor
jecxz
lret
mov
flds
jmp
mov
popa
fsts
push
push
inc
jmp
pop
bound
add
cld
jmp
pushf
roll
add
cmp
sahf
inc
mov
mov
stos
jo
lock
sti
call
sbb
fldcw
cmp
add
popl
push
xchg
add
cmp
sti
jne
and
in
cltd
add
adc
push
dec
sti
fadds
jb
mov
popf
xor
add
test
adc
sti
fsub
out
jbe
in
sbbl
and
push
je
push
mov
adc
lock
add
adc
push
push
push
insb
fdivrl
add
push
or
inc
bound
xchg
fwait
and
jbe
pop
popf
std
lret
add
bound
aas
test
add
xor
mov
jbe
adc
std
jmp
ljmp
bound
adc
lock
add
inc
dec
or
jg
fs
outsb
adc
xor
add
clc
xchg
inc
jle
ss
push
flds
jne
adc
push
and
push
add
mov
mov
loop
or
inc
aad
add
sbb
sub
pusha
pusha
xor
adc
sbb
cmpsl
add
jmp
ss
push
aam
lret
sahf
gs
cmp
daa
dec
jnp
call
and
or
jnp
xchg
sub
and
sbb
add
push
mov
push
jecxz
jmp
call
arpl
std
addb
flds
aaa
sbb
push
adc
add
hlt
imul
cld
insb
cmpsb
gs
loop
adc
popa
fsts
mov
int3
jmp
mov
pop
mov
xlat
add
or
rclb
mov
jg
cld
add
gs
insl
mov
jmp
fsts
fs
mov
push
aad
mov
movsb
adc
jmp
or
mov
movsl
push
ljmp
pop
shlb
sti
adc
jae
add
mov
cmp
lods
adc
hlt
imul
xchg
push
sbb
push
in
arpl
push
cmpsb
out
mov
clc
push
add
fwait
das
leave
shl
xchg
add
mov
fadds
or
rorl
in
mov
bound
fldenv
ret
xor
adc
lods
xor
das
stos
sbb
hlt
push
sarb
pop
adc
cmp
cmp
lret
mov
cmp
mov
adc
or
xor
fwait
dec
scas
pop
dec
jbe
arpl
adc
testb
cmp
cmc
mov
pop
cmc
xchg
sub
ds
cs
cmp
js
or
in
fsubrs
outsb
test
jns
repz
adcl
push
int3
mov
lods
sbb
pop
scas
pushl
mov
icebp
jns
movsl
xlat
push
pop
movsl
rorb
ret
ljmp
pop
imul
jae
sub
and
inc
cmpsb
bound
xchg
sub
out
stos
fstl
lret
sti
fcompl
out
add
ljmp
dec
in
out
imul
out
mov
add
sub
out
and
pop
push
push
popa
aam
jns
flds
ljmp
xor
fwait
jo
mov
sbb
ret
or
mov
std
pop
and
fsubrl
cmp
xchg
lock
inc
xchg
mov
flds
jb
mov
clc
add
cmpsl
add
add
mov
sbb
mov
inc
cmp
jo
cmp
inc
sbb
push
dec
sahf
and
pop
mov
push
mov
add
fildl
add
xchg
jecxz
loopne
jnp
into
call
lock
mov
xchg
mov
popf
and
rolb
sbbb
incl
std
jns
faddl
or
aad
in
cmc
aam
call
loope
inc
cld
mov
imul
mov
out
xor
clc
cmp
add
mov
in
adc
repnz
cmp
test
xchg
icebp
add
dec
pushw
inc
bound
mov
or
test
repnz
xor
fdivs
jnp
sbb
pop
outsl
add
bound
mov
mov
or
es
aad
repz
jo
out
movsb
int
adc
jmp
jecxz
pop
and
aad
cmpsb
cld
daa
stos
mov
xchg
jmp
insb
icebp
data16
jecxz
pop
adc
roll
push
cltd
out
or
sbb
push
cwtl
mov
stc
inc
bound
cld
cmp
bound
fsts
jmp
xor
out
and
pop
mov
jmp
mov
add
scas
mov
and
in
cmc
jbe
add
push
std
popf
pop
lods
pop
vpcmpgtd
mov
sub
xor
out
movsl
movb
flds
cld
and
mov
fdivr
movl
push
cltd
add
and
jmp
xchg
add
mov
xchg
hlt
and
inc
jmp
sbb
adc
fcom
mov
pop
mov
pop
jnp
adc
sub
push
cmc
rcll
push
xchg
adc
cmp
inc
or
and
inc
sbb
xlat
inc
xor
jbe
jo
push
fisttpl
add
jns
inc
and
les
mov
dec
aad
inc
mov
push
mov
cmp
xchg
push
lcall
and
dec
and
inc
mov
mov
xor
filds
add
mov
mov
in
add
and
mov
fistpll
inc
add
and
and
lret
cmp
cmpsb
push
adc
push
xchg
pop
mov
inc
bound
je
ret
les
scas
call
push
adc
cmp
and
out
cmp
test
cmp
jb
add
fmull
test
call
push
pop
adc
test
fldcw
jle
push
or
xchg
or
jecxz
testl
push
pop
sbb
add
xchg
xchg
inc
jno
arpl
sub
add
jnp
jl
add
adc
pop
mulb
mov
pop
sbb
sbb
andb
add
inc
inc
dec
fincstp
add
out
push
fstps
sub
cltd
out
lcall
and
xchg
out
adc
pop
push
ja
jnp
lock
jmp
jno
ds
stc
loop
and
push
addb
pusha
lock
cwtl
stc
add
fisubrs
lahf
xor
add
mov
push
orl
jmp
data16
popf
push
cltd
add
inc
mov
sub
test
and
lahf
adc
push
js
jmp
data16
add
add
sbb
pop
inc
dec
jne
adc
sbb
inc
add
call
jne
adc
pop
sahf
add
test
fs
sti
je
adc
out
add
cwtl
frstor
sti
je
adc
ficompl
mov
fadds
xor
mov
lahf
push
ret
int
add
mov
loopne
cmp
lahf
mov
inc
add
das
or
cltd
fs
mov
mov
add
or
fs
repnz
add
add
or
bound
cmpsb
repnz
outsb
xor
mov
ret
push
inc
bound
arpl
dec
cmp
inc
bound
arpl
repnz
hlt
jno
add
mov
adc
bound
bound
repnz
xor
add
sub
or
bound
jecxz
and
dec
pop
add
daa
add
jno
inc
bound
outsl
adc
rcll
add
push
int3
aas
bound
adcl
mov
push
mov
jb
inc
test
and
xchg
lahf
hlt
divb
sti
jnp
out
aas
add
mov
jecxz
jmp
aas
xchg
iret
cs
fsub
mov
dec
test
push
fstps
jb
out
call
jb
push
mov
pop
xor
adc
pop
push
inc
loope
xchg
and
out
sbb
or
inc
sti
mov
lret
or
mov
pop
call
xor
mov
ljmp
add
push
pop
sbb
popa
sbb
test
xchg
xchg
and
aaa
dec
jne
fcoms
or
pop
adc
jg
mov
sbb
and
pop
shlb
mov
push
jecxz
mov
jnp
dec
and
dec
inc
and
mov
and
inc
cmp
je
ror
rclb
mov
roll
sbb
push
inc
test
or
sti
dec
inc
and
sbbl
push
les
cmp
add
lret
xchg
xchg
stc
call
mov
adc
bound
call
inc
outsl
mov
mov
bound
cs
clc
push
pop
cmp
lods
icebp
cmp
add
dec
xchg
je
aaa
jnp
cmp
mov
dec
dec
loope
cld
dec
lock
test
add
add
and
jle
xchg
or
mov
or
jmp
jns
out
lods
shlb
add
outsl
rorb
loope
in
push
ret
ljmp
std
in
push
std
or
loopne
fcom
pop
je
ljmp
daa
adc
jmp
jmp
aaa
fmull
cs
sbb
daa
sub
bound
das
js
fbld
pop
dec
xchg
mov
mov
cltd
jmp
sbb
sbb
adc
cmc
sbb
add
fs
push
add
and
push
xor
add
and
aaa
fwait
add
loop
cmp
jns
mov
popa
or
jb
shll
leave
add
call
jno
iret
out
out
add
popa
bound
pop
fs
and
mov
ret
addr16
fcompl
in
mov
push
int
sbb
push
in
scas
add
inc
adc
cltd
out
ljmp
pop
pop
cmp
aas
fldl
loopne
mov
lea
mov
push
pushl
hlt
mov
pop
lds
sub
je
hlt
adc
jne
push
pushl
add
or
sbb
add
inc
adc
push
jne
lea
xchg
daa
jmp
testb
add
ljmp
out
add
push
inc
add
and
mov
inc
pcmpeqd
lcall
and
hlt
add
and
xchg
mov
inc
insb
mov
cmp
int3
and
mov
push
fisttps
jmp
add
lock
mov
decl
repz
jmp
rolb
xchg
dec
enter
scas
std
jmp
mov
ret
pop
pushf
xchg
dec
jg
and
add
insb
repz
pop
nop
adc
sbb
bnd
fmul
leave
outsb
push
mov
cmp
mov
add
data16
xchg
jle
sub
fcmovu
jmp
add
clc
cmc
in
rcr
mov
shl
mov
mov
xor
pop
fnstcw
jne
ljmp
shrb
pop
mov
fldenv
sub
pop
mov
xor
mov
cwtl
jecxz
lock
add
inc
ss
add
out
xlat
mov
pop
shr
and
jmp
popf
int
add
adc
pusha
fbld
fnstcw
bound
mul
add
jmp
xor
jmp
xor
and
pop
mov
cld
mov
flds
adc
inc
popf
adc
dec
adc
push
and
push
cmpsb
mov
jmp
and
push
insb
mov
sti
push
repnz
repnz
add
inc
mov
push
mov
call
mov
mov
add
cmpb
or
add
xlat
data16
aad
inc
cwtl
jmp
lea
xchg
sub
mov
movsb
orb
inc
inc
add
xchg
sub
jns
add
dec
cli
sub
dec
imulb
ret
sub
pop
sbb
sub
roll
sub
add
xchg
ja
fnstcw
mov
sbb
rolb
mov
jno
insl
inc
mov
rclb
mov
add
lret
add
addl
shlb
aaa
jle
add
add
add
std
mov
test
je
out
jae
aaa
pop
or
movb
stos
jae
inc
js
arpl
add
jo
std
pop
insb
ds
mov
into
cmp
mov
ret
scas
or
push
scas
cmp
bound
aaa
dec
fs
mov
fstps
ljmp
push
jl
mov
sbb
adc
add
lods
fwait
xor
idiv
mov
fwait
out
adc
mov
fsubr
add
sbb
ljmp
shrb
push
cs
ss
jmp
mov
mov
bound
mov
rcr
add
int
daa
push
call
push
mov
das
sub
add
jmp
mov
iret
cld
jmp
push
into
mov
rol
mov
ljmp
cmp
in
dec
sti
and
xchg
fcoml
add
call
dec
dec
cmc
adc
jmp
sti
and
sbbl
sbb
adc
push
mov
jb
push
icebp
add
notb
jle
dec
jle
cld
sub
add
mov
je
repz
adc
mov
imul
sti
fimull
add
lock
jne
push
into
call
inc
test
xor
mov
adc
std
adc
pop
add
int
mov
or
gs
fsts
insb
mov
push
xchg
jne
repnz
lahf
rcrb
ljmp
inc
jle
push
jmp
xchg
xchg
push
mov
cmp
jmp
insl
cmpsl
je
aam
dec
bound
mov
rolb
ljmp
and
shrb
jmp
out
jns
shlb
mov
add
mov
int3
push
mov
or
push
jb
aaa
jb
cmp
jmp
fdivs
insl
int
push
jp
pop
stos
pop
popa
pushf
fwait
outsb
inc
subl
xor
outsb
xchg
fiaddl
jecxz
push
push
xchg
and
jle
mov
sti
movsl
pop
scas
filds
jne
outsl
pushf
pop
out
adc
fimull
fistpll
sar
fnstcw
dec
in
je
xchg
cltd
test
fwait
jne
pusha
sbb
mov
add
mov
int
inc
shll
inc
or
shrb
xchg
pop
add
aaa
dec
mov
push
pop
repz
hlt
andb
mov
popa
fidivs
jne
pop
add
fwait
test
dec
and
mov
xchg
xchg
xchg
sbb
cs
cld
cmpsb
cli
test
loop
dec
ljmp
xor
or
cmpsb
sbb
pop
push
in
mov
bound
fnsave
call
outsb
push
roll
fidivl
shlb
sub
mov
add
int
xor
hlt
adc
shrb
cli
and
rorb
mov
mov
add
dec
cltd
pushf
cli
add
outsl
add
sub
add
dec
lret
test
cli
sub
enter
cmp
jb
lret
and
add
jb
and
dec
lret
call
xchg
xor
jae
inc
mov
pop
es
std
push
iret
shr
aaa
mov
ret
push
mov
js
scas
add
out
rolb
lods
icebp
ja
push
add
loop
push
add
pushl
xor
je
subl
aam
or
cld
lahf
bound
add
testb
in
movsb
mov
mov
add
or
nop
rolb
mov
fdiv
add
sbb
jp
int
inc
pop
pusha
sbb
iret
jp
pop
loopne,pn
lret
jne
ljmp
inc
ljmp
mov
pause
and
dec
jmp
cmpb
jmp
cmc
repnz
adcb
jecxz
rcr
add
mov
mov
mulb
jno
inc
bound
pop
mov
aam
enter
fnsave
xorl
push
push
bound
xor
xor
test
push
xchg
pop
sbb
je
roll
fsubrs
inc
arpl
scas
xor
xor
add
test
mov
test
add
popa
mov
cmp
pop
les
push
repnz
xor
inc
add
mov
les
lea
add
fldl
push
jo
push
paddb
xor
incb
add
cwtl
push
mov
testl
adc
or
or
add
jl
xchg
fiaddl
add
dec
pop
sub
jnp
push
sbb
mov
jbe
sbb
cmp
mov
aaa
lds
dec
fildl
mov
fildl
add
loope
push
and
bound
mov
arpl
add
jb
cwtl
inc
sti
loop
popf
mov
mov
push
add
xor
movsl
adc
movsl
inc
add
jle
andb
cld
xchg
mov
push
and
sub
jg
and
mov
add
cli
mov
lock
sbb
lods
push
adc
mov
cmp
int
call
out
sbb
jae
lss
movl
mov
adc
out
sbb
testb
fchs
inc
xchg
ljmp
ffree
add
sbb
call
push
sbb
mov
std
insl
push
es
and
cmp
bound
call
fstps
call
bound
fwait
clc
loope
sub
sbb
stos
testb
push
es
pop
les
add
insl
cs
push
inc
add
jle
cmp
jmp
loope
scas
xorb
dec
aaa
insb
sbb
lfs
sbb
push
imul
push
in
add
mov
and
cld
jmp
popa
flds
push
pop
das
add
push
out
jmp
add
rol
push
lret
shll
cld
cmpsb
xor
pop
mov
ret
cld
jmp
ja
pop
lds
daa
push
bound
adc
out
add
sbb
mov
push
data16
cmc
add
int3
pusha
push
mov
lock
lret
xlat
xor
push
jns
dec
hlt
sbb
dec
arpl
inc
lret
push
stc
test
xlat
add
aas
into
push
mov
and
mov
test
cmp
aaa
add
push
inc
and
pop
mov
mov
pop
xlat
add
js
or
adc
adc
das
adc
jg
das
mov
jbe
jle
jne
bound
cmp
add
push
cmp
je
or
add
or
and
cmp
int
push
and
test
outsb
mov
add
cmp
jmp
inc
int3
call
out
sbb
lods
mov
xor
jmp
mov
mov
rcr
mov
test
bound
add
inc
xor
sti
call
adc
mov
push
pop
lahf
pop
pop
mov
fnstenv
add
sbb
fiaddl
dec
and
fldt
xchg
icebp
adc
jle
mov
aad
push
sbb
loopne
fsubr
add
sub
ds
icebp
sub
jmp
or
jmp
clc
sub
pop
inc
xchg
insb
ret
add
repnz
int
ljmp
dec
ss
xchg
rolb
jmp
cltd
jne
call
sbb
call
add
jp
push
int3
inc
mov
add
and
cld
cld
pop
jmp
jmp
push
push
dec
lds
fstps
mov
fwait
or
push
loope
xor
shrb
push
ds
mov
mov
mov
test
enter
dec
dec
push
push
aad
ljmp
xchg
fsub
in
pushl
aam
jnp
pop
xor
push
shll
jne
push
into
jmp
rclb
pop
jo
xchg
test
ljmp
shll
mov
outsl
jmp
mov
imul
add
add
jb
and
adc
ret
adc
push
stc
test
sbb
dec
aad
xor
sbb
mov
in
add
dec
in
cmpsl
inc
jg
in
add
push
dec
lock
bound
xorl
out
std
gs
push
dec
cmp
data16
mov
add
cmpsb
push
aaa
xchg
int3
hlt
or
pop
in
fisubrl
call
sub
inc
add
idivb
push
fxch
cs
loope
cwtl
add
mov
sub
mov
cmpsl
xor
adc
jo
inc
gs
cmp
mov
fstps
fimull
mov
adc
fsubr
mov
xor
js
ljmp
out
fwait
jno
std
inc
bound
add
outsb
push
and
push
push
lods
fwait
in
dec
or
scas
xlat
jmp
ret
sub
bound
loopnew
fnstenv
mov
push
jmp
repnz
cmc
xor
xor
lcall
fldl
bound
add
inc
jmp
xchg
push
dec
lds
cli
out
mov
movsl
mov
mov
flds
sub
push
add
dec
and
cld
insl
out
jmp
fadds
in
xor
imul
call
jg
pop
dec
and
inc
add
cmc
adc
push
ret
adc
lret
adc
out
xchg
add
mov
pop
pop
and
pop
fsts
mov
flds
bound
xor
pop
xor
lods
mov
nop
pusha
push
decb
aam
mov
push
test
push
js
shl
test
xchg
pop
shll
cld
xchg
sub
std
movsb
jne
and
add
fcoms
or
cmc
call
incl
jmp
pop
add
ljmp
push
mov
gs
xlat
push
push
adc
add
shll
fstpl
mov
mov
mov
lock
mov
add
insl
test
jmp
xchg
call
xchg
mov
fildl
bound
lods
cs
sti
jae
sbb
cmc
mov
loope
daa
stc
cmc
and
xor
je
bswap
xor
add
stos
punpckldq
test
and
pop
ret
fstp
cs
aad
or
xchg
add
es
mov
inc
pusha
fldenv
shll
xchg
out
add
sti
gs
cmpsb
fld1
or
and
das
lret
inc
bound
sbb
bound
orl
cmc
mov
ljmp
mov
ljmp
test
lods
fimull
cmp
cmp
cmpsl
and
fimull
cld
cmpsb
inc
adc
test
lret
rorl
jne
nop
jns
shlb
rclb
fwait
push
bound
lds
popa
fldenv
jmp
and
adc
add
lock
pusha
add
pop
aam
dec
or
aam
test
push
lock
mov
std
dec
pusha
std
or
lea
movsl
xchg
fadd
movsl
in
add
cwtl
or
cwtl
adc
jnp
add
aaa
mov
add
pop
mov
add
pop
pop
ret
inc
in
subl
pop
mov
decb
call
popf
jne
mov
dec
jmp
leave
enter
js
mov
push
mov
cwtl
sub
mov
stc
add
and
call
fsubl
cmc
pusha
xlat
mov
cwtl
sub
jmp
jg
int3
ss
lret
fisttpl
and
jno
pop
les
cs
xor
add
mov
adcl
or
sbb
imul
add
filds
add
addl
jnp
loopne
lods
rorb
shr
flds
and
mov
sbb
das
or
js
cs
outsl
inc
icebp
aas
bound
add
cmp
or
mov
fucomip
or
fsts
cmp
and
arpl
insl
ret
ss
pop
inc
jle
popl
fsubr
pop
inc
fstps
jp
mov
bound
addr16
and
pop
call
add
cld
stc
jle
std
cmc
jle
std
sarl
fs
call
xchg
add
jle
cmp
mov
cld
fcmovu
sbb
pop
or
jle
or
add
scas
mov
aaa
loope
jmp
push
mov
xchg
out
sub
hlt
fcmovu
fwait
xchg
xor
outsl
adc
add
or
jmp
ljmp
xchg
xchg
pop
and
adc
in
mov
test
add
and
sub
data16
in
mov
loope
cltd
jbe
lock
push
adc
sub
jmp
bound
loope
sbb
bound
push
icebp
sub
push
and
shrb
dec
push
xor
pop
scas
xor
addb
lret
icebp
mov
cmp
mov
sbb
push
in
and
call
mov
sub
add
std
push
add
cld
mov
push
cmp
jg
push
clc
mov
push
hlt
clc
push
jl
push
adc
adc
sti
lret
push
mov
ret
inc
dec
push
mov
clc
mov
sbb
push
xchg
add
push
lcall
pusha
mov
jo
movb
dec
add
leave
cmp
xchg
std
jp
add
mov
or
jno
mov
cli
xor
pop
lret
das
or
mov
cwtl
jo
ret
push
jge
xchg
xchg
add
mov
jg
loop
add
mov
ss
add
aam
pop
stc
sar
out
jnp
xchg
add
xchg
mov
cmp
add
xchg
push
fld
xchg
push
outsb
outsl
xchg
andl
fldl
jmp
dec
hlt
xchg
aas
push
jle
std
jno
fdecstp
mov
bound
jl
push
pop
xchg
or
push
xchg
or
jbe
sub
pop
pop
sbb
dec
imul
mov
rcrb
pop
lods
fninit
inc
add
mov
sbb
push
add
sbb
fnstcw
movsl
int
les
fs
cmc
jmp
mov
xlat
add
mov
and
add
das
mov
stc
pop
and
xchg
dec
fisttpl
lods
or
add
add
push
add
popa
or
mov
call
inc
and
and
and
jmp
aad
mov
popa
flds
sarl
gs
pusha
sub
jmp
and
les
cltd
jo
add
scas
aas
ret
js
and
sti
in
mov
sahf
call
mov
and
jbe
push
inc
jle
std
je
mov
push
inc
pop
adc
sbb
push
cmc
push
mov
mov
xor
call
adc
aam
aad
mov
enter
pop
pop
push
add
flds
add
leave
decl
dec
push
je
jge
jnp
mov
lods
adc
add
mov
test
sahf
loopne
sbb
ret
pop
int3
pushl
or
xor
cld
xchg
addb
jns
out
dec
in
xor
andb
add
push
xchg
lock
xor
xor
fwait
decl
jge
pxor
pop
jmp
lock
andb
rolb
fsubr
or
push
jmp
inc
and
sbb
js
pop
jbe
jmp
add
sbb
mov
pop
pushf
or
adc
negl
fstp
jmp
int
fucomi
js
bound
add
pop
bnd
scas
ljmp
or
xor
sub
add
and
flds
jae
scas
ljmp
fldcw
flds
ljmp
scas
gs
into
enter
in
je
cmpsb
in
sub
cmp
out
scas
icebp
lcall
pop
fsubr
mov
pop
out
fisubs
adc
cld
cld
jno
inc
jmp
add
xlat
add
rolb
mov
lods
cld
jb
shlb
flds
xor
scas
cld
out
inc
outsb
mov
repnz
popa
flds
rol
cld
into
aam
and
and
jmp
punpckhbw
rcll
sahf
sub
jecxz
xchg
cmpsb
lock
lea
cmp
add
push
incl
lods
jo
jbe
and
ret
add
push
pusha
data16
mov
xchg
dec
push
mov
shr
add
fs
jnp
les
push
in
dec
jae
std
pushl
and
adc
je
and
and
and
call
fxch
loopne
xlat
cmc
loopne
add
xchg
lock
mov
addr16
mov
push
sub
xchg
add
mov
ds
pushf
push
and
mov
test
inc
and
or
std
push
xor
das
adc
add
sbbl
std
fnstenv
pop
fnstenv
sbb
aaa
cmc
cld
xor
xor
enter
bound
into
add
fadds
or
imul
int
jbe
fsts
xor
cmpsl
pop
mov
sbb
jbe
xchg
xchg
jns
stos
fwait
jbe
xchg
cmp
jmp
stos
adc
xchg
roll
push
push
stos
or
jmp
cltd
loope
jbe
and
mov
repnz
ljmp
pop
movsl
sti
mov
bound
mov
addb
popf
xor
gs
mov
flds
jmp
neg
add
call
or
cld
into
in
stc
push
rcr
add
mov
sub
cld
cmpsb
fstpl
adc
mov
nop
jmp
imul
stos
cld
jb
inc
xchg
jmp
dec
adc
sti
ds
cld
bound
fcoml
cli
and
stos
cld
jmp
cvtps2pi
and
pop
call
and
cs
cld
call
fsubs
jb
and
mov
xchg
mov
dec
fldl
call
mov
and
cld
fsubs
add
inc
and
ret
or
jecxz
sbb
sti
pop
lds
mov
and
jle
and
jecxz
add
sti
jmp
adc
inc
jae
test
faddl
add
push
cld
jge
and
subl
aad
dec
cmp
inc
test
sub
mov
fstpt
sub
mov
lds
adc
cmp
xor
mov
add
lcall
into
fnstenv
xchg
test
sub
xor
outsl
sub
aas
bound
decl
mov
cwtl
aad
mov
mov
adc
pop
in
sbb
add
dec
icebp
out
dec
fsubl
add
popa
movsl
fsubs
ja
std
fisttpll
fsubr
add
jp
xchg
pop
ret
loope
fstpt
lahf
or
loope
jmp
and
gs
xchg
push
test
fldl2t
hlt
mov
std
cmc
jbe
std
sbb
test
lock
jne
sub
setb
fucomi
andb
pop
mov
shrl
add
adcl
sub
popl
xchg
cmp
out
and
es
push
inc
lds
lds
flds
sub
orl
arpl
add
cmpsb
pop
add
xchg
flds
push
cmc
mov
sar
mov
popa
fld1
push
cmp
test
pop
flds
aas
repz
and
sbb
pop
push
dec
lds
xor
data16
sub
push
jmp
flds
loope
or
add
popa
add
lret
push
rorl
sub
mov
dec
push
and
push
or
pop
dec
sbb
sbb
test
dec
push
and
mov
jnp
call
mov
mov
lea
xor
jae
incl
hlt
lods
and
rolb
fistl
add
adc
cmc
sbb
test
sbb
pop
icebp
xor
sbbb
inc
push
inc
and
dec
push
and
fimuls
and
sar
rorl
add
bound
int3
and
push
out
bound
and
jns
xor
jmp
mov
mov
push
xchg
aam
aad
add
dec
lret
loop
push
daa
leave
and
fldenv
jbe
or
pop
nop
ret
mov
add
jno
or
in
sub
and
bound
xor
add
xchg
add
call
in
shll
jle
outsb
ret
popa
bound
mov
dec
aad
push
inc
loop
mov
xor
pop
push
add
cltd
outsl
outsl
push
sub
sahf
or
add
fstps
roll
pop
es
mov
ficoml
sahf
sub
mov
ljmp
mov
mov
add
sub
jno
flds
mov
std
add
adc
dec
jle
mov
mov
push
loop
xor
push
imul
fstpl
push
or
popa
fld1
mov
movsl
cld
insb
movsl
notb
mov
in
adc
out
add
movsb
test
insl
fdivr
sub
or
or
dec
add
popa
mov
dec
lds
cmp
sbb
sub
mov
clc
scas
popf
pop
rcrl
test
notb
add
dec
add
cs
adc
aad
dec
pop
call
pop
pushf
jle
inc
addr16
mov
and
sub
xor
push
dec
int
xor
lds
aad
mov
in
pushf
jns
add
add
leave
pop
decb
lea
lods
std
decl
in
scas
aas
inc
add
mov
fucomp
movsb
stos
and
lea
mov
cmp
add
test
std
mov
xchg
int3
mov
loop
xchg
xchg
jb
jnp
fldcw
add
jnp
mov
mov
or
mov
add
xchg
push
sahf
pop
lea
bound
pop
popf
out
nop
inc
xchg
ljmp
test
jp
adc
sbb
adc
sub
enter
mov
sub
stc
cld
cmp
xchg
mov
xor
scas
sub
out
hlt
js
mov
mov
add
xchg
out
xchg
dec
push
xchg
jmp
jge
adc
pop
leave
push
lods
push
fsts
jle
lahf
popa
movl
fstl
cmp
iret
lods
xchg
movsl
pop
popa
fldl2t
add
fldl2t
inc
and
adc
fucomi
xor
fwait
cltd
mov
fldl2t
add
and
jl
ljmp
fstps
imul
add
push
pop
das
xor
jle
pop
sahf
xchg
int
flds
jmp
mov
add
pop
jmp
push
pushf
or
sahf
fadds
jmp
jbe
add
fcoml
pop
popa
flds
cltd
push
lret
mov
sub
or
inc
fildl
jmp
inc
or
sti
imul
adc
mov
xchg
lret
inc
jmp
mov
or
sbb
mov
and
jp
roll
cli
flds
mov
stc
and
aas
stc
cmp
pop
lcall
push
test
or
jg
mov
mov
xor
pop
lea
mov
std
je
test
loope
shlb
mov
cmpl
sti
incl
jnp
inc
and
push
push
and
dec
or
aad
and
mov
push
lret
gs
mov
mov
mov
mov
aam
mov
add
std
mov
inc
ds
mov
mov
nop
mov
aam
xor
add
lds
lea
cmp
add
mov
add
inc
sbb
pop
dec
das
or
scas
add
mov
jmp
sbb
jmp
lret
jg,pt
inc
bound
in
and
sbb
out
gs
std
xchg
ljmp
rorl
jmp
xor
add
inc
pushf
adc
adc
jbe
outsl
iret
pop
or
jns
xchg
orb
fldl2t
mov
das
pop
lea
mov
or
jno
or
outsl
add
cmpsb
pop
jae
sub
push
das
jmp
add
or
pop
jp
repnz
mov
lods
jne
adc
fcoms
and
into
stos
pushf
mov
push
int
loope
sahf
push
roll
ficoms
and
in
adc
or
pushf
cld
jle
std
and
out
and
std
mov
or
cmc
mulb
mov
pop
push
inc
add
sbb
or
notb
jne
cmp
or
mov
dec
or
or
pop
and
dec
adc
jmp
sarb
adc
jmp
or
std
adc
jl
push
pop
mov
lea
or
rcll
jl
jg
add
addl
adc
mov
aad
lock
sub
test
aam
add
jl
call
imulb
add
inc
cmp
dec
and
incl
mov
js
out
add
jmp
jb
cld
mov
add
cmp
scas
jae
jmp
add
bound
xchg
xrelease
or
rorb
filds
cmp
add
fld
js
aaa
adc
dec
jbe
aas
or
bound
shr
out
insb
mov
call
push
popf
mov
shlb
add
scas
call
inc
adc
sti
jbe
adc
fcomps
jbe
cwtl
nop
das
mov
inc
adc
data16
jb
sub
iret
fs
ror
std
fs
lcall
jb
mov
loopne
cwtl
ljmp
in
inc
jno
inc
add
pop
and
xchg
sbb
xlat
ret
aad
stos
lock
imul
lods
jnp
aad
add
sub
dec
add
mov
jmp
ret
popa
addb
adc
loop
add
cld
or
xchg
cld
ljmp
cwtl
pop
pusha
inc
fsts
bound
ficoms
filds
loope
scas
adc
test
mov
and
sub
jb
sub
cmp
addr16
int3
xchg
cmpsl
cmp
scas
xor
mov
jo
add
sub
jmp
add
loopne
xor
or
jmp
push
icebp
incl
out
adc
pushl
testl
cmp
mov
jo
enter
ds
jecxz
or
add
jae
push
mov
pop
les
mov
pop
pusha
shll
push
addb
clc
sbb
add
cmp
add
sbb
bound
mov
out
add
and
andl
mov
or
out
inc
cwtd
mov
or
popa
push
cmpl
mov
pop
scas
jg
int
pop
inc
pop
jmp
lret
shl
add
pop
ljmp
sub
iret
or
sub
push
xor
pop
jb
add
or
jae
imull
fldenv
mov
call
xor
xor
loop
add
jo
xor
pop
dec
sub
arpl
fimuls
jge
jmp
jecxz
jmp
jp
pop
or
daa
xor
xor
sbb
cld
lea
cmpsl
mov
lcall
or
pop
fstpt
pop
or
lods
shlb
fucomp
dec
popf
sub
add
cmp
mov
inc
add
mov
add
pop
arpl
sbb
inc
xchg
xlat
call
insb
push
or
jb
sahf
inc
mov
or
call
sahf
sub
shrl
scas
xor
lds
push
and
adc
push
adc
and
mov
jmp
loope
call
aaa
cltd
call
xchg
bound
or
popa
flds
add
stos
jns
mov
adc
push
xor
cmc
fsubs
neg
in
test
ret
push
mov
inc
push
rorl
and
scas
mov
std
jno
cs
jg
neg
shlb
inc
jmp
add
cmp
jne
pop
adc
cmp
and
or
add
or
sbb
or
pop
leave
xchg
cld
push
int3
nop
and
orb
xor
add
fadds
add
push
bound
pop
xchg
cwtl
jle
addl
add
ja
adc
or
add
jbe
dec
addb
xchg
cmp
arpl
pushf
daa
out
mov
xorb
mov
jbe
sbb
inc
push
sahf
or
incl
mov
push
rolb
push
inc
add
outsb
ja
loope
adc
lea
icebp
pop
fnstenv
stc
dec
loope
adc
dec
mov
leave
jmp
addb
jmp
fldcw
popa
bound
xchg
adc
jmp
cmp
add
cltd
std
pop
jecxz
add
out
cmc
push
pop
stos
xlat
cmpsb
pop
pop
pop
shl
add
cltd
mov
add
ficoml
add
fs
addb
mov
mov
adc
lahf
aad
insl
pop
xor
mov
fstps
fnop
stc
and
ljmp
gs
mov
shlb
icebp
jbe
popa
fidivs
push
ljmp
jl
flds
jb
mov
fsubs
mov
test
pushf
pop
dec
mov
xchg
pop
xchg
jmp
cltd
faddl
sub
or
imul
pop
jmp
jg
add
inc
fnsave
pop
sbb
filds
fstps
push
shr
push
add
outsl
inc
add
std
jb
jbe
push
call
jle
jne
les
std
ja
std
jb
in
push
call
aas
sbb
dec
je
add
xchg
dec
add
movsl
adc
pusha
xchg
or
std
jne
add
dec
or
int3
xchg
dec
mov
fildl
test
xchg
mov
fimull
fistl
incl
jle
fidivrl
enter
fisttpl
add
movsl
sbb
stos
jp
and
pop
jmp
xorb
stc
jb
mov
ror
mov
into
xor
xor
pop
sahf
add
sbbb
push
push
nop
bound
push
call
jl
pop
jb
adc
or
leave
pop
not
fiaddl
gs
mov
mov
clc
pop
push
add
pop
xor
fcmovnu
andl
jmp
iret
mov
pusha
mov
add
hlt
adc
jecxz
sbb
lret
scas
in
outsl
inc
cmp
out
add
cltd
jle
in
add
jmp
pop
xchg
fldl2t
pop
int
pop
push
sbb
pop
in
dec
push
rcll
and
fwait
inc
sub
pusha
sahf
pop
push
and
push
mov
mov
jle
andl
pop
mov
add
xlat
lcall
stos
and
jmp
xchg
enter
mov
mul
push
mov
mov
and
adc
repz
out
xchg
cld
lahf
pop
nop
andb
loope
cmpsb
fs
add
arpl
daa
loop
push
js
stos
adcb
out
mov
xchg
add
jecxz
cli
add
pop
out
not
cwtl
pop
mov
popa
addl
push
pop
add
cmp
jge
jo
dec
test
inc
add
push
jne
or
je
push
and
psubusb
add
or
add
aaa
cltd
cld
mov
jp
add
xchg
cld
pop
clc
add
mov
jne
ret
add
cmpsl
add
or
push
testl
xchg
xlat
je
lock
call
mov
ret
fwait
mov
enter
bound
clc
push
fstpt
mov
mov
jge
fld
clc
les
cmpb
cwtl
in
adc
add
arpl
or
arpl
repz
daa
lahf
aad
int
les
mov
mov
inc
push
jns
psubusw
pop
cmp
ds
dec
ja
xor
sbb
cmpsb
mov
pop
or
sbb
pop
fsubs
andb
scas
fsts
int
fcompl
cmp
add
mov
jmp
repz
pop
jmp
pop
das
jecxz
jno
cmpsb
testl
psadbw
test
call
cmp
sbb
jp
jno
iret
mov
jp
je
xor
jp
imul
cmpsb
testl
jmp
mov
fisubl
fstps
subb
or
cs
pop
rcrl
das
addr16
flds
push
xor
xchg
mov
or
xchg
mov
aad
fnstcw
push
test
flds
push
pusha
cs
pop
jnp
jmp
bound
push
icebp
xchg
add
cld
sahf
ss
push
xchg
inc
push
ret
or
jbe
inc
or
pop
aas
sub
push
aad
setnp
mov
sub
inc
jmp
add
test
scas
ljmp
js
aaa
cli
dec
fucomi
dec
and
std
out
cmp
daa
xchg
pop
leave
mov
inc
add
sub
scas
out
mov
mov
std
mov
jo
std
je
or
je
or
je
lahf
hlt
std
shll
mov
add
out
ljmp
std
std
decl
cltd
imul
gs
andb
mov
pop
jmp
ret
sub
inc
bound
sbb
cmp
std
inc
mov
cwtl
leave
xor
std
mov
gs
js
inc
and
or
push
adc
push
mov
pop
call
out
adc
dec
mov
outsl
add
lret
cld
aad
mov
out
ret
pop
std
loope
pop
add
mov
inc
inc
mov
fdivr
add
jo
jge
inc
or
pop
push
loope
xrelease
das
gs
mov
js
add
pop
push
movsl
imul
out
bound
mov
or
cwtl
fldl2t
nop
test
fldl2t
nop
mov
mov
ret
clc
xchg
call
ja
loope
fildl
dec
in
insb
mov
xor
pop
xor
outsb
maskmovq
add
shrb
jmp
jmp
fwait
shll
jnp
jmp
mov
pop
popa
pop
fdivrs
ret
popa
xchg
mov
sbb
push
dec
adcb
popa
push
icebp
fs
or
cltd
mulb
ret
out
xorl
das
fucomip
cwtl
push
sbb
icebp
in
daa
in
xchg
dec
mov
scas
test
std
xlat
ret
add
or
lret
inc
test
jmp
mov
dec
call
mov
insl
inc
ret
ret
mov
push
out
cmp
incl
dec
fmull
into
and
pop
mov
push
push
mov
test
in
inc
std
cli
push
inc
mov
push
faddl
add
rorl
popa
push
mov
or
decl
xlat
mov
jo
sar
jle
lret
bound
add
ljmp
bound
push
call
fstpt
test
jo
mov
les
pusha
pop
jo
mov
pop
or
bound
lret
shl
leave
prefetch
or
bound
mov
fldenv
sub
xor
add
ret
shll
jo
xchg
mov
je
xchg
pop
sub
int
jae
fnstcw
adc
inc
push
fchs
pop
in
icebp
sbb
pop
xor
popa
sbb
sbb
mov
mov
jns
fisubl
jmp
inc
dec
movsl
aaa
jnp
arpl
adc
sbb
shr
subb
out
xchg
push
test
leave
add
data16
fldl2t
mov
push
jecxz
pop
add
scas
lds
ret
mov
push
mov
imul
inc
push
add
adc
data16
sbb
lahf
call
sbb
push
fcoms
and
lahf
loopne
dec
call
mov
sub
pushf
mov
push
sub
jbe
mov
push
bound
fmuls
pop
and
test
repnz
mov
and
shrb
xchg
test
or
lret
jl
adc
sub
pop
dec
add
push
xchg
adc
xor
mov
mov
pop
dec
cld
add
shr
cmp
decl
roll
push
add
jl
aas
aad
add
push
mov
push
in
call
clc
fistps
cld
decl
xchg
cld
pushl
add
jg
lgs
inc
fcompl
adc
push
jae
push
fs
adc
fiaddl
call
jle
push
test
rolb
aad
add
add
xchg
cwtl
xchg
cs
sti
arpl
mov
xchg
mov
pop
jno
mov
xchg
add
rcll
mov
jmp
lret
outsl
stos
incl
jo
test
jo
mov
sub
mov
add
cmp
fisubrs
add
fldcw
cmpsb
jo
inc
clc
mov
xchg
mov
clc
mov
xchg
popa
jno
cmp
pop
es
mov
push
and
enter
in
popa
inc
sahf
jp
dec
lret
pop
mov
stos
or
inc
ljmp
adc
pop
int
inc
outsl
mov
fsts
lret
andb
jmp
mov
or
adc
popf
add
push
add
mov
adc
insb
int
aas
add
sarl
add
loop
jbe
in
rcrb
mov
les
sbbl
mov
dec
repnz
jmp
cmpsb
adc
lcall
add
loop
jbe
add
rcrb
push
pop
push
dec
lods
pop
test
jno
xchg
test
xchg
call
cld
insl
mov
gs
call
inc
sbb
pusha
jmp
inc
std
fsts
pop
pop
lock
call
push
outsb
inc
add
cmp
xchg
mov
dec
in
sbb
outsl
or
add
add
sub
mov
xor
addl
rorl
mov
dec
int
inc
scas
in
mov
mov
add
sbb
mov
adcl
jg
push
and
push
lea
aad
inc
bound
mov
lea
outsb
pop
inc
push
jmp
jo
sbb
lods
fistps
jl
rorb
jmp
imul
cltd
mov
lea
cwtl
cs
data16
pushw
mov
add
fwait
lods
lcall
testl
adc
adcl
add
bound
subl
insb
test
pop
daa
repnz
mov
incl
in
dec
movsb
or
adc
mov
jmp
adcl
iret
pop
dec
xor
jmp
mov
add
fldl2t
add
sbb
mov
fisttpll
xor
sbb
mov
push
stos
xchg
jns
sbb
mull
and
mov
add
bound
mov
data16
inc
aad
mov
outsl
scas
popa
add
jecxz
inc
loope
fnstsw
stos
jmp
mov
sbb
add
mov
cltd
jne
lods
daa
or
loopne
or
dec
in
mov
pop
stos
in
js
xor
outsb
ljmp
arpl
in
xor
jmp
add
cmp
imul
mov
jmp
popa
cmp
jo
mov
add
push
jbe
xor
test
or
add
lea
mulb
je
sub
add
push
adc
cld
cmpb
enter
shl
pop
movswl
cmp
mov
and
add
pop
push
dec
fldl
je
repz
pusha
sub
push
push
incb
mov
xor
or
xchg
mov
loopne
push
push
test
xchg
inc
imul
cmp
add
movsb
fs
adc
stos
cmpb
je
sti
mov
adc
mov
sub
and
enter
inc
je
stc
negl
inc
or
bound
in
loope
and
scas
in
sahf
adcb
jmp
in
cmpsb
adcb
jae
jmp
inc
add
add
insl
shlb
addb
out
jmp
fidivl
adcb
scas
lahf
fs
add
lcall
inc
std
aas
jae
fldcw
decb
andl
pop
ljmp
aam
fcoml
push
mov
dec
jmp
sbb
loopne
popa
adc
adc
jo
into
stos
lahf
in
jb
ljmp
fstl
call
fcmovu
xor
loop
inc
xlat
and
out
ja
in
stos
xor
dec
pop
in
sarl
test
add
in
mov
adcb
fcmovnu
pop
fisubl
pop
cli
call
push
ljmp
sub
add
jle
cmp
push
xchg
flds
out
xor
dec
int3
jmp
add
popa
sti
cmp
sub
enter
jmp
and
or
push
jo
pop
addb
bound
pusha
dec
divb
int
mov
pop
sub
loopne
sbb
adc
xor
lret
rclb
push
jae
fisttpll
cld
push
add
mov
pop
pop
mov
inc
dec
andb
es
inc
dec
pop
lds
sbb
jb
repz
or
jo
sti
xor
adc
add
jne
je
packsswb
or
test
aaa
xlat
andl
xchg
adc
xchg
cld
pop
sbb
inc
bound
roll
adc
jae
cmpb
bound
and
cmp
pop
and
test
xor
roll
addb
add
push
adc
and
push
jmp
mov
shll
xchg
ret
sahf
cmpb
bound
add
dec
xchg
pop
fcmove
xor
mov
inc
fldl2t
sbbl
enter
push
jno
clc
ret
xchg
adc
out
fsts
and
sbb
push
push
jne
sub
add
add
jno
fnstcw
ret
push
pop
sub
jp
lods
dec
xchg
loop
mov
movsl
add
in
movsl
add
sbb
jbe
or
into
sub
jne
inc
jmp
out
and
outsl
push
js
cmp
jno
clc
ret
aad
stos
fdivs
imul
or
aam
movl
add
fwait
pop
stos
loope
sbb
mov
xchg
jno
add
je
and
push
pop
sti
call
add
pop
push
int
icebp
popa
pop
jge
ss
je
jecxz
and
and
mov
sub
cmp
and
call
sub
add
and
test
add
xor
test
cld
push
add
xchg
adc
xchg
cld
addr16
jno
adc
jg
outsl
jae
ljmp
dec
cld
ret
ret
roll
repz
jge
popf
inc
dec
mov
out
inc
cld
call
push
pop
ret
push
push
and
xchg
aas
mov
adc
movsl
cmp
mov
adc
movsl
add
fmull
add
pop
jae
les
push
push
sub
repz
push
push
push
out
ljmp
inc
pop
jb
inc
bound
rcrl
lods
sbb
scas
and
cmp
mov
inc
jb
dec
adc
xchg
sar
outsb
sbb
mov
pop
jmp
cmovle
mov
mov
add
jmp
ret
mov
xor
clc
jmp
js
jae
sti
cmp
stos
sbb
stos
shll
dec
mov
dec
push
xor
loop
outsb
mov
inc
fs
dec
add
mov
pslld
jmp
outsb
subb
jmp
sub
test
aad
jp,pt
orb
out
and
lods
jecxz
jmp
fisubs
dec
decb
ljmp
ret
inc
jbe
cmpsl
cmp
jge
add
pop
jmp
scas
mov
mov
dec
punpckldq
fstpl
add
cltd
mov
out
add
jmp
adc
cmp
add
xor
test
insb
push
lods
mov
add
adc
flds
push
aad
cmpsb
data16
fwait
sub
mov
jecxz
jne
ljmp
call
fdivl
aad
cmp
jbe
jecxz
jne
mov
add
test
flds
adc
add
lea
add
jmp
mov
int3
js
jb
and
jo
add
jmp
test
jo
outsl
mov
jno
push
dec
jns
mov
aad
rorb
and
dec
addr16
and
inc
and
mov
dec
shll
lds
mov
mov
mov
cmc
add
mov
scas
pushf
and
into
fmull
vmptrld
add
icebp
jl
adc
add
or
add
cmc
add
dec
sub
daa
stos
in
std
sub
in
inc
push
inc
add
xchg
dec
adc
data16
arpl
std
bound
pop
adc
outsb
sar
imul
and
dec
xor
bound
jmp
add
andl
jne
push
cmp
pop
add
roll
and
dec
add
mov
ja
mov
inc
sahf
mov
decl
push
sbb
cltd
pop
pushf
adc
jnp
adc
subb
lds
arpl
stos
jle
lock
jl
cmpl
cmp
loope
sbb
cld
push
mov
dec
mov
insb
fldenv
xor
test
jp
sbb
rcl
or
ds
add
mov
pop
adc
fldl
movsl
nop
insl
mov
lcall
in
imul
rorl
cmpsl
sarb
cld
push
pop
push
add
push
sahf
ret
sbb
jmp
pusha
ret
popf
orb
das
xchg
pop
out
shlb
flds
jmp
mov
xor
bound
mov
jecxz
or
add
add
pop
nop
or
enter
dec
in
mov
adc
lcall
fdivrl
cmp
add
add
outsl
mov
sbbb
test
lahf
push
push
hlt
fadds
dec
roll
mov
cs
mov
sub
mov
jecxz
or
jne
jecxz
loopne
xor
adc
and
cmp
dec
or
and
scas
cmp
mov
cld
shl
inc
mov
xchg
call
jmp
lret
ss
xlat
cld
adc
jp
dec
push
xlat
decl
mov
sub
outsb
inc
xor
xor
mov
orb
xadd
xor
jmp
lea
add
lds
pusha
jmp
and
out
and
jp
stos
cld
test
inc
or
add
mov
pop
idivb
insl
fldcw
fldl2t
adc
pop
inc
in
fcomps
mov
jb
pop
cs
inc
push
pop
jns
fldcw
inc
mov
push
inc
jecxz
add
xlat
bound
jmp
add
inc
ljmp
or
add
ret
jle
mov
mov
jmp
dec
push
stc
outsb
movl
jecxz
and
repz
mov
out
daa
push
adc
adc
pop
pop
cmpsb
push
leave
insb
mov
sbb
std
mov
clc
mov
ljmp
aad
sbb
dec
jo
lds
or
cltd
add
xchg
pop
xchg
jmp
insb
mov
adc
in
sti
into
ljmp
aad
scas
push
mov
pop
rcr
mov
fisubrl
jge
insl
fnstenv
adc
add
sbb
dec
push
ret
adc
push
push
adcl
mov
dec
mov
adc
add
mov
sub
and
push
cli
mov
adc
or
sti
call
push
push
fdivs
add
pop
adc
push
jne
cmp
jecxz
inc
add
mov
push
push
jg
adc
add
mov
mov
adc
repnz
sbb
std
fdivrs
mov
out
jb
cld
add
adc
je
sub
adc
pop
sar
or
gs
aas
adc
jg
mov
xchg
ffree
pop
jb
push
fld
ds
popa
sar
fldcw
xor
mov
mov
mov
in
gs
mov
stos
andb
inc
adc
cltd
push
je
out
cmp
push
xchg
test
add
sbb
dec
sbb
mov
call
mov
sbb
mov
mov
jo
popa
push
movsb
pop
pop
sbb
push
fldl2t
xchg
in
in
loop
int
sbb
sbb
mov
leave
push
in
cli
dec
inc
int
add
pop
add
sahf
mov
fisttpl
ljmp
ja
inc
add
lret
fidivl
daa
mov
fldl2t
aam
dec
xor
aaa
inc
and
jecxz
jmp
mov
jp
popa
cld
jmp
jne
cld
fdivrl
add
and
inc
daa
gs
mov
jno
pop
popa
fnstcw
fs
ficomps
loope
in
fisubs
pushf
push
adc
lods
add
pop
cld
testb
push
je
mov
cmp
cli
jge
rcll
push
add
push
mov
mov
out
mov
pop
pop
sbb
pop
mov
ja
or
mov
cmp
inc
or
xchg
add
jnp
call
test
and
adcb
and
dec
sub
mov
aam
inc
aas
xor
out
js
lea
push
push
ljmp
adcl
or
xchg
add
ret
aad
dec
add
push
mov
xchg
shr
dec
dec
add
add
jne
insl
jg
mov
in
subb
adc
jns,pn
inc
push
inc
pusha
popa
mov
mov
jb
cmp
push
pusha
sar
loopne
or
and
xchg
dec
arpl
int
mov
enter
and
or
xchg
cmpsl
mov
data16
add
or
inc
xchg
dec
sbbb
popf
arpl
add
add
bound
dec
push
aad
jns
lahf
mov
jb
pop
mov
mov
push
cmp
mov
add
aam
enter
data16
add
in
aad
fcoml
pop
es
sub
fdivr
gs
jmp
lahf
lret
adc
sub
icebp
repnz
add
in
pop
mov
ljmp
in
add
ljmp
jno
es
fldcw
push
ds
add
xorb
insl
or
cli
flds
jmp
data16
scas
filds
jmp
pop
push
fwait
mov
add
dec
mov
fwait
pop
popa
flds
bound
call
scas
push
cli
insb
cmpsb
out
scas
pop
cmp
push
pop
push
sbb
jb
dec
add
popa
pop
shl
or
cld
pop
into
inc
jmp
popa
flds
bound
sbb
push
add
rolb
ljmp
test
pusha
flds
jmp
pop
into
sti
pop
push
aad
iret
arpl
pop
stc
fadds
push
jne
pusha
inc
mov
mov
adc
std
push
fwait
dec
icebp
test
sub
test
sub
call
or
jnp
sti
out
mov
aas
incl
int3
dec
ret
pop
jo
add
subl
push
mov
adc
call
xlat
les
push
inc
dec
push
inc
clc
mov
and
jae
and
add
ljmp
pop
add
dec
data16
lods
mov
add
sub
cmp
jae
out
std
pop
xorb
and
add
call
sbb
sub
lods
push
loop
add
cmp
shl
add
inc
add
adc
inc
jmp
xchg
cmp
mov
mov
xor
outsb
mov
movsl
dec
jecxz
int
adcl
scas
fwait
pop
jle
cltd
jmp
andb
jmp
or
shlb
pop
inc
mov
push
stos
or
mov
add
pop
lea
fnstenv
cmp
test
ljmp
pop
rcrl
inc
stos
andb
add
ljmp
jb
and
andl
add
add
popa
push
push
int
insl
pop
mov
pop
flds
ljmp
lea
insl
push
dec
lods
and
divl
pop
mov
lds
and
sbb
add
and
popa
flds
add
and
jmp
add
call
cld
and
sysexit
and
out
cmp
mov
jmp
aam
jge
imul
dec
adc
adc
inc
sub
sbb
sbb
sub
out
adcl
and
dec
inc
cmp
and
cmp
dec
call
mov
movl
mov
adc
add
xchg
dec
push
pop
mov
std
rcrb
and
movsl
call
xorb
adc
push
in
std
je
sbb
je
out
cld
scas
faddp
cld
xchg
out
push
adc
imul
add
add
fidivl
jae
out
mov
in
add
push
dec
aad
das
pop
xor
das
add
add
push
loopne
pop
lret
sub
es
push
adc
das
mov
mov
push
bound
add
bound
out
push
jg
data16
sbb
je
push
adc
fdivs
xor
pop
jnp
arpl
jmp
push
cmp
add
fs
fists
cmp
movsb
bound
fbld
mov
mov
inc
push
adc
pusha
mov
add
icebp
jo
adcl
add
fldl2t
mov
std
and
mov
cmp
or
adc
test
xor
mov
cmp
lret
loop
lods
inc
filds
fnstenv
shr
popf
int
movsl
ret
shlb
inc
sahf
aam
flds
xor
or
mov
pusha
inc
or
add
pop
flds
jb
inc
jbe
popa
flds
fidivl
pop
shl
and
mov
cli
inc
cltd
or
jmp
fldenv
into
shrl
and
xchg
sub
pusha
mov
cli
cmp
popa
cmpsb
lea
jp
push
add
enter
out
add
dec
mov
sub
out
push
push
ljmp
add
jle
sbb
xchg
inc
fisttpl
and
or
inc
and
or
and
dec
ret
push
int3
xchg
push
out
push
pushl
ss
adc
push
call
inc
movsl
jg
ss
cwtl
add
call
incl
sbb
and
ret
jnp
dec
and
and
fwait
cli
inc
add
arpl
shll
in
dec
inc
jecxz
nop
add
rcll
fwait
mov
jae
mov
mov
dec
cli
dec
xor
in
xor
aam
pop
xor
inc
jle
xor
pop
add
bound
into
mov
mov
call
cli
xchg
loop
test
add
add
ljmp
push
push
call
dec
push
cmc
mov
fldl2t
jle
pop
arpl
stc
stos
jmp
sub
jmp
arpl
xchg
pusha
sbb
inc
dec
scas
in
push
outsl
inc
ficomps
popf
or
pusha
mov
bound
sbb
and
cmp
push
jmp
inc
push
jecxz
mov
pop
push
mov
gs
inc
sahf
pop
pushw
call
pop
paddb
ja
andl
dec
mull
bound
in
dec
push
cld
pop
sub
and
add
add
insb
ret
std
mov
add
in
test
mov
push
xchg
xor
sti
pushf
fstl
cltd
xchg
sbb
cmp
cld
je
mov
psubsw
jne
push
or
cmp
fld1
or
add
push
add
mov
aad
pop
jp
add
cmp
or
sarb
pop
pop
adc
pop
or
add
and
sbb
dec
mov
and
into
add
out
aas
aad
clc
jle
jo
stc
xchg
jecxz
or
add
shll
aad
iret
arpl
jbe
lret
aam
test
or
mov
das
shlb
mov
inc
sbb
lea
imul
xchg
aas
add
sub
orl
lds
cmp
stc
sub
std
enter
lcall
daa
arpl
aad
xor
inc
add
imul
call
inc
ja
cli
and
cld
std
ret
sub
cmpsb
inc
add
sbb
pop
mov
add
jle
adc
xor
iret
push
pop
ljmp
add
outsb
sub
push
push
pop
push
sbb
push
xchg
push
ljmp
fs
cs
ljmp
push
outsl
sbb
ds
or
push
mov
aaa
adc
fldl2t
mov
pop
sub
fcoml
inc
sbb
mov
add
out
mov
add
out
sub
push
fs
out
fs
fs
out
mov
movl
mov
pop
push
bound
outsb
bound
jb
pop
pusha
mov
or
clc
loopne
sub
pusha
inc
or
mov
or
mov
pushf
outsb
test
add
shl
stos
push
bound
mov
jmp
in
jbe
inc
xchg
ss
jmp
push
fistl
insb
movsl
and
push
mov
push
xchg
lds
pop
add
xchg
push
xor
add
xor
push
mov
icebp
adc
dec
lea
pushf
les
add
leave
decb
mov
pop
push
pop
or
add
out
dec
push
push
addl
ljmp
std
adc
nop
xchg
or
lods
data16
incl
shlb
xchg
je
jle
clc
push
mov
hlt
push
shl
push
movl
inc
add
ja
adc
outsl
jns
mov
and
divb
in
dec
jp
aas
xchg
arpl
dec
jp
addr16
arpl
leave
jp
nop
jge
mov
inc
sub
adc
push
jmp
out
loopne
mov
sbb
add
inc
push
mov
inc
or
ljmp
pop
inc
push
jge
cmp
push
inc
jnp
add
jp
ds
jle
bound
fbld
xchg
mov
dec
pop
cmpsb
fistpll
rolb
sub
ss
outsb
cmp
pusha
push
loopne
pop
mov
sbb
adc
cmp
loopne
bound
loopne
push
mov
loopne
bound
adc
loope
mov
mov
call
mov
cltd
mov
xor
pop
dec
filds
xchg
shrb
add
cmp
arpl
testl
gs
lds
or
sbb
loope
pushl
stc
call
repnz
and
lds
fists
mov
push
mov
and
mov
dec
mov
dec
call
cli
add
dec
cmp
roll
xchg
inc
jmp
mov
adc
mov
and
test
fld1
imul
out
xchg
and
notl
cmp
mov
ljmp
add
ret
in
pop
push
je
and
mov
cmp
mov
cmp
add
mov
xchg
pop
cmpl
sub
jbe
push
jnp
fdivrl
xchg
add
je
xor
std
je
xor
std
je
ss
push
pop
ss
and
sbb
mov
sub
mov
cmp
bound
jge
jb
add
bound
push
in
mov
daa
in
test
arpl
xor
cs
push
stos
and
shrl
imul
iret
mov
sub
jp
call
pop
pop
test
push
fsts
and
mov
js
jb
js
out
fcmovnb
fidivs
add
scas
dec
sbb
imul
adc
xchg
flds
mov
scas
push
mov
pop
dec
mov
add
ljmp
icebp
rolb
cs
in
ret
int
fnstcw
ret
lds
clc
in
int
lret
xchg
xchg
shrl
fldenv
outsb
pop
data16
fsts
loop
or
jmp
add
dec
sbb
sub
dec
push
loopne
dec
push
loopne
dec
sbb
sub
cmp
std
loope
jecxz
add
pop
fnstcw
add
add
jecxz
movsl
sub
clc
sti
aad
clc
sti
mov
lret
inc
dec
ss
dec
cwtl
pop
push
jmp
jb
xor
sarl
daa
movsb
movsl
push
jb
movsb
mov
add
in
inc
jmp
mov
inc
jbe
inc
leave
xor
add
inc
cld
mov
xchg
push
in
scas
or
lcall
outsb
inc
jbe
xchg
or
fmull
std
decl
adc
jbe
in
pushl
rcrl
xlat
std
jne
std
outsl
or
jbe
ljmp
cld
std
pop
mov
add
loope
jne
mov
std
jne
std
outsl
adc
incl
ss
std
jo
loop
decb
dec
mov
in
xor
xor
sbb
push
push
std
std
test
ja
pushl
std
jne
std
outsl
adc
stos
or
xor
add
inc
hlt
mov
mov
xrelease
icebp
jbe
inc
dec
fld
outsb
test
mov
sahf
aam
push
xor
or
add
jle
rorb
out
fdivl
adc
mov
jns
call
or
or
insl
outsb
dec
dec
jmp
call
adc
hlt
call
mull
sbb
adc
jl
add
es
xor
sbb
add
scas
cmp
fldl2t
nop
sahf
std
loop
dec
cmc
and
lcall
inc
xor
data16
mov
std
in
and
xor
cwtl
push
movsb
sub
add
mov
lods
dec
add
inc
stc
rorl
int
mov
shr
bound
and
add
inc
jne
push
push
inc
int
test
push
je
clc
and
jmp
cld
add
popa
inc
push
and
or
std
inc
enter
stos
inc
jb
xor
add
mov
mov
mov
jne
roll
mov
jne
mov
jne
mov
call
sub
cmpsb
push
push
add
xchg
mov
and
inc
test
add
xor
aas
xor
push
rclb
mov
pop
je
jno
das
dec
jmp
adc
xchg
clc
mov
dec
ljmp
rorl
call
xor
in
scas
jnp
add
add
sub
and
sbb
icebp
test
insl
popa
inc
lea
cmp
inc
adc
adc
mov
push
lret
add
xchg
xchg
xchg
xlat
outsl
sub
addb
jo
ss
lods
cli
imul
add
out
xchg
or
or
cmp
data16
cmp
mov
sub
aad
add
jp
or
xor
pop
scas
pop
mov
and
push
add
fwait
test
cli
scas
sub
lock
lea
mov
ret
mov
or
pop
add
daa
and
pop
adc
pop
fstps
xchg
add
jge
clc
add
stos
cwtl
sbb
sbb
pop
inc
pop
shrl
xchg
sub
lret
mov
loope
movb
test
fnsave
xchg
cmc
mov
xlat
add
push
cmpsb
out
push
das
cwtl
pop
xor
out
inc
outsl
enter
inc
outsl
push
addr16
fnstcw
mov
mov
add
test
out
jne
add
mov
mov
mov
jmp
mov
and
jno
test
flds
in
popa
flds
roll
ljmp
repz
and
adc
sbb
push
lret
xchg
push
sbb
loope
and
popa
lds
pop
rcll
in
push
dec
lds
cmp
fs
call
bound
test
cli
call
dec
sahf
push
jb
movsb
mov
add
in
add
scas
mov
icebp
xlat
pop
push
push
xchg
push
push
mov
xor
in
cmpl
push
subl
inc
push
lcall
data16
push
mov
push
push
mov
add
push
jge
aaa
push
jmp
test
adc
sbb
jo
push
pushf
popa
and
add
push
lret
call
inc
sub
adc
in
rolb
inc
clc
scas
push
adc
or
out
arpl
add
cmc
xchg
jp
mov
test
dec
call
call
loop
pop
add
add
scas
mov
fnstcw
lcall
jae
addr16
pop
cmp
jae
push
xchg
and
mov
xchg
pop
stc
xor
paddw
mov
in
inc
test
inc
mov
aas
jae
out
xchg
and
fldenv
xchg
adcl
or
inc
xchg
cli
xchg
inc
xchg
repnz
inc
xchg
cwtl
mov
cmp
jmp
adc
ret
xchg
outsb
dec
enter
add
fucompp
mov
mov
test
cmp
jmp
add
xchg
int
loopne
cmc
or
or
test
sahf
cmc
stc
mov
push
dec
nop
cs
jg
fldl2t
add
xlat
add
repnz
inc
jo
dec
add
popa
mov
push
dec
push
sarl
inc
pop
flds
bound
xor
xchg
pop
jne,pt
mov
jne
mov
jne
adc
jne
adc
jne
or
mov
mov
icebp
xchg
data16
jle
push
ret
pop
int
jg
add
and
jb
clc
adc
cmpsl
add
loop
jne
sti
sbb
push
les
xchg
dec
lea
nopl
push
shll
std
je
jae
inc
scas
sbb
add
dec
jne
stos
push
stc
add
dec
std
je
dec
xchg
dec
mov
data16
outsb
insl
mov
dec
inc
or
xlat
sti
decl
imul
cmc
add
xlat
xor
nop
adc
inc
xchg
les
push
pop
ja
mov
mov
insb
fcompl
fnstenv
jmp
fcompl
jmp
insb
fsubrl
xlat
je
sbb
test
and
lods
leave
outsl
fstpt
mov
jmp
mov
add
bound
add
out
xor
add
hlt
push
adc
scas
cld
out
ror
dec
jmp
jnp
orl
xor
addl
add
repz
add
mov
loopne
jmp
repz
mov
lea
fldcw
dec
cs
lea
repnz
stc
jmp
add
ss
cmp
jmp
int
lret
movl
fidivl
sbb
cltd
jmp
dec
or
inc
sub
pop
rolb
lea
loopne
ss
scas
rcl
dec
mov
int
ss
lds
es
lds
push
scas
lds
mov
sti
cmc
sbb
inc
push
pop
push
mov
es
push
sbb
cld
ds
push
cltd
insb
lods
and
push
lods
and
dec
lods
and
divb
popf
addb
cmp
jns
cmpsl
call
sub
call
and
mov
push
aad
sbb
aad
inc
jmp
je
dec
sbb
scas
push
sbb
jmp
adc
sbb
xor
add
xor
incb
sbb
sti
imul
sar
cmp
incb
sbb
mov
je
add
imul
and
scas
imul
fdivrp
dec
iret
mov
in
cli
push
push
adc
cwtl
imul
std
mov
sub
je
and
data16
push
cld
sarl
fisttpl
and
mov
rol
add
jnp
xchg
cmp
je
popa
stos
xchg
pop
fnstcw
mov
adc
jae
xchg
mov
in
in
push
mov
les
je
mov
mov
add
ftst
adc
imul
fisttps
std
jo
push
sub
aas
adc
push
fstps
imul
inc
cmc
or
mov
adc
sub
ss
adc
sbb
add
aad
scas
add
add
xchg
inc
mov
xchg
pop
std
rcll
jmp
lods
or
jge
sub
cwtl
xlat
jmp
scas
mov
adc
xchg
or
push
pop
sub
add
inc
xchg
sub
jecxz
fstps
mov
movsb
icebp
fs
into
sbb
mov
lods
cmp
mov
mov
jne
inc
fstp
sbb
cld
add
ds
cld
insb
sbb
push
push
or
sub
inc
push
sti
dec
jecxz
in
cltd
or
shlb
cwtl
test
popa
pop
jns
add
xlat
loop
in
rorb
push
jno
inc
std
rorl
dec
fs
out
xchg
push
ss
addl
adc
mov
mov
mov
xchg
std
push
push
sub
dec
aad
call
mov
in
pop
enter
insl
jg
adc
sbb
test
xor
adc
pop
inc
in
outsb
std
roll
push
test
std
push
pop
push
lock
pop
sub
push
ljmp
inc
pop
push
cwtl
or
push
or
lock
push
push
test
addl
rorl
les
push
and
xor
aad
push
cmp
cld
cmp
lret
adc
fildl
movsl
addb
inc
test
dec
xchg
mov
stos
dec
push
daa
add
sarl
arpl
add
test
xchg
adc
dec
sarb
imul
mov
movsb
mov
mov
mov
adc
movsl
inc
push
sbb
std
filds
xor
shlb
std
insl
popf
sub
mov
xor
push
xor
inc
mov
adc
pusha
and
loopne
jecxz
insl
xor
mov
nop
xchg
lds
jle
inc
cmp
fstpl
adc
in
mov
xchg
sub
jbe
popf
jmp
xchg
out
sbb
fsubr
add
mov
fnstcw
insl
sbb
call
jmp
mov
testb
add
pusha
leave
add
sub
jmp
sub
call
push
xor
ljmp
lret
shrl
or
das
cld
jmp
pop
push
shl
lcall
loop
xor
stc
les
dec
pop
jg
popa
pop
shl
cmp
pop
in
cmc
loop
xor
mov
les
popa
pop
shl
add
in
in
lahf
cmp
movsl
inc
add
dec
orb
mov
in
outsl
pop
dec
cmp
push
aaa
cmpb
jg
dec
popa
movsl
add
sub
mov
jne
cmp
pop
orb
jg
cld
pusha
lea
sti
fildl
dec
inc
mov
aam
cmp
jg
push
fs
icebp
js
inc
mov
fstpt
divb
in
mov
stos
jp
mov
fstpt
bound
cmpb
dec
xor
iret
jecxz
add
jbe
jnp
mov
jle,pn
inc
sbb
and
faddl
dec
lcall
cmpsl
jecxz
add
push
xor
push
mov
inc
add
arpl
lcall
cwtl
push
rorb
or
or
jmp
call
cmp
lods
add
mov
rcl
push
das
std
and
popa
jmp
ror
add
out
or
sub
fsubrl
loope
add
dec
leave
pop
inc
movsb
xchg
and
and
mov
mov
adc
sbb
fldl2t
shrb
bound
js
push
ljmp
lock
loope
ljmp
repnz
mov
fldl2t
xchg
push
mov
in
add
push
loope
in
add
dec
add
popa
pop
rcrl
fs
jmp
gs
inc
jmp
int3
mov
lea
flds
jmp
dec
pop
stc
rcr
push
sbb
xchg
jmp
popa
faddl
jl
xchg
outsw
mov
adc
fsts
inc
jmp
add
sub
imul
in
or
add
add
push
adc
aas
xchg
je
cmp
jmp
pushl
adc
les
ret
imul
push
mov
mov
nop
mov
or
mov
cld
pop
dec
sti
push
mov
or
dec
jne
clc
cmp
addl
loope
je
fildll
sub
in
fdivrp
test
pop
pop
lea
xor
fstl
push
push
pop
xlat
ficoms
ds
je
bound
nop
mov
sbb
inc
or
inc
jmp
jle
mov
ss
lock
xor
mov
int
jl
idivb
outsl
push
repnz
pop
sbb
lods
inc
jl
cmp
pop
push
mov
mov
jge
xchg
aad
jmp
loopne
loopne
fiadds
or
add
push
mov
das
jmp
xchg
push
das
andl
stos
cmpsb
sbb
jae
mov
test
mov
ficompl
in
popf
or
inc
mov
fsubr
jp
cmc
aad
mov
push
cmc
cmc
jg
movsl
fistps
adc
adc
mov
test
pop
imul
pushf
add
add
test
inc
push
fldenv
mov
pop
mov
pop
movsl
int
ljmp
out
xchg
loopne
mov
xchg
pop
add
jle
in
push
push
push
out
repz
sbb
ja
gs
sub
lods
pop
mov
aam
movl
push
or
inc
data16
fimull
mov
mov
add
sub
and
and
addl
in
push
sbb
jp
xlat
leave
xchg
bound
adc
scas
mov
sbb
xchg
bound
movsl
imul
punpckldq
jg
add
sub
enter
push
pop
jnp
sti
mov
or
sub
mov
or
push
mov
not
sbb
pop
pop
jns
add
mov
jmp
mov
pop
or
out
push
mov
add
ss
xor
movsb
lret
xor
in
and
mov
fcmovu
ljmp
pop
ret
dec
mov
minps
sbb
faddl
push
rcll
je
testb
sub
adc
add
cli
push
mov
outsl
pop
adc
sbb
scas
add
addr16
dec
lret
jl
push
push
scas
mov
out
test
sti
mov
pop
add
xor
mov
loope
std
popf
inc
add
cmpsb
and
fisubrs
xor
add
lods
sub
imul
jns
pop
inc
jns
push
ds
std
mov
in
push
jo
add
and
jnp
sub
push
mov
or
add
out
xchg
or
daa
xchg
mov
fldl2t
add
rcrl
jmp
xchg
add
es
and
in
fcmovnbe
inc
leave
add
es
rep
cltd
jmp
add
es
inc
add
xchg
cmpb
scas
das
mov
jmp
mov
mov
dec
push
xchg
jno
leave
addr16
outsb
inc
stos
pop
sub
and
add
in
lods
add
shll
scas
mov
jmp
cmpb
dec
int
push
xchg
lds
xchg
and
pop
sub
in
and
fs
lods
sub
push
es
jmp
ja
lods
dec
popa
flds
mov
xchg
aaa
xor
xor
push
jmp
jae
test
or
fldenv
in
xor
mov
or
add
std
and
sub
std
adc
adcb
or
add
movsl
inc
or
inc
add
add
inc
pop
and
xor
pop
and
test
add
in
dec
dec
and
lea
jnp
mov
jnp
push
push
repz
inc
mov
bswap
jnp
add
dec
sti
decl
std
adc
add
xor
xor
in
add
add
mov
call
xor
or
sub
jno
and
std
sub
loop
adc
jno
or
xor
add
ds
sbb
bound
or
lret
mov
add
xor
flds
add
lret
sbb
push
jb
mov
stc
jae
dec
pop
std
ja
cmovo
inc
and
fldcw
mov
sub
xchg
js
icebp
ret
std
adc
and
lret
gs
jmp
mov
scas
lret
mov
std
sub
sub
sub
scas
jmp
enter
mov
inc
bound
insb
push
inc
cmc
fwait
jmp
sub
add
and
js
stc
mov
push
add
or
mov
test
shrl
add
scas
and
sbb
add
std
and
push
and
or
push
cltd
add
pop
inc
add
ds
xchg
jmp
rcrl
cmp
xchg
and
je
push
sub
les
inc
jle
push
loope
in
xchg
adc
mov
and
bound
or
mov
and
icebp
bound
andb
movsl
and
imul
add
mov
jne
dec
les
and
xchg
call
call
pushl
sbb
mov
lea
push
jne
inc
sti
xor
daa
fsubl
std
jne
push
aam
push
leave
std
jne
pop
addl
mov
inc
add
and
daa
je
xor
dec
add
push
mov
jne
push
les
pop
outsl
or
aad
call
adc
pop
pop
mov
hlt
or
je
and
add
xchg
and
xor
jnp
incl
lds
add
adc
add
xchg
rclb
and
or
testb
out
jns
lret
insl
add
bound
xorl
cwtl
pop
out
sti
out
adc
cld
aad
or
lds
mov
dec
cld
mov
push
ljmp
pusha
add
add
cmc
adc
int3
xor
add
fdivrs
pop
sbb
je
adc
test
add
xor
mov
movsb
in
addr16
sub
jmp
jmp
fucompp
add
xchg
in
and
xor
mov
fldl2t
xchg
movsl
sbb
data16
movsb
xor
mov
add
fsts
xchg
adc
push
repz
push
hlt
imul
fwait
add
push
sub
mov
mov
sbb
add
fwait
push
cld
jmp
popa
push
rcll
sbb
adc
mov
jne
testb
bound
jmp
in
sbb
push
bound
or
outsl
push
xor
stos
or
xor
and
flds
call
and
and
push
repnz
fistpl
pushf
test
addr16
or
scas
mov
jmp
decl
and
jp
push
pusha
adc
add
into
call
mov
pop
cmp
add
mov
hlt
addl
loopne
push
jge
mov
pop
cld
xchg
addl
rclb
and
ret
inc
cmp
mov
jns
add
inc
and
dec
pop
and
dec
pop
and
and
lret
fadds
adc
adc
cmp
mov
add
mov
fisttps
in
and
xor
sbbl
mov
test
cmpl
jb
mov
in
cli
bound
call
mov
lods
fidivl
jp
ljmp
sub
inc
movsl
cmp
ret
sahf
into
and
je
add
xchg
movb
lret
aad
fistl
in
and
jge
and
fsts
add
fucompp
mov
sbb
jge
je
bound
orb
and
pop
movsl
mov
mov
es
cmp
test
test
and
pop
lock
outsl
dec
inc
leave
shrl
stos
test
adc
add
fldcw
dec
push
and
fnstsw
cltd
jmp
fnstcw
xor
movsw
or
jg
jmp
leave
fnstenv
fisubl
lret
popa
flds
jmp
jle
loope
adc
sti
fsub
leave
inc
jmp
mov
push
push
push
sbb
gs
cltd
add
cmc
sbb
lods
xor
jmp
fbstp
pop
stos
scas
adcl
mov
pop
mov
cld
insb
and
inc
add
scas
mov
mov
fwait
cmc
je
dec
int
sbb
cld
pushl
es
xchg
xor
and
das
dec
int3
flds
jmp
lcall
in
xchg
add
add
sbb
mov
jae
jp
cmp
call
adc
mov
adc
cmp
je
lods
mov
sbb
cwtl
adc
fldl
add
ret
mov
and
stc
sbb
bound
sbb
and
mov
add
cmp
popf
mov
ss
adc
jo
insl
mov
xchg
push
out
mov
fimuls
push
push
mov
add
add
push
subps
pop
nop
lret
mov
cli
mov
xor
jg
daa
shl
add
loop
cmp
mov
sbbb
imul
or
fld
and
loop
jp
data16
lods
and
cmpsl
mov
pop
aas
xchg
and
fstpl
jmp
mov
sarl
pop
mov
pop
ret
pop
add
and
jno
fldl2t
andl
rolb
sub
out
ja
cmp
and
popa
lds
push
inc
fistpl
jg
fidivrs
mov
lds
add
sub
minps
add
in
repnz
pop
sbb
jne
sbb
add
arpl
enter
ret
in
fsts
pop
pop
lds
mov
mov
push
lahf
push
pusha
notl
into
sti
ss
jne
mov
jg
movsl
inc
jmp
and
mov
push
fnsave
add
popa
lahf
add
add
sub
push
jmp
mov
sti
cld
jno
inc
jmp
and
mov
cmp
aaa
add
fiaddl
jne
leave
into
mov
jo
cmc
icebp
inc
sahf
and
cltd
pop
push
and
add
inc
or
and
div
and
nop
mov
add
add
jae
mov
mov
cmp
mov
pop
pop
mov
loop
mov
add
push
sar
in
pop
fildl
add
popa
jmp
xabort
incl
jp
flds
jmp
push
mov
call
fiadds
in
arpl
add
in
cmc
sti
lds
inc
inc
push
imul
dec
ret
lret
push
arpl
pop
adc
xor
push
push
mov
call
faddp
js
fisttps
out
iret
add
aam
dec
push
mov
push
dec
flds
gs
pop
mov
push
jle
jae
rolb
mov
loopne
bound
add
fldcw
es
or
mov
popf
rcll
sahf
sar
adc
repnz
and
inc
bound
js
enter
pusha
pusha
lods
push
sub
pusha
inc
into
sbb
call
push
pop
flds
data16
mov
bound
repz
lcall
pusha
insl
and
sub
sbb
adc
popf
sbb
jmp
jg
cmp
mov
adc
stos
push
push
andl
sti
cld
jge
inc
jmp
push
subl
jbe
bound
adc
out
adc
pop
pop
xchg
lock
je
adc
call
cs
add
fcoml
negl
lahf
cld
out
and
push
arpl
xchg
js
jo
pusha
and
test
xchg
jg
or
hlt
xor
or
jne
cmp
hlt
add
pop
mov
cld
sub
lret
cmp
fadds
jo
mov
in
xor
add
lret
aad
call
inc
push
jo
cmp
bound
dec
fmull
add
sbb
add
add
stos
push
push
fcompp
sti
decl
adcl
xchg
int
adc
bound
fs
add
and
xor
bnd
jle
fmull
add
test
scas
add
lods
dec
and
repz
std
adc
sub
ja
mov
sbb
ret
popa
add
add
out
sub
add
jb
int
outsl
sar
lods
jbe
jb
sub
mov
adc
cmpsl
roll
ds
mov
push
imul
adc
push
sub
fs
daa
jle
je
xchg
mov
fucompp
xchg
test
pop
push
pop
sub
cmp
cs
scas
fcoms
sub
xchg
test
sbb
js
mov
add
sbb
and
pushf
int
jmp
lds
pop
test
pop
loop
addb
mov
mov
add
or
inc
mov
add
adc
jmp
jmp
sub
call
sub
push
xchg
test
mov
jno
pop
bound
mov
adc
data16
sub
loope
pusha
inc
add
je
add
pop
cltd
or
dec
lcall
inc
pusha
inc
lds
mov
push
fdivl
fldl
push
pop
lods
fnsave
fmulp
cltd
or
or
or
xchg
and
add
std
aad
in
xchg
adc
lods
cwtl
or
out
mov
add
enter
pop
mov
call
xchg
into
add
popl
pop
sub
mov
pop
pop
jb
push
mov
fildl
add
cmpsl
push
mov
adc
add
ret
aam
inc
add
aad
mov
add
int
inc
mov
lcall
bound
adc
cld
fidivrs
sub
add
subb
inc
bound
push
std
ja
adc
push
lahf
pop
mov
add
xor
call
fidivl
mulb
jno
bound
jno
mov
adc
add
loopw
inc
bound
jno
cli
out
mov
jae
insb
jg
and
mov
add
cmc
pop
jae
add
adc
add
or
cmp
cmp
add
or
inc
addr16
or
jmp
dec
sbb
xchg
jle
pop
dec
in
in
push
push
fnstenv
cmp
jmp
int
loope
jne
jae
add
pusha
fldl2t
pop
pusha
lods
push
into
add
ljmp
xchg
jmp
jmp
or
mov
movsl
pop
outsb
pop
cli
fsubr
add
stos
cmp
jmp
add
pushf
lds
scas
in
or
mov
mov
push
push
jb
adc
push
dec
pop
and
lea
jb
pop
popa
pop
push
lds
mov
enter
call
push
mov
jmp
inc
test
add
data16
pusha
mov
mov
cli
or
shrb
pop
ror
gs
and
ficoml
call
xor
out
push
add
gs
mov
mov
and
inc
cltd
and
jnp
pmuludq
mov
es
mov
dec
je
into
je
ret
jnp
movb
adc
daa
call
inc
and
aad
push
test
sti
ljmp
sarb
sar
mov
add
xchg
pushf
add
aad
push
stos
add
stos
add
cmpb
scas
movsl
std
adc
add
mov
mov
out
mov
xchg
decl
ja
or
bound
and
add
std
out
sbb
jp
sar
jl
jae
bound
jle
add
bound
adc
inc
add
mov
sbb
fildll
loop
add
shrb
ss
jmp
pusha
arpl
mov
jbe
or
xlat
mov
dec
xor
pop
xor
cmc
xor
jmp
jp
mov
outsb
inc
jle
pusha
aas
fs
and
push
stos
stc
ficompl
jecxz
sbb
add
in
std
in
push
mov
loope
mov
outsl
pop
adc
outsl
pop
dec
out
or
add
mov
sub
push
out
push
lods
inc
lods
cmpsb
jnp,pt
cmpsb
cmpsb
push
jmp
data16
pop
inc
xchg
scas
adc
xchg
add
lea
add
dec
mov
loopne
or
xchg
sub
call
inc
pop
shl
out
call
outsb
pusha
jne
data16
call
add
pop
xor
call
popa
push
jmp
int
pop
out
fidivs
jae
jno
movsb
jg
mov
push
cld
jmp
pop
flds
out
or
jmp
aas
fimull
add
mov
jb
cmc
inc
cmp
fiaddl
add
add
add
test
or
add
fcomps
push
pop
cmpb
inc
xchg
xchg
icebp
stos
loope
jge
and
ret
pop
jge
cmp
push
jecxz
sbb
cltd
and
gs
and
iret
sbb
add
aas
stos
xchg
jmp
sbb
in
addl
and
cs
cmp
push
lea
or
push
mov
aam
push
add
sub
push
and
add
mov
outsb
imul
lock
mov
and
ja
inc
out
add
cmp
sub
sub
and
pop
push
ja
xchg
flds
mov
mov
and
push
sub
outsl
sbb
fisttps
xor
adc
sbb
hlt
cmp
inc
fldcw
pop
pop
aam
loope
shl
notb
sub
jp
in
jns
lret
add
xlat
loop
mov
push
adc
jecxz
in
xor
idiv
or
les
push
inc
leave
je
ds
push
mov
fucompp
mov
mov
repnz
mov
mov
add
in
push
push
jmp
fidivl
jecxz
adc
faddl
out
fiaddl
add
sti
push
cmp
lea
mov
cld
insb
mov
mov
or
jae
shll
sti
sbb
fldenv
rclb
lea
cmp
jb
sub
mov
and
pop
repnz
stc
cmp
inc
push
jbe
jmp
mov
sbb
inc
pop
in
xchg
je
push
add
push
mov
icebp
push
pushl
jnp
inc
sti
pop
rorb
test
movb
add
std
adc
inc
sbb
mov
xchg
lods
cli
add
jne
rcrl
push
fiaddl
xor
mov
hlt
add
dec
incl
push
aas
fcompl
or
jnp
or
dec
inc
push
dec
nop
shrb
cld
cmp
adc
push
loopne
lret
jmp
and
loope
out
cmp
mov
inc
loope
ftst
xor
mov
mov
std
add
dec
or
loope
jmp
popa
mov
test
cld
lock
xor
es
je
fiaddl
inc
insb
jecxz
pop
stos
xor
jecxz
ud0
xor
cltd
inc
cmp
xlat
dec
and
jmp
add
pop
jle
loope
cltd
mov
mov
mov
mov
mov
lods
mov
ja
add
gs
mov
add
pushf
daa
fucompp
add
xchg
add
add
popf
add
fs
dec
jle
push
fucompp
add
adc
add
out
cmpsb
add
inc
sub
fs
inc
mov
jmp
lock
mov
ljmp
xchg
add
in
or
addr16
jmp
rcrb
and
rcrb
and
repnz
and
ficomps
and
out
fwait
and
aam
fwait
sub
inc
add
popa
ja
out
repnz
push
sar
cmpsb
ljmp
sub
adc
jb
pop
out
out
add
sbb
jmp
leave
sti
jmp
jbe
adc
bound
mov
xchg
mov
jmp
rcll
lret
pop
pop
xor
mov
dec
dec
and
enter
or
sbbb
jnp
aam
dec
pop
mov
inc
mov
push
xor
push
push
add
adc
xchg
mov
push
mov
leave
xchg
dec
push
jae
popf
inc
jnp
std
push
stos
push
mov
jl
movsl
or
or
and
jnp
push
mov
scas
dec
cmpsl
xor
inc
fstl
mov
inc
add
sub
mov
or
mov
mov
lods
out
das
or
stos
sub
pop
jae
add
mov
sub
jne
cld
fstl
xchg
nop
mov
loope
fisttpll
jecxz
jmp
stos
sub
fwait
arpl
bound
inc
and
sbb
aas
bound
and
pop
fs
fldl2t
xchg
mov
adc
cltd
fsubl
lret
sbb
sbb
add
sbb
mov
or
inc
fstl
lret
jg
jmp
mov
mov
scas
mov
xchg
shl
in
jno
pop
leave
std
addr16
mov
cltd
popa
pop
fisttpll
loope
jo
repz
bound
add
xchg
lds
ljmp
mov
aam
out
cmp
adc
rcll
mov
mov
fdivp
cwtl
add
nop
shl
repz
add
sbb
push
push
lock
vpminsw
lret
push
dec
int
icebp
jbe
xchg
call
bound
mov
stos
fwait
mov
mov
sti
adc
lea
les
adc
test
mov
rolb
adc
add
jnp
jg
add
pop
lret
xlat
fistpl
jnp
push
mov
dec
xlat
mov
shr
jle
pop
lea
xor
lds
push
and
add
cmpb
adc
or
cmp
cmp
dec
lea
and
add
sbb
add
lret
dec
push
in
cmpsb
xchg
add
push
aad
push
jbe
cvttps2pi
aas
add
xor
dec
addb
push
xor
movsb
call
or
cmp
jmp
or
scas
xchg
dec
mov
icebp
fxch
in
adc
mov
fsubrs
frndint
add
scas
push
or
stc
dec
call
sbb
in
cmc
mov
fdivs
or
dec
in
pop
push
and
sbb
jle
or
fisttpl
mov
add
cli
hlt
mov
cltd
jmp
fcoms
mov
test
psubb
fnstcw
outsl
xchg
mov
out
sub
sbb
or
add
test
stc
lcall
sbb
or
mov
mov
in
ljmp
add
sbb
loop
jmp
ja
outsb
push
inc
leave
fs
jno
push
data16
cmp
add
call
jbe
adc
xchg
scas
popa
dec
icebp
mov
fnstenv
sbb
test
sub
outsb
jae
push
test
jecxz
je
call
fucomi
stos
xor
sti
jb
pop
fdivrs
xchg
in
xor
sti
push
xor
add
data16
call
sub
push
inc
and
add
in
frstor
xchg
notb
add
push
adc
push
cmpsl
inc
dec
into
imul
inc
enter
decl
pop
mov
push
hlt
call
jg
hlt
cld
adc
rorb
decl
adc
vunpckhpd
pop
std
mov
ret
mov
fistl
fmul
out
into
test
dec
mov
repz
add
and
fildl
add
and
jb
and
bound
in
jmp
rolb
add
sbbl
add
inc
neg
sub
cld
out
jl
and
add
imul
push
rolb
adc
jmp
lock
addb
add
scas
xor
sahf
stos
das
std
push
call
jmp
jb
inc
push
xchg
dec
and
push
xchg
push
scas
sub
xor
cmp
sub
add
jmp
sbb
fadds
xor
hlt
out
cltd
jmp
jle
xchg
and
inc
sbb
cmpsb
or
call
popl
mov
call
cwtl
repnz
push
pop
push
fsubr
add
loope
fdivrp
adc
jmp
into
test
pop
jmp
fldl2t
mov
mov
je
jle
mov
jmp
sub
loope
jge
ficompl
sub
arpl
and
popa
shll
sbb
stos
mov
in
test
stos
repnz
js
inc
add
add
xchg
test
cmp
add
pop
leave
jbe
xchg
andl
cs
je
aad
mov
mov
sti
ds
call
movsl
xor
xor
pop
divb
scas
fld1
add
pop
std
decl
pop
inc
adc
xchg
add
mov
xlat
add
mov
inc
mov
mov
icebp
dec
or
je
xchg
push
cld
lock
adc
xchg
lret
adc
test
adc
mov
inc
fdivs
adc
lock
cmp
jb
imul
fwait
enter
std
adc
push
jo
in
sysenter
adc
bound
xor
push
jnp
loope
sti
cmpb
push
xchg
ja
xor
test
jae
test
xor
pop
add
rolb
mov
mov
sub
pusha
jge
jae
pop
pop
arpl
jge
fbstp
push
out
mov
push
clc
std
cmp
dec
mov
les
ja
out
into
sbb
call
push
mov
xchg
push
cmp
xlat
fsubs
rcrl
pop
sbb
push
add
push
repnz
int3
loopne
jne
mov
test
add
gs
popfw
mov
sahf
add
imul
lods
inc
add
adc
lea
testb
pop
mov
add
mov
icebp
int3
sub
sbb
add
popf
test
nop
dec
icebp
jmp
fstl
lods
add
or
jmp
xchg
pushf
and
push
out
adc
jb
pop
cld
je
mov
insb
pushf
and
xor
adc
jb
pop
cld
out
inc
add
popa
out
adc
add
push
inc
or
xchg
in
test
cmp
lea
xlat
push
add
popa
add
icebp
movsb
in
push
sbb
mov
aam
int3
inc
jmp
mov
flds
stc
nop
mov
ficomps
vmread
pushf
add
sub
pinsrw
add
repnz
fisttpl
in
and
test
dec
xchg
or
lock
adc
fstpt
aas
fs
fwait
add
rcll
or
std
hlt
push
push
lcall
mov
pop
cmpl
push
push
lock
and
dec
test
incl
cmp
xchg
dec
push
bound
mov
lret
mov
xchg
mov
lock
imul
push
rorb
or
shrl
addl
push
ja
lret
call
imul
xchg
cmpl
gs
and
or
in
add
jecxz
movsb
sub
lret
push
adc
arpl
jns
jmp
mov
insl
std
orl
cmpsb
daa
push
push
adc
pop
jmp
fldcw
ljmp
xchg
fstpl
sbb
jmp
push
inc
test
std
push
in
bound
std
loope
jmp
daa
dec
bound
shl
add
test
xor
fstpl
fsubl
push
mov
add
add
jmp
xchg
test
jmp
int
popf
xlat
inc
bound
mov
popa
bound
pop
bound
push
push
inc
add
cwtl
and
mov
mov
add
repz
add
or
push
push
inc
leave
mov
leave
jp
mov
rep
add
xchg
xchg
add
push
jno
outsl
add
xor
jne
sti
xlat
cwtl
cmp
and
test
pop
mov
add
pushl
adcb
dec
insl
cmp
mov
stos
dec
mov
imul
out
in
add
fmuls
add
pop
mov
cli
pop
pusha
in
xor
les
add
daa
hlt
jecxz
xlat
aam
mov
inc
fs
mov
or
xlat
dec
push
push
cmpsl
push
mov
and
dec
mov
fcompl
ja
mov
sbb
pop
ds
inc
xor
xor
push
iret
je
ja
xchg
rcrb
pop
call
add
fwait
lock
push
inc
add
cmpsl
call
pushl
ja
and
inc
jge
inc
lock
dec
mov
add
xor
jp
xor
adc
xor
insl
mov
jae
loopne
adc
ljmp
arpl
leave
adc
push
inc
add
daa
ret
jmp
das
sub
pop
roll
xor
mov
push
sub
imul
fstl
lds
push
les
xlat
mov
stc
out
ljmp
mov
mov
dec
pop
scas
pop
outsb
push
sub
push
and
shll
inc
leave
pop
inc
ds
sub
js
out
xchg
xchg
out
cmp
adc
jle
sub
mov
gs
jo
in
in
fs
ret
cmp
and
ljmp
in
inc
in
pop
jo
mov
mov
pop
pusha
inc
in
fnstsw
dec
jmp
and
out
and
cmp
or
xor
or
lods
push
mov
hlt
test
test
ja
pop
push
lods
fdivrs
add
lods
fmuls
jl
repnz
fidivrs
movsl
push
subl
cltd
and
xor
sbb
and
xchg
push
push
pop
js
add
outsl
in
clc
jp
jle
dec
faddl
lea
xor
pop
mov
adc
pop
cmovl
pushf
add
out
mov
pop
shlb
mov
fcoms
adc
xor
push
add
or
or
cmp
ds
fwait
mov
cmp
add
bound
jae
pushf
add
fldcw
fcoms
mov
fdivp
mov
add
icebp
pop
xor
xchg
jg
push
repnz
das
add
jmp
icebp
jmp
scas
xchg
cld
std
jo
adc
fcomps
daa
mov
inc
mov
call
push
mov
add
cs
jmp
and
adc
outsl
sbb
arpl
jbe
jle
sarl
push
subl
call
cmp
jmp
mov
dec
lea
sub
xchg
shr
dec
add
push
das
mov
jns
jmp
mov
fidivl
xchg
fldcw
mov
or
cs
les
jge
cmp
mov
notl
pop
sub
push
scas
pop
dec
mov
add
icebp
movsl
les
add
dec
xchg
and
add
mov
pop
flds
fs
insb
cmp
subl
sarl
sub
or
and
mov
adc
movsl
add
pop
sbb
sbb
xchg
mov
pusha
flds
sub
in
test
add
popa
pop
cld
mov
push
mov
outsl
add
jnp
test
out
pop
mov
popa
fldl2t
add
xlat
dec
push
hlt
addb
das
les
mov
sbb
push
dec
push
and
xchg
fdivrs
icebp
aaa
mov
icebp
mov
inc
xchg
nop
push
mov
xor
test
push
fwait
or
dec
xchg
mov
outsl
pop
or
mov
sti
dec
lea
mov
jnp
dec
fadds
add
faddl
test
adc
sti
xlat
push
lea
dec
and
cli
pop
insb
cld
in
mov
adc
pushl
inc
sub
push
repnz
pop
or
repnz
mov
push
mov
inc
inc
ficoml
dec
cmp
jge
xchg
dec
add
loop
inc
inc
loop
mov
lret
icebp
decl
dec
je
jmp
repnz
call
cltd
mov
add
insb
jecxz
lock
cmpsl
lock
add
cmpsb
out
jno
cmp
jg
xchg
icebp
bound
fucom
gs
push
fidivl
add
sub
sbb
loop
call
add
push
push
fldenv
xchg
icebp
loopne
mov
les
add
inc
lds
rcrl
adc
mov
shlb
dec
loop
mov
adc
add
fcomps
ja
add
outsb
fldl2e
adc
inc
scas
inc
add
jmp
xchg
out
jmp
test
add
pop
lahf
mov
add
popa
push
int3
add
add
fsubl
jne
mov
mov
fists
sahf
leave
loope
insb
mov
aad
in
push
into
shll
cmpsb
out
or
jmp
aaa
outsl
pop
mov
xchg
mov
stos
into
xor
loopne
jmp
popa
stos
xlat
stos
fmulp
call
add
nop
or
hlt
cmc
fildl
mov
out
cli
fmull
mov
in
add
dec
addl
push
std
lcall
sbb
xchg
rcl
push
pop
dec
adc
push
lret
fdivrl
push
inc
imul
loope
add
push
inc
mov
adc
clc
adc
test
cs
add
dec
fmull
push
or
test
popa
mov
xor
bound
in
outsl
arpl
xchg
out
cmp
mov
inc
inc
cmp
data16
add
inc
in
imul
add
out
dec
mov
or
push
xchg
adc
jae
or
xor
and
pop
jmp
call
cmp
fxch
call
and
decl
cmp
jmp
incb
fldl
pusha
pop
jl
arpl
jmp
aaa
jne
adc
je
lods
pop
jecxz
in
pop
xchg
mov
mov
sub
je
push
mov
sbb
adc
loopne
jecxz
repnz
pop
sbb
add
ficoms
les
jg
pop
adc
cmpps
jmp
push
xor
std
jae
xchg
jmp
mov
icebp
lods
or
sbb
mov
mov
jnp
jmp
popa
flds
jmp
ljmp
ds
mov
ss
icebp
add
push
adc
adc
and
add
stos
enter
call
out
je
xchg
imulb
fidivs
pop
push
pop
fdivrs
and
pop
roll
add
fcompl
jne
ficoml
or
jno
call
call
rclb
pop
add
sbb
ljmp
push
xchg
hlt
psubsb
xchg
and
xchg
or
add
stos
decl
test
fadds
mov
cmc
pop
mov
sub
psubw
add
outsl
pop
xor
js
jg
push
fnstenv
push
push
nop
mov
jle
aaa
xchg
push
jnp
dec
test
mov
mov
push
call
xor
jmp
sbb
push
push
pop
jb
add
mov
loop,pt
nop
ret
mov
in
xorl
add
xor
pop
and
inc
push
push
xor
mov
xchg
mov
jle
lea
shrb
loopne
jmp
popf
loopne
push
and
ret
dec
push
jne
sbb
das
movsl
xchg
dec
xchg
jmp
das
mov
mov
mov
aad
int
fcomps
pop
add
mov
sbb
mov
popl
cli
fs
add
pop
xchg
filds
jb
xchg
add
push
out
mov
gs
pop
sbb
cmp
mov
and
fcmovb
das
jbe
mov
mov
int
xor
jb
push
fcoms
jg
sbb
xchg
push
jle
int
mov
imul
jmp
fistl
scas
add
mov
cmpsb
rol
fsts
imul
test
test
dec
fs
gs
mov
jb
mov
sahf
sub
je
mov
mov
fidivs
sub
dec
mov
into
inc
mov
add
bound
testl
push
les
and
sub
in
and
sub
stos
mov
mov
pop
add
pop
mov
ljmp
mov
outsl
and
xchg
outsl
and
xchg
outsl
and
sub
je
int
add
daa
add
pop
fnstenv
mov
mov
pop
pop
mov
add
sub
add
add
mov
mov
stos
lcall
mul
xchg
fiadds
std
out
popf
fisttpl
jle
mov
xchg
add
sbb
fldcw
xor
xchg
mov
fidivs
aad
adc
jmp
and
and
xchg
mov
jle
xchg
int
fcompl
mov
mov
add
sahf
cmp
fwait
std
add
fs
add
adc
ss
push
mov
ds
bound
mov
add
popf
in
jmp
rclb
mov
xlat
mov
xlat
orl
push
xchg
mov
ljmp
pop
divl
mov
stc
xchg
jp
sbb
cld
pop
dec
sbb
andb
call
dec
fisttpl
daa
flds
insb
pop
dec
push
bound
ffree
out
push
jns
jmp
popa
pusha
lret
das
add
or
insb
and
popa
flds
jmp
data16
cmp
mov
rcrb
and
shll
mov
add
jbe
jmp
jmp
pop
inc
icebp
fcoms
or
test
pop
inc
rcr
push
sbb
test
pop
inc
int
push
sub
add
addb
cmp
sbb
cli
sbb
push
push
push
and
stc
lods
out
adc
fldl
je
pusha
aad
xchg
pop
stc
xor
fldl
ja
je
mov
add
popf
jecxz
cmp
add
repz
add
leave
xlat
add
scas
add
mov
mov
push
sub
add
jmp
xor
sbb
lret
ja
jp
pop
ds
mov
push
cmp
dec
add
mov
add
ljmp
stc
inc
std
std
add
dec
mov
bound
mov
insb
notb
mov
add
shl
xchg
mov
scas
mov
aas
or
inc
jecxz
sbb
cmp
or
mov
int
pop
pusha
cld
std
inc
mov
add
jb
mov
xchg
jmp
mov
add
pop
sub
pop
pusha
movsl
out
pop
lock
das
loope
dec
outsb
bound
adc
fistpl
test
add
jmp
sub
adc
jmp
add
shll
add
rcl
cmp
sbb
flds
pop
jns
aaa
dec
fnstcw
std
stc
jnp
pusha
mov
jl
scas
in
add
jno
outsl
pop
pop
pop
add
pop
flds
fsts
popf
pusha
pop
cmp
mov
aas
imul
mov
jns
pop
pop
fistps
inc
push
pusha
dec
in
out
push
movsb
call
jb
mov
mov
adc
pop
inc
test
ret
push
bound
mov
xchg
fldenv
call
loopne
add
cmpsb
push
or
das
pop
pop
in
aam
out
movsl
call
add
jecxz
int3
add
add
push
lret
jle
dec
pop
or
daa
adc
je
cltd
stos
mov
mov
arpl
push
add
daa
pop
ret
dec
push
jmp
inc
loope
cmp
add
xor
add
pusha
xor
lcall
xchg
xor
adc
push
shrb
call
jge
rcrb
adc
mov
mov
sub
pop
jecxz
add
mov
add
push
push
ror
mov
dec
sahf
xor
cmp
data16
in
arpl
jmp
add
xchg
or
leave
add
stc
fisttpl
scas
inc
add
ret
insl
ds
cmp
mov
lds
push
movsl
mov
push
add
mov
push
xor
orb
pop
mov
arpl
jbe
or
xchg
rcrb
sbb
fildl
pop
sub
hlt
iret
jmp
nop
cmp
fldenv
popa
imul
sbb
out
sub
fs
mov
dec
jg
insl
sub
stos
jno
cmp
movsb
ss
aas
push
stc
aas
add
adc
cmp
adc
add
rcll
cmc
inc
fwait
sbbb
shl
pop
xchg
andl
add
outsb
loop
and
popa
flds
push
gs
push
or
push
pop
mov
repnz
popa
rcl
mov
test
fsubrl
insl
mov
xor
insl
mov
xchg
call
call
pop
dec
divl
cmc
adc
addr16
call
fstl
bound
or
shll
or
xor
sti
jmp
data16
bound
pusha
dec
aad
sarl
fiaddl
inc
push
loope
add
push
std
adc
outsb
xor
and
mov
push
and
push
lea
fiaddl
add
flds
and
pop
int
insb
out
adc
fnstcw
cmc
xchg
push
lea
mov
push
enter
cmpsl
imul
je
sar
ja
inc
add
lcall
aaa
rcrl
xchg
or
pop
std
add
lds
pop
push
add
push
add
cmp
pop
imul
decl
ds
arpl
decl
sar
loop
adc
push
cmp
out
sbb
or
aad
bound
sbb
push
aas
stos
or
add
lods
lret
xchg
add
rorl
rcrl
add
vpexpandw
mull
call
in
dec
push
fstps
xor
mov
mov
inc
bound
mov
cmpsl
pop
ret
push
repnz
fnstenv
add
fstps
data16
testb
dec
out
add
loop
inc
pop
add
jmp
push
les
add
outsb
push
pop
sub
js
fstl
das
push
int3
cli
and
in
push
fsubrs
pop
test
jmp
fistps
jmp
add
sbb
mov
inc
add
xlat
pop
in
fidivrs
nop
ficoms
xchg
popa
push
rolb
aas
adc
sbb
out
clc
mov
xor
stos
adc
clc
aad
xor
adcl
imul
mov
sbb
add
ret
cli
push
sub
and
hlt
addr16
pop
pop
in
shr
fnstcw
roll
gs
mov
inc
pop
fstl
xlat
mov
call
test
rorb
or
xchg
mov
mov
cli
aad
lea
sbb
or
mov
lret
push
jo
jo
sub
and
jmp
test
inc
ljmp
inc
call
clc
push
roll
or
les
and
add
or
push
cmp
pushl
mov
cmp
adc
cmp
mov
mov
inc
or
repnz
mov
jp
test
mov
shll
or
pushf
cmp
cli
pop
push
incl
in
fcmovnu
dec
jbe
jmp
frstor
shlb
push
push
jmp
movsl
xor
and
mov
jmp
loop
in
xor
shlb
add
jmp
lods
imul
das
mov
mov
ljmp
cvtpi2ps
add
cwtl
cmc
in
push
cmovns
mov
mov
inc
bound
popa
mov
and
add
xchg
mov
push
sbb
inc
bound
inc
or
pop
les
fwait
in
sbb
flds
lcall
sti
jmp
and
stc
mov
flds
push
aad
rolb
sti
jmp
jne
cmp
jb
cmp
jb
cs
shrl
jmp
fsubrs
outsb
cmp
xchg
mov
sbb
jmp
leave
std
push
jmp
xchg
aam
sub
mov
jne
mov
mov
and
mov
sub
and
dec
andl
add
jg
es
jae
int3
mov
rorl
mov
mov
sub
xor
add
ficoml
into
add
add
mov
and
popa
repnz
or
jmp
add
fadd
inc
aas
fiaddl
mov
flds
mov
inc
testb
sbb
decl
mov
add
cmpb
js
outsb
dec
mov
xchg
mov
push
sbb
decl
fdivr
jmp
sbb
jnp
jmp
std
sbbb
sbbl
hlt
test
out
sbb
dec
mov
loopne
or
jmp
rorb
jmp
jb
add
sbb
call
mov
andl
jnp
arpl
testl
fnstenv
add
gs
pop
aam
fstps
pop
das
repnz
pop
aad
mov
mov
gs
push
pop
or
fldcw
in
cmp
jp
shlb
shr
add
and
pop
cmpsb
fistl
add
fldcw
xor
sbb
xor
adc
stos
jo
jmp
out
cwtl
fiaddl
jmp
push
add
cmp
cld
in
push
das
sbb
icebp
outsb
add
ja
aaa
sub
repnz
les
xchg
jmp
in
add
lahf
dec
inc
out
pop
and
arpl
std
sub
or
jns
add
add
pop
dec
or
push
mov
bound
enter
add
out
and
leave
rclb
add
in
and
and
add
push
xchg
dec
out
movsl
std
testb
mov
aaa
jmp
push
inc
and
outsb
fimuls
andl
mov
and
sbb
sbb
add
mov
decb
and
jmp
adc
lea
mov
add
dec
or
gs
je
mov
add
pop
xchg
js
pop
xchg
and
incl
cld
jmp
push
mov
push
clc
add
sbb
fmull
push
aam
xchg
fmull
mov
popa
sti
ljmp
and
adc
xchg
ret
xor
aas
mov
aam
mov
mov
cld
out
mov
lods
in
dec
andb
imul
mov
loope
iret
rcrl
dec
mov
mov
mov
neg
fsubrp
and
fnstenv
mov
cmc
testb
jmp
sahf
pop
shlb
fadd
shrb
mov
jmp
ret
lcall
into
jmp
sbb
fsqrt
roll
mov
fldenv
icebp
int3
fcmovb
gs
outsl
push
cmpsl
add
fldcw
add
mov
xor
imul
adc
jmp
sub
dec
xchg
or
popa
inc
sub
cld
pop
call
jmp
cmp
rorl
fs
sti
jmp
cmp
sti
jmp
pushf
call
dec
add
push
movl
daa
aad
mov
add
and
jb
in
or
cmp
call
popa
jmp
jg
pop
fdivs
in
jg
or
je
call
int
xchg
push
inc
push
push
ljmp
and
push
push
pop
push
pop
decl
inc
add
fiaddl
xorb
mov
mov
sub
add
movsb
orb
stc
mov
pop
cld
test
add
mov
stos
fadds
fwait
pop
pop
out
add
jmp
lock
es
addr16
add
push
aaa
add
or
inc
fildl
add
adc
sub
sti
add
fidivl
xlat
pop
jp
xor
mov
orb
add
bound
push
sbb
bound
mov
cwtl
ja
incl
bound
mov
sbb
push
bound
or
jmp
sahf
fincstp
sbb
sub
jge
sub
jne
adc
jp
inc
add
mov
and
and
bound
rol
jnp
push
jae
hlt
add
ljmp
push
test
mov
and
in
loop
popf
int
add
cltd
jo
xchg
push
sub
cmp
add
enter
std
fcoms
stos
mov
sub
mov
pop
adc
fistl
add
outsl
fldl2t
orl
or
adc
ljmp
add
fcmovne
insb
xchg
outsb
push
cs
push
mov
and
cwtl
add
popa
ds
fldlg2
push
mov
ss
and
fsts
mov
mov
call
shl
call
jmp
leave
call
jb
int
movsb
cmc
or
sub
call
insb
cmpsb
int3
test
pop
flds
pop
add
movsl
fstl
into
mov
lret
or
and
dec
fnstenv
mov
test
fnstcw
inc
pop
and
add
aad
mov
xlat
add
sti
push
jbe
push
inc
lock
mov
push
xchg
adc
call
adcb
call
clc
xchg
dec
decl
outsb
cmp
add
dec
bound
mulb
iret
mov
add
jp
add
push
test
mov
call
mov
sahf
xor
add
popf
inc
or
fs
push
mov
inc
int
add
outsl
jl
aas
bound
and
or
add
ret
jmp
add
jae
inc
pop
mov
sub
jbe
stos
adc
aad
sti
scas
arpl
or
mov
dec
cmp
mov
ret
jmp
sub
aaa
nop
xor
mov
xchg
pushl
les
ds
test
fucompp
mov
int
hlt
add
pminub
xor
mov
ret
sub
mov
in
into
repz
notl
sti
push
pop
or
fldcw
loop
cmp
jb
in
jmp
stos
or
call
jg
sub
mov
add
and
jle
mov
cmc
int3
ret
fimull
add
mov
add
popa
bound
pop
xchg
out
in
pop
stc
pop
jb
jg
cmp
or
sar
push
push
inc
loop
std
and
cmp
jmp
adc
dec
int
rorl
or
or
or
dec
add
dec
mov
jb
pop
sti
out
xor
lret
out
jmp
dec
testl
call
insb
in
lea
mov
std
jbe
in
xchg
push
push
and
cmp
and
mov
addl
jle
or
in
inc
bound
push
hlt
call
push
bound
pop
imul
jl
dec
cld
mov
daa
push
mov
push
cwtl
jle
mov
cwtl
mov
jle
int3
sbb
push
inc
push
add
negb
mov
bound
inc
add
jl
inc
push
test
dec
jmp
cmp
cs
clc
mov
add
and
or
rolb
pop
cmp
and
cmp
out
cli
call
loope
or
dec
decl
dec
push
arpl
mov
or
dec
in
cmp
out
push
xor
jbe
jmp
sub
xorb
add
es
pushf
in
test
and
or
fldenv
data16
test
jmp
shlb
addr16
shl
or
repnz
jmp
shrb
arpl
adc
jmp
or
sbb
push
popa
pop
addb
and
repnz
cmpb
call
adc
push
setl
pop
ds
pop
leave
pop
ror
movsl
rcrl
mov
repnz
daa
push
xchg
into
sub
leave
add
pusha
jmp
fnstcw
pop
pop
sarb
lds
icebp
out
je
popa
inc
and
sub
packssdw
inc
ret
mov
sbb
pop
fbld
add
rcl
pusha
dec
loope
bound
sub
push
cmpsl
lcall
call
into
inc
adc
popa
pop
inc
or
push
icebp
out
out
out
cld
dec
icebp
popa
push
add
pop
mov
xchg
pop
pop
cmp
addr16
into
icebp
push
push
loope
std
xor
lock
mov
add
and
je
notl
mov
mov
mov
popf
loop
cmp
add
xor
pop
enter
jg
adc
and
out
les
dec
add
push
stc
dec
add
mov
jb
and
jle
or
jno
add
mov
pop
cld
ljmp
cmp
xchg
push
enter
es
out
incl
fiadds
adc
insl
adc
jo
inc
inc
mov
mov
pushf
fisttpl
test
push
or
call
loope
repz
add
cmpsb
in
sub
add
add
daa
adc
loope
popf
add
mov
add
jl
fnstenv
jl
or
lds
aaa
adc
loope
int
jne
data16
imul
fsubl
std
adc
dec
pop
xor
push
pop
lods
out
fs
neg
fdivrs
xor
sbb
out
and
daa
xor
lret
cmp
imul
call
jle
lret
sub
xchg
in
jl
cmc
aad
push
fs
jmp
jo
jmp
mov
adc
xacquire
jp
fisubl
jmp
xchg
divps
out
insb
sub
les
ds
adc
insb
add
mov
and
int
push
dec
lds
cli
add
sti
jmp
fsubr
add
popa
arpl
loope
xor
out
add
popa
pop
stc
and
sub
popa
fnstcw
dec
int3
add
mov
test
xor
int3
jp
sti
and
and
out
xchg
stos
cmc
adc
or
sbb
push
add
jo
stos
in
adc
cmp
jecxz
lret
fildl
andb
outsb
add
insb
call
xor
sbb
xor
and
sbb
or
push
lcall
cld
jnp
inc
and
mov
mov
fildl
mov
jno
insb
add
mov
sub
cmp
aad
pop
inc
add
or
test
or
sar
jmp
push
jmp
mov
inc
leave
std
popa
pop
jl
jle
sub
inc
jle
ja
jmp
mov
dec
jmp
cmp
push
sub
sub
xchg
out
xchg
fildl
mov
xchg
iret
addb
add
add
add
jp
add
mov
rep
add
jae
mov
sub
rolb
lret
add
and
xchg
ljmp
int3
sahf
fidivrl
push
scas
xchg
outsb
pop
cmp
lods
cltd
add
bsr
jecxz
std
shrl
lret
mov
clc
pop
cmp
in
add
outsl
adc
sbb
jmp
popf
sahf
cwtl
dec
bound
enter
and
adcl
call
psubusw
shl
or
pop
dec
adc
jmp
test
inc
lds
push
push
int
push
insb
lds
xchg
fdivs
sbb
cmc
inc
bound
icebp
xchg
sub
add
push
cmc
and
and
sub
je
cmc
inc
insb
inc
cmc
inc
add
sti
push
cli
aas
and
movsl
fdivrl
or
stos
sti
jmp
lds
and
sub
inc
add
push
push
in
and
andb
pop
cld
mov
scas
jg
add
fadds
mov
mov
jmp
sub
scas
stc
cmpl
sti
mov
mov
pop
and
out
and
dec
and
xor
push
dec
add
xlat
mov
cwtl
xchg
cmp
mov
clc
adc
and
push
pusha
or
jp
add
mov
push
add
dec
xlat
mov
aam
and
sarb
inc
add
mov
push
mov
jmp
sar
sahf
xchg
movl
ss
jp
xchg
xor
scas
mov
fdivrl
sahf
mov
or
xor
lret
jp
jle
jp
inc
addb
data16
xor
inc
xchg
dec
adc
shrl
andb
jp
lcall
jl
icebp
outsb
cmp
sbb
inc
in
out
jp
loope
inc
inc
shr
pushf
jg
mov
inc
pop
jmp
aad
xchg
call
sarl
outsb
lods
loopne
cmc
cmp
sbbb
and
push
jge
cmc
lods
jl
cmc
mov
push
arpl
cmpsl
add
sub
cmp
loop
fs
xor
fstps
ljmp
ret
in
jl
lahf
add
mov
mov
xchg
call
arpl
sbb
arpl
sub
dec
wrmsr
xchg
add
stc
jo
std
adc
dec
adc
cmpsl
cmpsl
sti
jmp
add
xchg
add
cmpsb
jb
dec
sub
and
mov
ficomps
movsl
test
stos
pop
outsl
call
lea
or
lods
les
jb
leave
jg
arpl
jle
pusha
flds
bound
adc
lock
repnz
faddl
cmp
faddl
paddq
add
or
add
mov
push
pop
mov
pcmpeqd
decl
ret
popa
movsl
cmc
roll
or
and
fisttpl
and
jmp
and
push
pop
imul
xchg
inc
cltd
add
jge
lock
xchg
mov
inc
xchg
and
xchg
inc
mov
mov
xchg
fisttpl
inc
xorb
xor
fld
pushf
aam
rolb
jmp
loope
fld
loopne
cmp
jg
mov
andl
int3
mov
mov
xor
cld
loopne
push
mov
fnsave
xor
es
rorl
adc
adc
mov
jecxz
movsb
pop
ja
inc
mov
loope
add
fildll
cld
add
ret
pop
data16
or
jmp
lret
iret
out
cs
xor
xchg
aad
fwait
cmp
jmp
add
andb
ret
lds
push
sub
jmp
fwait
cmp
call
data16
jmp
fwait
lock
jmp
cvtdq2ps
repnz
add
mov
test
sbb
adc
fsubs
sub
in
push
adc
or
mov
daa
out
xchg
inc
loopne
scas
jp
pop
decb
add
dec
mov
xchg
cs
xchg
ds
xchg
add
xchg
es
xchg
add
mov
xchg
out
dec
adc
nop
mov
inc
fisubs
sti
aad
push
lret
inc
and
dec
sub
cld
call
out
inc
pop
cmp
inc
or
sbb
pop
push
inc
cmp
mov
insb
test
push
mov
test
dec
fcoms
out
adcl
pop
test
xorl
fadds
mov
mov
fdivs
fistl
adc
addb
je
test
pop
pop
lods
jecxz
fsts
lea
icebp
xor
test
mov
push
cld
lea
icebp
test
mov
fiaddl
or
add
test
scas
jmp
and
incl
push
cmp
in
pop
out
and
bound
add
lods
mov
andl
mov
xlat
cmp
test
decl
scas
nop
dec
xchg
xchg
mov
insl
pusha
mov
mov
mov
ljmp
aam
sahf
pushf
sbb
mov
dec
jle
addr16
xchg
mov
xchg
pushf
daa
andl
jmp
sbb
pop
adc
add
cwtl
nop
and
loope
fcomps
popf
daa
divb
jo
inc
stc
insb
inc
push
pop
icebp
add
or
in
fnstcw
jmp
push
cmp
sub
scas
arpl
mov
jmp
mov
adc
idiv
hlt
fadds
bound
mov
sub
fsubr
add
loope
ljmp
pop
stc
jecxz
push
fnstcw
push
adc
push
decl
lret
add
test
lcall
adc
popa
or
sti
jmp
jb
call
test
sti
imul
pop
add
popa
cmpsl
inc
or
bswap
pop
push
data16
push
add
data16
sub
mov
call
flds
ljmp
call
add
subl
in
mov
fmull
and
pop
cld
mov
clc
test
mov
push
call
clc
and
push
cmp
out
ret
add
or
push
pop
xor
fadd
push
sbb
mov
orl
push
or
add
xor
addr16
inc
pop
pusha
and
fsubrs
pop
std
lea
fisttpl
sahf
xchg
pop
dec
cmp
and
sub
decl
outsb
sub
mov
fidivs
cld
add
out
xlat
pop
and
xchg
fists
add
mov
es
in
out
and
sub
cmp
fcomip
clc
adc
fsubrl
test
incl
xor
scas
mov
bound
pushf
and
mov
fcomip
sub
xor
xchg
dec
fstps
insb
lods
jmp
sbb
jmp
jle
jmp
into
daa
lds
das
or
sbbl
loope
mov
dec
jmp
daa
repnz
add
sahf
mov
testl
in
jle
hlt
mov
sub
jmp
divl
xor
fsubr
add
xchg
add
fsubr
mov
mov
aas
sub
fistl
inc
mov
xchg
push
inc
fldenv
dec
cmpsl
add
mov
inc
jmp
add
push
push
lds
dec
int
sub
dec
bound
adc
jg
mov
and
ds
pop
daa
pop
rcr
pop
or
call
popf
popf
or
dec
sbb
test
lea
out
mov
pop
int
pop
xlat
out
xlat
scas
add
popa
pop
jl
adc
jne
ficompl
and
push
out
addl
popa
das
add
inc
xor
addl
add
ret
cmp
jg
lret
xor
imul
sahf
aas
add
cld
adc
rorl
pushl
jmp
mov
repnz
test
iret
hlt
adc
jge
aas
and
dec
insl
add
fisubrl
add
or
add
push
repz
repz
pop
mov
pushl
dec
aas
and
out
or
mov
insb
cmp
mov
xor
cmp
aaa
pushf
stos
push
test
mov
jmp
inc
testb
jno
test
fwait
add
jmp
mov
and
lahf
mov
sahf
fsub
ret
cld
add
jne
sbb
test
jbe
loope
or
sbb
add
scas
lock
loope
sbb
dec
ret
imul
outsb
sbb
jbe
mov
fldt
fnstenv
icebp
cmp
push
xchg
imul
jp
xor
cmp
and
clc
aaa
pop
sbb
loopne
adc
int3
jp
int
jmp
sbb
lcall
pop
dec
lods
pop
ss
mov
mov
insl
dec
lods
pop
push
scas
fimuls
stos
lcall
sbb
xchg
xchg
lcall
dec
lcall
in
add
mov
lcall
stos
mov
lret
fwait
popf
push
bound
mov
push
sarb
daa
push
fdivs
add
adc
jb
mov
sti
insl
push
es
sbb
aas
popf
sti
jb
add
sti
mov
mov
ret
mov
out
call
jb
mov
loop
fldcw
sub
aaa
pop
mov
pushf
cmp
jns
add
stos
push
mov
sbb
je
inc
sbb
lcall
jl
add
loopne
imul
cmovl
popf
sti
addr16
cmpb
push
and
test
adc
test
xchg
mov
cmp
mov
repnz
pop
fildll
inc
sbb
pop
cmp
jg
mov
cmpl
and
mov
std
push
add
inc
adc
fisubrs
cmp
xor
cmp
xor
lret
mov
subl
in
or
fisubl
mov
or
pusha
cld
or
or
std
xchg
jle
orb
mov
jle
hlt
inc
mov
jg
mov
fstps
jge
push
jmp
pop
add
adc
mov
cs
or
gs
bound
ret
pushf
pop
jmp
movsb
arpl
adc
shl
fsubrs
test
pusha
roll
push
sub
insb
inc
outsb
pop
push
add
fldenv
pop
fcmovu
sbb
jmp
mov
add
fscale
mov
test
or
and
imul
fsubr
add
cltd
adc
dec
frstor
xor
aam
sbb
shr
sbb
rcr
and
imul
call
jbe
ficomps
pop
pop
push
mulb
inc
xor
mov
movsl
add
in
mov
mov
flds
lods
pop
pop
leave
jbe
leave
sarb
das
daa
mov
popa
cmp
sahf
xor
or
adc
push
push
fistl
and
cmpsb
aam
xchg
ds
inc
shr
adc
mov
stos
mov
push
jb
mov
pop
popa
jle
push
mov
cmp
mov
fldl2t
mov
test
push
add
shrb
fdivrp
add
dec
inc
dec
cli
decb
dec
andl
inc
or
cmp
xchg
mov
lods
pop
pop
push
pop
adc
sahf
out
out
push
mov
mov
mov
pop
jge
xor
std
flds
test
add
lods
faddl
push
mov
mov
adc
daa
add
out
jmp
out
arpl
cmp
imul
push
inc
jae
std
pop
jae
les
fdiv
addr16
filds
jnp
push
roll
incb
or
aaa
fnstcw
mov
outsb
jge
call
xchg
add
clc
lds
jno
and
repz
jmp
fsubrs
xchg
xchg
ljmpw
mov
scas
cmp
in
jle
mov
mov
mov
out
jmp
shr
testl
add
xchg
fsts
jg
pop
xchg
jmp
rcr
sbb
aaa
xor
testl
ja
push
sub
cmp
add
fnstsw
aam
or
mov
xor
mov
sbb
add
pop
pusha
xor
adc
outsb
cli
cmp
jae
or
ss
mov
insl
or
stos
fcoml
repnz
aam
clc
inc
xor
sub
or
cmp
xchg
in
leave
shrb
popa
in
push
mov
sub
pop
inc
rorl
jle
and
pop
dec
leave
fistps
bound
pop
daa
in
popf
mov
aad
xchg
sti
mov
aas
adcl
scas
add
sub
aam
add
or
sub
mov
or
mov
mov
lea
add
je
in
call
adc
or
mov
orl
pop
ret
push
mov
push
dec
and
push
inc
or
in
lea
loop
mov
dec
fucomp
dec
repz
jmp
mov
or
mov
jp
rcrl
inc
out
push
decl
sti
shll
dec
into
pop
adc
push
pop
loope
add
jmp
jle
mov
jle
shr
jns
ds
mov
dec
pop
je
mov
stos
dec
jo
or
inc
andl
jp
pusha
add
jl
pop
repz
shl
add
jmp
lock
loop
pushl
xchg
aas
out
add
fnstcw
jnp
mov
mov
adc
jp
mov
jp
subb
fldcw
mov
fidivrl
fldl2t
add
cld
add
add
push
stos
sub
push
int
pop
loope
sub
lret
andb
jmp
clc
xchg
es
ss
adc
pop
pusha
jae
or
pop
movb
bound
push
std
push
sbb
bound
divl
out
lahf
aad
lds
add
lea
push
loop
pop
pop
pusha
dec
in
cmp
ret
fsincos
das
pop
pusha
dec
in
fld
in
data16
daa
push
add
lret
sarb
mov
cltd
push
sbb
arpl
test
push
sarb
arpl
fiaddl
mov
sbb
shlb
loope
jl
pop
jl
pop
fnstenv
loopne
mov
fstl
stos
fiadds
stos
leave
shrb
popa
add
pop
inc
cld
movsb
lret
or
dec
push
mov
rcll
adc
mov
adc
test
nop
insl
xor
adc
mov
xchg
imul
add
lock
add
lmsw
push
enter
jge
cmp
jle
pextrw
adc
sub
pusha
dec
push
rolb
add
adc
mov
sbb
ja
nop
movsb
pop
adc
sbb
je
pushl
inc
xor
in
insl
or
dec
inc
xchg
mov
add
fdivr
push
adc
mov
add
mov
loope
repz
xor
jb
fldcw
sub
jl
add
dec
adc
push
mov
jge
xchg
jne
gs
aas
andb
lock
gs
andl
add
je
loop
add
lods
fnstenv
movsb
xor
cld
add
hlt
mov
adc
cmp
inc
add
cltd
in
std
cmc
pusha
add
cmpsl
jge
sbb
popa
or
add
js
adc
add
add
and
out
add
add
mov
add
mov
jmp
jle
dec
xor
or
lock
in
nop
movsl
add
add
shlb
jge
and
flds
sbb
repz
jmp
or
ficoms
push
popa
or
call
dec
into
xchg
xor
leave
dec
in
mov
jg
lcallw
sbb
mov
mov
pop
xor
mov
fcoml
jnp
add
aad
dec
mov
dec
or
das
in
cmp
popa
shrl
rolb
push
ret
or
add
add
nop
jae
aad
or
jo
scas
dec
xchg
cltd
sti
mov
int
shll
cmp
faddl
enter
xchg
add
fcoml
inc
mov
adc
xchg
je
inc
aad
shrl
mov
cmpsb
dec
push
sbb
cmp
lret
aad
inc
adc
inc
add
sbb
and
sti
fmull
dec
andl
scas
arpl
mov
adc
sbb
inc
bound
push
jmp
jb
xor
jecxz
aad
jge
jae
push
jb
jb
lcall
cmpl
bound
cli
stos
cs
xchg
movsl
mov
das
call
rclb
je
imul
call
push
data16
lcall
nop
stos
out
popa
int3
sub
imul
mov
push
incl
jbe
mov
cmp
lret
sarl
pop
shl
dec
sub
lods
mov
jmp
stos
into
xchg
sub
daa
xor
pop
push
cs
mov
and
jg
xor
push
clc
test
addr16
push
pop
cmp
call
mov
addr16
jmp
add
addr16
jmp
dec
in
inc
dec
push
xchg
lods
jge
dec
dec
push
xchg
mov
sarb
pop
inc
add
insl
mov
lret
mov
arpl
cmp
push
test
cmpsb
fiadds
lfence
mov
add
mov
pushf
inc
lds
mov
inc
add
popa
push
dec
add
outsl
in
not
jbe
and
xchg
leave
fucomip
mov
adc
cmp
sar
jmp
mov
adc
xchg
mov
lods
add
or
push
and
and
inc
outsl
in
test
int
fisttpl
in
push
add
stc
mov
jg
dec
aad
or
ret
call
test
mov
repnz
push
add
xchg
mov
or
pop
dec
fsts
mov
xor
or
loop
xor
sbb
std
cmp
jle
data16
ret
sbb
lret
sbb
jo
or
js
gs
ret
std
outsb
jne
pop
add
push
jmp
xchg
cmpsl
arpl
divb
inc
jno
pop
test
and
mov
push
scas
les
mov
add
es
mulps
fldenv
push
push
lods
gs
mov
les
insl
push
in
cmpb
out
push
enter
adc
add
fistpl
add
orb
jmp
xor
dec
sub
cmpsl
es
insl
xchg
stc
add
and
pop
in
rcll
xchg
adc
pop
mov
enter
or
or
pusha
fxch
push
sub
fmull
add
add
dec
sti
mov
dec
add
add
add
rcll
bound
cwtl
or
out
adc
bound
push
mov
stos
xchg
mov
mov
add
xlat
gs
push
fstpl
pop
loop
push
mov
xchg
push
jo
add
cli
jo
mov
push
aad
and
push
and
incl
adc
mov
inc
mov
mov
or
or
or
push
aas
and
push
aas
add
add
mov
mov
or
mov
cmp
fiaddl
sub
cld
je
scas
std
je
scas
std
adc
jo
pop
and
or
inc
mov
sub
dec
incl
xchg
mov
mov
cmc
leave
add
aad
dec
scas
dec
cli
ljmp
mov
je
xchg
outsl
aas
push
jge
inc
jb
std
hlt
arpl
call
or
gs
or
mov
arpl
push
jmp
aas
pusha
jae
fimull
cld
sbb
xchg
xor
pop
xchg
fidivrs
bound
popa
push
mov
and
push
xor
shll
outsb
fists
mov
fnstenv
adc
xchg
push
stc
sub
pop
shrl
pop
leave
cwtl
xchg
call
ret
es
cmpsb
add
dec
cmpsl
lea
loop
loop
test
jmp
push
test
fistpl
fimull
cmp
and
arpl
mov
mov
mov
fwait
mov
lret
pop
mov
stos
add
xor
jno
data16
popa
push
fisttpl
pop
inc
aad
mov
jmp
bound
or
frstor
mov
test
push
jne
loopne
add
mov
or
mov
dec
add
jmp
imul
jnp
adcb
loopne
add
testl
popf
pop
notb
cmp
push
aas
fldenv
out
jmp
jl
loopne
jnp
push
push
inc
stc
and
call
test
pop
sbbb
add
pop
or
sbb
add
push
xchg
mov
push
dec
push
jo
adcl
xor
cld
incl
inc
cli
push
xchg
add
arpl
cli
dec
or
cmp
ret
lds
dec
fiaddl
add
pop
cmp
fiaddl
add
std
jmp
in
nop
xchg
or
or
push
ljmp
outsl
adc
bound
add
daa
cwtl
imul
xorb
pop
inc
xlat
xlat
and
inc
mov
insb
xor
pop
mov
arpl
pcmpeqb
rorl
testl
ret
sti
fcmovne
mov
call
xor
ss
jbe
xor
mov
adc
pop
cld
sub
jno
mov
mov
imull
mov
add
inc
add
stc
xlat
imul
adc
push
push
daa
adc
shrl
add
pmaxsw
xchg
push
fimuls
fwait
xchg
and
jle
call
ficoml
jge
pop
mov
bound
pop
mov
fwait
jmp
mov
or
pop
fimull
test
andb
pusha
movl
jo
inc
adc
or
fsubr
and
dec
jo
xor
jge
jne
mov
add
and
jmp
repnz
aam
in
jmp
in
rcr
or
add
add
aam
test
inc
mov
test
xchg
lret
mov
or
add
data16
jb
mov
ljmp
je
aam
call
bound
mov
xchg
xchg
incl
out
inc
sub
jmp
push
mov
daa
add
dec
aas
and
push
jo
add
cld
je
cltd
add
inc
jecxz
scas
aad
mov
add
add
and
xchg
addb
mov
bound
push
jge
call
aaa
fadd
inc
sub
xchg
or
inc
cmp
aas
push
xorl
push
nop
repnz
orb
cli
ficompl
add
repz
jae
test
imul
jl
adc
jo
mov
arpl
sbb
xor
adc
arpl
out
out
shrb
or
punpckldq
mov
mov
insl
imulb
mov
hlt
add
dec
jmp
mov
fldt
arpl
insb
outsb
add
scas
insb
data16
call
dec
and
pop
rolb
mov
inc
mov
pop
jo
mov
add
xchg
hlt
popf
fldenv
mov
test
rclb
lock
mov
rcrl
stos
iret
pop
mov
iret
popa
mov
into
popa
sub
insb
arpl
in
add
test
mov
punpcklwd
cmp
and
aaa
adc
lods
push
adc
popa
mov
jo
xor
out
call
inc
sbb
mov
out
and
out
popa
flds
fiadds
lds
js
jmp
and
mov
push
push
push
pop
scas
jmp
test
test
je
jbe
adc
add
jmp
aaa
or
js
jmp
jge
jmp
push
fdivl
adc
add
add
mov
je
std
test
add
sbb
mov
sbb
mov
insb
or
cmp
pop
popa
jnp
add
lcall
sub
jno
mov
fisttpll
push
idivb
and
arpl
and
or
mov
mov
adc
xlat
loopne
or
aas
mov
fwait
inc
dec
lcall
jle
xchg
xchg
mov
cli
sub
push
sub
lahf
xchg
add
ds
pop
adcl
xor
addr16
cmp
sub
pop
in
cmp
lock
loopne
add
ret
into
pop
jmp
mov
dec
pop
icebp
aas
bound
add
inc
add
add
xchg
pop
dec
jno
push
pushf
icebp
call
or
data16
ficoml
cmp
leave
mov
stc
jle
out
pushf
mov
imul
mov
push
xchg
fildll
cmp
in
orl
clc
jge
test
pusha
pop
add
ja
fs
shlb
mov
fisubrs
dec
jmp
cmp
call
lock
mov
pop
mov
pop
xchg
pop
test
add
pusha
mov
inc
popa
fsts
scas
push
pusha
add
dec
fwait
jmp
jns
sti
bound
or
leave
xchg
jne
bound
stc
mov
push
mov
loop
or
adc
jbe
leave
icebp
mov
jb
push
ljmp
push
cmp
sti
gs
or
add
je
adc
inc
jmp
popa
in
and
mov
imul
popa
jbe
lds
jno
adc
fnstsw
data16
push
sbb
jmp
pop
jns
sti
push
sar
push
enter
test
add
sti
mov
and
push
dec
push
or
insb
jo
adc
jg
add
cmpl
mov
add
or
and
mov
ret
ret
js
mov
xchg
dec
cld
in
repz
and
jecxz
je
int3
shr
repnz
and
xor
daa
arpl
fadds
xor
cmp
iret
dec
add
jnp
cltd
push
rorl
fiaddl
or
mov
add
dec
mov
adc
mov
hlt
sub
mov
inc
out
mov
scas
pop
xchg
or
pop
outsl
pop
cmp
aaa
stos
mov
mov
cs
ljmp
jle
jmp
fldl2t
add
xor
pop
mov
sub
nop
sub
outsb
pop
add
and
rcr
jmp
addb
pop
and
stos
out
bound
imulb
cltd
mov
mov
je
inc
mov
int
pusha
fldl2t
mov
or
div
lret
loope
jae
inc
mov
jnp
cmc
test
lds
mov
out
jle
mov
mov
in
dec
enter
add
call
xor
test
and
push
fisubl
testb
popa
fs
xor
add
adc
xor
or
push
jmp
cli
mov
lret
inc
cmp
mov
and
add
pop
add
out
adc
cltd
insl
or
outsl
sti
jmp
inc
push
arpl
loop
and
push
add
xchg
xor
in
mov
decl
fildl
push
sub
mov
add
push
popa
pop
nop
jg
add
jno
adc
pop
std
jne
push
cmove
sti
adcb
pop
adc
in
aas
and
lret
or
or
incl
jo
push
lea
xor
out
ret
sti
popa
mov
and
aad
jl
outsw
add
ds
adc
jae
decl
lahf
clc
xchg
push
rolb
aam
andl
int3
add
push
shl
cmp
scas
pop
in
and
inc
xchg
push
add
cmp
sbb
add
jl
loop
incl
fcmovu
lds
or
ret
mov
jmp
je
jle
mov
call
in
and
jg
jmp
and
addr16
in
in
and
cmp
lret
call
xor
andb
insb
rolb
add
mov
or
add
cwtl
sub
add
inc
enter
addb
les
xor
ret
mov
mov
out
add
push
pop
pop
sub
xlat
jmp
dec
ds
sub
rcrb
testb
sub
push
add
mov
sub
cwtl
inc
out
add
pushf
jle
mov
stos
lds
add
and
xor
punpcklbw
or
addr16
icebp
je
push
xchg
pop
clc
mov
pop
call
cmp
push
insb
cmc
mov
jmp
jmp
scas
insl
test
popa
jmp
jge
add
popa
or
fsubl
inc
jmp
loop
sti
fsubp
pop
add
popa
pop
dec
lds
insl
lea
and
or
add
xlat
xchg
cmpxchg
mov
jmp
add
xlat
push
push
lea
push
pop
pop
nop
xchg
add
xor
sub
aas
bound
mov
mov
jnp
aas
and
daa
xchg
sbbl
cmpsl
xor
add
xlat
add
add
aas
and
outsb
jg
or
add
and
je
sti
decl
test
andl
testb
add
out
xchg
add
fstps
xor
lods
gs
and
cli
push
xor
mov
inc
cwtl
cmp
arpl
scas
push
out
sbb
fmuls
mov
sbb
out
das
and
and
mov
in
cld
dec
call
mov
dec
adc
jae
cmc
jae
loop
cli
fdivrs
cld
imul
roll
jg
fsubr
js
mov
add
cltd
mov
ret
icebp
hlt
test
insb
inc
outsb
push
mov
jmp
popf
rorl
xchg
and
mov
in
jge
adc
bound
out
test
sub
pop
dec
stos
jp
add
insl
and
fldl2t
add
ret
shlb
inc
sahf
pop
mov
cld
sub
fwait
cmc
add
push
add
popf
add
cld
andb
xchg
mov
push
jecxz
popa
sub
sub
sbb
in
add
mov
and
or
sbb
ret
faddl
push
popa
or
shl
pop
bound
push
stc
je
mov
pop
sbbl
and
popa
flds
jle
mov
xchg
cltd
xchg
xor
popa
pop
rcr
icebp
add
inc
add
push
or
sti
mov
pop
test
aas
and
cs
push
in
mov
pushf
sti
out
into
sti
ds
sbb
or
lret
adc
outsl
push
lea
andl
sbb
dec
shlb
cli
sbb
mov
sti
jnp
xchg
xchg
jecxz
jp
add
std
mov
mov
xsavec
adc
cmp
ror
imul
jmp
fdivl
decl
mov
xor
push
mov
sbbl
in
or
lahf
cld
push
xchg
sub
bound
inc
xchg
scas
dec
dec
shll
mov
std
aas
or
or
jg
lcall
and
fiaddl
mov
dec
mov
jbe
pop
imul
clc
jle
push
stos
cld
iret
xorb
fdivs
cs
sub
pop
stos
sub
jmp
add
push
pushf
sti
jmp
fldenv
xchg
incl
pop
sub
mov
mov
es
repnz
sub
pop
cld
call
scas
out
in
pop
push
hlt
lret
sbb
cld
fcompl
and
or
add
mov
jle
sti
lods
call
push
and
xlat
pop
outsb
xor
bound
sbb
push
dec
loope
sbb
stc
cmpsb
out
inc
mov
add
lcall
insb
lret
inc
int
sti
cs
cltd
aaa
das
or
mov
mov
push
in
push
popa
or
dec
dec
enter
call
sbb
dec
dec
xchg
sub
sbb
cmc
jo
insb
mov
jl
push
pusha
fldenv
les
fldlg2
push
mov
orl
and
add
loope
cld
shrb
out
call
shrb
mov
add
and
fdivs
rol
out
mov
jae
int3
dec
sbb
out
call
jo
out
test
xchg
push
mov
sbb
mov
jae
sbb
mov
bndstx
push
inc
hlt
xchg
sbb
mov
js
call
loop
mov
test
aas
ret
cmp
cmovbe
dec
jmp
leave
std
pop
push
xchg
inc
add
rcll
cmp
sbb
out
dec
pop
jmp
lock
and
rolb
cmc
pop
cmp
out
enter
bound
aas
lds
les
leave
fistps
mov
test
pop
jno
pushl
mul
pop
adc
jle
arpl
mov
mov
in
xchg
out
rorb
bound
mov
fnstenv
arpl
inc
pop
push
pop
cmp
sbb
jno
out
inc
bound
cmpsb
sbb
mov
sarl
sub
jmp
lods
arpl
lods
jno
cltd
or
outsb
enter
pop
jno
fidivrl
and
add
flds
shl
aad
leave
imul
sub
call
incb
cltd
mov
sbb
int
movsl
popa
jmp
call
xor
fcmove
push
call
cmp
aaa
ret
test
cs
cmpsl
adc
sbb
push
xchg
mov
add
ss
push
add
or
mov
mov
push
addr16
add
inc
test
sbb
pusha
add
mov
popa
fnstcw
cli
mov
je
and
lds
add
mov
and
out
and
or
popa
fsts
mov
into
adc
add
pop
cmpl
mov
add
push
push
push
fdivr
decl
mov
xor
jb
ds
std
les
add
loopne
cmpb
fmull
adc
jae
mov
jno
add
push
pop
and
faddl
jmp
mov
mov
insb
mov
ja
cmp
jbe,pt
mov
ja
add
test
and
fildl
cmp
jge
inc
jb
mov
pop
out
mov
es
jmp
or
fldcw
daa
out
mov
iret
push
xchg
sti
xor
cmp
jmp
sub
inc
mov
aam
or
in
dec
xchg
cs
fildll
sbb
sbb
incl
fwait
jmp
cmpb
ltr
fwait
inc
add
adc
out
cmp
or
adc
mov
nop
and
or
add
add
pop
lret
movsl
sbb
push
fwait
sub
fsubr
add
add
or
pop
xor
push
push
sub
mov
stc
add
sub
push
sbb
fldl
mov
mov
orb
mov
mov
pop
xor
out
pop
adc
push
inc
add
xchg
sbb
sti
xor
jp
cld
aam
ret
inc
jmp
lods
je
jmp
das
fwait
add
das
push
mov
pop
out
add
outsl
jmp
pop
xchg
add
adc
add
pop
fstps
fs
jmp
fisubrl
out
pusha
in
push
adc
pushf
pop
stos
rolb
pop
jl
xchg
rolb
je
popf
jne
lods
ret
dec
adc
fadds
add
test
test
and
push
adc
or
dec
inc
xor
mov
adc
lock
inc
addl
xorl
cld
adc
add
rclb
push
movl
clc
cmp
mov
paddd
cmpb
jge
jnp
imul
test
add
xlat
cmpl
fisubl
bound
imul
jmp
fsub
fdivs
lock
mov
movsb
repz
add
bound
add
aas
cli
mov
por
or
sbb
inc
or
mov
out
hlt
add
ds
add
cmc
xchg
jo
out
xchg
out
ljmp
outsb
jo
mov
sbb
call
pop
or
iret
adc
xchg
jecxz
ficomps
ljmp
mov
cmp
fnstenv
vphsubbw
fisubrl
add
fdecstp
xor
pop
xor
add
fwait
mov
out
push
cmpsl
decl
cwtl
mov
sub
sbb
nop
cmp
lret
mov
mov
and
jmp
shr
daa
add
add
add
mov
roll
in
and
fmul
aaa
shl
int3
inc
push
aaa
daa
out
addr16
sub
push
mov
mov
xchg
xchg
jb
mov
pop
out
xor
popa
flds
repz
pop
ret
outsb
fwait
jg
subl
push
fstpl
add
sbb
adc
cs
cmp
stos
jno
push
xchg
mov
sbb
cld
incl
call
loop
pusha
faddl
xor
out
out
mov
jecxz
adcl
jmp
add
sti
dec
pop
sti
xorb
ljmp
fildl
call
daa
mov
dec
sub
xor
shrb
push
push
sub
add
faddl
and
je
mov
jg
cs
push
mov
sub
xor
add
mov
pop
cli
cmpsb
cmp
lahf
dec
iret
push
js
aam
xchg
pop
stos
or
je
cld
outsl
outsb
cmovo
aas
jb
out
pop
mov
inc
test
inc
stos
pop
sbb
cmp
adc
add
inc
xor
adc
add
mov
popf
loopne
jecxz
push
add
mov
mov
aad
sub
imul
inc
cmpb
fnstcw
ret
or
arpl
fnclex
sbb
dec
and
insb
call
in
adc
addl
sbb
cltd
jmp
mov
cmp
adc
ljmp
add
shlb
adc
cltd
jmp
popf
loop
lods
mov
pusha
sub
lods
fs
popf
push
cld
outsl
outsl
cltd
jmp
jb
inc
push
rcr
inc
add
out
add
popa
scas
push
shll
lea
push
inc
clc
adc
push
push
mov
iret
cli
cs
inc
hlt
imul
xor
loopne
add
std
sbb
outsb
adc
push
jne
xchg
out
push
lea
sti
ss
pop
into
aaa
arpl
enter
in
cli
mov
or
adc
int
and
adc
dec
adc
xchg
cld
add
add
add
mov
cs
mov
fadds
mov
fsubl
lret
pop
ds
or
sti
pop
popf
lahf
rcll
and
push
push
xchg
notl
loopne
mov
cmc
incl
sarl
cld
mov
add
test
xchg
test
test
dec
push
and
idiv
push
push
or
sarl
int
inc
push
pushl
xor
lret
mov
dec
mov
mov
int3
xor
mov
adc
or
jae
int
jecxz
mov
mov
jecxz
pop
add
call
das
inc
mov
push
xchg
push
lahf
push
and
mov
push
lret
movl
movzwl
orb
inc
push
fidivl
fidivl
mov
hlt
ja
cltd
jmp
adc
jmp
leave
sbb
pop
sbb
jmp
aam
xor
dec
mov
aam
push
fwait
lret
lods
pop
sahf
pushf
and
fldl2t
xor
stc
ret
mov
cmpsb
xchg
fcomps
das
sahf
in
movsl
adc
fldcw
jecxz
sbb
out
add
mov
push
outsb
int3
mov
push
mov
movsb
cmpsl
xchg
sub
add
sar
pushf
push
adc
add
test
add
push
mov
mov
loop
jmp
xor
inc
insb
jb
dec
test
or
in
add
xor
test
hlt
test
sti
jl
lods
data16
clc
out
adc
sub
rcrb
xor
dec
or
jg
das
aaa
mov
add
xchg
outsl
sub
mov
decl
or
pop
mov
add
fldl
jae
cli
ljmp
add
cmp
push
add
fildl
pop
movsb
mov
decl
adc
into
rcrb
dec
mov
aad
and
mov
push
mov
mov
mov
mov
je
iret
inc
cld
dec
outsl
cld
jmp
cmpb
addl
jns
addb
push
fldln2
call
ljmp
call
push
mov
push
rorb
and
test
push
test
jmp
ret
and
xor
jne
and
dec
dec
aad
jecxz
add
jge
pop
das
push
jmp
rclb
mov
or
dec
push
movsl
and
push
and
mov
inc
fstps
jae
stc
andb
std
shll
add
add
inc
xlat
cs
fnstsw
jno
ret
dec
push
mov
cs
arpl
repnz
scas
and
loop
and
fstps
or
lods
das
add
sub
adc
roll
dec
call
sbb
cwtl
fwait
lea
add
inc
inc
mov
dec
dec
insl
push
sub
mov
inc
dec
sti
bound
fwait
adc
popa
pusha
ret
sbb
loopne
pop
sbb
dec
mov
jl
sbb
and
roll
xor
insl
xchg
dec
sti
jmp
xor
inc
jmp
pop
test
xchg
mov
mov
aas
js
xchg
in
cmpsb
jmp
aam
sahf
jmp
mov
mov
jl
rorl
mov
pop
adc
cltd
imul
aas
and
and
incl
jbe
adc
or
and
sbb
aas
and
and
push
push
in
sbb
flds
dec
dec
sti
cmp
xor
sub
int3
aas
and
dec
test
sti
decl
sub
and
push
fadds
add
pop
pop
pushf
in
adc
fnstcw
pop
out
je
fmull
add
push
cld
add
push
pop
std
mov
mov
inc
mov
mov
jecxz
test
push
inc
bound
mov
idivb
adc
jns
loope
or
cmp
push
add
pop
sub
das
mov
ljmp
add
rclb
sub
inc
sub
add
into
imul
incl
mov
jmp
add
and
fstps
fldl2t
jle
dec
jmp
xchg
hlt
ret
jne
insb
sub
lret
shrl
fldcw
dec
mov
lds
xchg
cmp
fsubr
xchg
out
inc
scas
out
jns
dec
subb
add
push
test
cmp
or
cmp
je
flds
fstps
dec
inc
sub
test
add
dec
cmp
loope
dec
sti
insl
fldl
jecxz
cld
push
jns
lea
sti
mov
adc
pop
jecxz
cld
out
lcall
push
or
cmp
jb
popa
pop
flds
faddl
out
addb
popa
pusha
push
movsl
adc
lea
sti
xchg
dec
popa
sub
lahf
and
fisubl
sti
insl
pushf
mov
gs
sti
jmp
dec
dec
push
rcll
nop
add
cld
push
jmp
mov
mov
push
repz
jae
add
aad
lea
idiv
fs
sub
sti
incb
scas
and
add
imul
sub
aad
imul
retw
lea
rorb
lea
les
mov
faddl
call
pushf
xchg
sbb
mov
jae
out
sub
mov
call
gs
add
push
adc
stc
dec
xor
mov
jb
andb
aam
arpl
adc
and
adc
jmp
push
mov
cpuid
xor
push
jb
dec
loop
inc
cmp
je
xor
sub
mov
lret
cpuid
xor
mov
sub
iret
stos
testl
gs
jmp
jl
inc
ds
int
sub
ret
int
and
loopne
mov
cmpsl
fdivp
add
jo
popa
push
mov
mov
cmpsl
sahf
cmp
scas
lcall
mov
jp
mov
into
outsb
in
adc
fldenv
add
adc
inc
das
mov
push
sbb
loopne
sbb
testl
into
leave
js
inc
sbb
nop
inc
adc
jae
adc
pop
rcr
push
ret
push
lret
call
pop
cmpsl
xchg
sbb
enter
les
cmp
pusha
es
jg
movsl
int
bound
sti
add
popa
inc
cmp
jge
lods
push
mov
popa
daa
stos
push
dec
or
push
inc
ss
adc
lea
pop
xor
cmpsb
dec
dec
jge
xor
add
jnp
inc
add
pop
pop
ret
push
dec
mov
or
lret
xor
and
adc
movzbl
xor
adc
dec
and
ret
push
sub
sti
jae
sti
roll
inc
fwait
call
andnps
sub
inc
inc
mov
gs
data16
or
and
addr16
xchg
imul
roll
push
in
imul
adc
xchg
in
push
bound
push
jbe
add
and
or
jb
fbstp
das
mov
mov
pop
hlt
jb
subb
incb
sbb
jmp
dec
mov
ds
inc
lcall
mov
ss
inc
mov
xor
or
icebp
aam
push
push
add
ja
adc
inc
inc
sbb
cli
enter
fisttpll
pop
adc
mov
xchg
jnp
cmp
jb
mov
jle
fldl2t
add
xor
mov
xor
and
stos
mov
sbb
ljmp
xchg
and
fdivr
loopne
aam
push
inc
inc
and
ret
mov
fisttpl
sub
call
xchg
lds
mov
push
sbb
rol
mov
fsubrp
or
shrl
push
pop
and
cmc
fwait
sahf
fisubrl
cmp
and
cwtl
add
in
mov
negb
bound
xchg
popa
push
lock
adc
and
pop
and
push
pop
in
das
sub
jg
jmp
sti
test
fiaddl
mov
fadds
mov
mov
fsubrp
mov
flds
jb
push
repnz
bound
jge
jns
ss
notb
pop
mov
mov
add
repz
jg
adc
dec
xor
mov
test
add
push
jmp
adc
je
sub
mov
dec
sti
push
lods
push
repnz
push
jle
push
fidivrl
push
into
jnp
add
jg
fisttpl
outsb
cmp
sbb
aad
inc
mov
pop
shll
sbb
cld
jne
push
ljmp
das
jg
cwtl
add
jae
rorb
push
jno
and
mov
mov
mov
xor
and
pushf
or
cltd
add
stc
cmp
add
mov
cmp
and
adc
mov
add
gs
mov
mov
push
jmp
aaa
jg
test
lds
jg
inc
and
cmc
movl
rolb
cwtl
jmp
add
dec
fs
pop
lds
xchg
or
in
mov
xor
bound
add
popf
push
test
icebp
stc
xor
sbb
pop
pop
fs
push
rorl
dec
dec
xlat
aad
fildl
or
dec
testb
in
pushf
call
shr
mov
hlt
mov
cmc
stc
xchg
fmull
mov
in
mov
sahf
xchg
mov
popa
push
push
add
xor
sti
inc
flds
add
add
and
repz
mov
add
xchg
shrl
cmpsb
movb
addr16
ss
popa
pop
push
jmp
mov
shl
pop
into
frstor
push
jmp
or
add
nop
and
xchg
or
sti
lds
xchg
mov
jg
sahf
ljmp
mov
jl
mov
test
dec
cmp
dec
dec
sbb
repnz
mov
aad
add
jb
or
ret
ret
xor
xchg
jo
mov
cld
fcompl
pop
mov
repz
or
cli
xlat
mov
je
dec
add
add
fnstenv
rolb
cld
jl
jno
xor
or
mov
and
rcll
xor
jmp
lock
cmc
nop
fwait
loop
jmp
movsl
adc
dec
mov
jae
enter
jb
pop
ljmp
ljmp
jb,pn
stc
lret
mov
add
sbb
decl
outsb
xor
or
inc
push
jmp
mov
cs
clc
push
sub
out
sbbb
or
adc
push
jo
loop
out
daa
xchg
sub
sahf
sahf
xchg
xlat
mov
xorl
dec
mov
call
arpl
mov
mov
sub
xchg
in
shr
adc
sub
cmp
sbbb
fs
push
xchg
scas
mov
sbb
movsl
adc
mov
cmp
push
sbb
lea
fwait
cmp
xchg
das
mov
adc
sub
push
in
lcall
mov
popa
subb
fs
or
pop
cmp
popa
and
jno
add
mov
int3
inc
pop
pop
push
ret
fs
adc
std
je
xchg
rolb
loope
leave
fsubp
sbb
add
cmp
sahf
stc
movsb
lea
test
sti
xchg
outsl
push
into
cmc
bound
iret
pandn
pop
shld
xchg
cmpsl
or
mov
out
add
fildll
add
adc
call
xchg
dec
mov
dec
or
sbb
push
je
sqrtps
fildll
lock
mov
cld
call
xchg
sub
mov
dec
stc
mov
imul
adcb
sti
decl
inc
and
mov
repnz
fdivrp
mov
pop
cmc
jns
popf
push
add
push
call
inc
das
inc
addb
addl
sti
push
std
incl
jl
lahf
cld
jmp
xchg
lds
aam
out
sbb
mov
aam
out
aaa
add
out
mov
fyl2xp1
push
jae
adc
dec
adc
cmp
cld
flds
cld
call
sub
pushl
mov
cmpb
or
cmp
jns
bound
jg
sub
or
mov
test
jle
ret
test
data16
mov
mov
out
or
fmull
loop
jp
fstps
adc
cmp
fisubrl
insb
adc
jno
popf
fildll
push
in
sub
and
fnsave
fldenv
loopne
sbb
ljmp
push
cmp
mov
push
pop
movl
std
fnstcw
lods
repz
cmp
mov
and
mov
pop
jp
in
fiadds
imul
lret
add
shll
add
push
or
hlt
aaa
sub
fiadds
jecxz
flds
pop
mov
pop
flds
mov
fisttpl
not
sti
adc
clc
xor
out
popa
push
add
bound
add
inc
out
loopne
xor
call
jb
cli
or
movsl
popa
add
rcr
jg
lods
into
call
enter
add
arpl
test
lea
pushl
popf
outsl
pop
inc
inc
mov
sbb
add
ss
pop
add
cld
mov
or
lcall
push
cmc
jne
or
shlb
xchg
sub
arpl
call
mov
call
decb
xor
repz
in
pop
mov
sbbl
or
pop
lret
sbb
out
mov
lret
mov
xor
adc
mov
outsl
scas
dec
sub
aam
and
dec
mov
add
and
neg
out
nop
pop
jmp
in
adc
fsin
mov
mov
xor
mov
in
push
clc
adc
cld
xchg
sub
adc
xor
sbb
lea
incl
insl
inc
pushl
jae
mull
ljmp
sub
mov
pusha
stos
mov
sbb
cmp
call
jb
loop
lret
add
enter
movsw
fistps
mov
test
pop
cltd
jmp
sbb
lods
fistps
jns
xchg
in
cmp
imul
cmc
adc
into
jge
xchg
fldcw
pop
lahf
add
ss
call
pusha
lods
mov
mov
shlb
add
or
xor
jmp
push
sub
adc
pop
clc
in
xchg
popa
cwtl
add
jecxz
add
add
mov
pop
jmp
pop
clc
inc
add
sbb
rcr
js
mov
xchg
and
dec
cwtl
sbb
cmp
in
call
sbb
fnsave
sar
xchg
pop
xor
add
pop
xlat
mov
imul
pop
adc
popa
mov
and
mov
inc
push
and
mov
push
push
pop
aas
and
pop
addr16
push
into
test
xlat
aas
repz
addl
lahf
cmp
push
outsl
imul
sti
pop
mov
add
fwait
pop
add
mov
push
push
sti
lea
mov
mov
mov
lcall
cmp
repnz
pop
xor
jp
dec
cld
sub
cmp
push
add
jo
jge
inc
inc
add
xchg
cmp
or
sub
adc
pop
mov
shr
or
mov
sub
dec
es
fs
add
cs
adc
enter
xchg
and
imul
mov
add
test
andb
inc
mov
cmpsb
push
testl
xor
and
jmp
enter
lds
xchg
jmp
push
cld
sbb
iret
mov
mov
movsl
mov
add
jge
popf
fldcw
lret
data16
test
sub
gs
call
out
fisubl
adc
out
jmp
pop
sub
leave
and
jge
cmp
bound
das
inc
jno
insb
xor
jp
loop
bound
popa
pop
in
mov
push
movsw
add
sahf
inc
push
aaa
dec
inc
sti
push
popa
lock
inc
mov
out
fcompl
adc
inc
int
outsl
jmp
or
leave
fldenv
add
lahf
data16
lods
and
add
cmp
pusha
flds
push
sbb
add
inc
or
cmp
out
fldcw
sub
mov
adc
in
add
push
jo
call
ror
not
pop
cmc
inc
push
fsin
imul
rcll
add
ret
push
xor
mov
jecxz
mov
add
mov
inc
add
fiaddl
add
aam
or
jecxz
xor
jg
ret
dec
mov
pop
out
dec
sub
cmp
push
push
pop
inc
hlt
add
jecxz
cmp
cld
test
push
imul
xchg
repz
xchg
test
jl
pop
mov
jge
push
or
add
jbe
push
fsqrt
mov
movsl
shl
cmpsl
or
pop
lods
lret
cmp
mov
inc
repz
aas
adc
je
stos
cmp
add
jge
shll
mov
stos
mov
mov
cmp
adc
idiv
call
cld
or
das
fldcw
sub
mov
insb
pop
xchg
sti
add
in
fs
xchg
add
jmp
ret
dec
jb
testb
fidivrl
push
fistpl
shlb
jle
xor
mov
mov
xchg
cmpsb
add
xor
stc
outsb
add
xchg
lock
test
fwait
bound
mov
push
or
mov
scas
add
sbb
sbb
out
sub
inc
push
jb
aam
test
xchg
in
xchg
mov
ficompl
shl
and
mov
test
adc
inc
inc
int3
push
sub
je
iret
sub
or
adc
add
push
sti
adc
mov
push
leave
fsubrl
roll
fisubs
shll
sbb
jne
outsl
test
cmc
cmp
push
push
icebp
sti
test
int3
filds
push
push
push
add
jae
cmc
push
push
and
mov
jge
adc
dec
push
out
fs
mov
pop
pushl
mov
mov
pop
xchg
addb
testb
mov
add
fisubrs
arpl
mov
cmp
push
adc
test
jno
adc
push
ljmp
mov
jle
lahf
cmp
push
jmp
scas
mov
jp
popf
push
divl
mov
add
xor
nop
and
push
jae
or
adc
pop
mov
outsb
aas
call
add
push
cld
fldenv
cmp
fdivrs
xchg
jecxz
dec
xorb
dec
push
adc
jg
inc
inc
or
or
sti
loopne
xchg
ljmp
bound
clc
push
cld
add
dec
insl
mov
dec
sub
ljmp
mov
test
mov
inc
push
add
or
and
hlt
mov
adc
pop
icebp
xchg
jmp
gs
lods
add
hlt
ret
jae
jmp
pop
loop
sarl
xor
outsb
adc
pop
jne
sub
sahf
aad
push
mov
or
push
sub
loopne
xor
xor
nop
pop
cmc
sub
popf
dec
push
cmp
mov
dec
pop
fildll
je
rorl
add
add
lods
fcmovbe
lret
push
push
push
stc
inc
mov
movsb
insl
cwtl
sti
mov
mov
sbb
hlt
mov
rcrb
pop
pop
push
inc
sbb
push
mov
test
sub
fdivrl
out
fwait
hlt
cmp
sub
jb
inc
or
test
call
pop
mov
shl
sti
mov
sahf
inc
insb
mov
and
xchg
jae
xor
sar
lea
paddb
xor
aas
test
jg
sub
cld
push
mov
lock
movsl
dec
roll
jbe
rcl
mov
arpl
jl
sub
insb
shrl
into
ja
pop
jae
lahf
decb
call
cmp
jle
add
popf
pop
pop
ret
mov
pop
out
fiaddl
pop
test
mov
outsb
or
insl
inc
pop
jmp
mov
add
xor
std
mov
nop
and
stc
daa
ss
mov
stos
adc
test
inc
pop
push
xor
out
mov
cld
fsin
mov
or
into
push
add
cmp
or
mov
sbb
dec
add
inc
bound
lahf
xor
or
push
fld
loopne
lods
mov
adc
mov
inc
fnstcw
jnp
icebp
or
or
test
fidivl
adc
adcb
adcb
daa
push
cltd
add
push
xor
in
jmp
jmp
xchg
fcos
sbb
fbstp
push
lods
fistpll
movsl
fistpll
je
adcl
sar
cltd
jmp
sbb
mov
jmp
loopne
xchg
xor
rcr
fsubrl
push
and
inc
popa
fldcw
jle
sti
mov
pop
cltd
pop
and
sbb
xchg
lret
push
inc
int
fildl
cmp
push
push
sarb
les
icebp
or
je
imul
shlb
es
push
loop
je
fcmove
sub
and
jmp
bound
pushf
mov
mov
je
cmpsl
adc
cld
insb
sub
mov
add
cli
xlat
add
inc
xor
jne
call
jo
mov
sarl
mov
ljmp
lcall
sub
pop
adc
jmp
or
pushl
out
jmp
fsubrl
ljmp
or
fmull
or
pop
pop
out
dec
mov
mov
mov
ja
fnstsw
iret
inc
push
push
add
std
pushl
mov
sub
mov
push
bound
add
fstps
mov
mov
pushl
mov
sub
sub
adcl
pushl
jne
dec
xor
mov
cmpsl
iret
xchg
mov
adc
add
inc
add
pusha
cmp
sub
lock
lods
cli
add
pop
mov
std
jne
xchg
sub
push
xor
jne
push
xchg
scas
enter
ret
cmpsl
pusha
and
inc
mov
xchg
fldcw
jle
jo
inc
aad
add
imul
fldcw
push
push
add
rcl
and
xchg
jmp
push
push
adc
mov
std
in
insb
xchg
xlat
inc
out
mov
lea
in
add
icebp
outsb
dec
inc
leave
mov
nop
sbb
iret
push
jp
mov
ja
scas
jmp
add
mov
ret
mov
out
pop
in
sub
push
add
arpl
inc
sti
mov
sar
push
cmp
mov
sbb
adc
xor
movsb
cmp
icebp
insb
and
gs
push
jle
mov
push
test
or
jmp
bound
and
jns
sti
inc
arpl
push
jb
mov
xchg
fildll
call
imul
fiaddl
add
push
out
je
scas
adc
push
xchg
fimull
push
or
inc
or
in
adcb
pop
aad
test
enter
faddl
push
scas
add
push
xchg
ja
lret
fcoms
cld
fistpl
out
je
dec
call
add
and
dec
cs
xor
push
add
call
pop
sbb
test
add
and
sahf
cmp
rorb
dec
add
bound
test
pop
jge
xor
inc
or
bound
jmp
push
sub
fbstp
fs
adc
fs
lret
add
jo
push
loope
adc
pop
repnz
push
jnp
add
jo
cmp
pushf
adc
gs
shrb
jns
loope
adc
add
jmp
push
mov
fcomip
jns
mov
les
or
arpl
ljmp
jmp
cmp
imul
sub
adc
out
scas
xchg
push
fwait
add
outsb
js
push
mov
ficomps
jmp
dec
xchg
lcall
xor
add
mov
mov
in
int3
fsubr
add
xchg
icebp
sbbb
jmp
test
jmp
jg
sbb
or
xchg
xchg
out
fs
or
lret
out
insb
push
outsl
out
pop
push
rcl
pushf
enter
jg
push
xor
int
cmp
dec
xor
push
and
notb
inc
add
ljmp
pop
push
out
cmpsb
xlat
or
push
aam
push
out
outsb
push
add
shlb
sbb
add
shrb
shlb
std
and
and
ret
lea
das
add
sub
inc
add
add
flds
inc
cmp
add
and
inc
or
add
jecxz
inc
sti
loopne
inc
sti
xchg
add
and
inc
or
add
jle
inc
lret
mov
add
addb
mov
adc
dec
dec
lock
add
mov
mov
push
bound
cld
adc
add
insb
testl
and
addr16
call
jb
cli
mov
out
outsb
cs
and
jmp
cli
bound
lds
or
and
shll
or
add
or
fstps
mov
jmp
adc
call
xchg
push
aas
adc
mov
bound
push
push
cmp
pop
xchg
je
dec
xor
inc
dec
mov
mov
sti
imul
pop
in
sub
push
or
sbb
add
daa
mov
jo
lretw
push
dec
sub
cmp
mov
cmp
push
and
lcall
roll
and
icebp
push
and
lret
jbe
test
lret
lds
mov
inc
push
lret
push
dec
test
mov
pop
loope
insb
sbb
sbb
or
sahf
xor
or
bound
rorl
sbb
xchg
add
lret
loope
pop
sbb
pushf
out
or
cmc
xchg
add
lret
loope
add
jo
cmc
test
xchg
lret
inc
cmc
data16
pusha
cmc
jb
or
xchg
call
pusha
dec
in
leave
and
sahf
lret
bound
in
cmpsb
sub
fsubl
xor
mov
ret
dec
mov
clc
or
test
test
mov
test
mov
and
and
test
pop
lret
add
leave
je
add
sti
cmp
cmp
adc
lret
jne
cmp
call
test
xchg
mov
sub
and
sbb
fs
mov
add
mov
int
test
or
lds
mov
test
dec
jl
and
repz
push
cld
mov
add
mov
cld
js
and
jp
and
test
jne
sub
pop
cld
js
and
fwait
or
sbb
cmp
push
popa
mov
sbb
call
jno
push
push
xlat
inc
sbb
mov
clc
adc
dec
cmp
les
xor
inc
adc
mov
icebp
xchg
lret
sti
aad
insl
les
fiaddl
test
sbbl
outsb
call
mov
push
xor
pop
aas
push
pop
rorb
arpl
insl
pop
and
jnp
jmp
mov
pop
jge
dec
lods
pop
pop
scas
mov
imul
andb
les
add
out
add
scas
sbb
ds
add
sub
dec
add
and
lds
add
lods
adc
ficompl
jmp
insl
shr
cmp
sti
insl
mov
mov
adc
pop
addl
rorl
icebp
test
iret
xchg
lret
das
cmp
xchg
or
jb
pop
into
je
pop
in
jge
pop
pop
lds
dec
in
mov
cmp
pop
flds
and
dec
add
add
mov
fiadds
xor
xchg
out
cmovg
jecxz
push
mov
stc
add
pop
dec
and
add
sub
add
stos
pop
pop
add
push
jnp
dec
xor
movsb
dec
mov
mov
fmuls
and
and
pusha
pop
and
pusha
pop
and
pop
pop
and
pop
pop
and
pop
pop
and
pop
pop
and
pop
pop
and
xchg
out
je
faddl
addl
sti
push
bound
mov
lock
lea
out
call
mov
jg
call
add
inc
add
addl
push
jmp
and
xchg
cmp
mov
negb
call
mov
jmp
imul
cmpb
dec
lea
loope
jmp
ret
and
adc
fs
mov
sbb
add
jmp
addr16
cltd
jmp
xchg
out
inc
pop
jg
addb
mov
jns
rolb
orb
adc
outsl
push
jle
jo
inc
icebp
adcl
mov
aam
adc
popf
daa
out
add
adc
sahf
mov
lds
mov
pop
popf
daa
xchg
xchg
fsubs
and
inc
xor
dec
test
sti
jmp
dec
pusha
inc
add
and
fimuls
jb
fucomp
mov
fadds
mov
flds
jb
mov
jl
cmp
insb
orb
and
loope
lods
cmp
in
sahf
push
out
xlat
add
push
rclb
enter
pop
jl
pop
lds
fcmovnbe
adc
test
add
jp
mov
or
pop
cmpl
and
outsb
cltd
and
dec
mov
call
inc
adc
lea
lods
addl
lds
adc
add
inc
add
mov
mov
popf
lea
mov
dec
addr16
call
test
faddl
mov
daa
in
faddl
bound
call
insl
and
bswap
add
les
fisttps
jmp
mov
sub
scas
or
outsb
fiadds
sahf
and
pop
fiadds
bound
jbe
arpl
incl
add
idivb
loop
mov
push
aad
ret
decl
mov
mov
adc
push
jmp
lahf
lock
add
mov
xor
push
add
mov
jle
loop
and
pop
fstpl
add
jo
shll
cmpsl
pusha
aas
ds
loop
scas
jmp
add
fstl
loope
pop
pop
sub
dec
jp
in
jnp
mov
push
leave
in
adc
fldcw
jle
jmp
call
sbb
inc
mov
aad
les
in
pop
dec
ds
jnp
fldl2t
push
jns
or
push
frstor
add
orl
ss
js
stos
fcoms
mov
xor
jmp
mov
pop
dec
int
add
pop
flds
cmp
jmp
dec
fadds
push
cmp
loope
popa
push
shlb
pop
dec
add
popa
fsincos
and
test
jmp
imul
int
push
jl
cmp
pusha
push
add
or
push
add
add
int3
and
mov
std
call
je
pop
nop
dec
and
xor
cmc
cmp
addl
inc
das
fldl
leave
adcb
or
inc
and
mov
movsl
push
push
jae
addr16
pop
and
jae
xchg
pop
and
adc
fsubr
fadds
addl
icebp
cmpb
ud0
std
push
xchg
dec
and
sub
addl
xchg
sbb
and
mov
xor
cmp
repnz
inc
and
ljmp
cmp
add
dec
and
xor
mov
add
mov
push
jg
clc
loope
pop
dec
xchg
int3
push
xchg
sbb
and
add
add
or
add
fnstcw
in
adc
jo
ja
jle
xlat
bound
je
jne
xlat
add
bound
call
jns
sub
enter
cltd
mov
call
xlat
out
pop
inc
pop
subl
mov
fsubr
add
in
adc
jmp
add
sbb
xlat
in
outsl
mov
sub
int
fstps
fisttps
push
sahf
out
bnd
xlat
jmp
push
ficomps
fiaddl
out
lds
jmp
jmp
pop
arpl
insb
les
jecxz
push
adc
xchg
push
mov
add
push
enter
add
mov
call
bound
es
repnz
push
int
sti
push
stc
imul
add
add
aad
leave
add
adc
xchg
sbb
sarl
add
pop
push
add
leave
or
and
notl
add
popa
pusha
inc
int
add
test
sbb
cld
idiv
repnz
add
call
add
and
jnp
mov
leave
sbb
add
add
enter
dec
push
mov
mov
dec
fldl
xor
je
daa
mov
arpl
add
mov
ja
xchg
add
inc
and
nop
dec
or
xchg
add
mov
je
xchg
or
sti
faddl
mov
int
inc
inc
cltd
and
add
addl
mov
add
xchg
jnp
loop
jp
sti
test
mov
insl
mov
mov
mov
inc
call
sti
ficomps
push
xor
sti
out
imul
sub
jl
jle
and
nop
xchg
faddl
rcr
jmp
xchg
dec
jge
sub
pop
int
lret
cli
sahf
ret
add
imul
test
jecxz
repz
mov
flds
ret
and
sub
bound
and
pop
jbe
rorw
pop
push
cli
ljmp
or
imul
out
dec
jge
add
jnp
xchg
gs
mov
adc
scas
fisubrs
cmp
add
bound
decl
lret
fucom
dec
push
aam
push
cltd
jmp
es
sbb
lret
xor
push
sahf
fmull
cmp
inc
fstl
add
addl
jne
or
data16
push
call
mov
push
sub
inc
lds
or
clc
adc
outsb
jo
add
fnstsw
add
and
inc
jmp
mulb
popa
icebp
adc
add
cmp
enter
or
push
popa
xchg
push
jb
push
test
loop
std
out
decb
jb
stos
xor
adc
add
pop
ret
pop
sub
sub
mov
push
jne
pop
clc
or
outsl
sarb
xchg
mov
ds
jg
faddl
je
lret
lock
and
mov
or
add
flds
add
inc
jmp
push
clc
or
iret
jnp
aaa
jg
addl
add
or
add
js
add
jg
or
fdivr
sti
fsub
shlb
or
bound
daa
dec
jb
mov
add
mov
out
xchg
or
pop
mov
pop
jb
add
add
nop
mov
inc
outsb
jns
out
pop
mov
push
fsts
pushaw
mov
daa
shl
fadds
jg
std
push
xchg
mov
arpl
jmp
dec
jg
clc
push
lods
call
adc
mov
in
add
icebp
imul
xor
ret
jmp
into
adc
stos
shll
outsb
test
fcmovnbe
into
add
fucompp
add
aad
pop
rcrl
and
fcom
in
and
clc
fcmove
mov
and
data16
data16
inc
sub
mov
test
mov
xchg
xor
xchg
add
repz
sbb
inc
push
popf
pop
push
dec
xchg
jmp
push
xchg
sub
and
fwait
loope
addr16
loope
mov
add
cli
add
pop
jns
aad
or
sbb
stos
xor
shr
fldenv
flds
sub
add
lret
xor
lds
xlat
xchg
inc
das
gs
ja
or
jae
push
repnz
cmpb
jmp
mov
pop
mov
xchg
jae
or
aam
bound
add
fcoml
icebp
pop
jae
ljmp
filds
dec
lds
inc
lret
mov
orl
adc
repnz
mov
jnp
loop
jb
add
xchg
push
pop
sbbb
or
add
add
sub
dec
cmpsl
add
je
sub
cld
std
testb
shr
rolb
pop
test
xlat
pop
test
pop
mov
add
or
sbbl
cwtl
and
bound
sti
inc
dec
and
push
and
xchg
inc
lock
sahf
push
push
cmp
repnz
cli
add
repz
bound
or
add
jmp
cwtl
and
repz
call
mov
xor
dec
repz
bound
or
xor
push
cld
mov
sbb
pop
add
popa
add
and
clc
pop
add
cltd
sub
loopne
mov
pop
inc
push
repz
je
fxch
push
add
sub
mov
xchg
xchg
loope
repnz
add
fsts
add
cmp
leave
in
testl
mov
xchg
mov
add
fimuls
jle
sub
aad
inc
ds
xchg
jmp
sub
jecxz
pusha
mov
mov
sahf
mov
in
in
push
popf
daa
push
push
sub
shlb
jmp
mov
mov
sub
pop
adc
xchg
mov
xchg
popa
add
or
adc
fstl
lret
and
sub
inc
or
lods
test
fdiv
jmp
pop
inc
and
add
add
jge
in
rolb
sbb
pop
jmp
popa
push
inc
or
push
inc
add
sub
mov
and
rclb
xor
dec
inc
and
push
divl
jb
and
jb
and
hlt
add
adc
or
test
add
inc
xchg
and
add
leave
notl
sbb
dec
push
adc
mov
mov
test
mov
add
push
push
hlt
add
jl
add
and
rorb
call
sti
fnstcw
and
enter
fcomip
call
repnz
loop
and
or
inc
adc
popa
repnz
push
cmc
and
sub
xchg
sbb
je
push
xor
aas
bound
or
ss
clc
xchg
into
cld
aaa
push
out
or
mov
pusha
and
repnz
or
into
sub
sub
and
repnz
add
out
push
or
repz
loop
add
daa
test
imul
cld
mov
jp
xor
cmc
call
je
ds
outsb
int
lea
xor
dec
mov
adc
outsb
mov
clc
sbb
mov
fnsave
stc
inc
bound
sub
repz
fnstcw
push
jle
adc
ja
stc
inc
enter
outsl
loop
ficoml
divb
inc
lea
jmp
xchg
jno
ljmp
adc
mov
leave
xchg
dec
sbb
ds
je
ss
int
movsl
popa
adc
adc
add
das
cmp
pop
push
sti
jne
jae
sahf
sub
sti
aam
jmp
and
aas
sbbl
cmpsl
push
add
mov
flds
mov
dec
push
lds
call
call
xchg
out
ret
orl
test
push
push
lods
or
insb
or
mov
adc
pop
push
push
testl
push
stos
adc
jne
in
jmp
dec
int
popf
loop
inc
add
mov
xchg
push
adc
push
lods
or
adc
dec
std
in
daa
add
add
dec
pop
and
dec
mov
adc
bound
andl
ds
das
hlt
insb
inc
bound
incl
lret
ss
shrb
enter
push
push
icebp
aas
bound
or
decl
mov
gs
inc
or
xchg
or
add
add
cli
sub
adc
add
pop
sub
mov
push
insb
push
add
push
fldcw
in
or
fstps
insl
push
fsts
add
sbb
or
pop
lods
test
push
jle
mov
cmc
inc
bound
pop
call
cmpsb
fxam
xor
mov
mov
and
fmuls
jg
clc
repz
cltd
jmp
dec
inc
mov
call
repz
pop
or
insl
in
fsubrs
stc
inc
bound
mov
clc
xor
test
add
push
hlt
adc
test
mov
add
add
pusha
je
pop
insl
and
fstpl
je
cmp
sti
hlt
push
out
jmp
push
imul
cltd
or
mov
aam
into
inc
jmp
xor
xor
out
and
popf
mov
add
insl
sbb
sub
shlb
insl
or
add
popf
or
mov
notl
and
fdivs
insb
dec
fldl
add
call
test
mov
decl
fisubs
cmp
adc
test
loop
add
xor
divl
notl
and
in
testb
insb
inc
add
testb
loope
je
add
dec
xchg
divl
movsb
call
add
mov
add
sarb
outsb
add
or
mov
mov
inc
push
mov
pop
mov
jle
out
jae
shll
ja
mov
bound
imul
inc
push
sbb
mov
pop
inc
fstpt
repz
ja
out
aas
bound
and
add
stc
add
push
or
jecxz
push
push
inc
lcall
push
rorl
xchg
int3
std
push
insb
es
call
cmp
adc
in
pop
mov
add
sbb
imul
sub
mov
xor
outsb
cmp
icebp
rorb
repz
in
aam
in
out
adc
sub
mov
mov
push
out
cmc
enter
flds
pop
pusha
cmp
mov
out
pop
into
test
ret
mov
xchg
or
int
hlt
sub
sbb
add
scas
insl
adc
sbb
dec
out
adc
xor
in
push
popa
mov
add
icebp
mov
popa
flds
cmp
fnstcw
mul
mov
jmp
pusha
flds
bound
add
cmp
out
mov
repz
call
popa
jmp
cli
and
xchg
cmc
gs
lds
push
mov
push
int
add
xchg
add
add
in
outsb
or
and
mov
lea
push
mov
push
pop
and
mov
add
ss
idiv
negb
xchg
lret
popa
shlb
shlb
and
jnp
add
mov
add
mov
inc
repnz
repnz
mov
add
mov
dec
add
lret
leave
push
test
push
mov
adc
add
mov
jg
xchg
and
jns
and
sti
testl
in
dec
fistpll
fists
out
movsb
inc
bound
and
add
jp
mov
jge
mov
out
hlt
mov
and
dec
mov
inc
call
popa
add
cli
add
out
adc
ffreep
push
push
xchg
lahf
sbb
dec
push
aas
bound
call
stc
mov
ret
xor
adc
es
std
gs
pop
adc
shrb
xlat
inc
bound
sub
cmpsb
cmc
pop
push
idiv
lret
sub
and
cld
push
fstps
fstps
add
insb
data16
mov
fldl
in
fldl2t
xor
loope
inc
bound
mov
decl
lods
add
pop
add
pop
jbe
movsl
add
movb
adc
add
stos
mov
mov
mov
icebp
cli
jl
rol
sbb
xchg
sub
in
sahf
pop
in
insl
popa
flds
cmp
insl
mov
xchg
push
stc
bound
repz
popa
inc
or
fcompl
inc
lds
push
xchg
je
adc
std
mov
sub
xchg
mov
xchg
mov
insb
mov
repnz
pop
gs
add
insb
fsubr
stc
rorl
or
test
iret
scas
out
inc
add
out
jne
or
fs
adc
fildl
mov
out
add
loope
repz
mov
dec
add
hlt
ud2
shll
adc
adc
adc
divl
pop
adc
test
fiaddl
mov
test
dec
lea
push
ds
jmp
das
call
add
sub
aas
bound
cld
add
addr16
daa
push
inc
incl
add
call
data16
cli
ja
out
aas
bound
jne
imul
aaa
and
bound
add
dec
jp
out
gs
jl
add
bound
adc
aas
bound
call
fnstcw
pushf
bound
push
add
ret
mov
mov
and
fnstcw
inc
bound
daa
dec
jg
xor
and
cmp
std
lds
in
xchg
stc
movsl
in
push
aaa
arpl
jmp
inc
bound
call
test
pop
loope
pop
pusha
aad
mov
mov
jns
test
jbe
mov
jmp
clc
adc
roll
cltd
jmp
imul
js
lds
add
aad
sbbb
push
mov
test
xor
mov
pushf
xchg
and
push
lock
adc
add
xchg
sub
sbb
jp
adc
lds
in
adcl
xchg
push
inc
aad
xchg
insb
shr
pop
inc
sti
cld
jne
inc
jmp
mov
push
sarb
fists
rolb
fldt
xchg
and
ljmp
shrl
mov
aaa
xchg
add
jmp
dec
and
punpcklbw
xlat
push
pop
lret
xlat
push
mov
out
decl
pop
dec
and
push
dec
push
add
movsl
cmp
cvtpi2ps
mov
rorb
int
loope
lcall
and
flds
add
xchg
and
call
xor
jnp
addr16
je
int3
dec
and
jns
add
idivl
notl
bound
je
pop
nop
and
fistpll
pop
add
lret
jmp
jae
and
cmp
sbb
jne
xchg
icebp
inc
jo
jle
push
dec
add
arpl
bound
stc
and
push
sti
fstp
adc
out
sbb
in
push
add
mov
sbbl
stos
jnp
xor
add
leave
jp
xchg
sti
test
jge
int
add
fcomps
jle
add
xchg
pop
jmp
mov
int3
mov
aad
push
in
add
sub
fstpl
aas
ds
out
aas
inc
shll
aas
inc
aad
aas
fstpl
stos
sub
jb
data16
jp
lods
pop
orb
add
mov
add
jge
icebp
push
push
arpl
add
aam
into
pusha
flds
jb
fldl
sbb
mov
cmp
sbb
aad
pop
sti
cmc
push
lds
adc
call
addb
out
xchg
test
sti
pop
cmpsb
jmp
dec
mov
fstpt
mov
stos
insb
and
dec
pop
sti
jne
mov
in
sbb
cmp
dec
stos
jecxz
jmp
sub
dec
mov
cmp
sub
adc
fs
mov
inc
in
mov
out
lcall
call
jmp
gs
cmp
aas
xor
pop
mov
cmp
xor
adc
pop
mov
dec
xor
sub
test
call
push
xor
scas
cmpsb
test
das
fnstcw
les
add
dec
add
jns
loopne,pt
xchg
daa
jg
inc
mov
je
lcall
gs
and
and
add
insl
inc
and
shlb
jnp
call
lea
sub
mov
das
xchg
jno
sbb
lock
dec
xor
divl
ret
mov
rolb
lock
or
cwtl
add
bound
cld
mov
movl
cltd
in
outsl
cmp
inc
add
test
mov
jmp
pop
popa
jno
add
insb
orb
mov
sbb
cmp
lret
add
pop
test
rclb
push
mov
cmp
repnz
sbb
fs
xchg
mov
push
in
sbb
xor
outsl
mov
sbb
ja
testl
push
lods
iret
add
mov
add
mov
jmp
lahf
outsb
cld
fimuls
fs
int
xchg
jne
movaps
sarb
pop
push
cmpsb
lahf
loopne
call
xchg
mov
jmp
jae
pop
pop
mov
mov
push
stos
loop
popw
push
adc
adc
popa
push
flds
jmp
call
icebp
pop
je
icebp
push
mov
pusha
flds
bound
mov
adcl
xor
cmc
adc
push
xchg
add
pop
mov
add
flds
add
or
xchg
pop
adc
jnp
push
fistl
mov
mov
or
pop
in
adc
dec
push
add
das
mov
sbb
add
pop
bound
pcmpeqb
adc
or
notl
outsb
mov
notl
bound
or
lret
jmp
add
daa
jne
ja
adc
lods
call
add
jmp
jmp
call
adc
call
call
adc
les
daa
and
adc
jle
cli
xor
stos
in
inc
mov
stos
cmp
add
wbinvd
mov
out
inc
xchg
into
dec
je
sub
cs
xor
sbb
sub
pop
stc
fmul
mov
mov
cmc
mov
stc
scas
jo
lods
out
push
movsl
out
out
in
ss
mov
cmc
nop
push
mov
xor
and
insb
ret
notl
fldt
cltd
jmp
inc
enter
xchg
int
mov
mov
inc
sub
jae
ret
faddl
push
and
out
jno
es
fnstcw
out
mov
gs
or
and
mov
add
fstps
inc
mov
jno
add
cs
push
jb
mov
xchg
in
push
pusha
adc
scas
mov
sub
add
gs
fiaddl
jmp
sub
daa
test
push
pushf
jmp
pop
flds
fldt
clc
push
dec
pop
jmp
pop
flds
xor
test
cmc
loop
add
add
add
xchg
add
mov
sti
add
cld
or
or
and
dec
rorb
push
test
cmp
cmpsb
sub
add
lret
fsubp
add
je
xor
push
decl
jae
je
in
mov
push
jle
jp
add
dec
dec
mov
and
dec
dec
push
and
push
cmpsb
push
lea
xchg
add
and
dec
scas
mov
push
xchg
imul
bound
sbb
inc
pop
or
inc
pop
pushaw
aas
rclb
enter
icebp
call
mov
inc
loopne,pt
xchg
int3
in
add
jno
insl
pop
les
xor
dec
clc
rclb
ja
sbb
jne
je
jae
and
repnz
fnclex
pcmpgtd
sbbb
lock
fldcw
inc
mov
xchg
in
jno
mov
shlb
push
xchg
jae
push
flds
ret
and
mov
jg
add
stc
push
icebp
sbb
aaa
jle
pop
xlat
xor
pop
call
sub
xchg
aad
sbb
add
xor
inc
push
lcall
jmp
push
fldl2t
push
call
add
cmp
flds
push
fsubrl
loopne
add
lods
dec
aas
arpl
loope
ficomps
flds
mov
mov
add
popa
flds
popf
lds
dec
popa
flds
popf
mov
flds
jl
bnd
popa
fldenv
jnp
push
andl
cld
push
movb
or
into
mov
mov
imul
xor
jae
adc
loopne
icebp
cli
mov
xchg
mov
mov
imul
add
push
mulb
sub
lock
divl
add
adc
fadds
push
pushf
les
pop
into
sbbb
xlat
cmp
mov
xlat
cmp
push
mov
mulb
cmp
movsl
mov
add
pop
cmp
add
mulb
mov
pushl
icebp
sbb
and
dec
pushl
cmpsl
adc
mov
cs
sti
bound
out
jb
sahf
lock
out
mov
and
arpl
and
lock
xchg
popa
ja
adc
call
loope
push
je
jmp
xor
mov
cmp
je
outsl
mov
cli
mov
icebp
lcall
scas
cli
movsl
jecxz
addb
lock
call
jecxz
popa
add
add
sti
mov
mov
insl
pop
mov
lock
lock
dec
fxch
mov
mov
add
fsubr
or
mov
mov
fdivrs
jne
les
push
jmp
sub
fldl2t
or
fnstcw
mov
out
fidivrl
into
fisubl
mov
filds
adc
mov
sti
mov
sub
fists
mov
stc
add
fnstcw
sub
adc
test
sbb
pop
mov
sti
or
xchg
sbb
je
jg
dec
sbb
push
imull
pusha
dec
or
add
mov
call
arpl
add
xlat
cmpsb
xchg
or
in
daa
or
mov
sbb
and
jb
std
fs
fcos
call
out
add
ret
mov
stos
fistpll
and
add
ret
aas
or
push
dec
add
in
aad
add
jge
mov
push
je
push
add
or
mov
add
fadds
xchg
mov
in
inc
pop
mov
loope
popf
sahf
adc
add
mov
adc
imul
mov
fildl
push
xor
mov
add
add
mov
jb
mov
cmc
shrl
or
or
sar
mov
incb
sub
adc
scas
les
ja
or
cmp
jnp
mov
mov
or
cli
cmc
pop
je,pt
fldt
push
fnsave
sarb
shrl
dec
leave
call
add
mov
dec
sti
dec
call
mov
je
fstps
cmpsb
push
inc
inc
in
ljmp
std
xlat
add
stos
jno
scas
add
pop
inc
jmp
repnz
bound
mov
into
repz
fsub
add
sbb
fbld
add
pop
adc
cwtl
fstpt
xchg
fsub
add
sbb
sub
mov
push
std
ret
push
adc
jae
das
or
mov
or
push
add
inc
and
sub
adcb
sahf
test
incb
cwtl
loopne
fs
loop
mov
push
push
std
sbb
test
push
cmp
add
add
add
popa
fxam
fadd
xchg
add
roll
roll
jmp
push
inc
or
call
sar
push
std
sbb
jne
push
push
std
insb
adcl
mov
lcall
cmpsl
cld
push
push
mov
and
cmp
iret
mov
or
cmpsb
cli
or
jp
addr16
divb
push
push
shr
out
ret
cmp
push
mov
and
add
incl
add
fdiv
je
mov
dec
mov
call
xchg
lcall
xchg
sti
mov
bound
cmp
add
and
inc
lret
push
add
cli
lods
inc
mov
mov
mov
lock
xchg
lcall
or
mov
enter
cmp
cmp
inc
bound
push
pop
mov
mov
icebp
pop
nop
and
sub
cli
sahf
cmp
bound
je
aaa
add
js
decb
lods
inc
cli
add
add
incl
bound
sahf
adc
sub
mov
fstps
jge
movsb
add
mov
add
cltd
jl
in
fisubs
dec
dec
bound
add
jl
js
sbb
pop
fsub
add
pop
in
add
push
test
cmp
int
push
sbb
mov
loope
mov
test
add
pop
cmc
or
jmp
jecxz
call
sbb
jle
add
call
cmpsl
loopne
push
lret
int
test
inc
sbb
jne
stc
test
jmp
sbb
fnstenv
insb
push
aas
or
iret
nop
imul
repz
gs
aam
loopne
jmp
sahf
insl
cmc
adc
aad
sbb
add
sub
pop
mov
pop
into
andb
rcll
push
pop
or
add
inc
adc
cmp
add
pushf
jne
je
les
or
orl
mov
pushf
push
push
sti
int3
mov
arpl
mov
add
outsb
adc
inc
jnp
mov
adc
aad
add
aas
xor
rcr
cmp
dec
pop
shll
les
sbb
mov
jecxz
inc
or
orb
add
dec
scas
or
faddl
test
daa
adc
dec
cmp
mov
jb
int
mov
cmc
mov
add
or
dec
sti
jg
adc
jo
out
fisttps
cmp
loope
mov
push
xor
add
push
testb
fcompl
and
dec
add
inc
incb
shlb
and
data16
sarb
sar
fcomi
or
and
jnp
lods
dec
xor
lods
mov
push
bound
push
out
add
and
jl
repnz
fwait
clc
into
inc
mov
xchg
lcall
mov
and
push
into
xchg
ljmp
or
inc
bound
sti
fmul
outsl
sarl
scas
mov
push
pop
fwait
clc
add
int3
push
imul
jb
cmp
scas
ja
fildl
bound
mov
sub
dec
xchg
bound
xchg
in
jbe
jmp
je
mov
push
icebp
bound
sbb
add
sub
frstor
mov
jp
push
jb
cmc
or
in
inc
popa
push
aad
jg
sub
add
stc
call
popa
push
leave
jo
cmc
adc
cmp
push
movsb
cmp
add
xor
mov
lds
aad
sbb
lds
stc
fxtract
dec
or
pusha
sub
pop
repz
ljmp
add
orb
inc
sbb
pop
or
daa
dec
push
push
leave
subb
call
mov
mov
mov
push
shlb
out
je
jo
test
fadds
orl
or
and
mov
xlat
add
call
pop
rclb
add
jns
push
mov
mov
aad
aas
in
sti
call
lds
or
rclb
outsl
into
lods
jne
sub
or
lods
idiv
mov
mov
mov
mov
push
pop
add
dec
adc
repnz
cmp
out
pop
lods
sti
xchg
dec
adc
test
idivl
adc
ret
xor
mov
jne
aaa
push
or
mov
sti
jmp
fldenv
lahf
movsl
mov
push
lods
and
pushf
and
lods
mov
add
fwait
add
leave
insl
mov
cmpsl
cwtl
xchg
shrl
dec
or
mov
in
adc
fsts
inc
bound
mov
outsl
leave
xchg
inc
lret
fs
outsb
mov
out
jge
call
add
ss
adc
out
add
xchg
push
sahf
fstpl
mov
adc
push
in
add
add
andl
test
sub
cli
fmull
fdivs
push
outsb
jmp
xchg
xlat
inc
push
fadds
jmp
ret
jmp
into
jmp
fs
cli
jmp
fld1
pop
mov
add
add
popa
push
lret
add
cli
out
loop
jns
inc
in
and
mov
dec
add
clc
adc
add
iret
pusha
cmp
add
stc
adc
mov
dec
inc
aaa
inc
inc
and
sub
add
or
call
test
ret
xchg
rorb
or
pop
mov
test
add
faddl
lea
test
add
sti
add
and
push
fs
mov
sub
adc
lock
jmp
add
jno
pop
mov
push
and
pop
rolb
bound
test
ja
adc
and
dec
sti
dec
bound
inc
bound
cmp
ja
jae
xchg
mov
jmp
jae
ds
sbb
out
loope
bound
fiaddl
pop
xchg
cli
mov
test
add
mov
jae
je
lret
jp
sar
test
jg
cmpb
add
sub
jge
rcll
bound
test
mov
push
insl
jne
call
test
enter
or
in
push
sbb
push
add
xchg
sbbb
pop
das
push
test
pop
or
inc
mov
inc
shll
out
xor
pop
push
xlat
insb
clc
test
jno
pop
sti
sub
xlat
sub
push
add
push
movsl
test
fsub
add
push
add
cli
out
adc
push
sub
hlt
sbb
cwtl
je
add
add
popa
ret
push
sbb
mov
push
mov
sub
push
sar
sbb
inc
jmp
mov
dec
sbb
xor
rcll
sar
in
inc
jmp
or
repz
rcll
dec
adc
ret
dec
in
aaa
mov
mov
mov
add
jo
jp
scas
sub
lret
aam
pop
add
add
mov
push
sbb
mov
xor
leave
mov
or
les
rol
add
or
push
pop
jl
cld
sti
fadds
mov
fisttpll
repz
xchg
sub
add
sbbb
push
jo
dec
lcall
dec
aas
inc
add
inc
or
insl
adc
add
fadds
and
aas
or
sbb
inc
mov
notb
bound
cmp
bound
inc
mov
ds
mov
fcomi
loopne
xchg
jb
lea
std
loopne
cmp
lds
inc
and
das
cltd
adc
leave
jns
sbb
in
aas
sbb
push
mov
mov
xchg
sahf
xchg
push
push
fnstcw
xor
and
dec
jno
decb
movsb
ss
sbb
sbb
xor
pushf
ja
jle
movsb
ja
testl
pop
sub
loope
add
out
int3
adc
rclb
cmpsl
out
dec
add
jl
push
pop
ret
jns
js
push
and
pop
sub
daa
add
lret
sbb
loopne
ret
cmp
and
inc
xchg
push
movsb
xlat
mov
out
in
sbb
enter
dec
loop
xor
mov
lock
rclb
push
add
sbb
fadds
test
xor
into
stc
mov
add
test
jmp
jmp
push
adcb
push
bound
push
inc
shrl
cmpsl
fldcw
pop
flds
cmp
inc
popf
pop
mov
mov
or
in
leave
sub
mov
leave
fcompl
dec
add
popa
push
fadds
add
push
dec
call
lret
jbe
pusha
add
jmp
nop
add
call
mov
push
inc
and
dec
inc
and
insl
sub
fsubs
mov
mov
jmp
dec
pop
mov
sbb
cmp
test
outsl
loop
std
jle
jne
jbe
push
mov
mov
mov
sbb
pop
rolb
notb
add
ret
repnz
outsb
loop
sbb
mov
inc
jle
adc
stos
push
or
mov
testl
rclb
out
add
jmp
sbb
jmp
call
or
fstpt
cli
add
jns
jge
or
adc
jmp
mov
incl
fcomip
call
add
cmpsb
and
incb
xchg
xchg
repnz
fdivs
add
mov
add
fstps
jle
out
and
pop
add
xchg
cmp
fstps
inc
in
ret
adc
cmc
fcmovne
and
out
daa
adc
in
es
mov
or
push
out
ss
cmc
aas
jo
call
mov
dec
mov
bound
xor
xchg
shrb
mov
adc
jp
scas
add
std
imul
adc
xor
push
mov
jmp
sub
aam
jmp
jmp
mov
in
movsl
lds
pop
add
jmp
movb
add
jmp
xchg
jmp
arpl
and
cmc
sub
outsl
sbb
jmp
push
mov
pop
inc
loope
and
push
push
push
pop
out
and
fs
cmc
adc
cmc
sbb
fadd
test
enter
dec
mov
mov
in
je
push
and
je
mov
push
inc
lret
pop
lds
inc
xchg
jne
xor
and
add
leave
xor
jmp
arpl
add
imul
aam
add
push
aad
add
cmp
call
and
add
cwtl
jne
mov
jo
push
or
sbb
mov
and
fadds
lea
call
add
mov
xor
jg
cmpsb
das
push
sub
dec
and
fbstp
adc
xchg
push
jmp
loop
mov
aaa
cmpsb
test
mov
xchg
xchg
xacquire
xor
jmp
mov
and
sbb
repnz
je
add
push
mov
shlb
jmp
sbb
dec
add
out
xor
and
fld1
push
dec
mov
loopne
jo
pop
and
in
xchg
adc
les
lds
aas
add
out
xor
mov
test
jae
fldcw
ficomps
lods
out
mov
fldt
rcll
mov
cmc
out
mov
fldcw
fisttpll
mov
adc
xor
lahf
push
addr16
dec
xchg
sbb
xchg
mov
add
fcompl
stos
ficoml
add
mov
fnstenv
xchg
and
pusha
and
or
dec
call
iret
inc
add
jb
cmc
adc
incb
add
jmp
jmp
xchg
pop
push
cmp
push
cmc
adc
stos
push
cli
jne
dec
dec
loop
xchg
nop
sub
fisttpll
out
or
jmp
push
mov
and
call
sub
test
add
fmuls
in
mov
push
je
inc
aam
mov
js
push
pop
mov
int
mov
cltd
push
into
pop
dec
mov
jg
divb
adc
and
call
mov
xchg
inc
lahf
test
add
pop
xor
mov
je
pusha
mov
pop
bound
add
xchg
sub
call
out
sbb
loop
loope
arpl
out
xchg
lahf
ret
ljmp
call
fiadds
ficoml
jmp
nop
fwait
sti
lds
and
rcll
call
jbe
xchg
ret
xor
mov
jb
mov
ret
cs
mov
aaa
pop
les
inc
mov
dec
scas
push
lea
or
xlat
and
lock
and
mov
call
call
jle
out
mov
das
rcrl
inc
shrl
pop
xchg
push
fnstenv
adc
das
test
cs
lahf
stos
loope
jmp
aam
lds
outsb
data16
fildll
adc
inc
bound
add
cwtl
xchg
or
pop
sub
push
sub
or
out
fsubrs
and
jmp
in
and
jmp
pop
flds
jmp
bound
out
jbe
sub
pop
pop
ds
fscale
cmpsb
mov
bnd
jbe
out
pusha
inc
or
mov
std
push
add
xor
arpl
jmp
pop
enter
cmp
dec
std
sbb
jne
or
divb
add
dec
pop
inc
jne
in
cmp
jle
dec
fiaddl
rorb
fiaddl
not
xchg
aad
pop
xlat
or
bound
sti
fldenv
mov
mov
pop
mov
sub
in
or
pusha
aas
and
push
notl
aaa
pop
push
fiadds
test
pop
mov
xchg
es
aaa
unpckhps
xor
jge
data16
mov
cltd
sub
adc
sbb
scas
sahf
fdivr
outsl
dec
in
aas
bound
jge
outsb
or
add
lcall
mov
lahf
add
out
sbb
daa
js
xchg
xor
cld
add
fisubl
sahf
cmpsb
loop
test
add
out
loope
int
popa
ret
out
fidivrs
ret
mov
ds
and
mov
xlat
adc
mov
inc
data16
fcomip
or
ds
mov
ret
std
ljmp
pusha
insb
loopne
fsub
add
cld
xchg
fsts
les
pop
add
fldcw
inc
shrl
ds
iret
imull
cs
pushf
popa
adcb
fdivl
jecxz
fldcw
lret
xchg
mov
bound
arpl
arpl
push
stc
add
add
inc
add
lea
adc
in
cwtl
je
xor
arpl
mov
std
and
rcrb
add
in
and
roll
jmp
in
imul
flds
sub
in
pusha
inc
std
sbb
and
jb
std
adc
std
adc
arpl
or
hlt
stos
cli
outsb
add
mov
into
int3
jmp
fnstcw
pop
fs
add
bound
les
add
jno
lea
repz
incl
pop
and
mov
jle
imul
loop
adc
mov
adc
or
add
lcall
rcr
add
lret
in
pop
jo
lds
repz
push
push
faddl
mov
jnp
aas
popf
jne
popa
fimull
scas
inc
adc
test
addr16
push
fpatan
and
xor
sti
pop
mov
testb
sub
and
lret
notl
push
ds
or
cmp
dec
push
or
std
mov
lahf
stos
aaa
pushaw
andl
add
cmp
ja
repnz
bound
cwtl
out
sub
pop
inc
xchg
outsl
sti
jns
push
add
cmp
fxch
xchg
adc
push
sbb
xchg
nop
fs
insl
mov
fcompl
loopne
imulb
int3
idiv
test
xchg
add
test
sbb
frstor
testl
push
cltd
fs
xor
loopne
fnstsw
add
adc
ret
fidivs
push
sub
and
in
daa
loope
jg
mov
xchg
leave
popa
add
lcall
popa
flds
push
adc
pop
stc
dec
repz
mov
repnz
sti
cs
pop
in
push
mov
push
loope
mov
jp
xchg
sti
sub
push
add
push
jae
leave
test
sub
add
in
jne
xchg
scas
xchg
mov
fs
sbb
push
leave
test
add
sub
addl
pushl
rorl
mov
rcll
sbb
xor
push
pop
adc
ret
push
mov
push
in
or
lock
jne
sub
dec
hlt
ret
mov
pop
jmp
test
or
mov
divb
in
jne
xor
call
cmpl
mov
sti
fsts
mov
fiaddl
rclb
addl
inc
or
das
mov
outsl
xchg
or
add
jle
mov
jns
xor
jb
mov
imul
or
ret
sbb
or
or
sbb
fnop
pushf
mov
mov
jle
adc
pop
cltd
enter
aas
add
ret
mov
dec
and
push
clc
dec
fnstenv
sbb
ds
add
idiv
call
fnstcw
xor
cmc
repz
pusha
sbb
jmp
int3
mul
mov
out
mov
call
stos
ss
push
inc
pop
fisubl
and
dec
scas
cmpsl
jp
jp
inc
pop
cmp
out
push
and
pop
add
jge
adc
ljmp
out
xchg
or
adc
mov
popf
outsl
xchg
cmp
lret
out
adc
lret
add
cwtl
xchg
add
adc
xor
aam
cmp
sahf
jmp
bound
daa
ffree
in
flds
ljmp
push
mov
test
test
xlat
and
rcll
scas
cli
jb
push
cli
xchg
jp
xchg
call
icebp
insb
hlt
and
sbb
lock
xchg
jle
ret
aas
jnp
mov
stc
pusha
flds
add
dec
xor
inc
test
add
add
out
push
jmp
sahf
sub
ja
in
xchg
add
xlat
jae
cmp
cmp
jle
push
fiadds
mov
mov
jne
add
add
jo
xchg
je
cmp
add
je
das
and
jo
xor
testb
push
sbb
add
add
dec
ret
add
or
jmp
inc
add
mov
mov
sti
jmp
cmp
xor
test
xor
lock
testb
icebp
lock
sar
popa
gs
jp
aas
sbb
mov
aas
sbb
dec
int
testb
push
das
adc
cld
hlt
incb
mov
and
fisubl
bound
jp
push
ds
dec
dec
cmp
pop
fidivl
frstor
in
mov
push
sub
mov
lock
and
jl
aad
lock
sub
js
leave
aaa
jns
leave
aaa
mov
cli
inc
bound
bound
mov
outsl
mov
mov
jl,pn
and
sbb
add
call
mov
push
stos
rcll
xchg
inc
aad
jg
sub
hlt
sub
repnz
or
jle
int
jge
fwait
inc
lds
faddl
jmp
pop
or
pop
std
and
adc
and
fs
sbb
dec
std
sbb
jg
sti
sahf
pop
movsb
jne
add
call
jb
std
sub
popa
flds
lock
jmp
sbb
pop
vpunpcklbw
add
jp
dec
lahf
push
frstor
dec
cmpsb
and
int3
cld
stc
mov
stos
jne
ss
pop
add
sub
dec
jne
loope
or
inc
jg
adc
add
lods
mov
decl
es
mov
and
shrb
mov
call
or
sub
mov
dec
dec
mov
daa
out
sysret
outsl
add
jnp
rcrb
negb
mov
add
jp
add
add
mov
add
jle
test
jae
scas
or
loope
xchg
cli
and
xchg
int3
or
cmp
lods
sub
xor
cli
cmc
outsb
popf
cmp
filds
sti
fnstsw
xorb
xlat
inc
cmp
inc
mov
jbe
push
imul
xor
xor
push
stc
pushf
mov
add
cmp
inc
lock
and
mov
popf
in
and
sbb
add
movsl
and
add
iret
repz
fldenv
fisubs
sbb
pop
test
push
sbb
popa
push
stos
fwait
xor
or
lea
icebp
sub
cmp
insl
lea
out
or
jb
and
into
arpl
pop
fldenv
fisubs
lea
sub
push
clc
and
leave
mov
jmp
and
xchg
inc
pop
iret
popf
inc
and
inc
movsb
jbe
in
and
fsubrl
mov
nop
cli
mov
hlt
repnz
jecxz
cli
insb
mov
stos
mov
mov
add
push
adc
add
pop
iret
stc
std
popf
xlat
dec
sbb
int
fisubl
fxam
iret
jae
cli
cld
adc
int3
push
sbb
push
jle
fistps
add
xor
gs
ret
or
mov
jnp
pop
mov
jne
dec
jmp
or
inc
pop
push
add
pop
adc
sbb
add
pmaddwd
idivb
pop
push
inc
int
lock
xchg
add
inc
scas
mov
outsb
or
lahf
mov
mov
jmp
hlt
xorl
add
mov
orl
bound
mov
bound
sub
jae
ljmp
jle
pushl
aaa
mov
es
jmp
mov
xchg
inc
sar
sbb
mov
jp
or
inc
pop
scas
inc
jg
mov
or
outsl
or
or
sti
in
cmpl
sbb
ffreep
sbb
into
popf
and
add
push
or
fxch
add
mov
std
sti
loope
mov
decl
pop
popa
add
fxch
mov
std
lret
jmp
shl
adc
push
call
ljmp
or
daa
inc
push
ljmp
or
aaa
adc
ljmp
xchg
adc
adc
test
cmp
add
icebp
out
pop
and
call
sbb
flds
push
ss
sbb
in
adc
insl
aaa
sbb
je
fcoml
loopne
pop
fbld
pop
jge
jne
je
cmp
leave
cmp
lret
icebp
fxam
jmp
cltd
pop
lahf
inc
pop
pop
sub
push
bound
sbb
push
bound
test
flds
push
roll
out
in
add
popa
aaa
sub
addr16
push
xlat
jge
push
and
add
adc
fildl
add
rorb
mov
or
testb
fiaddl
mov
pop
divb
je
mulb
jne
rolb
iret
jae
mov
cmp
mov
cmp
je
push
aam
dec
addr16
jl
cmp
sbb
shlb
mov
dec
adc
test
andl
jne
imul
sbb
xchg
fimull
mov
fs
incb
in
mov
sub
stos
jb
add
sub
jle
rcll
pop
repz
xor
mov
add
jecxz
dec
jp
fistpl
call
fsubrp
icebp
and
inc
or
mov
pushf
add
addl
xchg
sbb
or
jp
sub
dec
call
jmp
sbb
xchg
fnstcw
mov
add
call
dec
sbb
lret
add
bound
stc
pop
pop
mov
add
int
imull
mov
add
aad
sub
or
adc
call
pop
dec
mov
fisttpl
lock
push
sbb
mov
xor
sub
dec
push
adc
int3
push
or
push
mov
bound
test
add
add
outsb
push
push
loope
mov
jb
mov
pop
popa
fstps
and
add
clc
add
xchg
aam
out
or
add
icebp
jge
pop
mov
movsb
popa
fnstcw
pop
and
je
mov
pushf
cli
aaa
popf
clc
or
push
xlat
test
leave
mov
jmp
mov
sar
call
fsubs
pop
flds
sahf
add
addb
jecxz
add
popa
pop
sti
jns
flds
fsubp
mov
add
xlat
sub
movl
addl
add
add
push
adc
and
dec
mov
sbb
sbb
addb
pop
je
inc
add
xchg
into
cmp
dec
push
xchg
xlat
cmc
xor
add
cmp
rorb
call
adc
jae
xchg
cli
adcb
add
push
mov
push
ret
cmp
adc
mov
pandn
or
stos
call
adc
jnp
in
ss
jg
mov
mov
sbb
fs
add
sahf
jl
int
jp
inc
add
rcll
popf
ficoml
and
sub
pop
jge
adc
mov
pop
cltd
xor
arpl
roll
jmp
inc
leavew
into
fsub
add
adc
mov
lds
sub
fdecstp
inc
dec
pop
call
shll
int3
add
adc
std
xlat
push
sbb
mov
in
jp
insl
dec
daa
adc
lcall
cmp
add
mov
dec
xor
sub
or
sahf
inc
data16
mov
outsl
jge
fldcw
gs
sub
mov
lods
pop
fcmovnu
outsb
lret
addl
cltd
lcall
addr16
in
sub
push
xchg
test
mov
push
or
mov
in
cmp
push
or
xchg
pop
clc
add
jb
in
add
in
push
or
loope
decb
jmp
clc
sub
cmc
sub
xchg
xchg
jb
fsubrs
sub
dec
and
scas
push
or
add
pop
in
push
xchg
jle
dec
call
dec
mov
testl
xor
mov
loop
lock
sbb
shlb
cmp
xchg
movsl
cmp
xchg
imul
adc
push
shll
add
xchg
adc
mov
loop
add
jnp
inc
sbb
out
inc
mov
aas
xor
stos
mov
iret
adc
test
jns
aas
fs
inc
mov
dec
sbb
adc
jmp
aaa
add
and
ljmp
mov
js
inc
ds
lea
or
and
addl
lea
stc
jmp
sbb
xorb
sub
filds
popf
jae
pop
enter
mov
out
iret
mov
cli
outsl
and
inc
bound
fmuls
dec
lret
inc
addr16
gs
jns
ja
or
sti
push
orl
pushf
sbb
or
sarb
or
js
loope
push
and
call
aaa
sbb
aad
outsl
sbb
addb
call
and
xchg
ret
mov
daa
in
lock
pop
bound
adc
cmp
adc
xchg
mov
cmp
pop
mov
cmpsb
and
sub
push
mov
mov
adc
pop
fstps
call
sti
pop
flds
fs
jmp
inc
sbb
lahf
jmp
bound
loope
movsl
inc
in
jb
loope
lods
add
dec
andl
lds
push
jne,pt
xor
and
stc
hlt
popf
out
inc
jmp
popa
loopne
and
add
ja
add
int
ret
in
aam
xchg
cli
jmp
popa
fld
and
add
add
loope
or
call
mov
shll
xchg
cli
mov
repz
add
hlt
xor
pop
mov
jmp
pop
mov
mov
lahf
mov
or
cmp
add
lcall
dec
mov
and
das
mov
or
bound
mov
pusha
dec
and
add
test
test
addl
mov
xlat
and
mov
add
jnp
xchg
fcmovnbe
test
bound
sub
out
inc
sbb
mov
mov
cmp
pop
add
shlb
push
out
gs
cwtl
xor
jns
lock
lcall
jae
dec
jmp
fstpt
into
ret
push
add
imul
movsb
enter
subb
fisttpll
and
add
int3
int3
cli
add
fistl
stc
mov
inc
outsb
pop
rorl
rcll
stc
lret
dec
fcomi
fmull
inc
xchg
cmc
xchg
push
sbb
and
testb
fisubrl
dec
inc
pop
je
pop
lahf
pop
cmp
jne
pop
das
imul
call
cs
jmp
adc
pop
or
shl
xor
add
inc
icebp
imul
hlt
subb
dec
add
sbb
mov
fldl
aad
mov
jmp
jb
and
enter
outsl
jb
call
jg
push
xchg
pop
pusha
inc
in
sbb
or
push
adc
push
jno
flds
or
gs
mov
add
je
or
insb
sahf
push
mov
xchg
xchg
sahf
and
shlb
add
adc
push
stos
jno
push
jb
pushf
add
add
add
fadds
push
in
je
in
push
cmpsl
fwait
loopne
lods
fsubrl
mov
les
inc
jnp
pop
sub
movswl
and
and
pushf
cli
cmpb
out
add
add
xor
shr
sub
dec
mov
nop
test
test
es
mov
icebp
dec
adc
fisttpl
or
out
in
call
push
icebp
push
fwait
or
sti
rolb
cs
xor
stos
push
leave
stc
fadds
push
fs
jge
fwait
or
test
nop
insb
or
jne
rorl
outsl
adc
in
add
test
add
arpl
repnz
pushf
and
dec
cmp
cmpsb
aam
push
mov
rcl
xor
mov
incb
jp
psraw
add
or
cli
mov
adc
shrl
and
or
mov
out
adc
cmpl
add
bound
sub
adc
and
jne
jno
mov
mov
and
and
pop
movl
sti
jle
aad
testl
add
xor
sbb
mov
jo
sbb
ret
sbb
and
add
mov
out
inc
jmp
pop
sub
push
shlb
and
add
or
pop
gs
and
cli
inc
shrb
lods
into
aaa
adc
mov
call
ss
xchg
push
stc
fs
add
pop
or
pop
shr
popa
fyl2xp1
aad
mov
push
dec
pop
mov
cli
ds
mov
pop
das
lds
push
nop
jne
inc
daa
cli
popf
inc
mov
stc
jge
mov
stc
jge
mov
pop
inc
adc
jmp
aad
sbb
jmp
or
aas
aas
add
mov
in
test
fadds
add
pushf
push
and
aaa
pop
lahf
lock
add
divl
mov
cmc
push
das
test
je
jg
dec
fmuls
and
mov
xor
test
pop
testl
push
and
and
shr
outsb
adc
sti
adc
mov
pushf
mov
call
add
mov
test
dec
mov
les
mov
jns
cmp
imul
ds
add
lea
sub
xor
mov
fstl
add
xchg
cli
ja
adc
idivl
out
adc
and
clc
and
bound
xchg
int
mov
inc
jns
loope
add
mov
jb
adcl
push
inc
jle
test
jmp
gs
out
mov
insl
outsl
jno
ret
int
or
xchg
push
add
lock
fsubrs
xor
sub
lods
sbb
loopne
ss
and
add
outsl
ss
out
add
insl
inc
iret
rclb
add
in
lods
pop
lods
arpl
les
icebp
add
mov
xorb
fstps
mov
js
add
xchg
cld
fldenv
mov
fs
add
add
xchg
mov
shrb
mov
and
add
scas
mov
mov
sbb
mov
mov
pop
jecxz
stc
jmp
add
stc
flds
subb
jecxz
leave
test
jmp
mov
test
popa
flds
adcl
lea
arpl
cld
pop
fs
sti
rep
or
ja
repz
cli
xor
bound
mov
add
mov
xchg
mov
lds
inc
idiv
add
in
sub
cmp
andb
roll
jbe
or
xchg
call
mov
sub
fiaddl
add
stos
cmp
add
stc
jl
call
mov
out
aad
fs
mov
fldcw
imul
cmc
movsb
ficoml
mov
cmc
addr16
or
das
mov
pop
push
inc
pop
fwait
xor
daa
arpl
addr16
add
mov
loope
fs
mov
push
lea
cli
push
rclb
inc
sti
dec
test
jb
cs
mov
jnp
adc
addr16
stos
add
loop
iret
or
ficompl
scas
movsl
add
add
or
gs
outsl
shrl
cmp
fidivl
mov
ljmp
pop
pop
lods
add
data16
xchg
jg
add
fincstp
add
push
add
int3
pop
jmp
xchg
daa
add
mov
cltd
pop
jp
loope
call
add
fxch
ljmp
cmc
fwait
push
sbb
jp
cmpsl
test
add
addb
adc
cli
cld
and
pushf
or
push
jp
push
je
xchg
sti
jge
popa
aaa
jnp
jle
jge
out
nop
cltd
inc
stos
pop
cld
call
mov
adc
push
sbb
jno
roll
jmp
xchg
pop
push
rcrl
jmp
arpl
jle
sbb
jmp
fbld
add
jno
fwait
pop
flds
roll
add
sbb
cmpb
ret
jnp
fsts
lret
jg
mov
xchg
insl
mov
lcall
sbb
ret
rol
rcll
dec
sub
fidivs
cmp
inc
add
inc
pop
and
sub
sbb
mov
imul
cmp
xchg
fbstp
xor
ljmp
pop
cli
push
xor
out
sub
aaa
and
std
inc
bound
mov
pop
push
sub
sub
lds
xor
in
bound
adc
ret
or
rcll
inc
aad
inc
and
idiv
add
inc
icebp
outsl
jmp
lods
scas
loope
sbb
pushf
cmp
dec
sbb
les
int3
fdivrs
sbb
ljmp
add
or
movb
dec
xor
jl
clc
ljmp
adc
pop
push
add
dec
lods
sub
int3
mov
jmp
imul
add
dec
mov
jmp
mov
dec
or
cltd
rcrb
xor
aaa
fisttps
dec
stos
repnz
shr
cmpsb
inc
sub
cmpsl
into
mov
loopne
fidivrs
xchg
lret
xchg
cmpsl
add
call
and
push
iret
xor
push
clc
out
les
cli
adc
rolb
pop
jns
push
cld
pop
inc
addb
popf
call
or
sub
popa
es
cmp
stc
jo
mov
ss
inc
pop
popa
pop
icebp
jo
mov
fs
sbb
sbb
push
push
xor
test
push
pop
shll
or
inc
jle
mov
adc
stc
dec
sub
movb
push
mov
dec
add
popa
inc
push
adc
bound
add
lea
imul
add
or
in
cmc
jns
xchg
jne
jo
push
into
xchg
push
inc
or
inc
mov
pop
adc
jns
aas
push
and
xor
sbb
imul
loope
dec
push
mov
aad
add
inc
mov
add
fdiv
adc
inc
sbb
test
xor
cmc
ljmp
push
adc
pop
repz
in
pop
shll
and
sti
adc
mov
jne
movsb
cmp
out
cli
xchg
cli
repz
bound
cmp
xchg
push
sti
sub
ret
pop
test
outsb
je
call
mov
stc
xchg
sti
push
call
fbstp
decl
bound
jae
or
jg
aam
fistpll
add
mov
bnd
aaa
dec
xor
mov
roll
xchg
je
sti
fimuls
sub
outsb
dec
jp
xchg
popa
mov
xchg
es
push
mov
mov
fs
les
les
fs
into
mov
mov
dec
lods
daa
data16
dec
cmp
inc
add
loope
sbb
jg
scas
mov
lea
jb
pop
fldcw
cli
stc
inc
add
push
daa
insl
hlt
enter
sbb
sbbb
in
bound
out
sbb
sbbb
call
adc
pop
jmp
stc
imul
push
aas
add
mull
and
jo
fwait
rorb
lcall
repz
cli
jb
lret
jge
push
push
inc
adc
push
daa
mov
sbb
mov
addb
jmp
and
addr16
flds
jmp
sahf
flds
jmp
popa
flds
cmp
dec
cmpb
fadds
add
add
add
jnp
aam
jg
add
dec
push
add
dec
fldl
mov
call
test
flds
push
push
and
in
fnstenv
outsl
and
test
test
xchg
mov
jae
mov
jae
jo
add
fmuls
add
and
push
push
xor
das
nop
cmc
cmp
push
and
or
outsb
add
cs
int3
mov
pop
andb
jmp
add
pop
xlat
mulb
fisubl
decb
repz
add
scas
cli
das
out
inc
or
adc
and
std
jmp
adc
jno
pushl
jb
dec
out
repz
add
dec
iret
rcrb
and
add
stc
mov
add
fcmove
icebp
mov
out
es
mov
xor
xchg
cmpsl
mov
cmpsb
test
add
xor
jns
addr16
pop
jno
pop
fldcw
imul
adc
and
add
jmp
or
out
and
outsl
iret
insl
push
jmp
adc
outsl
jo
jne
mov
and
mov
outsb
dec
cli
xchg
repnz
add
mov
push
dec
cmc
es
call
insl
and
call
and
cli
dec
push
inc
cmc
add
jle
dec
jge
sub
adc
sub
insb
loop,pn
lods
flds
bound
call
mov
ljmp
mov
jno
inc
popa
flds
call
lahf
fcos
fldenv
cltd
mov
add
shr
mov
lret
add
add
lea
pop
adc
sarl
pop
or
sti
pushf
mov
in
push
in
fs
add
mov
push
clc
in
add
jne
jno
pop
push
push
popa
ljmp
push
adc
xchg
push
adc
cltd
push
adc
call
add
mov
test
pusha
mov
jge
add
pusha
gs
bound
call
xlat
sbb
cmp
add
inc
or
xor
add
inc
call
loope
and
xchg
jp
arpl
decb
fcomip
std
jmp
ret
dec
mov
sti
insb
cmp
bound
cmc
bound
mov
xchg
cmpl
push
mov
cmpsb
fdivp
or
roll
and
inc
or
bound
nop
fsub
xorl
add
pop
inc
sti
pushf
call
pop
cmp
out
mov
ja
mov
fldcw
add
fnstenv
or
sub
dec
data16
or
inc
lds
mov
add
fsub
in
pop
data16
and
sbb
or
push
cmp
add
xorb
sbb
in
add
fisubs
clc
jmp
pop
pusha
loope,pt
lods
lock
movsl
jbe
lods
jge
xchg
insl
aad
pop
lcall
lcall
add
and
cmp
jg
popa
popa
inc
add
jne
lcall
jbe
cmpsb
pop
sbb
xchg
pop
cs
ret
popa
fsts
pop
imul
aaa
mov
sbb
fadds
jmp
mov
add
xor
in
sbb
mov
cli
mov
loope
inc
pop
fiaddl
idivb
fdivs
pop
push
and
aam
xor
add
mov
sub
lcall
add
insl
bound
mov
add
mov
push
shll
cld
jp
pop
dec
dec
fimull
jne
pusha
call
push
dec
add
sbb
bound
mov
bound
data16
cmp
add
jge
fiaddl
idiv
outsb
sahf
push
jg
push
push
je
jp
xchg
mov
stc
sub
arpl
or
movsl
add
ljmp
cmp
arpl
mov
xchg
stos
push
ffreep
pop
push
fnstenv
mov
mov
jns
adc
arpl
sti
jmp
inc
aam
mov
inc
call
out
fsubrs
stos
loopne
add
cwtl
lret
cmp
fldenv
add
aas
dec
scas
pusha
cmp
xchg
or
sar
outsl
pop
cli
adc
add
sbb
dec
in
push
in
dec
dec
rcll
iret
pop
je
mov
sbb
sbbb
push
or
outsb
ds
dec
mov
or
mov
in
ret
pop
adc
and
mov
ja
outsl
mov
mov
add
outsb
adc
or
xchg
jb
fs
out
in
mov
in
and
pop
ret
cmpsl
mov
test
cmpsb
repnz
fnsave
pop
subl
add
or
jecxz
jmp
cmp
aad
sub
fidivrs
arpl
pop
adc
fiadds
cmc
jmp
push
jmp
popa
fxam
ljmp
or
pusha
inc
lds
jle
outsb
fldl
mov
fsubrl
jg
xor
adc
push
pushl
leave
jmp
repz
sbb
int
xchg
add
lock
mov
sti
jle
add
inc
adc
dec
mov
lret
aad
mov
popw
xchg
jp
or
lret
aad
into
xchg
mov
add
aad
sahf
pop
fldl
add
addl
or
inc
and
jnp
rcl
mov
iret
push
dec
ret
sub
orb
jle
add
sub
call
add
xchg
jle
je
sti
ds
or
add
bound
std
push
jnp
dec
inc
jmp
pop
loope
fdivrp
loopne
loop
loopne
adc
cld
lcall
add
and
fnstenv
fiadds
sub
add
add
add
pop
in
repnz
push
call
jg
pop
call
iret
cwtl
pop
pusha
add
push
xchg
call
add
xor
std
out
fstl
add
lahf
mov
jbe
outsb
leave
pop
pop
add
push
jecxz
fsubrs
inc
add
mov
pop
sub
add
mov
arpl
add
mov
pop
pop
jp
flds
jmp
inc
pop
inc
stc
jmp
adc
jl
push
out
sbb
xlat
jae
mov
adc
divb
outsl
xchg
jb
sub
jnp
xchg
jb
arpl
push
add
popa
push
dec
fldcw
fadds
bound
mov
or
sbb
adc
push
push
add
push
mov
flds
pop
repz
rcl
jb
push
fsubr
xor
push
repz
out
inc
imul
dec
pop
xchg
sbb
jnp
call
rcrb
enter
mov
ficoml
push
mov
push
jecxz
cmp
push
shll
call
andb
sti
fnstcw
add
fldcw
adc
gs
xchg
in
cmp
aas
testb
sbb
scas
ret
ss
lret
outsb
inc
adc
cltd
cli
out
sub
call
aad
inc
bound
mov
daa
nop
pop
xlat
cmc
jg
cmp
pop
cli
mov
jnp
push
adc
jne
gs
test
dec
mov
movsl
xchg
jbe
stc
addl
cmp
cs
or
incb
xchg
ja
inc
xchg
leave
cltd
mov
je
out
push
jmp
mov
and
cmp
sbb
sbb
mov
shlb
std
mov
add
and
sub
fistl
movl
cmp
mov
jl
mov
pop
add
xchg
cld
mov
pop
cmp
outsb
adc
mov
adc
pop
xchg
or
or
pop
pop
and
in
inc
out
mov
and
mov
xor
jge
out
or
xlat
jp
sbb
aad
clc
ffree
cmpsl
add
cwtl
jge
mov
lock
and
cmpsb
xchg
pusha
push
add
mov
jb
mov
pop
sub
pop
flds
insb
mov
js
jmp
pusha
scas
fadds
jmp
popa
pop
mov
flds
andl
push
cmp
stc
pop
mov
out
dec
divl
dec
cltd
cltd
inc
mov
cmpsl
push
pop
mov
mov
push
cli
pop
or
add
dec
pop
push
add
mov
mov
xorb
xor
test
in
nop
idiv
pop
push
je
pushf
inc
movsl
add
orl
sbb
xor
cmpb
ret
add
jl
pop
ret
data16
sub
push
mov
add
mov
dec
call
incl
add
or
mov
or
dec
int
pop
inc
xor
scas
imul
jg
clc
std
jmp
std
test
jmp
xor
gs
mov
pushf
jp
jmpw
out
cmp
sbb
mov
mov
and
inc
push
out
cmp
int3
fs
sahf
jno
ljmp
mov
iret
jae
lds
adc
xor
pop
mov
lcall
arpl
mov
or
jo
bound
je
add
mov
mov
push
or
call
icebp
adc
adc
sarl
out
fldenv
push
into
cmp
add
repz
js
imul
jne
dec
mov
call
mov
adc
dec
or
cmp
xchg
push
stc
cmpsl
jl
cld
icebp
in
sti
fdivr
push
mov
jno
add
xchg
add
test
je
fsub
add
mov
mov
pusha
jne
out
shlb
popa
flds
ljmp
mov
add
popa
push
nop
pop
popa
flds
add
rolb
add
iret
or
bound
or
daa
into
imul
pop
add
jecxz
flds
bound
negl
incb
data16
jb
mov
cmp
jb
dec
add
popa
push
cmp
push
xor
mov
add
gs
lods
and
add
mov
add
rcrb
adc
fisubl
enter
add
mov
cmp
mov
repnz
mov
sti
jg
out
jne
in
push
movsb
xchg
push
sbb
movsb
cmc
adc
sbb
add
push
and
ret
jno
out
hlt
adc
mov
sbb
add
sbb
inc
mov
call
mov
jp
mov
mov
ss
scas
dec
sti
outsb
fsubl
xchg
jns
push
push
jle
jle
jae
cmc
sub
dec
inc
dec
je
test
jle
push
sbb
mov
inc
aaa
xchg
push
jg
testl
sub
xor
out
jb
jmp
inc
pop
lods
lods
movsl
pop
and
mov
jge
fidivl
fbstp
es
jp
add
inc
je
flds
or
jns
mov
out
sti
xchg
xor
or
jp
push
mov
sti
push
fdivrl
lret
shl
bound
pop
orb
iret
add
fs
mov
mov
cmpsl
pop
je
out
add
insb
dec
call
fsub
add
fsubrs
lods
lods
fs
pop
jle
aad
push
sbb
jmp
loopne
or
jne
flds
adc
push
lcall
push
add
popa
out
test
call
call
popa
mov
add
popa
jl
push
pusha
je
sub
add
dec
mov
and
inc
add
popa
out
sbb
jmp
cmpsl
pop
add
push
addb
in
add
bound
call
xchg
icebp
add
cmp
lret
loop
mov
add
cmc
add
sti
fld1
sub
aaa
mov
ret
or
cmc
mov
fldl
add
lret
mov
movsl
cwtl
lret
add
jb
lret
push
mov
add
pushf
add
icebp
add
jnp
inc
and
es
push
lock
call
mov
jecxz
js
loope
push
add
xchg
or
bound
mov
in
paddd
out
mov
in
adc
jmp
repnz
jecxz
jmp
mov
outsb
aam
xchg
sbb
fnsave
jp
add
bound
je
mov
cmp
jp
xor
aam
ss
or
push
adc
jge
jmp
adc
jo
stos
lret
jmp
fldcw
add
sub
fdivrl
or
add
movsb
adc
test
out
int3
and
aam
mov
outsl
fdiv
pop
sub
push
lods
out
push
shrb
pop
and
std
ret
push
dec
insb
cmp
cmp
mov
add
sub
fldenv
repnz
add
adc
rolb
jg
sub
push
add
in
or
mov
add
stc
pop
add
popa
dec
dec
or
pusha
loop
inc
flds
adc
add
repnz
pop
mov
call
loope
test
popa
fsqrt
sbb
cmpsl
push
inc
cltd
fcompl
or
or
cmpsl
mov
push
sub
add
sub
jmp
popa
flds
jmp
popa
fldenv
push
insb
push
mov
flds
pusha
sarb
add
jnp
xchg
ret
add
add
lea
aas
fildl
add
xchg
push
or
cmp
decl
or
add
int
lock
testl
sti
push
ja
cli
daa
add
lret
mov
lahf
mov
mov
lahf
lret
fiaddl
lahf
mov
testb
adc
out
xchg
flds
add
add
out
ret
inc
jg
call
jb
add
mov
out
arpl
jle
sub
insl
rcll
es
jo
scas
arpl
push
fldcw
idiv
outsl
incb
retw
test
mov
test
jo
pmulhw
fsqrt
outsl
dec
sbb
repz
or
std
test
bound
jne
repz
sti
sub
mov
push
addr16
cli
ja
inc
push
and
dec
outsb
add
mov
fldenv
add
insb
into
int
jge
fnstenv
test
push
cltd
mov
mov
std
out
mov
int
mov
and
fildl
mov
dec
add
inc
shll
rcrl
add
fsubrs
add
cli
lods
int3
movsl
inc
sbb
int3
pop
arpl
pushf
mov
std
add
mov
cmp
add
cmp
loop
jmp
sub
push
mov
pop
je
or
call
xchg
push
mov
je
pop
sub
int
pop
fldcw
pop
lret
daa
into
jae
lret
flds
jmp
loopne
sub
fbstp
jmp
fists
popa
push
inc
int
cwtl
subl
add
popa
flds
pusha
out
add
mov
xlat
jns
mov
push
push
hlt
dec
jge
imul
sbb
add
jp
mov
in
dec
push
mov
imulb
lcall
xor
push
dec
push
and
and
sbb
cmc
lea
push
push
jbe
notl
js
or
jp
xlat
add
xor
decb
pushl
pop
dec
fwait
std
je
das
or
push
push
ss
mov
aam
adc
adc
xor
jle
je
rcrb
add
mov
out
out
pop
test
fbld
cmp
add
mov
push
loope
add
out
jmp
push
lea
sbb
stc
sbb
mov
sahf
adc
cmc
cmp
jmp
add
in
and
sbb
data16
popf
xchg
sub
sbb
inc
pop
push
and
fldcw
in
jecxz
bound
repz
test
dec
rolb
mov
mov
divb
call
mov
fnsave
imul
out
fneni(8087
adc
mov
pop
jb
sahf
sbb
roll
fs
mov
flds
add
bound
adc
lods
or
ljmp
ret
lods
call
jb
faddl
lods
lea
mov
shlb
in
cmp
fiadds
dec
jne
je
je
jecxz
jne
aam
and
xor
add
or
mov
or
or
push
cli
xchg
call
bound
lcall
jp
insl
mov
sbb
xchg
out
cmp
add
and
aas
add
add
xor
divl
pop
pop
lock
lds
mov
add
sub
cmp
mov
jl
xchg
sti
std
adc
cmp
mov
lea
mov
mov
imull
mov
add
testb
fildl
cmp
fisttps
push
pop
cmpsb
xor
mov
add
loopne
or
data16
push
push
insb
fs
sti
inc
cmp
imul
addl
xchg
outsb
cmp
mov
cmp
cmp
fiadds
mov
cmp
add
jl
pop
xor
add
add
outsb
cmp
fiadds
mov
mov
sub
mov
lods
loopne
mov
or
add
pop
and
push
xchg
jl
xchg
jmp
rorl
fsts
adc
bound
cs
loope
std
dec
flds
inc
sub
out
or
imul
in
xlat
mov
fadds
sub
lcall
jmp
sbb
int3
ljmp
fdivrs
jp
lds
cmp
push
test
fldenv
fcoml
xlat
filds
sub
mov
cmp
out
ds
push
subb
inc
xorb
xlat
sub
inc
jp
dec
fldl
cli
add
leave
inc
jmp
cmc
push
jo
outsb
ficompl
mov
in
push
popa
inc
shr
clc
push
mov
stos
push
cli
insl
push
into
add
and
mov
jmp
cmp
cmp
xor
rcrl
add
popa
into
xor
movaps
shll
cld
scas
add
xchg
popa
flds
sub
scas
xchg
push
add
push
cli
jmp
lock
test
dec
pop
jno
sti
faddl
add
add
xchg
sbb
mov
xor
jl
dec
cmp
or
fildl
scas
push
jnp
adc
cwtl
pop
cli
test
lret
andl
push
test
decl
notb
lahf
call
test
mov
pushl
xchg
dec
pop
test
into
or
push
bound
cmp
add
jg
inc
mov
cwtl
or
jp
outsl
cmp
pop
lock
bound
mov
add
bound
imul
aad
add
inc
mov
mov
push
cli
inc
mov
bound
cmp
mov
push
cmp
gs
add
add
mov
bound
add
inc
xchg
xchg
add
lcall
sbb
sarb
adc
bound
ljmp
shl
inc
adc
lret
fbstp
mov
pushf
adc
cs
mov
ss
push
add
push
push
add
loope
inc
ficomps
jge
dec
sbb
xor
lret
fldenv
push
lret
xor
icebp
daa
mov
in
add
loop
leave
lods
jno
push
cmpsb
dec
adcl
add
mov
xor
popa
flds
jbe
test
add
popa
rol
pop
xor
in
mov
push
cli
mov
jne
stc
mov
jae
cli
mov
dec
cltd
add
inc
lods
inc
stos
stc
filds
imul
or
lods
pushf
add
and
add
icebp
fstps
sub
aad
jle
pop
add
xor
pusha
decl
push
push
mov
bound
mov
pop
sub
add
insb
aas
aad
out
or
mov
jle
add
add
test
mov
das
or
mov
fildl
fsubr
sbb
mov
sti
sti
inc
or
add
mov
fucomi
in
pusha
or
mov
into
shr
ds
add
xchg
add
jmp
ds
fiadds
jmp
hlt
call
and
dec
mov
mov
and
in
bound
test
inc
in
xchg
sub
addr16
sbb
fmull
push
and
or
add
arpl
shlb
add
insb
inc
ss
jle
out
repz
fildll
lahf
push
fs
add
test
inc
pushl
xor
gs
mov
mov
push
enter
popf
aas
mov
mov
fsub
jl
inc
push
das
sub
inc
xchg
iret
xchg
push
shl
daa
add
pusha
clc
movl
mov
arpl
bound
cmp
in
dec
xchg
out
mov
inc
mov
out
pop
or
arpl
out
data16
add
push
les
fsubs
flds
testb
add
mov
shr
int3
stc
fcompp
adc
mov
lds
mov
pop
sahf
sti
mov
test
stc
mov
rclw
movsb
test
int3
in
out
gs
fsts
aaa
pop
lea
jns
call
adc
test
fiaddl
jmp
mov
stos
mov
push
pop
jno
popa
inc
aas
add
sti
cmc
mov
and
jb
inc
aad
inc
xor
add
push
es
inc
dec
iret
lock
adcl
push
adc
inc
cmp
add
fdivs
push
cld
adc
test
mov
ret
push
shr
and
jg
repz
add
mov
or
jmp
lea
inc
add
xlat
cmc
jne
into
int
add
cli
xor
adc
mov
fiaddl
test
lret
aam
mov
jle
sbb
adc
cli
sub
and
inc
ljmp
imul
mov
or
mov
xchg
mov
into
push
lods
jmp
imul
and
jns
cli
ljmp
add
inc
or
syscall
add
shll
dec
dec
dec
adc
aam
cmp
sub
popf
pop
lcall
jge
xor
xchg
adc
inc
in
push
pop
mov
jecxz
sahf
cmc
or
in
add
or
push
enter
leave
xchg
out
and
test
pop
dec
cmpsl
add
movl
jecxz
cmpsb
mov
sub
xchg
mov
aad
fcoms
mov
sbb
mov
mov
add
dec
lods
imull
jbe
rcrl
outsl
lods
popa
push
push
lds
hlt
jnp
dec
xchg
pop
cltd
div
cmp
je
dec
mov
push
pop
pop
add
add
inc
jne
push
stos
stc
fcompl
mov
in
lods
popf
and
sbb
mov
xchg
adc
outsl
and
push
cltd
add
lock
cmpb
cli
jmp
outsb
test
push
bound
sbb
add
sub
lret
fdiv
adc
ds
jae
push
sub
inc
add
add
jnp
ret
add
push
push
fadd
cmp
cli
mov
into
dec
lock
iret
sub
add
dec
push
xor
jns
daa
roll
lods
and
fildl
add
call
add
inc
push
lea
testb
fndisi(8087
or
decl
roll
sub
or
add
mov
add
jle
stc
mov
leave
and
sbb
push
push
add
lea
push
dec
ffreep
fstps
out
popa
sub
out
fisubl
stos
sar
jmp
mov
xor
inc
xchg
arpl
jb
xchg
add
add
bound
loope
jmp
loope
jmp
loopne
or
xor
ja
jae
add
and
push
loopne
xlat
in
pop
lret
rcr
inc
outsl
mov
jmp
dec
test
sbb
xlat
lods
add
cmp
dec
sti
fldcw
jp
jbe
bound
fists
pushf
fistpll
fldenv
inc
std
pushl
inc
jecxz
fdivrp
filds
fnstcw
mov
in
sbb
shr
add
fistps
sahf
pop
push
cmp
jne
mov
sahf
std
sbb
jbe
fldt
outsb
std
rcl
ficomps
lods
mov
fsts
fnstcw
pop
push
inc
or
out
add
lods
pop
into
addb
xor
dec
scas
jg
xchg
inc
cli
jmp
mov
add
xchg
pop
lock
or
inc
jmp
add
add
xor
pop
inc
or
push
aad
lahf
mov
fwait
dec
xor
mov
in
push
popa
push
test
adc
test
cli
jmp
loopne
pushf
dec
cld
adcl
sub
push
mov
inc
jae
cld
mov
add
je
ds
add
push
adc
cmc
jmp
push
insb
pop
shll
hlt
cld
ljmp
xchg
dec
fsub
add
push
pop
adc
in
or
add
in
adc
notl
inc
add
or
call
sti
out
mov
into
xchg
xor
add
sti
out
stos
sbb
jmp
mov
and
mov
call
out
test
out
aas
ds
xor
inc
or
adc
xor
dec
pop
mov
mov
pop
push
jnp
xor
xchg
inc
ret
cmpsb
fdiv
mov
xor
pop
lock
and
adc
mov
hlt
add
enter
push
sbb
dec
xor
fldenv
inc
stc
out
out
popf
ret
xlat
and
xor
ss
pop
mov
cmp
jns
pop
cmp
dec
out
and
sbb
lods
fildll
dec
fldenv
out
loop
int
fstp
rcl
xchg
lret
jecxz
aam
and
pop
test
fs
sub
add
cmp
xchg
or
cmp
add
cmp
mull
inc
jg
cmc
pop
ret
cs
push
push
popa
addb
mov
test
jmp
and
popa
ds
xchg
add
shll
or
xor
jns
ds
icebp
xchg
add
xchg
and
add
xchg
add
loop
or
in
call
adc
flds
out
fst
call
popa
fnstenv
jne
add
frstor
aam
inc
jg
aad
jle
je
in
ljmp
cs
sti
out
cli
xor
sbb
mov
out
xor
xchg
sbb
cmpsl
imul
add
cmp
call
fisubl
add
mov
je
test
push
push
adc
or
fcoml
cmc
mov
add
hlt
push
mov
sti
lahf
xor
pop
cli
cmpsl
or
push
outsb
cli
outsb
or
pop
shl
lds
bound
popf
pop
bound
out
and
xchg
lahf
inc
bound
push
sti
add
lods
jmp
test
jp
xor
rcr
jno
or
adc
add
stc
inc
inc
xor
jo
mov
fmuls
es
out
pop
mov
loope
pushf
add
pop
pop
sti
jge
cmp
mov
jge
push
cli
pop
mov
incb
xor
inc
rorl
loop
fmuls
add
rclb
sarb
out
lds
add
jmp
push
jbe
mov
frstor
mov
les
data16
add
xchg
lods
dec
insl
sbb
xor
sub
fldenv
jb
sub
jbe
adc
adc
outsb
xor
add
loop
add
cmpsb
lds
pop
in
push
cmc
aam
inc
push
into
xor
push
sub
test
fmuls
inc
jmp
push
push
pop
mov
jle
adc
inc
adc
out
std
add
mov
jle
bound
in
idivl
pop
push
es
cli
push
fstpl
jne
xchg
adc
dec
inc
inc
cli
push
mov
xor
in
mov
xchg
jle
cmp
cli
insl
and
sub
popl
add
nop
mov
data16
jae
rclb
sbbl
jae
rclb
sub
xchg
cmc
loopne
cltd
mov
decl
cltd
mov
in
mov
imul
call
mov
sub
call
cmc
lea
shr
adc
cmc
test
mov
bound
push
adcb
sub
incl
xchg
jae
in
subb
mov
mov
mov
jg
dec
push
sub
out
mov
call
push
jno
mov
outsl
add
and
mov
push
test
pop
add
adc
xchg
xchg
push
xchg
lea
es
leave
stos
sbb
mov
mov
and
and
add
xchg
in
test
adc
fldl2e
mov
out
in
add
lret
arpl
cmp
shlb
xchg
nop
scas
cmc
dec
pop
add
ja
cmp
dec
and
test
and
in
repnz
fstps
filds
xchg
in
repnz
xchg
mov
daa
add
daa
pop
adc
inc
xrelease
xlat
out
lret
add
or
or
add
cmp
or
popa
push
rcll
cmp
jmp
jg
jge
dec
push
je
aam
and
cmp
in
fs
mov
and
sarl
adc
adc
add
mov
xor
cmp
sar
call
popa
inc
add
std
xchg
add
in
int3
push
shrl
mov
add
scas
sahf
xor
fisttpll
cmc
lea
xchg
push
push
fcoml
lods
push
cli
mov
in
je
jo
adc
out
aad
cwtl
sub
mov
adc
mov
push
ljmp
mov
inc
or
je
or
jns
sub
subl
mov
xchg
jno
jb
jmp
xor
mov
mov
test
les
mov
add
fcoms
sub
movb
mov
data16
not
or
sti
mov
adc
cmp
nop
or
lods
jmp
shlb
leave
sbb
bound
pop
xchg
xchg
and
cmpsb
mov
pushl
or
stos
clc
ret
arpl
imul
mov
out
sbb
sti
or
es
dec
pop
test
pop
cmpl
ds
add
xor
lret
sbb
fsub
add
popa
movsb
fbstp
es
dec
call
filds
inc
adc
fwait
cmpsl
and
xor
add
out
mov
jo
bound
push
pop
test
mov
mov
or
sbb
popf
or
shll
mov
lret
daa
add
ljmp
testl
pop
adc
int3
mov
mov
jbe
mov
xor
fsubl
inc
jmp
shll
xor
je
add
imul
sub
nop
mov
pop
out
and
jns
jecxz
push
pop
lds
lods
add
and
dec
xor
jmp
adc
in
cmpsl
mov
ficoml
enter
out
mov
roll
jle
pop
cmp
add
add
pop
inc
cld
sti
or
pushl
imul
add
ljmp
xchg
push
idivb
fs
and
pop
cmp
or
jns
in
fs
jae
je
add
jne
inc
repz
enter
cmp
add
adc
scas
pushf
dec
pushl
sub
mov
push
add
flds
push
mov
fucomp
ret
bound
daa
lret
cli
aad
push
sahf
int
int
fiadds
ljmp
inc
xchg
add
int
cmp
xchg
xchg
fwait
and
icebp
mov
sbb
adc
mov
lds
jne
int3
ljmp
movb
cli
inc
adc
daa
repnz
add
dec
xchg
cmpsl
mov
push
repz
pop
inc
mov
push
sbbb
in
std
jle
mov
in
cmp
imul
pop
imul
out
out
sbb
ljmp
mov
mov
in
lods
mov
or
adc
jb
inc
stc
out
add
and
cmp
sahf
std
jecxz
adc
lods
filds
roll
or
fisttpl
into
add
bound
sub
repnz
ficoml
rcll
pop
pop
vcvtps2dq
leave
mov
andl
movsl
and
add
or
jmp
sub
fcmovnb
and
jmp
and
ljmp
leave
fisubl
xchg
fcomps
adc
xor
pop
add
cwtl
inc
adc
bnd
add
xchg
xlat
aas
inc
pusha
push
and
addb
xlat
aas
inc
add
push
jo
push
adc
inc
jb
and
jle
mov
and
lock
xor
cmc
pop
gs
pop
jns
cli
adcb
jnp
outsl
xor
add
call
or
xor
sub
int3
pop
inc
and
pop
dec
and
pop
push
and
fs
pop
fs
and
adc
and
aad
cmc
dec
fldl
mov
adc
push
scas
insb
and
scas
dec
and
int
jmp
call
mov
inc
call
ss
xchg
inc
orb
pop
jl
xchg
inc
inc
jle
add
out
fsubrp
dec
das
push
jnp
jle
jns
inc
sbb
jbe
push
dec
ds
je
stos
inc
aaa
xchg
gs
test
icebp
aaa
dec
inc
cltd
add
cmp
push
mov
lret
out
xlat
sub
jle
jge
xchg
jnp
jle
lret
mov
fisttpl
in
es
add
or
mov
mov
add
sbb
adc
xchg
lods
inc
jle
cmc
ret
jle
cmc
repz
cmc
iret
fiadds
cltd
jo
or
mov
ret
ficompl
inc
imul
cmc
roll
leave
xchg
or
sub
stos
or
pushf
lret
out
jl
outsb
mov
or
popl
or
add
imul
sbb
xchg
sbb
push
and
mov
pop
flds
into
sbb
cmp
cli
pop
jmp
int3
xchg
add
add
mov
jae
rorl
jns
inc
lds
cs
fnstsw
xchg
xchg
and
xchg
push
jl
xchg
and
testb
jge
test
cmp
mov
daa
pop
sub
iret
xor
dec
cmpl
je
mov
add
cmp
push
jl
lods
push
and
lods
jl
add
lods
inc
and
lods
pop
and
push
sti
push
push
push
sbb
int3
jl
inc
inc
push
sub
jle
and
jbe
push
inc
outsb
push
and
mov
and
sbb
pcmpgtb
ljmp
sti
out
js
xchg
mov
mov
xor
pop
mov
lret
cmc
jmp
shll
mov
and
dec
mov
cltd
mov
pop
and
movq
divl
ds
flds
mov
jbe
mov
adc
enter
les
popa
dec
into
icebp
pushf
call
and
leave
and
push
jle
jnp
xchg
cmc
push
movsl
push
add
ja
dec
sti
lods
mov
loopne
mov
mov
or
movsb
add
xlat
sbb
push
fld
cltd
insl
nop
ficomps
popf
and
or
fwait
sub
fdivl
xor
std
pusha
rolb
jo
inc
std
pusha
movl
iret
sub
mov
mov
stos
in
ret
out
ljmp
movl
out
rcrl
movsb
or
add
xchg
add
mov
adc
inc
icebp
mov
mov
arpl
ret
pushf
pop
push
inc
lds
xchg
loopne
and
popa
movsb
add
sbb
and
sub
enter
mov
and
cli
lret
repnz
jmp
lahf
xchg
and
push
inc
add
aad
add
add
push
int3
imul
fdivs
and
sub
jo
mov
pusha
lcall
add
xor
mov
pop
add
orb
push
jge
pop
addb
xor
cli
jae
and
roll
or
scas
stc
xchg
and
inc
outsl
daa
add
add
das
push
adc
scas
stc
das
inc
push
add
divw
orl
je
xor
je
sbb
cmc
add
push
shll
je
xchg
mov
and
fdivl
mov
and
fdivl
jo
jmp
xchg
and
cmpsl
test
inc
inc
fstpt
rcrb
pop
add
xchg
mov
inc
push
dec
add
adc
sahf
push
fidivrl
and
and
mov
mov
pop
push
xchg
les
add
and
aas
jb
les
push
sbb
mov
inc
mov
bound
add
mov
add
in
push
jg
nop
jo
inc
icebp
pusha
mov
sub
jo
xor
fidivrl
add
movsb
ret
mov
ficoml
or
cwtl
add
push
pop
mov
mov
dec
jmp
loopne
push
daa
or
pushf
lret
repz
add
adc
cmpsl
adcl
lods
add
cltd
mov
jne
adc
ss
bound
repnz
add
bound
dec
add
sti
sub
sbb
sti
adc
in
adc
mov
movsl
and
popa
push
jge
cmp
mov
and
and
push
inc
add
ret
jmp
pop
out
dec
add
cli
and
mov
cli
adc
daa
cltd
xchg
ret
add
push
and
nop
in
mov
or
pop
sbb
sbb
popa
push
and
add
mov
push
adc
insl
movsl
inc
and
movsb
lds
pop
push
or
mov
scas
jbe
rcrb
inc
sub
inc
and
fadd
cmp
xor
xchg
or
add
inc
cmp
subb
push
sub
adc
fs
pop
mov
loopne
and
inc
bound
stc
stos
outsl
pop
add
addr16
fsincos
loopne
popa
jae
dec
dec
xor
and
or
push
aam
ss
xchg
fcmovnbe
xchg
aam
incb
and
mov
aaa
scas
push
jl
mov
and
jge
xchg
sti
and
sbb
ss
fmulp
jnp
mov
and
repz
out
pop
mov
loopne
jmp
fsts
loopne
push
sub
imul
imul
rolb
fmull
ficompl
or
xor
add
and
rolb
rcrl
cmpsl
mov
jmp
daa
sbb
mov
mov
mov
test
ret
cmpsl
mov
fs
fdivs
jnp
vcvttss2si
stos
mov
sahf
std
add
lahf
popf
and
popa
push
push
int
std
push
pop
lds
jmp
out
sahf
call
std
negl
mull
int
pop
ret
inc
or
mov
test
decb
je
and
es
sti
rclb
push
mov
loop
into
dec
xor
iret
mov
out
iret
mov
icebp
xchg
stc
jne
out
xchg
xor
jecxz
and
cmp
addr16
cli
add
push
sub
lea
mov
gs
fnstsw
lahf
xor
mov
cmp
add
or
inc
mov
add
mov
add
add
and
pop
test
xchg
pop
mov
inc
xor
jne,pn
rcrb
insb
sti
sahf
inc
and
rcrb
xchg
add
mov
adc
popa
push
push
bound
ss
fdiv
je
sbb
and
mov
subb
pop
jb
and
jns
xchg
movl
repz
jmp
daa
jns
ds
dec
inc
sub
add
pop
decb
mov
hlt
mov
imul
mov
movsb
popa
cltd
jbe
daa
adc
pusha
das
dec
shr
pop
fisubl
jmp
outsl
fimull
arpl
cmc
xchg
orl
cwtl
add
fldenv
pop
pop
inc
sub
fldcw
push
out
cmpb
ja
push
cmp
inc
mov
dec
xchg
sbb
imul
mov
adc
out
imul
mov
arpl
movsb
daa
insb
fisubl
ja
loope
push
pop
lods
daa
push
fldcw
pop
movsl
or
push
push
cltd
add
cmc
xlat
mov
cmc
iret
add
and
add
xchg
add
cmc
sub
mov
inc
out
cmc
xor
jne
push
insl
cmc
push
cmpsl
fs
cmp
sbb
sbb
cmc
and
in
fwait
and
ror
add
cmc
pusha
sbb
xchg
sub
and
bound
cmc
push
jb
cmc
xor
lahf
iret
jge
push
push
push
or
in
and
ss
push
dec
add
fdivl
adc
cmc
xor
mov
pop
add
pop
pop
add
push
inc
ret
jns
addr16
pop
and
fidivrl
roll
push
subl
call
std
cmp
andl
push
xchg
and
xor
and
xchg
xchg
and
lods
dec
or
insb
cmpsl
xchg
sub
add
mov
mov
and
in
test
enter
fiaddl
mov
notb
add
mov
xor
dec
push
mov
dec
movl
inc
inc
cmp
jmp
dec
dec
and
mov
fsubr
add
jmp
and
xor
je
stos
ret
ss
adc
outsb
mov
add
mov
pop
and
clc
cmp
aaa
cld
mov
xor
inc
inc
adc
imul
add
lds
out
push
aam
xchg
int3
dec
test
aaa
push
int3
and
fildl
jb
add
push
mov
in
cmp
lea
sub
xchg
lret
and
popf
ret
pop
cmp
cmc
iret
mov
cltd
push
cli
cmp
sub
mov
lea
sub
insb
mov
mov
sbb
ljmp
mov
mov
cmc
xlat
sbbl
pop
add
fwait
in
lea
add
in
jmp
and
mov
cld
pop
dec
inc
add
fnstcw
dec
jle
add
hlt
pop
jmp
mov
cmc
mov
outsl
push
inc
lds
gs
push
inc
mov
dec
push
inc
scas
pusha
pushf
ret
jmp
ror
sarl
and
mov
aad
bound
jmp
out
and
fsubs
mov
loop
test
cmp
test
inc
mov
sub
xchg
and
fsts
ss
repnz
xor
push
idiv
bswap
mov
xchg
xchg
enter
pop
fwait
out
push
dec
mov
repnz
or
xor
xchg
pop
xorl
pop
outsl
stc
subl
cmpl
mov
sbb
sub
push
fiaddl
mov
lret
add
dec
push
and
dec
inc
and
dec
jbe
fndisi(8087
pop
and
int3
mov
adc
icebp
xor
iret
repnz
add
pop
push
loope
cmp
dec
fidivrs
lcall
xchg
adc
xchg
dec
and
and
jae
pusha
popa
repz
mov
inc
daa
inc
sahf
aam
add
repz
repz
sbb
fldpi
sub
sub
jmp
cmpsl
pop
and
pop
int
add
adc
xchg
or
push
jmp
sub
fsts
imul
aaa
push
inc
fsts
or
bound
daa
ss
and
imul
jecxz
xor
sub
push
sub
push
add
daa
inc
bound
sahf
bound
cmp
and
sbb
ds
mov
dec
add
and
dec
jle
pop
sub
sub
jbe
aad
popf
lret
sbb
popf
ret
push
sahf
out
jmp
ret
inc
mov
fcmovb
and
sub
enter
sbb
mov
push
or
dec
ljmp
pusha
pusha
adc
mov
jmp
pushf
and
or
push
mov
out
and
add
sbb
pusha
bound
mov
xor
add
jmp
sbb
ds
jp
rol
jmp
dec
addr16
ds
jns
inc
push
dec
sbb
and
fidivrs
add
jbe
pop
fildl
add
mov
and
cmp
add
into
cmpb
je
fcoms
xchg
or
arpl
jae
push
mov
cltd
push
add
shr
arpl
xlat
sbb
sbb
push
add
push
add
pop
rolb
or
ds
and
add
and
data16
sbb
xchg
dec
mov
inc
mov
and
scas
jo
lcall
lock
imul
jmp
je
sub
imul
and
cmp
sbb
arpl
and
js
and
js
and
sub
icebp
in
lea
in
mov
lea
dec
call
popa
push
lea
xchg
mov
fldcw
lea
mov
data16
pusha
cld
pop
and
and
rorb
and
out
vmread
mov
mov
ljmpw
xchg
sarb
or
stc
cmp
dec
mov
pop
in
mov
stos
mov
fstl
ret
or
xor
adc
out
xchg
stos
pop
je
dec
pusha
sub
inc
fcom
xor
pop
test
pusha
rclb
in
adc
enter
paddq
bound
mov
mov
outsb
adc
pusha
xor
mov
and
icebp
mov
ja
ds
and
jmp
icebp
cmp
sarb
mov
sahf
xchg
xor
xlat
jmp
mov
add
pop
out
jmp
mov
sahf
xchg
xor
sbbl
jge
pop
int3
jl
dec
loopne
push
in
push
cli
aaa
cmp
sub
add
push
out
inc
pushf
and
inc
pushf
and
insl
fsubrl
pushw
sbb
test
inc
push
pop
pop
pop
int3
pmuludq
mov
lods
dec
jp
mov
mov
addl
stc
cmp
pop
mov
gs
pusha
ds
pusha
shrl
jns
lods
enter
in
cmp
and
fcmovnbe
add
fst
dec
and
pop
shrl
add
enter
inc
sti
lods
mov
pop
xchg
mov
mov
in
mov
and
push
sbb
mov
cs
mov
sbb
aaa
es
or
js
jmp
jns
gs
add
add
push
xchg
jne
or
sub
inc
sbb
mov
aaa
inc
jle
xchg
xor
or
sbb
and
fldcw
pop
fistps
jmp
cmpsl
fsub
add
fldl
sbb
cmp
mov
pop
add
dec
aam
inc
adc
jbe
sub
inc
add
inc
loop
ret
nop
add
adc
bound
push
pop
pop
sub
fldenv
loopne
adc
out
xor
ds
jns
stos
sbb
fst
mov
arpl
inc
mov
out
ficoml
add
cmp
or
add
fs
and
daa
enter
jg
ljmp
int
stos
push
pop
or
push
jbe
pop
pop
inc
lds
shl
push
arpl
and
jbe
and
enter
or
scas
popa
inc
or
outsb
bound
lcall
adc
push
adc
jb
mov
ljmp
inc
rcrb
jecxz
sub
xchg
popa
iret
leave
add
mov
push
daa
pushf
xchg
xchg
xor
add
incl
pop
test
add
and
mov
test
push
data16
mov
push
push
mov
test
adc
add
repz
add
add
or
cmp
lcall
add
dec
enter
add
add
pop
stc
add
cwtl
adc
in
out
cli
add
cld
or
jmp
jp
and
mov
inc
adc
inc
add
or
je
xor
and
cmpl
adc
push
data16
sbb
ja
jnp
out
cli
jge
in
gs
stc
insl
jg
shrb
jnp
subb
push
lea
jge
jle
add
jmp
and
mov
adc
and
out
ljmp
sub
test
jl
mov
test
aad
aas
ds
filds
in
mov
push
aad
pop
sarl
or
sub
mov
pop
mov
pop
xor
test
movsb
jns
sub
bound
inc
ficompl
aas
inc
in
shl
pushf
lret
sbb
icebp
add
sub
out
pop
lock
popa
mov
daa
jle
outsb
inc
xchg
add
test
movl
mov
shl
bound
addr16
movsl
cmp
aad
jo
mov
outsb
cwtl
and
jnp
shl
bound
pop
push
inc
cmp
xchg
or
test
or
popf
add
scas
je
mov
and
sbb
dec
sbb
jmp
subb
mov
daa
mov
and
pusha
add
or
and
dec
inc
mov
add
sti
insl
and
cld
insl
and
cmpsb
or
inc
xor
mov
mov
shrd
out
mov
jg
and
outsl
mov
push
orb
call
lea
iret
cs
pop
sbb
in
sbb
jg
xor
outsl
shll
shrl
dec
loop
hlt
cli
testb
pusha
int3
ud0
cmp
and
push
mov
mov
mov
mov
mov
jmp
inc
js
and
add
mov
incb
or
shlb
dec
push
add
ljmp
cmc
ja
and
push
jge
ljmp
push
add
enter
enter
xchg
xchg
rolb
jge
or
xchg
jmp
sub
mov
jmp
cld
or
cmpb
popa
jmp
test
add
mov
adc
fucom
gs
out
in
test
push
mov
or
mov
mov
sbb
cltd
mov
mov
ficoml
arpl
arpl
out
pop
mov
gs
loope
mov
and
jb
jb
pop
fiaddl
cmc
mov
clc
fwait
andb
and
out
lcall
and
add
mov
add
mov
sub
lcall
mov
sarb
lods
popa
fnstcw
movsl
mov
add
pop
mov
leave
insb
in
mov
popa
add
xor
add
jmp
enter
lods
fadds
sbb
sub
and
inc
test
shll
test
int3
or
fmull
aas
sub
orb
gs
mov
in
push
push
or
scas
je
faddl
scas
std
ror
aas
xor
fwait
xor
out
sub
pusha
ja,pn
add
addr16
jbe
repnz
call
pop
or
add
add
add
lods
cwtl
fmuls
je
fildl
fwait
repnz
mov
sbb
icebp
std
cs
mov
mov
push
js
add
out
adc
add
add
push
sti
push
enter
mov
sbb
les
bound
sbb
pushf
jb
bound
jb
bound
pop
or
jb
bound
dec
xchg
outsb
dec
xchg
clc
gs
xchg
out
jb
ds
sbb
pop
add
out
jmp
inc
add
add
fincstp
cld
mov
and
mov
and
xchg
mov
add
jnp
mov
stc
inc
bound
add
out
insb
int
xlat
mov
push
push
xor
jp
cmp
loope
mov
ds
inc
sbb
dec
scas
mov
add
incl
aad
push
cltd
out
xchg
lret
inc
aad
jmp
inc
xchg
scas
jo
jle
ror
cmp
fdivr
fisubs
lock
daa
jno
flds
sbb
adc
sti
bound
cli
mov
add
push
sbb
dec
int
icebp
pop
pushf
add
subl
pop
cmpsl
icebp
popa
popf
push
lds
popf
inc
call
pop
movsl
mov
inc
adc
faddl
jmp
push
shlb
sub
frstor
sbb
mov
aam
std
out
inc
add
popa
fldenv
cmpsl
iret
orl
xchg
and
xor
movsb
mov
add
add
mov
decl
jg
and
jg
mov
push
loop
lret
inc
fldl
rcl
push
and
shrl
add
insl
xchg
bound
pop
add
jnp
push
lea
test
pop
sti
aam
xlat
jecxz
xorl
jp
decl
inc
lret
and
mov
add
incl
xchg
or
out
repz
decl
imul
push
fiadds
xchg
xor
pop
jbe
add
jge
inc
add
xchg
xchg
mov
mov
lock
xchg
jns
ljmp
and
jns
and
xchg
dec
or
mov
or
std
pushl
out
std
filds
xchg
sub
add
xlat
out
repnz
fldl
mov
out
frstor
loopne
mov
sub
adc
rorl
out
pop
pop
sub
add
and
pop
adcb
jnp
gs
adc
adc
pop
bound
call
push
add
pushf
add
xchg
pop
push
and
out
ret
out
add
or
insb
les
int
out
sbbb
pop
shlw
sub
mov
jmp
push
push
inc
add
push
push
add
popa
rcll
mov
into
subl
test
adc
push
jmp
add
add
jb
jne
sub
cli
outsb
popa
fldcw
aad
mov
push
popa
flds
mov
pushf
and
test
dec
test
mov
inc
int
add
push
push
add
fisubl
stos
push
pop
insl
mov
add
push
jnp
mov
mov
dec
and
dec
inc
and
adc
and
int
add
xlat
xlat
add
push
inc
pop
test
push
lea
push
call
clc
sbb
psadbw
decl
adc
ss
add
dec
push
add
mov
cmp
je
adc
divb
sti
adc
sub
push
sti
dec
dec
and
or
leave
fildl
pop
add
jecxz
test
icebp
std
fnstenv
mov
jmp
sub
adc
sbb
shlb
mov
jb
loopne
into
fstps
out
fistpll
pop
je
out
je
loope
add
and
jnp
and
xor
shll
mov
or
sbb
fldcw
add
push
pop
add
clc
and
in
xchg
mov
mov
push
je
cmp
daa
jle
mov
sbb
xchg
addl
fldenv
inc
dec
out
xchg
inc
int3
xchg
jg
out
dec
leave
testb
xor
dec
lret
cmp
jp
fdivrl
add
jo
mov
icebp
mov
les
cmp
fldl2e
cltd
mov
or
daa
jae
ds
popa
fldenv
cmp
call
xor
stc
jmp
popa
flds
mov
popa
fcompl
add
push
cmpsl
std
push
push
addr16
xchg
add
ficoms
jmp
cli
insl
mov
flds
aas
cld
aam
cmp
test
jmp
insl
and
test
flds
jb
mov
jb
push
shrb
int
dec
popa
fyl2xp1
add
into
rorb
jp
stc
sti
fadds
rorl
shrl
rolb
mov
test
fadds
call
inc
sub
cmp
fsubrs
or
cli
decb
mov
mov
push
call
call
test
add
lock
test
sbb
outsb
dec
fsub
hlt
aad
imull
movsb
adc
popa
rorb
iret
xchg
mov
bound
sbb
and
fsts
dec
and
or
cli
push
inc
repnz
bound
xchg
push
es
mov
cmp
push
and
inc
xchg
bound
push
sbb
andb
push
inc
rolb
vmovntps
arpl
add
stos
fldl
test
lret
push
mov
and
or
mov
dec
and
test
lds
mov
dec
push
and
outsl
out
cmp
or
cmp
or
dec
addl
addr16
rcrb
jbe
cmpsl
xchg
mov
add
fimull
mov
or
sarb
or
and
xlat
jmp
imul
pop
outsl
in
mov
mov
xor
xchg
lret
sbb
adc
mov
fptan
xchg
mov
sub
int
sti
stc
jmp
jge
test
movsl
sbb
notb
and
fcoms
and
or
cld
es
jb
xchg
ljmp
jne
flds
jb
icebp
cmp
scas
incb
popa
flds
jmp
jge
add
add
xchg
test
fldt
xchg
cmp
cmpsb
popa
rcl
jb
sbb
stc
loopne
add
or
add
add
rcr
add
int3
scas
adc
and
idiv
adc
pop
xlat
rolb
add
add
sar
insl
add
fstpl
mov
and
aad
ds
in
roll
sarl
in
ds
in
jl
aam
cltd
and
dec
es
pop
testl
dec
int
add
in
or
mov
in
orb
sbb
xchg
push
imul
outsb
dec
scas
bound
jp
insl
jle
xor
fisubrl
pop
add
jle
or
push
add
in
sar
aad
adc
jae
add
fnstcw
aad
mov
add
push
cmp
push
out
dec
sbb
cs
bound
xlat
andl
decb
int
and
jo
rolb
lds
sbb
imul
outsb
mov
mov
and
out
fstpt
fsub
add
mov
jmp
testl
xchg
fsub
add
mov
dec
test
push
sarb
pop
out
adc
lds
loop
or
popf
xor
mov
loope
lret
loop
out
popf
neg
int
in
lea
add
addr16
ds
push
xchg
bound
idiv
jb
sbb
xor
lods
outsl
and
sub
sbb
lahf
cmpsl
mov
push
push
fnsave
xlat
inc
and
bound
mov
inc
std
pop
pop
test
mov
cmc
stc
xchg
pop
xchg
push
push
mov
adc
add
aad
test
popa
jb
repnz
add
movsl
sbb
mov
sbb
mov
add
les
bound
idiv
imul
idiv
les
iret
cli
decl
inc
ja
frstor
in
mov
or
movsb
je
je
data16
int3
and
adc
int3
or
pop
jbe
adc
je
fstl
ds
loopne
call
pusha
data16
inc
dec
xchg
mov
andb
bound
mov
or
mov
add
inc
and
inc
in
fnstsw
sar
loope
and
into
or
mov
mov
jmp
out
das
push
inc
out
pop
iret
lret
out
pop
jmp
fwait
roll
jb
decl
push
xchg
cli
xor
cli
in
add
xchg
fidivl
pop
daa
aaa
test
sar
std
jmp
fcomp
sbbb
test
sub
mov
aaa
outsb
in
jl
mov
icebp
test
fldcw
je
mov
sbb
fmulp
cmp
jle
dec
sbb
mov
stos
hlt
fucom
pop
hlt
add
pop
and
cmp
cltd
mov
sub
pop
or
sub
ljmp
mov
mov
xor
mov
fucomp
pop
xor
nop
bswap
pop
repz
xchg
icebp
add
mov
cli
out
xor
out
stc
jmp
inc
aas
fs
rorl
repnz
out
mov
jl
bound
subl
repnz
andb
daa
sbb
push
jb
mov
push
add
add
aaa
int
jmp
jae
cmc
test
jne
mov
stc
ss
pop
jno
cmp
pop
pushf
mov
mov
add
mov
add
orl
push
cmp
push
fildl
or
pusha
mov
loope
push
mov
test
jno
je
pop
hlt
xor
test
pop
hlt
js
lock
xchg
mov
xchg
or
loope
shrb
inc
fldl
jmp
lret
xchg
in
pushl
cmpb
mov
faddl
jne
lret
add
call
sbb
xchg
cmpsb
push
pop
les
jle
fiaddl
push
lret
cli
lods
jnp
or
test
jg
pop
mov
into
or
push
xor
pushl
or
test
aaa
push
push
bnd
int3
add
jns
and
sets
xchg
inc
in
add
jmp
mov
mov
push
sbb
add
add
cmp
stc
or
xchg
std
or
jmp
add
xchg
mov
mov
test
lret
out
pop
aam
out
add
out
call
fmull
add
mov
test
pusha
add
fs
fcoms
xlat
mov
fidivrs
xchg
pop
add
sub
adc
stc
pusha
pop
out
arpl
rcll
fistpl
xchg
repz
stos
gs
sbb
enter
dec
adc
or
add
push
sub
arpl
mov
test
or
add
bound
flds
call
aad
lret
stc
jb
testb
scas
outsl
stc
iret
mov
lret
jnp
jmp
aas
push
in
pushf
fiaddl
push
popa
mov
das
dec
lock
pop
mov
pop
sti
jle
sub
mov
imul
push
loop
jbe
flds
mov
outsl
std
dec
lea
stos
or
incb
and
insl
jecxz
push
dec
dec
xchg
mov
mov
addl
adcl
jp
add
inc
fiaddl
add
sbb
or
aad
push
dec
insb
call
lods
and
rep
add
insb
cmp
lret
inc
and
or
sbb
cmp
test
lods
loop
bound
and
xlat
xor
data16
push
gs
movsl
in
jp
xchg
jl
lret
dec
mov
add
jnp
xchg
pushl
jle
or
int3
std
jmp
add
bound
and
fcomps
sub
cmp
cli
test
icebp
pop
add
pop
push
add
ja
out
inc
lret
cli
out
pop
sbb
repnz
mov
adc
mov
mov
daa
pop
add
adc
push
sub
fdivrl
rcrl
cmp
and
enter
jae
push
xchg
jmp
sub
daa
jb
aas
xchg
loope
sbb
insb
and
mov
shl
inc
fstps
out
cmp
cld
fdivs
in
out
adc
fnstenv
pop
and
aas
jle
jg
jecxz
addb
add
out
flds
bound
repz
popa
flds
out
mov
lret
in
cli
loope,pt
and
popa
fs
fmuls
filds
mov
xchg
orb
mov
adc
mov
sti
out
sbb
jmp
insb
and
sti
into
push
sbb
stos
cmpsb
call
loop
je
xchg
xchg
xchg
insb
mov
or
mov
add
push
xlat
xchg
push
je
nop
adc
xlat
mov
mov
rcr
or
mov
movsb
cmc
adc
jle
and
sti
mov
roll
mov
cmpsb
mov
or
jg
add
sbb
and
sbb
and
sbb
and
movsl
mov
bound
cmp
jns
sbbl
jl
test
dec
fisttpll
push
test
mov
sti
push
sahf
out
aas
add
movsl
test
clc
orl
bound
push
or
xor
xchg
or
pop
scas
adc
ds
cli
outsl
mov
lds
ss
aas
bound
daa
sub
sti
mov
inc
add
negl
fistpll
lock
jge
adc
loope
in
mov
or
mov
in
jae
or
mov
shlb
shl
fcmovnu
xchg
jp
ficomps
cld
dec
fnstcw
fcoml
push
addb
adc
sti
out
les
sbb
inc
xchg
loopne
fdivrs
icebp
in
std
lret
out
push
sti
mov
insb
mov
add
insb
les
fbld
add
ror
daa
add
call
out
fstl
mov
out
lcall
popa
flds
fs
sbb
mov
jmp
jb
push
movsl
jmp
insl
mov
inc
or
sbb
imul
pop
jne
ds
in
in
add
sbb
or
leave
adc
iret
cmp
xchg
daa
sbb
in
push
out
or
sub
in
loope
enter
rolb
jp
add
loop
shll
add
xor
std
xchg
add
and
test
cs
mov
mov
sti
flds
add
adc
mov
outsb
inc
and
add
adc
and
jl
flds
lea
adc
loope
cmc
ds
idiv
mov
filds
mov
lods
xchg
cmp
test
dec
cmp
xor
add
adc
and
cwtl
add
dec
sbb
add
mov
xor
or
adc
jne
and
pop
and
adc
sub
fnstenv
xor
in
in
insl
sahf
repnz
add
inc
jg
push
push
loop
fmull
sub
aaa
jge
pop
mov
jmp
fidivrs
dec
das
dec
xor
add
icebp
or
js
push
stos
ficoms
add
inc
push
and
stos
pop
test
jb
mov
out
xchg
lret
jmp
inc
test
dec
mov
pop
jb
lods
jp
andb
je
push
outsl
pop
jns
adc
ds
inc
andl
mov
outsb
les
aas
add
pop
and
jne
jne
aas
lahf
cltd
pop
cltd
sahf
add
push
push
push
or
push
push
jge
xchg
mov
data16
and
and
test
sub
fldenv
mov
add
stos
mov
popa
pop
mov
push
xchg
mov
inc
add
idiv
push
pop
dec
lahf
data16
lea
pop
int
icebp
mov
sbb
call
add
mov
popa
cmp
jne
pop
into
call
lock
and
add
sbbb
push
push
mov
test
cmp
push
add
or
or
imul
mov
sbb
lea
and
test
push
push
cli
decl
je
and
fldl
add
cltd
and
mov
aad
cmpl
test
lret
aad
je
loop
xchg
sbb
movsl
out
pop
cmp
add
test
out
std
call
mov
push
adc
add
fstpt
add
push
mov
fidivrs
xchg
mov
loop
aas
bound
and
jns
and
das
cmp
idiv
jmp
gs
mov
js
ds
xchg
bnd
xchg
jns
jle
ja
xchg
subl
pop
wbinvd
sbb
add
fistl
mov
add
pop
aas
inc
lds
ds
dec
rorl
mov
mov
out
rcrl
int
dec
loopne
inc
xchg
out
bound
sarb
push
mov
and
fstps
mov
rclb
lea
lods
lds
lcall
dec
push
add
in
jne
int3
or
xor
addr16
movsl
xchg
dec
aad
sub
arpl
sbb
jno
cmpsb
std
add
xor
inc
dec
mov
jno
es
add
xor
jae
ds
inc
jno
es
add
push
sqrtps
mov
ds
lcall
add
call
out
lret
pop
sub
push
loopew
push
add
push
sbb
leave
ja
outsb
dec
enter
pop
fisubrs
pusha
mov
loope
cmpsl
fnsave
lock
xor
stc
iret
je
lret
inc
icebp
fnstcw
push
xor
paddq
dec
dec
testl
pop
pop
mov
add
sti
push
mov
add
mov
pop
je
sub
popa
int
mov
push
ret
insl
dec
icebp
adcl
sti
fnstenv
adc
or
or
jnp
lock
cmp
std
int
cmpb
fsubl
mov
add
push
sti
push
or
xchg
fadds
mov
sahf
and
xchg
jns
sbb
std
mov
into
add
bound
daa
pusha
repnz
xchg
mov
dec
out
jmp
inc
and
icebp
xor
jmp
repnz
xchg
mov
jmp
fsub
enter
inc
fldcw
or
ss
in
xchg
stos
xchg
add
subl
sbb
aaa
push
outsl
repz
xlat
mov
mov
icebp
sub
push
testl
stos
mov
outsl
fldt
xchg
dec
xor
dec
or
mov
daa
fsub
pop
mov
hlt
add
leave
add
fidivs
icebp
data16
flds
jp
scas
push
sub
popa
fsin
mov
jb
stc
mov
push
icebp
clc
nop
neg
pop
jb
cmpl
jb
fidivs
loopne
int
icebp
leave
jge
flds
adc
popa
fsin
push
dec
mov
jmp
jmp
insb
out
data16
in
data16
add
psubsw
add
call
jo
add
mov
addl
lret
decl
inc
pop
cli
mov
das
push
decb
jns
dec
das
je
in
jg
mov
add
jnp
or
mov
and
add
push
sti
push
dec
add
xor
addr16
push
mov
xlat
add
mov
loop
pop
aad
mov
clc
fsts
out
std
pushl
lret
out
cmp
cmc
cmp
std
in
out
mov
xchg
cmpl
jle
in
addr16
pop
xchg
mov
and
pop
push
mov
fcoms
out
add
add
mov
add
pop
cmp
mov
mov
lcall
std
ss
adc
xor
jae
pusha
ret
pop
scas
jmp
xchg
dec
and
fstps
add
test
mov
int3
inc
jp
mov
mov
mov
out
fsub
mov
out
rcrl
add
out
mov
xor
shrl
or
punpckldq
pop
scas
xor
pop
inc
xchg
sub
xor
les
aad
add
ljmp
cltd
push
call
sbb
aas
jno
mov
filds
push
add
fmul
pop
sbb
aas
jge
andb
and
arpl
imul
pop
pusha
rolb
jmp
int3
cli
insb
mov
pusha
in
push
iret
jg
xchg
fdivr
jmp
jns
popf
test
pushf
rclb
mov
add
pop
repnz
and
pusha
sub
sbb
mov
mov
shl
call
test
int3
adc
pop
push
call
bound
daa
push
xchg
add
dec
fildl
insb
pop
out
mov
xchg
testb
add
and
and
sub
int3
pop
mov
sti
addr16
and
pop
enter
jmp
add
mov
cmc
add
push
ret
add
popa
cmp
inc
lahf
mov
test
je
sahf
add
sub
add
fs
lea
mov
callw
inc
and
lock
sahf
lods
cmp
daa
xchg
xchg
adc
add
mov
or
mov
or
sar
or
mov
cmc
mov
inc
inc
call
fldcw
xor
push
out
cmp
mov
mov
rorb
movsb
inc
push
xlat
cmp
packsswb
std
gs
nop
movsl
sub
mov
jp
cld
movsb
mov
addl
add
fisubrl
xchg
pop
shlb
scas
popl
bound
mov
lock
xor
and
in
int3
sbb
ds
shr
bound
jge
mov
fcoml
in
adc
pusha
test
outsl
cmpsl
add
or
in
bound
mov
push
loope
mov
outsb
sub
mov
bound
jle
in
push
arpl
out
push
jmp
bnd
add
lret
add
cmc
call
filds
adc
stc
jmp
cmc
push
shl
mov
inc
int
sub
hlt
add
inc
jmp
data16
inc
jmp
stc
jmp
lods
fs
kmovb
push
sbb
stc
fs
pop
or
stc
out
dec
sbb
movsl
icebp
push
divb
and
int
and
jnp
push
lea
mov
push
mov
push
sub
add
rcrb
and
xor
arpl
push
test
cmpsl
cmp
test
ja
cmp
xor
shlb
jae
pusha
cmp
adc
popa
in
in
fcoms
add
and
push
add
push
or
dec
mov
xor
divl
or
cli
push
movsb
or
sbb
daa
mov
ds
movsl
out
adc
std
pop
mov
rclb
push
mov
xor
and
jmp
push
xlat
add
push
and
sar
fs
inc
or
add
mov
cmp
xchg
lods
adc
std
icebp
add
in
add
mov
push
add
mov
add
pop
sbb
arpl
inc
inc
bound
mov
loopne
push
cmpsl
add
and
stos
sbb
call
jl
fnstenv
rcrl
push
push
push
movsl
inc
jmp
adc
push
cmpsl
das
adc
arpl
or
bound
mov
loope
inc
push
sar
jae
sbb
shll
lock
mov
dec
loopne
mov
loope
push
ljmp
mov
adc
push
and
jge
test
fldenv
icebp
jge
movsl
idivl
push
hlt
push
jb
add
call
shll
mov
stos
leave
push
mov
sbb
sub
rcrb
inc
xchg
shl
and
mov
xor
add
loop
in
into
mov
rcr
xor
push
and
stc
add
insl
and
and
mov
shr
dec
push
push
sbb
call
setne
out
add
int
adc
lea
add
pop
inc
lock
pop
aas
or
mov
dec
sbb
orl
mov
jae
int
fistl
clc
daa
dec
push
xchg
pushf
xor
movsl
sbb
rclb
in
pushl
adcl
je
scas
shl
testb
in
adc
shlb
dec
dec
pushl
lods
std
xchg
or
xor
or
scas
jae
fdivrs
xchg
scas
shl
hlt
stc
out
inc
inc
add
shrl
adc
std
pushl
scas
xlat
jle
mov
pop
test
dec
mov
push
jno
push
push
jmp
sarl
icebp
mov
push
xchg
subb
and
inc
daa
add
stos
pop
push
fnstenv
cs
mov
sub
out
add
shrb
out
adc
out
cltd
jecxz
push
and
mov
inc
bound
call
mov
int3
xchg
mov
jne
inc
bound
fistl
ljmp
les
lret
cmp
adc
dec
ret
int3
add
bound
call
push
aas
call
daa
push
sbb
jmp
pop
push
and
out
in
add
popa
pop
inc
add
sbb
flds
ss
xchg
pop
popa
push
shl
std
call
xchg
push
fsubp
loope
call
xor
add
popa
cld
shrb
and
bound
insl
in
stc
jmp
lock
test
cmp
subl
fyl2xp1
adc
imul
adc
inc
out
add
test
cld
push
stos
add
xlat
mov
or
jmp
rclb
repnz
adc
fadds
add
shll
lret
jmp
add
adc
xor
insb
repnz
adc
xlat
xor
testb
adc
ror
adc
xlat
add
and
jl
icebp
mov
mov
rolb
add
outsl
imul
xorl
addb
mov
inc
sti
sahf
pushf
add
xchg
or
xor
or
xchg
fcoml
das
add
cmp
or
push
jge
jle
xchg
add
jl
psubsw
xchg
in
sar
es
adc
push
dec
and
inc
sub
arpl
add
jae
daa
mov
lods
adc
sarl
test
adc
pop
xchg
mov
cwtl
push
add
mov
mov
bound
cmc
jmp
add
and
add
sbb
sub
imul
add
insb
mov
cmp
inc
adc
jne
cld
add
sarl
add
fnstcw
orb
popf
push
in
mov
adc
xchg
push
mov
jo
lcall
sbb
lret
std
sub
add
sbb
jmp
testb
lds
mov
pop
imul
or
popa
and
int
call
push
adc
scas
je
and
and
add
jno
add
into
aaa
add
in
popa
flds
incb
dec
loope
test
outsl
push
inc
or
inc
ret
adc
push
sbb
fs
roll
add
or
sbb
jae
mov
mov
loope
outsb
fldl
test
or
mov
mov
test
ficomps
ljmp
push
jmp
mov
jb
dec
in
add
add
pop
mov
and
les
dec
fs
inc
push
add
loop
dec
dec
jecxz
push
les
cmp
add
bound
js
xchg
push
push
and
push
in
sub
cmp
jo
mov
xchg
xsha1
cmpsb
dec
ss
adc
es
jmp
aad
adc
rcr
mov
enter
mov
popa
imul
push
xchg
mov
mov
push
cmp
jp
bound
sti
jb
lods
decl
out
loope
addr16
fnstenv
pushf
fwait
daa
call
in
mov
popf
add
mov
push
mov
out
bound
test
int
sbb
fildl
adc
lcall
pushf
popa
push
mov
fists
fisttps
cmp
mov
sbb
in
add
jle
aad
xchg
test
out
pusha
push
mov
test
icebp
insb
out
in
mov
add
fldl
test
pop
fsts
xchg
cmc
test
popa
adc
pop
dec
inc
inc
stos
and
out
frstor
cltd
cmp
inc
jne
and
mov
or
pop
sbb
and
push
mov
add
out
adc
adc
xor
sub
insb
pop
std
je
or
and
es
les
not
jmpw
push
add
inc
dec
and
inc
data16
inc
ds
pop
cmp
ret
std
cmp
adcl
mov
cmp
lret
jnp
mov
or
push
add
mov
mov
add
lret
ds
add
mov
xlat
add
add
inc
cli
mov
lret
arpl
add
add
add
xchg
jge
cmp
std
clc
mov
add
bound
test
inc
or
adc
in
add
jbe
push
jp
xorb
add
jle
pushw
xor
loop
add
inc
push
stc
mov
cld
loopne
xchg
imul
add
jg
int
push
xchg
push
or
aad
call
xlat
mov
inc
lret
sti
mov
inc
pop
or
mov
mov
mov
mov
je
fnstenv
adc
pop
stos
add
fldcw
fnsave
add
xchg
xchg
imul
dec
nop
sub
and
add
pop
out
add
pusha
inc
inc
stc
pop
jge
fsub
add
sbb
pop
roll
fnstenv
movsl
dec
adc
jmp
and
add
popa
andl
js
sub
add
stos
fistps
pop
or
pop
push
cmc
loope
jmp
and
cmp
cs
push
add
popa
repz
popa
adc
or
testb
cwtl
xchg
adc
pop
stc
jmp
ja
push
ljmp
test
popa
jle
in
sbb
jp
int
xchg
les
xchg
les
xorb
scas
call
dec
dec
and
cld
cmc
in
jmp
popa
or
fisubrs
pop
add
mov
add
add
add
pushl
add
lds
jnp
add
rolb
and
mov
jg
push
adc
call
adc
push
add
fdiv
adc
subl
and
jno
and
adc
xchg
addl
xor
push
jl
cli
add
roll
je
jp
or
aas
iret
add
movsl
les
and
out
lea
add
cld
loopne
cmp
movsl
xor
bound
loope
fimuls
sbb
inc
mov
test
aam
xchg
cmp
and
stos
ja
sub
add
hlt
out
bound
add
andb
mov
add
fwait
icebp
aad
dec
aaa
std
call
cmpl
bound
arpl
out
loopne
call
clc
push
jmp
add
pop
xchg
ds
sub
pop
inc
fstpl
fcoml
clc
mov
cltd
mov
cmpsb
out
add
sub
cmp
out
push
and
jge
lahf
mov
bound
push
cmp
adc
out
bound
cmp
out
cmp
scas
push
adc
mov
push
add
push
push
inc
or
xchg
out
adc
rolb
sbb
ret
lea
cli
cld
add
inc
jmp
sahf
inc
or
mov
adc
stos
cmc
sbb
mov
add
xchg
pusha
flds
pop
shll
bound
mov
jnp
mov
jge
pop
fnstenv
sub
push
int
cmpsb
in
insb
push
sub
lret
sub
pop
push
add
fadds
andl
add
lret
dec
cmpsl
cmp
fadds
je
les
call
jns
inc
mov
push
mov
sbb
lds
add
adc
push
arpl
push
pop
push
mov
cmpb
add
stos
outsl
cmp
mov
into
and
decl
sti
push
pop
inc
push
ret
sub
addb
add
dec
push
jle
dec
add
bound
xchg
fsubrl
jae
dec
loope
and
aad
sbb
cmp
lock
fildl
add
es
push
inc
push
jnp
dec
add
mov
arpl
push
fprem
int
clc
rcll
sbb
mov
push
and
lcall
daa
or
sub
add
bound
daa
sbb
xor
add
cs
std
bound
fnstenv
sub
sub
pop
int
bound
fdivrl
in
js
mov
inc
bound
xor
fsub
add
push
bound
arpl
out
call
push
dec
aas
arpl
out
xchg
dec
mov
jg
nop
add
js
add
jno
add
pop
arpl
fnstenv
in
out
fistpl
add
pusha
jge
xlat
out
fistpl
add
add
call
daa
pop
pop
inc
and
add
jmp
call
jg
cmc
or
insl
test
popa
push
ret
aad
mov
dec
aad
out
pop
inc
jmp
call
outsl
push
mov
push
call
lahf
aad
pushf
invd
cli
shlb
sub
jb
or
jmp
frstor
jmp
xchg
pop
fiaddl
jmp
xor
sti
addr16
or
add
insl
orb
mov
jg
lret
test
sar
dec
add
adc
faddl
add
push
into
lea
in
cmc
xlat
add
add
call
pop
dec
fisubs
lret
fcoml
cmp
dec
mov
rolb
je
xor
cmp
add
stos
orb
ficoml
scas
cmp
mov
sbb
xchg
ret
mov
sar
mov
sub
cli
fiadds
stos
jg
ret
fistpll
flds
xor
cmpsb
jmp
push
and
test
popf
push
add
leave
jp
fwait
cli
test
outsl
push
arpl
std
cmp
xlat
daa
xor
rorb
bound
ja
ds
scas
lock
push
cmp
aas
add
bound
mov
jo
add
lods
fsub
add
int3
ja
xor
int
cmp
sbb
lea
std
idivl
sub
cmpsb
inc
arpl
loopne
or
int3
jg
and
iret
icebp
xor
or
rclb
sub
cmpsl
add
lock
add
cmp
mov
out
fucom
dec
sbbb
ret
fcompl
ljmp
cmpsb
lret
or
ficoml
sti
int3
pusha
mull
pop
shlb
mov
pop
jo
dec
mov
or
jmp
ret
cmpsl
outsl
pop
call
loop
je
ficomps
mov
insb
loopne
call
and
inc
jmp
cmpsl
push
mov
or
or
jb
or
inc
cs
negb
add
fldcw
rclb
decl
jne
repz
add
hlt
and
or
jne
pop
inc
and
sbbb
push
mov
orb
test
fildl
jge
sub
inc
loop
push
cmpsl
movsb
arpl
fsub
and
enter
cmpsl
and
je
and
xchg
lods
stc
call
hlt
and
push
cwtl
insl
add
cmp
orb
rorb
push
inc
xchg
pop
inc
and
mov
dec
xchg
cwtl
jle
lcall
push
js
fldcw
les
sahf
out
pop
lods
add
mov
jmp
shrl
xchg
pop
add
bound
sbb
jmp
popf
xchg
sub
lret
cli
mov
lds
inc
adc
test
cli
outsl
ret
iret
lret
inc
dec
add
cmp
jne
aaa
cmp
insb
add
cmpsb
mov
mov
dec
mov
add
call
add
mov
pop
lds
fldcw
fstpl
lret
fwait
and
sub
daa
xor
or
mov
and
pop
sbb
fisttps
jmp
add
cltd
repz
ja
push
fsubl
out
xor
out
mov
test
lcall
cli
add
popa
jo
mov
fldenv
and
pop
xchg
je
cmp
ljmp
sbb
es
sub
mov
mov
add
int3
adc
inc
or
and
inc
jmp
mov
incl
jmp
jb
mov
add
subl
add
sbb
lea
add
xchg
add
add
pusha
call
add
and
add
in
or
cmp
and
bound
call
rclb
addb
cmp
cmp
je
dec
inc
aam
cmpsl
mov
fnstenv
jl
stos
stc
push
dec
mov
push
push
jp
mov
mov
mov
mov
dec
call
fwait
jno
bound
mov
lret
or
orb
cs
fincstp
movsl
ss
std
test
lret
push
iret
mov
fstpt
out
outsl
std
jmp
aaa
add
cmp
pop
mov
add
add
add
sahf
lock
jmp
ret
or
stos
jae
cmp
and
inc
dec
arpl
std
arpl
add
dec
pushf
enter
out
inc
mov
xchg
fld1
add
push
scas
ficoml
in
mov
fwait
cmc
cmp
add
loopne
in
add
out
out
jmp
out
bound
pop
push
repnz
out
pop
lock
mov
bound
fistl
call
in
or
test
in
push
fnstenv
add
dec
out
bound
andb
sti
cmp
scas
cld
das
jo
call
pop
cmp
scas
add
and
inc
jmp
lock
mov
call
flds
jmp
out
mov
popa
popa
aaa
add
lock
mov
jge
inc
jmp
loop
pusha
call
and
test
in
ja
xchg
call
movd
lcall
ret
icebp
adc
clc
in
push
xchg
add
jmp
mov
clc
cltd
cmp
mov
push
lcall
sbb
push
and
add
fsubrs
pusha
dec
flds
clts
orl
cld
sub
lss
ljmp
insl
and
dec
adc
cmp
add
cld
add
mov
mov
imul
flds
call
xor
sti
push
rcrl
or
ret
inc
cmpsb
sbb
sbb
test
mov
ret
pop
les
push
jmp
mov
add
xchg
loope
bound
and
ret
ds
std
jmp
inc
and
testb
arpl
std
out
push
pop
cli
jmp
ret
xchg
jmp
test
addb
cmp
arpl
std
mov
fisttpll
vaesdec
js
rcrl
mov
fsubl
jo
call
add
push
lret
arpl
out
bound
jae
out
push
ret
xchg
out
mov
add
out
push
add
out
imul
add
jmp
int3
adc
adc
adc
bound
sbb
outsl
add
fcos
or
lods
ljmp
dec
call
call
andb
add
popa
jo
cmc
sub
jne
sub
cmc
xor
je
cmc
dec
adc
cli
sahf
loopne
or
sbb
xor
mov
loopne
or
xor
adc
and
das
in
inc
int
popa
jge
pop
flds
clc
mov
sbb
scas
data16
dec
fyl2xp1
mov
cs
jmp
mov
rol
jmp
js
add
add
jbe
push
test
aad
mov
dec
dec
cmp
jge
outsb
mov
lret
repz
call
pusha
mov
and
pop
xor
mov
push
push
loop
decl
pop
icebp
decl
aad
je
lods
scas
mov
add
push
pushf
imul
push
testb
fucomp
mov
push
imul
add
mov
shrb
xchg
add
faddl
add
sbbl
out
test
out
cmc
xchg
ja
xchg
nop
imul
mov
mov
jmp
jb
add
jb
mov
jg
mov
fidivrs
jmp
push
shr
addb
mov
test
cmp
arpl
sar
mov
sti
int3
stos
mov
iret
repnz
std
test
scas
adcb
mov
icebp
out
mov
jae
fldenv
addb
add
jl
loope
fiaddl
std
outsb
jg
add
pop
addb
nop
sbb
movsl
xchg
xor
fnsave
fsts
pushf
inc
cmp
add
pop
ret
mov
xchg
dec
rclb
out
insl
pop
dec
adc
fsub
add
imul
out
or
aaa
add
cli
cltd
imul
pop
insb
add
fldcw
mov
push
add
push
add
popa
or
popa
or
and
pop
sbb
and
flds
fs
cli
cld
jmp
sub
rcrl
sbb
loop
je
rcrl
sbb
jb
subl
loop
fistpl
sbb
dec
call
in
stc
cld
jmp
test
sti
ss
jae
xchg
pop
lds
mov
push
mov
movsl
stc
pop
lods
cli
int3
add
fiaddl
add
cmp
or
jp
daa
jbe
incl
sti
flds
ja
push
insl
and
and
idiv
inc
fs
or
dec
idiv
jp
xchg
fldl
add
mov
jne
fldl
scas
cmp
xchg
xlat
cmc
je
stc
cmc
or
and
mov
xchg
test
inc
cs
and
inc
and
push
cmpb
sbb
into
lea
fldcw
adc
and
mov
decl
pop
nop
cld
or
mov
call
sbb
jbe
mov
push
mov
out
fidivl
mov
dec
int
jl
jle
jmp
jns
shlb
add
xor
std
jp
and
test
xor
sti
cmp
pop
dec
cmpb
sbb
mov
out
cs
mov
das
xchg
fldcw
nop
push
mov
fists
and
sub
inc
dec
movsb
bnd
pop
ljmp
pop
shl
jmp
out
bound
lea
jnp
mov
test
mov
xor
pop
lock
add
std
repz
xlat
out
add
pop
and
xorl
aam
jo
call
xchg
call
mov
sub
les
ficomps
test
mov
jno
or
fmul
pop
fbld
mov
add
mov
adc
jns
pop
xor
fwait
push
push
movsl
test
stc
cli
mov
add
jmp
pop
dec
lds
fldenv
fsubr
add
and
stc
aam
aam
jmp
popa
or
push
loopne
clc
push
sub
aaa
push
xchg
mov
dec
or
movswl
decl
dec
adc
cwtl
pop
xor
cld
mov
andl
push
pop
sarb
xor
dec
and
push
enter
popa
mov
mov
cld
ljmp
sub
and
in
mov
dec
lea
mov
decl
insl
adc
jmp
loope
fldl
mov
adc
jg
data16
and
adc
pop
cmp
lods
xchg
rorl
push
xchg
std
jmp
cmp
pop
cld
jle
sub
adc
mov
cmc
add
mov
jb
cli
xchg
mov
xchg
sub
and
cmp
and
cmp
and
sub
and
sub
and
lcall
push
test
dec
jle
pushf
xor
std
jmp
mul
dec
cmp
ja
inc
divb
ds
mov
xchg
xor
mov
inc
xchg
gs
shll
out
add
cmp
testb
push
daa
jp
pop
xor
and
les
mov
repz
cmc
scas
xor
in
add
daa
hlt
loope
out
bound
sahf
xor
nop
xchg
cmc
or
lds
insl
enter
xchg
add
cmc
daa
aam
or
idivl
push
cmpsl
clc
and
loop
cwtl
and
sbb
or
int
packuswb
rcrb
and
sbb
test
push
xchg
test
add
gs
inc
add
sbb
lds
mov
les
test
sbb
test
repz
addl
dec
dec
or
data16
dec
rolb
dec
jp
mov
stc
test
push
out
repnz
sti
jbe
sub
gs
fyl2xp1
push
inc
push
add
mov
jns
cmpsl
xchg
stc
incb
addb
fidivrl
addr16
xchg
mulb
movsl
test
outsb
cmp
add
cs
xor
jns
insl
and
dec
ds
mov
dec
mov
cmc
sub
cmp
push
ficompl
and
aad
add
sbb
lods
push
mov
and
sub
jp
push
testl
int3
push
call
jmp
jnp
mov
xchg
sbb
sub
fcoms
add
rorl
ret
push
int3
xor
bound
adc
das
jge
iret
mov
dec
xchg
mov
mov
add
idiv
fdiv
jge
sub
inc
decl
and
loopne
mov
inc
inc
rcl
mov
out
sub
xchg
lret
push
addb
fldcw
cmpl
push
cltd
imul
out
in
outsb
pop
jge
mov
bound
xor
push
jp
adc
fstl
xchg
add
ret
inc
aaa
adc
mov
les
push
les
andb
fwait
daa
outsb
push
push
imul
out
xlat
adc
and
or
inc
in
outsb
push
std
cld
push
jle
fmuls
mov
and
loop
dec
leave
add
cmp
jmp
flds
gs
sub
pusha
roll
and
cmp
mov
jb
stc
jb
negl
push
loopne
add
call
and
jmp
bound
test
outsl
flds
mov
mov
mov
jge
sub
cmc
das
or
notb
xchg
call
je
fbld
out
imul
add
dec
aas
sub
icebp
push
inc
xchg
and
inc
add
xchg
cs
sbb
test
aad
add
xchg
icebp
lea
bound
repnz
or
sub
push
add
dec
inc
hlt
mov
mov
mov
or
std
fmull
dec
dec
in
jae
sub
sti
push
mov
inc
inc
xchg
sti
aad
shlb
gs
and
push
call
loope
sbb
cmp
mov
out
out
pusha
dec
jo
add
outsl
clc
add
lock
in
or
mov
rcll
ljmp
lds
std
xchg
cld
push
cli
dec
adc
bound
jne
sub
sub
ljmp
jb
incl
fcmovb
shlb
inc
inc
fcos
xor
mov
pusha
in
pop
bound
adc
aaa
fmuls
add
mov
iret
pop
xlat
sub
fdivrs
cwtl
pusha
lds
cmpsl
divl
std
dec
mov
jge
in
ret
insl
popa
test
pop
in
or
inc
inc
jl
cltd
lcall
mov
adc
arpl
outsb
sub
lcall
add
enter
jecxz
test
sbb
stos
flds
add
dec
sub
cli
cs
shl
cwtl
mov
sub
jmp
xchg
mov
cli
cmp
insl
push
jecxz
test
sbb
stos
flds
gs
sub
jl
gs
dec
movsl
pop
inc
loope
or
ss
jmp
and
loop
or
aas
push
movsb
fiaddl
bound
out
test
mov
sbb
enter
or
rorb
mov
or
stos
dec
mov
in
bound
add
stc
pop
xlat
lcall
xchg
stos
notb
xor
sub
cmpsl
fbstp
pop
or
add
xchg
mov
repnz
test
popa
std
inc
jns
add
add
sysret
sbb
addl
ret
cmp
ret
inc
dec
sbb
inc
push
cmp
je
xor
dec
pushf
stc
bound
cmp
inc
std
ret
ror
mov
inc
cmp
loop
ret
cmp
push
mov
fisttps
jae
add
das
xchg
xchg
pop
stos
test
inc
mov
inc
or
sub
add
imul
xchg
lahf
inc
push
jne
sbb
lock
out
jecxz
jg
xchg
outsb
mov
jnp
dec
scas
je
call
push
inc
std
xchg
or
and
adc
add
xchg
es
hlt
push
sbb
mov
jp
cmc
jl
cmp
fldenv
ss
add
enter
inc
cmp
stc
and
lret
out
add
insl
out
bound
jns
and
pop
ss
adc
add
push
daa
or
out
bound
sub
jp
scas
add
daa
out
mov
adc
add
and
sub
shrb
push
loop
bound
movsl
popa
and
insb
int3
add
add
xlat
adc
lods
popa
xchg
mov
mov
out
jmp
xchg
mov
jne
inc
jmp
mov
add
xchg
and
ret
push
aam
mov
sbb
sub
pop
sub
push
push
push
mov
jns
pop
sub
push
inc
jmp
add
cmpl
insl
mov
and
jne
cmp
or
or
call
cwtl
int
inc
or
add
lods
mov
mov
mov
mov
adc
gs
shrb
or
and
sub
stc
incl
push
push
outsb
pop
test
and
push
stc
mov
divb
sbb
aad
jo
scas
stc
popa
out
lock
rcll
inc
push
inc
std
xchg
mov
pop
mul
fucomi
incb
adc
push
fisttps
std
cli
cltd
mov
or
in
std
jmp
repz
std
ljmp
stos
incl
mov
mov
dec
movsl
lods
rorl
repz
add
add
cli
bound
shlb
ds
inc
lcall
out
hlt
rcr
dec
jns
pop
inc
xchg
mov
insb
call
jne
xchg
insb
jne
negl
int
cmp
sbb
les
mov
cmpl
repnz
inc
jmp
add
cmp
cmc
and
fisubrl
fimull
sub
fistps
repnz
andl
pop
add
verr
out
test
mov
sti
int3
sbb
nop
stc
bound
cli
mov
and
inc
jmp
cmp
push
push
mov
add
loope
inc
jmp
sti
loopnew
sbb
lds
stc
jmp
addr16
jmp
enter
fucomp
inc
jmp
fldl
jnp
test
xor
jns
jnp
jge
jno
outsb
stc
xor
bound
repnz
cmp
adc
in
incl
int3
mov
adc
or
push
mov
mov
je
lea
insb
lock
fiaddl
cmp
mov
sti
popa
testb
pusha
stc
decl
pop
testl
incb
jae
cwtl
mov
adc
inc
and
je
push
out
ja
jns
mov
std
mov
das
adc
add
adc
xchg
mov
das
stos
fiaddl
jne
push
out
mov
fsts
mov
push
fdivrs
das
sbb
std
mov
cmp
or
mov
outsb
cli
mov
sbb
inc
std
pop
dec
repz
add
mov
fdivl
lods
xor
xchg
adc
rorl
mov
sub
enter
mov
xchg
outsl
xchg
jbe
inc
js
jae
fldcw
test
add
test
fdivrl
adc
jb
jno
mov
negl
aam
xchg
enter
add
xchg
insb
jno
push
data16
fdecstp
inc
adc
and
pop
xchg
movl
push
sbb
test
fimuls
or
inc
sahf
and
sti
inc
loopne
jmp
jl
pusha
enter
jmp
and
add
mov
jno
mov
sbb
push
loopne
test
push
cmp
mov
negl
dec
cltd
loopne
dec
ror
shll
cmp
mov
adc
xchg
dec
sbb
push
loopne
into
cmp
xor
cmpsl
call
dec
out
fdivrs
pop
push
add
mov
stc
xlat
sub
sub
push
dec
cmc
stos
mov
pop
pop
nop
jae
fwait
mov
add
dec
mov
cmpps
xlat
add
jb
mov
adc
xlat
add
mov
xlat
add
mov
adc
cwtl
sbb
cmp
add
mov
adc
imul
rorb
call
cmc
aad
std
test
iret
fiaddl
jmp
or
movsb
inc
or
inc
mov
or
cmp
subl
mov
sbb
std
dec
add
subb
push
mov
push
movsl
jbe
jp
push
cli
test
sahf
aas
jnp
sbb
xchg
rep
out
repnz
push
cs
and
mov
and
xchg
add
sub
pop
lret
pop
test
cmp
pop
subb
ficomps
andb
test
xor
pushf
fcomps
xlat
push
scas
add
mov
pop
cmpsb
sub
ljmp
filds
test
and
sbb
test
pop
ret
subb
ret
sub
out
sub
fsubrl
fidivrl
ret
fstps
pop
cmp
cld
add
mov
loop
xchg
mov
insl
in
int3
pop
fistps
mov
mov
and
and
in
add
jno
shlb
sbb
inc
sbb
dec
in
pop
jmp
pop
test
push
dec
and
popa
flds
pop
scas
ljmp
popa
pop
int
xor
cs
jno
movsl
testb
call
fwait
loope
and
popa
flds
in
sbb
popa
hlt
fsub
in
lahf
faddl
pop
jno
cmp
xlat
and
add
popa
cs
pop
cmp
or
add
scas
notb
dec
and
setne
add
daa
call
mov
cltd
sbb
add
sbb
outsb
adc
cs
sbb
faddl
mov
decl
insl
push
xchg
mov
adcl
jae
mov
mov
jns
cmp
sti
xor
jmp
or
je
test
stc
push
cmp
dec
adc
fisubl
inc
jno
pop
loope
gs
es
or
decl
push
cmp
cmpsl
add
sub
adc
mov
pop
mov
ret
fiadds
or
push
punpckldq
xchg
andb
sar
mov
insl
cs
dec
out
pop
aam
rclb
add
scas
fidivrl
jp
std
cmp
xor
bound
fwait
sub
std
test
dec
testl
jle
jno
ss
fstps
std
mov
mov
enter
pmaxsw
daa
add
or
jmp
pop
mov
push
in
mov
pop
mov
sub
and
cmpb
xlat
jle
aad
shlb
test
fidivrl
add
jp
or
dec
push
movsb
pop
fst
insb
cmp
aad
arpl
mov
jmpw
inc
stos
fiadds
sbb
outsb
or
add
in
flds
cmpl
stc
sbb
incl
in
cld
stc
mov
mov
insl
cmp
aad
dec
mov
xor
jge
or
rolb
fdivrs
shr
or
popa
or
sub
lods
mov
fstps
mov
lock
pop
xchg
dec
sbb
add
test
jecxz
add
sub
addl
xchg
xchg
mov
jae
sub
mov
call
jmp
mov
add
psrad
js
xor
push
cltd
stc
scas
sti
or
pop
mov
add
dec
sbb
sbb
xor
push
push
or
xchg
or
addr16
xchg
testl
jg
sbb
xor
repnz
bound
insb
push
jo
xchg
popa
jae
divl
out
jg
incl
jmp
jo
xchg
rcrb
icebp
fdivs
push
repz
sub
inc
ret
and
push
fnstenv
test
cmp
jmp
add
push
jg,pn
test
xchg
popa
dec
imul
es
inc
adc
add
rcrl
std
scas
add
xor
out
in
incl
out
cmp
es
aad
outsl
push
xor
testl
out
adcb
sub
fs
mov
jg
or
lock
or
fs
xchg
out
push
adcb
aad
bound
add
mov
sub
popa
flds
mov
jmp
or
add
loop
sub
popa
flds
xchg
stos
faddl
sub
mov
bound
mov
pop
popa
idiv
cmc
mov
sbb
jne
je
push
xchg
faddl
test
and
or
cmp
loope
and
cmp
fnstsw
stc
je
aam
jmp
sahf
aad
push
pop
faddl
add
dec
and
dec
movzwl
dec
add
xchg
fdivr
cmp
addb
sub
stc
add
fildl
ret
and
adc
ss
sbb
insb
iret
pop
push
or
orl
add
enter
mov
aad
inc
push
leave
incl
mov
das
push
je
insl
and
in
aam
int3
sti
test
push
xchg
push
int3
loop
ret
mov
ja
idivb
dec
or
in
sub
sub
mov
sub
jmp
and
pop
cmc
fdivr
and
cmpb
jo
std
pop
cmpsl
imul
add
xor
push
or
sbb
add
mov
pop
or
pop
add
pop
pusha
lahf
mov
cmp
inc
sti
enter
push
test
jo
decl
sbb
je
outsb
in
pop
adc
bound
arpl
ret
dec
mov
cld
call
fbld
add
add
or
call
paddusw
sub
outsb
shl
xlat
pop
dec
pop
jmp
out
in
out
add
jmp
fucomp
filds
bound
pop
mov
aad
ret
pop
fsub
add
es
ljmp
bound
add
pop
es
inc
lods
cmp
add
adcb
dec
mov
je
dec
push
leave
jbe
mov
stc
data16
or
callw
or
popa
jmp
mov
cs
and
popa
dec
inc
in
adc
addr16
inc
jg
leave
notb
jle
out
jg
sub
ds
int3
push
in
add
cmpb
lock
stc
jae
inc
sbbb
shlb
jl
dec
movsb
pop
push
in
inc
adc
bound
popa
aad
jne
dec
call
mov
test
aas
fldl
adc
fadds
cmp
mov
add
adc
xlat
add
jmp
pop
push
int3
incl
xor
std
mov
imul
clc
je
xchg
jne
incl
out
aas
mov
ljmp
pop
jno
mov
pop
cli
loope
push
insl
push
jb
je
mov
lods
cli
xchg
enter
sti
idiv
push
mov
xchg
notb
dec
cmp
ljmp
movsb
add
sahf
mov
out
jmp
push
insl
cmpsb
jo
test
fs
sub
fsubrs
cmp
std
cs
fcoms
aam
imul
pop
jno
ss
jp
push
push
jno
xchg
inc
test
ret
stos
adc
fsubs
roll
add
fldl
adc
jne
pop
dec
lods
aad
sub
dec
aaa
nop
scas
jne
pop
xchg
bound
mov
pop
and
imul
pop
fs
out
popa
daa
push
and
clc
xchg
in
add
and
or
popa
push
clc
shll
fsubrp
and
inc
aaa
push
leave
rcll
fnstsw
je
add
adc
sbb
in
fisubl
repz
jb
xorb
xor
ja
or
movsb
or
lea
sub
sarb
jb
dec
shll
popa
cmp
loope
call
shrb
fnstenv
idivl
fwait
xor
call
pushl
mov
jle
jns
add
or
cmp
rorl
popa
aas
add
outsb
divb
adc
std
andb
mov
sarl
je
popa
aas
add
loopne
orl
jnp
dec
incl
xchg
or
sbb
xor
dec
push
out
dec
push
and
pop
push
add
dec
jg
fildl
sbb
xchg
pop
cli
ja
in
aas
jmp
and
jle
shll
push
or
ljmp
fidivrl
incl
addb
insl
subl
and
rolb
cmp
xor
adcb
pop
jmp
cli
ja
out
aas
bound
push
mov
xchg
mov
or
sub
or
sbb
je
add
fprem
in
jge
out
mov
jge
fcomi
ret
mov
imul
test
jge
jnp
push
fcompl
cld
xorl
mov
sti
enter
fldenv
insl
ja
and
sbb
add
push
cmp
mov
xlat
ret
cmp
in
jmp
ds
aad
sbb
fs
fidivs
ret
add
adc
mov
fcompl
push
ljmp
mov
popf
insl
loope
sub
jae
int
orl
sub
je
test
add
or
popa
xchg
mov
jmp
out
out
data16
mov
mov
jge
adc
out
push
add
popa
addr16
int
aad
repnz
and
popa
loopne
pop
pop
flds
jb
add
icebp
popa
bound
data16
test
dec
aam
push
push
daa
sub
add
repz
pushf
aam
je
int3
adc
int3
adc
divb
cli
addr16
add
es
sbb
lcall
cmp
mov
mov
pop
sbb
inc
dec
lret
sub
cmp
jae
aam
sbb
lea
sbb
outsl
aam
or
fadds
call
bound
push
pop
cli
std
outsb
cmp
push
jecxz
or
or
inc
out
jecxz
cli
or
inc
popa
jnp
sbb
cmp
inc
mov
dec
insb
shll
push
xchg
insb
sarb
std
icebp
push
fimuls
movsl
addl
fnstcw
insb
lods
cmp
aas
add
test
loope
pop
xorb
incl
iret
stos
push
jno
test
movsb
rolb
cmp
bound
fld1
add
arpl
fcompp
out
and
or
outsb
cmp
addb
lcall
or
adc
aad
jge
add
out
call
pop
jbe
sub
jp
dec
add
adc
iret
inc
int
mov
in
in
aam
adc
pop
add
bound
imul
ret
and
push
jg
fsub
add
or
int
xor
jmp
imul
int3
push
lods
gs
add
mov
adc
jge
add
popa
andl
cltd
lods
fs
lds
mov
jmp
fs
sub
ljmp
pushl
outsl
jge
xchg
or
mov
popa
flds
insb
loop
imul
popa
fld
jmp
mov
je
stc
ficompl
add
xor
push
lods
mov
add
icebp
mov
adc
mov
and
pusha
int
add
cld
pop
shrb
lock
jmp
leave
out
inc
inc
mov
sub
lret
add
xor
je
dec
mov
aad
xchg
jnp
add
es
cmc
jne
add
cld
ljmp
xchg
and
faddl
add
add
test
std
call
sbb
ficomps
addb
bound
bound
mov
out
lret
fcmovnb
sbb
mov
dec
mov
aad
add
out
cltd
std
jmp
cmp
mov
sbb
sbb
or
out
sub
lcall
insl
rcll
mov
cmp
mov
add
loope
or
add
fnstenv
loop
out
pop
inc
cmpsb
pop
faddp
out
cltd
movd
bound
sbb
ret
fsubrl
rolb
ljmp
call
push
loope
mov
xor
out
leave
popa
shlb
pop
lods
mov
int
or
adc
adc
lock
mov
jle
sub
inc
push
out
xlat
add
fs
or
cmp
andl
outsb
inc
jge
add
mov
subl
lds
inc
push
leave
xorl
jae
push
xchg
stos
pushf
jbe
insb
xchg
insl
or
adc
insb
push
dec
or
add
test
and
or
sub
xchg
push
jle
and
mov
cbtw
loopne
pop
cwtl
pop
xchg
rolb
jle
xchg
cs
jb
pop
in
stc
pop
flds
fs
sti
into
adc
push
add
popa
cmpb
push
out
jmp
aas
out
rcrb
aas
cmp
in
mov
mov
and
cmp
mov
push
push
xor
inc
add
in
xchg
hlt
cmpsb
or
xor
or
test
leave
mov
xchg
adc
decl
out
in
inc
xchg
cmc
push
stc
or
test
pop
mov
sbb
call
add
divb
or
jmp
aad
and
mov
jl
cmc
ret
outsb
sahf
aas
bound
std
jle
jbe
mov
jmp
push
rolb
xchg
out
out
xchg
push
cli
jmp
fildl
movsl
out
out
fildl
cmc
test
push
cli
repz
bound
push
test
push
dec
mov
xor
xchg
in
push
sahf
int
mov
push
and
mov
hlt
shll
push
push
adc
fdiv
ret
test
jge
mov
mov
adcb
pop
lea
out
dec
sahf
lahf
push
dec
pop
fcoml
push
sbb
andb
mov
xchg
mov
mov
add
adc
lahf
push
or
daa
dec
or
adcl
std
add
dec
pop
push
fcomps
or
daa
push
fstps
ljmp
add
fldenv
push
add
flds
fs
test
flds
mov
sbb
into
sbb
adc
mov
loopne
scas
xor
push
lret
outsl
stc
xchg
loop
and
int
or
jo
push
pop
movsl
push
and
mov
push
and
adc
push
and
popf
cmp
aam
andl
aam
xor
push
jb
xor
popf
jge
test
sbb
and
mov
sbb
addl
sub
cmc
je
mov
push
rorl
xchg
push
pop
jo
mov
fmuls
shlb
pcmpgtd
enter
pop
sub
or
orb
leave
and
pop
add
ficoml
mov
xor
lds
xor
test
lods
in
xor
mov
aas
mov
jge
cmpsl
push
mov
cmpsl
pop
push
cltd
loopw
mov
mov
sbb
jecxz
pop
push
jmp
imul
xor
into
add
xchg
add
movsb
cmp
push
ss
lret
sub
outsb
add
jge
cmp
sbbl
push
ss
jge
inc
push
mov
dec
ds
pop
mov
pop
mov
sub
sbb
fstps
sbb
leave
movsb
push
adc
mov
mov
cmpsl
dec
lods
shl
add
loop
xor
mov
out
fsts
sub
xor
adc
jb
mov
xchg
and
xchg
push
xchg
xor
dec
dec
in
push
and
mov
js
cmp
and
sub
sbb
leave
ss
lods
adc
rol
clc
popw
sbb
aaa
add
jb
in
popa
call
std
cmc
inc
jmp
mov
push
mov
sub
rcrl
push
push
jo
data16
add
loop
jae
mov
arpl
in
arpl
insb
mov
push
dec
xchg
adc
stc
data16
dec
pop
add
insl
pop
popa
pop
ror
sti
aaa
add
cltd
iret
je
pop
icebp
adc
sub
popf
in
inc
and
inc
fdivr
push
insl
insb
pushl
mov
ucomiss
jle
push
gs
sub
maskmovq
dec
lea
jnp
test
and
notl
jne
adc
add
fdivs
push
lea
add
jo
dec
dec
adc
rcrb
push
mov
pop
in
std
fadds
lea
dec
push
mov
fldcw
pop
out
jb
mov
dec
adc
cmpb
push
and
mov
stc
pop
ljmp
aad
mov
cmpsb
mov
xchg
lea
mov
jle
jno
lret
cli
adc
mov
std
lcall
adc
mov
std
jp
dec
xor
xchg
enter
enter
repz
std
cmp
cmpsl
pop
jecxz
dec
or
jb
inc
fdivs
dec
call
gs
dec
sub
sbb
jle
out
into
jl
gs
outsb
fstpl
dec
aas
fs
out
outsl
push
mov
add
xchg
xchg
dec
jbe
aad
test
clc
loope
call
addl
out
fs
cmpsb
imul
jns
insl
pop
fimull
and
lods
out
in
xor
movsl
test
push
popl
sbb
add
add
stc
jmp
aaa
iret
test
data16
sbb
mov
mov
cmpsb
scas
ret
popa
pop
adc
mov
add
cmpl
add
push
xor
flds
inc
sub
sar
push
stc
fsubrp
and
pop
mov
pop
stc
fs
mov
cmp
je
mov
pop
call
mov
pop
xchg
stc
add
jns
or
mov
jbe
cld
decl
cmc
incl
outsb
es
mov
mov
sbb
test
or
adc
or
mov
divl
sbb
mov
adc
push
or
orb
adc
addb
add
decl
jge
std
push
testl
arpl
inc
addr16
repnz
js
inc
adc
cmpl
out
insb
clc
in
pushl
fnsave
mov
notl
cli
lds
out
outsb
inc
cli
fbstp
jb
lret
cli
push
mov
inc
or
mov
movsl
or
daa
lret
mov
or
icebp
push
xchg
std
mov
int
decl
mov
lods
lcall
jle
jne
js
popa
clc
ret
adc
fs
lea
sbb
mov
dec
imul
add
push
daa
lds
pushl
sbb
add
adc
xchg
popf
dec
pop
pop
data16
add
and
push
daa
hlt
cwtl
arpl
rclb
inc
add
call
out
push
add
rorl
stos
pop
mov
mov
call
fs
out
cmp
adc
insl
cli
and
call
mov
stos
bound
add
sbb
aad
cmpsb
ret
aam
scas
mov
repnz
movsl
pop
mov
std
call
and
sub
shlb
push
mov
jp
std
call
cmp
jmp
dec
sbb
push
test
cli
add
imul
mov
lcall
mov
xor
push
hlt
rorb
push
sbb
lea
add
or
call
lea
icebp
add
fld1
push
jbe
testl
test
and
push
mov
test
mov
add
cmp
xchg
das
je
pop
les
enterw
cmp
mov
bound
lcall
xchg
add
bound
mov
push
mov
nop
ljmp
pushw
add
mov
pop
std
inc
andl
or
and
test
in
and
std
pushl
lcall
mov
gs
cmpl
add
mov
bound
inc
roll
out
call
dec
xlat
imul
sti
popa
jb
dec
jne
mov
fldenv
sub
push
or
pop
out
out
push
or
pusha
rcr
push
lret
cmp
pop
out
out
push
lret
punpcklbw
out
ficoms
add
push
lret
out
pop
stos
jno
out
xchg
jno
mov
jns
daa
roll
dec
jae
insl
shl
add
lock
push
in
aaa
aas
adc
mov
jbe
clc
ret
xchg
and
add
je
inc
fld1
add
add
mov
cld
mov
mov
jno
flds
stos
sub
out
bound
call
jb
iret
call
push
roll
push
into
add
mov
jbe
push
add
shrb
lcall
or
xchg
push
enter
test
addb
push
and
push
pop
stc
jmp
mov
fistl
and
jge
aad
add
sarl
scas
fnstenv
xchg
jle
inc
push
cwtl
lret
cmp
add
add
cmp
outsl
sarl
sti
fdiv
add
jae
mov
mov
pop
or
sbb
je
pop
sbb
jns
sti
sti
xchg
xor
mov
push
cmp
mov
push
pop
add
aad
mov
fsubr
std
mov
aad
mov
mov
pop
hlt
adc
test
mov
mov
add
mov
or
mov
std
jmp
or
or
fcomps
add
fisttpl
jmp
sbb
and
inc
xchg
dec
or
cmp
sbb
outsb
inc
stc
dec
ja
jge
arpl
incl
in
inc
popa
out
jae
fiadds
jp
aas
jnp
add
add
push
mov
jmp
out
fisubrs
repnz
add
push
in
mov
fs
jne
and
mov
mov
aad
rcll
jecxz
jmp
or
jecxz
jge
adc
adc
and
arpl
pop
mov
cmp
pop
call
out
arpl
mov
mov
xor
out
sbb
pop
add
pusha
flds
arpl
jmp
cmp
iret
loope
dec
and
or
stc
jmp
loop
add
incl
or
ficomps
jecxz
popa
fnstcw
push
or
push
stc
jmp
add
flds
add
gs
loop
cs
fmuls
push
sahf
xlat
shrb
or
shrb
cli
cmp
jl
sti
add
cmp
inc
pop
sub
lods
fwait
cmp
decl
sbb
test
mov
mov
dec
call
lcall
gs
es
mov
xor
call
mov
dec
add
pusha
lea
flds
add
repnz
lea
sbb
mov
and
fiaddl
add
ss
mov
and
lahf
scas
pop
adc
mov
mov
xor
out
push
incl
loope
fiadds
jge
sub
sbb
mov
or
fs
pop
sub
add
push
loope
movsl
add
xchg
inc
or
sub
xchg
repz
jno
test
push
divb
inc
xchg
push
xchg
xchg
xchg
xchg
cs
inc
ds
fstp
out
push
add
ficomps
aam
adc
sub
fsubp
add
popf
or
mov
adc
jl
outsb
sub
inc
pusha
stos
fildll
jnp
push
pusha
ljmp
in
xchg
xchg
push
hlt
mov
and
fs
mov
sbb
sub
ljmp
adc
test
aad
mov
std
jmp
add
std
rol
sub
add
call
scas
and
fcoms
and
mov
mov
push
xchg
mov
fldenv
stos
test
dec
pop
lret
flds
jmp
fcompl
call
mov
pop
call
insl
sahf
int
sbb
xor
add
ds
sbb
mov
cmp
jl
flds
pop
jmp
push
add
add
or
or
inc
mov
mov
andl
data16
loope
test
test
out
or
dec
mov
cmpsl
insb
or
ja
jnp
add
call
mov
cmp
decb
mov
sbb
sub
mov
push
leave
clc
es
push
rorb
mov
movsl
insl
xor
or
mov
std
push
bound
xchg
mov
push
out
jmp
shrl
pop
stos
lea
xchg
fcoms
std
out
push
std
cs
pop
mov
lods
aas
and
std
test
push
xchg
sbb
dec
das
xchg
xchg
mov
out
bound
dec
test
xchg
cmp
add
cmp
ret
mov
je
call
xlat
mov
in
dec
scas
cmpsl
pop
xor
inc
ror
popa
iret
mov
in
outsb
add
xchg
lret
adcb
mov
push
cmc
repz
mov
sub
out
mov
and
mov
cld
aam
push
sub
es
or
cmpsl
mov
stc
hlt
repz
cwtl
fcmovnbe
fmull
sahf
pop
push
ljmp
xchg
add
fcompl
mov
jle
iret
jmp
in
inc
out
in
add
xor
add
add
fwait
and
ficoml
or
and
xor
test
inc
push
inc
stos
or
xor
push
add
leave
push
outsl
in
or
adc
jne
mov
jb
sti
or
fcompl
inc
icebp
cmp
in
mov
jmp
sub
bound
dec
test
add
dec
in
sbb
shll
jmp
mov
sarb
add
sbbl
and
faddl
xor
xor
mov
fdiv
xor
pusha
mov
lea
mov
addb
xchg
add
xlat
mov
pusha
lea
stc
orb
ror
orb
addl
cmp
mov
aas
gs
jle
push
lock
mov
or
bound
fwait
aaa
mov
cmp
adc
es
xchg
sbb
inc
loope
in
mov
push
jp
inc
cmp
and
mov
cs
xor
sub
fscale
adc
std
scas
arpl
jle
inc
inc
pop
bound
std
push
das
mov
std
jns
jge
inc
cmp
push
or
lret
xor
pop
call
jne
pop
arpl
cmp
mov
inc
mov
adc
fisubl
dec
push
insl
pusha
test
add
sbb
push
in
jmp
sbb
fdivrp
jmp
xor
aad
pop
xchg
daa
add
adc
or
fldenv
lea
pmaddwd
pop
mov
jl
dec
aam
jae
out
adc
jl
lods
stc
ret
test
repz
fidivl
shrl
bnd
cmc
lcall
fisubl
sbb
inc
test
cwtl
and
or
imul
lock
lods
lcall
xor
dec
xchg
lcall
sbb
dec
insl
test
imul
lock
sbb
and
mov
roll
dec
lcall
movsl
testl
test
stc
ds
scas
pop
xchg
cmpsb
lret
daa
fadds
mov
and
stc
push
test
stc
mov
add
repnz
out
std
idiv
xchg
insl
sbb
adc
add
push
jnp
adc
xor
fnstenv
or
es
push
jne
insl
and
jo
cmp
dec
add
shlb
dec
cmp
mov
xor
xor
je
inc
fwait
orb
pop
data16
adc
pusha
mov
stc
xorb
rolb
xor
mov
push
cmc
cmp
mov
shlb
subl
pop
mov
sub
sub
scas
arpl
inc
adcb
subl
in
arpl
popa
pop
sti
clc
jae
xchg
adc
jne
addb
aad
dec
loopne
inc
bound
mov
xor
mov
sbb
into
mov
mov
fisubs
addb
int
ja
adc
mov
cli
mov
movsl
cmp
adc
xor
insl
inc
lods
mov
pop
xor
xchg
or
in
jecxz
sub
out
les
smsw
repnz
test
stos
push
add
mov
inc
jno
lcall
sub
js
xor
inc
popa
fldenv
jge
adc
fmul
or
adc
sbb
std
sti
cltd
push
hlt
cmp
std
sarl
hlt
add
fwait
pop
add
xchg
inc
sub
sub
fdivrl
in
and
cmp
xchg
lret
popf
add
sahf
loopne
test
mov
mov
add
adc
mov
sbb
jl
pop
insb
int
mov
sbb
insl
pushf
and
adc
or
push
aam
test
mov
adc
aam
lds
scas
xchg
scas
jge
dec
dec
mov
jmp
sub
add
sub
add
rcl
jl
mov
ret
insl
and
notb
sub
inc
test
lahf
out
orl
xor
jg
addl
push
pop
inc
lahf
std
call
lods
cmp
jbe
data16
sbb
js
push
emms
adc
aam
mov
or
fidivl
testl
jp
fcom
push
or
mov
pop
addr16
fcompl
stc
cmp
movl
pop
sub
sub
and
jnp
nop
cmp
pop
cmpl
adc
add
adc
es
pop
lods
in
leave
jle
fadds
bound
and
add
js
pop
push
es
xor
sbb
insb
xor
cs
int3
adc
add
pop
out
sub
leave
cmc
ret
popf
fisubl
shl
pop
out
sub
dec
aas
xlat
ljmp
add
sbb
and
add
movsl
push
lods
das
inc
call
daa
scas
imul
arpl
jg
in
pop
sahf
jno
out
sbb
inc
adc
pop
arpl
clc
inc
aaa
sar
out
cmp
mov
pop
scas
ja
dec
pop
fstp
out
mov
push
mov
mov
stc
das
popa
fnstcw
mov
inc
pop
arpl
stos
sub
loopne
aad
add
cwtl
add
mov
enter
into
adc
add
aas
stc
push
loop
je
out
in
add
and
sub
pop
cltd
push
sub
mov
stos
xor
scas
mov
aas
push
pop
dec
in
pusha
jmp
inc
jle
cmc
inc
fdiv
mov
lods
push
add
xor
repz
fs
lock
les
mov
stc
xor
sbb
sldt
xchg
jp
andl
sbb
push
dec
lods
jp
mov
mov
cmp
lret
adc
xorl
inc
loope
mov
daa
mov
sub
inc
add
loopne
mov
pop
mov
loop
mov
daa
mov
es
and
popa
rolb
add
inc
or
xor
pop
adc
mov
add
xchg
cld
insl
pop
xor
cli
jmp
cs
mov
fcomip
stos
add
xor
jle
sbb
jmp
push
fsts
bound
push
stos
cmp
ljmp
mov
inc
arpl
std
xchg
sub
fcoml
mov
mov
sub
sbb
lcall
add
int3
mov
jns
inc
sub
mov
adcb
imul
fisubl
gs
in
mov
ljmp
fisttps
jecxz
movsl
ret
fistpl
call
mov
add
sbb
and
ljmp
cwtl
push
daa
xchg
or
dec
into
adc
dec
add
or
or
inc
stc
jmp
test
jmp
push
mov
jmp
stos
jle
fidivs
add
push
aam
jae
flds
push
popa
fimull
insb
icebp
inc
stc
jmp
jbe
sub
lods
lea
add
mov
jl
imul
jnp
mov
test
sbb
dec
adc
aas
icebp
test
or
stos
roll
add
mov
or
jmp
js
add
sarl
push
and
jne
sub
incl
jne
scas
rolb
ret
add
sbb
add
orl
xor
je
test
rclb
ret
and
ret
pop
ret
sbb
or
push
sub
and
bound
mov
sub
incl
and
jne
cld
cwtl
cmp
outsb
dec
lret
sti
cwtl
sbb
in
xchg
or
xchg
adc
and
jae
orb
lret
shlb
mov
roll
xor
inc
inc
aam
pop
jmp
mov
sbb
mov
and
les
gs
inc
call
loop
loope
bound
mov
cmpsb
clc
in
cmp
dec
pop
add
dec
stc
cmp
inc
sarb
or
int3
xor
imul
lds
adc
or
rolb
or
jg
fdivp
ret
in
je
sub
pushf
add
in
inc
popa
repnz
leave
fcmovu
jo
popa
xor
mov
cmc
xlat
mov
cmc
out
sub
into
lahf
inc
icebp
jo
gs
lea
add
fildl
sbb
add
imul
jne
aad
inc
stos
cmp
cmpsb
lds
sahf
xor
bound
roll
shl
push
push
loope
movsl
and
fcoml
add
in
je
fstps
pop
fnstcw
into
dec
add
testb
fisubs
call
gs
test
flds
mov
faddp
and
fnstsw
ja
out
nop
and
inc
cmpsl
sub
lcall
mov
xor
mov
repz
jmp
mov
push
mov
stc
jge
mov
addb
xorb
jb
sub
add
push
lea
dec
dec
push
mov
aad
je
and
je
and
jnp
inc
add
push
mov
inc
inc
stc
ja
in
insl
and
lcall
lds
cmp
clc
xchg
add
push
jle
ljmp
cmpsl
add
sub
push
sbb
in
in
mov
ss
pxor
push
xchg
inc
xchg
or
inc
lods
jmp
or
pop
sbb
cli
fidivs
flds
xchg
push
test
cmp
inc
lahf
sub
or
add
aas
bound
or
sub
mov
adc
stos
xchg
pop
mov
mov
inc
pushaw
add
out
or
pop
xor
and
gs
mov
cmp
dec
cmp
into
aad
inc
inc
lret
outsb
roll
imul
popa
sub
mov
push
ret
divl
test
call
mov
dec
and
push
xor
inc
push
fstps
xor
jp
fmull
adc
mov
dec
mov
out
pop
lret
jmp
mov
adc
add
movsl
cmc
adc
fcomps
fnclex
jno
adc
incl
fsubs
push
adc
stc
fdivrl
mov
pushf
and
fmuls
xchg
data16
add
test
std
cmpsb
scas
xor
inc
hlt
clc
add
in
and
imul
leave
pushf
mov
test
push
stc
std
mov
lds
in
cmpsb
pop
bound
fsubl
je
jb
dec
call
and
mov
shlb
pop
enter
pop
fdivrl
dec
fildl
add
outsb
dec
push
fisubrl
enter
out
xlat
idiv
nop
int3
test
add
ret
add
fildl
decl
faddl
push
pusha
iret
mov
add
xchg
inc
push
pop
mov
mov
lock
add
mov
pop
or
or
xchg
in
shlb
incl
fildl
add
call
dec
xchg
inc
jle
add
bound
cs
xchg
adc
dec
xlat
push
sub
inc
mov
out
nop
inc
add
add
adc
jg
imul
mov
mov
or
sub
bound
in
inc
std
xchg
and
add
mov
pusha
aad
push
arpl
and
xchg
call
bound
mov
fldcw
jl
cmc
inc
or
roll
fldenv
sub
in
jecxz
cmp
in
bound
xlat
mov
das
jnp
fmull
cmp
or
push
push
ss
jno
outsb
lcall
pop
ret
stos
mov
je
int
lcall
pop
cmpsl
popl
stos
xchg
dec
in
lock
fnsave
inc
jmp
add
adc
pop
cmpsl
es
jmp
push
pop
inc
loope
test
icebp
in
stc
xchg
sub
mov
shlb
jbe
jmp
sub
shr
js
jmp
fldenv
pop
in
je
faddl
push
push
xor
stc
jb
fadd
out
push
inc
jmp
add
inc
add
js
inc
mov
mov
add
jnp
dec
mov
inc
and
add
sub
cmp
shlb
push
add
gs
push
insb
inc
int
or
mov
push
adc
or
nop
mov
add
mov
fdivs
mov
or
in
cmpsl
iret
jp
cmpsl
or
push
push
mov
in
mov
push
jmp
mov
push
flds
inc
ds
jae
sub
and
push
stc
mov
out
xchg
sbb
cmp
and
mov
and
mov
insb
bound
outsl
add
std
mov
or
xor
adc
pop
incl
test
bound
jae
rolb
xchg
mov
out
push
xchg
xor
push
cltd
out
sbb
fcmovnbe
cltd
out
push
mov
ret
movsl
pop
cmpsl
xchg
popa
out
sub
jmp
add
or
mov
add
pop
cmp
lods
inc
lods
mov
icebp
sub
mov
lods
add
pushf
xor
lock
xlat
loop
fnsave
dec
pop
fwait
or
add
fsub
cmpsb
jmp
add
out
in
add
jns
or
sub
or
and
mov
sbb
das
cs
popa
jb
call
and
inc
je
mov
je
stos
jae
adc
sbb
jae
loope
decl
repnz
cmp
repnz
cmp
fucom
cmp
aad
cmp
in
fdivrs
shl
addb
mov
ret
in
cs
mov
and
xchg
out
fsubrs
sti
popa
icebp
test
push
aad
add
insb
arpl
js
notb
dec
jg
decl
popa
das
test
pop
ret
adc
jb
fdivrl
push
push
push
lock
cmp
fdivr
jg
scas
stc
incl
mov
cmp
add
cld
repz
int
add
in
testl
cmp
clc
incl
icebp
mov
add
je
jle
insl
sbb
sub
inc
bound
mov
cltd
jnp
pop
cltd
dec
add
dec
inc
std
fnstenv
mov
xor
jae
sbb
push
cmp
std
jmp
out
test
jge
je
push
dec
sarl
ror
fstps
addb
std
incl
jb
icebp
push
out
jl
xor
inc
std
cli
mov
xor
arpl
jle
or
adc
push
adc
ret
cmc
push
cmpsl
cwtl
sub
flds
enter
or
leave
outsb
mov
mov
and
push
les
les
mov
outsb
cmp
aaa
jge
aad
movl
fistpll
add
xor
jo
sbb
out
push
cs
add
faddl
fincstp
popf
pop
mov
sarl
mov
xchg
add
jo
xlat
and
jle
add
mov
cmp
in
add
test
cmc
stc
and
push
dec
int
out
sbb
sbb
stos
and
and
and
js
mov
and
out
push
mov
ja
add
popa
adc
hlt
cwtl
add
adc
stc
sbb
in
clc
adc
push
jecxz
lcall
stc
add
jae
fsubrs
leave
adc
dec
pop
scas
adc
test
stc
mov
mov
add
sti
fadds
xorl
inc
add
inc
std
cmp
inc
push
cmp
push
adc
arpl
mov
leave
adc
mov
stc
add
add
mov
mov
cmp
sbb
rcl
dec
andl
sbb
mov
ss
push
mov
add
xor
cs
xor
and
jl,pn
pusha
mov
xchg
push
sti
mov
mov
sub
mov
leave
out
or
mov
pusha
aas
or
jl
scas
xchg
hlt
outsb
push
inc
std
jae
dec
sub
bound
mov
push
push
push
inc
or
jb
xchg
cmp
cltd
out
in
movsl
loop
push
lret
add
cmpsb
stos
add
in
xchg
mov
cmpsl
and
in
xchg
mov
cmpsl
sub
fnstcw
or
mov
call
push
cltd
out
jae
jns
and
scas
add
push
sbb
jbe
aad
test
in
repz
out
pusha
jno
hlt
insl
sub
jp
loope
push
out
adc
je,pn
loop
and
icebp
push
inc
stc
cmpsl
adc
xchg
ljmp
sbb
pop
in
ljmp
pop
xor
fbld
notb
bound
cmp
popa
flds
lods
add
or
lcall
jb
sub
push
stc
adc
insb
lds
fisubl
pop
call
jb
push
repnz
pop
pusha
jb
outsb
movsl
popa
pusha
sbb
cmp
pop
popf
push
pop
js
in
cmp
add
mov
add
enter
inc
xchg
fcoml
or
out
or
add
add
fdivl
or
call
push
push
adcb
jae
fisttpll
cmpsb
ret
and
or
sbb
sbb
push
aam
add
inc
mov
add
adc
outsl
add
inc
jle
rol
xor
mov
xor
jb
ds
jno
xor
and
lret
add
std
dec
dec
adc
add
dec
or
jg
xchg
xor
nop
ja
bound
or
ficomps
jmp
ljmp
clc
dec
aad
or
es
lock
std
cli
push
out
aas
bound
rolb
xor
add
xchg
and
cmp
lea
imul
test
jle
fisttpll
cmp
sahf
cmp
push
or
daa
out
cwtl
aad
jecxz
xchg
fistl
push
popf
jecxz
sbb
aad
jg
adc
mov
imull
push
add
in
es
adc
pop
loopne
add
out
adc
pop
lret
fisubs
fiaddl
mov
insl
fstps
pop
stos
and
xchg
insb
rolb
sbb
lret
sahf
call
stc
cld
movsl
leave
inc
jmp
mov
xor
pop
int
fsubs
cmp
jmp
fucomp
sub
stc
aad
mov
adc
cmpsb
add
pop
repnz
mov
icebp
aam
add
add
sub
into
pop
in
cmp
stos
sbb
mov
jmp
scas
dec
stc
add
popa
pop
cli
fs
call
sub
add
or
fstpl
ja
cmp
add
mov
mov
cmp
sub
mov
mov
add
es
add
flds
jmp
lcall
jbe
movsb
shlb
inc
call
push
sti
dec
movsl
add
movsb
enter
lcall
sbb
jae
fucom
loopne
fadds
mov
cmpsb
call
popf
mov
and
sbb
sbb
pop
cli
jmp
loopne
cmp
mov
sub
clc
test
xor
incl
dec
stos
std
jmp
in
inc
and
or
and
pop
jle
jp
xchg
cmp
add
jl
cli
stc
add
and
cmp
pop
sti
fdivrp
jmp
sub
push
xchg
jbe
jle
jnp
leave
cmp
divl
std
mov
mov
in
pusha
xchg
mov
lahf
and
popf
dec
sub
pop
lock
fistps
stos
filds
push
jp
std
out
jl
xor
dec
and
add
pop
xchg
cmp
pop
jl
std
fildl
lret
fisttps
push
stos
filds
cwtl
jl
std
pushl
inc
jmp
lret
dec
sub
sub
out
add
pop
popf
and
mov
loope
add
pop
pop
push
lds
test
lods
or
and
clc
movsl
and
mov
mov
call
pop
dec
pop
loope
and
aaa
loop
and
mov
test
xchg
daa
xor
adc
mov
sbb
insl
movsl
popa
flds
data16
lods
addr16
pop
inc
add
scas
push
dec
or
lea
mov
addb
add
movsb
push
add
popf
add
ret
inc
adc
mov
aad
push
jecxz
add
or
popa
sbb
push
sbb
fcoms
sub
das
lcall
popa
or
dec
movsb
icebp
mov
add
inc
or
je
mov
idiv
jle
insl
pop
and
int3
or
add
out
imul
ret
js
xchg
ja
jle
jbe
push
shlb
mov
add
inc
add
outsb
xchg
cld
outsb
xor
hlt
outsb
es
mov
add
out
fdivrs
fisubl
push
lods
jge
and
jb
jle
lods
xchg
sbb
mov
fstpt
insl
adc
xor
xchg
xor
adc
out
fldcw
inc
mov
pop
mov
outsb
mov
fnstcw
add
test
cmc
add
sbb
pushf
dec
jbe
add
fcomps
loope
rclb
pop
data16
pop
push
cmpsl
mov
stos
filds
insb
mov
mov
call
cmpsl
add
push
mov
push
xor
shlb
push
jae
in
add
xor
or
push
push
add
ret
inc
mov
lods
nop
sbb
sbbl
push
pushf
int
bound
sbbl
jb
jmp
mov
jge
push
cmp
das
stos
adc
pop
and
xor
xchg
add
sbb
adc
mov
sub
adc
cltd
add
add
and
call
fisttpl
jae
aam
call
push
dec
fxam
ftst
loop
add
mov
xor
insb
xchg
add
push
push
adc
cs
jne
add
jbe
ja
mov
cltd
add
or
stc
pop
clc
dec
cmp
scas
or
mov
ja
jnp
adc
stos
cltd
add
push
or
mov
xor
mov
fnstcw
pop
push
xor
divl
insb
roll
sti
fdivrs
mov
divl
mov
xchg
and
test
in
std
sbb
sub
repnz
xor
stc
cmp
loope
je
mov
mov
hlt
movsb
sbb
pop
mov
or
cmpsl
iret
call
flds
repnz
es
dec
adc
adc
add
cmpsb
pop
test
pusha
and
pop
pop
test
in
test
aam
sti
stc
fdivp
js
fldenv
add
xchg
fldenv
js
lds
inc
bound
adc
xlat
mov
fwait
jnp
lds
mov
xchg
loop
sub
imulb
dec
repz
fimuls
inc
add
add
sub
ret
pop
pop
jecxz
pop
arpl
ret
ss
xor
mov
add
push
cmpsl
lds
hlt
sbb
daa
dec
sbb
daa
jbe
pop
push
ret
add
adc
icebp
inc
mov
out
sub
jg
sub
test
push
sub
and
lds
pop
push
fwait
add
cltd
add
into
mov
enter
mov
sub
cmc
popa
flds
mov
sub
outsb
cli
scas
movsl
push
ret
aad
aaa
jmp
sbb
sbb
movsl
push
jb
mov
sbb
popa
and
pop
dec
cli
mov
xor
inc
and
fiadds
dec
push
cmp
mov
or
test
mov
stc
jg
shrb
rclb
mov
xor
adc
sub
cmp
sbb
imul
or
mov
dec
incl
test
xor
jl
add
dec
dec
and
test
dec
orl
dec
xor
push
fs
push
rorb
push
cli
dec
stc
outsl
jbe
inc
bound
js
push
push
shrb
popa
insb
decb
insb
pop
stc
xchg
es
outsl
ret
bound
or
push
in
add
or
add
sahf
xor
ljmp
jle
inc
lock
adc
cmp
test
lods
push
std
xchg
add
in
cmp
push
push
mov
lock
clc
add
ficoms
inc
fldenv
data16
pop
in
aas
out
mov
mov
out
bound
jg
push
inc
sbb
mov
jmp
and
std
jmp
fsts
push
ds
loop
add
fstps
test
pop
lret
repnz
lret
mov
xchg
cltd
test
push
add
leave
cwtl
pop
repnz
lret
mov
mov
pop
addl
pushf
push
jp
mov
add
and
sqrtps
cli
pop
pop
dec
shl
pop
addl
mov
pushf
loop
sub
pop
mov
ljmp
sub
mull
cmc
mov
mov
gs
sub
pop
jmp
sbb
inc
jmp
push
bound
sbb
xchg
sub
fsts
mov
out
add
fldl
add
into
addl
divl
mov
cmp
push
les
stc
decl
or
jnp
cmp
scas
or
sti
test
add
mov
filds
add
adc
sti
fsts
addb
leave
add
testl
add
testl
loope
testl
mov
adc
mov
out
mov
add
mov
or
add
pop
jmp
add
mov
mov
sub
ja
data16
push
mov
in
or
testb
or
add
cmpl
out
jge
bound
dec
mov
mov
test
add
jmp
jle
bound
std
dec
out
jnp
add
bound
dec
stc
xchg
jg
sbb
jl
lcall
fld1
add
insb
ljmp
daa
add
and
mov
out
mov
popa
xchg
push
adc
push
popf
stos
pop
iret
loope
rorl
and
cmp
jecxz
fnstenv
fistps
add
jo
not
out
test
pop
add
out
add
adc
push
fucomi
mov
and
mov
imul
bound
or
test
fs
sub
add
adc
jmp
xlat
adc
jmp
push
adc
mov
jbe
sub
xchg
call
fsub
cmp
call
arpl
add
pop
pop
andb
pusha
flds
cltd
in
add
popa
fsts
pop
mov
test
in
into
call
pop
xlat
add
stc
dec
jmp
aad
shlb
add
popa
fistl
call
sahf
test
jge
gs
dec
inc
lds
add
data16
xchg
add
repnz
sbb
jnp
push
pop
add
mov
in
mov
jnp
xchg
or
decl
jns
cmp
add
pusha
clc
push
or
imul
flds
je
or
xchg
fs
jne
std
faddl
ret
aad
mov
push
in
cmp
adc
mov
xor
add
push
popa
movsl
push
jle
inc
clc
cld
mov
inc
add
dec
mov
sbb
call
or
xchg
in
addr16
pop
jmp
push
dec
test
inc
and
jne
mov
std
out
cmpsb
repz
ffreep
jne
push
jmp
dec
mov
dec
push
or
push
repnz
adc
add
ret
sub
sti
clc
outsb
or
jbe
sbb
add
fstps
push
bound
mov
fldcw
jle
jo
enter
pop
adc
in
mov
fucom
push
adc
lret
adc
dec
xor
push
inc
punpckhdq
xchg
lods
xor
lods
mov
push
cmpsl
mov
scas
mov
push
lahf
adc
xchg
push
cltd
out
and
sub
pop
pop
adc
mov
fcomip
outsb
mov
xchg
push
call
push
ds
test
insl
pop
xorl
lret
test
pop
in
into
call
inc
fucomp
xchg
jp
stc
mov
popf
dec
add
push
xchg
mov
sbb
cltd
add
push
and
imul
push
arpl
add
movsb
push
in
push
adc
icebp
push
stc
jmp
mov
call
pop
fldl
aam
adc
or
pop
js
sbb
push
xor
push
cmp
add
aad
je
mov
jl
mov
dec
adc
aad
add
add
or
push
adc
adc
fmul
je
aad
movb
inc
cmp
adc
mov
adc
cld
mov
push
inc
add
push
pop
or
xchg
ds
mov
add
or
push
test
mov
nop
mov
add
dec
cmp
or
push
test
jp
adc
add
add
jnp
jg
xchg
add
out
out
sub
mov
jno
bound
js
mov
js
in
adc
xor
je
add
push
je
shlb
inc
add
or
scas
ds
adc
std
push
adc
add
pop
fnstenv
and
adc
jmp
jg
add
out
fisttpl
add
xchg
add
pusha
push
or
or
out
mov
push
pop
repnz
or
add
or
addr16
out
cmpsb
frstor
jle
mov
adc
imul
rcrl
cmpl
fsubrp
jl
and
icebp
cmp
inc
add
pushw
fldenv
pop
popa
test
and
pop
add
popa
push
push
add
js
add
pushf
loope
mov
jmp
stos
or
pop
int3
or
and
mov
cmp
adc
mov
jp
mov
add
pusha
scas
mov
push
dec
test
and
aad
test
daa
jae
andb
add
xchg
bound
flds
push
mov
stc
aam
out
jmp
xor
in
bound
scas
xchg
dec
push
add
xlat
je
andb
movq
jecxz
lods
or
mov
roll
aam
add
scas
rorb
inc
lret
popa
shlb
jbe
lret
aam
sete
or
or
jnp
rcrb
add
cmp
loope
je
mov
decb
notl
aam
add
cs
cmp
add
push
jbe
dec
addb
dec
mov
inc
bound
or
mov
in
xchg
bound
mov
ljmp
inc
std
andb
add
mov
sbb
loopne
test
xchg
cli
dec
add
aas
push
cs
cmp
add
sar
paddb
xchg
adc
bound
dec
inc
xchg
jmp
aas
js
insb
mov
and
cmc
sub
push
adc
cmpsl
movb
je
mov
cmp
fdivrl
mov
ficompl
pop
fcomip
filds
jp
out
jmp
pop
pop
in
jmp
mov
mov
dec
or
add
sub
call
or
out
mov
sub
faddl
fnstenv
rcrl
cmp
shrb
js
lret
cmpsl
roll
sar
das
shll
shll
lret
and
test
add
or
mov
dec
frstor
shrb
in
sub
dec
jmp
push
in
je
xor
mov
adcl
mov
cmc
dec
lahf
pop
clc
out
mov
fyl2xp1
je
pop
inc
in
jmp
mull
fnstcw
movsl
push
inc
int
add
xchg
adc
pop
or
shlb
faddl
xor
jmp
dec
aas
jmp
out
dec
add
add
add
push
add
fs
push
xchg
stos
divl
imulb
lods
out
inc
push
lret
fadds
sbb
inc
sbb
dec
mov
cmp
or
lret
adc
je
adc
or
add
cmp
sub
in
jmp
incl
je
adc
or
mov
pop
shlb
and
add
je
movsb
adc
push
sub
push
rcll
bound
or
push
stc
clc
ja
push
inc
bound
jae
rolb
roll
push
or
loopne
mov
pushf
xor
lock
mov
cmc
in
push
or
xor
add
outsl
cs
imul
inc
xchg
or
and
movsl
inc
and
ljmp
and
aad
data16
andb
popa
and
lock
sbb
fdivrs
xchg
scas
xor
cmpsl
outsb
in
shll
pop
fimull
sti
mov
add
mov
fists
add
add
mov
cli
ror
data16
cld
in
push
mov
lea
mov
adc
and
add
dec
out
pop
adc
fldcw
loopne
push
ficompl
lea
adc
mov
call
bound
outsl
dec
call
fdivl
adc
sahf
jnp
stc
cld
cmp
sbb
add
add
cmc
jle
loop
add
xchg
jnp
je
andl
pop
out
inc
inc
call
and
call
ss
aad
pusha
xor
shll
push
shll
popf
orl
scas
stc
mov
add
jmp
add
sub
divl
test
hlt
std
add
orb
les
outsb
cmc
inc
cmp
jne
xlat
adc
out
add
addl
testb
push
mov
inc
pop
jmp
push
push
addb
movsl
icebp
testb
or
daa
sti
insl
push
mov
mov
lock
and
xor
add
xor
shlb
add
push
pop
cmp
test
lock
mov
jle
dec
push
sub
dec
sub
xchg
cmp
inc
data16
push
loope
stc
ja
or
xchg
jge
mov
jno
dec
push
xchg
jnp
add
xor
gs
loop
stos
adc
add
lock
jbe
dec
test
sub
jne
fucomip
jo
dec
pcmpeqd
lret
stc
int
les
mov
int3
dec
xor
test
add
fwait
out
adc
shrb
pop
mov
daa
add
add
das
push
cltd
out
imul
adc
ret
mov
out
bound
sti
pop
push
add
pop
outsb
add
cmp
mov
and
xlat
lahf
in
add
push
aam
mov
sti
fisubs
dec
push
out
cltd
dec
fists
push
push
daa
gs
fcompl
sbb
hlt
shrl
add
mov
cltd
out
ja
out
xor
mov
fsts
inc
push
vpsubsb
stc
jmp
je
aam
repnz
sub
mov
mov
and
jge
shll
insb
inc
andb
or
adc
inc
mov
cmpb
jae
or
push
pop
insl
cmc
adc
push
lods
test
icebp
out
pop
add
pusha
sub
roll
add
xor
jae
mov
pop
mov
xchg
testl
mov
mov
mov
notl
mov
out
push
push
xorb
cmpl
fld
in
jne
scas
fimull
add
orb
cmc
mov
jl
inc
notl
add
xor
and
je
cmc
or
push
fwait
add
mov
divl
test
divl
or
mov
stos
std
jmp
mov
and
repnz
sbb
and
and
mov
xor
ds
fstl
xchg
jmp
stc
gs
xchg
imul
fsubrl
sbb
sub
inc
add
stc
push
and
aas
bound
jge
outsl
or
add
aam
test
adc
idivl
std
adc
lock
dec
in
inc
cmc
mov
aad
add
jae
mov
fldcw
scas
icebp
dec
mov
jnp
jne
or
push
mov
adc
outsb
or
ror
xor
cmpsl
push
mov
call
add
mov
push
cmc
sti
inc
cmpsl
out
dec
cmpsl
pop
out
popf
stos
cmp
mov
sti
or
and
loop
aad
clc
popa
jecxz
add
sbb
or
add
cwtl
out
mov
dec
add
ficompl
je
cwtl
cld
daa
cmpsb
shlb
push
sub
mov
call
test
in
jae
rorb
jecxz
add
jb
cmp
dec
push
inc
icebp
xchg
push
cld
jae
add
std
call
mov
add
loopne
std
out
and
inc
outsb
or
aad
cld
gs
jmp
dec
rolb
fldl
je
or
notl
aam
mov
adc
ret
dec
or
xor
sbb
fldcw
lea
daa
push
push
lret
lock
add
mov
aad
ds
notl
lods
aas
adc
cmp
mov
in
lcall
cld
mov
adcl
xchg
add
sar
mov
add
xor
inc
mov
ja
sahf
jl
xor
push
add
sbb
add
gs
out
fucom
stc
fidivs
lds
std
shlb
inc
bound
fsts
and
cmp
fdivs
in
or
or
test
xor
aas
bound
test
adc
jmp
out
xor
xor
fdivrl
dec
pop
add
push
fnstenv
ds
ja
repz
add
mov
bound
test
xlat
data16
test
adc
pop
rolb
lret
cmpsl
push
das
notl
repz
pop
dec
inc
cli
repz
out
sahf
int3
repnz
je
orl
and
dec
mov
xor
inc
pop
push
fsts
fists
aad
bound
in
add
popf
out
rcl
adc
xchg
xchg
outsb
clc
subl
inc
fisubl
sub
mov
cld
mov
add
ret
arpl
inc
scas
icebp
clc
inc
xor
adc
or
cs
sub
cld
mov
inc
jmp
test
push
pushf
rcrb
push
subl
adc
clc
sub
int3
inc
jmp
popa
insb
xor
mov
sub
fucomi
sbbb
pushf
and
inc
lods
divl
dec
push
inc
test
add
movsb
dec
lcall
shlb
call
adcb
call
rorb
inc
sti
pusha
mov
addl
dec
push
add
shr
push
idiv
dec
andl
mov
mov
adc
xor
rcrl
rcll
lret
sbb
push
push
addl
pop
mov
adc
rorb
jnp
pop
mov
bound
cmc
popa
rorl
test
lret
or
fbstp
pop
jmp
sbb
or
lcall
pop
xchg
cmp
push
and
in
xchg
mov
enter
das
aaa
mov
fnstcw
pop
je
add
stc
dec
sub
aas
out
add
cs
std
push
or
rcll
mov
jg
cmp
bound
mov
add
inc
add
das
out
aas
jo
add
out
sub
mov
or
inc
add
test
enter
push
xor
int3
outsl
icebp
pop
fldenv
leave
iret
dec
rcrl
idivb
fidivl
mov
inc
xor
push
fld1
xor
bound
divl
bound
cmpsl
add
fld1
push
insb
add
mov
or
jne
in
negb
jmp
dec
mov
inc
fistpl
add
sbb
push
flds
jmp
or
adc
pop
pop
rcr
jge
test
pop
push
test
addr16
popf
sub
mov
fcos
mov
cmpsl
pop
out
pushf
push
jl,pn
jne
dec
push
add
out
and
lret
call
gs
insl
punpckhwd
je
pop
hlt
roll
sbb
inc
jnp
or
lods
notl
shr
inc
push
jnp
test
dec
push
popa
frstor
cmpsb
pop
add
cmp
not
jle
je
xchg
cltd
and
lret
test
dec
mov
je
je
or
bound
std
adc
cmpl
shlb
add
mov
pop
repnz
push
int
cmp
xor
incl
sub
xor
jnp
test
cmp
or
add
pop
push
pop
adc
loop
and
loope
ljmp
hlt
mov
mov
in
aas
bound
or
cli
mov
jns
add
dec
inc
push
test
rcr
inc
test
mov
sbb
pop
sub
sub
pop
std
pop
bound
adc
adc
or
inc
std
test
fmuls
adc
insl
add
int3
shl
xor
repnz
cld
loopne
icebp
inc
int3
daa
add
test
shlb
loope
inc
xchg
pop
inc
push
in
cmpsb
mov
idivl
pusha
adc
outsb
pusha
sbb
inc
pop
daa
push
pop
jg
cmp
pushf
or
frstor
insb
fstps
mov
mov
testb
in
jg
fsub
add
sbb
es
out
loope
add
popa
flds
and
fistpl
sub
inc
aad
sub
scas
loope
aas
adc
aas
mov
insb
and
adc
flds
lahf
jne
cmp
fs
mov
sbb
data16
jmp
pop
flds
mov
and
mov
out
pop
rol
push
push
add
jmp
pop
je
add
out
mov
jb
test
xchg
mov
aaa
sbb
test
add
shrl
cmpsb
add
addl
rorb
insl
cs
mov
rcrb
divl
push
push
and
rorb
pusha
add
dec
popa
addr16
add
inc
jnp
addl
jge
add
notl
add
pop
add
aam
mov
fildl
testb
cmp
pop
mov
insl
insb
push
mov
ret
in
punpckldq
aaa
not
adc
rorl
std
jg
push
jmp
jl
in
jae
pop
dec
and
mov
and
shll
aam
stc
outsl
add
aas
std
incb
dec
xor
fsubl
sub
jmp
lahf
sar
and
dec
jb
pop
lret
xchg
frstor
std
jl
add
sbb
in
jnp
and
mov
ret
out
dec
std
xchg
dec
test
std
test
out
sbb
gs
fldcw
inc
lret
lcall
sbb
add
lahf
insb
out
xchg
out
add
xor
lea
daa
cld
lahf
fs
add
fcomip
jge
or
sti
sub
loope
inc
bound
das
push
sahf
fldcw
lds
stc
cmpsl
add
mov
in
cmp
out
call
sub
xor
add
jg
or
push
cs
icebp
pop
popa
push
lock
fs
nop
leave
cmp
add
flds
mov
xor
add
ss
std
mov
popa
flds
sarl
in
sbb
leave
sub
mov
pop
shlb
push
xor
mov
or
adc
xchg
fucomp
jbe
mov
mov
push
rolb
test
adc
addl
mov
xor
pop
sbb
cmp
push
ja
comiss
jecxz
jae
xchg
xchg
push
shlb
fimull
fcmovnu
test
push
lock
pop
enter
adcb
mov
aad
add
inc
popf
inc
cmp
shr
pop
cmc
decl
repz
xchg
xchg
popa
shlb
ret
xchg
xchg
ret
rol
jg
sub
and
xor
outsl
ds
bound
insb
push
add
xchg
sub
je
sbb
jle
iret
adc
or
add
mov
jl
jp
call
xorl
push
adc
adc
or
jae
pop
ja
call
dec
ret
out
sub
int3
sub
mov
push
cli
adc
sbb
push
cli
out
jne
std
fnstenv
mov
rclb
cmc
inc
bound
gs
pop
adc
add
stos
daa
jmp
fucomi
mov
add
mov
cmp
stos
ljmp
test
push
jmp
add
aad
bound
mov
in
adc
cmp
xor
xchg
fldcw
xchg
mov
mov
cmp
mov
jp
mov
fstpt
or
sbb
cmp
inc
out
clc
outsb
lcall
test
sub
out
push
out
clc
rcrl
lret
out
stc
test
xchg
test
push
int
add
scas
out
in
jae
test
sub
test
inc
mov
clc
xor
lds
and
pop
push
ret
popa
mov
push
mov
add
insb
mov
push
cmpsl
in
bound
pusha
shll
inc
and
lods
bound
sahf
mov
addb
push
icebp
notl
inc
sbb
pop
dec
cwtl
and
mov
shrb
adcb
incl
insl
inc
inc
test
sub
inc
lcall
test
bound
add
call
test
mov
repz
fucomp
add
sub
add
dec
arpl
add
faddl
push
bound
xchg
jo
add
push
int3
jae
ror
jae
outsl
push
adc
in
in
clc
outsl
out
lret
jae
xchg
and
jnp
test
jo
stc
sub
jnp
pop
mov
cltd
jmp
xor
jnp
jo
ds
out
insb
leave
stc
lea
cld
xchg
push
hlt
clc
scas
aad
cld
insl
icebp
lret
mov
ds
jmp
xchg
and
repz
decl
and
lock
clc
neg
clc
cld
xor
mov
xchg
xchg
inc
int
add
cmp
jbe
out
ficomps
loop
icebp
add
inc
or
out
out
js
mov
mov
fisttpl
outsb
fndisi(8087
hlt
jmp
add
out
add
cmp
fldcw
imul
fldcw
pop
sub
fptan
adc
int3
repz
xor
pop
pushf
add
fstps
dec
mov
sub
push
cmpsl
sti
loope
add
popa
flds
mov
sbb
int
pop
rclb
popf
insb
and
add
pop
cmc
loopne
fld
movsl
inc
mov
stc
hlt
add
inc
jmp
inc
pop
and
data16
repnz
stc
lods
popa
push
pop
arpl
je
insb
and
add
sbb
test
xchg
popa
sbb
out
call
dec
movsl
add
mov
fldl
ljmp
sbb
or
cltd
add
jg
sbb
push
jno
inc
add
add
decl
adc
or
divl
bswap
mov
fdivs
stc
mov
and
push
mov
push
orl
or
add
roll
or
push
and
mov
add
mov
fadds
test
push
pop
dec
cld
arpl
out
add
add
push
decl
lock
call
dec
nop
and
lock
imul
jnp
jp
jbe
divl
push
fidivrl
dec
fiadds
inc
icebp
sub
xor
out
fcoms
repnz
and
or
mov
xor
sub
mov
xor
cld
pushl
jnp
inc
fsincos
jl
andl
stos
insb
rcr
cmpsb
data16
insl
adc
ja
in
out
popf
out
sahf
mov
mov
enter
add
inc
mov
add
jp
inc
mov
add
xchg
jl
pop
jecxz
pop
inc
out
pop
fisttpl
sub
jle
mov
cld
leave
out
add
gs
pop
shrb
movsl
loop
enter
and
addr16
insl
loope
mov
add
loope
pop
fsubp
insl
call
push
pop
gs
sub
out
and
stos
cmp
cmp
nop
fdivrs
popf
in
test
pop
mul
adc
inc
call
cmp
subl
mov
add
mov
or
clc
jmp
fsubrp
push
aam
jnp
mov
andl
neg
sbb
pop
or
scas
je
loope
sub
mov
add
push
add
mov
popa
or
cmp
mov
cmp
xchg
std
jg
into
jbe
mov
pop
repnz
sub
jl
add
pop
testl
xchg
add
sti
adcb
enter
enter
mul
bound
and
cli
jnp
std
jg
int
adc
pop
jbe
add
jle
or
xor
inc
imul
pop
dec
pop
repnz
idivl
iret
ret
pop
dec
mov
js
dec
jne
or
mov
add
adc
repz
stc
loop
pop
jae
mov
mov
mov
int3
and
and
sbb
inc
fnstsw
in
out
mov
mov
or
pop
mov
outsb
scas
cli
int
test
test
mov
and
cld
or
fcomps
fbld
add
imul
lahf
bnd
fdivrp
les
cmpsl
rcr
out
inc
pushf
out
sbbb
das
sbbb
test
sbbb
jno
lcall
inc
lcall
inc
lcall
inc
lcall
divb
out
xor
push
mov
loop
push
xchg
pop
dec
push
add
inc
int3
je
jb
out
flds
push
mov
jmp
pusha
push
jne
pop
imul
pop
sti
jg
fs
imul
in
pop
insl
push
ds
ficompl
je
in
adc
cltd
jmp
je
fcompl
add
enter
push
or
fstps
cltd
out
flds
jae
fiadds
xchg
bound
pop
add
rolb
jl
add
in
or
sbb
mov
cmc
xor
std
clc
sbbb
sbb
adc
jmp
cmc
mov
cmc
and
push
lret
jns
add
mov
jns
aas
flds
cmp
jg
add
flds
shrd
xor
add
sbb
jnp
add
decl
pop
repz
andb
push
inc
or
or
dec
jg
xchg
fimuls
add
shlb
pop
pop
fisubrl
in
jb
or
out
xchg
bnd
pop
xrelease
and
cmc
in
aad
mov
add
bnd
push
repnz
jl
into
and
sbb
std
sub
data16
je
ja
and
ja
and
and
mov
push
fdivs
add
push
jb
jns
mov
insb
call
ss
test
mov
add
test
add
ds
pop
push
clc
pop
fnstcw
adc
mov
add
test
sarb
mov
pusha
lea
incl
jb
out
and
push
loop
flds
scas
aad
ret
inc
xlat
test
sbb
or
dec
jae
and
sbb
or
aaa
pop
xchg
ljmp
popa
pop
or
test
add
movsl
mov
inc
or
or
popa
push
dec
loope
push
and
in
push
out
sub
xor
in
adc
out
test
fisubs
leave
fsub
or
cmp
dec
xchg
xchg
mov
std
shr
xchg
pop
push
dec
or
add
test
icebp
fadds
jmp
popa
pop
inc
add
faddl
test
idiv
subb
mov
repnz
pop
dec
movb
int
mov
and
mov
dec
inc
pop
or
mov
out
je
xchg
dec
mov
add
mov
pusha
roll
add
clc
mov
xchg
cli
incl
fiaddl
into
in
lods
test
push
jecxz
inc
adc
ja
cli
fs
pop
bound
adc
popa
aaa
mov
mov
push
and
sti
jnp
out
pop
adcl
mov
fnstcw
and
stc
das
es
mov
test
jb
lret
mov
add
int3
mov
cmpsb
orl
adc
jns
cmp
mov
mov
jg
call
fidivl
mov
push
flds
cmp
call
fsubr
pop
ficompl
out
mov
lock
or
bound
push
fs
test
loope
loopne
lahf
adc
add
test
cmp
and
std
adcl
mov
xor
jmp
xchg
std
aad
pop
in
pop
fldz
sti
lds
bound
aaa
pop
arpl
adc
ljmp
or
popa
inc
lods
sub
movsl
std
xchg
or
add
les
mov
shr
mov
push
lds
cltd
or
lret
ljmp
jmp
inc
insb
dec
pop
push
loopne
dec
pop
flds
das
daa
xlat
add
stos
sar
push
cmpsl
sbb
out
xchg
div
sbb
mov
daa
pop
jmp
cmpsl
add
cmp
jmp
loope
inc
or
sarl
sti
flds
jg
pop
jmp
fs
pop
or
mov
aas
or
incl
pop
adc
jl
adc
mov
mov
fadd
inc
mov
xchg
cli
adcb
test
cli
call
and
mov
sti
xchg
xor
hlt
and
add
add
test
sub
jae
bound
fsubr
cwtl
lods
push
cmp
add
or
mov
add
xchg
leave
negl
ret
jle
outsl
ret
and
or
fmull
test
cld
xchg
xchg
movsl
ljmp
xchg
inc
mov
add
enter
addb
inc
dec
and
inc
mov
call
cmp
roll
movsl
mov
pushf
rolb
dec
xor
cmp
push
movzwl
out
xorb
mov
std
aaa
loop
sub
cmc
fstl
aam
mov
inc
bound
lea
ss
aad
int
arpl
call
push
mov
mov
shrb
adcl
sub
fnsave
lea
std
cmc
sub
in
adc
pop
sahf
mov
roll
xorl
out
flds
cmpsl
mov
loop
jmp
stc
div
mov
add
cltd
insl
not
xlat
add
bound
imul
loopne
test
aam
test
insl
popa
aas
call
mov
flds
jb
rcl
insb
mov
sar
jae
call
jmp
imul
aad
push
loope
or
cmc
sahf
cmc
push
stos
pop
aas
add
pop
or
cmp
testl
sti
or
pop
add
jbe
out
inc
or
lds
cmp
andb
xchg
inc
push
or
add
test
or
or
push
dec
or
pop
out
or
push
push
cld
dec
mov
dec
aas
mov
addb
test
fiadds
add
into
cld
lcall
push
jl
sahf
add
ret
jp
fists
mov
andb
or
dec
jmp
aaa
jmp
cld
push
enter
scas
addl
jae
scas
stc
loop
fisttps
fisttps
push
pop
ljmp
stc
xlat
add
cmp
mov
add
pop
and
bound
loopne
movsb
clc
std
add
mov
inc
mov
mov
arpl
scas
ss
ficoms
out
mov
mov
add
fldl2t
sbb
jmp
sub
test
push
fidivrl
fsubr
add
adc
add
bound
loopne
ret
sub
insl
inc
xor
in
bound
xlat
jne
sarl
inc
icebp
lahf
ds
jecxz
mov
iret
jg
xlat
clc
in
or
dec
jae
lret
adc
xchg
pop
fldl2t
xorl
jmp
adc
inc
add
pop
cmp
outsl
mov
testb
mov
and
pop
out
iret
mov
cmc
sbb
test
push
dec
jmp
xabort
add
les
fisubs
push
aas
xor
test
jmp
cmc
xlat
outsl
push
push
inc
std
dec
xor
jecxz
loopne
stos
jg
rolb
and
jmp
insl
cmp
xchg
imul
push
out
or
pop
mov
mov
nop
cli
decl
xchg
or
orb
cli
test
rcll
std
fisubrl
jmp
lret
jle
jae
dec
inc
pop
pop
pop
add
decl
pop
out
or
mov
cmp
rorl
dec
add
jg
mov
cmpsl
or
bound
mov
dec
ror
add
jg
and
ss
inc
xchg
cmp
dec
inc
xchg
std
icebp
mov
xchg
add
lods
cmp
out
cmc
call
dec
adc
sbb
inc
push
cmpsl
inc
ret
in
jl
adc
inc
ret
add
popf
je
adc
cmp
in
aas
pushf
dec
outsb
mov
je
cli
xor
inc
cli
cmp
sub
add
gs
lret
stos
xchg
sbb
fldenv
leave
and
negl
jb
hlt
leave
and
ljmp
xchg
mov
lods
jnp
pop
into
pop
push
out
gs
fs
jo
aaa
pop
pop
rcll
sbb
cmp
add
xchg
push
pop
fsts
adc
adc
call
add
out
imul
jmp
cmp
add
imul
pusha
fiaddl
jmp
bound
lock
flds
loopne
lret
clc
daa
sub
or
fadds
jmp
sub
call
and
daa
sbb
or
fadds
jmp
inc
dec
cld
movsb
xchg
sarb
jmp
imul
es
sub
cmpsb
jmp
loopnew
jo
lret
clc
imul
loope
jmp
fwait
out
jns
flds
add
adc
push
cld
add
cmp
fiaddl
cmc
lock
mov
lods
js
js
and
push
and
push
add
adc
sub
mov
cld
ljmp
pop
or
ret
inc
lret
jnp
je
push
lock
into
js
imul
por
orps
and
inc
jecxz
jmp
push
cld
add
pusha
ret
pop
rolb
stos
testl
fisttps
add
bound
adc
addr16
mov
xchg
jno
and
orl
test
fnstenv
daa
testl
dec
dec
and
gs
sbb
wbinvd
adc
std
test
jmp
in
dec
enter
mov
or
jno
stc
xor
cmp
or
jns
jmp
stos
push
mov
fwait
orb
cmp
or
cmc
push
loop
in
pop
pop
xchg
jecxz
xchg
or
add
jmp
jae
inc
push
test
pop
outsb
sub
jbe
test
pop
inc
fistl
enter
frstor
mull
ds
jb
inc
fwait
mov
mov
dec
in
mov
jae
mov
jnp
std
cli
cld
loopne
in
add
bound
jno
ds
adc
mov
psubw
out
lock
pop
cld
xor
pop
mov
popa
fnstcw
pop
cmpps
sti
sub
fs
clc
jbe
sbb
fmuls
lcallw
mov
pop
mov
iret
sarl
sar
mov
vucomiss
lock
mov
cld
movb
pop
fwait
or
pusha
icebp
jmp
mov
pop
pop
out
popa
fstps
mov
pop
add
sub
popf
inc
inc
adc
mov
out
cs
and
inc
cli
mov
cli
lea
pop
sub
mov
cltd
arpl
jg
adc
std
fistpl
jmp
add
jno
jne
pushf
inc
add
xlat
divb
sbbl
jmp
lret
jno
push
mov
inc
inc
pop
pop
outsb
add
add
mov
mov
loope
jnp
jl
bound
add
aam
incb
xchg
clc
or
lcall
imul
jg
fdivrp
xchg
mov
pusha
imul
push
sub
jmp
xchg
jg
test
or
sbb
or
out
stos
enter
ret
pusha
mov
ret
clc
out
stc
stos
stc
pop
jne
test
addl
out
ljmp
xor
vhsubps
and
out
push
adc
pop
pop
mov
les
hlt
mov
mov
les
pop
loop
cli
cli
loop
xchg
stos
lret
aam
lds
fiadds
in
push
pop
loop
out
ss
cmc
cli
loopne
dec
stos
mov
icebp
dec
jg
cmp
push
cwtl
push
loop
fdivr
loop
and
xchg
push
inc
popa
mov
sar
fcoml
push
add
mov
sbb
fdivr
sarl
vpsubb
mov
cmp
and
or
lret
jmp
ret
jecxz
sbbl
arpl
call
pop
insb
mov
clc
outsb
mov
inc
out
pop
lret
mov
add
mov
lret
jnp
ret
repz
xchg
lahf
test
mov
clc
jae
std
adc
fmuls
add
cltd
inc
add
pusha
cmp
cmp
jg
push
in
cmp
rolb
fildl
jmp
mov
jne
xchg
inc
add
pop
jne
pop
xlat
or
adc
test
repz
mov
and
add
mov
inc
cmp
add
insl
or
sbb
and
lret
vmovd
push
fdivrs
or
std
sbb
call
icebp
or
push
bound
cmp
test
cmp
mov
inc
arpl
lcall
add
bound
cmp
jp
pushl
xor
movsl
stc
cmc
ss
or
xor
mov
loop
fisttpll
out
mov
vpmaddwd
js
and
mov
sbb
out
out
inc
movsl
dec
inc
and
repnz
cmp
das
lods
or
pop
push
rcrl
jmp
out
out
orl
adc
mul
movsb
xchg
hlt
out
mov
aas
xchg
jb
xchg
rcrb
and
jns
call
aad
cmp
loop
inc
jl
cmc
loopne
mov
sti
push
push
loopne
pop
loopne,pt
fsts
or
adc
mov
je
insl
and
jae
loop
lret
shr
cmp
inc
or
call
daa
cmp
loopne
cmp
jge
add
inc
rorb
in
add
cld
mov
imul
sub
lcall
or
jo
rorl
fadd
roll
cmp
push
ror
leave
clc
mov
fs
cwtl
divl
pusha
mov
adcl
inc
sbb
scas
insb
shlb
call
or
add
roll
cmp
addb
cli
addb
cli
addb
cli
mov
std
adc
cmp
jle
rcrl
je
inc
lret
call
jle
or
cltd
imul
add
jmp
fldt
std
divl
bnd
dec
or
inc
fwait
incb
out
and
out
inc
jge
xor
enter
or
jae
mov
add
bound
xor
hlt
gs
js
dec
testl
or
repnz
stc
inc
xor
out
mov
fcomps
out
in
inc
sbb
dec
dec
and
out
movsl
scas
adc
xchg
add
jg
test
add
push
cs
xchg
lret
pushf
movsl
xchg
dec
movsb
cmpb
std
xor
sahf
pop
mov
ficomps
ljmp
add
or
rorl
loope
jmp
add
mov
xchg
pop
mov
mov
or
sub
mov
jmp
fiadds
xchg
shlb
push
push
imul
mov
stos
xchg
mov
jmp
mov
mov
out
pop
mov
fs
fs
mov
ja
and
add
aad
loop
int
icebp
loope
and
leave
clc
push
fwait
pop
add
iret
mov
inc
rclb
add
cwtl
sub
pop
adc
int
cmp
jb
and
je
in
jnp
and
sub
leave
fisubrl
enter
add
out
mov
fisttpl
pop
outsb
push
inc
or
pop
jnp
sbb
pop
lods
clc
cmpsb
test
add
clc
dec
repnz
add
fcoml
iret
add
mov
add
cmc
push
clc
cmp
jle
xchg
push
into
je
dec
dec
and
dec
ret
mov
mov
xchg
insl
or
movlps
ret
inc
push
fdivrs
sub
cld
sub
jle
pop
ret
jne
daa
mov
call
jnp
decl
jbe
repnz
arpl
jo
std
lods
jns
inc
add
jmp
add
inc
repnz
add
mov
push
pop
arpl
bound
sub
mov
je
jae
bound
jp
insb
sbb
bound
jg
addr16
dec
adc
add
mov
xchg
pop
fsubs
and
fwait
add
adc
imul
mov
cld
jnp
cmp
push
or
inc
and
mov
mov
aaa
inc
sbb
fsubrs
lahf
lret
dec
mov
pmaxub
lahf
stos
dec
and
adcl
lods
out
mov
out
out
int3
imulb
inc
pusha
out
cld
in
iret
mov
loop
pop
imul
pop
mov
aad
sub
sets
sbb
icebp
jnp
ljmp
sbb
push
dec
sbb
je
sbb
bound
sbb
push
dec
sbb
mov
cmp
dec
cmp
jmp
das
add
add
or
or
jmp
inc
jmp
add
push
inc
jmp
add
push
inc
jmp
sbb
inc
jmp
std
push
inc
jmp
mov
pop
inc
jmp
lcall
jmp
cltd
push
inc
jmp
inc
push
inc
jmp
xchg
push
inc
jmp
and
inc
add
jg
inc
sti
fldt
lret
dec
sub
scas
xor
mov
out
inc
add
add
inc
lret
sbb
inc
mov
sbb
cmp
lahf
cmp
arpl
inc
jnp
xor
cmpl
inc
jnp
xor
test
inc
dec
loop
inc
dec
inc
sub
cmp
sub
inc
dec
sub
cmp
sub
inc
or
xor
sub
inc
sti
sub
inc
shrb
mov
shlb
fnstenv
sbb
addl
and
mov
mov
xor
sub
insb
add
fcompp
push
movsl
add
push
fnstsw
divl
test
loope
push
inc
fwait
stc
xlat
mov
sahf
cmp
mov
mov
add
or
and
mov
pop
sub
call
or
stos
xor
out
push
clc
jg
jb
cmp
adc
aad
int3
fstp
add
mov
xchg
fsubr
add
leave
lret
sbbl
icebp
xor
int
repnz
adc
inc
lock
shll
sbb
push
insb
sub
xchg
rcr
lcall
sbb
mov
add
sub
pop
int
pop
sahf
and
test
inc
imul
fldt
mov
push
or
push
xchg
out
inc
add
jmp
iret
mov
insl
std
mov
add
decl
int
mov
pusha
push
lret
out
push
or
enter
and
test
sub
std
pop
push
cmc
ja
add
fsts
xor
test
das
xchg
stc
decl
fdivs
fcoms
mov
lcall
jg
or
dec
pop
mov
cmpl
add
call
test
add
add
hlt
cmpb
dec
cld
jp
mov
push
cli
push
leave
push
adc
jne
add
inc
push
loopne
jnp
add
cmc
stc
jl
inc
incl
adc
xchg
push
mov
xor
daa
mov
stc
add
xorb
arpl
jg
mov
jg
shlb
sub
jle
sub
stc
push
int
push
cmp
cltd
push
xlat
add
or
test
lea
cltd
dec
adc
lock
fcmovnb
insl
and
inc
inc
xchg
push
xchg
sbb
mov
push
fsts
outsb
fmuls
jmp
sbb
cmc
and
fwait
popf
or
fldl2t
add
sbb
mov
sbb
xor
sbb
add
mov
sbb
xor
or
aaa
test
fcmovne
ficomps
test
add
fnstcw
pop
das
in
test
xchg
imul
fcomps
dec
lds
mov
xchg
and
in
mov
push
push
push
pop
aad
rcr
cs
popa
push
cmp
out
sub
jmp
xor
xchg
pop
add
popa
push
mov
pop
cltd
or
scas
clc
jmp
mov
or
sahf
push
std
push
sbb
rclb
adc
push
cmpsb
jb
jne
flds
and
sub
push
jo
cmc
and
or
add
xchg
adc
xchg
ret
movsbl
jl
test
adc
faddl
lea
fdiv
jo
es
ljmp
and
lret
mov
mov
out
jg
or
rcrl
mov
fildl
testb
roll
add
out
or
add
pop
lods
fildl
add
and
pusha
sub
bound
mov
enter
jle
cmp
cmp
incb
dec
dec
mov
dec
or
cmp
xor
add
mov
or
cli
or
and
frstor
pop
inc
insl
cld
cld
clc
pushf
xchg
aam
aad
js
arpl
add
insl
enter
sub
push
adc
add
adc
add
sub
fmulp
loopne
hlt
push
fstps
ficomps
jmp
in
add
cwtl
out
jg
fsubr
add
fisttps
or
pushl
mov
sub
add
das
aas
inc
mov
add
jmp
xor
or
ds
add
jno
jle
mov
sbb
sub
cwtl
incb
inc
jle
mov
fidivrl
add
lret
int3
popa
add
push
and
aaa
int
xor
imull
fisubs
std
mov
inc
cmp
leave
inc
jmp
xor
icebp
leave
or
icebp
push
stc
jo
cmc
cmp
std
cmp
rolb
imul
inc
icebp
data16
rcrl
imul
or
mov
rclb
sbb
scas
mov
and
add
adc
sbb
push
inc
je
dec
aad
pop
cmpsl
rcr
xchg
pop
push
add
inc
addr16
lea
push
call
dec
cwtl
push
push
add
divl
lds
inc
jge
mulb
ret
test
dec
addl
mov
xchg
test
cs
inc
mov
lock
cmova
add
lret
out
or
cli
sbb
loop
or
cmp
jmp
dec
and
cmp
adc
ja
ds
xor
pop
cmpsb
cld
adc
xor
ja
add
pushf
cmp
shll
scas
inc
adc
cmp
push
adc
and
dec
sub
sahf
fcoml
pop
iret
mov
add
jnp
jle
js
xchg
xchg
bound
jl
fstps
add
jmp
popf
stos
add
lcall
mov
shll
fnstsw
add
ljmp
add
out
pop
scas
out
out
xor
lcall
cmp
xchg
aam
add
push
pop
out
fsubr
add
aas
in
aam
adc
add
bound
in
jge
hlt
icebp
add
fnstcw
and
fstps
xor
fstpl
or
xchg
push
lods
int
mov
clc
jmp
and
jge
xchg
pop
xor
popa
fldcw
xor
int
fadds
jmp
cmp
sbb
or
in
add
jmp
xchg
pop
flds
jb
std
xor
clc
jmp
std
enter
fld1
leave
cmp
jl
pusha
flds
je
std
and
add
sbb
sarb
mov
push
push
add
cld
adc
pop
adc
mov
cmpsl
jbe
mov
add
call
mov
fildl
add
pop
add
fnstcw
pop
push
idiv
cmp
push
data16
sbb
lods
push
push
mov
sbb
mov
sbb
add
mov
cli
jle
or
mov
idiv
adc
xor
rcrb
mov
add
ss
aam
mov
and
cmp
ja
xchg
xchg
fsubl
push
jmp
jae
sub
pop
mov
add
or
add
push
xchg
loop
add
mov
dec
and
inc
test
movb
std
loopne
add
cmp
add
sbb
mov
push
add
loope
loopne
dec
xchg
arpl
jmp
xor
sbb
xor
sbb
es
bound
popa
movd
lahf
sbb
mov
fldenv
pop
pop
stos
cld
add
push
jmp
mov
sbb
lret
sbb
add
gs
popa
or
jle
in
add
push
shlb
cmpsb
aaa
shlb
cmpsb
out
or
add
mov
add
push
popa
or
ds
jo
inc
adc
pop
popa
pop
shl
loopne
jmp
lcall
testb
mov
loop
cmp
bound
jge
push
lods
imull
enter
popa
and
mov
lds
jmp
and
sub
pop
sbb
jo
std
fs
std
xor
xor
inc
lds
std
cmp
or
add
fadds
push
sbb
pop
add
cld
gs
sbb
and
mov
call
push
call
adc
pop
push
cli
jg
xchg
ret
rcrl
and
dec
orb
pop
enter
mov
add
and
push
cld
test
push
or
bound
ret
mov
fadds
lfs
and
add
sahf
dec
lret
je
inc
sahf
jg
add
mov
aaa
jbe
enter
push
adc
cmc
loopne
loope
add
cs
inc
xor
in
cmc
loopne
imul
xor
fisttpll
inc
fisubrs
xor
adc
sub
lldt
test
loopne
pop
add
subl
add
fildll
mull
add
sub
lret
in
add
cmp
add
jmp
jbe
std
leave
xor
sbb
sub
mov
sub
ffree
xor
sub
aad
xchg
fldenv
loope
inc
std
pop
push
loopne
loopne
loopne
sub
aad
cmp
add
and
pop
xor
xor
sbb
jl
std
lods
int3
mov
add
ja
std
aad
imul
sub
fnsave
adc
push
popf
jmp
mov
push
je
std
mov
sbb
ljmp
clc
insb
jne
add
popa
fincstp
jne
cli
push
sbb
cmpsb
or
xchg
push
clc
push
ret
fdivl
adc
test
js
pop
jo
std
cld
out
fnstenv
mov
lcall
pop
flds
bound
std
cmp
cld
or
popa
fsts
loop
cld
out
fsts
gs
add
adc
add
int
inc
pop
jle
add
xchg
jge
pop
and
jmp
pop
stc
ljmp
movsl
add
fldenv
int
sbb
and
xor
lret
fsubl
add
mov
bound
jl
adc
hlt
push
xor
in
stc
adc
clc
pop
add
mov
jge
mov
push
incb
bound
jne
jle
cmp
cmpsl
js
bound
fsubrs
inc
jnp
jmp
mov
mov
mov
mov
int
mov
dec
jle
jmp
mov
jge
mov
or
fucom
daa
icebp
mov
pop
xchg
add
scas
dec
or
xchg
jp,pt
inc
xchg
jns
add
lcall
xor
test
and
stc
jmp
movsl
fbld
shlb
fisttps
aas
jns
mov
sub
lahf
arpl
jle
inc
sti
out
out
repz
push
int3
test
sahf
imul
push
repnz
xchg
push
pop
pushf
jno
loopne
fbstp
loop
popa
push
es
push
mov
js
mov
mov
sahf
sti
ret
stos
and
cmp
mov
mov
jecxz
xchg
push
mov
cmp
js
xchg
add
mov
add
jmp
xor
push
lret
sub
mov
sub
lahf
xorl
lret
es
and
lret
lahf
clc
popf
and
mov
pop
shr
cwtl
mov
enter
loope
mov
shl
and
xlat
stos
roll
scas
stos
mov
insb
rcl
adc
sbb
adc
cmp
add
punpckhdq
mov
inc
cld
dec
dec
inc
in
xchg
adc
mov
jle
mov
inc
clc
adc
iret
jne
mov
and
xchg
add
push
inc
cmc
icebp
rorb
mov
add
mul
adc
push
jmp
sarb
ja
ja
add
mov
jg
addr16
call
xor
fdiv
push
pop
adc
mov
jg
cmpsl
lock
bound
push
jl
add
mov
aad
inc
or
add
mov
pushl
daa
push
call
out
clc
loopne
repnz
ja
les
add
and
enter
xchg
aaa
cmp
fisubs
addl
ret
aas
mov
add
pop
adc
inc
loopne
jno
or
lds
in
aaa
cli
bound
std
jmp
andl
ds
mov
fwait
inc
divb
enter
enter
inc
out
iret
sbbl
add
inc
insl
fsubp
xor
lods
or
orl
fadd
sbb
imul
insl
dec
dec
cmpsb
daa
pop
dec
adc
jnp
insl
or
sbb
xchg
and
insb
add
daa
sbb
aad
inc
pop
or
and
mov
pop
adc
inc
jmp
fists
or
clc
jmp
cmp
push
xchg
mov
add
sbb
add
sbb
sarl
flds
mov
aam
movsl
jge
pop
inc
jo
clc
jmp
add
dec
pop
loop
jmp
push
mov
sbb
xchg
out
mov
out
push
mov
sti
push
ret
or
push
int
add
xor
jbe
cli
incl
mov
add
cli
and
je
add
and
inc
sub
add
jge
jecxz
leave
inc
fs
and
pop
pop
leave
add
orb
fs
call
mov
cs
fsubp
jge
andb
jge
push
cli
mov
add
jbe
fs
cli
cmp
jl
lret
faddl
xor
jbe
mov
rcrl
stc
mov
and
enter
shlb
lcall
loope
ja
fisubrs
sti
inc
call
fnstenv
je
mov
fs
push
pop
ja
and
inc
call
dec
mov
inc
sahf
ficoms
jmp
shlb
cmp
sbb
cmpsb
and
sbb
mov
lret
stc
int
fs
pop
outsb
stos
mov
andl
xor
fidivrs
scas
fsts
mov
enter
mull
cwtl
insb
aad
jg
fistps
push
jb
or
outsl
je
and
imul
jmp
mov
bound
adc
popa
pop
jle
push
fldcw
inc
icebp
jmp
fldl
aaa
mov
add
adc
jmp
and
pop
outsb
bound
xchg
add
ds
sbbl
dec
pop
shll
bound
pop
add
jmp
stc
adc
test
fildll
call
pop
sbb
je
mov
notb
sbb
stc
jb
inc
lods
add
cwtl
sub
mov
pop
imul
clc
es
xor
mov
push
std
call
imull
loopne
mov
mov
inc
fldenv
mov
mov
inc
call
and
scas
inc
push
mov
fldl
jl
icebp
add
pop
jne
insb
push
add
push
and
dec
xchg
and
add
fstpl
and
add
push
xchg
out
sbb
hlt
or
scas
adc
call
xchg
and
inc
xchg
testl
jmp
push
xchg
iret
push
sub
call
mov
mov
pop
test
dec
das
sarb
inc
fiadds
sbb
inc
xlat
pop
or
addb
jmp
inc
cmc
or
imul
xor
andl
clc
sub
pop
cmp
and
push
sbb
lods
jb
sub
outsl
sar
outsl
fldenv
adc
fstps
call
xchg
adc
ret
fidivrl
push
mov
enter
enter
in
fstps
xor
aas
fsts
fwait
or
sbb
cltd
arpl
sbb
bound
jg
adc
xor
jg
rcll
out
cmp
inc
jns
pop
jp
push
push
mov
aam
sub
cmpl
aas
jns
xchg
scas
or
mov
clc
add
in
cmc
out
sbb
insl
jmp
icebp
mov
pop
xor
mov
lret
fs
jmp
cmp
cwtl
sti
mov
test
out
add
mov
cld
add
or
or
sahf
test
negl
nop
outsb
loope
in
xchg
addl
jl
jbe
ljmp
out
in
andl
mov
add
dec
push
and
jge
mov
inc
clc
pop
jo
pop
ret
push
mov
cmpsl
inc
lea
push
push
lcall
adc
test
addl
adc
xchg
arpl
mov
addb
clc
enter
push
add
jbe
cmpsl
pusha
inc
hlt
push
fcoml
add
or
imul
adc
iret
pop
decl
aas
dec
clc
enter
add
subb
mov
je
mov
das
add
andb
ret
and
push
ret
icebp
or
or
adc
push
ret
daa
scas
add
lods
std
inc
or
cmp
mov
sub
xor
xchg
jge
je
cmp
jae
daa
dec
mov
shrl
push
xchg
std
sbb
inc
bound
std
jb
jbe
xchg
fnstenv
xchg
adc
out
mov
adc
test
movsb
mov
sahf
add
cwtl
xchg
sub
mov
daa
add
andb
stos
add
nop
aad
push
sbb
mov
loope
dec
add
adc
lock
in
jne
nop
lcall
das
or
fnstenv
int
nop
nop
pushl
bound
clc
rcll
add
incb
insl
add
mov
adc
push
aad
mov
aad
cmp
movsl
popa
sbb
cld
and
inc
jmp
movsl
mov
int
push
pop
mov
shll
sbb
pop
leave
adc
pop
insb
inc
dec
mov
fidivl
test
syscall
sbb
cmpsb
adc
fnstenv
mov
sub
in
add
mulb
jne
je
fs
rolb
imul
fs
stos
jge
mov
sti
decl
jne
mov
add
push
push
mov
jle
push
dec
dec
rclb
jnp
jmp
or
xchg
pop
fadds
xchg
push
incl
fyl2xp1
xlat
or
add
je
jle
mov
movsb
stc
jne
or
add
inc
lea
push
push
bound
in
div
psubsw
mov
pop
mov
push
inc
mov
clc
mov
jae
xor
orb
xchg
xchg
mov
mov
jae
cmpsb
lods
jmp
mov
mov
xchg
rclb
or
mull
xor
ja
sub
addr16
ja
push
inc
add
fs
xor
mov
jg
push
inc
adc
sbb
data16
jmp
fimull
xchg
test
fnstcw
aam
and
shrb
jb
mov
into
xorl
sarb
cltd
outsl
sub
inc
outsb
fldcw
jge
xchg
xchg
pusha
xor
js
in
adc
mov
pop
je
mov
shll
das
pop
jmp
cwtl
jbe
ds
loop
ffreep
cmp
add
into
mull
push
sub
mov
test
fldl
jmp
repnz
add
cmp
cmpsb
test
popa
add
outsb
fld
adc
iret
push
stos
mov
or
mov
xchg
adc
mov
cmpsb
xchg
divb
jae
adc
in
pushf
in
xchg
outsb
icebp
jb
idiv
fildl
pop
mov
sub
pop
lahf
inc
jbe
sub
dec
bound
add
fimuls
sub
clc
hlt
xchg
faddl
jnp
fstps
mov
mov
adc
push
sub
add
lods
cmc
addr16
add
rolb
mov
cli
xor
or
or
fcomip
jmp
pop
hlt
mov
test
addl
cmp
add
mov
jno
push
call
push
mov
jg
ds
pop
dec
hlt
and
stc
ja
adc
cmc
cmp
insb
test
add
mov
add
push
pop
orb
mov
mov
and
push
fldcw
jle
bound
shlb
jmp
jno
cmp
stc
mov
add
mov
scas
bound
mov
out
jb
stc
aad
mov
xchg
repz
jge
add
jb
sub
fldenv
leave
pop
push
and
xor
sbb
faddl
pop
fcmovbe
jge
mov
imul
adc
je
push
sbb
outsb
dec
pop
stos
mull
cltd
mov
xor
loope
test
sbb
or
test
mov
xchg
or
sub
inc
jbe
jb
lcall
outsl
fistl
pop
call
cwtl
jne
xor
test
add
popa
mov
pop
mov
cmp
cmp
clc
jmp
incl
dec
xor
pop
les
movsb
sub
stos
pop
xor
jne
test
xchg
jmp
js
add
adc
pop
fdiv
jns
xchg
mov
clc
push
int3
dec
clc
push
jecxz
fucomi
push
flds
out
jp
add
cltd
adc
jmp
pusha
cmp
clc
jmp
aas
cmpb
ss
mov
stos
loopne
idiv
andl
add
add
test
ljmp
clc
pop
mov
scas
jge
mov
fisubl
mov
cmc
stc
mov
cmpl
mov
pop
cltd
mov
flds
mov
and
cmpsl
sub
popf
pop
adc
inc
rclb
test
sar
ja
adc
cmc
inc
jp
jb
sub
out
or
xchg
jnp
jecxz
jmp
rcl
mov
push
enter
bound
cmp
fdivl
cld
xchg
mov
imul
cmp
movsl
ljmp
push
cmp
test
and
mov
test
lock
clc
jecxz
imul
cmpsl
mov
sub
imul
jmp
sbb
out
std
inc
fstp
jl
imul
pop
push
mov
sub
out
fists
pop
jl
aad
ficomps
js
mov
sbb
mov
jo
imul
outsb
pop
stos
out
mov
push
push
and
mov
cmp
jno
mov
stc
cmp
push
sub
dec
dec
push
mov
inc
aad
and
lahf
scas
sti
ficomps
add
insb
sbb
pusha
pop
pop
dec
cmc
pop
les
jo
pop
inc
in
sbb
add
cmp
jne
jmp
imul
cmp
popa
flds
jmp
stc
and
popf
inc
std
call
add
addl
out
clc
bound
orb
cmp
lods
adc
sbb
push
jnp
rcr
test
add
xlat
mov
call
lea
cmpsb
inc
push
add
sti
aas
sbb
add
inc
inc
and
arpl
cs
mov
rorl
movswl
add
push
push
ds
icebp
mov
pop
or
add
call
test
addl
adc
cmp
je
out
push
popa
mov
fdivrp
mov
lret
enter
adc
sbb
cmc
jb
test
add
xchg
fmull
push
jp
stc
add
mov
stc
push
mov
jle
rorl
push
lret
push
cli
lods
idivb
xchg
jp
aad
leave
jns
inc
test
xchg
pusha
mov
aam
push
loopne
repnz
call
out
icebp
and
scas
and
cmp
ret
stc
inc
cld
cmpl
adc
xchg
fsubr
test
sbb
jnp
push
inc
pop
add
movsb
int
out
push
out
movl
sti
insl
out
mov
enter
pop
inc
jne
test
leave
in
bound
adc
dec
add
push
adc
in
push
clc
fmull
push
add
clc
jle
jp
jno
push
push
xchg
jg
fucompp
add
or
or
add
or
cmp
stos
mul
sbb
add
add
dec
cmp
aad
adc
mov
mov
fs
jno
push
xchg
mov
cmp
es
fsubr
dec
rolb
jmp
mov
inc
int
jno
mov
inc
mov
imul
inc
sub
jl
add
add
icebp
xor
cmpsb
jg
inc
jne
mov
loop
or
flds
jmp
and
add
jb
std
sbb
jl
cmp
mov
or
jne
or
jb
lods
outsb
or
push
xchg
mov
lret
call
ja
or
adc
or
imul
test
mov
subl
clc
jae
cmc
jae
pop
mov
push
ljmp
mov
fistl
pop
inc
and
mov
stc
inc
sbb
cmc
outsl
and
jb
add
mov
sub
jb
add
sub
out
bound
fadd
test
mov
lret
mov
add
outsl
ss
xor
mov
mov
call
fnstenv
fcomi
into
pop
test
jns
mov
mov
push
call
push
xor
push
jmp
jo
test
jo
xlat
mov
dec
mov
xchg
fsts
add
ja
mov
push
stos
fstps
sub
add
and
sahf
lods
psubd
cltd
arpl
push
pop
mov
add
lods
setge
nop
and
mov
push
sub
data16
movq
addl
jl
cmp
mov
mov
jl
ret
sub
xor
xchg
push
jns
cmp
icebp
in
mov
add
jno
mov
cmpb
fdivs
test
sahf
mov
fdiv
in
in
in
jmp
cmp
dec
rolb
push
flds
xor
dec
frstor
in
jb
iret
idivl
or
adc
jg
push
xlat
mov
aad
inc
orb
aam
test
add
push
je
xchg
push
cmp
push
add
lock
xchg
icebp
decl
rorl
and
cli
inc
mov
mov
in
scas
in
pop
pop
mov
dec
leave
leave
roll
push
orb
in
psrlq
add
icebp
sti
xchg
clc
inc
push
lods
inc
pusha
idiv
add
jo
adc
clc
inc
add
and
add
sbb
inc
push
ss
icebp
sti
xchg
stc
push
ljmp
push
shll
clc
bound
pop
stc
insl
in
inc
je
loope
xchg
pop
inc
popa
stc
jmp
xor
add
out
push
stc
sub
sti
xchg
call
repz
pop
add
sub
outsb
add
xchg
pop
mov
mov
mov
std
push
aad
jl
bound
ss
out
leave
jno
add
popa
mov
xor
scas
and
call
mov
push
out
and
inc
cs
pusha
enter
enter
mov
fs
fldl2t
pop
mov
sub
jae
add
js
mov
pop
jg
popa
stos
test
adc
or
push
and
jns
mov
out
sti
jmp
dec
add
mov
into
mov
dec
andnpd
adc
adc
movswl
push
mov
cmpsb
mov
lock
add
xlat
xor
lcall
sub
pop
cmp
push
lcall
add
push
cmp
cmpsb
pop
int
sub
push
adc
js
mov
mov
les
fisttpl
push
jbe
mov
ljmp
pop
fldenv
test
popa
clc
ret
jmp
pop
frndint
call
popa
cmp
xchg
sbbb
adc
jb
add
sub
pop
rcrb
je
jae
add
sub
jbe
add
js
notrack
jl
dec
adc
dec
lret
ret
mov
add
xor
pop
pop
outsb
xor
jmp
mov
adc
cmp
ret
add
fiaddl
sbbl
fstpt
add
popa
shll
and
adc
stc
aaa
pop
outsb
je
bound
andl
sbb
pushf
test
jns
or
push
mov
call
cli
xor
jns
test
insl
or
pop
jmp
xchg
vpunpcklbw
stc
imul
xchg
leave
decb
and
add
mov
push
js
mov
add
xor
fidivrl
xor
dec
jmp
fidivs
dec
stc
mov
mov
cwtl
orb
sbb
pop
adc
jae
out
imul
out
mov
jns
inc
fldl2e
inc
adc
das
insb
jbe
iret
pop
aas
mov
push
mov
add
push
inc
loope
sub
inc
mov
or
add
mov
and
sbbb
fldcw
inc
pop
pop
loope
into
or
inc
inc
pop
mov
sub
les
ss
xor
xor
call
adc
mov
pop
add
fists
inc
inc
clc
testb
cltd
insl
loope
or
out
clc
fidivrs
or
push
pop
fldt
inc
jb
mov
adc
pop
div
cmpsb
adc
push
sahf
jb
icebp
xchg
push
jb
bound
int3
inc
jmp
flds
bound
jb
sub
in
mov
mov
xor
testl
divl
jnp
pop
pop
add
sbb
push
mov
stc
adc
inc
test
rclb
inc
push
in
test
pop
enter
lock
mov
add
aas
mov
add
int3
push
push
insl
adc
ret
jb
jns
inc
pop
addr16
pop
aam
and
movsb
add
aam
jl
rorl
add
mov
bound
in
popa
cltd
cmp
shlb
xor
bound
test
dec
cmp
mov
jb
std
jp,pn
in
add
xor
out
pop
pop
stc
push
shl
data16
push
sbb
mov
jae
pop
adc
call
sbb
or
add
jp,pn
push
out
outsb
mov
rolb
pop
insl
fiaddl
gs
xor
mov
fsts
xor
jae
int
pop
and
dec
pop
ficomps
sahf
mov
mov
mov
scas
add
sub
jmp
int
lock
test
fnstsw
repnz
xor
adc
mov
fdivrl
mov
or
addr16
add
loop
push
fsts
mov
into
pusha
loopne
dec
inc
rcrb
clc
repnz
push
add
pop
sarb
xchg
into
push
add
xchg
add
add
or
push
xchg
out
mov
add
outsl
jmp
mov
push
fdivl
mov
les
dec
leave
dec
mov
pop
jmp
pshufw
sbb
fcomps
andb
in
sub
jae
fsubs
sbb
in
flds
bound
add
adc
sub
adc
daa
insb
loopne
mov
cli
mov
aad
add
pop
shll
add
mov
inc
mov
add
in
jb
dec
pop
mov
add
push
cmp
cli
jmp
and
jge
adc
adc
cmp
or
and
roll
decl
pop
mov
shl
jae
mov
rorb
lahf
or
bound
cmp
shl
ljmp
mov
or
jg
pusha
mov
lcall
leave
or
imul
or
ret
pusha
or
add
mov
cld
cmp
cs
pop
je
jmp
and
daa
call
jmp
movsl
cld
xchg
ja
out
rorb
jmp
rcll
or
cwtl
sar
aas
mov
std
mov
aaa
fisubrs
sbb
mov
push
and
push
fldenv
inc
int
sub
fwait
push
stc
les
sbbb
inc
pop
sub
or
adc
pusha
movl
fldenv
pop
mov
jge
dec
fdivl
add
sub
jnp
jmp
punpckhwd
lret
fldl2t
jge
pop
aaa
add
pusha
pop
add
nop
jbe
jae
lods
and
push
add
test
popa
in
das
insl
push
cmp
or
xor
jecxz
clc
inc
fs
dec
imul
add
add
inc
je
pop
std
call
inc
rorl
gs
in
insb
dec
call
mov
rcrb
aam
mov
jb
add
ljmp
adc
fidivl
lea
fbstp
hlt
push
cli
mov
adc
ljmp
incl
mov
mov
movsl
sub
mov
adcb
pop
and
jle
outsl
lds
mov
pop
or
in
fs
in
insb
and
push
cmp
add
cmp
add
fdivr
psubb
jmp
add
scas
or
mov
ljmp
pop
decl
pop
inc
iret
fstps
add
addl
jne
jge
cmp
fiadds
or
add
jmp
pushf
and
lods
int
cmp
jnp
iret
sbb
fwait
pop
or
das
outsl
pop
aas
cmc
mov
sub
imul
mov
inc
push
jb
ret
and
hlt
xchg
xorl
add
push
cmp
nop
sbb
pop
into
jbe
fldl2t
add
imul
adc
pop
inc
or
sbb
pop
cmp
or
repz
or
popf
daa
jbe
daa
jmp
xor
imul
sub
mov
jl
pop
daa
pop
add
movmskps
in
mov
repz
add
xchg
insl
shr
sbb
adc
pop
push
ja
and
ljmp
mov
and
xor
bound
mov
in
icebp
mov
leave
push
adc
pop
ret
push
push
bound
addr16
sbb
sbb
ficompl
add
fwait
enter
dec
mov
adc
pop
push
loopne
out
in
add
faddl
add
rol
je
pop
mov
gs
sbb
fisubl
rol
inc
insb
idiv
inc
repnz
adc
rolb
addr16
mov
faddl
add
jp
incl
fcompl
je
in
and
push
into
je
sbbb
gs
jbe
pop
jne
fcomp
insb
or
loopne
inc
push
xor
loop
lcall
cli
mov
push
jae
sbb
sub
add
cmp
rolb
jo
inc
and
and
sub
sub
nop
jp
lods
mov
push
add
xor
mov
dec
pusha
mov
in
cmpsb
jns
mov
dec
addl
icebp
orb
pop
lahf
bound
sub
bound
stc
outsl
push
ja
bound
test
fdivr
push
fldenv
adc
test
adc
dec
fldz
lea
aam
sbb
aaa
mov
xchg
into
out
cs
lea
es
int3
stc
lock
fldenv
iret
nop
or
int3
f2xm1
jne
bound
scas
nop
cmpsl
or
in
lret
xchg
in
testl
jae
aas
std
aaa
add
imul
or
in
pop
fdivl
gs
pop
push
and
aaa
and
push
and
xchg
and
add
pop
out
xchg
pop
clc
popf
mov
enter
add
popa
mov
adc
add
in
outsb
loope
cltd
inc
rcl
flds
jmp
push
or
test
scas
fnstcw
shrb
jmp
jne
pop
insb
push
in
pop
push
arpl
ds
shrl
std
add
enter
mov
pushf
clc
adc
add
sbb
jo
cltd
cwtl
clc
mov
or
pop
insl
and
mov
push
mov
jbe
mov
fmuls
mov
ret
lock
pop
les
clc
pop
testl
ficomps
test
mov
imulb
jle
push
xor
pop
stc
pop
clc
push
add
cmp
or
in
and
pop
into
jg
pop
leave
jmp
pushf
push
push
jo
and
xchg
or
decl
test
inc
lret
pop
mov
and
mov
sub
xor
insb
lods
jle
movsl
sub
push
popf
fs
and
add
loope
push
cmp
dec
jmp
idivl
jns
addr16
xor
dec
mov
in
push
mov
adc
aas
out
inc
or
mov
sbb
mov
enter
inc
inc
dec
dec
std
jl
push
enter
call
in
xor
xor
test
jl
or
leave
fnstenv
dec
xor
cli
xor
adc
das
dec
fildll
push
adc
cltd
jno
movsb
mov
cld
ficoms
jl
gs
fistps
xchg
mov
in
mov
and
or
mov
std
and
mov
dec
les
das
bound
mul
jae
sti
out
sub
dec
push
mull
add
xchg
add
or
push
jb
or
mov
dec
jne
push
pop
add
sub
add
hlt
pop
jmp
bound
push
out
mov
sub
or
jb
dec
sub
jns
mov
popa
dec
push
std
push
sub
mov
jb
or
pop
or
cld
xor
inc
jmp
add
push
iret
push
rolb
mov
add
out
sbb
cmpsl
push
insl
adc
fidivs
sub
or
or
jg
mov
clc
ljmp
std
decl
add
icebp
aam
inc
sbb
nop
pop
push
mov
push
call
clc
js
xor
lret
stc
mov
jge
aas
sbb
test
ret
mov
and
and
mov
fwait
sub
aam
iret
lock
sar
std
jmp
mov
xchg
jae
xchg
jne
push
std
out
jno
add
adc
and
mov
jp
ja
lock
test
xchg
call
or
mov
jb
push
sbb
bound
lods
jno
cmpl
add
jle
sbb
mov
call
aam
jae
push
mov
push
in
and
int
dec
rorb
loop
lret
lods
sub
dec
out
subl
mov
in
xchg
fldz
test
mov
mov
adc
fnstenv
add
xchg
mov
xchg
pop
movb
push
mov
mov
dec
pop
in
xorl
fiadds
out
out
inc
pop
push
mov
add
add
pop
daa
ret
imul
pop
mov
sub
leave
imull
push
popf
sahf
pusha
mov
bound
jge
cmpsl
pusha
clc
sub
movsl
push
dec
int
sbb
adc
movsb
push
icebp
into
pop
sbb
es
xor
mov
push
ja
xchg
aad
and
adc
add
call
loop
and
bound
aad
icebp
pop
aad
jge
cmpsb
push
loope
aad
das
jbe
mov
or
push
cmp
add
cmc
stc
cmp
sbb
bound
and
dec
inc
or
jo
inc
sti
imul
aaa
jno
mov
jno
call
inc
mov
mov
push
rorl
and
jmp
sub
jmp
mov
xchg
clc
out
out
add
dec
cmp
adc
or
jns
and
dec
jnp
cmp
and
mov
addl
adc
call
mov
gs
xchg
cmp
mov
cli
out
sar
in
inc
call
mov
mov
push
jb
or
add
mov
xor
das
push
jg
cmpsb
jno
dec
pop
outsl
push
jge
push
add
add
adc
loopne
add
mov
pop
out
xchg
bound
jp
mul
movntq
sub
add
xorl
fcoml
in
mov
mov
adc
aad
cmp
out
test
bound
cmc
repz
cmc
pop
das
imul
mov
repz
dec
push
mov
and
lret
lret
mov
or
mov
push
and
outsl
dec
movsl
adc
adc
xchg
daa
out
or
jle
jmp
popa
outsb
inc
test
pop
divl
outsl
add
dec
sbb
fcomip
call
sbb
fld
frstor
adc
xchg
ret
dec
shll
pusha
sbb
test
cmp
mov
test
adc
add
mov
add
and
insb
clc
mov
in
insb
jnp
bound
jns
ss
cwtl
and
adc
mov
push
shlb
jno
pop
and
mov
mov
fcoms
cltd
jae
cmp
js
jnp
jge
adc
or
mov
gs
ja
incl
fldl
push
mov
rolb
or
push
mov
dec
fistps
jle
lock
jecxz
dec
cld
cmp
mov
add
idivb
adc
stos
add
push
jbe
aas
fnstsw
jg
rorl
inc
mov
add
pop
cmpl
shlb
jae
ret
idiv
rcll
aas
push
xor
hlt
pusha
sbbl
aam
jl
push
test
sub
out
mov
jnp
pop
mov
pop
or
inc
add
xor
aaa
push
push
dec
sbbl
test
loope
add
inc
mov
lcall
push
mov
bound
push
aaa
mov
fwait
adc
out
adc
lods
inc
imull
fldcw
pop
loope
dec
icebp
movsl
add
jge
add
les
rcll
cwtl
adc
ljmp
pop
outsb
repz
jmp
add
popa
sub
dec
jbe
push
add
fbld
iret
mov
push
ljmp
bound
add
pushf
andl
in
add
add
test
jo
mov
inc
jno
pop
fld
in
popa
in
pop
flds
lcall
fs
popa
sub
rcrb
pop
jmp
fld1
faddl
and
insb
mov
mov
sub
add
adc
fstpl
pusha
flds
sbb
push
mov
pop
mov
fsubrl
xor
sbb
or
push
mov
or
jp
push
mov
loope
clc
jp
mov
jnp
repnz
das
jmp
add
add
cmovae
cmp
cmp
mov
call
test
mov
mov
fs
push
insb
adc
jle
jae
fstl
add
dec
xchg
mov
dec
mov
add
repz
cmp
push
pop
shll
cmc
pop
adc
mov
inc
aam
xchg
lcall
fcomip
mov
loope
jae
add
xchg
adc
std
mov
or
jecxz
or
fcos
jae
jmp
xor
ds
out
add
dec
call
fiadds
mov
xchg
mov
cmp
mov
mov
push
adc
clc
push
push
inc
bound
cmp
aad
add
push
lods
ds
mov
mov
xor
push
push
fmull
and
lea
jno
fadd
test
test
mov
aas
or
jmp
mov
int
in
in
add
std
icebp
mov
cmpsb
ret
push
xlat
jmp
add
stos
bound
xchg
inc
pop
scas
jb
add
fidivl
inc
sbb
lret
mov
mov
lret
mov
and
add
cmp
popf
loop
cld
icebp
in
jmp
mov
cmp
or
cwtl
add
fsubrp
out
push
insl
add
dec
cltd
add
adc
fsubrp
dec
mov
insb
sahf
fnstsw
popa
scas
push
sub
dec
jb
aam
loope
out
add
jmp
xor
mov
push
push
je
testb
jecxz
jmp
out
inc
cmp
jle
jb
push
xchg
add
fs
leave
adc
decl
and
adc
and
adc
adc
mov
call
lock
adc
inc
xor
divb
adcb
daa
add
jle
pushf
daa
dec
mov
xor
push
push
and
sbb
mov
pop
clc
popf
call
mov
addr16
jmp
push
xor
lds
clc
fnstenv
popf
mov
fbld
test
push
sub
inc
test
mov
out
inc
das
stc
mov
das
xchg
int3
das
stc
jmp
dec
das
test
mov
mov
mov
clc
test
mov
scas
arpl
test
or
addb
ret
scas
and
in
and
lock
pop
inc
sub
add
test
lods
dec
dec
out
fbld
mov
sub
dec
pop
ss
aam
ss
in
movsb
stos
sbb
inc
xchg
xor
test
jecxz
dec
ljmp
hlt
lds
fnstenv
sbbb
jge
fsubr
add
xchg
in
je
jg
fsubr
add
ljmp
loope
ljmp
fsts
andl
push
jge
pop
push
lock
ret
movsl
cmp
lds
stos
cli
adc
inc
ret
fisttpl
push
repnz
dec
bound
inc
arpl
cltd
xor
xchg
sahf
push
cltd
loop
add
push
mov
cmp
cli
xor
fcoms
lret
hlt
jbe
shll
cs
cltd
add
and
arpl
jp
mov
roll
cli
mov
push
inc
and
add
into
shrl
inc
push
inc
and
add
mul
add
sbb
mov
sub
ja
add
mov
inc
fcomi
decl
int
je
dec
int
dec
pop
cld
add
mov
push
dec
or
out
inc
popa
icebp
test
xor
sub
ljmp
push
call
jmp
and
in
jl
mov
and
dec
jmp
dec
sbb
loopne
xor
and
mov
lret
pop
test
dec
and
add
inc
sbb
xchg
xor
add
pusha
inc
bound
add
mov
add
xchg
mov
je
adc
inc
pop
or
push
addb
or
dec
jl
mov
out
ja
fisttps
jecxz
insb
outsl
pushl
jmp
into
jmp
mulb
jnp
cli
inc
mov
sti
push
out
sti
std
pop
add
and
pop
inc
scas
das
fisttpl
pop
bound
lret
fldenv
dec
outsl
xor
mov
stos
lea
fldl2t
add
sbb
in
aas
imulb
mov
cltd
rcll
test
xor
stc
ret
pop
push
sub
mov
push
into
mov
push
add
or
cltd
pop
roll
test
sub
fs
dec
clc
into
outsb
insb
cmp
push
push
shr
sbb
lods
shll
test
xor
dec
clc
jmp
xchg
push
mov
mov
inc
mov
cltd
jge
clc
mov
mov
dec
outsb
or
xchg
cld
into
js
insb
jecxz
push
push
mov
mov
add
mov
cmp
lea
add
aam
add
movsl
sti
cmp
neg
sub
pop
pop
rorb
mov
cmp
jge
mov
clc
sbbl
mov
inc
call
mov
mov
mov
in
or
decb
cmpsb
add
shll
fldt
mov
repz
inc
repz
ret
call
mov
xchg
cld
incl
and
test
das
push
in
or
add
das
push
mov
out
pextrw
mov
in
aam
ja
or
add
bound
add
ss
inc
jl
data16
daa
mov
sbb
andl
in
push
jecxz
xor
sub
jnp
out
mov
xchg
sub
aas
aas
pop
bound
jg
pop
repnz
in
mov
mov
out
clc
xchg
mov
scas
gs
bound
add
sahf
fidivl
stc
jmp
movsl
fpatan
jp
lahf
push
pop
dec
pop
inc
roll
test
lahf
dec
int
lret
cs
inc
fcmovb
xor
int
jl
shll
imul
sub
add
inc
mov
mov
dec
sti
inc
icebp
mov
xor
adc
sbb
add
push
mov
out
jmp
add
scas
jb
xor
push
std
cmc
mov
or
in
cmc
shlb
add
inc
add
sti
adc
sti
add
jno
dec
icebp
loop
sbb
imul
insl
int
push
les
pusha
lret
adc
rolb
fsubs
add
cli
add
xor
test
cltd
inc
clc
gs
int
push
adc
inc
add
lret
xor
ds
test
pop
inc
xor
test
mov
xor
add
or
add
dec
int
add
inc
je
clc
jne
add
cwtl
jg
jg
inc
cld
in
stc
jbe
dec
hlt
arpl
inc
std
fs
shll
pop
or
push
hlt
jmp
roll
pop
hlt
mov
push
xor
add
lods
shr
sub
repz
mov
inc
jge
and
pushl
rclb
push
inc
out
andl
push
dec
sub
fiaddl
inc
repz
or
add
add
jb
add
aaa
mov
cld
push
jo
test
sub
pop
sbb
xor
pop
sti
mov
add
test
adc
xchg
jl
dec
add
cmp
mov
ja
ja
pop
mov
sti
cli
jl
sti
add
mov
sti
cltd
jae
inc
dec
jb
std
int
jne
push
scas
test
test
dec
jns
scas
pop
pop
aad
mov
inc
sahf
fldenv
inc
pop
cld
rolb
fsubr
add
fwait
loope
test
jge
inc
pop
inc
test
sub
fadd
pop
je
push
pop
push
loopne
dec
dec
and
jb
sub
fwait
mov
mov
add
fsubr
mov
jae
sbb
add
inc
cmp
xchg
lods
jb
out
aaa
add
ret
iret
mov
mov
into
mov
add
inc
int
cmp
fcmovb
lods
pop
add
jns
out
dec
pop
icebp
jo
xlat
jge
mov
mov
dec
inc
jge
mov
or
adc
neg
add
pop
dec
in
pop
call
xchg
cmp
push
mov
and
ret
pop
flds
cmp
stos
mov
xchg
jl
pop
flds
jb
into
xor
fistl
jmp
into
pop
jmp
xlat
add
mov
ret
scas
adc
xor
inc
adc
add
or
jge
xchg
clc
mov
dec
jg
mov
inc
add
pop
add
cmp
in
push
mov
ljmp
inc
push
pavgb
aad
stc
test
jno
lea
es
and
lret
fld1
and
jb
dec
cld
rcrb
add
bound
test
test
lret
insl
clc
pushl
mov
jge
mov
in
push
cmp
xor
jne
loope
std
insb
gs
out
das
add
lret
add
mov
jle
sub
out
mov
and
fmull
push
dec
or
ds
bound
in
std
cmc
xor
mov
cwtl
add
mov
into
scas
pop
mov
sub
ds
aam
pusha
shlb
inc
fcoml
or
sbb
not
aad
jp
mov
inc
adc
sbb
in
js
cmc
fldcw
jmp
sub
pop
loopne
fucomi
add
test
pop
loopne
mov
aad
add
add
ds
push
in
inc
pop
push
es
or
mov
inc
jmp
sahf
mov
popa
flds
pusha
std
sti
sbb
xchg
outsb
clc
dec
fwait
idivb
cmp
or
cmp
out
jle
push
int
fildl
jmp
imul
shl
sbb
test
fisubs
loopne
adc
jg
call
sarl
ret
stos
mov
mov
lds
jb
mov
push
mov
inc
loope
push
insl
repz
push
ds
push
stos
loope
popf
add
fiaddl
mov
lods
add
fidivrl
pop
in
mov
pop
or
jle
push
test
hlt
mov
pop
out
incl
mov
add
or
idiv
mov
inc
xlat
push
adc
rcrl
fiaddl
mov
fisttpll
call
inc
mov
add
fists
cmp
add
in
sub
mov
inc
xor
andl
xor
iret
add
fnstcw
pop
sarl
bound
jns
or
js
in
lods
inc
jp
loope
dec
add
mov
sbb
psraw
or
xchg
add
bound
sbb
push
ds
test
and
xor
adc
lret
push
aam
out
repz
inc
mov
aaa
sub
sub
ja
divb
add
mov
fldenv
add
bound
add
mul
sub
sarb
sahf
cmc
loope
movsl
aad
lea
cmc
rcll
pop
push
xor
fldcw
cmpsl
pop
push
jle
and
fs
test
inc
jmp
rolb
pop
xor
sbb
inc
jge
add
mov
fldl2t
add
loope
jge
jnp
add
xchg
mov
sahf
cmc
cmc
mov
xor
mov
fwait
add
ljmp
dec
add
popa
jnp
jmp
xor
jl
mov
lahf
call
xchg
je
pop
xchg
bswap
stos
sbb
xchg
call
jmp
push
inc
xchg
out
hlt
or
sbb
cmp
popa
adc
jmp
clc
gs
or
push
mov
push
outsb
dec
inc
push
mov
pop
jmp
pop
xorl
adc
popa
mov
add
dec
leave
dec
push
shlb
add
push
shll
xor
shll
xchg
popa
add
mov
add
lret
out
xchg
mov
int
mov
leave
jle
push
inc
sti
or
pop
or
xchg
and
dec
out
adcl
jae
mov
js
xchg
pop
xchg
rcrl
mov
imul
cmp
daa
lea
into
jno
mov
cld
mov
xor
dec
popf
lret
pop
aas
jno
icebp
push
add
insl
dec
in
popf
lret
idivl
jno
jno
add
out
imul
sbb
loope
in
xchg
jg
xor
cwtl
cld
loopne
add
push
xchg
cmp
fldt
mov
mul
mov
out
nop
push
push
mov
sub
sub
std
seta
jl
out
cld
loopne
push
enter
jbe
jge
mov
xchg
stc
or
test
or
inc
add
cmp
mov
lea
xchg
jmp
mov
jmp
mov
xor
push
inc
jg
inc
or
out
sbb
mov
data16
sbb
lcall
xchg
arpl
pop
fbld
daa
push
ljmp
sbb
add
fsts
ss
pop
inc
add
push
pop
flds
cmpsb
dec
iret
fbstp
sub
pop
out
jne
pop
push
in
fdivs
stc
call
fnstsw
xor
std
jecxz
fldenv
sbb
mov
pop
wbinvd
jbe
jmp
jmp
insl
jmp
mov
add
dec
insb
stos
xor
ljmp
push
or
clc
pop
ljmp
mov
dec
fildl
xor
pop
inc
add
adc
fildl
jne
fs
dec
out
jne
add
jle
insb
adc
fists
mov
push
adc
lret
call
fcomps
lahf
pop
pop
add
push
jge
xor
mov
repnz
fcom
shrb
mov
jge
hlt
out
and
in
popl
jmp
in
mov
fdivr
dec
mov
cwtl
and
das
andl
cld
dec
inc
insb
loopne
jmp
xor
or
scas
sbb
test
fildll
pop
add
inc
sub
jmp
inc
lods
test
xchg
xor
and
xor
inc
add
lds
repz
stos
sub
xchg
xlat
adc
jmp
scas
mov
jg
push
mov
jmp
mov
xor
pop
into
pop
xor
sahf
out
bound
sahf
out
data16
out
mov
sarl
or
call
out
pop
and
shr
add
and
or
xor
sub
gs
sbb
xor
imul
fsts
sbb
or
ss
std
sbb
scas
sub
jno
mov
cmp
jbe
mov
push
mov
jbe
add
add
in
inc
adc
clc
or
cmpl
shlb
push
sub
and
xor
pop
pop
lds
pop
enter
clc
push
fnsave
push
pop
flds
pop
and
sbb
or
xor
lods
repz
jge
popa
flds
jb
clc
sbb
jl
popa
flds
push
int
sbb
faddp
sbb
shl
push
leave
imull
inc
cmpsl
jae
call
add
nop
xchg
adc
mov
xor
dec
xlat
add
jnp
jg
aaa
sbb
addr16
inc
add
iret
cmp
adc
adc
and
outsb
mov
inc
push
or
and
or
add
sbb
add
insb
or
rolb
inc
repnz
jbe
push
push
imul
adc
sbb
mov
outsl
pop
pop
cmp
add
stos
add
mov
sub
call
push
dec
mov
jmp
in
add
jecxz
cld
push
inc
mov
adc
push
lods
mov
sub
pop
dec
ljmp
mov
clc
ja
hlt
aas
lds
fs
scas
arpl
mov
xchg
cmpsl
adc
push
cmp
bound
sarl
add
in
sar
fsts
xor
adc
imul
lods
sbb
mov
sbb
inc
test
faddp
lods
movsl
add
bound
add
into
mov
jno
fcmovnb
cmp
nop
sub
sub
xchg
loope
movsl
movsl
out
cwtl
aad
xor
or
fldcw
cmc
lods
repz
push
fyl2xp1
ret
fisttpll
sbb
and
add
scas
lods
push
rcll
outsb
in
jo
adc
mov
flds
pop
call
aas
icebp
js
insl
out
stos
pushl
bound
jmp
pop
ss
nop
popa
pop
add
add
push
cltd
je
not
icebp
filds
loop
outsb
in
shr
sub
dec
lods
or
sub
lock
push
xor
shlb
fnstenv
cmp
daa
cld
imul
popa
fld
add
mov
and
inc
lret
sbb
mov
je
ret
push
mov
gs
xchg
jge
inc
add
je
or
add
jae
xchg
aas
fldl
lock
cld
jmp
orl
andl
clc
jae
cmp
push
push
out
loop
add
or
or
inc
xor
cld
je
stc
or
xor
decb
or
jg
bound
pop
stos
addb
mov
mov
adc
and
mov
inc
push
jae
inc
mov
mov
stc
lea
mov
lods
and
jne
or
lods
arpl
mov
stc
dec
stos
inc
pop
test
bound
in
jecxz
mov
push
lea
add
rcl
mov
mov
cmpsb
inc
movsl
clc
outsl
push
out
inc
or
int
inc
fsts
lods
out
or
inc
adc
sub
mov
adc
pop
jp
mov
ljmp
sub
add
call
xchg
mov
ret
xor
add
in
fimull
xchg
aaa
pop
pop
out
fadds
sbb
shlb
xor
aaa
ljmp
sub
insb
scas
cmc
pusha
daa
sub
decb
loope
xlat
outsb
and
mov
sub
mov
mov
je
imul
jno
sbb
pop
test
adc
and
push
pop
insb
ja
or
add
push
mulb
and
fcomp
adc
add
gs
popf
sub
outsb
imul
inc
cli
xchg
add
cli
leave
call
insl
sahf
movsl
add
lods
popa
sub
hlt
jge
cmp
in
xor
test
stc
and
iret
dec
inc
add
xor
ja
jge
add
dec
xlat
std
mov
inc
add
mov
xchg
push
mov
loopne
je
aad
push
adc
mov
push
xor
pop
je
jnp
stc
adc
cmc
loopne
je
aad
je
iret
xchg
mov
fnstenv
jg
inc
add
push
or
notl
clc
add
adc
pop
clc
pop
rcl
mov
outsl
into
xchg
cld
adc
bound
std
inc
mov
cmpsl
aam
or
cmp
mov
mov
pop
stc
int
mov
dec
into
or
arpl
clc
das
js
adc
and
jmp
jl
mov
lods
adc
xchg
pop
stos
jle
add
push
mov
bound
cmp
adc
jmp
scas
push
add
add
and
ja
jle
add
bound
push
jg
cmc
cmc
mov
add
inc
mov
add
int3
adc
sub
ds
in
bound
dec
pop
es
push
xchg
jmp
or
movsl
hlt
jge
scas
sub
inc
movl
cltd
add
cmp
push
cmc
and
adc
pushf
mov
pushf
fsubrl
subb
add
cmpsl
popf
push
xchg
add
xchg
jle
std
adc
sub
add
and
jno
std
psrad
or
xor
addr16
mov
pusha
flds
fs
std
pusha
call
popa
call
push
xor
cmpsl
mov
add
loope
std
in
sbb
hlt
pop
rcr
pop
rclb
lea
aad
cltd
add
sub
jecxz
sbb
mov
push
pop
loop
push
ljmp
add
popa
xor
add
or
and
lds
fcoms
addr16
jp
inc
add
fildl
add
push
lea
fstpt
arpl
inc
pop
cmp
inc
test
fs
aad
incl
and
dec
inc
divl
hlt
outsb
scas
add
pop
cmp
and
movsb
je
stos
adc
fwait
sbb
test
xor
push
and
sbb
and
aam
dec
jle
sbb
mov
mov
add
adc
je
inc
and
cli
adc
inc
test
jbe
addl
ja
xchg
add
movsl
mov
pop
popa
xor
int
add
jo
pop
stc
jmp
mov
push
test
fdivr
xchg
adc
jl
sbb
arpl
add
out
in
call
sti
add
push
je
into
lods
mov
int
cmovnp
arpl
sbb
ds
dec
fsubr
add
pop
push
movsb
and
ljmp
and
stos
xchg
mov
xor
rcrb
fs
xchg
add
call
lods
cli
sbbb
xchg
pop
push
sbb
xor
xchg
iret
jb
mov
stos
jmp
xor
mov
orb
jp
jo
add
ljmp
add
imul
push
pop
mov
inc
pop
push
push
pop
clc
ss
and
loopne
psubsw
frstor
clc
mov
push
popa
xchg
out
add
rcrl
add
pop
and
adc
add
iret
pop
sbb
pop
mov
sbb
call
imul
clc
add
pop
mov
jb
push
js
push
push
xor
push
push
addr16
adc
enter
xlat
add
push
jne
add
stc
mov
jnp
repz
mov
ret
pinsrw
pop
adc
and
arpl
mov
jb
ret
nop
jbe
push
inc
int3
inc
push
inc
in
cmovp
mov
mov
ret
inc
rcll
bound
xchg
incb
mov
jae
pusha
inc
in
mov
sti
mov
cmp
bound
sbb
add
or
dec
mov
xor
lock
ss
scas
push
mov
fcoms
add
bound
adc
jmp
cld
out
mov
enter
sub
out
mov
nop
jo
sbb
std
or
adc
mov
dec
cld
repnz
bound
adc
mov
fnstcw
stos
adc
imul
pop
mov
mov
pushf
xchg
mov
int3
or
inc
push
mov
std
push
add
mov
inc
push
aas
or
lods
jecxz
xchg
cli
inc
xlat
scas
fisubrl
push
fildll
push
mov
test
int
call
fldcw
int
data16
and
jg
mov
fldl2t
jl
xor
stos
and
fs
sbb
pop
cmp
popf
pop
and
testb
jg
pop
sar
push
movl
leave
jge
or
movsl
sbb
test
sub
lahf
pop
cmp
in
inc
loope
pop
je
and
hlt
insb
mov
in
mov
cld
adcb
popa
pop
sarl
inc
enter
jle
repz
or
cmp
add
stc
test
dec
add
mov
sub
push
cmp
call
add
mov
loopne
int
stc
lea
cmp
cld
int
inc
pushf
pop
pop
es
les
jne
insb
push
push
ror
mov
out
call
call
cmpb
imul
and
ss
or
add
inc
mov
push
and
ret
test
jl
aam
mov
mov
into
call
cmc
lods
push
jnp
jle
jp
ljmp
sub
in
loopne
fcmovnu
loopne
mov
mov
jne
inc
or
mov
add
enter
or
adc
fisubs
mov
mov
cmpb
add
cwtl
cmp
aas
jnp
inc
shlb
je
clc
jp
adc
test
incb
xlat
insb
fsubrs
lret
add
inc
je
fldcw
ds
cmc
out
add
xchg
in
shl
fldl2t
js
push
mov
add
push
es
push
ss
push
stos
nop
push
push
push
loopne
push
ss
push
xchg
sbb
and
faddl
gs
xor
ja
cmc
add
and
in
scas
movsl
cwtl
subb
sbb
dec
mov
cmp
push
pop
mov
push
out
insl
lret
fbld
pop
add
ljmp
add
add
xchg
imul
dec
or
imul
add
xchg
add
pop
and
in
lock
pop
movsl
sbb
ljmp
jg
push
shll
xor
and
sub
lret
test
sti
and
bound
out
mov
pusha
push
inc
or
add
sub
adc
cmp
mov
lds
mov
jg
cmpsl
add
push
cmc
call
test
leave
jl
mov
dec
inc
and
adcb
jl
inc
jnp
les
push
jne
fmull
and
pop
xchg
add
jg
xchg
call
stc
mov
stos
sbb
add
hlt
and
pop
or
pop
sbb
push
and
add
xlat
mov
dec
mov
mov
aaa
lock
xchg
imul
imul
jo
jle
aas
add
xor
pusha
push
repnz
jl
xor
xchg
and
dec
ds
sbb
das
fdivr
jge
loop
add
les
out
add
enter
lods
aas
and
rclb
jle
in
loop
add
sahf
aam
call
push
mul
andl
xchg
fld
xor
int3
xorl
jmp
jbe
dec
and
mov
and
insl
mov
sbb
pop
add
jmp
push
jle
push
sbb
out
shrl
cmc
shrl
xor
add
jae
ds
sbbb
or
lea
dec
push
sub
lcall
mov
mov
adc
add
fsts
adc
aaa
lea
dec
add
scas
ja
arpl
int
xor
sub
cmpl
ficoms
push
xchg
cmp
int
mov
jle
flds
rcrl
sub
mov
daa
insl
add
pop
shll
ficomps
mov
push
rcrl
dec
and
pushf
idivb
sbb
in
cltd
cld
sbb
pusha
fbld
pop
rcr
xchg
mov
dec
ds
mov
add
and
add
call
mov
pop
cmp
or
movl
mov
stc
jne
into
shr
mov
xlat
xchg
je
dec
add
notl
loopne
adc
add
push
lret
mov
mov
mov
jge
sub
mov
out
popl
dec
fsubr
daa
rcrl
stc
mov
inc
cld
adc
and
out
jns
pop
dec
clc
insl
pop
mov
in
jnp
out
dec
idiv
xor
push
test
lds
jl
jae
test
jae
imul
fincstp
in
inc
pop
testl
fmuls
add
mov
mov
fsubrs
sub
mul
push
in
cld
sub
js
ljmp
in
xchg
test
rclb
mov
dec
dec
lods
out
mov
out
fnstenv
bound
js
sub
arpl
loopne
mov
fistps
add
fldcw
hlt
loopne
xchg
or
movsb
adc
ljmp
std
xchg
xchg
mov
mov
scas
mov
xchg
jnp
xlat
fldenv
icebp
jge
push
jae
loopne
xor
sub
bound
add
xchg
std
push
xchg
mov
push
xchg
adc
flds
mov
popa
fld1
pop
sub
mov
arpl
lods
ret
mov
add
scas
test
inc
adc
out
negl
hlt
mov
bound
daa
pop
rcrb
je
into
inc
cmc
push
fisttpll
mov
lcall
fistl
push
mov
xor
mov
mov
cmpsb
jbe
icebp
fs
punpckldq
pop
add
pop
adc
loopne
dec
iret
mov
mov
inc
add
mov
add
adc
ret
sbb
scas
pop
in
ljmp
leave
mov
xor
ret
add
call
inc
adc
push
push
popa
rcrl
into
repz
mov
add
fisttpll
and
pop
fs
cs
call
add
dec
mov
out
mov
dec
mov
and
into
cld
cs
loop
add
push
xorb
or
jns
sbb
incl
cmp
add
out
call
add
or
sub
stc
jbe
add
stos
ljmp
dec
push
sarb
in
dec
add
test
arpl
sub
xor
sti
adc
sub
add
roll
test
fldcw
insb
mov
mov
out
ja
adc
bound
das
add
jb
cmp
mov
add
mov
lds
jb
jle
sbb
in
pusha
inc
pop
pusha
test
add
jmp
mov
jmp
in
fbld
mov
pop
lods
or
cwtl
loope
mov
fnsave
pop
pop
fiadds
stos
lea
or
adc
add
loope
jmp
dec
cmpsb
mov
mov
add
popa
pop
sar
jl
idiv
pop
cmc
mov
addr16
dec
pop
push
mov
test
fstl
cld
mov
pop
push
xchg
xchg
lods
ret
cmpsl
dec
jb
pop
ja
pop
xchg
sbb
xor
push
jmp
cmp
pop
cmp
push
inc
movsb
aad
jb
mov
cli
adc
loope
add
dec
or
xchg
test
mov
testb
add
adc
push
dec
negl
pop
add
rcl
add
pushf
cld
jne
mov
add
icebp
nop
loop
lock
stc
xor
add
repz
int3
push
pop
in
push
inc
mov
pop
add
iret
stc
push
fsubrl
or
mov
inc
jmp
dec
or
add
rolb
sbb
sbb
jne
test
pop
outsl
aad
mov
int
jmp
roll
fstps
inc
inc
mov
dec
and
add
pop
ja
clc
incb
dec
push
jno
lea
incb
push
out
mov
test
loop
imul
mov
das
ret
mov
pop
outsl
dec
shll
add
mov
psubusw
test
test
ret
or
and
add
sahf
imulb
and
mov
sub
idivb
packsswb
pop
sahf
jmp
sub
loope
loop
sbb
fimuls
jae
aas
neg
pushf
xor
sub
gs
subb
mov
notb
fiadds
xor
add
ret
out
sbb
push
adc
sti
push
stos
jmp
or
sub
add
popa
flds
and
sti
push
stos
stos
and
sbb
add
fildl
xchg
push
repnz
fwait
hlt
jmp
adc
clc
jle
adc
test
fnstenv
adc
jecxz
movsb
or
adc
push
fimull
push
pop
xor
clc
sub
aad
inc
pop
pop
outsb
out
stos
hlt
mov
pop
add
pusha
rorb
sbb
or
mov
fwait
loopne
test
jle
lea
dec
call
or
mov
pusha
inc
cld
add
aad
ret
push
clc
or
ud2
adc
cld
push
and
les
rorb
adc
push
scas
stos
call
xorl
jge
jo
hlt
cltd
dec
clc
decl
adc
inc
jg
call
clc
loope
testl
cmp
xor
call
jmp
jne
jb
xchg
fildl
cs
dec
mov
clc
mov
rorl
test
ja
cmpsl
aas
js
push
push
shll
add
cmp
add
rolb
inc
mov
lret
push
mov
cs
ja
loope
sub
fdivrs
jno
enter
movsl
scas
push
xor
add
test
jl
cmc
pusha
jns
add
jno
stos
ja
lods
daa
aaa
mov
cmc
adc
movsb
rorl
fldl2t
jle
push
cmpsb
sti
out
jno
ss
or
push
mov
push
add
loope
push
ss
in
fiadds
rolb
data16
pop
add
mov
es
xchg
xor
jnp
adc
loop
loope
adc
sbb
or
or
jmp
adc
dec
aad
lahf
lock
stc
mov
mov
jmp
xchg
or
scas
in
fisubrs
sub
call
or
out
cmpsl
in
add
push
hlt
shlb
lock
mov
ficomps
mov
in
flds
fistps
std
in
fldpi
add
in
fimull
add
call
dec
and
push
cli
jl
mov
inc
push
xor
jge
mov
adc
cmp
adcb
cli
add
adc
int
cmp
movsl
jae
sti
jns
add
or
outsb
rolb
je
pusha
mov
cltd
dec
adc
or
adcl
xlat
jge
xorl
and
outsb
mov
hlt
cmp
icebp
clc
in
dec
cld
xor
outsl
push
pop
inc
bound
in
dec
fdivrl
or
sbb
jne
loope
pop
dec
jmp
mov
push
sub
das
rorb
movsl
mov
clc
jne
add
jle
jns
dec
es
add
enter
jns
movsl
mov
dec
test
in
push
xchg
pop
insb
dec
add
fnstenv
fsubl
rclb
add
out
add
pop
mov
jge
add
inc
fucom
add
call
and
popf
jmp
dec
mov
sub
lret
and
push
pop
out
xchg
aad
les
add
fildl
xchg
in
out
lea
or
push
pop
lods
add
jmp
mov
add
add
sub
jge
mov
push
pop
pop
dec
dec
mov
mov
cmc
mov
pop
xor
movsb
in
mov
sahf
flds
add
popa
fldpi
jmp
and
or
dec
xchg
xor
add
ljmp
jb
ds
adc
mov
add
push
in
add
push
cmp
xor
pop
inc
add
les
adc
inc
mov
cmp
testb
flds
je
pop
mov
cltd
clc
sbb
or
iret
jge
xorl
ljmp
or
in
cmp
and
clc
incl
add
mov
inc
push
hlt
adc
xchg
add
xchg
add
movl
mov
or
jl
push
mov
push
call
bound
adc
xor
xorb
lock
jmp
mov
clc
or
mov
sbbb
call
leave
cli
pop
ljmp
fbstp
in
mov
out
mov
dec
fcoml
xchg
popf
repz
pop
jne
or
iret
ljmp
ja
test
add
jne
or
imul
clc
push
fldcw
dec
addb
out
mov
and
paddusb
jmp
adc
fs
or
jns
add
sbb
xor
ds
sbb
fs
pop
add
out
add
por
popf
and
dec
out
xchg
cltd
adc
jle
dec
xchg
sti
es
jb
pop
lods
jb
fiadds
fists
mov
fnstcw
push
dec
push
add
pop
pop
in
and
imul
jmp
movsb
cmpsb
ss
push
out
mov
popa
fld
sbbl
inc
mov
das
stc
repnz
sbb
rorl
in
repnz
mov
test
push
sbb
pop
fisttpll
sbb
cmc
push
lds
sbb
cmp
xchg
dec
pslld
fimuls
cmp
add
mov
loop
mov
cwtl
dec
mov
add
xor
push
dec
dec
jne
jae
mov
inc
lods
jge
imul
mov
add
dec
mov
xorl
fmull
jp
in
push
add
divb
xor
incl
dec
mov
test
call
cmp
add
jnp
cmc
addb
inc
fisttpl
leave
call
bound
add
das
push
mov
lods
push
test
jmp
dec
je
add
xor
loopne
jmp
dec
lret
leave
cmp
in
clc
sbb
xor
loopne
call
push
fiadds
or
clc
add
jae
add
mov
std
loopne
call
push
fistpll
call
mov
xchg
push
test
add
insl
ret
jae
jae
clc
daa
xor
cmpsb
aad
out
ret
add
andl
push
pop
push
and
jge
xor
jb
in
inc
fmull
adc
test
andb
arpl
dec
sbb
xor
push
jno
into
push
int
std
and
ljmp
add
das
jnp
leave
push
cmp
stos
jb
mov
pop
es
sbb
jp
leave
fs
fisubrs
test
lods
test
push
popa
jle
cli
lcall
scas
notl
test
popa
jl
cmpsb
enter
jp
push
out
idivb
inc
add
pusha
jl
jbe
cwtl
xor
push
jb
test
add
test
pusha
jl
inc
push
hlt
cltd
pop
cwtl
xor
imull
sub
pusha
jl
push
cmp
mov
fisubrs
jg
addr16
cld
add
adc
test
fiaddl
add
mov
aaa
mov
jmp
jg
je
jp
xor
jg
movd
je
jle
je
adcb
xor
adc
sarb
add
sub
add
sbb
jg
jp
xchg
jae
mov
add
movsl
jge
jecxz
jp
pusha
cmp
add
je
add
insb
and
hlt
mov
mov
adc
loope
lock
and
paddsw
mov
add
testb
loope
or
hlt
sarl
dec
mov
push
mov
inc
add
loope
int
cs
sub
mov
pop
pop
les
out
jge
push
jns
fiaddl
cs
stc
cli
js
add
icebp
inc
cld
jmp
insl
mov
mov
sbb
jns
hlt
push
aad
inc
flds
js
leave
mov
add
nopl
jge
xchg
jp
std
add
ficomps
pop
decl
xlat
xchg
inc
ljmp
push
sub
lea
movmskps
cmpsb
xchg
aad
les
mov
jb
ficoms
cmp
sbb
jne
sbb
push
popa
push
stos
pop
or
xchg
js
aam
jo
push
mov
int3
cli
fcoms
stc
mov
add
push
xlat
jge
sbb
mov
push
sbbb
mov
jb
leave
test
gs
out
cmpb
cmp
add
and
push
jp
adc
cmp
push
aas
stc
repnz
fcompl
fstl
jmp
push
xlat
jge
sti
mov
jo
ds
push
push
aas
mov
sub
clc
push
xlat
jmp
in
clc
jb
leave
push
jg
push
mov
or
add
filds
in
mov
push
mov
jg
add
inc
mov
testl
jge
insb
jno
cltd
mov
ds
clc
or
jge
pop
pop
dec
dec
jnp
xor
jg
andps
cmp
mov
les
jge
push
push
jecxz
inc
add
push
les
adc
stc
test
addl
add
dec
jnp
bound
and
flds
test
cmp
sub
dec
xor
mov
sahf
pop
adc
jge
fiaddl
mov
scas
jg
pop
or
dec
or
test
mov
lock
out
pushf
nop
in
mov
das
push
add
scas
or
pop
lods
jnp
push
fstps
enter
enter
test
fnstcw
and
inc
push
test
aam
push
push
fnstcw
xor
mov
clc
test
fsts
push
sbb
data16
pop
bound
out
jge
bound
jmp
cmp
insb
jbe
fldl2t
add
push
xor
push
jno
add
fldl2t
add
lahf
or
jmp
repz
and
ret
cmpsb
sbb
push
in
popa
and
add
and
add
adc
bound
loope
aas
cmp
test
pop
lea
fistpll
mov
aaa
std
call
call
test
imul
popa
insb
cld
arpl
mov
call
and
and
push
clc
mov
xchg
push
stos
jmp
popa
add
addl
adc
fstpl
mov
add
fistpl
dec
lods
dec
add
rolb
mov
and
test
push
jmp
decl
xor
les
push
and
jg
xlat
arpl
add
or
int3
es
in
mov
pop
in
or
mov
inc
or
aad
js
arpl
mov
cmc
xchg
bound
std
jmp
ds
jno
sar
add
dec
add
add
outsb
clc
add
inc
mov
aaa
ret
mov
test
cld
xor
out
mov
clc
loope
or
xchg
into
jmp
dec
sub
add
jnp
test
xchg
dec
mov
imul
ret
adc
clc
loope
add
and
test
mov
xor
clc
add
fldenv
add
test
jb
add
pop
cmpsb
pop
loope
out
push
ja
pop
call
dec
pusha
push
sbb
cmc
mov
loope
scas
or
icebp
fstl
pop
xor
ficomps
stos
hlt
push
mov
cmc
mov
int
dec
cld
fisttpl
sbb
jmp
out
and
mov
fwait
add
pop
hlt
arpl
pop
pop
cmpsb
add
sbb
add
and
mov
lret
jge
xchg
enter
lods
mov
flds
sbb
mov
mov
sub
imull
push
bound
lcall
loop
insl
in
in
clc
inc
xchg
inc
in
divl
mov
shl
dec
add
popa
push
dec
add
popa
insl
or
popf
fldt
call
pop
aas
mov
in
jmp
push
xlat
jge
lods
sbbl
mov
je
into
sbb
pop
sub
add
sub
add
bnd
adc
stc
incl
adc
push
icebp
test
jge
add
pop
les
push
je
cmp
stc
jmp
pop
stc
jne
rcrl
je
dec
incl
inc
sbb
lea
jge
jae
out
je
les
adc
stc
mov
loope
push
lock
popa
xorb
add
loope
sti
jl
add
test
jns
incb
bound
xlat
pop
and
cs
jmp
jae
test
sub
xor
adc
mov
test
das
mov
mov
bound
add
mov
add
add
xlat
pop
mov
dec
add
and
xlat
pop
mov
fs
xor
fcoms
cmpsb
test
imul
bound
hlt
fmull
ljmp
mov
andl
ja
adc
fs
add
lds
lea
mov
dec
push
lahf
push
xchg
or
icebp
push
aad
mov
popf
fldl2t
add
loope
xor
fmull
mov
lds
dec
or
outsl
loope
pop
push
arpl
add
jb
arpl
cmpsl
sbb
pop
pop
lret
push
add
popa
xor
sub
jge
popf
loopne
in
push
jno
insb
or
flds
jb
xor
jmp
jmp
fsts
aaa
mov
flds
add
push
sbb
pop
mov
popa
fsts
gs
jmp
cmpsb
loopne
movsb
pop
flds
jb
fs
jge
flds
bound
add
popa
mov
in
add
popa
lahf
push
push
xlat
insb
mov
clts
int
decl
jp
repnz
pop
inc
xchg
mov
pop
mov
cmp
cmp
add
jbe
jne
call
jl
sti
fiaddl
mov
xor
inc
mov
jg
jmp
jbe
lret
fidivrl
ret
pop
mov
sbb
sahf
add
push
jecxz
ljmp
pop
xchg
lret
rorb
and
push
pop
lock
push
imul
push
sub
add
ss
pop
add
jo
data16
add
pop
imul
arpl
fdivrs
add
fistpll
dec
jbe
lret
mov
jge
jb
jnp
js
cmpsb
pop
je
imul
push
adc
fbstp
adc
add
bound
add
jecxz
test
mov
push
sbb
xor
jo,pt
mov
and
lahf
stos
add
aas
test
jmp
jne
fsubr
add
cmp
vandnps
dec
add
icebp
add
in
push
push
jl
jmp
aam
xchg
movsl
xor
mov
mov
nop
fcmovb
stos
pusha
jge
fucomp
xor
pop
mov
fwait
pusha
test
lods
fucomp
sbb
cs
test
sbb
scas
mov
cli
mov
sbb
stos
sub
dec
jb
out
or
jmp
pop
pusha
aas
jae
xchg
pop
movsb
mov
imul
popa
jle
popa
flds
pop
push
mov
add
inc
pop
push
lahf
insb
cmp
mov
push
inc
repnz
xchg
add
aam
pop
push
loope
out
popa
flds
jmp
push
call
pop
mov
mov
jmp
add
add
rcll
add
lret
xlat
add
lret
xlat
pop
mov
pop
ret
int3
push
sbb
int3
inc
sbb
int3
into
push
addl
add
lea
adc
incl
mov
pop
xchg
hlt
adc
cmp
test
stc
jmp
pushf
cmp
cmp
stc
or
jle
pop
or
incl
xor
or
pop
xor
pop
stc
push
jecxz
out
je
in
xchg
push
les
rcrb
jg
bound
add
lea
stc
mov
cmp
dec
addl
arpl
add
jp
adc
bound
adc
rorb
cmpsl
rolb
lea
mov
ja
push
or
out
adc
xor
andl
std
jl
sub
xchg
sar
xlat
loopne
out
fs
adc
inc
sarb
jle
jbe
jl
cmc
jl
lock
ja
and
jp
mov
fcoms
fucompp
push
mov
jmp
pop
les
push
mov
jmp
cwtl
jle
in
rcrl
jmp
sub
jg
xor
ficoms
shrb
pop
aaa
jb
push
jg
call
rorb
cmpsb
pop
loope
dec
add
mov
mov
push
xlat
sbb
sahf
notb
xchg
insl
ljmp
call
add
adc
negl
pop
push
in
addr16
call
push
fdivrl
adc
xchg
pop
jle
xchg
loope
fs
loope
pop
sbb
mulb
mov
xor
loope
sub
data16
push
negb
div
xchg
imul
outsb
loop
fisubrs
imul
xchg
jmp
clc
mov
adc
jl
cmpsb
and
loop
xchg
es
in
sub
push
mov
mov
decl
mov
stc
ljmp
mov
sub
stc
clc
decl
add
jnp
cmc
addb
stc
pushl
idiv
jnp
mov
sbb
push
push
inc
call
add
jge
enter
or
fidivl
sub
xchg
and
sbb
push
push
lods
inc
push
cli
incl
in
stos
jg
out
add
les
push
mov
std
jnp
and
pop
mov
fs
pop
mov
ret
data16
jae
jae
clc
jmp
lahf
adcb
orl
xchg
jae
add
mov
std
loopne
mov
int3
xor
insl
jne
repz
mov
xabort
xor
andl
add
addb
rorb
je
stc
and
aaa
jl
fxam
xchg
insb
ljmp
push
sbb
sub
in
jg
in
outsl
int
dec
dec
and
in
jnp
test
sub
enter
pop
scas
pop
xor
ficomps
pop
and
fwait
in
push
pop
mov
push
push
mov
rorb
fmull
out
mov
ds
mov
in
int3
inc
jecxz
int3
cmp
pop
loope
add
xchg
pop
pushf
in
jb
mov
xchg
insb
js
xchg
pop
mov
pop
loop
sbbl
sbb
imul
push
mov
loope
je
test
ds
pop
xchg
scas
loope
fwait
adc
in
daa
sahf
loope
pop
xor
notl
cltd
scas
ljmp
and
ljmp
imul
sub
dec
sbb
divl
jae
sub
ljmp
stc
jmp
jo
ja
shlb
cmp
and
stc
jmp
arpl
push
dec
adc
cmp
pop
pop
push
mov
mov
into
mov
xchg
jo
adc
sub
push
pop
fldl
add
faddl
push
sar
call
inc
fs
mov
mov
jmp
pusha
push
adc
mov
xor
and
adc
xchg
cltd
add
ret
data16
jae
pop
add
lock
push
sub
clc
jmp
dec
psllq
das
daa
test
mov
lret
push
sub
mov
scas
lds
loope
rsqrtps
add
int3
jae
and
mov
into
mov
daa
lods
jbe
push
mov
lock
jns
lret
sahf
cld
sub
aad
mov
push
mov
push
lock
dec
loop
test
jge
test
mov
sub
bound
pop
cwtl
dec
pop
push
and
test
in
loope
add
paddusb
fisubrs
ficomps
jb
outsb
mov
add
fldcw
push
cmpsb
sub
cmp
out
cmpsb
adc
mov
cltd
adc
mov
mov
notl
cmpsb
decb
jmp
cwtl
add
push
fimuls
imul
adc
bound
insb
add
mov
cmp
or
jmp
xor
adc
sbb
popl
test
nop
call
push
aad
sub
loope
push
mov
lods
cmpsl
int3
add
popa
ja
sahf
stos
lret
and
ficomps
andl
dec
add
insb
pop
fdivrl
push
fs
clc
ret
mov
fs
adc
sbb
cmp
pop
mov
pusha
mov
mov
aam
add
pop
jae
dec
mov
adc
mov
add
dec
nop
fcoml
pop
mov
mov
adc
bound
inc
xchg
dec
cmp
mov
idiv
lret
pop
decl
out
roll
fildl
add
pop
jg
jnp
jne
jne
loopne
xlat
icebp
je
hlt
inc
or
flds
jae
scas
std
pop
icebp
add
add
std
dec
icebp
add
pop
das
std
push
lock
bound
jo
fwait
push
xchg
jnp
mov
add
bound
xor
jae
in
lock
xlat
fwait
jnp
test
lock
pop
jl
dec
fldt
mov
ret
mov
add
dec
sbb
push
xor
pop
and
xchg
pop
mov
fld1
add
bound
fldl2t
add
xchg
cmpl
push
fwait
inc
fists
add
fnstenv
mov
jmp
add
fnstenv
push
push
pop
adcb
popa
lods
add
cld
jmp
out
push
popa
dec
pop
push
xor
sbb
add
pusha
mov
rcr
add
stos
sub
push
fldcw
pop
bound
mov
dec
jns
mov
push
or
cmp
sbb
xchg
test
in
pushf
cld
xchg
xor
cmp
shr
loope
flds
jb
cmpsb
out
push
das
push
loope,pt
popf
dec
loope
flds
rorb
idivl
insl
insl
cmp
loop
or
jnp
push
jnp,pt
push
stos
std
fmul
popf
lods
adc
mov
adc
lods
or
lock
push
inc
icebp
jno
add
popa
jae
mov
sahf
jg
add
and
int3
out
popa
jmp
in
popa
jp
dec
fadds
add
jnp
and
mov
push
dec
fadds
add
fadds
add
jae
add
aad
add
pop
roll
fadds
add
into
idiv
or
pop
ret
int
add
and
fadd
or
add
sti
js
idivb
add
lret
pop
roll
xlat
add
push
adc
int3
ja
int3
int3
xchg
int3
int3
bound
hlt
jl
xchg
cmp
push
pushl
stos
sbb
push
cs
jb
enter
mov
sbb
sbb
push
mov
test
mov
es
xchg
fldenv
pop
push
out
mov
fistps
xchg
dec
inc
out
cmp
clc
fnstenv
mov
push
xrelease
jne
jae
ja
clc
sub
fnstcw
push
adc
test
fidivl
bound
dec
inc
pusha
or
cs
test
or
scas
mov
int
ret
fcoml
mov
aaa
xchg
sbb
dec
and
shll
inc
bound
jb
aam
push
cltd
jmp
push
inc
sbb
dec
and
pop
add
or
cmpsb
rcrb
in
push
pop
out
data16
sahf
push
ds
in
insb
sbb
iret
jge
pop
mov
pushf
insl
mov
lods
jno
push
cwtl
mov
fnstcw
xor
lret
inc
jmp
pop
push
shll
mov
xchg
les
sbb
les
cmp
jb
xor
out
imull
sarb
mov
sbb
div
mov
test
sub
jmp
pop
cmc
pushl
arpl
dec
xchg
clc
jne
data16
add
fs
mov
lcall
adcl
lret
jle
out
popf
jl
inc
gs
cld
lods
cmp
scas
popf
lret
int3
jg
lret
int3
vpcomb
test
int3
out
jmp
rorb
xor
pop
mov
add
out
jge
adc
add
aas
je
and
add
or
add
rcr
and
jae
adc
xor
push
stc
outsl
adc
inc
mov
das
iret
mov
es
add
xchg
jl
es
pop
mov
add
lret
add
outsl
mov
inc
xbegin
fld
mov
outsl
cmp
inc
bound
mov
xchg
loope
or
jle
pop
and
mov
jmp
mov
mov
pop
in
ret
lret
jne,pn
lret
fisubrl
iret
sbb
sbb
mov
fstps
inc
add
sub
subb
cld
sbb
pop
jmp
es
jbe
xchg
inc
bound
stos
add
fldl2t
pusha
movsb
fucomp
iret
sub
sub
iret
sbb
nop
push
fists
lock
adc
cmp
lret
dec
or
jp
pop
call
lahf
in
mov
add
push
add
sbb
bound
mov
outsb
pop
loope,pt
das
or
jge
pop
ds
pop
sbb
enter
push
loop
xor
xor
in
xor
dec
fsubr
xchg
jbe
testl
mov
mov
subl
cs
sub
push
mov
out
sub
les
jmp
or
jmp
or
ljmp
or
cli
or
or
xlat
jo
test
mov
pop
movsl
lret
int3
mull
sbb
sub
xor
mov
jge
fwait
pop
ret
add
lea
adc
jl
fwait
popa
dec
or
sub
out
sub
add
jp
add
jbe
mov
or
enter
shrb
mov
out
pop
clc
mov
lret
int3
bound
xor
out
or
add
andl
ja
add
stc
add
xchg
daa
sub
bound
test
mov
clc
sbb
sbb
fidivl
sbb
cmp
je
inc
mov
add
jnp
lea
mov
add
orl
test
push
test
push
stc
xor
pop
jmp
test
dec
xchg
inc
mov
into
loope
movsl
or
sub
mov
gs
xchg
in
dec
inc
sub
cmp
mov
jle
loope
xchg
cmc
bound
pop
test
loopne
pop
daa
in
add
loope
push
pop
pop
in
out
push
adc
cwtl
xchg
rcr
or
cltd
scas
ret
jmp
dec
pop
mov
jmp
mov
gs
and
inc
pop
sub
xchg
shlb
pop
mov
and
ds
xlat
dec
cmp
inc
loope
xchg
add
mov
daa
xor
xchg
and
lea
shlb
call
xor
push
aam
out
out
pop
xor
movaps
icebp
mov
or
pop
popa
dec
or
xor
sbb
lcall
bound
add
dec
lods
pop
cltd
mov
call
and
add
sbb
push
fildl
xchg
shlb
add
loope
mov
inc
cmovo
aad
mov
loop
nop
imul
add
mov
lret
fmull
mov
inc
cmovo
faddl
pcmpeqb
mov
jne
ret
lds
add
sub
inc
mov
pop
mov
add
arpl
add
imul
bound
test
jo
pop
ds
test
inc
lock
mov
dec
inc
sub
dec
or
or
scas
and
fcmovnb
insl
lahf
dec
cmp
xchg
xor
movsb
push
xchg
ret
xor
cltd
dec
jo
ljmp
jge
vaddps
cmp
mov
lods
inc
cmpsb
std
push
add
fcmovnb
xor
flds
or
mov
ds
inc
cmpsb
std
sub
sub
data16
stos
push
or
dec
shlb
cmp
pop
cmp
sub
inc
jmp
mov
add
xor
mov
fldenv
xor
push
mov
bound
shr
xor
cs
rorb
pop
xchg
adc
push
xor
xchg
fidivs
inc
pop
fdivrs
mov
and
adc
arpl
sbb
pop
fists
add
mov
fiaddl
fildll
add
and
and
aas
mov
inc
mov
mov
dec
push
or
add
pusha
lods
jmp
mov
call
insl
ljmp
std
arpl
dec
mov
aaa
inc
jmp
popa
fnstenv
ljmp
insb
fwait
iret
testl
mov
push
outsl
cmc
bound
and
cmp
adc
add
popa
dec
jmp
decl
mov
mov
pop
ret
or
pop
mov
xchg
adc
cmp
jle
push
lcall
lock
or
add
jo
sub
lods
xlat
jge
adcb
call
js
incl
insb
cwtl
adc
lret
es
mov
and
push
lea
or
push
add
jle
clc
mov
fadds
jae
mov
cld
bound
ss
sub
jno
inc
scas
out
or
clc
fnstcw
mov
ret
lahf
pop
mov
aaa
aaa
cld
flds
add
dec
clc
xor
push
sti
and
dec
pop
je
repz
lods
ljmp
mov
mov
sti
clc
cld
jmp
aas
leave
ltr
repz
call
jmp
ret
fpatan
push
test
jbe
dec
fsts
aad
shr
add
cmp
add
inc
mov
push
xor
pusha
lahf
jmp
cwtl
inc
push
aaa
cltd
ret
add
ljmp
push
sbb
fwait
ja
divb
push
mov
push
stos
push
out
sub
add
adc
mov
test
add
jmp
pop
push
pop
jae
ss
mov
arpl
in
cltd
addb
aas
jmp
sbb
rorl
push
fimull
push
mov
mov
insb
mov
test
xor
pop
mov
push
ffree
sbb
ds
int3
sub
pop
push
cs
inc
add
adc
int3
lret
xor
inc
fldcw
sub
adc
jmp
adc
stc
js
push
sarl
idivl
dec
flds
gs
add
popa
fsts
std
les
out
cwtl
lret
int3
lcall
in
push
jne
jae
aam
idiv
jnp
jge
add
insl
cmp
add
pop
sti
ljmp
inc
je
shl
decl
incl
mov
idiv
dec
pusha
mov
adc
cmp
add
inc
dec
pop
nop
and
lods
rol
sbbb
pmullw
or
clc
fwait
adc
push
inc
dec
inc
pop
ja
push
mov
gs
add
gs
add
bound
inc
insb
sub
add
dec
sbb
pop
inc
add
xor
call
sbb
adcb
adc
aam
jecxz
or
insl
mov
push
push
dec
ljmp
fstpt
jge
push
cld
or
pushf
add
bound
dec
mov
cmp
xchg
add
push
addr16
jmp
dec
test
cmp
add
addr16
add
sub
cmp
ss
jg
jae
jmp
jne
clc
and
jmp
add
gs
cmc
fsubr
add
mov
and
push
xor
mov
or
imul
jne
stc
mov
bound
jmp
add
addr16
push
fldl2t
repnz
sub
add
jns
add
daa
and
insl
test
mov
pop
dec
jmp
pop
jmp
sub
add
xor
mov
jle
push
adc
pop
adc
mov
cmp
arpl
stos
sbbb
bound
or
scas
in
in
bound
sbb
pop
das
or
xor
dec
lods
xchg
mov
bound
add
mov
add
lahf
xor
dec
lea
cmp
jmp
pusha
pop
xor
cmpsb
pop
lahf
cmp
xor
jb
dec
jmp
inc
push
insb
inc
pop
cmp
sbb
add
push
outsl
mov
lcall
cmp
xor
push
mov
out
add
add
pop
add
in
adc
jnp
mov
lods
ficoml
lock
pushf
push
jnp
mov
lret
nop
mov
mov
mov
inc
out
add
pop
leave
std
adc
jl
out
mov
cmp
xchg
faddl
fistpll
cmp
push
mov
js
inc
aaa
out
cmpsb
ret
add
push
idivl
jmp
xchg
cli
movsl
inc
inc
pop
push
jb
pop
mov
or
mov
mov
add
xchg
testl
bound
inc
xorl
cld
test
lock
xchg
xchg
rorl
fwait
adc
js
loope
adc
adc
ficompl
mov
dec
imul
xchg
push
sub
mov
jmp
jle
and
jb
jp
mov
push
lock
push
adc
fldl2t
jle
xor
stc
jl
and
dec
jg
pop
rcll
aam
and
ret
ss
mov
xchg
adc
mov
sub
daa
mov
mov
xchg
outsb
and
jmp
bound
xor
ret
dec
std
mov
fldenv
cli
enter
out
out
fnstenv
in
add
jmp
fnstcw
enter
popa
fnstenv
test
outsl
pop
xor
xor
loopne
dec
add
lahf
dec
rolb
sbb
or
mov
pop
dec
inc
iret
jp
mov
dec
test
mov
dec
bound
lock
mov
jge
mov
idiv
sti
aad
dec
cmpl
fs
test
pop
idiv
lret
or
mov
jge
iret
movsb
movl
fwait
and
add
add
cltd
decl
xchg
sbb
sbb
icebp
add
adc
daa
sub
in
add
ds
js
insl
hlt
push
mov
mov
pusha
bound
add
pusha
punpckldq
pop
test
aam
fstps
adc
outsb
jnp
movsl
jne
push
jo
fldenv
adc
bound
jne
add
mov
bound
add
movsl
mov
call
adc
bound
cmp
cld
mov
xchg
fidivl
xchg
xchg
data16
jg
pop
test
call
and
or
pop
leave
cmp
mov
ret
out
jno
stc
mov
add
jmp
add
mov
jmp
in
jecxz
out
add
daa
sub
gs
cmpsb
repz
add
lret
push
daa
sub
or
call
sbb
mul
out
xor
and
push
lods
mov
add
insl
sub
jmp
mov
cmpsl
dec
out
sahf
jl
adc
outsb
popa
sbb
lret
add
xchg
dec
mov
xchg
mov
adc
mov
push
push
inc
outsb
cmp
gs
roll
bound
das
pop
flds
jmp
pusha
flds
jmp
add
mov
sub
xor
push
inc
icebp
pusha
xchg
jmp
mov
push
cwtl
jl
cmp
pop
sub
mov
jp
ss
into
mov
sbb
rorl
insb
pop
movsl
push
jo
pop
add
fwait
je
xor
or
cld
fs
mov
inc
xor
xchg
fwait
int3
add
rolb
fisubl
push
orb
fnstcw
jmp
add
jae
incb
jne
adc
sti
les
xchg
das
aad
add
xchg
xchg
mov
dec
push
adc
lret
mov
adc
mov
adc
rcr
mov
jns
mov
mov
stos
inc
push
bound
mov
mov
test
or
movsb
data16
push
dec
in
popf
test
insb
xor
ret
mov
popf
clc
arpl
movsb
inc
jnp
jp
test
jns
mov
inc
add
add
test
js
add
pop
adc
lock
cmp
loopne
jmp
mov
mov
mov
adc
call
push
add
gs
out
mov
add
fldenv
rcr
jmp
js
sub
jmp
popa
sub
fldcw
push
aad
jne
loop
add
mov
sub
xchg
jmp
xchg
adc
inc
xchg
lcall
shrl
xor
cli
push
pop
push
pop
inc
cli
jno
mov
adc
int3
push
les
and
mov
js
add
adc
mov
add
int
add
cmpsl
or
leave
jge
jmp
add
add
or
push
push
jmp
mull
add
push
jb
es
sub
pop
sbb
xor
les
mov
fwait
jmp
inc
inc
or
mov
mov
add
xor
popa
fldcw
in
or
push
push
shr
add
jge
fsub
jl
jp
add
xor
jne
mov
jbe
jnp
add
cmp
nop
add
jge
arpl
rorb
lds
lea
ja
ret
adc
jo
jnp
test
idivl
inc
loope
andnps
testb
in
ja
or
add
in
pop
push
add
pushf
mov
pop
lret
lret
add
inc
cmp
loop
sysexit
std
idivl
rorb
lock
pop
stos
adc
cltd
stc
or
out
inc
cmp
or
xor
sub
out
insl
push
fdivrl
add
andb
arpl
add
jns
sbb
jmp
and
cmp
add
jl
add
xchg
ret
add
nop
sub
xchg
mov
popa
sub
test
stc
fnstsw
jp
insb
ret
data16
add
insl
xor
es
sub
fldl2t
mov
pop
popa
pop
pop
pusha
stc
and
jmp
add
addr16
fldl2t
mov
mov
xchg
in
into
jmp
lret
fldl2t
adc
lcall
fbld
jbe
mov
fs
jmp
fbld
jmp
add
fisttpll
aad
mov
int
out
xchg
ds
cmp
flds
jmp
xchg
mov
ret
lret
push
push
jmp
add
and
aaa
inc
jle
pop
pop
inc
pop
lds
leave
rcrl
add
jmp
xor
lahf
lea
add
out
and
mov
popa
pop
ds
lock
hlt
icebp
in
push
push
leave
add
ljmp
test
and
movsl
fildll
add
fidivl
inc
and
test
add
add
rcr
and
push
mov
test
jnp
jge
bound
cmpl
in
add
jl
js
cs
pop
testl
sarb
mov
mov
adc
dec
fisubrl
and
test
add
pusha
fsubs
push
ret
fucomi
call
mov
cmp
mov
inc
call
fldcw
add
inc
outsl
xchg
clc
adc
adc
xchg
adc
scas
hlt
mov
sub
mov
test
cmpb
add
mov
daa
test
add
and
ret
mov
decb
xchg
data16
mov
mov
add
sub
adc
mov
pop
ret
dec
iret
mov
roll
sbb
jne
fldl2t
add
es
sbb
jmp
jg
fldl2t
mov
inc
shll
popf
mov
sbb
xchg
icebp
ljmp
fadd
rcrl
jmp
mov
repz
sahf
stos
daa
les
pushf
out
push
push
xchg
cltd
mov
fistps
or
cwtl
lea
add
flds
push
xlat
insl
scas
fisubl
push
insb
pop
sub
jb
icebp
add
fisttpll
gs
pop
rcrl
jbe
jmp
bound
inc
mov
fcoml
jmp
mull
push
rol
leave
push
out
bnd
test
or
popa
fldcw
and
daa
sub
bound
mov
sub
or
popa
cld
rcrl
or
mov
fcoml
jmp
pushl
jne
sbb
or
fldl
add
out
pop
ret
xchg
jmp
add
or
test
cld
dec
jl
inc
dec
jb
inc
enter
inc
clc
call
xchg
pop
pop
dec
fwait
add
out
lcall
iret
lcall
push
out
jge
pop
clc
push
or
dec
arpl
dec
or
and
xchg
add
mov
xor
or
add
rclb
add
pop
idiv
insb
cmp
xchg
test
in
push
pop
loope
add
fists
sbb
cmc
lock
cmp
add
cwtl
pop
mov
cwtl
sub
dec
cmp
cld
fucomi
in
arpl
add
loope
out
out
jmp
jmp
ficoml
mov
stc
arpl
add
mov
data16
cmp
mov
cmp
cmpsl
or
icebp
clc
adc
testb
in
out
xchg
out
ficoms
mov
loope
cmp
pop
clc
ficomps
testb
push
jo
fnstenv
push
in
lods
push
into
mov
lds
push
fisttpll
fisubrl
lock
out
mov
loope
ljmp
call
daa
lock
loop
popa
loope
add
fs
and
stc
add
mov
push
jmp
cmpsl
cmp
faddl
push
pop
add
popa
scas
je
fisubs
rclb
addr16
call
pop
popa
cld
mull
or
daa
pop
fwait
cld
loopne
mov
sbb
aaa
pop
flds
rolb
scas
imul
fcomps
sbb
ret
cwtl
popf
orb
das
loop
arpl
sahf
das
loop
arpl
flds
daa
das
loop
arpl
inc
add
fcoms
inc
inc
arpl
or
in
mov
mov
mov
jmp
or
mov
mov
arpl
add
loop
pop
iret
arpl
les
push
inc
in
or
pop
fisttpll
adc
cld
adc
sub
test
adc
jp
or
std
sub
dec
adc
push
je
adc
jnp
fstl
enter
dec
jl
mov
imull
or
mov
mov
cld
pop
add
ds
jne
test
cmp
adc
out
pushf
mov
dec
dec
and
test
lods
mov
sub
packsswb
lock
mov
sub
adc
lds
pop
nop
add
cmp
adc
in
clc
jl
pushf
add
aaa
or
cmp
xor
shll
and
rolb
fldenv
add
ljmp
fldenv
jb
push
or
mov
loope
lods
jmp
orb
lock
jl
ficomps
push
arpl
dec
ret
in
test
out
ret
loop
inc
sub
add
fsubrs
push
jno
rep
loope
mov
call
aad
rolb
mov
mov
add
sahf
add
test
insb
sti
pop
push
sbb
jno
push
out
loopne
sahf
adc
jmp
stc
cmc
xor
popa
push
aas
xor
mov
popa
fldenv
jl
popa
flds
out
in
or
daa
lds
or
xchg
bound
sbb
cmp
bound
sub
inc
ret
rclb
push
jb
loope
test
and
cmp
mov
popa
adc
mov
enter
cmp
out
adc
add
or
mov
or
inc
pop
idiv
or
testl
out
adc
movsb
adc
gs
jo
adc
loope
divl
sub
adc
xchg
jno
jo
inc
mov
pop
xor
dec
and
lret
jg
stos
sub
inc
and
cmp
jb
les
and
jnp
add
cli
or
rolb
hlt
mov
add
bound
inc
sbb
test
jmp
decl
jbe
outsb
aaa
dec
adc
jb
jb
jae
inc
sbb
cwtl
xlat
pushl
test
push
xchg
cld
and
call
jmp
shl
and
xchg
clc
fnstcw
test
loopne
dec
andb
sbb
out
or
mov
faddl
arpl
out
xcrypt-ecb
cmpsl
mov
in
mov
out
test
cld
jmp
clc
add
xchg
out
neg
sbb
fcompl
or
mov
pushf
mov
loop
test
xor
pop
push
lahf
jecxz
and
sub
fldl2t
test
jl
add
lahf
out
xchg
movb
pop
push
add
fnstenv
push
mov
jle
fldenv
jbe
lahf
call
jb
outsb
pop
pusha
loopne
sub
int3
ljmp
in
jl
jmp
pop
cld
add
mov
or
mov
mov
adc
jp
rcl
sub
insb
leave
out
adc
jb
lds
int
out
mov
pop
inc
icebp
leave
les
push
stos
int
xor
in
sahf
cmpsl
imul
popa
pop
ds
das
and
scas
adc
pop
inc
loope
push
ljmp
jmp
pusha
add
jmp
mov
jmp
test
bound
divl
and
adc
sahf
cmc
cmp
jb
repz
jmp
and
push
in
idivb
sub
out
xor
inc
and
or
fimuls
rcrb
or
add
fisttpl
adc
fucomi
pop
imul
mov
mov
int
add
pop
jns
or
sbb
ret
inc
clc
js
adc
outsb
hlt
roll
clc
inc
repz
xor
hlt
jge
xchg
pop
add
or
rol
loope
decl
cld
jno
adc
dec
or
fdivr
inc
loope
hlt
and
xorl
jmp
movsb
xor
scas
lock
mov
idivl
sbb
inc
add
pop
test
roll
sub
jmp
or
add
ljmp
imul
bound
hlt
in
test
aam
mov
data16
push
insb
pop
push
sbb
testb
movsl
jmp
add
gs
xchg
movsl
jmp
add
bound
imul
lods
xchg
inc
pop
addb
iret
or
and
push
neg
push
pop
add
fstps
push
fnsave
ret
nop
movsb
sbb
pop
sub
adcb
fisubrs
movsb
jmp
pop
in
movsb
jmp
xchg
add
popa
outsb
add
popa
fnstcw
stos
push
sub
popa
push
stos
or
cmp
movsl
fsubr
es
std
xor
cmp
adc
add
fiadds
jmp
loop
add
das
mov
fs
pusha
movsl
sbb
jb
adc
dec
loopne
adc
add
loop
or
sub
shlb
mov
mull
mov
adc
sti
lret
cld
pushf
inc
sub
dec
clc
decl
cwtl
pop
mov
adc
dec
xlat
jne
mov
clc
call
pop
sbb
mov
jp
ret
jne
mov
add
sbb
or
flds
add
or
aaa
and
or
test
mov
mov
mov
and
or
mov
mov
mov
and
bound
icebp
pop
arpl
or
jbe
push
icebp
pop
arpl
or
cmc
test
jbe
push
call
or
ret
testb
call
or
jecxz
test
jbe
push
call
in
dec
stos
push
dec
nop
daa
ret
push
mov
pop
jmp
xor
hlt
mov
loope
or
dec
cmp
stos
xchg
out
lods
andl
fnstenv
cwtl
xchg
icebp
add
cli
add
push
mov
mov
rorb
or
xchg
icebp
add
sbb
sub
mov
jae
add
xchg
icebp
add
pop
arpl
inc
out
shll
call
ret
faddl
push
je
fldcw
xchg
jle
fucomi
add
mov
or
roll
xchg
add
ds
cltd
mov
mov
and
movsb
in
fiaddl
jmp
add
in
je
pop
inc
in
repnz
mul
movsl
pop
pop
lods
cltd
cmp
jmp
inc
lds
mov
sarl
pusha
flds
push
leave
or
hlt
and
jmp
fisubs
add
popa
push
cmp
sarl
pusha
flds
push
mov
add
popa
push
cld
add
iret
add
add
pusha
adc
or
jl
js
or
lret
mov
mov
push
xlat
and
inc
repnz
clc
jnp
dec
mov
mov
inc
out
lea
jle
adc
jnp
out
sbb
repnz
fisttps
add
ljmp
add
push
and
sub
mov
dec
and
sub
sub
outsl
fildl
inc
jle
jmp
inc
test
sub
js
xor
ret
jp
aaa
inc
loope
divb
xchg
nop
sbb
mov
add
je
jle
add
out
fmull
out
aam
test
mov
ficomps
sarl
add
bound
es
cmc
cmpl
pop
inc
loope
fistpll
bound
or
js
or
popf
fisubrl
jp
int
insl
rol
add
add
fstl
in
in
popf
pusha
jne
fsubr
add
inc
jno
fstps
cmp
rcrb
jb
add
fwait
or
push
out
cmpsl
popf
jmp
add
sbb
fwait
jnp
scas
test
add
jp
sahf
and
dec
fnstenv
dec
imul
daa
adc
jmp
jbe
push
fisttpll
mov
les
stos
mov
pushf
sbb
xor
sub
adc
sub
mov
jno
add
sbb
sarl
aaa
jb
orl
push
push
mov
popa
outsl
push
int
pop
push
jo
sub
imul
dec
sbb
adc
cmpsb
loope
sbb
popa
pushf
imul
popa
lcall
out
testl
stc
fwait
divl
insl
hlt
mov
dec
fs
int3
jg
lret
int3
add
and
mov
lahf
and
pusha
pop
jae
nop
pop
adc
push
sub
mov
inc
pop
decl
ret
mov
pop
jns
test
ficomps
jae
inc
stc
cmp
stos
inc
push
add
add
rcrb
jmp
dec
fld
mov
xor
add
or
add
dec
add
pop
das
orl
lods
loope
or
test
cmp
mov
inc
jbe
cmp
and
enter
inc
or
jne
jge
mov
add
bound
pop
pop
cmp
and
push
pop
das
out
add
or
loopne
push
inc
lret
sahf
insb
inc
lret
xchg
fldl
dec
add
ss
test
jg
dec
fabs
clc
cmc
add
pop
ficomps
and
cli
loope
fnstsw
cmc
hlt
push
cwtl
popa
cmpb
ret
enter
icebp
mov
sub
cwtl
sbbb
bnd
int
loope
pushf
push
sub
mov
push
fldenv
imul
jno
add
cltd
bound
jge
pop
fists
adc
stos
xchg
gs
pop
and
jmp
inc
cs
add
jecxz
testl
mov
scas
es
mov
jmp
jbe
inc
jmp
popa
flds
sub
test
out
adc
xchg
add
nop
insl
add
and
call
jle
dec
ror
inc
mov
jb
ds
pop
insl
loop
push
add
popa
fsts
inc
xor
sbb
iret
add
dec
add
jnp
add
cltd
arpl
add
sbb
sub
movsl
or
adc
add
add
mov
jg
push
jp
inc
dec
fldl
add
int
pop
cmp
ret
jo
daa
mov
fidivrs
inc
rorb
fstl
sbb
leave
push
sbb
xor
fstpt
pop
ret
or
adc
popf
or
cld
lods
inc
call
sti
into
daa
loope
adc
adc
xor
add
imul
enter
mov
add
addb
lods
movsb
cmp
mov
add
jmp
xor
rcl
aas
push
inc
lret
cs
mov
jmp
nop
into
andb
jg
push
addb
jp
mov
pop
add
or
addb
or
jae
add
add
mov
add
repnz
arpl
jmp
adc
and
mov
sub
sub
sbb
mov
jae
cltd
pusha
sbb
fsubrl
xchg
mov
fldl2t
add
jno
imul
fstps
loope
aaa
ret
cmpsb
or
cwtl
int3
or
fsubrp
add
push
mov
sti
call
push
add
pop
pop
repnz
fidivs
out
sbb
pop
pop
or
sub
icebp
arpl
xlat
fistps
push
cld
imul
xchg
notl
add
incl
rcr
call
sbb
bound
jl
push
jmp
sbb
xor
mulb
mov
vpshuflw
xor
flds
jmp
push
flds
jb
daa
cmc
mov
jmp
pop
lcall
insb
sbb
call
popa
flds
push
and
loope
popf
roll
xchg
rolb
sub
idivl
popa
les
xchg
mov
push
mov
cmp
jns
aaa
add
popa
inc
and
add
mov
bswap
push
add
add
loopne
shlb
dec
pop
push
idiv
dec
fcomps
fdivr
pop
add
jg
daa
add
xor
fdivrs
add
clc
cmp
add
push
and
mov
out
jg
jmp
sbb
mov
call
dec
jno
test
mov
pop
iret
pop
popf
aas
sbb
int
add
jb
add
xchg
out
sbb
call
punpckldq
leave
sti
fnstenv
fbld
incl
jmp
je
sub
inc
test
add
insl
std
enter
jb
bound
ljmp
mov
mov
add
les
out
lock
pop
lcall
fcmovu
icebp
jb
jmp
xchg
sbb
xor
inc
add
sub
mov
test
push
daa
lcall
sub
mov
icebp
sbb
mov
add
push
or
call
sub
add
dec
add
sbb
icebp
mov
xchg
leave
cmc
or
and
cwtl
aad
in
fidivs
jmp
int
fidivl
dec
mov
es
sbb
add
jg
roll
cld
jae
jge
lods
dec
pop
dec
pop
fldcw
call
cwtl
dec
push
or
icebp
fstps
sbb
arpl
imul
push
cmc
jmp
popa
flds
jg
nop
inc
lods
xlat
lahf
rorl
call
or
mov
xchg
add
lret
push
popa
pop
dec
icebp
out
and
jb
dec
call
push
and
add
or
add
pop
in
cmp
ljmp
push
push
in
push
test
mov
hlt
inc
push
arpl
push
clc
xor
repnz
mov
or
mov
je
mov
clc
push
lss
add
mov
sti
mov
and
add
mov
pop
inc
and
xor
push
jmp
idiv
or
mov
bound
std
insb
pop
xchg
jno
out
scas
add
fldenv
and
call
and
and
inc
add
add
add
addb
fiadds
std
jmp
mov
fldlg2
js
daa
dec
cmp
insb
bound
add
cmpsb
mov
stc
leave
shl
dec
lock
out
test
sti
rclb
jmp
lods
pop
push
xchg
and
aam
roll
arpl
mov
movsl
ljmp
leave
jmp
push
mov
xchg
push
pop
xchg
add
repz
mov
pushf
jnp
push
rcl
adc
fldl2t
mov
xchg
jo
jne
and
cmp
movb
shlb
fsubl
sub
ljmp
xchg
les
jmp
add
mov
ficomps
sub
adc
jmp
add
xor
ficoml
add
mov
adc
mov
mov
push
dec
int
and
insb
or
jb
int
mov
xchg
test
cld
repnz
inc
bound
mov
ljmp
xchg
negl
adc
arpl
add
fldt
stc
bound
jne
cli
popa
aas
icebp
ficoml
in
sar
add
fistpl
in
pusha
push
clc
cmp
mov
or
fisttpll
nop
dec
pop
test
mov
mov
fld
inc
lret
fadds
add
int
pop
sti
fadds
testl
or
test
add
and
add
inc
hlt
adc
mov
stc
add
daa
mov
dec
aam
pop
je
lock
aaa
cmp
xadd
jg
push
add
mul
fsubl
mov
mov
xchg
mov
mov
fs
jb
add
bound
mov
divl
ljmp
jnp
popf
stos
mov
fdivs
jp
orl
add
fs
mov
out
out
popf
inc
pop
add
add
pop
mov
add
lret
punpckldq
jg
push
iret
adc
leave
addl
sti
bound
jmp
jb
lea
jp,pn
xchg
loop
fnstenv
ljmp
dec
mov
mov
push
jae
scas
sbb
adc
mov
mov
fdivrs
jmp
dec
add
xor
jmp
fnstsw
out
add
sbb
jle
xchg
pusha
lret
jne
test
mov
fnop
lcall
jmp
testl
and
flds
out
mov
sbb
push
mov
dec
push
dec
xchg
fs
popl
insb
push
ret
test
fiaddl
jmp
cmpsb
jb
sub
sbb
ljmp
sbb
pushf
push
aas
rcrl
xor
and
out
cs
roll
jmp
popa
loopne
dec
mov
notl
popa
addl
add
int3
xor
cmpl
add
jl
add
add
mov
pop
js
cmp
pop
clc
es
add
fstp
pop
add
add
mov
mov
mov
add
xchg
or
fmull
mov
or
inc
sbb
loopne
pop
rorl
mov
add
pop
stc
add
sub
jp
jge
cmp
testb
pop
out
add
clc
and
xor
inc
jnp
fldl
bound
or
bound
jge
jae
clc
pop
jb
test
aaa
jl
pop
js
add
add
mov
inc
in
repz
cld
cmp
push
std
and
adc
bound
jmp
bound
inc
push
ret
pop
pusha
push
ret
jmp
push
add
inc
in
repz
cld
add
or
dec
or
ret
jle
out
xchg
fidivrl
arpl
or
lcall
test
fs
pop
lahf
cld
in
rolb
lcall
cmp
fwait
scas
push
addb
adc
cwtl
out
mov
xchg
outsl
mov
add
xlat
jmp
mov
fldl2t
inc
add
jmp
ret
in
push
mov
fldl2t
jp
test
inc
push
fsubl
fcoml
jnp
mov
inc
push
fdivl
in
push
mov
pop
andb
jp
lea
xchg
push
add
mov
jmp
data16
add
xchg
call
shrb
cs
jg
loopne
flds
push
insb
inc
mov
add
in
or
popa
shrb
bound
loopne
loope
or
mov
inc
loopne
push
loope
push
pop
push
ret
flds
bound
pop
inc
leave
es
jno
add
pop
test
or
addl
test
jmp
idiv
mov
add
pmuludq
out
incl
pushf
push
out
push
jl
and
pushf
repz
add
dec
push
add
dec
flds
mov
dec
lahf
mov
dec
add
add
repz
jb
pop
jp
cmp
add
push
xlat
stc
dec
jg
lret
xchg
je
repz
or
jne
clc
mov
mov
cmpsl
and
fnstcw
cmp
add
cltd
inc
jo
sahf
pop
mov
bound
fstpt
popa
xchg
mov
adc
add
and
jae
mov
test
push
mov
mov
xchg
sbb
mov
mov
mov
inc
xchg
or
add
mov
dec
mov
add
bound
push
cmc
mov
call
fldenv
cmpsb
jns
inc
mov
pop
sti
inc
fdivs
inc
pushf
ficoms
fldl2t
js
std
ljmp
pop
or
fldenv
xor
add
mov
mov
in
dec
test
jge
out
mov
push
and
mov
cmpsb
add
pop
scas
cld
cmp
test
out
mov
push
sahf
fwait
icebp
push
cmp
add
lcall
xorl
pop
pop
shlb
in
cs
mov
inc
roll
cmp
stc
lods
in
roll
shrl
clc
sbb
imul
lds
mov
mov
subl
xchg
dec
fwait
jmp
cmp
faddp
adc
jmp
enter
imul
push
fiaddl
mov
mov
int
fistl
inc
lds
mov
jl
pop
xlat
add
les
inc
movsl
add
ror
fldl
xor
mov
icebp
je
mov
aad
addl
or
cmovge
jle
push
mov
dec
fsubrl
clc
jns
add
or
rol
loopne
dec
fildl
sbb
add
or
add
nop
out
cmp
xchg
shl
mov
jmp
jne
clc
add
mov
repnz
call
outsl
and
jno
jge
fidivs
xor
add
add
clc
pop
scas
jne
xchg
shlb
xchg
xor
rcrl
mov
ja
push
lcall
test
mov
xchg
sahf
inc
in
cmp
insl
cmpsl
adc
popa
mov
mov
bound
add
mov
cld
sbb
scas
fdivl
outsl
or
jb
jge
add
mov
or
inc
sti
mov
jo
jmp
movsl
mov
outsb
push
add
rolb
jecxz
sbb
clc
dec
fisubrs
push
imul
fnstcw
ljmp
jg
jmp
decb
push
call
popl
push
ss
pop
cs
xchg
jmp
rcr
push
cmp
mov
mov
jmp
rcll
mov
push
push
fsubr
push
push
jge
sub
fs
add
popa
jbe
jb
push
shr
jle
jmp
pop
sub
mov
add
scas
add
loopne
sbb
cmpsb
jge
mov
adc
cmp
fmuls
fldenv
add
add
cwtl
cld
add
add
cmp
mov
jne
arpl
jmp
dec
push
inc
ror
icebp
pusha
stc
rorl
jb
popf
mov
dec
push
dec
lea
push
push
add
stos
jle
and
jo
jecxz
push
add
add
jo
or
push
add
inc
test
cmp
mov
jle
jnp
push
clc
xor
data16
mov
flds
lcall
jmp
add
mov
mov
iret
add
jnp
add
cmpl
dec
rcr
mov
sbb
mov
into
push
cwtl
jl
out
bound
add
aam
pop
dec
push
clc
cs
add
lods
push
mov
sbb
add
ret
dec
jmp
imul
jns
jecxz
xor
lret
jp
mov
or
mov
mov
sub
lret
add
mov
scas
shll
cmp
lcall
mov
jb
add
xchg
js
ds
js
fldcw
js
push
es
hlt
rorl
test
pop
int3
aaa
inc
cwtl
mov
jae
push
std
fcomps
add
push
jg
jmp
js
cmpsl
dec
js
popf
es
push
jmp
pop
inc
sbb
and
lods
movsb
xlat
and
lahf
js
mov
push
daa
sti
in
repnz
pop
inc
and
cbtw
test
fcoml
inc
inc
shl
cltd
add
lds
xor
push
cmp
cwtl
out
push
mov
mov
jae
out
jmp
add
in
jmp
fisttps
fnsave
cmp
stc
out
adc
push
pop
or
pop
loop
jmp
popa
fldcw
outsb
sbb
add
inc
xor
jmp
add
add
push
or
sarb
sub
or
popa
flds
lahf
test
adc
cld
into
adc
cmp
jge
adcl
jl
lock
imul
add
ss
aad
mov
testb
sub
loopne
push
rorl
inc
out
add
pop
jge
add
mov
jo
inc
and
jmp
mov
idiv
xor
or
push
jnp
add
mov
add
imul
inc
sub
sti
inc
mov
sbb
mov
aas
rolb
fdivr
bound
add
in
test
push
cld
push
int3
add
rcll
add
popa
cmp
int
cld
rorl
xor
test
jecxz
inc
mov
fwait
jmp
fnstcw
repnz
fldcw
shrl
dec
xchg
ficoms
mov
add
fstpt
add
xchg
loop
dec
xchg
xor
test
test
fsubrl
mov
fdivl
lock
insl
test
gs
loop
xchg
packssdw
sbb
xchg
add
jmp
sub
into
jmp
das
sbb
and
cltd
pushf
fwait
int3
ja
add
pop
daa
or
or
cmp
xor
and
sbb
out
mov
lods
mov
scas
xor
pop
cmp
fcomps
mov
mov
jg
out
xlat
lahf
add
int
jmp
xlat
and
push
es
bound
fistpll
sub
pop
jmp
test
out
dec
push
pop
inc
movsl
out
sbb
pop
enter
pop
aas
mov
ss
test
loope
hlt
jmp
add
pop
push
pusha
jo
adc
mov
gs
clc
mov
jnp
add
sub
out
push
stos
faddl
int3
push
or
sbb
add
mov
cmc
decl
arpl
and
sub
add
mov
jb
js
mov
sti
flds
sldt
idiv
lret
bound
jo
jb
jo
jge
mov
dec
sub
repz
int
enter
mov
dec
xchg
lods
mov
jmp
int
jmp
push
imul
mov
xchg
clc
out
mov
add
inc
mov
fadds
xor
test
mov
aad
xchg
addb
fcoms
test
and
enter
imul
aad
bound
cmp
add
pop
xchg
add
bound
sbb
movsl
fldl2t
sbbb
jmp
add
pushf
imul
stos
mov
test
mov
fnop
repz
je
sbb
jmp
jmp
and
mov
push
sub
xchg
jmp
test
bound
jns
andl
xlat
mov
cmp
mov
fisubrl
mov
jns
inc
push
ret
lds
sti
and
lock
lock
call
mov
add
add
push
or
imul
loop
adc
ficoml
icebp
jo
xchg
mov
test
mull
xor
fldenv
mov
jnp
push
popa
xor
icebp
xor
ljmp
mov
cwtl
inc
loope
cmp
jl
xor
dec
addr16
jmp
pop
pop
xchg
popa
flds
testl
mov
mov
or
dec
cmc
out
jge
pop
std
xor
push
jae
fadds
subb
je
bound
cld
pushf
lar
xchg
test
dec
arpl
xor
or
adcl
push
das
dec
pop
cmp
ret
jge
repz
add
or
subb
mov
data16
mov
sub
mov
sbb
mov
jno
inc
add
add
popf
cmp
decb
mov
pop
clc
jmp
fadds
jmp
test
ljmp
xchg
movsl
testb
cmpsb
pop
test
push
sbb
movb
xchg
mov
jmp
push
pop
clc
filds
adc
jo
mov
lret
mov
push
sub
bound
out
sbb
mov
push
repnz
imul
icebp
test
push
add
lcall
pop
add
jg
jmp
leave
imul
cmp
bound
cld
fcoml
fimull
fstpl
add
orl
movsb
xlat
add
popa
add
mov
adcl
lea
pop
and
mov
lea
sbb
data16
jo
ret
insl
in
add
insb
out
repnz
movsb
mov
cmp
out
mov
pop
mov
adc
add
xchg
in
push
fstpl
add
jno
scas
aad
fldl
add
popf
lods
add
sub
xor
add
adc
xor
xor
add
movsl
xor
sub
movsb
xor
bound
add
test
add
stos
xor
test
xor
mov
xor
movswl
sbb
lods
xor
movsl
mov
add
scas
xor
mov
xor
into
mov
add
xor
and
xor
outsb
mov
add
movsb
xor
add
xor
cmp
cmp
aas
lret
push
cmp
lret
push
int
jmp
sti
rolb
fisttps
out
andb
add
jbe
inc
jae
push
mov
push
dec
into
loope
or
cmp
mov
adc
dec
iret
loope
or
and
add
bound
inc
add
dec
clc
dec
mov
add
cs
dec
lret
es
dec
lret
push
aas
dec
lret
push
into
mov
jmp
fldenv
enter
pusha
sub
scas
pusha
sub
movsb
or
outsb
xchg
in
cmpsb
pusha
sbb
out
mov
and
mov
or
mov
xchg
imul
sub
dec
cltd
popf
xchg
mov
sbb
jle
in
mov
shll
add
arpl
pop
pop
jae
pop
pop
cltd
push
sub
cwtl
jb
pop
test
sbb
out
sbb
mov
or
xchg
pusha
add
sbb
and
or
loop
adc
mov
les
popf
mov
mov
out
js
popa
push
inc
in
ficompl
adc
bound
mov
xchg
or
pushf
andl
fmuls
sub
xchg
divl
mov
les
ljmp
or
ss
popa
flds
fbld
daa
adc
sub
add
lret
xor
icebp
iret
and
aad
dec
outsb
repz
push
mov
sbb
mov
incl
sti
jmp
rcl
jge
sbb
jge
or
mov
adc
or
repnz
add
ja
and
add
xor
fcomps
divl
mov
jge
cmp
adc
lret
and
mov
add
popa
iret
cs
jmp
shll
cmp
add
sar
sbb
pop
jecxz
push
incl
and
inc
adc
mov
out
sbb
clc
bound
sub
mov
divl
mov
mov
or
bound
pop
clc
bound
sub
and
adc
mov
out
push
inc
bound
push
adc
mov
inc
bound
lods
or
jmp
popf
push
decl
jmp
sub
je
orb
jmp
outsb
xor
subl
sub
jnp
add
pop
roll
sub
out
test
gs
xchg
inc
shrl
lret
add
int
sub
sbb
orb
int
mov
test
sub
lods
cmc
outsb
lods
mov
jmp
xchg
or
jl
lcall
popa
sub
fisubrl
xchg
push
xchg
mov
inc
daa
jmp
jbe
xchg
sarl
add
popa
add
popa
mov
jae
mov
jmp
mov
pop
shlb
jns
ljmp
popa
add
popa
pop
or
jns
inc
jmp
popa
fnstenv
fldl
sub
shlb
cmc
or
and
popa
fnstenv
add
shll
cmp
add
mov
jge
cli
add
sbbl
int3
cld
pushf
repz
inc
add
arpl
cld
pushf
and
add
fisubl
inc
lret
daa
or
cmp
add
or
rol
adc
jge
pop
fdivl
jecxz
rorl
add
leave
mov
mov
sbb
or
cli
clc
add
add
and
xlat
and
in
xchg
or
sub
bound
sub
sub
mov
cmpsb
push
out
iret
adc
push
inc
jl
add
dec
sti
sub
in
sbb
outsl
push
dec
iret
cmp
aaa
lret
cmpsb
les
fld
add
mov
sti
mov
out
sbb
idiv
test
jo
mov
fld1
add
gs
inc
push
add
andb
imul
jmp
add
inc
jnp
pop
test
jg
in
add
fiaddl
fldenv
fsqrt
push
adcl
xlat
lock
add
pop
jnp
dec
fldl
bound
iret
add
imul
testl
push
fldl2t
lods
add
xchg
adc
inc
test
xchg
add
adc
jmp
fmull
jmp
fdivr
hlt
ret
xchg
flds
insb
insb
pop
lods
jno
fldl
jmp
sub
into
scas
div
mov
jb
xor
mov
add
jno
faddl
jmp
add
arpl
pusha
movsb
mov
popa
pop
dec
insl
sub
mov
lods
rcr
mov
pop
mov
pop
ficompl
mov
cs
jge
adc
jnp
sub
sti
xor
jnp
xchg
xlat
add
into
pop
sub
aad
jl
aaa
loope
mov
idiv
jne
jl
jbe
jge
pop
jecxz
or
inc
in
mov
idiv
jo
loop
mov
idiv
xor
sbb
int3
mov
lret
int3
pop
mov
jmp
inc
lds
iret
sub
and
mov
pop
test
mov
jmp
dec
arpl
orb
jmp
push
or
into
in
add
stc
je
imul
idiv
dec
stc
je
pop
jo
xchg
cmpsl
idiv
xor
jo
xchg
lahf
idiv
sbb
jo
xchg
idiv
add
jo
test
out
add
jo
jl
scas
mov
jnp
outsb
jo
sub
stos
clc
enter
aam
xor
adc
js
fsubr
add
dec
jno
pop
fldl2t
jl
xor
or
xor
jo
jge
bound
adc
pop
add
dec
sbb
jle
push
push
dec
ret
push
and
pop
stos
sbb
add
mov
add
mov
xor
jecxz
lgs
adc
fcoml
jnp
jmp
xchg
add
insb
fnstcw
pop
int
lret
jns
lret
push
jecxz
jb
push
mull
sarl
flds
insb
xor
popa
push
pop
xor
rcrb
xor
clc
lods
cmp
jmp
xchg
inc
out
add
leave
mov
mov
testl
out
pop
mull
cli
add
out
add
inc
or
push
das
sti
test
pop
or
inc
adc
daa
out
mul
pop
or
fildl
add
and
fimuls
jne
xchg
jb
andb
jg
pusha
mov
rcl
je
aam
cli
xlat
jae
fisubl
mov
sti
shlb
lldt
popa
jl
fmull
mov
outsl
idiv
movsl
fcoml
decl
jge
xlat
loop
loopne
push
jae
adcb
mov
jae
bound
test
lret
sahf
sub
lret
xchg
mov
in
dec
or
jp
fstps
lock
jb
into
movsl
xor
inc
xchg
mov
rolb
out
roll
mov
in
int3
cld
lods
aas
lcall
je
cmc
insl
adc
call
add
xor
jmp
pop
fistpl
mov
int
shll
add
adc
cli
popa
arpl
jne
imul
fs
push
rol
int
icebp
push
pop
pop
fldl2t
fnstsw
pop
push
lock
movb
testl
jg
movl
stos
sbb
pop
sub
shlb
insl
pop
jmp
in
xchg
cwtl
mov
or
jmp
dec
shlb
cmp
pop
push
sub
mov
out
movsl
mov
cwtl
lods
cmp
mov
sbb
jo
mov
nop
shrl
add
mov
xchg
push
push
jne
push
add
popa
fnstcw
popf
sarb
frstor
popa
fnstcw
xchg
push
sub
das
jl
mov
pop
imul
popa
push
mull
insb
pop
push
pop
push
insl
std
bound
jne
mov
fisttps
and
pop
notl
int
pop
pop
add
pop
testl
sti
xlat
add
add
mov
pushl
mov
adc
xlat
add
or
mov
mov
xchg
std
dec
jge
pop
stos
aad
repz
popa
or
push
adc
mov
rep
idiv
adc
adc
lahf
fs
repnz
idiv
lock
adc
pop
loop
mov
add
push
idiv
cmp
notl
sarl
andl
xchg
xchg
sbb
cld
insb
jnp
jo
bound
call
push
xchg
add
stos
clc
int
and
xorl
xor
clc
jo
add
nop
scas
adc
add
int
add
add
xor
xchg
mov
cltd
scas
fidivs
add
and
popa
xor
xchg
jmp
xchg
mov
jo
test
and
add
in
fists
mov
mov
in
jo
fldenv
pop
dec
jns
push
fldl2t
mov
call
in
cmpsl
repnz
adc
jns
in
iret
add
mov
inc
push
mov
je,pn
bound
fdiv
add
sbb
out
insl
sbb
mov
add
movsb
cmp
popa
dec
sbb
ret
scas
std
adc
bound
or
push
flds
jmp
pop
mov
mov
pop
fimuls
lret
add
mov
pop
lock
push
std
out
mov
in
jo
cmp
imul
mov
pop
pop
nop
mov
jp
mov
ljmp
test
push
pop
sbb
pop
inc
xor
lods
or
fldcw
mull
mov
ljmp
mov
mov
roll
fs
add
add
or
out
mov
fs
and
push
jne
std
sbb
push
or
fldenv
push
pop
jecxz
ret
push
mov
gs
xchg
fildl
mov
ljmp
xor
add
lock
mov
mov
adc
add
or
jns
xchg
mov
add
xchg
inc
add
mov
mov
adc
cmpb
inc
jbe
bound
jge
dec
push
mov
add
xlat
test
jmp
shl
jmp
inc
cli
enter
mov
orb
leave
fldpi
cmp
and
es
add
dec
add
jmp
push
or
jmp
xor
ja
mov
jns
jae
jmp
xchg
or
jmp
add
jl
xchg
bound
in
xchg
adc
or
jmp
mov
mov
pop
adc
add
xchg
testl
fsubl
adc
stc
out
jmp
subb
movsl
cmpsb
cmp
gs
pushf
daa
add
pop
jnp
fldl2t
mov
lea
jmp
call
jmp
nop
push
outsl
flds
jb
fisttpll
xor
and
inc
jp
adc
test
rol
add
xchg
repz
out
nop
push
jmp
jbe
add
cmp
add
popa
mov
mov
nop
popa
insb
flds
push
push
call
divb
pop
mov
jo
lahf
clc
nop
push
jmp
mov
fiadds
jmp
lods
test
jg
pop
jnp
repz
lret
aad
add
pusha
add
add
sbb
add
in
jge
punpcklwd
or
insl
scas
push
cmp
mov
popa
xchg
or
push
pop
sub
and
lea
lock
pusha
push
cld
pop
pusha
scas
mov
fwait
jge
mov
pop
stos
loopne
inc
aam
add
in
add
mov
out
mov
ja
bound
xchg
mov
ljmp
jl
cmp
popa
xor
mov
leave
mov
mov
inc
add
cli
sub
add
inc
adc
jbe
mov
call
inc
xchg
mov
js
bound
jp
inc
fistl
mov
in
inc
sub
test
cmp
je
push
inc
add
add
dec
fldl
mov
inc
add
mov
xchg
out
add
pushf
das
ss
pusha
mov
pop
xor
fldenv
shrl
add
incb
jl
fldl2t
add
pushf
adc
fldl2t
imul
jmp
xor
add
cmp
xchg
pop
fdivs
sbb
shlb
ja
fldl2t
pusha
push
cmp
test
jmp
roll
add
stos
in
lods
dec
mov
add
aam
or
mov
jmp
scas
or
rorl
jbe
in
or
push
mov
pop
push
mov
flds
call
aas
pop
pop
sbb
jns
ret
push
jmp
pop
jo
mov
jmp
xchg
xor
jecxz
push
jmp
fsubs
xlat
popa
pop
jo
add
filds
seto
adc
xor
pop
push
or
pop
scas
push
jnp
mov
fistpl
icebp
push
push
jnp
jge
xchg
or
rclb
xchg
scas
jmp
add
xor
mov
ds
ret
xchg
mov
sbbb
or
fstl
movsl
cmpsb
xlat
data16
push
or
jne
push
arpl
mov
in
mov
add
dec
pushf
sti
addl
jp
loopne
iret
inc
xchg
sbb
inc
scas
xlat
or
jmp
fdivrl
add
testl
aam
adc
lret
mov
test
push
mov
insl
mov
add
scas
inc
jb
js
mov
repz
outsl
adc
mov
add
or
xor
xchg
push
in
push
add
cmp
adc
repnz
sub
cld
jmp
jle
insb
fldl2t
add
dec
push
in
inc
ficoms
sub
mov
jecxz
add
cltd
sahf
scas
cmp
jno
lock
aad
jmp
jl
fldl2t
mov
loope
sbb
lahf
cvtdq2ps
jmp
into
gs
cmc
adc
dec
push
fstps
jl
xchg
xchg
call
aad
pop
sub
andl
jae
jmp
testl
mov
sub
mov
push
add
push
sub
lock
shr
pop
mov
popa
flds
subb
divl
push
inc
loope
bound
jb
ss
push
xor
mov
add
fcoms
call
mov
push
ffree
mov
and
mov
std
push
sahf
mov
add
dec
outsl
flds
ficoms
ljmp
clc
add
dec
mov
ljmp
xor
cwtl
mov
dec
es
push
adc
mov
adc
lret
pop
push
cld
cmpsl
or
mov
jnp
mov
pop
add
lahf
jns
je
xor
add
idivl
outsb
decb
inc
mov
add
dec
add
mov
repz
xor
adc
fdivr
inc
punpcklwd
ljmp
jmp
test
jae
dec
inc
add
jb
mov
adc
mov
inc
add
lods
mov
add
xchg
and
add
enter
cld
mov
aas
idiv
test
mov
push
inc
add
cmp
clc
lds
inc
std
pop
inc
cld
mov
inc
idiv
dec
pop
mov
mov
cmp
add
gs
ljmp
mov
sub
jbe
out
jns
nop
out
add
and
fildll
jb
add
cltd
aad
jmp
rorb
testl
cmc
jecxz
add
scas
jb
cmp
fidivrs
stc
and
fistl
add
stc
add
add
movsb
inc
jg
loope
aas
fstpt
fldl
fnstenv
xor
mov
push
sbb
out
jns
nop
iret
add
bound
cltd
insl
popa
adc
push
or
mull
mov
pop
push
push
loope
out
adc
lea
jmp
nop
or
cvtps2pi
dec
jecxz
push
nop
dec
dec
flds
bound
ror
push
mov
gs
jmp
jle
mov
pushf
cmp
test
add
test
stos
add
dec
mov
sub
mov
cmc
or
bound
fnstsw
sub
aaa
enter
jl
xchg
scas
loopne
xor
or
mov
add
fnstenv
add
adc
mov
mov
inc
jecxz
add
test
mov
mov
lds
decl
cmpsl
adc
or
sbb
out
movsl
ret
cmpsl
mov
jb
out
inc
cmpsl
mov
add
mov
shlb
sti
addl
mov
pop
fwait
jb
in
lret
ss
rcll
mov
lret
mov
insl
outsl
cmpsl
scas
pusha
mov
add
mov
jp
dec
xor
inc
mov
cmpsl
out
inc
lret
pop
popa
xchg
push
je
pop
loopne
add
mov
xor
jnp
jae
ret
adc
mov
or
je
pop
lret
jmp
xor
aas
jbe
adc
sbb
xchg
movsb
xor
lods
jecxz
in
inc
sbb
jb
sbb
jo
int
jmp
into
pop
mov
mov
jno
push
fldl2t
add
push
jno
jae
jmp
ret
fldenv
pop
pop
sahf
jmp
pop
xchg
das
mov
xchg
sub
push
cmp
adc
fldl2t
ficoml
mov
jb
add
inc
jnp
sarl
add
outsl
mov
pop
jo
leave
loop
es
jmp
test
or
rorl
jmp
outsb
dec
dec
xchg
cmp
jo
lea
jmp
cs
push
icebp
pop
push
mov
popa
fldl2t
fistl
push
add
popa
fstps
cmpl
jmp
pop
pop
mov
popa
fstps
cmp
les
xor
mov
test
decl
add
jg
cmp
inc
inc
enter
popa
push
out
pop
aad
popa
andl
jae
fstl
mov
sahf
pop
popa
adc
clc
sti
fdivs
sarl
mov
fadds
nop
sbb
inc
aaa
orl
cmp
lret
jl
dec
mov
add
fadds
add
cltd
lret
int3
enter
or
add
cmp
test
cmpsb
out
xchg
lcall
testb
mov
mov
loope
or
insl
xor
ljmp
test
inc
ret
adc
test
stos
inc
js
push
pop
paddsw
sbb
add
and
add
leave
adc
enter
sti
jnp
roll
jmp
test
pop
push
insl
add
mov
xor
stc
and
cmpb
add
jp
jp
sub
bound
adc
aas
sub
and
jnp
in
jmp
sti
mov
xor
pop
out
icebp
jnp
jns
test
dec
mov
cld
mov
mov
adc
adc
fists
jae
or
in
sub
push
jno
push
fldl2t
jl
test
add
stos
cmp
adc
add
sub
pop
cmp
jne
popa
int
bound
out
cltd
pop
pop
adc
add
or
bound
out
xor
jmp
js
pushf
xchg
or
dec
shll
jmp
js
jl
or
dec
shrl
push
inc
inc
cmc
test
fstpt
popa
flds
bound
out
sbb
pop
push
jno
rorb
cmc
mov
negl
outsb
lcall
mov
mov
inc
jg
jnp
jg
push
inc
idiv
sarb
and
or
roll
jge
add
or
fisttpll
fdivrl
lret
aas
idiv
xor
das
or
pusha
inc
aad
mov
adc
sti
ret
jge
aad
add
xchg
ljmp
mov
xor
and
inc
faddl
add
aam
out
es
filds
xor
sar
lods
fdivrs
pop
xchg
mov
jecxz
mov
stc
mov
mov
adc
or
stc
mov
fistpll
add
clc
and
ja
in
xchg
test
pop
pop
cmp
push
pop
je
loope
sti
test
lahf
dec
int3
push
fyl2xp1
jne
pop
mov
jl
aad
inc
xchg
sbb
outsb
orl
fldl2t
add
fxch
add
sbb
or
addr16
rcll
jmp
add
pop
xchg
or
jmp
inc
loope
mov
jl
xor
hlt
das
mov
test
xchg
cmp
fldpi
cmpsb
movsb
pop
add
les
jmp
mov
fldl2t
jp
test
mov
shr
add
jmp
adc
pop
add
cmpsb
or
popa
fincstp
ja
call
insb
loop
mov
pusha
idivb
pop
flds
push
lea
popa
aas
jnp
notl
mov
mov
cmp
mov
addl
adc
pop
inc
divl
jns
je
cltd
fwait
clc
pusha
and
out
mov
jmp
jl
or
popa
push
test
aad
jmp
popa
push
mov
mov
cld
jle
sub
jmp
ret
andl
shl
xchg
dec
jmp
push
adc
fnstcw
add
aam
push
outsl
flds
mov
or
orl
rclb
sbb
sub
mov
fnstcw
or
pop
ret
add
cmpsb
or
cmp
cmc
mov
outsl
inc
dec
adc
fmuls
mov
adcl
jge
fisubrl
arpl
adc
mov
sbb
mov
pusha
inc
outsb
cmp
in
ficoms
add
jbe
push
xor
test
adc
lcall
scas
pop
jmp
jbe
pop
xor
test
cmp
pop
ss
xchg
pop
xor
call
mov
out
cmp
add
push
cmp
push
out
cmp
cs
js
jmp
fldl2t
jbe
fs
pop
lret
cmp
js
lock
addr16
fldl2t
int
popa
mov
stos
dec
addr16
fldl2t
roll
push
popf
not
out
add
ljmp
mov
les
push
fstpt
aam
push
jns
mov
jge
movsl
addr16
add
mov
addr16
jecxz
inc
cltd
jmp
pop
mov
xor
and
mov
adc
repz
jmp
rorl
test
popa
fsts
fnsave
add
adc
repz
jmp
ss
lret
add
call
les
mov
les
push
mov
pop
iret
jbe
in
cmpsl
mov
or
jb
rcrb
xchg
orb
popa
shrb
add
dec
inc
adc
flds
sysexit
mov
stc
inc
xlat
dec
aas
adc
xchg
xchg
aas
idiv
cld
adc
sub
dec
stos
push
mov
adc
mov
push
scas
outsl
jle
and
lcall
pop
add
pop
in
cld
push
ret
add
xchg
popa
mov
xor
test
fs
dec
sbb
idiv
shlb
cmp
je
bound
mov
push
out
inc
lret
cs
dec
lret
es
xchg
add
jge
pop
sti
notb
clc
fldl
test
fscale
add
ficompl
mov
inc
test
mov
add
jae
insb
inc
add
adc
je
push
inc
add
pop
mov
out
or
pop
adc
test
mov
repnz
mov
pushl
mov
and
push
fldl2t
test
popa
jns
jae
jmp
cli
cmc
aaa
mov
pop
sub
fnsave
jb
sbb
jmp
xor
cmc
into
jmp
mov
in
into
jmp
mov
ficompl
clc
pop
outsl
popa
pop
push
fldl2t
mov
popa
cmc
mov
in
jne
add
stc
aam
add
test
xor
pop
push
flds
jmp
sub
test
js
imull
fsts
fnstenv
jmp
and
div
pushf
and
sbb
xor
les
flds
cmp
xchg
adc
jmp
pop
add
popa
fwait
xor
jmp
add
lock
xor
loope
dec
clc
xchg
aas
int
pop
sbb
popa
fsts
lea
sbb
popa
fsts
cmp
or
mov
fbld
jbe
clc
mov
arpl
orl
roll
fldl
cmp
lret
fldl
xchg
add
sbbb
test
sti
dec
adc
pop
outsl
fbstp
ljmp
fimuls
add
mov
or
lahf
or
arpl
jge
dec
push
add
aad
jle
jg
ret
xor
fsts
imul
adc
push
mov
stos
in
jmp
fdivrp
clc
pushf
cs
mov
mov
incl
add
insb
or
scas
adc
add
jl
scas
jb
inc
popa
mov
cmpl
jmp
push
adc
sub
dec
and
mov
inc
cmpb
inc
add
dec
daa
add
jmp
inc
ret
dec
and
ret
fnstenv
xchg
loope
add
cmp
sbb
ds
andl
xor
mov
je
add
mov
fcomps
jg
andl
push
aaa
into
push
mov
jmp
pop
jae
jmp
ljmp
clc
push
push
pop
push
fldl2t
mov
int
mov
popa
std
repnz
cmc
lea
mov
jno
stc
jmp
add
push
jp
shll
popa
fstps
out
push
jmp
xchg
adc
fildll
jmp
call
fldcw
sbb
add
or
call
push
fimull
push
push
push
divl
pop
mov
out
sbb
ret
lods
sbb
les
movsb
mov
mov
adc
xor
jmp
repnz
scas
stc
pop
sbb
add
int3
clc
add
out
or
dec
add
cmp
shrl
pop
ret
push
mov
flds
inc
or
pop
into
fwait
or
js
pop
jae
pop
int3
je
popa
mov
add
cld
xchg
add
dec
repnz
dec
add
lret
lea
les
out
add
mov
pushf
xlat
add
fwait
hlt
dec
pushf
xlat
adc
pop
mov
inc
add
loopne
add
ljmp
and
jl
repnz
cld
jmp
xchg
and
push
adc
popa
cld
or
popa
in
or
popa
cld
or
popa
in
or
popa
cld
or
popa
insb
or
popa
jl
mov
aas
cld
mulb
or
popa
jl
mov
f2xm1
add
fdivl
add
fsubl
add
fdivl
add
fsubl
in
add
fdivl
or
xchg
add
fsubl
or
xchg
add
fdivl
add
movsl
loopne
xchg
sbb
push
pop
jl
fiadds
push
cmp
bound
incb
jno
andl
and
stos
cmpsl
fucomip
sbb
fninit
sbb
fstp
jle
xor
sbb
adc
jg
fsubr
add
xor
fldcw
jmp
add
cmp
imul
add
adc
add
data16
mov
imul
add
add
pop
imul
add
push
dec
in
add
pop
imul
add
push
dec
out
add
pop
imul
add
push
dec
lock
pop
imul
add
push
dec
repnz
add
in
add
mov
out
add
mov
test
out
add
mov
xchg
fucomi
add
pop
fcoml
mov
je
jnp
or
icebp
jae
inc
pushf
add
add
clc
adc
mov
pushf
hlt
mov
adc
lds
cmp
clc
add
data16
out
add
imul
out
mov
dec
addr16
sti
data16
rol
mov
sti
xchg
lret
int3
jmp
inc
dec
pop
test
fnstsw
bound
call
add
mov
jmp
lret
or
bound
add
stc
xchg
testb
aas
lret
xchg
jnp
lret
cs
cmpsl
push
mov
pop
and
outsb
xlat
aaa
fnstcw
cmp
sbbb
add
inc
test
data16
add
or
fldt
xlat
test
mov
add
mov
std
fdivr
test
or
and
jb
cmp
iret
mov
pusha
sahf
or
fstl
std
out
fucompp
add
push
add
jb,pt
cmc
popa
and
mov
icebp
hlt
icebp
add
int3
jo
or
mov
cltd
jb
addl
dec
pop
fs
les
out
cmp
aas
jmp
mov
fldl2t
add
movsl
sar
out
sub
popa
fsubrl
add
out
add
fld
sbb
aad
cld
jno
mull
ljmp
clc
movl
mov
pusha
lods
stc
pop
sub
jmp
jge
insl
std
ljmp
in
aam
subl
lods
ret
xor
jmp
mov
incl
push
sub
push
idivb
jmp
and
iret
cmp
into
fisttpll
add
push
jl
add
decl
mov
cmp
jle
sbb
mov
scas
stos
jae
mov
lock
decl
adc
das
incl
pop
aaa
mov
inc
or
int3
xabort
aaa
inc
das
aaa
inc
sbb
dec
add
daa
push
jl
push
sub
sbb
jg
stos
mov
xchg
pop
cld
push
lret
int3
add
pop
ds
pop
ds
pop
add
pop
add
add
bound
add
add
bound
add
bound
add
bound
add
mov
jmp
add
bound
cld
jmp
jmp
or
bound
add
repnz
dec
xchg
pushl
adc
insl
pop
adc
gs
adc
pop
test
add
adc
add
adc
bound
adc
adc
bound
adc
popa
out
clc
pop
out
adc
pop
notl
clc
fstps
adc
call
push
adc
sub
xchg
cltd
cmc
jge
std
xchg
jle
lds
popa
push
out
xchg
pop
sar
fcompl
std
neg
mov
mov
xchg
fnstcw
add
xchg
push
ljmp
fldl2e
cmp
test
iret
in
mov
repz
and
enter
rolb
jmp
and
push
fucom
in
fldl2t
add
cmpsb
stos
cmp
mov
xchg
mov
adc
pop
dec
int
pop
rcll
ljmp
and
and
sub
popa
inc
je
sti
adc
std
pop
enter
stos
pop
in
sti
adc
aad
or
mov
mov
adc
imul
lcall
je
adc
add
bound
jmp
fldcw
xor
push
stc
mov
add
pop
xor
fisubl
add
mov
xor
cmp
xor
fsts
outsb
pop
dec
das
andl
daa
adc
inc
pop
mov
les
xlat
invd
aad
jne
iret
mov
jnp
divl
or
mov
push
inc
mov
add
jnp
std
jle
push
inc
dec
fildl
add
dec
pop
jae
adcb
or
addb
repz
int3
inc
cmp
test
jnp
ds
rcr
xor
fidivl
int3
lfs
pop
icebp
adc
mov
pop
jge
data16
aaa
dec
sbb
jo
fsubrs
iret
mov
inc
repz
add
add
sbb
push
aad
adc
jns
push
jo
stos
fdivrs
mov
mov
add
add
adc
inc
xor
xchg
add
or
sub
out
leave
cmp
pop
xor
inc
fnsave
inc
aad
cmp
fstpl
adc
adc
jae
vpmaxub
loop
out
xchg
inc
fbld
xchg
pop
dec
add
add
pop
stos
hlt
cmpsb
cmp
sbb
push
xchg
add
jmp
adc
jbe
lcall
lods
std
sbb
movl
jne
fldenv
add
push
dec
push
add
leave
jmp
sbb
jno
and
arpl
mov
pop
and
push
and
mov
inc
jb
clc
sbb
cmpsb
jmp
jno
lahf
and
mov
add
xchg
mov
flds
xchg
pusha
flds
jmp
sbb
testl
jae
and
push
mov
flds
push
pusha
flds
jmp
sub
or
fidivl
adc
clc
pushl
add
fld
dec
and
jo
or
add
loopne
jl
or
mov
pop
mov
mov
fildl
mov
daa
mov
push
cmp
inc
sub
mov
jmp
mov
mov
and
sub
add
cmp
lret
push
cmp
mov
cmp
cmp
xchg
sbb
mov
out
add
ja
xchg
mov
xor
jns
ja
adc
ds
adc
test
std
ja
gs
xlat
and
push
or
add
adc
pop
xchg
push
aad
cs
push
sub
jl
xor
in
pushf
scas
inc
pop
gs
inc
or
cmp
jle
lods
fsubrs
sbb
sbb
mov
aad
fnstenv
dec
cmp
jmp
bound
aas
lret
push
dec
add
push
pop
movsl
int
push
sbb
cltd
and
xor
mul
pop
jmp
cli
scas
sbb
jne
cmp
out
mov
push
out
add
push
xor
sbb
lahf
sar
push
jb
outsl
cmp
add
test
shrb
sarb
push
jbe
jl
pop
flds
push
shrl
or
pop
jmp
pop
sub
pop
add
lods
sbb
cmpsl
sbb
lods
cmp
sahf
test
xor
add
push
pushl
and
mov
pop
cltd
add
push
subb
cs
jb
sti
and
or
or
lea
mul
xor
add
pop
insb
xchg
test
sbb
repnz
inc
add
fidivrs
clc
ret
dec
fmull
add
cwtl
add
adc
idiv
in
jl
mov
or
enter
fcomps
or
add
fnstsw
ret
lret
movsb
sarl
sbb
test
fiaddl
add
fwait
or
xor
cmp
inc
pop
and
fnstsw
ret
push
pushl
jl
pop
or
fnstenv
dec
and
lret
inc
or
push
cld
jmp
cmp
int3
push
iret
fstpt
hlt
xchg
fcmovne
jno
jnp
add
popa
xchg
inc
adc
dec
lock
jle
lret
enter
les
lock
sbb
and
fldenv
aaa
jmp
roll
fld
fucomi
leave
pop
add
mov
lret
into
push
sub
into
rcll
jp
mov
jnp
xchg
or
sbb
pop
into
push
add
mov
jecxz
xlat
clc
lods
fsubr
add
repnz
xchg
out
cmpsb
jmp
add
xchg
repz
jmp
add
push
add
xchg
std
stos
loopne
aad
fstl
jo
fldcw
cmp
movsl
jmp
or
fisttps
mov
sbb
fcom
sub
mov
add
dec
push
vpavgw
cmpsl
or
jae
sbb
clc
or
jb
pop
in
loop
or
pusha
mov
jmp
stos
popf
xor
jmp
roll
mov
dec
test
cmp
clc
or
xchg
ret
repnz
test
inc
sbb
repz
inc
popf
mov
cld
jno
notl
repnz
add
call
push
int3
jmp
mov
sbb
add
daa
je
or
mov
out
jecxz
int3
iret
jecxz
int3
push
mov
jl
stos
or
ror
pop
or
lahf
inc
test
pop
stos
mov
lahf
inc
mov
add
mov
jae
nop
sbb
fwait
or
add
cld
lea
inc
and
mov
sub
mov
mov
scas
bswap
add
daa
xchg
add
push
adc
xor
jp
cmpsb
cmpsl
les
test
adc
xor
mov
add
mov
push
andl
mov
inc
push
fsts
mov
std
jmp
ss
lods
xor
test
scas
sub
in
cmp
std
mov
xor
mov
lods
push
insb
lahf
push
call
cmp
aaa
jl
cwtl
push
pop
mov
pop
dec
fs
dec
aam
cld
arpl
push
and
or
in
imul
fldl2t
add
insb
cmpsl
pop
fldl2t
add
inc
es
imul
jmp
jmp
in
loope
out
cmp
adc
sbb
lds
xchg
jmp
minps
mov
pop
bound
jg
pop
pushf
call
ss
lahf
pop
add
loope
popf
add
mov
jb
pop
call
push
pusha
xchg
mov
in
mov
test
xchg
sahf
inc
jmp
dec
push
adc
fldenv
jo
sub
add
fildl
jmp
pusha
flds
xchg
gs
cmpsb
popf
xor
mov
fs
fstp
ljmp
add
fs
push
into
flds
jmp
jb
call
incl
xor
add
loopne
push
mov
pop
out
add
in
push
leave
fildl
psignw
add
scas
lock
dec
add
xchg
les
mov
sbb
ret
adc
in
fimull
or
std
lahf
adc
pop
bound
push
mov
lock
fimull
mov
jecxz
dec
sbb
fcompl
mov
sub
adc
jnp
sub
jl
mov
mov
bound
add
sarb
mov
mov
mov
enter
add
add
stos
mov
mov
stc
add
add
fcmovnb
sub
lea
mov
jae
mov
dec
mov
or
add
bound
jge
in
cli
jge
adc
test
jo
dec
sub
mov
fldl2t
orb
mov
pushf
fsubs
cmp
fldl2t
add
mov
jb
data16
and
xor
movsb
jmp
aad
lods
adc
je
fisttpl
out
xchg
fldcw
loope
daa
adc
cwtl
mov
add
lcall
leave
jmp
xchg
mov
popa
sub
jb
in
pop
into
imul
cmpsb
ljmp
daa
arpl
rclb
std
jno
add
xchg
pop
dec
add
popa
inc
pusha
and
movsb
lods
bound
loopne
add
flds
adc
clc
jmp
loope
repz
add
adc
mov
fs
add
fcmovnu
mov
bound
popa
pusha
jno
add
mov
mov
pop
jo
imul
xchg
fcmovnbe
clc
fs
add
adc
mov
popa
inc
call
xchg
mov
mov
bound
out
pop
add
sti
xlat
mov
xlat
or
push
in
xor
or
mov
mov
std
pusha
aad
js
out
push
inc
or
add
fwait
pusha
inc
jnp
mov
push
int3
std
add
out
inc
jae
std
cld
adc
out
jmp
mov
aas
fs
pop
out
sti
cmc
sub
pop
div
sbb
jle
testl
ret
cmc
cmc
fwait
pop
test
lods
test
jmp
call
ds
movsb
jge
cmc
mov
add
arpl
mov
scas
or
imull
lret
fstpt
cmc
test
sti
or
jmp
sub
add
push
mov
cmp
movsl
adc
adc
and
movsl
enter
or
sbb
add
add
fldenv
lods
pop
pop
aas
and
ficoml
adc
add
call
clc
inc
and
shrl
adc
enter
enter
sti
das
pop
cmc
push
jmp
adc
hlt
andb
fisttpll
sbb
jmp
vgatherqps
sbb
popa
flds
bound
or
in
add
and
insl
fldl
push
add
fcoml
mov
push
cmp
test
jge
jge
mov
xor
nop
arpl
or
jmp
jmp
lock
aad
mov
stc
ret
pushf
lahf
add
mov
sbb
sbb
lcall
bound
mov
jp
add
cmpsl
or
mov
test
jg
test
add
adc
dec
mov
inc
dec
jle
push
jle
push
jle
cmp
add
or
les
mov
mov
adcb
lea
add
adc
push
jge
push
jge
push
sbb
push
lret
fildl
call
cmp
add
les
decl
inc
out
add
sbbb
hlt
bound
add
bound
hlt
fistl
add
shrb
adc
out
push
sarl
out
mov
rclb
xchg
mov
call
loope
adc
hlt
add
add
dec
sbb
cli
jmp
lock
notl
jne
jbe
jnp
adc
out
test
mov
mov
sbb
adc
add
mov
push
mov
jmp
cmp
testl
movsb
cmc
xorb
jb
push
bound
cmc
dec
push
repnz
shlb
sbb
stos
cmp
lahf
in
rcrb
jbe
sarb
outsl
fiaddl
dec
lods
popa
outsl
push
bound
add
push
sub
add
mov
flds
jns
shlb
outsb
jb
lods
sbb
mov
rcrb
ja
rcrl
outsl
imul
jmp
lret
ret
mov
aad
cmc
popaw
dec
loop
aas
adc
fadds
jg
loop
fld1
sahf
lock
daa
insl
enter
insb
mov
negl
sub
stos
jmp
jmp
ljmp
outsl
jg
mov
sahf
or
mov
jge
jge
cmp
jae
jmp
ljmp
movsb
aad
clc
lahf
jo
inc
add
push
push
adc
andl
mov
bound
add
mov
mov
or
dec
jae
add
incl
pushf
push
mov
cwtl
mov
rcr
jae
popa
insl
clc
mov
adc
fldl
add
pushf
jle
out
jl
test
lret
hlt
push
dec
jae
andb
and
decb
xor
mov
cld
incb
lods
jbe
jge
shr
testl
xchg
add
mov
decb
mov
cld
cmc
jne
mov
pop
ja
xorl
xor
jecxz
sti
gs
add
cmp
add
bound
add
and
dec
sbb
sti
sti
mov
sarl
jb
jmp
mov
mov
add
mov
jg
and
cltd
add
mov
xchg
add
jmp
out
mov
or
dec
fsqrt
in
cwtl
out
mov
arpl
pushf
mull
jmp
outsb
jp
mov
xchg
test
hlt
mul
cmp
mov
sub
fldcw
aam
push
push
imul
pop
loop
stc
jnp
pop
sub
jl
jo
cs
test
jp
into
sub
nop
adc
push
into
sbb
add
add
cmc
or
and
repz
filds
add
pushf
or
call
push
lahf
dec
loope
jo
icebp
cmp
sub
xor
out
call
xchg
jnp
mov
xor
xchg
repnz
add
aas
and
pop
divl
jmp
sbb
add
insl
icebp
sbb
cmc
sahf
xor
les
mov
mov
cmp
dec
sbb
ljmp
popa
flds
mov
iret
mov
inc
or
add
mov
int3
mov
xchg
cmpsl
iret
sbb
gs
cmp
xchg
or
push
data16
shlb
dec
adc
clc
jne
lcall
faddl
mov
fildll
dec
faddl
add
roll
add
dec
push
push
faddl
add
pop
mov
je
pop
ret
sbbb
add
add
bound
sub
es
hlt
mov
or
mov
insb
je
pop
mov
popa
adc
xor
movsl
icebp
andl
sti
mov
push
adc
mov
or
fdiv
jno
pop
jb
pop
ret
outsl
inc
lock
xor
push
and
add
dec
mov
ret
xor
and
xor
lock
mov
je
flds
popa
fldl2t
add
sbb
int
xor
sbb
xor
inc
jmp
and
roll
cmp
shr
popf
jmp
add
mov
pop
sbb
xor
jne
data16
sub
xchg
push
push
pop
movsb
sub
jge
lods
rcrb
out
pop
push
mov
inc
loope
dec
push
jb
pop
scas
bound
lret
jmp
fstps
add
bound
loope
jg
imul
mov
bound
cmc
js
or
lods
leave
add
cmc
xchg
add
sub
out
test
jo
add
loop
call
ret
cmp
pusha
sbb
adcb
je
adc
jmp
push
mov
int3
call
add
add
add
aad
sahf
cmp
idivl
pop
xchg
sub
stos
add
sbb
pop
jne
popa
jne
add
mov
mov
add
pushl
jg
or
inc
xor
hlt
inc
or
xchg
in
in
mov
out
pop
mov
ja
add
lret
pop
mov
cmp
xchg
mul
cmpl
jnp
and
pop
xor
arpl
add
sbb
adc
cmpsl
out
adc
mov
loope
scas
or
loope
pop
aas
mov
mov
hlt
push
mov
rorl
or
ja
clc
jmp
add
jbe
js
pop
out
mov
outsb
ljmp
add
imul
xchg
idivb
mov
loop
dec
pop
xchg
call
fcom
in
xchg
sbb
pop
jle
testl
sub
insl
and
push
gs
testl
mov
ret
push
in
push
jno
js
jle
cmc
clc
in
test
inc
fldcw
mov
loope
jmp
jp
xchg
mov
test
inc
fldcw
push
leave
loope
jmp
jp
mov
sarl
mov
cmc
xor
dec
movsl
daa
jb
sbb
out
cmpsl
js
dec
movsl
daa
push
xchg
daa
outsb
dec
popf
daa
push
sub
aad
sub
aad
into
mov
dec
or
jg
or
jbe
mov
xchg
and
cwtl
lods
fstpt
cmp
scas
add
sub
pop
shlb
lcall
in
add
test
ret
dec
divl
add
cld
test
lods
popa
push
add
pusha
push
xchg
pop
movsl
popa
push
adc
jo
cltd
pop
lods
popa
push
xor
adc
fstps
jnp
pop
movsl
add
test
mov
std
sbb
mov
xor
pushf
cltd
add
loope
addr16
aad
jge,pt
inc
cmp
push
inc
or
push
inc
sti
xorl
loopne
repz
cmp
inc
sti
aad
add
xor
mov
mov
std
cli
decl
ffree
add
mov
jl
add
pop
fdivr
repz
mov
sbb
incl
adc
movsb
xor
bound
or
bound
jmp
add
mov
enter
les
shlb
push
hlt
mov
and
imulb
shr
xorb
sub
mov
icebp
pop
jle
je
fldcw
cld
ror
je,pn
jmp
cmp
pop
or
fcmovnbe
fcomps
addr16
lea
je
jne
pop
or
mov
stc
lock
mov
and
loope
gs
pop
xchg
cmp
movsl
std
and
aas
inc
roll
push
add
xchg
int
and
bound
jl
push
mov
dec
and
jmp
push
test
repnz
xor
arpl
int
cmp
push
stos
ljmp
dec
push
ret
decb
mov
or
and
bound
xchg
or
mov
lret
and
add
xchg
mov
xor
popa
lahf
cmp
outsb
mov
lret
mov
adc
lods
mov
mov
jb
lds
xor
cs
std
xor
xor
adc
jl
mov
sub
or
roll
xor
jb
add
pop
rolb
mov
jb
lret
int
dec
ret
loope
pop
mov
xlat
fadds
add
jns
add
fadds
inc
cmp
out
pop
sbb
cltd
or
cmc
test
call
push
mov
ja
mov
push
call
loopne
cmp
cld
jge
out
call
jg
mov
leave
cmp
add
dec
rorl
cmp
decl
fadds
ret
bound
sbb
ja
sbb
pop
mov
insb
imul
add
ret
dec
out
inc
xchg
mov
adc
sub
jecxz
adc
ret
lcall
push
repnz
bound
sbb
jns
sbb
test
add
jecxz
mov
mov
xor
mov
aad
jmp
daa
mov
idivl
sub
pop
add
add
fldcw
jns
or
pop
fldl2t
add
cmpsb
inc
sub
jb
pop
stos
sub
movsl
fdivs
int
imul
fisubrs
cli
dec
cld
mov
jno
fs
shll
sti
mov
add
loope
shll
jb
and
cwtl
jp
jmp
add
jb
pop
jmp
pop
push
dec
jmp
mov
lahf
add
lret
ds
adc
jmp
inc
jbe
or
int
fiaddl
jmp
xchg
popf
mov
popa
flds
jmp
enter
mov
les
add
dec
cmp
pop
into
rcrb
add
push
rcl
das
dec
fdivs
fldl
cmovle
ret
enter
or
pop
fstl
jb
fldl
jmp
fstpt
cs
in
jbe
dec
lock
fstpl
bound
dec
cmp
fucomp
push
xchg
adc
xchg
jmp
adc
in
aam
xor
mov
add
adc
add
mov
int3
lret
and
stos
enter
shlb
xor
and
mov
jb
rcrb
mov
and
test
jmp
push
jnp
mov
int3
decl
fldl
add
sti
out
sti
faddl
add
sti
out
inc
repnz
in
cmp
sti
faddl
add
inc
sti
out
dec
and
jmp
add
bound
mov
inc
bound
add
bound
mov
inc
bound
add
divl
mov
inc
bound
add
jmp
notl
mov
inc
bound
add
bound
loope
xor
lret
bound
add
bound
loope
add
sbb
add
loope
cmc
dec
ret
inc
bound
inc
bound
add
fstps
int
push
cmp
and
jmp
loope
neg
push
and
jmp
loope
test
mov
fldl2t
add
loopne
neg
cmp
fxch
cmp
fldl2t
add
fsubp
dec
imull
cmpsl
aaa
mov
fnstcw
loope
fldcw
add
sahf
loopne
testl
add
jle
in
mulb
outsb
mov
lcall
ret
sub
lcall
popa
flds
inc
ret
pop
cmp
add
popa
flds
es
fwait
cltd
add
jmp
popa
flds
jmp
fdivrp
push
pusha
inc
mov
inc
pop
adc
popa
jns
jmp
popa
xchg
adc
popa
movsl
adc
popa
xchg
adc
popa
dec
adc
popa
popa
adc
popa
jne
jmp
popa
lods
adc
popa
mov
add
fisubl
sti
fnstenv
sti
fldcw
fldcw
lret
fnstcw
sbb
add
fstps
adc
flds
mov
mov
xor
jnp
add
jnp
in
adc
ftst
adc
hlt
adc
sub
dec
fldcw
adc
adc
cmp
loopne
cmp
int3
adc
fcoms
dec
fld
adc
adc
or
xchg
adc
fxtract
adc
fadd
adc
add
push
add
lods
push
add
mov
jb
add
add
fdivl
add
push
add
cwtl
push
add
mov
add
add
pop
jae
add
add
je
add
js
add
insb
push
add
jl
add
mov
add
jae,pt
add
add
add
add
or
add
add
add
push
add
hlt
jb
add
jb
jmp
add
enter
leave
jmp
add
enter
leave
jmp
add
enter
leave
jmp
add
leave
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
jmp
add
jmp
add
add
jecxz
add
leave
add
popa
aas
adc
popa
sub
jmp
popa
fcoms
jmp
popa
sbb
adc
popa
sbb
jmp
popa
xor
jmp
popa
inc
pop
jmp
popa
cmp
pop
jmp
add
pop
jmp
popa
push
pop
jmp
popa
dec
pop
jmp
popa
popa
pop
jmp
popa
pop
pop
jmp
popa
jno
jmp
popa
adc
jmp
cmp
mov
ud2
cmp
or
dec
psubq
xor
sti
aad
ud2
sub
or
cmp
sti
aad
psubq
xor
lret
aad
str
aad
btc
adc
aad
bswap
aad
btc
adc
mov
aad
jnp
aad
aad
jnp
aad
adc
hlt
push
jnp
add
dec
fucomp
push
dec
push
cmp
in
cmp
xor
bound
add
add
xor
add
dec
push
add
loopne
add
aam
add
fadds
pop
add
int3
push
add
int3
insb
add
add
add
enter
mov
insb
add
mov
add
mov
push
add
lods
insb
add
mov
add
movsb
pop
add
test
add
pushf
insb
add
mov
pop
add
cwtl
push
add
loopne
add
aam
add
fcomps
int3
push
add
shrb
les
enter
add
push
fucomip
add
fucomip
add
fucomip
add
loopne
add
fucomip
add
fucomip
add
jmp
add
fucomip
add
fucomip
add
fucomip
add
fucomip
add
fucomip
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
shr
add
rolb
jmp
popa
pop
sbb
popa
test
jmp
popa
jmp
add
popa
add
jmp
popa
add
add
jmp
popa
das
pop
jmp
popa
sbb
jmp
popa
cmp
push
jmp
jmp
popa
mov
add
jmp
popa
xchg
adc
popa
dec
add
jmp
jnp
je
dec
fiaddl
or
cmp
mov
dec
adc
out
adc
ficompl
cmp
inc
or
or
dec
or
sti
flds
ficoml
or
cmp
add
fsts
or
lret
fstps
mov
fldenv
or
mov
flds
mov
cld
or
or
mov
jne
bound
add
pop
add
clc
push
add
in
outsb
add
lock
in
add
call
outsb
add
sub
sbb
add
and
push
add
adc
add
ss
cmp
add
push
add
xor
add
data16
mov
add
mov
outsb
add
mov
add
movsb
pop
add
test
add
pushf
outsb
add
mov
add
movsb
pop
add
test
add
pushf
outsb
add
mov
pop
add
out
push
fldl2t
add
jmp
add
jmp
add
inc
fucomi
add
jmp
add
jmp
add
fucomp
add
fucomp
add
fucomp
add
fucomp
add
fucomp
add
fucomp
add
fucomp
add
fucomp
add
fucomp
add
jmp
add
jmp
add
jmp
add
popa
aad
jmp
popa
in
or
popa
flds
popa
in
jmp
popa
std
or
popa
jmp
or
popa
add
jmp
popa
stc
or
popa
add
or
popa
sbb
or
popa
adc
or
popa
sub
or
popa
and
or
popa
cmp
or
add
or
popa
inc
or
popa
dec
or
popa
cmp
jmp
popa
fcoml
add
nop
or
jl
jnp
mov
mov
test
mov
orb
insb
or
or
dec
jo
cmp
pop
or
push
or
mov
cmp
pushf
or
mov
jne
or
orl
sti
aad
or
test
or
nop
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
aad
or
add
add
sbb
add
add
adc
add
add
or
add
push
add
hlt
pop
add
clc
push
repnz
pop
repnz
pop
repnz
add
add
push
repnz
pop
repnz
push
repnz
repnz
pop
repnz
outsl
repnz
addr16
pop
repnz
pop
repnz
push
repnz
pop
repnz
fldl2t
add
shr
add
aam
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
not
jmp
add
shr
add
jmp
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
xlat
jmp
add
shr
add
roll
jmp
popa
mov
or
add
or
popa
int
jmp
popa
aad
jmp
popa
fisttpll
jmp
popa
in
jmp
popa
in
or
popa
loope
jmp
popa
jmp
or
popa
icebp
or
popa
add
or
popa
or
or
popa
adc
or
popa
sbb
or
popa
and
or
add
or
popa
and
add
fisubl
mov
fisubrl
or
fimull
mov
test
jnp
nop
or
jl
mov
mov
mov
je
jnp
orb
fisubrl
fidivrl
dec
fisubl
fidivl
cmp
pop
or
push
or
fisubl
cmp
dec
or
or
pop
or
fiaddl
fsts
sti
fnstcw
or
dec
or
fidivl
sti
flds
lock
lock
imul
sub
lock
imul
add
pop
lock
imul
add
pop
lock
imul
add
lock
repnz
imul
add
pop
repnz
push
add
push
add
repnz
pop
repnz
push
add
push
add
pop
repnz
pop
repnz
push
add
imul
jmp
add
shr
add
shr
add
jmp
add
jmp
add
shr
add
shr
add
shr
add
shr
add
jmp
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
into
jmp
add
into
add
popa
pop
or
popa
xor
jmp
popa
cmp
jmp
popa
inc
or
popa
aaa
or
add
or
popa
aas
or
popa
push
or
popa
inc
or
popa
pop
or
popa
dec
or
popa
arpl
jmp
popa
imul
popa
pop
or
popa
jae
jmp
popa
jnp
jmp
popa
orl
popa
ja
jmp
popa
jg
jmp
popa
xchg
jmp
popa
mov
inc
or
or
or
cmp
or
es
xor
sti
push
or
sub
lret
push
or
push
or
sbb
lret
push
or
decb
mov
or
mov
testb
add
jnp
out
or
out
jnp
repnz
fimuls
dec
ljmp
loop
cmp
into
or
fimull
add
or
rorb
cmp
mov
lret
add
pop
lock
imul
scas
pop
lock
imul
stos
imul
sahf
pop
lock
imul
lcall
add
imul
mov
add
lock
imul
jp
lock
pop
lock
lock
repnz
repnz
repnz
repnz
repnz
repnz
fldl2t
add
shr
add
shr
add
shr
add
shr
add
jmp
add
jmp
add
shr
add
jmp
add
push
shr
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
popa
invd
jmp
popa
pop
or
popa
adc
jmp
popa
sbb
jmp
popa
and
jmp
popa
sub
jmp
jmp
popa
aas
or
popa
cmp
jmp
popa
inc
or
popa
dec
or
popa
dec
or
popa
push
or
popa
push
or
popa
pop
or
popa
pop
or
popa
addr16
popa
arpl
jmp
popa
imul
popa
ja
jmp
popa
jg
add
dec
fisttpl
dec
fistpl
cmp
inc
or
fistl
or
or
or
dec
or
fidivl
or
fiaddl
or
or
fstpt
or
fisubl
or
fidivl
or
ficompl
or
fisubrl
or
fisubl
or
fimull
or
ficompl
or
ficoml
or
fisubrl
pop
jnp
testb
fiaddl
or
pop
jnp
out
jnp
repnz
dec
fcmovu
pop
lock
add
add
pop
lock
gs
pop
lock
gs
pop
lock
gs
pop
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
pop
lock
pop
lock
lock
pop
fldl2t
add
aam
add
aam
add
aam
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
adc
add
add
jmp
add
jmp
add
jmp
add
jmp
jmp
popa
jmp
call
popa
repz
call
popa
sti
std
call
popa
add
call
popa
or
call
popa
push
cld
call
popa
pop
cld
call
add
call
popa
sub
call
popa
xor
call
popa
cmp
call
popa
inc
call
popa
dec
call
popa
push
call
popa
pop
decl
xlat
outsb
push
jnp
jp
jnp
pushw
dec
xlat
jb
dec
xlat
pop
push
cmp
push
cmp
push
push
dec
xlat
bound
dec
xlat
dec
push
add
xlat
pop
push
cmp
inc
push
or
push
push
or
or
testl
or
out
add
xlat
cs
sti
cmp
sti
es
lret
xor
lret
push
push
mov
push
push
lret
and
lret
push
push
mov
push
push
mov
adc
mov
incb
pop
lock
lock
pop
lock
addr16
add
add
addr16
pop
lock
addr16
pop
lock
addr16
pop
lock
addr16
pop
lock
addr16
pop
lock
addr16
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
out
lods
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
out
pop
fsubp
add
fiadds
jmp
popa
out
call
popa
call
popa
xlat
std
call
popa
iret
std
call
popa
std
call
popa
mov
std
call
popa
mov
std
call
popa
cmpsl
std
call
add
std
call
popa
xchg
std
call
popa
std
call
popa
xchg
call
popa
jg
call
popa
ja
dec
add
fistpl
add
fistl
add
fisttpl
add
fildl
add
fstpt
dec
dec
cmp
pop
add
cmp
push
dec
fistl
dec
cmp
dec
add
fistpl
or
inc
add
fistl
sti
fidivrl
add
fimull
or
ss
fildl
sti
fisubrl
add
fidivrl
add
fisubl
add
fidivl
add
ficompl
add
rolb
data16
pop
rolb
data16
pop
rolb
data16
pop
rolb
data16
pop
rolb
add
add
popa
rolb
data16
popa
rolb
popa
rolb
popa
rolb
popa
rolb
popa
rolb
popa
rolb
popa
rolb
popa
rolb
popa
rolb
popa
rolb
popa
rolb
popa
rolb
arpl
add
arpl
add
arpl
add
arpl
add
iret
fsub
add
out
mov
out
add
fsub
add
fsub
add
fsub
add
fsub
add
fsub
add
add
add
add
add
add
add
add
add
add
add
add
or
aaa
mul
movb
xlat
pop
add
flds
scas
sub
push
jmp
rcll
out
push
ljmp
data16
bound
clc
add
outsb
pusha
flds
push
int3
insl
out
fcoms
and
sbb
push
mov
pop
mov
jmp
popa
flds
bound
ficompl
cs
flds
pusha
mov
stos
out
sbb
adc
imul
loopne
sbb
loopne
add
cmp
pop
bound
mov
idiv
popa
flds
add
cmc
sti
cltd
mov
out
inc
mov
test
mov
adc
pop
addr16
mov
in
inc
mov
pop
adc
andl
insb
or
icebp
hlt
ret
negl
add
fildl
addl
adc
pop
xor
dec
lcall
lock
xor
or
addb
roll
ret
cmc
mov
add
bound
jne
mov
or
jbe
test
push
roll
push
shl
lahf
roll
addr16
aas
and
cmpb
mov
aas
and
xorb
sub
cld
and
aas
and
test
negl
popl
cmp
add
jge
mov
loopne
add
aad
xchg
ffree
aam
sbb
jecxz
shr
aad
or
loope
sti
inc
add
negb
out
push
lret
fstpt
arpl
out
fstps
lret
or
loopne
add
aad
xchg
push
popf
out
xchg
dec
inc
inc
rcrl
or
fimull
arpl
out
jmp
loope
add
fsub
xchg
push
aam
pop
test
ss
mov
adc
enter
mov
inc
xor
xor
fisubs
flds
stos
fmull
and
movsb
pop
cmp
bound
push
or
adc
shll
fld
subl
rcrl
fmul
xor
fsubrl
mov
pushf
jmp
sub
push
and
movsb
pop
je
and
cld
imul
pop
je
jno
cld
imul
faddl
enter
add
mov
ret
and
dec
pop
insb
add
or
out
xchg
out
dec
jl
add
fadd
sbbb
inc
sbb
ret
fdivr
je
orl
xchg
ret
xlat
adc
subl
pop
aad
add
push
insb
xor
mul
xor
add
cmp
add
hlt
addb
mov
ret
and
dec
jmp
adc
pop
xor
cmp
and
fsubs
cmc
sub
shll
loope
and
mov
rolb
and
inc
sub
inc
loope
mov
xchg
je
daa
mov
subl
add
fucomp
aas
das
mov
mov
insb
addr16
aaa
and
jge
inc
ret
mov
insl
sbb
call
and
testl
fiaddl
xlat
push
sub
push
add
in
lcall
cli
inc
in
or
lcall
das
cli
jmp
mov
mov
pop
fldcw
fsts
add
sbb
call
mov
int
mov
call
jecxz
lcall
jge
dec
mov
shlb
insl
int
cmp
or
push
add
pushw
and
clc
sub
inc
psubsb
fiadds
sbb
add
fcmovnb
add
jno
out
pop
je
popa
or
out
jmp
add
or
cmpb
imul
psadbw
pop
fidivrl
lret
and
mov
jmp
push
testb
ret
out
jmp
pusha
cwtl
jmp
add
adc
push
add
sub
mov
pop
xor
dec
sbb
cmp
add
arpl
jmp
cld
adc
cmpb
outsb
push
arpl
mov
fdivs
and
and
mov
test
add
xchg
adcl
insb
or
aam
lods
lret
xlat
add
add
jg
adc
ret
xchg
je
pop
insb
or
xlat
add
push
sub
add
stos
adcb
loope
add
iret
mov
jne
mov
add
cmp
mull
mov
or
xchg
data16
pop
add
lods
ret
loope
pop
cld
outsb
mov
daa
dec
cli
clc
scas
neg
jg
jne
mov
inc
les
jne
mov
or
aaa
xchg
stos
sub
push
decl
stos
xorl
mov
jmp
out
das
rcr
insl
lret
pop
int3
aas
mov
pop
popf
sbb
or
dec
mov
fidivrl
push
aad
std
add
xchg
jae
push
adc
add
and
lods
scas
in
leave
rclb
outsl
jecxz
cmp
mov
mov
leave
stos
xchg
jmp
mov
leave
stos
xchg
jecxz
cmp
stos
xchg
jecxz
cmp
add
cmp
fidivrs
shl
in
pmaxsw
lret
fisubs
shl
sub
push
sbb
lcall
inc
iret
ret
mulb
add
dec
psubsw
fiadds
in
psubsb
fimuls
fisttpll
jmp
ljmp
xor
add
mov
int3
adc
ret
xlat
add
mov
mov
rol
push
xlat
cld
sbb
sub
movsb
fldt
out
add
mov
orl
sbb
or
ret
loop
je
push
idiv
or
cmpb
fs
fucomip
decl
out
ret
rclb
add
mov
shr
jbe
decl
shr
loope
mov
ret
js
pop
add
call
ret
js
push
add
mov
sbbl
add
scas
cld
or
ret
jecxz
jne
arpl
addl
in
sbb
push
rcrl
bswap
std
imul
mov
insb
sub
sbb
or
sub
stc
dec
or
mov
add
mov
jb
call
add
cmpsl
xchg
jge
inc
mov
call
loope
sbb
ja
lcall
and
lcall
loope
sbb
push
lods
lcall
mov
and
add
in
cs
jmp
jo
jne
in
pusha
dec
mov
mov
mov
scas
push
sub
mov
sub
mov
sub
mov
stos
add
fisubrl
std
mov
imul
ficoms
inc
ljmp
dec
shr
aaa
data16
stos
int
add
add
fdivrs
lret
and
mov
int
add
fldcw
jmp
pop
je
pusha
fidivrs
data16
push
in
notb
pop
je
pop
ss
add
dec
or
cmp
jl
popa
fld1
popf
clc
int3
imulb
loope
por
call
push
iret
add
fisubrl
add
popa
mov
repnz
int3
ret
roll
push
dec
mov
rorl
imul
gs
sti
add
ret
jmp
je
pusha
daa
sti
add
ret
jmp
je
pusha
and
in
cmpb
arpl
add
sar
push
xchg
cmpb
arpl
adc
out
incl
insb
or
sbb
inc
outsl
out
js
insb
push
cmp
cmc
out
mov
jmp
jae
ret
mov
sbb
into
mov
inc
sub
shr
jo
js
pop
add
call
addl
mov
ret
loope
lgdtl
lcall
aas
mov
insb
cli
lods
jp
andl
add
pop
imul
pop
scas
das
and
stos
idivl
xorb
das
adc
lods
mull
or
mul
jmp
movsb
mull
sub
mov
das
and
mov
add
add
adc
loopne
mov
insb
pop
call
rorl
pop
fldcw
out
mov
sbb
call
scas
jg
addr16
push
mov
xchg
jae
pushf
test
bound
shlb
add
test
insl
test
dec
jp
fldt
lods
lahf
testb
pop
vpcmpgtb
pusha
mov
movsl
loopne
mov
out
add
dec
cli
out
les
dec
loop
mov
dec
ljmp
dec
add
lds
or
ror
div
sub
inc
je
mov
shl
movsl
dec
cmp
test
add
icebp
xor
aad
xor
das
lds
xor
daa
mov
xor
pop
and
sbb
mov
sub
adc
pop
sub
or
dec
sub
add
bound
call
or
add
pop
roll
mov
cli
fadd
pushl
mov
insb
and
out
clc
aas
xor
int3
dec
or
mov
pushf
cmc
incb
fistl
xor
sti
lock
xchg
call
ret
add
and
xor
fisttpl
add
add
js
xor
popf
sbb
cmp
pushl
sti
clc
jl
ret
mov
mov
inc
jne
bound
add
and
inc
sbb
add
fnstenv
lods
icebp
add
add
lcall
mov
push
call
fldlg2
push
add
xchg
jge
inc
mov
mov
bound
jo
arpl
sub
jp
movsl
negl
push
push
arpl
add
sub
add
scas
data16
and
adc
jmp
imul
jle
push
bound
fwait
add
test
pop
repnz
jle
imul
rcl
mov
xlat
mov
cs
in
stos
mov
stos
test
or
stos
gs
ficomps
mov
mov
sbb
loopne
or
and
out
fsts
or
add
sbb
out
fsub
add
lods
imulb
fiadds
out
dec
or
sbb
vcvtsi2ssl
add
popa
inc
sbb
daa
cwtl
jmp
js
orb
pop
sti
fbstp
and
or
pop
sti
ficoms
imulb
add
cld
and
cli
add
popa
flds
bound
cli
add
xor
pop
flds
mulb
jne
lds
out
loopne
pxor
or
dec
pusha
inc
call
js
mov
cmp
insb
xor
xchg
shr
cmp
cmp
or
bound
add
clc
add
call
ret
dec
jb
je
push
clc
or
mov
out
ret
add
aas
xor
mov
mov
sbb
jnp
add
dec
sub
mov
hlt
hlt
jb
jge
mov
out
bound
ret
xor
mov
sub
mov
das
popf
pop
loope
stc
insb
fs
add
sahf
neg
je
add
mov
mov
add
jnp
add
pop
add
sbb
idivl
push
cmc
subb
cmc
jbe
xchg
repz
pop
pushf
mull
mov
sbb
dec
ret
stos
cmp
imul
scas
dec
mov
aam
cmp
xchg
push
sub
mov
call
popf
loopne
xchg
daa
aas
js
out
bound
loopne
subl
bound
fstps
loope
into
cld
push
repnz
push
les
call
jp
cwtl
sar
ljmp
divb
into
push
imul
push
ret
xchg
movsb
mov
mov
and
loopne
lret
add
flds
jmp
or
inc
call
popa
inc
adc
testb
xchg
jmp
sub
add
popa
inc
cmp
and
orb
push
sti
cmc
inc
mov
imulb
loop
add
fbstp
ret
shrb
fdivrl
clc
icebp
or
test
fnstsw
clc
icebp
add
ficomps
shl
mov
repz
dec
cmp
adc
and
mov
sbb
add
cmp
add
ja
cmc
mov
xchg
cli
cmp
add
cmp
add
mov
lods
idiv
stos
mov
add
or
add
cmp
hlt
push
scas
idiv
das
xchg
cli
dec
faddl
add
faddl
add
dec
lock
mov
mov
add
mov
repz
lcall
idiv
arpl
add
add
bound
cmp
jne
in
ljmp
loope
gs
add
bound
incl
inc
cld
cmp
ret
bound
cmp
and
lcall
add
add
cmp
std
cmc
icebp
push
sub
sti
in
roll
add
clc
xor
aad
out
dec
std
sti
add
add
bound
cld
lods
sub
jmp
roll
add
and
jge
jns
call
add
gs
push
mov
loopne
mov
add
out
add
pop
cmp
sub
mov
add
out
hlt
add
mov
add
out
fstps
out
xchg
stc
fnsave
call
add
mov
divb
add
add
popa
flds
jmp
popa
flds
pop
dec
mov
cmpsl
xor
mov
jnp
mov
jmp
xchg
mov
ret
mov
daa
xchg
mov
mov
ja
not
outsl
mov
jae
mov
mov
idivb
mov
sbb
push
mov
and
idiv
ss
ret
cs
mov
mov
xchg
mov
push
xchg
mov
xor
mov
rcll
mov
sti
insl
mov
add
xor
icebp
hlt
call
in
hlt
pushl
hlt
incl
in
hlt
decl
repz
ljmp
repz
lcall
hlt
sti
div
lcall
hlt
call
hlt
call
div
decl
add
and
cmc
hlt
fcomi
hlt
jmp
cmc
hlt
hlt
pushl
lock
mov
and
hlt
jmp
lock
call
lock
ljmp
push
cld
mov
add
bound
movsl
ret
inc
dec
cld
lea
dec
cld
test
dec
cld
jge
dec
cld
jne
dec
cld
insl
push
cld
gs
dec
cld
pop
dec
dec
cld
push
xor
cld
dec
scas
cmp
inc
mov
cld
cmp
cmpb
jp
cld
and
sbb
pusha
cmp
or
add
std
in
cmp
cmc
mov
cld
in
fnstsw
cld
in
aas
cld
frstor
cld
aad
aas
cld
int
inc
inc
mov
inc
mov
mov
inc
scas
mov
inc
cmpsb
mov
inc
sahf
mov
inc
xchg
mov
inc
mov
clc
dec
jle
ret
mov
dec
outsb
mov
dec
data16
dec
pop
mov
dec
add
bound
orb
dec
ds
dec
ss
dec
cs
dec
es
dec
push
mov
dec
push
mov
dec
push
mov
dec
push
mov
dec
mov
dec
divb
mov
mov
dec
fidivs
divb
sbb
test
mov
shrl
mov
stc
sbb
idiv
sub
notb
add
mov
pop
sbb
idivb
mov
dec
sbb
idivb
stos
mov
mov
test
divb
mov
mov
mull
mov
std
mov
mov
mov
mov
insl
mov
mov
add
pop
cmc
incl
pop
cmc
incl
cmpsl
sbb
dec
sbb
pushl
sbb
ljmp
sbb
cmp
sbb
incl
cmc
decl
sbb
jmp
lock
fcomip
hlt
decl
pop
cmc
lcall
pop
cmc
pushl
sbb
jmp
cmc
jmp
sbb
inc
pop
cmc
stc
pop
cmc
jmp
pop
cmc
incl
jnp
cmc
jmp
ds
in
or
cld
in
ds
fst
cmp
cld
int
aas
cld
cld
mov
in
cld
lods
rolb
movsl
add
popf
rolb
xchg
movb
repnz
cld
test
cld
jge
ss
jne
ss
insl
and
cld
gs
ss
push
pop
ss
dec
inc
ss
inc
test
cld
cmp
xor
test
and
mov
add
bound
aaa
cld
add
scas
ds
filds
bound
add
ljmp
pop
call
xor
scas
dec
xor
flds
sahf
scas
sbb
xchg
scas
and
mov
xor
in
xor
loopne
add
test
scas
jp
pop
scas
jle
push
scas
xchg
das
dec
scas
sahf
das
inc
scas
lcall
scas
bound
cs
cs
into
cs
scas
mov
out
flds
add
inc
lods
notb
xor
mulb
xchg
lods
mulb
xchg
lods
imulb
popa
flds
jmp
jae
imulb
lods
push
lods
imul
popa
flds
and
lods
div
sbb
idiv
sub
notb
movsb
lods
notb
movsb
lods
divb
movsb
lods
neg
pushf
lods
test
lods
negb
lret
push
cmc
jmp
pop
cmc
call
and
jmp
and
std
and
out
and
incl
test
and
lcall
pop
cmc
jge
cmc
jmp
push
cmc
cmp
cmc
ljmp
push
cmc
push
adc
cmc
push
adc
cmc
ljmp
in
incl
jecxz
ljmp
hlt
ljmp
hlt
ljmp
hlt
jns
hlt
decl
out
ljmp
hlt
ljmp
out
jmp
sub
cld
sbb
adc
sti
sub
add
dec
cmp
cmc
inc
aas
cld
in
xor
cld
in
aas
cld
fnsave
cld
aad
dec
cld
int
dec
cld
lds
cld
mov
ds
lods
push
xor
movsl
push
xor
popf
push
xor
xchg
sub
cld
lea
cld
test
cld
jge
ds
jne
ds
insl
cmp
cld
les
pop
enter
clc
dec
cld
add
dec
cld
inc
data16
cmp
lods
clc
inc
lods
ljmp
lods
and
lods
push
dec
push
lods
je
push
lods
push
dec
stos
jo
imulb
nop
xor
stos
je
fisubrs
cwtl
xor
stos
stos
xor
stos
lods
xor
stos
inc
dec
scas
stos
xor
stos
and
stos
add
stos
aam
mov
stos
mov
jle
in
jbe
pop
inc
outsb
stos
sbb
stos
call
cmp
cmp
add
lods
imul
popa
flds
iret
jp
imulb
imul
fstpl
testb
testb
negb
cmp
notb
lods
idivb
lods
imul
popa
flds
xchg
popa
flds
jge
flds
cmp
flds
pop
pop
flds
sbbb
negb
lods
imulb
popa
flds
cmp
lods
mul
popa
flds
xorb
add
inc
add
cmp
add
test
add
clc
aad
sbbb
add
addb
add
xlat
out
hlt
inc
out
hlt
mov
loop
dec
loope
inc
stc
hlt
ljmp
stc
hlt
jmp
hlt
ljmp
hlt
jmp
hlt
pushl
jmp
hlt
lcall
jmp
hlt
jmp
xor
pop
int
cld
push
mov
add
xor
inc
or
cld
xor
sub
cwtl
cmp
sbb
fwait
cmp
or
loope
cld
std
cwtl
cmp
cmc
and
cld
in
adc
cld
in
cmp
fnsave
add
ss
push
ds
mov
imul
sbb
push
xor
pop
bound
std
inc
push
rcll
adc
xor
out
gs
adc
add
cmp
pop
mov
or
test
fsubl
sub
or
iret
sbb
sub
mov
pop
jge
shrl
scas
adc
es
ds
add
mov
jle
lcall
sbb
lea
inc
sub
cmpsb
sub
ja
inc
xor
cmp
pop
adc
add
iret
ficompl
daa
push
or
and
sbb
adc
add
push
flds
push
adc
insl
aaa
inc
cmp
add
xorb
adc
sbb
pop
xor
orb
lret
iretw
popa
and
push
les
pusha
aad
add
jl
sbb
inc
mov
inc
cmp
push
addl
out
jge
cmp
sbb
jae
push
flds
pop
or
cmp
sbb
flds
sub
data16
jb
dec
ret
sub
pop
push
push
cld
imul
insb
js
pop
insb
push
std
add
dec
imul
inc
outsl
jg
jno
sbb
push
push
adc
push
add
push
insl
add
punpckhbw
pusha
insl
loope,pn
add
fidivl
enter
fsubrp
insl
out
in
pop
inc
loop
push
push
repnz
push
add
int3
popa
insl
cmp
add
fistps
lret
popa
jo
or
inc
bound
cmp
sti
adc
popa
lock
adc
lock
jns
mov
adc
ror
daa
data16
repz
insb
mov
pop
jo
xchg
push
push
arpl
jg
adc
inc
jne
sbb
pop
mov
or
dec
cmp
dec
push
cmp
bound
sub
mov
pcmpgtb
insb
xor
jns
add
adc
daa
dec
adc
sbb
add
ficoms
and
add
pop
inc
push
adc
das
add
add
ds
sub
sub
mov
xor
add
mov
xor
leave
sbb
das
fisubrs
sbb
cs
pop
fstps
and
cmp
lcall
or
xor
mov
push
adc
add
sbb
xorl
add
dec
xor
add
inc
inc
push
add
push
addr16
sub
test
inc
setl
gs
lods
std
sbb
cmp
test
insl
jmp
test
pop
iret
jne
imul
popa
pop
cld
cltd
cmp
dec
rcll
pusha
int
daa
push
insl
mov
jae
pusha
popf
jl
addr16
sbb
add
outsb
in
add
sbb
fs
push
outsb
aaa
in
add
arpl
xor
jb
cli
pop
je
lds
sub
inc
fs
addb
cli
push
add
imul
push
push
dec
mov
js
push
popa
add
sti
xor
cmp
popa
je
enter
aad
add
mov
pop
inc
mov
fildl
ror
push
inc
repnz
jp
aas
inc
dec
cmp
ss
inc
insb
ss
sbb
and
jae
mov
pop
pop
ficomps
popa
push
cli
adc
add
out
push
pop
add
pop
or
dec
pop
in
inc
imul
fcom
aas
js
sbb
dec
mov
cmp
sbb
cmp
mov
minps
add
xchg
sbb
jbe
jb
xchg
push
addr16
xor
bound
cld
cmp
jg
lahf
setl
test
and
ss
add
test
jmp
mov
and
dec
sbb
push
xor
das
adc
daa
cmp
pop
flds
add
sti
cmp
pop
adc
sbb
aad
and
es
and
xor
sub
cmp
and
xor
mov
and
add
fstps
shll
pop
popl
cltd
add
popf
cmp
push
and
popa
xchg
add
and
pop
dec
mov
jne
inc
inc
jne
pusha
aas
inc
adc
add
loopne
cmp
push
push
and
pop
or
aaa
pop
push
data16
add
gs
push
push
popfw
add
dec
cld
data16
sub
add
or
cmp
cs
add
repnz
gs
fidivs
std
mov
inc
add
aam
gs
out
addr16
pop
insb
inc
addr16
lds
add
aad
gs
aas
insb
daa
shlb
aam
gs
ss
mov
dec
gs
xor
sub
jb
adc
add
push
popa
outsl
mov
aam
outsl
sub
mov
dec
add
cmp
repnz
pop
insb
mov
or
imul
imul
fs
pop
cmp
and
dec
pop
add
sti
ds
sbb
jb
push
pop
jae
fcoml
incl
std
je
out
pop
insb
pop
fbld
insl
push
or
adc
add
hlt
arpl
mov
and
aas
mov
and
in
lds
adc
cmc
add
frndint
add
int3
xor
xor
adc
cmp
push
jg
and
jmp
popf
ss
aas
dec
sub
xor
mov
jg
xchg
add
and
add
aaa
jge,pn
add
dec
adc
cmp
sub
add
shll
adc
daa
dec
sbb
xor
add
xlat
es
adc
mov
add
add
mov
cmp
lahf
daa
add
daa
push
mov
add
dec
cmp
fldl
add
push
cs
mov
inc
cmp
popa
jae
lcall
sub
flds
shll
pop
popf
ja
gs
pop
incb
pop
mov
test
pop
pushf
je
addr16
dec
xor
dec
jb
add
pusha
fcompl
cmp
xor
dec
dec
xor
inc
daa
push
ds
mov
sub
pop
sbb
cmp
add
out
add
xor
push
jb
sbb
push
jae
xlat
insl
add
sbb
jb
mov
addb
mov
js
lret
or
clc
enter
mov
push
xor
les
sub
movsb
add
negb
mov
add
inc
fsts
sbb
push
jb
clc
push
jae
loop
insl
add
add
mov
xor
pushf
pop
arpl
adc
dec
mov
inc
fs
and
arpl
imul
pop
jae
jne
gs
pop
or
bound
push
dec
aas
push
pop
aaa
pop
sbb
fs
dec
cmp
add
add
pop
and
imul
cld
adc
gs
adc
add
data16
add
repz
push
adc
pusha
into
out
jecxz
mov
fisubrs
jmp
ret
shll
or
add
sti
testb
test
icebp
xchg
inc
in
jo
mov
imul
cwtl
pop
or
or
nop
testl
push
sub
add
pushf
sti
cmp
jl
adc
loop
xor
dec
leave
adc
aas
mulb
or
jne
roll
add
pop
cmp
stc
arpl
cwtl
testb
push
std
sub
pop
or
adc
out
pop
std
jno
pop
sti
pop
cmc
cmp
jno
adc
outsb
int3
add
add
popa
cmc
add
out
or
daa
jae
mov
xor
sbb
jae
movb
mov
mov
clc
pop
jmp
popa
dec
xchg
or
sbb
add
push
jae
adc
push
jae
into
xor
xchg
push
dec
fisttpl
inc
push
xchg
push
jb
bound
dec
jle
je
mov
fdivl
insb
xlat
mov
sti
fidivl
bound
xchg
pop
mov
sti
fisubl
inc
sahf
mov
out
andl
pop
jae
xchg
fimuls
dec
fs
jg
push
jecxz
push
popa
pop
pushf
pop
outsb
das
jle
je
addb
pop
rcr
imul
sub
pop
add
data16
aam
ja
addb
addr16
jmp
arpl
addb
pusha
in
jno
fdivrp
dec
nop
xchg
fstpl
add
dec
lock
fistps
scas
out
adcl
pop
mov
int
add
ss
in
sub
imul
outsl
lock
add
ljmp
pusha
repnz
pop
fldcw
lock
dec
add
fisubl
jmp
add
cmp
sbb
xchg
inc
add
add
cmpsb
and
out
pop
std
in
add
in
sub
jmp
xchg
add
jmp
or
push
testl
std
mov
lcall
sti
movsl
in
inc
out
imul
call
push
sub
icebp
pop
adc
jmp
jp
aas
push
xchg
xor
add
pusha
aam
push
movsb
add
mov
fs
mov
dec
clc
pop
xor
cmp
add
pusha
aam
sbb
pop
pop
push
xor
pop
cmc
push
sti
sub
pop
sbb
incl
lar
adc
jae
popa
and
scas
aam
cli
xchg
mov
testb
pop
xchg
nop
sti
pop
test
and
add
adcb
mov
mov
cwtl
idiv
mov
scas
imul
xchg
cmpsl
lods
jo
test
jae
add
fnsave
pop
jp
jb
jp
add
lods
imul
xchg
sti
push
add
ja
insb
mov
pop
lods
lea
or
inc
add
fnsave
outsb
cmpsl
mov
or
clc
ja
insb
hlt
jg
bound
dec
xor
loope
bound
add
fiadds
icebp
pusha
add
test
aas
pop
sub
jb
sub
loopne
sbb
fbld
and
out
sti
call
jecxz
jb
inc
loope
jb
addb
arpl
jmp
inc
jg
in
dec
xchg
fucom
incl
lcall
jle
shlb
lahf
ret
fisttpll
push
inc
dec
out
dec
cmp
pusha
fldcw
in
sub
add
fcomps
in
pop
xchg
and
xchg
dec
cld
imul
add
or
inc
cld
or
lock
xchg
incl
adc
push
lock
loope
add
jmp
flds
xchg
add
in
lret
aam
add
shll
idiv
rorb
sub
ljmp
sahf
loopne
mov
vmovd
in
mul
add
fcompl
enter
stos
popa
in
ljmp
mov
cmc
pop
mov
les
lcall
pusha
jnp
cmc
pop
jne
or
mov
ss
mov
popa
inc
mov
jo
push
adc
js
popa
add
es
add
or
std
inc
adc
add
add
sub
or
or
or
nop
test
rcrb
sub
jmp
or
inc
add
jns
jne
adcb
test
sti
subb
fisttpl
add
push
outsb
js
imul
push
mov
pusha
add
mov
ret
jne
cltd
push
jae
mov
jnp
cltd
add
aas
mov
inc
cltd
jp
gs
pop
arpl
lcall
js
jb
je
add
movsb
bound
pop
jne
fcmovnb
add
push
pop
xchg
pusha
outsl
sub
push
bound
xlat
imul
call
sbb
movsl
arpl
xlat
imul
in
pop
inc
push
mov
xor
data16
jb
pop
or
out
adc
decb
icebp
inc
pop
xor
pusha
std
adc
ljmp
sti
push
call
ljmp
and
jb
enter
roll
aas
in
mov
pop
shl
jb
and
push
xchg
aad
xchg
aad
pusha
xchg
mov
jno
addb
arpl
cmpsb
fimuls
jl
call
fiadds
add
loopne
sbb
add
stos
mov
adc
jl
es
jp
add
jl
lea
imul
add
cld
negl
sub
push
in
lea
ret
movb
out
sub
repz
repz
std
or
mov
add
loopne
loop
push
imul
ret
or
std
adc
pop
jmp
add
dec
cs
aad
roll
stos
ret
iret
mov
addr16
mov
imulb
pop
popf
mov
or
inc
add
jg
data16
pop
add
int3
pop
jne
sub
pop
ss
addl
pop
inc
stc
insb
dec
xor
addr16
add
inc
inc
xor
pusha
push
inc
sbb
xchg
popa
into
or
decl
mov
add
xor
or
cmp
addr16
idiv
test
fwait
popa
imul
xchg
cld
jns
gs
jae
mov
mov
lret
js
push
mov
push
add
jg
jb
jb
or
aam
gs
mov
pop
data16
mov
ja
js
outsb
cmp
cmpsl
add
push
jb
push
dec
xchg
push
je
jle
jae
addb
arpl
out
imul
ficomps
addb
pusha
inc
repnz
jl
jmp
jle
in
push
mov
pop
add
dec
xor
add
pop
icebp
push
pop
bnd
or
pop
push
pop
icebp
push
pop
repnz
add
jno
pop
jb
ret
adc
push
and
push
bound
aad
lret
lret
lods
fnstcw
lock
in
and
add
push
add
in
es
loop
add
in
mov
add
cli
lret
push
scas
ljmp
leave
out
cmp
mov
icebp
push
clc
xchg
fisubrs
lcall
mov
add
add
fdivrp
and
add
xlat
xchg
in
add
jmp
push
and
add
push
idivb
incb
xor
mov
loope
adc
cmp
insb
and
inc
stc
insb
adc
add
or
data16
sub
add
add
data16
outsl
hlt
cld
push
int3
add
add
addr16
or
mov
hlt
add
pop
lds
mov
mov
sub
pop
xchg
mov
lea
incl
out
data16
lea
mov
imulb
mov
inc
xor
insb
pop
pop
jmp
inc
imul
jb
fs
jae
pop
je
push
bound
outsl
outsb
addl
bt
outsl
jl
push
hlt
mov
out
fdivl
arpl
mov
pop
outsl
cld
inc
pop
outsb
pushf
mov
xor
popa
clc
mov
add
fdivl
jb
jns
add
xor
outsb
pop
jp
push
bound
add
mov
loopne
bound
push
mov
aam
outsb
xchg
xlat
loop
mov
add
iret
fldenv
out
idivl
imul
inc
jge
fimuls
xchg
jmp
mov
aas
fildll
ss
repnz
cmp
add
bound
push
stc
jb
push
loope
cld
push
add
aaa
fildll
pop
jmp
std
fmuls
or
dec
jecxz
cld
out
mov
sub
ret
loope
cld
cmp
cmp
sub
xor
and
cld
push
lds
adc
in
ficompl
out
sub
out
add
push
cs
out
push
mov
ljmp
cltd
out
sbb
sbb
inc
add
cs
jge
cmc
sub
add
mov
push
inc
add
cmp
or
xchg
add
add
add
sbb
add
xor
arpl
popa
lahf
add
adc
jno
iret
std
jo
adc
dec
add
test
scas
pop
sbb
icebp
lock
lock
into
subps
popa
inc
add
popf
and
ja
mov
out
mov
and
popa
mov
and
imul
add
jl
jne
popf
gs
movsb
jo
mov
idiv
push
fidivrl
push
push
movsb
imul
pop
add
push
jne
sahf
gs
movsb
jo
ja
inc
outsl
push
cmpsb
push
insb
fidivs
imul
outsb
adc
mov
popf
xlat
mov
clc
mov
pop
jno
jb
jbe
jae
pushf
jae
add
jo
push
mov
mov
repnz
adc
push
adc
insb
jmp
pop
bound
fisubrs
push
stc
dec
int
fisubs
push
fisubrl
fstpl
mov
push
mov
iret
in
jno
in
jmp
jno
loopne
xchg
jo
jecxz
imul
clc
js
sahf
xchg
icebp
bound
repnz
pusha
inc
inc
add
xor
lock
lock
inc
fsts
ss
mov
cli
or
push
imulb
or
mov
cli
or
sub
add
fsubs
out
es
clc
mov
pop
inc
hlt
mov
testb
add
es
clc
mov
adc
mov
stc
rolb
xlat
mov
sub
ret
fildll
repz
out
xorl
into
mov
push
sarb
data16
and
popf
mov
pop
mov
es
jnp
sti
pop
lcall
jmp
xor
popa
insb
add
sub
insb
inc
aas
cmc
pop
sbb
insl
inc
sbb
cmp
and
js
lea
sub
jno
and
insl
and
or
pop
or
pop
lcall
push
cld
outsl
fdivrl
imulb
hlt
dec
jmp
or
push
insb
sahf
jne
gs
mov
push
dec
aad
jb
repnz
jmp
inc
popa
jae
add
inc
popa
jae
cltd
popa
je
aad
inc
lea
push
fs
mov
push
popa
outsl
popf
push
data16
fs
jbe
imul
jae
lods
idiv
gs
popa
jmp
xor
addr16
popa
out
inc
add
push
popa
scas
mov
fldt
aas
cmp
arpl
repnz
inc
add
arpl
jno
cmp
add
push
loope
incl
arpl
dec
sar
jne
add
loope,pn
incl
iret
call
std
dec
ret
sbb
push
mov
daa
icebp
dec
bound
ret
mov
in
xchg
int
outsl
adc
jb
jo
inc
shl
add
mov
imul
sar
fstp
roll
clc
lret
fisttpl
int
daa
add
in
or
cmc
inc
and
ficoms
cli
mov
ss
add
mov
repz
adc
loop
lock
or
mov
enter
shl
cs
fnstenv
jecxz
icebp
and
jns
cmp
add
add
call
jecxz
icebp
sub
mov
out
sbb
jl
cs
fsts
jecxz
icebp
sbb
test
pop
or
mov
test
mov
inc
int3
mov
dec
jmp
lea
inc
xchg
push
add
pusha
sub
sahf
hlt
jo
mov
sub
add
jge
shll
insl
pop
and
jb
push
add
aas
icebp
push
aas
inc
mov
jno
or
add
push
add
jno
adc
sbb
add
addr16
outsb
add
data16
mov
addb
jbe
push
mov
gs
mov
call
mov
inc
push
add
mov
shl
push
insb
mov
xlat
ds
insb
out
jo
fisubrl
jnp
idiv
or
pop
dec
mov
push
push
pushf
xchg
jo
xchg
mov
cmp
push
push
jae
arpl
jp
add
xor
cs
into
fsubs
addb
jg
fildll
bound
aad
add
int
dec
ljmp
lock
cmpsb
mov
pop
inc
jb
adc
int3
bound
dec
repnz
repz
push
loope
test
jb
ljmp
ja
jb
push
dec
icebp
jno
fimuls
pop
mov
scas
lret
dec
ret
pop
fadds
mov
adc
mov
jno
test
or
jns
adc
movsb
fsts
add
and
iret
lcall
aad
pop
hlt
mov
push
add
out
das
fldcw
aad
add
mov
xchg
jp
add
ljmp
add
xchg
ficoms
hlt
mov
repz
imul
jp
add
add
lock
filds
fldcw
aad
hlt
xor
mov
aas
jmp
in
add
out
pop
xor
adc
insl
sbb
adc
adc
pop
repnz
es
pushw
jae
shr
stos
xchg
hlt
jo
aad
pop
push
jmp
xchg
sbb
popf
lods
push
data16
xchg
clc
insb
addb
divb
arpl
pop
lea
pop
mov
imul
data16
dec
cmp
pop
dec
sbb
add
fbstp
jbe
adcb
lea
stc
fnsave
dec
mov
inc
jb
jle
gs
mov
inc
imul
fcoml
je
movsb
mov
or
lcall
lahf
idiv
pop
fists
iret
cs
arpl
cs
outsb
jnp
test
int3
subb
nop
jae
jnp
stc
add
subl
aam
push
test
fsubr
add
out
sahf
mov
cld
sub
xorl
pop
adc
add
cmpsb
mov
fdivp
arpl
add
ror
push
mov
movsl
ficoms
xchg
fldenv
addb
bound
scas
inc
adc
add
inc
lods
pop
add
add
jmp
pop
lock
lock
add
addr16
jno
pop
call
dec
mov
sub
pushf
or
pop
out
mov
push
add
mov
sbb
cld
cmp
cltd
push
cmp
xchg
add
jmp
movsl
or
lds
or
xchg
out
in
out
jl
push
mov
sbb
out
in
mov
xlat
mov
add
in
sarl
in
mov
adc
popf
fldcw
pop
xchg
aam
jbe
add
std
cltd
out
jmp
in
jns
incb
sahf
popa
mov
xchg
push
sbb
aas
add
popa
into
add
out
sbb
xor
pop
sub
adc
push
sti
and
fs
sub
dec
add
pushl
daa
adc
data16
les
lea
jae
mov
dec
xlat
mov
gs
cli
insb
lods
rolb
jmp
mov
test
pop
mov
mov
pop
nop
jle
insb
test
add
test
add
flds
jns
mov
mov
idiv
cmp
inc
mov
push
push
push
test
or
sbb
cmp
gs
dec
xorb
jnp
arpl
push
jae
adcl
xchg
add
mov
jne
test
stos
mov
cmpsb
mov
movsl
test
out
inc
outsl
lods
mov
xlat
fmuls
inc
ret
mov
xlat
xchg
push
jb
push
mov
std
dec
jmp
inc
mov
mov
xchg
xor
mov
stos
fsubrs
mov
pop
mov
les
mov
jmp
scas
out
test
mov
pop
adc
add
out
jl
fcoms
loope
cmp
aad
add
outsb
jmp
push
inc
mov
outsl
cs
out
and
into
imul
rcrb
jmp
imul
out
or
scas
xlat
or
test
or
jge
idiv
jp
movsl
cld
mov
mov
jp
dec
jae
add
lcall
call
mov
dec
ret
and
add
xchg
add
movsb
jmp
outsb
add
add
jae
add
rolb
add
and
cmp
stc
in
es
mov
int3
inc
in
shr
sbb
add
fnstenv
in
ss
add
int3
call
and
test
cmp
aas
adc
inc
lods
and
pop
test
sbb
out
pop
pop
adc
jmpw
add
add
sbb
adc
pop
jmp
std
std
dec
sbb
std
add
movsl
sbb
xor
vpcmpgtb
popa
scas
add
add
add
xchg
out
lds
mov
mov
inc
push
ret
mov
sbb
mov
idiv
lods
dec
gs
xchg
aad
add
ja
arpl
xchg
idiv
fcomps
jns
jo
fstp
add
jp
jae
mov
jmp
fstps
mov
pop
jbe
aad
add
inc
test
inc
xlat
dec
jo
xchg
add
bound
jecxz
pop
gs
pop
jb
fdivrl
outsb
int3
mov
xchg
mov
dec
jbe
xchg
call
imul
outsl
pop
mov
pushl
xor
testw
das
shll
push
sar
gs
into
insl
shl
and
dec
jp
aas
mov
sbb
in
mov
mov
cld
punpckldq
fbstp
movsl
fbstp
rcr
arpl
jle
aas
jg
ret
fnsave
dec
test
jecxz
inc
iret
cld
dec
pop
aam
dec
sub
std
ret
add
mov
or
ret
add
lcall
or
aad
outsl
in
jmp
xchg
shl
in
loopne
ret
in
mov
jmp
jmp
repnz
jmp
shl
mov
mov
add
jmp
add
add
in
cmp
call
xor
sarb
cmc
rorl
ficoms
pop
add
or
pop
xlat
xchg
cli
pop
fistl
add
popa
flds
jmp
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
add
flds
add
mov
flds
add
flds
add
flds
add
flds
add
flds
add
add
jnp
add
mov
add
mov
add
jnp
add
mov
xchg
add
add
sub
flds
add
cwtl
add
flds
add
flds
add
flds
add
cwtl
add
sti
fadds
add
flds
add
add
sti
fadds
add
add
int3
push
inc
sbb
add
bound
add
bound
add
bound
dec
notl
add
bound
add
add
bound
std
jmp
dec
mull
add
bound
add
add
jmp
add
add
add
add
bound
add
bound
dec
std
push
addb
bound
pop
or
add
daa
js
sbb
add
out
fsts
inc
gs
add
out
fnstcw
add
out
bound
jnp
sbb
add
out
bound
call
incl
lods
mov
call
inc
and
sub
pushf
sbb
push
hlt
and
sub
cmp
js
sbb
mov
out
add
sbb
sub
pop
adc
ret
push
dec
pushf
lahf
scas
and
adc
xchg
xchg
jns
nop
out
ds
push
inc
inc
xor
pop
push
out
flds
inc
in
popf
insl
push
xlat
push
adc
or
sub
loope
xor
and
add
stos
and
leave
loope
and
add
pushf
repnz
lret
js
cmpl
out
xor
hlt
or
add
loope
imul
inc
xor
mov
xor
inc
dec
aam
push
stos
dec
cmp
xchg
pop
add
and
push
push
es
ljmp
pop
inc
pminub
sti
clc
repz
inc
mov
outsb
push
lcall
test
add
inc
adc
aaa
adc
aas
lret
xlat
test
sub
aas
add
xchg
pop
in
mov
pop
pop
int3
scas
out
aas
add
add
fidivrs
stos
out
mov
scas
mov
mov
jmp
adcl
mov
fists
rorl
fdivrl
mov
ret
lds
in
leave
gs
push
pop
test
cmpsl
dec
shr
out
fld
movsb
pop
loope
mov
incb
jp
push
mov
lea
test
daa
out
ja
xchg
fisttps
adc
jno
test
dec
test
mov
xchg
pop
cwtl
xor
xchg
or
jecxz
js
cwtl
ret
jbe
flds
movsl
enter
imul
movsl
mov
add
popa
movsb
and
cltd
add
in
imulb
cmp
cli
aam
mov
das
xor
jae
mov
scas
sub
pop
lods
or
adc
inc
mov
sbb
add
testb
xchg
mov
bound
shrb
push
pop
push
jno
mov
fistpll
arpl
in
jge
xchg
xchg
std
mov
jmp
sub
add
sbb
jmp
nop
sbb
jmp
popa
flds
jmp
jo
add
popa
flds
jmp
popa
flds
stc
push
sbb
jmp
popa
flds
add
fiaddl
add
push
add
cmp
add
cmp
add
lahf
imul
sti
flds
add
flds
add
sub
add
fiaddl
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
mov
add
jnp
add
jnp
add
mov
add
jnp
add
jnp
add
add
jb
add
add
bound
add
and
bound
add
add
bound
add
and
jb
add
add
bound
add
and
jb
add
add
bound
add
and
jb
add
add
bound
add
and
jb
add
add
bound
add
icebp
inc
bound
add
add
bound
add
out
inc
bound
add
bound
add
out
add
out
add
xor
add
out
add
aam
mov
add
out
fpatan
in
mov
add
out
fsts
out
and
out
add
out
out
and
out
add
add
and
add
out
add
out
and
add
popa
flds
jmp
popa
flds
movsb
jno
add
popa
flds
jmp
popa
flds
imul
jmp
popa
flds
jmp
outsb
pop
add
popa
flds
jmp
popa
flds
sqrtps
add
popa
flds
jmp
add
add
popa
flds
jmp
popa
flds
js
pop
add
popa
flds
jmp
popa
flds
add
add
popa
flds
jmp
mov
add
mov
add
jnp
add
dec
add
andb
add
add
dec
add
fisubs
add
cmp
add
or
add
add
inc
inc
add
aad
add
aad
add
inc
add
repnz
add
inc
add
repnz
add
cmp
cmp
pop
cmp
inc
add
cmp
fistpll
inc
add
cmp
das
cmp
pop
cmp
xchg
cmp
bound
bound
aam
inc
aam
inc
bound
inc
bound
inc
bound
pushf
inc
bound
push
pushf
inc
ficomps
inc
fwait
inc
bound
add
bound
add
lea
jmp
pushf
inc
bound
popf
inc
bound
popf
inc
bound
popf
inc
bound
popf
inc
bound
pushf
inc
bound
pushf
inc
out
pushf
inc
ljmp
bound
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
add
fiaddl
add
fiaddl
add
fiaddl
add
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
fiaddl
add
add
cmp
add
cmp
add
dec
fiaddl
add
add
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
flds
add
flds
add
fiaddl
add
fiaddl
add
flds
add
flds
add
flds
add
flds
add
jo
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
add
add
bound
add
add
bound
add
repnz
cmp
sbb
mov
imul
in
pop
jb
add
fimull
sbb
jb
incl
mov
inc
xor
fldt
es
jmp
mov
aad
xchg
add
fistl
pop
test
mov
adc
sbb
test
test
rcll
push
test
jae
test
jae
mov
sbb
test
cmp
test
fistl
stos
repz
stos
mov
adc
stos
fwait
adc
stos
xchg
adc
stos
jnp
jle
push
adc
fisubrs
jnp
mov
test
add
add
xor
jae
xor
push
lds
lds
xor
push
adc
xor
jae
xor
push
xor
inc
xor
push
and
xor
jae
xor
jo
xor
push
lds
lds
xor
push
adc
xor
add
xor
push
xor
inc
xor
outsl
enter
enter
enter
enter
enter
lret
mov
lret
out
lret
jg
cmp
jg
dec
xor
leave
pop
xor
lret
dec
jl
dec
mov
leave
pushf
xor
enter
leave
mov
xor
leave
fdivl
leave
in
xor
aas
lret
cld
xor
lret
or
pop
lret
sbb
out
lret
dec
cmp
dec
dec
xor
scas
lret
jg
jl
faddl
xchg
das
push
pop
movsb
aaa
faddl
mov
xor
les
xchg
pop
in
cmp
hlt
je
add
pop
add
insb
xchg
add
je
add
insb
mov
inc
push
mov
push
fs
jl
je
hlt
add
sub
add
xor
add
testb
mov
add
mov
add
adc
push
add
xor
jle
inc
push
jbe
push
dec
pop
add
sti
xchg
adc
adc
sti
and
mov
sti
jns
cld
sti
mov
in
mov
sub
sbb
xor
sbb
cld
sti
add
add
sub
insb
cld
fsts
push
cld
stc
adc
leave
adc
leave
adc
cltd
adc
cltd
adc
mov
inc
cld
imul
aam
jns
cld
cld
mov
in
mov
lods
cld
cltd
adc
leave
adc
fsts
push
std
stc
adc
inc
pop
test
sub
push
and
mov
testb
add
push
cmp
out
cmp
fcomip
cmp
iret
adc
xor
mov
ret
cmp
cmpsl
arpl
pop
lahf
jae
inc
xchg
cmpl
xchg
cmp
jg
cmp
inc
cmp
push
cmp
fs
fstpl
add
dec
adc
mov
mov
cmp
sub
cmp
add
push
lcall
push
mov
cmp
push
ljmp
push
or
push
sbb
fldenv
mov
flds
fsts
fldenv
fnstenv
flds
pop
fldenv
dec
fld
cmp
cmp
ftst
cmp
fxtract
cmp
push
or
cmp
aas
push
cmp
call
cmp
outsl
idivl
int3
cmc
mov
cmc
fwait
push
pushf
cmc
stos
dec
add
mov
aas
xchg
neg
aaa
sbb
jmp
and
sti
daa
dec
add
xor
sbb
faddl
sub
inc
add
or
dec
jl
add
add
add
decl
add
stos
dec
add
mov
cmp
add
xor
jmp
movsb
sti
and
add
fdivrp
sub
fldcw
add
adc
add
adc
add
adc
add
adc
ljmp
adc
mov
jmp
push
call
add
jecxz
add
int3
repz
aam
jns
sbb
sbb
and
or
or
or
hlt
hlt
sbb
pop
cmc
inc
cmc
jmp
or
cltd
or
dec
or
push
loopne
int
lock
xor
xor
xor
xor
xor
xor
shlb
adc
dec
add
jo
xchg
repz
popf
repz
xor
repz
xor
sarl
xor
rcr
xor
shr
xor
mov
xor
mov
xor
mov
xor
nop
iret
xor
pop
xor
outsl
xor
jo
xor
jo
xor
mov
ljmp
dec
or
dec
sbb
pop
dec
sub
dec
cmp
dec
dec
xor
dec
pop
xor
dec
push
xchg
dec
jp
xchg
xor
dec
lcall
push
mov
xor
push
fidivl
push
ljmp
dec
or
xchg
dec
sub
xchg
xor
ja
push
xchg
dec
jp
pop
dec
mov
xlat
dec
stos
xor
xor
das
add
fistl
adc
sti
xchg
cmp
or
in
sub
cmp
dec
insb
test
pop
push
insb
in
imul
push
mov
out
fwait
xor
in
stos
sub
in
mov
sub
in
fistl
in
sti
xchg
cmp
or
sub
sub
in
cmp
jne
jmp
insl
add
pop
push
in
jmp
dec
push
in
jnp
mov
in
fwait
xor
or
cltd
or
cmp
dec
hlt
dec
or
dec
or
sti
pop
adc
sti
pop
adc
sti
mov
aam
imul
movsb
sti
mov
adc
adc
adc
adc
test
sbb
movsb
cld
mov
adc
pop
adc
cld
mov
fnstenv
add
flds
repnz
pop
in
popa
or
bnd
add
nop
cld
sub
lods
jo
sub
int
mov
sub
push
push
insb
lea
jne,pn
mov
xor
cs
add
push
imul
icebp
fadds
pop
data16
and
and
shl
cmp
in
xor
icebp
in
jmp
or
repz
xor
aad
xor
sub
fwait
xor
test
ss
fwait
pop
aaa
add
push
notl
ds
push
ds
fidivrs
rsqrtps
xchg
jg,pt
push
aas
push
push
push
aas
add
push
dec
aas
add
sbb
and
fistl
aas
add
mov
push
cmpb
push
mov
adcl
dec
push
stos
aas
xor
aas
lret
push
mov
aas
stos
push
idiv
lret
mov
add
rorl
xor
dec
adc
stos
dec
sbb
xchg
dec
and
bound
repnz
repnz
in
mov
push
or
mov
xor
xor
fbstp
pushf
in
out
or
out
xchg
or
notl
loopne
sbb
out
and
in
dec
jo
in
push
jo
in
pop
push
pop
in
arpl
jmp
push
pop
in
jae
lods
out
xchg
xor
cmpsl
xor
xor
nop
pop
in
mov
nop
jl
iret
add
fs
xlat
jno
mov
hlt
mov
call
out
popa
add
loopne
jno
enter
mov
lock
aam
aad
out
aad
fs
in
fs
aad
push
out
aad
dec
out
sbb
adc
inc
push
sbb
cmp
adc
lea
js
jmp
push
dec
out
cmc
add
lock
add
out
jne
dec
cld
enter
jmp
adc
stc
cmpsb
cli
jae
add
mov
or
inc
test
push
cmp
jbe
push
cltd
mov
lods
mov
cmp
jns
cmp
insl
shll
push
xor
push
xor
pop
or
xor
push
pop
xor
test
add
mov
sub
xor
sub
xor
sbb
fisttps
ljmp
aaa
mov
cwtl
cmpsl
out
sahf
ss
lcall
aam
ss
int3
into
add
inc
xchg
ds
inc
ret
movsb
inc
out
lcall
aas
jb
push
aas
fs
js
fs
mov
adc
cwtl
aas
and
test
and
mov
aas
add
add
or
add
dec
inc
add
pop
inc
sbb
inc
inc
adc
jo
xor
xor
xor
inc
cmp
xor
inc
mov
test
inc
pushf
xor
movsb
xor
inc
mov
inc
inc
lds
daa
inc
loop
add
dec
repz
xchg
mov
mov
jae
repnz
repnz
aas
lock
lock
imul
push
shr
scas
push
dec
out
dec
xchg
lock
in
sub
out
xor
out
sub
xchg
insl
lea
jecxz
fcomip
sub
cli
cmp
push
cli
imul
ret
hlt
xor
sti
jnp
mov
lahf
dec
xchg
stc
test
cmp
cli
mov
fldcw
cli
add
pcmpeqd
decb
push
stc
dec
push
pop
clc
hlt
or
ljmp
or
testb
dec
hlt
lea
inc
fsts
fld
repz
div
icebp
or
lret
repz
or
repnz
or
repnz
or
or
or
cmc
or
repnz
or
icebp
mov
or
lock
popf
out
fisttpll
add
add
sub
decl
das
inc
call
sub
outsl
cs
mov
cmpsb
mov
push
mov
fwait
cmp
mov
cmp
jle
cmp
jns
cmp
cmp
jl
cmp
je
cmp
aas
xor
push
xchg
xor
add
popa
flds
xchg
xor
xor
cmp
xor
xor
bound
dec
imul
inc
flds
icebp
popa
flds
add
xor
inc
sbb
fadds
cmp
dec
mov
add
add
or
inc
xchg
aaa
ljmp
cmp
xor
cmp
xor
sarl
aaa
sbb
cmp
mov
gs
dec
insl
cmp
cmp
add
jge
ljmp
cmp
ss
cmp
ss
cmp
movsl
cmp
lods
cmp
ss
xorb
cmp
lds
ss
fxam
in
inc
out
ds
hlt
ss
cld
cs
add
inc
out
lahf
fxam
adc
shl
sbb
fxam
and
inc
out
add
in
ja
in
outsl
stc
in
addr16
dec
pop
cltd
in
push
shl
pop
dec
fxam
fs
inc
out
aas
fxam
je
mov
jl
mov
in
lahf
inc
lock
dec
lock
shl
sbb
jmp
lock
dec
lock
jno
cmp
fnstenv
icebp
cmpsb
pop
mov
mov
mov
cmpsb
pop
xchg
icebp
xchg
jns
add
pop
imul
out
jns
out
jno
testb
icebp
out
xchg
icebp
push
pop
jns
push
pop
jno
testb
icebp
out
mov
cmpsb
push
pop
lock
inc
call
add
fnstenv
clc
daa
push
jns
jno
fucomip
push
add
jmp
add
ljmp
mov
sar
xchg
in
inc
add
pop
add
push
xor
mov
adc
aaa
sbb
or
jmp
popa
flds
pop
icebp
jb
daa
icebp
pop
xor
xchg
xor
rcr
xor
jnp
xchg
lret
sub
mov
cs
scas
lods
cs
mov
das
jle
test
mov
sub
nop
fstpt
in
or
xor
cmp
pop
dec
fdivl
adc
cmp
cmp
cmp
and
xchg
lahf
das
loop
lret
cs
cmp
xor
cmp
xor
cmp
dec
xchg
cmp
dec
mov
cmp
dec
or
mov
cmp
cmp
in
dec
fstpt
les
cmpb
ss
stos
shlb
xor
sub
inc
xor
aas
push
xchg
aas
sub
cmpsl
aas
ret
aas
divb
idiv
jnp
add
sub
add
push
inc
sbb
addr16
sub
xorl
mov
in
icebp
out
jb
in
sbb
in
dec
push
push
in
jge
int3
in
test
push
shr
out
jmp
in
xor
std
xor
lock
imul
nop
push
rep
add
clc
out
xchg
mov
lock
out
sbb
out
clc
inc
outsb
xchg
clc
jns
push
stc
mov
stos
clc
add
out
inc
dec
or
push
aaa
mov
in
or
sub
out
xchg
fnstenv
idivb
or
add
jmp
add
ljmp
xlat
jmp
dec
jmp
add
sub
sbb
shr
ds
movsl
call
mov
sub
sar
call
out
pop
add
out
pop
add
sti
out
jne
in
out
and
cmp
daa
add
add
out
or
imul
add
fs
xor
mov
xor
pushf
add
test
sbb
cmp
sbb
inc
xor
fimuls
xor
cld
clc
xor
hlt
or
int3
or
sub
xor
mov
mov
xor
adc
mov
xor
jmp
pop
flds
in
xchg
cmc
xor
add
xor
mov
out
add
xor
dec
rorb
xor
dec
shlb
dec
ss
sbb
aaa
ret
dec
aad
push
in
cmp
aaa
adc
xor
fwait
sub
lods
cmp
sub
outsl
cmp
cs
cmp
sub
jge
fildll
stc
cmp
test
add
cs
cmp
cs
cmp
aaa
inc
cmp
cmp
cmp
push
fisubrs
cmp
ljmp
inc
call
lcall
ret
jl
add
repnz
xchg
cmpsb
icebp
sub
jmp
jo
in
and
outsb
dec
out
push
adc
rorl
push
push
lods
repnz
cmp
cmp
mov
out
cltd
sub
and
aam
xor
in
ljmp
xor
add
std
jmp
repz
push
push
repnz
push
fldcw
notb
jb
or
inc
cmc
sub
lret
out
jmp
add
out
add
out
adc
out
adc
out
outsb
pop
icebp
sbb
leave
lock
xchg
in
add
push
out
rolb
in
or
and
pop
add
ljmp
push
out
pusha
add
in
ret
add
in
xchg
std
xchg
out
std
push
call
aad
outsb
out
std
nop
out
cld
lcall
cld
add
test
xor
jp
ss
jp
ss
mov
mov
jp
ss
add
add
push
into
xor
in
xor
dec
cld
xor
xor
xor
arpl
mov
pop
xor
test
sub
sub
adc
xor
icebp
dec
xor
lock
f2xm1
into
das
shl
repz
mov
rclb
das
dec
iret
das
push
mov
xor
dec
xor
inc
inc
mov
xor
inc
mov
shlb
fadds
xor
inc
add
mov
xor
inc
ja
or
xchg
xor
inc
int
fs
and
push
dec
xor
sbb
dec
sub
dec
and
int
sub
shrb
cmp
cmpsb
cmp
sub
add
sbb
sarl
pop
xor
cmp
jns
aaa
cmp
xchg
jmp
jo
mov
xchg
imul
fcomps
jmp
dec
sub
inc
inc
addr16
ds
mov
add
dec
xchg
jmp
xlat
xchg
xor
add
push
icebp
mov
in
je
out
insl
xchg
jne
dec
out
insl
jmp
ficomps
faddl
dec
fstp
add
pushf
cmp
xor
add
in
icebp
xchg
sub
or
fldenv
pop
repnz
pop
leave
repnz
lock
push
stc
lock
and
or
ss
pop
push
outsl
icebp
jns
in
out
ss
ss
jle
inc
out
jl
fsubrp
xor
or
faddl
enter
movsl
jmp
add
jmp
add
lock
in
daa
add
arpl
fsubr
jb
lret
ljmp
dec
jmp
lcall
lret
jmp
jmp
insb
adc
out
std
add
les
test
xor
mov
outsl
ss
popa
flds
push
xchg
jb
lcall
xor
jae
xor
add
xor
call
xor
push
and
cltd
push
adc
mov
xor
cmp
out
shrl
xor
sub
mov
mov
sub
sbb
cmp
mov
add
sub
incl
push
cmp
inc
cltd
cmp
inc
mov
cmp
sbb
cmp
lods
cmp
cmp
sarl
cmp
jecxz
mov
leave
cmp
ds
loop
test
cmp
aas
jnp
pushl
or
xor
or
xor
push
dec
xor
push
cli
xor
push
push
xor
or
insb
xor
bswap
xor
into
sbb
sbb
add
push
into
push
repz
mov
fldcw
xchg
sbb
mov
cmc
ja
ficoml
mov
je
fld
insl
test
loop
ss
pop
jo
xor
dec
data16
mov
mov
mov
and
loopne
popf
cmp
sub
loope
test
cmp
push
int3
das
jb
ror
add
lret
jne
pusha
iret
mov
sahf
into
sub
aam
cmp
test
sbb
pop
fsubs
in
or
in
hlt
xlat
aam
lock
out
mov
sub
inc
fidivrl
out
push
ficoml
repz
mov
hlt
or
push
hlt
lahf
loop
imull
inc
arpl
sub
fld
rcr
jmp
cmp
aam
ljmp
fchs
lock
jae
sbb
jle
mov
fdivrl
repnz
xor
cwtl
fildll
add
sub
xor
and
xor
sbb
ss
xor
add
flds
xorb
xor
mov
sub
lods
xchg
lcall
jl
dec
sub
lcall
sub
sub
lods
int
push
xchg
lahf
sub
mov
add
pop
sub
xor
sub
sub
sub
xor
sub
sub
sub
adc
sub
sbb
das
and
jge
int3
xor
inc
cmp
adc
cmp
adc
cmp
push
arpl
int
lds
push
adc
and
sti
cmp
add
test
mov
adc
mov
fldl
add
or
mov
loopne
into
xor
push
xor
or
repnz
xchg
xor
adc
xor
lods
adc
xor
leave
xadd
bound
fldt
push
fistl
dec
lret
inc
dec
test
ds
pop
aaa
dec
loope
das
into
fisttps
and
aam
pushf
ja
imul
rolb
nop
jne
xlat
insl
pop
xlat
jmp
dec
add
bound
sbb
int3
cmp
int3
push
xor
int3
mov
mov
cmpsb
xor
fdivl
mov
sbb
leave
lret
jp
ror
xchg
xchg
int3
int3
jae
in
roll
jo
shll
out
shll
call
out
ror
out
rclb
out
sar
out
fadds
jl
aad
inc
xlat
ret
fdivs
rcr
jecxz
pop
fadds
in
inc
fdivr
in
rcl
in
pop
jnp
cmp
jmp
nop
jmp
aam
ljmp
push
lock
lods
lock
outsb
out
add
add
repz
fiadds
repnz
aad
dec
fldl
jmp
data16
adc
out
xor
adc
outsb
push
xorl
sub
adc
sti
das
hlt
xor
das
scas
xor
das
xor
add
cmp
std
adc
outsl
mov
xor
mov
sub
adc
inc
sub
in
imull
add
mov
das
subb
cs
scas
adc
cltd
out
inc
xchg
mov
jp
push
cmp
mov
aaa
sub
cmpsl
aaa
add
adc
cmp
cld
cmp
adc
icebp
adc
adc
cmp
adc
stos
adc
cmp
adc
cmp
adc
xlat
cmp
add
faddl
add
add
xor
xor
or
xor
or
std
or
cmp
push
add
bound
aam
cwtl
adc
jnp
xchg
mov
mov
xlat
dec
jns
xlat
mov
aad
imul
aad
add
into
cs
and
addb
mov
ss
cs
sbb
push
flds
imul
xchg
push
fnstcw
xlat
stos
xchg
fmul
jg
xlat
in
ja
fs
jmp
imul
dec
nop
xlat
lds
out
cmp
fisttpl
lock
add
sbb
fldz
jno
or
out
add
pop
add
out
test
out
fucomi
mov
or
dec
rcrl
aam
call
test
aam
call
sub
imul
aad
jmp
aad
jmp
aad
in
xor
mov
ljmp
cld
ljmp
add
rorb
add
cmp
out
rcl
out
roll
jns
add
cltd
push
cmp
insb
cmp
mov
loop
out
add
cmp
das
jge
dec
sub
fidivl
nop/reserved
cmp
cmp
pop
or
imul
xor
add
xor
xor
cs
xor
adc
push
push
jb
aaa
mov
xor
scas
sub
fnstenv
std
das
stos
add
mov
xor
mov
xor
scas
xchg
xor
mov
cmp
inc
add
xor
sbb
dec
xor
or
xor
jg
addr16
jbe
or
and
pop
movsb
or
lds
imul
push
or
cmp
cmpsb
pextrw
cmp
push
sbb
rolb
ds
adc
aas
jnp
idiv
mov
fadds
add
or
xor
or
jbe
test
lahf
push
cwtl
mov
shll
adc
cltd
lds
std
aam
lcall
loop
xor
insl
jns
fld
jns
add
into
dec
popw
into
cmp
fstps
mov
xlat
dec
xchg
or
mov
pushf
cmp
into
test
in
inc
mov
bound
rolb
xchg
jg
dec
xchg
mov
jns
mov
mov
jb
int3
jmp
dec
ljmp
movsl
jmp
inc
shl
out
shlb
out
shlb
cli
iret
add
in
iret
jb
mov
sarl
in
sar
in
sarb
in
int
jecxz
int
jecxz
int
in
int
loop
into
aam
sbb
adc
icebp
fstpt
icebp
dec
fstpt
lock
fsubr
lock
jp
ret
fcoms
in
push
icebp
in
push
fdivr
in
add
lcall
jmp
add
add
mov
xor
add
stos
sahf
mov
gs
ds
mov
cmp
mov
xor
aaa
loope
imull
ret
pop
cltd
ss
mov
aaa
cmpsl
or
aaa
dec
xor
xor
stos
ss
xor
mov
push
ss
vmread
adcl
adc
and
icebp
xlat
add
pusha
flds
add
add
mov
and
aad
mov
repz
push
das
xor
popa
xor
pop
xor
push
ja
adc
xchg
xor
pop
xchg
xor
or
xor
or
xor
or
xor
or
leave
or
xor
or
xor
or
xor
xor
insl
xor
test
xchg
xor
or
xor
loopne
mov
sbb
xor
sbb
xor
sbb
inc
xchg
cmp
jl
jne
mov
jne
fldt
push
aas
lret
les
dec
les
mov
les
sub
repnz
bound
mov
ret
jnp
les
fadd
mov
imul
scas
pop
loop
fisttps
lds
inc
add
sbb
adc
outsb
ss
xchg
cs
rclb
out
sarb
out
shll
in
sarl
xchg
rorl
out
andl
add
mov
lea
call
add
fnstenv
xor
inc
xlat
lret
xlat
cmp
jnp
fs
ss
in
outsb
fcomps
in
aam
daa
out
es
mov
jno
je
addr16
in
shrb
out
arpl
mov
fsts
fucomi
popa
aad
jmp
jge
mov
xor
lods
cs
mov
sub
lods
inc
sub
adc
lcall
mov
inc
cmp
popf
mov
push
mov
xor
xchg
lret
xor
movsl
hlt
xor
xchg
push
aaa
mov
xor
xor
push
xor
ss
adc
imul
xchg
fildl
insl
data16
mov
ss
dec
jecxz,pn
mov
xchg
ret
xor
xchg
xchg
or
add
ret
or
or
xor
xchg
les
xor
or
xor
push
shlb
pushl
aaa
mov
adc
jns
icebp
adc
cmp
adc
loop
mov
cmp
adc
cmp
adc
cmp
adc
cmp
push
or
cmp
fadds
add
or
xor
cmc
xor
shlb
xor
int3
add
dec
adc
push
int
xchg
iret
imul
fdivrs
sti
xlat
les
mov
imul
imul
shrl
dec
pop
roll
inc
cmp
add
gs
cwtl
iret
jl
mov
lea
push
rcrb
mov
popl
std
xchg
les
insb
leave
popa
fs
jl
fldcw
icebp
loop
into
loop
into
sbb
xor
into
cmp
mov
iret
iret
jecxz
iret
out
pusha
fxch
shll
scas
roll
pop
aam
call
cmc
rcrl
aam
jmp
jmp
push
sar
out
shlb
jecxz
sti
in
cmp
jmp
es
in
jns
out
adc
out
inc
xlat
and
in
fadds
in
push
fmuls
ljmp
fistpll
rcrl
cmp
jmp
cmp
es
cmp
sbb
cmp
stos
mov
jae
pop
cmp
ficompl
xor
in
movsl
icebp
xor
popf
mov
lods
aaa
xor
push
pushf
and
jmp
data16
rorl
jns
jge
cmp
xor
xor
mov
inc
xor
sub
sbb
jge
mov
pushf
xor
add
xor
or
cmp
shll
xor
push
or
aaa
push
or
aaa
adc
or
cmp
or
test
cmp
push
in
lods
push
outsl
cmp
adc
repnz
xlat
adc
jnp
add
sti
aad
add
or
pop
xor
and
sbb
jg
or
loop
adc
pushl
movsb
or
xor
dec
into
and
ja
iret
pop
outsl
and
outsb
ja
iret
xchg
into
xchg
push
xchg
into
scas
dec
ficoml
lret
mov
cmp
push
cmp
shlb
leave
lds
lahf
pop
xor
gs
jge
in
sbb
les
push
les
adc
sub
lds
lds
dec
xor
add
std
jmp
rclb
add
ret
int3
pop
xor
int
xchg
cmp
push
xchg
fldcw
aad
ljmp
ss
dec
jmp
aad
jmp
mov
adc
mov
jno
shr
xchg
sbb
dec
add
ljmp
shr
mov
adc
in
iret
inc
in
iret
icebp
in
rorb
in
rclb
mov
out
shlb
out
rolb
dec
rcr
out
rcll
call
cmp
mul
jne
jnp
add
cs
cmp
es
jbe
dec
cmp
inc
cmp
sub
cmp
pop
test
xchg
cs
cmp
pop
dec
cmp
cmp
and
add
fdivl
add
and
stos
stos
push
xor
stos
daa
aaa
int
mov
outsl
cwtl
push
ss
pop
flds
icebp
xchg
iret
xor
xchg
mov
xor
mov
xor
pushf
xor
mov
add
add
sbb
push
or
xor
add
xor
pop
xor
xor
push
sbb
rolb
add
add
xor
push
inc
xor
push
popa
xor
push
add
lret
xor
sbb
imul
pop
or
ss
or
aaa
mov
adc
cmp
adc
push
adc
cmp
cmp
les
sub
dec
sub
jl
mov
cmpsl
add
imul
mov
fdivrs
hlt
js
lds
faddp
imul
mov
xor
mov
imul
mov
mov
sahf
sahf
mov
loope
mov
mov
sub
mov
jb
loope
lret
pop
xor
pop
push
pop
enter
fsts
int
out
pusha
fldcw
rorl
stc
rcll
jmp
or
mov
call
inc
aam
call
add
xchg
ljmp
jo
psrld
out
rolb
std
rolb
test
iret
sub
xchg
iret
ss
iret
push
in
rolb
or
sbb
arpl
pushf
sar
in
int
in
into
adc
js
out
jecxz
push
movsl
inc
cs
popf
cmp
nop
xchg
je
cwtl
lods
insb
cs
movsb
fs
pop
cs
adc
cwtl
sub
cmp
sbb
test
push
shrl
dec
sub
ret
xor
cmp
sahf
cmp
push
cmp
sub
jo
inc
cmp
sbb
js
insl
cmp
cmp
fwait
pop
cmp
fwait
adc
cmp
stos
add
cmp
push
adc
cmp
adc
cmp
cmc
cmp
adc
cmp
adc
cmp
and
cmp
xor
cmp
inc
cmp
jb
dec
cmp
push
cmp
pop
cmp
adc
adc
insl
cmp
jne
xchg
adc
jp
test
jb
lea
fimull
xchg
cmp
adc
mov
adc
sbb
adc
add
bound
shrb
int3
pop
jae
rol
push
pop
shlb
xchg
shlb
inc
insl
dec
push
push
aaa
pushf
sub
mov
xor
les
lods
leave
data16
xchg
lret
faddp
sub
xchg
push
jl
mov
mov
cmpsb
mov
lret
pop
cmp
fists
jecxz
xchg
mov
or
lock
dec
and
and
mov
test
fmuls
scas
fsub
mov
fnstenv
mov
shrl
push
sarb
int3
sti
aaa
dec
rcrb
fcmovbe
insb
cmp
in
dec
ds
rorb
ds
pop
ds
rol
ds
aam
aas
mov
jmp
mov
aam
inc
rcl
arpl
or
fnstcw
daa
lret
into
lret
jnp
popf
int
aaa
pop
int
cmp
fcmovne
fwait
into
add
mov
mov
jns
cmp
outsb
inc
cmp
addr16
les
cmp
push
outsl
cmp
dec
sbb
fistpll
out
xor
jmp
popa
flds
fsts
xorl
mov
jl
adc
add
das
xor
das
mov
push
lahf
xor
bound
push
push
jne
orl
and
and
sub
add
mov
shll
dec
shlb
cmp
aam
cmp
aam
cmp
cmp
clc
xlat
cmp
push
xlat
xchg
cmp
mov
cmp
dec
cmp
mov
rcl
cmp
cmp
je
add
lcall
mov
pop
add
ja
add
add
inc
xor
xor
pop
xor
lret
jns
mov
jne
cmpsb
xor
int
xor
sub
xor
xor
mov
test
lahf
xor
test
lret
jo
cs
outsb
mov
divl
das
push
outsl
cli
aaa
rcll
xor
xor
dec
mov
data16
add
xchg
add
add
bound
xor
xor
mov
jmp
xor
sub
or
addr16
aaa
jbe
mov
outsb
pop
test
loop
sbb
xor
cmp
cmp
mov
cltd
iret
outsl
cmp
sbb
iret
inc
cmp
out
jae
mov
mov
fpatan
add
stos
xor
mov
sti
xor
movsl
sarb
pusha
flds
add
fld
xor
inc
xor
add
mov
iret
cmp
push
inc
shll
pop
add
flds
xor
insl
cmp
iret
sub
rcl
cmp
inc
mov
ss
mov
daa
xorl
mov
pop
aaa
insl
test
pop
jl
aaa
jge
jno
jge
cmp
dec
fs
aaa
cmp
push
push
aaa
cmp
inc
flds
jmp
pop
flds
pop
xorb
mov
arpl
dec
xor
xchg
or
das
xlat
outsb
iret
das
add
das
pop
outsl
das
addr16
outsl
xor
scas
int
xor
int
xor
leave
push
xor
sub
mov
jno
jbe
xor
mov
ds
fldl
add
fnsave
lret
int
xor
int
xor
enter
roll
xor
xchg
int3
pop
cmp
hlt
incl
add
scas
aaa
xor
ss
stc
xor
lret
dec
int3
mov
ss
iret
add
pop
into
sbb
loop
add
inc
pop
into
inc
xor
bound
adc
add
imul
sub
xor
mov
js
push
jl,pn
ja
xchg
jbe
cmp
jbe
cmp
add
cmp
dec
jecxz
in
or
add
sbb
and
sbb
jmp
cs
pop
das
fsubrl
xchg
sub
lea
pushf
xchg
xchg
jp
cmp
jp
xchg
inc
rclb
cmp
idivl
outsb
rol
cmp
mov
dec
shlb
cmp
rol
cmp
shlb
out
ja
add
rolb
cmp
shll
cmp
rolb
cmp
rclb
cmp
arpl
xor
leave
mov
adc
xor
push
int3
inc
aaa
out
lret
pop
aaa
test
aaa
push
int3
stos
aaa
ss
ret
aaa
dec
int3
add
in
std
test
sub
jb
sub
jb
sub
push
gs
mov
push
and
sub
mov
xor
sub
gs
xchg
xor
sub
xchg
inc
sub
jae
sub
jae
sub
jae
sub
jae
sub
push
sub
sub
push
std
sub
push
add
sub
xor
cs
xor
cs
nop
shrl
add
inc
add
dec
ss
add
dec
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fiaddl
add
fiaddl
add
fildl
add
fildl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
jnp
add
add
fiaddl
add
add
jnp
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
add
add
mov
add
mov
add
jnp
add
jnp
add
add
add
dec
xlat
add
cmp
add
cmp
add
dec
xlat
add
dec
xlat
add
cmp
add
cmp
add
or
add
or
add
sti
add
sti
add
or
add
or
add
sti
add
sti
add
lret
add
lret
add
mov
add
lret
add
lret
add
mov
add
mov
add
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
add
bound
add
bound
add
bound
add
bound
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
add
fildl
add
fildl
add
fildl
add
fildl
add
add
jnp
add
mov
add
add
fildl
add
add
dec
fildl
add
add
cmp
add
cmp
add
dec
fildl
add
add
cmp
add
cmp
add
or
add
or
add
sti
fiaddl
add
fiaddl
add
fildl
add
fildl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
lock
lock
lock
add
add
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
add
fadds
add
xlat
add
sti
xlat
add
lret
xlat
add
lret
xlat
add
mov
xlat
add
lret
xlat
add
lret
xlat
add
mov
xlat
add
mov
add
mov
add
add
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
xlat
add
dec
xlat
add
cmp
add
cmp
add
dec
xlat
add
dec
xlat
add
cmp
add
cmp
add
or
add
or
add
sti
add
lock
lock
lock
lock
lock
lock
lock
lock
add
add
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
add
out
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
out
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
cmp
add
cmp
add
or
add
or
add
sti
fildl
add
fildl
add
faddl
add
faddl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
mov
fildl
add
fildl
add
add
mov
add
mov
add
jnp
add
jnp
add
dec
fildl
add
add
cmp
add
cmp
add
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
add
add
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
add
out
add
out
add
out
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
popa
flds
jmp
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
jmp
popa
flds
jmp
jnp
add
dec
fadds
add
add
cmp
add
cmp
add
dec
fadds
add
add
cmp
add
cmp
add
or
add
or
add
sti
xlat
add
sti
xlat
add
or
add
or
add
sti
xlat
add
sti
xlat
add
lret
xlat
add
lret
xlat
add
mov
xlat
add
add
xlat
add
lret
xlat
add
mov
xlat
add
mov
add
mov
add
jnp
add
jnp
add
mov
add
add
add
add
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
add
add
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
add
out
add
out
add
out
add
out
add
out
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
add
mov
add
mov
add
jnp
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
faddl
add
add
cmp
add
cmp
add
dec
faddl
add
add
cmp
add
cmp
add
or
add
or
add
sti
fildl
add
fildl
add
faddl
add
faddl
add
fildl
add
fildl
add
fildl
add
lret
fildl
add
fildl
add
fildl
add
fildl
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
add
fadds
add
fadds
add
fadds
add
lret
fadds
add
fadds
add
fadds
add
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
fadds
add
add
cmp
add
cmp
add
dec
fadds
add
add
cmp
add
cmp
add
or
add
or
add
sti
xlat
add
sti
xlat
add
or
add
or
add
add
xlat
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
out
add
out
add
out
add
out
add
out
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
add
faddl
add
faddl
add
fldl
add
fldl
add
faddl
add
faddl
add
faddl
add
faddl
add
mov
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
faddl
add
add
cmp
add
cmp
add
dec
faddl
add
add
cmp
add
cmp
add
bound
add
bound
add
bound
add
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
add
bound
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
out
add
out
add
out
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
add
flds
add
add
dec
flds
add
flds
add
flds
add
flds
add
flds
add
fadds
add
fadds
add
flds
add
flds
add
fadds
add
sti
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
fadds
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
mov
add
mov
add
jnp
add
jnp
add
dec
fldl
add
add
cmp
add
cmp
add
dec
fldl
add
add
cmp
add
cmp
add
or
add
or
add
sti
faddl
add
faddl
add
or
add
or
add
sti
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
add
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
popa
flds
jmp
add
add
popa
flds
jmp
popa
flds
jmp
lret
flds
add
flds
add
flds
add
add
jnp
add
mov
add
mov
add
jnp
add
jnp
add
dec
flds
add
add
cmp
add
cmp
add
dec
flds
add
add
cmp
add
cmp
add
or
add
add
flds
add
fadds
add
fadds
add
flds
add
flds
add
fadds
add
fadds
add
fadds
add
fadds
add
repnz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
mov
pop
imul
enter
mov
adc
pop
lcall
adc
pusha
shrb
imull
dec
dec
insl
or
sub
inc
and
cmp
cmc
mov
scas
cld
mov
xchg
add
loope
les
pusha
sub
mov
call
ret
sbb
mov
mov
add
xor
mov
rcrl
ret
bound
sbb
xchg
aad
jp
jecxz
push
push
pop
notb
xchg
test
dec
jbe
adc
add
testb
or
stos
mov
xchg
jne
push
gs
mov
popa
lret
sahf
cli
popf
add
mov
push
pop
jae
xor
mov
cld
fwait
sub
std
shrl
lahf
pushf
sub
sub
mov
jno
mov
popa
pop
pop
mov
push
push
je
inc
lock
jb
cmp
imul
mov
inc
push
push
xchg
sahf
stos
outsl
loopne
sbb
int3
and
inc
lret
popf
cld
dec
leave
add
cmp
in
mov
insl
add
fmull
insl
xchg
ret
nop
sbb
dec
inc
mov
repnz
in
and
mov
push
sub
mov
iret
movsb
sub
lret
jbe
fsubs
cltd
push
xchg
jns
jnp
repz
movb
cli
jns
xlat
pop
test
ds
dec
mov
pop
imulb
or
into
in
daa
mov
adc
jbe
adc
jae
dec
ja
inc
addr16
fsubrl
sahf
cmpsl
jle
ljmp
mov
leave
fdivrl
jl,pt
lahf
mov
inc
aaa
or
outsl
or
mov
adc
dec
mov
cmp
add
popf
fdivl
into
lahf
mov
pop
sbb
sbb
stos
filds
test
xchg
clc
mov
sub
int3
xor
xchg
mov
es
or
in
jmp
push
inc
fprem1
push
ret
xchg
push
in
mov
jo
fldenv
mov
inc
push
cmp
fstps
mov
cmpb
gs
mov
jge
int3
add
push
in
xchg
loopne
loopne
pop
stc
add
push
dec
in
xchg
fmull
push
inc
clc
jmp
mov
inc
pop
push
cmp
jmp
mov
dec
lock
dec
push
inc
cld
and
flds
jmp
push
dec
hlt
loope
add
ljmp
jae
sub
lock
add
push
cmp
dec
iret
push
mov
std
dec
call
loope
add
mov
in
inc
jp
lods
or
push
inc
in
jmp
fisttpll
or
mov
pop
rolb
lock
test
ror
or
or
in
push
shr
add
icebp
mov
mov
sub
andl
mov
push
jmp
ret
int3
mov
fldenv
push
jae
push
movsl
ret
fdivs
mov
add
jns
mov
pop
ret
add
xor
out
fmull
jae
push
cmp
jmp
cltd
add
xchg
push
add
int3
mov
mov
sub
in
sbb
int3
es
push
push
push
in
inc
sub
xor
mov
ds
or
or
or
in
pop
int
mov
rorl
dec
add
ror
or
or
push
in
xchg
push
clc
fsubrs
popa
cltd
add
ja
mov
bound
clc
mov
push
cmp
xchg
icebp
mov
les
cmp
add
jmp
xchg
mov
jge
int3
xchg
push
in
sbb
flds
jmp
push
cmp
loope
add
into
lahf
inc
adc
mov
fmuls
add
add
cmpsb
lret
scas
adc
insl
pop
fcmovu
add
lock
ljmp
ror
or
int3
sahf
or
int3
xchg
or
int3
mov
in
jp
add
dec
or
bound
es
push
push
dec
in
push
lret
pop
push
jns
lret
flds
mov
push
jmp
adc
xchg
dec
cmp
loope
or
flds
add
pop
mov
fldl
cld
flds
inc
jmp
jmp
mov
add
cmpsb
mov
dec
inc
lock
and
punpckldq
xchg
dec
cmp
dec
clc
jmp
leave
mov
pop
dec
dec
or
enter
push
std
or
das
mov
dec
cmp
popa
xchg
cld
mov
fprem1
mov
jnp
int3
aaa
dec
in
mov
inc
pop
push
cmp
add
push
dec
call
ficompl
add
inc
lock
lock
cli
add
mov
dec
lock
loopne
daa
stc
cmpl
inc
fiaddl
add
fldcw
fldenv
loope
scas
loope
push
outsb
sub
adc
fistpl
cmc
mov
dec
sbb
pop
fmull
mov
gs
or
adc
fldcw
loope
daa
loope
inc
jb
cmp
fldenv
loope
das
loope
adc
cs
pop
roll
add
mov
pop
js
bound
mov
daa
mov
inc
pop
sar
jmp
mov
pop
cmp
idivb
mov
or
loop
adc
add
cmc
mov
sub
mov
fdiv
sbbl
xchg
les
scas
int
add
and
add
sbb
repz
in
pop
mov
mov
lds
mov
daa
int
rcrb
hlt
jmp
faddl
mov
mov
dec
loopne
out
decl
movsb
int3
pop
fs
xchg
push
decl
mov
bound
clc
lret
inc
bound
clc
mov
ss
cmp
pusha
cmp
fldenv
push
fldcw
push
adc
xor
cmpsb
int3
xchg
in
cmp
push
inc
bound
add
fwait
mov
xor
int3
xchg
movsl
int3
pop
in
in
sub
sbb
enter
xor
fldenv
add
hlt
jmp
in
dec
push
dec
clc
fldt
add
cwtl
insb
inc
loope
stc
add
fnsave
rolb
adc
dec
sbb
or
bound
clc
jmp
cmc
mov
bound
adc
sbb
mov
or
mov
popa
jns
ficoml
cmp
dec
fnsave
sarb
mov
pop
lcall
sahf
movsb
int3
xchg
movsb
int3
aaa
in
pop
loope
inc
pop
dec
decb
mov
mov
data16
int3
sahf
movsb
int3
xchg
movsb
int3
mov
in
inc
push
mov
add
pusha
cmp
jmp
pop
fmuls
fldt
loope
cmpsl
mov
mov
addr16
push
cmp
mov
cld
aas
bound
sbb
in
fstpl
or
push
icebp
push
inc
add
fldcw
xchg
fldl
push
aam
lock
push
fisttpll
sub
push
xchg
jmp
andl
add
rolb
pop
int
shlb
hlt
jmp
sub
cmp
sbb
add
inc
call
xchg
adc
inc
adc
and
test
mov
or
divl
mov
add
movsl
inc
sahf
sub
or
or
mov
mov
jmp
sbbl
mov
jmp
pop
dec
in
rol
jge
add
and
lahf
sbb
pop
cli
call
mov
addl
imul
in
mov
mov
cmp
add
adc
xor
mov
daa
mov
pop
dec
xor
rorb
ror
inc
bound
add
add
mov
loope
in
mov
flds
jne
aas
inc
push
fstps
push
jb
in
mov
fcomp
sub
mov
xchg
pusha
cmp
fldenv
loope
mov
push
mov
int
inc
bound
jmp
andl
mov
push
mov
add
pop
inc
fsubs
mov
dec
negb
loopne
int
inc
incb
add
scas
inc
bound
and
sbb
push
jmp
fsts
pop
lds
pop
into
cmc
jmp
pushf
add
add
mov
cmp
popa
sub
mov
mov
bound
adc
sbb
add
std
lahf
hlt
adc
add
fidivs
mov
push
xor
push
ficomps
push
or
cli
decl
cmp
sbb
mov
scas
inc
bound
jmp
andl
or
adc
add
fsts
loope
outsl
lds
sub
or
adc
hlt
call
scas
fldenvs
lea
rorl
and
mov
mov
bound
notb
shll
flds
mov
cs
add
popf
int3
push
popf
int3
mov
in
lahf
loope
inc
push
cs
popf
int3
add
sub
add
in
or
fimull
pop
pop
mov
fs
dec
add
sbb
push
shl
jmp
xchg
or
pop
sub
jmp
fsts
pop
int
in
pushf
int3
mov
in
inc
idivb
add
cmp
mov
sbb
flds
lahf
int
add
mov
add
inc
or
faddl
cmpsb
fld1
imul
mov
aas
into
cmc
add
add
inc
flds
add
or
addr16
inc
fadds
add
xor
adc
mov
add
add
loope
or
jne
inc
add
add
mov
bound
mov
add
sbb
mov
scas
inc
bound
call
cmpsl
rorl
rclb
push
or
fldenv
pop
add
aas
bound
add
add
roll
push
sbb
push
fprem1
adc
add
add
sub
into
cmc
jmp
xchg
cld
mov
leave
mov
daa
jmp
sbbl
add
bound
mov
fsts
sahf
shl
jmp
xchg
add
lahf
leave
xchg
popa
dec
cld
pop
es
jae
pusha
cmp
mov
inc
fdivl
int3
add
cmpsb
add
xor
mov
flds
inc
sub
add
cmc
push
lret
ljmp
es
add
lods
add
bound
fsts
cmc
add
lods
xchg
pusha
inc
loopne
ficoms
flds
cmpsl
roll
add
jmp
andl
xchg
pusha
cmp
jns
icebp
jae
pusha
add
repz
add
popa
es
mov
popa
push
stc
mov
inc
clc
jecxz
out
add
stc
xor
adc
lret
jmp
popa
and
adc
mov
scas
inc
bound
enter
mov
bound
enter
scas
inc
lret
mov
adc
add
gs
jnp
xlat
aad
rorb
and
add
xchg
cld
cmpb
inc
fldcw
mov
bound
and
rorl
push
mov
mov
xor
jmp
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
flds
add
add
xchg
in
cmpsl
imul
outsb
fs
adc
push
ja
vmovhps
xchg
xor
fbstp
psubw
xor
in
imul
xchg
or
xor
mov
repnz
inc
mov
shl
dec
sbb
pop
adcl
dec
test
outsb
mov
das
pop
aad
add
add
popa
pop
and
mov
repz
add
push
cmc
sahf
lock
cmp
mov
loopne
adc
out
mov
es
jnp
rcl
call
jecxz
xchg
call
xor
js
and
lcall
jmp
pop
xchg
or
mov
and
iret
dec
sub
movsb
dec
sub
scas
mov
js
or
imul
lret
fildl
push
sub
jne
in
jae
add
and
push
mov
jnp
aas
jno
pushf
enter
stc
movsb
mov
cmp
scas
mov
in
push
add
mov
orb
or
pop
jbe
sbb
test
repnz
add
mov
and
inc
sbb
and
mov
imul
notl
fisubl
dec
pop
xchg
add
mov
push
xor
rcll
pop
dec
dec
sti
dec
inc
pop
jae
mov
bound
fcoml
std
xchg
cltd
sti
loope
ja
cmpl
ja
mov
jns
add
ljmp
inc
xchg
iret
aaa
leave
cmpsb
cmp
mov
sub
ds
push
sbb
clc
sub
lods
scas
fbld
push
ret
jne
sub
mov
jecxz
enter
dec
lds
test
enter
imul
lret
loop
mov
test
sbb
shl
push
outsb
mov
lods
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
mov
mov
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
mov
mov
mov
shr
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
add
mov
mov
mov
jmp
mov
pop
ret
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
mov
lea
mov
mov
mov
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
cmpl
je
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
int3
int3
push
mov
sub
push
push
push
movl
mov
movl
movl
movl
mov
mov
movl
movl
mov
mov
lea
push
push
push
push
push
call
test
jne
push
call
xor
jmp
lea
push
push
push
mov
push
push
call
test
je
push
call
xor
jmp
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
pusha
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
popa
mov
mov
mov
mov
push
mov
mov
mov
mov
push
mov
sub
mov
pop
add
mov
movl
mov
add
ret
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
movl
mov
add
mov
movl
mov
add
mov
movl
movl
movl
mov
mov
mov
mov
movl
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
push
mov
sub
movl
movl
movl
mov
xor
mov
movl
movl
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jge
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
add
mov
mov
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
pop
ret
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
mov
push
call
add
sar
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
