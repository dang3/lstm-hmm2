dec
jp
pop
ret
add
cld
outsl
add
add
add
es
add
out
call
in
pushl
push
push
call
leave
ret
adc
or
out
or
or
clc
popl
fcmovnbe
out
inc
cld
add
and
adc
add
outsb
mov
sub
es
sbbl
pop
fs
sbb
add
lods
mov
push
push
sbbl
jbe
sub
sahf
mov
mov
cld
pop
jnp
imulb
jne
lods
addr16
push
mulb
sbb
or
sarb
cld
cmp
jne
sbb
in
movb
jmp
push
push
insl
in
mov
sub
and
pop
lds
or
jnp
dec
int
push
arpl
out
xchg
pop
mov
aaa
cld
inc
ja
lock
les
sub
out
sti
lock
add
or
add
mov
xor
or
jne
test
jno
and
lock
or
xor
and
mov
fildl
xor
clc
mov
adc
mov
cmp
xor
sbb
xor
aaa
and
push
jb
popa
xchg
lods
sbb
add
jge
sub
cmp
iret
adc
test
add
into
or
add
or
push
inc
xchg
cmp
cmp
pop
inc
bswap
scas
or
jbe
dec
xchg
add
or
mov
xchg
sub
xchg
sub
add
push
movzbl
and
mov
test
mov
or
sbb
add
jmp
adc
xchg
lock
push
sti
adc
leave
adc
jb
shll
rorl
dec
adc
mov
mov
sub
add
sbb
sbb
jmp
idivl
pop
xchg
sahf
or
lea
mov
into
aaa
adc
or
and
mov
cmp
sbb
dec
in
or
leave
sbb
xchg
pop
idivb
and
jno
or
das
pushf
jmp
jo
push
sbb
testb
in
push
imul
jnp
and
pop
or
dec
pop
mov
imul
addl
or
ds
es
hlt
jae
ret
mov
xchg
mov
cmp
push
int
sarb
or
push
mov
add
or
hlt
and
dec
cmp
hlt
call
xchg
cs
gs
in
inc
push
lods
jge
jb
subl
xor
jbe
pop
pop
jae
push
jne
jp
clc
incl
pop
sbb
inc
sbb
lock
xchg
test
dec
hlt
nop
xor
pop
enter
sahf
or
popa
adc
or
push
sub
jb
sti
ret
mov
ss
sbb
fucomip
mov
push
aas
add
adc
fs
enter
xchg
xchg
inc
and
call
ficomps
xor
sbb
subl
or
xor
cmp
clc
inc
negl
adc
pop
mov
jne
jno
jmp
jnp
or
or
filds
push
push
cld
mov
pop
cli
xchg
mov
jecxz
push
shr
rep
pop
and
stos
pop
outsl
mov
and
push
push
pop
or
jne
jecxz
repz
outsl
movsb
pop
pusha
sbb
adc
jae
sbb
inc
pop
sar
inc
clc
push
push
push
fildll
inc
sub
mov
mov
mov
inc
loop
adc
fs
mov
cltd
mov
mov
or
or
add
mov
sub
jb
leave
inc
jne
pop
outsl
ja
subb
imul
add
sub
sti
pop
enter
sti
mov
add
mov
push
cld
lds
mov
pop
xchg
cmp
pop
int
scas
sbb
add
xor
out
in
adc
incl
add
mov
xor
dec
bound
in
push
fs
push
xchg
je
push
icebp
mov
pop
jmp
aad
xchg
arpl
cmp
mov
xchg
xor
sbb
clc
xor
sub
jbe
call
add
inc
sbb
nop
mov
mov
add
or
sbb
lock
push
lret
mov
inc
outsl
es
push
std
insb
mov
dec
je,pt
pop
hlt
cmp
or
je
inc
xor
idivb
push
xor
jbe
mov
jmp
mov
and
imul
push
bound
jae
pop
sbb
pop
clc
inc
mov
pop
test
adc
scas
adc
xorb
xor
fs
pop
test
icebp
cmp
rcl
loop
or
shr
jae
xor
in
out
mov
add
mov
je
ret
cwtl
or
add
mov
je
cmp
ljmp
sahf
scas
std
fadds
xor
inc
loop
and
in
mov
aaa
and
movsb
xor
inc
fdivr
jle
test
add
inc
push
push
adc
or
add
cmp
push
aas
nop
addr16
pop
mov
push
push
or
xor
cmp
cmp
popa
add
cld
mov
adc
push
mov
lcall
mov
mov
sub
cs
lea
cmp
jne
mov
and
out
mov
mov
ficompl
or
mov
fcomps
adc
fisubrs
inc
push
in
cmpl
add
movsb
push
movsl
sbb
or
ss
subl
or
sub
adc
addl
pop
ror
dec
inc
sub
popf
cmp
mov
add
add
xor
pop
rclb
jge
mov
and
adc
inc
out
push
cs
xor
xchg
mov
mov
pop
add
sub
push
mov
jae
repz
dec
pop
and
incl
pusha
push
xchg
push
sub
cmp
jno
stc
pop
cmp
pusha
inc
add
dec
push
out
loopne
data16
int
dec
pop
je
inc
or
testl
int
adc
mov
out
jne
mov
mov
xchg
test
shll
or
fnsave
test
movl
clc
decl
sti
fmulp
push
ret
shll
mov
outsb
aas
adc
jge
sahf
dec
les
or
fwait
rcrb
push
push
movsb
jmp
into
mul
sbb
cmc
aas
mov
mov
movsl
sub
mov
ja
jle
add
sub
imul
jge
inc
cmpl
mov
mov
sbb
rorb
and
ss
lods
in
inc
cmp
jl
xchg
movsl
jns
hlt
jmp
jl
cmp
cmp
ss
or
dec
in
jne
push
mov
cmp
test
adc
pushf
push
scas
cmp
and
in
sbb
sbb
mov
cmp
and
in
leave
sbbb
int
insb
and
int
andnps
xor
call
or
add
xchg
mov
adc
push
cmp
and
lods
and
push
pop
jmp
mov
jmp
inc
fnstenv
xor
xor
nop
andl
xor
adc
lock
pop
push
xor
sbb
daa
sbb
mov
outsb
mov
sbb
sbb
xorps
ja
shrb
add
aaa
push
pop
lret
jae
mov
inc
adc
popl
movb
inc
add
push
sub
adc
pop
pop
ffree
jp
jb
add
mov
ret
aad
daa
movl
mov
jle
imul
push
popl
or
push
push
xchg
sbb
pop
pop
pop
pop
or
nop
xor
pop
cwtl
in
inc
sti
xlat
cld
mov
nop
fidivs
push
inc
loopne
or
sub
movb
movsb
adc
mov
jmp
adc
mov
xor
mov
ret
imul
stc
add
loopne
mov
icebp
or
aaa
adc
inc
or
or
cmpsb
stos
test
out
pop
in
fldl
leave
jns
cmp
nop
xor
add
ja
fistl
cmp
nop
loope
add
nop
inc
idiv
int
cmp
or
xor
nop
jg
add
add
push
divl
cmp
push
sub
punpcklwd
mov
sub
rol
loop
ror
test
enter
push
sbb
test
lret
nop
pop
dec
push
mov
ja
in
nop
adc
nop
mov
push
nop
mov
nop
fwait
jle
stos
das
outsb
loop
nop
pop
nop
das
mov
jmp
pop
mov
into
add
inc
jno
je
out
shlb
sbb
inc
fdivl
andl
fcmovnb
stc
in
repz
out
addr16
add
leave
jb
lods
or
mov
mov
push
mov
mov
jne
adc
inc
or
or
pop
mov
xchg
inc
mov
loope
ds
test
cmp
clc
fldenv
sbb
mov
or
or
out
pusha
add
ret
test
aaa
cmc
out
mov
mov
call
inc
push
mov
lock
sbb
cmpsl
pop
sbb
add
sub
inc
addr16
or
adc
xor
mov
push
imul
pop
or
push
mov
hlt
dec
and
push
psadbw
cwtl
jmp
push
lds
inc
nop
xchg
mov
dec
add
pop
and
or
std
gs
fldt
pushf
add
cmpb
pop
movsb
and
push
or
xor
ljmp
add
jp
out
das
in
ss
adc
mov
les
or
add
jno
es
mov
call
mov
cltd
shll
push
pop
sahf
sub
fmul
fdivl
in
out
call
sbbl
ret
sbb
lock
adc
ss
inc
mov
lods
and
xor
adc
shlb
xchg
test
gs
mov
or
mov
insb
cld
daa
lds
fcomps
sub
xchg
add
mov
push
push
push
adc
mul
xchg
lea
aad
mov
push
movsb
mov
lcall
and
sub
cmp
jb
add
mov
and
pop
mov
lea
movl
movl
stos
int
push
or
fdivrl
xor
lds
sbb
repnz
mov
jg
movsl
push
pop
pop
pop
pop
repz
add
mov
jae
adc
outsl
mov
mov
mov
push
adc
xor
and
add
js
push
add
rol
add
mov
xor
and
lea
add
outsl
outsl
or
sti
and
add
and
dec
or
rcll
lret
xor
and
lea
add
incl
push
add
pop
scas
cmc
add
pop
repnz
sub
xchg
adc
test
xchg
pop
leave
sbb
xchg
inc
std
sbb
inc
mov
fcomps
testl
mov
ljmp
lret
fs
mov
and
nop
imul
pop
jle
xchg
jno
std
xor
pop
leave
repnz
cmpsb
cmp
or
inc
sub
push
testb
pop
fs
mov
rcrb
fstl
pop
or
pop
es
inc
xchg
sub
mov
pop
stos
mov
add
leave
repnz
pop
adc
adc
adc
dec
xchg
pop
push
adc
add
and
inc
mov
enter
mov
pop
stc
xchg
sub
out
loope
and
pop
aaa
ret
and
cmp
repnz
in
adc
inc
and
xchg
pop
leave
xor
mov
inc
mov
flds
outsl
addr16
dec
sub
xor
sti
inc
cmp
call
push
clc
xor
mov
pop
or
and
insl
in
push
sbb
push
stc
or
in
mov
inc
xchg
cmp
inc
ljmp
pop
test
pusha
dec
mov
jnp
push
jo
mov
xchg
pop
jle
sub
daa
mov
pop
jle
cmpsb
test
out
aam
xchg
pop
enter
mov
cmp
aam
and
mov
inc
in
xor
sub
nop
in
mov
lods
les
lahf
fistpl
lea
jmp
jae
lret
hlt
das
push
sbb
or
iret
lret
xchg
ljmp
inc
sbb
sbb
or
and
dec
and
sbb
repnz
cmp
cmp
in
mov
and
int3
andl
lret
scas
xchg
int3
or
or
gs
ss
in
rcrl
test
add
dec
jle
outsl
inc
addr16
repnz
out
cmp
xchg
pop
fldpi
inc
add
or
subb
cmpb
adc
ds
mov
stc
add
jmp
sub
faddl
add
add
add
xor
mov
inc
jns
ds
and
fwait
ror
cmpl
sarb
add
mov
insl
daa
add
movsb
push
into
mov
push
addl
mov
mov
adc
inc
lretw
int
mov
repnz
push
xchg
js
or
mov
push
inc
push
aas
mov
insl
in
stc
into
inc
push
pop
into
or
aam
add
stos
pusha
cmc
mov
jno
push
call
mov
imul
jle
clc
xchg
pop
mov
push
inc
jb
incl
or
dec
or
cmp
jge
pop
test
and
or
out
or
icebp
imul
xchg
xor
inc
mov
ss
push
xchg
pop
dec
dec
push
or
cmc
inc
dec
mov
pop
test
mov
xor
inc
adc
add
and
insl
add
stos
adc
jb
mov
je
sbb
xchg
fs
push
adcl
mov
mov
loopne
cmp
push
in
filds
jns
sub
add
daa
push
xchg
iret
or
pop
and
cltd
movsl
stos
xor
stos
fs
push
data16
sbbb
add
mov
or
cltd
leave
inc
loope
sub
mov
addl
hlt
idivb
lods
js
cwtl
cmp
pop
call
fimuls
push
push
jae
push
mov
sbb
test
xor
adc
fisttps
sub
and
cwtl
fstpl
je
or
mov
xor
xor
dec
push
cmpsl
loope
rolb
push
sahf
push
dec
adc
push
mov
sti
in
outsl
out
mov
mov
or
sub
movb
pop
sar
mov
or
je
addr16
inc
lea
shlb
push
sahf
or
addr16
insb
movsb
test
push
ret
cmpsl
ds
cmp
mov
pusha
or
or
and
push
cld
cmc
sbb
pop
lock
loopne
and
add
push
loopne
pusha
mov
cmpsb
shl
cld
sub
push
add
jmp
push
and
in
mov
or
mov
jg
pop
rorb
lea
mov
cmp
shl
das
les
bound
sub
aam
mov
pop
mov
les
add
imulb
aam
mov
push
sub
outsb
mov
adc
sub
adcl
jae
jo
shr
add
ljmp
cmp
dec
and
imul
push
jns
mov
mov
lock
mov
jl
or
and
jnp
adc
cmp
sbb
pop
pop
enter
adc
sbb
adc
cmp
mov
mov
push
lods
dec
addl
lods
push
mov
and
push
pushf
xor
cmpsl
or
xor
cmpsb
add
or
sbb
lret
stos
xorb
jbe
pop
jns
xorl
sahf
loop
or
pop
jns
sub
add
shll
pusha
in
fwait
test
pop
push
mov
mov
leave
mov
mov
or
push
pusha
btl
test
mov
fsts
and
cmp
pop
outsb
adc
out
mov
mov
fdivrl
push
fsub
jge
loopne
dec
jo
and
and
and
or
mov
cmpsl
and
or
adc
xor
and
push
rorb
arpl
mov
sbb
fmuls
xor
adc
sub
xchg
inc
paddsb
xor
push
jmp
push
movl
in
clc
ret
popaw
sub
jne
cwtl
negl
mov
loop
jge
sbb
xchg
testl
or
inc
sub
jno
xchg
and
daa
loop
sbb
cmp
daa
sub
and
or
cmp
andl
movsb
sbb
mov
popa
ss
adc
pusha
movsb
mov
out
mov
mov
adc
sub
sub
sbb
mov
or
sti
repnz
notb
jmp
push
and
pop
orl
test
or
dec
ret
mov
sbb
sarb
daa
negb
push
iret
fildll
pop
jp
push
dec
dec
leave
sbbl
and
lock
std
inc
inc
xor
lock
shlb
and
sbb
inc
sub
xchg
sbb
dec
int
cmp
roll
hlt
js
faddl
jnp
push
mov
sub
mov
cmp
ja
inc
outsl
hlt
jb
loopne
daa
lock
rcrl
push
mov
cs
shlb
push
push
pop
jmp
cmp
push
addb
lock
and
mov
into
lea
test
cs
mov
cmc
enter
xor
jle
fmul
sub
ret
dec
cli
push
imul
divb
and
push
and
cli
or
popf
xor
fiaddl
fdivp
adcb
sub
jp
push
imul
das
jbe
setns
sub
adc
lcall
ja
inc
fstpt
pop
sahf
cmpsl
imul
push
add
std
cld
pop
sahf
out
sti
cli
stc
clc
mov
mul
push
pop
jno
xor
push
inc
pop
mov
into
mov
xor
enter
mov
xor
xor
cmpsb
sub
pop
loopne
inc
and
out
mov
push
inc
sbb
or
mov
ljmp
js
sbb
sub
inc
cmp
fwait
jb
cwtl
push
add
push
dec
jg
jo
inc
and
sub
lcall
test
add
popa
scas
pop
mov
xchg
pop
leave
mov
adc
inc
sub
insl
xchg
in
outsl
xchg
add
xor
pop
stos
jnp
cmpl
push
inc
or
adc
cmp
sub
mov
push
pop
cmp
in
xchg
insl
xchg
push
and
dec
repz
inc
cwtl
sub
pop
shrb
fsubrl
sub
xor
or
or
rolb
mulps
das
or
xor
xor
pop
outsl
rolb
xor
imull
add
divb
cs
cltd
das
hlt
clc
jg
in
je
add
xor
mov
hlt
notl
imul
sub
je
or
and
jmp
push
in
mov
mov
jne
add
push
pop
lock
dec
sbb
push
adc
in
mov
mov
outsl
lock
pushf
inc
dec
push
or
or
mov
orb
subl
xchg
push
fs
es
insb
hlt
negl
scas
js
fbstp
fisubl
xchg
sbb
and
aam
sub
loope
inc
in
dec
xor
inc
call
aaa
xchg
push
pushl
inc
pushf
cs
or
popa
sbb
mov
or
dec
pop
xor
jns
loopne
inc
dec
dec
or
xchg
push
testb
add
rolb
push
and
sub
push
and
dec
lds
pusha
popa
fsubs
and
mov
adc
fwait
push
pop
sub
test
rcrl
mov
add
xchg
or
sub
out
test
push
sub
adc
mov
hlt
add
sub
mov
ds
jmp
or
nop
xchg
jmp
pop
scas
sub
push
mov
outsl
leave
in
seta
std
ss
and
pop
and
lds
in
mov
hlt
adc
or
test
cs
push
lahf
and
sub
inc
pop
adc
fwait
sti
add
pusha
cmc
je
scas
xor
inc
push
cmpsl
push
sbb
xchg
and
bts
test
loope
js
mov
sub
repz
xor
into
mov
mov
enter
xchg
xor
adc
push
xor
push
jp
add
mov
or
xor
fwait
add
pop
push
cmp
xor
sbb
add
or
shlb
cwtl
outsl
loopne
in
push
out
add
cltd
outsb
pop
push
cli
cwtl
test
add
dec
ss
testl
cltd
cmp
or
and
xor
pop
pop
xor
das
test
push
test
sbb
nop
add
cltd
clc
pop
mov
inc
lock
push
in
and
outsl
inc
add
mov
jbe
cmpsl
cmp
or
xchg
or
jno
inc
dec
nop
inc
lcall
sub
sbb
sub
adc
sub
mov
stos
in
in
lret
xor
xchg
mov
adc
push
adc
push
icebp
push
and
cmp
pop
out
popf
clc
pop
push
or
jp
pop
mov
inc
jl
xor
dec
repnz
cmp
jne
shll
cltd
cmp
or
sbb
enter
push
inc
push
push
add
add
xchg
adc
jno
inc
xchg
outsb
cld
mov
and
push
mov
dec
insb
repz
lcall
add
jle
fs
dec
mov
sbb
mov
dec
fsubrp
push
jb
dec
scas
pusha
ret
shrl
inc
sahf
and
movsl
sub
push
push
sahf
add
nop
pop
andl
jb
popa
push
repnz
cmp
test
fs
pop
pop
dec
sbb
nop
dec
dec
dec
pop
sub
or
mov
push
mov
test
mov
ja
and
sub
push
inc
mov
add
xchg
add
aad
lret
adc
lods
dec
cltd
push
adc
stc
add
pop
add
sub
and
xor
push
push
push
push
pop
loopne
fstps
and
jmp
bound
in
sahf
and
and
cwtl
loop
lcall
xchg
or
mov
in
sub
cld
or
hlt
cmpl
lret
push
movsb
lock
lods
add
inc
fs
add
loopne
mov
xchg
xor
test
or
enter
lock
cwtl
or
and
and
fnstcw
mov
out
sahf
push
inc
inc
dec
push
out
into
dec
cmp
sub
and
js
test
and
repz
fistpll
addb
adc
hlt
fcomps
lock
inc
push
pop
adc
ds
and
pop
jo
xchg
sbb
shrb
mov
inc
nop
pop
or
insb
add
in
sub
sbb
push
mov
push
nop
and
xchg
push
sbb
bound
jmp
dec
adc
ds
pop
xor
add
jae
adc
imul
hlt
or
popa
xchg
arpl
sub
jmp
inc
cmpb
cli
inc
cmp
and
lds
shrb
inc
add
ret
push
adc
push
push
in
and
fmull
fs
and
sub
add
adc
cs
cmp
ss
sub
dec
and
and
nop
outsb
sbb
and
adc
daa
dec
dec
push
test
pop
jbe
pop
xchg
popa
adc
outsl
inc
scas
test
cmp
cwtl
inc
xchg
or
je
sbb
sbb
push
adc
push
mov
push
fldcw
xor
or
or
and
or
leave
dec
adc
inc
adc
add
push
fdivrs
inc
jb
fadds
cmp
sbb
adc
nop
and
out
fimull
sbb
ja
mov
ret
add
xor
adc
cmpsl
cmp
pop
adc
mov
enter
inc
jno
xor
xor
or
push
fwait
dec
xchg
mov
or
cli
or
aaa
int3
push
mov
xchg
pop
xchg
enter
mov
xor
xor
and
push
add
neg
roll
das
dec
dec
imul
dec
and
cmp
mov
lret
nop
push
or
and
pop
inc
fstps
sbb
xor
add
ret
push
pop
pop
add
dec
dec
and
sarb
add
std
aad
cltd
dec
es
mov
and
mov
jb
xor
fdivs
or
mov
push
adc
fs
lret
in
xor
add
fcoms
enter
rclb
mov
xchg
lahf
fcoms
sbb
xchg
or
mov
andb
pop
xchg
test
dec
mov
int3
and
les
inc
pop
es
imul
fs
int3
pop
inc
popa
mov
fsubs
dec
inc
shlb
dec
xor
aam
add
movsb
inc
adc
push
add
pop
jae
leave
cwtl
sbb
sub
addr16
jne
cmp
sbb
or
imul
pop
xchg
jmp
dec
xor
dec
bound
je
and
gs
lds
lods
mov
fstps
es
es
cmp
loop
cmp
repnz
repnz
mov
addb
insb
dec
dec
pcmpeqw
andl
cmp
mov
sahf
int
mov
sub
push
and
dec
pop
xchg
shrb
data16
outsl
jae
and
insb
mov
and
testb
inc
enter
push
jnp
repnz
adc
test
daa
enter
or
test
in
daa
fsub
adc
xchg
and
push
inc
repnz
in
inc
push
sbb
sub
in
jge
jmp
cmp
mov
adc
dec
daa
inc
daa
andb
int
pusha
add
push
fildl
xchg
mov
add
loopne
inc
jne
outsl
fdivs
push
mov
push
int
pop
xchg
dec
push
push
jne
fsubs
test
pop
push
sbb
push
pop
add
add
pop
rclb
jge
or
lea
add
sbb
inc
movb
push
hlt
mov
pop
pop
mov
cltd
lea
pop
lcall
in
in
mov
dec
push
sbb
push
shlb
adc
sbb
in
lock
push
pop
cld
sbb
pop
loopne
jg
out
pop
mov
xchg
mov
int3
mov
insl
mov
add
jmp
pop
mov
inc
jp
repz
out
scas
jnp
jae
cmp
bt
push
pop
enter
and
das
or
or
sbb
lods
pop
fs
scas
pop
nop
pushf
rcrl
notb
hlt
add
mov
jns
std
sbb
in
and
call
xchg
pusha
jle
dec
loopne
jb
and
push
popa
xchg
pusha
xchg
xor
incb
popf
push
and
push
inc
nop
lret
mov
push
sbb
adc
and
mov
pop
sub
and
dec
and
adc
test
dec
push
pop
mov
adc
pop
add
mov
xchg
sbb
cmp
adc
in
aad
enter
andb
add
adc
mov
adc
or
shrb
and
sti
pop
xchg
add
push
and
mov
push
and
cmp
sub
push
dec
add
sub
sub
sbb
aaa
jns
xchg
or
pop
xchg
shrb
and
pop
inc
in
popf
xor
arpl
sub
cld
and
and
inc
leave
push
jbe
inc
inc
enter
jmp
sbb
pop
and
jnp
sbb
bound
push
add
sub
dec
cs
add
inc
lods
add
das
pop
mov
sub
nop
push
enter
push
stos
pop
cmp
xor
adc
xchg
pop
cmp
das
sub
sbb
cmp
imul
and
and
jle
dec
dec
dec
sub
lods
nop
push
xchg
sub
sbb
mov
jle
outsb
je
je
cmp
lahf
sbb
pop
add
mov
jp
inc
push
das
or
push
inc
faddl
or
inc
or
nop
inc
add
test
and
sub
jp
scas
adc
pop
and
std
rolb
add
daa
dec
bound
nop
sub
sub
adc
sub
out
lock
mov
sub
and
enter
inc
mov
insl
aam
and
enter
fdivs
pop
jb
aam
and
aam
jno
push
pusha
dec
pusha
jo
sub
push
sub
outsl
sbb
mov
hlt
add
cmc
sub
mov
sub
fwait
xchg
and
mov
sub
mov
hlt
cmpsl
rol
sbb
enter
pop
sub
pushf
or
push
push
je
sbb
push
ret
loopne
js
jns
jo
and
mov
repz
dec
pop
leave
loopne
insb
pop
and
fcomps
fwait
arpl
and
xor
jp
inc
adc
adc
and
je
add
sub
sahf
adc
adc
xchg
push
jl
lods
xor
sub
dec
lahf
adc
mov
cmpsb
pop
fildl
cmpl
cmp
xor
outsb
mov
pop
and
jne
push
iret
arpl
cmpsb
adc
or
adc
ret
sub
push
adc
roll
lcall
and
mov
je
adc
inc
pop
mov
scas
mov
add
fs
sbb
sub
fnstenv
addl
enter
jg
cld
jmp
mov
mov
loopne
sub
stos
pop
and
les
xchg
fildl
jbe
mov
inc
inc
repnz
mov
lds
in
sub
lea
or
mov
pop
inc
aaa
enter
inc
adc
pop
adc
out
add
out
jg
orps
in
addb
movzbl
mov
lock
out
mov
push
jge
sub
inc
mov
ret
pop
and
and
mov
sbb
loope
mov
repz
pop
add
out
sbb
pop
inc
or
xchg
mov
xchg
push
jbe
push
jmp
mov
inc
inc
out
jbe
dec
test
subl
mov
jg
addr16
jbe
call
add
sbb
jbe
ss
test
mov
or
adc
and
jbe
adc
mov
xchg
aam
lock
adc
jmp
pop
adc
mov
jbe
movsb
push
hlt
movsb
call
loopne
jo
pop
sub
shr
sub
xchg
pop
push
rcrb
test
clc
cmp
lds
inc
imul
or
lock
test
push
js
call
jae
test
in
xor
lcall
insb
fldz
and
add
add
add
and
xchg
lock
das
add
pop
and
jmp
adc
arpl
in
jne
adc
add
imul
mov
int
sub
and
insb
mov
or
clc
jb
sub
or
or
and
and
in
lret
testb
ljmp
push
sub
push
mov
lock
sbbl
or
call
jno
sbb
dec
mov
mov
cmp
dec
aas
and
mov
or
mov
mov
stc
push
xchg
mov
mov
add
sub
orb
sahf
shlb
xchg
repz
and
cmp
jns
jns
repnz
adc
xor
stos
mov
and
aam
aam
and
enter
adc
push
addr16
add
test
adc
jb
imul
leave
push
adc
adc
or
add
mov
and
outsl
jmp
or
mov
add
mov
sub
dec
sbbb
push
xor
and
test
mov
add
leave
subl
sub
adc
jl
or
and
jno
in
adc
jge
add
jbe
jb
jae
push
aaa
inc
mov
iret
mov
add
or
sub
stos
dec
scas
sub
dec
into
es
adc
out
pop
sub
jne
pop
enter
jno
dec
jo
cmp
cld
and
pop
sub
adc
lahf
adc
test
adc
jns
inc
and
ds
dec
leave
and
sub
sub
sbb
cmp
std
xchg
or
push
movl
lcall
pop
jbe
or
add
add
sub
cmpw
pusha
jge
pop
mov
add
int3
push
or
adc
adc
push
xchg
sahf
push
or
mov
pop
cmpl
mov
inc
xor
mov
push
lock
stc
inc
sub
lahf
jmp
inc
lret
nop
cltd
or
xor
dec
add
sbb
or
push
mov
lahf
or
adc
sti
outsl
inc
pushf
jne
int
and
or
jne
ss
add
and
dec
or
mov
loopne
inc
inc
lock
ret
sub
adcb
or
call
xchg
in
and
je
pop
push
lock
push
fstpt
adc
lock
inc
or
adc
es
pushl
push
add
pushl
jmp
or
and
mov
sbb
push
paddsb
xor
inc
push
call
pop
cmpsl
outsb
imull
fdivs
and
and
ds
sub
cwtl
adc
sub
test
mov
sbbl
lret
sbb
push
jne
add
in
enter
xor
movb
mov
mov
jbe
add
lret
inc
imul
test
mov
pop
into
mov
mov
ud0
push
fnstcw
pop
push
in
pop
hlt
sbb
adc
push
loopne
popf
or
sti
addr16
sbb
mov
outsb
nop
add
dec
xchg
cmp
movsb
inc
push
in
dec
xor
dec
and
sub
push
out
and
in
ds
inc
jmp
xor
loope
push
xor
mov
xchg
sbb
or
add
dec
jmp
das
or
add
unpckhps
ljmp
push
repnz
adc
or
and
and
add
mov
loopne
cmpsl
call
mov
js
adc
insl
shlb
shrb
insb
rclb
fs
jnp
test
pop
jl
fwait
xor
aad
xor
das
inc
pop
jne
xchg
sbb
mov
mov
sbb
inc
fwait
lock
jne
xchg
sbb
int3
jne
xor
mov
rsm
int3
pop
test
xor
insl
cmp
jnp
adc
mov
xchg
cmpsl
fstps
loopne
xchg
out
mov
fcompl
add
mov
imul
aam
mov
leave
idivl
fisubrs
fxch
push
les
mov
rorb
nop
xor
xor
aam
in
enter
shlb
pop
mov
enter
mov
icebp
xchg
fdivrs
leave
mov
andl
mov
wrmsr
sub
sahf
jmp
stc
lock
jp
mov
pusha
and
pop
sbb
out
add
jne
pop
pop
or
and
and
dec
jmp
dec
pusha
sarb
jge
psubq
inc
xor
adc
fimull
cmp
pop
sbb
addl
dec
stos
dec
and
mov
jl
add
cs
and
adc
lds
jns
xor
loopne
icebp
fimuls
setne
jae
push
mov
fwait
push
adc
mov
and
jne
lds
mov
jne
xchg
js
push
enter
je
and
fldt
jb
and
mov
jae
pop
sub
cmpsb
es
fisubrl
hlt
clc
push
push
inc
push
cld
push
mov
decb
fwait
xchg
sub
std
lahf
insl
fmuls
xchg
orl
and
and
cs
cld
xor
pop
sbb
popa
lcall
push
ret
adc
push
xor
pop
or
cmp
jne
pop
push
sub
test
xor
adc
mov
push
popa
push
sub
out
fstps
push
push
and
andb
pop
cltd
inc
and
cs
mov
mov
pop
inc
loop
mov
or
mov
jne
test
pop
outsb
and
xorl
inc
mov
jg
mov
cs
or
shlb
xor
nop
movsl
xchg
inc
hlt
clc
xchg
mov
sbb
in
mov
and
add
and
test
jo
inc
or
cs
leave
adc
xor
cmc
pop
mov
adc
push
jb
xchg
cs
mov
cmp
das
xchg
mov
xchg
addr16
daa
and
inc
fs
push
sbb
sub
addb
sub
xchg
sub
dec
jo
test
add
dec
je
stc
add
data16
sbb
insb
sub
nop
xchg
jl
inc
sub
push
inc
cmpsb
adc
pop
mov
sub
pushf
mov
sub
lods
das
cmp
mov
jns
sub
call
fsts
adc
push
or
ftst
or
push
imul
cmp
shrl
ljmp
cmc
adc
cs
sub
flds
adcl
dec
or
adc
aam
inc
push
adc
mov
sbb
and
rorl
insb
mul
add
pop
sbb
testb
xchg
xor
adcb
sub
or
icebp
and
adc
adc
les
hlt
enter
add
lock
xor
insb
clc
or
add
fs
dec
add
sub
cmp
fistpl
push
push
in
call
ret
loop
xchg
pop
mov
rcrl
aam
dec
mov
add
jnp
test
hlt
das
cmpl
test
pop
pop
inc
xlat
mov
adc
cs
lock
dec
and
cmp
fadds
pop
cmc
dec
mov
ss
jg
iret
adc
adc
in
in
bound
or
xor
mov
adc
dec
mov
add
mov
mov
daa
rclb
mov
outsl
sbb
jge
in
aaa
mov
xchg
fdivrs
jne
jmp
inc
aaa
or
xchg
dec
cmp
or
xchg
hlt
sbbb
leave
incb
jnp
xchg
and
cld
fdiv
mov
pop
mov
shll
insl
in
dec
out
sub
out
stos
inc
mov
or
repnz
cmp
fs
add
nop
lea
mov
notb
nop
pop
push
xchg
cmovge
mov
loopne
fs
xor
leave
sub
sub
mov
movsl
jmp
shlw
xorl
andl
fwait
sbb
and
negb
or
sub
ljmp
or
mov
push
rcll
mov
mov
cld
stos
jge
jmp
mov
push
mov
pushl
popl
sbb
jb
or
nop
ss
adc
fistpl
in
in
call
adc
cwtl
xor
xorb
cmp
add
out
ret
aam
adc
je
popa
lar
ret
pop
ds
std
jno
xor
or
jle
out
pusha
sbb
repz
mov
cmpb
es
push
xor
push
repnz
add
lods
adc
push
clc
sub
inc
sub
ss
pop
arpl
cld
add
sbb
sti
sub
push
mov
sahf
lea
insb
mov
in
clc
clc
rorl
adc
shrb
shrd
adc
ja
fucomip
cwtl
dec
or
call
fmuls
sbb
neg
inc
xor
mov
cmp
jb
add
xchg
mov
cmp
sub
jmp
push
inc
jb
inc
ja
inc
sub
mov
inc
cmp
or
add
es
push
mov
pop
cmp
or
mov
andl
stos
dec
push
inc
push
rclb
pushf
mov
mov
xchg
cmpl
sub
test
adc
addb
and
jb
pop
jb
hlt
lock
jb
pop
in
call
pop
sbb
jno
push
add
stc
dec
jbe
xabort
cmp
cli
lock
and
in
or
and
inc
push
in
das
adc
aaa
fs
mov
adc
clc
fdiv
fdivrs
int3
cmp
in
enter
shlb
jmpw
loopne
aam
lods
sub
inc
rcl
in
jmp
loope
cmp
dec
lcall
dec
icebp
mov
cli
jne
outsl
push
xchg
sbb
fmull
fsubrs
sub
pusha
movsl
enter
mov
or
add
cld
mov
push
orl
in
bound
enter
pusha
and
cs
and
arpl
enter
nop
xchg
jecxz
lds
jno
push
clc
loopne
fmulp
mov
ret
pop
xor
dec
mov
inc
dec
sbb
call
xorb
jmp
int3
ret
add
push
nop
ss
sub
cmp
cmp
fisttpll
sub
iret
in
add
call
sbb
inc
lods
mov
pusha
cmp
cwtl
xchg
push
enter
dec
xor
push
dec
sbb
sbb
sbb
mov
sub
shll
xor
sbb
add
cmp
jne
or
fnstsw
and
test
jl
sub
sbb
jne
mov
mov
push
shl
mov
jmp
adc
push
fistpl
jbe
jge
leave
and
mov
hlt
mov
and
xchg
bound
mov
lds
add
sub
cmpsb
jnp
add
cmp
addps
loope
addl
adc
outsl
jmp
jl
andl
fmuls
popa
mov
push
cs
lock
or
out
dec
cmp
insl
add
push
and
pop
pop
sarb
pop
and
testb
jbe
or
inc
and
push
jne
jmp
mov
xor
std
inc
repz
shlb
add
rorb
jge
aaa
lock
add
wbinvd
xlat
sbb
lea
mov
dec
mov
sub
push
mov
push
xlat
mov
mov
dec
sbb
xchg
testl
adc
mov
sbbb
sahf
and
loope
add
or
sub
mov
in
jne
hlt
add
ja
iret
add
orl
daa
xchg
mov
or
pop
and
and
ficomps
mov
inc
xor
add
and
insb
ud2
or
push
jge
ret
mov
orl
movsb
add
aaa
aaa
insl
hlt
or
add
sbb
jno
or
js
add
jo
or
jmp
pop
or
sbb
add
addl
push
sbb
jge
add
mov
sub
mov
adc
divps
add
outsl
pop
or
add
adc
mov
cmpsb
mov
push
or
adc
or
fcoml
sub
lods
mov
or
or
xchg
mov
or
xchg
adc
jbe
jge
sahf
mov
repnz
push
xchg
inc
cmp
adc
xor
pop
xor
sub
je
call
addr16
jp
fcomps
sbb
int3
clc
push
in
pop
shlb
repnz
and
std
push
cmp
adc
test
sub
pushl
stos
lock
outsl
lods
xchg
in
sbb
or
mov
sar
cmpb
mov
in
mov
add
lahf
add
pop
lods
lea
add
push
cs
sahf
xchg
inc
out
or
add
sbb
xchg
mov
cs
and
xorl
push
fsts
loopne
sbb
shl
pop
outsl
adc
div
push
arpl
or
or
xor
addb
or
clc
andb
outsl
xor
lods
popa
cmpb
je
sbb
pop
push
punpckldq
jbe
push
mov
push
and
inc
nop
in
popf
add
pop
addb
mov
into
cmp
inc
cmp
jb
pop
cmpxchg
dec
cmpsl
cld
xor
xlat
cmp
mov
repz
or
lods
fs
push
cmp
jae
xchg
xchg
lret
es
xchg
lea
inc
data16
fstl
fistpll
stos
mov
xor
adc
mov
add
aad
aaa
insl
inc
and
xchg
call
fistl
sbb
rolb
icebp
push
jbe
in
pop
dec
scas
call
push
pop
sti
mov
ja
sub
sub
fsubrl
add
pop
test
mov
in
add
popa
in
in
mov
sub
shlb
aam
inc
jb
mov
push
ds
pcmpeqb
int
inc
fcmovnu
je
or
and
sar
mov
out
mov
lock
pop
imul
lds
movswl
sub
xchg
fldl
leave
sbb
push
xor
subb
add
xchg
pop
enter
add
or
xor
fildl
mov
push
inc
mov
cmp
andb
andl
scas
adc
or
repnz
je
pop
je
pusha
das
pop
or
addl
sbb
dec
daa
jne
and
mov
imul
ja
mov
cmp
inc
pop
das
pop
cmpsb
incl
inc
pop
mov
bound
push
adcb
fstpt
add
sub
pop
fbld
pushf
in
sahf
pop
jmp
sub
inc
das
push
ficomps
xor
insl
hlt
mov
mov
ds
mov
or
xlat
jno
insl
cmp
cld
enter
pop
add
js
adc
lcall
call
pop
mov
push
fdivl
loopne
push
sub
dec
ss
ror
push
xchg
add
sti
aam
or
cmp
ret
mov
xchg
add
pop
adc
cmpsl
rolb
lods
cmp
mov
mov
sbbb
sub
enter
lock
xor
push
xor
push
imul
cmp
shl
or
insb
push
or
inc
or
pop
fmull
dec
mov
pusha
ret
push
loopne
push
sub
add
push
nop
and
mov
push
mov
add
pop
orl
in
pop
add
lds
sarb
mov
xor
ja
lahf
inc
jg
sbb
mov
sub
cld
and
and
lods
aad
mov
push
es
adcl
inc
xor
add
jne
push
jmp
fs
push
or
xor
xchg
in
xor
xor
and
mulb
push
sub
mov
mov
xorl
xor
pop
in
inc
push
push
ss
je
and
push
inc
rcr
inc
shlb
cmp
jne
xor
cmp
inc
sbb
mov
and
add
jb
das
add
hlt
loope
xchg
push
add
cmpl
cld
xor
jp
inc
xor
imul
cmp
mov
and
rcrl
nop
imul
stos
daa
mov
cmp
sbb
nop
or
sbb
nop
add
xchg
push
xorl
xadd
out
or
xchg
xor
add
inc
lcall
add
pop
xor
xor
sbb
roll
fdivr
or
mov
push
sbb
rclb
pusha
push
leave
add
xor
xor
xor
jb
aaa
jb,pt
add
cmp
pop
mov
push
xchg
xchg
cmpsl
mov
cmp
and
xor
ffreep
mov
or
push
jb
and
scas
clc
test
fwait
cmp
mov
sbb
xor
mov
fdivl
sahf
inc
cmpsb
cmp
insl
fisttps
cltd
in
xor
jb
and
cmpsl
mov
cmp
push
das
and
xchg
jo
pusha
add
sbb
xchg
xchg
xor
nop
or
ret
xchg
lock
and
sbb
jnp
stos
xorb
dec
repnz
xchg
pop
jle
xor
push
js
inc
dec
aad
ret
je
fs
push
fldenv
lret
push
into
add
inc
lea
xorps
sub
push
ja
ja
pop
push
mov
cmpsl
adc
jge
cwtl
cltd
xchg
mov
cs
or
repnz
shlb
pop
dec
dec
sti
sarl
rorb
or
and
sbb
ds
cmpl
ss
lcall
sbb
dec
xchg
out
add
lock
sbb
stc
adc
sbb
add
nop
xor
adc
cmp
sbb
call
std
dec
or
jb
aas
scas
cmp
add
mov
shl
add
scas
dec
or
cmpsb
cmp
les
inc
pop
xor
and
or
push
xor
xor
inc
leave
mov
adc
jl
xchg
mov
dec
xchg
push
push
push
xchg
xchg
sbbl
shrb
into
or
add
lock
test
add
cmpl
inc
or
std
pushf
ret
addb
pop
push
out
inc
je
dec
sahf
mov
xor
cmp
or
pop
sbb
je
push
inc
inc
mov
xor
in
loope
xor
inc
push
iret
inc
push
push
fildll
xor
es
xor
test
xor
inc
cs
enter
adc
nop
cs
mov
xor
rolb
sbb
cwtl
sub
in
mov
inc
inc
lret
aam
nop
cs
adc
mov
mov
test
adc
mov
nop
inc
sub
insl
cmpsb
fs
scas
inc
stos
js
call
enter
mov
sbb
cwtl
in
fs
xchg
shlb
dec
dec
enter
pushl
jmp
outsl
add
or
pop
adc
cmc
push
cmpl
scas
iret
dec
or
frstor
adc
stc
or
pop
loopne
mov
mov
scas
inc
movsb
dec
xor
insb
aad
sub
sub
scas
dec
sbb
xor
sbb
pop
int
daa
and
fwait
or
rol
daa
and
and
and
and
mov
and
jb
insb
fisubs
pop
iret
push
outsb
loop
mov
lea
notb
aas
aam
jp
lock
mov
mov
mov
mov
movq
mov
or
sub
pop
aaa
fsts
adc
pop
jg
out
adc
fidivrl
or
or
jmp
push
inc
lcall
icebp
and
out
adc
dec
cmc
xchg
shl
daa
dec
sbb
js
loopne
test
mov
in
mov
loopne
movsl
js
jns
jb
and
cmp
add
add
fsub
xor
stc
cmp
stos
loopne
xchg
sbb
pop
cmpsl
sbb
sbb
jno
outsl
mov
daa
clc
ret
je
neg
dec
and
inc
jb
mov
mov
or
ss
sbbb
in
and
nop
xchg
call
sub
xor
in
lock
sub
mov
xor
sub
inc
into
mov
es
dec
roll
mov
dec
bound
dec
clc
lret
add
mov
pusha
fadds
setns
add
adc
sbb
cmp
adc
pop
inc
jne
xchg
or
enter
push
sbb
leave
loopne
mov
adc
pop
push
shlb
push
add
mov
arpl
fsubrs
adc
sbb
rcrb
cmp
test
xlat
mov
push
imul
adc
scas
cmp
mov
mov
pop
xlat
or
add
rorb
dec
pusha
add
cmpsl
and
ss
nop
les
dec
enter
jo
out
sbb
jp
insb
dec
inc
imul
sbb
rorb
mov
into
adcb
xor
sub
jbe
dec
push
mov
cmp
mov
adc
adc
inc
into
sbb
adc
das
adc
and
adc
and
cmc
rcr
mov
lcall
pop
or
cwtl
pop
mov
jbe
ss
ret
sub
cmp
iret
nop
mov
add
inc
dec
mov
test
in
repnz
push
aaa
lret
adc
push
or
aam
dec
or
dec
popa
shlb
push
js
mov
jo
outsl
push
jb
jecxz
mov
mov
ficoms
cmp
or
mov
or
jne
jle
mov
push
dec
mov
and
jb
aaa
mov
mov
xchg
pop
outsb
mov
and
insb
in
push
lret
or
pop
and
leave
push
loope
add
xchg
push
call
xchg
aaa
push
dec
xchg
mov
sub
faddl
clc
xchg
pop
mov
clc
mov
clc
adc
aas
cmp
and
sti
in
pop
cmp
push
mov
sub
add
test
add
rcll
jmp
add
push
add
xchg
scas
jnp
sbb
ret
nop
mov
pop
ret
data16
add
adc
icebp
test
xor
and
xor
orb
push
dec
adc
das
or
es
call
pusha
or
push
fstp
hlt
mov
aas
pop
add
add
xchg
push
mov
popf
cmpb
mov
push
xorl
jb
mov
mov
push
daa
stos
js
dec
jb
cli
aaa
and
or
pusha
push
icebp
call
cmp
shrl
mov
jnp
insb
test
into
in
or
or
arpl
push
push
fs
or
cs
xor
adc
insb
es
inc
add
mov
cmp
rorb
and
call
test
jb
push
or
sub
push
push
jmp
and
js
inc
loope
add
mov
leave
enter
scas
or
lods
jns
bound
lock
lock
jmp
inc
mov
pop
jnp
add
rorb
xchg
and
adc
or
and
inc
mov
js
sub
cmp
push
jmp
adc
sub
test
cli
add
add
pop
jmp
adc
mov
cmp
loopne
clc
mov
enter
stc
or
adc
push
adc
push
into
into
xor
and
sbb
add
xor
sub
mov
and
push
mov
push
inc
fstpl
scas
xchg
inc
and
ss
adc
inc
popa
mov
cmpsl
movsb
fwait
inc
dec
push
sbb
adcb
repz
pop
add
jmp
pop
cmp
imul
lahf
daa
cmp
adc
pushw
mov
pop
je
jecxz
sarb
sbb
inc
push
push
jecxz
add
push
cmpl
push
popa
and
inc
call
push
jnp
cwtl
push
inc
adc
inc
mov
xlat
mov
test
test
pop
aam
add
lods
mov
sahf
imul
scas
jnp
call
pop
mov
aam
pusha
or
mov
cmc
xor
fistpl
pop
daa
mov
push
adc
loop
adc
out
inc
and
in
sub
sub
dec
ret
jp
jnp
in
fisubrl
sbb
outsl
sub
sahf
mov
jnp
cltd
movl
ret
push
or
push
mov
sbb
ljmp
adc
repz
xchg
int
popa
add
ret
fwait
push
jge
popf
les
imull
fs
aam
xchg
mov
mov
hlt
mov
shll
test
sbb
jecxz
mov
add
xchg
adc
ret
pop
inc
mov
cmp
rol
lods
test
inc
xchg
mov
inc
fisubl
mov
jle
and
xor
sbb
pop
jmp
xor
or
and
shlb
jl
add
nop
test
outsb
push
scas
test
xlat
push
sub
mov
sahf
scas
push
outsb
outsb
call
sahf
or
jne
mov
sbbl
jae
sbb
aaa
popa
pushl
or
pop
loopne
adc
push
inc
in
add
push
dec
shrl
insl
mov
in
fmuls
dec
mov
sub
mov
cld
ret
bound
enter
aam
cld
mov
lret
mov
dec
iret
mov
popa
ret
cmp
mov
or
sti
xchg
pop
jae
and
adc
push
adc
adc
push
push
shr
sbb
jge
fs
mov
or
add
lret
sub
clc
add
or
xor
mov
pop
sbb
push
xor
or
fsubs
push
fdivl
imul
popl
mull
xchg
xor
out
lock
ret
fmul
clc
sbb
xor
mov
aam
pop
sbb
data16
push
mov
or
push
mov
xor
dec
aam
pop
popa
adc
fsubl
and
xor
pop
je
andl
and
aad
iret
sbb
out
nop
fildll
push
sti
sbb
sbb
jae
sbb
in
imul
add
push
fwait
out
xchg
adc
pop
iret
sbb
popl
mov
add
mov
or
fstpl
push
jno
addb
inc
push
ja
mov
adc
loop
or
jmp
movsb
adc
cmp
addr16
jg
movsl
les
in
mov
pop
nop
icebp
cmp
jmp
mov
insl
add
adc
popf
add
add
jmp
addb
test
sbb
sbb
sbb
sbb
sbb
sbb
sbb
enter
sbb
rcl
fcomp
sbb
sbb
loopne
call
sbb
hlt
clc
cld
xor
repnz
dec
add
or
xor
xor
adc
sbb
xor
xor
and
sub
xor
xor
xor
cmp
xor
xor
dec
push
xor
xor
push
pop
pop
pusha
xor
xor
push
xor
xor
mov
xor
xor
xor
mov
xor
xor
xor
enter
xor
xor
fcomp
loopne
ds
xor
in
lock
add
sbb
sub
jge
mov
nop
out
data16
or
out
out
push
and
sbb
cmp
rorb
or
add
fs
xchg
add
add
inc
push
sbb
or
push
in
xchg
inc
and
inc
cmp
sbbb
scas
mov
setge
lea
mov
cmpsb
sbbl
negl
mov
adc
shlb
cmpl
sbb
dec
xchg
fdivrs
mov
cmp
mov
inc
cmp
sbb
or
xchg
mov
in
filds
push
push
push
xor
lea
pop
out
shr
inc
lea
push
adcb
out
add
aas
lea
je
push
mov
add
iret
pusha
out
mov
add
adc
lods
decl
ret
mov
sbb
and
ret
mov
shr
jbe
jne
pop
outsb
mov
stc
daa
adc
sar
ret
jl
in
xor
push
sbb
push
xor
fistps
sub
std
pcmpeqd
ljmp
sub
lea
pop
test
and
jl
lea
dec
inc
lods
sarb
testb
adc
mov
add
inc
inc
orl
jne
push
pop
mov
mov
movl
outsl
lods
and
push
popa
cmp
mov
ret
cmp
je
dec
inc
test
pop
xchg
jb
int
xchg
push
mov
and
mov
in
or
and
inc
je
or
mov
mov
rorb
push
or
or
outsl
incl
leave
inc
mov
and
movsl
push
mov
pop
lret
clc
stc
ret
fiadds
or
and
push
mov
or
leave
sbb
or
out
sub
and
out
jo
mov
jecxz
xor
jns
jae
cmp
fnstsw
rorb
cs
mov
sbb
fstl
loope
add
fimuls
jb
dec
pop
jge
js
sub
push
mov
je
out
sbb
pop
pop
inc
push
rsqrtps
pop
and
or
fldt
sbb
popf
in
mov
scas
jae
xor
push
push
cmp
mov
lret
and
leave
add
in
out
lods
push
lret
cmc
sahf
cmpsb
imul
mov
loope
inc
test
insl
dec
lahf
mov
shr
ret
xchg
lahf
xor
inc
lods
mov
fldt
push
sbb
lret
add
xor
cmpsb
pop
inc
add
add
nop
into
aad
jge
xchg
inc
js
xor
dec
enter
inc
cmp
sub
inc
and
add
add
in
in
mov
cmp
mov
and
xor
sbb
add
push
imul
adc
fs
dec
jge
dec
lea
sub
mov
or
ror
fld
fisttpl
add
sbb
sub
lock
adc
push
mov
stos
out
xchg
pop
adc
sbb
scas
or
mov
repnz
rorl
std
push
lea
cmp
adc
pop
fsubrs
pop
sbb
adc
dec
add
xchg
enter
mov
scas
cltd
gs
dec
add
adc
mov
sbb
mov
sub
clc
cmp
dec
add
mov
subb
xor
jbe
mov
subb
or
lret
inc
adc
dec
push
xchg
cmp
pop
fcmovne
in
jge
mov
add
cmp
adc
jb
inc
push
je
lea
xchg
xchg
test
clc
clc
jmp
fdivl
loop
push
dec
mov
fidivrs
jae
cmp
jp
pusha
push
rorb
ret
sub
mov
sti
mov
in
adc
add
xchg
js
adc
or
hlt
adc
pusha
je
cmp
xor
ret
sarb
jae
lea
call
neg
mov
push
inc
inc
push
jb
xor
mov
or
test
jbe
mov
rolb
idiv
sbb
call
dec
in
les
in
cmp
mulb
ret
add
add
adc
fsubrs
jnp
leave
ss
dec
xchg
dec
push
popa
fmuls
push
adc
int
mov
imul
mov
shr
lret
jecxz
cmp
out
adc
xor
jg
dec
bound
push
and
movl
mov
or
or
movups
out
mov
or
in
ljmp
jg
add
jne
cmpsl
mov
or
cmp
sbb
push
or
inc
xor
fistps
je
inc
dec
test
je
dec
adc
aas
out
jp
add
out
sti
out
stos
xor
push
movzbl
enter
or
mov
cs
add
ss
insb
jo
fdivl
in
or
sub
mov
lea
add
lea
push
mov
xor
sub
add
cli
jb
sub
out
lea
sub
jne
sahf
cwtl
mov
mov
enter
sahf
add
or
push
sbbl
xchg
es
jnp
cmp
notl
add
jo
into
inc
pop
add
inc
sbb
xor
mov
pop
repz
cmpsl
sub
syscall
lret
pop
inc
jo
inc
ret
lea
jne
and
xchg
outsl
mov
adc
push
push
es
push
push
decl
jge
xchg
sbb
adc
jb
pop
inc
ss
pop
sub
addr16
sub
pop
mov
lea
xor
andl
hlt
jl
lea
cmp
pop
mov
les
push
cmp
dec
add
push
mov
movsl
mov
je
mov
push
push
ljmp
mov
jno
adc
or
or
cs
fwait
add
add
in
fs
add
and
lea
push
inc
outsl
fwait
addr16
push
lea
add
cmp
inc
lea
and
push
jl
mov
push
insl
jmp
xorb
inc
push
andb
movsb
dec
incl
leave
mov
and
cli
push
xor
adc
sub
inc
mov
inc
pop
inc
fbstp
sub
ret
xchg
cltd
push
cltd
xchg
cs
add
call
enter
adc
cmp
bound
push
dec
lahf
pop
push
sbb
dec
cmp
jge
in
xor
or
out
xchg
add
aad
pusha
ret
lahf
adc
adc
out
inc
fnstenv
stos
gs
mov
pop
mov
push
add
test
test
add
cmp
dec
inc
data16
shl
fcmovnu
mov
push
jl
outsl
imul
pop
pop
sub
add
add
shrl
sub
xchg
popa
jmp
and
and
enter
sub
stos
mov
testl
jns
mov
shl
add
pop
add
sar
movsl
fs
push
add
push
add
and
sbb
insl
ret
fsubs
into
in
shrb
sub
rcr
and
jnp
add
dec
fmull
add
clc
test
bound
jge
ret
iret
push
rorb
cmp
jbe
cmp
gs
xor
in
cmp
jb
jae
cmp
adc
mov
push
cmp
xchg
mov
andl
inc
movsl
jne
dec
xor
sub
push
push
adc
popa
fisttpll
sub
add
and
jle
jmp
pop
and
xor
test
xor
jecxz
cmp
add
je
scas
push
rorl
lret
shll
popf
scas
adc
push
les
add
adc
jbe
jmp
dec
incl
shl
push
popl
in
or
push
jg
pushf
sub
jb
xchg
inc
std
pop
int3
mov
xorl
in
je
xbegin
jo
adc
js
sub
leave
jne
int3
sbb
divb
and
add
outsb
negb
dec
pop
cmp
fnstenv
jmp
mov
push
xadd
inc
sub
push
testb
jmp
pop
notb
push
xchg
leave
clc
or
push
insb
or
inc
push
call
shll
cmp
adc
enter
cmp
lock
and
mov
push
inc
mov
mov
dec
jl
aaa
sbb
mov
or
sub
fstl
push
push
in
cmp
and
pusha
mov
dec
jmp
repz
fadd
or
nop
push
cli
jno
inc
push
mov
test
gs
add
mov
adc
frstor
jb
or
sahf
sbb
inc
repnz
dec
mov
cs
int
cmpsb
and
sbb
push
mov
mov
and
xor
inc
mov
pusha
scas
adc
js
js
adc
push
mov
or
mov
xchg
lds
mov
add
push
sbb
lods
jmp
or
or
in
sub
inc
pop
add
push
loop
inc
mov
cmpsl
sti
pop
push
push
test
shll
repz
leave
cmp
add
cmp
xor
pop
mov
pop
insb
aad
cmp
lock
add
add
ja
or
movzwl
setne
rorl
sbb
shll
shlb
jnp
mulps
mov
neg
push
or
lea
or
add
movsb
mov
cli
aaa
cmpb
xor
cmp
jge
jmp
xor
or
sbb
fnstcw
inc
enter
andl
movb
nop
mov
cmpsb
push
nop
cs
test
cmp
rolb
jg
aas
sbb
cmp
cmpsl
cmp
fwait
loopne
int3
test
pop
inc
inc
jo
mov
and
dec
std
test
inc
or
ret
ds
repnz
in
xor
shl
mov
and
or
les
or
out
or
xor
mov
add
and
push
or
mov
cmp
add
insl
gs
cmp
jmp
adc
fimuls
es
add
and
or
mov
dec
jo
adc
sti
xchg
push
jns
push
ss
xor
lods
adc
cmp
out
sbb
mov
ficoms
push
inc
scas
sbb
inc
mov
arpl
xor
mov
frstor
sbb
in
push
or
adc
or
mov
inc
pusha
or
loope
pop
or
or
or
shll
add
or
xor
movsl
sbb
fiaddl
or
pop
push
mov
sbb
or
add
and
test
mov
push
dec
in
sub
enter
push
add
fwait
lock
popa
ret
shll
lret
jnp
add
lods
xchg
push
repnz
out
adc
and
mov
into
out
idivl
xor
pop
add
icebp
fstpl
xchg
or
add
or
rolb
call
clc
pop
out
lods
pop
sub
push
stos
add
testb
pop
loope
mov
push
repnz
outsl
punpckhdq
sbb
dec
out
mov
lahf
repz
mov
mov
cmpsb
add
mov
addr16
add
push
xchg
or
xor
leave
and
push
cmp
jne
dec
ss
inc
pop
inc
xor
or
inc
jl
jb
and
test
pusha
mov
aam
mov
add
loopne
pop
shr
outsl
xchg
sarb
or
xchg
mov
xlat
nop
ret
sarb
pop
into
sbb
lcall
add
cld
jge
fisubrs
adc
shrb
ficoml
adc
shll
add
fisubrl
pop
stos
mov
or
inc
mov
lcall
lock
jne
test
sete
shr
mov
mov
enter
mov
push
adc
mov
lcall
xchg
fidivs
mov
lcall
sbb
push
cmpsb
add
push
pop
mov
into
push
or
or
sbb
lock
or
pop
fsubs
aam
lock
repz
adc
mov
xorl
fwait
mov
cmp
andl
movsl
ljmp
out
ja
ja
orb
xor
test
push
aam
add
push
mov
xor
jno
pushl
adc
movsbl
and
mov
mov
xor
addr16
mov
decb
cmpb
push
push
imul
mov
add
cmpsl
cmpl
pop
addl
mov
nop
adc
movl
mov
push
mov
insb
cmp
xor
inc
data16
rol
rorb
push
push
adc
loop
and
sti
sub
xchg
mov
fadd
add
cmp
std
jb
mov
inc
add
sbb
andl
pop
ret
inc
adc
mov
sbb
sbb
adc
arpl
hlt
push
leave
mov
call
push
testb
dec
pop
call
add
adc
addl
jmp
cmp
sbb
mov
daa
push
pop
mov
pop
stos
leave
mov
push
or
mov
cmp
push
push
mov
in
insl
sbb
xor
add
lock
sbb
repz
or
add
and
jg
call
imul
xor
and
and
popa
insb
insb
gs
fbstp
bound
je
cmp
sub
jo
jb
addr16
push
in
ljmp
and
cmp
cmp
and
dec
outsl
and
outsb
and
jae
sti
outsb
outsl
add
and
jae
adc
sti
sti
jb
gs
dec
outsl
jb
imul
outsb
jg
imul
jo
das
das
ja
imul
xorl
arpl
das
xor
mov
and
push
in
frstor
or
or
adc
in
jp
mov
stos
mov
xor
in
pushl
jae
ja
jb
or
bound
jno
gs
jns
sbb
fstpt
jne
sub
cmp
add
arpl
ja
add
insl
imul
outsl
jbe
sbb
dec
xor
push
insl
outsl
outsb
imul
in
lods
sti
fs
outsl
sub
je
outsl
sbb
add
jg
filds
imul
add
popa
outsl
ja
mov
mov
push
outsb
sbb
xorb
push
sti
outsb
fbstp
or
outsb
arpl
addr16
pop
or
bound
mov
out
popf
mov
pop
xor
fstp
div
jb
gs
add
insb
push
push
lods
mov
mov
jb
jo
gs
imul
insl
imul
js
fucomi
pop
outsb
orb
inc
jne
lods
mov
bound
pop
inc
fistpl
mov
popa
jb
xchg
xor
sub
jb
and
adc
sbb
imul
insb
sbb
jne
pop
addr16
fwait
and
andl
aaa
add
xchg
fs
mov
push
cmpsl
jb
imul
loopne
pop
clc
outsb
or
iret
mov
addr16
punpcklwd
popa
jp
jae
or
arpl
js
jg
sbb
ss
popa
insl
mov
test
push
add
inc
mov
cmp
push
push
push
or
pop
arpl
jb
dec
xor
popa
jo
call
sub
test
popa
jmp
fnsave
push
xor
mull
ret
inc
imul
adc
jo
arpl
dec
addr16
fisubl
ja
imul
outsl
sub
popaw
mull
jmp
jns
mov
int
or
lds
mov
adc
cmp
jns
jo
xor
inc
mov
insb
cmp
xlat
sbb
bound
xchg
push
cmp
into
mov
xor
mov
dec
bound
addr16
add
outsb
movsb
sbb
push
push
and
imul
bound
gs
sbb
test
jns
je
push
jo
xchg
popa
jno
cld
addr16
lods
jno
jns
jb
dec
pop
or
cld
rorb
out
inc
imul
xor
jo
insl
data16
or
mov
mov
lret
mov
insl
jbe
je
xchg
insb
add
out
cmp
push
sbb
je
xchg
and
sub
fmull
scas
cwtl
imul
mov
in
jne
mov
mov
xor
mov
fs
ret
insb
imul
pop
mov
stos
adc
and
loopne
test
push
pop
sbb
push
sbb
pushf
jg
cmp
insb
xor
xor
movsb
scas
sbb
sahf
or
sbb
sub
or
stc
jae
jo
bound
mov
jecxz
jno
ja
or
add
add
fldt
cld
dec
aad
loope
xor
jae
pushf
insl
outsl
fs
dec
insl
mov
adc
xchg
cmp
cld
pop
mov
jp
arpl
outsb
insl
imul
imul
mov
addr16
loopne
jns
pop
jae
xchg
sbb
fs
or
data16
jge
inc
dec
add
loope
shll
outsb
das
jge
aam
fildl
add
add
jmp
pushl
popa
mov
adc
push
pushf
and
mov
mov
movsb
bound
loope
jne
je
xor
int
push
loope
inc
xor
fisubs
loopne
mov
add
mov
rolb
inc
fwait
cmc
add
jl
scas
xor
gs
data16
lock
into
rol
xor
jo
loopne
pop
push
xor
xchg
cmp
in
sahf
imul
pop
mov
fs
mov
bound
fbld
je
xchg
shll
push
out
sbb
std
jno
addr16
stc
sbb
add
push
xor
ret
jle
cmpsb
jl
lea
data16
das
addr16
je
jae
stc
fisttps
pop
push
dec
push
push
inc
inc
dec
dec
inc
xor
dec
sub
stc
daa
inc
push
pop
push
push
inc
inc
lods
jmp
decl
mov
inc
push
add
push
dec
inc
push
push
inc
push
lea
loope
pop
dec
xlat
pop
push
pop
inc
pop
je
mov
jb
push
loope
ja
push
imul
xchg
push
mov
clc
inc
jle
xchg
dec
adc
jmp
inc
mov
insb
add
jp
cs
push
inc
sbb
arpl
inc
loope
xor
dec
jae
push
adc
js
mov
insl
push
js
or
aaa
fcomps
add
inc
or
out
mov
ja
dec
inc
popa
ljmp
jns
pop
add
add
outsb
jne
jae
loope
add
imulb
jp
bound
sbb
dec
shll
push
addr16
dec
shll
mov
mov
fistl
sbb
pop
call
add
push
sub
lds
xor
xchg
mov
insb
push
dec
push
insb
and
mov
push
jo
pushf
inc
and
push
add
fdivs
shrb
xor
push
into
es
fcompl
sub
mov
addr16
sub
inc
mov
dec
jae
out
shll
xor
cltd
push
and
shl
xchg
js
xchg
pop
push
mov
fistl
dec
push
push
and
push
push
das
mov
or
adc
adc
inc
add
sub
sub
jmp
mov
adc
pop
insl
xchg
jno
cmp
and
outsb
test
xlat
adc
clc
push
mov
dec
arpl
push
pop
gs
mov
clc
pop
movsl
and
sub
pop
pop
mov
lret
repz
insl
daa
jb
insl
test
repz
sbb
fbstp
sub
outsl
jp
popa
das
xor
xor
sub
cmp
push
dec
inc
and
adc
cmp
bound
inc
divb
sti
lods
xor
sub
sub
add
mov
dec
popf
imul
pop
fwait
mov
jnp
sub
xchg
dec
dec
mov
faddl
popa
repz
dec
or
cmp
jmp
jle
jbe
ja
dec
insb
mov
dec
xchg
adc
sub
jp
or
adc
and
dec
popf
pop
lret
xchg
mov
dec
push
mov
jno
push
cmp
rorb
xchg
int
xor
movntq
push
dec
mov
pusha
inc
dec
sbb
push
gs
or
js
mov
gs
insb
pushl
sbb
stos
shlb
sub
mov
aad
sti
imul
and
mov
jnp
push
dec
scas
dec
test
or
or
pop
test
sbb
dec
push
cld
jne
out
test
xchg
sub
push
push
stc
test
sbb
adc
pop
push
imul
inc
inc
ss
sbb
lea
in
xor
push
dec
mov
jno
or
outsb
lahf
sub
loopne
sbb
dec
push
dec
inc
jnp
fsin
add
xor
pop
sub
add
ret
xchg
and
add
add
mov
jo
dec
jae
fidivl
xor
shrd
pop
push
pusha
sbb
in
ret
ficompl
xor
mov
pop
mov
mov
sbb
sub
push
mov
inc
sub
arpl
loopne
or
jbe
inc
jl
js
inc
jo
out
xchg
clc
xchg
jae
dec
dec
push
inc
push
iret
cltd
fcmovbe
data16
and
sbb
mov
in
xor
inc
push
mov
dec
popa
sub
cmp
dec
and
inc
ret
push
test
sub
fsubrl
pop
adc
pop
mov
sbb
lea
inc
dec
sti
xchg
clc
mov
push
inc
push
ficoms
push
inc
out
mov
add
sbbl
inc
js
and
push
roll
sub
in
push
sub
inc
pusha
insl
sbb
and
aaa
cmp
sbb
adc
sub
adc
sbb
push
ret
dec
mov
test
mov
inc
pop
or
sub
int3
xor
and
popa
insb
popf
inc
mov
hlt
add
and
mov
mov
in
jo
data16
mov
jae
jne
or
mov
xor
orl
mov
pop
test
in
cmp
inc
xchg
sbb
insb
adc
pop
insb
xchg
arpl
xchg
cmp
insl
adc
jp
mov
inc
adc
cmpsl
ret
pop
orl
inc
dec
xchg
dec
jne
mov
in
imul
repnz
iret
and
push
jb
or
or
xor
leave
fidivs
or
fwait
inc
js
sbb
aas
dec
test
inc
and
test
dec
adc
and
add
dec
aas
jecxz
dec
mov
insb
inc
or
or
xchg
inc
je
daa
and
add
lods
inc
mov
inc
push
std
pop
lock
sub
sub
dec
adc
insb
ss
jle
pop
sub
push
int
jae
sub
pop
fnstcw
sub
mov
inc
rclb
in
andb
push
xor
pop
push
insl
sbb
inc
dec
inc
aam
push
add
enter
bound
jno
push
jne
outsl
cmp
push
leave
xchg
jnp
movsb
ss
pop
jbe
sbb
xor
xor
add
push
cli
xor
inc
mov
loopne
punpcklbw
jae
loopne
or
inc
gs
stc
bound
pop
sbb
and
push
jo
dec
and
pop
addr16
pop
lret
dec
insb
jmp
mov
cwtl
push
xor
insl
movsb
xorl
mov
or
push
xor
movsb
push
adc
mov
leave
adc
fdivrs
imul
inc
dec
sbb
xor
je
add
inc
mov
loop
dec
ret
or
outsl
dec
shrl
scas
mov
add
scas
and
daa
shll
int3
movsl
push
imul
xor
leave
xchg
mov
mov
add
add
pop
pop
cmp
xlat
xchg
lea
and
or
push
or
sub
imul
cld
mov
mov
jo
clc
jge
in
bound
push
jne
mov
mov
dec
outsb
js
sbb
lret
fmul
bound
push
add
enter
insl
fcmovnu
xchg
adc
fs
shrl
mov
push
adc
and
cs
inc
add
pop
push
adc
loopne
pop
or
sub
mov
imul
subb
daa
arpl
in
int
push
dec
and
sbb
xor
fsubrs
cwtl
push
xor
pusha
xchg
or
fwait
or
sbb
pop
xchg
mov
arpl
jmp
push
das
andb
jne
jge
push
js
cs
push
push
adc
pop
xor
sbb
int3
std
jae,pn
insb
push
sbb
inc
lods
movsb
cld
aaa
popa
jo
or
dec
add
or
jae
xchg
dec
and
or
sbb
or
fbstp
xchg
lds
sbb
adc
adc
push
pop
dec
cwtl
int
mov
sub
ret
push
rclb
pop
scas
add
push
sbb
or
imul
gs
sbb
sahf
dec
inc
push
stos
inc
push
cwtl
shrl
insb
test
jne
rorl
test
jne
sub
in
push
mov
aaa
dec
xor
aam
imul
and
stos
push
jo
pop
and
push
push
dec
dec
or
out
add
mov
or
fwait
sbb
sub
jle
jmp
orb
iret
insb
sub
dec
ss
test
mov
pop
mov
psubb
mov
mov
int
dec
dec
pop
pop
in
mov
arpl
lods
imul
and
mov
sbb
add
dec
push
cmc
subps
aad
clc
call
fstl
xor
inc
xor
cmp
cmp
sub
sub
or
inc
ss
xor
inc
jecxz
call
cmp
xor
scas
jns
shrb
xor
fdivs
xor
xor
pop
jge
hlt
ret
or
ud2
push
push
outsl
jns
pop
out
dec
adc
jno
aam
mov
mov
nop
mov
xchg
pop
sub
ficomps
mov
inc
sbb
cmp
gs
mov
dec
pop
jo
add
dec
xor
sub
and
dec
mov
pop
inc
sub
xor
or
push
inc
push
dec
lret
data16
das
add
fwait
xchg
mov
inc
and
les
or
jo
mov
test
inc
outsb
pop
bound
scas
push
mov
jae
jo
outsl
jp
mov
and
or
and
out
mov
adc
pop
mov
inc
mov
addr16
push
pop
fsubrs
xor
frstor
and
arpl
fs
das
ljmp
clc
and
mov
aam
pop
ret
xchg
fisttpll
rcl
hlt
push
pop
adc
inc
xchg
data16
sub
jnp
pop
adc
mov
xor
sub
and
into
add
sbbb
shrb
dec
insl
leave
xchg
cmp
inc
sub
jmp
jno
pop
push
jecxz
ret
lcall
xor
pop
lods
insb
sbbb
imul
bound
or
sbb
cmp
in
cs
inc
sub
sub
in
mov
addl
rolb
push
dec
inc
shl
inc
xor
das
pop
sub
sub
inc
lret
xor
lea
add
inc
inc
rcr
xor
mov
sbb
pop
mov
adc
gs
add
push
pop
pop
arpl
or
pop
xor
cmp
addl
inc
lret
push
test
jne
imul
jo
lcall
lds
test
dec
sub
adc
cli
push
xor
ret
pop
fs
push
ficoms
lods
pushl
aaa
cmp
mov
xchg
and
stos
adc
out
inc
cmovb
test
aas
xor
lret
gs
adc
ss
arpl
or
andl
cmp
add
dec
pop
add
dec
daa
aaa
or
fucom
ss
sub
and
arpl
xor
dec
xlat
jne
xor
aaa
dec
arpl
xor
pop
sub
pop
fs
add
sub
jae
push
cmp
or
and
popf
xor
ss
mov
xor
add
sub
pusha
mov
adcl
push
push
mov
sub
sahf
int
rolb
push
push
test
test
pop
and
and
sbb
insl
adc
sub
sub
mov
mov
dec
lret
sub
dec
lret
dec
dec
push
push
inc
sbb
inc
imul
dec
inc
dec
cmp
or
add
pop
jne
hlt
nop
jb
adc
in
adc
test
push
loope
cmp
and
jb
pop
imul
cmpsb
push
sbb
sub
jmp
add
mov
mov
outsl
cmpsl
pop
and
xchg
xor
sub
or
popf
sub
inc
jo
push
add
push
jno
add
push
fisubl
imul
xchg
pop
jmp
jnp
jge
add
xor
dec
adc
ret
or
aam
scas
movsb
dec
cs
sahf
fnstenv
fistpl
adc
inc
cmpsl
jp
hlt
and
je
in
and
fs
or
push
or
dec
movsl
pop
or
push
pop
repz
pop
and
mov
jo
sub
or
pop
mov
or
shrb
mov
xchg
lock
adc
pop
lea
loope
jmp
call
cmp
xor
inc
cmp
sub
xor
inc
sub
sub
sub
incb
xor
mov
inc
sbb
xor
in
mov
inc
jns
mov
jo
mov
sub
add
pop
push
fldcw
icebp
lret
pushf
insl
sub
aaa
lahf
into
imul
inc
les
mov
or
push
and
push
mov
adcb
or
stos
cmpsb
addb
jmp
jge
inc
dec
das
mov
pop
mov
dec
inc
dec
lock
xor
or
or
push
add
mov
sbb
dec
icebp
mov
xor
dec
in
push
inc
jp
andl
bound
sahf
into
mov
and
fisubrs
mov
icebp
imul
insl
sbb
mov
dec
push
stc
mov
rclb
add
dec
jo
inc
arpl
popf
fimull
adc
inc
or
jl
mov
sbb
push
aad
jo
cltd
pop
fstps
sahf
adc
xor
cmp
push
rcrb
and
sbb
mov
jnp
push
sub
or
add
lds
dec
nop
sti
ret
cmp
push
mov
adc
mov
sarl
pop
subl
jne
push
notb
lret
in
pop
aas
add
inc
cli
inc
jb
pushf
dec
jb
pop
jp,pn
outsl
push
jns
pop
clc
push
pop
cs
mov
push
add
or
lret
mov
mov
mov
pop
mov
xor
lods
mov
out
inc
adc
add
fcompl
cld
das
ja
jne
add
lret
in
sbbb
jmp
nop
mov
mov
bnd
and
int
cs
lods
push
xchg
inc
pop
fwait
xor
mov
sbb
data16
mov
imul
bound
ss
in
outsl
mov
movsl
sarb
mov
inc
rol
into
pop
outsb
jnp
arpl
add
lret
push
mov
out
int3
aam
int
shlb
dec
sub
rcll
in
icebp
push
sbb
testb
jl
fs
ja
inc
or
cmp
jno
or
push
pop
jo
in
and
ret
data16
jmp
pop
and
push
or
add
or
outsl
inc
sbb
and
and
mov
enter
and
loop
add
andb
cmp
jo
in
sub
bound
cmp
push
arpl
add
push
cmp
jl
jns
jecxz
xchg
adc
mov
mov
mov
bound
pusha
add
jne
sbb
addr16
dec
jns
pusha
add
mov
loopne
add
jmp
adc
adc
add
cmpsb
imul
inc
cmpsl
add
in
xor
in
and
adc
sbb
or
cmp
sub
sbb
or
cmp
sub
ds
push
push
push
push
cmp
or
and
adc
add
adc
add
add
call
sub
or
movups
adc
or
add
push
jg
add
pop
sbb
clts
sbb
or
sub
push
and
ss
das
sub
dec
and
jmp
aaa
and
pop
sub
test
add
add
mov
and
jle
push
jnp
sbb
add
add
out
inc
pop
inc
sub
add
fnstcw
ss
arpl
ja
pop
insb
push
inc
add
cmp
push
add
xchg
outsl
fldenv
outsl
pop
pop
rclw
dec
lahf
or
pop
and
or
insb
adc
and
xchg
andb
add
and
sub
inc
dec
out
add
add
or
pop
add
dec
inc
outsl
ss
and
xchg
and
add
jnp
xchg
mov
jae
xor
fwait
or
jecxz
mov
mov
ud2
add
add
pop
push
sti
fdivrp
pop
add
xor
cmp
bound
sbb
in
mov
or
or
data16
ss
addr16
addr16
in
ja
push
sbb
or
jnp
pushw
cmp
xchg
xchg
mov
xchg
stos
xchg
jmp
pop
test
sub
add
fadds
push
adc
and
mull
dec
inc
or
mulb
orb
or
push
ss
inc
pop
ja
fnstenv
xor
or
mov
mov
push
test
inc
xor
fwait
add
or
and
test
mov
testl
sbb
js
loop
pop
pop
or
ret
or
pop
or
ja
xchg
mov
cmp
xchg
in
adc
adc
mov
arpl
sarb
dec
adc
and
decb
adc
or
add
jmp
add
adc
in
jl
fiadds
or
adc
fnstcw
pop
or
pop
dec
fwait
xor
or
out
int
add
ja
outsl
data16
push
xchg
add
in
int
movq
sub
pop
or
and
call
push
sbb
sbb
xor
loope
pop
add
jo
repnz
pop
mov
xor
and
fstps
je
add
mov
push
bound
mov
mov
mov
pop
and
add
in
or
xchg
dec
in
int
mov
jae
pop
stos
insb
fldcw
pop
xchg
out
xor
or
add
bound
xor
cli
adc
popf
outsb
in
sbb
adc
or
jnp
add
or
stc
fcompl
xor
int
popa
lret
or
cwtl
cmp
testb
sbb
outsl
mov
mov
cmp
xchg
sub
das
add
jnp
outsl
sub
add
add
sub
and
adc
enter
or
nop
pop
hlt
xchg
mov
or
fwait
insl
movsl
xorb
insb
repz
outsb
pop
push
lods
ret
loope
das
sub
popa
or
insb
or
add
mov
aas
jnp
cmp
jns
or
jno
sti
inc
gs
je
imul
jae
movb
add
xchg
jbe
jb
outsb
loopne
xchg
repz
push
fisubrl
sbb
int
and
mov
or
gs
lods
xchg
insl
adc
imul
loopne
jb
xor
adc
sub
pop
adc
add
push
gs
jo
test
mov
xor
fildl
jno
mov
mov
inc
aas
mov
imul
insb
je
inc
int
das
xchg
mov
jb
call
cld
imul
pop
sbb
ja
shrl
dec
outsl
fs
subb
popa
adc
push
pop
add
pcmpgtd
and
sbb
mov
inc
lcall
xchg
das
stos
cmp
test
loope
lods
jae
xchg
ficoms
xchg
mov
inc
push
xor
test
cmp
push
cs
sub
xorb
adc
jne
rcrb
xor
inc
pusha
push
add
sub
fisubrs
xor
cli
hlt
inc
mov
adc
adc
mov
inc
inc
push
aaa
dec
inc
pop
push
fnsave
adc
and
and
jnp
mov
push
push
jne
fnstenv
push
out
or
and
sbb
ret
data16
mov
leave
pop
sub
lock
pop
sub
mov
mov
mov
jg
out
dec
outsb
dec
lahf
sub
or
push
ret
sub
cs
jne
or
mov
aam
rorl
sub
sub
or
ja
add
or
adc
ret
or
lret
inc
insl
jo
cmp
push
xchg
inc
int
cmpsl
shr
lcall
out
dec
adc
popf
pushf
mov
inc
push
cmc
inc
adc
int
fmulp
adc
pop
rclb
dec
xor
add
inc
mov
pushf
add
push
inc
in
arpl
or
mov
inc
add
or
sti
push
outsl
jo
push
push
inc
loopne
incl
sbb
add
add
aad
and
incl
add
add
add
xor
out
inc
fisttpll
push
inc
xchg
xor
xor
pop
sub
sub
add
popf
xchg
mov
xor
pop
mov
adc
add
inc
push
js
testb
in
nop
jmp
and
push
ja
and
jb,pn
aam
nop
out
lds
daa
lock
pop
push
imul
daa
inc
mov
xchg
xor
shlb
dec
add
subb
push
add
inc
add
add
add
add
adc
mov
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
