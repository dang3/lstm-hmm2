outsl
arpl
icebp
in
add
int3
jno
add
add
es
add
push
mov
pushl
push
push
call
leave
ret
adc
or
out
or
or
clc
popl
fcmovnbe
out
inc
cld
add
and
adc
add
outsb
mov
sub
es
sbbl
pop
fs
sbb
add
lods
mov
push
push
sbbl
jbe
sub
sahf
mov
mov
cld
pop
jnp
imulb
jne
lods
addr16
push
mulb
sbb
or
sarb
cld
cmp
jne
sbb
in
movb
jmp
push
push
insl
in
mov
sub
and
pop
lds
or
jnp
dec
int
push
arpl
out
xchg
pop
mov
aaa
cld
inc
ja
lock
les
sub
out
sti
lock
add
or
sub
mov
xor
or
jne
test
jno
and
lock
or
xor
and
mov
fildl
xor
clc
mov
adc
mov
cmp
xor
sbb
xor
aaa
and
push
jb
popa
xchg
lods
sbb
add
jge
sub
cmp
iret
adc
test
add
into
or
add
or
push
inc
xchg
cmp
cmp
pop
inc
bswap
scas
or
jbe
dec
xchg
add
or
mov
xchg
sub
xchg
sub
add
push
movzbl
and
mov
test
mov
or
sbb
add
jmp
adc
xchg
lock
push
sti
adc
int
inc
jb
shll
sarl
mov
adc
shrb
dec
xchg
je
mov
xchg
clc
and
icebp
adc
cli
add
sbb
cmp
xchg
add
jmp
adc
faddp
pop
std
in
mov
repnz
or
rcr
xor
sbb
out
jecxz
sub
and
mov
aaa
xor
lea
aas
and
push
add
and
jb
add
dec
or
lret
push
push
inc
sti
push
and
jno
mulb
or
dec
repz
jbe
or
daa
inc
add
jecxz
sbb
mov
mov
cmp
rorb
addl
add
or
push
dec
andb
es
jp
pop
das
jmp
into
pusha
repnz
push
int
int
fldcw
push
mov
hlt
popa
xchg
sbb
imul
movsl
jb
dec
mov
pusha
in
cmp
je
jb
subl
add
add
xor
jmp
rcl
push
jne
add
pop
and
sti
jne
add
fidivl
ret
lock
xchg
xchg
add
add
adc
sub
popa
and
fcompl
pop
testl
jne
xchg
in
push
hlt
sbb
adc
hlt
in
aas
add
adc
subl
or
in
push
adc
repz
in
sub
mov
xorl
or
cmp
mov
repz
popa
shr
mov
xor
push
sbb
sbb
push
or
or
fildl
push
cld
mov
mov
jecxz
push
shr
adc
sbb
pop
and
rep
pop
xor
pop
aaa
jmp
fisttpl
jne
jecxz
rep
pop
jecxz
fistpll
adc
or
jne
or
inc
mov
pop
inc
push
push
push
ja
jnp
bound
inc
sub
mov
cmp
ret
adc
out
sub
cltd
mov
add
mov
add
fnstenv
rclb
cmp
pop
in
outsl
fildl
outsl
jb
leave
inc
jne
pop
push
push
lods
jge
imul
mov
cmp
add
mov
pop
enter
sbb
sti
xlat
push
add
mov
push
cld
or
sub
xchg
cmp
sbb
add
add
in
adc
incl
pop
mov
cld
mov
pop
jmp
xchg
jno
in
push
xchg
icebp
xchg
mov
jg
sub
xor
sbbb
lahf
mov
out
pop
mov
sub
fyl2xp1
sbb
clc
clc
in
mov
xor
jbe
call
adc
movl
cmpsl
mov
mov
add
mov
rolb
push
push
inc
repz
pop
into
jle
sbb
popa
mov
push
sbbb
dec
popa
mov
aas
je
pop
hlt
push
or
je
mov
cmp
clc
cmp
xor
ficoms
nop
jmp
mov
add
mov
add
pop
sbb
adc
pop
and
test
push
orb
sub
jne
pushl
xchg
mov
mov
mov
sbb
shr
jae
xor
add
mov
add
je
ret
ds
mov
add
je
cmp
mov
jg
ljmp
add
xor
inc
loop
and
sbb
xchg
aaa
dec
dec
addr16
or
or
dec
clc
and
mov
cld
add
inc
push
push
or
xlat
adc
or
pop
sbb
fs
push
stos
les
mov
cld
push
push
mov
std
push
popa
jbe
push
out
popa
xorb
pop
mov
cmp
add
outsl
sub
mov
pop
sub
jg
cmp
rcr
jne
and
ljmp
cmp
ficompl
or
pop
into
out
or
cmp
push
lods
ja
cmpb
push
in
in
inc
xchg
jno
xor
sub
dec
ljmp
sub
jnp
add
inc
or
ss
dec
pop
push
sub
adc
dec
mov
mov
add
jnp
push
int
inc
sub
adc
arpl
mov
add
jmp
leave
add
pop
adc
insb
push
adc
sub
add
pop
adc
inc
cs
jl
int
loope
js
das
pop
mov
add
adc
and
test
pushl
repz
sub
xchg
cmp
cmp
and
pop
cmp
mov
pop
or
hlt
daa
cmp
xchg
ss
inc
or
add
fiadds
sbb
push
nop
clc
mov
out
push
icebp
add
or
adc
cld
and
adc
into
nop
adc
ja
test
movl
decl
mov
dec
and
cld
out
mov
out
jl
pop
xchg
aas
adc
xchg
pop
div
insb
and
or
icebp
fwait
shlb
push
jmp
in
sahf
fistpl
call
adc
inc
dec
movsl
call
outsl
mov
fldt
add
sub
inc
je
cmpl
add
push
mov
mov
adc
rorb
cmp
lds
es
test
sbb
loopne
jmp
insl
inc
mov
in
dec
in
sbb
push
and
jbe
iret
test
adc
adc
add
ss
mov
mov
mov
cmp
in
es
andl
clc
xchg
pop
ss
clc
stos
andnps
stos
les
pop
xor
cmp
or
jl
mov
call
or
rorl
push
adc
rclb
cmpsl
pop
sbb
cmc
add
xchg
inc
xor
lds
mov
or
push
lock
pop
test
push
xor
sub
sbb
sub
push
or
enter
arpl
xorps
ja
mov
aaa
sbb
aaa
push
pop
into
int3
add
inc
pop
arpl
add
inc
adc
lock
loop
bound
add
pop
adc
ja
pop
andb
pop
pop
fldl
pop
das
pop
cs
bound
mov
andl
in
jle
pop
call
adc
stos
cmovae
mov
push
push
mov
and
pop
or
nop
xor
pop
cwtl
mov
mov
nop
fidivs
push
inc
clc
push
add
sub
movb
sub
adc
adc
cs
pop
adc
mov
xor
mov
ret
ficoml
in
test
mov
mov
les
inc
or
or
ss
test
out
jnp
push
test
jns
cmp
nop
xor
add
loop
jl
nop
lods
nop
cmp
nop
add
std
jg
notb
aas
xor
nop
jg
add
add
jge
repnz
inc
or
push
sub
punpcklwd
repz
jp
inc
rol
loop
ror
test
enter
das
mov
xchg
and
nop
pop
dec
push
mov
jae
cmpsl
nop
adc
nop
mov
push
nop
cld
out
out
mov
jle
stos
das
outsb
loop
nop
pop
nop
sub
add
jg
aas
ret
pop
je
push
sbb
sbb
adc
out
fisttpll
mov
push
add
mov
fcmovnb
stc
in
mov
repz
int
and
adc
xchg
gs
and
mov
and
jb
push
out
inc
xchg
jns
sbb
adc
mov
mov
mov
or
lcall
loop
stos
clc
and
clc
jbe
sub
or
or
and
dec
out
sbb
sbb
test
aaa
cmc
out
mov
mov
call
nop
add
out
lock
cmp
xchg
sbb
add
rclb
mov
adc
xor
xor
or
es
imul
pop
jb
dec
fimull
push
push
and
shll
push
psadbw
lods
fwait
cs
cwtl
jmp
push
lds
inc
mov
add
pop
and
or
mov
or
pushf
add
out
sti
daa
cmpb
adc
or
into
jl
or
inc
cmp
add
jp
sahf
pop
mov
adc
jge
adc
sbb
imul
jmp
xor
call
fnstcw
shll
push
pop
sub
inc
jae
jae
add
inc
call
push
bound
mov
push
arpl
pop
xor
jge
lods
mov
loop
dec
hlt
pop
lock
sbb
xchg
rcrb
xchg
sarb
add
mov
divl
mov
xor
push
fs
inc
mov
sub
fildl
mov
push
push
push
adc
lret
cmc
jle
lea
les
or
mov
push
movsb
mov
sbbl
clc
jmp
aas
sub
cmp
jb
add
mov
pop
mov
mov
lea
movl
movl
cmpsb
das
mov
mov
xor
adc
std
scas
cld
repnz
jg
movsl
push
pop
pop
pop
pop
repz
or
mov
jae
adc
mov
mov
mov
push
adc
xor
and
add
pop
ljmp
add
rol
add
mov
xor
and
lea
add
sarl
mov
sti
and
add
ljmp
jmp
and
dec
or
rcll
lret
xor
and
lea
add
rcll
add
pop
scas
cmc
add
pop
lret
fs
sub
xchg
adc
test
and
and
xchg
inc
std
sbb
pop
leave
repnz
testl
mov
ljmp
mov
xlat
pop
mov
adc
stc
xchg
xchg
jno
std
xor
inc
pop
jle
lret
jns
cmp
or
or
and
fidivrs
add
mov
rcrb
ja
or
pop
es
fstl
pop
push
mov
pop
stos
mov
add
pop
and
daa
fs
adc
adc
and
push
adc
add
and
pop
leave
cmp
sti
shl
mov
pop
in
mov
out
loope
and
pop
aaa
ret
xchg
sub
xchg
cmp
lret
fs
in
adc
inc
and
and
and
mov
pop
leave
repnz
outsl
addr16
dec
sub
inc
adc
inc
cmp
lcall
insb
xchg
add
clc
xor
int
or
and
insl
xchg
aaa
pop
adc
or
in
cmp
repnz
inc
ljmp
pop
test
pusha
dec
mov
in
test
mov
jle
jle
sub
daa
mov
fs
test
or
sbb
mov
cmp
aam
and
fdiv
or
cltd
xor
jl
mov
inc
xchg
pop
cmp
push
lods
les
jg
jnp
mov
jmp
sub
into
cmp
sbb
or
cmp
ljmp
inc
sbb
sbb
or
cmpsl
and
cmp
clc
or
cld
adc
mov
xchg
ret
int3
andl
sub
xchg
int3
or
or
xchg
dec
fisubl
out
in
rcrl
test
cmc
add
jle
outsl
inc
addr16
scas
loopne
sub
cmp
inc
add
gs
mov
or
add
push
notl
repnz
repnz
sub
xchg
roll
jo
filds
pop
add
add
pminub
ljmp
mov
cli
cs
lods
xchg
ror
xor
sbb
pop
shll
push
mov
add
movsb
push
fidivrl
fists
jo
push
add
inc
test
es
bound
dec
cmp
lretw
int
mov
sub
xor
fiadds
inc
pop
inc
loop
xorb
push
pop
mov
ret
inc
cmp
out
push
pop
cld
pop
iret
add
movsl
xchg
push
or
popf
sub
or
pop
or
ds
stos
mov
cmp
or
add
or
out
das
pop
mov
pusha
push
movsb
jb
xor
or
or
add
mov
add
sbb
ds
or
out
or
les
imul
sbb
and
mov
push
jno
xchg
pop
or
scas
sbb
or
push
and
mov
xor
mov
ret
cmp
mov
push
and
ljmp
outsl
dec
insl
jb
add
adc
nop
sbb
jns
clc
je
or
adc
dec
icebp
push
movups
jmp
mov
jae
mov
sub
lock
xchg
mov
ret
pop
and
stos
es
xor
data16
popa
push
mov
outsb
outsl
or
cld
or
xchg
clc
loope
cltd
leave
inc
mov
addl
mov
imulb
cmp
outsl
cmpsb
aas
dec
pop
call
push
push
pop
ficoml
cli
sbb
test
adc
cmp
icebp
jbe
imul
adc
and
add
push
shl
xor
dec
push
cmpsl
push
xor
or
int3
push
dec
ss
sub
out
mov
mov
jg
sub
or
rol
cli
pop
push
or
cmp
or
xchg
pop
cltd
mov
jno
and
shlb
xchg
push
xchg
orb
cmp
loope
fdivs
mov
pusha
push
sahf
pop
aaa
ret
cld
sbb
lock
pop
jge
cmpsb
add
mov
adc
arpl
xchg
sbb
push
pop
push
insb
or
mov
jo
inc
mov
cmp
shl
stos
ja
mov
cltd
rorb
aam
pop
lock
mov
and
add
js
shlb
mov
out
lds
sub
adc
sbbl
sub
jns
jg
or
stc
fisubrl
mov
mov
or
pushf
mov
js
fcoml
mov
adc
fdivs
push
sbb
cld
push
xor
adcb
adcb
xor
and
and
jmp
icebp
cmp
or
dec
leave
test
inc
cmp
loopne
xor
fmuls
or
xchg
adc
push
dec
push
jo
jne
mov
in
scas
daa
lcall
push
dec
repz
in
movsb
loope
insb
lods
xor
adc
or
cmp
out
xchg
add
rcl
add
sub
hlt
in
pop
cmp
aam
sbb
repz
in
imul
jae
fmull
repnz
jno
dec
fadd
pop
ljmp
mov
mov
test
mov
add
je
movsl
movsl
sbb
je
xchg
lods
xor
xchg
inc
into
cwtl
sbb
mov
cmpsb
and
pusha
sub
jo
xorb
adc
dec
and
lock
or
or
sbb
lods
jp
in
xchg
inc
inc
mov
cmp
mov
stos
and
or
setno
jns
shrl
stos
pop
inc
xor
sub
push
pop
fldenv
paddd
mov
mov
in
mov
push
adc
inc
sub
iret
insb
add
or
jae
shrl
adc
jp
pusha
icebp
pop
adc
daa
pop
lods
mov
arpl
sbb
dec
test
and
test
or
adc
xor
adc
arpl
arpl
sub
cmp
lods
and
icebp
cwtl
std
in
sub
sti
punpckhbw
icebp
out
or
jmp
push
push
or
inc
push
negl
es
sub
cltd
gs
mov
xchg
push
jge
add
push
shl
xor
pop
sub
mov
mov
sub
mov
dec
sub
push
inc
push
sub
scas
cmp
test
adc
inc
inc
sub
lahf
pusha
movsb
mov
nop
call
mov
adc
cmp
or
pop
mov
sbb
and
movnti
in
insb
adc
jbe
enter
test
or
pushf
and
lret
adc
mov
add
mov
fldpi
sbb
iret
fbstp
sub
dec
and
sbb
imul
xadd
jb
jo
lock
sub
cmp
in
mov
sub
and
add
add
push
pop
push
or
lock
lods
sub
mov
cmp
ja
inc
daa
hlt
jb
loopne
fcomip
mov
xchg
pop
lock
push
aaa
filds
push
sbb
rcrb
sub
ds
mov
push
roll
mov
xor
xlat
and
mov
jge
ret
xchg
or
push
sbb
inc
pop
fisttpl
iret
ret
dec
cli
push
movb
add
add
add
push
add
pop
push
lock
les
mov
or
inc
cmp
inc
mov
mov
hlt
sub
inc
repz
in
jnp
out
mov
cltd
loopne
dec
fisttpl
cs
fmulp
mov
adc
imul
pop
sahf
cmpsl
imul
push
add
std
cld
pop
sahf
out
sti
cli
stc
clc
mov
mulb
sbb
mov
mov
into
mov
xor
enter
mov
cwtl
adc
loopne
mov
adc
inc
inc
xor
sub
adcb
cmp
or
shlb
jno
cmpsb
jb
test
adc
push
data16
inc
inc
cmp
push
lods
xor
push
dec
jg
and
mov
push
ret
mov
mov
lods
fabs
add
insb
push
loop
aad
inc
sub
sbb
add
and
sub
lahf
pop
stos
insl
jecxz
mov
push
cmpl
mov
jg
adc
cmp
sub
pop
insl
xchg
insb
in
mov
adc
and
sub
repz
or
inc
fwait
pushf
xchg
imul
xor
xchg
or
push
push
call
inc
out
lahf
xor
pop
mov
loop
and
outsl
repnz
js
mov
callw
inc
or
call
clc
cmp
mov
in
imull
mov
ss
hlt
notl
into
test
xor
mov
icebp
fwait
jmp
add
pop
pusha
dec
jmp
push
ror
ss
jne
dec
mov
xchg
xor
ret
lock
push
adc
dec
call
das
out
aaa
jbe
enter
testl
or
cmp
pop
sbb
xchg
xor
adc
hlt
testl
sub
and
xchg
in
lock
sub
inc
in
dec
cmpsb
inc
xchg
out
xor
inc
call
jns
push
pushl
adc
sub
xchg
mov
call
jns
sbb
inc
inc
mov
add
in
inc
push
inc
ds
cmp
or
pop
xor
or
adc
rol
and
mov
mov
ds
fldt
bound
mov
inc
dec
pop
xor
filds
pusha
pusha
cmp
inc
repz
push
movsl
imul
mull
sbbl
clc
cwtl
scas
ret
cmp
jge
cli
add
add
or
inc
test
pop
scas
sub
push
sbb
jle
push
in
push
lret
sub
and
mov
dec
lds
pop
in
data16
or
hlt
adc
xchg
rcll
movsl
mov
mov
mov
push
lahf
dec
or
cmp
jp
scas
sti
add
push
or
ss
incl
nop
xor
pop
arpl
xor
push
push
enter
push
jo
dec
mov
add
pop
in
into
jne
aaa
or
xor
adcl
inc
xor
push
icebp
adc
mov
xchg
inc
in
sbb
test
pop
xor
lock
add
xchg
mov
cltd
jmp
dec
cwtl
cwtl
ss
mov
dec
add
inc
push
add
insb
fsubr
xor
scas
adc
cltd
adc
adc
jmp
and
xor
and
sub
sbb
cmp
or
and
loope
push
adc
add
pop
inc
mov
push
push
in
xor
adc
xchg
or
subb
jmp
mov
fidivrl
xchg
cmpsl
je
je
sub
pop
jno
inc
inc
or
inc
das
adc
les
xor
mul
ret
mov
stos
xchg
xor
dec
push
rcrl
test
and
fmull
dec
mov
shlb
inc
test
push
mov
adc
add
mov
rolb
scas
cmp
jne
xchg
sbb
sbb
int3
cmp
bound
jg
xchg
sbbl
inc
push
in
xor
adc
push
and
outsb
cld
jmp
xchg
adc
pop
andl
dec
insb
repz
nop
add
cmp
insb
xchg
xor
fs
dec
mov
sbb
mov
dec
fsubrp
push
jb
dec
scas
mov
addr16
shrl
mov
sub
or
xor
and
scas
push
push
repnz
ds
dec
pop
leave
xor
adc
test
ds
sub
leave
inc
mov
fwait
lods
push
mov
jb
mov
add
ds
and
jae
pusha
dec
aaa
or
xor
rolb
arpl
dec
push
popa
iret
mov
and
and
add
add
or
push
lea
jo
loopne,pn
lahf
sbb
out
and
sub
sbb
call
mov
sub
mov
xor
mov
or
mov
enter
sub
push
fs
cld
or
push
xchg
jb
cmpl
xchg
je
lock
push
in
sbb
lea
jns
loopne
mov
xchg
xor
jns
push
or
pop
clc
nop
sbb
in
in
jnp
fs
mov
xor
pop
or
adc
push
aas
sub
iret
arpl
xor
iret
repz
enter
sub
enter
clc
push
popa
roll
jp
or
adc
fmul
lock
rolb
xchg
sbb
add
push
iret
in
cmp
outsb
cld
xor
xor
sub
loop
movsb
flds
push
fists
lea
dec
aaa
in
std
or
lcall
enter
xor
inc
jae,pt
fnstenv
pop
push
aas
or
arpl
std
inc
fsubrs
sub
ds
cli
add
lds
sbb
mov
dec
push
jbe
outsb
inc
int3
sbb
js
cmpxchg
or
or
hlt
and
fwait
xor
xor
sbb
inc
add
or
xchg
xor
push
sub
inc
push
test
in
sbb
sub
xorl
xor
and
orb
push
xor
in
xor
and
ss
roll
or
nop
outsb
or
cld
add
popa
xor
data16
shrb
push
adc
pop
pop
pushf
mov
and
adc
inc
jno
or
or
dec
adc
leave
adc
repnz
add
and
in
loopne
xlat
sbb
call
cmp
fimull
or
mov
popl
stos
pop
aaa
icebp
or
cmp
stos
andb
inc
push
pop
push
inc
lods
mov
or
xchg
inc
sahf
loopne
dec
pop
sbb
movsb
jecxz
inc
or
mov
push
jg
pop
mov
popa
repnz
pop
xor
or
mov
push
fdiv
andb
cmpsb
in
cmp
clc
into
cs
add
loopne
push
add
mov
mov
dec
adc
or
adc
pop
fcompl
leave
add
cmp
and
rcrb
add
sarb
inc
jb
cmp
dec
cmp
lods
adc
stos
xorb
jns
cmp
ss
in
inc
repnz
jnp
insb
sub
xchg
pop
pusha
mov
lods
lods
jl
or
xor
loop
call
inc
xor
dec
xchg
in
insb
or
jg
fcomps
popa
adc
adc
ret
fcoms
enter
dec
or
xchg
sbb
dec
jecxz
mov
dec
out
jno
popa
xchg
lret
int3
or
cmp
push
and
and
and
nop
xor
sub
sbb
add
xchg
push
mov
leave
adc
aam
dec
rorb
add
sbb
jmp
ss
sbb
pop
je
and
fdivrl
int3
inc
mov
icebp
jne
cmp
and
and
rcrl
dec
jo
pop
dec
popa
out
add
in
dec
or
dec
lahf
cwtl
xchg
mov
and
cltd
ss
lods
jecxz
jno
fwait
cmpsl
ss
rol
add
outsl
int
push
and
dec
jne
mov
popa
dec
cmpsl
cmp
dec
aaa
cmp
iret
xchg
sbb
push
push
pop
fldcw
jp
ret
and
jo
xchg
and
pop
enter
xchg
adc
xor
push
dec
push
sub
inc
jbe
test
adc
insb
mov
cltd
xchg
adc
adc
mov
mov
push
mov
test
rcll
fsub
aaa
xchg
loopne
inc
push
push
leave
mov
push
push
stos
or
jge
jmp
adc
xor
and
push
cli
adc
enter
adc
nop
pop
and
int
push
xor
push
and
cmp
dec
push
and
and
sub
and
sbbl
outsl
fadds
xchg
push
int
pop
push
dec
xorl
cmp
es
cmp
imul
clc
mov
mov
adc
add
or
mov
xchg
xor
sub
xor
adc
add
call
pop
jne
pop
pop
mov
int
inc
pop
lcall
ss
mov
dec
push
std
add
push
jle
ljmp
push
adc
aas
and
cs
pop
pop
or
rorb
add
jnp
mov
xchg
jmp
pop
mov
je
addr16
cs
push
sub
cmp
xchg
sub
xchg
push
push
lcall
push
push
and
and
scas
enter
pop
mov
add
adc
jmp
and
sbb
cmp
inc
dec
stos
in
mov
in
add
into
inc
inc
xchg
add
jne
loopne
xchg
inc
and
pop
pushf
xchg
add
movsb
loopne
xchg
gs
sbb
sbbb
push
fidivs
inc
adc
leave
data16
sub
pop
sbb
adc
or
daa
cmp
in
cmp
and
pop
xchg
add
pop
lods
pop
add
imul
cmp
inc
adc
adc
in
stos
mov
dec
add
push
rcrb
rcll
mov
cmpb
enter
pop
cmp
and
xor
pop
mov
data16
fldl
jg
jg
and
lods
cmp
cmp
mov
cmpsl
cmp
sbb
nop
outsl
repnz
rorb
sbb
mov
subl
inc
popf
cld
popf
dec
adc
and
cmp
cld
push
xor
cmc
and
or
inc
into
push
adc
sbb
movsb
cmp
push
pop
pusha
or
sbb
lret
faddl
sub
push
and
nop
insb
and
inc
jb
sbb
inc
popa
sbb
mov
aad
mov
dec
xchg
cmp
xor
fcomps
pop
push
es
xchg
sub
cmp
jl
insb
mov
pusha
cmp
cmpsl
pop
orl
cmp
pop
mov
sub
cmp
cmp
inc
pop
mov
mov
sub
iret
call
sbb
and
jmp
push
jnp
outsb
xor
inc
loopne
add
jge
or
xchg
mov
or
sub
punpckhbw
scas
adcb
rcrl
adc
repnz
std
rolb
sbb
cmp
ficomps
movsl
cmp
scas
cmp
cmp
dec
xchg
loopne
cmp
or
add
aam
sbbl
xchg
sbb
aam
pop
rolb
in
aam
les
cmp
bound
xor
gs
and
inc
pop
hlt
add
cmc
sub
add
sbb
cmpsl
push
orl
cmp
inc
repnz
hlt
loopw
packsswb
cmpsl
nop
push
and
cmp
orb
fdivrl
fdivrs
push
xchg
popa
jo
jns
jo
addr16
mov
adc
jge
xchg
mov
aam
lcall
and
gs
and
add
inc
cmp
jp
inc
adc
adc
and
je
add
cmp
int3
adc
mov
sbb
rcll
cmp
xor
cmp
dec
lahf
adc
mov
cmpsb
cltd
fildl
cmpl
cmp
xor
outsb
xor
and
push
iret
arpl
pop
adc
or
adc
ret
sub
push
adc
roll
lcall
fstp
or
divb
ljmp
push
mov
add
fs
sbb
sub
fnstenv
addl
enter
jg
cld
jmp
mov
mov
loopne
sub
bound
and
les
fildl
jbe
mov
inc
inc
stos
dec
mov
lds
in
sub
lea
or
mov
inc
inc
out
enter
inc
adc
pop
adc
out
add
out
jg
orps
lock
or
in
movzbl
mov
lock
out
mov
push
jge
sub
pop
adc
push
or
pushf
push
leave
sarl
ss
pusha
push
add
jbe
clc
pop
add
out
sbb
pop
inc
or
roll
lock
push
jbe
push
jmp
xor
inc
inc
out
cs
dec
test
subl
mov
jg
imul
push
testb
out
inc
add
ss
test
mov
or
adc
and
jbe
adc
mov
xchg
aam
lock
adc
jmp
pop
adc
mov
jbe
filds
call
pop
cmp
and
jo
dec
sub
jne
xchg
cmp
loopne
pop
mov
ret
clc
cmp
lock
lods
shll
div
jb
cld
pop
push
rolb
in
xor
adc
notb
adc
sub
imul
cld
add
mov
mov
cmp
daa
mov
pop
das
add
or
popf
pop
in
sbb
test
imul
add
adc
insb
xor
ss
add
sub
and
xor
or
cmp
sti
jge
outsl
pop
clc
jb
sub
or
je
pop
loopne
in
call
mov
call
pop
inc
aas
push
push
stos
lock
inc
pop
sahf
popf
inc
jg
or
dec
cs
xor
sbb
pop
sbb
xchg
inc
lods
mov
dec
add
aas
je
nop
gs
and
pop
and
mov
loop
bound
dec
adcb
jo
sbb
test
and
and
mov
sahf
xor
repnz
ficomps
aad
inc
stos
sub
and
mov
and
pop
aam
jb
add
addr16
enter
jb
or
or
lcall
mov
mov
adc
adc
inc
xor
cmp
enter
cmpsb
lods
js
mov
nop
outsl
repnz
jb
or
loopne
enter
sbb
cmp
lock
mov
cmp
add
and
dec
and
push
xor
test
inc
push
mov
add
add
in
mov
mov
inc
or
test
xchg
jae
jge
sub
push
add
jne
mov
jbe
push
iret
jl
cmp
arpl
je
push
call
push
adc
xchg
pop
sub
cmp
rclb
in
fs
fsubr
add
xor
popl
test
adc
aaa
inc
adc
and
xchg
cmp
cmp
cmp
or
xchg
lahf
adc
mov
je
push
push
leave
sub
call
fstl
or
mov
movl
lock
push
or
add
add
sub
cmpw
jbe
lods
das
mov
add
hlt
push
out
imul
lret
gs
push
mov
stc
bound
bound
test
cmp
inc
inc
xor
fldenv
lock
rolb
add
gs
jmp
inc
adcb
dec
add
xor
sub
or
roll
push
push
fsubrs
dec
adc
aaa
sub
test
loop
or
rolb
and
dec
sbbb
mov
add
push
or
adcb
bound
push
inc
call
popf
lods
adc
popa
push
mov
notl
xor
cmpl
rcrb
loope
or
fwait
jl
mov
push
add
xorb
and
mov
adc
sub
add
push
fmul
mov
push
btr
and
lds
call
shl
mov
jbe
in
clc
nop
fs
ds
xchg
arpl
test
les
outsl
ja
dec
jl
cmpsb
sahf
stc
lcall
ljmp
stos
sub
xor
xchg
scas
add
fs
addl
clc
fs
add
daa
sub
rorl
aaa
xchg
out
mov
pop
xor
xchg
jb
enter
mov
sbb
mov
sub
scas
sbb
outsb
nop
add
fwait
ljmp
sbb
test
dec
xor
xor
pop
or
xchg
or
in
adc
or
sbb
inc
popf
add
test
push
mov
fcoms
jp
clc
cmpsb
inc
add
dec
jmp
das
or
test
jmp
cmp
jae
nop
addb
push
pop
enter
adc
pushf
inc
push
nop
push
ret
add
fs
adc
mov
test
mov
jp
mov
push
xor
push
or
or
mov
jl
shlb
leave
das
in
shl
inc
pop
jne
mov
xchg
lock
inc
jbe
jnp
jne
int3
bound
loopne
jmp
jo
ds
xor
out
sti
xchg
adc
mov
adc
das
sahf
inc
dec
sahf
add
les
fmull
inc
dec
fiaddl
lock
inc
add
or
out
in
pop
inc
test
jl
les
xchg
mov
lea
scas
ror
les
mov
nop
in
rorb
enter
and
in
data16
nop
shlb
sbb
jecxz
fnstcw
les
xchg
xchg
in
sarb
mov
or
mov
les
sbb
pusha
sahf
jmp
xor
jne
ret
inc
repnz
xor
add
scas
aas
pop
adc
fs
test
std
and
outsb
cmp
jmp
adc
mov
pop
sti
adc
in
enter
xchg
popa
shrb
addl
pop
jb
adc
cmovns
xchg
dec
mov
mov
sub
add
jns
push
xor
cmp
faddp
arpl
adc
xchg
seto
jae
and
adc
or
nop
sbb
jne
jne
add
sub
sub
adc
and
mov
push
push
pop
xchg
add
jae
adc
insb
xchg
push
hlt
add
call
std
cmp
xor
nop
adc
enter
push
mov
sub
mov
add
xchg
cld
and
and
ds
orl
push
int
cs
lcall
or
push
xor
pop
insl
jmp
cmpb
jne
pop
inc
lea
sub
xor
lret
adc
adc
lds
push
fdivl
jns
pusha
icebp
sub
fstps
push
call
pop
cltd
inc
xor
mov
pop
xchg
sbb
call
inc
inc
mov
add
fs
jl
or
icebp
jne
test
pop
mov
add
push
cmp
xor
inc
mov
lods
xchg
inc
testb
mov
popa
jb
add
add
inc
mov
sbb
into
or
orl
jns
xchg
aas
and
adc
fs
sbb
orb
hlt
mov
and
or
mov
adc
aas
adcb
sbb
loope
cmp
xchg
push
lret
sbb
daa
or
inc
jmp
pop
sbb
sub
and
and
inc
stc
sbb
and
xchg
outsb
les
adc
das
add
nop
sbb
dec
pop
xchg
inc
xor
mov
lea
mov
inc
add
and
scas
inc
push
lea
or
nop
insl
test
jge
rolb
sub
repnz
and
add
jns
and
aam
sub
push
jb
inc
cs
jns
add
fistl
sub
sub
cwtl
inc
testl
jne
sbb
nop
cmc
add
add
shlb
nop
mov
leave
and
insb
dec
or
or
enter
adc
adc
or
dec
xchg
adc
loopne
rolb
es
dec
and
push
cli
sbb
adc
mov
ret
loopne
cmp
mov
mov
enter
inc
jae
dec
xor
int
clc
or
add
add
orb
lea
push
push
in
call
and
sbb
and
ror
xor
out
adc
mov
add
faddl
inc
vcomiss
sbb
rclb
pop
xor
or
in
sub
fsubrs
cld
adcb
and
cmp
ds
dec
mov
ss
mov
nop
sub
mov
push
divb
sbb
pusha
sub
sbb
es
adc
push
dec
xorb
dec
mov
add
push
push
pop
and
mov
or
sbb
imul
rorl
imulb
add
int
dec
mov
inc
adc
aaa
or
je
adc
and
xchg
and
push
sar
sub
sub
mov
sub
mov
cwtl
fucom
mov
push
aaa
insb
enter
jne
jmp
cmp
or
or
and
pop
cmp
nop
lea
iret
xchg
test
ficoms
nop
je
lea
mov
loopne
dec
mov
mov
lods
adcb
icebp
fnstcw
out
jne
xlat
out
inc
mov
ja
jmp
shlw
xorl
andl
enter
dec
add
or
insl
dec
or
testb
int
and
iret
es
pushf
loop
jbe
inc
adc
ss
popa
mov
jge
cli
pop
mov
jmp
pushl
popl
sbb
mov
stos
jb
ss
mov
mov
loopne
sbb
push
inc
xor
xchg
decb
xor
cmp
or
push
add
adc
je
mov
ds
pushf
pmulhuw
clc
and
add
or
jle
rcll
addr16
repz
or
adc
jb
sub
inc
mov
mov
adc
movb
sbb
sub
add
push
shrl
sbb
test
psubb
repnz
mov
clc
clc
adc
sti
loopne
or
push
push
stos
bound
loopne
dec
or
call
decb
sbb
or
pop
mov
cmp
jb
add
ja
sub
jmp
push
inc
jb
mov
add
jmp
cmp
or
daa
add
es
cmp
or
outsl
mov
loopne
les
sbb
pushf
mov
xchg
mov
movsb
mov
xchg
orb
orb
adc
sbbl
lock
jb
pop
in
call
pop
sbb
jno
js
sbb
dec
jbe
clc
sbb
nop
mov
and
xchg
xchg
add
in
or
ljmp
adc
or
jle
loopne
cmp
repnz
or
fdiv
fs
loopne
shlb
pop
cmp
jmp
mov
cwtl
xchg
lods
rcl
sti
cmp
les
fistps
sbb
les
sub
cli
jne
outsl
push
and
loopne
or
fwait
test
pop
les
enter
insl
cwtl
or
sbb
ror
lods
and
pop
je
and
loopne
cwtl
or
enter
pop
or
lods
and
arpl
and
shl
pop
icebp
add
push
icebp
inc
loopne
sbb
in
mov
gs
xor
dec
mov
xchg
xor
sbb
call
mov
sbb
loope
or
push
jno
adc
stc
dec
jne
sbb
mov
sahf
iret
xchg
jb
add
or
add
pop
lret
inc
push
inc
or
cmp
cwtl
leave
sub
inc
or
inc
inc
and
clc
push
push
mov
add
test
shrl
shlb
out
adc
test
fs
sbb
add
cmp
jne
or
out
fdivl
jo
push
and
test
mov
or
mov
fistl
push
shl
mov
jmp
adc
in
dec
xchg
pop
pop
inc
dec
jbe
jge
fs
ds
es
hlt
mov
and
xchg
xor
xor
add
cmpsl
imul
hlt
adc
push
cmpsb
in
or
mov
jo
jae
mov
hlt
andl
insb
movsl
js
mov
push
cs
js
out
adc
dec
cmp
mov
mov
push
subl
and
jnp
aam
add
jbe
or
xchg
sbb
lcall
subb
das
and
cmp
loopne
test
adc
or
out
xor
mov
cltd
out
testl
stos
mov
bound
mov
cmp
xchg
fldenv
mov
scas
es
enter
sub
add
mov
and
add
fcoms
int
add
enter
mov
jb
pop
insb
icebp
imul
lea
inc
pop
and
test
mov
and
adc
leave
add
add
push
xchg
ret
ud2
or
push
jge
andl
aaa
inc
andb
add
add
sbb
jno
add
and
ss
or
mov
or
add
or
push
adc
jo
cmc
pushf
add
idivl
mov
xchg
push
rcrb
mov
nop
outsl
pop
or
cmpb
sbb
push
cwtl
cli
or
or
fs
fcoml
sub
mov
fisttpl
or
or
pop
dec
mov
mov
push
icebp
xchg
adc
jbe
add
fnstcw
repnz
push
xchg
jl
bswap
add
repz
push
push
fwait
sub
je
call
pop
jbe
jp
pusha
jnp
or
int3
clc
push
in
jae
xchg
repnz
xchg
testl
adc
cmpsb
fidivl
pushl
stos
lock
mov
rorl
push
xchg
testl
and
icebp
sbb
jmp
lods
xor
jp
loopne
loopne
mov
jl
out
loopne
sub
pop
es
mov
insl
fs
loopne
cs
adc
add
test
xor
rcrb
test
enter
in
loopne
outsl
adc
arpl
or
or
xchg
inc
push
lea
pop
rolb
and
and
jle
dec
or
punpckldq
lea
mov
jbe
pop
jne
and
popf
add
addb
into
cmp
mov
jge
jb
pop
jne
push
dec
js
xlat
mov
xor
or
lods
fs
xor
or
sbb
cltd
icebp
out
insb
insb
fs
lea
enter
fstl
cmp
in
or
pusha
add
fdivl
test
push
and
xor
xchg
mov
jno
call
rolb
mov
sub
icebp
push
pop
dec
scas
call
and
in
cmp
ja
sub
int
lods
mov
adc
xchg
fclex
add
pop
in
and
jae
lods
movsl
sbb
dec
add
or
xchg
sub
shr
sbb
movsl
cwtl
inc
jge
mov
bound
pcmpeqb
add
inc
and
lcall
xchg
movsb
cli
jb
popa
hlt
addr16
mov
dec
inc
and
shlb
repnz
sahf
and
mov
mov
jl
sbbl
push
clc
rcrb
fiadds
cmp
enter
inc
push
or
xor
push
inc
inc
mov
ss
addr16
inc
mov
or
inc
movsb
push
dec
add
adc
addr16
pop
ficoms
je
pop
je
pusha
cmp
jo
das
pop
and
inc
sarb
dec
daa
jne
pushf
sub
mov
sbb
pop
adc
mov
push
int3
inc
cmp
pop
cmpsb
out
mov
pop
pop
inc
cmp
bound
xchg
sbb
jne
cmpb
adc
or
and
mov
insb
cmp
mov
testl
sub
push
sbb
enter
adc
insl
aaa
jne
push
test
cmp
xchg
int
or
adc
adcb
push
mov
xor
sbb
cltd
nop
cmpsb
imul
inc
lcall
inc
jecxz
out
call
sbb
int3
sti
aam
or
enter
push
ret
ja
or
cmp
sbb
add
lea
cmp
inc
inc
xor
cmpb
sbbb
push
pause
movsb
cmpsb
inc
enter
push
inc
mov
add
mov
mov
inc
hlt
or
mov
or
jg
call
data16
push
adc
sub
and
add
push
sub
add
sbb
leave
test
xor
inc
mov
mov
sbb
mov
pop
inc
addl
enter
sbb
or
clc
adc
mov
mov
jg
je
or
adc
push
xor
leave
loopne
and
andb
out
adc
add
xor
adc
push
pop
dec
or
push
pusha
push
push
adc
leave
inc
xorl
xor
inc
xchg
pop
push
push
ss
jnp
fadds
je
mov
in
shll
xchg
mov
dec
and
nop
or
and
mov
adc
and
mov
mov
add
ja
stc
into
add
sub
mov
adc
fwait
adcl
pop
jo
mov
imul
push
stos
jbe
xchg
imul
and
movaps
cmpsl
sbb
push
jb
add
es
add
and
push
xorl
xorb
lods
sub
mov
and
xor
xor
in
or
push
out
rolb
addl
xor
cmp
push
sbb
andl
xor
add
xor
aaa
inc
scas
xchg
pop
add
mov
or
dec
push
sub
jno
xor
dec
inc
mov
cmp
push
adc
loop
cmp
mov
push
mov
mov
adcl
add
enter
in
or
pop
push
push
cmp
filds
cmp
enter
cmpsl
mov
cmp
push
das
and
dec
inc
jo
pusha
add
cs
or
pop
dec
or
sbb
dec
adc
decb
sbb
jnp
add
mov
xchg
pop
adc
ret
out
or
pop
inc
dec
aad
ret
je
fs
push
fldenv
lret
push
into
add
inc
lea
xorps
sub
pop
pop
push
mov
popa
or
xchg
mov
cs
or
repnz
shlb
pop
dec
dec
sti
cwtl
js
xchg
dec
jb
mov
mov
popl
jp
ds
sub
ret
es
cmp
lcall
dec
or
in
leave
adc
ja
scas
mov
ret
push
and
out
cmp
rclb
inc
movsb
sbb
sahf
sbb
lcall
inc
dec
pusha
mov
call
rorb
scas
cmp
xchg
sbb
push
mov
scas
mov
adcb
inc
push
leave
add
inc
pop
inc
and
leave
push
outsl
push
sbb
jl
inc
sub
and
cmp
and
inc
push
and
push
xorl
cmp
adc
sub
insb
into
lock
add
cmpb
lea
clc
cmpw
jne
inc
adc
mov
and
dec
sbb
and
or
or
or
and
xor
leave
mov
mov
jb
inc
into
inc
iret
inc
jg
dec
and
out
jmp
push
or
in
scas
or
test
xor
xchg
push
enter
adc
dec
cs
hlt
mov
inc
orb
sbb
add
call
pop
push
sub
pop
or
aam
data16
lds
inc
lock
fisttpl
leave
and
leave
push
adc
push
xor
add
and
pop
or
test
sub
nop
or
fsubrs
in
nop
pop
nop
leave
xor
scas
pushl
pushf
scas
push
in
jp
cmpsl
jmp
mov
cmc
push
mov
out
pop
cmpl
and
fstl
cmp
dec
mov
pop
notb
push
mov
loopne
nop
scas
sub
pop
mov
insb
sbb
pop
sub
lods
sub
addb
sbb
fsubrs
xor
dec
addb
int
or
shlb
daa
and
and
and
pop
mov
and
and
mov
push
cltd
mov
insb
movsl
outsb
mov
and
pop
popa
aam
inc
mov
push
or
lock
insb
aas
mov
mov
mov
mov
dec
hlt
or
sub
sbb
pop
aaa
data16
dec
hlt
pop
jg
ljmp
cmp
mov
mov
pop
mov
getsec
or
lcall
and
adc
data16
shl
pop
push
cmp
js
loopne
in
test
mov
push
ret
jne
movsl
js
jb
sub
and
or
jbe
loopne
stc
data16
or
test
sahf
dec
xchg
cmpsl
stos
loopne
cli
sbb
outsl
inc
mov
jne
mov
daa
adcb
xchg
clc
mov
jb
add
in
cmp
inc
fsubl
inc
faddl
jmp
jecxz
or
in
call
nop
in
in
push
sub
mov
xor
lock
test
cli
mov
mov
add
adc
into
add
push
nop
dec
roll
mov
mov
inc
sub
jnp
mov
sahf
mov
pop
inc
js
push
xor
or
and
xor
or
rolb
out
inc
add
add
add
inc
jbe
adc
sub
inc
push
and
sarb
sub
cmp
xlat
mov
leave
push
imul
fldt
pop
sbb
adc
xlat
push
sbb
and
pusha
add
cmpsl
std
inc
jmp
inc
jb
inc
dec
jo
enter
and
sbb
rorb
out
imul
or
das
mov
sub
pop
lahf
push
xor
sbb
push
add
push
inc
dec
push
in
sbb
popf
sub
andb
inc
into
adc
adc
add
and
and
lcall
sub
add
lret
fldl
mov
cwtl
pop
mov
inc
jge
cmp
ljmp
leave
xchg
inc
shlb
dec
pop
and
and
and
test
add
push
enter
enter
imul
xchg
xchg
add
mov
repnz
add
aaa
aam
or
mov
push
cmp
push
pusha
mov
add
nop
xchg
xor
adc
and
and
cmp
inc
dec
lret
sub
jb
push
pop
lret
dec
xorl
inc
jb
outsb
jp
in
scas
nop
mov
push
xchg
pushf
and
test
push
push
jb
dec
test
dec
push
or
call
mov
sub
add
xchg
mov
jbe
sub
jp
cmp
je
adcl
add
jb
adc
int
mov
mov
neg
sub
add
test
add
pop
add
sbb
add
jmp
add
push
push
pop
adc
add
in
ret
push
push
adc
jmp
decb
add
or
pop
inc
adc
arpl
addb
test
adc
nop
insb
test
insl
or
push
push
fstp
hlt
js
and
mov
sub
nop
outsb
leave
gs
in
sub
pop
mov
andl
out
and
adc
jp
or
mov
jne
push
pop
loope
int3
daa
jb
cli
add
or
shl
sbb
sub
and
push
and
in
xchg
daa
and
or
push
test
int3
or
dec
enter
pusha
mov
push
and
adc
cltd
or
test
sbbb
bnd
push
or
mov
mov
jmp
es
push
cli
or
call
enter
sbb
jae
xor
lods
out
add
daa
jns
ret
jge
bound
in
jecxz
pop
jnp
add
enter
adc
xchg
es
adc
or
les
push
fmuls
push
js
adcb
xchg
rdpmc
push
jp
and
jmp
test
call
add
add
testl
pop
mov
ljmp
test
mov
lret
xchg
mov
mov
and
sub
adc
data16
testl
test
push
js
sbb
or
flds
add
jmp
or
adc
push
mov
inc
jo
xor
outsb
mov
cmp
fucomp
cmpl
es
xor
fs
into
push
pushf
push
mov
dec
push
test
or
int3
push
rclb
andl
rolb
fldcw
popa
add
loop
push
test
or
cmpsb
lods
jb
and
xchg
dec
adc
adc
movsb
or
sub
adc
push
mov
sub
shl
or
sbb
push
int3
adc
push
dec
mov
out
sub
xor
inc
in
sbb
fs
or
out
loopne
adc
pop
into
mov
shlb
mov
addl
sbb
or
pop
stos
push
inc
icebp
and
add
mov
jne
pop
and
imul
mov
rep
pop
push
push
jae
jne
jo
inc
je
jecxz
cmpl
cmp
test
pop
push
push
imul
push
in
fsubrs
or
push
xor
cmp
dec
push
add
jmp
movsb
mov
mov
xchg
insb
int
lea
push
ficoml
mov
dec
xor
clc
xor
inc
call
leave
addb
pop
insl
pushf
mov
mov
je
mov
mov
jnp
adc
and
enter
sbb
out
and
dec
inc
sarb
ficoml
jecxz
jnp
and
cwtl
or
xchg
loop
into
mov
in
call
fwait
sub
movsl
cmp
clc
int3
or
inc
pandn
cmp
rep
frstor
out
mov
jmp
les
aam
mov
xchg
mov
push
hlt
inc
fwait
inc
sub
test
mov
or
push
ret
push
je
and
xchg
adc
cmp
shl
mov
add
imul
fisubl
mov
sub
jmp
dec
lret
push
stos
pop
jmp
or
adc
enter
add
xor
xor
or
dec
movaps
mov
outsb
add
xor
jge
adc
jne
mov
pusha
pop
mov
clc
jmp
pushl
sbb
mov
test
push
lods
mov
popl
in
mov
insb
xor
mov
dec
sub
and
xor
pusha
das
mov
inc
xor
cld
and
mov
sti
aam
cld
imul
push
fisttpl
jnp
inc
lret
mov
movb
mov
mov
or
and
mov
or
pop
jae
push
sub
ds
sbb
jge
loope
rcr
cmp
mov
fs
mov
push
push
test
xor
fs
ret
or
push
xor
or
fsubs
push
faddl
mov
jae
push
popl
ret
dec
lret
sbb
lock
fmul
sbb
hlt
hlt
xchg
ja
pop
xchg
sub
aam
push
ret
pop
cmpsl
pop
insl
popa
push
mov
fcomi
into
popa
testl
sub
xchg
sub
mov
or
decb
xchg
add
mov
jb
adc
fists
sub
orl
nop
sub
sub
sub
inc
xchg
out
mov
in
adc
fimull
movl
bound
or
cmpsl
sbb
ljmp
hlt
les
push
mov
js
push
jno
sti
int3
inc
in
push
adc
mov
pop
adc
sbb
sbb
lret
movsl
or
cli
ret
subl
pop
jge
cmp
lock
fwait
add
adc
rolb
mov
jmp
jl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
enter
xor
rcl
fcomp
xor
xor
loopne
call
xor
hlt
clc
cld
fs
add
or
fs
sbb
fs
sub
fs
cmp
fs
dec
dec
push
fs
pop
fs
insb
jo
js
fs
test
nop
cwtl
pushf
movsb
fs
mov
fs
fs
rcl
fsubs
fs
call
mov
add
jge
mov
mov
or
add
int
int
add
push
daa
int
int
or
cmp
mov
and
xchg
enter
or
xchg
jb
enter
cmp
jnp
sbb
leave
adc
popf
rorl
out
out
pop
jg
sbbl
adc
mov
mov
leave
mov
cmpl
cmc
push
jl
sbb
mov
push
pusha
mov
add
adc
cs
mov
mov
push
push
xor
lea
sbb
out
shr
inc
lea
lock
aas
lock
mov
je
push
mov
add
pusha
out
arpl
fsubrs
fisttpl
ret
mov
and
and
mov
xor
ljmp
stc
daa
ret
add
inc
mov
and
pop
pop
ret
rcr
jl
and
push
cmp
std
pcmpeqd
pop
xor
lcall
fs
pop
test
je
mov
rolb
lea
dec
inc
inc
jmp
add
push
or
add
inc
inc
orl
jne
push
pop
aas
mull
mov
pop
mov
movl
lds
ljmp
pop
bound
or
inc
test
pop
dec
inc
push
mov
xchg
and
push
mov
and
mov
mov
or
and
inc
je
or
mov
jbe
cwtl
dec
mov
adc
cs
loopne
jg
add
inc
mov
and
movsl
push
mov
daa
shrb
jg
or
loopne
push
or
and
push
insb
mov
and
mov
leave
cs
icebp
adc
es
push
jo
cli
sbb
mov
jae
jns
jae
cmp
jp
neg
sbb
mov
pop
ret
cs
fldenv
cmp
fstl
mov
add
pop
jge
shrb
into
push
add
cmp
fistps
fldt
inc
sbb
pop
pop
inc
push
psubw
jmp
and
or
sbb
sbb
lock
or
cmc
push
lods
arpl
mov
out
lods
push
jecxz
add
in
cmc
sahf
cmpsb
sbb
cmp
sbb
loope
inc
pusha
mov
lahf
add
ret
test
sbb
xor
popa
lret
mov
sbb
lret
pusha
fisttpl
pop
cmpsb
pop
sbb
mov
aad
jge
or
add
pusha
and
sbb
dec
inc
cmp
sub
mov
rolb
ret
sbb
test
mov
lahf
jb
ret
and
xchg
sbb
sub
imul
mov
pop
fs
lea
xchg
es
add
jbe
or
sarl
add
add
fwait
xor
in
adc
cmc
fst
push
mov
adc
sbb
scas
or
push
push
xchg
mov
and
mov
jnp
jp
lea
cmp
add
pop
in
pop
imul
adc
insl
sti
adc
dec
add
mov
mov
sbb
inc
dec
add
adc
mov
cmp
ds
sub
pop
jbe
dec
add
cs
testb
subb
xor
mov
push
mov
or
mov
sti
insl
lret
inc
add
inc
xchg
cmp
mov
enter
vmptrst
mov
jmp
mov
lds
inc
push
je
mov
xor
lea
loope
pusha
mov
clc
clc
jmp
add
imul
fisttpl
inc
cmp
cmp
jp
dec
cwtl
scas
sub
push
mov
sub
mov
adc
add
xchg
js
sti
jle
adc
or
je
cmp
mov
sarb
jae
lea
call
pop
fwait
sub
sub
jne
inc
inc
push
jb
mov
mov
or
mov
sahf
je
mov
inc
push
mov
arpl
icebp
sbb
adc
call
mov
mov
imul
cmp
cli
pop
ret
add
add
ss
call
cmp
ss
dec
xchg
fcmovnbe
int3
gs
push
aas
rclb
adc
ljmp
mov
imul
mov
shr
fcmovnu
mov
jecxz
jb
xor
jg
mov
or
shl
pop
insb
add
movsb
je
pop
fnstsw
mov
mov
test
pmaxsw
mov
ret
cmp
add
insl
arpl
ret
jl
adc
xchg
loop
jg
or
adc
ja
fidivrl
inc
adc
dec
test
je
dec
jg
cmp
adc
and
out
sti
out
push
push
test
mov
add
or
add
fisubl
xchg
add
dec
sbb
fdivl
fnstcw
call
dec
add
ret
mov
push
mov
fwait
add
push
sub
add
cli
jb
sub
dec
sub
fs
jne
sahf
cwtl
mov
mov
iret
outsl
or
cmp
popl
xchg
es
and
mov
add
pop
cmp
pop
add
inc
sbb
pop
cmp
in
sbb
sub
xchg
mov
inc
jo
fisttpll
loope
sub
adc
ret
ja
mov
adc
push
push
es
push
push
call
jge
inc
outsb
xor
xchg
sbb
adc
divl
mov
sub
sub
pop
mov
mov
sub
push
push
lea
neg
xor
roll
jl
lret
xlat
hlt
out
adc
cmp
jne
in
ss
push
les
push
cmp
add
adc
fists
rcl
mov
push
push
ljmp
lea
cltd
insl
cmp
add
or
jge
or
jb
stc
add
add
fisttps
or
dec
push
lea
push
inc
push
lea
clc
mov
fdivs
sub
add
inc
add
jl
mov
push
insl
jmp
add
das
or
add
mov
dec
fldl
and
cli
push
xor
sub
insl
xchg
xor
inc
mov
inc
sub
ret
imull
inc
cs
add
xchg
jns
cmp
jge
push
add
cmp
mov
in
xlat
bound
push
dec
cmp
lock
cmp
jge
mov
fmul
push
xchg
loop
cmp
jle
pop
sbb
dec
fdivrs
lahf
xchg
pop
dec
unpcklps
mov
add
mov
adc
push
add
test
push
or
cmp
dec
inc
fcmovnu
mov
popa
negb
push
push
jl
outsl
pop
sub
mov
dec
ret
add
test
sub
sbb
test
popa
jmp
ja
and
jmp
adc
lds
sub
dec
faddl
out
shl
add
aam
dec
xchg
jg
int
pop
sar
add
push
add
and
ret
fdivs
lcall
mov
sub
sbb
push
in
rcr
and
dec
jb
mov
fsubl
dec
sbb
test
sub
sbb
iret
mov
aaa
sub
cmp
jbe
movl
imul
mov
xor
xor
push
sbb
popa
xchg
xchg
test
push
push
cmp
pop
dec
mov
fadds
dec
xor
lea
sub
adc
sti
or
push
inc
popa
sub
aas
jmp
jmp
pop
and
dec
xor
mov
xor
fsub
cmp
add
cltd
imul
inc
jecxz
sub
popf
shrb
call
nop
add
jp
inc
adc
mov
popl
dec
push
or
push
jb
fldl
jg
pushf
sub
popf
mov
std
pop
int3
xor
imul
jo
sbb
leave
jne
int3
sbb
dec
pop
xor
lret
mov
sbb
sbb
xchg
roll
fwait
dec
pop
cmp
adc
push
dec
jbe
sub
rcll
mov
jmp
jl
push
lcall
nop
andl
inc
mov
jb
jo
call
sbb
mov
out
push
pop
xchg
xor
test
fadd
and
in
inc
loop
mov
xchg
push
inc
dec
dec
fmuls
mov
push
pushf
add
insl
popf
sub
outsl
dec
push
dec
mov
push
jg
jne
add
and
jmp
fimuls
pop
sub
pop
fcoml
ret
adc
push
mov
in
sbb
popa
rclb
add
and
in
lret
lret
dec
add
inc
enter
add
inc
mov
mov
mov
sbb
lods
mov
int
and
xor
push
mov
nop
adc
adc
push
loopne
push
sub
jne
pop
mov
xchg
pop
adc
pop
jno
xchg
or
test
add
or
or
in
sub
inc
clc
dec
insb
out
pop
add
mov
push
push
pop
push
adc
test
repz
cmp
add
in
popf
push
pop
cmc
inc
pop
or
xor
pop
mov
dec
jbe
incl
push
pop
add
add
icebp
and
movzwl
inc
adc
rol
mov
decb
loop
in
cmp
shlb
or
icebp
push
or
lea
andl
add
lea
in
lea
lods
xor
cmp
jge
pop
xor
push
jp
mov
jl
mov
pusha
sub
cmp
cmp
movsb
nop
mov
iret
add
push
or
adc
cmpl
jl
inc
cmp
cmpsl
dec
lock
int3
test
loop
sbb
jle
std
and
lea
xchg
mov
sar
mulb
out
cld
add
out
mov
and
mov
out
or
mov
pop
out
or
notb
mov
push
or
mov
cmp
add
add
shl
or
mov
and
lods
es
shll
and
or
mov
dec
jo
jle
and
lea
mov
jle
add
mov
fstpt
mov
or
sub
jb
sbb
into
or
and
ficoms
fcomps
sub
push
das
push
or
or
push
push
push
or
or
roll
pop
mulb
shl
pop
or
or
or
fcomps
shll
adc
or
xor
mov
pop
add
adc
testl
mov
inc
pop
xchg
enter
lret
add
and
add
mov
push
dec
adc
fsubr
sub
enter
sbb
dec
fwait
shll
lret
jnp
das
insb
test
xor
mov
xchg
push
repnz
out
adc
insl
xorl
repz
push
pop
mov
into
add
xor
xor
pop
fwait
cmp
pop
add
icebp
or
add
out
into
pop
or
cld
add
cwtl
in
push
adcl
or
pop
aaa
pop
jae
push
stos
add
pop
loope
mov
js
xlat
push
repnz
daa
clc
lods
jge
leave
dec
out
mov
pop
lahf
repz
mov
lcall
push
or
push
sahf
fistpll
push
mov
and
xchg
pushf
adc
push
push
rorb
int
jne
dec
ss
dec
sbbb
push
push
mov
dec
push
dec
in
nop
out
and
lcall
insb
push
stos
rorb
das
insb
pop
pop
shr
outsl
or
mov
ficoml
xchg
sbb
ret
jmp
cmp
jbe
jl
adc
pop
add
pop
add
das
adc
shrb
arpl
ficoml
adc
roll
imul
imul
mov
or
dec
outsb
add
mov
insb
lcall
mov
test
sete
mov
add
mov
std
sbb
mov
push
notb
adc
push
cmp
notb
or
movsb
inc
xor
inc
adc
sbb
leave
flds
jnp
ret
or
or
mov
cld
mov
out
pop
lock
add
or
xchg
xchg
add
push
add
lock
addr16
adc
pop
shll
dec
das
push
outsb
jo
inc
mov
add
add
or
test
jp
mov
sub
or
jl
or
jg
mov
mov
addr16
mov
inc
dec
jge
cmpb
push
push
cmp
idiv
imul
or
xchg
enter
cmpsl
pop
mov
adc
fisttpl
clc
push
mov
mov
xor
js
mov
push
mov
jl
fisttpll
xchg
rcl
push
add
mov
push
adc
insb
adc
popa
sub
std
shl
xchg
mov
fadd
add
mov
ret
jb
mov
inc
add
push
fs
lcall
daa
sub
inc
inc
pop
or
sub
andb
xor
or
fs
xchg
hlt
call
sub
inc
dec
repnz
movsb
pop
call
andb
and
repnz
pop
sbb
push
enter
push
ss
or
or
ja
das
stos
leave
mov
push
or
mov
repnz
stc
in
push
push
mov
mov
sbb
xor
add
lock
push
jmp
adc
or
add
sub
out
mov
bound
jbe
xor
and
sub
and
popa
insb
insb
pushl
or
je
or
sub
inc
outsl
jo
jb
addr16
ljmp
and
arpl
and
cmp
cmp
and
dec
outsl
and
sti
outsb
and
jae
sub
inc
and
jae
gs
fildll
jb
gs
dec
outsl
jb
imul
fbld
imul
jo
das
das
ja
imul
jae
data16
popa
and
das
xor
mov
and
push
in
frstor
or
mov
adc
in
jp
mov
incl
mov
xor
add
lahf
std
mov
outsl
jb
push
jno
gs
jns
add
mov
jne
sub
cmp
add
arpl
add
insl
jmp
insl
imul
outsl
jbe
sbb
lahf
xor
push
insl
outsl
outsb
imul
jb
outsl
out
fdiv
sub
je
outsl
sbb
add
imul
jns
jne
add
popa
outsl
ja
cmp
arpl
pop
fcmovnu
jb
pop
test
insb
arpl
out
push
insb
inc
popl
push
jo
or
jge
mov
push
outsb
arpl
pcmpgtd
je
into
mov
add
insb
mov
testl
and
jnp
add
insb
push
push
bound
in
pop
mov
jb
jo
gs
insl
imul
inc
add
outsb
out
in
jbe
orb
inc
jne
imul
insb
jge
pop
inc
gs
insl
sub
ret
add
jne
jo
ss
popaw
imul
insl
insl
ja
insb
sbb
jne
fldt
insl
addr16
fwait
and
addl
fidivs
adc
jns
fs
push
push
or
jo
mov
insb
imul
pop
ja
clc
outsb
or
iret
mov
insl
imul
popa
js
popa
jp
jae
or
push
mov
mov
out
add
ss
popa
insl
push
inc
test
add
insl
inc
and
jae
push
push
or
inc
jb
popa
jo
test
or
in
shl
out
ret
mov
pshufw
mov
mov
je
iret
adc
les
lods
test
push
adc
jo
arpl
dec
addr16
ja
insl
mov
mov
mov
outsl
or
cs
sub
popaw
addr16
jnp
push
xchg
mov
ss
pop
test
add
fidivrs
adc
cmp
or
shlb
sbb
pop
fwait
mov
cmp
bound
fcmovb
imul
xchg
push
cmp
fdivl
push
dec
bound
inc
jecxz
add
outsb
movsb
sbb
data16
rep
dec
out
mov
ljmp
shll
sbb
sbb
ret
cmp
jns
je
hlt
sub
cld
addr16
fcom
js
jns
jb
dec
pop
push
jecxz
rorb
mov
cmp
test
xor
mov
push
mov
shlb
mov
lret
inc
popf
lcall
add
mov
jae
push
sbb
je
imul
inc
fninit
and
shl
fisubs
dec
mov
push
int3
xor
lahf
xchg
pop
imul
jne
mov
xchg
fstpl
xor
pop
pop
jb
loopne
sti
ret
insb
lods
mov
mov
mov
aam
aad
mov
outsb
jmp
lahf
movsl
push
pop
add
sbb
sbb
into
aas
test
insb
xor
data16
cmp
fs
push
xlat
push
sahf
or
out
or
jb
stc
jae
sbb
lahf
jo
bound
or
pop
inc
imul
xor
jbe
add
imul
subb
dec
xor
push
jo
out
xor
outsl
fs
dec
adc
push
jmp
pop
xchg
cmp
xchg
push
cs
jo
insl
jp
arpl
outsb
insl
sti
jne
jecxz
cmp
imul
ss
add
mov
xlat
pusha
jo
pop
jae
xchg
es
iret
mov
fs
or
jge
xor
add
add
divb
loope
das
jge
je
mov
add
add
sbbl
popa
mov
sar
dec
in
loope
or
pushf
subb
jae
pop
mov
mov
shlb
bound
insl
je
lock
mov
mov
out
addl
fisubs
adc
nop
add
dec
jp
jns
mov
add
ret
mov
scas
clc
gs
sbb
push
ret
shlb
js
out
sbb
imul
push
xor
iret
cmp
rclb
add
or
xlat
mov
mov
bound
pop
cwtl
mov
fs
pushw
lret
loopne
imul
add
inc
ret
addr16
stc
push
jno
cs
pop
outsl
mov
sahf
dec
data16
das
addr16
je
jae
lods
mov
jne
sub
pop
fdiv
outsl
push
cli
imul
fs
sbb
xchg
add
data16
pop
push
dec
push
push
repz
repnz
inc
inc
dec
dec
inc
xor
dec
inc
push
pop
push
push
inc
inc
and
fdivr
add
dec
dec
inc
push
add
push
incl
dec
inc
push
push
inc
push
inc
pop
dec
add
dec
sbb
repnz
inc
xor
push
or
shll
pop
push
push
mov
loope
cltd
or
and
mov
arpl
dec
add
mov
insb
sub
xor
push
inc
sbb
ds
inc
arpl
inc
dec
jae
push
mov
dec
mov
fnstenv
adc
xchg
adc
jo
inc
inc
or
or
inc
popa
test
push
imul
rcll
mov
cwtl
jecxz
mov
xchg
dec
xchg
notl
inc
cmpsb
jmp
sub
dec
add
lcall
mov
loop
in
mov
sti
pop
sub
cmp
push
jns
inc
ret
rorb
inc
ret
dec
int
nopl
and
and
or
sbbl
and
add
repz
adc
fwait
xor
arpl
pushf
sub
les
cs
ret
das
pop
ljmp
push
sub
popf
xor
xor
pop
inc
imul
outsb
push
lret
js
scas
jb
push
ljmp
push
mov
dec
push
push
and
push
insb
out
jbe
push
das
mov
or
je
adc
inc
jmp
ja
sub
or
das
sub
mov
xchg
lods
add
pop
cmp
cmp
movsl
mov
fbld
dec
add
push
sbb
adc
cmp
insl
pop
out
arpl
push
pop
gs
icebp
mov
das
sub
pop
rep
insl
daa
adc
or
lahf
popf
sbbl
sub
ja
jbe
outsl
jp
popa
das
xor
and
stos
dec
pop
sti
lods
add
push
dec
inc
and
jge
adc
cmp
sub
test
push
mov
sub
sub
pop
and
mov
negl
add
pop
sub
sub
add
mov
rolb
or
sahf
or
inc
andl
mov
insl
lahf
mov
aam
pop
je
dec
cmpsl
push
ljmp
adc
loope
sti
sarb
pop
gs
jbe
dec
jbe
pop
push
aam
push
enter
dec
fs
add
xchg
cmp
negb
sbb
pushw
cmp
mov
sbb
inc
xchg
int
xor
jae
mov
bound
jns
push
gs
iret
sahf
js
mov
gs
insb
mov
ret
mov
add
pop
adc
fs
outsb
imul
lods
sbb
and
mov
scas
dec
inc
or
aaa
outsl
xor
xor
test
pop
andb
dec
cmp
fistl
jne
xorl
or
dec
push
sbb
push
jo
sub
cmp
pop
aaa
adc
pop
sub
fisubl
sbb
sbb
fsubs
adc
dec
dec
jno
xorb
aas
push
fadd
push
sbb
dec
push
dec
inc
add
dec
mov
jnp
xor
pop
sub
add
lods
xchg
dec
add
dec
pushf
pop
push
xchg
jo
dec
gs
shlb
mov
pop
push
test
inc
add
push
pusha
fbstp
flds
fs
xor
sbb
mov
les
mov
ret
sub
or
and
push
add
dec
inc
dec
aam
mulb
pop
inc
jo
imul
dec
dec
push
loop
iret
xchg
mov
dec
and
sbb
outsl
nop
or
das
inc
push
sub
shl
repz
add
sbb
and
mov
sbb
jae
cwtl
sub
fstl
mov
sbb
shll
add
inc
dec
xchg
inc
mov
mov
inc
inc
push
inc
push
jp
push
inc
out
push
or
sti
xor
inc
push
inc
fidivl
and
jecxz
cmp
mov
sbb
sub
data16
inc
fcoms
pop
xor
add
aaa
cmp
rolb
sub
add
sbb
arpl
gs
jae
add
mov
push
add
pop
int3
xor
ret
sbb
push
and
int3
inc
cmp
das
bound
adc
enter
pusha
int3
pop
insl
xlat
jne
or
sub
mov
orl
jo
inc
xchg
fcomps
mov
fcomp
ja
xchg
sbb
insb
adc
mov
testb
jp,pn
mov
sub
dec
xchg
jne
lods
popf
es
add
repnz
shrl
and
push
jb
outsl
fcomps
in
and
xor
cmp
xchg
mov
inc
sbb
mov
aas
dec
mov
addr16
and
dec
adc
jnp
dec
adc
adc
or
imul
stos
xor
loopne
insb
mov
je
xchg
xchg
test
je
mov
or
and
add
scas
jo
inc
push
std
sub
and
adc
and
mov
sub
mov
test
pop
or
jae
stos
or
cmp
sub
jp
adc
in
sahf
icebp
adc
add
insl
ljmp
dec
inc
aam
pop
or
enter
loopne
mov
jno
ljmp
imul
inc
fldt
fstps
pop
int
call
add
bound
mov
push
cli
xor
dec
ss
adc
jae
sub
inc
adc
out
or
arpl
sub
inc
inc
xchg
mov
shll
jo
dec
andb
adc
insb
lods
pop
mov
push
or
mov
push
shrb
push
add
mov
push
dec
push
inc
fdivs
es
fildl
push
add
adc
pop
inc
dec
inc
cmp
xor
push
sbb
je
dec
xchg
insb
addl
and
cmp
jae
adc
popf
jbe
scas
and
popf
inc
lret
int3
movsl
push
imul
xor
and
mov
flds
add
add
lock
xlat
push
insb
jae
lea
and
or
push
or
sub
imul
cld
mov
mov
jo
clc
jge
in
bound
push
jne
mov
mov
dec
outsb
js
sbb
lret
fmul
bound
push
add
enter
insl
fcmovnu
xchg
adc
fs
shrl
mov
push
push
and
and
sub
cs
inc
add
pop
push
adc
loopne
pop
or
sub
mov
imul
subb
out
arpl
in
int
push
dec
and
sbb
xor
fadds
fs
xor
pusha
xchg
or
fwait
or
sbb
pop
cs
and
js
add
jmp
push
das
andb
jne
jge
push
js
cs
push
push
adc
pop
xor
sbb
int3
std
jae,pn
insb
push
sbb
inc
lods
movsb
cld
popa
jo
and
dec
add
or
dec
and
or
sbb
or
fbstp
xchg
lds
sbb
adc
adc
push
pop
dec
cwtl
int
mov
sub
ret
push
rclb
pop
scas
add
push
sbb
or
imul
gs
sbb
sahf
dec
inc
push
stos
inc
push
cwtl
shrl
insb
test
jne
rorl
test
jne
repz
in
push
mov
aaa
dec
xor
aam
imul
and
stos
push
jo
pop
and
push
push
dec
dec
or
out
inc
shlb
fwait
mov
jle
jmp
orb
iret
insb
sub
dec
ss
test
mov
pop
mov
psubb
mov
mov
int
dec
dec
pop
pop
insb
mov
arpl
lods
jmp
xchg
gs
lods
and
mov
sbb
add
dec
push
cmc
subps
aad
clc
call
fstpl
jnp
inc
xor
inc
xor
cmp
cmp
sub
sub
or
inc
ss
xor
inc
stos
pop
call
cmp
in
xor
scas
jns
shrb
xor
fdivs
xor
xor
pop
jge
hlt
ret
or
ud2
push
push
outsl
jns
pop
out
dec
adc
jno
aam
mov
mov
push
mov
xchg
pop
sub
ficomps
mov
inc
sbb
cmp
gs
mov
dec
pop
jo
add
dec
xor
sub
and
dec
mov
pop
inc
sub
xor
or
push
inc
push
dec
lret
data16
das
add
fwait
xchg
mov
inc
and
les
or
jo
addr16
je
test
inc
outsb
pop
bound
scas
push
mov
jae
jo
outsl
jp
mov
and
or
and
out
adc
jno
pop
mov
inc
mov
addr16
push
pop
fsubrs
xor
frstor
and
arpl
fs
das
ljmp
clc
and
mov
aam
pop
ret
xchg
fisttpll
rcl
hlt
push
pop
adc
inc
xchg
data16
sub
jnp
pop
adc
mov
xor
sub
and
into
add
sbbb
shrb
dec
insl
leave
xchg
popf
arpl
dec
inc
sub
jmp
jno
pop
push
jecxz
ret
lcall
xor
pop
lods
insb
sbbb
imul
or
sbb
cmp
in
cs
inc
sub
sub
in
mov
addl
rolb
push
dec
inc
shl
inc
xor
das
pop
sub
sub
inc
lret
xor
lea
add
inc
inc
rcr
xor
mov
sbb
pop
mov
adc
gs
add
push
pop
pop
arpl
or
pop
xor
cmp
addl
inc
lret
push
test
jne
imul
jo
lcall
lds
test
dec
sub
adc
cli
push
xor
ret
pop
in
or
mov
pushl
aaa
cmp
mov
xchg
and
stos
adc
out
inc
cmovb
test
aas
xor
pop
sub
add
adc
ss
arpl
or
andl
cmp
add
dec
pop
add
dec
daa
aaa
or
fucom
ss
sub
and
arpl
xor
dec
xlat
jne
xor
aaa
dec
arpl
xor
pop
sub
pop
fs
add
arpl
lret
jae
push
cmp
or
and
popf
xor
ss
mov
xor
add
sub
pusha
mov
sbbl
stos
push
push
mov
sub
sahf
int
rolb
push
push
test
test
pop
and
and
dec
inc
ja
adc
sub
sub
sbb
mov
lret
sub
dec
lret
dec
dec
push
push
inc
sbb
inc
imul
dec
inc
dec
cmp
or
add
pop
jne
hlt
nop
jb
adc
in
adc
test
push
loope
cmp
and
jb
pop
imul
cmpsb
push
sbb
sub
jmp
add
mov
mov
outsl
cmpsl
pop
and
xchg
xor
sub
or
popf
sub
inc
jo
push
add
push
jno
add
push
fisubl
imul
xchg
fdivs
je
loope
add
inc
adc
or
mov
sub
mov
ss
jae
adc
inc
cmpsl
jp
mov
mov
or
das
sbb
or
inc
mov
push
sbb
push
inc
test
push
mov
sbb
inc
or
push
leave
fimull
add
test
andl
inc
ret
cmp
inc
or
adc
out
inc
arpl
loope
jg
call
cmp
xor
inc
cmp
sub
xor
inc
sub
lret
sbb
inc
pop
sbb
pop
clc
xor
inc
inc
sbb
xor
sti
call
inc
jns
mov
dec
inc
push
mov
add
pop
push
fldcw
push
dec
mov
icebp
lret
pushf
pop
dec
in
leave
cs
lahf
into
imul
adc
or
xchg
push
leave
inc
inc
scas
and
mov
xor
scas
or
mov
mov
gs
jge
inc
dec
das
mov
pop
mov
dec
inc
fistpll
dec
xor
jbe
or
or
push
add
or
jle
adc
push
outsb
popa
xchg
aad
jns
fs
shrl
push
cs
push
cltd
jle
adc
andb
mov
add
aam
xchg
add
icebp
insl
sbb
stc
mov
lods
lods
mov
sti
arpl
sbb
insb
std
dec
jb
pusha
xorb
dec
mov
adc
mov
lret
pop
xchg
orb
sbb
jnp
adc
sbb
cmpsb
or
pop
outsl
xchg
pop
pop
loopne
mov
rorb
cld
popf
inc
push
sub
or
pop
fs
fstl
add
mov
ret
dec
ljmp
mov
mov
sarl
fisubrl
push
jne
stos
fildl
mov
loop
inc
add
inc
xor
dec
mov
mov
stos
push
mov
xor
pop
cs
lret
xor
pop
lcall
pusha
sub
gs
aas
popa
ret
arpl
cs
pop
ret
sbb
push
insb
push
pop
and
outsl
dec
jno
add
in
insl
xchg
jne
bnd
js
dec
xorb
xchg
jg
pop
jbe
sub
imul
inc
popf
shll
add
inc
mov
ss
mov
movsb
aad
mov
mov
jbe
mov
ja
pop
add
mov
lcall
mov
lret
data16
ret
jnp
enter
mov
int
add
into
add
lret
xchg
bswap
lea
addb
dec
rcrl
push
clc
push
inc
push
push
in
icebp
push
loopne
and
shrl
or
lods
out
loop
ja
sbb
adc
or
cmp
jo
pop
cmp
and
arpl
or
jbe
imul
xlat
sbb
pop
and
jmp
sbb
and
vucomiss
add
adcl
orb
jne
lds
or
sbb
fldt
cmp
mov
mov
push
arpl
dec
or
dec
scas
popa
lea
inc
hlt
mov
inc
dec
mov
adc
bound
jbe
scas
sbb
jne
ljmp
addr16
add
pop
jns
add
and
mov
add
mov
cmc
cmp
adc
lret
dec
shll
inc
addb
dec
shll
or
push
fldt
xor
and
adc
pushl
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
ds
push
push
push
cmp
ljmp
xor
and
adc
add
adc
add
add
neg
decl
or
movups
adc
or
add
push
add
pop
lcall
pop
clts
sbb
or
sub
push
and
ss
das
sub
es
and
scas
fwait
inc
mov
sub
test
jge
addr16
pop
add
and
mov
adc
add
mov
pop
sub
cmp
add
pop
insb
test
inc
sub
add
push
mov
fidivs
arpl
ja
ss
int
inc
add
cmp
leave
push
dec
jbe
adc
fidivs
dec
lahf
lahf
int
and
adcb
loopne
or
and
fldenv
cmpsl
pop
and
andb
xchg
or
and
sub
popa
adc
add
sbbb
fimuls
xor
sub
dec
pop
dec
ss
add
dec
inc
outsl
neg
insb
ss
fwait
sub
dec
mov
testb
inc
arpl
aaa
rcll
xchg
add
mov
mov
add
pop
pop
add
sub
mov
sbb
lds
dec
sbb
das
push
insb
enter
or
or
fwait
int
jnp
dec
ja
int
outsw
push
sbb
or
jnp
testl
fwait
and
xor
xchg
or
xlat
mov
wbinvd
add
pushf
mov
xchg
add
in
pop
adc
inc
or
mov
int
or
or
ret
xchg
sbb
mov
inc
scas
xor
mov
or
xchg
in
movsb
or
inc
xor
inc
adc
or
or
and
out
mov
and
daa
lds
add
pop
cmp
or
add
flds
fstps
cmp
sub
mov
das
adc
fs
arpl
add
dec
adc
or
jge
mov
sbb
adc
add
mov
add
adc
add
mov
stc
adc
adc
or
mull
dec
pop
dec
sbb
add
imul
inc
sub
fwait
int
ja
outsl
add
and
and
outsl
sub
in
sub
dec
bndldx
and
call
cmpsl
sbb
sbb
pop
add
pusha
outsb
ret
repnz
jmp
and
sbb
jnp
mov
cmp
xchg
lds
and
data16
ja
add
outsl
fcomps
push
xchg
dec
or
fwait
mov
outsl
insb
fdivs
or
fisubs
add
bound
add
stc
mov
pop
add
adc
cmpsl
sbb
or
pop
ds
jnp
or
inc
fdivs
sub
pop
sub
cmp
sbb
in
mov
insb
negb
dec
cwtl
mov
ljmp
inc
adc
add
add
dec
and
adc
add
in
mov
ja
or
or
cli
sbb
leave
dec
in
or
push
rcrb
sub
mov
outsb
sub
sbb
push
outsb
insb
or
jg,pn
mov
popf
add
cmp
jns
or
inc
gs
je
imul
jae
decl
sbbb
jbe
jb
outsb
mov
sub
cs
inc
or
adc
cmp
or
gs
lods
mov
insl
adc
movsl
imul
das
pop
test
cmp
aam
inc
lock
gs
jo
pop
insl
inc
outsb
sbb
sub
inc
xor
jg
icebp
fdivrs
push
imul
insb
je
pop
sbb
imul
jb
int3
outsb
shll
imul
negb
push
ja
test
pop
pop
dec
outsl
fs
subb
mov
pop
push
xchg
ret
lar
xchg
add
push
inc
insb
pusha
xor
mov
push
rcl
pop
mov
dec
mov
les
adc
stc
lock
push
loope
pop
xchg
dec
or
xor
push
push
add
inc
mov
jo
sub
pop
in
pusha
jo
inc
push
or
subb
push
outsb
cli
mov
inc
lahf
adc
pextrw
sbb
shll
mov
inc
inc
push
movsl
and
push
fnsave
add
fs
add
fbld
jne
fnstenv
xchg
sub
sbb
cmp
das
popa
inc
sub
push
adc
inc
js
adc
or
push
push
ret
dec
outsb
dec
lahf
movsl
bound
sub
cmp
pushw
sub
cs
jne
or
push
push
or
add
lret
mov
mov
jge
mov
movsb
push
add
or
push
sbb
or
adc
or
dec
dec
cmp
push
scas
popf
dec
shrl
je
adc
mov
lret
add
adc
popf
dec
sub
roll
faddp
ss
inc
adc
adc
lods
sub
int
mov
inc
xchg
xchg
ret
add
stos
in
add
adc
daa
test
out
rclb
or
insb
sbb
out
divl
jbe
je
outsl
jo
push
push
inc
loopne
loopne
sbb
clc
adcl
cld
xchg
inc
dec
add
add
and
cmp
incb
add
add
or
adc
inc
cld
adc
sarl
cmpl
std
add
mov
mov
add
xor
in
mov
pop
push
das
sub
outsb
pop
or
push
addb
sub
pop
fcoms
in
or
nop
jmp
and
mull
push
ja
jb,pn
and
ret
hlt
daa
test
pusha
es
cmp
inc
imulb
mov
push
rclb
add
add
add
add
add
or
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
