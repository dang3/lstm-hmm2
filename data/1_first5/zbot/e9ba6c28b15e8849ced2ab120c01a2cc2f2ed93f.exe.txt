and
aas
fwait
jns
add
pop
jb
add
cmp
add
pop
add
out
call
in
pushl
push
push
call
leave
ret
adc
or
out
or
or
clc
popl
fcmovnbe
out
inc
cld
add
and
adc
add
outsb
mov
sub
es
sbbl
pop
fs
sbb
add
lods
mov
push
push
sbbl
jbe
sub
sahf
mov
mov
cld
pop
jnp
imulb
jne
lods
addr16
push
mulb
sbb
or
sarb
cld
cmp
jne
sbb
in
movb
jmp
push
push
insl
in
mov
sub
and
pop
lds
or
jnp
dec
int
push
arpl
out
xchg
pop
mov
aaa
cld
inc
ja
lock
les
sub
out
sti
lock
add
or
pusha
mov
imul
mov
xor
or
jne
test
jno
and
push
or
xor
and
mov
fildl
xor
clc
mov
adc
mov
cmp
xor
sbb
xor
aaa
and
push
jb
popa
xchg
lods
sbb
add
jge
sub
cmp
iret
adc
test
add
into
or
add
or
push
inc
xchg
cmp
cmp
pop
inc
bswap
scas
or
jbe
dec
xchg
add
or
mov
xchg
sub
xchg
sub
add
push
movzbl
and
mov
test
mov
or
sbb
add
jmp
adc
xchg
lock
push
sti
adc
into
jb
jb
shll
rorl
dec
adc
mov
mov
sub
add
sbb
sbb
jmp
idivl
pop
xchg
sahf
or
lea
mov
into
aaa
adc
or
and
mov
cmp
sbb
dec
in
or
into
js
xchg
pop
idivb
and
jno
or
das
pushf
jmp
jo
push
sbb
testb
in
push
imul
jnp
and
pop
or
dec
pop
mov
imul
addl
or
ds
es
hlt
jae
ret
mov
xchg
mov
xchg
outsl
sub
jl
inc
or
mov
add
or
hlt
test
cmp
hlt
call
xchg
cs
gs
in
inc
push
lods
jge
jb
subl
xor
jbe
pop
pop
jae
push
jne
jp
clc
incl
pop
sbb
inc
sbb
lock
xchg
test
dec
hlt
nop
xor
pop
enter
sahf
or
popa
adc
or
push
sub
jb
sti
ret
mov
ss
sbb
fucomip
mov
jle
add
adc
fs
enter
xchg
xchg
inc
test
call
ficomps
xchg
adc
sbb
subl
or
xor
cmp
clc
inc
negl
adc
pop
mov
jne
jno
jmp
jnp
or
or
filds
push
push
cld
mov
pop
cli
xchg
mov
jecxz
push
shr
rep
pop
and
stos
pop
outsl
mov
and
push
push
pop
or
jne
jecxz
repz
outsl
movsb
pop
pusha
sbb
adc
jae
sbb
inc
pop
sar
inc
clc
push
push
push
fildll
inc
sub
mov
mov
mov
inc
loop
adc
fs
mov
cltd
mov
mov
or
or
add
mov
sub
jb
leave
inc
jne
pop
outsl
ja
subb
imul
add
sub
sti
pop
enter
sti
mov
add
mov
push
cld
lds
mov
pop
xchg
cmp
pop
int
scas
sbb
add
xor
out
in
adc
incl
add
mov
xor
dec
bound
in
push
fs
push
xchg
je
push
icebp
mov
pop
jmp
aad
xchg
arpl
cmp
mov
xchg
xor
sbb
clc
xor
sub
jbe
call
add
inc
sbb
nop
mov
mov
add
or
sbb
lock
push
iret
mov
mov
inc
outsl
es
push
std
insb
mov
dec
je,pt
pop
hlt
cmp
or
je
inc
xor
idivb
push
xor
jbe
mov
jmp
mov
and
imul
push
ret
pop
sbb
jae
pop
sbb
pop
clc
inc
mov
pop
test
adc
scas
adc
xorb
xor
fs
pop
test
icebp
cmp
rcl
loop
or
shr
jae
xor
or
mov
add
mov
pop
cmp
mov
push
add
add
je
cmp
ljmp
in
jae,pt
sub
ret
call
insl
addr16
push
adc
aaa
and
xchg
or
mov
mov
pop
aaa
loope
cld
add
inc
push
push
adc
or
shlb
mov
mov
mov
pop
mov
push
out
pop
xor
push
cmp
popa
add
cld
mov
icebp
push
sbb
dec
lcall
mov
mov
sub
lret
mov
jg
cmp
jne
mov
and
mov
ficompl
or
or
into
adc
ljmp
push
in
pusha
scas
xchg
push
out
add
jmp
lods
push
lret
inc
movsb
push
movsl
push
insb
or
inc
or
sbb
mov
test
adc
addl
pop
ror
test
cmpsl
push
loope
push
push
adc
sbb
add
add
lea
rclb
jge
jg
inc
dec
stos
add
pop
adc
stc
sahf
lcall
js
gs
nop
lods
das
pop
add
sub
xlat
jne
pushl
repz
incl
insl
dec
pop
and
xchg
cmp
push
xchg
jno
stc
push
enter
cmp
rolb
in
add
out
data16
movsl
int
daa
je
inc
or
add
or
sbb
adc
out
mov
inc
mov
in
xchg
dec
push
mov
iret
enter
mov
pop
mov
cmp
clc
ret
sub
decl
sti
shll
mov
pop
les
outsl
into
aas
adc
jge
rcrl
icebp
fwait
shlb
push
push
movsb
jmp
in
cmp
aas
mov
xchg
mov
sub
add
mov
fldt
add
sub
adc
mov
ret
pop
add
push
mov
mov
adc
rorb
inc
cmp
fwait
lods
es
test
cmp
mov
push
fildl
or
dec
in
dec
ss
or
push
inc
mov
cmp
test
adc
pushf
add
add
ss
mov
push
mov
mov
cmp
enter
test
in
pop
leave
sbbb
cs
push
orps
sub
aad
insb
jo
or
add
xchg
sarl
jne
cmp
adc
subb
outsb
jmp
mov
inc
xor
lds
xor
lea
lock
push
ljmp
aas
lahf
sub
sbb
pop
push
outsb
inc
mov
enter
sbb
cmpb
jge
ja
mov
mov
push
iret
incb
inc
div
jae
sbb
add
and
movb
inc
add
cmp
pop
ffree
add
pop
aam
aad
outsl
adc
xchg
daa
pop
mov
sbb
in
jle
add
out
imul
push
hlt
jmp
int3
mov
push
push
mov
sbb
pop
or
scas
pop
lods
mov
xor
pop
cwtl
cld
mov
notb
jno
push
inc
sub
shlb
jmp
rclb
mov
and
aam
jmp
shlb
adc
mov
mov
mov
ret
xor
cwtl
stc
add
loopne
outsb
xor
xchg
icebp
or
movsb
dec
int
outsl
es
inc
or
or
cmpsb
and
shrl
pop
leave
loopne
mov
add
nop
lods
nop
mov
push
out
cmp
nop
add
nop
inc
cmp
or
xor
nop
jg
add
add
push
inc
or
out
imul
popa
push
jp
inc
or
aaa
rol
loop
ror
test
enter
dec
and
fldt
dec
push
mov
adc
mov
mov
push
nop
mov
jle
mov
clc
nop
pop
nop
das
add
add
jbe
fidivrs
ret
pop
mov
or
jno
orl
iret
aam
out
mov
dec
aaa
sbb
add
ret
mov
stc
in
repz
int
iret
and
shlb
lods
cmp
fsts
in
adc
and
or
adc
xor
ljmp
mov
sbb
jno
push
sbb
shl
xor
cmp
ds
test
clc
out
jbe
lret
mov
mov
or
or
or
sbb
adcl
std
test
aaa
mov
out
mov
and
call
lock
pop
or
out
sbb
and
sbb
cld
add
xor
mov
and
adc
add
and
inc
push
es
es
push
lcall
mov
cmp
and
shlb
psadbw
jmp
cltd
adc
mov
mov
inc
nop
add
pop
pop
fsubrp
pop
and
or
loopne
je
imul
in
pushf
add
cmpb
out
outsl
adc
or
inc
mov
inc
cmp
add
jp
push
sbb
sahf
pop
ss
adc
mov
or
adc
out
jno
jp
or
jmp
xor
pop
jp
shlb
sahf
sub
in
bound
out
call
pop
int3
push
mov
fcmovne
push
arpl
mov
hlt
inc
mov
pop
xor
ret
xchg
xor
xor
dec
dec
or
rorb
xchg
pop
add
rolb
pop
xor
mov
add
ljmp
xchg
popf
adc
and
fwait
push
sub
je
test
sbb
pop
mov
push
push
push
adc
lea
andb
cmp
jg
xchg
movsb
mov
and
sub
sbbl
sti
cmp
add
mov
pop
pop
mov
cmp
add
inc
movl
or
adc
hlt
in
mov
xor
ficoml
sbb
bnd
movsl
mov
pop
pop
pop
pop
repz
fucom
or
jae
adc
mov
mov
mov
mov
adc
xor
and
add
push
add
rol
add
pop
inc
mov
xor
and
lea
add
rorl
mov
sti
and
add
and
dec
or
rcll
ljmp
incl
lret
xor
and
lea
add
rol
add
pop
stc
xchg
std
add
inc
adc
movb
adc
inc
xor
jle
xchg
inc
std
sbb
cwtl
subb
pop
leave
and
in
mov
mov
ljmp
mov
sub
xchg
sub
adc
fs
xchg
jno
std
xor
inc
jns
cmp
or
imull
push
testb
sti
pop
inc
mov
rcrb
pop
xchg
ja
mov
pop
push
pop
pop
es
fs
fstl
mov
pop
stos
mov
add
pop
adc
and
daa
pop
adc
adc
adc
add
repnz
and
enter
sti
shl
mov
pop
out
loope
xchg
in
mov
pop
aaa
ret
cmp
xchg
sub
xchg
adc
inc
and
and
repnz
clc
mov
add
inc
xchg
pop
leave
sbb
dec
sub
or
sti
inc
cmp
incl
pop
fisubrs
xor
fs
inc
push
insl
adc
aaa
pop
push
stc
or
in
cmp
pop
enter
ljmp
in
std
inc
xchg
dec
adc
mov
and
daa
jo
mov
fwait
sub
cli
daa
mov
lret
das
fs
test
out
aam
add
or
and
rcl
fldenv
pop
fdiv
in
xor
jl
pop
cmp
mov
inc
gs
lods
les
mov
or
or
and
hlt
das
push
repnz
cmp
dec
pop
xchg
ljmp
inc
leave
cmp
sbb
or
imull
stos
nop
or
cmp
mov
int3
andl
or
fisubl
subb
out
fs
xchg
dec
in
rcrl
test
in
cmc
add
test
inc
loopnew
scas
mov
sub
cmp
inc
add
addr16
dec
xor
add
notl
xor
repnz
rcl
sub
add
xchg
and
ljmp
flds
add
dec
inc
pminub
mov
jns
fs
test
push
outsb
push
stos
cld
out
bound
or
outsb
or
pop
data16
jno
int3
je
aam
mov
shl
loope
ret
jmp
jecxz
inc
push
popf
test
push
push
aam
mov
jno
insl
jae
mov
fimuls
fcomp
ret
inc
daa
push
add
movb
std
jmp
jbe
add
je
andb
cmp
js
inc
mov
or
outsb
adc
mov
jbe
ljmp
adc
mov
out
aaa
mov
mov
mov
push
mov
sub
fadds
mov
or
cmpsb
dec
xor
mov
mov
sbb
mov
dec
into
adc
shlb
or
pop
repz
hlt
xor
fcomp
push
in
ret
xor
mov
enter
nop
cmp
pop
xchg
cld
or
jp
sub
not
and
and
or
add
and
add
add
call
clc
mov
rol
mov
mov
or
fildl
aas
fcomps
mov
xor
repnz
mov
jmp
outsb
outsb
out
leave
rol
mov
and
jno
xchg
mov
jle
dec
adc
shll
inc
inc
cmp
add
add
add
add
and
cmp
lret
shlb
jne
or
mov
por
nop
push
jp
mov
lock
xor
pop
or
ljmp
aam
inc
in
adc
ja
mov
xchg
xchg
inc
cmp
call
add
aad
hlt
mov
and
push
and
ds
inc
push
push
insl
in
stc
pop
xor
or
jae
and
add
push
imul
ficoms
push
sbbl
jle
mov
mov
clc
cmp
pop
mov
lcall
out
test
add
dec
or
int
add
adc
xor
call
or
pop
add
push
push
push
xor
xor
sbb
and
pop
aaa
mov
call
inc
dec
aam
dec
add
dec
xor
rolb
mov
int3
add
and
adc
or
add
lret
sbb
je
or
in
push
adcl
call
adc
jmp
mov
sub
add
sub
daa
push
xchg
mov
into
out
pop
and
or
sbb
pop
dec
inc
insb
mov
jno
mov
or
inc
mov
dec
leave
inc
aaa
ret
mov
negb
and
push
call
mov
mov
add
xor
divb
mov
add
sub
pop
jbe
and
mov
and
je
or
hlt
and
neg
push
dec
push
pop
xor
test
push
push
dec
ss
adc
jge,pn
std
inc
mov
mov
or
sub
mov
cli
mov
or
je
addr16
inc
jcxz
jo
pop
push
push
or
addr16
xchg
push
push
jae
pop
mov
popa
or
push
cld
mov
jns
lock
outsl
push
imul
adc
push
add
shl
cld
sub
dec
pop
xor
push
add
mov
popa
xor
push
mov
adc
dec
lods
test
rolb
or
mov
idivl
mov
stos
pop
les
sub
add
jbe
adc
push
hlt
jle
fs
jo
cld
addb
xchg
in
inc
arpl
dec
out
es
mov
jnp
mov
sub
adc
ficompl
jns
mov
adc
jo
jbe
xor
sarb
arpl
cltd
mov
sahf
pushf
pop
or
cmp
das
fisubs
inc
pop
lock
mov
xor
mov
or
popa
xchg
ljmp
popa
and
fsubs
xor
ja
mov
and
push
stc
xchg
pop
pop
mov
shrl
jo
pop
mov
loop
mov
jne
cmpsl
or
ss
or
push
sub
cmpsb
and
jmp
adc
aaa
jb
or
repnz
lea
pop
jns
shrl
aaa
or
rcl
sub
rcr
stos
push
pop
addr16
mov
or
je
xchg
or
push
adc
rcrl
and
mov
jo
out
jae
adc
mov
outsb
adc
adc
ret
sti
fisubrs
daa
xchg
cmp
inc
scas
mov
inc
xor
popa
inc
xchg
popa
sbb
fwait
sbb
inc
adc
xor
aad
or
xor
pop
aad
addb
daa
sbb
cltd
mov
sub
xchg
stc
punpckhbw
or
add
cmpsl
fucomi
or
inc
push
ds
clc
ret
jnp
jp
sub
fbld
sbb
xchg
testl
mov
orl
inc
sbb
idivb
xchg
xchg
mov
jae
and
xchg
sbb
or
pop
mov
fwait
movsb
sbb
test
adc
popf
pusha
xor
int3
out
movsb
mov
adcl
mov
cmp
cmp
and
ret
push
add
sbb
or
and
paddsw
adc
xor
into
test
or
iret
add
into
inc
adc
adc
nop
fimull
mov
jns
mov
or
push
iret
fistpll
add
sub
dec
dec
push
push
in
cs
adc
sbb
xorb
mov
jb
sbb
push
sbb
inc
xchg
sub
push
arpl
mov
jl
outsb
movsb
xchg
hlt
add
add
aaa
jb
loope
stos
sub
lock
pop
inc
and
inc
into
adc
sbb
sub
mov
fldl
add
test
aaa
mov
mov
push
add
pop
mov
push
add
xlat
mov
cld
in
ret
insl
mov
mov
jbe
orl
jp
mov
ret
dec
cli
push
adc
add
add
add
push
add
pop
push
and
cli
or
fimull
test
xlat
fdivp
sub
or
sbb
insl
mov
sbb
cltd
mov
mov
lret
cmp
mov
imul
pop
out
mov
std
cld
out
jns
sti
cli
stc
clc
mov
imulb
inc
lahf
xor
push
inc
mov
sti
loopne
xor
enter
js
jne
add
call
stos
add
xor
jmp
mov
ds
inc
or
iret
push
pop
rorb
push
lods
mov
ja
mov
cmp
icebp
jb
dec
push
aaa
pusha
movsl
popa
dec
jg
jo
insb
xor
sub
push
xchg
add
pop
mov
loope
mov
sbb
pop
iret
inc
adc
inc
sub
mulb
dec
or
adc
pop
stos
jnp
cmpl
push
inc
or
adc
cmp
sub
mulb
cmp
jbe
ss
push
and
dec
repz
int3
push
sbb
adc
xor
sub
xor
or
or
rolb
xchg
das
or
xor
push
or
outsl
jbe
das
pop
pusha
push
pop
push
callw
cmp
dec
stos
lods
sub
lds
repz
stos
clc
jg
into
adc
jp
in
divl
out
adc
iret
loopne
jg
add
xor
push
or
add
fistps
jmp
push
mov
jne
lret
mov
push
pop
lock
ret
sbb
int3
adc
mov
xor
aaa
outsl
lock
movsb
das
mov
push
enter
or
push
and
xor
nop
into
xor
push
in
les
hlt
negl
xchg
js
fbstp
pop
and
in
aam
in
cmp
inc
in
dec
xor
inc
pop
subb
pushl
inc
pushf
xor
in
in
xor
jns
dec
es
or
sub
shrb
fiadds
rolb
xchg
sbb
push
mov
add
filds
sbb
sbb
out
sub
pop
sub
and
mov
adc
push
push
dec
sub
sub
cmp
push
sub
adc
aaa
sub
ja
in
sub
fidivs
and
mov
hlt
add
mov
aas
add
hlt
iret
and
mov
or
push
xor
or
scas
sub
loop
or
outsl
jg
psubusw
xchg
sub
push
leave
inc
jb
sbb
push
inc
push
loope
cwtl
inc
in
pusha
hlt
adc
or
enter
pusha
mov
mov
push
lahf
add
enter
mov
adcl
xchg
push
sti
add
add
das
je
scas
aaa
sub
jne
sbbl
sbb
pop
sbb
mov
and
push
jo
push
xor
lods
cwtl
test
sahf
aad
push
xchg
xor
inc
push
jp
jmp
sbb
add
int
inc
scas
and
xchg
xor
sar
add
cmpsl
repz
xlat
adc
jnp
mov
dec
add
push
cli
dec
test
add
mov
mov
adc
cltd
inc
and
cmp
and
xor
pop
das
cmpb
xor
push
in
and
sbb
adc
inc
and
nop
clc
rclb
lock
push
in
imul
outsl
adc
mov
fistl
and
fidivl
cmpsl
sub
and
or
jmp
sbb
adc
movsb
inc
das
sub
arpl
nop
fs
dec
out
movl
repnz
push
cmp
xchg
inc
leave
push
sti
adc
sub
dec
shll
hlt
mov
cmp
das
popf
rorb
push
or
jp
pop
jg
ds
xor
add
jne
shll
into
or
cltd
jnp
es
cli
push
add
sbb
imul
movsb
dec
shlb
outsb
cld
xlat
and
andl
insb
repz
nop
add
cmp
push
xchg
xor
fs
dec
mov
sbb
mov
dec
fsubrp
push
jb
dec
scas
pusha
ret
shrl
inc
sahf
and
movsl
sub
push
push
sahf
add
nop
pop
andl
jb
popa
push
repnz
cmp
test
fs
pop
pop
dec
sbb
nop
dec
dec
dec
pop
sub
or
mov
push
mov
test
mov
ja
and
sub
push
inc
mov
add
xchg
add
aad
lret
adc
lods
dec
cltd
push
adc
stc
add
pop
add
sub
and
xor
or
push
pop
loopne
fstps
and
jmp
bound
in
sahf
and
and
cwtl
loop
lcall
xchg
or
mov
mov
shll
or
hlt
cmpl
lret
push
movsb
lock
lods
adc
fs
add
loopne
mov
xchg
xor
test
or
enter
lock
cwtl
or
and
and
fnstcw
mov
out
sahf
push
inc
inc
dec
push
out
into
dec
aas
movsl
sub
and
js
test
xor
repz
fistpll
addb
adc
hlt
fcomps
lock
inc
push
pop
adc
inc
add
jmp
sbb
shrb
mov
inc
nop
pop
or
insb
add
in
sub
sub
push
mov
push
nop
and
xchg
push
sbb
js
gs
sbb
adc
enter
add
jae
adc
imul
hlt
or
popa
xchg
arpl
sub
jmp
inc
cmpb
cli
inc
cmp
and
lds
shrb
inc
add
ret
push
adc
push
push
in
xor
fmull
fs
and
sub
add
adc
cs
cmp
ss
sub
dec
and
xor
nop
outsb
sbb
and
adc
daa
dec
dec
push
test
pop
jbe
pop
xchg
popa
adc
outsl
inc
scas
test
cmp
cwtl
inc
dec
or
je
sbb
pop
add
js
xchg
push
mov
push
fsubrs
xor
or
add
xchg
in
sub
mov
fs
adc
jo
push
lret
xchg
rolb
insb
push
fcomp
nop
mov
pop
xor
sbb
nop
xchg
call
or
pusha
mov
ja
jnp
mov
mov
popl
flds
pusha
out
or
pop
nop
xor
les
sub
fs
push
dec
daa
push
dec
fadds
pop
jbe
dec
cmp
or
das
or
inc
xlat
clc
or
rolb
in
int3
popa
jb
mov
repnz
xor
movb
or
push
inc
dec
inc
lods
fcoml
repnz
adc
inc
xor
cmp
push
sbb
aas
mov
add
adc
mov
or
fcompl
adc
cmp
add
in
jo
pop
add
adc
sbbb
cmp
pop
and
aad
fs
stos
mov
xchg
scas
mov
sbb
dec
rol
fcomps
imul
or
cmp
cmp
mov
in
add
nop
jg
fadd
mov
rcl
adc
pop
xchg
lahf
xorl
mov
or
cmpsb
nop
add
pop
ret
adc
dec
loop
int3
inc
ss
pop
repnz
pop
imul
fs
xor
or
xchg
mov
sbb
xchg
rcl
aam
jl
and
jne
call
sbb
sub
jecxz
mov
adc
insb
dec
in
imul
inc
push
bound
jmp
dec
jmp
out
and
leave
cmp
hlt
adc
xor
push
insb
mov
lods
sbb
loopne
add
sub
add
repnz
and
inc
sahf
mov
fbstp
cmpsl
movsb
sbb
ss
sbb
dec
cmp
scas
and
iret
mov
stos
pop
leave
mov
and
test
movsb
xchg
cmp
enter
push
in
and
outsl
adc
sub
jae
xchg
adc
enter
inc
mov
cltd
imul
das
in
leave
inc
mov
jne
adc
test
aaa
test
aaa
test
fcompl
fmull
loopne
xchg
sbb
or
inc
xchg
shrl
push
rcll
jge
lahf
repnz
push
enter
xor
fwait
push
adc
dec
aaa
inc
aaa
xor
xor
jns
push
xchg
leave
inc
popa
inc
insb
cmp
pop
and
enter
jne
xchg
xchg
jl
fcoms
addl
push
sub
fdivrs
push
dec
pop
push
sarl
adc
add
loopne
mov
mov
adc
jo
cs
sub
fs
mov
and
mov
jp
adc
jne
pop
pop
int3
inc
or
mov
lcall
in
in
mov
or
push
rclb
jg
hlt
jle
mov
adc
lock
push
mov
sub
push
adc
pop
pop
mov
xchg
mov
mov
insl
mov
and
jmp
pop
mov
adc
jns
adc
leave
scas
pop
bt
push
adc
and
xchg
mov
sbb
push
sbb
pusha
and
xor
fs
pop
pop
lods
adc
lods
mov
hlt
jns
std
add
sbb
sbb
in
add
fs
jmp
mov
cmp
sbb
or
dec
loopne
pop
pop
sbb
jmp
lea
popf
pop
sbb
std
push
xchg
push
pop
in
adc
add
and
inc
adc
pop
inc
enter
pop
xlat
push
enter
cmp
ds
and
insl
mov
es
push
jb
add
pop
sub
sbb
js
js
cmp
add
in
popl
es
dec
xor
mov
adc
mov
js
jns
xor
inc
es
sti
sbb
pop
sub
lahf
adc
scas
mov
pop
cmp
cmp
fildl
popf
xchg
cmp
cmp
repnz
pop
leave
sbb
or
and
mov
inc
fwait
rcrb
cs
popf
test
test
dec
idiv
and
pop
leave
add
inc
mov
mov
dec
sbb
dec
insb
sbb
cmp
or
sbb
bound
jb
int3
gs
and
add
leave
sub
call
inc
popa
insb
in
add
popf
jno
or
xor
ss
aad
es
xchg
pop
jbe
fsts
call
enter
pop
and
xchg
pusha
or
pusha
xor
popf
cmp
sub
mov
xchg
cmp
in
push
or
inc
pop
mov
ss
je
sub
xchg
sbb
adc
add
push
addb
and
outsb
and
or
popa
or
scas
cmp
ret
adcb
es
push
mov
and
nop
rolb
gs
enter
aad
ficoms
or
mov
or
lock
in
cmp
fcoms
or
insl
in
and
aam
fs
add
nop
or
fcompl
sub
xchg
aam
fsubl
aam
incl
nop
cmp
test
xlat
push
repnz
cmp
mov
add
inc
andl
sub
sub
mov
xor
cmpsl
pop
push
leave
adc
cmp
dec
cmp
xchg
aam
hlt
mov
nop
push
popa
in
cmp
cmp
cmp
sbb
push
fdivl
sbb
jns
push
shlb
jo
adc
loop
test
js
movsb
insb
jns
stos
movsb
mov
inc
dec
leave
push
data16
mov
inc
adc
mov
push
fstl
and
leave
dec
push
mov
mov
sub
sub
das
and
aad
jl
cmp
adc
adc
mov
inc
adc
xor
adc
cmp
insb
push
sub
loop
and
jne
push
pop
adc
in
jns
lods
or
or
mov
test
xchg
lds
add
rclb
or
jge
or
repnz
aam
push
ljmp
sbb
fchs
pop
and
sbb
loopne
mov
outsl
and
test
add
enter
les
loope
mov
loopne
movsb
push
xchg
mov
bound
add
fcomi
fcoml
inc
mov
scas
adc
push
mov
cld
cmp
mov
or
sti
mov
call
aaa
inc
adc
shr
mov
cmpsb
loop
push
orps
test
add
dec
int3
in
movzbl
clc
or
loope
lods
fcomi
sub
out
mov
adcb
xchg
into
out
add
pop
and
add
test
or
add
aas
test
clc
pop
inc
or
imul
dec
jmp
cld
adc
xchg
stos
mov
xorb
cwtl
jnp
insb
push
jb
stos
jg
sub
pushf
imul
add
inc
add
ss
arpl
movsb
push
add
sbbb
pcmpgtb
aam
fadds
adc
sub
jp
lock
js
xchg
adc
outsb
pop
loopne
fdivr
add
dec
in
jo
and
cmp
mov
ss
push
dec
pop
inc
in
das
in
sbb
mov
or
insl
fisubrl
ljmp
loop
popf
int3
push
mov
fiaddl
cmp
jne
in
jp
and
or
xchg
sbb
or
clc
test
addr16
int
int3
mov
insl
lods
pop
push
repz
jnp
insb
or
xor
or
inc
pop
mov
mov
push
push
shrl
jecxz
adc
add
cmp
aam
into
mov
aaa
jg
cld
add
push
jbe
sub
fsubrs
xchg
daa
arpl
das
or
mov
push
pop
xchg
mov
adc
mov
add
adc
insb
lods
and
jnp
mov
int
sub
pusha
jnp
dec
into
add
jge
in
add
and
sbb
insb
pusha
je
repz
push
adcb
jno
push
jae
insl
add
pop
cmp
xchg
or
and
fcomip
lret
js
mov
je
not
and
in
or
int
xchg
mov
jl
jg
inc
testl
mov
push
dec
orb
pop
cli
pop
xchg
loop
sbb
adc
push
add
sub
jb
repz
and
jge
jb
sbb
jns
jb
adc
repnz
jo
mov
xchg
inc
xor
sbb
mov
pop
and
sbbl
fs
enter
popl
jb
add
pop
push
sarl
add
mov
adc
andl
add
xchg
inc
ja
icebp
xor
xchg
dec
and
or
xchg
mov
adc
mov
fimuls
cmp
jp
inc
dec
cmp
dec
add
and
sub
pop
inc
add
icebp
or
add
lock
jne
xchg
cmp
nop
pop
mov
imul
shll
je
je
inc
testb
push
push
add
add
push
popf
sbb
pop
iret
mov
push
repz
add
add
add
cmp
and
and
add
adc
nop
cmp
xchg
pop
enter
jne
push
pop
jo
and
xchg
pop
jp
push
lock
and
nop
xchg
jne
push
mov
dec
cmp
cmp
pop
leave
sub
and
and
nop
add
or
mov
movl
add
das
lock
add
add
sub
cmpw
mov
add
jbe
lods
pop
jmp
sub
out
xchg
push
imul
adc
imul
pop
cmpl
and
jmp
push
cmp
xor
cmp
xchg
ret
adc
add
lahf
add
adc
jmp
inc
push
push
push
mov
dec
jmp
add
sub
or
sub
or
adc
jne
mov
dec
and
or
inc
or
push
rcll
decl
add
loopne
shrl
and
inc
push
push
inc
pop
inc
or
adc
and
and
call
lock
mov
jne
adc
loopne
mov
or
adc
mov
mov
add
lcall
xor
push
sub
xchg
and
and
push
jo
insb
push
paddw
adc
call
enter
je
stc
and
pop
dec
jbe
push
cmp
xor
push
mov
adc
in
and
xchg
lret
lock
jge
cmc
and
xor
inc
and
mov
mov
cmp
stos
iret
outsb
clc
fs
cmp
inc
push
testl
or
hlt
inc
push
inc
pop
lock
and
decl
xchg
lea
xchg
pop
add
and
or
lret
rclb
mov
sbb
or
aas
add
nop
lret
mov
jmp
or
or
xor
adc
outsb
enter
out
insb
stos
push
mov
inc
push
push
in
test
push
inc
add
or
jbe
and
jp
jge
imul
outsb
mov
lret
pop
fmul
js
add
dec
jmp
addr16
lods
mov
dec
cmp
jae
jne
and
pop
mov
add
popa
mov
dec
cmp
push
adc
stos
sub
jl
fildll
vpshlb
adc
fbld
adc
es
mov
jne
push
xor
jns
pop
jl
mov
mov
shrb
jge
pop
jne
daa
pop
mov
mov
mov
jae
movsb
stos
sub
jl
jne
lsl
dec
int3
jne
inc
dec
rcll
stos
int3
cli
xor
pop
jge
jg
es
jns
insb
into
adc
jle
add
enter
dec
add
fs
leave
jae
fdivrs
imul
mov
fs
fistps
xchg
les
mov
in
enter
mov
lret
rorb
dec
sbb
aam
sbb
and
rol
xchg
fnstcw
data16
sbb
cld
mov
jmp
ror
mov
or
lds
and
in
or
imul
icebp
je
mov
roll
adc
ds
xchg
add
add
adc
lods
std
shrb
movsb
nop
inc
addb
inc
adc
sbb
jne
adc
nop
or
push
enter
addl
in
mov
adc
xchg
add
push
dec
fs
sub
mov
mov
push
or
cmp
cs
push
ja
sarb
pushl
mov
syscall
jae,pn
inc
mov
insb
push
adc
imul
jne
jne
or
push
pusha
xchg
jl
mov
je
push
lds
cs
mov
pop
sub
inc
out
adc
sbb
hlt
pmulhuw
ljmp
add
jnp
sti
xor
call
sahf
cmp
xchg
cld
pop
imul
out
mov
ds
ja
decl
lock
dec
add
fsubs
and
ds
stos
popa
outsb
subl
mov
mov
das
jne
enter
enter
cmp
or
adc
adc
sub
or
and
ja
sbb
mov
add
xor
lds
xor
inc
xor
movsb
ret
ficomps
dec
sbb
sbb
call
mov
dec
add
or
and
xchg
ret
sub
jo
and
cmp
add
clc
cmp
int3
or
inc
add
cmp
sbbl
jmp
inc
rcll
addl
xor
add
and
iret
inc
push
add
ds
adc
xchg
jo
or
sub
in
add
jp
mov
and
rorb
leave
add
aas
mov
push
sub
add
cmp
nop
frstor
sub
xchg
aas
inc
mov
xchg
sbb
daa
pop
or
inc
ds
nop
xorl
sahf
pop
push
sbb
and
inc
addb
subl
push
dec
add
xor
or
aad
nop
xchg
lret
dec
sahf
testb
loopne
inc
push
xor
enter
je
in
fsts
mov
test
sub
sub
aas
jb
inc
sub
and
sub
and
xchg
dec
cmp
mov
ss
push
mov
test
sbb
loop
outsb
cmp
nop
cmc
pop
add
or
dec
xor
insb
add
jae
mov
dec
or
fsubs
adc
and
enter
pop
push
cwtl
or
addr16
dec
shl
add
pop
sbb
insb
ret
es
sub
push
xor
sahf
fmuls
inc
repz
sbb
xor
xchg
push
cmp
and
jl
xlat
les
jo
dec
sbb
enter
dec
sub
and
dec
mov
hlt
add
add
arpl
cs
or
pushf
insb
push
in
call
stos
xor
fcomip
repz
add
add
movsb
sbbb
cmp
test
cld
push
add
iret
leave
xchg
and
outsl
into
push
fisubl
les
loope
nop
sub
xlat
push
cltd
xchg
int
and
or
in
inc
mov
cmp
mov
cmp
sarl
fdivs
fdiv
dec
fcomp
in
repz
mov
sbb
mov
sub
inc
mov
pop
mov
push
mov
mov
mov
adcb
mov
fsts
aas
dec
sbb
jge
sub
sti
pop
add
fimull
incl
mov
dec
mov
inc
aaa
or
xor
adc
xor
cmp
pop
push
je
aaa
xchg
and
cld
jge
mov
mov
je
lea
mov
sbb
arpl
repnz
imul
jmp
cmp
adc
or
push
cmp
fdivs
and
xchg
mov
fiadds
je
lea
adc
push
xchg
cmovge
xor
std
jne
nop
jmp
xchg
mov
into
inc
pop
iret
outsb
mov
push
push
sbb
aas
pushl
dec
aam
movzbl
add
inc
cmp
jb
sub
mov
outsl
test
cs
add
xorl
fmuls
stos
call
and
xor
andl
insl
xchg
das
push
int3
stc
cmovno
pop
dec
pop
enter
cmp
adcb
mov
mov
int3
adc
pop
xchg
ror
popa
inc
xchg
cmp
dec
lcall
add
mov
jae
jp
pop
lock
mov
mov
pop
push
aam
sub
adc
inc
push
enter
xor
and
or
movsb
rorl
call
push
sahf
mov
icebp
aam
push
fcomps
sub
xor
int3
aaa
inc
lods
push
jne
adc
das
int3
add
aam
push
inc
rcrl
out
adc
mov
pop
les
mov
fsubr
mov
adcb
or
das
loopne
pop
dec
inc
insb
push
mov
dec
inc
mov
shll
addl
icebp
movb
sub
scas
xchg
adc
or
xchg
push
shl
and
loope
inc
and
mov
clc
js
or
sub
or
mov
gs
adc
push
mov
pushl
rolb
sbb
nop
sub
adc
in
sbb
inc
xchg
mov
sub
mov
ficompl
enter
pop
or
adc
unpcklps
dec
clc
cmc
or
or
ret
addl
xchg
je
sub
das
andb
dec
sub
inc
xchg
xlat
mov
and
hlt
adc
jnp
lods
movb
popa
imul
cs
add
insl
push
push
push
mov
mov
clc
jmp
iret
add
jae
adc
add
inc
lock
inc
or
pop
mov
adc
test
mov
mov
jb
stos
push
imul
xor
add
das
outsl
cmp
sub
jmp
push
inc
jb
inc
ja
inc
add
in
jbe
or
inc
cmp
or
add
es
xchg
add
cmp
or
inc
add
icebp
test
shl
les
push
and
rcrl
nop
out
push
cmp
sub
and
mov
lret
add
in
inc
or
add
nop
clc
hlt
lock
call
dec
push
sbb
call
orl
das
inc
in
or
inc
call
push
adc
push
and
loop
or
xchg
out
fdiv
fmul
xor
lock
push
sbb
jl
int3
rorb
mov
or
rcrb
sub
xchg
sub
sbb
dec
test
sar
jne
or
pop
enter
jbe
mov
or
les
notl
sub
sub
rorl
nop
int3
cld
mov
loopne
in
enter
or
sbb
js
add
adc
and
adc
lock
or
mov
xchg
or
test
sub
gs
jb
mov
lock
mov
push
int3
sbb
call
push
and
jmp
int3
inc
cmp
rcll
xchg
inc
sbb
in
pusha
dec
jne
sbb
push
je
pop
sub
xchg
fsubrp
and
add
fistl
sbb
mov
inc
dec
jo
add
xor
and
inc
outsb
inc
or
addb
push
aad
mov
sub
adc
add
lods
mov
and
mov
cmp
add
fnstsw
push
and
test
shlb
xor
jne
mov
das
insb
testl
or
fistpl
pop
inc
dec
jbe
jge
lcall
pop
adc
leave
mov
mov
or
adc
or
das
bound
sub
test
and
shlb
repnz
cmp
jae
xchg
adc
je
hlt
xorl
inc
iret
push
pusha
cs
mov
cmp
or
push
mov
les
push
jle
subl
push
jbe
icebp
push
mov
or
xchg
sbb
xchg
adc
scas
add
add
lcall
loopne
ds
pop
test
mov
lea
mov
int3
and
dec
mov
test
fwait
test
push
mov
push
sete
jne,pt
xor
and
icebp
and
cltd
xchg
pushf
and
out
and
scas
xor
mov
pop
xchg
add
in
jne
add
ja
nop
sbb
add
mov
push
sbb
push
icebp
imul
jbe
pushf
or
and
ficomps
mov
inc
xor
and
or
ud2
or
push
aas
fimull
or
jae
jecxz
push
hlt
or
add
sbb
jno
mov
mov
cmp
or
jne
dec
sub
or
dec
and
inc
scas
add
jbe
aam
ss
inc
lock
mov
in
andb
loope
nop
outsl
pop
or
push
test
adc
or
sub
add
das
mov
xchg
fcoml
sub
or
push
insb
jg
cs
in
outsl
fldenv
or
adc
daa
call
add
outsb
lahf
popf
in
push
xchg
enter
or
mov
pop
push
add
test
or
ds
insb
leave
push
jp
xor
or
in
jg
xor
push
cmp
insb
dec
jl
adc
inc
sub
push
subb
stos
jp
push
ss
sbb
or
cli
add
sub
in
xchg
fsubrl
icebp
sbb
lods
jp
js
xor
add
push
cltd
enter
and
fs
add
out
inc
pushf
sub
mov
insl
loopnew
cs
je
dec
adc
lds
ficomps
arpl
or
push
lcall
lock
add
sub
push
fs
mov
or
clc
push
test
lods
xor
pop
rcrb
or
jmp
inc
lods
int
popa
lea
cmp
loopne
insb
jbe
pop
jne
and
xchg
pop
push
popf
add
push
adc
adc
sar
mov
inc
cmp
jb
fisttpl
mov
rolb
push
outsl
jmp
mov
repz
js
mov
xchg
insb
lret
xor
nop
inc
mov
and
sub
or
xor
shr
push
mov
add
sub
add
movsl
add
aad
aaa
insl
inc
and
xchg
call
fistl
sbb
rolb
icebp
push
jbe
in
pop
dec
scas
call
push
pop
sti
mov
ja
sub
sub
fsubrl
add
pop
add
mov
jae
lods
daa
xchg
data16
mov
xor
push
fs
adc
bound
add
pcmpeqb
aam
fcmovnu
outsb
clc
inc
and
xchg
or
imul
gs
inc
out
mov
jnp
imull
inc
and
jno
xchg
pusha
push
je
mov
mov
adc
and
sbbl
push
push
clc
rorb
add
jae
cmp
and
and
inc
push
or
sbb
mov
inc
ss
mov
or
lock
and
sbb
adc
wbinvd
pop
pop
fiadds
je
pop
je
pusha
mov
pop
and
rolb
dec
daa
jne
dec
pushf
sub
clc
addr16
sbb
or
pop
mov
push
das
pop
cmpsb
incl
inc
xchg
out
mov
cmp
bound
xchg
push
shl
cmpb
adc
pop
xor
mov
fbld
pushf
mov
sub
inc
das
push
fisubs
and
inc
insl
hlt
mov
sub
ds
sub
or
int
sbb
cmp
cltd
xchg
xchg
xchg
and
addb
xor
sbb
pop
sbb
in
lock
test
fsub
in
lar
and
xchg
or
sbb
aam
rolb
and
inc
or
cmp
xchg
xchg
ja
xchg
adc
dec
rolb
bound
rorb
or
in
pop
add
enter
hlt
xchg
xor
inc
xchg
xor
addl
sbb
sbb
adc
add
cmp
jne
mov
or
lcall
js
add
mov
hlt
call
dec
push
pop
jo
xor
add
shrl
enter
cmp
add
adc
inc
xlat
sbb
add
pop
pop
inc
xchg
orw
orl
js
or
and
adc
nop
mov
sbb
mov
or
and
cmpl
mov
cmovge
cmp
or
insb
mov
pop
lds
jmp
sahf
mov
sbb
or
xchg
nop
test
sbbw
jbe
shr
push
sub
jl
jae
inc
xor
pop
jge
in
adc
ss
je
mov
andl
dec
inc
fisttpl
pop
scas
or
out
popa
or
outsb
cmp
inc
sbb
xchg
or
xchg
mov
fwait
mov
ja
sbb
push
add
and
dec
sbb
cmpsb
cmp
or
sub
mov
xchg
mov
pop
fnstenv
xchg
cmp
and
roll
push
push
nop
ret
push
enter
add
cmp
and
push
mov
add
inc
lret
test
dec
push
insb
or
xor
inc
push
movsb
sbb
xor
and
sbb
push
inc
ds
sbbl
sbb
clc
push
sbb
xor
xor
nop
add
sbb
cmp
xor
ja
leave
and
scas
xor
in
push
or
jb
seto
jl
addl
bound
push
inc
mov
xchg
and
testl
clc
push
or
and
pop
test
daa
nop
sub
inc
cmp
sbb
imull
je
mov
cld
pop
repnz
cmp
mov
leave
lret
or
scas
mov
insb
jo
call
jle
sub
add
test
push
pop
test
mov
and
js
rcll
mov
dec
push
pop
inc
and
xor
mov
push
shlb
js
ret
add
ss
out
daa
adc
inc
jno
loopne
mov
inc
xchg
xchg
cs
pusha
cvtdq2ps
xchg
icebp
xchg
ja
push
mov
sbb
or
xchg
dec
lret
orb
dec
cmpsb
cmp
xchg
cmp
xor
sbb
and
icebp
fs
iret
xchg
js
inc
sti
or
js
cmp
sbb
or
inc
cmpl
daa
loopne
sub
cmp
es
fcoml
and
fwait
inc
in
aas
or
and
aaa
addb
mov
push
cmpsl
xor
dec
aaa
sbb
hlt
inc
sarb
lock
sbb
orb
cmp
cmp
add
lods
imul
mov
xchg
daa
bound
lods
test
inc
outsl
push
sbb
out
inc
jb
stc
roll
inc
enter
scas
inc
jo
xchg
pop
and
mov
cmp
adc
cmp
jb
sub
fmuls
sub
add
and
clc
cmpw
jne
inc
inc
mov
andl
out
inc
mov
add
pop
adc
cmp
or
xor
push
and
test
inc
in
test
mov
dec
and
mov
inc
push
push
xchg
inc
imul
or
leave
mov
scas
sbbb
xor
xchg
add
lock
in
mov
adc
insl
xchg
in
hlt
mov
inc
icebp
or
add
rcrb
inc
xor
pushf
lret
in
sub
xor
pop
testb
sbb
adc
and
add
out
sbbl
and
fdivrs
addl
or
or
and
add
push
test
xchg
inc
sub
fsubs
in
adc
add
in
mov
pushl
cmp
add
arpl
cmc
push
mov
pop
cmpw
dec
scas
iret
adc
or
frstor
xor
inc
mov
or
add
nop
scas
sub
inc
movsb
addl
aad
sub
out
mov
sbb
addb
mov
sbb
leave
dec
cmpb
int
or
rol
daa
and
mov
cmpsb
mov
daa
and
cltd
xchg
mov
jg
jb
adc
jp
addb
loop
dec
xor
lds
notb
test
pop
cmp
testb
in
push
mov
pop
loop
mov
jp
mov
lret
sub
sbb
push
dec
hlt
mov
jg
ljmp
jo
mov
or
lods
mov
getsec
mov
or
inc
jns
inc
icebp
xabort
bnd
fldenv
shl
pop
mov
cmp
pop
in
mov
test
ret
and
jne
movsl
jb
sub
jbe
pushl
loopne
or
clc
cmp
test
xchg
pusha
jle
lods
lret
call
lods
sbb
cltd
daa
clc
ret
shlb
ret
mov
xchg
faddl
inc
rcr
adc
jb
xorl
leave
add
pop
and
pop
loopne
adc
push
sbb
add
inc
mov
mov
xchg
cmpsl
pusha
addb
mov
mov
adcb
ja
test
inc
mov
cmpsl
mov
adc
jno
adc
es
rolb
pushf
inc
xor
test
or
inc
jb
loopne
xchg
adc
adc
add
adc
clc
pop
repnz
inc
jbe
adc
je
jbe
cwtl
sbb
cwtl
adc
sbb
fdivrl
xlat
in
fstps
push
stos
cwtl
testl
pop
mov
mov
adc
xlat
push
fisttpl
pop
inc
pop
or
shrb
adc
imul
cwtl
lret
jp
dec
pop
sbb
jo
movsl
sahf
cmp
repnz
je
bound
mov
nop
sbb
or
adc
les
jbe
sub
pop
leave
leave
in
xchg
add
sarb
in
addr16
nop
mov
sbb
or
or
mov
cmp
aaa
dec
and
mov
stos
fadds
popa
mov
cwtl
pop
mov
xor
ret
sub
cmp
add
pop
and
rclb
daa
ror
inc
dec
dec
and
add
test
push
push
lds
xchg
lar
push
fsts
shlb
push
pop
adc
pop
xchg
sbb
mov
nop
adc
pop
jb
inc
mov
mov
mov
setb
inc
mov
push
dec
mov
test
fiadds
inc
out
jo
leave
int3
push
pop
outsb
out
leave
popa
mov
push
sub
dec
or
xchg
mov
adc
sub
test
es
xorb
push
ror
push
mov
dec
sub
push
jl
repz
pop
adc
fists
mov
cmp
je
cmpl
test
sbbl
sub
add
in
mov
push
push
pop
add
sbb
add
push
mov
cmc
pop
pop
adc
dec
xchg
lds
sbb
pop
ret
and
imul
add
mulb
add
or
lock
push
stos
bound
mov
mov
imul
incl
imul
fcomi
adc
adc
or
in
push
mov
cmp
cmpsb
icebp
adc
push
xorl
movsl
jp
adc
data16
test
push
daa
lds
cli
add
xor
or
stos
mov
lds
int3
leave
push
inc
add
test
and
fadd
movsb
jnp
in
or
xchg
outsb
arpl
push
push
arpl
or
cs
xor
andb
je
sbb
push
jne
mov
cmp
mov
jge
add
sbb
inc
sbb
or
add
push
push
jmp
jbe
icebp
leave
push
js
call
mov
jne
push
out
or
mov
ja
mov
in
scas
mov
mov
pop
jmp
jnp
add
dec
inc
repz
fxch
ret
or
call
inc
mov
mov
mov
bound
rorb
packssdw
adc
out
sub
cmp
addr16
add
lahf
adc
jnp
loope
jmp
mov
ret
push
push
daa
mov
sub
movsb
jg
push
popa
and
jmp
mov
xor
ja
cmpsb
subb
subl
add
lea
push
cwtl
sub
inc
nop
mov
lock
pushf
lock
xlat
jnp
les
jp
pusha
lock
fisubs
pop
sub
xor
and
popa
xor
mov
pop
lock
insl
push
adc
xchg
adc
mov
adc
pop
mov
jb
inc
mov
mov
imul
or
sahf
mov
insl
sub
movl
mov
or
push
push
enter
in
lahf
decb
add
lock
repz
dec
add
mov
sbb
push
cltd
xchg
sub
aam
stc
fisubrs
adc
cwtl
cmp
pop
popf
lds
cmp
mov
or
loopne
orb
in
leave
ret
mov
inc
mov
andb
shrb
push
mov
mov
push
sbb
or
fsubr
xor
or
jbe
movsb
insb
cmc
mov
xor
clc
add
nop
test
outsb
push
cmpsl
test
bound
push
or
outsl
cmp
push
adc
call
inc
or
jne
lods
and
stc
pusha
adc
inc
mov
jmp
pushl
sbb
aaa
aas
pushl
or
or
push
jge
jne
and
in
add
mov
outsb
sub
add
popa
movsb
lea
in
repz
pop
mov
outsb
int3
or
lret
nop
int3
insb
cmp
cwtl
xchg
sti
aam
cld
mov
and
cltd
mov
fildl
daa
mov
add
int
xchg
cld
stos
int3
testb
jo
out
and
cmp
in
sbb
adc
int
push
pop
or
add
pop
add
xor
push
jne
test
jmp
insb
enter
mov
push
xor
mov
sbb
neg
jne
popl
js
dec
cmp
mov
or
and
pop
pop
hlt
hlt
xchg
cwtl
inc
cmp
aam
aam
cmp
pusha
out
jg
insl
lcall
lcall
mov
aam
pop
fs
test
or
or
sbb
lret
lods
push
cmc
xor
cmp
inc
and
sub
xchg
sahf
push
jbe
iret
and
sub
mov
iret
and
sub
jbe
je
add
ficoml
enter
inc
add
sub
rcrl
sub
cmp
cmp
in
push
or
iret
inc
in
push
in
mov
add
in
push
lds
xchg
inc
mov
jmp
or
dec
sbb
in
push
or
lret
cmp
jl
jp
mov
pop
outsb
icebp
cmp
pop
jnp
dec
into
add
jae
gs
decl
push
ss
mov
mov
insb
mov
jl
mov
mov
pushf
mov
lods
mov
mov
rol
int3
mov
fmull
call
mov
hlt
clc
cld
sbb
jns
add
or
sbb
sbb
adc
sbb
sbb
sbb
sub
xor
sbb
sbb
cmp
inc
dec
sbb
sbb
dec
push
push
pop
sbb
sbb
pusha
push
sbb
je
jl
sbb
sbb
mov
sbb
sbb
sbb
mov
cltd
lea
adc
jge
mov
jae
mov
add
or
jae
jae
push
and
pop
aam
jae
or
jmp
push
xor
enter
adc
xchg
jb
enter
inc
sahf
mov
sbb
fistpll
adc
popf
rorl
cmpsb
sbbl
sti
sbb
mov
adc
mov
push
cmpl
sbb
and
loop
rorb
fcom
and
xor
pop
push
sbb
push
jg
imulb
push
push
push
xor
lea
pop
out
shr
inc
lea
jl
rclb
lock
mov
mov
jb
mov
add
mov
pop
xor
sbb
sub
jbe
ret
mov
adc
and
xor
ljmp
and
adc
sar
ret
xor
pop
pop
pop
ret
insb
and
push
es
js
mov
std
pcmpeqd
adc
imull
loopne
ljmp
pop
test
lea
cmp
adc
lods
sarb
add
push
or
add
inc
inc
and
sbb
into
push
pop
cmp
jg
pop
mov
movl
fisttps
xchg
push
popa
cmp
mov
ret
cmp
je
dec
inc
test
pop
xchg
fs
int
xchg
push
mov
and
xor
mov
or
and
inc
je
or
mov
pusha
out
dec
mov
fwait
or
lds
fdivrp
leave
inc
mov
and
movsl
push
mov
pop
rcrl
xchg
push
or
and
push
lds
jmp
xchg
pop
int
enter
cs
push
sub
sub
adc
out
jo
mov
jae
jns
jae
cmp
pop
clc
push
neg
sbb
mov
pop
ret
cs
pop
sbb
sub
adc
add
or
dec
pop
jge
mov
cs
shrb
cs
mov
or
pop
inc
push
rsqrtps
cmp
or
movsl
push
add
cmp
push
getsec
scas
jae
out
lret
fidivrs
fistpl
xchg
fmulp
and
leave
add
hlt
into
sbb
cmpsb
xchg
movsl
jecxz
sbb
mov
pop
and
hlt
or
ret
insb
mov
pushl
mov
jb
mov
sbb
lret
inc
fwait
or
pop
cmpsb
pop
inc
mov
popf
cmp
aad
jge
xor
add
sub
je
dec
xchg
fwait
xchg
mov
rolb
ret
enter
mov
lahf
jb
ret
and
sub
jns
mov
push
add
xchg
push
imul
mov
mov
dec
lea
cs
add
jbe
or
rorl
cli
add
sbb
mov
shr
pop
and
in
sub
pop
adc
sbb
scas
or
cld
stos
push
sbb
or
mov
lea
cmp
gs
add
pop
sbb
adc
dec
and
enter
mov
into
sbb
inc
dec
add
push
sti
inc
clc
adc
mov
cmp
jge
enter
stc
pop
jbe
dec
add
pop
sbb
push
mov
xor
ret
mov
or
pop
outsb
lret
inc
add
inc
xchg
cmp
divb
add
add
cmp
inc
sbb
cmp
jb
inc
push
je
lea
test
loope
insl
shrl
jmp
add
xlat
mov
mov
mov
cmp
jp
xchg
xor
pusha
push
mov
sub
mov
adc
add
xchg
js
negl
std
adc
or
je
cmp
ja
test
xor
cmp
jae
lea
call
mov
sub
sub
jne
inc
inc
push
jb
sbb
adc
je
cmp
aad
pop
mov
push
sbb
adc
call
mov
mov
imul
cmp
cli
pop
ret
add
add
ss
call
cmp
ss
dec
xchg
fcmovnbe
int3
gs
push
aas
rclb
adc
ljmp
mov
imul
mov
shr
fcmovnu
mov
jecxz
jb
xor
jg
mov
or
shl
pop
insb
add
movsb
je
pop
out
mov
add
or
jo
and
pmaxsw
pop
sbb
adc
cmp
hlt
mov
addl
pop
adc
shrl
insl
ret
outsb
iret
enter
inc
adc
jecxz
out
inc
dec
test
je
dec
adc
and
mov
xor
add
mov
mov
xchg
dec
cs
adc
sbb
add
or
lret
jmp
adc
push
lea
add
mov
jg
lea
push
mov
fwait
add
lret
or
cmp
pop
dec
sub
jne
sahf
cwtl
mov
aaa
mov
push
mov
sahf
add
pusha
iret
mov
fidivs
mov
notl
add
fildl
sbb
dec
das
pushf
sbb
pop
cmp
pop
repz
cmpsl
inc
xor
pop
shlb
ret
inc
jo
jne
and
daa
sbb
adc
push
lcall
push
call
jge
xchg
mov
and
scas
icebp
fnstcw
pop
sub
sub
pop
mov
jnp
mov
lea
sub
jp
add
mov
adc
fcmovnbe
loop
cmp
jne
push
les
push
sbb
jbe
cmp
add
push
mov
jecxz
roll
ljmp
mov
cmp
or
ja
fxch
or
jge
stc
add
outsl
daa
arpl
add
and
fstpt
decb
push
lea
bound
cmp
sub
lea
pop
push
jl
mov
push
insl
push
movsb
push
andb
cli
xchg
testb
mov
and
cli
push
pop
movsb
out
jmp
sbb
inc
mov
inc
and
mov
sub
ret
xchg
cltd
cmp
sti
and
sar
add
call
imulb
leave
adc
cmp
bound
push
dec
cmp
fadds
dec
cmp
xchg
clc
jge
mov
loop
addr16
insb
gs
add
cmpsb
pop
adc
jle
lahf
adc
jae
lret
mov
add
mov
iret
xchg
in
pop
mov
push
add
and
or
cmp
dec
sti
mov
xlat
inc
fcmovnu
mov
push
jl
outsl
adc
stc
xor
sub
add
shrl
aaa
je
lret
popa
jmp
add
loope
and
enter
sub
stos
push
push
jno
repz
insl
mov
shl
add
lcallw
dec
pop
das
and
push
add
push
add
sbb
or
insl
ret
fsubs
jbe
int
into
sub
rcr
fadd
or
fdivl
cmp
and
push
mov
test
bound
adc
es
or
jbe
movl
sub
and
cmp
jb
xor
stc
jae
xchg
push
pushf
adc
test
movsb
dec
pop
or
adc
mov
jne
xchg
xor
xor
push
mov
inc
test
call
popa
sub
add
and
jle
jmp
int3
ljmp
into
sub
movsb
negl
push
popa
out
xor
adc
fcomp
int3
lret
shrl
xlat
popf
pop
call
mov
mov
nop
add
mov
incl
xor
push
popl
jns
or
push
jg
pushf
sub
std
pop
lods
outsl
loopne
int3
xor
je
mov
jo
adc
ficoms
dec
sbb
jne
int3
sbb
mov
add
fwait
mov
xchg
dec
pop
cmp
mov
roll
inc
jmp
mov
push
xadd
adc
push
testb
jmp
inc
mov
push
incb
mov
sub
push
push
insb
inc
mov
mov
sub
cmp
sbb
mov
jmp
and
xchg
xor
in
loop
fadd
inc
loop
mov
lahf
lret
dec
fmuls
add
insl
and
mov
fisubrl
sti
outsl
mov
push
jg
and
sub
xchg
sbb
ss
fdiv
ret
nop
push
pop
adcb
cmp
or
mov
rol
imul
sbb
add
and
or
sahf
inc
enter
dec
mov
cs
mov
mov
shl
push
and
lds
scas
adc
sub
mov
adc
push
mov
or
arpl
xchg
jno
xchg
sub
add
lods
jmp
or
or
in
sub
inc
pop
add
xchg
clc
dec
inc
mov
jmp
cmp
test
mov
adc
sub
push
add
in
inc
pop
mov
or
fistpl
push
pop
cmc
mov
dec
fs
add
add
inc
mov
movzwl
setne
loop
inc
cld
rorl
jl
xor
data16
incb
xor
mov
neg
push
or
lea
jne
icebp
add
pop
lea
adc
xor
cmp
jge
pop
ja
push
fnsave
or
sbb
fnstcw
cld
lret
push
and
in
pop
stos
mov
nop
mov
or
movsb
mov
clc
mov
aas
sbb
cmp
cmpsl
cmp
test
ret
adc
pop
mov
jg
adc
sbb
inc
or
jnp
test
mov
and
out
mov
call
call
or
out
or
mov
pop
jnp
mov
xor
and
fcomps
out
push
or
mov
cmp
add
sbb
fimuls
jg
and
or
shll
and
mov
nop
sti
or
mov
dec
jo
xchg
lahf
pusha
nop
lret
mov
sub
xor
adc
fisttpll
jb
sbb
cmc
sub
push
sbb
mov
out
ficomps
das
fwait
or
aad
or
pop
sti
ret
or
roll
shl
pop
or
xchg
jge
or
or
shll
add
das
adc
or
xor
dec
xor
pop
push
bnd
add
sbb
or
sti
popa
fisttpl
add
scas
std
mov
mov
push
dec
in
sub
enter
rorb
mov
mov
rorl
out
push
ss
lret
jnp
add
pop
fmuls
repnz
out
adc
and
out
inc
pop
adc
add
jbe
xor
xor
xor
pop
add
icebp
or
popf
mov
add
or
cld
add
add
pop
mov
dec
or
pop
push
stos
add
lock
outsl
mov
loope
mov
push
repnz
sti
mulb
out
mov
pop
inc
fcomi
pop
lahf
repz
mov
mov
shlb
jge
xor
adc
fisttps
cmp
or
dec
bound
jne
dec
xor
adcb
dec
and
xchg
or
and
cmp
add
pop
dec
inc
push
stos
rorb
dec
loopne
pop
shr
outsl
or
xor
xchg
xchg
sbb
ret
int3
mov
ret
sarb
push
mov
pop
add
pushf
sbb
das
adc
rclb
ficoml
adc
roll
imul
mov
or
les
mov
test
cvttps2pi
ja
mov
inc
jmp
in
push
inc
into
ficoms
notb
adc
push
rcl
inc
or
inc
in
xor
push
lods
pop
push
mov
rcr
mov
pop
or
lock
mov
rcrb
xor
daa
in
add
movsb
imul
or
ftst
test
mov
add
test
andl
outsl
dec
das
in
jbe
mov
lock
add
test
in
push
aam
push
and
insb
xor
or
jl
pushl
lods
or
and
mov
mov
xor
addr16
mov
cmpb
out
out
sub
imul
push
fdivs
xchg
xlat
pop
mov
adc
jecxz
cmpl
test
dec
mov
push
lret
push
mov
and
xchg
rolb
add
rclb
rcr
push
inc
sub
stc
adc
sub
push
sbb
mov
or
testl
cmp
mov
fxch
adc
lret
push
cmp
andl
inc
sbb
mov
inc
or
jns
rolb
movsl
sbb
pusha
stos
movsb
adc
xchg
push
xor
call
xchg
call
push
dec
dec
pop
call
lea
push
push
xchg
call
and
sbbl
nop
or
push
pop
lea
stos
leave
mov
push
pop
movsl
mov
add
leave
adc
mov
lret
push
push
rcrb
pop
xor
pop
ja
mov
ja
lock
cmp
push
or
add
inc
or
push
dec
imul
xor
xor
and
sub
and
popa
insb
insb
gs
bound
pushl
cmp
sub
jo
jb
addr16
sub
xor
cmp
fstpt
xor
cmp
jns
dec
outsl
and
outsb
and
jae
sub
fstpt
and
jae
adc
gs
fdivrp
insb
dec
outsl
jb
imul
outsl
outsb
cmp
idivb
jo
das
das
ja
imul
ja
and
arpl
das
xor
mov
and
push
in
frstor
or
or
adc
in
jp
mov
push
xchg
add
incl
sub
xor
add
jae
sti
jg
jae
outsl
jb
push
jno
gs
jns
add
jae
pop
cmp
jne
sub
cmp
add
arpl
add
jnp
je
imul
outsl
jbe
sbb
aas
xor
push
insl
outsl
outsb
imul
jb
outsl
sub
mov
lods
jb
je
outsl
sbb
add
imul
fsubrs
popa
add
popa
outsl
ja
cmp
arpl
mov
mov
imul
insl
pop
fildll
push
jo
or
sti
outsb
push
outsb
arpl
pcmpgtd
je
popf
insl
pop
or
mov
out
dec
pushf
ja
xor
jb
gs
add
insb
push
push
bound
dec
fldt
jo
gs
insl
imul
inc
add
outsb
in
orb
inc
jne
imul
insb
jge
pop
inc
gs
push
fistpl
popa
jb
xchg
xor
mov
jne
jo
ss
popaw
imul
insl
insl
ja
insb
sbb
jne
mov
pop
fwait
and
addl
mov
pusha
insb
jns
data16
outsl
or
loopne
jbe
push
cmpsl
jb
imul
mov
pop
clc
outsb
or
iret
mov
fcmovnbe
and
popa
js
popa
jp
jae
or
rorl
js
out
jg
dec
add
ss
popa
insl
push
test
add
insl
xchg
out
push
push
or
xchg
ja
lea
outsl
or
adc
in
shl
fldl
test
jo
push
popa
jmp
push
xor
adc
les
lods
or
push
adc
jo
arpl
dec
addr16
ja
fcmovnu
lods
imul
pop
lods
add
popaw
addr16
mull
sub
jns
mov
ss
mov
lds
js
adc
cmp
mov
sbb
cmpsb
aas
ss
or
bound
mov
xlat
sbb
xchg
push
cmp
mov
mov
dec
bound
mov
out
mov
dec
xchg
push
push
imul
insl
xor
pop
bound
xchg
sbb
xchg
test
jns
je
hlt
lods
push
jo
popa
jno
cld
addr16
mov
icebp
mov
sub
mov
push
lods
jecxz
rorb
jnp
sti
imul
xor
xor
divb
ja
or
mov
insl
movsb
out
mov
lret
inc
cmp
xchg
insb
add
insl
pop
out
push
sbb
je
imul
and
add
fisubs
dec
mov
scas
cwtl
imul
xor
and
jne
mov
or
xor
cmp
mov
sti
ret
insb
cmpsb
pop
imul
xor
int3
and
rol
loopne
lahf
movsl
push
pop
add
sbb
dec
cmp
xor
jg
gs
add
xchg
fiaddl
xchg
imul
or
into
adc
sub
xchg
ret
jo
bound
sbb
mov
and
ja
gs
or
fldt
sub
push
cld
dec
xor
aad
loope
out
xor
outsl
fs
dec
adc
scas
insl
mov
jne
cmp
xchg
cmp
pop
mov
insl
jp
arpl
outsb
insl
sti
jne
imul
xor
mov
scas
shl
pop
jae
xchg
mov
sahf
arpl
imul
data16
dec
add
in
loope
loope
das
jge
jmp
add
add
sbb
aaa
add
lcall
mov
mov
sar
dec
fcmovb
jmp
push
pushf
subb
out
mov
data16
insl
je
loope
js
xor
mov
mov
cmp
fisubs
and
dec
nop
add
dec
cmc
mov
rorb
xchg
std
jl
scas
clc
gs
xor
outsb
shlb
lock
into
mov
push
imul
push
xor
xchg
sahf
jae
xchg
pop
in
xchg
je
xlat
mov
aaa
push
jae
fs
or
jae
or
bound
pushw
add
scas
out
add
sbbl
addr16
stc
ficoms
dec
push
aaa
mov
push
and
jle
cmpsb
dec
das
test
jl
lea
cmp
das
addr16
je
jae
jg
stc
fistpll
pop
push
dec
push
push
inc
inc
dec
dec
inc
xor
dec
inc
push
xchg
sub
stc
pop
push
push
inc
inc
lods
rclb
and
add
dec
dec
inc
push
add
push
dec
inc
js
adc
dec
xlat
pop
push
pop
inc
pop
pop
jmp
pop
jb
push
loope
ja
push
xor
or
mov
popf
mov
xchg
dec
cli
pusha
mov
adc
pop
sub
insb
pop
xchg
add
xor
push
inc
sbb
arpl
inc
clc
or
push
adc
fldln2
inc
pop
js
js
or
or
xchg
jns
je
inc
mov
jle
mov
popa
mov
cs
jns
pop
add
push
roll
stc
outsb
ffree
sbb
jl
add
cmp
int3
push
jp
bound
sub
xor
mov
and
xor
addr16
shll
shl
scas
call
cmp
pop
inc
xor
ret
jae
jl
push
int
inc
xchg
mov
fcmovnbe
dec
push
insb
and
arpl
push
and
pop
pop
xor
inc
and
push
xor
or
and
fcompl
sub
insb
leave
flds
inc
out
inc
inc
cs
dec
jae
jae
lods
jb
and
xor
clc
inc
fcomps
push
and
mov
xchg
loope
movb
test
push
mov
pushl
push
push
dec
push
push
and
push
push
das
mov
or
out
inc
je
adc
inc
add
push
das
sub
jo
out
adc
fwait
leave
loope
pop
cmp
cmp
and
pop
push
pop
push
jle
arpl
dec
arpl
fcmovb
gs
push
pop
gs
lods
adc
das
sub
pop
xchg
sub
insl
daa
jb
pop
mov
sbb
mov
int3
pushf
dec
outsl
jp
jo
outsl
mov
xor
sub
cmp
mov
dec
inc
and
cmp
and
cmp
mov
sub
sbb
pop
sub
sub
or
dec
popf
imul
mov
inc
inc
mov
fidivrl
xchg
xor
repz
dec
or
xchg
jne
ret
dec
jbe
es
test
nop
dec
xchg
cli
jp
or
or
inc
orl
bound
pushw
cmp
lds
push
sbb
cltd
cmp
movntq
jo
fnstenv
dec
sbb
and
test
scas
out
pushf
push
gs
insb
jmp
sbb
xor
dec
push
jge
mov
add
dec
into
mov
dec
scas
dec
mov
mov
aaa
outsl
xor
lods
push
jnp
xor
insl
xchg
push
cld
jne
out
fs
jo
sbb
adc
push
stc
push
iret
sbb
adc
mov
sub
pop
inc
inc
ss
or
sbb
push
dec
pusha
lods
rol
mov
adc
push
sbb
xchg
insb
decl
push
dec
inc
add
xor
pop
sub
enter
add
add
shlb
dec
add
jo
mov
jae
fidivl
xor
push
loope
pop
cmovbe
push
pusha
popa
cmpsl
movsl
sbb
ficompl
adc
sub
inc
mov
pop
enter
sub
lock
or
xor
jl
js
inc
dec
jl
jne
cs
inc
dec
dec
push
inc
push
insl
imul
iret
jmp
and
sbb
pop
testb
inc
push
xchg
rorb
sub
xlat
pop
fldenv
push
dec
and
aam
pop
dec
jo
jae
out
mov
mov
dec
push
pop
mov
mov
add
dec
cld
fimuls
inc
dec
xchg
inc
inc
inc
push
inc
push
ficomps
cmp
push
inc
out
sti
scas
sbb
xchg
inc
inc
push
inc
js
es
imul
sbb
mov
mov
mov
sbb
aaa
arpl
lea
jnp
insb
subb
movb
je
or
add
pop
fld
dec
jge
inc
pop
int3
xor
and
xor
popf
inc
out
mov
push
dec
pushf
mov
mov
bound
int
xor
rorb
or
pop
out
addb
ret
mov
xchg
lock
sbb
insb
adc
inc
xchg
data16
insb
fnstcw
push
mov
xor
ljmp
sbb
inc
lfs
add
repnz
iret
mov
arpl
push
push
jb
mov
xchg
or
or
dec
idivb
or
adc
mull
inc
and
dec
adc
in
sub
and
inc
sub
gs
sub
jecxz
or
pop
dec
insb
mov
je
xchg
sbb
xlat
je
daa
and
ret
add
outsl
jbe
cmp
std
sub
pop
orb
dec
mov
das
fs
jle
dec
xor
gs
int
jae
lret
popa
cmp
cmc
or
sub
adc
and
push
xor
pop
adc
push
cmp
insl
and
inc
dec
sbb
leave
sub
enter
mov
fs
loopne
ljmp
adc
cmp
fidivl
sbb
rcll
mov
pusha
fwait
jmp
push
nop
insb
add
xor
and
fs
inc
punpcklbw
mov
into
pop
pop
push
gs
and
popa
stos
mov
push
jo
lock
cs
dec
pop
lret
mov
rorl
xor
pop
adc
pop
push
pop
push
xor
adc
xchg
mov
mov
and
out
pop
push
dec
inc
sub
add
sbb
je
inc
mov
sbb
inc
xor
daa
mov
fdivrs
jno
jae
shrl
and
movsl
pop
sbb
cmp
inc
jns
xor
sbb
or
sub
arpl
dec
mov
add
insb
or
cmp
xlat
xchg
or
leave
pop
imul
add
out
lods
test
lret
out
andl
bound
repnz
sub
push
jne
inc
mov
js
rol
dec
outsb
js
imul
push
fwait
ror
scas
dec
pop
sbb
push
enter
mov
pusha
in
adc
fs
jne
push
and
and
add
sub
add
nop
add
jno
push
loopne
push
jo
fwait
pop
or
popa
outsl
dec
subb
daa
arpl
add
pop
xchg
mov
or
rcr
or
push
test
shrb
and
pop
pusha
jp
clc
sub
or
fsubrl
adc
arpl
fs
mov
jmp
out
arpl
sti
jne
push
mov
imul
jae
adc
pop
xor
pop
fcomps
sbb
jae
insb
push
push
or
pop
pop
pop
aaa
popa
jo
add
or
add
jae
or
dec
sbb
shlb
sub
pop
ret
or
test
dec
loop
ret
sub
jns
add
push
imul
push
dec
inc
push
stos
rorb
cmp
dec
push
jb
ja
and
sub
jne
mov
xor
sub
and
dec
cmpsl
out
xorl
push
dec
and
jnp
inc
xchg
stos
and
push
push
dec
dec
or
xchg
jne
sub
data16
mov
mov
fincstp
adc
xchg
adc
shl
fwait
insb
add
pop
xchg
dec
sbb
sub
xor
sub
xor
fcoms
pop
icebp
push
dec
dec
pop
mov
pop
xlat
inc
mov
fsubl
jae
or
push
xor
add
dec
push
push
rclb
push
insb
cmovge
out
pop
sub
pop
jnp
inc
pop
and
pushl
inc
xor
inc
sub
inc
inc
inc
sub
in
inc
inc
xor
xor
xor
inc
hlt
jge
call
inc
inc
aaa
xor
sub
adc
aaa
aaa
push
xor
xor
mov
jge
fisttpll
xor
loope
or
outsl
jns
push
fildl
jae
push
jno
aam
int
movsl
mov
outsl
shrb
mov
xorb
cmpsb
pop
add
adc
mov
sub
add
sub
les
gs
mov
inc
inc
pop
inc
dec
pop
orl
cs
xor
adc
xor
push
and
fnstenv
cmp
xor
jnp
outsl
adc
push
dec
xchg
and
mov
inc
das
add
mov
pop
les
fldenv
xchg
or
or
mov
sub
mov
outsb
pop
bound
jae
aaa
push
sub
insl
outsl
jp
inc
fldenv
add
add
nop
out
decb
in
lods
sub
mov
xor
add
cmp
xor
test
arpl
fs
inc
loop
and
sub
clc
mov
fs
add
adc
or
out
dec
and
pop
add
adc
data16
cmp
sbb
pop
adc
push
mov
sbb
sub
rcrb
cs
jo
or
rorl
mov
mov
bound
pop
push
add
xor
adc
xchg
cs
adc
dec
or
adc
es
fstl
dec
mov
test
jmp
push
dec
inc
in
inc
xor
dec
fcmovnu
adc
sub
inc
fstpt
xor
add
inc
inc
loop
xor
add
adc
pusha
rolb
push
outsl
pusha
insb
mov
push
pop
xor
orl
cmc
pop
movsl
inc
mov
sbb
jg
jbe
adc
or
stos
add
push
xor
mov
xchg
into
adc
dec
test
push
into
jge
adc
or
cmp
mov
cmc
jg
add
inc
dec
aaa
cmp
mov
outsl
mov
stos
ss
out
inc
cmovb
jo
aas
xor
in
fcoml
andl
lds
xor
andl
cmp
add
dec
outsl
add
test
clc
fs
push
scas
sub
or
fwait
jmp
xor
aaa
insb
sbb
jae
jg
dec
dec
pop
sub
xor
sbb
lret
jbe
pop
in
jae
and
adc
inc
pop
popf
adc
or
mov
loop
sbb
dec
pop
sub
or
mov
sbb
push
ffreep
xor
sub
mov
sbb
and
xor
xor
and
and
call
bound
add
xchg
push
inc
dec
in
mov
push
dec
dec
fistpl
dec
dec
push
push
inc
add
dec
inc
dec
pop
sub
push
loope
inc
dec
cmp
pop
sbbl
outsb
pop
jne
xor
push
lcall
add
ret
js
jbe
ret
jb
pop
imul
pop
rolb
xor
dec
adc
sub
imul
rorb
dec
sub
or
pop
sub
inc
jo
push
xchg
push
jno
and
dec
test
add
imul
add
imul
and
xor
sub
or
jno
test
pop
mov
popa
xlat
dec
cs
sahf
lods
mov
mov
adc
inc
mov
jp
je
cmc
sarb
call
inc
dec
mov
gs
mov
sbb
mov
dec
push
dec
pop
mov
xchg
mov
jo
and
mov
ds
push
sbb
loope
xor
adc
sbb
adc
loope
jmp
xor
inc
cmp
sub
fdivs
push
xor
inc
sub
cmovb
rclb
xor
inc
inc
sub
xor
outsl
imul
daa
inc
inc
jns
icebp
lods
loope
ficoml
sarl
aaa
push
pop
push
addl
fcompl
aaa
pop
pushf
fisubrl
aaa
lahf
fildll
pop
or
shlb
int3
bound
mov
in
or
push
loope
push
xchg
lcall
and
loop
mov
out
xchg
lcall
addl
mov
dec
pop
lcall
or
out
cmp
xor
sub
add
loope
add
shll
pusha
cwtl
insl
fsubrs
mov
fs
cmp
lcall
popf
jno
mov
cmp
adc
cwtl
cmp
fadds
pushf
or
pop
shlb
in
pop
insl
sbb
jne
push
pop
sub
les
push
add
or
mov
dec
xchg
cmp
jmp
mov
adc
scas
jl
pop
adc
movsl
in
movsl
insb
push
aad
xor
sahf
adc
jb,pn
enter
xorb
xchg
or
inc
sub
scas
sbb
testl
or
cmpsl
fs
rcrl
dec
ret
sti
jnp
ret
push
push
mov
dec
xor
add
jge
add
adcb
adc
push
jne
stos
notb
adc
add
dec
jbe
pop
cs
dec
xor
push
das
push
pop
pop
outsb
int
scas
push
imul
pop
ss
mov
inc
mov
mov
inc
fs
addr16
mov
cs
insb
jecxz
popf
outsb
pushf
outsl
enter
fwait
lods
jne
mov
jbe
insl
js
xor
pop
test
js
sub
push
std
mov
sbb
outsl
add
jb
cmpsl
dec
fnstcw
xchg
dec
rol
imull
mov
in
xchg
mov
mov
jb
add
mov
sarl
jb
sub
xor
sahf
movb
fldt
lret
fcmove
in
and
imul
push
fldcw
lods
rolb
cmpsb
adc
sbb
push
pop
add
and
ret
dec
rcll
in
add
icebp
push
sub
fisttpll
sub
mov
cmp
ret
stos
stc
push
push
arpl
fwait
dec
inc
popa
lds
imul
pop
jle
inc
pop
inc
aaa
push
inc
aam
xchg
ficoms
fs
mov
bound
add
push
jne
sbb
push
mov
pop
addr16
in
pop
add
addb
or
pusha
mov
xor
addl
xchg
adc
rcll
add
and
dec
roll
adc
add
lret
push
sbb
imulb
and
adc
sbb
or
cmp
sub
sbb
or
cmp
sub
ds
ljmp
es
push
push
push
cmp
or
and
adc
add
adc
add
add
mov
or
movups
adc
or
add
mov
or
adc
sbb
clts
sbb
or
sub
push
and
ss
das
sub
adc
pushl
es
and
pop
sub
cltd
lods
jmp
add
add
add
fisttps
add
adc
add
sbb
add
add
mull
pop
inc
sub
add
mov
xor
ja
mov
mov
inc
add
cmp
xchg
popf
int
push
add
xchg
mov
outsl
pop
pop
mov
or
lahf
or
pop
and
or
or
popf
and
ret
mov
add
and
test
mov
dec
testl
ficomps
sub
fwait
int
inc
outsl
xor
popf
mov
dec
mov
mov
jae
repnz
xchg
outsl
rcll
into
icebp
clc
roll
xchg
pop
outsl
jbe
imul
add
add
pop
mov
jl
add
xor
cmp
mov
insb
ss
dec
sbb
repnz
jnp
push
adc
sub
data16
sbb
addr16
mov
pop
divb
push
sbb
in
mov
cmp
xchg
xchg
leavew
ficomps
fs
stos
xchg
jmp
das
ret
sub
add
insb
ret
or
add
add
insb
or
in
pop
mov
dec
inc
or
jnp
inc
or
or
sub
lea
aaa
inc
scas
mov
ret
xchg
xchg
pop
or
xlat
ret
sbb
push
int
cmp
inc
adc
inc
or
int3
popf
and
and
jnp
daa
inc
inc
add
mov
pop
out
or
loope
into
or
pop
or
ja
leave
ficomps
outsl
adc
sub
dec
notb
sub
mov
das
movb
inc
call
add
dec
adc
xchg
arpl
or
sbb
adc
mov
je
add
or
sub
adc
pusha
outsl
add
aad
adc
in
mov
dec
pop
dec
int
int
sbb
or
data16
sub
ja
outsl
mov
or
add
mulb
movq
sbb
or
and
call
push
sbb
sbb
cltd
fwait
lock
pop
repnz
fadds
das
and
in
sub
mov
add
mov
pop
mov
gs
and
add
testb
dec
mulb
jae
pop
stos
mov
ss
outsl
pop
xchg
negl
sbb
and
add
sbbb
fiaddl
fsubrp
inc
mov
or
pop
mov
sbb
cltd
iret
sbb
inc
sub
sub
outsl
sub
add
insb
ss
mov
mov
fnstcw
data16
fnstenv
mov
bound
ljmp
add
dec
inc
push
adc
inc
inc
add
fidivs
or
or
inc
inc
in
jg
add
or
or
jns
insb
push
loope
push
repz
outsb
sub
mov
sub
insb
or
roll
mov
cmp
jns
std
pop
mov
or
gs
je
scas
push
mov
cmp
sbb
js
xchg
jbe
jb
outsb
push
jae
or
adc
fistpll
mov
lcall
gs
mov
insl
mov
lods
xchg
insl
adc
loopne
jb
pop
test
lcall
das
andps
jo
pop
inc
outsb
dec
aam
adc
insl
shlb
cmp
icebp
fcomps
imul
push
outsl
dec
jne
je
inc
xchg
push
inc
imul
jae
cld
imul
mov
push
test
pop
test
dec
outsl
fs
xorb
pusha
push
outsb
outsl
pop
push
pop
ficoms
push
insb
pusha
xor
mov
inc
cltd
addr16
mov
das
adcb
mov
cmp
push
inc
lea
pop
or
inc
test
dec
push
xor
roll
cwtl
xor
push
sti
cltd
sub
out
xchg
fiaddl
inc
dec
inc
lcall
xor
push
outsb
subb
adc
loopne
mov
mov
pavgw
mov
js
je
pop
dec
andb
dec
aaa
dec
inc
leave
push
adc
addr16
out
push
push
jne
jnp
mov
lds
int3
push
out
mov
sub
adc
mov
ret
sbb
or
adc
cmp
pop
add
rcr
mov
mov
push
fwait
hlt
pop
fimull
dec
mov
or
lods
push
sub
sub
cs
jne
or
imul
add
ret
ds
ja
sub
push
cmp
dec
inc
or
or
adc
xchg
clc
pop
push
inc
insl
imul
sub
push
mov
sahf
jecxz
data16
inc
xor
jmp
out
mov
mov
sub
imul
popf
fildl
shrl
lret
adc
pop
test
mov
fs
addr16
sbbb
mov
jae
adc
mov
or
adc
dec
dec
add
or
je
outsl
jo
push
push
inc
fdivrl
jl
push
inc
dec
add
add
stc
xlat
dec
mov
mov
add
or
or
sbb
lock
adc
dec
aam
pushf
mov
jbe
pop
icebp
dec
or
pop
push
or
add
daa
mov
inc
push
push
push
add
cs
mov
fldl
cmp
nop
jmp
add
add
in
pusha
jb,pn
mov
jnp
and
imul
es
inc
cmp
inc
clc
subb
rclb
pop
add
add
add
add
add
inc
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
