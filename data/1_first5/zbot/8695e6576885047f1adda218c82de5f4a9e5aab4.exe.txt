push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
mov
pusha
movl
movl
call
test
je
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
popa
mov
mov
mov
mov
push
mov
mov
mov
mov
sub
mov
movl
add
ret
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
push
movl
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
shr
mov
mov
pop
ret
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
mov
lea
mov
mov
mov
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
push
mov
push
call
add
sar
cmp
jne
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
push
lea
push
call
movzwl
cmp
je
xor
jmp
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
mov
mov
mov
push
mov
push
call
push
call
mov
push
push
call
push
call
mov
mov
mov
mov
lea
push
push
push
mov
push
push
call
test
jne
mov
jmp
jmp
call
xor
jmp
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
je
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
lea
push
call
mov
push
mov
push
mov
push
mov
push
push
call
mov
pop
ret
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
mov
mov
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
xor
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
mov
add
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
push
mov
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
mov
add
mov
movl
mov
add
mov
movl
movl
mov
mov
add
mov
mov
movl
mov
mov
mov
mov
movl
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
lea
push
call
movl
jmp
mov
add
mov
mov
cmp
jge
cmpl
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
mov
add
mov
add
mov
mov
cmpl
jne
mov
mov
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
jmp
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
pop
ret
fs
inc
add
inc
add
add
inc
add
add
inc
add
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
lahf
inc
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
iret
jg
add
jg
add
pushf
xor
xchg
xor
dec
lods
xor
dec
movsb
xor
pop
or
add
xchg
cmp
sub
cmp
sarl
pop
ds
mov
or
iret
out
or
add
mov
xor
mov
xor
iret
xor
repz
add
mov
xor
mov
xor
mov
xor
mov
xor
xchg
pop
mov
xor
shll
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
sbb
xor
mov
xchg
xor
add
add
add
fwait
mov
xor
mov
mov
lds
inc
add
fs
ss
mov
mov
shlb
leave
mov
aaa
divl
outsl
aaa
mov
jge
cmpsb
mov
aaa
dec
mov
aaa
insl
mov
aaa
adc
jmp
add
jg
add
jg
add
jg
add
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
add
jg
add
jg
add
jg
add
ja
add
push
dec
add
adc
mov
jle
pushf
or
add
push
outsb
jb
or
or
fwait
adc
xchg
push
outsb
jb
or
or
adc
js
xor
jns
xor
insl
outsb
sub
imul
repnz
in
add
bnd
in
loopne
inc
iret
jg
add
in
push
add
imul
push
imul
icebp
jne
iret
jg
add
jecxz
insb
stos
insl
outsb
mov
imul
orl
orl
orl
orl
in
push
pop
out
outsl
inc
xor
jle
cmp
or
or
insl
fs
outsb
jb
bnd
add
daa
rorl
in
outsb
sub
aas
xor
jg
add
bnd
std
repz
or
repnz
jae
repz
loop
jp
mov
jmp
add
clc
or
sub
pusha
inc
stos
jmp
arpl
jg
add
loopne
inc
imul
arpl
jg
add
aad
add
pusha
into
push
data16
add
out
je
fbld
cmp
hlt
or
pop
jecxz
jo
in
pusha
outsl
sub
or
and
jle
bnd
xor
jg
add
jecxz
push
fucomp
outsl
gs
inc
gs
out
or
iret
jg
add
and
iret
imul
add
jge
add
scas
str
str
cmpsb
or
add
iret
str
str
str
str
str
str
str
str
out
add
fs
mov
mov
add
sub
push
aaa
cmpb
jns
addr16
dec
outsb
clc
pop
das
ljmp
outsb
scas
and
scas
inc
fs
jg
add
jg
add
add
jg
inc
iret
jg
add
jg
fadds
jg
add
jg
add
jle
add
mov
sbb
jg
push
iret
jg
add
jg
pop
into
jg
adc
jg
xor
jg
add
jg
add
iret
jg
add
jg
add
jg
add
jg
xchg
into
jg
add
into
jg
add
jg
add
add
jg
adc
jg
add
jg
adc
jg
jmp
int3
jg
jmp
int3
jg
sbb
orb
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
add
int3
jg
jmp
int3
jg
jmp
int3
jg
mov
orb
jg
jmp
int3
jg
add
or
jbe
or
jbe
or
data16
add
imul
or
add
xchg
or
add
jle
add
jle
add
jle
add
orl
icebp
push
add
add
jl
add
lods
or
add
fwait
or
add
jge
add
orl
fldcw
xlat
orl
or
cmpsb
mov
or
jbe
or
add
str
str
str
str
str
str
cmp
pandn
psubb
add
cld
pop
push
cld
push
call
push
and
in
xchg
mov
divl
and
pcmpeqb
fstpl
inc
jne
jne
sbb
xchg
and
add
fsubp
orl
sbb
out
jle
mov
sti
jne
jg
inc
xchg
test
shr
mov
in
mul
xor
add
mov
pop
repnz
idiv
xchg
cmp
fstpt
mov
cld
and
lahf
xlat
lea
popf
jle
testl
jg
mov
iret
jg
push
xlat
add
mov
js
clc
call
xchg
cld
push
cmp
addl
iret
ja
add
ja
inc
cmpsl
orb
add
jg
and
orb
or
push
xchg
subl
ja
mov
jbe
frstor
add
dec
ja
es
or
push
xchg
jmpw
repz
cmp
add
in
add
jg
push
bound
sete
mov
int3
mov
mov
int3
jg
jmp
cltd
or
push
je
adc
sbb
add
add
add
add
ja
call
loope
jmp
mov
jbe
ret
xchg
pop
push
jmp
pop
ljmp
imul
rolb
test
outsb
aaa
inc
xchg
or
or
andl
add
loopne
ljmp
adc
hlt
jb
aas
repz
clc
jo
mul
or
es
vmovsldup
jns
dec
orl
repnz
add
loope
or
inc
stos
xchg
stc
jne
mov
jne
in
pop
adc
jbe
mov
pop
leave
lea
cmp
pcmpeqw
or
add
add
xor
ficompl
divps
add
test
jmp
or
push
push
pop
stc
push
ret
adc
punpckhdq
rorb
push
rorb
push
lock
lock
aaa
or
push
pushf
cld
inc
bound
ret
push
add
and
pop
call
push
repz
mov
je
iret
mov
out
ja
push
add
test
mov
add
add
add
lea
push
mov
dec
repz
jo
cmp
push
add
repz
jg
stos
into
jg
add
inc
std
add
add
pop
push
jg
jne
inc
ljmp
xchg
xchg
bnd
mov
push
arpl
fisttpl
repz
in
sahf
aaa
mov
push
add
mov
jl
sbb
fs
movsl
movsb
rclb
mov
out
or
in
dec
mov
or
int3
jg
jmp
xlat
xchg
cmpsb
pop
jae
bound
in
lock
mov
repz
xor
pop
icebp
imul
jmp
test
adc
mov
jnp
ds
lret
jb
icebp
adc
repz
decb
in
add
int3
xchg
cli
hlt
pop
adc
mov
into
adc
ljmp
pop
jo
mov
xchg
sub
add
hlt
loopne
bound
jne
aam
lea
bound
jbe
ret
sbb
mov
jb
cmp
or
or
cmp
xor
xor
repz
aam
lea
pop
incl
add
outsl
repz
mov
imul
add
popa
mov
push
sub
sub
mov
in
cld
fsubrs
dec
lcall
and
mov
std
mov
dec
pcmpeqb
push
mov
mov
xor
or
xchg
jno
push
mov
add
jp
xchg
repz
loop
xlat
shlb
cld
or
add
push
les
iret
data16
xor
push
add
or
mov
cmp
or
orl
push
lea
ljmp
xchg
pusha
in
aam
xor
dec
repz
pop
js
les
inc
cmpsl
add
add
lock
outsl
fmull
ljmp
add
add
lret
add
dec
cmp
out
mov
sbb
out
iret
in
pop
iret
jg
ret
pusha
ljmp
inc
mov
and
addr16
cmp
dec
aaa
jg
add
add
sti
push
lea
pop
iret
popf
or
or
dec
cli
jae
icebp
outsl
pop
out
xchg
cmp
cld
jo
int3
ljmp
jmp
mov
outsl
repz
add
outsl
repz
mov
js
xchg
sub
scas
jg
jg
stos
add
aam
test
hlt
outsb
pop
jl
mov
repz
push
or
int3
outsb
jns
je
icebp
ds
sti
pop
in
xchg
jmpw
repz
sub
and
cmc
add
cmpsl
jnp
mov
push
sbbl
add
clc
mov
add
orb
outsl
or
out
xchg
out
lea
pop
jns
adc
hlt
decl
insb
repnz
lcall
add
call
dec
or
pop
jns
ds
call
sub
or
xchg
int3
ja
inc
adc
jne
dec
adc
add
ret
pop
mov
add
data16
addl
jns
add
icebp
testb
pop
push
std
iret
xchg
loope
push
lcall
lcall
incl
pop
mov
pop
jnp
dec
lret
or
arpl
jne
cmp
lock
sub
repz
loop
cmpl
pcmpeqb
or
rolb
iret
add
jne
in
jp
ja
loopne
andb
or
sub
add
mul
mov
loopne
incl
addr16
xor
out
mov
pushl
jg
push
xor
pop
int
lahf
call
leave
or
adc
out
xchg
xchg
in
jp
or
dec
push
inc
loope
cmp
xchg
insb
ret
push
adc
inc
fcomi
pop
call
subb
add
mov
lahf
jmp
insb
sbb
cwtl
repnz
fcmovne
insb
jb
mov
in
fstpt
ret
lea
push
push
pop
data16
out
iret
jg
add
xor
or
and
loop
int3
add
mov
add
cmc
push
xor
dec
adc
lock
pop
or
or
fcomip
icebp
hlt
cltd
lcall
jo
jae
pop
add
notl
mov
shll
ret
xchg
jnp
mov
shl
sbb
arpl
stos
mov
inc
jns
int3
jg
fs
pop
outsb
pushl
sub
call
in
imul
fistpll
or
add
xor
cld
loopne
ss
je
push
jns
add
push
int
call
stc
es
shrb
clc
incl
test
loopne
jns
push
lret
idiv
or
or
mov
int3
leave
je
or
movsb
int3
lock
imul
outsl
pop
repz
repz
add
aam
jne
inc
idiv
stc
pop
jge
cmpl
es
inc
add
or
iret
mov
int
sub
scas
lret
or
dec
movsb
loopne
mov
sbb
pop
jne
lcall
mov
jg
jmp
pop
lock
rcll
clc
jg
and
iret
pop
in
lret
dec
fsubrp
iret
push
in
ds
mov
mov
xlat
push
inc
mov
cmp
pop
incl
add
outsl
xlat
lret
jne
iret
jg
add
std
fildl
pop
call
fisubrl
js
and
cmpb
iret
jg
jp
outsl
sub
pop
ja
into
jg
mov
jg
xchg
and
push
ret
or
xorb
int3
jle
adcb
call
push
out
in
iret
negb
fdivl
add
repnz
cmp
pop
int3
jle
orb
sbb
cmpsl
mov
add
push
or
jo
data16
pushf
inc
test
push
icebp
push
jo
aam
fidivs
mov
sub
adc
repnz
cs
pusha
add
sub
xor
repnz
sarb
icebp
icebp
in
clc
addr16
add
add
add
icebp
icebp
add
cli
gs
cmp
mov
orl
pop
dec
shll
icebp
mov
add
xchg
pop
or
aad
lds
cmp
icebp
iret
decl
jmp
jae
out
jbe
sbbl
mov
mov
xchg
bound
push
mov
push
sub
pop
psllq
ret
pop
mov
add
testl
mov
repz
jge
pop
push
jge
add
insl
cmpsl
sbb
cmpsb
jmp
jmp
cmpsb
mov
repz
cmp
mov
push
push
orb
ds
incl
jno
iret
xchg
xor
jge
or
iret
pop
ja
loop
loope
or
sahf
jne
add
fistl
mov
je
or
inc
sbb
add
pop
xor
enter
inc
pop
and
inc
and
or
mov
adc
cltd
arpl
movsb
add
andnps
out
inc
push
loopne
lock
inc
pop
ja
shl
dec
add
in
les
mov
mov
str
jg
add
mov
arpl
lods
or
lods
jecxz
jge
addb
call
add
lods
or
seta
push
cli
mov
push
mov
dec
cmp
shrb
inc
mov
sub
daa
bound
add
add
jle
inc
movsb
ss
idiv
lret
outsb
xlat
dec
cmp
in
fs
add
daa
loopne
add
push
or
ljmp
push
or
or
ret
push
dec
mov
test
fs
stos
test
int3
adc
insb
ljmp
inc
mov
repz
icebp
push
insb
fs
cmp
jns
and
in
int3
iret
repz
repnz
sub
sbb
push
add
sub
jns
in
jmp
repnz
in
into
in
out
arpl
out
xchg
push
add
lret
xlat
cmp
mov
push
fistl
add
jns
jns
hlt
jmp
jae
stos
insb
pop
repz
and
lcall
jns
pop
and
stc
icebp
into
pop
das
cmp
filds
xor
shlb
add
add
jg
add
pop
jge
jl
pop
mov
push
add
xor
out
or
jle
add
lock
push
aad
jmp
repz
push
scas
jmp
iret
ret
jge
adc
push
jmp
hlt
pop
iret
or
cmp
jne
inc
sub
pop
add
and
pop
inc
dec
jae
add
add
push
mov
push
pop
cmp
inc
incl
dec
std
pusha
flds
push
clc
ds
mov
adc
shr
mov
cwtl
push
or
cltd
and
and
addb
iret
je
jno
clc
push
pop
in
jne
adc
iret
pop
add
cwtl
pop
sbb
jg
cld
into
out
sti
mov
jmp
loopne
nop
lret
add
pusha
cmp
lahf
mov
lds
decl
or
jg
addl
adcb
mov
std
insl
iret
pusha
lock
aad
fidivl
push
push
pop
loope
popa
sub
fistpll
les
in
ja
add
dec
dec
push
adc
hlt
repnz
cli
movsb
mov
inc
es
inc
push
or
pop
mov
jo
inc
mov
repnz
adc
cmpl
loope
js
sarl
jb
cli
dec
pusha
adc
in
arpl
lds
jg
or
jg
out
xchg
mov
or
out
jae
hlt
leave
cmp
sub
add
inc
pop
or
push
inc
repz
lret
jg
adc
add
repz
pusha
jns
fstl
push
sarl
xchg
ror
in
add
add
push
leave
mov
or
insl
outsl
pop
xorl
jne
cmp
push
lret
dec
add
xchg
inc
mov
jns,pt
mov
ljmp
outsl
in
pop
orl
ret
pop
cmp
std
sbb
jne
xchg
in
add
dec
orl
pop
call
mov
add
outsb
les
ds
sahf
sub
iret
pop
out
inc
add
pop
or
sub
pop
push
iret
andb
repz
ltr
out
fdivrs
or
inc
popa
gs
push
in
dec
push
imul
sti
mov
add
mov
in
push
push
test
dec
sarb
fstl
inc
rcrl
imul
xor
xor
sbb
incl
iret
je
iret
dec
cld
and
mov
shr
adc
lcall
lret
in
push
imul
addl
iret
jg
add
in
add
iret
jmp
in
dec
and
mov
arpl
add
les
out
xor
pop
in
iret
jg
lret
lea
inc
mov
add
xchg
lret
in
ret
cwtl
sub
mov
data16
add
mov
or
mov
jmp
add
push
test
push
insb
and
int3
pop
jns
hlt
repz
jne
scas
pop
rcll
repz
lock
pop
jns
xchg
rolb
adc
jmp
test
lock
cmpsb
loopne
out
pop
ret
mov
pop
jb
mov
mov
pop
jmpw
ljmpw
mov
or
add
dec
pop
jns
and
call
add
push
push
nop
in
xchg
orl
test
pop
andb
andb
je
daa
ret
orl
scas
and
dec
andb
jg
call
das
ret
data16
push
jg
mov
movsl
addr16
add
repz
repz
call
add
add
add
add
ud0
repz
jl
or
int3
pop
das
inc
add
adc
loopne
mov
insl
xlat
je
leave
pop
or
ja
add
cltd
pop
add
sbb
add
test
verr
sub
movsl
out
out
lock
je
imul
call
mov
dec
push
imul
add
add
add
add
push
dec
add
pushf
jecxz
loop
inc
inc
iret
lock
add
iret
push
fsubr
push
fcom
decl
in
push
jg
xor
and
inc
or
xlat
lahf
out
dec
mov
add
scas
fs
les
sarb
and
adc
jmp
iret
jg
jg
imul
add
add
add
add
mov
add
popl
gs
add
in
call
dec
pop
lret
mov
mov
shll
add
aas
sarb
jle
add
and
aas
dec
push
orb
vphaddubd
jg
jmp
js
repz
lods
in
sbb
loop
mov
jo
pop
jecxz
add
pop
or
cltd
movsb
or
pop
mov
adc
sub
push
pop
test
out
pusha
and
int3
cld
repz
int3
jg
ficomps
jecxz
mov
push
stc
mov
mov
repz
cli
inc
sub
pop
mov
add
jg
imul
pop
rcrb
mov
add
add
add
dec
pusha
repz
aaa
push
xchg
mov
xchg
xor
push
mov
add
mov
incl
mov
call
push
xor
push
loope
fucomip
shll
fucomi
xor
call
int
addl
mov
dec
push
xor
lock
subl
jecxz
popa
imul
add
pop
repz
arpl
jmp
shl
iret
in
fcos
dec
in
jmp
pusha
fidivl
add
jecxz
push
fsubrp
inc
mov
outsl
inc
scas
fisubrl
lds
lods
mov
decl
shr
adc
ljmp
push
fidivl
testl
call
add
xorb
inc
xor
mov
test
jmp
jmp
loop
push
test
orb
mov
push
dec
aad
pop
lcall
jg
jg
data16
aad
push
nop
call
cmc
in
dec
aas
fisttpll
or
in
push
pop
or
push
cmp
or
in
add
lock
adc
ret
aad
lods
lods
inc
iret
push
xor
lock
bnd
pop
in
les
jns
push
add
in
push
jle
inc
xchg
xor
lahf
test
shl
push
fnsave
jnp
cld
mov
imul
xchg
fwait
push
push
daa
xchg
inc
pop
jb
ljmp
push
xor
sbb
enter
add
repz
add
in
imul
push
pop
bound
add
xor
jg
jmp
xorb
rclb
jbe
in
notb
xchg
push
out
mov
or
fimuls
inc
sub
push
aaa
add
xchg
jno
hlt
add
aad
or
mov
sbb
or
add
outsb
xor
dec
std
repnz
dec
clc
mov
cltd
xchg
popf
push
pop
mov
xor
negb
sub
add
orb
cmp
pop
push
xor
fdivp
hlt
hlt
incl
jmp
jnp
or
jp
xor
xor
inc
push
testl
iret
hlt
ss
add
iret
mov
push
imul
pcmpgtw
push
mov
ljmp
and
add
pop
iret
jno
test
imul
add
pop
jnp
or
mov
inc
or
push
lds
mov
mov
cltd
push
cld
clc
jmp
out
jae
call
add
fidivs
jo
or
push
xchg
sarb
lea
xor
test
les
out
std
ret
sbb
sub
addb
je
int3
jmp
shll
mov
push
test
scas
lea
jg
cld
js
ljmp
jg
or
faddl
add
pop
in
iret
jg
sub
dec
daa
cld
add
test
jg
push
xchg
in
inc
push
add
ja
mov
mov
add
repz
and
inc
sub
out
xor
in
jle
repz
test
cmp
lret
addr16
push
fs
mov
dec
jmp
jg
pop
and
fs
xchg
mov
nop
push
repz
adc
lret
out
mov
jg
sbb
push
repz
test
and
iret
pushf
mov
movsb
add
int3
popf
sar
xor
cltd
xchg
or
std
or
pop
data16
mov
mov
jmp
push
or
mov
dec
cmpb
jl
mov
add
movb
data16
add
pop
pop
call
in
inc
xchg
fnsave
out
lcall
ds
stc
or
mov
movsb
outsl
jne
stos
stos
adc
popf
cmp
pop
xor
into
or
mov
ljmp
nop
adc
repz
sbb
aas
rorl
nop
dec
movsb
add
add
cmp
orl
js
aad
add
int3
call
inc
or
jb
jg
dec
dec
nop
int3
or
out
enter
jb
jg
or
add
leave
ret
xchg
rcll
enter
jg
add
and
or
in
jl
cmp
inc
or
popl
push
and
mov
add
mov
out
adc
call
ja
out
push
inc
in
inc
push
sub
add
pop
pop
add
pop
into
lret
je
inc
jne
or
cmp
add
xor
dec
mov
shl
mov
push
jg
iret
jg
ret
loop
mov
dec
clc
pushl
aam
int3
ret
test
add
jg
clc
push
aam
fsubrl
sub
xchg
jg
jmp
or
mov
int3
push
inc
aaa
lret
jg
sub
add
in
jg
out
pop
or
int3
dec
push
repnz
orb
push
repnz
repz
rcll
inc
push
mov
lcall
add
add
add
fwait
dec
pop
adcl
roll
jae
cli
jle
pop
add
ja
fs
dec
repz
push
insb
push
sbb
insb
add
dec
jbe
data16
cmpsl
push
push
cmpsb
punpckhbw
orb
cmc
test
orb
cmp
cmp
leave
mov
incl
in
lret
cmp
mov
cmp
sahf
xchg
add
add
cmp
call
dec
out
cmp
in
xor
repz
sbbb
add
in
dec
cmp
push
dec
scas
add
inc
dec
imul
push
inc
inc
sub
mov
pop
ror
mov
iret
push
hlt
rorb
push
ja
or
iret
mov
repnz
iret
push
add
add
into
push
cmovs
dec
cld
pop
adcl
mov
xor
std
mov
pop
push
stos
pop
cwtl
or
subb
sbbb
cli
push
aas
call
je
jne
stos
mov
push
add
push
aaa
jp
incl
jne
imul
lret
fnstenv
and
pop
fildl
inc
lret
inc
lds
mov
dec
cld
lahf
iret
lahf
dec
mov
add
add
dec
popf
dec
nop
iret
out
and
iret
jbe
dec
icebp
scas
repnz
push
inc
aam
dec
outsb
stos
pop
dec
push
int3
cld
scas
fnsave
and
jae
in
adc
xchg
in
in
mov
fsubrl
xchg
leave
push
ds
inc
pop
adc
add
ja
repz
push
or
mov
ret
rcl
stc
mov
repz
imul
mov
mov
xor
mov
xchg
inc
xlat
jmp
jle
mov
mov
jnp
out
int3
xor
mov
or
mov
lock
or
lret
rolb
lds
add
add
add
orb
mov
cld
xor
mov
aam
mov
jmp
mov
orb
or
sub
outsl
inc
add
mov
jl
add
rorb
push
cmp
sbb
repz
in
cmp
pop
mov
fmull
push
xchg
repz
mov
mov
add
add
xor
jns
xor
repz
or
je
or
popf
dec
lret
orl
cmpsb
or
jbe
sbb
stos
pop
pop
push
push
lret
stc
cld
mov
rsqrtps
inc
dec
push
ret
add
scas
cmc
fcmove
push
jbe
je
into
or
adc
or
mul
enter
out
inc
add
lcall
testb
cmpsb
add
push
mov
lret
push
cmp
mov
fiaddl
iret
ret
repnz
pop
push
pop
push
add
push
push
add
pop
xlat
ss
pop
ud2
lea
adc
popf
int
inc
lcall
pop
iret
inc
clc
pushf
inc
lock
int
pop
add
iret
fxam
fcmovnbe
sub
add
aas
sar
jge
popf
or
stos
push
inc
scas
mov
inc
push
iret
call
inc
adc
push
inc
loope
jp
lock
jo
mov
cmp
sti
test
in
sbb
push
mov
ret
add
push
roll
clc
jns
or
xchg
mov
scas
xchg
pop
adc
add
mov
int3
jecxz
mov
repz
inc
pop
xchg
mov
inc
push
mov
cmpsb
push
pop
mov
int3
int3
add
scas
inc
inc
add
xchg
sub
cmpsb
push
xor
jae
pushf
aam
icebp
add
fiadds
jnp
add
std
mov
mov
dec
inc
dec
pop
xchg
vmovaps
push
add
mov
cmpb
jnp
imulb
or
push
pop
cwtl
or
or
jge
jb
jge
ja
insl
cmp
add
jb
jge
ja
insl
dec
add
sub
cmp
scas
push
cmp
mov
sub
inc
add
pop
pop
fwait
or
repnz
iret
stos
sbb
add
inc
jne
stc
or
mov
push
pop
pop
or
or
test
sub
jnp
jb
cmp
str
cmc
pushf
dec
push
push
and
and
dec
std
jo
jmp
imul
pusha
sbb
lock
add
xchg
lret
push
push
ljmp
cmpsl
outsl
loop
iret
into
cmp
or
mov
iret
and
addl
lret
inc
iret
push
cmp
dec
inc
xchg
dec
mov
jne
or
test
cld
sbb
and
dec
push
pop
add
rcl
add
pop
movb
in
iret
jg
dec
xchg
mov
add
jg
add
loop
cmp
cmp
push
sti
fmul
jg
mov
rolb
aaa
movsl
inc
sbb
add
add
add
push
cwtl
ret
daa
mov
sub
jge
lcall
ret
lods
inc
iret
jbe
aaa
mov
lahf
mov
jo
dec
ljmp
lods
inc
iret
jbe
aaa
mov
gs
mov
cmp
jg
ret
inc
andl
jmp
push
push
repz
sub
push
ds
mov
add
cmp
mov
inc
pop
sbb
fmuls
xor
int3
ds
mov
sub
jg
loop
test
mov
std
ret
pop
xchg
rorb
js
sbb
mov
jmp
or
repz
mov
jmp
dec
xor
es
xchg
or
adc
jg
lret
jg
add
add
add
add
add
stc
ret
mov
addl
mov
and
jge
add
mov
jbe
mov
xor
push
lods
aad
ss
rsm
cmp
cmp
add
jge
lea
lods
repz
notrack
jge
xchg
stos
ds
std
cmp
test
add
or
or
out
mov
pushl
push
or
mov
xchg
cmp
sbb
push
mov
inc
inc
iret
dec
iret
je
add
dec
push
push
push
shl
dec
dec
push
mov
dec
push
str
mov
mov
cmpsl
add
bswap
xchg
fadds
add
push
push
shlb
mov
iret
and
cmp
add
jmp
mov
mov
add
leave
sub
add
sub
iret
jg
mov
ds
cltd
aas
ljmp
test
mov
jns
lret
push
in
push
inc
push
int
aad
scas
add
dec
inc
cltd
push
cld
shlb
push
mov
or
iret
jg
pop
or
popf
mov
inc
lea
xchg
xchg
mov
in
jle
mov
roll
jmp
adc
dec
adc
pop
xor
out
lret
bound
xchg
lds
jo
dec
jecxz
adc
lret
cmpsl
enter
add
mov
mov
or
pop
shl
or
xor
pop
jmp
mov
fsts
repz
into
in
int3
aam
test
lock
mov
or
push
mov
test
or
jb
addl
push
cmp
push
out
cmp
add
data16
cmc
or
icebp
jle
mov
add
cs
lea
pop
mov
jmp
push
mov
push
xchg
gs
cs
push
clc
orb
inc
or
inc
sbb
xor
push
nop
pop
mov
shll
shll
ds
adc
add
scas
cmp
add
xchg
int
xor
hlt
and
xchg
movb
iret
lods
dec
add
sub
mov
cmp
dec
pop
sbb
lahf
into
or
out
into
adc
pusha
test
cld
mov
clc
cld
jle
pushf
enter
mov
imul
xor
mov
mov
insb
call
ret
push
icebp
cli
clc
lods
out
cli
clc
inc
mov
addl
dec
enter
lret
sub
mov
stc
mov
and
and
or
jg
aas
popl
outsl
pop
mov
mov
mov
out
mov
es
push
outsb
mov
cld
xor
hlt
xchg
and
stos
repz
push
mov
push
mull
or
lea
lea
mov
add
add
add
lods
xor
loop
or
addl
js
les
outsl
lods
out
outsl
popf
mov
les
jnp
out
jmp
cmpsb
adc
pop
or
pop
outsl
test
mov
imul
aas
int3
in
xchg
xor
inc
fnstenv
mov
add
push
hlt
fidivrl
neg
je
xor
add
push
leave
leave
and
xchg
mov
and
aas
loopne
xor
jecxz
sbb
orl
iret
fst
pop
xchg
pop
xor
andl
jle
cmc
or
push
neg
je
cmc
add
adcb
pop
sub
add
xor
xor
add
mov
bswap
insl
stc
ds
cli
inc
sbb
enter
add
test
mov
xor
and
xor
lea
jg
int
sbb
inc
fidivrl
add
aad
cs
aad
adcb
pop
cmp
inc
add
xor
xor
orb
test
inc
or
call
mov
add
push
inc
mov
adc
cmp
int3
clc
out
rorb
flds
cli
lods
mov
or
out
add
and
mov
mov
mov
pop
xor
push
xlat
addr16
or
xchg
cmp
sub
cli
mov
aas
push
outsl
lock
or
xchg
lods
mov
test
pop
add
inc
lcall
stc
add
add
rep
sahf
mov
daa
std
es
cmp
int3
cmp
mov
push
adc
test
scas
bound
cltd
pop
and
aam
adc
repz
or
lods
sahf
inc
sub
vpinsrw
mov
enter
mov
inc
rolb
jbe
cld
repnz
xchg
mov
sub
lret
inc
movsl
dec
inc
jle
pushf
cmp
mov
jecxz
shlb
int3
int
test
mov
mov
cmp
lahf
inc
inc
jb
inc
fstl
inc
sbb
push
or
mov
pop
xchg
jl
xor
iret
test
xchg
cmp
inc
inc
cld
or
lcall
sub
add
or
fidivl
mulb
lods
adc
int
lds
idivl
add
mov
lds
test
bt
aas
add
mov
sbb
push
inc
iret
pop
xor
clc
ds
stos
decl
cmp
aad
lock
int3
shlb
iret
mov
xchg
pop
xchg
sbb
out
add
ret
cmp
movsb
mov
shrb
ds
in
orb
inc
cmp
inc
sbb
cld
push
divb
out
cs
lea
mov
ljmp
pop
movsl
pop
mov
cltd
in
repnz
xor
xchg
mov
and
iret
sub
rorb
mov
or
mov
arpl
push
imul
add
add
add
add
divb
sub
mov
xor
movsb
mov
push
xchg
lock
or
cmp
mov
or
cltd
mov
inc
push
negb
mov
js
rcrb
mov
mov
mov
jae
mov
push
gs
in
rorb
mov
or
or
xchg
addl
add
add
add
add
test
pop
xor
mov
cmp
lods
cld
aaa
push
adc
xchg
mov
ljmp
xor
stos
les
mov
inc
adc
aam
sti
addr16
mov
orb
pop
mov
cmp
scas
pushf
ss
rol
mov
pusha
andb
mov
sub
les
scas
pop
or
mov
add
add
add
test
je
mov
or
cld
xor
out
cmp
outsl
hlt
insb
lock
rcr
push
pop
roll
not
inc
mov
sbb
xchg
cli
jb
nop
push
mov
add
enter
adc
xrelease
div
popa
outsl
cmc
fs
jnp
out
cltd
sub
scas
faddl
out
ds
sbb
xchg
cli
add
sub
ss
leave
and
mov
repz
jge
mul
jp
hlt
pop
and
add
int3
shll
mov
aad
push
stc
aad
sbbb
push
and
cmp
add
mov
or
xchg
or
xlat
add
jecxz
xorb
test
cmp
repnz
out
les
add
enter
inc
hlt
push
cmp
lret
inc
xchg
jnp
add
out
js
cmpl
das
inc
cltd
dec
or
or
sbb
jne
inc
iret
es
add
sbb
stc
seto
lea
daa
mov
sbb
pop
lock
dec
adc
push
inc
iret
xchg
nop
inc
push
mov
add
add
add
add
daa
str
inc
mov
cmpsb
enter
lock
mov
add
pop
sti
pusha
mov
push
orb
les
mov
iret
in
divb
jg
mov
int
out
subl
iret
jg
sub
xchg
add
add
insb
pop
mov
xchg
je
push
subb
and
xlat
in
iret
fisubs
mov
sbb
cmpb
fadds
mov
iret
push
rolb
mov
push
orl
inc
ljmp
push
rclb
mov
or
fcoml
adc
repz
lds
iret
jg
bound
enter
repz
cmp
pop
and
std
dec
jmp
dec
rorl
jg
pusha
enter
adc
subl
mov
repz
imul
dec
jmp
mov
cld
dec
ja
jg
aad
aam
sub
jb
cwtl
or
pop
je
add
dec
jmp
mov
cli
cmp
and
dec
add
xor
pop
decl
mov
addl
push
repz
test
frstor
mov
pop
cld
insl
inc
sti
xchg
addl
stc
je
pushf
fdivrl
fld
hlt
mov
lock
sbb
iret
add
add
jp
loopne
cmp
xchg
lods
push
aas
inc
dec
xor
add
lods
clc
lea
xchg
jne
lods
dec
clc
iret
lahf
and
push
data16
mov
fmuls
in
fidivrs
inc
pop
jne
stos
xor
in
insl
in
vaddps
inc
iret
sbb
lret
sbb
cmp
inc
pop
mov
movb
shll
add
adc
xchg
incl
jae
inc
push
cld
inc
xor
add
fwait
fwait
mov
and
shrl
dec
clc
push
xor
rcll
je
inc
adcb
and
mov
push
inc
iret
jle
inc
pop
mov
push
scas
into
cmpb
cmpsl
jle
push
add
dec
mov
jle
mov
in
dec
daa
loop
test
mov
xor
out
stos
push
sub
pop
push
mov
xor
ja
mov
jle
clc
in
or
sbb
pop
shlb
add
push
cmp
repz
sbb
adc
pop
inc
add
scas
and
inc
in
inc
dec
cmp
jg
movsb
faddl
rol
mov
or
iret
testb
mov
repz
lods
add
mov
jnp
je
and
xor
mov
ret
dec
aad
popl
rcll
or
push
sub
xor
into
in
data16
test
jmp
add
in
jge
jg
or
mov
leave
mov
repz
xor
push
aad
adc
js
push
pusha
ret
dec
jle
xor
jge
jle
pop
std
orl
or
jmp
test
int
iretw
xchg
out
idiv
jno
bnd
cmpsl
mov
sbb
jmp
icebp
call
orl
add
aas
mov
sbb
add
jle
lea
fdivrs
iret
mov
cmpsb
decl
mov
add
jp
sti
mov
lcall
jb
add
je
sbb
enter
push
add
push
mov
push
inc
mov
dec
shrb
and
cmpsl
movsb
movsl
call
or
xchg
jg
add
movsb
or
int
push
fwait
xor
call
or
mov
jle
lods
xor
pop
movsl
jne
movsl
push
mov
xchg
in
into
cli
pop
test
or
aad
jp
popf
pop
pop
sub
mov
pusha
int3
pop
fstpt
je
daa
bswap
shrb
dec
inc
in
shrb
fcoml
add
js
or
mov
sbb
test
add
int
lcall
sub
daa
jg
add
adc
jp
nop
dec
add
cli
addr16
sub
push
inc
mov
fwait
cmp
int3
add
xor
adc
sbb
mov
pop
in
lea
pushf
cli
mov
xor
repz
mov
jbe
push
rolb
in
jg
ljmp
xchg
bound
pop
jb
add
xor
jae
ret
int3
into
repz
movsb
pop
enter
lret
lods
push
cli
pop
icebp
add
shlb
idivl
out
jae
push
push
jns
jecxz
movsl
hlt
add
jo
xor
or
ftst
int
add
rolb
push
roll
in
sub
repnz
shl
sub
repnz
mov
out
repz
fidivrs
push
cmpsl
repnz
stc
dec
mov
or
mov
js
mov
pop
repz
cmpsb
cmpb
jle
add
js
fidivrs
int3
je
fnstsw
jle
aad
add
jns
pop
hlt
iret
mov
cld
and
sbb
hlt
xor
pop
add
sbb
xor
or
into
adc
rcpps
fdivrs
ss
add
xor
loop
add
mov
addr16
mov
enter
dec
verr
push
mov
mov
inc
push
mov
mov
iret
scas
xor
clc
pop
xor
add
ret
push
andb
sbb
iret
je
mov
cmp
pop
mov
stos
mov
or
add
out
fbstp
iret
jg
ret
or
popf
pusha
and
out
sarl
jl
in
adc
movsb
mov
into
movsb
bound
pop
fcomi
and
addb
dec
sub
sub
cmp
stos
iret
jg
add
sub
xlat
pop
add
fwait
pop
popf
int
and
ret
cli
sbbl
or
lret
loopne
repz
and
cmp
or
push
lret
inc
and
add
and
inc
or
les
or
cmp
adc
add
add
add
add
xchg
or
int3
jg
or
and
and
push
xchg
inc
repz
pop
mov
or
fs
dec
jne
movsl
int3
jo
and
jmp
test
or
push
dec
repz
or
sub
repz
jbe
repz
push
dec
shlb
mov
inc
jbe
add
jg
push
add
fidivrs
push
data16
jb
je
cli
jo
mov
jmp
cmp
or
stos
lret
pop
sti
ret
idivb
lea
xor
fnstsw
jns
sete
mov
dec
mov
jle
lea
mov
mov
or
testb
imul
add
les
aam
sbb
add
add
sbb
lea
pop
aas
push
into
or
fiaddl
out
sbb
or
int3
push
cmpl
sub
mov
rolb
sbb
iret
sbb
inc
pop
mov
add
sub
call
fcomps
add
addb
mov
movl
jnp
sbb
add
test
iret
jne
mov
cmc
mov
inc
sbb
sahf
andb
mov
lea
in
push
inc
loop
pop
stos
test
mov
inc
inc
ret
cmp
loope
xor
test
and
inc
lret
je
pop
leave
cmp
add
jg
enter
add
jg
inc
repz
jb
lock
add
xchg
arpl
iret
stos
cli
sub
shrb
mov
mov
or
xchg
ja
mov
push
jle
xchg
xchg
or
pop
orl
jmp
je
ss
in
lret
dec
cmp
test
jg
jmp
add
add
add
std
inc
fs
loope
repz
push
mov
or
and
sarb
testb
jg
jmp
xor
test
pop
or
int3
push
int3
add
test
repz
enter
mov
dec
fcomp
mov
mov
clc
jns
or
xor
push
dec
xor
add
pop
jmp
enter
shlb
jns
pop
loopne
add
inc
dec
mov
mov
jnp
mov
push
imul
push
dec
enter
mov
jne
jmp
add
addb
pop
pop
enter
or
iret
jns
repz
repz
add
pop
lret
insl
add
iret
insl
inc
hlt
add
mov
lret
sub
call
aam
sbb
dec
stos
mov
mov
sub
mov
dec
sbb
iret
fstpl
mov
iret
test
dec
fcompl
call
xchg
or
sbb
mov
sbb
cs
xchg
call
jle
pop
mov
sub
add
scas
pop
pop
jnp
fcoms
mov
and
sbbb
in
mov
xchg
loope
cli
rorl
jbe
add
xchg
out
rorb
or
xchg
pushf
fidivl
push
subl
cltd
inc
sbb
cltd
stos
imul
stos
xor
mov
stos
sub
stos
pushf
or
lcall
add
add
add
add
mov
cmp
xchg
mov
ud1
push
jo
mov
fs
xor
add
fmul
pop
pushf
sbb
mov
ret
cmp
or
push
aas
je
arpl
repz
inc
ret
rcrl
lea
xchg
adc
pop
imul
xlat
push
sbb
mov
add
rcr
inc
or
inc
xchg
add
fidivs
repz
inc
inc
push
mov
mov
push
sub
mov
jle
push
clc
repnz
mov
out
out
or
andl
jno
cmpsb
mov
jne
out
loope
bnd
idivb
mov
add
imul
sbb
cmp
loopne
add
push
xchg
addb
or
mov
fisttpl
bnd
out
and
bnd
idivb
push
adc
ss
xchg
movsl
fildl
repnz
and
je
or
notl
jmp
or
dec
lock
sbb
mov
mov
rorb
cld
iret
sub
lcall
add
dec
test
jne
popa
sbb
xor
incl
jno
jne
addb
addl
fidivrl
xchg
and
push
inc
inc
mov
aas
dec
add
cld
mov
and
add
fwait
popa
xchg
jne
jg
inc
and
xchg
or
mov
xor
xchg
add
jb
add
setae
adcb
add
jg
repnz
movzwl
fmuls
mov
dec
cltd
mov
daa
sarl
daa
sarl
jg
mov
sub
xchg
mov
mov
xlat
jg
inc
inc
xchg
std
stos
adc
ficompl
pop
ret
mov
and
or
add
aaa
test
xor
int3
jg
jmp
push
sbb
xor
out
xchg
int3
cmc
int
subl
sbb
rolw
repz
sbb
push
sbb
cs
icebp
addr16
jmp
lret
aas
js
dec
push
or
imul
repz
daa
rorl
aaa
sbb
sub
add
mov
mov
in
js
repz
incl
fld
or
jecxz
in
cmp
repnz
repnz
imul
out
addl
dec
lock
lock
call
aas
add
rdmsr
sbb
mov
cltd
ret
repnz
mov
add
add
add
jbe
or
and
inc
push
into
dec
add
int3
jne
in
add
adcl
sahf
ljmp
or
ud2
andps
add
push
add
dec
lcall
mov
inc
iret
in
sbb
insl
mov
loopne
add
iret
xchg
sbb
out
mov
enter
rcrl
add
add
add
add
std
mov
test
cltd
jne
mov
decb
roll
call
ja
mov
lea
xchg
jmp
sub
incb
jg
lea
in
jnp
and
and
xchg
adc
jo
or
adc
xchg
lahf
add
cld
add
lock
jmp
xchg
pop
xchg
xchg
pop
imul
ret
lods
or
sti
es
test
mov
pop
aam
xchg
cwtl
sub
fdivr
xor
cmp
adc
iret
adc
pop
popa
adc
repnz
xchg
stos
xchg
idivb
pop
aas
push
jns
pop
mov
add
flds
repz
jo
adc
and
cmp
daa
dec
xchg
pop
adc
repz
in
es
adc
leave
imul
in
arpl
addl
or
push
fldcw
aam
adc
repz
daa
mov
arpl
mov
adc
add
xor
repnz
add
cmp
add
js
push
addb
and
js
into
repz
ror
adc
push
xchg
mov
cld
push
fcomps
fistpl
add
inc
jbe
stos
out
lret
jnp
add
cld
xor
mov
jg
push
arpl
cld
push
int3
jl
add
jnp
jge
jg
add
mov
or
mov
dec
clc
add
ss
sbb
mov
and
lahf
xchg
dec
or
sar
iret
and
pop
or
jae
arpl
sahf
jecxz
adc
sahf
jne
mov
mov
sub
mov
ds
push
out
jnp
xchg
adcl
cmp
rorb
sub
mov
loop
cld
iret
sub
add
call
addr16
aas
inc
iret
jne
hlt
xor
mov
sub
call
les
push
inc
rorb
sub
push
js
xor
aad
jecxz
iret
jg
xor
dec
es
iret
jg
add
lods
outsb
lahf
dec
cmp
test
fwait
ds
iret
jg
testb
cmp
out
pop
add
xchg
shl
jp
jge
iret
jg
mov
adc
leave
popl
in
jle
leave
in
call
sbb
iret
movsl
in
iret
movsl
in
out
jge
add
mov
sbb
mov
mov
xor
jg
jmp
aas
mov
xchg
int3
adc
addl
add
add
add
mov
or
int3
jg
pop
inc
adc
cmp
mov
lds
or
andl
mov
repz
pushf
test
adc
fmuls
pop
addl
leave
dec
pop
faddl
add
cltd
mov
cld
data16
inc
mov
add
add
mov
dec
clc
es
inc
rorb
call
arpl
imul
or
mov
cmp
mov
decb
out
sti
dec
mov
in
push
add
call
pop
cmp
mov
sub
add
push
mov
or
mov
js
dec
add
ljmp
lea
add
sahf
test
dec
js
iret
shrb
sbb
lea
cmp
jmp
add
stc
cmp
iret
mov
adcl
inc
add
xor
je
push
sub
cwtl
ret
and
iret
sbb
or
mov
enter
dec
inc
popl
iret
sbb
push
addr16
add
add
fwait
test
cmc
adcl
jmp
adc
jne
add
mov
push
lcall
sti
mov
xor
pop
iret
jg
lds
and
iret
jg
pop
add
sbb
iret
xchg
in
iret
jg
call
cmp
orb
pop
dec
mov
add
push
dec
int3
jg
mov
lret
xchg
in
add
dec
add
jg
fwait
repz
in
jg
pop
xor
or
into
add
mov
or
negb
pop
or
repz
dec
mov
push
sarb
repz
pop
ss
or
repz
repz
add
dec
je
int
add
or
repz
loope
aad
out
add
in
mov
repz
adc
repz
or
mov
rcll
inc
or
stos
scas
push
or
jmpw
add
pop
mov
incl
mov
call
xor
jecxz
aam
repnz
add
push
in
add
bnd
sti
repnz
sbb
push
rorl
sub
call
call
pop
sarb
bnd
clc
fildl
fnstsw
mov
cmp
add
pop
call
pushf
pop
addb
clc
js
ds
ret
incl
js
iret
cmc
sbb
out
mov
add
enter
lea
mov
cmpsl
xchg
xchg
pop
fmull
loop
xor
rclb
iret
sbb
mov
iret
sbb
inc
ja
str
pop
dec
hlt
pusha
and
add
sbb
add
xchg
testl
dec
hlt
lahf
mov
xchg
lods
cmp
sub
push
pop
sbb
or
mov
jmp
add
dec
mov
je
xchg
inc
in
loopne
stos
mov
xchg
call
push
lods
xor
iret
cld
pop
mov
sarb
iret
jbe
nop
pop
fwait
cwtl
or
dec
add
xchg
nop
or
rclb
inc
adc
clc
pop
xchg
pop
or
sbb
jg
dec
push
xchg
in
fwait
nop
cmp
mov
xchg
add
cmp
in
ret
xchg
in
mov
or
popf
lds
int
sbb
lret
pop
mov
jl
adc
scas
push
xchg
add
mov
aam
sahf
inc
or
xor
xchg
or
roll
repz
or
cmc
adc
or
sbb
dec
add
lock
push
xchg
add
mov
inc
test
add
pop
push
insb
sarl
sub
pop
call
inc
orb
inc
dec
std
push
orl
sarb
jmp
cwtl
add
inc
or
pop
repz
push
sbb
add
or
es
jmp
mov
js
ja,pt
cmp
shrb
mov
testl
fdivr
cmp
and
bnd
jl
fs
push
mov
cli
decl
clc
cmp
ds
repnz
out
mov
imull
inc
pop
inc
idivw
incl
in
sarl
add
jl
fs
xlat
ret
iret
jmp
testl
dec
dec
add
lea
call
add
and
cmp
adc
xchg
test
lcall
cmp
push
add
test
sbb
xchg
repz
cmp
mov
or
mov
js
pop
call
loop
xchg
cmp
jge
call
sbb
incl
pop
in
push
mov
ret
ljmp
dec
xchg
mull
sub
add
int
rolb
or
int
adc
lret
adc
cld
lock
xchg
loopne
xchg
fwait
icebp
ss
add
jno
mov
in
xchg
inc
in
add
cli
pop
adcb
pop
adc
pop
push
mov
push
jl
jnp
xchg
xor
cmpb
xlat
pop
leave
test
popf
add
add
fidivl
cs
push
add
popa
scas
movsb
add
mov
fwait
test
leave
cltd
mov
pop
sbb
and
dec
push
fs
into
shlb
or
repz
loope
dec
jmp
lock
cmpsb
push
mov
sahf
shlb
xchg
or
ss
jmp
fdivs
hlt
movsb
sbb
lds
xchg
add
add
int3
je
or
jg
shlb
ss
sbb
divb
add
inc
xor
push
les
adcb
push
xor
rorl
in
push
cld
repnz
jne
push
cli
js
push
fdivrp
xor
ljmp
cld
bnd
ds
jmp
or
add
xor
dec
add
mov
cmpsb
push
in
inc
sti
repnz
je
push
push
sti
js
push
push
fdivrp
adc
cmp
jmp
mov
bnd
push
movsb
ret
data16
in
dec
add
pop
push
mov
mov
daa
scas
mov
je
out
jmp
and
push
lahf
sub
incl
add
sub
pop
outsb
sbb
mov
mov
out
jle
or
sbb
xorb
dec
je
push
addr16
lcall
mov
mov
xor
xorb
push
imul
jg
sbb
sbb
insb
in
add
add
fnsave
repnz
in
add
lock
or
add
jge
clc
rclb
adc
add
xchg
loopne
iret
jg
or
add
or
jg
sbbb
test
mov
inc
roll
jb
mov
mull
cwtl
push
std
sbbb
pop
ret
pop
in
test
cmc
push
js
xchg
cmp
pop
icebp
add
push
or
jb
in
add
repz
sbb
sbb
cmpb
add
jp
scas
dec
add
sub
in
sbb
pop
test
sbb
or
jae
dec
scas
repz
pop
cmp
dec
add
je
mov
bound
mov
inc
sbbl
outsl
bnd
xchg
or
add
cmpsb
mov
jmp
int3
add
das
fwait
rorb
xor
dec
mov
xchg
std
std
test
sti
pop
inc
adc
daa
jge
xor
into
dec
fdivr
leave
jb
je
testb
or
jmp
add
pushl
in
cmp
repz
adc
push
cmpsl
jnp
mov
cmp
jecxz
inc
inc
notb
add
add
add
add
add
jae
mov
mov
lea
jnp
mov
cmp
arpl
out
iret
sub
pop
shlb
inc
and
jns
iret
test
jb
jo
cli
repz
inc
jmp
punpckhbw
out
call
out
or
iret
xchg
addr16
jno
push
xor
jae
mov
out
jle
push
push
add
add
add
inc
inc
leave
pushl
str
lahf
iret
clc
xor
sarb
inc
jecxz
hlt
repz
add
mov
bound
sub
out
push
test
push
xor
push
add
out
into
cwtl
outsb
fdivr
sbb
push
jg
jg
sbbl
push
movsb
add
and
dec
pop
in
inc
fistl
cmp
xchg
ja
jne
imul
icebp
imul
stc
jle
xchg
dec
or
in
dec
add
out
cmpb
lret
out
je
stos
inc
jg
mov
add
inc
dec
aaa
fwait
jle
jg
add
or
adc
mov
or
xchg
and
lret
xchg
sbb
repnz
jne
shl
dec
jmp
xchg
int
ss
cmp
mov
ficoms
aaa
repnz
mov
xor
int3
jg
fs
repnz
in
and
std
repnz
std
mov
shll
push
add
mov
push
cli
or
int3
or
stos
dec
std
repnz
int
or
add
int3
jae
pop
lea
inc
inc
mov
lret
addl
mov
orl
ss
in
fadds
pop
jmp
pop
daa
inc
inc
ss
or
cmp
inc
or
ret
repz
push
into
jge
jmp
shl
jne
shl
jne
push
in
add
sub
repz
or
sub
add
fs
mov
repnz
sub
pop
mov
out
or
scas
iret
jmp
and
mov
out
lods
jo
pop
aaa
mov
out
or
mov
and
out
jmp
outsb
push
add
out
or
adc
push
cmp
pop
call
add
aaa
pop
inc
jmp
imul
adc
pop
add
out
test
in
adc
int3
jbe
and
jbe
loopne
jp
iret
out
mov
sub
pushl
sti
mov
mov
inc
mov
jg
jp
mov
jg
cld
push
icebp
enter
fmuls
jnp
push
dec
icebp
add
fs
imul
ret
icebp
enter
cmp
sbb
xor
cld
dec
sub
cmp
jg
mov
add
je
sti
loope
or
jp
xchg
xor
sti
jg
mov
mov
fmuls
roll
jmp
imul
jmp
int3
jg
adc
push
dec
jmp
add
add
add
inc
add
ja
sti
pop
subl
cld
pop
cmc
cli
repnz
cld
stc
repnz
je
or
ss
cli
repnz
fs
test
addr16
or
push
and
or
or
or
fnstcw
jg
popf
stc
repnz
clc
js
je
icebp
out
cli
mov
inc
iret
orb
add
add
js
push
jle
inc
inc
add
out
push
push
testl
or
lods
cmp
addl
dec
xlat
out
stc
jbe
lock
inc
repz
repz
int
add
gs
stc
jbe
push
int
jne
gs
fnstenv
sbb
jbe
push
cmp
repz
cmpsb
incb
add
ja
rol
mov
jns
iret
mov
out
jle
or
cmp
pop
out
jne
enter
rcrb
incl
pop
imul
arpl
sbb
data16
jns
je
out
push
push
inc
dec
mov
ja
mov
iret
out
add
jnp
out
fadds
mov
or
inc
dec
add
mov
mov
je
bndldx
add
xchg
mov
mov
icebp
loopne
mull
ljmp
imull
mov
std
mov
aas
dec
aaa
mov
add
or
or
mov
in
shr
call
icebp
enter
cmpsl
in
ja
push
adc
fiadds
add
push
insb
mov
pop
ja
in
les
scas
pop
sarb
ja
or
dec
mull
in
add
es
divl
push
std
es
notl
xor
or
dec
xor
fidivrs
add
orb
or
cli
jmp
jg
jmp
push
div
cmpsb
inc
inc
and
add
mov
out
pop
int3
jg
test
inc
or
ja
testl
push
mov
mov
sbbl
and
sub
cs
div
xchg
enter
mov
cmc
repnz
shr
test
insl
repz
dec
repz
imul
add
add
insb
in
sub
imul
adc
icebp
mov
outsb
repz
jbe
loopne
incl
mov
call
adc
in
sub
leave
movsb
xchg
add
or
sti
call
or
pop
inc
add
rcrb
es
jns
fisubrs
fsubs
add
into
decl
dec
jp
or
movl
cmpsl
or
jp
popfw
adc
or
inc
iret
xchg
jns
into
sti
std
enter
mov
iret
pushl
and
jle
push
push
out
sbb
push
mov
call
out
fildl
push
loop
ja
inc
jmp
out
add
cld
daa
push
sub
call
aaa
xor
cmp
out
xor
inc
cmp
xlat
jg
mov
add
ja
imul
or
mov
and
mov
mov
iret
imul
mov
out
mov
jg
inc
cmp
test
sbb
addr16
xlat
jo
popf
pop
add
xchg
repz
sbb
movsl
lods
js
imul
mov
in
pop
pop
repnz
jae
sahf
xor
shl
or
repnz
enter
xchg
aam
push
pushf
sub
es
cmp
dec
dec
jmp
push
hlt
repnz
adc
pop
sub
bnd
test
test
adc
icebp
cmp
fisubl
mov
add
add
add
cmp
aas
or
mov
in
repz
dec
dec
jmp
ret
hlt
xacquire
sub
bnd
and
icebp
outsb
std
bnd
std
insb
add
lahf
mov
int
int3
dec
xchg
cli
stc
jo
ss
sbb
or
cs
leave
insl
jns
into
add
dec
mov
or
xlat
test
jne
lock
add
insb
jns
jmp
jg
cltd
push
jo
or
notl
mov
adc
jo
or
outsl
repz
imulb
or
sbb
cmp
adc
repz
push
std
enter
add
mov
jmp
outsb
repz
jle
pop
inc
iret
out
jne
aas
push
enter
add
inc
mov
out
add
adc
call
push
movsl
sbb
sbbb
fsts
into
decl
insb
repz
lahf
jge
clc
imul
out
ss
call
leave
stc
pop
out
jge
rorb
push
push
out
jne
mov
jl
fbstp
jl
sbb
fdivrp
and
push
sbb
stc
jnp
push
push
push
cli
xchg
jnp
cli
or
add
or
push
inc
insb
push
addr16
pusha
xor
adc
ds
mov
out
jo
lock
add
loopne
fcmovnb
dec
movsb
add
push
jo
xchg
fcmove
jg
mov
cmpsb
cltd
ret
dec
jo
imul
outsl
fsubrs
pop
pop
mov
cld
add
sti
enter
dec
add
test
add
add
add
add
xlat
mov
out
imul
pop
mov
jo
in
mov
out
icebp
hlt
je
mov
push
jl
or
sub
jmp
adc
icebp
mov
out
aaa
test
arpl
sbb
or
inc
push
dec
jmp
adc
icebp
xchg
adc
jno
js
arpl
sbb
adcl
ret
out
icebp
push
add
jecxz
imul
std
aas
or
and
jmp
xchg
out
icebp
xor
out
cmpsl
cmp
arpl
add
jmp
mov
ljmp
std
rorl
jle
pop
inc
jbe
cmp
cs
repnz
jnp
ljmp
dec
add
push
pop
inc
es
cmp
pop
ret
repnz
cmp
ljmp
add
add
add
pop
repz
pop
or
test
add
add
jne
dec
jecxz
icebp
pop
mulb
rorb
mov
jns
sahf
cmp
incl
andl
repnz
or
iret
adc
arpl
mov
test
int
push
subb
out
dec
popa
jmp
cmp
inc
add
iret
mov
add
mov
ret
xchg
xor
into
ljmp
decb
iret
push
popa
jne
mov
cld
add
cli
pushf
pop
punpckhbw
or
pushl
push
add
stc
pop
out
arpl
sarb
lock
push
xlat
iret
sbb
or
push
xorb
test
mov
js
cli
xchg
in
sbb
add
add
add
lods
in
out
sti
push
pop
fldcw
lea
in
imul
push
inc
push
in
sub
jg
js
add
fistl
jb
pop
mov
adc
in
and
sbb
pop
dec
sar
addr16
cltd
ret
dec
clc
call
dec
dec
add
leave
jne
pop
add
inc
fdivs
stos
and
arpl
inc
or
sahf
ja
sahf
push
jmp
cmp
or
xor
jecxz
xchg
in
jecxz
or
repnz
loope
repnz
jecxz
das
in
push
sub
mov
inc
or
xchg
mov
pop
cs
and
mov
repnz
mov
add
pop
neg
push
fbld
add
gs
idiv
jbe
mov
aaa
dec
jmp
gs
dec
ljmp
mov
repnz
aas
repz
shl
mov
jns
cmp
push
pushl
inc
inc
jbe
loop
dec
push
test
addr16
call
stc
out
push
inc
movsl
inc
inc
inc
fcmovb
stc
push
test
int3
repnz
push
cmp
add
outsb
ret
repnz
stos
repz
pop
pop
pushl
mov
jne
push
cmp
ds
repnz
stos
repz
out
cmpl
add
add
iret
fdiv
adcl
add
add
bound
jne
sbb
pop
mov
movsb
lcall
mov
out
cmp
sub
incl
out
push
popa
xor
incl
add
jb
jne
dec
fidivrs
cmpsl
in
out
mov
stc
mov
dec
lret
mov
push
sub
lcall
mov
mov
sti
jns
pop
idivl
jmp
iret
push
subl
jne
jg
mov
pop
ja
xchg
mov
rcrl
push
jb
mov
pusha
add
and
pushf
dec
add
mov
call
pushf
cmp
fisttpl
loop
pop
test
call
in
push
aas
lock
mov
pop
imul
dec
cmpl
push
movsb
add
mov
iret
jg
cmp
jb
out
bnd
push
add
jno
repnz
mov
pushf
pop
sub
push
sub
xchg
out
aad
inc
or
aaa
dec
dec
jmp
rcll
xor
out
sbb
out
loope
stos
repnz
push
sbb
sbb
fs
jle
or
pop
dec
dec
jmp
int3
push
dec
mov
push
inc
or
push
dec
dec
jmp
push
jg
fsubrl
jmp
push
add
push
jnp
fadd
aaa
dec
jmp
out
pop
sarb
inc
fiadds
dec
hlt
icebp
in
jl
data16
data16
sar
inc
add
divl
pop
jmp
repz
dec
adc
and
inc
jbe
jns
pop
lock
icebp
imul
push
rcrb
inc
repz
sti
testl
add
add
add
push
repz
pop
repz
das
cld
div
pop
in
mov
repz
out
iret
cld
sti
negl
dec
or
or
dec
xchg
imul
icebp
lock
mov
adc
iret
mov
cwtl
or
inc
out
push
mov
imul
xlat
mov
cwtl
or
ficoml
inc
iret
cld
roll
xor
mov
jo
mul
inc
imul
lahf
test
push
mov
faddl
xor
psubsb
xchg
cld
push
jg
push
fsts
sbb
jg
stos
mov
dec
movsb
add
in
dec
fadd
inc
fsub
std
inc
pop
je
aam
push
pop
or
add
pop
in
je
and
aaa
add
out
iret
lcall
inc
imul
or
out
sti
push
xlat
test
pusha
in
or
std
pop
aad
push
fs
pop
out
enter
cmp
fiadds
xor
pop
mov
or
stos
in
sub
in
and
push
jmp
mov
add
in
out
push
add
cmp
jb
push
inc
sub
divb
aas
xchg
inc
or
in
jg
cmp
dec
in
jno
or
or
adc
and
jmp
popa
dec
dec
jmp
hlt
aas
jmp
in
xlat
inc
das
in
loop
lea
inc
or
mov
cmpsb
jmp
int
in
and
repz
add
repnz
mov
or
add
repz
loop
dec
push
or
jne
mov
xor
pop
scas
scas
jbe
lea
je
ja
pop
repz
call
daa
xchg
push
jl
out
sub
ficoms
jnp
jne
pop
jns
dec
dec
ljmp
and
mov
arpl
jne
push
mov
jmp
jle
mov
cmp
jne
inc
push
ret
add
mov
pop
daa
dec
dec
call
sub
stos
add
outsb
incl
xchg
pop
add
in
data16
jne
rclb
inc
ret
cmp
iret
ljmp
sbb
into
pop
cwtl
or
add
dec
pop
insl
inc
push
aam
pop
jo
mov
arpl
call
cmc
out
add
mov
dec
loop
push
xchg
ds
popf
mov
mov
cwtl
push
in
xor
xchg
pusha
mov
loope
insb
lods
and
popa
jne
lea
ds
mov
movsb
add
stos
and
jg
and
add
cli
mov
loope
or
jne
pusha
mov
loopne
add
mov
inc
mov
xorl
push
pusha
xorb
dec
xor
arpl
jno
xchg
and
out
push
or
add
jmp
int3
loopne
daa
add
or
lahf
and
inc
fstpt
repz
scas
loopne
dec
add
push
loope
loope
icebp
push
outsl
push
push
push
add
das
outsb
loopne
xorl
icebp
out
fistpll
and
rcrl
repz
add
pop
jmp
xchg
repnz
push
inc
adc
xor
pop
test
cmp
add
mov
cmp
dec
add
jge
pushl
add
outsb
mov
mov
jns
jle
jmp
add
outsb
mov
aad
dec
add
jns
out
loope
push
mov
fiadds
enter
or
mov
call
aas
enter
cmp
repz
mov
jbe
cmp
jns
pop
out
icebp
jmp
jns
add
iret
cmc
roll
addr16
xchg
ljmp
dec
add
jae
in
in
out
clc
cmpsl
or
sbb
inc
dec
mov
data16
push
or
sbb
dec
and
mov
loopne
cwtl
rep
push
call
gs
punpckhbw
std
ljmp
push
add
scas
mov
inc
fdivrl
jne
xchg
push
jne
add
mov
pop
jb
push
push
jmp
mov
jne
ds
push
push
and
cli
xchg
dec
lea
dec
arpl
jmp
addr16
cmp
dec
pop
mov
insb
jns
pop
mov
jg
xlat
shl
les
faddl
iret
in
jp
xor
add
push
std
imul
sbb
xchg
add
add
add
add
fisttpll
dec
or
in
arpl
aam
pop
pop
inc
jmp
pop
add
sub
mov
push
movsl
iret
jg
inc
rolb
lods
add
jg
scas
mov
or
int3
jg
sub
fisttpll
jmp
lret
imul
sbb
mov
sbb
push
hlt
outsb
and
jecxz
push
or
mov
inc
mov
or
xor
inc
test
add
fdivrl
movsb
dec
mov
jae
xchg
pop
add
push
mov
lcall
sbb
adc
repz
out
push
sbb
or
sar
out
fstpt
scas
mov
sarl
repz
pop
add
repz
out
push
out
repz
das
repz
jno
dec
cmpsl
and
sbb
repz
addr16
decl
repnz
add
dec
add
lock
idivl
lret
dec
add
or
call
ss
push
addr16
mov
cs
mov
jg
cmp
arpl
mov
loope
repz
ds
pop
inc
out
mov
jmp
inc
inc
inc
cmpsb
data16
xor
andb
lcall
add
adc
pop
icebp
imul
incl
ds
jnp
push
mov
stos
push
testl
xchg
in
cmp
push
add
cltd
push
dec
adc
addr16
call
pop
call
clc
xor
lock
jne
andb
out
push
call
pop
pop
call
add
add
add
imul
pusha
rcr
pop
cmp
rcrl
mov
cwtl
fnstenv
or
add
mov
ja
js
test
hlt
cmp
cltd
pop
and
cltd
pop
pusha
call
jno
arpl
jns
aaa
inc
cmp
inc
insb
icebp
push
pop
pop
sub
inc
push
and
pop
adc
pop
shlb
pop
or
or
add
add
sub
lock
iret
in
test
iret
jg
inc
jg
mov
cld
or
rcr
js
and
mov
aad
inc
hlt
cmp
xor
icebp
cld
push
dec
dec
jmp
pop
test
adc
int3
call
pop
xchg
fdiv
sbbl
add
pop
test
xor
icebp
adc
inc
dec
jmp
ja
int3
mov
int3
call
pop
push
add
repnz
repz
in
push
daa
jl
jne
imul
das
repz
das
jns
sahf
cmp
add
adc
notl
addl
cs
mov
add
pop
or
insl
inc
add
sub
cli
add
or
sti
das
repz
andl
andl
addl
jp
repz
jns,pn
shll
or
in
inc
js
or
out
movsb
dec
iret
daa
ud0
data16
jle
push
inc
jns
test
aad
lcall
sti
movsw
je
pop
mov
inc
incl
add
xor
pushf
lock
inc
iret
lock
mov
jae
pop
push
call
or
sbb
decl
sbb
xchg
cmpsl
or
sbb
pop
incl
imul
sub
mov
lock
movl
jle
mov
sbb
push
or
or
dec
rcl
icebp
setns
add
pop
pusha
insb
mov
pop
mov
jo
leave
push
nop
mov
addl
xchg
push
jo
push
pusha
pusha
aad
add
pop
xchg
imul
push
iret
dec
adc
inc
cmp
mov
in
jno
xlat
or
out
push
and
xchg
push
add
add
add
and
dec
push
lcall
ss
pushf
out
push
adc
pop
outsl
int3
repnz
orb
mov
repz
and
in
sbb
bnd
out
popf
sbb
repnz
loopne
repnz
sti
dec
add
or
sti
or
mov
aad
lds
repnz
dec
jecxz
cmpsb
sbb
in
push
add
repnz
hlt
int3
repnz
lods
mov
add
add
add
add
aam
mov
or
rcrb
aam
sub
repnz
push
iret
cli
dec
adc
add
push
repz
inc
repz
sub
mov
sub
into
aas
scas
add
dec
into
or
xchg
lock
jmp
ljmp
das
fs
mov
ljmp
add
add
add
repz
das
repz
aaa
call
ret
pop
mov
rolb
repz
shl
xor
dec
lds
mov
push
add
call
push
add
mov
push
add
sar
callw
inc
and
push
pop
pop
push
mul
imul
mov
add
cmp
dec
std
into
call
leave
ljmp
out
pop
incl
test
ja
loope
or
push
sbb
jo
or
inc
leave
jmp
pop
negl
pop
xor
xor
xchg
inc
pop
test
inc
popa
pop
push
jg
and
iret
push
push
sbb
pop
inc
xchg
pop
adc
cld
dec
pop
add
clc
ror
add
int
call
rcrl
push
mov
fstps
enter
mov
stc
push
and
aas
in
rcr
push
mov
aas
in
inc
sbb
push
push
sti
les
shll
mov
push
xchg
xchg
pop
leave
cltd
push
pop
mov
fldl
dec
or
push
adc
jbe
add
sarb
outsb
dec
mov
push
jle
in
cmp
repnz
pop
xchg
mov
das
in
pusha
shl
es
mov
es
or
int3
add
mov
int3
sarb
mul
roll
out
mov
hlt
enter
adc
call
or
push
hlt
or
int3
cld
mov
pop
shl
jmp
add
int3
jg
pop
add
repnz
int3
orb
fmulp
repnz
add
jns
dec
sarb
mov
repz
sti
shr
shlb
das
repz
cmp
call
cmp
in
das
repz
ljmp
mov
jns
faddp
mov
loopne
aas
repz
cmp
ljmp
add
sti
incl
icebp
fcomi
xchg
aas
or
dec
mov
cmp
repz
jns
ds
sub
push
fadds
movl
inc
mov
push
inc
jmp
movsl
xchg
pushl
pop
xchg
in
and
call
sbb
dec
notl
ds
ss
inc
inc
cmp
pop
clc
inc
pop
mov
popf
inc
mov
outsb
inc
push
mov
fdivs
lock
call
shlb
jmp
mov
inc
call
xchg
sbb
incl
bound
mov
jne
mov
mov
adc
repz
push
and
fidivl
rcrb
cltd
dec
fcmove
sbb
inc
into
mov
jnp
add
orb
pop
sbb
add
aaa
movsb
add
in
add
jp
push
cs
iret
cmpsl
dec
iret
jg
add
inc
sbb
jg
fnop
push
in
enter
or
xchg
adcb
dec
mov
loop
mov
pop
jb
iret
js
fmul
push
add
jg
lcall
or
jne
repz
out
subb
sahf
and
in
cmp
repnz
add
push
sar
xchg
int3
repnz
push
sub
int3
mov
pop
sarb
xchg
lcall
ds
inc
or
inc
sar
es
int3
cmp
sbb
add
add
adc
gs
int3
int3
mov
out
mov
sbb
and
repnz
add
sbb
cmc
sti
idivl
cmp
xor
xor
loopne
cmp
lea
adc
faddp
repnz
jecxz
sti
ljmp
shl
shl
repnz
in
aas
js
jne
shl
mov
cmp
jae
sti
ljmp
pushf
sti
mov
por
add
xor
imul
mov
sti
jns
cmp
iret
mov
popf
incl
push
test
js
inc
add
fiadds
push
pop
cmp
pop
ljmp
dec
cli
pop
add
fdivrs
decl
imull
pop
or
test
and
inc
add
fs
add
incb
pop
incl
add
inc
nop
fucomi
cltd
repz
or
dec
jmp
incb
jo
mov
leave
dec
test
fmuls
add
pop
mov
push
data16
rorl
inc
xchg
xlat
mov
lods
lock
pop
and
paddb
inc
dec
push
lret
inc
lret
mov
lret
jp
jno
add
sub
idiv
sub
xchg
aaa
sbb
pop
dec
inc
jecxz
dec
add
scas
sti
lock
dec
lock
outsl
daa
loopne
and
ja
scas
sub
adc
fists
dec
enter
test
pop
dec
mov
leave
or
add
leave
mov
roll
adc
push
leave
jecxz
pop
leave
repnz
push
fsubs
add
leave
repnz
add
repnz
repz
xchg
movsb
psllw
xchg
inc
xchg
jmp
int3
xor
ror
push
add
and
jo
lds
int3
fdivs
jmp
int3
enter
and
push
push
sti
dec
adc
lods
add
repnz
adc
add
jl
sbb
add
add
add
cmp
repz
sub
jbe
mov
mov
aaa
repz
aaa
jns
mov
hlt
dec
fwait
mov
pop
out
repz
and
cld
mov
aaa
jns
jle
mov
add
sbb
push
test
ljmp
inc
fs
es
add
scas
adc
add
add
pop
push
flds
jo
fnstenv
into
rolb
fists
iret
mov
dec
adc
clc
incb
rcll
and
dec
mov
or
mov
aas
leave
call
in
faddl
aaa
dec
and
cmp
push
mov
mov
into
xchg
psubsb
dec
incl
add
cwtl
fsubl
ja
lahf
inc
iret
call
dec
push
ja
push
out
and
stc
pop
mov
mov
dec
std
pop
fildll
push
inc
mov
dec
std
pop
pop
adc
inc
xchg
shr
add
fadds
idivb
cmc
orl
inc
cmp
jp
xor
lods
adc
adcl
cmp
add
inc
sub
in
jo
enter
cmp
push
or
pop
adc
lahf
push
in
lock
inc
xorb
sbb
xor
push
or
mov
or
dec
test
xchg
repz
or
std
aas
les
or
cwtl
jge
jecxz
jb
int
int3
sub
inc
lret
pop
push
into
add
mov
xchg
push
vpshufhw
arpl
int3
aam
inc
test
dec
jmp
rol
js
movsb
in
rorl
mov
xchg
loopne
repz
roll
imul
cli
pop
xchg
repnz
push
cmp
js
xchg
mov
add
ret
adc
or
in
inc
add
mov
orb
xor
pop
cmpsb
andb
add
add
addl
xor
call
cmp
test
push
or
insl
inc
js
lahf
movsb
or
jbe
movsb
dec
mov
repz
sub
mov
cmp
push
hlt
and
dec
cmp
decl
mov
addr16
sbb
cmc
sti
test
fs
iret
cs
add
call
test
gs
xchg
ud0
push
into
pop
sbb
call
push
pop
pop
mull
and
lock
inc
iret
rcrb
ja
dec
call
insb
negl
fsubs
inc
leave
decl
cmp
inc
ljmp
sub
ljmp
into
dec
je
add
push
fsubl
push
dec
add
jg
inc
mov
ret
lock
lock
rorb
cmovl
shr
xchg
mov
mov
sub
iret
jg
xchg
jg
fimull
sbb
test
in
adc
aaa
sub
ret
sbb
xchg
inc
cli
ja
outsl
and
shll
or
jg
inc
add
pop
ret
pop
ret
ret
xor
sbb
inc
xor
out
or
fistpl
and
or
lret
lea
inc
sbb
pop
lea
pop
ret
jg
repnz
addr16
ds
xlat
mov
je
lret
hlt
sbb
mov
add
repz
or
ret
repnz
lock
add
out
jmp
cltd
neg
push
les
and
cmp
xlat
movsb
xchg
push
roll
shl
fcmovnbe
sbb
pop
js
in
movsl
add
vcvtsi2ssl
mov
cld
int3
jnp
adc
or
call
outsl
mov
jecxz
sub
notb
pop
daa
jge
jne
xchg
outsl
add
icebp
repz
jns,pt
into
in
inc
xor
add
test
aam
mov
lods
icebp
jne
aas
cmp
mov
in
add
add
sub
or
stos
xchg
pop
ss
add
jnp
add
jl
lea
inc
xor
and
jne
dec
mov
add
int
je
add
das
lahf
add
cmpsb
test
lret
pop
orl
mov
sti
es
jg
dec
mov
xor
mov
xchg
lods
test
addb
add
pop
push
test
xor
adcb
and
xor
pusha
push
or
nop
leave
call
cmp
dec
subb
add
cmp
imul
jg
daa
jbe
in
pop
mov
aas
or
in
mov
add
ja
add
cmp
jg
jns
mov
aas
shlb
orb
xor
andb
ds
xorl
outsl
push
mov
jmp
outsl
js
int
add
les
mov
pusha
mov
or
int3
add
jmp
loopne
repnz
xor
dec
cmpsl
cli
jle
jg
add
movsb
mov
data16
mov
inc
hlt
shl
dec
aad
ja
dec
cld
shll
cltd
mov
or
stc
std
repnz
aam
pop
push
stc
mov
repnz
add
jmp
call
jecxz
sarb
xchg
ret
xchg
sbb
out
stos
mov
in
jnp,pt
call
arpl
jns
jns
pop
cwtl
movsb
lcall
mov
call
dec
xor
in
lea
inc
imul
imul
mov
jb
decl
add
shl
cltd
jp
cld
push
iret
cltd
add
aad
in
and
mov
jmp
test
jae
repz
push
test
jnp
cld
cltd
cmc
cli
dec
pop
sbb
cmpsb
adc
mov
push
and
repz
in
mov
cmp
or
cmp
xlat
push
mov
add
add
add
sbb
mov
call
clc
sarb
jp
xor
ds
cmpsl
loopne
xor
dec
pusha
stos
shlb
xlat
test
mov
lcall
test
dec
jne
loop
ret
addl
and
addb
sahf
iret
jg
cmp
mov
leave
lea
lods
mov
add
push
mov
mov
cmp
das
xchg
xlat
fisttpll
adc
add
mov
outsb
xor
insl
pop
lds
mov
out
inc
xor
movsb
add
mov
pop
jge
pop
push
sub
dec
mov
inc
test
mov
cmpsl
sbb
test
mov
cli
cwtl
xor
lods
iret
or
add
add
repnz
fnsave
and
out
mov
jecxz
jecxz
repnz
pop
shl
repnz
jmp
xchg
pop
stos
mov
mov
subl
test
mov
out
push
movsl
and
dec
jmp
int3
mov
or
add
inc
in
repnz
mov
push
test
dec
in
aaa
mov
icebp
jne
gs
incb
jbe
push
imul
xchg
ja
rorb
push
pushf
mov
lahf
call
in
sub
sbbl
repz
shl
jne
gs
pop
jbe
push
cmpsb
lods
xchg
jbe
rorb
push
fdivrl
add
add
add
add
jmp
pop
aaa
jge
call
ss
jne
fs
incb
ja
sub
repz
fs
shll
ror
shlb
in
int
or
cmpsb
es
lods
push
js
fdivr
cli
scas
es
imul
xor
pop
jnp
fisubrl
xor
or
adc
add
add
add
add
adc
pop
imul
xchg
sbb
mov
cmpsb
push
or
mov
push
xchg
push
str
cmpsb
dec
inc
jecxz
or
iret
mov
push
push
sub
hlt
mov
adcb
orl
add
daa
pop
lret
jo
leave
addr16
xor
lahf
add
pusha
mov
aam
cmpsl
stc
addr16
mov
sbbl
lea
inc
sub
stos
rcrb
xor
xchg
das
sub
adc
sbb
jno
jne
or
ss
mov
aaa
lock
pop
testl
loopne
dec
stos
rcrb
fstp
jo
cli
add
cmpsl
push
loopne
mov
add
add
add
lock
or
arpl
ret
scas
repnz
ljmp
mov
or
shll
repnz
mov
repnz
dec
sar
cmpsb
stc
add
jmp
in
scas
repnz
sub
xchg
js
dec
hlt
jecxz
mov
sbb
repnz
add
cmpsl
imul
inc
pop
sti
stc
insl
jns
push
aaa
test
jmp
insl
repz
in
adc
call
xchg
sti
decl
or
loopne
imul
add
incl
sti
decl
add
in
imul
ret
decl
in
idivl
imul
xchg
push
incl
add
addr16
decl
push
mov
arpl
lcall
push
fmul
push
cmp
out
push
call
cmp
cmp
cmp
sti
std
mov
cmp
mov
dec
lcall
pop
cmp
mov
fwait
add
pop
dec
or
jae
in
dec
fidivrl
push
inc
add
loop
es
xchg
repnz
xchg
movsl
or
cmpsb
push
xorb
add
and
cmp
mov
aad
iret
add
or
subb
incl
jg
ret
push
dec
or
mov
dec
xor
cmp
aad
inc
test
pop
and
popl
in
adc
and
add
iret
and
in
jo
and
incl
cmp
pop
sub
fcompl
and
subb
dec
and
lds
mov
adc
mov
xor
push
outsb
push
inc
std
jo
or
or
mov
fs
cmp
or
test
jmp
cld
mov
mov
lcall
add
add
add
cld
mov
fs
repnz
mov
add
push
mov
push
fdivl
movsl
mov
mov
or
into
inc
xchg
mov
xchg
pushf
stos
repnz
popf
sub
ror
repnz
lret
cld
fbstp
push
push
sub
mov
cltd
in
repnz
addr16
popf
je
repnz
inc
cmpsl
cli
add
data16
insb
push
inc
out
mov
add
add
add
add
repz
mov
fnstcw
insl
xrelease
sti
incl
outsb
repz
lea
cmpsb
jmp
sti
inc
jl
pop
and
insl
or
gs
repz
xchg
aaa
mov
xorb
sub
repz
outsl
repz
xchg
lea
or
incl
add
or
lds
repz
or
sbb
cmp
gs
or
pop
div
push
in
dec
cmp
dec
xor
test
imul
movsb
mov
xchg
cmp
decl
mov
call
jo
cmp
push
add
sarl
call
jns
inc
mov
cmp
cmp
jmp
sub
xor
xorb
cmpsb
call
dec
outsb
pop
dec
mov
fidivl
addb
jp
mov
xor
shrl
mov
xor
sbb
int
or
iret
jg
xor
js
daa
mov
add
lods
sbb
mov
cwtl
jl
add
pop
js
loope
adc
mov
iret
jg
inc
fadds
add
jg
leave
inc
orb
jg
and
scas
or
int3
sbb
rcrl
or
lret
cld
dec
xchg
and
mov
scas
repnz
stos
jecxz
inc
orb
xor
push
idiv
mov
add
add
ds
pop
jbe,pt
repz
clc
scas
test
repnz
xchg
out
ja
dec
in
fists
mov
pop
or
fldln2
repnz
mov
out
mov
scas
repnz
pop
cmpsb
mov
xchg
cld
mov
add
mov
mov
jle
mov
jecxz
in
cmpsb
orb
scas
repnz
lods
mov
add
add
add
add
repz
test
cld
into
mov
cmp
push
ret
repnz
repz
repz
sahf
jg
add
pop
jns
push
xchg
repz
jmp
xor
add
out
call
pop
popf
push
inc
or
jne
mov
jns
repz
shlb
jne
mov
inc
ss
aaa
xlat
push
je
mov
out
inc
and
lahf
xchg
addr16
xchg
movsbl
lds
xchg
jne
dec
sti
lret
fmuls
addr16
xchg
movsbl
ret
ret
inc
iret
push
and
dec
out
lret
mov
shlb
movsbl
adc
inc
iret
out
jne
jle
lret
mov
push
sub
and
add
lea
les
punpckhdq
jg
mov
xchg
sub
push
lods
imul
sbb
sub
ja
cmpl
mov
in
lods
das
cld
xor
or
adc
mov
xchg
push
fs
stos
mov
jns
ljmp
sbb
mov
in
push
inc
dec
cmpb
in
add
ret
adc
loop
sub
inc
adc
mov
or
sbb
add
or
cmp
lods
fisubs
icebp
push
notl
pop
push
lret
ja
stos
js
les
les
in
arpl
inc
or
cmpsl
jecxz
outsb
stos
repnz
xacquire
add
repz
in
pop
xor
repnz
dec
jmp
and
repnz
and
cs
and
aam
repnz
push
mov
lock
add
insb
into
or
iret
test
cmc
aas
lock
or
sti
stos
ljmp
push
data16
pushl
data16
xchg
pushl
data16
push
call
repnz
repnz
pop
repnz
std
pop
daa
jle
and
or
adc
decl
or
jnp
ljmp
popa
repz
test
mov
lcall
stos
and
inc
in
push
push
lret
add
dec
xchg
push
or
xchg
push
mov
pop
add
xchg
dec
inc
cmp
or
iret
cmp
push
cmp
push
xor
hlt
add
and
incl
xchg
push
or
stos
icebp
call
addr16
inc
iret
dec
mov
inc
out
rorb
cmp
mov
fcoms
pop
insb
jmp
jg
sub
add
adc
movsb
add
hlt
xor
icebp
scas
aam
rcrb
imul
jmp
movsb
ds
jp
fldcw
cmp
mov
sub
pop
sbb
test
test
xchg
sub
jg
hlt
jo
in
inc
pop
cld
jg
outsb
jecxz
jno
call
mov
sub
in
adc
push
enter
add
add
add
add
sbbb
scas
inc
sub
mov
or
cmpsb
bnd
int3
xchg
mov
aad
dec
jmp
cmpsl
cmpsb
bnd
lahf
mov
mov
arpl
int3
xchg
mov
jae
dec
jmp
lock
repnz
inc
lahf
data16
xlat
scas
repnz
call
cmpsb
repnz
insb
pop
repz
mov
sti
sahf
add
test
repnz
movsl
js
aam
icebp
jle
cmpsb
mov
sbbl
cmp
push
or
lock
insb
cli
or
cmpsb
arpl
or
iret
test
f2xm1
push
call
popf
inc
js
pop
push
inc
jbe
ljmp
or
fstps
repnz
imul
repz
sbb
and
add
mov
or
adc
repz
mov
or
iret
test
jne
lock
rorl
imul
test
dec
cld
insl
scas
pop
dec
cmpsl
jnp
cmp
ss
repnz
iret
adc
iret
xchg
xchg
or
mov
jp
iret
mov
mov
iret
lods
jb
iret
xchg
push
push
negl
mov
add
xchg
les
lea
pop
pusha
ss
sub
decb
add
sbb
inc
lock
fisubrs
call
and
or
insb
lock
out
sub
divl
incl
add
rcll
lcall
xchg
repz
mov
sub
jg
mov
enter
aaa
xchg
scas
enter
add
test
lods
fwait
iret
jg
data16
popa
add
rclb
or
pop
movsb
add
into
cmp
movsbl
imul
and
aad
std
fsqrt
daa
and
cmp
in
sbb
mov
enter
sbb
sbb
movsl
xchg
and
fs
clc
movsb
xlat
xor
bound
repnz
jecxz
or
gs
sub
pop
push
jmp
les
repnz
mov
nop
ds
push
and
jl
xchg
pop
xchg
mov
stc
cmp
mov
and
das
out
or
or
mov
adc
lret
and
mov
or
lret
adc
dec
mov
hlt
mov
add
add
add
mov
repnz
sub
cmpsb
cmpsw
jecxz
push
orb
sub
add
or
not
movsb
dec
mov
repz
push
in
popa
pop
pop
mov
adc
push
je
aad
add
test
xchg
scas
nop
jmp
shl
addr16
dec
add
pop
repz
push
mov
fiaddl
outsb
inc
mov
fwait
mov
pushl
pop
jns
push
movsl
stos
jmp
repz
sbb
push
jns
idivl
mov
test
jmp
pop
call
jg
jecxz
iret
or
push
orb
fildll
cs
fsubs
call
xor
rolb
scas
inc
lcall
mov
sub
lcall
xchg
es
add
add
add
das
pop
or
ja
pushl
xchg
punpckhbw
popf
test
jle
popf
push
xchg
and
xchg
add
cmp
inc
test
lret
ret
add
cmp
sbb
mov
xor
iret
decl
adcb
mov
lea
push
int3
jno
loopne
das
sub
mov
pop
add
jg
pop
add
mov
push
and
jo
xchg
iret
jg
test
xor
mov
jg
add
nop
in
dec
mov
mov
js
dec
xor
add
loop
sbb
and
xchg
icebp
and
ja
aaa
xchg
daa
inc
mov
int
inc
mov
mov
cmp
xchg
xchg
push
scas
mov
repnz
add
scas
sub
mov
loop
jle
mov
mov
mov
repnz
jno
insb
clc
xchg
repnz
out
dec
repz
cmpsl
gs
sahf
out
jb
icebp
mov
cmpsl
push
push
out
sahf
bnd
xchg
repnz
push
scas
sahf
mov
add
sti
repnz
scas
aam
idivb
sahf
repnz
mov
cmpsl
mov
sahf
repnz
add
notl
nop
add
jg
mov
ja
lcall
push
inc
mov
mov
mov
insb
push
pushf
pop
jg
inc
dec
insl
sar
jle
jne
imul
add
mov
add
cld
mov
or
jp
repz
leave
imulb
mov
rorb
repz
push
std
fnstcw
cmpsb
add
cmp
bnd
or
pop
testl
cmp
idiv
mov
jge
leave
iret
ljmp
or
adc
sbb
or
aad
pop
testl
pop
add
and
negl
dec
je
rorl
add
cmpsb
cltd
and
in
inc
iret
sub
mov
jno
add
mov
dec
push
push
nop
faddl
call
ja
jbe
js
xchg
sti
jo
push
call
xchg
imul
orl
adc
jg
pop
push
popf
rorl
iret
lods
subb
adc
adc
test
add
std
sub
clc
cltd
sbb
jp
cltd
addl
adc
and
popf
div
rcll
sub
in
les
in
mov
add
jg
inc
or
add
jg
add
jg
jl
push
sbb
pop
adc
sub
add
int3
jne
cmpsb
mov
xchg
add
or
inc
mov
jbe
pushf
repnz
andb
add
add
add
add
cs
sbbb
shll
andb
xchg
out
sbb
fcoml
add
cld
repnz
inc
add
gs
int3
lcall
popa
xchg
sub
fwait
bnd
lods
cli
push
shll
dec
jmp
pop
ja
fisttpl
mov
data16
pushl
ljmp
add
cld
notl
ja
jne
xchg
test
mov
repnz
fwait
jae
incl
jns
dec
out
call
mov
pop
jbe
push
out
pop
testl
push
call
das
add
notl
ja
mov
jbe
je
add
repz
pushl
cmp
test
add
ficoml
adc
cmp
jge
sub
adc
add
inc
enter
jmp
adc
lds
adc
fadds
pushf
pop
out
jge
enter
mov
add
es
cmp
jmp
push
jmp
push
call
push
push
call
js
push
daa
js
adc
dec
negl
sbb
or
pop
cltd
sbb
ss
icebp
sbb
test
jl
cltd
jmp
sbb
sbb
cltd
xchg
xor
cltd
leave
sub
divb
adc
cltd
mov
or
add
adcb
fcomps
mov
rolb
sub
cltd
jns
rclb
sub
add
add
add
into
add
cmpsl
fdivl
cwtl
or
xchg
arpl
inc
aas
or
or
test
cwtl
js
mov
lock
mov
pop
movsb
lea
mov
push
and
loopne
repnz
xchg
repnz
add
les
call
xor
xor
xor
cmpsl
adc
cwtl
test
add
cmp
aas
or
add
inc
sub
pushl
jmp
js
or
jmp
mov
int3
das
lods
popa
inc
or
hlt
gs
int3
cmp
add
add
and
ljmp
sbbl
repz
add
jmp
lcall
fs
sub
repnz
dec
add
repz
call
inc
mov
bnd
aad
xor
repz
outsl
scas
into
xchg
ja
cmp
idiv
ret
and
jae
repz
test
into
add
iret
test
gs
lock
jle
jne
push
xchg
cmp
inc
sub
cld
sub
or
mov
repz
and
or
add
push
or
popf
sti
ja
jbe
js
sbb
pop
popf
sti
pushl
pop
ja
jle
pop
rolb
inc
xchg
mov
jmp
push
clc
lcall
fwait
sti
dec
test
ret
in
push
ljmp
xorb
call
pop
sbb
add
xchg
add
sar
aas
ret
mov
shlb
mov
add
jb
cwtl
aam
roll
dec
adc
add
jle
cwtl
fdivrl
or
mov
es
mov
and
in
int3
mov
mov
fistpll
rcr
add
add
xchg
inc
je
and
jo
call
add
add
add
and
cmp
adc
mov
xchg
sbb
mov
movsl
jae
in
aam
in
mov
jl
sbb
nop
cmpsl
je
movsb
pop
pop
push
aam
cmpsl
jp
mov
cmpsl
cmp
ficoml
sub
int3
add
or
adc
cmp
or
pop
movsb
xchg
add
sbb
int3
jg
inc
cltd
and
sub
push
jmp
inc
or
or
in
sbb
or
mov
shl
insb
xchg
repnz
pop
shl
jb
repnz
push
or
pop
cmp
add
xorl
jg
movsb
jl
addl
jg
mov
test
jecxz,pt
jge
js
add
or
iret
pop
push
mov
add
or
mov
jne
jg
inc
sar
repz
add
shll
call
repnz
cmc
repnz
jle
sarb
cltd
jmp
adc
pop
mov
lret
iret
jae
imul
daa
or
aam
xchg
pop
sbb
mov
add
mov
rcr
push
mov
adc
shll
dec
pop
sbb
outsb
and
cli
movsb
sbb
nop
jo
mov
mov
rorb
clc
les
inc
pop
jecxz
push
inc
or
inc
mov
sbb
inc
pop
pop
pop
jne
test
sbb
or
testl
rcrb
sti
add
idivl
adc
xchg
jge
fmuls
cltd
sbb
jmp
adc
or
adc
mov
jle
xor
in
inc
movsb
gs
aam
mov
orl
dec
mov
loop
sub
pop
xchg
sbb
xor
pop
adc
ja
cmp
in
sbb
sub
jp
add
nop
push
hlt
sbb
in
sbb
rcll
adc
add
imul
lods
mov
xchg
js
mov
icebp
xchg
mov
push
mov
nop
repnz
mov
lea
stc
int3
sub
ret
int
js
in
pushf
ficoms
add
mov
repnz
sbb
add
rcll
add
push
xchg
repnz
ret
jo
nop
js
fisttps
add
xchg
xchg
repnz
sub
rol
int
int3
sub
add
icebp
jne
repnz
mov
ljmp
xchg
icebp
jne
jae
cmp
lock
mov
dec
adc
mov
cmp
mov
lret
inc
sub
dec
cld
add
push
jo
adc
testb
inc
mov
repnz
add
jbe
sub
add
add
sub
add
jns
into
outsl
mov
or
std
xchg
inc
or
jge
cwtl
lcall
into
xchg
or
mov
call
imul
pop
add
out
or
add
iret
and
adc
jne
out
mov
iret
cwtl
dec
inc
cmpsl
cwtl
push
add
pop
cwtl
push
add
cwtl
push
lea
dec
mov
mov
push
mov
jne
jo
pop
insl
jge
cwtl
lcall
mov
jge
cwtl
xchg
add
mov
jg
cwtl
les
fstps
add
divl
push
clc
lea
adc
adc
sbb
out
mov
sbb
icebp
xchg
push
rclb
xchg
sbb
adc
popf
icebp
jno
add
push
sbb
mov
adc
cltd
nop
mov
pushl
jne
sbbb
push
add
inc
lea
cltd
push
ss
pop
lea
push
dec
ds
adc
add
cmp
or
int3
xor
aas
lret
shll
repnz
test
push
xchg
sbb
cmc
aam
jmp
lea
scas
cmp
repnz
or
andl
movsb
lock
ret
sub
add
lret
adc
push
mov
push
rcll
or
sub
int3
cli
dec
xor
lea
les
jno
lret
adc
loop
adc
push
int3
jg
add
fcmovb
ret
jge
test
add
push
jl
icebp
jne
push
addl
addr16
lea
jnp
inc
sbb
lea
mov
lea
repz
push
addl
repnz
cmpsb
or
xor
cli
push
xor
or
aad
repz
popf
jg
push
iret
icebp
jne
jl
or
icebp
or
push
jp
incl
ret
mov
or
add
dec
adc
hlt
mov
cwtl
push
add
and
idivl
cwtl
sti
sbb
lcall
addl
or
iret
cwtl
movsb
enter
lea
add
nop
push
push
inc
ljmp
iret
cwtl
add
mov
mov
jmp
dec
mov
jne
xchg
add
mov
jne
ja
add
stc
pusha
pop
jne
push
jg
or
ja
fiaddl
sbb
xchg
xor
icebp
jl
rcrl
loop
add
rclb
jnp
hlt
sti
pop
or
mov
lock
or
mull
sbb
or
add
data16
jle
cltd
dec
or
add
data16
cmc
daa
lds
aas
sti
add
je
nop
mov
adcb
cwtl
adc
orb
test
aas
in
loop
or
or
pop
leave
ja
add
xor
repnz
xchg
mov
in
orb
mov
adc
adc
adc
out
dec
jne
jle
mov
ficomps
repnz
pop
mov
repnz
xchg
jl
mov
cmp
xchg
fs
mov
sbb
xchg
insb
js
mov
dec
nop
or
xor
dec
jno
mov
loope
xor
pop
add
pop
je
cmc
adc
repnz
adc
add
enter
push
test
cltd
jbe
cld
test
or
cmp
clc
or
arpl
repz
clc
repnz
mov
jbe
leave
fs
push
jge
les
repz
or
idivb
inc
ljmp
add
orl
add
xchg
sub
js
or
add
enter
testb
rorl
repz
std
lea
cmp
repnz
mov
add
inc
adc
push
cwtl
push
lea
add
rcrb
add
dec
pop
add
mov
jg
pushl
fwait
mov
and
jb
sbb
pop
add
cwtl
jae
or
add
fwait
push
cwtl
cmpb
dec
ja
mov
jnp
cwtl
cmc
mov
iret
cwtl
push
lea
or
mov
into
sub
jo
dec
push
cltd
push
ret
push
or
repz
iret
xchg
divl
jge
jo
and
mov
les
sbb
xchg
aam
pop
jae
xchg
add
or
xor
mov
xchg
stc
jb
xchg
xorb
add
roll
inc
js
mov
addr16
loope
mov
push
sbb
adc
js
lock
dec
mov
aam
add
test
jbe
lret
icebp
outsb
leave
das
in
std
test
mov
aam
repnz
leave
xchg
mov
add
add
add
add
test
ss
mov
adc
or
dec
rolb
and
repnz
leave
lret
roll
testb
mov
test
stos
pop
test
xlat
inc
cltd
leave
test
scas
push
jg
jmp
xlat
les
dec
inc
or
rclb
jg
aas
or
push
hlt
push
call
add
add
add
push
adc
ljmp
add
fs
or
jmp
bnd
int3
ljmp
inc
bnd
jge
decl
sbb
or
inc
xor
add
addb
sbb
add
addb
jno
or
adcl
inc
ror
push
rol
repnz
stc
repnz
fnstsw
jns
add
or
jp
incl
es
fisubrs
inc
iret
cwtl
push
push
xor
test
add
cltd
or
lea
sbb
push
out
mov
iret
sub
ljmp
inc
mov
inc
or
sub
push
and
dec
pop
or
push
stos
inc
iret
imul
std
push
add
pop
adcl
xor
add
add
add
add
xchg
inc
mov
lcall
cli
test
ud0
lret
rcll
or
in
iret
jg
mov
sbbb
test
lods
jge
jg
mov
cmpsl
cmp
mov
jle
jns
jmp
add
mov
xor
xchg
lea
push
orb
pop
subb
push
ja
pop
inc
xchg
gs
insl
out
subb
cmp
sbb
lahf
jmp
xchg
test
daa
clc
or
jmp
add
jne
lret
xchg
popf
add
orl
or
andb
or
divl
cld
jns
addb
sbb
cmp
loope
shr
add
int
int3
insb
int
gs
int3
pop
scas
movsb
or
dec
jmp
int
int3
popf
fsubrs
subl
test
push
xor
cmp
adc
rorb
jg
rcll
repnz
ret
add
mov
icebp
fnstsw
pop
idivl
jmp
jae
pop
add
pop
jle
call
dec
es
sbb
add
insb
icebp
icebp
ljmp
mov
out
mov
stc
lcall
icebp
inc
cld
es
adc
or
call
insl
mov
or
icebp
cmp
add
jl
arpl
data16
data16
addl
xchg
inc
jle
clc
sbb
lock
add
add
add
iret
bound
iret
popf
into
jae
scas
pushf
fcoms
or
inc
pop
out
pop
es
test
mov
or
nop
add
mov
mov
iret
fnstsw
jmp
pop
out
push
or
push
int
push
ljmp
mov
lret
jp
hlt
incb
add
mov
aaa
add
jmp
jbe
out
fisttpll
add
sar
jnp
fidivrl
addr16
loope
lret
mov
call
jle
cld
mov
stos
mov
or
iret
dec
cmpsb
adc
aam
lock
inc
pushf
notl
iret
bound
jle
packuswb
jmp
iret
mov
rsqrtps
iret
inc
mov
add
jg
imul
jmp
mov
push
jae
jmp
iret
or
jle
ljmp
les
int3
jg
sub
jg
push
and
repnz
cmp
cli
mov
int
rorl
cmpsb
dec
add
xchg
mov
in
push
jle
add
jmp
push
insl
cli
jle
jle
in
pop
subl
mov
jle
pop
aaa
imul
je
jle
sub
loopne
jo
gs
ss
jle
inc
cmp
adc
jns
mov
or
arpl
stos
add
or
fldt
incl
jnp
or
sti
mov
add
ds
mov
insb
sti
call
jnp
or
add
loopne
incl
cmp
or
sbb
inc
jp
or
mov
mov
jnp
mov
jb
decl
test
icebp
jp
lock
decl
push
repz
jb
decl
jp
clc
fbstp
call
jp
cld
iret
jle
ja
mov
pop
mov
jmp
jne
and
repz
incb
or
iret
data16
ja
push
inc
iret
into
push
pop
mov
je
inc
es
sub
sbb
inc
inc
iret
adc
mov
repnz
cwtl
xchg
push
pop
push
imul
cli
pusha
out
jp
lock
pushw
add
jp
addr16
lock
push
push
push
add
add
push
sti
jmp
jns
cld
sub
pop
cld
fwait
xchg
push
inc
jnp
lret
jecxz
push
insb
sti
jne
addr16
stc
jp
ret
jl
pop
fisttpl
jmp
sti
fxch
adc
ret
sbb
iret
mov
mov
jp
insb
into
jg
mov
iret
iret
mov
addr16
jp
dec
push
jp
int
add
imul
in
insl
lods
jp
or
sti
push
or
ss
jns
xchg
jmp
add
adc
sahf
xchg
push
jg
bnd
mov
js
stos
lock
jb
int3
leave
in
inc
fimull
int3
jg
jmp
cmp
lret
cld
hlt
jmp
add
or
cmovp
push
lret
jle
mov
repz
jg
add
fmuls
in
push
test
addr16
jge
jp
sub
loop
add
test
adc
mov
push
or
out
push
pushl
pop
push
inc
and
cmp
es
and
push
inc
imulb
push
ljmp
add
divb
xchg
cltd
mov
add
xor
jns
xchg
pop
out
les
mov
push
inc
cmpsb
jl
add
inc
push
leave
xor
or
sub
js
or
push
inc
in
push
inc
iret
in
add
mov
data16
push
inc
dec
add
pushw
add
sub
add
add
add
dec
stos
clc
push
inc
and
or
cli
add
lret
add
das
enter
xor
cmp
dec
add
mov
push
mov
insl
inc
subl
mov
arpl
sub
and
pop
repz
push
in
ja
jl
popa
shrb
add
mov
xchg
jmp
or
clc
cwtl
fisubrl
xor
idiv
mov
jg
push
push
xlat
movsb
add
or
in
mov
dec
mov
jl
jmp
outsl
xor
arpl
adc
xlat
and
dec
cmp
or
jo
jl
jg
sbb
inc
jmp
mov
add
jae
clc
xchg
div
jnp
sbbl
jg
pop
icebp
hlt
push
aad
jmp
lret
jbe
inc
inc
mov
sub
add
jmp
sahf
xor
les
js
rorb
jle
jg
icebp
jl
jbe
pop
imul
push
jle
xor
or
xor
inc
add
jg
loope
add
mov
xor
addr16
shll
aas
jl
stos
mov
addr16
mov
jl
add
or
jnp
icebp
jne
imul
rorb
fs
mov
dec
add
mov
jne
jmp
fs
adc
ljmp
jnp
add
add
in
lcall
clc
insb
inc
out
into
or
inc
add
mov
inc
dec
lcallw
xchg
mov
jns
addl
cld
or
iret
data16
je
add
or
repz
call
pop
and
dec
cmc
data16
je
mov
add
fsub
inc
add
lea
inc
or
pop
push
cmovnp
add
test
pop
call
movsl
out
xor
clc
repnz
jp
pop
call
or
push
mov
push
add
push
dec
add
mov
push
mov
insl
jb
jg
insb
inc
loope
add
in
mov
out
out
jecxz
aam
clc
sbb
or
iret
addr16
jb
jg
imul
dec
jmp
out
jecxz
aam
mov
mov
lds
addr16
jg
imul
add
in
sbb
out
jecxz
and
data16
loopne
add
in
in
imul
add
shlb
iret
pop
cmpsl
outsl
shl
arpl
or
decb
cltd
and
jecxz
inc
jle
add
add
in
sahf
push
js
fcompl
insb
pop
xchg
lods
je
jle
mov
pop
add
jb
popa
adcl
pop
sti
sbb
jno
lods
and
outsl
push
shr
cmp
arpl
jmp
adc
ret
imul
xchg
and
js
and
std
jo
stc
std
ljmp
add
fucomp
loopne
push
xchg
out
jno
into
inc
jo
add
clc
loopne
mov
repz
jns
in
push
or
aas
std
out
cmp
cld
pop
cwtl
mov
jnp
les
cld
stc
insl
jge
mov
leave
data16
testl
lods
inc
pop
call
cmp
cmp
add
cmp
add
sbb
pop
es
add
xchg
jmp
ret
ret
push
mov
cli
int
mov
iret
xchg
iret
dec
lock
lea
incl
dec
arpl
cld
or
and
add
ja
push
test
cld
mov
negl
add
icebp
inc
jmp
mov
int3
pushw
jmp
sar
je
add
mov
dec
shr
shl
in
add
data16
and
loopne
call
arpl
add
mov
pop
cmpl
iret
mov
iret
pop
jmp
push
push
outsb
jg
add
leave
push
add
iret
fidivl
fdiv
bound
sbb
aas
and
push
jnp
ja
jp
ja
jp
add
in
iret
jp
jbe
add
inc
sub
xchg
add
imul
pop
jb
sub
hlt
jecxz
xchg
push
in
iret
jg
xor
jle
dec
int
jecxz
aaa
dec
and
and
mov
add
shl
jnp
sbb
imul
insb
fiaddl
in
int3
jg
rcl
orb
jmp
call
add
add
add
inc
jg
inc
cmpsl
inc
dec
ror
jg
jmp
int3
add
int
add
pusha
lret
orl
int3
jg
cld
xchg
xorl
push
pop
or
int3
jg
or
or
mov
imull
adc
in
int3
jg
inc
push
jg
jmp
sbb
pusha
call
and
jo
lret
repz
add
test
orl
call
mov
add
orl
mov
leave
inc
push
or
cmpsb
inc
dec
mov
imul
ljmp
inc
repz
dec
or
icebp
pop
test
pop
jns
dec
jo
push
jmp
in
xchg
pusha
ja
or
test
test
and
orl
ss
jns
mov
push
je
outsb
push
xchg
outsb
pop
push
call
lahf
push
pushf
pusha
mov
je
jg
jo
push
cmc
mov
cs
or
adc
xchg
push
loope
ds
outsb
iret
push
aad
dec
arpl
jne
jle
pusha
push
push
sub
push
push
push
out
insl
inc
add
iret
cmc
jns
ja
push
add
rorl
sub
aad
enter
add
push
loope
pop
into
repz
sub
jns
daa
jg
pop
iret
jg
in
addl
pop
insb
add
daa
outsl
movq
dec
ljmp
iret
pop
stos
in
pop
ja
mov
imul
cmp
jbe
push
jecxz
mov
mov
imul
add
test
and
cltd
imul
xchg
cmc
sti
fstpt
lcall
decb
fistpl
cmc
cmpsl
fistl
cmc
fisttpl
cmc
fildl
jge
outsb
aaa
orb
inc
dec
inc
into
jg
jmp
subb
push
cmpl
or
or
or
mov
jmp
add
add
add
int3
jg
outsb
push
or
ds
mov
mov
or
int3
jg
cmp
bound
imul
sahf
je
incl
addb
inc
imul
repz
je
loopne
or
icebp
data16
ret
cld
mov
xor
loope
and
push
add
inc
add
inc
jmp
lock
jmp
add
push
repz
jge
mov
jp
shlb
cmp
out
pop
jmp
fldz
sbb
ds
fnstsw
inc
inc
mov
jns
mov
mov
mov
push
pop
lock
xor
repz
add
ja,pt
or
repz
lock
in
notl
repz
lock
jmp
push
repz
add
push
jno
jnp
out
jno
in
push
push
lea
xchg
jecxz
sbb
push
rcpps
or
sub
rorb
push
or
push
or
in
or
aaa
pop
push
add
lret
dec
jp
repz
push
jmp
cwtl
or
mov
push
bound
iret
sbb
cmpsl
lret
mov
je
add
jle
inc
push
push
in
fisttpl
sti
subl
or
push
in
ret
out
adcl
ja
cmp
mov
popf
iret
dec
push
dec
push
mov
call
adc
fsubrl
lcall
inc
add
ljmp
movsb
add
repnz
add
sub
int3
pop
add
sub
sbb
and
mov
cld
mov
jmp
lahf
cld
lcall
es
jecxz
fwait
sub
jbe
cmp
jmp
lods
rorb
xor
dec
daa
pop
and
int3
jg
sub
rorb
mov
stos
mov
push
xor
repz
out
in
add
jo
repnz
imul
sbb
jb
pop
imulb
in
in
repnz
fisubrs
gs
adc
or
mov
or
mov
gs
cltd
dec
pop
rsqrtps
in
sbb
lret
mov
pop
repz
ds
data16
fs
mov
lock
sbbb
dec
add
add
pop
ljmp
imul
je
lret
daa
xor
or
and
repz
pop
repz
dec
cmc
xorl
icebp
jne
shl
jne
dec
push
xchg
pop
ljmp
aas
lock
icebp
mov
pop
repz
gs
push
lea
push
add
in
xchg
iret
aad
mov
fsubrp
out
inc
jmp
push
cltd
sbb
mov
movsl
jl
sbb
out
xchg
ljmp
icebp
flds
jp
mov
paddsb
push
cltd
stc
call
jmp
call
aam
bound
iret
xor
ja
mov
add
mov
jmp
add
fld
in
jae
out
dec
mov
insb
sbb
clc
mov
mov
dec
imul
cmp
fistpl
mov
jecxz
daa
mov
test
or
sub
add
adc
lds
jmp
xor
add
jmp
in
fsubr
neg
add
adc
jecxz
dec
push
in
iret
negb
xor
in
iret
xlat
popf
arpl
orb
lds
int3
jbe
sbb
adc
add
int3
bound
add
inc
sub
xlat
scas
or
pop
sbb
and
sub
hlt
ror
xlat
mov
inc
popf
aad
jmp
jmp
in
clc
inc
add
lret
es
neg
adc
loop
popa
jle
jmp
mov
mov
int3
in
loop
bound
in
lods
popa
repnz
icebp
mov
popa
js
pop
jns
jle
lock
aas
sar
repz
dec
mov
push
ret
inc
ljmp
dec
ljmp
inc
ljmp
add
add
add
pop
repz
inc
ljmp
outsb
repz
pop
jns
jle
repnz
fnstcw
push
mov
cli
int
fxch
sbb
push
outsb
ljmp
pop
push
aad
pusha
daa
jle
jne
pop
jns
sahf
bound
je
xchg
cmp
sbb
into
jae
out
inc
call
dec
adc
or
add
jg
call
push
push
call
addr16
in
push
inc
jl
shr
je
iret
lret
ret
mov
out
addr16
pop
push
add
scas
insb
lcall
lock
clc
inc
adc
dec
or
jp
out
push
push
or
add
xchg
xchg
inc
jecxz
add
iret
cld
or
push
jg
inc
ret
iret
rclb
add
ljmp
les
cmp
movsb
movsl
dec
scas
adc
fwait
push
dec
pusha
xchg
loope
addr16
sbb
and
mov
jb
mov
ljmp
cmp
loope
push
dec
sbb
mov
sbbl
jecxz
or
cmp
stos
loop
loope
cmp
pop
addl
or
add
loope
jecxz
mov
jns
out
or
scas
pop
test
rorl
jg
fs
push
repz
scas
iret
fs
int
or
pop
out
jmp
lret
out
or
fs
in
rorb
dec
inc
sub
pop
js
fs
repz
out
or
or
xchg
loopne
jmp
dec
pop
js
add
xor
repz
das
or
ss
repnz
hlt
mov
jmp
out
roll
icebp
fdiv
push
adc
or
add
sarl
add
jne
push
jns
test
jmp
repz
out
inc
cmpsb
xchg
in
idivb
repz
push
test
lock
popa
cmpsl
sbbl
in
or
repz
add
add
add
mov
mov
add
cmpb
cmp
or
ss
or
dec
add
popf
imul
jp
aaa
xor
ror
add
mov
jmp
loopne
imul
daa
push
push
aaa
imul
or
in
mulb
or
add
iret
sbb
add
call
sub
add
shl
adcb
or
add
push
decl
inc
cld
or
mov
add
popfw
test
mov
jg
or
iret
data16
test
push
push
ja
push
push
outsb
mov
lods
inc
iret
pop
cltd
or
call
es
push
orb
inc
fbld
daa
and
dec
pop
push
or
int3
rcr
or
xchg
pop
mov
ja
inc
add
pop
cmp
jns
sti
jmp
xlat
xchg
fstl
or
mov
fstl
jecxz
lock
icebp
or
sti
fdivrl
push
mov
mov
add
jg
xchg
pop
dec
fldl
jg
inc
add
mul
or
cmp
out
mov
mov
inc
test
pop
js
mov
icebp
mulb
andb
or
add
dec
jmp
dec
pop
js
movsb
inc
icebp
mov
mov
out
push
int3
pop
js
mov
add
movsl
xlat
icebp
mov
push
loope
adc
jbe
jmp
jmp
js
and
jp
or
dec
push
or
add
jg
lea
lock
mov
jle
call
xor
mul
fbld
jg
jbe
mov
dec
inc
mov
jns
into
cltd
lock
andl
or
add
dec
add
orl
mov
lock
or
add
add
add
add
ss
mov
jbe
jns
dec
mov
call
jg
push
add
or
xorl
add
icebp
jne
data16
iret
mov
mov
pop
push
bound
and
out
push
call
sbb
iret
pop
xchg
movsl
push
dec
add
pop
pop
or
jg
jp
bound
add
aaa
mov
iret
mov
xlat
xor
popl
ja
push
incl
jbe
add
icebp
xchg
addr16
inc
add
icebp
pop
or
test
push
out
mov
je
rcrb
mov
cmp
int3
jg
mov
int
movsl
movsl
dec
push
xlat
addr16
push
add
inc
sti
in
jmp
fisubrl
fcmovbe
aas
cwtl
cld
add
nop
out
add
sbb
enter
inc
push
sti
fnstenv
add
ss
mov
sub
incl
add
ret
pop
inc
in
mov
inc
add
test
cmovl
xor
jg
call
push
adcb
ret
xchg
jbe
jae
push
gs
dec
lcall
add
adc
repnz
negb
xchg
jmp
ja
es
mov
repnz
cmpsb
inc
iret
in
mov
add
lahf
in
xchg
sti
push
js
mov
jp
xchg
or
inc
mov
or
test
xchg
or
shl
pop
dec
or
pop
shr
fmull
lret
aas
jns
mov
push
pop
adc
jg
push
in
outsb
sub
add
scas
icebp
add
in
xchg
aaa
repz
dec
orb
jnp
cli
push
cmp
incl
lds
jne
push
jbe
aaa
push
pop
lahf
cmp
add
add
subl
icebp
jne
push
jne
test
jecxz
push
ljmp
mov
mov
sbb
jle
add
out
dec
addb
push
push
mov
jbe
icebp
jne
push
mov
divb
decb
mov
int
enter
push
push
lods
ret
and
push
push
lods
pop
or
cmp
or
dec
cld
ja
push
out
cmp
popa
mov
scas
insl
daa
push
lcall
out
cs
fsin
pop
test
je
outsb
ja
add
rclb
shll
mov
addr16
call
inc
pushf
aam
iret
data16
testl
leave
popa
push
jg
and
push
xchg
imul
mov
iret
out
popa
mov
push
addr16
movsb
xor
push
sub
or
xchg
fcom
sbb
call
lods
outsb
out
cmp
mov
add
push
push
xlat
jmp
adc
mov
or
imul
jg
dec
ret
jmp
pop
add
sbb
cs
xchg
lret
or
jecxz
xchg
inc
loopne
and
or
bound
jg
and
icebp
sbb
push
js
mov
icebp
cld
xor
sarl
add
lock
mov
jmpw
push
jmp
cmpsb
push
repnz
out
ror
addr16
int3
jg
adcb
outsl
jg
xor
push
lea
dec
iret
aad
push
pop
fldl
jg
inc
ret
jmpw
add
or
sbb
mov
ret
mov
icebp
jmp
test
add
pop
sbb
mov
inc
lea
sub
mov
lret
div
jae
cli
jo
mov
dec
repz
test
xchg
push
push
sub
call
jne
push
ljmp
jmp
loopne
cmc
xchg
pop
sbb
inc
div
push
fimuls
push
mov
add
clc
enter
cmp
stc
mov
mov
add
jnp
jne
mov
dec
mov
sbb
scas
lds
push
sar
sbb
dec
fcmovnu
std
push
jmp
inc
js
adc
mov
std
xor
fstl
in
sti
and
pushf
jnp
mov
or
cli
jp
fbstp
fidivs
add
mov
add
jo
je
jl
mov
fdivrp
ror
incb
dec
cmp
or
xor
jmp
cmp
jle
add
jp
mov
in
dec
add
lret
iret
sar
xchg
pusha
ret
jecxz
stos
dec
push
and
iret
out
outsb
js
push
mov
inc
outsb
pusha
dec
xor
arpl
nop
in
shlb
push
rolb
add
push
mov
pop
std
ror
add
shl
push
push
shlb
and
push
xchg
sti
andl
lret
add
out
jo
dec
fs
jle
push
or
fstpt
cmc
out
push
repnz
jg
bound
js
lahf
lret
adc
stos
int
mov
lret
add
rcr
jmp
leave
scas
icebp
sbb
add
push
js
and
jle
push
push
js
pop
lret
sbb
xorb
jp
repnz
insb
or
xchg
repnz
js
and
jl
push
push
js
adc
insb
jmp
js
icebp
pushf
in
add
pushf
rorb
lahf
aam
add
cmp
int3
adc
xchg
test
aaa
cmp
divl
into
mov
mov
add
repz
data16
xor
add
mov
cs
push
mov
lods
or
sub
pusha
es
mov
repz
orl
push
divl
or
sahf
daa
repz
orb
add
repnz
addb
out
mov
mov
jecxz
jmp
jge
dec
add
dec
fcmovnbe
divb
sub
je
pop
pop
or
sub
shl
cmpb
add
fstps
call
in
add
pop
lret
test
sar
pop
sarl
iret
roll
dec
aaa
sbb
add
jecxz
jae
popf
adc
lods
roll
lds
add
or
add
lock
call
dec
cwtl
push
and
jg
mov
iret
pop
pop
pop
xlat
loopne
add
in
mov
xchg
fistl
jecxz
dec
inc
rorl
daa
insb
inc
inc
iret
cli
pusha
add
xlat
inc
add
js
push
fiadds
stc
fwait
adc
add
iret
jg
cwtl
xor
into
push
add
and
jae
add
pop
add
mov
push
imul
ftst
pop
iret
pop
iret
adcb
into
icebp
scas
xor
xor
int3
mov
dec
js
add
pop
jo
repnz
mov
sbb
push
xor
lcall
xor
push
repnz
push
jmp
sbb
fwait
push
repnz
repnz
add
mov
xchg
imul
sahf
adc
or
jg
mov
jo
adc
pop
mov
sbb
int3
jg
sub
js
cmp
add
add
mov
xor
push
cltd
mov
call
std
or
ss
jle
aam
add
adc
cs
imulb
mov
jmp
add
imul
inc
jbe
dec
fdivs
jg
les
dec
fadd
cmp
rorb
dec
shl
add
adc
adc
jmp
cmp
aam
fwait
insl
inc
ss
mov
rcrb
jg
cli
leave
dec
fmul
or
je
rcll
fisttpl
jg
pop
shlb
insb
inc
add
iret
mov
push
call
les
push
add
mov
and
or
or
mov
jmp
inc
aas
inc
pop
or
mov
jbe
sbb
fwait
int3
xchg
lods
or
iret
pop
mov
popf
inc
add
dec
lea
jle
push
stos
dec
mov
jg
add
add
and
je
aas
mov
ret
jl
dec
sub
pop
dec
int3
roll
arpl
xor
adcb
xlat
dec
xchg
mov
jl
push
iret
pop
xor
aas
dec
sti
lret
pop
fsubl
sarl
lret
mov
jp
lret
aaa
cmpsb
mull
outsb
xlat
dec
inc
lods
js
dec
xor
add
and
add
mov
or
inc
iret
push
xchg
iret
jg
ret
shl
or
int3
jg
fisttps
sti
xchg
hlt
mov
ret
sub
add
mov
push
fsubr
int3
jg
movaps
movsb
jl
or
int3
inc
dec
sub
sbb
mov
cli
inc
mov
add
or
cmp
int3
cmp
cld
outsl
lods
int3
rolb
adc
or
loop
sarl
test
jns
or
lahf
mov
jmp
aas
dec
enter
add
lcall
sbb
jne
and
std
xorl
xor
idivb
jge
cmpl
mov
or
ffree
xchg
les
incl
add
repz
sahf
les
sbb
cmp
cmp
in
sub
and
outsb
inc
xorw
inc
lcall
xorl
cmp
lret
es
movl
iret
imul
ljmp
adcl
add
dec
mov
cmovnp
or
add
fcom
out
jmp
pop
int
fistpl
add
popf
xor
iret
pop
push
add
lret
adc
dec
and
sbb
mov
popa
into
push
dec
mov
clc
iret
push
jb
iret
pop
push
xor
or
push
cli
or
iret
rcrl
data16
add
outsb
jne
dec
jg
in
push
mov
push
cmp
pop
arpl
add
movsb
add
sbbl
add
inc
mov
iret
jg
inc
imull
fldl
dec
mov
push
inc
mov
mov
nop
sbb
add
popf
dec
add
pop
int3
rol
sbb
push
ja
push
fadds
jg
test
faddp
imul
add
add
movsl
or
xchg
inc
mov
int3
lret
add
jg
insb
cltd
inc
repnz
int3
lock
roll
shll
pop
bound
add
popa
cmpsb
jg
push
adc
add
sbb
mov
inc
test
jg
notb
mov
or
mov
mov
adc
in
dec
ret
hlt
jmp
add
add
add
incl
lods
sub
inc
js
xchg
lret
add
push
inc
repnz
out
hlt
add
push
repz
cmp
mov
call
imul
inc
inc
ljmp
jg
push
lods
daa
pop
xchg
add
in
or
out
jns
mov
idiv
stc
add
dec
daa
sarb
hlt
inc
repnz
enter
jle
fsubrs
jg
jne
enter
xchg
push
mov
dec
jb
scas
mov
orb
leave
inc
frstor
mov
or
mov
lds
daa
pop
push
pop
idiv
hlt
sub
das
inc
add
sub
push
jecxz
pop
or
lcall
hlt
pop
adc
add
add
add
add
push
shr
hlt
ret
xor
dec
movsl
je
into
xor
dec
jns
xchg
inc
or
lret
insl
or
cmp
sbb
pop
lea
dec
aas
push
decb
push
jg
dec
ja
rcrb
daa
mov
add
aas
pop
decb
scas
add
mov
ret
imulb
mov
js
out
inc
notb
mov
add
add
add
inc
sti
mov
sbb
roll
mov
jg
cmp
push
mov
iret
jg
add
cwtl
mov
push
les
ja
pop
inc
push
addr16
jecxz
inc
dec
add
inc
sub
out
jg
stos
add
push
mov
jecxz
cmpsl
pushf
or
lea
movsb
cmp
or
sarl
testb
mov
push
gs
lret
mov
rcrl
pusha
cmpsb
or
jg
jmp
or
inc
js
in
push
insl
xor
push
jmp
or
fmull
or
cmpsl
or
dec
cmp
mov
testl
push
add
xlat
data16
or
sbb
or
stos
jo
jne
xchg
outsl
cmpsl
jnp
jne
adc
les
jns
ljmp
push
cld
push
add
sti
int
push
mov
mov
mov
call
movsl
aaa
push
push
jns,pt
jno
add
fldt
pop
jo
test
add
add
jne
ds
outsb
ret
jbe
icebp
aas
shrb
inc
jns
iret
xchg
cmp
push
faddl
sub
mov
xchg
and
xorb
xorl
jmp
dec
aam
sub
je
cmp
dec
cmp
inc
mov
cmpsb
std
test
int3
mov
jns
je
push
cmp
add
cld
fildl
sub
mov
sub
add
call
movsb
fsubrs
mov
sbb
add
leave
dec
mov
iret
adc
test
push
in
iret
add
xchg
dec
xchg
rolb
fdiv
jae
rorl
mov
and
in
call
add
mov
xlat
daa
fldcw
mov
or
mov
mov
and
mov
addl
mov
sbb
mull
mov
fnstenv
pop
push
ss
shr
xchg
lea
rclb
js,pt
fs
gs
push
sub
xchg
add
int3
cmp
loope
cli
fs
cmp
js
and
pusha
fisubrs
js,pt
xor
data16
sbb
js
and
mov
js
je
data16
jns
js
fs
data16
imul
data16
js
fs
data16
js,pt
xor
data16
cmp
js
and
pop
sub
js
xor
gs
sbb
js
mov
mov
jne
add
call
bnd
call
push
mov
cli
repnz
cld
inc
incl
icebp
xor
sahf
mov
add
int3
psllq
dec
clc
data16
clc
pushl
orb
data16
es
repz
dec
shl
jne
cli
js
pop
add
testb
add
add
add
add
call
fs
push
rorl
pop
add
idiv
mov
jg
fmuls
sbb
sti
mov
inc
lods
mov
sbb
adc
dec
add
xor
add
and
push
push
mov
sbb
mov
pop
dec
jl
add
repnz
add
xor
test
adc
negb
or
or
movsb
mov
add
sub
scas
loope
push
mov
fnstcw
cltd
stos
fnstcw
dec
mov
ret
cmp
cmpb
mov
test
cmp
cmp
mov
mov
push
sub
xor
mov
add
insb
cmp
mov
pop
cmp
xor
cmp
mov
inc
cmp
xchg
lcall
push
push
sub
adc
jecxz
fistpll
icebp
or
pop
or
aaa
mov
icebp
daa
scas
pop
and
repnz
cmp
and
imul
rolb
xchg
sbb
cmp
add
je
imul
inc
je
mov
addb
dec
jp
jne
test
dec
adc
or
leave
aas
jns
daa
lret
cmp
lret
jg
ja
sti
push
sbb
daa
fidivrs
cmp
mov
cmp
or
mov
adc
cli
test
sarb
lahf
cmp
outsl
mov
sti
lock
add
in
addr16
push
add
out
ljmp
pushl
jl
add
xor
mov
in
ret
ret
mov
data16
jmp
add
jbe
pop
mov
push
in
mov
repnz
add
clc
shll
jg
div
or
imul
add
add
add
data16
or
iret
cmp
jmp
movsl
scas
pop
sbbb
negl
pop
push
movb
xchg
into
test
pop
mov
sarl
es
rcl
test
inc
fdivl
andl
adc
and
mov
je
addl
lret
jae
jmp
frstor
add
add
xchg
enter
push
incl
aad
inc
iret
inc
mov
sub
popa
ds
mov
jo
cmpl
ss
mov
andb
jg
and
fsubrs
cs
daa
push
and
ss
lret
jp
adc
add
cs
enter
or
inc
add
jnp
adc
fstpl
add
push
push
add
add
ss
or
xchg
inc
mov
xor
inc
lods
sti
stos
mov
pop
aad
js
sbb
sub
mov
xchg
inc
add
jmp
cmp
hlt
jbe
xchg
lahf
lods
ss
js
and
aaa
repnz
sbb
repnz
add
ss
int3
mov
add
pushf
adc
adc
pop
sbb
or
movsb
fdivrs
ficomps
xor
bound
xchg
or
mov
xchg
cld
shr
repnz
js
test
decb
jne
add
add
jne
add
pop
dec
or
in
js
jle
fs
jns
dec
adc
cmp
pop
add
arpl
out
loop
xchg
cmc
or
mov
or
aam
dec
or
orb
add
orl
jne
in
js
dec
andl
imul
or
iret
test
jmp
mov
dec
cmp
inc
add
sub
and
pop
mov
daa
test
add
lea
and
lock
jmp
cmpsb
sbb
xchg
shlb
push
shll
cld
pop
sar
mov
sub
subl
or
adc
addb
xorb
iret
push
push
call
jbe
or
add
add
add
add
jg
ss
jnp
loope
lods
repz
xchg
pusha
scas
xor
mov
movsl
jecxz
roll
mov
sbb
popf
mov
jg
orb
icebp
adc
jb
daa
js
call
jg
stos
gs
dec
mov
std
inc
pusha
inc
fbld
pop
aam
xor
mov
mov
add
add
sub
sarl
jecxz
lods
shrl
xor
mov
xor
pop
mov
or
rcll
into
bound
outsl
in
xor
adc
int3
jg
sbb
movsl
or
movl
cmp
in
sarl
push
addl
fdivrs
dec
insl
lret
jmp
add
int3
movsl
or
pop
inc
or
repnz
pop
push
or
in
lods
push
jno
jg
jmp
int3
cld
outsl
in
lods
push
push
lret
jg
add
mov
data16
jge
xor
dec
jle
out
add
mov
out
in
js
mov
testl
data16
test
out
js
xor
incl
add
jecxz
jne
adc
pusha
push
out
bnd
xchg
push
jmp
bnd
adc
std
jno
bnd
adc
gs
mov
jmp
stc
jo
mov
ja
xorl
jge
mov
add
repnz
ljmp
fs
and
adc
mov
ficompl
mov
pusha
add
inc
inc
mov
mov
ds
std
and
mov
adc
popa
add
es
jmp
into
or
iret
es
fbld
pop
mov
popl
add
iret
lods
cmp
mov
mov
mov
das
push
jne
jbe
or
or
mov
inc
xlat
cli
mov
add
add
add
add
push
test
jecxz
sar
nop
adc
push
push
dec
lods
out
add
ja
push
jecxz
push
or
data16
jg
sti
inc
aad
push
pop
andb
cmp
lahf
dec
inc
mov
mov
and
iret
jg
inc
ret
inc
in
iret
jg
test
jecxz
pop
and
cmp
dec
sub
mov
add
pop
and
cmp
movsb
fs
push
push
aas
inc
dec
sbb
stc
ret
loopne
icebp
ret
clc
cltd
pop
mov
add
ret
loopne
push
add
shll
add
adc
push
mov
jp
adc
ljmp
sarl
jmp
cltd
into
ret
stos
iret
jg
and
aas
in
jmp
pop
gs
add
add
add
cmp
hlt
cmpsb
xchg
or
sbb
cld
mov
imul
lock
shl
mov
fdivl
js
fidivrs
pop
sub
lret
or
dec
inc
call
cmc
outsb
in
loopne
lea
xorl
mov
xorl
data16
int
push
pop
outsl
aas
push
add
jbe
mov
orb
xchg
icebp
jne
scas
icebp
mov
shl
loopne
fdiv
mov
cmp
js
iret
roll
lretw
push
push
add
fwait
inc
loopne
mov
mov
cli
mov
jl
push
cmp
dec
add
jl
push
cmp
add
pop
mov
out
mov
fsub
cmc
push
mov
out
mov
inc
pop
push
fmuls
inc
arpl
orb
and
iret
xchg
pushf
mov
popf
or
pop
mov
dec
insb
popf
lahf
mov
jg
add
leave
mov
mov
inc
sbb
enter
das
mov
and
ret
mov
push
xor
out
cli
movsb
add
repz
sub
popa
mov
fwait
sub
loop
dec
lods
repz
jnp
add
pop
jg
xor
lret
ss
sub
cld
sub
sbb
adc
fwait
je
sub
ss
pop
pop
dec
call
sub
loope
or
jnp
js
jae
add
mov
icebp
dec
aaa
les
push
sub
dec
stos
lock
jl
lods
pusha
cmpl
ljmp
pusha
cld
dec
jmp
xor
or
mov
ret
sub
jg
insb
and
sbb
ja
add
aaa
gs
dec
mov
clc
add
cmpsb
mov
add
and
xor
sub
add
jecxz
stos
lea
out
add
stos
fldl2t
inc
xchg
repnz
mov
ret
lea
jg
test
or
int
out
sub
fwait
push
inc
out
or
loope
add
sbb
outsb
sbb
mov
sub
arpl
xor
lcall
add
repnz
lea
ss
fucomi
jmp
sub
ret
ret
icebp
jne
aam
adc
adc
bound
xchg
xchg
loope
cmpsb
or
sub
pop
mov
lds
mov
mov
jecxz
dec
cmp
iret
aaa
lea
push
cmpsl
je
jno
or
repz
out
pusha
cmpsb
aam
testb
jo
mov
mov
inc
leave
lea
jmp
dec
mov
cld
add
push
sar
orb
push
and
xchg
out
add
and
idivl
dec
add
push
add
mov
test
ja
gs
mov
xchg
data16
mov
test
xor
add
fdivrl
aad
jge
cwtl
add
test
in
or
add
js
xor
adc
test
sub
out
es
and
cmp
mov
mulb
mov
addr16
les
in
popf
test
daa
in
pop
add
adc
or
dec
xchg
in
mov
jp
pop
pop
and
ret
xchg
add
int3
lret
or
adcb
int3
call
movsb
pop
mov
sub
mov
mov
mov
aaa
and
icebp
xchg
sub
nop
mov
and
iret
clc
inc
sbb
xorb
rcll
repnz
inc
in
cwtl
repnz
add
js
jge
jnp
pop
cmp
jmp
xor
jne
fdivrl
pop
rclb
ret
xor
add
repnz
or
push
lock
cmp
js
push
shrl
or
cmpsb
adcl
sbb
sub
rorb
pop
dec
add
push
jns
cmp
lret
or
icebp
lcall
add
add
xchg
icebp
stc
aad
inc
fidivrs
add
dec
iret
push
push
or
int3
or
fprem1
call
into
mov
std
movsb
in
jp
stos
je
push
jge
iret
push
idivl
or
jnp
add
and
out
bound
add
push
cmp
mov
stos
ja
iret
ds
fs
pop
stos
je
into
rorb
push
idivl
add
add
add
add
stos
je
lods
or
dec
xlat
or
add
mul
shl
or
or
stc
mov
mov
stos
add
jg
inc
push
inc
in
add
sub
dec
cmpsl
das
dec
inc
iret
and
cld
lock
das
add
js
das
rol
xor
push
das
outsl
daa
xlat
sbb
pop
pop
gs
aad
or
add
cmp
insl
add
lods
loope
or
es
test
movsl
pop
arpl
stos
faddl
dec
arpl
das
enter
sti
jne
in
lods
call
add
arpl
stc
dec
lret
and
jmp
int3
jg
jmp
out
xor
call
and
cmp
sbb
add
cmp
int
or
inc
mov
and
orb
lods
push
cmpsl
roll
bnd
jmp
adc
or
les
ja
push
jns
scas
dec
popa
or
cld
cmc
outsl
icebp
push
xchg
mov
sub
mov
test
add
and
cmpl
xor
ja
add
imul
test
shrl
adcb
jns
cmp
mov
loopne
std
cmp
ret
ret
test
test
dec
hlt
test
in
jne
data16
xor
repnz
jo
int3
add
push
lret
cli
jo
cmpsb
mov
addl
ja
xchg
mov
test
add
and
add
roll
xchg
imul
outsl
cltd
inc
add
xchg
jne
iret
push
roll
xchg
dec
add
xchg
addb
push
popf
inc
and
fwait
inc
or
dec
add
cmp
xor
scas
pop
push
mov
dec
dec
push
cwtl
dec
shr
imul
mov
out
inc
scas
out
inc
add
stos
out
xor
test
add
outsb
scas
incb
subb
sti
inc
arpl
cmp
add
aaa
xor
jle
add
jg
dec
and
ljmp
aas
jmp
jle
add
add
sti
jecxz
iret
jg
dec
adc
leave
clc
popl
jg
lea
outsl
pop
add
adc
add
in
jl
push
adc
pop
lahf
sub
mov
loop
lcall
add
add
add
jg
pop
jae
or
dec
int3
push
js
and
push
or
cs
lock
rolb
cmp
push
pushf
outsl
push
cmpsb
jmp
or
cld
cmpsl
inc
inc
mov
pop
adc
mov
sarl
test
add
add
add
mov
rorb
or
mov
jg
adc
daa
fs
jg
test
test
or
xor
or
cld
cmpsl
push
add
xor
test
inc
mov
jg
sub
cs
or
call
mov
xor
jp
pop
pop
leave
fcomip
jne
fistpll
leave
jne
call
add
dec
je
inc
ljmp
sub
bnd
js
stc
ja
call
or
call
fstps
ret
push
mov
into
call
jmp
cmpl
dec
push
jg
cmp
sub
call
xor
and
push
lcall
pop
addl
push
daa
xchg
je
mov
pop
rcr
mov
pusha
daa
popf
inc
arpl
pushf
inc
push
negl
inc
pushf
std
out
adc
nop
add
mov
xchg
je
mov
cmpsb
inc
nop
es
or
test
mov
cmp
lea
or
xchg
dec
test
test
add
add
add
iret
es
mov
orb
or
scas
push
ret
dec
ret
inc
ret
cmc
xorl
fbld
insl
xchg
jns
and
nop
ds
subb
sbbb
pop
sbb
or
or
repz
or
loop
xor
pop
and
out
and
inc
daa
jle
add
add
sbbb
pushf
jl
data16
and
add
add
add
add
xchg
ret
subb
adc
jo
pop
inc
iret
or
lods
sbb
stc
scas
rcll
add
inc
sbb
push
daa
repnz
daa
xor
cld
cltd
pop
xchg
add
sbb
js
xchg
inc
add
xor
minps
fnstenv
js
add
add
loopne
int3
jg
fs
sub
mov
sbb
repnz
or
sub
mov
orl
inc
out
sbb
xchg
add
repz
orl
add
cmpsb
push
add
inc
or
inc
xchg
jg
cmpsb
or
data16
js
push
mov
inc
stc
add
orl
add
add
add
add
icebp
je
daa
mov
movsb
xchg
mov
sti
repnz
js
mov
or
add
outsl
or
dec
int3
or
push
dec
in
out
js
push
jae
jmp
mov
jne
add
imulb
sub
call
test
xchg
je
out
cmp
mov
adc
subl
or
insl
enter
lea
push
lea
pop
cmp
add
cmpsb
sbb
xorb
push
dec
in
test
mov
dec
in
test
call
dec
jg
je
movsl
adc
iret
xchg
or
movl
jg
call
and
mov
incl
jmp
in
aam
stos
push
pusha
andl
add
add
add
jecxz
sbb
hlt
aas
mov
jnp
mov
adc
negl
rorl
mov
mov
pop
sarb
inc
jnp
fldl
xchg
fistps
jns
and
mov
addr16
add
sbb
dec
sbb
adc
jns
daa
sub
psubusb
push
or
xchg
iret
lods
aad
fistpl
add
or
mov
pop
cmp
test
cmpb
lret
sbb
jnp
dec
xchg
adcb
icebp
hlt
mov
daa
test
push
in
aam
repnz
sub
int3
es
mov
add
and
icebp
push
ss
or
ja
fs
out
rorb
andl
mov
movsb
adc
or
jbe
lret
jg
push
xlat
test
add
fs
decl
push
fs
icebp
jne
fs
mov
in
pop
div
push
fiadds
inc
cmpsb
idivl
int3
sbb
jne
ljmp
cmpsb
out
push
or
or
cs
mov
gs
in
cmc
push
fs
in
arpl
repnz
imul
mov
dec
sub
repnz
and
enter
push
inc
inc
mov
repz
pushf
in
or
sti
cmp
fmuls
sub
add
fwait
mov
add
insb
cltd
xchg
imul
mov
cltd
je
scas
and
inc
jae
mov
fwait
je
outsb
movsl
std
pop
jbe
add
sub
decb
xor
iret
dec
add
inc
aaa
ljmp
and
jae
jg
inc
pop
test
push
sarb
add
and
sub
pushf
and
clc
mov
xchg
jnp
lret
roll
add
mov
add
jg
cmpsb
adc
adcb
adc
or
adc
fwait
mov
sbb
cltd
mov
stos
aam
pop
xchg
xchg
inc
call
orb
adc
daa
inc
das
pusha
adc
inc
pop
cmpsl
aas
and
sbbb
xlat
daa
test
cmp
or
mov
inc
adc
and
jb
add
fucom
jg
pop
bound
icebp
movb
sbbb
shr
repnz
inc
mov
sahf
rolb
mov
inc
daa
mov
lcall
inc
or
jecxz
addr16
adc
xor
lock
bound
js
pop
mov
hlt
scas
icebp
cs
inc
or
add
test
pop
addr16
aam
inc
add
repnz
imul
fwait
xchg
int
in
repnz
jnp
bnd
out
push
adc
push
mov
in
js
push
rclb
mov
je
arpl
cmpsl
jnp
call
push
in
js
in
js
pop
sub
jmp
out
push
xor
push
mov
add
add
clc
dec
push
js
push
call
dec
cld
in
sub
jle
aas
data16
jno
add
shll
or
xchg
cmp
push
ljmp
sbb
xor
sbb
adc
mull
adc
gs
je
xor
call
mov
xchg
imul
popf
add
mov
inc
add
insb
and
pusha
popf
inc
out
adc
mov
clc
jmp
mov
nop
scas
fstl
stos
popf
je
mov
pushf
xor
dec
lcall
adcb
lods
sbb
iret
stos
jle
xor
cli
xchg
aad
js
mov
inc
inc
iret
scas
fistl
add
add
sti
fwait
subl
xchg
lock
xchg
loope
cmpsb
fsubrs
lods
cmp
mov
fwait
lret
xchg
inc
mov
sub
jmp
mov
ja
movsl
add
test
pop
mov
adc
sub
hlt
cs
add
mov
push
adc
push
pop
mov
addl
sub
js
push
xchg
icebp
adc
ret
pop
icebp
je
sbb
ds
push
pop
sbb
pop
adc
sbb
xlat
icebp
pop
adc
sbb
mov
mov
scas
rolb
test
jmp
xchg
pop
adc
cltd
xor
insl
repnz
adc
and
mov
jmp
or
repnz
add
cltd
dec
add
mov
aad
in
dec
lock
orl
imul
sbbl
ljmp
push
icebp
ljmp
xor
mov
and
cmp
mov
lock
push
jb
ljmp
push
ret
ret
push
mov
add
call
testl
or
cmpsb
insb
icebp
incl
add
and
out
or
arpl
bnd
ljmp
adc
sbb
cmc
dec
pushf
je
inc
push
push
rcrb
iret
sbb
inc
enter
sbb
adc
test
pop
xchg
xlat
or
xchg
sbb
mov
jbe
pop
arpl
adc
push
sub
aam
push
add
mov
fstl
lock
dec
dec
nop
inc
call
mov
imul
sbb
cmp
add
sbb
and
or
fildl
iret
sbb
mov
or
sub
cmp
mov
cmp
mov
or
scas
mov
add
stc
cwtl
xchg
inc
jb
sbb
or
xlat
fwait
divb
clc
add
jnp
inc
ja
mov
sbb
movsl
and
pop
sbb
sbb
inc
and
aaa
and
bound
or
inc
xchg
add
xchg
pop
push
dec
or
push
inc
pop
jns
mov
movsb
adc
adc
out
icebp
es
xchg
mov
jmp
adc
dec
jmp
inc
xor
dec
and
lcall
pop
jb
add
aad
jg
or
xchg
inc
in
js
xor
icebp
cmpsb
pop
cltd
sub
cmovp
repnz
out
jmp
std
bnd
std
js
dec
inc
inc
incl
add
lret
add
push
test
and
call
pop
aas
jle
jle
push
sbb
cld
repnz
pop
jg
out
mov
jg
lcall
ljmp
push
icebp
out
cmp
in
cmp
arpl
pushf
cmp
jne
out
push
add
test
imul
stos
and
repnz
cld
js
pop
sahf
repnz
add
adc
iret
imul
pop
stc
cmp
or
dec
call
push
push
push
mov
ret
xchg
adc
in
jg
mov
jbe
arpl
or
inc
mov
sub
rcll
or
hlt
rcll
cli
and
and
dec
clc
cmpsl
sbb
out
dec
mov
data16
xchg
divl
sbb
out
add
call
inc
cmp
fcom
fnstcw
enter
clc
sbbb
mov
js
mov
or
add
cmc
xchg
iret
xchg
sub
or
pop
jge
or
leave
mov
add
jecxz
adc
lcall
aas
cwtl
frstor
add
or
ret
pushf
pop
jl
daa
cwtl
jecxz
sub
mov
mov
jmp
xlat
pop
or
notl
fdivl
or
and
mov
or
xor
mov
fs
mov
dec
jmp
pushf
test
jle
jg
repz
mov
dec
jmp
adc
repnz
add
nopl
les
imul
xor
xchg
dec
jmp
inc
testl
out
mov
dec
jmp
mov
dec
mov
jo
jne
mov
dec
add
idivb
into
sahf
mov
icebp
ljmp
inc
in
jmp
icebp
jae
cld
jo
cmpsb
ja
sbb
icebp
jae
add
mov
testb
bnd
stc
js
push
dec
inc
lcall
stc
js
sbb
call
cltd
jbe
call
or
cmp
clc
bnd
bnd
clc
js
into
jge
fprem
js
mov
clc
js
into
add
stc
idivl
push
jl
lcall
clc
js
iret
inc
orl
cmp
out
ss
insl
mov
rcrl
and
and
arpl
out
cmp
push
test
jb
push
negl
push
add
mov
mov
push
rolb
pushl
push
add
adc
push
inc
jecxz
out
filds
sub
cld
and
test
add
push
pop
icebp
jmp
jg
das
gs
inc
lock
fwait
push
mov
xchg
jnp
mov
inc
iret
cli
add
dec
cmpsl
sub
add
js
adc
lods
mov
push
add
in
xor
and
dec
cwtl
pusha
push
push
xorb
testl
xchg
dec
pop
add
sti
incb
add
aas
and
inc
add
mov
ret
mov
mov
add
jl
sbb
test
cli
das
cmp
add
imul
pop
add
sub
cmpsb
push
jns
adc
int3
adc
add
add
icebp
xor
je
push
sbb
push
add
dec
add
icebp
pop
dec
add
ja
pusha
in
test
repnz
dec
jmp
push
add
loope
les
test
scas
icebp
add
std
bnd
dec
and
fnsave
outsl
sub
bound
cmpsb
jecxz
push
adc
inc
push
push
adc
mov
icebp
jne
add
std
jmp
mov
out
dec
adc
push
leave
xor
or
in
out
les
mov
ss
js
push
fstpl
adc
mov
push
add
fs
mov
cmpl
adc
jb
call
and
cld
sbb
hlt
xchg
or
call
add
push
xlat
stc
incl
xor
gs
xchg
rorl
leave
jbe
ret
mov
fsubl
sbb
add
sbb
inc
fadds
aas
inc
pop
andb
dec
add
pop
or
les
and
xchg
push
rorb
leave
nopl
add
mov
mov
sbb
add
dec
mov
test
mov
fwait
inc
mov
test
mov
addl
jecxz
push
jnp
fadds
addr16
in
jecxz
mov
pop
or
sarl
adc
sub
sbbb
mov
mov
mov
add
stc
enter
mov
lods
inc
int3
jg
fs
pop
jl
jg
jb
add
or
add
scas
sbbb
mov
imul
js
dec
mov
cmc
mov
push
dec
mov
es
icebp
xchg
les
icebp
mov
add
hlt
mov
in
mov
mov
xchg
xor
shl
push
roll
js
xor
ss
lds
pop
mov
in
add
test
add
pop
mov
loope
dec
mov
js
icebp
pop
dec
mov
push
addr16
and
or
incl
std
repnz
std
js
mov
mov
adc
daa
xchg
movsl
mov
js
aaa
jl
je
stc
xor
cmp
incl
xor
out
movl
add
add
add
or
jle
or
cmpsb
push
dec
cld
testb
clc
out
icebp
addr16
dec
add
jl
out
add
jge
cmpl
cmc
add
insl
orps
popa
ss
lock
inc
testb
aaa
ds
mov
scas
mov
xor
adcb
mov
stc
add
iret
or
sti
add
or
stc
dec
mov
jmp
or
aad
ret
jecxz
inc
inc
out
or
repz
call
sbb
mov
xchg
or
sbb
sbb
iret
orb
mov
or
xor
cltd
pusha
loopne
outsb
mov
idivb
add
sarb
je
sbb
fldl
mov
pop
js
add
jg
or
je
cmpb
adc
mul
add
jg
sbb
rorl
je
cmpb
add
jecxz
sub
jmp
mov
add
movsb
mov
jmp
cmp
mov
cli
add
mov
insb
sbb
inc
inc
xchg
cld
lock
call
or
add
sarl
mov
data16
in
nop
icebp
bound
mov
push
jmp
pop
push
daa
inc
test
jg
out
or
sub
dec
icebp
xchg
shl
cwtl
mov
add
call
jo
icebp
stc
int3
mov
xlat
clc
icebp
push
push
in
sbb
incb
call
add
dec
std
ja
mov
push
lret
out
xchg
sbb
andl
ja
push
jge
clc
fisubs
inc
pushw
loope
test
jge
cld
add
stc
push
push
xor
call
jg
add
add
add
orb
mov
jg
add
add
jne
push
test
or
mov
add
push
in
std
lods
push
ret
or
mov
in
sarb
and
push
cmp
orb
add
jg
fisttps
shr
dec
test
mov
stc
out
sub
or
add
call
in
mov
jecxz
mov
jecxz
dec
sub
dec
xor
movsl
dec
mov
add
add
fwait
mov
stc
sbb
adc
incb
stc
cli
jmp
jnp
call
call
xchg
or
fcomps
out
sahf
outsl
dec
mov
outsl
mov
sahf
outsl
pop
jg
je
call
cmp
xchg
cwtl
orb
test
jecxz
imul
fmuls
add
addr16
pop
jl
gs
jl
mov
lret
dec
lock
add
ljmp
jg
nop
or
fists
add
repnz
hlt
stc
jo
out
stos
jl
movsl
add
push
jle
dec
ret
xlat
shll
dec
ret
sti
imul
jnp
inc
or
inc
mov
jno
int3
jae
adc
bound
add
jge
mov
test
fsubrl
lret
push
in
popf
jg
repnz
sub
push
aam
int3
aad
dec
fs
mov
dec
jmp
mov
jge
movsb
loopne
mov
stc
lock
push
ret
xorb
jae
idiv
and
or
icebp
inc
xchg
mov
loope
nop
enter
add
dec
add
jne
or
xchg
cmp
mov
int3
rdpmc
mov
add
jl
add
mov
or
ljmpw
icebp
mov
insb
cli
stc
int3
bnd
jne
cld
mov
add
mov
je
imul
es
stos
outsb
ret
icebp
incb
in
imul
lods
dec
addb
add
jmp
mov
cli
stc
xchg
jne
inc
add
imul
or
test
jae
lret
rorb
test
jmp
or
pop
std
jnp
mov
loop
ja
js
jno
js
jae
iret
adc
push
jmp
jae
push
aam
call
push
fs
testb
cmp
jae
jg
sti
addr16
je
sub
or
mov
test
sbb
div
in
icebp
je
in
jo
divb
insb
rolb
js
mov
inc
cmp
adc
mov
mov
ret
jo
neg
add
jg
add
pop
sbb
nop
cmc
push
addr16
fwait
insb
add
add
jb
imul
add
inc
jo
negb
aam
xor
inc
idivb
out
xor
xor
jo
mul
or
in
iret
addr16
jmp
jg
mov
sbb
or
test
icebp
mov
clc
jns
insb
jo
jge
dec
xor
pop
cmc
or
mov
mov
xor
icebp
jmp
int3
in
mov
add
div
cmpsb
pop
sahf
sbb
ja
hlt
arpl
clc
cmc
mov
call
jge
push
mov
icebp
outsb
pop
icebp
icebp
pushf
sti
in
icebp
pop
fsubrs
inc
in
cmp
dec
mov
cmc
icebp
mov
out
lods
mov
in
icebp
mov
cmp
push
subb
push
js
icebp
add
in
sub
ljmp
add
push
repnz
repnz
insl
mov
call
popa
das
out
divl
jmp
sti
push
cli
jmp
roll
insl
repnz
gs
out
add
rep
repnz
cmp
icebp
push
repnz
sahf
arpl
std
xchg
insl
bnd
push
ret
ret
push
mov
add
add
in
mov
cmp
mov
in
jo
push
jp
movsl
xchg
in
ja
punpckhdq
dec
dec
pop
je
pop
mov
das
pop
movsb
jo
inc
sarl
call
jo
into
call
loop
daa
inc
iret
arpl
xor
call
or
popa
or
popa
in
or
cli
jns,pn
add
les
push
add
add
inc
lock
and
and
sbbb
sbb
nop
repnz
mov
into
inc
in
inc
hlt
gs
xchg
bnd
testl
js
mov
enter
or
je
mov
jae
repnz
mov
jle
add
adc
rorl
add
add
add
add
inc
jecxz
add
jb
into
jg
andl
imul
je
xchg
mov
inc
dec
push
jnp
into
inc
jecxz
aas
add
or
repnz
ja
icebp
push
push
cmp
push
and
int3
jg
insl
mov
jmp
or
xor
int3
das
mov
add
int
mov
add
inc
dec
jmp
lret
push
jae
sub
jg
gs
orb
mov
and
add
das
insl
and
jmp
int3
jg
sbb
inc
dec
jmp
sarl
add
sbb
ss
incb
adc
es
clc
movsl
out
stc
add
clc
pop
add
jl
testb
inc
outsb
js
leave
xchg
mov
lock
jbe
add
out
push
or
xor
sbb
test
icebp
repnz
or
mov
incl
mov
cmpsl
push
mov
aaa
xor
add
add
lea
jl
test
or
fprem1
or
dec
repnz
ffreep
loope
and
bnd
push
jle
lret
ds
add
xor
aad
mov
push
lcall
out
or
jmp
or
out
push
jmp
or
push
or
daa
sbb
push
test
out
add
fs
rorb
sub
int
aad
cmc
ja
pushf
push
jmp
fmulp
decl
xchg
scas
inc
iret
loope
jae
push
cli
filds
add
leave
pusha
pusha
leave
fisttpl
push
dec
mov
fisttpll
mov
pop
imull
clc
out
test
cld
push
out
dec
mov
jne
pop
stc
inc
sub
jbe
jo
sbbl
rcl
add
icebp
out
or
or
js
loope
jmp
filds
jo
je
pop
into
inc
shlb
je
jo
ljmp
ret
mov
jecxz
and
mov
add
dec
cmp
cwtl
je
pop
stos
inc
stos
jo
repz
hlt
data16
jl
rolb
ja
jb
popa
pop
or
fbstp
outsb
mov
out
ja
mov
inc
icebp
dec
pop
dec
ret
sub
jg
jb
dec
adc
or
pop
add
aam
inc
dec
jmp
int3
jp
notb
or
int3
movb
add
jg
jmp
sarb
push
lret
pop
or
rcrl
pop
xchg
pop
je
icebp
stc
mov
sub
ja
repz
adc
int3
jg
inc
xor
add
add
pushl
addr16
pushl
scas
not
testl
leave
shrb
xor
add
add
add
add
je
pushl
and
mov
cli
call
leave
icebp
addr16
dec
add
daa
mul
pop
repnz
sahf
xchg
dec
jmp
pop
repnz
enter
xor
inc
jne
jmp
ret
and
test
repnz
pop
push
divb
sar
lock
inc
iret
insl
mov
pusha
jne
lcall
add
add
add
add
dec
inc
inc
inc
dec
jo
xor
movsl
aad
mov
push
lcall
jp
sbb
push
call
push
arpl
clc
xchg
mov
push
addr16
push
mov
xchg
push
arpl
enter
ror
je
shlb
mov
pusha
mov
cltd
pop
nop
je
testb
sti
ja
repnz
in
insl
imul
and
jmp
fs
jmp
insl
ret
ja
add
push
insl
or
insl
xor
fdivr
xor
dec
insl
and
js
and
cmp
and
xor
sbb
cmp
sbb
xlat
iret
shl
repnz
repnz
insb
call
ljmp
add
mov
xor
je
ljmp
adc
or
lods
in
icebp
scas
sti
jae
xchg
sbbl
jmp
adc
jmpw
icebp
hlt
push
loop
sub
jmp
mov
or
loop
push
mov
jmp
dec
ds
mov
in
int3
push
test
stc
jne
xchg
fnstcw
loop
add
or
fnstcw
xchg
jae
and
jne
jo
icebp
icebp
push
sub
cwtl
sub
andl
ja
mov
clc
pop
out
add
dec
repz
jge
mov
dec
hlt
mov
js
dec
push
decw
mov
nop
dec
push
repz
inc
cli
ds
push
js
mov
cltd
push
js
mov
cmc
jmp
jmp
incl
jmp
leave
movsb
out
push
insl
inc
mov
mov
inc
loop
fsts
rclb
leave
hlt
out
mov
jae
jmp
call
gs
aam
testl
lret
xchg
gs
push
mov
addr16
or
mull
push
add
or
push
cwtl
sub
add
xchg
cld
add
decb
addr16
mov
sbb
iret
aad
mov
pop
push
push
test
dec
je
jge
mov
sbb
movsb
bswap
jp
sbb
iret
fdiv
mov
sbb
rcr
in
and
mov
out
add
xorb
add
add
add
and
pop
sbb
inc
jecxz
jo
lock
jp
out
into
jge
divl
push
push
cmp
mov
dec
mov
out
sub
sar
xor
push
imul
cmp
nop
push
inc
cmp
stc
add
cld
xchg
push
in
ret
ret
push
mov
fadds
add
les
pushf
dec
fcomi
je
fimuls
es
test
test
or
add
dec
daa
aaa
fs
cmpsb
or
sarl
outsl
movsb
jae
sub
dec
icebp
adc
fisubrs
add
in
mov
in
mov
jg
adc
fimull
add
call
inc
push
or
cmpsl
inc
cmpsl
in
or
add
icebp
and
fwait
push
addr16
jmp
iret
pop
dec
add
leave
cmc
push
scas
dec
lret
pop
bnd
pop
js
sahf
push
xor
andl
fincstp
push
pop
addb
bnd
pop
js
pop
add
mov
sti
cmp
jbe
dec
clc
orw
std
cmp
ss
icebp
imul
push
inc
lea
lret
bnd
pop
js
jle
and
je
inc
mov
out
fs
ds
cli
out
sbb
jg
pop
mov
dec
push
fsub
ja
imul
push
inc
divb
int
imul
xlat
push
ja
imul
mov
imul
add
add
add
inc
push
jge
jo
aam
lock
inc
iret
cmc
mov
push
in
insl
push
dec
bound
cmp
or
ljmp
add
and
ss
adc
push
push
pop
dec
idiv
jle
shrl
pushf
call
jecxz
data16
lcall
repnz
cmp
add
add
jecxz
out
enter
cltd
jecxz
jg
jmp
gs
and
jecxz
in
push
add
pop
cmpsw
push
outsl
sub
push
jecxz
cmpsb
dec
insl
rcrl
cmpsl
bound
sub
push
out
fcom
stos
daa
and
inc
scas
and
dec
adc
pop
mov
mov
push
icebp
es
in
add
mov
icebp
push
xor
stc
push
jb
mov
icebp
mov
loop
out
imul
ja
add
xor
sub
ja
xor
xor
fidivrl
jmp
icebp
je
ljmp
repz
cltd
repz
orl
sub
jbe
loope
movsl
ljmp
stos
fcmove
pop
mov
icebp
pushf
add
sub
dec
je
xor
mov
mov
push
repnz
pop
dec
clc
fildll
lock
pop
js
into
mov
lret
or
mov
in
xor
movl
in
pop
repnz
pop
bnd
aad
imul
mov
add
pop
js
push
mov
data16
add
jmp
incl
add
pop
bnd
push
sarl
pop
push
mov
jge
dec
mov
or
iret
ret
sbb
sti
cmpsl
or
push
popw
push
jp
gs
jo
insl
pop
mov
jle
cmp
jns
rcl
mov
mov
inc
iret
rcl
mov
fstpt
je
mov
add
add
rclb
iret
inc
inc
xchg
or
repz
or
push
dec
fwait
push
dec
inc
push
pop
testb
mov
outsb
sub
jg
push
packssdw
insb
clc
jge
add
loope
maskmovq
testl
xor
aaa
pop
icebp
fbstp
loope
add
mov
sbbb
cmpl
or
stc
and
or
mov
addr16
jmp
xorb
jns
jmp
repnz
stos
popa
push
add
or
ret
push
fidivs
cmp
fbstp
mov
lahf
icebp
outsb
inc
add
pop
scas
fnstsw
aad
push
arpl
ret
or
aad
add
outsb
push
add
adc
jmp
jmp
int3
fidivs
push
mov
pusha
push
mov
mov
mov
data16
fidivs
mov
pusha
push
mov
scas
out
add
jmp
call
push
outsb
add
pop
icebp
jae
add
jmp
pushl
push
cmp
aaa
repnz
jns
inc
cmc
in
rcrl
push
push
cmp
aaa
repnz
mov
call
shl
aad
sarl
jmp
jp
incl
cmp
test
xchg
cmp
bnd
sub
add
addr16
call
iret
cmc
xchg
iret
pop
push
push
incb
pop
rorl
daa
sbb
pushl
outsb
rorl
sub
xor
and
push
je
ds
adc
mov
sahf
push
not
adc
clc
xchg
xchg
out
clc
lods
push
out
loop
loopne
jl
fdivs
sbb
outsb
pop
inc
outsb
add
aad
mov
aad
incb
add
mov
push
out
jno
decb
sbb
push
decb
punpcklwd
push
stos
pop
popa
push
imul
jecxz
xchg
iret
add
fistpl
fmul
out
sbb
fdivrl
or
fstpl
dec
nop
jecxz,pt
popa
fidivl
pop
stc
push
jmp
push
data16
add
jecxz
add
dec
out
pusha
sbb
aam
cwtl
or
leave
and
outsl
dec
fbstp
fistpl
cmpsl
adc
sub
xchg
adc
pop
and
sub
pushl
jmp
jbe
or
jmp
sub
int3
xchg
adc
or
icebp
sbb
fcomi
xchg
dec
add
inc
data16
and
add
daa
inc
mov
icebp
dec
jbe
dec
imul
xlat
cmp
cs
mov
push
add
icebp
pushf
out
shrl
ficoml
adc
add
jmpw
icebp
pop
shl
xor
cli
flds
inc
pushf
push
pop
push
xor
sub
dec
add
xchg
je
adc
add
imul
out
js
pop
cmp
ret
cmp
imul
push
mov
inc
idivb
js
sahf
outsb
mov
mov
call
lahf
inc
or
andl
push
leave
mov
call
das
ret
arpl
dec
inc
mov
xor
ret
iret
jno
je
add
aas
ja
push
out
out
orl
push
add
mov
mov
iret
xchg
push
je
out
lret
bound
pop
pusha
dec
cmc
push
push
ljmp
dec
inc
sbb
mov
std
pop
adc
jp
push
je
cltd
fildl
out
sbb
enter
push
inc
mov
imul
add
iret
gs
add
push
mov
roll
call
sub
sarl
shl
dec
lds
jg
push
push
fidivl
popa
das
sbb
call
and
lahf
fcomps
or
rolb
xor
mov
jmp
push
fnstsw
pop
push
cmp
mov
add
stc
push
sti
imul
inc
int3
jg
mov
sti
daa
push
data16
mov
dec
jmp
xchg
mov
pop
inc
cmp
or
int3
ja
xor
in
out
aad
dec
add
and
icebp
into
adc
or
sub
loope
movzwl
cwtl
mov
and
icebp
repnz
pop
aas
add
add
push
cmp
cmp
xchg
icebp
jle
add
mov
or
xchg
push
pop
cwtl
icebp
pop
inc
cmp
push
sbb
icebp
aam
aad
inc
imul
xchg
or
je
or
xchg
or
pushf
or
fstpt
or
lock
or
mov
shll
mov
or
push
enter
jbe
add
andb
mov
add
or
mov
shr
test
aaa
js
pop
dec
dec
pushl
sbb
jns
aaa
repnz
rcll
arpl
mov
vpsubsb
in
inc
jge
push
orl
mov
insl
push
je
xchg
pop
cmpsl
inc
add
mov
mov
incb
add
fbld
loop
pop
sbb
pusha
jge
lods
pop
pop
daa
pop
clc
jg
out
test
push
pop
imul
or
pop
addr16
call
dec
je
mov
pop
mov
dec
pop
mov
pushf
pop
and
mov
or
xchg
ret
repz
lret
sti
lahf
xchg
fisttpl
call
jp
add
add
jg
pop
dec
test
add
imul
add
mov
pop
in
cli
mov
fmuls
lds
dec
jmp
ficomps
scas
mov
fcoml
in
movsl
push
iret
push
jecxz
fwait
pop
xchg
aam
mov
inc
push
lds
aad
pop
xor
imul
jp
push
cmp
sbb
add
jg
rcl
aam
or
lods
sbb
imul
add
sti
or
int3
jg
push
fisttps
and
mov
icebp
push
lds
call
or
and
test
push
inc
outsl
ror
dec
pop
push
iret
or
mov
outsl
mov
lret
jg
outsl
add
pop
icebp
sahf
add
mov
and
icebp
xchg
iret
icebp
hlt
sbb
insb
mov
js
ja
jp
sbb
jmp
dec
loopne
or
icebp
ljmp
iret
jmp
pushl
aaa
jmp
jmp
jmp
pushl
das
jmp
jmp
pop
jmp
push
arpl
add
sub
incl
add
cmp
and
and
or
fstpl
les
adc
push
sub
add
unpckhps
or
xchg
repz
pushl
jle
inc
mov
call
mov
iret
xor
lahf
mov
mov
loopne
pop
je
mov
sub
iret
int
jae
jge
addb
jp
inc
mov
roll
push
ljmp
pop
dec
inc
fs
testb
pop
je
mov
icebp
mov
pop
adc
out
roll
sbb
push
lds
or
sub
je
xor
sbb
mov
adcb
call
pop
leave
add
int
add
icebp
rorb
in
and
les
jle
cld
pop
push
sbbb
push
lea
push
inc
cmp
push
and
jecxz
jecxz
stos
les
rcl
fmul
addr16
jo
arpl
shlb
fcmovne
fs
push
mov
pop
inc
rcrb
pop
movsb
jecxz,pt
add
into
jg
subl
or
jge
icebp
hlt
adc
icebp
movsb
nop
cmp
in
int3
sub
ror
gs
ds
js
dec
ret
pusha
pop
aam
test
xchg
call
lret
icebp
jl
out
mov
sarb
lock
in
ss
icebp
pop
jnp
mov
sub
stc
aaa
sbb
add
inc
or
enter
lret
pushl
jmp
and
ds
mov
int3
add
rclb
adc
icebp
pushl
icebp
imul
mov
call
mov
call
jno
jne
mov
repnz
xor
scas
scas
ja
mov
pop
lret
fs
repnz
inc
mov
add
add
cmp
xorl
ja
das
inc
or
push
xchg
add
add
and
test
aaa
dec
clc
push
or
ret
popa
mov
dec
imul
lods
pop
adc
xchg
int
and
inc
out
mov
add
jbe
mov
add
in
aad
fs
push
jp
pop
je
xor
je
aas
nop
xor
add
pushf
ss
mov
sti
and
hlt
cmc
out
or
push
and
sbb
iret
call
out
incb
fists
mov
fisttpl
ret
pop
inc
or
sbb
xchg
xor
jecxz
and
or
mov
jecxz
pop
pop
and
sbb
pop
dec
sub
add
or
dec
jnp
pop
xchg
mov
test
mov
cld
xor
dec
cld
xchg
int3
and
mov
scas
and
mov
pushl
js
decl
add
int3
js
pop
inc
xor
stos
rcr
xchg
int3
push
dec
push
js
xlat
leave
imulb
pusha
inc
iret
or
pusha
int
lods
movsb
lret
cmp
add
add
add
add
push
lock
pop
fdiv
adc
in
mov
js
in
jmp
and
in
or
jg
sub
jle
cli
cwtl
xchg
int3
adcb
xor
and
jg
jb
arpl
xchg
xchg
lret
push
add
or
add
or
stc
adc
in
mov
jecxz
or
add
jg
test
sarl
add
rol
add
pop
call
jg
or
jge
repz
bnd
sub
inc
pop
cmp
js
cltd
mov
call
in
jge,pt
stos
in
jmp
xchg
inc
out
dec
fcomps
jg
inc
ret
aam
dec
dec
in
cmp
fisubs
push
fxch
mov
add
andb
jne
es
das
cltd
cmp
jne
cmp
or
aad
ljmp
js
cltd
mov
dec
sub
out
leave
inc
pusha
mov
pop
movb
jo
paddq
fimull
dec
loop
rsqrtps
inc
xor
inc
je
lock
sbb
je
push
or
cmc
out
jno
clc
mov
out
data16
incb
add
pop
dec
divl
add
pop
jno
dec
pop
iret
repz
shr
incb
push
bound
stos
or
je
outsb
push
mov
fistpll
pop
add
iret
popa
test
ret
enter
leave
cmp
push
fmuls
inc
leave
mov
jg
pop
jecxz
cmp
or
add
mov
jecxz
mov
push
jmp
cmp
bound
jg
pop
cmp
fisttps
push
fisttps
ja
insl
fxch
xor
ror
dec
mov
ret
into
ror
mull
popf
adc
enter
test
jg
jle
push
sub
jo
dec
jmp
fistpll
pop
sbb
lret
nop
lods
pushf
add
jns
or
jg
icebp
cmp
loopne
scas
xchg
leave
icebp
fdivr
push
dec
jmp
xchg
mov
xor
adc
push
push
jbe
and
in
icebp
jo
les
aas
or
lods
pop
dec
jmp
imul
lock
jg
pop
in
icebp
xor
orl
fisttpl
xorl
sahf
sub
add
xchg
cmp
aaa
andl
icebp
sbb
jmp
sti
aaa
bnd
sub
adc
push
mov
jnp
pop
push
mov
call
scas
push
imulb
stos
scas
insb
out
mov
cmp
push
xor
cmp
rorb
inc
push
xchg
gs
out
repz
add
cmp
and
cmpsb
stos
scas
insb
iret
pop
push
push
xor
or
xor
int
mov
iret
fcoms
pop
fiaddl
mov
xlat
rclb
mov
inc
imul
fcom
mov
cli
push
mov
iret
add
and
lock
iret
fcoms
out
inc
add
iret
push
sbbb
push
mov
iret
rorb
fcom
mov
int
or
mov
addr16
test
or
cwtl
xor
gs
mov
or
loop
add
ljmp
lds
lcall
jle
add
add
inc
add
cmp
pusha
pop
cmp
xchg
jns
ret
xor
jae
rcl
xlat
popa
call
fsqrt
out
add
jg
roll
jecxz
iret
mov
jecxz
jne
int
gs
add
aaa
mov
cli
or
adc
icebp
cltd
adc
sahf
enter
icebp
loop
push
pop
add
icebp
jmp
int3
les
and
ds
adc
idiv
clc
adc
pop
cmp
call
xchg
mov
les
and
or
pop
aam
sahf
xchg
lds
test
mov
vpunpckhdq
stc
jbe
les
sbb
pusha
test
les
inc
ss
icebp
dec
sbb
fs
jp
add
lock
lods
outsb
mov
dec
add
add
lret
pusha
inc
mov
dec
sbb
mov
push
dec
fsubs
data16
incl
int3
jmp
call
mov
cli
jns
js
push
sub
ljmp
mov
call
dec
repz
dec
cmp
repnz
cmp
call
cmp
insl
int
or
add
iret
jecxz
neg
xor
mov
aam
push
push
cmp
ret
mov
lcall
mov
jmp
addr16
into
decl
fsts
jns
dec
cli
rcl
fdivr
xchg
or
fmuls
push
xor
add
inc
aad
mov
or
or
xor
out
inc
inc
and
incb
add
stc
dec
enter
push
push
cld
mov
aaa
dec
dec
incb
mov
mul
dec
jmp
in
jecxz
les
jecxz
mov
cmp
iret
jg
cmp
int3
sub
test
popf
add
adcb
xor
jl
repnz
adc
jo
jns
fistps
data16
aam
push
or
out
iret
push
int3
add
jo
loop
inc
shrl
sti
mov
xor
xor
xor
xor
roll
jg
jns
enter
shll
and
mov
xchg
shl
int3
push
pop
mov
add
icebp
ds
add
nop
icebp
cs
sti
in
or
jmpw
pop
test
shlb
add
inc
js
sarl
icebp
pusha
inc
fdivr
out
or
shl
xor
sub
shlb
xchg
icebp
cmp
icebp
pusha
inc
mov
or
pusha
push
dec
jmp
shl
ret
xlat
filds
inc
cmp
cli
incl
cmp
pusha
inc
idivb
lock
repnz
sti
jae
int
inc
repnz
add
push
cli
incl
in
icebp
addr16
dec
add
aaa
loope
roll
scas
imul
ret
push
pop
into
testl
aaa
loope
addl
xor
jns
lcall
icebp
mov
inc
js
ds
and
iret
adc
dec
pop
sub
testb
fsubs
add
jae
imul
and
shrl
fcoms
test
push
dec
decb
test
or
push
insl
or
iret
sub
mov
lods
mov
fisttpll
push
js
sbb
push
fisttpll
rcrb
push
int
mov
std
dec
incb
sbb
iret
orb
add
xor
imulb
jg
inc
fwait
fwait
xor
pop
fistpl
and
mov
mov
mov
push
inc
loope
fcoms
out
or
sarl
dec
inc
jnp
cmp
mov
or
dec
cltd
mov
or
mov
repnz
cmpl
or
add
add
add
mov
ljmp
mov
or
jl
mov
or
lock
inc
shl
mov
mov
fdivrs
in
mov
stc
jbe
movsb
inc
mov
lahf
mov
pop
stos
jp
push
nop
mov
icebp
push
mov
repz
add
add
push
fsubs
push
sub
and
mov
mov
icebp
out
repz
mov
icebp
into
mov
jmp
pushl
push
repnz
jne
decl
lcall
dec
clc
pop
test
jns
js
dec
jne
add
dec
lret
or
xchg
add
gs
cmc
push
in
jmp
jp
mov
bnd
out
insl
ja
icebp
xor
mov
jns
or
pusha
inc
jbe
or
data16
jmp
jmp
jp
jne
addr16
sub
or
ret
inc
push
or
sub
mov
jmp
adc
push
sbb
mov
add
add
add
add
add
or
into
incl
mov
and
fsubl
or
aad
mov
jns
addr16
into
mov
mov
das
addr16
test
mov
iret
xchg
mov
call
js
xor
ret
xchg
data16
cli
jg
das
dec
ret
cmpsl
test
add
jg
and
mov
add
mov
adc
sbb
pop
lcall
rcr
cmp
and
stos
movsb
sub
ja
lock
rorb
out
add
loop
test
cmp
mov
mov
cmp
mov
sub
jo
jecxz
add
sti
mov
push
xor
fists
lock
sbb
or
pop
pop
mov
jg
decl
mulb
or
jmp
dec
jmp
pop
insb
icebp
sahf
sarb
push
lods
or
and
dec
addl
icebp
test
jg
movsb
pushf
movsl
inc
push
jle
movsb
jbe
or
add
mov
pop
push
adcb
pop
mov
xchg
aam
dec
jmp
je
icebp
add
mov
je
or
cmc
test
fmuls
js
jle
lock
jne
cld
push
insl
and
adc
lock
mul
add
and
out
jno
push
mov
into
cld
int3
andl
out
or
add
pushf
repnz
cmc
push
sub
inc
out
ret
xor
scas
imul
adc
add
out
add
jp
or
lea
addr16
or
call
lods
mov
pop
push
or
ret
or
je
cmp
popa
fwait
xor
add
sub
je
adc
std
adc
mov
jp
and
jp
xor
inc
and
shrl
dec
sti
enter
cmp
xor
in
decb
mov
fists
mov
or
leave
cmp
jo
jno
sti
sub
add
fildll
shrb
cmp
and
iret
enter
dec
outsb
daa
dec
mov
push
pop
imul
mov
scas
shlb
cmp
mov
add
cmpsb
xor
arpl
jmp
pop
mov
cmp
xlat
pop
js
mov
aaa
std
mov
dec
xor
mov
or
ja
or
add
pop
mov
sbb
cmp
icebp
loop
xor
inc
cmp
xchg
sarl
aaa
cmpsl
sub
push
pop
icebp
out
mov
icebp
hlt
movaps
clc
mov
int
sub
jle
in
cs
shll
dec
lret
sbb
mov
shlb
adc
cmc
mov
and
inc
pop
jbe
test
hlt
shlb
cwtl
mov
sub
pop
sti
add
shrb
or
lods
repnz
or
fldcw
pop
jmp
in
fsubrs
mov
jle
sub
insl
inc
cld
dec
cmpb
rclb
out
repnz
cmp
orl
rol
bnd
push
push
fmuls
xchg
sub
imul
add
add
add
outsl
insl
repnz
lahf
cmp
out
lea
jnp
cmc
push
shrl
out
add
mov
clc
addb
jmp
push
lods
and
mov
cmp
add
mov
jo
sahf
es
lods
sti
mov
push
xlat
push
rorb
or
add
sub
in
jl
push
out
pop
js
dec
bswap
jae
jmp
fnstsw
testb
mov
aaa
je
stc
mov
add
popf
dec
je
fnstenv
add
mov
jecxz
and
sbb
pop
cmp
aam
cld
das
sub
sbb
lret
adc
jg
inc
add
cld
jge
mov
push
jecxz
xor
push
adc
dec
stos
shlb
dec
xor
xor
cld
shrl
mov
add
in
mov
and
cmp
cmpsl
test
or
lcall
cmp
aaa
call
jg
stos
enter
lock
pop
repz
fs
pop
dec
add
popa
xor
fcmovne
jg
sub
cli
mov
int3
jg
lods
les
inc
sbb
es
jmp
dec
cmp
cltd
push
cld
clc
negb
icebp
push
lcall
add
xor
lret
mov
fnstenv
fnsave
stc
sahf
mov
addr16
mov
xchg
dec
sub
test
popa
ss
xor
jne
insl
js
push
dec
out
incl
insl
mov
call
loope
stc
jmp
insl
js
fidivrs
adc
xchg
in
popf
push
shl
add
ljmp
js
inc
jae
sbb
xor
mov
lds
push
adc
dec
push
jl
inc
add
xor
add
cwtl
lds
push
add
dec
or
jl
inc
iret
lahf
fisttpll
cmp
dec
fdivs
add
rcll
mov
fwait
pop
push
inc
adc
cwtl
mov
sti
sbb
sbb
je,pt
inc
or
nop
pop
repnz
mov
or
call
push
mov
lods
mov
mov
cmp
adc
xor
je
shlb
cmp
stos
and
testb
adc
cmpb
frstor
xor
xor
xor
mov
mov
adc
arpl
bound
inc
xchg
push
shrb
add
xchg
mov
add
mov
jg
jl
add
sub
sti
xchg
js
sbb
add
pop
xor
js
dec
add
sub
xchg
xor
jnp
mov
xchg
popa
pop
cmp
dec
xor
jg
jle
jg
xor
dec
or
fisubrs
arpl
in
sbb
int3
movb
int3
jg
scas
dec
mov
jle
orb
movb
add
add
add
add
or
push
test
icebp
jmp
and
std
cmp
lods
pop
pop
push
cltd
std
es
mov
push
pushf
scas
ja
lahf
xor
push
sbb
adc
jnp
lea
mov
out
jl
aam
jg
push
cwtl
std
into
clc
lods
add
mov
icebp
jmp
or
test
pop
repnz
add
mov
addb
mov
lock
jmp
test
mov
xor
lcall
ja
out
pop
or
test
mov
shlb
test
jo
jmp
loope
dec
sbb
decl
push
into
add
add
divl
in
add
xchg
adc
iret
xor
daa
cmp
decl
and
popf
pop
jl
cld
or
push
iret
add
or
pop
mov
je
sub
and
subb
adc
repnz
adc
ljmp
and
je
jl
and
cmp
mov
add
jo
sub
push
andb
and
push
sbbl
inc
pushf
dec
xor
sbb
jecxz
fwait
push
adc
jecxz
iret
push
mov
xlat
add
stos
pop
getsec
and
dec
rcrb
pop
scas
in
lock
xchg
mov
aas
jecxz
inc
lods
bound
mov
div
sub
add
lods
inc
ror
mov
jle
dec
ret
aaa
lcall
sbb
fsubrs
sbb
popa
stos
fwait
xor
inc
jecxz
fwait
mov
bnd
mov
fs
push
aas
or
test
jmp
jmp
pop
push
das
sbb
mov
stos
repnz
mov
in
out
test
add
add
pop
jle
or
aas
or
int
or
in
daa
data16
int3
aad
and
lea
icebp
inc
jl
icebp
hlt
rolb
jmp
jae
icebp
es
cs
mov
test
dec
add
js
mov
or
addr16
scas
mov
jne
test
add
jle
popa
inc
es
cmp
scas
ret
mov
push
repnz
fistl
jne
test
pop
push
push
push
mov
into
hlt
inc
push
repnz
or
fwait
movsb
jmp
mov
lret
in
add
cli
inc
push
inc
push
fisubs
add
sub
xlat
or
push
sub
add
add
add
add
test
or
fldt
addr16
inc
iret
ds
add
xchg
incb
fldenv
mov
and
lock
lret
inc
iret
xchg
or
test
es
aaa
popf
or
iret
push
mov
cwtl
xchg
and
fmuls
pushl
out
inc
iret
gs
int
add
fmuls
jnp
subb
call
pop
cld
mov
orb
into
jg
orl
sbb
std
shrb
xor
jecxz
and
mov
mov
push
jl
into
push
xchg
inc
hlt
dec
xor
push
scas
adc
mov
iret
out
mov
cmpb
add
imul
insl
cmp
outsl
jecxz
iret
fildl
and
jbe
cmpsb
xor
inc
jg
jmp
cmpsb
movsl
icebp
pushf
je
test
mov
lods
pop
sbb
or
cmpsl
imul
jg
and
int3
jg
xchg
sbb
sub
or
imul
outsl
mull
jmp
popa
jle
dec
xor
add
push
scas
sbb
hlt
mov
or
ret
icebp
aam
xor
cmpsl
imul
shlb
scas
cmp
test
and
or
inc
lods
addb
ljmp
jbe
xor
inc
xchg
icebp
xor
dec
xchg
mov
ja
in
sbb
repnz
add
add
add
orl
xchg
sub
add
orl
imulb
repnz
orb
mov
pop
into
in
stc
inc
out
jnp
jne
xchg
sub
arpl
mov
dec
cld
iret
and
ljmp
das
dec
push
outsl
adc
aam
or
enter
enter
add
add
add
add
sub
outsl
aam
ret
adc
cmpsl
push
xor
xchg
and
mov
xchg
push
add
sahf
daa
pop
push
in
fwait
in
rcl
fmull
pushf
xchg
addr16
jmp
xchg
ret
loopne
int3
repz
xchg
or
inc
lret
mov
je
add
or
cwtl
mov
and
mov
add
test
shrl
stc
test
subl
punpckhbw
mov
jo
add
push
sub
jecxz
inc
sub
loop
dec
and
pop
push
popf
inc
jecxz
mov
jg
clc
dec
sub
push
clc
sub
sbb
subb
push
jl
into
add
inc
xchg
xor
push
stos
cmc
add
in
les
sub
xchg
lcall
fs
inc
test
mov
adc
icebp
in
out
push
stos
ljmp
iret
jg
jb
std
enter
fs
in
or
jle
int
repz
fidivs
in
shll
push
cmpsb
or
int3
jg
and
xor
aas
or
jno
icebp
cmpsb
out
js
cld
cld
outsl
xchg
mov
dec
icebp
add
test
repnz
or
jmp
icebp
pushl
pop
repnz
push
mov
rolb
sahf
push
hlt
inc
push
jnp
movsl
pop
pop
repnz
add
add
rorl
call
sub
es
pushl
pop
js
add
or
test
add
or
cmpsl
jle
std
cmp
add
push
cs
pop
push
sarb
xchg
pop
out
or
enter
int
mov
and
pushl
jns
aam
xchg
add
adc
mov
add
add
cli
xchg
and
js
add
aam
xchg
add
je
jle
adc
jno
imul
and
sub
lods
dec
jae
jmp
add
xchg
lcall
int
mov
inc
aad
enter
push
push
mov
push
addr16
iret
out
xchg
add
stos
and
xchg
cwtl
rclb
out
inc
inc
jp
cwtl
aam
clc
or
add
mov
push
adc
pop
and
or
mov
sbb
fiadds
sbb
or
lods
jecxz
iret
jg
enter
xor
sahf
cli
test
or
xor
lahf
data16
and
pop
or
xlat
mov
mov
and
add
add
add
add
add
lahf
icebp
jmp
scas
adc
subl
xchg
or
popa
mov
call
mov
jg
in
icebp
aam
xor
icebp
repnz
sbb
push
cmpsb
or
ficompl
out
push
scas
or
push
cmp
icebp
repnz
push
mov
aas
add
add
add
add
jnp
push
jmp
int3
jg
sahf
jecxz
dec
imul
jno
out
or
or
or
lock
jmp
jae
and
pusha
repnz
insl
jmp
mov
push
leave
jne
xchg
aaa
inc
xchg
stc
pop
pop
push
push
fldcw
sbb
or
stc
xor
inc
add
add
add
jg
ret
call
fsubr
cmpsl
sbb
or
outsl
mov
je
cmp
or
stos
push
stos
dec
mov
dec
or
adc
add
and
fstl
sub
pop
push
mov
cwtl
mov
gs
shl
mov
call
dec
std
mov
lahf
or
lea
adc
add
cwtl
adc
sub
mov
dec
push
clc
jno
insl
push
repz
gs
movsl
xchg
adc
mov
push
std
dec
lea
add
cmpsb
mov
std
xor
paddd
jg
mov
mov
or
push
stc
dec
sub
sub
fwait
jecxz
dec
cwtl
test
or
add
jg
sub
and
aam
cli
xchg
and
iret
mov
mov
and
jmp
inc
xchg
jo
dec
push
or
inc
aam
jecxz
dec
xchg
sub
pop
xor
cmp
jg
nop
push
xchg
add
inc
xor
and
lcall
je
inc
test
or
loop
cltd
icebp
cmp
jnp
add
ljmp
sbb
push
ficompl
iret
scas
ret
je
xchg
repnz
mov
in
leave
cltd
icebp
pusha
dec
repnz
cltd
mov
rcrl
repnz
ret
mov
dec
fs
pop
aas
or
rolb
loope
lea
icebp
cs
sub
mov
and
repnz
add
loop
ret
add
icebp
imul
jle
mov
jns
jle
push
jp
movsb
and
call
adc
std
xor
insb
add
repnz
in
mov
xor
repnz
call
push
leave
rolb
push
mov
xor
cmpsl
inc
repnz
or
add
loope
repnz
add
or
nop
inc
cmc
nop
in
dec
subl
ss
mov
xchg
iret
pop
lret
decl
add
cmpsb
and
mov
ss
push
in
mov
or
or
iret
mov
sti
jne
and
nop
inc
cmc
adc
lret
cmpsl
or
add
lea
fistps
addl
add
sbb
or
lods
or
add
adc
sbb
iret
cmpsb
addb
shl
push
je
imul
mov
jg
xchg
xor
incb
mov
add
sbb
pop
push
jne
dec
pop
ja
jecxz
sets
adc
out
add
add
push
and
mov
adc
out
out
iret
das
or
cmp
sbb
fcomp
xchg
jb
test
jl
add
mov
nop
into
stos
cmpsb
sbb
xchg
lret
mov
inc
jecxz
add
jecxz
mov
jmp
int3
mov
xchg
xor
clc
lcall
or
sarl
jmp
add
add
add
lds
hlt
out
dec
cmpsl
fs
inc
or
rcll
in
hlt
xchg
icebp
movb
cmp
xchg
icebp
mov
in
aam
icebp
mov
sub
cmp
fs
push
or
pop
jg
jle
push
push
and
xor
cmpl
jmp
inc
int
cmp
or
xor
pushl
leave
inc
add
lcall
hlt
orb
loope
orb
xchg
jae
inc
push
std
dec
cld
in
push
jecxz
incb
into
inc
inc
out
dec
call
mov
fs
jmp
add
pushl
cld
jo
mov
push
mov
jae
aas
dec
in
imul
das
sar
push
imul
add
add
add
add
js
shlb
lahf
or
cmc
jo
sbb
out
fiaddl
aas
shll
mov
iret
dec
push
jb
cmpsb
mov
ret
test
jmp
cld
sub
mov
mov
push
test
or
add
cmpsb
mov
or
iret
sub
jmp
dec
push
adc
pop
lahf
sbb
sti
push
test
mov
add
add
add
into
cmpsb
or
push
inc
adc
dec
pop
outsl
mov
jno
jmp
jae
jo
sbb
aas
jecxz
cli
jge
inc
or
cmp
push
jb
xchg
jo
jecxz
pop
data16
dec
push
and
fsts
xchg
jg
or
jecxz
loopne
jbe
jecxz
add
or
xlat
add
jg
mov
and
dec
add
movntq
mov
xchg
add
jg
xchg
int3
cmpsl
imul
xchg
jl
cwtl
xchg
or
cwtl
fwait
xchg
jmp
jg
pop
mov
jg
jmp
int3
jnp
jmp
int3
xchg
mov
int3
jg
jmp
jbe
arpl
add
loope
hlt
or
jge
shrl
or
icebp
je
lcall
fimull
hlt
rcll
into
lcall
mov
push
cmp
sbb
sub
pop
jle
cld
inc
inc
dec
jmp
cmp
icebp
pushl
jle
add
aad
jbe
or
movsl
xchg
addb
jle
add
adc
in
cmp
pushl
leave
inc
adc
push
dec
lock
add
sar
add
jle
lea
inc
ljmp
jle
or
out
sbb
ljmp
hlt
jno
mov
inc
cmp
add
data16
stos
dec
icebp
jmp
jge
jne
imul
std
mov
adc
iret
les
mov
fiaddl
add
add
add
adc
or
sbb
int
mov
add
mov
orl
loop
and
jmp
dec
and
cld
cld
push
incb
sbb
imul
hlt
or
jb
sbb
or
ret
sub
adc
pop
inc
iret
mov
or
xchg
push
or
iret
mov
stos
sbb
mov
adc
nop
incb
insl
fwait
sub
push
or
dec
roll
mov
add
daa
in
iret
jg
ret
dec
mov
movsb
add
jg
adcb
xchg
les
cwtl
fwait
add
mov
or
add
add
adc
adc
jecxz
iret
jg
sbb
push
cld
adc
es
jg
cmp
or
xchg
mov
push
adc
orl
fstpl
or
adc
icebp
jmp
int3
das
push
add
adc
sub
es
adc
mov
ds
divl
add
mov
in
aam
icebp
push
clc
aas
test
jg
lock
dec
test
mov
popa
push
inc
or
xlat
mov
or
dec
cmpsl
sbb
fimuls
icebp
add
orl
testb
imul
mov
mov
cmpsb
orb
push
ja
cmp
add
lcall
insb
jle
add
stc
jo
add
scas
or
dec
repnz
sbb
icebp
and
cltd
cmpsb
pop
xorl
dec
add
cmpsb
push
andl
dec
add
cmpsb
insl
andl
dec
add
movsb
xorl
mov
jae
push
or
stos
inc
lea
int
jnp
push
or
repnz
mov
add
in
orl
ljmp
mov
or
repnz
adc
or
stos
decb
fwait
dec
fmuls
inc
iret
inc
ljmp
decb
stos
dec
fmuls
inc
iret
jne
mov
fmuls
inc
iret
out
dec
fmuls
inc
iret
jg
jmp
add
add
add
or
and
lock
jmp
fsubs
test
and
shlb
jo
and
test
addl
and
nop
bound
jmp
js
push
test
sbbb
movsb
add
dec
test
xorb
push
movsb
add
jecxz
jg
jmp
add
xor
orl
orl
mov
add
out
mov
rorl
out
mov
lret
mov
add
mov
mov
rorl
or
mov
mov
lret
mov
sub
cmpsl
inc
mov
rorl
or
cmp
mov
mov
add
add
add
dec
inc
or
ja
mov
dec
inc
or
aaa
sub
lea
or
daa
and
cltd
dec
inc
or
rcll
icebp
and
icebp
mov
icebp
and
add
icebp
and
adc
icebp
and
jno
xchg
and
icebp
and
add
push
mov
icebp
and
add
icebp
and
adc
icebp
and
adc
icebp
and
icebp
mov
icebp
and
iret
sbb
add
lcall
ret
mov
lret
sbb
mov
cwtl
or
and
addb
movsb
or
add
add
add
add
or
dec
sar
xlat
push
pop
add
xchg
dec
add
adc
inc
pop
iret
xchg
or
testl
xchg
or
cmp
cli
mov
iret
xchg
or
dec
xchg
or
call
dec
add
xchg
or
pop
ja
repz
jg
pop
iret
dec
jecxz
iret
jg
sti
pusha
outsb
jecxz
add
iret
mov
jmp
iret
or
dec
fdivrl
add
js
add
repnz
lock
jg
mov
fildl
iret
jg
add
dec
jecxz
test
sbb
pop
gs
iret
mov
arpl
or
dec
in
jecxz
lea
jecxz
into
jg
push
mov
jg
test
add
orl
mov
mov
jg
push
or
mov
sbb
or
push
js
jmp
clc
xchg
jmp
lret
test
int3
scas
sub
test
or
lds
dec
ja
jmp
mov
add
in
int3
jg
jmp
add
jl
or
stc
notl
adc
mov
pusha
xchg
dec
aas
test
out
or
sbb
orl
sti
adc
add
addl
lods
add
add
addl
outsb
jnp
mov
cmpsl
or
push
mov
lret
cld
ljmp
iret
mov
mov
loope
add
js
scas
ljmp
repnz
lret
mov
in
repnz
cwtl
or
mov
mov
sbb
or
cmp
or
and
testb
pop
fstpt
pop
jo
and
cmp
add
cwtl
sbbb
pop
clc
add
cwtl
jbe
out
or
sbb
cwtl
or
add
add
add
add
icebp
call
cwtl
or
std
or
jb
cmp
mov
pushl
xchg
jmp
xchg
or
add
xchg
jbe
fists
in
iret
jg
adc
jo
xor
adcb
iret
iret
incl
mov
inc
call
pushl
test
add
jnp
add
jg
jp
jo
add
clc
jl
int3
jg
xor
jl
mov
clc
aas
loopne
sub
shl
jp
test
pop
iret
jp
pop
mov
jns
sti
into
nop
sar
jnp
bnd
iret
jg
leave
out
jmp
mov
jo
ret
fsubl
jmp
add
orl
call
ja
into
in
clc
pop
add
ret
shll
test
jmp
adc
push
or
int3
sub
jne
jo
out
stc
or
cmpsb
loope
icebp
jmp
pop
inc
add
adc
or
push
addr16
int3
xorb
std
sbb
int3
jg
addr16
or
add
mov
icebp
add
or
incl
add
jg
xchg
sahf
xchg
in
mov
outsb
jp
adc
jg
pop
arpl
add
inc
repnz
or
xchg
xchg
jg
sbb
jle
mov
add
mov
or
add
add
lret
mov
jle
jne
pop
xchg
stos
jle
mov
xchg
or
scas
iret
mov
call
cwtl
or
js
clc
add
xchg
ja
lret
cwtl
or
bswap
cwtl
or
incl
jbe
fistl
add
cwtl
je
pushf
or
leave
adc
add
lods
arpl
popf
or
or
inc
pop
mov
rorl
int
rorl
fcomps
sub
mov
sti
rol
out
popa
jae
cmpsl
or
test
dec
cmpsb
add
lcall
repnz
sti
data16
enter
inc
cli
push
fs
iret
mulb
int3
jg
js
push
iret
cmc
roll
sbb
jle
out
jg
mov
hlt
imul
dec
push
jl
in
jecxz
inc
cli
sar
lock
jnp
add
in
fnstcw
filds
iret
jg
sbb
iret
jg
pusha
inc
addr16
int3
aas
adcl
or
dec
stc
sbb
int3
jg
addr16
or
push
outsl
push
fwait
add
int
test
lret
icebp
adc
int3
jg
add
sbb
int3
jg
outsl
mov
or
mov
mov
jo
outsl
or
int3
testb
jmp
jg
sarb
pushf
mov
mov
sarb
jo
addr16
int3
aas
addl
or
pop
stc
sbb
int3
jg
addr16
or
cld
pop
or
orl
clc
sbb
add
cmpsb
or
sbb
xor
add
orl
in
or
jbe
fsubl
adc
add
cmpl
or
jbe
mov
es
sbb
orl
xchg
or
es
mov
rcl
loope
ret
addl
push
lods
sub
insl
jae
xor
or
sbb
out
add
cltd
xor
add
add
add
adc
neg
int
mov
iret
outsb
insb
orl
fs
or
or
add
or
add
imul
ror
loopne
gs
push
inc
scas
jg
addr16
std
dec
fildl
and
jo
push
daa
fs
std
sub
lret
inc
or
cmp
push
push
xchg
xchg
iret
adc
or
add
jg
je
add
mov
push
ds
fiadds
rorl
jmp
js
add
lret
std
movsl
jge
lea
movsb
or
iret
or
add
jp
roll
iret
jg
mov
add
into
lds
add
jg
rclb
cltd
pop
sarl
mov
push
roll
iret
jg
mov
and
popl
pop
pop
sarl
mov
filds
iret
or
lret
jg
movl
adc
int3
jg
add
in
jg
outsl
jmp
or
or
mov
jo
vpcomb
ror
jg
mov
add
movsl
xchg
lahf
jae
testb
jg
popa
lret
aaa
or
int3
jg
outsl
ret
orl
sbb
mov
jg
jmp
call
mov
in
adc
fcoms
fstpt
adc
orb
in
or
sub
add
in
or
stos
cmpsl
adc
mov
add
jp
pop
lock
ret
movl
daa
jbe
add
cli
sub
push
dec
cmp
mov
ss
in
dec
in
in
jns
mov
jns
inc
lret
mov
orl
dec
sub
xor
push
ret
icebp
test
or
es
and
insb
or
add
add
add
add
push
scas
sbb
push
je
inc
jmp
add
push
or
sbb
push
or
iret
fisttpll
mov
lock
dec
je
add
xchg
adc
add
out
mov
shrl
inc
push
mov
xchg
push
ljmp
add
hlt
loop
add
push
int
xlat
in
add
sbb
pop
filds
iret
pop
cld
mov
lock
pop
iret
jg
sahf
stos
and
pop
jbe
add
jg
sbb
in
lcall
int
aaa
sub
int
int
in
cld
stos
fstps
pop
push
ds
sbb
push
iret
jg
or
jne
jle
jg
push
add
aam
sbb
add
jmp
jbe
cld
repnz
add
repnz
mov
out
iret
push
or
les
mov
jo
nop
or
int3
push
mov
sarb
sbb
or
lds
mov
sarb
jo
cwtl
or
int3
mov
or
dec
add
add
lret
orl
lahf
test
test
mov
xlat
into
loope
push
dec
int
add
icebp
mov
orl
int3
icebp
adc
mov
jmp
iret
cmpsb
lret
sub
jg
add
jle
push
ss
ret
mov
push
rcrl
pop
cwtl
sub
and
or
push
or
out
mov
bnd
pcmpgtw
or
out
add
mov
test
addl
or
mov
xor
loopne
orl
cmp
add
cmp
or
jl
jmp
scas
int3
mov
mov
add
mov
add
loope
mov
or
repnz
shrl
or
add
orb
adcb
jne
mov
push
icebp
add
push
or
add
push
add
iret
push
or
xchg
icebp
jmp
push
repz
mov
dec
and
rorb
gs
push
xchg
loopne
dec
lock
add
add
jg
mov
jg
mov
subb
jnp
cmp
dec
or
in
iret
or
sarl
xchg
xchg
inc
mov
jecxz
iret
jg
mov
mov
outsl
das
push
loop
loopne
mov
add
jle
fstpt
add
js
add
ja
pop
out
fs
in
mov
idiv
inc
jle
aaa
push
add
or
add
cmp
int3
mov
jl
dec
stos
mov
adc
iret
jg
cmp
mov
add
out
mov
int3
jg
jb
fwait
sbb
shlb
sarl
popf
mov
mov
int3
jg
xchg
enter
clc
je
fidivs
or
int3
push
pop
lds
aas
jmp
push
xchg
add
add
add
jg
call
hlt
pop
jle
push
ret
sub
push
jecxz
add
pop
add
jg
jmp
repnz
in
jne
icebp
add
sub
sub
mov
or
arpl
lahf
lods
insb
out
sub
and
dec
jmp
mov
into
rorl
sub
in
push
jp
add
outsl
sub
int
xor
pop
mov
push
insl
cmp
out
mov
mov
dec
and
rcrl
addr16
cli
xchg
push
enter
insb
lret
stos
dec
sub
negl
mov
mov
lret
cmp
cmp
inc
and
out
inc
and
fistps
mov
addr16
cmp
mov
add
icebp
ljmp
jle
jbe
lock
or
decl
mov
xor
out
pop
mov
pop
or
insb
stos
push
or
cli
or
enter
adc
xchg
test
mov
jge
mov
test
mov
jge
pop
stc
mov
pop
dec
jg
adc
jecxz
imul
dec
add
push
jo
or
mov
sbb
push
daa
and
cmp
cltd
push
cmp
xchg
jecxz
fwait
fwait
lahf
jle
jmp
mov
ljmp
iret
jl
scas
jnp
add
repz
call
pusha
pop
xor
lret
sbb
inc
iret
dec
mov
mov
addb
fisubrl
mov
add
fistpll
or
lret
sub
mov
mov
jo
jmp
lret
cld
mov
int3
jg
pusha
ret
in
ds
inc
jno
jmp
xchg
jo
pusha
mov
jg
jmp
adc
jmp
add
jle
dec
ds
int3
jg
sub
cmpsl
cmc
je
add
pop
sbb
jo
ret
out
cli
daa
in
jg
addr16
or
sub
or
mov
or
sbb
mov
cwtl
or
jbe
lcall
xchg
or
jbe
or
mov
pop
mov
adc
jl
add
or
es
jl
mov
sahf
sub
add
add
test
jnp
or
out
addl
rolb
dec
adc
test
cmpsl
insb
mov
xchg
or
cmpsb
mov
iret
test
mov
or
iret
xchg
push
and
xchg
jmp
pop
dec
mov
mov
int
push
xchg
add
and
xchg
sbb
add
xchg
cmp
xchg
add
icebp
dec
and
icebp
mov
pop
or
dec
push
or
lret
call
push
sub
pop
or
iret
loope
and
pop
or
add
pop
or
jae
call
jg
push
into
jg
sub
movsb
sbb
push
mov
add
cli
push
sub
iret
outsb
ret
mov
add
cmp
sub
cli
mov
icebp
cmpsb
inc
cli
jle
and
inc
ret
mov
add
jmp
test
and
add
jg
add
jmp
test
and
sbb
pop
dec
push
ret
mov
pop
iret
jg
les
and
into
movsl
push
inc
ret
or
or
test
mov
add
mov
or
and
in
xor
rolb
scas
jg
aas
int
add
inc
int
rcrb
mov
jle
imul
roll
dec
pop
xor
adc
sub
in
mov
test
adc
shrl
movsl
addl
mov
pop
mov
add
add
add
jae
in
out
icebp
ret
int3
add
sub
add
add
orl
cwtl
in
mov
orl
imul
jbe
lcall
mov
and
out
ret
jne
std
sub
addl
push
out
cmp
push
and
out
add
push
sbb
orb
add
add
add
movsb
dec
jge
jmp
or
not
inc
mov
dec
repz
adcl
fmul
loope
and
sub
or
jbe
repz
push
dec
push
mov
pop
mov
fiadds
pop
mov
adc
iret
pop
or
and
pop
repnz
or
add
iret
fstpl
scas
in
xchg
pop
or
orl
pop
mov
mov
loop
xchg
jl
cmp
jl
push
push
mov
lods
jg
lock
push
jp
negl
jp
pop
sbb
shrb
ret
add
into
cmp
in
in
int
stos
push
int3
push
ret
pop
sbb
add
iret
jle
cmpsl
ss
sbb
sbb
mov
push
xor
lods
jns
movsb
scas
add
inc
pop
sub
and
iret
add
jbe
cmpsb
sub
imulb
js
push
jns
adc
int3
push
ret
or
jecxz
pop
bound
push
jno
loop
xor
ljmp
or
add
dec
je
jmp
ret
sti
xlat
jmp
out
test
mov
sub
sbb
or
sbb
mov
rcll
ret
sub
out
sub
xlat
lret
sub
cmpsl
ds
jb
shlb
and
imull
int
jb
add
out
push
sbb
test
out
mov
add
cmc
jg
mov
mov
call
pop
out
push
and
mov
out
lcall
addl
enter
jmp
lahf
push
testb
sub
enter
or
mov
or
repz
jp
insl
aas
jo
sub
cmpsb
roll
decl
aam
repnz
and
add
out
ret
outsl
out
in
cmp
mov
orl
ret
push
testb
or
pop
dec
mov
andl
dec
mov
or
iret
fstpl
fnsave
or
jle
push
xchg
pop
mov
cmp
pop
mov
jge
dec
push
pop
jo
repz
int3
cwtl
ds
or
jb
loope
and
add
adc
push
xchg
sub
add
loope
dec
inc
lret
xor
jle
loope
and
jg
dec
rep
jl
jmp
insb
dec
repz
xchg
push
lahf
cli
and
stos
jo
ljmp
jle
push
dec
sbb
fisubs
cs
ja
mov
sub
add
in
fwait
jle
add
pushf
out
jl
pushf
repz
std
iret
outsb
mov
xchg
int3
push
jge
clc
and
data16
cmp
push
cmp
mov
sbb
cli
nop
fcompl
jb
jmp
jmp
or
mov
jo
data16
shrl
or
mov
ret
sub
add
xchg
jnp
sub
mov
add
jg
lock
and
or
ret
stos
or
int3
jg
in
arpl
jge
in
outsl
jmp
mov
js
sbb
mov
ss
mov
adc
jb
xchg
fnstcw
sti
test
inc
jo
mov
sub
es
fiadds
cmp
adc
mov
ret
add
mov
and
orb
je
add
mov
push
insl
es
push
out
mov
test
sahf
dec
cld
repnz
ret
inc
mov
xchg
arpl
cmpsb
aam
cmp
adc
std
je
pop
cmp
mov
mov
in
add
iret
subb
cmp
decl
pop
mov
push
daa
lock
mov
call
icebp
jmp
dec
and
inc
in
mov
ljmp
icebp
dec
and
add
add
pop
scas
mov
sub
repz
repz
jbe
fistpl
push
int
cmp
xchg
sub
inc
movsl
sub
add
or
incl
je
jbe
jecxz
or
into
ja
push
bound
jge
jnp
add
jg
and
push
in
daa
lret
add
jg
dec
repz
jle
divb
pusha
inc
cmpsb
and
imulb
push
push
mov
push
xlat
pushf
iret
push
jp
stc
xchg
pop
stos
push
cltd
lock
stos
stos
xchg
das
add
push
lret
mov
mov
pop
hlt
in
testb
adc
fdivl
cmp
pop
mov
dec
adc
mov
xor
lret
or
mov
cli
push
int
clc
inc
lds
in
and
pop
pushf
xor
pushf
clc
shll
lods
js
fs
movsl
mov
jnp
jmp
add
jecxz
or
int3
jmp
hlt
int3
jle
jmp
int
adc
int3
out
jmp
into
jmp
popf
sbb
rcll
push
icebp
idiv
in
daa
aam
stc
mov
neg
add
pop
leave
add
dec
icebp
je
out
and
call
inc
mov
insb
mov
dec
insb
lea
add
add
add
jge
cmpl
or
popf
test
adc
lret
sub
int3
inc
mov
inc
pop
out
mov
push
rclb
sub
jge
ljmp
call
mov
jl
jne
pushl
add
jne
add
stc
out
add
cwtl
xor
add
pop
mov
int3
mov
fsubrp
add
push
sub
std
je
dec
pop
add
sar
aad
cmp
cmp
mov
fsubrp
sar
in
std
xchg
aad
lcall
sub
adc
out
dec
popf
fstp
call
inc
and
push
xor
add
insl
into
jno
jmp
add
push
or
add
sbb
jmp
pop
or
add
int3
mov
fstpl
pop
in
mov
jecxz
push
lret
in
pop
fmuls
popa
repz
jg
mov
filds
iret
mov
jecxz
push
push
repz
iret
jg
mov
and
push
jo
mov
inc
jnp
xor
pop
iret
jg
cld
push
push
repz
iret
jg
mov
or
int3
jg
mov
out
iret
or
int3
jg
lea
add
or
add
jl
add
aam
mov
filds
iret
or
int3
jg
jmp
enter
inc
outsl
or
int3
or
mov
sarb
cmpsl
lret
jg
addr16
orl
add
or
orb
dec
fmulp
push
ret
sub
inc
lret
sub
pop
cmc
sbb
int3
jg
mov
add
add
add
lock
pop
jb
jae
jmp
mov
lea
fdivrs
push
push
xchg
into
add
or
ret
pop
add
dec
pop
and
xorl
sbb
push
dec
or
outsl
jno
ret
add
inc
jge
testl
add
loop
dec
add
addl
mov
rorl
ss
adcl
pop
mov
sbbb
int3
sub
sahf
nop
std
pushl
orb
dec
ror
dec
ror
dec
ror
sbb
add
data16
sarb
or
jno
mov
into
push
aas
iret
iret
fdivrs
add
rcll
out
dec
inc
or
stc
cmpsl
or
rcl
mov
test
inc
dec
and
jl
aaa
mov
inc
push
adc
push
fwait
dec
iret
xor
add
sti
mov
push
sar
or
movsb
push
push
sar
clc
gs
rcl
mov
daa
or
mov
ret
fmul
push
clc
jae
add
sub
aam
movsl
andb
jecxz
iret
mov
add
xchg
sti
addb
lock
inc
shlb
mov
pushf
sub
mov
and
mov
dec
inc
sbb
incl
or
testl
push
or
loop
dec
cmp
inc
iret
mov
add
add
add
add
scas
or
rorb
add
stos
dec
pop
adc
mov
adc
pop
icebp
je
outsl
icebp
decb
jg
mov
mov
add
roll
push
int3
mov
push
inc
mov
mov
int3
jg
pusha
mov
int3
in
inc
nop
mov
or
fucompp
test
add
add
add
ret
test
test
ja
xchg
mov
or
add
pusha
cmp
into
in
xchg
mov
addl
push
in
jnp
ds
jo
out
sub
add
out
sbb
call
cmp
mov
jecxz
scas
sbb
ret
cmp
nop
jl
xor
outsl
dec
andl
leave
add
mov
mov
daa
data16
pop
or
or
lods
shrb
pushf
lods
js
or
mov
add
add
cmp
sbbl
addl
mov
inc
dec
xchg
dec
cmpsl
or
fists
dec
add
lret
add
adc
mov
pop
test
sarl
clc
std
mul
sbb
add
add
add
iret
or
rorl
inc
stos
rclb
invd
add
xchg
addl
loopne
iret
or
dec
xor
xlat
data16
sti
dec
or
daa
out
inc
pop
cmpb
pop
clc
or
filds
xchg
cmpsb
add
in
test
mov
push
xor
or
mov
shll
lds
add
pop
fisttpl
or
out
or
ja
sti
push
aad
xor
inc
insb
push
testb
push
or
and
or
and
or
les
jnp
test
in
ja
imul
in
mov
or
mov
jecxz
into
or
les
js
add
or
adc
popa
add
lret
xchg
test
adc
jno
xchg
test
inc
xor
lahf
out
call
or
inc
mov
jb
pop
aas
icebp
push
mov
in
fisttpl
or
test
out
mov
pop
or
jne
cmp
xchg
push
or
andl
inc
test
cmpl
mov
add
nop
cmp
mov
pop
push
fcomps
imul
inc
cmp
es
mov
dec
mov
cmp
add
mov
icebp
cli
out
pop
xor
stc
outsl
adc
into
outsl
sub
jecxz
cmpsb
stos
cmpsl
adc
fnstenv
jo
mov
inc
fistps
xor
mov
imul
add
pop
adc
add
add
add
xor
add
sub
sti
out
ds
jp
adc
in
test
mov
inc
filds
mov
lock
or
testl
xor
in
addr16
js
data16
push
sti
jle
stos
or
lock
daa
or
dec
cmpsl
icebp
xchg
xrelease
sub
add
add
add
add
sub
fisttpll
push
push
add
popa
pushf
lock
or
push
dec
cmp
push
mov
scas
inc
add
in
mov
or
push
inc
aas
iret
jg
rorl
movsb
push
mov
and
rcl
pop
jl
dec
aas
out
mov
xchg
outsb
adc
out
iret
push
xor
ljmp
add
add
add
add
jle
add
or
pop
mov
fs
add
xchg
inc
shl
lcall
add
jg
mov
int
mov
das
push
testb
fnstsw
aad
add
int3
scas
mov
pop
or
int3
jg
loop
push
jne
lret
cli
shrb
sbb
aad
cld
add
sbb
push
or
int3
mov
sbb
push
aas
push
dec
xlat
hlt
jmp
stc
push
xorl
pusha
adc
inc
loop
xchg
jp
jo
mov
in
inc
and
data16
in
fimuls
fildl
inc
cmp
lret
rcl
mov
in
lret
push
or
and
roll
add
aaa
pop
add
and
fadd
mov
enter
jecxz
outsl
cmp
pop
adc
push
xor
sarl
and
lahf
inc
jno
cltd
sub
add
mov
mov
sbb
cmpsl
push
and
outsl
inc
jno
fnstcw
push
xlat
pop
addl
jmp
dec
mov
xor
xchg
add
mov
push
pop
das
push
pop
push
add
sbb
or
cmpsb
mov
idivb
rorl
pushl
or
cmp
std
out
inc
aas
iret
ds
dec
and
mov
xchg
cmp
mov
std
cmpsl
jbe
aas
iret
mov
pop
or
add
push
pushf
fnsave
or
mov
sbb
std
call
data16
mul
cmc
add
rorl
dec
add
aad
cmpsl
outsl
fscale
mov
pop
jae
mov
mul
fstps
and
push
ja
fscale
cmpb
imul
jmp
stc
add
cld
inc
lret
or
adc
aaa
push
mov
aam
cld
movsl
cld
lahf
addr16
sub
push
fwait
mov
adc
cmp
roll
add
testl
jl
repnz
outsb
xor
add
jge
dec
fcmovnbe
pop
mov
xchg
dec
sub
daa
push
xchg
inc
iret
cld
lahf
sar
push
test
mov
sti
cmpsl
rorl
or
or
dec
jmp
xchg
jge
jl
or
in
jg
icebp
pop
dec
ret
hlt
sbb
add
pusha
cmc
cmpsb
sbb
cli
inc
cltd
fcoml
xchg
std
dec
push
and
dec
pop
pusha
test
or
mov
test
add
aas
dec
icebp
jmp
daa
or
cmp
es
xchg
rorb
and
ds
dec
dec
add
push
xor
test
out
pushl
or
int
mov
add
incl
js
xchg
xor
rorb
xor
filds
jo
adc
out
test
xor
ljmp
xor
mov
lods
outsl
push
xor
mov
jno
mov
cmp
add
mov
jge
cmp
out
orl
call
mov
addl
push
cmpl
add
shrl
pop
call
iret
sbb
and
push
cmp
into
push
or
pop
rcrl
pop
fmull
call
in
push
lock
call
decb
outsl
cmpb
dec
add
pop
inc
dec
icebp
cld
jnp
push
mov
into
fdivr
or
jmp
push
sub
std
lock
add
add
add
add
mov
rorb
fmull
mov
add
push
push
or
cltd
fimull
out
push
ret
call
sbb
fiaddl
pop
jg
or
rorb
iret
inc
jg
outsb
inc
add
xor
jo
jecxz
add
subb
cld
adc
mov
daa
jecxz
pusha
stos
jl
jl
push
repz
cli
mov
dec
inc
leave
adc
jnp
jle
scas
lea
mov
dec
icebp
xchg
jl
dec
jmp
mov
and
mov
jns
dec
icebp
sbbl
repz
jge
ret
in
js
icebp
add
test
mov
sbb
inc
push
icebp
scas
push
inc
mov
int3
jg
cltd
orb
push
test
hlt
xchg
jg
xchg
sub
clc
sbb
dec
in
inc
or
into
dec
jmp
movsb
orb
fwait
sub
gs
jmp
jg
add
das
js
mov
sbb
add
and
test
add
mov
add
or
jne
sbb
xor
jns
jne
cmpl
cmp
in
orl
pop
push
lods
lcall
outsb
xchg
pop
call
jnp
cld
push
fwait
rolb
arpl
jns
dec
call
xor
cmp
jo
sub
add
lds
inc
std
add
enter
push
push
jb
mov
mov
dec
add
aad
cmpsl
clc
into
and
push
and
xchg
push
jbe
jg
and
inc
pushf
rolb
ja
fdivs
jb
push
sarb
inc
or
push
dec
movsb
fcoms
xor
std
sub
je
push
jb
daa
xchg
sbb
stos
lret
add
fisttps
inc
jl
mov
push
jl
fcomi
mov
addr16
fadds
cli
lahf
lret
pop
pop
dec
lret
ret
push
cmp
jecxz
or
mov
mov
adc
aaa
rclb
push
sub
mov
jle
dec
xchg
fistl
loop
inc
sar
push
ret
ja
fcmovne
pop
cld
test
cli
cli
pop
fcompl
dec
sbb
add
push
pop
add
jg
jge
jle
and
xorl
arpl
add
sbb
mov
outsb
add
or
cld
lret
dec
jmp
add
fisubs
dec
ja
int3
testl
rcll
push
leave
add
sarb
jmp
sbb
js
test
sbb
inc
icebp
idiv
add
add
test
insb
sbb
fsubp
cli
outsl
xlat
test
inc
enter
adc
xchg
hlt
popa
lret
cmp
lea
leave
jg
cmpsl
fisubrs
out
pushl
je
cmpl
jge
jne
jae
cmpl
lea
push
cmp
incl
lcall
scas
sbbb
add
xchg
pop
push
pop
lds
sub
push
and
cld
inc
add
push
mov
mov
in
movsb
and
shl
inc
adc
mov
inc
jne
aaa
or
inc
sub
test
mov
dec
icebp
jno
jne
stos
sbb
incl
pop
or
add
pop
or
add
add
pop
or
add
pop
or
add
push
or
add
push
or
add
push
or
add
push
or
add
push
or
add
push
or
add
push
or
add
push
or
add
push
or
add
push
or
add
jg
add
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
std
lds
xor
xlat
test
stc
mov
adc
lahf
ja
in
lahf
push
pop
add
aas
popa
fstpl
in
lahf
inc
popa
ret
lret
inc
push
out
mov
mov
inc
fwait
int3
jle
mov
js
fisubs
leave
ret
mov
shll
lahf
outsb
add
fisubl
stos
mov
and
mov
pusha
or
into
sub
das
shll
adc
push
loop
aam
in
fisubl
stc
int
mov
lahf
fs
add
sbb
ss
fxch
jns
loop
outsb
jp
sarl
or
jns
std
fisubs
dec
add
and
push
jbe
jmp
ss
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
repnz
imul
and
adc
outsb
sub
stos
dec
or
jb
imul
cmpsb
jle
add
or
jbe
or
data16
add
or
jbe
or
jbe
or
data16
add
pop
or
add
pop
or
add
pop
or
add
pop
or
add
pop
or
add
pop
or
add
add
add
add
pop
or
add
pop
or
add
pop
or
add
push
or
add
push
or
add
push
or
add
push
or
add
push
or
add
push
or
add
push
or
add
jg
add
jg
add
jg
add
jg
add
jg
add
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
adc
iret
test
enter
jg
jns
add
outsb
mov
sarb
mov
mov
inc
clc
int3
jge
inc
mov
icebp
int3
nop
ds
sbb
or
nop
ds
shll
mov
lret
addr16
sarb
mov
or
loop
or
stos
into
jge
popf
int
sbb
xlat
addr16
or
std
lods
gs
sti
jg
mov
int3
mov
mov
add
mov
xchg
mov
outsb
cmp
int3
cmpsb
pusha
jle
mov
or
xor
cmp
jb
fs
xor
cmp
add
ja
jae
jno
push
jecxz
jnp
lret
jne
arpl
jo
jne
push
imul
jbe
fldcw
add
jb
je
add
pusha
insb
out
bound
outsb
or
mov
jae
andb
mov
cmp
mov
fs
pop
addr16
xor
push
dec
addr16
imul
sub
jno
push
or
arpl
sub
jae
lret
cmp
into
or
leave
and
jl
popa
cmpsl
lret
sub
sub
outsb
mov
je
push
cltd
and
add
xorl
arpl
daa
pop
pop
mov
pop
jae
or
jne
pop
cmp
call
or
stc
cmp
sub
pop
insl
sbb
inc
and
push
mov
cs
mov
and
cmpsl
outsl
add
mov
fldenv
push
xor
mov
clc
add
add
stc
sti
je
sub
aas
xor
sahf
xor
popf
mov
add
test
jecxz
jno
or
jle
push
sub
mov
sub
and
or
iret
outsb
adc
mov
scas
int3
sub
jecxz
xor
cmp
jnp
fidivl
imul
add
jg
mov
fsubrl
lods
jg
mov
outsl
ds
fcompl
stc
mov
js
ljmp
inc
divb
fs
fnstsw
pop
loopne
jl
shrl
insl
or
mov
adc
shrl
popa
dec
movsb
pusha
lcall
sbb
add
cmpsb
ja
jne
push
outsb
xchg
jg
mov
cmpsb
imul
pop
fs
dec
insl
insl
add
jo
outsb
inc
push
js
dec
bound
outsb
pusha
gs
arpl
cmpl
insl
add
push
or
bound
test
ja
outsl
pusha
imul
push
fildll
xor
add
insb
imul
xor
icebp
insb
repz
cwtl
jle
popa
iret
pop
and
cs
or
ja
hlt
idiv
das
idivb
add
or
jo
add
jno
nopl
push
and
push
and
sub
sub
imul
or
shrb
add
add
add
add
jp
jb
jbe
bound
mov
arpl
add
and
push
test
arpl
cmp
cmp
insl
pop
jg
and
cmpsl
xlat
and
stos
fdivs
iret
popf
les
xor
roll
test
jecxz
lock
xchg
add
xorb
jg
sub
movsb
cmpb
popf
pushf
aaa
add
in
stos
addb
mov
jecxz
mov
inc
daa
mov
aas
and
lods
inc
das
mov
inc
sub
iret
mov
add
iret
mov
cmp
adc
ss
sbb
mov
movsl
sahf
fs
lret
lock
ds
hlt
pushf
jge
out
stos
popa
lds
add
mov
jle
mov
pushf
jle
scas
fsubs
mov
movsb
addr16
fdivrs
mov
jge
stos
jg
push
lock
pop
add
popa
aas
lret
push
addr16
and
cmp
fdivrs
rcrl
lods
pushf
or
mov
jno
insl
xlat
pop
addr16
add
imul
bound
sub
xor
imul
pusha
bound
mov
imul
imul
jb
jb
adcl
imul
popa
aam
jns
inc
xchg
imul
bound
mov
add
pop
jnp
mov
gs
fs
add
loop
gs
bound
es
sub
insl
js
pop
outsb
push
jl
ja
cmp
clc
std
xor
inc
es
pop
and
imul
inc
and
sub
add
adc
jmp
ss
sbb
jb
or
out
push
adc
sub
jecxz
aaa
add
mov
push
add
lods
lds
jbe
aam
arpl
shlb
mov
xor
arpl
ret
jbe
sbb
mov
or
sarb
xor
lods
sbb
insb
mov
and
xor
xor
aam
sub
xlat
cmp
jg
xor
and
lds
std
jg
pop
call
add
mov
das
call
mov
jecxz
lock
sub
jg
xor
iret
mov
dec
daa
iret
mov
daa
pushf
lcall
iret
fwait
or
out
imul
lcall
fsubrs
js
mov
jp
cltd
pushf
insl
adc
mov
jp
rcrl
or
cmc
mov
sarl
sar
insl
ror
popf
jle
mov
mov
jge
mov
jae
cmpsb
mov
arpl
scas
stos
or
bound
mov
repnz
cmp
inc
cmp
cmp
dec
lock
imul
pop
pusha
popa
es
jb
pop
bound
add
gs
addr16
pop
or
leave
pop
js
add
xlat
addr16
xor
pop
pop
jbe
pop
addr16
pop
js
xlat
pop
or
fwait
push
pusha
add
je
data16
outsl
nop
xchg
or
xchg
jns
push
pusha
insb
imul
or
jmp
insb
ja,pt
pusha
cmp
popa
push
bound
sub
xor
popa
pusha
popa
iret
and
iret
fdivrs
add
mov
sub
sahf
imul
push
outsb
sub
xor
dec
cld
ljmp
adc
push
or
popa
push
xorl
xor
or
fs
xchg
divl
std
xchg
std
pushl
dec
sub
and
stc
sub
inc
sub
cmp
insb
ljmp
outsb
iret
add
sub
fdivl
add
add
add
add
pop
or
arpl
jg
and
mov
jg
das
sahf
stos
aas
sub
ss
test
sub
nopl
or
lcall
test
mov
popf
imul
xor
ret
test
xlat
xor
pusha
sbb
call
add
ja
out
shll
mov
lcall
lcall
mov
fwait
xor
cmpsl
ja
fbstp
xor
mov
outsb
xor
cmp
fs
fbld
jl
ret
jg
inc
mov
arpl
fsubr
popa
xor
repnz
ds
lods
scas
imul
mov
jmp
stos
js
mov
and
jmp
jge
repz
ja
out
mov
pop
mov
jb
je
int3
cmpsl
js
mov
stos
jns
mov
fwait
arpl
pop
jle
inc
pop
pop
jbe
sbb
subl
es
push
out
lret
push
inc
call
ret
pop
dec
mov
dec
inc
scas
mov
dec
inc
mov
pop
push
stos
cmp
stos
jb
cs
jl
add
jnp
add
test
mov
or
cmpsb
sbbl
xlat
push
inc
fs
jle
push
bound
xor
imul
jge
push
pop
bound
jle
iret
ljmp
addr16
cld
or
mov
notl
insb
add
pushf
int3
cmp
lds
inc
mov
cmp
dec
pop
stos
mov
or
add
cs
jb
pop
insl
imul
aas
jge
jo,pn
jle
dec
sbb
arpl
mov
sub
add
pop
inc
sub
popa
and
arpl
sub
inc
and
ljmp
cmp
add
jg
xor
fidivrs
xorb
cwtl
andb
mov
ja
mov
mov
inc
cmp
scas
dec
inc
pushf
movsl
inc
daa
popf
lds
daa
jnp
ss
jge
sbb
fs
and
cmc
mov
out
pop
iret
shr
sub
mov
and
mov
hlt
add
ficomps
pop
xor
and
mov
or
in
arpl
fsubs
jmp
ret
shll
mov
aas
mov
cwtl
arpl
lds
icebp
into
arpl
mov
bound
jle
xlat
mov
addr16
xchg
mov
dec
lret
mov
dec
or
sarb
mov
add
mov
inc
add
mov
jae
add
addr16
mov
loopne
mov
jae
loopne
add
push
jae
ret
pop
outsb
inc
gs
data16
inc
jb
push
pop
shrl
push
cmpb
push
pop
pop
jb
arpl
vmaxps
pop
or
mov
mov
adcb
xchg
fs
add
mov
jno
inc
xchg
addr16
outsl
lea
dec
mov
bound
jp
mov
pop
imul
jno
outsb
ror
imul
bound
pop
jle
iret
sbb
insl
sub
xor
jmp
pcmpeqd
cmp
gs
add
std
adc
adc
insl
hlt
sti
push
push
add
jecxz
sub
sbb
je
out
arpl
lahf
cmp
cmp
aam
popa
fwait
pop
daa
je
sbb
jge
xor
push
ja
mov
imul
push
or
xchg
popa
sub
xor
cmp
subb
and
enter
aad
push
pushf
mov
sub
scas
push
add
std
movsb
jecxz
std
test
aaa
mov
lods
addb
xchg
sbb
cwtl
xchg
movsb
mov
call
mov
sub
jg
xor
jg
xor
lcall
fwait
iret
inc
cmp
jecxz
jg
das
sbb
insb
fwait
pop
add
into
pop
sbb
insb
mov
divb
sub
iret
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
add
add
add
int3
jg
jmp
int3
jg
jmp
int3
jg
sbb
cmp
lret
add
imul
ret
lcall
inc
cmpsb
jl
add
jl
dec
aaa
jl
dec
daa
jl
dec
daa
jl
dec
aaa
jl
dec
aaa
jl
dec
daa
jl
dec
daa
jl
dec
ja
dec
ja
in
dec
addr16
dec
add
addr16
dec
testl
or
es
jns
mov
insl
outsb
mov
jnp
sbb
jnp
inc
jae
popa
iret
mov
add
push
or
add
jbe
pop
sub
dec
jo
pop
daa
je
sbb
add
cwtl
call
pop
sub
sub
into
sbb
add
push
imul
add
sbb
add
add
je
or
add
sbb
add
stc
cmp
into
cmp
iret
sbb
add
pop
adc
and
fs
add
sbb
add
mov
in
cwtl
push
xor
aaa
iret
and
add
ret
and
icebp
jecxz
xchg
xor
add
in
iret
push
add
jg
sbb
xchg
ret
sarb
jecxz
test
call
xchg
mov
fidivrs
add
pushl
pop
movsb
cwtl
mov
stos
jne
mov
lret
inc
sbb
jg
decl
es
insb
mov
sbb
or
lret
shlb
lahf
lods
imul
ret
aas
adc
add
popf
js
push
popf
bound
adc
js
enter
xchg
push
movsb
in
pusha
fisubl
addr16
pop
dec
into
loopne
addr16
pushf
xchg
popa
fwait
shll
mov
and
jmp
mov
mov
imul
jle
fstpl
add
add
add
add
mov
insl
add
pusha
addl
dec
leave
outsl
imul
mov
roll
gs
outsl
insl
push
test
push
jbe
mov
addl
imul
jb
outsb
imul
pop
gs
push
pop
jb
sarb
xor
push
test
push
imul
inc
sarl
mov
push
imul
sub
jl
pcmpgtw
ds
ja,pt
mov
ds
adc
jo
or
jg
pop
push
out
cmp
and
test
out
das
ret
insl
sbb
jecxz
ljmp
arpl
inc
jecxz
mov
rorl
add
aad
sub
sub
cmp
insl
repz
pop
movsl
cmp
repnz
psubusw
cmc
dec
cmp
ljmp
repz
test
and
movsb
aam
mov
adc
sub
stc
mov
inc
xor
pop
ljmp
call
xor
fnstcw
and
xchg
or
and
add
add
add
add
push
add
cmp
cmc
and
xchg
clc
stc
setae
das
sub
iret
fmuls
cwtl
fstps
mov
lds
mov
cwtl
xor
lods
fadds
subl
lds
scas
aad
pop
mov
stos
arpl
loopne
inc
and
insl
and
testb
ds
add
dec
ds
push
inc
add
pushf
js
mov
inc
out
sarb
xchg
ss
mov
pop
push
pushf
push
cmp
xchg
mov
sub
mov
sahf
addr16
adcb
or
stos
pop
movsb
mov
xchg
imul
dec
mov
mov
add
bound
orl
adc
mov
add
pop
jae
insl
and
je
sbb
outsl
lods
test
dec
cmp
arpl
mov
test
lret
push
adc
fs
and
and
mov
outsb
mov
cmp
mov
dec
icebp
sub
rolb
sub
add
icebp
inc
sbb
add
out
fldenv
decl
sub
out
push
loop
std
xor
jecxz
das
fnstsw
jecxz
mov
outsb
jecxz
mov
pop
sub
nop
mov
dec
outsb
push
jbe
gs
pop
jnp
inc
cmp
sbb
jne
xor
test
iret
pop
sbb
push
shll
add
cmp
popa
sub
sbb
sbb
and
pop
arpl
out
daa
jb
stc
and
aas
cmp
out
push
sti
jg
xor
xchg
xchg
add
mov
test
pushf
cmpsb
mov
sahf
mov
cmp
sahf
xchg
push
add
scas
inc
sbb
push
sub
int3
inc
xor
scas
das
sbb
sbb
add
jae
aaa
xor
enter
xchg
jecxz
sub
or
mov
stc
sub
fsubl
scas
lret
xchg
iret
xor
cwtl
lahf
dec
and
jecxz
cli
movsl
or
lds
imul
mov
pusha
jle
arpl
lods
jle
call
lods
jge
int3
mov
dec
mov
imul
mov
dec
dec
fstps
dec
mov
mov
push
cmpsb
arpl
mov
jle
shufps
stos
jge
shrl
popa
sti
lock
push
mov
mov
jle
sbb
insl
rorl
cmpsb
js
punpckhdq
adcl
xor
dec
cmp
pop
insl
dec
imul
add
add
add
je
lret
js
gs
pop
data16
pop
inc
push
movsb
mov
pop
ja
and
insb
push
outsb
xchg
fs
lds
je
pusha
jle
mov
fs
push
pop
je
dec
sub
fldcw
fsubs
jb
pop
dec
jo
ja
je
push
insl
jae
rorb
add
push
aaa
sbb
fisubl
push
or
cmp
sti
aad
outsb
mov
dec
outsb
mov
xor
cwtl
in
push
iret
ljmp
mov
add
cmp
sahf
imul
jbe
ds
imul
inc
jae
cs
imul
jg
dec
inc
inc
jne
inc
sbb
xor
add
sub
inc
add
push
add
sbb
je
add
in
mov
les
push
mov
cmpsb
sbb
movsb
test
jecxz
mov
sub
test
cmpsb
aaa
stos
stos
outsl
and
mov
cmpb
stos
jb
jo
ss
enter
mov
in
pop
cmp
add
je
sysexit
mov
inc
adc
scas
sbb
inc
xchg
add
sub
and
sub
and
or
sbb
movsl
or
xlat
scas
sub
lods
lret
mov
jge
mov
enter
stos
mov
mov
push
sarl
xchg
out
mov
pop
lods
clc
shlb
rcrl
push
sub
add
icebp
cmpsb
addr16
jecxz
pop
jle
stos
outsb
dec
fnstsw
dec
test
sahf
push
es
mov
sub
xchg
addr16
xchg
scas
sub
lods
leave
jle
jmp
stos
bound
mov
pop
outsl
rcrb
jb
pop
inc
insb
xchg
pop
push
insb
inc
shlb
sub
jne
bound
ss
inc
subb
push
dec
inc
add
ss
sbb
inc
mov
push
fs
or
imul
inc
ja
dec
pop
jne
js
push
data16
negb
jne
pusha
dec
push
mov
push
jae
sub
stos
sbbl
ja
popa
xchg
pusha
push
inc
xchg
pop
jnp
clc
pop
pop
pop
movsl
jl
outsl
iret
mov
adc
jno
popa
xor
jne
data16
sbb
jb,pn
inc
inc
insb
out
xor
xor
fistps
jno
inc
and
dec
pop
jecxz
cmp
jo
cli
and
xchg
or
scas
add
and
ljmp
mov
sbb
jae
and
arpl
or
pop
popa
sbb
pop
arpl
cmp
push
sbb
pop
dec
out
outsb
push
or
adc
sub
mov
add
mov
and
mov
add
mov
or
sti
mov
xlat
and
mov
aad
loopne
xlat
add
xchg
enter
scas
push
in
xchg
mov
sbb
xchg
mov
outsl
daa
mov
sub
mov
popf
pushf
jg
jo
inc
add
push
mov
and
inc
push
insb
mov
sub
imul
inc
out
movsl
js
adc
pusha
setg
adc
jge
int3
mov
add
jg
or
xchg
js
mov
mov
or
scas
xchg
jp
mov
mov
jp
loop
inc
xchg
out
xchg
jp
fisubl
lcall
jp
ret
mov
xchg
jp
fldenv
dec
loope
or
lods
mov
mov
jle
imul
bound
dec
insl
jb
je
and
data16
cmpsb
mov
pop
movsb
outsl
insl
jb
data16
xchg
addl
xchg
imul
and
add
xchg
insb
or
xchg
insb
js
inc
jbe
jbe
imul
imul
bound
push
dec
insl
jb
jbe
and
js
ss
pop
gs
outsb
insl
jb
gs
push
orl
mov
mov
jb
pop
cmp
scas
imul
fs
or
push
and
cmp
out
aaa
imul
or
add
imul
xor
and
test
je
mov
arpl
aam
pop
sti
es
cmp
jne
cmp
pop
or
repnz
jae
cmp
je
notb
insl
mov
in
inc
mov
jmp
add
je
pop
pop
arpl
add
add
xchg
and
scas
jg
daa
jno
pop
and
pop
mov
pop
scas
xor
jnp,pt
add
test
cmp
and
or
or
mov
adc
movsb
add
scas
scas
cmc
es
add
and
int3
es
mov
xor
cltd
scas
push
clc
enter
daa
lods
mov
jecxz
mov
xchg
and
pushf
outsl
xor
add
mov
dec
jge
sahf
bound
les
movsb
bound
mov
inc
mov
mov
sbb
mov
xor
ljmp
jmp
mov
mov
pusha
add
int3
popa
je
mov
push
mov
stos
stos
pop
jmp
mov
add
jg
rcr
popa
mov
jg
enter
sub
popa
jne
pop
arpl
pop
pop
js
push
bound
test
mov
pop
outsl
cwtl
outsl
ja
test
push
fwait
insl
outsb
outsl
test
pop
add
pop
jnp
pop
push
fs
pop
push
leave
pop
jle
repnz
pop
je
push
dec
inc
call
add
pop
js
xchg
popa
addb
and
fs
push
adc
ja
outsl
insl
pop
jne
js
jb
dec
inc
iret
sarb
nop
testb
test
sbb
jg
sbb
cmp
fs
jmp
arpl
sub
insl
pop
mov
fs
mov
push
jb
daa
je
pop
and
jb
add
daa
inc
insl
cmp
dec
pop
and
cmp
add
jne
jb
mov
arpl
jbe
jno
adc
jb
es
insl
cld
xor
addr16
loopne
imul
cmp
jmp
inc
cmp
cmp
arpl
cmc
daa
retw
jg
and
mov
aaa
jg
lcall
lods
mov
add
insb
mov
cmp
mov
inc
jge
sub
jg
push
sbb
pop
lahf
ss
mov
sub
xchg
jecxz
add
jecxz
mov
adc
movsb
mul
clc
pushf
out
add
scas
xor
sahf
aad
fnstsw
and
xchg
mov
frstor
or
xchg
addr16
add
loopne
pop
mov
rcrb
mov
mov
dec
xchg
lods
pushf
pusha
sub
push
or
xchg
js
lods
nop
or
lods
movsl
js
repnz
addr16
push
mov
xchg
addr16
scas
jle
cmc
cmpsb
pusha
add
jg
or
mov
jge
lods
xchg
push
jmp
add
add
add
movsb
pushf
jge
int3
mov
or
ss
jle
ss
bound
imul
arpl
es
js
or
insb
es
dec
jb
pop
push
je
xor
imul
mov
les
nop
push
pop
xchg
data16
jg
bound
pop
pop
gs
jb
push
fstps
ja
jne
pop
add
loopne
bound
insl
pop
mov
imul
dec
pop
jbe
pop
outsb
shrb
and
bound
jbe
pusha
je
sub
inc
test
sbb
jl
imul
ss
out
or
mov
ljmp
jl
push
jbe
mov
outsb
outsb
mov
add
mov
adc
add
jg
sbb
sub
push
sub
jb
les
pop
sbb
ss
push
sbb
addr16
sub
bound
add
outsb
ljmp
loopew
rorb
mov
pop
jmp
mov
es
jg
and
mov
xchg
add
adcl
add
jae
mov
test
cmpsl
adc
sahf
mov
pop
adc
stos
sub
sahf
dec
dec
pop
xchg
pop
sub
stos
aas
adc
xchg
dec
adc
xchg
ss
popl
xchg
sbb
xor
leave
rcrb
in
ss
sub
dec
pop
nop
or
fld
jle
fstps
imul
mov
cmpsl
lods
inc
mov
add
testl
inc
enter
mov
rorl
lcall
dec
nop
ficomps
jae
mov
stos
jle
lahf
mov
popa
inc
mov
imul
stos
dec
dec
ljmp
sbb
rcrl
mov
js
rol
js
fcompl
jle
add
test
jl
jne
jle
pusha
insl
add
jb
push
xchg
insl
jnp
xchg
jo
add
les
data16
jns
jle
les
push
jle
push
jb
jb
jle
dec
push
mov
dec
xor
fs
inc
jo
pop
sub
outsb
cltd
dec
xor
insb
jge
jp
or
xchg
popa
js
pop
outsb
insl
pop
call
add
gs
outsb
cli
dec
pop
imul
push
je
imul
cs
pop
adc
inc
jecxz
sub
inc
cmp
fildl
add
or
insb
mov
cmp
jno
orb
stos
push
and
lds
data16
icebp
sub
addr16
add
js
push
and
repnz
add
sub
adc
jbe
daa
jno
mov
jno
pop
cmp
inc
sub
adc
shll
adc
and
or
push
add
lods
or
sbb
xchg
out
sbb
mov
pop
sbb
mov
les
in
mov
int3
sbb
stos
dec
stos
repnz
xchg
mov
mov
addb
ret
xor
lea
adc
jae
jl
xchg
nop
mov
addr16
push
mov
dec
adc
sbb
or
imul
mov
dec
xor
or
ret
scas
cmpsb
jl
mov
addr16
mov
pusha
mov
add
add
add
stos
mov
cmpsb
js
nop
sahf
jle
cld
cmpsb
jge
fstl
mov
out
jg
lcall
or
out
lcall
scas
mov
or
aad
js
mov
jg
cmp
mov
popa
add
jo
popa
hlt
pusha
push
dec
pop
outsb
js
call
data16
add
lret
xor
je
outsl
jl
fildll
add
pop
jnp
iret
imul
xor
addl
outsl
test
push
je
or
jne
jle
pop
insl
add
je
arpl
inc
jbe
jb
sbbb
or
dec
pusha
js
inc
insb
insl
pop
inc
imul
andb
add
iret
inc
adc
inc
adc
adc
arpl
mov
push
arpl
adc
push
repnz
add
push
pop
aaa
dec
dec
sbb
dec
adc
dec
push
fnstenv
dec
iret
jl
jb
push
sub
sub
sbb
dec
int3
mov
pushf
lods
subl
sbb
loopne
or
add
add
add
add
sub
sbb
insl
pop
sti
push
pop
iret
jg
and
add
jo
jecxz
push
xchg
dec
adc
lahf
xor
pop
cmp
sahf
aaa
adc
xchg
add
lahf
push
adc
mov
pop
sbb
xchg
imul
out
pop
scas
scas
les
out
mov
fsts
add
xchg
sbb
xchg
mov
adcb
push
test
lea
add
mov
popf
int3
scas
popa
xchg
mov
scas
mov
inc
cmp
lret
mov
das
ljmp
inc
repnz
jge
mov
sahf
inc
adc
mov
dec
fisttpl
add
dec
sub
dec
sub
inc
cmp
sbb
int3
mov
scas
call
mov
jge
mov
sahf
inc
nop
out
mov
aaa
aam
push
xor
and
and
xor
cmp
inc
xor
das
cmp
mov
cmp
jl
imul
add
outsb
jle
in
push
ja
mov
push
mov
push
iret
jnp
push
push
pop
jns
bound
andb
inc
pop
push
mov
pop
jle
ja
or
test
outsb
orl
outsl
add
jae
sub
or
push
dec
dec
dec
inc
arpl
iret
fidivrl
jae
hlt
sbb
sbb
push
add
jl
daa
jno
lret
xchg
mov
insl
imul
jb
inc
xor
arpl
dec
adc
arpl
pusha
sbb
xor
cmp
inc
sub
outsb
add
out
add
mulb
insl
sti
push
cmp
aas
fimull
adc
popa
out
sub
add
fidivrl
pop
xchg
xor
mov
add
jg
add
sbb
arpl
mov
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
popl
cmp
push
add
aas
sbb
fwait
mulb
nop
dec
push
iret
mov
sub
adc
call
dec
adc
lcall
add
add
add
call
dec
mov
ret
lcall
ret
lcall
mov
or
out
mov
mov
cwtl
js
pop
mov
pop
jg
popf
pusha
xchg
scas
jg
mov
test
mov
push
push
pop
mov
pop
popa
pop
cmpsb
insl
or
mov
mov
dec
lahf
insb
jge
shll
adc
add
add
add
mov
outsl
jle
jnp
jle
shll
adc
insl
jo
or
jge
push
pop
insl
into
cmp
sub
jo
add
imul
fs
icebp
dec
bound
repnz
testb
add
orb
orb
orb
orb
orb
orb
add
in
fs
test
ljmp
mov
fs
mov
jbe
jbe
push
je
sbbl
pop
outsl
mov
hlt
insl
data16
jae
cmc
imul
mulb
iret
mov
fbld
cli
jo
xor
jae
cmp
fs
clc
ja
call
push
fnstcw
je
jl
and
or
and
mov
inc
and
pop
sub
sub
jno
mov
bound
pushf
mull
mov
sub
stc
mov
jbe
lcall
clc
xchg
cli
arpl
loope
aad
cld
insb
call
jg
ljmp
sarb
mov
pop
shr
ja
add
xor
movsb
dec
mov
jno
outsl
loop
stos
fsubrs
iret
gs
cmpsb
lods
lret
jae
repz
lods
sbb
je
hlt
aas
mov
push
hlt
loop
inc
jmp
arpl
fcoms
jno
clc
sub
jae
aam
pop
and
repnz
adc
add
mulb
lock
add
push
pop
addr16
inc
aad
pop
gs
xor
stos
cmp
mov
adc
shrb
imul
dec
popa
mov
and
out
pusha
test
push
or
fbld
jbe
insl
addr16
or
mov
inc
pop
cmp
mov
jle
mov
mov
add
pop
popa
dec
mov
imul
lods
push
adc
insb
and
xchg
dec
or
bound
jbe
push
jbe
in
imul
lock
pop
in
inc
push
xchg
imul
loope
inc
into
dec
inc
inc
mulb
xor
dec
aaa
sbb
sub
adc
cmp
push
scas
xor
xor
ds
sub
inc
jb
fistps
and
insl
jb
lods
or
or
jbe
in
push
js
lock
call
clc
jl
in
dec
push
mov
ret
sti
call
out
jmp
hlt
push
stos
std
jae
stc
out
stos
daa
roll
or
jno
ret
clc
pop
xchg
sar
mov
in
add
iret
sbb
insl
cmpsb
cmp
jae
pop
out
addr16
sti
bound
fbstp
pop
loope
iret
xor
pop
xchg
and
push
outsb
jne
je
push
in
iret
mov
ss
cmpsb
xor
lret
mov
out
inc
mov
jg
mov
js
jecxz
or
and
mov
xor
pop
daa
jecxz
add
or
mov
xor
push
jecxz
stos
popa
iret
hlt
xchg
insl
enter
icebp
mov
ret
pop
lods
in
pushf
bound
js
jg
jle
xchg
fisttps
imul
dec
outsl
in
pop
pop
mov
jg
add
jg
add
addb
jg
add
jg
add
addb
loopne
or
lret
mov
testb
int3
movsb
or
int3
pop
or
shll
or
int3
lods
or
int3
movsb
or
shrl
or
int3
mov
int
pop
or
int3
mov
iret
int3
mov
jmp
push
imul
insb
push
sahf
and
imul
popa
js
mov
and
pop
imul
pop
jle
add
push
stos
jecxz
pop
jle
negl
add
mov
insl
addr16
mov
bound
adc
jbe
aam
sub
jae
jnp
imul
icebp
insl
jb
mov
push
fs
push
mov
in
jbe
inc
mov
insl
insl
or
insl
and
jp
adc
sbbl
loopne
gs
icebp
insl
jb
mov
insl
jb
add
int
je
into
insl
jb
loopne
and
xlat
and
and
shl
and
iret
inc
gs
fildll
pop
ljmp
cld
cmp
jne
mov
flds
cwtl
or
sti
ja
cmpsb
fmull
cltd
fbstp
cltd
es
hlt
or
ljmp
incl
in
mov
pop
mov
and
jae
add
xor
jae
stc
or
scas
lret
iret
orb
iret
mov
inc
nop
ficoml
daa
rorb
fcoml
adc
push
xchg
fisttpl
pop
faddl
sub
inc
or
or
mov
iret
arpl
xor
add
jb
loope
data16
push
fs
sub
icebp
repz
fadds
pop
out
in
jg
cmc
add
in
jno
loop
pop
sub
stc
arpl
ficoms
out
repz
movsl
mov
mov
iret
repz
repz
mov
mov
fidivs
cmc
jnp
enter
fwait
cmc
imul
gs
les
jb
insl
dec
xchg
out
pop
jg
call
lods
outsb
lea
push
mov
pop
dec
mov
outsl
js
add
mov
push
sub
mov
inc
je
pop
jmp
imul
nop
hlt
push
sub
popa
add
pop
gs
push
aas
add
popa
popa
xlat
int3
push
inc
or
popa
pusha
int3
aaa
bound
and
inc
jl
repz
movsb
cld
pop
insl
lds
arpl
out
pop
pop
cmpsl
adc
add
push
jmp
imul
jecxz
jae
lret
push
imul
in
add
sarl
into
lock
lock
in
insl
data16
jb
jg
pop
mov
out
inc
shl
insb
rcr
gs
jg
dec
sbb
arpl
jg
jb
out
push
sub
fistl
add
or
imul
inc
popa
push
jecxz
popa
iret
adc
sar
test
jae
cld
shlb
jbe
call
jae
push
jmp
iret
movsb
out
and
loope
sbb
inc
std
addr16
cmp
push
cmc
jnp
jae
lods
frstor
mov
insl
lock
or
or
add
xor
outsl
stos
call
and
push
stos
int3
fsubrs
out
insb
mov
sar
xchg
jg
mov
jnp
mov
outsl
imul
imul
adc
jbe
cmp
push
sub
add
lods
pop
daa
or
sti
dec
pop
lock
pop
dec
filds
add
jg
lds
dec
xor
push
cmp
shl
push
icebp
in
insb
pop
shl
outsl
add
jmp
mov
das
cmp
cmp
cmp
mov
clc
ds
fistpll
daa
fbstp
cmc
mov
push
jbe
clc
mov
push
fstps
insb
arpl
in
outsl
jae
or
movsl
or
lcall
push
jno
add
pop
jl
cwtl
cmp
pop
out
jl
sahf
outsl
jns
jge
sub
mov
insb
jge
jge
imul
jge
int3
pop
ja
jo
imul
mov
mov
mov
aas
mov
push
pop
or
arpl
pop
dec
pop
add
ja
inc
in
gs
lcall
add
and
push
inc
and
push
push
dec
ficomps
xor
inc
and
loopne
imul
inc
push
icebp
les
ljmp
push
mov
inc
push
out
insl
jb
fdivrs
mov
xchg
pop
jne
out
inc
mov
fildll
ret
popa
inc
divb
inc
out
push
shl
jbe
adc
push
insl
add
adc
testb
scas
insl
cmpsb
sub
pop
jnp
shlb
mov
or
dec
sti
out
pop
fcomp
bound
in
jnp
cld
iret
enter
dec
sarb
iret
add
mov
pop
dec
clc
push
inc
add
xor
cs
fdivrs
shl
adc
into
fildl
add
add
lock
je
mov
pop
add
aam
mov
mov
ljmp
iret
add
cmc
adc
idivb
xchg
loop
jae
aad
pop
mov
insl
lahf
lahf
fcompl
scas
pop
popa
xor
je
fwait
jg
das
pop
jecxz
aas
arpl
cs
jno
sub
das
push
arpl
sub
and
add
pop
xor
aad
jecxz
iret
jne
loopne
clc
and
cld
je
imul
dec
ss
pop
or
stc
jae
jecxz
dec
adc
pushf
push
sub
lahf
bound
inc
popaw
cmp
dec
and
enter
mov
sub
dec
jge
pop
pop
jle
int3
dec
popa
mov
repnz
jle
clc
popa
jle
cmc
pop
imul
clc
jne
mov
cmp
pop
movsb
pop
pusha
jmp
mov
imul
or
scas
bound
lods
outsb
addr16
push
mov
gs
or
or
xchg
or
insl
dec
js
pop
and
jp
lret
cmc
lock
fcmovbe
adc
jl
adc
jl
adc
adc
in
add
add
aam
and
in
je
ficoms
pandn
inc
loope
jae
fistpll
out
pop
push
push
in
jae
pop
popa
cmp
pop
outsb
xchg
pop
jb
jg
push
out
push
outsb
pop
call
imul
outsl
or
jb
loope
insb
fucomi
lock
lcall
imul
hlt
outsl
mov
add
fcomp
insb
test
mov
sub
test
clc
pop
mov
pop
pushf
ret
clc
jb
fmul
pop
jnp
enter
rolb
mov
jno
or
bound
mov
scas
bound
je
inc
ss
jecxz
sub
jo
dec
jecxz
es
iret
call
cmp
jae
mov
insl
add
bnd
jno
mov
fnstsw
pop
fstp
jae
out
jg
shrl
clc
out
pop
pop
ret
test
repnz
dec
xlat
clc
lahf
jg
fidivs
fs
mov
xchg
pusha
fisubs
mov
repz
int3
fnsave
mov
jb
pushf
repz
scas
rcl
dec
jb
cmp
test
sub
pop
ret
rolb
adc
ret
push
negl
inc
in
push
dec
fdivp
push
push
shl
insl
xor
negb
icebp
js
or
ja
or
pop
pop
jle
xchg
jmp
imul
inc
jmp
addr16
int3
cltd
jns
sub
jns
or
and
jg
push
jmp
pop
push
shrb
push
pop
insl
mov
add
pusha
bound
clc
call
dec
fadds
scas
cmp
mov
dec
mov
xchg
xor
fdivs
cmp
xchg
cmp
popa
add
faddl
mov
mov
je
fdivrl
lcall
push
mov
xlat
fisubrs
inc
lret
aad
fs
jl
add
add
jl
add
lcall
imul
jnp
inc
lret
jp
hlt
jnp
push
dec
rolb
fnstsw
inc
lret
jp
hlt
jnp
dec
imul
pop
data16
jae
les
je
xor
iret
inc
dec
pop
lds
fdivrl
iret
inc
aad
repz
add
lods
iret
pusha
std
xor
les
in
insb
fmuls
out
jmp
add
imul
aad
mov
test
jo
jle
pop
js
shlb
int
pop
cmpl
data16
enter
imulb
ljmp
or
call
insb
xor
enter
imulb
ljmp
sbbb
mov
sub
sti
pop
push
repz
enter
ss
in
imul
ljmp
in
pop
adc
in
pop
cmc
lds
pop
out
in
addr16
stos
pop
jecxz
mov
jno
nop
push
fcmovu
push
int3
idivb
test
mov
loopne
test
jo
scas
shll
mov
add
inc
jno
loopne
xchg
pushf
fnstenv
adcb
mov
or
stos
jno
cmp
insl
inc
js
js
in
bound
inc
pop
dec
push
pop
dec
test
sbb
outsl
addr16
sub
sbb
pop
pusha
jmp
pop
cmpsb
push
cli
int3
dec
addr16
popa
int
pop
jae
sbb
jl
add
and
int3
add
inc
into
cld
xor
mov
fsubl
bound
pushf
inc
jge
mov
sbbb
icebp
pop
gs
insl
jb
lret
gs
lret
pop
jb
jnp
insl
sub
xor
jge
mov
jmp
popa
movsl
ljmp
vmaxss
out
push
arpl
fdivp
pusha
aad
pop
jne
add
out
push
arpl
leave
lock
hlt
loopne
dec
xlat
enter
mov
gs
mov
pop
outsl
or
ja
xor
push
push
aas
mov
push
push
lds
inc
pop
aam
add
loope
gs
sub
inc
sbb
pop
cmp
divb
cld
shrl
inc
or
inc
aad
stc
xor
inc
testb
add
jbe
add
mov
insb
lock
out
or
decl
fdivs
imul
sub
dec
orl
imul
shll
mov
mov
lahf
js
bound
in
jno
or
bound
in
jno
jg
mov
scas
ret
sarb
pop
xchg
and
popa
jo
mov
mov
sub
push
mov
or
das
aam
cmp
in
push
add
in
pop
push
loope
outsb
jecxz
add
cld
outsb
inc
repnz
fldln2
jg
mov
dec
ret
shrb
jg
mov
lods
insl
stc
loopne
jg
mov
lahf
pop
aad
andl
in
push
jecxz
pushf
dec
xchg
and
or
add
adc
sub
out
outsl
jp
fiadds
inc
cmpsb
pushf
mov
mov
pop
jle
jae
dec
cltd
in
dec
jge
sahf
loope
xchg
mov
aas
dec
je
sub
jle
jle
cmp
inc
shll
pop
sbb
xchg
addr16
dec
aas
cmp
sub
jmp
in
dec
popa
sti
and
pop
sub
xor
cli
outsb
js
add
push
ss
mov
clc
loopne
mov
and
add
scas
or
sub
jnp
xor
jp
movsb
jl
dec
or
push
inc
out
jnp
pop
out
insb
xor
sub
sbb
ja
and
cmp
lds
pop
push
lret
push
jae
rcrb
adc
inc
xor
lret
push
jae
add
jnp
dec
test
jnp
fldln2
insb
add
sub
push
int3
push
jae
rcrl
add
inc
int3
adc
mov
jo
and
arpl
add
fcomps
and
or
jl
iret
jae
or
bound
and
pusha
cmp
pop
leave
inc
cmp
jno
or
pop
push
or
insb
sbb
aam
add
sbb
pop
call
dec
jmp
jo
in
icebp
pushf
fbstp
inc
fcos
std
jne
jae
xchg
bound
fstp
insb
test
xchg
pusha
stos
je
jb
fdivr
insb
movsb
jg
rclb
lret
push
add
xchg
insl
ljmp
lret
push
mov
jle
adc
add
and
mov
outsl
xchg
repnz
xor
repnz
sar
cmp
repnz
xor
dec
repnz
dec
repnz
outsb
xor
enter
fbld
in
ljmp
fnstsw
das
adc
call
scas
push
add
mov
or
in
dec
ja
and
shrb
int3
add
and
les
push
arpl
cmc
dec
or
frstor
mov
jmp
mov
cmp
mov
jge
popf
push
bound
push
bound
mov
bound
push
jge
mov
pop
insb
arpl
jge
xor
push
jae
ja
pop
or
xor
sbb
dec
ja
aas
insb
popa
add
add
cs
add
mov
popa
and
push
dec
iret
loop
outsl
adc
lret
or
xor
sarb
sub
addr16
aas
jne
in
pop
outsl
pop
adcb
jecxz
jne
mov
add
insl
outsb
sub
imul
push
into
lock
pop
mov
lock
mov
and
add
mov
jo
mov
ja
mov
jae
iret
jge
ror
pop
imul
in
pusha
lods
fstp
insl
mov
xchg
bound
insb
jge
xlat
pushl
jmp
pushw
or
mov
adc
mov
sbb
subl
fwait
out
and
pushl
mov
repnz
push
pop
repnz
pop
add
ljmp
pop
ljmp
addr16
dec
in
std
inc
fbstp
call
loop
ljmp
or
and
dec
and
sub
and
cmp
add
cmp
add
and
cmp
add
mov
add
mov
add
add
bound
add
mov
add
mov
add
push
mov
add
mov
add
push
and
push
and
pop
and
pop
and
pop
or
lret
and
sub
push
xchg
lret
add
shll
subb
pop
xchg
sub
jle
sub
sbb
sub
add
ret
shrl
xchg
test
int3
pop
xchg
test
int3
xor
int3
mov
test
int3
imul
test
int3
loope
test
int3
inc
lret
test
int3
mov
sub
adc
sub
cwtl
int
lret
jbe
sub
xrelease
sbb
cmpsb
addl
cmpl
add
add
add
testb
enter
leave
out
sbb
testb
into
out
shl
sub
mov
mov
ss
xlat
es
fisubl
jge
fidivl
jge
fdivl
jge
fsubl
jge
frstor
jge
fnsave
jbe
jbe
hlt
fisubs
js
data16
loop
jl
jecxz
jl
jecxz
jl
in
jl
out
jl
out
add
andl
cmpsb
or
jnp
or
bound
or
iret
out
add
out
add
out
add
out
add
out
inc
mov
jmp
pop
pushf
jle
push
mov
jae
dec
lahf
sub
pushl
lret
or
lahf
aam
lcall
iret
stc
in
xor
leave
ja
add
or
jae
sub
sub
iret
add
ret
and
jmp
push
scas
pop
dec
call
scas
lahf
rorb
rorb
ss
mov
and
pushf
aam
out
mov
and
mov
and
lahf
pop
loope
lahf
in
and
lahf
add
mov
scas
lahf
add
push
lret
loopne
arpl
adc
rcl
loop
iret
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
add
add
add
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
cmpsb
orl
jbe
or
jbe
or
orw
or
jbe
or
add
jbe
or
orw
or
orl
orl
orl
orl
testb
add
orb
orb
orb
orb
orb
orb
orb
orb
orb
orb
out
add
out
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
out
add
out
inc
sub
lret
test
sub
jne
cwtl
scas
fisubrs
lods
xchg
jecxz
and
pop
arpl
jo
jmp
lret
jg
add
loop
dec
and
jo
jecxz
mov
jg
add
jg
add
jg
add
shl
or
jecxz
sub
loop
iret
jg
repz
loop
iret
jg
incl
add
shl
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
jmp
jg
call
fsubl
or
mov
jns
ret
mov
mov
mov
test
scas
lret
pop
popa
test
sbb
cmpsb
daa
hlt
pop
test
or
pusha
xchg
loop
xchg
add
add
add
add
jnp
loope
addl
cmp
imulb
ja
in
mov
jmp
iret
imul
incb
or
std
test
adc
jno
psubusw
sbb
cltd
cmp
outsl
and
pop
mov
icebp
add
jge
pushl
jge
add
jge
add
icebp
pushl
lock
add
icebp
add
icebp
add
lock
lock
icebp
add
or
xor
add
shl
jmp
shl
add
shl
add
shl
pushl
shl
jmp
jge
add
jge
add
shl
add
jl
push
jl
add
jl
add
jl
dec
out
add
call
loop
dec
out
add
out
mov
add
loop
add
out
dec
out
dec
out
add
out
add
out
incl
out
pushl
lock
push
out
lcall
or
iret
loop
dec
incb
lock
fimull
xor
or
iret
dec
loop
add
call
loop
decb
out
dec
loop
clc
in
dec
jg
incl
add
jle
add
jg
add
iret
loop
ror
loop
iret
jg
add
addb
loop
iret
jmp
or
ret
cmpl
ret
add
jg
add
inc
or
ret
inc
sbb
loop
mov
jmp
or
loop
mov
jg
add
jmp
sbb
add
jg
or
loop
add
iret
jg
add
jmp
or
ret
sbb
jecxz
or
int3
outsl
or
int3
jg
jmp
dec
jo
or
or
dec
jo
jmp
dec
jg
jmp
dec
outsl
or
int3
outsl
mov
int3
outsl
or
dec
jg
jmp
dec
outsl
mov
dec
jg
jmp
dec
jg
or
jg
or
mov
add
push
outsl
or
lret
jg
jmp
int3
jg
or
or
dec
outsl
mov
int3
outsl
or
int3
jg
leave
int3
outsl
or
dec
jg
add
orb
sbbb
add
out
or
testb
adc
or
out
or
movb
xorb
or
cmpsb
orl
mov
or
sahf
orl
or
add
orl
jbe
or
outsb
orl
or
or
jbe
push
add
push
or
push
add
orl
add
orl
orl
orl
push
add
or
xlat
into
or
xlat
into
push
add
fiadds
add
push
add
or
iret
into
push
add
fimuls
iret
fiadds
add
add
push
add
or
push
add
or
xlat
into
or
iret
into
push
add
or
iret
push
add
push
add
or
iret
push
add
fimuls
iret
into
push
add
push
add
fimuls
push
add
or
iret
into
or
fiadds
add
or
iret
jg
add
ja
add
iret
jg
add
add
int
sti
add
ja
add
ja
add
iret
jg
add
ja
add
iret
jg
add
ja
add
dec
andb
fs
jg
add
jg
and
add
in
dec
and
iret
jg
add
jg
and
jecxz
dec
andb
fs
jg
add
jg
add
and
add
dec
orb
jg
jmp
int3
decl
call
lret
jg
jmp
lods
jg
imul
jg
imul
jg
imul
decl
push
lret
decl
call
in
decl
push
lret
jg
jmp
int3
jg
jmp
add
stos
jg
imul
decl
call
lods
decl
push
mov
or
cmpsb
jle
add
jle
add
jle
add
sahf
or
daa
jle
add
popf
or
jbe
mov
addr16
add
popf
or
jbe
or
idivb
add
popf
mov
data16
add
popf
or
es
mov
cmpsb
test
add
mov
add
mov
add
cmpsb
test
cmpsb
jge
add
or
jbe
or
data16
add
add
jbe
add
jbe
or
data16
inc
iret
or
or
or
or
int
or
or
or
iret
or
or
or
or
add
or
or
add
or
or
or
iret
or
add
or
int
or
or
int
or
or
xlat
or
add
and
cmp
jecxz
xlat
aas
jecxz
iret
jg
add
jge
add
cmp
jecxz
xlat
jg
add
add
cmp
jecxz
xlat
jge
add
jg
add
aas
jecxz
iret
cmp
jecxz
iret
jge
add
aas
jecxz
jg
add
jg
add
aas
jecxz
movl
jecxz
push
jecxz
cwtl
bnd
rcrb
repz
jg
ret
mov
orb
adc
mov
or
add
int3
jg
stc
int3
aas
or
or
adc
int3
jg
lock
int3
aas
or
or
adc
or
lock
or
adc
int3
jg
fxch
aas
sub
int3
aas
sub
int3
jg
stc
or
or
or
sub
mov
lock
mov
sub
mov
adc
int3
jg
stc
int3
aas
sub
mov
mov
or
xchg
ret
xchg
orb
orb
lock
data16
ret
inc
orb
ret
es
orb
xor
ss
orb
orb
or
test
jmp
orl
shl
push
orb
lock
out
or
mov
xor
add
mov
or
xchg
orl
subl
movsb
leave
lock
hlt
incl
fdiv
pop
iret
hlt
pop
rcr
hlt
pop
lret
or
iret
or
iret
fmuls
rcr
or
iret
or
rcr
or
lret
fdiv
ljmp
xlat
hlt
dec
fdiv
pop
iret
fmuls
iret
hlt
dec
fmuls
lret
or
add
rcl
hlt
pop
lret
fmuls
iret
or
lret
hlt
fcomp
hlt
call
fdiv
pop
rcl
hlt
pop
iret
fmuls
iret
or
lret
hlt
pop
iret
or
lret
hlt
pop
iret
jg
add
jg
sti
mov
in
scas
jnp
add
jg
add
jnp
sti
push
and
out
jg
sti
loopne
in
cmp
in
add
sarb
sti
enter
and
in
iret
jnp
sti
mov
jecxz
scas
jnp
sti
loopne
jecxz
iret
jg
add
jg
sti
enter
iret
jg
sti
mov
jnp
sti
enter
iret
jnp
sti
mov
ret
in
out
jg
test
pushf
ret
lock
jl
sbb
int3
jg
test
int3
jg
jmp
add
add
add
int3
jg
test
int3
jnp
sub
sbb
cmp
or
cmp
sbb
inc
jg
jmp
sarl
jmp
sarl
jmp
add
lock
sarl
sub
jnp
jmp
fcmovnb
lock
int3
jg
test
int3
jg
jmp
data16
or
mov
or
add
jbe
or
cmpsb
jle
add
into
lock
jle
add
jle
adc
lock
into
or
jbe
lock
jle
add
jle
adc
jnp
adc
jle
adc
jle
add
lret
lock
jle
add
lret
or
out
or
mov
or
idivb
adc
int
xsha1
cmpsb
lret
lock
add
add
int
add
int
add
lock
push
std
mov
or
mov
dec
lret
xlat
or
iret
or
iret
out
incl
and
add
or
iret
les
pop
mov
call
xchg
dec
xlat
or
iret
or
iret
fisubrs
xor
ljmp
inc
mov
and
or
iret
or
add
iret
or
or
xchg
clc
or
iret
or
iret
in
outsb
jmp
mov
fdivr
xchg
sarb
add
jg
add
jg
jl
rcr
mov
test
jg
add
jg
jnp
rcrb
shl
add
add
jg
add
jg
jnp
rolb
shlb
iret
jg
add
add
jg
jnp
shlb
iret
jg
add
jg
add
jg
add
jg
add
jg
orl
rclb
mov
ljmp
shl
dec
shl
dec
mov
lock
mov
lock
dec
mov
lock
lock
dec
mov
dec
mov
lock
mov
lock
loopne
lock
sarb
lock
push
mov
lock
mov
lock
mov
lock
inc
mov
lock
push
mov
lock
inc
mov
icebp
lcall
or
ljmp
or
ljmp
icebp
incl
add
icebp
call
or
lcall
or
jmp
or
ljmp
or
call
or
lcall
or
pushl
icebp
pushl
or
loopne
icebp
clc
or
call
or
pushl
icebp
incl
icebp
jmp
orb
or
pushl
orb
or
dec
or
out
or
ljmp
jl
incl
add
addl
loopne
xchg
fcomps
call
jnp
dec
jecxz
inc
cmpsl
or
iret
jo
pushl
jl
jmp
cmpsl
or
iret
mov
test
and
js
test
jo
test
push
cmpsl
or
iret
xor
call
test
dec
add
cmp
cmp
add
jmp
jmp
in
jg
sbb
jg
or
xchg
mov
mov
loop
iret
jg
xchg
mov
je
sarb
test
mov
add
test
movsb
test
mov
lret
mov
mov
jo
inc
test
cmp
add
add
add
pusha
mov
repnz
in
dec
mov
or
xor
mov
mov
or
inc
mov
lock
dec
mov
lock
dec
mov
lock
lock
mov
lock
mov
lock
push
mov
lock
push
mov
lock
add
push
mov
lock
dec
mov
lock
inc
mov
lock
mov
lock
inc
mov
lock
push
mov
lock
mov
icebp
ljmp
icebp
incl
icebp
push
jle
add
add
jmp
jle
add
add
call
add
decl
add
pushl
add
add
jmp
add
pushl
add
ljmp
add
decl
icebp
jmp
add
pushl
or
loopne
icebp
jl
icebp
jmp
or
sub
icebp
decl
push
icebp
pushl
push
icebp
lcall
call
jle
add
push
cmp
push
test
and
test
sbb
incl
add
sub
incl
in
test
clc
jmp
test
call
cmpsl
or
iret
cmp
dec
cmpsl
or
iret
arpl
inc
cmp
jmp
or
int
movsb
pop
xor
lahf
imul
or
iret
in
insb
cld
or
pop
jmp
lea
push
mov
iret
fisttpl
imul
inc
adcb
xchg
sub
lods
scas
and
add
and
jge
inc
lods
outsl
and
add
jle
lods
outsl
push
inc
jle
add
jle
lods
outsl
push
pop
ret
sub
mov
cmp
in
ret
cmc
add
sub
xlat
ret
roll
adc
mov
sub
ret
mov
out
xor
add
add
add
add
jecxz,pt
push
jg
mov
or
sub
jge
sub
xorb
sub
fwait
or
push
sbb
or
sarl
jle
insb
sub
das
xor
addr16
sub
and
int3
jg
and
sub
sub
inc
movups
pusha
add
into
or
stc
lcall
rolb
add
or
int
popa
enter
lret
pop
push
jle
lea
addr16
xor
lea
push
jmp
sub
pop
add
pusha
push
inc
out
push
add
insl
popa
lcall
je
in
jns
subl
loopne
gs
inc
imul
mov
pop
je
add
out
jnp
push
jge
imul
in
pop
outsl
jecxz
fs
mov
and
jns
jl
xchg
in
jl
push
in
pop
jb
sbbb
xchg
out
inc
data16
in
insl
popa
iret
adc
push
lock
mov
pop
mov
test
and
js
insb
lods
cmp
data16
popf
pop
mov
dec
lahf
cmp
bound
and
insb
jnp
jo
fcmovb
bound
or
imul
cmp
lret
jl
mov
lret
mov
cmp
lahf
ds
adc
dec
sub
stos
ds
xor
lahf
xorb
sbb
add
add
add
add
sbb
in
inc
test
inc
mov
add
sbb
lods
xor
mov
jg
add
and
inc
dec
mov
cmpl
jl
sub
pop
sbb
lret
jb
repnz
jg
lahf
pop
dec
sbb
sub
repnz
daa
cmc
sahf
das
sub
mov
aas
jecxz
sbb
sahf
sbb
aad
and
scas
sahf
add
add
ret
and
fwait
xor
sbb
int3
cmp
mov
sbb
addr16
inc
arpl
pop
js
subb
cmpsb
pop
xor
sub
dec
inc
jle
insl
sbb
insl
cmp
sub
cmp
mov
and
cmp
sbb
arpl
sub
cmp
and
daa
and
pop
jne
jg
add
cmp
std
mov
jle
pop
and
addr16
jle
lea
jge
push
in
fs
shl
ljmp
inc
jne
jecxz
inc
das
jecxz
push
pop
shrb
push
mov
test
and
jge
pop
fsubl
dec
loop
je
jg
add
out
xchg
add
loopne
dec
jge
xor
insb
xchg
mov
xchg
mov
inc
inc
mov
in
imul
jnp
js
out
inc
jb
fisubrs
lds
add
loopne
push
cwtl
out
outsb
xchg
fisubrl
iret
jecxz
pusha
xor
mov
data16
in
stos
jno
mov
test
mov
test
mov
in
out
or
push
lods
pop
mov
cld
test
add
add
add
add
popa
stos
jae
pop
movsb
insb
lods
inc
movsb
inc
popf
jno
push
fwait
jbe
pop
jp
or
iret
gs
jae
popa
mov
pusha
iret
gs
dec
push
mov
xor
iret
gs
jae
cmpb
sbb
add
inc
fldcw
xor
enter
mov
jg
add
sub
mov
and
mov
sub
xchg
popf
sbb
mov
and
sbb
jge
xor
scas
insl
cmp
ret
lock
add
or
je
push
lahf
xchg
sbb
add
lahf
xor
sahf
xor
or
jno
movsl
int3
dec
addr16
add
imul
jae
push
jno
xchg
int3
dec
addr16
cs
int3
xor
dec
mov
js
sub
sub
int3
or
jo
bound
int3
rorl
dec
sbb
inc
and
pop
cs
pop
dec
jge
cmp
dec
addr16
cmp
ja
add
sbb
jno
add
add
cmp
or
sbb
push
pop
add
ret
xlat
fbstp
mov
cmp
jo
gs
mov
flds
fldt
xchg
out
js
test
jl
aaa
cmpl
out
xor
insb
xor
jl
inc
in
je
icebp
push
arpl
jp
ja
jae
jg
jl
mov
insl
je
icebp
insl
popa
mov
pop
jb
lock
add
pop
imul
fbld
sbbl
jl
scas
lock
sbbl
aad
push
iret
mov
push
inc
stos
fsubrs
mov
iret
movsb
pop
push
cmp
or
iret
jmp
mov
push
into
or
inc
and
mov
fisttps
jmp
repz
or
iret
ljmp
add
add
add
add
frstor
sub
add
mov
pop
mov
dec
lods
pusha
movsb
cmp
js
scas
bound
es
cmp
insb
jg
test
pop
and
test
lods
and
test
stc
jg
test
ss
adc
ret
sbb
add
add
push
movsb
cld
push
mov
std
das
jecxz
cli
xor
loope
sbb
add
cmpsl
mov
lods
xor
lahf
lods
jecxz,pt
nop
jg
mov
jge
dec
mov
xor
test
xor
insl
sbb
or
lret
jg
jmp
int3
jg
jmp
int3
jg
jmp
add
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
int3
jg
jmp
idivb
add
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
or
jbe
or
data16
add
or
jbe
or
jbe
or
data16
add
neg
push
push
inc
add
xlat
idivl
incl
ret
add
lcall
leave
stos
idivb
inc
xor
mov
clc
inc
cld
push
sub
sar
imul
aas
xchg
xor
jmp
dec
push
mov
dec
int
jp
filds
xlat
clc
inc
loopne
cmp
mov
mov
push
in
inc
call
dec
xbegin
hlt
mov
clc
inc
call
add
pop
or
lock
inc
hlt
mov
mov
cld
or
iret
jg
jmp
notb
dec
mov
test
idivb
hlt
aam
adc
xchg
notb
push
jge
inc
xbegin
lods
int
or
xchg
lret
pop
call
dec
ret
incl
mov
inc
cmpsl
jns
or
idivl
in
push
push
loopne
add
or
or
lret
cmp
jmp
insl
int3
mov
int
fwait
mov
mov
int3
cli
hlt
filds
inc
test
test
push
in
sub
lods
hlt
mov
jle
add
push
add
lods
clc
js
or
iret
adc
dec
add
add
xchg
hlt
ja
jg
inc
mov
inc
cld
iret
jg
add
int
push
push
lock
add
hlt
inc
cld
inc
jnp
mov
aas
or
push
push
in
js
clc
ja
addb
pop
xor
fs
test
repnz
mov
int3
or
fbld
loope
dec
xor
add
inc
aaa
add
or
mov
int3
or
fisttps
xchg
ja
inc
mov
inc
iret
dec
int
fwait
mov
int3
xchg
mov
int3
mov
cmpl
fs
aas
or
mov
clc
inc
clc
notl
inc
clc
pop
cwtl
mov
push
clc
inc
cld
inc
xor
add
add
push
inc
dec
lock
inc
int
lcall
add
jg
jmp
cli
inc
cld
dec
rorb
xchg
mov
aas
adc
push
movl
or
adc
or
iret
lcall
stos
inc
int
fwait
mov
int3
xchg
mov
int3
mov
fistpll
add
jmp
add
iret
inc
int
fwait
mov
int3
xchg
mov
int3
mov
filds
xlat
add
jbe
mov
jg
mov
add
or
cwtl
adcb
inc
or
mov
jle
add
lcall
into
clc
ds
inc
dec
lock
jl
push
cmp
mov
mov
mov
add
ds
cli
ret
add
add
jb
inc
mov
in
pop
inc
dec
mov
adcl
inc
or
add
clc
push
clc
push
jl
add
nop
test
clc
push
or
mov
or
test
clc
inc
or
inc
or
and
int
jp
filds
xlat
testb
xor
mov
add
notb
push
cmp
mov
or
iret
idivb
lock
and
add
sti
hlt
add
jg
push
movl
mov
jg
test
jg
add
mov
js
push
ret
push
icebp
adc
push
cmp
mov
mov
adc
xlat
sbbb
mov
clc
or
add
aaa
sbb
xchg
stos
in
inc
dec
in
mov
testb
xor
mov
dec
loopne
xchg
cmpsl
or
iret
jg
inc
out
pushl
iret
sub
mov
mov
or
adc
test
pushl
inc
mov
orb
sub
mov
lods
test
mov
lock
dec
test
push
in
add
bound
addl
jnp
push
xor
push
push
inc
cmp
out
jmp
inc
or
rorb
sub
sbb
sar
inc
hlt
inc
xor
orl
cwtl
mov
clc
push
loopne
jno
inc
mul
pop
mov
filds
int
or
add
ret
inc
iret
clc
inc
clc
mull
inc
clc
pop
cwtl
xor
jo
mov
xlat
clc
inc
cld
push
xor
push
inc
dec
add
cmp
push
dec
dec
lock
inc
int
or
fbld
or
mov
dec
je
iret
clc
pop
add
inc
int
or
filds
addr16
or
std
insl
ret
add
inc
aas
cmp
popf
cmc
fnstsw
push
cmp
mov
cmp
mov
je
dec
cmpsl
cmc
push
clc
inc
dec
lock
push
shlb
and
add
jl
shlb
addr16
pop
sbb
inc
clc
inc
xor
mov
cmc
inc
adc
adc
into
jg
add
test
cmc
sbb
pop
gs
cld
add
cmpb
hlt
jnp
mov
mov
mov
int3
adc
int3
jp
filds
jg
add
pop
or
jo
or
mov
lock
cmp
push
cmc
ds
push
cmc
push
sbb
ds
or
mov
je
iret
cld
cs
ds
ret
add
add
jg
jmp
hlt
dec
aas
or
lcall
push
inc
mov
js
jg
ret
or
popf
xchg
xchg
lock
mov
or
jg
add
jg
mov
mov
push
mov
inc
je
iret
or
inc
aaa
inc
or
outsb
je
inc
iret
das
test
xor
popf
xchg
lahf
lock
dec
add
add
xor
mov
test
push
ja
in
mov
int
mov
mov
mov
adc
mov
addl
adc
mov
int3
jp
loopne
sti
imul
add
inc
or
aam
lcall
cmp
xor
add
scas
or
or
or
add
daa
je
inc
iret
or
cmp
inc
or
cmpsl
dec
cmc
call
inc
cld
push
sub
iret
jg
add
or
iret
sahf
push
lock
inc
call
inc
sti
das
test
xor
sarl
lock
leave
inc
and
add
stos
add
into
or
push
dec
in
or
mov
inc
in
add
addr16
je
or
call
pop
pop
test
or
push
dec
in
mov
pop
jg
fistps
negl
pop
test
lea
inc
ja
aas
or
inc
sbb
xor
mov
movsb
or
fldt
in
bound
test
add
sub
in
pop
or
popf
cmpsl
add
xor
sub
add
jg
cmp
ds
daa
or
decl
add
or
rolb
iret
jg
or
js
jg
incl
pop
dec
add
adc
push
sub
iret
jg
push
mov
test
or
pushf
push
lock
jae
inc
iret
test
push
sub
iret
jg
push
jnp
data16
cld
mov
dec
pop
sbb
add
orb
dec
or
push
inc
lock
movsl
jg
push
aas
loopne
js
jg
dec
sub
aas
fadds
mov
push
inc
loopne
dec
lock
inc
xor
push
jae,pn
inc
iret
das
in
jecxz
lock
test
pushl
add
push
test
pop
inc
fmul
std
stos
add
jg
inc
mov
aas
loopne
jne
js
add
andb
pop
inc
or
adc
dec
add
pop
call
out
or
push
xor
idiv
push
inc
or
inc
in
mov
jae
inc
iret
jle
sub
pop
js
jg
cmp
iret
adc
mov
sub
or
inc
lea
mov
call
dec
decl
iret
sub
lcall
daa
push
or
js
sbbb
lock
mov
mov
or
push
pop
push
loopne
jae
inc
iret
jle
sub
push
ljmp
out
or
addr16
call
or
je
js
jg
ret
or
inc
je
js
jg
inc
daa
das
inc
movsl
addl
aam
add
popf
hlt
clc
or
iret
jg
in
mov
mov
int3
jp
loopne
adc
int
mov
mov
push
add
test
inc
jnp
js
addb
and
push
pop
mov
mov
push
testl
js
sbbb
lock
mov
add
data16
js
jg
jp
test
jp
mov
cmp
leave
inc
pop
orb
rolb
jg
add
inc
clc
add
jg
xchg
fwait
or
iret
jg
inc
mov
or
iret
add
or
cmp
push
and
mov
pop
dec
add
cwtl
lock
adc
rclb
inc
iret
jg
add
movsb
add
add
add
add
add
push
je
iret
jle
add
cld
cs
ds
fiaddl
dec
add
jg
add
js
jg
jne
and
je
iret
fdivrl
js
jg
or
push
dec
in
loop
je
iret
add
call
mov
lcall
push
ds
pop
orl
or
push
subb
add
rolb
inc
iret
or
inc
iret
daa
insb
add
addb
sbb
xchg
mov
loop
js
xor
pop
sbb
sub
je
iret
loopne
js
jg
call
dec
mov
test
xor
aad
xchg
lock
lods
xor
inc
or
mov
loopne
js
jg
call
dec
mov
xchg
popl
cld
xchg
sub
jae
or
pop
or
fcompl
test
sti
mov
mov
xlat
loop
js
addb
std
loopne
js
orb
ret
pop
dec
add
inc
lock
ja
bnd
enter
clc
add
mov
push
xor
push
in
cmp
add
or
loopne
test
jg
dec
add
das
stos
xchg
mov
in
push
sub
orl
inc
clc
movsb
cmp
jae
or
xor
or
adcb
mov
int3
cmp
mov
or
clc
dec
mov
test
int3
sub
xor
fidivs
js
orb
cmp
pop
and
ds
mov
push
ret
mov
add
push
ret
mov
arpl
cmpsl
inc
divl
xchg
jle
js
dec
add
hlt
mov
dec
cmpsl
or
iret
jg
push
pop
imul
inc
iret
fisubs
js
jg
call
dec
mov
je
iret
cs
lds
xor
pop
je
iret
add
add
push
xor
push
orb
add
ficoms
js
addb
jb
lock
sub
xor
xor
ret
mov
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
