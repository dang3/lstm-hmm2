push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
push
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
push
push
call
movl
pop
ret
int3
push
mov
movl
pop
ret
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
mov
add
mov
mov
add
mov
add
mov
add
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
cmpl
jne
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
push
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
pusha
mov
movl
push
push
call
push
call
mov
lea
push
push
push
push
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
jne
xor
jmp
movl
movl
movl
movl
movl
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
mov
call
pop
call
pop
call
pop
call
pop
jmp
mov
pop
ret
int3
int3
int3
add
add
push
inc
add
je
sub
inc
adc
jae
add
outsb
popa
fs
jb
inc
add
add
outsb
popa
fs
jno
inc
loope
add
mulb
out
jne
aam
popa
outsb
inc
cmp
add
jp
gs
movsl
gs
imul
popa
je
cmp
add
jle
je
add
jae
imul
jns
cmp
add
jle
je
pop
fs
pop
dec
popa
outsb
push
insb
gs
cmp
add
xor
add
push
add
dec
add
add
inc
add
add
sbb
inc
add
add
mulb
jmp
arpl
arpl
lret
add
outsb
popa
fs
push
jns
add
arpl
pushf
insb
xor
dec
fs
insb
cmp
add
pushf
jno
arpl
insb
add
arpl
push
je
add
arpl
cs
add
pop
arpl
dec
ja
add
jb
sub
insb
inc
sbb
add
add
addr16
or
insb
inc
sbb
add
add
insl
insl
popa
jmp
out
inc
shrb
add
addr16
int3
pop
insb
push
lret
insb
je
fidivl
add
bound
js
insb
outsl
lcall
outsb
xchg
insb
xor
fs
insb
cmp
add
jle
je
mov
gs
dec
gs
jo
add
add
movsb
pop
nop
cmp
add
cmp
add
cmp
sti
add
das
add
cmp
add
cmp
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
addr16
cmp
sbb
jl
mov
push
sar
jbe
test
enter
enter
frstor
bound
insl
outsb
pop
movsl
dec
push
pop
les
pop
sti
or
cmp
jmp
mov
add
add
inc
dec
jmp
add
add
add
add
add
cs
dec
cmp
jmp
in
cmp
jmp
adc
add
add
call
add
cmp
jmp
add
add
add
add
jae
add
add
cmp
jmp
cmp
jmp
jmp
add
add
adc
add
jmp
cmp
add
cmp
add
cmp
add
imul
and
add
jmp
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
jmp
cmp
add
cmp
add
cmp
add
ljmp
add
cmp
add
cmp
add
adc
call
jmp
std
jmp
std
decl
push
js
std
lcall
add
loopne
add
shl
add
rolb
add
mov
std
call
add
pusha
jb,pt
popa
in
add
add
or
add
pusha
std
add
push
std
call
jmp
jmp
add
inc
outsb
pop
popa
je
add
add
add
and
add
adc
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
inc
cmp
je
add
stc
divl
jge
push
mov
ret
push
mov
out
jb
cmpsb
testl
ret
jne
mov
add
in
pop
call
dec
sub
add
lret
out
pushl
cmc
pop
je
mov
add
add
inc
mov
imul
outsb
inc
testl
ret
fldl
mov
xchg
jge
inc
jmp
idiv
cmp
jmp
add
add
xor
cmp
negl
insl
shl
or
push
and
ret
add
mov
ret
jmp
divb
xchg
add
add
mov
cmp
add
mov
mov
mov
clc
mov
push
divl
pop
insl
or
or
mov
out
notb
mov
mov
push
add
out
cld
push
dec
clc
lcall
mov
cmp
ret
push
ret
ret
mov
leave
stos
inc
add
mov
daa
adc
xor
idiv
cmp
divl
add
jmp
cmp
ret
mov
mov
lea
or
adc
jne
in
jne
xchg
push
or
push
je
mov
in
cmp
addr16
mov
imul
rorb
or
int
in
orl
push
sub
ret
aaa
jg
or
gs
xorl
rcrb
or
add
outsb
adc
in
or
pop
fnstcw
or
sbb
add
lea
or
cmp
jmp
jle
shl
rclb
jbe
cmp
cld
sub
mov
mov
ljmp
shl
add
xchg
lret
out
mov
addr16
push
add
cwtl
add
movb
push
xchg
add
out
andb
add
rcrb
inc
add
mov
add
adc
cmp
push
movsl
repz
pop
lcall
lock
pusha
mov
cmp
test
lock
push
sahf
add
daa
test
repnz
clc
pop
mov
in
repz
adc
push
or
cmp
rep
hlt
push
cmp
add
stos
cmp
jmp
add
pop
mov
test
mov
repz
xchg
movsb
hlt
repnz
leave
sub
cmp
fbld
pushf
sti
inc
cmp
pop
add
adc
js
call
add
fsubp
subl
push
sbb
cmp
decl
and
add
jmp
push
bnd
repnz
std
pop
or
call
push
repz
jmp
or
test
leave
sub
repnz
addr16
jp
clc
fwait
xor
repz
loop
incl
stos
enter
dec
mov
dec
add
sarl
adc
push
add
push
add
hlt
add
decl
cltd
mov
in
andl
lea
hlt
out
mov
add
mov
bswap
imul
rorb
add
je
adcl
in
push
add
movsl
cmc
out
pxor
mov
imul
xchg
add
add
ret
dec
mov
adc
cld
jmp
cmp
push
outsl
push
call
jle
inc
or
incl
je
loop
inc
mov
jns
lds
cmp
addl
jbe
jo
pushl
hlt
movsb
out
fneni(8087
and
jmp
mov
add
out
add
fcompl
dec
insb
out
fistl
in
xor
leave
sti
fiaddl
push
mov
test
aad
jl
cmp
or
inc
negl
sub
jns
or
add
out
stos
add
test
cmp
add
imul
pop
stos
add
dec
loopne
mov
cmp
bound
pop
cmp
pop
cmp
pop
cmp
jmp
in
ja
jmp
inc
test
jns
fcomps
out
out
es
icebp
add
add
jnp
sti
mov
fs
loope
roll
push
push
jns
out
mov
add
add
jl
jge
jno
out
cmp
out
call
subl
cmp
fdivr
xchg
cmp
mov
loope
push
mov
sar
pop
push
out
jmp
call
add
cmp
jne
add
std
outsb
daa
jnp
cmc
xchg
adc
pusha
add
fmull
out
jne
out
or
cld
fwait
ss
mov
sub
lods
into
call
test
adc
xchg
fnsave
add
jmp
push
mov
clc
fld
add
sub
insl
inc
or
fnsave
js
cld
jmp
push
mov
sub
mov
push
pushl
lret
mov
leave
ret
push
mov
adc
adc
fnsave
addr16
decl
leave
adc
add
loopne
jne
fdivl
add
mov
jmp
jg
adc
xlat
ja
mov
cmc
in
jne
out
jbe
sahf
insb
sti
out
fsubrp
incl
jno
cmp
add
jbe
popa
out
xlat
add
rolb
sub
in
jne
sahf
jbe
popa
dec
in
incl
rorl
sub
in
mov
hlt
in
jne
outsb
jbe
adc
std
incb
dec
jbe
adc
push
pop
rorl
js
out
sti
out
xor
ljmp
sti
addr16
add
inc
cmp
xchg
sti
cmp
in
mov
jmp
pop
cmpsb
in
pop
cmp
incl
in
je
xchg
xor
jmp
pop
jmp
hlt
jmp
test
dec
jo
in
add
lds
inc
fsub
in
inc
in
rolb
sub
inc
mov
jmp
sti
push
fnsave
push
in
hlt
out
jbe
fnclex
ljmp
dec
in
dec
jmp
inc
inc
mov
mov
add
hlt
movsb
fiadds
add
cmp
sbb
xchg
push
aam
cmp
jne
and
mulb
jne
shll
iret
add
jg
je
add
clc
cmp
add
cmp
add
jo
repz
cmp
fmuls
lcall
mov
sub
sti
xchg
or
cld
and
push
adc
leave
stos
push
jmp
out
les
inc
hlt
jmp
jns
push
dec
imul
add
push
mov
or
sahf
decl
clc
sbbl
insl
clc
add
rolb
nop
jmp
jne
mov
add
xchg
jmp
not
fldcw
hlt
incl
add
jmp
xlat
jne
js
sti
lcall
ljmp
add
dec
cld
jmp
xlat
inc
gs
add
and
mov
push
pushl
sar
cmp
subl
add
mov
pop
xchg
fadds
add
add
stc
push
push
sub
xor
add
lods
jl
mov
add
out
fisttpl
xlat
add
or
fcmovnu
or
call
sarb
xlat
cld
mov
inc
mov
clc
jmp
xlat
call
sarl
xlat
call
cli
cmpb
mov
mov
gs
jb
fcomi
int
add
call
fstpt
inc
xor
cmpsb
call
clc
insb
xchg
add
jp
out
push
outsb
movsl
xlat
sub
cmp
push
xor
cmp
sar
call
out
repz
add
add
cmp
jmp
add
ja
lcall
lock
and
adc
jmp
pusha
js
push
push
fldenv
xor
fists
loope
push
sub
repnz
cld
ss
sti
xlat
cs
in
lcall
out
xor
fdivr
jl
fnstsw
std
lahf
out
adc
xchg
insl
in
add
add
jmp
outsl
out
jmp
jmp
pop
mov
cld
lcall
rcl
subl
or
push
ror
es
add
add
push
repnz
add
ret
push
mov
mov
ljmp
and
add
and
stos
pop
add
add
push
leave
ret
push
mov
sti
mov
loope
repz
cmp
call
push
push
jmp
or
fldt
adc
nop
push
repz
dec
test
pop
leave
xchg
out
push
lret
movl
add
xlat
in
xor
jns
inc
push
cmp
add
cmp
jnp
xor
loop
bound
jle
js
sub
adc
cmp
sbb
ds
ds
dec
mov
sub
xchg
outsl
add
clc
mov
adc
fstps
leave
jg
outsb
aad
es
leave
jnp
add
mov
dec
push
push
sub
pop
ret
fidivrl
inc
popa
inc
add
ret
cmp
jl
jmp
ss
sub
je
out
jl
fisubrs
idiv
mov
ds
lods
out
or
jl
out
lods
jl
jno
adc
jle
lds
in
or
jns
in
dec
scas
jns
sub
xor
ds
loope
jns
loop
add
incb
adc
dec
lock
in
das
jb
and
jmp
fsubs
test
cmp
lcall
in
sub
jecxz
jge
pop
iret
jmp
fwait
jns
pop
fisubrl
push
arpl
call
cmp
mov
fnsave
jne
int
iret
jmp
mov
cmp
xchg
jne,pn
pop
fwait
jecxz
cltd
mov
jecxz
cmc
fwait
insl
clc
je
sar
ficomps
call
into
add
out
daa
ljmp
incl
or
fnsave
iret
inc
clc
incl
out
mov
fnsave
mov
fidivs
mov
ret
pop
sbb
jno
andl
mov
clc
movb
decl
std
je
or
add
nop
rorl
cmpl
add
nop
ljmp
cld
add
fnstsw
cld
push
cmp
outsb
add
adc
int3
lock
jle
add
jns
jno
hlt
mov
push
insb
inc
hlt
mov
loopne
sbb
cmp
or
test
test
fcoms
mov
roll
mov
fildl
aas
inc
std
cmp
push
outsb
mov
push
adc
adc
xor
pop
or
ljmp
std
xchg
cli
sub
mov
faddp
je
rclb
movb
loopne
jecxz
push
add
mov
test
xor
cmp
mov
pop
sub
imul
lods
adc
or
pop
xchg
loopne
inc
mov
lea
add
addl
add
loope
neg
push
loopne
hlt
inc
push
inc
fdivs
lds
add
in
imul
add
iret
add
sbb
stos
xchg
add
repnz
fiadds
pop
mov
test
jne
fisubrl
mov
or
lea
ret
xor
bnd
sbb
mov
and
jb
test
je
xor
lds
leave
stos
sub
push
bound
xor
in
inc
add
testl
push
or
aam
movl
out
or
push
int
jmp
ds
add
cli
xor
into
jbe
incl
or
aas
push
add
in
push
push
call
jmp
pop
leave
xchg
or
push
fucomi
push
xor
add
movb
sub
mov
pop
movl
mov
int3
add
mov
decl
add
add
enter
mov
pushl
adc
jmp
add
decl
iret
add
pop
cmp
call
sub
pop
leave
push
or
push
cmp
cmpl
push
xchg
adc
dec
cld
mov
call
idiv
in
push
jecxz
fdivl
xor
sub
sub
insb
les
scas
push
cld
add
cld
fdivr
cmpsl
inc
cld
cmp
add
sub
jb
mov
push
inc
or
push
nop
inc
add
add
mov
or
sbb
inc
cmp
call
xor
pop
add
inc
push
add
add
add
jb
popf
cmp
mov
popf
xor
xor
sub
xorb
cmp
jmp
in
sar
inc
add
add
jecxz
push
test
add
fadd
pop
shl
add
mov
sub
in
pop
leave
jmp
add
cmp
mov
shl
mov
cwtl
jmp
sarl
cmp
cmp
push
mov
out
call
xor
aaa
cwtl
add
cmp
leave
sub
add
xchg
add
adc
push
xchg
push
or
or
je
and
fdivr
pusha
clc
fistpl
bound
mov
push
add
loop
push
or
mov
call
ret
add
fmul
stos
cmp
push
jb
xor
sbb
test
data16
sarl
add
add
add
cmp
add
push
mov
or
lret
add
adc
loopne
insb
lret
nop
decl
push
insl
add
insl
add
ret
out
lret
pusha
decl
shl
mov
insl
add
insl
add
psubsb
decl
add
out
lret
xor
jmp
add
scas
mov
jmp
in
mov
call
xlat
add
ljmp
sub
test
mov
add
pop
out
ret
addl
dec
pop
mov
push
add
scas
xchg
jmp
aam
add
sahf
mov
cmpsb
sub
pop
andb
in
dec
out
jne
ljmp
push
sub
jmp
pop
sub
call
fld
add
sub
cmp
add
cmp
jl
sub
lods
xor
and
decl
mov
add
cmp
add
out
imul
cmpsb
jmp
orl
fnstcw
fnstenv
adc
push
inc
jno
add
or
or
add
shlb
add
cmp
fsubl
neg
ds
insl
cmp
insl
cmp
xchg
pop
jle
jmp
je
fnstenv
ss
call
hlt
cmp
jmp
add
adc
cmp
xlat
neg
add
cli
or
stos
mov
mov
loope
or
xor
mov
ljmp
mov
fcoms
daa
inc
jmp
outsb
fsubrs
cmp
adcb
aam
testb
gs
call
aam
add
cmp
call
fnstenv
shrl
xchg
push
fcoms
stc
sub
out
loopne
out
xlat
push
or
sti
incl
addr16
je
cmpl
out
cli
dec
push
push
cmp
call
rorb
call
jno
out
push
scas
call
pop
daa
jno
out
aaa
scas
push
cmp
jmp
hlt
scas
call
jmp
mov
push
js
enter
push
int
out
push
adc
mov
incl
clc
dec
hlt
call
ljmp
cmp
fdivp
jge
test
test
jmp
adc
push
cld
shr
leave
add
mov
incl
xor
mov
dec
out
scas
or
lea
mov
std
aad
xchg
sbb
add
fs
js
lock
int
call
add
mov
mov
mov
int
mov
out
mov
mov
int3
add
add
ret
stc
jno
and
xchg
aad
shlb
subl
jle
aad
jbe
shll
add
subl
pop
xor
mov
aad
push
lock
jle
pop
mov
in
inc
aad
call
jo
add
mov
in
aad
push
xchg
push
mov
outsb
mov
and
jmp
mov
cmp
test
in
add
or
jmp
in
pop
xchg
aam
push
push
in
xchg
inc
out
jle
xor
mov
or
push
add
pushl
mov
xor
pop
cmp
jne
mov
stos
sub
cmp
mov
int
clc
jmp
out
add
aad
in
test
cmpl
push
repz
mov
call
add
cmp
mov
daa
inc
add
mov
mov
cmp
cmp
push
les
add
add
push
mov
or
add
cld
je
mov
scas
lcall
clc
pop
cltd
mov
cmp
jmp
push
mov
js
idiv
call
jne
movl
pop
arpl
mov
sbb
das
cmp
call
jmp
pushl
mov
push
incl
push
loopne
and
ret
lea
call
jge
push
xchg
mov
cmp
jmp
add
xor
add
cmp
mov
cmp
xchg
cmp
jle
mov
jmp
cld
ret
add
mov
shl
sbb
icebp
push
or
jae
incl
fcomi
add
jmp
mov
push
cld
push
pusha
or
cmp
out
dec
out
xlat
inc
shlb
pop
pop
daa
sub
scas
cmpsl
add
add
xchg
pop
addr16
sub
call
dec
inc
push
aas
jmp
loopne
sub
sbbl
outsb
xor
jmp
jge
jo
push
add
shll
rcrl
and
add
jnp
add
add
mov
add
cld
ljmp
xor
cmpb
bound
or
cmp
add
jmp
sub
pop
pop
sbb
stc
mov
xchg
add
xchg
add
cmp
inc
imul
leave
sub
add
fisubrs
push
mov
cmp
call
in
ljmp
adc
dec
or
add
jmp
inc
or
push
sti
jg
jbe
je
imul
sar
leave
jne
push
ret
pop
push
and
ret
push
push
leave
clc
jmp
push
xor
xor
nop
add
cmp
nop
sub
nop
xchg
ret
push
lock
dec
push
nop
andl
jl
cmp
jecxz
inc
cmp
push
jl
and
nop
jg
out
inc
nop
mov
push
jl
movsb
cmp
add
rol
loope
sarl
push
mov
mov
nop
mov
je
add
cmp
push
dec
push
pop
or
bound
leave
jmp
xor
adc
iret
lcall
sub
shll
jae
sbb
lds
pop
faddl
add
jae
jle
mov
mov
push
in
sub
addb
pop
dec
pusha
cwtl
add
insb
outsb
sbb
cmp
cmp
cli
mov
into
or
sbb
pop
cmp
xchg
sti
outsl
push
add
add
sarb
je
popa
fisubrs
mov
jmp
shrl
into
xor
add
add
fcoms
ret
test
cmp
faddl
cmp
jmp
add
pop
jmp
int
xor
jle
shll
add
xor
mov
push
in
pop
mov
test
mov
cmp
sahf
int
cltd
jb
imulb
jl
jne
dec
fsubs
insb
int
out
push
or
incb
je
call
pusha
mov
pop
add
pop
add
pop
add
add
test
cmc
int3
call
pop
jg
inc
xor
cmc
push
or
add
call
bound
stos
ret
jmp
ror
mov
cld
int3
call
les
jmp
test
call
add
rcrb
int
push
sbb
inc
mov
or
jmp
pop
sub
mov
test
pusha
add
sub
test
pop
mov
add
add
test
ret
adc
or
cmovl
add
add
seta
add
dec
inc
cld
xor
test
mov
incl
dec
std
dec
mov
rol
shrb
inc
add
cmp
xor
mov
mov
dec
xchg
sar
xchg
ds
incb
js
xchg
and
jmp
repnz
add
cld
xor
fucomip
lret
sbb
push
dec
call
mov
int3
cmpl
hlt
mov
mov
js
xchg
push
hlt
and
movb
into
ret
je
or
jne
addb
addl
lret
push
sti
call
lret
add
cmpsb
lret
xchg
sbb
xchg
jbe
cmpb
xor
xor
add
inc
call
or
push
hlt
sub
inc
imul
push
std
pop
fistpll
adcl
inc
xor
cmp
push
test
add
and
inc
leave
leave
dec
and
sbb
cli
outsb
dec
ror
xor
add
jle
dec
add
scas
jns
jmp
fnstsw
mov
cltd
sub
inc
jmp
ljmp
test
add
or
iret
sti
lcall
mov
movsl
movsb
xchg
add
cmp
icebp
or
jne
fdivr
hlt
lcall
inc
jmp
add
jne
insb
add
push
inc
push
cs
jecxz
inc
jmp
stc
inc
in
cmp
add
or
dec
inc
in
arpl
add
pusha
add
add
lods
add
nop
cld
imul
and
cld
jne
mov
add
and
add
inc
hlt
add
jne
movsl
lcall
stos
test
or
mov
push
cs
lods
mov
call
push
divl
or
popf
roll
sbb
ret
push
mov
jge
cmp
push
pop
adc
add
repnz
add
cmp
incl
add
les
add
jns
adc
xchg
xor
lock
sti
mov
fcoms
fstps
jbe
push
jecxz
jne
addl
cmp
insb
sarl
cli
mov
and
call
ret
xchg
nop
roll
jnp
mov
call
inc
or
pusha
addl
fnstcw
hlt
call
stos
ret
fstpt
jns
fdivs
mov
mov
ret
or
dec
imul
lret
jmp
add
add
shlb
std
cmp
lods
pop
jle
in
shlb
cmpsl
mov
cs
dec
jl
push
dec
icebp
js
iret
cltd
fldt
jmp
add
add
dec
rorl
xorl
add
dec
xor
jge
jno
adc
les
jb
clc
mov
sarl
mov
lock
out
add
sub
stc
or
in
push
jle
fadds
xchg
jle
ret
mov
and
and
dec
leave
lea
stos
jo
add
jnp
adc
cmpb
jb
stc
sbb
add
mov
test
in
add
flds
xor
pop
sti
xor
dec
test
jg
jnp
jecxz
adc
mov
mov
xor
dec
push
pop
sub
rol
ret
iret
mov
lock
and
lock
lea
adc
add
rol
mov
mov
lea
add
add
rclb
sub
xor
and
xor
dec
test
sub
imul
add
stos
xorl
cmp
mov
pop
out
dec
mov
jmp
sar
push
shlb
lahf
idiv
mov
push
add
int
roll
mov
xlat
adc
sbb
push
cmp
stc
add
out
dec
aas
xchg
test
notl
adc
dec
xor
or
jp
mov
xor
cwtl
pop
lret
std
cmp
sarb
shlb
iret
idiv
pushl
ds
push
xor
jmp
mov
mov
in
mov
pop
xchg
add
movb
mov
push
xchg
out
push
nop
nop
add
lret
cmp
mov
or
dec
inc
lcall
mov
inc
testb
pop
adc
es
jmp
js
jmp
mov
mov
mov
add
loop
sub
fdivs
or
stc
fs
pop
stc
or
shl
mov
and
push
sub
push
sar
or
ljmp
mov
mov
xor
jp
add
mov
xor
leave
xor
fs
xor
lods
out
sbb
shrb
std
fsubs
or
stc
insb
mov
in
lcall
add
ret
cmp
mull
dec
int3
cli
lea
add
mov
mov
xor
lea
sti
dec
or
mov
cli
xor
jno
pop
push
jmp
and
xchg
call
xor
addl
add
into
enter
sti
ret
lret
mull
stc
lret
cli
lea
fsub
mull
push
lods
mov
cmp
mov
add
jns
dec
sbb
jecxz
cli
push
jecxz
push
xchg
pushf
and
les
sbb
loopne
mov
lea
add
push
mov
or
pop
or
leave
stos
rorl
mov
enter
lahf
out
sarb
lret
repz
sti
in
add
pop
and
sub
cmp
bound
mov
jle
add
add
les
repz
lea
ror
mov
cmp
sti
or
shll
mov
and
out
aaa
and
sar
repz
nop
lods
push
stc
jg
jge
pop
adc
stos
push
cmp
bound
and
pop
fwait
add
push
daa
ret
xor
repnz
xacquire
mov
or
cmp
mov
xor
outsb
add
jne
adc
add
clc
je
fstps
add
xor
xlat
mov
or
pop
lock
fldl2e
je
shrb
icebp
clc
ficoml
xchg
fisttpl
sti
or
cltd
sarb
jne
mov
dec
adc
orb
stc
or
sub
rol
add
mov
pushl
or
jae
lea
add
shll
ret
pop
jnp
lcall
mov
or
mov
lea
add
ret
adc
mov
xor
lea
jecxz
cmp
mov
jl
aas
mov
or
mov
cld
sbb
mov
movsb
rol
add
stos
fidivrl
dec
inc
or
dec
inc
mov
test
add
jp
mov
clc
inc
cli
mov
adc
insl
stos
mov
movsl
ret
cmpsb
sarl
push
psubd
mov
cmpsl
dec
sub
push
mov
divl
pusha
idiv
lods
cmp
addl
ret
sub
fdivrl
push
psubq
mov
sub
inc
pop
shrl
cmp
inc
testl
mov
in
jnp
ljmp
out
adc
inc
out
add
cmp
dec
push
shrl
cmp
cmpsb
mov
push
pop
shl
adc
adc
dec
cmp
cli
adc
fsubrl
out
mov
mov
mov
inc
sub
test
mov
cmpsl
mov
jno
mov
jge
cmc
icebp
and
call
je
or
push
incl
mov
xor
rorl
ljmp
leave
push
xchg
mov
or
add
lea
shrl
std
pop
adc
icebp
cmp
add
cmp
dec
loope
push
or
jbe
lea
jge
mov
lods
mov
pop
inc
add
in
cmp
test
movl
mov
mov
fistpll
add
fucom
movb
sub
out
dec
mov
std
std
fsubr
fwait
movl
pop
mov
out
loope
ret
jmp
lret
clc
pop
add
jo
inc
mov
dec
call
sbbl
call
xchg
loop
inc
inc
mov
add
pop
cli
pop
add
sbb
adc
cmp
roll
and
into
test
xor
push
inc
cmp
mov
cmp
mov
sbbb
inc
js
sub
add
cmp
aad
pop
fxch
inc
jae
js
mov
adc
and
js
mov
mov
sub
test
pop
leave
lcall
adc
sub
add
dec
sub
mov
or
cmp
mov
andl
clc
lcall
sub
pop
xor
sub
and
incl
xchg
mov
pop
pop
push
xor
cmp
andl
push
mov
enter
add
inc
jmp
lea
add
add
ja
inc
cmp
fnop
mov
in
rcrl
insb
push
inc
add
jmp
lea
inc
test
add
stos
in
mov
data16
adc
or
decl
jmp
cmc
sbb
sbb
cld
inc
imul
inc
xor
mov
jb
xchg
scas
ror
mov
push
adc
mov
gs
add
cmp
jne
mov
clc
jo
mov
cmpsl
daa
mov
enter
cmp
inc
add
imul
xchg
xchg
xor
mov
adc
inc
add
adc
fldcw
mov
popl
mov
shll
mov
xchg
shll
fadds
loope
iret
mov
sbb
push
cld
push
inc
cld
inc
ret
and
pop
mov
gs
pusha
add
push
int
sbb
push
cld
fcomip
testl
and
ret
add
lret
cmp
out
imul
je
lock
xchg
outsl
aad
dec
lret
pop
test
das
ss
add
fs
sarl
fdivr
stos
roll
inc
pop
pop
inc
cmp
add
dec
iret
push
inc
cmp
ds
cmp
inc
jno
outsl
fsubl
leave
jp
mov
push
xchg
or
enter
mov
push
or
nop
jp
cmp
mov
push
mov
sub
test
js
mov
mov
or
add
add
lds
repz
sbb
add
add
cmpsl
or
flds
mov
outsb
mov
mov
jb
sub
sub
add
aaa
xor
movsb
call
push
sub
xor
adc
push
add
cmp
test
mov
ss
lods
cs
add
mov
cmp
jg
inc
or
or
jmp
ja
ret
dec
mov
and
add
jmp
jl
add
add
jmp
xor
mov
icebp
mov
mov
xlat
es
add
adc
jne
xlat
add
jmp
test
ret
dec
mov
jmp
incl
lods
mov
test
decl
clc
daa
jo
add
inc
test
outsb
call
call
outsl
pushl
addb
dec
js
jmp
cld
mov
add
add
push
and
add
pushl
mov
jne
lods
mov
add
std
push
mov
jp
cld
mov
fisubrl
jo
or
xor
jmp
mov
je
adc
lods
mov
jg
outsl
decl
cmp
add
pop
sbb
inc
es
mov
xor
push
mov
pop
jge
sub
movsl
je
ret
mov
add
cmp
incl
mov
or
adc
incl
mov
je
xor
jo
adc
adc
in
mov
sbb
int3
dec
incl
fwait
sbb
mov
jns
sub
repnz
call
ret
jne
add
pop
mov
add
cmp
push
adc
inc
fstps
add
test
scas
imul
test
cmp
inc
shl
jbe
adc
mov
inc
add
jge
add
scas
cmpsb
push
xor
xor
std
punpckhdq
dec
add
add
lcall
jp
mov
jp
andl
cmp
cmp
sbb
scas
es
pop
add
jmp
add
adc
push
xchg
ss
adc
fists
scas
mov
cld
or
cmpb
xor
add
ljmp
mov
mov
sbb
ficoms
lods
lea
dec
call
fiaddl
add
into
scas
jne
mov
data16
test
out
mov
add
cmp
fildl
lcall
add
add
jbe
mov
pusha
add
jne
mov
pop
pop
test
aam
pushl
mov
push
and
adc
or
and
pushl
pop
jne
fists
and
add
dec
inc
add
and
add
push
fcmovnb
je
dec
pop
push
add
push
sub
add
mov
add
in
add
sub
movb
push
push
cmp
mov
cmp
lds
pushf
dec
pop
loope
filds
fidivs
cld
push
out
add
push
mov
mov
pmulhw
outsb
pop
js
rclb
add
xchg
icebp
iret
pop
xchg
adc
cmp
lods
add
insl
lods
mov
roll
jp
rcrb
call
pop
inc
cmp
dec
ljmp
fwait
and
adc
add
inc
clc
cmp
jmp
stos
jbe
pop
lods
in
inc
movsb
lods
inc
lods
in
push
xchg
ss
mov
jmp
and
sub
es
mov
push
push
add
dec
mov
push
ret
ja
stos
pop
mov
dec
icebp
stos
insb
lods
sarl
into
jg
dec
and
ret
rorb
jmp
sbbb
add
add
fwait
and
add
cmp
mov
jmp
call
cmp
ret
popa
stos
jmp
xor
add
clc
scas
cmp
lcall
xor
jbe
pushf
lea
add
icebp
mov
idivl
mov
mov
inc
mov
inc
add
pop
jns
push
cmpsb
or
cmp
andb
adcl
test
test
inc
dec
roll
add
add
add
rep
pop
inc
sarb
decb
mov
decl
inc
lock
decl
or
lcall
std
decl
pusha
flds
jne
lea
lea
jne
or
sub
add
jne
mov
mov
loopne
add
test
inc
test
push
xchg
fsincos
call
cmp
out
mov
ds
mov
xchg
push
decl
test
rorl
jbe
std
mov
data16
jmp
mov
jne
dec
out
cld
dec
bnd
inc
je
call
ss
outsl
call
es
addr16
push
xor
call
pushl
push
idiv
lea
xchg
xor
jl
xor
pop
add
cmp
add
cmp
cmp
inc
cwtl
add
popf
cld
adc
add
cmp
push
outsl
test
dec
data16
cmp
jnp
call
mov
dec
call
das
or
push
in
jbe
movsb
mov
add
cmpsl
jl
push
xchg
cmp
cmp
bound
mov
jmp
add
add
fwait
mov
mov
test
cmp
mov
add
push
aad
pushl
arpl
jmp
add
pop
lods
mov
call
out
cmp
dec
sub
lods
mov
call
inc
cmpsl
pushl
push
xchg
cmp
add
add
xchg
and
or
dec
incb
in
movsb
add
cmp
call
xchg
sub
add
jmp
inc
les
test
rolb
add
fsubs
adc
add
sahf
jmp
gs
int3
add
add
out
mov
xchg
jb
inc
sub
add
inc
hlt
ljmp
les
add
mov
add
ret
xchg
fcom
add
add
mov
add
incl
pop
jne
mov
pop
jne
add
mov
add
xchg
add
insb
inc
cmc
pop
sbb
into
in
ret
call
xor
add
xchg
mov
cmp
mov
cmp
movsl
jne
cs
mov
adc
jne
push
repz
add
das
adc
idiv
les
pushf
inc
inc
out
movsb
or
add
dec
xor
or
mov
lea
jl
push
jmp
or
push
cmpsb
js
push
and
call
idiv
pop
movsb
out
pop
push
movsb
cmp
loope
popf
movsb
movb
movsb
sub
xchg
mov
movsb
sahf
js
dec
ss
ret
mov
mov
ss
dec
add
cmp
in
add
jmp
repz
sub
fwait
mov
cmp
movsb
lods
movsb
adc
add
clc
out
lock
movsb
adc
adc
cs
cwtl
ljmp
mov
scas
jmp
xchg
dec
fcom
lcall
jmp
icebp
xor
mov
jne
cmp
mov
add
cmp
leave
stos
add
in
push
clc
push
cmp
fnstcw
sub
outsb
push
or
faddl
fiaddl
mov
jne
fwait
sub
je,pt
adc
add
push
clc
lcall
sub
push
inc
adc
xchg
inc
cwtl
scas
add
decl
push
add
ret
push
mov
jns
lock
or
daa
pop
incl
dec
cmp
add
pop
jne
js
loop
xlat
icebp
mov
lock
pop
jne
mov
icebp
mov
cld
nop
decb
add
jne
pop
jne
or
mov
adc
pop
cld
decl
push
dec
jmp
lea
in
out
xor
cmp
incl
push
add
insb
cs
xor
mov
loop
lcall
cmp
decl
pop
fstpt
aam
je
xor
sub
stos
adc
or
sbbb
add
xchg
adc
mov
jne
sub
or
mov
lock
jecxz
dec
mov
fisttpll
lret
ret
mov
dec
push
enter
mov
stos
mov
push
mov
xchg
clc
call
or
stos
or
sub
xchg
mov
lret
mov
sbb
mov
dec
adc
pushf
mov
hlt
test
cmp
cmp
add
nop
movsb
mov
mov
adc
pop
jle
push
addr16
mov
push
mov
cmp
rdmsr
shlb
dec
add
add
dec
or
dec
rcrl
jno
fsts
push
mov
inc
add
inc
or
push
xchg
lahf
jmp
pop
dec
scas
sub
call
sti
sahf
pushl
add
lahf
lea
lcall
mov
incl
mov
mov
out
cli
add
cmp
call
lock
call
xor
inc
sub
push
imul
pop
jmp
lea
jno
sub
ljmp
jge
add
and
add
add
add
add
testl
fcmovnb
jne
push
jge
or
sbb
fildll
push
jge
or
mov
ljmp
jge
lea
nop
push
push
test
out
sar
jne
jge
adc
testl
call
dec
inc
fildl
stos
pusha
lods
push
mov
and
cmp
add
pop
adc
cmp
stos
inc
xlat
cmpsl
add
stc
adc
addr16
inc
add
adc
call
fidivs
mov
call
imul
ud0
xor
and
pushf
push
inc
jb
jmp
xor
or
stos
push
mov
popf
ljmp
xor
movsb
jmp
jmp
push
mov
add
insb
xchg
dec
popf
dec
popf
mov
ds
jo
add
push
icebp
popf
cs
adc
inc
popf
push
sub
push
xor
mov
add
pop
sub
adc
pushf
insb
or
fucomp
pushf
out
lret
call
push
inc
test
mov
dec
inc
push
sub
rcll
scas
adc
pushf
sub
cmp
xchg
pushf
xchg
stos
add
rcr
in
lea
lock
hlt
sub
inc
or
mov
daa
hlt
aam
popf
jne
adc
mov
test
ss
pushl
adc
jne
loop
decl
movsl
leave
ret
xor
lock
or
add
adc
and
test
jg
sub
subl
lock
push
pop
add
add
add
cmp
adc
dec
mov
repz
inc
inc
mov
cmp
pop
jecxz
mov
mov
stos
dec
lock
jb
mov
add
jne
xchg
incl
jge
call
mov
xlat
pop
pop
sbb
or
sbb
jb
push
paddsb
adc
cltd
stos
decl
mov
mov
das
inc
mov
add
xor
das
mov
sub
call
outsb
add
sahf
ret
je
push
fwait
cld
cmp
call
jmp
inc
add
jg
add
cmpsl
cmp
loopne
mov
jbe
ds
cli
pop
mov
mov
call
movlps
cmpsl
add
xlat
enter
add
add
cmpsl
add
cli
adc
cli
jg
add
stc
cmpsl
add
stc
movsb
add
stc
jmp
add
in
mov
xchg
xor
add
add
call
add
jecxz
add
fucomip
add
or
cmp
cld
ret
jmp
lret
movsb
xchg
cmp
jmp
xor
adc
mov
stc
adc
shlb
cmp
decb
in
fmul
pop
aas
jmp
les
test
xchg
das
inc
out
jmp
cwtl
or
add
adc
stc
stos
jmp
inc
or
aaa
das
lcall
xor
or
mov
lods
das
setg
xchg
push
fsubrp
inc
stc
cltd
inc
dec
inc
inc
push
mov
enter
pop
mov
inc
nop
push
fs
test
shrl
jmp
das
test
popa
imul
inc
jne
sub
cwtl
cltd
xchg
inc
ds
ret
push
sub
les
incl
imul
mov
aad
outsl
mov
in
add
pushl
imul
out
outsb
push
in
out
lret
out
or
aad
jg
add
and
call
dec
test
enter
mov
jmp
cmpl
jne
mov
or
add
xlat
add
popa
je
add
add
cmp
js
cmp
xchg
decl
dec
adc
xchg
or
pop
push
repz
or
stos
test
test
decl
push
adc
push
add
add
test
xor
xchg
rclb
xchg
call
rolb
cmp
add
xor
xchg
jne
out
and
out
xchg
sub
cmp
xchg
call
add
sub
jmp
add
out
add
xor
dec
or
or
stos
pusha
lods
scas
xchg
mov
xor
pushf
mov
xchg
xorl
mov
jle
data16
out
jmp
xchg
sarb
inc
xchg
push
in
dec
xchg
cmp
sub
ds
es
mov
xchg
push
xchg
in
xchg
les
push
xchg
push
xchg
pushf
or
push
cmp
out
xchg
call
add
das
or
dec
mov
fisubrs
movsb
xchg
dec
inc
or
mov
xchg
call
sub
inc
xor
dec
shll
lods
xchg
incl
int
pop
xchg
xchg
call
ret
popa
mov
loop
ljmp
jecxz
push
movsl
cmpb
repnz
sbb
in
lods
test
push
cmp
or
ss
lea
decl
add
xchg
rolb
mov
jp
xor
outsl
call
stos
cmpsl
add
cmc
and
out
jne
ja
shll
pushl
outsl
jne
js
sar
out
pop
leave
loop
add
pusha
add
adc
stc
or
lods
into
sub
ja
test
decl
rolb
add
movb
jmp
movb
ja
add
or
imul
outsl
push
push
addb
jg
hlt
cmp
xchg
decl
adc
add
jmp
add
cmp
push
in
into
mov
add
xchg
ss
cld
rcrb
cmp
hlt
xchg
push
xchg
and
add
sahf
ret
je
xor
push
add
xor
int3
mov
xor
push
xor
je
and
push
push
push
sti
out
cmc
xchg
mov
xchg
push
add
add
add
or
fwait
push
scas
push
xchg
rolb
xchg
add
or
fwait
sbb
rcrl
leave
mov
xchg
mov
loope
hlt
lods
xchg
cmpsb
dec
mov
rorl
xchg
nop
faddl
xchg
add
jnp
jmp
enter
xchg
les
insl
xor
or
nop
or
adc
test
imul
jnp
add
add
inc
and
add
cmp
movsb
cmpsb
nop
pop
jmp
cmp
add
and
nop
lcall
add
xchg
call
repnz
or
call
xor
pop
fdivrs
pop
jnp
mov
nop
push
cmp
xchg
andl
aas
add
imull
nop
xor
push
xchg
test
push
mov
in
leave
bextr
pushl
add
pop
sub
add
leave
inc
jo
mov
idiv
aas
in
jmp
mov
add
xor
pushl
call
or
incl
jg
je
adc
in
test
cmpl
and
add
mov
out
sarb
and
jle
or
fistpll
call
cmp
jmp
or
negl
into
mov
inc
out
push
fimuls
call
test
pop
in
out
mov
sbb
mov
fwait
not
xchg
fwait
sbb
popf
mov
mov
sbb
mov
mov
mov
cmp
call
pop
mov
xchg
inc
add
sbbb
add
test
add
xchg
mov
xor
inc
inc
call
adc
inc
jmp
daa
das
mov
add
adc
fwait
outsb
mov
mov
lea
negb
or
sbb
cwtl
nop
fimuls
jl
cmc
pop
mov
mov
or
xor
add
add
pushf
out
lea
adc
fwait
or
ret
in
mov
cld
mov
lea
popa
sub
pop
dec
sbb
jne
cld
out
mov
imul
cmp
push
sbb
cld
dec
xlat
inc
jmp
mov
cmp
out
scas
mov
mov
loope
outsb
incl
lods
xchg
and
les
cmpl
dec
sbb
push
inc
cmp
add
in
aad
lods
clc
mov
mov
cld
out
int3
mov
cmp
jne
shlb
call
mov
call
ljmp
add
dec
nop
inc
add
mov
add
mov
sub
jmp
in
jl
or
push
repz
or
fst
incl
dec
dec
xchg
and
call
cmp
sar
aaa
jmp
inc
add
out
add
jg
lods
jge
decl
loopne
sbb
or
sahf
aad
ja
dec
decl
out
ja
call
test
sar
xlat
in
sub
cmp
add
in
lods
fwait
add
push
jmp
pop
mov
inc
xorl
jne
xor
shrb
xor
mov
cltd
sbb
out
ljmp
cmp
add
loope
mov
out
inc
clc
push
popf
add
cmp
data16
sahf
ret
je
in
add
cltd
adc
sub
fwait
mov
inc
dec
adc
mov
ds
cmc
mov
adc
pop
mov
add
push
rcrl
sbb
jo
data16
cmp
es
or
shlb
cmp
inc
pop
in
es
adc
fwait
sub
add
xchg
adc
sbb
add
cmpsl
add
bound
sub
shl
lods
mov
push
cmp
paddq
call
dec
aas
jmp
add
jmp
pop
leave
mov
cmp
adc
xchg
lret
xchg
inc
add
test
adc
rolb
rcl
sar
out
mov
push
jo
xchg
fdivl
dec
std
inc
rorb
add
fadds
push
adc
test
mov
add
lods
incl
or
pop
std
divb
rolb
push
adc
sub
aas
add
xchg
lods
incl
jg
mov
hlt
iret
stc
repz
out
popf
ja
incl
call
push
in
xor
add
push
nop
cmp
jg
mov
sar
jne
insb
push
std
js
add
lret
and
push
xor
add
adc
call
jmp
je
imul
pushl
imul
aas
js
jne
push
ror
jg
add
jmp
xor
add
cltd
add
xchg
jmp
add
add
loopne
inc
add
icebp
push
xor
cwtl
sbb
cmp
xchg
inc
pop
adc
rcr
dec
add
jne
add
jne
xor
shlb
xchg
adc
and
mov
add
fs
xchg
cltd
add
mov
adc
imul
dec
jmp
push
ljmp
cwtl
xor
aad
mov
cmp
jmp
in
cli
out
in
andl
add
xchg
sahf
xchg
xchg
xchg
test
inc
sbb
adc
xchg
inc
cmp
lcall
xchg
outsl
call
test
xchg
xchg
cltd
xchg
dec
das
xchg
cwtl
fldenv
jo
add
cmc
mov
add
js
ret
lea
jmp
test
jmp
xchg
xor
add
cmpsb
pusha
add
xchg
inc
jne
mov
add
cmp
stos
mov
lcall
dec
adc
roll
ret
jmp
push
cwtl
xchg
jmp
gs
add
hlt
out
jmp
pushl
pop
mov
imul
adc
test
cltd
mov
adc
or
into
es
arpl
mov
decl
xor
add
mov
jle
cmp
mov
je
in
sub
jne
push
pushl
and
jnp
push
jecxz
str
mov
mov
pusha
addr16
add
xchg
jne
push
call
lea
iret
mov
jge
ljmp
lahf
add
add
minps
mov
inc
jl
call
cmp
dec
mov
cwtl
roll
decl
popf
dec
inc
movsl
cltd
add
cmp
push
incl
mov
leave
sti
jle
adc
in
push
insb
adc
data16
jg
int3
pop
cmp
fdivrl
cmp
sti
inc
mov
call
mov
test
cmp
sldt
cmp
scas
add
ret
adc
push
pop
leave
sti
popa
add
add
add
adcl
mov
add
jl
add
add
mov
jmp
xor
jmp
mov
mov
jo
mov
mov
or
add
nop
mov
xchg
adcb
push
and
jmp
iret
daa
add
mov
les
lcall
lods
out
rolb
lods
jnp
adcl
clc
push
popf
add
addb
nop
add
mov
add
je
mov
push
mov
aas
add
sarb
dec
push
cmp
or
cmpsb
lock
mov
stc
out
push
cmp
mov
mov
mov
mov
fnstcw
dec
subl
add
mov
outsl
cmp
popf
sub
mov
sbb
subb
or
inc
filds
xchg
xor
cld
imul
mov
dec
xor
xchg
sbb
mov
out
jg,pt
incl
pushl
adc
lret
leave
ret
push
mov
pushl
jg
or
out
jg
ret
test
clc
movl
push
cld
mov
lods
loopw
mov
xor
test
iret
ljmp
mov
or
add
mov
cmc
testl
xlat
jg
mov
call
add
add
cmp
xchg
cmp
mov
shrb
add
add
sahf
aam
decl
jg
jmp
jle
jbe
sti
lret
outsb
scas
in
rclb
imul
sarl
inc
adc
add
imul
int3
add
mov
pop
jg
rclb
sarl
jg
inc
fs
mov
jle
les
test
cltd
add
jge
jg
add
add
add
jle
jle
ret
cmpb
pushf
jmp
add
jge
jle
rcll
mov
aaa
mov
in
add
jge
jle
shll
fs
jle
jmp
daa
sub
hlt
jmp
mov
jge
popf
pushf
jge
mov
push
jge
stc
ljmp
cltd
ja
pop
inc
xchg
jle
cs
mov
es
mov
mov
inc
jge
aad
add
fs
or
lea
jge
out
out
mov
pop
jl
add
pushf
int
dec
adc
inc
ret
rorl
scas
outsb
or
stos
in
jl
jo
jns
test
jmp
pop
das
inc
add
into
incl
push
in
or
xchg
data16
call
call
sti
je
js
int
pop
push
imul
jne
call
cmp
lret
pushl
insb
inc
xor
add
jne
call
dec
push
push
sti
je
js
std
incl
ja
add
pusha
jb
sub
sti
push
dec
imul
jne
pop
imul
lea
mov
pushl
jne
call
lock
or
test
outsb
cmp
shrl
aas
pop
decl
jnp
jl
mov
pushw
je
xchg
pop
xor
aam
xor
add
sub
sbb
shll
pop
shll
mov
out
popa
icebp
pop
mov
inc
js
jns
jnp
jbe
jbe
xor
rorl
jne
add
out
sbb
or
arpl
jp
or
out
pop
jnp
or
dec
addr16
call
push
icebp
ds
rcrl
jp
or
in
cs
outsb
xor
imul
push
jnp
cli
xlat
les
sbb
jp
out
xor
ss
push
dec
shr
or
sar
jp
jp
jnp
lock
decl
in
cmp
in
push
push
add
ret
hlt
or
add
push
call
xor
mov
insb
subl
push
mov
bound
arpl
inc
and
cmp
adc
inc
call
push
sahf
add
dec
and
sbbl
repz
shll
call
xchg
add
mov
xor
idiv
push
add
ret
sub
add
out
push
jne
in
mov
in
pop
leave
scas
test
mov
xor
cld
jne
in
int3
outsl
idiv
jne
dec
out
sbb
or
movsl
add
ds
idiv
push
das
imul
aas
imul
ljmp
shl
or
ljmp
rcll
addr16
mov
cmp
call
xor
js
cmp
mov
cmp
or
ret
jmp
add
js
js
adc
push
js
push
inc
add
out
sub
js
xor
loope
fisubs
js
add
adc
xor
mov
ljmp
scas
in
or
mov
pushl
add
lds
call
xor
sub
add
in
lock
sti
les
arpl
clc
jmp
add
in
loopne
cmpsl
jbe
ja
inc
mov
xor
jbe
jle
sub
in
lock
jbe
ja
inc
sbb
xor
inc
xor
in
loopne
push
jbe
ja
stos
fcmovnb
into
fidivs
js
push
xor
test
mov
lock
jbe
mov
mov
dec
sar
dec
xlat
sub
cmp
cs
out
out
sti
jne
addr16
sub
pushl
cmp
adc
out
addr16
mov
sub
cmp
std
outsb
hlt
jne
fmuls
inc
cmp
add
jmp
push
push
jae
shlb
sti
std
jne
jmp
add
xor
incl
mov
add
nop
add
rcll
inc
add
clc
jo
inc
pusha
imul
jne
jmp
stos
push
inc
jmp
xor
sub
add
shr
je
mov
arpl
loop
jmp
add
adcb
clc
mov
xchg
xor
add
gs
xor
test
xor
addr16
add
addr16
outsl
imul
je
inc
outsb
out
pop
mov
shlb
decl
imul
dec
je
push
inc
out
pop
popa
mov
jmp
out
sti
pop
xor
into
lcall
in
icebp
cmpw
xor
je
xor
jmp
cmp
mov
adc
inc
test
xor
sub
imul
je
popa
push
mov
lcall
push
je
mov
je
xchg
xor
je
rolb
aam
in
lock
add
jae
mov
cld
data16
jno
pop
in
in
addb
inc
inc
sbb
les
ret
adc
jae
aam
jae
sti
add
in
jae
push
mov
jle
jg
fs
add
inc
jae
out
sub
sbb
add
icebp
jb
ss
mov
jne
dec
in
or
add
sub
sub
lods
push
out
std
mov
jno
mov
dec
fdivrp
mov
push
into
jno
cmp
jae
push
add
inc
das
dec
ljmp
cmp
in
or
xor
jno
and
addl
jb
lds
shrl
test
push
mov
std
push
test
testl
sar
cmpb
push
test
std
aas
js
jmp
out
incl
adc
aad
ret
jne
out
je
js
sar
out
je
jg
pop
call
loope
daa
adc
mov
lock
imul
mov
out
je
lahf
imul
lcall
je
cmp
out
incb
gs
test
testb
fwait
decl
sub
pop
add
daa
inc
inc
or
testl
scas
add
repz
inc
inc
lcall
dec
inc
decl
jb
jle
imul
popa
pop
inc
ljmp
imul
push
bound
pop
mov
jecxz
stos
inc
decl
inc
and
xor
in
mov
xchg
fistl
cmp
mov
shrb
xor
add
nop
add
test
xchg
jl
ret
mul
jle
js
dec
divb
outsl
mov
jo
fcomp
add
scas
rcrl
call
add
dec
fcmovb
scas
out
xor
call
fildl
cmc
fdivl
clc
shrb
jg
dec
add
scas
loope
adc
out
cmp
call
or
xor
add
jbe
les
ds
aaa
js
xchg
stc
inc
outsl
adc
push
std
xchg
jge
jo
outsl
add
push
outsb
xor
push
lret
jmp
ja
imul
cmp
add
lock
out
add
lock
imul
inc
rorb
test
adc
cmc
sti
adc
add
xchg
scas
je
repz
jmp
cmp
outsb
jmp
jge
aad
outsb
lcall
mov
cmpsb
out
mov
ljmp
iret
outsb
call
insl
call
incl
mov
loope
xchg
fdivrp
inc
mov
xchg
decl
add
leave
and
push
pop
int
les
imul
idivb
cld
clc
push
xor
fidivs
mov
incl
inc
inc
jmp
xor
enter
mov
inc
jmp
inc
ret
decl
push
jne
leave
xchg
cld
ja
out
xchg
push
dec
shrl
and
inc
inc
pop
cmp
inc
and
test
cmp
std
dec
mov
jo
push
jg
ret
fcos
xchg
xlat
xor
dec
shlb
js
fildl
add
push
sub
sbb
clc
push
imul
pop
xor
insl
push
jg
sub
push
cwtl
add
push
add
xchg
je
daa
aam
in
outsb
pop
sbb
insb
call
shll
jne
dec
jmp
and
cld
out
jmp
movsb
clc
and
insb
mov
insb
xchg
ds
pop
inc
push
insb
mov
jns
subb
arpl
push
idivb
pop
jmp
shlb
jmp
shr
add
add
mov
out
nop
into
push
call
add
imull
divl
rclb
fildl
add
pop
mov
cmp
test
pop
mov
imul
hlt
les
inc
sub
je
or
lods
mov
add
dec
std
out
sub
arpl
xchg
imul
ja
call
ret
xor
das
rclb
lcall
pop
imul
mov
es
pop
xor
add
mov
cmp
xchg
xor
add
cmc
or
mov
call
push
cmp
out
lahf
xchg
mov
cmp
hlt
pop
add
in
sub
or
mov
outsl
or
arpl
jae
cmp
inc
adc
fsub
push
xor
je
mov
pop
enter
push
mov
cld
cli
std
imul
js
incl
pop
inc
sti
push
inc
ja
loope
movsl
test
test
sub
lds
rolb
push
mov
popa
loop
int3
sarl
imul
push
fcmovne
add
adc
inc
cmp
jns
mov
shll
push
pop
mov
and
decl
repnz
add
dec
pushl
push
push
call
ss
call
insl
inc
je
xchg
decb
or
sbb
and
xchg
push
xchg
stos
enter
pop
ss
push
dec
or
out
ss
leave
imul
into
fstl
push
cs
call
or
leave
inc
add
pusha
cmc
aas
cs
cmp
pop
out
loopne
iret
data16
bound
push
mull
fstl
aam
fidivs
push
push
dec
clc
push
aas
iret
addr16
ss
imull
xor
addr16
notl
sti
sub
cld
xlat
dec
cs
lcall
fmulp
dec
cmp
lea
into
lahf
fcomps
dec
jmp
sbb
jmpw
add
xchg
fsubrs
cmpsb
sub
out
cltd
pushl
std
add
jle
xlat
mov
jle
jmp
ret
incl
sub
or
or
push
fs
lock
mov
pop
mov
sbb
test
out
push
call
addr16
add
decb
push
ficompl
add
jno
call
xchg
in
push
xchg
xchg
leave
xchg
callw
imul
pusha
dec
in
adc
xor
clc
outsb
ret
push
je
push
jne
fbstp
fnsave
scas
in
xchg
fnstsw
cmp
xor
loopne
in
xchg
add
add
add
dec
shll
fidivs
jo
push
addr16
call
dec
mov
jne
imul
or
and
inc
cmp
pop
xchg
and
inc
or
and
in
mov
sar
int3
pop
pop
mov
cld
mov
cmpsb
push
das
add
out
xchg
xchg
pop
add
add
push
xor
xor
fs
aad
pop
loope
test
out
inc
add
movsb
js
mov
mov
fs
cs
pop
pusha
cwtl
add
pushl
cmp
sub
mov
call
imul
jmp
fs
fnstenv
call
jbe
imul
mov
fisubs
int
add
cmp
push
fcoml
cmp
test
cmp
add
push
push
shr
movsb
hlt
cmpb
mov
ret
push
je
or
into
sub
arpl
mov
pop
fs
cmp
popa
into
push
ret
into
bound
arpl
fs
jp
out
sti
pushl
pop
negl
adc
sub
lock
sbb
mov
sbb
adc
test
add
push
xor
arpl
xchg
in
inc
fisubrl
adc
pop
jl
jmp
push
mull
sub
lock
lcall
jmp
pop
jns
mov
inc
negl
shlb
xor
decl
outsl
testl
add
stos
sar
repz
fadds
incb
js
idivl
fisttps
jo
cmp
shl
dec
call
xchg
ja
imull
adc
pusha
incb
call
subl
jae
xchg
mov
pushl
push
decl
push
jg
mov
mov
dec
pop
call
jg
call
incl
mov
mov
pop
pushl
jbe
jmp
add
or
imul
sbb
jle
xlat
pop
popa
xor
ljmp
xchg
in
pop
popa
call
push
test
dec
xor
cmp
test
pushl
aas
fnstsw
sbb
lahf
call
mov
call
sbb
jmp
pop
call
cmp
sub
lret
popa
jo
cmp
icebp
pusha
inc
clc
push
f2xm1
pusha
ss
arpl
iret
nop
clc
fs
test
mov
scas
sub
call
sbb
jns
fnsave
add
popa
push
or
popf
mov
dec
push
loope
inc
pusha
je
inc
iret
push
sub
call
add
push
inc
sub
xchg
or
pop
xchg
or
aam
mov
add
jo
pop
hlt
pop
mov
cld
inc
push
call
shll
push
inc
jmp
loope
incl
aad
popl
call
and
add
mov
and
mov
aad
push
daa
mov
std
cmp
or
dec
test
call
cmc
call
out
add
push
pop
imul
leave
repz
test
sahf
jle
push
sahf
lock
lcall
push
or
shlb
add
pop
add
sub
mov
mov
mov
push
mov
divl
dec
push
push
lea
call
lret
xchg
outsb
inc
in
mov
pushl
mov
jmp
js
imul
pusha
mov
ljmp
ljmp
hlt
mov
jp
push
insl
mov
incl
cmp
xor
push
test
loopne
pop
push
decl
mov
mov
dec
cld
mov
fidivrs
pop
mov
add
push
lcall
pop
xor
sahf
daa
popf
jle
xchg
outsb
pop
pop
subl
fs
ds
in
jmp
dec
pop
add
stc
jmp
ss
sahf
jmp
pop
jmp
call
ss
mov
not
lock
test
pop
data16
ds
push
xchg
fsts
mov
cwtl
ds
scas
xchg
adc
xlat
ss
push
xchg
xchg
push
push
pop
xchg
es
pop
add
cmp
outsb
pop
imul
pop
xchg
add
pop
shl
xchg
pop
ficomps
ficomps
loope
ds
xchg
adc
pop
add
pop
pushl
jmp
and
xchg
lock
pop
pop
call
jle
push
jmp
outsb
pop
pop
call
xor
add
out
rolb
inc
pop
jne
and
ss
mov
jne
and
push
in
jne
fst
pop
adc
cwtl
incb
ds
scas
xchg
push
repnz
test
in
adc
add
add
add
sub
add
xlat
inc
testl
push
mov
pop
adc
imul
dec
add
inc
add
test
incl
je
pop
xor
call
fstpt
add
mov
jne
out
mov
or
mov
push
cmp
ljmp
lea
push
add
xchg
mov
lods
lcall
pop
sub
add
and
mov
pop
divl
inc
in
call
cmp
pop
decl
inc
cmp
mov
or
addr16
daa
sub
lods
xlat
push
fsubrp
maxps
test
call
mov
push
mov
push
inc
cmp
nop
lock
adc
mov
cmp
dec
mov
cltd
cli
pop
ljmp
mov
outsb
xchg
jmp
push
testl
idiv
movnti
xchg
cwtl
inc
pop
loop
xchg
or
rcr
pop
imul
pop
pop
push
gs
or
shr
mov
out
pop
testb
out
jle
out
jmp
pop
scas
rolb
push
mov
pop
pop
mov
mov
ds
mov
adc
pop
push
add
or
cmp
jmp
pop
jbe
cmc
jg
call
add
pop
jmp
cmp
push
outsl
add
js
push
inc
mov
push
jne
xchg
pop
mov
jno
mov
imul
mov
pop
testl
adcl
data16
jmp
shlb
testl
movsl
mov
add
jmp
dec
dec
lcall
xchg
adc
aaa
testl
aaa
inc
pop
call
cmp
pop
call
addr16
mull
out
enter
lods
call
jge
out
mov
ljmp
cmpsl
scas
mov
lahf
scas
call
mov
fdiv
scas
out
sub
idiv
push
in
mov
push
scas
jne
jecxz
mov
add
push
add
stos
add
daa
xor
call
jbe
sar
testb
push
lret
push
call
sar
dec
mov
call
add
decl
mov
es
sti
mov
mov
js
imul
add
stc
pop
sbbb
add
je
add
cmp
inc
in
std
call
add
cmp
add
in
repz
push
push
scas
xchg
pop
ljmp
imul
add
jns
add
pop
add
add
call
adc
cmpsb
lcall
cmc
dec
pop
push
cltd
mov
test
push
dec
xchg
push
fiadds
ss
xchg
call
push
push
push
cld
mov
mov
cmpsb
push
mov
test
push
add
pushf
ret
cmp
out
push
jle
and
mov
cltd
into
push
jo
aad
pop
push
push
add
stos
outsb
mov
dec
ds
cmpsb
push
hlt
mov
mov
mov
adc
push
call
jnp
push
add
or
jnp
out
mov
jmp
pop
mul
in
addb
and
push
mov
jne
mov
cmp
push
or
inc
dec
call
dec
addl
xchg
xor
test
cmp
add
test
mov
sar
mov
decl
pop
sub
jmp
int
lods
decb
push
inc
adc
aas
push
je
aas
out
mov
cmp
movl
add
mov
adc
addl
sbb
dec
stc
je
jp
mov
inc
scas
mov
xlat
scas
call
jmp
jae
push
jno
testl
mov
scas
call
cmp
mov
cmpsb
rcll
imul
call
jecxz
testl
jmp
fildl
cmp
xchg
jmp
push
pop
cmpsl
add
push
pop
incl
fadds
push
pop
xchg
pushl
sub
ljmp
push
dec
fwait
pop
decl
mov
push
incl
push
jmp
fadds
shl
xchg
call
lret
loop
decl
pop
jl
pop
push
mov
dec
pop
scas
push
inc
dec
in
push
inc
push
in
ss
xchg
push
push
cs
xchg
dec
es
xchg
push
push
jbe
pop
arpl
push
pop
lahf
mov
push
pop
mov
pop
push
push
add
push
out
push
cld
push
rclb
push
shll
call
mov
arpl
or
push
xor
push
mov
and
popa
add
pusha
scas
out
sbb
adc
daa
mov
add
add
idivl
cmp
sub
jp
adc
daa
inc
jmp
call
xchg
gs
call
adc
jne
or
repz
xchg
out
stos
push
push
addr16
call
push
pop
or
mov
pop
rorl
sti
movb
call
mov
test
add
call
cmp
loope
and
add
push
movsb
call
pop
call
pop
ss
decl
mov
leave
bound
add
scas
add
sub
je
dec
fdivs
cld
mov
sub
aaa
mov
inc
dec
dec
out
jns
push
and
pop
cmp
push
sbb
stos
xchg
mov
mov
push
dec
enter
cmp
cmp
mov
cmp
dec
jne
sbbl
push
test
dec
ljmp
cmp
cmpsb
mov
mov
cld
out
fcos
adc
dec
jne
icebp
fidivl
add
sbb
cwtl
add
cmp
push
add
mov
add
push
inc
je
or
dec
push
xchg
push
mov
xchg
mov
cmp
mov
ds
ret
cmp
dec
sbbl
push
vmovss
dec
outsb
dec
lret
sahf
and
sub
pop
fdivs
sahf
lds
cmp
add
mov
test
call
sti
pop
push
pop
dec
outsb
ja
dec
sar
call
or
call
dec
int3
testl
dec
lods
dec
ss
jecxz
es
mov
jns
jg
xor
dec
add
insb
rorl
cmpsb
dec
lods
sub
xor
add
test
call
jge
add
cmp
jne
add
imul
daa
ret
repz
add
push
ds
mov
xor
add
test
add
subl
rorb
adc
xchg
decb
push
imul
in
scas
push
ror
xchg
fidivs
dec
call
add
push
push
incb
mov
jmp
call
and
scas
mov
aaa
inc
loopne
mov
inc
mov
sub
cmpsl
jmp
test
mov
jp
addr16
cmp
incb
mov
jmp
sub
jmp
mov
pushl
mov
scas
decl
pop
sub
call
or
cltd
rcrb
mov
inc
add
mov
mov
call
dec
jmp
dec
inc
je
or
jns
mov
xor
add
mov
sub
mov
cmp
push
call
pop
add
add
adc
pop
xchg
pop
lcall
jmp
pop
adc
mov
push
decl
rolb
push
pop
lcall
add
dec
cs
pop
and
leave
push
push
dec
shlb
pop
jo
push
dec
mov
adc
push
pop
dec
out
dec
push
push
out
dec
xchg
pop
rorl
xchg
push
into
dec
xchg
sub
test
dec
mov
cmp
shrb
dec
rclb
add
inc
xor
pushf
jle
jge
inc
jecxz
xchg
imulb
lock
pop
lcall
out
test
dec
shl
pop
das
dec
add
lock
jne
adc
shrl
lcall
iret
jne
push
dec
push
in
in
xor
popa
mov
jo
mov
sbb
push
add
inc
jmp
divb
jle
sar
jbe
add
xchg
rorl
xor
add
mov
pop
subl
add
or
ss
cltd
push
add
sub
int
cmp
lods
repnz
call
dec
mov
add
ljmp
sub
imul
jo
test
ud1
push
pop
aaa
idiv
insl
mov
add
shlb
add
pusha
add
add
sub
mov
mov
xchg
mov
jne
repz
cmp
lock
mov
call
mov
inc
add
jne
testl
inc
add
pop
mov
pop
lret
add
push
pop
dec
dec
incl
or
call
rcl
mull
es
xchg
jg
inc
cmp
xchg
lock
ds
decl
inc
cmp
mov
xchg
jge
loope
inc
pushl
mov
stc
xor
dec
add
lds
pop
inc
lcall
push
inc
je
fimull
inc
add
dec
inc
xor
add
inc
jmp
cli
mov
pop
adc
pop
ds
fs
inc
push
icebp
dec
inc
jmp
inc
ds
jl
mov
inc
jmp
pop
es
add
jnp
dec
push
inc
sbb
pop
mov
xor
inc
repnz
insl
lods
imul
fmul
inc
xchg
test
lret
lock
push
xchg
jbe
mov
jge
scas
inc
data16
pop
mov
nop
mov
lret
lock
aam
ds
jle
add
pop
inc
ljmp
leave
pop
mull
incl
add
stos
push
incl
incl
imul
push
pop
imul
je
xchg
xchg
jl
call
jp
into
add
shll
shl
xchg
pushl
je
call
sahf
sahf
dec
jmp
mov
dec
call
scas
jnp
lcall
xor
or
cmc
add
inc
push
cld
lret
xlat
xchg
incl
dec
inc
cld
aas
xor
jne
test
mov
cli
mov
sub
mov
lds
or
sub
push
out
mov
mov
xor
jmp
jne
test
stos
mov
mov
pop
call
mov
insl
lcall
leave
jmp
xchg
cmpsl
push
pushl
mov
add
imul
mov
or
jle
inc
bsr
into
sti
push
push
xchg
lcall
mov
inc
inc
inc
jne
icebp
push
scas
ds
ja
and
xchg
ret
xor
cmpb
push
rorb
clc
inc
sbb
mov
add
cmp
or
js
fadds
add
mov
adc
pop
add
ret
add
rolb
add
rorl
mov
add
push
popl
clc
push
push
roll
inc
in
inc
ss
push
dec
push
inc
pop
inc
xchg
das
popa
adc
inc
dec
je
xor
push
lcall
aaa
sub
stos
popa
xor
fdiv
inc
mov
rol
inc
into
mov
dec
inc
mov
shrb
inc
scas
lods
out
add
movups
mov
jae
inc
repnz
sub
or
mov
cwtl
sti
inc
push
mov
push
inc
decl
cmp
push
dec
mov
ss
inc
je
xchg
pop
cmp
int
incl
push
cwtl
cmp
inc
push
cltd
jnp
pop
add
push
push
out
sbb
fwait
call
cmp
je
aad
cmp
xor
inc
incl
or
or
pop
js
push
cmp
pop
xorl
imul
daa
repz
cmp
cld
dec
call
js
cmp
sub
cmp
mov
je
clc
sub
call
adc
lods
add
mov
je
cmp
test
add
sub
mull
rorl
shll
jle
and
add
adc
inc
clc
loopne
add
lahf
inc
repz
filds
add
insl
ljmp
insl
decl
movsb
idivl
addl
cmp
or
and
cmp
add
add
incl
mov
push
lea
aad
add
movsb
xor
dec
push
sub
cmp
inc
mov
ds
jmp
mov
call
shlb
lcall
inc
jns
out
jge
jmp
xchg
xchg
insl
aas
mov
adc
popa
out
iret
cmp
xchg
sub
xchg
mov
jbe,pt
mov
test
cmpsl
add
ds
mov
jbe
jo
popa
ss
sar
rcl
shr
mov
push
aas
dec
ds
sqrtps
cmp
pusha
cs
add
jnp
ss
ds
das
add
ds
add
xor
lcall
xchg
cmp
jne
and
mov
decl
and
divl
cmp
test
push
cmp
call
add
incl
pop
idivl
das
cmp
test
pop
cmp
lcall
xchg
add
decl
add
and
push
ja
mov
cmp
xor
stos
out
cmp
inc
mov
dec
cmp
call
call
scas
mov
testl
hlt
idiv
scas
cli
je
scas
je
call
das
mov
imull
sti
out
sti
cli
jmp
clc
call
jmp
out
insl
add
leave
add
adc
push
jmp
add
push
imul
mov
mov
push
pushl
call
addr16
jmp
pop
sub
std
je
cmp
std
decb
jne
inc
mov
loope
imul
pusha
inc
add
adc
in
mov
lcall
sub
mov
inc
bsf
add
cmp
idivl
sub
add
aaa
sub
push
aas
add
dec
add
mov
cltd
cmp
push
loop
sti
popa
xor
je
add
iret
popa
push
sub
iret
sub
push
ret
mov
cmp
push
cmp
test
mov
scas
fisubs
cmpsb
jno
xor
sub
test
add
addr16
sahf
cmp
mov
cmp
push
mov
mov
push
cmp
call
add
cmp
pop
cmp
mov
sub
adcl
adcb
xor
cmp
cmp
jl
sub
cmp
cmp
cmp
std
sar
imul
jne
adc
lods
mov
xchg
push
and
sahf
add
jne
mov
loopne
jae
add
fnstcw
lea
jmp
bound
jmp
mov
sarl
add
xchg
inc
mov
inc
mov
inc
xor
and
mov
add
cmp
pop
and
lcall
add
decl
jae
in
das
idiv
ljmp
idiv
decl
idiv
pop
divl
jns
jmp
divb
sub
idiv
lcall
idiv
cmpsl
jmp
test
mov
mov
divb
xor
out
daa
mul
push
add
xlat
idiv
out
dec
test
xor
jmp
imul
cmp
in
repz
daa
in
sub
jl
sub
cmp
lods
xor
add
sti
push
add
dec
test
add
dec
scas
pop
loope
popa
out
mov
sti
push
pop
cli
inc
cmp
pop
and
add
inc
xor
testb
xchg
cmp
push
ret
sub
add
jge
lcall
sub
call
jo
jmp
mov
das
ljmp
mov
divps
xor
add
sub
mov
aas
lods
cmp
add
add
mov
jmp
lods
push
test
cmp
add
iret
aad
out
ss
cmp
xor
add
or
mov
jae
int
sahf
aaa
imul
fsubrl
das
imul
sahf
ss
or
cs
cmp
jbe
insb
cmp
jno
cs
pop
lods
jmp
and
cs
aaa
mov
push
aaa
call
push
pop
call
add
testl
push
mov
jmp
cmp
mov
mov
stos
pop
fmulp
std
out
pop
xor
push
mov
cmp
cmpsb
push
jmp
jmp
add
fisubrl
call
cmp
inc
jmp
jne
fdivl
sub
pop
inc
xor
inc
add
add
add
in
je
or
std
decl
out
je
pop
jo
call
or
in
inc
cld
out
mov
decb
push
cmp
ss
add
jmp
push
push
arpl
jmp
ljmp
pop
sub
adc
dec
jmp
ljmp
add
roll
inc
xchg
and
imul
mov
mov
lret
test
call
rorl
xor
decl
test
call
ss
aaa
jmp
xor
sti
sbb
add
and
cs
bsr
mov
add
and
loope
imul
push
out
stc
inc
cmp
push
lcall
xor
call
xchg
add
mov
in
inc
popf
nop
xor
add
and
shlb
dec
inc
xor
jo
xor
stos
xchg
mulb
sub
xor
test
add
es
xor
or
xor
out
stos
pop
fidivs
popa
nop
adc
out
xor
fistl
add
iret
lods
loopne
pop
dec
cmpsb
xor
mov
xor
test
xor
int
and
xor
dec
lods
pop
push
pop
lcall
mov
sbb
cli
out
sub
call
cmp
cli
out
or
call
lock
out
imul
sbbl
sbb
testl
call
xor
push
and
sub
imul
imul
sti
scas
cmp
pushl
cs
movsl
inc
sub
add
in
je
pop
js
call
decl
cld
lcall
dec
testl
jmp
imul
jp
mov
dec
mov
lock
je
aaa
js
call
or
add
adc
jne
adc
test
mov
out
push
xor
test
test
movsb
call
xchg
jmp
sbb
inc
cmp
xor
or
sbb
test
cmp
jle
add
faddp
ljmp
xor
shlw
sub
icebp
jp
popa
icebp
xor
mov
flds
je
xchg
add
push
fcomps
jmp
adc
mov
and
cmp
push
addb
push
push
fadds
jmp
mov
rorl
insl
call
dec
sub
jno
push
jecxz
scas
cs
sbb
clc
nop
jne
das
jle
cmp
xchg
dec
mov
jle
pushf
sbb
pop
xor
testl
movsb
sbb
xor
sub
das
ss
aaa
xor
dec
xor
das
push
xor
es
push
xor
cmp
jne
aaa
imulb
adc
sub
loopne
fildll
out
cs
xor
and
cmp
stos
add
aad
and
mov
in
cmp
sbb
jne
dec
xorl
addr16
icebp
jmp
jne
and
enter
addr16
add
jmp
jne
xor
leave
ds
sbb
sub
add
jmp
and
pop
dec
sub
pop
jns
jno
sar
or
aas
jmp
cmp
push
pushl
or
jbe
add
rolb
or
je
jo
enter
call
add
mov
jmp
push
add
push
mov
je
clc
jbe
out
cmp
pusha
push
mov
add
or
pop
or
inc
mov
push
out
xchg
add
or
xor
lods
decl
push
dec
push
mov
cmp
pop
sar
fs
sbb
add
pop
popa
sbb
out
xchg
sar
sub
sbb
lea
call
pop
mov
imull
sub
jle
pop
cmp
xchg
int
push
mov
push
fldcw
inc
sbb
sbb
shrl
cmp
sub
jle
ret
lods
cli
out
dec
sub
call
addl
sub
clc
rorb
sub
sub
sub
mov
sbb
into
sub
into
icebp
ds
add
cmpb
sub
jge
xor
sub
sahf
mov
sbb
mov
add
out
xchg
std
call
add
add
inc
hlt
xor
cmp
ret
add
inc
add
pushl
dec
shrb
add
ss
sub
push
mov
add
inc
popf
push
adc
sbb
jns
mov
sbb
mov
sub
cltd
jno
lea
fimuls
sub
pusha
mov
sbb
jmp
cmp
sub
sahf
call
sub
pusha
mov
xchg
call
fs
jmp
jbe
sub
fsubl
imul
sub
pop
mov
divl
adc
jne
push
mov
test
push
incl
std
sub
add
idiv
pop
xlat
je
cmp
movsb
jmp
lods
test
pmovmskb
lea
idiv
pop
dec
addr16
sub
decb
idiv
xchg
xor
cmp
out
nop
mov
jae
adc
add
das
sbb
dec
out
icebp
aad
jmp
sub
shll
mov
incl
adc
add
test
push
js
cmp
mov
dec
dec
xor
lds
mov
dec
testl
xor
cmp
jg
cmp
add
jmp
push
clc
subl
sbb
into
inc
add
mov
mov
sub
vpmadcsswd
call
mov
sbb
jle
sub
jg
popf
outsb
mov
sub
pop
dec
sti
out
cltd
sub
dec
stos
dec
testl
aas
popf
xlat
sub
add
sub
push
test
sub
add
or
jmp
lods
fidivrl
fisubrs
out
sbb
fs
rorb
lcall
pushf
daa
mov
in
sbb
sub
daa
sahf
outsb
lea
xchg
sub
daa
cmp
mov
jle
pop
pusha
jbe
jbe
lea
outsb
daa
push
push
cltd
daa
pop
sub
movsb
dec
pop
sub
and
daa
inc
outsb
dec
das
sub
lods
jmp
popa
lods
pop
inc
mov
insl
lock
push
daa
call
push
iret
cs
dec
sub
ljmp
hlt
cmp
andl
daa
jne
xor
push
jns
mov
cmp
mov
out
push
daa
incl
add
jmp
add
mov
mov
jne
push
lods
pop
push
or
lcall
inc
add
imul
add
fisubrs
push
jne
or
pop
fisttpll
add
add
call
or
jno
add
rolb
ja
mov
adc
mov
adc
mov
push
and
je
js
sar
or
lahf
jne
fidivs
test
nop
push
mov
adc
sti
push
xchg
or
xchg
frstor
cmp
push
mov
cmp
cmp
push
es
mov
and
pop
adc
inc
add
insb
jp
add
and
es
push
scas
or
inc
mov
fidivs
inc
bsf
add
pop
mov
add
fldt
ds
add
roll
cmp
add
hlt
mov
mov
and
cmpl
pushl
inc
je
subb
add
fwait
outsb
xlat
cmpsl
add
clc
sbb
dec
and
add
lcall
jge
sub
mov
push
ja
and
and
inc
shr
lods
xor
and
and
aad
and
jns
pop
into
and
cltd
into
fwait
xchg
jns
outsb
leave
sub
sbb
scas
and
jge
sub
and
add
push
rol
mov
push
xor
hlt
nop
sub
cwtl
and
jbe
jl
jbe
and
ret
test
and
dec
xchg
mul
and
mov
divl
push
xchg
inc
jnp
inc
jmp
pop
and
pushf
push
sbb
dec
pop
and
shll
addr16
mov
mul
sbb
jne
and
sbb
mov
and
push
sbb
mov
add
and
sbb
xor
jmp
cmp
mov
call
out
jmp
xlat
fdivrp
jne
cmp
neg
mov
push
push
mov
call
ja
fcomip
addr16
mov
add
pop
call
daa
xlat
divl
jne
or
neg
mov
add
mov
call
test
jne
aad
lcall
js
popf
call
fidivs
mov
cmp
and
xchg
pushf
and
jbe
imull
sub
les
sbb
push
iret
push
popf
dec
lret
insl
lret
push
sarl
ss
lock
add
push
add
mov
add
call
mov
mul
sbb
xchg
sti
shll
fisubrs
or
in
mov
mov
mov
sub
hlt
push
lds
add
add
stc
lcall
pop
xchg
add
mov
jmp
sub
stos
and
int3
notl
mov
push
dec
jnp
call
dec
xor
stos
or
lods
or
rcrb
mov
xlat
xchg
cmpsl
add
add
notb
cmpsl
add
pop
cmp
sub
or
mov
pop
pop
push
cmp
mov
addr16
jl
inc
jmp
and
jbe
sub
dec
sbb
jmp
sbbb
push
insl
pop
mov
cmp
push
jne
pop
xchg
pop
inc
pop
jns
es
mov
push
bound
les
iret
push
call
pusha
lcall
pushl
jne
and
mov
add
inc
je
mov
and
jne
jmp
pushf
out
decb
gs
jne
push
jne
ljmp
sbb
ja
push
enter
out
sub
adc
pop
mov
mov
mov
jmp
sub
rorl
mov
outsl
ja
jmp
or
mov
movsl
or
call
dec
and
push
imul
les
push
push
push
push
pop
pop
add
jge
add
stos
lahf
mov
xorl
jne
repnz
pop
push
cmc
dec
ret
mov
stos
and
mov
sub
rolb
mov
mov
cmp
adc
cmp
or
or
jns
mov
incl
arpl
sbb
mov
push
push
inc
call
or
jae
mov
mov
add
cmp
mov
dec
sub
add
mov
xchg
test
dec
inc
roll
sbb
rcrb
sbb
fiadds
sbb
mov
xchg
jge
and
les
inc
inc
hlt
data16
adc
lcall
adc
lret
fisttpll
mov
es
sub
mov
sbb
dec
ja
sbb
lods
popf
and
add
add
fs
xchg
push
pop
add
cmp
add
pop
cmpsb
add
push
rcll
mov
jmp
xlat
out
rcl
pop
pushl
fs
push
pop
iret
and
cmp
andl
sub
push
jl
addl
out
fldcw
sub
mov
sbb
scas
or
nop
sbb
psubsw
push
jp
sub
cmp
test
xchg
cmp
jae
mull
shlb
out
add
mov
pop
ja
enter
push
mov
add
outsl
push
sub
ja
or
insl
or
add
idiv
push
out
pop
call
or
push
add
mov
push
divl
jo
call
flds
lea
add
jne
out
std
xchg
mov
cmc
je
outsl
idiv
fisttpll
pushl
fs
adc
push
cmc
mov
daa
outsl
sti
call
testb
mul
dec
jge
out
add
pushf
or
mov
mov
or
fs
xorl
jb
inc
nop
xsha256
cmpsb
aam
call
xchg
aam
incb
sub
add
sbb
jg
std
outsb
sbbb
dec
lcall
push
sahf
scas
adc
shlb
pop
push
mov
xchg
or
pop
icebp
lods
aaa
sbb
mov
sbb
add
nop
sub
inc
cmpsb
lock
outsb
int
sbb
ds
outsl
into
sbb
int
pop
or
dec
sub
cmpsb
sbb
or
and
hlt
add
sbb
popa
xor
lock
jge
xor
cld
or
outsl
sbb
mov
inc
and
test
sbb
ljmp
xor
out
test
jmp
sub
call
cmpb
scas
cld
call
mov
add
cmp
lea
and
jne
push
lea
rorl
mov
xor
je
cmp
cmp
mov
cmp
rclb
cmp
jnp
hlt
inc
sub
cmp
sub
xchg
add
cmp
adc
add
decl
jmp
xchg
dec
clc
jne
clc
je
sub
mov
add
add
add
call
movsl
cli
jmp
add
inc
in
call
aad
lock
inc
out
push
sub
inc
notl
jo
incl
call
sbbl
jge
pusha
xchg
cmp
cmpl
inc
cli
jne
ljmp
cmp
mov
push
jne
xlat
nop
or
pop
jno
push
out
notl
xor
notb
out
push
xchg
out
roll
fisubs
incl
test
into
cmpb
sbb
inc
aas
outsl
xchg
scas
inc
test
call
and
push
jne
aas
adcl
es
jbe
lds
cmpb
push
pop
decl
adc
hlt
mov
mov
add
or
outsb
push
xchg
stos
or
mov
inc
loope
push
mov
sub
and
add
mov
push
insb
or
fmulp
adc
mov
cwtl
pushl
xchg
in
dec
imul
cmp
add
scas
mov
sub
xchg
xchg
adc
inc
inc
sbb
add
mov
inc
xor
push
push
cli
cli
inc
addl
cmpsb
pop
data16
cld
out
test
jmp
push
dec
mov
out
stos
adc
jo
pop
jmp
mov
negl
insb
jno
push
ret
fs
or
out
jne
adc
xchg
incb
sub
adc
adc
cli
out
jg
lds
lea
into
mov
cmp
adc
bound
mov
test
lret
icebp
push
arpl
sahf
dec
jg
xchg
cmp
add
push
dec
enter
mov
dec
jne
jmp
or
addl
jmp
or
pop
dec
roll
add
addb
sbb
call
dec
push
call
cmp
add
add
jg
cld
into
insb
and
or
out
decb
dec
adc
cmp
out
decb
sbb
out
decb
data16
out
jge
inc
fistl
hlt
nop
mov
add
and
les
adc
xor
jne
mov
jl
and
xchg
addb
out
imul
pop
jg
cmp
adc
out
dec
push
dec
inc
fwait
xor
out
ljmp
sbb
jns
add
sti
call
mov
xchg
sub
add
sahf
cwtl
inc
sub
adc
lcall
pop
adc
cld
pop
inc
mov
sbb
data16
mov
movsb
add
pop
lret
adc
movsb
adc
lods
adc
adc
adc
push
sarl
loop
jnp,pn
adc
adc
mov
inc
xor
xchg
jle
jl
adc
mov
in
sbb
pop
adc
inc
push
shrl
cs
adc
adc
and
cmpsb
dec
add
jne
dec
mov
xorl
adc
xchg
adc
sub
lcall
xchg
sti
inc
jne
decl
inc
or
iret
jp
push
sub
jno
ud0
cmp
add
idiv
or
roll
cmp
add
sub
out
mov
inc
sub
xor
pop
cwtl
into
dec
sbb
inc
mov
popf
xchg
dec
mov
mov
add
fldl
dec
call
fldl
dec
incl
jmp
data16
mov
call
incl
lea
std
decl
add
adc
add
inc
sub
push
sub
add
sub
jbe
jmp
pop
xchg
sar
decb
cmp
jmp
cmp
movsl
lcall
xor
jne
inc
mov
mov
and
add
in
and
or
sarl
inc
repz
les
std
scas
xchg
push
lea
mov
mov
inc
shll
dec
push
dec
sti
out
into
push
call
adc
inc
ret
xor
in
push
jmp
insb
repz
movsb
mov
call
out
dec
cmp
cli
mov
adc
ljmp
cmc
sbb
jne
push
cmpsb
push
popf
or
add
scas
mov
push
jle
rcll
or
lahf
push
data16
pop
popf
push
mov
popa
fwait
or
subl
ds
sbb
push
xchg
or
stos
or
cmp
sti
call
inc
leave
or
popa
or
cmp
enter
xchg
cmp
inc
add
cld
cmp
add
mov
or
xchg
fidivs
test
xchg
call
xor
push
shl
ljmp
cmp
push
sahf
push
dec
xchg
sub
in
cmp
or
subl
ds
data16
add
cmp
add
mov
add
cmp
sub
or
insb
add
xlat
dec
shrl
jmp
cmp
mov
fs
inc
jge
add
dec
addr16
pop
lcall
pop
mov
adc
mov
pushl
iret
sub
pushl
out
xchg
cmpsl
cld
mov
std
jmp
in
loopne
cld
mov
xor
adc
mov
add
mov
or
cmp
mov
cld
pushl
pop
call
js
xchg
jmp
mov
inc
mov
cmp
or
or
sti
test
mov
sbb
and
sbb
in
pusha
or
sahf
inc
jg
xchg
cmp
mov
pop
jb
add
inc
je
leave
mov
in
adc
stos
pop
jno
call
adcb
in
lea
xorl
jmp
scas
jle
es
jl
sbb
pop
sbb
pop
lret
adc
out
fs
sbb
add
fwait
insl
int3
cmpsl
add
rcrl
xlat
int
out
incb
out
xchg
cld
mov
lods
sbb
sahf
mov
test
mov
roll
stos
or
stc
incl
xor
iret
les
in
jo
or
inc
pushf
jmp
daa
add
or
sti
push
outsb
insl
or
sbb
add
mov
jmp
or
hlt
ljmp
fmull
push
mov
mov
mov
inc
xchg
pop
adc
push
testb
pop
inc
or
pop
xor
jne
inc
cld
mov
inc
aaa
ret
mov
aad
inc
in
mov
or
xor
or
inc
cs
cmp
mov
jmp
cmp
ret
cmp
add
xor
lcall
fs
or
dec
inc
mov
add
sti
jne
in
arpl
add
shlb
push
das
ja
call
mov
lock
scas
push
push
call
sub
out
adc
push
imul
push
cld
mov
lock
ljmp
xchg
jmp
clc
cmpb
pusha
ja
push
mov
clc
jne
jmp
mov
clc
mov
lock
cmp
cmp
or
pop
decb
insb
and
xor
aad
ljmp
push
nop
in
pop
inc
sar
mov
jne
lock
sbb
ret
scas
mov
and
mov
add
push
jne
xor
bound
sbb
mov
cmp
ds
popa
sbb
add
pop
shl
adc
cltd
call
sbb
push
les
lods
add
movsb
add
push
fwait
add
cli
into
mov
sbb
add
add
push
mov
pop
out
jno
lods
jnp
add
jp
add
ja
adc
add
testb
add
push
sahf
add
or
adcb
int
jbe
sarl
add
or
add
mov
push
lcall
ds
test
jle
ljmp
inc
jmp
aas
add
cwtl
xchg
aas
add
adc
inc
jmp
aas
add
adcb
push
subl
call
jl
sbb
xor
and
fiadds
adc
xor
mov
add
mov
mov
add
negl
xor
jmp
cli
incl
sub
cld
dec
rorb
call
add
ljmpw
std
je
js
mov
ja
inc
cld
or
add
data16
xchg
jmp
aam
lods
pop
out
insb
std
push
aaa
xor
loope
jne
out
std
xchg
cld
addr16
aas
jmp
jg
jb
call
call
add
add
pushl
out
xchg
cld
and
jmp
pop
add
mov
rolb
sti
cs
out
movsl
add
lock
ljmp
push
incl
add
stc
inc
lret
add
jle
push
xchg
out
mov
push
sbb
out
xchg
jo
cmp
sbb
jne
stc
add
sbb
out
out
xorb
clc
sbb
pusha
lret
call
jo
or
in
out
cmpb
add
cmc
add
inc
mov
pop
jmp
push
dec
mov
jmp
add
jns
sbb
add
and
mov
jmp
add
push
mov
clc
inc
int
add
clc
cld
call
lret
cmc
inc
cmp
jmp
inc
add
aaa
outsb
add
mov
imul
mov
push
pop
jg
pop
add
incb
mov
jmp
mov
push
inc
cmp
rcrb
aaa
inc
je
cmp
cmp
in
aaa
inc
jne
cmp
dec
jge
mov
imul
jne
add
jmp
pop
je
jmp
xchg
add
cmp
push
push
jl
call
mov
inc
jmp
cli
mov
adc
mov
idiv
fdivr
roll
sti
push
mov
call
std
je
inc
cmpb
jmp
cli
pushl
xor
scas
call
add
call
push
test
inc
push
cld
jmp
lds
mov
lea
sbb
jb
mov
push
cmpb
ja
sub
leave
ret
cmpb
ja
sub
aas
inc
rolb
jne
jmp
pop
leave
and
sub
je
pop
push
or
and
add
push
ja
subl
shr
add
or
add
add
test
add
rcrl
or
inc
push
pop
xor
push
popa
mov
pop
leave
jnp
add
bound
or
adc
dec
sub
cmp
cmovb
ja
shlb
lock
add
incb
inc
cmp
or
jbe
mov
repnz
in
je
jb
or
cwtl
ljmp
pop
inc
lock
lcall
ljmp
jg
jmp
incl
incl
lods
or
add
dec
cmovno
cmpb
ret
jecxz
stos
or
push
jb
das
je
lods
or
insl
cmp
lock
push
je
decb
cmp
lock
sub
cmp
lock
or
add
jae
int3
js
jmp
loopne
std
push
xor
jae
test
adc
add
call
loop
je
mov
or
inc
jmp
cmp
decb
test
add
xchg
ds
jmp
jle
or
out
lods
add
cmp
je
pop
adc
push
je
andl
xchg
add
cmp
fs
dec
ret
xlat
fs
call
add
adc
add
test
add
lcall
cmp
add
jns
add
pusha
lea
push
push
incl
sub
cli
std
or
add
andl
add
and
and
adc
push
mov
push
call
std
jae
addr16
push
js
mov
ja
inc
lock
decl
inc
in
add
incl
sar
je
cmp
ljmp
mov
bnd
mov
out
ret
push
dec
inc
clc
call
add
sub
inc
cmp
pop
add
faddp
jae
adc
clc
call
add
sbb
jne
adc
add
jle
push
and
add
mov
add
insb
inc
jmp
mov
add
stc
mov
lea
push
cmp
jbe
loope
mov
cli
sbb
inc
mov
or
inc
lods
dec
xchg
add
cli
in
sti
je
push
xchg
es
jg
sub
mov
xor
push
pushl
sar
call
or
stc
outsb
sti
inc
cli
adc
aas
je
jmp
orl
dec
mov
jne
in
insl
jno
inc
call
pop
jno
jmp
dec
jno
call
cmp
hlt
cli
incb
sti
es
push
sub
test
jge
in
xchg
sti
push
mov
push
mov
or
call
jb
dec
call
loop
insl
sbb
jg
jmp
mov
xorb
leave
add
jmp
xchg
cmp
stos
scas
out
stos
pop
shr
push
mov
adc
fisttps
je
arpl
sar
stc
je
loop
stos
add
or
movsb
lcall
and
pushl
in
sti
pop
testb
mov
aas
aas
testb
js
add
divb
push
pop
or
pmulhuw
add
pusha
test
jmp
jle
push
pop
test
cld
call
dec
lcall
push
inc
add
push
pushl
sarb
cld
out
sub
decl
shrb
cmp
cmp
pop
cmp
pop
pop
xor
jo
xor
jo
inc
and
test
add
xor
negb
add
ss
aas
mov
jmp
ret
out
idiv
mov
cmp
or
mov
add
imul
add
jmp
idiv
shlb
int3
rolb
sbb
mov
je
subl
add
jmp
add
cmp
jmp
outsb
inc
mov
filds
idivl
add
movsb
add
add
pop
pusha
jbe
mov
jmp
add
orl
sbb
sti
call
add
add
xchg
sti
push
pop
shlb
out
add
add
outsl
cmp
jmp
push
mov
call
sarb
pop
scas
inc
and
jmp
in
mov
cmp
add
cmp
lods
repnz
jmp
xor
cmp
jmp
js
call
out
adc
testb
popf
std
std
push
scas
mov
insb
aam
nop
hlt
idivb
push
aas
sub
xor
xor
add
add
inc
inc
jmp
xchg
push
add
xor
jae
int
inc
sub
add
jns
inc
add
out
jae
test
pop
add
or
je
push
call
push
clc
cmp
inc
shr
jae
mov
add
jmp
inc
add
push
add
push
push
dec
shl
ljmp
incl
or
add
push
xchg
fs
std
jmp
shl
sub
decl
fs
call
fnstenv
adcl
jnp
and
cmp
add
out
outsb
or
lea
rorb
or
jge
cmc
aam
insb
icebp
ljmp
xchg
hlt
je
push
es
xor
je
stc
inc
cmp
icebp
adc
xchg
add
xchg
adc
xchg
add
xchg
pop
in
add
popa
out
add
data16
cmp
inc
add
enter
add
xor
test
in
cmp
jmp
inc
cmp
sti
push
xchg
and
pop
test
and
cmp
jmp
jmp
jns
hlt
loop
sub
enter
aas
jge
test
sub
jge
repnz
jge
repnz
ds
repnz
ljmp
sub
cmp
loopne
mov
lods
mov
bnd
decb
sub
xor
xor
hlt
call
push
call
or
pop
aas
add
or
jb
repnz
jl
call
inc
call
mov
incb
xor
jmp
lret
repnz
cltd
loop
xchg
stos
test
stos
lods
mov
stos
repnz
repnz
ljmp
mov
testb
add
add
repnz
dec
add
jmp
pusha
std
decl
adc
js
push
add
repnz
add
std
mov
lea
sub
sub
pop
push
adc
or
adc
cld
incb
out
std
or
js
push
vmread
cmpsl
jae
decl
push
adc
std
xchg
sar
out
mov
dec
push
call
mov
out
jae
cmp
icebp
pop
mov
fcmovu
cmp
add
test
xor
mov
out
xor
inc
cltd
ja
mov
jbe
adc
ja
mulb
mov
dec
icebp
dec
add
push
jnp
fisubrs
ja
imul
in
mov
es
mov
psllw
xchg
leave
pop
add
pop
in
add
int
xchg
cmp
test
cmp
pop
ja
fldt
pop
iret
das
sub
mov
icebp
push
out
rclb
shll
jae
xor
movsl
fstpt
inc
xor
js
mov
push
insl
push
add
dec
adc
mov
jne
cld
add
or
test
fidivs
pop
js
lock
mov
icebp
out
cwtl
fisttpl
out
fwait
adc
je
fstpt
or
lock
jl
lds
mov
push
push
add
mov
push
insb
loope
dec
add
mov
out
in
pushl
es
insl
push
out
enter
push
bound
out
je
daa
jne
xchg
out
je
out
enter
push
jb
add
mov
je
add
out
mov
sub
add
mov
cmpsb
out
or
xor
pop
xor
call
pop
out
incb
add
shll
inc
nop
fidivs
cmp
or
fidivs
js
test
xchg
call
fidivs
js
test
out
inc
clc
dec
lret
adc
add
dec
add
and
call
mov
std
jne
leave
test
push
fimuls
rcl
mov
jne
dec
call
jne
add
adcb
cmp
in
test
fdivrl
cmp
std
xorl
sub
cmp
add
jns
jbe
in
pop
pushl
xlat
add
in
pop
shlb
sbb
roll
xor
xlat
idivl
xor
add
lret
xchg
jg
cmp
xor
je
add
pop
push
mov
dec
sti
jg
cli
jbe
not
dec
inc
inc
daa
js
mov
sub
imul
out
scas
add
xor
jmp
adc
clc
adc
dec
shrb
ja
in
icebp
pushf
sub
cld
mov
jmp
clc
pop
stc
imul
pop
add
aas
jmp
in
add
jmp
sbb
push
icebp
push
pop
jmp
adc
jne
in
test
nop
jno
jmp
dec
lock
jl
cli
xlat
gs
jmp
adc
pop
mov
ja
push
jmp
add
jae
inc
in
cmp
mov
push
call
loop
outsb
xor
xlat
imul
cmc
mov
je
or
jmp
dec
into
enter
push
jmp
mov
jne
shrl
sbbb
add
push
mov
jo
call
cld
dec
jmp
push
jmp
push
inc
pop
cmp
inc
hlt
add
ljmp
add
pop
outsl
clc
inc
in
std
jne
int3
mov
or
add
jmp
test
es
pusha
jae
cmp
jae
and
incl
mov
jae
jg
adc
add
jae
clc
sti
jae
enter
scas
aad
lock
les
push
adc
jne
pop
mov
add
hlt
cmp
arpl
pop
and
stos
cli
out
test
inc
fwait
out
xor
sub
xlat
add
cmp
xchg
adc
dec
and
add
cmp
jbe
cmp
pop
push
stc
xchg
add
xchg
inc
add
push
inc
inc
cmp
cs
and
add
cmpsl
inc
shr
daa
pop
inc
add
inc
sbb
js
pop
add
flds
fimull
mov
or
adc
fs
jmp
rcrl
mov
ret
ror
inc
jmp
mov
loope
sub
jmp
inc
fcomps
ret
or
adc
inc
jmp
jmp
dec
xlat
cs
add
add
out
cld
pop
les
loopne
inc
out
out
sub
add
add
cmp
jmp
add
pop
testl
inc
jmp
sub
inc
add
clc
out
inc
sub
jmp
cmp
test
cmp
subb
clc
out
xchg
in
insb
pop
out
std
push
mov
in
incl
jb
sbb
in
sub
push
jb
jg
aad
in
inc
xor
mul
test
out
jo
in
in
mov
add
mov
out
add
call
adc
push
push
cmp
inc
rcr
xor
cmp
in
jmp
std
push
add
dec
sub
add
nop
add
dec
and
aad
pushl
dec
call
in
fdivr
jne
leave
xchg
jge
faddp
ret
push
mov
hlt
jbe
std
push
inc
daa
ljmp
out
gs
mov
lds
and
add
cmp
pop
jbe
dec
xchg
roll
add
cmp
pop
jns
add
mov
inc
add
inc
inc
cmp
pop
adc
mov
out
mov
pusha
inc
inc
cmp
pop
add
xlat
cmp
jge
in
mov
xchg
push
or
add
in
in
inc
iret
idivb
mov
mov
shl
mov
aas
sbb
lods
loope
lods
popf
add
mov
cmp
jmp
in
hlt
jecxz
push
popa
cld
out
cmp
rclb
rcrl
inc
test
push
sbb
inc
pusha
inc
jmp
inc
movsl
jecxz
pop
inc
test
and
roll
addb
add
in
notl
inc
insl
jecxz
jbe
mov
push
sarl
outsb
xor
data16
sarl
adc
and
lods
push
pop
add
jecxz
icebp
repnz
js
xchg
pusha
add
jp
add
mov
sub
jnp
call
repnz
outsb
sbb
pushf
pop
fsubrl
daa
clc
out
fabs
incb
ljmp
add
add
cli
inc
add
popf
sub
sti
jmp
inc
mov
outsb
sbb
xchg
pop
fsubrl
cld
decl
lock
xor
incl
fnsave
out
inc
or
ljmp
add
ljmp
cld
imul
pop
inc
ljmp
cld
push
aad
orb
rolb
in
push
clc
aam
inc
shrb
bt
out
out
fdivrp
mov
jb
jl
cmp
subb
inc
mov
es
or
dec
pop
push
cmp
test
pop
sub
mov
inc
cmp
jecxz
inc
iret
mov
mov
loope
cmp
test
add
mov
decb
and
pop
insb
loop,pt
in
popa
pop
or
or
fdivp
inc
leave
sti
rolb
push
ret
ret
lds
sub
stc
xor
loop
cld
sub
add
fistpl
clc
cmpb
addl
cwtl
inc
add
mov
cmp
or
call
jmp
rcrl
sub
loopne
or
xor
push
add
out
add
pop
loope
loopne
int3
sbb
push
mov
sti
fucomip
push
icebp
jmp
pop
jbe
jg
mov
mov
andl
add
das
mov
pop
inc
loope
inc
cmp
imul
add
add
add
ret
add
mov
loope
addr16
subb
jmp
loopne
ficomps
or
pop
fdivrp
push
sbb
je
and
mov
cmp
sti
adc
or
int
pusha
jg
addr16
cs
inc
jmp
cmp
ljmp
fsts
inc
add
pop
incl
rolb
outsl
mov
push
fisubrl
and
lcall
fisttpll
jmp
les
add
cmpl
or
jb
call
add
ja
data16
inc
add
inc
inc
add
aaa
or
lcall
decl
call
leave
rorb
add
rolb
adc
imul
add
cld
push
addr16
or
mov
sbb
adc
daa
mov
mov
add
add
add
or
addr16
push
sub
jne
repz
pop
out
leave
jnp
add
or
adc
mov
loopne
inc
xor
inc
fisubrs
ss
decb
lods
push
mov
imul
cmp
add
mov
push
push
add
xchg
adc
add
pop
pop
cld
sarl
rorb
pushf
mov
mov
incl
push
xor
and
ljmp
imul
or
lcall
fidivrs
fwait
divl
stc
fsubp
notl
popa
loope
std
lret
add
call
push
inc
fstpl
pop
stc
pusha
fnstsw
fcompl
and
sbb
lods
or
push
inc
call
lods
push
and
push
add
dec
pop
xchg
fldl
mov
xchg
cmp
jns
sti
sti
lds
mov
mov
sub
roll
neg
mov
sahf
push
add
add
imul
ljmp
decb
and
lock
jmp
jmp
out
or
jmp
or
jmp
add
scas
mov
jmp
jmp
add
jb
clc
mov
pusha
add
xchg
lea
movb
dec
outsw
lock
aam
add
aam
fsts
aam
mov
add
incb
call
inc
aad
icebp
aas
out
push
addr16
inc
mov
mov
adc
test
xchg
inc
movl
mov
addl
mov
push
add
cmpl
add
out
push
pop
jg
sti
pop
mov
call
push
les
add
mov
xchg
ds
cmp
or
cmp
movsl
inc
add
loop
cmpb
add
lods
out
pop
push
fisttps
fsin
test
aad
inc
push
and
dec
mov
aad
cs
outsb
add
out
add
imul
push
stos
xor
sub
inc
inc
cmp
ret
jb
adc
xor
mov
push
fcomi
incb
push
fidivrs
mov
cs
cmp
push
clc
lahf
push
aad
int
cmp
fdivs
mov
and
nop
add
scas
or
fdivrs
out
fdivr
ljmp
aam
in
test
test
xor
idivb
add
dec
sub
add
xor
pop
add
add
mov
cmp
test
jne
cwtl
sbb
cmpl
daa
insb
push
sar
add
push
mov
mov
ss
push
dec
add
mov
add
xchg
je
pop
mov
push
out
xchg
fwait
inc
aaa
leave
sub
push
bound
ret
loope
les
adc
test
popl
pushl
lock
sbb
jge
sbb
mov
jmp
add
std
add
push
sti
incb
dec
lea
call
push
pop
xchg
incb
mov
mov
add
sbb
mov
push
inc
adc
popf
push
dec
or
adc
std
sbbl
std
lea
std
dec
loopne
stos
push
scas
mov
push
jo
pop
scas
std
push
sbb
leave
ret
push
mov
add
ret
lods
std
push
fwait
mov
mov
push
dec
cld
imul
out
sbb
stc
aam
jl
add
cmp
jb
lods
dec
mov
xor
cmpsb
xchg
push
std
xchg
push
xlat
push
cmp
out
jae
dec
cltd
sti
ja
outsb
je
in
fisubrs
incb
mov
pushf
int3
pushl
mov
divl
mov
mov
mull
aad
mov
xor
push
ret
ret
leave
in
je
add
or
dec
in
xor
or
imul
jne
sbb
dec
fucomp
pop
xchg
arpl
outsl
dec
test
loop
mov
stc
cmpb
add
iret
add
mov
sbb
push
push
testb
sub
mov
cmp
push
inc
subl
push
xchg
aaa
mov
mov
jg
lock
addr16
add
shll
mov
sub
lea
add
push
pop
lea
fistl
in
rorb
movsl
add
ss
test
shll
arpl
inc
sbb
dec
xor
push
insl
and
jmp
out
ret
cmp
cmp
je
decl
cmp
mov
cmp
div
ret
mov
cmp
cmpsb
outsl
xchg
call
jp
inc
add
pushl
popf
adc
add
jp
mov
punpckhdq
pop
adc
push
iret
loope
sub
cld
or
aam
cmpb
jae
push
sub
add
push
mov
xor
add
jne
stos
jae
out
inc
mov
add
mov
mov
add
enter
ljmp
inc
shr
add
ljmp
and
lea
gs
push
cmp
and
mov
stc
fidivrl
cmp
add
mov
hlt
iret
decb
dec
jb
into
out
jl
out
test
movsb
mov
scas
out
cld
push
add
cmp
leave
inc
imul
dec
int3
cmp
add
mov
lret
dec
dec
int3
add
fs
rorb
jge
jmp
out
rclb
into
ret
gs
int3
cmp
mov
add
jnp
jmp
enter
dec
repz
cmp
mov
out
dec
mov
insl
lods
xchg
pop
xor
xchg
xlat
rolb
cmp
add
loope
hlt
sti
mov
inc
dec
jmp
popa
cmp
fadds
inc
test
pop
jge
lcall
test
jp
mov
inc
cmp
jl
ja
push
inc
clc
jmp
cmp
add
movsl
inc
inc
jmp
push
add
push
repz
mov
sub
iret
jmp
jnp
add
mov
cmp
add
cmp
sub
iret
jmp
xor
inc
cld
mov
hlt
jmp
testl
test
sti
mov
call
cmp
add
push
int3
incl
mov
jne
stos
addb
add
dec
mov
sbb
rorb
cltd
inc
popa
add
xlat
pop
add
shl
cmpl
mov
inc
in
or
add
add
add
add
loopne
cmp
adc
fwait
ret
and
in
add
pop
mov
or
push
ljmp
mov
in
inc
sub
push
xchg
add
clc
add
shlb
xchg
inc
cmp
xor
test
add
pop
push
clc
cmp
std
sbbb
test
or
sbb
sarl
enter
pop
das
fsubrp
sti
out
call
sarb
filds
cmp
push
sub
mov
mov
clc
pop
ss
test
sub
cltd
inc
add
adc
inc
inc
cmp
mov
jbe
movb
stos
inc
cmp
imul
cmp
cmc
call
ret
out
das
cltd
orb
sub
subl
xchg
enter
into
enter
fdivrs
lret
test
cli
into
insl
enter
int
cld
fidivrs
mov
iret
int3
sti
sti
ficomps
jg
add
push
loope
or
into
jno
in
add
inc
cmpb
ss
add
add
ss
out
idiv
ljmp
pushl
inc
rcrb
mov
loope
scas
out
add
mov
ret
mov
imul
jmp
jbe
ljmp
sbb
mov
sub
loope
jg
add
or
icebp
mov
stc
ljmp
mov
xor
ret
ds
andb
xor
inc
in
nop
or
jne
pop
add
xchg
or
ret
test
jecxz
add
sti
xor
xor
inc
clc
jmp
lds
push
jmp
loope
pushl
dec
inc
lock
add
sub
push
sub
lea
dec
jmp
cmp
mov
hlt
shlb
xor
adc
testl
jne
dec
jl
dec
or
jecxz
scas
mov
jne
dec
incb
xchg
add
rcl
add
cmp
sti
jmp
sbb
pop
mov
pop
add
mov
mov
mov
push
incl
inc
cld
rcr
and
cmp
nop
jno
fstpt
and
add
cmp
fisubl
mov
add
add
mov
sbb
addr16
add
rorl
ficoms
in
popa
xlat
and
cmp
jb
cmpb
add
cmp
fidivl
pop
lret
mov
decl
and
ds
jnp
call
push
dec
pop
cli
inc
clc
ljmp
aas
cmp
push
inc
leave
fwait
repz
aaa
stos
inc
cmp
jnp
push
push
movsl
add
jge
clc
das
push
fstps
cmp
insb
inc
jmp
lret
push
dec
jp
jmp
inc
jne
jmp
push
sub
js
xchg
push
loope
fdivrs
cmp
push
xor
repz
insb
ljmp
hlt
hlt
xchg
sbb
cmp
andl
lret
aam
leave
xor
sbb
dec
pushl
in
inc
loopne
cmp
je
jae
or
sub
sub
jae
mov
int3
jl
xor
inc
inc
add
mov
cmp
inc
add
dec
call
sub
mov
pop
add
cmc
xor
xor
xorl
inc
shlb
aaa
in
lods
iret
std
xor
call
dec
inc
int3
adc
loopne
xchg
add
cmpl
push
test
sti
call
rolb
addr16
mov
inc
add
pushl
movsb
dec
std
aaa
mov
mov
adc
cmpl
je
xchg
push
enter
shr
add
jb
arpl
enter
push
ljmp
cld
enter
jecxz
inc
rcr
int3
and
enter
je
add
je
and
push
incl
jle
scas
in
rcr
jl
or
enter
dec
or
push
decl
inc
int3
cmp
cmpb
int3
cs
je
jmp
insl
push
or
mov
je
scas
subb
je
mov
je
add
movl
movl
lds
and
lds
and
lds
add
lds
add
les
or
les
adc
les
sbb
les
and
repz
rclb
in
lds
fnsave
push
dec
in
dec
and
dec
inc
cmp
bnd
add
jnp
fdivrl
enter
add
and
lds
jmp
xor
jae
jne
jae
jns
jbe
clc
jmpw
pop
sti
jmp
jp
add
jmp
cmp
je
andb
ja,pn
mov
sarl
push
ja
dec
mov
ja
test
pop
ret
adc
scas
cmp
cltd
sub
sub
ret
and
sub
mov
cmc
ljmp
mov
cmpl
jne
pop
inc
jmp
scas
mov
jmp
das
mov
std
mov
leave
lds
clc
add
add
aad
lea
ljmp
clc
mov
lcall
xor
call
sarl
imull
mov
mov
daa
mov
decl
jb
negl
mov
std
cmp
mov
je
mov
std
out
add
rcll
cmp
inc
imul
cmp
js
mov
call
incl
or
fimull
sbb
sub
sti
xchg
add
in
rcr
mov
in
or
je
inc
push
insb
push
sbb
mov
mov
add
out
stos
push
lret
js
sbb
add
add
add
jns
imul
cmpsb
cmp
faddl
loop
push
push
lods
pop
dec
cmpsb
ret
add
jmp
jge
aas
jmp
stos
imul
ret
lahf
aad
dec
mov
cmp
movb
jb
stc
mov
ret
in
testl
divl
jb
mov
cmp
add
add
lret
call
bound
xorb
adc
mov
add
cmp
pusha
push
lock
jne
fldcw
shll
addr16
sti
jge
loopne
sti
or
inc
jle
testl
add
fisttps
adc
mov
icebp
mov
icebp
mov
clc
pusha
add
ljmp
ret
push
inc
jl
rorb
xor
adc
push
cld
add
xchg
or
xchg
add
jmp
mov
adc
push
imul
lods
and
inc
hlt
stc
add
adc
shlb
cs
add
inc
out
ljmp
inc
clc
lea
dec
call
daa
notl
ljmp
pushl
shll
sub
add
or
call
jae
daa
div
decl
sar
popf
inc
cmp
add
cs
ljmp
mov
jae
hlt
mov
jmp
inc
hlt
push
or
gs
or
gs
stos
addr16
test
stos
mov
mov
je
xchg
xor
xchg
mov
std
incl
and
jecxz
mov
stos
add
and
ss
jle
or
push
mov
je
push
out
pop
jnp
dec
in
stos
jns
jmp
stos
lret
shlb
inc
aaa
ss
cmpl
cs
dec
mov
mov
cmc
out
mov
mov
inc
mov
add
clc
add
push
mov
in
testb
lods
sub
mov
in
mov
xor
xor
mov
inc
push
dec
cmp
pop
xor
jno
inc
xchg
lock
call
sub
add
ret
cmp
add
cmp
shl
add
add
cmp
andnps
cmpl
adc
ljmp
inc
cmpsl
cmpsl
sub
cmp
xorl
je
mov
adc
adc
pusha
add
adc
mov
test
jbe
mov
add
or
aam
mov
or
incl
decl
adc
pusha
out
lea
jge
ljmp
jmp
jg
or
stc
pop
jmp
hlt
pop
call
pop
hlt
adc
ljmp
movd
mov
incl
xor
adc
jecxz
decl
cld
jmp
or
out
mov
jmp
sti
or
jne
jmp
call
mov
add
cmp
add
test
xor
push
loop
or
and
adc
adc
cmpsb
sub
xchg
test
mov
add
or
ljmp
adc
mov
add
sub
loope
mov
add
cmp
xor
ljmp
add
movsl
lea
lods
arpl
call
cmovo
out
cmp
inc
ss
es
mov
inc
mov
call
ss
js
add
add
enter
adcb
call
jg
mov
in
test
inc
or
add
add
mov
cmp
sub
mov
and
test
dec
mov
add
xor
orl
xor
sarl
je
mov
clc
inc
mov
push
push
daa
pushl
int
call
add
rcrb
add
addr16
pushl
inc
std
mov
hlt
fsubr
sub
out
mov
push
daa
mov
push
dec
mov
clc
mov
sbb
push
xorl
sahf
imul
out
lods
jmp
clc
add
add
cld
decl
push
add
jecxz
pop
add
mov
jmp
pop
scas
out
jns
std
orl
cmpl
int
call
pop
imul
mov
xchg
nop
xchg
out
str
cs
sarb
shl
pop
mov
mov
adcl
push
sbb
add
add
add
lea
hlt
fdivrs
add
test
aaa
or
int3
or
jns
push
leave
jnp
add
les
mov
sub
jbe
leave
sti
pushf
add
xor
push
arpl
mov
inc
add
push
aas
in
imul
or
jne
out
aas
in
add
cmpl
add
fwait
or
imul
cmp
and
and
decb
rcrb
add
add
add
mov
outsb
mov
call
ds
dec
fs
dec
cs
jno
sub
mov
aad
adc
add
mov
ret
fs
and
xor
adc
mov
mov
out
out
pop
lods
call
lods
into
sub
out
mov
adc
sbb
popf
jo
out
sub
xor
addl
jae
fisttpll
inc
fld
sub
jbe
mov
aad
mov
cmpsb
mov
xor
jb
or
es
lahf
call
fiaddl
inc
push
push
push
mov
repnz
xor
inc
lods
pushl
jl
cmp
es
mov
je
xchg
cli
addr16
insl
std
jne
push
std
jne
push
sub
outsb
dec
leave
ret
mov
sub
dec
les
add
je
mov
fucomip
fisttpl
clc
leave
gs
out
cmp
add
pop
pop
or
ljmp
jne
cmp
add
add
push
add
dec
rorb
and
adc
jne
outsb
jae
cmp
sbb
ret
sub
sub
or
add
add
jmp
stos
dec
sbb
mov
sub
fldenv
incl
lods
or
cmp
mov
rcrb
mov
je
inc
lods
pusha
push
cmp
or
and
ds
aas
adc
mov
aaa
cld
xor
add
jae
into
ret
out
add
hlt
sbb
cmp
jl
loope
ss
push
lock
int
dec
add
cs
addb
mov
int3
push
add
add
test
sbb
mov
movsl
out
test
mov
jle
and
mov
jne
cmp
clc
in
mov
stos
mov
std
andb
aam
push
sub
stos
js
ds
rclb
mov
jmp
add
adc
scas
ret
cld
inc
add
add
jnp
test
lods
mov
pop
push
mov
icebp
ret
stos
mov
add
cmp
mov
icebp
mov
xchg
clc
lcall
cmp
xchg
ljmp
jmp
inc
or
cld
mov
sub
push
mov
pop
add
je
stos
sub
inc
add
incl
jno
xor
add
mov
sub
pusha
enter
mov
loope
sbb
add
insl
or
pop
mov
adc
jne
xchg
adc
xlat
insl
sub
daa
jae
adc
xchg
cmp
loopne
cmpb
push
test
sti
cmp
and
cld
decl
sbb
inc
lock
cld
dec
ljmp
insl
std
push
insl
jae
pop
clc
pop
call
jmp
adc
sbb
je
pop
clc
repz
sub
or
jmp
add
test
jae
adc
push
cmp
and
inc
adc
rolb
cs
hlt
loope
sub
out
adc
pop
lock
pop
add
or
add
jg
loope
inc
call
fstps
add
mov
inc
cltd
sbb
call
push
fcompl
sub
inc
in
and
mov
rcrb
fwait
add
add
in
pop
lcall
pop
mov
in
add
push
xor
or
jnp
push
xor
divb
clc
adc
jp
int3
jno
lods
inc
mov
push
imul
inc
jmp
and
and
cmpsb
xor
test
scas
adc
xor
mov
cld
jge
xor
xchg
fwait
cmp
fldt
push
scas
dec
ss
xchg
sub
add
addb
add
jmp
cmp
adc
ret
push
leave
and
jl
cmpsb
cmp
cmp
or
das
add
hlt
add
call
rcrb
scas
mov
movb
push
shll
call
pushl
xor
out
lods
shll
xor
xchg
out
add
xor
push
lods
mov
inc
test
lods
je
mov
xor
cmp
mov
jne
cs
push
inc
add
inc
inc
add
pop
call
sbb
jae
aas
out
adc
or
jne
mov
rolb
add
jbe
add
pop
imul
add
vorps
in
inc
push
add
jne
mov
test
pop
pop
leave
mov
out
mov
jmp
add
inc
inc
inc
cmp
cmp
push
mov
ds
je
xchg
dec
leave
sti
movsl
add
mov
sbb
or
mov
xor
or
xor
out
pop
insb
xchg
les
sbb
cmpl
dec
lret
je
add
cmp
add
cmp
das
or
or
sbbb
clc
cmp
ret
inc
jge
add
cmp
div
xor
add
add
ss
in
jg
push
add
add
addl
mov
cltd
aas
ret
stos
stos
cs
call
and
add
push
xor
jns
clc
adc
mov
xorb
xor
jae
cmp
inc
mov
dec
push
inc
mov
ret
mov
call
js
clc
xchg
loope
jmp
ss
xor
push
xchg
xchg
dec
add
mov
add
loope
inc
data16
mov
imul
hlt
mov
idiv
inc
lea
xor
std
lcall
loop
push
push
adc
xchg
adc
test
inc
add
dec
add
ret
mov
adc
aaa
insb
gs
stc
orb
shlb
stc
xorb
add
cmp
sub
add
pop
clc
mov
je
cmpsl
dec
insb
add
stos
dec
xchg
mov
sub
test
mov
push
lea
push
pushl
out
psubsb
fcoml
aas
loopne
xchg
aas
in
push
scas
mov
jne
test
jne
and
fisttpl
push
add
add
daa
inc
int3
and
add
or
push
loopne
add
fldl
inc
mov
stos
call
movsl
addb
cld
decl
hlt
cmp
test
xor
ret
mov
mov
je
sbb
dec
lret
shl
data16
add
sbb
test
stc
xor
add
mov
adc
lcall
mulb
cs
out
mov
fistps
test
jge
inc
add
inc
idiv
mov
xlat
add
and
fwait
sub
jns
sbb
inc
cmp
cmp
cmp
add
sub
call
or
dec
lods
inc
cmp
mov
add
ds
call
ds
add
cwtl
fsubl
mov
imul
pop
xchg
cmpsl
std
test
movsb
cmc
cs
cmpsb
jae
lret
inc
test
iret
sub
test
hlt
rol
cmpsl
lds
lea
mov
shlb
lock
movsl
pop
aaa
ret
jmp
add
std
push
insb
dec
add
jmp
iret
cmp
mov
and
call
sub
cmpb
jmp
push
mov
std
dec
aas
add
push
mov
ret
add
repnz
testb
lods
dec
pop
pop
test
je
movsb
dec
push
xor
fwait
cmc
into
xchg
cmpb
push
test
mov
out
repz
test
xor
mov
and
call
daa
inc
clc
push
daa
inc
cld
inc
or
jmp
call
subl
push
aad
call
inc
hlt
jg
lea
daa
inc
hlt
shlb
clc
shlb
cld
rolb
add
movsl
adc
mov
pop
std
subl
add
out
pop
std
aad
fs
loopne
std
out
gs
cmp
movsl
mov
scas
out
arpl
add
xchg
add
cmp
ret
xchg
movsl
jae
sbb
ret
xlat
xlat
add
in
lds
lock
add
les
cmpsb
je
dec
xor
push
sahf
stos
ss
rorb
mov
mov
movsb
mov
movsl
imul
or
or
stos
dec
push
scas
ret
lock
jg
push
les
sub
jle
aad
mov
lahf
ret
scas
aas
popf
add
add
jne
cwtl
out
mov
inc
movsl
imull
cwtl
jle
out
mov
stos
cld
outsb
xor
mov
jmp
sub
add
test
cs
call
stos
cmp
fsubr
mov
jl
js
pop
aas
and
cwtl
jmp
push
mov
in
out
std
jnp
mov
cli
inc
cli
mov
loope
jne
aad
mov
pop
xchg
jge
call
cmp
cmp
cli
pushl
dec
xchg
dec
sahf
push
clc
out
repz
push
push
xchg
push
fs
mov
pop
xchg
dec
popw
clc
out
repz
je
mov
cli
sub
jecxz
pop
jmp
adc
test
jl
cmp
push
add
mov
mov
dec
pushl
test
xlat
pop
cmp
andl
je
xchg
mov
mov
dec
push
pop
jae
js
pop
call
popl
inc
pop
jae
mov
jns
add
cmp
push
push
andl
je
xchg
mov
mov
aad
in
push
cli
xchg
std
jne
push
dec
pop
addr16
lds
push
dec
push
pop
jae
daa
pop
or
add
jnp
neg
lds
cmp
mov
call
into
inc
mov
dec
lretw
jns
adc
and
mov
std
sahf
imul
push
xchg
aaa
mov
pop
or
gs
lods
ret
sub
adc
jle
pusha
dec
sbb
push
ds
cli
incb
lods
xchg
xor
movsb
xchg
stos
in
fisubs
incb
in
idiv
add
sahf
add
mov
sub
inc
js
push
sbb
or
push
fistps
pusha
push
int3
sub
lahf
push
adc
aad
inc
test
mov
cmp
sub
adc
sbb
sbbb
pop
add
add
inc
jmp
add
loope
jecxz
insl
mov
test
sub
call
inc
sub
mov
es
cmp
inc
fwait
daa
int3
stos
jnp
lcall
or
aam
popf
and
push
add
sub
sub
je
mov
xchg
and
sub
dec
inc
add
popf
je
fsts
or
xor
ljmp
dec
mov
push
lcall
cmp
popf
mov
es
cli
hlt
inc
test
cwtd
popf
aam
popf
je
loop
pop
dec
fxch
roll
add
insb
test
clc
cli
add
pop
testb
sub
decl
inc
inc
add
testb
dec
pop
std
incl
lret
popf
movsb
inc
add
inc
inc
add
mov
sub
add
movsl
outsl
jge
or
clc
mov
data16
add
mov
nop
jle
clc
lahf
testl
cmp
ljmp
inc
add
inc
jns
jne
imul
das
lods
dec
lea
lods
inc
lahf
je
das
popa
pop
add
int3
shll
enter
sub
pop
push
popf
mov
sahf
addr16
bound
sbb
call
cmp
mov
mov
enter
push
mov
add
dec
push
pop
or
cmovs
adc
inc
inc
cmp
or
pushf
test
cld
pop
xchg
or
repnz
sahf
incb
subb
in
pushl
mov
es
lahf
movsl
or
mov
rcrb
inc
jmp
popf
add
pushf
sbb
cmp
fwait
pop
sarl
pushf
mov
jg
lahf
pusha
add
stos
hlt
cmp
popf
mov
adc
lds
or
lcall
ss
popf
pop
inc
test
cmp
ljmp
xor
add
lods
lcall
es
push
out
cltd
incb
aaa
decl
rorb
addr16
push
xchg
push
ret
cmp
cmp
cs
xchg
inc
fwait
jo
pushf
mov
push
call
jl
sub
movsl
jnp
push
add
call
add
flds
cltd
or
lds
xor
test
mov
cltd
xor
sub
daa
or
and
cltd
xchg
inc
cwtl
imul
enter
xlat
out
inc
and
jne
data16
xlat
jnp
rorb
decl
push
call
call
inc
repnz
mov
call
mov
call
aaa
pop
int
std
jne
jl
or
lcall
fdivr
push
mov
jne
or
push
pop
incl
in
inc
push
add
call
xor
adc
jne
or
insb
insb
pop
cmp
enter
push
mov
xchg
push
repnz
je
jg
push
and
ja
popa
push
push
pop
xchg
cs
inc
cmp
fstps
add
stc
push
push
adc
es
ret
and
out
lcall
and
clc
push
lret
cltd
je
scas
sbb
mov
cltd
je
cmp
sub
stos
imul
stos
std
lock
cltd
sti
dec
addr16
jle
movsl
lcall
xchg
adc
gs
adc
sbb
fwait
push
cmp
push
jl
xchg
out
jmp
or
mov
xchg
mov
shr
add
push
adc
sub
cmp
mov
ret
push
mov
lcall
jmp
add
xor
push
ficomps
cmpsl
xchg
sbb
add
xchg
lds
aaa
or
cld
scas
cs
fwait
sub
add
pop
mov
push
lahf
add
in
jmp
jg
add
xor
xchg
je
pop
add
rcr
sub
cmp
clc
push
dec
cmp
ss
cld
cs
pushf
into
sub
push
ds
jmp
int
je
push
mov
cmp
add
das
xchg
cld
pmulhw
das
push
push
popa
mov
jmp
or
imul
clc
movsl
inc
inc
pusha
ja
hlt
iret
int3
jne
inc
insb
out
xor
mov
dec
pushl
push
pop
lahf
js
inc
jl
jae
js
push
ljmp
jae
jg
in
incl
lds
sub
js
or
sbb
add
mov
add
push
call
jne
imul
mov
insl
std
jne
fs
dec
cmp
mov
xchg
aam
jmp
xchg
je
mov
int3
roll
mov
adc
xor
lcall
ret
out
push
inc
clc
cmpsb
xor
add
ljmp
jns
sub
cmp
addr16
fs
add
scas
sbb
push
das
xlat
push
push
into
xchg
je
aas
jle
neg
or
gs
push
jl
add
xchg
ss
jbe
inc
mov
push
push
mov
cmp
and
into
xchg
add
int3
cmpb
add
adc
lods
adc
aam
outsb
xchg
outsl
inc
gs
xchg
in
adcl
sbb
jbe
aas
sub
xchg
lods
or
cs
pop
xchg
lods
xchg
push
adc
test
xor
xchg
das
sarl
xchg
mov
xchg
mov
xchg
testl
fldl
add
xchg
xchg
jmp
inc
jl
add
or
sbb
out
fwait
nop
ss
xchg
enter
push
arpl
push
lods
or
shr
ljmp
jae
je
xchg
imul
mov
call
adc
je
xchg
insl
outsb
int3
xchg
je
les
or
call
rolb
addr16
push
mov
cmp
ds
mov
add
xchg
mov
inc
call
call
cmp
sub
rolb
shlb
fiadds
insl
std
or
add
mov
data16
roll
movl
call
decl
out
cs
std
cld
cmpl
repnz
add
cld
movl
push
mov
add
jecxz
in
xchg
push
loop
cli
std
imul
js
lcall
cmc
daa
inc
loopne
cmp
cmp
outsb
aas
sub
cmpsl
pop
rorb
call
inc
out
and
in
cmp
adc
dec
inc
cmp
sbb
mov
sti
out
cmp
mov
lock
ret
jb
incb
imul
push
int3
das
sbb
cmp
xlat
fildl
popa
dec
inc
cmp
sbb
and
add
fs
add
cmp
pop
push
push
xchg
inc
pop
sahf
imul
aas
jmp
add
lret
jns
adc
popa
xchg
std
jl
mov
inc
cmp
mov
fstp
jmp
daa
add
mov
xchg
xchg
mov
lds
adc
inc
cmp
mov
jmp
add
cli
das
xchg
push
xchg
pushf
mov
inc
push
dec
cld
inc
mov
int3
rolb
lahf
sahf
xchg
movsl
clc
inc
aaa
imul
sbb
cwtl
xchg
xor
push
nop
mov
cmpsl
lahf
mov
mov
je
push
add
adc
es
out
insb
out
inc
pushf
out
outsb
fiadds
out
dec
dec
es
out
dec
mov
cs
scas
inc
mov
sbb
cmpsl
out
cmp
mov
jg
add
lcall
cmc
mov
jo
outsb
enter
inc
add
inc
mov
test
sbb
jmp
add
decl
ret
jb
shrb
pop
pop
jno
rol
dec
push
mov
sar
jne
push
jns
outsl
out
aad
std
jmp
push
push
jg
mov
int3
add
daa
out
ljmp
jno
or
push
lcall
mov
cmpb
idivb
push
daa
insb
jl
add
or
xor
push
call
sub
jb
loopne
cmp
adc
add
push
or
pop
or
idivb
dec
push
out
fimuls
fsubrp
xchg
lods
adc
mov
dec
lcall
flds
add
lahf
cmpb
push
xor
or
lcall
ret
add
inc
add
mov
ds
inc
clc
xchg
xor
add
pop
and
jle
pop
inc
xchg
mov
cmp
inc
inc
cmp
mov
out
xchg
lea
xorb
add
sub
mov
push
fs
fiadds
sub
sbb
add
outsb
sbb
add
hlt
ds
fwait
cltd
pop
fimuls
sbb
pushf
in
daa
mov
shlb
loopne
inc
cmp
rcrl
call
inc
clc
cmp
mov
adc
add
mov
adc
push
gs
pop
addr16
mov
jno
dec
ds
cld
out
sbb
cli
rdmsr
push
mov
xchg
adc
aaa
mov
and
je
mov
je
mov
adc
rcll
call
push
inc
lock
mov
mov
mov
push
inc
cmpsb
inc
clc
out
or
mov
and
push
add
jmp
jge
rolb
mov
jl
loope
jne
insb
loopne
adc
or
lods
lahf
std
jne
insb
add
jge
push
test
out
data16
dec
aaa
repz
call
dec
popf
push
jmp
xchg
push
call
icebp
pop
call
fld
add
sbb
jp
add
aaa
pushl
data16
xchg
jnp
inc
add
dec
addr16
sbb
cmp
push
or
or
sbb
cld
push
lods
cli
out
inc
mov
add
push
add
xor
sbb
cmp
dec
fs
lcall
xchg
mov
push
je
cli
adc
pushl
or
sub
lcall
loope
add
mov
out
add
add
push
adc
addr16
inc
cmp
jnp
popa
add
mov
ds
add
jmp
push
jl
outsl
inc
dec
mov
repz
imul
pop
jge
mov
sbb
add
dec
dec
adc
cwtl
xor
testb
sti
fsubp
popf
mov
mov
fwait
xchg
push
mov
adc
mov
add
cmp
add
in
jl
mov
aas
jmp
enter
add
adc
xchg
pushl
roll
add
jnp
clc
jmp
stc
mov
jns
dec
adc
add
aam
aad
jmp
mov
clc
jmp
add
or
push
loopne
mov
mov
sbb
dec
in
lahf
rolb
or
nop
test
push
adc
add
mov
jl
cmpl
roll
aaa
ret
jmp
jecxz
repnz
xchg
testl
adc
add
jne
or
out
sti
push
in
imul
and
in
imul
add
shl
dec
push
js
push
ljmp
inc
clc
cltd
in
imul
jns
cld
maskmovq
testl
out
sahf
fcmovnb
jae
das
div
call
push
testl
or
jns
or
imul
cmp
ret
jmp
mov
and
cltd
sub
js
stos
ljmp
sar
leave
fwait
in
sbb
in
dec
mov
dec
es
inc
and
and
cs
xchg
adc
or
out
addr16
mov
mov
fdecstp
ljmp
xchg
xor
xor
lods
inc
sub
add
pop
sub
jnp
add
jmp
lcall
shr
push
call
add
lock
add
test
mov
mov
xchg
daa
cmpsb
xchg
in
cmpb
call
xchg
aas
jmp
xchg
test
adc
test
js
inc
cld
test
jge
inc
adc
test
inc
add
cwtl
jnp
xlat
test
aad
fwait
xchg
cmc
insb
pop
mov
cwtl
call
add
cmp
or
call
call
mov
das
jmp
inc
push
cmp
dec
clc
cmp
inc
cld
sub
mov
sub
cmp
jg
push
or
enter
xchg
das
xchg
and
in
sub
or
sub
aam
jb
dec
scas
cmp
jmp
jns
dec
ret
cmp
push
add
or
add
stos
mov
xlat
add
std
jne
jp
fcoms
addr16
jne
addr16
jne
fs
and
jne
fs
cmpsl
jge
jne
test
jo
cmpsl
jge
jne
fs
inc
mov
out
dec
jge
pop
inc
inc
rorb
mov
mov
jmp
out
aam
std
mov
data16
daa
jge
add
pop
mov
idivl
rolb
and
insl
inc
clc
cwtl
xor
and
lcall
lret
add
mov
or
xchg
add
mov
ret
pop
loope
add
fiaddl
inc
popa
jns
cmp
fadds
subb
push
xchg
jne
inc
cmp
fwait
jne
xchg
add
stc
mov
test
js
sub
pop
clc
add
inc
xlat
push
and
lret
dec
mov
push
test
adc
test
addl
dec
xchg
sub
or
addb
subl
inc
cmp
adc
push
jg
push
dec
subl
stc
xor
loop
aas
jnp
add
es
add
mov
call
add
les
pop
aam
jp
jnp
sbbb
rolb
bnd
add
jmp
cmp
push
mov
jnp
idivb
push
push
fidivrs
cmp
leave
cmp
sbb
inc
sub
cmp
icebp
gs
mov
mov
movl
mov
push
mov
push
in
data16
sar
jg
ljmp
jmp
push
pop
addb
dec
mov
testl
aas
add
mov
std
jne
jmp
push
lahf
orl
mov
fs
call
and
cmpsl
cmp
decl
js
push
test
dec
lcall
cmp
and
add
imul
add
mov
clc
std
lcall
push
std
decl
subb
add
imul
mov
jg
mov
push
idivb
sbb
xchg
add
stos
jbe
mov
pop
testb
jg
jns
incl
out
jmp
jg
lret
mov
cmp
outsl
mov
stos
and
negb
jg
inc
jg
dec
push
out
jg
sbb
jge
or
mov
shll
mov
js
jge
testb
push
sub
cmpb
adc
js
jge
divb
push
cmc
mov
jne
jg
repz
fnstsw
mov
ja
jge
xchg
jl
jg
push
xor
dec
jge
mov
push
out
sub
aaa
jge
push
pushf
int3
test
mov
ja
jge
addb
enter
mov
pop
jle
aam
jge
loope
inc
cld
dec
data16
push
data16
push
push
int3
ss
testl
hlt
sti
adc
sbb
jmp
orl
addr16
or
inc
jmp
pop
int
inc
inc
jae
lea
pop
mov
mov
divl
pop
ss
inc
mov
mov
jecxz
add
decb
sbb
or
xchg
inc
in
addr16
inc
mov
call
or
mov
push
push
mov
mov
lods
dec
inc
cli
std
dec
dec
jle
clc
nop
js
call
pop
roll
lods
xchg
addl
subb
inc
std
jne
out
dec
ja
xchg
insb
cmova
add
xor
xchg
jae
call
dec
cmova
imul
movsb
jno
fstl
adc
inc
cmp
testb
adc
notb
add
jmp
pop
faddp
jl
aad
testl
pop
inc
add
mov
and
push
push
jg
push
or
pop
xchg
movsb
lret
out
sti
mov
push
add
cmp
cmp
add
in
add
imul
dec
popa
xchg
cld
mov
or
mov
lret
pop
dec
mov
pop
add
add
in
sub
or
cmp
jmp
push
ret
out
fldl
mov
add
or
out
out
cmp
inc
stc
call
sub
lcall
cmpsb
jge
jnp
or
cmp
jmp
cmc
xchg
or
mov
fcomip
cmp
add
inc
test
in
ret
idiv
inc
mov
repz
or
inc
call
sub
sbb
jmp
mov
jmp
inc
test
jmp
xor
mov
dec
jp
icebp
push
hlt
out
ss
addr16
jns
xchg
loopne
inc
jmp
adc
add
das
inc
push
insb
leave
js
jmp
adc
mov
js
fimuls
das
sub
ficoms
mov
dec
std
jne
cmc
jae
pmullw
popa
cld
or
inc
je
inc
mov
push
pop
sub
jne
cli
adc
cmp
or
addr16
call
cli
std
mov
push
std
jne
gs
imul
xlat
std
adc
stos
ret
jb
enter
push
cli
jae
cmp
inc
incl
aas
cli
je
jo
incl
cli
std
call
stc
jae
cmp
inc
pop
inc
js
jne
test
mov
je
scas
push
fisttpll
sub
cmp
popa
sub
sub
test
sub
repz
fsubrl
neg
push
out
aad
imul
imul
add
xor
sar
test
enter
push
ret
ret
test
jbe
xchg
repz
incl
inc
cmp
std
sbb
imul
test
add
inc
std
ja
add
add
add
ljmp
andl
xchg
popf
shll
in
nop
js
je
xor
jmp
push
mov
call
ret
fildl
loope
lods
js
shlb
lods
jnp
jo
jne
aad
loopne
js
xchg
jne
imul
and
pop
mov
adc
fsubs
call
cmc
push
mov
xor
jne
pushf
add
into
into
sub
je
out
jb
pusha
add
out
adc
lods
fistpl
out
daa
inc
jmp
mov
incb
cmp
je
xchg
subl
add
je
movsl
add
jo
pusha
divb
inc
out
rcrb
jmp
jbe,pn
faddl
xor
aaa
in
xchg
adc
in
jae
fs
pushl
std
jne
call
std
mov
in
incl
mov
jmp
mov
not
ljmp
ljmp
mov
push
call
xchg
std
jne
out
inc
xchg
std
mov
loop
incl
mov
incl
mov
testl
out
incb
push
ljmp
cmp
stos
inc
xchg
add
mov
xchg
leave
mov
jmp
bound
and
data16
pop
dec
imul
inc
insb
incb
hlt
inc
ds
je
sbb
mov
notl
or
push
sub
and
inc
pop
cmp
jmp
pushf
ja
cmp
incb
insb
jno
test
je
jl
jmp
jbe
add
dec
jno
pop
mov
and
adc
js
call
inc
mov
pop
xchg
sbb
add
pop
sub
cmp
or
jae
adc
or
add
pop
test
pop
cmp
shrb
mov
sarl
out
jb,pn
adc
adc
jne
push
test
jo
add
shll
repnz
icebp
inc
push
roll
dec
popa
xchg
je
or
jnp
inc
je
add
out
ss
cs
insl
pushf
jb,pn
icebp
adc
inc
push
or
fwait
inc
push
or
lret
mov
in
or
push
ficomps
je
add
rcr
addl
je
loop
dec
mov
push
rcr
push
call
jge
inc
xchg
mov
sti
xchg
gs
hlt
xchg
pop
stos
das
push
mov
mov
jmp
mov
imul
add
cld
decl
loope
out
cmpsl
cld
incl
inc
repz
mov
mov
cld
decl
push
ja
jmp
repnz
mov
flds
dec
adc
push
call
pop
mov
mov
call
int3
cld
push
and
lock
stos
aas
add
xchg
sbb
add
rolb
mov
in
inc
fcomps
loop
rolb
mov
mov
neg
into
push
pop
incb
dec
jno
xchg
mov
mov
adc
xor
add
xchg
pop
out
movsb
jno
les
push
add
fwait
in
loope
inc
dec
pop
aam
inc
jo
jns
sbb
push
ret
jle
fisttpll
cmpsb
shll
stos
ret
lcall
add
inc
js
sar
add
jo
nop
and
lock
cld
jno
mov
fsubs
in
js
cmp
or
jno
and
idivl
pop
jno
outsb
orb
hlt
lock
test
call
mov
test
shlb
outsb
int
int
pop
movb
outsb
lahf
inc
cmp
adc
adc
popf
jle
insb
cmp
cld
idivb
pop
sub
cmp
repnz
inc
cmp
cmp
add
cmp
movsb
dec
outsb
push
jmp
cmp
call
cmp
xor
xor
cltd
sub
mull
cmpsl
imul
loop
lock
mov
cmp
je
add
sub
mov
repz
out
dec
cmp
pop
dec
into
ja
mov
es
adc
adc
loopne
negb
jb
inc
mov
cmc
std
decl
push
sub
fnsave
push
jmp
in
outsl
push
dec
fs
loope
pushl
add
push
call
or
mull
fisttpll
jmp
add
mov
cmc
std
call
push
call
leave
ja
mull
push
inc
push
fnsave
ljmp
out
pop
mov
jle
lock
fildl
negb
popa
mov
fiaddl
je
adcb
out
insl
je
rcl
mov
outsb
mov
adc
loope
insl
cmpsb
hlt
pop
negb
adc
mov
adc
jle
adc
lds
dec
mulb
insb
mov
dec
insb
push
aam
call
inc
xchg
arpl
ds
insb
je
push
fnstcw
cs
je
lcall
add
cmc
lock
mov
insl
pop
mov
jne
push
loope
imul
outsl
jge
out
adc
fildll
mov
jb
insl
mov
xchg
pop
push
pop
clc
mov
dec
jne
push
xor
int
adc
rolb
mov
ja
std
divb
jle
cmp
and
add
bound
outsl
add
incl
inc
hlt
loopne
cld
mov
mov
inc
insl
mov
pop
sar
imul
xchg
lar
ret
adc
add
imul
hlt
pop
push
jmp
lcall
aas
add
out
jbe
push
gs
mov
hlt
notb
loope
call
rol
incl
jmp
cmpsl
loop
loop
sti
imulb
xlat
jp
mov
cld
pushl
into
push
subb
ret
sti
add
jae
out
outsb
push
call
sbb
add
xlat
testb
std
inc
push
lock
pop
loopne
imul
cmp
test
call
outsl
cli
call
add
mov
into
sub
cld
jne
iret
inc
das
aad
mov
xor
aad
push
rol
mov
test
std
cmp
addr16
movsb
aas
add
push
scas
xlat
inc
cmp
lods
jno
sbb
mov
add
xor
decl
int
testb
imul
jle
test
out
imul
jno
add
mov
jno
into
out
pop
shll
jg
scas
mov
jb
cmpsb
mov
std
icebp
xchg
add
int3
shll
push
lock
xchg
adc
jg
outsb
imul
pop
imul
cltd
and
inc
jns
fs
addr16
mov
das
rclb
jo
call
imul
jns
imul
lea
jge
out
push
fdivrl
callw
andl
dec
leave
rolb
push
mov
adc
insl
addr16
imul
push
pop
adc
adc
push
aaa
addr16
push
jnp
pop
add
imulb
stos
jecxz
shll
push
dec
pop
ret
add
data16
je
outsb
mov
in
xadd
iret
xchg
xchg
lcallw
fadds
jmp
dec
pop
imul
lods
rcrl
data16
aam
pop
mov
data16
aam
gs
sub
ds
std
out
add
data16
cs
mulb
and
test
or
push
adc
std
mov
lock
cmp
fnsave
call
scas
loop
pop
fucom
test
std
ljmp
ret
js
out
std
mov
aam
ljmp
faddl
mov
fdivl
enter
shlb
rorl
dec
mov
arpl
cli
push
inc
dec
addl
std
jne
dec
fwait
dec
roll
pushl
sub
jmp
fnsave
cmp
inc
clc
push
fiaddl
cmp
out
arpl
pop
jecxz
dec
pop
pop
xchg
or
gs
push
mov
add
cmp
mov
lods
jno
xor
jl
jns
add
inc
out
js
cmpb
or
xchg
jmp
mov
scas
mov
imul
inc
add
cli
out
cmp
and
inc
mov
data16
addr16
inc
dec
data16
or
lock
in
loopne
cs
scas
inc
add
add
push
jg
push
das
in
lock
loopne
mov
ficoml
fstpt
mov
jno
call
ret
push
inc
push
sbb
fisubs
cmpsb
pop
jecxz
ret
into
mov
out
ds
std
fistpll
arpl
scas
bound
push
jecxz
ret
mov
sahf
cli
out
popaw
push
add
pop
cmpsb
int
popa
enter
push
jb
jle
cmc
test
imul
inc
pop
dec
sbb
mov
mov
daa
sub
mov
cmp
cmp
mov
pop
mov
sbb
fsts
outsb
out
fldenv
push
add
adc
inc
imul
xor
std
decl
lock
mov
pop
push
cli
jmp
fdivr
pop
sahf
roll
mov
shll
sti
push
mov
imul
jae
cld
fwait
pop
js
popa
cld
mov
nop
sbb
mov
call
or
xor
mov
cld
out
mov
loopne
std
jne
aam
arpl
out
push
jmp
pop
enter
xlat
stc
mov
arpl
xchg
and
aaa
lods
popf
decb
arpl
mov
jbe
ret
pop
adcb
or
outsl
xorb
jmp
test
inc
call
cmp
mov
inc
dec
js
popa
je
inc
rcr
add
inc
popa
je
lahf
xlat
pop
and
decl
mov
jmp
movsl
pop
push
popa
mov
aam
cli
xchg
add
push
cmp
js
popa
je
add
or
cmpsl
add
add
cmp
mov
imul
bound
push
sbb
sbb
pop
dec
sub
shr
add
jmp
inc
ficompl
add
add
mov
out
cmp
adc
call
add
add
pusha
lea
mov
mov
add
xlat
inc
inc
sub
add
add
lock
adc
daa
add
adc
std
mov
jmp
inc
pop
push
xorb
bound
mov
add
or
jmp
mov
cmpl
mov
mov
lret
inc
jmp
jnp
out
and
mov
out
aas
and
push
popl
cmp
add
add
out
cltd
pop
jb
pop
pop
mov
add
aas
fisttpll
sub
std
mov
cltd
imul
testb
pop
mov
push
sbb
out
cmpsb
add
mov
mov
mov
or
jne
aas
rcll
data16
test
inc
push
or
xor
push
pop
inc
jle
push
cmp
leave
loop
add
rolb
xor
inc
notl
ret
filds
add
adc
add
sti
outsb
inc
cld
xor
js
cmp
mov
inc
outsl
sub
aad
inc
shll
out
and
shlb
push
xor
add
jns
idiv
or
pop
je
jbe
xchg
pop
incb
insb
inc
inc
addr16
in
push
sub
pop
sbb
add
dec
clc
pop
je
xchg
or
shrb
add
lods
xor
pop
mov
push
dec
shll
popf
fstpt
jmp
pop
out
aad
imul
adc
push
shr
inc
or
jmp
clc
lcall
ss
dec
fdivs
push
addb
jmp
mov
add
jecxz
add
sarl
aas
or
fdivrs
push
sub
add
lea
pop
xchg
pop
leave
jns
rorl
int
stc
rorl
mov
fadd
hlt
test
incl
lret
xor
push
or
pop
pop
jmp
jne
mov
dec
shl
mov
jge
loop
inc
jge
neg
add
aas
incb
pusha
pop
je
adc
incb
add
call
adc
es
rclb
call
loope
in
pop
je
rclb
cmp
fldl
jo
pop
add
mov
jp
add
jmp
std
jne
out
cmp
mov
ljmp
mov
xchg
cmp
scas
or
jne
call
call
or
mov
decl
or
jne
call
call
orl
add
les
rcl
cmp
pusha
dec
jb
js
call
ljmp
mov
pop
sbb
ljmp
xor
ret
pop
je
sub
or
push
dec
inc
je
xchg
rorb
adc
dec
mov
rorb
out
pop
jmp
pop
sbbl
mov
xchg
aad
mov
sbb
ret
jmp
std
ds
lea
jle
decw
ret
mov
pop
mov
decb
jns
or
add
repnz
in
shr
out
xor
imul
add
test
push
outsb
push
push
push
je
jne
push
shr
xchg
aas
sub
add
add
mov
jmp
pop
inc
fs
pop
xor
repz
or
sahf
push
popa
cmp
pop
adc
pop
xor
mov
add
push
es
mulb
add
add
outsb
imul
into
push
jmp
push
inc
cmp
cmp
jae
adc
lea
sar
fnstsw
jmp
lea
ljmp
addb
push
add
adcl
mov
dec
cmpsb
cmc
push
idiv
add
inc
ss
inc
jmp
cs
add
cmp
mov
icebp
push
or
xor
cmp
subl
es
add
ficomps
incb
or
ljmp
cltd
test
aaa
dec
pop
mov
movsb
cld
incl
xchg
pop
dec
inc
decb
xchg
out
fildl
add
xchg
mov
jmp
mov
movsb
mov
decl
mov
andl
jo
pop
xchg
incb
mov
std
sbb
add
add
jns
jmp
xchg
std
mov
mov
decl
das
cmp
or
inc
fistpl
dec
cmpl
add
add
push
xchg
push
decb
addr16
inc
add
stc
gs
cmp
cmp
ds
jmp
pushw
xor
push
popa
or
add
aad
dec
rol
or
cmp
aas
or
xchg
push
decb
mov
xchg
scas
adc
or
in
iret
add
add
push
pop
push
mov
push
mov
push
lcall
push
out
daa
mov
andb
aad
xchg
sbb
push
outsl
add
mov
push
notl
nop
ljmp
push
filds
test
lret
jns
xchg
pop
ds
mov
fisubs
lds
push
imul
mov
ret
add
add
rclb
push
push
mov
lds
call
cmp
gs
adc
mov
dec
aaa
push
scas
dec
std
testb
sbb
fiadds
push
fs
inc
iret
mov
stos
into
test
push
arpl
pop
adc
mov
add
add
and
xor
add
in
data16
shll
bound
cmp
add
or
add
mov
mov
xchg
fisttpl
call
jae
lret
sbb
decl
lds
jmp
stos
add
jb
stos
packuswb
cmp
lods
out
sbb
decl
adc
push
add
std
mov
pushf
push
lcall
repnz
fstpt
cli
inc
lods
out
cmpsl
std
ljmp
data16
incb
std
decl
cmp
iret
or
fisttpl
data16
lcall
jmp
fs
lcall
inc
dec
imulb
add
add
shll
jecxz
js
push
add
stos
mov
repz
push
je
das
into
push
cmp
or
adc
jmp
mov
mov
mul
mov
dec
in
or
mov
push
cmp
mov
bnd
or
add
inc
or
ret
adc
inc
flds
mov
les
call
dec
push
push
xlat
push
push
push
fwait
push
push
xlat
push
inc
push
jnp
push
push
mov
aaa
cmp
mov
data16
aad
inc
fisttpll
into
push
and
push
mov
mull
xchg
dec
sub
push
out
movsl
push
mov
out
fidivrs
scas
outsl
inc
xor
subl
jbe
add
add
outsb
mov
dec
aad
cmpb
sar
outsb
clc
addb
inc
jmp
cmc
test
out
xor
add
push
adcl
hlt
in
inc
jmp
stos
dec
jmp
cmp
add
dec
push
cmp
dec
je
push
dec
or
cmp
add
leave
je
mov
imul
out
test
sbb
addr16
imul
inc
mov
mov
hlt
cmp
pushl
mov
icebp
inc
inc
decb
pusha
sub
fnsave
out
push
shrb
decb
adc
sbb
lea
add
aaa
out
call
pop
ret
xchg
scas
jae
dec
cmc
add
jae
cmp
call
mov
cld
call
int
pop
fld
push
mov
add
mov
std
push
js
loope
sarb
cmpl
mov
push
add
or
add
cmc
ret
xor
sub
cmp
push
adc
and
ret
movsb
push
mov
push
incb
incw
add
jno
push
out
cltd
add
inc
xchg
mov
in
lret
daa
pop
dec
dec
push
insb
cmp
push
cs
lea
push
add
stc
sub
add
adc
mov
popf
mov
dec
add
add
stc
test
mov
inc
arpl
dec
test
add
xorb
insl
cltd
add
repnz
sbb
jmp
jp
dec
dec
xor
xchg
call
mov
dec
pop
cmp
fimull
call
and
add
cli
not
jg
jne
arpl
and
call
clc
and
sub
inc
push
lods
call
les
pop
push
ljmp
mov
std
cmpsb
add
jge
test
fisttpll
add
cmp
out
add
test
cli
dec
data16
or
mov
push
idivl
scas
sbb
push
sbb
xchg
inc
out
add
adcl
adc
je
loop
add
cmp
xor
jg
divl
inc
xor
add
ds
fiadds
jl
xlat
je
out
xor
add
imul
leave
mov
mov
in
loopne
jo
mov
ljmp
jge
sub
mov
mov
inc
cld
mov
inc
testb
inc
aad
jmp
movb
add
push
ret
inc
lock
dec
inc
out
push
fldl
push
add
inc
ljmp
xchg
push
add
push
mov
sar
mov
cmpb
xor
cmpl
push
add
inc
aad
mov
popl
je
fisubrs
jb
outsl
aad
jb
inc
fnstcw
call
inc
xchg
and
jg
xor
fcmovb
pop
xchg
mov
stc
bound
sub
lahf
xor
xchg
add
gs
int
cmp
int3
repnz
adc
mov
lcall
add
push
push
aad
and
inc
dec
cmovns
add
pop
std
call
int3
dec
dec
xchg
push
out
cmp
adc
mov
fsubs
bound
add
xchg
jne
les
or
clc
call
stos
repz
cpuid
les
ja
cmp
push
and
cmp
les
mov
push
int3
in
dec
add
pusha
inc
pop
cmp
loop
lods
std
pmaxub
add
inc
jge
call
clc
dec
dec
push
xor
add
jae
add
jmp
xor
pop
mov
cmp
cmp
pop
pop
sub
inc
jb
bound
jmp
add
jmp
cmp
push
push
sbb
add
xchg
sti
jmp
jns
dec
sarl
fiaddl
mov
jmp
dec
dec
sub
popf
cmp
je
xchg
popf
xor
aaa
mov
aaa
imul
test
jmp
and
rolb
add
add
cld
imul
and
call
fcmovnb
or
lcall
add
pop
sbb
add
movl
pop
loopne
inc
call
mov
add
pop
xchg
add
add
popf
mov
incl
push
add
jne
movsb
sub
push
add
sarb
ljmp
dec
repz
cmpsl
sub
aas
inc
in
pop
add
cmp
inc
jl
add
cmp
je
ss
in
pop
sbb
stc
or
out
test
mov
push
add
in
in
sbb
cmp
sbb
pop
add
mov
inc
sti
incb
or
inc
je
scas
sub
je
mov
inc
xor
inc
pushw
push
lods
and
test
push
dec
inc
add
std
arpl
arpl
cmp
adc
add
jns
test
inc
sub
shr
mov
test
xor
hlt
or
inc
push
inc
out
jnp
js
inc
push
and
or
les
incl
fdivrl
sub
cmc
ret
les
inc
rolb
pop
test
popa
pop
adc
xlat
jnp
clc
call
cmp
mov
cmp
neg
sbb
jge
inc
sbb
or
push
cli
stc
push
jle
xor
jbe
or
jmp
inc
repnz
or
cmp
fadds
call
dec
inc
decb
bsf
call
stc
inc
dec
xchg
dec
or
push
test
sub
cs
cmp
ret
call
push
or
add
pop
mov
out
scas
std
decl
mov
daa
add
jb
mov
mov
add
dec
bound
xor
sbb
inc
mov
call
sar
jmp
lcall
lcall
mov
std
orl
jae
adc
in
push
cld
pushl
mov
inc
xchg
fwait
daa
inc
nop
std
incl
cmp
pop
jb
inc
out
mov
int3
call
cmp
inc
out
pop
add
rcrl
sub
jecxz
xorb
int
adc
ljmp
insb
testb
fdivr
push
in
add
cmp
sbb
call
test
mov
fldt
nop
pusha
sbb
adc
test
cwtl
add
sbb
pop
fldt
mov
push
mov
pushw
shll
test
test
sbb
stc
pushl
add
gs
stc
lcall
add
sbb
push
icebp
cmpsb
cmpsl
add
sbb
sbb
sbb
jmp
add
sbb
jmp
into
sbb
fnstsw
cmpsb
jmp
mov
test
stc
decl
add
sbb
stc
pushl
dec
pop
sub
mov
pop
test
inc
and
test
pop
test
inc
and
insb
mov
pop
test
inc
and
adc
call
cmp
and
add
sar
and
pop
test
aas
and
in
jmp
adc
pop
sub
sar
shr
pop
sub
sar
loope
pop
sub
sar
mov
aas
and
xchg
pushl
add
and
pop
sub
roll
jmp
pop
sub
xchg
add
and
add
sub
mov
pop
aas
add
sub
loope
jmp
aaa
sub
roll
jmp
pop
daa
sbbb
jmp
pop
daa
mov
add
and
mull
xchg
pop
and
and
xchg
es
pop
aas
add
xchg
out
add
add
push
stc
fldl
mov
out
lcall
inc
cmp
add
adc
fldl
into
out
add
lcall
out
jecxz
add
adc
fldl
push
out
xchg
push
fiadds
push
out
jae
add
push
fldl
cs
arpl
add
sbb
faddl
push
in
sub
call
faddl
jle
pushl
add
add
fildl
add
dec
orb
add
cmp
mov
jmp
test
add
add
inc
in
mov
js
add
add
pop
cmp
jno
cmp
jmp
cmp
lock
add
add
add
test
rolb
cmp
add
add
cmp
jmp
add
call
push
cmp
jmp
hlt
cmp
add
stc
add
stc
cmp
add
add
or
js
jmp
cmp
jmp
cmp
jge
add
add
cmp
jmp
cmp
add
clc
add
cld
cmp
call
cmp
add
add
cmp
xchg
xor
jmp
cmp
ljmp
add
adcb
jmp
jmp
cmp
cmp
add
cltd
inc
mov
mov
test
add
jne
xchg
movsb
decl
nop
aas
lds
mov
decl
test
add
incl
mov
push
add
add
or
adc
iret
and
add
adc
add
push
cli
jae
stos
test
add
decl
add
sarl
incl
and
decl
adc
dec
inc
roll
cmp
sbb
cmpsl
adc
sub
add
sbbb
sub
or
sub
mov
mov
sahf
mov
cmp
daa
inc
std
jns
add
mov
out
ret
add
shll
outsl
mov
and
sbb
inc
daa
mov
mov
jecxz
mov
jbe
cmp
pop
add
daa
mov
ret
add
daa
mov
jns
jo
push
add
add
cmp
bound
ds
xor
test
push
dec
decl
cmp
test
cmp
sbb
add
rcrb
add
add
jg
pop
cmp
jb
dec
add
add
cmp
out
cs
fdivrs
addr16
pop
cmp
pushf
sbb
jle
pop
cmp
pusha
addb
add
jns
aas
pop
xor
verw
cmp
mov
add
jmp
aaa
xchg
jmp
cmp
popa
sub
ljmp
cmp
test
jo
adc
cmp
mov
add
jmp
cmp
mov
add
jmp
nop
ds
xchg
mov
xchg
push
sbb
roll
test
inc
add
jmp
scas
xor
xor
mov
test
pop
mov
dec
mov
add
add
sbb
inc
test
hlt
andl
test
lea
rcl
add
arpl
sbb
jo
pop
es
pop
ret
mov
push
push
sub
lds
nop
add
add
add
add
nop
add
test
and
jbe
xchg
or
add
shrb
xchg
cmp
insb
inc
dec
inc
jae
roll
pushl
xchg
sahf
sbb
cmp
ret
and
decl
xor
add
mov
sysexit
sub
mov
js
mov
mov
aaa
test
and
inc
pop
add
movsb
cmp
test
pop
add
sub
mov
scas
adcl
mov
pop
add
sub
add
sub
rcrl
and
dec
mov
rolb
sbb
add
ret
mov
hlt
call
ss
cmpb
call
xor
push
out
inc
mov
call
add
addl
loopne
xor
in
add
xchg
xor
sbb
add
mov
add
loopew
mov
shlb
xchg
push
je
ja
movsl
test
sub
pop
xor
ljmp
xor
lcall
add
inc
add
shl
or
in
add
jb
add
jmp
out
xor
sub
mov
cld
call
cmp
mov
cmp
stos
lds
pop
push
cld
call
inc
cld
call
cmp
inc
jo
sbb
cmp
out
or
jmp
jmp
xor
popa
sub
xor
add
xor
lcall
add
mov
add
adc
add
adc
rorb
pushl
test
aam
decl
loopne
xchg
dec
mov
add
decl
jmp
pop
decl
pushl
xor
decl
mov
add
aas
mov
or
pusha
test
push
add
cmp
push
pop
cmp
push
add
sub
add
sub
add
sbb
cmp
decl
sahf
jl
cmp
sub
push
sahf
jl
cmp
add
add
cmp
mov
mov
adc
sub
add
xor
mov
cmp
push
out
popf
mov
sub
add
or
cmp
cmp
jmp
fmul
addr16
add
out
aam
aas
jecxz
js
jmp
add
lods
repz
sti
imul
add
mov
add
or
sub
in
xchg
hlt
cmp
xor
cs
and
pop
lock
sub
cmp
cld
inc
inc
add
mov
fneni(8087
into
in
xchg
add
in
add
add
add
cmp
xorl
rolb
push
sbb
push
add
loope
ds
xchg
inc
jo
cs
and
mov
pmulhw
add
and
aas
pop
jno
xor
pusha
faddl
jmp
ja
ljmp
xor
xchg
sub
call
sub
test
add
pusha
ret
or
cmp
mov
cld
call
cmp
mov
cld
incl
nop
mov
add
sti
mov
je
mov
adc
mov
add
push
cmp
scas
push
clc
ljmp
add
xchg
or
add
mov
popa
push
pop
andl
mov
or
cli
aaa
xrelease
pop
cld
mov
rolb
add
dec
adc
loopne
pushf
and
add
sub
jbe
addl
sbb
add
outsl
and
inc
scas
int3
call
push
push
pop
pop
cmp
mov
sbb
mov
sbb
ret
pop
call
shlb
fisubs
pop
sti
xor
mov
or
cmp
add
cmp
add
lcall
inc
cmpsl
out
cmp
mov
add
and
out
inc
out
and
inc
pop
sbb
rclb
mov
or
scas
dec
push
add
mov
and
sbb
std
jnp
sahf
ljmp
cmp
jecxz
add
into
sub
js
call
jno
add
add
outsb
adc
add
jp
pop
in
add
rcrb
add
add
xchg
pop
cmp
bound
add
inc
jo
cmp
pop
cmp
xchg
or
add
inc
add
add
adc
adc
add
jns
or
jmp
jmp
test
cli
add
mov
sahf
or
add
jmp
add
pusha
enter
add
jg
imul
subl
push
adc
arpl
cs
xchg
test
cli
jmp
xlat
inc
int
jg
jmp
rcl
inc
lds
push
int
rorb
out
into
pop
cmp
aas
pop
jmp
cmp
jne
cltd
test
add
nop
inc
xchg
decl
xchg
add
add
add
and
mov
gs
mov
leave
test
add
add
mov
stos
test
and
add
adc
push
mov
and
push
mov
out
pop
pop
into
push
pop
ret
mov
lea
stos
xchg
add
pushl
dec
lods
or
loopne
cmp
cmp
or
clc
push
push
add
pop
add
sbb
ret
icebp
mov
movsl
sub
push
ret
pop
out
inc
dec
mov
dec
jnp
adc
sbb
popa
call
sbb
mov
sbb
aad
add
mov
pushf
jp
sahf
sbb
cmp
jb
mov
xor
add
push
inc
jne
cmp
ds
add
xchg
add
loop
icebp
mov
cmp
std
mov
add
jne
add
lods
add
mov
push
jnp
xorl
add
add
jb
cld
in
out
add
in
cmp
add
jmp
or
imul
add
ja
or
outsb
add
inc
inc
add
mov
mov
cmp
lock
ss
add
xchg
sub
sub
pop
lock
add
call
jp
in
sbb
jge
lock
test
cmp
add
inc
in
dec
mov
add
cmpl
call
lcall
scas
jbe
sbb
subb
shl
scas
cmp
and
jl
jmp
mov
add
cmp
add
cmp
neg
ss
inc
ss
imull
sub
cmp
add
in
or
call
add
add
xlat
or
call
jmp
cld
mov
sub
xchg
cmp
or
add
sub
adc
adc
cmp
decb
mov
sub
mov
call
cld
mov
cmp
arpl
mov
test
mov
add
loope
fdivs
cmpsl
dec
and
cmpsl
push
cmp
fmuls
pushf
jmp
pop
pop
and
jb
push
cmp
int
lret
sub
and
dec
mov
and
aam
pop
mov
sub
adc
dec
adc
push
sbb
jmp
mov
sbb
js
or
jnp
mov
jne
mov
mov
jmp
rclb
cmp
fidivl
fimuls
mov
jge
adc
push
sbb
mov
cmp
mov
sbbb
adc
inc
cmp
jmp
adc
jno
sbb
iret
sbb
pusha
sbb
pop
or
out
add
mov
jge
ljmp
cld
adc
repz
ds
push
dec
daa
jno
mov
dec
jge
add
add
add
adc
inc
jge
sub
push
cld
mov
add
mov
or
ret
loopne
int3
or
mov
add
jle
call
or
inc
psubsw
loope
jmp
jecxz
mov
sub
mov
xchg
testl
jmp
cmp
sbb
dec
jae
add
jnp
in
cmp
dec
jo
add
stc
outsb
and
in
push
cmp
enter
jnp
iret
sub
push
xchg
sar
push
cmp
sbb
mov
mov
sarb
mov
inc
roll
dec
add
add
push
test
sub
push
pop
jge
sbb
mov
mov
sbb
or
rclb
daa
fs
jmp
cmp
xchg
add
jb
jp
add
adcl
mov
fcomi
or
mov
add
cmp
jnp
cmp
mov
jnp
ret
add
sbb
add
sbb
fildl
cmp
js
mov
ficomps
mov
ficoms
pop
add
cmp
add
sbb
mov
sbb
and
sub
std
incl
sbb
mov
xor
test
ljmp
aad
pop
mov
or
ja
xor
sbb
rol
mov
jmp
and
rcrb
xchg
jp
fcoml
cli
inc
das
jl
mulb
rol
sbb
adc
lret
int3
xlat
ror
fcmovnbe
add
sbb
jno
dec
cld
call
rorl
jne
loopne
into
jno
sahf
jle
and
push
jg
add
je
pushl
popa
jle
sbb
call
add
add
mov
popa
push
add
outsl
imul
call
and
inc
ljmp
push
adc
bound
loope
pop
and
mov
dec
insl
testb
out
mulb
add
cmp
int
in
jecxz
add
and
out
ss
add
cmp
decl
cmp
and
out
push
sub
jmp
jne
inc
int
jbe
cmc
jbe
inc
stc
ja
lds
dec
add
call
dec
mov
dec
mov
fisttpl
dec
cmp
mov
cmpsb
inc
and
xor
mov
push
mov
inc
notl
mov
xchg
mov
dec
push
pop
jmp
das
add
fdivr
mov
leave
mov
iret
cli
sub
shr
jno
and
imul
jo
and
jno
mov
push
xor
call
cmp
jp
mov
loope
push
inc
rolb
inc
adc
adc
push
sbb
xchg
cmpsl
add
imul
gs
das
ret
daa
insb
js
int
test
notb
cmp
mov
and
adc
mov
jno
pop
imul
out
cmp
add
mov
xchg
dec
pusha
fucom
inc
sbb
mov
and
mov
mov
sub
ret
mov
mov
sarb
mov
nop
mov
pop
jge
add
in
mov
loop
out
xchg
push
pop
and
popa
mov
test
clc
push
pop
call
lahf
pop
hlt
call
add
sbbl
mov
cmp
bound
sub
add
inc
ljmp
lret
add
or
int
mov
or
push
les
ret
mov
or
popa
mov
lahf
lds
sahf
mov
out
cmp
shl
ja
mov
ret
aas
clc
jmp
out
inc
inc
push
bound
inc
add
imul
and
add
pop
sub
cmp
leave
sub
incb
and
cmp
scas
add
add
add
add
movsb
into
loope
cmp
lods
dec
out
push
idiv
decl
push
sbb
std
cmp
mov
push
add
subl
add
cmc
add
cmp
lock
aam
add
mov
and
mov
and
mov
test
add
lea
or
mov
add
idiv
dec
mov
add
and
cmp
push
dec
scas
dec
jl
call
push
push
sub
xchg
out
cmp
mov
out
bound
sbbb
inc
clc
cmp
out
jp
incb
mov
mov
out
push
js
push
xchg
dec
mov
inc
out
jno
dec
mov
enter
mov
stc
add
iret
inc
call
jne
fadds
add
sub
inc
loop
and
movsb
push
jne
push
inc
jnp
mov
mov
add
add
daa
insb
jns
int
pop
mov
and
mov
add
add
pop
hlt
call
add
xchg
out
test
add
jg
add
cmpb
add
add
sbb
pop
inc
xlat
movsl
xchg
cmp
mull
mov
loopne
xchg
mov
adc
push
pushf
add
mov
popa
mov
rclb
loopne
sbb
out
mov
mov
pop
iret
sbb
inc
mov
dec
pushf
punpckldq
fidivs
jo
fidivs
pusha
add
fidivrs
bound
lret
push
loop
mov
xchg
xchg
mov
jb
test
xchg
inc
push
xchg
cmpb
jmp
popa
jl
in
cmp
jne
shrb
stc
in
scas
dec
bound
icebp
pop
xor
push
lcall
out
sub
bound
fisubs
ljmp
dec
int
scas
mov
add
sti
mov
dec
dec
and
lahf
dec
mov
cmp
push
xor
xlat
mov
cmp
mov
pop
jp
jmp
mov
sub
test
std
pushl
mov
ljmp
cmp
pop
std
jnp
cmp
cmp
jg
cld
xor
jl
std
jnp
xchg
cld
add
dec
and
push
dec
mov
inc
in
repz
cld
jmp
pop
pop
inc
and
imul
xlat
mov
ljmp
or
adc
xchg
and
sub
decb
aad
int
xchg
adc
sahf
cmc
sbb
mov
mov
scas
push
or
sbb
mov
fbld
add
mov
ret
out
dec
sbbl
ljmp
cmp
or
cmp
mov
cmp
mov
cmp
xchg
push
gs
lea
int
mov
out
mov
pushf
jecxz
outsb
hlt
dec
pop
cltd
mov
inc
adc
into
pop
cmc
pop
cmp
jmp
jmp
in
pop
and
mov
sbb
mov
call
rolb
pop
movsl
add
in
in
cmp
lret
mov
addl
rorb
mov
fbld
lods
fbld
mov
icebp
mov
mov
mov
push
cltd
mov
push
push
mov
jge
fimuls
call
out
test
add
add
fsubp
push
jb
jmp
cmp
lds
ljmp
loop
sbb
out
cs
shrb
mov
push
push
jb
push
out
push
push
mov
call
sub
les
loope
add
adc
push
inc
xor
xchg
mov
push
push
nop
test
call
dec
dec
and
cmpsl
push
mov
sbb
out
mov
std
cmp
outsb
cmp
es
pop
cmpl
je
insl
add
sbbl
jge
pusha
insl
add
daa
dec
mov
test
out
ljmp
test
add
push
call
add
push
mov
pop
je
daa
add
imul
ret
inc
mov
ficoms
iret
pop
addb
pop
test
or
add
cmp
mov
bound
push
ret
cs
cmp
fistl
mov
add
pop
fcmovb
add
fisttpl
test
jno
add
adc
add
movsl
add
sbbb
aam
push
add
add
xchg
jecxz
pop
add
inc
fmulp
aaa
pop
out
daa
idivb
fbstp
lock
movsb
repz
sarl
outsb
lods
jno
sahf
repz
pop
scas
mov
shrl
xchg
add
and
jmp
sti
push
jg
cmp
or
add
add
ss
jae
pop
adc
add
jp
decl
cmp
adc
out
in
cmp
add
inc
call
cmp
mov
call
cmp
inc
pusha
mov
mov
bound
dec
jmp
jmp
or
popf
aad
adc
je
test
jo
jmp
jmp
cmp
pmulhw
add
call
inc
inc
xchg
cmp
in
cmp
jne
mov
str
mov
xchg
test
decb
incl
inc
sbb
xchg
adc
lcall
cld
decl
rorb
incl
xchg
add
sub
shl
mov
xchg
xchg
mov
and
mov
pop
and
or
add
std
sub
push
push
pop
jmp
sbbl
mov
shlb
ret
mov
inc
ds
mov
aaa
sti
add
cli
lea
shlb
test
addr16
mov
or
cmp
sub
mov
add
cmp
mov
lds
ret
daa
mov
int
add
daa
mov
ret
aas
xor
mov
and
das
mov
add
test
sbb
jb
lret
insl
pushl
addb
pop
jle
adc
adc
mov
mov
mov
out
push
xor
jns
jo
stc
or
add
add
jl
test
cs
je
jp
cmpsl
add
ja
mov
add
andl
push
xor
xor
cmp
and
push
cmp
cmc
lods
mov
xchg
dec
clc
adc
jge
adc
call
test
jmp
cmp
or
inc
aam
xchg
lret
arpl
stos
jno
jmp
sub
dec
sbb
cmp
setg
xor
mov
js
cld
xor
pop
arpl
shrl
stos
mov
rcr
out
cmp
cmc
push
jle
inc
jo
je
jnp
push
out
mov
mov
sub
out
lock
dec
ss
pushl
mov
or
jmp
test
sbb
inc
subl
std
ljmp
out
dec
call
add
push
pop
mov
or
push
xchg
xchg
loopne
add
add
xlat
mov
pop
push
jle
add
add
pop
ret
add
ss
cld
rol
in
pop
cmp
pusha
jmp
or
scas
mov
xorl
ret
mov
xchg
cmp
jnp
mov
pop
inc
out
aas
and
mov
mov
pop
adc
cmp
or
push
and
inc
gs
mov
pop
inc
ljmp
xor
mov
mov
push
test
push
mov
pop
add
jbe
stos
mov
dec
inc
add
mov
pop
dec
clc
push
jnp
rorb
sarl
fisttpll
call
in
mov
or
ret
pop
sbb
jbe
lock
subl
lds
xchg
inc
cmp
xor
pop
scas
cmp
xchg
cld
jae
es
sbb
add
add
jge
or
das
add
add
sbb
jmp
mov
clc
call
cld
ret
mov
inc
inc
test
add
loop
jns
cmc
push
inc
inc
pop
hlt
xor
lcall
js
test
push
add
repz
inc
add
lret
arpl
sbb
lret
pop
inc
loopne
aad
mov
std
pop
psrad
or
lret
push
aas
sub
stc
push
aas
cmp
shlb
shl
scas
mov
add
testl
jmp
and
popa
xor
and
jno
rorl
js
mov
xor
mov
mov
add
mov
add
mov
incl
addb
or
xchg
rcr
or
push
mov
xchg
lret
or
inc
add
sarb
leave
add
das
xlat
mov
mov
xchg
popa
ljmp
jae
std
add
xlat
mov
mov
xchg
adc
add
cs
addl
fmuls
cmp
adc
push
testb
pop
rcr
rolb
xor
cmp
test
xadd
pop
and
cmp
xor
xchg
pop
test
pusha
movsb
adc
push
inc
out
dec
xchg
and
mov
stc
stc
neg
or
cmp
add
mov
inc
out
xor
lahf
inc
cmp
iret
sbb
push
sahf
mov
je
inc
incl
xlat
add
ret
add
mov
sub
jns
out
adcb
xor
jl
ds
mov
add
push
and
mov
je
test
shlb
shrl
and
jne
push
adc
xchg
jge
inc
xchg
add
add
push
bound
sbb
inc
or
pop
call
out
js
inc
xlat
out
and
loop
add
cmp
mov
mov
call
sub
aad
sbb
mov
cld
adc
cli
jo
cmpl
bound
sub
pop
xchg
sbb
call
scas
sar
adc
out
push
sti
jmp
outsb
mov
jmp
sub
add
mov
dec
sub
xchg
cmp
rcrb
adc
push
mov
cmp
je
and
ffree
outsl
add
add
mov
push
xchg
add
addl
mov
ret
mov
mov
cli
add
dec
aas
add
repz
dec
mov
pusha
pop
subl
ret
fxch
iret
out
add
ret
leave
lret
das
enter
jecxz
cmpsb
test
adc
das
fldcw
mov
sarl
mov
shrl
enter
jecxz
scas
add
cmp
sub
sub
jp
clc
mov
inc
sbb
shll
or
sub
push
out
repz
push
pop
decl
popa
pop
and
dec
pop
jns
js
xor
push
testl
cld
push
inc
loop
or
mov
lcall
rolb
pop
xchg
mov
add
xchg
cmpsb
and
jl
push
daa
mov
outsl
jmp
dec
sub
fisubrs
or
jns
inc
cld
rolb
mov
mov
inc
mov
incl
adc
inc
lock
jbe
mov
mov
mov
lods
stos
loopne
push
sbb
or
inc
pop
repnz
sbb
add
lds
sub
pop
add
shr
jge
sbb
add
ljmp
cmp
add
ret
pop
sub
cmc
add
sbb
stc
stos
lods
mov
mov
stc
xor
add
mov
out
inc
add
orl
mov
sti
divb
fwait
stos
popf
jge
mov
add
bound
js
out
push
jno
inc
jmp
and
fwait
sub
add
out
xor
incb
stos
pop
cli
mov
xchg
test
cmp
inc
clc
mov
inc
cld
xchg
data16
lds
decb
clc
std
ljmp
out
sti
pop
cli
add
push
dec
out
dec
cli
std
pop
fildl
push
sbb
jg
in
incl
push
mov
mov
std
push
mov
addr16
aas
add
cld
call
sub
pop
jp
imul
stc
xor
adc
mov
sbb
add
jle
mov
xchg
jle
mull
rorl
ficoms
add
mov
add
sahf
jbe
mov
push
jg
cs
inc
jnp
repnz
add
cmp
test
push
rolb
fiadds
jne
leave
lods
out
sub
mov
cmp
adcb
lea
inc
push
add
add
add
add
add
cmpsb
xorl
clc
imul
scas
rcrl
pop
mov
call
js
clc
jno
inc
jae
and
dec
mov
add
add
cmp
cmpsl
add
sub
add
into
cmp
shrl
sar
jl
repz
sub
add
add
add
jp
add
pop
pusha
iret
popa
mov
add
add
add
mov
jbe
sub
clc
add
adc
loopne
das
add
cmp
push
adc
mov
push
push
push
cmp
std
push
mov
incb
imul
mov
add
std
mov
cmp
mov
in
pop
sub
push
xchg
xrelease
mov
xchg
jae
jo
mov
sarb
mov
adc
sldt
aam
adcl
sti
decl
dec
inc
adc
cmp
scas
add
mov
push
push
call
cmp
es
pop
add
mov
push
push
call
pusha
push
ret
dec
mov
cmc
decl
test
mov
sbb
test
adc
add
arpl
cmp
mov
add
rclb
cmp
dec
clc
call
or
ljmp
call
cli
addr16
cmp
dec
js
mov
mov
test
cmp
dec
dec
aas
cmp
lock
ret
adc
jmp
sub
test
jb
mov
mov
mov
bound
add
pushf
or
push
xchg
add
std
sahf
pop
inc
lock
push
in
xchg
mov
xchg
test
dec
add
in
mov
fiadds
shrb
and
jmp
std
dec
mov
ds
cli
out
pop
in
movsb
mull
inc
cmp
or
adc
jb
or
inc
jae
lock
mov
mov
aas
out
jp
xchg
jmp
idivl
add
movsb
inc
cmp
aam
lods
cld
das
repnz
cli
out
jmp
testl
mov
out
add
sti
xchg
inc
call
xor
lods
sbb
decl
rolb
inc
mov
jmp
sbb
imul
or
aas
clc
sbb
xchg
mov
jne
fdivrp
andl
loop
call
xchg
arpl
add
sti
std
jmp
sbb
mov
or
cli
sti
jmp
cli
push
or
dec
inc
push
out
std
add
subb
add
add
inc
jg
push
ja
call
add
add
out
mov
mov
xor
jae
incl
cli
sti
lcall
incl
cli
sti
shufps
loopne
test
cmp
add
pop
jns
cmp
add
or
push
push
mov
gs
jg
sti
add
gs
add
jb
cmpl
sti
inc
mov
lock
sti
filds
push
rorb
xor
or
adc
das
add
cmpxchg
or
mov
out
jge
mov
sti
das
jmp
adc
add
jmp
xor
outsl
add
sub
iret
mov
sti
sti
mov
flds
neg
jg
pop
mov
popf
pop
sub
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
cmp
add
cmp
add
cmp
add
inc
add
mov
das
iret
dec
sub
leave
daa
and
jne
pop
and
pop
insb
dec
fsubrs
pop
in
and
jae
dec
iret
pop
cmp
add
push
inc
inc
lods
outsl
jb
lcall
leave
gs
aaa
shll
xor
dec
and
pop
dec
insl
add
pop
arpl
sbb
data16
jl
insb
or
jno
mov
xorb
or
or
jne
outsb
mov
jb
mov
outsl
mov
addr16
outsl
sub
pop
sub
add
pop
outsb
jae
pusha
je
icebp
insl
popa
cs
das
pop
add
add
push
add
add
add
and
add
and
add
adc
add
adc
add
and
add
and
add
adc
add
adc
add
loopne
add
loopne
add
rolb
add
rolb
add
cmp
sub
adc
or
push
hlt
or
dec
movsl
or
mov
push
call
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
inc
das
xor
dec
add
add
pop
add
outsl
bound
jmp
ja
add
add
lret
jmp
imul
xor
push
add
lcall
sbb
cmp
add
inc
bound
mov
das
add
pop
outsl
jae
pop
jb
xor
addr16
pop
imul
pop
outsb
imul
add
arpl
pushl
in
outsb
je
sub
xor
sub
fs
pop
gs
jns
jo
xor
and
jae
pop
outsl
sti
sub
xor
xor
das
xor
add
arpl
add
jae
pop
outsl
push
gs
outsl
je
outsb
add
imul
cmp
jb
popl
pop
jno
jmp
pop
jb
sti
fs
gs
fs
gs
add
push
mov
add
imul
xor
outsb
push
adc
add
jl
fs
jl
imul
jmp
add
test
jmp
jb
jmp
inc
add
loopne
insb
pop
fdivl
popa
roll
jno
out
outsb
movsl
inc
jb
pushf
sub
mov
sbb
out
mov
jnp
imul
add
pop
out
mov
bound
insb
enter
fnstenv
xor
xor
xor
add
imul
sbb
lret
bound
add
bound
insb
popl
or
data16
bound
push
mov
imul
pop
jge
jmp
insl
out
add
push
sub
lret
pop
add
pop
add
add
cltd
outsb
arpl
cmp
push
jno
fwait
bound
xchg
outsl
add
gs
jb
bound
or
push
add
sbb
and
shrl
outsb
shlb
dec
pop
outsb
into
push
pop
add
sbb
enter
enter
mov
or
test
insb
jb
add
jo
jmp
fistl
mov
pushl
sbb
pop
pop
jmp
fsubl
add
pop
outsb
ja
jb
jge
je
jne
add
arpl
pop
add
and
arpl
add
gs
imul
jo
cmp
outsl
fiadds
gs
out
imul
and
imul
add
add
gs
dec
jno
mov
outsb
add
popa
popa
add
je
outsb
pop
add
je
mov
jb
gs
pusha
gs
pop
insb
insb
cmp
jo
aaa
arpl
sub
stos
inc
js
push
cmp
mov
pusha
insb
mov
add
popa
jae
fstps
pop
pop
arpl
scas
aaa
add
mov
add
pushaw
mov
push
data16
pop
ja
mov
add
stos
jbe
push
lods
push
pop
and
jo
xchg
sbb
jno
pop
cmp
pop
sarl
pop
rcr
pusha
ja
call
fsubs
shlb
js
fs
add
pop
push
arpl
pop
cmp
popa
add
pushw
jbe
jbe
jbe
pop
sbb
gs
imul
pop
pop
out
jle
std
gs
push
dec
add
pop
pop
aam
cmp
ja
pop
int
sbb
pop
push
arpl
notb
pushw
add
jne
add
pop
mov
bound
mov
pop
arpl
pop
das
jmp
dec
ficomps
dec
ficoml
push
lcall
xor
cwtl
pop
jo
mov
adc
add
pop
insl
sbb
pop
add
pop
pop
outsb
mov
jae
push
lret
data16
ret
xor
sub
lret
jno
sbb
data16
mov
add
push
popa
jb
adc
outsb
mov
dec
add
lret
gs
pop
jae
push
pop
jae
push
add
pusha
je
loop
add
outsl
jbe
sub
adc
sub
jb
outsb
popa
imul
popa
outsl
and
add
outsb
outsb
cmp
arpl
sub
dec
gs
ljmp
hlt
dec
outsb
gs
xor
xor
inc
arpl
push
add
jno
jae
outsl
pop
jae
xchg
jmp
add
gs
xlat
fdivs
fsubs
ja
js
imul
add
faddl
addr16
fsubs
cmpsb
inc
pusha
arpl
cmp
pushf
cmp
cmp
jo
fnstenv
cwtl
adc
pop
outsb
test
pop
add
pop
insl
pop
push
pop
outsb
pop
fstps
imul
insl
bound
xor
sbb
pop
add
fldenv
push
shlb
fldenv
add
jno
outsl
xchg
pop
jmp
xchg
add
pusha
xchg
fidivs
push
cmp
ja
pop
push
imul
dec
jb
fs
js
add
pop
add
jo
jne
outsb
out
lcall
add
pop
push
jbe
addr16
ja
add
jb
jno
cmp
je
outsb
out
pop
pop
add
push
insl
out
push
push
pop
inc
add
je
outsb
shrl
add
jno
pop
mov
daa
arpl
jmp
sbb
mov
popa
mov
add
out
pusha
imul
rcrl
in
jno
cmc
push
add
dec
addr16
fdivrp
jns
fdivs
inc
xchg
add
mov
push
cmp
add
pop
pop
cmp
pop
add
pop
outsl
je
imul
xor
pop
jbe
xor
fs
push
pop
insl
fistps
add
daa
outsb
popa
add
mov
mov
pusha
popa
jae
inc
outsb
jns
dec
imul
push
jae
bound
xor
xchg
add
pop
bound
add
and
sub
add
dec
insb
popa
adc
jb
pop
outsb
xor
add
insb
das
jb
addr16
pusha
add
dec
je
inc
dec
insb
xor
dec
imul
arpl
add
pop
je
inc
dec
add
dec
pop
outsb
in
insb
add
lret
push
mov
imul
add
mov
pop
pop
add
pop
pop
ljmp
outsb
cmp
pusha
xor
fsubs
fldt
jb
xor
xor
fldenv
cwtl
cmp
cmp
addr16
cmp
test
pop
jb
fldenv
add
xor
inc
int3
xor
pop
jmp
pop
enter
jmp
popa
dec
jmp
add
imul
jno
add
pusha
push
add
xor
cmp
push
adc
jb
pusha
or
lret
fs
pop
les
pop
out
push
insb
xchg
pusha
out
mov
andb
jnp
int
mov
leave
jno
insb
fidivl
pop
add
imul
call
cmpsl
pop
inc
jno
add
test
dec
pop
lcall
add
push
cmp
pop
sbb
add
pop
pop
pop
sbb
pop
add
add
xor
mov
cmp
loop
outsb
imul
cmp
aad
sub
lds
insb
pop
mov
loope
cmp
add
cmp
ljmp
xchg
pop
push
jo
ljmp
xor
jbe
inc
insb
dec
fidivs
push
xchg
push
popa
inc
xchg
cmp
push
xor
push
cwtl
inc
je
xor
cmp
jo
into
push
das
fs
outsl
push
popa
add
cs
rolb
jno
adc
push
popa
sub
fadds
push
cmp
pop
outsl
je
popa
je
outsl
pop
insl
xchg
das
mov
addr16
push
popa
js
add
int3
jo
das
ja
gs
inc
pop
imul
dec
sub
dec
xor
aas
ss
push
popa
add
or
insl
jge
je
jno
imul
pop
imul
jb
loopne
jbe
or
cs
adc
cmp
dec
inc
mov
inc
inc
adcb
push
jb
ds
insl
xchg
xor
mov
push
adc
dec
push
lock
xor
flds
add
xlat
add
pushf
push
cmp
add
cmp
add
cmp
inc
push
hlt
pushf
cmp
push
jno
jb
pop
out
jg
fs
inc
jno
jp
jb
xchg
cmp
add
dec
push
cmpsl
push
push
jno
cmp
cmp
popl
sbb
push
or
outsb
add
add
pop
push
xor
pop
pop
add
add
add
add
add
add
pop
fsts
push
sbb
push
pop
mov
push
cld
pop
mov
sbb
sbb
mov
pusha
or
jb
push
test
int3
pop
mov
cmp
jb
pop
jle
negb
add
add
add
add
add
sub
dec
add
outsb
add
lea
test
sbb
pop
insb
pop
jmp
inc
pop
js
cmp
imul
inc
push
add
aas
mov
add
call
call
cli
add
fs
call
inc
pop
je
in
fs
dec
pop
xchg
adc
add
cmp
add
xchg
sbb
jmp
pop
sbb
jmp
cmp
aas
jmp
dec
push
aas
jmp
mov
aas
add
inc
sub
pop
sub
mov
sub
cld
jmp
std
call
std
call
sub
and
pop
jne
cmp
cld
cld
call
jl
add
and
jno
cld
call
cld
dec
outsl
sbbl
shrl
jno
pop
add
jg
cld
call
cld
cld
jmp
sbb
outsl
mov
cld
cld
jmp
test
add
add
imul
xor
cmp
addl
add
adc
arpl
push
add
jmp
add
jp
jo
mulw
aas
dec
flds
dec
or
mov
jmp
xor
sbb
add
cmp
subl
push
les
wbinvd
dec
insl
fidivrl
arpl
je
add
jmp
add
cli
jne
imul
and
fldl
pop
push
jb
add
cmpsl
gs
cmp
out
mov
inc
inc
jno
outsb
inc
push
test
pop
pop
push
or
test
jo
add
add
and
cmp
pop
imul
out
dec
repz
push
push
int3
aas
add
push
adc
imul
cmp
pop
or
jno
les
call
inc
lahf
push
aad
cltd
push
fisubrl
and
outsb
mov
push
add
xor
outsb
and
pop
push
dec
push
xor
inc
or
and
and
xor
popa
dec
xchg
push
je
sbb
sub
or
sbb
dec
fs
pusha
sbb
adc
outsb
std
push
push
ja
pop
sub
fadds
dec
adc
repz
push
fstl
outsb
je
push
popa
outsb
into
out
cmp
pop
insb
jae
sub
insl
mov
jecxz
outsb
jecxz
pop
insb
xchg
push
add
outsb
je
adc
pop
popa
mov
insb
imul
cmp
adc
popa
imul
cmc
inc
outsb
arpl
outsb
add
pop
bound
push
pop
jb
or
jb
adc
outsb
mov
cmp
test
xor
hlt
pop
sub
imul
gs
and
adc
xor
sub
imul
and
or
inc
fidivs
xlat
push
cs
aam
push
dec
sahf
inc
arpl
outsb
cmp
cmp
inc
push
pop
add
and
fsubrs
xor
dec
insl
push
sbb
adc
push
or
popa
arpl
sbb
and
popa
popa
pop
fsts
je
popa
insl
sbb
or
sbb
push
addr16
out
push
cmp
pop
inc
push
lret
imul
insb
insl
out
and
call
cmp
fs
xor
push
arpl
aam
nop
outsl
int
pop
addr16
sub
push
push
bound
das
and
adc
push
insl
fs
push
push
or
int
cvtpi2ps
aas
and
roll
sub
add
repz
imul
push
push
rolb
int
or
push
push
or
adc
jmp
dec
sub
call
fisttps
fdivl
je
call
add
mov
jo
dec
push
cs
test
insb
insl
dec
lcall
push
xchg
push
addr16
mov
dec
sub
jmp
push
xor
adc
dec
or
pop
arpl
push
cmp
add
das
addr16
and
jb
push
pop
aas
jmp
hlt
dec
arpl
jne
jb,pt
sub
push
jae
das
inc
gs
std
jb,pt
sub
imul
popa
jns
inc
jb
shlb
gs
jb
test
inc
jb
cmpb
gs
pop
jae
aas
imul
js
add
punpcklwd
je,pn
das
punpcklwd
dec
jo
push
jb
pop
popa
jae
sbb
xor
xor
jb
imul
popa
dec
outsl
ja
popa
fs
push
jae
int3
dec
add
ret
push
push
push
scas
data16
lock
ret
bound
imul
jno
jbe
je
push
loopne
xor
xlat
mov
addr16
add
xchg
pop
data16
jmp
dec
jo
cmp
mov
mull
test
add
outsb
jae
or
push
imul
addr16
arpl
add
add
fwait
daa
fs
fisttpl
sub
int3
imul
gs
inc
cmp
push
add
inc
int3
push
add
push
fwait
pusha
call
cwtd
pusha
cmp
push
int
xchg
push
pop
lcall
push
jo
lods
inc
dec
push
stos
imul
xchg
pop
inc
addr16
dec
xor
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
jmp
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
jb
inc
sub
xor
or
cld
daa
adc
push
and
sti
xor
xor
xor
and
dec
cmp
flds
inc
cmp
fldcw
and
and
and
sub
and
sub
jge
inc
popa
je
popa
je
scas
ss
jns
inc
popa
insl
leave
outsw
mov
ss
xor
add
iret
push
jb
mov
outsl
jae
or
data16
xor
mov
or
insb
lods
pusha
outsb
mov
inc
push
rorb
xorl
add
push
addr16
popa
jb
push
inc
pop
jb
or
outsb
xor
inc
push
inc
sbb
inc
xor
adc
je
mulb
pop
and
dec
sbb
pop
das
cld
pop
inc
and
push
jno
scas
push
ja
pushf
sub
je
lcall
fdivl
pop
jmp
xor
fs
outsl
bound
dec
addr16
jb
jb
mov
push
pop
stos
push
push
insl
stos
jge
dec
mov
push
dec
cwtl
inc
pop
add
jb
cmc
push
xchg
jmp
pop
je
sti
push
push
jmp
xor
test
sbb
fs
aas
push
dec
out
sub
inc
or
add
addr16
dec
fisubs
mov
add
dec
stos
cs
lret
data16
dec
pop
inc
fsubl
xlat
pop
les
das
xchg
pop
int
mov
xor
pusha
lret
xor
and
test
bound
dec
mov
insl
test
add
imul
jle
cmp
dec
add
xor
sbb
cmp
xor
adc
addr16
push
add
add
push
pop
add
push
inc
adc
imul
and
cmp
mov
stc
cmp
inc
inc
mov
or
lcall
arpl
frstor
stos
cmc
das
inc
mov
dec
je
cld
sub
inc
and
mov
sub
jle
pop
pop
pop
cmp
dec
pop
pop
data16
cmp
add
pop
inc
and
or
add
jb
xor
cmp
popa
mov
pop
imul
add
data16
pop
jb
jl
insb
outsl
sbbb
sarl
push
inc
int3
inc
jno
test
push
push
inc
add
dec
jg
popa
pop
roll
scas
pop
bound
std
dec
outsl
mov
jae
mov
pop
bound
mov
adc
inc
popa
inc
push
or
aaa
inc
or
outsl
cmp
jno
inc
arpl
sub
dec
jp
bound
inc
popa
jb
mulb
dec
repnz
jb
adc
insb
push
add
inc
push
cld
sbb
jae
cld
cmp
and
shll
cmc
xchg
inc
push
push
ret
sbb
dec
jne
xchg
pop
pop
test
bound
fdivrs
ds
cli
jae
arpl
mov
and
xor
js
jno
jo
outsb
cwtl
jge
dec
jp
fs
lea
jb
add
popf
pop
dec
gs
xor
inc
imul
dec
test
out
jl
inc
data16
sbb
xor
js
adc
xor
and
push
incb
adc
popa
or
clc
inc
pop
dec
add
inc
hlt
push
sbb
xor
rclb
add
dec
or
pop
or
ss
gs
notb
das
negl
push
roll
xor
adc
movsb
data16
mov
das
jg
add
dec
add
mov
arpl
das
jno
subl
and
mov
pop
arpl
add
cmp
jmp
xor
das
insb
adc
add
inc
or
das
inc
mulb
fstpt
sub
shr
bound
adc
je
es
jae
xlat
pop
cs
add
fistl
xlat
je,pn
push
inc
insb
mov
push
inc
mov
sub
add
push
inc
insb
mov
push
xor
push
inc
imul
je
pop
add
je
sub
popa
jb
cmp
insb
rcrb
outsb
je
gs
cmp
sub
gs
cmp
popa
js,pn
pusha
add
push
je
xorl
insb
gs
insb
addl
jae
mov
sub
insb
popa
addb
mov
mov
pop
insb
mov
pusha
jno
xlat
ss
dec
add
sub
imul
imul
and
push
add
or
push
pop
add
push
jbe
jmp
push
add
add
jbe
leave
pop
push
sub
add
cld
push
jbe
leave
pop
push
sbb
push
jbe
adc
pop
push
out
push
add
mov
data16
mov
data16
incl
lretw
push
mov
cmp
movsl
add
xor
dec
jge
mov
xchg
push
lcall
and
gs
push
pop
dec
pop
xor
dec
cmp
das
dec
push
dec
cmp
pop
sbb
cmp
push
inc
and
imul
pop
xor
pop
adc
sub
push
xor
dec
cmc
push
or
inc
in
pop
ds
push
shlb
push
cmp
xor
aas
add
fsts
mov
fcoml
fstl
mov
jmp
xchg
cltd
mov
pop
xor
push
pop
pop
nop
add
inc
xchg
push
add
pop
push
jno
add
pop
cmp
jb
sub
push
das
adc
pop
sub
insb
or
and
pop
pop
leavew
cld
xor
clc
sub
cmp
push
pop
sti
and
hlt
out
pop
arpl
dec
dec
insl
into
adc
push
fcoml
enter
add
xor
jg
data16
sub
scas
xor
sub
add
sub
add
aas
push
inc
mov
pop
inc
test
insb
gs
jb
sub
or
dec
xor
imul
pop
jb
cmp
jno
sub
je
and
imul
imul
pop
jb
adc
sub
popa
je
imul
inc
push
rcrb
je
xchg
cmp
in
pop
outsb
ljmp
push
pop
lret
mov
xor
jno
test
stos
sbbb
pop
arpl
pop
je
inc
inc
addr16
cmp
push
bound
pop
jb
xlat
sbb
inc
add
mov
jb
sbb
push
cmp
popa
jbe
add
push
fs
jmp
dec
push
out
insl
sub
sbb
pop
sbb
mov
xlat
push
jae
notb
sbb
sub
push
jmp
movb
out
aam
mov
das
in
push
mov
xor
push
xchg
push
lds
pop
test
xor
lods
dec
mov
and
pop
lea
inc
ja
xchg
xor
inc
pop
popa
xchg
pop
dec
push
pop
popa
inc
aaa
mov
js
dec
pusha
pop
push
xor
push
sub
arpl
push
popa
sbb
xor
push
push
and
inc
ljmp
pop
sub
dec
repz
and
add
cmp
pop
cli
out
dec
insl
fcmovnu
call
fsts
enter
mov
push
jno
or
imul
bound
decl
in
add
xchg
pop
arpl
push
jb
cmp
jno
insb
push
pop
test
outsl
push
jne
addr16
add
xchg
push
je
mov
dec
andb
sbbb
pop
push
arpl
pop
arpl
and
sbb
pop
arpl
dec
arpl
mov
or
outsl
ds
dec
outsl
outsb
ss
xchg
pop
pop
inc
lods
adc
sbbb
cmpsl
or
inc
lods
adc
ss
jae
or
add
add
sub
adc
push
pushf
sub
mov
dec
add
sub
imul
inc
js
sub
insl
add
bound
cs
pop
push
adc
or
cs
jb
or
or
push
jb
leave
and
jno
clc
bound
mov
inc
add
mov
sub
jmp
dec
je
mov
add
mov
push
arpl
xchg
sub
jo
jle
arpl
jne
insb
pushf
dec
add
dec
push
jne
dec
pop
add
push
jno
ss
test
push
arpl
pop
push
jno
xlat
xor
add
push
je
and
inc
add
arpl
and
sub
push
sbb
call
add
inc
or
arpl
push
aad
cmp
pop
fisubl
stos
pop
iret
pop
shlb
xor
push
enter
enter
ficoml
pop
movsb
push
lcall
popa
cltd
pop
jge
mov
dec
xchg
pop
insl
das
mov
test
add
push
addr16
push
pop
sbb
dec
push
add
xor
gs
dec
jno,pt
out
dec
pop
add
pusha
push
add
sub
cmp
push
push
add
je
das
dec
imul
pop
jb
dec
push
arpl
or
imul
xor
or
incl
ljmp
in
jne
call
dec
arpl
imul
add
bound
push
dec
dec
andb
pop
pop
je
mov
push
dec
pop
jno
and
add
pop
insl
jne
push
jae
outsb
popa
std
pusha
add
das
outsl
ja
cs
jb
nop
or
pop
jb
sbb
sbbb
andb
gs
popa
jae
and
cmp
inc
mov
pop
outsb
add
pop
andb
gs
jae
and
shrl
jae
ret
and
push
and
add
call
and
das
popa
pop
aad
jo
mov
imul
sbb
dec
xor
dec
pop
xor
add
push
jbe
add
push
dec
sbb
pop
add
clc
dec
jno
ret
cmp
xor
add
dec
insl
or
add
pop
popa
in
test
push
in
mov
xor
imull
insl
xlat
mov
mov
inc
int
push
jno
jbe
push
mov
pusha
popa
mov
mov
cmp
pop
jb
je
add
push
push
push
dec
push
jg
dec
pop
cmp
pop
push
mov
push
dec
push
cmp
and
dec
push
dec
dec
ds
sbb
cmp
push
sbb
push
sub
xor
sbb
idivl
and
push
add
pop
or
pop
mov
fcomps
out
mov
dec
int3
pop
mov
xor
nop
pop
lahf
xor
xor
push
jle
lea
mov
pop
lcall
and
jb
push
inc
push
cmp
addr16
sub
cmp
arpl
out
insb
inc
push
add
dec
or
adc
arpl
and
popa
sub
jo
inc
add
pop
jb
push
push
arpl
cs
outsb
into
daa
out
pusha
lret
pop
mov
push
push
arpl
minps
xchg
dec
pop
xor
add
jno
mov
mov
mov
dec
and
insb
insb
test
push
push
push
jge
jae
jbe
outsb
pop
inc
and
pop
sub
in
jae
rcrb
outsl
outsb
ljmp
jae
gs
in
gs
out
pusha
popa
xor
jae
mov
in
cs
jmp
add
add
jl
outsb
jns,pn
add
pop
jb
pop
dec
gs
inc
push
lock
ficoms
inc
cmp
pop
test
arpl
jo
jno
mov
push
pop
jecxz
jb
mull
jno
push
das
jb
cmpsl
dec
insl
dec
repz
pop
dec
dec
add
sub
sbb
sub
or
and
cmp
jmp
mov
add
ja
insl
in
int
insl
int
push
insl
cmp
lret
pop
dec
fdivrs
addr16
push
push
jb
ret
popf
add
pop
push
inc
fwait
xor
jge
cmp
push
sahf
xor
xor
daa
test
cmp
gs
pop
sub
out
add
pop
pop
xor
push
push
add
xor
pop
inc
daa
cmp
xor
and
xor
aaa
out
and
adc
sub
cmp
stc
fstl
aaa
in
daa
push
xor
les
sub
shlb
pop
sahf
fildl
sub
and
xchg
jge
outsb
mov
imul
jb
add
push
nop
dec
pop
add
imul
cmpsl
xchg
ss
cs
sub
add
sbb
arpl
cmp
mov
scas
pop
xor
sbb
xor
sbb
sub
cmp
je
sub
jmp
sbb
and
int
xor
mov
cvtdq2ps
add
dec
jo
jne
pop
and
jecxz
and
jae
sahf
inc
imul
lock
and
jae
lahf
inc
outsb
xor
insb
mov
out
dec
sub
popa
cs
push
dec
sbb
outsl
push
outsl
hlt
pusha
outsb
sbb
push
std
in
mov
loop
jo
out
jne
jle
outsb
mov
xor
dec
imul
pop
jb
and
push
push
dec
push
push
cmp
push
aas
jmp
pop
inc
int
xor
jbe
push
mov
sub
pop
jns
gs
inc
dec
data16
inc
pop
iret
icebp
ss
aam
js,pt
lock
jp
clc
sub
in
icebp
xor
adc
xor
cmpsl
push
dec
ja
push
aas
imul
inc
add
das
jno
negb
xor
and
adc
inc
xor
ss
in
xor
cmc
xor
jb
inc
cli
jns
sub
jb
xor
lods
sti
push
icebp
sbb
stc
cmp
xor
sub
and
sub
sub
sub
aad
daa
out
insl
push
mov
es
mov
mov
movsl
push
add
and
jge
dec
sub
cmp
push
sub
sub
sbb
add
dec
sbb
sub
cmp
dec
cmp
dec
pushl
add
add
xor
icebp
mov
adc
arpl
or
push
lods
stc
inc
push
movsb
negl
mov
pop
sub
cltd
add
and
sub
fwait
fs
insb
mov
push
sub
cltd
jno
cs
jnp
je
pop
es
sbb
dec
xor
push
inc
cmp
arpl
das
jo
xor
push
inc
cmp
push
cmp
cmp
add
cmp
add
cmp
add
cmp
add
nop
add
add
add
pusha
add
add
push
add
add
insb
insb
imul
imul
insb
imul
outsl
testb
jno
jecxz
add
insb
in
pusha
add
fildll
pop
sub
jo
in
pusha
add
imul
cs
xor
jo
in
insb
insb
jns
pusha
xor
fildll
std
call
jae
jae
outsb
jno
in
add
icebp
push
insb
push
or
or
jno,pt
add
je
jns
arpl
mov
jno
int3
sub
fcompl
pop
insl
leave
ret
daa
add
xlat
and
pop
lcall
outsl
xchg
shrb
pushf
xchg
and
xchg
cmpsl
outsl
xchg
subb
pop
aaa
add
jnp
je
jp
popa
dec
dec
sub
and
add
sub
inc
repz
sbb
jae
cmp
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
fidivl
add
push
lret
and
sub
push
int3
daa
xchg
xor
sub
push
add
jg
xchg
cmp
and
lea
xor
pop
sub
add
dec
sub
ljmp
inc
sub
mulb
xor
xor
inc
pop
es
aas
fs
sub
lret
add
mov
add
test
add
ss
inc
sub
loopne
push
sub
outsb
or
and
ss
fistl
xor
es
jno
add
pop
aam
in
les
jb
push
arpl
mov
lcall
push
cmpsb
jg
push
cmp
insb
xchg
sbb
outsb
jp
cmp
inc
sbb
cmp
adc
insb
dec
adc
inc
inc
or
data16
push
add
push
fnsave
dec
dec
imul
imul
sub
push
sub
add
lock
jp
sub
dec
lock
arpl
je
cs
imul
fs
out
sub
push
cmc
fisttpl
in
jns
dec
dec
outsl
imul
gs
imul
je
loopne
imul
lcall
fisubrl
mov
jecxz
gs
add
cmp
addr16
cmc
and
add
inc
sub
sbb
insl
pop
inc
sub
cmp
das
jne
pop
pop
pop
in
sti
push
popa
loope
dec
push
cmp
xor
pushl
add
mov
pop
in
sub
cmp
es
sarb
sbb
movsl
mov
jecxz
ja
add
nop
and
ja
sub
subb
insl
cmpsl
dec
add
dec
push
cmp
sub
push
ss
pop
add
inc
jge
xor
xor
and
push
adc
jmp
out
out
dec
repnz
clc
daa
cld
data16
repz
lock
inc
sti
in
fdivrs
and
xor
sbb
pop
jmp
or
sub
out
fisubrl
or
push
testl
push
stos
add
icebp
dec
sbb
das
cmp
and
sub
push
jp
xchg
xor
push
cs
movsl
dec
mov
add
sbb
je
push
cmp
sbb
arpl
dec
addr16
bound
arpl
inc
aas
jb
pop
sbb
insb
sbb
cmp
das
jmp
das
jno
adc
cmp
sub
add
xor
adc
sbb
lds
push
push
aad
xor
push
inc
outsb
mov
aaa
add
mov
jo
or
sub
stos
sub
jo
insb
outsb
jo
in
gs
inc
popa
dec
loop
jmp
add
add
add
add
inc
dec
aaa
inc
pop
mov
add
add
inc
jbe
dec
aaa
add
jns
ljmp
aaa
test
iret
xchg
xor
or
jmp
sub
outsl
jle
jb
fcomps
stc
in
outsl
repz
je
jmp
je
hlt
insl
gs
mov
imul
pop
dec
cmp
sbb
pop
sub
jno
mov
arpl
cltd
add
add
cltd
and
pop
cltd
sub
or
in
call
loopne
popa
cltd
and
gs
cli
jmp
cmc
lcall
cltd
and
lcall
cltd
idiv
sub
cltd
add
cltd
repz
cltd
icebp
decl
cltd
and
add
cltd
daa
add
cltd
add
test
es
push
lods
mov
pusha
pop
arpl
add
int
push
pop
cltd
sub
and
and
lcall
ss
ss
add
sbb
ss
ss
jecxz
push
icebp
sbb
cmp
push
inc
cmp
push
or
mov
in
and
pop
fisubl
xor
sbb
in
and
daa
jmp
or
sbb
add
and
and
and
dec
add
xor
and
sbb
shlb
lcall
mov
addr16
arpl
push
dec
arpl
xlat
and
pushf
sub
push
add
or
pop
push
cmp
xor
cmp
jbe
loopnew
dec
or
adc
pop
xor
add
dec
and
ja
add
add
pop
loopne
or
dec
add
pop
inc
pop
cmc
sbb
push
mov
pop
and
push
dec
je
and
jno
icebp
in
gs
std
sub
mov
dec
push
ret
dec
decl
cltd
ljmp
test
inc
dec
inc
mov
push
inc
dec
pop
ljmp
out
ljmp
adc
jno
in
add
push
out
jb
push
fcomps
xor
jo
nop
call
pop
insl
xor
jmp
outsl
cmp
std
addr16
rep
cmp
lret
std
rep
jae
paddusw
pop
inc
insl
xchg
mov
sbb
les
add
sbb
xchg
sbb
mov
push
imul
add
push
insl
push
xor
dec
inc
popa
daa
push
imul
dec
cltd
cmp
sub
insb
sbb
cltd
dec
inc
sub
pop
addr16
add
aas
and
adc
arpl
in
inc
insl
in
sub
fstl
fimull
add
in
insb
aam
sbb
in
mov
repz
sub
mov
xor
cmp
sbb
add
dec
jp
nop
and
dec
xchg
and
and
inc
test
xor
mov
movhps
sbb
and
gs
push
xor
dec
pop
pop
cmp
pop
out
sbb
aaa
add
add
add
add
add
add
add
inc
in
or
fstp
and
and
add
dec
add
dec
jb
and
das
push
pop
mov
pop
ret
push
inc
je
cmp
addr16
dec
add
xor
mov
das
jne
sub
popf
sbb
je
push
and
test
das
add
or
jno
or
dec
insl
inc
popa
xor
push
dec
inc
dec
pop
das
push
imul
or
sbb
sub
pop
add
loopne
jp
inc
je
pusha
lret
inc
cld
inc
push
add
cs
outsb
imul
addr16
pop
outsl
loopne
insl
pop
add
fs
add
push
rolb
outsl
movb
outsb
ret
lds
pop
add
inc
add
lock
mov
add
sub
dec
add
je
dec
loope
imul
dec
dec
inc
sub
cmp
insb
inc
out
outsb
cmp
dec
push
loopne
pop
dec
sar
inc
jns
mov
jmp
adc
icebp
inc
or
das
push
pop
in
sub
hlt
das
imul
dec
add
mov
icebp
pop
add
cltd
inc
pop
push
aas
push
mov
push
pop
dec
js
cmp
xlat
jno
dec
add
cld
ljmp
cmp
jno
out
jb
stc
out
cs
cmp
decl
add
sbb
jmp
sbb
aad
pop
and
xor
enter
dec
aam
dec
cli
push
sbb
jmp
push
add
jg
mov
jl
fiadds
jg
mov
mov
les
pop
sub
pop
cmp
inc
gs
test
jp
mov
inc
lea
testb
xor
out
je
xchg
push
push
sub
or
cmp
cld
lock
sbb
cmp
sbb
add
cmp
inc
insl
sbb
sub
daa
add
push
and
inc
adc
les
add
or
jne
pop
sbb
sbb
xor
pop
ss
aam
add
dec
xor
cmp
pop
aad
sbb
insl
mov
inc
sub
pushf
dec
and
cmp
fwait
sub
jb
adc
arpl
sub
add
stos
cmp
jmp
mov
int
mov
mov
dec
add
xor
add
add
or
movsl
add
arpl
call
loop
ja
out
pusha
pop
cmp
outsb
popa
push
ds
push
sub
gs
pushf
dec
popa
loope,pt
adc
dec
outsl
adc
call
jb
loopne
outsb
jae
push
imul
push
gs
or
inc
gs
cmp
jns
add
add
sahf
add
stos
pushl
mov
sub
imul
add
outsb
cmp
pop
arpl
and
jecxz
insb
add
out
cmp
adc
jb
cmp
addr16
adc
pop
int3
aam
jae
add
pop
ljmp
jno
loope
jno
imul
cltd
push
jno
xor
mov
data16
addr16
je
insb
sbb
xchg
push
push
xchg
addr16
js
push
pusha
mov
add
mov
ja
jge
pop
outsl
and
and
out
adc
pop
das
sub
dec
push
sbb
sbb
pop
sub
and
add
sbb
in
xor
fisubrl
sub
jmp
sub
adc
xchg
loopne
xor
push
pop
and
pop
mov
xor
sub
addl
dec
mov
pop
sbb
das
push
adc
jnp
add
or
arpl
addr16
pop
sub
inc
inc
loopne
dec
dec
inc
insb
push
sub
inc
adc
cmp
addr16
or
adc
insb
jmp
xor
sbb
cmp
sub
push
inc
dec
test
aad
into
inc
sub
scas
outsb
push
inc
mov
das
sub
mov
pop
cmp
mov
mov
outsb
xchg
push
mov
sub
push
sbb
dec
lret
jne
mov
dec
add
outsb
inc
mov
out
outsl
jae
lock
cs
or
pop
xor
push
std
fwait
aas
jb
shrb
xor
inc
push
xor
fs
lret
push
cmp
xor
popa
push
dec
shll
aaa
cmp
push
push
clc
jo
and
inc
inc
adc
inc
inc
and
inc
and
dec
inc
adc
push
inc
adc
push
inc
add
iret
push
inc
loopne
push
inc
rolb
inc
cmp
inc
pop
jns
mov
pusha
jns
fisubl
test
popa
stc
test
popa
stc
test
fs
test
fs
test
data16
test
fs
test
push
test
imul
ja
stc
test
jo
test
outsl
stc
test
jb
test
je
test
ja
test
js
test
js
test
test
dec
xchg
cmp
jns
mov
xchg
jns
cli
xchg
jns
jg
jns
out
iret
aas
out
aas
out
mov
out
mov
out
mov
aas
out
sarb
out
fidivrl
out
fidivrs
out
aas
out
sarb
out
sarb
out
sarb
sbb
aas
out
lods
aas
out
add
aas
out
xchg
aas
out
aas
out
jns
out
jg
out
testb
out
inc
out
clc
inc
out
clc
inc
out
cli
inc
out
sti
inc
out
cli
inc
out
testb
lds
out
inc
jmp
sub
inc
jmp
push
mov
jmp
add
inc
jmp
mov
inc
jmp
jmp
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
std
sub
sub
and
punpckhbw
add
das
sub
out
das
dec
sbb
dec
and
sbb
pop
in
xor
push
add
jmp
hlt
decl
and
iret
cmc
insb
and
or
fs
in
pop
or
mov
and
or
and
clc
fs
mov
and
imull
cltd
mov
or
xor
pusha
insb
inc
or
and
jo
and
mov
std
push
cmp
imul
arpl
pusha
inc
and
addr16
xor
imul
jo
lds
jb
xchg
mov
bound
cwtl
out
xor
fcos
out
test
dec
imul
jno
andl
push
pop
adc
jo
arpl
add
jge
bound
pop
sub
xor
xor
inc
and
inc
dec
insl
or
sub
inc
daa
gs
xor
mulb
pop
in
cmp
or
push
lret
call
and
inc
cwtl
push
sub
stc
adc
add
das
lcall
sub
xor
sub
xor
mov
adc
xchg
cs
and
das
pop
and
sub
mov
push
push
pusha
cmp
inc
cs
sub
daa
sbb
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
jmp
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
push
std
jmp
std
jmp
std
call
std
call
std
jmp
std
jmp
std
call
std
call
std
jmp
cld
incl
loopne
call
cld
call
cld
jmp
cld
jmp
cld
call
cld
call
cld
jmp
cld
call
cld
jmp
cld
call
cld
jmp
jmp
call
call
jmp
cmp
add
cmp
add
cmp
test
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
insl
lret
push
addr16
sbb
outsl
andb
add
inc
add
out
add
xchg
out
mov
add
add
out
sub
out
xor
out
cmp
add
add
xchg
out
cmp
out
cmp
out
into
xchg
out
xchg
out
cmp
out
mov
out
cmp
out
cmp
addr16
add
add
cmp
pop
add
add
add
add
add
add
add
add
add
add
call
mov
pop
add
fbld
push
lock
std
shlb
jecxz
or
ret
and
sub
and
ljmp
jmp
or
out
or
call
xor
push
fsubp
lock
aad
sbb
add
pop
adc
fistpll
in
push
fildll
push
shrl
repz
imul
sbb
imul
sbb
pusha
xchg
incb
push
add
add
std
jmp
add
add
call
add
add
jmp
xchg
std
call
xchg
incb
adc
incb
and
std
add
adc
std
add
add
add
add
add
xchg
std
call
xchg
std
add
xchg
std
add
xchg
jmp
xchg
call
add
add
add
add
std
call
add
movsb
add
jmp
mov
std
jbe
add
cmp
std
cmp
add
cmp
add
add
cmpsl
add
cmp
add
cmp
std
push
cmpsb
add
cmp
add
cmp
std
out
popf
std
cmp
add
cmp
add
cmp
std
mov
std
cmp
std
cmp
out
cmp
jecxz
xchg
out
add
add
add
pop
test
out
cmp
movl
cmp
movl
cmp
movl
cmp
out
sub
pop
add
add
add
and
dec
add
add
add
test
and
cmp
out
cmp
movl
add
add
cmp
sub
add
jmp
mov
out
jg
cmp
jg
mov
call
mov
decl
cmp
lock
mov
lock
mov
add
jmp
mov
add
or
lock
xor
add
jmp
add
lock
cmp
dec
cmp
or
lock
mov
add
add
std
jmp
jl
add
cld
jo
pusha
jge
add
call
add
pusha
std
decl
add
push
incl
push
std
lcall
incl
add
incl
sub
add
add
std
incl
sbb
incl
and
add
or
add
sbb
add
loopne
add
call
cld
incl
fdivr
jmp
incb
or
call
incb
add
cmpsl
add
inc
lahf
add
inc
incl
cmp
incl
cmp
pushl
popl
add
lahf
incl
inc
cmpsl
cmp
incl
xor
lahf
add
cmp
add
cmp
incl
add
cmp
add
cmp
pushl
xchg
add
xor
add
cmp
pushl
cltd
add
cmp
out
add
clc
out
add
add
add
add
add
add
add
clc
out
cmp
fiadds
cmp
fiadds
add
add
add
clc
out
add
cmp
filds
cmp
out
cmp
call
in
addr16
add
mov
jmp
add
out
cmp
out
xchg
add
jecxz
add
xchg
push
add
add
mov
jmp
add
add
jmp
cmp
push
add
add
jmp
lcall
push
cmp
add
mov
imul
mov
imul
add
add
imul
addb
pop
push
add
push
add
add
jmp
cmp
add
sbb
add
mov
imul
addb
cmp
add
add
push
add
std
push
push
add
add
jge
popa
add
add
add
add
mov
addb
mov
jge
adc
addb
mov
std
jmp
mov
add
pusha
add
call
mov
add
pusha
add
add
or
push
add
inc
push
add
add
and
add
and
add
add
add
add
inc
and
or
and
add
adc
or
add
inc
cmp
add
cmp
add
cmp
add
jns
add
cmp
add
sti
xchg
add
sti
xchg
add
cmp
add
stc
xchg
add
cmp
add
cmp
xchg
add
sti
xchg
add
cmp
add
sti
xchg
add
cmp
add
jns
add
cmp
add
jns
add
cmp
add
jnp
out
xor
out
inc
inc
out
cmp
out
cmp
out
xor
out
inc
ds
inc
add
add
ds
xor
out
inc
out
cmp
out
add
inc
out
cmp
out
inc
add
add
out
cmp
add
add
add
add
add
out
xor
out
cmp
add
loopne
add
inc
cmp
testl
loopne
add
add
inc
jns
out
jns
out
cmp
fdivrs
add
cmp
stc
cmp
and
cmp
jmp
cmp
and
add
add
cmp
add
cmp
fnstcw
and
jp
add
cli
aas
add
cli
lcall
stc
cmp
add
cmp
fnstcw
inc
and
cmp
add
cli
aas
add
cli
aas
and
cli
call
cli
aas
and
cmp
and
cli
lcall
fnstcw
add
fnstcw
inc
and
cli
aas
add
jp
and
cmp
stc
jp
add
add
lcall
add
aas
add
add
adc
lcall
add
add
lock
lcall
lock
inc
add
std
aas
and
cmp
inc
and
std
inc
std
aas
and
cmp
aas
and
cmp
aas
add
add
nop
std
jmp
inc
and
lcall
pusha
std
aas
add
std
pop
add
std
pop
add
test
add
jmp
test
cmp
stc
pop
cmp
stc
pop
xor
xchg
add
cmp
add
cmp
add
xor
xchg
stc
cmp
add
cmp
add
xor
xchg
stc
pop
xor
xchg
add
xor
xchg
pop
cmp
xchg
add
cmp
stc
pop
cmp
stc
pop
cmp
jmp
sti
cs
add
call
add
add
add
out
cmp
out
incb
out
sbb
out
dec
cld
call
sti
ds
sti
ss
call
add
cld
call
out
pop
cld
out
dec
add
add
add
add
add
sti
ss
out
cmp
jmp
add
out
jbe
jmp
sti
add
sti
pop
xchg
add
add
hlt
dec
idiv
call
cmp
ljmp
sub
add
sub
add
jmp
xor
cld
movaps
ljmp
test
ljmp
jmp
cmp
adc
lret
test
stos
add
test
cmp
psubsw
xchg
jmp
cmp
add
cmp
add
jmp
add
add
add
and
add
add
and
cld
call
add
adc
add
and
call
decl
loopne
add
mov
add
adc
add
mov
add
add
add
loopne
add
mov
xchg
std
xchg
std
push
add
add
xchg
add
nop
xchg
add
nop
xchg
add
and
incl
cmp
add
xchg
add
sub
das
incl
add
cmp
sub
cs
sub
es
sub
push
xchg
add
cmp
sub
push
jecxz
jp
push
xchg
add
cmp
es
fisubs
sub
into
xchg
add
cmp
pushl
sub
cmpsb
xchg
add
add
xchg
add
cmp
incl
xchg
add
cmp
out
cmp
and
test
sub
out
cmp
out
cmp
pop
and
test
test
sub
test
add
add
add
add
and
test
sub
test
add
add
add
add
sub
and
cmp
out
add
add
add
add
add
add
add
add
sub
addl
scas
add
cmpsb
sbb
sahf
andl
mov
add
and
cmp
adc
std
fwait
and
std
popf
adc
std
jmp
cmp
push
cmp
pop
cmp
push
cmp
popa
cmp
add
std
adc
std
cmc
push
cmp
and
std
cltd
adc
std
sbb
and
std
jmp
cmp
popa
cmp
popa
cmp
push
cmp
push
cmp
popa
cmp
add
cld
cld
fdivr
incl
lcall
frndint
pushl
cld
pushl
cld
jle
cld
pushl
call
incl
cmp
cld
lcall
decl
cld
decl
cld
lcall
cld
decl
call
cld
dec
pushl
jmp
out
call
std
pushl
frndint
jmp
std
decl
push
fcmovu
cld
ljmp
cmp
call
cmp
and
and
add
cltd
and
xchg
add
cmp
and
dec
xchg
add
cmp
and
ds
pushl
aas
and
jecxz,pn
jmp
loope
lcall
sbb
add
cmp
and
dec
and
negb
out
les
jmp
ss
fidivrs
and
and
dec
cmp
inc
mov
mov
cmp
and
scas
fsubl
cmpsb
and
cmp
jecxz
xchg
xor
mov
mov
jle
cmpsl
sub
fwait
sub
inc
sub
push
sub
pop
sub
arpl
dec
adcb
sbbb
cmpb
sbbb
sbbb
push
xor
push
or
push
xorb
idivb
sub
out
jg
daa
out
fidivrs
daa
jg
daa
into
jg
daa
jg
daa
mov
jg
dec
push
jg
sbb
std
jmp
jg
sti
pop
jg
ret
push
jg
scas
pop
jg
lahf
push
jg
sbbl
std
pop
pop
jg
lea
std
popf
pop
jle
mov
pop
jle
xlat
pop
jle
mov
jle
in
jle
int
jle
loope
sbb
xor
jle
xor
jle
add
jle
add
jle
sbb
jmp
fstpt
xor
jge
dec
fstpt
pop
fstpt
jmp
jge
add
popa
call
add
add
add
add
popa
js
mov
popa
decl
arpl
lcall
arpl
clc
ljmp
arpl
ljmp
jo
jmp
add
jle
call
add
pop
ds
jmp
add
add
lcall
cmp
and
ds
decl
add
add
popa
mov
pop
loope
into
cmp
inc
loopne
mov
cmp
scas
xor
cmpsb
outsl
in
sahf
add
add
dec
in
mov
incb
mov
in
aam
in
imul
add
cmp
in
imul
add
cmp
lock
lret
pop
cmpsl
lret
out
bound
mov
push
stos
adc
bound
lock
je
insb
mov
imulb
adc
add
push
out
pop
sbb
pusha
push
add
add
out
add
mov
add
stos
lock
ret
jecxz
add
fisttps
in
jl
add
icebp
jp
sbb
jg
jbe
fiaddl
ficomps
pop
jl
add
loop
lret
inc
ret
lret
jmp
repnz
test
add
xchg
loope
call
mov
add
fwait
ljmp
repnz
out
daa
add
add
cs
out
inc
add
ficoms
lcall
cmp
out
bound
fucomi
outsl
shrb
add
pushf
fwait
jmp
nop
xchg
hlt
dec
xchg
push
add
loop
jbe
in
sbbb
add
int3
insb
dec
push
dec
dec
fidivl
je
std
cmp
icebp
insb
dec
cld
fisubs
and
jo
cmp
add
jmp
or
jecxz
jmp
push
outsb
bound
addr16
imul
jo
inc
sar
add
inc
imul
jb
repnz
insb
arpl
push
imul
imul
lods
add
insl
outsl
jae
inc
data16
std
inc
std
decl
imul
pusha
insl
jo
add
push
inc
imul
inc
nop
jns
inc
lea
icebp
bound
mov
inc
push
jnp
insb
pop
je
bound
jmp
gs
dec
stc
add
push
shll
mov
insb
daa
movsb
stc
add
std
add
mov
insb
sbb
jecxz
clc
add
call
jae
mov
insl
xlat
addl
jae
shr
arpl
shr
inc
loopne
in
int
bnd
add
and
jae
xor
in
stos
add
out
in
add
mov
in
popf
mov
sbb
push
repz
push
jp
clc
out
hlt
aad
dec
mov
ret
out
leave
out
dec
mov
movsl
out
sarb
out
in
xchg
in
in
adc
fstpl
loop
jecxz
ret
mov
hlt
loop
shr
out
loop
loop
repnz
dec
lock
inc
clc
pop
add
add
loop
shrl
ljmp
repnz
and
jno
cli
ja
cmp
jo
or
jmp
ja
hlt
cmp
jb
icebp
fiadds
out
loop
incb
fistps
cmp
push
rcr
inc
scas
in
jmp
xchg
loop
mov
lahf
repz
mov
fisubrs
insb
push
jnp
std
sarl
mov
jo
ja
jno
add
std
inc
xor
repz
mov
jo
sub
jo
pop
jo
incl
pop
bound
das
xor
outsb
jo
loopne
sbb
pop
insb
bound
outsb
insb
arpl
decb
lcall
jae
sub
jno
pop
std
dec
inc
fstpl
push
in
data16
ja
std
mov
test
pop
bound
add
push
mov
pop
bound
pusha
lock
outsw
incb
insb
cmp
fidivs
ret
cmpsl
out
imul
mov
sub
bound
sbb
pop
xchg
push
ljmp
or
jno
call
inc
dec
dec
call
pop
add
push
cmp
in
adc
lock
pusha
cmp
out
dec
adc
mov
or
jmp
in
aam
out
in
xchg
pusha
aam
add
cmp
ss
lret
call
movsb
in
xor
xchg
add
movsb
icebp
negb
add
add
cli
out
je
add
fildl
pop
add
imul
rorb
fdivr
fistpll
ret
jbe
or
int
adc
mov
add
ficomps
leave
cmp
add
add
fildl
subl
movsb
push
xor
bound
out
bound
loope
inc
add
xor
into
cmp
bound
fbstp
sbb
jb
jmp
jmp
out
inc
pop
push
out
or
out
bound
xor
fisttpll
in
hlt
int3
icebp
xlat
fmulp
jo
int3
jae
repnz
bound
jnp
std
enter
mov
outsb
out
jmp
xchg
fisubrs
mov
bound
add
bound
xchg
ljmp
lods
pop
imul
in
je
or
gs
bound
pop
arpl
cld
jbe
pop
pop
jno
push
pop
bound
bound
popa
push
jb
cmp
imul
jno
cmp
imul
rorb
jb
cmp
call
sti
dec
je
push
inc
push
mov
dec
je
loop
insb
dec
jbe
add
je
dec
jno
sar
jmp
jno
repz
add
in
jno
cmc
out
inc
out
push
in
pop
leave
iret
and
ss
in
movsl
sbb
arpl
ret
mov
and
pop
xchg
cld
add
push
in
cld
out
out
inc
add
add
bound
pop
jae
cmp
call
insb
pop
dec
loopne
cmp
scas
cmpsb
add
inc
loopne
and
mov
pusha
pop
add
add
lcall
loop
loopne
out
outsb
jno
add
js
lret
out
out
in
push
loope
sub
es
inc
add
add
in
fcompl
icebp
fwait
out
push
repnz
fidivrl
call
add
cmp
xchg
loope
loopne
in
or
xchg
std
fstl
or
in
add
pop
loop
and
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
jmp
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
nop
add
add
add
add
nop
add
add
cmp
int3
jge
int3
int3
or
in
push
mov
pop
mov
dec
inc
gs
ret
in
jp
push
out
xor
popf
jnp
xor
cmc
or
xor
cld
ret
mov
cmp
aas
jb
add
loopne
pop
mov
int3
ror
jnp
or
mov
jns
loopne
mov
add
std
js
in
call
dec
clc
mov
testl
mov
testl
ret
mov
or
dec
xor
cld
jle
repz
add
jmp
jnp
hlt
mov
je
inc
xor
hlt
bound
push
lock
inc
inc
ja
fcoml
sar
add
mov
repz
loope
mov
imul
mov
imul
xchg
sti
mov
cmpl
mov
int3
int3
test
int3
jge
int3
int3
or
in
orl
add
hlt
push
mov
shl
sub
insl
std
cmp
mov
jmp
add
mov
out
push
adc
insb
mov
jmp
add
out
adc
inc
roll
cmp
add
loop
mov
add
mov
sti
xorl
jae
jns
cld
mov
orb
out
mov
mov
clc
decl
lea
dec
mov
add
int3
int3
insl
cmp
int3
test
int3
int3
jge
int3
int3
in
js
mov
ja
inc
xor
mov
pop
pop
cli
cmp
int3
add
cmp
int3
insb
ja
mov
mov
push
inc
cmp
ror
cmp
int3
add
cmp
int3
insb
ja
or
imul
cmp
decb
inc
add
jns
clc
and
inc
cmp
clc
jmp
imul
ret
push
mov
or
lds
push
push
aad
mov
int3
in
jbe
push
jbe
sti
add
add
jmp
ja
cld
mov
insb
mov
daa
dec
adc
call
cs
mov
mov
and
je
mov
cmp
jmp
rorb
cmp
int3
test
int3
int3
jge
int3
int3
or
in
mov
sbb
adc
cmp
ror
cmp
int3
test
int3
int3
jge
int3
int3
or
in
orl
inc
inc
jg
add
sti
orl
testl
push
sub
inc
or
add
push
pop
mov
sarl
dec
cld
ret
cmp
sti
mov
mov
add
inc
mov
dec
lock
inc
mov
add
or
mov
push
clc
mov
lsl
jns
or
jns
or
mov
jne
or
cmp
out
ss
int3
mov
orl
inc
in
mov
add
ja
call
sarl
cmp
lock
test
add
add
lock
fisttps
dec
add
call
add
ret
mov
testl
adc
add
ret
hlt
pop
cmpl
in
pop
mov
std
push
mov
jae
inc
pop
je
or
mov
jmp
mov
inc
dec
jns
hlt
ret
mov
adc
push
mov
cmpl
in
or
insb
pusha
cmpl
je
cmp
mov
cmpl
add
jnp
sbbl
imul
push
rorb
mov
addr16
xorl
inc
test
mov
mov
ret
in
add
mov
sti
pushl
add
sarb
std
js
mov
shlb
jmp
clc
sti
xchg
pop
xchg
mov
test
ret
push
loopne
cmc
cld
call
jp
pop
cli
xor
int3
insb
jnp
or
addr16
incb
inc
cmp
clc
adc
cmp
clc
jmp
add
inc
cld
ret
push
ret
push
mov
pop
push
pop
int3
sti
mov
int3
jge
int3
int3
in
jp
mov
incl
push
inc
add
ja
add
inc
mov
ret
ror
xor
int3
insb
jns
orl
decl
mov
das
mov
jp
ds
mov
ja
hlt
mov
repz
xchg
jns
clc
ror
mov
mov
je
mov
cld
xor
xchg
and
dec
cmpl
jne
jns
clc
mov
or
push
push
jns
adc
ret
cmp
add
push
or
mov
inc
cld
movsb
cld
xor
and
call
in
inc
int3
int3
in
xor
int3
add
xor
int3
mov
or
lds
ljmp
add
fadds
add
lahf
cld
fs
sti
ljmp
mov
dec
clc
add
js
fsub
mov
dec
push
gs
hlt
lcall
aam
mov
mov
cmp
add
jecxz
or
cmp
decl
mov
add
aas
add
add
cmp
ljmp
sahf
incb
fs
jns
sub
cmp
add
cmp
enter
push
inc
add
ja
add
sar
cwtl
dec
push
inc
cmp
mov
shl
popf
movsl
arpl
xorl
adc
cmp
pop
mov
push
mov
arpl
mov
int3
jge
int3
int3
or
in
mov
idivl
inc
inc
out
add
hlt
imul
add
sub
xor
int3
std
xor
int3
mov
orl
jo
cmp
or
mov
xlat
mov
push
inc
decl
ror
mov
mov
or
push
fnstenv
xor
call
cmp
cld
or
call
mov
jmp
mov
ljmp
cmp
push
push
arpl
sarb
or
rorl
rorl
jge
les
inc
cmp
mov
sarb
inc
hlt
mov
fisttps
into
iret
add
pop
mov
out
orl
call
insl
and
push
shll
adc
mov
mov
mov
mov
sub
mov
icebp
lods
inc
rorb
or
mov
out
cld
pop
add
shl
push
add
xorl
dec
push
jge
sub
jne
in
push
push
cld
inc
popa
add
jns
lahf
cld
test
cli
lcall
jge
or
mov
push
inc
cmp
jae
mov
out
push
js
dec
incl
add
jmp
push
fdivr
das
cmp
mov
int
inc
fnstenv
or
lock
dec
push
inc
cmp
push
xlat
ljmp
cmp
mov
int
add
lret
mov
pushl
aas
push
ret
push
jecxz
cld
push
dec
pushf
aam
clc
decl
fadd
mov
mov
inc
pop
mov
ret
mov
push
mov
mov
push
inc
cmp
std
addl
or
push
flds
add
inc
sbb
fdivrs
mov
dec
popf
mov
fdivs
inc
cmp
inc
xor
add
inc
cmp
call
cmc
rcll
call
hlt
imul
pop
std
mov
pusha
mov
cmp
push
inc
cmp
ljmp
sar
ret
push
js
dec
mov
push
inc
cmp
std
xor
lahf
aam
sar
rol
idiv
add
loop
addr16
sar
sub
push
inc
cmp
std
cmpl
inc
test
call
fisttps
cmp
dec
sub
mov
lock
call
sub
lcall
les
cwtl
dec
push
inc
cmp
mov
mov
add
inc
cmp
loop
push
pop
mov
mov
roll
int3
int3
std
dec
int3
int3
mov
mov
mov
int3
int3
insb
mov
push
addr16
cmp
ret
push
clc
decl
add
mov
dec
int3
int3
in
mov
push
adc
add
lahf
cld
push
clc
decl
xchg
pop
std
mov
pop
mov
scas
imul
clc
call
mov
mov
int3
mov
lds
add
add
inc
inc
faddl
ret
cmp
add
je
add
cmp
lds
cmp
lock
add
call
mov
push
pop
std
add
aam
xor
push
inc
cmp
add
cmp
cmp
push
inc
cmp
cmp
in
or
add
cmp
add
mov
pushl
decb
inc
cmp
mov
ror
mov
push
inc
cmp
mov
mov
mov
fmull
aas
add
cmc
mov
cld
insb
sar
xor
push
inc
cmp
add
call
mov
jmp
ret
pop
add
clc
cld
adc
lcall
push
clc
decl
lea
mov
dec
mov
mov
aad
aaa
pop
std
xor
mov
mov
hlt
push
js
push
call
mov
push
xchg
xchg
and
inc
loopne
xchg
push
pop
add
clc
decl
add
mov
add
scas
mov
cmp
sti
push
xchg
xor
pushl
les
ret
add
add
mov
ret
add
cmp
loopne
or
xchg
data16
jl
add
cmp
jmp
cmp
xchg
xchg
inc
ret
out
jae
test
hlt
test
mov
cmp
add
ret
testl
cmp
mov
add
mov
xor
lahf
hlt
push
clc
incl
inc
xchg
xchg
jmp
xchg
in
mov
push
inc
cmp
push
inc
cmp
push
inc
cmp
testl
ds
lret
cmp
aas
add
add
mov
push
inc
cmp
push
call
mov
push
push
inc
add
scas
out
rcrl
test
rolb
xor
sub
cmp
add
sbb
push
clc
pushl
lahf
aam
clc
incl
pop
test
mov
push
inc
cmp
jecxz
jp
int3
int3
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
inc
add
jmp
cmp
jmp
cmp
fistpll
xchg
cmp
cmp
cmp
adc
cmp
cmp
cmp
xchg
ds
cmp
jle
mov
ds
aas
ds
aas
jmp
out
or
stc
aas
add
add
cmp
add
xor
xor
xor
insb
xor
dec
xor
xor
in
dec
xor
xor
xor
inc
xor
xor
repz
push
xor
mov
xchg
xor
xor
xor
xor
sbb
sub
sti
xor
mov
xchg
xor
in
xor
xor
xor
xor
xor
xor
or
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
xor
std
xor
sbb
jno
mov
mov
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
add
and
jmp
jmp
jmp
jmp
jmp
int3
jmp
