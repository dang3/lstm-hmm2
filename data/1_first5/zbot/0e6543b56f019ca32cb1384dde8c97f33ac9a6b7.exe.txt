push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
movl
movl
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
je
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
push
push
call
test
jne
mov
jmp
jmp
call
xor
mov
pop
ret
push
mov
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
mov
push
push
call
push
call
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
xor
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
mov
pusha
movl
movl
call
test
je
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
popa
push
mov
mov
sub
mov
mov
ret
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
shr
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
movl
mov
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
mov
push
mov
push
call
add
sar
cmp
jne
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
lea
push
call
movl
jmp
mov
add
mov
mov
cmp
jge
cmpl
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
jmp
mov
add
mov
add
mov
mov
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
mov
mov
push
lea
push
call
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
mov
mov
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
mov
cmpl
je
mov
add
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
add
add
ds
add
push
pop
add
ret
xor
imul
xor
cmp
add
add
pop
mov
shll
cmp
andb
inc
gs
ds
fnstsw
pop
add
sub
add
pop
add
add
xor
imul
push
xor
imul
xor
push
xor
add
adc
sbb
xor
imul
xor
push
mov
stos
cmpsb
xor
addr16
outsb
push
xor
outsl
arpl
outsl
xorb
xchg
xor
outsb
sahf
xor
outsb
mov
xor
outsb
out
jo
add
or
xor
mov
insl
aad
pop
imul
add
add
imul
ss
imul
subl
jo
push
ss
imul
mov
imul
cmp
aaa
push
push
aaa
push
push
aaa
aaa
push
aaa
mov
push
aaa
subl
push
pop
add
ds
add
ds
add
ds
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
ds
add
ds
add
ds
add
add
add
and
add
je
sub
arpl
aas
jb
sub
xor
add
bound
sub
push
sbb
add
xor
add
bound
sub
out
add
add
je
loope
jne
jecxz
popa
outsb
fidivl
gs
ds
add
jge
gs
mov
inc
imul
cmp
pop
add
jns
je
add
addr16
inc
imul
inc
ds
add
jns
je
pop
aas
jne
pop
adc
and
gs
ds
add
inc
pop
inc
add
inc
add
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
je,pt
in
xor
loop
jb
int
add
cli
xor
repnz
lahf
sub
mov
add
xchg
cmp
fwait
das
xor
push
pop
add
fwait
jbe,pn
mov
cs
add
arpl
insl
jae
daa
add
push
jbe,pn
dec
daa
cs
add
pop
cmp
dec
and
add
xor
je
cmp
inc
sbb
outsl
arpl
pop
add
lock
or
inc
sbb
outsl
arpl
pop
add
adc
insl
popa
out
or
add
icebp
adc
xlat
cs
xor
lret
cmp
xor
add
xchg
popa
jo
das
insb
outsl
popf
pop
add
xchg
cmp
mov
aaa
insb
insb
ds
add
jns
je
insb
xor
insl
cs
gs
sub
add
pop
add
negl
ds
add
mov
add
mov
add
ds
add
je
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xor
add
mov
scas
or
mov
push
cmpsb
pop
ja
scas
movsb
push
lods
xchg
push
outsb
test
push
jbe
cwtl
push
insl
outsb
pop
testb
xchg
push
pop
mov
int
ds
jmp
add
add
pop
mov
add
pop
lret
adc
adc
add
pop
jmp
add
pop
repnz
insl
jmp
push
ds
jmp
pop
aas
pop
jmp
xor
pop
jmp
adc
pop
jmp
add
pop
jmp
add
pop
jmp
xchg
aas
pop
jmp
sub
jmp
ds
jmp
add
add
pop
jmp
add
pop
jmp
jmp
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
pop
add
cmp
pop
add
pop
pop
add
out
add
out
add
xlat
pop
add
or
gs
pop
add
pushf
dec
add
xlat
dec
add
xlat
inc
add
cmpsl
pop
add
cmpsl
pop
add
xchg
pop
add
xchg
pop
add
inc
push
add
and
xchg
pop
add
addr16
add
add
push
inc
add
push
pop
add
addr16
add
addr16
add
pop
push
add
pusha
je
push
add
jg
add
pop
sbb
add
adc
add
inc
add
ds
add
mov
add
mov
add
hlt
add
mov
add
mov
add
mov
add
mov
add
fisttps
cs
add
add
sub
pushl
fiaddl
call
xchg
add
jmp
call
adc
mov
jb
icebp
testl
mov
divb
mov
add
repz
cmpl
pop
cmpsb
inc
adc
sub
std
sub
jbe
push
xchg
movsb
idivl
pop
jmp
mov
jmp
jno
add
pushf
mov
testb
mov
fsubrs
test
sbb
sti
sub
sub
jns
icebp
add
pop
jmp
add
pop
jb
inc
sar
mov
mov
cmp
jns
shl
push
mov
push
shlb
ja
in
add
iret
lea
mov
inc
mov
cmpsb
inc
ss
add
add
cmp
pop
add
cmp
dec
lea
es
inc
outsb
mov
push
and
jmp
insl
rclb
les
jmp
leave
fwait
jne
mov
or
push
inc
pop
bound
mov
rcrb
jo
mov
push
add
je
or
or
in
push
sahf
push
adc
pop
adc
add
cmp
call
pushf
jne
push
decl
cmp
mov
in
lea
push
cli
outsb
pushl
nop
jne
jo
or
push
pop
adc
pop
or
mov
jl
sub
sub
sub
push
popf
or
mov
in
sbbl
push
push
filds
xchg
adc
pop
clc
jb
fwait
incl
add
test
or
sub
xor
ret
cmpl
jne
mov
xor
ret
mov
xlat
inc
cld
addr16
add
ds
dec
or
je
jne
jb
jne
adc
mov
inc
push
leave
cld
xchg
orl
les
inc
pop
add
mov
aas
adc
mov
pop
add
pop
inc
pop
add
out
cli
imul
mov
mov
add
fldl
push
cs
push
cs
push
subl
add
ds
xrelease
lret
pop
sub
out
add
adc
pop
mov
mov
mov
js
ds
out
imul
add
cld
arpl
repnz
inc
repz
ss
lods
jmp
push
gs
xchg
adc
into
pop
jmp
add
in
push
push
add
pop
icebp
jne
pushf
out
cmp
jmp
xchg
sbbl
pop
lds
add
std
pop
clc
cmp
call
cmp
call
add
add
jmp
mov
andl
insb
inc
jmp
or
jne
mov
xchg
add
cmp
or
call
bound
mov
int3
or
lcall
pushf
or
push
in
cltd
cmc
add
pop
clc
jnp
pushf
call
cwtl
jne
gs
mov
cmp
adc
add
aam
adc
jne
cwtl
pushl
xchg
out
stos
mov
mov
and
out
popf
adc
push
sbb
adc
pushl
cmp
repnz
out
push
xchg
cmpb
push
pop
mov
pop
sub
push
popf
or
xchg
pop
in
andl
pushl
cmp
loop
push
incl
add
xchg
out
test
decl
cmpsl
push
or
mov
incb
les
mov
cld
imul
out
les
pushw
decl
inc
or
lods
add
mov
sub
lret
ja,pt
in
lds
adcl
testl
jae
fcmovnbe
repnz
or
add
into
cld
mov
test
add
mov
leave
out
decb
fstpt
jl
add
addr16
mov
fiaddl
sti
pop
in
mov
stc
push
orl
jmp
push
mov
pop
add
clc
mov
sub
cmp
adc
add
jb,pn
add
mov
xchg
sbb
cmc
add
pop
ds
pop
ds
pop
ds
jmp
fucomi
test
add
sub
jns
adc
leave
xchg
es
pop
jmp
sti
les
dec
cmpsb
sub
jmp
mov
arpl
cmp
fdivrs
cmp
jae
cmp
out
inc
push
xchg
lcall
add
imul
jmp
fs
lcall
andl
je
ret
mov
xchg
addr16
jo
xchg
lods
jmp
xchg
jne
add
fists
push
imul
fsts
or
ss
mov
scas
push
push
mov
fld
clc
push
add
mov
add
adc
lea
xchg
push
xchg
mov
xchg
push
imul
clc
mov
in
push
adc
ja
jne
iret
dec
cld
jmp
sub
inc
adc
pushl
mov
cld
nop
or
fistps
mov
or
xchg
outsb
add
jne
add
and
or
stos
xchg
out
ds
in
incl
or
in
jne
pop
mov
xchg
addl
add
jns
jne
mov
cld
out
shr
incl
cld
fiadds
xor
jbe
es
fldl
sub
jae
jne
adc
es
in
call
mov
js
add
add
in
decl
int3
inc
add
sti
out
dec
in
jmp
jne
pop
adc
xchg
push
pop
cmp
lods
incl
xchg
xchg
sti
mov
add
jle
imul
mov
in
add
out
xchg
into
jno
sbbl
popa
xchg
adc
in
call
xlat
pop
cmpsb
jno
xchg
adc
add
and
xor
icebp
fstpt
pop
loope
dec
outsb
jmp
push
gs
lds
shr
movsb
out
ds
jmp
push
flds
add
cmc
cmp
jmp
es
jne
xchg
xchg
stc
push
movsl
loop
adc
jg
jmp
movsb
push
clc
cltd
jmp
call
jo
xchg
pop
add
sbb
cmp
js
ret
mov
pusha
enter
lcall
js
lahf
and
leave
stos
xor
les
adc
add
push
outsb
mov
sub
pop
add
dec
push
outsb
arpl
jne
incl
outsb
sbb
sbbl
insl
clc
jecxz
jne
das
add
mov
clc
add
out
add
xchg
pop
add
test
not
push
sbb
call
js
imul
jno
jne
jg
sti
js
ror
pop
add
popa
outsb
ror
pop
add
sub
out
fiadds
add
pop
lea
daa
pushl
mov
sti
mov
adc
sarl
inc
xchg
incb
mov
sbb
sub
add
sub
sub
dec
movb
jl
mov
cmp
mov
sbb
in
sbb
sub
mov
mov
jne
pop
in
ds
mov
inc
movsl
outsb
clc
push
pushf
or
test
jne
lods
shr
ds
jne
pushf
sar
inc
mov
ret
dec
mov
add
lea
push
incl
add
test
test
lods
jnp
ds
jmp
fcmovnbe
xchg
push
call
imul
cld
xchg
pop
insl
xchg
pop
jmp
outsb
mov
jnp
aas
pop
push
inc
pop
jmp
pop
jmp
call
cmp
push
in
ds
push
ljmp
in
mov
add
add
cmp
dec
pop
shl
mov
cmp
pusha
inc
lea
push
inc
xchg
add
mov
sti
sbb
add
lea
gs
dec
test
mov
adc
pusha
fmuls
xchg
mov
cs
cmp
mov
or
mov
xor
pop
add
mov
mov
jmp
add
mov
xchg
jmp
hlt
xchg
pop
mov
push
add
mov
pusha
push
or
addb
stos
inc
mov
loopne
icebp
fildl
jmp
add
leave
ret
push
mov
sbb
mov
nop
mov
js
push
es
add
pop
mov
rep
adc
ret
push
mov
add
js
repz
adc
leave
push
test
push
or
push
push
or
or
sbb
adc
push
adc
test
cmpsb
insb
shlb
pop
push
pop
leave
xchg
xchg
call
add
sbb
push
lcall
add
jne
iret
out
call
add
or
cmp
add
je
adc
or
loop
data16
jns
add
dec
cmp
ds
mov
cmp
and
pcmpeqb
cmp
dec
mov
sub
mov
add
ljmp
leave
cwtl
xor
inc
leave
jl
add
mov
push
jno
cld
pop
mov
jnp
arpl
aas
add
aaa
call
mov
jg
inc
inc
je
add
pop
jb
add
dec
jle
out
mov
lods
jnp
fisubrs
adc
call
mov
mov
xchg
mov
lods
jnp
jno
es
lahf
loop,pt
mov
outsb
add
mov
dec
enter
mov
xor
push
dec
es
sub
mov
mov
or
inc
cmc
xchg
sub
mov
xlat
mov
mov
das
xchg
xlat
and
add
push
mov
movnti
loopne
adc
lock
cmp
jae
mov
mov
popf
sbb
jmp
popf
rolb
sbb
mov
jbe
push
clc
outsb
xchg
fcoml
xlat
push
fisttpll
jmp
in
aad
jmp
mov
test
pushf
mov
mov
add
popf
mov
popf
push
clc
je
jns
pushf
sub
negl
push
call
push
cmp
cmp
sti
pop
call
mov
or
and
pushl
call
and
jl
clc
mov
jl
or
fld
pop
ficomps
in
andl
push
mov
push
movl
add
out
add
sub
cmpl
jne
dec
pop
add
cmpsl
js
sbb
add
in
add
int
lret
add
sbb
cld
push
movsl
cmc
repnz
pushl
jae
jmp
ds
jno
add
inc
hlt
out
sub
lret
mov
or
mov
test
jne
inc
mov
add
je
cmp
faddl
icebp
std
mov
mov
lcall
rol
fucomip
jno
add
xor
sbb
std
mov
sub
inc
dec
jns
je
push
push
clc
shll
insb
sbb
movl
fs
aas
or
mov
bound
xor
adc
loopne
push
push
add
cmp
mov
cmp
mov
lea
fcompl
aas
pop
jmp
push
ljmp
insl
ds
idiv
psubusw
imul
ss
loope
test
lds
pop
add
lds
jmp
push
dec
fdivrl
adc
mov
subb
mov
loopne
mov
pop
pop
ret
adc
mov
add
lods
sarl
mov
adc
jb
sbb
fwait
ljmp
pop
add
loopne
pusha
sbbl
jns
call
stos
dec
pop
push
bound
sub
out
add
or
jb
add
push
add
cmp
jmp
sarl
jmp
cmp
inc
cmp
adc
add
daa
call
jb
test
insb
jae
push
inc
pop
call
jge
add
pop
leave
and
mov
loop
add
popf
inc
or
cli
or
or
push
ljmp
mov
fdivr
dec
imul
leave
push
add
iret
sbb
lods
mov
pushl
dec
call
add
add
push
push
call
data16
pop
mov
push
add
jne
outsl
mov
pushl
ret
pop
pop
lcall
pop
movsb
push
push
ds
lods
sti
mov
xor
call
jmp
ljmp
sub
sarl
add
jmp
pushl
rol
fnsave
popf
imul
add
sub
add
and
dec
jg
call
inc
ss
fdivrl
add
inc
inc
jg
imul
lods
sbb
je
xor
rcr
sarl
je
or
aad
add
cmc
sbb
sub
inc
stos
pop
lret
jmp
mov
push
loop
adc
sbb
or
fwait
ds
jmp
or
cmc
call
add
add
cmc
jmp
imul
icebp
jmp
js
add
mov
loop
push
mov
add
ret
call
lret
cld
push
jmp
inc
ss
test
add
xor
ds
jmp
fcoml
inc
cwtl
fistpl
add
mov
add
push
add
mov
xchg
push
mov
xor
add
add
hlt
call
gs
jmp
pop
sub
loopne
fmulp
pop
cld
xor
xorb
pop
or
jecxz
add
dec
fwait
jne
adc
cld
rcrl
jmp
enter
clc
push
add
outsl
push
jb
dec
push
xor
jae
subl
push
pop
push
gs
add
add
mov
xchg
add
pop
mov
out
pop
push
dec
call
mov
pop
push
lods
pop
push
mov
push
add
daa
sub
mov
push
or
jp
add
sbb
or
pop
call
pushl
mov
pop
pop
movl
lods
push
pushl
mov
add
popf
add
mov
pop
inc
or
or
pop
sahf
xchg
or
mov
inc
or
xor
push
or
arpl
add
inc
push
add
mov
push
call
cmc
dec
lds
mov
jecxz
sbbl
dec
pushl
je
jno
pop
divb
add
mov
outsb
cmp
jno
add
add
jb
cmp
ds
out
jae
dec
inc
ds
gs
sbb
roll
je
add
std
xor
mov
mul
out
loope
data16
mov
lods
xlat
outsb
repz
roll
push
js
add
pop
jmp
jmp
ds
es
outsb
push
flds
add
jmp
add
pop
addl
fsub
call
mov
sub
mov
fdivrs
or
add
pop
jmp
inc
repz
adcl
dec
sarb
pop
add
mov
outsb
jmp
sub
lcall
test
cmp
jnp
add
xchg
iret
test
jge
cltd
adc
jle
or
pop
add
lods
sti
push
xchg
push
shr
mov
jmp
ss
jmp
scas
jb
jno
call
inc
cmc
mov
and
sbb
jl
mov
jge
add
add
out
cli
add
movsb
or
jmp
cmpl
add
push
cmp
roll
push
jg
loop
xlat
dec
lea
xlat
movsl
mov
add
jg
mov
inc
movsb
call
ljmp
jnp
call
cmp
lea
pop
outsl
fsub
addr16
inc
push
loop
cld
out
jo
push
mov
outsl
mov
lock
call
add
add
movsb
jp
out
pushl
in
mov
ljmp
ljmp
add
out
rcrl
outsl
shlb
push
or
call
mov
sub
call
popa
out
xchg
imul
push
mov
jmp
out
imul
aad
add
xchg
test
outsb
testl
add
repz
pushl
lea
test
shrb
xchg
aad
out
mov
and
outsb
inc
aad
jg
aad
cmpl
fimull
pushf
call
add
jmp
dec
mov
jp
or
cmpl
cltd
jp
in
add
mov
jb
aad
pop
mov
loopne
jp
jmp
jl
add
call
jb
mov
xor
lahf
cmp
shll
or
call
sahf
mov
sbbb
jp
daa
add
add
sbb
mov
sbb
and
add
ret
fdivl
dec
mov
cld
pop
leave
sub
ffree
xor
inc
and
testl
xchg
inc
jp
icebp
out
call
pusha
and
out
pop
cld
jmp
das
mov
sub
xchg
bound
arpl
loopne
clc
add
pop
add
and
ds
adc
subl
add
add
mov
mov
clc
inc
clc
dec
mov
or
xor
inc
add
mov
xchg
imulb
or
xchg
nop
movl
enter
pop
xor
push
lea
das
int
ljmp
clc
idiv
shlb
inc
pop
add
rcr
and
jae
lock
mov
rcrb
int3
cmp
add
xor
push
addb
sub
add
sbb
push
es
add
insl
ret
je
enter
test
pop
ds
fsubrl
out
pop
add
addl
leave
cld
jge
push
mov
xchg
mov
xor
test
xor
mov
inc
shlb
inc
pop
cld
mov
sti
out
push
sar
jns
repz
add
insl
shlb
dec
movsl
or
adc
pop
pop
mov
push
pop
out
jl
jmp
xor
sbb
leave
add
lret
bnd
stos
pop
push
sub
adc
and
mov
lock
ja
shl
jbe
je
lds
and
ljmp
jmp
xor
and
inc
pop
pusha
or
add
pop
xchg
sub
mov
mov
pop
xchg
inc
negl
jmp
shl
les
lcall
add
jne
out
cmc
add
inc
add
std
pop
call
inc
adc
inc
jmp
cmp
push
adc
and
in
call
jge
push
xchg
add
and
jbe
cltd
dec
sub
add
mov
pop
call
roll
dec
test
subl
mov
pushf
sbb
rcrb
arpl
and
add
mov
pop
je
fnstcw
das
lret
add
add
pop
jecxz
add
pop
inc
orb
in
cltd
leave
ret
push
mov
add
sub
or
pop
pop
add
jg
call
pop
cmpsl
mov
insb
adc
mov
pop
jmp
mov
or
lret
arpl
or
adc
movsb
ficoms
stos
sbb
pop
pop
shlb
mov
pop
dec
rclb
ds
mov
into
testl
std
lods
push
nop
add
lret
jnp
cmpl
add
jl
dec
or
add
rolb
jg
dec
or
je
cmp
nop
cmp
repnz
or
dec
je
cmp
loopne
roll
ret
call
cmc
icebp
sub
jge
jp
or
mov
mov
repz
mov
loop
add
scas
pop
mov
into
jns
insb
mov
push
bound
pop
jb
sub
xlat
das
pop
scas
xlat
add
scas
repz
je
xchg
jns
cltd
push
mov
jns
xor
fs
adc
lea
jmp
inc
xorl
pop
loop
jae
xchg
jb
jmp
add
call
push
test
add
pop
jmp
inc
mov
dec
fcompl
jmp
xchg
loopne
cmp
mov
cmp
pop
or
imul
jmp
cmp
add
mov
add
fimuls
or
sbb
pop
add
inc
repnz
sub
jb
loop
out
inc
mov
inc
jmp
add
or
addl
cwtl
idivb
xchg
jbe
arpl
or
push
mov
insb
xchg
jo
dec
pop
pop
push
xchg
adc
push
adc
push
pop
leave
in
pop
lahf
call
mov
sahf
jne
cmp
or
shlb
decl
outsl
xor
add
jb
jne
add
mov
stc
movsb
call
fmul
in
dec
movsb
call
mov
inc
leave
ret
push
mov
movsb
call
or
shlb
pop
push
add
xchg
rorb
xchg
pop
cmc
sbb
fidivrl
addb
test
sub
xor
push
es
add
sbb
fnstsw
cmp
dec
testb
add
aas
addb
mov
incl
out
pop
pop
jmp
push
js
decl
mov
mov
jbe
add
ret
mov
fmull
mov
call
in
lret
jo
push
out
sar
rcll
jne
push
fsubl
inc
fwait
aad
mov
push
fcmovnbe
orl
add
mov
inc
xchg
jae
dec
cld
xchg
mov
sub
jo
iret
push
in
add
sub
or
dec
push
orb
outsl
bound
lea
shll
mov
shrl
pop
jmp
dec
push
fucomip
fistl
movsb
sbbl
cld
arpl
cs
push
jge
add
xchg
repz
push
add
push
andb
call
adcb
out
imul
or
stc
xchg
mov
jae
jmp
orb
out
jnp
xchg
out
out
aaa
out
inc
ljmp
adcb
cmp
ret
add
rorl
adc
fld
lds
cmp
jmp
lret
and
cmp
push
xchg
dec
es
add
dec
rcrb
or
dec
rol
or
add
mov
call
pushf
cltd
je
call
iret
lea
daa
call
dec
cltd
je
sbb
push
pop
add
lret
inc
setne
mov
jae
jae
scas
inc
lock
insb
movb
add
pop
adc
push
adc
lea
jnp
push
add
ljmp
or
data16
mov
jp
jne
or
fidivrl
cmpb
cmp
or
cmpsl
jp
cltd
scas
sti
out
cmp
rcr
inc
add
mov
sti
dec
data16
add
stos
mov
mov
sar
add
ds
std
sub
mov
pop
add
pop
clc
xchg
push
add
add
and
movsl
imul
fldcw
cli
mov
add
pop
ds
hlt
insl
insb
cld
test
add
add
fildl
add
adcl
lds
jmp
jns
lock
cwtl
in
add
loopne
sbb
fdivrs
out
sbb
sub
cmp
call
dec
ss
test
xchg
dec
cwtl
push
inc
push
clc
or
jmp
in
ljmp
add
xor
cmp
icebp
out
xchg
sti
or
adc
sbb
cld
aad
lahf
mov
imul
push
add
ja
mov
cmp
push
pop
scas
aam
or
push
and
mov
push
sub
daa
or
jl
add
push
mov
add
jnp
ljmp
dec
jbe
imul
add
ljmp
in
jb
cld
jbe
or
or
popa
andb
pop
pop
sub
xor
popa
cmp
push
xor
repnz
inc
jb
popa
inc
ja
push
inc
add
adcb
jbe
or
push
push
sub
imul
pop
test
leave
ret
shl
arpl
stos
lods
and
add
add
fidivl
aad
add
pop
pop
test
ss
push
iret
add
sub
clc
jb
mov
add
fsts
add
inc
std
add
ret
mov
in
sbb
push
imul
ret
jne
push
into
inc
push
pop
push
dec
out
aas
ds
int3
lods
inc
add
xchg
add
add
dec
inc
jb,pt
or
jno
jne
pop
les
xor
faddl
lcall
in
fisttpl
push
push
xchg
shlb
xchg
add
jb
inc
ss
jmp
dec
or
movsb
pop
inc
add
xor
xor
push
test
fdivrl
pop
push
fs
or
je
adc
add
out
xchg
ret
and
mov
jno
mov
outsl
roll
in
pop
ret
mov
aaa
pusha
aam
mov
dec
insb
dec
mov
fwait
ret
mov
aaa
inc
repz
lcall
cmp
std
fidivrl
pop
bnd
rcrl
ret
add
jo
add
cld
lock
js
fdivrp
lock
roll
pop
mov
add
adc
mov
push
sbb
pop
clc
sbb
adc
cmp
loop
sub
jge
add
push
fidivrl
jmp
les
inc
jmp
jp
leave
sub
adc
les
hlt
es
xor
jmp
inc
jae
xor
pop
addl
pushf
je
add
popa
pop
add
sahf
fmulp
and
jmp
mov
icebp
lcall
or
je
jg
dec
inc
out
test
mov
push
flds
out
rorb
lahf
add
xlat
xchg
test
inc
fwait
incl
cmpsl
pop
add
and
pushl
lock
pop
dec
out
mov
mov
cvtps2pd
add
pminub
add
push
lcall
in
sub
je,pt
call
inc
xor
jns
mov
push
push
sbb
mov
inc
ds
cld
stc
xchg
shlb
mov
jb
add
pop
mov
enter
push
movsl
add
ficompl
add
add
jb
shlb
cmpb
xchg
dec
xor
aam
mov
jmp
sbb
jmp
lods
lock
pop
jmp
lods
data16
jmp
cmp
daa
ds
insb
mov
idivb
sub
nop
mov
add
pop
mov
or
ret
add
xchg
adc
std
or
mov
or
push
jo
sub
ret
shrb
ds
je
sti
pop
jmp
mov
sbb
ljmp
and
mov
xor
jnp
pop
add
cmp
arpl
mov
cmp
out
cmp
inc
xchg
xchg
out
adcl
mov
cmpsl
cmp
push
sbb
add
jne
fucomi
pop
fs
push
shll
add
shll
dec
outsb
movsl
jnp
xchg
ret
or
aaa
jae
push
sbb
in
loopne
stc
dec
mov
pop
jb
push
mov
xor
xor
std
roll
fs
rol
pop
ret
mov
clc
and
add
insb
clc
roll
mov
scas
add
popf
ret
mov
cli
in
lea
pop
dec
or
pushf
adc
fst
cli
xor
jp
xor
rcrb
aam
or
xchg
inc
add
dec
movsl
xor
add
xor
push
pop
scas
enter
popa
inc
rol
pop
ret
mov
clc
and
imul
adc
movb
ds
inc
add
addr16
jne
mov
mov
lea
or
dec
ss
adc
dec
loopne
or
jae
inc
xor
sbb
xor
mov
xor
jg
out
subl
in
jns
ret
lds
idiv
mov
adc
push
add
jne
mov
movsl
mov
ret
pop
test
pop
sub
das
pop
xor
xchg
mov
shr
pop
and
bound
or
cmp
cmpsl
repz
out
push
std
roll
divl
cmp
mulb
into
push
adc
jmp
adc
shll
add
cli
mov
jge
mov
js
test
dec
pop
mov
aam
mov
mov
adc
pop
jp
stos
adc
sub
lret
stc
je
pop
bound
imul
in
pushf
mov
and
lea
sbb
add
sar
fimull
int
testb
xchg
add
cmp
add
mov
xor
and
jecxz
mov
jmp
fldl
mov
jmp
and
aas
add
out
pop
inc
cmc
cld
fwait
add
fiaddl
lahf
lea
push
push
sub
xchg
or
push
sar
xor
aad
movhps
cmp
add
es
add
fcompl
cli
rol
pop
enter
add
push
cmp
pop
out
ss
inc
dec
lcall
and
and
and
lea
push
push
cmp
into
clc
xor
aam
in
add
or
mov
add
cmpsl
nop
mov
pop
stos
pop
pop
inc
cmp
pop
add
mov
hlt
cli
sbb
idiv
add
adc
clc
addr16
jno
mov
mov
lea
push
add
inc
xor
or
push
mov
jno
sbb
mov
add
mov
xor
notl
add
add
inc
hlt
cwtl
cmc
add
rclb
mov
push
sub
mov
ljmp
cwtl
bound
ret
testb
sub
inc
pop
sbb
addr16
gs
sbb
dec
sub
dec
ljmp
bound
dec
shll
xchg
fiadds
pop
shl
repnz
pop
sub
mov
mov
cmp
cmp
jb
sub
movb
push
mov
and
dec
add
int3
popa
lea
sti
dec
inc
jecxz
dec
fldl
iret
cli
mov
test
popf
add
cmp
mov
popa
xor
pop
das
sub
sub
sbb
shrl
add
ret
jb
daa
stc
fiaddl
andb
xor
shlb
mov
mov
nop
mov
mov
test
add
decl
mov
sbb
out
sbb
mov
in
xor
pop
fildl
cmp
sub
add
rol
pop
ret
mov
clc
xor
loop
pop
add
add
xchg
test
rcll
rcr
push
xor
je
lea
pop
dec
cmp
push
adc
or
dec
clc
lret
outsl
gs
jnp
add
sbb
mov
xor
loope
pop
arpl
std
sar
add
mov
mov
jmp
push
mov
jmp
rorl
add
call
mov
psubusw
stos
cmp
push
add
leave
mov
mov
rolb
lahf
int
add
add
cmp
xorb
mov
pop
gs
inc
add
loope
mov
sbb
mov
scas
mov
addr16
add
nop
addr16
inc
pop
cltd
jae
pop
mov
lods
or
popf
mov
sbb
push
test
mov
xor
not
aam
fisubs
lock
sub
xor
sbbl
scas
sub
test
pop
rcrl
jecxz
sbb
push
jge
es
pop
fisubrl
out
cmc
mov
add
sbb
sub
xor
add
lea
out
int3
mov
repnz
adc
inc
cld
add
inc
sbb
testb
mov
movsl
arpl
cli
mov
push
das
cmp
add
in
mov
repnz
sub
dec
add
cmp
push
lods
push
lcall
mov
add
dec
cmp
sub
jnp
add
int3
push
lcall
mov
clc
pop
mov
mov
add
push
rol
pop
lret
or
or
and
lea
pusha
pop
and
and
or
arpl
pop
fistpl
or
mov
call
or
bswap
or
pop
pop
test
pop
add
inc
adc
or
lods
mov
and
clc
push
leave
scas
movl
or
adc
lea
pop
and
and
mov
adc
lea
inc
mov
hlt
lret
leave
add
test
hlt
sgdtl
lea
mov
in
add
xorl
inc
xchg
jg
je,pt
inc
fistl
addl
adcl
call
mov
push
jl
mov
les
jle
add
loopne
push
out
fisttpl
in
les
pop
mov
add
push
rcrl
movb
add
mulb
add
ds
bound
cmp
jecxz
fucom
pop
inc
ds
stos
sub
loope
call
arpl
add
add
mov
mov
idiv
js
jg
pusha
sbb
out
add
mov
add
cli
sub
jp
daa
add
xor
dec
and
mov
loop,pt
inc
mov
jmp
inc
ds
sbb
lcall
sbb
in
add
out
popf
cmpsl
pop
inc
loop,pt
push
mov
jmp
mov
add
add
fwait
cltd
push
inc
mov
ret
add
filds
and
in
jmp
mov
arpl
pusha
cmp
xchg
pop
sbbb
repnz
inc
lcall
cwtl
filds
je
in
jmp
xor
pop
ja
pop
xor
mov
mov
cwtl
jge
add
test
into
bound
lea
xchg
fiaddl
int3
dec
inc
lea
fiaddl
enter
adc
inc
clc
mov
cmp
mov
shlb
popa
cmp
add
ret
lea
pop
inc
clc
loop
js
sub
lcall
jmp
push
ret
add
add
jmp
in
dec
add
inc
mov
shl
lea
add
pop
mov
jne
rolb
ds
push
mov
mov
jge
add
decl
sarl
mov
jns
cmp
cld
pop
xchg
loope
xor
jl
ds
inc
clc
cmp
sbb
jle
mov
ret
add
lods
mov
add
add
add
or
mov
out
inc
ret
add
xchg
mov
inc
add
ss
sbb
lods
jne
rolb
inc
scas
roll
pop
ret
ljmp
fwait
pop
inc
ds
cld
inc
lret
fwait
jmp
inc
ds
scas
aas
pop
mov
jg
jb
ss
in
push
add
mov
cmpsb
jb
sbb
icebp
fwait
pop
and
add
push
pop
cld
loope
scas
add
fs
stos
loope
rclb
lds
cmp
xchg
stos
roll
in
mov
mov
push
scas
lods
mov
add
movsl
and
jmp
inc
inc
bound
lds
decl
inc
add
pop
cmp
inc
cmp
pop
mov
popf
repnz
pop
add
enter
sub
repz
jmp
test
pushl
insb
out
dec
and
lds
ret
inc
aad
imul
ret
jmp
ret
jge
pop
add
and
xor
sbb
jmp
add
xor
cmpl
jne
dec
push
add
xchg
movsb
pop
leave
and
inc
mov
push
add
adc
jp
add
mov
sub
push
jge
pop
jne
mov
add
out
add
pop
int
pop
fmull
ret
lods
mov
xchg
push
hlt
loopne
pushl
roll
pop
std
incl
pop
out
test
xchg
add
add
pop
add
rolb
lea
je
add
jbe
mov
test
call
mov
cmp
jne
jno
jmp
faddl
add
inc
mov
mov
sar
sub
push
insl
das
or
mov
jmp
cmp
je
ljmp
add
or
or
movb
aas
mov
cs
jmp
ret
jle
leave
ds
jg
jne
roll
mov
pop
cmc
jl
shr
aas
loopne
test
cwtl
test
test
pop
xchg
pop
dec
jbe
cli
push
add
ljmp
test
xchg
mov
dec
lcall
add
bound
cmp
cld
icebp
movl
test
popa
sub
cmp
xchg
orb
ja
mov
icebp
add
inc
ljmp
fisubs
dec
push
rol
icebp
fwait
push
push
add
cmp
inc
sub
cmp
loopne
in
imul
in
lcall
loope
or
in
push
rolb
push
in
pop
jne
cld
aas
add
jne
cltd
bound
leave
sub
push
jb
fadd
xor
xchg
ret
cmp
xor
ss
lods
fstps
jmp
xchg
imul
cltd
mov
pop
inc
push
out
je
mov
mov
xor
fdivrs
add
add
or
push
pusha
outsl
cwtl
cmp
hlt
decb
add
xor
jno
push
outsl
add
push
push
pushl
hlt
je
out
lret
decl
fstpt
add
add
dec
adc
stc
pop
pop
jbe
bound
add
add
das
xchg
decl
lret
shlb
hlt
pinsrw
add
or
push
hlt
ds
lock
xor
jne
or
hlt
shll
add
add
xor
cmp
jb
ljmp
lock
into
test
push
inc
hlt
das
ss
sbb
icebp
jb
call
cmp
mov
dec
xor
mov
cmpsb
push
mov
adc
xor
push
fdivrl
clc
mov
xor
dec
push
adc
cmpsl
call
insl
cmp
lods
push
xor
stos
jno
les
or
mov
add
ds
add
js
cmpsb
add
scas
xchg
pusha
nop
dec
xchg
js
push
rorl
pop
jo
xchg
pusha
sbb
and
movsl
inc
stos
ret
dec
push
fildl
add
inc
jmp
stos
ds
mov
inc
iret
xor
xor
cmpsb
sub
sub
int
dec
loop
mov
or
scas
add
jno
pushl
jne
popf
lods
xor
cli
ret
add
jmp
rorb
mov
lods
or
jl
pushl
test
mov
push
add
aaa
andl
add
scas
push
ror
mov
leave
cmp
dec
jmp
inc
push
push
and
call
sahf
mov
cmp
xchg
fidivrs
popf
rolb
push
dec
jmp
cmc
popf
rcl
pop
add
xchg
incl
and
pop
out
pushl
in
inc
shl
bound
cmpsl
mov
out
subb
xlat
cld
je
out
test
add
loopne
rclb
pop
add
call
pop
add
mov
orb
sbb
add
add
fadds
sbb
sbbb
cmp
pop
add
addr16
test
add
pop
pushl
test
inc
and
aam
add
add
stc
call
lea
xor
stos
add
imul
out
xor
or
cmp
and
xor
mov
dec
pushl
mov
leave
ds
les
and
add
lret
inc
hlt
push
add
mov
movsl
pop
mov
ds
jne
popf
pop
mov
add
cmp
ret
jne
cltd
hlt
mov
stc
mov
xor
sahf
adc
mov
cld
adc
add
iret
cmp
mov
cmp
fisubs
aam
into
mov
negl
in
add
rol
test
bound
push
test
add
pop
jmp
add
pop
je
subb
or
add
outsl
mov
ds
imulb
push
iret
dec
stos
lock
inc
mov
es
adc
inc
pop
and
push
add
mov
add
cmp
inc
push
cmpl
inc
jne
movsl
popf
leave
jmp
cmp
pop
lods
push
insl
sbb
test
pop
add
add
mov
push
xchg
xor
call
inc
imul
aad
fdivrl
rolb
pop
adc
cmp
inc
mov
xchg
jmp
add
movl
in
rorb
popl
sbb
fsubrs
push
add
pusha
xchg
hlt
decl
pop
add
out
add
add
out
out
imul
jae
cmpl
jne
out
cli
jmp
push
add
or
mov
sbbb
les
xchg
enter
shlb
xlat
add
mov
push
add
ljmp
add
popa
repz
jl
les
xor
add
or
jnp
movb
push
add
jno
hlt
add
sbb
add
ret
out
push
xchg
xor
add
rcrb
jns
add
pop
push
mov
das
stos
mov
xor
decl
pushf
jne
adc
mov
add
mov
ds
adc
mov
add
or
stos
sti
xchg
pushf
or
add
sbb
inc
mov
aas
push
call
popa
pop
fcompl
push
add
add
stos
push
pop
mov
push
push
movsl
inc
popf
cmp
pop
cmp
clc
subb
pushf
repz
in
pushf
mov
add
push
or
jmp
push
and
adc
out
cwtl
pushf
imul
xchg
xor
cltd
roll
mov
cwtl
sbb
add
and
pushf
test
and
pushf
cltd
popa
stos
jo
xchg
pushf
add
mov
push
xchg
stos
xor
bound
pop
mov
andl
mov
add
inc
jae
rclb
inc
sahf
sbb
jmp
mov
or
xor
clc
push
push
aas
call
loop
sbb
dec
imul
mov
xor
xlat
movsl
inc
mov
add
movsl
cld
shrl
add
aam
or
outsl
daa
ljmp
orb
shrl
lods
xor
mov
in
push
dec
push
add
push
hlt
pop
push
pop
leave
ret
lcall
je
fnstcw
push
sbb
cli
das
jne
hlt
jo
jne
in
or
push
call
pop
sbb
add
shr
addl
ret
je
fnstcw
dec
push
ljmp
jne
repz
lock
jne
in
or
dec
xlat
incl
mov
ljmp
call
mov
cmpl
add
data16
cld
mov
lock
mov
or
sub
je
mov
cld
ds
ljmp
xor
clc
push
mov
jne
jne
adc
call
lcall
push
mov
in
or
ljmp
stos
xchg
xor
add
sbb
or
loopne
pushl
xchg
add
jne
jne
pop
xchg
inc
jo
sahf
or
sti
dec
cmp
nop
jle,pt
add
jle
lret
ds
repnz
enter
ds
cmovbe
aam
xor
xor
mov
mov
dec
xor
mov
cmp
mov
fisubl
lea
cltd
imul
or
testb
pop
pop
inc
rol
icebp
stos
in
cwtl
xor
xchg
mov
stos
int3
sbb
mov
add
push
shlb
pop
adc
xor
sbb
cmp
loop
push
shl
lcall
xchg
cmp
call
bound
leave
sub
cmp
ret
jne
cmp
mov
pop
add
cmp
sbb
addl
clc
xor
cmp
xor
or
cmp
sub
add
push
fisubrs
dec
call
ret
stc
add
add
jb
call
mov
lahf
fsubrs
add
in
pushl
out
sbb
in
test
in
mov
mov
add
into
fnstcw
bt
add
rcll
adc
push
test
add
daa
pop
add
cmp
add
push
shlb
lret
add
push
lea
dec
lcall
xor
or
add
fnstenv
add
mov
adc
movhps
fs
call
adc
pop
mov
ret
xchg
lea
add
dec
xor
aam
cmp
xchg
jne
mov
repnz
and
or
push
mov
decl
dec
and
mov
xchg
mov
inc
stos
adc
mov
xchg
jo
call
pop
rorl
scas
adc
out
mov
cmc
stos
dec
push
mov
xchg
cltd
cmp
lods
notl
sbb
add
subl
xchg
inc
inc
in
xchg
jmp
sbb
push
cmp
cld
adc
mov
sub
jmp
inc
xchg
sub
ret
insb
les
aaa
xchg
adc
es
lret
xchg
push
cld
sub
cmp
cmp
lods
dec
adc
xchg
negl
fnstsw
pop
lcall
jne
stos
scas
or
add
dec
arpl
push
enter
jg
add
inc
cmp
inc
inc
xchg
stos
cmp
test
mov
cmp
scas
sbb
xor
aaa
mov
incl
je
adc
adc
jmp
dec
dec
call
sub
push
pushl
cmp
mov
cmp
mov
or
push
cmp
movsl
add
push
add
lret
add
shlb
data16
repz
je
aas
stos
jmp
test
xlat
jae
in
and
lock
imul
cmpsl
fldl
push
or
stos
pop
add
xchg
loope
scas
sbb
add
dec
imul
shlb
push
cmp
pop
je
loopne
adc
and
fildl
add
int3
adc
in
sahf
add
addr16
das
and
pushl
mov
lock
cmp
pop
jge
jg
repnz
adc
mov
xchg
jecxz
xor
xchg
jne
mov
decl
fwait
out
inc
add
ja
decl
lods
lahf
addl
cmp
insb
jg
add
ds
add
xor
add
out
xor
push
pushf
hlt
jle
add
jle
loop
dec
or
push
jg
ss
xor
pushf
addb
lcall
pop
xchg
repz
ds
scas
xor
pop
jmp
mov
mov
shll
ds
pop
idivb
jmp
adc
add
add
pop
jno
ds
jmp
mov
pop
jmp
leave
pop
jmp
leave
pop
in
add
mov
sbb
ds
pop
pop
jmp
add
dec
ss
repnz
scas
add
add
inc
sbb
pop
add
push
scas
hlt
xchg
cmp
add
pushf
add
std
scas
pop
scas
js
add
cmp
xor
add
sub
stos
push
loop
push
loop
and
mov
fwait
add
sub
fidivrl
lods
imul
adcl
in
inc
pop
insl
fs
iret
mov
xchg
xorb
add
xchg
inc
cld
mov
mov
dec
push
loop
dec
punpcklwd
inc
clc
mov
mov
push
push
dec
call
add
lea
pop
add
and
xor
fisttpl
dec
movsb
add
inc
fiaddl
push
std
dec
pop
call
call
scas
sbb
mov
in
push
inc
push
add
in
or
mov
cld
add
outsl
pop
add
je
ds
ds
add
adc
lcall
loope
stc
mov
add
mov
push
movsl
dec
add
or
leave
inc
mov
sub
aas
dec
add
inc
add
mov
inc
inc
mov
inc
adc
xor
fiadds
add
add
mov
int3
lea
dec
cld
out
rorl
add
inc
mov
ficompl
pop
data16
or
pop
mov
cmp
ds
push
ss
mov
les
add
pop
push
pop
xchg
xor
mov
stc
add
ret
jmp
call
leave
call
out
inc
inc
inc
mov
add
pop
jmp
lea
xor
inc
pop
jmp
add
xor
xor
into
jno
xchg
xor
cld
inc
cmp
sahf
mov
call
insb
mov
mov
arpl
ds
fcoms
mov
xor
es
cmpsl
inc
push
xchg
call
add
mov
xlat
push
push
lret
xor
push
xor
movsl
jmp
lods
inc
ret
xor
in
inc
xor
push
mov
xor
je
xor
mov
out
scas
mov
lcall
cmp
in
pop
push
mov
or
scas
mov
mov
rcr
call
mov
mov
add
insb
push
dec
push
out
call
mov
fstpt
lret
ds
mov
incl
mov
rorb
xchg
xchg
pushl
iret
inc
lods
add
and
das
pushl
dec
call
in
cmp
daa
in
or
jno
call
in
cld
ds
adc
push
call
pop
jns
leave
jl
add
test
push
test
xchg
pop
idiv
jae
cmp
ds
inc
mov
add
inc
ret
inc
add
addl
push
inc
sbb
neg
pop
xor
ds
xor
mov
push
fwait
push
call
test
jmp
add
mov
call
dec
in
jno
cmpsb
mov
cmpsl
in
add
adcb
cmp
fisubrs
dec
das
jle
push
cltd
aaa
add
fs
fwait
sub
pop
xor
das
mov
shr
mov
sbb
jg
cs
sbb
pop
push
dec
loope
loope
sbbl
leave
cs
mov
arpl
rolb
shr
sub
fmull
inc
mov
mov
add
ljmp
xor
out
sahf
mov
call
xchg
xor
shll
das
call
xor
bound
mov
aas
subl
cmpsl
or
stc
or
add
cmp
pop
or
not
push
call
mov
add
cmp
push
add
sub
jmp
xor
repz
mov
push
xor
call
sub
or
pop
add
add
xchg
loopw
or
arpl
dec
imul
push
scas
push
aam
enter
add
mov
call
or
cltd
add
mov
idiv
js
xor
iret
cltd
add
push
out
lcall
in
sbb
imul
xlat
jecxz
lock
call
shlb
test
push
push
ds
xchg
negl
push
add
mov
xchg
add
mov
mov
imul
negl
add
dec
call
lret
add
lods
inc
ljmp
mov
lcall
popf
adc
es
mov
or
call
jae
fwait
cmp
jne
pushl
inc
adc
out
mov
in
sub
call
mov
pop
out
add
cmp
fiadds
cltd
sub
mov
sub
cld
popa
cmc
scas
xchg
pop
xchg
jno
sahf
fwait
sbbb
xchg
xchg
pushf
xchg
sub
xchg
jge
inc
out
call
add
sub
add
pop
mov
sub
or
adc
lds
mov
add
add
add
fsubrs
push
sbb
mov
fwait
je
add
ret
mov
cltd
cli
pop
lcall
das
fdivrl
pushf
add
inc
push
call
push
xchg
mov
ret
shll
cmpsb
ret
mov
sahf
xor
mov
sub
mov
ss
jbe
push
push
xor
sub
sub
sub
add
pop
test
cmp
push
call
loop
scas
adc
mov
or
push
push
mov
push
push
mov
pop
call
or
pop
push
push
push
loopne
or
stos
sar
shrb
cmp
out
mov
out
dec
dec
pushl
add
insb
inc
add
lods
push
inc
push
inc
add
daa
fucom
loope
or
push
push
out
je
jg
sar
subb
and
pop
inc
call
jg
into
jmp
inc
add
insl
inc
add
fimull
xor
mov
je
ret
xor
imul
or
pop
cmpsb
push
cmp
add
jmp
subb
mov
xor
mov
jae
push
inc
push
decl
inc
je
inc
aam
mov
imul
mov
stc
pop
push
mov
into
adc
subl
ret
clc
out
call
mov
subb
dec
fsubs
push
insb
xor
push
or
cmc
imul
sub
incb
or
cld
xchg
pop
fdivrp
inc
xor
enter
add
pop
rorl
mov
mov
sti
and
aas
pop
jmp
test
scas
cmc
inc
inc
pop
jmp
clc
xor
cld
or
aam
subb
icebp
subb
push
in
pop
xor
push
or
cltd
orb
sti
add
jecxz
call
bnd
adc
rorl
mov
mov
pop
call
sbbl
sbb
push
cmp
mov
cmp
xor
mov
in
shrl
inc
mov
cmp
dec
subl
icebp
aad
jle
mov
add
add
mov
adc
es
inc
jmp
decl
and
add
mov
std
cmp
imul
xlat
xor
xor
aas
jo
cmp
je
rolb
sub
pushl
push
call
incl
mov
push
xor
pop
push
jb
dec
inc
addr16
rolb
add
push
call
push
xor
mov
sbb
repnz
daa
mov
iret
cwtl
fisttpl
rolb
mov
testb
adc
add
dec
push
sbb
push
pop
mov
add
ds
mov
push
adcb
or
push
daa
jg
and
jmp
psllq
push
add
int
xor
add
adc
mov
in
repz
or
dec
idivl
popa
inc
js
fcomip
jle
in
jmp
out
jb
push
mov
into
sub
icebp
imul
pop
jg
pop
rorl
mov
add
and
inc
push
jo
add
int
xchg
ja
lods
loope
cld
es
jg
lods
std
imul
mov
cmc
jle
push
add
jl
jmp
add
xor
jle
push
xabort
xor
ss
adc
push
fldcw
mov
pop
jmp
adc
cmc
or
pop
jmp
pushw
push
call
add
add
jmp
jge
xadd
test
push
add
pushl
push
push
push
es
push
call
pusha
mov
std
push
inc
mov
call
jmp
push
mov
mov
and
lea
fisubrs
mov
or
inc
adc
fdivrs
out
es
cmp
and
xchg
cmp
add
add
cmp
jbe
add
dec
inc
daa
mov
mov
pop
or
sub
mov
pop
add
jo
inc
sub
xor
call
or
sub
mov
add
sahf
jne
aas
in
pushl
rclb
aad
push
push
aas
mov
jne
or
adc
jo
call
add
add
sahf
jmp
rolb
out
fdivs
add
cli
jmp
push
mov
xor
or
addr16
push
pushl
sub
call
and
sbb
jl
outsb
loop
jge
xor
or
xchg
rolb
ret
mov
add
cmp
inc
or
mov
jl
add
cmpsb
jle
pushl
sub
mov
cmp
xor
test
adcb
adc
mov
jns
jno
ja
xor
cmpsb
lock
pop
or
inc
cmp
push
fsubl
ds
jmp
cmpsl
lock
outsb
paddd
pop
icebp
cmp
fdivl
add
stc
mov
add
cmc
xor
dec
jmp
mov
jp
pop
es
cmp
aad
leave
pop
push
icebp
lds
icebp
dec
mov
pop
xchg
mov
pop
out
in
cltd
mov
jp
push
shll
sbbl
inc
add
pop
jmp
jp
mov
shll
cwtl
pop
add
push
push
add
cmp
pop
add
mov
inc
jmp
add
mov
divb
push
push
sbbl
fsubr
pop
test
lcall
pop
add
cmp
push
lcall
cmp
push
addr16
fwait
add
clc
out
call
mov
sbb
jne
and
push
mov
add
incl
pop
add
rcr
add
call
in
inc
add
push
xor
push
es
push
out
in
lcall
adc
mov
jne
mov
movsb
mov
cltd
movsb
call
std
outsb
call
or
sub
push
mov
int
movsb
push
push
or
jne
mov
std
sub
push
int
pushl
mov
incb
add
sbb
imul
pushf
jns
jmp
add
dec
fucomp
pop
push
mov
lcall
in
sti
push
ds
jmp
icebp
call
xor
sub
pop
ljmp
scas
js
cld
sub
push
mov
test
push
outsb
mov
add
out
jbe
push
push
inc
ds
or
daa
dec
dec
add
jg
imul
mov
jmp
ds
mov
jne
and
push
icebp
xchg
xor
sbbl
mov
lods
mov
sbb
aas
mov
pop
jmp
or
arpl
lock
xor
add
pop
xchg
cmp
pop
push
das
mov
ja
push
push
fiadds
add
sbb
insb
inc
adc
data16
sahf
icebp
sbb
pop
or
ja
shrl
fcomps
cs
adc
add
sbb
ja
aad
jbe
sbb
notb
sbb
jae
pop
add
fdivrp
fimuls
fwait
fcomps
jmp
lock
jmp
pop
add
imul
sub
add
push
sub
sub
push
pop
cmp
pop
jmp
mov
shll
lea
stos
push
push
push
into
call
fs
lea
ds
sub
mov
xorl
cmp
cmp
xor
call
incl
inc
cs
insb
xchg
lcall
outsb
push
call
inc
das
jne
xchg
add
add
nop
decl
mov
nop
jg
mov
push
cltd
rorb
cli
std
call
mov
rorl
jmp
nop
call
leave
push
arpl
push
mov
jne
jg
lret
out
cld
in
popf
je
jmp
push
inc
xlat
mov
das
ror
jno,pt
add
out
sar
pusha
out
pop
xchg
scas
jbe
cltd
pop
or
xchg
or
imul
add
or
imul
fcmovne
inc
je,pt
jne
sub
std
pop
shrb
js
jae
ret
push
ret
incl
js
mov
pop
lods
push
jg
sar
stos
or
sbb
jae
xchg
loope
inc
ds
dec
push
shr
cmpsl
add
ret
add
iret
or
je
out
cmp
leave
pop
es
lds
dec
cmp
inc
pop
mov
lcall
jmp
cmpsb
sbb
je
loop
jo
push
inc
mov
ds
adc
inc
lods
sub
add
mov
pop
loop
lret
pop
push
sub
sbb
pop
cmp
arpl
add
add
sbb
mov
jbe
adc
or
data16
leave
and
jae
ret
or
out
sbb
push
cmp
stc
inc
add
dec
dec
sbb
ret
cmp
jne
gs
push
sub
pop
call
xchg
inc
lods
inc
jmp
xchg
out
gs
sub
sbb
adc
orb
ljmp
mov
add
int3
pop
push
scas
inc
pop
call
adc
nop
or
add
push
jne
jne
std
outsb
mov
jne
mov
call
and
in
mov
add
push
adc
jne
mov
das
lret
pop
mov
aas
in
cmp
or
xor
push
add
push
ud0
pop
call
or
mov
inc
sbb
adc
ljmp
pop
out
mov
iret
mov
and
pushl
mov
enter
add
jnp
push
cwtl
push
pop
call
push
inc
ds
jne
fwait
pop
enter
add
movsl
mov
rcl
cli
out
add
jno
shl
call
xchg
add
jns
push
cwtl
mov
out
cmp
mov
cmp
jns
notb
push
sub
jno
popa
stos
mov
jne
sbb
enter
jne
push
pop
aad
imulb
stos
push
sar
mov
pop
sbb
fisubrs
cld
xor
push
les
xchg
or
add
pop
add
inc
push
pusha
in
jmp
or
jmp
testb
jo
adc
add
add
fistpl
test
test
arpl
stc
cwtl
adc
fidivrl
pop
push
mov
inc
xchg
ret
pop
jo
mov
pop
fists
outsl
imul
icebp
add
ffreep
addl
cmpsb
stc
add
inc
add
leave
and
pop
adc
das
add
add
hlt
add
adc
pop
or
test
jmp
add
mov
sti
xchg
aaa
pop
adc
call
in
cmpsl
inc
jmp
adcb
xchg
movsl
sti
jge
sub
out
imul
aam
adcl
push
add
jb
xlat
fcoms
push
push
lock
inc
jmp
adcl
xor
sti
dec
cmpsl
test
push
add
dec
aam
dec
sbb
decb
pop
out
xchg
cmp
add
test
xor
decb
pop
out
addl
push
inc
xlat
xorl
push
add
push
cmp
add
add
xchg
fdivrp
jne
mov
std
pusha
subb
push
jmp
sub
add
pop
add
out
jne
outsl
lahf
std
call
push
push
addr16
jmp
outsb
lcall
insb
push
jg
fldt
cmp
add
movsb
scas
insl
call
roll
add
sbb
push
jg
fildl
ds
call
pop
xchg
ret
inc
insl
push
sbb
inc
faddl
add
test
inc
insb
lock
xchg
adc
add
ret
push
add
testb
sahf
outsl
jmp
push
incl
fcmovnbe
in
inc
add
cmp
add
mov
insb
xor
cmp
add
pop
adc
sti
sbb
jl
or
xorl
divps
inc
add
inc
loope
and
pop
pushf
js
fdivrl
test
mov
sbb
insb
push
sub
xchg
sarl
mov
mov
mov
clc
pop
cmp
add
pop
xchg
pop
add
roll
mov
stos
aad
push
cmpsb
das
fs
cmp
pop
add
stos
cld
adc
adc
and
andb
jo
aam
notl
into
jno
popf
add
ss
stos
push
cs
push
call
adc
sbb
jmp
cli
imul
add
adc
adc
mov
mov
mov
loope
fldl
adc
dec
test
out
lcall
daa
xorb
or
incl
lahf
dec
inc
daa
mov
les
xchg
inc
call
push
stos
dec
inc
xlat
mov
les
xor
xchg
cmp
jne
xorl
add
add
dec
ljmp
sbb
loop
push
inc
outsb
pushl
xorl
lcall
sbb
sub
add
jecxz
call
jl
ds
add
add
mov
js
add
add
jne
mov
test
sti
and
out
sahf
imul
xchg
or
popa
rolb
add
jae
imul
lods
cmpl
add
cwtl
es
dec
push
imul
inc
pop
push
mov
je
jne
insb
add
stos
pop
out
pop
cmpsb
sbb
decl
nop
push
cmp
add
pop
jb
pop
or
rcll
sub
mov
mov
shll
decb
push
decb
push
decb
push
decb
push
decb
push
decb
cmp
aaa
jmp
aas
into
add
push
clc
addl
pop
xchg
dec
adc
test
sub
iret
pop
xchg
dec
ljmp
out
arpl
add
loopne
call
pop
out
xchg
jp
push
sub
andl
orl
outsb
fwait
add
cmpsb
inc
jmp
inc
orl
sti
or
sbb
or
incb
push
fwait
add
in
inc
jmp
cmp
or
pop
out
lcall
pop
xchg
scas
push
call
je
push
add
scas
pop
fmull
mov
lods
add
add
inc
outsl
push
add
addr16
inc
hlt
pusha
or
decl
push
push
repnz
push
rcr
repz
cmpsb
push
lods
pop
pop
or
dec
pop
jmp
aas
iret
inc
inc
daa
xorb
or
incl
jp
jmp
push
call
outsb
fucomi
testl
add
pushl
orb
call
jo
out
mull
call
fidivl
xchg
jno,pt
sti
cmpsb
inc
lcall
out
jns
mov
fdivrp
repz
mov
xor
xchg
ljmp
mov
leave
fs
pushf
movsl
push
jg
ficoml
imul
inc
ds
roll
adc
clc
mov
add
sti
out
gs
cmp
push
popa
xlat
iret
inc
ds
das
aam
mov
call
inc
xor
push
push
in
jne
pop
adc
movsl
or
pop
cmp
adc
movsb
repnz
jmp
add
pop
jmp
inc
imul
cmp
pop
loope
cld
push
into
add
push
ja
fucomi
xchg
sub
mov
jmp
fistl
clc
rorl
cld
sti
sbb
fs
rep
movsl
icebp
or
or
mov
pop
fs
pop
fs
out
cmp
fsubs
or
pop
rorl
sbb
jne
and
push
push
sbb
jmp
dec
pop
push
sahf
add
or
loop
or
inc
out
out
cld
jb
mov
cmp
sbbb
cmp
push
sub
call
loop
pop
aas
xchg
dec
enter
push
add
or
gs
out
pop
repz
das
pop
or
cmpsl
lcall
cmp
mov
add
xchg
incl
add
repz
clc
mov
decl
and
call
aas
or
inc
pop
cmp
sti
xor
out
lcall
repnz
pop
push
jne
js
sti
push
push
call
pop
sbb
mov
jg
add
cltd
repnz
pop
pushl
jp
or
repnz
ljmp
and
incb
add
push
pushl
jb
out
jns
ret
push
mov
mov
adc
rcrl
ret
or
inc
jmp
or
stos
xchg
insl
call
ja
or
adc
in
call
sti
popa
jne
sub
mov
push
lcall
fsts
mov
lds
aam
xor
add
mov
mov
adc
add
and
push
sbb
inc
popa
jmp
mov
xor
aaa
pop
mov
cmp
sbb
xor
jae
add
push
inc
sbb
enter
pop
orl
lods
test
jns
adc
and
add
jle
divb
push
pusha
dec
repnz
cmpsb
sbb
ret
xor
mov
or
pusha
adc
xlat
cmp
xchg
arpl
add
imul
pushl
jno
add
lods
inc
jmp
cmp
fwait
add
incb
sbb
xchg
mov
push
add
dec
add
mov
add
decb
push
jno
push
nop
pop
call
andl
jne
aad
out
add
icebp
lea
shr
dec
repz
not
jmp
pop
push
call
loop
dec
adc
sti
dec
test
lret
add
je
push
inc
movsb
jne
mov
add
add
je
push
xchg
pushl
data16
int
add
movsb
jne
das
push
in
xor
mov
outsl
push
push
mov
ret
cld
mov
and
call
into
adc
push
movsb
jne
jg
incl
cmc
and
push
call
push
mov
std
pushl
add
jmp
popf
stc
lret
inc
add
addr16
push
hlt
ljmp
rol
shlb
dec
jg
push
adcb
dec
mov
repnz
xor
mov
sub
push
mov
jge
call
ljmp
loope
fprem1
add
mov
icebp
or
sar
mov
lret
add
inc
pop
jne
add
sbb
jecxz
sbb
rcrb
pop
jne
pushf
cli
push
jg
jmp
andb
xchg
dec
cld
dec
jmp
dec
bnd
jmp
pop
stos
pop
pop
jmp
mov
pop
dec
xlat
inc
repz
roll
bnd
xor
icebp
imul
push
pop
mov
add
add
push
jmp
dec
xchg
out
pop
lret
xchg
in
push
xchg
pop
adc
and
inc
stc
add
inc
mov
scas
clc
or
jmp
jbe
pop
jmp
cmp
add
inc
jge
iret
test
add
sbb
add
gs
pop
add
jge
add
jmp
add
cmp
mov
sbb
repz
repnz
adc
roll
out
push
add
stos
fwait
add
mov
mul
cmc
pushl
leave
mov
jecxz
lock
mov
mov
stos
fsubrs
dec
push
push
call
mov
idiv
mov
add
aas
add
out
imull
pushl
outsl
int3
mov
call
cmpsl
rep
push
pop
pushl
push
pop
call
mov
ja
decl
test
jo
call
jmp
mov
push
movsb
pushl
dec
dec
inc
push
jae
mov
test
xor
push
ljmp
stc
iret
sldt
and
pop
ljmp
gs
xor
fdivl
mov
or
add
mov
jne
je
jno
in
leave
movsl
pop
add
mov
mov
ds
hlt
imul
mov
pop
jne
pop
lods
mov
push
pop
mov
add
or
add
mov
pop
pushf
pusha
push
fstpl
push
rorl
cli
mov
or
fstpt
sbb
jae
or
movsl
pop
xchg
push
xchg
hlt
lret
std
xchg
pop
mov
xchg
pop
icebp
repnz
jmp
add
xor
std
fwait
insb
sar
pop
insb
add
push
pop
mov
std
push
adc
jmp
ds
cltd
repnz
add
xchg
std
and
pop
cmp
movsb
sahf
ds
xor
pop
xchg
mov
ljmp
jo
addl
icebp
aad
mov
out
inc
aad
xchg
clc
cmp
cmpsl
push
sub
inc
push
std
cld
std
cld
imul
rclb
in
mov
xchg
push
call
orl
add
ja
test
jae
mov
outsb
xchg
inc
jmp
push
push
sarb
in
mov
push
jo
call
add
ret
inc
lock
xchg
pop
pushl
jo
std
pusha
movsb
pushl
movsb
jne
outsl
mov
ret
lret
mov
xchg
fdiv
loopne
lea
std
jne
movsb
xor
out
add
xchg
jne
cwtl
sbb
add
push
add
sub
push
in
push
push
in
push
lea
mov
movsb
jne
pusha
sub
call
pushf
xchg
je
fildl
add
mov
jmp
imul
popa
mov
out
fildll
test
push
mov
add
sbb
jmp
inc
ds
push
decl
lret
int3
pop
mov
loop
push
jmp
mov
stos
je
fnstenv
aam
inc
add
jmp
push
pushl
xchg
jmp
inc
mov
push
call
lret
inc
ds
xchg
mov
mov
test
jmp
add
mov
dec
popa
cli
std
mov
xor
in
insb
dec
cli
fucomp
cmp
into
repnz
xor
adc
push
sahf
push
add
pop
pusha
icebp
stc
xchg
add
subb
icebp
test
outsl
sbb
push
rcrl
mov
pop
jmp
or
stc
xchg
push
add
mov
inc
push
sub
ret
pushl
repz
pushf
xor
cli
pop
fdivp
decb
adc
adc
repnz
ljmp
popf
ljmp
mov
shll
inc
mov
out
ret
clc
scas
mov
add
push
xchg
clc
pop
lock
add
mov
mov
mov
incb
jb
fistpl
clc
out
lret
clc
push
shr
dec
adc
je
scas
test
pop
pushl
call
mov
pop
popl
dec
push
std
decl
jne
aas
fwait
mov
or
mov
in
cld
push
add
jmp
mul
mov
bound
mul
testb
fimull
pushl
xchg
in
fmuls
push
mov
mov
lea
mov
shl
std
xor
mov
clc
mov
add
add
cmpsb
add
add
dec
leave
repz
add
add
pop
add
pushl
jle
divl
mov
repz
push
jne
dec
mov
mov
add
lret
std
aas
add
push
cmp
push
pushl
mov
ljmp
pop
loope
lods
push
mov
mov
incl
dec
add
jge
vlddqu
push
xor
loope
mov
sarl
in
test
ds
rcll
push
pushf
jmp
push
test
fwait
jmp
push
loopne
pop
add
mov
ret
xor
les
push
push
imul
mov
mov
outsl
mov
cmc
push
aam
or
repz
jbe
jmp
push
pop
adc
arpl
outsb
and
jle
sahf
xchg
out
in
xchg
push
jmp
pop
xchg
fstl
outsb
add
ret
jbe
add
add
lods
hlt
das
outsb
mov
mov
adc
cmc
push
xchg
pusha
shlb
cmc
es
push
add
cmp
idiv
mov
cmp
cmc
divb
cmovs
mov
mov
ret
mov
push
rcl
call
data16
jmp
add
cmp
in
xchg
cmp
pop
add
das
out
out
adc
mov
push
mov
decl
mov
dec
nop
idiv
add
mov
push
mov
out
push
mov
decl
inc
idiv
xor
mov
push
movsb
mov
dec
movsb
dec
out
out
mov
rolb
call
pop
je
xchg
lret
add
fmul
mov
jne
iret
repnz
call
add
ss
mov
fmull
fisubrl
cmp
cltd
in
mov
dec
call
test
movsb
pop
rcrb
decl
inc
dec
mov
push
dec
jmp
xchg
incl
add
cltd
lock
push
mov
dec
incl
dec
call
pop
cli
call
and
jmp
or
mov
stos
jnp
add
jmp
shr
repnz
dec
imul
fadds
sbb
inc
pop
sbb
rcr
movsb
aas
mov
gs
mov
sbb
add
cli
add
sub
ret
add
sbb
jns
adc
fldenv
jmp
cmp
cwtl
add
std
dec
inc
mov
xlat
xor
pop
push
es
add
test
add
add
pop
push
xchg
xchg
roll
scas
ja
lea
sahf
mov
call
pusha
add
shr
xchg
repnz
sbb
push
pop
sub
mov
or
pop
push
pop
dec
test
add
or
mov
ds
dec
rcrb
mulb
add
xor
stos
lcall
aad
jmp
add
imul
cmp
lock
out
pop
dec
sub
adc
fs
incb
add
clc
adc
addr16
les
add
leave
out
imull
mov
add
xchg
loopne
lahf
decl
dec
lods
data16
das
sbb
jb
idiv
sbb
jmp
arpl
lcall
xlat
testl
xor
sbb
idiv
dec
jmp
out
adc
add
sub
decl
data16
iret
sbb
rolb
xor
jmp
jb
call
in
inc
je
test
add
cld
dec
xor
jle
imul
rcrb
stc
jle
neg
loopne
add
add
mov
addb
test
add
push
fdivrp
lret
notl
xchg
push
incl
add
inc
mov
jp
dec
ds
out
xchg
push
push
call
divl
pop
lock
ds
add
out
fldl
stos
subb
out
dec
ds
xchg
add
lods
popa
pop
jmp
cld
loope
dec
dec
loope
pop
push
shr
lea
arpl
dec
mov
jle
add
mov
adc
aaa
test
notl
xchg
out
mov
dec
sub
sub
scas
fwait
out
sbb
dec
pop
out
xchg
sti
pop
ret
push
dec
dec
out
xor
out
push
xchg
loope
out
xchg
mov
out
shl
stos
xchg
out
lods
in
mov
xchg
imul
add
out
sahf
orb
xchg
jne
cld
xchg
je
bound
jmp
cmp
push
hlt
sarl
push
call
jo
icebp
addr16
mov
inc
jmp
cmp
xchg
ficoml
pop
loopne
adc
sbb
lods
sarl
xor
dec
out
call
add
add
mov
and
add
xchg
mov
mov
cmp
jne
iret
lods
inc
mov
mov
rclb
pop
push
push
pushl
nop
cld
xor
jne
nopl
add
mov
cld
push
push
push
dec
lock
ret
mov
xchg
mov
add
add
aas
add
pop
incl
dec
jne
dec
xor
inc
in
inc
jne
in
pop
es
cwtl
ljmp
stos
inc
add
daa
jnp
mov
cwtl
hlt
xchg
ljmp
andl
push
pop
pop
lods
inc
ds
out
sub
push
and
adc
test
call
add
inc
inc
shlb
es
lods
inc
rcrb
lret
push
out
add
mov
lock
lcall
mov
gs
pop
adc
inc
push
pop
inc
dec
jmp
inc
inc
gs
pop
lret
inc
pop
push
in
xchg
aam
cli
out
scas
cmpsl
pop
inc
cmc
adc
pop
pop
mov
mov
vpmullw
cmpsl
sbbl
lds
add
xchg
cmpl
mov
jae
lods
pop
mov
inc
out
jb
add
push
push
inc
imul
pop
test
pushl
mov
mov
push
clc
jmp
jne
clc
outsl
cld
decb
call
mov
adc
in
cmp
push
cld
inc
cmp
into
add
stc
popa
call
jo
in
jmp
ret
jmp
inc
ljmp
sub
test
or
jne
add
fcom
jmp
incb
negl
fadds
call
aam
iret
sbb
out
jb
add
test
stos
testb
pop
add
mov
pop
push
add
lods
pop
push
int
lea
lods
mov
addr16
jne
clc
sbb
call
sbb
je
out
or
add
add
dec
es
pushl
test
mov
lahf
call
xchg
mov
xchg
mov
add
addr16
fsubr
idivl
xchg
inc
call
mov
mov
add
jp
pop
sub
icebp
fimull
inc
dec
call
push
aam
mov
call
jle
divl
icebp
xlat
jmp
add
adc
inc
decl
lret
inc
sbb
test
mov
inc
jbe
imul
mov
mov
rcl
inc
xor
mov
add
sbb
sub
inc
dec
fsubs
mov
push
aam
and
xor
out
pop
xor
fs
out
sbb
pop
jmp
inc
dec
pop
xchg
fidivrl
call
sub
out
add
negb
outsl
aam
int
lret
idivl
or
pop
addb
jmp
out
inc
push
push
xchg
xor
xchg
call
or
out
cmp
outsb
cld
outsl
or
mov
pop
cld
scas
jecxz
cld
in
xchg
push
out
inc
div
idivb
cld
repnz
test
in
je
out
es
in
sbb
incb
movsb
mov
clc
adc
out
idivb
cld
add
add
sbb
jmp
jbe
imul
dec
repz
jg
mov
jae
adc
in
sbb
repz
sbb
out
loope
rsm
add
fwait
leave
ret
push
mov
ffreep
cld
cmp
scas
push
call
push
push
sti
push
popl
int3
pop
xchg
pop
pushl
xor
add
and
or
ret
xor
mov
cmpsb
xchg
fdiv
xor
jne
pushf
xor
out
sar
sbb
jne
cwtl
sbb
add
sbb
incl
out
push
sub
pop
add
jnp
rorb
inc
inc
jne
insl
mov
xchg
repnz
add
jmp
cmp
stos
scas
divb
sub
and
mov
out
lahf
sub
inc
inc
mov
inc
cmp
inc
pop
cwtl
lods
cmp
test
in
decl
repnz
mov
add
pop
dec
jg
sub
ret
adc
add
loop
outsb
xor
fstps
aas
or
xor
add
leave
sti
sbb
shl
mov
pop
adc
pop
lcall
cltd
jecxz
pop
push
lcall
mov
inc
aaa
jns
jae
xchg
jmp
aas
push
jae
pop
jns,pn
jmp
aas
push
sub
add
nop
jecxz
or
loopnew
repz
sub
adc
sub
mov
jmp
outsb
repz
pop
add
xor
repz
mov
ljmp
cmp
loop
jmp
adc
decb
mov
pop
je
aam
mov
insw
loope
inc
push
loop
inc
test
decl
sbb
mov
mov
sub
push
push
or
pop
adc
decb
add
js
or
fwait
mov
imul
je
repz
xchg
push
loop
xchg
push
inc
test
cmp
incb
xor
pop
iret
pop
jmp
idiv
test
jne
scas
inc
test
test
mov
mov
je
mov
and
dec
cld
pop
call
idiv
sbb
inc
stos
call
daa
jmp
test
add
add
pop
inc
clc
push
sbb
jne
decl
xchg
add
ret
or
call
push
call
mov
and
jne
xor
mov
and
call
jg
call
inc
mov
cmp
ja,pt
rep
mov
sti
out
pop
dec
in
inc
je
pop
add
test
lret
add
test
imul
decl
xchg
jno
cmp
push
insb
stos
popa
sub
inc
repnz
bound
call
push
lret
imul
std
inc
jne
mov
lea
ret
dec
pop
call
paddd
sahf
ds
jmp
mov
mov
add
add
fistpll
sub
gs
mov
das
ja
rcr
pop
aaa
sub
enter
sbb
add
and
lds
pop
ljmp
test
xchg
ds
repnz
jmp
inc
pop
les
add
mov
mov
repz
fbstp
cli
sub
lods
ds
add
add
xchg
fidivs
cmpsb
movsl
out
fidivs
push
call
scas
repnz
push
fdivrp
fs
out
dec
shll
cmpsb
sbb
mov
push
add
out
andb
fidivs
push
cmpsl
jbe
aam
insl
in
pop
test
fidivs
mov
push
xor
add
xchg
test
xchg
xchg
pop
test
fidivs
add
aam
cmp
je
xchg
das
pop
test
mov
bound
or
jne
xor
adc
mov
ljmp
das
fisubrl
fwait
and
mov
sub
push
push
call
pop
pop
jne
xor
pop
and
push
xor
rcrb
decl
add
call
sub
pop
push
call
or
jne
xor
sub
xor
and
sarb
frstor
test
jns
add
je
add
ljmp
mov
sub
add
aaa
jmp
ljmp
cld
testb
mov
add
add
loop
aaa
dec
das
cmp
inc
adc
xor
sub
repnz
jle
jge
aas
repnz
add
add
repnz
inc
jb
add
sbb
push
or
push
outsl
mov
hlt
dec
sub
pushf
cmp
sbb
add
xchg
push
add
jae
lret
jle
imulb
or
cmp
add
icebp
fcmovnbe
aam
repz
addr16
jecxz
aaa
out
xorl
dec
subl
das
mov
repz
fldt
lcall
jg
cltd
jmp
aaa
sbb
xorb
shll
jno
inc
stos
popa
jae
fsin
pop
add
iret
ljmp
adc
in
add
add
popa
cmpl
std
xor
sar
testb
add
push
jmp
mov
out
xor
imul
inc
fidivl
mov
in
fs
pusha
mov
fidivrs
out
arpl
xchg
divb
pop
je
mov
aam
inc
add
sbb
call
add
xor
xchg
call
xor
or
push
movsb
lcall
xchg
mov
push
xchg
call
gs
jmp
idiv
sbb
mov
loopne
call
call
xor
clc
jne
out
fsubl
in
call
fmuls
test
nop
incl
add
idiv
sbb
pushl
out
fwait
movsl
lcall
nop
mov
cmp
jmp
outsl
lock
cwtl
xor
jne
sbb
std
inc
xorb
es
pop
ljmp
push
notl
hlt
xor
sbb
lods
sti
or
or
xchg
mov
mov
sbb
pushl
sub
lcall
add
add
addl
ret
shll
mov
xor
es
flds
jmp
add
adc
sub
xchg
push
xor
adc
jne
pop
push
ret
pop
dec
jl
jmp
aas
adc
xor
push
cmp
xor
inc
pop
lods
pop
jmp
jne
pop
jmp
add
pop
cs
add
ds
jmp
test
mov
arpl
jmp
dec
shll
imul
pop
lods
pop
jmp
sbb
pop
jmp
lds
aas
xor
fnstsw
xlat
sbb
cltd
aas
dec
fmuls
pop
sbb
add
sysexit
inc
jmp
or
mov
or
sar
es
adc
sbb
push
cmpsl
lret
testb
je
xor
in
or
incb
add
std
xchg
sub
push
or
cmp
inc
pop
loopne
mov
imul
cmp
mov
je
sahf
mulb
popf
add
ret
testb
mov
das
xchg
pop
inc
xchg
mov
add
add
mov
lcall
mov
mov
and
mov
add
nop
call
andl
je
xchg
dec
call
je
icebp
incl
pushl
jb
mov
adc
call
lock
call
jne
jno
mov
sti
xchg
incl
add
or
ds
jbe
test
int3
sbb
push
xor
shr
cmp
addl
jno
ja
jno
xor
daa
fbstp
lcall
and
push
xchg
sbb
mov
xchg
cmp
cmp
movsb
xor
mov
jbe
call
lret
lcall
pop
ja
or
das
call
add
das
jne
add
mov
outsl
xor
loope
jne
rcrl
das
dec
xchg
outsl
add
mov
data16
mov
bound
mov
inc
xor
arpl
jp
xlat
rolb
adc
scas
mov
sti
popa
int
xor
in
pop
roll
arpl
daa
xor
sbb
add
add
ret
mulb
aam
inc
cmp
jl
fisubrl
or
in
jge
xlat
cmp
imul
xor
pop
loop
dec
fidivs
ds
cmpsb
leave
rcrl
jmp
jbe
push
jmp
inc
inc
add
cmp
inc
xchg
jb
test
aam
sbb
clc
jbe
iret
out
rcrb
repnz
dec
add
out
inc
add
sub
mov
and
dec
xchg
mov
imul
push
and
adc
push
imul
add
sub
cmp
lret
sub
lock
sar
push
ljmp
xchg
or
jbe
mov
jne
pushl
call
leave
aad
push
sbb
add
add
hlt
imul
dec
inc
cld
aas
mov
inc
xorl
incb
cmp
add
add
xlat
xorb
insl
lcall
inc
pop
pop
pushl
dec
adc
call
scas
fwait
pop
inc
pop
testb
out
jne
jne
decb
cmp
ds
jne
pushf
mov
add
rcrl
aad
rorb
mov
cmpsb
add
mov
inc
je
imul
or
sub
les
mov
je,pt
jne
sub
lret
imul
sbb
ds
sub
sub
lret
inc
mov
addr16
sbb
adc
sbb
push
fstpl
leave
add
cld
lret
mov
add
push
pop
out
inc
ret
and
pop
aad
repz
arpl
or
mov
cld
mov
inc
add
lahf
mov
iret
lea
mov
scas
inc
cmp
jns
fsubl
inc
clc
pop
sub
fwait
in
popf
pop
jmp
or
jmp
add
add
sarb
sbb
clc
and
fwait
lret
xor
sbb
add
add
adc
cltd
sub
add
mov
mov
xor
sar
push
es
adc
cmp
ja
shlb
dec
enter
pusha
dec
push
shlb
mov
add
pop
sar
sbb
add
sub
hlt
jne
push
xor
iret
inc
or
jmp
lock
ds
add
push
or
call
adc
dec
cld
add
nop
ret
lods
mov
fs
push
lock
mov
out
pusha
cmp
add
pushl
jb
incl
mov
jne
add
subl
lahf
jb
inc
subl
popf
xorl
loopne
negb
pop
push
add
pop
call
jg
pop
inc
push
lock
mov
out
jno
ljmp
lahf
inc
or
push
les
int
pushl
dec
adc
imul
add
add
mov
add
jnp
add
les
inc
lret
add
sbb
sbb
ds
mov
hlt
xchg
in
push
xchg
data16
adc
sbb
jle
std
call
repz
pcmpgtd
jl
mov
mov
push
es
pushl
cmp
lock
add
push
jnp
sub
inc
jmp
add
pop
stc
xor
int
scas
inc
ret
int3
pop
icebp
int3
pop
jg
in
push
pop
push
movsl
jne
jmp
sub
int3
cmp
fldenv
sub
int3
lods
test
mov
adc
sbb
inc
out
pop
xchg
les
jns
loope
mov
insl
sub
pop
jmp
enter
add
add
pop
push
outsb
les
dec
inc
icebp
sbb
or
jmp
cmp
das
inc
jmp
push
int3
jl
mov
xor
int3
addr16
add
inc
jmp
and
pop
shlb
jl
mov
pop
int3
mov
pop
int3
xchg
fucomp
sahf
popa
push
lock
add
pop
int3
adc
int3
je
and
int3
mov
and
incb
sbb
clc
push
sbb
push
sbb
inc
popf
call
ret
lods
mov
push
cmp
ljmp
je
scas
int
inc
daa
scas
out
addl
decl
push
dec
fmuls
pop
call
jg
clc
inc
push
add
add
mov
pop
call
jg
lahf
fadds
mov
and
cld
push
push
in
imul
inc
cld
fmul
push
dec
push
pop
mov
out
decb
cmp
ds
adc
repnz
shlb
ds
cmpb
sarl
ds
push
cmpsb
enter
pop
cwtl
mov
add
mov
add
jecxz
pusha
cmpsl
shlb
mov
add
roll
pushf
push
jp
add
shll
cld
out
cld
and
data16
add
jae
push
test
or
jmp
fadd
cmp
call
mov
mov
inc
sbb
fwait
pop
leave
dec
data16
mov
dec
sbb
cmp
cmp
mov
xchg
jb
ret
es
inc
mov
cmp
leave
add
test
and
stc
dec
add
jmp
stc
and
dec
fisubs
and
leave
dec
loope
std
leave
lds
jl
scas
cmp
inc
or
leave
popf
and
push
xor
dec
negb
jmp
repnz
jb
pushl
pop
pop
sub
xor
jmp
push
rcrb
and
aam
enter
mov
jg
add
sar
push
mov
cld
mov
rclb
das
ja
add
jge
test
mov
pop
and
enter
xor
add
inc
mov
test
add
inc
enter
dec
clc
cmpsb
mov
out
rcrb
std
dec
add
add
scas
dec
es
pushl
jae
mov
pop
ljmp
test
mov
ja
decl
cmc
addr16
push
inc
add
lock
jp
jne
jae
mov
dec
dec
pop
push
incb
add
outsl
idiv
loopne
jne
out
rcrl
call
bnd
pop
pushl
shl
or
jecxz
decl
shl
idivl
in
and
pop
mov
and
imul
and
aaa
aas
notl
nop
test
and
out
fwait
js
jg
and
sub
ss
jg
sub
add
fidivrs
out
sti
or
sbb
add
xchg
psubw
xchg
test
int
decl
mov
adc
hlt
xchg
add
leave
lods
dec
test
lods
and
push
mov
add
ds
test
push
ret
lcall
lds
xchg
mov
scas
jge
jno
cmp
jno
jne
xor
push
add
pop
push
add
int
and
push
insl
xchg
ds
jmp
and
pop
out
xchg
imul
fadd
fwait
or
stos
jg
or
pop
xor
lds
ljmp
std
and
les
out
andl
les
and
rorl
mov
cmp
mov
push
pop
pop
push
int3
sahf
add
pop
dec
or
ret
jle
push
push
mov
in
push
insb
or
pop
push
mov
fdivl
ljmp
mov
push
pop
je
int3
es
fwait
push
pop
les
jbe
incb
push
push
call
gs
out
jae
mul
xor
pushf
add
push
int3
dec
push
pushf
add
pushl
call
push
call
push
outsb
idiv
test
pop
pushf
enter
mov
arpl
jne
jbe
mov
leave
ret
push
mov
xlat
ret
cld
jge
push
mov
push
call
scas
xchg
cli
push
push
pop
pushl
ja
std
sub
lods
add
stos
xchg
addr16
add
mov
call
dec
call
leave
testb
adc
sbb
push
or
call
mov
mov
js
sbb
add
int
je
pop
pop
add
mov
and
outsl
mov
testl
jle
add
xor
stos
ljmp
adc
and
or
shlb
jmp
adc
or
sti
add
or
push
dec
push
incl
jbe
add
cmpsl
jmp
sbb
pop
cmpsb
rcr
jnp
inc
add
mov
lods
push
sub
mov
cmp
clc
movsb
sbb
mov
sub
xchg
sbb
or
xchg
addl
andb
and
shl
push
inc
cmc
sub
fld1
add
pop
jmp
add
pop
jmp
add
movsb
pop
xchg
add
fs
enter
sarb
inc
std
sub
call
cmp
push
rclb
jbe
sar
mov
mov
dec
enter
sub
adc
jo
lret
negb
pop
rorb
cmp
sbb
sub
inc
or
push
fdivrp
pop
mov
jecxz
pop
shrb
lret
cmp
sar
mov
call
jo
scas
negb
and
inc
jmp
call
push
call
add
add
decl
loopne
loopew
inc
add
arpl
jne
jae
popf
loopne
mov
std
push
push
ljmp
or
repz
inc
int
fsubr
arpl
push
repz
pop
es
pushl
loopne
or
sti
inc
lcall
bound
jmp
iret
ja
add
mov
push
je
xchg
and
idivl
sbb
push
stos
gs
ljmp
sub
mov
adc
leave
mov
pop
shll
movsl
dec
call
xor
sub
rcll
in
cmc
sbb
or
sub
shl
sbb
stos
or
ljmp
popl
push
shll
pop
inc
push
fmull
sbb
add
ror
sub
test
sbb
repz
pushl
or
jno
and
in
test
call
or
daa
or
adc
adc
mov
std
sbb
mov
jl
mov
fstpl
cmpsb
aas
jo
mov
xchg
xor
in
sbb
mov
sbb
add
mov
lea
in
sbb
subl
push
inc
insl
sub
xlat
call
add
mov
inc
cmp
lcall
shlb
sbb
es
test
test
mov
cld
push
inc
xor
movsb
cld
mov
xor
push
call
out
sar
add
dec
mov
jg
mov
push
jb
fadd
mov
jecxz
pushl
mov
jg
mov
xor
sbbb
bound
fstpt
jmp
mov
add
sbb
push
mov
cmp
int
or
in
lcall
imul
inc
incl
add
and
lcall
call
aas
fistl
inc
daa
movsl
je
cld
cli
xor
sbb
repnz
aas
mov
cli
call
call
pop
cmp
ret
or
jmp
pushl
outsl
cli
xchg
enter
cld
fsubr
push
call
ds
xor
pop
add
pop
jns
sti
es
jnp
or
adc
sti
mov
pop
out
jb
jmp
inc
push
scas
mov
inc
or
call
aas
hlt
ljmp
xchg
sti
mov
jmp
add
cmp
call
cwtl
adc
xchg
jns
adc
jne
fdivr
xchg
add
popa
loope
ret
scas
mov
aas
shl
mov
ret
pop
icebp
add
pop
fldl
mov
popa
push
sub
fwait
xchg
mov
movsb
sub
add
stos
pop
mov
addr16
xchg
mov
cs
shrb
std
add
pop
repnz
sub
add
dec
jmp
add
add
or
pop
test
adc
fwait
nop
lcall
lods
mov
sahf
dec
popl
sbb
pop
inc
pop
jmp
popa
mov
scas
mov
pop
sar
fsubrl
jbe
dec
mov
xor
mov
inc
sub
rclb
sar
push
mov
les
leave
enter
add
repnz
cmp
cs
sub
or
cmp
or
fs
rcrb
sbb
shlb
mov
out
jecxz
xchg
shrb
pop
enter
ja
add
aam
lea
adc
rep
or
in
out
mov
add
sti
sbb
add
je
add
jl
lea
in
push
push
dec
push
movsb
add
fcmovb
or
pop
mov
inc
fcomi
or
sub
cld
call
ljmp
aad
imul
push
mov
rorb
push
jg
xchg
call
aaa
fcomps
pop
push
ss
ds
hlt
imul
inc
add
inc
add
xchg
add
inc
dec
lds
inc
adc
idivl
mov
dec
das
decl
sbb
nop
add
sbb
in
add
inc
lret
pop
pop
push
shrl
push
mov
adc
scas
je
jne
lea
lcall
outsl
adc
adc
adc
add
pop
clc
adc
jno
imul
lea
pop
xor
adc
pop
push
adc
bound
jle
adc
mov
inc
pop
mov
adc
mov
adc
es
cmp
dec
adc
mov
cwtl
xor
add
shll
loope
je
in
adc
paddw
add
push
hlt
test
loope
mov
int
mov
dec
mov
cmp
mov
sbb
mov
icebp
inc
dec
std
xchg
dec
mov
stc
mov
mov
cld
dec
mov
loope
test
sar
push
mov
cs
cmp
je
xor
mov
in
or
mov
es
adc
add
je
dec
or
pop
mov
push
push
push
adc
inc
mov
in
or
pop
mov
out
push
sbb
mov
mov
xor
std
jne
incb
out
pop
dec
call
std
jne
push
mov
mov
aaa
inc
adc
lahf
je
push
add
pop
movl
xor
out
jne
mov
push
call
scas
out
dec
dec
decl
out
and
add
cli
call
fcoml
jne
scas
das
pop
inc
xlat
dec
jne
aas
dec
addb
xor
mov
inc
jnp
add
ds
stos
rcll
enter
xchg
mov
jns
cltd
sti
jno
add
repnz
call
add
add
ds
adc
lret
test
ds
lds
add
or
add
call
add
les
lea
mov
subl
jnp
mov
jae
or
jmp
les
add
cmpl
daa
adc
xor
out
xor
mov
cwtl
lea
cmpsb
arpl
mov
in
jnp
lods
push
jno
mov
push
popa
sub
push
push
sub
insb
into
jge
icebp
gs
ret
push
xor
jecxz
ds
lcall
and
push
adc
push
xchg
pop
push
mov
stc
mov
jns
jmp
iret
jns
fldenv
loop
inc
fadds
add
leave
mov
lods
negb
std
mov
sub
rcl
in
adc
lods
jmp
pop
mov
leave
pop
call
cmpsb
jns
add
cmp
or
cld
inc
mov
mov
fdivrl
daa
or
mov
fdivrl
sub
xchg
cmp
mov
cmp
mov
loope
lea
cmp
add
jge
or
pop
add
xlat
inc
ret
cmpl
jb
adc
std
jne
push
mov
lea
in
std
jne
push
sahf
rcrb
mov
lea
pop
push
decl
out
rcrb
mov
orl
ror
call
add
mov
leave
push
call
xchg
loope
add
mov
std
jne
pop
jne
inc
leave
push
call
xchg
cltd
notb
leave
push
call
ds
mov
ds
add
inc
or
aaa
testl
push
clc
sub
or
xor
add
ds
jl
add
add
sti
jmp
sbb
mov
or
ds
ss
inc
xor
inc
xor
add
mov
pop
jns
push
cmc
or
sbb
mov
push
jns
push
aad
jne
sbb
stc
icebp
jge
inc
out
mov
fcmovbe
scas
adc
or
adc
lds
arpl
test
add
lods
push
mov
loopne
or
lods
push
cld
mov
in
sbb
xor
mov
sbb
add
xor
adc
lds
repz
sbb
add
bound
test
pop
pop
nop
sub
sbb
xchg
pusha
sarl
sbb
or
incl
das
add
call
add
lods
decb
xchg
mov
xor
je
aaa
sub
and
testb
out
mov
scas
fmulp
mov
pop
xchg
mov
pop
aaa
scas
cmp
ret
jo
inc
scas
cmp
ret
push
sbb
ret
pusha
js
scas
dec
push
movsl
call
pusha
div
shlb
jno
mov
mov
xchg
sti
pop
add
leave
pusha
call
loop
es
add
xor
cld
sbb
or
push
sub
je
sub
push
pushl
decl
addr16
xor
pop
dec
aad
push
or
add
loopne
mov
add
mov
scas
mov
add
out
pop
add
add
xor
decl
xchg
fisttpll
add
sub
decl
ds
mul
data16
mov
dec
stc
insb
fwait
cmp
ret
jg
jmp
icebp
sbb
scas
dec
or
leave
icebp
pop
mov
push
or
cmpsb
mov
jle
test
push
inc
xor
adc
ds
jl
push
incl
add
rorl
out
mov
ds
shll
add
inc
es
dec
adc
ret
add
pop
faddl
daa
fsubr
add
stos
fcomi
and
jno
add
xchg
dec
xor
jle
ss
xor
stos
adc
addr16
push
xchg
inc
mov
jae
stos
pop
jno
add
test
int
add
cwtl
push
sub
pop
adc
or
fcmove
push
xchg
push
je
and
stos
mov
repz
scas
push
stos
test
sbb
and
pop
mov
inc
mov
jae
stos
pushl
out
std
outsb
cmp
call
mov
and
mov
jbe
add
mov
lods
test
insl
cmp
add
mov
test
push
cmp
mov
aad
test
std
out
cmp
enter
push
bound
fadd
cltd
cmp
std
mov
cmp
jmp
add
mov
call
mov
add
rcr
call
add
shrb
nop
pop
push
lea
out
out
pusha
pop
decl
xor
std
mov
popa
jg
jp
out
test
sub
add
pop
lea
test
adc
xchg
pop
je
adc
ret
pop
lea
out
out
and
ljmp
add
add
xchg
xchg
pop
call
cltd
sub
dec
dec
inc
ds
push
les
add
xchg
aaa
outsb
ret
add
jl
jns
sarb
add
cmpsb
ret
adc
stc
and
lock
jno
loope
jle
fadds
movsl
inc
ds
dec
mov
pop
add
inc
fldl
add
adc
adc
add
add
mov
add
or
add
pop
or
dec
ss
std
jno
push
pushl
cltd
call
mov
cmpsl
xchg
add
mov
jge
pop
jle
icebp
movsl
jne
push
adc
sub
adc
or
in
scas
leave
dec
add
mov
jns
mov
add
cmpsb
inc
sub
add
cmpsb
and
pop
mov
imul
pop
cmpsb
jnp
cmpsb
adc
add
inc
out
js
mov
add
xor
jmp
cmpsb
int
in
js
mov
add
incl
xor
or
pop
push
sahf
push
popl
cmp
or
faddl
inc
jmp
and
add
shrb
jmp
cmp
pop
push
adc
inc
jmp
cmp
rcrb
sbb
mov
shll
mov
aas
xor
cmpl
push
shll
fwait
jae
adc
call
ljmp
adc
aaa
sahf
pop
es
push
pushl
push
call
add
add
std
mov
pop
jne
test
or
fst
std
ficomps
ljmp
aam
cld
mov
jne
js
or
cmc
and
add
cwtl
or
add
sbb
add
pop
add
xchg
lods
std
pop
cmpsl
pop
push
int
push
int
lea
or
call
jne
push
add
inc
jnp
ds
nop
ljmp
push
divb
call
sub
dec
mov
lea
pusha
in
je
fdivr
mov
and
and
lret
mov
xor
bound
add
add
jae
ljmp
adc
mov
add
push
ds
sar
pop
clc
incb
add
fnstenv
test
add
pushf
hlt
nop
mov
jns
mov
pushl
lds
pop
xor
and
pushw
cmpsb
decl
adc
push
rcll
add
xchg
stos
adc
or
mov
mov
outsb
jns
mov
loope
ds
sub
ret
inc
call
add
add
lcall
stc
sbb
imul
xor
mov
pushl
mov
add
pop
or
push
pop
jmp
push
lret
jmp
lret
sar
or
scas
divb
mov
xlat
out
xchg
inc
mov
incb
cmp
out
idivb
mov
lea
roll
mov
push
clc
mov
or
jno
push
jo
mov
mov
enter
cmc
sar
push
xor
jae
and
cmp
push
cmc
call
pop
mov
mov
loopne
mov
lret
incl
add
add
nop
loopne
add
push
add
ljmp
or
scas
push
mov
cmpsb
std
mov
sahf
mov
push
push
pushl
mov
incb
cmpsb
std
jg
mov
and
cld
jmp
sahf
jae
ds
inc
ja
mov
sarl
push
mov
add
push
call
mov
add
mov
mov
or
pushl
sub
jb
decl
out
inc
ds
jne
es
sub
pop
jg
push
ds
decb
cmp
addr16
loopne
add
add
mov
cld
cld
loope
outsb
pop
jg
push
add
ds
push
pop
icebp
jmp
mov
adc
push
mov
add
push
lds
or
or
sbb
push
cs
sti
push
pop
into
mov
or
mov
lahf
inc
insb
aas
pop
xchg
or
mov
lahf
orb
insl
int
add
push
jmp
shl
jmp
or
xor
loopne
mov
ss
push
call
xchg
sbb
push
mov
sbb
das
push
call
decb
lahf
jl
mov
test
push
jb
or
in
aam
inc
jmp
adc
ret
pop
mov
jmp
add
dec
add
mov
pop
data16
cmp
jge
dec
call
add
cmpsl
pop
test
mov
jge
pushf
or
pop
cmp
add
add
fiadds
or
sub
ret
inc
cmpsl
hlt
popf
pusha
out
cmpl
sub
pushl
pop
inc
cmpsl
lods
aaa
push
das
add
and
pop
inc
add
addr16
sub
add
and
xor
mov
pop
push
push
add
mov
add
and
pop
inc
pop
pop
add
pop
mov
inc
mov
add
pop
pop
je
cwtl
insb
lahf
pusha
ds
push
rcrb
ds
add
xchg
add
xchg
inc
add
mov
add
mov
add
mov
testl
sbbl
add
cmp
adc
les
xor
jle
mov
inc
add
pop
add
jle
lret
roll
aaa
enter
jmp
dec
sbbl
shrb
mov
add
bnd
sbb
mov
std
cmp
pop
jmp
out
jo
lock
add
sbb
jmp
cmp
lds
add
shlb
add
push
push
mov
xchg
fmuls
test
mov
out
idivl
jmp
div
sahf
int
ret
add
xchg
in
or
cli
mov
stos
imul
icebp
inc
mov
popa
faddl
add
arpl
mull
loop
outsb
xchg
pop
lea
cmp
mov
lcall
jp
subl
pushf
pop
jmp
das
lcall
adc
sbb
push
bound
push
addr16
jl
lcall
mov
in
xor
or
push
out
push
add
or
push
cltd
or
dec
pop
call
cmpl
pop
leave
add
insl
add
or
jne
test
std
nop
xchg
or
sbb
push
push
outsl
dec
xchg
call
shlb
andl
push
call
pushf
popf
or
add
sbb
push
add
nop
or
push
pop
inc
xchg
fadd
or
test
pop
add
std
pop
lea
cs
out
jb
inc
mov
nop
imul
setp
ds
es
cli
jle
mull
addl
lret
out
dec
fs
out
adc
loope
or
dec
push
inc
add
cmpb
add
addb
jnp
add
mov
mov
add
rolb
call
hlt
or
call
or
call
jns
hlt
ljmp
add
sti
aad
add
cmpb
and
ds
push
push
es
arpl
pop
cmp
daa
add
push
sub
inc
fwait
hlt
sbb
add
orl
pop
mov
add
or
jmp
dec
mov
subl
pop
cltd
imul
cmpsl
add
or
add
cli
cmpsl
add
push
jecxz
xlat
stc
cmpsl
add
sub
ficomps
jmp
or
pop
jmp
icebp
sbb
add
jp
shlb
pushf
call
add
das
xchg
decb
pop
cwtl
jle
pop
lock
dec
add
je
adc
pop
in
xchg
je
mov
mov
sysenter
push
xchg
mov
add
jmp
movsl
jle
imul
je
jne
cmp
xchg
je
mov
or
dec
out
add
fsubp
call
into
mov
add
adc
call
call
loop
dec
frndint
dec
mov
enter
pop
add
mov
cld
mov
push
mov
adc
call
pop
mov
add
int3
cltd
jb
aam
inc
jmp
fnstenv
or
add
lods
adc
add
dec
cmp
mov
ret
push
mov
ret
mov
lods
cld
mov
jl
add
roll
lock
dec
pop
pop
pop
rcll
sub
ljmp
out
mov
push
call
or
xchg
cmp
ss
je
add
sbb
mov
cmpb
stc
jmp
jns
incl
adc
jmp
gs
es
inc
ds
jo
adcb
jno
adc
pop
sub
cs
add
sub
jbe
add
lcall
dec
into
pop
jmp
ja
pusha
fwait
ja
pusha
mov
ret
loopne
add
pusha
mov
add
add
and
adc
pop
jmp
ret
mov
gs
push
jmp
add
pop
imul
cmp
jmp
lock
stos
mov
sub
and
or
jmp
insb
dec
pop
add
xchg
call
shlb
add
mov
add
arpl
sarl
add
sbb
jl
cmp
pshufw
add
cmp
pop
cmp
pop
jne
jp
fsubl
cmp
pop
add
addl
shl
jl
add
call
inc
pop
add
mov
xlat
insb
call
jno
jl
cmp
or
add
pop
and
add
cltd
inc
call
cwtl
and
add
add
sub
jmp
movl
cltd
inc
mov
fsubs
mov
decl
out
mov
std
mov
std
jne
mov
incb
xorb
mov
jmp
inc
les
pusha
cmpsb
pop
add
xor
call
add
add
pop
add
out
inc
cmpsl
xorb
jno
add
mov
pop
ret
add
adc
jmp
pusha
incl
adc
test
mov
filds
call
out
sub
lcall
mov
addb
xor
fwait
pusha
jg
fisubrl
cwtl
addb
xchg
sub
add
or
out
pop
add
sub
ret
sub
out
pop
add
bnd
imulb
stc
stc
mov
inc
ja
xchg
pop
and
pop
mov
cmc
xchg
nop
or
outsl
jle
jne
mov
inc
addl
ljmp
in
lret
jbe
sub
inc
nop
mov
cld
add
sbb
sbb
adc
fcomi
faddl
fisttpl
fnsave
lock
gs
loopne
popf
fistpl
add
inc
in
aam
push
cmpsb
pop
add
pop
add
mov
dec
push
push
adc
add
jge
pop
cs
addb
add
cmp
sbb
fmulp
sahf
out
negl
loop
push
pop
scas
incl
cmp
jbe
imul
sahf
and
push
pcmpgtb
or
xchg
xor
pop
in
cmpl
lock
in
jmp
aad
pop
add
xchg
push
add
or
cld
lcall
cmpl
add
std
add
pop
or
mov
cmpb
or
add
adc
iret
adc
ljmp
pxor
jae
jg
cmp
lods
or
push
inc
add
or
mov
ds
add
mov
cmp
lcall
pushl
add
outsl
inc
insl
add
test
mov
jle
aas
test
lret
inc
jmp
adc
test
cmpunordps
add
testl
sbb
jmp
add
jle
add
movb
std
pop
lods
jbe
and
stc
inc
add
push
daa
add
inc
ret
daa
dec
add
ds
js
sbb
inc
pop
mov
jg
out
sub
cmc
cmp
fisttpll
fs
push
and
data16
cltd
pop
jmp
insb
sub
mov
mov
call
mov
ficompl
add
fisubrs
ljmp
cmpsl
add
sti
daa
add
xchg
jmp
add
fistpl
cld
addl
sub
push
fstp
mov
lods
call
sbb
call
adc
sbb
jb
xchg
fwait
mov
jne
mov
shr
cmp
sbb
push
cwtl
std
dec
jae
aam
pop
or
and
add
adc
stos
sbb
std
push
xchg
sbb
bound
add
cltd
pushw
adc
jecxz
push
neg
call
sarl
mov
popa
mov
pop
in
add
pop
jb
mov
mov
and
add
ret
inc
sbb
jne
sub
mov
iret
sahf
push
xlat
cs
mov
cmpsl
mov
xlat
pop
push
push
add
add
mov
jo
out
sbbl
into
test
jne
test
je
es
pop
pushl
cmpsb
scas
xorl
mov
cmp
andl
ljmp
jne
cmpsb
data16
add
std
lea
sub
std
ljmp
je
mov
stc
loopne
mov
add
arpl
ds
scas
mov
add
out
test
divl
xor
jo
test
aaa
out
xchg
xlat
addb
fidivrl
jle
add
xor
adc
movsb
mul
incb
outsb
add
ds
outsb
or
mov
xor
cmp
mov
jg
jecxz
dec
pop
xchg
add
cmc
call
out
mov
adc
push
sbb
mov
jp
rcr
lret
fldt
dec
in
push
inc
pop
ds
xchg
pop
mov
mov
push
and
nop
fcompl
jg
pop
jmp
pop
data16
add
cmc
fildl
add
sub
mov
aam
call
mov
repz
jg
add
add
imul
push
rcrb
mov
jmp
xchg
int
sub
repz
pop
push
subl
jae
fimull
clc
sarl
mov
jl
push
inc
sub
call
pop
mov
push
hlt
inc
add
pop
es
ror
adc
jmp
sbb
add
push
out
not
push
out
jmp
call
rcr
or
push
push
call
je
idivl
or
out
cld
call
jp
fsubrs
test
jp
call
out
cmp
push
stos
out
jmp
mov
fnstcw
push
cmpsb
out
jmp
mov
jne
jns
or
sub
leave
ret
push
mov
faddp
call
mov
pop
add
daa
and
push
repnz
pusha
xchg
pop
pushl
jns
or
test
push
xor
es
ret
or
xchg
stos
ljmp
addr16
incb
add
repnz
mov
push
call
test
loope
int
fxtract
loope
out
jl
and
mov
jl,pt
add
or
mov
fimuls
into
repnz
nop
ljmp
out
movl
je
inc
jb
or
fiaddl
push
fiaddl
push
pop
je
push
sub
push
add
inc
test
cmp
int
jecxz
call
push
adc
sbb
loopne
imul
mov
loope
push
xchg
loope
arpl
dec
test
out
fmuls
fucom
dec
push
push
sti
enter
dec
ja
sbb
cli
mov
test
cmp
add
push
es
cltd
hlt
add
iret
add
add
jge
push
loope
icebp
call
or
add
test
sbb
add
cmp
mov
into
push
adc
in
cmp
add
out
sti
call
cmp
popa
or
push
xchg
push
scas
inc
sub
test
mov
imul
pop
sbb
shrl
inc
jmp
mov
add
test
lahf
test
cltd
movsl
sub
cmp
push
or
addb
push
test
jmp
fwait
repnz
pusha
mov
pushl
outsl
mov
inc
arpl
sbb
sti
xlat
std
lcall
jb
cmc
pusha
inc
pop
dec
call
push
jg
adc
mov
push
push
lcall
call
call
add
dec
sti
lcall
push
add
out
lea
xchg
add
cmpsl
pop
call
push
cld
pusha
inc
cmpsl
idivb
out
pushl
and
call
jno
push
fbstp
inc
add
jne
add
lret
cmp
xchg
xor
add
add
rcll
aas
or
cltd
dec
divl
out
addb
fdivr
icebp
pop
add
and
push
or
mov
fsqrt
inc
cld
stc
jbe
pop
jg
add
je,pt
test
pushf
push
add
je
jno
je
push
es
arpl
pop
xchg
pop
pop
sbb
fidivs
cmpsl
mov
or
add
pusha
repnz
add
lcall
sahf
ficomps
jmp
add
pop
jmp
or
adc
iret
imul
cmpl
loopne
pop
icebp
jmp
add
add
xchg
imul
fmul
shrb
lcall
add
pop
pop
xchg
repnz
ds
add
add
jl
test
repz
fcompl
add
push
cmpsl
inc
test
xorb
sti
divb
loop
cld
pop
push
push
sahf
cli
inc
jmp
mov
cwtl
sti
mov
repz
sbb
gs
sbb
or
hlt
cltd
add
sub
jmp
add
add
add
xorb
jbe
lcall
leave
cld
pop
add
xchg
pop
add
dec
dec
push
call
iret
mov
repnz
xchg
pop
push
call
sahf
jae
aas
inc
cld
lcall
cli
popa
push
push
push
push
add
cmpsl
mov
cld
fcom
xor
add
mov
data16
mov
or
lds
decl
into
ljmp
das
pushl
jb
ja
and
outsb
add
push
inc
lods
or
jae
xor
mov
push
jns
ret
les
jge,pt
rolb
out
jl
or
movsb
decb
add
jne
add
add
sbb
bound
fnstenv
dec
inc
add
mov
adc
jae
fs
add
in
addr16
inc
add
mov
mov
frndint
fnstenv
push
or
xor
xor
cmp
fldcw
adc
ret
add
inc
push
inc
jae
push
xchg
jge
inc
mov
call
fiaddl
cld
add
add
call
sbb
sbb
xor
icebp
jmp
mov
outsl
fiaddl
sbb
sbb
mov
and
fisttpl
dec
pushf
sbb
xor
jnp
add
push
test
bsr
pop
jmp
gs
sbb
push
push
xchg
inc
pushf
jl
jne
adc
out
add
xchg
push
cld
sbb
add
jge
xchg
cmp
ja
cld
ss
push
call
aaa
xchg
shl
mov
cs
call
gs
jbe
rolw
inc
pop
xor
mov
adc
mov
repz
dec
jge
push
rcrl
fwait
jae
dec
jae
imul
dec
adc
pop
out
push
push
or
sub
add
sub
add
dec
call
call
mov
push
jne
fldenv
std
push
movsl
lods
cmp
mov
es
mov
add
stos
into
ljmp
xor
jne
outsl
enter
xchg
out
ljmp
out
insb
bound
push
call
sbb
jb
add
aaa
xchg
rclb
out
mov
out
pushl
xchg
ds
out
dec
xlat
fnstenv
decb
ljmp
addb
lds
add
mov
push
adc
xchg
xchg
dec
lcall
test
out
enter
incl
add
jmp
ljmp
xlat
je
dec
jne
add
push
jns
roll
mov
sar
test
xor
or
jae
xlat
mov
fsubs
test
mov
ds
popa
jg
aad
inc
pop
xchg
and
pop
xchg
add
ss
sarb
mov
cmp
test
sub
mov
sahf
inc
mov
dec
jb
add
pop
pop
fs
orb
push
inc
add
push
xor
sub
out
xlat
leave
add
imul
pop
testb
out
aad
pop
push
add
pop
sarl
and
int3
in
fwait
cld
call
add
inc
mov
dec
mov
addr16
lea
sub
sbb
js
loope
pop
cld
loope
push
rorl
je
add
mov
cld
pop
and
push
and
js
stc
pop
js
fistpl
cmpl
pop
nop
ss
jbe
stc
ficomps
xor
mov
test
mov
jae
or
push
fnsave
daa
push
or
or
js
push
or
adc
dec
jne
pop
mov
add
adc
and
jae
enter
cmp
jae
loope
rorb
pushl
sub
xchg
arpl
push
scas
mov
jmp
add
fcmove
jae
cld
aam
push
out
loop
call
sar
push
outsl
cs
ret
push
mov
ret
std
push
int3
dec
adc
sub
lea
jne
sbb
ds
hlt
insb
push
lret
test
mov
test
add
bswap
std
icebp
mov
iret
std
loope
xor
rcll
leave
das
int3
std
shr
push
dec
add
ljmp
or
idiv
or
je
sbb
jns
xchg
dec
cmp
push
pop
stos
mov
jmp
sar
inc
insl
xor
cltd
cmp
pop
cmp
adc
jbe
cmp
paddusw
call
mov
add
out
xor
stc
movsl
dec
loop
jmp
js
je
shlb
mov
add
shl
jb
rolb
add
fxch
iret
xchg
in
es
jne
shl
dec
cs
inc
jbe
sti
adc
imul
push
lret
mov
jb
testb
mov
or
mul
pcmpeqd
cmp
push
leave
stos
ds
push
bound
jbe
icebp
out
out
pop
rcrl
mov
lock
push
cli
call
cmp
lcall
add
je
icebp
cmc
aaa
jb
out
jne
aad
out
pcmpeqd
push
call
xor
cmp
xchg
jne
icebp
jne
jo
outsl
jne
in
gs
pusha
jmp
or
pushf
push
jl
fwait
mov
pushf
push
jne
stc
outsb
out
pop
add
movsl
outsl
incl
rclb
mov
cmpsb
mov
std
jne
hlt
addl
mov
push
add
add
std
ljmp
push
jg
add
out
addl
mov
push
dec
mov
jne
adc
sbb
xlat
push
movl
fcomp
repnz
mov
add
xchg
std
jmp
testl
mov
notb
push
hlt
xor
mov
push
incl
dec
add
mov
je
pushl
adcl
xchg
xor
fcomi
adc
add
ds
into
incl
incb
ds
test
lret
ds
mov
ds
inc
icebp
into
dec
cmpsb
shrb
ds
shrl
sbb
add
add
leave
add
mov
pop
insb
mov
adcb
cmpsl
add
jb
fcmovnb
adc
add
pop
jmp
inc
loopne,pt
add
jb
xor
add
add
test
fdivp
popf
test
add
xlat
add
cwtl
loope
xchg
into
rcl
enter
aad
jge
add
enter
mov
pop
mov
add
pop
ds
jmp
into
orb
clc
stos
and
shlb
cmpsb
xlat
push
mov
pop
mov
out
push
cmpsb
idiv
or
testl
imul
jmp
imul
repz
jmp
or
cmp
add
jno
xchg
adc
xchg
fsubrs
sahf
or
out
sbb
mov
dec
add
test
hlt
test
pop
or
icebp
push
pop
and
cmp
repz
lea
or
dec
lock
decl
or
pop
movb
pop
inc
aam
fcomi
adc
lea
negb
add
inc
movzbl
in
push
outsl
inc
arpl
icebp
inc
fadds
push
pop
pop
pop
add
lock
fcoms
jae
inc
je
cwtl
hlt
inc
shlb
adc
stos
jg
xchg
sahf
call
sahf
jae
dec
inc
arpl
lock
fadds
ficomps
pop
add
lock
fdivrs
mov
je
sbb
inc
mov
inc
int3
push
sub
movsb
pop
inc
add
cmp
aam
ret
add
mov
lret
xor
addl
xorb
add
jne,pt
or
aaa
sub
ds
cmp
jnp
into
xchg
push
or
aaa
nop
imul
enter
movb
test
cmp
jo,pt
lea
sbb
push
pop
add
cmovno
add
lret
sbb
xor
dec
xchg
lcall
ret
or
pop
mov
mov
bound
dec
cmc
sub
push
inc
outsb
fwait
mov
dec
lret
lret
push
jle,pt
fmul
outsb
cmc
lret
sub
adc
jmp
fistl
in
aad
or
mov
lret
stos
div
push
xlat
mov
outsl
cmp
daa
add
add
add
inc
or
orl
inc
jecxz
test
pop
add
outsl
mov
push
pop
clc
mov
push
dec
test
test
popf
jmp
test
insl
fldcw
jmp
cmp
xchg
call
lea
inc
sub
test
clc
bound
loopne
mov
fiadds
add
add
jns
cmp
sarb
jl
cmp
xchg
xor
add
jge
call
je
xor
pop
or
call
sub
jmp
fwait
inc
enter
add
sbb
ljmp
std
jne
nop
in
lock
cmp
pop
cmpl
je
adc
call
sub
mov
out
adc
add
stos
mov
push
cld
lods
gs
jne
mov
add
pop
out
ljmp
add
pop
pop
jne
test
pushf
arpl
push
add
xlat
push
mov
jmp
stc
shlb
les
ds
test
jnp
cmp
andl
push
dec
incl
add
add
scas
cmc
ret
add
dec
loope
jno
mov
add
xor
add
ret
mov
dec
mov
sbbl
dec
repnz
jge
push
mov
cmc
dec
clc
jns,pt
stos
je,pt
addl
add
ds
push
cld
xlat
testb
ds
jnp
fstps
in
shlb
push
inc
inc
lret
arpl
pop
xchg
in
add
adc
fisubrs
pop
fdivr
cmpsl
add
and
add
add
pop
pop
inc
or
add
pop
roll
mov
pop
pop
inc
dec
or
icebp
mov
fwait
pushf
sbb
inc
inc
add
jmp
push
out
push
es
fcoms
icebp
lock
inc
pop
movb
imul
add
add
or
mov
arpl
mov
inc
pop
push
out
sti
xchg
or
stos
mov
fadd
popa
negl
push
sub
decb
push
cld
push
mov
je
mov
pop
add
jge
push
mov
js
mov
sbbb
mov
add
lret
cmp
loope
lock
shrl
into
ja
clc
add
jne
sahf
push
or
mov
or
jg
std
ljmp
addr16
dec
sahf
std
leave
aad
add
addl
or
or
xchg
pop
add
xchg
lahf
jae
ljmp
add
testb
gs
int3
aas
pop
leave
add
and
loop
or
pop
mov
pop
fcmovu
add
pop
mov
jecxz
or
mov
fdivr
xor
push
add
sbb
repnz
cmp
sub
jg
xor
decb
pop
mov
incl
mov
push
xlat
push
jb
push
or
dec
push
push
xor
or
add
mov
add
sahf
jne
ret
movsb
mov
cmpsl
je
in
cmp
inc
push
cmp
shll
add
jb
cmp
mov
sub
andl
fiaddl
push
fiaddl
push
pop
je
push
or
sbb
adc
add
fwait
push
mov
das
jb
xor
and
rcrb
mov
add
mov
lock
mov
lods
mov
sti
mov
pop
jle
stos
jae
pop
ds
xor
jmp
pop
add
adc
scas
int3
jg
jmp
enter
jecxz
inc
add
gs
add
pop
jmp
ret
pop
add
cmp
add
aas
add
leave
std
decl
inc
pop
call
add
add
pusha
xchg
jmp
cmp
mov
inc
cmp
jmp
cld
rolb
pop
and
cmp
mov
fs
push
xor
sub
je
in
pop
jmp
jl
xadd
inc
jmp
mov
add
mov
dec
push
es
outsl
out
loop
add
add
push
call
pop
add
stos
test
cmpsl
scas
pop
add
pop
xor
jne
mov
add
fwait
jae
pop
bound
fwait
jae
fcoms
xlat
ffreep
or
sub
push
shrb
push
add
add
or
fwait
jae
and
ljmp
addl
mov
jo
lcall
add
pop
xor
std
jne
fwait
xor
lahf
sbb
call
into
sbb
push
fwait
jae
ds
aaa
or
inc
jg
stos
sub
dec
add
out
mov
xchg
mov
add
gs
icebp
cli
inc
aam
jb
je
movsb
xor
inc
jg
stos
std
pop
mov
lea
shll
or
add
jno
in
in
mov
jl
jno
test
jno
add
insl
ljmp
cmpl
test
mov
pushf
xlat
pop
or
cmp
adc
fiadds
xchg
arpl
mov
cwtl
rclb
fisttpll
out
xorl
aaa
pop
repz
add
shll
shrl
bound
or
out
mov
mov
loopne
push
hlt
test
adc
pop
daa
bound
adc
rorl
data16
sarb
call
push
push
out
pushl
adc
movsb
jge
jne
les
int3
push
sub
loope
cwtl
addr16
loope
or
add
cmp
movsb
addr16
enter
aad
insb
fidivrs
arpl
test
je
xchg
imul
pusha
je
movsl
jae
scas
mov
xchg
xchg
jnp
sahf
clc
pusha
je
in
push
call
mov
fsubs
mov
xchg
push
enter
aad
push
mov
mov
je
inc
mov
imul
std
jne
add
mov
imul
std
jne
mov
imul
ret
push
mov
ffree
call
loop
dec
call
adc
add
call
rorb
inc
add
xlat
xchg
inc
clc
xlat
pop
add
mov
pop
add
xor
push
xor
lea
dec
lea
cmpsl
cmc
mov
sahf
jae
scas
push
add
add
pop
push
jg,pt
call
push
in
rorl
ret
jbe
mov
idivb
inc
lods
sbb
addl
inc
into
inc
add
daa
lods
notb
imul
stc
ljmp
stos
popf
mov
loope
ss
mov
cmp
incb
add
orl
imulb
jb
or
call
cmpsl
sbb
pop
pop
mov
push
pop
inc
mov
push
pop
xor
mov
cmp
add
ljmp
sub
pop
cmc
jne
addr16
mov
add
fstpl
mov
call
pop
lds
rcrl
mov
imul
jg
jmp
shlb
sti
or
aam
sub
testb
sti
pop
faddl
mov
fdivl
stos
inc
xchg
xchg
shl
or
xchg
in
lock
add
in
addr16
in
inc
or
sbbb
imul
add
repz
sbbl
sub
jae
jae
cmp
pop
out
ja
cltd
arpl
cmp
lcall
jae
jnp
pop
out
pop
pop
incb
sbbl
rorb
call
test
cmp
mov
jne
add
addr16
push
cwtl
add
stos
int3
ljmp
mov
movl
into
inc
or
pusha
je
outsb
mov
ret
mov
jmp
jnp
out
add
sbb
sub
lcall
dec
call
orl
jmp
pop
and
or
das
mov
add
add
repnz
ds
add
dec
icebp
mov
inc
xchg
dec
cld
dec
into
lds
jg
or
add
mov
adc
push
push
insl
pop
roll
push
mov
mov
xorl
push
andl
push
gs
shll
stc
dec
cld
gs
or
pop
jmp
mov
mov
daa
aaa
or
add
enter
call
decb
addr16
bound
stos
or
mov
inc
pop
repz
icebp
imull
inc
fwait
cmc
jg
pop
jmp
mov
pop
jb
and
jno
cmp
lods
adc
fadds
dec
pop
xchg
or
movsl
mov
and
push
inc
add
or
sub
push
add
pop
pop
or
ja
mov
pop
cmp
stos
daa
mov
push
aad
xchg
add
inc
dec
jo
dec
mov
mov
aas
jmp
leave
iret
adc
ror
clc
jbe
arpl
lahf
sbb
inc
inc
sbb
jg
push
das
push
aam
inc
adc
mov
mov
add
pop
cmp
cmp
inc
or
dec
add
push
jmp
es
add
cmp
and
jmp
cs
jmp
bound
enter
add
add
adc
rcrb
decl
sbb
jne
loopne
add
xchg
or
xchg
pusha
std
jne
add
adc
movq
or
inc
adc
push
mov
addr16
add
sbb
add
or
add
pop
add
or
push
pop
add
clc
call
add
adc
mov
pop
call
jmp
lds
decb
mov
sub
adc
add
add
inc
sub
jg
dec
xchg
imul
jl
inc
das
and
cmp
mov
mov
je
sbb
push
mov
cld
out
test
test
cmpl
sub
je
pop
inc
bound
imul
call
out
add
add
ds
push
cmp
loope
int
mov
arpl
mov
vmovaps
and
add
mov
push
xchg
mov
pop
out
sbb
sub
adc
jle
ss
je
jns
xor
ds
out
aam
out
mov
jp
cs
shlb
aam
push
aaa
mov
outsl
roll
pop
xchg
add
add
or
mov
inc
lods
add
pop
push
inc
pop
jl
or
xlat
sub
push
add
mov
pop
inc
roll
cmp
add
les
into
mov
call
scas
pop
push
add
cmp
roll
ss
gs
int
call
push
addr16
cld
dec
push
inc
insl
cmp
jmp
add
cmp
push
push
inc
clc
push
incb
xor
jmp
cmp
or
pop
add
lret
jmp
sbb
or
pop
add
pop
idivl
jge
push
jo
fsubrl
jb
push
mov
xlat
cltd
push
jae
or
jo
hlt
xorl
shll
pushl
icebp
add
or
adc
xchg
hlt
incl
add
pop
pushl
icebp
pop
pusha
rorb
jne
ja
jp
pushl
icebp
sar
loopne
pushl
icebp
mov
add
add
ja
jl
push
push
or
dec
and
bound
inc
xchg
or
ds
mov
mov
push
mov
or
fs
dec
jp
testb
jmp
cmp
pusha
add
shll
add
dec
push
mov
mov
cmp
mov
mov
cmpsb
ljmp
ds
add
cmp
mov
mov
cmpl
add
ds
xor
xor
dec
ror
mov
lea
ljmp
pop
lds
lds
inc
inc
loopne
incl
add
out
inc
loopne
adc
mov
mov
arpl
xor
rcrl
es
cmp
mov
fists
pop
push
inc
and
lahf
mov
fildll
jns
out
ds
jb
xor
add
pop
out
repnz
out
andb
add
sub
pop
push
pop
in
stos
mov
pop
daa
add
andb
cltd
and
sub
push
mov
add
inc
sbb
mov
hlt
cltd
scas
or
push
push
out
xlat
xchg
in
pop
in
jnp
inc
movl
add
add
pop
aas
mov
fstpt
inc
pop
mov
test
ds
mov
sbb
jmp
inc
imul
add
test
in
cmpsb
divl
add
cmp
xchg
lock
cwtl
or
out
cmp
lock
call
je
add
das
bound
ss
or
das
dec
call
fs
add
cmpl
mov
add
cmpl
xchg
cld
call
add
cmp
pop
pop
ficomps
or
adc
in
xor
cmpsl
pop
add
mov
std
mov
add
loopne
lods
call
mov
aad
cld
ds
dec
lods
mov
movb
add
mov
dec
hlt
mov
scas
je
push
cli
sbb
mov
adc
push
mov
sbb
or
add
mov
fldenv
lods
dec
cmpsl
mov
dec
movsl
stos
add
xchg
add
xchg
je
lds
mov
inc
lods
je
roll
lds
aas
pop
out
ds
mov
mov
imul
test
das
dec
pop
mov
jmp
mov
ret
dec
pop
es
test
jns
imul
lods
loopne
add
push
jne
lock
lcall
add
push
add
ss
jae
rorl
push
push
xor
lods
test
and
mov
arpl
lods
adc
ss
push
dec
jns
jno
jbe
add
push
push
je
vcvtps2dq
add
or
scas
std
dec
xchg
adc
and
iret
cld
in
pusha
subl
push
dec
mov
aas
jmp
movsl
enter
lods
sub
subl
adc
packsswb
add
pusha
jg
imul
mov
xchg
hlt
add
inc
adc
add
xchg
ss
aad
mov
jecxz
add
cltd
cmp
test
mov
imul
jp
in
test
ljmp
pop
mov
cmpl
push
add
cmp
jmp
pushf
lods
hlt
mov
rolb
aaa
insl
add
mov
call
inc
mov
push
out
roll
decl
loopne
adc
push
out
add
out
add
mov
imul
push
out
testb
sub
mov
std
jne
add
ds
int3
andl
xchg
jo
stos
or
sti
jmp
cltd
stos
sub
mov
cmp
stos
xor
stos
es
je
test
or
or
out
je
incb
cli
test
add
add
call
stos
and
cs
and
add
mov
add
inc
xlat
push
add
ds
dec
hlt
lds
insb
add
adc
add
std
sub
dec
xchg
dec
adc
sti
test
arpl
jo
xchg
addr16
imul
addb
fstl
sub
push
inc
cwtl
add
cmp
jp
rolb
sub
fldt
adc
andb
or
out
mov
adc
pop
fnsave
pop
imul
int
test
leave
xchg
iret
jl
inc
imul
sub
mov
xlat
iret
adc
mov
in
loop
inc
jbe
stos
subb
add
mov
add
fdivrs
jle
pop
push
mov
cmpsb
in
adc
movsb
test
cmp
ljmp
std
mov
lcall
out
or
pusha
pop
std
xchg
flds
mov
dec
sub
xchg
fnstsw
sbb
add
inc
fimuls
rcl
jmp
add
rolb
add
jae
cmpl
mov
pushl
pop
pushl
add
test
sbb
push
pop
out
mov
jae
pmullw
jne
out
popf
pusha
call
pop
pop
leave
imul
lods
jecxz
push
inc
out
stc
add
push
pop
mov
call
sbb
jne
test
rorb
pop
call
add
jno
ljmp
repz
inc
out
jne
adc
jae
ds
or
lcall
cmc
stc
jmp
adc
push
or
cmpsb
je
in
jo
ds
mov
jl
add
pop
inc
add
cli
out
jl
add
xor
dec
testb
sbb
fs
cmpsl
je
stos
fimuls
xor
mov
add
xchg
cmp
mov
js
inc
add
out
stc
out
or
xor
loope
cmc
mov
jae
ds
lahf
add
pop
out
negl
mov
dec
push
push
inc
inc
ds
cmp
add
push
cmpsl
das
inc
test
mov
lds
daa
inc
xor
pop
jmp
ljmp
add
lret
insl
hlt
pop
out
or
sub
ds
sti
adc
addr16
iret
rolb
mov
fcmovnu
dec
mov
in
iret
in
xor
cmp
xchg
jmp
cltd
inc
jmp
cmp
or
jbe
cmp
cmp
inc
jne
ljmp
sbb
add
and
pop
add
insb
cmc
and
pop
add
cmp
lds
cmpsb
inc
jmp
sbb
movsb
xchg
xor
js,pn
add
cmp
pop
jae
jecxz
and
sarl
cmpsb
bound
imul
scas
jmp
add
inc
adcb
inc
andb
jae
add
cwtl
xchg
hlt
add
push
mov
cmc
pop
andb
add
dec
jecxz
call
mov
jne
xor
mov
sbb
inc
hlt
sbb
add
pushl
sub
loope
pop
adcl
mov
movsb
adc
push
enter
pop
outsb
pop
adcl
dec
inc
daa
pop
jae
add
inc
add
ds
fldl
movsl
inc
add
mov
add
xor
add
mov
jns
ds
add
mov
add
mov
ds
inc
mov
popl
popl
mov
add
sti
mov
dec
ret
jle
dec
mov
push
data16
pushl
mov
testl
xchg
inc
push
add
add
add
add
add
adc
out
mov
mov
daa
outsl
dec
push
sbb
call
xor
add
add
dec
repnz
out
xchg
nop
sub
pop
out
mov
add
pop
bound
sbbb
fcompl
repnz
xchg
rcrb
add
pop
pop
jp
pusha
into
stos
xchg
add
ja
outsb
xor
pop
inc
pop
out
xchg
pop
out
mov
fildll
add
pop
push
and
out
add
jmp
rolb
inc
and
adc
jl
cmp
sahf
inc
imul
mov
inc
std
pop
std
pop
cmpb
and
or
add
dec
arpl
popa
lcall
dec
mov
or
pop
std
adc
cmp
cmp
test
sbb
add
or
pop
std
fdivl
dec
mov
pop
or
dec
cwtl
push
add
or
push
xchg
decl
xchg
mov
pop
std
jne
notl
pop
sti
jne
sti
je
cmp
call
add
fsubrs
call
jne
imulb
loop
jne
loop
fmull
cmp
js
enter
std
ljmp
add
mov
jnp
add
push
pop
mov
xchg
inc
lret
xchg
fsubs
call
movsb
jl
add
cmp
ljmp
sub
add
jg
lahf
je
pushf
jge
ds
rorb
push
xor
inc
out
nop
inc
daa
add
mov
lahf
mov
mov
pushl
fwait
xchg
arpl
xor
or
mov
sti
fbstp
lea
cld
xor
cmp
adcb
cmp
add
add
xor
mov
pop
pop
sahf
imul
pop
xor
xchg
inc
xor
popa
xchg
or
and
pop
pushf
add
lea
push
sahf
call
shrl
popf
clc
push
dec
lea
out
popf
rolb
mov
ljmp
pop
out
faddl
lret
lcall
test
add
imull
ds
sbb
loope
push
inc
ds
sub
or
scas
push
movb
stos
or
add
aam
push
xor
aam
xor
pushf
mov
xchg
lock
stos
or
lods
std
es
sbb
sbb
jmp
push
lcall
sub
in
sbb
jmp
add
adcb
add
push
into
dec
push
call
bnd
push
push
das
add
je
mov
push
add
addr16
in
lods
aaa
jb
cld
push
rolb
out
cmpl
add
push
add
pop
sub
outsb
sbb
add
inc
in
mov
je
outsl
cmpsb
push
call
cmc
add
push
cmp
add
shr
std
je
xor
lea
push
call
or
je
and
pushl
jl
xchg
imul
xlat
adc
or
loop
or
push
call
dec
shlb
jl
imul
lret
shll
mov
cltd
je
in
xor
lds
cmpl
enter
add
add
cmp
lea
xor
xchg
dec
stos
imul
push
push
clts
mov
cs
mov
mov
out
call
mov
mov
in
ds
ljmp
jle
les
ds
inc
in
push
lcall
repz
mov
rdmsr
call
cmp
xchg
ljmp
adc
icebp
push
push
add
push
pop
adc
and
pop
dec
jnp
fwait
out
cli
sbb
data16
or
dec
mov
sub
inc
sub
lcall
das
int3
call
xor
das
imul
xor
xor
cmp
adc
cmp
pop
das
lcall
cmp
or
fldt
sbb
add
cltd
mov
mov
add
cmp
or
adc
jne
mov
cmp
mov
in
add
arpl
hlt
sub
imul
cmp
and
push
imul
stc
mov
jmp
repz
icebp
xchg
jmp
push
mov
jmp
add
push
lcall
cmpsb
or
xor
pop
add
pop
mov
dec
std
pop
std
push
inc
mov
add
or
adc
push
add
jmp
push
std
jne
insl
sbb
inc
dec
call
push
das
adc
push
loop
or
inc
pushl
pop
push
decl
add
push
js
or
add
xor
je
jg
ljmp
and
mov
push
cli
stc
push
mov
pushl
sar
mov
popf
add
xor
dec
cwtl
sar
call
sar
jne
cmp
div
sub
push
mov
add
sahf
add
sub
loopne
ljmp
aas
cld
dec
pop
inc
ds
xchg
decb
paddb
add
or
add
incb
xchg
add
mov
add
sub
jns
inc
add
fs
xchg
je
dec
test
add
pop
inc
fsubrl
jg
xchg
xor
jmp
add
daa
cmp
mov
pop
jo
cmpsb
ret
popa
pop
aas
add
dec
mov
cmpb
xchg
or
roll
add
cmp
add
pop
out
mov
pop
mov
push
cmp
or
xchg
inc
cmp
fwait
and
pop
xchg
xor
fstl
mov
push
push
in
imul
cmp
rolb
xchg
outsb
adc
dec
das
icebp
cmp
ljmp
adc
mov
lret
or
add
add
ffree
fstl
pop
mov
or
sbb
push
out
aas
jmp
pop
ss
cmpsb
shrl
call
mov
mov
andb
cmp
mov
shl
inc
pop
push
push
fs
cmp
xor
je
stos
scas
or
mov
cs
add
in
push
xor
daa
jae
xchg
inc
inc
dec
add
iret
gs
pushf
add
sub
mov
sar
jne
add
or
ret
push
mov
je
jg
pop
jmp
xchg
gs
pop
push
call
pop
into
je
daa
into
je
scas
inc
xlat
pushl
iret
enter
push
mov
add
sar
test
push
shlb
add
inc
loope
cld
pop
or
cmpb
data16
sub
add
cmc
test
or
mov
and
mov
mov
mov
adc
xchg
xchg
and
xchg
je
or
jns
xchg
je
lcall
popa
aad
add
fs
add
mov
push
jnp
xor
lods
pop
clc
mov
pop
or
fnstsw
push
sbb
fsts
popf
nop
xor
ficoml
lods
ss
pushf
loopne
out
fwait
mov
push
xchg
jo
sub
ds
jb
shrb
xchg
inc
sbb
xor
inc
ds
xchg
divb
xchg
scas
divl
mov
mov
xchg
jo
stos
ljmp
jb
mov
pop
add
push
scas
fistps
mov
jnp
jp
pop
inc
fldt
xchg
lcall
add
pusha
daa
pop
dec
mov
pusha
xor
mov
lahf
clc
cs
xor
int
or
xor
clc
addl
fnstenv
std
dec
xor
std
je
cmp
out
xor
jl
scas
xor
std
scas
xor
jae
iret
scas
cld
scas
push
arpl
mov
xor
ds
sbb
push
xor
cmp
cmp
arpl
insl
push
aaa
mov
mov
add
jge
add
jl
push
add
add
inc
add
ss
sti
mov
push
pop
push
scas
push
add
imul
incl
out
cmp
call
fwait
push
mov
pushl
xor
jne
lret
outsl
dec
push
mov
push
push
mov
and
dec
es
add
lock
push
push
std
incl
add
xor
cmp
push
add
lahf
aam
mov
je
lcall
inc
push
add
pushf
adc
ds
jg
shl
sbb
fs
sbb
push
inc
xchg
je
pop
mulb
add
test
jp
ds
add
lret
ja
dec
and
sbb
adc
sbb
sbb
lea
add
les
add
lock
test
pop
stos
inc
call
dec
inc
pushf
out
dec
inc
jbe
stos
mov
push
js
stos
pop
dec
xchg
aas
pop
sbb
inc
sub
ret
lea
add
inc
jle
push
aas
mov
xor
sbb
xor
mov
xor
mov
fisubs
add
add
dec
out
xchg
xor
cld
nop
cmpsl
rcrl
jbe
hlt
add
out
mov
pop
mov
cli
mov
mov
cmpsl
ss
xor
sbb
sbb
out
repz
add
arpl
or
mov
pop
mov
push
push
mov
pop
pop
inc
enter
adc
push
inc
add
push
mov
es
pop
push
and
xor
pop
jnp
mov
xor
stos
lcall
aad
pop
push
mov
or
pop
mov
cld
inc
push
xor
sar
lret
ret
sub
btc
incb
dec
xor
aam
pushl
fidivs
pop
dec
incl
add
imul
in
sbb
setns
xlat
imul
enter
scas
pop
add
jno
pop
xchg
pop
push
ljmp
fdivrp
call
pop
sbb
jmp
add
pop
pushl
shrl
push
jo
mov
push
sbb
sub
out
mov
push
fidivs
mov
mov
sbb
ds
cld
out
loopne
cmp
mov
stos
sub
dec
mov
add
mov
add
pushf
dec
stc
xchg
jp
repnz
add
data16
inc
ds
adc
inc
add
dec
xlat
push
cmpsb
fisubrs
jae
mov
add
fmuls
je
add
lcall
data16
ljmp
aad
cmpsl
std
mov
pop
pop
cltd
pop
or
dec
dec
test
mov
bound
mov
xchg
pop
sbb
add
ss
push
shll
mov
adc
push
jge
das
arpl
xchg
mov
out
add
xchg
fwait
mov
out
inc
sbb
add
shrl
inc
mov
out
cltd
in
jg
sbb
adc
fimull
xchg
xor
sub
mov
mov
or
push
add
cmpsl
or
dec
pop
push
add
aas
jmp
sbbb
push
sub
pusha
add
jle
imul
fisubs
cmp
pop
std
hlt
test
repnz
push
mov
inc
sbb
pop
lcall
mov
aam
cli
pop
call
jo
sub
pop
lcall
jcxz
aam
cwtl
add
shrl
fisubrs
sbbl
std
jae
jl
push
pop
inc
orl
jae
add
dec
mov
sar
dec
test
jne
loop
or
dec
ljmp
je
mov
mov
pop
in
jmp
loop
pushl
loop
or
push
dec
decl
je
dec
es
ljmp
cs
ljmp
push
dec
ljmp
je
sbb
je
adc
or
add
cmp
popa
inc
mov
mov
mov
inc
inc
dec
cld
out
dec
xchg
ja
imul
pop
inc
add
mov
mov
call
inc
je
sbb
mov
fisubl
add
stc
out
sti
mov
mov
mov
cmpsl
stc
out
cli
mov
add
ja
std
push
mov
jecxz
adc
push
inc
xorl
ret
jnp
subl
ds
add
lcall
push
adc
add
push
cmpsl
adc
jg
xchg
sub
xor
mov
push
jg
mov
xchg
push
dec
aad
sub
aaa
mov
cmc
insl
daa
dec
call
clc
out
incb
add
das
adc
sub
xchg
mov
ret
mov
movsl
mov
mov
sbb
sub
jl
inc
inc
pushf
mov
aam
inc
inc
pushf
add
sub
push
dec
sub
call
loop
lods
and
mov
push
cmpsb
rclb
cltd
push
add
aas
jmp
jbe
inc
enter
mov
in
pop
mov
bound
push
jl
cmc
sbb
repnz
lods
and
stc
sarl
or
sub
cmp
inc
gs
mov
add
and
cmpl
std
mov
fdivrp
or
dec
and
inc
inc
aas
add
push
push
pushl
inc
insb
std
jne
add
push
js
fsubp
pop
pusha
fdivrp
decl
jne
int
mov
pop
add
ret
add
mov
lock
fidivs
push
incl
fidivrl
push
and
iret
mov
fidivs
pop
or
jg,pt
pushl
cmpsb
mov
sub
lcall
and
call
add
ja
cmc
call
mov
sbb
aam
xorl
dec
pop
lock
push
fwait
add
ds
lret
xor
add
xor
out
fs
hlt
or
rclb
adc
mov
inc
jns
add
pop
mov
decb
xor
add
popf
inc
imul
pop
setns
pop
fwait
add
fistl
setnp
xchg
push
test
push
stc
add
pop
out
mov
imul
out
std
and
xor
loope
out
xchg
mov
jmp
pop
setb
fwait
out
mov
jg
test
popl
cmp
scas
iret
sbb
mov
adc
pop
out
mov
add
xor
psraw
add
mov
scas
or
add
std
push
mov
dec
std
xchg
xor
and
and
push
call
repnz
scas
arpl
mov
cmp
cmp
add
inc
es
in
cmp
cmp
pop
inc
mov
ss
call
add
add
es
push
and
cld
add
pop
in
das
mov
xchg
std
pop
mov
pop
call
add
cli
call
fsin
call
fnstenv
rolb
dec
xchg
mov
in
adc
cmc
push
and
jp
out
add
cmp
dec
sbb
call
cmpl
sub
movl
add
jmp
lds
pop
add
push
aad
cld
pop
aam
clc
ja
test
inc
add
pop
or
adc
cmpl
je
xchg
and
add
bound
push
ds
xorl
jmp
decl
push
enter
shr
addb
testb
cmc
sti
add
cltd
push
cld
dec
pushl
loopne
jl
add
or
inc
inc
jbe
add
ds
repz
add
adc
sti
in
push
insb
dec
xchg
add
ds
add
ds
xor
push
pop
add
inc
sbb
add
cmc
xor
inc
insb
loopne
mov
mov
pop
fisubl
roll
and
jnp
test
subb
add
js
add
pop
out
test
orb
movsb
add
and
add
pop
push
test
test
orb
add
jle
es
test
imul
test
mov
adc
pop
out
popa
testb
push
cmpsl
clc
push
mov
insb
stos
xchg
jg
xchg
xchg
fisttpll
xor
adc
add
add
inc
fwait
xorb
sub
test
imull
add
mov
jg
dec
test
pop
jae
cwtl
jg
sub
mov
xor
sub
sub
cmp
and
stc
cmp
pop
add
and
loop
inc
sbb
and
test
cmp
add
in
sub
xor
xchg
test
mov
and
mov
inc
pop
mov
nop
mov
je
nop
and
push
jg
sti
incl
pop
in
add
fsubrs
jge
pop
or
add
in
sbb
add
mov
ss
pop
mov
aad
mov
add
jno
lods
push
addr16
xor
xor
add
sbb
or
fisubrl
cmp
sub
mov
cmpb
sarl
inc
filds
inc
test
clc
dec
mov
cmc
out
out
popa
jnp
add
xor
add
jmp
call
dec
roll
dec
pushl
or
add
sub
jl
xor
sbb
jp
je
and
jmp
sahf
or
ret
sub
pop
out
inc
add
imul
pop
pop
insb
out
imul
pop
push
dec
pop
sub
xorl
aaa
fdivp
sbb
add
xchg
cmp
adc
cwtl
jbe
cmp
call
cmc
push
aad
add
jns
jl
mov
imul
jl
sbb
add
add
cs
mov
add
push
popf
or
xor
push
push
test
jge
xchg
push
lahf
jl
adc
add
mov
mov
pop
inc
ret
out
imul
add
add
jle
cmp
mov
jmp
add
or
int3
xlat
cmp
pop
jmp
sub
xchg
sub
jge
and
gs
rcl
mov
cmp
mov
jmp
and
and
std
loop
push
adc
push
jae
add
push
call
inc
add
push
add
aam
inc
add
pushl
mov
add
dec
rorb
imul
pop
lcall
loopne
out
jmp
pop
add
das
imul
cmpsl
dec
lea
idiv
mov
pushl
mov
xor
out
shlb
add
pop
push
rorb
inc
fisubl
mov
add
mov
out
fisubl
idiv
push
mov
push
ds
push
adc
orb
mov
xor
pop
xchg
jae
jmp
outsl
sbb
in
or
inc
enter
jge
or
loopne
jg
jns
fiaddl
call
scas
pusha
testb
leave
pop
test
sbb
pushl
jns
lcall
call
inc
jb
sbb
and
je
sub
jo
sbb
insb
arpl
loop
int
pop
insb
dec
xchg
mov
jo
sbb
add
pop
adc
xchg
ret
and
pop
adc
js
addr16
insb
je
jg
add
mov
test
jmp
subl
loopne
push
out
inc
add
int3
rcrb
jno
stc
adc
js
fmuls
jo
sbb
or
cmpl
pop
fs
imul
jns
andb
imul
in
jmp
fnstsw
jmp
cmp
add
call
cmpsb
out
add
sahf
test
xchg
mov
mov
cltd
sbb
jle
call
outsb
out
or
pop
imul
loopne
push
sbb
mov
add
lods
xor
je
adc
xor
std
push
adc
rclb
or
incb
or
and
nop
cmp
pusha
test
dec
pusha
nop
mov
mov
jg
inc
incl
nop
call
lock
loope
loopne
in
pop
nop
decl
test
inc
rclb
incl
fs
dec
xor
addb
outsl
xchg
std
adcb
xor
pop
push
mov
add
shl
sbb
push
fidivrl
push
and
add
or
push
add
je
jle
ljmp
pop
jae
leave
inc
jl
shrl
jno
ds
push
jns
jl
aas
add
jmp
leave
in
notl
xchg
xor
add
lea
aam
cli
push
push
call
add
xor
sbb
add
out
push
or
push
pop
jae
imul
mov
jns
sub
add
rorl
adc
jg
out
mov
imul
out
add
jge
cwtd
mov
js
je
ret
pop
sbb
je
iret
jae
pop
mov
add
pop
out
mov
ss
je
add
pop
fisttpll
pushf
out
xchg
arpl
jmp
pop
out
lock
fildll
push
addr16
nop
pop
je
arpl
cmp
dec
dec
lcall
into
mov
imul
lods
add
xor
std
push
les
dec
test
pop
or
jmp
jl
fsubrp
aad
call
cltd
fwait
add
add
cmp
mov
cmp
mov
test
outsl
cmp
gs
pop
add
mov
push
idivb
fidivrl
arpl
fistpll
cmp
mov
test
inc
pop
add
out
mull
cmpsl
aaa
xchg
iret
dec
inc
xchg
xchg
inc
clc
adc
testb
fstl
cmpsl
pop
sub
add
rorl
mov
cmpsb
pop
mov
pop
xchg
je
ds
call
push
or
xlat
gs
cli
mov
adc
psrlq
jmp
mov
push
incb
mov
xor
pop
or
sbb
icebp
add
pop
cmpl
pop
add
push
and
ljmp
out
push
adc
jne
mov
jbe
lcall
add
rcrl
ljmp
push
pop
std
outsb
add
or
mov
jg,pt
out
mov
jmp
out
push
in
jb
mov
pushl
add
aas
push
rcl
outsl
adc
dec
sar
ret
ret
inc
fs
xchg
add
call
outsl
push
inc
ds
inc
jae
filds
add
pop
jp
fstpt
pop
fmull
pop
rorl
fs
push
neg
adc
test
cld
stc
mov
fdivl
fistps
cltd
es
mov
jo
pop
push
testl
pop
negl
fistps
cltd
out
jo
ret
pop
aas
sahf
fidivs
lret
jo
frstor
ret
inc
and
push
add
les
mov
sbb
clc
jo
pop
imul
pop
fiadds
out
jge
lock
jmp
dec
aad
test
adc
xchg
inc
adc
std
dec
out
mov
sub
push
jb
fcmovnb
adc
js
push
es
data16
aam
cltd
aas
jmp
cmp
sar
cmp
add
add
notb
add
test
inc
inc
test
pop
ja
push
je
or
std
cmp
adc
lock
cmp
add
call
ret
add
adc
call
inc
xchg
int
pop
xchg
idiv
pusha
daa
push
call
pop
in
divl
in
jmp
push
xor
std
mov
add
mov
jmp
aam
out
call
mov
xchg
incl
addr16
das
inc
add
fincstp
push
cmp
fwait
aad
add
inc
pushl
test
push
xor
std
mov
mov
call
push
aam
push
call
mov
jg
testb
xlat
jmp
flds
xchg
mov
sub
mov
add
add
stos
dec
inc
shll
outsb
push
add
mulb
ret
add
jmp
jbe
test
ret
fcmovnb
outsb
inc
ja
testb
outsb
ds
add
imul
je
push
xor
sbb
inc
and
shrl
xor
out
inc
imul
xchg
pop
cmpsb
insl
add
mov
repnz
adc
insl
clc
paddw
fnstenv
insl
call
movq
arpl
adc
pop
insl
xchg
cs
insl
rorb
sti
mov
pcmpeqw
getsec
pop
push
pushf
cs
cwtl
lds
jne
movups
lret
insl
js
fadd
jo
pushl
pop
popa
stos
insb
pop
setge
pandn
add
insb
inc
cmp
shlb
push
mov
rcrb
cld
xchg
adc
add
inc
sbb
jmp
adcl
std
hlt
in
add
push
or
sar
push
call
push
push
or
je
adc
and
in
cmp
sbb
mov
xchg
sub
loop
add
xchg
jmp
push
push
pop
add
std
xchg
jmp
jo
push
push
xchg
sub
or
and
or
je
call
sar
lcall
jno
mov
push
xchg
inc
hlt
inc
xorb
push
mov
xor
sar
fbstp
jne
xorb
incl
add
xorb
cli
push
adc
adc
cmp
shlb
and
push
adc
push
sbb
add
sub
jne
mov
inc
push
pop
pop
leave
and
xchg
repnz
mov
inc
ret
push
add
add
dec
push
inc
aaa
pop
decb
out
lock
sbb
stc
jns
jmp
add
mov
or
add
out
int3
add
inc
inc
lock
fiaddl
add
jns
addr16
sbb
lcall
add
sub
add
sub
add
or
cmp
out
mov
shl
mov
decl
pop
adc
ds
mov
ljmp
add
pushf
sti
add
pop
mov
add
mov
push
sbb
cld
cld
add
pusha
cmpsl
out
aas
add
jge
jecxz
push
xchg
scas
jge
imull
dec
sti
pop
out
push
das
outsl
out
loope
pop
imul
xchg
inc
jl
loope
push
mov
pop
jl
fcomi
add
xchg
push
xchg
add
ret
gs
clc
or
pop
imul
xor
std
je
repz
sub
or
test
adc
add
xchg
repz
xchg
lcall
inc
pop
in
outsl
cmc
insl
sub
std
adc
add
mov
or
mov
bound
adc
testb
nop
or
add
pop
push
roll
fwait
fs
aam
add
pop
add
or
jae,pn
std
pushf
test
nop
push
push
or
cmp
jae
add
add
pop
std
jne
cmpsb
imul
je
outsl
je
call
dec
mov
in
xchg
fwait
aad
loopne
mov
pushl
xorb
sub
pop
add
add
out
inc
clc
xlat
pop
add
cwtl
sbb
call
add
and
imul
jns
lea
mov
incl
das
pushl
xorl
add
je
cmpsb
addb
pop
push
ds
out
mov
decb
lea
movq
pop
jecxz
out
mov
mov
dec
testb
std
jns
imul
mov
shlb
sbb
out
xor
mov
jno
add
xlat
jmp
fildl
fnstenv
imul
in
xchg
data16
sub
push
mov
cltd
data16
stos
cmp
dec
jl
cmpsb
dec
data16
jg
testb
nop
les
pop
dec
push
push
setp
pop
jnp
gs
jne
fstpt
inc
into
mov
out
cmp
ja
sub
jno
add
mov
insl
adc
call
pop
or
lahf
add
jge
cmpsl
gs
pop
cmpsb
fmuls
outsb
gs
rolb
out
dec
repz
daa
mov
dec
scas
xchg
cmova
xlat
pop
incb
sbb
mov
sbb
es
push
call
add
add
or
push
mov
or
push
or
out
cwtl
daa
mul
fimull
je
xchg
imul
add
fdivrs
sbb
jb
lcall
cmpsb
gs
ds
bound
incb
pop
iret
in
jbe
add
outsb
cwtl
cmc
pop
mov
pushf
add
adc
ds
jle
mov
ja
jmp
cmp
pop
jg
clc
cs
sti
lcall
je
aas
inc
daa
add
mov
in
in
stc
push
and
call
add
mov
bound
jne
repnz
pop
std
xor
out
mov
je
jg
addr16
pop
repnz
jmp
fxam
loop
jns
incl
add
jne
jno
cmp
enter
push
mov
sar
pop
push
sbb
call
test
hlt
add
fsubrs
jb
push
jmp
decl
or
pop
loope
popa
jmp
popa
je
pop
ja
popa
pop
dec
roll
mov
dec
iret
push
hlt
bound
mulb
inc
sbb
sub
repnz
rolb
xor
add
repnz
inc
push
repz
ds
add
fs
addr16
mov
ja
neg
test
je
fisubl
ds
out
jle
in
mov
add
lret
lahf
les
stos
test
nop
stos
bound
mov
add
mov
fwait
test
jo
insb
cmp
packssdw
inc
push
bound
add
pop
popl
cltd
out
xchg
and
popa
inc
add
or
loop
popa
xor
insb
push
xor
out
and
jle
mov
popa
or
cmpsb
popa
fisttpll
add
cmc
add
loope
cmp
popa
dec
push
add
mov
call
decb
push
bnd
ret
jl
jl
or
pop
inc
std
cs
in
filds
jmp
cmp
add
call
pusha
shll
out
cmpl
dec
push
inc
add
lock
call
pusha
shrb
scas
sahf
fnstsw
jmp
pop
or
mov
loope
notl
std
jae
add
out
std
incl
jne
jbe
cmp
jnp
mov
mov
push
call
push
jmp
jne
jbe
cmp
jnp
mov
mov
push
call
inc
jmp
mov
mov
push
call
adc
adc
mov
add
call
sub
push
add
push
pop
in
mov
negb
ds
pop
xchg
fists
roll
sbb
shll
mov
mov
sub
mov
inc
pop
cmpsb
add
decl
xor
and
pop
jno
jo
imul
xchg
imul
imul
pop
or
add
es
sbb
fbstp
sub
daa
outsb
pop
sbb
imul
jnp
insb
stc
sti
pop
cmpsb
pop
lock
add
sbb
xchg
cmp
adc
mov
cmp
out
mov
add
or
mov
adc
imul
fucomip
add
pop
out
add
mov
add
fsubs
xchg
or
rcrb
sub
cmpsb
bound
pop
in
mov
jne
jmp
push
minps
shlb
les
int3
jle
jb
push
add
cmp
cmp
sub
lcall
cmp
movsl
call
sbb
std
xchg
decl
mov
sbb
add
inc
std
dec
daa
pop
inc
imul
add
sub
or
push
xchg
add
pushf
xor
add
add
add
push
add
daa
mov
pop
inc
repz
and
je
inc
repz
add
repz
push
push
std
xor
lcall
shlb
add
add
outsl
mov
add
mov
decl
cmp
lahf
add
hlt
inc
add
push
or
test
je
dec
and
std
ljmp
pushf
add
mov
jmp
push
mov
and
std
ficoms
mov
roll
int
pop
outsl
sbb
jg
gs
add
sbbl
and
add
sbb
inc
icebp
mov
addr16
push
push
xchg
out
inc
ds
pop
je
in
mov
dec
add
pop
ljmp
pop
inc
stos
pusha
inc
mov
mov
pop
or
pop
je
cmp
pop
xchg
fsts
jns
mov
jl
add
dec
test
bound
mov
add
lret
or
adc
pop
mov
pop
xor
mov
and
sbbl
inc
lds
cmpsb
iret
loop
pop
out
incb
sub
stos
ds
pop
jmp
jno
add
cld
adc
out
or
repz
sbb
cld
addb
lods
add
add
pop
mov
inc
out
aam
mov
add
add
inc
ss
sbb
mov
push
xlat
pop
xorl
mov
sti
ljmp
jae
movsl
mov
out
std
jae
xchg
std
into
test
add
push
sbb
mov
push
call
bnd
add
jne
or
rclb
xchg
outsl
ds
jle
add
sbb
insl
dec
pop
add
push
xchg
push
call
xchg
in
push
mov
std
aam
std
jae
sbb
out
jae
in
add
cmp
sti
push
adc
ss
dec
sbb
mov
add
mov
scas
shrb
xchg
and
pop
add
scas
sub
push
pop
xchg
daa
pop
or
dec
cli
call
mov
add
popf
std
call
jne
xchg
sarb
mov
xchg
je
scas
imul
in
loopne
sub
ljmp
xchg
decb
push
sub
roll
mov
fsubrp
xor
lcall
es
add
loope
je
dec
scas
xor
ds
pop
je
imul
incl
lret
jecxz
ja
incb
add
add
stos
and
jge
adc
jbe
hlt
jg
add
test
push
pushw
add
mov
iret
pop
notb
jmp
fmul
sti
fsts
decb
imul
call
push
mov
jae
out
inc
push
xchg
add
lds
add
out
cmp
or
or
adc
add
inc
call
jmp
xchg
push
lret
pop
jne
testb
push
lds
cli
push
or
outsl
fildll
xor
push
mov
mov
in
jle
sub
outsb
fistl
arpl
mov
mov
cld
pop
shrl
mov
sahf
jnp
test
add
pop
pop
rolb
fmull
cmpsb
or
push
mov
lods
imul
push
pop
add
cld
add
lock
lock
std
push
xor
jne
or
inc
or
xchg
pop
pop
out
rclb
jnp
cmp
push
jmp
cmp
inc
outsl
inc
inc
cmp
outsl
xchg
outsl
adc
add
jae
clc
xchg
add
add
clc
std
xchg
jmp
hlt
lods
jmp
or
std
hlt
or
jae
or
push
cmp
std
push
jmp
in
dec
jns
call
cmp
out
mov
in
jae
inc
xchg
in
jo
pushl
mov
inc
mov
adc
pushl
incl
nop
incl
add
in
xor
add
aad
add
jle
jmp
stc
push
cwtl
and
call
or
pop
add
bound
lds
popl
add
fldl
out
sbb
sti
aaa
mov
ret
xor
aam
je
inc
into
sti
push
cmp
add
jmp
fildl
add
mov
dec
incb
into
add
mov
jle
xor
pop
negb
adc
push
je
sbb
cmp
sbb
jl
out
mov
push
push
fldl
mov
push
out
and
add
ss
idivb
fdivrl
sti
test
pop
pop
push
cwtl
add
leave
xchg
add
push
add
xor
fnstenv
pushf
and
xor
fldcw
push
out
xchg
mov
outsl
fistps
sub
push
mov
add
arpl
push
jb
mov
push
sbb
cmp
aas
push
ds
addr16
lods
idivb
subb
loope
mov
pop
shl
xchg
push
push
arpl
cld
push
lcall
add
aas
pop
out
cltd
adc
ja
cmc
std
hlt
icebp
hlt
jae
cmc
xor
pop
in
and
in
cmp
sbb
sarl
pop
call
pusha
jbe
push
push
jbe
call
push
data16
jl
cld
or
sub
push
bound
mov
repz
pop
or
scas
sbb
xchg
loope
and
add
xchg
dec
sub
fstpt
or
lcall
cmp
ljmp
inc
pop
jmp
leave
gs
sbb
dec
lock
call
call
incl
xchg
add
dec
add
and
xor
loopne
jmp
mov
scas
pop
bound
xor
ljmp
mov
pop
shll
pop
stos
mov
xchg
mov
dec
inc
daa
pop
jae
ficomps
jmp
xchg
or
mov
inc
clc
fistpl
add
notb
or
ds
add
dec
adc
jl
sar
out
out
or
add
or
add
ret
add
or
cmpsb
pop
jno
push
je
pushf
pushf
xor
add
cmp
inc
add
mov
inc
sti
aam
fcoml
stc
out
mov
inc
mov
addr16
fadd
jmp
addr16
out
stc
dec
adc
pop
testl
add
pop
add
popf
add
mov
xlat
pop
out
adcl
and
shll
out
call
fistps
outsb
dec
add
cwtl
arpl
arpl
dec
repnz
cmp
push
lea
aas
cld
es
cltd
addr16
scas
repz
cld
dec
fisubrs
and
daa
mov
lock
enter
mov
lock
dec
sbb
sub
cmpsl
xlat
cmp
and
mov
add
shl
jae
jne
xor
add
and
lea
cld
xchg
out
adc
clc
and
or
loope
cmp
fwait
add
inc
pop
or
imul
addb
std
movsbl
out
xchg
out
cmp
ja
xchg
xor
add
add
xor
jae
xchg
stos
add
cmp
addr16
jmp
add
inc
pop
or
inc
pop
add
insl
out
add
stos
dec
jmp
in
or
cmpsl
adc
and
sbb
popf
mov
popf
je
sub
fsubrp
xchg
pop
lcall
loop
xor
inc
xchg
outsb
inc
fmuls
dec
pop
lea
jo
aam
jo
in
sahf
je
das
mov
ljmp
repnz
add
add
add
cmp
jne
xchg
ret
mov
je
aas
add
lcall
mov
fdivrp
ds
cld
out
in
dec
icebp
das
fs
repnz
incb
aad
mov
icebp
dec
inc
pop
add
test
int3
test
test
gs
negl
inc
dec
decb
push
dec
incb
add
mov
dec
data16
ljmp
add
cmp
pop
ds
js
push
iret
std
shr
pop
bound
dec
enter
push
lds
je
dec
fs
xchg
and
cs
aaa
pop
xchg
and
pop
into
rorl
cmp
jns
xor
fldenv
inc
push
shr
mov
sub
and
test
add
out
xor
out
mov
in
outsb
dec
sbb
pop
lret
xorb
pop
push
roll
jmp
ljmp
fsubl
inc
mov
and
les
pushf
not
cmp
sarl
add
cmp
and
pop
pushf
jle
test
fistpll
add
test
out
pop
dec
sub
add
test
or
add
or
cmp
hlt
subl
cmpl
xchg
add
ret
fnstsw
sbb
adc
adcl
xor
std
jo
lock
rcll
jmp
fsubr
std
ds
data16
outsb
push
call
xor
pop
add
addb
in
jae
das
nop
add
and
xchg
push
push
in
adc
jne
in
mov
push
push
mov
push
push
mov
push
std
lcall
lods
stc
push
cmpps
cmpsl
inc
sbb
dec
cmp
xchg
push
xor
mov
dec
push
push
cmpsl
jne
add
sbb
mov
push
cmpltps
push
mov
dec
pop
xor
repnz
mov
ds
pop
mov
ds
je
sbb
pop
jmp
test
cmp
hlt
fldenv
or
push
xor
sti
mov
ds
pop
mov
add
ds
inc
je
mov
mov
ds
imul
fldenv
cmp
add
dec
pop
repnz
int
mov
cmp
push
mov
lcall
sbb
jnp
ljmp
cmp
fstpl
stc
jmp
xor
aad
stos
pop
call
pop
out
out
testl
add
shrl
jmp
aaa
inc
sub
roll
insl
call
dec
loopne
add
pop
cmpsb
rcll
movsl
dec
js
out
in
roll
pop
roll
mov
xor
jmp
clc
outsl
in
shll
std
loop
insb
add
jo
std
jmp
cmp
mov
out
sbbb
add
add
jmp
xor
adc
mov
jo
std
mov
call
add
add
jae
adc
roll
push
hlt
cmc
jbe
out
sbb
imul
jmp
std
dec
lods
cwtl
push
add
lret
in
or
addr16
add
jmp
aas
sbb
pop
cmp
daa
pop
in
mov
pop
mov
call
sahf
call
clc
pop
push
call
idiv
mov
sti
lcall
popf
call
mov
popf
in
mov
call
jmp
in
cmp
add
add
ds
pop
imulb
pop
xor
jl
add
popf
jg
dec
sbb
push
inc
int
es
mov
addr16
mov
inc
jg
pop
lea
testb
push
add
cmp
add
loope
add
jmp
xor
push
daa
sar
inc
cld
out
pushf
inc
mov
dec
incb
add
cld
pop
push
push
fldl
add
push
ret
insl
inc
mov
lods
inc
or
aam
jo
fistps
inc
out
xor
pop
out
jns
das
add
pop
out
cli
out
es
cmp
xchg
add
pop
mov
or
out
dec
or
pop
ret
inc
out
inc
sbb
mov
add
jae
int3
add
jle
mov
shl
bound
mov
shl
mov
shrl
in
scas
mov
pop
jle
mov
in
loope
mov
data16
rolb
ret
cmp
in
jl
in
std
ds
outsb
or
sub
cs
call
jmp
cmp
in
push
add
xlat
pop
call
pusha
mov
cmc
out
jl
add
in
cmp
in
fldenv
call
pusha
mov
imulb
sti
ja
jmp
cld
in
adc
repz
xlat
cltd
decb
adc
test
or
insb
inc
addr16
mov
or
call
mov
add
mov
call
mov
addr16
inc
add
in
notl
jne
xor
test
jmp
lcall
loopne
in
notl
lcall
lock
mov
insl
pop
push
decb
idiv
loopne
je
iret
mov
mov
jbe
notb
add
pop
sar
cs
jns
aas
je
mov
das
imul
notb
add
ret
add
jno
iret
xor
aas
ljmp
inc
aas
add
push
or
call
stc
mov
inc
je
sbb
sub
adc
out
inc
shll
adc
ds
aas
incb
add
addr16
inc
sub
xor
ljmp
and
dec
jg
push
loop
inc
mov
pop
inc
jo
aam
push
or
inc
pusha
loop
push
push
loop
inc
mov
aaa
inc
dec
loop
adc
add
loop
dec
sub
push
inc
mov
pushl
loop
inc
rclb
aas
adc
xor
adc
idivb
mov
mov
add
loop
aas
stos
sbb
aas
call
into
add
fsub
jl
enter
xchg
sahf
add
push
repz
shlb
std
adc
loop
cltd
imul
call
jle
repnz
jbe
cli
inc
mov
cs
sub
and
mov
adc
std
push
dec
xor
in
add
call
add
mov
negb
imul
std
push
jp
std
push
bound
decb
mov
dec
loope
add
std
out
cmpsl
int3
sub
call
into
push
sbb
add
and
icebp
sub
incl
idiv
call
and
mov
sub
mov
and
hlt
cld
decl
and
sub
add
mov
in
add
aam
stc
push
mov
pushl
call
mov
mov
insl
out
std
xor
dec
mov
decl
je
mov
mov
call
fsub
mov
jb
jne
xor
sub
push
enter
add
popf
jg
rorb
lods
mov
xor
cmp
inc
lret
test
add
fnstcw
xchg
ret
fimuls
aas
ljmp
movsl
jns,pn
or
testl
xchg
push
ret
decl
cmp
sbb
hlt
sub
xchg
sub
sti
sbb
or
cmp
cmp
or
out
sbb
add
pop
movsb
test
add
jle
aas
sub
pushf
out
push
dec
iret
add
fidivs
mov
fisubs
or
jle
cmp
ficoms
cltd
or
cmp
jno
stos
dec
insl
sub
repnz
ret
fmull
push
add
cmp
xor
movsb
aas
push
push
dec
repnz
fidivs
cmp
fistpll
fisubs
jbe
lods
jle
jg
stos
pushf
out
add
mov
push
data16
les
std
pop
cmp
add
and
divb
adc
mov
xchg
lcall
je
or
jmp
sbb
lret
xchg
clc
push
jmp
inc
xorl
mov
xchg
in
push
je
add
push
push
jae
add
rcrb
pop
lcall
push
je
adc
xchg
outsl
aas
jmp
and
dec
shlb
cld
mov
std
jne
and
fdivr
push
and
sub
incl
and
mov
jne
xor
sub
and
ret
push
mov
aad
cld
cmp
stos
add
add
add
sbb
push
arpl
mov
insl
cmpsb
pop
std
jne
xor
push
add
add
mov
add
mov
and
test
ds
test
addr16
mov
cltd
cmp
inc
ds
pop
out
sar
jmp
mov
add
lock
sar
push
or
nop
aas
aaa
incb
add
icebp
cmp
fdivrp
mov
repnz
mov
aaa
decb
pop
aaa
je
fimull
jno
dec
roll
mov
inc
sti
pop
decb
xchg
pop
xchg
aaa
or
repnz
mov
fbld
fistpl
scas
inc
ficompl
or
jl
add
sub
xor
add
add
push
jmp
inc
test
cmp
movsb
test
daa
mov
adc
cs
ret
mov
and
stc
xor
or
cmpsw
scas
daa
sub
add
lret
repnz
pop
shll
fildll
call
mov
js
ficoml
or
nop
cmp
inc
xor
std
sbb
iret
out
add
call
dec
adc
call
fscale
loop
dec
xor
inc
pop
in
aaa
ss
or
in
std
out
fdivs
and
fnstenv
adc
popa
call
shl
std
scas
mov
sbb
fwait
sbb
mov
jnp
mov
sub
scas
imul
adc
add
sub
fnstsw
inc
push
dec
add
rolb
jne
pop
decl
pop
add
push
test
call
or
sub
stc
pop
jae
mov
pop
mov
lods
push
call
int3
sbb
adc
pop
add
mov
test
jne
test
fdivrs
es
fcoms
push
xchg
ljmp
or
add
lcall
fmuls
or
sti
sar
dec
sbb
xor
adc
call
ss
sub
mov
sub
xchg
jbe
je
jno
pop
push
jmp
xchg
es
fdivrs
aas
into
out
mov
loope
data16
inc
das
data16
add
xor
and
rcll
inc
add
pop
or
inc
xchg
xchg
mov
lock
xor
lods
or
ds
mov
add
mov
out
aam
roll
pop
roll
lret
and
aam
loopne
sub
stos
shll
scas
adc
pop
loop
add
lea
mov
stc
aad
adc
pop
ret
loop
xchg
sub
sub
adc
sub
push
add
adc
scas
xor
ret
movsb
xor
push
xor
jge
xor
and
leave
hlt
aaa
pop
aam
fstpt
pop
push
jb
fcmovnb
pop
and
std
fs
push
dec
add
nop
data16
mov
cmp
loopne
jmp
push
std
jmp
push
pop
add
xlat
aad
jmp
mov
fdivp
imulb
int
push
push
mov
or
fiaddl
jae
inc
arpl
scas
insl
loope
je
leave
cmc
sahf
dec
es
cmpl
add
add
inc
sub
mov
call
push
in
mul
mov
jne
mov
sub
mov
js
call
jo
cmc
jmp
mov
cwtl
verr
cwtl
mov
in
xchg
and
call
fcompl
je
mov
mov
xchg
dec
or
pop
mov
inc
push
push
pop
mov
add
mov
pop
push
movaps
inc
or
mov
ds
cld
dec
dec
xchg
lret
lds
inc
jb
ss
push
mov
ds
enter
dec
adc
ret
or
pop
ds
mov
je
sbb
and
jl
mov
mov
call
stc
push
xchg
imul
add
add
sar
push
pop
sbb
sbb
das
push
dec
das
je
lcall
test
sbb
mov
pop
lcall
sub
sahf
xor
jae
sahf
pop
aam
jg
notb
xor
jb
rcrb
aam
xor
outsb
data16
aam
or
or
inc
rcl
xchg
and
xor
pop
pushf
jl
add
shll
xor
xlat
push
xor
xchg
sti
loope
push
xor
shlb
fsub
sub
rclb
mov
ret
insl
pop
enter
push
pop
aas
xor
out
mov
sub
inc
outsl
shll
mov
test
jmp
dec
sar
stc
cmp
into
icebp
jle
pop
add
cmp
add
sar
jmp
rcl
push
push
sar
jmp
mov
push
test
lock
push
pop
rol
es
and
push
in
shlb
cs
or
test
push
cs
sbb
or
subl
pop
add
icebp
into
imul
std
call
push
mov
add
push
outsl
xlat
seta
shlb
push
mov
push
cld
call
pop
add
addr16
add
loop
repnz
call
out
movsb
jno
pop
mov
je
pop
add
mov
call
pop
in
mov
out
test
aas
cmp
aas
fmull
add
jecxz
je
sbb
add
in
incb
ds
mov
mov
mov
das
dec
xchg
push
std
lcall
inc
jo
icebp
cs
fldcw
and
jmp
je,pn
push
js
insl
dec
cs
xchg
dec
xor
push
cmp
repnz
sub
lcall
add
mov
je,pn
mov
or
gs
or
sldt
add
and
jbe
pop
cs
mov
xor
loope
xchg
push
ds
sub
mov
push
vunpcklps
sbb
add
nop
scas
movsl
pop
out
test
xlat
xchg
sub
pop
andb
add
lcall
jne
cld
add
lfs
sub
into
outsb
mov
ret
and
iret
jb
inc
jecxz
sub
add
movsb
sub
sub
mov
inc
lea
arpl
leave
sub
push
jnp
iret
push
mov
ret
js
lock
cs
sbb
sub
cmpsl
add
aad
fwait
loop
int
fsubl
push
aas
jmp
pop
push
push
push
lods
ds
jmp
jge
sbb
mov
popf
push
int
mov
int
add
add
inc
js
jl
gs
cmp
add
mov
data16
aad
ss
int
inc
xchg
js
inc
or
push
aas
jmp
and
std
es
cmp
mov
aas
add
jle
or
cli
call
repnz
arpl
inc
add
lret
rorl
push
std
jne
jno
sti
addb
add
add
test
xchg
xorb
cwtl
std
decb
in
faddl
jne
jno
pop
rolb
mov
cmp
ljmp
in
inc
cmp
ljmp
add
push
orb
pop
add
das
je
add
icebp
sub
add
push
popa
movsb
inc
add
ds
roll
mov
sub
xor
jmp
lds
pusha
inc
cltd
add
ret
adc
sub
xchg
sbb
dec
ret
cmp
inc
roll
ds
xor
inc
sub
mov
add
sub
sub
jmp
lock
add
mov
sub
xor
mov
pop
jg
pop
sbb
fwait
aas
pop
out
fadds
sbb
out
sub
lret
aaa
sbb
pop
out
mov
lret
sub
arpl
xor
mov
into
les
aaa
int3
sbb
xchg
les
sbb
jge
cmpsb
mov
ds
mov
pop
jbe
add
cmp
in
int3
sbb
lahf
sahf
mov
add
fcmovne
add
mov
dec
jbe
lret
rcrl
jmp
push
leave
std
pushf
add
leave
mov
test
popl
jmp
sahf
leave
xor
cmp
inc
and
std
lret
outsb
mov
cmp
shll
jmp
shlb
mov
lret
add
ret
sbb
cmp
add
push
imul
loope
aas
jmp
jl
in
inc
lret
or
scas
jo
in
jb
push
mov
dec
mov
call
rorl
add
push
xchg
cmp
jmp
fidivrs
aam
std
call
insb
std
xor
fdivs
call
mov
add
xlat
pop
add
jp
and
add
add
pop
cmpl
enter
bound
leave
aad
add
bound
pop
aas
adc
inc
push
jne
add
sub
faddl
add
ds
cmp
clc
dec
cmp
mov
inc
mov
mov
ljmp
add
stc
mull
jne
clc
cmp
mov
dec
jbe
mov
jle
sub
jne
mov
cli
mov
mov
and
xor
ljmp
or
mov
popa
int3
addr16
sar
fs
jno
shl
mov
add
bound
or
mov
mov
mov
dec
mov
add
push
jl
ret
cmpsl
rcrl
xchg
out
sbb
movsb
das
adc
sbb
push
out
xor
dec
pop
es
mov
loope
push
es
add
dec
push
out
rorl
sbb
out
and
xor
dec
sub
out
xor
mov
clc
push
mov
sbb
push
inc
cmp
out
add
mov
aaa
int3
fldcw
add
iret
stc
add
add
pop
call
shll
fsubl
lds
mov
dec
test
jae
and
lds
push
or
push
sbb
add
cmp
pop
push
jb
fld
add
cs
icebp
pop
shl
dec
or
loopne
call
cmpsb
add
loopne
call
bound
push
roll
std
cmpsb
jbe
jne
fnstcw
dec
push
push
add
std
add
in
jo
decb
xchg
testb
sbb
jmp
pop
call
mov
jge
ret
push
mov
dec
pop
out
ja
inc
pop
jb
add
cmc
add
fcompl
push
test
inc
cmc
add
fcompl
je
ds
std
jmp
jecxz
call
jo
add
decl
jne
jno
sbb
jns
rorb
arpl
in
xchg
pop
push
push
inc
je
jmp
ret
incl
or
repnz
and
inc
jb
add
sbb
sbb
push
or
add
add
or
call
inc
jb
add
pushf
and
sbb
push
test
push
inc
add
dec
inc
jae
lar
cs
or
mov
add
test
add
mov
mov
push
lds
sbb
or
ljmp
and
loop
shlb
cwtl
inc
hlt
or
add
jbe
inc
push
cmpsl
cwtl
inc
fmull
xor
sub
cwtl
filds
jae
push
xchg
mov
mov
sbb
sub
and
pmaxub
dec
jp
out
ds
je
in
rdmsr
sub
mov
cwtl
push
sub
add
push
xchg
pop
push
or
sbb
shll
mov
add
add
push
gs
ret
std
jmp
pop
dec
in
sbbl
add
es
ljmp
pop
add
stc
mov
mov
sub
aad
sar
jge
adc
mov
jae
and
push
pop
aad
push
leave
mov
std
repnz
push
mov
dec
add
add
ljmp
icebp
cmp
pop
inc
imul
ljmp
int3
ljmp
daa
out
leave
jae
push
call
call
in
jae
decb
in
mov
cmpsb
sbb
push
out
data16
insb
sahf
std
not
pop
sar
sub
pop
fidivrs
add
fcmove
add
add
pop
mov
cmpsl
add
cmpsl
or
or
imul
push
ljmp
pop
add
sbb
movsl
ds
sbb
xchg
cwtl
sub
and
cmp
js
sbb
mov
xchg
imul
dec
fs
inc
cs
std
dec
inc
mov
fnstcw
adc
add
sub
pop
mov
sub
adc
or
hlt
jno
jb
repz
out
enter
das
pop
std
fsts
add
mov
add
leave
mov
repz
sbb
mov
iret
dec
rcr
jle
imul
shl
rolb
push
mov
and
push
insb
sub
out
mov
sub
or
add
pop
out
inc
pop
out
inc
fwait
testb
push
call
inc
xor
out
int
out
mov
inc
xchg
jle
pop
mov
rolb
mov
push
ds
push
inc
xor
and
cmp
pop
out
ret
push
shrb
mov
sar
incb
leave
in
dec
test
into
and
sar
push
pop
sbb
add
add
iret
xchg
stos
xor
std
sbb
mov
fisubs
shr
enter
push
rcll
sahf
inc
adc
xchg
pop
sar
mov
shll
xchg
lret
push
mov
decl
or
mov
scas
sbb
inc
inc
push
add
int
repz
data16
and
and
xchg
cmp
add
push
add
xor
int
cltd
std
imul
pop
std
mov
pop
decl
pop
mov
jno
call
andb
insb
xchg
pop
cld
je
mov
repnz
mov
sti
inc
add
xchg
add
in
push
dec
out
addr16
clc
jb
sbb
mov
gs
xor
incl
add
iret
nop
mov
lea
pop
add
dec
and
incl
mov
ds
out
scas
fildl
add
mov
test
mov
mov
negb
mov
add
movsl
sti
and
sub
mov
nop
mov
sarl
adc
cmp
ds
inc
jae
cmp
out
lea
aad
out
add
push
mov
cmp
imul
test
push
stos
add
jb,pt
je
sbb
add
mov
inc
or
push
shlb
je
insl
out
pop
incl
ds
xchg
mov
pop
push
xchg
loope
jns
ds
repnz
dec
dec
cmpsl
stos
inc
inc
test
push
mov
ljmp
pop
push
push
and
inc
pop
es
out
jle
cmp
cltd
in
jecxz
add
shrb
xor
lods
dec
inc
sub
add
add
sub
hlt
int
out
rol
fsubrs
mov
jnp
int
out
xchg
nop
aas
mov
sbb
sbb
sbb
pop
out
std
dec
add
mov
xchg
add
cmp
xor
lcall
add
xor
addr16
add
push
inc
clc
out
mov
sbb
push
inc
mov
call
mov
call
mov
ret
call
mov
mov
mov
push
subl
mov
cmp
repnz
jmp
shll
add
pop
pop
add
mov
pop
lds
add
pop
add
xlat
sbb
pop
add
and
in
add
pop
add
loop
dec
loop
dec
push
loope
cld
or
push
or
xchg
add
xchg
in
call
xor
jge
mov
call
jno
inc
push
mov
fistpll
ljmp
mov
sahf
stc
in
push
sub
add
mov
stos
or
pop
stc
incb
and
ljmp
mov
inc
mov
ret
insl
add
ds
test
push
imul
pushl
sbb
jmp
cmc
add
sti
mov
test
add
ds
loop
adc
in
mov
lock
cmc
addb
add
les
add
cli
inc
push
mov
add
xchg
dec
scas
jle
sbb
add
jge
jle
out
inc
fcoml
je
out
mov
inc
cwtl
adc
inc
les
xchg
jle
inc
jne
pop
out
lods
sbbb
mov
pop
out
sub
das
xchg
pop
incl
jle
in
sub
pop
out
add
jns
roll
ds
out
cli
mov
stos
jns
jmp
add
sub
push
dec
std
xor
pop
cmpsl
cmp
pusha
add
pop
mov
cmp
add
sub
popf
jmp
pop
push
data16
scas
push
pop
lods
pop
push
sarl
add
cmp
mov
add
push
cld
mov
add
xor
clc
cmpl
mov
sub
rolb
sub
clc
shll
cmp
mov
rcrb
sbb
add
fbld
jmp
stos
inc
std
jmp
js
fdiv
pop
add
fdiv
flds
daa
pop
add
hlt
mov
inc
ja
jb
add
pusha
mul
stos
cmp
out
lds
pop
add
xlat
ja
lock
add
sbb
icebp
add
pop
add
cmp
in
pop
add
push
lret
adc
jae
dec
je
and
lds
pop
add
addl
std
call
std
jne
dec
adc
or
std
or
mov
lea
add
mov
sar
mov
add
ds
cmpb
or
or
mov
jo
jae
les
cld
or
push
adc
cwtl
mov
push
mov
sub
or
lods
adc
stc
sbb
ret
and
push
mov
inc
ds
xchg
add
add
sahf
jmp
push
add
pushf
shlb
pop
pop
cmpsb
sbb
scas
sahf
adc
into
adc
jmp
mov
inc
lods
dec
sub
loope
loope
inc
in
les
pop
out
ds
call
ret
inc
addr16
sub
add
xorb
leave
mov
loop
xor
fnstcw
test
add
xchg
data16
mov
sbb
add
pop
out
jmp
adc
inc
sbb
cmp
add
cmp
adc
pop
aas
jmp
sub
add
test
in
cmp
pop
aas
jmp
sub
mov
cli
mov
addl
std
ds
and
add
dec
mov
call
push
in
test
pop
je
shlb
jp
std
jne
mov
loopnew
add
inc
pop
add
mov
mov
repz
mov
add
aas
add
push
xor
pop
push
push
add
test
or
jae
int3
pop
jmp
ljmp
add
xchg
add
pop
jae
and
mov
std
and
sub
std
and
sub
std
and
cmp
std
and
test
jno
push
std
and
ds
jnp
addl
inc
addb
out
mov
cmp
inc
add
ds
out
mov
xor
inc
loope,pt
xchg
mov
cmp
inc
ds
fwait
mov
in
inc
ds
mov
and
addb
out
mov
xor
inc
ds
jmp
cmp
inc
ds
out
mov
test
ret
mov
jl
inc
ds
out
add
jne
sub
ja
test
pop
into
jmp
imul
jmp
push
ja
test
pop
sahf
jmp
cmp
test
xchg
adc
ja
test
outsb
jmp
or
test
push
jmp
icebp
jbe
cmpl
test
fnstenv
cmpl
test
add
shll
pop
push
jmp
test
pop
add
cmpsb
push
subb
sbb
ficoms
mov
std
mov
addb
mov
push
and
mov
sbb
xor
push
and
adc
push
or
mov
add
jb
lds
aaa
subb
sbb
push
aas
subb
sbb
add
jge
pop
std
and
mov
push
std
and
nop
mov
andb
std
and
mov
push
std
and
mov
push
std
and
add
shlb
and
nop
mov
andb
and
pusha
mov
andb
inc
add
pop
std
and
and
std
and
ds
and
inc
or
sub
ret
xor
aas
stc
mov
les
add
xorl
pop
mov
add
add
add
add
sub
add
les
add
inc
or
ret
stos
dec
pop
les
ret
xor
push
cld
mov
les
add
mov
add
mov
ret
into
les
jge
fdivr
jmp
ret
aas
add
cmpsl
add
les
add
pop
sub
jo,pt
pop
ds
mov
icebp
dec
out
add
ds
jecxz
pop
pop
filds
ds
dec
sub
push
out
jns
out
repz
inc
cmp
pop
out
cmp
iret
add
pop
test
ret
cmp
out
ds
jmp
arpl
add
fisttps
pop
out
cld
push
out
imulb
add
pop
out
ficomps
inc
cmp
add
lods
jae
dec
fistl
in
cmp
pop
add
jge
jg
test
pop
add
pop
add
cmp
lods
mov
pop
add
leave
popa
mov
cmp
ret
mov
stos
pop
lods
subb
add
xor
sbb
pop
add
cmp
lods
std
sub
sbb
cmp
pop
xchg
add
jecxz
in
cmp
fnstcw
icebp
stos
std
dec
into
dec
mov
push
test
add
sbbb
push
add
xlat
sbb
push
or
cmpsl
push
xchg
sbb
adc
add
push
rorl
mov
xor
std
mov
dec
inc
lea
cmp
lret
add
mov
lcall
cmpsb
jno
je
incb
jle
add
pop
ficompl
mov
sbbb
pop
add
push
sbb
pop
xchg
jmp
mov
idiv
mov
or
mov
fcmovne
jne
pop
aad
xor
aas
or
add
mov
sbb
mov
xorb
add
cmp
inc
mov
mov
add
sub
add
jge
sbb
lret
add
std
incl
jmp
pushl
cmp
inc
mov
in
ds
subb
add
mov
jmp
adc
pop
sar
dec
jmp
repz
pop
jecxz
hlt
shrl
xlat
inc
test
push
pop
out
rcll
cmp
dec
jmp
ds
jo
cmp
or
mov
dec
loopne
adc
inc
adc
int3
imul
pop
test
pop
test
fstpt
jne
jns
jle
jns
ffreep
nop
push
aam
jnp
xlat
jb
ds
out
aaa
das
in
jg
add
add
fdiv
ffree
jmp
add
sub
and
jl
call
cmpsb
add
push
add
push
mov
std
jmp
movsb
fadd
negb
js
call
imul
jo
std
jmp
in
popa
or
sbb
inc
das
imulb
inc
add
cmp
fstl
in
cmp
pop
add
add
std
mov
std
add
pop
add
mov
or
xchg
cmpsl
std
pushl
mov
std
lcall
pop
mov
pusha
adcl
pop
add
sbb
mov
xor
add
cmpsl
and
lret
xchg
es
mov
rolb
xchg
adcl
pop
add
push
and
add
add
pop
mov
pop
add
and
mov
fwait
mov
and
cmovb
decl
cmp
add
ss
xchg
jae
cmp
add
shl
jp
sub
hlt
add
mov
test
add
mov
dec
mov
add
jl
in
sub
out
mov
mov
jg
inc
fs
data16
add
sbbb
mov
in
out
inc
ja
push
xor
cmpsb
xchg
cltd
out
add
inc
jecxz
fcoms
sti
mov
cmp
add
movsl
cmpsl
jp
inc
jecxz
ds
repz
inc
jmp
add
ds
add
movsb
sub
pop
pop
out
pop
out
push
shlb
cmp
inc
jecxz
sbb
xor
incl
pop
out
les
aad
cwtl
pop
adc
xlat
jmp
ds
cmp
pop
ds
add
inc
add
cmp
pop
add
mov
pop
mov
pop
add
ret
dec
add
add
cmp
mov
cmp
sbb
cmp
fstl
in
pop
xchg
pop
add
jge
scas
in
pop
add
dec
add
cmp
pop
add
pop
movsb
mov
inc
pop
add
pop
add
inc
add
cmp
pop
add
lret
in
cmp
pop
add
lea
pop
cmp
add
adc
add
add
xchg
and
inc
scas
ljmp
daa
pop
add
pushf
rcrb
add
pop
shlb
push
lret
pop
pop
jno
pop
rclb
add
push
test
xchg
scas
sbb
push
add
xlat
aam
sbb
push
add
inc
cmp
scas
push
xchg
push
push
sbb
and
sbb
cmp
imul
add
inc
aaa
xchg
add
add
fdivrs
jg
ds
cmpl
cmp
and
cmpb
add
xor
add
mov
jb
inc
cmp
jb
jno
call
cmp
cmp
push
mov
mov
test
std
fcos
inc
sbb
pop
cld
lods
add
mov
test
add
cmp
mov
push
push
lds
mov
ds
adc
lods
addl
sub
pop
sub
pop
ds
add
mov
push
cmpsb
mov
std
xor
scas
lea
decl
aad
daa
sbb
roll
outsl
add
ds
pusha
mov
nop
add
lds
add
pop
push
jecxz
xchg
pop
inc
pop
out
arpl
mov
xlat
pop
ds
pusha
mov
out
rcll
inc
pop
out
mov
sbb
pop
out
ss
xor
jle
add
cmp
sbb
cmp
fcoms
in
pop
xchg
push
add
std
fldcw
jo
dec
add
cmp
pop
add
add
adc
subl
or
xchg
cmp
popa
pop
jecxz
call
push
push
add
mov
and
cmp
pop
add
dec
inc
or
push
ja
cwtl
les
std
mov
dec
pop
jg
cmp
xchg
sub
fstpt
subl
sub
jae
mov
jae
push
add
fmull
sti
pop
and
push
ret
ret
xchg
push
add
es
add
xchg
movsl
addb
pop
outsl
dec
movsb
and
sbb
add
pop
sub
call
pop
mov
add
sti
mov
mov
stc
jo
mov
xchg
dec
lea
movsl
mov
ret
std
sbb
xchg
into
sahf
and
scas
add
add
lock
pop
ret
or
mov
sbb
mov
mov
mov
adc
ds
xchg
scas
add
cmp
xchg
cmp
mov
iret
cld
sub
fldt
sbb
sub
inc
pop
and
mov
xchg
add
lds
sbb
ds
and
add
mov
jb
jno
call
push
pop
setbe
dec
jmp
ds
mov
sbb
pusha
sahf
sbb
add
mov
pop
sbb
das
or
shlb
sub
or
push
aaa
sar
adc
xchg
cltd
filds
test
pop
sbb
popa
pop
lret
sbb
pop
stc
push
add
ret
sbb
push
lret
sbb
data16
cmp
pop
cld
push
out
nop
jecxz,pt
ds
mov
aam
outsl
push
push
add
std
aad
add
ret
dec
add
cmp
pop
add
pop
sahf
mov
jl
aam
flds
add
inc
add
cmp
push
add
mov
pop
mov
add
add
or
inc
push
jb
mov
mov
ja
ret
rolb
rclb
mov
push
add
cmp
dec
add
cmp
jb
sub
pop
sub
push
pop
add
pop
ret
gs
pop
jg
cmpsl
add
and
jge
icebp
ror
pop
and
iret
pop
and
pop
scas
or
add
add
aam
add
push
lods
pop
ret
cmp
add
mov
xchg
stos
rolb
push
jno
xchg
sbb
jbe
cld
xchg
out
cld
xchg
add
das
push
add
in
rorb
push
mov
call
or
add
cmp
or
sub
inc
mov
or
add
mov
dec
enter
inc
mov
add
popf
test
aas
and
add
mov
mov
add
mov
std
add
mov
enter
add
mov
idivl
sbb
add
lods
dec
xchg
mov
pushl
mov
or
sbb
inc
and
cs
aas
test
mov
in
pop
mov
mov
ds
divb
test
rcrb
mov
inc
or
into
call
and
pop
out
cmp
inc
bound
or
pop
sarb
inc
xchg
jnp
imul
addl
jb
dec
pop
out
pop
xchg
pop
add
xchg
ret
xchg
push
add
pop
cli
clc
mov
bound
out
jmp
add
push
mov
lret
daa
nop
pop
pusha
dec
pop
inc
ret
fistps
add
pop
add
add
cmp
loop
add
push
push
add
aas
adc
lcall
inc
outsl
mov
xchg
cmp
mov
add
cmp
push
fidivrl
out
jmp
subb
push
inc
mov
add
inc
pop
cmp
into
pusha
inc
sub
daa
and
les
and
gs
sbb
push
aaa
and
mov
test
std
add
adc
sbb
xchg
pop
xchg
lahf
pop
nop
sti
sub
dec
and
pop
jmp
dec
js
xchg
mov
sar
inc
movsb
pop
and
pushf
mov
push
add
push
and
cmp
aaa
mov
push
dec
push
fsubl
sti
mov
cmp
mov
inc
and
sub
mov
xchg
xchg
dec
mov
mov
imull
jo
leave
ds
cmp
adc
or
dec
and
sti
push
and
aaa
jle
addw
mov
mov
mov
add
pop
cld
jbe
insl
cld
jmp
jns
imul
xchg
or
mov
mov
cmp
mov
je
pop
testb
lods
or
add
xchg
gs
cli
pop
and
andb
mov
push
cmp
or
pop
stos
adc
imul
sbb
pop
pop
out
add
mov
or
fwait
sbb
sbb
loop
and
daa
outsl
inc
fisubrl
cmc
push
jae
mov
aas
stos
jle
cmovge
mov
inc
mov
outsl
jmp
and
pop
pop
out
mov
xchg
aas
out
test
subl
mov
lods
cmpsl
xor
xchg
mov
jno
sbb
add
outsb
sbb
sar
dec
add
dec
push
add
dec
mov
std
jmp
cmp
mov
pusha
xor
dec
in
cwtl
sbb
cmp
add
push
pusha
dec
dec
shr
pop
add
mov
lds
cmp
push
add
cmp
cwtl
add
cmp
inc
stc
je
add
mov
popa
xchg
std
bound
enter
and
cmp
pop
add
mov
pop
add
pop
sbb
mov
add
daa
push
xchg
adc
pop
add
out
add
mov
inc
push
mov
pop
sahf
adc
pop
add
mov
push
test
test
test
sub
add
lods
popf
or
or
add
xchg
pop
xchg
add
andl
fwait
cmp
test
adc
mov
addr16
push
jne
and
push
push
mov
lea
and
jae
dec
pop
outsb
push
dec
sbb
xchg
cs
rorl
test
push
mov
inc
mov
cmpsb
sbb
add
add
sbb
xor
inc
and
or
cmp
push
dec
ret
cmc
and
call
sub
add
ds
xchg
addb
cli
movsl
adc
aaa
cli
movsl
sbb
add
incl
insl
push
aas
pop
out
cli
ds
and
add
out
sub
adc
sub
es
icebp
add
adc
xor
inc
sub
jge
out
fdivl
sahf
idivb
pop
out
mov
lret
sub
test
pop
out
xchg
pop
out
jne
int3
add
test
pop
out
das
add
lret
push
mov
repz
ds
ret
pop
ret
and
sub
sub
int
sub
out
add
dec
add
and
call
nop
getsec
jb
sub
cmc
scas
push
in
int
fiaddl
in
int
sub
incl
mov
inc
lcall
in
cli
jb
shr
testb
sbb
pop
and
or
xchg
sbb
and
adc
push
mov
add
add
std
ret
roll
and
loop
fs
mov
and
inc
call
and
pop
add
daa
in
jbe
ds
and
or
mov
sub
adc
call
mov
and
pop
lahf
xchg
push
push
insb
shr
stos
imul
or
fwait
cmp
xlat
pop
add
add
adc
dec
cmp
cmp
adc
add
sub
fwait
repz
addb
ds
inc
and
rcll
js
pop
mulb
jp
and
jg
es
dec
mov
cmp
std
dec
and
and
les
addb
inc
add
incb
mov
sbb
add
add
std
push
and
or
add
std
adcl
adcl
push
xor
aaa
fsts
add
cmp
push
sbb
repnz
cmp
outsl
push
jl
pop
lea
stos
daa
es
js
adc
ret
or
aas
popf
bound
adc
shl
int3
pop
add
add
mov
lahf
sbb
pop
mov
push
or
test
push
pop
mov
add
push
nop
outsl
inc
xchg
sub
sub
fsubs
push
push
and
mov
js
xorl
mov
pop
add
enter
xchg
nop
cmp
loop
ljmp
add
add
mov
fdivr
ljmp
mov
xor
jmp
mov
lcall
insb
in
xchg
aam
std
sahf
jbe
and
jbe
and
data16
and
push
pushf
push
jb
sub
rep
fisubrl
push
jb
aad
add
mov
aaa
sub
push
loope
loop
add
cmc
add
insl
call
push
mov
into
mov
xchg
in
roll
enter
jmp
outsb
cmpsl
cli
mov
xchg
in
and
xchg
inc
cmp
jns
loopne
and
es
add
mov
pushf
jl
insb
sub
aaa
and
hlt
mov
cmp
push
add
aaa
or
call
sbb
or
add
push
cmp
inc
addb
pop
mov
addl
mov
rolb
ds
dec
and
stc
mov
or
cmp
or
mov
mov
pop
bound
int3
sub
xor
stc
dec
and
add
push
mov
jmp
jle
lds
jge
mov
mov
or
and
pop
jb
bound
aaa
pop
push
pusha
dec
bound
aas
pop
imul
pop
mov
ljmp
jb
mov
in
outsl
mov
jg,pn
pop
mov
cli
ss
cs
jmp
ds
jle
add
ss
jl
aas
notl
sub
push
mov
jmp
or
and
bound
cmc
or
ljmp
pop
lret
sbb
xchg
mov
add
jb
into
sbbl
mov
cmp
and
and
daa
and
in
daa
and
or
and
push
loope
in
add
cmp
leave
sub
cmp
inc
add
cmp
mov
jge
or
pop
jnp
cmp
pop
je
stos
pop
and
sbb
mov
cmpl
adc
xor
cmp
mov
mov
push
and
neg
jmp
lret
adc
adc
sti
push
cmc
push
into
call
add
xor
je
std
xchg
orb
pop
add
xchg
sbb
sbb
call
mov
push
into
mov
cmpsb
lock
jae
ret
shlb
inc
jnp
aaa
xchg
std
lcall
pop
add
pop
stc
inc
cmp
sbbl
and
hlt
call
xchg
test
sub
add
ds
enter
fldenv
mov
jmp
lock
adc
ret
xchg
pushl
cmpsl
loope
add
jmp
testb
push
out
mov
add
jns
add
mov
xchg
jp
and
jp
and
add
sub
and
mov
and
add
jns
or
and
jbe
add
jns
out
pop
xrelease
add
pop
out
pop
pop
ret
daa
cmp
mov
ds
bound
das
jb
addr16
insb
pushl
inc
cs
cmp
es
push
or
jae
xlat
in
sub
inc
cwtl
jp
rcll
lock
das
add
cs
xor
sub
mov
jg
in
sar
jns
aas
pop
dec
mov
lods
faddl
in
mov
inc
adc
pop
add
das
add
sub
push
int
aam
lds
push
cmp
call
jb
aas
cmp
insl
aam
jae
js
mov
sub
inc
mov
pop
pop
add
sub
xchg
add
pop
add
cmp
pop
add
loope
andl
cmp
pop
orl
in
ror
adc
std
testb
jmp
stc
xor
roll
repz
shll
add
jle
inc
xchg
scas
std
je
add
add
sbb
mov
cmp
scas
mov
scas
jle
test
add
pop
add
and
add
sub
and
lock
mov
mov
xchg
push
push
sbb
xchg
lcall
lcall
xor
jg
add
xor
jne
fidivrl
add
push
cmp
and
jl
fdivrp
add
das
add
lcall
push
outsb
or
call
add
ja
loope
in
inc
pop
xchg
icebp
lret
std
mov
cmp
mov
mov
icebp
mov
test
shr
and
loope
add
lock
das
in
adc
mov
shr
cmp
std
mov
and
add
mov
jno
add
jb
mov
shll
subb
dec
test
sub
add
add
pop
int3
xchg
sub
inc
pop
out
lds
loopne
sub
insl
repz
jmp
sbb
push
pop
out
rcr
pop
ds
bound
les
mov
cwtl
outsl
repz
pop
ds
hlt
cld
fdiv
pop
ds
jo
inc
pop
out
rcrl
cmp
push
add
shrb
cmp
add
cmp
jl
testl
push
lock
shlb
cmp
fimull
jo
imul
aam
icebp
inc
pop
add
inc
pop
add
ds
add
ret
in
cmp
pop
add
sub
and
rcrl
or
jmp
sub
add
popa
sub
int3
addr16
cmp
sub
andl
xor
pop
push
inc
ret
aam
stc
inc
pop
add
stc
ss
add
xchg
cmp
divps
ret
lods
sbb
lods
xchg
mov
or
xchg
jge
xor
add
jno
lcallw
mov
add
add
inc
add
pop
xchg
dec
xchg
inc
xchg
dec
push
mov
cmp
cmpsl
pop
push
push
repnz
out
dec
icebp
incl
les
pop
add
push
xchg
int3
int3
xor
int3
int3
ds
rolb
je,pt
push
jmp
insl
adc
ds
mov
add
inc
orb
push
or
mov
add
push
jp
iret
inc
or
mov
mov
scas
mov
call
mov
leave
mov
ljmp
jae
movsb
jecxz
fdivrp
cltd
jb
movsb
ret
sbb
mov
fnstenv
or
mov
stos
cmp
pop
movsb
or
hlt
jae
add
popa
dec
or
jmp
xorb
jae
negl
add
push
popf
and
inc
out
adcb
dec
or
fdivl
push
popa
inc
sub
jmp
and
sbb
mov
fildl
or
push
push
and
sbb
or
int
fisubs
jp
inc
ds
or
add
push
pop
and
sbb
jmp
mov
stos
mov
sbb
adc
mov
push
push
sbb
loopne
pop
add
popa
cltd
or
push
jecxz
push
faddl
jmp
mov
or
mov
cmp
fadd
in
mov
jg
inc
pop
cld
jmp
daa
in
add
xor
test
push
pop
ja
inc
jg
inc
pop
cld
jmp
jnp
xor
fadd
in
inc
jg
lock
or
addr16
jmp
pop
pusha
test
fsubrl
out
stos
jmp
jne
mov
aas
push
jl
or
aam
addl
add
rolb
and
xor
sahf
imul
push
or
add
xor
mov
dec
call
pop
jns
test
sbb
and
insl
and
rorb
mov
lcall
xchg
sub
ret
xchg
or
mov
mov
mov
outsl
cmp
movl
ds
mov
out
ret
xor
xor
ss
mov
jmp
add
add
jb
push
mov
fcoml
int3
add
ds
xchg
inc
in
jo
jb
pop
mov
ret
mov
mov
mov
mov
sbb
test
or
xchg
or
inc
push
icebp
mov
xchg
decb
incl
jo
decb
or
add
test
shrb
inc
dec
jno
loop
rcll
decb
or
inc
dec
cmp
push
xchg
xor
inc
shlb
and
shr
les
arpl
cmp
jmp
add
shr
push
outsl
add
shlb
lds
out
aas
shr
les
rolb
jmp
jb
popa
add
cmp
jmp
jb
jno
cmp
sti
mov
mov
inc
cltd
or
cs
push
dec
push
lahf
sub
inc
fnsave
rorb
rclb
pusha
nop
mov
jg
inc
push
xchg
add
test
dec
das
scas
lds
out
add
sub
xchg
or
into
test
pop
das
xchg
mov
jg
add
xor
fisubrl
add
in
loop
add
test
xor
out
xorl
out
movsl
test
pop
testb
add
lea
into
fimuls
stos
stos
jbe
sub
mov
sahf
jmp
movsb
jl
mov
xchg
or
pop
pop
test
out
sbb
add
loopne
jmp
sahf
popl
shr
push
mov
fsubp
aas
pop
push
clc
adc
add
data16
add
test
or
jmp
mov
stos
addl
xor
orl
mov
jge
clc
lock
jmp
mov
mov
je
xchg
fistpll
add
lret
ret
lret
dec
mov
call
jle
ja
add
jge
clc
movsl
ret
add
mov
orb
push
or
add
rol
dec
add
cld
addb
test
pop
fcom
mov
loop
vmaxsd
inc
je
mov
dec
loop
sbbl
jecxz
loop,pt
lds
add
mov
pop
xor
mov
mov
test
out
ds
sbb
mov
push
out
sarb
ds
repnz
icebp
cmpsl
add
in
cli
mov
add
mov
idivb
in
xchg
push
mulb
add
out
mov
std
push
pop
add
enter
cmp
jmp
add
add
pop
xchg
xorb
cmp
cmp
sbb
dec
push
mov
fsubrl
xor
cmpsl
out
pusha
sbbb
lea
jo
mul
inc
xchg
les
jo
mov
fidivrs
cltd
pop
sti
lds
enter
loopne
cmp
sbb
add
loop
sar
sub
jecxz
dec
das
xor
mov
fcoms
loop
ror
shrb
pushf
jge
sub
test
data16
xor
enter
sub
jecxz
pop
or
data16
inc
pop
cltd
filds
mov
or
xor
pop
pop
sahf
sbbl
pop
dec
push
add
lods
xor
mov
je
notl
xor
mov
or
jge
xor
mov
dec
aas
ds
or
fld
add
enter
jg
aam
push
dec
dec
aas
ds
stc
mov
xor
imul
mov
xor
clc
cmp
mov
sti
cs
xchg
mov
pop
je
addl
add
bound
push
ret
fsts
dec
aad
inc
fistpl
jg
xchg
shr
fldcw
jbe
push
mov
fsts
add
std
adc
sbb
test
jmp
mov
and
mov
ljmp
jno
rcl
out
aam
fsubrs
iret
mov
sbb
cmp
pop
fmul
ja
roll
add
repz
ds
shr
xorb
je
xor
movsb
sarl
imul
ljmp
fninit
jbe
rcl
jb
inc
ds
rorl
je
xor
loopne
sarl
adc
addl
sbb
js
jnp
mov
or
add
jbe
pop
mov
add
jp
cmpsb
in
fld
icebp
pop
loopne
cltd
insl
adc
mov
and
xchg
movsl
jae
pusha
cmpsb
repz
cmp
mov
test
jae
mov
jne
push
into
jae
jmp
divb
add
je
xor
ds
mov
xchg
test
pop
add
cmp
test
add
mov
je
loopne
sub
test
fidivrl
mov
test
sti
lcall
mov
xlat
loopne
sbb
jl
rorb
xchg
movsb
jmp
cli
lahf
and
sbbb
leave
xor
imul
sti
cmpl
cmpb
or
jmp
push
jno
rcr
cmp
add
mov
loope,pt
add
shrl
mov
sub
xchg
add
mov
test
push
jo
jnp
ss
push
or
incb
call
push
test
push
inc
add
in
mov
jnp
movb
jg
inc
mov
rolb
cltd
addl
ljmp
std
adcl
add
add
std
test
rolb
popa
xor
mov
mov
notb
scas
xchg
shll
jno
cltd
imul
jp
xchg
ljmp
out
jecxz
inc
pop
pop
push
jo
sbbl
or
adcl
xor
mov
addr16
ret
jo
fsub
pop
out
add
adc
xor
push
test
aaa
pop
lret
repz
or
xor
imul
repz
pop
out
fidivs
adc
pusha
add
or
call
xchg
add
xor
mov
insl
push
call
addl
pop
mov
sub
call
add
sbb
ret
or
rcl
std
scas
ret
jmp
adc
add
fcoms
push
push
subl
sub
adc
fcmovb
in
cltd
add
sub
jmp
adc
aas
and
mov
call
ret
xlat
pop
add
lahf
mov
push
mov
fidivrl
add
add
cmp
js
pop
add
movsb
arpl
jecxz
clc
jne
push
jb
sbb
add
xor
loopne
sti
jg
push
pop
or
fbld
dec
call
or
lock
sub
push
scas
ja
decl
out
inc
call
les
push
add
xchg
lret
add
dec
je
cmpl
aam
insl
inc
xor
inc
add
mov
lret
jmp
roll
push
stc
sub
mov
faddl
out
int3
je
test
out
fdivrl
xlat
lods
int3
push
mov
xchg
std
mov
cmpl
xor
sbb
sti
out
ja
add
mov
inc
cld
mov
aam
jecxz
pop
js
xorb
jecxz
fcmovnbe
repnz
loopne
lret
out
addb
insl
mov
jle
push
je
int3
cmpsb
repz
inc
fisubs
sbb
jle
jae
fcmovnb
jae
lret
mov
out
xor
push
xlat
xor
in
lret
jmp
movsl
hlt
mov
sub
outsb
adcl
insb
adc
add
add
jg
ss
cmp
popf
fimull
adc
sub
loopne
test
insb
add
push
outsb
jne
add
test
ds
jne
shlb
jae
test
jecxz
sti
sti
fsqrt
roll
jl
fs
std
es
pop
add
adc
xchg
stos
fdivs
insl
das
sbb
sub
testb
hlt
insl
std
insb
mov
fidivs
jl
hlt
insl
or
inc
pop
mov
mov
xor
clc
popa
cmp
andl
outsl
add
sti
jmp
js
adc
jno
in
js
adc
addb
mov
pop
pop
fiadds
push
mov
add
push
push
jmp
xor
lret
leave
lea
mov
arpl
mov
jo
add
pop
jg
out
and
push
xor
xchg
sub
mov
push
xor
dec
pop
inc
orl
mov
mov
jl
icebp
add
clc
call
je
add
je
add
je
add
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
pop
out
ds
out
add
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
in
xor
mov
mov
mov
mov
int
pop
cmp
push
pop
cmp
pop
cmp
xchg
testl
add
pop
cmp
push
out
dec
push
push
and
add
lock
sbb
jae
push
cli
es
push
xor
roll
xor
dec
cmp
pop
adc
bound
pop
and
fdivrp
sub
sti
imulb
sub
gs
pop
mov
add
arpl
inc
push
or
push
divb
pop
add
mov
push
jns
insl
xchg
cmp
add
mov
cmp
sub
je
xor
bound
stc
jo
fwait
out
je
mov
sub
in
push
or
cmp
pop
add
xlat
pop
add
xlat
pop
add
cmpsl
pop
add
cmpsl
pop
add
xchg
pop
add
xchg
pop
add
cmpsl
pop
add
cmpsl
pop
add
xchg
pop
add
xchg
pop
add
addr16
add
addr16
add
push
pop
add
lret
imul
sub
add
mov
in
sub
pop
push
cmp
adc
insl
gs
adc
mov
pop
add
daa
pop
add
daa
pop
add
pop
pop
add
pop
pop
add
out
add
out
add
xlat
pop
add
je,pt
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
je
add
pop
out
ds
out
ds
out
ds
out
ds
out
ds
out
add
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
fcoms
dec
das
aam
ds
push
in
lea
pop
add
add
hlt
je
xor
jbe
ljmp
inc
or
jo
shrb
xor
cs
cli
test
xor
fidivrl
clc
data16
cmp
pop
insb
push
inc
clc
pushl
sbb
jo
sub
arpl
cmp
lds
idiv
mov
or
mov
cmp
add
insl
xchg
xor
sub
imul
jbe
mov
add
lds
mov
ds
mov
xor
cmp
add
add
sub
sub
jb
outsl
je
sub
jo
cmp
jb
aaa
sub
outsl
jae
sub
dec
xor
cmp
imul
add
add
insb
insb
push
outsb
mov
add
sub
jae
push
sub
xor
es
lds
jb
xor
xlat
add
loopne
arpl
add
aad
arpl
jae
imul
imul
pop
pop
and
push
jno
je
outsb
xor
outsb
sbb
add
sbb
jae
add
je
jae
pop
cmp
je
insb
and
arpl
je
pop
in
dec
es
loop
add
xchg
xor
test
push
inc
hlt
das
push
inc
add
shll
sub
nop
and
lcall
scas
call
out
repz
xchg
pop
mov
out
xor
push
clc
push
xor
in
out
add
adc
push
stc
or
out
dec
icebp
cmp
dec
pop
dec
xor
clc
inc
cmp
cld
cmp
sub
sbb
das
stc
in
out
and
add
cvtdq2ps
sub
in
or
fstpl
and
repz
ds
repz
es
in
out
loope
int
fstpl
and
pop
outsl
enter
mov
dec
call
pop
out
addb
mov
incl
sbb
ss
sub
sbb
add
sub
pop
jmp
sbb
fs
addr16
incl
out
inc
insb
pop
jno
push
out
outsl
and
bound
dec
clc
pusha
or
bound
inc
jmp
add
hlt
insb
cmp
cld
jbe
push
xor
sbb
das
sbb
add
jb
test
pop
outsb
add
sti
sub
pop
xor
ret
outsb
add
sub
pop
outsb
mov
add
je
mov
sub
xlat
sub
outsl
xor
push
jo
jbe
popa
add
pop
jb
and
xor
xor
ja
sub
sub
imul
xor
add
xchg
sub
popa
add
gs
insb
xorb
popa
jle,pt
jne
mov
lretw
xchg
sub
cmpsl
hlt
lcall
mov
sub
roll
jo
aad
add
sub
shrb
pop
push
je
ja
add
popa
arpl
imul
push
pop
push
and
pop
je
and
and
bound
inc
cmp
and
arpl
dec
xor
pop
inc
sub
dec
add
fists
arpl
jae
pop
xlat
pop
pop
insl
jmp
repz
int3
pop
xlat
es
stc
aaa
movsl
cld
int3
add
clc
out
xor
lcall
pop
jl
lahf
repnz
ds
aaa
add
pop
lock
push
clc
jp
push
sub
es
dec
daa
gs
dec
and
push
and
ljmp
adc
sub
testl
sub
out
cmp
out
sbb
out
clc
ss
adc
insb
daa
add
adc
addr16
lret
insl
ret
xor
or
clc
jo
pop
out
insb
lds
add
clc
jno
dec
cli
insb
mov
jno
pop
cld
insl
mov
call
cmp
cld
jo
sbb
push
and
insb
pop
adc
inc
adc
insb
aas
cmp
cli
jb
jmp
mov
add
outsb
cld
jno
push
clc
push
sbb
call
dec
and
arpl
push
je
add
xor
pop
pop
imul
outsb
gs
addr16
xor
pop
add
arpl
outsb
add
sub
loopne
add
and
pop
jae
sub
jb
push
pop
jne
sub
outsb
out
jo
gs
imul
xor
xlat
cmp
js
popa
add
and
outsl
add
das
jo
xchg
and
popa
add
xor
imul
ds
sub
and
outsb
fnstenv
pop
in
push
pop
ja
popa
sub
mov
or
xor
cwtl
sub
subl
imul
inc
and
xchg
in
das
outsb
lcall
jb
lock
repnz
push
and
out
add
sub
add
add
ss
mov
daa
popa
and
test
and
sahf
and
pop
adc
xor
pop
fdivs
sub
mov
xor
int3
out
add
loope
out
loopne
sub
pop
fdivs
sarl
imul
sub
lret
mov
pop
cltd
mov
ds
das
cltd
enter
mov
pop
int
xor
mov
push
pop
ja
jns
pop
pop
ds
and
ds
dec
daa
sub
les
ds
pop
cmp
jb
xor
add
and
je
and
popa
adc
outsb
or
enter
mov
add
add
insl
filds
add
pop
popa
shrl
sarl
leave
fs
cmp
jmp
cmp
jno
pop
iret
add
jmp
pop
je
mov
das
sbb
mov
sbb
mov
dec
popa
mov
insb
popa
xchg
subb
jge
xor
popa
cmp
data16
inc
subl
imul
arpl
cmp
push
push
pop
outsb
jb
insb
add
outsl
add
jl
outsl
add
jae
subb
sbbl
jp
insb
pop
sbbb
jge
push
test
mov
xor
jp
jb
jns
bound
jb
orl
xlat
jns
popa
movsb
sub
mov
add
and
pop
jb
inc
and
xchg
xor
inc
lock
lock
pusha
sbb
push
fsts
add
data16
jecxz
add
aaa
and
repz
and
pop
lods
adc
jb
sub
cmpsl
pop
and
addr16
lock
outsb
loope,pt
jno
fistpl
add
and
pop
jecxz
jo
jecxz
arpl
insl
dec
pop
dec
and
push
mov
cmp
das
iret
dec
sub
sarb
sbb
cmp
sbb
sub
mov
add
add
mov
sti
adc
loop
rol
into
xor
int
add
xchg
repz
or
add
add
mul
push
mov
repz
lret
mov
jb
mov
sub
ja
adc
cs
iret
mov
sbb
mov
adc
into
sub
punpckhdq
jo
cmp
xchg
sub
iret
pop
lret
and
mov
or
ret
push
cltd
push
or
add
js
cmp
je
or
iret
fistpl
les
popa
enter
into
sbb
arpl
pop
lret
cmp
sbb
je
das
iret
pop
xchg
insb
add
jns
gs
jb
lret
outsb
mov
cmp
push
sub
addb
outsb
mov
push
dec
mov
xor
xchg
push
dec
add
pop
mov
push
push
dec
pushf
push
pop
aaa
mov
inc
xchg
cmpsl
push
dec
cmpsb
cmp
add
dec
dec
sbb
add
push
pop
add
hlt
cwtl
inc
push
call
lcall
or
outsl
test
pop
inc
stos
lea
fdivl
pop
lock
push
push
jmp
jno
jecxz
insb
ds
push
add
pop
mov
pop
push
cmpsb
push
je
fwait
and
jle
jno
scas
and
mov
add
ds
add
ds
add
sbb
add
bound
arpl
jne
outsb
or
push
add
push
sub
inc
add
mov
push
sbb
insb
mov
add
je
and
inc
insl
mov
pop
mov
add
add
movsb
mov
mov
jle
pop
into
jp
pop
cmpsl
mov
into
jp
arpl
mov
daa
dec
mov
add
inc
sbb
popf
xor
and
inc
add
mov
push
sbb
movl
das
aad
sarb
es
rcrb
fcmovne
enter
out
add
mov
mov
loop
mov
lret
and
xchg
outsb
lds
popf
and
insb
nop
sub
inc
andl
les
sbb
jno
and
add
or
add
push
into
imul
inc
std
pop
inc
cmp
inc
cmp
add
dec
lret
pop
mov
sub
add
sub
jo
add
jo
or
dec
add
pop
inc
fistl
je
pusha
lret
pop
enter
pop
inc
add
test
mov
insb
gs
mov
enter
fisttps
popa
jb
test
push
ret
add
xchg
ret
push
dec
outsl
popa
outsb
xlat
blcmsk
je
add
dec
jo
repnz
mov
cmpsl
cltd
popa
je
jo
sub
imul
popf
imul
jb
xor
fs
cmp
push
outsb
js
add
jo
outsl
sbb
mov
sub
imul
sbb
push
lahf
out
arpl
inc
fs
xor
sbb
add
cs
jmp
arpl
xor
ds
ja
scas
icebp
xor
and
xor
cmpsb
push
outsb
cs
sbb
inc
pop
mov
add
xchg
xor
daa
outsb
or
push
push
je
jae
aas
test
jb
jbe
jae
test
jb
pop
fstpl
aaa
popf
lret
pop
xor
stos
pop
add
stos
lret
mov
mov
and
nop
xor
mov
jb
test
mov
nop
xor
pop
aam
add
push
ficomps
lret
sbb
lret
push
push
sbb
aas
inc
ds
aaa
xor
mov
add
loop
aaa
push
repnz
or
shlb
iret
movb
sub
jmp
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
add
pop
add
cmp
pop
add
cmp
pop
add
addr16
outsl
push
test
popa
insb
inc
pop
dec
dec
call
insl
fs
cltd
add
daa
pop
add
cmp
cmp
add
lea
add
mov
add
mov
add
add
mov
add
xchg
cmp
add
pop
add
bound
inc
add
cli
jo
jae
push
add
out
add
ds
inc
jo
jne
je
inc
add
ds
ds
xor
and
xor
and
aas
inc
add
jge
es
ds
add
insl
add
imul
add
ds
loope
cmp
into
sbb
inc
add
ds
ds
cmp
jle
popa
sub
add
ds
andl
and
inc
jo
jbe
je
pop
out
ds
loopw
dec
out
jmp
cld
xor
ds
flds
out
stos
mov
mov
rol
and
pop
out
arpl
add
les
xchg
mov
nop
sbb
xchg
xor
pop
jnp
sbb
jp
rorl
orl
out
add
pop
xor
push
sbb
rolb
adc
out
mov
stos
add
insl
aas
sbb
shll
sbb
ret
aaa
int3
insl
femms
cmpsl
push
adc
insl
decb
cmpsl
inc
hlt
jae
arpl
popa
mov
insl
jns
js
xor
push
shrl
mov
or
lds
jno
push
ret
jo
inc
int
fwait
pop
mov
sub
aad
std
jmp
je
jo
push
iret
arpl
add
push
mov
dec
xor
jbe
cmp
gs
popa
inc
dec
jle
xor
jge,pt
push
push
fs
cmp
gs
scas
popa
inc
xor
cltd
imul
push
jb
mov
add
mov
inc
popa
hlt
addr16
cmpsl
mov
jo
addr16
movsl
imul
add
mov
jbe
stos
imul
mov
popa
push
adc
popa
lea
ds
sbb
lahf
add
sbb
jno
mov
pop
pop
in
mov
in
push
push
in
push
rclb
arpl
xor
in
gs
int
cmp
aad
push
xor
je
push
fbstp
cmp
popa
popf
pop
xor
push
push
fisubrl
aaa
idivl
popf
adc
inc
outsb
pop
icebp
sbb
pop
loope
pop
push
pop
outsb
push
fldt
and
xlat
cmp
icebp
or
adc
xor
sbb
push
sbb
jnp
sbb
mov
push
pop
adc
cmp
inc
push
sub
fmul
add
ljmp
jecxz
lret
add
loope
or
fnstenv
repz
ror
xor
iret
les
lahf
mov
sbb
mov
mov
stc
mov
test
adc
iret
shl
test
mov
or
jle
jle
lret
pop
pop
inc
mov
dec
cmp
and
jbe
or
mov
sub
jno
mov
fdivl
or
mov
adc
adc
cmp
adc
insl
pop
and
inc
and
jnp
ficompl
js
pop
adc
mov
and
in
pop
test
pop
lret
je
fnsave
shl
push
aas
mov
mov
outsb
mov
mov
cmp
scas
gs
outsb
add
cmp
jns
cmp
cmp
ds
outsb
add
je
outsl
outsb
cmp
jl
outsl
inc
or
pop
mov
jb
arpl
mov
and
jo
imul
sub
insl
inc
js
imul
dec
dec
fidivrl
xor
inc
xor
outsl
call
and
or
inc
std
sub
add
ret
and
sub
and
sub
adcb
testb
sbb
jmp
xor
fisubrs
jb
aad
outsb
add
outsb
pusha
cmp
pop
push
arpl
push
pop
push
arpl
push
pop
inc
rcll
inc
rcll
xor
repnz
je
imul
xlat
pusha
sbb
jp
fnstenvs
cs
push
daa
insb
insl
add
arpl
add
outsb
xor
test
xor
insl
mov
pop
cmp
push
bound
sub
pop
lcall
mov
pop
dec
pop
mov
and
mov
mov
sub
mov
inc
clc
scas
aaa
inc
push
mov
sbb
pop
cmp
and
ds
sbb
pop
push
adc
inc
xor
add
int
sub
ljmp
push
ds
sub
lahf
and
and
mov
ret
xor
mov
sbb
cltd
xchg
xor
pop
push
mov
dec
mov
xor
and
gs
int3
je
dec
lret
jno
dec
push
dec
movl
add
add
je
pop
int
sub
icebp
mov
jb
sub
or
xor
lret
push
stos
dec
push
sub
add
pop
int3
jno
outsb
int
jmp
mov
jno
sub
rorb
add
jbe
pop
add
decb
dec
dec
movsb
xchg
inc
push
out
outsb
jae
add
je
add
je
popa
mov
je
ja
push
gs
jns
pop
push
jbe
fs
mov
push
lea
push
dec
outsl
xor
popa
xor
jbe
insb
inc
imul
cwtl
imul
outsb
fs
imul
ja
push
xor
add
xchg
pop
adc
testb
or
je
sbb
push
mov
cmp
pushaw
fildl
cs
shrb
imul
add
add
inc
inc
or
inc
push
bnd
push
out
xor
negb
sbb
or
xchg
adc
jns
insl
fcoml
push
std
jb
inc
bnd
je
ja
push
add
push
add
inc
test
jne
insl
cltd
ds
pop
lods
pop
out
stos
mov
int3
aas
subl
inc
cmp
mov
jecxz
jnp
adc
test
dec
mov
sub
jg
xchg
sub
xchg
sbb
mov
sub
mov
cmp
add
jnp
jecxz
scas
inc
sub
stos
sub
shrl
out
jecxz
sbb
jmp
scas
push
and
stos
add
pushf
jae
push
xchg
push
mov
das
mov
int3
sub
addr16
xor
enter
mov
das
mov
bound
or
arpl
add
imul
dec
sub
insl
dec
pop
sahf
jb
dec
mov
push
sub
insb
dec
sbb
insb
sbb
jge
and
fwait
jae
and
and
sub
data16
int3
add
pop
insb
push
mov
push
inc
jo
bound
imul
bound
outsb
dec
inc
mov
aam
je
test
xchg
insb
outsl
add
cmc
js
push
xchg
cwtl
push
inc
add
push
push
testl
pop
insb
aam
cmp
jne
jne
push
push
aaa
dec
imul
data16
pop
adcl
insb
imul
inc
jo
je
jp
add
inc
pop
test
subl
jb
pop
inc
insb
lahf
inc
sub
add
or
jne
and
pop
adcb
jno
hlt
cmp
add
add
jb
adc
push
push
xor
dec
out
insb
sub
xor
ljmp
adc
xor
jno
mov
je
outsb
xor
nop
sub
add
jp
jno
jl
ja
add
pop
or
fidivrl
aaa
cmp
and
mov
pop
cmp
or
scas
int3
cmp
ds
fisubrl
mov
and
mov
mov
adc
push
enter
mov
push
sbb
test
ds
test
mov
sub
scas
mov
xor
test
adc
repnz
push
sub
mov
cmp
adc
inc
cmp
mov
inc
pop
mov
and
es
ucomiss
pop
sub
pop
std
popa
cwtl
inc
adc
dec
push
push
scas
add
mov
jno
cmp
pop
push
int3
push
enter
sahf
addr16
dec
mov
jo
cmp
mov
jne
jno
cmp
mov
arpl
mov
dec
mov
jno
cmp
pop
dec
enter
mov
xor
jbe
and
pop
dec
popa
xor
and
push
jbe
and
dec
add
je
inc
pop
jb
xor
push
adc
jb
lret
jl
je
jo
jb
add
pop
jb
mov
outsl
jae
mov
push
movsl
dec
popa
jb
outsl
imul
dec
popa
movsb
imul
gs
dec
popa
xor
je
les
jbe
dec
and
popa
add
push
and
andb
out
and
add
adc
rcrl
sbb
jo
dec
adc
sbb
add
xchg
mov
xor
insl
cwtl
and
mov
add
mov
and
jno
cmc
daa
pushw
and
inc
push
js
xor
and
pop
loopne
dec
jmp
sub
and
insl
and
xor
adc
aaa
adc
enter
dec
adc
mov
adc
xor
movl
push
pushf
adc
cmc
mov
sbb
popf
xchg
sub
pop
cmp
daa
popf
scas
pop
xor
enter
mov
xlat
mulps
aad
ds
sbb
pop
xchg
test
movd
mov
and
mov
sub
mov
jnp
leavew
push
push
or
addr16
pop
scas
pop
es
scas
sbb
and
je
sbb
inc
adc
sub
stos
addr16
pusha
popf
addr16
pop
pop
push
adc
jno
push
test
je
movw
mov
insb
jmp
dec
scas
inc
popf
sub
add
enter
mov
je
jne
jno
sbb
je
pop
mov
addr16
dec
arpl
pop
push
ljmp
add
data16
jp
gs
imul
addb
pop
outsb
and
pop
insb
xor
je
pop
dec
outsl
cmp
popa
and
dec
pop
pop
add
imul
jb
push
popa
outsb
jmp
pop
insb
mov
insb
je
lcall
push
jns
inc
call
out
imul
pop
jb
insl
dec
outsl
fsubs
pop
clc
std
cmp
inc
jo
lret
and
inc
xor
mov
insl
or
add
or
sahf
sbb
je
cmpsl
adc
push
sbb
inc
add
out
add
fsts
add
pcmpeqb
jb
jb
inc
jno,pn
xor
pop
stos
addr16
lahf
xor
jne
adc
je
sbb
dec
pop
negl
je
and
arpl
and
pop
pop
push
inc
push
pop
xchg
jecxz
les
push
adc
xchg
push
sub
andb
test
xor
add
mov
inc
xor
aaa
cmp
test
sbb
mov
xor
sarl
iret
pop
pop
and
scas
out
iret
mov
sbb
mov
add
scas
mov
cmp
stos
stc
and
test
and
mov
dec
jbe
mov
add
mov
inc
xchg
or
add
test
and
mov
jb
sub
dec
das
stc
mov
push
cltd
pop
pop
pop
imul
cmp
inc
mov
ss
pop
cmp
xchg
inc
cmp
push
mov
pop
cmp
data16
jno
dec
xchg
jno
xor
jb
inc
mov
sub
and
dec
mov
stos
jge
imul
dec
add
dec
je
mov
push
popa
rcll
inc
rorl
imul
push
add
gs
dec
popa
xor
push
pop
push
push
jge
jns
jns
inc
sub
imul
dec
outsl
stc
inc
add
outsl
jae
jl
jae
imul
push
push
pop
jb
imul
mov
dec
gs
dec
jb
popa
jg
inc
call
ds
popa
adc
add
add
push
rclb
addr16
pop
adc
inc
out
sbb
bound
xor
push
push
cmc
sbb
or
inc
xor
or
es
adc
mov
imul
xor
xchg
pop
insl
add
in
xchg
add
ljmp
push
loope
sbb
jne
pop
std
push
or
outsb
aaa
arpl
adc
push
jl
sbb
xor
js
pop
leave
sbb
shlb
pop
mov
sub
lahf
and
aad
gs
ss
mov
and
les
outsb
mov
cltd
daa
mov
and
add
cmpsl
jle
or
fwait
inc
push
stos
mov
add
cmp
out
stos
push
pop
loopne
out
std
mov
and
shlb
inc
push
leave
adc
lods
or
dec
jne
loope
jp
add
add
sti
push
popl
sub
mov
js
and
inc
fildl
arpl
add
adc
mov
xor
fwait
jnp
imul
insl
fwait
pop
pop
pop
cltd
bound
fs
pop
cmpsl
insl
pop
dec
pop
push
dec
sbb
pop
pop
std
mov
je
sbb
pop
cmp
mov
mov
or
jae
dec
lods
add
imul
add
add
dec
jbe
add
je
gs
pop
inc
je
imul
inc
imul
pop
inc
mov
popa
test
outsl
test
inc
fisttpl
imul
dec
jne
in
inc
push
mov
jo
dec
ja
imul
pop
jb
imul
dec
arpl
pop
outsl
or
jae
imul
dec
pop
jb
add
push
push
daa
pushf
insb
imul
je
ds
add
xchg
push
sbb
xor
pop
insl
pop
es
push
sbb
cltd
pusha
inc
push
mov
sbb
pop
lea
adc
insb
push
and
cs
and
insb
pop
icebp
adc
sub
and
adc
xor
ficoms
add
push
arpl
and
jo
add
mov
pop
or
xchg
das
arpl
sbb
nop
fisubs
jo
pop
in
mov
jb
lahf
das
arpl
sbb
pop
sbb
insl
jge
and
mov
add
xchg
ret
jge
adc
ds
mov
daa
mov
pop
popa
mov
sahf
shrl
add
pop
add
sbb
mov
es
mov
adc
es
pop
je
ljmp
and
test
adc
cmpsl
std
pop
stc
cmpsb
out
fldenv
add
pop
pop
sbb
pop
test
pop
sbb
jmp
dec
insb
push
and
lahf
arpl
sub
inc
xlat
add
dec
cmpsl
pop
int
mov
inc
pop
inc
enter
shrb
pop
push
enter
sub
je
pop
shlb
stos
arpl
cmp
cmpsl
arpl
xor
insl
pop
dec
popf
jae
and
push
pop
xor
push
insb
add
data16
jbe
gs
fs
jb
dec
outsb
and
add
imul
add
das
inc
cs
inc
je
add
dec
inc
push
dec
je
adc
data16
push
pop
pop
dec
repnz
inc
jb
dec
popa
add
inc
jb
xlat
imul
imul
fs
insl
ret
outsl
mov
jnp
je
push
jne
cmpsl
inc
jb
xchg
jno
repz
pop
jb
jae
outsl
adc
and
add
sbb
test
push
fistl
xlat
xchg
adc
es
lods
dec
adc
jne
outsb
nop
push
and
pop
jno
inc
sbb
push
xchg
add
icebp
ss
mov
xor
js
xor
lret
dec
out
add
adc
sbb
jnp
xor
xchg
lret
mov
add
push
fsubrs
int3
or
push
movsl
lret
sub
xor
je
in
xlat
sub
pop
push
adc
lods
dec
add
mov
dec
adc
mov
sbb
scas
ss
mov
cmp
pop
mov
and
pop
and
scas
aas
cltd
lods
or
xchg
mov
and
outsl
scas
cmp
pop
mov
xor
scas
mov
adc
add
jno
scas
das
jne
fwait
adc
mov
mov
and
mov
sbb
sbb
mov
jns
vmwrite
xchg
cld
mov
add
push
shll
arpl
adc
add
or
inc
or
dec
mov
jo
push
shlb
lcall
add
dec
insl
inc
mov
or
jp
inc
adc
lcall
or
add
add
add
pop
lcall
jo
push
shlb
jo
add
or
xor
mov
das
sub
push
popf
aas
aaa
push
add
das
or
xor
inc
pushf
jns
add
or
mov
jae
push
outsl
cs
dec
add
outsl
gs
dec
jo
ds
add
push
push
xor
addr16
dec
cs
add
push
outsl
fidivrs
gs
adc
out
push
push
lock
je
test
add
dec
outsl
xor
jo
push
ds
cmp
rolb
dec
in
shlb
add
jmp
shll
filds
inc
arpl
pushf
and
mov
data16
add
sti
jo
push
cmpl
lods
lahf
sbb
add
jne
je
es
insb
jne
or
pop
adc
mov
cs
or
je
adc
je
xor
dec
mov
inc
insb
lds
sbb
add
xor
dec
outsl
pop
fsubs
test
push
out
mov
pop
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
pop
adc
mov
pop
pcmpeqw
stos
pop
cmp
mov
test
adc
mov
adc
push
cli
push
ds
pop
popa
scas
or
xchg
stos
stc
push
add
outsb
mov
fcoms
popa
scas
int3
shlb
rcrl
dec
pop
mov
push
outsl
test
lret
jae
push
xchg
xor
insb
addb
scas
pop
mov
jl
mov
mov
jmp
dec
mov
push
mov
data16
jmp
inc
mov
arpl
stos
outsl
inc
and
insb
push
add
sub
addr16
adc
add
repnz
addr16
out
pop
cli
icebp
mov
insb
rcl
mov
insb
aam
mov
add
es
hlt
push
outsl
jno
ss
movsb
cmp
lret
and
fdivrs
add
xchg
push
add
xchg
push
add
addr16
add
addr16
add
push
push
add
push
push
addr16
add
addr16
add
daa
arpl
xor
mov
insb
data16
bound
outsb
sub
dec
cmp
xor
add
cmp
push
cs
js
push
jo
inc
xor
std
jb
xor
imulb
dec
lmsw
sbb
insb
and
je,pn
call
out
insb
sub
xor
add
or
hlt
decl
jmp
xor
test
jae
adc
xor
arpl
lds
je
pop
pusha
repz
xchg
in
bound
in
popf
data16
outsl
mov
call
insl
lahf
dec
in
pop
dec
repnz
mov
jae
push
aam
insl
and
and
mov
pop
push
pop
std
jp
into
call
add
xorb
sbb
ret
loop
cltd
shl
mov
mov
loop
mov
nop
out
in
out
and
stos
mov
adc
clc
int
and
and
clc
int
pop
adc
jmp
cwtl
mov
out
xchg
cmc
cwtl
cmpsl
or
imul
jecxz
mov
in
add
pushf
mov
add
gs
add
fimuls
outsb
shl
test
insl
lret
pop
cmpsl
shrl
jb
mov
arpl
mov
and
mov
pop
mov
imul
pop
jnp
test
mov
add
push
mov
inc
dec
and
add
sbb
stos
add
scas
imul
xorl
lods
data16
push
nop
inc
add
dec
fs
xor
inc
sub
and
xor
pop
je
or
cltd
pop
dec
add
jno,pn
hlt
insl
bound
pop
pop
jnp
data16
xor
push
ss
mov
arpl
sub
add
mov
cmp
xchg
pop
aas
xor
cmp
pop
sub
outsl
jbe
sub
xor
sub
imul
insb
pop
incl
push
push
bound
outsl
add
outsl
rcll
push
xor
bound
decl
push
in
push
fldl
add
insb
pop
or
jp,pt
aam
ds
ljmp
push
ja
add
sbb
jno
loop
push
daa
jmp
sbb
rcrl
out
or
in
call
mov
int3
inc
push
not
dec
push
fs
int
jmp
loop
add
out
jb
inc
je
add
test
adc
cmpsl
pop
sub
aas
and
movsl
adc
lahf
out
ds
outsb
jl
mov
loop
movsl
adc
add
mov
insl
adc
add
mov
icebp
sbb
lods
ljmp
mov
add
test
sub
cltd
out
jle
in
in
mov
out
loopne
xchg
aam
mov
int
pop
jecxz
mov
add
pop
out
loope
dec
add
pop
stc
add
cmc
add
add
jo
lock
cmp
data16
cmp
mov
sarb
push
mov
arpl
les
imul
adc
cmp
mov
cmp
mov
data16
xchg
test
add
sub
xchg
pop
test
mov
pop
test
scas
bound
add
outsb
jmp
imul
data16
add
jb
cmp
inc
cmp
sub
add
gs
cmp
inc
and
push
gs
add
je
add
jb
cmp
inc
cmp
repnz
ja
imul
and
jno
mov
outsl
jbe
and
ret
jb
jae
and
bound
and
and
jo
aad
push
push
addr16
pop
or
jbe
ds
stos
cmpsl
aad
lods
push
fbstp
loopnew
insl
inc
rorb
dec
fildll
cmp
inc
push
add
addr16
jo
pop
out
jno,pt
popa
push
dec
jecxz
pop
add
insb
pop
sub
pop
andb
pop
add
ds
dec
daa
xor
pop
sbb
repz
shlb
xor
fsub
popa
sub
add
sub
and
in
xlat
sarb
pop
cli
int3
incl
test
push
or
lret
dec
repz
sub
negb
leave
out
lahf
and
mov
out
adcb
pop
dec
negb
nop
cmp
adc
push
negb
add
add
insl
mov
pop
jl
filds
and
dec
mov
sub
pop
iret
out
dec
mov
sub
mov
cmp
cli
mov
loopne
orb
sbb
mov
out
jl
adc
test
aad
add
lods
insl
xchg
pop
pop
imul
jae
add
cmp
insb
dec
pop
popf
cmp
inc
cmp
xchg
and
pop
das
adc
test
or
jmp
jmp
arpl
loope
dec
adc
jle
xchg
mov
inc
dec
les
mov
mov
js
add
popf
jo
lcall
mov
add
mov
pop
outsl
imul
add
add
je
or
pop
jns
jo
test
push
jb
pusha
imul
std
push
daa
sti
cld
jae
or
push
out
std
jmp
das
inc
insb
push
std
pop
insb
not
imul
insb
popa
cmp
outsb
add
fs
or
jg
push
push
xchg
cmp
fstps
insb
xchg
bound
or
jb
pop
bound
mov
mov
jecxz
in
cwtl
out
fiaddl
lds
xchg
les
xchg
loopne
int
lds
lods
iret
jo
mov
dec
lahf
mov
dec
cltd
push
lock
repnz
call
bound
arpl
bound
hlt
pop
lea
jae
fnsaves
add
jo
imul
inc
push
xor
cs
xor
incl
fcom
sub
lds
sub
jo
pop
in
cli
sbb
bound
call
xchg
in
jg
mov
jno
jle
fstpt
out
fadds
outsl
out
push
dec
mov
add
adcl
inc
inc
out
pop
sub
orb
jno
sbb
mov
add
sbb
cmpsb
and
mov
outsb
mov
test
add
jne
and
rorl
or
jae
sbb
popa
dec
sbb
push
pushf
cli
shrb
cmp
add
jg
inc
cmc
inc
popf
inc
movsb
imul
xchg
fstpt
lahf
push
cltd
cmp
stos
pop
jnp
add
jmp
inc
inc
jb
sub
push
sbb
inc
sub
or
mov
bound
jecxz
push
add
jns
pop
fldl
add
roll
fs
lock
into
push
add
cmp
push
mov
lea
mov
std
inc
mov
dec
outsl
rcrb
imul
add
std
push
push
mov
dec
inc
fwait
sub
cmp
das
cs
sub
arpl
add
in
dec
dec
popa
xor
and
push
xor
adc
xor
dec
push
orb
inc
xor
sbb
je
and
mull
data16
inc
inc
add
outsl
jae
clc
outsb
xlat
sub
jb
add
and
bound
iret
cmc
bound
incl
and
jae
and
inc
pop
shl
pusha
or
bnd
shl
jno
mov
repnz
bnd
aad
into
out
adc
add
lcall
lock
cmp
mov
cli
mov
dec
ja
xor
dec
pop
ss
pop
adc
pop
or
add
add
add
push
loope
push
in
arpl
pushaw
arpl
inc
jb
rclb
pop
fucomi
pop
mov
int3
cmc
test
pop
pushf
negb
mov
testl
sbbl
fmull
and
xchg
call
stos
jns
jmp
add
lods
xchg
lcall
and
push
cmp
adc
nop
lea
mov
clc
popa
jl
rolb
test
sbb
mov
sahf
jg
jmp
jg
imul
scas
jno
xchg
lahf
pop
int3
cwtl
adc
xchg
mov
mov
mov
push
adc
add
imul
dec
jl
cmpsl
dec
addl
push
adc
pop
lea
sbb
stos
insl
dec
push
mov
sbb
arpl
jo
adc
jb
inc
cltd
push
cmp
ja
add
or
inc
adc
inc
aaa
outsl
lds
bound
and
inc
add
mov
insb
outsb
add
inc
or
aad
inc
push
cmpsl
cmp
les
data16
or
sarl
les
je
inc
mov
pop
jno
sar
imul
or
dec
and
jo
jle
pop
je
xor
test
jo
xorl
add
dec
and
insb
dec
sti
popa
jae
add
push
mov
bound
add
add
dec
adc
arpl
sub
or
jecxz
sub
out
bound
mov
push
push
aad
adc
fisubl
out
bound
lock
std
loop
pop
cli
ljmp
testl
out
dec
xlat
xchg
cmc
sub
mov
fldt
add
jae
mov
jae
data16
add
pop
add
lea
jae
dec
out
jl
sbb
push
add
jmp
test
clc
sub
add
mov
sbb
dec
ja
fists
add
adc
jle
notl
jl
call
sbb
movsb
in
cmp
neg
jl
iret
adc
out
loop
jae
call
add
orl
push
lcall
xchg
jbe
aad
jge
scas
add
jnp
jmp
cmp
inc
jmp
jecxz
add
repz
jg
or
mov
jmpw
outsb
les
inc
ds
cltd
js
jmp
imul
outsl
jle
mov
cs
mov
push
subb
xor
jnp
xor
mov
add
adc
dec
sub
xor
push
xchg
aas
and
cmp
add
jns
pop
jae,pn
push
xor
cmp
pop
cs
outsl
inc
adc
hlt
pop
dec
fadds
pop
inc
xor
std
sub
xor
jb
mov
dec
popa
add
mov
add
cmp
add
daa
dec
push
test
dec
popa
les
je
mov
add
dec
push
cmpsl
pop
dec
popa
les
je
mov
add
dec
inc
cmpsl
pop
dec
popa
les
je
mov
add
push
push
rcrb
ds
leave
dec
lahf
mov
je
push
loopne
ds
dec
xchg
mov
loop
xchg
dec
fldt
add
icebp
jo
and
push
pop
push
lock
adc
pop
or
jno
xor
gs
shll
push
fidivl
mov
dec
pop
sub
jmp
mov
pusha
in
int3
cmc
insb
fsubr
les
fsubrl
and
fcmovbe
in
in
jae
loop
lods
mov
insb
cwtl
pop
pop
enter
loopne
add
jl
fcoms
scas
push
loop
xchg
dec
negb
cmp
outsb
cmpsl
sub
mov
add
in
jl
fisttpll
and
dec
jl
popf
or
mov
enter
into
jmp
je
fcompl
xchg
enter
xchg
ficompl
jp
xlat
lock
mov
add
cli
stos
jle
loop
xor
jg
sbb
js
cmpb
pop
push
inc
lahf
pop
push
sbb
or
sbb
push
push
mov
push
in
add
or
insl
pop
out
mov
stc
movsl
inc
fimull
pop
adc
or
subb
jb
mov
add
jbe
insl
movb
movsb
or
lea
jb
lea
cltd
xchg
mov
jbe
test
jp
pushf
ja
add
mov
jo
mov
popa
add
xor
aam
outsl
jbe
adc
push
jb
insl
push
adcb
add
jo
pop
outsl
dec
and
jno
push
cld
outsl
jae
and
xlat
std
pop
arpl
push
xchg
jmp
add
xlat
std
pop
arpl
clc
push
cmp
aas
popa
mov
pop
imul
sbb
add
outsb
shrl
inc
push
ret
sbb
ja
pop
je
pop
dec
outsl
ds
je
jecxz
pop
in
lret
ljmp
push
xchg
out
repz
aad
ds
aad
movsl
fwait
fs
add
dec
add
insb
dec
fnsave
outsl
shlb
shrl
jge
ficomps
outsb
lock
jge
repnz
pop
pop
or
rorb
mov
pop
pop
push
and
and
out
bound
in
pop
in
push
out
jne
ret
add
loop
and
jge
add
xchg
mov
push
scas
lcall
jge
rolb
add
test
dec
xchg
dec
fstps
pop
shll
loopne
cmpb
stc
cwtl
and
repz
mov
mov
js
add
xchg
cmp
xor
stc
add
sub
pop
stos
or
sub
test
inc
mov
loopne
cmp
rclb
xlat
sbbl
insb
jns
jmp
sbb
jns
leave
outsb
lods
dec
jmp
sbb
push
dec
movsb
cli
xchg
and
test
addr16
pop
stos
jno
or
dec
dec
jmp
stos
push
and
jl
or
jns
pop
add
leave
add
push
ss
jmp
add
bound
dec
lods
jl
and
cmp
dec
and
or
js
popa
xor
dec
inc
cmpsl
cmp
mov
je
mov
das
add
sub
mov
imul
add
adc
dec
jbe
imul
jo
outsl
fs
das
sbb
ja
or
xlat
pop
push
dec
add
daa
dec
and
or
cmp
popa
add
int3
cmp
jae
imull
inc
pop
dec
dec
push
das
sbb
ja
or
ds
aam
or
sbb
rcrb
push
adc
jo
in
out
arpl
repnz
insb
fsub
jmp
int3
faddp
dec
xlat
shr
insb
lods
aad
jae
mov
shll
push
ret
pusha
add
popf
xchg
xlat
insl
mov
pop
cwtl
xchg
jmp
pusha
pop
xchg
xlat
insl
push
add
bound
jmp
dec
repnz
pop
data16
pop
rorb
insb
sub
cmp
out
icebp
pop
and
xchg
movsb
int3
sub
aad
pop
xchg
enter
int3
aad
lcall
into
pop
mov
add
add
mov
rcr
ja
repnz
jb
xlat
xchg
stos
xor
jb
inc
xchg
cmp
jle
pop
pushf
jno
mov
xchg
jno
mov
push
pop
rcrl
in
je
jmp
scas
adc
dec
test
fcomps
mov
jb
in
and
je
or
mov
mov
mov
jae
mov
add
mov
jge
or
jo
mov
mov
dec
nop
pop
mov
dec
js
lods
test
lea
jno
stmxcsr
mov
das
mov
lock
or
push
inc
or
insl
push
jmp
dec
dec
adc
or
mov
movsl
push
sbb
ja
add
add
jmp
or
add
je
cld
outsb
xor
data16
jo
jns
pop
dec
subl
jo
cmpsb
negb
stos
or
mov
clc
outsb
add
or
xchg
sbb
arpl
sub
mov
gs
cmc
pop
popa
stos
cmc
imul
pusha
andl
arpl
imulb
add
cmp
imul
outsl
gs
daa
pop
jae
and
es
outsb
ds
fsubrs
add
pop
pop
push
jecxz
sub
pop
sbb
pop
sbb
pop
push
adc
jo
adc
arpl
rcl
repnz
jo
sbb
sub
sub
and
xor
push
adc
out
and
xor
add
xor
xor
xor
xor
ljmp
xlat
insl
lcall
call
mov
jno
fwait
shlb
pop
in
adc
int3
or
lret
pop
into
jns
jmp
jno
int
imul
mov
push
pop
jno
dec
pop
lods
rolb
mov
xor
call
add
sub
out
pop
dec
out
pop
add
adc
in
or
in
add
ljmp
daa
out
imul
rcrl
cmpsb
xlat
push
pop
insl
fmuls
fs
pop
nop
fstpt
pop
and
xor
fildll
pop
add
fidivrs
add
stc
add
add
fwait
add
fwait
add
enter
xor
fwait
add
add
and
add
mov
fwait
add
clc
lcall
popf
fwait
add
fwait
add
movsl
fwait
add
mov
fwait
add
mov
fwait
add
jge
add
jp
add
jge
add
jge
add
jg
add
fcoml
add
xchg
inc
add
add
xchg
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
lea
mov
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
inc
add
fwait
inc
add
inc
add
cmp
inc
add
cmp
inc
add
inc
add
inc
add
jl
add
je
add
add
jbe
add
jbe
add
pusha
arpl
cmp
inc
ds
imul
push
inc
cmp
repnz
repnz
repnz
repnz
repnz
ds
sbb
push
push
iret
shll
scas
sub
mov
dec
or
sub
sbb
fldenv
dec
adc
div
aam
lret
into
add
add
in
imul
in
mov
in
ds
pusha
mov
repnz
dec
clc
or
push
mov
push
pop
loopne
outsl
pop
or
xor
cmp
or
jbe
in
dec
xchg
or
cmp
and
cmp
or
cmp
jmp
insb
or
cmp
out
push
dec
loope
and
and
cmp
and
out
add
pop
cmp
es
cmp
loope
lret
out
dec
add
add
pop
out
ds
out
ds
out
ds
out
ds
out
ds
out
ds
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
pop
pop
add
pop
pop
add
daa
pop
add
daa
pop
add
pop
pop
add
pop
pop
add
out
out
add
xlat
pop
add
xlat
pop
add
out
add
out
add
xlat
pop
add
xlat
pop
add
cmpsl
pop
add
cmpsl
pop
add
xchg
pop
add
xchg
pop
add
cmpsl
pop
add
cmpsl
pop
add
xchg
pop
add
xchg
pop
add
addr16
add
addr16
add
push
pop
add
push
pop
add
addr16
add
addr16
add
push
pop
add
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
call
lods
add
rclb
cmc
pop
call
add
movl
cmp
add
mul
add
pop
out
push
pop
out
cs
out
inc
pop
out
inc
pop
out
cmp
out
mov
pop
out
test
pop
out
add
cltd
mul
or
pop
out
mov
out
ds
out
ds
addr16
pop
cmpsl
add
pop
pop
add
pop
xlat
add
pop
add
cmp
pop
add
cmp
pop
add
dec
inc
and
sub
ds
loopne
pop
pushl
pcmpgtw
and
inc
es
push
and
out
popa
add
dec
inc
and
add
loope
add
int3
arpl
call
inc
addr16
out
dec
adc
stos
push
sbb
lods
fs
out
dec
pop
xlat
arpl
add
incl
dec
push
and
cmp
add
and
sub
es
inc
dec
sub
inc
cmp
push
idiv
add
pop
add
daa
pop
std
jmp
idiv
add
pop
std
add
idiv
jmp
pop
pop
pop
std
call
idiv
jmp
cmc
std
add
cmc
std
add
cmc
cld
call
cmc
cld
add
pop
std
add
pop
add
jecxz
add
shl
cld
jmp
cmc
cld
add
cmc
std
jmp
pop
std
add
pop
std
jmp
add
or
add
add
jmp
add
ds
call
std
decb
add
add
aas
add
cmp
cld
ds
add
add
ds
add
add
add
add
add
incl
pop
add
add
push
add
jmp
add
fsin
add
ds
std
ds
cld
inc
push
std
incb
pushl
cld
ds
add
aas
cld
call
add
ds
jmp
add
jns
out
jno
out
imul
add
out
push
hlt
out
ds
jecxz
inc
pop
movl
ds
movl
ds
movl
fildl
add
fildl
test
out
dec
add
cmpl
out
cs
pop
add
pop
pop
add
orl
add
add
movl
ds
cmpl
add
mov
dec
orb
dec
add
cmp
jmp
mov
pop
add
mov
dec
orb
pop
add
cmp
dec
add
cmp
dec
add
mov
dec
sub
dec
sub
pop
add
cmp
pop
orb
add
add
mov
dec
add
cmp
jmp
cmp
pop
add
mov
dec
add
cmp
pop
adc
xchg
jg
pop
add
fimuls
add
add
push
fdivrp
jg
xlat
jmp
add
aaa
xlat
jo
das
pop
add
daa
pop
add
pop
pop
pop
pop
add
daa
pop
add
daa
pop
add
pop
pop
add
pop
pop
add
out
pop
add
out
pop
add
fistps
or
pop
add
iret
push
add
iret
pop
add
xlat
pop
add
fists
add
pop
add
ds
add
add
add
add
add
add
add
cld
add
ss
add
ds
add
inc
add
add
add
add
cld
add
add
inc
in
add
ds
add
ss
add
add
add
add
inc
add
add
cli
add
ds
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
inc
add
add
add
add
cli
add
inc
pop
out
add
cmp
out
ds
add
add
ds
out
add
cmp
filds
ds
add
out
add
ds
out
cmp
out
add
ds
filds
cmp
out
cmp
call
and
pop
push
add
pop
and
add
pop
call
add
pop
out
mov
pop
push
add
pop
out
add
ds
add
out
out
pop
add
pop
pop
add
cmp
push
cmp
pop
add
pop
add
out
pop
add
pop
add
call
and
jmp
addr16
pop
add
out
call
cmp
jmp
add
cmp
push
cmp
out
pop
add
out
addb
cmp
add
add
daa
pop
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xlat
cmp
add
addb
cmp
add
addb
cmp
add
add
push
add
pop
push
or
pop
pop
or
daa
push
add
pop
or
pop
push
add
pop
pop
add
pop
or
out
or
pop
or
ds
add
add
jle
add
jl
add
jl
add
ds
add
add
add
add
incb
add
incb
add
ds
add
add
or
add
or
add
add
add
add
cld
add
add
add
add
add
add
add
or
add
cmp
add
jl
add
add
or
add
add
add
add
add
add
jle
add
cmp
add
jl
add
jle
out
ds
out
ds
out
inc
cltd
out
inc
pop
out
ss
out
ds
out
ds
out
inc
cltd
out
add
ss
out
ss
out
ds
out
inc
cltd
out
ss
out
ds
out
inc
fwait
out
ds
out
ss
out
ds
out
ds
out
inc
pop
out
ds
out
ss
out
inc
pop
out
ds
testl
jle
out
sbb
test
cmp
add
xlat
add
pop
add
std
sub
jmp
std
jmp
stc
add
std
sub
jmp
cmp
fwait
add
std
jmp
jmp
jge
cld
jmp
cmp
jmp
jmp
jge
add
jge
sbb
cmp
fwait
and
cmp
pop
add
jge
add
jge
and
jge
cld
jmp
std
sub
jmp
std
ljmp
add
cmp
sub
add
push
cmp
add
pop
std
call
pop
add
xlat
pop
inc
add
push
std
pop
out
add
xlat
push
std
jmp
pop
add
out
cmp
add
push
cmp
and
pop
inc
and
add
xchg
push
std
jmp
inc
and
push
std
jmp
inc
add
std
pop
add
addr16
add
push
push
cmp
and
pop
inc
add
push
std
pop
pop
pop
and
adc
idiv
cmp
hlt
clc
incl
idiv
cmp
hlt
clc
pop
inc
idiv
pop
cmp
add
ds
add
testb
inc
testb
ds
add
inc
testb
cmp
clc
ljmp
idiv
pop
testb
ds
clc
incl
add
hlt
add
inc
hlt
clc
pop
cmp
add
ds
add
cmp
clc
lcall
clc
call
clc
pop
inc
hlt
clc
pop
testb
repnz
cmp
clc
pop
ds
out
ds
out
cmp
add
jmp
sti
add
add
pop
jmp
add
pop
jmp
add
pop
out
rcrl
push
pop
out
add
and
sti
mov
pop
out
dec
pop
jmp
add
pop
jmp
add
out
and
add
pop
jmp
sti
dec
pop
out
ds
jmp
add
pop
out
dec
call
out
cmp
xor
cmp
test
or
pop
add
cmp
add
out
test
cmp
pop
add
cmp
pop
adc
int
add
int
adc
mov
add
lods
out
sub
add
cmp
pop
adc
out
sub
pop
add
inc
pop
add
cmp
jmp
insl
out
jmp
cmp
pop
adc
xchg
pop
add
daa
jmp
sldt
out
add
pop
pop
add
xlat
ljmp
daa
jmp
adc
jmp
call
pop
add
cmpsl
pop
add
out
cld
call
ljmp
daa
pop
add
xlat
pop
add
pop
pop
add
cmpsl
pop
add
cmpsl
pop
add
push
out
cld
seta
add
add
addr16
add
push
pop
add
xchg
pop
add
addr16
add
push
pop
add
xchg
ljmp
ds
lock
mov
incl
lock
cmp
add
lock
sbb
add
ds
add
ds
jp
add
cmp
popl
add
hlt
add
ds
jge
fstps
call
ret
cmp
repz
ds
add
ds
pushl
imul
add
hlt
add
ds
decl
lret
cmp
repz
ds
add
bound
popa
pop
filds
push
in
add
pop
out
ds
cmp
data16
xor
pop
out
ds
mov
orb
out
addb
out
ds
out
ds
icebp
jnp
in
and
sub
add
ftst
out
ds
out
ds
std
jp
in
cmpl
pop
out
ds
out
ds
out
ds
xchg
and
out
xorb
fdivrl
in
pop
mov
in
mov
mov
jecxz
mov
mov
jecxz
pop
mov
add
jecxz
add
jecxz
repz
cld
shrl
cld
mov
jecxz
cmp
jecxz
dec
mov
cld
push
mov
cld
imul
cld
pop
jecxz
jns
jecxz
outsl
mov
cld
mov
jecxz
mov
jecxz
test
jecxz
add
cld
call
sar
call
sar
jns
cld
incl
add
sar
dec
sar
inc
aam
decl
cld
incl
aam
call
aad
call
aad
stc
aam
push
aam
pushl
aam
call
pop
add
pop
aad
inc
aam
ljmp
aam
decl
aam
jmp
aad
call
cld
incl
xor
incl
add
cmp
ljmp
mov
popa
orb
push
enter
xor
add
xchg
mov
xor
add
sub
lcall
hlt
add
or
incl
rorb
icebp
aad
jmp
repz
jb,pt
call
gs
leave
aad
inc
pop
mov
add
mov
mov
ljmp
leave
mov
cltd
pop
lds
loope
add
pop
in
jns
loopne
jno
out
ds
xchg
pop
loope
xchg
out
test
cli
test
push
test
loope
test
loope
test
loope
test
loope
test
loope
test
loope
test
loope
test
loope
test
loopne
test
add
loopne
test
loopne
test
loopne
test
loopne
test
loopne
xchg
loopne
xchg
loopne
xchg
loopne
mov
loopne
aaa
loopne
imul
cld
pop
mov
loopne
mov
loopne
mov
loopne
test
loopne
icebp
mov
loopne
add
rcr
mov
movl
add
imul
cld
gs
add
rcr
test
iret
mov
cld
lods
xor
rcr
jmp
rcr
add
frndint
pushl
frndint
call
fdivr
pushl
fdivr
call
fdivr
jmp
add
pop
fdivr
jnp
cld
incl
add
fdivr
cmp
cld
jnp
cld
jnp
cld
ljmp
cld
lcall
cld
pushl
cld
jmp
pop
add
inc
cld
call
pop
add
sub
cld
push
sar
jmp
pop
add
mov
cld
call
sar
jg
cld
pushl
cld
ds
mov
mov
outsb
mov
test
rorb
add
add
jle
decl
mov
mov
jno
mov
imul
add
testb
dec
hlt
add
ds
add
lods
pop
movsb
jae
scas
stos
imul
cmpsl
pop
mov
hlt
add
ds
insb
iret
enter
lods
bound
pop
call
mov
js
lods
bound
lar
dec
pop
pop
mov
js
ret
rcr
add
outsl
mov
push
jb
add
pop
cs
jns
mov
insb
adc
mov
lods
fidivrs
or
outsb
pop
sub
in
mov
fisubrl
mov
push
ret
stc
add
jp
ret
fldl
xorl
cwtl
outsl
mov
add
lea
stos
lahf
data16
cmpsb
outsb
lcall
pop
jp
cmpsl
jl
add
push
jg
jns
pop
out
push
jno
inc
aas
jmp
out
jns
push
in
add
cmp
push
arpl
ja
jmp
popf
insb
push
adc
jne
add
or
mov
add
imul
or
shl
add
insl
enter
lret
iret
jl
mov
mov
in
imul
cwtl
push
add
push
test
cwtl
mov
push
lret
push
mov
xor
adc
popa
popa
sbb
pop
je
movsl
jne
xchg
push
add
push
imul
push
inc
add
pop
adc
jb
mov
imul
outsl
add
push
push
imul
movsl
push
outsl
xchg
stos
push
je
pop
sub
fdivr
jo
notb
jno
aad
insb
jb
pop
adc
mov
jno
mov
insl
inc
les
push
ds
mov
addr16
mov
or
cmpsb
pop
dec
xor
add
cmp
mov
add
sbb
mov
lcall
pop
stos
dec
or
movsl
bound
xchg
mov
fstpl
jo
push
out
add
fiaddl
mov
cmp
add
pusha
fwait
adc
ds
inc
cmpsl
mov
lods
inc
xchg
pop
xchg
mov
addb
inc
jle
add
pop
pop
mov
enter
cmpsl
pop
and
ret
rcr
add
inc
pop
rcrb
sub
pusha
pop
adc
add
enter
test
and
mov
repnz
cs
in
sub
adc
roll
add
pop
cs
int
add
std
inc
fstps
test
out
jnp
scas
sahf
add
lods
sub
mov
filds
mov
dec
jb
cmpsl
aas
aas
jmp
enter
stos
dec
arpl
mov
je
xchg
push
aas
jmp
in
pop
push
leave
sub
faddl
inc
jae
popa
cmp
fldl
sbb
cld
xor
dec
addr16
popf
dec
arpl
test
data16
add
cltd
add
push
arpl
jp
jb
fadds
lods
in
arpl
flds
add
pushf
cld
stc
pop
insb
jae
or
cld
decl
pop
dec
jne
pop
inc
into
pop
bound
gs
fs
push
pop
mov
mov
addr16
push
pop
mov
je
bound
pop
xor
push
cli
jo
or
jno
add
add
data16
add
cld
inc
pop
dec
inc
sbb
insb
push
push
or
cld
fcompl
js
or
dec
cld
popa
jae
pop
lods
add
sti
jo
ds
test
cwtl
mov
mov
mov
adc
jno
fbld
pop
les
mov
add
push
dec
push
mov
add
add
mov
popa
pop
sub
idivb
sbb
test
or
cmpsl
push
or
add
andl
data16
add
andl
jno
pop
add
ds
stos
cmpsb
jle
les
dec
enter
out
cvtdq2ps
lods
lea
add
cwtl
push
mov
imul
das
test
add
ja
pusha
inc
jae
adc
mov
dec
mov
test
aad
add
dec
lds
inc
cmp
mov
in
aas
dec
rorl
cmp
fcompl
pop
ret
jno
pop
add
push
rcl
cli
sahf
push
inc
add
pop
add
test
inc
dec
int3
add
hlt
xchg
add
call
cmp
aad
add
decb
enter
mov
arpl
pushf
inc
jae
cwtl
dec
aas
jmp
mov
arpl
sub
filds
inc
cmp
dec
pop
roll
int3
dec
arpl
sub
int3
aam
cmpsb
cmp
arpl
mov
add
xchg
add
cmp
arpl
pop
movsl
outsl
gs
sahf
pop
insl
cmp
jb
pop
add
xor
push
add
jmp
repz
gs
jno
push
outsl
push
adc
push
jne
sahf
std
jo
vpunpcklwd
pop
arpl
ja
sahf
std
jo
adc
or
or
push
jb
sahf
cld
lcall
push
add
jno
sti
cli
push
je
lods
jo
cs
cld
ds
ljmp
ds
add
iret
aam
not
mov
ds
mov
jae
add
ljmp
mov
xchg
add
aas
cmc
mov
insl
or
jno
loopne
pop
outsb
fcmovnu
arpl
add
add
ds
bound
mov
sub
fldenv
jae
cmp
inc
ds
mov
popa
sbb
mov
es
or
fidivrl
and
aaa
adc
add
aaa
add
js
fldcw
sbbl
lods
dec
mov
add
add
rolb
add
cs
lea
mov
dec
out
imul
push
mov
loope
aas
jnp
test
mov
pop
dec
xchg
mov
cmp
add
pop
xor
adc
dec
inc
mov
dec
push
stos
sbb
inc
add
dec
add
outsb
aaa
pop
cmp
add
cmp
pop
add
cmp
add
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmp
pop
add
cmpsl
pop
xchg
pop
add
xchg
pop
add
addr16
add
addr16
add
push
pop
add
push
pop
add
addr16
add
addr16
add
push
pop
add
push
pop
add
daa
pop
add
daa
pop
add
pop
pop
add
pop
pop
add
daa
pop
add
daa
pop
add
pop
pop
add
pop
pop
add
out
add
out
add
xlat
pop
add
mov
jmp
lds
dec
pushl
add
jmp
adc
xor
sbb
outsb
xor
outsl
mov
loop
cld
lds
mov
cmp
or
aas
add
das
pop
mov
ror
in
subl
inc
inc
loop
loopne
sbb
add
in
in
sbb
mov
add
in
clc
lds
clc
mov
inc
ss
call
add
jnp
push
inc
in
lock
clc
mov
add
in
cld
stc
sbb
add
pop
add
aaa
loop
hlt
mov
mov
loop
hlt
and
jae
loop
lock
inc
ss
fcoml
add
push
pop
add
mov
dec
sbb
push
pop
mov
out
jecxz
in
lds
in
mov
add
mov
pop
inc
or
fidivrl
jmp
mov
mov
xor
int3
or
lret
int3
cli
sahf
lret
int3
mov
jmp
ljmp
mov
sub
sub
push
mov
push
lds
call
ja
pop
mov
push
inc
add
pop
inc
add
add
clc
ja
pop
xchg
xchg
inc
cld
ds
add
push
arpl
add
es
xorl
inc
cld
mov
orl
call
ja
pop
mov
loop
ljmp
in
cwtl
lret
int3
or
lret
int3
cli
lahf
lret
int3
imul
mov
jo
aas
xor
add
lahf
lret
int3
sbbb
int3
jmp
jmp
add
mov
arpl
push
je
ds
lahf
lret
int3
sbbb
int3
jmp
jmp
sub
add
add
dec
shll
loop
clc
cmpsb
ret
add
loopne
clc
outsb
ret
mov
les
inc
cld
mov
adc
and
lds
cld
mov
sub
jmp
adcl
inc
cld
mov
iret
mov
dec
adc
pop
push
cld
dec
add
add
pop
mov
and
pop
add
rolb
outsb
xchg
mov
ror
cwtl
lret
int3
add
lret
int3
mov
jmp
ss
lcall
inc
ds
int3
or
lret
int3
cli
xchg
lret
int3
mov
jmp
ljmp
add
pop
test
or
push
cmp
jmp
push
stos
inc
or
lret
mov
add
mov
mov
movl
cmp
iret
jo
lds
cld
mov
lret
or
add
xor
cli
xor
stc
add
dec
lock
adc
mov
pop
xchg
inc
or
push
clc
lds
add
mov
push
or
insb
mov
roll
or
xrelease
inc
or
push
out
mov
cld
mov
jmp
stos
jle
inc
inc
aam
in
pop
in
add
jmp
add
aam
call
mov
ds
lock
add
pop
mov
pop
push
lock
loopne,pn
jnp
cmpb
or
add
loopne
jae
add
sub
aas
add
push
cld
mov
dec
pop
mov
pop
jns
dec
or
add
iret
call
mov
push
add
rolb
lds
loopne
repz
add
mov
in
movl
pop
mov
fdivl
ds
or
cmp
dec
add
ds
mov
fdivrl
add
aam
sbbl
dec
sbb
imul
add
cld
incl
sub
mov
add
cld
addl
xchg
mov
mov
mov
lds
add
sbb
cli
pushl
sbb
mov
rorl
mov
into
add
rolb
mov
in
cmpl
dec
bound
add
rclb
addr16
std
call
loop
jge
lret
int3
jmp
jmp
sub
cmp
add
add
push
pop
js
ds
clc
cmpsb
movl
clc
outsb
mov
std
add
add
aam
cld
lds
adc
xor
mov
or
xor
mov
sub
int3
cli
xchg
lret
int3
imul
mov
js
push
inc
ds
add
lcall
jp
lret
int3
jmp
jmp
push
lahf
push
negb
add
add
mov
xor
lds
or
insb
aam
hlt
mov
hlt
mov
rclb
mov
cld
mov
ret
lcall
xchg
pop
xor
adc
rorl
xor
rolb
mov
or
xchg
push
roll
mov
sbb
movsl
bound
mov
ret
mov
addl
add
adc
shlb
mov
jecxz
lret
int3
mov
lret
int3
jp
lret
int3
or
jmp
push
lds
pop
xor
xor
pop
lahf
cmp
sbb
push
es
ljmp
fld
or
rorb
outsl
rclb
sbb
sbb
mov
push
les
popf
outsl
js
fdivrs
adc
sbb
add
mov
add
add
pop
add
push
rorb
add
add
sub
push
mov
adc
lcall
ret
add
in
mov
incb
add
add
pop
sub
cmp
add
jo,pt
mov
js
rclb
inc
sbb
push
fildll
inc
sub
popf
and
cld
addl
mov
add
cmp
mov
push
out
loope
lret
int3
mov
jmp
adcl
inc
dec
add
add
dec
es
xchg
lret
int3
jp
lret
int3
or
jmp
stos
jbe
inc
xchg
pop
nop
add
rolb
mov
fmuls
inc
pop
dec
cmp
sub
or
push
outsl
mov
aad
or
rolb
add
outsb
add
or
sbb
push
push
adc
jmp
ffreep
or
sbb
push
xor
xor
pop
push
push
ret
sbb
mov
sub
push
fisubrl
cld
cmp
lds
pop
add
ds
mov
movl
bswap
sub
cmp
jo
mov
call
add
add
data16
dec
call
ljmp
adc
adc
mov
jle
inc
cs
push
mov
imull
push
lods
inc
bound
mov
dec
or
daa
call
inc
dec
sub
push
repz
add
dec
fnstsw
jmp
aad
in
mov
cld
rol
les
and
add
pop
lahf
cmp
sbb
push
xchg
aad
lcall
pop
faddl
ds
jae
lds
js
pop
dec
call
lahf
cmpb
dec
sbb
xor
xor
pop
mov
sub
inc
push
aad
xor
rclb
addr16
ds
push
xor
xor
pop
mov
cs
add
lock
mov
add
add
xor
add
lds
cld
push
push
pop
std
push
into
cld
adc
pop
mov
rorb
mov
fmuls
pop
rolb
lds
cld
push
mov
in
fbld
inc
ds
xchg
jb
cld
addl
mov
ds
add
lret
push
pop
aam
fdivrs
pop
xchg
aam
loopne
gs
add
jg
sub
rclb
inc
xchg
sbb
mov
outsb
aam
adc
sbb
push
lds
cli
jmp
fcmovnb
or
adc
js
ds
dec
sub
pop
cmpl
dec
addr16
ds
add
dec
xor
pop
dec
call
mov
addr16
ds
push
mov
jmp
inc
ds
cmp
pop
push
call
mov
cmpsl
mov
outsl
rclb
fbld
inc
ds
inc
sub
sbb
push
outsb
cld
jmp
fcmovb
or
push
jg
scas
dec
pushl
pop
mov
sub
adc
mov
out
mov
cmpsb
mov
ds
mov
sbb
lret
int3
jp
lret
int3
or
jmp
add
inc
push
and
int3
jp
lret
int3
jmp
jmp
nop
mov
mov
sub
jg
mov
jno
pop
pop
std
mov
int3
imul
push
popw
add
cld
cmp
pop
push
call
mov
mov
ss
add
pop
push
decl
mov
lret
int3
or
jmp
stos
jbe
inc
xchg
pop
add
ds
inc
faddl
pop
add
adcl
add
add
lds
pop
add
rorb
mov
xor
pop
call
mov
arpl
movl
add
ds
movl
add
cmpl
pop
add
fdivrs
xor
add
imul
push
inc
aas
add
pop
add
mov
pop
add
xor
decl
js
ds
das
js
pop
mov
push
call
inc
rolb
cmp
mov
dec
push
rorb
sbb
sbb
push
push
data16
pop
mov
movl
add
js
ds
add
xor
jle
mov
insb
mov
testl
clc
inc
js
pop
std
adc
popf
and
ds
dec
js
pop
push
call
mov
lret
mov
sub
aad
mov
mov
mov
lret
ds
xor
pop
push
call
mov
add
lret
xchg
iret
push
cld
and
iret
inc
loopne
iret
dec
fsubr
mov
sti
inc
mov
aas
js
pop
mov
mov
dec
js
pop
add
or
or
cmp
xchg
idiv
icebp
faddp
or
adc
add
in
in
and
add
out
loopne
push
xchg
add
mov
ds
jmp
cmpl
xchg
inc
clc
xor
out
xor
sbb
add
mov
adc
xor
add
out
clc
mov
pop
mov
cmp
cld
xor
pop
add
in
jmp
jecxz
and
sbb
mov
jnp
inc
outsb
mov
add
push
js
outsb
mov
xchg
ds
dec
test
xor
add
daa
clc
mov
mov
pop
mov
test
mov
cmpl
cld
daa
js
pop
push
call
mov
outsl
js
ds
aad
mov
add
jle
sub
ds
add
jbe
js
pop
add
inc
cli
adc
pop
xchg
call
mov
js
ds
loop
std
cmpsl
lret
int3
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
add
ds
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
