add
add
addr16
aad
arpl
data16
mov
add
jecxz
popa
fldt
jb
jo
inc
lahf
inc
add
arpl
fs
imul
jo
inc
jg
add
push
data16
dec
dec
popa
outsb
inc
outsb
gs
cmpsl
add
add
popa
cmp
imul
je
inc
arpl
add
add
gs
add
insb
outsl
adc
imul
jno
inc
cmpsl
add
add
gs
shlb
insb
ret
outsb
lret
outsb
gs
cmpsl
add
add
add
mov
inc
add
inc
add
inc
add
inc
add
add
push
imul
data16
je
add
jae
popa
imul
inc
jo
inc
add
add
dec
gs
inc
outsb
xor
andl
add
jo
arpl
outsl
add
cli
gs
jae
ja
add
jo
arpl
jbe
fs
outsb
add
shlb
arpl
jns
add
imul
shrl
arpl
imul
xchg
outsb
outsl
arpl
insb
insl
popa
xchg
push
imul
js
inc
mov
add
jb
jb
insb
push
push
imul
add
pop
gs
jo
outsb
insb
outsl
inc
add
add
outsb
dec
outsb
xor
jns
insb
insb
cmpsl
add
add
pop
je
adc
jbe
gs
jae
add
sahf
pop
nop
cmpsl
in
add
cmpsl
out
add
xor
add
sub
add
jmp
add
jmp
add
jmp
add
jmp
add
loope
mov
repnz
imul
and
push
xor
lret
inc
xlat
and
or
adc
push
mov
or
cmpsl
add
add
cmpsl
add
add
add
add
add
add
add
add
xor
stc
cmpsl
add
dec
cmpsl
add
add
add
adc
add
add
jmp
add
cmpsl
add
add
add
add
add
add
cmpsb
add
add
xchg
add
adc
add
adc
add
fldenv
add
movsb
add
fst
add
and
add
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
add
add
movsb
add
jmp
movsb
add
jno
add
insl
movsb
add
jmp
movsb
add
add
add
add
add
mov
add
push
addr16
add
add
adc
add
add
ds
add
add
add
dec
add
add
jo
popa
jp
add
add
add
add
adc
add
cld
decl
add
add
add
add
add
add
add
add
push
popa
je
incl
inc
add
into
and
add
cmp
add
jmp
add
cmpsl
jmp
add
in
add
cmpsl
jmp
add
jmp
add
adc
add
add
jne
addl
fisubl
jmp
mov
inc
sub
addr16
jb
test
adcl
push
or
divb
pushf
push
or
test
call
dec
mov
add
push
ljmp
push
mov
add
mov
imul
sti
jno,pt
lahf
cmc
fwait
movd
fldl
rorb
xchg
jge
inc
jmp
mull
add
add
mov
cmpsl
add
scas
mov
mov
cli
cmp
cmc
pop
clc
and
notb
mov
fidivrs
mov
ret
jmp
imul
ds
add
imul
add
push
or
mov
mov
jne
cltd
outsb
or
push
mov
xchg
hlt
push
xlat
or
jmp
idiv
lcall
xchg
movsl
dec
or
je
push
ret
ret
mov
leave
stos
fwait
add
jo
adc
stos
cli
jb
out
cmp
repz
add
jmp
cmpsl
leave
ret
xchg
das
adc
call
ud0
out
jne
dec
push
or
jle
adc
sahf
fs
mov
cmc
hlt
sub
cmc
add
rol
or
adc
push
push
mov
add
test
arpl
or
add
sub
pop
xchg
or
add
or
pop
inc
rorl
fs
ret
cli
add
push
decl
ret
cli
push
call
push
or
jne
jle
dec
in
shrb
or
push
cld
sub
mov
mov
sub
jmp
les
add
cmpsl
xchg
lret
fisttpl
mov
clc
subb
push
add
mov
ret
pop
xchg
push
xchg
add
xchg
add
fildl
cmpb
or
es
add
daa
lock
lcall
add
pop
in
push
jg
adc
cmpsl
mov
or
sbb
jmp
add
std
test
test
dec
sahf
add
sbb
call
mov
icebp
aam
add
test
jmp
ja
repz
push
cmp
jmp
add
icebp
add
jge
pop
sub
add
call
pop
cmpsl
icebp
je
dec
sahf
hlt
repnz
jb
mov
ljmp
jge
js
fisubrl
add
add
jo
subl
add
sbb
mov
decb
jge
add
jmp
mov
jne
int3
std
pop
xchg
jl
loope
adc
jne
xchg
jbe
fimull
leave
sub
bound
add
in
clc
fwait
stos
ret
incl
insb
popf
incl
push
mov
mov
addb
in
in
les
jmp
nop
push
add
call
decl
inc
leave
adc
fwait
insl
in
cmpl
pushl
dec
add
mov
push
mov
repnz
into
ja
mov
or
rcl
or
pop
outsb
in
or
pushl
dec
add
cmp
out
shl
mov
out
cmpb
ja
psubw
xchg
jle
ret
pop
mov
int
cld
mov
dec
call
js
call
adc
and
add
test
ret
add
or
ss
popf
fnstenv
ficomps
cmp
fneni(8087
mov
cmc
cld
mov
enter
add
mov
pop
add
hlt
fistl
subl
push
sbb
test
imul
loop
push
pop
call
repz
addr16
xorl
adc
cmpl
add
ja
lods
cmpsb
add
add
stos
add
and
loopne
cmp
cld
pop
jmp
pop
cmpsl
pop
ljmp
mov
xlat
jmp
inc
sbb
jns
ficompl
out
nop
in
es
popl
jmp
sti
sub
push
roll
push
out
pop
push
push
jns
in
mov
add
add
jl
jg
jno
in
cmp
ja
shll
call
or
scas
cmp
fyl2xp1
xchg
movsb
add
add
pop
mov
mov
pop
out
mov
ljmp
movsb
in
jne
int3
ret
mov
adc
incb
faddl
jbe
inc
fwait
test
ret
push
mov
out
ljmp
inc
add
jmp
imul
push
fnsave
add
je
incl
imul
roll
imul
or
fnsave
out
cld
cmp
mov
mov
mov
dec
pushl
sub
sub
leave
ret
push
mov
cmpb
jae
orl
jne
stc
jae
pushl
out
ljmp
push
add
fidivs
add
cmpl
and
pushl
jbe
xor
out
fucomi
out
xchg
pushl
filds
popf
mov
xlat
add
or
jne
pushf
jbe
iret
inc
in
fdivs
jns
and
adc
cmp
in
jne
insb
jbe
mov
jg
sbb
in
jne
stos
dec
jbe
jg
in
decl
xchg
js
sti
out
xor
call
fldl
roll
jmp
push
in
dec
pop
jmp
pop
cmp
pop
movsl
ja
fsubr
je
or
out
sbb
js
adc
jmp
cli
shlb
ljmp
pop
jge
xchg
out
jno
in
fsubr
rolb
mov
inc
dec
add
sti
enter
test
hlt
out
outsl
icebp
fstpt
jmp
outsl
loope
mov
dec
jmp
aas
inc
mov
sbb
add
out
movsb
push
add
jmp
sti
jmp
aam
movsb
jg
sbbl
jnp
icebp
or
aad
jmp
add
outsb
clc
cmp
call
jo
out
cmp
lcall
mov
sub
clc
xchg
aam
cld
mov
call
push
bound
les
ds
jmp
out
push
dec
idiv
out
rcl
add
or
js
mov
or
adc
call
inc
clc
xorl
add
bound
add
add
jne
xchg
mov
add
jmp
jne
ds
add
psubsw
incl
lods
not
xchg
hlt
lcall
call
ljmp
sti
call
push
ror
add
jmp
push
ror
add
push
inc
cld
mov
jnp
add
mov
lea
dec
pushl
lret
sar
cmpsl
push
jmp
je
xchg
lock
pop
das
fiaddl
add
adc
sub
movb
jl
and
in
loop
push
mov
flds
test
jo
call
enter
shr
jne
rcll
cmpsl
frndint
mov
fwait
mov
clc
ja
pop
or
nop
call
jne
xorl
add
lahf
mov
ror
loop
gs
nop
jo
fisttpl
ret
fidivrs
add
add
icebp
jmp
call
shl
adc
or
insb
xchg
repnz
outsb
cmp
sub
cmpsl
add
stos
call
fdivrl
add
add
inc
out
rcll
jecxz
add
xchg
jmp
fdivrl
in
lock
xor
xchg
lea
push
add
ljmp
stos
add
aam
fstl
loope
inc
sub
dec
cld
ss
stc
xlat
cs
out
lcall
in
xor
clc
push
mov
jl
fucom
std
inc
in
adc
or
add
outsl
call
jmp
shr
inc
insl
rcrl
std
lcall
pop
subl
jae
leave
outsb
or
popf
ret
mov
int
inc
mov
addb
add
into
repnz
leave
ret
push
mov
xor
mov
mov
loope
push
mov
lock
pop
add
fiadds
repz
cmp
ret
push
mov
in
sti
mov
loope
repz
pop
leave
int3
jmp
push
xchg
lret
xchg
push
or
test
adc
dec
push
or
add
cmpsb
cmc
test
add
jmp
push
push
lret
sub
add
cmpsl
ftst
jne
xchg
xchg
ljmp
adc
sub
add
add
inc
ret
pusha
addr16
pushf
js
mov
adc
cmp
sahf
in
ljmp
mov
dec
sub
sarb
jno
cmp
adc
cwtl
outsb
aad
and
leave
in
add
movsl
add
pop
dec
push
call
fdivrs
ficompl
add
add
add
es
ljmp
xchg
fildll
out
lods
loop
fisubrs
mov
mov
mov
lods
out
notl
jl
loopne
lods
loop
jno
lahf
adc
pop
lea
repnz
dec
inc
std
sub
adc
fwait
adc
ds
in
jns
fbld
sub
add
insb
lret
stos
adc
cmpsl
aaa
lock
mov
das
int3
and
ja
add
ljmp
mov
xchg
jmp
stos
ljmp
iret
loope
jge
push
jmp
add
push
hlt
push
or
inc
clc
dec
into
mov
push
mov
ss
loope
sub
movsb
loope
in
dec
adc
jmp
add
test
inc
loope
cltd
or
testb
clc
je
lock
fiadds
loope
into
dec
or
add
push
push
lcall
in
or
jecxz
hlt
adc
clc
lcall
in
and
jne
mov
jne
testb
pop
mov
add
add
xchg
in
cmpl
or
sbb
movl
jne
cmpl
jne
aam
add
ds
jae
or
add
add
add
xchg
or
xchg
inc
cld
push
cmpsl
sbb
lock
jb
jmp
lock
jno
push
xor
cmpsl
push
inc
hlt
push
repz
xor
loopne
mov
popf
iret
add
test
jmp
xlat
add
lock
ljmp
xlat
inc
inc
std
push
cmpsb
fistl
ret
add
xor
dec
jle
call
lods
sub
fadds
sub
sub
sub
inc
mov
ret
je
lock
clc
sbb
jmp
push
add
mov
or
cld
add
cli
sub
push
aad
push
repnz
push
mov
adc
iret
and
lds
test
or
or
push
sub
insl
cmpsl
fstp
divl
stc
loopne
push
inc
push
scas
ljmp
mov
add
sbb
cmp
decb
jmp
push
mov
lods
add
repnz
add
add
testl
mov
dec
or
xor
adc
jmp
sbb
ljmp
add
jb
xchg
push
xor
pop
cmp
push
bound
add
imul
push
lldt
mov
sub
jns
or
mov
add
sbb
ljmp
in
call
add
adc
aas
lret
push
add
xchg
or
add
jne
pop
leave
cmp
add
in
push
subl
jne
ret
inc
or
sub
cmp
add
sub
mov
int3
add
or
loope
add
add
ss
push
call
cmc
xchg
pushl
adc
jmp
and
call
cltd
cmp
call
mov
pop
leave
mov
add
pusha
out
andl
push
unpckhps
call
arpl
and
mov
jmpw
movsl
mov
jp
push
jge
fdivl
das
add
mov
sub
outsb
les
lods
push
cld
add
std
fdivr
mov
jmp
sub
jo
mov
push
pop
decl
add
sub
sub
dec
adc
add
lods
sub
push
scas
fucomip
lahf
push
out
mov
jb
xor
and
mov
das
jb
scas
pop
sub
xorb
cmpsl
add
cmp
out
mov
inc
add
incl
dec
add
cmpsl
add
fcompl
shl
add
mov
es
in
leave
jmp
add
add
orl
push
daa
sbb
push
scas
lcall
mov
ljmp
push
dec
add
std
repnz
call
stos
nop
rclb
test
add
sub
xchg
std
jg
push
jmp
or
out
int
jmp
mov
fcos
pusha
data16
pop
sbb
dec
cld
mov
fadds
add
in
or
push
call
ret
add
leave
stos
cmpsl
add
jg
mov
insb
adc
xchg
jle
pop
insb
add
movsb
insb
add
add
add
into
mov
lret
add
xchg
inc
cli
adc
in
insb
lret
ds
add
add
addr16
dec
in
pop
lret
incb
sarb
inc
or
push
data16
adc
dec
add
push
or
fwait
and
jae
in
repnz
pushl
push
call
add
adc
add
cmpl
add
call
mov
or
sti
ret
pop
leave
mov
fs
sub
or
push
popf
or
sahf
and
add
jmp
or
add
mov
add
sub
pushl
out
jmp
ljmp
imul
cmpsl
jmp
test
jmpw
fmulp
fld
add
jmp
pop
xchg
fdivs
mov
mov
add
cmpsl
jmp
jmp
cmpsb
ja
fldenvs
jge
jmp
cmp
cmp
adc
push
add
add
or
pop
fs
sub
fcomps
add
add
cmpsl
mov
neg
mov
jmp
insl
cmpsl
insb
jmp
fsub
xor
out
fdivs
je
mov
shll
add
or
push
fs
cmpsl
add
imul
add
mov
inc
cmpsl
ljmp
fs
test
add
jb
mov
mov
jg
or
lahf
jle
jmp
add
ljmp
and
push
xchg
push
sub
decl
push
adc
imulb
add
and
jbe
jmp
lret
in
fwait
aad
mov
ret
scas
cs
fcom
push
adc
sub
jns
loopne
jo
push
xorb
sti
incl
stc
or
je
cmpl
push
lret
cmp
jmp
movb
mov
push
mov
out
mov
lcall
jae
out
test
ljmp
stc
stos
call
jmp
mov
push
out
enter
push
lea
out
decl
adc
mov
incl
out
hlt
decl
jmp
pushl
cwtl
sbb
nop
jge
test
adc
push
cld
jg
leave
add
cmp
lcall
xor
push
cmp
out
inc
or
lea
push
out
sub
aad
int3
add
aam
lock
aad
pop
aam
incl
push
addr16
out
call
mov
int
rorb
aam
lret
mov
int3
add
divl
jecxz
aad
shlb
and
sahf
jle
mov
jbe
cmpsl
test
rcrl
pusha
lea
pop
roll
pop
add
jle
pop
mov
cli
in
aad
ljmp
add
jecxz
aad
lea
in
roll
push
sbb
push
mov
add
add
filds
jmp
mov
ljmp
xchg
jl
inc
cmpsl
iret
test
cli
fldl
rcl
call
cmpsb
sbb
out
sahf
jnp
pop
xchg
call
incl
pop
xor
cmp
cli
out
pop
sar
jb
adc
xor
pop
cmpsb
shll
and
jo
mov
test
mov
mov
arpl
jmp
jns
jl
shll
fistl
andl
sub
fldl
cmpsb
outsb
into
add
movsb
add
add
mov
inc
lret
mov
jmp
adc
mov
push
jne
and
cld
call
add
enter
push
cmp
jmp
or
aas
out
idiv
loope
jne
mov
add
ds
mov
pop
or
mov
or
leave
mov
pushl
lods
and
push
add
xorps
and
rorb
add
xchg
push
pop
mov
enter
mov
mov
fidivrl
call
pushf
cltd
push
add
movsb
cmpsl
or
rolb
xchg
movsb
mov
test
jle
stc
cwtl
mov
mov
pop
cld
sub
incl
test
shl
sub
icebp
push
or
outsl
iret
lcall
adc
sar
jp
shlb
fcoms
jmp
add
fidivrl
fmul
mov
pop
jnp
sub
mov
add
sti
test
xchg
jnp
pop
outsl
sbb
add
fidivl
cmp
fs
push
shl
cli
sbbb
ret
add
mov
sar
js
outsl
jb
push
add
into
shll
jb
mov
fwait
jmp
das
add
sti
sub
das
mov
add
or
push
add
add
movsb
das
pop
aas
sbb
or
cltd
jnp
bound
or
mov
add
jmp
ret
mov
mulb
pop
sbb
icebp
add
add
add
add
pushf
add
jecxz
leave
sub
ss
mov
movsb
push
add
cmc
loop
inc
cli
ljmp
stos
lret
mov
ljmp
pop
addb
iret
je
cmc
mov
or
shlb
lock
ret
pop
cwtl
sbb
push
push
aaa
sti
dec
push
xor
pop
icebp
ficoml
add
push
movzbl
push
cmp
push
sub
nop
or
repnz
mov
nop
orl
cmp
jl
std
cmp
dec
xchg
inc
cmp
push
jl
mov
in
inc
nop
dec
xchg
inc
cmp
push
jl
cmp
nop
jg
in
inc
add
inc
rol
jecxz
shll
mov
nop
sub
je
dec
sbb
mov
sti
addr16
jecxz
pop
or
push
push
adc
pusha
inc
or
call
xor
iret
or
pushl
jecxz
rorl
jae
aaa
pop
lds
pop
faddl
add
jae
shl
mov
mov
in
pop
sub
addb
pop
push
mov
sbb
cmpsl
inc
es
cmpsl
fsqrt
mov
add
repnz
pop
cmpsl
lret
xchg
sti
add
fistl
ret
fs
je
iret
fldt
sub
jmp
rol
lret
xor
push
call
enter
ret
mov
push
add
add
pop
cmpsb
add
cld
and
jmp
int
xor
jle
iret
addr16
pop
xor
push
lret
push
stc
or
pop
pop
sbb
into
xor
add
repnz
aam
and
loop
jmp
fistl
sub
incb
ljmp
pusha
and
out
repz
add
pop
add
pop
add
add
test
jmp
call
pusha
popa
lret
xchg
leave
jne
imul
add
lret
push
jmp
lret
pop
lods
ret
jmp
outsl
leave
mov
jb
call
mov
in
push
pop
lret
push
lret
mov
pop
leave
jl
call
add
pop
mov
or
xor
push
mov
push
mov
mov
add
test
lock
add
add
add
into
lods
in
into
add
mov
add
add
add
jle
inc
cld
into
cmpsb
mov
test
mov
dec
std
icebp
mov
fidivl
lret
lods
jmp
cs
cmp
sar
sub
lcall
pushl
mov
incl
jp
xor
xor
push
push
call
add
ljmp
push
int3
adcl
je
pop
inc
hlt
push
mov
mov
js
nop
push
hlt
fadd
add
or
jne
addb
filds
fldt
dec
gs
add
in
lret
add
pop
lret
add
add
enter
sbb
sub
out
jnp
xor
icebp
fidivs
inc
call
or
aas
imul
cwtl
cmc
pop
fbld
or
dec
movl
cmp
enter
cmpsl
xorl
ffreep
leave
dec
mov
cmc
sbb
add
enter
addl
add
add
or
repz
ljmp
jnp
jmp
jae
pop
xor
mov
inc
xor
jmp
test
cs
add
add
add
les
jmp
fadds
add
movsb
jne
icebp
xchg
jne
jb
push
cmpsl
pop
inc
jmp
fisttpl
jmp
add
push
inc
lret
xor
aam
adc
je
addr16
in
movsb
add
mov
lret
ret
cmpsb
pushl
dec
inc
in
int
or
push
leave
movb
cmpsl
pop
adc
push
push
add
mov
add
jne
mov
add
mov
cmp
add
lret
repnz
sar
mov
add
adc
in
leave
xor
call
mov
call
push
jmp
lahf
roll
sbb
ret
push
mov
add
or
fwait
sub
xlat
add
dec
icebp
add
add
cmpsl
add
fcmovbe
pop
add
fildl
or
adc
sub
lock
mov
add
fistpl
or
push
in
jne
addl
shll
xor
mov
sarb
xchg
roll
jnp
and
xlat
push
push
ljmp
xor
add
add
add
mov
and
sbb
icebp
add
out
and
mov
pop
xorb
aad
jmp
add
les
mov
es
cmpsl
pop
lods
pop
loopne
in
cmp
push
mov
cmp
dec
mov
xchg
ret
jl
call
rcrb
add
mov
add
iret
mov
pop
sub
sub
stos
clc
test
jb
and
add
aam
mov
js
icebp
cmp
mov
out
and
mov
mov
pop
js
mov
pop
jne
out
fcompl
shrb
add
bound
stc
or
stc
insb
xchg
jmp
jle
fiaddl
xchg
adc
ret
mov
and
lea
cmpsl
jo
mov
dec
icebp
in
adc
push
ja
mov
add
mov
test
and
test
jmp
add
dec
stc
xor
xor
pop
adc
adc
dec
mov
xor
pop
into
xor
repz
sub
aas
inc
add
add
mov
adc
and
adc
ret
inc
mov
rcll
jl
cli
sbb
into
lea
add
add
ret
mov
stc
xor
test
mov
subb
pop
sar
add
xor
or
xor
orb
sbb
shlb
rcrb
idiv
les
cli
xor
adc
loope
int
pop
jl
and
mov
xlat
jmp
pop
pop
xchg
ljmp
add
cli
je
xchg
test
lods
dec
xor
ljmp
dec
mov
pop
adc
fwait
std
movsb
mov
push
shrb
idiv
test
jne
xor
push
push
adc
out
ljmp
mov
in
jbe
pop
jmp
add
mov
xchg
out
hlt
nop
add
or
jmp
mov
ret
bound
je
insb
xchg
nop
inc
lcall
testl
pop
adc
jmp
out
ljmp
mov
fisubrs
js
add
add
jb
repz
or
repz
fs
or
mov
add
add
ret
mov
xchg
mov
adc
mov
les
ljmp
cli
mov
and
push
cmp
adc
xor
mov
xor
sahf
pop
xor
out
xchg
shrl
add
bound
lret
clc
insb
das
pop
out
inc
loope
cmpsl
add
rolb
add
add
add
mov
lea
pop
mov
ret
ret
rorb
sti
popf
jp
mov
pop
dec
or
rorl
xor
cli
xor
divl
adc
pushf
pop
jmp
pop
inc
dec
and
rorl
xor
pop
xorb
mov
test
mov
rolb
mov
mull
addr16
lea
jb
clc
mov
test
or
fdivrs
lea
mov
add
add
mov
rorl
loope
cli
je
jecxz
je
xchg
pushf
nop
and
sbb
sbb
jle
mov
lea
movsb
inc
cmp
add
push
add
push
repz
pop
pop
adcl
add
add
mov
jne
popf
out
shl
add
sub
repz
repnz
pushf
test
sti
in
add
pop
mov
mov
fidivrl
int
inc
add
sub
mov
lock
mov
jne
dec
mov
movsb
push
stc
les
ljmp
mov
and
jns
aaa
and
stc
add
xchg
bnd
nop
inc
sbb
jg
jge
pop
jg
stos
push
movsb
fldenv
je
sbb
mov
add
loope
daa
ret
stos
ljmp
mov
aas
repnz
daa
mov
push
sub
pop
add
sbb
mov
xor
lock
jmp
adc
fiadds
clc
je
pop
sbb
cld
sbb
add
mov
ret
mulb
mov
pop
lock
fldl2e
ljmp
jb
out
clc
fisubrl
fisttpl
gs
add
ss
jl
xchg
decl
rcll
out
xchg
add
bound
sub
les
xor
rol
add
mov
add
js
sti
std
ja
test
inc
and
fiaddl
push
sarl
ret
xchg
jge
inc
mov
or
mov
lea
push
xchg
jmp
ret
mov
xor
mov
jge
cmp
sysret
add
loope
call
mov
or
mov
repnz
cmp
cmp
ret
adc
add
dec
mov
sti
aam
mov
lods
inc
xor
jmp
add
pop
mov
clc
lods
adc
cli
sub
xchg
jecxz
mov
jno
ret
lods
sarl
je
psubd
mov
lods
dec
sub
or
pop
xor
imull
sbb
lret
add
add
fdivrl
xchg
xor
mov
sub
inc
xchg
sub
movsb
lds
testl
xchg
pop
mov
in
in
ljmp
hlt
adc
add
cmpsb
gs
int3
cmpsb
mov
mov
shl
sahf
xchg
add
icebp
dec
movsb
pop
cmc
les
faddl
scas
mov
insb
hlt
lahf
mov
add
hlt
scas
ljmp
ret
ds
cmp
lea
in
icebp
and
les
ljmp
xor
mov
psrld
sub
pop
or
sub
mov
or
add
mov
shrl
add
adc
icebp
movsl
incl
cmpsl
add
movsl
dec
or
call
pop
mov
inc
mov
adc
pop
pop
inc
int
ret
dec
mov
cmc
push
movl
ds
jne
mov
add
add
add
movb
and
add
add
add
add
fdivl
add
adc
adc
mov
gs
loope
mov
pop
add
outsl
push
es
inc
into
push
call
addl
add
or
fmuls
inc
add
jp
push
scas
data16
cmpsl
mov
sbb
inc
add
sub
add
scas
or
inc
cmpsl
stos
inc
js
inc
mov
cmpsl
stos
jl
adc
or
inc
cmpsl
stos
inc
js
xor
or
mov
add
aam
paddusw
gs
mov
iret
xchg
add
cmpsl
mov
or
add
sub
stos
push
enter
leave
inc
dec
and
cmpsl
and
or
sub
pop
adc
out
dec
sub
inc
jmp
inc
cmpsl
add
add
adc
push
pop
xor
add
pushl
ret
pushf
mov
andl
enter
add
sbb
dec
inc
jmp
lea
add
add
jns
inc
cmpsl
inc
push
fstps
mov
mov
mov
sbb
insb
jmp
xchg
inc
add
cwtl
test
add
stos
jae
mov
pop
outsl
data16
push
pusha
or
add
jmp
imul
sbb
sbb
cld
inc
pop
and
test
addl
cmpsb
ljmp
cmp
add
add
lods
ror
and
push
adc
pop
mov
inc
add
mov
in
sub
clc
jo
mov
cmpsl
mov
rol
cmpsl
fiaddl
lret
lret
inc
insl
decl
lret
jp
ret
mov
aas
add
mov
mov
dec
imul
pcmpeqb
mov
mov
sarl
fadds
dec
in
mov
test
push
bound
inc
cld
lods
lds
movb
gs
incb
inc
clc
lret
lret
inc
insl
jne
jno
testl
mov
inc
jne
aaa
in
incl
and
xor
mov
xchg
jae
aad
ds
test
xor
cld
add
adc
shll
out
roll
lcall
arpl
pop
add
loop
push
inc
cmpsl
and
cld
cmpsb
cmpsb
daa
gs
mov
lcall
in
mov
call
and
add
mov
mov
or
mov
jne
repz
mov
cmpsl
adc
sub
aaa
std
test
mov
nop
mov
or
jb
outsb
in
sarb
xchg
sbb
dec
sbb
sbb
popf
imul
and
mov
movsl
popf
or
sbb
and
sbb
leave
lods
mov
add
mov
and
push
aas
pop
xchg
jge
decl
add
pop
push
adc
int
push
cmp
enter
shlb
sahf
xchg
jnp
lods
clc
sbb
pop
pop
mov
cmp
mov
iret
cli
push
shll
jmp
jmp
push
mov
mov
add
jmp
pushl
mov
add
scas
jne
cmp
mov
xlat
mov
adc
add
xchg
add
mov
add
movsb
fwait
add
jnp
jno
ret
push
mov
adc
scas
mov
cmpl
add
je
jg
add
jmp
add
imul
lea
imul
cmp
add
decl
push
add
int
pushl
add
add
mov
jmp
sbb
add
add
ret
push
mov
cld
dec
into
fisubrl
jb
or
mov
or
out
mov
fnstenv
add
jle
mov
add
mov
and
lcall
lcall
xchg
push
add
cmpsb
push
inc
incl
xlat
je
or
or
fidivl
mov
ljmp
fstpt
jb
adc
push
jge
es
push
sub
rorl
lcall
or
outsl
sub
in
xor
call
add
pop
es
add
push
sti
shrb
sbb
add
lods
pop
cld
subb
add
xchg
cmp
adc
sbb
inc
add
jg
add
lods
cmpsb
push
pop
aaa
in
scas
cmc
adc
fucom
adc
xchg
add
add
cltd
in
dec
ss
jnp
dec
mov
jp
andl
cmp
lods
es
repz
jmp
add
ja
je
stos
push
xchg
test
inc
adc
adc
scas
and
cld
in
scas
std
or
jg
icebp
movsb
xor
add
ljmp
mov
and
sbb
fimuls
lods
pushl
scas
lea
push
call
fisubrl
push
adc
add
cld
lock
jne
cmp
data16
add
add
shr
repz
movsb
stos
jne
sbb
fildl
popa
pop
cmp
jne
mov
into
jne
xchg
mov
test
sub
pushl
xchg
push
mov
pop
xor
mov
jne
pop
jne
jno
or
mov
jmp
xchg
aas
add
mov
push
add
mov
push
add
bound
call
dec
push
push
inc
mov
mov
scas
inc
jno
mov
mov
movb
push
push
cmpsl
inc
mov
cmpsl
cltd
jp
jmp
inc
lock
dec
pop
jg
filds
fdivl
cld
iret
call
clc
mov
dec
mov
in
cmpsl
cltd
add
push
pop
js
pop
push
adc
cmpsl
mov
icebp
inc
fs
adc
cmpsl
fadd
imul
pushf
addr16
lods
mov
lret
clc
rcr
lahf
jp
dec
lcall
call
fmuls
mov
fwait
and
stos
xor
ja
pusha
inc
clc
cmpsl
add
arpl
xor
jp
inc
movsb
cli
test
push
xchg
test
jmp
mov
jge
mov
adc
add
add
push
mov
push
sub
cmc
ja
test
icebp
stos
adc
into
jg
dec
and
sbb
push
pop
push
sbb
jge
jmp
addb
jge
cmpsb
add
add
fwait
scas
movsb
jle
push
aas
add
movsb
lcall
xorb
xchg
out
call
add
inc
sub
test
jmp
lods
add
cs
movsb
add
pushf
or
cmp
mov
xchg
lea
add
icebp
sub
mov
movsb
sti
mov
mov
add
jmp
lods
add
pop
out
push
cmpsb
xchg
pushw
add
orl
ds
test
inc
rol
add
fidivrl
lcall
inc
sarb
add
xor
popl
les
mov
incl
add
lea
les
into
add
call
or
xlat
add
jne
xchg
repz
pushl
push
sub
jne
xchg
mov
jle
add
stos
mov
ss
push
or
sti
call
cmpsl
movsb
ret
jne
test
mov
inc
test
mov
cltd
push
call
push
dec
sti
or
mov
clc
int
jp
test
das
push
out
cld
loopne
jl
fsubrs
call
enter
xchg
cli
test
mov
cli
test
test
cmpsl
call
add
cli
test
sub
dec
pop
pop
pop
idiv
repz
inc
stos
mov
add
cmpsl
fwait
add
ljmp
inc
push
add
test
scas
lcall
xor
std
adc
movsl
cld
cmpsl
cmovge
adc
or
mov
in
call
mov
jecxz
jmp
add
loopne
das
or
cmpsb
mov
add
push
add
xchg
cmp
cmpsl
mov
bound
hlt
mov
jmp
add
add
fwait
push
mov
add
movsb
lcall
rcrl
add
movsb
add
push
or
cld
pusha
imul
add
test
add
lods
dec
out
call
jo
aam
mov
lods
xor
inc
and
cmc
call
fsubs
xchg
movsb
add
imul
add
sub
cld
xorb
in
cmpsb
add
movsb
mov
call
dec
cs
dec
sub
mov
add
rolb
add
add
add
mov
sub
out
decl
mov
repz
les
add
xor
movl
fs
hlt
popa
lods
call
les
ljmp
xor
add
mov
je
dec
fcmovbe
add
add
mov
adc
jne
pop
jne
es
sub
pop
jne
add
mov
cmpsl
cltd
add
les
or
add
ret
call
pushf
pop
das
add
jnp
sti
subl
dec
cmp
mov
cmpsl
or
mov
push
stos
decl
mov
jne
push
repz
je
xor
adc
gs
pop
sub
movsb
or
insl
add
mov
int3
or
mov
lea
bound
movsb
jne
adc
sti
mov
pop
outsl
call
mov
pop
les
mov
scas
movsb
push
add
movsb
pop
xchg
cmpsl
push
loope
shrb
mov
mov
ss
sbb
push
pop
ss
and
in
fwait
push
push
mov
fnstsw
xor
push
clc
pop
in
add
push
jmp
repz
in
fwait
and
xor
add
clc
clc
push
lock
cmp
or
cs
stos
ljmp
mov
scas
jmp
dec
cmp
inc
ret
xor
or
lahf
in
push
add
test
add
add
jmp
stos
add
stos
add
in
push
or
cmc
movsl
test
movsb
push
sbb
idiv
fsubrl
fdiv
lahf
jne
inc
pop
or
mov
adc
in
push
or
popf
rolb
push
mov
xchg
pushf
stos
scas
add
arpl
call
adc
jne
insb
add
ret
push
mov
lock
sti
or
mov
xlat
dec
or
fwait
repnz
arpl
shl
decl
adc
je
jno
lock
arpl
es
ljmp
adc
je
xchg
incb
adc
or
fs
push
lcall
out
fs
imul
pushl
imul
lea
shl
loopne
fs
jmp
out
mov
add
repnz
subl
jne
add
inc
stos
sub
or
cmp
stos
pop
inc
enter
aad
mov
pop
xor
sarb
mov
xorb
adc
and
mov
or
sbb
inc
lock
xor
jecxz
aaa
mov
fucom
inc
lret
ret
mov
ret
sub
lock
mov
stos
movsb
push
mov
sub
jmp
or
or
sbb
movsb
xchg
xlat
popf
pop
or
outsl
lret
mov
lds
flds
aam
mov
pushf
aas
faddp
mov
cmpsb
inc
insb
inc
aaa
xor
mov
sti
popf
jle
in
mov
add
mov
test
enter
mov
cmpsl
mov
daa
call
movsl
add
es
push
call
loop
pop
jno
inc
pop
or
xchg
push
out
push
call
pusha
push
pop
dec
inc
sub
call
gs
pushl
add
popf
lea
lcall
or
add
sub
inc
out
clc
add
movsb
xchg
sub
popf
call
repnz
call
stos
add
add
sub
test
inc
mov
add
rcrb
jmp
lea
sar
mov
inc
sub
call
call
or
stc
add
add
add
add
or
push
data16
incl
jne
negb
inc
jge,pt
or
sbb
call
imul
or
mov
call
jae
ret
decl
ss
xchg
iret
jne
jl
adc
cli
push
cli
pop
call
loopne
fcmovnu
inc
stos
pusha
and
mov
push
popf
inc
sub
adc
xchg
cld
pop
adc
or
inc
dec
test
loopne
insl
roll
psubsb
jbe
push
insb
popf
push
sub
sbb
mov
pushf
push
lahf
jo
mov
mov
popf
call
and
ret
adc
cmp
popf
clc
add
inc
add
xchg
out
insb
xchg
loope
dec
popf
adc
popf
shrb
ss
lcall
inc
popf
mov
sub
test
bound
mov
jl
xchg
adc
pushf
adc
add
sbbb
ss
ficoms
fwait
stos
xor
sar
lds
mov
rcll
inc
adc
pushf
mov
cmp
sub
add
add
fldl
jp
lea
repnz
hlt
test
sbb
or
mov
mov
cwtl
jne
jle
mov
stos
cmpsb
and
jne
adc
or
test
jne
dec
jne
push
cmp
ret
das
mov
mov
aas
or
pop
mov
or
or
xchg
and
aaa
add
jmp
cmp
jmp
stos
add
aas
lock
push
rolb
orl
jae
add
xor
decb
xor
les
sti
repz
movsl
mov
xchg
movsl
push
ja
or
mov
xor
outsl
movsb
mov
pushl
mov
incl
adc
decl
mov
in
addl
push
mov
out
xor
lds
dec
add
add
je
xchg
shrl
inc
ds
inc
cmpsl
inc
add
lods
imul
js
ljmp
cmpsl
movsb
ret
je
adc
lea
xor
mov
dec
mov
push
cmp
add
add
test
lds
dec
push
ds
fs
mov
and
xchg
adc
call
adc
lret
test
xlat
sarb
test
add
push
aas
cli
popa
test
add
out
add
out
ljmp
inc
in
sub
adc
lea
add
loop
add
test
mov
or
or
lret
movsb
xchg
cmpsl
add
add
cmp
sbb
enter
or
adc
shr
jmp
push
jnp
fdivl
xchg
mov
rorb
fs
xor
addl
cwtl
xlat
or
test
add
out
jbe
and
cmp
stos
jmp
int
mov
xor
aaa
rcll
sahf
dec
inc
gs
mov
inc
xor
lahf
cltd
cwtl
push
fidivs
stc
cltd
lahf
dec
inc
inc
je
mov
push
xor
jbe
mov
cltd
xchg
push
flds
add
and
push
add
imul
add
pop
push
ljmp
rcl
incl
popa
mov
les
in
add
cmpsb
aad
insl
mov
out
add
sub
jne
push
push
lea
incl
insl
inc
dec
fdivrp
jmp
add
into
mov
push
dec
test
add
mov
mov
jmp
cmpb
or
mov
or
inc
inc
pushl
add
jb
cmpsl
mov
js
cmpsl
test
xchg
call
dec
adc
aas
or
pop
push
out
add
xchg
mov
xchg
call
push
adc
or
pop
mov
lock
cmpsl
test
add
add
xor
mov
dec
xchg
call
rcll
arpl
xchg
decl
repz
test
add
ss
call
icebp
and
adcb
cmp
push
add
call
add
xor
dec
jecxz
mov
stos
outsb
scas
scas
xchg
aas
mov
sahf
sldt
add
add
xchg
xorl
sub
jle
clc
xor
cmc
roll
adc
mov
fcoms
dec
xchg
cmpsl
push
lods
addb
ds
mov
jge
xchg
test
in
xchg
pop
sub
xchg
cwtl
xchg
pushf
or
cmp
adcb
mulb
xchg
jmp
icebp
sub
fidivs
xchg
mov
add
xchg
dec
cltd
cli
out
notl
add
xchg
jne
cld
push
shll
xor
decl
sbb
inc
das
sbb
gs
rorl
jo
fdivrp
push
cmp
jmp
ret
inc
add
popa
fdivrp
adc
or
test
mov
decl
add
xchg
rolb
dec
cli
fidivl
mov
push
cmpsb
mov
and
jns
jne
insl
inc
shrl
pushl
je
or
sar
stc
aam
leave
dec
cli
call
add
imul
push
sub
or
xor
sub
insb
mov
rcr
out
into
add
inc
jbe
add
mov
imul
push
dec
jnp
idivl
push
push
addl
addl
testl
add
pushf
fsts
add
cmpsl
sbb
in
push
mov
add
cmpsl
xchg
test
or
loop
sahf
mov
pop
aam
cmpsl
cs
sbb
push
nopl
cmpsl
movsb
ret
je
cs
clc
mov
add
sub
xchg
div
sbb
pushl
xchg
xor
iret
xor
je
and
push
mov
sti
out
jmp
jmp
fs
nop
push
add
incl
fwait
shlb
add
adc
out
xchg
pusha
push
rcrl
push
xchg
xchg
dec
adc
xchg
cmp
cltd
add
pop
or
push
nop
fcompl
sahf
xchg
lcall
mov
sub
push
xchg
sbb
xor
adc
nop
xchg
sbb
inc
cmpsl
lcall
mov
lcall
add
jmp
cmp
add
movsb
jg
adc
pop
mov
cltd
pop
sbb
testb
add
add
add
repnz
add
jmp
stos
lea
sbb
fdivrs
test
mov
cmp
aaa
jl
cltd
das
mov
orl
push
jbe
xchg
imull
mov
push
pushl
in
pop
mov
into
jmp
pushl
add
mov
sub
call
mov
insl
idiv
mov
jmp
mov
add
lock
pushl
jbe
xlat
pushl
test
imul
jmp
je
mov
jl
je
cmpl
add
imul
push
jge
mov
jge
or
inc
sar
add
mov
jns
jmp
lret
mov
lret
mov
inc
out
mov
in
mov
jg
mov
mov
pop
in
js
mov
ret
pushl
fwait
imull
fwait
sbb
mov
adc
sbb
aas
jg
incl
pop
lock
mov
cmpsb
jne
ljmp
fisttps
lcall
out
add
add
add
push
sti
lcall
lahf
and
sbb
jge
mov
xor
inc
fildl
roll
push
cli
inc
daa
rorl
add
mov
mov
cmpsl
mov
mov
pop
fsubp
add
sbb
mov
pop
imul
mov
stos
or
mov
mov
adc
mov
add
mov
cld
and
out
cmpsl
mov
movaps
pop
xchg
sbb
jbe
out
adc
imul
movsb
sbb
fs
cld
flds
or
ss
mov
es
mov
mov
add
incl
and
call
andl
aas
jae
add
add
imul
mov
mov
mul
push
push
mov
cmp
mov
sub
call
sub
call
add
mov
add
push
in
jbe
or
mov
sbb
or
xlat
aad
dec
call
out
leave
jbe
call
cmpsb
sub
ljmp
mov
add
test
inc
dec
in
add
dec
test
lods
adc
or
icebp
sbb
or
movsb
aad
imul
out
pop
jge
call
ss
sar
sub
xor
cmpsl
fiaddl
pushl
fwait
add
add
jg
push
push
or
or
push
mov
fadds
mov
xor
rol
das
mov
mov
sbb
hlt
cmp
inc
sti
out
jmp
xchg
lcall
js
inc
clc
call
adc
dec
loop
add
fdivrp
add
daa
mov
mov
fwait
mov
rorl
add
dec
mov
sbb
imul
mov
xor
mov
xchg
out
or
sahf
mov
sti
test
mov
add
pushf
fisubrs
aam
enter
mov
mov
mov
clc
inc
cmpsl
xor
jp
xor
mov
mov
xchg
sub
aad
add
lcall
sar
shl
inc
xchg
push
cmpsl
sbb
aam
add
ja
jmp
add
pop
push
xchg
cmp
or
call
fildl
adc
int
shlb
stc
add
push
jo
mov
fsubrl
xchg
or
std
inc
push
xchg
inc
add
sbb
ror
inc
jmp
movsb
test
add
incl
mov
jne
cmp
std
imulb
sbb
sbbl
test
sarl
incl
popa
xchg
hlt
push
cmc
repz
fildl
lcall
jnp
push
jmp
addr16
push
inc
add
add
addb
add
add
imul
inc
sar
jne
imul
out
das
inc
mov
add
mov
sub
dec
call
repz
jne
jne
imul
jne
push
push
es
das
inc
ds
add
cmpb
mov
sub
xchg
mov
std
sbb
jg
roll
cmpsl
repz
data16
sbb
cmpsl
fwait
sub
dec
xchg
pushf
pop
adc
fimuls
jne
add
enter
mov
sub
or
rol
add
data16
lcall
adc
outsl
sti
out
out
lcall
sti
call
adc
lcall
cmpb
add
add
sub
in
cli
clc
push
in
subl
add
sub
add
xchg
xchg
xchg
clc
test
cwtl
sbb
adc
addl
cmpsl
xor
rolb
xchg
jns
dec
leave
andl
add
add
jle
test
mov
xchg
jge
test
dec
das
xchg
add
add
test
xchg
repz
sar
pop
mov
jmp
cmp
cwtl
sbb
push
sarl
add
das
inc
jne
cmp
jne
stos
sub
dec
adc
inc
jmp
movsb
idivl
jmp
sti
inc
add
mul
jbe
cmp
push
sar
and
add
add
call
cltd
sub
setns
clc
pop
inc
xchg
cmp
sub
insb
in
mov
decl
mov
add
push
pushl
cmpsb
iret
mov
je
push
fisubrl
popl
pushl
sahf
test
mov
xchg
mov
xchg
jge
adc
mov
decl
jmp
add
lcall
test
je
xor
jne
popf
xchg
decb
call
lea
lcall
pushl
idivb
mov
lsl
dec
xchg
call
cmpsl
adc
popa
or
pop
sub
xchg
subl
inc
cmp
add
mov
add
add
je
je
repnz
adc
xchg
scas
insb
adc
clc
adc
cmp
subb
stc
sti
fdivs
call
enter
pop
cmp
add
outsl
and
push
add
inc
stc
pop
jg
dec
decl
add
add
add
adcl
mov
add
add
sub
movsb
xor
add
or
push
sbb
mov
or
adc
cmpsb
add
nop
sub
sub
add
shr
pushl
sub
push
mov
mov
xor
roll
and
mov
popf
lcall
add
pop
jb
aaa
and
add
je
ja
push
and
sar
xor
dec
push
xor
movsb
add
sub
adc
sub
push
xor
call
push
jb
mov
es
add
or
adc
in
dec
addl
call
pop
addl
xchg
jge
outsb
push
fmul
es
imul
push
jge
add
outsb
mov
and
jne
call
push
test
inc
jle
sbb
or
call
jne
ljmp
dec
add
push
push
jmp
pushl
xorl
lock
jmp
enter
push
mov
jge
test
add
addb
push
add
in
into
inc
mov
sub
ss
into
call
shlb
clc
add
out
adc
cmc
mull
aad
call
daa
cmp
sub
add
lock
subl
xchg
cmpsl
imul
ljmp
cmp
mov
adc
mov
imul
dec
jg
ja
stc
pop
inc
jle
or
lret
add
jp
imul
sarl
fcoms
add
hlt
jle
push
orl
sub
jg
rcll
pop
jge
jg
inc
fs
mov
jl
les
add
gs
jg
add
add
xchg
sub
jl
ret
addb
call
add
arpl
sub
adc
mov
lds
fs
mov
jb
xchg
ret
and
rorl
jmp
sub
add
cmc
jmp
dec
stc
into
outsb
cmp
popf
xor
mov
add
iret
push
and
je
mov
cltd
or
pop
inc
dec
jl
cs
lret
es
lea
mov
fnstcw
aad
add
fs
test
lock
pop
jl
add
pushf
arpl
mov
in
movsb
aad
lds
inc
cld
scas
lock
call
jo
jbe
test
add
add
fdivl
inc
add
sti
call
sahf
outsb
jb
decb
roll
call
call
jbe
xor
divl
fmul
dec
dec
addr16
inc
decl
jno
call
cmpsb
pop
lret
ljmp
add
mov
push
outsb
divl
push
std
incl
jmp
mulb
or
inc
sub
sbb
push
xchg
jae
inc
push
jne
arpl
jl
enter
loop
jl
out
lods
or
pop
hlt
outsb
and
shrl
inc
pop
call
fs
sarb
aaa
mov
clc
push
addr16
imul
out
out
add
lods
sub
sbb
add
adc
rorl
pop
sarb
ret
pusha
icebp
pop
aas
mov
jmp
inc
js
out
jnp
or
lock
add
out
test
or
pusha
jnp
jmp
jp
or
out
cmpb
mov
jmp
push
icebp
mov
js
pop
add
shr
cli
or
jp
cs
into
xor
imul
les
jl
aas
sbb
jp
jmp
xor
test
clc
js
js
push
xchg
or
call
js
jp
jbe
lock
add
fs
push
bound
xlat
mov
push
or
sbb
dec
in
or
add
pushl
or
xchg
arpl
xor
add
in
decl
adc
mov
or
int3
ss
or
mov
mov
jl
xor
int3
leave
int3
push
int
call
push
jmp
dec
mov
xor
jmp
int
call
or
add
lret
push
call
push
add
inc
add
sti
call
mov
add
jo
jne
ljmp
inc
out
leave
xor
enter
push
mov
push
xor
pushl
ljmp
outsb
push
out
sar
cmp
push
cmp
call
push
mov
or
mov
jmp
or
pushl
sti
je
add
sti
je
push
push
incl
leave
rcll
imul
add
ds
or
or
push
cmpsb
js
lods
stos
out
dec
push
pop
js
cmpsl
imul
jg
inc
cmpsl
mov
sti
rorb
or
sbb
js
dec
push
out
stc
add
imul
fsubr
pop
dec
js
cwtl
inc
add
stc
aad
add
cli
aaa
js
scas
ret
loope
jo
js
add
mov
pusha
adc
ret
into
mov
ds
mov
out
or
push
es
push
sahf
ja
repnz
lds
frstor
data16
xor
sub
out
lock
ja
cmp
pop
xor
cmpsb
xor
sub
out
loopne
cmp
aas
inc
mov
xor
jbe
sub
add
out
lock
add
add
jne
ja
pop
sbb
nop
xor
add
push
sub
imul
ja,pn
lods
fcmovnb
pusha
faddl
out
push
xor
out
lock
jbe
cmp
mov
jne
jmp
xlat
jmp
jne
jl
dec
xchg
ljmp
mov
pushl
mov
adc
sahf
add
fcomp
jmp
addr16
xchg
sar
ja
sub
mov
cld
std
outsb
xor
mov
push
loopw
sar
cmpsb
add
imul
jbe
mov
test
ljmp
movsb
add
xor
jae
and
addr16
ud0
ds
jg
mov
call
push
add
xor
add
push
jg
jne
out
std
cmp
addr16
aas
jmp
xor
mov
add
ds
je
es
std
ljmp
data16
xor
aas
jmp
jg
bound
call
lretw
jle
mov
add
out
mov
xor
add
movsl
xor
pop
jmp
add
jae
dec
cmp
push
js
pop
aas
arpl
and
and
xchg
jae
call
pop
je
stos
inc
out
pop
imul
clc
mov
sti
lock
jo
je
out
popf
pushl
adcw
je
add
xor
je
stos
xchg
cmc
leave
mov
shlb
pop
fs
movsl
imul
ret
inc
mov
ljmp
mov
add
repnz
imul
je
lcall
out
and
mov
lcall
push
je
sarb
aas
and
addb
popa
cmpsl
aam
div
pop
pop
jae
jp
jae
cmp
pusha
lock
pop
fidivrs
scas
jae
inc
sbb
rol
adc
jo
aam
jno
sti
add
fnstsw
mov
adc
inc
scas
add
std
add
cwtl
outsl
aam
xorl
push
fistpl
add
ljmp
std
aad
or
mov
sub
mov
mov
sbb
jl
jno
add
call
mov
fbld
into
decl
cmp
outsl
xor
add
xchg
sar
xchg
cmp
scas
arpl
out
adc
cmc
or
stos
pop
std
mov
outsl
mov
jge
mov
jo
lds
fldcw
test
pop
in
adc
test
loop
je
std
jb
add
add
test
push
mov
hlt
incl
stos
jne
lret
add
icebp
jne
icebp
je
out
sar
lock
loope
pop
call
jg
daa
adc
loope
jne
icebp
je
xor
call
and
icebp
je
xor
call
adc
jnp
out
mov
push
addr16
jbe
jge
pusha
testb
cmpsl
pushl
pop
add
inc
lcall
imul
std
div
dec
inc
inc
pushl
insl
idiv
aas
pop
inc
jmp
pop
div
pshufw
dec
imul
jmp
incl
cmp
inc
push
lods
mul
pushl
inc
and
jge,pn
es
test
in
mov
repnz
decl
xor
add
lcall
add
add
add
ret
mov
mov
add
lods
insl
mov
jo
fcmovu
add
sarl
call
add
in
xor
add
fisttpl
test
and
fdivl
cli
shrb
adc
fdivl
adc
clc
in
cmp
push
cmp
sub
add
les
shl
leave
aaa
data16
cld
sar
outsl
mov
and
push
insl
add
mov
sar
push
xchg
add
lea
jmp
pop
jo
out
add
jle
imul
fcom
mov
call
pop
insl
jne
enter
mov
add
sub
ret
mov
clc
out
add
jmp
jge
aad
imul
aad
hlt
cmpsb
jns
mov
ljmp
inc
imul
lret
arpl
xchg
push
imul
xor
incl
sub
loope
sub
incb
leave
xchg
call
add
leave
mov
int3
add
dec
ljmp
fdivl
hlt
mov
cld
push
xor
fdivl
mov
incl
cltd
dec
jmp
xor
push
push
xor
fdivl
out
jmp
faddp
call
push
jne
xchg
cld
jmp
push
inc
fldt
popl
push
repz
sub
movb
out
std
dec
push
test
pop
mov
test
ret
fcos
or
xor
push
into
xor
pop
fildl
add
sbb
pushf
sbb
push
testl
pop
xor
push
orl
pop
fldt
lcall
push
inc
lcall
gs
je
sub
xchg
jae
sbb
push
insb
call
jge
insb
jne
push
jmp
and
cs
out
add
insb
cmp
and
imul
add
cmp
mulb
imul
outsl
icebp
rcl
add
pop
jmp
insb
jge
orl
jmp
nop
in
ret
call
add
rclb
fucomi
push
jmp
xor
cmp
cli
ror
imul
imul
add
add
hlt
loopne
inc
mov
add
shrl
cmp
mov
xorl
sar
hlt
pushf
pusha
sub
or
call
push
mov
in
stc
scas
add
nop
cld
incl
cwtl
cmp
push
ja
mov
in
scas
mov
xor
mov
movsb
push
mov
jmp
add
add
push
test
push
mov
cltd
xor
mov
in
pop
add
int
jmp
daa
ret
push
mov
add
call
mov
jae
cmpsb
jmp
inc
mov
fdivr
push
mov
mov
incl
int3
aad
add
enter
push
mov
add
add
loope
pop
call
add
inc
sti
push
dec
xorl
pop
inc
sub
lret
mov
rcrb
out
mov
negb
jmp
lds
push
roll
fwait
sbb
xchg
ret
cmpsl
inc
jns
enter
cmp
cmpsb
pop
pop
mov
mov
xchg
leave
rcrb
add
add
lret
cmpsl
push
stc
xor
pop
push
decl
jno
je
mov
shlb
or
imul
int
fistl
jns
ret
cmpsl
fisubrl
pop
pop
ss
push
dec
ja
out
test
leave
imul
gs
fucomp
frstor
data16
xchg
ret
call
ret
add
add
pop
cmc
aas
shlb
xor
cmp
mov
loopne
icebp
xchg
arpl
push
mov
fstpl
xor
push
repnz
push
aas
popa
gs
test
imull
stos
add
dec
push
push
jb
dec
data16
cltd
insb
ja
out
adc
cmp
jecxz
dec
inc
fisubl
into
idiv
out
inc
jmp
sti
add
or
mov
jecxz
dec
cmpsb
mov
out
inc
pushl
roll
add
fcmovb
mov
xchg
cld
out
pop
incl
ret
jmp
out
push
dec
sti
mov
shlb
enter
push
cld
out
enter
add
in
decb
rcr
add
lcall
jae
call
leave
dec
call
imul
into
inc
out
xor
addr16
ret
imul
or
mov
lcall
enter
cmpsb
std
xor
xor
add
jg
faddp
call
jae
fdivl
jb
push
jns
pop
call
xchg
mov
jne
hlt
out
or
fs
pop
jmp
pop
decl
and
cmpsl
es
and
push
jb
pop
mov
bound
cmpsb
push
roll
aas
pop
add
add
add
out
fs
jae
nop
fldenv
icebp
out
pop
push
test
js
inc
add
sahf
js
sub
leave
jbe
pop
jl
jne
sbb
imul
js
cmpsl
or
call
imul
hlt
fs
jmp
flds
in
call
ja
push
fisubs
int
add
popa
cmp
iret
jmp
test
add
ret
call
jns
popa
mov
sub
pop
jle
divl
jp
push
pop
fs
cmp
mov
jl
push
popa
ds
sbb
popa
pushl
negw
lret
in
incl
mov
add
add
inc
jmp
test
call
ljmp
jnp
inc
inc
pop
imul
bound
pusha
cs
cmpsb
inc
in
call
int3
push
inc
jmp
add
mov
cld
fadd
jbe
mov
je
cmp
pop
add
addr16
ds
testl
add
inc
add
xchg
sar
xadd
mov
add
push
xor
jecxz
call
movsl
pop
or
jp
push
call
dec
mov
not
in
add
add
mov
out
idiv
adc
pop
dec
mov
pushl
outsb
jmp
mov
push
adc
mov
and
call
sarl
mull
popa
imul
lds
dec
sbb
pop
dec
mov
loopne
add
mov
imul
and
xlat
pop
decl
incl
jo
in
addr16
call
call
dec
insb
xchg
dec
popa
lcall
xor
enter
add
scas
popa
mov
jg
mov
ja
lock
lea
add
pusha
call
aad
incl
add
cmpsl
dec
sub
mov
jo
inc
push
out
pop
in
icebp
pusha
fimull
push
pop
ss
pop
pop
xor
call
add
sbb
sbb
out
fnsave
add
pop
pop
pop
push
pop
push
or
mov
loope
fcomps
fdivs
call
add
pop
adc
data16
or
cmc
mov
add
jo
pop
hlt
pop
negl
cld
lods
push
popl
pop
call
shll
jmp
jg
incl
xlat
sti
jno,pt
call
and
push
add
and
and
xor
sti
mov
mov
push
movsb
add
sub
add
and
add
jmp
js
add
mov
pop
imul
push
xchg
sahf
push
pop
push
sahf
into
push
lcall
imul
mov
cmp
add
add
cmpsb
sbb
inc
mov
mov
add
leave
xchg
mov
lret
mov
imul
mov
mov
lock
push
incb
mov
jmp
out
incl
mov
ss
mov
pushl
out
mov
ljmp
rolb
push
scas
idiv
add
inc
decl
rolb
push
add
out
pop
mov
mov
jmp
in
sub
imul
and
add
push
pushl
mov
pop
xor
add
popf
call
rolb
addl
clc
push
jo
call
call
add
add
dec
pop
add
jmp
enter
cmp
add
stos
pop
cli
add
xlat
test
ds
cwtl
pop
mov
mov
lock
jbe
js
test
pop
data16
mov
pop
push
xchg
inc
push
dec
pop
push
shl
imul
pop
inc
nop
adc
xlat
test
push
pushf
sub
xchg
or
pop
cvttps2pi
add
pop
cmp
adc
imul
add
pop
shl
sub
arpl
pop
fsubrs
cwtl
rcrb
xchg
jmp
mov
jae
pop
pushl
jmp
mov
lock
repz
call
jle
push
jmp
outsb
pop
pop
call
xor
or
mov
lock
call
add
push
mov
fisttpl
ss
pop
jne
mov
push
jnp
jne
jae
pop
adc
lcall
xor
out
xchg
sbb
in
punpckhwd
ljmp
add
decl
inc
testl
lret
mov
pop
mov
add
mov
cli
mov
mov
sti
call
inc
les
out
add
ds
fldcw
pushl
in
fdivrs
mov
hlt
test
pop
mov
lock
or
mov
mov
incl
repz
and
push
fistps
enter
dec
cwtl
adc
cmpsl
nop
nop
lock
repnz
cmpsl
jno
mov
xorl
std
imul
pushl
fsts
jo
punpckhwd
jne
ljmp
out
notl
in
inc
cmp
inc
cmpsl
sbb
jp
sub
cmpsl
icebp
dec
mov
pop
clc
pop
jmp
fisubrs
testl
nop
stc
adc
add
add
addr16
xor
loopne
xchg
cwtl
fcoms
inc
pop
stc
imul
ja
insb
cmp
int3
pop
pop
mov
iret
out
mov
in
dec
pop
mov
insb
cmp
jle
js
jmp
pop
push
ret
call
pop
push
push
adc
jg
call
pop
adcb
xor
xchg
add
es
cmpsl
add
jmp
pop
or
idivb
add
add
add
push
push
jmp
movsb
add
movsb
gs
js
push
inc
xor
mov
cmp
mov
dec
push
mov
notl
sahf
imul
decl
fists
icebp
or
mov
iret
push
mov
xlat
push
jmp
jno
out
sub
push
and
dec
out
push
jne
int3
cmpsl
mov
filds
jmp
aam
lcall
sbb
adc
cmp
push
outsl
push
xor
test
cmp
movsl
pop
push
stc
inc
pop
call
stc
jb
idiv
lods
out
lods
incl
idiv
stc
in
mov
out
pushl
xor
add
cmp
call
sub
idiv
stos
out
mov
pushl
out
mov
mul
aam
fldcw
fwait
mov
leave
ret
push
mov
cld
xor
push
mov
test
sti
cmpsl
push
rolb
dec
push
call
mov
call
add
cmpsl
pushl
sub
mov
mov
or
imul
addr16
sbbb
add
ljmp
inc
jnp
std
ljmp
add
das
add
out
repz
jg
push
les
inc
xchg
pop
pushl
imul
jmp
cmpsl
ljmp
add
jb
sub
dec
lock
cltd
mov
xchg
push
loopne
insb
push
rclb
xchg
inc
ficoms
mov
jl
shr
repnz
mov
mov
cld
ljmp
cmpsb
push
mov
add
mov
cmp
jo
jle
mov
push
cltd
pusha
push
jo
dec
pop
pop
push
mov
ret
call
add
cli
push
ds
cmp
ljmp
mov
adc
call
in
push
pop
pop
incl
push
pop
imul
push
push
jmp
mul
jae
test
arpl
cmp
push
mov
imul
mov
pop
adc
push
or
int3
pop
call
xchg
addl
add
jmp
call
fistl
aam
add
mov
sti
jg
cmp
push
mov
syscall
pushl
jno
imul
xchg
adc
mov
je
mov
mov
movb
add
add
mov
mov
into
cmp
addl
add
add
or
push
pop
jne
in
lea
into
mov
in
mov
call
jne
jae
std
jno
div
mov
je
mov
in
mov
call
cmpsl
and
add
lds
sub
push
fistps
sbb
add
test
nop
call
jnp
fildl
cmpsl
clc
xchg
jp
pop
cmpsl
add
dec
pop
fsubrs
pop
mov
cmp
pushl
push
pop
in
cmc
nop
push
push
movsl
pop
jmp
test
lcall
push
pop
lods
push
js
cmp
fadds
jg
xchg
ljmp
xchg
loopne
loopne
call
add
pop
adc
pop
inc
dec
inc
dec
repnz
inc
push
cli
pop
ss
sub
cwtl
add
dec
cs
xorps
push
call
pop
arpl
dec
push
pop
inc
xchg
push
push
lock
stc
pop
call
dec
out
push
bound
xchg
rorb
push
push
dec
shll
jmp
mov
pop
push
mov
call
cld
andb
push
incl
jmp
sbb
add
sub
cli
incl
add
idivl
movsb
fidivl
fs
adc
sbb
int3
test
ds
stc
mov
xor
xor
xchg
mov
push
dec
jne
push
xlat
repz
fadds
push
stc
push
call
push
fcoml
jmp
push
dec
dec
push
xlat
sti
flds
jmp
sbb
lods
add
fdivr
adc
and
add
sub
lcall
jae
lret
jmp
ljmp
hlt
sbb
fnstenv
call
out
lods
mov
leave
jl
add
lods
add
das
ljmp
mov
or
enter
add
out
push
add
and
push
dec
out
out
push
mov
push
push
mov
sub
test
mov
mov
push
dec
ss
mov
cmpsl
je
cmpsl
pop
pop
mov
cmpsl
jmp
sbb
pop
fstpl
sbb
dec
call
lods
dec
jne
sarl
mov
mov
cld
jns
fcos
mov
dec
jne
icebp
fidivl
add
loope
or
add
cmpsl
add
fldt
mov
push
inc
je
or
cmp
push
pop
xor
mov
pop
pop
mov
mov
dec
sbbl
les
cmpsl
aad
lds
mov
outsb
dec
push
pushf
and
rclb
fdivr
add
xchg
dec
xor
jmp
inc
sbb
call
sti
add
dec
add
dec
popl
jmp
or
xchg
rcrl
add
dec
test
jecxz
mov
add
mov
dec
add
loop
or
stos
pop
int
mov
jb
mov
and
add
jmp
loop
add
outsb
dec
imul
mov
jg
fimull
ds
push
mov
stos
add
sub
call
or
iret
or
gs
adc
shlb
imul
arpl
fidivrs
dec
call
add
push
addr16
sbb
xor
ja
jmp
jbe
incl
and
add
mov
lock
sub
lods
jmp
test
scas
jmp
pop
cmpsb
inc
fwait
mov
call
mov
imul
sub
xchg
mov
test
scas
decl
sub
add
add
add
inc
out
push
test
cmpsl
fwait
rcrb
and
sub
test
add
mov
and
push
call
mov
inc
je
or
jns
and
jmp
add
cmpsl
fmull
add
mov
jmp
rcll
pop
iret
inc
pop
add
add
roll
lcall
lcall
call
pop
adc
xor
push
jmp
dec
rolb
iret
pop
lcall
add
dec
ror
pop
mov
leave
push
test
shrb
inc
mov
mov
dec
jg
pop
dec
addb
jo
xchg
pop
jge
mov
lea
sub
inc
jbe
add
push
jbe
dec
pop
cmp
shlb
dec
xor
shrb
out
cmpsl
add
inc
scas
add
jge
xchg
testb
lock
add
or
outsl
or
pop
mov
add
pop
inc
jne
pop
int
shll
add
add
addr16
push
xor
xor
pop
mov
fiadds
and
call
stos
ret
incl
cld
or
pop
xchg
push
iret
sti
jbe
out
sub
pushl
orl
mov
sti
cltd
outsl
iret
or
test
sub
mov
jle
call
pop
add
jmp
loop
push
add
daa
ljmp
daa
ljmp
int3
inc
hlt
add
test
sarl
idiv
push
mov
add
dec
xor
add
out
sub
mov
mov
sbb
repz
mov
mov
fxch
test
sarl
dec
xlat
neg
mov
inc
add
lock
mov
inc
add
mov
leave
enter
xchg
mov
fldt
sbb
fadds
imul
dec
ljmp
push
idivl
jae
inc
cmpsl
xor
lock
cmp
sbb
cmpsl
inc
jae
mov
inc
ljmp
fbld
divl
mov
pop
xor
jmp
push
negl
inc
xor
inc
dec
xchg
incl
inc
je
fmuls
add
cmp
inc
xor
xlat
arpl
sbb
inc
cld
sub
out
mov
adc
lock
inc
push
icebp
loopne
jmp
inc
rolb
jge
and
inc
jmp
pop
mov
inc
add
jge
dec
cwtl
inc
sbb
pop
mov
xor
scas
imul
add
inc
xchg
test
lock
enter
dec
lea
inc
inc
data16
inc
push
nop
aas
dec
dec
inc
and
lock
dec
xchg
ds
adc
ljmp
pop
pop
mull
popa
inc
jne
dec
aad
push
popa
inc
mov
jno
incl
idiv
out
cmp
negb
pop
imul
push
xchg
xchg
bound
xchg
dec
dec
call
dec
js
into
add
inc
mov
ljmp
mov
ja
mov
inc
call
sahf
xor
jmp
mov
call
mov
or
sbb
andl
fdivrs
movsb
mov
loop
testl
mov
sti
decl
jne
fstl
mov
sbb
mov
pop
decl
pop
leave
out
mov
push
sub
xor
pop
call
rcll
sti
cmp
jne
ffree
stos
push
jne
je
push
push
pop
call
adc
call
pop
ret
pop
add
fstl
dec
cmp
lods
jge
decb
mov
pop
ja
pop
add
ror
or
push
add
add
xor
mov
add
cmpsl
lock
pmuludq
call
aas
inc
jne
adc
sarb
ja
mov
jb
call
lds
xor
lods
add
ljmp
movsb
jns
jne
ret
out
nop
stos
add
pushf
imul
push
cmc
sarb
add
or
ds
fldl
rorl
je
add
das
popl
or
cmp
ds
getsec
push
inc
lock
xchg
das
in
inc
inc
loopne
movsb
xor
lcall
dec
sub
aad
xor
in
mov
repz
xor
rol
aas
into
mov
ds
push
iret
shr
adc
shrl
add
add
cmpsl
iret
cld
out
adc
scas
shr
lcall
jae
aas
repnz
rcrl
add
daa
enter
push
mov
leave
inc
decl
dec
lods
inc
lods
sbb
je
ss
je
dec
sub
test
shl
dec
jae
incl
hlt
es
cmp
push
cltd
gs
add
inc
out
add
lods
sbb
inc
jno
mov
je
dec
sub
sub
incl
cli
inc
jmp
out
push
cmp
mov
subl
movsb
lods
add
les
ss
mov
push
cmp
add
std
mov
jmp
stc
aaa
inc
push
push
out
pop
push
cs
je
push
std
dec
out
xor
add
leave
ret
jne
ret
je
cmpsb
test
roll
mov
aas
lret
mov
push
jne
ret
jb
add
test
add
inc
clc
jle
add
push
inc
repz
outsl
ljmp
outsl
decl
cmpsb
notl
sar
rolb
ret
sub
mov
cmpsb
sub
push
sbb
call
ja
push
lea
pushl
clc
lcall
push
cmpsb
xor
loopne
sub
cmpsl
xchg
lret
sub
mov
aas
mov
xchg
aas
lcall
cmpsb
daa
mull
clc
cld
inc
cmpsl
inc
jns
nop
jge
cli
and
aas
mov
add
add
iret
stc
iret
les
push
xor
cmp
aas
rorb
xchg
mov
cmp
lea
das
jbe
xor
cmpsl
add
jbe
aaa
sbb
mov
or
mov
xor
aas
lea
rcr
shr
xor
push
aas
loopne
pushf
bswap
sarl
sarb
incb
mov
jle
ss
jmp
das
add
fildll
jg
mov
sbb
mov
mov
cmp
mov
add
mov
cmp
jle
sub
jbe
cmp
jl
test
imul
call
add
lcall
idivl
sarl
loope
gs
mov
mov
mov
lcall
pop
add
jle
cmp
push
add
testl
cmpl
out
jge
stos
out
cmp
shrl
dec
shrb
add
call
xor
out
aad
sti
out
idiv
xor
je
and
call
shll
pop
in
sti
std
call
sti
stc
out
jecxz
add
add
add
insb
ljmp
divb
imul
es
cmp
insl
add
mov
in
idiv
mov
testw
insl
sub
divb
inc
daa
std
nop
dec
cmp
mov
pop
stc
imul
bound
cmpsl
push
mov
es
mull
mov
sti
cmp
mov
mov
aas
out
incl
inc
xor
mov
add
cmpsl
pusha
mull
pop
aaa
jmp
inc
add
push
add
and
xor
lock
iret
xor
je
add
pop
sub
add
cmp
add
cmp
push
mov
mov
add
mov
jo
jg
out
cmpsb
jno
xor
sub
jle
xor
adc
insl
mov
xor
xor
xor
cmp
cmp
sub
push
cmp
lods
call
add
insl
cmp
lock
cs
sub
or
add
cmp
xor
cmp
test
xor
aaa
mov
fimuls
stos
xchg
ret
pop
xor
mov
adc
lea
push
negl
sub
xchg
lea
add
pop
test
jmp
jl
jmp
scas
push
shll
pop
inc
hlt
pop
incl
insl
in
ss
sub
add
das
lcall
popf
lods
pop
add
pusha
decl
lea
add
clc
pushl
or
mov
pushl
idiv
mov
je
jbe
movsl
jns
mov
jno
inc
push
call
push
loop
cmp
jne
or
mov
hlt
jmp
push
mov
sar
call
mov
sti
out
add
cld
pushl
fcomi
jns
dec
test
mov
gs
xor
call
incl
out
test
bound
sub
cld
cmp
xor
sub
sub
leave
in
add
dec
test
fwait
roll
push
dec
scas
pop
jg
popa
incl
gs
inc
cmpsl
insb
out
push
fidivl
sub
add
cmp
push
ret
sub
add
jl
pop
dec
jg
pushl
lods
lods
sti
sub
or
je
cmp
out
call
es
scas
mov
jne
call
lods
add
or
test
add
add
add
mov
jmp
lods
test
call
mov
das
aaa
add
xor
cmp
pop
test
mov
daa
mov
pusha
shll
push
sub
aaa
divl
sbb
dec
scas
fsubrl
shll
jle,pn
das
xor
inc
mov
imul
scas
ljmp
or
das
add
jno
sub
aaa
lock
jmp
mov
xor
adc
pop
call
add
xor
add
movsb
dec
ret
int
std
and
test
ficoms
out
push
xor
pusha
addr16
push
mov
mov
cmpsb
xchg
stos
repz
xor
movsb
add
fidivl
call
sahf
clc
inc
jmp
jmp
fsubrl
push
rolb
add
add
in
je
push
pushl
jb
call
xchg
roll
or
out
push
in
decb
jle
cmp
cmp
fimuls
push
testb
out
xor
cmp
push
push
mov
clc
pop
out
add
rcrb
cmp
out
add
call
add
les
add
ljmp
push
fimuls
inc
cmpsl
xlat
test
call
jge
xor
lahf
ret
mov
loopne
test
call
enter
cmp
sub
daa
add
or
or
xor
mov
add
cmpsl
mov
adc
add
and
dec
inc
imul
mov
cwtl
scas
sti
dec
test
cmp
lods
pushl
xorb
cs
in
xor
lar
or
call
popf
dec
xor
mov
jmp
scas
test
mov
xor
jo
xor
stos
aas
in
cmpsl
add
mov
sub
push
xor
lcall
add
sti
add
xor
mov
lds
out
xor
push
add
popa
mov
sbb
cmp
xor
sbb
dec
lcall
cmpsl
aad
and
add
xor
aad
pop
push
nop
arpl
pop
mov
sti
ret
movsb
pushf
sbb
or
or
and
add
or
xlat
xchg
das
call
push
or
jecxz
das
incl
adc
pushl
sti
not
das
push
push
mov
jne
lods
push
mov
mov
bound
imul
xlat
xor
mov
mov
scas
pop
pop
call
mov
push
add
push
andl
mov
je
cltd
push
call
add
call
push
add
sarl
testl
inc
idiv
pop
incb
push
in
push
in
lea
push
mov
repz
test
pop
pushl
das
add
mov
pushl
or
mov
scas
test
xor
push
mov
sbb
test
in
incl
ss
ljmp
jmp
sub
ja
cmp
sbb
mov
mov
mov
call
push
add
loopne
incl
xor
clc
mov
int3
cmpsl
call
in
xor
and
pop
not
in
je
xchg
add
rcl
fstsw
add
cli
pop
cmp
test
mov
popl
cmp
cwtl
addl
andb
add
fiaddl
cmp
js
mov
jg
cmp
push
je
add
sub
jno
dec
jecxz
inc
sub
sbb
sub
nop
jne
sub
xchg
sbb
sbb
sub
inc
out
sub
xor
push
ds
sbb
loopnew
ss
xor
xor
sub
xor
mov
decb
xor
xor
das
nop
sub
sub
cmp
das
subb
and
cmpsl
cmp
and
jmp
mov
idivl
jecxz
sub
subl
addr16
jno
inc
jmp
lods
in
mov
call
add
jne
mov
leave
ds
sbb
sub
sub
jg
sbb
push
or
xchg
lods
and
js
mov
ret
xchg
test
sub
jg
jmp
jle
decl
decl
rcrb
push
test
mov
cmp
lcall
call
mov
or
add
fdivl
jns
jmp
addr16
or
add
fdivl
test
incl
fsubr
inc
es
out
sub
decl
into
jno
push
cmpsb
popa
lods
incl
push
out
mov
cmpsl
sbb
cli
and
push
add
sub
out
sbb
sbb
out
sar
shlb
sbb
mov
cmp
lds
sbb
mov
adc
xchg
leave
sub
popf
shlb
call
xor
mov
mov
mov
mov
xchg
pop
cmp
sub
ds
ret
cmpsb
cli
out
es
call
add
cli
rorb
sub
sub
es
mov
sbb
pusha
sub
into
outsl
inc
in
add
jge
andb
sub
ja
xor
sub
xor
call
xchg
jmp
add
cs
add
add
add
ret
add
je
aam
imul
shll
ss
sub
lahf
scas
call
push
mov
lcall
test
add
rcpps
ficoms
out
add
xor
mov
orl
mov
daa
lcall
daa
jmp
pop
testl
add
daa
fdivr
pop
imul
sub
rol
cmp
jl
jne
lods
mov
test
je
incl
jecxz
incb
jecxz
idiv
cltd
fdivl
das
movsb
jns
test
popa
fdivr
lea
in
lcall
addr16
xchg
cmp
idiv
sbb
xor
cmpsl
cmp
add
add
pushl
lcall
fsubrl
xchg
mov
out
pop
fdivr
jmp
daa
mov
shrl
fdivr
movl
test
push
out
cmp
adc
out
cmpsl
mov
lcall
sahf
dec
mull
sub
jg
cmpsl
sbb
addl
add
add
xor
js
clc
andl
add
and
sbb
pusha
cmp
add
cmpsl
ret
adc
cmp
sub
inc
test
ljmp
paddb
ja
sub
sbb
sbb
adc
popf
add
sub
lock
sti
out
xchg
sub
loopne
dec
neg
in
jne
ret
aas
popf
enter
jecxz
push
sub
mov
or
test
dec
push
cwtl
and
push
ja
imulb
mov
dec
fisubrs
js
sbb
cli
cli
rorb
cwtl
call
jnp
and
mov
inc
sbb
outsb
inc
sub
dec
sub
and
jle
icebp
popa
jbe
or
xor
and
pop
sub
cmp
sub
sbb
arpl
and
outsb
xlat
sub
sub
scas
jmp
jg
pop
inc
dec
daa
jmp
outsl
lock
jg
call
push
popa
sub
xor
and
incb
call
and
idiv
cmp
push
andl
and
mov
jns
mov
mov
ret
jmp
jle
incl
add
inc
jmp
and
jne
lods
mov
jne
enter
push
test
pop
mov
add
xlat
js
push
popa
fldt
hlt
cli
jne
pop
jb
xchg
fisttpl
add
fdivr
lcall
shlb
decl
rcrb
cmp
jg
pushl
xchg
test
ljmp
jno
dec
push
scas
loop
call
pop
negb
adc
je
xchg
push
push
mov
jge
sti
push
mov
or
dec
cmpsl
sbb
mov
cmpsl
push
mov
sbb
jne
rorl
shll
pop
mov
loope
add
push
jp
add
lock
notl
jl
jne
xor
pushl
inc
mov
add
cmpsl
push
add
push
sub
push
lds
push
cmc
add
and
and
pop
mov
decl
and
insl
add
ljmp
into
fs
and
add
pop
ss
fisubs
mov
sub
or
push
ja
and
and
int3
ret
call
and
and
out
mov
mov
and
cltd
pusha
test
outsb
push
sbb
sbb
xchg
add
push
rol
and
push
xor
and
sub
inc
and
jbe
xchg
jbe
and
or
cmp
xchg
and
dec
or
pushl
divl
mov
jmp
andl
pushf
cwtl
sub
dec
ret
pop
mov
das
and
mov
in
or
mul
les
jne
mov
mov
push
idivl
add
pop
in
mov
pop
add
mov
jmp
movsb
das
mov
call
jns
jmp
mov
jne
jmp
fwait
dec
jecxz
mov
sti
ljmp
pop
call
mov
mov
sti
decl
mov
xlat
imull
jmp
fwait
mov
mov
sti
incl
mov
call
dec
mov
jne
jmp
lcall
jmp
popf
decl
in
in
adc
call
cmpsl
js
call
or
testl
mov
cmp
sbb
call
mov
mov
mov
mov
fists
mov
cmp
add
add
jmp
mov
std
and
pop
jg
nop
add
and
adcb
pushl
inc
or
mov
and
and
roll
ficoml
sub
ljmp
jp
adc
out
sahf
xchg
test
test
xor
ret
call
addl
loopne
dec
and
lock
and
jb
push
dec
cmp
push
jmp
dec
lret
mov
lods
shrb
mov
push
mov
jb
es
out
imul
mov
sub
lods
xchg
fisubs
add
sub
or
jne
adc
xchg
cmp
mov
add
mov
jmp
or
inc
jmp
int3
outsl
shll
sbb
cmp
push
repz
mov
cmp
push
mov
sbb
pop
inc
fnstcw
es
enter
push
enter
xchg
or
xor
jmp
sbb
je
sbb
mov
xchg
add
decl
out
xchg
pushf
icebp
sti
dec
jnp
jne
push
jne
call
pop
mov
jp
push
push
pop
fwait
pushl
mov
adc
jae
mov
adc
jne
mov
mov
sub
rorl
mov
jno
or
sti
pop
call
cmp
push
cmp
call
add
sbb
dec
mov
rolb
push
std
popa
pop
add
adc
or
test
mov
or
add
lock
pop
fdiv
dec
ret
mov
test
pop
and
lldt
and
mov
in
add
test
lahf
adc
xor
sub
dec
mov
incl
jge
sbb
mov
mov
inc
call
mov
outsl
inc
mov
dec
adc
mov
and
loop
fnstenv
roll
sbb
sbb
mov
lock
mov
sbb
jnp
sub
adc
mov
cmpb
hlt
clc
sbb
adc
mov
add
add
adc
mov
or
fcoml
add
mov
mov
pop
cs
aad
push
sbb
and
jmp
xchg
pop
pop
add
movsb
add
cli
add
push
rorl
punpckldq
cmc
rcl
or
add
add
sub
imul
jnp
movsb
add
xchg
cmp
xorps
pop
addl
in
je
mov
push
sbb
push
sbb
xor
push
sbb
movhps
push
mov
cltd
hlt
and
push
xchg
sbb
xchg
movsb
mov
mov
lea
andl
decl
push
out
add
idiv
sub
pop
enter
push
mov
lock
dec
sub
imul
add
sti
push
stc
jno
call
xchg
notb
ss
je
mov
sahf
sti
je
jns
pop
call
xchg
lea
hlt
dec
push
jne
jmp
std
pop
sti
mov
sti
je
jns
idiv
repz
pushl
jp
adc
leave
sti
mov
mov
cmp
xchg
testl
xchg
or
aas
mov
mov
add
movsb
es
add
inc
nop
or
es
ljmp
into
repz
lcall
lcall
sbbl
xchg
cwtl
popl
jmp
sbb
call
sub
jne
mov
pop
dec
stos
xchg
or
sbb
rcrl
mov
es
mov
push
push
nop
cwtl
test
sbb
or
outsb
adc
sbb
repnz
mov
push
mov
mov
xor
inc
push
pop
or
sub
cmp
mov
or
push
scas
sbb
mov
add
add
or
sub
sbb
das
add
pushf
adc
outsl
sbb
mov
mov
andl
sbb
or
inc
loop
ljmp
mov
std
out
sbb
jmp
sub
call
mov
call
and
add
movsb
add
add
scas
mov
pop
push
adc
stc
lahf
popl
rcll
sbb
or
cmp
mov
mov
movsb
or
adc
stos
inc
vunpcklpd
hlt
cwtl
sub
mov
sub
sbb
add
movsb
add
icebp
or
add
push
mov
inc
xchg
jno
jne
cli
je
mov
xchg
pushl
jle
mov
jg
add
adc
xchg
add
cmp
decl
movl
aad
lock
add
inc
out
push
mov
repz
ret
inc
notl
jno
fildl
call
xorl
jge
push
test
mov
cmpl
fcomi
jne
out
xchg
jno
jne
mov
jne
mov
rcll
aam
or
in
testl
cmp
xchg
out
popl
pushl
or
cwtl
cmpsb
test
pusha
and
jge
sub
jne
inc
outsl
xchg
inc
inc
test
call
mov
inc
adcl
es
or
stc
xor
add
stc
jnp
pop
push
push
inc
adc
pop
pop
push
fadds
fmull
mov
mov
xor
add
mov
aas
loope
mov
je
push
push
add
mov
or
ficoms
adc
mov
push
push
pop
add
and
in
aad
push
dec
or
incl
jmp
inc
add
mov
jae
adc
sbb
adc
or
add
add
add
in
pop
add
fstpt
jno
pushf
pop
data16
call
add
push
dec
sub
call
jo
and
negl
loop
lcall
sbb
jecxz
inc
sbb
js
jne
mov
xchg
jg
icebp
adc
jne
mov
jge
movsl
xchg
sbb
into
sub
jne
jl
std
mov
jg
mov
adc
mov
test
movsb
xchg
or
add
add
push
enter
lea
push
jne
divb
addb
ds
decl
testl
mov
ret
pop
add
or
push
leave
addb
xchg
call
call
cld
out
int3
idiv
cmp
jne
cmpsl
decl
jge
inc
jbe
lea
push
out
mov
decb
jae
out
push
hlt
decb
mov
out
inc
hlt
decb
clc
idiv
out
test
lcall
out
lea
mov
add
sbb
int3
test
mov
addb
adc
rcrl
enter
pushf
nop
out
cmpsl
dec
xchg
sbbb
add
nop
out
jne
addb
add
mov
out
adc
icebp
dec
push
sarb
fwait
ds
fiaddl
call
sub
stos
iret
sbb
or
add
add
adc
roll
lods
pop
xchg
sub
add
jmp
cwtl
lods
sbb
clc
push
mov
add
pop
adc
push
cld
pop
fcoms
adc
xchg
push
adc
incb
adc
adc
adc
adc
pop
inc
dec
xor
adc
sbb
push
xor
push
shll
loope
mov
push
jb
pop
lods
pop
inc
scas
add
add
in
sbb
dec
adc
les
push
add
or
mov
testb
push
adc
xchg
dec
jne
cmp
jbe
mov
pop
push
inc
push
lcall
xchg
sti
inc
imul
insb
inc
or
icebp
js
push
mov
test
or
add
push
push
adc
xchg
add
xor
add
mov
or
cmpsl
out
push
dec
jne
sub
sub
stos
or
cwtl
into
xchg
sbb
inc
push
bnd
out
xchg
incl
test
loopne
incl
repnz
call
push
test
push
repnz
lcall
jmp
mov
add
repz
incb
test
mov
shr
add
jle
add
inc
sub
push
call
or
inc
xchg
sar
cld
mov
push
addr16
out
and
jne
xor
jne
inc
mov
mov
iret
fiaddl
pushl
sbb
add
jge
jmp
out
add
pop
sbb
push
lea
pop
push
dec
xchg
mov
push
dec
sbb
mov
push
mov
repz
test
sti
out
lret
push
decl
rol
in
jl
cmp
push
js
repz
cmp
dec
cmpsw
sbb
mov
jg
add
rolb
cmc
sbb
jb
push
cmp
or
add
jae
push
ja
mov
push
adc
rcll
or
push
clc
mov
pop
xor
push
lcall
and
jne
rorb
xor
leave
or
inc
movsl
call
or
adc
inc
cmp
imul
mov
push
or
push
pusha
andb
or
add
std
sub
add
decl
cld
cmpsl
add
jmp
movsb
or
pushf
rcll
xchg
mov
add
jmp
stos
or
insb
jne
scas
mov
cmpsl
mov
push
sahf
push
dec
xchg
mov
add
jle
clc
subl
inc
data16
add
movsb
add
out
jp
jmp
mov
ljmp
add
add
dec
shr
inc
jmp
movsb
std
mov
fs
inc
decb
lcall
enter
out
pop
incl
je
push
pop
mov
lret
inc
sub
jmp
jne
in
cwtl
xchg
cmp
mov
idiv
mov
testb
mov
mov
mov
jmp
jb
add
or
cmp
add
mov
idiv
jmp
stc
jmp
mov
test
enter
cltd
mov
cmpsl
lock
mov
add
sub
sti
test
or
call
dec
decb
sbb
sbb
push
popa
or
xor
xchg
sub
cmp
mov
dec
xchg
or
fs
add
and
mov
jb
sbb
jle
or
out
pop
cld
pushl
pop
sub
popf
cmp
jne
mov
mov
inc
in
xor
sbb
enter
xchg
decl
add
sbb
or
add
fwait
leave
cmpsl
add
fsub
add
xlat
xor
out
incb
add
sbb
xor
test
and
roll
xor
lahf
gs
add
mov
cltd
iret
lock
in
jo
push
loop
pop
out
sbb
pop
cld
sti
shlb
rcrb
je
push
roll
cmp
shr
mov
sub
or
loop
cltd
pushf
test
add
lods
stc
mov
mov
ret
mov
add
lods
fs
negb
add
jne
mov
mov
sahf
cmp
in
scas
mov
and
in
mov
add
xor
add
cmc
pushf
xor
movsb
stc
mov
jmp
mov
mov
add
stos
cwtl
call
movsb
cwtl
ljmp
lock
sub
testl
stc
jne
out
arpl
or
cmp
mov
es
add
xchg
ds
lret
repnz
push
push
push
call
mov
out
notl
out
scas
cli
push
imul
mov
repnz
call
or
ficoms
notl
cli
cmpb
and
dec
je
push
push
mov
notl
jne
call
mov
repnz
jmp
mov
mov
lds
call
and
xor
ljmp
push
add
jne
repnz
sbb
ret
scas
mov
aas
call
loop
mov
add
xor
bound
xchg
in
cmpsl
sbb
inc
lcall
add
cmpsl
pop
shl
adc
add
cltd
decl
cltd
jmp
fisttps
push
sbb
mov
xor
popa
pop
cmp
push
push
inc
add
cli
pusha
mov
sbb
add
add
sub
lds
sub
js
jno
and
punpckhbw
mov
pop
add
insb
adc
add
sbb
add
push
xor
ficoms
and
pusha
orb
movb
dec
int
or
sarl
add
mov
jge
push
call
or
push
shl
test
pusha
lcall
sbb
inc
jmp
mov
ljmp
add
inc
jmp
mov
ljmp
movsb
icebp
mov
jmp
mov
ljmp
mov
out
not
stos
ljmp
mov
ja
mov
or
mov
repnz
stos
add
and
jmp
add
or
incl
rorl
call
leave
or
push
xor
pushf
imul
inc
cld
jbe
add
clc
sahf
mov
iret
mov
adc
out
add
ljmp
lret
test
add
jne
sbb
push
addr16
add
push
sbb
pushf
add
add
test
jne
sbb
push
cmpsl
in
add
daa
nop
lea
mov
jg
sti
sar
out
pop
add
fisubrs
call
pop
lcall
out
sbb
add
addr16
sar
inc
push
xchg
js
mov
jmp
jnp
out
mov
shl
sbb
or
mov
subb
add
add
jmp
ljmp
push
or
jp
lock
insl
add
shll
arpl
adc
loopne
loope
xor
mov
cmp
ljmp
mov
add
test
pop
add
or
sub
push
jmp
lret
testb
add
cmpsl
sub
repnz
aaa
add
jmp
cld
cmpsb
js
push
ja
adc
leave
xorl
add
jne
jmp
pop
jmp
inc
cmpsl
push
inc
data16
cltd
sbb
pushl
movsb
jne
cmpsb
popl
sub
ret
movsb
adc
mov
push
pusha
aas
sub
movsl
adc
jmp
or
push
movsl
aaa
pop
push
loop
call
fnstsw
jmp
fs
es
pop
aas
test
std
adc
out
add
add
cmp
jmp
jecxz
add
movsb
add
call
in
ret
pop
jmp
add
add
and
xor
xor
pop
ds
add
add
add
lret
arpl
inc
mov
push
mov
mov
lock
popl
or
add
cmp
pop
leave
ret
cmpb
jne
xorl
inc
jle
jne
push
rcrl
push
add
lds
dec
mov
jne
xorl
shr
add
xchg
inc
or
add
stos
loop
ja
sbb
add
push
lock
lcall
loop
sub
mov
enter
cmpsl
adc
xchg
and
cmpsl
push
ja
cmpsl
imul
inc
insl
add
cmpsl
repnz
js
lcall
or
repnz
add
add
in
je
jo
or
cltd
ljmp
pop
inc
lock
pop
or
sti
pop
or
fsubs
imul
lcall
jg
or
add
dec
mov
or
insl
leave
stos
or
push
jb
shll
xor
jbe
pop
cmp
add
lock
mov
or
cmc
cmp
add
and
lock
adc
sub
cmpsl
push
lock
push
adc
ss
adc
int3
data16
mov
sti
push
popf
ret
pop
rorl
and
ficomps
sti
loop
jne
mov
or
push
cmp
jl
cmp
jg
sti
or
nop
inc
add
inc
cmp
jmp
add
jns
jle
pop
shl
lods
add
movsb
lea
stc
je
cltd
cmovb
ljmp
imulb
xchg
add
movsb
insb
add
dec
ret
imul
xchg
pop
stc
adc
xchg
inc
add
push
or
mov
test
push
add
mov
std
adc
lret
push
imul
add
decb
add
add
clc
std
or
or
mov
daa
add
mov
andl
xchg
cli
inc
push
imul
hlt
stc
jno
push
out
mov
jmp
add
in
add
add
dec
add
inc
inc
out
ljmp
mov
add
add
pop
pop
add
push
dec
inc
data16
or
xor
mov
pop
add
adc
data16
icebp
insb
jmp
push
aas
xor
xorb
dec
pop
add
sub
popl
add
stos
add
adc
jns
jmp
insb
ljmp
add
cmpsb
sub
dec
add
jbe
push
add
clc
or
inc
xor
add
outsb
icebp
ljmp
fstl
fdivr
adc
roll
push
or
xor
ljmp
outsb
sti
fincstp
adc
shrl
jmp
jg
sti
shrl
xor
xchg
dec
sub
jne
xor
insl
jno
scas
ljmp
xchg
ljmp
xchg
ljmp
jg
push
sbb
incb
cmc
es
outsb
cld
push
mov
aas
test
add
dec
nop
sti
push
cmp
rcr
dec
mov
xchg
or
lcall
call
loop
jb
ljmp
or
jecxz
std
movsb
jmp
xchg
cmpsl
dec
cmp
popa
leave
shr
dec
mov
lods
insl
or
push
mov
test
in
lret
sar
cmc
je
mov
or
cmp
pop
leave
mov
push
pushl
ljmp
scas
push
pushl
ljmp
inc
jbe
add
add
jne
cld
jae
idivb
add
icebp
pop
rorb
fildl
add
mov
jne
jle
decb
test
cld
add
push
out
incl
mov
xor
push
es
pop
add
push
pushl
addr16
out
mov
decl
data16
cmp
cmpsl
inc
or
jmp
pop
lods
sub
pushf
sbb
pushf
and
test
jmp
outsl
or
scas
add
cmpsl
jmp
jmp
sbb
mov
jmp
add
mov
idiv
adc
jmp
inc
ljmp
mov
dec
add
mov
push
es
add
adc
sub
divl
test
shrb
mov
add
add
test
jmp
outsb
cwtl
mov
filds
imul
jmp
add
inc
add
inc
mov
jmp
add
insl
testb
call
add
push
pop
push
jbe
mov
cmpsl
add
outsl
cmpsb
add
subb
push
sub
add
jbe
add
or
add
cmpsl
out
mov
cmpsl
add
scas
out
call
pop
repz
jmp
stos
add
jmp
movsb
add
es
call
js
adc
pop
hlt
mov
sti
std
push
xor
aam
cs
divb
les
pop
aas
sub
cmp
stos
ljmp
add
insl
rol
pop
add
lods
ret
inc
inc
inc
sub
add
popa
inc
inc
add
nop
pop
add
pop
push
inc
aas
push
call
push
inc
inc
inc
mov
jae
pusha
pop
add
push
push
out
push
add
push
push
jmp
out
hlt
add
incl
mov
out
ss
add
enter
std
call
ret
mov
add
popa
call
inc
xor
jae
cmpb
popa
cs
stc
subb
xchg
cmp
jo
shlb
cmc
nop
into
mov
adc
ljmp
xchg
hlt
je
push
test
cmc
je
addr16
cmp
pop
adc
xchg
cmc
je
add
xchg
add
je
adc
xchg
lock
add
xchg
loopne
or
data16
add
paddusw
add
das
xor
loope
inc
add
sub
add
pushf
add
in
cmpsl
add
add
sub
icebp
sti
mov
sti
test
add
add
add
mov
jl
sub
jbe
add
mov
test
pop
lock
jge
lock
jge
lock
ds
push
adc
sbb
std
ljmp
sub
cmpsl
push
jb
daa
xchg
repnz
lods
mov
icebp
int
lock
call
and
in
and
add
sahf
fxtract
call
lahf
ficompl
mov
or
xchg
jle
pop
call
andb
call
cwtl
pusha
je
mov
incb
xor
jmp
push
lock
cltd
insb
arpl
sub
mov
sysenter
lock
int3
add
jo
stos
std
notb
add
jmp
add
xchg
rcr
out
imul
xchg
add
jmp
incb
add
or
inc
add
pop
push
add
int
add
add
pushl
inc
sub
mov
sub
lret
jle
or
imul
sub
add
lcall
call
or
or
xchg
push
call
mov
push
add
mov
outsl
call
mov
mov
push
push
call
cs
pushl
repz
loope
or
cmpsl
enter
ret
mov
fildl
lea
jnp
sbb
xor
mov
out
xor
pushf
fwait
ja
cpuid
sbb
je
adc
je
decb
dec
icebp
dec
add
stos
out
je
inc
ja
imull
or
in
push
inc
cmp
sti
or
decb
pop
add
iret
jnp
pop
in
out
movsb
or
cmp
fldcw
pop
inc
sub
xchg
icebp
jmp
add
push
dec
sahf
cmc
inc
cmpsl
in
jae
lret
push
jmp
xor
data16
lock
add
dec
adc
push
jbe
cld
jbe
in
cld
outsl
ja
pop
pop
sbb
fildl
jnp
lock
mov
icebp
pop
in
cwtl
fildl
jnp
lock
fwait
adc
in
push
cmp
lock
cmpsb
insb
lock
lds
in
push
jne
mov
push
in
shrl
push
insb
outsl
in
dec
add
mov
shr
out
jb
add
mov
in
enter
push
in
je
mov
hlt
pushf
jecxz
je
in
enter
push
jb
add
shr
je
dec
mov
clc
mov
sub
ficoml
in
or
mov
idiv
adc
test
adc
mov
jae
cmpsb
mov
decl
enter
fdivl
out
test
fldcw
hlt
jbe
aas
inc
into
out
test
stc
insl
inc
clc
xchg
enter
movb
sbb
xchg
inc
add
mov
call
mov
out
std
jne
into
test
or
or
mov
pushl
dec
call
jne
lcall
clc
cmp
test
fidivrl
cmpsl
orl
add
nop
sub
cmp
add
out
jbe
jp
pop
ljmp
lret
pop
fdivrl
add
jo
xor
fcomi
mov
mov
enter
xorl
cmpsl
fstpt
cmpsb
out
call
insb
in
je
fwait
sub
mov
mov
sti
jg
clc
jbe
imul
js
daa
add
ja
divl
ja
aas
and
incb
adc
and
sbb
adc
outsl
sbb
fwait
cli
adc
aad
das
in
or
in
icebp
push
sub
cld
and
in
icebp
call
imul
rolb
in
shr
cmp
add
ljmp
shl
in
mov
sbb
outsb
fucomp
sbb
nop
jno
call
in
bnd
andb
xchg
out
adc
mov
ja
pop
jmp
add
add
cmp
inc
add
es
test
test
push
call
loop
jae
jo
fisubrl
in
test
cld
cld
mov
add
scas
out
add
andl
dec
jbe
dec
into
push
cli
out
int
sarl
mov
outsb
call
cmpsb
sahf
mov
add
push
sub
jo
ljmp
mov
je
pop
lods
push
jmp
hlt
mov
add
gs
add
add
add
add
add
inc
hlt
push
add
repz
jne
mov
or
lcall
inc
cmpsb
mov
incl
fdivl
scas
incl
and
jae
loope
adc
fwait
lret
ret
or
cmc
incl
fdivl
push
int3
jg
adc
inc
lock
lret
jle
pushl
lret
adc
mov
add
jle
hlt
cmpsl
dec
ljmp
cmpsl
cli
out
cmpsb
jmp
stos
xchg
sub
fildl
add
or
add
cmpsl
adc
cmpsl
fistpl
addr16
cmpsl
les
imul
mov
inc
add
roll
cmpsl
inc
ss
data16
cmpsl
fildl
add
xor
fimull
and
nop
or
adc
cli
push
jmp
shl
in
mov
sub
rclb
jmp
dec
outsl
loope
mov
cs
ficompl
ret
xchg
push
andl
decl
addl
addl
push
in
cld
add
mov
add
fchs
sbb
lods
outsb
and
jmp
jmp
stos
add
add
pop
leave
inc
out
adc
inc
jmp
sub
inc
add
sti
out
and
inc
jmp
movsb
pop
xor
movsb
add
aas
dec
in
insb
test
xor
mov
jb
add
and
sbb
in
sub
jecxz
jb
add
add
incb
pop
es
push
cli
out
jecxz,pt
jo
out
in
outsb
and
movsb
add
jmp
shl
add
sub
addr16
cmp
inc
add
fdivl
imul
push
add
inc
add
inc
inc
dec
inc
xor
jmp
ds
jg
adc
out
mov
sar
ljmp
incb
xchg
jge
fadd
ret
push
mov
jge
hlt
call
dec
daa
call
mov
sbb
mov
data16
xchg
in
out
add
add
jmp
cltd
out
add
adc
inc
add
std
inc
inc
cmpsl
cmp
imul
and
addr16
lods
inc
add
cmp
inc
cmpsl
jae
inc
out
pop
add
jecxz
adc
out
and
jecxz
add
push
jmp
jp
in
lahf
mov
jl
mov
dec
mov
push
repz
mov
add
add
jecxz
lods
xor
cmpsb
in
dec
popf
mov
cmpsl
add
add
loope
push
sysret
call
push
cmpsl
add
mov
inc
jmp
add
adc
inc
cmpsl
loope
pop
jle
jmp
inc
cmp
sub
add
push
inc
data16
in
or
inc
add
cmc
jbe
and
out
in
xor
mov
pop
outsb
scas
ljmp
movsb
add
int3
test
lods
shrb
mov
je
int3
sub
mov
add
in
add
and
mov
imul
and
push
sbb
add
test
mov
loope
inc
divps
add
add
add
add
in
add
add
imul
and
push
sbb
dec
push
push
fidivrs
call
rcrl
add
jecxz
cld
add
or
hlt
aas
incl
leave
add
imul
push
movsb
push
push
and
or
add
push
dec
cld
push
jmp
addb
or
add
dec
push
mov
ds
jne
jmp
mov
lock
mov
test
inc
ds
cmp
icebp
add
add
sbb
mov
into
cmp
push
cmpsb
out
incl
adc
into
sarl
cmpsl
sbb
je
mov
mov
cmp
test
add
jne
xchg
push
sbb
adc
je
pop
pop
or
or
add
push
xchg
pop
sahf
cmp
shrl
mov
pop
mov
out
daa
data16
cmpsl
jg
push
jo
and
jmp
shlb
call
push
add
cmpsl
in
sahf
insb
add
fstl
mov
ljmp
imul
pop
loope
fstl
push
dec
filds
pop
jbe
sarl
movsb
add
into
add
das
push
push
loope
lret
loope
inc
cmp
imul
add
ljmp
add
add
add
pushf
incl
mov
je
int3
loope
faddp
in
push
push
pop
jp
leave
shr
aaa
mov
stos
push
call
pusha
loope
addr16
out
inc
jmp
mov
call
je
inc
push
or
loope
incl
ret
jno
jmp
push
sub
pushf
lods
ljmp
lock
jmp
addb
push
aas
inc
loop
or
outsb
add
jmp
inc
add
inc
inc
add
cmp
call
stc
cmp
pushl
call
leave
dec
or
push
add
xchg
add
shrb
or
push
stc
cmp
push
mov
sbb
mov
daa
mov
mov
add
jns
or
jns
jo
ljmp
mov
dec
add
dec
jne
cmc
jmp
pop
jmp
add
or
cmp
mov
add
loopne,pn
fdivs
push
push
icebp
mov
add
add
push
mov
imul
movsb
jmp
call
fsubrl
nop
incb
push
add
add
pop
pop
pop
cld
jg
dec
add
xchg
mov
pop
scas
or
fcmovbe
ljmp
iret
ljmp
insl
ret
add
sub
and
pushf
sti
add
ficoms
ficompl
fidivrs
adc
fscale
lret
add
out
call
push
scas
fstps
sar
fst
fstps
mov
inc
sbb
xor
mov
pop
test
lods
push
mov
dec
add
ret
pop
xchg
fstpl
hlt
add
lea
jno
sti
sti
sbb
fbld
mov
mov
sar
pop
xchg
inc
fucomp
fnstenv
loope
cmp
add
xchg
movsb
push
ljmp
decb
mov
repnz
push
add
es
repnz
or
jmp
not
jmp
add
scas
and
repnz
movsb
roll
add
jb
cli
mov
incb
lea
incb
push
fsin
sbb
jg
jp
sbb
data16
repnz
aam
xlat
je
mov
fsts
or
std
add
sbb
push
add
mov
incb
test
incl
add
mov
add
mov
lcall
mov
lcall
add
test
scas
std
dec
add
mov
mov
mov
add
add
mov
add
mov
aam
mov
mov
add
cmp
sarl
add
lret
mov
add
cmpsl
sarl
cmpsl
or
mov
cmpsl
jmp
test
stos
inc
add
jmp
lock
sbb
aad
fmuls
jecxz
aam
sbb
dec
jmp
insb
add
data16
mov
enter
rol
jae
insb
dec
adc
das
mov
mov
pop
push
jo
pop
add
push
pop
ficoml
mov
fiaddl
cs
cmpsl
add
xor
ljmp
adc
repnz
add
hlt
rcll
aad
out
aad
ljmp
aam
jb
aam
in
xor
divb
inc
xchg
xor
add
dec
mov
add
xor
ret
push
add
mov
lcall
and
test
jne
lcall
stos
dec
daa
insb
lock
add
je
pop
or
mov
cmp
cld
ss
shll
inc
orb
sub
aaa
adc
push
pusha
lcall
fcmovnbe
push
iret
add
sbb
adc
test
inc
add
xor
push
sbb
mov
jmp
add
int3
std
add
mov
sti
fnstcw
dec
punpckhdq
jmp
mov
mov
add
sbb
std
dec
inc
adc
xor
push
pushl
or
adc
iret
std
lea
loope
stos
inc
fs
leave
stos
mov
leave
jno
jmp
or
ret
push
mov
fidivrl
clc
call
adc
jl
cmp
stos
std
push
mov
imul
js
sbb
addr16
xor
add
push
push
push
repnz
xor
cmp
fdivr
sub
push
mov
cmpl
jae
dec
cltd
sti
or
popl
jbe
pushl
sub
incb
and
hlt
loopne
push
add
push
jo
leave
mov
mov
ret
aad
push
shll
push
sub
add
mov
add
or
in
xor
push
jecxz
ret
cmpsb
jge
mov
ficomps
xor
fucomp
les
outsl
dec
pop
fsubp
or
inc
add
scas
out
aas
out
add
pop
sbb
enter
and
inc
cmpsl
jg
mov
cmpsl
add
lods
jg
mov
enter
leave
jnp
mov
test
lock
pop
fcmovnbe
call
mov
xor
sub
add
faddl
add
std
mov
inc
call
jmp
mov
jle
movsl
add
inc
test
shll
lea
inc
dec
decl
ret
mov
inc
enter
fstl
shll
add
fildll
add
in
sub
imulb
mov
inc
les
movsb
add
add
adc
add
in
lea
adc
adc
rclb
dec
sub
repnz
je
int
adc
pop
cld
mov
movl
inc
mov
mov
jmp
push
call
roll
aam
add
mov
cmp
shr
pop
cmp
rorb
mov
cmp
jnp
dec
push
cmpsl
inc
or
inc
pop
inc
data16
mov
addr16
add
xor
int3
dec
js
iret
aad
xchg
pusha
flds
test
flds
add
mov
inc
flds
loop
add
cmpsl
fxch
inc
push
icebp
add
cmpsl
sub
cmpsl
flds
add
lret
push
dec
int3
add
dec
rclb
add
jp
rclb
aam
je
pop
push
int3
cmpsb
dec
inc
adcl
je
add
gs
jmp
enter
call
add
add
dec
mov
mov
sbbb
repz
pop
lahf
fiaddl
pop
jnp
cmp
add
sti
dec
pop
inc
fldt
dec
jg
cmp
jp
shlb
jns
iret
sub
into
lcall
jns
xchg
loop
xchg
add
pop
pop
inc
data16
call
add
jecxz
data16
add
bt
push
test
int
jmp
in
add
and
call
add
add
cmpsl
xchg
jmp
ja
jmp
stos
add
jmp
mov
clc
mov
imul
test
stc
mov
call
mov
add
push
into
flds
jne
cmpsl
addb
add
mov
inc
lock
lea
shrb
mov
xlat
rolb
rcrl
mov
push
or
mov
add
add
loopne
movsb
push
lea
ud0
inc
shlb
cmp
add
mov
or
enter
mov
in
cltd
sub
push
sub
sti
clc
add
add
je
icebp
xchg
inc
cmpsl
fnstenv
lcall
add
pop
push
clc
cmpsl
xor
std
test
mov
sar
mov
sbb
shll
enter
pop
das
jo
sti
out
ljmp
lcall
sub
mov
inc
out
mov
iret
test
sub
xchg
inc
add
xlat
inc
inc
cmpsl
inc
mov
or
add
add
adc
inc
test
cmpsl
push
rol
imul
add
xor
into
fwait
and
inc
cmpsl
test
subb
call
into
adc
mov
lret
mov
popa
cmp
cli
into
repz
lahf
leave
sbb
cmpb
sti
inc
push
jg
add
sti
iret
dec
push
loope
aam
data16
outsl
fidivrl
andb
je
fwait
jmp
add
add
cli
out
push
add
ret
mov
mov
jb
testb
dec
jmp
push
jge
imul
int
mov
in
jg
add
push
or
icebp
and
inc
imul
pop
cs
mov
xor
dec
or
xor
ds
inc
in
fmull
add
sub
inc
mov
or
fiadds
shrl
xor
xor
int
inc
mov
add
add
syscall
add
inc
lock
sub
push
sub
push
sub
lret
mov
jnp
sub
lret
mov
hlt
mov
xor
lret
add
ja
mov
jl
aad
lock
mov
mov
inc
pop
mov
jecxz
pushf
add
pop
fildl
add
sbb
mov
and
pop
add
push
ret
cmpsl
mov
push
fcoms
cld
aas
fldenv
add
fdivrs
mov
movsb
xor
lods
pop
add
flds
call
push
push
aam
cmpsl
stc
add
push
push
pushl
inc
in
fldenv
add
cmpb
add
cmpsl
jo
pop
lret
mov
add
add
inc
jmp
jnp
add
xchg
cmc
cmp
inc
data16
push
fldenv
pushf
fwait
repz
xor
inc
cmpsl
jnp
enter
cmpsl
subl
dec
fstps
inc
sub
dec
push
ds
lret
push
and
jmp
inc
jmp
jmp
push
mov
out
xchg
push
dec
fcmovnu
aas
cmpsl
add
pushf
rcrb
pop
ficomps
xor
ja
aam
lds
mov
add
push
pushl
cmpl
ret
movsb
lds
dec
or
xchg
pop
sub
in
les
pop
into
jl
les
fwait
inc
add
adc
fisubrs
fadds
stos
lds
dec
call
sub
les
cmpsb
loopne
adc
les
mov
dec
incl
sub
sarb
xor
std
xor
arpl
dec
inc
int3
lea
mov
incb
cmpl
push
test
jge
rolb
stc
inc
mov
inc
add
cmpsb
dec
std
leave
mov
mov
into
add
test
add
or
shr
mov
jb
or
sub
jle
mov
jbe
dec
pop
out
jecxz
fcmovbe
fcmove
mov
insl
je
add
je
and
push
lcall
xor
add
add
xchg
jl
or
jb
enter
dec
or
je
jmp
pop
inc
int3
cmpsl
insl
in
adcb
je
push
ds
rorb
insl
mov
fimull
cmp
shr
cwtl
mov
je
mov
outsl
mov
jo
xchg
je
add
fcmovnbe
sbbb
fcmovnbe
nop
arpl
xlat
ret
jge
mov
ret
insl
mov
ret
pop
fwait
loop
cmp
cmpsb
push
inc
xchg
ret
cmp
or
sub
adc
sbb
sbb
or
and
std
mov
sub
addr16
in
sbb
in
shrl
add
stos
dec
inc
cmpsl
add
ret
add
add
cmpsb
out
call
ja
push
jmp
stos
sub
adc
popl
push
mov
add
in
add
jmp
movsb
shll
jae
jmp
xchg
push
jmp
dec
jae
jmp
sar
dec
xor
testb
add
add
inc
lock
dec
and
mov
sar
test
sub
stos
stos
pushf
add
std
mov
fcomi
pushl
cmpl
mov
cmpb
jne
lds
mull
std
xor
inc
jmp
rol
mov
add
add
lds
add
add
std
lea
std
inc
xchg
ljmp
iretw
std
inc
push
or
push
leave
std
decl
ljmp
mov
mov
push
inc
vmovss
cmpsl
sahf
nop
rol
je
rcr
std
addb
jg
push
ljmp
cmp
pop
cltd
dec
cld
aas
in
inc
add
push
jns
and
imul
mov
fimull
xchg
pusha
les
fs
call
add
jb
ret
je
inc
push
insb
call
test
mov
add
adc
mov
push
cmpb
add
std
data16
out
imul
dec
inc
sub
stos
faddl
loop
hlt
pop
pop
lods
test
lock
add
add
in
jmp
stos
ja
jge
inc
pop
pop
ret
xor
jmp
negl
push
ret
adc
mov
ret
jae
inc
jge
mov
sub
cmpsl
push
jb
and
inc
adc
add
lret
call
bound
xorl
jmp
add
add
or
adc
add
movsb
test
add
and
pushl
mov
addr16
gs
and
test
jle
or
int3
imul
add
push
icebp
andb
adc
mov
or
fcomip
sub
pusha
dec
mov
clc
jb
mov
rorl
popf
mov
push
cld
add
lahf
mov
test
add
or
shlb
clc
mov
ret
cmp
add
jb
les
and
inc
dec
sti
add
adc
xor
in
pushl
ret
ljmp
incl
or
jae
sub
add
rorb
sub
decl
ret
mov
jge
stc
xor
std
mov
or
jae
sarb
mov
bound
mov
jne
inc
hlt
cwtl
vmread
test
stos
addr16
mov
mov
je
xchg
xor
xchg
mov
std
incl
mov
out
mov
sub
adc
pop
ss
adc
or
rol
pop
mov
je
push
out
lock
jb
stos
jns
add
rcr
sbb
rorb
jmp
mov
outsl
lods
nop
mov
dec
mov
nop
mov
cmc
movb
add
add
cmp
and
outsl
sar
xacquire
or
cmp
mov
in
mov
stos
jg
ss
mov
lahf
push
dec
cmp
mov
push
insb
add
jmp
mov
push
jb
add
sbb
adc
movsl
add
jmp
add
add
movsb
add
push
test
das
adc
iret
push
push
mov
mov
cmp
xorl
jne
and
adc
mov
adc
sub
adc
stos
data16
mov
add
push
add
add
das
or
and
add
inc
cld
mov
adc
jmp
lea
jp
call
mov
mov
cli
pop
cmp
pop
call
xchg
icebp
adc
jmp
imul
out
popl
add
popf
ja
adc
icebp
pop
call
xlat
inc
cld
mov
or
out
and
jmp
mov
sbb
pushl
jmp
sti
or
push
cmpsl
leave
mov
add
stos
jg
fwait
test
adc
loopne
or
getsec
adc
lods
sub
dec
stos
stos
stos
mov
mov
add
sysret
adc
mov
call
mov
mov
add
test
mov
add
cmpsl
test
xor
incl
add
mov
sub
mov
sbb
sbb
jmp
setle
out
cmpsl
add
fwait
sub
sub
stos
stos
mov
shlb
jecxz
lods
jp
add
mov
subb
loop
lods
jp
add
nop
mov
xchg
pop
in
fimull
mov
or
dec
mov
mov
and
jbe
xchg
mov
into
mov
jecxz
test
xchg
mov
scas
sub
or
dec
cs
mov
cs
inc
shlb
clc
push
in
sub
arpl
add
movsb
stos
pop
push
push
or
add
ja
rcrb
add
jns
pushl
inc
std
sub
hlt
fdivl
hlt
out
scas
out
mov
mov
je
sub
or
adc
push
push
or
mov
decb
and
jmp
decl
add
xlat
mov
ljmp
cli
pop
add
add
mov
or
or
js
addl
lock
or
test
ja
add
adc
mov
test
nop
std
in
repnz
mov
adc
in
mov
mov
orl
push
sbb
test
add
add
add
popl
push
mov
add
push
cmpsl
stos
add
cmpsl
sub
or
pop
push
leave
in
add
pop
mov
mov
sub
je
leave
in
add
lahf
adc
arpl
stos
add
cmpsl
push
aas
in
imull
ds
not
sub
js
aas
in
add
scas
cmpl
add
xchg
or
stos
pop
cmpsl
out
test
addl
jl
push
pop
out
shl
sub
add
ljmp
pop
mov
lock
call
xlat
push
fs
cs
stos
movsl
mov
mov
mov
aad
adc
add
add
add
mov
ret
cli
push
and
pushf
add
dec
jg
and
js
out
repz
call
lods
pusha
cs
and
adc
sbb
fwait
jo
clc
mov
test
lahf
add
in
mov
call
pop
cs
mov
rolb
mov
cmp
fdivl
xchg
mov
xchg
dec
mov
data16
lea
inc
push
push
jbe
call
repnz
fidivs
jl
movsb
aaa
es
mov
je
cmp
push
jne
pop
sub
adc
jne
pop
hlt
add
rolb
mov
sbb
jnp
push
loop
addl
add
add
je
jl
or
repnz
mov
popa
sub
pop
pop
xchg
ret
or
cmp
orl
add
sub
pop
leave
jl
add
repz
adc
imul
inc
jle
inc
lock
push
pushl
ja
or
rolb
int
sub
or
add
push
adc
mov
cwtl
mov
ljmp
or
lret
and
sbb
das
adc
mov
call
cs
scas
mov
lahf
inc
lods
pusha
call
lock
shll
call
and
adc
mov
aaa
cld
stos
popl
jae
aam
pop
outsb
fmull
add
sbb
cmp
loop
loope
test
test
outsb
and
int
repz
cs
addb
jp
int3
rolb
add
mov
ds
lea
and
icebp
stos
sub
jbe
sbb
insb
lods
clc
subl
cmpb
cmp
mov
ret
out
jmp
add
sub
add
jnp
scas
sbb
mov
add
scas
jnp
lcall
lahf
scas
je
sbb
popa
xor
inc
popf
mov
cmp
scas
je
cmp
clc
mov
jl
aad
ljmp
sbb
mov
jmp
ficoms
cld
push
mov
fstl
or
lods
pop
add
outsb
je
xor
sub
inc
add
xor
adc
scas
shrl
add
xor
pushf
mov
je
or
incb
test
jnp
add
pushl
mov
mov
sarb
cmp
jle
cmpl
jne
movsl
jno
and
add
mov
add
lock
add
add
out
lret
jno
push
jno
adc
ljmp
jne
adc
movl
repz
mov
pop
leave
mov
add
mov
add
aaa
cmp
push
jo
adc
adc
or
xor
and
add
mov
hlt
jg
sub
adcb
pop
outsb
pop
pop
add
js
add
fwait
jg
dec
xor
and
inc
inc
sahf
fcmovnbe
push
pop
add
cmpsl
mov
inc
inc
sbb
call
fwait
jbe
nop
fisubrl
cmc
pop
inc
in
mov
push
test
les
fwait
add
dec
add
in
pop
lcall
pop
mov
in
add
mov
loope
pop
mov
mov
lods
ret
cwtl
ss
fwait
mov
divb
popw
jmp
shll
inc
mov
push
cmc
lcall
ja
cmp
inc
and
and
cmp
cld
test
stos
adc
and
mov
ss
stos
sbb
ss
fwait
cmpsb
cmpsl
gs
out
stos
mov
stos
dec
fistpl
add
add
stos
addb
add
jmp
movsb
push
mov
or
jno
mull
sti
stos
in
jl
mov
or
roll
add
jae
rcrb
lods
mov
sahf
cli
push
shrl
imul
shl
scas
xor
clc
mov
shrl
cli
out
add
stos
loop
xor
pop
jmp
movsb
stos
je
or
xor
movsb
idivl
jne
sub
fadds
push
sub
inc
mov
or
jle
inc
inc
aas
push
pushl
mov
rcr
std
jne
sub
call
push
add
mov
rorb
ds
mov
int
repnz
jns
testl
mov
sbb
pop
pop
push
les
add
scas
jmp
add
pop
mov
inc
cmpsl
cmp
or
mov
ret
nop
dec
leave
in
add
daa
leave
sti
jae
sbb
or
mov
lods
daa
jg
fs
jo
je
stos
sbb
pop
repnz
les
loopne
cmpsl
inc
lret
ljmp
inc
dec
fwait
add
cmpsl
and
or
addb
xorb
inc
clc
cmpsb
fwait
add
xchg
lahf
ret
inc
adc
adc
push
add
cmpsl
add
ss
shl
loope
push
add
add
sbbl
inc
cltd
mov
test
add
and
and
add
mov
sti
adc
daa
call
jne
sub
jae
cmpsb
jp
inc
daa
call
push
inc
daa
call
and
sub
loope
mov
out
ss
in
add
cs
push
paddusb
mov
ret
jg
inc
data16
add
add
inc
imul
das
hlt
mov
cld
std
inc
add
xor
add
pushf
aas
fwait
andb
push
add
jge
add
roll
pop
cmpsl
dec
rorl
adc
test
testl
sub
add
add
testl
je
stos
dec
insb
add
cmpsb
dec
xchg
push
imul
cmpsl
je
out
mov
es
lea
dec
lea
dec
pushl
jns
psubsb
push
std
lcall
fcoml
inc
loopne
dec
inc
in
mov
pushl
mov
jne
sub
repz
sahf
decl
add
push
or
push
dec
or
lea
in
inc
movsl
mov
decl
jnp
ds
add
push
stc
xchg
pushf
add
or
xor
sub
mov
movsl
add
ja
je
adc
in
shl
clc
or
and
cmpsb
lcall
fwait
test
stc
sub
add
and
sahf
pushl
cwtl
fwait
test
pusha
mov
cld
js
mov
filds
lds
add
idiv
push
or
jecxz
add
mov
fwait
add
add
or
inc
and
negb
movsl
cmp
sub
das
mov
xchg
out
call
or
lods
inc
cmpsl
lcall
inc
ds
add
xor
ret
dec
add
cwtl
repnz
fwait
test
movsb
fldt
inc
jmp
pop
jmp
std
test
cmpsb
cmc
jae,pn
jae
mov
inc
test
popa
shrl
mov
mov
cmp
pushf
mov
movsb
sbb
fwait
lock
pop
aaa
pop
ret
popa
ja
push
dec
pushf
cmp
std
push
insb
xchg
add
jmp
jno
clc
mov
mov
lcall
or
repz
hlt
jbe
mov
loopne
add
leave
mov
ret
lcall
and
dec
pop
mov
dec
je
cmpsb
dec
push
stos
mov
cmc
into
or
push
test
es
push
lock
push
lods
xor
push
test
jnp
sub
sub
sub
or
sti
push
call
addl
decb
dec
jg
mov
scas
lea
sub
sub
sub
or
cmp
out
mov
outsb
pushl
add
jno
std
mov
fs
jle
std
incl
push
inc
add
movsl
decb
scas
out
pop
movsl
pusha
out
fwait
add
daa
sbb
sub
ret
stos
movsl
jae
sub
ret
mov
add
jae
sbb
cmp
add
pop
dec
cmpsb
je
cmp
or
rol
jbe
jmp
lock
incb
cmp
movsl
imul
cwtl
dec
decl
rol
pop
cmpsl
test
push
sbb
sub
lock
aad
pop
mov
mov
aas
push
add
add
mov
inc
movsl
and
adc
dec
lret
stos
cld
add
mov
jne
sub
add
pop
pop
dec
and
out
mov
add
cmpsl
push
out
fadds
lret
sub
mov
add
xor
das
scas
stos
jmp
cwtl
mov
in
nop
add
or
ret
shl
lea
lahf
je
cmp
pop
or
add
adc
cmp
in
mov
je
loope
dec
sahf
leave
or
mov
in
push
push
scas
push
cli
in
mov
pop
test
or
mov
push
fbstp
pop
in
jmp
std
roll
cmp
cltd
add
or
xor
lcall
daa
xchg
pop
pushf
xchg
test
adc
mov
stos
xor
jne
jnp
pop
dec
arpl
add
scas
stc
add
je
mov
leave
or
add
sahf
arpl
data16
decl
inc
in
fisubs
or
push
push
lcall
xchg
add
jae
cmp
je
mov
leave
mov
add
dec
dec
in
push
in
std
jne
push
pop
jns
lds
inc
add
popa
jae
mov
cmpsl
xchg
pop
cmpsl
jle
jmp
call
xor
jbe
pusha
aas
mov
dec
clc
mov
or
adc
mov
mov
std
xor
shlb
and
jge
shll
pop
or
pop
and
clc
nop
ret
adc
adc
int3
pusha
loopne
xor
bound
sarb
add
add
xor
cmp
mov
fsubrp
idiv
sti
add
add
jmp
inc
out
push
sbb
or
push
jno
cmc
sub
mov
inc
cmpsl
popf
push
adc
stos
outsl
mov
cmpsl
lods
jle
bound
add
pop
jo
jmp
mov
add
jmp
add
push
loope
jge
insl
mov
sbb
sub
data16
fwait
sub
mov
mov
add
inc
inc
and
lcall
or
aam
popf
and
add
sub
adcl
loope
dec
pop
out
mov
sub
sub
dec
inc
add
popf
je
pop
pop
or
lea
ljmp
roll
imul
mov
sbb
inc
popf
mov
and
sub
lods
stos
sbb
popf
aam
popf
je
cld
inc
pop
dec
pop
lret
roll
call
xchg
clc
in
imul
fdivr
call
inc
cld
push
mov
pop
call
add
cmpsl
cmp
push
inc
mov
call
or
cli
mov
inc
add
out
mov
push
jl
clc
xor
pop
call
cmpsb
mov
jmp
cmp
mov
jbe
jne
data16
jno
std
jne
xor
xor
je
xor
add
stos
aaa
mov
stos
sub
push
push
popf
cs
addr16
inc
add
or
test
mov
mov
mov
enter
push
sub
add
jno
pop
or
pushf
cmp
sbb
dec
cld
jg
inc
inc
cmpsl
jo
or
pop
pushf
clc
adcb
lock
call
add
insl
push
add
jb
and
sub
lahf
cmp
inc
sahf
push
cltd
inc
mov
rol
fs
jmp
popf
fwait
cltd
and
sbb
cltd
pop
shll
lahf
incb
sbb
psraw
pop
aas
sub
psraw
xor
mov
fwait
js
lods
lret
add
std
call
pop
fwait
stos
push
cmp
je
adc
pushl
add
inc
cwtl
dec
outsb
mov
dec
mov
push
adc
decl
ret
jns
jmp
fists
cmp
mov
call
jo
xchg
mov
es
jmp
nop
sub
movsl
in
push
add
out
call
add
cltd
or
sbb
xor
stos
test
cmp
sbb
mov
cltd
xchg
cltd
lcall
push
call
ljmp
imul
jbe
shl
dec
jmp
jnp
call
or
insb
nop
jbe
call
f2xm1
imul
push
dec
mov
mov
add
and
std
jne
jbe
or
fcmovne
ret
push
mov
jae
jbe
pop
lcall
shlb
inc
jg
dec
call
mov
jnp
or
cwtl
aam
sub
pop
cmpsl
jo
enter
push
sbb
xchg
out
out
sub
je
orl
addl
js
push
pop
aas
aas
inc
cmpsl
jo
stos
add
addr16
push
jg
decl
and
js
lcall
push
fwait
pusha
lea
clc
int
cltd
je
mov
decl
cltd
je
inc
out
mov
stos
imul
cltd
mov
stos
std
jle
cltd
sti
aam
pop
adc
cmpsb
lcall
xchg
adc
sti
xchg
adc
and
fwait
jmp
add
int3
andl
iret
mov
xchg
sbb
add
mov
aas
test
clc
stos
mov
ret
hlt
loope
stos
cmc
and
lcall
jmp
or
inc
jmp
stos
adc
cltd
dec
xchg
cltd
cmp
add
add
xchg
lds
test
push
cld
scas
mov
xchg
ds
ret
leave
mov
push
pushf
add
out
jmp
loope
add
stos
sub
shrl
xchg
je
xchg
add
or
sub
movsb
mov
push
clc
push
aad
pushl
sub
cld
mov
sub
push
mov
push
lret
in
xchg
je
test
dec
xchg
movsb
sub
adcl
out
mov
out
jmp
sub
jmp
mov
mov
shrb
mov
data16
inc
jp
hlt
and
jne
fwait
outsb
out
mov
mov
inc
pushl
push
xchg
jp
lock
popa
jp
call
add
out
aas
jp
or
out
mov
pop
in
jmp
pop
std
jne
addr16
push
push
imul
push
push
std
jne
data16
dec
cmpsl
lods
xchg
mov
lods
mov
sub
jne
xchg
je
rcrl
adc
fwait
test
adc
xor
push
lahf
ret
icebp
cld
inc
test
add
xchg
ja
inc
mov
cmpsl
inc
push
mov
add
adc
mov
xor
push
cwtl
fsts
pop
mov
or
sti
mov
and
pop
add
xchg
ljmp
sub
pop
add
fwait
movsl
mov
cmpsl
add
xchg
mov
xchg
aad
sahf
sub
xchg
pop
jp
int3
and
inc
add
jge
lods
adc
xchg
outsl
inc
sti
sbb
xchg
jnp
adcb
xchg
test
test
jbe
rcrl
aaa
rclb
adc
xchg
das
shll
pop
jg
mov
lret
sbb
stos
adc
jmp
cmp
inc
add
xchg
xchg
je
add
and
nop
adc
push
incl
push
xor
or
jbe
ljmp
std
je
dec
pop
xchg
sbb
and
cmp
je
cld
jbe
outsb
xor
or
xor
push
fadd
add
jns
jmp
addr16
push
shll
out
mov
rorb
jmp
stos
sbb
adc
push
mov
sub
ds
mov
fsubrp
jne
or
add
mov
addr16
add
clc
call
out
aad
std
jmp
jne
cld
int
mov
sbb
bnd
add
cld
pop
add
call
jmp
into
loopne
in
cmp
add
jmp
sar
incl
sar
mov
es
mov
outsl
cmpsl
pop
inc
add
add
cmpsl
cltd
pop
rcl
sub
leave
jns
pushf
and
fimuls
mov
cmpsl
rcrb
and
sti
out
inc
xchg
adc
mov
mov
xchg
incb
lods
ret
outsl
xchg
incb
cmc
inc
int3
push
jb
sbb
cmpsl
js
addr16
out
add
push
inc
cmpsl
and
or
mov
mov
pop
inc
add
or
fldcw
pop
add
cli
jb
push
addr16
imul
dec
test
push
add
iret
decl
addb
push
xchg
dec
out
mov
aas
in
xchg
and
sub
xor
sub
sbb
data16
add
pop
xor
and
cmp
xlat
add
inc
and
jge
cmp
rolb
popf
sahf
xchg
cmp
inc
aaa
push
lea
sbb
xchg
xor
scas
xchg
mov
movsl
lahf
mov
adc
push
add
push
call
xchg
xchg
out
cwtl
sahf
out
jo
ficomps
dec
mov
mov
rorb
sbb
movsb
out
cmp
mov
loope
add
cltd
subb
lea
jae
outsb
push
jp
gs
add
mov
add
movsb
and
add
call
push
or
sbb
out
mov
dec
sar
jne
push
out
sub
mov
push
mov
bound
ljmp
jno
or
mov
call
inc
cld
jne
subb
push
cmpb
repz
push
mov
mov
cmpsb
push
call
mov
jb
out
out
jmp
arpl
testl
mov
push
sbb
xor
nop
jo
xchg
lods
scas
pushf
adc
rclb
mov
xlat
push
add
and
push
das
inc
pushl
mov
jp
and
daa
xchg
add
clc
inc
cwtd
xor
add
rcrl
cmp
pop
mov
popf
mov
cmpsl
add
out
das
mov
out
cs
pushf
sub
mov
push
cli
ret
cmpb
jno
sub
ret
sbb
inc
out
mov
loopne
jmp
ljmp
add
add
inc
jmp
fwait
inc
or
mov
cmp
and
mov
xlat
cs
cmpsl
xor
cltd
push
mov
sahf
sub
repnz
data16
push
cli
nop
push
pop
mov
ljmp
insl
sub
or
xor
pop
jns
shr
das
mov
fists
out
rorl
add
add
push
xchg
xchg
test
mov
sbb
scas
repnz
je
mov
je
mov
push
or
imul
lock
dec
pop
and
mov
es
mov
cli
out
mov
pusha
push
add
in
inc
add
data16
dec
ja
rolb
add
add
mov
inc
inc
out
inc
dec
add
jne
data16
jle
or
push
mov
add
jne
push
push
add
out
clc
in
decl
out
pop
call
mov
push
cmp
clc
cmpsb
lea
dec
ja
cld
dec
icebp
pop
call
inc
ret
mov
jmp
inc
js
add
jne
insb
sub
dec
ja
inc
add
in
jmp
loopne
add
adc
cmpsl
or
or
pop
adc
mov
cmpsb
cli
out
dec
mov
outsb
fildl
add
and
subb
add
mov
mov
cli
lea
dec
pusha
lock
adc
decl
adc
inc
push
idiv
mov
lcall
filds
and
hlt
out
incb
add
inc
inc
cmpsl
rorl
cmpsl
cltd
jnp
out
add
scas
bound
mov
addb
add
adc
out
push
bound
sti
repz
andb
into
outsl
inc
mov
inc
dec
adc
xchg
sti
sbb
mov
fwait
xchg
icebp
fwait
sbb
add
add
icebp
mov
out
add
cmp
pop
xchg
add
rolb
jmp
enter
add
push
cmp
bound
add
movsb
add
jmp
movsb
add
pop
xchg
mov
stos
sbb
cmc
xlat
inc
jmp
sub
clc
jmp
add
test
or
cld
push
mov
mov
sub
out
lahf
insb
test
sub
xchg
push
jle
dec
add
mov
jl
cmpl
ret
add
pop
ret
add
sarl
jge
repnz
dec
push
add
lret
jb
incb
pushl
or
in
sti
push
out
imul
mov
jl
jne
out
imul
mov
push
out
push
jmp
pop
inc
clc
inc
out
imul
repz
out
out
pushf
incl
jae
mov
sar
decl
add
add
jae
jns
or
cmc
imul
cmpsl
and
jae
jmp
add
add
cltd
sub
out
stos
ljmp
sar
enter
cltd
add
out
in
dec
push
jno
dec
mov
repnz
xor
xchg
mov
or
out
imul
call
adc
push
and
cmp
out
add
pop
sub
gs
add
add
mov
mov
add
xchg
add
add
add
call
add
or
pushf
sub
cmpsb
xchg
add
add
or
xchg
adc
inc
jmp
xchg
cmp
adc
add
xchg
orb
push
adc
dec
scas
inc
add
subb
xchg
pop
push
sub
lret
push
mulb
call
jae
orb
sub
out
adc
mul
bound
cwtl
and
ljmp
or
cltd
push
sub
cmp
or
xchg
hlt
repz
cmp
and
das
xchg
mov
inc
or
add
or
mov
pop
pusha
iret
pop
aam
nop
inc
dec
inc
xlat
jmp
out
dec
ret
mov
in
call
xchg
adcl
xor
or
add
mov
or
in
jae
std
jne
popf
mov
jne
sahf
xchg
and
add
js
cmp
add
add
sahf
jo
cmp
push
inc
ds
pop
cwtl
mov
mov
or
sbb
jae
out
sub
std
jne
pushf
and
mov
add
mov
je
xor
mull
imul
inc
out
xor
mov
jo
out
cmp
add
sbb
xchg
lcall
enter
push
sub
jg
repz
add
test
xlat
dec
fsubs
lds
subb
dec
lea
cmpsl
and
addr16
add
test
sahf
inc
out
sub
add
add
lods
sub
and
sarl
jo
clc
mov
cmpsl
add
xchg
sbb
sbb
add
add
or
push
sar
subl
dec
sub
adcl
and
xchg
scas
or
pop
or
push
sbb
inc
movsb
add
cld
subb
jle
adcl
stc
pushf
push
and
add
inc
mov
mov
leave
mov
inc
and
jmp
add
add
add
sbb
pop
aam
mov
jnp
jle
cmp
pushl
mov
add
in
add
roll
add
cmp
daa
test
jge
fxch
inc
push
and
xchg
mulb
mov
fisubs
jl
shrl
repz
roll
mov
jl
cmpsb
fisttps
call
pusha
pop
push
testb
and
les
and
jge
hlt
mov
in
mov
cld
je
push
jp
les
jmp
mov
std
jne
jmp
xchg
ret
mov
divl
dec
aas
add
cmp
inc
jmp
or
jp
cmpl
jae
lcall
cmp
dec
pushl
out
adc
push
jp
push
ss
pushl
lret
and
cmp
into
add
push
push
pushl
adc
jb
std
call
test
mull
inc
mov
imul
push
cltd
jg
cs
push
notb
test
pop
xchg
add
jbe
and
pop
negb
gs
xchg
pop
jg
out
incl
jno
mov
pushl
mov
cmpsl
sbb
outsl
mov
xor
ds
cld
jg
lahf
orl
addl
adcb
lahf
addb
and
jnp
testb
add
add
jnp
mov
jae
adcb
imul
sub
cmp
imulb
jnp
mov
jb
jg
cmc
lock
mov
add
xchg
jg
push
jg
imul
cld
jb
jg
lock
leave
jp
push
inc
into
test
mov
ja
jp
addb
add
add
outsb
sbb
aam
jns
loope
inc
cld
dec
clc
js
push
clc
js
push
test
ss
testl
out
sti
adc
sbb
jmp
pop
jmp
fbld
movsb
test
addr16
ret
daa
rolb
out
or
ror
lods
inc
jae
roll
mov
sub
divl
add
inc
inc
mov
dec
ret
adc
loope
add
ljmp
or
xchg
inc
in
insl
sti
inc
dec
add
fmull
clc
or
xor
push
push
ds
jae
mov
imul
in
lods
dec
cltd
clc
std
dec
xchg
test
jp,pt
call
mov
ljmp
inc
subb
aas
std
jne
in
rorb
xchg
sbb
xor
or
call
mov
inc
inc
cmpsl
imul
cmpsl
imul
stos
idivl
add
inc
cmpsl
call
jge
mov
add
rcrl
jo
jl
imul
pop
dec
hlt
lret
pop
and
cmpsl
mov
jmp
and
pusha
push
fadds
testl
sub
sti
and
or
imul
scas
add
cmpsl
in
cmp
add
imul
loopne
xchg
xchg
add
sub
sub
lret
pusha
add
add
add
subb
add
pop
insl
cmpsl
add
addb
add
add
imul
js
fldl
and
sub
add
or
hlt
out
cmpsl
ljmp
inc
or
pusha
cmp
shr
cmc
sbb
push
mov
or
icebp
mov
add
pushf
mov
in
sub
repz
or
lods
add
jmp
add
movsb
inc
sub
push
add
mov
push
insb
pop
jbe
jmp
popf
jle
jmp
lods
push
mov
hlt
je
icebp
fucomp
out
ss
or
addr16
jne
xchg
or
inc
jmp
lret
jmp
divl
jmp
mov
mov
jne
ficoms
or
fiadds
jo
incb
lea
push
std
jne
clc
jae
add
fildll
jg
or
lcall
add
jne
clc
adc
pusha
decb
ds
ljmp
out
aaa
clc
std
mov
mov
push
std
jne
addr16
imul
std
adc
push
shll
add
out
sar
jae
cmpsb
xor
add
jb
lcall
clc
std
ljmp
std
jne
sti
jae
cmpsl
inc
int
lock
js
lret
push
test
mov
je
stos
push
out
sub
cmpsl
pushf
out
jmp
insl
imul
and
test
test
mov
repz
outsb
jmp
adc
out
divl
comiss
imul
add
out
pop
dec
lock
test
enter
push
sub
add
adc
jbe
sub
push
ficoml
std
sbb
add
add
inc
arpl
add
jae
add
jmp
and
test
mov
in
nop
js
jbe
lea
jmp
push
push
add
add
pop
rol
je
pop
repnz
js
shlb
and
jo
jae
aad
loop
js
mov
pop
jae
imul
and
pop
loope
call
js
jae
ljmp
push
cwtl
mov
stos
ljmp
dec
insb
dec
jo
imul
in
jae
pusha
add
imulb
call
dec
mov
fistpl
mov
in
dec
jle
jnp
addl
scas
imul
fistpll
push
clc
imul
insl
jno
jo
data16
fcomp
inc
int3
enter
mov
push
mov
faddl
inc
jmp
test
loope
jge
ljmp
stc
clc
jae
pop
jmp
ficoms
mov
loope
lcall
jae
call
stc
mov
testl
fst
inc
sbb
std
mov
loope
ljmp
jb
call
sbb
std
jne
fnstsw
mov
loopne
fnstenv
call
cltd
mov
negl
fnstsw
add
loopne
jmp
add
pop
jo
decb
mov
scas
jmp
pusha
je
sbb
jne
clc
xchg
imul
push
imul
aas
insb
fcoms
inc
shlb
je
iret
push
mov
idivl
jg
sti
cmpsl
mov
pop
cmpsl
push
mov
and
ja
cmpsl
push
leave
incb
bnd
test
fdivs
mov
add
shlb
pop
push
cmp
rcrb
adc
popw
jmp
inc
adc
jnp
mov
add
cmp
or
push
add
sti
test
movsb
cmp
jl
cmc
shrb
mov
pop
lods
je
outsb
movsl
out
mov
adc
mov
sti
test
fnstsw
jo
add
shlb
mov
out
outsl
icebp
inc
hlt
sub
add
cli
inc
shl
outsl
inc
je
cmp
lea
cs
jae
pushf
mov
je
mov
jo
or
xchg
cmp
in
movsb
aad
add
jnp
or
or
fdivp
scas
je
add
cmp
frstor
je
insb
or
cld
mov
call
push
xchg
xor
inc
jge
idiv
xchg
gs
das
adc
mov
loopne
mov
or
ret
mov
movsb
stc
mov
cwtl
add
mov
add
cmp
add
add
xor
add
dec
out
push
add
or
out
push
mov
in
inc
ljmp
call
add
push
mov
jbe
dec
inc
mov
add
lock
push
push
push
add
rcrb
mov
out
inc
fadds
add
jmp
push
pop
incb
shlb
xchg
push
sub
mov
mov
adc
dec
repz
jnp
jno
sbb
pop
out
cmpsb
jno
sbb
mov
pop
ficomps
pop
pop
dec
pop
aam
inc
jo
out
sbb
and
pushl
fisttpll
mov
ret
incl
add
popa
add
dec
out
sar
add
jb
cmp
es
outsb
add
cld
jo
jno
and
fisubl
in
out
cmp
or
add
mov
pop
jno
and
sbb
lock
aaa
insb
std
jo
add
pusha
inc
fcmovnu
mov
pop
shr
jae
shlb
imul
push
outsb
pop
movb
add
add
imul
int3
subl
sbb
mulb
add
inc
cltd
test
test
add
cmpsb
popa
jae
call
lock
push
jmp
movsb
fdivr
shlb
test
mov
mull
cmp
testl
add
jmp
movsb
imul
add
add
out
mov
repz
js
dec
cmp
jp
mov
mov
push
psubq
jmp
cmp
cld
addl
jnp
add
repnz
pushl
mov
cmc
decl
fidivl
popa
inc
stc
out
in
icebp
fscale
push
dec
outsb
dec
incl
std
incl
mov
call
mov
out
mov
icebp
std
ljmp
dec
ja
aas
push
pushl
or
call
ja
loop
stc
fsubrs
data16
inc
mov
fscale
incl
fscale
mov
cmc
decl
test
cmpsl
pand
mov
popa
and
pop
idivb
add
add
add
push
add
js
insl
je
ret
aas
pop
mov
outsb
decb
adc
setnp
cmp
pop
divb
and
xchg
adc
mov
adc
adc
adc
sbb
dec
idiv
push
insb
mov
dec
insb
call
sbb
fmuls
insb
je
push
fnstcw
shrb
xlat
mov
test
imul
loope
addr16
cmp
insl
jns
adc
jno
gs
jo
insl
dec
mov
insb
pop
push
inc
pop
out
cmp
jne
push
and
insl
and
rcrb
or
insl
or
idiv
pop
jle
cmpsl
add
inc
pushf
add
cld
andl
dec
add
fldln2
loopne
xchg
ret
pop
mov
incl
mov
imul
adc
xchg
xchg
jmp
dec
ret
movsl
add
imul
imul
daa
lcall
inc
add
jno
jmp
call
mov
hlt
test
mov
movsl
addr16
ret
add
mov
pop
adc
loopne
decb
out
in
mov
add
xor
pop
subb
mov
jae
add
call
test
inc
testb
add
lret
repnz
pop
jle
push
xchg
imul
cli
dec
mov
push
fnstenv
icebp
jae
call
add
adc
add
jb
xlat
mov
decl
fsubrs
incl
pushl
lret
rcr
mov
jmp
hlt
mov
lret
add
xchg
cmpsb
adc
add
addr16
dec
scas
xlat
fdivs
push
jae
sbb
imul
int
into
dec
negb
subl
mov
xchg
in
imul
fistps
add
xor
jno
pusha
out
pop
dec
mov
push
loop
out
mov
jb
cmp
add
bnd
and
pop
movhps
jecxz
cld
imul
pop
imul
lcall
fldenv
and
imul
rcl
das
outsb
ret
call
imul
jp
push
cltd
lea
addl
test
fs
pop
pop
fs
add
leave
rolb
push
mov
adc
andl
repz
imul
and
push
adc
fwait
adc
push
leave
arpl
push
add
arpl
jnp
pop
add
push
scas
jecxz
aas
fs
push
mov
ret
add
fs
je
insb
mov
out
xadd
jmp
pcmpgtw
sbb
fiaddl
jmp
xchg
pop
imul
scas
rcrl
fs
aam
pop
mov
fs
aam
arpl
dec
sti
out
add
dec
mulb
pop
mov
fs
pop
xchg
insb
decb
insb
popf
aas
add
repnz
jmp
fidivl
call
stc
mov
neg
test
fdivp
stc
lds
stc
mov
repnz
pushl
cmp
cmp
inc
clc
daa
in
sti
ljmp
ljmp
jle
rorl
add
add
mov
int
cli
push
cmp
pushl
out
fwait
jmp
std
jne
movsl
dec
incl
inc
add
jmp
popf
inc
imul
cmpsl
imul
lock
jb
pop
xchg
mov
add
dec
add
cmpsl
mov
xor
xor
bound
add
add
jl,pt
out
cmpb
test
call
jae
adc
push
int3
out
xchg
gs
divl
add
inc
jns
dec
fisubrs
cli
out
inc
gs
aas
xlat
and
inc
daa
add
add
inc
dec
or
jno
sbb
lock
loopne
nop
pop
out
gs
add
add
lods
push
rcl
pop
sbb
mov
test
xor
out
shr
fucomi
mov
ret
icebp
inc
hlt
stc
sbb
jo
test
pusha
shlb
mov
pusha
inc
mov
inc
pusha
push
cmpsb
rorb
push
adc
call
push
add
pop
pushf
or
cmpsb
int
pusha
enter
push
jb
test
cmc
fidivrl
pop
sbb
aas
mov
pushf
sar
orl
addr16
pop
ret
sti
lea
jmp
mov
pusha
sbb
decb
fs
dec
outsb
push
pop
call
push
fwait
sbb
add
add
add
mov
jne
in
cli
xor
std
pushl
lock
push
pop
jae
shll
cmp
sub
in
pop
push
sbb
add
push
mov
jge
sti
push
or
imul
into
cmp
icebp
mov
inc
stc
subl
dec
cs
add
and
je
outsb
lods
dec
iret
push
push
call
xchg
ret
enter
add
loop
push
xchg
movb
xchg
std
jne
ljmp
mov
std
jmp
push
jg
imul
loope
push
shr
arpl
sub
mov
test
popf
xchg
daa
arpl
mov
or
ret
sub
add
outsl
sub
in
jle
popa
je
add
cmp
mov
dec
dec
imul
inc
rcr
add
pushf
xlat
pop
mov
mov
jmp
cmpsl
pop
push
jmp
aam
test
jae
add
cmpsl
adc
dec
out
popa
je
add
cwtl
leave
cmpsl
add
mov
imul
xor
lock
bound
lcall
adc
fsubs
pop
dec
push
insb
ret
call
add
icebp
push
jmp
inc
inc
pop
mov
cmpsl
add
mov
ljmp
ffree
call
add
add
pusha
xor
mov
daa
sbb
fadds
sbb
xlat
lahf
inc
sub
add
add
daa
add
push
add
sbb
pop
push
pop
mov
inc
xor
mov
add
pop
jmp
and
cmp
jmp
call
xchg
movl
in
out
scas
pop
mov
add
jmp
movsb
add
push
incl
out
pop
pop
jb
push
pop
mov
ds
dec
fisubrl
mov
std
mov
testb
pop
addr16
jl
mov
push
movl
cmpsl
cmp
decl
or
push
divb
inc
rcll
data16
add
pushl
push
or
loopne
inc
jle,pt
mov
or
push
inc
rolb
xor
inc
imull
call
repnz
mov
add
gs
cld
into
mov
js
cmpsl
imul
lahf
jae
xor
rorl
ret
pop
pop
push
lahf
push
mov
imul
addr16
idiv
mov
pop
je
jl
xchg
sub
lcall
jp
push
mov
pop
xorb
je
jae
dec
imul
add
add
cmpsl
imul
push
pop
cltd
add
das
push
jae
pop
mov
and
shrl
popf
add
pop
push
add
pop
or
mov
or
mov
ret
call
fcoml
ljmp
test
ret
pop
dec
fsubrs
pop
addb
jmp
mov
add
ljmp
cmpsl
inc
or
fsubs
pop
sub
add
ljmp
pusha
pop
int
out
or
icebp
incl
enter
push
loop
pop
or
pop
pop
jmp
lret
pop
mov
dec
shl
lods
mov
loopne
inc
arpl
fildl
movsl
inc
incb
jle
je
mov
or
out
sub
call
jl
xor
push
rclb
call
loopne
incb
adc
out
jae
rcrb
fcompp
jmp
mov
fs
add
aad
std
jne
jmp
cmp
or
fildl
push
mov
and
or
es
cmp
and
shlb
inc
lcall
call
or
das
add
stos
mov
or
mov
call
or
jne
ljmp
sbb
std
adc
ja
movsl
mov
cmp
push
push
jb
jp
incb
jmp
add
add
mov
pop
xchg
push
add
mov
push
das
inc
cmpsl
xor
add
push
pop
mov
mov
or
pushf
pop
lods
stos
rorb
js
pop
cli
arpl
push
push
add
addb
mov
add
cmp
aas
out
xchg
pop
pusha
cmpsl
jmpw
insb
add
push
pop
pop
and
data16
jnp
mov
push
mov
pop
addb
add
add
add
out
jmp
add
xor
test
jmp
add
push
push
push
mov
fdivs
leave
ret
call
pusha
scas
add
add
addb
add
mov
push
pop
insb
push
mov
hlt
repz
or
inc
push
pop
xor
cmp
iret
push
imul
add
add
adc
pop
lods
cmp
add
ljmp
popf
add
outsb
xor
ret
jmp
push
cltd
cmp
mov
jae
lret
sub
lds
fcmovb
call
push
mov
jmp
add
scas
sbb
inc
in
inc
push
jb
add
int
ss
push
idiv
add
sbb
jmp
rorb
movsb
test
negl
mov
scas
jle
call
ja
es
add
jo
std
push
dec
ret
incb
mov
out
aaa
fnstcw
mov
aaa
nop
or
decb
pop
out
test
incl
dec
mov
mov
sbb
call
aam
fnstcw
jo
leave
test
fnstcw
std
mov
decl
add
mov
mov
das
jmp
fstpl
loopne
cmpl
cwtl
fisubrs
shrb
mov
sar
cmpsl
imul
addr16
jle
cmpsl
pop
add
mov
aas
js
push
popf
pop
add
sti
lret
add
rcll
aas
rorb
cmpsl
fdivrl
or
pop
xchg
ret
cmpsb
or
lret
ja
adc
sbb
rclb
add
add
add
push
icebp
push
mov
push
xor
push
fsts
mov
repnz
leave
pop
mov
push
aad
pop
pop
test
mov
push
mov
push
mov
nop
je
movsl
push
adc
push
jno
test
mov
cld
lret
xchg
pop
mov
fisubs
lds
xor
add
lds
mov
add
pop
push
inc
push
and
lds
call
movsb
push
mov
push
push
adc
call
push
xchg
mov
dec
test
push
std
divb
add
sbb
ficomps
icebp
xchg
push
inc
push
mov
stos
inc
jge
push
pop
addr16
add
add
sahf
add
xor
movsl
add
cmpl
mov
jl
add
add
int3
fidivs
data16
lock
addr16
movsl
add
inc
pop
sbb
add
rorb
test
shl
dec
decl
mov
cld
adc
call
mov
data16
add
call
sysexit
adc
jne
incb
dec
mov
xor
pop
imul
add
add
rolb
call
pop
xchg
repnz
inc
ret
jae
and
lcall
out
cmp
add
pop
pop
mov
jae
add
or
inc
rorl
pop
mov
add
add
jge
call
decl
pop
inc
jb
push
add
dec
shll
pop
push
test
add
loop
inc
cmpsl
xor
repz
or
je
xor
push
cmpsl
pop
stos
or
push
jmp
pushf
fdivr
setnp
idivl
sti
jmp
inc
or
mov
xchg
push
cmpsl
pop
std
mov
in
add
or
icebp
ret
lea
inc
fstps
dec
mov
and
les
fsubr
push
call
adc
push
jmp
sbb
push
dec
enter
leave
cmp
mov
js
loope
cmpsl
inc
fisttpll
pusha
add
mov
mov
xchg
dec
mov
outsl
push
jns
movsl
push
inc
or
fadds
inc
xor
subl
add
ficoml
jno
add
outsb
and
repz
push
aad
cmpb
ret
call
je
inc
jmp
imul
int
add
insb
das
dec
push
sbb
hlt
jno
inc
jmp
push
dec
jmp
movsb
add
je
push
dec
push
mov
dec
je
div
cli
pop
fs
or
add
out
scas
add
push
leave
je
sub
imul
push
stos
sbb
arpl
testl
es
std
jne
mov
hlt
movsb
jne
mov
sti
cwtl
aas
decb
into
sub
inc
mov
adc
mov
ljmp
sub
push
mov
out
call
lds
jae
mov
add
add
into
mov
hlt
cmpsb
dec
xor
leave
mov
cld
cli
add
pop
inc
push
mov
ret
mov
push
out
loope
mov
cmpl
and
sbb
out
add
or
add
repz
ss
ret
push
adc
bnd
cmpsb
push
sub
add
add
add
add
icebp
cltd
add
fsubrs
xchg
and
push
inc
in
lret
mov
insl
cmp
test
pop
lea
sub
push
xor
push
std
js
mov
xchg
add
add
inc
call
dec
push
dec
test
add
subb
jbe
cmp
add
add
dec
sub
adc
in
dec
dec
popf
inc
cmc
xchg
add
add
call
cmp
dec
sbb
add
add
cli
or
jg
imul
mov
add
dec
xor
clc
xchg
sbb
add
inc
push
lods
xchg
iret
les
push
push
lds
or
pop
mov
cmpsb
add
dec
jmp
ljmp
mulb
or
in
data16
into
or
mov
push
imul
push
mov
sbb
fisttps
mov
push
out
mov
inc
je
jl
add
movsb
ja
xor
jno
imull
out
lahf
add
shlb
repnz
xlat
ljmp
add
nop
mov
or
clc
in
jle
jo
or
jmp
pop
andl
inc
dec
add
add
std
mov
add
leave
aas
testb
add
dec
test
incb
movl
mov
add
jae
out
push
push
aas
repnz
add
ljmp
mov
adc
push
mov
shrl
add
call
cmpsl
scas
pop
jmp
adc
sti
xor
dec
cmp
add
lods
idivl
jb
jno
inc
pop
jo
inc
inc
js
call
lods
cltd
and
push
push
xor
loopne
je
fadd
pop
sbb
data16
addr16
dec
xor
xchg
sar
pop
lahf
cmp
and
dec
dec
sti
fcmovne
jmp
outsb
xchg
push
in
dec
adc
xchg
jmp
xchg
dec
inc
pop
add
mov
aad
mov
inc
imul
xchg
ror
dec
mov
push
lds
add
cmp
and
fisubl
bound
inc
lea
add
inc
hlt
cld
and
add
shlb
cmp
jg
or
add
add
xchg
inc
mov
jmp
add
inc
pop
cmpsl
add
inc
push
decl
fisubs
inc
call
out
dec
push
stos
fadds
fidivs
push
fst
add
xchg
add
sub
stos
stc
mov
jmp
cmpsl
pop
pop
sub
inc
mov
inc
jb
in
push
add
movsb
mov
cld
in
mov
cli
cmp
jmp
movsb
add
sub
push
xchg
add
sbb
sti
jmp
out
dec
shll
imul
xlat
ljmp
test
stc
mov
adc
add
mov
out
jns
and
ret
inc
cld
mov
add
or
add
add
adc
test
or
incl
test
and
add
movl
lret
inc
loopne
sub
lds
decl
ret
inc
in
inc
sub
push
add
movl
add
add
decl
mov
or
cmpsl
gs
cld
into
repz
sub
aas
inc
rcrl
add
lea
add
xor
not
sbb
addr16
inc
and
push
sub
mov
sbb
mov
pop
add
daa
fadd
shll
mov
inc
je
mov
add
roll
pop
inc
xor
addl
scas
push
testl
repnz
rolb
mov
cmpsl
das
inc
push
ja
test
inc
sub
shr
push
add
inc
push
add
xor
mov
int
mov
movsl
push
out
inc
inc
mov
mov
movsl
inc
rclb
les
cmp
out
addl
icebp
daa
add
sbb
les
sub
and
jp
ret
call
add
and
inc
add
shrl
mov
push
cmp
push
inc
add
incl
gs
decb
arpl
cli
push
pusha
sub
push
adc
fucomip
inc
repnz
add
add
mov
cmpsb
cmpsl
aas
dec
sub
stos
add
movsb
add
xchg
inc
decb
mov
add
insb
addr16
dec
sub
add
test
mov
push
cs
dec
add
dec
ret
movsb
add
inc
or
incb
popa
fldl
mov
push
cltd
inc
out
sar
call
mov
add
jb
ret
std
push
fdivrl
add
aas
scas
fstpt
add
pop
clc
call
popl
call
mov
adc
adc
add
out
cmp
std
xorl
inc
dec
add
sbb
pop
out
jg,pn
add
adc
pusha
inc
inc
or
inc
incb
add
cmpsl
test
inc
out
lds
push
int3
call
cmpsb
in
inc
out
sub
add
and
mov
sub
mov
add
xor
incl
pusha
sbb
dec
nop
into
ljmp
cmpsl
jo
cwtl
ljmp
cmpsl
cwtl
sbb
add
fsubrp
add
or
inc
cmpsl
rcrb
lret
inc
cmpsl
add
push
fldenv
stos
add
aas
fldenv
stos
add
fsubs
stos
add
fsubs
stos
add
fsubs
stos
out
out
sbb
nop
call
jmp
add
int3
fucom
add
add
call
cmpsb
jmp
dec
call
mov
xor
daa
add
call
add
ds
sub
ret
incb
and
fcmovb
incl
or
and
add
ljmp
movsb
cmp
call
movsb
cmp
add
add
ret
mov
cmp
jmp
jg
pop
sub
ret
cmc
pop
sub
ret
dec
std
pop
sub
ret
aas
lds
stos
cmp
ljmp
sub
jg
jmp
mov
pop
pop
aas
add
and
pop
sub
dec
add
and
add
add
and
mov
jbe
incl
jmp
test
add
and
cltd
and
pop
dec
add
and
imul
and
imul
and
or
pop
jg
jmp
cmpsl
xchg
out
fucomp
add
mov
fldl
mov
add
add
add
ret
inc
cmpsl
movsb
out
insl
push
dec
in
inc
cmpsl
int3
out
dec
push
inc
adc
out
jge
add
mov
fiadds
sbb
jecxz
push
incl
add
jmp
push
dec
cmp
inc
cmpsl
sub
repz
ljmp
cmpsl
push
in
fucomp
add
lret
inc
cmpsl
jl
pop
cld
ljmp
add
add
dec
insb
dec
popa
movl
jmp
test
push
in
or
jmp
add
loopne
mov
add
pop
cmpsl
jg
adc
jno
cmpsl
add
inc
movsb
add
test
lock
add
add
add
orl
pop
jmp
add
sub
add
add
add
call
add
or
inc
movsb
add
hlt
movsb
add
jmp
movsb
add
stos
scas
add
or
jp
jmp
movsb
idiv
loopne
add
mov
add
cmpsl
add
jmp
cltd
add
jmp
movsb
loop
call
movsb
add
sub
lahf
add
xchg
lods
jp
jmp
movsb
idiv
push
sbb
add
movsb
inc
add
xchg
dec
cmp
movsb
add
out
inc
mov
aas
ret
add
int
sbb
add
jg
cmp
add
dec
inc
lds
ss
push
add
add
add
add
jno
mov
add
mov
add
and
add
mov
jle
add
add
xorl
add
or
adc
add
xchg
jp
add
scas
roll
cmpsl
dec
mov
sbb
adc
sub
add
pusha
sbbb
sub
or
cmp
add
sub
mov
mov
out
sbb
out
pop
outsl
shll
icebp
sahf
lret
rolb
inc
xor
sbb
mov
and
add
xor
xchg
cmpsb
ret
cmpsl
sub
add
sub
add
add
pushf
call
pop
add
call
mov
mov
add
mov
add
mov
mov
mov
sbb
add
call
pop
cmpsl
add
nop
call
pop
ljmp
mov
imul
sbb
clc
pop
cmpsl
add
cwtl
call
add
mov
pop
stos
add
mov
adc
in
movsb
add
call
test
aaa
shll
add
pop
ss
cmp
mov
jo
push
add
movsb
ret
call
movsb
add
call
out
inc
add
fxch
mov
fadds
orb
test
lods
add
jmp
and
and
xor
mov
push
mov
add
add
inc
inc
test
jae
cmpl
add
in
cmpl
inc
inc
std
pop
and
jb
pop
mov
add
push
mov
lds
add
add
pop
test
sbb
add
add
add
sbb
cmpl
add
push
test
sub
xchg
cmp
rolb
inc
push
clc
jae
dec
sbbl
mov
addl
sbb
cmpsl
sub
and
jmp
mov
bts
add
cmpb
and
pushl
or
test
push
inc
pop
add
test
pop
add
sub
mov
cmp
jmp
mov
pop
mov
mov
mov
sub
sbb
sub
das
pop
add
pop
push
mov
add
mov
gs
ljmp
call
call
movsl
push
out
inc
sub
call
add
sbb
cwtl
call
lcall
sub
cmpsl
mov
stos
add
mov
sbb
add
xor
mov
ficomps
dec
or
cmp
xchg
mov
sub
icebp
xor
and
inc
push
js
xor
sahf
sbb
jne
js
inc
shl
jg
push
movsl
test
in
add
jb
add
movsb
jnp
roll
pusha
sbb
movsb
add
jmp
movsb
add
stos
sbb
add
push
add
testl
add
sbb
inc
jo
or
test
or
bound
movsb
jl
jmp
das
shll
mov
loopne
incb
sbb
mov
inc
mov
add
add
add
mov
add
add
mov
add
mov
add
test
mov
add
dec
inc
xchg
xlat
scas
push
add
add
and
lea
xor
decl
xor
call
add
mov
add
push
jle
adc
add
add
cmpsl
sbb
cmpsb
rcll
add
sbb
add
sbb
add
sbb
sub
jmp
sbb
rol
sbb
sahf
movsb
jl
mov
add
add
cmpsl
add
mov
xchg
push
or
pop
xor
mov
inc
push
shlb
cmp
sbb
add
or
sub
clc
add
iret
stc
dec
add
out
aam
inc
jecxz
out
call
add
add
add
clc
imulb
adc
scas
call
inc
cmp
addb
sub
sub
xor
jnp
mov
hlt
cmp
pop
mov
repnz
lock
sbb
cmp
or
inc
test
cmp
jp
xchg
sbbb
add
or
call
and
jmp
enter
fisubs
ss
add
ds
jl
inc
jle
cs
and
push
xchg
pmulhw
add
cmpsb
inc
pop
jno
sub
pusha
sbb
add
movsb
int3
pop
inc
jmp
sub
xchg
mov
add
daa
popf
or
jns
fldenv
push
add
movsb
ret
xchg
push
add
stos
xchg
in
movsb
add
add
scas
push
add
mov
sbb
add
jne
lods
test
add
add
into
inc
xchg
push
js
add
add
add
mov
jg
pop
or
push
mov
icebp
mov
push
pushl
add
adc
jle
pushf
and
add
xorl
push
addl
add
add
sbb
add
insl
and
lahf
lods
int3
call
imul
jmp
nop
add
mov
mov
jge
sbb
sbb
out
jbe
inc
out
shll
jo
iret
pop
in
add
sub
or
cmpsl
sbb
add
sbb
jae
cwtl
scas
and
mov
mov
add
mov
xor
sbb
sbb
pop
push
xor
and
add
pop
push
add
jnp
xor
outsl
adc
add
jp
out
add
cli
call
jno
push
jmp
mov
ja
adc
add
jp
or
add
push
jmp
pop
cmpsl
add
add
adc
push
stos
inc
jo
cmpsb
insb
hlt
pop
cmpsl
add
cmpsl
add
cwtl
push
jmp
adc
adc
add
add
push
mov
out
add
mov
ja
test
in
push
xchg
push
sub
sahf
mov
add
jmp
test
add
filds
jmp
add
add
lods
jg
or
enter
and
ja
pop
xchg
jmp
cmp
fwait
test
inc
int
cmp
inc
sub
jnp
fildl
lods
jge
int
aam
pop
mov
clc
out
enter
inc
pop
jmp
movsb
add
inc
lods
test
dec
push
add
ds
xchg
add
orb
push
push
mov
cs
mov
sti
testb
ja
push
add
add
add
mov
add
add
into
aad
mov
and
push
xor
fscale
pop
push
push
pop
ret
mov
lea
xor
add
or
dec
add
or
pop
push
add
add
sbb
ret
icebp
mov
cmp
rcll
out
jno
dec
mov
lock
ret
dec
jnp
lret
and
lods
scas
pop
add
mov
sbb
or
jg
fcomps
add
and
push
add
sbb
cmp
jo
mov
das
push
add
mov
inc
inc
add
xchg
add
mov
mov
cmpsl
sbb
mov
add
jne
add
xor
popa
add
jg
xchg
jo
cld
cli
ret
fcoml
in
cmpsl
jns
orb
add
add
add
sti
in
add
add
js
fldt
mov
iret
add
add
sub
pop
test
call
sub
daa
jno
repnz
add
add
call
aam
mov
lock
testl
in
shlb
add
jg
ret
mov
movsb
add
jmp
call
daa
shrb
cmp
mov
jne
jmp
sub
add
movsb
mov
jb
sti
add
movsb
jmp
fildll
fcomi
push
movsb
sbb
cli
cmpl
outsb
mov
mov
ljmp
jo
sub
fisttpl
add
jnp
jle
mov
mov
xchg
cmp
or
incl
mov
and
mov
add
xchg
sub
mov
add
add
and
enter
mov
cmp
in
push
mov
movsb
out
cli
inc
mov
sub
cmp
adc
jb
movsl
dec
and
movsb
push
cmpsb
adc
decl
jae
push
cmpsl
push
int
leave
sub
and
xchg
mov
and
mov
sub
mov
dec
mov
add
ret
icebp
fs
mov
fcmovnb
sub
inc
or
in
mov
jne
mov
mov
clc
sub
cmp
test
fimuls
sub
jge
mov
aam
sbb
sbb
mov
cmp
add
cwtl
add
jle
inc
movsb
cmp
ds
les
cmc
divb
les
jo
les
pusha
mov
pushf
out
pushf
jl
call
pop
or
jge
incl
add
adc
cmp
fwait
cmpsl
add
cli
sbb
jecxz
add
add
insb
sub
cltd
jge
sub
and
das
mov
or
or
sbb
add
sub
mov
or
call
mov
inc
psubsw
pop
aaa
push
filds
push
js
jl
lock
sub
jecxz
test
jg
subb
mov
sub
mov
and
add
add
add
movsb
jns
stc
add
incb
sub
push
sti
cmp
jbe
fsub
and
sub
cmp
xchg
cmp
push
mov
add
std
cmovno
sub
ffreep
add
mov
add
mov
test
sbb
push
pop
hlt
mov
test
sbb
cs
mov
ret
dec
call
xor
dec
push
add
ds
daa
jp
add
push
push
add
or
add
mov
add
push
add
sti
iret
mov
inc
adc
and
add
sti
add
das
add
push
mov
jnp
sub
cmpsl
sub
add
mov
js
outsl
ficomps
sbb
ficoms
and
add
cmpsb
mov
add
sub
mov
pop
or
sbb
pushl
xchg
and
adc
push
sub
sbb
add
out
jmp
inc
push
out
fists
and
sub
neg
pop
sub
ja
stos
add
fiaddl
pop
out
shrl
and
rolb
xchg
shl
pop
sbb
mov
and
mov
scas
int3
mov
pop
scas
int3
xlat
das
mov
fisttpl
jb
test
jmp
rcl
lea
je
jno
inc
test
loopne
andl
or
popa
jle
les
jmp
xstore-rng
cmpsl
add
add
xchg
popa
push
add
outsl
cmc
add
jmp
mov
add
adc
dec
fldenv
loope
ret
mov
xlat
push
mov
mov
fadd
idiv
incb
jmp
dec
fdivrp
jecxz
add
and
out
enter
movsb
dec
add
and
out
test
add
movsb
mov
jmp
inc
int
mov
ret
inc
lds
dec
add
call
xor
inc
repnz
dec
mov
sti
dec
out
dec
mov
inc
mov
fwait
inc
and
dec
jp
xor
stc
inc
test
inc
xchg
mov
dec
push
add
jno
std
mov
and
xchg
leave
mov
jno
iret
cli
aad
mov
jmp
lea
lcall
lcall
push
and
mov
sub
push
into
int3
call
clc
inc
cmp
dec
mov
inc
rcr
add
out
adc
mov
add
cmpsl
sub
imul
add
add
addr16
bnd
int
movsl
sbb
mov
cmp
xlat
nop
push
out
adc
mov
jae
pop
push
sub
add
xor
dec
jle
out
mov
mov
lea
mov
sub
sub
sbb
cmp
sbb
sbb
mov
insb
out
mov
insb
cli
out
insb
adc
and
popa
mov
call
sbb
add
call
add
mov
cmpsl
add
xchg
push
jmp
mov
inc
ljmp
iret
add
xlat
xchg
and
movb
mov
or
pushl
and
xor
sub
and
xchg
nop
sbb
shrb
orb
inc
clc
jmp
jmp
bound
inc
add
push
and
xor
sbb
and
sub
cmp
cld
add
and
cmp
inc
add
lods
inc
out
add
add
cmp
jmp
cmp
dec
out
mov
std
call
cs
push
test
std
cmp
icebp
mov
or
sub
add
xor
into
incb
aam
decl
cli
and
dec
adc
add
xchg
add
mov
and
push
mov
add
xchg
pop
xchg
pop
xchg
push
aaa
rcll
dec
jl
out
and
inc
cli
push
push
aad
xchg
out
cmpsl
ss
sbb
out
jl
jl
add
fs
clc
movsl
inc
out
out
js
pop
fmull
sub
jge
call
aas
out
out
sub
mov
int
sub
add
inc
call
imul
add
add
jl
loopne
and
sahf
push
jne
and
jnp
xchg
mov
mov
mov
popa
add
push
pop
out
bnd
int
int
decb
and
xchg
add
out
call
add
jg
push
sub
movsl
add
cmpb
add
scas
popa
dec
mov
frstor
mov
mov
mov
loopne
lea
mov
sub
adc
fists
popa
mov
rclb
loopne
sbb
out
scas
mov
pop
popa
sbb
inc
sub
xchg
punpckldq
das
jb
jecxz
jo
in
pusha
add
jecxz
bound
nopl
mov
mov
dec
add
jno
xlat
xchg
pushf
adc
xchg
into
inc
push
pop
adcb
jmp
pushl
in
movsb
add
push
mov
std
das
les
stc
repz
bound
icebp
pop
mov
push
lcall
out
mov
bound
and
in
mov
mov
mov
jl
mov
add
cmc
mov
aad
and
xor
into
cmpsb
mov
push
stos
add
mov
mov
js
jmp
mov
mov
inc
and
cmp
testl
cmp
roll
add
std
add
and
loop
jl
add
testb
lods
mov
xchg
dec
dec
mov
fsubr
int3
repz
jmp
pop
add
shrb
xlat
cmp
mov
cmpsl
add
push
cmp
cmpsb
mov
mov
mov
mov
xor
sbb
es
add
out
add
mov
sbb
sub
fbld
pop
fimull
out
aad
sbb
add
adc
mov
ljmp
or
cmpsl
sub
jmp
sub
decl
add
mov
sub
pushf
jecxz
insb
hlt
jmp
cltd
mov
inc
adc
inc
adc
jmp
cmp
pop
and
mov
sbb
mov
add
add
ljmp
hlt
adc
add
out
in
cmpsl
xchg
jmp
fisubs
sbb
faddp
mov
out
in
cmpsl
mov
fistpll
fistpll
mov
icebp
sub
push
loopne
in
mov
out
in
movsb
add
xor
pop
int
push
es
movsb
jge
fsubp
sub
call
js
test
add
push
jb
call
cmp
pop
mov
pop
mov
adc
fistpll
sbb
inc
mov
mov
loopne
sbb
mov
hlt
lods
push
jb
sbb
js
adc
xorl
ret
mov
subl
push
mov
les
fists
add
mov
mov
xchg
add
add
sub
push
cs
call
aad
and
cmp
into
vcvtdq2pd
or
mov
cmp
test
andl
add
jae
adc
add
push
imul
inc
std
jae
sar
jl
push
xorl
jae
mov
out
call
std
jmp
test
add
decb
push
cli
movsb
dec
out
mov
daa
add
mov
sub
inc
push
push
ficoms
roll
sbbb
pop
and
or
sbb
movaps
and
pusha
mov
sub
sub
or
mov
fcoml
movsb
inc
mov
inc
add
clc
push
add
add
mov
xor
test
adc
add
add
cmp
in
xorb
aam
cmpsl
mov
sbbb
jno
cmpb
mov
jno
imul
sahf
repz
mov
inc
inc
icebp
push
pop
inc
imul
mov
cwtl
jg
pop
ja
popa
inc
add
xlat
push
adc
loopne
dec
out
cmpsl
add
ss
jae
lock
add
cld
jmp
adc
mov
inc
nop
and
adc
stc
cmc
in
movsb
add
mov
das
jno
and
in
add
movsb
jge
loopne
jmp
outsl
xchg
add
jmp
movsb
add
and
add
movsb
jns
stc
push
loop
add
movsb
jl
jmp
or
sahf
aad
adc
je
jge
stc
xor
jo
testl
pop
pop
add
jmp
movsb
add
jmp
cltd
inc
xchg
movsl
jo
in
movsb
add
das
xchg
add
add
mov
add
into
inc
xchg
aaa
nop
push
add
add
incl
fisubs
mov
rolb
mov
or
add
add
add
push
add
dec
sbb
shrb
inc
and
nop
mov
and
jp
adc
add
jb
dec
push
mov
adc
add
dec
mov
cmc
into
addl
rol
pop
mov
pop
pop
jge
ss
mov
fadds
and
ja
mov
aaa
in
add
in
mov
rorb
aas
mov
incl
cmpl
inc
je
lcall
sbb
fiadds
sbb
mov
dec
ret
sbb
add
dec
add
test
aas
stos
sbb
push
ja
mov
hlt
add
dec
test
rcrl
add
in
aas
lret
jecxz
mov
fdivrl
lods
inc
in
cmp
cmpl
call
mov
icebp
push
sub
add
out
jmp
jl
addl
fdivrl
js
std
jbe
sub
add
xor
xor
cmpsl
xchg
bnd
adc
add
add
add
push
movsl
jg
cmc
and
clc
adc
or
clc
adc
or
jbe
hlt
mov
xor
sub
sbb
jp
aam
test
push
sbb
arpl
aad
jno
in
sbb
mov
jmp
and
dec
test
jge
icebp
and
aaa
int3
xchg
jp
cld
int3
addl
sbb
arpl
pusha
xlat
stos
popa
push
or
popf
xchg
rcr
out
addb
imul
lahf
jb
je
ja
push
or
mov
xchg
or
out
jle
sbb
in
jle
test
dec
add
inc
push
or
mov
les
xor
or
call
push
incl
dec
call
add
pop
rorb
push
xchg
pavgw
jle
push
push
sub
jle
pop
incl
movb
test
add
dec
shl
lds
add
or
mov
subl
icebp
xchg
cmpsl
mov
jnp
es
push
cmpsl
sbb
mov
mov
add
add
sbb
add
adc
setle
pop
es
lock
sbb
stos
and
mov
xor
and
iret
or
mov
push
test
mov
sbb
add
inc
stos
mov
inc
add
mov
dec
out
jnp
cs
shll
aad
out
jmp
add
adc
add
or
dec
dec
sbb
or
jl
test
test
into
sbb
call
add
sbb
divb
mov
add
add
dec
sbb
test
stos
or
sbb
add
add
sbb
add
add
jnp
mov
cli
call
cld
sbb
inc
test
add
sti
daa
and
addr16
scas
inc
pop
hlt
lods
cld
lcall
jp
test
lret
add
repz
sti
mov
gs
push
jg
cli
sbb
leave
push
jg
inc
loopne
imul
test
divl
loop
jns
pusha
arpl
push
aas
ret
inc
loopne
mov
sti
shlb
shl
mov
mov
add
add
mov
mov
jecxz
pop
jno
rorl
stos
rorl
stos
rorl
out
mov
int3
add
add
sbb
mov
inc
mov
inc
mov
into
mov
pop
rorb
push
xchg
loop
push
nop
dec
mov
mov
push
adc
dec
mov
inc
sarl
add
ret
subl
in
out
icebp
xchg
iret
call
icebp
sbb
xor
mov
ret
in
jg
xchg
mov
mov
subl
iret
inc
in
sub
mov
sbb
repnz
or
sub
rcr
cs
inc
in
ljmp
sbb
xadd
adc
jg
cmpsb
xchg
adc
out
mov
jo
or
popf
adc
push
inc
out
mov
mov
stc
call
sbb
mov
and
cs
out
stos
mov
inc
andb
sbb
mov
mov
outsb
sar
add
dec
std
addr16
add
add
jo
add
out
orb
add
ret
call
repnz
push
aam
cmpsl
add
push
mov
daa
add
nop
mov
ljmp
jmp
cltd
jns
push
xchg
lods
daa
add
xchg
jge
inc
xchg
add
push
jl
cmpsl
add
push
je
daa
add
and
inc
or
into
mov
inc
mov
and
insb
add
jmp
adc
call
mov
aad
test
mov
loop
add
cli
cli
jo
cmpb
and
ds
testl
mov
lds
call
xor
ljmp
inc
out
out
sbb
jmp
call
and
xchg
and
repnz
rorl
stos
jnp
jge
sub
subb
jnp
push
les
test
divl
xchg
shl
and
inc
mov
push
str
sbbl
aas
decb
mov
add
mov
dec
aas
add
jge
clc
push
or
mov
rcr
xchg
iret
out
add
pop
icebp
push
into
das
enter
jecxz
movsb
test
das
fnstenv
into
mov
shll
mov
or
into
shl
das
enter
jecxz
lods
add
cmpsl
ljmp
mov
jp
rolw
inc
sub
xor
and
jbe
jp
data16
repz
inc
addb
and
mov
lcall
pop
jns
out
xor
mov
testl
bound
inc
loop
or
mov
nop
mov
pop
pop
mov
add
nop
cmpsb
and
fistpl
outsl
ja
xchg
inc
cltd
mov
fbstp
jno
repz
add
cld
pop
add
clc
adc
mov
add
dec
inc
and
dec
imul
add
add
test
rorb
bound
and
mov
ljmp
insb
inc
out
imul
sbb
mov
dec
ss
fmuls
nop
or
add
push
jae
out
arpl
pop
sbb
jle
push
popl
sub
push
call
ret
pop
sub
mov
push
pusha
movb
insb
mov
out
inc
clc
cltd
adc
add
dec
push
call
sub
inc
clc
cltd
mov
mov
jecxz
lea
push
call
bound
mov
mov
jae
lock
xlat
dec
aas
jmp
mov
imul
add
add
add
push
mov
jg
lock
push
dec
inc
jle
inc
clc
dec
sbb
cld
gs
std
mov
dec
call
inc
jnp
clc
ds
sti
mov
add
scas
mov
mov
rcll
jg
pop
jl
std
push
xchg
sub
push
add
int
push
mov
decb
addb
add
add
add
add
cltd
std
loopw
inc
add
jae
decl
aam
mov
dec
inc
cmpsl
jmp
jg
lahf
add
push
mov
test
jae
pusha
add
push
inc
aam
and
add
jo
jge
imul
pop
fs
push
sub
push
or
sbb
fs
jnp
adc
push
add
shl
pop
ljmp
sbb
and
jne
ss
out
xlat
add
and
mov
lock
cmpsb
and
mov
fsubrs
je
dec
add
add
mov
scas
das
call
out
hlt
push
mov
mov
dec
mov
out
add
dec
test
dec
shrb
push
xor
jns
aaa
lods
ret
jmp
out
adc
lods
repz
cld
incb
cmpsl
add
add
pusha
adc
mov
or
sbb
push
xor
jae
into
add
mov
jmp
cld
add
movsl
cld
std
mul
add
adc
out
aas
das
sbbl
movsb
inc
inc
push
adc
and
add
pop
push
push
push
movsl
std
push
and
add
add
sub
add
cld
std
mov
movsb
pop
pop
mov
out
pop
sub
mov
mov
jmp
mov
mov
mov
scas
push
test
push
pop
xlat
push
cmp
push
call
xchg
cmp
into
call
push
mov
push
push
call
cmpsb
mov
es
add
push
mov
push
push
call
inc
bound
jbe
dec
mov
or
or
incl
add
mov
lds
test
mov
add
mov
inc
add
mov
dec
add
add
rorb
mov
dec
jmpw
dec
cmpsl
or
je
pusha
and
sbb
call
in
add
cmpsl
popa
cmp
jmp
test
mov
xor
lock
sbb
mov
and
or
loope
add
mov
mov
and
sbb
stc
pusha
pop
or
sbb
or
push
dec
push
cld
std
xor
lock
jbe
or
in
sbb
mov
cwtl
test
mov
cmp
stc
fiadds
mov
and
push
ljmp
imul
fs
in
cmp
cmpsb
add
sub
lea
push
ljmp
mov
inc
jae
in
repnz
mov
add
inc
push
mov
ljmp
in
xchg
jmp
sti
ds
movsb
inc
cmpsl
xchg
inc
cli
aaa
in
inc
out
in
mov
mov
push
add
repnz
testb
sub
call
xor
imul
push
call
inc
cmovle
jmp
shr
clc
sahf
add
add
movsb
mov
inc
clc
sbb
lea
aam
inc
pop
shr
jne
jo
andl
dec
push
call
xchg
in
sub
mov
pop
stc
std
jmp
or
test
in
push
stc
imull
push
cmp
push
in
in
add
imull
dec
incb
cli
idivb
movl
dec
jmp
mov
xchg
xor
lcall
xchg
call
jo
prefetchnta
mov
cmp
add
inc
addl
add
mov
push
push
jp
test
adc
sti
add
mov
jae
insl
mov
add
lea
ja
sti
fdivrs
lock
in
add
xchg
das
xchg
fs
or
unpcklps
outsb
jae
comiss
adc
jle
jge
aam
jmp
das
push
push
adc
add
jno
inc
and
or
push
cli
iret
mov
add
sti
das
fadds
cld
fistpll
pop
mov
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
jmp
movsb
add
jmp
sahf
or
mov
mov
insb
das
iret
aam
and
mov
popa
and
push
insb
dec
xchg
pop
jnp
and
outsb
je
push
and
adc
sahf
or
push
insl
jb
inc
push
leave
mov
leave
jnp
aaa
sarl
xor
jecxz
bound
ret
dec
insl
add
pusha
arpl
ret
cmp
sub
loop
insb
or
pop
gs
and
sbb
popa
mov
dec
imul
outsb
sub
insl
pop
gs
and
and
gs
icebp
daa
jae
cltd
sub
add
arpl
insb
popa
cs
imul
into
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
add
mov
add
mov
add
jle
add
cmpsl
mov
sub
pop
mov
or
fdiv
or
xchg
movsl
or
mov
push
sbb
add
cmpsl
jmp
add
cmpsl
jmp
add
cmpsl
jmp
add
cmpsl
jmp
add
cmpsl
jmp
add
cmpsl
jmp
add
cmpsl
jmp
add
cmpsl
jmp
add
cmpsl
jmp
add
cmpsl
jmp
add
cmpsl
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
fidivl
xor
add
fwait
jae
mov
jb
mov
ja
add
add
push
jne
jmp
xchg
cmp
cli
mov
pop
or
fisubl
jmp
add
pusha
popa
add
xor
add
outsl
jae
push
push
add
push
add
arpl
add
je
sbb
add
dec
ss
add
incl
jns
jb
xor
xor
es
push
push
sub
shrl
add
jb
lea
jae
push
popa
add
outsl
je
je
arpl
or
jb
add
pop
jno
fisubrl
or
pop
jb
pop
gs
sti
mov
outsb
enter
add
jb
aam
add
xchg
in
xor
je
outsb
push
lret
data16
pusha
fs
xchg
imul
xchg
jno
jl
arpl
jb
ja
jb
xchg
add
dec
cmp
pop
inc
sub
pop
jno
fldcw
cmp
jb
inc
xor
sbb
out
adc
add
jbe
popa
add
data16
jo
addr16
loopne
or
fcomps
add
jbe
jno
popa
fnstenv
xor
xor
xor
add
jne
jae
gs
shlb
leave
add
enter
mov
mov
je
bound
add
jno
pop
mov
gs
ja
push
je
je
sub
aaa
push
sub
push
pusha
cmp
push
add
cmp
inc
cmp
pop
aas
inc
je
push
mov
dec
jno
add
jae
or
dec
jb
or
add
incl
das
sbb
outsb
sar
jb
xlat
outsb
into
shlb
lds
int3
add
scas
ja
mov
xchg
jne
test
add
xchg
jae
mov
test
mov
xor
sbb
pop
jmp
jb
add
pop
jb
arpl
push
nop
popa
imul
push
mov
push
jae
mov
imul
jo
movsl
pop
imul
imul
push
add
push
imul
add
add
imul
dec
outsb
add
outsl
insl
daa
arpl
xchg
ja
outsb
sbb
je
je
imul
jno
gs
popa
arpl
insb
insb
cmpsl
ds
dec
cmp
cmpsl
sub
xor
fldt
inc
cmp
xor
pusha
insb
push
sti
pop
add
push
popa
jbe
adc
aad
pop
addr16
pop
arpl
mov
into
addr16
mov
push
data16
xor
test
push
mov
jp
jo
test
test
jno
xchg
pop
cmpsl
ja
pop
ja
pop
jg
pusha
ja
add
inc
sbb
popa
pop
js
gs
add
popa
push
arpl
out
inc
pop
cmp
popa
add
sbb
fs
jbe
jne
jbe
popa
sbb
fs
cmc
popa
or
out
rcrb
gs
jae
push
aad
xlat
lock
aam
cmpsl
pusha
enter
int
pop
pop
enter
enter
cwtl
add
jne
add
push
mov
pusha
nop
ja
pop
add
pop
das
jmp
add
addr16
inc
push
add
pop
insl
push
inc
add
pusha
dec
outsb
xor
inc
push
jo
xor
adc
insl
lsl
push
insl
sbb
pop
add
push
pop
outsb
mov
int
push
lret
clc
popa
outsb
ret
xor
aam
pop
lret
jno
ret
push
insl
lds
jb
fwait
arpl
add
dec
outsb
mov
imul
pop
pop
jae
pop
add
gs
jl
add
outsl
mov
sub
mov
xor
lods
xor
jb
je
imul
popa
add
je
insl
scas
popa
arpl
jae
cmpsl
dec
gs
add
outsb
add
add
add
xor
pop
arpl
insl
dec
arpl
outsb
add
imul
jae
jae
jne
jae
mov
xchg
jg
pop
jp
jne
mov
jb
xchg
ja
jp
imul
imul
addr16
cmp
arpl
cmp
cmpsl
inc
pop
jo
push
push
pop
imul
pop
add
add
add
fstps
adc
pop
pop
cmc
std
data16
in
pusha
insl
int3
mov
add
ret
pop
jno
leave
pop
add
cmpsb
bound
fldenv
enter
mov
add
jno
jae
pop
xchg
pop
xchg
add
outsb
out
subl
ja
push
push
imul
pop
js
add
pop
add
dec
imul
out
inc
pop
inc
arpl
adc
jbe
push
ja
add
jb
outsl
mov
je
jne
fs
add
enter
leave
pop
pop
fildl
fdivs
shrl
add
jno
popa
mov
mov
push
insl
lret
test
sbbb
xchg
add
nop
pop
imul
lea
jmp
dec
pop
add
inc
addr16
inc
add
inc
jo
inc
push
jae
push
mov
add
push
pop
cmp
push
add
add
loope
jbe
cmc
pop
popa
adc
pop
jbe
stos
pop
pop
pop
add
mov
add
mov
add
add
outsb
fs
imul
jae
dec
outsb
jns
inc
imul
imul
pusha
je
sub
xor
sub
add
arpl
imul
scas
das
sub
add
pop
popa
insl
dec
insb
popa
mov
pop
outsb
xor
jo
addr16
mov
dec
insb
xor
dec
arpl
add
dec
add
dec
pop
outsb
jnp
insb
add
mov
imul
add
pop
pop
lahf
test
sbb
pop
xchg
jl
add
stos
je
js
pusha
xor
inc
jb
jb
aaa
xor
xchg
inc
cmp
cmpsl
dec
jbe
dec
cmp
ss
jb
add
es
push
fidivl
xor
into
xor
push
cld
pusha
arpl
lret
add
call
pusha
add
imull
lret
jno
add
pusha
lret
add
xor
cmpsl
pop
enter
out
shrb
pusha
mov
lret
fs
pop
les
pop
out
mov
pusha
jns
mov
andb
jnp
adcl
ja
mov
out
add
dec
pop
dec
add
cmp
jno
add
outsb
dec
pop
inc
add
xor
add
pop
cmp
bound
pop
push
add
pop
add
pop
add
add
xor
mov
movsb
pop
je
fisubrl
rclb
movsb
pop
je
mov
sub
pinsrw
lcall
xchg
add
sub
loope
adc
sub
xlat
je
jo
dec
outsb
je
xchg
adc
pop
push
inc
jno
push
outsl
pop
cs
aaa
push
imul
popa
push
lea
add
cmp
mov
xor
pop
cs
push
add
fcoml
sbb
das
sub
mov
arpl
lods
pop
imul
pop
add
add
add
imul
sahf
cmp
inc
cltd
pop
bound
push
cs
inc
add
jb
cmp
cli
pusha
insb
sbb
inc
jb
cmp
insl
fldenv
outsl
inc
cmp
insl
data16
jo
push
jno
popa
xchg
pusha
js
push
push
das
mov
addr16
jne
cmp
out
cmp
imul
inc
jns
das
push
add
or
jbe
mov
add
and
sub
dec
ljmp
inc
jmp
xchg
push
inc
in
dec
push
shll
cmp
leave
fildl
add
scas
ss
pop
ljmp
cmpsl
jmp
push
pop
test
inc
pop
push
bound
cmp
push
pop
dec
addr16
dec
push
jne
xor
inc
jae
sbb
pop
jb
inc
push
outsb
sti
notb
add
sbb
outsb
or
jo
push
notb
pop
add
jno
jno
add
imul
xor
jmp
out
cmpsl
add
add
jo
push
jbe
or
dec
jae
cmpsb
pusha
fwait
inc
mov
pop
test
jo
push
mov
pusha
add
nop
push
jns
addl
push
xchg
push
jp
dec
ss
push
inc
push
pop
pop
push
jo
pusha
cmpsl
add
add
add
sbb
cmp
out
outsb
add
adc
jo
sbb
push
arpl
testl
jmp
lret
arpl
sbb
push
arpl
in
add
add
push
lds
xor
jo
insb
jmp
nop
dec
insl
test
jb
test
test
add
jmp
gs
shlb
adc
adc
add
add
add
add
add
inc
add
push
inc
add
fs
add
jle
add
jle
addb
dec
add
dec
push
and
insl
imul
add
xorb
add
push
jo
pop
outsb
pop
add
add
xor
add
xor
pop
popa
xor
cmp
je
add
incb
aas
popa
sub
add
sbb
add
jge
imul
outsl
add
or
cmpsl
adc
sbb
ja
cmpsl
jmp
add
cmpsl
push
pop
and
or
jae
je
jmp
add
jmp
insl
lret
outsb
xchg
push
jo
lret
cmpsl
ljmp
cmpsl
jle
and
mov
je
cltd
push
add
fldl
add
mov
arpl
je
jmp
add
jmp
insl
add
jb
xchg
sub
imul
push
pop
cmp
imul
add
cmpsl
add
inc
add
jb
push
adc
push
add
and
jae
outsb
cli
add
out
movsb
add
add
gs
push
mov
das
into
imul
push
push
xchg
fs
jb
lds
push
mov
add
push
cltd
push
test
test
insb
subb
push
xchg
jb
gs
jbe
add
outsb
fs
pop
push
add
push
xor
push
and
outsl
ss
push
mov
xor
stos
dec
insl
cmp
sbb
add
pop
or
or
sbb
sbb
ret
mov
or
in
popa
or
push
sub
insb
gs
arpl
mov
addr16
and
xchg
imul
cwtl
or
xchg
push
arpl
jo
dec
int3
xchg
gs
stos
and
xchg
pop
pop
or
mov
jle
sbb
add
or
inc
sub
gs
xor
push
inc
ss
cmp
addr16
popa
push
imul
pop
je
cmp
jae
xor
lret
or
inc
cltd
push
je
add
pop
imul
cmp
outsb
scas
xor
inc
adc
dec
sub
cmp
push
popa
sub
sub
outsl
jmp
pop
je
pop
insb
gs
inc
and
cmpsl
cwtl
push
sbbl
xchg
sbb
stos
aad
or
jle
je
packuswb
das
insb
cmp
cmpsl
pop
insl
popa
inc
das
imul
add
loop
and
adc
dec
push
repz
sub
sarl
push
je
lret
sub
in
popa
les
push
je
lret
daa
sub
les
jo
out
inc
outsb
enter
enter
mov
push
ja
or
cmp
lods
outsb
outsb
xchg
add
lods
and
add
jp
test
lods
das
jp
push
daa
test
inc
push
jle
dec
push
mov
or
outsl
cmp
dec
pop
or
imul
cmp
repnz
imul
adc
add
sub
jge
shrl
popa
xlat
insb
jbe
or
dec
les
push
add
pop
mov
int3
movsb
dec
arpl
outsl
push
insl
test
xor
xchg
dec
gs
je
outsb
lcall
add
inc
pop
jbe
pop
pop
xor
jns
insb
cmp
or
xor
fsubrl
xor
frstor
adc
add
add
xor
add
arpl
enter
mov
arpl
int
add
mov
aaa
je
jmp
add
pusha
fs
dec
pusha
popa
add
jne
sbb
popa
je
xor
inc
pusha
jne
or
inc
js
and
je
sbb
inc
cmp
jo
mov
je
gs
pop
cmp
inc
cld
cmp
mov
fbstp
popa
inc
loope
je
mov
add
sub
jb
sbb
fwait
push
data16
cs
outsb
mov
xor
mov
dec
imul
popa
je
cmpsl
lahf
insb
mov
push
arpl
ja
imul
outsl
push
jns
inc
insl
push
insl
data16
js
fs
xor
add
add
imul
gs
cmpsl
punpckhwd
inc
das
jno
cmp
repz
imul
or
pop
push
push
sbb
out
inc
fs
out
push
je
cld
insb
arpl
sbb
shl
addr16
push
add
iret
push
xor
add
push
test
xchg
dec
int3
push
test
inc
add
xchg
inc
test
insb
subl
dec
dec
xor
push
pop
out
inc
push
jnp
push
gs
push
dec
push
push
inc
add
push
xor
inc
push
push
push
insl
adc
dec
push
bound
pusha
dec
push
add
cmp
popa
sbb
pop
and
add
add
add
add
add
jmp
add
add
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
in
add
adc
and
pop
xor
int3
daa
and
mov
sub
adc
add
xor
rclb
xor
repz
xor
repz
xor
inc
dec
popa
push
push
outsl
je
pop
inc
outsb
loopne
add
sub
gs
add
cs
outsl
adc
xor
push
gs
popa
je
pop
sub
jb
push
pop
jno
push
push
add
add
pop
outsl
je
push
dec
outsl
loopne
jae
int3
xor
cmp
pop
sahf
pop
jno
xchg
pop
outsl
pop
rclb
pop
cmpsl
and
shr
add
add
int
pop
jmp
cli
push
arpl
lahf
push
mov
lods
dec
insl
xchg
mov
inc
jnp
dec
insl
xchg
xchg
add
rorl
lea
imul
jbe
dec
jg
addr16
dec
push
je
dec
pop
pop
imul
add
push
jno
inc
push
cmpsl
and
adc
bound
fdivl
jno
push
add
push
dec
pop
add
cmp
pop
or
sbb
or
dec
loopne
sbb
add
data16
push
or
inc
add
dec
repz
call
pop
les
jbe
int
add
dec
iret
insb
xchg
pop
les
cmp
andl
movl
pop
inc
push
out
dec
push
mov
bound
push
push
addr16
push
popa
jae
inc
and
addr16
dec
or
add
cmp
sbb
arpl
add
insl
sti
add
mov
push
jne
xlat
popa
push
das
xchg
xor
sub
add
outsb
xlat
mov
outsb
add
ss
jmp
loopne
inc
lods
imul
xlat
ss
scas
mov
cmp
push
xor
pop
push
pop
fwait
inc
cs
test
pop
jge
inc
aas
cltd
addr16
je
arpl
je
ss
pop
pop
imul
xor
add
add
or
add
leave
arpl
mov
arpl
inc
push
inc
loop
jno
stos
adc
std
pop
push
lods
gs
xor
mov
insb
pop
lahf
inc
push
outsl
xor
popa
dec
add
call
das
pop
inc
push
bound
adc
inc
push
adc
aas
popa
inc
sbb
and
fidivrs
imul
dec
inc
sbb
insb
sbb
jb
sub
cmp
adc
insb
outsl
sbb
insb
push
jge
push
inc
loop
jno
cmpsl
ds
idiv
or
testl
dec
or
insb
shr
ds
clc
hlt
addr16
jmp
dec
jne
jmp
bound
ljmp
inc
out
cmp
in
dec
arpl
xor
dec
insl
mov
fs
jnp
bound
push
add
add
bound
jg
insb
js
bound
inc
push
bound
cmp
sbb
push
dec
fs
dec
push
addr16
dec
bound
cmp
pop
dec
pusha
add
inc
cmp
fs
aaa
out
pop
dec
fildl
pop
add
adc
cs
shlb
pusha
testb
in
sub
addr16
push
lret
dec
add
pop
or
xor
inc
xchg
push
int3
dec
jnp
pop
inc
adcb
arpl
push
test
cmpsl
cs
push
cmpsl
xor
push
inc
movsl
pop
push
xor
xchg
push
jne
push
popa
pop
das
pop
sub
push
in
sub
fstps
push
in
sub
mov
insb
dec
rcrb
adc
stos
pop
jno
lret
add
inc
pop
sbb
jmp
jo
fistps
xor
push
je
pop
and
ret
jmp
outsb
pop
insb
int
push
add
pop
sbb
enter
cwtl
dec
arpl
pop
popf
movsb
cs
nop
jno
insl
fwait
arpl
mov
pop
add
sub
jae
cmp
sbb
lcall
sub
jae
idivb
pop
push
lcall
daa
insb
gs
insb
insb
out
push
pop
jae
sub
fbld
jcxz
js,pn
bound
pop
mov
sub
lods
sub
cmp
push
pop
cmpsw
bound
cmpsl
bound
imul
pop
jb
sbb
fisubl
imul
bound
xor
gs
add
and
bound
fs
pop
arpl
add
dec
push
pop
inc
test
inc
ds
add
sub
gs
or
adc
xor
pop
add
add
pop
je
cld
inc
addr16
aad
fs
cmovns
aad
fs
adc
mov
xor
mov
data16
out
push
arpl
mov
jb
rorl
arpl
data16
imul
pop
jae
add
add
dec
push
pop
out
push
pop
jns
inc
push
cmp
jnp
pop
arpl
xor
pop
and
push
dec
push
cmpsl
ss
push
sti
and
imul
xor
testb
gs
dec
xor
push
adc
pop
add
dec
out
loopne
sti
and
pop
stc
push
les
enter
jae
ficoml
xor
fldenv
jae
xlat
push
cmp
push
mov
enter
jmp
gs
imul
xchg
push
push
addr16
sbb
add
push
insb
test
xor
clc
pusha
and
lock
je
add
jmp
add
sbb
aam
push
inc
add
dec
cmc
arpl
inc
push
cmp
arpl
push
insl
push
shll
adc
lret
sbb
push
arpl
jg
push
data16
xor
fistl
inc
jne
sub
push
xor
sub
push
push
and
insb
daa
pop
outsb
je
add
imul
xor
sbb
pop
inc
fiadds
push
rolb
loop
je
mov
push
inc
push
mov
dec
jo
sub
popf
decb
test
jae
lods
pop
pop
inc
stos
bound
push
jb
xchg
pusha
and
pusha
je
lahf
xor
pop
int3
das
insb
insb
jmp
push
jb
and
xor
subb
pusha
mov
js
push
add
je
jp
arpl
xor
mov
dec
inc
insb
push
push
inc
dec
push
addr16
ja
cmp
push
push
push
data16
xor
fidivs
pusha
inc
push
sub
add
inc
pop
insb
cmpsl
out
imul
pop
inc
sti
jmp
inc
in
jb
out
fs
mull
cmpsl
and
mov
push
ja
jmp
add
stc
push
addl
push
cmpsl
push
aam
xchg
push
push
dec
mov
xor
dec
enter
mov
inc
jae
out
push
push
xchg
bound
ja
cmp
xor
pop
jnp
add
das
notb
gs
inc
repz
inc
cmc
pop
inc
popa
or
add
dec
pop
repz
push
add
pop
inc
pop
rcrl
pop
out
add
mov
dec
push
gs
and
ret
sub
cmp
das
xlat
xor
dec
addr16
outsb
push
add
pop
push
fs
scas
and
insl
mov
jno
push
mov
je
mov
jmp
movsb
cmp
pusha
xor
mov
push
xchg
dec
add
icebp
pop
jb
or
jmp
aam
jb
mov
cmp
dec
stos
xor
testl
push
lds
call
push
data16
xor
mov
arpl
mov
sub
fisubl
add
pop
jb
dec
inc
push
push
adc
cmp
push
push
add
or
je
sub
je
repz
jb
packssdw
decl
mov
je
cmp
dec
push
outsl
jb
pusha
gs
repz
add
push
and
ss
jmp
push
imul
pop
jb
sbb
cmpsl
or
mov
notb
loope
xor
push
push
insb
mov
pop
jb
test
add
pop
test
sub
pop
jne
adc
jae
lea
push
fnstenv
xor
mov
inc
das
dec
push
insl
xor
cmp
pop
jno
sti
pusha
jno
pop
push
jb
lods
xor
pop
dec
insl
cmc
dec
xor
inc
add
sar
dec
add
add
roll
xor
call
and
xor
ss
loope
divl
ss
lahf
das
sti
add
fstps
and
pop
mov
add
daa
pop
and
aas
jo
les
xor
popa
inc
sub
pop
cmp
lcall
sub
add
bound
xor
xor
push
push
add
das
add
out
cmp
xor
ss
add
add
fwait
add
arpl
cltd
cmp
mov
push
jae
int3
add
jne
push
add
cs
outsl
add
push
add
xchg
enter
cltd
xorl
mov
xor
jmp
jns
je
xchg
das
xchg
jno
jb
addb
add
pop
sahf
inc
and
nop
lock
push
das
addr16
and
rolb
daa
outsb
dec
jmp
bound
sub
shlb
js
ljmp
outsb
fistps
add
and
pop
jae
dec
imul
push
outsl
sbb
add
pusha
je
lahf
push
popa
pop
cmp
lock
fsubs
pop
push
jmp
outsl
imul
rcll
add
js
out
push
inc
jb
dec
popa
add
pop
jb
sbb
outsl
cs
add
push
daa
outsl
jae
pop
jb
insb
jecxz
and
sub
hlt
push
ljmp
js
pop
popa
outsb
jmp
pop
jbe
stos
js,pt
dec
push
inc
aad
dec
arpl
loope
imul
xor
pop
pop
jb
decb
mov
popa
imul
xor
xchg
mov
add
ja
dec
jno
fmuls
cmpsl
gs
jb
int3
dec
insl
jne
add
iret
dec
jne
jnp
pop
imul
push
mov
arpl
xor
pop
popa
imul
aas
add
push
jae
inc
push
add
aaa
push
push
add
pop
dec
add
out
repz
add
sbb
cmp
add
xor
push
aad
out
loope
pop
xor
xor
dec
lret
add
ss
inc
shlb
popa
fwait
sub
es
sub
fs
mov
outsl
loop
push
xorl
stos
cmp
addl
dec
aaa
lds
add
bound
push
stos
push
dec
daa
jge
dec
push
nop
dec
add
out
or
add
add
pop
jb
rclb
mov
daa
pop
das
iret
push
inc
cmp
push
addr16
xchg
cmp
push
cs
adc
shrb
sbb
jb
movl
push
shll
jno
push
and
ss
mov
jno
shll
jmp
xchg
and
ss
add
pop
xor
jns
pop
mov
xor
dec
gs
outsb
and
sub
je
push
pop
push
in
gs
popa
je
in
insl
addr16
pop
sub
cs
cmc
imul
lcall
out
mov
cmpsb
push
outsl
mov
jmp
imul
pushl
pusha
popa
add
mov
js
ljmp
shr
outsb
loop,pn
jae
sbb
mov
outsb
out
pop
dec
jecxz
outsl
push
das
mulb
or
pop
jo
imul
js
inc
sti
pushf
inc
push
loop
dec
arpl
cmp
adc
pop
cmp
dec
push
pop
sti
inc
add
push
push
and
add
clc
xor
mull
add
cld
xor
sub
add
cmpsl
divb
arpl
test
cmp
adc
arpl
push
insl
jne
dec
jae
es
imul
xor
add
je
lret
imul
xor
xor
cmc
out
jnp
adc
int
add
push
jecxz
xorb
ss
pop
add
pop
pop
dec
cmc
sub
cmpsl
push
dec
xor
lret
add
mov
xor
and
pop
out
ret
dec
shlb
fwait
sub
cmp
add
xor
pop
ret
push
mov
shrl
push
sarb
xor
pop
inc
and
into
sub
add
push
push
inc
mov
arpl
add
insl
jg
add
shlb
arpl
xor
movsb
inc
push
cltd
test
aaa
fists
stos
inc
push
cmp
inc
dec
jmp
mov
and
jle
add
mov
ja
stos
addr16
mov
sbb
adc
jno
add
decl
iret
xor
mov
iret
xor
jmp
cli
and
aad
movsb
push
push
add
fidivs
fcomip
pusha
pop
add
pusha
jb
movsb
push
outsl
sub
jb
or
decl
hlt
jae
dec
out
gs
mov
dec
pop
cmc
jae
inc
out
je
repnz
fnsave
jle
jo
cld
pop
out
insb
loop
imul
pop
arpl
ljmp
mov
sbb
sub
pop
mov
pop
add
fnsave
fcomip
pusha
pop
cmpsl
push
arpl
push
add
pop
add
push
jo
dec
inc
arpl
xor
sub
insl
cmp
inc
pop
sub
add
out
inc
xlat
pop
lock
xlat
jb
sub
jmp
inc
mov
pop
clc
inc
xchg
adc
nop
mov
add
add
call
push
inc
jecxz
das
pop
mov
and
jo
bound
jbe
xor
ret
jnp
sub
add
inc
mov
sbb
push
push
cmc
xchg
hlt
test
xor
xor
xor
xor
das
nop
xor
xor
sub
cmpsl
cmp
push
stc
and
add
add
and
or
ja
loope
aaa
push
add
and
movb
push
iret
sub
mulb
inc
das
cmpsl
and
xor
or
ret
add
mov
out
jbe
es
jg
repz
jp
add
stos
inc
push
sbb
jno
cli
icebp
pop
movsl
shll
int
inc
jae
andb
jmp
jo
dec
xchg
add
arpl
insl
arpl
push
inc
mov
cmp
outsb
mov
dec
arpl
movsb
push
dec
mov
mov
arpl
sbb
add
call
push
pop
and
jnp
add
call
xor
shlb
insl
sbb
movsb
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
jae
fsubl
stos
sub
pushl
fsubl
stos
pop
outsl
push
loop
add
jecxz
pop
sub
add
sbb
jae
cmp
lock
jb
outsb
jno
in
gs
out
pushl
ljmp
jmp
push
bound
xchg
loope
add
adc
sub
sub
add
sub
mov
and
mov
fdivs
dec
int
xor
xor
test
sub
insb
inc
cwtl
and
xor
and
pop
pop
cwtl
and
cmp
add
and
pop
hlt
sub
xor
add
add
dec
sbb
insb
shl
sub
inc
xor
test
xor
add
insl
ret
add
mov
and
add
add
add
add
add
add
add
add
add
mov
xor
sub
sub
sub
push
inc
mov
add
cmp
cmpsl
push
mov
call
notrack
out
add
jge
add
adc
xor
add
ret
sub
loopne
cmp
add
sub
and
inc
lea
xor
subb
jmp
into
and
push
ss
stos
jecxz
or
jecxz
or
push
inc
sbb
mov
push
imul
rclb
mov
js
fs
jnp
jb
test
outsb
mov
jo
shll
mov
xor
fisubl
and
leave
pop
jp
rcrb
cmpb
arpl
sub
xor
jg
pop
add
adc
xchg
push
dec
outsl
call
jecxz
dec
mov
fs
mov
push
lcall
icebp
add
je
hlt
cmp
xor
outsb
cmp
hlt
sub
gs
inc
push
jae
loopne
jae
loop
je
push
popa
popa
repz
imul
lcall
jmp
pop
pop
sub
out
notl
inc
bnd
inc
insb
icebp
jecxz
pop
cmpsl
insl
fmuls
add
cltd
dec
insl
mov
cltd
push
dec
shl
insb
mov
add
addr16
xor
and
xchg
mov
jb
or
sub
or
ja
cmp
insl
inc
mov
add
fsubrs
imul
cs
mov
sub
insl
shrl
push
cmpsl
push
cmp
cltd
das
add
add
add
xchg
add
add
andb
roll
aaa
add
sbb
loopne
and
inc
and
nop
icebp
sub
in
cli
bnd
lock
out
xlat
repnz
lret
sti
fldl2e
out
repnz
repz
inc
sub
mov
and
es
xor
and
fldcw
fdivs
int3
xor
fnstenv
jns
aam
cmpsl
dec
movsl
dec
add
int3
das
cmp
mov
pop
clc
ss
jmp
xchg
and
dec
movsb
xor
xor
xchg
inc
push
cmp
xor
xchg
loop
push
xchg
push
insl
cmp
sbb
inc
nop
ss
dec
xchg
arpl
aad
fs
or
sbb
loop
sub
dec
push
sbb
ds
cli
add
xor
lods
je
dec
mov
or
insl
fldt
push
add
xchg
inc
jb
test
arpl
ret
jmp
aam
xor
cmp
popa
insb
sub
aas
jb
icebp
jae
call
fcompl
and
popa
add
add
add
add
add
test
or
add
jnp
stos
add
test
or
add
test
or
add
cmp
aas
into
add
and
or
out
sbb
arpl
fildll
loopne
pop
dec
cmp
pusha
jb
cmpsl
pop
sub
sub
arpl
gs
xrelease
jb
sub
add
push
ss
rolb
push
lcall
lret
pushl
idiv
outsl
cltd
daa
add
in
incl
cltd
loopne
aam
add
cltd
and
mov
clc
mov
cltd
repz
cltd
cmc
incl
add
cli
decl
cli
mov
and
ret
xor
and
loopne
test
repnz
sub
xor
loop
add
and
and
mov
add
pop
int3
sbb
negb
pop
daa
mulb
cmp
sbb
daa
and
pop
out
dec
das
and
ss
test
adc
daa
pop
push
add
push
xor
add
sbb
es
fnstcw
inc
xor
out
inc
dec
mov
xchg
xor
xor
and
and
and
enter
shll
popf
arpl
mov
push
jno
lcall
cmp
stos
dec
addr16
stos
push
addr16
insl
and
pop
sbb
push
jmp
ret
and
add
add
jno
mov
sbb
leave
pusha
dec
je
stos
ss
into
mov
cs
jmp
js
and
call
icebp
pop
xor
loopne
daa
mov
std
pop
jle
dec
dec
dec
push
push
inc
inc
inc
push
add
dec
inc
dec
aas
dec
push
add
inc
inc
push
cmp
inc
xchg
cmp
dec
ds
dec
push
jnp
inc
dec
add
insb
outsl
jmp
or
flds
outsb
pop
fcomi
imul
fildll
mov
lock
insb
je
fnstenv
lahf
jecxz
pop
call
gs
lcall
cmpsl
lret
out
nop
fwait
sbb
xor
cmp
pop
pusha
rcrb
adc
push
imul
dec
inc
decl
and
add
pop
sbb
ja
push
sti
xor
hlt
sub
je
cmp
arpl
fcompl
jb
ds
push
rorl
add
dec
xor
and
inc
xor
sbb
insl
mov
aaa
imul
xor
incb
pop
adc
insl
mov
add
and
pop
je
add
sub
sbb
dec
outsb
aad
sub
sbb
add
and
pop
add
out
pop
sbb
sbb
inc
lods
xor
and
push
repz
push
cmpsl
xor
sbb
sbb
dec
negb
push
daa
add
push
enter
lret
aas
les
push
and
add
add
add
add
add
add
add
add
add
add
adc
add
inc
push
insl
or
cmp
enter
jmp
pushf
inc
push
cltd
movsb
fcoms
bound
inc
vmovapd
shlb
add
rolb
rolb
aam
jno
mov
ss
jp
in
test
ss
pop
push
jno
jne
dec
dec
jbe
push
push
jne
add
mov
add
add
add
xor
popa
push
pop
sbb
inc
inc
add
mov
fnsave
xchg
add
jae
xor
pusha
inc
repnz
ljmp
adc
sub
or
fsubrl
cmp
jo
pop
xor
pop
outsb
and
inc
outsl
push
dec
push
add
outsb
outsb
and
jae
sbb
outsl
loop,pn
jae
add
dec
add
repnz
jae
pop
outsb
imul
push
push
ds
inc
fldl
arpl
in
call
inc
push
push
cmpsl
ficoml
pop
fcoms
pop
je
and
movntps
fistps
bound
aas
aaa
xchg
pop
cmc
inc
jecxz
inc
jns
repz
repz
outsb
div
aaa
xlat
test
in
add
add
add
push
sub
repz
mov
xor
leave
repz
jmp
ss
lea
add
hlt
jp
pop
shll
iret
cmp
xchg
inc
and
in
ds
loop
push
push
js
add
xchg
xor
mov
pop
and
add
in
xchg
out
jbe
sbb
pop
adc
out
je
or
sbbl
cli
in
push
call
add
add
dec
movsb
push
insb
dec
mov
dec
push
loop
sbb
add
xor
xor
sub
push
out
repnz
push
mov
adc
push
xchg
repnz
dec
mov
cmpsl
dec
cs
fisttpl
push
in
cmp
lds
adc
rcll
cmc
shr
call
xor
shll
add
add
and
sahf
das
outsb
adc
add
arpl
je
jno
xchg
adc
arpl
jbe
jb
test
arpl
popa
xor
insl
add
lds
inc
rcr
popa
popf
scas
adc
jmp
mov
adc
lcall
ja
mov
add
inc
adc
jg
add
mov
cmpsl
clc
add
dec
movl
das
cmp
xchg
xor
out
lahf
add
aad
std
add
add
add
imul
pop
jb
dec
dec
imul
icebp
pusha
and
in
popa
jmp
sti
outsb
je
push
outsl
gs
add
decl
xlat
jae
dec
add
sbb
and
lcall
cmp
add
xor
out
add
pusha
jb
in
outsb
call
divl
arpl
or
pop
xchg
inc
out
cmpsl
or
cs
int
push
nop
or
jne
std
push
pop
push
add
insl
jns
and
pop
pop
ja
dec
push
outsb
sqrtps
mov
add
mov
and
add
and
lret
cmpsl
jns
jno
pop
push
jb
stos
push
insl
cmc
jne
jae
mov
jb
push
and
jb
pop
shll
jo
test
dec
push
jns
pop
sbb
add
ss
xor
es
sub
dec
xor
inc
and
pop
in
das
add
and
es
add
or
push
xchg
add
push
and
mov
inc
and
enter
aad
adc
dec
fwait
push
les
adc
xchg
and
sub
xor
pop
jle
add
lods
dec
mul
andb
push
add
mov
and
adc
jmp
xchg
jno
mov
pop
cmp
add
aas
je
scas
sub
push
leave
mov
insl
pop
pushf
arpl
stos
dec
push
cmp
arpl
xchg
adc
scas
cs
xchg
daa
add
test
mov
fists
push
sub
push
cltd
call
adc
lods
lds
pop
movsl
popf
adc
mov
ss
mov
dec
xor
sar
jno
add
shll
hlt
imul
std
ja
fstp
fs
jecxz
data16
shll
mov
outsb
ja
inc
popa
int
dec
je
hlt
pusha
and
shrb
popf
std
jno
shlb
dec
cmpsl
shll
mov
lcall
loope
insb
mov
stc
push
or
cld
dec
insb
rcl
ljmp
incb
ret
push
inc
add
inc
add
inc
add
add
inc
add
ds
add
xor
aam
pop
inc
add
inc
add
fs
add
jo
add
inc
add
dec
inc
add
inc
inc
add
dec
inc
add
inc
inc
add
dec
inc
add
inc
inc
add
inc
add
inc
add
lcall
pop
lahf
inc
add
inc
mov
inc
add
mov
add
sub
adc
pop
inc
add
inc
add
add
cmpsl
repz
cmpsl
jl
inc
cmpsl
in
inc
cmpsl
outsb
pusha
inc
cmpsl
fisubl
cmpsl
mov
push
inc
cmpsl
push
addb
addb
mov
into
addb
nop
inc
cmpsl
mov
inc
cmpsl
test
inc
cmpsl
adc
add
add
mov
inc
cmpsl
or
sub
inc
cmp
inc
cmpsl
push
daa
inc
cmpsl
and
sub
inc
sub
pusha
sub
out
and
in
ljmp
in
test
in
push
xor
add
and
add
in
push
sbb
add
in
cwtl
sbb
add
adc
add
jecxz
sahf
roll
add
add
add
jecxz
mov
arpl
test
movsb
add
jmp
movsb
add
jmp
movsb
add
lea
outsb
std
les
cli
jl
push
sbb
rolb
mov
push
dec
add
in
leave
add
add
lock
jle
fs
je
or
or
add
insb
jne
cmpsb
or
outsb
loop
insb
pop
or
or
inc
in
and
cmpsb
bound
out
jae
inc
cmpsb
sbb
and
sahf
push
and
insb
or
pop
and
pop
or
mov
sbb
and
movsl
sbb
mov
fbstp
jmp
add
loopne
insb
cmpsl
cld
aad
add
pop
sub
insb
add
jb
sbb
jl
cs
cs
stos
add
cmpsl
stos
xor
out
push
adc
sbb
outsb
push
aad
pop
sarl
arpl
dec
xor
mov
inc
daa
add
push
pop
inc
sbb
shlb
jb
stc
sub
daa
add
jb
or
arpl
jae
sub
sti
adc
add
arpl
add
add
adc
rclb
add
pop
cli
adc
xor
sub
sub
and
xor
daa
jnp
notl
adc
les
lcall
sub
adc
and
sub
add
add
pop
dec
add
add
add
add
add
add
add
add
add
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
add
add
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
add
add
add
add
add
jle
add
dec
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
add
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
add
cmpsl
stos
out
add
movsb
popf
mov
xchg
repnz
outsl
fsubl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
cmpsl
add
inc
cmpsl
add
jecxz
xchg
out
dec
xchg
out
cmpsl
add
cmp
add
cmpsl
add
cmpsl
add
add
add
add
add
add
add
in
movsb
add
jmp
add
call
hlt
fistpl
icebp
aam
dec
sti
fcompl
loopne
cld
inc
fucompp
and
mov
add
aad
and
adc
call
add
nop
pop
add
jno
add
stos
incb
out
add
adc
pop
cli
sbb
push
or
out
cmpsl
out
push
fbstp
or
shlb
pop
call
cli
hlt
and
cmc
mull
push
sub
mov
and
scas
mov
sub
popf
sbb
xchg
incb
dec
cld
dec
xchg
incb
lret
add
dec
cld
mov
xchg
incb
mov
add
add
xchg
std
add
std
add
push
add
mov
std
add
std
add
ds
ds
std
add
std
add
std
add
std
cmp
add
or
add
cmpsl
lahf
add
adc
incl
test
clc
fwait
add
cmpsb
fwait
add
call
cmpsl
add
cmpsl
fwait
add
add
fwait
add
cmpsb
fwait
add
cmpsb
fwait
std
pushl
fwait
add
mov
lahf
add
cmpsb
fwait
std
decl
cmpsl
std
jmp
cmpsl
std
cmpsl
lahf
add
pusha
fwait
add
cmpsl
lahf
std
jmp
lahf
std
incl
std
cmp
std
ljmp
add
jmp
add
lcall
add
add
or
out
cmpsl
add
add
add
test
and
cmpsl
add
xorl
movl
xchg
add
cmpsl
add
cmpsl
addb
mov
out
mov
out
cmpsl
and
cmpsl
and
xchg
add
add
add
add
and
xchg
add
add
and
cmpsl
add
add
cmpsl
add
adcl
jg
movsb
repnz
stos
add
jmp
and
add
and
jg
movsb
bnd
sub
add
movsb
add
leave
and
dec
movsb
bnd
movsb
repnz
and
sub
bnd
and
jg
and
add
movsb
bnd
and
orb
add
or
bnd
and
decl
stos
add
jmp
add
add
movsb
add
jmp
movsb
repnz
movsb
add
ljmp
add
pop
add
add
adcl
push
add
add
addl
sahf
xchg
add
add
subb
adc
push
add
add
add
or
add
add
add
or
add
add
mov
add
add
add
or
add
xchg
or
add
mov
add
xchg
add
add
push
add
add
add
cmpsl
fwait
jmp
fwait
add
scas
xchg
add
lahf
mov
ljmp
fwait
add
cmpsl
mov
add
cmpsl
xchg
incl
scas
fwait
jmp
lahf
fwait
incl
scas
fwait
add
scas
xchg
add
cmpsl
mov
add
cmpsl
fwait
incl
scas
fwait
lcall
fwait
jmp
xchg
incl
lahf
fwait
lcall
fwait
jmp
mov
ljmp
add
add
cli
fiadds
cmpsl
add
add
add
add
movsl
cli
out
add
cmpsl
add
add
add
add
cli
out
movsl
add
jecxz
add
fmuls
add
add
inc
add
daa
add
add
add
jecxz
mov
add
add
jecxz
add
or
push
add
add
call
movsb
add
jmp
add
jmp
inc
or
imul
mov
imul
add
movsb
add
imul
add
add
std
imul
add
add
imul
add
or
push
movsb
add
jmp
les
add
mov
imul
add
add
add
test
add
push
std
lcall
dec
lahf
jge
iret
aas
ds
std
decl
jg
dec
lahf
std
mov
jg
setg
decl
jg
lcall
add
push
jg
sahf
std
jle
jge
into
dec
incl
add
mov
incb
add
mov
incb
add
push
or
jle
add
cmpsl
fwait
add
out
add
in
add
in
add
cmpsl
fwait
add
out
add
movsl
fwait
add
out
add
out
add
cmpsl
fwait
add
out
add
in
add
in
add
movsl
fwait
add
gs
add
addr16
add
cmpsl
fwait
add
add
add
movsl
fwait
add
movsl
fwait
add
gs
add
cmpsl
fwait
add
cmpsl
fwait
add
gs
add
cmpsl
fwait
add
movsl
fwait
add
addr16
add
movsl
fwait
add
gs
add
out
add
movsl
add
add
inc
out
scas
add
add
add
add
inc
out
scas
inc
out
lahf
add
add
inc
out
add
add
add
inc
out
scas
add
add
add
add
inc
out
scas
add
add
inc
out
lahf
add
add
inc
xlat
add
loop
inc
cmpsl
add
inc
loopw
add
add
loop
call
in
and
in
add
movsb
inc
add
movsb
add
stc
movsb
inc
add
add
add
jmp
in
add
movsb
add
stc
movsb
inc
add
in
and
in
add
in
add
in
and
movsb
add
fldenv
and
movsb
add
stc
fs
add
fs
and
add
jmp
fs
and
movsb
add
jmp
movsb
add
stc
movsb
inc
and
fs
add
fs
and
mov
into
inc
add
jle
add
mov
inc
add
add
jle
add
jle
add
jle
add
dec
inc
inc
and
inc
add
inc
and
inc
add
inc
inc
and
add
add
add
add
add
inc
add
add
incb
add
inc
add
push
add
push
inc
add
push
add
add
inc
inc
and
add
and
add
add
inc
add
into
add
add
std
add
cltd
stc
pushl
fwait
stc
pop
cmpsl
fwait
stc
pop
mov
fwait
add
cmpsl
fwait
add
cmpsl
cltd
add
mov
fwait
add
mov
cltd
stc
lcall
stc
jmp
add
cmpsl
fwait
stc
jmp
add
mov
cltd
add
add
fwait
stc
decl
lcall
mov
cltd
add
cmpsl
fwait
add
stos
fwait
stc
pop
cmpsl
fwait
add
stos
add
sti
test
out
xchg
jmp
sti
mov
jmp
add
call
add
add
add
add
add
add
sti
nop
call
sti
rolb
sti
mov
push
test
add
out
xchg
out
nop
add
add
add
sti
mov
add
sti
test
out
out
clc
test
add
add
sti
loopne
add
movsb
loop
sub
test
jmp
mov
adc
movsb
add
sub
add
jmp
stos
call
add
adc
je
add
je
adc
push
test
test
movsb
decb
test
xor
or
jmp
movsb
ljmp
adc
adc
movsb
add
jmp
mov
add
add
std
jle
incl
add
add
mov
into
popl
adc
std
jle
jle
add
mov
add
jle
std
decl
decl
mov
add
incl
adc
decl
dec
incl
add
std
decb
add
push
decl
incl
adc
std
cmovle
popl
adc
mov
add
popl
add
cmpsl
fpatan
push
fdiv
call
cltd
add
mov
icebp
add
cwtl
add
cmpsl
cltd
add
cmpsl
cmp
sub
test
sub
mov
imul
cmpsl
shrl
mov
incl
insb
add
cmpsl
imul
cmpsl
scas
sub
pusha
inc
sub
pop
inc
sub
push
insb
add
cmpsl
imul
cmpsl
and
cmp
sub
add
xor
sub
cmpsl
imul
cmpsl
popa
and
adc
decl
add
sub
and
cmpsl
add
add
cmpl
fadds
out
cmpsl
add
sub
mov
out
cmpsl
add
add
adcl
add
add
sub
push
add
add
add
add
add
sub
or
sub
add
sub
addl
mov
cmp
gs
cmp
orl
lds
mov
addb
mov
add
jg
das
iret
jg
or
jg
insl
iret
jg
or
std
test
jg
xor
jg
inc
jg
std
xor
std
repz
jg
add
jg
lahf
jg
std
add
sub
lcall
std
dec
sub
call
std
ds
jmp
sub
call
sub
call
repnz
std
jle
std
jl
std
ljmp
sub
ds
std
decl
and
std
call
and
std
incl
std
decl
add
cmpsb
daa
std
add
add
sub
ljmp
sub
call
sub
jmp
stc
and
lcall
cmp
incl
adc
decl
sbb
incl
push
and
clc
push
and
call
or
fdivs
call
push
and
rorb
mov
adc
ljmp
fisubl
lcall
shll
mov
and
subb
js
and
jo
and
push
cmp
lcall
and
push
push
incl
dec
pop
and
inc
add
add
jle
and
jle
add
jle
sub
jle
sub
jle
sub
jle
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
sub
jge
daa
cwtl
jge
daa
nop
jge
daa
mov
daa
add
jge
daa
jo
xlat
daa
push
jge
daa
pop
jge
daa
push
jge
jno
jge
and
jge
adc
jge
jecxz
jge
jecxz
jge
mov
sarl
leave
jge
pop
push
jl
jne
jl
test
jl
movsl
jnp
cltd
jnp
mov
jnp
scas
jnp
std
add
jnp
std
sub
jnp
cmp
jge
stc
xchg
imul
add
mov
test
inc
inc
jge
add
pusha
call
pushl
decl
add
inc
popa
add
add
pusha
ljmp
popa
lcall
pop
ljmp
ljmp
lcall
popa
incl
cmp
ljmp
jmp
pusha
dec
dec
pop
mov
data16
fcomps
mov
data16
ljmp
pop
call
pop
fcompl
decl
pop
jmp
and
pop
sbb
push
pop
loope
dec
shl
inc
cmp
cmp
loope
xor
incb
sub
and
add
mov
add
cmpsl
scas
add
into
loopne
mov
jmp
aas
movsl
aaa
in
inc
sub
imul
and
lret
pop
dec
or
push
push
xor
add
bound
jo
imul
sar
cmp
inc
or
in
out
lock
out
out
add
add
out
lret
in
out
cmc
call
out
cmp
lock
jecxz
leave
mov
addl
add
lock
jp
mov
xchg
in
jp
add
cmc
jp
xchg
outsl
ret
cli
add
cmc
push
testb
testb
fistpll
lret
inc
ret
push
out
cmp
inc
out
xor
aaa
ret
out
or
and
cmp
add
in
adc
add
ljmp
adc
pushl
jo
mov
cmc
inc
sarb
push
shlb
push
mov
cmc
bound
inc
jmp
ds
inc
jmp
dec
xchg
fildll
movsb
push
add
fbld
xlat
fiadds
mul
call
mov
int3
dec
aad
jno
add
js
sbb
repnz
dec
loop
arpl
mov
jle
sub
xchg
call
gs
jle
xor
int
bound
imul
imul
jb
inc
dec
add
add
imul
imul
imul
dec
incl
repnz
jb
or
imul
arpl
jne
add
imul
pop
jb
outsl
dec
jnp
je
inc
jbe
arpl
lods
add
imul
jae
inc
data16
arpl
insb
jae
je
insl
jle
add
imul
jbe
cmpsl
into
add
pop
call
bound
push
shrb
in
out
dec
jmp
lret
ds
call
add
lods
shll
mov
in
insb
leave
sahf
stc
cmpsl
push
add
ret
insb
test
loop
imul
mov
icebp
jae
test
mov
add
js
in
arpl
out
inc
ds
pusha
push
enter
imul
jae
add
jmp
loope
out
lock
rcll
pmaxsw
out
std
add
out
hlt
shl
neg
aam
in
fsub
out
vpsrlw
out
mov
shl
aam
leave
out
rol
out
jmp
cmpsb
out
rcrb
out
lock
and
jp
jnp
lods
loop
fistpll
clc
jne
add
pop
aam
jmp
jecxz
fbstp
repnz
fdivrl
lock
lret
push
clc
mov
mov
cmp
lock
add
out
sub
lahf
out
adc
out
cmpsl
out
std
xchg
jmp
std
in
leave
jb
js
inc
loopne
loopne
into
jnp
arpl
fstpl
movsb
mov
lods
inc
icebp
push
rolb
inc
xor
jae
movsb
mov
bound
add
dec
jle
lock
push
in
std
shll
add
add
shll
out
jno
shll
stos
ret
jno
pop
pop
jno
lcall
jo
cs
outsb
lahf
outsb
jo
mov
std
ljmp
dec
jb
pop
bound
sub
jo
mov
sbb
xchg
outsb
bound
outsb
insb
arpl
jo
test
pop
bound
sub
jno
jmp
pop
insl
push
or
outsb
add
aas
std
call
fs
jb
pop
bound
ljmp
jo
pop
outsb
pop
push
mov
cmpsl
inc
xor
cmp
fidivs
out
jne
imul
bound
push
fists
sbb
pop
cli
sub
inc
call
incb
xchg
cmpsl
sbb
jae
movsb
in
lds
inc
add
cmp
push
fistl
pop
mov
test
inc
mov
in
lret
retw
imul
push
xchg
mov
or
jne
in
mov
dec
ljmp
es
push
jmp
inc
add
out
xor
cmp
and
sbb
push
testb
sbb
add
add
shl
or
js
xchg
add
out
leave
clc
out
int3
sti
cltd
add
add
out
rcl
out
cli
lret
scas
ret
jbe
aad
les
popl
loop
mov
ficoms
add
sub
sub
jb
repnz
and
xor
xchg
movsl
aam
inc
add
repz
in
inc
mov
aam
inc
shl
jae
test
jb
pop
stc
ds
push
fcoml
hlt
bound
stos
inc
lcall
dec
out
flds
repz
movl
std
loop
bound
pop
shrb
gs
mov
negl
or
fsubrl
movsb
pop
add
add
mov
gs
add
imul
push
jne
xchg
gs
bound
pop
arpl
outsl
insb
jg
ja
xlat
push
bound
bound
popa
push
jb
inc
std
pushl
imul
jno
mov
pop
dec
je
push
jno
pop
inc
std
ds
dec
je
push
inc
push
add
ds
dec
je
aas
insb
dec
cmp
add
pop
dec
je
mov
jae
lcall
fs
dec
pop
lcall
je
icebp
inc
jo
add
vdivps
and
cmpsl
shl
bound
sbb
arpl
add
cmpsl
add
jae
add
jae
adc
pop
cli
push
add
cmpsl
insb
out
or
lock
jo
add
outsl
jecxz
les
cmpsl
cmp
insb
aam
repnz
les
cmpsl
popf
add
aas
xor
pusha
fwait
add
add
add
add
lcall
fbstp
lock
enter
cmpsl
rclb
lock
repnz
pop
repz
loope
xor
es
ficoms
insb
add
in
out
icebp
add
push
repnz
psubsb
add
cld
fldl
loopne
icebp
or
call
fisttps
add
icebp
add
and
cmpsl
add
add
add
add
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
add
add
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
jmp
movsb
add
add
add
add
add
add
add
add
add
push
add
add
add
add
cmp
int3
int3
push
jns
push
sbb
pop
mov
addr16
ret
jb
in
push
jns
xor
inc
jns
xor
or
lahf
jnp
cld
sbb
pop
mov
cmpb
fdiv
add
jle
pop
mov
ja
addl
inc
loopne
mov
add
xchg
jns
in
jecxz
out
ljmp
sbb
testl
sub
testl
sub
testl
loopne
repz
ja
hlt
and
decl
mov
mov
push
lock
add
jns
fmull
ret
add
dec
dec
call
and
or
addr16
sbb
dec
sti
mov
idivl
in
sbb
jmp
loop
mov
incl
dec
std
mov
jg
add
mov
rorb
cmp
int3
int3
repz
in
addl
call
mov
mov
shl
sub
push
and
mov
add
pop
sar
sti
aas
add
mov
out
mov
imul
adc
inc
jg
inc
cld
cmpsl
add
add
push
pop
xchg
add
sar
or
or
jge
cld
sub
orb
out
and
mov
data16
lea
add
mov
add
int3
int3
jecxz
int3
int3
int3
int3
repz
int3
jb
in
mov
mov
xor
pop
ds
int3
int3
int3
int3
jae
int3
int3
bnd
mov
testb
cli
dec
lcall
mov
int3
pop
ss
int3
jae
int3
int3
bnd
addl
add
ret
xchg
stos
push
inc
add
pop
add
jge
clc
ja
mov
les
mov
push
sub
or
mov
sti
mov
mov
jb
in
push
call
add
jmp
jge
cld
and
decl
stos
sub
adc
mov
add
mov
testb
cmp
adc
add
add
xor
mov
ror
aaa
int3
int3
pop
aaa
int3
int3
jae
int3
int3
sarb
mov
ret
jnp
mov
jecxz
int3
int3
int3
int3
repz
int3
push
jnp
addl
mov
cmpl
testl
push
mov
pop
xchg
jnp
or
or
add
pop
pop
mov
add
dec
cld
sub
sti
cmp
outsb
jno
sbb
sti
mov
jb
mov
sarl
fidivl
inc
dec
jnp
lock
adc
es
xstore-rng
cmpsl
add
or
push
clc
sbb
push
add
mov
jnp
or
adc
or
cwtl
mov
jnp
or
movsb
les
mov
out
enter
lret
int3
push
jnp
add
mov
jns
in
mov
add
jnp
call
das
addl
cmpsl
jnp
lock
out
add
add
lock
rcr
mov
bound
test
add
mov
mov
add
sar
adc
add
add
sar
push
cmpl
bound
push
lahf
add
mov
mov
jns
or
jmp
mov
add
jnp
hlt
sbb
fisttps
cs
jmp
ljmp
inc
xchg
or
loop
cmpl
ljmp
push
pop
cmpl
add
shl
mov
jns
addl
sbb
lret
lcall
shl
mov
gs
sub
xchg
pop
sbb
pop
outsb
mov
sbb
pop
lea
add
mov
sti
dec
add
cs
mov
jp
mov
add
sub
jmp
incw
mov
fisubl
ret
push
loopne
cmc
cld
ljmp
jecxz
fs
int3
int3
bnd
addl
lock
ret
lcall
clc
mov
ja
clc
ja
ds
sbb
lahf
jns
cld
sbb
sqrtps
or
mov
sti
mov
mov
repz
int3
jb
in
mov
loope
push
inc
add
aas
mov
jae
int3
int3
bnd
addl
decl
sub
das
mov
sarb
sbb
or
sub
repz
testb
cs
mov
sub
inc
and
testl
or
mov
ja
sbb
int
jne
ja
clc
sub
or
add
mov
jbe
adc
rclb
cmpsb
add
add
jns
mov
xor
mov
inc
mov
cli
inc
int3
int3
arpl
int3
pop
dec
int3
int3
jae
int3
int3
rorb
les
add
add
add
dec
aas
mov
incl
les
cs
lea
add
lea
fdivrl
decl
cmpsl
popa
push
hlt
inc
aaa
push
inc
cmpsl
test
aam
ret
jp
mov
jmp
lea
add
push
push
push
sub
rcll
add
cmpsl
add
add
push
cwtl
popa
add
out
sub
movsl
add
mov
sub
push
inc
add
ret
call
ss
inc
cmpsl
mov
dec
aaa
mov
popf
cmp
subl
adc
movsb
mov
mov
mov
pusha
loop
add
int3
int3
push
in
mov
cmp
aad
mov
jmp
inc
mov
dec
int3
int3
repz
int3
int3
push
in
add
lds
add
cmpsl
mov
add
xlat
mov
cmp
cmp
mov
mov
bound
push
xchg
inc
call
cmpsl
mov
cld
repnz
dec
sar
cmp
push
ljmp
xchg
add
push
pop
push
lock
jecxz
pop
bound
dec
lahf
mov
push
add
std
and
lds
fildl
add
cmpsl
imul
push
add
sbb
fisttps
lock
cmp
push
jno
sub
out
maskmovq
jae
mov
and
repz
mov
mov
sbb
fisttps
mov
mov
adc
not
push
mov
shrd
mov
inc
aas
mov
movsb
lret
sub
out
bound
inc
mov
or
sub
mov
cmpl
adc
push
cld
fcomps
les
add
dec
iret
mov
pushl
loop
push
inc
cmpsl
add
sbb
lock
out
dec
fidivrl
cmpl
out
ljmp
cmpsl
add
inc
inc
mov
negb
lock
add
add
push
inc
cmpsl
imul
das
cmpsl
add
add
mov
add
aam
data16
jne
call
add
sbb
sti
push
dec
add
push
xlat
mov
mov
mov
sub
xlat
mov
add
mov
sbb
fisttps
loop
push
mov
mov
xchg
sbbl
add
mov
cmpl
inc
inc
mov
movsb
mov
dec
push
mov
push
ss
inc
cmpsl
sub
add
push
inc
cmpsl
mov
add
ret
call
not
push
data16
push
push
call
and
or
pop
bound
add
push
inc
cmpsl
cmpl
pushl
cs
aam
pop
ret
decl
unpcklps
add
mov
push
inc
cmpsl
mov
jne
pop
std
subl
aam
sar
jg
idiv
push
jecxz
xor
ret
mov
mov
push
ds
std
andl
inc
pop
mov
aam
sar
sub
fisttps
cmpsl
incl
jbe
adc
pop
sar
movaps
push
jg
or
inc
push
push
inc
cmpsl
add
mov
mov
dec
push
call
push
inc
cmpsl
mov
push
shrl
sti
mov
add
mov
dec
int3
int3
jae
int3
int3
rolb
mov
mov
int3
int3
repnz
push
stc
mov
cmp
sub
jmp
out
mov
enter
add
dec
int3
int3
jb
in
push
jg
add
mov
push
call
and
or
scas
mov
add
push
pushl
mov
bound
int3
int3
push
xchg
add
lds
add
add
add
add
repz
push
add
cmpsl
add
inc
mov
add
cmpsl
lea
cs
push
add
add
test
push
mov
add
into
or
stos
pop
push
inc
cmpsl
add
add
pop
push
inc
cmpsl
add
add
ret
pushl
lds
cmpsl
add
add
clc
push
data16
jne
in
mov
push
inc
cmpsl
movsl
lock
data16
add
enter
push
push
inc
cmpsl
lea
add
mov
mov
ret
jmp
add
mov
cld
bnd
inc
stos
push
push
inc
cmpsl
iret
add
ljmp
xor
ret
pop
add
data16
adc
inc
cli
push
inc
cmpsl
mov
push
call
and
add
bound
dec
xlat
mov
aad
leave
pop
std
sub
mov
mov
push
push
mov
push
call
and
or
ficoml
dec
xchg
jae
mov
xlat
mov
imulb
sti
pop
pop
add
out
mov
aad
or
out
add
mov
or
movsb
vsqrtsd
das
idiv
or
add
sub
repz
add
mov
sbb
sti
add
xchg
mov
jl
add
add
bound
add
scas
testl
int3
mov
or
fcmovb
incl
ljmp
mov
movsb
mov
dec
clc
es
out
cmpsl
add
add
movsb
lods
divl
popf
mov
add
mov
jmp
mov
in
sar
lret
inc
cmpsl
adc
mov
adc
mov
push
neg
push
mov
push
cmpsl
add
add
imul
push
scas
sub
mov
mov
push
call
and
add
stos
dec
push
inc
add
push
std
test
add
addr16
mov
add
push
out
add
aam
out
xchg
out
sbb
mov
mov
xor
mov
pop
in
int3
int3
cmpsl
add
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
add
add
dec
cmp
pop
cmp
push
cmp
cmp
cmp
popf
cmp
aas
xchg
and
ds
and
fwait
aas
cmp
aas
call
cmp
aas
xchg
cmp
aas
add
push
add
cmp
add
mov
xor
xor
xor
xlat
xor
xor
in
xchg
xor
xor
xor
fdivl
push
xor
popa
xor
xor
xor
xor
xor
xor
xor
das
sub
gs
jle
das
xor
xor
adc
mov
xor
das
fnsave
shrb
xor
or
ss
lds
sub
xor
ss
xor
mov
ss
pop
ss
mov
and
mov
pop
xor
sub
movsl
xor
cmpsl
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
inc
add
inc
add
inc
add
fiaddl
enter
int3
fiaddl
rcr
inc
add
fiaddl
fcomp
inc
add
fiaddl
loopne
inc
add
fiaddl
call
fiaddl
lock
hlt
fiaddl
clc
fiaddl
cld
fiaddl
add
inc
add
inc
add
fildl
or
inc
add
fildl
adc
inc
add
fildl
sbb
inc
add
fildl
and
inc
add
fildl
sub
inc
add
fildl
xor
inc
add
fildl
cmp
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
fildl
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fildl
enter
int3
fildl
rcr
inc
add
fildl
fcomp
inc
add
fildl
loopne
inc
add
fildl
call
fildl
lock
aam
inc
add
fildl
clc
fildl
pushf
fildl
cld
fildl
add
inc
add
inc
add
inc
add
faddl
cwtl
fildl
or
inc
add
faddl
sub
inc
add
inc
add
faddl
inc
add
inc
add
faddl
and
inc
add
inc
add
faddl
sub
inc
add
faddl
xor
inc
add
inc
add
faddl
cmp
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
fildl
pop
faddl
and
inc
add
inc
add
add
fiaddl
push
faddl
jo
inc
add
add
inc
add
add
faddl
mov
inc
add
inc
add
inc
add
faddl
mov
faddl
test
inc
add
fildl
lods
faddl
mov
inc
add
inc
add
inc
add
faddl
inc
add
faddl
int3
faddl
xchg
faddl
int3
fildl
rcr
inc
add
faddl
fcomp
inc
add
faddl
loopne
inc
add
faddl
call
faddl
in
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
inc
add
loope
add
inc
add
loope
add
loope
add
inc
add
loope
add
inc
add
inc
add
loope
add
inc
add
loope
add
inc
add
loope
add
inc
add
loope
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
inc
add
loope
add
loope
add
loope
add
loope
add
inc
add
loope
add
loope
add
loope
add
loope
add
loopne
add
loope
add
loopne
add
loope
add
loope
add
loope
add
loope
add
loope
add
loop
add
inc
add
inc
add
loop
add
inc
add
loope
add
loop
add
inc
add
loope
add
add
loope
add
loop
add
inc
add
loop
add
inc
add
loop
add
inc
add
loop
add
inc
add
loop
add
inc
add
loopne
add
loope
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
loope
add
loope
add
inc
add
add
inc
add
add
inc
add
loop
add
loop
add
inc
add
inc
add
inc
add
loopne
add
inc
add
inc
add
loopne
add
loop
add
inc
add
loop
add
loope
add
add
inc
add
inc
add
loop
add
loope
add
add
loope
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loope
add
loop
add
loop
add
loope
add
loop
add
loop
add
loop
add
loope
add
loop
add
loope
add
loope
add
loop
add
add
loope
add
loop
add
add
loope
add
loop
add
inc
add
jecxz
add
inc
add
loop
add
loope
add
jecxz
add
inc
add
jecxz
add
jecxz
add
inc
add
add
inc
add
inc
add
loope
add
jecxz
add
inc
add
jecxz
add
inc
add
jecxz
add
loop
add
loope
add
inc
add
jecxz
add
inc
add
inc
add
add
loope
add
add
inc
add
loope
add
inc
add
add
inc
add
add
inc
add
add
inc
add
loopne
add
inc
add
inc
add
add
inc
add
add
jecxz
add
add
inc
add
add
inc
add
inc
add
add
inc
add
loop
add
loop
add
loope
add
loop
add
jecxz
add
loop
add
loope
add
inc
add
inc
add
loope
add
inc
add
add
loop
add
inc
add
loope
add
inc
add
jecxz
add
inc
add
inc
add
inc
add
jecxz
add
inc
add
loop
add
add
loope
add
inc
add
inc
add
jecxz
add
loop
add
jecxz
add
loope
add
inc
add
jecxz
add
jecxz
add
loope
add
jecxz
add
jecxz
add
inc
add
jecxz
add
inc
add
fldl
or
inc
add
fldl
adc
inc
add
fldl
sbb
inc
add
fldl
and
inc
add
fldl
sub
inc
add
fldl
xor
inc
add
fldl
cmp
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
fldl
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fldl
int3
fldl
rcr
inc
add
fldl
mov
inc
add
fldl
inc
add
fldl
in
inc
add
fldl
in
fldl
lock
hlt
fldl
clc
fldl
cld
fldl
add
inc
add
inc
add
fiadds
or
inc
add
fiadds
adc
inc
add
fiadds
sbb
inc
add
fiadds
and
inc
add
fiadds
sub
inc
add
fiadds
xor
inc
add
fiadds
adc
inc
add
inc
add
inc
add
inc
add
fldl
inc
fiadds
dec
fiadds
dec
fiadds
push
fiadds
push
fiadds
pop
fiadds
pop
fiadds
adc
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
fiadds
or
inc
add
fiadds
nop
fiadds
sbb
inc
add
inc
add
inc
add
inc
add
fiadds
test
inc
add
inc
add
inc
add
fiadds
rcr
add
add
fiadds
enter
int3
fiadds
rcr
inc
add
fiadds
fcomp
inc
add
fiadds
loopne
inc
add
fiadds
jo
inc
add
fiadds
in
fiadds
lock
hlt
fiadds
clc
fiadds
cld
fiadds
add
inc
add
inc
add
filds
or
inc
add
fldl
adc
inc
add
inc
add
filds
sbb
inc
add
filds
and
inc
add
filds
sub
inc
add
fiadds
xor
inc
add
inc
add
filds
cmp
inc
add
inc
add
inc
add
inc
add
inc
add
filds
dec
filds
push
filds
push
filds
xor
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
add
fldl
js
inc
add
add
filds
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
filds
and
inc
add
filds
je
inc
add
filds
filds
enter
and
inc
add
filds
rcr
inc
add
filds
fcomp
inc
add
filds
xchg
fiadds
inc
add
filds
in
inc
add
filds
clc
fldl
jo
inc
add
filds
lock
hlt
filds
pushf
fldl
clc
filds
cld
filds
inc
add
loopne
add
inc
add
loopne
add
inc
add
inc
add
fldl
adc
inc
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
inc
add
add
loopne
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
inc
add
add
fldl
dec
loopne
add
add
inc
add
filds
push
loopne
add
inc
add
fldl
xchg
fiadds
pop
loopne
add
inc
add
add
inc
add
add
inc
add
inc
add
add
inc
add
add
loopne
add
loopne
add
add
loopne
add
fiadds
pushf
loopne
add
fldl
movsb
loopne
add
inc
add
loopne
add
loopne
add
loopne
add
loopne
add
inc
add
loopne
add
fldl
int3
loopne
add
inc
add
loopne
add
loopne
add
add
loopne
add
loopne
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
push
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
call
mov
push
push
call
push
push
call
movl
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
movl
pop
ret
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
cmpl
jne
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
movl
mov
add
mov
mov
add
mov
add
mov
add
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
pusha
mov
movl
push
push
call
push
call
mov
movl
movl
lea
push
lea
push
lea
push
call
movzwl
cmp
je
xor
jmp
lea
push
push
push
push
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
jne
xor
jmp
movl
movl
movl
movl
movl
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
call
pop
call
pop
call
pop
call
pop
jmp
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
