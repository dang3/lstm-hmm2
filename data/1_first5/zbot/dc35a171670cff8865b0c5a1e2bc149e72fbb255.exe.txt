push
cltd
sti
incl
inc
add
push
push
je
imul
sub
or
sub
sub
pop
ss
xor
xor
or
or
push
dec
bound
arpl
or
mov
xchg
incl
push
jns
je
insl
jmp
mov
pop
or
orl
je
orl
jo
orl
insb
push
enter
push
xor
and
and
and
xor
or
enter
xor
enter
mov
enter
sub
incl
mov
call
testb
je
movzwl
div
and
mov
sbb
arpl
sbb
and
and
add
lret
jg
hlt
mov
cmp
jne
push
mov
out
jg
das
or
xor
mov
jmp
mov
jg
fucomip
mov
or
add
mov
std
outsl
push
lea
mov
mov
or
inc
cmp
negb
mov
dec
adc
mov
mov
lds
adc
lret
mov
push
push
clc
mov
mov
jg
xor
mov
jmp
mov
dec
inc
addl
cmp
inc
push
adc
xchg
push
mov
add
push
insl
imul
outsb
fldt
pop
adc
xor
add
ds
add
loopne
mov
inc
mov
push
aaa
fnstenv
lock
jg
pop
mov
mov
pop
fdivrp
mul
jns
mov
lret
add
cmp
jne
in
fsubrl
sbb
or
lret
mov
add
shlb
push
pop
mov
pop
cmp
jne
mov
mov
sbb
lock
out
pop
pop
lea
xchg
in
hlt
outsl
outsb
imul
xor
push
pop
outsl
jb
sbb
add
stc
add
fbstp
sbb
jne
and
or
push
sub
andl
ret
dec
push
pop
sub
xor
testb
jne
sub
xor
pop
fnstsw
out
jbe
lret
mov
add
sub
mov
sub
jle
or
mov
push
lods
jmp
gs
xchg
mov
fildl
jne
mov
adc
nop
ret
mov
inc
xorl
pop
mov
and
and
sti
decl
push
xorl
clc
mov
test
je
sbb
lock
adc
movsl
outsl
push
es
mov
enter
lods
inc
mov
pop
pusha
push
dec
push
jbe
push
jne
js
add
test
jbe
inc
inc
mov
lahf
call
mov
stc
leave
mov
stos
adc
mov
jno
mov
insl
imul
pop
sbb
jb
int
add
adc
inc
mov
push
jbe
or
or
push
popa
cwtl
imul
dec
jbe
add
fcmovnu
xchg
rcrb
jge
mov
ficoms
mov
mov
aam
pop
dec
or
adc
or
add
sbb
out
leave
mov
dec
call
jge
aaa
dec
scas
lea
loope
loope
sbb
rcrb
ret
cmp
notl
fisttpl
aad
sub
test
pop
jmp
push
push
mov
cmp
in
jae
xor
jge
pop
adc
jbe
adc
add
ret
jae
mov
lret
or
push
push
adc
sbb
inc
xor
push
jae
pop
fdivl
jne
rolb
pop
ljmp
xor
test
add
fsts
add
mov
and
mov
mov
add
lahf
jnp
fcmove
dec
xchg
imul
arpl
rcrb
or
jg
mov
cwtl
mov
scas
pop
mov
stos
pop
mov
add
and
sbb
in
pop
inc
mov
ja
mov
das
jne
add
cmp
lea
outsb
xchg
cmp
pop
xor
fidivrl
sbb
or
or
cli
xor
rolb
add
out
aas
jmp
out
push
cmp
je
jmp
jne,pn
push
pop
lcall
lods
mov
sub
int
add
jns
push
mov
clc
fwait
mov
insl
sub
jb
or
or
adc
mov
mov
jnp
jmp
push
push
inc
int3
add
xor
push
in
and
jl
fnsave
scas
adc
jo
cmp
pop
jb
pop
fildl
mov
inc
js
and
into
push
or
shlb
sbbb
jo
cmp
add
mov
shlb
xor
pop
outsl
ja
addr16
dec
push
mov
pop
xchg
hlt
lret
test
je
ret
cmp
lds
rcll
adc
cmp
or
xchg
jmp
xchg
xlat
inc
mov
cmp
push
movsb
push
push
pushl
mov
lods
adc
add
cmpb
pusha
mov
adc
sbb
js
fisttpll
and
push
outsl
outsl
ja
sbb
cmpl
notb
or
cmp
movl
add
cmp
mov
or
pop
mov
mov
mov
pushf
adc
cmpsl
xchg
loopne
pop
loope
sbb
in
sub
out
ret
ret
repz
jle
lret
jae
inc
out
sbb
and
sbb
cmp
movsl
les
pop
sbb
jmp
xchg
dec
add
xchg
sbb
adc
faddl
jne
and
call
out
cmpl
je
add
fmul
inc
push
or
fists
adc
leave
stc
iret
sbb
popa
negl
call
cmp
hlt
jne
add
ds
or
insb
jne
test
jns
lret
jle
jg
add
cli
add
dec
push
xor
fisttps
sub
insl
or
pop
push
sub
sbb
iret
pop
test
jl
mov
add
inc
adc
sbb
adc
ret
sbb
push
or
sbb
in
mov
mov
cmp
scas
add
sub
ja
mov
popl
movl
rcrl
push
movsb
es
add
btc
loope
popf
mov
add
incl
imul
adc
je
or
int
loope
adc
pop
cmp
push
or
xchg
mov
ss
add
or
dec
or
je
push
clc
ret
inc
sqrtps
loope
inc
loopne
cmp
fiaddl
jecxz
sub
adc
ret
outsl
test
testb
sub
aam
dec
mov
arpl
inc
push
add
fbld
loop
ja
cli
idivl
test
pusha
add
add
sbb
aaa
test
add
sbb
push
and
mov
fistl
or
sub
daa
jb
out
push
in
js
mov
or
test
rcrl
jg
lock
xor
adc
push
sub
enter
data16
xlat
fadd
dec
or
sbb
or
add
mov
lret
cmp
mov
outsb
test
cmp
fstpt
movl
lea
jbe
mov
aam
lods
mov
testl
in
jbe
xchg
hlt
or
push
call
dec
mov
sti
jbe
jns
shlb
jo
outsb
cmpsl
data16
in
adc
add
loope
xchg
or
add
xchg
scas
fisubs
sbb
push
or
les
jge
jl
jmp
or
jae
ret
int3
push
sti
sub
sar
inc
adc
inc
or
cwtl
mov
jns
pop
hlt
movsl
xlat
std
cs
sub
sbb
negl
push
mov
stos
dec
cmp
push
inc
xlat
loop
lea
setl
mov
and
push
jp
jae
shlb
sub
add
mov
add
add
add
mov
jle
test
push
cmp
jne
mov
arpl
adc
sti
jmp
orl
fstl
aam
inc
ret
jnp
std
lods
pop
js
xchg
fimull
mov
xchg
inc
add
movl
and
push
push
ret
xor
and
sub
pop
push
pop
int3
or
cli
je
xchg
jg
iret
add
in
dec
xor
or
mov
pop
and
or
out
mov
push
into
add
mov
stos
aad
nop
xor
lahf
lods
fcoms
lcall
add
mov
fsts
or
jg
pop
mov
pop
je
int3
jbe
insb
mov
adc
inc
cmpl
pusha
or
je
or
adc
pop
leave
shlb
add
hlt
sub
rcll
sbb
clc
push
add
add
sub
js
stc
ds
das
fucomp
imul
test
sarb
xchg
fmulp
je
xor
push
push
movsb
jne
iret
addb
pop
gs
mov
jo
xchg
mov
sub
in
sbb
mov
or
out
aad
je
clc
mov
jmp
cld
dec
or
lds
testl
fisttpl
sti
fwait
cmp
pop
or
fimull
xor
push
clc
cmp
insl
imul
aad
or
adc
pop
xchg
int
outsb
xchg
and
or
cmp
sub
or
fwait
jmp
inc
scas
or
out
dec
lock
loopne
hlt
sub
mov
in
pushw
or
pop
pop
adc
inc
cld
ret
call
cmp
pop
shlb
popa
push
in
or
pop
cmp
jmp
jb
jb
inc
adc
das
sti
and
inc
cld
pop
mov
lock
and
mov
iret
nop
cmp
jne
jae
mov
lahf
or
and
sub
or
push
sub
sbb
ret
mull
sbb
sahf
decl
mov
int
sub
mov
pop
push
cmp
popa
mov
cmpl
or
push
xchg
cmp
adc
push
sbb
ret
and
lea
add
loope
shlb
sub
sub
outsb
cmove
add
mov
addl
or
mov
add
out
cmp
or
jmp
pop
or
sbb
or
adc
or
xchg
into
dec
sbb
lods
lods
inc
js
mov
and
xor
add
shlb
sarb
xchg
jo
hlt
sti
mov
and
cmp
lods
mov
rolb
or
or
cmpsl
lahf
nop
out
sub
idivl
adc
pusha
mov
xchg
sub
pusha
cmc
pop
cmp
add
lds
cmp
and
ds
and
dec
add
sub
popa
lock
push
ret
sti
sub
mov
dec
fadds
jmp
cmp
adc
outsb
mov
lods
push
jae
mov
and
pop
or
pop
sbb
notl
les
imul
movl
cwtl
jmp
sub
aam
mov
mov
add
in
sub
add
cmp
iret
sub
xlat
sbb
xchg
xor
push
mov
sbb
dec
xor
rorb
ds
in
xlat
adc
sbb
test
fmuls
cmp
in
adc
movb
nop
rorl
add
jbe
clc
jle
adc
sub
mov
xchg
aas
int
sub
stos
aad
fmuls
jle
dec
call
ret
mov
push
mov
sbb
insb
jae
stos
adc
push
iret
cmp
aad
mov
jmp
fldt
je
push
mov
daa
inc
pop
or
sbb
imul
ret
sub
lahf
sbb
cs
pop
jne
adc
mov
xor
outsl
mov
popa
lret
bound
cmp
data16
or
pop
xchg
outsb
or
cwtl
add
jo
xlat
sahf
sti
mov
mov
stos
dec
in
aas
inc
aas
jg
loopne
adc
ret
push
push
push
cmp
mov
xor
xchg
and
push
repz
mov
add
or
ljmp
jle
cmp
jg
sub
inc
cli
jl
cmp
jg
add
mov
inc
outsl
lock
repz
adc
leave
jmp
shr
loopne
fcmovb
mov
aas
ret
cmpl
fcmovnbe
mov
aaa
push
pop
cltd
inc
dec
mov
xchg
add
add
mov
lea
add
or
lea
lods
or
mov
jne
mov
adc
adc
ja
or
lock
and
or
xchg
in
call
jle
mov
mov
je
sar
js
rep
mov
and
iret
mov
lea
sbb
std
loopne
in
pusha
sbb
cld
and
scas
xor
or
sahf
xor
fdivrl
mov
sub
push
dec
lea
outsl
lock
jae
roll
jmp
cmp
cmc
lret
jmp
pop
add
loopne
addb
sbb
fs
mov
int3
ret
pusha
mov
adc
inc
cmp
std
mov
add
and
or
jne
call
jae
test
or
sbb
outsb
mov
dec
jmp
hlt
dec
movsl
dec
mov
imul
int
movzwl
shl
add
or
rep
mov
rcl
jo
stos
pop
aas
sub
insb
negb
fistpll
int3
add
push
inc
je
je
mov
push
lret
iret
repnz
je
and
je
pop
dec
negl
je
xor
daa
adc
in
push
or
sub
adc
ja
cmp
ja
lea
add
pop
sub
out
ljmp
imul
push
neg
jle
js
pop
sub
arpl
imul
inc
inc
and
pushf
mov
insb
iret
mov
filds
jb
dec
and
pop
adc
fstpt
add
push
leave
into
add
aad
pop
mov
pop
xor
mov
aad
ds
js
loope
or
cmpsb
in
inc
mov
mov
in
jl
sti
lcall
sub
loop
lea
fucomi
out
fcomi
lods
push
xchg
add
je
pop
out
jge
mov
xlat
adc
das
jae
push
jge
jge
inc
stc
add
pop
leave
xor
sbb
fisubrl
fstp
fldt
fldz
fs
xor
enter
inc
enter
pslld
or
or
ret
paddb
daa
mov
adc
mov
xchg
lahf
sub
sbb
add
mov
xor
movsl
aam
sub
std
out
xchg
sub
sub
pop
jecxz
add
out
repz
sbb
mov
cmp
fidivrs
jmp
outsl
call
mov
bound
cmpb
xlat
fadds
stc
das
nop
lods
outsb
xor
xchg
push
or
push
push
incl
in
int3
into
sbb
rorl
fstl
popa
push
pop
test
enter
mov
jmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
incl
dec
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
das
mov
cmpsb
iret
decl
js
inc
call
mov
cmp
incl
test
stos
pop
out
sub
imul
divl
jl
xor
cmp
ljmp
cld
xchg
push
mov
inc
mov
push
inc
mov
push
sbb
sarb
dec
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
incl
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
sbb
mov
addl
cmp
xor
mov
cmp
xchg
pop
cmpsb
lock
mov
popa
mov
mov
stc
repz
mov
subb
and
and
and
mov
outsb
bound
xor
and
add
xchg
jne
push
jmp
mov
or
faddl
push
xchg
cmp
pop
loop
pop
hlt
movzwl
shll
lods
jns
inc
push
movsl
mov
movsl
subb
clc
hlt
add
int
hlt
push
xor
add
dec
shrl
cmc
push
and
cmp
out
mov
mov
adc
aas
or
mov
shrl
push
inc
push
inc
pop
inc
outsl
jb
popa
iret
ljmp
pop
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
fildl
fldcw
mov
mov
mov
inc
cmc
add
mov
test
sbb
test
rorb
and
sbb
fdivrs
rclb
mov
test
popa
add
dec
repz
shlb
cld
ret
inc
ret
push
mov
addl
pop
pusha
mov
mov
adc
enter
pop
faddl
or
jmp
cmp
je
xchg
jp
jae
mov
sti
sbb
push
mov
mov
nopl
sbb
jecxz
adc
or
mov
mov
pop
outsl
sub
pop
mov
add
jmp
stc
repnz
pop
jb
shrd
sub
jmp
cld
rorb
mov
mov
adc
aas
xchg
sti
out
mov
pop
jge
mov
sbb
popa
lock
push
in
add
adc
insb
mov
inc
adc
adc
inc
fldt
mov
mov
dec
clc
and
mov
pushf
mov
jae,pt
setne
fdivr
gs
pop
mov
ret
pop
out
cmpsb
or
adc
mov
in
sbb
mov
cmp
sbb
jo
jne
pop
jbe
xchg
xchg
or
jne
or
je
and
test
jnp
aam
enter
or
cltd
sbb
sbb
pop
push
xchg
in
mov
pop
mov
rolb
cmc
or
repnz
cmp
ret
jae
jle
pop
mov
enter
or
mov
jns
fdivr
repz
lcall
negb
pop
sbbb
add
fadds
fdivl
data16
shlb
rcll
dec
aam
adc
pop
push
push
push
xchg
pop
cs
lock
aaa
dec
jl
cmp
mov
mov
pop
imul
xor
dec
jge
pop
jp
adc
and
ljmp
adc
jno
sbb
jae
inc
inc
fbstp
ds
push
clc
mov
out
shlb
adc
je
push
lods
or
and
add
xor
jmp
in
push
ficoms
movsb
jnp
push
add
add
xchg
xor
pop
addr16
add
sti
mov
addb
push
push
mov
cld
sbb
sbb
jmp
filds
jne
movsbl
add
xchg
fwait
xor
in
and
push
pop
loope
mov
and
movlps
loop
mov
ret
sbb
pop
arpl
testl
out
push
fisubs
stos
dec
adc
outsb
mov
and
ror
push
js
adc
dec
shlb
out
outsl
aad
cmp
cli
out
push
je
xor
js
call
ja,pn
clc
sbb
add
mulb
insl
rcrl
stos
dec
jp
jl
lods
lds
push
mov
mov
or
push
cmp
mov
fucomp
je
sbbl
jbe
sbb
sbb
sub
insb
push
fcompl
mov
sub
pushl
mov
xchg
sti
sbb
add
sub
mov
mov
and
jmp
sub
test
or
and
mov
fldcw
mov
les
mov
inc
add
testb
xchg
into
mov
ss
int3
cmp
lock
lahf
cmpsb
sbb
pop
push
push
push
push
push
inc
pop
bound
mov
xor
xor
pop
xchg
dec
lea
mov
xchg
inc
or
pusha
add
lahf
mov
cmp
int3
addr16
xor
or
pop
add
lea
repnz
pop
mov
jne
pop
jp
mov
ret
xor
jmp
ret
fistpl
rclb
pop
add
xor
std
jg
je
cmp
push
sub
std
jg
call
cmp
pusha
add
call
xor
push
cmp
ljmp
adc
xchg
and
add
cmp
testb
daa
cmp
mov
jmp
mov
es
jmp
test
iret
jmp
bndldx
into
mov
fbstp
or
cmpsb
lock
push
or
pop
pop
xchg
xor
addr16
mov
sbb
xor
inc
aas
lahf
mov
out
je
sub
xor
push
and
push
jne
or
cmp
fcompl
or
out
or
imul
pushf
mov
stos
fbld
or
fstps
scas
pop
xor
or
outsb
in
aaa
out
out
je
push
pop
mov
scas
rcrl
sarb
pop
jns
cmp
or
add
adc
or
es
mov
loop
inc
or
push
mov
fisubl
lds
jmp
bound
out
sbb
sbb
fadds
adcl
adc
jb
adc
lock
ss
sub
jno
xchg
xchg
lret
outsl
mov
vmwrite
xor
sbb
fnstcw
pop
or
cmp
jg
imul
daa
movl
sbb
mov
adc
sub
in
out
inc
and
add
ret
pop
outsl
sbb
cmp
lea
cmc
push
mov
add
or
movsl
adc
or
jmp
pop
fbld
add
mov
or
gs
inc
mov
sbb
insb
pop
sbb
cltd
idiv
add
push
adc
sti
pop
dec
clc
rcrl
rcl
mov
flds
pop
insl
sub
iret
dec
sbb
or
fstpl
push
neg
sbb
inc
pop
sub
lahf
adc
ja
add
mov
mov
mov
movsl
sub
jg
iret
inc
xchg
loopne
dec
insb
push
cmp
sti
push
lock
cmp
mov
dec
ret
shll
jle,pt
lock
push
jl
adcl
push
lea
pop
sub
fsubl
pop
stc
into
pop
pusha
or
add
push
loopne
mov
sbb
inc
xchg
cmpb
push
cmpl
lea
and
cld
jae
push
lcall
or
mov
enter
mov
jbe
jne
pop
add
inc
or
dec
out
bound
sbb
jbe
jp
mov
sbbb
lds
push
xor
jne
lahf
out
sti
test
adc
int3
ss
jne
mov
mov
inc
stos
pusha
sub
mov
push
hlt
lods
add
cmp
imul
xor
jnp
bound
xchg
mov
lock
pop
cli
clc
dec
jl
addl
adc
incl
and
pop
push
ss
fstl
sub
movl
mov
sbb
dec
jne
pop
mov
and
sbb
mov
adc
pop
or
hlt
pusha
fbstp
pushl
xchg
dec
mov
or
ljmp
and
push
or
sub
movw
pop
mov
mov
push
cld
lcall
pop
test
xchg
stc
mov
jne
xchg
lock
mov
sub
mov
mov
in
shrl
xor
add
addr16
and
add
addb
cmp
insl
fisttpll
sar
insb
inc
icebp
imul
jg
clc
repz
frstor
pop
lea
cmp
sub
push
loop
imul
pextrw
iret
jl
gs
mov
scas
dec
testl
add
push
shll
mov
xor
or
adc
inc
in
mov
push
nop
mov
test
lock
xor
push
and
or
cmp
lret
outsl
sbb
pop
add
je
add
mov
push
out
outsl
add
jmp
push
out
imul
cmp
and
pop
add
int
mov
in
add
cmp
lock
xchg
pop
cmp
dec
nop
push
aam
pop
mov
repnz
mov
mov
sbb
loope
aaa
mov
int
cld
ret
sbb
inc
mov
mov
pop
push
mov
push
cld
add
cmpsb
mov
mov
adc
push
mov
stc
iret
cs
mov
cmp
fidivrl
or
lret
mov
jno
mov
add
mov
int3
inc
cld
xor
iret
pop
lret
push
pop
dec
mov
cli
xor
push
push
pop
pinsrw
mov
dec
clc
inc
jo
lret
mov
ret
and
push
xor
mov
xchg
adc
or
jns
inc
mov
cmp
out
add
or
iret
push
es
mov
push
pop
jae
ja
mov
cmp
aaa
add
dec
jmp
xchg
push
mov
or
sbb
add
mov
insl
adc
dec
jne
out
into
icebp
mov
pop
lea
jmp
das
xor
adc
and
cmp
dec
mov
sub
push
movsl
pop
or
or
pop
mov
add
cltd
daa
push
das
fcompl
mov
jns
sbb
jg
dec
jl
cmp
jge
sub
inc
sbb
fldcw
cmp
in
adc
rolb
mov
jmp
mov
adc
pop
mov
ds
daa
xchg
ljmp
add
dec
jge
cmp
jle
inc
mov
cld
js
ljmp
test
sub
das
test
adc
pop
bound
cltd
mov
pop
sub
ret
out
inc
mov
jmp
dec
cld
push
xor
out
mov
mov
inc
cmp
test
mov
sbb
sub
or
pop
xchg
add
push
push
aaa
clc
sub
ja
inc
in
and
sub
jmp
and
cmpl
sbb
sub
out
or
outsb
mov
jo
mov
sub
inc
in
outsb
mov
cmp
jl
popf
inc
add
xor
icebp
sub
fs
in
negl
push
push
pop
je
cmp
sbb
pop
stos
cmp
or
push
sbb
and
popf
call
and
mov
test
jmp
pop
jb
jno
jae
cmp
pop
sub
pop
enter
jmp
mov
xor
push
mov
sti
pop
mov
movsl
shr
in
pop
int3
pop
pushl
dec
aad
fs
adc
or
fildl
or
lcall
mov
mov
mov
mulb
mov
pop
dec
cmp
mov
jmp
fsubp
push
xor
cmpps
subps
add
test
ret
mov
inc
nop
sbb
sub
pop
aaa
or
enter
inc
and
leave
jl
test
and
mov
jmp
mov
shr
adc
inc
xchg
inc
sbb
jecxz
add
icebp
mov
gs
mov
or
xor
ret
mov
push
sub
adc
outsl
mov
sub
sbb
pop
mov
cmp
and
cmp
je
cmp
mov
mov
xor
je
cmp
sub
cmp
pop
mov
mov
or
xor
inc
add
or
bnd
mov
or
int
popf
jno
xor
xor
adc
iret
xorl
in
divb
aad
or
dec
shlb
sbb
call
sbb
pop
xchg
scas
notb
add
mov
cmp
sbb
push
mov
std
mov
nop
inc
push
or
add
lock
xchg
add
sbb
fcoms
add
shll
jle
mov
mov
mov
rolb
jns
jns
or
je
or
jo
orb
mov
imulb
enter
cmpsb
fsubs
jmp
adc
cmpl
fsubrl
aam
adc
or
call
pop
call
and
or
pop
ss
arpl
pop
add
cmp
sbb
jns
and
xchg
adc
adc
add
jns
dec
mov
jne
dec
pop
pop
jmp
test
pop
jnp
jns
sti
add
mov
testb
nop
xchg
out
jge
pushf
xor
push
sub
cmc
mov
cwtl
add
jne
push
ss
xchg
sub
adc
adc
loop
cwtl
cmp
sbb
sub
stos
or
std
add
sbb
inc
lods
les
jmp
pop
out
les
jno
inc
add
add
add
mov
xchg
adc
lock
xor
fs
mov
mov
icebp
adc
add
mull
mov
mov
pop
cltd
push
pop
pop
push
mov
mov
xor
or
jne
xor
pop
loopne
sahf
jnp,pt
imul
jbe
sbb
pop
call
inc
mov
ret
sbb
pop
mov
fistpll
mov
sbb
push
dec
cmp
xor
cmpl
rorb
xor
lock
or
movzbl
add
xor
in
aas
push
push
iret
movsb
push
shll
add
mov
out
xchg
aam
lock
xorl
lea
or
dec
cmpl
cmp
pop
cld
out
sub
cmp
jle
out
pop
sarb
inc
push
scas
add
iret
sub
popl
push
or
mov
mov
dec
adc
and
mov
cmp
jge
add
iret
pop
sub
sub
inc
push
xor
mov
xor
add
fistl
in
mov
mov
adc
pop
cmp
push
or
mov
sub
sbb
mov
es
fistpll
add
xlat
pop
movb
imul
add
cmc
cmpsb
push
ficomps
or
imul
inc
xor
sbb
aaa
lea
pusha
hlt
lret
pop
inc
inc
mov
or
out
dec
insb
loope
fmuls
push
sub
and
addb
xor
shlb
mov
movsl
xchg
jp
xchg
mov
loopne
pop
popf
and
mov
or
lahf
sbb
sbb
mov
es
dec
pusha
xor
inc
mov
incl
pop
add
inc
mov
stos
insb
push
clc
fnstcw
mov
and
xchg
push
pop
and
les
int
or
inc
jne
inc
outsb
fucomi
sbb
cmp
jo,pn
inc
call
hlt
mov
icebp
mov
sub
lahf
push
or
jne
jle
mov
mov
insl
es
roll
sti
ret
pop
scas
test
hlt
jbe
dec
lea
fadds
xor
mov
sbb
stos
add
or
dec
insl
xchg
mov
ljmp
call
fdivrs
hlt
mov
ss
testl
xor
adc
movsl
cmp
mov
clc
push
adc
les
or
outsb
jmp
inc
pop
js
pop
mov
and
aas
or
adc
mov
push
pop
js
pop
mov
adc
xor
gs
fbld
inc
add
jo
mov
inc
jge
sub
mov
notl
ret
inc
cmp
ss
inc
push
enter
pop
dec
data16
inc
stos
decb
les
fcmovnu
insl
adcl
jnp
mov
aas
sub
push
mov
push
jg
movb
mov
push
push
dec
push
sub
jno
mov
pop
aas
inc
and
in
loopne
dec
filds
inc
orl
loope
sti
decl
outsb
gs
xor
cs
insb
add
gs
outsl
outsb
addr16
and
dec
popa
insl
gs
adc
fdivr
inc
mov
fbstp
stos
insl
xlat
ds
movb
addr16
dec
mov
xor
add
sbb
lods
or
insb
hlt
addr16
dec
jbe
adc
movsb
test
cwtl
xor
sub
fisttps
jbe
std
dec
pop
cmp
shrl
int
stos
fildl
repnz
inc
sub
std
pop
ret
punpckhdq
or
xchg
clc
outsb
xor
sbb
stc
dec
mov
jge
repz
or
js
lret
cmp
pop
push
mov
jb
add
je
and
cmp
aaa
push
jmp
dec
dec
in
jbe,pn
sub
and
fidivrl
xchg
dec
or
adc
jne
enter
xchg
cmp
ret
mov
decl
outsl
data16
popa
jle
or
jb
arpl
gs
add
into
sbb
sbb
mov
inc
scas
xor
cmc
cmp
lret
dec
xchg
test
add
or
sbb
jne
jnp
ja
push
mov
lahf
dec
bnd
mov
or
sarl
mov
idivl
dec
cmp
fsubs
inc
jmp
jns
and
sub
rcr
push
and
aaa
sbb
jbe
push
nop
fsubl
ja
inc
sbb
add
push
or
sbb
das
adc
call
fildl
je
push
add
inc
dec
mov
push
cmp
jge
pop
xchg
or
push
push
das
test
or
sbb
scas
inc
addb
mov
pop
add
dec
adc
pop
pop
jne
cld
sub
pop
adcb
lea
push
push
mov
push
lock
pop
xchg
cs
cld
lcall
popa
icebp
mov
outsb
adc
dec
xor
mov
inc
jae
icebp
and
ficoml
add
cli
pop
shll
cld
push
push
addr16
add
rcrb
shll
push
clc
scas
subl
add
add
movb
jnp
push
sbb
inc
add
add
xor
or
fs
push
je
sbb
sbb
aas
sti
loope
in
or
mov
mov
pusha
or
mul
sub
lods
push
call
mov
sbb
add
lret
jmp
add
enter
inc
mov
dec
mov
movsl
push
sbb
cmpl
jle
nop
loop
inc
aam
out
fstpt
call
jl
call
or
sti
mov
push
sub
cmpb
cs
sub
insb
mov
mov
pop
adc
ret
mov
test
pop
call
out
jge
pusha
inc
mov
pusha
pop
add
mov
sbb
push
test
inc
insb
mov
fsubrs
dec
xchg
aas
or
push
in
insl
rolb
push
cwtl
add
push
insb
or
insb
orl
iret
adc
enter
sbb
enter
adc
and
inc
push
cmp
cld
adc
hlt
push
sbb
in
call
inc
loopne
fmul
leave
inc
push
aam
adc
or
cmp
xor
pop
jb
pop
xor
mov
cmp
jo
lock
sbb
jae
pop
icebp
repnz
hlt
cmc
mulb
push
idiv
stc
nop
inc
push
sbb
sti
cld
inc
push
sbb
incl
sbb
loope
jecxz
fs
inc
in
out
nop
inc
push
out
jmp
ljmp
in
out
out
push
sbb
rcl
rcrl
fs
inc
aam
fs
inc
push
xlat
fcomp
nop
inc
push
sbb
fcmovnu
inc
push
sbb
filds
sbb
rol
sbb
nop
inc
push
enter
push
sbb
lret
int3
inc
push
sbb
iret
push
sbb
mov
mov
fs
inc
mov
mov
nop
inc
push
mov
mov
mov
sbb
mov
mov
fs
inc
movsb
movsl
cmpsb
xchg
andl
imull
in
xor
je
fdivs
aaa
mov
add
adc
push
or
inc
rcrl
dec
push
xor
add
ljmp
arpl
je
test
popa
sub
adc
and
inc
dec
gs
jo
pop
fsts
pop
push
pop
sar
add
jne
dec
dec
gs
das
xchg
xor
lods
pop
pop
or
outsb
pop
inc
and
mov
jb
pop
add
push
add
add
push
or
flds
test
pop
push
pop
xchg
stos
in
mov
pop
inc
imul
or
or
in
adc
push
adc
jo
sub
ljmp
jbe
jns
gs
nop
insb
cld
inc
and
push
popa
outsb
adc
xchg
les
pushl
jae
outsb
jbe
jb
insb
outsl
ja
pop
push
and
adc
pop
in
pop
or
or
mov
js
push
bnd
pop
mov
pop
sub
sbb
or
imul
inc
and
mov
enter
pop
sub
pop
xchg
pop
subl
xlat
push
pop
in
fsts
pop
push
outsb
fs
nop
fcoms
sarb
xchg
enter
pop
push
outsl
imul
add
mov
or
or
xchg
jae
outsl
nop
pop
nop
or
pop
inc
or
js
in
nop
xlat
in
pop
pop
cmc
pop
lret
adc
arpl
idivl
mov
inc
jp
sub
js
and
movsl
gs
movsb
push
movsb
ret
clc
or
popa
arpl
test
inc
add
pop
push
insb
inc
imul
das
xchg
push
pop
mov
pusha
loope
popa
or
lahf
mov
xor
xchg
les
roll
fs
adc
pop
adc
mov
jb
fdivs
mov
nop
jo
jo
cmpsl
push
stos
data16
xchg
or
hlt
mov
arpl
in
adc
cs
xor
add
dec
pop
or
jbe
mov
push
and
or
cmp
cmp
mov
push
ds
adc
add
repz
mov
add
cli
cld
into
adc
inc
xchg
lret
mov
mov
loop
mov
add
or
cli
sbb
sahf
gs
or
pop
out
icebp
inc
sub
add
push
cmp
ja
jb
dec
aad
and
lcall
test
fistps
dec
push
enter
pop
add
mov
in
or
mov
cmp
jbe
cmp
or
repz
je
movzbl
add
mov
jnp
pop
das
rolb
push
pop
ret
movnti
pusha
or
sub
xor
adc
outsb
rclb
add
rcl
ljmp
int
mov
incl
inc
cmp
jl
cmpb
jbe
or
mov
imulb
dec
adc
clc
xor
stc
pop
adc
mov
xor
dec
iret
xor
sbb
ret
push
push
in
inc
mov
aaa
rorl
cmc
stos
ss
cmp
pop
adc
cmp
cmova
jmp
jne
mov
loop
push
bound
push
ds
jge
inc
push
inc
daa
or
jne
decl
push
mull
inc
dec
mov
ret
mov
mov
xor
div
dec
mov
cmp
and
pop
mov
mov
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
loop
sti
out
xor
in
adc
leave
push
aaa
dec
je
repnz
sub
add
shrl
pop
pusha
or
ljmp
in
loopne
aas
push
xchg
inc
add
pop
sti
push
adc
sub
sub
push
clc
jg
fnstcw
fnstcw
orw
mov
fld1
inc
daa
andl
push
and
fildll
ret
subb
fildll
filds
rorl
fildll
stc
mov
mov
xlat
jg
push
push
fcom
fwait
call
mov
fnstsw
sahf
jae
fnstenv
ffree
ffree
frstor
in
rcrb
add
push
mov
mov
xchg
add
and
and
stos
imul
or
add
sub
stc
push
cmp
mov
sbb
test
adcb
pop
jbe
mov
sbb
push
ds
icebp
push
mov
sbb
sub
fstpt
setno
xlat
inc
scas
jae
add
daa
sbb
adc
test
test
xor
das
add
test
aam
mov
add
jb
pusha
mov
add
inc
stos
xlat
popf
adc
dec
repnz
jl
inc
mov
sub
js
sbb
loopne
mov
jecxz
or
pop
pusha
mov
and
fimull
std
pop
inc
and
gs
mov
test
sti
das
sti
adc
insl
lock
setne
jmp
packssdw
push
pushl
or
inc
mov
mov
xor
and
add
xor
add
or
sub
icebp
xor
imul
in
ret
sbb
and
test
xor
mov
adc
sub
inc
pop
ret
push
push
dec
mov
add
fwait
sbbb
mov
jae
inc
subl
mov
cmp
jne
dec
dec
sub
mov
daa
add
imul
pop
push
fldenv
push
xor
lea
bound
pusha
out
cmp
orl
int3
aaa
push
lds
stc
stos
sbb
pop
pop
repz
add
dec
sub
int3
add
or
imul
push
mov
nop
cld
inc
insb
es
imull
xor
rolb
aam
jns
mov
add
dec
inc
add
fs
ret
inc
flds
xor
sbb
sub
inc
inc
mov
xor
push
fiaddl
mov
xlat
push
lea
adc
xchg
xor
or
fmul
and
add
lret
mov
xchg
test
testl
jmp
pop
xchg
sub
lret
fbstp
xlat
mov
xor
or
xor
push
pop
lods
fsts
add
add
mov
mov
or
ja
and
imul
mov
shlb
mov
or
js
or
mov
cmp
jne
pop
xchg
mov
inc
adc
out
popf
enter
dec
je
mov
mov
xchg
xadd
push
lea
lods
mov
rcr
mov
lea
cmp
ja
in
hlt
adc
and
fadd
clc
jge
scas
fistps
jbe
mov
gs
add
dec
mov
push
pop
test
mov
in
movb
aam
movb
push
add
test
xor
icebp
xor
or
mov
push
push
cmp
or
sbb
rcrl
mov
inc
or
adc
dec
add
dec
mov
push
push
xor
cmp
movsb
iret
lock
mov
clc
or
adc
add
or
je
mov
sub
pop
outsl
push
repnz
fcomi
jmp
mov
cmp
jne
adc
pop
fsubs
ljmp
lret
lods
jmp
dec
xlat
fmull
loopne
das
cmp
adc
les
fadds
pop
xor
and
jae
fildl
push
ret
outsb
push
shll
pop
divb
sbb
push
jbe
cmc
sbb
cld
pop
jae
popf
pop
xor
cmp
std
cmp
jb
cmp
ja
imul
icebp
sub
leave
rolb
xchg
add
pop
daa
notb
inc
jg
incl
fimuls
xchg
mov
or
ret
and
je
inc
aas
out
leave
ret
and
mov
mov
pop
sub
jne
lea
sbb
push
adc
add
mov
or
push
iret
scas
shll
insb
pop
add
xchg
ljmp
pop
mov
add
leave
scas
insl
fsubrs
shll
std
roll
fsub
sub
icebp
sub
je
add
jmp
lret
gs
push
clc
imul
mov
cmpsl
cmp
data16
adc
enter
push
adc
cmp
stc
push
jne
int
ret
push
bound
jbe
jl
or
lock
mov
into
dec
lcall
mov
adc
jmp
mov
mov
cld
jbe
ja
pop
and
insb
aad
xor
mov
or
add
push
out
imul
ja
add
aad
sbb
jge
jecxz
dec
mov
in
xchg
dec
jo
cmpsl
push
leave
cmp
or
repz
insb
das
int3
add
inc
je
mov
out
repnz
outsl
push
inc
je
mov
inc
je
mov
dec
je
outsl
jo
mov
mov
sub
ret
sbb
jne
lret
jp
pop
orl
cmp
scas
mov
mov
call
iret
movsb
pop
shll
mov
sarl
loop
add
rcrb
iret
lahf
xor
inc
test
or
mov
call
mov
jmp
outsb
or
or
sub
lcall
sbb
adc
loop
jnp
idivb
mov
dec
mov
sub
add
clc
call
inc
mov
dec
aaa
insb
add
sub
ja
or
mov
clc
out
push
stos
or
inc
or
mov
sti
cwtl
dec
cmp
jl
jmp
add
mov
sbb
stos
push
jle
jmp
push
dec
cmp
das
xlat
inc
test
pop
jmp
lea
outsl
stos
xchg
jnp
imulb
adc
dec
fldl
fcmove
or
sbb
aam
mov
push
mov
aaa
mov
push
aaa
push
adc
xor
or
rcrl
decl
add
pop
pop
rcl
in
sub
mov
mov
fwait
jns
mov
jl
mov
cmp
mov
lret
add
xchg
testl
jecxz
add
sub
inc
mov
daa
push
adc
mov
test
pop
popa
cmpsl
jge
movzwl
lea
cmp
sbb
clc
hlt
ja
pop
jmp
mov
loopne
adc
mov
inc
xchg
adc
add
ja
movswl
cmp
add
insl
jl
mov
cs
dec
sbb
sbb
cld
inc
jmp
or
in
sbb
add
aam
dec
rorb
or
add
ret
cltd
mov
or
stos
ret
jle
das
adc
xor
or
sbb
loop
rcl
sub
inc
je
test
mov
stos
neg
or
jg
cmc
inc
inc
je
stos
loop
pop
adc
push
pop
outsl
sti
or
and
daa
push
add
dec
push
push
pop
add
mov
int
mov
dec
or
imul
leave
mov
mov
mov
test
push
mov
adc
mov
push
lahf
xchg
add
and
dec
dec
scas
mov
xor
div
mov
inc
push
js
dec
jne
cli
pop
xlat
fimull
jns
sbb
out
stos
jecxz
cmp
add
stc
adc
ret
dec
jns
jno
in
or
or
cmp
xchg
mov
fimuls
addr16
sbb
cmp
je
mov
pop
pop
inc
or
fiaddl
inc
loop
add
test
mov
sub
sub
popf
out
not
in
or
and
adc
inc
sub
jge
cltd
sub
or
adc
sub
mov
sub
sub
sub
into
cwtl
inc
shl
mov
mov
in
jmp
popf
arpl
jmp
or
movl
mov
cmp
push
jne
testw
fdivrl
add
adc
cmpl
inc
mov
xor
mov
dec
sbb
adc
add
hlt
mov
neg
loope
fstpl
pop
frndint
jmp
shrl
fstsw
fwait
pop
inc
testb
sub
mov
ljmp
fbstp
lea
mov
jecxz
inc
jecxz
sub
dec
loope
and
add
sub
fldt
stos
inc
clc
add
jns
cld
data16
xlat
dec
jge
cmp
dec
add
call
jae
jle
icebp
dec
lea
add
add
or
out
adc
in
jmp
data16
mov
divb
fdivr
jmp
mov
xor
jp
mov
shr
mov
add
xchg
ds
pop
pop
les
rcrl
sar
mov
rolb
addr16
sbb
test
or
jge
out
scas
mov
pop
mov
mov
fistpll
cmpsl
sbb
jae
dec
add
ficompl
loopne
in
insl
add
rcl
or
fidivl
push
lea
pop
ficoms
or
xchg
test
sub
into
and
jne
dec
mov
outsl
adc
cmp
adc
lods
int
and
and
add
mov
cs
movb
cmpb
idivl
push
fmuls
fisttpl
cmc
loope
sub
pop
hlt
pop
sbb
rorl
pop
insb
clc
or
fclex
fldcw
inc
lods
icebp
aaa
shll
ds
add
pop
rorb
fs
ss
pop
bound
jne
inc
push
push
cmp
je
adc
mov
inc
mov
pop
add
mov
dec
jne
mov
push
mov
fchs
sbb
fistpl
cmpb
test
mov
outsb
pop
xor
and
mov
jmp
ljmp
mov
faddp
fsubrs
not
shl
fimull
inc
jmp
sbb
into
xlat
js
push
sti
scas
stc
xchg
sub
inc
imul
popl
ljmp
mov
mull
mov
inc
pop
xor
pushf
pop
mov
rorb
mov
ret
push
shlb
inc
es
push
pop
outsl
das
add
push
enter
pop
mov
xor
ret
pop
pusha
xchg
arpl
fwait
mov
std
or
scas
fldt
fstpl
fwait
adc
mov
or
fxam
add
jae
add
loope,pt
mov
ret
sub
mov
jmp
push
mov
push
sbb
pusha
or
adc
xchg
or
sub
clc
repz
jnp
jo
lret
sbb
add
movsl
push
shlb
mov
hlt
shlb
out
add
shrb
pusha
jb
mov
ljmp
outsl
pop
or
add
xor
mov
or
sbb
sub
mov
movsb
dec
push
sbb
int
pop
ret
and
add
mov
dec
mov
xor
lret
jo
cmp
jb
and
adc
call
and
sub
sbb
xorl
xchg
and
fnstenv
mov
adc
dec
testb
nop
add
mov
ss
push
outsl
inc
call
dec
jg
add
add
aam
pop
bound
pop
pop
incb
jb
sub
xchg
outsb
jmp
ja
or
jno
aam
es
cmp
ja
or
decl
jg
add
inc
dec
fdivs
dec
mov
movsl
cltd
idiv
imul
sub
mov
lock
mov
stc
add
das
ret
add
test
loope
out
ret
cmp
sub
and
push
xchg
mov
pop
ljmp
popa
jg
out
xor
xchg
flds
hlt
ss
and
sub
cmp
mov
data16
mov
mov
xor
pop
or
mov
repnz
add
lahf
lods
mov
mov
lods
add
decw
sbbl
pop
insb
popa
fs
sub
pop
mov
sub
shl
sbb
sbb
and
fsubs
pop
jb
add
or
in
data16
enter
dec
mov
testl
or
das
inc
jmp
int
sbb
add
sbb
sub
lock
mov
es
push
push
movsl
fiaddl
push
clc
lret
aaa
mov
xchg
mov
dec
inc
add
push
movsb
daa
mov
adc
push
xchg
xor
fsubs
push
scas
and
in
xchg
adc
adc
lea
testl
sbb
and
sub
sub
sub
ss
pop
pop
dec
and
int
scas
ss
call
jo
mov
and
add
fcmovbe
push
inc
push
outsb
mov
or
subb
sub
mov
adc
pusha
dec
cld
inc
mov
mov
xchg
cmpb
sub
adc
lret
mov
add
jle
adc
rorb
add
cmp
movb
cmp
jecxz
mov
in
ds
mov
sbb
ljmp
pop
or
in
dec
aam
fistl
and
jl
lods
push
fiadds
inc
aaa
or
ljmp
fdivrl
push
ss
cld
mov
add
mov
cmpsl
das
ljmp
mull
xor
mov
mov
cmp
inc
je
add
jne
popf
inc
adc
xchg
imull
or
inc
sub
or
jle
push
loop
dec
mov
xorl
imul
scas
mov
xlat
je
mov
or
sbb
out
mov
sbb
nop
or
mul
in
dec
push
int3
or
addr16
adc
pop
jge
jb
adc
out
repnz
ret
or
jg
push
jge
or
jns
jge
in
push
repnz
je
jne
inc
clc
or
xor
push
inc
mov
dec
gs
dec
xchg
and
enter
jns
add
add
push
test
add
aam
push
mov
jne
mov
test
pop
roll
mov
jb
je
ud0
in
add
loope
je
les
addb
js
sub
bt
push
jbe
gs
xchg
or
jge
mov
dec
adc
and
sbb
or
add
dec
mov
loop
dec
arpl
pop
loop
push
sbb
ficomps
loop
rcr
aam
mov
outsl
jle
and
test
wbinvd
les
fisttpl
or
xor
or
or
add
add
pop
add
outsb
adc
in
test
insb
lcall
fs
mulb
mov
orb
pop
out
testl
mov
ret
push
pop
push
cwtl
pop
cs
loop
mov
and
and
inc
xor
pop
sti
or
shll
add
dec
in
dec
adc
and
adc
xchg
andl
or
and
insb
jl
hlt
dec
sub
mov
xor
mov
fnstcw
mov
dec
sbb
fs
std
dec
je
sub
xchg
mov
movsb
push
or
adc
dec
dec
jl
jns
sub
sbb
push
in
fldcw
mov
adc
adc
pop
xchg
loopne
fstl
mov
gs
fcmovnbe
adc
das
lret
scas
and
mov
dec
jg
fistpl
adc
and
add
je
sbb
bound
pop
je
push
enter
xor
add
dec
pop
enter
inc
and
pop
repnz
add
outsb
cmp
jl
pop
mov
pop
fildl
sbb
dec
add
jge
push
aas
mov
mov
or
add
adc
cs
or
jle
jo
or
cmp
mov
mov
cmp
pusha
sub
mov
orl
test
push
pushf
gs
add
add
shlb
add
dec
lods
je
sub
inc
fcmovnu
mov
adc
clc
imul
lods
addl
push
and
pop
xor
add
fdivs
adc
nop
in
dec
dec
jmp
adc
xchg
push
xor
jae
movsb
sbb
pop
pop
shlb
in
mov
lds
dec
andb
nop
jl
mov
and
call
or
jbe
les
out
dec
pop
cmpb
adc
sbb
mov
mov
gs
pop
push
loopne
push
xor
or
lea
stc
xchg
nop
shl
mov
sub
fimuls
popf
and
sub
adc
xchg
js
fwait
xchg
dec
mov
iret
dec
mov
adc
or
jmp
mov
mov
inc
dec
das
push
dec
add
add
cmpb
or
add
or
mov
ja
mov
test
adc
xchg
and
cmp
or
mov
mov
sub
mov
lea
push
push
or
pop
cmp
lock
mov
inc
or
adc
loope
inc
pop
and
cmp
jg
je
mov
xor
dec
fwait
hlt
or
mov
mull
dec
int3
jno
jge
cmpsb
mov
xor
ret
inc
add
aam
mov
pop
mov
inc
das
out
ljmp
lahf
loopne
pop
adc
sub
jae
cmc
jb
cli
imul
sub
jle
xlat
dec
adc
ret
push
fwait
rorl
dec
mov
outsb
mov
outsl
jbe
fildl
sub
or
and
in
add
push
dec
dec
mov
lret
push
shll
push
mov
pop
push
mov
add
and
sub
mov
push
mov
jae
outsb
fildl
and
pop
pop
repnz
inc
icebp
push
sar
cmp
incl
inc
xchg
and
pop
sti
xor
pusha
sub
ds
fildll
je
dec
je
sbb
sub
je
adc
add
sbb
push
sub
jo
faddl
outsb
xchg
and
mov
jns
cmp
add
mov
add
inc
and
add
mov
jge
cmp
repz
mov
xchg
push
mov
add
adc
lds
or
or
add
xor
or
add
fisubrs
dec
jne
xchg
push
int
roll
or
sti
arpl
dec
movsb
xor
push
cld
pop
jae
xor
sub
add
andl
shlb
js
sahf
push
or
push
cmp
hlt
pop
cld
jmp
jb
cld
xor
ret
outsl
sub
pusha
dec
fadds
fadds
fsub
in
shll
mov
fsubs
jb
push
ret
push
mov
xchg
js
iret
ja
js
and
adc
ds
sbb
jne
dec
ja
mov
rorl
pop
movb
adc
in
nop
and
mov
mov
and
inc
cwtl
or
add
hlt
push
jne
test
xor
adc
or
repz
sbb
ljmp
into
add
lock
mov
mov
sub
jb
and
pop
ja
cmp
push
push
lock
imul
data16
add
nop
or
xor
ss
hlt
out
xchg
data16
jmp
popf
mov
jg
js
pop
sub
xor
jo
xor
test
ret
out
dec
rcrb
or
popa
sub
push
in
inc
mov
and
jbe
in
fstpt
jle
adc
fs
cmp
ret
mov
inc
negb
test
popa
movsl
pop
mov
or
fs
pop
mov
sahf
pushf
jo
shlb
les
aam
push
movsl
fwait
mov
shlb
hlt
repz
cmp
sub
or
push
jne
mov
push
sbb
pop
xchg
bound
sub
scas
popa
pop
outsl
je
sub
xchg
lds
ss
test
push
out
pushf
or
mov
jl
mov
xchg
cld
fdivrs
xchg
add
add
add
inc
mov
pushl
or
ficoms
movsl
xchg
mov
and
je
dec
adc
and
xchg
les
scas
add
aam
mov
jmp
adc
daa
fistpl
push
push
or
gs
jle
jns
or
inc
jb
popf
nop
or
add
in
test
add
nop
inc
sbb
test
sbb
push
sbb
sahf
cmp
add
inc
pop
or
jne,pt
dec
subb
add
push
cmp
add
jp
test
adc
inc
test
shll
push
inc
mov
inc
pushf
inc
mov
mov
mov
movsl
leave
into
mov
jnp
xchg
or
leave
sbb
mov
jo
es
scas
push
call
out
cmp
sub
das
inc
adc
inc
outsb
xchg
fwait
dec
js
sbb
pop
mov
adc
or
and
sub
fucomp
xor
jb
push
fcoml
pop
fwait
jmp
or
push
mov
aam
or
and
cmpsl
loop
mov
push
push
xor
bound
fdivrs
push
xchg
ljmp
adc
mov
xchg
xchg
sbb
push
xorb
cmp
or
add
inc
test
push
inc
test
shll
adc
in
mov
inc
das
mov
and
das
or
imul
cmovo
addb
sbb
rorl
adc
ss
push
jle
lret
or
pop
mov
sbb
mov
es
jle
ficoms
inc
jecxz
nop
push
loope
adc
cs
push
pop
add
fwait
int
pop
adc
inc
ja
rcr
dec
sub
pop
pop
mov
xchg
inc
xchg
xor
lock
lahf
sub
lock
inc
xor
sti
or
jne
pusha
add
sbb
cs
addl
push
fwait
mov
lret
in
mov
cs
popa
jo
and
fsubs
cmp
jb
mov
daa
jmp
jne
jmp
nop
pop
test
or
and
push
divb
add
mov
dec
enter
popf
add
lahf
or
pop
loope
lods
mov
insl
cmp
push
cltd
mov
pop
pop
dec
xchg
dec
sub
xor
inc
insb
mov
push
mov
mov
ljmp
jne
shll
add
and
cmp
add
inc
or
push
push
call
insl
stos
adc
std
addl
add
js
sbb
or
mov
jns
add
jne
sbb
push
sub
test
inc
pop
in
push
lret
sub
inc
sbb
or
fs
push
jbe
clc
in
xchg
iret
xchg
pop
rorb
clc
ret
adc
rolb
or
repz
xor
xor
xor
stos
sub
lods
in
mov
adc
push
push
int
mov
add
pop
xorl
mov
shll
and
lock
push
fwait
and
lock
add
or
jne
aas
test
lock
lea
xor
subb
mov
inc
push
sti
jmp
mov
adc
push
sub
adc
fsubs
mov
dec
and
xor
loope
out
repnz
je
jne
sbb
jmp
jno
push
movsb
in
in
jle
and
fstl
and
push
xchg
jae
or
dec
push
int
add
mov
outsl
sbb
inc
push
xor
cmp
in
cmpsl
scas
imul
push
lea
mov
out
aam
mov
sbb
out
std
and
ljmp
xor
sbb
sbb
test
jecxz
push
out
add
es
pop
imul
xor
add
xor
xlat
adc
inc
sbb
mov
sub
out
mov
aam
scas
add
mov
je,pn
mov
push
icebp
jl
cld
cld
inc
inc
add
insb
sbb
rorl
xchg
sti
fiaddl
cmp
inc
and
mov
test
xchg
lods
sub
mov
hlt
leave
enter
add
lahf
cmp
pinsrw
subb
jecxz
dec
lea
push
out
sbb
mov
add
sub
or
shrb
rorb
cmp
xor
call
sbb
mov
dec
iret
mov
add
mov
bound
jnp
sbb
pop
cmp
cmpsb
mov
pushf
xchg
dec
sbb
je
dec
imul
or
enter
mov
and
sub
pop
inc
add
add
cmova
stos
out
or
or
and
xchg
push
fimull
call
bndldx
and
add
adc
adc
inc
xchg
ret
enter
ss
push
and
sbb
int3
pop
bound
pop
leave
dec
inc
cmp
in
fdivrs
pop
gs
mov
jb
cwtl
repz
dec
popa
xor
cmp
enter
movsl
movsb
and
clc
int
mov
and
incb
and
ret
cmp
push
or
arpl
inc
mov
add
mov
jno
call
lea
mov
jg
cmp
add
mov
dec
and
jmp
mov
fsubs
cld
outsl
repz
sbb
or
lret
jo
pop
pop
pop
mov
cmc
or
push
sub
dec
outsb
add
dec
pop
xchg
sub
sub
jb
dec
adc
sahf
insl
jmp
pop
nop
and
jae
mov
adc
test
xchg
imul
jmp
or
repz
fwait
loopne
int
adcb
jbe
enter
rcrl
andb
and
xchg
insl
imul
in
push
lock
clc
daa
jns
xor
loopne
les
and
xchg
or
popa
add
sarb
pop
js
call
out
data16
lds
mov
call
roll
aam
sahf
sub
pop
addr16
pop
pop
call
xor
mov
push
cmp
je
jmp
addr16
aas
xor
inc
xor
in
jmp
and
add
mov
add
push
pop
or
or
sub
or
push
push
scas
or
test
mov
inc
out
push
mov
loop
mov
test
cmp
enter
pushf
gs
in
sub
setae
mov
mov
repnz
in
aad
les
jo
mov
add
test
jmp
sbb
les
decb
sbb
sub
mov
push
dec
mov
mov
cmp
or
les
es
leave
enter
sarb
add
data16
mov
leave
rorl
into
fcomp
jmp
cwtl
nop
ds
pop
cwtl
xchg
xchg
dec
inc
pushf
mov
xchg
nop
add
dec
add
mov
xor
xchg
sub
scas
aad
orb
imul
and
push
rolb
ret
or
sbb
std
outsb
add
xor
rorl
xor
frstor
xchg
hlt
add
mov
adc
stc
inc
xchg
pop
xor
sub
inc
enter
enter
ljmp
mov
int3
add
mov
mov
pop
nop
mov
in
fcomp
loopne
clc
fldt
jae
popf
rol
mov
lock
call
cltd
js
add
repz
mov
mov
inc
add
push
push
and
nop
or
xor
mov
push
cmp
shl
xchg
dec
xchg
js
adc
aam
gs
les
lahf
sub
inc
mov
stc
in
and
add
rorb
les
pop
add
pop
stc
jmp
enter
or
push
xchg
cmp
fdivl
sarb
cmpb
add
pusha
addr16
insl
lock
dec
jp
dec
mov
dec
pushf
dec
lahf
mov
push
xor
mov
and
mov
adc
into
adc
loop
movsb
jns
dec
or
inc
addl
jmp
mov
mov
dec
add
mov
pushf
add
adc
dec
int3
popf
dec
xorb
aam
xor
sbb
pop
adc
and
lods
lock
or
or
add
in
mov
inc
ds
mov
pop
xor
pop
nop
and
sbb
pop
adc
fs
stos
das
sbb
dec
adc
inc
cmp
dec
mov
shll
push
pop
lret
in
cmp
jge
cmp
jl
add
dec
fsts
push
push
xor
push
loopne
testl
inc
cwtl
mov
adc
aad
add
jbe
xor
repnz
stos
cli
pop
and
and
inc
xor
jno
or
jg
add
add
sub
dec
arpl
and
leave
insb
or
roll
and
in
jge
or
sti
jecxz
push
cli
in
ret
adc
addb
bound
and
and
loop
adc
pop
add
dec
xor
int3
loope
nop
sub
cmp
adc
jb
pop
das
sbb
rcr
negb
arpl
ljmp
or
stos
sub
rclb
dec
je
pop
mov
dec
in
test
sbbl
pop
cmp
andb
pop
cmp
adc
ret
mov
adc
or
cmp
add
mov
add
cmp
in
mov
clc
sbb
arpl
pushf
xor
add
lods
aas
adc
sbb
adc
lds
cmp
xor
fdivs
mov
mov
push
add
push
sahf
sbb
pop
sbb
mov
push
pop
rorb
xchg
inc
enter
lock
xor
push
jg
daa
mov
sub
aam
shlb
add
pop
rcrl
sahf
jg
hlt
add
mov
adc
hlt
sbb
sbb
cmp
pop
push
fdivrs
movsb
hlt
or
mov
in
push
mov
xor
xchg
cwtl
dec
pop
adc
aaa
push
enter
mov
sub
jb
inc
mov
mov
stos
lret
out
push
dec
jne
add
cmp
jge
sub
inc
or
enter
adc
ja
add
mov
xchg
mov
inc
fs
add
mov
fimull
cmp
inc
scas
or
jno
jbe
mov
mov
data16
arpl
pop
xorb
xor
call
sbb
jle
loopne
pop
mov
js
rcrb
push
add
lods
dec
xchg
insb
jo
rcrl
inc
sub
inc
out
fucomi
fstl
mov
out
outsl
mov
setne
mov
cmp
mov
sbb
add
add
cmp
push
scas
add
sbb
rclb
js
imul
add
add
lods
cmp
cmpw
adc
mov
or
sarl
jmp
imul
xchg
shlb
pop
fsts
sub
and
push
ja
insb
mov
jne
push
jge
test
test
sbb
ret
incb
push
inc
mov
and
mov
test
pop
cwtl
test
push
mov
sti
mov
sbb
dec
aam
aam
push
mov
fldenv
call
mov
mov
mov
push
in
mov
decb
cmp
das
mov
inc
sbb
loopne
fmull
jns,pn
mov
and
fcomp
mov
std
mov
mov
aas
adc
adc
mov
mov
and
sub
mov
mov
ret
or
test
mov
test
cmp
les
enter
popa
rorb
nop
addl
in
mov
outsb
out
or
push
mov
xchg
stos
das
inc
sbb
nop
inc
push
jo
or
sar
or
add
shrb
lret
nop
adc
dec
push
insl
ja
mov
das
fs
xlat
push
insl
add
fs
gs
mov
insl
or
in
or
dec
push
xor
andl
and
push
and
cmp
or
jae
mov
mov
mov
incb
sub
add
or
cmp
in
push
pop
mov
in
rdtsc
imul
popf
cli
pushf
mov
or
add
mov
pop
repz
scas
incl
imul
gs
jo
arpl
js
add
ret
mov
fcoms
sub
xor
rclb
pop
shll
test
and
insb
cwtl
xor
shll
add
or
shll
or
lcall
pop
pop
push
shll
inc
pop
sbb
xor
ja
sub
imul
sbb
pop
adc
cmpsb
cwtl
or
je
daa
aaa
clc
xor
ja
icebp
adc
lock
add
xchg
repz
mov
loopne
faddl
imul
aam
fstps
hlt
int3
sbb
les
sbb
xor
dec
je
add
repz
rep
mov
test
hlt
movsb
in
inc
lcall
daa
fwait
inc
cwtl
cmp
xchg
hlt
repz
mov
ja
addb
fnsave
mov
test
adcb
xchg
int
shl
js
repz
insb
dec
ss
adc
insb
out
jae
repz
push
and
pusha
cmpsl
pusha
dec
pop
hlt
imul
hlt
xor
xchg
daa
push
add
push
scas
push
xor
bound
push
pop
pop
fistpll
cld
add
in
sub
sub
or
add
icebp
adc
cltd
movsb
pop
cmp
sbb
sbb
add
and
xchg
dec
and
adc
aad
in
mov
loop
loopne
dec
add
push
ds
nop
xor
nop
add
push
or
xor
enter
cwtl
or
es
nop
mov
es
test
std
in
insb
or
adc
repnz
sub
pop
scas
lcall
sub
adc
divb
mov
pop
loopne
jo
push
xor
cmp
cltd
pusha
test
mov
jb
cld
iret
push
adc
andb
mov
adc
pusha
pop
inc
scas
jle
ja
adc
out
push
mov
mov
js
push
add
aaa
test
hlt
pop
ret
dec
adc
das
adc
lds
ja
mov
stc
imulb
pop
sbb
cs
add
jmp
sbb
in
lods
mov
cld
mov
out
dec
pop
push
adc
mov
test
xor
and
jb
lea
in
fdiv
xlat
jge
inc
enter
pop
mov
xchg
add
aam
gs
mov
jno
pop
mov
and
fsubp
and
cmpb
sbb
xchg
xchg
leave
out
mov
add
clc
adc
push
xchg
jmp
dec
jle
xor
pushf
test
push
mov
nop
adc
cwtl
cld
test
dec
cmp
xor
imul
or
rolb
pop
enter
adc
inc
js
xor
fs
adc
inc
inc
lea
dec
mov
push
pushf
jae
cmp
aad
arpl
push
and
add
mov
stc
jns
pop
mov
cmc
push
repnz
mov
arpl
sbb
arpl
push
push
jo
inc
or
add
mov
adc
aas
adc
xchg
dec
pushf
mov
cs
movsb
les
int3
lods
in
dec
cs
fcoml
in
dec
cs
sbb
les
mov
mov
push
or
repnz
sbb
inc
imul
jns
fadds
dec
xchg
cmp
xchg
fdivl
loopne
xchg
cmp
lock
in
sahf
xchg
dec
lcall
inc
cwtl
dec
in
pop
outsl
insb
gs
jne
sahf
inc
mov
stos
cmp
fwait
sub
push
jns
lods
adc
cmp
in
add
outsl
je
fs
jne
cmp
enter
insb
inc
imul
mov
pop
outsl
fs
outsb
dec
jb
lods
dec
push
jns
outsl
jb
insl
jo
sbb
outsl
insl
push
je
rsqrtps
mov
fldcw
inc
popa
je
adc
pop
lahf
mov
outsl
insb
je
inc
jns
mov
nop
add
aaa
shlb
lock
cmp
enter
cmp
add
addl
sub
mov
sub
fldl
in
adc
adc
dec
testl
mov
or
or
add
jmp
fildl
call
xor
test
les
fidivrl
scas
cmp
jne
test
cld
sub
adc
adc
push
inc
jne
and
xlat
push
shll
jmp
pop
sbb
idiv
add
jae
inc
adc
sysret
inc
mov
in
mov
pop
sub
xchg
test
and
adc
enter
or
arpl
shrl
leave
pusha
arpl
arpl
or
pop
sub
addr16
nop
or
arpl
inc
popa
fs
clc
lds
cmp
fwait
or
lret
insb
adc
sub
nop
adcl
popa
jns
imul
mov
add
addr16
xchg
sbb
cli
inc
jb
mov
sbb
adc
insb
adc
mov
sbb
rolb
xchg
mov
dec
xchg
mov
pop
cmp
or
pop
arpl
arpl
push
popa
mov
xorb
xchg
arpl
jecxz
or
inc
sbb
mov
ret
cld
mov
pop
mov
and
sub
shll
test
add
in
gs
mov
in
mov
mov
pop
push
jns
movb
adc
mov
call
push
xchg
in
jo
mov
fcomps
push
lret
in
add
in
dec
push
out
out
mov
das
clc
mov
and
xor
in
xor
mov
fidivrs
adc
in
and
fld
out
sub
clc
daa
cmp
jg
xor
add
mov
outsb
mov
clc
sub
add
sti
out
pxor
je
dec
je
push
or
add
lahf
mov
lods
mov
dec
adc
dec
cmp
add
jbe
and
add
loopne
sbb
or
or
lods
mov
gs
xchg
cld
sub
mov
xchg
xor
add
cmc
pop
nop
int
dec
lock
mov
out
xchg
pusha
in
and
movsb
cltd
in
int3
repz
cmp
loopne
xchg
jmp
imulb
imul
movsb
and
mov
adc
push
adc
enter
mov
push
aam
pop
ss
mov
fcom
sahf
mov
enter
popf
inc
ss
cwtl
rorb
rcr
xor
push
add
movsb
pusha
dec
fsubp
or
in
pop
test
scas
in
push
shl
sub
sub
inc
mov
je
fld
mov
mov
shr
popa
or
jmp
xlat
inc
push
enter
shrl
add
push
mov
pop
add
add
fbstp
adc
lea
xchg
cmpl
lahf
ret
add
jge
ja
xor
xor
test
and
mov
out
testb
pushf
dec
jne
pushf
xchg
das
andb
push
mov
outsl
add
push
dec
sub
inc
mov
push
jl
sub
call
rcll
jge
mov
testb
stos
push
add
mov
xorb
adc
adcb
cmova
aam
dec
and
xchg
das
push
in
inc
je
and
add
pop
mov
clc
jmp
adc
push
clc
push
out
pop
outsb
movzwl
lock
add
or
xor
lea
add
push
lea
idivb
jbe
mov
mov
hlt
adc
dec
inc
push
lods
inc
xchg
and
push
add
and
nop
inc
test
mov
sahf
jne
inc
inc
inc
add
movsb
or
or
push
and
fnstenv
sbbb
jae
test
jbe
push
or
popa
jae
mov
push
ss
jne
add
mov
inc
in
in
sub
push
rclb
das
sti
adc
or
mov
add
test
inc
or
and
adc
push
jl
or
idiv
and
or
push
mov
je
int
cmovne
outsb
mov
and
or
mov
fwait
cmp
insl
cld
pop
push
cmp
mov
gs
mov
fsub
mov
inc
clc
fimull
insb
sub
add
xchg
or
or
sub
pop
mov
sbb
fs
call
sub
std
jl
or
jle
idivb
inc
je
outsb
mov
xchg
nop
lea
test
neg
or
or
mov
xlat
es
mov
push
in
dec
enter
loopne
sbb
mov
call
movsb
pushl
add
out
inc
push
in
nop
or
mov
pop
adc
xchg
add
shl
push
mov
xchg
xchg
xchg
cs
push
sbb
sub
imul
test
popa
and
xchg
pop
ds
add
mov
inc
aaa
lret
shl
sbb
adc
adc
add
mov
pop
xor
movups
rcll
sbb
or
mov
adc
je
lods
add
and
jne
mov
cmp
add
cmp
or
add
mov
loopne
addb
cmp
sbbl
fiaddl
mov
sbb
inc
mov
inc
hlt
sbbl
addl
push
mov
or
dec
push
mov
add
mov
je
xor
inc
std
adc
add
push
rol
sahf
gs
in
jmp
and
lock
jo
test
pop
hlt
add
or
add
lock
psubsb
or
leave
cmp
sbb
push
movsl
push
fsts
imul
and
inc
adc
cmc
jbe
xor
push
mov
push
adc
xor
inc
mov
int3
lret
scas
lods
xchg
mov
sbb
inc
mov
jle
xor
mov
sub
xchg
sbb
hlt
rcrl
ret
mov
xor
mov
leave
xor
das
aas
jb
cmp
adc
sub
xchg
pop
mov
fistl
in
and
adc
aam
nopl
adc
ss
lods
mov
in
xchg
xor
imul
push
loopne
sbb
jle
iret
lea
sub
shlb
lcall
dec
lret
add
insb
lcall
adc
jmp
or
cld
cmpsb
pop
jle
add
mov
rcr
mov
mov
iret
sti
or
sbb
dec
add
lds
lock
loope
ss
dec
in
fmuls
mov
sbb
xchg
xchg
push
add
clc
sub
push
fldt
adc
sti
add
hlt
orl
lock
mov
and
jae
add
xchg
jge
or
mov
sbb
mov
sub
lret
xchg
fadds
in
pop
int
dec
shll
cltd
in
or
sbb
fmull
mov
dec
or
sbb
inc
sub
sbb
mov
sbb
xchg
jmp
gs
lods
ror
sbb
jo
mov
cmp
nop
in
pop
andl
mov
das
xor
cld
ljmp
je
jmp
xchg
shll
adc
fadd
inc
xchg
rol
and
test
lcall
mov
cmp
dec
pop
iret
add
dec
mov
xchg
int
or
das
push
jno
mov
and
xor
add
adc
cltd
xor
fsts
mov
and
sbb
loope
psubusw
cmp
mov
sub
mov
push
xor
pop
mov
or
mov
push
lods
pusha
lods
push
cltd
sarl
adc
pop
sbb
test
out
inc
push
stc
ljmp
in
mov
pushf
mov
cmp
push
pushf
sbb
push
cwtl
xchg
sbb
jmp
rclb
dec
push
push
fwait
fs
ds
nop
nop
and
pop
cmp
mov
daa
ret
xor
adc
and
xor
int
xchg
lock
mov
orl
pusha
fldenv
scas
add
dec
push
icebp
lret
pop
out
push
inc
ss
in
in
mov
inc
test
or
jmp
or
in
sub
push
and
mov
push
mov
sbb
enter
fildl
rcll
fmuls
js
push
sbb
loopne
sbb
and
int3
out
xor
or
fs
cmp
loopne
loopne
enter
shl
rorl
dec
sahf
shl
push
nop
repnz
or
push
and
mov
adc
insb
lcall
adc
imul
aam
bt
mov
aam
sbbl
push
xor
test
add
daa
push
sbb
les
sbb
adc
and
pop
dec
add
and
xor
push
adc
les
mov
lods
in
sbb
adcb
xor
loopne
cs
inc
loopne
fcoml
inc
loop
push
fcompl
fcoms
xor
insb
fcomps
adc
and
cs
lods
cmp
sbb
hlt
mov
fsubs
adc
nop
in
lods
enter
pop
dec
xchg
aam
add
aam
aad
xor
mov
inc
andl
cs
pusha
adc
adc
or
daa
inc
adc
dec
enter
shlb
and
rcrb
sbb
and
or
lea
test
sbb
dec
dec
xor
push
bound
mov
mov
arpl
lods
dec
test
nop
mov
movsb
adc
adc
fwait
movsb
sbb
mov
adc
push
ret
dec
and
pusha
cmp
sub
jecxz
rcr
dec
xchg
leave
inc
push
adc
xor
xor
nop
sub
iret
sub
nop
mov
add
push
lods
mov
mov
enter
pop
and
nop
sbb
or
push
aas
bound
hlt
in
loop
push
xor
sub
cmovne
je
pop
dec
jne
repz
or
invd
push
insl
popa
adc
popa
lea
sbb
push
jb,pt
push
stc
fs
fistpl
insb
push
cmove
bound
decl
jb
outsb
arpl
push
je
push
dec
mull
mov
xor
push
inc
stos
dec
inc
and
or
dec
xchg
in
xchg
mov
and
outsb
imul
inc
arpl
xchg
jge
nop
repz
inc
out
and
je
mov
xacquire
push
outsl
jb
jbe
pusha
scas
pushf
adc
rcll
mov
or
insb
dec
push
pminub
push
sti
mov
push
mov
adc
push
inc
fcom
jnp
mov
paddb
xchg
and
jmp
mov
lret
nop
pop
add
add
clc
adc
jl
cmp
push
push
jl
push
subb
jb
add
sbb
and
mov
xchg
pop
out
cs
lea
add
adc
xlat
adc
shl
and
or
fs
outsl
adc
call
loope
inc
movsb
sbb
add
punpcklbw
xchg
fwait
inc
outsb
jns
xchg
jnp
test
mov
ud1
bound
xchg
sub
or
xor
mov
mov
dec
fiaddl
xor
orb
mov
mov
jbe
sahf
inc
inc
pop
mov
and
push
xlat
testb
mov
aaa
sub
push
dec
sbbl
cmp
add
add
leave
fsubl
aam
dec
add
push
fsubr
test
xchg
push
test
cmc
push
ret
sub
push
xchg
cmp
xlat
sbb
sbb
mov
clc
cltd
pop
mov
jne
jnp
je
jl
bound
xor
pop
into
xor
clc
inc
cmp
add
pop
clc
mov
jnp
xor
lcall
add
mov
inc
xor
mov
int3
pop
mov
call
adc
mov
test
movl
push
sti
push
jle
pop
xchg
pop
inc
fcompl
dec
inc
add
inc
roll
push
adc
stos
mov
inc
dec
inc
jns
fmull
jo
loop
and
cmovne
or
int3
lds
mov
pop
mov
add
sub
add
or
sbb
mov
pop
mov
xor
sbb
pushf
xchg
mov
add
or
sub
pusha
clc
sbb
push
and
cmp
test
dec
dec
push
or
pop
mov
jae
loopne
jns
es
rcll
jbe
sub
sbb
jle
popa
jle
jle
fstl
cmp
dec
sti
pushf
fsubs
push
sub
cmp
setg
and
loopne
mov
gs
in
jne
jo
sub
dec
sahf
inc
add
aaa
fsubrp
fs
mov
lahf
push
add
inc
test
adc
adc
dec
les
mov
jne
inc
add
loope
pop
jae
ficoms
jns
lret
jl
ja
stos
stos
mov
mov
data16
mov
push
pushf
sbb
push
les
mov
nop
sbb
cmp
dec
hlt
loop
push
xchg
nop
leave
test
into
dec
jo
xor
filds
aas
sub
pop
add
fidivl
xchg
cmp
and
pusha
into
call
cld
mov
sub
or
das
or
adc
jmp
gs
popa
add
push
add
and
jno
sub
jb
sub
or
dec
dec
jge
jle
pop
add
pop
pop
bound
outsl
jle
push
pop
push
sbb
inc
cs
dec
jnp
jne
cs
jecxz
jmp
jb
and
pop
pop
je
cmp
inc
jbe
cmp
push
push
push
pop
or
addr16
outsl
arpl
imul
bound
push
pop
cmp
es
decl
adc
adc
je
je
dec
push
add
dec
subps
pop
or
jbe
push
pop
adc
jge
call
add
jbe
jl
and
xor
push
and
js
cmp
jg
cmp
xor
outsb
push
xor
xor
and
push
push
insb
or
add
pop
clc
fildll
insb
pusha
jns
cmp
jge
cmp
sub
ljmp
call
jle
push
dec
jo
dec
inc
or
push
incl
jae
sbb
push
push
jnp
push
jle
fs
imul
jbe
incl
jg
push
dec
dec
cmp
cmp
pop
inc
insb
or
ja
pop
push
or
or
sub
das
outsl
ljmp
add
cmp
sbb
sbb
add
or
sbb
or
push
fstp
xchg
add
jno
or
dec
push
push
addr16
bound
pop
sbb
fs
fstpt
jp
inc
inc
inc
scas
arpl
adc
sub
sub
inc
jbe
pop
jbe
jp
mov
jl
cmp
cmp
and
inc
xor
sbb
and
sub
call
insb
imul
pushw
xor
or
jns
add
fcomip
jg
jno
push
jnp
jbe
push
or
jle
js
sbb
sti
data16
jae
adc
loop,pn
pusha
sub
jnp
js
push
js
jge
dec
cltd
call
jle
cmp
pop
xor
bound
js
push
or
and
sub
xor
cmp
decl
std
or
pusha
cmp
rcrb
sbb
cmp
sub
sbb
jo
invd
ja
mov
pop
push
pop
je
imul
add
sbb
dec
fs
js
mov
adc
adc
push
jp
push
jle
movsl
pop
pop
pop
jl
mov
inc
jge
push
xor
sub
or
sub
jg
outsb
xor
dec
push
pop
cmp
cmp
sbb
jle
sub
jno
pop
and
push
push
pcmpeqb
push
je
add
or
sbb
jl
inc
pop
outsb
adc
jbe
push
dec
dec
sub
and
sub
inc
dec
push
cmp
call
dec
dec
inc
pop
dec
inc
pop
je
jbe
inc
sbb
adc
push
adc
decl
add
bound
push
cmp
add
sbb
cs
incb
or
adc
or
add
pop
lods
icebp
bound
dec
sbb
jne
adc
pop
xor
ja
pop
rcrl
pushl
gs
pop
pop
popa
fs
dec
and
pop
popa
idivl
iret
jmp
xor
sub
sub
or
push
adc
cmp
sbb
decl
sbb
add
or
jb
ja
ja
ljmp
fildll
ret
dec
add
add
dec
push
in
sbb
outsl
mov
inc
jb
inc
push
push
dec
push
daa
xor
clc
test
jmp
and
cmp
xor
pop
dec
enter
xor
mov
sub
push
adc
add
xor
xor
pusha
add
std
pop
clc
pushl
xor
or
adc
cmp
cmp
push
push
dec
pop
inc
arpl
fs
jg
mov
push
pop
pop
push
bound
and
dec
jo
inc
ja
icebp
sar
sub
push
inc
and
inc
dec
int
insl
jnp
insl
outsl
cld
pushl
adc
cmp
xor
or
and
cmp
push
cmp
sub
cmp
aaa
adc
sbb
imul
pop
pop
outsb
push
jl
mov
outsb
addr16
inc
inc
dec
inc
jo
add
jle
adc
mov
inc
jle
bound
and
inc
inc
lcall
fdivp
ljmp
insl
pop
imul
pop
cld
dec
add
sub
lcall
lcall
or
xor
cmp
sub
and
sub
and
jns
std
pushl
jb
or
push
jge
data16
jge
jno
push
push
jp
insl
sbb
movsl
movsl
ljmp
jns
jno
push
push
pop
sub
inc
jns
das
sub
ljmp
bound
outsb
inc
aas
push
jb
cmp
xchg
dec
push
sub
movsl
and
xor
push
pop
cmp
add
ss
sub
cmp
add
mov
push
aas
xor
sub
add
dec
dec
jg
fistps
push
jnp
bound
pop
cmp
pop
data16
push
jne
inc
jo
pop
cli
adc
jl
xor
and
cmp
pop
or
xor
dec
dec
xor
inc
outsl
push
pop
lcall
push
xor
cmp
sub
push
sbb
xor
and
adc
xor
daa
adc
sbb
das
mov
add
js
jnp
pop
fs
dec
repnz
inc
add
call
sbb
gs
das
inc
jg
jno
dec
push
jl
push
sub
xor
pop
pop
idiv
outsl
cld
pop
pop
arpl
pop
test
fs
pop
gs
push
sub
push
adc
jg
movsl
xor
add
adc
popa
and
sbb
clc
decl
and
jae
sub
jo
push
inc
pop
push
pop
vmwrite
jbe
nop
jp
inc
push
data16
dec
dec
pusha
dec
inc
sbb
das
icebp
mov
push
sub
and
push
and
jge
dec
std
ffreep
jmp
dec
cmp
jbe
xor
and
push
adc
and
xor
insb
adc
inc
sbb
push
insl
and
pusha
addr16
xor
sbb
cmp
incl
or
sub
dec
push
pop
je
inc
add
jb
push
dec
push
fstpt
adc
pop
jle
jl
js
ret
and
dec
das
pop
and
inc
sub
sti
incl
inc
xor
dec
adc
and
jb
movhps
cld
jg
add
pop
cmp
arpl
or
daa
idivb
ss
push
jo
pop
outsb
push
insl
push
enter
incl
imul
sbb
outsb
adc
sbb
push
add
shlb
je
push
das
and
mov
and
outsb
and
aaa
jge
jp
jae
or
incl
outsb
sub
or
add
cmp
add
cmp
aas
sbb
in
imul
outsl
jae
dec
jne
push
das
cmc
inc
push
dec
or
add
add
outsb
jl
popa
in
aaa
jle
pop
imul
dec
adc
addr16
js
imul
lock
and
inc
insb
popa
outsl
cwtl
arpl
ja
mov
mov
pop
cmp
and
or
adc
cmp
sbb
popa
or
fs
add
xor
dec
mov
adc
push
push
bound
popa
jae
sbb
das
call
sub
dec
jl
inc
jns
insb
imul
pop
inc
daa
inc
push
pop
pop
addr16
arpl
rcl
lcall
ds
cmp
xor
mov
dec
add
mov
pop
cltd
insl
xor
adc
pop
and
and
cmp
jmp
xor
jno
push
or
pop
or
push
push
dec
inc
jle
push
or
jl
bound
sbb
cld
xchg
pop
jl
jne
pop
bound
sbb
and
mov
idivb
pop
push
insb
pop
imul
faddl
and
sub
pop
push
or
and
or
sub
mov
int
shll
adc
jp
pop
cltd
clc
xchg
jg
insb
adc
jo
pop
dec
push
dec
lea
push
je
dec
inc
mov
add
sbb
shrb
jo
imul
jle
outsb
daa
data16
jg
and
aaa
dec
pop
dec
push
arpl
inc
push
push
daa
or
dec
adc
das
mov
or
arpl
xor
add
jp
jg
mov
and
jl
sub
jge
dec
add
jge
pop
addr16
jnp
or
bound
add
sbb
inc
inc
imul
cmc
dec
dec
push
imul
pop
lret
dec
inc
lods
ljmp
cmp
jge
cmp
dec
jae
je
push
add
xor
sub
adc
sub
mov
and
ds
sbb
mov
or
cmp
pop
jmp
sub
or
loope
or
ja
jae
les
push
or
sbb
xor
xor
fsubrp
dec
fs
jl
dec
xchg
cld
jg
outsl
jmp
data16
js
cmp
pop
ds
arpl
push
incl
sbb
ss
and
fldt
je
adc
cmp
sub
add
pop
jns
adc
cmp
adc
outsb
cmovne
dec
push
dec
mov
dec
cld
mov
or
pop
dec
jae
popa
dec
jno
adc
jo
mov
push
bound
pusha
pop
push
inc
addr16
mov
rcr
fildl
cmp
add
xor
sub
jge
daa
test
cmp
and
push
decl
jle
jo
sub
xor
push
jno
cmpsb
or
jg
pop
add
dec
or
jl
pop
js
jo
insl
adc
outsl
jg
push
decl
dec
jnp
push
arpl
bound
js
ds
push
inc
incl
sub
push
xor
push
xor
inc
sub
push
sbb
sbb
push
mov
or
fs
xor
ja
or
pushl
adc
add
sub
jnp
pop
inc
punpcklbw
jp
pop
jne
bound
xchg
push
mov
jge
popa
insb
push
bound
dec
push
jl
outsl
das
lock
dec
and
jmp
jnp
push
jo
dec
inc
sti
das
cmc
adc
and
pusha
xor
sub
aas
sbb
cmp
sub
popa
add
add
add
xor
jl
sub
jbe
push
push
inc
dec
sbb
pop
xchg
push
sub
inc
jo
or
ljmp
jle
inc
inc
pop
push
or
sbb
outsl
inc
es
push
and
incl
push
popa
push
dec
insb
xor
bound
pop
dec
or
add
jle
inc
das
ss
sub
das
adc
or
sbb
xor
dec
outsl
push
sbb
xchg
daa
and
add
cmp
aas
sub
push
comiss
and
rcrb
js
dec
dec
add
hlt
pop
daa
push
pop
pop
jge
mov
dec
mov
pop
dec
dec
pop
out
pop
jo
and
jg
and
inc
outsl
sub
push
sub
ss
ud2
jge
rolb
xor
add
push
pop
mov
sub
jmp
push
bound
jp,pt
sub
add
add
xor
jg
jbe
shl
aaa
sbb
pop
jg
or
push
add
sbb
lds
inc
inc
or
or
jo
inc
and
jle
dec
ja
pop
inc
aam
call
jae
imul
pop
or
cmp
push
ss
or
mov
xor
add
sbb
ss
add
mov
sbb
sub
cmp
push
push
xor
in
pushl
pop
push
pop
sbb
std
sbb
sbbl
jg
xchg
loope
jnp
inc
push
sub
jno
sub
das
fnstsw
mov
and
inc
dec
xor
gs
pop
je
mov
sub
add
jg
outsl
sub
aaa
sbb
pop
and
js
cmp
daa
add
jg
stos
je
sub
jb
dec
pop
pop
jb
jno
and
sbb
jge
push
loopne
lock
popa
pop
adc
loope
push
pop
inc
daa
inc
inc
mov
push
push
pop
jle
pusha
xor
test
arpl
imul
call
or
cs
cmp
pop
adc
sub
add
cmp
sbb
sbb
pushl
push
jnp
push
or
jle
es
xchg
decb
test
rcr
jmp
jmp
jae
or
mov
or
inc
jmp
push
adc
inc
mov
addps
dec
dec
jmp
jne
jmp
xchg
jmp
aad
inc
insb
push
jmp
jmp
cmp
frstor
jmp
xor
sbb
ret
cmp
mov
jmp
inc
jmp
cli
in
es
jmp
loop
jmp
push
jmp
push
hlt
btr
jmp
push
insl
mov
test
add
inc
call
rorb
movb
inc
mov
jl
push
add
lock
xchg
sub
cld
mov
add
and
out
mov
add
mov
jle
mov
mov
cli
das
mov
cld
jno
jne
mov
dec
jmp
stos
add
jne
fcomps
sub
pop
andl
add
subl
push
scas
add
push
fwait
jnp
or
loopne
das
xor
mov
hlt
and
or
fiadds
sub
mov
loop
and
jne
mov
nop
add
or
call
sbb
xor
xor
push
cmp
inc
inc
mov
inc
inc
dec
dec
dec
or
dec
push
mov
jns
jg
add
data16
insb
insl
outsb
outsl
xor
jno
je
jbe
xor
cmpsl
sub
and
addb
mov
xchg
add
or
insb
cmp
adc
push
add
in
fnstenv
sub
clc
inc
push
add
cs
int
cmp
pusha
scas
loopne
int3
mov
in
pop
pushf
inc
fimuls
enter
cld
stos
fsubl
xor
sahf
movsb
add
inc
js
jns
scas
sti
enter
pop
jo
xchg
or
add
cmp
shr
push
je
mov
cmp
dec
pop
mov
jecxz
loopne
and
fnstenv
sbb
shrb
ficomps
push
mov
inc
loopne
int3
mov
test
mov
sub
xchg
fsubl
lea
jbe
call
push
rolb
add
mov
les
out
push
push
adc
mov
dec
popa
rolb
lahf
sub
mov
mov
jne
xchg
pop
adc
inc
pop
jns
je
sub
xchg
cmp
or
add
and
xchg
add
jbe
xor
mov
add
pop
pop
and
jg
mov
daa
lret
int3
enter
enter
fcomp
fxch
fdivl
loopne
jecxz
in
push
out
jnp
outsl
inc
push
jne
je
and
and
inc
xchg
or
popa
je
xor
or
mov
inc
add
dec
pop
add
add
adc
test
sbb
lret
popa
notl
data16
adc
add
dec
inc
aas
sub
std
ja
add
and
and
add
lock
divb
push
add
adc
shll
cmp
shll
push
xor
orb
shll
dec
shll
call
xor
add
enter
add
fs
gs
nop
inc
mov
pop
inc
dec
push
jb
sub
cmp
leave
xor
in
dec
pop
add
and
movsb
pop
pop
pop
mov
repnz
pop
pop
jo
int3
iret
add
and
ja
xchg
and
add
cmpsb
add
mov
imul
shll
pop
xor
xor
mov
pop
add
add
adc
jmp
add
out
adc
jecxz
or
loopne
fdivs
mov
or
add
cwtl
add
test
jbe
adcb
jmp
adc
pop
dec
push
push
mov
outsl
enter
xlat
je
enter
das
dec
pop
add
add
subl
add
push
cmp
jmp
xlat
pop
mov
pusha
pop
arpl
popf
icebp
mov
jo
xchg
push
arpl
mov
and
jmp
mov
enter
mov
and
fwait
jo
scas
jmp
into
aas
xor
sbb
lock
loope
jecxz
or
xlat
je
mul
inc
adc
jae
pop
cwtl
or
outsl
xor
mov
int
orl
and
push
gs
push
aas
mov
pusha
inc
push
dec
mov
lahf
add
nop
push
adc
popa
test
pop
add
inc
add
adc
rorb
fldenv
test
xor
or
aas
adc
add
push
add
add
dec
add
aaa
fwait
jnp
add
or
add
dec
add
dec
mov
jge
adc
popl
push
or
add
rorb
incl
xchg
add
add
add
add
std
jg
mov
inc
pop
cmp
scas
add
add
and
arpl
add
add
mov
jg
jno
add
jg
fbstp
mov
testb
pop
call
in
add
add
aad
add
cmp
mov
test
add
sarl
leave
cmp
fcomi
in
xchg
iret
dec
cmp
add
shrl
movsl
and
mov
add
ljmp
data16
int3
movsb
mov
jecxz
add
fildl
jns
call
pop
add
push
lcall
add
add
cmp
jbe
lods
or
das
gs
mov
xchg
add
mov
in
mov
cmpsl
jp
or
pop
ret
jmp
mov
add
movsl
es
sbb
jge
std
add
add
leave
add
jecxz
idiv
or
sub
adc
mov
fstpt
push
inc
or
mov
rolb
mov
mov
xchg
push
add
mov
je
mov
xchg
lea
test
xchg
mov
xor
sti
fildll
sub
xor
jl
add
dec
cmpb
faddp
mov
cs
inc
add
add
xchg
pop
fsubs
ret
jg
fcompl
and
add
repz
mov
bound
outsl
das
insb
mov
xchg
lcall
decl
fildl
mov
push
stc
add
jle
std
jnp
push
mov
fcomi
add
dec
jo
mov
sbb
sub
fnstsw
pop
fidivl
in
jg
inc
ss
xor
mov
mov
lahf
sub
pop
and
enter
sti
inc
jo
rorb
lret
and
enter
pop
add
mov
out
mov
and
fidivl
filds
mov
dec
inc
add
dec
mov
mov
sub
add
add
data16
arpl
jo
mov
adc
imul
mov
insl
jnp
mov
mov
lods
mov
sbb
pop
inc
fldl
pop
outsb
imul
mov
adc
xchg
mov
popa
add
push
sbb
sahf
dec
out
jbe
sahf
xchg
data16
lea
stos
pop
push
imul
scas
mov
in
jae
add
rol
push
jae
fcmovnu
mov
mov
imul
jae
hlt
aas
addr16
dec
int3
movl
add
test
daa
add
fldt
gs
push
lods
imul
jp
ds
mov
pop
fdivs
mov
inc
jno
xchg
jle
loope
lods
imul
lcall
sbb
cld
leave
test
mov
or
mov
ja
mov
fstpt
aad
cmp
in
rcr
rcrb
cmp
add
lods
sub
jg
add
lods
je
stc
rclb
jb
mov
jbe
in
divb
les
pop
adc
ror
xchg
clc
and
mov
mov
mov
and
lods
mov
push
gs
or
mov
adc
clc
insl
pop
fidivrl
je
jno
add
fcompl
fists
inc
add
ds
fisubrl
lods
pop
push
mov
mov
cmp
add
inc
or
sbb
ljmp
pop
test
and
mov
mov
fstl
sarb
jmp
mov
rolb
les
mov
pop
dec
pop
lods
xchg
sbb
jg
fcomp
movsl
repnz
xor
pop
add
push
add
add
pop
push
xlat
and
pop
ror
mov
imul
insl
mov
add
sti
mov
jno
xchg
pop
jno
push
jg
aam
insl
sti
inc
sarl
add
dec
pop
ja
jg
mov
shl
mov
pop
jg
mov
test
adc
aas
adcl
mov
out
pusha
mov
mov
and
add
add
jge
mov
mov
xchg
jno
add
add
mov
in
imul
mov
sahf
xchg
fs
sub
xchg
data16
mov
sub
sbb
sahf
mov
movsb
arpl
inc
repz
inc
jns
lcall
xchg
movsb
sbb
jns
lcall
xchg
movsb
cmp
scas
push
push
movsb
sbb
lds
xchg
addr16
pop
test
mov
jns
sbb
inc
adc
push
mov
inc
lea
jno
icebp
lods
adc
mov
aas
popa
gs
roll
notb
add
push
outsb
mov
imul
enter
outsb
xchg
inc
sub
sub
add
add
call
stos
fcoms
lret
xor
mov
sbb
lcall
mov
fistpl
adc
mov
lret
jg
jno
or
aad
add
xor
fistps
push
mov
mov
add
cs
cmp
add
insb
add
test
xchg
xor
lea
orl
push
mov
lods
pop
dec
push
pop
movsl
add
fimull
fidivs
rorl
fsubrs
decl
add
sub
add
jl
xor
inc
mov
sbb
insl
xchg
lcall
push
xchg
ja
cmc
incl
enter
sbb
jmp
ds
pop
fistps
pop
mov
shlb
jle
mov
sbb
sarb
xorb
int
insb
imul
jp
movsb
xchg
add
sub
push
aas
pop
pop
ss
push
push
jg
popf
aas
test
add
testl
or
insb
jmp
jge
pop
sbb
jecxz
push
das
test
iret
jmp
jo
insl
xchg
xchg
mov
xorb
imul
rcrl
and
xor
add
jp
cmc
cld
aaa
push
sbb
or
sahf
mov
cld
jnp
push
fisubrl
pop
in
jns
lods
ret
add
jno
sub
rorb
ss
aaa
mov
lods
jo
inc
mov
mov
lods
xlat
mov
test
movsl
test
cwtl
gs
sbb
decl
fisubl
mov
paddd
jecxz
paddd
sbb
fwait
cmpsl
push
popf
and
push
stc
outsl
mov
add
push
pop
add
ret
movb
incl
int3
xchg
inc
xor
cmp
lcall
xchg
movsb
sbb
jns
lcall
xchg
movsb
lret
ds
movsb
sbb
fdivrs
xchg
addr16
pop
icebp
outsb
movsb
sbb
repz
dec
jns
lcall
xchg
movsb
sbb
inc
lcall
fcomp
insl
push
sarl
das
subb
xor
inc
ja
cmp
jle
xchg
cmpsb
lods
jmp
ds
sbb
sub
lea
sahf
xchg
popw
shll
data16
imul
inc
sahf
xchg
jne
subb
cmp
imul
nop
sahf
xchg
data16
dec
mov
and
sbb
jge
lods
pop
inc
sahf
xchg
data16
mov
sbb
insb
xchg
ljmp
mov
in
push
imul
xor
std
add
fildll
out
fdivrl
fildl
fucomp
push
dec
repz
fwait
pop
roll
test
xor
insl
sbb
cmpsl
add
aaa
iret
ucomiss
out
lock
add
out
xor
jecxz
ljmp
lahf
push
lock
add
jl
fwait
out
mov
add
dec
jae
scas
or
or
dec
int
imul
pop
dec
jno
jp
int
rol
in
adc
pop
add
xchg
mov
jae
jl
mov
jecxz
jg
outsb
sahf
dec
jnp
in
in
add
ds
repz
rcr
pop
add
scas
mov
cmpsl
mov
sub
mov
aaa
sbb
or
fdivrl
out
add
aad
arpl
hlt
add
out
out
fsubrl
dec
lcall
and
popf
mov
mov
bndstx
out
stc
jmp
gs
ret
xlat
out
fdivrl
in
dec
jg
mov
mov
adc
jae
add
push
sub
push
pop
add
int
repz
add
leave
cmpsl
mov
dec
adc
mov
iret
popf
sub
in
adc
out
push
lods
add
fwait
out
faddl
imul
insb
shl
dec
out
test
push
mov
dec
repz
sub
push
in
mov
stos
dec
xchg
jg
cld
cmp
jae
jae
add
add
add
add
mov
pushl
mov
mov
cmp
iret
movsb
sbb
mov
sub
xorb
bound
shrl
movsb
xchg
movsb
sbb
aaa
add
cmp
inc
lcall
out
int
rcr
xchg
or
icebp
outsl
rorb
pop
and
enter
xor
scas
aas
push
cmpb
enter
insl
jae
xor
mov
loop
mov
movsb
jns
cmp
and
pushf
mov
sub
or
mov
adc
push
add
out
stc
xor
mulb
inc
add
rcr
cmp
aad
inc
jne
add
out
sub
adc
lahf
call
push
mov
aas
push
incl
loope
mov
mov
les
loope
sbb
out
fdivrl
add
xchg
loopne
imul
ret
mov
mov
insb
pop
mov
pop
push
adc
clc
lahf
call
outsb
insb
fcom
stc
aad
jg
adc
lea
movsb
aas
adc
xchg
xchg
mov
out
sub
dec
inc
jg
loopne
mov
sub
pop
popf
mov
scas
dec
aas
push
addb
lret
add
mov
jmp
or
inc
jg
cvtpi2ps
rcl
sub
fistps
mov
mov
fs
adc
mov
in
stos
sub
jg
and
in
mov
add
stc
insl
addl
roll
pop
ret
add
push
test
or
fdivr
cwtl
sbb
or
loop
test
les
cwtl
xchg
cs
clc
xchg
out
cmpsb
sub
sbb
addr16
lret
xor
pop
lods
jns
add
xchg
into
or
sti
outsb
dec
mov
and
aaa
outsl
jno
popa
call
mov
fcmovne
bnd
mov
mov
add
cmpsb
mov
xlat
adc
cmpl
ret
mov
ds
cmp
add
add
xchg
dec
jbe
and
lods
jg
mov
loope
sbb
pop
jbe
add
mov
mov
add
sub
jg
ret
xchg
mov
xor
push
add
setb
pop
add
pusha
fldt
fs
push
xchg
jp
arpl
jp
into
outsb
mov
pushl
mov
mov
push
and
les
sbb
add
or
js
insl
insl
or
jecxz
mov
fcompl
scas
repz
testb
xchg
outsb
or
xabort
pop
mov
and
mov
nop
ret
adc
xchg
adc
xchg
aas
lret
pushl
fcmovb
lods
rcrl
sbb
lds
push
sbb
aas
jge
cmp
stc
aaa
setp
out
stc
jb
or
popa
jp
shrl
and
out
iret
les
mov
insl
cmc
sub
dec
or
movsb
popa
bound
dec
mov
jno
lret
lcall
cmpsl
lods
jl
sahf
push
xor
inc
mov
mov
out
add
push
adc
sti
add
push
cwtl
std
outsb
xor
pop
stc
cmpsl
sub
outsl
push
mov
mov
fadd
fsubs
aas
fisttpll
push
rorb
adc
pop
fdivs
sbb
pop
and
add
insl
mov
fs
lods
push
insl
sub
insb
jecxz
cltd
cmp
outsl
add
cmp
or
mov
inc
mov
pop
fildll
loopne
mov
cmc
jno
sub
lea
mov
mov
sub
mov
push
mov
xor
push
inc
std
push
xor
add
mov
sbb
xchg
jmp
sub
mov
sbb
add
ret
inc
jnp
push
and
sub
mov
inc
cmp
nop
add
add
in
add
fdivrl
or
jne
add
imul
sbb
push
and
mov
in
push
pop
mov
mov
rclb
mov
mov
in
test
xor
jge
fimull
insl
imul
dec
mov
clc
test
popa
fistpl
sbbl
fcmovbe
lea
ljmp
xchg
dec
fdivl
aaa
test
fidivl
pop
fdivrl
jnp
ds
mov
loope
sbb
insl
pop
mov
js
add
fists
aas
insl
ret
fistps
sahf
and
and
jg
xor
out
add
stc
cmp
pushl
ficoms
sbbl
jmp
xchg
lods
mov
out
pop
sbb
stos
mov
xorb
fidivl
mov
xchg
insl
fcmovne
filds
jg
adc
jecxz
dec
xlat
fcomp
mov
inc
popl
add
lea
fmuls
lcall
cmpsb
mov
fs
adc
xor
fistpl
mov
and
adc
and
mov
ret
add
lods
enter
cwtl
sbb
or
scas
sbb
mov
push
push
ljmp
or
test
imul
sbb
inc
sbb
adc
or
decl
and
adc
push
push
fdivs
xchg
fidivrs
sub
mov
mov
add
rorl
leave
aas
lds
pop
mov
imul
into
sub
mov
jbe
movb
lea
iret
data16
out
xor
jg
lods
mov
dec
xchg
push
stos
outsb
jg
ret
fidivl
inc
rorl
bound
jbe
aas
mov
repz
push
int
imul
popa
jg
insl
and
rolb
xchg
shrb
testb
xchg
push
jmp
sub
sub
rorb
test
sahf
or
ljmp
fstpt
adc
divb
and
sti
jge
fdivrl
call
enter
add
mov
cmp
pop
and
pop
mov
mov
ret
and
out
xor
push
cmc
bound
cmc
aaa
push
outsb
pop
ds
mov
aas
mov
shl
insl
ds
mov
jg
add
aad
mov
and
jge
xor
push
jb
mov
test
popf
cmp
stc
xchg
in
mov
xchg
inc
adc
add
sub
lcall
stc
arpl
lods
add
dec
in
sub
cmp
jecxz
cmp
inc
sub
lret
dec
subb
jo
subb
or
mov
out
jmp
jge
dec
mov
insl
inc
xchg
sahf
test
paddusb
loopne
aas
fbstp
fildl
notb
adc
arpl
push
nop
rolb
mov
jg
aas
aas
movsb
xchg
arpl
ljmp
cs
call
fisubl
rorb
hlt
je
add
jg
fdivrs
pop
mov
sti
jnp
negb
jbe
cld
addb
mov
sub
or
xchg
mov
and
sub
add
push
aas
ret
leave
ja
ss
mov
fiadds
cmp
adc
cltd
mov
in
and
dec
pushf
add
insl
aaa
xchg
ss
in
out
sbb
lea
xchg
xlat
outsl
mov
xchg
sub
xor
testl
cmp
rorb
movsl
insl
mov
out
outsb
sub
insb
mov
lods
jmp
fcomps
sbb
fnstsw
add
mov
jae
add
shlb
ret
cs
mov
sub
mov
cmc
pop
adc
mov
push
jno
dec
cmp
sub
ficompl
xor
sub
ss
push
sub
jp
or
imul
and
insl
popa
stc
ret
sbb
insl
xor
andl
jne
sub
add
insb
and
insl
arpl
fwait
loope
inc
outsb
scas
sbb
push
xchg
mov
bound
mov
inc
mov
sub
mov
enter
aaa
cs
lds
mov
mov
mov
mov
or
out
push
in
fnsave
mov
xchg
pop
inc
adc
stos
lret
test
sbb
lcall
pop
xchg
xchg
mov
jp
or
pop
cmpsb
fldt
sub
push
adcb
es
rcrb
push
in
out
fimull
sub
cmc
xchg
xchg
mov
add
rol
cld
nop
push
mov
in
push
sbbb
jmp
jae
in
ret
loop
sub
mov
insl
popa
pop
adc
sub
mov
pop
fsubrs
and
addr16
mov
adc
lahf
push
push
subl
andb
pop
sub
outsb
mov
vmread
mov
insb
push
push
mov
mov
mov
or
jecxz
cmp
add
mov
fstpl
mov
jae
lret
lea
dec
add
cltd
add
add
push
fcmovnu
push
push
push
jl
and
mov
arpl
je
lea
adc
adc
push
add
sub
insl
dec
xor
xchg
sub
mov
add
or
and
xor
cmp
pop
push
outsb
push
mov
cmp
inc
mov
cld
add
in
add
bound
mov
ss
sub
or
insl
shrl
ret
pop
pop
push
lret
insl
in
ret
jl
cwtl
mov
dec
push
push
mov
inc
arpl
lret
adc
mov
jge
push
sbb
push
lods
and
sbb
fsubl
pop
lds
adc
popa
add
lock
add
mov
popa
les
in
std
xchg
pop
push
lods
ds
xor
ds
rcl
test
stos
push
and
ret
pop
fisubrl
jl
fbstp
movsb
xor
fcmovnbe
cs
push
mov
mov
mov
cmpsl
imul
mov
sub
adc
jb
and
add
insl
mov
jle
mov
sbb
and
xor
mov
pop
icebp
add
jp
mov
or
out
xor
mov
sub
mov
mov
cmp
fnstsw
xor
jbe
sub
into
mov
push
popa
fcmovnu
or
pop
or
insl
mov
in
mov
movsl
ret
les
jecxz
and
fisubl
jmp
mov
or
stos
xchg
add
mov
mov
inc
xorl
sbb
mov
mov
rol
ret
push
aas
cmpsb
cwtl
outsl
mov
sbb
sti
orb
clc
and
sbb
xor
orl
gs
cmp
pop
in
jmp
jge
jne
cmpsl
and
xchg
mov
jb
push
mov
add
pop
fsubs
sub
scas
xchg
loope
inc
insl
lret
jbe
cmp
outsb
cmp
loope
mov
fcomp
test
scas
ljmp
pop
mov
into
add
lds
cmp
inc
jo
sbb
fldt
sbb
add
and
mov
sub
dec
jmp
aad
sar
push
xchg
mov
fstpl
sub
pop
push
cltd
pop
ss
mov
xchg
xor
ljmp
ss
mov
das
repnz
pop
mov
cli
lret
lods
movsb
popf
and
rorb
int3
and
mov
ds
mov
rolb
rcl
sub
mov
rcrb
in
mov
xor
cld
pop
ja
and
fwait
movsl
das
cs
dec
and
aas
add
sbb
lret
nop
cmp
pop
fcomps
mov
adc
sbb
cwtl
insl
imul
jno
popa
cmp
icebp
and
outsb
lea
push
cli
mov
sbb
xor
xlat
jno
push
jmp
xor
mov
jmp
in
push
aaa
stos
fdivs
loope
mov
cs
pop
stos
aaa
enter
insb
in
inc
pop
scas
or
retw
xchg
add
mov
sub
or
in
mov
pop
push
adc
mul
cmc
jecxz
or
fsubrs
adc
mov
add
mov
cmp
or
imul
pop
insl
sbb
adc
mov
cmpsl
adc
cmp
pop
shl
insl
insl
sub
xor
xor
pop
mov
les
cmc
movsb
sub
loope
inc
mov
lods
movsl
in
in
and
lds
lods
add
pop
sbb
lea
xchg
insb
sbb
adc
add
lea
sub
dec
mov
mov
pop
inc
movsb
stos
outsb
scas
inc
dec
cmpsl
sbb
std
call
arpl
mov
mov
cld
clc
iret
cmp
or
aad
inc
push
jmp
dec
mov
jo
pop
idivb
inc
popa
pop
add
mov
mov
fldt
or
popa
loope
imul
mov
or
or
flds
insb
sbb
repz
inc
add
ret
add
imul
jbe
lret
imul
nop
or
add
dec
sarl
mov
insl
jmp
into
push
mov
ret
aaa
sub
aad
jg
push
sub
in
mov
jmp
in
jmp
sub
pop
inc
mov
push
lcall
in
inc
outsl
push
lods
cmc
mov
and
icebp
mov
cmp
fdivs
fstpl
imul
push
lcall
outsl
dec
sbb
sbbl
add
aas
push
mov
mov
call
insl
jns
add
gs
rcrl
movsl
add
add
push
shl
jbe
pop
fidivl
push
mov
insl
fisttpl
pop
arpl
jecxz
mov
mov
cmp
and
add
add
add
xor
je
std
in
push
mov
popf
adc
jmp
mov
insl
or
es
sub
fistpl
jb
inc
mov
or
fisttpl
mov
pop
repnz
or
movsl
lea
jb
lcall
jbe
add
leave
adc
mov
push
shl
sub
imul
dec
pop
mov
fucomp
sub
outsb
add
ret
aam
daa
ret
dec
or
jmp
ret
xchg
lds
sub
insb
pop
add
mov
cmpsl
and
subl
jg
fwait
pop
mov
mov
incb
aas
mov
jne
jo
mov
stos
fnsave
pop
pop
mov
insl
mov
xor
fnstenv
pop
sbb
and
adc
cmp
xchg
ficoml
mov
and
push
mov
mov
sarb
and
insl
ret
push
in
loop
add
test
pop
sbb
jns
or
sub
shrb
and
cmp
mov
jae
in
cmpsb
aaa
or
mov
pop
stos
into
pushf
push
dec
je
mov
outsb
or
fsubr
add
scas
jle
stos
mov
fdivs
or
into
imul
mov
hlt
aam
stos
pop
add
fnsave
pop
inc
cmpsl
cmc
inc
and
fcmovnu
lods
sub
mov
gs
cmp
push
fisubl
iret
xchg
lcall
outsl
inc
sub
inc
add
out
jbe
add
mov
loopne
or
fisttpl
rolb
add
ss
lods
cmpb
push
push
scas
mov
sub
adc
out
add
arpl
fisttpll
and
xchg
adc
ret
mov
jbe
imul
imulb
hlt
or
arpl
jg
sahf
sub
in
mov
rcll
fistpll
pop
push
pop
or
test
loop
xchg
cmpsb
add
adc
mov
addr16
lea
xchg
subb
fcoms
pop
push
test
pop
fisubrl
jp
adc
jne
aaa
aad
sbb
insl
mov
jle
mov
stc
jnp
inc
fistl
or
xchg
outsb
dec
sbb
xchg
dec
aas
std
cmp
pusha
mov
mov
insl
or
outsb
ss
mov
xchg
jl
mov
pop
mov
add
push
call
inc
lahf
xchg
fdivl
cli
add
add
xchg
sub
roll
sbb
mov
lea
cmp
lds
mov
out
bound
xchg
or
push
pushf
jg
popf
mov
frstor
dec
fsubs
insl
jmp
mov
popa
xor
ss
es
pop
mov
mov
dec
adc
pop
fdivrl
lret
outsb
inc
in
jo
je
and
and
mov
insl
stos
cmp
or
andb
cld
add
testb
mov
add
fnsave
push
or
push
or
ret
sbb
cmp
add
aaa
mov
mov
inc
adc
orl
frstor
jmp
inc
fisubrl
cmp
lds
das
push
or
pop
pop
fisttps
xor
push
hlt
adc
xchg
pop
inc
insl
popf
dec
fistpll
fldt
cmp
fcmovnb
mov
mov
lods
loop
lods
fnsave
dec
push
mov
mov
mov
sbb
push
ds
mov
mov
jecxz
push
mov
aam
popa
push
ret
inc
scas
div
cld
lahf
cmpsb
push
push
mov
loope
sbb
repnz
jg
xor
fistl
dec
mov
lods
xchg
pop
mov
xor
mov
jb
pop
push
repz
mov
icebp
mov
frstor
test
mov
push
movsb
test
adc
dec
movsb
lock
sahf
xor
dec
mov
xchg
or
and
shll
idivl
mov
inc
fcoml
lock
and
xor
or
dec
add
pusha
popa
add
xchg
sbb
mov
mov
push
sub
outsb
sbb
test
sysexit
jge
inc
sub
mov
add
inc
mov
arpl
and
dec
and
sbb
push
test
add
in
xchg
dec
jmp
loope
pop
pop
mov
outsb
sbb
andb
and
mov
imul
mov
pop
fcoms
lcall
arpl
add
mull
or
pop
mov
loopne
aaa
push
xchg
xchg
insl
repnz
sub
lock
mov
mov
test
cmc
pop
mov
mov
mov
or
test
mov
xorb
add
les
insl
in
ret
pop
jbe
sbb
mov
cs
aad
stos
xchg
inc
dec
iret
inc
mov
pop
dec
sub
in
movb
repnz
xchg
mov
mov
and
sub
xor
movsl
in
mov
sub
add
outsb
in
ret
sub
or
jg
push
mov
fisubl
xor
dec
outsb
jns
mov
icebp
pop
mov
dec
cmp
mov
xor
fildl
add
mov
jp
js
dec
scas
xchg
cmc
pusha
imul
lret
ret
insb
in
xor
cmpsl
jo,pt
insb
fidivl
fsubl
es
arpl
je
mov
mov
in
push
mov
cmpsb
mov
and
or
cld
cltd
jmp
mov
sbb
loopne
sub
insl
sub
adc
mov
sbb
lret
pop
jg
add
add
repz
in
lock
outsb
mov
inc
cs
pop
xchg
repnz
into
xchg
gs
daa
pop
jbe
mov
vdivpd
sarl
ret
mov
fistps
cmpb
dec
lret
ret
mov
inc
and
adc
cmp
cmp
or
mov
daa
cmpsl
pop
ror
push
mov
push
xorb
pushf
inc
stos
imul
outsb
sti
pop
into
push
xor
insl
arpl
add
hlt
add
add
insl
fistpl
movsl
sub
dec
pop
sbb
imul
mov
dec
nop
aam
cmp
jecxz
mov
mov
push
mov
cs
and
mov
insl
insb
adc
pop
sub
adc
mov
mov
fchs
cs
dec
jge
nop
js
dec
mov
cld
sbb
pop
xor
dec
das
test
pop
into
lcall
fiaddl
and
out
das
test
or
test
xchg
rorb
imul
push
dec
and
insl
pop
fdivs
jg
push
push
addl
popa
mov
sbb
fcmovnu
push
icebp
xchg
aam
dec
stc
pop
into
insl
inc
fcmovnb
test
dec
addr16
enter
dec
or
adc
aas
mov
fcmovnbe
xchg
push
test
test
repnz
pop
mov
cwtl
jecxz
jmp
pop
pop
inc
fistl
into
jb
xchg
dec
mov
outsb
into
popa
scas
lret
ret
mov
jno
mov
pop
jmp
inc
mov
test
mov
cld
outsb
stos
sbb
aaa
mov
sbbl
fdivrs
mov
xor
push
jbe
jo
imul
lret
cmp
push
call
outsb
insb
insl
sub
loop
testb
pop
subb
mov
mov
fcmovu
fimull
xor
arpl
pop
lds
xor
leave
aaa
fidivl
mov
daa
movsb
cmp
test
push
push
or
add
jge
sbb
mov
sahf
repnz
int
aaa
pop
fldt
ret
sub
pop
and
inc
fildl
push
in
add
pop
mov
outsb
ficoml
push
pop
test
loopne
or
fadds
or
in
add
mov
dec
in
pop
inc
xlat
adc
pushf
scas
sbb
dec
jno
dec
jbe
das
ret
mov
pop
sub
dec
out
and
subl
cltd
xor
sub
test
or
pop
inc
lret
movsl
jb
fildl
aam
sub
sbb
imul
adc
xor
fs
adcl
adc
fdivl
xor
mov
pop
mov
sarb
mov
jnp
ret
test
mov
pop
ret
inc
aad
sub
add
call
scas
repnz
sti
lahf
jg
inc
arpl
mov
add
fs
sbb
sub
cmp
out
and
sbb
pop
loope
xchg
fdivl
stos
mov
sbb
out
scas
jmp
pop
dec
shrb
push
neg
movb
stc
ret
push
aaa
into
lcall
enter
cmc
jbe
imul
push
data16
div
movb
fdivs
sub
pop
pop
pop
fsubs
jl
sbb
add
rclb
and
xor
sub
mov
in
inc
jmp
stos
cmc
cld
icebp
xchg
push
or
or
mov
push
pop
outsl
xor
fstl
jbe
test
or
lea
push
fwait
or
pop
pushf
push
lcall
loop
sbb
mov
sub
shll
mov
pushf
fiaddl
xor
mov
sarb
push
sbb
mov
pop
push
cmp
insl
loope
test
dec
adc
mov
cli
mov
adc
pushf
insl
mov
out
push
inc
shll
in
jl
fmuls
jge
ficompl
sbb
dec
sahf
stc
les
dec
insl
fcmovnu
mov
dec
sub
add
test
push
arpl
mov
pop
ss
fisubrl
inc
jns,pn
movsl
mov
pop
push
mov
push
pop
mov
dec
clc
cmc
mov
inc
shrl
call
sti
push
sub
sub
push
push
sbb
or
imul
jo
fnsave
rcrb
mov
inc
imul
sbb
lods
mov
daa
addr16
cli
xchg
and
int3
cld
mov
outsb
sub
std
cld
aam
xlat
adc
pop
xchg
in
or
mov
fisubrl
add
arpl
mov
push
mov
push
pop
movaps
xor
sub
push
push
pop
xor
mov
mov
sti
and
sahf
mov
mov
sub
xor
cli
mov
pop
push
cmpl
sbb
fisubrl
jae
xorl
in
add
fiaddl
push
pop
or
lods
mov
adc
insl
leave
imul
mov
insl
sbb
sub
mov
ss
xchg
aaa
sbb
dec
insb
in
repz
loop
mov
andb
lock
dec
adc
test
lock
cltd
mov
push
adc
lret
and
scas
cmp
jbe
inc
inc
stos
dec
int
and
jo
pop
int
test
add
fcmovnb
inc
mov
and
repnz
and
pop
insl
mov
sti
cmp
mov
mov
out
js
push
outsb
cmpsl
bound
fisubrl
pop
mov
movsl
movsl
jbe
movsb
repnz
inc
dec
imul
cmp
add
xor
add
sub
in
andb
sbb
ljmp
adc
mov
or
push
xchg
gs
push
add
shrl
adc
pop
je
out
cmp
stc
mov
into
cltd
mov
dec
movsb
fimull
les
cmp
pop
fsubrl
loop
sub
shll
in
mov
mov
fcmovbe
ja
lods
add
rclb
xchg
lcall
pusha
add
gs
xchg
jnp
jbe
dec
dec
pop
andb
push
popa
rolb
and
and
jb
jbe
ret
push
add
pop
mov
fcoms
popf
das
xor
xchg
or
sub
lea
add
fsubrs
sub
pop
loope
lret
scas
lret
stos
or
mov
sub
sbb
test
add
adc
pop
mov
jmp
lret
jg
mov
add
add
insl
loope
insb
mov
mov
xchg
ret
or
jg
push
in
test
mov
lcall
lahf
adc
sbb
jg
pop
mov
jns
and
mov
push
pop
mov
mov
jbe
insb
mov
pop
insl
ret
ret
cltd
xor
or
xchg
rcll
add
mov
or
mov
sub
mov
adc
repnz
lret
mov
lds
xor
pop
xchg
lods
dec
push
clc
pop
loope
push
and
xchg
aaa
lds
pop
clc
xchg
repnz
sti
ljmp
push
and
sarl
mov
sub
mov
test
mov
lret
mov
dec
call
or
pop
cli
jmp
mov
push
cmp
inc
stc
repnz
add
xchg
push
add
mov
das
pop
mov
into
sub
pop
xor
add
lods
add
rclb
mov
test
lahf
add
sahf
nop
aas
add
movsl
xor
cmpsb
clc
cwtl
lods
test
cs
insb
cmp
cltd
jl
sbb
repnz
pop
add
push
cmp
pushf
and
daa
add
cs
add
lods
test
push
fs
insl
mov
fwait
loopne
jp
bound
dec
mov
add
and
push
jnp
sahf
repnz
insl
stos
xor
pusha
push
loop
add
push
mov
imul
into
shlb
ret
gs
es
sub
mov
sub
mov
mov
sahf
add
inc
lahf
setp
xchg
loop
xor
movsl
mov
jmp
lret
add
sbb
outsb
inc
test
mov
je
add
inc
jecxz
ds
pop
jmp
cmpsb
fcmovnu
jbe
ret
and
fcomp
lods
scas
pop
pop
stc
mov
lea
mov
xchg
test
movsl
adc
sbb
mov
adc
sahf
mov
add
mov
jmp
out
orb
in
cmpsb
push
hlt
xchg
xchg
or
mov
data16
sub
mov
gs
inc
inc
ja
xchg
cmp
int
arpl
stos
xor
cmp
mov
call
sbb
xorb
xchg
ds
xchg
lea
or
mov
mov
add
fbstp
xor
mov
insl
insb
sub
jb
insb
lds
mov
cmpsb
out
in
rcl
in
mov
pop
cs
xchg
push
or
xchg
add
mov
das
pop
mov
in
xlat
mov
add
mov
xchg
test
pop
or
popf
rorl
jb
push
mov
push
xchg
das
frstor
aas
dec
push
jne
std
jns
mov
or
stos
xchg
inc
loope
pop
inc
push
mov
jecxz,pn
ret
mov
in
push
mov
pop
test
push
mov
lods
and
add
adc
fiaddl
mov
leave
sbb
aam
mov
mov
lret
jns
sub
stc
jno
es
lret
mov
fstpt
inc
xor
insl
pop
push
push
pop
into
stos
es
insl
mov
or
fmul
push
xchg
inc
adc
mov
mov
scas
and
out
cwtl
push
mov
decb
push
je
add
cs
mov
fists
mov
shlb
push
mov
nop
lods
mov
outsb
inc
mov
pop
out
test
or
add
data16
fcmovnu
dec
das
mov
inc
mov
sub
jno
insl
aaa
sub
gs
cmp
xlat
fwait
test
imul
out
jne
sahf
mov
add
stc
lret
xchg
mov
add
push
sub
mov
pop
inc
dec
dec
xchg
gs
mov
jp
jae
pop
mov
add
gs
clc
jbe
add
lea
repnz
ret
add
mov
aas
cmpsb
scas
add
mov
enter
mov
roll
mov
jp
imul
cltd
pop
repz
add
lods
sub
mov
xlat
add
xchg
inc
das
lds
insb
lret
push
mov
jmp
mov
lods
mov
int3
ds
sbbl
es
sub
add
js
fsubrs
push
arpl
lret
aaa
call
add
outsl
pop
pop
pop
mov
inc
pop
jg
lea
sub
xchg
and
test
int
add
lret
or
push
push
out
sub
mov
push
mov
bnd
or
sub
pop
push
mov
jle
sub
fcmovnbe
xchg
cmp
ret
xchg
outsl
or
push
stos
xchg
fildl
pop
test
in
insl
stos
jp
cmp
fldl
push
lcall
jp
push
jne
mov
das
inc
mov
dec
mov
pop
mov
insb
fstpt
cmc
jne
sub
sub
or
fstps
sub
cmp
sbb
adcb
mov
jbe
add
scas
dec
repnz
sbb
pop
add
insl
jmp
stc
daa
add
sub
and
dec
test
mov
cmpsb
mov
pop
pop
jns
push
mov
or
fstl
out
sbb
cs
mov
ljmp
loop
sarl
fcomps
aaa
rcrb
inc
mov
fistpl
fnsetpm(287
pop
add
jbe
in
jae
mov
fmuls
aam
in
in
stos
in
mov
xchg
jl
mov
jmp
lods
or
or
jle
add
inc
sahf
sbb
xor
mov
and
and
in
into
ds
fstpl
gs
push
fisttpll
test
sbb
scas
jo
or
pop
add
or
pop
pop
fisubl
xchg
stos
sub
and
fcmovnbe
inc
faddl
sti
jmp
repnz
out
mov
insl
mov
mov
pushl
in
mov
and
xor
outsl
insb
mov
push
sub
sbbl
xchg
sub
insl
cmp
lea
test
pop
mov
clc
mov
pop
sbb
push
or
pop
add
adc
cmp
xor
data16
adc
stc
inc
and
pop
pop
add
inc
cmp
mov
dec
es
inc
bound
fwait
cli
loop
inc
mov
mov
push
sub
in
loope
adc
jbe
fst
stos
call
outsb
jle
mov
mov
xor
out
mov
insb
push
mov
xlat
gs
shlb
mov
add
or
add
xor
sub
adc
sbb
in
fldcw
mov
in
dec
testl
enter
in
mov
fisubl
out
les
xchg
test
sbbl
out
pushf
cwtl
cwtl
adc
mov
jg
mov
test
stos
addb
pop
js
je
push
jo
fstpl
cmpsb
dec
scas
add
jecxz
stc
ret
or
shlb
scas
stos
add
jno
stc
inc
lcall
repnz
pop
mov
mov
add
fwait
in
pop
fldt
in
outsl
fwait
test
push
sbb
insl
incl
dec
data16
imul
mov
stc
sub
lret
jb
mov
xchg
test
lea
adc
mov
cmp
push
inc
add
jmp
and
aad
loopne
in
int
lds
dec
dec
inc
push
fiaddl
mov
icebp
sub
lea
cli
mov
push
leave
jecxz
bound
mov
popa
xor
pop
and
rcrl
gs
stos
sub
push
or
add
inc
inc
dec
jmp
mov
insb
sub
adc
jne
fnstcw
jmp
sub
mov
cwtl
mov
sub
jae
js
movsb
lret
mov
lret
inc
lods
dec
mov
mov
adc
insb
mov
adc
insb
push
push
shlb
mov
push
xor
dec
sbb
test
xchg
inc
xor
lret
mov
or
push
movsb
mov
arpl
nop
or
insb
push
test
fistpl
sub
add
lock
inc
gs
mov
xchg
loopne
mov
push
das
rclb
add
enter
shl
pop
fistl
cmp
ds
xor
sub
dec
sbb
movsb
and
sbb
or
add
filds
push
mov
jecxz
add
pop
push
add
pop
arpl
add
inc
fucomi
cs
das
pop
mov
addr16
adc
pusha
in
or
jns
add
repnz
xchg
jb
cld
add
or
add
add
add
sub
xchg
enter
sub
lret
das
dec
pop
sahf
dec
mov
movsl
mov
xchg
pop
scas
cwtl
sub
in
aaa
pushf
jge
add
sbb
outsb
jne
jnp
mov
pop
pop
push
push
sbb
jl
mov
push
dec
dec
add
dec
inc
add
inc
icebp
stc
jbe
arpl
xor
sub
mov
push
xchg
pop
xchg
pop
xchg
gs
add
pop
xchg
gs
jo
imul
dec
pop
xchg
gs
clc
push
loope
ljmp
sub
int3
xchg
cmc
mov
mov
lret
out
cs
add
outsl
mov
mov
mov
adc
xor
cmp
subl
push
outsb
pcmpeqw
mov
mov
hlt
push
or
adc
insl
out
mov
xchg
popf
mov
fadds
adc
add
insb
pop
cmpsl
fldl
mov
sub
jg
lds
pop
xchg
xor
push
es
pop
xchg
pop
and
cmp
lods
mov
xor
es
mov
insl
enter
push
das
mov
cs
jg
in
xlat
sti
add
pop
pop
aad
mov
subl
lods
adc
sub
jbe
fisubrl
je
sub
push
jno
bound
bnd
enter
rcll
mov
xor
xor
cmp
stc
in
cmp
mov
jp
repnz
push
pop
push
dec
jle
mov
push
push
ficoml
arpl
adc
add
test
movsl
push
incb
pop
out
ds
mov
jl
mov
mov
and
add
jl
fcmovu
push
mov
adc
sub
out
loopne
push
int3
add
sub
fidivrl
mov
les
or
test
add
mov
aas
sub
mov
ljmp
movsl
jbe
lods
inc
cmp
push
ljmp
jbe
and
fildl
pop
sub
addl
mov
sbb
out
enter
add
inc
pop
ucomiss
mov
sub
or
mov
cmp
outsb
pop
popa
mov
sbb
or
sbb
sahf
lret
movsb
pop
scas
lcall
sub
adc
es
mov
jp
dec
pop
mov
jl
mov
cs
add
fildl
scas
inc
rolb
or
add
push
sub
rcl
enter
adc
xor
push
movsb
cs
mov
fbstp
add
call
imul
or
lea
push
mov
mov
adc
aam
ret
push
mov
ret
dec
or
jns
dec
out
jnp
sub
or
jns
imul
les
test
sub
mov
in
in
adc
scas
scas
lea
jnp
fwait
jg
mov
shr
cmpsb
sbbl
sub
inc
inc
push
insl
insl
or
and
stc
mov
mov
cmp
movsb
test
and
lods
lea
xor
shr
push
xchg
adc
add
adc
jp
and
push
testl
pop
sahf
mov
aam
movsb
mov
fwait
mov
push
mov
xchg
lahf
fcmovbe
loope
mov
mov
stos
das
xor
sub
and
cmp
lds
inc
xor
pop
mov
leave
mov
mov
in
sbb
jbe
inc
lods
popa
imul
dec
mov
imul
lods
inc
shll
mov
ret
add
push
inc
dec
les
lods
pop
aam
push
pop
pop
andb
dec
fldenv
mov
pop
test
dec
test
insl
xor
or
cs
mov
mov
scas
pop
aaa
and
pop
and
in
mov
xlat
dec
ret
push
mov
aaa
scas
les
push
add
cli
pushf
adc
incb
aaa
sbb
enter
mov
test
push
aaa
fiaddl
sti
sub
into
mov
pop
push
push
imul
sbb
ret
push
aam
xchg
jecxz
test
fs
test
push
pop
lret
mov
fcmovnbe
icebp
or
loopne
in
gs
fcomp
mov
push
into
dec
sbb
inc
pop
ss
mov
and
pop
sbb
fs
rolb
div
fnsave
cmp
sbb
fdivrs
jge
call
shlb
out
mov
test
ret
push
xor
imul
push
sub
push
fs
inc
jae
lods
adc
jmp
scas
push
pop
adc
pop
fdivrl
add
icebp
add
dec
bound
hlt
lds
jns
add
imul
mov
mov
jecxz
mov
xor
repnz
ljmp
imul
and
push
jne
mov
add
cmp
adc
call
icebp
or
ds
cmp
sub
aas
jecxz
jbe
lea
xchg
shrl
outsb
dec
cmc
push
cmp
mov
iret
fldenv
in
les
pop
fimull
mov
adc
pop
pop
fdivs
push
cmpl
mov
test
jmp
pop
enter
or
jne
mov
imul
push
mov
aaa
mov
pop
adc
leave
movsl
sarl
inc
xchg
push
std
enter
push
mov
mov
insl
insb
adc
and
dec
fucomi
or
imul
dec
pushl
mov
sbb
pusha
mov
les
fnsave
sbb
mov
mov
dec
xor
loopne
mov
addr16
sub
pop
jge
sbb
fistpl
pop
push
cs
jg
pop
insl
mov
add
xchg
dec
pop
ljmp
pop
mov
push
fcmovnbe
mov
rorb
adc
adcb
cmp
lea
cs
mov
cmp
repnz
mov
push
xlat
sbb
add
add
rclb
rolb
sbb
mov
aam
cs
xor
push
pop
ficompl
outsb
sbb
subl
push
jge
dec
mov
mov
push
lds
mov
cmpb
mov
mov
out
aas
in
lret
dec
inc
adc
cmp
in
mov
movsl
lods
push
adc
sbb
pop
or
cmpl
ss
mov
mov
jge
push
xchg
repz
inc
andb
arpl
ret
in
movl
movsl
jge
lods
mov
fisubrl
inc
fiadds
daa
pusha
fistl
out
movsb
push
test
xor
andb
xchg
es
and
push
push
jae
pop
push
pop
sub
push
push
ret
mov
fstl
inc
aaa
outsb
imul
mov
mov
add
lea
xchg
mov
fs
jmp
push
and
mov
pop
mov
and
sub
sub
test
cmc
popa
jecxz
push
loop
scas
fcompl
ficoml
aam
inc
out
inc
mov
subb
sub
xor
push
cltd
or
lea
mov
xchg
popf
push
sbb
pop
insl
dec
dec
int
adc
lahf
in
or
or
icebp
inc
mov
test
roll
adc
sbb
movsb
sahf
pop
mov
aad
xor
mov
movsl
push
sbb
inc
inc
push
push
or
inc
push
sub
xchg
loopne
pop
repnz
adcl
mov
pop
xor
ja
mov
or
out
cmp
imul
pop
outsl
outsb
shrl
cmp
jnp
sti
xor
xor
ss
sbb
dec
pop
push
and
and
push
pop
adc
lret
jp
xchg
push
push
dec
mov
in
in
aaa
mov
adc
int
xchg
push
out
dec
insb
xchg
or
add
mov
mov
mov
repnz
sub
pop
aaa
movsl
and
loope
cs
xor
iret
andl
mov
xchg
adc
outsb
jno
cmc
pop
pop
dec
in
mov
sbb
dec
sub
push
cmp
or
pop
les
or
aas
orb
fildl
shlb
push
xor
push
loop
mov
mov
cmp
pop
and
mov
ret
push
lahf
xor
in
mov
push
outsb
mov
test
adc
pop
mov
sbb
and
rclb
fcmovnb
xchg
fidivs
or
adc
xchg
pop
test
mov
sti
pop
push
push
hlt
std
xchg
loopne
push
fucom
add
sti
enter
mov
or
pop
rcrl
andb
cwtl
loop
pop
inc
insl
insl
mov
flds
sub
pop
and
data16
test
nop
pop
add
aad
cld
inc
mov
dec
sbb
testl
lods
mov
call
lock
leave
sti
add
or
and
lret
insl
inc
or
cltd
lret
clc
cmp
js
dec
add
repz
insb
mov
divl
jbe
pop
mov
jp
mov
shll
sbb
mov
scas
mov
xlat
sub
rol
inc
add
cmp
and
sub
out
pushl
inc
cmc
cmp
arpl
add
inc
inc
flds
jge
sub
or
in
lods
xor
into
push
arpl
stos
jo
push
sbb
mov
je
jno
lcall
testb
sub
mov
nop
sub
outsl
dec
or
xchg
xchg
push
pop
mov
xchg
jo
insl
mov
sbb
lds
dec
add
lods
sub
ret
sub
fmul
outsb
xchg
sub
aas
or
outsl
fidivl
clc
imul
in
dec
mov
pop
sahf
out
ret
push
out
movsl
test
mov
push
lahf
lcall
sub
lods
push
arpl
js
mov
mov
mov
pop
sub
mov
pop
cs
push
mov
fnsave
fisubl
lret
mov
or
movsl
movsl
jbe
enter
imul
push
inc
mov
aam
mov
cmp
mov
xor
add
push
das
fcmovu
lods
fnsave
xor
and
shrl
sub
and
in
add
es
xorb
and
add
mov
lods
dec
repnz
ds
pop
arpl
jmp
pop
jp
pop
fstl
mov
jecxz
xchg
shl
xchg
dec
mov
frstpm(287
pop
sbb
inc
fldenv
dec
sbb
imul
mov
sub
jl
mov
mov
loop
dec
lock
lea
lock
dec
xor
mov
xchg
sbb
popf
insl
pop
cmp
mov
or
push
ror
hlt
add
push
mov
call
push
xchg
outsl
aaa
insb
popa
test
add
pop
or
stos
jae
and
mul
add
lods
or
or
pop
pop
sub
in
test
pop
popf
sbb
insl
arpl
xchg
and
outsb
test
gs
and
cmp
mov
cmpb
imul
lret
sahf
inc
orl
lods
jb
xchg
pop
pop
add
call
mov
jnp
push
push
dec
test
out
lds
or
mov
les
imul
mov
adc
out
pusha
das
jl
imul
adc
lret
mov
fdivs
je
adc
pop
mov
sahf
int
orb
fbstp
adc
insl
mov
sbb
pushf
sbb
cmp
fcomp
jno
push
mov
mov
outsb
or
or
movsb
fistpl
movsb
aam
add
add
fcoml
fisubrl
push
out
mov
popa
imul
es
fstps
sbb
std
cmp
sub
pop
daa
cmp
cld
push
mov
jl
ja,pt
add
mov
add
jecxz
xchg
xchg
movsb
add
dec
push
jno
cli
dec
mov
es
addr16
inc
pop
fiaddl
popa
add
jp
repnz
out
loope
movsl
sub
push
mov
testb
xchg
lret
out
adcb
lea
xor
insb
xor
inc
cmp
insl
test
push
outsb
push
aas
loopne
jecxz
stos
les
mov
add
stc
or
add
adc
pop
inc
fidivs
ret
xor
inc
sub
insb
fcmovnb
sub
data16
subb
subb
mov
mov
jno
mov
pop
xlat
push
bound
popf
cmp
sub
je
jno
outsb
inc
rcl
mov
pop
mov
add
mov
sub
insl
or
cld
imul
mov
jae
ljmp
push
rclb
add
adc
xor
movsl
shlb
inc
sub
insl
pop
sub
xchg
repnz
fwait
mov
das
mov
add
fldt
out
std
and
or
mov
rcll
push
sbb
negl
add
sbb
leave
addl
sbb
jle
jno
test
mov
or
movsl
jbe
leave
jl
cmp
cwtl
pop
adc
lods
pop
fwait
or
xchg
fmulp
fiaddl
cmpb
cmp
fmull
sbb
xchg
add
into
or
pop
sub
fwait
push
jae
fnsave
pop
inc
and
pop
fsubrs
inc
push
mov
mov
fcompl
sahf
mov
call
mov
andb
rcl
mov
sub
inc
lds
xchg
lahf
outsl
cmpsl
sub
mov
mov
xorl
add
mov
aad
or
mov
sti
fnstsw
inc
push
and
fistpl
iret
hlt
cmp
shrb
insl
iret
mov
mov
sbb
add
setbe
pop
cmpsl
out
imul
test
mov
pop
rorb
add
dec
inc
mov
pop
popa
stc
gs
rcll
push
add
mov
outsl
push
mov
mov
sub
mov
sub
inc
pop
loope
das
insl
imul
loopne
adc
xlat
xchg
pop
or
icebp
insl
ret
in
outsb
bound
or
sub
pop
sbb
push
andb
aas
dec
decb
mov
and
insb
inc
sbb
xor
fsubrs
aam
dec
push
pop
push
popf
or
pusha
mov
push
lret
insl
mov
sbb
and
jle
mov
mov
fsubrs
into
adc
xchg
adcl
fcmovnbe
pop
mov
sbb
mov
or
or
sbb
sbb
aaa
test
fwait
sti
das
add
push
aas
cmp
xor
push
mov
xchg
and
dec
orb
push
dec
int3
js
adc
test
xor
sarl
insb
ficomps
inc
ds
push
fnsave
sbb
mov
test
sbb
fimull
or
dec
jp
stos
imul
clc
mov
add
add
insl
mov
sub
xchg
fistpl
fstpt
ss
enter
jo
call
insb
mov
test
push
sub
mov
mov
repnz
sbb
inc
adc
lea
mov
sbb
jae
rorb
xlat
jge
sbb
inc
pop
mov
sti
enter
mov
lods
cmp
es
fildl
sub
xor
lea
cmpsl
push
call
inc
add
dec
cmp
fdivs
inc
adc
rolb
or
push
pop
fs
mov
iret
xchg
cs
mov
stos
adc
lods
and
mov
pop
lahf
setb
inc
shrb
lret
lea
jp
ss
vmovhpd
mov
cli
mov
or
inc
mov
lods
add
out
das
sub
or
adc
insb
pop
mov
insl
xchg
push
ret
sbb
push
rcrl
test
outsb
xor
fcmovu
pop
sbb
inc
js
add
xchg
jae
scas
cmp
mov
fwait
test
stos
sti
sub
fisubrl
push
test
mov
dec
jno
cmp
push
lods
insl
imul
pop
loopne
test
adc
sub
cmp
insl
sbbl
dec
and
aas
cli
aaa
mov
icebp
xchg
sub
mov
lods
test
mov
fcmovbe
ret
lret
jo
pop
inc
mov
push
mov
add
cltd
mov
mov
and
pop
out
lret
inc
insb
dec
jo
notl
jo
leave
adc
sub
xchg
and
sbb
into
test
push
and
popa
imul
in
sub
lcall
test
cmp
cmp
lods
test
enter
mov
dec
cmp
clc
stos
loope
stos
push
loop
in
insb
fistl
mov
push
mov
pop
inc
or
adc
pop
jnp
push
pop
pop
sub
mov
pop
add
out
adc
sbb
clc
clc
pop
xor
pop
inc
enter
xchg
or
fldcw
xchg
pusha
subl
popf
sbb
test
cmp
add
sub
in
jno
fcoms
sbb
mov
push
and
pop
lods
aaa
mov
shrb
aam
nop
mov
xor
push
or
push
outsl
cwtl
sarb
push
pop
pop
pop
ficompl
cmp
push
insl
sbb
iret
cmpsl
ret
inc
in
js
mov
xchg
sbb
sub
inc
mov
pop
xchg
jg
inc
cld
ljmp
in
mov
fisubl
add
mov
in
dec
aaa
fisubrl
add
insl
mov
add
cmp
jae
inc
add
sub
xchg
filds
insb
clc
and
dec
in
inc
cmp
mov
std
jmp
jl
jecxz
fistl
jecxz
add
fimuls
movb
xor
aaa
sub
es
cmpxchg
jecxz
xchg
subb
mov
insl
sub
fldenv
adc
rcrb
and
in
mov
jne
add
adc
sbb
sbb
push
enter
xchg
mov
or
imul
imul
cmc
mov
shlb
pop
jmp
push
mov
in
push
jno
orl
push
mov
ss
push
pop
inc
xchg
ss
dec
push
stos
mov
ficoml
push
ret
jae
stos
sub
stos
cmp
lods
pop
pop
jne
pop
rclb
fstp
test
mov
gs
orl
push
adc
subb
shrl
mov
pop
push
jnp
pop
dec
adc
jbe
dec
jl
jmp
sbb
fildl
sub
add
jo
xor
cli
xor
mov
aam
xchg
or
jb
push
insb
pop
add
ds
pop
dec
push
mov
pop
shlb
out
jbe
insl
lea
enter
mov
outsb
ss
push
mov
cld
jbe
out
iret
mov
mov
mov
jo
or
das
mov
pop
cmpsl
test
mov
insl
test
sbbl
pop
mov
xchg
bound
lods
fcompl
mov
dec
xchg
adc
push
add
add
cmp
add
pop
pusha
imul
jne
push
or
push
add
rcl
dec
jge
adc
loopne
mov
xchg
add
fistpl
xchg
add
cmp
lea
loop
inc
roll
cwtl
fcmovbe
cmc
ja
sub
mov
jmp
inc
gs
or
mov
insl
mov
movsb
xchg
sub
sbb
pop
call
push
jge
pop
sar
aad
push
jne
mov
daa
mov
push
addr16
iret
addb
nop
pop
add
fsubrs
adc
int3
aas
dec
lods
test
lds
pop
fidivl
mov
jnp
jmp
insl
insl
pop
ficompl
fcomps
sub
sbb
fs
clc
sbb
push
sub
or
add
movsl
lea
or
fcom
shll
pop
fadds
cmp
rcl
lock
jecxz
or
push
lret
fisubrl
outsl
mov
fstp
sub
and
inc
rorb
out
push
addr16
lods
pop
pop
jl
xchg
imul
pusha
fistpl
nop
mov
dec
add
adc
push
mov
arpl
lods
xor
jbe
pop
xor
adc
mov
lret
ret
mov
loop
or
push
cmp
xlat
jle
incb
xchg
or
mov
adc
add
mov
sub
mov
lahf
sbb
xor
je
mov
and
ljmp
pop
shrl
out
imul
push
cmp
jo
sahf
cmp
fcompl
pop
push
add
jge
test
cmp
xchg
outsb
es
and
jp
movsl
or
loope
mov
iret
shrl
out
adc
imul
roll
gs
jo
push
pop
fmul
es
icebp
mov
or
lret
inc
sbb
aam
xor
jne
imul
lods
sbb
cli
fidivl
movsb
lods
pop
fwait
pop
das
mov
subl
roll
repz
sub
jmp
adc
outsl
dec
dec
sbb
shrb
pop
jno
and
and
cld
insb
xchg
outsb
or
cmpsb
aam
mov
or
xchg
adc
sbbl
imul
sbb
popf
mov
cmp
or
sub
imul
rcrb
mov
mov
fisubrl
je
lods
mov
cwtl
ret
test
mov
fcomps
mov
fadd
xorb
lea
pop
int3
add
push
sbbb
scas
jb
jmp
movzwl
and
sub
push
inc
xorb
mov
sahf
pop
sbb
jl,pn
insb
repnz
stos
in
or
adc
push
add
adc
mov
repz
repnz
pop
mov
jb
lods
cmpsl
das
lret
or
or
out
ficompl
pop
or
loopne
es
mov
and
xchg
push
pop
fldt
mov
sbb
imul
outsb
or
pop
enter
mov
fiaddl
push
add
mov
sub
outsb
and
stc
loopne
pop
or
pushf
jmp
mov
pop
pop
pop
dec
pop
jg
movsb
mov
jns
or
sti
je
clc
adc
xor
mov
dec
es
jbe,pn
imul
dec
popa
cwtl
in
inc
fldt
inc
movsb
into
jnp
std
mov
xchg
ss
or
in
lahf
and
inc
fildl
cmc
mov
fadds
or
inc
dec
test
lds
xchg
movsb
xchg
mov
test
inc
xor
imul
out
mull
inc
add
test
inc
lds
pop
xchg
cmp
pusha
sbb
mov
insl
mov
out
pop
shll
pop
mov
inc
out
mov
lea
mov
aas
push
mov
cwtl
xchg
jecxz
mov
in
ret
adc
xor
lret
bound
sub
fwait
add
inc
mov
aad
cmp
pop
lcall
push
xor
mov
xchg
mov
jbe
xor
mov
mov
clc
jne
sbb
fldt
adc
mov
shlb
mov
add
insl
dec
or
cmpsl
push
xchg
sbb
or
mov
fs
cmpb
mov
cli
dec
mov
out
mov
insb
cli
lods
dec
jo
inc
sbb
jp
sbb
jbe
xchg
push
pop
adc
fildl
gs
mov
or
out
jl
lcall
out
xchg
leave
mov
sbb
push
push
xchg
jmp
push
mov
sub
insl
add
cmc
fwait
repnz
jecxz
outsb
mov
mov
xor
in
mov
adc
cmp
sbb
lds
pop
sahf
int
notb
mov
mov
sbb
mov
jge
mov
or
jne
xchg
xor
xor
pop
xchg
insl
add
push
sub
mov
dec
out
adc
outsb
xor
jbe
push
call
into
xorl
jge
mov
or
fcmovnbe
aam
or
insl
pop
lds
jl
insl
mov
andb
or
and
gs
shlb
dec
jle,pn
cwtl
sbb
sbb
add
pop
add
jge
movsl
insl
inc
jo
shrl
jnp
adc
pop
mov
xchg
xorb
mov
leave
loop
shl
mov
ret
enter
rcrl
insl
dec
dec
enter
gs
mov
insl
inc
cmpsl
adc
jmp
ljmp
mov
loopne
lcall
call
mov
jno
dec
mov
and
arpl
xor
mov
adc
lods
fstp
mov
ljmp
adc
fisubl
pop
lds
jbe
sbb
jb
sub
stc
rclb
xor
mov
pop
test
out
sbb
repnz
inc
sub
push
jb
out
test
in
mov
fstp
shl
adc
mov
ja
cmp
inc
sbb
push
cltd
mov
mov
push
pop
xchg
pop
xchg
push
cli
fcoml
dec
sub
jg
test
test
mov
mov
lcall
inc
fisttps
add
sti
jecxz
and
pop
int
add
xchg
dec
mov
mov
mov
ja
fisubrl
cmp
aaa
fnsave
mov
sub
ds
or
outsb
sub
mov
mov
inc
scas
cmp
push
insl
add
push
dec
js
nop
les
or
jl
mov
and
adc
xchg
int
xchg
mov
fisubrl
or
cwtl
ficoml
jne
aaa
sub
inc
popf
cmp
insl
ret
dec
inc
cmp
jbe
iret
pop
test
in
into
sbb
jno
cs
int
and
fistpl
dec
idivl
mov
mov
test
scas
sub
fiaddl
scas
sbb
cmpsl
push
mov
test
dec
cwtl
jge
or
or
mov
or
pop
mov
test
dec
test
mov
bound
pop
pop
lods
mov
pop
pop
roll
dec
jmp
push
pop
lret
sbbl
sbbl
fcmovnu
in
mov
mov
ss
fisubrl
mov
daa
lods
mov
jb
add
repz
inc
and
lret
out
or
dec
call
inc
adc
ficoms
insb
clc
adc
pop
insb
xchg
jge
jp
stos
push
and
lods
mov
push
adc
or
clc
jge
and
inc
mov
push
aad
lea
add
adc
jmp
lods
adc
or
xchg
fstpl
fimull
loop
xor
fcoms
mov
rorb
jg
negb
out
ss
mov
sbb
mov
ret
daa
sub
aaa
or
mov
negl
test
testb
dec
fildl
mov
cli
daa
and
mov
icebp
stos
imul
mov
cmp
fldt
insl
negb
loopne
shll
xchg
pusha
popa
or
orb
xchg
inc
sbb
pop
mov
mov
inc
or
sub
and
lea
jbe
popa
mov
or
mov
adc
movsb
push
sbb
aam
xchg
adc
adc
xor
cwtl
out
xor
fsubrs
data16
fcoms
push
lret
insl
das
jno
sub
sbb
stc
out
dec
jno
pop
fcmovb
mov
lock
movsb
xchg
jae
sbb
insl
fistl
mov
lret
adc
inc
dec
stos
inc
fildl
xor
or
insl
popa
bound
adc
je
pop
push
xchg
loope
adc
jo
pop
xchg
cmp
imul
mov
mov
sub
cwtl
imul
mov
jle
xor
mov
push
lahf
jns
dec
out
insl
test
roll
movsl
stos
jo
sbb
test
mov
testb
aad
inc
pop
cmpsb
jg
out
int
sbb
adcb
mov
or
insb
sub
call
xchg
mov
jbe
and
mov
rdtsc
call
test
pop
fidivl
lds
imul
repz
cmp
adc
xor
fstp
insl
ja
xor
fstps
popa
fldt
dec
sti
xor
popa
arpl
lcall
movsl
jbe
js
xor
in
outsb
sbb
pushf
iret
scas
imul
cwtl
cmpsl
add
outsb
or
hlt
adc
push
mov
mov
fistl
aam
ja
sbb
arpl
cmp
cmp
push
test
imul
jecxz
lret
xchg
hlt
xlat
pop
jbe
inc
jno
ljmp
loopne
rol
nop
loope
sti
mov
cmc
loope
push
push
xchg
pusha
jl
inc
mov
sub
sbb
stos
in
rcll
mov
pushf
and
pop
pusha
imul
pop
push
pop
mov
bound
ljmp
in
inc
pop
and
add
pushf
jp
lds
or
bound
imul
adc
mov
aad
ss
jnp
fwait
das
daa
or
cmpsb
loop
in
or
pop
fildl
cltd
das
cmpsb
pop
cltd
push
lock
mov
push
cmp
mov
insl
adcl
stos
mov
add
pop
push
mov
push
shll
dec
aas
sbb
xchg
inc
aam
add
sar
inc
pop
jmp
mov
addr16
add
mov
fwait
fs
pop
into
and
xor
test
or
dec
mov
jmp
lods
insl
mov
lea
cwtl
sub
sbb
pop
call
pop
xor
or
mov
lds
fs
push
jno
add
fstl
xor
fbstp
sbb
ss
push
mov
fldcw
mov
push
mov
adc
add
shrl
cmp
test
adc
fcmovbe
adc
jb
imul
popf
call
imul
xchg
fstp
aad
pop
mov
ret
jmp
and
adc
inc
insb
fcmovne
jp
push
dec
sti
clc
or
pop
pop
idivl
dec
jp
mov
inc
xchg
sbb
dec
fstp
cs
mov
bound
add
jle
or
push
adc
add
add
inc
cwtl
stos
imul
inc
add
push
out
push
loope
mov
pusha
add
scas
in
add
or
xchg
dec
lea
mov
mov
test
stos
push
fcomip
jb
add
scas
push
jle
jge
push
lret
sahf
loop
or
sub
ss
mov
push
add
shlb
pop
fnstcw
fcomps
xchg
adc
xlat
rcl
or
jle
mulb
jo
jo
sub
enter
ret
cmpsl
sbb
adc
jl
aad
ror
and
loopne
stc
sbb
subl
inc
push
dec
push
fdivs
dec
mov
push
and
fbld
dec
mov
bound
dec
sbb
xor
inc
scas
sbb
push
mov
negl
jo
test
adc
pop
fdivrs
fs
add
sbb
inc
pop
jmp
outsb
insl
imul
pop
sub
pop
imul
pop
insl
mov
pop
and
fldl
jp
mov
stos
add
sbb
mov
inc
xchg
rcl
subl
fidivrl
sub
mov
pop
dec
push
jo
jg
ficompl
sub
mov
push
dec
push
inc
popf
push
lods
push
das
xchg
dec
lock
test
std
or
sub
outsl
cmc
movsl
mov
mov
shlb
test
in
mov
dec
xor
or
test
ja
cmpsb
jbe
pop
shrb
jae
mov
jecxz
hlt
mov
jbe
sub
lret
addr16
sbb
push
mov
pop
lret
movsb
subb
adc
pop
mov
dec
mov
inc
or
ret
in
outsb
xor
test
shrl
int3
std
ffreep
sub
fsubrs
xor
pop
xor
mov
icebp
dec
stc
push
push
add
xor
jbe
sub
scas
cmc
popa
stos
ja
sbb
add
std
pop
jae
aaa
push
sbb
fdivl
lahf
mov
dec
pop
dec
repnz
in
add
cmp
sub
add
mov
push
push
cmp
add
sub
lods
out
daa
outsb
insb
sbb
adc
xchg
pop
pop
cmp
adc
dec
push
inc
popa
popa
mov
or
and
jbe
cmpsb
loopne
sub
sbb
push
and
xchg
andl
scas
popa
jmp
or
mov
hlt
enter
xor
push
mov
or
add
leave
fld
mov
mov
outsb
in
inc
fldt
ret
xor
hlt
movsb
or
push
repz
push
aad
popa
imul
sbb
aad
sbb
or
inc
dec
popl
jne
sub
iret
cmpsb
cmpsb
subb
jecxz
sbb
pop
fcoms
mov
ffreep
ret
adc
lret
pop
imul
pop
insb
rcrb
fcomps
mov
mov
adc
mov
fisubl
cmc
fisubl
lods
stos
mov
xor
fidivrl
mov
mov
lods
fsubl
add
xor
push
subb
pop
cwtl
fisubrl
push
push
fucomi
push
fcmovu
push
lret
and
and
mov
scas
push
fdivs
fcomps
into
rorl
jg
fs
lds
jle,pt
jp
pop
pop
jae
enter
lcall
dec
jbe
dec
pop
lods
inc
mov
mov
fildl
shl
popa
and
inc
mov
fisubl
in
or
mov
lahf
lods
pop
cmpsl
xchg
mov
loop
jle
cmp
push
arpl
sbb
mov
inc
push
dec
call
mov
clc
loope,pn
push
mov
sub
sub
mov
and
pop
jge
add
push
adc
in
adc
push
mov
inc
popa
jo
mov
insl
mov
aam
shrb
mov
xchg
jne
imul
add
movsl
test
lret
cmp
inc
stc
jecxz
add
mov
mov
sahf
mov
sbb
xchg
cmp
mov
cmpsl
xchg
fbstp
test
aaa
fsubs
outsb
mov
mov
sub
clc
mov
test
inc
mov
inc
sub
scas
push
xchg
stos
xor
push
imul
jbe
jne
jmp
lea
mov
push
pop
mov
pop
add
sti
add
jl
mov
cmp
push
add
int3
jo
test
test
mov
or
pop
rcrb
jg
insl
fildl
je
ret
subb
out
and
pop
test
cs
out
inc
pop
push
lods
aaa
mov
dec
shll
mov
mov
adc
mov
orb
lahf
jbe
mov
rorb
xchg
lea
xor
mov
sbb
in
add
ljmp
jnp
xor
or
jp
subb
inc
pop
push
mov
xor
lods
lret
incb
push
mov
inc
sbb
sbb
fisubrl
mov
shrb
mov
or
cmp
mov
jbe
mov
ret
ret
add
xchg
sub
outsb
sbb
add
test
or
adc
fwait
or
out
inc
addl
cld
popa
popa
mov
mov
dec
insl
pop
aam
sbb
ss
lock
outsb
cmp
pop
out
rclb
pop
xor
or
jmp
sbb
lods
jl
fcos
es
or
pop
adc
outsb
sbb
mov
mov
cmp
mov
fildl
or
dec
lahf
push
imul
sahf
sub
stc
jle
insl
insb
mov
mov
ss
fcmovnbe
lcall
pop
push
fidivl
rorl
mov
popa
mov
clc
jmp
dec
mov
inc
add
lods
loope
push
push
jp
inc
pop
in
jge
ds
repz
roll
bound
mov
lcall
in
outsl
mov
vpsubq
fstpt
outsb
or
insl
pop
ret
call
mov
fcmovnbe
lret
xor
and
mov
test
push
test
insb
or
sbb
xchg
insl
insb
sub
pop
push
in
lods
outsb
in
mov
cmc
xlat
andb
mov
in
jecxz
fwait
xor
push
pop
in
mov
push
bound
push
pop
imul
mov
test
mov
fcomps
fldt
or
and
fldt
add
pop
or
aam
lcall
int
push
jne
movsb
mov
mov
adc
out
enter
movsl
lods
pop
sub
mov
dec
pop
push
shlb
sahf
lret
or
push
lcall
cli
mov
ret
out
clc
mov
loopne
mov
mov
mov
jne
outsb
in
inc
mov
aas
or
mov
sbb
sbb
xor
out
xchg
in
and
xchg
xchg
fmuls
ds
xor
xor
mov
insl
or
push
add
adc
pusha
shl
pop
push
mov
adc
in
test
mov
mov
push
cmpl
sub
push
frstor
mov
push
lcall
and
shl
xlat
adc
push
aam
dec
lods
mov
rol
jno
mov
inc
subl
cwtl
cwtl
ret
and
jge
sub
mov
fucomip
insl
addb
repz
mov
add
fildl
pop
add
xlat
test
repz
sbb
lea
push
mov
sub
pop
mov
in
pusha
push
hlt
fildl
mov
insl
aaa
adc
mov
jae
push
fisubrl
insb
push
enter
push
xor
and
test
jns
rcll
mov
cmc
push
rolb
lcall
mov
or
outsb
orl
mov
push
shlb
fdivl
jmp
rcll
xor
shll
int
cmp
lret
mov
outsb
shlb
nop
addl
arpl
dec
aaa
jecxz
scas
insl
popa
pop
lods
adc
roll
inc
insb
sub
pop
sbb
test
cmp
mov
movsl
lods
mov
or
fnsave
pushf
std
mov
jecxz
fistl
scas
pop
xorl
or
jne
xlat
flds
xchg
or
insb
ja
or
shlb
ss
pop
fdivrs
and
dec
lock
and
jns
mov
in
add
jp
sub
cs
dec
enter
and
into
adc
and
pop
rclb
or
xchg
sar
push
mov
pop
push
add
bound
dec
iret
lods
jne
pop
jae
sbbl
pop
fisubl
fwait
jle
sub
push
sbb
mov
sub
imul
fcmovu
pop
aam
mov
mov
add
sbb
fildl
sbb
mov
jp
fimull
je
xor
mov
out
sti
shll
inc
outsb
jne
in
cmpsl
push
bound
jae
adc
dec
mov
or
aaa
sub
pop
inc
fnstenv
sbb
xchg
dec
add
sbb
fldl
sub
push
lret
cmp
push
lds
pusha
sahf
jg
daa
cwtl
or
adc
insl
xlat
or
cmp
sub
outsl
rep
es
in
imul
cmp
mov
pop
arpl
and
mov
rol
pop
sbb
sbb
in
and
decb
out
in
and
add
sbb
stc
repnz
aas
stos
addr16
sub
pop
or
dec
mov
insl
pop
or
jae
xor
pop
fisubrl
mov
push
imul
rclb
jbe
and
sbb
fstl
sbbb
loope
sahf
push
pop
cmp
xchg
or
fnsave
les
shl
cmc
sbb
lea
pop
push
jnp
ret
loope
xchg
mov
or
pushf
les
fistpl
test
xor
mov
scas
orb
xchg
dec
mov
mov
sbb
xchg
lds
push
insl
clc
add
movsl
cmp
rol
mov
cmp
mov
in
fbld
outsl
dec
fildl
lock
xchg
leave
fwait
pmaddwd
mov
jp
sbb
cmp
ljmp
jp
inc
ret
inc
mov
pop
fimull
jecxz
sti
mov
jp
add
outsb
pusha
inc
pop
push
xchg
and
adc
movsl
push
mov
cltd
push
les
fmul
ror
out
out
fldt
fiaddl
push
je
inc
add
adc
lods
stc
sti
sub
je
jae
ret
popf
and
push
inc
adc
ja
jns
fisubrl
mov
xor
pop
fwait
xor
gs
and
jge
jg
in
dec
mov
ret
aad
fs
int3
inc
and
call
pop
repnz
push
repz
out
popa
icebp
adc
sub
cmp
decl
adc
push
add
push
insl
adc
imul
insl
mov
fadd
cmp
or
insl
loope
sahf
scas
xchg
pop
fiaddl
mov
mov
mov
sbb
scas
sub
dec
rclb
mov
jbe
pop
xor
hlt
jge
jne
or
sub
mov
mov
repnz
dec
mov
mov
aas
cs
test
adc
sub
jae
in
out
aam
insb
sbb
popf
roll
sub
test
aam
and
shrl
icebp
test
aam
pop
push
xchg
rcl
pusha
jnp
adc
xchg
sarl
lahf
shlb
arpl
shll
ja,pt
ret
xor
or
mov
push
insl
push
mov
mov
mov
push
outsl
pop
ret
cmc
mov
jmp
jg
jg
gs
pop
mov
or
aam
loope
imul
arpl
fwait
dec
pusha
or
fsubrs
movsl
sub
outsb
pop
or
je
inc
mov
push
arpl
and
cs
mov
push
fisubrl
xor
and
or
xchg
imul
pop
adc
push
sbbb
jecxz
adc
outsb
insl
fcmovnu
iret
inc
inc
loopne
out
cmp
add
push
jnp
and
mov
insl
insb
pop
mov
jecxz
sbb
aas
pop
sub
les
cmp
adc
inc
mov
add
js
neg
dec
mov
aam
adc
or
insl
dec
sbb
test
xchg
sbb
lahf
mov
imul
push
mov
and
test
xorb
fucomp
mov
je
dec
repnz
sbb
repnz
push
adc
clc
xor
add
insl
int3
insl
sti
adc
add
aam
jnp
aam
iret
roll
fcomp
sbb
lret
stos
sbb
mov
stos
fisubrl
mov
and
ret
fdiv
lods
cltd
loopne
mov
test
das
jno
push
and
pop
sub
sub
mov
movsl
add
int3
lret
or
mov
mov
mov
inc
sub
push
shl
scas
mov
lahf
movsb
cmp
mov
jge
and
and
sbb
lea
xchg
and
subb
sub
addr16
mov
std
icebp
fwait
cltd
test
inc
sti
mov
inc
aam
popf
in
push
cmp
cwtl
movzbl
mov
pop
mov
add
push
dec
adc
fwait
sbb
sbb
shrl
aam
fadds
mov
push
xchg
mov
lret
sbb
lea
loop
jl
push
push
pushf
adc
mov
subb
aam
xchg
popa
lds
cwtl
imul
pop
fsubs
lea
fcmovnbe
jmp
pushf
sbb
notb
inc
cmp
sbb
mov
repnz
insl
jb
push
xchg
add
adc
aam
scas
cmpsb
push
push
mov
sub
mulb
test
fadds
fwait
add
and
shll
sub
pusha
or
fildl
push
mov
and
mov
pop
loop
mov
mov
xchg
sub
clc
pop
lcall
xchg
dec
cli
subb
xchg
bound
mov
shrb
jmp
mov
imul
dec
outsl
fdivl
mov
mov
push
test
fsubrl
lret
cmp
fcoml
sbb
mov
lcall
dec
imul
ds
adc
cmpsl
ret
mov
mov
int
imul
mov
nop
push
sbb
fwait
dec
mov
mov
stc
stos
sbb
repz
test
adc
sbb
loop
outsb
dec
jo
cmc
ja
aam
inc
or
sbb
mov
add
movsl
jb
dec
in
leave
sbbl
adc
je
sub
stos
test
push
xchg
movsb
cli
pop
fidivrs
or
cs
jmp
xchg
mov
imul
cmc
fucomip
out
mov
mov
jmp
pop
push
cwtl
cmc
std
popa
arpl
fcmovb
scas
jmp
xchg
xor
lds
dec
imul
sub
sbbl
mov
pop
sbb
dec
jo
rcl
xor
fdivl
insl
pop
jne
mov
push
mov
fsub
push
mov
mov
gs
out
dec
cs
mov
vphaddubw
inc
lods
sub
decl
pop
fcomp
in
mov
divl
mov
sub
ss
sbb
or
mov
xlat
adc
pusha
fldt
scas
int
jmp
repnz
xor
and
outsb
fistpl
fdivrs
test
mov
mov
mov
out
mov
out
arpl
gs
cwtl
cmp
cmp
jns
pop
xor
mov
adc
aaa
in
mov
mov
sub
and
cli
inc
or
inc
in
roll
mov
pop
loopne
lods
test
sub
icebp
adc
add
cmpsb
faddp
sub
cs
arpl
fisubl
add
xor
popa
arpl
push
addr16
movsl
sbb
mov
mov
or
jo
decb
mov
push
ljmp
jns
mov
ss
insl
mov
sahf
adc
lods
fstpl
je
xchg
mov
sbbb
mov
inc
jo
fldl
pop
dec
ret
sub
loope
loopne
cmc
xor
lcall
mov
adc
icebp
push
test
enter
pop
jmp
add
inc
addl
cmpsl
dec
inc
xchg
inc
cmp
or
rolb
rorl
popf
jmp
jbe
jo
adc
addl
jbe
shr
scas
cmpsl
fsubrl
xlat
pusha
xchg
test
mov
inc
inc
mov
adc
insl
sbb
and
insb
adc
or
jg
mov
lea
insl
mov
jl
lret
fildl
xchg
insb
in
add
dec
add
sub
in
int3
pop
push
jne
push
les
into
add
inc
inc
adc
and
xchg
je
aad
cs
aas
stos
mov
rcl
mov
push
sub
ret
and
jns
ret
xchg
outsb
insl
movsl
cmp
stos
cltd
cmp
mov
jnp
pop
addr16
inc
mov
mov
push
jg
mov
out
push
outsb
call
test
iret
mov
lods
jbe
popa
repnz
xor
fs
outsb
in
roll
hlt
lds
push
push
sub
cmpl
movsl
sbb
loop
std
ljmp
clc
xchg
ja
out
fstl
dec
into
add
add
nop
push
rclb
fsubl
cmpsl
pop
push
mov
pushf
outsb
pop
sub
inc
push
sub
test
push
pop
jae
lock
mov
mov
mov
push
orl
hlt
subl
push
push
adc
insl
popa
xlat
call
mov
pop
pop
scas
mov
push
push
lcall
inc
lods
je
fistl
mov
jg
or
fiaddl
push
into
test
ss
pusha
push
jbe
into
shlb
lahf
fiadds
fstp
lods
jbe
jmp
push
mov
push
sub
pop
fdivs
dec
xchg
mov
jmp
movsb
push
sub
adc
in
inc
add
or
push
inc
lods
test
dec
es
or
or
mov
out
xchg
sub
push
add
sbb
loope
gs
pop
pusha
imul
aad
enter
adc
push
les
clc
jo
cmpb
or
add
mov
aam
and
push
pop
push
leave
sbb
adc
and
or
mov
sub
push
scas
cmp
mov
ja
insl
stos
fidivl
inc
pop
ret
push
adc
cmp
xor
test
inc
pop
cmp
outsb
insb
mov
sahf
and
push
cmp
xchg
mov
aam
or
add
adc
data16
fildl
pusha
dec
or
icebp
repnz
or
xlat
rcll
mov
daa
ret
enter
cmp
mov
and
add
jae
pop
mov
push
mov
cmp
pop
shll
dec
test
sub
dec
and
ret
mov
jo
jno
call
push
sahf
pop
add
mov
push
mov
movsl
bound
and
mov
inc
sub
repnz
xchg
mov
mov
cmp
mov
xor
cs
pop
adc
adc
mov
mov
mov
push
mov
insl
mov
sub
inc
jle
adc
mov
push
fcmovnu
mov
lret
loop
and
push
jno
icebp
mov
aad
mov
es
jne
fsubrs
inc
mov
rcr
test
das
mov
fndisi(8087
outsl
mov
push
or
add
push
outsb
sub
pop
dec
jno
push
mov
fst
cmp
and
outsb
sbb
aad
and
lods
mov
and
ret
jle
out
lods
jne
sub
jp
xchg
mov
in
clc
enter
jbe
inc
jne
fcmove
inc
or
mov
sub
loopne
rorb
imul
and
add
mov
in
sub
loop
fidivl
and
dec
lods
or
xchg
inc
inc
inc
decb
xchg
add
sub
xor
test
cmp
inc
mov
insb
or
pop
inc
mov
into
push
imul
loope
inc
fs
xor
mov
and
xchg
int
scas
pop
fdivs
adc
xchg
lock
ret
je
inc
xorl
lods
shl
lea
scas
loop
mov
test
cmp
or
arpl
shlb
add
mov
push
test
pop
pop
dec
inc
fdivl
push
decb
jne,pt
pop
sub
shrl
mov
ljmp
inc
mov
cltd
or
add
mov
mov
mov
and
mov
call
adc
test
jo
test
and
mov
lods
clc
call
xor
cmpsb
pop
add
fcmovbe
ret
movsl
int
cmpsb
xor
push
jne
insb
mov
mov
jne,pt
mov
mov
xchg
mov
popa
cmp
sub
into
sub
sbb
repnz
lret
dec
in
or
cmp
imul
sbb
enter
divb
mov
mov
dec
sti
addb
cmp
cmp
inc
out
mov
aad
xchg
mov
sarl
repnz
xchg
stc
popa
or
and
fistl
and
mov
shl
sbb
rcll
or
pusha
pop
stos
lods
mov
fistl
mov
subb
lcall
and
negb
sub
stos
or
inc
mov
sub
insl
mov
ljmp
cmp
bound
mov
test
mov
adc
imul
and
jo
les
cmp
sbb
aad
pusha
lea
adc
xchg
mov
lds
add
xchg
cmp
pop
rorb
mov
insl
popa
pop
pop
or
fisttps
mov
and
mov
sub
fstp
aam
loope
mov
roll
inc
iret
push
push
cmp
insb
insl
pop
aam
fidivrl
push
insl
cli
bnd
or
inc
movb
std
sti
nop
push
push
pop
jno
test
test
jge
xchg
xlat
rcr
imul
sbb
je
jne
leave
push
mulb
sub
mov
js
push
movsb
fldt
mov
outsb
rorl
sub
xor
aaa
test
addl
mov
in
xor
ficompl
sbb
test
or
mov
mov
rol
inc
mov
sub
mov
push
mov
mov
sbb
frstor
aaa
clc
call
call
adc
pop
mov
insl
orl
rclb
mov
adcb
push
out
mov
ret
pop
mov
ljmp
rcll
mov
adc
xchg
pop
test
inc
jne
sub
mov
aaa
cmp
js
cmc
nop
jmp
push
je
dec
xchg
jmp
clc
sbb
push
sub
cmc
test
outsb
imul
cli
fdivs
repz
imul
xor
push
jne
xchg
dec
cmp
xor
fcmovu
into
xor
mov
stc
lea
mov
xchg
pop
jne
jl
mov
in
rcl
xor
cmp
fiadds
sub
push
aam
js
adc
outsb
jl
stc
xchg
pop
sub
sub
stos
rcrl
inc
xor
sbb
mov
hlt
cmpsl
out
and
xchg
mov
test
fwait
push
lods
mov
xchg
lods
lahf
xor
sub
xor
pop
pop
mov
call
jmp
lcall
mov
and
ss
test
enter
fistl
pop
jae
jp
fildl
and
mov
loop
push
aaa
dec
jns
push
aaa
push
mov
in
mov
cmpsb
aaa
int3
xor
imul
jecxz
les
or
cmpsl
mov
cs
jp
jbe
pop
fidivrs
mov
mov
insl
sbb
push
mov
adc
insl
or
pop
mov
stos
sbb
mov
mov
xchg
andb
mov
adc
pop
or
add
sbb
fistpl
dec
outsb
add
aad
push
sbb
mov
std
pop
lds
push
stos
or
adc
stos
or
les
sbbb
push
mov
test
mov
sub
pcmpeqb
scas
lods
data16
ret
or
and
push
mov
jmp
pop
and
and
outsl
fsubrl
mov
pushf
or
jl
fldt
nop
adcb
xor
push
add
push
ret
scas
mov
dec
aaa
pop
inc
outsl
inc
out
das
orb
pop
add
cli
add
cli
les
test
dec
lret
and
aas
sub
rclb
or
cmp
push
xor
push
push
loop
outsb
adc
mov
test
into
xchg
in
loopne
rorb
out
push
mov
je
dec
cmp
insb
dec
es
outsb
or
mov
mov
movaps
mov
dec
jo
inc
loopne
scas
fadds
je
jo
pop
hlt
sub
or
fildll
lods
mov
xor
inc
cmp
arpl
mov
jmp
push
cld
sbb
add
pusha
jle
push
shll
clc
ret
mov
mov
xchg
inc
sbb
pop
rolb
xchg
mov
test
mov
movsl
ret
add
aad
dec
jge
idivl
sbb
mov
dec
aaa
or
xor
mov
add
push
xchg
xor
das
adc
mov
test
test
xchg
add
ss
inc
mov
imul
inc
out
loope
mov
pop
pop
idivl
and
mov
mov
push
ds
sbb
pop
out
pop
xchg
insl
pop
push
lods
xchg
outsl
loopne
sti
pop
push
shlb
ret
push
clc
mov
cs
lods
or
mov
sub
dec
add
std
jno
jb
and
cmp
mov
fnsave
mov
jmp
movsl
insl
imul
sbb
xor
sub
push
mov
fcompl
dec
imul
inc
imul
push
sbb
dec
add
addl
jnp
cmpsl
pusha
lea
insb
or
and
mov
cmp
lcall
pop
stos
test
fildll
loop
push
insb
test
inc
daa
push
out
fs
mov
sub
dec
xor
jne
mov
popa
jmp
push
in
or
call
rorb
push
dec
and
pop
push
imul
jno
insl
jmp
sti
loop
fwait
cmp
mov
adc
scas
pop
inc
pop
xchg
fadds
mov
insl
fcmovnu
movsl
mov
jns
push
cmp
in
push
mov
sbb
pop
push
sahf
mov
mov
in
jge
xor
es
clc
adc
rol
mov
pusha
adc
sub
fxam
or
movsl
lods
fnstsw
mov
inc
xchg
xor
pop
cltd
cwtl
cltd
rclb
shrl
bound
or
pop
sub
jbe
mov
mov
adc
lods
stos
bound
mov
add
pop
out
xlat
pop
jle
mov
clc
es
leave
cmp
or
pop
pop
adc
and
ss
loop
nop
ds
mov
mov
inc
lcall
push
out
inc
or
inc
inc
stos
sub
test
in
push
or
or
inc
pop
les
daa
lahf
in
aad
mov
je
jle
cwtl
pop
pop
stc
orl
sbb
fcomp
movsl
test
mov
leave
in
push
les
test
clc
xchg
popa
mov
mov
call
rcll
mov
stos
pop
pop
les
inc
mov
mov
mov
pop
add
mov
sub
je
pop
into
fldcw
in
mov
add
sub
cmpsl
add
jecxz,pn
out
lret
dec
movsb
in
or
ret
inc
mov
fcmovnbe
ret
outsb
cmp
mov
ja
mov
mov
dec
jp
into
jg
xchg
movsl
divb
sahf
lods
sub
inc
mov
or
out
mov
addl
movsb
mov
fiaddl
xor
mov
cwtl
sub
push
faddl
loop
fstpl
inc
jge
fidivrl
adc
or
mov
jp
xlat
gs
fstp
push
sub
sub
add
mov
lds
push
mov
fiaddl
das
icebp
cwtl
dec
mov
push
in
movsb
ds
add
mov
popa
xorl
sub
jbe
imul
ss
in
clc
pop
clc
les
inc
frstor
mov
out
or
lea
xlat
inc
mov
adc
inc
jp
lods
push
add
mov
jae
icebp
std
xchg
xchg
pop
cmc
or
ret
xchg
or
sbb
xor
sub
fbstp
pop
cmpsb
mov
lahf
pop
jg
and
jne
popa
orl
adc
jecxz
repz
sbb
mov
inc
aam
sub
pushf
xchg
lret
xor
lods
test
pop
xor
testl
outsb
sbb
cmp
gs
lods
dec
scas
mov
add
inc
dec
hlt
sbb
xchg
std
mov
bound
sahf
lds
mov
outsb
xchg
fdivr
add
imul
sbb
pop
mov
stos
dec
movsb
sub
xchg
add
inc
jp
rclb
mov
call
add
or
sahf
or
xchg
test
or
mov
loope
in
pop
lods
andb
mov
add
mov
orb
mov
xchg
adc
addr16
xchg
add
sub
outsb
cmp
mov
fidivl
sbb
aas
sub
movsl
insl
fcmovne
mov
in
add
out
fcmovnb
push
mov
inc
mov
insb
enter
mov
and
inc
push
and
jo
faddl
flds
cltd
fnstenv
and
aaa
mov
xchg
xchg
idivl
loopne
shll
jle
sub
test
lret
js
movswl
sbbb
clc
lds
push
fimull
fneni(8087
mov
je
push
dec
pop
adc
fiadds
out
sahf
push
pop
test
frstpm(287
out
add
xchg
das
test
jbe
sbbl
mov
sbb
int3
imul
inc
sbb
jno
mov
out
adc
pop
dec
lock
lea
fcoms
out
sahf
mov
mov
insl
subl
test
fs
pop
push
pop
jns
sub
pop
rcll
sbb
mov
push
scas
sub
fimull
lcall
pop
push
or
and
add
cmp
inc
shr
xor
inc
sub
push
push
or
add
and
pop
stos
mov
mov
sub
in
mov
xchg
das
test
add
or
push
adc
fucomp
and
sbb
jbe
jnp
pop
or
dec
test
ds
rcrl
mov
in
lcall
inc
enter
add
les
add
adc
ret
inc
lods
push
dec
push
clc
lahf
imul
inc
cmp
mov
gs
popa
jnp
fisubl
cs
push
pop
add
cmp
pop
mov
mov
pop
shll
cmp
subl
sub
popa
ljmp
cmc
arpl
and
mov
cs
shlb
jbe
insl
cwtl
push
cmp
cmpl
pop
pop
add
pop
fsubrs
shl
push
fcomp
adc
aaa
ds
mov
call
or
push
fnstsw
jge
ss
mov
mov
add
imul
jl
testb
or
fidivrs
sahf
es
push
insb
iret
scas
pop
pusha
fs
or
push
fdiv
inc
aam
pop
mov
test
push
dec
xchg
jmp
push
rolb
jne
jge
mov
stc
pop
push
fisubl
cmp
adc
ret
xorb
iret
sub
mov
mov
push
xchg
fwait
mulb
fistpl
xlat
gs
push
jo
jg
xor
insl
xchg
into
mov
es
pop
js
mov
adc
repnz
mov
sbb
pop
aad
adc
shrb
stos
sub
inc
mov
shlb
sbb
xor
scas
mov
push
fnsetpm(287
and
outsb
sbb
xchg
cmpsl
pushl
sub
inc
arpl
in
mov
sub
insl
mov
pop
xchg
adc
sbb
pop
mov
dec
cs
mov
cmp
push
les
add
fcmovnu
sbb
jg
cmp
test
bound
cmpsl
xchg
imul
jp
dec
sub
inc
fstl
or
orb
mov
loopne
mov
mov
loopne
mov
clc
dec
out
push
cmp
fsubrs
fwait
dec
sub
mov
push
mov
push
cmc
fldt
sub
pop
xchg
lea
push
test
jmp
mov
test
push
mov
cmpsl
jno
loopne
jmp
fistl
xor
cmpsl
push
fisubrl
call
push
insb
test
enterw
lret
aam
xor
mov
sbb
inc
xlat
dec
mov
mov
mov
mov
iret
in
sub
pop
add
popf
mov
or
shrl
into
sbb
fdivs
lea
and
fdivs
mov
inc
in
mov
sub
insl
in
fstpl
jmp
insl
dec
pop
mov
dec
sub
std
or
mov
pop
sub
int
pop
push
inc
fistl
ljmp
mov
inc
pop
adc
fistpl
out
roll
and
sarb
fwait
push
fdivs
adc
repnz
mov
popa
lods
push
xor
int3
bound
push
dec
test
mov
adcl
inc
inc
ss
adc
popa
sub
sub
into
mov
notb
adc
jg
test
mov
xchg
cwtl
test
pop
movsl
das
dec
fbstp
inc
cld
pop
inc
mov
jo
pushf
arpl
pop
les
orb
lret
jp
fcmovnb
movb
call
mov
or
cmp
and
jne,pn
mov
mov
mov
or
pop
lcall
pusha
push
pushf
lea
dec
sub
inc
sub
les
insb
pop
and
mov
jne
insb
mov
adc
leave
insl
pop
fldt
sub
cmp
sub
divl
clc
fwait
cmp
les
cs
je
cltd
push
pusha
imul
lret
adc
cmp
sarl
jmp
mov
sbb
imul
into
inc
xchg
push
or
stos
jbe
mov
sub
push
fists
ds
cmp
lods
and
push
inc
sbb
inc
popa
inc
add
sarl
ret
sbb
jmp
aad
add
xchg
mov
xor
xchg
lods
int
mov
push
mov
mov
shlb
repnz
jg
inc
ss
insb
aad
jae
dec
ja
lods
sub
push
dec
leave
add
cmp
insw
fcmovnb
jmp
hlt
jecxz
andb
hlt
sbb
jle
orl
sub
gs
int
insl
add
movsl
fildl
mov
inc
adc
scas
xchg
outsb
xchg
shlb
pop
xor
fsubrl
push
jle
dec
out
aaa
cs
push
add
out
flds
pop
lods
cld
add
pop
mov
lahf
outsb
lea
xor
jnp
test
rcrb
out
mov
sub
adc
adc
enter
mov
cs
mov
fs
into
sub
mov
sub
add
mov
jne
xor
and
pop
jne
xor
dec
divl
mov
add
movsl
mov
lods
lods
in
pop
push
mov
pop
jl
sbb
sub
sahf
and
ret
xor
jecxz
and
mov
pop
incb
lds
and
xchg
pop
adc
fldl
jb
loopne
lcall
pop
shr
fwait
jb
dec
xchg
aaa
mov
and
in
sub
sub
push
xor
sbb
inc
ds
mov
outsb
pop
jo
mov
dec
fstpt
add
lret
inc
inc
aam
mov
jl
mov
repnz
jge
pop
pop
mov
out
sahf
mov
mov
cli
fwait
lea
push
cli
das
enter
mov
scas
out
xchg
inc
in
add
jmp
mov
subl
push
mov
insl
insl
push
in
adc
sub
pop
mov
mov
xchg
push
mov
adc
fwait
or
insl
or
movsb
shl
aam
mov
jmp
aam
inc
aaa
push
std
or
cmp
dec
lea
pop
mov
sub
enter
nop
aam
shll
testb
imul
sub
imul
aad
lods
pop
in
mov
cmp
xor
add
add
and
sbb
ss
mov
mov
pop
sbb
test
ds
leave
mov
lret
mov
xchg
lods
insl
mov
fisttpl
jnp
js
adc
adc
xlat
dec
test
movsl
mov
imul
insb
andb
dec
sbb
movb
pushl
shrb
arpl
ljmp
pop
shl
rcll
push
xchg
icebp
inc
pop
mov
sub
test
xchg
std
mov
fsubrs
iret
sub
lcall
sub
sub
adc
lret
cmp
aam
or
sub
scas
xor
pop
fisubrl
stc
jg
or
xor
mov
jne
fstpt
shrl
xorl
push
jno
frstor
aad
mov
fmuls
fldcw
push
mov
mov
xchg
ljmp
adc
addr16
stos
push
pusha
mov
aaa
push
inc
adc
scas
adc
or
dec
mov
and
pop
mov
fisubrl
push
pop
cltd
andb
insl
pop
cmp
cmp
les
adc
scas
rcll
lock
jo
mov
pushf
movsb
jbe
fmull
mov
inc
or
cmp
mov
rol
lea
jle
movsb
push
sbb
mov
imul
push
adc
nop
cld
ret
ret
testb
xchg
add
fisubrl
stos
cmp
xchg
cmp
pop
inc
pmulhuw
mov
icebp
jl
test
aaa
sbb
cmp
mov
fcmovnbe
inc
fs
outsb
sbb
movsl
lods
mov
ror
int
test
aad
mov
pop
fimull
adc
adc
dec
adc
in
mov
pop
stos
lods
leave
inc
add
insl
sub
sub
push
or
push
mov
stos
xor
lret
jb
int3
pop
stos
push
cmp
pop
inc
inc
push
xor
sbbl
mov
call
fidivs
jnp
pop
rolb
xchg
or
decb
les
loope
adc
jge
ret
lds
mov
mov
jge
add
lret
push
mov
and
fnsave
sub
call
mov
or
or
outsb
sbb
or
iret
add
xor
xchg
lcall
stc
aas
jecxz
xchg
test
aaa
or
xor
pop
push
sub
out
or
insb
sub
stc
jge
sahf
cmp
insl
das
pop
jbe
leave
xchg
fisttps
fstps
into
roll
mov
or
mov
add
aas
pop
stos
test
sahf
mov
test
pop
add
cwtl
insb
cs
lods
and
sub
push
sbb
jp
sbb
ret
pop
nop
pushf
sub
lcall
cmp
jno
ficoml
shl
pop
dec
adc
push
dec
ds
inc
dec
push
fcoml
mov
cmc
cmpsb
jno
outsb
frstor
add
sbb
fisttpll
adcl
rorl
adc
ficoml
sbbl
xchg
xchg
inc
jne
inc
fcoml
repnz
xchg
jbe
push
aas
fnstsw
push
je
fcomps
popf
ror
jg
mov
aam
and
out
mov
mov
rep
orb
int
mov
pop
repnz
jge
pop
jb
add
inc
out
pop
jno
insb
lods
cmovle
mov
push
sub
mov
xor
and
into
inc
mov
mov
outsb
sub
cmpsl
or
int3
mov
fwait
pusha
or
cld
test
sbb
push
add
sub
jnp
aam
mov
inc
out
lahf
sub
fistl
sub
xlat
sub
je
mov
mov
mov
out
fisubl
fadds
cmp
mov
insb
enter
and
push
push
aad
fst
jge
xor
push
into
and
or
xchg
push
mov
adc
lods
fsubrs
popf
cmp
lret
push
mov
mov
pop
mov
pop
mov
jmp
jmp
fstl
sahf
sub
mov
lds
imul
lds
push
orb
pop
push
mov
popa
repnz
fildl
notb
cwtl
fwait
adc
sub
jb
or
imul
add
cmpsb
add
fdivl
into
f2xm1
cld
sub
add
imul
imul
imul
aad
pop
lret
test
cli
add
cmp
push
xor
jo
loopne
mov
or
push
xchg
xor
inc
mov
outsb
adc
call
stos
push
dec
adc
imulb
call
sahf
out
xor
icebp
inc
push
add
push
xor
fmull
out
inc
sbb
pop
jbe
mov
je
mov
jmp
xchg
dec
mov
clc
mov
add
fadds
or
insl
push
rol
cmc
jb
les
mov
pop
or
xor
fcmovnb
inc
sbbl
mov
out
pop
out
sbb
dec
push
cli
and
xchg
or
mov
cmp
cmp
jge
or
iret
xchg
imulb
add
repnz
jae
fcomps
inc
cmp
sahf
dec
inc
xchg
cmp
and
pop
xlat
adc
insl
popa
mov
sbb
shrl
ja
cmpsl
push
or
push
jae
sub
aam
shl
push
xchg
sbb
sub
lds
fisttpl
mov
mov
lea
or
jns
add
pop
adc
mov
lret
sub
mov
jle
sti
enter
movsl
jbe
cmp
or
and
sbb
rcl
dec
pop
js
sbbb
mov
inc
jl
cmp
out
enter
jmp
add
xchg
add
mov
fcmovne
push
pop
lods
push
push
imul
gs
ret
insl
subl
and
mov
adc
mov
inc
pop
loop
xorl
pop
lds
mov
pushf
push
test
or
std
das
mov
rcr
mov
lods
je
daa
sti
out
je
negl
and
jp
dec
pop
lods
pusha
xchg
mov
insl
imul
scas
mov
fldl
fildl
ret
push
mov
movsb
adc
int3
or
push
mov
dec
adc
and
fdivs
fisubrl
mov
mov
push
popl
out
dec
incb
mov
mov
push
push
jp
adcl
inc
sbbl
in
repz
fsubs
out
dec
xchg
xchg
mov
addb
pop
lods
dec
sbb
or
inc
imul
inc
jg
cmpsb
cmc
pop
movsb
sub
pusha
xor
ds
mov
pusha
test
push
test
add
out
sbb
mov
ret
xchg
lods
mov
push
das
xchg
pop
mov
loop
cli
mov
push
mov
pop
xchg
cmp
roll
sbb
test
dec
bound
in
es
enter
cmp
mov
pop
call
cmp
or
pop
ficompl
mov
int3
mov
sub
mov
pop
inc
int
dec
sbb
cli
clc
and
mov
fcomps
adc
shrb
out
adc
jne
pop
lahf
roll
fdivr
pusha
add
out
sub
pop
jp
outsb
push
cmp
outsb
insb
lret
cli
pop
xchg
and
push
outsl
insb
mov
rol
mov
add
or
pop
mov
fcoml
or
outsl
lods
mov
xchg
test
mov
pop
adc
shrl
mov
movb
xchg
push
movsb
or
ja
xchg
iret
inc
mov
call
fcmovnbe
mov
fsub
pop
popf
cmpsb
or
jmp
adc
mov
jbe
lods
or
data16
movsb
pop
dec
in
pop
int3
out
sbb
test
dec
or
xchg
dec
les
out
jmp
add
pop
les
lea
mov
inc
aam
loopne
shl
clc
add
jo
mov
sub
xchg
push
cmc
and
dec
cmpsl
lods
push
mov
and
cmp
sbb
push
aas
sbb
pop
sbb
jno
aaa
inc
jle
cmp
insl
pop
mov
mov
enter
jo
mov
mov
loope
rclb
test
mov
mov
loopne
movsl
and
call
into
adcl
pop
sub
in
xchg
dec
inc
mov
xor
mov
ss
lret
test
out
scas
ret
test
push
loop
mov
adc
add
dec
dec
inc
sar
sub
jbe
lds
enter
pusha
inc
lds
push
fistpll
and
paddsw
test
cs
push
fsubrs
cmp
pop
xor
dec
or
fildl
jbe
in
loope
inc
pop
push
test
insl
pop
sahf
jg
or
mov
dec
jnp
adc
cwtl
mov
mov
mov
insl
ds
jne
sub
ret
out
push
push
xorb
aam
xchg
pusha
es
fcmovu
mov
sbb
pop
dec
add
pop
push
stc
aam
pop
pushf
xchg
sub
aaa
mov
sub
je
sub
jg
push
cwtl
or
mov
lret
inc
in
pop
dec
lods
out
mov
mov
inc
in
aam
mov
mov
pop
cmp
inc
fdivrl
mov
jne
mov
lret
loope
addb
fwait
or
mov
and
mov
fistl
loopne
dec
and
jns
lea
adc
add
gs
dec
jl
repnz
ret
dec
jge
mov
fidivrl
call
enter
mov
arpl
mov
filds
inc
and
and
sub
cs
scas
stc
loop
insl
imul
sub
daa
or
cmpsb
mov
xorb
xchg
xchg
push
popa
mov
sti
sub
xchg
mov
fsubrp
pop
mov
test
addr16
pop
outsb
jbe
mov
and
or
fisttpl
jecxz
xor
mov
lods
movsb
inc
pushf
sbb
and
fcmovnu
jecxz
pop
test
mov
cld
std
and
mov
out
aaa
xchg
pop
mov
jmp
pop
cmp
push
out
cmp
bound
xor
mov
inc
test
and
inc
mov
es
into
pop
jbe
mov
xor
jecxz
fsubrs
add
and
fimuls
push
pop
adc
rcr
and
popa
mov
adc
cmp
jbe
jo
orl
pop
or
cmp
fstpt
and
or
repz
in
addb
inc
inc
xchg
lods
or
or
push
or
xchg
mov
xor
mov
xor
test
test
movsb
mov
ljmp
mov
pop
mov
cmpsl
data16
aaa
aas
cmpsl
sub
mov
test
and
cmpb
fnsave
pop
ljmp
ss
add
xchg
or
push
pop
mov
push
inc
lds
in
xchg
aad
insl
inc
jne
jge
lcall
pop
mov
cmp
add
mov
dec
lods
std
loop
and
xor
cmp
aaa
mov
push
pop
fisubs
lret
xor
aad
test
into
pop
add
xor
mov
sub
or
sub
jbe
xchg
inc
in
mov
dec
nop
or
loop
sarb
xchg
les
out
cmpl
adc
add
push
test
add
mov
mov
xchg
xchg
fcmovnbe
ficoms
mov
push
mov
jbe
repz
sbb
orb
sub
cmp
mov
push
fisttps
cmpsl
add
cs
test
cwtl
mov
mov
mov
and
aam
sbb
jnp
sub
add
and
aas
fsubrs
dec
pop
in
dec
insl
or
mov
add
in
mov
jne
lahf
je
leave
gs
rcrb
fcoml
mov
jno
hlt
dec
test
aad
lods
in
movsl
ret
xor
add
inc
inc
inc
cwtl
mov
add
push
and
hlt
rcrl
cmp
adc
test
subl
pop
pusha
fs
mov
pop
jecxz
sbb
push
fidivl
lds
ss
mov
and
dec
dec
mov
jo
sbb
push
mov
sub
test
xor
out
or
add
out
add
mov
shlb
xlat
shrb
lods
insl
add
sbb
or
xor
adc
sub
mov
and
mov
mov
les
jge
test
insb
aaa
fiaddl
movsb
loop
test
mov
repnz
push
mov
mov
pop
or
dec
in
test
push
push
cmpsb
outsl
fldt
movsb
pop
xchg
pop
shll
add
sub
and
push
push
sbb
loopne
and
insl
pop
pop
test
sbb
pop
sub
mov
jg
cmpsl
push
xor
xchg
idiv
sub
lea
lock
sub
mov
mov
pop
jmp
insl
shl
push
or
mov
das
ret
test
mov
insl
mov
mov
xor
mov
push
adc
mov
lret
lock
and
mov
pop
cwtl
pusha
xchg
inc
push
mov
inc
shrl
jge
cli
jmp
fiaddl
mov
jle
addl
les
push
mov
fdivs
dec
push
aam
inc
int
lods
insl
mov
mov
je
ficoms
mov
xchg
lea
pop
push
mov
xor
mov
push
lcall
pop
sbb
push
adc
aam
lret
sub
insl
sub
mov
mov
fs
push
mov
lcall
lods
jle
dec
xchg
push
mov
mov
scas
adc
mov
adc
xor
mov
imul
movsl
lods
mov
outsl
sub
aas
cwtl
adc
enter
mov
aad
inc
cmp
nop
outsb
mov
cmp
sbb
add
add
push
and
xchg
mov
hlt
pop
push
sbb
mov
jno
loopne
jae
push
and
mov
shlb
mov
xor
inc
xchg
rolb
xor
pop
fadd
mov
stos
lds
jge
ja
push
loopne
mov
adc
pop
mov
inc
or
fidivl
jo
lahf
hlt
je
les
and
pop
inc
mov
pop
sub
adc
out
hlt
ficoml
iret
lods
mov
mov
jne
pop
mov
mov
mov
mov
lods
push
hlt
cmpsl
aas
pop
push
fsubrl
daa
shrb
pop
mov
sbb
popa
inc
adc
jo
add
sbb
jae
inc
lret
mov
add
pop
inc
xlat
pop
mov
mov
push
push
xchg
mov
movsl
sbb
into
adc
mov
fs
sbb
cmpb
roll
out
les
pushf
dec
rolb
ficompl
pop
notb
popa
inc
rolb
shrb
xchg
cmp
mov
push
sti
or
sub
or
dec
insb
subb
js
pop
sub
insb
pushf
aad
xor
inc
sbb
insb
data16
pop
insl
insl
or
xchg
fdivl
add
pop
xchg
adc
outsb
push
mov
clc
inc
daa
or
lods
xchg
gs
negl
push
pop
pop
out
push
mov
std
push
adc
mov
in
jl
lret
xor
jbe
insb
aaa
add
pop
cwtl
rorb
mov
popa
pop
fcomp
pop
dec
enter
adc
sub
outsb
fwait
cmc
test
bound
inc
jo
push
mov
jb
int
rol
and
cmpsl
jmp
decb
ds
sahf
xlat
cmp
push
aad
xchg
xor
sti
dec
daa
lods
add
push
sbb
ret
dec
mov
test
jae
pop
daa
mov
cs
and
ss
mov
inc
int3
dec
aas
cmpsl
inc
mov
push
les
adc
mov
xchg
lret
mov
cmpb
rcll
shr
mov
insl
add
or
xchg
push
pop
cmpsl
push
mov
dec
mov
adc
xlat
sub
es
mov
inc
shll
sbb
mov
add
out
out
lea
orl
jmp
test
repnz
inc
add
jne
xor
xchg
cmp
add
dec
cmpsl
xor
inc
sbb
sub
mov
sub
out
jecxz
jnp
cs
fcompl
jle
sub
gs
andb
pop
add
ficoml
lret
pop
sub
jnp
mov
insl
mov
lds
shlb
or
sub
hlt
ds
cmp
adc
and
xchg
es
fdivrl
sub
rcll
out
xchg
bound
add
cmpsl
fmull
push
mov
pop
fchs
xor
xchg
mov
adc
mov
mov
lea
in
dec
in
or
push
sbb
and
or
sub
cmpsb
movl
stos
cli
jb
mov
adc
or
ja
add
mov
rcrl
test
push
dec
push
jl
mov
pop
mov
clc
jg
and
mov
ficoml
je
jbe
mov
orl
test
mov
cmp
adc
fisubrl
lods
or
jbe
fcoms
adc
and
outsb
xchg
push
adc
push
xchg
movsb
cmp
pop
xchg
rol
push
push
mov
sub
pop
or
mov
and
cmp
mov
cmp
push
mov
fucomp
mov
cmp
push
xchg
and
imul
sub
sub
add
sub
bound
add
jle
inc
jo
call
sbb
test
sbb
pop
xor
push
shl
shlb
sbb
add
mov
or
push
pop
in
fistpl
cmp
cmp
pop
hlt
add
sbb
push
sarb
in
jno
fcmovnu
lds
movsb
out
push
push
sub
outsl
mov
adc
jg
cwtl
xchg
jp
insl
fcmovnb
push
clc
pop
addr16
out
mov
push
mov
clc
add
mov
and
or
pop
dec
adc
jbe
and
or
fidivs
in
mov
ss
jne
push
adc
adc
imul
daa
push
lock
mov
cmp
jo
lods
sbb
push
jno
stos
ja
lret
mov
enter
hlt
add
mov
push
dec
lea
dec
or
lock
push
cmp
aad
fwait
sub
sub
add
xchg
push
insb
push
fimull
add
sti
sbbb
xorb
outsb
out
sbb
ffree
add
cmp
mov
pop
push
fsubrs
mov
mov
sub
je
pop
or
das
rcl
mov
imul
pusha
xor
in
repnz
outsb
or
push
sti
xor
or
sahf
rcll
jno
push
push
sub
rclb
pop
add
inc
bound
adc
sbb
push
fdivrs
cmpsb
cmp
pop
or
mov
ret
pop
jle
ss
jbe
mov
dec
cli
stos
jecxz
inc
dec
insb
fisttpl
jno
cwtl
jmp
stc
in
outsb
or
jge
shrb
mov
mov
ja
out
dec
pop
in
pop
add
or
xor
insb
mov
mov
jbe
pop
pusha
and
jge
adc
mov
adc
movsb
fidivl
push
sbb
xchg
and
shll
pop
add
cmp
and
insb
or
adc
mov
push
mov
and
test
rorb
jle
loop
stos
or
fwait
rcrb
fdivrs
or
xchg
sub
imul
cmpb
aam
xchg
ret
xor
aam
aas
shrl
sti
mov
adc
stos
sar
pop
decb
clc
aad
inc
lods
dec
adc
sti
pop
fdivs
mov
pop
inc
cmp
sbbl
leave
cs
push
mov
mov
shlb
inc
cs
sub
jbe
pop
leave
xchg
cltd
imul
jo
mov
jge
dec
pop
mov
icebp
push
ss
jl
lcall
pop
push
cltd
jg
lock
call
out
popf
add
pop
pop
inc
lods
lods
adc
test
mov
inc
stc
dec
ljmp
add
fisttpll
mov
das
jno
in
mov
add
sahf
mov
xchg
insb
mov
pop
fidivl
insb
stc
xor
push
pop
fcmovnb
test
aaa
jae
cmp
jne
insl
pop
lcall
mov
mov
inc
cmp
in
lea
ds
xor
push
xor
jecxz
pop
push
jno
and
dec
pop
sbb
pop
ljmp
push
inc
decb
arpl
imulb
jmp
sub
mov
xor
insl
popa
mov
sbb
insl
inc
aad
jae
mov
mov
xorl
lea
es
movsb
xor
xchg
mov
test
aam
pop
pop
xor
fdivs
push
pop
lret
clc
pop
or
fdivl
fisubrl
bound
jnp
add
add
fwait
iret
pop
add
je
lods
insl
sbb
push
sub
jo
fcoml
enter
push
sub
inc
mov
orb
fcomps
leave
xor
in
sub
add
mov
add
mov
sbb
shll
add
mov
loop
sub
push
fmuls
jmp
lcall
pop
fbstp
adc
mov
scas
jp
fstpl
loopne
jnp
push
bound
jo
loop
dec
push
jae
inc
aad
xor
pop
sub
imul
aad
test
pop
or
inc
inc
lahf
add
lret
ret
mov
loop
mov
push
fiaddl
cmp
cs
push
xchg
es
sub
rclb
mov
sub
or
movsl
push
inc
mov
push
popf
add
sub
xor
mov
sbb
inc
popa
and
loop
fisttpl
cmpsl
mov
int
pop
push
xor
movsl
sbb
push
in
icebp
cs
pop
or
adc
add
divl
insb
je
dec
dec
jp
stos
pop
xchg
aam
mov
ss
pop
mov
das
mov
push
fcoms
pop
add
jge
mov
pop
insl
test
mov
inc
test
and
rcll
loop
push
leave
mov
lods
insl
mov
cmc
jbe
push
push
mov
and
inc
sbb
sarb
mov
mov
fidivrs
xor
pop
xor
inc
cmp
jg
xchg
add
sub
sub
test
rorb
and
imul
mov
movsb
add
jno
pop
ret
jo
mov
push
sbb
sbb
xchg
cwtl
lahf
mov
mov
xorb
add
pop
mov
sbb
xchg
jge
dec
mov
shrb
outsb
imul
jg
push
filds
add
ror
lds
add
inc
cmovns
fildl
iret
imul
aaa
mov
ret
pop
and
mov
outsb
insb
dec
push
pop
jne
push
xor
push
inc
pop
cmp
scas
fstpl
mov
push
add
xor
sbb
mov
js
enter
cmpl
jle
mov
xor
je
sbbb
clc
cwtl
pop
xchg
push
lods
mov
mov
icebp
inc
dec
scas
mov
fsubrl
cmpb
popa
imul
push
das
xchg
sbb
lds
inc
data16
cmp
xchg
leave
fs
add
inc
mov
xchg
push
push
test
fidivl
fidivl
out
cli
shrb
sub
or
cld
add
mov
arpl
push
rcll
xchg
fwait
mov
mov
fstpl
pop
in
inc
mov
scas
aad
shrb
insl
push
mov
cmpb
sti
imul
add
ljmp
cli
insl
loop
aam
fistpl
daa
pusha
jge
fninit
lret
pop
sbb
pop
inc
jne
rcrl
pop
js
insb
mov
mov
call
fisubrl
push
and
fsubr
aam
imul
dec
sarl
mov
inc
loopne
icebp
mov
lret
cltd
sbb
subb
and
push
sbb
inc
decl
out
aaa
in
sbb
jp
insl
sbb
jno
pop
push
scas
aad
jo
lock
jmp
mov
mov
inc
inc
shrb
inc
push
or
jecxz
sbb
fcmovnb
jno
ret
rclb
fisttpl
pop
xor
pop
stc
lea
sbb
push
mov
mov
call
lods
inc
adc
mov
lods
or
rorl
cs
sub
loop
scas
mov
pop
bound
add
fmull
repnz
imul
push
inc
movsb
fidivl
pusha
ja
sub
dec
adc
mov
sub
insl
sbb
repnz
add
test
lock
jecxz
add
fdivrs
push
jecxz
scas
pop
push
aam
mov
xor
adcl
jp
mov
xchg
std
xor
jae,pn
cmpsb
xchg
inc
xor
pop
add
cs
sub
xchg
cmpsl
and
clc
outsl
xchg
adc
cmp
push
pop
jg
inc
scas
inc
stos
insl
add
rcrl
fwait
xor
cmp
sbb
pop
test
jecxz
decb
add
mov
pop
es
imul
dec
add
lds
loopne
push
xchg
mov
sbb
mov
mov
and
mov
mov
test
dec
mov
sbb
les
in
mov
cld
push
inc
mov
mov
pop
addb
push
pop
jp
popa
fsubl
out
adc
fldenv
cs
pusha
aas
xor
mov
or
xor
adc
inc
das
push
iret
test
inc
lods
insb
lahf
xorb
mov
cmp
push
inc
lret
fists
popa
insl
call
fistl
stos
outsb
clc
xlat
dec
imul
add
sbb
stos
movsb
add
insb
mov
addb
and
cs
insl
mov
movsb
sub
fistl
sbb
push
lret
jbe
ret
call
repnz
sub
or
int
int
sub
adc
lods
or
bound
jmp
push
in
pop
xor
sbb
push
lcall
fwait
mov
inc
push
out
lret
ljmp
jne
cs
mov
cli
push
and
or
repnz
push
or
mov
pop
bound
xlat
icebp
dec
or
adc
or
sarb
pop
sub
push
xchg
iret
inc
cwtl
out
mov
xor
mov
ljmp
or
out
xchg
mov
mov
sti
jbe
adc
lcall
scas
enter
jecxz
shrb
cmp
pop
test
lods
sub
push
push
cmc
in
pop
lods
or
mov
push
sbb
push
jg
push
rolb
mov
popf
add
xchg
push
pop
sub
test
ret
sbb
lock
mov
mov
sti
mov
adc
outsb
lea
enter
cmp
dec
gs
cmpsl
mov
bound
arpl
mov
push
fcmovnb
inc
test
cld
push
cmp
sub
push
notb
sbb
dec
pop
inc
push
cs
push
es
aam
mov
inc
sbb
inc
jns
inc
fdivl
xorl
les
ret
and
or
push
addps
shl
insl
adc
cs
mov
fmull
sbb
insl
fwait
inc
jnp
mov
cs
jmp
inc
aad
fidivl
idivb
dec
adc
test
sbb
xor
push
lods
or
push
pop
fildl
and
or
mov
jns
mov
lahf
cmc
adc
jmp
fdivrs
data16
pop
pop
stos
lods
and
add
add
outsl
aam
mov
addb
push
fisubs
mov
sbb
sub
push
adc
mov
lcall
sbb
stos
mov
push
jle
sbb
jp
xor
lods
cmpsl
int3
sahf
mov
add
repnz
cltd
das
or
mov
push
cmp
xchg
and
and
push
lods
xchg
pop
mov
or
sub
stc
xchg
outsb
dec
shlb
sbb
int3
mov
in
repnz
or
pop
fidivrl
inc
sub
subb
insl
mov
movsb
rcr
movsl
test
mov
push
pop
ret
add
mov
inc
sub
push
leave
mov
add
xor
mov
xor
push
xchg
call
enter
jo
adc
movsb
mov
insl
inc
aad
dec
mul
push
icebp
push
mov
out
test
fcompl
inc
mov
push
mov
adc
fistl
fimull
sub
cmp
outsb
dec
in
adc
push
inc
push
outsl
dec
loop
push
jb
outsl
pop
push
sub
add
movsb
or
mov
push
mov
add
sarb
mov
insl
fcompl
mov
sbb
jns
push
xlat
pop
mov
pop
push
pop
cmpsl
cs
insb
xchg
mov
pop
push
ret
push
jb
or
outsl
test
or
pop
pop
mov
fdivrs
insl
sub
inc
stos
adc
pop
mov
insl
fstpt
fstpl
push
test
das
push
pop
ret
push
aam
push
call
cs
int
mov
stc
adc
sbb
ljmp
shll
jmp
sub
dec
mov
and
cltd
sub
sbb
push
insl
adc
jl
xor
les
inc
add
pusha
xorl
cmpsb
inc
insl
mov
loope
out
jecxz
out
fildl
pop
jne
pop
fs
sbb
inc
sbb
cli
bound
jle
lods
fcmovnb
mov
divl
xchg
out
sub
mov
dec
iret
cmc
shll
mov
adc
sub
mov
aam
jno
dec
int3
test
ret
mov
aad
ljmp
mov
je
js
or
pop
mov
push
sbb
push
cmp
sarb
jo
jns
add
outsb
fistl
popf
mov
fs
mov
dec
add
dec
outsb
aad
push
add
lea
fisubl
enter
sub
add
in
jge
mov
sbb
out
cmp
pop
subb
in
cmp
lods
insl
sub
mov
sti
jns
add
ss
adc
mov
es
push
cltd
out
ret
xchg
mov
mov
shlb
push
into
and
movq
cltd
or
fwait
push
aad
cmpsb
roll
cwtl
xor
roll
mov
jno
push
lcall
add
rorl
pop
add
jg
mov
mov
nop
mov
lods
cli
scas
loop
stos
cmp
insl
arpl
mov
je
add
pop
mov
push
mov
pop
int
loopne
gs
jmp
lods
and
mov
stos
sub
push
mov
cmp
mov
sarb
inc
pop
adc
jg
ret
sahf
out
lea
mov
insl
add
mov
call
sub
in
add
lock
das
fwait
or
pop
mov
inc
jo
mov
inc
sub
loopne
pop
mov
sbb
test
or
xchg
cwtl
adc
xchg
fstpt
push
insl
xchg
lcall
cli
push
imul
js
test
jmp
inc
dec
mov
stos
and
jo
mov
addb
test
cmp
pop
mov
push
insl
roll
out
mov
push
lcall
dec
cmp
xorl
mov
inc
pop
and
lret
insb
fcmovnbe
sahf
out
mov
fldt
xor
ret
pop
add
lods
popa
push
jns
repnz
das
insl
or
fwait
dec
fmuls
push
out
add
or
in
adc
mov
adc
jae
sbb
cld
repnz
in
inc
hlt
mov
push
and
and
lea
push
add
test
push
frstor
mov
mov
mov
mov
int
ret
loope
pop
das
aam
jo
sbbl
mov
push
jb
pop
cmpsl
mov
ret
inc
sbb
iret
add
jle
lods
pop
add
lret
push
pop
push
pop
out
pop
or
dec
imul
adc
sti
fadds
popa
sub
and
cmp
sbb
add
mov
push
xchg
pusha
xchg
dec
les
xor
push
mov
xorb
mov
aam
inc
jg
scas
adc
lods
mov
fwait
add
outsb
sbb
or
add
sub
mov
pop
sub
push
jne
test
lret
jle
pop
mov
cmp
bound
and
pop
ljmp
sbbb
subl
adc
insb
xchg
add
pop
scas
or
mov
aam
jl
push
jbe
mov
and
adc
or
mov
das
jns
mov
mov
push
out
jnp
call
push
jmp
mov
push
jmp
push
push
add
sub
fildl
xor
mov
es
push
sbb
and
mov
stos
dec
add
dec
jb
call
cmp
cwtl
xor
sbb
cs
aam
icebp
mov
jo
xor
cmpsb
ficoml
ret
mov
sub
push
movsl
cld
imul
sti
add
dec
inc
fldt
jp,pn
les
bound
push
push
test
test
test
lock
bound
ret
jl
jge
sbb
movsb
sub
mov
push
rorl
test
ss
cmpsl
ret
xchg
std
rorb
push
fimull
lret
xchg
addr16
fnsave
sbb
xchg
out
xchg
add
sti
test
insb
and
inc
mov
jmp
jl
add
adc
mov
fildl
jno
inc
inc
or
je
insl
mov
cmp
adc
mov
insb
inc
mov
aam
xchg
out
mov
inc
pop
sbbb
adc
add
or
das
cmp
cmp
fstpt
sbbb
sub
mov
cwtl
mov
mov
or
adc
fsubrl
enter
movsl
sahf
fwait
iret
adc
inc
mov
out
pusha
insl
stos
fmuls
add
ror
sub
inc
add
pop
inc
mov
pop
or
insl
fstl
sbb
pop
mov
cmp
stos
pop
xchg
sbb
cmpsb
mov
divb
pop
imull
popa
adc
out
xor
push
sub
outsb
pop
sbb
aas
or
ja
lea
jne
fwait
test
mov
jbe
je
les
xor
bound
jl
lea
mov
jb
cmc
mov
inc
pop
ljmp
pop
jmp
add
push
lods
lret
in
andb
push
mov
mov
or
pop
fsubrs
push
mov
insl
cmc
or
mov
outsb
xchg
imul
xor
stos
pop
mov
aaa
pop
pop
inc
insl
arpl
repz
push
sbb
not
fiadds
or
stos
mov
jo
xchg
dec
loopne
loopne
mov
mov
ss
sub
sbb
xchg
push
ss
inc
add
pushf
in
leave
jae
sbb
add
shrb
push
repz
sahf
mov
push
push
mov
mov
and
inc
lahf
jbe
mov
shr
test
test
movsb
sub
bound
rcl
pusha
jmp
push
mov
in
out
ja
inc
mov
outsb
pop
push
aam
dec
stc
jo
jmp
aaa
cmp
pop
mov
fsubrs
jne
out
pop
sub
fucomp
mov
push
or
mov
hlt
mov
sarb
loop
outsb
insl
cmp
mov
or
das
dec
mov
shlb
sbb
mov
xor
mov
sbb
pusha
mov
bound
jae
lods
int
sub
push
mov
ljmp
jecxz
cmpsl
lea
sub
in
mov
mov
cmp
cmc
pop
sub
stos
fnsave
xchg
outsl
dec
rcll
insb
ss
call
sahf
fadds
out
inc
cmpb
jbe
maxps
jbe
adc
mov
out
fs
add
rolb
popa
fistpl
adc
mov
enter
pusha
add
pop
adc
sbb
jge
fcoms
dec
mov
add
testl
cmp
lahf
xchg
out
je
add
add
mov
sub
stc
jbe
pushf
sbb
mull
ficoms
pop
add
or
xchg
xor
rcl
sub
and
int3
pop
fidivl
loop
fnstcw
cmc
subb
lods
dec
mov
mov
mov
adc
in
outsl
lret
fcmovnu
push
fidivl
cmp
sbb
icebp
jno
xchg
mov
movsb
arpl
in
mov
and
les
or
mov
mov
repnz
add
mov
adc
scas
sbb
insl
and
mov
insb
mov
rol
xor
data16
add
je
add
fnsave
adc
mov
dec
test
ss
mov
fbld
insl
push
sbb
xor
mov
call
lds
sbb
add
icebp
sbb
movsb
out
push
xor
fnstsw
push
sub
xchg
test
fistpl
cmp
sbb
push
fimull
cmpb
dec
mov
mov
gs
mov
inc
repz
insb
fldt
cmc
mov
cmp
mov
mov
mov
push
fiaddl
sbb
pop
sub
adc
and
jo
mov
roll
jl
js
out
in
mov
std
mov
pop
dec
pop
setns
or
push
ss
stc
pop
pusha
xor
sub
mov
add
push
fcmovnbe
es
rclb
ljmp
jecxz
pop
jp
mov
lods
add
pop
stc
pop
mov
jp
inc
mov
pop
sarl
xor
mov
rcll
add
pop
cs
ds
xchg
sbb
jmp
mov
sub
imul
add
sub
test
jmp
cmp
fstpl
std
inc
pop
cmp
dec
aad
and
scas
in
and
ss
or
mov
je
push
mov
inc
clc
aam
into
add
push
sub
test
shrl
xchg
add
xchg
push
fs
jns
outsl
mov
lock
pop
aas
sbb
mov
push
out
or
mov
ficoml
or
rorb
pop
mov
mov
inc
insb
and
repz
inc
mov
mov
mov
je
and
add
pop
xchg
stos
out
pop
dec
or
mov
mov
add
fisubrl
pop
call
add
in
and
inc
test
push
insl
insl
push
mov
cmpsl
das
push
push
push
loopne
sub
mov
into
lcall
cmp
mov
xchg
mov
mov
pop
call
mov
mov
mov
insl
push
adc
movsl
cltd
jecxz
loopne
jmp
push
add
gs
jg
push
je
xchg
mov
sub
cmpsl
mov
or
lret
dec
mov
adc
push
shrb
movsl
movsl
xchg
jbe
jge
sahf
adc
test
xchg
mov
jbe
fistl
ss
mov
subl
or
and
lods
in
stos
mov
xor
sub
lea
iret
xor
nop
inc
jo
pop
sub
test
jecxz
outsl
push
data16
xchg
lea
pop
add
cmp
inc
add
stos
cmpsl
stc
jmp
dec
mov
mov
icebp
pop
add
mov
pop
or
dec
icebp
std
push
sub
mov
fnstcw
pop
push
and
jno
pop
sub
mov
sub
and
or
orb
add
cmc
and
mov
sbb
cmpsb
test
das
add
jecxz
dec
and
xchg
pop
sub
enter
lret
and
ss
insb
aaa
ljmp
dec
aad
inc
xor
sub
loopne
mov
mov
xchg
in
sub
lret
jne
enter
push
or
fcmovbe
jmp
sbb
pop
stos
pop
test
xor
es
addb
and
mov
mov
insl
dec
add
lods
subb
fcmovnb
shlb
sbb
add
subb
add
test
insb
sbb
push
mov
mov
mov
xchg
inc
push
aam
dec
adc
in
pop
clc
lcall
mov
adc
cmpsl
push
xchg
push
lahf
std
pop
fcomps
add
sahf
push
sbb
sbb
repnz
jbe
lret
jp
jb
subb
push
clts
gs
insl
sub
in
inc
xchg
xchg
pop
pop
subl
add
pusha
mov
mov
subb
cld
dec
mov
jbe
push
shl
or
fmul
in
out
sbb
pop
pop
or
iret
inc
pop
les
pop
cmpsl
mov
xlat
push
mov
mov
fnsave
xor
popa
sub
sti
mov
sub
mov
mov
mov
in
mov
lcall
imul
xchg
pop
xor
int
pop
into
insb
dec
push
sbb
cmp
repnz
mov
push
ret
in
push
inc
add
sbb
lea
xchg
xor
fstl
rcll
or
mov
loop
mov
add
bound
add
xor
add
bswap
fmul
das
insb
dec
shll
enter
jge
jecxz
test
pop
nop
jno
imul
push
out
pop
inc
adc
adc
inc
xor
movsl
lea
mov
add
mov
adc
pop
mull
lret
nop
pop
xchg
fimull
sti
sub
cwtl
fsubr
push
add
xlat
push
mov
mov
insb
mov
hlt
mov
lock
pop
cwtl
bound
add
outsb
or
adc
dec
jmp
fildl
mov
call
das
mov
xlat
insl
fistpl
out
sub
pop
mov
mov
push
lea
movsl
pop
lods
mov
jne
inc
inc
fsubl
xor
jnp
pop
cmpsb
add
mov
movsb
addr16
and
mov
push
jg
mov
pop
mov
fcmovnb
push
add
jo
or
imul
jle
mov
stos
sbb
jge
inc
xchg
pop
mov
outsb
fstpt
inc
shl
cs
shll
xor
pop
push
jno
jmp
mov
adc
popf
or
or
cmp
aad
ds
xchg
cmc
or
in
movb
pusha
orl
bound
pushf
sti
sbb
popa
imul
mov
push
rolb
shll
inc
xchg
icebp
sahf
fstpt
enter
cmp
pop
popl
dec
lock
in
mov
lcall
test
aaa
in
mov
and
inc
xchg
dec
mov
mov
mov
mov
mov
jecxz
sub
in
pushf
inc
arpl
lcall
in
xlat
cmp
test
orl
out
add
and
xchg
insl
xchg
mov
aas
or
jns
push
sbb
jl
or
sbb
add
add
out
push
sub
arpl
or
mov
jo
mov
or
imul
mov
jne
ret
daa
xor
pop
lods
mov
inc
sub
xchg
push
imulb
cmpb
mov
and
ret
insl
mov
cli
push
fwait
sub
into
add
fcoms
mov
xorl
dec
movsb
mov
inc
mov
pop
popa
mov
call
sbb
lods
insl
ja
jecxz
out
jnp
jp
rol
or
add
mov
add
mov
sbb
test
jle
xchg
inc
dec
or
ss
cs
adc
imul
lods
cld
jg
das
pop
aam
lcall
movl
push
mov
aas
sbbb
movsl
mov
inc
inc
mov
mov
pop
mov
test
out
sti
push
rcl
mov
sub
push
int
pop
cmpsl
cmp
and
adc
lea
add
hlt
add
or
popf
push
je
jo
lret
xchg
je
daa
lcall
xchg
xchg
outsb
cmp
mov
inc
imul
pop
push
jb
in
in
add
out
in
push
jle
loop
xlat
adcb
bound
mov
xorb
pop
mov
add
lret
pop
cmp
push
loop
cmpsl
mov
les
mov
sahf
inc
pop
pop
xor
ficompl
or
pop
cmc
pop
pushl
mov
and
leave
imul
movsl
test
jecxz
mov
insb
adc
mov
fwait
imul
stos
or
push
into
outsb
mov
stos
inc
stos
mov
lds
and
push
cwtl
push
push
fdivs
mov
call
pop
pop
fldenv
xor
sbb
jecxz
adc
ss
in
inc
bound
insb
fwait
adc
icebp
xlat
pop
je
mov
adc
pop
mov
movsb
jno
lods
sarl
xor
xchg
or
xor
push
push
jge
add
cs
sahf
xor
push
xlat
jg
push
push
adc
outsl
mov
repnz
aas
inc
lret
fcomps
mov
test
hlt
je
sub
cwtl
jns
jge
pushf
mov
ss
clc
mov
xor
sbb
mov
add
xor
pusha
jg
push
mov
push
add
push
into
push
sti
in
test
aad
dec
std
cwtl
push
insb
and
push
sbb
xchg
dec
push
jmp
push
mov
sub
test
mov
insb
fildl
pusha
adc
inc
stos
mov
add
fwait
dec
mov
sub
sub
sbb
xchg
sbb
mov
imul
ret
push
dec
orb
xor
das
in
imul
inc
xchg
lods
aas
inc
in
pop
or
stos
or
lock
ss
loopne
fisttpll
mov
add
xchg
mov
add
dec
jmp
lret
fldt
outsb
stos
cmp
sbb
mov
push
jno
insl
movl
pusha
jo
xor
cmc
pop
sub
xor
sub
dec
or
xchg
into
adc
lcall
lock
xchg
cmp
inc
popf
aam
mov
pop
aam
out
je
cltd
out
xchg
pop
adc
test
xchg
sbb
mov
sbbb
push
mov
xor
pop
inc
fldt
jo
int
or
jp,pn
mov
pop
push
es
and
insb
adc
ret
pop
ds
dec
inc
out
lock
lods
cli
stos
pusha
dec
dec
sti
shl
les
mov
fdivrl
aad
pop
insb
xchg
sub
push
cmp
cmp
mov
jae
and
fwait
insb
mov
fadds
push
inc
xlat
fs
roll
sbb
testl
jbe
pop
push
lods
lds
rorb
add
fdivrs
sub
cmp
or
cmpsl
xchg
add
movsl
fiadds
frstor
add
lcall
fcmovu
sub
stos
icebp
mov
dec
lcall
andb
jo
mov
and
inc
mov
aad
enter
add
mov
ret
sbbl
jmp
mov
and
ret
jo
add
cs
loop
mov
popa
test
and
sub
inc
pop
mov
and
add
adc
cli
mov
mov
add
out
andl
mov
xchg
pop
shlb
adcl
lret
out
and
popa
mov
insl
test
dec
add
lea
xor
fs
andb
mov
xchg
pop
pop
fidivs
jge
int3
popa
xor
fstp
ret
cmp
cmp
test
push
in
inc
adc
test
aam
jg
xor
jb
xchg
cmc
push
je
fstpt
imul
or
out
fmuls
push
xor
jg
sub
pop
mov
adc
jp
imull
jmp
and
mov
lahf
cwtl
rcrb
mov
inc
jne
cltd
push
lock
add
fdivrs
mov
je
inc
fnsave
xchg
sti
push
xor
call
sub
jbe
pusha
imul
in
mov
mov
lods
ret
insl
out
pop
dec
fcompl
xchg
mov
mov
add
sbb
push
add
add
outsb
adc
xor
cmp
mov
or
mov
fisubl
sub
or
jp
add
frstor
mov
lock
clc
andb
lahf
jns
xchg
mov
or
aad
add
push
dec
cmpsb
cmpsb
mov
mov
and
ficompl
out
jb
les
jmp
fnsave
lahf
cmp
in
ss
es
inc
cmp
cmp
sahf
imul
cld
mov
xchg
cs
icebp
frstor
shlb
xlat
mov
fwait
xor
xchg
lcall
push
jp
lods
adc
add
jl
adc
xor
fcomip
add
cs
dec
adc
dec
adc
outsb
sbb
out
fs
jbe
inc
decl
sub
add
and
xor
xchg
xchg
test
les
int
movsl
insb
insb
fildl
mov
scas
ljmp
loopne
inc
das
imul
fmull
push
push
push
imul
cs
dec
pop
inc
loopne
or
sub
fstl
lcall
and
add
ret
push
add
adc
ret
or
mov
sbbl
jecxz
mov
adc
jae
add
andl
movsl
push
add
fisubs
ss
sti
jge
pop
or
gs
mov
jno
movswl
fcomp
pop
sbb
stos
jb
cld
inc
pop
jno
inc
lcall
mov
adc
push
pop
hlt
test
cwtl
sbbb
cmpb
adc
mov
jmp
add
daa
inc
pop
aam
push
sbb
sub
pop
xchg
sbb
adc
mov
adc
mov
or
add
rclb
imul
incl
cmp
push
sbb
sbb
es
mov
sbb
jne
ja
shrb
popa
fisttpl
loope
sub
and
orb
adc
popaw
test
je
insl
dec
or
push
mov
add
xor
jbe
fisttpl
push
jns
sbb
pop
push
sub
les
test
mov
jp
dec
enter
mov
push
mov
mov
mov
mov
sub
pushf
roll
push
push
pop
mov
add
mov
adc
inc
xlat
loopne
dec
add
fcoms
adc
adc
jecxz
mov
pop
inc
mov
insl
stos
add
jmp
pop
adc
pop
sub
hlt
sbb
xchg
xchg
aas
les
sahf
lods
movb
sti
jmp
add
cwtl
cwtl
lock
adc
data16
mov
sbb
or
xor
add
adc
sub
fstl
mov
mov
mov
ljmp
repnz
repnz
stos
and
jp
add
jb
push
sub
mov
stc
repz
notl
roll
insl
pop
fcmovnbe
push
mov
mov
pop
push
mov
dec
and
lea
sbb
dec
or
les
xor
jmp
inc
scas
cmp
outsb
xchg
and
or
xor
shl
mov
mov
mov
add
int
les
jne
popl
ret
sub
jnp
iret
inc
cmp
mov
add
lret
jbe
adc
xor
movsl
mov
mov
imulb
mov
cmp
push
and
jg
and
sub
sbb
pop
mov
sbb
or
pop
lods
test
jns
enter
stos
push
scas
adc
mov
jbe
jo
leave
mov
in
mov
pop
xlat
or
add
add
ret
pop
clc
ficoml
pop
and
pushf
push
push
test
xchg
or
fsts
jl
cmp
inc
jo
sub
das
andl
inc
xlat
push
fisubrl
mov
xor
data16
and
push
aaa
ss
xchg
iret
ret
sbb
jl
arpl
jg
fisubrl
jo
mov
sub
xchg
xchg
ss
inc
lods
xchg
stos
cltd
pop
imul
mov
dec
adc
xchg
roll
fisttpll
jo
and
cmp
repz
inc
cmp
outsb
test
in
dec
adc
fstp
hlt
testb
add
adc
jmp
push
mov
fwait
jmp
inc
cs
mov
xchg
adc
pusha
mov
in
fcmovnbe
mov
and
stos
imul
mov
addb
roll
and
inc
or
xor
das
mov
adc
add
push
jl
fs
in
jbe
aam
enter
adc
insb
cmc
xor
cs
lds
and
xor
or
cmp
and
insl
or
popa
mov
adc
jle
adc
lock
fstp
lret
and
loopne
adc
hlt
rclb
push
stc
push
imull
inc
sbb
aam
sbb
sbb
loopne
push
mov
fldl
leave
pop
xchg
mov
or
push
pusha
ss
pop
aad
or
push
lds
imul
and
aaa
lcall
inc
imul
inc
adc
push
push
mov
push
ljmp
inc
mov
cmp
fimull
push
push
pop
in
dec
push
add
pusha
adc
jmp
mov
and
bound
sbb
cs
sub
mov
mov
push
rcll
jbe
or
bound
or
xchg
pop
inc
xchg
ficoml
lds
sbbb
lock
fistpl
ja
pop
adc
sbb
cwtl
mov
cmpsl
in
pop
xchg
pop
ficompl
sub
push
jg
push
mov
inc
dec
popa
out
or
lock
cmp
les
pop
sbb
sbb
imul
dec
adc
mov
or
mov
aas
cld
imul
mov
sub
je
mov
insl
sub
insb
adc
mov
inc
div
jns
jmp
loop
bound
pop
cld
into
sbb
push
add
inc
lods
push
mov
pop
sub
sbb
testl
lea
push
fisubl
jge
push
sub
lods
and
ret
push
adc
mov
mov
shlb
pop
bound
and
icebp
add
outsb
pop
or
mov
push
out
jle
ss
insl
push
jecxz
cmp
lea
ret
cmc
add
es
dec
pop
stc
jo
sbb
cmpsb
into
xor
mov
sbb
pop
jge
fiaddl
outsb
mov
mov
stos
lods
dec
add
xchg
faddp
push
outsb
mov
lds
xchg
std
in
xchg
enter
shl
xor
insl
or
shll
push
jne
jl
push
push
fidivl
adc
or
subb
push
inc
pop
push
ret
dec
lods
cmpsb
sub
or
shrl
lea
imul
insl
test
out
jge
in
mov
add
add
sbb
rorl
lret
data16
push
push
fisubl
push
add
out
inc
sbb
lods
or
movsb
push
enter
js
dec
roll
cmp
imul
cmc
jns
jnp
in
add
outsb
dec
dec
movsl
ja
dec
cmc
sub
insb
test
xchg
lahf
jge
insl
sub
mov
dec
aad
jns
mov
sti
pop
fmull
and
loope
mov
lret
inc
repnz
repnz
stos
es
add
cmp
adc
je
mov
jb
int3
mov
insl
sub
aaa
push
pushf
inc
jmp
adc
mov
rclb
call
cmpsb
jbe
jge
stc
out
dec
ficoml
dec
dec
jp
shl
xchg
sbb
movl
pop
shrb
movsb
mov
ss
imul
into
and
add
pop
clc
push
icebp
sahf
push
pop
fcomps
enter
stos
mov
add
sbb
push
push
inc
pop
adc
adc
jbe
sar
push
sub
mov
aaa
mov
mov
xchg
mov
mov
add
adc
sbb
sub
fisubl
mov
mov
xor
fcmovnbe
sbb
pop
or
cltd
aas
iret
test
and
scas
pop
movsb
out
cli
imul
add
fiaddl
rcl
pop
call
mov
icebp
inc
pop
fcmovnb
stos
jb
imul
or
pop
adc
sub
and
ret
std
mov
into
cmp
popa
mov
jmp
loop
in
lods
and
pusha
jnp
adc
in
mov
push
pop
inc
and
je
push
pop
sub
mov
push
lea
mov
cmpsb
bound
ss
sub
mov
pop
cwtl
stos
push
mov
jmp
mov
mov
aam
sahf
repz
stos
cs
push
test
std
fwait
add
push
jg
daa
stc
fists
adc
arpl
stos
mov
imul
stos
dec
adc
xchg
insl
lahf
xchg
sbb
jecxz
adc
sbb
pop
test
rcll
mov
push
dec
fdivs
dec
and
jbe
or
.byte
repnz
push
cltd
sti
incl
inc
add
push
push
je
imul
sub
or
sub
sub
pop
ss
xor
xor
or
or
push
dec
bound
arpl
or
mov
xchg
incl
push
jns
je
insl
jmp
mov
pop
or
orl
je
orl
jo
orl
insb
push
enter
push
xor
and
and
and
xor
or
enter
xor
enter
mov
enter
sub
incl
mov
call
testb
je
movzwl
div
and
mov
sbb
arpl
sbb
and
and
add
lret
jg
hlt
mov
cmp
jne
push
mov
out
jg
das
or
xor
mov
jmp
mov
jg
fucomip
mov
or
add
mov
std
outsl
push
lea
mov
mov
or
inc
cmp
negb
mov
dec
adc
mov
mov
lds
adc
lret
mov
push
push
clc
mov
mov
jg
xor
mov
jmp
mov
dec
inc
addl
cmp
inc
push
adc
xchg
push
mov
add
push
insl
imul
outsb
fldt
pop
adc
xor
add
ds
add
loopne
mov
inc
mov
push
aaa
fnstenv
lock
jg
pop
mov
mov
pop
fdivrp
mul
jns
mov
lret
add
cmp
jne
in
fsubrl
sbb
or
lret
mov
add
shlb
push
pop
mov
pop
cmp
jne
mov
mov
sbb
lock
out
pop
pop
lea
xchg
in
hlt
outsl
outsb
imul
xor
push
pop
outsl
jb
sbb
add
stc
add
fbstp
sbb
jne
and
or
push
sub
andl
ret
dec
push
pop
sub
xor
testb
jne
sub
xor
pop
fnstsw
out
jbe
lret
mov
add
sub
mov
sub
jle
or
mov
push
lods
jmp
gs
xchg
mov
fildl
jne
mov
adc
nop
ret
mov
inc
xorl
pop
mov
and
and
sti
decl
push
xorl
clc
mov
test
je
sbb
lock
adc
movsl
outsl
push
es
mov
enter
lods
inc
mov
pop
pusha
push
dec
push
jbe
push
jne
js
add
test
jbe
inc
inc
mov
lahf
call
mov
stc
leave
mov
stos
adc
mov
jno
mov
insl
imul
pop
sbb
jb
int
add
adc
inc
mov
push
jbe
or
or
push
popa
cwtl
imul
dec
jbe
add
fcmovnu
xchg
rcrb
jge
mov
ficoms
mov
mov
aam
pop
dec
or
adc
or
add
sbb
out
leave
mov
dec
call
jge
aaa
dec
scas
lea
loope
loope
sbb
rcrb
ret
cmp
notl
fisttpl
aad
sub
test
pop
jmp
push
push
mov
cmp
in
jae
xor
jge
pop
adc
jbe
adc
add
ret
jae
mov
lret
or
push
push
adc
sbb
inc
xor
push
jae
pop
fdivl
jne
rolb
pop
ljmp
xor
test
add
fsts
add
mov
and
mov
mov
add
lahf
jnp
fcmove
dec
xchg
imul
arpl
rcrb
or
jg
mov
cwtl
mov
scas
pop
mov
stos
pop
mov
add
and
sbb
in
pop
inc
mov
ja
mov
das
jne
add
cmp
lea
outsb
xchg
cmp
pop
xor
fidivrl
sbb
or
or
cli
xor
rolb
add
out
aas
jmp
out
push
cmp
je
jmp
jne,pn
push
pop
lcall
lods
mov
sub
int
add
jns
push
mov
clc
fwait
mov
insl
sub
jb
or
or
adc
mov
mov
jnp
jmp
push
push
inc
int3
add
xor
push
in
and
jl
fnsave
scas
adc
jo
cmp
pop
jb
pop
fildl
mov
inc
js
and
into
push
or
shlb
sbbb
jo
cmp
add
mov
shlb
xor
pop
outsl
ja
addr16
dec
push
mov
pop
xchg
hlt
lret
test
je
ret
cmp
lds
rcll
adc
cmp
or
xchg
jmp
xchg
xlat
inc
mov
cmp
push
movsb
push
push
pushl
mov
lods
adc
add
cmpb
pusha
mov
adc
sbb
js
fisttpll
and
push
outsl
outsl
ja
sbb
cmpl
notb
or
cmp
movl
add
cmp
mov
or
pop
mov
mov
mov
pushf
adc
cmpsl
xchg
loopne
pop
loope
sbb
in
sub
out
ret
ret
repz
jle
lret
jae
inc
out
sbb
and
sbb
cmp
movsl
les
pop
sbb
jmp
xchg
dec
add
xchg
sbb
adc
faddl
jne
and
call
out
cmpl
je
add
fmul
inc
push
or
fists
adc
leave
stc
iret
sbb
popa
negl
call
cmp
hlt
jne
add
ds
or
insb
jne
test
jns
lret
jle
jg
add
cli
add
dec
push
xor
fisttps
sub
insl
or
pop
push
sub
sbb
iret
pop
test
jl
mov
add
inc
adc
sbb
adc
ret
sbb
push
or
sbb
in
mov
mov
cmp
scas
add
sub
ja
mov
popl
movl
rcrl
push
movsb
es
add
btc
loope
popf
mov
add
incl
imul
adc
je
or
int
loope
adc
pop
cmp
push
or
xchg
mov
ss
add
or
dec
or
je
push
clc
ret
inc
sqrtps
loope
inc
loopne
cmp
fiaddl
jecxz
sub
adc
ret
outsl
test
testb
sub
aam
dec
mov
arpl
inc
push
add
fbld
loop
ja
cli
idivl
test
pusha
add
add
sbb
aaa
test
add
sbb
push
and
mov
fistl
or
sub
daa
jb
out
push
in
js
mov
or
test
rcrl
jg
lock
xor
adc
push
sub
enter
data16
xlat
fadd
dec
or
sbb
or
add
mov
lret
cmp
mov
outsb
test
cmp
fstpt
movl
lea
jbe
mov
aam
lods
mov
testl
in
jbe
xchg
hlt
or
push
call
dec
mov
sti
jbe
jns
shlb
jo
outsb
cmpsl
data16
in
adc
add
loope
xchg
or
add
xchg
scas
fisubs
sbb
push
or
les
jge
jl
jmp
or
jae
ret
int3
push
sti
sub
sar
inc
adc
inc
or
cwtl
mov
jns
pop
hlt
movsl
xlat
std
cs
sub
sbb
negl
push
mov
stos
dec
cmp
push
inc
xlat
loop
lea
setl
mov
and
push
jp
jae
shlb
sub
add
mov
add
add
add
mov
jle
test
push
cmp
jne
mov
arpl
adc
sti
jmp
orl
fstl
aam
inc
ret
jnp
std
lods
pop
js
xchg
fimull
mov
xchg
inc
add
movl
and
push
push
ret
xor
and
sub
pop
push
pop
int3
or
cli
je
xchg
jg
iret
add
in
dec
xor
or
mov
pop
and
or
out
mov
push
into
add
mov
stos
aad
nop
xor
lahf
lods
fcoms
lcall
add
mov
fsts
or
jg
pop
mov
pop
je
int3
jbe
insb
mov
adc
inc
cmpl
pusha
or
je
or
adc
pop
leave
shlb
add
hlt
sub
rcll
sbb
clc
push
add
add
sub
js
stc
ds
das
fucomp
imul
test
sarb
xchg
fmulp
je
xor
push
push
movsb
jne
iret
addb
pop
gs
mov
jo
xchg
mov
sub
in
sbb
mov
or
out
aad
je
clc
mov
jmp
cld
dec
or
lds
testl
fisttpl
sti
fwait
cmp
pop
or
fimull
xor
push
clc
cmp
insl
imul
aad
or
adc
pop
xchg
int
outsb
xchg
and
or
cmp
sub
or
fwait
jmp
inc
scas
or
out
dec
lock
loopne
hlt
sub
mov
in
pushw
or
pop
pop
adc
inc
cld
ret
call
cmp
pop
shlb
popa
push
in
or
pop
cmp
jmp
jb
jb
inc
adc
das
sti
and
inc
cld
pop
mov
lock
and
mov
iret
nop
cmp
jne
jae
mov
lahf
or
and
sub
or
push
sub
sbb
ret
mull
sbb
sahf
decl
mov
int
sub
mov
pop
push
cmp
popa
mov
cmpl
or
push
xchg
cmp
adc
push
sbb
ret
and
lea
add
loope
shlb
sub
sub
outsb
cmove
add
mov
addl
or
mov
add
out
cmp
or
jmp
pop
or
sbb
or
adc
or
xchg
into
dec
sbb
lods
lods
inc
js
mov
and
xor
add
shlb
sarb
xchg
jo
hlt
sti
mov
and
cmp
lods
mov
rolb
or
or
cmpsl
lahf
nop
out
sub
idivl
adc
pusha
mov
xchg
sub
pusha
cmc
pop
cmp
add
lds
cmp
and
ds
and
dec
add
sub
popa
lock
push
ret
sti
sub
mov
dec
fadds
jmp
cmp
adc
outsb
mov
lods
push
jae
mov
and
pop
or
pop
sbb
notl
les
imul
movl
cwtl
jmp
sub
aam
mov
mov
add
in
sub
add
cmp
iret
sub
xlat
sbb
xchg
xor
push
mov
sbb
dec
xor
rorb
ds
in
xlat
adc
sbb
test
fmuls
cmp
in
adc
movb
nop
rorl
add
jbe
clc
jle
adc
sub
mov
xchg
aas
int
sub
stos
aad
fmuls
jle
dec
call
ret
mov
push
mov
sbb
insb
jae
stos
adc
push
iret
cmp
aad
mov
jmp
fldt
je
push
mov
daa
inc
pop
or
sbb
imul
ret
sub
lahf
sbb
cs
pop
jne
adc
mov
xor
outsl
mov
popa
lret
bound
cmp
data16
or
pop
xchg
outsb
or
cwtl
add
jo
xlat
sahf
sti
mov
mov
stos
dec
in
aas
inc
aas
jg
loopne
adc
ret
push
push
push
cmp
mov
xor
xchg
and
push
repz
mov
add
or
ljmp
jle
cmp
jg
sub
inc
cli
jl
cmp
jg
add
mov
inc
outsl
lock
repz
adc
leave
jmp
shr
loopne
fcmovb
mov
aas
ret
cmpl
fcmovnbe
mov
aaa
push
pop
cltd
inc
dec
mov
xchg
add
add
mov
lea
add
or
lea
lods
or
mov
jne
mov
adc
adc
ja
or
lock
and
or
xchg
in
call
jle
mov
mov
je
sar
js
rep
mov
and
iret
mov
lea
sbb
std
loopne
in
pusha
sbb
cld
and
scas
xor
or
sahf
xor
fdivrl
mov
sub
push
dec
lea
outsl
lock
jae
roll
jmp
cmp
cmc
lret
jmp
pop
add
loopne
addb
sbb
fs
mov
int3
ret
pusha
mov
adc
inc
cmp
std
mov
add
and
or
jne
call
jae
test
or
sbb
outsb
mov
dec
jmp
hlt
dec
movsl
dec
mov
imul
int
movzwl
shl
add
or
rep
mov
rcl
jo
stos
pop
aas
sub
insb
negb
fistpll
int3
add
push
inc
je
je
mov
push
lret
iret
repnz
je
and
je
pop
dec
negl
je
xor
daa
adc
in
push
or
sub
adc
ja
cmp
ja
lea
add
pop
sub
out
ljmp
imul
push
neg
jle
js
pop
sub
arpl
imul
inc
inc
and
pushf
mov
insb
iret
mov
filds
jb
dec
and
pop
adc
fstpt
add
push
leave
into
add
aad
pop
mov
pop
xor
mov
aad
ds
js
loope
or
cmpsb
in
inc
mov
mov
in
jl
sti
lcall
sub
loop
lea
fucomi
out
fcomi
lods
push
xchg
add
je
pop
out
jge
mov
xlat
adc
das
jae
push
jge
jge
inc
stc
add
pop
leave
xor
sbb
fisubrl
fstp
fldt
fldz
fs
xor
enter
inc
enter
pslld
or
or
ret
paddb
daa
mov
adc
mov
xchg
lahf
sub
sbb
add
mov
xor
movsl
aam
sub
std
out
xchg
sub
sub
pop
jecxz
add
out
repz
sbb
mov
cmp
fidivrs
jmp
outsl
call
mov
bound
cmpb
xlat
fadds
stc
das
nop
lods
outsb
xor
xchg
push
or
push
push
incl
in
int3
into
sbb
rorl
fstl
popa
push
pop
test
enter
mov
jmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
incl
dec
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
das
mov
cmpsb
iret
decl
js
inc
call
mov
cmp
incl
test
stos
pop
out
sub
imul
divl
jl
xor
cmp
ljmp
cld
xchg
push
mov
inc
mov
push
inc
mov
push
sbb
sarb
dec
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
incl
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
sbb
mov
addl
cmp
xor
mov
cmp
xchg
pop
cmpsb
lock
mov
popa
mov
mov
stc
repz
mov
subb
and
and
and
mov
outsb
bound
xor
and
add
xchg
jne
push
jmp
mov
or
faddl
push
xchg
cmp
pop
loop
pop
hlt
movzwl
shll
lods
jns
inc
push
movsl
mov
movsl
subb
clc
hlt
add
int
hlt
push
xor
add
dec
shrl
cmc
push
and
cmp
out
mov
mov
adc
aas
or
mov
shrl
push
inc
push
inc
pop
inc
outsl
jb
popa
iret
ljmp
pop
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
fildl
fldcw
mov
mov
mov
inc
cmc
add
mov
test
sbb
test
rorb
and
sbb
fdivrs
rclb
mov
test
popa
add
dec
repz
shlb
cld
ret
inc
ret
push
mov
addl
pop
pusha
mov
mov
adc
enter
pop
faddl
or
jmp
cmp
je
xchg
jp
jae
mov
sti
sbb
push
mov
mov
nopl
sbb
jecxz
adc
or
mov
mov
pop
outsl
sub
pop
mov
add
jmp
stc
repnz
pop
jb
shrd
sub
jmp
cld
rorb
mov
mov
adc
aas
xchg
sti
out
mov
pop
jge
mov
sbb
popa
lock
push
in
add
adc
insb
mov
inc
adc
adc
inc
fldt
mov
mov
dec
clc
and
mov
pushf
mov
jae,pt
setne
fdivr
gs
pop
mov
ret
pop
out
cmpsb
or
adc
mov
in
sbb
mov
cmp
sbb
jo
jne
pop
jbe
xchg
xchg
or
jne
or
je
and
test
jnp
aam
enter
or
cltd
sbb
sbb
pop
push
xchg
in
mov
pop
mov
rolb
cmc
or
repnz
cmp
ret
jae
jle
pop
mov
enter
or
mov
jns
fdivr
repz
lcall
negb
pop
sbbb
add
fadds
fdivl
data16
shlb
rcll
dec
aam
adc
pop
push
push
push
xchg
pop
cs
lock
aaa
dec
jl
cmp
mov
mov
pop
imul
xor
dec
jge
pop
jp
adc
and
ljmp
adc
jno
sbb
jae
inc
inc
fbstp
ds
push
clc
mov
out
shlb
adc
je
push
lods
or
and
add
xor
jmp
in
push
ficoms
movsb
jnp
push
add
add
xchg
xor
pop
addr16
add
sti
mov
addb
push
push
mov
cld
sbb
sbb
jmp
filds
jne
movsbl
add
xchg
fwait
xor
in
and
push
pop
loope
mov
and
movlps
loop
mov
ret
sbb
pop
arpl
testl
out
push
fisubs
stos
dec
adc
outsb
mov
and
ror
push
js
adc
dec
shlb
out
outsl
aad
cmp
cli
out
push
je
xor
js
call
ja,pn
clc
sbb
add
mulb
insl
rcrl
stos
dec
jp
jl
lods
lds
push
mov
mov
or
push
cmp
mov
fucomp
je
sbbl
jbe
sbb
sbb
sub
insb
push
fcompl
mov
sub
pushl
mov
xchg
sti
sbb
add
sub
mov
mov
and
jmp
sub
test
or
and
mov
fldcw
mov
les
mov
inc
add
testb
xchg
into
mov
ss
int3
cmp
lock
lahf
cmpsb
sbb
pop
push
push
push
push
push
inc
pop
bound
mov
xor
xor
pop
xchg
dec
lea
mov
xchg
inc
or
pusha
add
lahf
mov
cmp
int3
addr16
xor
or
pop
add
lea
repnz
pop
mov
jne
pop
jp
mov
ret
xor
jmp
ret
fistpl
rclb
pop
add
xor
std
jg
je
cmp
push
sub
std
jg
call
cmp
pusha
add
call
xor
push
cmp
ljmp
adc
xchg
and
add
cmp
testb
daa
cmp
mov
jmp
mov
es
jmp
test
iret
jmp
bndldx
into
mov
fbstp
or
cmpsb
lock
push
or
pop
pop
xchg
xor
addr16
mov
sbb
xor
inc
aas
lahf
mov
out
je
sub
xor
push
and
push
jne
or
cmp
fcompl
or
out
or
imul
pushf
mov
stos
fbld
or
fstps
scas
pop
xor
or
outsb
in
aaa
out
out
je
push
pop
mov
scas
rcrl
sarb
pop
jns
cmp
or
add
adc
or
es
mov
loop
inc
or
push
mov
fisubl
lds
jmp
bound
out
sbb
sbb
fadds
adcl
adc
jb
adc
lock
ss
sub
jno
xchg
xchg
lret
outsl
mov
vmwrite
xor
sbb
fnstcw
pop
or
cmp
jg
imul
daa
movl
sbb
mov
adc
sub
in
out
inc
and
add
ret
pop
outsl
sbb
cmp
lea
cmc
push
mov
add
or
movsl
adc
or
jmp
pop
fbld
add
mov
or
gs
inc
mov
sbb
insb
pop
sbb
cltd
idiv
add
push
adc
sti
pop
dec
clc
rcrl
rcl
mov
flds
pop
insl
sub
iret
dec
sbb
or
fstpl
push
neg
sbb
inc
pop
sub
lahf
adc
ja
add
mov
mov
mov
movsl
sub
jg
iret
inc
xchg
loopne
dec
insb
push
cmp
sti
push
lock
cmp
mov
dec
ret
shll
jle,pt
lock
push
jl
adcl
push
lea
pop
sub
fsubl
pop
stc
into
pop
pusha
or
add
push
loopne
mov
sbb
inc
xchg
cmpb
push
cmpl
lea
and
cld
jae
push
lcall
or
mov
enter
mov
jbe
jne
pop
add
inc
or
dec
out
bound
sbb
jbe
jp
mov
sbbb
lds
push
xor
jne
lahf
out
sti
test
adc
int3
ss
jne
mov
mov
inc
stos
pusha
sub
mov
push
hlt
lods
add
cmp
imul
xor
jnp
bound
xchg
mov
lock
pop
cli
clc
dec
jl
addl
adc
incl
and
pop
push
ss
fstl
sub
movl
mov
sbb
dec
jne
pop
mov
and
sbb
mov
adc
pop
or
hlt
pusha
fbstp
pushl
xchg
dec
mov
or
ljmp
and
push
or
sub
movw
pop
mov
mov
push
cld
lcall
pop
test
xchg
stc
mov
jne
xchg
lock
mov
sub
mov
mov
in
shrl
xor
add
addr16
and
add
addb
cmp
insl
fisttpll
sar
insb
inc
icebp
imul
jg
clc
repz
frstor
pop
lea
cmp
sub
push
loop
imul
pextrw
iret
jl
gs
mov
scas
dec
testl
add
push
shll
mov
xor
or
adc
inc
in
mov
push
nop
mov
test
lock
xor
push
and
or
cmp
lret
outsl
sbb
pop
add
je
add
mov
push
out
outsl
add
jmp
push
out
imul
cmp
and
pop
add
int
mov
in
add
cmp
lock
xchg
pop
cmp
dec
nop
push
aam
pop
mov
repnz
mov
mov
sbb
loope
aaa
mov
int
cld
ret
sbb
inc
mov
mov
pop
push
mov
push
cld
add
cmpsb
mov
mov
adc
push
mov
stc
iret
cs
mov
cmp
fidivrl
or
lret
mov
jno
mov
add
mov
int3
inc
cld
xor
iret
pop
lret
push
pop
dec
mov
cli
xor
push
push
pop
pinsrw
mov
dec
clc
inc
jo
lret
mov
ret
and
push
xor
mov
xchg
adc
or
jns
inc
mov
cmp
out
add
or
iret
push
es
mov
push
pop
jae
ja
mov
cmp
aaa
add
dec
jmp
xchg
push
mov
or
sbb
add
mov
insl
adc
dec
jne
out
into
icebp
mov
pop
lea
jmp
das
xor
adc
and
cmp
dec
mov
sub
push
movsl
pop
or
or
pop
mov
add
cltd
daa
push
das
fcompl
mov
jns
sbb
jg
dec
jl
cmp
jge
sub
inc
sbb
fldcw
cmp
in
adc
rolb
mov
jmp
mov
adc
pop
mov
ds
daa
xchg
ljmp
add
dec
jge
cmp
jle
inc
mov
cld
js
ljmp
test
sub
das
test
adc
pop
bound
cltd
mov
pop
sub
ret
out
inc
mov
jmp
dec
cld
push
xor
out
mov
mov
inc
cmp
test
mov
sbb
sub
or
pop
xchg
add
push
push
aaa
clc
sub
ja
inc
in
and
sub
jmp
and
cmpl
sbb
sub
out
or
outsb
mov
jo
mov
sub
inc
in
outsb
mov
cmp
jl
popf
inc
add
xor
icebp
sub
fs
in
negl
push
push
pop
je
cmp
sbb
pop
stos
cmp
or
push
sbb
and
popf
call
and
mov
test
jmp
pop
jb
jno
jae
cmp
pop
sub
pop
enter
jmp
mov
xor
push
mov
sti
pop
mov
movsl
shr
in
pop
int3
pop
pushl
dec
aad
fs
adc
or
fildl
or
lcall
mov
mov
mov
mulb
mov
pop
dec
cmp
mov
jmp
fsubp
push
xor
cmpps
subps
add
test
ret
mov
inc
nop
sbb
sub
pop
aaa
or
enter
inc
and
leave
jl
test
and
mov
jmp
mov
shr
adc
inc
xchg
inc
sbb
jecxz
add
icebp
mov
gs
mov
or
xor
ret
mov
push
sub
adc
outsl
mov
sub
sbb
pop
mov
cmp
and
cmp
je
cmp
mov
mov
xor
je
cmp
sub
cmp
pop
mov
mov
or
xor
inc
add
or
bnd
mov
or
int
popf
jno
xor
xor
adc
iret
xorl
in
divb
aad
or
dec
shlb
sbb
call
sbb
pop
xchg
scas
notb
add
mov
cmp
sbb
push
mov
std
mov
nop
inc
push
or
add
lock
xchg
add
sbb
fcoms
add
shll
jle
mov
mov
mov
rolb
jns
jns
or
je
or
jo
orb
mov
imulb
enter
cmpsb
fsubs
jmp
adc
cmpl
fsubrl
aam
adc
or
call
pop
call
and
or
pop
ss
arpl
pop
add
cmp
sbb
jns
and
xchg
adc
adc
add
jns
dec
mov
jne
dec
pop
pop
jmp
test
pop
jnp
jns
sti
add
mov
testb
nop
xchg
out
jge
pushf
xor
push
sub
cmc
mov
cwtl
add
jne
push
ss
xchg
sub
adc
adc
loop
cwtl
cmp
sbb
sub
stos
or
std
add
sbb
inc
lods
les
jmp
pop
out
les
jno
inc
add
add
add
mov
xchg
adc
lock
xor
fs
mov
mov
icebp
adc
add
mull
mov
mov
pop
cltd
push
pop
pop
push
mov
mov
xor
or
jne
xor
pop
loopne
sahf
jnp,pt
imul
jbe
sbb
pop
call
inc
mov
ret
sbb
pop
mov
fistpll
mov
sbb
push
dec
cmp
xor
cmpl
rorb
xor
lock
or
movzbl
add
xor
in
aas
push
push
iret
movsb
push
shll
add
mov
out
xchg
aam
lock
xorl
lea
or
dec
cmpl
cmp
pop
cld
out
sub
cmp
jle
out
pop
sarb
inc
push
scas
add
iret
sub
popl
push
or
mov
mov
dec
adc
and
mov
cmp
jge
add
iret
pop
sub
sub
inc
push
xor
mov
xor
add
fistl
in
mov
mov
adc
pop
cmp
push
or
mov
sub
sbb
mov
es
fistpll
add
xlat
pop
movb
imul
add
cmc
cmpsb
push
ficomps
or
imul
inc
xor
sbb
aaa
lea
pusha
hlt
lret
pop
inc
inc
mov
or
out
dec
insb
loope
fmuls
push
sub
and
addb
xor
shlb
mov
movsl
xchg
jp
xchg
mov
loopne
pop
popf
and
mov
or
lahf
sbb
sbb
mov
es
dec
pusha
xor
inc
mov
incl
pop
add
inc
mov
stos
insb
push
clc
fnstcw
mov
and
xchg
push
pop
and
les
int
or
inc
jne
inc
outsb
fucomi
sbb
cmp
jo,pn
inc
call
hlt
mov
icebp
mov
sub
lahf
push
or
jne
jle
mov
mov
insl
es
roll
sti
ret
pop
scas
test
hlt
jbe
dec
lea
fadds
xor
mov
sbb
stos
add
or
dec
insl
xchg
mov
ljmp
call
fdivrs
hlt
mov
ss
testl
xor
adc
movsl
cmp
mov
clc
push
adc
les
or
outsb
jmp
inc
pop
js
pop
mov
and
aas
or
adc
mov
push
pop
js
pop
mov
adc
xor
gs
fbld
inc
add
jo
mov
inc
jge
sub
mov
notl
ret
inc
cmp
ss
inc
push
enter
pop
dec
data16
inc
stos
decb
les
fcmovnu
insl
adcl
jnp
mov
aas
sub
push
mov
push
jg
movb
mov
push
push
dec
push
sub
jno
mov
pop
aas
inc
and
in
loopne
dec
filds
inc
orl
loope
sti
decl
outsb
gs
xor
cs
insb
add
gs
outsl
outsb
addr16
and
dec
popa
insl
gs
adc
fdivr
inc
mov
fbstp
stos
insl
xlat
ds
movb
addr16
dec
mov
xor
add
sbb
lods
or
insb
hlt
addr16
dec
jbe
adc
movsb
test
cwtl
xor
sub
fisttps
jbe
std
dec
pop
cmp
shrl
int
stos
fildl
repnz
inc
sub
std
pop
ret
punpckhdq
or
xchg
clc
outsb
xor
sbb
stc
dec
mov
jge
repz
or
js
lret
cmp
pop
push
mov
jb
add
je
and
cmp
aaa
push
jmp
dec
dec
in
jbe,pn
sub
and
fidivrl
xchg
dec
or
adc
jne
enter
xchg
cmp
ret
mov
decl
outsl
data16
popa
jle
or
jb
arpl
gs
add
into
sbb
sbb
mov
inc
scas
xor
cmc
cmp
lret
dec
xchg
test
add
or
sbb
jne
jnp
ja
push
mov
lahf
dec
bnd
mov
or
sarl
mov
idivl
dec
cmp
fsubs
inc
jmp
jns
and
sub
rcr
push
and
aaa
sbb
jbe
push
nop
fsubl
ja
inc
sbb
add
push
or
sbb
das
adc
call
fildl
je
push
add
inc
dec
mov
push
cmp
jge
pop
xchg
or
push
push
das
test
or
sbb
scas
inc
addb
mov
pop
add
dec
adc
pop
pop
jne
cld
sub
pop
adcb
lea
push
push
mov
push
lock
pop
xchg
cs
cld
lcall
popa
icebp
mov
outsb
adc
dec
xor
mov
inc
jae
icebp
and
ficoml
add
cli
pop
shll
cld
push
push
addr16
add
rcrb
shll
push
clc
scas
subl
add
add
movb
jnp
push
sbb
inc
add
add
xor
or
fs
push
je
sbb
sbb
aas
sti
loope
in
or
mov
mov
pusha
or
mul
sub
lods
push
call
mov
sbb
add
lret
jmp
add
enter
inc
mov
dec
mov
movsl
push
sbb
cmpl
jle
nop
loop
inc
aam
out
fstpt
call
jl
call
or
sti
mov
push
sub
cmpb
cs
sub
insb
mov
mov
pop
adc
ret
mov
test
pop
call
out
jge
pusha
inc
mov
pusha
pop
add
mov
sbb
push
test
inc
insb
mov
fsubrs
dec
xchg
aas
or
push
in
insl
rolb
push
cwtl
add
push
insb
or
insb
orl
iret
adc
enter
sbb
enter
adc
and
inc
push
cmp
cld
adc
hlt
push
sbb
in
call
inc
loopne
fmul
leave
inc
push
aam
adc
or
cmp
xor
pop
jb
pop
xor
mov
cmp
jo
lock
sbb
jae
pop
icebp
repnz
hlt
cmc
mulb
push
idiv
stc
nop
inc
push
sbb
sti
cld
inc
push
sbb
incl
sbb
loope
jecxz
fs
inc
in
out
nop
inc
push
out
jmp
ljmp
in
out
out
push
sbb
rcl
rcrl
fs
inc
aam
fs
inc
push
xlat
fcomp
nop
inc
push
sbb
fcmovnu
inc
push
sbb
filds
sbb
rol
sbb
nop
inc
push
enter
push
sbb
lret
int3
inc
push
sbb
iret
push
sbb
mov
mov
fs
inc
mov
mov
nop
inc
push
mov
mov
mov
sbb
mov
mov
fs
inc
movsb
movsl
cmpsb
xchg
andl
imull
in
xor
je
fdivs
aaa
mov
add
adc
push
or
inc
rcrl
dec
push
xor
add
ljmp
arpl
je
test
popa
sub
adc
and
inc
dec
gs
jo
pop
fsts
pop
push
pop
sar
add
jne
dec
dec
gs
das
xchg
xor
lods
pop
pop
or
outsb
pop
inc
and
mov
jb
pop
add
push
add
add
push
or
flds
test
pop
push
pop
xchg
stos
in
mov
pop
inc
imul
or
or
in
adc
push
adc
jo
sub
ljmp
jbe
jns
gs
nop
insb
cld
inc
and
push
popa
outsb
adc
xchg
les
pushl
jae
outsb
jbe
jb
insb
outsl
ja
pop
push
and
adc
pop
in
pop
or
or
mov
js
push
bnd
pop
mov
pop
sub
sbb
or
imul
inc
and
mov
enter
pop
sub
pop
xchg
pop
subl
xlat
push
pop
in
fsts
pop
push
outsb
fs
nop
fcoms
sarb
xchg
enter
pop
push
outsl
imul
add
mov
or
or
xchg
jae
outsl
nop
pop
nop
or
pop
inc
or
js
in
nop
xlat
in
pop
pop
cmc
pop
lret
adc
arpl
idivl
mov
inc
jp
sub
js
and
movsl
gs
movsb
push
movsb
ret
clc
or
popa
arpl
test
inc
add
pop
push
insb
inc
imul
das
xchg
push
pop
mov
pusha
loope
popa
or
lahf
mov
xor
xchg
les
roll
fs
adc
pop
adc
mov
jb
fdivs
mov
nop
jo
jo
cmpsl
push
stos
data16
xchg
or
hlt
mov
arpl
in
adc
cs
xor
add
dec
pop
or
jbe
mov
push
and
or
cmp
cmp
mov
push
ds
adc
add
repz
mov
add
cli
cld
into
adc
inc
xchg
lret
mov
mov
loop
mov
add
or
cli
sbb
sahf
gs
or
pop
out
icebp
inc
sub
add
push
cmp
ja
jb
dec
aad
and
lcall
test
fistps
dec
push
enter
pop
add
mov
in
or
mov
cmp
jbe
cmp
or
repz
je
movzbl
add
mov
jnp
pop
das
rolb
push
pop
ret
movnti
pusha
or
sub
xor
adc
outsb
rclb
add
rcl
ljmp
int
mov
incl
inc
cmp
jl
cmpb
jbe
or
mov
imulb
dec
adc
clc
xor
stc
pop
adc
mov
xor
dec
iret
xor
sbb
ret
push
push
in
inc
mov
aaa
rorl
cmc
stos
ss
cmp
pop
adc
cmp
cmova
jmp
jne
mov
loop
push
bound
push
ds
jge
inc
push
inc
daa
or
jne
decl
push
mull
inc
dec
mov
ret
mov
mov
xor
div
dec
mov
cmp
and
pop
mov
mov
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
loop
sti
out
xor
in
adc
leave
push
aaa
dec
je
repnz
sub
add
shrl
pop
pusha
or
ljmp
in
loopne
aas
push
xchg
inc
add
pop
sti
push
adc
sub
sub
push
clc
jg
fnstcw
fnstcw
orw
mov
fld1
inc
daa
andl
push
and
fildll
ret
subb
fildll
filds
rorl
fildll
stc
mov
mov
xlat
jg
push
push
fcom
fwait
call
mov
fnstsw
sahf
jae
fnstenv
ffree
ffree
frstor
in
rcrb
add
push
mov
mov
xchg
add
and
and
stos
imul
or
add
sub
stc
push
cmp
mov
sbb
test
adcb
pop
jbe
mov
sbb
push
ds
icebp
push
mov
sbb
sub
fstpt
setno
xlat
inc
scas
jae
add
daa
sbb
adc
test
test
xor
das
add
test
aam
mov
add
jb
pusha
mov
add
inc
stos
xlat
popf
adc
dec
repnz
jl
inc
mov
sub
js
sbb
loopne
mov
jecxz
or
pop
pusha
mov
and
fimull
std
pop
inc
and
gs
mov
test
sti
das
sti
adc
insl
lock
setne
jmp
packssdw
push
pushl
or
inc
mov
mov
xor
and
add
xor
add
or
sub
icebp
xor
imul
in
ret
sbb
and
test
xor
mov
adc
sub
inc
pop
ret
push
push
dec
mov
add
fwait
sbbb
mov
jae
inc
subl
mov
cmp
jne
dec
dec
sub
mov
daa
add
imul
pop
push
fldenv
push
xor
lea
bound
pusha
out
cmp
orl
int3
aaa
push
lds
stc
stos
sbb
pop
pop
repz
add
dec
sub
int3
add
or
imul
push
mov
nop
cld
inc
insb
es
imull
xor
rolb
aam
jns
mov
add
dec
inc
add
fs
ret
inc
flds
xor
sbb
sub
inc
inc
mov
xor
push
fiaddl
mov
xlat
push
lea
adc
xchg
xor
or
fmul
and
add
lret
mov
xchg
test
testl
jmp
pop
xchg
sub
lret
fbstp
xlat
mov
xor
or
xor
push
pop
lods
fsts
add
add
mov
mov
or
ja
and
imul
mov
shlb
mov
or
js
or
mov
cmp
jne
pop
xchg
mov
inc
adc
out
popf
enter
dec
je
mov
mov
xchg
xadd
push
lea
lods
mov
rcr
mov
lea
cmp
ja
in
hlt
adc
and
fadd
clc
jge
scas
fistps
jbe
mov
gs
add
dec
mov
push
pop
test
mov
in
movb
aam
movb
push
add
test
xor
icebp
xor
or
mov
push
push
cmp
or
sbb
rcrl
mov
inc
or
adc
dec
add
dec
mov
push
push
xor
cmp
movsb
iret
lock
mov
clc
or
adc
add
or
je
mov
sub
pop
outsl
push
repnz
fcomi
jmp
mov
cmp
jne
adc
pop
fsubs
ljmp
lret
lods
jmp
dec
xlat
fmull
loopne
das
cmp
adc
les
fadds
pop
xor
and
jae
fildl
push
ret
outsb
push
shll
pop
divb
sbb
push
jbe
cmc
sbb
cld
pop
jae
popf
pop
xor
cmp
std
cmp
jb
cmp
ja
imul
icebp
sub
leave
rolb
xchg
add
pop
daa
notb
inc
jg
incl
fimuls
xchg
mov
or
ret
and
je
inc
aas
out
leave
ret
and
mov
mov
pop
sub
jne
lea
sbb
push
adc
add
mov
or
push
iret
scas
shll
insb
pop
add
xchg
ljmp
pop
mov
add
leave
scas
insl
fsubrs
shll
std
roll
fsub
sub
icebp
sub
je
add
jmp
lret
gs
push
clc
imul
mov
cmpsl
cmp
data16
adc
enter
push
adc
cmp
stc
push
jne
int
ret
push
bound
jbe
jl
or
lock
mov
into
dec
lcall
mov
adc
jmp
mov
mov
cld
jbe
ja
pop
and
insb
aad
xor
mov
or
add
push
out
imul
ja
add
aad
sbb
jge
jecxz
dec
mov
in
xchg
dec
jo
cmpsl
push
leave
cmp
or
repz
insb
das
int3
add
inc
je
mov
out
repnz
outsl
push
inc
je
mov
inc
je
mov
dec
je
outsl
jo
mov
mov
sub
ret
sbb
jne
lret
jp
pop
orl
cmp
scas
mov
mov
call
iret
movsb
pop
shll
mov
sarl
loop
add
rcrb
iret
lahf
xor
inc
test
or
mov
call
mov
jmp
outsb
or
or
sub
lcall
sbb
adc
loop
jnp
idivb
mov
dec
mov
sub
add
clc
call
inc
mov
dec
aaa
insb
add
sub
ja
or
mov
clc
out
push
stos
or
inc
or
mov
sti
cwtl
dec
cmp
jl
jmp
add
mov
sbb
stos
push
jle
jmp
push
dec
cmp
das
xlat
inc
test
pop
jmp
lea
outsl
stos
xchg
jnp
imulb
adc
dec
fldl
fcmove
or
sbb
aam
mov
push
mov
aaa
mov
push
aaa
push
adc
xor
or
rcrl
decl
add
pop
pop
rcl
in
sub
mov
mov
fwait
jns
mov
jl
mov
cmp
mov
lret
add
xchg
testl
jecxz
add
sub
inc
mov
daa
push
adc
mov
test
pop
popa
cmpsl
jge
movzwl
lea
cmp
sbb
clc
hlt
ja
pop
jmp
mov
loopne
adc
mov
inc
xchg
adc
add
ja
movswl
cmp
add
insl
jl
mov
cs
dec
sbb
sbb
cld
inc
jmp
or
in
sbb
add
aam
dec
rorb
or
add
ret
cltd
mov
or
stos
ret
jle
das
adc
xor
or
sbb
loop
rcl
sub
inc
je
test
mov
stos
neg
or
jg
cmc
inc
inc
je
stos
loop
pop
adc
push
pop
outsl
sti
or
and
daa
push
add
dec
push
push
pop
add
mov
int
mov
dec
or
imul
leave
mov
mov
mov
test
push
mov
adc
mov
push
lahf
xchg
add
and
dec
dec
scas
mov
xor
div
mov
inc
push
js
dec
jne
cli
pop
xlat
fimull
jns
sbb
out
stos
jecxz
cmp
add
stc
adc
ret
dec
jns
jno
in
or
or
cmp
xchg
mov
fimuls
addr16
sbb
cmp
je
mov
pop
pop
inc
or
fiaddl
inc
loop
add
test
mov
sub
sub
popf
out
not
in
or
and
adc
inc
sub
jge
cltd
sub
or
adc
sub
mov
sub
sub
sub
into
cwtl
inc
shl
mov
mov
in
jmp
popf
arpl
jmp
or
movl
mov
cmp
push
jne
testw
fdivrl
add
adc
cmpl
inc
mov
xor
mov
dec
sbb
adc
add
hlt
mov
neg
loope
fstpl
pop
frndint
jmp
shrl
fstsw
fwait
pop
inc
testb
sub
mov
ljmp
fbstp
lea
mov
jecxz
inc
jecxz
sub
dec
loope
and
add
sub
fldt
stos
inc
clc
add
jns
cld
data16
xlat
dec
jge
cmp
dec
add
call
jae
jle
icebp
dec
lea
add
add
or
out
adc
in
jmp
data16
mov
divb
fdivr
jmp
mov
xor
jp
mov
shr
mov
add
xchg
ds
pop
pop
les
rcrl
sar
mov
rolb
addr16
sbb
test
or
jge
out
scas
mov
pop
mov
mov
fistpll
cmpsl
sbb
jae
dec
add
ficompl
loopne
in
insl
add
rcl
or
fidivl
push
lea
pop
ficoms
or
xchg
test
sub
into
and
jne
dec
mov
outsl
adc
cmp
adc
lods
int
and
and
add
mov
cs
movb
cmpb
idivl
push
fmuls
fisttpl
cmc
loope
sub
pop
hlt
pop
sbb
rorl
pop
insb
clc
or
fclex
fldcw
inc
lods
icebp
aaa
shll
ds
add
pop
rorb
fs
ss
pop
bound
jne
inc
push
push
cmp
je
adc
mov
inc
mov
pop
add
mov
dec
jne
mov
push
mov
fchs
sbb
fistpl
cmpb
test
mov
outsb
pop
xor
and
mov
jmp
ljmp
mov
faddp
fsubrs
not
shl
fimull
inc
jmp
sbb
into
xlat
js
push
sti
scas
stc
xchg
sub
inc
imul
popl
ljmp
mov
mull
mov
inc
pop
xor
pushf
pop
mov
rorb
mov
ret
push
shlb
inc
es
push
pop
outsl
das
add
push
enter
pop
mov
xor
ret
pop
pusha
xchg
arpl
fwait
mov
std
or
scas
fldt
fstpl
fwait
adc
mov
or
fxam
add
jae
add
loope,pt
mov
ret
sub
mov
jmp
push
mov
push
sbb
pusha
or
adc
xchg
or
sub
clc
repz
jnp
jo
lret
sbb
add
movsl
push
shlb
mov
hlt
shlb
out
add
shrb
pusha
jb
mov
ljmp
outsl
pop
or
add
xor
mov
or
sbb
sub
mov
movsb
dec
push
sbb
int
pop
ret
and
add
mov
dec
mov
xor
lret
jo
cmp
jb
and
adc
call
and
sub
sbb
xorl
xchg
and
fnstenv
mov
adc
dec
testb
nop
add
mov
ss
push
outsl
inc
call
dec
jg
add
add
aam
pop
bound
pop
pop
incb
jb
sub
xchg
outsb
jmp
ja
or
jno
aam
es
cmp
ja
or
decl
jg
add
inc
dec
fdivs
dec
mov
movsl
cltd
idiv
imul
sub
mov
lock
mov
stc
add
das
ret
add
test
loope
out
ret
cmp
sub
and
push
xchg
mov
pop
ljmp
popa
jg
out
xor
xchg
flds
hlt
ss
and
sub
cmp
mov
data16
mov
mov
xor
pop
or
mov
repnz
add
lahf
lods
mov
mov
lods
add
decw
sbbl
pop
insb
popa
fs
sub
pop
mov
sub
shl
sbb
sbb
and
fsubs
pop
jb
add
or
in
data16
enter
dec
mov
testl
or
das
inc
jmp
int
sbb
add
sbb
sub
lock
mov
es
push
push
movsl
fiaddl
push
clc
lret
aaa
mov
xchg
mov
dec
inc
add
push
movsb
daa
mov
adc
push
xchg
xor
fsubs
push
scas
and
in
xchg
adc
adc
lea
testl
sbb
and
sub
sub
sub
ss
pop
pop
dec
and
int
scas
ss
call
jo
mov
and
add
fcmovbe
push
inc
push
outsb
mov
or
subb
sub
mov
adc
pusha
dec
cld
inc
mov
mov
xchg
cmpb
sub
adc
lret
mov
add
jle
adc
rorb
add
cmp
movb
cmp
jecxz
mov
in
ds
mov
sbb
ljmp
pop
or
in
dec
aam
fistl
and
jl
lods
push
fiadds
inc
aaa
or
ljmp
fdivrl
push
ss
cld
mov
add
mov
cmpsl
das
ljmp
mull
xor
mov
mov
cmp
inc
je
add
jne
popf
inc
adc
xchg
imull
or
inc
sub
or
jle
push
loop
dec
mov
xorl
imul
scas
mov
xlat
je
mov
or
sbb
out
mov
sbb
nop
or
mul
in
dec
push
int3
or
addr16
adc
pop
jge
jb
adc
out
repnz
ret
or
jg
push
jge
or
jns
jge
in
push
repnz
je
jne
inc
clc
or
xor
push
inc
mov
dec
gs
dec
xchg
and
enter
jns
add
add
push
test
add
aam
push
mov
jne
mov
test
pop
roll
mov
jb
je
ud0
in
add
loope
je
les
addb
js
sub
bt
push
jbe
gs
xchg
or
jge
mov
dec
adc
and
sbb
or
add
dec
mov
loop
dec
arpl
pop
loop
push
sbb
ficomps
loop
rcr
aam
mov
outsl
jle
and
test
wbinvd
les
fisttpl
or
xor
or
or
add
add
pop
add
outsb
adc
in
test
insb
lcall
fs
mulb
mov
orb
pop
out
testl
mov
ret
push
pop
push
cwtl
pop
cs
loop
mov
and
and
inc
xor
pop
sti
or
shll
add
dec
in
dec
adc
and
adc
xchg
andl
or
and
insb
jl
hlt
dec
sub
mov
xor
mov
fnstcw
mov
dec
sbb
fs
std
dec
je
sub
xchg
mov
movsb
push
or
adc
dec
dec
jl
jns
sub
sbb
push
in
fldcw
mov
adc
adc
pop
xchg
loopne
fstl
mov
gs
fcmovnbe
adc
das
lret
scas
and
mov
dec
jg
fistpl
adc
and
add
je
sbb
bound
pop
je
push
enter
xor
add
dec
pop
enter
inc
and
pop
repnz
add
outsb
cmp
jl
pop
mov
pop
fildl
sbb
dec
add
jge
push
aas
mov
mov
or
add
adc
cs
or
jle
jo
or
cmp
mov
mov
cmp
pusha
sub
mov
orl
test
push
pushf
gs
add
add
shlb
add
dec
lods
je
sub
inc
fcmovnu
mov
adc
clc
imul
lods
addl
push
and
pop
xor
add
fdivs
adc
nop
in
dec
dec
jmp
adc
xchg
push
xor
jae
movsb
sbb
pop
pop
shlb
in
mov
lds
dec
andb
nop
jl
mov
and
call
or
jbe
les
out
dec
pop
cmpb
adc
sbb
mov
mov
gs
pop
push
loopne
push
xor
or
lea
stc
xchg
nop
shl
mov
sub
fimuls
popf
and
sub
adc
xchg
js
fwait
xchg
dec
mov
iret
dec
mov
adc
or
jmp
mov
mov
inc
dec
das
push
dec
add
add
cmpb
or
add
or
mov
ja
mov
test
adc
xchg
and
cmp
or
mov
mov
sub
mov
lea
push
push
or
pop
cmp
lock
mov
inc
or
adc
loope
inc
pop
and
cmp
jg
je
mov
xor
dec
fwait
hlt
or
mov
mull
dec
int3
jno
jge
cmpsb
mov
xor
ret
inc
add
aam
mov
pop
mov
inc
das
out
ljmp
lahf
loopne
pop
adc
sub
jae
cmc
jb
cli
imul
sub
jle
xlat
dec
adc
ret
push
fwait
rorl
dec
mov
outsb
mov
outsl
jbe
fildl
sub
or
and
in
add
push
dec
dec
mov
lret
push
shll
push
mov
pop
push
mov
add
and
sub
mov
push
mov
jae
outsb
fildl
and
pop
pop
repnz
inc
icebp
push
sar
cmp
incl
inc
xchg
and
pop
sti
xor
pusha
sub
ds
fildll
je
dec
je
sbb
sub
je
adc
add
sbb
push
sub
jo
faddl
outsb
xchg
and
mov
jns
cmp
add
mov
add
inc
and
add
mov
jge
cmp
repz
mov
xchg
push
mov
add
adc
lds
or
or
add
xor
or
add
fisubrs
dec
jne
xchg
push
int
roll
or
sti
arpl
dec
movsb
xor
push
cld
pop
jae
xor
sub
add
andl
shlb
js
sahf
push
or
push
cmp
hlt
pop
cld
jmp
jb
cld
xor
ret
outsl
sub
pusha
dec
fadds
fadds
fsub
in
shll
mov
fsubs
jb
push
ret
push
mov
xchg
js
iret
ja
js
and
adc
ds
sbb
jne
dec
ja
mov
rorl
pop
movb
adc
in
nop
and
mov
mov
and
inc
cwtl
or
add
hlt
push
jne
test
xor
adc
or
repz
sbb
ljmp
into
add
lock
mov
mov
sub
jb
and
pop
ja
cmp
push
push
lock
imul
data16
add
nop
or
xor
ss
hlt
out
xchg
data16
jmp
popf
mov
jg
js
pop
sub
xor
jo
xor
test
ret
out
dec
rcrb
or
popa
sub
push
in
inc
mov
and
jbe
in
fstpt
jle
adc
fs
cmp
ret
mov
inc
negb
test
popa
movsl
pop
mov
or
fs
pop
mov
sahf
pushf
jo
shlb
les
aam
push
movsl
fwait
mov
shlb
hlt
repz
cmp
sub
or
push
jne
mov
push
sbb
pop
xchg
bound
sub
scas
popa
pop
outsl
je
sub
xchg
lds
ss
test
push
out
pushf
or
mov
jl
mov
xchg
cld
fdivrs
xchg
add
add
add
inc
mov
pushl
or
ficoms
movsl
xchg
mov
and
je
dec
adc
and
xchg
les
scas
add
aam
mov
jmp
adc
daa
fistpl
push
push
or
gs
jle
jns
or
inc
jb
popf
nop
or
add
in
test
add
nop
inc
sbb
test
sbb
push
sbb
sahf
cmp
add
inc
pop
or
jne,pt
dec
subb
add
push
cmp
add
jp
test
adc
inc
test
shll
push
inc
mov
inc
pushf
inc
mov
mov
mov
movsl
leave
into
mov
jnp
xchg
or
leave
sbb
mov
jo
es
scas
push
call
out
cmp
sub
das
inc
adc
inc
outsb
xchg
fwait
dec
js
sbb
pop
mov
adc
or
and
sub
fucomp
xor
jb
push
fcoml
pop
fwait
jmp
or
push
mov
aam
or
and
cmpsl
loop
mov
push
push
xor
bound
fdivrs
push
xchg
ljmp
adc
mov
xchg
xchg
sbb
push
xorb
cmp
or
add
inc
test
push
inc
test
shll
adc
in
mov
inc
das
mov
and
das
or
imul
cmovo
addb
sbb
rorl
adc
ss
push
jle
lret
or
pop
mov
sbb
mov
es
jle
ficoms
inc
jecxz
nop
push
loope
adc
cs
push
pop
add
fwait
int
pop
adc
inc
ja
rcr
dec
sub
pop
pop
mov
xchg
inc
xchg
xor
lock
lahf
sub
lock
inc
xor
sti
or
jne
pusha
add
sbb
cs
addl
push
fwait
mov
lret
in
mov
cs
popa
jo
and
fsubs
cmp
jb
mov
daa
jmp
jne
jmp
nop
pop
test
or
and
push
divb
add
mov
dec
enter
popf
add
lahf
or
pop
loope
lods
mov
insl
cmp
push
cltd
mov
pop
pop
dec
xchg
dec
sub
xor
inc
insb
mov
push
mov
mov
ljmp
jne
shll
add
and
cmp
add
inc
or
push
push
call
insl
stos
adc
std
addl
add
js
sbb
or
mov
jns
add
jne
sbb
push
sub
test
inc
pop
in
push
lret
sub
inc
sbb
or
fs
push
jbe
clc
in
xchg
iret
xchg
pop
rorb
clc
ret
adc
rolb
or
repz
xor
xor
xor
stos
sub
lods
in
mov
adc
push
push
int
mov
add
pop
xorl
mov
shll
and
lock
push
fwait
and
lock
add
or
jne
aas
test
lock
lea
xor
subb
mov
inc
push
sti
jmp
mov
adc
push
sub
adc
fsubs
mov
dec
and
xor
loope
out
repnz
je
jne
sbb
jmp
jno
push
movsb
in
in
jle
and
fstl
and
push
xchg
jae
or
dec
push
int
add
mov
outsl
sbb
inc
push
xor
cmp
in
cmpsl
scas
imul
push
lea
mov
out
aam
mov
sbb
out
std
and
ljmp
xor
sbb
sbb
test
jecxz
push
out
add
es
pop
imul
xor
add
xor
xlat
adc
inc
sbb
mov
sub
out
mov
aam
scas
add
mov
je,pn
mov
push
icebp
jl
cld
cld
inc
inc
add
insb
sbb
rorl
xchg
sti
fiaddl
cmp
inc
and
mov
test
xchg
lods
sub
mov
hlt
leave
enter
add
lahf
cmp
pinsrw
subb
jecxz
dec
lea
push
out
sbb
mov
add
sub
or
shrb
rorb
cmp
xor
call
sbb
mov
dec
iret
mov
add
mov
bound
jnp
sbb
pop
cmp
cmpsb
mov
pushf
xchg
dec
sbb
je
dec
imul
or
enter
mov
and
sub
pop
inc
add
add
cmova
stos
out
or
or
and
xchg
push
fimull
call
bndldx
and
add
adc
adc
inc
xchg
ret
enter
ss
push
and
sbb
int3
pop
bound
pop
leave
dec
inc
cmp
in
fdivrs
pop
gs
mov
jb
cwtl
repz
dec
popa
xor
cmp
enter
movsl
movsb
and
clc
int
mov
and
incb
and
ret
cmp
push
or
arpl
inc
mov
add
mov
jno
call
lea
mov
jg
cmp
add
mov
dec
and
jmp
mov
fsubs
cld
outsl
repz
sbb
or
lret
jo
pop
pop
pop
mov
cmc
or
push
sub
dec
outsb
add
dec
pop
xchg
sub
sub
jb
dec
adc
sahf
insl
jmp
pop
nop
and
jae
mov
adc
test
xchg
imul
jmp
or
repz
fwait
loopne
int
adcb
jbe
enter
rcrl
andb
and
xchg
insl
imul
in
push
lock
clc
daa
jns
xor
loopne
les
and
xchg
or
popa
add
sarb
pop
js
call
out
data16
lds
mov
call
roll
aam
sahf
sub
pop
addr16
pop
pop
call
xor
mov
push
cmp
je
jmp
addr16
aas
xor
inc
xor
in
jmp
and
add
mov
add
push
pop
or
or
sub
or
push
push
scas
or
test
mov
inc
out
push
mov
loop
mov
test
cmp
enter
pushf
gs
in
sub
setae
mov
mov
repnz
in
aad
les
jo
mov
add
test
jmp
sbb
les
decb
sbb
sub
mov
push
dec
mov
mov
cmp
or
les
es
leave
enter
sarb
add
data16
mov
leave
rorl
into
fcomp
jmp
cwtl
nop
ds
pop
cwtl
xchg
xchg
dec
inc
pushf
mov
xchg
nop
add
dec
add
mov
xor
xchg
sub
scas
aad
orb
imul
and
push
rolb
ret
or
sbb
std
outsb
add
xor
rorl
xor
frstor
xchg
hlt
add
mov
adc
stc
inc
xchg
pop
xor
sub
inc
enter
enter
ljmp
mov
int3
add
mov
mov
pop
nop
mov
in
fcomp
loopne
clc
fldt
jae
popf
rol
mov
lock
call
cltd
js
add
repz
mov
mov
inc
add
push
push
and
nop
or
xor
mov
push
cmp
shl
xchg
dec
xchg
js
adc
aam
gs
les
lahf
sub
inc
mov
stc
in
and
add
rorb
les
pop
add
pop
stc
jmp
enter
or
push
xchg
cmp
fdivl
sarb
cmpb
add
pusha
addr16
insl
lock
dec
jp
dec
mov
dec
pushf
dec
lahf
mov
push
xor
mov
and
mov
adc
into
adc
loop
movsb
jns
dec
or
inc
addl
jmp
mov
mov
dec
add
mov
pushf
add
adc
dec
int3
popf
dec
xorb
aam
xor
sbb
pop
adc
and
lods
lock
or
or
add
in
mov
inc
ds
mov
pop
xor
pop
nop
and
sbb
pop
adc
fs
stos
das
sbb
dec
adc
inc
cmp
dec
mov
shll
push
pop
lret
in
cmp
jge
cmp
jl
add
dec
fsts
push
push
xor
push
loopne
testl
inc
cwtl
mov
adc
aad
add
jbe
xor
repnz
stos
cli
pop
and
and
inc
xor
jno
or
jg
add
add
sub
dec
arpl
and
leave
insb
or
roll
and
in
jge
or
sti
jecxz
push
cli
in
ret
adc
addb
bound
and
and
loop
adc
pop
add
dec
xor
int3
loope
nop
sub
cmp
adc
jb
pop
das
sbb
rcr
negb
arpl
ljmp
or
stos
sub
rclb
dec
je
pop
mov
dec
in
test
sbbl
pop
cmp
andb
pop
cmp
adc
ret
mov
adc
or
cmp
add
mov
add
cmp
in
mov
clc
sbb
arpl
pushf
xor
add
lods
aas
adc
sbb
adc
lds
cmp
xor
fdivs
mov
mov
push
add
push
sahf
sbb
pop
sbb
mov
push
pop
rorb
xchg
inc
enter
lock
xor
push
jg
daa
mov
sub
aam
shlb
add
pop
rcrl
sahf
jg
hlt
add
mov
adc
hlt
sbb
sbb
cmp
pop
push
fdivrs
movsb
hlt
or
mov
in
push
mov
xor
xchg
cwtl
dec
pop
adc
aaa
push
enter
mov
sub
jb
inc
mov
mov
stos
lret
out
push
dec
jne
add
cmp
jge
sub
inc
or
enter
adc
ja
add
mov
xchg
mov
inc
fs
add
mov
fimull
cmp
inc
scas
or
jno
jbe
mov
mov
data16
arpl
pop
xorb
xor
call
sbb
jle
loopne
pop
mov
js
rcrb
push
add
lods
dec
xchg
insb
jo
rcrl
inc
sub
inc
out
fucomi
fstl
mov
out
outsl
mov
setne
mov
cmp
mov
sbb
add
add
cmp
push
scas
add
sbb
rclb
js
imul
add
add
lods
cmp
cmpw
adc
mov
or
sarl
jmp
imul
xchg
shlb
pop
fsts
sub
and
push
ja
insb
mov
jne
push
jge
test
test
sbb
ret
incb
push
inc
mov
and
mov
test
pop
cwtl
test
push
mov
sti
mov
sbb
dec
aam
aam
push
mov
fldenv
call
mov
mov
mov
push
in
mov
decb
cmp
das
mov
inc
sbb
loopne
fmull
jns,pn
mov
and
fcomp
mov
std
mov
mov
aas
adc
adc
mov
mov
and
sub
mov
mov
ret
or
test
mov
test
cmp
les
enter
popa
rorb
nop
addl
in
mov
outsb
out
or
push
mov
xchg
stos
das
inc
sbb
nop
inc
push
jo
or
sar
or
add
shrb
lret
nop
adc
dec
push
insl
ja
mov
das
fs
xlat
push
insl
add
fs
gs
mov
insl
or
in
or
dec
push
xor
andl
and
push
and
cmp
or
jae
mov
mov
mov
incb
sub
add
or
cmp
in
push
pop
mov
in
rdtsc
imul
popf
cli
pushf
mov
or
add
mov
pop
repz
scas
incl
imul
gs
jo
arpl
js
add
ret
mov
fcoms
sub
xor
rclb
pop
shll
test
and
insb
cwtl
xor
shll
add
or
shll
or
lcall
pop
pop
push
shll
inc
pop
sbb
xor
ja
sub
imul
sbb
pop
adc
cmpsb
cwtl
or
je
daa
aaa
clc
xor
ja
icebp
adc
lock
add
xchg
repz
mov
loopne
faddl
imul
aam
fstps
hlt
int3
sbb
les
sbb
xor
dec
je
add
repz
rep
mov
test
hlt
movsb
in
inc
lcall
daa
fwait
inc
cwtl
cmp
xchg
hlt
repz
mov
ja
addb
fnsave
mov
test
adcb
xchg
int
shl
js
repz
insb
dec
ss
adc
insb
out
jae
repz
push
and
pusha
cmpsl
pusha
dec
pop
hlt
imul
hlt
xor
xchg
daa
push
add
push
scas
push
xor
bound
push
pop
pop
fistpll
cld
add
in
sub
sub
or
add
icebp
adc
cltd
movsb
pop
cmp
sbb
sbb
add
and
xchg
dec
and
adc
aad
in
mov
loop
loopne
dec
add
push
ds
nop
xor
nop
add
push
or
xor
enter
cwtl
or
es
nop
mov
es
test
std
in
insb
or
adc
repnz
sub
pop
scas
lcall
sub
adc
divb
mov
pop
loopne
jo
push
xor
cmp
cltd
pusha
test
mov
jb
cld
iret
push
adc
andb
mov
adc
pusha
pop
inc
scas
jle
ja
adc
out
push
mov
mov
js
push
add
aaa
test
hlt
pop
ret
dec
adc
das
adc
lds
ja
mov
stc
imulb
pop
sbb
cs
add
jmp
sbb
in
lods
mov
cld
mov
out
dec
pop
push
adc
mov
test
xor
and
jb
lea
in
fdiv
xlat
jge
inc
enter
pop
mov
xchg
add
aam
gs
mov
jno
pop
mov
and
fsubp
and
cmpb
sbb
xchg
xchg
leave
out
mov
add
clc
adc
push
xchg
jmp
dec
jle
xor
pushf
test
push
mov
nop
adc
cwtl
cld
test
dec
cmp
xor
imul
or
rolb
pop
enter
adc
inc
js
xor
fs
adc
inc
inc
lea
dec
mov
push
pushf
jae
cmp
aad
arpl
push
and
add
mov
stc
jns
pop
mov
cmc
push
repnz
mov
arpl
sbb
arpl
push
push
jo
inc
or
add
mov
adc
aas
adc
xchg
dec
pushf
mov
cs
movsb
les
int3
lods
in
dec
cs
fcoml
in
dec
cs
sbb
les
mov
mov
push
or
repnz
sbb
inc
imul
jns
fadds
dec
xchg
cmp
xchg
fdivl
loopne
xchg
cmp
lock
in
sahf
xchg
dec
lcall
inc
cwtl
dec
in
pop
outsl
insb
gs
jne
sahf
inc
mov
stos
cmp
fwait
sub
push
jns
lods
adc
cmp
in
add
outsl
je
fs
jne
cmp
enter
insb
inc
imul
mov
pop
outsl
fs
outsb
dec
jb
lods
dec
push
jns
outsl
jb
insl
jo
sbb
outsl
insl
push
je
rsqrtps
mov
fldcw
inc
popa
je
adc
pop
lahf
mov
outsl
insb
je
inc
jns
mov
nop
add
aaa
shlb
lock
cmp
enter
cmp
add
addl
sub
mov
sub
fldl
in
adc
adc
dec
testl
mov
or
or
add
jmp
fildl
call
xor
test
les
fidivrl
scas
cmp
jne
test
cld
sub
adc
adc
push
inc
jne
and
xlat
push
shll
jmp
pop
sbb
idiv
add
jae
inc
adc
sysret
inc
mov
in
mov
pop
sub
xchg
test
and
adc
enter
or
arpl
shrl
leave
pusha
arpl
arpl
or
pop
sub
addr16
nop
or
arpl
inc
popa
fs
clc
lds
cmp
fwait
or
lret
insb
adc
sub
nop
adcl
popa
jns
imul
mov
add
addr16
xchg
sbb
cli
inc
jb
mov
sbb
adc
insb
adc
mov
sbb
rolb
xchg
mov
dec
xchg
mov
pop
cmp
or
pop
arpl
arpl
push
popa
mov
xorb
xchg
arpl
jecxz
or
inc
sbb
mov
ret
cld
mov
pop
mov
and
sub
shll
test
add
in
gs
mov
in
mov
mov
pop
push
jns
movb
adc
mov
call
push
xchg
in
jo
mov
fcomps
push
lret
in
add
in
dec
push
out
out
mov
das
clc
mov
and
xor
in
xor
mov
fidivrs
adc
in
and
fld
out
sub
clc
daa
cmp
jg
xor
add
mov
outsb
mov
clc
sub
add
sti
out
pxor
je
dec
je
push
or
add
lahf
mov
lods
mov
dec
adc
dec
cmp
add
jbe
and
add
loopne
sbb
or
or
lods
mov
gs
xchg
cld
sub
mov
xchg
xor
add
cmc
pop
nop
int
dec
lock
mov
out
xchg
pusha
in
and
movsb
cltd
in
int3
repz
cmp
loopne
xchg
jmp
imulb
imul
movsb
and
mov
adc
push
adc
enter
mov
push
aam
pop
ss
mov
fcom
sahf
mov
enter
popf
inc
ss
cwtl
rorb
rcr
xor
push
add
movsb
pusha
dec
fsubp
or
in
pop
test
scas
in
push
shl
sub
sub
inc
mov
je
fld
mov
mov
shr
popa
or
jmp
xlat
inc
push
enter
shrl
add
push
mov
pop
add
add
fbstp
adc
lea
xchg
cmpl
lahf
ret
add
jge
ja
xor
xor
test
and
mov
out
testb
pushf
dec
jne
pushf
xchg
das
andb
push
mov
outsl
add
push
dec
sub
inc
mov
push
jl
sub
call
rcll
jge
mov
testb
stos
push
add
mov
xorb
adc
adcb
cmova
aam
dec
and
xchg
das
push
in
inc
je
and
add
pop
mov
clc
jmp
adc
push
clc
push
out
pop
outsb
movzwl
lock
add
or
xor
lea
add
push
lea
idivb
jbe
mov
mov
hlt
adc
dec
inc
push
lods
inc
xchg
and
push
add
and
nop
inc
test
mov
sahf
jne
inc
inc
inc
add
movsb
or
or
push
and
fnstenv
sbbb
jae
test
jbe
push
or
popa
jae
mov
push
ss
jne
add
mov
inc
in
in
sub
push
rclb
das
sti
adc
or
mov
add
test
inc
or
and
adc
push
jl
or
idiv
and
or
push
mov
je
int
cmovne
outsb
mov
and
or
mov
fwait
cmp
insl
cld
pop
push
cmp
mov
gs
mov
fsub
mov
inc
clc
fimull
insb
sub
add
xchg
or
or
sub
pop
mov
sbb
fs
call
sub
std
jl
or
jle
idivb
inc
je
outsb
mov
xchg
nop
lea
test
neg
or
or
mov
xlat
es
mov
push
in
dec
enter
loopne
sbb
mov
call
movsb
pushl
add
out
inc
push
in
nop
or
mov
pop
adc
xchg
add
shl
push
mov
xchg
xchg
xchg
cs
push
sbb
sub
imul
test
popa
and
xchg
pop
ds
add
mov
inc
aaa
lret
shl
sbb
adc
adc
add
mov
pop
xor
movups
rcll
sbb
or
mov
adc
je
lods
add
and
jne
mov
cmp
add
cmp
or
add
mov
loopne
addb
cmp
sbbl
fiaddl
mov
sbb
inc
mov
inc
hlt
sbbl
addl
push
mov
or
dec
push
mov
add
mov
je
xor
inc
std
adc
add
push
rol
sahf
gs
in
jmp
and
lock
jo
test
pop
hlt
add
or
add
lock
psubsb
or
leave
cmp
sbb
push
movsl
push
fsts
imul
and
inc
adc
cmc
jbe
xor
push
mov
push
adc
xor
inc
mov
int3
lret
scas
lods
xchg
mov
sbb
inc
mov
jle
xor
mov
sub
xchg
sbb
hlt
rcrl
ret
mov
xor
mov
leave
xor
das
aas
jb
cmp
adc
sub
xchg
pop
mov
fistl
in
and
adc
aam
nopl
adc
ss
lods
mov
in
xchg
xor
imul
push
loopne
sbb
jle
iret
lea
sub
shlb
lcall
dec
lret
add
insb
lcall
adc
jmp
or
cld
cmpsb
pop
jle
add
mov
rcr
mov
mov
iret
sti
or
sbb
dec
add
lds
lock
loope
ss
dec
in
fmuls
mov
sbb
xchg
xchg
push
add
clc
sub
push
fldt
adc
sti
add
hlt
orl
lock
mov
and
jae
add
xchg
jge
or
mov
sbb
mov
sub
lret
xchg
fadds
in
pop
int
dec
shll
cltd
in
or
sbb
fmull
mov
dec
or
sbb
inc
sub
sbb
mov
sbb
xchg
jmp
gs
lods
ror
sbb
jo
mov
cmp
nop
in
pop
andl
mov
das
xor
cld
ljmp
je
jmp
xchg
shll
adc
fadd
inc
xchg
rol
and
test
lcall
mov
cmp
dec
pop
iret
add
dec
mov
xchg
int
or
das
push
jno
mov
and
xor
add
adc
cltd
xor
fsts
mov
and
sbb
loope
psubusw
cmp
mov
sub
mov
push
xor
pop
mov
or
mov
push
lods
pusha
lods
push
cltd
sarl
adc
pop
sbb
test
out
inc
push
stc
ljmp
in
mov
pushf
mov
cmp
push
pushf
sbb
push
cwtl
xchg
sbb
jmp
rclb
dec
push
push
fwait
fs
ds
nop
nop
and
pop
cmp
mov
daa
ret
xor
adc
and
xor
int
xchg
lock
mov
orl
pusha
fldenv
scas
add
dec
push
icebp
lret
pop
out
push
inc
ss
in
in
mov
inc
test
or
jmp
or
in
sub
push
and
mov
push
mov
sbb
enter
fildl
rcll
fmuls
js
push
sbb
loopne
sbb
and
int3
out
xor
or
fs
cmp
loopne
loopne
enter
shl
rorl
dec
sahf
shl
push
nop
repnz
or
push
and
mov
adc
insb
lcall
adc
imul
aam
bt
mov
aam
sbbl
push
xor
test
add
daa
push
sbb
les
sbb
adc
and
pop
dec
add
and
xor
push
adc
les
mov
lods
in
sbb
adcb
xor
loopne
cs
inc
loopne
fcoml
inc
loop
push
fcompl
fcoms
xor
insb
fcomps
adc
and
cs
lods
cmp
sbb
hlt
mov
fsubs
adc
nop
in
lods
enter
pop
dec
xchg
aam
add
aam
aad
xor
mov
inc
andl
cs
pusha
adc
adc
or
daa
inc
adc
dec
enter
shlb
and
rcrb
sbb
and
or
lea
test
sbb
dec
dec
xor
push
bound
mov
mov
arpl
lods
dec
test
nop
mov
movsb
adc
adc
fwait
movsb
sbb
mov
adc
push
ret
dec
and
pusha
cmp
sub
jecxz
rcr
dec
xchg
leave
inc
push
adc
xor
xor
nop
sub
iret
sub
nop
mov
add
push
lods
mov
mov
enter
pop
and
nop
sbb
or
push
aas
bound
hlt
in
loop
push
xor
sub
cmovne
je
pop
dec
jne
repz
or
invd
push
insl
popa
adc
popa
lea
sbb
push
jb,pt
push
stc
fs
fistpl
insb
push
cmove
bound
decl
jb
outsb
arpl
push
je
push
dec
mull
mov
xor
push
inc
stos
dec
inc
and
or
dec
xchg
in
xchg
mov
and
outsb
imul
inc
arpl
xchg
jge
nop
repz
inc
out
and
je
mov
xacquire
push
outsl
jb
jbe
pusha
scas
pushf
adc
rcll
mov
or
insb
dec
push
pminub
push
sti
mov
push
mov
adc
push
inc
fcom
jnp
mov
paddb
xchg
and
jmp
mov
lret
nop
pop
add
add
clc
adc
jl
cmp
push
push
jl
push
subb
jb
add
sbb
and
mov
xchg
pop
out
cs
lea
add
adc
xlat
adc
shl
and
or
fs
outsl
adc
call
loope
inc
movsb
sbb
add
punpcklbw
xchg
fwait
inc
outsb
jns
xchg
jnp
test
mov
ud1
bound
xchg
sub
or
xor
mov
mov
dec
fiaddl
xor
orb
mov
mov
jbe
sahf
inc
inc
pop
mov
and
push
xlat
testb
mov
aaa
sub
push
dec
sbbl
cmp
add
add
leave
fsubl
aam
dec
add
push
fsubr
test
xchg
push
test
cmc
push
ret
sub
push
xchg
cmp
xlat
sbb
sbb
mov
clc
cltd
pop
mov
jne
jnp
je
jl
bound
xor
pop
into
xor
clc
inc
cmp
add
pop
clc
mov
jnp
xor
lcall
add
mov
inc
xor
mov
int3
pop
mov
call
adc
mov
test
movl
push
sti
push
jle
pop
xchg
pop
inc
fcompl
dec
inc
add
inc
roll
push
adc
stos
mov
inc
dec
inc
jns
fmull
jo
loop
and
cmovne
or
int3
lds
mov
pop
mov
add
sub
add
or
sbb
mov
pop
mov
xor
sbb
pushf
xchg
mov
add
or
sub
pusha
clc
sbb
push
and
cmp
test
dec
dec
push
or
pop
mov
jae
loopne
jns
es
rcll
jbe
sub
sbb
jle
popa
jle
jle
fstl
cmp
dec
sti
pushf
fsubs
push
sub
cmp
setg
and
loopne
mov
gs
in
jne
jo
sub
dec
sahf
inc
add
aaa
fsubrp
fs
mov
lahf
push
add
inc
test
adc
adc
dec
les
mov
jne
inc
add
loope
pop
jae
ficoms
jns
lret
jl
ja
stos
stos
mov
mov
data16
mov
push
pushf
sbb
push
les
mov
nop
sbb
cmp
dec
hlt
loop
push
xchg
nop
leave
test
into
dec
jo
xor
filds
aas
sub
pop
add
fidivl
xchg
cmp
and
pusha
into
call
cld
mov
sub
or
das
or
adc
jmp
gs
popa
add
push
add
and
jno
sub
jb
sub
or
dec
dec
jge
jle
pop
add
pop
pop
bound
outsl
jle
push
pop
push
sbb
inc
cs
dec
jnp
jne
cs
jecxz
jmp
jb
and
pop
pop
je
cmp
inc
jbe
cmp
push
push
push
pop
or
addr16
outsl
arpl
imul
bound
push
pop
cmp
es
decl
adc
adc
je
je
dec
push
add
dec
subps
pop
or
jbe
push
pop
adc
jge
call
add
jbe
jl
and
xor
push
and
js
cmp
jg
cmp
xor
outsb
push
xor
xor
and
push
push
insb
or
add
pop
clc
fildll
insb
pusha
jns
cmp
jge
cmp
sub
ljmp
call
jle
push
dec
jo
dec
inc
or
push
incl
jae
sbb
push
push
jnp
push
jle
fs
imul
jbe
incl
jg
push
dec
dec
cmp
cmp
pop
inc
insb
or
ja
pop
push
or
or
sub
das
outsl
ljmp
add
cmp
sbb
sbb
add
or
sbb
or
push
fstp
xchg
add
jno
or
dec
push
push
addr16
bound
pop
sbb
fs
fstpt
jp
inc
inc
inc
scas
arpl
adc
sub
sub
inc
jbe
pop
jbe
jp
mov
jl
cmp
cmp
and
inc
xor
sbb
and
sub
call
insb
imul
pushw
xor
or
jns
add
fcomip
jg
jno
push
jnp
jbe
push
or
jle
js
sbb
sti
data16
jae
adc
loop,pn
pusha
sub
jnp
js
push
js
jge
dec
cltd
call
jle
cmp
pop
xor
bound
js
push
or
and
sub
xor
cmp
decl
std
or
pusha
cmp
rcrb
sbb
cmp
sub
sbb
jo
invd
ja
mov
pop
push
pop
je
imul
add
sbb
dec
fs
js
mov
adc
adc
push
jp
push
jle
movsl
pop
pop
pop
jl
mov
inc
jge
push
xor
sub
or
sub
jg
outsb
xor
dec
push
pop
cmp
cmp
sbb
jle
sub
jno
pop
and
push
push
pcmpeqb
push
je
add
or
sbb
jl
inc
pop
outsb
adc
jbe
push
dec
dec
sub
and
sub
inc
dec
push
cmp
call
dec
dec
inc
pop
dec
inc
pop
je
jbe
inc
sbb
adc
push
adc
decl
add
bound
push
cmp
add
sbb
cs
incb
or
adc
or
add
pop
lods
icebp
bound
dec
sbb
jne
adc
pop
xor
ja
pop
rcrl
pushl
gs
pop
pop
popa
fs
dec
and
pop
popa
idivl
iret
jmp
xor
sub
sub
or
push
adc
cmp
sbb
decl
sbb
add
or
jb
ja
ja
ljmp
fildll
ret
dec
add
add
dec
push
in
sbb
outsl
mov
inc
jb
inc
push
push
dec
push
daa
xor
clc
test
jmp
and
cmp
xor
pop
dec
enter
xor
mov
sub
push
adc
add
xor
xor
pusha
add
std
pop
clc
pushl
xor
or
adc
cmp
cmp
push
push
dec
pop
inc
arpl
fs
jg
mov
push
pop
pop
push
bound
and
dec
jo
inc
ja
icebp
sar
sub
push
inc
and
inc
dec
int
insl
jnp
insl
outsl
cld
pushl
adc
cmp
xor
or
and
cmp
push
cmp
sub
cmp
aaa
adc
sbb
imul
pop
pop
outsb
push
jl
mov
outsb
addr16
inc
inc
dec
inc
jo
add
jle
adc
mov
inc
jle
bound
and
inc
inc
lcall
fdivp
ljmp
insl
pop
imul
pop
cld
dec
add
sub
lcall
lcall
or
xor
cmp
sub
and
sub
and
jns
std
pushl
jb
or
push
jge
data16
jge
jno
push
push
jp
insl
sbb
movsl
movsl
ljmp
jns
jno
push
push
pop
sub
inc
jns
das
sub
ljmp
bound
outsb
inc
aas
push
jb
cmp
xchg
dec
push
sub
movsl
and
xor
push
pop
cmp
add
ss
sub
cmp
add
mov
push
aas
xor
sub
add
dec
dec
jg
fistps
push
jnp
bound
pop
cmp
pop
data16
push
jne
inc
jo
pop
cli
adc
jl
xor
and
cmp
pop
or
xor
dec
dec
xor
inc
outsl
push
pop
lcall
push
xor
cmp
sub
push
sbb
xor
and
adc
xor
daa
adc
sbb
das
mov
add
js
jnp
pop
fs
dec
repnz
inc
add
call
sbb
gs
das
inc
jg
jno
dec
push
jl
push
sub
xor
pop
pop
idiv
outsl
cld
pop
pop
arpl
pop
test
fs
pop
gs
push
sub
push
adc
jg
movsl
xor
add
adc
popa
and
sbb
clc
decl
and
jae
sub
jo
push
inc
pop
push
pop
vmwrite
jbe
nop
jp
inc
push
data16
dec
dec
pusha
dec
inc
sbb
das
icebp
mov
push
sub
and
push
and
jge
dec
std
ffreep
jmp
dec
cmp
jbe
xor
and
push
adc
and
xor
insb
adc
inc
sbb
push
insl
and
pusha
addr16
xor
sbb
cmp
incl
or
sub
dec
push
pop
je
inc
add
jb
push
dec
push
fstpt
adc
pop
jle
jl
js
ret
and
dec
das
pop
and
inc
sub
sti
incl
inc
xor
dec
adc
and
jb
movhps
cld
jg
add
pop
cmp
arpl
or
daa
idivb
ss
push
jo
pop
outsb
push
insl
push
enter
incl
imul
sbb
outsb
adc
sbb
push
add
shlb
je
push
das
and
mov
and
outsb
and
aaa
jge
jp
jae
or
incl
outsb
sub
or
add
cmp
add
cmp
aas
sbb
in
imul
outsl
jae
dec
jne
push
das
cmc
inc
push
dec
or
add
add
outsb
jl
popa
in
aaa
jle
pop
imul
dec
adc
addr16
js
imul
lock
and
inc
insb
popa
outsl
cwtl
arpl
ja
mov
mov
pop
cmp
and
or
adc
cmp
sbb
popa
or
fs
add
xor
dec
mov
adc
push
push
bound
popa
jae
sbb
das
call
sub
dec
jl
inc
jns
insb
imul
pop
inc
daa
inc
push
pop
pop
addr16
arpl
rcl
lcall
ds
cmp
xor
mov
dec
add
mov
pop
cltd
insl
xor
adc
pop
and
and
cmp
jmp
xor
jno
push
or
pop
or
push
push
dec
inc
jle
push
or
jl
bound
sbb
cld
xchg
pop
jl
jne
pop
bound
sbb
and
mov
idivb
pop
push
insb
pop
imul
faddl
and
sub
pop
push
or
and
or
sub
mov
int
shll
adc
jp
pop
cltd
clc
xchg
jg
insb
adc
jo
pop
dec
push
dec
lea
push
je
dec
inc
mov
add
sbb
shrb
jo
imul
jle
outsb
daa
data16
jg
and
aaa
dec
pop
dec
push
arpl
inc
push
push
daa
or
dec
adc
das
mov
or
arpl
xor
add
jp
jg
mov
and
jl
sub
jge
dec
add
jge
pop
addr16
jnp
or
bound
add
sbb
inc
inc
imul
cmc
dec
dec
push
imul
pop
lret
dec
inc
lods
ljmp
cmp
jge
cmp
dec
jae
je
push
add
xor
sub
adc
sub
mov
and
ds
sbb
mov
or
cmp
pop
jmp
sub
or
loope
or
ja
jae
les
push
or
sbb
xor
xor
fsubrp
dec
fs
jl
dec
xchg
cld
jg
outsl
jmp
data16
js
cmp
pop
ds
arpl
push
incl
sbb
ss
and
fldt
je
adc
cmp
sub
add
pop
jns
adc
cmp
adc
outsb
cmovne
dec
push
dec
mov
dec
cld
mov
or
pop
dec
jae
popa
dec
jno
adc
jo
mov
push
bound
pusha
pop
push
inc
addr16
mov
rcr
fildl
cmp
add
xor
sub
jge
daa
test
cmp
and
push
decl
jle
jo
sub
xor
push
jno
cmpsb
or
jg
pop
add
dec
or
jl
pop
js
jo
insl
adc
outsl
jg
push
decl
dec
jnp
push
arpl
bound
js
ds
push
inc
incl
sub
push
xor
push
xor
inc
sub
push
sbb
sbb
push
mov
or
fs
xor
ja
or
pushl
adc
add
sub
jnp
pop
inc
punpcklbw
jp
pop
jne
bound
xchg
push
mov
jge
popa
insb
push
bound
dec
push
jl
outsl
das
lock
dec
and
jmp
jnp
push
jo
dec
inc
sti
das
cmc
adc
and
pusha
xor
sub
aas
sbb
cmp
sub
popa
add
add
add
xor
jl
sub
jbe
push
push
inc
dec
sbb
pop
xchg
push
sub
inc
jo
or
ljmp
jle
inc
inc
pop
push
or
sbb
outsl
inc
es
push
and
incl
push
popa
push
dec
insb
xor
bound
pop
dec
or
add
jle
inc
das
ss
sub
das
adc
or
sbb
xor
dec
outsl
push
sbb
xchg
daa
and
add
cmp
aas
sub
push
comiss
and
rcrb
js
dec
dec
add
hlt
pop
daa
push
pop
pop
jge
mov
dec
mov
pop
dec
dec
pop
out
pop
jo
and
jg
and
inc
outsl
sub
push
sub
ss
ud2
jge
rolb
xor
add
push
pop
mov
sub
jmp
push
bound
jp,pt
sub
add
add
xor
jg
jbe
shl
aaa
sbb
pop
jg
or
push
add
sbb
lds
inc
inc
or
or
jo
inc
and
jle
dec
ja
pop
inc
aam
call
jae
imul
pop
or
cmp
push
ss
or
mov
xor
add
sbb
ss
add
mov
sbb
sub
cmp
push
push
xor
in
pushl
pop
push
pop
sbb
std
sbb
sbbl
jg
xchg
loope
jnp
inc
push
sub
jno
sub
das
fnstsw
mov
and
inc
dec
xor
gs
pop
je
mov
sub
add
jg
outsl
sub
aaa
sbb
pop
and
js
cmp
daa
add
jg
stos
je
sub
jb
dec
pop
pop
jb
jno
and
sbb
jge
push
loopne
lock
popa
pop
adc
loope
push
pop
inc
daa
inc
inc
mov
push
push
pop
jle
pusha
xor
test
arpl
imul
call
or
cs
cmp
pop
adc
sub
add
cmp
sbb
sbb
pushl
push
jnp
push
or
jle
es
xchg
decb
test
rcr
jmp
jmp
jae
or
mov
or
inc
jmp
push
adc
inc
mov
addps
dec
dec
jmp
jne
jmp
xchg
jmp
aad
inc
insb
push
jmp
jmp
cmp
frstor
jmp
xor
sbb
ret
cmp
mov
jmp
inc
jmp
cli
in
es
jmp
loop
jmp
push
jmp
push
hlt
btr
jmp
push
insl
mov
test
add
inc
call
rorb
movb
inc
mov
jl
push
add
lock
xchg
sub
cld
mov
add
and
out
mov
add
mov
jle
mov
mov
cli
das
mov
cld
jno
jne
mov
dec
jmp
stos
add
jne
fcomps
sub
pop
andl
add
subl
push
scas
add
push
fwait
jnp
or
loopne
das
xor
mov
hlt
and
or
fiadds
sub
mov
loop
and
jne
mov
nop
add
or
call
sbb
xor
xor
push
cmp
inc
inc
mov
inc
inc
dec
dec
dec
or
dec
push
mov
jns
jg
add
data16
insb
insl
outsb
outsl
xor
jno
je
jbe
xor
cmpsl
sub
and
addb
mov
xchg
add
or
insb
cmp
adc
push
add
in
fnstenv
sub
clc
inc
push
add
cs
int
cmp
pusha
scas
loopne
int3
mov
in
pop
pushf
inc
fimuls
enter
cld
stos
fsubl
xor
sahf
movsb
add
inc
js
jns
scas
sti
enter
pop
jo
xchg
or
add
cmp
shr
push
je
mov
cmp
dec
pop
mov
jecxz
loopne
and
fnstenv
sbb
shrb
ficomps
push
mov
inc
loopne
int3
mov
test
mov
sub
xchg
fsubl
lea
jbe
call
push
rolb
add
mov
les
out
push
push
adc
mov
dec
popa
rolb
lahf
sub
mov
mov
jne
xchg
pop
adc
inc
pop
jns
je
sub
xchg
cmp
or
add
and
xchg
add
jbe
xor
mov
add
pop
pop
and
jg
mov
daa
lret
int3
enter
enter
fcomp
fxch
fdivl
loopne
jecxz
in
push
out
jnp
outsl
inc
push
jne
je
and
and
inc
xchg
or
popa
je
xor
or
mov
inc
add
dec
pop
add
add
adc
test
sbb
lret
popa
notl
data16
adc
add
dec
inc
aas
sub
std
ja
add
and
and
add
lock
divb
push
add
adc
shll
cmp
shll
push
xor
orb
shll
dec
shll
call
xor
add
enter
add
fs
gs
nop
inc
mov
pop
inc
dec
push
jb
sub
cmp
leave
xor
in
dec
pop
add
and
movsb
pop
pop
pop
mov
repnz
pop
pop
jo
int3
iret
add
and
ja
xchg
and
add
cmpsb
add
mov
imul
shll
pop
xor
xor
mov
pop
add
add
adc
jmp
add
out
adc
jecxz
or
loopne
fdivs
mov
or
add
cwtl
add
test
jbe
adcb
jmp
adc
pop
dec
push
push
mov
outsl
enter
xlat
je
enter
das
dec
pop
add
add
subl
add
push
cmp
jmp
xlat
pop
mov
pusha
pop
arpl
popf
icebp
mov
jo
xchg
push
arpl
mov
and
jmp
mov
enter
mov
and
fwait
jo
scas
jmp
into
aas
xor
sbb
lock
loope
jecxz
or
xlat
je
mul
inc
adc
jae
pop
cwtl
or
outsl
xor
mov
int
orl
and
push
gs
push
aas
mov
pusha
inc
push
dec
mov
lahf
add
nop
push
adc
popa
test
pop
add
inc
add
adc
rorb
fldenv
test
xor
or
aas
adc
add
push
add
add
dec
add
aaa
fwait
jnp
add
or
add
dec
add
dec
mov
jge
adc
popl
push
or
add
rorb
incl
xchg
add
add
add
add
std
jg
mov
inc
pop
cmp
scas
add
add
and
arpl
add
add
mov
jg
jno
add
jg
fbstp
mov
testb
pop
call
in
add
add
aad
add
cmp
mov
test
add
sarl
leave
cmp
fcomi
in
xchg
iret
dec
cmp
add
shrl
movsl
and
mov
add
ljmp
data16
int3
movsb
mov
jecxz
add
fildl
jns
call
pop
add
push
lcall
add
add
cmp
jbe
lods
or
das
gs
mov
xchg
add
mov
in
mov
cmpsl
jp
or
pop
ret
jmp
mov
add
movsl
es
sbb
jge
std
add
add
leave
add
jecxz
idiv
or
sub
adc
mov
fstpt
push
inc
or
mov
rolb
mov
mov
xchg
push
add
mov
je
mov
xchg
lea
test
xchg
mov
xor
sti
fildll
sub
xor
jl
add
dec
cmpb
faddp
mov
cs
inc
add
add
xchg
pop
fsubs
ret
jg
fcompl
and
add
repz
mov
bound
outsl
das
insb
mov
xchg
lcall
decl
fildl
mov
push
stc
add
jle
std
jnp
push
mov
fcomi
add
dec
jo
mov
sbb
sub
fnstsw
pop
fidivl
in
jg
inc
ss
xor
mov
mov
lahf
sub
pop
and
enter
sti
inc
jo
rorb
lret
and
enter
pop
add
mov
out
mov
and
fidivl
filds
mov
dec
inc
add
dec
mov
mov
sub
add
add
data16
arpl
jo
mov
adc
imul
mov
insl
jnp
mov
mov
lods
mov
sbb
pop
inc
fldl
pop
outsb
imul
mov
adc
xchg
mov
popa
add
push
sbb
sahf
dec
out
jbe
sahf
xchg
data16
lea
stos
pop
push
imul
scas
mov
in
jae
add
rol
push
jae
fcmovnu
mov
mov
imul
jae
hlt
aas
addr16
dec
int3
movl
add
test
daa
add
fldt
gs
push
lods
imul
jp
ds
mov
pop
fdivs
mov
inc
jno
xchg
jle
loope
lods
imul
lcall
sbb
cld
leave
test
mov
or
mov
ja
mov
fstpt
aad
cmp
in
rcr
rcrb
cmp
add
lods
sub
jg
add
lods
je
stc
rclb
jb
mov
jbe
in
divb
les
pop
adc
ror
xchg
clc
and
mov
mov
mov
and
lods
mov
push
gs
or
mov
adc
clc
insl
pop
fidivrl
je
jno
add
fcompl
fists
inc
add
ds
fisubrl
lods
pop
push
mov
mov
cmp
add
inc
or
sbb
ljmp
pop
test
and
mov
mov
fstl
sarb
jmp
mov
rolb
les
mov
pop
dec
pop
lods
xchg
sbb
jg
fcomp
movsl
repnz
xor
pop
add
push
add
add
pop
push
xlat
and
pop
ror
mov
imul
insl
mov
add
sti
mov
jno
xchg
pop
jno
push
jg
aam
insl
sti
inc
sarl
add
dec
pop
ja
jg
mov
shl
mov
pop
jg
mov
test
adc
aas
adcl
mov
out
pusha
mov
mov
and
add
add
jge
mov
mov
xchg
jno
add
add
mov
in
imul
mov
sahf
xchg
fs
sub
xchg
data16
mov
sub
sbb
sahf
mov
movsb
arpl
inc
repz
inc
jns
lcall
xchg
movsb
sbb
jns
lcall
xchg
movsb
cmp
scas
push
push
movsb
sbb
lds
xchg
addr16
pop
test
mov
jns
sbb
inc
adc
push
mov
inc
lea
jno
icebp
lods
adc
mov
aas
popa
gs
roll
notb
add
push
outsb
mov
imul
enter
outsb
xchg
inc
sub
sub
add
add
call
stos
fcoms
lret
xor
mov
sbb
lcall
mov
fistpl
adc
mov
lret
jg
jno
or
aad
add
xor
fistps
push
mov
mov
add
cs
cmp
add
insb
add
test
xchg
xor
lea
orl
push
mov
lods
pop
dec
push
pop
movsl
add
fimull
fidivs
rorl
fsubrs
decl
add
sub
add
jl
xor
inc
mov
sbb
insl
xchg
lcall
push
xchg
ja
cmc
incl
enter
sbb
jmp
ds
pop
fistps
pop
mov
shlb
jle
mov
sbb
sarb
xorb
int
insb
imul
jp
movsb
xchg
add
sub
push
aas
pop
pop
ss
push
push
jg
popf
aas
test
add
testl
or
insb
jmp
jge
pop
sbb
jecxz
push
das
test
iret
jmp
jo
insl
xchg
xchg
mov
xorb
imul
rcrl
and
xor
add
jp
cmc
cld
aaa
push
sbb
or
sahf
mov
cld
jnp
push
fisubrl
pop
in
jns
lods
ret
add
jno
sub
rorb
ss
aaa
mov
lods
jo
inc
mov
mov
lods
xlat
mov
test
movsl
test
cwtl
gs
sbb
decl
fisubl
mov
paddd
jecxz
paddd
sbb
fwait
cmpsl
push
popf
and
push
stc
outsl
mov
add
push
pop
add
ret
movb
incl
int3
xchg
inc
xor
cmp
lcall
xchg
movsb
sbb
jns
lcall
xchg
movsb
lret
ds
movsb
sbb
fdivrs
xchg
addr16
pop
icebp
outsb
movsb
sbb
repz
dec
jns
lcall
xchg
movsb
sbb
inc
lcall
fcomp
insl
push
sarl
das
subb
xor
inc
ja
cmp
jle
xchg
cmpsb
lods
jmp
ds
sbb
sub
lea
sahf
xchg
popw
shll
data16
imul
inc
sahf
xchg
jne
subb
cmp
imul
nop
sahf
xchg
data16
dec
mov
and
sbb
jge
lods
pop
inc
sahf
xchg
data16
mov
sbb
insb
xchg
ljmp
mov
in
push
imul
xor
std
add
fildll
out
fdivrl
fildl
fucomp
push
dec
repz
fwait
pop
roll
test
xor
insl
sbb
cmpsl
add
aaa
iret
ucomiss
out
lock
add
out
xor
jecxz
ljmp
lahf
push
lock
add
jl
fwait
out
mov
add
dec
jae
scas
or
or
dec
int
imul
pop
dec
jno
jp
int
rol
in
adc
pop
add
xchg
mov
jae
jl
mov
jecxz
jg
outsb
sahf
dec
jnp
in
in
add
ds
repz
rcr
pop
add
scas
mov
cmpsl
mov
sub
mov
aaa
sbb
or
fdivrl
out
add
aad
arpl
hlt
add
out
out
fsubrl
dec
lcall
and
popf
mov
mov
bndstx
out
stc
jmp
gs
ret
xlat
out
fdivrl
in
dec
jg
mov
mov
adc
jae
add
push
sub
push
pop
add
int
repz
add
leave
cmpsl
mov
dec
adc
mov
iret
popf
sub
in
adc
out
push
lods
add
fwait
out
faddl
imul
insb
shl
dec
out
test
push
mov
dec
repz
sub
push
in
mov
stos
dec
xchg
jg
cld
cmp
jae
jae
add
add
add
add
mov
pushl
mov
mov
cmp
iret
movsb
sbb
mov
sub
xorb
bound
shrl
movsb
xchg
movsb
sbb
aaa
add
cmp
inc
lcall
out
int
rcr
xchg
or
icebp
outsl
rorb
pop
and
enter
xor
scas
aas
push
cmpb
enter
insl
jae
xor
mov
loop
mov
movsb
jns
cmp
and
pushf
mov
sub
or
mov
adc
push
add
out
stc
xor
mulb
inc
add
rcr
cmp
aad
inc
jne
add
out
sub
adc
lahf
call
push
mov
aas
push
incl
loope
mov
mov
les
loope
sbb
out
fdivrl
add
xchg
loopne
imul
ret
mov
mov
insb
pop
mov
pop
push
adc
clc
lahf
call
outsb
insb
fcom
stc
aad
jg
adc
lea
movsb
aas
adc
xchg
xchg
mov
out
sub
dec
inc
jg
loopne
mov
sub
pop
popf
mov
scas
dec
aas
push
addb
lret
add
mov
jmp
or
inc
jg
cvtpi2ps
rcl
sub
fistps
mov
mov
fs
adc
mov
in
stos
sub
jg
and
in
mov
add
stc
insl
addl
roll
pop
ret
add
push
test
or
fdivr
cwtl
sbb
or
loop
test
les
cwtl
xchg
cs
clc
xchg
out
cmpsb
sub
sbb
addr16
lret
xor
pop
lods
jns
add
xchg
into
or
sti
outsb
dec
mov
and
aaa
outsl
jno
popa
call
mov
fcmovne
bnd
mov
mov
add
cmpsb
mov
xlat
adc
cmpl
ret
mov
ds
cmp
add
add
xchg
dec
jbe
and
lods
jg
mov
loope
sbb
pop
jbe
add
mov
mov
add
sub
jg
ret
xchg
mov
xor
push
add
setb
pop
add
pusha
fldt
fs
push
xchg
jp
arpl
jp
into
outsb
mov
pushl
mov
mov
push
and
les
sbb
add
or
js
insl
insl
or
jecxz
mov
fcompl
scas
repz
testb
xchg
outsb
or
xabort
pop
mov
and
mov
nop
ret
adc
xchg
adc
xchg
aas
lret
pushl
fcmovb
lods
rcrl
sbb
lds
push
sbb
aas
jge
cmp
stc
aaa
setp
out
stc
jb
or
popa
jp
shrl
and
out
iret
les
mov
insl
cmc
sub
dec
or
movsb
popa
bound
dec
mov
jno
lret
lcall
cmpsl
lods
jl
sahf
push
xor
inc
mov
mov
out
add
push
adc
sti
add
push
cwtl
std
outsb
xor
pop
stc
cmpsl
sub
outsl
push
mov
mov
fadd
fsubs
aas
fisttpll
push
rorb
adc
pop
fdivs
sbb
pop
and
add
insl
mov
fs
lods
push
insl
sub
insb
jecxz
cltd
cmp
outsl
add
cmp
or
mov
inc
mov
pop
fildll
loopne
mov
cmc
jno
sub
lea
mov
mov
sub
mov
push
mov
xor
push
inc
std
push
xor
add
mov
sbb
xchg
jmp
sub
mov
sbb
add
ret
inc
jnp
push
and
sub
mov
inc
cmp
nop
add
add
in
add
fdivrl
or
jne
add
imul
sbb
push
and
mov
in
push
pop
mov
mov
rclb
mov
mov
in
test
xor
jge
fimull
insl
imul
dec
mov
clc
test
popa
fistpl
sbbl
fcmovbe
lea
ljmp
xchg
dec
fdivl
aaa
test
fidivl
pop
fdivrl
jnp
ds
mov
loope
sbb
insl
pop
mov
js
add
fists
aas
insl
ret
fistps
sahf
and
and
jg
xor
out
add
stc
cmp
pushl
ficoms
sbbl
jmp
xchg
lods
mov
out
pop
sbb
stos
mov
xorb
fidivl
mov
xchg
insl
fcmovne
filds
jg
adc
jecxz
dec
xlat
fcomp
mov
inc
popl
add
lea
fmuls
lcall
cmpsb
mov
fs
adc
xor
fistpl
mov
and
adc
and
mov
ret
add
lods
enter
cwtl
sbb
or
scas
sbb
mov
push
push
ljmp
or
test
imul
sbb
inc
sbb
adc
or
decl
and
adc
push
push
fdivs
xchg
fidivrs
sub
mov
mov
add
rorl
leave
aas
lds
pop
mov
imul
into
sub
mov
jbe
movb
lea
iret
data16
out
xor
jg
lods
mov
dec
xchg
push
stos
outsb
jg
ret
fidivl
inc
rorl
bound
jbe
aas
mov
repz
push
int
imul
popa
jg
insl
and
rolb
xchg
shrb
testb
xchg
push
jmp
sub
sub
rorb
test
sahf
or
ljmp
fstpt
adc
divb
and
sti
jge
fdivrl
call
enter
add
mov
cmp
pop
and
pop
mov
mov
ret
and
out
xor
push
cmc
bound
cmc
aaa
push
outsb
pop
ds
mov
aas
mov
shl
insl
ds
mov
jg
add
aad
mov
and
jge
xor
push
jb
mov
test
popf
cmp
stc
xchg
in
mov
xchg
inc
adc
add
sub
lcall
stc
arpl
lods
add
dec
in
sub
cmp
jecxz
cmp
inc
sub
lret
dec
subb
jo
subb
or
mov
out
jmp
jge
dec
mov
insl
inc
xchg
sahf
test
paddusb
loopne
aas
fbstp
fildl
notb
adc
arpl
push
nop
rolb
mov
jg
aas
aas
movsb
xchg
arpl
ljmp
cs
call
fisubl
rorb
hlt
je
add
jg
fdivrs
pop
mov
sti
jnp
negb
jbe
cld
addb
mov
sub
or
xchg
mov
and
sub
add
push
aas
ret
leave
ja
ss
mov
fiadds
cmp
adc
cltd
mov
in
and
dec
pushf
add
insl
aaa
xchg
ss
in
out
sbb
lea
xchg
xlat
outsl
mov
xchg
sub
xor
testl
cmp
rorb
movsl
insl
mov
out
outsb
sub
insb
mov
lods
jmp
fcomps
sbb
fnstsw
add
mov
jae
add
shlb
ret
cs
mov
sub
mov
cmc
pop
adc
mov
push
jno
dec
cmp
sub
ficompl
xor
sub
ss
push
sub
jp
or
imul
and
insl
popa
stc
ret
sbb
insl
xor
andl
jne
sub
add
insb
and
insl
arpl
fwait
loope
inc
outsb
scas
sbb
push
xchg
mov
bound
mov
inc
mov
sub
mov
enter
aaa
cs
lds
mov
mov
mov
mov
or
out
push
in
fnsave
mov
xchg
pop
inc
adc
stos
lret
test
sbb
lcall
pop
xchg
xchg
mov
jp
or
pop
cmpsb
fldt
sub
push
adcb
es
rcrb
push
in
out
fimull
sub
cmc
xchg
xchg
mov
add
rol
cld
nop
push
mov
in
push
sbbb
jmp
jae
in
ret
loop
sub
mov
insl
popa
pop
adc
sub
mov
pop
fsubrs
and
addr16
mov
adc
lahf
push
push
subl
andb
pop
sub
outsb
mov
vmread
mov
insb
push
push
mov
mov
mov
or
jecxz
cmp
add
mov
fstpl
mov
jae
lret
lea
dec
add
cltd
add
add
push
fcmovnu
push
push
push
jl
and
mov
arpl
je
lea
adc
adc
push
add
sub
insl
dec
xor
xchg
sub
mov
add
or
and
xor
cmp
pop
push
outsb
push
mov
cmp
inc
mov
cld
add
in
add
bound
mov
ss
sub
or
insl
shrl
ret
pop
pop
push
lret
insl
in
ret
jl
cwtl
mov
dec
push
push
mov
inc
arpl
lret
adc
mov
jge
push
sbb
push
lods
and
sbb
fsubl
pop
lds
adc
popa
add
lock
add
mov
popa
les
in
std
xchg
pop
push
lods
ds
xor
ds
rcl
test
stos
push
and
ret
pop
fisubrl
jl
fbstp
movsb
xor
fcmovnbe
cs
push
mov
mov
mov
cmpsl
imul
mov
sub
adc
jb
and
add
insl
mov
jle
mov
sbb
and
xor
mov
pop
icebp
add
jp
mov
or
out
xor
mov
sub
mov
mov
cmp
fnstsw
xor
jbe
sub
into
mov
push
popa
fcmovnu
or
pop
or
insl
mov
in
mov
movsl
ret
les
jecxz
and
fisubl
jmp
mov
or
stos
xchg
add
mov
mov
inc
xorl
sbb
mov
mov
rol
ret
push
aas
cmpsb
cwtl
outsl
mov
sbb
sti
orb
clc
and
sbb
xor
orl
gs
cmp
pop
in
jmp
jge
jne
cmpsl
and
xchg
mov
jb
push
mov
add
pop
fsubs
sub
scas
xchg
loope
inc
insl
lret
jbe
cmp
outsb
cmp
loope
mov
fcomp
test
scas
ljmp
pop
mov
into
add
lds
cmp
inc
jo
sbb
fldt
sbb
add
and
mov
sub
dec
jmp
aad
sar
push
xchg
mov
fstpl
sub
pop
push
cltd
pop
ss
mov
xchg
xor
ljmp
ss
mov
das
repnz
pop
mov
cli
lret
lods
movsb
popf
and
rorb
int3
and
mov
ds
mov
rolb
rcl
sub
mov
rcrb
in
mov
xor
cld
pop
ja
and
fwait
movsl
das
cs
dec
and
aas
add
sbb
lret
nop
cmp
pop
fcomps
mov
adc
sbb
cwtl
insl
imul
jno
popa
cmp
icebp
and
outsb
lea
push
cli
mov
sbb
xor
xlat
jno
push
jmp
xor
mov
jmp
in
push
aaa
stos
fdivs
loope
mov
cs
pop
stos
aaa
enter
insb
in
inc
pop
scas
or
retw
xchg
add
mov
sub
or
in
mov
pop
push
adc
mul
cmc
jecxz
or
fsubrs
adc
mov
add
mov
cmp
or
imul
pop
insl
sbb
adc
mov
cmpsl
adc
cmp
pop
shl
insl
insl
sub
xor
xor
pop
mov
les
cmc
movsb
sub
loope
inc
mov
lods
movsl
in
in
and
lds
lods
add
pop
sbb
lea
xchg
insb
sbb
adc
add
lea
sub
dec
mov
mov
pop
inc
movsb
stos
outsb
scas
inc
dec
cmpsl
sbb
std
call
arpl
mov
mov
cld
clc
iret
cmp
or
aad
inc
push
jmp
dec
mov
jo
pop
idivb
inc
popa
pop
add
mov
mov
fldt
or
popa
loope
imul
mov
or
or
flds
insb
sbb
repz
inc
add
ret
add
imul
jbe
lret
imul
nop
or
add
dec
sarl
mov
insl
jmp
into
push
mov
ret
aaa
sub
aad
jg
push
sub
in
mov
jmp
in
jmp
sub
pop
inc
mov
push
lcall
in
inc
outsl
push
lods
cmc
mov
and
icebp
mov
cmp
fdivs
fstpl
imul
push
lcall
outsl
dec
sbb
sbbl
add
aas
push
mov
mov
call
insl
jns
add
gs
rcrl
movsl
add
add
push
shl
jbe
pop
fidivl
push
mov
insl
fisttpl
pop
arpl
jecxz
mov
mov
cmp
and
add
add
add
xor
je
std
in
push
mov
popf
adc
jmp
mov
insl
or
es
sub
fistpl
jb
inc
mov
or
fisttpl
mov
pop
repnz
or
movsl
lea
jb
lcall
jbe
add
leave
adc
mov
push
shl
sub
imul
dec
pop
mov
fucomp
sub
outsb
add
ret
aam
daa
ret
dec
or
jmp
ret
xchg
lds
sub
insb
pop
add
mov
cmpsl
and
subl
jg
fwait
pop
mov
mov
incb
aas
mov
jne
jo
mov
stos
fnsave
pop
pop
mov
insl
mov
xor
fnstenv
pop
sbb
and
adc
cmp
xchg
ficoml
mov
and
push
mov
mov
sarb
and
insl
ret
push
in
loop
add
test
pop
sbb
jns
or
sub
shrb
and
cmp
mov
jae
in
cmpsb
aaa
or
mov
pop
stos
into
pushf
push
dec
je
mov
outsb
or
fsubr
add
scas
jle
stos
mov
fdivs
or
into
imul
mov
hlt
aam
stos
pop
add
fnsave
pop
inc
cmpsl
cmc
inc
and
fcmovnu
lods
sub
mov
gs
cmp
push
fisubl
iret
xchg
lcall
outsl
inc
sub
inc
add
out
jbe
add
mov
loopne
or
fisttpl
rolb
add
ss
lods
cmpb
push
push
scas
mov
sub
adc
out
add
arpl
fisttpll
and
xchg
adc
ret
mov
jbe
imul
imulb
hlt
or
arpl
jg
sahf
sub
in
mov
rcll
fistpll
pop
push
pop
or
test
loop
xchg
cmpsb
add
adc
mov
addr16
lea
xchg
subb
fcoms
pop
push
test
pop
fisubrl
jp
adc
jne
aaa
aad
sbb
insl
mov
jle
mov
stc
jnp
inc
fistl
or
xchg
outsb
dec
sbb
xchg
dec
aas
std
cmp
pusha
mov
mov
insl
or
outsb
ss
mov
xchg
jl
mov
pop
mov
add
push
call
inc
lahf
xchg
fdivl
cli
add
add
xchg
sub
roll
sbb
mov
lea
cmp
lds
mov
out
bound
xchg
or
push
pushf
jg
popf
mov
frstor
dec
fsubs
insl
jmp
mov
popa
xor
ss
es
pop
mov
mov
dec
adc
pop
fdivrl
lret
outsb
inc
in
jo
je
and
and
mov
insl
stos
cmp
or
andb
cld
add
testb
mov
add
fnsave
push
or
push
or
ret
sbb
cmp
add
aaa
mov
mov
inc
adc
orl
frstor
jmp
inc
fisubrl
cmp
lds
das
push
or
pop
pop
fisttps
xor
push
hlt
adc
xchg
pop
inc
insl
popf
dec
fistpll
fldt
cmp
fcmovnb
mov
mov
lods
loop
lods
fnsave
dec
push
mov
mov
mov
sbb
push
ds
mov
mov
jecxz
push
mov
aam
popa
push
ret
inc
scas
div
cld
lahf
cmpsb
push
push
mov
loope
sbb
repnz
jg
xor
fistl
dec
mov
lods
xchg
pop
mov
xor
mov
jb
pop
push
repz
mov
icebp
mov
frstor
test
mov
push
movsb
test
adc
dec
movsb
lock
sahf
xor
dec
mov
xchg
or
and
shll
idivl
mov
inc
fcoml
lock
and
xor
or
dec
add
pusha
popa
add
xchg
sbb
mov
mov
push
sub
outsb
sbb
test
sysexit
jge
inc
sub
mov
add
inc
mov
arpl
and
dec
and
sbb
push
test
add
in
xchg
dec
jmp
loope
pop
pop
mov
outsb
sbb
andb
and
mov
imul
mov
pop
fcoms
lcall
arpl
add
mull
or
pop
mov
loopne
aaa
push
xchg
xchg
insl
repnz
sub
lock
mov
mov
test
cmc
pop
mov
mov
mov
or
test
mov
xorb
add
les
insl
in
ret
pop
jbe
sbb
mov
cs
aad
stos
xchg
inc
dec
iret
inc
mov
pop
dec
sub
in
movb
repnz
xchg
mov
mov
and
sub
xor
movsl
in
mov
sub
add
outsb
in
ret
sub
or
jg
push
mov
fisubl
xor
dec
outsb
jns
mov
icebp
pop
mov
dec
cmp
mov
xor
fildl
add
mov
jp
js
dec
scas
xchg
cmc
pusha
imul
lret
ret
insb
in
xor
cmpsl
jo,pt
insb
fidivl
fsubl
es
arpl
je
mov
mov
in
push
mov
cmpsb
mov
and
or
cld
cltd
jmp
mov
sbb
loopne
sub
insl
sub
adc
mov
sbb
lret
pop
jg
add
add
repz
in
lock
outsb
mov
inc
cs
pop
xchg
repnz
into
xchg
gs
daa
pop
jbe
mov
vdivpd
sarl
ret
mov
fistps
cmpb
dec
lret
ret
mov
inc
and
adc
cmp
cmp
or
mov
daa
cmpsl
pop
ror
push
mov
push
xorb
pushf
inc
stos
imul
outsb
sti
pop
into
push
xor
insl
arpl
add
hlt
add
add
insl
fistpl
movsl
sub
dec
pop
sbb
imul
mov
dec
nop
aam
cmp
jecxz
mov
mov
push
mov
cs
and
mov
insl
insb
adc
pop
sub
adc
mov
mov
fchs
cs
dec
jge
nop
js
dec
mov
cld
sbb
pop
xor
dec
das
test
pop
into
lcall
fiaddl
and
out
das
test
or
test
xchg
rorb
imul
push
dec
and
insl
pop
fdivs
jg
push
push
addl
popa
mov
sbb
fcmovnu
push
icebp
xchg
aam
dec
stc
pop
into
insl
inc
fcmovnb
test
dec
addr16
enter
dec
or
adc
aas
mov
fcmovnbe
xchg
push
test
test
repnz
pop
mov
cwtl
jecxz
jmp
pop
pop
inc
fistl
into
jb
xchg
dec
mov
outsb
into
popa
scas
lret
ret
mov
jno
mov
pop
jmp
inc
mov
test
mov
cld
outsb
stos
sbb
aaa
mov
sbbl
fdivrs
mov
xor
push
jbe
jo
imul
lret
cmp
push
call
outsb
insb
insl
sub
loop
testb
pop
subb
mov
mov
fcmovu
fimull
xor
arpl
pop
lds
xor
leave
aaa
fidivl
mov
daa
movsb
cmp
test
push
push
or
add
jge
sbb
mov
sahf
repnz
int
aaa
pop
fldt
ret
sub
pop
and
inc
fildl
push
in
add
pop
mov
outsb
ficoml
push
pop
test
loopne
or
fadds
or
in
add
mov
dec
in
pop
inc
xlat
adc
pushf
scas
sbb
dec
jno
dec
jbe
das
ret
mov
pop
sub
dec
out
and
subl
cltd
xor
sub
test
or
pop
inc
lret
movsl
jb
fildl
aam
sub
sbb
imul
adc
xor
fs
adcl
adc
fdivl
xor
mov
pop
mov
sarb
mov
jnp
ret
test
mov
pop
ret
inc
aad
sub
add
call
scas
repnz
sti
lahf
jg
inc
arpl
mov
add
fs
sbb
sub
cmp
out
and
sbb
pop
loope
xchg
fdivl
stos
mov
sbb
out
scas
jmp
pop
dec
shrb
push
neg
movb
stc
ret
push
aaa
into
lcall
enter
cmc
jbe
imul
push
data16
div
movb
fdivs
sub
pop
pop
pop
fsubs
jl
sbb
add
rclb
and
xor
sub
mov
in
inc
jmp
stos
cmc
cld
icebp
xchg
push
or
or
mov
push
pop
outsl
xor
fstl
jbe
test
or
lea
push
fwait
or
pop
pushf
push
lcall
loop
sbb
mov
sub
shll
mov
pushf
fiaddl
xor
mov
sarb
push
sbb
mov
pop
push
cmp
insl
loope
test
dec
adc
mov
cli
mov
adc
pushf
insl
mov
out
push
inc
shll
in
jl
fmuls
jge
ficompl
sbb
dec
sahf
stc
les
dec
insl
fcmovnu
mov
dec
sub
add
test
push
arpl
mov
pop
ss
fisubrl
inc
jns,pn
movsl
mov
pop
push
mov
push
pop
mov
dec
clc
cmc
mov
inc
shrl
call
sti
push
sub
sub
push
push
sbb
or
imul
jo
fnsave
rcrb
mov
inc
imul
sbb
lods
mov
daa
addr16
cli
xchg
and
int3
cld
mov
outsb
sub
std
cld
aam
xlat
adc
pop
xchg
in
or
mov
fisubrl
add
arpl
mov
push
mov
push
pop
movaps
xor
sub
push
push
pop
xor
mov
mov
sti
and
sahf
mov
mov
sub
xor
cli
mov
pop
push
cmpl
sbb
fisubrl
jae
xorl
in
add
fiaddl
push
pop
or
lods
mov
adc
insl
leave
imul
mov
insl
sbb
sub
mov
ss
xchg
aaa
sbb
dec
insb
in
repz
loop
mov
andb
lock
dec
adc
test
lock
cltd
mov
push
adc
lret
and
scas
cmp
jbe
inc
inc
stos
dec
int
and
jo
pop
int
test
add
fcmovnb
inc
mov
and
repnz
and
pop
insl
mov
sti
cmp
mov
mov
out
js
push
outsb
cmpsl
bound
fisubrl
pop
mov
movsl
movsl
jbe
movsb
repnz
inc
dec
imul
cmp
add
xor
add
sub
in
andb
sbb
ljmp
adc
mov
or
push
xchg
gs
push
add
shrl
adc
pop
je
out
cmp
stc
mov
into
cltd
mov
dec
movsb
fimull
les
cmp
pop
fsubrl
loop
sub
shll
in
mov
mov
fcmovbe
ja
lods
add
rclb
xchg
lcall
pusha
add
gs
xchg
jnp
jbe
dec
dec
pop
andb
push
popa
rolb
and
and
jb
jbe
ret
push
add
pop
mov
fcoms
popf
das
xor
xchg
or
sub
lea
add
fsubrs
sub
pop
loope
lret
scas
lret
stos
or
mov
sub
sbb
test
add
adc
pop
mov
jmp
lret
jg
mov
add
add
insl
loope
insb
mov
mov
xchg
ret
or
jg
push
in
test
mov
lcall
lahf
adc
sbb
jg
pop
mov
jns
and
mov
push
pop
mov
mov
jbe
insb
mov
pop
insl
ret
ret
cltd
xor
or
xchg
rcll
add
mov
or
mov
sub
mov
adc
repnz
lret
mov
lds
xor
pop
xchg
lods
dec
push
clc
pop
loope
push
and
xchg
aaa
lds
pop
clc
xchg
repnz
sti
ljmp
push
and
sarl
mov
sub
mov
test
mov
lret
mov
dec
call
or
pop
cli
jmp
mov
push
cmp
inc
stc
repnz
add
xchg
push
add
mov
das
pop
mov
into
sub
pop
xor
add
lods
add
rclb
mov
test
lahf
add
sahf
nop
aas
add
movsl
xor
cmpsb
clc
cwtl
lods
test
cs
insb
cmp
cltd
jl
sbb
repnz
pop
add
push
cmp
pushf
and
daa
add
cs
add
lods
test
push
fs
insl
mov
fwait
loopne
jp
bound
dec
mov
add
and
push
jnp
sahf
repnz
insl
stos
xor
pusha
push
loop
add
push
mov
imul
into
shlb
ret
gs
es
sub
mov
sub
mov
mov
sahf
add
inc
lahf
setp
xchg
loop
xor
movsl
mov
jmp
lret
add
sbb
outsb
inc
test
mov
je
add
inc
jecxz
ds
pop
jmp
cmpsb
fcmovnu
jbe
ret
and
fcomp
lods
scas
pop
pop
stc
mov
lea
mov
xchg
test
movsl
adc
sbb
mov
adc
sahf
mov
add
mov
jmp
out
orb
in
cmpsb
push
hlt
xchg
xchg
or
mov
data16
sub
mov
gs
inc
inc
ja
xchg
cmp
int
arpl
stos
xor
cmp
mov
call
sbb
xorb
xchg
ds
xchg
lea
or
mov
mov
add
fbstp
xor
mov
insl
insb
sub
jb
insb
lds
mov
cmpsb
out
in
rcl
in
mov
pop
cs
xchg
push
or
xchg
add
mov
das
pop
mov
in
xlat
mov
add
mov
xchg
test
pop
or
popf
rorl
jb
push
mov
push
xchg
das
frstor
aas
dec
push
jne
std
jns
mov
or
stos
xchg
inc
loope
pop
inc
push
mov
jecxz,pn
ret
mov
in
push
mov
pop
test
push
mov
lods
and
add
adc
fiaddl
mov
leave
sbb
aam
mov
mov
lret
jns
sub
stc
jno
es
lret
mov
fstpt
inc
xor
insl
pop
push
push
pop
into
stos
es
insl
mov
or
fmul
push
xchg
inc
adc
mov
mov
scas
and
out
cwtl
push
mov
decb
push
je
add
cs
mov
fists
mov
shlb
push
mov
nop
lods
mov
outsb
inc
mov
pop
out
test
or
add
data16
fcmovnu
dec
das
mov
inc
mov
sub
jno
insl
aaa
sub
gs
cmp
xlat
fwait
test
imul
out
jne
sahf
mov
add
stc
lret
xchg
mov
add
push
sub
mov
pop
inc
dec
dec
xchg
gs
mov
jp
jae
pop
mov
add
gs
clc
jbe
add
lea
repnz
ret
add
mov
aas
cmpsb
scas
add
mov
enter
mov
roll
mov
jp
imul
cltd
pop
repz
add
lods
sub
mov
xlat
add
xchg
inc
das
lds
insb
lret
push
mov
jmp
mov
lods
mov
int3
ds
sbbl
es
sub
add
js
fsubrs
push
arpl
lret
aaa
call
add
outsl
pop
pop
pop
mov
inc
pop
jg
lea
sub
xchg
and
test
int
add
lret
or
push
push
out
sub
mov
push
mov
bnd
or
sub
pop
push
mov
jle
sub
fcmovnbe
xchg
cmp
ret
xchg
outsl
or
push
stos
xchg
fildl
pop
test
in
insl
stos
jp
cmp
fldl
push
lcall
jp
push
jne
mov
das
inc
mov
dec
mov
pop
mov
insb
fstpt
cmc
jne
sub
sub
or
fstps
sub
cmp
sbb
adcb
mov
jbe
add
scas
dec
repnz
sbb
pop
add
insl
jmp
stc
daa
add
sub
and
dec
test
mov
cmpsb
mov
pop
pop
jns
push
mov
or
fstl
out
sbb
cs
mov
ljmp
loop
sarl
fcomps
aaa
rcrb
inc
mov
fistpl
fnsetpm(287
pop
add
jbe
in
jae
mov
fmuls
aam
in
in
stos
in
mov
xchg
jl
mov
jmp
lods
or
or
jle
add
inc
sahf
sbb
xor
mov
and
and
in
into
ds
fstpl
gs
push
fisttpll
test
sbb
scas
jo
or
pop
add
or
pop
pop
fisubl
xchg
stos
sub
and
fcmovnbe
inc
faddl
sti
jmp
repnz
out
mov
insl
mov
mov
pushl
in
mov
and
xor
outsl
insb
mov
push
sub
sbbl
xchg
sub
insl
cmp
lea
test
pop
mov
clc
mov
pop
sbb
push
or
pop
add
adc
cmp
xor
data16
adc
stc
inc
and
pop
pop
add
inc
cmp
mov
dec
es
inc
bound
fwait
cli
loop
inc
mov
mov
push
sub
in
loope
adc
jbe
fst
stos
call
outsb
jle
mov
mov
xor
out
mov
insb
push
mov
xlat
gs
shlb
mov
add
or
add
xor
sub
adc
sbb
in
fldcw
mov
in
dec
testl
enter
in
mov
fisubl
out
les
xchg
test
sbbl
out
pushf
cwtl
cwtl
adc
mov
jg
mov
test
stos
addb
pop
js
je
push
jo
fstpl
cmpsb
dec
scas
add
jecxz
stc
ret
or
shlb
scas
stos
add
jno
stc
inc
lcall
repnz
pop
mov
mov
add
fwait
in
pop
fldt
in
outsl
fwait
test
push
sbb
insl
incl
dec
data16
imul
mov
stc
sub
lret
jb
mov
xchg
test
lea
adc
mov
cmp
push
inc
add
jmp
and
aad
loopne
in
int
lds
dec
dec
inc
push
fiaddl
mov
icebp
sub
lea
cli
mov
push
leave
jecxz
bound
mov
popa
xor
pop
and
rcrl
gs
stos
sub
push
or
add
inc
inc
dec
jmp
mov
insb
sub
adc
jne
fnstcw
jmp
sub
mov
cwtl
mov
sub
jae
js
movsb
lret
mov
lret
inc
lods
dec
mov
mov
adc
insb
mov
adc
insb
push
push
shlb
mov
push
xor
dec
sbb
test
xchg
inc
xor
lret
mov
or
push
movsb
mov
arpl
nop
or
insb
push
test
fistpl
sub
add
lock
inc
gs
mov
xchg
loopne
mov
push
das
rclb
add
enter
shl
pop
fistl
cmp
ds
xor
sub
dec
sbb
movsb
and
sbb
or
add
filds
push
mov
jecxz
add
pop
push
add
pop
arpl
add
inc
fucomi
cs
das
pop
mov
addr16
adc
pusha
in
or
jns
add
repnz
xchg
jb
cld
add
or
add
add
add
sub
xchg
enter
sub
lret
das
dec
pop
sahf
dec
mov
movsl
mov
xchg
pop
scas
cwtl
sub
in
aaa
pushf
jge
add
sbb
outsb
jne
jnp
mov
pop
pop
push
push
sbb
jl
mov
push
dec
dec
add
dec
inc
add
inc
icebp
stc
jbe
arpl
xor
sub
mov
push
xchg
pop
xchg
pop
xchg
gs
add
pop
xchg
gs
jo
imul
dec
pop
xchg
gs
clc
push
loope
ljmp
sub
int3
xchg
cmc
mov
mov
lret
out
cs
add
outsl
mov
mov
mov
adc
xor
cmp
subl
push
outsb
pcmpeqw
mov
mov
hlt
push
or
adc
insl
out
mov
xchg
popf
mov
fadds
adc
add
insb
pop
cmpsl
fldl
mov
sub
jg
lds
pop
xchg
xor
push
es
pop
xchg
pop
and
cmp
lods
mov
xor
es
mov
insl
enter
push
das
mov
cs
jg
in
xlat
sti
add
pop
pop
aad
mov
subl
lods
adc
sub
jbe
fisubrl
je
sub
push
jno
bound
bnd
enter
rcll
mov
xor
xor
cmp
stc
in
cmp
mov
jp
repnz
push
pop
push
dec
jle
mov
push
push
ficoml
arpl
adc
add
test
movsl
push
incb
pop
out
ds
mov
jl
mov
mov
and
add
jl
fcmovu
push
mov
adc
sub
out
loopne
push
int3
add
sub
fidivrl
mov
les
or
test
add
mov
aas
sub
mov
ljmp
movsl
jbe
lods
inc
cmp
push
ljmp
jbe
and
fildl
pop
sub
addl
mov
sbb
out
enter
add
inc
pop
ucomiss
mov
sub
or
mov
cmp
outsb
pop
popa
mov
sbb
or
sbb
sahf
lret
movsb
pop
scas
lcall
sub
adc
es
mov
jp
dec
pop
mov
jl
mov
cs
add
fildl
scas
inc
rolb
or
add
push
sub
rcl
enter
adc
xor
push
movsb
cs
mov
fbstp
add
call
imul
or
lea
push
mov
mov
adc
aam
ret
push
mov
ret
dec
or
jns
dec
out
jnp
sub
or
jns
imul
les
test
sub
mov
in
in
adc
scas
scas
lea
jnp
fwait
jg
mov
shr
cmpsb
sbbl
sub
inc
inc
push
insl
insl
or
and
stc
mov
mov
cmp
movsb
test
and
lods
lea
xor
shr
push
xchg
adc
add
adc
jp
and
push
testl
pop
sahf
mov
aam
movsb
mov
fwait
mov
push
mov
xchg
lahf
fcmovbe
loope
mov
mov
stos
das
xor
sub
and
cmp
lds
inc
xor
pop
mov
leave
mov
mov
in
sbb
jbe
inc
lods
popa
imul
dec
mov
imul
lods
inc
shll
mov
ret
add
push
inc
dec
les
lods
pop
aam
push
pop
pop
andb
dec
fldenv
mov
pop
test
dec
test
insl
xor
or
cs
mov
mov
scas
pop
aaa
and
pop
and
in
mov
xlat
dec
ret
push
mov
aaa
scas
les
push
add
cli
pushf
adc
incb
aaa
sbb
enter
mov
test
push
aaa
fiaddl
sti
sub
into
mov
pop
push
push
imul
sbb
ret
push
aam
xchg
jecxz
test
fs
test
push
pop
lret
mov
fcmovnbe
icebp
or
loopne
in
gs
fcomp
mov
push
into
dec
sbb
inc
pop
ss
mov
and
pop
sbb
fs
rolb
div
fnsave
cmp
sbb
fdivrs
jge
call
shlb
out
mov
test
ret
push
xor
imul
push
sub
push
fs
inc
jae
lods
adc
jmp
scas
push
pop
adc
pop
fdivrl
add
icebp
add
dec
bound
hlt
lds
jns
add
imul
mov
mov
jecxz
mov
xor
repnz
ljmp
imul
and
push
jne
mov
add
cmp
adc
call
icebp
or
ds
cmp
sub
aas
jecxz
jbe
lea
xchg
shrl
outsb
dec
cmc
push
cmp
mov
iret
fldenv
in
les
pop
fimull
mov
adc
pop
pop
fdivs
push
cmpl
mov
test
jmp
pop
enter
or
jne
mov
imul
push
mov
aaa
mov
pop
adc
leave
movsl
sarl
inc
xchg
push
std
enter
push
mov
mov
insl
insb
adc
and
dec
fucomi
or
imul
dec
pushl
mov
sbb
pusha
mov
les
fnsave
sbb
mov
mov
dec
xor
loopne
mov
addr16
sub
pop
jge
sbb
fistpl
pop
push
cs
jg
pop
insl
mov
add
xchg
dec
pop
ljmp
pop
mov
push
fcmovnbe
mov
rorb
adc
adcb
cmp
lea
cs
mov
cmp
repnz
mov
push
xlat
sbb
add
add
rclb
rolb
sbb
mov
aam
cs
xor
push
pop
ficompl
outsb
sbb
subl
push
jge
dec
mov
mov
push
lds
mov
cmpb
mov
mov
out
aas
in
lret
dec
inc
adc
cmp
in
mov
movsl
lods
push
adc
sbb
pop
or
cmpl
ss
mov
mov
jge
push
xchg
repz
inc
andb
arpl
ret
in
movl
movsl
jge
lods
mov
fisubrl
inc
fiadds
daa
pusha
fistl
out
movsb
push
test
xor
andb
xchg
es
and
push
push
jae
pop
push
pop
sub
push
push
ret
mov
fstl
inc
aaa
outsb
imul
mov
mov
add
lea
xchg
mov
fs
jmp
push
and
mov
pop
mov
and
sub
sub
test
cmc
popa
jecxz
push
loop
scas
fcompl
ficoml
aam
inc
out
inc
mov
subb
sub
xor
push
cltd
or
lea
mov
xchg
popf
push
sbb
pop
insl
dec
dec
int
adc
lahf
in
or
or
icebp
inc
mov
test
roll
adc
sbb
movsb
sahf
pop
mov
aad
xor
mov
movsl
push
sbb
inc
inc
push
push
or
inc
push
sub
xchg
loopne
pop
repnz
adcl
mov
pop
xor
ja
mov
or
out
cmp
imul
pop
outsl
outsb
shrl
cmp
jnp
sti
xor
xor
ss
sbb
dec
pop
push
and
and
push
pop
adc
lret
jp
xchg
push
push
dec
mov
in
in
aaa
mov
adc
int
xchg
push
out
dec
insb
xchg
or
add
mov
mov
mov
repnz
sub
pop
aaa
movsl
and
loope
cs
xor
iret
andl
mov
xchg
adc
outsb
jno
cmc
pop
pop
dec
in
mov
sbb
dec
sub
push
cmp
or
pop
les
or
aas
orb
fildl
shlb
push
xor
push
loop
mov
mov
cmp
pop
and
mov
ret
push
lahf
xor
in
mov
push
outsb
mov
test
adc
pop
mov
sbb
and
rclb
fcmovnb
xchg
fidivs
or
adc
xchg
pop
test
mov
sti
pop
push
push
hlt
std
xchg
loopne
push
fucom
add
sti
enter
mov
or
pop
rcrl
andb
cwtl
loop
pop
inc
insl
insl
mov
flds
sub
pop
and
data16
test
nop
pop
add
aad
cld
inc
mov
dec
sbb
testl
lods
mov
call
lock
leave
sti
add
or
and
lret
insl
inc
or
cltd
lret
clc
cmp
js
dec
add
repz
insb
mov
divl
jbe
pop
mov
jp
mov
shll
sbb
mov
scas
mov
xlat
sub
rol
inc
add
cmp
and
sub
out
pushl
inc
cmc
cmp
arpl
add
inc
inc
flds
jge
sub
or
in
lods
xor
into
push
arpl
stos
jo
push
sbb
mov
je
jno
lcall
testb
sub
mov
nop
sub
outsl
dec
or
xchg
xchg
push
pop
mov
xchg
jo
insl
mov
sbb
lds
dec
add
lods
sub
ret
sub
fmul
outsb
xchg
sub
aas
or
outsl
fidivl
clc
imul
in
dec
mov
pop
sahf
out
ret
push
out
movsl
test
mov
push
lahf
lcall
sub
lods
push
arpl
js
mov
mov
mov
pop
sub
mov
pop
cs
push
mov
fnsave
fisubl
lret
mov
or
movsl
movsl
jbe
enter
imul
push
inc
mov
aam
mov
cmp
mov
xor
add
push
das
fcmovu
lods
fnsave
xor
and
shrl
sub
and
in
add
es
xorb
and
add
mov
lods
dec
repnz
ds
pop
arpl
jmp
pop
jp
pop
fstl
mov
jecxz
xchg
shl
xchg
dec
mov
frstpm(287
pop
sbb
inc
fldenv
dec
sbb
imul
mov
sub
jl
mov
mov
loop
dec
lock
lea
lock
dec
xor
mov
xchg
sbb
popf
insl
pop
cmp
mov
or
push
ror
hlt
add
push
mov
call
push
xchg
outsl
aaa
insb
popa
test
add
pop
or
stos
jae
and
mul
add
lods
or
or
pop
pop
sub
in
test
pop
popf
sbb
insl
arpl
xchg
and
outsb
test
gs
and
cmp
mov
cmpb
imul
lret
sahf
inc
orl
lods
jb
xchg
pop
pop
add
call
mov
jnp
push
push
dec
test
out
lds
or
mov
les
imul
mov
adc
out
pusha
das
jl
imul
adc
lret
mov
fdivs
je
adc
pop
mov
sahf
int
orb
fbstp
adc
insl
mov
sbb
pushf
sbb
cmp
fcomp
jno
push
mov
mov
outsb
or
or
movsb
fistpl
movsb
aam
add
add
fcoml
fisubrl
push
out
mov
popa
imul
es
fstps
sbb
std
cmp
sub
pop
daa
cmp
cld
push
mov
jl
ja,pt
add
mov
add
jecxz
xchg
xchg
movsb
add
dec
push
jno
cli
dec
mov
es
addr16
inc
pop
fiaddl
popa
add
jp
repnz
out
loope
movsl
sub
push
mov
testb
xchg
lret
out
adcb
lea
xor
insb
xor
inc
cmp
insl
test
push
outsb
push
aas
loopne
jecxz
stos
les
mov
add
stc
or
add
adc
pop
inc
fidivs
ret
xor
inc
sub
insb
fcmovnb
sub
data16
subb
subb
mov
mov
jno
mov
pop
xlat
push
bound
popf
cmp
sub
je
jno
outsb
inc
rcl
mov
pop
mov
add
mov
sub
insl
or
cld
imul
mov
jae
ljmp
push
rclb
add
adc
xor
movsl
shlb
inc
sub
insl
pop
sub
xchg
repnz
fwait
mov
das
mov
add
fldt
out
std
and
or
mov
rcll
push
sbb
negl
add
sbb
leave
addl
sbb
jle
jno
test
mov
or
movsl
jbe
leave
jl
cmp
cwtl
pop
adc
lods
pop
fwait
or
xchg
fmulp
fiaddl
cmpb
cmp
fmull
sbb
xchg
add
into
or
pop
sub
fwait
push
jae
fnsave
pop
inc
and
pop
fsubrs
inc
push
mov
mov
fcompl
sahf
mov
call
mov
andb
rcl
mov
sub
inc
lds
xchg
lahf
outsl
cmpsl
sub
mov
mov
xorl
add
mov
aad
or
mov
sti
fnstsw
inc
push
and
fistpl
iret
hlt
cmp
shrb
insl
iret
mov
mov
sbb
add
setbe
pop
cmpsl
out
imul
test
mov
pop
rorb
add
dec
inc
mov
pop
popa
stc
gs
rcll
push
add
mov
outsl
push
mov
mov
sub
mov
sub
inc
pop
loope
das
insl
imul
loopne
adc
xlat
xchg
pop
or
icebp
insl
ret
in
outsb
bound
or
sub
pop
sbb
push
andb
aas
dec
decb
mov
and
insb
inc
sbb
xor
fsubrs
aam
dec
push
pop
push
popf
or
pusha
mov
push
lret
insl
mov
sbb
and
jle
mov
mov
fsubrs
into
adc
xchg
adcl
fcmovnbe
pop
mov
sbb
mov
or
or
sbb
sbb
aaa
test
fwait
sti
das
add
push
aas
cmp
xor
push
mov
xchg
and
dec
orb
push
dec
int3
js
adc
test
xor
sarl
insb
ficomps
inc
ds
push
fnsave
sbb
mov
test
sbb
fimull
or
dec
jp
stos
imul
clc
mov
add
add
insl
mov
sub
xchg
fistpl
fstpt
ss
enter
jo
call
insb
mov
test
push
sub
mov
mov
repnz
sbb
inc
adc
lea
mov
sbb
jae
rorb
xlat
jge
sbb
inc
pop
mov
sti
enter
mov
lods
cmp
es
fildl
sub
xor
lea
cmpsl
push
call
inc
add
dec
cmp
fdivs
inc
adc
rolb
or
push
pop
fs
mov
iret
xchg
cs
mov
stos
adc
lods
and
mov
pop
lahf
setb
inc
shrb
lret
lea
jp
ss
vmovhpd
mov
cli
mov
or
inc
mov
lods
add
out
das
sub
or
adc
insb
pop
mov
insl
xchg
push
ret
sbb
push
rcrl
test
outsb
xor
fcmovu
pop
sbb
inc
js
add
xchg
jae
scas
cmp
mov
fwait
test
stos
sti
sub
fisubrl
push
test
mov
dec
jno
cmp
push
lods
insl
imul
pop
loopne
test
adc
sub
cmp
insl
sbbl
dec
and
aas
cli
aaa
mov
icebp
xchg
sub
mov
lods
test
mov
fcmovbe
ret
lret
jo
pop
inc
mov
push
mov
add
cltd
mov
mov
and
pop
out
lret
inc
insb
dec
jo
notl
jo
leave
adc
sub
xchg
and
sbb
into
test
push
and
popa
imul
in
sub
lcall
test
cmp
cmp
lods
test
enter
mov
dec
cmp
clc
stos
loope
stos
push
loop
in
insb
fistl
mov
push
mov
pop
inc
or
adc
pop
jnp
push
pop
pop
sub
mov
pop
add
out
adc
sbb
clc
clc
pop
xor
pop
inc
enter
xchg
or
fldcw
xchg
pusha
subl
popf
sbb
test
cmp
add
sub
in
jno
fcoms
sbb
mov
push
and
pop
lods
aaa
mov
shrb
aam
nop
mov
xor
push
or
push
outsl
cwtl
sarb
push
pop
pop
pop
ficompl
cmp
push
insl
sbb
iret
cmpsl
ret
inc
in
js
mov
xchg
sbb
sub
inc
mov
pop
xchg
jg
inc
cld
ljmp
in
mov
fisubl
add
mov
in
dec
aaa
fisubrl
add
insl
mov
add
cmp
jae
inc
add
sub
xchg
filds
insb
clc
and
dec
in
inc
cmp
mov
std
jmp
jl
jecxz
fistl
jecxz
add
fimuls
movb
xor
aaa
sub
es
cmpxchg
jecxz
xchg
subb
mov
insl
sub
fldenv
adc
rcrb
and
in
mov
jne
add
adc
sbb
sbb
push
enter
xchg
mov
or
imul
imul
cmc
mov
shlb
pop
jmp
push
mov
in
push
jno
orl
push
mov
ss
push
pop
inc
xchg
ss
dec
push
stos
mov
ficoml
push
ret
jae
stos
sub
stos
cmp
lods
pop
pop
jne
pop
rclb
fstp
test
mov
gs
orl
push
adc
subb
shrl
mov
pop
push
jnp
pop
dec
adc
jbe
dec
jl
jmp
sbb
fildl
sub
add
jo
xor
cli
xor
mov
aam
xchg
or
jb
push
insb
pop
add
ds
pop
dec
push
mov
pop
shlb
out
jbe
insl
lea
enter
mov
outsb
ss
push
mov
cld
jbe
out
iret
mov
mov
mov
jo
or
das
mov
pop
cmpsl
test
mov
insl
test
sbbl
pop
mov
xchg
bound
lods
fcompl
mov
dec
xchg
adc
push
add
add
cmp
add
pop
pusha
imul
jne
push
or
push
add
rcl
dec
jge
adc
loopne
mov
xchg
add
fistpl
xchg
add
cmp
lea
loop
inc
roll
cwtl
fcmovbe
cmc
ja
sub
mov
jmp
inc
gs
or
mov
insl
mov
movsb
xchg
sub
sbb
pop
call
push
jge
pop
sar
aad
push
jne
mov
daa
mov
push
addr16
iret
addb
nop
pop
add
fsubrs
adc
int3
aas
dec
lods
test
lds
pop
fidivl
mov
jnp
jmp
insl
insl
pop
ficompl
fcomps
sub
sbb
fs
clc
sbb
push
sub
or
add
movsl
lea
or
fcom
shll
pop
fadds
cmp
rcl
lock
jecxz
or
push
lret
fisubrl
outsl
mov
fstp
sub
and
inc
rorb
out
push
addr16
lods
pop
pop
jl
xchg
imul
pusha
fistpl
nop
mov
dec
add
adc
push
mov
arpl
lods
xor
jbe
pop
xor
adc
mov
lret
ret
mov
loop
or
push
cmp
xlat
jle
incb
xchg
or
mov
adc
add
mov
sub
mov
lahf
sbb
xor
je
mov
and
ljmp
pop
shrl
out
imul
push
cmp
jo
sahf
cmp
fcompl
pop
push
add
jge
test
cmp
xchg
outsb
es
and
jp
movsl
or
loope
mov
iret
shrl
out
adc
imul
roll
gs
jo
push
pop
fmul
es
icebp
mov
or
lret
inc
sbb
aam
xor
jne
imul
lods
sbb
cli
fidivl
movsb
lods
pop
fwait
pop
das
mov
subl
roll
repz
sub
jmp
adc
outsl
dec
dec
sbb
shrb
pop
jno
and
and
cld
insb
xchg
outsb
or
cmpsb
aam
mov
or
xchg
adc
sbbl
imul
sbb
popf
mov
cmp
or
sub
imul
rcrb
mov
mov
fisubrl
je
lods
mov
cwtl
ret
test
mov
fcomps
mov
fadd
xorb
lea
pop
int3
add
push
sbbb
scas
jb
jmp
movzwl
and
sub
push
inc
xorb
mov
sahf
pop
sbb
jl,pn
insb
repnz
stos
in
or
adc
push
add
adc
mov
repz
repnz
pop
mov
jb
lods
cmpsl
das
lret
or
or
out
ficompl
pop
or
loopne
es
mov
and
xchg
push
pop
fldt
mov
sbb
imul
outsb
or
pop
enter
mov
fiaddl
push
add
mov
sub
outsb
and
stc
loopne
pop
or
pushf
jmp
mov
pop
pop
pop
dec
pop
jg
movsb
mov
jns
or
sti
je
clc
adc
xor
mov
dec
es
jbe,pn
imul
dec
popa
cwtl
in
inc
fldt
inc
movsb
into
jnp
std
mov
xchg
ss
or
in
lahf
and
inc
fildl
cmc
mov
fadds
or
inc
dec
test
lds
xchg
movsb
xchg
mov
test
inc
xor
imul
out
mull
inc
add
test
inc
lds
pop
xchg
cmp
pusha
sbb
mov
insl
mov
out
pop
shll
pop
mov
inc
out
mov
lea
mov
aas
push
mov
cwtl
xchg
jecxz
mov
in
ret
adc
xor
lret
bound
sub
fwait
add
inc
mov
aad
cmp
pop
lcall
push
xor
mov
xchg
mov
jbe
xor
mov
mov
clc
jne
sbb
fldt
adc
mov
shlb
mov
add
insl
dec
or
cmpsl
push
xchg
sbb
or
mov
fs
cmpb
mov
cli
dec
mov
out
mov
insb
cli
lods
dec
jo
inc
sbb
jp
sbb
jbe
xchg
push
pop
adc
fildl
gs
mov
or
out
jl
lcall
out
xchg
leave
mov
sbb
push
push
xchg
jmp
push
mov
sub
insl
add
cmc
fwait
repnz
jecxz
outsb
mov
mov
xor
in
mov
adc
cmp
sbb
lds
pop
sahf
int
notb
mov
mov
sbb
mov
jge
mov
or
jne
xchg
xor
xor
pop
xchg
insl
add
push
sub
mov
dec
out
adc
outsb
xor
jbe
push
call
into
xorl
jge
mov
or
fcmovnbe
aam
or
insl
pop
lds
jl
insl
mov
andb
or
and
gs
shlb
dec
jle,pn
cwtl
sbb
sbb
add
pop
add
jge
movsl
insl
inc
jo
shrl
jnp
adc
pop
mov
xchg
xorb
mov
leave
loop
shl
mov
ret
enter
rcrl
insl
dec
dec
enter
gs
mov
insl
inc
cmpsl
adc
jmp
ljmp
mov
loopne
lcall
call
mov
jno
dec
mov
and
arpl
xor
mov
adc
lods
fstp
mov
ljmp
adc
fisubl
pop
lds
jbe
sbb
jb
sub
stc
rclb
xor
mov
pop
test
out
sbb
repnz
inc
sub
push
jb
out
test
in
mov
fstp
shl
adc
mov
ja
cmp
inc
sbb
push
cltd
mov
mov
push
pop
xchg
pop
xchg
push
cli
fcoml
dec
sub
jg
test
test
mov
mov
lcall
inc
fisttps
add
sti
jecxz
and
pop
int
add
xchg
dec
mov
mov
mov
ja
fisubrl
cmp
aaa
fnsave
mov
sub
ds
or
outsb
sub
mov
mov
inc
scas
cmp
push
insl
add
push
dec
js
nop
les
or
jl
mov
and
adc
xchg
int
xchg
mov
fisubrl
or
cwtl
ficoml
jne
aaa
sub
inc
popf
cmp
insl
ret
dec
inc
cmp
jbe
iret
pop
test
in
into
sbb
jno
cs
int
and
fistpl
dec
idivl
mov
mov
test
scas
sub
fiaddl
scas
sbb
cmpsl
push
mov
test
dec
cwtl
jge
or
or
mov
or
pop
mov
test
dec
test
mov
bound
pop
pop
lods
mov
pop
pop
roll
dec
jmp
push
pop
lret
sbbl
sbbl
fcmovnu
in
mov
mov
ss
fisubrl
mov
daa
lods
mov
jb
add
repz
inc
and
lret
out
or
dec
call
inc
adc
ficoms
insb
clc
adc
pop
insb
xchg
jge
jp
stos
push
and
lods
mov
push
adc
or
clc
jge
and
inc
mov
push
aad
lea
add
adc
jmp
lods
adc
or
xchg
fstpl
fimull
loop
xor
fcoms
mov
rorb
jg
negb
out
ss
mov
sbb
mov
ret
daa
sub
aaa
or
mov
negl
test
testb
dec
fildl
mov
cli
daa
and
mov
icebp
stos
imul
mov
cmp
fldt
insl
negb
loopne
shll
xchg
pusha
popa
or
orb
xchg
inc
sbb
pop
mov
mov
inc
or
sub
and
lea
jbe
popa
mov
or
mov
adc
movsb
push
sbb
aam
xchg
adc
adc
xor
cwtl
out
xor
fsubrs
data16
fcoms
push
lret
insl
das
jno
sub
sbb
stc
out
dec
jno
pop
fcmovb
mov
lock
movsb
xchg
jae
sbb
insl
fistl
mov
lret
adc
inc
dec
stos
inc
fildl
xor
or
insl
popa
bound
adc
je
pop
push
xchg
loope
adc
jo
pop
xchg
cmp
imul
mov
mov
sub
cwtl
imul
mov
jle
xor
mov
push
lahf
jns
dec
out
insl
test
roll
movsl
stos
jo
sbb
test
mov
testb
aad
inc
pop
cmpsb
jg
out
int
sbb
adcb
mov
or
insb
sub
call
xchg
mov
jbe
and
mov
rdtsc
call
test
pop
fidivl
lds
imul
repz
cmp
adc
xor
fstp
insl
ja
xor
fstps
popa
fldt
dec
sti
xor
popa
arpl
lcall
movsl
jbe
js
xor
in
outsb
sbb
pushf
iret
scas
imul
cwtl
cmpsl
add
outsb
or
hlt
adc
push
mov
mov
fistl
aam
ja
sbb
arpl
cmp
cmp
push
test
imul
jecxz
lret
xchg
hlt
xlat
pop
jbe
inc
jno
ljmp
loopne
rol
nop
loope
sti
mov
cmc
loope
push
push
xchg
pusha
jl
inc
mov
sub
sbb
stos
in
rcll
mov
pushf
and
pop
pusha
imul
pop
push
pop
mov
bound
ljmp
in
inc
pop
and
add
pushf
jp
lds
or
bound
imul
adc
mov
aad
ss
jnp
fwait
das
daa
or
cmpsb
loop
in
or
pop
fildl
cltd
das
cmpsb
pop
cltd
push
lock
mov
push
cmp
mov
insl
adcl
stos
mov
add
pop
push
mov
push
shll
dec
aas
sbb
xchg
inc
aam
add
sar
inc
pop
jmp
mov
addr16
add
mov
fwait
fs
pop
into
and
xor
test
or
dec
mov
jmp
lods
insl
mov
lea
cwtl
sub
sbb
pop
call
pop
xor
or
mov
lds
fs
push
jno
add
fstl
xor
fbstp
sbb
ss
push
mov
fldcw
mov
push
mov
adc
add
shrl
cmp
test
adc
fcmovbe
adc
jb
imul
popf
call
imul
xchg
fstp
aad
pop
mov
ret
jmp
and
adc
inc
insb
fcmovne
jp
push
dec
sti
clc
or
pop
pop
idivl
dec
jp
mov
inc
xchg
sbb
dec
fstp
cs
mov
bound
add
jle
or
push
adc
add
add
inc
cwtl
stos
imul
inc
add
push
out
push
loope
mov
pusha
add
scas
in
add
or
xchg
dec
lea
mov
mov
test
stos
push
fcomip
jb
add
scas
push
jle
jge
push
lret
sahf
loop
or
sub
ss
mov
push
add
shlb
pop
fnstcw
fcomps
xchg
adc
xlat
rcl
or
jle
mulb
jo
jo
sub
enter
ret
cmpsl
sbb
adc
jl
aad
ror
and
loopne
stc
sbb
subl
inc
push
dec
push
fdivs
dec
mov
push
and
fbld
dec
mov
bound
dec
sbb
xor
inc
scas
sbb
push
mov
negl
jo
test
adc
pop
fdivrs
fs
add
sbb
inc
pop
jmp
outsb
insl
imul
pop
sub
pop
imul
pop
insl
mov
pop
and
fldl
jp
mov
stos
add
sbb
mov
inc
xchg
rcl
subl
fidivrl
sub
mov
pop
dec
push
jo
jg
ficompl
sub
mov
push
dec
push
inc
popf
push
lods
push
das
xchg
dec
lock
test
std
or
sub
outsl
cmc
movsl
mov
mov
shlb
test
in
mov
dec
xor
or
test
ja
cmpsb
jbe
pop
shrb
jae
mov
jecxz
hlt
mov
jbe
sub
lret
addr16
sbb
push
mov
pop
lret
movsb
subb
adc
pop
mov
dec
mov
inc
or
ret
in
outsb
xor
test
shrl
int3
std
ffreep
sub
fsubrs
xor
pop
xor
mov
icebp
dec
stc
push
push
add
xor
jbe
sub
scas
cmc
popa
stos
ja
sbb
add
std
pop
jae
aaa
push
sbb
fdivl
lahf
mov
dec
pop
dec
repnz
in
add
cmp
sub
add
mov
push
push
cmp
add
sub
lods
out
daa
outsb
insb
sbb
adc
xchg
pop
pop
cmp
adc
dec
push
inc
popa
popa
mov
or
and
jbe
cmpsb
loopne
sub
sbb
push
and
xchg
andl
scas
popa
jmp
or
mov
hlt
enter
xor
push
mov
or
add
leave
fld
mov
mov
outsb
in
inc
fldt
ret
xor
hlt
movsb
or
push
repz
push
aad
popa
imul
sbb
aad
sbb
or
inc
dec
popl
jne
sub
iret
cmpsb
cmpsb
subb
jecxz
sbb
pop
fcoms
mov
ffreep
ret
adc
lret
pop
imul
pop
insb
rcrb
fcomps
mov
mov
adc
mov
fisubl
cmc
fisubl
lods
stos
mov
xor
fidivrl
mov
mov
lods
fsubl
add
xor
push
subb
pop
cwtl
fisubrl
push
push
fucomi
push
fcmovu
push
lret
and
and
mov
scas
push
fdivs
fcomps
into
rorl
jg
fs
lds
jle,pt
jp
pop
pop
jae
enter
lcall
dec
jbe
dec
pop
lods
inc
mov
mov
fildl
shl
popa
and
inc
mov
fisubl
in
or
mov
lahf
lods
pop
cmpsl
xchg
mov
loop
jle
cmp
push
arpl
sbb
mov
inc
push
dec
call
mov
clc
loope,pn
push
mov
sub
sub
mov
and
pop
jge
add
push
adc
in
adc
push
mov
inc
popa
jo
mov
insl
mov
aam
shrb
mov
xchg
jne
imul
add
movsl
test
lret
cmp
inc
stc
jecxz
add
mov
mov
sahf
mov
sbb
xchg
cmp
mov
cmpsl
xchg
fbstp
test
aaa
fsubs
outsb
mov
mov
sub
clc
mov
test
inc
mov
inc
sub
scas
push
xchg
stos
xor
push
imul
jbe
jne
jmp
lea
mov
push
pop
mov
pop
add
sti
add
jl
mov
cmp
push
add
int3
jo
test
test
mov
or
pop
rcrb
jg
insl
fildl
je
ret
subb
out
and
pop
test
cs
out
inc
pop
push
lods
aaa
mov
dec
shll
mov
mov
adc
mov
orb
lahf
jbe
mov
rorb
xchg
lea
xor
mov
sbb
in
add
ljmp
jnp
xor
or
jp
subb
inc
pop
push
mov
xor
lods
lret
incb
push
mov
inc
sbb
sbb
fisubrl
mov
shrb
mov
or
cmp
mov
jbe
mov
ret
ret
add
xchg
sub
outsb
sbb
add
test
or
adc
fwait
or
out
inc
addl
cld
popa
popa
mov
mov
dec
insl
pop
aam
sbb
ss
lock
outsb
cmp
pop
out
rclb
pop
xor
or
jmp
sbb
lods
jl
fcos
es
or
pop
adc
outsb
sbb
mov
mov
cmp
mov
fildl
or
dec
lahf
push
imul
sahf
sub
stc
jle
insl
insb
mov
mov
ss
fcmovnbe
lcall
pop
push
fidivl
rorl
mov
popa
mov
clc
jmp
dec
mov
inc
add
lods
loope
push
push
jp
inc
pop
in
jge
ds
repz
roll
bound
mov
lcall
in
outsl
mov
vpsubq
fstpt
outsb
or
insl
pop
ret
call
mov
fcmovnbe
lret
xor
and
mov
test
push
test
insb
or
sbb
xchg
insl
insb
sub
pop
push
in
lods
outsb
in
mov
cmc
xlat
andb
mov
in
jecxz
fwait
xor
push
pop
in
mov
push
bound
push
pop
imul
mov
test
mov
fcomps
fldt
or
and
fldt
add
pop
or
aam
lcall
int
push
jne
movsb
mov
mov
adc
out
enter
movsl
lods
pop
sub
mov
dec
pop
push
shlb
sahf
lret
or
push
lcall
cli
mov
ret
out
clc
mov
loopne
mov
mov
mov
jne
outsb
in
inc
mov
aas
or
mov
sbb
sbb
xor
out
xchg
in
and
xchg
xchg
fmuls
ds
xor
xor
mov
insl
or
push
add
adc
pusha
shl
pop
push
mov
adc
in
test
mov
mov
push
cmpl
sub
push
frstor
mov
push
lcall
and
shl
xlat
adc
push
aam
dec
lods
mov
rol
jno
mov
inc
subl
cwtl
cwtl
ret
and
jge
sub
mov
fucomip
insl
addb
repz
mov
add
fildl
pop
add
xlat
test
repz
sbb
lea
push
mov
sub
pop
mov
in
pusha
push
hlt
fildl
mov
insl
aaa
adc
mov
jae
push
fisubrl
insb
push
enter
push
xor
and
test
jns
rcll
mov
cmc
push
rolb
lcall
mov
or
outsb
orl
mov
push
shlb
fdivl
jmp
rcll
xor
shll
int
cmp
lret
mov
outsb
shlb
nop
addl
arpl
dec
aaa
jecxz
scas
insl
popa
pop
lods
adc
roll
inc
insb
sub
pop
sbb
test
cmp
mov
movsl
lods
mov
or
fnsave
pushf
std
mov
jecxz
fistl
scas
pop
xorl
or
jne
xlat
flds
xchg
or
insb
ja
or
shlb
ss
pop
fdivrs
and
dec
lock
and
jns
mov
in
add
jp
sub
cs
dec
enter
and
into
adc
and
pop
rclb
or
xchg
sar
push
mov
pop
push
add
bound
dec
iret
lods
jne
pop
jae
sbbl
pop
fisubl
fwait
jle
sub
push
sbb
mov
sub
imul
fcmovu
pop
aam
mov
mov
add
sbb
fildl
sbb
mov
jp
fimull
je
xor
mov
out
sti
shll
inc
outsb
jne
in
cmpsl
push
bound
jae
adc
dec
mov
or
aaa
sub
pop
inc
fnstenv
sbb
xchg
dec
add
sbb
fldl
sub
push
lret
cmp
push
lds
pusha
sahf
jg
daa
cwtl
or
adc
insl
xlat
or
cmp
sub
outsl
rep
es
in
imul
cmp
mov
pop
arpl
and
mov
rol
pop
sbb
sbb
in
and
decb
out
in
and
add
sbb
stc
repnz
aas
stos
addr16
sub
pop
or
dec
mov
insl
pop
or
jae
xor
pop
fisubrl
mov
push
imul
rclb
jbe
and
sbb
fstl
sbbb
loope
sahf
push
pop
cmp
xchg
or
fnsave
les
shl
cmc
sbb
lea
pop
push
jnp
ret
loope
xchg
mov
or
pushf
les
fistpl
test
xor
mov
scas
orb
xchg
dec
mov
mov
sbb
xchg
lds
push
insl
clc
add
movsl
cmp
rol
mov
cmp
mov
in
fbld
outsl
dec
fildl
lock
xchg
leave
fwait
pmaddwd
mov
jp
sbb
cmp
ljmp
jp
inc
ret
inc
mov
pop
fimull
jecxz
sti
mov
jp
add
outsb
pusha
inc
pop
push
xchg
and
adc
movsl
push
mov
cltd
push
les
fmul
ror
out
out
fldt
fiaddl
push
je
inc
add
adc
lods
stc
sti
sub
je
jae
ret
popf
and
push
inc
adc
ja
jns
fisubrl
mov
xor
pop
fwait
xor
gs
and
jge
jg
in
dec
mov
ret
aad
fs
int3
inc
and
call
pop
repnz
push
repz
out
popa
icebp
adc
sub
cmp
decl
adc
push
add
push
insl
adc
imul
insl
mov
fadd
cmp
or
insl
loope
sahf
scas
xchg
pop
fiaddl
mov
mov
mov
sbb
scas
sub
dec
rclb
mov
jbe
pop
xor
hlt
jge
jne
or
sub
mov
mov
repnz
dec
mov
mov
aas
cs
test
adc
sub
jae
in
out
aam
insb
sbb
popf
roll
sub
test
aam
and
shrl
icebp
test
aam
pop
push
xchg
rcl
pusha
jnp
adc
xchg
sarl
lahf
shlb
arpl
shll
ja,pt
ret
xor
or
mov
push
insl
push
mov
mov
mov
push
outsl
pop
ret
cmc
mov
jmp
jg
jg
gs
pop
mov
or
aam
loope
imul
arpl
fwait
dec
pusha
or
fsubrs
movsl
sub
outsb
pop
or
je
inc
mov
push
arpl
and
cs
mov
push
fisubrl
xor
and
or
xchg
imul
pop
adc
push
sbbb
jecxz
adc
outsb
insl
fcmovnu
iret
inc
inc
loopne
out
cmp
add
push
jnp
and
mov
insl
insb
pop
mov
jecxz
sbb
aas
pop
sub
les
cmp
adc
inc
mov
add
js
neg
dec
mov
aam
adc
or
insl
dec
sbb
test
xchg
sbb
lahf
mov
imul
push
mov
and
test
xorb
fucomp
mov
je
dec
repnz
sbb
repnz
push
adc
clc
xor
add
insl
int3
insl
sti
adc
add
aam
jnp
aam
iret
roll
fcomp
sbb
lret
stos
sbb
mov
stos
fisubrl
mov
and
ret
fdiv
lods
cltd
loopne
mov
test
das
jno
push
and
pop
sub
sub
mov
movsl
add
int3
lret
or
mov
mov
mov
inc
sub
push
shl
scas
mov
lahf
movsb
cmp
mov
jge
and
and
sbb
lea
xchg
and
subb
sub
addr16
mov
std
icebp
fwait
cltd
test
inc
sti
mov
inc
aam
popf
in
push
cmp
cwtl
movzbl
mov
pop
mov
add
push
dec
adc
fwait
sbb
sbb
shrl
aam
fadds
mov
push
xchg
mov
lret
sbb
lea
loop
jl
push
push
pushf
adc
mov
subb
aam
xchg
popa
lds
cwtl
imul
pop
fsubs
lea
fcmovnbe
jmp
pushf
sbb
notb
inc
cmp
sbb
mov
repnz
insl
jb
push
xchg
add
adc
aam
scas
cmpsb
push
push
mov
sub
mulb
test
fadds
fwait
add
and
shll
sub
pusha
or
fildl
push
mov
and
mov
pop
loop
mov
mov
xchg
sub
clc
pop
lcall
xchg
dec
cli
subb
xchg
bound
mov
shrb
jmp
mov
imul
dec
outsl
fdivl
mov
mov
push
test
fsubrl
lret
cmp
fcoml
sbb
mov
lcall
dec
imul
ds
adc
cmpsl
ret
mov
mov
int
imul
mov
nop
push
sbb
fwait
dec
mov
mov
stc
stos
sbb
repz
test
adc
sbb
loop
outsb
dec
jo
cmc
ja
aam
inc
or
sbb
mov
add
movsl
jb
dec
in
leave
sbbl
adc
je
sub
stos
test
push
xchg
movsb
cli
pop
fidivrs
or
cs
jmp
xchg
mov
imul
cmc
fucomip
out
mov
mov
jmp
pop
push
cwtl
cmc
std
popa
arpl
fcmovb
scas
jmp
xchg
xor
lds
dec
imul
sub
sbbl
mov
pop
sbb
dec
jo
rcl
xor
fdivl
insl
pop
jne
mov
push
mov
fsub
push
mov
mov
gs
out
dec
cs
mov
vphaddubw
inc
lods
sub
decl
pop
fcomp
in
mov
divl
mov
sub
ss
sbb
or
mov
xlat
adc
pusha
fldt
scas
int
jmp
repnz
xor
and
outsb
fistpl
fdivrs
test
mov
mov
mov
out
mov
out
arpl
gs
cwtl
cmp
cmp
jns
pop
xor
mov
adc
aaa
in
mov
mov
sub
and
cli
inc
or
inc
in
roll
mov
pop
loopne
lods
test
sub
icebp
adc
add
cmpsb
faddp
sub
cs
arpl
fisubl
add
xor
popa
arpl
push
addr16
movsl
sbb
mov
mov
or
jo
decb
mov
push
ljmp
jns
mov
ss
insl
mov
sahf
adc
lods
fstpl
je
xchg
mov
sbbb
mov
inc
jo
fldl
pop
dec
ret
sub
loope
loopne
cmc
xor
lcall
mov
adc
icebp
push
test
enter
pop
jmp
add
inc
addl
cmpsl
dec
inc
xchg
inc
cmp
or
rolb
rorl
popf
jmp
jbe
jo
adc
addl
jbe
shr
scas
cmpsl
fsubrl
xlat
pusha
xchg
test
mov
inc
inc
mov
adc
insl
sbb
and
insb
adc
or
jg
mov
lea
insl
mov
jl
lret
fildl
xchg
insb
in
add
dec
add
sub
in
int3
pop
push
jne
push
les
into
add
inc
inc
adc
and
xchg
je
aad
cs
aas
stos
mov
rcl
mov
push
sub
ret
and
jns
ret
xchg
outsb
insl
movsl
cmp
stos
cltd
cmp
mov
jnp
pop
addr16
inc
mov
mov
push
jg
mov
out
push
outsb
call
test
iret
mov
lods
jbe
popa
repnz
xor
fs
outsb
in
roll
hlt
lds
push
push
sub
cmpl
movsl
sbb
loop
std
ljmp
clc
xchg
ja
out
fstl
dec
into
add
add
nop
push
rclb
fsubl
cmpsl
pop
push
mov
pushf
outsb
pop
sub
inc
push
sub
test
push
pop
jae
lock
mov
mov
mov
push
orl
hlt
subl
push
push
adc
insl
popa
xlat
call
mov
pop
pop
scas
mov
push
push
lcall
inc
lods
je
fistl
mov
jg
or
fiaddl
push
into
test
ss
pusha
push
jbe
into
shlb
lahf
fiadds
fstp
lods
jbe
jmp
push
mov
push
sub
pop
fdivs
dec
xchg
mov
jmp
movsb
push
sub
adc
in
inc
add
or
push
inc
lods
test
dec
es
or
or
mov
out
xchg
sub
push
add
sbb
loope
gs
pop
pusha
imul
aad
enter
adc
push
les
clc
jo
cmpb
or
add
mov
aam
and
push
pop
push
leave
sbb
adc
and
or
mov
sub
push
scas
cmp
mov
ja
insl
stos
fidivl
inc
pop
ret
push
adc
cmp
xor
test
inc
pop
cmp
outsb
insb
mov
sahf
and
push
cmp
xchg
mov
aam
or
add
adc
data16
fildl
pusha
dec
or
icebp
repnz
or
xlat
rcll
mov
daa
ret
enter
cmp
mov
and
add
jae
pop
mov
push
mov
cmp
pop
shll
dec
test
sub
dec
and
ret
mov
jo
jno
call
push
sahf
pop
add
mov
push
mov
movsl
bound
and
mov
inc
sub
repnz
xchg
mov
mov
cmp
mov
xor
cs
pop
adc
adc
mov
mov
mov
push
mov
insl
mov
sub
inc
jle
adc
mov
push
fcmovnu
mov
lret
loop
and
push
jno
icebp
mov
aad
mov
es
jne
fsubrs
inc
mov
rcr
test
das
mov
fndisi(8087
outsl
mov
push
or
add
push
outsb
sub
pop
dec
jno
push
mov
fst
cmp
and
outsb
sbb
aad
and
lods
mov
and
ret
jle
out
lods
jne
sub
jp
xchg
mov
in
clc
enter
jbe
inc
jne
fcmove
inc
or
mov
sub
loopne
rorb
imul
and
add
mov
in
sub
loop
fidivl
and
dec
lods
or
xchg
inc
inc
inc
decb
xchg
add
sub
xor
test
cmp
inc
mov
insb
or
pop
inc
mov
into
push
imul
loope
inc
fs
xor
mov
and
xchg
int
scas
pop
fdivs
adc
xchg
lock
ret
je
inc
xorl
lods
shl
lea
scas
loop
mov
test
cmp
or
arpl
shlb
add
mov
push
test
pop
pop
dec
inc
fdivl
push
decb
jne,pt
pop
sub
shrl
mov
ljmp
inc
mov
cltd
or
add
mov
mov
mov
and
mov
call
adc
test
jo
test
and
mov
lods
clc
call
xor
cmpsb
pop
add
fcmovbe
ret
movsl
int
cmpsb
xor
push
jne
insb
mov
mov
jne,pt
mov
mov
xchg
mov
popa
cmp
sub
into
sub
sbb
repnz
lret
dec
in
or
cmp
imul
sbb
enter
divb
mov
mov
dec
sti
addb
cmp
cmp
inc
out
mov
aad
xchg
mov
sarl
repnz
xchg
stc
popa
or
and
fistl
and
mov
shl
sbb
rcll
or
pusha
pop
stos
lods
mov
fistl
mov
subb
lcall
and
negb
sub
stos
or
inc
mov
sub
insl
mov
ljmp
cmp
bound
mov
test
mov
adc
imul
and
jo
les
cmp
sbb
aad
pusha
lea
adc
xchg
mov
lds
add
xchg
cmp
pop
rorb
mov
insl
popa
pop
pop
or
fisttps
mov
and
mov
sub
fstp
aam
loope
mov
roll
inc
iret
push
push
cmp
insb
insl
pop
aam
fidivrl
push
insl
cli
bnd
or
inc
movb
std
sti
nop
push
push
pop
jno
test
test
jge
xchg
xlat
rcr
imul
sbb
je
jne
leave
push
mulb
sub
mov
js
push
movsb
fldt
mov
outsb
rorl
sub
xor
aaa
test
addl
mov
in
xor
ficompl
sbb
test
or
mov
mov
rol
inc
mov
sub
mov
push
mov
mov
sbb
frstor
aaa
clc
call
call
adc
pop
mov
insl
orl
rclb
mov
adcb
push
out
mov
ret
pop
mov
ljmp
rcll
mov
adc
xchg
pop
test
inc
jne
sub
mov
aaa
cmp
js
cmc
nop
jmp
push
je
dec
xchg
jmp
clc
sbb
push
sub
cmc
test
outsb
imul
cli
fdivs
repz
imul
xor
push
jne
xchg
dec
cmp
xor
fcmovu
into
xor
mov
stc
lea
mov
xchg
pop
jne
jl
mov
in
rcl
xor
cmp
fiadds
sub
push
aam
js
adc
outsb
jl
stc
xchg
pop
sub
sub
stos
rcrl
inc
xor
sbb
mov
hlt
cmpsl
out
and
xchg
mov
test
fwait
push
lods
mov
xchg
lods
lahf
xor
sub
xor
pop
pop
mov
call
jmp
lcall
mov
and
ss
test
enter
fistl
pop
jae
jp
fildl
and
mov
loop
push
aaa
dec
jns
push
aaa
push
mov
in
mov
cmpsb
aaa
int3
xor
imul
jecxz
les
or
cmpsl
mov
cs
jp
jbe
pop
fidivrs
mov
mov
insl
sbb
push
mov
adc
insl
or
pop
mov
stos
sbb
mov
mov
xchg
andb
mov
adc
pop
or
add
sbb
fistpl
dec
outsb
add
aad
push
sbb
mov
std
pop
lds
push
stos
or
adc
stos
or
les
sbbb
push
mov
test
mov
sub
pcmpeqb
scas
lods
data16
ret
or
and
push
mov
jmp
pop
and
and
outsl
fsubrl
mov
pushf
or
jl
fldt
nop
adcb
xor
push
add
push
ret
scas
mov
dec
aaa
pop
inc
outsl
inc
out
das
orb
pop
add
cli
add
cli
les
test
dec
lret
and
aas
sub
rclb
or
cmp
push
xor
push
push
loop
outsb
adc
mov
test
into
xchg
in
loopne
rorb
out
push
mov
je
dec
cmp
insb
dec
es
outsb
or
mov
mov
movaps
mov
dec
jo
inc
loopne
scas
fadds
je
jo
pop
hlt
sub
or
fildll
lods
mov
xor
inc
cmp
arpl
mov
jmp
push
cld
sbb
add
pusha
jle
push
shll
clc
ret
mov
mov
xchg
inc
sbb
pop
rolb
xchg
mov
test
mov
movsl
ret
add
aad
dec
jge
idivl
sbb
mov
dec
aaa
or
xor
mov
add
push
xchg
xor
das
adc
mov
test
test
xchg
add
ss
inc
mov
imul
inc
out
loope
mov
pop
pop
idivl
and
mov
mov
push
ds
sbb
pop
out
pop
xchg
insl
pop
push
lods
xchg
outsl
loopne
sti
pop
push
shlb
ret
push
clc
mov
cs
lods
or
mov
sub
dec
add
std
jno
jb
and
cmp
mov
fnsave
mov
jmp
movsl
insl
imul
sbb
xor
sub
push
mov
fcompl
dec
imul
inc
imul
push
sbb
dec
add
addl
jnp
cmpsl
pusha
lea
insb
or
and
mov
cmp
lcall
pop
stos
test
fildll
loop
push
insb
test
inc
daa
push
out
fs
mov
sub
dec
xor
jne
mov
popa
jmp
push
in
or
call
rorb
push
dec
and
pop
push
imul
jno
insl
jmp
sti
loop
fwait
cmp
mov
adc
scas
pop
inc
pop
xchg
fadds
mov
insl
fcmovnu
movsl
mov
jns
push
cmp
in
push
mov
sbb
pop
push
sahf
mov
mov
in
jge
xor
es
clc
adc
rol
mov
pusha
adc
sub
fxam
or
movsl
lods
fnstsw
mov
inc
xchg
xor
pop
cltd
cwtl
cltd
rclb
shrl
bound
or
pop
sub
jbe
mov
mov
adc
lods
stos
bound
mov
add
pop
out
xlat
pop
jle
mov
clc
es
leave
cmp
or
pop
pop
adc
and
ss
loop
nop
ds
mov
mov
inc
lcall
push
out
inc
or
inc
inc
stos
sub
test
in
push
or
or
inc
pop
les
daa
lahf
in
aad
mov
je
jle
cwtl
pop
pop
stc
orl
sbb
fcomp
movsl
test
mov
leave
in
push
les
test
clc
xchg
popa
mov
mov
call
rcll
mov
stos
pop
pop
les
inc
mov
mov
mov
pop
add
mov
sub
je
pop
into
fldcw
in
mov
add
sub
cmpsl
add
jecxz,pn
out
lret
dec
movsb
in
or
ret
inc
mov
fcmovnbe
ret
outsb
cmp
mov
ja
mov
mov
dec
jp
into
jg
xchg
movsl
divb
sahf
lods
sub
inc
mov
or
out
mov
addl
movsb
mov
fiaddl
xor
mov
cwtl
sub
push
faddl
loop
fstpl
inc
jge
fidivrl
adc
or
mov
jp
xlat
gs
fstp
push
sub
sub
add
mov
lds
push
mov
fiaddl
das
icebp
cwtl
dec
mov
push
in
movsb
ds
add
mov
popa
xorl
sub
jbe
imul
ss
in
clc
pop
clc
les
inc
frstor
mov
out
or
lea
xlat
inc
mov
adc
inc
jp
lods
push
add
mov
jae
icebp
std
xchg
xchg
pop
cmc
or
ret
xchg
or
sbb
xor
sub
fbstp
pop
cmpsb
mov
lahf
pop
jg
and
jne
popa
orl
adc
jecxz
repz
sbb
mov
inc
aam
sub
pushf
xchg
lret
xor
lods
test
pop
xor
testl
outsb
sbb
cmp
gs
lods
dec
scas
mov
add
inc
dec
hlt
sbb
xchg
std
mov
bound
sahf
lds
mov
outsb
xchg
fdivr
add
imul
sbb
pop
mov
stos
dec
movsb
sub
xchg
add
inc
jp
rclb
mov
call
add
or
sahf
or
xchg
test
or
mov
loope
in
pop
lods
andb
mov
add
mov
orb
mov
xchg
adc
addr16
xchg
add
sub
outsb
cmp
mov
fidivl
sbb
aas
sub
movsl
insl
fcmovne
mov
in
add
out
fcmovnb
push
mov
inc
mov
insb
enter
mov
and
inc
push
and
jo
faddl
flds
cltd
fnstenv
and
aaa
mov
xchg
xchg
idivl
loopne
shll
jle
sub
test
lret
js
movswl
sbbb
clc
lds
push
fimull
fneni(8087
mov
je
push
dec
pop
adc
fiadds
out
sahf
push
pop
test
frstpm(287
out
add
xchg
das
test
jbe
sbbl
mov
sbb
int3
imul
inc
sbb
jno
mov
out
adc
pop
dec
lock
lea
fcoms
out
sahf
mov
mov
insl
subl
test
fs
pop
push
pop
jns
sub
pop
rcll
sbb
mov
push
scas
sub
fimull
lcall
pop
push
or
and
add
cmp
inc
shr
xor
inc
sub
push
push
or
add
and
pop
stos
mov
mov
sub
in
mov
xchg
das
test
add
or
push
adc
fucomp
and
sbb
jbe
jnp
pop
or
dec
test
ds
rcrl
mov
in
lcall
inc
enter
add
les
add
adc
ret
inc
lods
push
dec
push
clc
lahf
imul
inc
cmp
mov
gs
popa
jnp
fisubl
cs
push
pop
add
cmp
pop
mov
mov
pop
shll
cmp
subl
sub
popa
ljmp
cmc
arpl
and
mov
cs
shlb
jbe
insl
cwtl
push
cmp
cmpl
pop
pop
add
pop
fsubrs
shl
push
fcomp
adc
aaa
ds
mov
call
or
push
fnstsw
jge
ss
mov
mov
add
imul
jl
testb
or
fidivrs
sahf
es
push
insb
iret
scas
pop
pusha
fs
or
push
fdiv
inc
aam
pop
mov
test
push
dec
xchg
jmp
push
rolb
jne
jge
mov
stc
pop
push
fisubl
cmp
adc
ret
xorb
iret
sub
mov
mov
push
xchg
fwait
mulb
fistpl
xlat
gs
push
jo
jg
xor
insl
xchg
into
mov
es
pop
js
mov
adc
repnz
mov
sbb
pop
aad
adc
shrb
stos
sub
inc
mov
shlb
sbb
xor
scas
mov
push
fnsetpm(287
and
outsb
sbb
xchg
cmpsl
pushl
sub
inc
arpl
in
mov
sub
insl
mov
pop
xchg
adc
sbb
pop
mov
dec
cs
mov
cmp
push
les
add
fcmovnu
sbb
jg
cmp
test
bound
cmpsl
xchg
imul
jp
dec
sub
inc
fstl
or
orb
mov
loopne
mov
mov
loopne
mov
clc
dec
out
push
cmp
fsubrs
fwait
dec
sub
mov
push
mov
push
cmc
fldt
sub
pop
xchg
lea
push
test
jmp
mov
test
push
mov
cmpsl
jno
loopne
jmp
fistl
xor
cmpsl
push
fisubrl
call
push
insb
test
enterw
lret
aam
xor
mov
sbb
inc
xlat
dec
mov
mov
mov
mov
iret
in
sub
pop
add
popf
mov
or
shrl
into
sbb
fdivs
lea
and
fdivs
mov
inc
in
mov
sub
insl
in
fstpl
jmp
insl
dec
pop
mov
dec
sub
std
or
mov
pop
sub
int
pop
push
inc
fistl
ljmp
mov
inc
pop
adc
fistpl
out
roll
and
sarb
fwait
push
fdivs
adc
repnz
mov
popa
lods
push
xor
int3
bound
push
dec
test
mov
adcl
inc
inc
ss
adc
popa
sub
sub
into
mov
notb
adc
jg
test
mov
xchg
cwtl
test
pop
movsl
das
dec
fbstp
inc
cld
pop
inc
mov
jo
pushf
arpl
pop
les
orb
lret
jp
fcmovnb
movb
call
mov
or
cmp
and
jne,pn
mov
mov
mov
or
pop
lcall
pusha
push
pushf
lea
dec
sub
inc
sub
les
insb
pop
and
mov
jne
insb
mov
adc
leave
insl
pop
fldt
sub
cmp
sub
divl
clc
fwait
cmp
les
cs
je
cltd
push
pusha
imul
lret
adc
cmp
sarl
jmp
mov
sbb
imul
into
inc
xchg
push
or
stos
jbe
mov
sub
push
fists
ds
cmp
lods
and
push
inc
sbb
inc
popa
inc
add
sarl
ret
sbb
jmp
aad
add
xchg
mov
xor
xchg
lods
int
mov
push
mov
mov
shlb
repnz
jg
inc
ss
insb
aad
jae
dec
ja
lods
sub
push
dec
leave
add
cmp
insw
fcmovnb
jmp
hlt
jecxz
andb
hlt
sbb
jle
orl
sub
gs
int
insl
add
movsl
fildl
mov
inc
adc
scas
xchg
outsb
xchg
shlb
pop
xor
fsubrl
push
jle
dec
out
aaa
cs
push
add
out
flds
pop
lods
cld
add
pop
mov
lahf
outsb
lea
xor
jnp
test
rcrb
out
mov
sub
adc
adc
enter
mov
cs
mov
fs
into
sub
mov
sub
add
mov
jne
xor
and
pop
jne
xor
dec
divl
mov
add
movsl
mov
lods
lods
in
pop
push
mov
pop
jl
sbb
sub
sahf
and
ret
xor
jecxz
and
mov
pop
incb
lds
and
xchg
pop
adc
fldl
jb
loopne
lcall
pop
shr
fwait
jb
dec
xchg
aaa
mov
and
in
sub
sub
push
xor
sbb
inc
ds
mov
outsb
pop
jo
mov
dec
fstpt
add
lret
inc
inc
aam
mov
jl
mov
repnz
jge
pop
pop
mov
out
sahf
mov
mov
cli
fwait
lea
push
cli
das
enter
mov
scas
out
xchg
inc
in
add
jmp
mov
subl
push
mov
insl
insl
push
in
adc
sub
pop
mov
mov
xchg
push
mov
adc
fwait
or
insl
or
movsb
shl
aam
mov
jmp
aam
inc
aaa
push
std
or
cmp
dec
lea
pop
mov
sub
enter
nop
aam
shll
testb
imul
sub
imul
aad
lods
pop
in
mov
cmp
xor
add
add
and
sbb
ss
mov
mov
pop
sbb
test
ds
leave
mov
lret
mov
xchg
lods
insl
mov
fisttpl
jnp
js
adc
adc
xlat
dec
test
movsl
mov
imul
insb
andb
dec
sbb
movb
pushl
shrb
arpl
ljmp
pop
shl
rcll
push
xchg
icebp
inc
pop
mov
sub
test
xchg
std
mov
fsubrs
iret
sub
lcall
sub
sub
adc
lret
cmp
aam
or
sub
scas
xor
pop
fisubrl
stc
jg
or
xor
mov
jne
fstpt
shrl
xorl
push
jno
frstor
aad
mov
fmuls
fldcw
push
mov
mov
xchg
ljmp
adc
addr16
stos
push
pusha
mov
aaa
push
inc
adc
scas
adc
or
dec
mov
and
pop
mov
fisubrl
push
pop
cltd
andb
insl
pop
cmp
cmp
les
adc
scas
rcll
lock
jo
mov
pushf
movsb
jbe
fmull
mov
inc
or
cmp
mov
rol
lea
jle
movsb
push
sbb
mov
imul
push
adc
nop
cld
ret
ret
testb
xchg
add
fisubrl
stos
cmp
xchg
cmp
pop
inc
pmulhuw
mov
icebp
jl
test
aaa
sbb
cmp
mov
fcmovnbe
inc
fs
outsb
sbb
movsl
lods
mov
ror
int
test
aad
mov
pop
fimull
adc
adc
dec
adc
in
mov
pop
stos
lods
leave
inc
add
insl
sub
sub
push
or
push
mov
stos
xor
lret
jb
int3
pop
stos
push
cmp
pop
inc
inc
push
xor
sbbl
mov
call
fidivs
jnp
pop
rolb
xchg
or
decb
les
loope
adc
jge
ret
lds
mov
mov
jge
add
lret
push
mov
and
fnsave
sub
call
mov
or
or
outsb
sbb
or
iret
add
xor
xchg
lcall
stc
aas
jecxz
xchg
test
aaa
or
xor
pop
push
sub
out
or
insb
sub
stc
jge
sahf
cmp
insl
das
pop
jbe
leave
xchg
fisttps
fstps
into
roll
mov
or
mov
add
aas
pop
stos
test
sahf
mov
test
pop
add
cwtl
insb
cs
lods
and
sub
push
sbb
jp
sbb
ret
pop
nop
pushf
sub
lcall
cmp
jno
ficoml
shl
pop
dec
adc
push
dec
ds
inc
dec
push
fcoml
mov
cmc
cmpsb
jno
outsb
frstor
add
sbb
fisttpll
adcl
rorl
adc
ficoml
sbbl
xchg
xchg
inc
jne
inc
fcoml
repnz
xchg
jbe
push
aas
fnstsw
push
je
fcomps
popf
ror
jg
mov
aam
and
out
mov
mov
rep
orb
int
mov
pop
repnz
jge
pop
jb
add
inc
out
pop
jno
insb
lods
cmovle
mov
push
sub
mov
xor
and
into
inc
mov
mov
outsb
sub
cmpsl
or
int3
mov
fwait
pusha
or
cld
test
sbb
push
add
sub
jnp
aam
mov
inc
out
lahf
sub
fistl
sub
xlat
sub
je
mov
mov
mov
out
fisubl
fadds
cmp
mov
insb
enter
and
push
push
aad
fst
jge
xor
push
into
and
or
xchg
push
mov
adc
lods
fsubrs
popf
cmp
lret
push
mov
mov
pop
mov
pop
mov
jmp
jmp
fstl
sahf
sub
mov
lds
imul
lds
push
orb
pop
push
mov
popa
repnz
fildl
notb
cwtl
fwait
adc
sub
jb
or
imul
add
cmpsb
add
fdivl
into
f2xm1
cld
sub
add
imul
imul
imul
aad
pop
lret
test
cli
add
cmp
push
xor
jo
loopne
mov
or
push
xchg
xor
inc
mov
outsb
adc
call
stos
push
dec
adc
imulb
call
sahf
out
xor
icebp
inc
push
add
push
xor
fmull
out
inc
sbb
pop
jbe
mov
je
mov
jmp
xchg
dec
mov
clc
mov
add
fadds
or
insl
push
rol
cmc
jb
les
mov
pop
or
xor
fcmovnb
inc
sbbl
mov
out
pop
out
sbb
dec
push
cli
and
xchg
or
mov
cmp
cmp
jge
or
iret
xchg
imulb
add
repnz
jae
fcomps
inc
cmp
sahf
dec
inc
xchg
cmp
and
pop
xlat
adc
insl
popa
mov
sbb
shrl
ja
cmpsl
push
or
push
jae
sub
aam
shl
push
xchg
sbb
sub
lds
fisttpl
mov
mov
lea
or
jns
add
pop
adc
mov
lret
sub
mov
jle
sti
enter
movsl
jbe
cmp
or
and
sbb
rcl
dec
pop
js
sbbb
mov
inc
jl
cmp
out
enter
jmp
add
xchg
add
mov
fcmovne
push
pop
lods
push
push
imul
gs
ret
insl
subl
and
mov
adc
mov
inc
pop
loop
xorl
pop
lds
mov
pushf
push
test
or
std
das
mov
rcr
mov
lods
je
daa
sti
out
je
negl
and
jp
dec
pop
lods
pusha
xchg
mov
insl
imul
scas
mov
fldl
fildl
ret
push
mov
movsb
adc
int3
or
push
mov
dec
adc
and
fdivs
fisubrl
mov
mov
push
popl
out
dec
incb
mov
mov
push
push
jp
adcl
inc
sbbl
in
repz
fsubs
out
dec
xchg
xchg
mov
addb
pop
lods
dec
sbb
or
inc
imul
inc
jg
cmpsb
cmc
pop
movsb
sub
pusha
xor
ds
mov
pusha
test
push
test
add
out
sbb
mov
ret
xchg
lods
mov
push
das
xchg
pop
mov
loop
cli
mov
push
mov
pop
xchg
cmp
roll
sbb
test
dec
bound
in
es
enter
cmp
mov
pop
call
cmp
or
pop
ficompl
mov
int3
mov
sub
mov
pop
inc
int
dec
sbb
cli
clc
and
mov
fcomps
adc
shrb
out
adc
jne
pop
lahf
roll
fdivr
pusha
add
out
sub
pop
jp
outsb
push
cmp
outsb
insb
lret
cli
pop
xchg
and
push
outsl
insb
mov
rol
mov
add
or
pop
mov
fcoml
or
outsl
lods
mov
xchg
test
mov
pop
adc
shrl
mov
movb
xchg
push
movsb
or
ja
xchg
iret
inc
mov
call
fcmovnbe
mov
fsub
pop
popf
cmpsb
or
jmp
adc
mov
jbe
lods
or
data16
movsb
pop
dec
in
pop
int3
out
sbb
test
dec
or
xchg
dec
les
out
jmp
add
pop
les
lea
mov
inc
aam
loopne
shl
clc
add
jo
mov
sub
xchg
push
cmc
and
dec
cmpsl
lods
push
mov
and
cmp
sbb
push
aas
sbb
pop
sbb
jno
aaa
inc
jle
cmp
insl
pop
mov
mov
enter
jo
mov
mov
loope
rclb
test
mov
mov
loopne
movsl
and
call
into
adcl
pop
sub
in
xchg
dec
inc
mov
xor
mov
ss
lret
test
out
scas
ret
test
push
loop
mov
adc
add
dec
dec
inc
sar
sub
jbe
lds
enter
pusha
inc
lds
push
fistpll
and
paddsw
test
cs
push
fsubrs
cmp
pop
xor
dec
or
fildl
jbe
in
loope
inc
pop
push
test
insl
pop
sahf
jg
or
mov
dec
jnp
adc
cwtl
mov
mov
mov
insl
ds
jne
sub
ret
out
push
push
xorb
aam
xchg
pusha
es
fcmovu
mov
sbb
pop
dec
add
pop
push
stc
aam
pop
pushf
xchg
sub
aaa
mov
sub
je
sub
jg
push
cwtl
or
mov
lret
inc
in
pop
dec
lods
out
mov
mov
inc
in
aam
mov
mov
pop
cmp
inc
fdivrl
mov
jne
mov
lret
loope
addb
fwait
or
mov
and
mov
fistl
loopne
dec
and
jns
lea
adc
add
gs
dec
jl
repnz
ret
dec
jge
mov
fidivrl
call
enter
mov
arpl
mov
filds
inc
and
and
sub
cs
scas
stc
loop
insl
imul
sub
daa
or
cmpsb
mov
xorb
xchg
xchg
push
popa
mov
sti
sub
xchg
mov
fsubrp
pop
mov
test
addr16
pop
outsb
jbe
mov
and
or
fisttpl
jecxz
xor
mov
lods
movsb
inc
pushf
sbb
and
fcmovnu
jecxz
pop
test
mov
cld
std
and
mov
out
aaa
xchg
pop
mov
jmp
pop
cmp
push
out
cmp
bound
xor
mov
inc
test
and
inc
mov
es
into
pop
jbe
mov
xor
jecxz
fsubrs
add
and
fimuls
push
pop
adc
rcr
and
popa
mov
adc
cmp
jbe
jo
orl
pop
or
cmp
fstpt
and
or
repz
in
addb
inc
inc
xchg
lods
or
or
push
or
xchg
mov
xor
mov
xor
test
test
movsb
mov
ljmp
mov
pop
mov
cmpsl
data16
aaa
aas
cmpsl
sub
mov
test
and
cmpb
fnsave
pop
ljmp
ss
add
xchg
or
push
pop
mov
push
inc
lds
in
xchg
aad
insl
inc
jne
jge
lcall
pop
mov
cmp
add
mov
dec
lods
std
loop
and
xor
cmp
aaa
mov
push
pop
fisubs
lret
xor
aad
test
into
pop
add
xor
mov
sub
or
sub
jbe
xchg
inc
in
mov
dec
nop
or
loop
sarb
xchg
les
out
cmpl
adc
add
push
test
add
mov
mov
xchg
xchg
fcmovnbe
ficoms
mov
push
mov
jbe
repz
sbb
orb
sub
cmp
mov
push
fisttps
cmpsl
add
cs
test
cwtl
mov
mov
mov
and
aam
sbb
jnp
sub
add
and
aas
fsubrs
dec
pop
in
dec
insl
or
mov
add
in
mov
jne
lahf
je
leave
gs
rcrb
fcoml
mov
jno
hlt
dec
test
aad
lods
in
movsl
ret
xor
add
inc
inc
inc
cwtl
mov
add
push
and
hlt
rcrl
cmp
adc
test
subl
pop
pusha
fs
mov
pop
jecxz
sbb
push
fidivl
lds
ss
mov
and
dec
dec
mov
jo
sbb
push
mov
sub
test
xor
out
or
add
out
add
mov
shlb
xlat
shrb
lods
insl
add
sbb
or
xor
adc
sub
mov
and
mov
mov
les
jge
test
insb
aaa
fiaddl
movsb
loop
test
mov
repnz
push
mov
mov
pop
or
dec
in
test
push
push
cmpsb
outsl
fldt
movsb
pop
xchg
pop
shll
add
sub
and
push
push
sbb
loopne
and
insl
pop
pop
test
sbb
pop
sub
mov
jg
cmpsl
push
xor
xchg
idiv
sub
lea
lock
sub
mov
mov
pop
jmp
insl
shl
push
or
mov
das
ret
test
mov
insl
mov
mov
xor
mov
push
adc
mov
lret
lock
and
mov
pop
cwtl
pusha
xchg
inc
push
mov
inc
shrl
jge
cli
jmp
fiaddl
mov
jle
addl
les
push
mov
fdivs
dec
push
aam
inc
int
lods
insl
mov
mov
je
ficoms
mov
xchg
lea
pop
push
mov
xor
mov
push
lcall
pop
sbb
push
adc
aam
lret
sub
insl
sub
mov
mov
fs
push
mov
lcall
lods
jle
dec
xchg
push
mov
mov
scas
adc
mov
adc
xor
mov
imul
movsl
lods
mov
outsl
sub
aas
cwtl
adc
enter
mov
aad
inc
cmp
nop
outsb
mov
cmp
sbb
add
add
push
and
xchg
mov
hlt
pop
push
sbb
mov
jno
loopne
jae
push
and
mov
shlb
mov
xor
inc
xchg
rolb
xor
pop
fadd
mov
stos
lds
jge
ja
push
loopne
mov
adc
pop
mov
inc
or
fidivl
jo
lahf
hlt
je
les
and
pop
inc
mov
pop
sub
adc
out
hlt
ficoml
iret
lods
mov
mov
jne
pop
mov
mov
mov
mov
lods
push
hlt
cmpsl
aas
pop
push
fsubrl
daa
shrb
pop
mov
sbb
popa
inc
adc
jo
add
sbb
jae
inc
lret
mov
add
pop
inc
xlat
pop
mov
mov
push
push
xchg
mov
movsl
sbb
into
adc
mov
fs
sbb
cmpb
roll
out
les
pushf
dec
rolb
ficompl
pop
notb
popa
inc
rolb
shrb
xchg
cmp
mov
push
sti
or
sub
or
dec
insb
subb
js
pop
sub
insb
pushf
aad
xor
inc
sbb
insb
data16
pop
insl
insl
or
xchg
fdivl
add
pop
xchg
adc
outsb
push
mov
clc
inc
daa
or
lods
xchg
gs
negl
push
pop
pop
out
push
mov
std
push
adc
mov
in
jl
lret
xor
jbe
insb
aaa
add
pop
cwtl
rorb
mov
popa
pop
fcomp
pop
dec
enter
adc
sub
outsb
fwait
cmc
test
bound
inc
jo
push
mov
jb
int
rol
and
cmpsl
jmp
decb
ds
sahf
xlat
cmp
push
aad
xchg
xor
sti
dec
daa
lods
add
push
sbb
ret
dec
mov
test
jae
pop
daa
mov
cs
and
ss
mov
inc
int3
dec
aas
cmpsl
inc
mov
push
les
adc
mov
xchg
lret
mov
cmpb
rcll
shr
mov
insl
add
or
xchg
push
pop
cmpsl
push
mov
dec
mov
adc
xlat
sub
es
mov
inc
shll
sbb
mov
add
out
out
lea
orl
jmp
test
repnz
inc
add
jne
xor
xchg
cmp
add
dec
cmpsl
xor
inc
sbb
sub
mov
sub
out
jecxz
jnp
cs
fcompl
jle
sub
gs
andb
pop
add
ficoml
lret
pop
sub
jnp
mov
insl
mov
lds
shlb
or
sub
hlt
ds
cmp
adc
and
xchg
es
fdivrl
sub
rcll
out
xchg
bound
add
cmpsl
fmull
push
mov
pop
fchs
xor
xchg
mov
adc
mov
mov
lea
in
dec
in
or
push
sbb
and
or
sub
cmpsb
movl
stos
cli
jb
mov
adc
or
ja
add
mov
rcrl
test
push
dec
push
jl
mov
pop
mov
clc
jg
and
mov
ficoml
je
jbe
mov
orl
test
mov
cmp
adc
fisubrl
lods
or
jbe
fcoms
adc
and
outsb
xchg
push
adc
push
xchg
movsb
cmp
pop
xchg
rol
push
push
mov
sub
pop
or
mov
and
cmp
mov
cmp
push
mov
fucomp
mov
cmp
push
xchg
and
imul
sub
sub
add
sub
bound
add
jle
inc
jo
call
sbb
test
sbb
pop
xor
push
shl
shlb
sbb
add
mov
or
push
pop
in
fistpl
cmp
cmp
pop
hlt
add
sbb
push
sarb
in
jno
fcmovnu
lds
movsb
out
push
push
sub
outsl
mov
adc
jg
cwtl
xchg
jp
insl
fcmovnb
push
clc
pop
addr16
out
mov
push
mov
clc
add
mov
and
or
pop
dec
adc
jbe
and
or
fidivs
in
mov
ss
jne
push
adc
adc
imul
daa
push
lock
mov
cmp
jo
lods
sbb
push
jno
stos
ja
lret
mov
enter
hlt
add
mov
push
dec
lea
dec
or
lock
push
cmp
aad
fwait
sub
sub
add
xchg
push
insb
push
fimull
add
sti
sbbb
xorb
outsb
out
sbb
ffree
add
cmp
mov
pop
push
fsubrs
mov
mov
sub
je
pop
or
das
rcl
mov
imul
pusha
xor
in
repnz
outsb
or
push
sti
xor
or
sahf
rcll
jno
push
push
sub
rclb
pop
add
inc
bound
adc
sbb
push
fdivrs
cmpsb
cmp
pop
or
mov
ret
pop
jle
ss
jbe
mov
dec
cli
stos
jecxz
inc
dec
insb
fisttpl
jno
cwtl
jmp
stc
in
outsb
or
jge
shrb
mov
mov
ja
out
dec
pop
in
pop
add
or
xor
insb
mov
mov
jbe
pop
pusha
and
jge
adc
mov
adc
movsb
fidivl
push
sbb
xchg
and
shll
pop
add
cmp
and
insb
or
adc
mov
push
mov
and
test
rorb
jle
loop
stos
or
fwait
rcrb
fdivrs
or
xchg
sub
imul
cmpb
aam
xchg
ret
xor
aam
aas
shrl
sti
mov
adc
stos
sar
pop
decb
clc
aad
inc
lods
dec
adc
sti
pop
fdivs
mov
pop
inc
cmp
sbbl
leave
cs
push
mov
mov
shlb
inc
cs
sub
jbe
pop
leave
xchg
cltd
imul
jo
mov
jge
dec
pop
mov
icebp
push
ss
jl
lcall
pop
push
cltd
jg
lock
call
out
popf
add
pop
pop
inc
lods
lods
adc
test
mov
inc
stc
dec
ljmp
add
fisttpll
mov
das
jno
in
mov
add
sahf
mov
xchg
insb
mov
pop
fidivl
insb
stc
xor
push
pop
fcmovnb
test
aaa
jae
cmp
jne
insl
pop
lcall
mov
mov
inc
cmp
in
lea
ds
xor
push
xor
jecxz
pop
push
jno
and
dec
pop
sbb
pop
ljmp
push
inc
decb
arpl
imulb
jmp
sub
mov
xor
insl
popa
mov
sbb
insl
inc
aad
jae
mov
mov
xorl
lea
es
movsb
xor
xchg
mov
test
aam
pop
pop
xor
fdivs
push
pop
lret
clc
pop
or
fdivl
fisubrl
bound
jnp
add
add
fwait
iret
pop
add
je
lods
insl
sbb
push
sub
jo
fcoml
enter
push
sub
inc
mov
orb
fcomps
leave
xor
in
sub
add
mov
add
mov
sbb
shll
add
mov
loop
sub
push
fmuls
jmp
lcall
pop
fbstp
adc
mov
scas
jp
fstpl
loopne
jnp
push
bound
jo
loop
dec
push
jae
inc
aad
xor
pop
sub
imul
aad
test
pop
or
inc
inc
lahf
add
lret
ret
mov
loop
mov
push
fiaddl
cmp
cs
push
xchg
es
sub
rclb
mov
sub
or
movsl
push
inc
mov
push
popf
add
sub
xor
mov
sbb
inc
popa
and
loop
fisttpl
cmpsl
mov
int
pop
push
xor
movsl
sbb
push
in
icebp
cs
pop
or
adc
add
divl
insb
je
dec
dec
jp
stos
pop
xchg
aam
mov
ss
pop
mov
das
mov
push
fcoms
pop
add
jge
mov
pop
insl
test
mov
inc
test
and
rcll
loop
push
leave
mov
lods
insl
mov
cmc
jbe
push
push
mov
and
inc
sbb
sarb
mov
mov
fidivrs
xor
pop
xor
inc
cmp
jg
xchg
add
sub
sub
test
rorb
and
imul
mov
movsb
add
jno
pop
ret
jo
mov
push
sbb
sbb
xchg
cwtl
lahf
mov
mov
xorb
add
pop
mov
sbb
xchg
jge
dec
mov
shrb
outsb
imul
jg
push
filds
add
ror
lds
add
inc
cmovns
fildl
iret
imul
aaa
mov
ret
pop
and
mov
outsb
insb
dec
push
pop
jne
push
xor
push
inc
pop
cmp
scas
fstpl
mov
push
add
xor
sbb
mov
js
enter
cmpl
jle
mov
xor
je
sbbb
clc
cwtl
pop
xchg
push
lods
mov
mov
icebp
inc
dec
scas
mov
fsubrl
cmpb
popa
imul
push
das
xchg
sbb
lds
inc
data16
cmp
xchg
leave
fs
add
inc
mov
xchg
push
push
test
fidivl
fidivl
out
cli
shrb
sub
or
cld
add
mov
arpl
push
rcll
xchg
fwait
mov
mov
fstpl
pop
in
inc
mov
scas
aad
shrb
insl
push
mov
cmpb
sti
imul
add
ljmp
cli
insl
loop
aam
fistpl
daa
pusha
jge
fninit
lret
pop
sbb
pop
inc
jne
rcrl
pop
js
insb
mov
mov
call
fisubrl
push
and
fsubr
aam
imul
dec
sarl
mov
inc
loopne
icebp
mov
lret
cltd
sbb
subb
and
push
sbb
inc
decl
out
aaa
in
sbb
jp
insl
sbb
jno
pop
push
scas
aad
jo
lock
jmp
mov
mov
inc
inc
shrb
inc
push
or
jecxz
sbb
fcmovnb
jno
ret
rclb
fisttpl
pop
xor
pop
stc
lea
sbb
push
mov
mov
call
lods
inc
adc
mov
lods
or
rorl
cs
sub
loop
scas
mov
pop
bound
add
fmull
repnz
imul
push
inc
movsb
fidivl
pusha
ja
sub
dec
adc
mov
sub
insl
sbb
repnz
add
test
lock
jecxz
add
fdivrs
push
jecxz
scas
pop
push
aam
mov
xor
adcl
jp
mov
xchg
std
xor
jae,pn
cmpsb
xchg
inc
xor
pop
add
cs
sub
xchg
cmpsl
and
clc
outsl
xchg
adc
cmp
push
pop
jg
inc
scas
inc
stos
insl
add
rcrl
fwait
xor
cmp
sbb
pop
test
jecxz
decb
add
mov
pop
es
imul
dec
add
lds
loopne
push
xchg
mov
sbb
mov
mov
and
mov
mov
test
dec
mov
sbb
les
in
mov
cld
push
inc
mov
mov
pop
addb
push
pop
jp
popa
fsubl
out
adc
fldenv
cs
pusha
aas
xor
mov
or
xor
adc
inc
das
push
iret
test
inc
lods
insb
lahf
xorb
mov
cmp
push
inc
lret
fists
popa
insl
call
fistl
stos
outsb
clc
xlat
dec
imul
add
sbb
stos
movsb
add
insb
mov
addb
and
cs
insl
mov
movsb
sub
fistl
sbb
push
lret
jbe
ret
call
repnz
sub
or
int
int
sub
adc
lods
or
bound
jmp
push
in
pop
xor
sbb
push
lcall
fwait
mov
inc
push
out
lret
ljmp
jne
cs
mov
cli
push
and
or
repnz
push
or
mov
pop
bound
xlat
icebp
dec
or
adc
or
sarb
pop
sub
push
xchg
iret
inc
cwtl
out
mov
xor
mov
ljmp
or
out
xchg
mov
mov
sti
jbe
adc
lcall
scas
enter
jecxz
shrb
cmp
pop
test
lods
sub
push
push
cmc
in
pop
lods
or
mov
push
sbb
push
jg
push
rolb
mov
popf
add
xchg
push
pop
sub
test
ret
sbb
lock
mov
mov
sti
mov
adc
outsb
lea
enter
cmp
dec
gs
cmpsl
mov
bound
arpl
mov
push
fcmovnb
inc
test
cld
push
cmp
sub
push
notb
sbb
dec
pop
inc
push
cs
push
es
aam
mov
inc
sbb
inc
jns
inc
fdivl
xorl
les
ret
and
or
push
addps
shl
insl
adc
cs
mov
fmull
sbb
insl
fwait
inc
jnp
mov
cs
jmp
inc
aad
fidivl
idivb
dec
adc
test
sbb
xor
push
lods
or
push
pop
fildl
and
or
mov
jns
mov
lahf
cmc
adc
jmp
fdivrs
data16
pop
pop
stos
lods
and
add
add
outsl
aam
mov
addb
push
fisubs
mov
sbb
sub
push
adc
mov
lcall
sbb
stos
mov
push
jle
sbb
jp
xor
lods
cmpsl
int3
sahf
mov
add
repnz
cltd
das
or
mov
push
cmp
xchg
and
and
push
lods
xchg
pop
mov
or
sub
stc
xchg
outsb
dec
shlb
sbb
int3
mov
in
repnz
or
pop
fidivrl
inc
sub
subb
insl
mov
movsb
rcr
movsl
test
mov
push
pop
ret
add
mov
inc
sub
push
leave
mov
add
xor
mov
xor
push
xchg
call
enter
jo
adc
movsb
mov
insl
inc
aad
dec
mul
push
icebp
push
mov
out
test
fcompl
inc
mov
push
mov
adc
fistl
fimull
sub
cmp
outsb
dec
in
adc
push
inc
push
outsl
dec
loop
push
jb
outsl
pop
push
sub
add
movsb
or
mov
push
mov
add
sarb
mov
insl
fcompl
mov
sbb
jns
push
xlat
pop
mov
pop
push
pop
cmpsl
cs
insb
xchg
mov
pop
push
ret
push
jb
or
outsl
test
or
pop
pop
mov
fdivrs
insl
sub
inc
stos
adc
pop
mov
insl
fstpt
fstpl
push
test
das
push
pop
ret
push
aam
push
call
cs
int
mov
stc
adc
sbb
ljmp
shll
jmp
sub
dec
mov
and
cltd
sub
sbb
push
insl
adc
jl
xor
les
inc
add
pusha
xorl
cmpsb
inc
insl
mov
loope
out
jecxz
out
fildl
pop
jne
pop
fs
sbb
inc
sbb
cli
bound
jle
lods
fcmovnb
mov
divl
xchg
out
sub
mov
dec
iret
cmc
shll
mov
adc
sub
mov
aam
jno
dec
int3
test
ret
mov
aad
ljmp
mov
je
js
or
pop
mov
push
sbb
push
cmp
sarb
jo
jns
add
outsb
fistl
popf
mov
fs
mov
dec
add
dec
outsb
aad
push
add
lea
fisubl
enter
sub
add
in
jge
mov
sbb
out
cmp
pop
subb
in
cmp
lods
insl
sub
mov
sti
jns
add
ss
adc
mov
es
push
cltd
out
ret
xchg
mov
mov
shlb
push
into
and
movq
cltd
or
fwait
push
aad
cmpsb
roll
cwtl
xor
roll
mov
jno
push
lcall
add
rorl
pop
add
jg
mov
mov
nop
mov
lods
cli
scas
loop
stos
cmp
insl
arpl
mov
je
add
pop
mov
push
mov
pop
int
loopne
gs
jmp
lods
and
mov
stos
sub
push
mov
cmp
mov
sarb
inc
pop
adc
jg
ret
sahf
out
lea
mov
insl
add
mov
call
sub
in
add
lock
das
fwait
or
pop
mov
inc
jo
mov
inc
sub
loopne
pop
mov
sbb
test
or
xchg
cwtl
adc
xchg
fstpt
push
insl
xchg
lcall
cli
push
imul
js
test
jmp
inc
dec
mov
stos
and
jo
mov
addb
test
cmp
pop
mov
push
insl
roll
out
mov
push
lcall
dec
cmp
xorl
mov
inc
pop
and
lret
insb
fcmovnbe
sahf
out
mov
fldt
xor
ret
pop
add
lods
popa
push
jns
repnz
das
insl
or
fwait
dec
fmuls
push
out
add
or
in
adc
mov
adc
jae
sbb
cld
repnz
in
inc
hlt
mov
push
and
and
lea
push
add
test
push
frstor
mov
mov
mov
mov
int
ret
loope
pop
das
aam
jo
sbbl
mov
push
jb
pop
cmpsl
mov
ret
inc
sbb
iret
add
jle
lods
pop
add
lret
push
pop
push
pop
out
pop
or
dec
imul
adc
sti
fadds
popa
sub
and
cmp
sbb
add
mov
push
xchg
pusha
xchg
dec
les
xor
push
mov
xorb
mov
aam
inc
jg
scas
adc
lods
mov
fwait
add
outsb
sbb
or
add
sub
mov
pop
sub
push
jne
test
lret
jle
pop
mov
cmp
bound
and
pop
ljmp
sbbb
subl
adc
insb
xchg
add
pop
scas
or
mov
aam
jl
push
jbe
mov
and
adc
or
mov
das
jns
mov
mov
push
out
jnp
call
push
jmp
mov
push
jmp
push
push
add
sub
fildl
xor
mov
es
push
sbb
and
mov
stos
dec
add
dec
jb
call
cmp
cwtl
xor
sbb
cs
aam
icebp
mov
jo
xor
cmpsb
ficoml
ret
mov
sub
push
movsl
cld
imul
sti
add
dec
inc
fldt
jp,pn
les
bound
push
push
test
test
test
lock
bound
ret
jl
jge
sbb
movsb
sub
mov
push
rorl
test
ss
cmpsl
ret
xchg
std
rorb
push
fimull
lret
xchg
addr16
fnsave
sbb
xchg
out
xchg
add
sti
test
insb
and
inc
mov
jmp
jl
add
adc
mov
fildl
jno
inc
inc
or
je
insl
mov
cmp
adc
mov
insb
inc
mov
aam
xchg
out
mov
inc
pop
sbbb
adc
add
or
das
cmp
cmp
fstpt
sbbb
sub
mov
cwtl
mov
mov
or
adc
fsubrl
enter
movsl
sahf
fwait
iret
adc
inc
mov
out
pusha
insl
stos
fmuls
add
ror
sub
inc
add
pop
inc
mov
pop
or
insl
fstl
sbb
pop
mov
cmp
stos
pop
xchg
sbb
cmpsb
mov
divb
pop
imull
popa
adc
out
xor
push
sub
outsb
pop
sbb
aas
or
ja
lea
jne
fwait
test
mov
jbe
je
les
xor
bound
jl
lea
mov
jb
cmc
mov
inc
pop
ljmp
pop
jmp
add
push
lods
lret
in
andb
push
mov
mov
or
pop
fsubrs
push
mov
insl
cmc
or
mov
outsb
xchg
imul
xor
stos
pop
mov
aaa
pop
pop
inc
insl
arpl
repz
push
sbb
not
fiadds
or
stos
mov
jo
xchg
dec
loopne
loopne
mov
mov
ss
sub
sbb
xchg
push
ss
inc
add
pushf
in
leave
jae
sbb
add
shrb
push
repz
sahf
mov
push
push
mov
mov
and
inc
lahf
jbe
mov
shr
test
test
movsb
sub
bound
rcl
pusha
jmp
push
mov
in
out
ja
inc
mov
outsb
pop
push
aam
dec
stc
jo
jmp
aaa
cmp
pop
mov
fsubrs
jne
out
pop
sub
fucomp
mov
push
or
mov
hlt
mov
sarb
loop
outsb
insl
cmp
mov
or
das
dec
mov
shlb
sbb
mov
xor
mov
sbb
pusha
mov
bound
jae
lods
int
sub
push
mov
ljmp
jecxz
cmpsl
lea
sub
in
mov
mov
cmp
cmc
pop
sub
stos
fnsave
xchg
outsl
dec
rcll
insb
ss
call
sahf
fadds
out
inc
cmpb
jbe
maxps
jbe
adc
mov
out
fs
add
rolb
popa
fistpl
adc
mov
enter
pusha
add
pop
adc
sbb
jge
fcoms
dec
mov
add
testl
cmp
lahf
xchg
out
je
add
add
mov
sub
stc
jbe
pushf
sbb
mull
ficoms
pop
add
or
xchg
xor
rcl
sub
and
int3
pop
fidivl
loop
fnstcw
cmc
subb
lods
dec
mov
mov
mov
adc
in
outsl
lret
fcmovnu
push
fidivl
cmp
sbb
icebp
jno
xchg
mov
movsb
arpl
in
mov
and
les
or
mov
mov
repnz
add
mov
adc
scas
sbb
insl
and
mov
insb
mov
rol
xor
data16
add
je
add
fnsave
adc
mov
dec
test
ss
mov
fbld
insl
push
sbb
xor
mov
call
lds
sbb
add
icebp
sbb
movsb
out
push
xor
fnstsw
push
sub
xchg
test
fistpl
cmp
sbb
push
fimull
cmpb
dec
mov
mov
gs
mov
inc
repz
insb
fldt
cmc
mov
cmp
mov
mov
mov
push
fiaddl
sbb
pop
sub
adc
and
jo
mov
roll
jl
js
out
in
mov
std
mov
pop
dec
pop
setns
or
push
ss
stc
pop
pusha
xor
sub
mov
add
push
fcmovnbe
es
rclb
ljmp
jecxz
pop
jp
mov
lods
add
pop
stc
pop
mov
jp
inc
mov
pop
sarl
xor
mov
rcll
add
pop
cs
ds
xchg
sbb
jmp
mov
sub
imul
add
sub
test
jmp
cmp
fstpl
std
inc
pop
cmp
dec
aad
and
scas
in
and
ss
or
mov
je
push
mov
inc
clc
aam
into
add
push
sub
test
shrl
xchg
add
xchg
push
fs
jns
outsl
mov
lock
pop
aas
sbb
mov
push
out
or
mov
ficoml
or
rorb
pop
mov
mov
inc
insb
and
repz
inc
mov
mov
mov
je
and
add
pop
xchg
stos
out
pop
dec
or
mov
mov
add
fisubrl
pop
call
add
in
and
inc
test
push
insl
insl
push
mov
cmpsl
das
push
push
push
loopne
sub
mov
into
lcall
cmp
mov
xchg
mov
mov
pop
call
mov
mov
mov
insl
push
adc
movsl
cltd
jecxz
loopne
jmp
push
add
gs
jg
push
je
xchg
mov
sub
cmpsl
mov
or
lret
dec
mov
adc
push
shrb
movsl
movsl
xchg
jbe
jge
sahf
adc
test
xchg
mov
jbe
fistl
ss
mov
subl
or
and
lods
in
stos
mov
xor
sub
lea
iret
xor
nop
inc
jo
pop
sub
test
jecxz
outsl
push
data16
xchg
lea
pop
add
cmp
inc
add
stos
cmpsl
stc
jmp
dec
mov
mov
icebp
pop
add
mov
pop
or
dec
icebp
std
push
sub
mov
fnstcw
pop
push
and
jno
pop
sub
mov
sub
and
or
orb
add
cmc
and
mov
sbb
cmpsb
test
das
add
jecxz
dec
and
xchg
pop
sub
enter
lret
and
ss
insb
aaa
ljmp
dec
aad
inc
xor
sub
loopne
mov
mov
xchg
in
sub
lret
jne
enter
push
or
fcmovbe
jmp
sbb
pop
stos
pop
test
xor
es
addb
and
mov
mov
insl
dec
add
lods
subb
fcmovnb
shlb
sbb
add
subb
add
test
insb
sbb
push
mov
mov
mov
xchg
inc
push
aam
dec
adc
in
pop
clc
lcall
mov
adc
cmpsl
push
xchg
push
lahf
std
pop
fcomps
add
sahf
push
sbb
sbb
repnz
jbe
lret
jp
jb
subb
push
clts
gs
insl
sub
in
inc
xchg
xchg
pop
pop
subl
add
pusha
mov
mov
subb
cld
dec
mov
jbe
push
shl
or
fmul
in
out
sbb
pop
pop
or
iret
inc
pop
les
pop
cmpsl
mov
xlat
push
mov
mov
fnsave
xor
popa
sub
sti
mov
sub
mov
mov
mov
in
mov
lcall
imul
xchg
pop
xor
int
pop
into
insb
dec
push
sbb
cmp
repnz
mov
push
ret
in
push
inc
add
sbb
lea
xchg
xor
fstl
rcll
or
mov
loop
mov
add
bound
add
xor
add
bswap
fmul
das
insb
dec
shll
enter
jge
jecxz
test
pop
nop
jno
imul
push
out
pop
inc
adc
adc
inc
xor
movsl
lea
mov
add
mov
adc
pop
mull
lret
nop
pop
xchg
fimull
sti
sub
cwtl
fsubr
push
add
xlat
push
mov
mov
insb
mov
hlt
mov
lock
pop
cwtl
bound
add
outsb
or
adc
dec
jmp
fildl
mov
call
das
mov
xlat
insl
fistpl
out
sub
pop
mov
mov
push
lea
movsl
pop
lods
mov
jne
inc
inc
fsubl
xor
jnp
pop
cmpsb
add
mov
movsb
addr16
and
mov
push
jg
mov
pop
mov
fcmovnb
push
add
jo
or
imul
jle
mov
stos
sbb
jge
inc
xchg
pop
mov
outsb
fstpt
inc
shl
cs
shll
xor
pop
push
jno
jmp
mov
adc
popf
or
or
cmp
aad
ds
xchg
cmc
or
in
movb
pusha
orl
bound
pushf
sti
sbb
popa
imul
mov
push
rolb
shll
inc
xchg
icebp
sahf
fstpt
enter
cmp
pop
popl
dec
lock
in
mov
lcall
test
aaa
in
mov
and
inc
xchg
dec
mov
mov
mov
mov
mov
jecxz
sub
in
pushf
inc
arpl
lcall
in
xlat
cmp
test
orl
out
add
and
xchg
insl
xchg
mov
aas
or
jns
push
sbb
jl
or
sbb
add
add
out
push
sub
arpl
or
mov
jo
mov
or
imul
mov
jne
ret
daa
xor
pop
lods
mov
inc
sub
xchg
push
imulb
cmpb
mov
and
ret
insl
mov
cli
push
fwait
sub
into
add
fcoms
mov
xorl
dec
movsb
mov
inc
mov
pop
popa
mov
call
sbb
lods
insl
ja
jecxz
out
jnp
jp
rol
or
add
mov
add
mov
sbb
test
jle
xchg
inc
dec
or
ss
cs
adc
imul
lods
cld
jg
das
pop
aam
lcall
movl
push
mov
aas
sbbb
movsl
mov
inc
inc
mov
mov
pop
mov
test
out
sti
push
rcl
mov
sub
push
int
pop
cmpsl
cmp
and
adc
lea
add
hlt
add
or
popf
push
je
jo
lret
xchg
je
daa
lcall
xchg
xchg
outsb
cmp
mov
inc
imul
pop
push
jb
in
in
add
out
in
push
jle
loop
xlat
adcb
bound
mov
xorb
pop
mov
add
lret
pop
cmp
push
loop
cmpsl
mov
les
mov
sahf
inc
pop
pop
xor
ficompl
or
pop
cmc
pop
pushl
mov
and
leave
imul
movsl
test
jecxz
mov
insb
adc
mov
fwait
imul
stos
or
push
into
outsb
mov
stos
inc
stos
mov
lds
and
push
cwtl
push
push
fdivs
mov
call
pop
pop
fldenv
xor
sbb
jecxz
adc
ss
in
inc
bound
insb
fwait
adc
icebp
xlat
pop
je
mov
adc
pop
mov
movsb
jno
lods
sarl
xor
xchg
or
xor
push
push
jge
add
cs
sahf
xor
push
xlat
jg
push
push
adc
outsl
mov
repnz
aas
inc
lret
fcomps
mov
test
hlt
je
sub
cwtl
jns
jge
pushf
mov
ss
clc
mov
xor
sbb
mov
add
xor
pusha
jg
push
mov
push
add
push
into
push
sti
in
test
aad
dec
std
cwtl
push
insb
and
push
sbb
xchg
dec
push
jmp
push
mov
sub
test
mov
insb
fildl
pusha
adc
inc
stos
mov
add
fwait
dec
mov
sub
sub
sbb
xchg
sbb
mov
imul
ret
push
dec
orb
xor
das
in
imul
inc
xchg
lods
aas
inc
in
pop
or
stos
or
lock
ss
loopne
fisttpll
mov
add
xchg
mov
add
dec
jmp
lret
fldt
outsb
stos
cmp
sbb
mov
push
jno
insl
movl
pusha
jo
xor
cmc
pop
sub
xor
sub
dec
or
xchg
into
adc
lcall
lock
xchg
cmp
inc
popf
aam
mov
pop
aam
out
je
cltd
out
xchg
pop
adc
test
xchg
sbb
mov
sbbb
push
mov
xor
pop
inc
fldt
jo
int
or
jp,pn
mov
pop
push
es
and
insb
adc
ret
pop
ds
dec
inc
out
lock
lods
cli
stos
pusha
dec
dec
sti
shl
les
mov
fdivrl
aad
pop
insb
xchg
sub
push
cmp
cmp
mov
jae
and
fwait
insb
mov
fadds
push
inc
xlat
fs
roll
sbb
testl
jbe
pop
push
lods
lds
rorb
add
fdivrs
sub
cmp
or
cmpsl
xchg
add
movsl
fiadds
frstor
add
lcall
fcmovu
sub
stos
icebp
mov
dec
lcall
andb
jo
mov
and
inc
mov
aad
enter
add
mov
ret
sbbl
jmp
mov
and
ret
jo
add
cs
loop
mov
popa
test
and
sub
inc
pop
mov
and
add
adc
cli
mov
mov
add
out
andl
mov
xchg
pop
shlb
adcl
lret
out
and
popa
mov
insl
test
dec
add
lea
xor
fs
andb
mov
xchg
pop
pop
fidivs
jge
int3
popa
xor
fstp
ret
cmp
cmp
test
push
in
inc
adc
test
aam
jg
xor
jb
xchg
cmc
push
je
fstpt
imul
or
out
fmuls
push
xor
jg
sub
pop
mov
adc
jp
imull
jmp
and
mov
lahf
cwtl
rcrb
mov
inc
jne
cltd
push
lock
add
fdivrs
mov
je
inc
fnsave
xchg
sti
push
xor
call
sub
jbe
pusha
imul
in
mov
mov
lods
ret
insl
out
pop
dec
fcompl
xchg
mov
mov
add
sbb
push
add
add
outsb
adc
xor
cmp
mov
or
mov
fisubl
sub
or
jp
add
frstor
mov
lock
clc
andb
lahf
jns
xchg
mov
or
aad
add
push
dec
cmpsb
cmpsb
mov
mov
and
ficompl
out
jb
les
jmp
fnsave
lahf
cmp
in
ss
es
inc
cmp
cmp
sahf
imul
cld
mov
xchg
cs
icebp
frstor
shlb
xlat
mov
fwait
xor
xchg
lcall
push
jp
lods
adc
add
jl
adc
xor
fcomip
add
cs
dec
adc
dec
adc
outsb
sbb
out
fs
jbe
inc
decl
sub
add
and
xor
xchg
xchg
test
les
int
movsl
insb
insb
fildl
mov
scas
ljmp
loopne
inc
das
imul
fmull
push
push
push
imul
cs
dec
pop
inc
loopne
or
sub
fstl
lcall
and
add
ret
push
add
adc
ret
or
mov
sbbl
jecxz
mov
adc
jae
add
andl
movsl
push
add
fisubs
ss
sti
jge
pop
or
gs
mov
jno
movswl
fcomp
pop
sbb
stos
jb
cld
inc
pop
jno
inc
lcall
mov
adc
push
pop
hlt
test
cwtl
sbbb
cmpb
adc
mov
jmp
add
daa
inc
pop
aam
push
sbb
sub
pop
xchg
sbb
adc
mov
adc
mov
or
add
rclb
imul
incl
cmp
push
sbb
sbb
es
mov
sbb
jne
ja
shrb
popa
fisttpl
loope
sub
and
orb
adc
popaw
test
je
insl
dec
or
push
mov
add
xor
jbe
fisttpl
push
jns
sbb
pop
push
sub
les
test
mov
jp
dec
enter
mov
push
mov
mov
mov
mov
sub
pushf
roll
push
push
pop
mov
add
mov
adc
inc
xlat
loopne
dec
add
fcoms
adc
adc
jecxz
mov
pop
inc
mov
insl
stos
add
jmp
pop
adc
pop
sub
hlt
sbb
xchg
xchg
aas
les
sahf
lods
movb
sti
jmp
add
cwtl
cwtl
lock
adc
data16
mov
sbb
or
xor
add
adc
sub
fstl
mov
mov
mov
ljmp
repnz
repnz
stos
and
jp
add
jb
push
sub
mov
stc
repz
notl
roll
insl
pop
fcmovnbe
push
mov
mov
pop
push
mov
dec
and
lea
sbb
dec
or
les
xor
jmp
inc
scas
cmp
outsb
xchg
and
or
xor
shl
mov
mov
mov
add
int
les
jne
popl
ret
sub
jnp
iret
inc
cmp
mov
add
lret
jbe
adc
xor
movsl
mov
mov
imulb
mov
cmp
push
and
jg
and
sub
sbb
pop
mov
sbb
or
pop
lods
test
jns
enter
stos
push
scas
adc
mov
jbe
jo
leave
mov
in
mov
pop
xlat
or
add
add
ret
pop
clc
ficoml
pop
and
pushf
push
push
test
xchg
or
fsts
jl
cmp
inc
jo
sub
das
andl
inc
xlat
push
fisubrl
mov
xor
data16
and
push
aaa
ss
xchg
iret
ret
sbb
jl
arpl
jg
fisubrl
jo
mov
sub
xchg
xchg
ss
inc
lods
xchg
stos
cltd
pop
imul
mov
dec
adc
xchg
roll
fisttpll
jo
and
cmp
repz
inc
cmp
outsb
test
in
dec
adc
fstp
hlt
testb
add
adc
jmp
push
mov
fwait
jmp
inc
cs
mov
xchg
adc
pusha
mov
in
fcmovnbe
mov
and
stos
imul
mov
addb
roll
and
inc
or
xor
das
mov
adc
add
push
jl
fs
in
jbe
aam
enter
adc
insb
cmc
xor
cs
lds
and
xor
or
cmp
and
insl
or
popa
mov
adc
jle
adc
lock
fstp
lret
and
loopne
adc
hlt
rclb
push
stc
push
imull
inc
sbb
aam
sbb
sbb
loopne
push
mov
fldl
leave
pop
xchg
mov
or
push
pusha
ss
pop
aad
or
push
lds
imul
and
aaa
lcall
inc
imul
inc
adc
push
push
mov
push
ljmp
inc
mov
cmp
fimull
push
push
pop
in
dec
push
add
pusha
adc
jmp
mov
and
bound
sbb
cs
sub
mov
mov
push
rcll
jbe
or
bound
or
xchg
pop
inc
xchg
ficoml
lds
sbbb
lock
fistpl
ja
pop
adc
sbb
cwtl
mov
cmpsl
in
pop
xchg
pop
ficompl
sub
push
jg
push
mov
inc
dec
popa
out
or
lock
cmp
les
pop
sbb
sbb
imul
dec
adc
mov
or
mov
aas
cld
imul
mov
sub
je
mov
insl
sub
insb
adc
mov
inc
div
jns
jmp
loop
bound
pop
cld
into
sbb
push
add
inc
lods
push
mov
pop
sub
sbb
testl
lea
push
fisubl
jge
push
sub
lods
and
ret
push
adc
mov
mov
shlb
pop
bound
and
icebp
add
outsb
pop
or
mov
push
out
jle
ss
insl
push
jecxz
cmp
lea
ret
cmc
add
es
dec
pop
stc
jo
sbb
cmpsb
into
xor
mov
sbb
pop
jge
fiaddl
outsb
mov
mov
stos
lods
dec
add
xchg
faddp
push
outsb
mov
lds
xchg
std
in
xchg
enter
shl
xor
insl
or
shll
push
jne
jl
push
push
fidivl
adc
or
subb
push
inc
pop
push
ret
dec
lods
cmpsb
sub
or
shrl
lea
imul
insl
test
out
jge
in
mov
add
add
sbb
rorl
lret
data16
push
push
fisubl
push
add
out
inc
sbb
lods
or
movsb
push
enter
js
dec
roll
cmp
imul
cmc
jns
jnp
in
add
outsb
dec
dec
movsl
ja
dec
cmc
sub
insb
test
xchg
lahf
jge
insl
sub
mov
dec
aad
jns
mov
sti
pop
fmull
and
loope
mov
lret
inc
repnz
repnz
stos
es
add
cmp
adc
je
mov
jb
int3
mov
insl
sub
aaa
push
pushf
inc
jmp
adc
mov
rclb
call
cmpsb
jbe
jge
stc
out
dec
ficoml
dec
dec
jp
shl
xchg
sbb
movl
pop
shrb
movsb
mov
ss
imul
into
and
add
pop
clc
push
icebp
sahf
push
pop
fcomps
enter
stos
mov
add
sbb
push
push
inc
pop
adc
adc
jbe
sar
push
sub
mov
aaa
mov
mov
xchg
mov
mov
add
adc
sbb
sub
fisubl
mov
mov
xor
fcmovnbe
sbb
pop
or
cltd
aas
iret
test
and
scas
pop
movsb
out
cli
imul
add
fiaddl
rcl
pop
call
mov
icebp
inc
pop
fcmovnb
stos
jb
imul
or
pop
adc
sub
and
ret
std
mov
into
cmp
popa
mov
jmp
loop
in
lods
and
pusha
jnp
adc
in
mov
push
pop
inc
and
je
push
pop
sub
mov
push
lea
mov
cmpsb
bound
ss
sub
mov
pop
cwtl
stos
push
mov
jmp
mov
mov
aam
sahf
repz
stos
cs
push
test
std
fwait
add
push
jg
daa
stc
fists
adc
arpl
stos
mov
imul
stos
dec
adc
xchg
insl
lahf
xchg
sbb
jecxz
adc
sbb
pop
test
rcll
mov
push
dec
fdivs
dec
and
jbe
or
sbb
dec
mov
or
mov
and
mov
stos
fucom
xchg
pop
je
pushf
sub
sahf
lock
insb
fildl
int
cld
jno
sbb
sub
repnz
lcall
xchg
adc
in
mov
popf
inc
adc
insb
push
cs
fstp
or
lret
adc
clc
gs
xchg
fisttpll
shll
insl
push
shrb
out
mov
or
xchg
mov
push
jmp
push
inc
xor
add
mov
in
fs
cmpsb
pop
push
test
push
lret
insl
test
mov
or
stos
xchg
sub
mov
pusha
inc
mov
and
imul
add
sub
pop
push
or
xorl
adc
push
iret
cmp
mov
push
inc
xchg
or
int3
ljmp
outsb
adc
push
aad
or
add
inc
cld
cmpsl
xchg
arpl
push
aaa
jmp
xor
in
or
loopne
adcb
insl
or
loop
cmpsl
xchg
mov
mov
bound
loopne
add
mov
cs
jecxz
cmp
inc
sub
lods
imul
xor
std
sbbl
mov
or
push
je
jo
mov
inc
pop
inc
movsb
ljmp
es
shr
xchg
and
xchg
nop
hlt
enter
addr16
adc
fs
lret
jge
incl
xchg
movb
and
mov
sub
arpl
mov
dec
test
pop
fadds
sub
test
adc
dec
enter
ljmp
fsubrp
cli
clc
sub
pop
fsubs
jle
stos
sub
stos
fcoms
jl
mov
fiaddl
repnz
movsb
int3
pop
sub
and
mov
add
insl
lock
iret
add
sub
es
jg
dec
or
jne
jnp
mov
push
lock
push
push
aam
pop
add
sbb
mov
xor
lods
adc
repz
mov
adc
lahf
movsb
stc
and
leave
cmp
mov
test
sbb
xor
mov
pusha
pop
add
and
movl
push
xchg
fstpl
sahf
adc
mov
stos
fcoms
mov
cmp
sbb
ja
orl
mov
add
xor
orb
fcmovbe
xchg
jp
movsl
push
mov
jp
sahf
mov
mov
or
jge
insl
arpl
sbb
inc
fisttpl
adc
pusha
xchg
dec
std
dec
and
imul
mov
insl
popa
rclb
je
inc
jo
ja
fwait
sbb
sbb
ret
mov
insb
add
mov
inc
jno
sub
sbb
lcall
mov
sub
js
scas
loop,pt
mov
push
popa
cwtl
jns
add
pop
lret
subl
lret
xchg
pop
cmp
outsb
fistl
pop
inc
sub
fs
lods
and
imul
jno
pop
aam
fsubrs
adcb
cltd
pop
out
cmp
push
and
into
inc
push
aam
arpl
int3
lcall
or
sbb
and
jmp
xchg
addl
sbb
scas
pop
xchg
push
ret
sbb
mov
inc
pop
call
loop
inc
cmp
and
sub
sub
subl
pop
mov
test
out
pop
xchg
pop
lret
adc
test
or
add
and
mov
xchg
jb
mov
outsb
dec
add
lret
mov
push
pop
ss
jo
jbe
mov
cmp
pop
sub
dec
pop
adc
push
mov
outsl
fwait
loop
add
das
mov
rcrl
xchg
jnp
push
xchg
cmp
mov
imul
sahf
psraw
lret
sbb
sub
lods
out
das
outsb
in
adc
enter
mov
movsl
mov
adc
fcmovnu
ss
xchg
ja
or
fistl
test
pop
pop
idivl
imul
mov
das
mov
push
imul
or
aaa
push
add
jno
push
mov
cli
test
mov
sub
push
test
mov
mov
push
fidivs
inc
fstpl
lock
adc
xor
mov
int
popf
xor
mov
pop
pop
adc
es
pop
std
mov
and
gs
mov
or
fdivs
add
test
aam
aas
out
imul
jle
pop
add
inc
xchg
push
jno
out
xor
mov
dec
sbb
pop
popa
push
mov
mov
push
mov
test
add
xchg
popf
sbb
lock
sbb
shr
fnsave
add
shlb
mov
mov
sahf
mov
addr16
inc
pop
jg
inc
dec
shlb
jecxz
mov
and
fnstcw
fsubrs
orb
and
mov
mov
adc
inc
jnp
mov
push
push
dec
mov
add
push
scas
push
push
and
mov
cs
xchg
xchg
cwtl
call
mov
out
loopne
or
jl
roll
add
sub
hlt
and
movsb
push
pop
aad
stos
idivl
mov
icebp
js
fwait
push
in
pop
sbb
mov
xchg
inc
push
fs
pop
or
sbb
cmp
sbb
lahf
icebp
sub
push
mov
mov
mov
pop
cmp
mov
arpl
dec
inc
sti
call
je
adc
out
pop
mov
or
jge
dec
ja
inc
mov
cmp
out
rorb
fldt
pusha
push
inc
lds
pop
jbe
mov
scas
jmp
pop
xchg
jge
push
cmp
stos
pusha
jecxz
cs
xchg
or
pop
into
or
mov
adcl
xchg
pop
popa
push
aad
jno
lret
pop
mov
mov
pop
sub
inc
push
inc
and
dec
mov
sub
adc
iret
dec
add
mov
mov
mov
inc
pop
push
lods
out
add
push
sbbb
nop
jl
push
add
out
sub
push
int
or
fcmovnbe
inc
inc
or
lea
add
aam
sub
mov
push
mov
mov
mov
imul
or
pop
aas
mov
add
lret
add
ret
or
jp
adc
test
shll
rcrb
push
std
lea
cld
add
enter
fcmove
shlb
and
js
sub
push
pop
push
popa
shlb
add
cmc
insb
or
mov
push
mov
pop
cmp
xor
fdivrl
push
loop
mov
test
jbe
aaa
fiaddl
sub
sub
lods
mov
stos
xchg
pop
sti
adc
mov
inc
adc
push
xor
hlt
jmp
lcall
ljmp
dec
fidivrl
lods
mov
cmp
sbb
sub
jbe
mov
push
stc
pop
call
out
push
je
mov
imul
gs
mov
sub
outsb
sub
pop
cltd
adc
push
and
push
in
stos
imul
imul
xor
stc
cmp
insl
add
lods
fwait
inc
mov
outsb
test
mov
sarl
or
jecxz
int3
sti
fldz
repz
sbb
sbb
insl
dec
nop
in
ret
and
xor
fstl
ss
jg
loope
popa
fistl
pop
in
push
jge
outsb
insb
mov
cmp
or
jne
mov
jecxz
xchg
outsl
sub
push
sub
loopne
push
pop
jecxz
mov
mov
fstpl
dec
mov
push
mov
imulb
mov
dec
aad
popa
sbb
inc
mov
orb
fsubrs
je
adc
push
sarl
cwtl
sub
pop
pop
shl
call
push
mov
inc
sub
adc
push
shlb
pop
scas
or
sub
jbe
adc
fcoms
orb
inc
rclb
mov
addr16
mov
xor
mov
mov
mov
roll
daa
mov
iret
jp
mov
add
lea
dec
xchg
mov
test
aad
xchg
mov
popa
stos
sub
test
cmp
jg
and
push
mov
mov
cmc
lahf
pop
jno
jnp
or
or
fnsave
add
mov
sub
das
push
xchg
dec
aam
pop
jle
mov
adc
out
pop
cltd
repnz
and
add
dec
pusha
inc
adc
pop
xchg
mov
cli
pop
fsubrs
cmp
and
repz
jge
mov
out
push
ret
hlt
or
daa
stos
dec
mov
mov
cwtl
and
sub
pop
imul
fisubrl
cwtl
sahf
inc
shlb
adc
inc
mov
ds
mov
insb
mov
cmp
lcall
cs
cmp
ljmp
jp
sbb
adc
lea
jmp
imul
adc
ja
sarl
xchg
sbb
icebp
loopne
es
call
insl
in
pop
daa
rcr
mov
cmpsl
pusha
fsubr
test
cwtl
pushf
jns
inc
sti
aas
insl
xchg
jbe
pushfw
jecxz
sub
mov
mov
je
fistps
mov
out
es
mov
pop
roll
mov
imul
adc
sub
mov
mov
cmp
ret
jne
mov
adc
pop
sbb
sbb
lea
dec
add
pop
sbb
sbb
les
mov
mov
inc
jo
jl
push
shlb
loope
fadds
arpl
sbbb
es
sub
in
xor
gs
inc
and
and
add
add
ret
fidivrl
push
xor
stc
dec
outsl
xor
repz
ss
sub
sub
loop
pop
push
aam
shll
inc
rcrl
ljmp
repz
fistl
push
add
rcl
fbstp
addl
mov
mov
mov
push
inc
mov
mov
pop
out
imul
out
scas
fisubrl
mov
mov
mov
lcall
mov
fistpl
sti
mov
pop
lea
push
xchg
xchg
jecxz
outsb
mov
jno
add
push
xor
jo
jne
sub
inc
xchg
pop
outsb
insb
sbb
out
adc
mov
mov
add
mov
add
lea
cmp
sub
add
push
sbb
outsb
pop
mov
jae
xchg
inc
jne
xor
rorb
and
jecxz
push
mov
insl
testb
fdivl
xchg
cmc
je
stos
pop
jo
imul
mov
movsb
push
mov
mov
mov
push
mov
fwait
jnp
add
dec
jno
adc
fcoml
push
push
add
xor
adc
js
fisubl
or
and
sub
popa
cmpsl
jecxz
or
lock
or
jne
or
mov
mov
push
mov
xor
lahf
repz
pop
pop
popw
mov
pop
cld
adc
jl
mov
jno
sbb
xlat
sahf
dec
lahf
push
fstpt
push
sub
ficoml
je
dec
arpl
pop
push
insb
mov
push
xchg
and
xchg
test
jp
insl
inc
dec
push
mov
mov
out
mov
mov
in
fldl
ret
mov
insl
jae
pop
cmc
pop
and
daa
mov
push
lods
dec
cmpb
in
lods
or
aam
stc
aam
inc
mov
and
neg
cs
sub
ja
xor
nop
fcmovu
push
fdivr
sub
and
sub
sahf
jge
into
jo
frstor
adc
es
or
jge
ljmp
mov
lret
les
sbbb
jmp
mov
or
into
loopne
fstl
fiaddl
int3
fisubrl
push
shlb
jo
fs
inc
adc
push
aad
push
and
call
js
je
dec
loop
mov
lods
enter
mov
sub
jno
and
imul
rcl
xchg
sub
mov
jg
pop
adc
mov
ret
sbbb
ret
pop
xor
filds
push
dec
imul
movl
push
loopne
in
leave
or
test
mov
mov
repnz
fwait
jo
jbe
fsubr
pop
gs
insb
outsb
subb
mov
ss
call
mov
or
fldt
adc
pop
push
sub
xlat
push
add
insl
and
stos
in
or
test
mov
mov
xchg
xor
pusha
xchg
test
test
nop
add
pop
push
les
push
mov
fbstp
add
sbb
xchg
sub
xchg
and
fcmovb
sub
inc
jbe
popa
imul
sahf
sub
cs
dec
bound
inc
mov
loope
roll
xchg
push
sub
stc
shrl
insl
mov
aad
int
mov
inc
inc
lds
push
cltd
or
jecxz
sbb
lods
mov
loop
insl
push
add
mov
lods
repnz
adc
xchg
push
pop
fmul
push
pop
pop
or
jne
rorb
aam
push
xchg
xchg
test
ja
shrb
insb
rcll
mov
xchg
mov
stos
add
xchg
mov
sub
push
jns
clc
inc
mov
lds
outsb
dec
shrl
mov
adc
sub
mov
imul
inc
adc
push
out
in
cmc
push
sbb
into
push
fiaddl
scas
xor
cltd
ret
outsb
cwtl
test
imul
in
leave
xlat
out
push
and
mov
jb
fcompl
lock
out
cmpsl
in
orb
cmp
test
dec
cmpl
ds
mov
add
sub
xchg
xchg
in
pop
sbb
out
out
scas
and
push
stos
fwait
adc
test
push
adc
jbe
mov
adc
sbb
sbb
test
sub
push
shll
add
je
cld
mov
fistl
adc
xor
sub
fmuls
add
push
jl
pop
adc
orb
lret
mov
lea
shr
or
out
mov
jnp
xchg
sub
shl
subb
add
xchg
arpl
out
sub
or
jne
std
xor
and
adc
subb
loopne
insl
test
dec
push
gs
mov
insl
mov
insb
fists
cmp
leave
xchg
stos
mov
jecxz
fnstsw
das
int
aam
insb
add
lcall
fsubrs
scas
imul
clc
push
jne
mov
rcrb
mov
sbb
pop
and
decb
push
mov
mov
push
mov
sub
xchg
fidivl
sub
xor
xchg
mov
add
inc
mov
jle
inc
in
and
push
or
push
shlb
xchg
es
les
hlt
inc
mov
fistl
test
xorb
arpl
aas
mov
je
mov
int
mov
cwtl
insl
fwait
mov
cmp
push
inc
cmpsb
test
imul
jg
add
mov
loopne
sbb
popf
ja
mov
ljmp
subb
xchg
das
mov
add
out
int3
mov
jne
andl
inc
mov
mov
push
pop
jne
and
je
out
shl
rcll
lea
sbb
fistl
sub
mov
sti
add
lods
pop
lahf
push
loop
sub
outsb
mov
aad
pop
cmp
mov
and
stos
movsl
fistpl
cmp
inc
lea
lahf
repnz
mov
inc
ror
adc
loopne
fcmovnbe
add
bound
mov
jb
adc
mov
std
arpl
mov
xor
insl
sbb
jl
mov
add
leave
sub
inc
je
je
aaa
lea
jo
mov
adc
mov
out
aad
cmp
arpl
dec
ret
sub
test
inc
add
add
or
mov
test
ficoml
stc
lock
data16
insl
insb
or
mov
mov
mov
jge
push
adc
fmul
push
and
stos
inc
lret
sbb
sbb
push
lcall
add
fadds
or
pop
inc
int
sbb
std
stc
cmc
inc
popa
push
push
mov
sub
ret
sahf
mov
pop
dec
dec
push
cs
in
shlb
xorl
inc
in
fstpl
sub
stos
gs
lds
xchg
push
and
mov
inc
dec
fidivrl
adc
and
fistl
mov
out
sbb
pop
add
test
call
add
fildl
cmpsb
repnz
dec
sub
sbb
mov
mov
sub
add
sbb
inc
cmp
lock
or
gs
std
lods
fcmovnb
roll
lods
icebp
xor
jo
lods
mov
or
add
test
nop
push
mov
push
pop
scas
jnp
loop
fldenv
ficoml
or
mov
mov
push
or
filds
in
mov
dec
lds
mov
mov
sub
xchg
inc
push
or
jbe
je
in
cld
sub
push
mov
add
ficompl
fmuls
aam
adc
lret
lahf
addr16
mov
out
out
inc
lods
mov
add
out
mov
aam
arpl
pop
stos
push
out
inc
push
pop
dec
or
cmpsl
mov
aad
test
mov
enter
mov
push
call
mov
jns
cmpsl
mov
outsb
mov
add
cwtl
inc
mov
cwtl
mov
xchg
pop
mov
pop
pop
add
xchg
push
fmul
push
mov
pusha
mov
std
jecxz
xor
js
adc
mov
and
mov
mov
sti
mov
dec
shlb
and
dec
xchg
push
mov
xorb
lahf
cmpsl
inc
aam
shlb
mov
push
hlt
popa
mov
add
mov
xchg
stc
push
scas
cmpb
xchg
in
dec
aad
jg
mov
loopne
divb
sub
xchg
mov
cmp
jo,pn
xchg
iret
je
sub
aam
pop
xor
ja
xchg
addr16
shrb
or
outsb
push
clc
mov
sbb
push
jmp
lcall
xor
aam
jle
test
mov
rorl
shlb
and
inc
push
pop
push
jo
push
push
iret
jb
mov
inc
xor
dec
pop
shll
mov
imul
mov
mov
pop
or
xchg
dec
pop
mov
js
sub
iret
sbb
ficoml
inc
imul
xchg
or
add
fwait
adcl
adc
int3
xchg
outsb
lea
arpl
cmpb
push
mov
mov
inc
out
push
mov
inc
pushf
ja
ja
push
mov
mov
pop
in
xchg
xor
mov
scas
dec
lret
inc
mov
xchg
ja
cmpsb
add
mov
cmp
mov
inc
insb
mov
shrl
cmp
fstpt
jmp
mov
fadds
pop
insl
imul
imul
ret
jae
inc
imul
mov
loop
mov
fistl
gs
test
outsb
xorl
loop
adc
andb
mov
xor
push
cmpsl
notb
mov
les
jmp
insl
lret
aaa
xchg
add
xor
push
fistl
repnz
sbb
adc
jmp
or
mov
rolb
mov
ds
and
aaa
jnp
cmp
push
subb
and
add
testb
mov
mov
mov
hlt
dec
mov
or
mov
cmpsl
jno
outsb
pop
mov
push
movsl
pop
add
sub
xor
jae
cwtl
out
sahf
fildll
fdivrs
lea
mov
shll
mov
pop
inc
jb
inc
pop
rolb
dec
and
sbb
push
add
loopne
xchg
add
mov
aam
insb
insl
dec
scas
jb
hlt
idivl
repz
push
mov
scas
jge
adc
lods
dec
stos
cmp
xor
vfrczss
or
mov
ljmp
lods
in
andb
cltd
cmp
adc
cltd
xor
int3
je
aam
mov
dec
or
roll
loopne
insb
in
repnz
cmp
jae
bound
out
cmp
stos
outsb
xor
xchg
xor
jbe
pop
sub
movb
mov
adcl
pop
fdivs
jge
mov
mov
jo
push
xchg
stos
test
test
pop
lock
push
test
xor
pop
mov
sub
adc
xchg
roll
xchg
xor
fistpl
pop
push
xor
adc
jno
outsb
xchg
mov
ss
mulb
dec
test
rol
push
fwait
or
inc
nop
push
cmpsl
in
imulb
mov
sub
mov
dec
cmp
pusha
add
mov
cmp
adc
loopne
sub
push
mov
dec
loopne
add
cs
sbb
mov
push
mov
pop
ljmp
cs
mov
inc
push
dec
sbb
mov
push
lcall
mov
sub
pop
jl
pop
pop
aam
xor
into
cmp
and
pop
push
subb
loopne
pop
or
add
pop
inc
adc
ror
test
insl
or
cmp
add
push
or
push
popa
arpl
xchg
hlt
lods
sub
adc
shrl
mov
add
xor
and
pop
adc
lea
or
shl
mov
sub
cmp
lock
sub
push
arpl
insl
dec
mov
mov
nop
aaa
fcmovb
insl
cmp
aaa
in
ds
sahf
mov
insl
sub
test
je,pn
sub
mov
sti
rorl
into
push
mov
int
inc
mov
rcr
out
mov
test
ret
lds
sub
mov
add
test
and
push
scas
push
add
mov
movb
mov
cltd
push
jmp
push
xor
lods
cli
dec
popa
sub
std
lea
inc
in
cmpb
in
sub
jmp
mov
pop
scas
xor
add
ficompl
xchg
idivl
scas
int
sbb
mov
call
inc
mov
sahf
les
insl
rorl
adc
mov
mov
jne
and
fmuls
stos
addr16
and
dec
shlb
xchg
lods
ljmp
imul
loopne
es
add
ss
in
mov
fwait
lods
insb
fstpl
jl
movsl
add
push
cmp
fwait
enter
mov
dec
sub
mov
aaa
pop
push
stc
lds
loopne
fidivl
pop
fcomi
cwtl
xor
test
xchg
inc
mov
in
mov
aad
add
cs
lods
lea
pop
clc
shrl
scas
xor
and
ficoml
imul
jb
cltd
loopne
insl
mov
sahf
loope
mov
push
jb
insl
sbb
dec
ljmp
stos
xchg
insl
push
and
inc
or
mov
adc
fiaddl
push
pop
sbb
in
sub
sbb
les
sbb
xchg
cmp
repz
push
in
push
dec
insb
mov
fisubs
sub
leave
push
shlb
jge
call
and
leave
jnp
pop
mov
mov
or
jno
imul
loope
mov
pop
sti
adc
loop
scas
test
push
int
ret
pop
dec
xor
mov
inc
aad
add
roll
mov
and
pop
jno
inc
div
fisubs
rcrl
or
mov
mov
ss
cmpsl
pop
cmp
lea
push
mov
test
push
scas
sti
add
pop
sarl
add
cltd
sub
in
mov
push
aad
inc
sbbl
loop
mov
inc
push
bound
add
sub
push
pop
push
clc
add
adc
add
push
lea
les
aas
mov
dec
pop
or
push
mov
jmp
and
mov
fcmovnb
inc
or
imul
mov
outsb
pop
inc
adc
push
mov
fidivrl
insl
push
scas
cmpsl
xchg
add
push
cmp
iret
rolb
lret
pusha
fiaddl
mov
test
inc
lcall
jecxz
jg
aas
cmp
fiaddl
fimuls
adc
ljmp
fldenv
sub
loopne
xor
fdivl
xor
mov
notl
sbb
mov
jo
fsub
clc
fisubs
pop
mov
adc
and
mov
dec
aaa
outsb
pop
dec
and
ds
dec
sbb
push
lret
xor
xor
dec
mov
enter
pop
sbb
sbb
mov
xlat
lods
cld
push
push
inc
sbb
push
add
mov
xchg
adc
pop
mov
mov
xor
fs
push
imul
dec
or
in
sub
ljmp
movsl
lea
outsl
ds
ficoml
popf
insl
insl
jle
add
sbb
mov
sbb
or
and
je
insl
andb
cli
aaa
jnp
test
inc
outsb
mov
mull
inc
mov
push
or
aad
shll
mov
dec
ja
inc
and
mov
stos
insl
mov
push
mov
adc
inc
xor
test
mov
lahf
shll
lock
jg
fwait
mov
adc
push
xchg
cmp
stos
mov
cmp
stos
mov
push
adc
mov
ds
or
sub
pop
dec
jge
and
pop
xchg
and
das
xchg
sbb
aam
jmp
subb
sub
and
fiadds
test
mov
add
push
fwait
adc
mov
js
xor
mov
fdivs
mov
scas
mov
lea
repnz
lea
fwait
mov
push
test
push
push
out
push
mov
sbb
mov
mov
inc
push
mov
push
cltd
and
imul
push
mov
push
das
mov
pop
fildl
lods
or
jl
dec
mov
insb
insl
sub
xor
and
repnz
insl
or
mov
out
roll
fdivs
mov
data16
mov
sbb
outsb
dec
dec
mov
in
test
ret
mov
pavgw
mov
loope
or
movsl
out
fnstcw
pop
fcompl
push
xor
mov
in
insl
test
push
repnz
add
mov
mov
mov
sbb
inc
cltd
test
xorl
mov
ret
inc
inc
inc
sub
jbe
or
repz
movsl
sbb
mov
je
scas
sbb
and
popf
loop
mov
lods
and
inc
mov
jb
add
xor
push
cmp
jno
cmp
mov
push
imul
push
pop
or
subl
in
and
inc
mov
leave
pop
je
mov
iret
mov
call
scas
icebp
lds
xchg
mov
mov
mov
add
mov
aam
daa
jl
cmp
dec
or
cwtl
and
mov
xchg
jmp
inc
or
nop
aam
popa
imul
dec
jo
shll
scas
sbb
popl
inc
mov
aaa
fcomip
rcll
cs
inc
xchg
int3
test
gs
push
add
push
pop
pop
push
data16
test
in
push
mov
add
cld
aam
inc
mov
cli
sbb
push
insl
lods
fisubs
daa
inc
enter
popa
sbb
aam
mov
or
inc
pop
ret
clc
test
cmp
mov
sub
push
cs
ficompl
or
insl
mov
mov
int
popa
jno
mov
mov
int
imul
adc
dec
insl
imul
subb
push
lcall
add
inc
sub
call
aam
sbb
ds
fstps
rolb
stos
mulb
push
add
fidivrl
sub
push
pop
cmp
insl
aad
cmc
push
inc
mov
push
xor
scas
stc
sbb
or
mov
insb
aaa
push
sarl
lods
mov
sub
shll
cmpsb
pop
in
push
fwait
add
sbb
xor
adc
inc
push
add
xchg
mov
adc
mov
or
enter
or
gs
push
mov
add
jp
lret
push
movsl
or
xchg
andl
in
inc
in
mov
or
dec
mov
jo
js
mov
fdivs
pop
jb
xchg
sahf
or
pop
imul
fistpl
and
dec
ljmp
scas
push
aas
push
loop
test
test
aaa
sbb
repnz
fildl
shrb
jle
push
sbb
outsb
fisttpl
scas
mov
mov
inc
xchg
jbe
jp
pop
adc
add
call
inc
aam
xchg
sbb
xchg
sbb
mov
mov
lea
xchg
mov
insb
xorb
push
cmpb
mov
mov
mov
xchg
ss
lock
cmp
pusha
popa
fisttpl
jne
pop
push
dec
movsb
fimull
dec
daa
pop
dec
std
sbb
aas
mov
stos
mov
and
and
xchg
push
xor
insl
test
add
lods
dec
push
aam
mov
out
xchg
pop
push
sub
sbb
sbb
sub
rorl
and
add
movsl
push
out
xchg
ss
jne
movsb
in
add
inc
insb
adc
jp
fldenv
and
shr
fiadds
rorb
out
fmuls
in
jo
add
sbb
scas
inc
pop
popf
inc
mov
inc
cmp
inc
xchg
repnz
push
outsb
insb
ss
in
rolb
mov
aam
add
push
icebp
mov
shll
mov
mov
add
jno
ficoml
inc
pop
mov
inc
popa
adc
lea
mov
movsl
fdivs
mov
into
pop
inc
inc
or
mov
pop
jnp
ret
pop
fsubrs
sub
daa
pop
sub
ret
xlat
pop
repnz
pop
jge
mov
bound
xchg
insb
popl
aam
in
lahf
push
and
or
sbbb
mov
mov
xchg
xchg
pop
mov
adc
push
pop
push
fs
je
arpl
mov
add
sbb
fadds
or
fidivl
dec
or
inc
lds
or
ficoml
fildl
pop
std
aaa
lds
sbb
in
mov
gs
sub
sti
add
mov
stos
sbb
sbb
inc
pop
fdivrs
out
lds
je
ds
insl
sub
shrl
pop
xchg
ja
js
dec
mov
fcoms
mov
dec
inc
inc
pop
push
push
iret
imul
sbb
or
sahf
stc
dec
test
adc
push
shll
fiaddl
add
pop
sbb
or
add
add
out
vmread
rolb
xor
lea
pop
loop
fs
adc
jbe
inc
stos
mov
ss
lods
or
add
hlt
test
adc
jle
mov
push
sbb
or
mov
loop
test
adcl
lret
pop
sarl
das
in
call
mov
dec
jne
adc
jo
fistpl
stos
cs
push
lods
add
sti
sbbl
xchg
mov
sbb
and
out
mov
push
loopne
pop
dec
fcmovnbe
fs
xchg
cmp
pop
push
adc
sbbb
loop
daa
test
addr16
nop
icebp
push
inc
mov
imul
mov
add
roll
lret
sbb
ror
xorb
enter
test
dec
enter
lea
mov
pop
inc
dec
adc
stc
xchg
int
fldt
or
cltd
xor
lods
dec
call
movsl
sbb
pop
lahf
outsb
loope
and
repnz
add
inc
movsb
add
xchg
adc
pop
xchg
sub
mov
gs
xchg
fsubrs
js
popa
es
incb
pusha
push
mov
repnz
jl
push
or
ror
or
cmp
xchg
ret
xchg
outsb
or
dec
call
stos
loop
fstpt
push
jnp
out
add
enter
mov
outsb
inc
jb
stos
sbb
xchg
insb
push
cmp
fldt
inc
jbe
sbb
adc
inc
mov
in
push
jo
adc
js
fisubrl
ljmp
pop
mov
mov
iret
dec
adc
popa
addl
push
test
pop
add
rcr
lods
jne
push
push
shll
imul
xor
or
jno
enter
adc
adc
inc
mov
sarb
fwait
mov
and
jno
and
add
movsb
addr16
mov
sarb
push
mov
xor
cmpsl
cmpsb
sbb
cld
es
jle
mov
sub
fldt
into
pushf
push
pop
push
jno
fs
cmpsl
stc
ljmp
mov
or
notl
adc
push
sub
loopne
push
adcb
sub
adc
push
mov
js
and
sub
ds
adc
jbe
mov
inc
je
cmpl
fisubrl
les
mov
adc
nop
data16
push
shlb
int3
pop
jb
fcoml
pop
fbstp
pop
roll
inc
out
xor
push
sub
push
or
add
pop
pop
xor
rcl
mov
or
xchg
lock
and
mov
mov
into
cmp
cmpsl
mov
inc
dec
pop
outsb
je
mov
addb
mov
or
dec
dec
lds
insl
sub
jno
xchg
xchg
or
fdivl
cmp
outsb
fdivr
or
xchg
mov
mov
fldt
aaa
fdivrs
int
pop
fldt
mov
sub
mov
inc
jbe
add
out
sbb
inc
loop
imul
sbb
clc
fcmovnu
loope
cmc
or
lods
add
cmp
ss
cmp
adc
jecxz
stos
push
push
fstpt
mov
cmc
leave
out
jl
ss
xor
ret
xor
and
xlat
pop
je
imul
jp
push
xchg
roll
mov
adc
jg
xchg
push
mov
mov
cmp
popf
adc
ja
cmp
sub
fcoml
lods
movsl
lods
cmp
mov
js
leave
lret
mov
and
sti
mov
inc
shlb
sahf
pusha
or
and
scas
add
push
add
andb
ljmp
lcall
mov
mov
loopne
dec
or
mov
gs
outsl
arpl
insl
mov
enter
xchg
incl
adc
stos
mov
mov
jnp
sbb
cmpsb
mov
mov
gs
push
inc
arpl
pop
fistl
in
pop
je
push
sbb
xlat
push
mov
inc
int3
fcompl
and
push
fstpt
lahf
ds
ss
and
lock
add
fisubrl
insb
jge
inc
jge
pusha
iret
bound
push
mov
pop
test
lcall
cmp
jmp
inc
pop
mov
dec
nop
add
pop
add
inc
ss
das
mov
push
xor
out
cli
push
out
sub
pop
aam
out
imul
cmp
aas
test
add
push
mov
aad
sub
pop
rol
push
fildl
adc
in
mov
push
or
mov
mov
sub
loop
pop
mov
dec
aam
push
fisttpl
mov
adc
rdtsc
xlat
loop
pop
rorl
jbe
pop
int3
mov
cmp
inc
or
jecxz
xor
push
inc
jo
mov
add
loope
in
lcall
xor
inc
jno
arpl
fcmovu
add
shll
fdivrs
jmp
dec
jg
fldt
in
inc
jno
mov
dec
lods
sbb
ja
ret
add
dec
in
mov
enter
imul
push
cmp
push
xchg
lds
push
mov
loopne
dec
lds
add
sub
dec
adc
pop
lds
lds
add
push
fsubrs
push
cwtl
movsl
jmp
and
ret
je
lock
or
xchg
mov
imull
mov
dec
test
pop
mov
out
outsb
subb
mov
mov
nop
clc
jge
mov
push
mov
fsubrs
xorb
arpl
or
or
cwtl
or
dec
mov
je
mov
popa
mov
push
mov
mov
call
fs
add
cmpl
in
xor
lahf
mov
call
cmp
dec
ja
outsl
test
or
or
cs
push
stc
push
mov
mov
pop
adc
js
xchg
insl
inc
or
sbb
inc
push
mov
insl
pop
ficompl
sbb
adc
ret
inc
dec
mov
jecxz
addb
jl
sub
pop
mov
stos
rol
jge
mov
mov
cmp
mov
cmp
sahf
clc
cmpsb
mov
lret
sbb
and
push
loopne
scas
jmp
xchg
addr16
lock
fwait
dec
add
bound
add
imul
int3
add
rcl
loop
inc
push
mov
daa
es
popa
inc
pop
push
fs
sub
std
je
fldenv
adc
test
pop
out
gs
lods
jno
fildll
cmc
push
ds
mov
cmp
xchg
pop
fbstp
mov
fisttpl
loopne
jp
mov
mov
fsubs
jne
fsub
stos
push
aam
shlb
sub
popf
lds
cmp
arpl
or
lods
mov
or
fdivs
pop
pop
or
jp
ret
insl
jmp
adcl
cmp
insb
test
jno
inc
ss
fnsave
mov
jb
in
movsb
mov
pop
aaa
inc
rolb
test
mov
mov
push
insb
sti
test
insl
mov
fmull
mov
pop
lock
and
cs
xor
mov
push
or
jecxz
pop
rcrb
push
fdivs
push
push
sub
scas
and
test
mov
inc
inc
inc
sbb
into
mov
mov
mov
cmp
cmp
mov
pusha
mov
xchg
sbb
and
imull
add
shll
fadds
sub
or
mov
mov
pop
test
and
and
movsb
arpl
mov
insl
or
outsl
cli
ret
dec
rclb
mov
push
mov
push
add
cli
mov
xchg
xor
mov
mov
jb
and
xchg
out
popf
jp,pn
adc
test
lods
adc
mov
bound
sub
or
mov
inc
mov
pop
sbb
dec
pop
adc
mov
scas
nop
jo
inc
cwtl
sub
lcall
pop
push
in
fcomps
gs
inc
inc
mov
mov
jbe
hlt
inc
jno
mov
pop
adc
imul
cmp
cmp
push
sub
jp
dec
call
iret
scas
jno
movsb
inc
jmp
movsl
insl
stos
test
adc
xorb
aas
sbb
xchg
pop
mov
add
testb
in
aam
insl
imul
xchg
data16
sub
jbe
push
add
icebp
mov
inc
fwait
mov
add
cmp
je
mov
pop
inc
xlat
jmp
mov
inc
cmp
in
pusha
imul
xchg
dec
pop
xchg
mov
aas
xchg
jno
xchg
pushf
lcall
insl
jecxz
adc
dec
loopne
enter
mov
fiaddl
sarl
mov
mov
or
fcompl
adc
movsb
xor
adc
loopne
dec
sbb
movb
fsubp
das
sbb
or
lock
std
fisttpll
mov
pop
cmp
outsb
insl
pop
movsl
pop
cld
mov
fsubr
inc
mov
and
xchg
or
jne
arpl
loope
fwait
cmc
movsl
mov
adc
mov
push
push
repnz
cmp
arpl
jmp
cmp
pop
cli
loop
fcmovnu
repnz
es
inc
or
add
ficoml
xor
ss
sub
mov
inc
daa
adc
mov
dec
lahf
inc
inc
mov
stos
je
jp
shrb
pop
test
jl
push
mov
mov
xchg
daa
inc
pop
mov
or
xor
inc
pop
movsb
fistl
sbb
lret
lock
cli
mov
add
add
jno
xor
mov
inc
in
sahf
mov
inc
movsb
insl
ret
mov
popa
mov
fistl
adc
dec
loopne
stos
outsb
movsb
xchg
xlat
pop
movsb
and
aaa
mov
mov
int
into
sbbb
fdivs
repnz
pop
jecxz
push
mov
daa
stos
jle
test
or
xor
or
shrl
dec
addps
loopne
mov
fisubs
or
or
add
lods
pop
lahf
jmp
ret
jge
jno
je
jae
inc
mov
stos
inc
std
inc
push
or
pop
jecxz
repnz
popf
dec
sbb
or
movsl
insl
fstpt
push
shll
cmpsb
push
push
lcall
hlt
push
insl
cmp
fucomp
ja
sbbb
lods
bound
jmp
dec
add
popa
movsl
mov
loope
lds
jb
fsubr
subb
cwtl
popf
mov
add
lods
sub
xor
sbb
aas
xchg
sahf
repnz
ljmp
xchg
hlt
stos
add
pop
xchg
into
jmp
test
shl
add
pop
push
mov
lret
repnz
fiaddl
jle
mov
push
insb
mov
jle
inc
cmc
mov
test
push
movsb
mov
insl
lea
loop
jno
fs
lods
sub
hlt
test
lds
fxtract
in
and
mov
stos
mov
arpl
push
test
insb
or
insl
mov
push
leave
js
fcmovnbe
inc
mov
cltd
adc
jp
sub
sbb
jns
jge
fsubrl
cmp
fadd
lcall
sub
push
or
lcall
push
arpl
adcb
or
jno
pop
mov
int
cmp
sbb
mov
mov
in
lds
mov
add
fnstsw
in
sti
data16
mov
mov
jp
adc
insl
imul
dec
xchg
repnz
int
into
adc
push
mov
xchg
dec
inc
sub
cmpsb
xchg
mov
inc
dec
rcl
jle
dec
mov
cs
ds
pop
inc
xchg
push
and
mov
insl
insl
in
inc
jge
test
cmp
inc
mov
test
loopne
push
aaa
in
fs
push
jne
rcll
into
or
sbb
cmpsb
mov
nop
jle
roll
push
push
xor
push
imull
rcl
cs
inc
and
jge
mov
aam
inc
xor
jo
mov
stos
outsb
jmp
insl
mov
test
mov
pusha
push
rcrb
xchg
mov
jg
push
mov
inc
add
push
out
push
adc
test
aam
add
add
mov
jge
push
in
mov
imul
in
decb
sub
xchg
imul
aad
mov
outsb
inc
ja
pop
or
push
inc
sbb
push
lea
incb
mov
dec
aam
pop
cmp
sub
cmp
scas
and
in
add
fldt
jl
xchg
cwtl
popf
mov
adc
sbb
or
pop
in
or
mov
aas
fwait
rcrl
fistl
les
call
fs
mov
sub
stc
int
outsb
pop
inc
adc
shlb
mov
pusha
hlt
add
imul
jmp
xchg
in
sbb
add
xchg
shll
pop
or
mov
movsl
test
orl
mov
xchg
lahf
sbb
mov
repz
insl
cmpsl
lahf
add
insl
imul
fmul
or
mov
push
or
add
cmp
sub
pop
dec
inc
pop
mov
sbb
dec
add
mov
sbbl
dec
jmp
loop
mov
jne
insb
mov
jno
fldenv
lret
xchg
cs
clc
mov
dec
aas
add
pop
lret
fisttps
adc
push
or
adc
insb
je
xchg
faddl
fisubrl
and
or
lea
and
pop
adc
and
mov
jo
lahf
mov
pusha
inc
inc
sbb
jne
fwait
loope
imul
dec
leave
jecxz
test
das
pusha
inc
adc
dec
mov
jo
mov
add
sub
sub
jo
dec
adc
fildl
aam
mov
push
add
stos
mov
mov
call
jbe
imul
lea
clc
xchg
test
loop
scas
add
adc
fs
cmc
jp
inc
pop
pop
call
insl
movsl
fstpt
sub
sub
cs
push
adc
andl
cmp
test
out
fadds
mov
dec
add
ja
ret
stos
imul
xchg
es
inc
notb
mov
js
loope
push
push
movsl
mov
mov
push
test
fmul
xor
pop
add
and
jnp
sub
lcall
sub
mov
mov
mov
test
pop
push
movsb
mov
bound
cwtl
pop
fdivs
enter
xor
inc
push
or
dec
outsb
sub
pushf
push
xor
data16
mov
push
push
inc
add
ficoml
aaa
aam
add
aam
inc
sbb
clc
sub
je
or
push
sub
outsl
test
add
or
dec
jno
mov
dec
cs
or
dec
sub
je
nop
clc
arpl
and
mov
mov
es
xor
andb
fnstcw
xchg
adc
jnp
fcompl
pop
jp
sub
mov
insl
jge
inc
xchg
jnp
mov
loop
scas
mov
fsubrl
fistl
jns
cmpsb
pusha
cmpsb
cmp
lret
adc
sub
inc
adc
dec
cmc
sbb
add
stos
mov
rclb
push
shll
popf
or
lret
mov
mov
sub
fcmovnb
inc
xlat
cmpsl
into
dec
or
add
add
mov
scas
jae
push
inc
xor
je
inc
dec
jle
jmp
add
sub
and
pop
or
sbb
inc
sbb
push
or
jle
push
adc
aad
add
outsb
mov
rcl
mov
fidivl
shrb
push
jo
imul
xchg
dec
add
ret
and
mov
in
xchg
insb
aaa
xchg
sub
or
xchg
sarl
xchg
lret
movb
pop
cli
ja
dec
cmp
repz
or
mov
and
rorl
inc
je
adc
adc
push
mov
fs
pslld
push
add
insl
xchg
les
lea
in
aad
or
loop
gs
mov
xchg
sub
fidivl
jnp
mov
sub
push
pop
fsubrs
push
les
jne
mov
int3
insb
add
insb
pop
int3
ljmp
pushf
mov
jns
scas
fiaddl
sub
push
popf
push
and
aaa
movsb
aaa
xchg
xor
insb
xchg
sub
call
xchg
aam
rcll
in
rolb
rcl
outsl
xor
fcmovnb
push
pop
mov
je
pop
mov
movaps
ret
mov
adc
fwait
insl
mov
pop
insl
imul
fucom
pop
add
stos
mov
mov
pop
testl
popa
ja
sbb
scas
mov
fisttps
cmp
ss
insl
or
lahf
mov
pop
popa
mov
and
push
mov
mov
rol
imul
mov
mov
push
dec
int3
lods
in
lock
aam
mov
mov
mov
xchg
add
out
adc
bound
lea
loopne
stc
adc
add
mov
xchg
add
pop
in
pop
push
mov
mov
pop
add
xchg
int
mov
insl
mov
push
adc
inc
mov
push
push
cltd
mov
enter
pop
mov
inc
data16
dec
adc
sbb
dec
add
xor
dec
adc
add
add
xlat
sub
popf
mov
insb
pop
and
mov
adc
mov
cmp
cwtl
call
jecxz
sbb
fsubrs
add
or
in
mov
add
jo
lret
pop
lea
add
mov
pusha
lahf
insl
cmp
adc
shlb
and
xchg
outsb
fldt
push
sahf
lret
pop
sti
add
adc
cmpsl
fidivs
insl
push
sbb
mov
sbb
call
mov
jecxz
insl
sub
fwait
jle
sub
mov
push
addr16
movsb
loop
push
inc
sbb
adcb
lea
in
and
ffree
add
dec
fimull
pop
pop
loopne
imul
mov
mov
inc
lds
xor
imul
mov
push
pop
sarl
in
fisttpll
mov
push
icebp
lea
inc
rolb
adc
xchg
gs
jns
xchg
insb
sbb
rolb
dec
push
pop
mov
mov
lods
pop
push
imul
mov
dec
push
bound
int3
std
sbbb
outsb
fcmovnb
ret
dec
mov
push
push
nop
in
je
fisubrl
adc
pop
inc
mov
mov
jbe
cmp
push
cmp
pop
xchg
out
push
mov
cmp
mov
inc
std
lret
sub
push
or
xor
addb
mov
je
push
mov
fdivs
adc
outsb
mov
pop
push
jl
insl
mov
add
jle
sbb
clc
insl
cmp
in
sbbb
fistpll
mov
sbb
shl
dec
test
pop
mov
filds
pop
inc
popf
push
pop
push
adc
clc
stos
mov
xor
add
adc
and
or
cs
popf
std
xchg
out
out
shll
xor
push
into
bound
mov
fiaddl
jae
adc
jne
loope
mov
push
or
mov
arpl
addr16
daa
xchg
lcall
inc
xor
and
fwait
or
repz
movsb
sbb
repnz
sarl
adc
pop
mov
inc
or
pop
loop
push
sub
mov
shlb
flds
lds
mov
sahf
lcall
es
mov
ret
and
inc
push
stc
in
inc
fcomi
mov
es
jno
mov
test
lret
cmp
js
fadd
cld
jae
sbb
inc
inc
add
aaa
dec
cld
insl
sbb
cmp
sub
mov
lods
jne
mov
cmpsb
sub
pop
pop
stc
adc
push
insl
xor
test
rol
push
or
fwait
pop
das
jg
or
inc
pop
mov
dec
xchg
dec
in
mov
addl
push
fmuls
mov
test
and
mov
test
cmp
mov
repnz
jo
push
mov
and
das
fwait
and
adc
sbb
inc
push
push
adcb
cmp
xor
push
mov
jnp
cld
sub
dec
lods
mov
clc
ljmp
push
jl
arpl
fnstcw
ficoml
lods
test
ret
pop
mov
pop
loop,pn
inc
mov
test
jne
les
stos
loope
jbe
in
add
shl
mov
xor
adcl
lret
mov
mov
insl
iret
mov
cli
adc
jne
push
nop
push
sub
dec
bound
cs
jmp
mov
jl
or
leave
addr16
sub
jp
lea
jne
rorb
shlb
push
sbb
test
jo
call
aad
jns
mov
jo
lods
mov
movsl
sbb
fnsave
mov
cmp
rolb
mov
cmp
inc
cmp
outsb
movsl
sbbb
xor
mov
sub
push
orb
rcrl
je
cltd
xchg
mov
cmpsb
orb
test
mov
pop
pop
pop
and
inc
jno
fwait
xor
and
fstpl
jns
add
subb
imulb
imul
jb
mov
clc
push
add
sbb
fwait
pop
or
shll
fsubrs
adc
outsb
dec
dec
inc
in
fcomi
dec
dec
push
xor
mov
mov
cmc
inc
xor
sub
pop
inc
adc
dec
push
push
xor
imul
adc
push
das
push
lods
insb
fadds
cmp
sbb
mov
imul
and
popf
pop
aad
cmp
sbb
insb
mov
insl
xor
push
inc
push
pop
lret
or
add
mov
xor
jno
insb
mov
lods
xchg
loopne
mov
mov
push
adc
jecxz
stos
pop
test
stc
ficompl
adc
or
jecxz
jbe
fstp
inc
adc
loopne
push
test
negl
sub
lcall
dec
dec
mov
ret
rcrb
jecxz
mov
xor
lds
lds
fistps
out
xchg
push
fcmovb
pop
and
sub
popa
pushf
xchg
adc
mov
fwait
adc
lret
adc
or
insl
mov
mov
dec
xchg
fdivs
lds
add
sbb
cmpsl
insl
xor
outsl
into
in
lods
push
push
or
mov
orl
mov
sub
je
cmp
adc
sbbb
mov
sarb
push
mov
pop
mov
add
test
inc
adc
lods
jp
addr16
in
scas
pop
mov
lcall
jae
xchg
jno
mov
loope
arpl
sub
push
push
inc
xchg
int3
inc
adc
and
in
cli
mov
shrb
jae
mov
add
popa
imul
inc
mov
shlb
rorl
test
sub
cmp
sbb
rorl
push
push
xchg
lods
cmp
or
xchg
insl
fisubrs
out
sbb
jno
push
aad
test
sbb
ds
lds
addr16
push
mov
cld
in
cld
sub
or
nop
jp
and
mov
aam
pop
shrb
ss
rclb
push
mov
mov
pop
push
cltd
int
xor
call
mov
add
jle
push
add
inc
dec
aam
pop
sub
xchg
outsb
test
jge
jnp
fistl
push
push
push
jmp
inc
xor
inc
dec
mov
sahf
mov
mov
ja
stos
fiaddl
jle
pushf
pop
ret
jo
mov
popa
jp
insb
in
inc
push
push
out
mov
jl
pop
fstpl
add
arpl
aas
and
xchg
stos
mov
jp
cwtl
shrl
jbe
mov
sbb
fnstsw
leave
pop
inc
mov
scas
mov
fistl
std
in
rcl
push
xorl
mov
scas
xor
sub
cmp
jge
sub
inc
mov
out
cmp
rcrl
xor
sub
mov
inc
in
mov
dec
xchg
cmpsb
mov
ss
cmp
insb
pop
mov
sub
ret
sub
movsl
or
mov
dec
pop
repz
mov
pop
hlt
mov
pusha
sub
sbb
into
sbb
or
adc
push
inc
or
cltd
subb
jno
clc
sbb
and
mov
adc
or
roll
dec
shlb
icebp
add
or
mov
and
ja
sub
push
or
mov
lods
and
cli
pop
add
fisttpl
bound
adc
xor
dec
pop
out
xchg
xchg
in
sub
jecxz
out
mov
movsb
adc
imul
sub
jecxz
jge
sub
jne
fucomp
push
addr16
adcb
add
es
mov
arpl
cmc
fisubrl
fnstsw
and
adc
mov
inc
adc
das
and
testl
jbe
fstpt
mov
dec
adc
pop
test
xor
ljmp
jecxz
out
in
inc
fldt
xchg
lret
mov
pop
push
sbb
inc
mov
daa
cmpsl
xchg
mov
xchg
push
push
pop
insl
out
cmpsl
mov
mov
enter
scas
and
or
sbbb
inc
sbb
add
push
xor
enter
int
fstpt
add
rcl
cs
xchg
clc
addr16
adc
sbb
fistpl
mov
lahf
dec
add
sbb
fiaddl
sbb
mov
adc
ss
or
loop
add
in
movsl
int
popa
sub
daa
mov
mov
fcmovb
test
xor
mov
mov
adc
jl
inc
fstpl
fs
aaa
dec
adc
fsub
insl
imul
popf
adc
push
insl
dec
adc
je
mov
mov
add
pop
add
or
popf
lods
and
sbb
fisubrl
mov
add
inc
je
mov
sub
xor
scas
cmc
add
stc
dec
addr16
pop
xor
and
jecxz
push
ret
popf
add
mov
add
mov
outsb
or
push
icebp
mov
mov
cld
jge
mov
out
pop
repnz
dec
add
push
pop
mov
int3
push
cmp
mov
or
xchg
shlb
popa
pop
jp
inc
xchg
mov
in
mov
sub
repz
cmpsb
add
bnd
mov
insb
add
pop
out
rcl
xlat
enter
fnstenv
rorl
enter
ss
pusha
cmp
push
pop
xor
xor
jl
dec
add
clc
insl
fcoms
push
aam
insb
xchg
test
fdivr
int3
insl
scas
aad
mov
pop
push
into
jp
jmp
mov
mov
adc
push
rcl
js
mov
push
ret
push
push
sub
xchg
sbb
jge
push
in
mov
sbb
cmp
test
repnz
enter
or
mov
adc
repnz
fcomps
mov
mov
mov
push
aas
lods
lahf
inc
test
inc
adc
adc
fisttpll
sbbb
jl
mov
mov
cltd
movsl
pop
cmpsl
bound
or
bound
in
lock
or
jo
mov
or
dec
sti
dec
and
mov
mov
je
add
pop
mov
pop
mov
test
adc
push
add
sbb
ss
stos
outsb
dec
pop
cs
arpl
pop
cmp
repz
mov
mov
cs
stos
in
jle
cwtl
and
scas
bound
push
push
xchg
lcall
sub
not
test
sub
mov
push
mov
jo
faddp
push
xor
dec
loopne
pop
into
and
mov
pop
xor
std
int3
pop
test
gs
push
mov
imul
push
sbb
xchg
cmp
mov
push
xchg
mull
xchg
push
adc
jg
fdivrs
ss
inc
sti
pmaxub
shrl
lea
jno
cmp
aad
insb
insl
pop
aam
lods
fwait
dec
test
inc
fucomp
mov
sub
test
icebp
jge
add
aas
cmp
inc
mov
stos
lock
mov
jle
jb
pop
rol
cmpsb
or
inc
loope
mov
dec
repnz
mov
insl
out
testl
rclb
mov
sahf
loopne
je
mov
cmp
pop
popa
jo
pop
enter
lods
dec
add
pushf
loop
push
fwait
mov
push
adc
sbbb
or
lods
add
rcr
cmpsb
lcall
pushf
insl
dec
mov
bnd
outsl
out
cmp
mov
xor
add
push
sbb
push
rclb
ret
hlt
gs
xchg
sbb
xchg
mov
jae
or
jnp
mov
xchg
pop
push
mov
sub
mov
lret
fbstp
add
adc
ja
xchg
mov
jp
pop
push
rorb
clc
pop
push
mov
psubusw
mov
jnp
dec
dec
or
es
cli
fdivl
dec
push
jno
sbb
adc
outsl
add
ret
dec
pop
fisubrl
lock
cmp
fdivl
adc
add
insl
mov
add
xor
mov
pop
lods
insl
fdivl
xchg
jb
out
and
and
push
sbb
aas
adcb
mov
mov
test
stc
xchg
cmc
mov
in
aad
aam
push
pop
or
les
xchg
and
push
sbb
xor
fcom
mov
dec
gs
arpl
mov
les
mov
push
testl
cmp
rorb
out
js
sbb
adc
into
sbb
inc
pop
push
or
popl
jb
and
push
sbb
cli
dec
xor
outsb
xchg
jle
mov
mov
mov
dec
xchg
push
int
pop
bound
je
mov
sar
jp
xchg
push
xchg
mov
fdivrl
push
adc
sbb
lret
mov
add
sti
lods
pusha
mov
repnz
int
aaa
xchg
sahf
das
rcll
add
sub
dec
outsb
cmp
mov
movsb
jnp
inc
xor
sbb
aad
out
mull
or
mov
sub
inc
inc
cli
popa
popa
imul
loope
mov
bound
popa
pop
das
cmp
add
insl
mov
rolb
imul
mov
or
repz
pop
sub
lds
and
in
sbb
cmp
test
test
pop
test
test
mov
sti
mov
fbld
xchg
shll
popa
pop
loopne
adc
lods
add
in
or
sub
jb
jb
pusha
icebp
mov
lods
lods
push
icebp
xor
sub
loopne
cmc
and
and
add
pop
clc
pop
pop
jb
mov
rolb
outsb
pop
mov
jnp
and
and
adc
out
addr16
jbe
mov
add
add
push
inc
adc
sbb
or
mov
or
inc
mov
mov
push
add
fwait
and
xor
inc
mov
add
mov
and
or
mov
test
or
jne
adc
mov
sbb
repz
fistl
adc
fdivrl
mov
pop
jnp
repz
outsb
stos
insl
push
adc
mov
lods
scas
pop
into
jo
cmp
pop
shrb
pop
ds
outsb
xchg
push
xor
inc
mov
pop
out
stos
insl
fstpt
cwtl
mov
fbld
xor
test
jno
mov
mov
push
je
and
sub
lods
and
lea
cwtl
mov
insl
mov
lret
scas
movsb
cmp
mov
push
in
aam
sbb
movsb
inc
jne
stos
ss
fsubrl
adc
imul
cmc
push
mov
jbe
call
xor
jecxz
test
loopne
bound
mov
inc
pop
aaa
jg
pusha
pop
les
xchg
insb
lea
test
fiadds
pop
outsb
daa
xor
cs
addr16
sahf
lret
xor
push
xor
inc
mov
mov
pop
adc
dec
pop
stos
ljmp
cli
ljmp
call
lea
jge
insl
xchg
ss
jle
adc
sbb
cs
loopne
adc
jge
sub
and
xchg
mov
inc
fisttpll
jge
inc
jne
mov
cmp
testl
pop
in
stos
mov
outsb
pop
mov
mov
fildl
add
aaa
loope
mov
inc
sub
repnz
fisttpll
out
mov
inc
mov
cmpsb
out
idivl
push
mov
dec
xor
lret
mov
mov
add
rcr
push
test
or
aas
andl
jbe
push
push
inc
rcl
ret
or
sub
cs
pop
clc
and
mov
fisttps
pop
dec
aas
lods
xor
ss
jo
test
loopne
fldcw
push
pop
add
push
orl
adc
inc
pop
gs
int
outsb
sbb
dec
addl
dec
aam
add
push
popf
push
mov
ds
lret
adc
push
fldt
adc
mov
lods
cli
pop
mov
dec
mov
jb
or
pop
imul
out
mov
push
mov
xchg
or
and
mov
sbb
jmp
mov
push
imull
jae
mov
iret
lods
lods
jno
mov
ds
mov
insl
loopne
xor
loop
mov
inc
xor
pop
daa
jo
negl
in
or
or
push
dec
movsl
lods
push
stos
dec
pop
mov
or
stos
push
mov
lcall
push
adc
mov
inc
outsl
inc
mov
sbb
addr16
mov
jbe
cmp
daa
subb
mov
mov
js
xor
push
aad
cmpb
sbbb
jge
mov
fmull
jno
mov
add
movsl
test
sbb
les
adc
pop
or
xchg
push
outsb
cmp
sub
scas
call
in
mov
mov
and
inc
sbb
subl
adc
or
push
xchg
ss
dec
inc
movsl
cwtl
imul
or
mov
les
push
dec
sbb
call
mov
popf
xchg
cld
or
xchg
fsubrl
loop
in
repz
fstp
lea
jns
es
mov
js
or
outsb
insl
lahf
into
pop
mov
in
adc
fildl
dec
arpl
shlb
adc
jp
adc
cwtl
pop
fnstsw
and
add
scas
mov
xorl
push
lods
adc
xor
jmp
inc
inc
std
into
adc
mov
pop
lds
push
jns
pop
pop
rolb
leave
push
sub
dec
bound
dec
sbb
imul
insl
adc
pop
sub
cmp
sarb
sub
fcoml
xchg
mov
mov
adc
or
out
and
orb
rcrb
test
nop
dec
sbb
inc
shlb
xchg
jp
es
fcmovnu
jno
outsb
test
inc
cmp
imul
mov
fisubl
insb
push
push
test
loop
aad
lret
cmc
or
jnp,pn
popf
mov
subl
inc
inc
cmp
sbbb
push
adc
mov
sub
mov
mov
test
lret
test
push
pop
mov
les
les
push
jbe
ror
pop
movsl
subb
adc
dec
add
push
and
push
ja
loopne
jmp
xchg
jo
lock
aaa
movsl
pop
clc
mov
sbb
cmp
pusha
adc
aaa
sub
dec
push
adc
jo
jns
sub
es
mov
jge
pop
ljmp
filds
or
fmull
mov
mov
imul
sub
sub
movb
or
mov
push
into
or
out
iret
addb
jge
mov
andl
aam
scas
cmp
mov
mov
cmp
pop
or
pop
inc
pop
iret
add
popa
test
push
call
mov
pusha
aaa
iret
cmp
shrl
cmpsl
jb
fisubrl
hlt
rorb
out
cli
stc
outsb
insl
push
adc
cmc
sbb
push
fiaddl
loope
add
subb
fcomps
mov
adc
jo
xchg
pop
ficoms
or
ffreep
es
or
inc
test
int
cs
mov
es
imul
mov
ss
stc
mov
hlt
push
ret
or
test
sti
add
cmc
mov
mov
sub
mov
inc
mov
xor
mov
dec
and
sub
mov
inc
pop
adc
add
pop
adc
sbb
repz
rcr
mov
push
lret
jmp
push
xchg
das
xchg
push
push
ljmp
rcrb
sub
mov
and
cld
add
stos
inc
test
sub
je
mov
mov
mov
bound
sbb
xor
fiaddl
inc
rcrl
insl
sbb
jmp
sahf
clc
inc
inc
shrl
sbb
in
mov
or
xor
dec
les
push
fisubrl
fildl
aas
pop
cltd
int3
pusha
cmc
sti
lds
mov
iret
les
adc
pop
xor
jle
pop
lods
dec
add
mov
mov
test
js
ret
sbb
adc
push
or
xor
fcoms
ds
lret
push
xchg
inc
sub
cmp
pop
aaa
outsb
sbb
or
lcall
pop
jp
mov
jge
add
sub
mov
or
sub
add
push
test
sub
cmpsb
les
xor
jnp
mov
in
jl
pop
cmp
fidivl
add
jl
jbe
lods
push
insl
pop
adc
xor
xor
inc
out
pop
push
lret
mov
mov
jg
cs
push
adc
mov
inc
add
imul
call
ss
push
les
test
rolb
xlat
insl
sub
adc
das
les
sub
xor
xor
fistps
lds
sub
mov
sbb
fidivl
movsl
test
cmp
jno
andl
push
and
or
xor
mov
inc
push
push
fidivrl
sub
adc
add
cs
jmp
inc
sbb
sbb
mov
and
push
rcrl
pop
xor
stos
xor
and
jbe
insb
mov
cs
or
push
pop
push
mov
add
mov
sbb
cmpsl
jle
scas
adc
pop
sbb
sbb
push
in
or
mov
pop
inc
aas
popf
ds
cmp
add
adc
push
cmp
stos
imul
ror
fimull
push
rolb
pop
mov
aad
je
sub
pop
adc
push
insb
les
fisubl
mov
in
adc
lcall
mov
xor
mov
out
aam
pusha
push
shrb
call
clc
aad
pop
jl
add
push
aam
sub
lret
test
call
pop
or
call
sarl
pop
dec
pop
add
cmp
sbb
imul
mov
pop
push
push
or
enter
movb
leave
fnstenv
aad
xor
inc
je
movsb
sub
mov
fadds
mov
imul
in
push
add
aas
orl
sbb
test
test
dec
adc
sub
mov
popf
mov
mov
jno
jo
mov
lcall
mov
mov
call
and
fcmovu
sbb
jne
mov
inc
aad
adc
test
bound
mov
rcrl
push
inc
pop
cmp
orb
or
cmp
icebp
push
outsl
jno
addr16
aad
cs
mov
loope
roll
dec
mov
loopne
jne
jne
xor
adc
or
xor
dec
in
add
push
and
adc
push
call
push
les
add
sub
push
addr16
fdivl
push
pop
xor
cmpsl
fbld
fldt
fidivrl
dec
xor
push
dec
push
mov
dec
lea
stos
insl
xorl
lods
mov
shlb
fwait
mov
sahf
mov
push
in
roll
or
xor
mov
das
ja
ja
or
lret
fldt
xlat
vpcomuw
ss
imul
lock
push
mov
sbb
repnz
sub
mov
pusha
pop
call
test
shll
fisubrs
inc
mov
je
sub
call
dec
dec
sub
enter
jg
add
and
cltd
sbb
ss
mov
incb
xchg
fdivs
cmpb
jno
decb
push
pop
push
rolb
int
pop
arpl
xor
jne
mov
sti
pushf
stos
dec
mov
sbb
fisttpll
xchg
insl
mov
adc
push
sub
xor
jle
sub
je
fcmovnu
sti
cld
adc
ja
mov
fistl
rcrb
jo
adc
call
hlt
pop
xchg
test
mov
mov
lock
ds
cmc
mov
loop
pop
into
inc
xor
mov
jge
rorb
addb
xchg
pop
pop
cli
rcl
leave
adc
add
fimuls
fistl
sub
cmp
sub
push
aaa
fcmovbe
insl
cmp
mov
ficompl
cmp
or
sarb
in
add
inc
insl
outsb
dec
xchg
test
and
call
xchg
stos
and
adcl
mov
fildll
repnz
push
cmp
jge
xchg
add
stos
insl
loope
cli
jg
xchg
sbb
pop
push
mov
test
and
jb
fcmovbe
test
pop
aam
sub
movsl
fdivrs
mov
mov
add
xlat
and
xchg
pusha
rclb
jbe
xchg
pop
fwait
xchg
mov
nop
mov
mov
add
loopne
bswap
push
inc
loopne
mov
mov
ds
push
mov
cwtl
add
je
jge
lea
jb
movsb
ljmp
jbe
mov
popa
jmp
xor
adc
add
push
push
rorl
xchg
add
outsb
or
mov
xor
pop
jle
shrb
sbb
test
push
out
and
pop
cmc
push
rclb
bound
addr16
lcall
mov
mov
fisttpl
push
in
pop
orl
arpl
xchg
ja
mov
jl
add
stos
adc
lds
repz
test
mov
lods
inc
jb
inc
fwait
test
mov
pop
test
mov
insl
dec
add
or
sub
pop
les
mov
and
and
nop
fdivs
shlb
sbb
mov
jno
or
mov
cmpsb
jb
dec
roll
movl
ss
mov
inc
mov
jge
adc
loopne
inc
xlat
dec
bound
imul
jle
stos
ja
pop
or
inc
inc
je
sbb
loop
sub
or
movaps
outsb
mov
adc
inc
and
pushf
push
xchg
call
int3
add
sub
add
jb
xchg
xchg
lods
fidivl
sarl
insb
fwait
sahf
ret
mov
js
cmc
sti
stc
mov
push
xchg
dec
fadds
xlat
inc
push
stc
enter
test
lea
mov
test
inc
mov
and
add
mov
cmp
cmp
mov
je
pop
mov
push
mov
lods
sbb
cmp
sbb
jmp
movsl
push
inc
insb
xchg
xlat
shr
out
pop
or
or
ret
or
mov
push
pusha
sub
je
pop
add
push
add
push
push
ficoml
shlb
pop
incb
insl
sub
loopne
mov
mov
ss
lods
out
insl
xor
push
sarb
mov
pop
std
lds
fcmovnu
ret
mov
insb
lea
ret
leave
mov
add
insl
imul
mov
rcll
push
adc
pop
inc
mov
bound
aad
xchg
mull
push
addl
inc
pop
jbe
cmc
cmp
cmpsl
pop
add
mov
mov
inc
inc
inc
pop
xor
jmp
or
inc
mov
shrl
xchg
add
add
fadds
cmp
add
mov
mov
xor
test
inc
jno
add
and
or
hlt
sub
cmp
dec
pop
pop
ret
or
adc
fiaddl
pop
push
fwait
push
push
cmc
add
mov
sub
xadd
rorl
push
test
outsl
iret
frstor
call
adc
out
arpl
sbbb
imul
jae
mov
or
fdivrl
outsl
addb
imul
stos
test
je
sub
dec
ficoml
or
pop
inc
fwait
call
mov
xor
mov
insb
je
and
mov
mov
std
add
in
cmpsb
inc
leave
push
or
mov
push
shlb
mov
cmp
js
js
sub
movsb
cmp
je,pn
idivb
jmp
ss
insb
insb
jge
jp
cwtl
enter
mov
cs
in
add
and
mov
xchg
or
inc
aad
call
push
add
jge
push
push
xchg
jmp
adc
dec
int3
xchg
push
inc
lret
fwait
shrb
sahf
add
pop
das
push
add
stos
jo
mov
imul
cmp
enter
jbe
sub
sub
sub
repz
pop
inc
insb
mov
cmpsb
test
or
shrl
outsb
movsb
pop
fisubl
in
pop
xor
add
frstor
out
or
fidivl
xchg
mov
inc
test
add
pop
divb
jbe
repnz
jno
aad
and
add
xor
into
add
fildl
int
js
sub
fisubrl
push
xor
or
lahf
xchg
mov
push
pop
cli
mov
mov
jns
adc
mov
sub
mov
pop
jmp
ficoml
fidivrl
pop
pop
mov
repnz
mov
lcall
in
mov
xor
sub
cmpsl
xor
lret
mov
insb
jns
adc
push
inc
pop
call
cltd
data16
or
pop
jg
gs
outsb
pop
pop
adc
sub
mov
ds
adc
lods
push
shrl
sahf
xchg
xchg
push
add
cmp
lcall
xchg
loope
shl
jge
xchg
push
push
bnd
sub
repnz
push
sbb
rol
or
mov
mov
fisttpl
das
ret
and
inc
dec
sbb
addr16
imul
testb
outsb
insb
sub
push
xor
push
aam
push
addr16
push
fsubrs
gs
call
add
jns
clc
xor
repnz
push
or
add
ss
idivb
adc
bound
cli
shrl
insl
roll
pop
mov
or
aam
sub
je
addb
pop
stos
out
sbb
mov
adc
mov
jno
sub
stos
sub
inc
stos
mov
ret
pop
push
shrb
xchg
mov
movsb
cmp
mov
cmpsb
and
ss
jne
ja
xor
mov
jecxz
push
fs
flds
mov
rcrb
movsb
push
in
and
xchg
mov
lcall
inc
testl
arpl
insl
fcmovnu
lret
push
pushf
add
mov
movsb
leave
xchg
es
pop
jae
popf
xchg
pop
push
aaa
push
sbb
ds
push
dec
and
jg
add
jae
pushf
lock
push
inc
mov
xchg
push
in
fdiv
repnz
mov
sub
xlat
xchg
movsb
dec
repnz
add
and
cmpsl
rorl
mov
and
xchg
std
cs
inc
mov
cmc
lods
insl
sub
push
lret
pop
pop
mov
push
rcll
dec
addl
rcll
mov
outsb
push
cmp
loopne
scas
popa
mov
cwtl
out
pop
pop
stos
fstp
ds
fistpll
pop
loope
ds
pop
pop
add
inc
or
dec
sbb
add
es
cmp
jge
inc
pop
fistpl
add
or
shrl
sub
inc
mov
popa
sub
subb
fistl
jbe
push
outsb
daa
pop
in
push
jl
mov
insb
mov
scas
add
mov
mov
enter
lods
cmp
loopne
andb
mov
into
inc
test
fcmovb
movsb
add
or
lea
mov
movb
arpl
fsubrl
outsb
movsl
xchg
sub
outsb
lea
adc
and
mov
mov
fsts
or
mov
xchg
adc
push
cmp
ficoml
mov
jae
mov
fwait
xorb
in
mov
or
cmp
mov
mov
loop
das
jle
popa
popa
imul
fs
cmc
mov
jbe
into
jnp
adc
pop
push
in
cltd
aam
jge
dec
xorb
mov
scas
mov
cmp
mov
in
rclb
and
or
test
mov
rcll
jmp
in
call
dec
inc
add
mov
enter
mov
in
lret
inc
mov
xchg
outsb
inc
pop
sti
mov
mov
xlat
jo
pop
inc
and
push
testl
push
mov
lods
in
test
shr
ret
xchg
outsb
xor
jmp
clc
mov
push
pop
cmp
jne
or
adc
push
sarb
inc
sbb
mov
out
fwait
jne
sbb
outsl
and
push
and
or
inc
insb
les
add
inc
or
inc
sbb
sbb
jno
dec
out
ljmp
nop
lods
sahf
cwtl
xchg
mov
cmp
cmp
xchg
xor
push
add
inc
cwtl
mov
xor
popf
arpl
add
add
insb
mov
inc
fistpl
in
int
mov
jp
pop
mov
pop
xor
or
xor
mov
ds
lds
and
add
sahf
adc
add
pop
imul
fidivs
jp
mov
mov
loopne
mov
inc
add
sbb
mov
insl
xorl
fs
sbbb
mov
xor
int
dec
cmpsl
insl
xor
jl
icebp
jl
sbbb
or
iret
or
xor
ficoms
fidivl
xchg
jbe
jecxz
jbe
sub
sub
aaa
out
mov
popa
es
jnp
or
adc
xchg
fsubs
mov
scas
sub
mov
push
add
xor
dec
lods
stos
push
pop
test
std
push
or
xchg
mov
sahf
mov
and
gs
outsb
jge
or
or
lods
or
sbb
and
adc
es
pusha
xor
mov
nop
lock
mov
jecxz
ficompl
movsb
scas
jecxz
inc
adc
pop
lret
test
xor
insl
inc
icebp
add
sub
push
push
dec
push
jo
or
jae
stos
movsb
fsubrl
mov
dec
cmpl
inc
cmp
enter
adc
push
shrb
mov
out
mov
mov
push
imul
push
jge
cmp
or
shlb
push
fwait
adc
push
arpl
int3
cmpl
fcomps
xchg
sub
or
int
repnz
mov
dec
cwtl
add
mov
cltd
pushf
fcompl
pop
fmuls
call
mov
jge
pop
and
mov
shll
sub
loopne
incb
adc
cmp
mov
push
fcoms
imul
rolb
or
rcrb
xchg
int3
rcl
push
mov
mov
push
sub
sub
lods
fisttps
mov
mov
jmp
sub
jo
fistl
add
mov
cmpsl
stos
pop
lock
push
xchg
lea
cmpsl
icebp
xor
ficoml
lret
mov
push
jnp
dec
and
sub
cs
in
mov
fildl
scas
adc
inc
fs
mov
ljmp
insb
insl
adc
jge
das
mov
sbb
in
lea
adc
push
pop
push
mov
or
mov
in
ss
dec
cwtl
into
and
das
sbb
insl
add
outsb
or
or
push
jo
mov
sbb
sbb
push
scas
dec
int
mov
imul
push
nop
and
xor
and
jmp
rclb
andl
addr16
sub
jmp
jmp
out
xor
ds
xor
stos
ficoml
test
test
es
dec
daa
or
pop
mov
adc
mov
xor
sahf
test
test
fmuls
pop
inc
mov
andb
pop
popf
loopne
sub
pop
push
mov
push
inc
fadds
jge
lret
push
sahf
sub
cmpsl
movsb
movsb
sbb
or
mov
mov
pop
fs
das
rorb
lcall
adc
test
adc
test
mov
out
inc
sub
mov
ficompl
jl
mov
adc
add
iret
mov
in
sub
shlb
pop
sbb
clc
or
jl
movsb
xchg
rolb
clc
out
jno
out
pop
cmpl
add
lea
xchg
movsl
test
pop
fsubrs
movsl
je
cli
add
mov
mov
movsl
xchg
adc
ficoml
mov
add
cs
jns
int3
jl
test
insl
and
and
xchg
inc
dec
insb
mov
mov
sbb
jbe
pop
jp
stc
jecxz
ret
js
add
sbb
mov
jmp
fiaddl
add
shlb
inc
shll
mov
stos
and
les
insl
subb
sub
or
sbb
jo
dec
push
cmp
xor
fcoml
fimull
cmp
sbb
insb
xchg
cld
pusha
or
filds
pusha
fmull
mov
out
ficoml
aam
sbb
lods
movsb
and
or
sub
fcoms
pop
add
adc
jbe
mov
fcoml
lcall
inc
cld
cs
pop
inc
stos
je
mov
push
test
repz
dec
sahf
outsb
ljmp
push
xor
mov
add
add
and
adc
push
outsb
xor
fwait
sub
dec
xchg
pushf
sahf
popl
lret
lea
xchg
inc
or
test
or
sbb
outsb
aam
pop
imul
push
mov
pop
enter
mov
mov
or
xor
cmp
or
int
cmp
stos
fadds
add
movsl
adc
mov
ljmp
and
sti
dec
outsb
pop
out
mov
mov
dec
loope
lods
pusha
mov
jmp
push
mov
fistps
into
xchg
les
lods
hlt
jae
push
pop
and
into
fs
jb
pusha
mov
leave
add
add
mov
pop
test
bound
push
into
sub
push
dec
daa
push
mov
cmpsb
out
jle
fiaddl
or
test
mov
mov
rcll
xchg
fwait
sahf
sbb
fnsave
lcall
or
in
mov
mov
dec
fistl
sub
lods
dec
or
adc
or
cmc
cmp
inc
mov
pop
js,pt
imul
mov
push
cmp
clc
inc
mov
jbe
shrl
shlb
pop
les
xchg
or
add
xchg
add
sub
lds
pushf
sub
adc
and
scas
imul
adc
arpl
inc
mov
sub
sbb
xchg
mov
xor
fcoml
mov
mov
mov
mov
call
push
mov
lcall
fistl
adc
dec
sub
mov
inc
dec
jns
jge
mov
jecxz
pop
cmp
jnp
call
jno
push
sub
push
lds
add
arpl
xchg
or
cmp
mov
sub
loopne
cmpl
and
mov
pop
xchg
adc
mov
inc
xor
popf
pop
shrb
mov
aaa
add
push
mov
das
rcl
js
inc
rclb
mov
lock
jns
sbb
push
mov
pop
jbe
es
repnz
jno
mov
stos
fldenv
aad
popa
andl
fnstenv
vcmpss
aam
fisubs
mov
hlt
cmp
fwait
test
shl
das
cmpsl
dec
in
pop
xor
hlt
ret
arpl
adc
shll
add
subb
bound
lods
mov
cmp
cmpsl
mov
jnp
pop
in
insl
adc
inc
mov
lea
call
and
and
or
movsb
scas
aad
lods
sub
dec
jns
cwtl
test
cmpsl
push
test
mov
outsb
inc
inc
je
insl
inc
inc
push
jg
mov
or
loopne
inc
sub
add
cmc
push
add
shrb
fstpl
xor
add
cs
push
jp
ret
roll
test
adc
cmc
mov
sub
sbb
pop
push
popf
adc
push
in
stos
cmpb
sbb
pusha
ja
iret
scas
lcall
scas
jmp
fidivrl
shrb
in
rorl
inc
fs
cmp
mov
aam
clc
int3
nop
add
add
push
fistpl
mov
cmp
dec
jo
pop
fsub
or
lods
sbb
js
add
or
mov
frstor
fmul
push
pop
iret
jo
mov
outsb
jg
shll
fistpll
mov
mov
movsl
cmpsb
xor
add
dec
arpl
inc
sbb
arpl
movsl
sahf
push
push
mov
test
pop
ljmp
add
mov
cld
mov
push
fiaddl
jl
sbb
jne
push
hlt
dec
loop
add
push
mov
shrb
std
dec
dec
ss
push
cli
mov
les
and
clc
dec
je
add
jmp
mov
scas
or
insl
jmp
push
in
fcmovnbe
mov
jns
inc
mov
mov
sub
nop
imul
std
push
push
jb
jl
xchg
pop
mov
int3
dec
add
cs
mov
andl
add
mov
xchg
fidivl
inc
dec
cwtl
pop
lods
cmp
mov
push
insl
aaa
pop
push
orb
mov
insl
shlb
xchg
push
movsl
mov
notl
pop
sub
inc
xlat
push
jo
mov
outsb
test
scas
pop
pop
jns
fidivl
add
mov
and
repz
adc
mov
stos
gs
cmp
repnz
mov
or
adcb
push
mov
fcoml
lea
jno
mov
adc
xchg
clc
add
insb
loopne
push
or
cmc
out
xchg
in
ss
andl
jg
mov
data16
in
shrl
repnz
pop
shll
add
movb
jl
inc
push
shll
xchg
fmul
int3
sbb
fucomi
inc
add
add
scas
add
inc
mov
and
jmp
dec
fcomi
add
xchg
sub
or
ret
fdivrs
jns
pop
pop
test
adc
popa
test
pop
inc
mov
adc
pop
popa
sbb
push
mov
mov
adc
pop
fdivs
jg
cld
pop
mov
sbb
adc
insl
dec
je
lea
out
add
cmp
and
and
sbb
inc
cld
inc
push
aad
dec
jae
test
pop
ss
fidivl
loop
daa
sub
jne
sbb
popf
or
add
sub
jne
jp
sbb
or
mov
das
cwtl
aaa
outsb
inc
push
out
add
aad
pop
dec
adcl
add
jecxz
scas
push
push
les
addr16
in
negb
sub
nop
adc
fcompl
sbb
sbb
pop
fisubrl
jg
inc
xor
orps
test
insl
dec
hlt
stc
fildll
and
adc
in
push
in
add
ja
rolb
imul
add
pop
in
pop
push
dec
push
cmp
dec
fisttpl
das
sub
adc
push
xor
pop
push
add
push
cmp
mov
add
ficoml
pop
pop
sub
ret
adc
push
mov
or
out
mov
mov
or
add
and
inc
sbb
imul
add
add
outsl
sbb
mov
fadds
adc
push
rorb
push
sbb
xor
and
push
adc
push
subl
in
lret
les
xor
icebp
test
stos
mov
sahf
cmpsl
notl
sbb
cwtl
xor
jo
pop
ljmp
sub
decb
aas
adc
adc
lods
sub
lods
add
call
xchg
nop
in
and
movsb
xor
cwtl
cmp
dec
xchg
inc
mov
mov
insl
cmp
adc
mov
inc
lods
mov
inc
loopne
jle
push
inc
popf
lock
jecxz
push
jne
in
testb
rcl
mov
arpl
ss
test
loopne
inc
push
outsb
xchg
test
cmp
mov
mov
inc
pop
mov
mov
dec
xchg
fisubrl
and
add
mov
nop
out
cmpl
cmp
adc
lods
mov
decb
inc
jno
xchg
pop
out
fildl
sbb
fwait
shl
sbb
push
fnstsw
inc
or
jg
in
mull
lret
xor
insl
or
xchg
sub
xor
ss
mov
dec
dec
add
mov
addl
lahf
mov
movsl
sub
das
es
inc
fisttpll
pop
stos
icebp
into
pop
push
push
stc
imul
cmpsb
xchg
sub
addb
mov
push
sbb
outsb
mov
and
sub
adc
inc
test
fildl
aam
mov
loopne
and
push
adcb
mov
fadds
mov
clc
add
aam
testb
sub
stc
mov
inc
xor
popf
mov
lods
fs
or
enter
cmpb
or
fsubr
jo
mov
xchg
push
push
shll
stos
or
sarl
push
sub
rorb
mov
push
stos
stos
mov
shr
jmp
adc
insl
inc
mov
adc
mov
lods
stos
sarl
mov
mov
cmpsb
call
repnz
fcomps
jbe
mov
ds
pop
lods
test
or
dec
inc
cwtl
inc
fsubrs
imul
sub
outsb
dec
jmp
dec
jmp
mov
ljmp
int
pop
dec
scas
or
sti
fisttpll
out
insl
insb
movsl
out
push
inc
fstpl
test
divl
stc
lahf
push
mov
scas
ss
les
ret
push
rorb
jnp
push
push
or
pusha
push
or
jne
mov
cmp
jge
pop
mov
mov
sub
add
vsubss
add
jle
jmp
and
pop
jl
push
loop
inc
pop
fwait
daa
ja
hlt
or
rorb
or
or
mov
test
push
insl
inc
out
fstl
stos
pop
sbb
jns
mov
add
inc
scas
insl
sarl
pop
jno
xor
fildl
pusha
mov
push
jbe
jne
mov
mov
inc
mov
call
in
divb
xchg
push
xor
jbe
pop
fdivs
sub
out
mov
mov
fiaddl
mov
bound
add
popf
jg
outsb
or
sarl
sbb
and
xor
jge
dec
out
pcmpeqd
mov
sub
pop
fisttps
ficoml
pop
and
gs
insl
test
aam
sbb
mov
gs
lods
scas
mov
inc
mov
mov
clc
je
data16
jp
push
mov
ror
sub
fisubl
mov
pop
sub
dec
or
fimull
add
add
bound
mov
adc
inc
add
add
jecxz
push
xor
mov
out
push
ljmp
out
aam
sub
mov
lcall
fsubrs
shrb
cs
mov
in
inc
dec
sub
or
imul
mov
or
lcall
or
mov
adc
sbbb
cmpl
lods
pop
cmp
fdivp
lods
out
addb
lods
pop
push
cltd
imul
outsb
je
mov
daa
out
inc
mov
test
pop
ss
and
movsl
push
mov
mov
jl
adc
cli
in
out
inc
fwait
or
or
adc
jbe
xchg
fdivrl
imulb
push
add
and
rolb
popf
test
cltd
arpl
push
or
or
es
ss
je
push
push
jge
ret
pop
pop
pop
vpsubw
lock
jle
ja
stos
es
mov
xchg
cs
xor
jle
movsb
lcall
dec
test
push
imul
dec
pop
jge
outsl
push
pop
mov
pop
insl
pop
pop
push
or
push
and
decl
add
int3
jle
add
jmp
cmpb
and
mov
aam
adcb
and
test
shrb
into
fstpt
sbb
repnz
xor
mov
push
fisubl
imul
mov
mov
fldcw
push
cmpsl
dec
outsb
bound
pop
sarb
push
mov
jl
imul
cwtl
loopne
inc
adc
cwtl
push
andb
mov
dec
mov
sub
pop
pop
sub
cwtl
in
enter
and
cmp
inc
test
aaa
mov
xchg
xchg
fnsave
insb
xor
mov
fdivrs
sub
addr16
data16
andb
push
mov
fldl
idivl
add
push
or
mov
xor
ret
fstps
pop
push
addr16
mov
into
test
mov
adc
mov
rolb
push
mov
push
xchg
or
shlb
repnz
pop
mov
mov
push
nop
mov
dec
sub
inc
pop
cltd
pop
sbb
pop
sbbb
rcll
xchg
mov
and
push
mov
xchg
mov
stc
cltd
loop
jne
inc
cs
jo
xor
push
mov
cmpsb
and
jl
and
mov
ljmp
push
push
insl
lcall
insb
dec
and
pop
fs
notl
mov
or
cmp
stos
pusha
popa
inc
dec
dec
adc
inc
xor
jo
xor
insl
and
outsb
xchg
xor
stos
stc
adc
fmuls
sbb
daa
pop
push
insb
and
lods
cs
shrb
mov
push
push
add
jbe
mov
mov
dec
rcrb
pusha
xchg
or
cmpsl
movsl
cmp
mov
add
dec
xor
push
pusha
mov
xor
and
cmp
into
pop
js
and
je
adc
inc
add
fimull
sbb
jne
cmp
pop
fdiv
inc
ss
sbb
cmc
js
jecxz
cld
pop
fcomp
fdivs
cmp
or
subb
adc
push
stc
mov
push
std
mov
pop
mov
jecxz
es
aaa
xchg
std
sub
xchg
fst
push
and
mov
adc
push
inc
mov
shl
push
mov
call
popa
xchg
xor
inc
push
lds
xor
mul
jb
je
fsubrl
adc
or
inc
in
or
xor
xor
std
adcl
xorb
mov
pop
pop
test
cmpb
dec
mov
fildl
rorb
fimuls
push
pop
loopne
mov
jo
inc
fsubrs
xor
mov
inc
imul
mov
push
jne
xor
inc
bound
or
mov
cs
pusha
popa
xchg
xor
jo
shlb
sub
pop
fidivrl
lahf
rclb
imull
insl
pop
pop
or
and
std
pushf
shrb
mov
jl
lret
sub
ss
aaa
js
js
jno
fistpl
imul
pop
cmp
jns
sub
scas
mov
cmp
pop
pop
add
in
xor
cs
fldcw
pop
and
fcmovnb
push
add
test
ss
or
or
xchg
cs
dec
cli
pop
addb
dec
inc
mov
xchg
icebp
xor
xchg
lods
pop
adc
pop
repz
or
lcall
push
sub
mov
stc
lods
pop
and
pop
loopne
aas
add
mov
pop
inc
fwait
sbb
gs
push
es
push
cmpb
mov
ret
ljmp
adc
jno
mov
sbb
add
in
loopne
bound
add
sbb
stos
in
ljmp
mov
jb
adc
push
dec
add
add
je
ret
es
ret
push
call
pushf
pop
mov
insl
xchg
inc
jl
cmpsl
sbb
mov
jo
sub
push
cld
rcrl
and
insl
rclb
gs
out
push
in
push
pop
mov
loopne
repnz
inc
mov
lret
cmp
inc
or
mov
xchg
sub
outsb
push
cs
decl
adc
fistpl
dec
mov
sub
mov
orb
nop
loop
jno
jae
pop
pop
mov
sahf
das
push
push
popf
imulb
adc
add
insl
fdivrl
rcr
pusha
test
xor
add
and
mov
mov
subb
or
test
scas
xchg
push
pop
shrb
rorb
or
add
or
test
push
cmp
and
or
repz
loopne
mov
add
jmp
lret
mov
push
cmp
mov
jno
popa
push
in
arpl
mov
loope
push
aad
into
pop
lods
inc
mov
sbb
sub
loopne
inc
pop
cmp
mov
xor
sub
insl
push
or
sbb
mov
shlb
icebp
fwait
mov
hlt
popf
test
subb
cmp
mov
fidivl
adc
add
or
test
mov
arpl
fldt
mov
sub
jnp
repnz
adc
dec
clc
ret
pop
push
sbb
shlb
lods
mov
ficoml
add
movsl
sub
inc
cmpps
mov
dec
test
or
and
mov
lods
scas
pop
mov
lds
push
sbbl
andl
fldcw
negl
in
xchg
test
or
mov
cld
push
jno
or
push
stos
sub
xchg
jne
push
insl
fistl
data16
mov
dec
mov
jmp
xor
mov
add
rclb
fwait
add
notb
dec
mov
lea
or
and
aaa
daa
inc
dec
mov
rclb
mov
in
movsb
sub
sahf
lods
andl
lock
pop
jno
xchg
fsubrs
les
push
ljmp
adc
outsb
pop
stos
mov
add
sbbb
scas
imul
addl
mov
in
and
push
jp
or
inc
sbb
push
adc
push
stos
push
fsubs
js
push
test
mov
and
xchg
sbb
aam
fcompl
outsb
sub
mov
loope
outsb
insl
pop
add
out
out
adc
mov
gs
fcomp
scas
or
sarb
xchg
sub
mov
jbe
mov
and
mov
ja
dec
leave
inc
outsb
lea
es
iret
push
cmc
inc
push
mov
xorb
movsl
sbb
movsl
test
or
out
mov
pop
mov
add
shl
sahf
dec
dec
adc
out
cmp
movsb
mov
mov
xchg
sub
mov
jecxz
insb
out
push
call
dec
icebp
cltd
inc
in
subb
scas
sub
scas
jns
inc
fldcw
jnp
xor
add
call
lret
inc
fstpt
sub
push
mov
jbe
fdivrl
xchg
bound
dec
inc
inc
mov
orb
cli
add
pop
ret
xor
mov
adc
jo
mov
or
pop
mov
dec
dec
cmp
loopne
cmp
mov
inc
inc
sub
cmpsl
add
adc
lret
jmp
std
mov
inc
orb
add
pop
repnz
add
add
inc
ds
mov
adc
lret
xchg
inc
cmp
rorl
iret
pop
je
adc
inc
xchg
setle
push
or
xor
sub
addb
mov
push
call
jno
inc
in
xorb
jp
fildl
in
add
xor
mov
inc
pop
jae
clc
cmpsb
or
inc
aam
add
pop
pop
sub
push
iret
adc
mov
aam
mov
fisttpl
adc
adc
cmp
stos
std
mov
pusha
pop
inc
test
mov
push
insb
xor
inc
inc
mov
inc
fstpt
xchg
shr
mov
add
mov
pop
in
int3
enter
cmp
call
pop
stos
das
repz
mov
imul
mov
aaa
sbbl
mov
fcmovnb
imul
ret
pop
mov
lret
insb
arpl
xor
cwtl
sahf
jl
push
mov
xchg
jne
adc
pusha
inc
push
mov
lret
pop
inc
xor
mov
hlt
aaa
adc
ja
cmp
mov
xor
mov
add
sahf
sub
pop
mov
mov
adcb
add
and
mov
or
insl
add
mov
jb
sub
lods
scas
subb
jmp
out
jmp
sbb
and
push
adc
sub
pop
inc
nop
fldcw
fdivs
pop
xchg
imul
aas
imul
aad
or
xchg
xchg
jo
push
adc
jmp
add
cmpsb
movsl
test
pop
push
fistpll
sbb
loop
imul
inc
mov
add
inc
fldt
and
xchg
and
mov
enter
mov
xchg
adc
sub
imul
mov
addb
xchg
enter
pop
shrb
out
cmpb
shl
aaa
cmp
jl
dec
fwait
mov
xor
insb
stos
daa
xor
and
loope
mov
and
and
iret
xchg
xlat
mov
pop
lods
fwait
push
cltd
scas
xchg
mov
pop
cmp
test
push
shrb
jmp
sbb
jbe
and
ret
adc
xchg
cli
xchg
cltd
or
mov
enter
mov
iret
cmc
fdivl
mov
stos
or
adc
stos
add
jle
mov
lret
clc
pushf
ficoml
orb
test
rclb
mov
mov
rcll
imul
lea
and
push
mov
dec
sahf
test
dec
in
ret
dec
stos
and
insl
dec
xlat
nop
push
mov
and
subl
push
mov
andb
in
add
jne
fcmovbe
mov
insl
mov
pop
push
and
dec
insl
mov
subb
lods
and
gs
adc
inc
fisttps
inc
bound
rorb
lahf
pop
add
sahf
cli
push
jno
shrl
mov
out
mov
add
shld
incb
ret
inc
adc
rcl
dec
mov
or
jmp
cmc
inc
add
inc
aam
movsl
inc
inc
test
call
mov
insl
pop
lret
cs
ja
pop
sbb
mov
int
inc
mov
push
jbe
add
cmp
mov
fstpl
pop
mov
push
jb
xchg
push
pminsw
mov
push
mov
add
insl
and
mov
outsl
arpl
sbb
dec
mov
adc
lret
mov
lods
insl
repz
xor
aam
dec
pop
out
push
insl
enter
and
popa
add
xchg
and
mov
push
repz
add
outsb
xor
imul
in
mov
lods
sbb
rolb
mov
xor
pop
repnz
ljmp
mov
fbld
call
ret
addr16
mov
stos
test
jl
clc
xor
mov
xor
sub
or
mov
fldl
inc
aad
mov
or
and
in
or
push
adc
pop
jge
pop
cmpsl
inc
mov
cmpb
sub
push
xchg
test
icebp
inc
add
push
pop
push
sti
testb
outsb
lds
movsl
loop
add
lcall
test
mov
aaa
fidivl
mov
push
push
jae
mov
fdivp
mov
shll
pop
inc
pop
adc
enter
div
insb
sbb
push
push
pop
roll
sub
inc
fptan
das
or
dec
fdivrl
add
mov
add
inc
sub
fisubrl
xchg
mov
or
ss
call
inc
add
dec
popf
push
stos
jbe
cmp
jecxz
and
adc
pop
push
adc
clc
shrl
je
mov
dec
lods
or
and
in
mov
xor
adc
jge
push
and
pop
shlb
mov
mov
call
or
mov
fimull
push
insb
sub
imul
jbe,pn
negb
ss
inc
roll
add
mov
fildl
call
imul
or
cs
js
jge
add
insb
nop
jbe
add
sub
sbb
adc
inc
or
les
mulb
push
test
in
mov
pop
out
mov
mov
sub
scas
xorb
ja
fdivrs
lcall
push
fcmovnb
push
fadd
push
add
and
lds
pop
add
xor
orb
jle
adc
popf
sub
cmp
outsb
or
loop
subl
imul
xchg
mov
lods
mov
cmpsl
rolb
pop
int
inc
shlb
dec
fldenv
inc
sub
add
out
in
sbb
ss
adc
and
xchg
cmp
ds
inc
mov
dec
cmp
adc
pop
lahf
dec
call
cmp
cwtl
jns
xor
lods
cmp
fidivs
out
sub
les
push
mov
sub
push
or
aaa
push
mov
push
jl
shlw
lds
orb
sbb
and
je
pop
frstor
lods
subl
mov
jno
mov
out
ljmp
adcl
jnp
adc
outsb
or
mov
mov
loopne
mov
mov
test
mov
addb
mov
mov
jle
insl
stos
and
in
push
sub
fildl
sbb
shlb
in
repz
inc
shlb
imul
pop
push
fbld
popl
pusha
jmp
imul
or
dec
jb
clc
rclb
mov
negb
add
mov
mov
xor
cld
pop
pushf
aaa
mov
mov
or
aaa
fmuls
xor
mov
inc
inc
push
xlat
xlat
dec
add
or
push
adc
inc
mov
icebp
cmpsb
fwait
int3
xchg
jecxz
insl
or
mov
roll
cmpsb
or
push
orl
inc
imul
insb
inc
in
jmp
fwait
cmp
bnd
decl
add
add
sub
mov
sbb
add
push
jg
and
test
or
dec
add
mov
ja
ficompl
fldt
xor
add
or
xchg
xchg
pop
gs
pop
mov
or
sti
mov
js
lea
outsb
insl
push
bound
mov
sbb
push
ret
add
xchg
call
aaa
fiaddl
dec
enter
jbe
lds
push
sub
or
cmp
lods
sub
and
outsb
jns
push
les
add
dec
data16
dec
sbb
roll
dec
ret
dec
mov
mov
inc
pop
movsb
fsubrl
mov
add
clc
inc
and
aas
cmp
mov
cmp
or
xchg
lret
cmp
fisubrl
and
loop
or
sbb
pop
mov
mov
xchg
cmpb
mov
push
cmp
and
popf
enter
sbb
add
bound
xor
adc
fmull
sub
icebp
lahf
js
aaa
mov
test
jecxz
sbb
push
push
add
sbb
xor
pop
rorb
rclb
cmc
pop
fsubrs
cmp
jno
push
or
sbb
mov
mov
mov
rcl
popf
stos
jbe
mov
movsl
mov
jmp
adc
mov
cmp
gs
cli
add
popf
lods
mov
bound
daa
inc
push
push
scas
lods
int3
test
sbb
and
pushf
pop
push
dec
jne
stos
ds
inc
cmp
jmp
fidivl
shl
cmp
inc
out
xchg
adc
mov
mov
insb
es
pop
mov
test
test
std
outsb
insb
repnz
push
mov
mov
add
xchg
fldt
lret
stos
mov
cs
in
fsubl
loopne
push
add
insb
adc
lcall
add
fwait
adc
sbb
mov
sbb
add
inc
or
and
test
jno
cmp
push
negb
add
lret
inc
incb
jbe
fdivs
je
insb
add
inc
xor
mov
pop
pop
inc
xchg
dec
movsb
push
add
ret
cmp
inc
adc
or
out
cmpsb
or
pop
xchg
into
push
andb
aam
je
jp
lcall
call
mov
jbe
in
adc
jle
jb
test
add
pop
insb
mov
sub
bound
inc
insb
sub
sbb
adc
inc
add
sub
imul
mov
cmp
mov
xor
popa
mov
sub
jp
mov
add
jnp
imul
inc
xor
test
sub
mov
sub
outsb
lea
lods
rclb
es
jge
adc
dec
dec
lahf
mov
sub
push
and
ljmp
jb
xlat
mov
mov
stc
sbb
andb
jno
add
ja
test
jne
loopne
push
pop
movsl
insb
and
addb
fiaddl
add
xchg
ficompl
lcall
and
push
fldcw
xor
mov
loope
arpl
fadds
outsb
mov
pusha
fistl
jp
add
adc
mov
push
std
cmp
sub
sub
push
sbb
lea
sub
insl
cwtl
or
roll
cmp
mov
sub
fcmovne
fcom
ficoml
lods
rcrl
push
stos
insl
and
add
jge
mov
sbb
mov
aam
cwtl
inc
mov
cld
mov
movsl
jge
dec
add
rolb
mov
adc
insl
mov
repz
push
inc
fimuls
push
add
pop
insb
fwait
pop
pop
shll
push
dec
or
push
sub
cs
cs
repz
je
pop
mov
lods
insl
xor
inc
shlb
imul
sbb
push
rcrb
cmp
mov
rcrb
cli
mov
dec
pop
lret
cwtl
jne
ret
mov
insl
lea
pop
push
ret
sbb
mov
mov
dec
push
jo
push
insb
pop
mov
notl
inc
mov
push
sub
mov
xchg
ss
adc
pushf
xor
dec
add
into
inc
push
fidivl
mov
xor
dec
sti
jnp
iret
bound
xchg
push
popf
sahf
push
ds
das
sub
inc
add
daa
add
cmp
or
loopne
adc
cld
es
add
lods
fistpll
je
lds
cmp
mov
pop
pop
mov
subl
pop
push
testl
mov
adc
mov
inc
sbb
sbb
mov
subb
add
shll
mov
sub
in
aaa
ret
jne
adc
lods
adc
mov
pusha
fcmovnu
movsb
jl
xorl
adc
gs
push
stc
shlb
dec
adc
mov
inc
rolb
dec
imul
enter
push
ljmp
xor
mov
mov
push
cmp
fimull
xor
cmp
ss
cmp
call
cmpsb
xor
cmpb
pop
mov
pop
mov
aad
mov
mov
in
rcl
ds
pop
sub
sbb
push
sbb
fldt
push
or
jge
das
outsb
je
les
leave
mov
in
xchg
in
stos
insb
loop
insl
pop
adc
js
sbb
icebp
ljmp
dec
pop
mov
popf
adc
xlat
es
mov
sub
aaa
and
pop
mov
inc
xchg
inc
xor
enter
pop
jb
mov
mov
mov
dec
inc
pop
imul
loop
in
pcmpeqd
xchg
lods
inc
insb
xor
sahf
sub
fstpt
stc
mov
fsubrs
dec
push
sbb
xor
hlt
inc
shr
push
popf
fstps
repnz
cli
pop
or
sbb
iret
scas
shlb
mov
fadds
and
mov
jmp
inc
popa
jne
aam
inc
or
ss
jo
cli
sbb
insl
mov
inc
jle
ret
inc
push
push
mov
mov
out
les
fadds
rcrb
fnstsw
xorb
mov
enter
mov
int3
xchg
fldl
dec
mov
mov
pop
fildl
sub
push
adc
push
enter
addl
stc
push
stos
out
cmp
insb
push
sub
mov
rcl
inc
inc
js
sub
imul
pop
inc
mulb
lahf
pop
inc
xchg
sbb
lahf
sbbl
movsl
adc
xchg
push
lret
sub
fdivs
outsb
andl
push
enter
mov
pop
or
xlat
fnsave
ss
pop
or
sub
pop
jge
lahf
sub
ds
lods
mov
ljmp
movsl
jmp
in
outsb
lahf
add
insl
andb
subb
mov
kmovw
mov
mov
jns
xlat
cld
aad
xor
bound
call
movsl
call
pop
mov
decl
movsl
iret
mov
mov
and
aaa
dec
adc
into
mov
mov
mov
loopne
pavgb
popf
pusha
push
mov
jp
xlat
lods
push
shrb
jmp
inc
mov
fisttpll
cmp
imulb
mov
jbe
pusha
int
mov
adc
sub
cmp
cwtl
jns
lods
imul
sbb
pop
mov
or
pop
push
pop
ds
test
aad
or
lret
sub
xchg
ljmp
aad
shrb
popf
sub
cmpsl
pop
mov
dec
dec
pop
ds
or
inc
sub
jo
or
shlb
cmp
add
shlb
andl
push
fistl
jge
repnz
sub
lea
dec
adc
fstpt
and
adc
outsb
sub
lahf
xchg
jmp
or
scas
dec
loopne
mov
das
out
cmp
or
stos
xchg
xchg
add
jge
jne
mov
xchg
je,pn
fsubrs
xor
mov
cmp
add
pop
inc
sbb
push
bound
dec
sub
lods
jns
int
in
ret
mov
inc
cmp
mov
aaa
push
outsl
cmpsb
stos
insl
pop
inc
xchg
data16
sub
push
jne
xchg
jns
pop
pop
add
mov
add
enter
mov
add
fmull
ja
cs
pop
fstl
adc
jl
fimull
add
jae
jo
lcall
pop
xor
rorb
xchg
or
mov
gs
ljmp
mov
sbb
or
rorl
sbb
push
in
add
or
inc
xor
pusha
insl
lahf
mov
mov
movsb
push
movsl
bound
push
add
cmpsl
or
test
jno
pop
add
or
add
out
jle
ret
sub
add
inc
jecxz
adc
fiaddl
loopne
adc
loopne
push
adc
sbb
cmp
xchg
xor
mov
or
lods
mov
jo
shrb
inc
movl
pushf
push
dec
ss
outsb
fucomi
repnz
and
jbe
shl
add
xchg
xchg
or
adc
or
mov
into
std
or
or
or
add
push
dec
je
mov
dec
mov
cmpsb
push
aaa
in
mov
sbb
sub
pop
mov
push
fwait
mov
les
gs
insb
rclb
cmp
ljmp
inc
or
mov
dec
inc
jo
mov
rcr
lcall
dec
and
in
mov
sbbb
or
cmp
add
and
xchg
mov
loopne
insl
jnp
in
inc
mov
mov
push
jbe
mov
sub
sub
into
jae
jecxz
lret
shlb
loopne
sbb
mov
mov
jmp
mov
xor
or
cmp
jno
adc
add
dec
push
fcoml
pop
lods
add
insl
sub
mov
sbb
fildl
push
cmpsl
testl
mov
stos
shl
arpl
pop
into
xor
sti
dec
pop
mov
push
data16
je
lock
leave
dec
pusha
inc
adc
push
sub
test
add
fwait
or
movsl
add
add
fcmovnbe
add
imul
test
fidivrl
ljmp
add
gs
inc
pop
fidivl
das
pop
dec
or
popa
movsb
pusha
cs
xor
add
call
lods
fsubrl
mov
add
xchg
aas
jbe
bound
mov
dec
in
jo
xor
mov
nop
inc
xor
push
inc
push
mov
lds
dec
push
cmp
jge
sahf
cltd
insl
stos
fistl
xchg
push
sbb
hlt
mov
and
cmp
sahf
sbb
and
in
imul
fmull
mov
jae
ss
fimuls
mov
jne
mov
inc
les
std
and
xor
ljmp
rol
mov
cmpb
fwait
push
fsts
insl
pop
push
in
xchg
ret
add
inc
mov
or
rcl
sahf
jb
or
ret
pop
sbb
ficoml
lea
push
fnstsw
sub
movsl
adc
sbb
out
pop
shll
mov
in
jno
mov
pop
repnz
into
mov
mov
dec
adc
test
sbb
ret
xorb
push
sbb
push
out
sbbl
mov
lret
inc
mov
sub
mov
sub
sub
insl
fnstsw
icebp
sbb
mov
inc
fdivl
test
insl
subl
sti
daa
and
mov
sahf
pusha
pop
in
mov
mov
icebp
shrb
clc
inc
ljmp
lods
mov
into
repz
nop
and
push
fwait
inc
mov
sub
mov
inc
jmp
xor
xchg
arpl
ljmp
push
in
or
fimull
outsl
add
cltd
mov
cmp
out
dec
fsubrp
fs
popa
adc
lret
add
sbb
das
ja
sti
jecxz
insl
xor
pop
cmp
rorb
scas
loopne
mov
lcall
insl
add
test
and
adc
xchg
sbb
push
mov
fisttpl
outsb
mov
push
inc
rorb
cmp
and
ljmp
push
add
push
fisttpl
sbb
add
loope
inc
aad
mov
mov
adc
out
fbld
mov
push
rcl
loopne
insb
fildl
rolb
out
shlb
dec
and
sub
aaa
push
repz
aam
arpl
imul
pop
rcll
movsl
dec
aas
jnp
or
add
imul
and
cs
push
out
bound
pop
mov
sbb
jp
adc
mov
xchg
imul
pop
jp
adc
insl
jno
and
push
das
ret
shl
cmp
mov
test
mov
je,pn
test
jno
sbbb
inc
nop
popa
dec
sub
inc
push
shlb
out
or
ss
pop
push
fnstsw
sahf
add
sub
leave
dec
call
and
sub
fsubrl
pop
pop
test
insb
test
inc
xor
es
addl
jbe
jno
stos
popf
jae
addr16
shrb
mov
bound
add
adc
or
add
pop
out
addr16
sbb
lahf
imul
mov
add
repnz
fisttpl
adc
jg
dec
push
insl
mov
push
sbb
mov
in
add
pop
sub
or
mov
or
adc
pop
sbb
xchg
scas
cmp
pop
xchg
enter
push
pop
jns
pop
fdivs
fdivs
push
orl
cmp
pusha
mov
shrb
pusha
add
pop
sub
mov
je
mov
movsl
push
xchg
lret
test
cs
insb
jbe
outsb
and
inc
pop
je
mov
rcl
inc
mov
shrb
cmp
cli
pop
mov
pop
push
je
push
xor
mov
add
mov
subb
xchg
jl
mov
outsl
dec
or
push
std
mov
pop
das
dec
movsl
pop
adc
xor
push
sub
mov
pop
push
add
jno
jnp
cmpsl
mov
and
xchg
cmpsb
mov
xchg
cmp
push
add
mov
mov
dec
cmp
jp
pop
mov
push
mov
loopne
push
rolb
and
fistps
mov
frstor
arpl
popa
negl
inc
ds
adc
pop
mov
add
pop
outsl
das
xor
sbb
push
push
mov
pop
scas
or
fcoms
sahf
jecxz
lds
sbbb
mov
test
inc
ljmp
imul
sbb
test
fwait
mov
and
lods
push
or
xchg
sbb
jae
gs
sub
cmp
push
popf
fcompl
mov
test
mov
loop
add
scas
ljmp
stos
or
mov
mov
adc
je
mov
mov
div
and
mov
adc
mov
les
mov
or
pop
mov
sbb
adc
insl
jne
aad
xchg
and
add
sub
xchg
xchg
insl
inc
cmp
pop
fsubrs
dec
inc
or
fsubrs
cmp
test
cmpl
sub
inc
and
sub
rcll
sub
mov
movsl
mov
adc
push
out
add
jo
not
add
lcall
adc
scas
sti
clc
data16
sbb
dec
jge
cmp
sbb
mov
movsl
lods
and
cmp
aam
add
mov
scas
mov
or
insb
in
mov
int3
ds
call
cs
pop
xchg
stc
imul
inc
push
shll
mov
push
fs
loopne
vmfunc
adc
and
and
test
gs
add
jge
mov
js
push
outsb
lods
mov
adc
jns
push
aam
adc
movsl
add
inc
ret
push
ljmp
ret
jne
mov
pop
push
sahf
adc
lret
inc
shrb
outsl
push
or
shrl
jbe
imul
pop
push
aam
daa
jno
or
or
jne
mov
or
xchg
cmpb
or
imul
outsb
dec
add
in
dec
sub
mov
push
mov
stos
addr16
xchg
outsb
test
xor
and
inc
adc
push
dec
cs
mov
mov
aad
inc
xor
inc
mov
bound
test
pop
popa
cwtl
mov
insl
outsb
xacquire
add
sbb
arpl
stos
add
push
or
lods
es
xchg
call
push
sbb
xchg
inc
pop
shrl
xchg
loop
mov
aas
in
in
dec
shlb
je
jmp
movsl
push
add
push
xchg
mov
test
xchg
pop
pop
cmp
pusha
push
add
xchg
lds
push
test
pop
jge
lea
push
fisttpl
mov
adc
and
sbb
movsb
xor
pop
push
orb
xor
or
push
inc
mov
jae
mov
add
sbb
movsl
stos
addr16
inc
mov
push
adc
dec
movsl
adc
in
shll
cmp
loop
mov
fldl
ss
mov
inc
fwait
sub
cmp
adc
insb
mov
xchg
push
aam
popa
unpckhps
dec
inc
sbb
or
mov
inc
inc
mov
imul
rcl
sub
xor
xlat
js
mov
mov
adc
fcoml
aaa
repz
xchg
sti
add
lods
inc
dec
inc
cmp
fisubrl
mov
iret
add
and
pusha
push
shrb
cmpsb
bound
push
jns
mov
adc
jb
push
mov
pop
ss
je
xchg
xor
or
es
sub
sbb
lods
inc
lret
or
sub
lods
cwtl
cmp
mov
xor
cmp
and
sbb
push
pop
add
ss
xorb
mov
pop
pop
jnp
adc
pop
fsubrs
mov
pop
or
shll
add
out
jp
cmpsb
mov
sub
aaa
and
test
mov
push
add
adc
xor
or
add
mov
add
pop
lods
fisubl
pop
mov
outsb
cltd
pop
sub
add
sbbb
enter
fisubl
inc
mull
adc
pop
fcoms
testl
push
or
je
adc
xlat
decb
fimull
add
inc
test
push
fcoml
pop
sbb
outsb
rolb
or
les
mov
xchg
and
mov
mov
add
jae
dec
lea
rorb
push
push
loope
fsubrp
mov
jmp
bound
mov
jbe
in
ret
lds
adc
sub
out
dec
mov
mov
push
or
addb
inc
add
int
bound
and
jmp
xlat
push
or
add
stos
mov
sbb
jbe
fnstsw
das
in
push
loop
vmovddup
mov
in
sti
lret
mov
inc
xlat
pop
push
mov
dec
inc
call
and
adc
stos
outsb
mov
lcall
adc
cltd
rol
test
sbb
stos
push
push
daa
lcall
loope
cmp
aad
popf
mov
push
push
xchg
stos
pop
sub
call
mov
loopne
ret
loopne
push
mov
sbbb
das
mov
mov
add
fisubl
fs
rcl
fiaddl
lods
add
in
pop
aad
dec
mov
repnz
pop
add
pop
into
icebp
and
mov
lea
cmc
fimull
sub
xchg
outsb
gs
pushf
sahf
jbe
les
cmp
clc
pusha
fucomi
jle
xchg
das
cli
or
inc
xor
movsl
sub
dec
push
adc
cmp
loop
mov
and
rcrb
jno
lods
lods
inc
mov
sbb
xor
push
and
mov
insl
cmc
inc
orb
aam
push
mov
xor
dec
lods
loope
scas
or
push
pop
fsub
xchg
and
inc
mov
push
mov
ret
out
adc
mov
mov
push
mov
sbb
mov
push
mov
mov
push
lahf
mov
mov
add
or
mov
movsl
mov
push
dec
push
inc
fstl
lret
pop
add
repnz
add
add
test
or
mov
and
pop
jmp
popa
sub
mov
and
jmp
cld
stos
pop
pop
push
aad
add
lods
pop
inc
add
in
push
mov
cmpsb
mov
sbb
pushf
lds
sub
faddl
outsb
mov
mov
mov
stos
and
sub
out
sti
call
mov
ret
pop
mov
test
stos
pop
outsl
cmpsb
jl
xor
cmp
loop
add
fidivl
rorl
insb
test
sub
xchg
inc
push
push
pop
cs
mov
inc
sbb
mov
enter
jg
out
mov
sbb
add
jns
fs
imul
es
pop
inc
sti
jae
insl
jmp
inc
int
loope
jo
pop
out
lods
fmuls
sbb
test
adc
pop
pop
pop
fs
add
mov
fwait
loopne
fcoms
sbb
cmpsb
adcb
mov
add
hlt
pop
daa
mov
in
jle
mov
adc
adc
adc
or
or
or
push
mov
sbb
sub
fiaddl
ficoms
push
ss
cwtl
cmc
and
dec
sbb
jbe
mov
sbbb
jg
andb
fdivr
mov
insb
fwait
add
jecxz
loopne
or
mov
inc
sub
loopne
out
add
sub
das
adc
inc
fldenv
xlat
mov
jmp
test
movsl
cld
mov
mov
mov
fisubrl
inc
mov
mov
fsubrs
insb
or
jo
xchg
inc
xchg
mov
cvtps2pd
outsb
or
mov
cmpsb
xchg
pop
push
pop
jl
jbe
add
dec
sahf
dec
cmpsl
test
adc
xchg
mov
fwait
and
mov
lea
cmp
add
push
leave
mov
mov
popa
mov
shrl
clc
pusha
add
andb
cld
inc
les
lods
jmp
insb
sub
adc
aam
insl
push
push
sub
fidivl
adcl
xchg
push
dec
incl
scas
xor
stc
push
lods
dec
and
add
or
push
adc
rcl
xchg
and
add
jns
push
out
or
test
xlat
mov
add
add
mov
neg
adc
cmp
sbb
push
jo
test
call
and
movsl
jae
test
add
adc
ret
mov
pop
or
xor
fstl
std
fdivl
xor
jnp
mov
les
add
fsubl
mov
loope
test
test
mov
rcrb
outsl
sub
xchg
inc
sbb
xchg
sar
push
and
lret
inc
xorb
cmpb
stos
fsubs
fnstsw
ss
insl
and
jmp
lcall
mov
add
jmp
enter
inc
cld
mov
jmp
push
push
xchg
pop
xor
inc
mov
mov
mov
pop
andb
inc
xor
adc
repnz
pop
push
loop
dec
mov
xchg
pop
lds
add
push
std
andb
mov
mov
cvtpi2pd
pop
mov
pop
stos
mov
lock
mov
or
enter
lods
pop
ljmp
aam
xchg
jbe
fmull
xchg
stos
lea
rcr
outsb
or
fisubrl
lods
cwtl
add
mov
push
bound
fwait
add
cmpsl
adc
mov
test
inc
stos
sub
sub
mov
ljmp
jge
or
loopne
pop
cmpb
insb
mov
ljmp
or
mov
pusha
aam
rcl
fiaddl
xlat
xor
in
or
sar
jno
sub
pusha
xlat
stos
popf
btr
and
xor
icebp
lret
arpl
mov
scas
push
clc
or
push
insb
and
and
cwtl
inc
enter
mov
pop
push
push
arpl
inc
cmp
inc
fildl
mov
pop
xor
pop
cmp
outsb
sbb
push
cmovno
xchg
pop
js
xchg
sbb
sahf
xchg
jns
xchg
pop
or
ds
sub
cmp
fidivl
and
scas
pushf
fs
jae
sbb
mov
mov
push
mov
das
inc
mov
test
add
dec
push
insl
or
insb
scas
inc
int
add
mov
fadds
mov
into
dec
xor
add
cs
xchg
outsb
out
test
mov
jmp
push
je
pop
jge
in
imul
stos
mov
aam
leave
mov
or
mov
mov
cmpsl
sub
mov
stos
jbe
inc
cli
or
test
cmc
imul
fistl
cwtl
adc
shrb
xor
cmp
ss
inc
repz
stos
jbe
test
fldl
pop
and
mov
mov
sarw
aad
push
pop
adc
sbb
das
ror
sub
lods
stos
push
cmpsb
xorl
dec
imul
mov
cmpsl
inc
sub
stos
add
sahf
outsl
adc
cmpsl
and
mov
test
rcrb
dec
push
cmp
and
rorb
loop
mov
rcll
aam
bound
xchg
cs
mov
pop
xlat
sub
mov
bound
adc
mov
rcl
roll
jg
int3
bound
sub
faddl
rcll
adc
xchg
outsb
push
add
testb
add
pop
push
iret
and
xor
mov
cmpsb
mov
jmp
fildl
add
mov
mov
adc
sarb
push
cmp
cwtl
mov
mov
lret
cmpsl
ds
mov
lret
das
or
mov
xchg
adc
fwait
mov
mov
dec
sub
fdivrs
mov
insb
mov
push
sbb
jne
cmp
xchg
mov
sub
mov
sahf
inc
xchg
in
in
fwait
sub
pop
ljmp
lods
or
xor
adc
pop
in
mov
insl
mov
mov
jmp
pop
add
shrl
das
sbb
push
pop
push
mov
mov
xchg
cld
adc
stc
mov
insl
inc
mov
and
cmp
fdivrs
mov
and
or
les
push
loope
insl
testl
mov
rcll
test
push
sub
add
mov
insl
sub
add
pop
inc
cld
push
dec
fnsave
xchg
js
sub
lods
add
mov
inc
fstpt
movsl
mov
xor
rcl
out
pop
dec
aas
roll
push
cmp
xor
or
repnz
dec
add
inc
xchg
mov
fsubrs
mov
loop
adc
cmp
aaa
jns
mov
jno
mov
mov
shrb
cli
push
fimuls
jl
ss
jno
rcr
fdivs
rorl
or
pop
fmuls
and
jmp
adc
adc
loop
mov
cmp
sbbb
push
or
jmp
cmp
xor
adc
int3
mov
push
sbb
rclb
add
pop
add
pop
add
xchg
data16
fldcw
or
push
cmc
or
das
sbb
add
pop
cmp
lret
gs
ret
je
cli
cmp
push
xchg
fs
adcb
fwait
pop
mov
fsubr
push
imul
push
mov
pusha
notl
rol
jecxz
mov
aad
xor
mov
pusha
mov
cmpsb
jo
mov
test
mov
clc
lds
cs
push
jno
mov
in
pop
pop
mov
xchg
test
jp
inc
fwait
stc
or
jge
jns
stos
push
les
xchg
or
repz
ret
ss
push
xchg
mov
pop
enter
lret
add
and
push
outsl
xchg
aad
aaa
aaa
ja
ds
mov
ljmp
sbb
xchg
es
aam
lods
stos
clc
mov
xchg
leave
cmp
lock
mov
aam
je
push
and
mov
aad
les
xchg
jno
jb
pushf
xchg
inc
rolb
cltd
pop
daa
in
mov
pop
xor
xchg
shlb
cmc
adc
arpl
loop
jno
jb
lods
inc
or
imul
fisttpl
fisubrl
add
mov
loop
into
repnz
enter
mov
push
push
mov
dec
std
cmpsl
in
adc
add
mov
push
inc
and
adc
add
adc
add
out
jl
jb
mov
adc
xchg
inc
sub
adcb
add
pop
pop
add
inc
jl
out
in
mov
and
pop
add
and
adc
push
lods
xor
subl
add
sbb
add
push
push
mov
mov
jno
adc
pusha
aam
fcmovnbe
imul
pop
sub
insb
pop
aam
inc
dec
lret
test
enter
pop
mov
fstpt
sbbb
scas
mov
imul
pop
xor
xor
dec
das
lcall
inc
test
jge
inc
fcmovnb
lds
pop
nop
jno
fsubrs
pusha
fcomps
jecxz
inc
pop
adc
sbb
jle
jmp
or
sarl
loopne
sbb
pop
push
mov
mov
mov
insl
sbb
test
repnz
subl
in
push
jne
imul
sti
sub
std
xor
divl
sbbb
sub
insl
mov
pop
ret
or
ss
fnsave
cmp
imul
insb
mull
add
ds
mov
ret
sti
inc
rcl
xor
test
mov
mov
ds
fistl
push
push
rcr
jg
mov
and
mov
imul
adc
xor
mov
sub
push
rcll
or
add
test
popf
pusha
subl
sub
rcl
lock
jg
dec
call
mov
fisubrl
insl
dec
imul
push
lods
pop
adc
mov
add
subb
je
mov
mov
pop
outsb
ja
push
les
popf
call
shrb
xor
push
or
dec
insl
sbb
adc
hlt
xor
cmp
ret
fcompl
xlat
mov
das
sbb
rclb
sbb
or
adc
xor
rolb
inc
test
pop
pop
pop
and
les
xchg
add
mov
lret
pop
flds
and
fstp
fidivrl
mov
inc
and
aam
pop
mov
lods
fstpl
sbb
ret
xchg
pop
sub
lahf
mov
cld
add
jbe
xchg
in
je
fcomp
mov
inc
sbb
push
push
pop
in
loopne
adc
jmp
fsub
pop
push
aad
mov
pop
stc
or
mov
arpl
xchg
mov
fcoms
fmul
lds
les
les
popf
pusha
out
ret
aad
fcoms
gs
dec
sbb
leave
sbb
push
add
mov
outsb
lods
popf
xchg
aaa
outsb
insl
insl
inc
addb
push
sub
mov
jmp
mov
jl
sbb
push
imul
push
mov
out
je
rcr
lea
push
sub
sub
test
fstl
mov
push
cli
or
adc
ror
out
mov
stos
movsb
jbe
mov
dec
add
pop
fdivrs
popf
repnz
hlt
or
aas
mov
and
pop
loopne
mov
jl
rcll
insl
imul
push
sub
xor
mov
sbb
sti
data16
fstpl
ljmp
pusha
out
in
stos
pusha
add
xor
or
add
sbb
jmp
xor
test
test
mull
add
mov
pop
dec
fdivs
ss
jne
inc
fwait
and
or
sub
xchg
pop
test
rol
ds
fstpl
negb
and
add
sbb
mov
inc
pop
inc
sbb
aas
insb
cmp
mov
add
mov
test
enter
pushf
sbbb
pop
xor
loop
mov
push
sbb
rclb
fucomp
mov
xchg
push
nop
mov
movsl
or
and
dec
repnz
leave
or
loopne
mov
ja
mov
insl
popa
jl
je
cmc
repnz
and
mov
push
push
or
push
pop
pop
rcr
push
jg
ja
imul
cmpsl
cs
inc
fucomp
sbb
xor
int3
inc
iret
push
dec
insl
jmp
mov
sarb
xor
fcmovnu
inc
negb
cmpsb
mov
outsb
ss
mov
push
pop
inc
dec
out
push
pop
les
mov
clc
aad
lret
push
hlt
sub
cmp
pop
mov
mov
or
frstor
sbb
jmp
arpl
fld1
insb
adc
sbb
adc
or
sub
lcall
dec
push
adc
adc
lods
and
push
push
xchg
pop
jp
push
or
pop
sbb
lcall
call
cmpsl
cltd
in
mov
push
and
dec
adc
sub
mov
jbe
jle
scas
mov
repnz
push
repnz
add
lods
sub
xor
pop
adc
jbe
push
and
dec
aaa
fisubrl
push
rorb
mov
inc
mov
adc
loop
push
dec
sub
sub
sub
adc
mov
test
inc
es
stos
sbb
je
ret
pushf
add
sbb
inc
fildl
sub
adc
lcall
mov
out
ss
mov
inc
push
and
push
aad
outsl
mov
cli
jmp
add
sarb
dec
lea
into
in
mov
dec
int3
test
sub
movsl
bound
sub
loopne
adc
stos
mov
dec
xchg
data16
out
pop
lock
and
fmuls
jg
sbb
fcoms
fwait
loope
xchg
clc
ret
repnz
shlb
mov
js
inc
jne
xor
dec
sbb
je
sub
pop
inc
test
mov
sbb
mov
imul
push
roll
mov
rcl
push
push
repz
or
or
mov
outsb
rorl
out
ja
inc
mov
orb
sbb
and
leave
add
pop
add
fidivl
sbb
fildl
inc
jmp
lea
movsl
cmpsb
test
dec
adc
push
jmp
dec
jno
push
pushf
push
xor
cmp
daa
mov
int
lods
jl
xchg
inc
jno
out
mov
fistl
les
and
inc
add
sub
fisubrl
add
and
jmp
xchg
adc
in
and
inc
jae
fimull
aam
jo
mov
push
mov
push
outsl
loop
fildl
mov
sub
mov
pop
and
add
leave
mov
xchg
lret
lret
push
jl
dec
inc
insl
sub
or
ret
movsl
sbb
rcr
insl
cmp
int3
lret
std
mov
sub
cmpsl
and
pop
test
push
jns
cmpsb
rolb
nop
clc
sti
sbb
mov
add
pop
test
inc
aad
mov
arpl
and
or
pop
pop
or
push
loopne
in
test
jae
mov
pop
fldt
das
test
adc
outsb
and
in
and
inc
sub
shrb
cmpsb
mov
or
fnstsw
cmc
in
or
in
sbb
pusha
fistpl
enter
mov
pop
push
fiadds
mov
or
inc
dec
int
mov
test
pop
jo
rcr
lcall
fwait
cmp
or
sub
push
push
or
fildl
mov
pop
cwtl
xlat
ret
dec
fnsave
stos
push
stos
fcoms
cli
jnp
xchg
rolb
popf
push
xchg
xor
insl
mov
add
cmp
andl
test
sbb
push
fadds
movsl
or
cmpsb
in
mov
or
add
push
mov
adc
rcrl
sub
dec
jp
and
adc
sbb
jne
mov
fsubs
or
jo
jbe
mov
ret
test
fadd
fadd
iret
pop
add
aam
pushf
in
je
movb
mov
jp
pop
inc
popa
arpl
imul
ficoml
roll
and
aas
pop
pop
push
or
gs
or
outsl
sub
in
popf
andl
dec
mov
mov
sbb
pop
sub
or
mov
push
mov
or
push
les
xor
test
cs
sbb
rcrl
scas
shrb
sub
adc
icebp
lds
outsb
pop
or
clc
arpl
lock
mov
cli
lds
fwait
stos
insl
add
mov
popf
pop
bound
mov
movsb
xchg
lret
stos
pop
mov
testb
popf
sub
pop
mov
add
outsb
imul
xor
inc
mov
lods
or
ret
inc
shrb
add
stos
push
jbe
dec
push
pop
mov
adc
aam
or
insl
popa
mov
add
insb
pop
adc
xor
pop
insl
imul
add
cmp
lock
push
rcrl
push
frstor
pop
insl
pusha
xor
mov
popa
jg
les
inc
shrb
or
pop
mov
and
insl
mov
sbb
ljmp
sub
lods
dec
sbb
rcrb
movsl
push
sahf
or
test
rclb
xchg
sarl
outsb
movsl
pop
mov
fcmovbe
dec
inc
fsubrs
sbb
sub
add
pop
add
insl
popa
sti
xchg
shrb
mov
push
sub
mov
mov
sub
iret
daa
mov
mov
pop
pop
fidivl
and
pop
xchg
repz
jbe
sub
xor
insl
popa
fistl
pop
sub
mov
push
mov
mov
test
inc
adc
testb
and
mov
mov
xchg
adc
sahf
fmuls
sbb
add
xor
clc
sbb
pop
xchg
sub
inc
adc
inc
rolb
push
add
sbb
callw
les
aam
inc
cmp
sub
mov
cld
mov
add
dec
adc
jns
mov
and
popa
adc
fwait
sub
pushf
ret
and
mov
pop
and
repnz
jo
push
arpl
push
test
jno
and
cmpsl
pushf
gs
jbe
or
loopne
outsb
cmp
mov
mov
lcall
sahf
aam
int3
sub
mov
pop
sub
push
add
test
or
mov
sbb
fnsave
pop
add
add
divb
push
addr16
mov
test
inc
insb
clc
jg
pop
aam
xor
jnp
sti
sbbl
les
xchg
mov
cld
push
enter
test
jmp
insl
sub
jno
xchg
mov
icebp
leave
dec
cmp
subb
mov
out
adc
fstp
cmp
mov
or
sub
mov
mov
jb
mov
popa
arpl
lahf
xchg
loop
jae
add
mov
ret
int
add
je
mov
xchg
push
push
lret
test
sub
mov
cli
lahf
xor
aad
in
or
sub
imul
lds
outsb
pop
push
adc
clc
jnp
adc
and
out
pop
inc
dec
inc
repnz
or
leave
loopne
insl
xor
icebp
mov
xor
ds
mov
adc
dec
lds
jge
or
popa
mov
outsb
or
push
fwait
jb
movsl
lods
fstl
dec
incb
dec
les
ljmp
mov
push
or
xchg
xor
inc
add
movsb
sti
mov
call
mov
scas
add
push
scas
in
inc
jno
xchg
ds
daa
mov
rcrl
mov
aam
jo
lock
mov
stos
pop
or
in
mov
jle
fimuls
mov
or
push
and
push
push
adc
imul
mov
test
add
insl
push
mov
dec
nop
push
mov
push
mov
clc
movsb
xlat
outsb
cmp
mov
pop
xchg
jo
loop
adc
or
push
mov
jbe
mulb
clc
lcall
rol
cmpsl
andb
or
sub
dec
shrb
mov
xor
mov
test
cmp
add
repz
stc
pop
ljmp
push
xchg
shl
cmp
sub
add
imul
mov
cwtl
lds
jnp
nop
cmc
int3
subl
xchg
fists
jne
mov
insl
mov
xchg
sub
shl
pop
mov
fwait
or
test
insl
cmp
cmc
mov
dec
into
cwtl
mov
testb
mov
mov
pop
mov
sub
sub
mov
sahf
outsl
mull
repnz
mov
push
aad
jge
xchg
inc
shrb
adc
outsl
sub
mov
adc
push
push
push
mov
jp
adc
mov
push
sub
mov
out
repnz
add
in
push
pusha
push
scas
inc
jbe
in
mov
mov
shll
bound
lea
pusha
push
xlat
xor
mov
lods
movsl
mov
pop
icebp
add
pop
call
mov
lahf
push
push
adc
mov
adc
sbb
in
and
aad
or
push
icebp
xchg
outsb
je
xor
mov
adc
loopne
and
xchg
fcompl
cmp
lcall
adc
sahf
fdivrs
add
pushf
add
inc
adc
outsb
stos
sbb
adc
adc
adc
adc
push
arpl
lods
jl
mov
mov
jb
and
xor
pop
ljmp
lods
xchg
imul
adc
dec
xor
lds
pop
es
ret
clc
das
les
adc
out
or
push
lods
and
mov
andl
xor
pop
fiaddl
lods
repz
jecxz
adc
adc
mov
cmp
mov
push
and
or
mov
mov
mov
or
arpl
inc
pop
jmp
mov
outsb
xchg
mov
push
stos
popaw
shll
add
shrb
fwait
xlat
dec
xor
movsb
ds
pop
inc
jno
xor
test
test
xor
push
repz
xor
subl
or
repz
adcb
adc
jl
sub
ja
fldcw
jbe
rcrb
fcmovnb
mov
dec
cmp
or
mov
iret
or
ficompl
fistl
imul
lret
mov
je
cli
pushf
mov
sub
mov
cmp
add
imul
test
ss
dec
in
adcb
sub
mov
je
enter
es
inc
add
adc
js
inc
roll
lds
pop
inc
in
rcrb
jno
stos
add
fcmovu
sbb
pop
in
cmpsb
xchg
push
jo
and
jo
mov
mov
sbb
enter
frstor
pop
adc
mov
mov
dec
cmpsl
rol
fidivl
cmpsl
loope
int3
lea
daa
push
inc
cmp
mov
mov
test
pop
add
sahf
aam
xorb
jg
dec
lock
lods
mov
xor
loopne
fdivs
lds
cli
mov
pop
xchg
outsl
hlt
push
fidivrl
and
iret
in
push
sbb
cmp
inc
fucomp
sub
inc
sbb
dec
pushf
sbb
mov
lret
xchg
push
imul
fstpt
loopne
mov
hlt
jmp
pop
push
jno
shlb
mov
scas
outsb
ds
jmp
inc
mov
xor
mov
mov
sub
cmp
mov
and
inc
arpl
sbb
xchg
test
adc
lods
lods
pop
leave
enter
je
fwait
sub
les
mov
cld
ljmp
jbe
inc
inc
and
cmc
or
movl
movsb
fcmovnbe
pop
fdivl
add
add
jae
das
les
lcall
cmpsb
bound
jge
sbb
mov
insl
sub
clc
movsb
lods
and
outsb
dec
repz
pop
stos
ss
lds
add
icebp
je
fldt
xchg
jne
cmp
xchg
inc
ret
jne
inc
arpl
fstpl
outsl
mov
xchg
fisubl
dec
mov
inc
jno
adcb
dec
xchg
xchg
push
and
mov
icebp
fisttpll
or
sub
iret
int3
jle
lods
in
sub
sahf
push
out
in
dec
repnz
repnz
dec
lds
lea
test
dec
mov
aas
mov
outsl
and
pop
sbb
xor
add
xchg
mov
or
jns
jo
xor
test
push
popa
fildl
pop
or
add
and
xchg
loopne
inc
inc
in
and
sbb
imul
pop
cmp
mov
rcll
insl
inc
mov
add
push
pop
adcl
pop
das
imul
clc
xchg
scas
leave
mov
fidivl
cwtl
lds
mov
cmpl
imul
mov
into
fwait
fwait
and
push
jno
out
inc
daa
mov
fiaddl
or
stos
jg
jo
mov
jge
xor
push
shlb
dec
mov
jae
mov
in
dec
jecxz
dec
inc
pop
fidivs
enter
es
inc
jno
push
pop
popf
lcall
cmp
fcmove
std
pop
jne
lds
push
jns
int
ss
shll
ret
ss
ja
xchg
cmp
mov
lods
xchg
jns
lods
orl
xchg
ss
lret
outsl
aad
adc
mov
push
fsubl
in
push
inc
mov
pop
outsl
inc
fisttpll
pusha
and
loop
pop
push
fwait
addr16
rolb
in
jp
leave
or
sti
sti
rcll
push
out
mov
or
fisubl
stos
fucomi
adc
adc
adc
mov
mov
dec
insb
mov
dec
in
ds
inc
in
mov
xchg
push
mov
mov
lcall
inc
push
imul
jl
jmp
push
into
popf
loopne
push
jge
xor
sub
call
push
sub
lock
scas
mov
inc
mov
sbb
or
insb
insb
adc
bound
daa
lret
lds
lds
adc
pop
insb
je
repnz
add
shrl
std
mov
push
pop
ss
or
sub
cmp
sbb
push
popa
pop
iret
call
pop
cltd
sbb
scas
stos
outsb
sub
clc
inc
mov
add
fildl
je
lret
outsb
mov
mov
in
lcall
mov
adc
and
insl
pop
fidivl
xor
push
push
jmp
and
mov
mov
test
push
fiadds
repz
pop
stc
mov
inc
mov
pop
and
rcll
stos
je
push
movups
pop
shl
out
ljmp
mov
sub
push
xor
loopne
mov
imul
cmpsl
add
pushf
fistl
fcmovnbe
push
mov
mov
sub
outsb
fwait
loope
cld
fcoms
imul
jp
test
shrl
add
and
sub
sub
mov
add
lods
dec
cmp
insl
cmp
jne
rorl
loope
dec
push
sub
pushf
push
es
insl
add
ja
cmpsl
sbb
jno
add
add
outsb
dec
das
jb
sti
int3
mov
xchg
out
enter
xchg
pop
orb
mov
xchg
andb
push
pop
mov
or
dec
add
push
sbb
test
add
lods
inc
rcr
add
pop
and
adc
mov
push
cs
packssdw
ret
jmp
cmp
shr
sbb
ret
stc
inc
push
stos
test
inc
fadds
jno
dec
stos
fwait
xchg
jp
std
sub
pop
mov
je,pn
jno
push
in
cmp
and
adc
pop
ficoml
movsb
aaa
add
adc
or
addl
push
add
inc
xchg
jmp
mov
cli
lcall
dec
dec
xor
loopne
add
movsl
insl
movsb
psraw
push
ficoms
outsb
movsl
add
call
xor
mov
jnp
adc
insl
into
xlat
cmp
or
addb
out
scas
aam
pusha
push
les
aam
pop
jno
shrb
cmpsb
cmpsl
push
call
sbb
cmp
pop
inc
insl
mov
sbb
inc
pop
adc
dec
sbb
push
pop
rcrb
stos
adc
mov
or
mov
and
mull
mov
push
mov
je
push
xchg
fldt
push
sbb
xlat
aas
addb
adc
ss
mov
mov
sar
adc
adc
mov
mov
mov
insl
jbe
push
insl
mov
mov
addr16
bound
sbb
sbb
fbld
mov
cmp
enter
sbb
popa
inc
movntq
inc
sbb
std
inc
adc
add
loope
je
imul
into
pop
mov
insb
or
and
mov
dec
test
ret
scas
push
sub
imul
mov
xchg
aas
shl
mov
rclb
push
mov
dec
sar
adc
mov
or
mov
imul
enter
lock
adc
pop
inc
mov
rorl
repnz
add
mov
sarb
fcmovu
sbb
stc
mov
ds
adc
fs
std
repnz
push
adcb
and
push
fwait
mov
fwait
lahf
addr16
mov
aas
mov
lret
scas
sub
push
mov
pop
aam
sbb
push
in
sbb
imul
inc
dec
or
ss
movsl
scas
xchg
adc
scas
mov
mov
shll
fildl
mov
jne
cmp
mov
cmpsb
adc
push
push
stc
inc
adc
adc
mov
sub
fwait
lods
cmpsl
inc
cs
xchg
mov
ret
scas
loop
xorl
xor
adc
jle
sub
inc
inc
ret
push
popf
sbb
fcmovnu
mov
jmp
sahf
popa
mov
push
je
test
out
into
daa
pop
inc
mov
fnstcw
cmpb
push
in
add
rorb
divl
pop
adc
cs
inc
and
jbe
je
or
popf
mov
inc
pop
mov
push
popa
aad
pushf
jbe
lret
push
fwait
adc
mov
jne
mov
mov
pop
neg
add
jne
outsb
push
sbb
popf
sub
clc
adc
push
sarb
movsl
or
xchg
jecxz
mov
aaa
pusha
hlt
add
lcall
xor
fiaddl
rclb
pop
mov
ss
hlt
cmp
or
push
push
cmp
aam
cmp
xlat
adc
repnz
add
pusha
mov
xchg
sub
stos
push
adc
sub
cmp
add
sbbb
sbb
sub
adcl
cmp
cs
sub
je
xlat
or
test
cs
ret
push
sbb
sub
ret
jecxz
insl
mov
mov
jmp
pop
dec
test
or
or
das
lock
mov
aas
fstpt
enter
and
insb
aaa
ss
xchg
fcmovne
shr
push
push
add
mov
pop
sbb
popa
or
adc
push
arpl
pop
push
xlat
ret
xchg
into
pop
mov
stc
stos
mov
lock
xorl
dec
cmp
repnz
mov
adc
pop
push
rcl
iret
clc
imul
or
push
or
leave
add
mov
fldl2e
or
clc
lock
lds
push
sbb
dec
fidivrl
adc
pop
ret
push
test
adc
jne
adc
repnz
test
pop
sbb
test
mov
or
lahf
subb
pop
mov
and
push
inc
sbb
data16
lods
or
xor
scas
mov
or
movsb
jl
or
pop
jmp
insl
pop
cmp
sbb
jne
lcall
add
out
fisubrs
in
mov
xchg
ja
push
sbb
lea
in
std
sbb
add
mov
add
lods
mov
xor
push
and
mov
sub
roll
adc
sub
xchg
mov
sbb
popf
fstpl
loope
push
lock
fldt
ljmp
fdivs
mov
enter
fcoms
or
mov
xor
inc
mov
out
mov
in
jmp
push
pop
push
cmpsb
test
adc
mov
shrb
cmp
mov
jp
in
adc
outsl
inc
inc
lds
or
and
jb
sub
push
lret
or
movsl
or
jle
cwtl
add
or
shl
fadd
rcll
lret
outsb
verr
push
dec
pop
mov
pop
bound
in
inc
cmp
cmpsl
outsb
test
out
push
fiadds
sub
xor
push
cmp
shrl
out
test
mov
dec
add
cwtl
mov
sbb
push
cwtl
out
sub
add
push
cmp
adc
add
push
ss
lds
stos
add
rcrb
cli
jle
mov
sbb
leave
pop
xchg
sbb
dec
push
insl
push
adc
push
or
aad
loopne
insb
and
fists
jne
sbb
fmuls
in
fildl
mov
into
pop
cmp
aam
aam
aam
cmp
push
je
mov
cmp
add
and
fisubl
cmc
in
ljmp
out
rcrl
xchg
jne
xor
ret
pop
maxps
loope
dec
push
test
dec
dec
pop
cmp
mov
add
fistps
fisubl
mov
hlt
mov
adc
lods
mov
sbb
fsubs
fsubrl
mov
out
mov
add
aas
mov
add
mov
mov
pop
add
mov
bound
mov
scas
ljmp
push
mov
shr
ret
pop
insl
sub
add
pop
and
stos
push
add
mov
in
test
inc
fstpt
shrl
rcll
push
xchg
or
shll
push
push
xor
es
outsl
push
inc
fildl
aad
add
add
push
leave
shrb
pop
inc
icebp
cs
pop
adc
daa
jg
inc
sub
push
add
aam
cltd
repz
je
xor
insl
mov
aaa
aam
insb
adc
fcmovnb
mov
jo
rcll
xchg
test
pop
mov
inc
sti
lds
pop
shll
sub
fwait
in
fisubs
cs
adc
and
aam
sub
and
add
push
scas
cwtl
mov
pop
sahf
inc
pop
mov
pop
jge
pushl
adc
ret
pusha
push
shrb
xlat
adc
daa
or
mov
or
insl
sbb
or
insl
add
xor
dec
stos
imul
mov
inc
lret
cmpsl
sub
inc
das
int3
repnz
dec
fnsave
xchg
adc
xchg
pop
repz
in
add
sub
pop
insl
sub
or
lods
repnz
and
xor
les
fsubl
mov
repnz
push
rcrl
pop
ds
push
jb
adc
add
mov
cmp
xor
shrb
add
mov
call
and
xor
xlat
cltd
push
out
inc
roll
sub
push
adc
ficompl
xchg
adc
mov
imul
pop
aad
push
loopne
pop
sbb
adc
test
ficoms
sbb
lods
mov
mov
pop
shrl
insl
cmp
or
jecxz
push
mov
push
or
or
dec
add
cmp
jne
jb
fcmovb
push
sarl
sti
lods
je
insl
add
movsl
pusha
sahf
outsb
insb
je
pop
fsubrp
testb
loopne
add
sbb
mov
xchg
pop
fildl
dec
and
xor
jl
mov
or
pop
dec
push
in
xorb
mov
jns
idivb
aam
hlt
pop
pop
pop
into
push
ret
push
sub
movl
xchg
push
add
scas
shll
stos
call
and
aam
insl
or
insl
jg
pop
push
mov
in
mov
movsl
xchg
aaa
popa
imul
xchg
mov
fadds
inc
and
push
mov
das
xchg
inc
in
dec
sub
push
mov
ja
js
fistl
mov
cld
fmuls
fstpt
sub
dec
sub
loopne
adc
insl
push
pop
pop
and
mov
xor
pop
inc
inc
cmpsl
push
addr16
mov
add
or
inc
inc
fs
data16
sbb
movsl
ret
fdiv
or
or
fadds
push
sarb
mov
pop
mov
aam
push
jne
adc
sbb
fnstenv
jl
push
in
stc
insb
mov
mov
imul
add
clc
les
xchg
cmp
inc
add
je
mov
mov
test
cmp
stos
dec
in
mov
movsb
jmp
sub
mov
and
mov
vmovdqu
mov
ja
paddb
mov
add
xchg
sub
mov
mov
loop
enter
push
xchg
sub
mov
mov
push
in
into
add
push
jne
inc
pop
lods
push
mov
jae
cs
jle
and
test
adc
mov
pop
movsb
push
sub
mov
adc
jecxz
sub
adc
sti
ss
idivb
mov
stos
sub
cmpsl
out
or
or
movsl
sub
mov
jge
in
sbb
mov
adc
add
jl
out
lods
add
out
cld
fwait
sub
or
repnz
sbb
push
pop
orb
fstpt
push
test
popa
dec
roll
xchg
popa
std
adc
fs
dec
in
add
and
enter
pop
mov
mov
enter
iret
scas
mov
dec
inc
jp
pop
loopne
fistl
rcrb
outsb
bound
inc
add
mov
cs
pop
xchg
das
sub
or
sub
test
push
fcoms
les
lcall
push
clc
dec
pop
or
jbe
loop
pop
xchg
data16
sub
mov
icebp
repnz
dec
hlt
lcall
pop
movsb
pusha
mov
push
sbbl
xor
or
outsb
add
nop
adc
subb
insl
xor
je
inc
into
mov
or
pusha
pop
sub
stos
adc
sub
push
sub
mov
adc
lods
loope
xchg
xlat
neg
adc
lea
adc
mov
fsubrs
jno
pusha
ja
inc
mov
push
cmp
cwtl
fcmovbe
mov
pop
mov
dec
stc
pop
push
pop
mov
ss
mov
cmpb
jne
sub
pop
xchg
push
enter
das
jl
outsb
dec
push
fistpll
mov
movsb
shrl
data16
frstor
stos
ret
pusha
sbb
sub
scas
out
xor
pop
pop
adc
jb
add
mov
insl
fsubs
and
pop
mov
and
or
mov
mov
adc
push
sahf
or
cmp
adc
cs
inc
sub
lahf
xchg
mov
cmp
push
fistl
int3
cmp
les
cmpsl
ss
push
test
pop
mov
add
mov
cli
cwtl
inc
cmc
sub
mov
sbb
pop
push
xor
and
jo
out
loop
jno
or
shrl
cltd
lcall
je
scas
mov
mov
add
leave
xchg
or
lods
fldl2t
push
stos
ljmp
rcrl
scas
jo
xchg
test
insl
lret
jl
shrb
add
mov
and
fnstsw
mov
das
push
and
adc
movsl
cli
rclb
insb
mov
test
rclb
mov
or
divl
rorl
and
jnp
inc
cmc
mov
aaa
and
inc
xor
rcll
pop
push
out
xchg
mov
xor
pop
ds
inc
push
sbb
loopne
mov
cld
dec
mov
push
mov
adc
pop
ret
loop
add
mov
or
out
repnz
mov
cmpsb
add
cmp
push
popa
addl
dec
mov
insl
in
mov
pop
jmp
pusha
inc
mov
mov
out
inc
fstpl
mov
push
mov
fsubrs
add
xor
pop
push
insb
mov
js
adc
lea
and
push
cmp
inc
inc
jp
lods
lods
inc
mov
fcoml
cmp
test
mov
push
sahf
fildl
outsb
mov
mov
jl
mov
pop
push
add
mov
sub
xor
iret
mov
int
inc
fcoml
decl
mov
lea
ret
js
test
imulb
mov
mov
mov
inc
jno
mov
shrb
fs
or
mov
add
int3
ret
mov
int
pushf
adc
add
fstpl
in
hlt
lea
jecxz
push
lds
xorl
sbb
mov
jbe
es
mov
or
push
fwait
xorb
push
insl
fmuls
cmp
int3
sbb
push
insl
ret
mov
outsb
cmp
int
aam
subb
stc
add
push
test
xchg
insl
orl
in
adc
pop
je
les
mov
sbb
or
fistl
int3
xchg
dec
mov
cli
rolb
sbb
int
mov
ss
ss
push
mov
jns
cmp
addr16
mov
cs
dec
or
fwait
pop
sub
dec
mov
or
insb
shl
loope
add
xor
nop
mov
add
mov
jge
call
mov
jmp
lock
add
or
mov
push
push
lock
mov
jbe
and
or
insl
inc
sub
adc
inc
out
mov
push
mov
movb
adc
inc
lds
orb
jmp
pop
fdivrs
push
inc
sbb
mov
sbb
pop
pushf
stos
and
mov
jb
push
push
mov
jns
inc
jbe
popa
fistpl
test
adc
add
jp
pusha
inc
sub
add
jno
push
mov
jecxz
out
cmp
daa
js
mov
lods
or
mov
shll
jbe
insl
pop
jge
cld
enter
aaa
pop
cmp
dec
fwait
pop
push
insb
and
jg
dec
cmp
push
shlb
inc
xchg
dec
add
sub
leave
loopne
pop
push
in
mov
push
or
pop
add
popa
pop
sub
jbe
push
cltd
imul
outsb
sbb
jns
cmc
add
mov
mov
sub
push
in
stos
jne
fistl
js
hlt
dec
test
xor
repnz
repz
add
and
mov
andb
shll
inc
mov
test
inc
fistl
sub
je
sub
push
mov
xchg
or
orb
loop
mov
stc
add
jbe
in
or
subb
cmp
and
jle
sub
shrb
xchg
add
lret
gs
jne
ficoml
je
fisttpl
loope
xor
push
xor
mov
xor
stc
fidivrl
out
movsl
mov
int3
inc
in
mov
lds
add
jns
rcrb
aaa
mov
sbb
je
mov
sti
jecxz
mov
lcall
lcall
or
mov
icebp
cmp
jnp
adc
in
push
jge
sbb
and
aaa
xorb
roll
xchg
fistps
push
out
test
push
sub
or
lods
call
popf
or
insl
or
mov
in
xchg
jbe
imul
ret
mov
movsl
or
shrl
mov
call
inc
cmp
cmpsl
pusha
mov
stos
xor
xor
out
cmp
into
pop
jno
ret
xchg
cs
insb
add
nop
or
sbb
outsb
add
adc
sub
pop
clc
or
jbe
or
ss
jl
cmpsb
stos
pop
aam
daa
inc
sahf
cs
xor
ljmp
adc
adc
cmp
mov
idivl
adc
lods
jne
bound
jecxz
loope
add
jbe
dec
mov
push
push
mov
xchg
lcall
test
test
add
pop
sbb
mov
adc
mov
cmp
mov
sub
lods
mov
add
data16
call
mov
mov
sub
push
sub
mov
inc
pop
fiaddl
pop
pop
popa
in
and
fldt
push
mov
cltd
in
and
add
push
pop
stc
mov
test
mov
jbe
aam
mov
ja
mov
add
cwtl
mov
test
mov
out
pusha
adc
or
or
mov
pop
sub
or
addb
dec
fstl
mov
mov
pop
ja
add
and
inc
inc
or
dec
jg
or
cltd
pop
inc
shlb
pop
push
pop
sub
clc
mov
push
mov
out
pop
mov
dec
inc
cli
and
fildl
inc
pop
testl
xchg
mov
push
xchg
jne
jle
adc
cmp
arpl
leave
adc
push
clc
dec
inc
in
sbb
jno
and
inc
loop
lds
aam
std
fiaddl
lods
mov
dec
mov
and
cmp
cs
outsl
test
iret
les
pop
dec
imul
pop
pop
sbb
mov
dec
pop
xor
or
je
push
cmp
jb
add
mov
repnz
lds
jg
mov
sbb
insl
sub
int
ja
adc
mov
adc
push
outsb
push
outsb
push
mov
ret
lea
or
cmpsb
sti
mov
orb
cmpsb
loop
cmp
push
jae
dec
xchg
pusha
imul
movsb
pop
iret
lret
test
xchg
and
jmp
movsl
in
push
xchg
adcl
mov
xlat
adc
shrb
fwait
and
push
insb
fwait
mov
xchg
imul
inc
jmp
pop
lea
jno
add
insl
cmp
adc
gs
xchg
fidivl
cmp
mov
popf
lret
pop
inc
adc
add
mov
into
call
push
insb
adc
jl
jbe
roll
or
mov
sub
xchg
pop
pop
push
clc
mov
loopne
add
adc
add
jno
jmp
rolb
cmp
pop
iret
and
fcmovne
mov
shlb
sbb
cmp
gs
inc
add
stos
push
addr16
cs
adc
pop
add
test
mov
or
call
sub
insl
jecxz
lds
mov
les
jmp
mov
add
xchg
rolb
mov
aaa
sub
mov
xchg
dec
push
fldt
stos
rcrl
mov
je
pop
jb,pn
jo
mov
push
sahf
xor
bound
outsb
sbb
je
shll
xchg
sbbb
add
fsts
popa
pop
pop
xchg
out
pusha
push
lret
lcall
lret
fsubrs
ss
icebp
xor
dec
bound
fistl
daa
scas
je
cmp
push
insb
or
add
addl
or
lret
jl
mov
sbb
mov
outsl
pushf
cmc
fcom
xchg
adc
movb
adc
cld
inc
pop
push
sub
cmpsl
mov
xchg
inc
xlat
call
push
subb
jmp
aad
bound
jb
inc
inc
push
mov
jne
rclb
pop
add
jbe
or
jge
inc
sbb
inc
test
out
fildl
pop
call
sti
xchg
mov
pop
fdivrs
jmp
lods
push
mov
cmp
aas
lret
pusha
fildl
lds
jle
xor
inc
fsubl
mov
add
imul
sbb
or
mov
pop
sbb
call
repnz
lfs
cmp
les
dec
out
scas
call
fiadds
sub
push
fistl
adc
outsb
test
push
xchg
mov
and
cmpb
sub
add
aam
pop
insb
lods
mov
cwtl
inc
inc
xchg
dec
mov
outsb
dec
push
divps
mov
mov
add
mov
outsb
push
mov
cmp
imul
insb
je
inc
or
pop
popa
mov
xor
add
test
add
mov
jg
and
mov
push
jg
xor
data16
push
jo
sub
das
mov
adc
jmp
fildl
jne
mov
shlb
sbb
fcoms
ret
sbb
and
imul
mov
mov
ret
xor
fistpll
mov
sbb
mov
dec
push
out
pushf
dec
push
xor
rcll
mov
insl
insl
dec
push
andb
repnz
test
xchg
mov
js
dec
jecxz
je
pop
pop
push
insb
lock
mov
jmp
push
jle
adc
add
pop
sti
mov
or
je
push
nop
mov
cli
xchg
add
mov
aam
inc
or
add
sub
cltd
daa
or
push
fcmovnbe
aaa
add
loop
pop
add
mov
mov
test
cmp
addl
stos
and
ret
dec
xchg
xchg
mov
jg
sub
inc
rcr
loope
dec
es
pop
push
inc
push
mov
mov
cmp
movsl
mov
lret
je
mov
mov
mov
sbb
pop
push
sbb
push
ljmp
push
lret
js
lods
sub
lahf
jb
sbb
psubb
adc
cmp
aas
inc
mov
cs
and
jp
xor
pop
cli
insl
stos
dec
or
popl
jp
pop
lods
push
mov
imul
stos
test
jbe
sub
cmp
out
stos
popf
out
fistl
lahf
rorl
icebp
mov
rorb
fucomp
aad
mov
adc
jno
mov
js
add
std
and
add
addb
mov
inc
leave
dec
push
ds
add
imul
pusha
in
add
icebp
inc
push
insb
andb
ret
lds
pop
sti
arpl
das
mov
dec
sub
es
sub
add
jp
pop
in
add
loopne
filds
in
mov
out
mov
and
add
sbb
push
jg
mov
sub
sbb
movsb
outsb
subb
inc
jno
andb
test
cmp
mov
xor
fisubrs
test
outsb
test
xor
loop
sub
xchg
movsl
test
loop
lret
pusha
pop
add
repz
mov
mov
xchg
pop
mov
adc
jmp
jbe
sub
jl
mov
jecxz
jecxz
sub
lods
jl
add
imul
and
sbb
pop
mov
mov
mov
add
mov
mov
ficompl
xchg
mov
movsb
sub
inc
adc
pop
jge
and
sub
xchg
pop
lods
pop
mov
loopne
cmp
lods
xchg
xchg
outsb
pop
lods
call
adc
jae
sbb
pusha
insb
inc
mov
and
ljmp
loope
xchg
mov
jb
or
idivl
pop
pop
sub
insl
pop
lret
pop
imul
outsl
data16
loop
mov
pushf
jl
and
sbb
adc
out
jno
sub
cmp
sbb
mov
test
test
jne
divb
loope
jg
mov
fmuls
cld
cld
mov
shlb
adc
mov
in
jo
mov
jmp
sub
mov
inc
dec
add
mov
pop
push
enter
mov
lahf
mov
inc
stos
mov
inc
rclb
or
mov
mov
mov
inc
adc
mov
mov
sub
insl
inc
rolb
adc
imul
insb
icebp
ret
repnz
lret
aaa
cmp
outsl
add
out
inc
mov
mov
mov
outsb
fmull
mov
add
sbb
out
jle
aad
and
mov
dec
faddl
std
std
sub
fistl
addr16
leave
int3
jnp
mov
mov
push
lcall
xchg
daa
lcall
inc
sub
or
mov
loop
test
mov
xchg
je
mov
lods
insl
in
push
sbb
jg
inc
sub
adc
aaa
mov
jmp
lods
xchg
xchg
sbb
insl
pop
sub
cmpsl
sub
and
pop
dec
out
pushf
add
lea
sub
sbb
cmp
jno
stos
and
nop
gs
sbb
sub
pop
mov
push
mov
xor
add
popa
adc
or
test
mul
outsb
or
fisttpl
sub
jp
pop
jno
mov
rorb
gs
mov
adc
test
xor
sbb
das
cmc
mov
filds
fisubl
push
sub
mov
push
leave
push
jle
orb
inc
js
call
push
imul
inc
inc
xchg
fs
cs
inc
mov
pop
in
hlt
fcmovnb
mov
insb
add
movl
cmpsb
scas
push
sbbl
fiaddl
dec
fstl
or
pop
xor
jle
push
jns
cmp
scas
push
addr16
sub
movsb
pop
mov
add
icebp
mov
cmp
fdivrs
in
push
mov
test
fistl
push
stos
push
and
dec
mov
jae
aaa
call
iret
insl
sbb
rcll
pusha
pop
jo
or
std
pop
xor
cmp
js
ret
push
add
mov
inc
mov
sbb
mov
inc
inc
add
hlt
or
shlb
sbb
xor
fadds
add
fwait
adc
and
mov
bound
adc
int3
add
inc
add
mov
test
pusha
fsts
cmp
push
mov
adc
test
aad
loopne
pop
or
sub
insb
mov
add
fwait
mov
sbb
jne
aam
inc
mov
or
push
pop
sub
cli
jle
fistpl
insl
add
pop
add
mov
popa
loop
xor
insl
lret
test
lds
insl
sub
pop
arpl
mov
push
rol
stos
imul
repz
in
in
sbb
dec
fnstcw
adc
movsl
sbb
and
push
mov
add
shll
sbbl
pop
in
push
imul
cs
mov
jge
and
pop
js
fstpl
lret
pop
jae
push
mov
mov
adc
jg
clc
repnz
test
push
stos
insl
inc
mov
sbb
add
hlt
push
inc
mov
insl
dec
add
fnsave
add
or
or
sub
mov
mov
mov
mov
inc
es
jge
pusha
add
insb
jo
std
ja
push
arpl
ljmp
lods
push
lods
insl
loope
or
ret
pop
mov
call
test
push
pop
mov
xchg
insb
dec
add
loope
or
icebp
cmpsl
adc
ljmp
je
cmp
outsb
cmp
cmpb
cmp
nop
push
jns
add
in
cs
jae
and
add
add
pushf
sbb
out
push
mov
bound
adc
mov
divb
sti
pop
in
xor
xor
add
aas
arpl
inc
pop
fistpl
or
push
inc
aaa
xchg
xchg
jne
mov
fdivs
sbb
clc
imul
xchg
in
mov
fiaddl
mov
fsubrl
popf
mov
scas
or
shll
and
fwait
mov
fs
mov
add
sub
xor
imul
mov
insl
xchg
es
xor
cltd
mov
adc
mov
inc
and
mov
mov
mov
mov
push
orb
jmp
inc
mov
mov
and
icebp
add
mov
push
sbb
aas
sbb
les
shll
sbb
aam
inc
adc
adc
es
test
lods
and
imul
aam
add
inc
aam
icebp
add
mov
mov
lcall
sbb
pushf
mov
mov
repnz
or
shrb
shll
jp
push
add
lods
add
cmp
pop
cltd
cmp
mov
mov
cmp
add
fcmovu
test
inc
xchg
adc
lods
test
es
insl
insl
xor
loop
mov
jbe
subl
clc
cwtl
popa
push
add
in
inc
aam
lods
sub
mov
repz
inc
push
fdivl
jecxz
push
ret
ljmp
mov
in
out
enter
mov
fcoms
push
lret
and
out
fstp
xchg
sub
in
add
ss
mov
test
mov
ss
jo
pop
mov
mov
or
mov
cmp
pop
mov
int3
cmp
xchg
or
ret
andb
popa
sub
dec
pop
stos
push
stc
and
icebp
mov
test
pop
xchg
mov
sbb
pop
push
jns
call
les
sub
xlat
je
add
ficoml
das
or
mov
mov
ret
int3
mov
mov
pop
jbe
mov
aas
ficompl
pop
add
xchg
xchg
je
mov
mov
inc
rcrb
adc
dec
in
xchg
fistpl
mov
lds
in
mov
inc
mov
inc
sbb
insl
lods
push
mov
sbb
pop
stos
xchg
jb
insl
jmp
inc
lds
pop
mov
jp
cmp
dec
adc
xchg
and
ljmp
mov
push
inc
jno
or
push
pop
fadds
fsubrl
push
pop
aad
and
mov
aaa
adc
sbb
mov
push
test
aam
inc
loopne
arpl
and
jle
jge
adc
jo
jb
fidivl
addb
or
cmpsb
and
fs
loop
fistl
mov
decb
fidivrs
cmpsb
adc
pop
jnp
lahf
cmp
shrb
mov
icebp
insl
dec
fwait
mov
repnz
fwait
and
imul
cmp
inc
sub
adc
pop
test
insl
imul
add
ja
mov
xchg
movsb
jbe
imul
out
test
fxch
xchg
pop
jnp
roll
add
addb
mov
mov
jmp
and
jbe
and
aad
pusha
push
aam
test
xchg
js
xor
push
sbb
push
ret
cmp
push
fimull
inc
xchg
addl
ss
inc
fildl
sbb
sti
adc
or
mov
leave
xor
add
adc
ljmp
pop
pop
fcmove
push
mov
in
call
sbb
sbb
addr16
popa
adc
jecxz
loopne
jo
clc
lds
mov
insl
mov
int3
ror
xor
mov
adc
into
lea
das
mov
or
pop
movb
adc
ja
subl
add
stos
pop
arpl
fldt
test
mov
push
sbb
pop
ja
fimuls
mov
cli
fstp
add
adc
add
cmp
sbb
push
outsl
dec
rcrb
outsl
pop
ficoml
and
add
mov
jno
sub
pusha
subb
push
fsubrl
push
push
or
mov
out
sbb
xchg
inc
je
mov
mov
fidivl
jp
shr
movsl
mov
mov
lods
inc
mov
pop
fsts
xchg
insl
insl
inc
aad
mov
push
mov
xchg
jae
cmp
add
mov
jg
xchg
xchg
xlat
ljmp
add
cmc
mov
pushf
sub
sub
pop
add
and
lods
and
xlat
add
mov
test
mov
xchg
les
push
adc
mov
sahf
hlt
enter
test
xor
add
ss
cli
aaa
or
fs
inc
pop
shrl
mov
jae
inc
sub
cmc
push
ret
add
mov
rcrl
test
sbb
lods
mov
pop
mov
fdivs
pop
shlb
adc
mov
loop
test
sbb
add
jecxz
pop
xor
rcll
mov
in
or
xor
sub
aam
iret
aad
jne,pn
loop
cmp
in
mov
int3
mov
call
ja
scas
adc
pop
pop
mov
push
inc
je
xor
sbb
cmp
js
or
gs
or
loope
bound
stos
or
sbb
mov
inc
xchg
lds
repz
jecxz
cmpsl
daa
xlat
lret
stc
cmc
push
aam
cmpsl
sub
scas
out
bound
test
mov
dec
jne
fwait
add
bswap
pop
cs
adc
jae
dec
cli
scas
jmp
je
and
mov
and
ss
jbe
clc
xchg
add
imul
lock
fnstsw
test
pusha
scas
mov
mov
lret
js
inc
add
lods
pop
xor
sbb
sbb
sub
inc
mov
arpl
arpl
jo
clc
cld
lret
push
push
jne
cltd
sub
cmpsl
dec
adc
add
xor
call
enter
lea
int
mov
scas
or
rcll
arpl
add
jne
pusha
xchg
and
xchg
sbb
xchg
stos
mov
or
in
lret
lods
mov
outsl
push
mov
mov
add
pop
into
jne
shrb
je
pop
pop
cld
lret
inc
das
pop
lcall
fwait
sub
insl
loope
pop
cmc
popa
cmp
mov
mov
fidivl
lret
fwait
js
stos
loop
stc
jp
add
ljmp
fwait
jo
push
sub
loop
dec
inc
inc
sbb
in
sub
jno
dec
scas
add
mov
xorb
pop
jle
jne
je
inc
push
daa
mov
aad
pop
or
push
push
loop
pop
or
push
ja
adc
sub
pop
adc
hlt
mov
int
rorb
mov
scas
mov
in
add
loopne
mov
push
adc
sub
call
xor
pop
aam
sub
push
inc
stos
gs
add
cmp
cmp
repnz
fsub
jge
cmp
in
ss
out
jo
or
std
mov
dec
pop
ds
mov
add
jp
or
push
nop
fwait
sub
in
or
int3
adc
adc
add
sub
adc
mov
insb
sbb
mov
sbb
push
mov
imul
add
dec
mov
mov
out
fcmove
fisubrs
and
addr16
xorb
cmp
sub
shrb
push
jo
jbe
push
mov
xor
notl
fistl
push
clc
cmpsl
xorl
stos
mov
sbb
nop
jo
outsb
mov
imul
dec
xor
fldenv
adc
fisubrs
push
std
mov
mov
fisttpl
mov
orb
insb
cwtl
js
inc
pop
add
int3
dec
hlt
push
add
stc
xchg
lcall
sbb
lods
fldcw
push
add
inc
testl
scas
call
pop
lea
sub
rclb
loopne
popa
inc
inc
aaa
sbb
ss
ljmp
cli
and
dec
xor
imul
addr16
in
std
jecxz
loopne
lea
nop
adc
lds
out
xchg
dec
mov
add
rcrb
dec
lea
sbb
test
xchg
xor
mov
icebp
sub
ljmp
imul
das
xchg
add
mov
dec
inc
or
insl
add
sbb
mov
sub
jmp
outsl
mov
push
pop
clc
mov
adc
stc
dec
fisttps
sbb
or
in
movsb
dec
pop
pop
lds
mov
sub
dec
gs
sbb
pushf
mov
inc
xlat
mov
add
mov
sub
jmp
fs
ficoml
in
jbe
test
adc
or
pushf
std
or
fistl
mov
mov
push
rolb
cmp
popl
pop
cmpsb
ljmp
jo
insl
pop
adc
adc
lcall
push
rorl
loopne
add
outsb
or
mov
sbb
mov
sub
mov
push
insb
add
mov
mov
sbb
xor
mov
xor
mov
mov
rol
lds
lret
xchg
outsl
pop
shll
xchg
add
mul
sub
mov
add
repnz
jge
ljmp
inc
ss
loop
add
inc
pop
xchg
in
add
mov
movsb
test
shlb
mov
xchg
testb
jg
push
shr
insl
cmpsb
insb
lret
dec
inc
cmp
xor
add
loopne
pop
sbb
out
mov
or
fldcw
add
stc
and
add
xchg
sbbb
insl
push
mov
fsubs
push
dec
cmp
pop
roll
lock
push
push
inc
pop
lret
fisubs
repz
mov
pop
xchg
lea
inc
fiadds
pop
sub
xor
xchg
ja
mov
je
ja
jb
inc
add
xor
push
adc
cmp
nop
bnd
fs
push
stc
test
push
aad
flds
int
fwait
push
lret
inc
lea
dec
push
lods
pop
mov
test
imul
pop
and
inc
add
rolb
adc
faddl
es
pushf
xchg
mov
jne
scas
push
loopne
cmp
or
dec
faddp
test
rolb
ret
push
xchg
popf
sti
roll
sbb
or
insl
imul
enter
ret
add
sbb
add
movsb
int3
sub
mov
insl
xchg
ljmp
in
or
mov
imul
mov
mov
add
pop
addr16
jmp
push
push
cld
add
mov
ljmp
inc
or
adc
pop
sbb
ret
mov
mov
jno
je
add
inc
aas
dec
adc
shll
cmp
mov
stos
mov
and
pop
mov
sbb
rolb
js
loop
or
adc
enter
sub
mov
fwait
or
mov
lock
push
sub
mov
ja
jge
mov
flds
aaa
mov
or
add
xchg
gs
mov
or
cmp
push
fiaddl
push
mov
pop
push
movsl
fisttpl
pop
les
scas
push
pop
lret
aam
cwtl
sarb
aam
jbe
add
test
add
push
adc
mov
cmp
test
mov
lods
dec
pop
or
add
orb
inc
and
insb
jg
fabs
rep
insl
adc
inc
jge
into
push
fistl
or
mov
imul
outsb
add
push
into
add
insl
jne
xchg
mov
xor
fistpl
lret
add
cmpsb
mov
jns
in
test
mov
dec
lret
pop
mov
adc
and
dec
sbbb
inc
sub
addr16
sbb
or
test
fnstcw
xorb
mov
gs
xchg
and
ds
mov
dec
push
xchg
add
lret
aam
lods
or
pusha
lods
mov
mov
ret
insb
dec
call
mov
push
fnstsw
inc
aad
lods
arpl
mov
shll
mov
stc
mov
sub
pop
add
cmp
cmp
inc
mov
jae
pop
mov
mov
and
xor
add
in
inc
insb
sub
inc
adc
add
fcmovu
mov
ja
fldt
mov
fisubrs
pop
pop
enter
pop
xchg
stos
enter
in
or
in
inc
scas
cmp
shrb
pop
mov
ret
mov
ljmp
test
je
inc
adc
out
out
push
sbb
jge
in
imul
add
mov
sub
jno
xor
inc
insb
and
shrl
gs
mov
push
daa
pop
pop
lds
insl
xor
mov
insl
and
mov
fimull
or
jne
add
or
lds
mov
imul
or
mov
pop
xchg
jmp
sub
push
adc
cmp
stos
or
push
jb
into
pusha
inc
lret
jbe
pusha
push
out
lret
cli
lock
das
ret
mov
push
or
inc
sub
fldl
sub
mov
sbb
mov
inc
das
pop
stos
push
adc
cmp
inc
jne
clc
repnz
pusha
add
mov
add
loop
jb
repnz
push
push
mov
lea
call
add
mov
mov
adc
jno
dec
add
subl
mov
out
call
jbe
mov
call
inc
mov
jle
sub
shrl
mov
fs
mov
in
mov
xchg
jno
sub
lods
test
scas
gs
xchg
out
push
xor
push
xchg
gs
test
push
lret
fldt
push
lds
mov
jns
mov
pop
out
xchg
sub
adc
xchg
xchg
outsl
xchg
gs
repnz
roll
jbe
xchg
push
sbb
or
stos
and
xor
or
lret
mov
push
cmp
or
mov
mov
pusha
add
sahf
sub
add
add
and
out
insb
insb
test
sbb
push
jl
je
das
lret
mov
fs
xchg
add
sbb
gs
jge
mov
mov
mov
cwtl
sbb
into
sbb
sbb
xlat
push
cmp
push
add
push
pop
insb
adcb
test
incb
xor
lret
ds
add
push
add
jle
mov
sub
add
cwtl
add
in
mov
lcall
mov
add
stos
in
push
fadds
mov
shlb
std
out
adc
inc
jno
insl
mov
out
dec
dec
push
neg
inc
aad
int
cmp
push
mov
cmp
mov
daa
xor
mov
ds
lods
pop
mov
mov
cmp
sbbl
pop
xchg
in
aam
sbbl
dec
lock
mov
jg
add
mov
push
es
mov
pop
shlb
mov
popf
lret
repnz
adc
cmp
hlt
push
mov
in
sbb
js
or
push
aam
pop
dec
fldt
ret
ds
imul
push
fwait
orb
sbb
sbb
test
loope
add
cmp
or
sbb
sahf
cs
sub
lods
insl
lods
and
add
fisttpll
sub
mov
sub
dec
sub
in
and
or
and
movl
and
outsl
or
add
lret
rorb
mov
lret
repnz
addb
push
push
push
pop
cs
mov
push
ss
test
mov
jmp
mov
add
lret
mov
sub
or
pop
mov
loop
lret
mov
aas
nop
repnz
jb
aam
out
mov
mov
xchg
pop
jmp
jbe
dec
and
or
sbb
or
xchg
lods
sub
and
adc
xor
shll
pop
orb
rep
xchg
cmp
lock
adc
in
ja
xorb
push
ds
pop
into
jns
repnz
les
push
mov
add
lret
je
hlt
mov
xchg
gs
xchg
mov
mov
lcall
push
mov
mov
insb
lret
mov
sti
xor
rolb
dec
mov
mov
shlb
jne
cs
add
imul
adc
add
dec
pop
xchg
xchg
gs
dec
inc
add
leave
leave
jb
xchg
gs
leave
lret
dec
xchg
gs
mov
sub
push
fldt
insl
pop
push
lds
fcompl
or
adc
jno
push
or
add
fidivl
fisubl
gs
mov
adc
mov
lret
cli
adc
subb
in
and
mov
mov
rclb
lret
pop
mov
or
int
stc
movsl
pop
mov
movsb
movl
sbb
cs
adc
or
imul
rorl
adc
test
out
dec
fisubl
vpmullw
and
jecxz
sbb
or
fstpt
inc
dec
lods
cli
push
xor
insl
pop
fisubrl
jae
push
mov
inc
or
loope
test
insb
dec
sbb
add
adc
ret
stos
outsb
pop
add
into
add
lods
cs
stos
fsubrs
xor
scas
mov
pop
and
dec
daa
pusha
stos
push
sub
shl
cmpsl
in
mov
mov
adc
mov
mov
dec
arpl
daa
cmpb
ss
sbb
xchg
scas
movsl
push
fnsave
scas
jecxz
imul
mov
aad
add
lds
dec
in
cmpb
mov
add
mov
push
lcall
jg
sub
aam
adc
loope
or
xor
push
popa
mov
pop
add
push
mov
fwait
adc
orb
xor
addb
fisttpl
mov
into
mov
adc
pop
imul
push
cmp
push
test
jnp
fistl
mov
inc
out
stos
mov
bound
test
mov
mov
ljmp
jno
cmpl
inc
insb
mov
fwait
sbbb
xchg
out
test
lock
roll
jl
mov
hlt
lock
sub
add
cmp
add
xor
or
dec
lcall
or
fadds
insb
pop
push
push
or
jmp
sbb
jbe
jbe
int
sub
mov
out
imul
add
and
push
shll
xor
lds
fisubrl
pop
add
sub
imul
cmp
repnz
push
push
shll
and
push
outsb
repnz
mov
scas
sub
sti
cmpsl
dec
xchg
je
mov
insl
jmp
lcall
and
inc
jp
adc
inc
je
xchg
mov
cli
jge
movsb
push
imul
in
pop
adc
add
es
cmpsb
aam
mov
rclb
sub
adc
pop
and
hlt
mov
mov
stos
out
fildll
into
inc
fwait
add
inc
add
xor
mov
ss
jae
cwtl
push
mov
les
cwtl
inc
push
mov
lds
orl
data16
shll
out
je
adc
imul
cltd
pop
mov
push
sub
addr16
sbb
test
notb
test
add
dec
fstl
dec
jne
push
mov
and
pop
clc
fiaddl
scas
xor
cmpsb
adc
add
loopne
mov
leave
nop
pop
add
jne
pop
jae
add
add
jmp
pusha
push
dec
add
cmc
insb
dec
sub
xor
push
sbbb
jbe
insl
sbb
xchg
mov
mov
rcl
mov
outsb
pop
push
xor
pop
cmpsb
insb
mov
in
sbb
sub
push
es
test
push
mov
push
push
inc
dec
ss
test
inc
insl
or
inc
rcrb
and
adc
shrb
mov
cmp
dec
pushf
pusha
aas
xchg
in
sub
jge
push
das
or
outsl
loop
mov
shll
mov
mov
xchg
sbb
adc
insl
pop
add
pop
inc
mov
test
fiaddl
outsb
fisttpl
push
cld
mov
popa
mov
jb
inc
mov
daa
pop
lcall
mov
lods
loopne
add
dec
cs
push
int3
push
pusha
pop
inc
mov
pop
cs
lods
imul
aaa
lcall
mov
pop
adc
pop
movsb
or
jbe
dec
insl
popa
sub
fiaddl
jns
or
push
fildl
mov
mov
add
or
mov
aas
and
dec
adc
out
mov
movsb
jb
test
push
lds
cwtl
jbe
add
outsb
notb
inc
in
mov
add
pop
fildl
push
cmp
adc
push
loope
bound
mov
add
addb
cs
mov
rcr
fdivrs
stc
or
add
mov
add
and
pop
les
inc
jnp
loope
insl
test
jo
cmpsl
xor
xor
push
or
xchg
hlt
ret
fstl
push
aam
in
imul
add
cmp
adc
inc
inc
mov
lock
jg
shrb
addr16
xchg
in
lds
inc
sar
imul
fnstenv
adc
mov
push
mov
inc
je
inc
cmp
lea
cmpl
adc
into
cmpsb
sub
cmp
jae
test
adc
add
clc
lds
adcl
add
bound
adc
fcomps
inc
push
in
fcmovnbe
add
mov
es
mov
hlt
and
ds
mov
add
inc
or
ret
adc
pushf
push
push
xor
or
jp
cwtl
cmp
loop
inc
sbb
roll
cs
push
xor
cmp
lds
pop
shl
inc
daa
mov
dec
aas
jmp
icebp
and
or
sub
dec
dec
pop
rolb
stos
pop
sahf
test
add
mov
inc
nop
xchg
lcall
or
or
add
mov
mov
sbb
jp
test
pop
test
mov
mov
rol
jbe
sub
inc
mov
pop
xor
xchg
mov
rorb
stos
mov
pop
clc
xchg
inc
stos
mov
mov
in
aad
lret
push
mov
push
hlt
mov
sub
adc
xor
add
add
adc
inc
mov
xchg
cmova
fcoms
inc
inc
and
test
out
loopne
push
push
lods
mov
pop
fcoms
rorb
sub
mov
fwait
and
xor
iret
test
pushf
cli
sub
push
rcll
insl
push
lret
push
shrl
xchg
lds
cmpsb
lock
fiaddl
push
jg
jp
in
in
mov
ljmp
add
roll
sub
xchg
push
pop
int
xorb
pop
stos
bound
push
pop
orb
repz
push
and
shrl
clc
lock
shll
loopne
faddl
add
jge
call
mov
mov
popa
add
pop
sub
js
into
jb
cmp
es
adc
mov
push
sub
insb
adc
mov
jne
sbb
and
mov
sarl
mov
dec
mov
push
insb
ss
mov
imul
xor
cs
sbb
jb
rcrb
mov
push
xor
lcall
imul
mov
fiaddl
xchg
cmpsb
mov
xor
je
push
cmp
ficoms
pushf
and
jecxz
pop
repnz
mov
rolb
lods
shlb
push
insb
int
push
adc
cmp
xor
mov
or
push
loopne
popf
mov
mov
je
cmp
mov
lahf
inc
sbb
push
push
cmp
fwait
stos
inc
lds
insb
mov
push
mov
dec
and
mov
cld
cwtl
sbb
pop
inc
adc
lret
pop
test
int
sbb
push
es
dec
pop
inc
insb
mov
test
sbbb
mov
jl
mov
inc
mov
cli
pop
or
insl
mov
pop
pop
adc
xchg
das
push
inc
sbb
aam
clc
pop
add
mov
call
in
sub
inc
bound
imulb
cmp
add
addb
call
adc
mov
fcmovnb
xchg
adc
dec
push
sub
jo
pop
sub
test
pop
ret
dec
mov
cmp
mov
dec
cmp
fstpl
pusha
cmc
jns
adc
and
mov
jg
sub
add
lds
popa
imul
pop
mov
sbb
jmp
outsb
dec
jg
inc
dec
lret
push
es
and
hlt
xor
push
mov
test
hlt
mov
adc
lahf
jae
inc
les
inc
in
orl
ss
negb
xchg
test
dec
jp
fistl
inc
adcb
roll
push
addb
lret
dec
shl
fwait
lods
push
push
add
pop
mov
pop
fisubrl
fdiv
fs
ficompl
aas
cmc
fcompl
add
jo
add
push
mov
dec
add
inc
fistpl
insb
jmp
inc
mov
stos
mov
mov
adc
xchg
inc
out
push
orl
sbb
push
stos
or
sbb
cmp
cmpsl
jo
mov
inc
mov
lods
int3
xlat
lret
jecxz
dec
jbe
xlat
scas
rclb
inc
daa
jo
ljmp
lds
add
out
aam
push
lret
out
cmp
insl
mov
mov
inc
xchg
fisttpll
or
push
and
shlb
into
mov
fists
hlt
decl
mov
pop
push
ret
fistl
pop
push
outsl
xlat
and
insl
inc
sub
inc
adc
test
pop
or
push
ja
push
and
mov
mov
jae
out
jge
aas
cs
popa
movsb
adcl
sbb
aad
imul
xchg
stc
jb
je
sub
lea
repz
jecxz
dec
lds
mov
jl
pop
pop
push
jo
pop
insl
xor
add
loopne
mov
add
test
lret
cmpl
or
xchg
xchg
das
inc
mov
mov
jge
mov
mov
jbe
es
jecxz
fsubl
mov
xor
adc
cmp
push
sub
pop
inc
fistl
scas
jmp
les
adc
jo
call
insb
mov
inc
and
imul
inc
adc
and
test
xchg
xchg
or
push
cwtl
dec
add
je
je
ret
call
inc
ret
mov
mov
cmp
in
lods
in
mov
mov
pusha
add
mov
addb
push
xorb
addr16
or
inc
pop
adc
insl
lret
outsb
insl
push
jl
nop
sub
adc
mov
fildl
stos
xchg
cmp
jno
add
push
out
pop
push
clc
mov
roll
cltd
sahf
mov
xchg
xchg
out
mov
scas
insb
xchg
lcall
push
dec
int3
outsb
mov
xchg
mov
add
or
jb
and
and
sbbb
ss
leave
les
ret
orl
lcall
sbb
inc
xor
xchg
test
inc
aam
stc
dec
data16
add
mov
mov
inc
insb
jp
movsb
cmpsb
das
into
scas
ljmp
repz
mov
and
pop
push
dec
mov
jo
aam
fisubs
mov
mov
inc
mov
subl
rorb
xlat
js
inc
insl
inc
sbb
pop
add
lret
xchg
daa
xchg
fwait
pusha
pop
mov
mov
dec
dec
mov
enter
lahf
lret
or
pop
orb
xchg
aad
pop
or
inc
xor
inc
aam
divl
loop
rolb
stos
adc
xlat
stos
mov
das
sbb
or
insl
mov
lods
test
movsl
cmp
call
into
arpl
xchg
and
adc
and
mov
mov
lea
icebp
mov
cmpsb
lea
jmp
rolb
test
hlt
sbb
fistpl
fcoms
dec
ss
mov
movl
mov
lahf
xchg
dec
les
ret
mov
mov
mov
or
dec
sub
scas
and
sti
int
xor
jbe
lcall
cmp
out
sbb
adc
out
adc
and
mov
cltd
mov
stos
lods
push
xchg
ret
aaa
fimull
stos
sbb
pop
push
rolb
out
xor
adc
insl
jp
jge
mov
adc
adc
iret
pop
addr16
add
mov
push
mov
mov
jae
mov
inc
lret
inc
in
setns
inc
lahf
enter
fstpt
mov
jno
push
mov
push
mov
mov
out
test
jb
test
mov
sbb
cli
arpl
mov
cs
sub
mov
sub
mov
movsl
scas
scas
insb
ds
in
mov
je
sbb
and
push
dec
add
ljmp
mov
or
dec
jmp
dec
aad
sub
cs
ds
mov
daa
jmp
pop
fiaddl
dec
add
lods
imul
push
call
and
sti
inc
jmp
out
pop
mov
sub
add
jl
mov
add
in
inc
pop
ss
pop
fiaddl
lret
cmpl
mov
jns
mov
adc
lahf
test
shlb
jo
cmp
mov
mov
test
mov
mov
inc
push
push
repz
jne
aam
jl
repnz
lret
inc
aad
mov
xchg
mov
adc
push
pop
inc
andl
jbe
jno
jne
les
inc
ret
sub
xchg
cltd
or
pop
push
or
pop
pop
ds
or
adc
jbe
insb
sub
lret
add
add
adc
stos
popa
pop
jo
jnp
cmpsb
sarl
jnp
insb
and
jp
xchg
mov
rcll
mov
movsl
inc
loop
pop
fdivrs
movb
lret
insl
loope
fsubl
cmp
sbb
cs
push
jno
imul
pusha
push
push
add
xorl
fmuls
mov
push
lahf
mov
pusha
stc
mov
add
in
sbb
dec
push
dec
add
mov
and
xor
adc
lret
and
or
sbb
and
inc
out
addl
into
xchg
adcl
mov
movb
pop
sub
or
jbe
adc
std
and
rclb
push
xor
mov
in
pop
sub
cmp
sub
or
and
loopne
fiaddl
stos
sbb
jmp
cmpsb
jno
sbbl
lret
sub
sub
sbb
ret
sbbb
mov
hlt
jbe
mov
vsubss
mov
mov
add
and
mov
sub
cld
mov
sbbb
ret
sbb
jae
cmc
add
ret
pop
pop
cli
xchg
imul
shrl
in
dec
js
imul
iret
add
dec
pop
call
and
les
add
es
cmp
bound
and
addb
pop
dec
in
mov
rol
inc
sbb
pop
pop
or
int
pop
pop
mov
ret
push
mov
pop
add
and
lods
and
sbb
mov
es
inc
je
push
xorl
or
inc
mov
jne
cmp
add
outsb
jno
xor
inc
mov
sbb
xchg
loope
sub
shrb
or
ss
rcr
in
lret
mov
inc
adc
std
pop
lret
sub
sbb
pusha
inc
fwait
jmp
adc
scas
fcoms
outsb
jo
lock
lds
sub
sbb
and
cmpsb
mov
push
inc
stos
imul
jnp
inc
pop
cmp
scas
mov
cmpl
call
push
push
gs
sub
dec
adc
je
sti
scas
mov
adc
sub
add
cld
xor
aad
mov
and
inc
scas
jle,pt
jo
insl
sub
xchg
or
movsl
and
leave
mov
dec
clc
loop
fcomps
sbbb
dec
sbb
or
sti
mov
stos
test
pop
pop
xor
push
or
pminsw
push
shlb
jmp
shlb
insl
or
test
add
cmp
in
mov
inc
mov
adc
cs
sbb
mov
xchg
sbb
push
cmpsl
sub
je
das
mov
add
fdivrs
inc
outsb
mov
mov
jnp
into
cmp
test
sub
push
jl
je
inc
xor
fists
inc
pop
fistl
mov
andl
mov
cmpb
ret
xor
pop
mov
loope
lahf
adc
ss
jnp
popf
mov
push
adcb
mov
pop
fcmovnu
add
mov
and
pop
pusha
imul
xchg
mov
sub
jge
orb
add
rolb
sbb
stos
cmpsl
lret
mov
outsb
sub
pushf
mov
je
pop
mov
cmc
push
pushf
add
insb
and
add
or
dec
push
adc
pop
mov
mov
push
shrl
lds
mov
mov
inc
xacquire
ja
insl
and
outsb
add
xorb
lods
push
inc
push
mov
and
and
ret
pop
dec
cmp
xchg
push
mulb
fidivrl
mov
mov
fld
xor
mov
mov
cmpsl
cmp
inc
insb
mov
ret
into
inc
dec
sbbb
icebp
add
movsl
movsl
push
bound
mov
and
push
fisubl
mov
push
inc
add
or
pop
mov
jmp
fisubrl
lret
fwait
push
pop
push
ficoml
or
cwtl
fadds
sbb
repnz
fimull
sbb
stc
add
inc
aas
inc
pusha
subb
mov
push
in
and
cmp
stos
test
inc
mov
add
fwait
mov
call
popf
push
dec
mov
sbb
into
mov
je
mov
push
adc
shll
pop
add
lret
sbb
sbb
insb
push
jne
shlb
or
cmp
and
pop
das
andb
xor
out
lock
jb
into
pop
push
lcall
push
cltd
pop
fsubrs
add
in
push
fildl
jno
iretw
out
loopne
outsb
pop
fwait
mov
sahf
or
out
sbb
insl
sbb
push
mov
push
cmp
push
push
fildl
xchg
mov
add
insl
fcmovnu
mov
cli
jp
or
xor
adc
push
mov
rcr
imul
nop
add
imul
mov
inc
xor
xchg
and
add
les
mov
jge
sbb
cmp
fcoms
jo
loopne
inc
add
repnz
scas
fcmovbe
sub
hlt
add
rcll
inc
vpaddsw
push
mov
push
idivl
dec
inc
add
mov
movsb
xor
push
mov
add
mov
sub
pop
les
or
add
sub
xchg
mov
mov
sarl
clc
dec
cli
bound
sbb
pop
dec
or
popa
scas
sbb
out
add
jmp
push
movsb
fwait
lods
mov
push
mov
aam
and
insb
cmp
pop
shll
add
dec
enter
add
cli
ss
mov
xor
dec
mov
out
test
in
lods
and
jmp
mov
pop
fnsetpm(287
stos
mov
fwait
test
stos
enter
sbb
cmpsl
inc
adc
mov
scas
in
int3
mov
daa
mov
or
pusha
inc
adc
jbe
test
jmp
fs
xlat
and
test
inc
lods
xchg
lret
nop
dec
sub
mov
insl
mov
cmp
into
in
xchg
push
inc
mov
jg
ss
mov
xchg
sub
insl
in
mov
cli
loopne
push
mov
jmp
rorl
jnp
ret
push
sbb
xor
inc
insl
jmp
push
sub
jno
mov
pusha
and
int3
xchg
mov
xor
in
ja
add
add
loope
popa
popa
mov
ret
add
mov
mov
push
push
pop
mov
adc
nop
jg
pop
xchg
push
orb
cmp
xchg
sub
loopne
add
add
je
stos
xorb
xchg
xchg
cmp
pusha
mov
not
repnz
mov
add
enter
jmp
addb
push
jbe
adc
pusha
xchg
andl
jmp
push
add
imul
arpl
or
xor
mov
imul
dec
stos
xchg
icebp
shlb
lds
adc
dec
fcoms
pop
sub
cmc
paddq
adc
add
xchg
sbb
jecxz
imul
cmc
sbb
jbe
sub
dec
mov
or
stos
dec
add
push
xchg
test
xor
mov
sbb
xchg
pop
xor
sub
push
lea
mov
fnstenv
add
pop
cli
outsb
pop
add
inc
sar
push
movsl
ret
imul
adc
adc
xor
add
clc
push
ja
mov
loop,pn
jb
mov
sbb
je
repz
insl
stos
test
xor
jns
push
mov
cmpsl
out
in
add
hlt
jp
sbb
push
xchg
adc
sub
insl
mov
jle
or
cmpb
push
jmp
dec
jb
mov
loop
adc
lods
bound
xchg
fiadds
je
mov
stos
lods
push
jp
dec
add
cmc
stos
mov
clc
outsl
mov
les
push
adc
mov
adc
imul
dec
aam
inc
in
subb
inc
push
rorb
je
or
mov
mov
fidivrl
mov
fisttpl
popa
cli
pop
outsl
pop
iret
fstl
jno
cmp
pop
lds
lds
jno
loopne
and
stos
stos
jbe
push
sbb
xor
ss
adc
test
mov
loopne
jecxz
mov
outsb
dec
dec
sbb
fisubl
testb
or
insb
orb
mov
cli
mov
stos
dec
adc
add
adc
outsl
pop
push
pop
mov
xchg
add
or
sub
test
insl
pop
les
in
xchg
inc
jge
sub
add
ret
mov
add
add
xchg
xchg
or
loopne
mov
sub
xchg
das
test
stos
aaa
clc
cld
pusha
inc
mov
jo
aad
cmp
pop
insb
sbb
mov
or
int
jp
cmpsl
mov
jmp
ret
test
test
mov
lods
mov
and
outsb
push
cmpsl
ficoml
aad
outsl
xchg
dec
mov
subb
sub
jmp
push
xchg
xor
pop
adc
jo
mov
jns
jbe
add
mov
mov
jne
jbe
adc
mov
fisubrl
jecxz
loopne
jnp
xorb
test
mov
add
push
pop
daa
or
xor
sbb
imul
cmp
decl
lret
mov
mov
mov
mov
or
add
sbb
aam
xchg
ss
inc
push
fbstp
adc
xor
mov
movsb
pop
icebp
and
add
jmp
mov
ficompl
cli
adc
shll
push
je
aam
repz
xor
out
and
das
push
in
and
mov
movsl
adc
add
movntps
push
adc
xrstors
mov
aad
xchg
aam
shrl
jecxz
push
mov
adc
mov
pop
sub
and
outsl
ds
mov
in
push
jle
lds
rclb
mov
push
clc
out
outsb
sbb
push
jmp
movb
lea
lret
add
dec
pop
inc
insl
adc
out
lea
ja
xchg
cmp
mov
int3
fisubrs
inc
pop
jge
xor
mov
push
lret
push
fstpl
addl
les
stos
fwait
cmp
jp
or
jbe
sub
mov
lea
mov
sub
mov
jmp
cmp
cmpsl
mov
pop
xor
jbe
mov
ret
repnz
inc
rorb
push
adc
scas
out
into
daa
jmp
loopne
push
mov
icebp
jns
adc
or
jbe
adcb
rorb
and
xchg
dec
push
insb
sub
popa
movsl
cmpsb
xchg
push
addb
mov
clc
mov
and
stos
outsl
int
or
and
xchg
hlt
inc
pop
pop
mov
jmp
add
icebp
push
cmc
jp
xor
mov
cmp
sbb
sbb
mov
push
adc
inc
or
push
and
cmp
lret
ds
es
push
and
push
pop
jns
loope
mov
lret
xchg
add
add
push
notb
lods
xchg
pop
push
sub
ljmp
rcll
sbb
or
mov
xor
xchg
xor
xor
add
sub
push
add
and
adc
jle
push
inc
roll
inc
jns
hlt
aas
lahf
push
jl
lock
adc
fdivs
aas
push
mov
push
adc
mov
pushf
roll
ja
mov
mov
push
mov
imul
scas
cwtl
dec
xchg
scas
sahf
push
jno
adc
mov
pusha
pop
insb
mov
add
cld
inc
lea
or
in
xchg
js
cltd
fisubrl
mov
lret
lsl
pop
xor
mov
aaa
cmp
and
mov
lret
mov
das
adc
sbb
mov
lret
pop
add
or
repz
mov
idiv
jmp
out
sub
mov
out
shrb
int3
lret
mov
lret
fadd
int3
les
mov
lods
test
sub
mov
mov
mov
lret
nop
mov
lret
mov
js
jo
push
fs
pop
popf
call
adc
adc
mov
fwait
and
pop
ret
das
lret
mov
lret
sub
xor
sub
sub
mov
add
or
adc
sbb
jecxz
lret
mov
lret
jmp
repz
sti
shrl
sub
loope
jmp
mov
iret
add
mov
gs
mov
mov
mov
and
mov
jae
pushf
into
xchg
insb
mov
adc
and
pop
mov
in
jo
loopne
sub
mov
jno
insl
inc
xor
mov
mov
fdivs
int3
pop
gs
les
inc
lret
dec
dec
cltd
nop
pop
mov
fimull
sub
lods
ja
mov
mov
je
mov
push
lahf
icebp
pop
sbb
lret
sti
or
ret
iret
or
pop
add
add
push
sbb
test
cs
jne
jmp
inc
pop
pop
or
mov
inc
fs
jb
and
gs
js
push
loop
fnstenv
xlat
and
lods
add
inc
dec
jb
add
insl
pop
mov
xchg
pop
xchg
pop
mov
lcall
add
xor
pop
in
pop
push
adc
push
loopne
insb
xlat
jbe
mov
loop
aas
lret
jle
insl
pop
stos
sbb
mov
or
addr16
push
pusha
fcmovnu
pop
lret
scas
stos
fldt
andb
push
aaa
dec
sbb
pop
lret
lods
stos
mov
iret
clc
dec
dec
roll
jp
sub
int3
mov
sbb
mov
jo
push
insl
fwait
into
out
enter
jmp
push
sub
add
dec
mov
sub
sbb
push
push
and
mov
jmp
lret
mov
mov
mov
adc
add
add
xchg
rcll
mov
mov
pop
inc
mov
push
inc
les
outsb
push
mov
data16
and
mov
mov
mov
std
jl
and
sbb
jmp
in
jnp
pop
sub
cmpsl
dec
add
fs
jbe
arpl
orb
jno
xlat
jmp
lret
add
scas
outsl
sub
pop
or
pop
subb
popl
sbbb
ljmp
je
push
push
pop
cwtl
into
out
mov
rorb
xchg
add
adc
mov
bound
add
dec
adc
je
push
sbbb
mov
fildl
sbb
insl
pop
adc
adc
add
xor
sahf
mov
xlat
adc
adc
mov
bsf
es
psrld
mov
fcmove
hlt
arpl
daa
stos
add
inc
out
subb
test
cmp
jns
out
sub
add
in
hlt
sbb
aam
fcmovne
push
cmpsb
push
insb
dec
popf
inc
gs
mov
fwait
or
xor
fistpl
inc
stos
add
jno
adc
xchg
ficoml
cli
xchg
das
add
sti
into
call
push
mov
push
add
mov
mov
addl
inc
jo
ljmp
cmpl
lret
insl
sub
mov
xor
repz
jmp
mov
fsubr
es
insl
mov
imul
xlat
push
cmp
mov
sar
jle
push
jno
push
insb
xorl
outsl
mov
fildl
adc
mov
jge
push
push
enter
mov
xlat
adc
xchg
les
xor
dec
cmp
stos
fadds
jecxz
dec
push
add
jbe
add
cmp
adc
mov
loop
dec
mov
pusha
pop
loope
pusha
insl
outsl
jnp
pop
push
shlb
pop
ja
mov
cmpsb
mov
dec
jno
lods
or
mov
mov
push
push
jmp
mov
fstl
xor
sarl
cmpl
adc
mov
or
or
cmp
xor
sub
test
stos
loop
lods
mov
je
fisubl
into
dec
adc
adc
call
or
push
add
push
mov
mov
pop
rolb
mov
push
fs
add
add
mov
jo
imul
push
sub
jno
mov
in
std
jp
add
pop
push
cmp
scas
mov
push
daa
mov
sub
pop
inc
mov
sbb
fsubrl
inc
out
out
popa
imul
arpl
fadds
jbe
jecxz
repnz
dec
loop
out
push
mov
sbbb
mov
cmpl
lret
cmc
jle
fisttpl
les
das
dec
sub
aam
mov
test
push
outsb
cmpl
mov
adc
add
lds
cs
test
idivl
adc
or
jecxz
push
aad
es
or
mov
std
push
aam
repz
fwait
mov
mov
pop
fcomps
mov
shr
popa
sbb
push
pop
mov
lcall
inc
aad
and
jle
lcall
hlt
and
add
adc
mov
and
add
ret
sbb
enter
inc
inc
mov
mov
mov
mov
cmp
jmp
push
mov
stos
fdivrs
stos
fimull
pop
adc
mov
dec
testb
in
cld
sbb
dec
shrb
push
mov
nop
movsl
or
loopne
push
ljmp
pavgw
shl
ds
mov
push
adc
jl
pop
adc
xchg
pop
pop
inc
das
repz
mov
jo
mov
outsb
and
cli
adc
mov
rsm
and
lods
fidivrl
add
dec
mov
loope
scas
outsb
adc
mov
and
popf
xor
ss
jb
aad
repnz
in
mov
inc
cmpsl
inc
aam
adcb
or
add
test
roll
cltd
jnp
pop
popa
cli
add
sub
ret
int3
jecxz
mov
jl
dec
adc
add
cmp
test
subb
pop
cs
pop
dec
and
adc
jg
fiaddl
rorl
adc
push
es
cs
setne
mov
test
add
in
dec
pop
stos
in
jnp
push
push
or
cmp
movsb
add
imul
fnstsw
add
cmpsl
aad
mov
mov
nop
mov
cmp
inc
aad
jge
xor
imul
fwait
jl
push
add
dec
shlb
test
sbb
xlat
adc
aam
shll
adc
push
lock
and
mov
mov
setnp
inc
xchg
cmp
sahf
cwtl
pop
adc
lods
scas
popf
nop
shll
jbe
imul
out
loop,pn
add
jl
mov
xor
aad
mov
fwait
mov
pop
mov
rorb
mov
mov
push
shl
lret
inc
mov
add
loopne
ficoml
and
push
inc
xchg
loop
cmpsl
sub
test
jmp
arpl
insb
and
ret
adc
adc
or
pusha
imul
sbb
dec
mov
xor
adc
scas
or
mov
or
repz
pop
add
lea
arpl
je
fs
pop
ds
mov
add
sub
mov
pop
aad
xchg
mov
jbe
mov
aad
scas
xchg
mov
or
sbb
cwtl
mov
push
test
cmp
lds
sbb
pop
cltd
fwait
ja
mov
notb
mov
jbe
fmull
sbb
xor
lods
mov
daa
pop
pop
sub
push
cmp
loopne
and
or
mov
mov
fcoms
mov
int3
push
shlb
push
insl
sbb
ss
out
mov
lods
fisubrl
mov
pop
stos
pop
shrb
testb
insb
sub
fnsave
out
out
mov
sub
lods
and
fdivr
int
mov
and
fdiv
lea
mov
sub
sub
jp
lds
mov
sub
outsb
hlt
neg
add
popa
inc
sub
cmpsb
sub
out
jo
mov
int
pop
hlt
pop
pop
cmp
push
aaa
bound
test
pusha
dec
or
js
mov
fadds
or
or
das
push
rcll
sub
sahf
jno
or
sbb
mov
sbb
ss
mov
pop
jo
sub
testb
stos
xor
and
cld
iret
mov
in
jne
mov
mov
jno
es
loopne
pop
or
mov
mov
repnz
cmp
lods
filds
mov
fidivrs
mov
scas
inc
push
sbb
or
mov
inc
push
push
adc
and
test
add
xor
and
adc
mov
xchg
pop
gs
cs
mov
dec
mov
cmp
mov
clc
push
push
inc
pop
mov
into
inc
add
cmp
stos
mov
dec
xor
sbb
jbe
push
add
adc
mov
or
pop
inc
lcall
inc
inc
add
sbb
shll
insl
inc
mov
ret
loopne
shl
enter
push
adc
push
roll
mov
add
cmpb
cmp
fidivl
sbb
cltd
mov
jo
mov
push
inc
or
lea
fsubs
add
mov
mov
insl
lcall
addl
arpl
les
and
dec
je
popa
add
push
add
or
xchg
sub
subl
jmp
xchg
sub
fcmovne
inc
jp
sub
mov
loop
repz
cmpsl
fnstsw
mov
push
push
mov
test
cmp
mov
push
int3
and
mov
pop
jae
sub
loop
popa
sbb
xlat
jnp
mov
push
insb
mov
cmpsl
iret
lcall
push
push
adc
in
jmp
stos
jl
fs
ja
mov
add
adc
and
add
fildl
mov
loop
outsb
adc
inc
shll
imul
mov
mov
xchg
cmpsb
add
add
fidivrs
jae
mov
adcb
cmp
inc
loopne,pn
xchg
insb
sarl
lea
mov
fisttpll
mov
enter
mov
and
mov
mov
jnp
jbe
xor
lds
mov
cmp
cmp
xor
inc
push
mov
mov
popa
mov
mov
outsb
add
fcmovu
add
in
loopne
in
cmp
andb
test
push
cmp
dec
push
push
frstpm(287
pop
add
push
pop
adc
adc
inc
mov
mov
add
outsb
xor
icebp
popa
fadds
test
add
adc
and
pop
fiadds
mov
push
dec
jns
call
mov
xchg
jmp
test
orb
fistl
gs
dec
pop
inc
pop
test
mov
inc
mov
xlat
in
pop
xor
inc
lret
or
insl
xchg
pop
roll
dec
mov
push
pop
flds
outsb
inc
xchg
flds
fscale
adc
mov
stc
pushf
in
iret
jo
call
ret
cmp
cwtl
stc
and
adc
push
jl
jge
outsb
and
nop
dec
inc
push
clc
adc
ss
repnz
adc
test
push
arpl
jmp
jmp
dec
test
sbb
sbb
in
lcall
call
lds
mov
lods
imul
pop
mov
imul
and
pop
stos
pop
mov
push
cwtl
mov
or
mov
lock
call
stos
ss
xchg
mov
cmp
pusha
dec
shlb
imul
fstpl
xchg
dec
push
jecxz
ficoml
inc
dec
mov
add
sti
pop
mov
arpl
data16
adc
out
ljmp
or
pop
shrl
add
ss
fisubrl
mov
add
add
mov
inc
pop
fistps
jbe
xlat
ds
pop
mov
rclb
lods
mov
cmp
jle
aaa
push
push
insb
dec
stos
iret
push
jb,pt
pusha
pop
add
rcl
push
sub
add
ret
bound
insb
and
leave
push
jecxz
subb
dec
dec
movsb
es
lods
fdivs
xor
xlat
filds
flds
lods
push
jno
mov
aad
fs
test
and
sbb
test
xchg
cmpsb
mov
fldl
jbe
fs
mov
popf
push
jle
and
sub
jno
test
test
push
fcomp
mov
jb
fadd
fildl
loop
push
or
testb
stos
stos
orb
add
mov
insl
cmp
lcall
sbb
adc
jmp
fisubrs
mov
cs
mov
stos
xchg
xor
pminsw
mov
loopne
mov
pop
pop
pop
cmp
icebp
jo
add
test
pop
div
lock
loop
outsb
in
adc
clc
mov
imul
sub
stos
jno
ss
jno
cmc
jo
int3
mov
insl
mov
pushf
jno
xchg
mov
inc
add
in
mov
fwait
or
js
js
mov
mov
ret
jle
jno
imul
icebp
fmuls
shlb
sub
mov
cld
sub
lea
in
cmpsb
fwait
mov
out
cmp
hlt
sarb
mov
pop
mov
mov
xor
xchg
addl
fsubrl
fcoml
icebp
jo
mov
test
mov
push
pop
repz
in
add
jl
cmp
push
icebp
das
cmc
insb
aad
fldl
insb
pop
mov
xor
lea
cwtl
outsb
lret
mov
adc
cs
inc
sti
push
dec
and
mov
fwait
cmp
in
movsl
or
vpmadcswd
push
subb
pusha
adc
call
insb
mov
sub
in
scas
cmp
xchg
mov
iret
sbb
push
enter
mov
jae
popa
inc
hlt
mov
insb
fldt
paddusb
adc
dec
stc
add
pop
jle
in
cmpsl
aaa
bndldx
or
inc
clc
hlt
enter
add
rorl
lock
dec
or
sub
or
fwait
cmpsl
sub
and
lods
insl
aaa
arpl
aam
or
jbe
pop
mov
jbe
roll
lock
fnstsw
adc
lea
sbbb
les
ret
inc
roll
mov
sub
jb
push
push
mov
or
mov
test
inc
pusha
mov
icebp
neg
cmp
push
inc
xchg
addb
add
outsb
pop
push
mov
sbb
push
rorb
sub
addr16
xchg
sbbb
push
icebp
imul
push
ss
sbb
inc
lods
pop
fidivl
imul
mov
xchg
mov
xor
xor
xchg
lock
mov
lahf
pop
xor
mov
jmp
fcoms
enter
shrb
mov
fs
push
adc
stos
jecxz
lock
fistpl
lods
inc
adc
aam
mov
pop
inc
je
sarb
adc
sahf
xor
pop
clc
lods
and
loop
mov
bound
fwait
add
or
lcall
js
mov
jns
jg
insb
xor
jne
sub
vsqrtss
mov
adc
dec
pop
fmuls
mov
rorb
hlt
outsb
mov
das
or
jge
cmp
mov
sbb
xlat
cmpb
jg
add
add
sti
push
mov
mov
test
movsb
outsl
bound
ljmp
cmp
sbb
stos
dec
out
mov
and
push
jno
mov
daa
sbb
inc
mov
sub
call
pop
cwtl
clc
pop
test
mov
test
ficompl
scas
mov
out
add
mov
shrl
cmp
mov
and
add
outsb
scas
pusha
pop
test
subl
stos
mov
out
imul
nop
test
std
jge
dec
push
mov
loopne
js
push
push
sub
cmp
lea
int
roll
push
add
sub
pop
adc
jno
or
jae
aaa
pop
inc
test
push
push
sub
sbb
lret
fidivl
mov
repz
sub
dec
push
mov
ja
push
pop
push
ror
pop
leave
fisttpll
jno
dec
mov
inc
cmp
sbb
test
test
pop
jp
jbe
xor
aam
ss
test
ljmp
cmp
stos
cmc
notb
popa
inc
push
pop
aam
dec
mov
fildl
test
fisubrl
push
fsubl
test
push
fildl
mov
and
or
push
mov
ss
add
pushf
mov
fiadds
pop
fcomps
push
xchg
lret
sbb
mov
xor
mov
in
movsb
mov
in
mov
loopne
mov
jbe
jne
add
iret
jns
lea
mov
test
xor
mov
arpl
pop
cltd
or
mov
mov
aam
inc
sub
movsl
fiadds
and
jo
sub
push
mov
test
or
sbb
adc
mov
mov
add
mov
push
sahf
mov
jbe
mov
mov
pop
sub
aam
dec
xchg
mov
add
arpl
fcmovnbe
mov
in
pop
cmpb
add
insb
inc
insl
adc
mov
fsub
not
or
daa
or
adc
mov
add
idivb
add
push
mov
inc
cmpsb
xchg
dec
add
mov
adc
cmp
add
out
nop
test
loope
xor
fistps
insl
mov
jo
add
lods
stos
stos
mov
jg
mov
jno
test
stos
jbe
mov
mov
jbe
mov
sub
fimull
mov
mov
push
fidivl
xchg
push
xchg
enterw
jno
push
addb
or
fidivs
inc
jmp
movsl
xchg
cwtl
fcmovb
nop
mov
adcb
lea
stos
push
inc
insb
and
xchg
mov
mov
sbb
mov
fwait
cmp
pusha
adc
push
dec
xchg
std
in
loop
test
or
jp
aas
add
sbb
mov
sub
dec
push
mov
dec
xlat
adc
push
in
inc
call
xchg
or
enter
add
push
or
mov
cmp
mov
aad
int3
inc
adc
inc
lods
xor
in
sbb
lock
call
lea
stos
ja
adcb
inc
mov
xchg
xchg
push
lods
mov
sub
inc
movsb
sahf
insl
pop
rorl
cwtl
stos
lcall
lret
xchg
or
fcmovnu
pop
push
jne
std
stos
xchg
lods
inc
or
notb
and
inc
sarl
aas
mov
sub
scas
pushf
pop
ljmp
rol
aaa
insl
mov
aam
inc
add
mov
sub
out
inc
lods
stos
pop
inc
insl
mov
push
add
push
arpl
test
mov
popa
sub
or
dec
mov
loopne
cmp
mov
sub
imul
jne
pop
ds
mov
xorb
sahf
loope
add
insb
aaa
add
jne
insl
pop
add
outsb
es
push
push
push
jo
cmp
pop
mov
les
test
add
mov
mov
jno
scas
push
scas
add
sbb
lret
xchg
rolb
jbe
mov
imul
and
or
insb
rclb
sub
jbe
aad
cmp
mov
inc
sbb
aas
mov
out
loop
pop
sub
mov
add
sub
lock
nop
add
mov
mov
mov
add
in
insl
or
insl
jp
push
push
jno
call
in
fisttpll
iret
push
cs
dec
testb
sub
sarl
mov
push
mov
inc
add
sahf
and
mov
adc
cltd
insb
sub
je
lds
icebp
arpl
add
sbb
pop
inc
stc
mov
xor
movsl
mov
inc
sub
gs
adc
add
cs
sub
jb
sahf
aad
add
adcl
pop
mov
mov
aad
fisubrl
adc
insl
sbb
dec
pop
jne
dec
cwtl
pop
mov
bound
sbb
add
data16
mov
add
insl
jmp
xchg
cmpsl
scas
mov
xor
scas
mov
mov
ljmp
in
jg
add
push
mov
and
mov
adc
push
loop
dec
dec
mov
call
roll
inc
lds
mov
adc
fimull
cli
ret
insl
inc
movl
mov
lods
insb
mov
enter
xor
mov
or
sbb
sub
lods
inc
mov
jecxz
mov
fisttpll
cltd
or
imul
rorl
fidivl
push
push
lds
jnp
pop
adc
sbb
outsb
pusha
cmpsl
add
xchg
mov
nop
subl
mov
jae
sub
push
sbb
insl
test
mov
adc
xchg
dec
sarb
iret
add
add
push
xchg
imul
add
inc
pop
inc
jecxz
ret
jbe
xchg
jne
sbb
inc
mov
movsb
daa
sbb
inc
insb
adc
and
call
push
scas
mov
inc
and
cwtl
stc
adc
inc
insb
pop
test
out
sbb
shlb
inc
cmp
cmc
lret
sub
inc
xor
push
stos
pop
or
adc
movsb
lods
xchg
lea
push
mov
aas
or
jle
fcmovnu
mov
icebp
sub
popf
add
mov
mov
aad
push
inc
dec
jmp
pop
ljmp
mov
add
int3
jne
shrl
add
and
push
xor
or
jne
add
mov
mov
lcall
cmp
or
mov
mov
cmp
pop
insl
sbb
jb
cli
mov
insl
and
or
inc
clc
push
mov
and
push
sub
dec
dec
lret
pop
add
mov
lock
cmpps
push
inc
fldt
add
in
jmp
cmp
dec
xchg
sbb
xchg
pop
add
cmpsl
xlat
mov
lods
sbb
cmpsl
in
gs
in
push
test
xchg
add
mov
inc
push
add
fiaddl
shrb
out
test
dec
cmp
sti
adc
push
jno
cmpsl
sub
add
inc
jne
popf
and
lret
in
jge
xchg
mov
push
les
in
or
jnp
int
test
stos
jge
rcrl
jecxz
bound
and
mov
or
push
dec
inc
je
mov
mov
push
pop
inc
rolb
or
pusha
xor
in
in
or
inc
scas
push
cld
shlb
push
adc
xor
shl
add
test
vminpd
add
imul
dec
mov
xchg
jbe
xor
ficoml
sbb
sbb
jmp
mov
lret
xchg
sti
in
push
mov
lahf
push
int
jmp
cmpsl
fwait
mov
lock
mov
or
adc
insb
pop
pop
mov
dec
test
aam
push
sub
imul
push
mov
pop
lods
pushf
sbb
lcall
fcoms
fistl
loopne
mov
mov
push
xchg
or
jno
jb
cs
outsl
and
add
pusha
int
int
popa
divb
add
cmpb
sahf
pop
pop
fisubl
rclb
nop
add
xor
sbb
and
sbbb
add
mov
push
enter
out
mov
mov
into
stos
js
je
outsb
pop
mov
mov
imul
fcmovu
mov
push
mov
fcmovbe
mov
add
test
mov
mov
sbb
test
mov
adc
sbb
fadds
cmp
or
sub
popa
adc
jne
std
faddp
or
mov
fs
shll
pop
inc
leave
insl
mov
aaa
faddl
imul
or
pop
sbb
scas
clc
sarl
mov
mov
rolb
sahf
or
or
stos
sti
or
inc
mov
fldl
adc
lods
mov
fldcw
mov
hlt
jno
push
loopne
pop
push
mov
push
mov
jbe
shrb
mov
std
mov
loopne
jne
mov
and
sahf
add
stos
mov
add
mov
je
rolb
mov
jg
adc
jo
inc
push
fnstcw
enter
jb
insb
stc
daa
pop
shlb
inc
or
xchg
dec
fstpl
xorl
sbb
shrl
pop
jae
mov
jns
inc
lods
adc
cmp
sub
sub
sbb
inc
movl
push
add
imul
pop
int
push
fdivs
cmp
and
mov
add
aas
test
popf
in
ss
mov
cltd
sbb
cmpsl
xor
mov
mov
pop
test
outsb
or
cmc
add
mov
adc
je
mov
inc
insl
add
dec
testb
sbb
mov
sbb
cmpsb
mov
jbe
ret
jg
xor
xor
xchg
or
and
lock
pop
sbb
mov
jmp
ficomps
insb
or
mov
push
aad
dec
sub
roll
loopne
pop
aad
pop
mov
cmp
mov
je
push
cmpsb
js
add
rsqrtps
loopne
cmp
cwtl
pop
nop
adc
jne
fidivrl
mov
jo
xor
mov
into
push
insl
xchg
sbb
jae
pop
les
ss
jge
lret
enter
fidivrl
and
sbb
mov
stos
xchg
cmpsl
mov
outsb
in
add
sub
lea
sub
in
pop
push
add
dec
clc
mov
pop
mov
call
xchg
or
addr16
loop
fstps
ja
pop
repz
mov
add
call
aas
lods
ds
add
adc
fcmovb
add
lods
jbe
push
sbb
cmpsl
dec
add
rolb
inc
lahf
ret
fldt
xlat
bound
pop
mov
jmp
imul
mov
lret
pop
xchg
mov
sbb
xor
std
int
jo
lds
ret
xchg
or
mov
and
popf
adc
mov
mov
jb
rol
push
fnstsw
lret
std
dec
pop
add
loope
push
or
sub
mov
sbb
aam
sbb
pop
call
cmp
or
sbb
xchg
pop
fdivs
cmp
mov
jl
sbb
mov
mov
xchg
mov
fldt
add
outsl
ret
movsb
int
sbbb
jnp
popa
roll
push
inc
add
jno
mov
mov
rorb
jno
jmp
add
add
add
cmp
cmp
mov
imul
scas
mov
in
mov
ret
jbe
fdivs
jl
pop
mov
fidivl
outsl
xchg
out
jbe
cli
jns
push
outsb
mov
cs
insl
cltd
or
shlb
or
and
xchg
xchg
scas
cmp
test
inc
iret
jne
int
inc
add
sub
jo
sub
jp
ret
in
sub
inc
lea
stc
inc
imull
dec
add
ljmp
movsb
cmp
push
push
cmp
cmp
xchg
in
or
mov
and
pop
pop
jle
ret
sbb
jno
dec
dec
test
aam
mov
stos
loop
imul
xchg
leave
push
or
cmp
xchg
xor
lahf
mov
xchg
xchg
jo
lcall
pop
add
and
fisubrs
roll
imul
dec
or
shrl
jmp
outsb
dec
jb
add
push
sbb
jae
mov
push
or
dec
xlat
pop
or
push
leavew
mov
and
jmp
stos
insb
add
pop
sub
inc
mov
lea
pop
inc
lock
mov
or
jne
jne
or
xchg
jne
frstor
je
insl
add
int
jne
int
adc
cltd
dec
or
adc
pop
arpl
dec
mov
and
adc
add
paddw
repz
xchg
add
cmpsl
bound
lcall
jb
add
sbb
mov
popf
imul
cmp
or
mov
in
and
and
fs
idivl
daa
sbb
cs
mov
dec
add
popa
inc
aaa
inc
pop
bound
test
add
js
fwait
jo
jge
push
inc
push
popa
adc
add
pop
pop
into
push
mov
pop
jne
sbb
gs
adc
pop
cwtl
imul
sub
je
jb
emms
js
lods
out
sbb
pop
ja
mov
mov
dec
aaa
jbe
jbe
je
insb
mov
and
jno
fwait
lret
fnstsw
aas
outsl
cmp
jb
and
inc
mov
and
arpl
xor
mov
or
pop
jno
mov
data16
ret
add
lcall
outsb
test
push
inc
ja
pop
lret
mov
gs
addr16
ret
jnp
out
sub
mov
push
das
adc
lahf
sti
add
xor
xchg
sbbl
push
jo
outsl
out
in
lea
js
arpl
or
adc
cli
sahf
sbb
xchg
sbb
aam
lret
jae
js
inc
xchg
sub
ja
sbb
jns
pop
inc
neg
in
inc
scas
movsb
inc
lret
jge
jg
aad
fidivrs
and
mov
xchg
sub
lret
jnp
outsl
test
xchg
mov
fwait
imul
call
xor
and
mov
and
cmovnp
aaa
sahf
lret
sbb
popa
push
add
xor
mov
or
mov
jb
sub
pop
mov
jmp
xor
addl
and
jne
xorl
data16
add
sbb
sti
pop
mov
in
or
fcmovnb
mov
xchg
imul
cltd
xor
or
push
jae
and
adc
bound
dec
arpl
scas
sbb
sub
sub
imul
andw
shlb
shll
jae
jo
mov
test
cltd
js
add
add
sub
add
test
push
push
lea
mov
test
daa
jne
jnp
inc
dec
bound
sbb
or
cmp
sbb
imul
imul
mov
jmp
lret
inc
mov
ja
fcoms
adc
outsl
outsl
sub
jns
outsb
sub
mov
sti
mov
sbb
mulb
dec
mov
ret
push
or
imul
lret
jne
adc
and
xchg
arpl
sub
cmpsl
aaa
adc
cmc
ja
mov
das
xlat
adc
push
inc
sbb
jecxz
adc
xchg
lods
dec
pusha
adc
popa
and
inc
sbb
sub
pop
aas
xor
inc
fsts
aas
mov
sbb
xor
call
add
cmp
jns
jno
or
sub
pop
pop
int3
or
add
dec
adc
push
popa
jb
mov
mov
imul
mov
or
imul
das
fcmovu
adc
sub
jae
addr16
mov
inc
nop
adc
mov
jb
inc
in
ret
aam
add
fsubs
or
jb
fucomi
outsl
pushl
insb
push
jne
jb
or
gs
sbb
rorb
arpl
imulb
mov
imul
cmp
and
push
or
notb
inc
fs
push
adc
adc
add
out
xor
in
pusha
pop
push
jb
inc
fs
invlpg
imul
outsl
fs
and
pop
sub
jp
mov
mov
cltd
outsw
andps
push
jp
out
aaa
sub
js
jne
jae
pusha
or
mov
ret
popa
push
outsl
jb
push
cmovae
adc
or
sbb
xor
jne
inc
jbe
test
jp
inc
jb
inc
sub
and
sub
or
nop
rolb
mov
push
push
and
pop
xchg
das
push
hlt
or
xlat
pushf
lods
test
inc
insb
insb
push
sbb
add
or
in
jo
xor
and
mov
and
pop
mov
cmp
sbb
jnp
stos
pop
pop
mov
xor
sbb
subl
outsl
dec
cmp
mov
iret
and
scas
dec
mov
push
inc
arpl
jns
imul
popa
and
xor
adc
inc
xchg
mov
push
or
or
inc
jns
popa
mov
add
lock
outsb
ss
xor
push
into
data16
stos
cmovae
jae
mov
imul
push
loopne
icebp
pop
leave
sbb
insb
sbb
pop
fstpt
imul
or
stc
jo
add
gs
xor
jae
dec
gs
mov
mov
jnp
adc
fmuls
push
movsb
ss
add
andb
push
sbb
mov
mov
sbb
and
test
outsb
pop
xchg
dec
data16
add
pop
adc
push
inc
outsl
jne
adc
inc
push
cmp
xchg
add
imul
mov
fs
sub
movsb
scas
push
lock
dec
jecxz
adc
shrl
sub
pop
push
jne
in
ret
push
jns
adc
xor
rcr
ds
mov
xor
das
and
arpl
push
clc
xor
fmull
mov
dec
sbb
dec
mov
imul
jb
loop
imul
lods
mov
pop
inc
sub
aaa
idivl
loopne
popl
or
outsb
add
xlat
insl
mov
add
add
or
sub
pop
xchg
pop
or
add
adc
add
adc
or
ljmp
pusha
lods
dec
add
pusha
sbb
inc
add
push
adc
pop
sbb
adc
inc
dec
inc
inc
in
fists
jmp
and
xchg
inc
inc
push
xchg
outsb
mov
sub
repnz
push
jbe
inc
push
push
inc
or
sbb
cs
xchg
popa
out
mov
daa
or
mov
jae
or
out
sbb
sbb
xor
inc
push
andb
ja
dec
inc
daa
adc
insb
cwtl
loopne
jae
mov
sub
or
daa
jge
or
cld
mov
add
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
xor
inc
add
int3
inc
add
