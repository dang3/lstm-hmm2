push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
push
mov
push
mov
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movl
pop
ret
int3
push
mov
movl
pop
ret
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
movzwl
pop
ret
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
push
mov
push
call
add
sar
cmp
jne
movl
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
push
push
call
push
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
push
push
push
call
cmpl
je
call
push
push
push
push
push
call
movl
mov
mov
movl
mov
movb
lea
push
mov
push
push
call
test
je
xor
jmp
movl
lea
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
mov
push
call
test
jne
xor
jmp
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
mov
push
lea
push
call
mov
mov
mov
mov
movl
jmp
mov
add
mov
mov
cmp
jge
mov
add
movzbl
mov
movl
mov
add
mov
mov
movl
jmp
mov
pop
ret
int3
int3
push
mov
sub
mov
pusha
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
push
call
movl
movl
lea
push
push
push
call
cmpl
je
call
push
push
push
push
push
call
movl
mov
mov
movl
mov
movb
lea
push
mov
push
push
call
test
je
xor
jmp
movl
lea
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
mov
push
call
test
jne
xor
jmp
call
movl
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
add
mov
jmp
ret
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
jmp
call
mov
mov
pop
jmp
pop
ret
int3
int3
int3
add
add
das
and
jo
je
cmp
mov
add
sti
mov
fs
jb
lods
jns
pop
lahf
add
sti
mov
fs
jb
lods
jns
testl
jne
rclb
gs
das
fiadds
add
stos
gs
ret
mov
inc
add
mov
add
push
add
lods
inc
imul
jns
das
fiadds
add
je
dec
mov
popa
outsb
push
mov
push
das
fiadds
add
fldl
sbb
inc
add
inc
add
inc
add
faddl
sti
faddl
paddusw
pop
fldl
lock
arpl
mov
add
jmp
popa
fs
bound
stos
jns
add
sahf
add
les
xor
pop
mov
add
mov
cs
mov
add
stos
add
subb
fs
mov
add
insl
arpl
add
popa
mov
je
mov
outsl
arpl
fiadds
add
mov
je
mov
outsl
arpl
fiadds
add
scas
insl
popa
incl
add
add
mov
je
mov
je
int3
test
popa
jo
mov
outsl
int3
fldl
add
mov
xor
push
mov
add
push
scas
arpl
stos
dec
mov
in
das
jp
add
xor
add
das
xor
add
das
xor
add
add
das
xor
add
das
xor
add
das
xor
add
das
xor
add
das
sub
add
das
xor
add
das
xor
add
das
xor
add
das
xor
add
das
pop
add
das
pop
add
das
pop
add
das
pop
add
das
pop
add
das
fsubrp
add
fsubrp
add
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
add
fsubrp
add
fsubrp
add
fsubrp
add
fiadds
jmp
sub
add
sub
add
sub
add
sub
add
sub
add
xor
add
lea
jmp
sub
add
xor
add
sub
loopne
jmp
sub
add
xchg
fldl
jmp
insb
loopne
jmp
cmp
add
add
xor
add
sub
add
sub
add
sub
add
sub
add
or
add
sub
jmp
sub
addl
push
lock
push
loopne
add
lock
push
loopne
add
filds
add
filds
add
filds
add
loopne
add
filds
add
filds
add
filds
add
filds
add
add
cmc
add
xchg
filds
add
filds
add
add
push
filds
add
add
inc
filds
add
add
push
filds
add
add
inc
filds
add
filds
add
add
add
das
add
add
das
add
add
das
add
add
das
and
push
jno
add
stos
lods
add
add
add
cmpsl
add
add
add
das
add
add
das
in
add
repz
popa
add
and
das
add
or
das
add
add
das
add
add
das
lds
outsl
and
lret
sbb
das
ficomps
das
fsubrp
repz
jmp
mov
das
fsubrp
add
add
fsubrp
add
fisubrs
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fiadds
jmp
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
push
faddl
add
add
inc
faddl
add
add
push
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
add
fildl
add
fildl
add
fildl
add
fildl
add
add
push
fildl
add
add
add
das
add
add
das
add
add
das
add
add
das
add
add
das
add
add
das
add
add
das
add
das
add
movsb
add
shll
add
xor
movsb
add
test
das
insl
mov
add
ja
add
and
mov
add
in
add
mov
mov
fisubs
mov
fiadds
mov
fiadds
sub
sub
mov
fimuls
add
sub
pop
mov
fsubrp
mov
mov
fimuls
mov
ficoms
mov
fidivs
sub
push
mov
das
fisubrs
mov
sub
jg
sub
inc
mov
sub
or
sub
jmp
mov
mov
loope
mov
mov
add
loope
out
loope
aad
loope
loope
loope
outsl
loopne
add
loopne
xchg
loopne
add
loopne
mov
loopne
jmp
lret
loopne
jmp
xchg
loopne
leave
mov
add
xchg
loopne
xlat
mov
add
mov
add
loopne
imul
loopne
xchg
shl
add
add
shl
add
push
cmp
add
add
pusha
cmp
add
inc
add
sbb
add
inc
add
inc
add
mov
inc
add
testb
movb
push
inc
add
js
add
call
cmp
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
cmp
add
inc
add
addb
cmp
add
dec
dec
add
das
ret
stos
add
aad
add
stos
stos
add
test
add
pop
test
add
dec
test
add
popa
test
add
das
test
das
test
add
and
add
subl
add
add
test
das
imull
add
sbb
lods
add
sub
lods
add
xor
movsb
add
add
movsl
add
fidivs
mov
sub
insl
mov
sub
inc
mov
sub
cpuid
sub
xor
sub
mov
sub
repz
add
sub
lea
sub
sub
sub
jne
sub
popa
movsl
sub
mov
movsb
sub
popf
movsb
sub
mov
movsb
sub
add
sub
adc
ficoms
movsb
sub
add
lret
fldl
jge
fldl
imul
fldl
cmp
fldl
sub
fldl
adc
fldl
in
add
add
mov
fldl
dec
mov
add
fldl
pop
mov
faddl
cmc
mov
add
test
faddl
test
mov
add
test
faddl
xor
faddl
aas
stos
faddl
xor
faddl
cmp
data16
add
add
ljmp
arpl
add
pop
add
push
pusha
add
pop
pusha
add
cmp
add
inc
add
addb
addb
inc
faddl
add
add
dec
faddl
addb
inc
faddl
add
add
decb
add
faddl
add
dec
add
sbb
add
dec
add
aam
add
and
and
add
and
add
outsb
dec
add
das
mov
mov
das
shll
add
scas
mov
das
test
add
popf
mov
das
ret
mov
das
out
add
loope
add
incl
add
std
mov
das
jne
add
pop
mov
das
dec
mov
das
inc
mov
das
cmpsl
mov
das
add
mov
das
add
xchg
add
add
sub
cwtl
add
outsl
cwtl
add
fstps
add
daa
cwtl
add
xor
jmp
sub
pop
cltd
sub
setns
inc
cwtl
sub
push
cwtl
sub
cmp
cwtl
sub
pop
cwtl
sub
lret
lahf
sub
fstps
sub
fstl
sub
stc
xchg
sub
sub
sub
inc
cwtl
sub
sets
add
imul
sub
xor
cwtl
sub
xchg
cwtl
sub
push
cwtl
sub
pop
cwtl
sub
out
sub
out
cwtl
sub
lcall
sub
add
loope
imul
add
cmpsb
loope
aad
loope
fwait
cwtl
loope
push
enter
loope
fnsave
loope
lret
cmpsl
loope
roll
add
loope
out
loope
jecxz
loope
bswap
loope
sub
loope
sbb
loope
imul
inc
xchg
loope
lahf
xchg
loope
mov
loopne
xor
loopne
inc
mov
loopne
jno
loopne
shll
loopne
add
add
loop
add
xor
aam
add
aam
add
xor
add
add
imul
add
add
out
imul
add
imul
add
je
add
je
add
je
add
add
sbb
add
ss
add
jne
add
add
push
add
cli
push
add
cmp
add
push
add
das
xor
add
add
mov
das
rep
add
shrl
jnp
add
outsl
stos
add
popa
stos
add
cmp
add
daa
stos
add
stc
scas
add
sbb
add
insl
mov
das
pop
mov
das
test
mov
das
fwait
mov
das
in
add
std
scas
add
imul
das
and
add
add
faddl
scas
add
scas
subb
das
pop
in
das
pop
jge
sub
out
das
pop
xchg
scas
sub
in
mov
fsubrp
mov
fidivrs
scas
sub
in
add
pop
pop
scas
sub
clc
add
pop
pop
scas
sub
inc
scas
sub
out
das
pop
faddl
das
pop
xlat
add
pop
pop
add
pop
stc
add
pop
jmp
das
pop
testb
pop
aas
mov
fidivrs
add
add
pop
ljmp
pop
hlt
add
pop
call
add
pop
jmp
lods
sub
ljmp
fldl
pop
ret
test
fldl
test
fldl
xchg
fldl
xchg
ret
sub
fldl
adc
fldl
sbb
xchg
fldl
jnp
fldl
jmp
fcomp
add
add
enter
rcr
add
fldl
fnstcw
fldl
mov
fldl
jmp
scas
push
ds
cmovl
std
out
add
push
movsl
imul
aad
jae
pop
scas
push
sbb
rcrl
ficomps
test
mov
mov
stc
mov
vpslld
fisubs
fucom
cld
and
insb
pop
add
and
pop
inc
lods
add
xor
inc
xor
fdivs
adc
mov
sti
aas
xor
fdivs
adc
ds
adc
pop
cmc
aaa
dec
rcll
fbstp
add
loop
cmpsb
mov
loopne
lret
clc
pop
ja
xchg
das
push
mov
inc
mov
fisubrl
bound
sbb
lret
add
jne
xchg
lahf
jns
std
jge
xor
dec
aas
out
push
fsubrs
sub
add
dec
jo
or
mov
rcrl
call
fld
sub
jge
mov
pop
jno
pop
sub
add
jb,pt
add
int3
std
pop
jbe
adc
jno
push
fidivs
add
das
xor
cmp
ret
cli
xchg
add
in
push
popf
das
push
cs
cmpsl
mov
out
jo
in
jno
das
xor
cmp
jo
pop
jno
cmp
xor
xor
outsb
popf
cmp
in
jno
das
xor
cmp
ret
stos
mov
js
jno
das
xor
cmp
or
fdivrl
cmp
fsubrp
add
add
fstpl
mov
mov
push
cs
inc
lods
pop
sub
shrb
push
and
add
daa
das
adc
shrb
add
in
scas
xchg
xor
and
dec
orl
push
xchg
or
sbb
adc
mov
and
cmp
xor
insb
xchg
adc
sub
add
cmpsl
mov
jae
dec
jg
cmc
xorb
lret
dec
addb
xchg
faddp
cs
push
and
jg
xor
add
cwtl
add
or
xorl
lret
fdivs
add
or
and
sub
adc
xchg
cs
ja
addr16
adc
dec
std
ljmp
mov
xor
mov
std
incl
gs
add
jge
ds
jno
scas
insl
or
add
leave
data16
pop
cli
xchg
adc
push
push
sahf
jae
mov
add
roll
sub
adc
push
stos
mov
outsl
mov
std
xor
mov
mov
sarb
pushl
push
push
add
pop
pop
add
out
mov
ds
std
ljmp
aas
add
cmp
pop
or
rcrb
stos
lret
add
xor
mov
cmc
add
das
cmc
add
das
test
inc
das
stc
add
std
add
cmc
and
fsubrp
add
fdivrp
add
fsubrp
and
fucom
add
fimuls
add
add
fsubrp
and
fucomp
add
fcompp
add
fcompp
daa
in
add
fmulp
add
fldenv
insb
fdivp
add
fisubrs
scas
fnstsw
add
imul
insb
fimuls
add
fucomp
add
daa
insb
fimuls
add
fucomp
add
out
stc
daa
insb
fsubrp
add
fsubrp
add
fimuls
or
fucomp
or
or
add
add
aaa
jecxz
jmp
and
add
and
add
xor
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
clc
xor
add
xor
add
and
add
and
fidivl
lds
jmp
and
add
and
add
xor
add
xor
add
and
add
and
jmp
add
xor
add
and
add
and
add
xor
add
xor
add
xchg
adc
jnp
jecxz
fsubrs
add
aad
add
fmuls
add
and
inc
shrb
add
test
inc
aad
add
call
add
aad
add
aad
add
rcrb
add
add
aad
add
aad
add
rcr
add
xlat
pop
add
aam
add
aam
add
sarl
add
aam
add
aam
add
sar
add
pop
push
add
testl
adc
sub
mov
das
testl
xor
testl
or
testl
and
testl
add
testl
testl
in
add
or
cmc
or
das
cmc
or
cmc
or
cmc
or
das
cmc
or
das
add
das
cmc
or
cmc
or
das
cmc
or
cmc
or
gs
or
fsubrp
or
fsubrp
or
fisubrs
add
fsubrp
or
fsubrp
or
add
fsubrp
or
clc
add
fsubrp
or
fucomp
or
fsubrp
or
fsubrp
or
fucomp
or
fdivrp
add
fsubrp
or
jmp
or
fsubrp
or
jmp
or
fdivrp
add
fsubrp
or
jmp
or
rolb
jmp
and
add
add
xor
fiadds
jmp
and
add
xor
add
sub
add
and
add
and
add
cmp
stc
sub
jge
jmp
cmp
jmp
and
add
and
add
cmp
add
sub
xchg
add
and
add
cmp
fisubrl
ja
jmp
cmp
add
add
sub
xchg
add
jmp
mov
jmp
mov
jmp
repnz
jmp
adc
add
sub
xchg
jne
xchg
xor
add
or
add
and
add
add
add
inc
add
ljmp
add
push
jmp
sbb
add
fists
push
jmp
cmp
add
stc
add
das
pop
or
pop
or
das
pop
or
das
pop
or
pop
or
das
testl
push
das
pop
or
das
adc
ret
das
sbb
and
pop
or
pop
or
das
pop
or
das
idiv
or
pop
or
add
pop
or
das
pop
or
das
pop
or
das
add
incl
das
add
or
das
add
add
add
jmp
or
fdivrp
add
jmp
or
jmp
or
jmp
or
fucomp
or
fsubrp
or
fucomp
or
add
fisubrs
add
jmp
or
fsubrp
or
clc
add
fsubrp
or
fucomp
or
fsubrp
or
fsubrp
or
fsubrp
or
fdivrp
add
fsubrp
or
jmp
or
jg
jmp
xor
add
xor
xlat
add
and
add
xor
add
add
xor
jmp
jmp
xor
add
xor
fiadds
jmp
xor
add
xor
add
das
fildl
jmp
xor
add
xor
add
and
add
xor
add
xor
add
and
add
xor
add
xor
clc
sbb
add
and
add
push
out
add
jmp
add
add
clc
cmp
push
out
add
in
add
ljmp
in
add
in
add
ljmp
in
add
ljmp
xchg
push
add
in
add
sub
xchg
je
push
in
add
leave
add
or
inc
in
add
and
push
ljmp
add
inc
in
add
in
add
ljmp
das
pop
or
or
pop
or
das
sbb
push
das
pop
or
or
pop
or
das
cmc
std
push
das
pop
or
or
pop
or
das
pop
or
pop
or
pop
or
das
idiv
add
pop
or
pop
or
das
adc
mov
das
pop
or
add
pop
or
das
pop
or
das
idiv
or
pop
or
pop
or
das
pop
or
das
pop
or
insl
fsubrp
or
cld
sub
jmp
or
cld
insl
fsubrp
or
jmp
or
cld
cmp
fsubrp
or
fsubrp
or
fsubrp
or
add
fucomp
or
fsubrp
or
fucomp
or
fisubrs
cld
cmp
fucomp
or
fsubrp
or
clc
cld
and
jmp
or
fsubrp
or
loopne
jmp
xor
add
and
out
jmp
xor
add
and
jnp
jmp
xor
add
add
and
roll
jmp
xor
add
and
call
add
xor
add
and
idiv
jmp
xor
add
and
add
jae
add
xor
add
lods
add
pop
sbb
stc
and
jge
add
pop
add
mov
call
cli
jg
push
cli
aas
add
repz
add
push
jmp
push
add
cli
pop
add
repz
add
call
ja
stc
aaa
add
repnz
xlat
call
addr16
stc
daa
add
repnz
stc
pop
add
stc
inc
add
call
push
add
stc
add
push
call
jae
push
stc
xor
inc
repnz
add
testb
add
das
pop
sti
fs
pop
sti
and
pop
cld
stos
das
pop
sti
add
pop
sti
test
pop
sti
inc
das
pop
cld
ljmp
sti
pop
das
pop
sti
sbb
pop
cld
lcall
sti
jl
pop
sti
cmp
pop
cld
fisubrl
stc
or
das
pop
sti
insb
das
pop
sti
sub
pop
cld
mov
das
pop
sti
mov
pop
sti
dec
das
pop
cld
cli
das
testl
push
add
das
pop
sti
adc
or
ret
or
das
pop
sti
jb
fsubrp
sti
sbb
or
jmp
sti
or
fucomp
sti
sub
fsubrp
sti
insl
fsubrp
cli
or
stc
or
fsubrp
sti
gs
sti
adc
or
sti
gs
sti
adc
fdivrp
or
jmp
sti
add
add
fsubrp
sti
xor
fsubrp
sti
in
jmp
or
fsubrp
sti
jmp
sti
jo
fnstenv
scas
add
fs
add
push
lods
add
push
and
clc
aaa
jecxz
jmp
xor
add
xor
faddl
jmp
adc
add
adc
in
jmp
hlt
roll
jmp
add
aaa
jg
jmp
aam
add
aad
add
aaa
xlat
add
les
add
mov
add
movsb
jecxz
jmp
xchg
mov
clc
xor
add
sub
add
push
fistl
add
fildl
add
in
add
add
in
add
in
add
and
push
in
and
add
or
cld
out
or
out
add
add
push
out
add
out
add
out
add
out
add
out
push
popa
add
out
pusha
out
add
out
add
out
xor
add
out
add
out
add
testl
add
out
add
das
out
add
das
std
add
add
jmp
add
add
add
stc
add
das
adc
add
pop
add
das
mov
pop
mov
insl
xor
mov
enter
xlat
push
adc
fs
xor
fwait
mov
or
aad
jle
rol
lret
inc
mov
push
dec
mov
add
mov
lahf
and
mov
mov
mov
aas
push
mov
add
mov
movsb
mov
rcll
out
cmpb
pop
pop
lahf
imul
sub
int
cld
mov
cs
xor
wrmsr
hlt
sar
xor
and
mov
hlt
xchg
mov
cmp
cmp
call
xor
add
mov
pushf
lahf
mov
fwait
inc
dec
pusha
add
imull
ficoml
mov
fiadds
adc
mov
add
pop
enter
mov
lret
push
jo
xor
xor
icebp
in
pop
cmp
mov
loopne
das
clc
or
rorl
mov
in
adc
jge
add
or
add
or
jo
sub
incb
add
das
lahf
fcmovb
xor
js
cmc
fisttpll
addr16
in
roll
mov
cmp
xchg
call
repnz
imul
insb
sbb
lret
test
push
add
push
pop
or
inc
inc
mov
adc
mov
jb
cld
imul
adc
rorl
jns
dec
fdivs
mov
aam
aas
fisttps
outsl
fdivrs
popf
push
rcrl
imul
push
lods
mov
pusha
movb
testl
or
jecxz
add
dec
pop
repz
test
data16
outsl
dec
scas
data16
mov
loopne
popa
cmc
lret
fimuls
jg
fsts
sbb
lahf
mov
xlat
push
jne
mov
shrb
mov
outsl
xlat
xchg
lds
in
sub
mov
fwait
incb
adc
jmp
icebp
fstpt
int3
orb
mov
lahf
sub
mov
ss
push
lcall
sub
jbe
out
sbb
cs
das
lds
ja
xor
pop
cwtl
adc
movl
out
jl
or
jl
xchg
dec
jne
sbb
test
sbbl
jp
jge
movsl
add
lods
mull
cwtl
popa
les
mov
ret
adc
add
push
sub
jg
fbstp
or
inc
sub
jle
mov
subl
cmpsb
jne
jne
jge
jecxz
test
mov
jl
fxch
ljmp
and
cmp
vpacksswb
mov
or
sub
repnz
mov
ret
push
mov
movb
xchg
or
jns
sbbl
ja
jecxz
jns
push
cs
ficomps
fsubr
insb
jecxz
cli
aas
fiadds
xchg
cli
cwtl
mov
jnp
stc
mov
lods
rclb
cltd
add
fisttpl
dec
xor
xchg
add
icebp
pop
push
popa
ficompl
inc
in
mov
mulb
mov
sbb
mov
ud0
add
push
data16
andl
push
clc
jne
imul
insb
push
outsb
cld
or
cmp
dec
les
cmp
enter
clc
pop
shrb
ret
data16
outsb
sub
sub
neg
sti
fisubrs
or
add
mov
push
add
mov
gs
mov
add
pusha
mov
rol
fs
push
cs
xchg
pop
dec
pushfw
lahf
cmp
cmc
jmp
outsl
adc
push
jne
insb
in
movsl
add
pop
testl
sbb
jne
ss
xor
sub
xchg
andb
imul
nop
cmpsb
insl
outsb
cltd
icebp
jns
push
xor
shl
lods
add
ret
cld
hlt
ss
lods
inc
mov
sbb
out
pusha
cwtl
icebp
outsb
xchg
fldenv
jbe
sbb
gs
inc
cwtl
jle
scas
shll
ds
xchg
leave
ja
lods
loop
imul
das
inc
adc
add
push
mov
mov
call
outsl
testb
lret
pop
add
push
sub
dec
jp
mov
div
xchg
jmp
int
or
add
and
push
mov
mov
outsl
add
outsb
jbe
lods
cmp
mov
add
xor
adc
xor
mov
jmp
mov
push
insl
lods
mov
aad
fists
inc
loopne
push
jo
xor
cmp
cmc
ljmp
imul
pop
add
mov
lock
mov
dec
ret
push
fistl
gs
lea
xor
mov
or
mov
or
fcmove
pop
jle
xlat
inc
dec
jge
outsb
dec
scas
loope
ret
mov
xor
lea
jb
fidivs
int3
movl
in
in
cli
cmc
mov
bound
or
cmp
inc
stc
dec
pop
out
iret
push
push
das
call
comiss
xor
push
jo
and
das
std
xchg
sbb
or
iret
jno
jb
cs
mov
cmpsl
sbb
sarl
aam
fwait
sbb
or
xchg
sbb
fimuls
add
movsb
pop
cmp
movsl
cmp
and
and
or
ljmp
in
xchg
dec
fldl
gs
mov
iret
fdivl
std
push
imul
fsubp
stc
cmpsb
popa
mov
pop
jmp
adc
enter
lods
test
insb
mov
mov
into
ror
ss
or
movsb
add
jae
adc
add
imul
out
clc
cmpsl
xor
imul
out
add
das
cmp
inc
and
out
outsb
mov
stos
add
pop
push
dec
lret
mov
lock
mov
fildl
mov
lcall
xor
sbb
sub
ss
ret
jge
and
mov
add
scas
fldt
inc
or
mov
lret
outsb
roll
dec
cmp
mov
add
sbb
notb
or
dec
dec
xorb
test
xor
xor
or
sbbl
out
aad
shl
gs
xor
cltd
xlat
xor
pop
stos
add
negb
sub
add
pop
xor
lds
jo
pop
packssdw
pop
inc
jp
insb
pop
arpl
cli
lret
add
int3
stc
arpl
loopne
int3
xchg
scas
std
stc
mov
dec
mov
and
leave
mov
sbb
int
sub
push
jle
and
pop
adc
xchg
sbb
xorl
mov
inc
adc
in
out
dec
cld
das
outsb
and
jns
add
out
inc
cli
filds
pop
int3
int
mov
arpl
mov
xor
mov
jno
ret
cltd
xchg
dec
xchg
loopne
push
orb
xor
fstpl
aaa
sbb
aas
ds
cmp
mov
add
mov
jmp
lret
mov
adc
scas
out
pop
movsl
mov
cmp
orl
pusha
outsb
and
je
rolb
pushf
xchg
ss
test
lret
pop
leave
sbb
sti
lock
fstps
pusha
push
pop
rcll
add
fdivp
sub
fiadds
stos
fcoml
jle
add
lds
fsts
aas
mov
fs
cmp
outsb
cli
lahf
mov
ror
mov
xchg
jecxz
ret
inc
sti
aam
bound
cmpsb
int3
xchg
ret
cmp
add
push
push
and
repz
xorl
xor
call
adc
insb
adc
add
mov
adc
es
sbb
fs
leave
imul
cmp
sarl
in
lcall
in
cmp
sbb
and
xorb
or
mov
inc
xor
xor
xor
or
sub
int
add
imul
test
daa
dec
test
and
add
inc
out
arpl
and
jle
js
imul
cld
sub
mov
mov
pushf
adc
cs
jge
das
dec
lcall
sbbl
pop
out
fidivl
notl
jbe
sub
je
inc
aad
decb
jg
rorb
jl
cmpsb
cmpb
inc
js
add
mov
leave
adc
in
mov
adc
mov
cli
add
mov
sbb
xor
or
repnz
in
cmp
int3
dec
push
jmp
xchg
test
mov
and
out
xlat
ja
gs
fs
xor
js
or
jno
jb
add
imul
cwtl
bound
lahf
les
mov
push
xchg
subl
fistpl
push
add
movsb
and
add
add
je
xor
and
sub
adc
dec
cmp
push
outsb
test
mov
sbb
adc
jmp
push
cmp
inc
mov
cmp
push
inc
mov
lret
xchg
pusha
jl
inc
ja
les
fucom
fisubl
xchg
ret
push
ret
adc
out
jecxz
lret
add
xchg
jg
or
in
dec
rorb
cmp
ljmp
icebp
sti
es
scas
std
push
push
jne
subb
aad
clc
cli
add
mov
stos
cwtl
jnp
xchg
cmp
mov
add
lahf
repz
aaa
pusha
icebp
fcomp
and
jge
in
mov
test
negb
push
fcoms
xchg
movsl
fcmovu
lock
sbb
gs
dec
fbstp
fidivrs
bound
fldl
mov
imul
clc
mov
sub
lcall
shrl
rol
stc
and
xchg
pop
lds
add
outsb
popf
ror
iret
pop
sbb
and
push
ret
xchg
ret
in
rol
fisttpl
dec
lret
loope
mov
or
enter
or
mov
inc
int3
push
add
iret
adc
into
push
jo
xchg
cmp
sub
mov
movsb
xchg
jge
gs
das
ja
and
pop
sarl
cltd
cmp
cli
lret
mov
xlat
pushl
jle
xor
out
mov
jb
or
mov
pop
mov
movsb
inc
dec
add
xor
lds
sbb
pop
lods
ljmp
scas
sbb
xchg
stos
and
push
mov
sbb
test
xor
mov
aad
xor
movl
xchg
fisubs
cmp
mov
adc
mov
addr16
mov
mov
mov
jg
push
cmp
sub
cwtl
jle
inc
push
jg
mov
leave
jl
xor
inc
sbb
out
popa
leave
lods
xchg
hlt
fidivl
jecxz
sub
mov
mov
nop
loope
xchg
lahf
dec
and
xchg
add
mov
lcall
jne
mov
add
fiadds
xchg
add
out
mov
mov
mov
pushf
mov
mov
inc
and
les
les
out
or
sub
aad
sbb
repz
loope
sbb
pop
data16
notb
jl
jmp
mov
add
insb
push
fimuls
data16
and
je
adc
xchg
aam
out
sub
ret
dec
cld
testb
mov
mov
mov
sub
mov
jae
cmp
loop
mov
fimull
lret
xchg
movsb
xchg
pop
test
in
cmpsl
pop
xchg
cmpb
sbb
mov
fld
xor
repnz
add
in
pop
push
mov
push
clc
mov
sub
push
jno
dec
sub
and
sub
jg
jmp
inc
aad
fwait
std
insl
js
sahf
xor
add
xchg
lahf
jbe
sub
das
sbb
mov
das
push
test
pop
mov
dec
xlat
loope
adc
cld
repz
dec
push
xchg
sbb
mov
ret
jbe
enter
add
inc
and
sub
mov
leave
in
jl
mov
dec
popf
ret
cmpb
in
add
dec
ja
bound
mov
fnstsw
mov
repz
mov
push
outsb
push
pop
lret
in
xchg
fnstsw
jns
movsl
mov
sub
je
pop
pop
fisttpl
add
or
adc
sbb
xchg
popa
pusha
repz
dec
mov
mov
or
loop
pop
jp
push
ret
mov
aam
insb
add
sbb
sub
xor
mov
jecxz
cmpsb
sbb
inc
fs
lret
lods
mov
sbb
lahf
mov
sti
sti
mov
test
jecxz
lds
jnp
movsb
test
mov
insb
pusha
add
or
inc
sub
mov
jne
in
pop
fidivrl
inc
xchg
xor
adc
pop
fisttpl
scas
arpl
sahf
ret
subl
push
add
sub
push
arpl
loope
pop
or
push
sbb
mov
push
mov
scas
sbb
add
ja
je
xchg
mov
insb
and
jge
cmc
js
ds
rclb
shrb
inc
push
xor
dec
mov
pop
in
and
or
imul
scas
arpl
in
pop
fistps
pusha
or
stc
js
jp
sub
push
pushf
iret
fisttps
bound
aaa
xchg
and
dec
mov
mov
adc
xor
jp
lcall
xchg
decb
sub
adcl
pop
test
movsl
scas
push
sub
push
mov
jp
lret
pusha
iret
popf
xor
movsb
js
lcall
jno
adc
mov
icebp
add
stc
cmp
inc
add
sub
test
xchg
outsb
jae
pop
and
lcall
arpl
out
lock
mov
push
fwait
push
and
es
mov
dec
imul
call
mov
sbb
and
xor
cmp
ffreep
subb
mov
add
push
sub
or
push
lods
inc
and
dec
stos
cmpb
push
add
test
out
inc
jnp
pop
push
xchg
sahf
in
pop
xor
bnd
mov
imul
and
mov
sbb
scas
jb
lea
cli
loop
mov
pusha
push
or
xor
jno
sub
lods
xchg
sbb
xchg
mov
add
mov
mov
scas
inc
int3
jnp
cli
sub
mov
inc
ret
push
jb
int
leave
loope
jge
xchg
fdivs
fcmovnu
jmp
xor
xchg
loop
sub
out
setp
sbb
jnp
outsl
adc
mul
xor
jg
movsl
mov
mov
lock
sbb
sub
add
dec
adc
push
jns
repz
mov
fs
and
and
inc
inc
fisubrs
aad
mov
test
test
push
lock
push
mov
test
sbb
idivl
push
enter
pop
dec
jne
insb
sarl
cmc
sub
repz
cli
aas
in
stc
outsl
jb
fsubp
roll
add
in
inc
test
test
jae
mov
jae
test
insb
mov
dec
clc
inc
xor
insl
jecxz
mov
xlat
or
fmulp
xor
std
rcll
inc
aad
cmp
jno
or
push
xchg
sub
add
aaa
incl
adc
sbb
sbb
xchg
sbb
xor
roll
sub
xlat
adc
mov
mov
dec
insl
in
pop
push
cld
faddl
leave
int
add
pop
das
sti
cmpsl
test
fsubp
sbb
xchg
lock
inc
add
or
and
sbb
leave
fcompl
into
cmp
pop
mov
and
and
mov
sti
add
cmp
adc
jae
movsl
fidivl
arpl
mov
dec
leave
sub
xlat
jnp
rcl
arpl
jbe
add
pushf
mov
push
xchg
outsl
pop
shlb
xchg
pop
lcall
sarb
cmp
dec
push
inc
xchg
dec
xchg
lods
mov
jno
sub
jecxz
jns
pop
sub
add
enter
cmp
ja
fstl
and
xchg
and
mov
pop
or
sahf
cmpsl
test
shl
xchg
cltd
cmp
and
cld
jne
inc
orb
movq
jg
xchg
cmp
push
popa
and
xchg
mov
pop
rorb
fbld
jl
push
scas
in
jmp
repz
or
cli
in
cmp
ljmp
add
loopne
daa
arpl
sahf
mov
enter
enter
loope
push
sub
push
pop
std
gs
aas
hlt
ss
jmp
out
fwait
sbb
mov
loopne
cltd
jnp
test
cmp
outsl
nop
cmp
stc
stc
dec
mov
aad
mov
call
xchg
jle
xchg
ret
les
xchg
repz
xchg
data16
push
mov
push
sar
jbe
hlt
jl
sub
mov
jp
and
out
insb
insl
and
loop
sbb
out
and
xor
addr16
add
stc
jbe
inc
cld
inc
sub
add
jbe
jmp
loope
or
add
outsb
pop
mov
ja
dec
jno
iret
loope,pt
sahf
movsb
bswap
scas
dec
inc
push
ret
and
mov
xor
jne
stc
add
sbb
dec
popa
in
add
pop
push
adc
jl
jno
push
jp
mov
inc
into
mov
xchg
jecxz
mov
insl
aam
mov
iret
dec
pop
rol
add
imul
daa
xchg
mov
jo
xchg
push
xchg
add
add
ja
mov
aaa
dec
sbb
lods
notb
clc
and
stc
mov
push
lock
add
adc
cmc
and
and
push
ficoml
xor
mov
push
add
nop
pop
js
aas
add
les
fmulp
call
xor
fwait
mov
mov
adc
push
xor
lret
mov
and
xor
add
and
xchg
popf
add
pop
mov
cld
cs
add
iret
shrl
inc
aam
pusha
subb
xor
ret
add
stc
hlt
inc
lock
ficomps
mov
mov
dec
dec
or
xor
clc
pop
sub
rcll
pushf
sahf
adc
cltd
and
sahf
js
shll
inc
xchg
pop
xor
push
popa
dec
out
cmp
adc
xchg
xchg
aam
pop
fldt
lret
lcall
insb
sbb
mov
or
push
shrl
and
cmp
getsec
pop
ja
popfw
loope
insl
mov
enter
push
mov
scas
lds
aas
lahf
test
pop
int3
push
iret
xor
push
icebp
push
aad
pop
cmpb
sar
ds
incl
popf
and
gs
cmp
repnz
adc
roll
jns
or
pop
test
mov
aad
pop
fiadds
ficomps
jbe
push
pushf
mov
mov
adc
loope
and
stos
xor
pop
xchg
dec
and
insb
cmc
jne
dec
loopne
pop
dec
jmp
fwait
shlb
enter
loop
rclb
jbe
xchg
les
ds
test
xlat
mov
cli
xor
jbe
mov
lea
outsl
inc
int3
xchg
sub
add
hlt
jno
and
and
test
cmp
lcall
lock
out
testl
fisttpl
push
lcall
sub
push
clc
xlat
and
jnp
gs
mov
xchg
and
add
add
popa
push
xchg
out
push
andl
xor
stc
test
push
or
dec
imul
dec
sbb
je
cmp
xor
in
mov
push
movsb
jno
dec
mov
add
js
adc
mov
and
aaa
cli
lods
dec
push
mov
scas
aaa
cmp
add
inc
test
iret
and
lret
xchg
pop
dec
or
push
xor
jl
mov
hlt
jo
sahf
out
cmp
xlat
inc
add
in
mov
ret
addb
mov
cwtl
pushf
hlt
xlat
fnstcw
int
push
inc
cmpsb
jl
das
xchg
ljmp
xchg
add
push
jp
add
cmp
inc
jo
lahf
daa
pop
push
ficomps
mov
sbbb
add
dec
add
push
cmp
out
add
mov
sbb
push
dec
sub
ret
movl
or
xchg
gs
mov
repz
imul
enter
adc
scas
xchg
add
lahf
add
inc
jecxz
int3
add
frstor
les
pop
xorl
inc
aam
dec
mov
in
push
out
orl
sub
lods
or
popf
dec
mov
clc
adc
iret
jp
enter
push
jns
sbb
dec
xlat
je
pop
xchg
fs
out
push
jmp
repz
fistl
mov
lcall
xchg
pop
fidivs
xchg
fidivrs
fs
imul
cmp
add
jnp
addl
or
fstpl
sbb
dec
cmp
pop
xor
adc
cltd
stos
inc
push
jb
repz
mov
loop
adc
push
adc
test
shll
xor
in
es
pushf
lods
inc
jae
outsl
xor
add
jge
jecxz
or
lret
cmpsl
loope
sub
sub
inc
in
movhps
movsl
hlt
and
push
mov
mov
and
jb
loopne
pop
cmp
cld
xor
dec
dec
mov
xchg
lea
clc
aam
inc
cmp
jge
jp
imull
push
loopne
hlt
sub
cmp
add
shrl
lock
mov
std
jb
faddl
add
sahf
imul
pop
aad
les
mov
fcoml
insl
jge
xchg
movhps
cltd
mov
mov
pop
add
stc
fs
test
sub
adc
cmpsb
leave
call
xchg
and
add
fcmovnu
scas
popa
int
fucomip
into
sub
icebp
mull
shll
ficomps
leave
pushf
xor
pop
mov
sbb
fisttpll
iret
fimuls
xchg
test
mov
test
xchg
add
jg
pop
out
jle
adc
cli
test
ficomps
xor
add
jp
sbb
das
mov
add
lods
mov
lret
and
lret
inc
enter
enter
rcrl
ret
cmc
rcrb
faddp
lahf
sbb
frstor
dec
adc
push
pop
fwait
push
xchg
out
call
mov
jp
popf
cmp
cmp
push
jo
sar
pop
jno
loop
xor
repnz
add
lahf
dec
adc
mov
decl
push
add
sub
push
in
arpl
and
lods
dec
movsl
loope
fists
shrb
cld
aad
out
mov
and
xchg
push
fistpll
andl
std
lsl
fwait
cmp
cmp
mov
lahf
push
dec
dec
xchg
aad
loop
shl
mov
inc
mov
jl
and
mov
fisttpll
cmp
js
in
std
das
cmpsl
out
and
adc
fwait
cwtl
dec
loopne
scas
dec
and
dec
fs
inc
xchg
call
out
test
stos
push
imul
into
mov
or
pop
rorl
adc
xlat
push
jg
add
int3
cmpb
int
push
fistps
sbb
mov
lea
add
or
inc
cs
testl
into
out
in
mov
pop
test
push
addr16
arpl
inc
insl
sahf
and
arpl
cmp
hlt
into
push
jmp
dec
or
outsl
movsl
and
mov
add
cli
mov
jo
jb
xchg
or
push
sti
rcpps
mov
les
xor
jmp
js
jg
dec
mov
push
ds
or
xchg
int3
sub
dec
cli
jle
pop
dec
jge
aaa
pusha
dec
cltd
mov
push
fnclex
data16
adc
addr16
dec
nop
lods
shl
rcrb
add
adc
pushf
test
sahf
pop
cmp
mov
cmp
cmp
sbb
js
add
mov
push
stos
sub
mov
mov
jg
repz
inc
rolb
and
je
and
sub
lods
orl
popf
add
cltd
sbb
add
add
sbb
pop
aad
sbb
cld
pushf
jbe
adc
jne
pop
les
mov
into
push
push
iret
xchg
dec
lret
xor
loope
jb
ja
jae
mov
lock
sbb
sub
mull
jae
pop
in
jb
mov
pusha
adc
andl
mov
addb
xor
mov
push
shrb
stos
push
and
cmp
sub
add
ret
lods
fadds
lods
outsl
stc
clc
test
jmp
add
and
lock
das
loop
push
jbe
sub
inc
mov
sub
cmpsl
xchg
inc
rep
sti
stos
mov
xchg
popf
ret
popf
jb
ret
out
and
mov
add
scas
cmp
push
bound
fs
insl
mov
push
ds
testb
xor
mov
mov
subl
cmp
push
add
das
pop
push
addr16
pop
or
scas
xchg
das
and
pop
stos
sub
dec
scas
cmp
mov
mov
push
loopne
dec
add
mov
sub
jb
mov
cld
outsb
and
fsts
push
cwtl
push
popa
xor
andl
and
shl
mov
or
outsl
dec
sbb
jg
cmc
pop
sbb
mov
inc
cli
iret
rcr
mov
mov
mov
sbb
mov
mov
filds
adc
jge
mov
xor
ja
add
lock
int
cwtl
pop
or
ficoml
cmpsl
test
adc
rorb
notl
aas
pusha
mov
cmpsb
addr16
cmp
inc
jge
insb
nop
mov
dec
jbe
daa
cmpsl
dec
mov
cmp
xchg
out
aad
je
daa
insl
loope
add
push
pop
ret
aaa
mov
jmp
jl
add
mov
mulb
push
cmp
inc
negl
mov
scas
sar
sub
push
push
and
outsl
cmp
roll
aad
pop
sbb
outsb
mov
loope
ja
cvtpi2ps
es
xor
mov
enter
adc
hlt
sbb
sub
jg
add
in
sbb
add
es
cmp
repnz
sbb
or
jg
insb
jns
inc
add
hlt
sub
inc
xchg
popw
sarl
das
sub
popa
push
subb
sbbb
fucomip
dec
into
mov
dec
shlb
loop
outsb
add
dec
mov
std
bound
push
add
pop
nop
sahf
pushf
adc
cwtl
popw
fbstp
push
jb
out
xor
scas
das
jge
ljmp
pushf
cwtl
push
or
fucomi
inc
ret
test
add
es
pop
cmp
inc
mov
mov
mov
rorl
add
jle
sbbl
add
aam
mov
orb
add
xor
push
add
xor
mov
insl
push
mov
int3
movsl
lret
loope
mov
cmp
dec
gs
in
scas
jb
push
dec
jo
ret
jp
sarl
out
sub
cltd
add
nop
cs
addb
jp
shrb
fiadds
xor
mov
sbb
add
sub
iret
es
loope
stos
sti
mov
jmp
add
xchg
mov
mov
enter
arpl
mov
mov
jno
add
test
jmp
sti
daa
pmulhw
push
mov
jle
pop
adc
out
jne
sbb
test
imul
fstl
jnp
add
cmp
inc
movsl
lcall
dec
inc
aam
cmc
cmpsl
and
adc
aas
lock
pop
scas
mov
sti
mov
sbb
mov
add
xor
xchg
insl
fildl
movsl
fwait
call
sarb
push
and
push
call
xor
dec
mov
add
divb
cld
mov
jo
add
and
ja
xchg
sub
pop
xor
stos
adc
pop
andb
jge
jbe
add
adc
jmp
cwtl
jp
pop
and
xor
test
cmp
pushf
daa
pop
pop
enter
je
out
scas
aam
mov
mov
movsl
mov
in
adc
push
je
xlat
std
enter
pushf
mov
cmp
add
mov
in
shll
adc
push
roll
shlb
sbb
mov
call
add
lods
push
adc
pop
adc
test
xchg
mov
test
inc
and
orb
mov
movl
add
movl
add
add
movl
add
movl
add
movb
das
movb
das
movb
das
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubp
add
fsubrp
add
fsubp
add
fsubrp
add
fsubp
add
fsubrp
add
fsubp
add
fsubp
add
fdivp
repnz
push
add
fsub
push
and
repz
fsubr
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fiadds
ljmp
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
push
fiaddl
add
add
inc
fiaddl
add
add
push
fiaddl
add
add
inc
fiaddl
add
add
add
adc
add
adc
loop
add
loop
add
loop
add
loope
add
loope
add
loop
add
or
mov
or
shl
or
xor
or
inc
loop
add
loop
add
loop
add
loop
add
or
ret
add
or
das
stc
add
das
jns
or
add
cltd
add
das
sbb
or
pop
add
or
sub
or
jmp
add
das
sub
or
jmp
add
das
xor
or
add
or
adc
or
loope
or
loope
or
popa
add
das
icebp
add
das
jno
or
loope
or
add
popa
add
das
icebp
add
das
jno
or
fsubrp
add
fisubs
daa
fisubrs
add
fmulp
add
fiadds
daa
fimuls
add
fdivrp
add
fidivs
daa
fidivrs
add
fdivrp
add
fidivs
daa
fidivrs
add
fdivp
add
fisubrs
daa
fisubs
add
add
fimuls
add
daa
fiadds
add
fiadds
add
fidivs
add
fiadds
add
fiadds
aaa
sub
add
sub
add
add
sub
add
sub
add
add
sub
add
sub
add
add
xor
add
sub
add
add
add
xor
add
sub
add
add
xor
add
sub
add
add
xor
add
sub
add
sub
add
das
loop
add
loop
add
fimuls
add
fisttps
add
or
xchg
fimuls
add
or
repz
add
loop
add
add
fimuls
add
fimuls
add
or
arpl
or
and
or
mov
fisttpll
add
or
sti
fisttpll
add
fisttpll
add
or
sti
fisttpll
add
or
stos
fisttpll
add
fmull
add
loop
add
loop
add
repnz
das
jp
or
loop
or
sub
or
jp
or
add
movsb
add
das
movsb
add
or
and
or
les
das
les
or
inc
add
or
les
das
les
or
inc
add
or
add
das
fs
or
in
or
lods
add
das
lods
add
or
cmp
or
insb
add
das
insb
add
or
cld
add
das
ficoms
add
add
ficoms
add
fiadds
add
ficoms
es
add
faddp
add
fiadds
add
fiadds
add
fidivs
fisubs
add
fisubs
add
ficoms
add
fisubs
add
ficoms
add
faddp
add
fidivs
add
fidivs
add
fsubrp
add
fsubp
add
add
fisubrs
fisubs
fisubrs
add
fiadds
cs
add
sub
add
xor
add
sub
add
sub
add
aad
inc
sub
add
xor
add
sub
add
sub
add
sub
aad
jbe
aad
push
xor
add
sub
add
sub
add
xor
add
sub
add
add
sub
add
xor
add
sub
add
sub
add
sub
aad
pop
sub
add
mov
fildl
add
loop
add
fildl
add
loop
add
fildl
add
faddl
add
loop
add
fiaddl
add
pop
add
fildl
add
loop
add
pop
add
fiaddl
add
add
fildl
add
loop
add
fildl
add
fildl
add
loop
add
fildl
add
loope
add
loope
add
loopne
add
pop
add
pop
add
loop
add
loope
add
xchg
add
das
push
add
das
xchg
pop
das
inc
add
das
add
das
daa
add
das
scas
add
das
out
add
das
filds
das
pop
add
mov
add
das
scas
add
das
out
add
das
mov
pop
das
sti
add
das
xchg
add
das
fildl
das
addl
das
lret
add
das
arpl
pop
das
stos
add
das
mov
add
or
clc
add
das
fadds
das
pop
add
or
sbb
add
fdivp
add
add
fsubrp
add
fsubrp
add
add
add
fsubp
add
fmulp
add
fsubrp
add
fdivrp
add
fsubp
add
fdivp
add
fsubrp
add
add
fsubp
add
fmulp
add
fsubrp
add
fdivrp
add
fsubp
add
fdivp
add
fsubrp
add
add
fsubp
add
fmulp
add
fsubrp
add
fdivrp
add
fsubp
add
fdivp
add
fsubrp
add
add
add
fiadds
jmp
xor
add
faddl
out
fildl
loope
or
and
pop
lock
pop
jecxz
fmuls
jecxz
fmuls
repz
or
cmp
or
xor
or
sub
or
and
or
cmp
or
xor
or
sub
or
and
or
cmp
or
xor
or
sub
or
and
or
cmp
or
add
xor
or
sub
or
and
or
cmp
or
xor
or
sub
or
sbb
or
or
push
push
fmul
push
push
clc
int3
push
push
fmul
push
push
enter
clc
int3
push
push
fmul
push
push
fmul
push
push
enter
fmul
push
push
mov
int3
push
push
mov
push
push
js
push
push
cwtl
int3
push
push
cwtl
int3
push
push
mov
or
int
vmwrite
or
cmovns
or
mulps
or
cmovns
or
int
nop
or
movaps
adc
cmp
add
push
test
sbb
push
adc
stos
pop
adc
inc
test
sbb
and
sbb
pop
sbb
add
pop
fistps
inc
fistps
inc
scas
sbb
sbb
mov
sbb
sbb
fstpl
sbb
sbb
inc
lods
sbb
xor
mov
sbb
and
mov
sbb
add
inc
lds
sbb
sbb
loop
and
loop
and
rcrl
sbb
lret
pop
adc
add
add
dec
ret
inc
ret
cmp
jmp
xor
jecxz
sub
fistpl
and
rcrl
sbb
lret
pop
adc
add
dec
ret
inc
ret
cmp
jmp
xor
jecxz
sub
fistpl
and
aam
sbb
int3
and
ret
add
dec
ret
cld
and
hlt
and
ret
in
and
ret
in
sub
fsubl
and
add
movnti
int3
movnti
add
rcrl
add
dec
rcrl
dec
rcrl
dec
rcrl
dec
rcrl
dec
rcrl
xor
add
daa
fadds
repz
in
rorb
aas
rorl
idivl
rorb
out
xor
or
fstps
adc
cmp
int
sti
ds
adc
ds
adc
pop
lret
adc
pop
lret
adc
and
adc
sbb
adc
inc
lret
cmp
adc
add
inc
leave
adc
cmp
adc
imul
adc
pop
leave
push
push
pop
leave
push
push
sub
push
push
sbb
push
push
sbb
adc
pop
jmp
leave
adc
sbb
ret
cs
cs
faddp
sbb
faddp
sbb
into
ret
into
ret
ffreep
pop
sbb
ret
pop
sbb
ret
pop
sbb
ret
pop
sbb
add
ret
pop
sbb
les
sbb
sbb
sbb
sub
sbb
das
stos
sbb
xor
mov
sbb
adc
mov
sbb
sbb
sbb
sbb
xor
sbb
and
sbb
and
sbb
sbb
add
das
mov
add
mov
add
mov
add
addb
add
das
lea
add
test
add
jg
add
addl
add
lea
add
xchg
add
das
xchg
add
das
jg
add
mov
add
das
filds
das
add
add
fisubs
add
fidivs
add
fiadds
add
fdivp
add
fisubs
das
fiadds
das
fisubs
add
fiadds
das
fsubp
add
fsubp
add
fsubp
add
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubp
add
add
add
add
add
faddp
add
fidivs
add
fiadds
das
fisubs
das
fisubs
add
fisubs
das
fiadds
jmp
xor
add
pusha
pushf
jmp
and
add
xor
add
sbb
add
add
adc
add
or
add
pop
fiadds
jmp
or
ljmp
add
sub
add
sub
add
sub
add
sub
add
sub
add
xor
add
sub
add
sub
add
sub
add
aas
add
sub
add
sub
fiadds
stc
sub
add
sub
add
data16
add
adc
add
push
fisttps
add
fists
add
add
adc
inc
fists
add
adc
fists
push
fists
add
fists
add
add
fiadds
add
filds
add
filds
add
ficoms
add
loop
add
loop
add
fistpll
xlat
loopne
add
lcall
out
call
add
xchg
mov
add
fiadds
add
xchg
add
das
xchg
add
das
mov
adc
mov
adc
mov
add
lcall
das
pushf
add
das
lea
sbb
jle
sbb
jg
sbb
mov
sbb
stos
add
loop
sbb
das
ds
arpl
jecxz
mov
and
push
cmc
add
dec
cmpsl
out
outsb
cmove
jb
popa
out
push
cmp
jae
push
add
das
testl
in
fucom
add
fsubrp
subl
out
sub
push
add
and
add
xor
out
sub
pop
iret
mov
int
sarl
call
test
add
faddp
jecxz
push
shr
out
sti
mov
mov
and
add
out
or
loope
add
fidivrs
add
fwait
add
ret
ficomps
sahf
sub
add
xor
add
xor
add
pop
cwtl
incb
push
sbb
arpl
add
pop
add
xor
add
add
sub
add
insb
and
je
xor
add
in
es
int
and
sets
scas
in
es
mov
adc
addr16
add
fisttpll
jae
fistl
add
mov
push
add
into
jb
add
jb
add
jae
add
loop
add
add
loop
add
loope
add
loop
add
loop
add
jno
inc
fildl
add
loop
add
loop
add
mov
add
and
loop
add
add
cs
fisubrl
fiaddl
add
movsl
insb
outsl
test
mov
jb
jnp
push
das
pop
mov
andb
das
andb
das
andb
das
xor
or
in
imul
bnd
jmp
in
fisubrs
stc
stc
call
lock
stos
and
sub
add
jecxz
pop
xchg
add
fcomip
jae
shll
cwtl
lods
in
sub
xchg
lcall
and
aas
das
or
aas
das
mov
cltd
add
test
pop
add
fnstsw
add
out
das
fisubrs
in
or
out
inc
jecxz
xchg
jmp
add
fsubrp
add
das
fsubrp
add
fsubp
add
fsubrp
add
fsubp
add
fsubrp
add
fucomip
add
fucomip
add
add
fucomip
add
loope
add
fucomip
add
fucomip
add
sub
loopne
pop
xor
jmp
add
sub
add
xor
add
sub
add
xor
add
sub
add
xor
jmp
sub
jmp
aaa
mov
push
ljmp
add
xor
add
sub
add
xor
add
sub
add
add
xor
add
sub
jmp
xor
add
sub
add
lods
pop
add
sub
add
lods
pop
add
sub
add
lods
and
cmc
sub
add
cltd
and
in
fiadds
adc
fiadds
cmpsb
jns
add
jmp
adc
add
add
xchg
pop
inc
add
add
ss
inc
add
add
inc
add
add
or
add
add
filds
add
fiaddl
add
pop
inc
add
fiaddl
add
pop
inc
add
fiaddl
add
pop
inc
add
flds
add
inc
add
flds
add
inc
add
flds
add
adc
mov
adc
mov
add
negb
fiaddl
add
pop
inc
add
sti
add
das
dec
addb
addl
xchg
add
add
pop
addl
insl
add
das
add
add
das
jge
add
jno
inc
das
mov
add
lods
add
das
int
inc
das
mov
add
lea
add
xchg
jle
das
mov
add
jns
add
jge
inc
das
test
add
test
add
xchg
pop
inc
das
das
pop
inc
das
test
add
nop
or
sahf
or
mov
cmp
add
das
fisubs
add
ficoms
add
fisubs
outsl
fdivrp
add
fidivrs
add
fidivs
add
fiadds
add
ficomps
add
fisubs
add
fisubrs
add
ficoms
jge
fnstsw
add
fdivrp
jl
fisttpll
jl
fstpl
jl
frstor
add
add
fsubp
jl
fst
add
fimuls
add
fidivs
outsl
fiadds
jl
fiaddl
adcl
push
add
sub
add
sub
add
arpl
add
xor
add
push
push
add
inc
push
add
into
add
push
add
sub
add
xor
add
push
add
add
add
add
sub
add
sub
add
jecxz
add
sbb
add
sub
add
sub
and
push
inc
add
fisttpl
jp
inc
add
sbb
push
pop
inc
add
pop
inc
add
pop
inc
add
add
mov
fildl
add
add
pop
inc
add
inc
add
pop
inc
add
fiaddl
add
fimull
add
inc
add
pop
inc
add
flds
pop
inc
add
pop
inc
add
lods
add
das
mov
or
roll
or
aad
inc
das
fiadds
das
insl
xchg
outsb
add
adc
add
inc
das
add
dec
test
inc
add
das
pop
test
stos
add
das
dec
test
das
add
inc
das
mov
test
aas
add
das
in
xchg
xchg
add
das
in
inc
das
loope
or
mov
inc
das
cltd
add
das
jns
inc
das
fimuls
xor
fnsave
add
ficoms
ficoms
add
fisttps
outsl
fidivrs
jp
pop
mov
cltd
add
add
and
ficomps
sbb
inc
subb
add
fimuls
subb
add
fidivs
subb
add
fiadds
out
fstpl
xor
push
sub
addb
fstpl
add
fisubs
xchg
fldl
add
fimuls
xchg
fnsave
fimuls
xchg
fldl
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
mov
add
sub
add
mov
add
mov
add
sub
add
sub
add
sbb
add
sub
add
add
mov
add
loope
inc
mov
add
mov
add
adc
adc
add
popa
inc
add
or
add
adc
lret
add
fistps
add
bound
out
or
push
arpl
cmp
add
push
arpl
filds
bound
add
nop
fisttps
sahf
bound
pop
fisttps
add
fisttps
add
fisttps
jb
inc
add
fists
add
inc
add
loop
add
inc
add
ja
xor
pop
test
loope
or
add
add
das
push
test
std
add
das
add
add
das
std
test
jae
adc
test
add
add
fldl
das
xchg
addb
add
dec
addb
add
inc
das
loop
or
xor
add
jge
inc
das
xchg
push
das
lea
pop
das
movsl
addb
add
das
jne
inc
das
fisubrs
and
shr
xor
xor
fidivrs
add
ficomps
add
add
fisubrs
call
inc
fiadds
pusha
fisubs
call
and
repz
sub
ret
call
cmp
mov
and
sahf
add
scas
call
cmp
out
call
pop
faddp
call
cmp
imul
pusha
fiadds
sub
out
push
fiadds
cld
sub
leave
add
mov
xor
add
xor
add
leave
add
repz
leave
add
sub
add
leave
add
xor
add
or
add
xor
add
or
add
out
lods
or
add
out
or
leave
add
mov
add
enter
in
jno
enter
fldl
push
add
enter
loope
cmp
sub
add
add
fcompl
or
add
loop
add
jbe
add
ja
add
dec
add
ja
add
and
jle
ds
fsubrl
add
ds
fildl
jg
add
jg
add
fistl
pop
jg
add
jg
add
add
sbb
lcall
add
jg
add
je
add
je,pt
add
outsb
add
das
faddl
or
adc
aas
das
jo
cmp
dec
jmp
das
out
sub
das
pop
add
aas
das
xlat
add
das
inc
jmp
das
xchg
add
das
mov
add
aas
das
hlt
add
add
das
imul
or
xor
add
das
das
dec
add
cmc
ljmp
mov
aas
das
roll
das
xchg
call
or
jno
aas
das
fidivs
and
scas
jmp
sub
cmpsl
jmp
cmp
fmulp
add
jecxz
cmp
arpl
ljmp
stos
ljmp
and
stos
ljmp
outsl
ljmp
dec
ljmp
pop
ljmp
addr16
jmp
cmp
out
das
fsubp
add
fsubrp
add
fiadds
mov
test
add
fiadds
out
sub
add
leave
test
in
sub
add
cltd
test
jmp
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
or
and
sub
sub
pushl
xor
pop
int3
xor
jmp
or
popa
add
add
imul
xlat
or
roll
add
sub
pop
leave
lret
popa
gs
jno
imul
cli
lea
test
je
mov
jle
xchg
loopne
add
loopne
add
loopne
add
loopne
add
add
push
loopne
add
add
inc
loopne
add
add
push
loopne
add
add
inc
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
add
loopne
add
loopne
add
loopne
add
filds
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
in
lcall
fsubl
mov
js
pusha
pushl
pusha
ljmp
pusha
jmp
pusha
lcall
pusha
call
pusha
decl
pusha
incl
add
add
sub
pop
push
sub
pusha
jmp
insb
ud2
sub
pusha
decl
add
incl
or
clc
repz
push
frstor
call
adcb
rcr
adc
addl
cmpb
rolb
popa
mov
daa
popa
test
pop
popa
mov
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fiadds
jmp
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
xor
add
sub
jmp
xor
jmp
sub
jmp
xor
jmp
sub
jmp
xor
jmp
sub
add
xor
jmp
sub
call
add
add
add
add
fcos
add
add
fcos
add
fcos
add
fcos
add
fcos
add
fcos
add
fcos
add
fcos
add
fcos
incl
faddl
add
faddl
add
faddl
add
add
push
faddl
add
add
inc
faddl
add
add
push
faddl
add
add
inc
faddl
add
faddl
add
faddl
add
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jbe
add
jne
add
or
xor
femms
sub
cmp
notl
and
lcall
or
and
sub
lret
cs
scas
xlat
adc
rcll
inc
mov
push
cmp
add
push
test
out
dec
out
xlat
rcrb
aam
inc
pop
rcr
and
dec
sti
ret
out
testl
rcrb
or
sbb
add
subl
mov
jo
mov
insb
mov
push
jbe
pushaw
jp
bound
pop
add
roll
aad
stos
dec
leave
dec
scas
pop
mov
xor
inc
movsl
cmp
test
jno
xor
lret
lods
into
cmp
xchg
and
add
fimuls
and
adc
or
std
outsl
repnz
in
cli
std
fidivrl
jmp
xor
add
in
daa
in
or
cmc
aas
rcll
sbb
sbb
es
and
xor
sub
ljmp
xor
int
aaa
out
fnstcw
cmp
add
andl
jg
decb
ljmp
jae
lea
cltd
js
lcall
inc
rcrb
dec
dec
lret
dec
xor
ret
push
into
cmp
cli
xchg
jl
push
arpl
xchg
imul
xchg
pushf
bnd
cwtl
jl
xchg
sbb
add
nop
movsw
mov
enter
les
test
mov
adc
mov
mov
inc
ret
inc
call
leave
dec
into
loopne
xor
fdivl
cmp
aam
cmp
shlb
popa
out
int
ljmp
push
bnd
push
idivb
pop
cli
je
push
jo
sbb
add
das
xchg
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fbld
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
add
fisubs
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fiadds
jmp
sub
add
sub
add
idivl
jmp
sub
add
sub
add
sub
add
sub
add
sub
add
ja
push
jmp
sub
add
sub
add
sub
add
sub
add
jns
data16
ja
pop
ja
jle
sub
add
sub
add
sub
add
sub
add
sub
add
pop
jns
idivl
push
idivl
jmp
sub
add
xchg
add
xchg
add
push
fldl
add
add
inc
fldl
clc
inc
fldl
js
fldl
add
add
inc
fldl
add
add
loope
call
fldl
add
fldl
add
add
fldl
adcb
add
push
fldl
add
fldl
add
fldl
add
add
faddl
add
loope
inc
loope
add
faddl
add
faddl
add
faddl
add
faddl
add
loop
add
bound
add
jae
sbb
mov
sbb
xor
jo
add
scas
xchg
sbb
clc
sbb
jne
adc
add
jne
adc
push
add
inc
mov
sbb
jae
adc
jae
adc
add
add
das
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
fsubp
add
fsubp
add
fsubp
add
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fmulp
push
dec
ffree
cmp
frstor
fisttpll
dec
fstp
scas
add
test
mov
add
add
mov
or
fucom
mov
mov
fbstp
mov
xor
mov
or
stc
clc
lret
add
jp
ret
push
pop
inc
scas
pop
and
jg
aas
call
push
sub
and
mov
into
sub
sahf
leave
aas
loopne
add
std
adc
das
xor
mov
pop
stc
inc
sbbb
lods
ljmp
sbb
add
dec
adc
nop
test
inc
push
jne
dec
pushf
aad
inc
out
adc
ret
dec
cmc
cmp
test
sub
aam
or
pop
pop
cli
push
cmp
sub
dec
cmc
mov
xor
rcrl
ret
dec
lods
add
hlt
xor
jmp
jp
outsl
ret
cmp
dec
jg
enter
mov
mov
add
lahf
jae
push
pop
jns
call
mov
add
add
loop
add
pusha
add
add
lcall
das
out
add
mov
add
pop
pop
add
lcall
das
pop
add
das
loop
add
hlt
add
das
pop
add
das
fiaddl
das
cmc
add
das
movsl
add
das
mov
add
das
es
fsubrs
sbb
pop
cs
add
add
fstl
add
fnstsw
xor
xchg
add
fnstsw
sub
jns
add
je
jp
in
fcompl
fstl
in
pop
add
loopne
add
fldl
or
inc
add
fdivl
add
fsubrl
jb
movsl
add
fcompl
add
fsubrl
add
movsl
add
fstpl
add
fnsave
add
fnsave
add
add
xchg
add
add
add
sub
add
out
ds
add
or
dec
sub
decl
mov
incl
loope
inc
sub
call
xlat
decl
sub
call
sub
add
sub
or
add
sub
in
fisubrs
xchg
add
xor
incl
sub
xor
decl
scas
call
sar
pushl
xor
mov
or
mov
or
mov
fistpl
add
insb
add
fistpl
fisttpl
add
fiaddl
add
pop
add
sbb
inc
fldt
push
fistpl
hlt
fnstcw
add
fsts
jmp
sub
clc
fnstcw
add
fsts
add
fldenv
add
fisubl
movsl
fstl
add
frstor
add
fstl
add
frstor
mov
fisttpll
faddl
add
fsubrl
add
cmp
push
cs
add
cs
add
push
add
add
cs
add
sbb
push
cs
add
sbb
das
or
pop
and
sub
mov
inc
cs
dec
cs
aaa
cs
cs
loope,pn
imul
push
ds
or
pop
and
or
lcall
sti
jmp
bnd
mov
pop
dec
push
movsl
pop
pop
push
cmpsl
pop
pop
push
test
or
dec
pop
adc
ds
in
scas
aaa
pop
jecxz
cmp
lea
cmp
xchg
scas
fwait
pop
xchg
scas
xchg
pop
test
test
jg
shrb
jno
fsubrl
arpl
mov
scas
push
pop
mov
dec
pop
stos
scas
daa
pop
mov
scas
sub
imul
or
movsb
or
lods
or
or
lods
scas
or
lods
mov
jmp
lahf
xor
aaa
mov
lods
daa
xchg
xor
add
aaa
nop
xor
daa
jle
fwait
daa
jge
lcall
xor
js
aas
daa
xchg
ss
test
and
test
and
xorl
daa
xorb
aaa
xorl
cmp
imul
daa
push
xor
aaa
push
xor
loop
inc
xor
push
ss
push
sub
mov
push
stos
xor
push
movsb
xor
push
add
add
in
push
shl
and
push
iret
in
push
mov
in
push
lret
push
lret
in
push
cwtl
in
push
mov
sub
push
cmpsl
in
push
add
xor
cmc
jecxz
push
repnz
push
arpl
xor
inc
in
push
inc
in
push
ds
push
pop
in
push
in
jecxz
push
es
push
daa
in
push
xor
inc
push
xor
add
in
push
and
inc
push
xor
inc
push
jno
inc
push
pop
fisttps
das
sahf
add
mov
add
fwait
add
add
sub
add
inc
add
inc
add
dec
add
push
add
sbb
push
sub
add
and
push
sub
push
xor
push
sub
xor
pop
sub
pop
xor
pop
add
sub
pop
xor
add
add
sub
pop
xor
add
push
cmpsb
add
xor
add
xor
pushf
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
test
pop
loop
add
loop
add
add
mov
add
loop
add
add
add
loope
add
xor
push
loop
add
sbb
inc
loop
add
loop
add
loop
add
loop
add
loop
add
loope
add
loope
sbb
sbb
add
mov
mov
mov
sub
pop
add
xchg
sub
add
adc
add
mov
into
add
sub
les
sub
ret
sub
roll
movb
lds
sub
movl
sub
int3
add
sub
fsubrl
add
fcompl
add
fsubl
add
add
and
fcoml
add
loopne
add
fildll
out
fildll
add
fists
add
fildll
add
fbld
add
fbld
add
fiadds
add
xchg
jp
mov
imul
add
fimuls
add
fiadds
and
fisubrs
aad
scas
add
add
lret
add
sub
add
sub
add
sub
add
sub
nop
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
xchg
sub
cwtl
sub
cltd
sub
lcall
pushf
sub
popf
sub
sahf
sub
std
lahf
sub
std
mov
std
mov
sub
std
movsb
sub
std
movsl
sub
std
cmpsb
sub
std
cmpsl
sub
inc
inc
fmull
lcall
fmull
lcall
faddl
sbb
jp
push
incl
out
sar
fcmovnb
aad
sar
aam
int3
dec
fcmovnb
inc
fstpt
mov
cwtl
out
fistpl
fistpl
in
fstpt
ljmp
call
fisttpl
sti
and
mov
nop
ret
sub
and
je
and
cmp
inc
cmp
inc
push
inc
and
inc
and
dec
and
and
xor
and
sub
and
add
sbb
and
or
test
leave
and
jmp
and
fistpl
and
mov
cmpsb
ret
std
and
mov
and
pop
and
fwait
mov
add
daa
and
push
and
imul
add
mov
dec
push
and
push
and
push
and
add
arpl
and
arpl
and
and
or
push
or
push
or
push
push
and
fwait
push
cmp
mov
mov
and
push
mov
and
add
and
push
psubq
dec
push
clc
add
add
clc
add
clc
add
clc
add
adc
push
nop
pop
unpcklps
or
pop
clc
or
push
clc
adc
adc
adc
sbb
and
movsl
mull
dec
inc
rcpps
andps
andnps
push
push
dec
jmp
push
dec
loop
pop
dec
in
push
pop
dec
add
pop
push
decl
add
movlps
sub
ucomiss
movsl
push
sub
add
cvtdq2ps
cmp
pop
push
fisubrs
or
and
dec
mov
xor
outsb
mov
and
push
sarb
push
inc
mov
cmp
xor
adc
push
cld
mov
ret
mov
mov
loope
lods
or
fnstcw
enter
les
mov
mov
mov
mov
jge
add
and
es
cmp
es
xor
es
sub
es
and
cmp
mov
and
sub
and
adc
repz
sub
es
and
daa
add
push
daa
add
aam
repz
and
add
and
pop
in
cmpsb
and
xor
and
sub
and
cmp
subb
and
cmp
and
sub
and
jl
sbb
xchg
rclb
and
rorl
and
sub
pop
roll
and
mov
and
into
adc
add
iret
add
and
into
aam
cmp
roll
sub
aad
cs
fadds
cld
rcr
add
rcl
faddl
lock
add
mov
loopne
rcr
add
das
inc
push
jecxz
dec
push
in
loop
in
jmp
or
call
add
sub
or
add
push
lar
push
lsl
pop
sub
add
cmp
sysret
xor
invd
sub
wbinvd
and
ud2
xor
sub
prefetch
mov
adc
xor
adc
inc
adc
and
adc
in
adc
jmp
adc
loop
adc
cmp
pop
adc
rcrb
add
aaa
rclb
rclb
and
sarb
adc
shlb
adc
sub
adc
daa
adc
sub
dec
shrb
adc
sub
dec
shlb
adc
sub
dec
shlb
adc
shrb
adc
shlb
adc
shlb
adc
shrb
adc
shlb
add
sbb
adc
mov
pop
sarb
sarb
adc
xchg
adc
add
test
mov
aas
cmpsb
push
mov
movsl
push
mov
movsb
push
cmpsl
pop
mov
push
mov
push
js
aas
sbb
dec
aas
sbb
dec
aas
sbb
inc
pop
sbb
dec
pop
sbb
inc
pop
pop
cmovno
push
cmovo
adc
movlps
adc
add
add
cmp
psubw
push
psubb
or
psubd
or
fnsave
or
aam
or
fbld
or
cmp
verw
into
pop
push
out
into
push
push
cmpsl
iret
das
xor
xor
jb
xor
arpl
xor
jo
xor
xor
xor
aaa
xor
iret
cmp
mov
iret
cmp
stos
iret
cmp
or
xor
add
iret
inc
xor
iret
aas
xor
iret
inc
xor
rolb
iret
inc
xor
iret
inc
xor
rolb
out
iret
dec
xor
iret
inc
xor
xor
jmp
xor
jb
dec
ds
or
ds
xchg
xchg
push
mov
push
mov
push
orl
mov
decb
decb
or
pop
orl
pop
or
pop
add
ds
pop
testl
popa
push
stc
or
sbb
push
adc
sbb
push
adc
or
push
out
or
ds
or
out
mov
or
out
cmpsb
or
mov
out
leave
or
out
orl
out
mov
xchg
test
test
mov
je
orb
out
orl
fsubr
dec
or
inc
or
cmp
or
psignd
push
cmp
out
cmp
loopne
sbb
scas
push
adc
stos
push
sbb
or
push
add
inc
out
add
add
ss
adc
ss
adc
test
test
mov
xchg
and
incl
or
and
int3
jge
dec
int3
andb
int3
jg
dec
int3
andb
int3
andl
push
int3
andl
mov
and
mov
add
sub
add
xor
fiadds
loop
fiadds
fldl
add
add
adc
fiadds
cli
add
fiadds
add
add
dec
filds
add
adc
add
push
adc
add
inc
adc
add
adc
add
sub
add
inc
adc
add
sbb
add
or
add
sbb
add
dec
adc
add
add
adc
aas
loop
add
add
sbb
add
add
adc
add
mov
fiadds
add
pusha
cmp
das
dec
add
das
lds
add
and
aaa
add
add
das
sarb
add
dec
add
das
cmp
das
mov
add
mov
add
push
add
add
adc
cmp
add
das
hlt
add
das
fidivrl
add
and
add
mov
add
das
mov
add
das
pop
cmp
das
loopne
add
into
cmp
das
filds
das
ret
cmp
das
in
add
lods
cmp
das
out
add
fiadds
add
fidivs
add
fisubs
das
fmulp
add
ficoms
das
fidivrs
aaa
das
ficoms
add
das
fiadds
add
ficoms
add
fiadds
das
ficoms
das
fimuls
aaa
das
fdivrp
add
fidivs
aaa
das
fiadds
add
fidivrs
aaa
das
fimuls
add
ficomps
add
ficomps
add
fidivrs
das
faddp
add
fiadds
jl
fiadds
les
add
fiadds
xchg
add
add
fldl
xchg
add
fldl
xchg
sub
add
pop
fiadds
subb
cmpsl
pop
fiadds
pop
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
fiadds
das
pop
fiadds
loope
fiadds
cs
add
add
sub
add
adc
add
add
adc
add
adc
add
adc
add
sgdtl
test
add
dec
adc
add
adc
add
adc
add
adc
add
add
adc
add
add
xchg
adc
add
add
test
add
push
loop
add
add
loop
add
adc
add
loop
add
adc
add
mov
add
add
arpl
add
add
das
out
xor
das
mov
xor
das
mov
xor
das
addb
das
add
arpl
add
movsb
xor
das
adc
call
jg
dec
ret
push
stos
jg
icebp
jl
xlat
adc
dec
movsb
and
cmp
mov
mov
xorl
repz
cmc
cmc
imul
ret
xchg
loop
pop
push
pop
or
in
movsb
mov
add
jno
inc
and
adc
dec
nop
repnz
jle
stos
add
outsb
add
push
mov
mov
mov
rcll
in
fnsave
mov
push
or
sub
mov
ds
mov
cmp
xchg
cmc
sub
fdiv
sbb
in
dec
adc
cmc
pop
adc
mov
inc
pusha
dec
das
mov
xchg
imul
daa
mov
push
push
push
addr16
lea
xor
add
xor
inc
inc
xor
in
pop
cmp
and
xchg
test
mov
inc
adc
and
sub
add
xor
iret
xor
pusha
xor
outsl
xor
jg
fwait
adc
int
mov
aas
add
pop
add
push
sub
sub
sub
xor
xchg
dec
and
dec
xor
dec
inc
xor
add
push
push
xor
sbb
sub
aam
pop
cmpsb
addb
ja
in
icebp
push
pushl
dec
shlb
dec
loop
xor
xor
dec
add
mov
push
bound
jp
loopne
push
sbbl
dec
xchg
xor
mov
mov
bound
clc
loope
cltd
fadds
add
xchg
insl
dec
das
lock
mov
xchg
shll
out
sub
fcmovu
cli
xor
clc
inc
pop
icebp
cli
push
inc
sbb
arpl
and
jae
pop
fdivp
dec
inc
dec
shlb
jge
in
popa
data16
push
jns
xchg
scas
dec
rcrl
jecxz
loopne
repz
cli
add
xor
adc
stc
and
cs
movsl
adc
fldl
add
add
shrl
mov
and
clc
ret
sbb
roll
fsubp
mov
popa
les
jle
jns
adc
and
inc
movd
popf
pop
ret
int3
aas
jmp
push
cwtl
jmp
push
mov
jmp
pop
mov
add
jne
xor
fwait
dec
imul
jo
xor
fildl
add
lea
xor
in
xor
in
dec
adc
in
dec
adc
in
push
adc
mov
std
xlat
mov
loopne
jne
fs
sub
loope
lods
call
mov
mov
fdivrs
in
mov
mov
sbb
dec
ss
cli
dec
stos
dec
js
cmp
inc
xor
enter
mov
add
jle
cmp
pop
sbb
xor
cmp
pop
imul
es
push
xchg
cwtl
orb
and
pop
fisttps
mov
rcr
xchg
imul
or
cmp
int
lock
gs
loop
daa
arpl
push
add
imull
push
nop
sbb
push
push
insl
sar
mov
dec
mov
xor
dec
lcall
xor
negl
mov
iret
repnz
cld
jle
fcomps
xchg
fstps
dec
mov
lods
dec
shll
inc
dec
in
in
dec
hlt
ss
lret
xchg
mov
add
xor
std
das
je
cmovo
jbe
into
inc
dec
cmp
sbb
stc
inc
and
das
fsubr
movsl
dec
iret
push
out
add
int3
jecxz
mov
or
lods
jb
daa
mov
or
mov
inc
hlt
sti
out
fs
call
imul
xchg
mov
cmp
int3
push
cmpsl
push
outsl
push
pusha
fcmovnu
jno
add
in
pop
adc
in
lods
add
jg
dec
cmp
mov
push
pop
test
add
pop
cltd
push
jo
mov
cmp
adc
lock
adc
icebp
jle
mov
add
fnstsw
xchg
cwtl
or
jns
call
mov
mov
cld
sbb
lcall
lods
add
pushf
popf
ret
mov
fmul
sub
sub
pusha
idivb
cmc
movsl
xlat
clc
std
jb
cmp
pop
sub
add
mov
cmp
mov
shlb
xchg
fstl
xor
stos
and
imul
push
aam
lds
jno
imul
mov
jl
inc
xchg
inc
pop
push
cmpsb
xor
int
cmpsb
dec
pop
and
adc
xlat
push
xchg
std
ss
sbb
ret
mov
add
push
pop
dec
test
ljmp
shll
inc
loop
push
dec
mov
sbb
mov
inc
push
loop
or
jmp
jb
test
imul
jae
xchg
mov
push
das
xchg
rep
xchg
test
add
sbb
leave
js
je
fdivrl
loope
push
imulb
popf
icebp
and
scas
inc
add
mov
int3
xchg
cmpsb
xor
pop
outsl
jle
jle
adc
push
int
lock
inc
sub
jmp
loop
aaa
loopne
dec
les
mov
cmp
cs
add
out
mov
xor
aad
push
out
das
mov
xor
mov
jnp
movsb
jl
push
push
int3
or
add
sub
add
das
xor
add
add
das
xor
popf
jae
sahf
cwtl
data16
jae
in
inc
es
mov
inc
pop
xor
popf
jae
fstpl
outsb
std
sbb
inc
out
mov
call
lahf
jae
xchg
jno
fstpl
dec
lods
cwtl
pop
mov
mov
lahf
out
das
fisubrs
mov
jle
dec
mov
insl
int3
dec
mov
push
int3
pop
mov
mov
and
mov
xchg
adc
mov
lock
movsb
adc
cli
add
ficomps
mov
mov
sahf
mov
mov
mov
fldcw
movsb
lahf
ficomps
rcll
mov
popf
insb
mov
cwtl
ret
sub
add
sub
add
sub
add
sub
add
fwait
add
mov
add
mov
add
sub
add
sub
add
sub
add
add
xor
add
sub
add
mov
add
int3
add
sub
add
sub
add
sub
add
pusha
fsubl
jp
arpl
mov
add
je
push
and
add
cltd
mov
fildl
stos
fistpl
mov
arpl
ss
add
fildl
add
add
ja
sbb
ja
sbb
popf
sarb
popf
sarb
cmp
mov
cmp
jno
inc
loop
add
loop
add
loop
add
fildl
add
inc
or
das
fisubrl
push
fnsetpm(287
decl
add
add
imul
add
mov
inc
dec
and
inc
test
xor
arpl
das
add
das
xchg
add
das
xor
into
push
push
in
push
insb
std
add
das
repnz
pop
repz
inc
std
or
into
inc
cld
repz
stc
add
das
divl
js
aad
ljmp
add
fisubs
das
fisubrs
lcall
das
ficomps
adcb
mov
adc
mov
xchg
stos
mov
outsl
mov
mov
jns
aaa
ret
jl
pop
add
fidivs
shlb
sub
add
fisubs
das
fidivs
in
xchg
sub
fisubs
mov
cwtl
out
das
fisubrs
mov
cmpsb
out
add
das
fiadds
sbb
sub
add
lcall
movsb
outsl
mov
cltd
jns
add
sub
add
sub
add
fstps
decb
iret
shlb
mov
mov
pusha
fidivrs
popa
pop
mov
add
mov
inc
jge
sub
add
inc
sbb
aad
jb
mov
dec
mov
add
fiaddl
add
addr16
jbe
add
jne
add
gs
jnp
imul
outsl
jae
loopne
add
pop
inc
add
pop
inc
add
imul
jle
inc
add
pop
inc
add
add
loopne
add
filds
add
filds
add
pushl
and
add
lret
das
int3
aas
add
int3
aas
add
xchg
inc
add
sub
das
pop
repz
or
aad
ds
movsl
repz
stos
fs
js
insl
rcrl
cmpsl
jae
sbb
outsb
add
pushf
push
adc
das
push
imul
lods
decl
mov
jl
xchg
inc
mov
jae
mov
add
das
filds
das
and
das
call
add
das
xchg
add
das
pop
add
add
fimuls
add
fimuls
add
fsubp
add
add
fdivrp
add
fsubp
add
fsubrp
dec
in
fnsave
add
out
fnsave
out
fucom
jo
fucomp
jo
fstl
out
frstor
dec
insl
ficomps
dec
cmc
ficoms
ficompl
fidivrs
je
lea
pushf
pop
pop
mov
jae
test
insl
data16
outsl
popa
xchg
movsl
pop
bound
ficoms
stos
gs
lahf
negl
add
fistpll
aam
inc
or
lret
cs
add
les
jbe
stos
cmpsb
inc
mov
fiadds
fadd
enter
xchg
inc
lods
pop
test
pop
sahf
je
inc
int3
sub
add
xor
xchg
inc
ret
sbb
fiadds
fistps
inc
je
mov
dec
insb
out
pushf
outsb
dec
movsb
lods
inc
das
lcall
stos
pop
pop
cwtl
mov
add
jle
std
in
out
loopne
stc
leave
add
repz
out
stos
filds
add
cwtl
mov
add
or
cld
cmc
lock
add
hlt
ret
mov
cmpsb
mov
add
inc
dec
test
inc
jne
sbb
mov
add
les
insb
enter
mov
jb
sbb
or
add
cld
out
sbb
or
sub
shll
mov
sub
jae
rcll
das
dec
clc
or
and
or
add
cmp
sbb
xor
or
or
xor
xchg
pop
std
ljmp
das
push
adc
sbbb
dec
les
add
scas
sub
loope
movsb
cs
das
jge
dec
add
fstpt
pop
and
push
das
arpl
push
jns
into
push
jp
enter
add
das
sti
cmp
lods
fbstp
int
push
mov
inc
pop
push
cltd
push
xchg
dec
jle
cs
insl
xchg
xor
mov
push
movl
imull
sbb
push
or
loope
lret
adc
inc
test
fldl
add
or
movsb
or
mov
fsts
or
mov
shl
or
cmp
fidivrl
lret
stc
and
into
add
ficoms
ret
data16
push
gs
fdivp
negl
out
add
fiadds
mov
sub
popa
addr16
cmp
jno
mov
cmp
imul
xchg
test
cmpsb
add
mov
je
imul
jb
xchg
pushf
push
ljmp
scas
push
in
cmpsl
cli
adc
mov
and
iret
xor
pop
lcall
xor
lods
arpl
mov
leave
sbb
notb
mov
add
pop
add
xchg
lcall
and
add
mov
adc
push
jae
jbe
jbe
dec
inc
xor
and
push
loopne
add
dec
inc
inc
inc
xor
xchg
xor
or
inc
add
push
loopne
add
pop
jb
push
mov
pop
push
dec
pusha
jle
das
jo
jle
pop
dec
test
jp
sbbl
inc
filds
add
add
dec
repnz
lods
jg
xlat
lds
add
sbb
hlt
in
and
jmp
xor
add
or
xchg
mov
push
lods
jle
andb
inc
add
das
jbe
out
mov
mov
loopne
pop
dec
call
das
lahf
jns
rolb
add
gs
andb
push
mov
out
fs
add
pusha
xchg
adc
pop
movsl
daa
jnp
fists
xor
insb
lahf
sub
push
sti
and
adc
int
add
fisubrs
mov
mov
lods
fnsave
in
mov
add
testb
mov
jp
pop
loope
cmp
add
ficomps
stos
sub
dec
scas
or
pop
out
lea
loopne
mov
lock
stos
fcmovbe
add
push
out
aam
adc
int
inc
lods
fmulp
jecxz
pop
mov
loopne
scas
xor
adc
or
shrl
popf
ret
idivb
iret
add
add
fiadds
orl
fiadds
in
jmp
add
movsb
dec
mov
in
lds
fisttpl
dec
icebp
add
icebp
lea
sub
add
pop
test
push
add
xchg
add
decb
fwait
add
sub
jecxz
in
xor
or
xor
aas
out
lcall
sub
sub
pusha
shll
mov
shll
notl
push
hlt
fmuls
fcmove
jnp
shlb
cmpsb
idivl
add
push
std
jmp
cld
cmpsb
repz
out
sbb
jecxz
shl
jmp
iret
idiv
enter
clc
aad
negb
scas
adcl
mov
popf
pop
scas
fstl
add
xchg
shl
add
sbb
push
inc
cmp
imul
stos
inc
and
mov
faddl
add
pop
and
and
rcl
js
add
int
xor
aaa
push
dec
xor
loope
and
adc
xor
daa
dec
sub
sub
mov
inc
jns
int
jo
mov
andb
pusha
inc
add
das
test
shr
and
ficoms
jp
sbb
outsl
push
add
das
xor
and
fsubp
sub
fldt
push
sbb
ds
pop
add
add
das
sub
ss
sub
and
out
push
jne
cmp
fsubp
add
fimuls
inc
dec
sub
and
das
fisubs
mov
pop
popa
xchg
imul
xchg
imul
xchg
dec
push
jg
fmulp
mulb
fidivl
push
sub
out
or
push
xchg
data16
pop
jle
test
ficomps
int3
jo
pusha
lds
pop
mov
call
ficomps
add
aad
out
add
loopne
mov
jmp
jnp
jmp
jne
dec
scas
in
cmpsb
jno
out
inc
fdivp
add
imul
in
cmp
jmp
sub
sub
jmp
add
jl
cmpb
subl
push
mov
dec
test
ficompl
cmp
out
xor
mov
push
sti
sarl
loope
dec
fiadds
inc
adc
push
mov
jo
add
sbb
pop
je
sbb
dec
or
clc
push
repz
stc
jmp
jecxz
loopne
add
inc
add
cs
xor
add
fiaddl
add
fdivp
and
out
loopne
int3
in
add
add
or
or
fisubrs
or
mov
pop
cmp
fs
popa
pushw
or
inc
push
ds
xor
and
mov
push
decl
jbe
xchg
loopne
add
out
mov
roll
lret
inc
or
lds
inc
add
das
jg
mov
dec
add
int
and
inc
add
das
add
mov
add
cli
inc
fadds
inc
add
das
add
rcll
cmpsl
mov
jg
lods
mov
add
das
mov
pop
sub
es
mov
in
loop
int
sbb
scas
inc
add
das
ds
xor
vpcomuw
push
shlb
mov
xchg
ss
mov
stos
or
loope
mov
and
shl
out
mov
fimull
push
push
fmulp
fildl
ss
incl
das
fidivs
stc
sub
adc
xor
dec
xor
into
ja
sbb
inc
or
xchg
test
ficomps
inc
clc
movlps
enter
rcrl
inc
lret
ficomps
fstpt
loopne
jae
lds
jmp
icebp
or
stos
negl
loope
out
push
fldcw
add
cmpsl
push
cli
imul
test
add
cmp
fisttps
cmp
fiadds
leave
add
fiadds
pusha
popa
push
jmp
sub
push
add
sar
icebp
xor
push
mov
lahf
arpl
mov
sbbb
mov
jns
jge
push
nop
addr16
mov
gs
fldl
add
mov
mov
loop
mov
mov
cli
xchg
jmp
mov
inc
ja
pop
add
popa
sbb
push
push
push
pop
jl
dec
push
add
inc
fldl
add
dec
jp
idivl
shll
jae
dec
ja
jle
sbbb
mov
mov
sbbl
test
add
hlt
movaps
mov
and
pop
inc
sub
das
lret
call
pop
das
sbbb
xchg
loopne
outsb
pop
sti
test
loopne
dec
adc
mov
add
bound
clc
push
jg
rcll
xor
movsl
pop
ds
fs
fildll
subb
iret
pop
idiv
sub
enter
fldln2
aad
out
inc
add
das
movsl
push
mov
les
das
or
sub
or
cmp
pop
clc
adc
pop
add
sbb
and
push
int3
out
mov
and
pushf
add
adc
sbb
or
pop
test
mov
outsl
sbbb
das
ficoms
mov
outsb
dec
dec
mov
inc
dec
xchg
ficoms
push
cmp
pop
push
outsb
adc
or
xor
sbb
fst
dec
fisubs
lods
push
adc
out
lret
ret
fisubrs
maskmovq
imull
push
pop
shll
adc
xor
push
add
fdivrs
inc
inc
shll
add
dec
sub
adc
mov
mov
push
fiadds
cmpsl
add
mov
inc
out
jbe
fiadds
add
psubsw
add
push
std
es
xor
push
jecxz
rorl
mov
in
aad
lret
das
imull
cmc
rorl
out
das
std
das
jmp
dec
sub
add
push
call
sub
or
test
loope
clc
xor
fdivp
out
add
add
sbb
sti
out
lock
cmc
loopne
loope
add
jb
dec
dec
jge
pop
add
push
dec
ja
pop
push
outsb
ja
push
jp
pop
inc
and
push
dec
dec
dec
jl
pop
push
insl
ja
push
outsb
imul
add
add
mov
sahf
fnstcw
add
xchg
mov
cwtl
cmpsl
mov
mul
addr16
lock
repz
cli
jb
in
repnz
fmul
push
into
fcomip
sub
cld
test
into
stc
inc
aad
shlb
repz
xor
loopne
or
inc
shrb
cmp
xor
in
lcall
into
jmp
jne
jg
adc
xorb
xor
xchg
rcrl
fdivl
pop
and
dec
jo
cmc
push
mov
add
ja
shrb
inc
shll
popf
push
out
xor
div
xor
add
sub
in
adc
mov
ficoms
jbe
xor
sbb
sarb
sbb
cmp
adc
add
mov
mov
sub
xorl
add
fsubp
out
and
stc
out
xlat
out
mov
sub
repnz
stc
idivb
sti
test
cmp
repnz
ljmp
out
adc
repnz
jmp
mov
repz
sub
add
mov
inc
mov
add
mov
jmp
nop
pop
xorl
jnp
lcall
and
mov
inc
jne
jno
test
dec
subb
andb
xchg
call
mov
das
cmc
insl
stos
push
addl
xor
mov
cmp
jo
outsl
aad
mov
outsl
mov
cltd
andl
add
fdiv
push
mov
add
jbe
mov
push
out
int3
sub
xchg
lds
lret
clc
xor
mulb
sbb
repnz
int3
in
lds
enter
xchg
mov
sahf
sub
rsqrtps
bound
add
jl
adc
or
aaa
or
add
or
add
sub
cmp
outsb
pop
cs
jo
xor
xor
das
vpshufd
mov
push
xlat
loop
add
sub
add
das
shrb
hlt
in
cli
inc
cmc
in
cmp
das
fwait
push
stc
test
add
dec
mov
outsb
jle
inc
pop
xor
add
das
lods
push
addb
pop
push
mov
stos
pusha
mov
ja
ljmp
add
das
jns
shrb
in
fwait
sbb
dec
jnp
das
xchg
xchg
enter
xchg
repnz
or
and
adc
push
out
enter
lock
sbb
jmp
sub
fisubrs
sub
add
push
adc
mov
sub
cmp
pop
les
mov
or
add
fidivrs
cwtl
sbb
jae
push
pop
sub
call
stos
pop
mov
lret
out
das
fiadds
mov
lea
mov
jns
pop
adc
fiadds
jle
jge
lcall
in
jmp
add
xchg
dec
xchg
pop
fiaddl
fiadds
outsl
test
inc
jp
out
push
dec
fiadds
cmp
jno
add
push
cltd
imul
mov
pop
dec
xchg
imul
add
nop
cltd
sub
das
flds
ljmp
push
sub
add
aas
push
mov
xor
mov
and
incb
mov
add
add
jne
ljmp
fiaddl
add
fxam
jmp
loop
add
adc
xor
sti
sbb
clc
adc
add
xor
orl
lods
scas
jne
cmpsb
mov
int
movhps
sub
add
sub
push
cmp
or
popa
xor
add
sbb
add
push
and
inc
out
cmp
adc
lret
das
sub
lds
out
ret
push
lods
nop
inc
mov
xchg
push
in
or
dec
mov
jg
das
adc
adc
sub
xor
cld
sbb
add
enter
aas
xor
das
stos
jmp
stos
add
das
inc
stc
idivb
ljmp
addr16
decb
lcall
xor
add
fimuls
mov
bound
pop
inc
lret
push
hlt
sbb
xchg
or
cmp
mov
and
pushf
js
outsb
mov
add
fsubp
push
test
sarl
add
enter
xchg
pushf
aas
dec
call
adc
mov
mov
xchg
lock
mov
in
je
fwait
mov
fiadds
cli
out
loop
and
and
sub
add
decb
adc
add
idivb
cmp
add
pop
fiadds
sub
xchg
jmp
jecxz
mov
sub
add
push
aam
xchg
shrl
add
fiadds
shrl
movsb
xor
add
cs
mov
adc
cmpsb
push
xorl
mov
adc
out
xor
adc
push
fiadds
add
and
add
dec
cmpsb
add
sbb
dec
inc
fiadds
add
jne
ds
das
outsb
flds
push
jno
fiadds
add
pop
inc
in
inc
adc
movb
pop
push
jle
test
add
in
test
mov
add
test
adc
iret
rclb
push
push
into
ret
sub
dec
dec
inc
lret
sbb
add
das
and
inc
loopne
xor
cmc
pushf
jae
pop
jmp
jl
das
lds
cltd
add
das
push
cmp
fnstsw
rol
jns
lds
jnp
ret
sub
dec
jle
adc
xchg
pop
push
push
imul
pop
sbb
pop
push
jle
or
dec
inc
js
arpl
xor
add
aaa
mov
inc
add
das
or
inc
das
mov
enter
add
mov
push
add
ficoms
sbb
sub
frstor
add
ficoms
in
fstp
xchg
xor
fstp
out
fnstsw
and
loope
sti
fucom
add
ficomps
call
out
fldl
out
fucom
out
outsl
ficomps
lock
fisubrs
add
fisubrs
fidivs
add
fsubp
add
add
faddp
pop
jg
cmpsb
pop
data16
dec
pop
mov
pop
jg
int
fiadds
adcb
arpl
fiadds
adc
pushf
add
dec
pushf
add
sbb
insl
dec
pushf
add
sahf
add
setl
setl
sub
lcall
add
in
dec
sub
mov
jge
push
adc
xchg
jbe
lret
data16
xchg
mov
ret
outsb
jl
jb
js
jbe
movsl
jp
sbb
xor
pop
call
sub
jmp
mov
and
xor
jne
pop
movsl
jns
sub
and
sub
ds
push
fwait
inc
inc
dec
xchg
inc
inc
ds
dec
dec
add
inc
dec
dec
inc
mov
cmp
and
push
pop
pop
cld
test
andl
sub
insb
insl
and
add
and
jbe
push
loop
add
movsb
push
and
loop
add
loop
add
test
ret
cs
lea
dec
imul
jae
fwait
bound
xchg
jno
add
das
dec
imul
jae
scas
jne
or
imul
push
shrl
jb
sarb
inc
push
das
les
mov
sbb
out
popa
addr16
add
int3
push
je
xor
mov
arpl
pop
imul
add
das
inc
imul
add
jbe
arpl
fisubrs
cmp
fisubs
bound
xorl
adc
push
add
ficoms
push
mov
sbb
mov
sbb
fnstsw
add
fldl
sbb
fstl
add
fstpl
add
fstp
add
fidivs
jmp
xor
fiadds
add
fiadds
add
mov
fildl
das
fisubrs
add
ficomps
pop
fiadds
int
movsb
add
sub
add
sub
add
sub
add
sub
add
sub
add
lahf
add
jge
pop
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
jp
dec
sub
fiadds
dec
sub
add
sub
add
sub
add
out
fimuls
neg
imul
fiadds
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
or
push
inc
add
add
mov
add
mov
inc
add
jbe
add
inc
add
mov
std
mov
pop
mov
xor
inc
add
inc
add
test
add
int3
add
cs
add
dec
add
add
das
pop
xor
das
pop
xor
das
sub
das
push
pop
add
pop
je
das
pop
je
das
gs
das
add
sub
add
or
dec
or
or
and
mov
add
test
add
das
lds
push
movsb
and
das
or
add
mov
das
enter
imul
outsl
inc
das
cmpsl
outsb
inc
das
add
inc
das
leave
jb
das
mov
test
outsb
insl
fisubs
add
add
fidivrs
push
fidivrs
add
nop
add
nop
add
mov
push
fiadds
cmc
push
adc
out
push
fcomi
push
imul
out
cmpb
jecxz
cmp
out
imul
push
cmp
pop
out
imul
add
push
popf
cmp
in
add
faddp
push
repz
nop
popf
jecxz
pop
je
adc
pop
mov
xchg
mov
sub
mov
repz
add
mov
popf
add
lret
cltd
mov
jns
mov
stos
insl
dec
adc
je
sub
add
fnsave
arpl
add
sub
add
std
mov
inc
mov
sbb
mov
or
addl
sbb
xchg
arpl
sub
add
push
dec
inc
add
fidivl
jmp
xor
js
and
and
in
add
sub
jno
sub
xor
loop,pn
add
fiaddl
add
add
and
add
pop
inc
add
inc
add
aas
ds
aas
add
add
pop
inc
add
inc
add
inc
add
and
add
lea
sbb
xor
adc
popa
gs
fisubl
add
add
add
das
daa
add
das
or
jge
fs
sbb
das
dec
jo
mov
pop
inc
pop
push
imul
add
dec
push
inc
insb
inc
sub
das
inc
pop
jae
jns
jns
pop
insb
imul
fs
imul
pop
or
dec
jmp
or
out
js
mov
outsl
and
pushf
arpl
pusha
add
test
sbb
fisubs
pop
int3
test
and
jnp
pop
xor
jp
push
add
dec
mov
out
das
fimuls
add
fiadds
add
fiadds
pop
fimuls
add
fisubrs
add
add
mov
das
fidivs
add
fstpl
out
fldl
icebp
out
fucom
add
fsubp
add
fsubp
add
fidivrs
test
adc
xchg
pop
pusha
ljmp
imul
scas
push
adc
lods
std
hlt
xor
inc
jmp
andb
jnp
call
lahf
movsb
inc
jmp
insb
fiadds
movsb
add
movsb
fsubl
pop
inc
fsubr
add
insb
fiadds
pushf
mov
mov
mov
in
fldl
je
adc
leave
cmp
and
add
or
es
jmp
jmp
or
frstor
rcrb
push
mov
pop
push
inc
inc
mov
push
sub
push
test
gs
adc
sahf
add
jge
cld
test
sub
leave
lcall
mov
scas
std
jne
mov
or
add
add
je
xchg
jmp
mov
pop
rcr
add
inc
mov
leave
inc
fildl
xor
push
add
fistpl
mov
std
je
loope
call
insb
sbb
xor
lds
push
mov
or
loopne
add
dec
test
das
jmp
dec
fwait
and
inc
adc
push
add
call
pop
fcomi
add
das
pop
add
jb
add
das
fisttpl
lock
call
pop
inc
jmp
mov
add
das
add
add
ljmp
add
outsb
nop
and
jae
inc
add
das
fsubp
ja
shl
add
sub
ljmp
add
ret
fsubp
add
mov
cs
fsub
add
add
test
push
addb
inc
das
fisubs
mov
cmc
add
loope
cmp
and
push
cmpsb
inc
das
fisubs
fldt
leave
add
xor
fs
out
push
jmp
iret
fisubs
mov
jecxz
loopne
bnd
in
fs
sbb
add
add
jmp
notb
pop
imul
adc
add
fiadds
je
mov
pop
xor
sbb
gs
insb
sbb
ret
push
xchg
and
adc
sub
xorl
mov
or
push
lods
pop
mov
daa
fidivs
xchg
and
sub
add
mov
adc
daa
mov
xor
fistpll
xchg
fildl
neg
cmc
std
adc
iret
fsubr
or
or
mov
push
add
or
sbb
in
xor
icebp
je
pop
cld
cmp
aas
cmp
out
or
stos
call
mov
stos
mov
stos
push
sti
adc
ss
cmp
add
xchg
add
in
jge
xchg
mov
jecxz
adc
das
jle
jmp
mov
ljmp
jne
push
add
inc
pop
insl
cld
add
push
push
push
add
orl
dec
lods
sbb
je
int
or
jmp
xlat
push
pop
aaa
inc
jmp
dec
ret
ret
add
pop
out
add
das
jnp
jae
lods
lea
fsubrl
out
dec
pop
mov
xlat
sbb
xor
adc
out
sub
icebp
xchg
mov
add
popa
xor
repnz
sub
das
arpl
ja
popa
out
in
cld
jmp
jns
arpl
ja
pop
scas
out
add
test
ficoms
add
add
sbb
sbb
push
fisubrs
and
xor
sti
cs
push
mov
iret
jle
add
jb
daa
notb
add
fidivs
in
arpl
je
fmuls
aas
in
leave
xchg
add
pop
idivb
sub
or
sub
mov
push
cs
add
sub
leave
push
aad
mov
stc
rcll
add
add
sbb
inc
adc
repz
cmc
and
ffreep
adc
xlat
rcll
rcll
enter
in
mov
lahf
ret
insl
or
xchg
mov
dec
loop
outsb
jg
or
xchg
sbb
or
push
je
push
negl
add
loope
add
pop
idiv
or
dec
mov
add
filds
pop
adc
jb
sti
pop
idiv
sub
dec
call
adc
jb
mov
leave
ret
add
scas
mov
xlat
xor
add
push
push
xor
push
stos
jp
outsb
in
sbb
inc
jge
push
xchg
sbb
xor
xor
adc
int
jbe
pop
mov
mov
push
jmp
adc
add
inc
fimull
mov
ret
das
cmc
dec
jmp
sub
shll
sub
repz
hlt
jle
mov
adc
pop
push
mov
or
mov
subb
lds
cmc
sub
lret
or
fsubr
push
inc
and
push
xor
jle
outsl
imull
add
mov
sub
pop
pop
dec
incl
sub
pop
movsb
popa
fisubs
call
das
int
test
fisubl
dec
popa
movsl
and
std
sbb
sub
cli
push
fs
jl
ljmp
adc
divb
hlt
lods
and
jle
xchg
dec
test
pop
pop
add
movsb
loopne
imul
adc
ret
fisubl
pop
idivb
mov
jae
cmp
es
and
fiaddl
arpl
test
sbb
inc
popa
xlat
xchg
or
xlat
icebp
sbb
insb
fimuls
fnsave
fiadds
in
mov
adc
int
imul
flds
fisubs
sub
push
ret
hlt
jg
jne
add
std
scas
mov
jmp
jmp
sbb
test
cmp
push
jmp
ficoms
sahf
std
hlt
clc
in
inc
jmp
jae
dec
add
push
lcall
test
test
adc
jo
add
rolb
xchg
add
test
add
lea
lret
add
add
xchg
pop
jmp
inc
fildl
test
sbb
jle
es
fistl
sti
add
repz
test
mov
push
inc
adc
pop
dec
adc
push
shr
add
push
loop
push
das
sub
push
stos
test
add
in
dec
or
add
cmc
push
or
dec
sbb
insb
cmc
out
pop
add
mov
cli
cmp
sub
movsb
f2xm1
adc
pop
enter
incl
ror
mov
pop
aam
xor
mov
add
xor
daa
pop
loop
out
hlt
jl
aaa
or
or
add
inc
or
out
jecxz
movsb
mov
jns
aaa
shrb
sub
or
add
xlat
cld
insl
adc
in
clc
jae
fsubp
dec
aas
mov
xor
sahf
pusha
sub
lds
das
push
push
cld
stc
int3
jbe
sub
daa
add
in
les
lods
in
sbb
mov
call
movzwl
cmpsl
add
push
adc
mov
aad
push
dec
mov
outsl
in
add
idivb
add
sti
jmp
aaa
inc
out
popa
test
or
out
movsb
xchg
fistpll
lret
das
pop
es
fst
add
sub
mov
and
fstpl
add
xchg
faddl
jmp
lods
mov
add
sub
inc
icebp
gs
dec
out
fimuls
movl
mov
mov
bound
add
push
in
faddl
jmp
push
sahf
add
push
aam
dec
test
sub
push
out
fcoml
sub
pop
inc
loope
push
mov
xor
jb
xchg
push
fisubrl
rcrb
cmp
inc
push
js
xchg
inc
fisubrl
sbbb
add
mov
inc
push
js
xchg
push
fimull
ja
xchg
xchg
dec
call
push
add
ret
cmp
les
add
push
inc
add
stos
add
or
add
sar
xor
adc
push
ret
sub
int3
push
ljmp
mov
hlt
aas
das
nop
fnstenv
push
jb
jmp
xor
das
cmc
add
add
mov
add
das
orb
leave
or
sub
add
lods
xor
add
mov
pop
jl
jl
or
cmp
dec
mov
shll
pusha
cld
das
testb
xor
aaa
push
test
push
push
xchg
push
lret
add
nop
and
or
cmpl
jae
addb
fucomp
imul
sub
add
mov
jbe
ja
ficomps
cmp
xor
inc
das
add
loopne
push
inc
pop
test
ret
pop
sbb
lret
add
add
xlat
adc
mov
in
ss
xlat
enter
das
int3
daa
inc
je
sub
stos
lock
repz
jmp
les
push
aaa
push
insl
fcompl
pop
add
add
sbb
out
rorb
mov
flds
fs
clc
in
dec
add
mov
cld
fimuls
call
das
mov
jne
dec
cwtl
or
insb
mov
xor
popa
push
in
push
int
aas
and
fcompl
inc
push
pop
cltd
movsl
mov
aam
call
or
mov
clc
rorb
iret
incl
sub
std
mov
incl
sub
mov
inc
sbb
rorl
xchg
lock
mov
adc
push
inc
clc
or
pop
jp
jo
je
push
push
inc
clc
jno
add
pop
push
mov
xlat
call
cmp
je
lea
cmp
lods
xchg
inc
push
int
xor
or
mov
les
fiaddl
pop
int
jne
or
add
mov
xchg
aam
fcmovu
dec
jne
and
ds
aaa
add
cmc
sbb
pop
imul
add
mov
loope
push
mov
mull
fidivs
mov
cmc
sbb
inc
or
lcall
add
cmp
divb
push
add
or
sub
gs
mov
jg
clc
mov
or
ret
hlt
add
inc
lods
push
inc
das
popf
neg
sub
frstor
sub
std
mov
add
push
sbb
and
bound
imul
add
insl
fcmovnbe
sbb
push
repz
das
je
xor
push
sub
adc
mov
mov
sbb
nop/reserved
fsubp
imul
mov
flds
imul
add
push
ret
test
pop
add
out
add
addr16
pop
jo
add
add
dec
fiadds
jmp
test
jmp
mov
cmp
lock
or
std
add
add
sbb
xchg
test
fidivs
bound
add
in
cmpsb
jae
imul
or
add
sub
mov
fdivr
std
sahf
adc
test
sub
inc
fisubrs
imul
std
jbe
add
sti
rcll
insb
fiadds
push
pop
loop
hlt
push
pop
ret
lods
cld
in
out
xor
sbb
inc
setbe
cld
sbb
fdivs
loopne
inc
pop
or
or
mov
movl
xchg
imul
add
adc
add
add
leave
in
dec
push
push
loop
les
pop
xor
pop
hlt
pop
data16
filds
push
pop
dec
flds
das
add
loop
push
xor
inc
movsl
idivb
das
push
fistl
pop
inc
add
or
ucomiss
pop
cmp
and
cmc
fistpl
add
sub
das
mov
mov
inc
add
mov
lea
add
add
lcall
enter
inc
push
fdiv
sbb
adc
xchg
or
fucom
jecxz
ljmp
mov
push
cmpsb
sbb
fidivs
mov
jo
nop
cli
out
adc
add
jo
ficompl
sbb
inc
das
movsl
mov
sbb
jmp
stc
lea
fldenv
stos
cmc
inc
das
pop
lods
or
cli
jb
mov
insl
jg
clc
mov
adc
add
pop
xor
adc
sahf
stos
lea
stc
jb
pop
cli
hlt
mov
roll
xchg
loope
add
cmp
add
and
xchg
mov
ljmp
push
xchg
xchg
mov
ficoms
xchg
mov
jmp
push
jb
push
pop
cmp
test
xor
jmp
sbb
mov
push
xchg
xor
jmp
cmp
xchg
sub
pop
fists
dec
mov
popa
mov
xor
mov
ret
add
les
repnz
cwtl
les
int3
cld
mov
fwait
int
aad
scas
jnp
sbb
ja
dec
ss
mov
mov
mov
inc
mov
out
lahf
ss
sbb
xor
int
xchg
fistpl
mov
arpl
inc
daa
lahf
xchg
ss
inc
pop
dec
inc
mov
hlt
cmc
sarb
or
add
in
dec
sub
pop
punpckhbw
and
shl
xchg
das
les
xor
add
mov
in
lock
ljmp
pop
into
mov
ud0
movl
sahf
sahf
enter
or
mov
and
add
push
addr16
jmp
lods
dec
loop
mov
push
jns
lcall
int3
add
aam
scas
and
fidivrl
sbb
fidivl
fcomp
cli
iret
repnz
lcall
stos
call
or
ficomps
js,pn
fisttpl
fstps
call
mov
divb
mov
add
out
insb
jmp
jmp
das
out
inc
push
lea
add
fsubp
cmp
fiaddl
arpl
mov
icebp
mov
mov
and
cmp
mov
lock
daa
mov
xor
mov
hlt
mov
std
mov
inc
xchg
pop
mov
shld
inc
xchg
or
fldcw
imul
push
pop
scas
dec
test
push
std
push
sti
xchg
mov
xchg
ljmp
xor
mov
lsl
pop
push
mov
pusha
dec
mov
movsb
push
lcall
mov
std
cld
hlt
jae
jmp
nop
add
add
flds
rclb
inc
fiaddl
fisttpl
sti
cltd
or
mov
mov
push
mov
jne
je
or
dec
add
adc
movsl
add
sbb
loopne
pop
movsb
call
push
std
cld
mov
pop
ljmp
shll
movsl
and
mov
sub
xchg
hlt
std
incl
add
jno
mov
out
or
jmp
add
imul
mov
cmp
rolb
jl
add
and
or
push
add
jg
mov
sar
lcall
dec
out
add
inc
sub
add
imul
dec
testl
or
les
cltd
lds
inc
fidivs
faddl
hlt
test
out
mov
int3
shlb
mov
xchg
dec
fsubp
ss
sub
add
push
inc
mov
movsb
add
out
jns
std
sti
scas
jae
hlt
sub
out
inc
fstpt
add
xor
cld
add
mov
mov
clc
lock
cmpsl
add
in
xor
stos
pushl
leave
mov
lret
incl
das
scas
sbb
mov
pusha
icebp
popf
mov
pusha
dec
sub
or
std
bound
gs
adc
sbb
adc
add
sub
mov
add
icebp
aad
out
push
fs
add
sub
mov
icebp
std
jmp
ja
mov
push
sub
mov
fiadds
jmp
xchg
std
fs
mov
sub
ud0
divl
push
bound
jne
fs
add
fisttpll
faddl
inc
pop
mov
jmp
sub
ret
mov
add
pop
ljmp
push
mov
add
fmull
decl
xchg
jmp
or
cmc
add
xchg
dec
lea
lods
std
adc
add
flds
add
xchg
xchg
add
pop
xlat
rol
das
pop
inc
dec
ret
je
xchg
xchg
xor
add
imul
das
add
out
sbb
iret
decb
jge
cld
sub
cld
push
xchg
add
ds
add
adc
cmp
icebp
push
sets
arpl
div
pop
push
cld
cmp
repz
js
add
lods
mov
add
sub
xor
sar
pop
pop
pop
cmp
ficomps
pop
pop
push
add
xchg
dec
data16
repz
push
daa
fcomi
cmpb
outsb
rcrb
or
imul
xchg
dec
mov
imul
push
popa
sbb
cmpsl
aas
ret
pop
mov
iret
pop
mov
stc
inc
das
arpl
add
add
cmc
adc
mov
mov
cmpsl
add
fnstsw
test
out
dec
ljmp
insb
mov
push
leave
lods
sti
in
fucom
dec
sub
add
sub
adc
scas
add
cltd
sar
and
fldl
mov
test
shl
sub
call
gs
out
add
fimuls
mov
roll
dec
pop
sbb
push
pop
or
pop
sbb
icebp
lret
pop
add
add
fiadds
adc
lahf
add
xchg
out
into
das
add
data16
sbb
add
add
cld
lret
std
je
stc
mov
mov
sldt
je
add
sti
stc
lret
push
jmp
dec
adc
mov
pop
sub
add
and
inc
loop
push
inc
adc
xchg
mov
loop
mov
sahf
ja
add
int
cmp
mov
je
sbb
sahf
mov
enter
sbb
add
cmpsb
mov
das
lods
imulb
insl
add
push
add
movsb
rolb
jae
testl
jl
jp
push
mov
add
das
fistpll
mov
das
cmc
jle
sub
add
das
cmc
cli
test
cmc
add
xchg
cmc
mov
mov
lods
add
leave
insb
cmc
add
test
leave
das
cmc
pop
add
pop
mov
and
lods
outsb
pushl
add
call
fistpl
out
cmpsb
mov
mov
mov
or
mov
call
icebp
das
fisubrs
into
dec
insl
pop
jmp
fistl
call
inc
das
popa
sub
push
clc
lret
cli
inc
das
mov
adc
pop
sub
mov
cmp
fsubp
js
rcrl
fidivrs
jle
ret
add
in
int
ret
mov
shr
jb
popa
jmp
cld
mov
add
push
fmulp
sub
jmp
xchg
mov
test
call
test
orl
test
pop
js
xchg
arpl
int
lcall
sub
or
imulb
jae
out
dec
adc
push
add
inc
pop
stc
call
or
jae
fs
dec
sub
cmc
push
repz
fsubrl
stc
pop
popf
and
out
call
push
inc
stc
test
pop
insl
push
pop
push
fiadds
push
or
in
push
icebp
clc
mov
clc
pop
or
outsb
fildl
add
and
fstpl
jmp
test
add
out
adcb
addl
or
adc
pop
mov
mov
inc
loop
fmuls
pop
inc
je
popa
out
cmp
sub
cwtl
sbb
cmp
or
cmp
add
push
neg
out
movsb
icebp
stc
test
lods
inc
add
xchg
mov
jecxz
inc
add
add
dec
fcmovb
jnp
enter
xchg
adc
testb
add
call
push
push
cli
and
jge
daa
push
sub
add
mov
les
adc
push
and
test
add
fisubs
ret
ficoms
aam
xor
les
clc
das
fsubp
sub
add
pop
mov
jo
cmp
mov
add
out
pop
pop
jge
ljmp
xchg
inc
jnp
int
into
pusha
ret
daa
jns
in
mov
pop
mov
dec
fucom
add
push
cmp
sbb
aad
das
pop
loopne
lcall
push
daa
into
lock
daa
add
and
in
add
inc
mov
or
jg
jge
cmp
xlat
xchg
test
sub
rclb
jno
not
std
mov
je
imul
push
inc
inc
out
dec
or
jne
lods
imul
dec
adc
rclb
je
push
call
rcll
clc
rcll
aas
stos
push
test
add
cmp
xchg
sub
flds
divb
js
cmp
lret
insb
fimuls
incl
xor
pusha
pop
aas
add
jne
dec
push
cli
icebp
addl
adc
test
cmc
sub
into
sbb
pop
push
mov
in
xlat
mov
push
pusha
and
xor
insb
inc
or
jmp
sbb
clc
or
rcll
mov
or
or
mov
call
add
push
fbstp
or
in
das
fldl
mov
enter
leave
push
xor
jne
sub
sbb
push
add
outsb
ds
movsb
int3
call
incb
les
add
enter
or
and
jns
add
or
add
jg
mov
jle
sti
push
cmp
cmpsb
dec
add
push
mov
mov
les
pop
sub
inc
fisubs
das
idivl
flds
leave
insl
repnz
or
fcomp
out
sub
adc
or
outsl
fisubs
lods
in
cmp
sub
and
add
xor
ss
ror
sbb
les
rcll
add
sbb
rol
cmp
std
inc
das
mov
xchg
leave
pop
sbb
fnsave
inc
das
pop
cs
rcll
bound
xor
push
imul
pop
leave
cmpsl
add
jmp
sub
jp
imul
jecxz
xchg
mov
jo
mov
imul
cmp
outsl
push
dec
push
enter
aas
mov
xor
add
stc
cmpsb
in
lea
aaa
ret
xor
add
mov
cmpsl
jle
jbe
xchg
std
hlt
push
jecxz
sbb
out
jae
insb
cltd
jo
imull
insb
push
jecxz
cmp
lods
sub
es
mov
push
add
fmull
std
add
flds
add
popf
push
cmp
add
push
push
icebp
pop
pop
pop
xchg
sbb
aam
add
cs
inc
push
pop
or
push
out
mov
into
mov
pop
stc
inc
and
ret
insl
xor
add
repz
shrb
add
cltd
clc
mov
and
lds
clc
add
lock
call
push
repnz
xor
out
xor
add
or
jne
das
jp
sti
inc
sarb
pushl
and
cmp
mov
ret
cmpsb
add
or
pop
popf
add
and
inc
das
jp
je
lahf
push
daa
das
test
add
les
das
je
incb
add
hlt
cmc
mov
jne
mov
mov
sti
cwtl
ja
mov
mov
xor
xchg
test
add
shlb
imul
fisttpll
in
push
loopne
test
fwait
pop
mov
fistl
fstl
add
fdivp
adc
jp
lock
jmp
adc
add
sbb
out
sub
aaa
mov
das
push
nop
add
adc
std
sbb
out
cwtl
call
pop
test
incl
cmc
inc
das
pop
sub
xor
enter
mov
add
lods
arpl
and
or
roll
xor
add
push
je
add
jmp
xchg
aad
fiadds
jmp
das
pop
clc
repz
jmp
mov
in
jmp
stos
in
leave
sub
jle
stos
in
leave
sub
jge
imul
jmp
movsl
nop
rorb
xchg
jge
pop
add
dec
aad
and
add
push
iret
mov
mov
cmpsb
push
xor
pop
stc
or
inc
fiaddl
add
push
jle,pt
pusha
clc
or
and
add
jg
xor
std
ljmp
cmp
ret
sub
lds
aad
add
in
int3
xor
iret
and
mov
add
loope
add
stc
cmp
jbe
add
push
sbb
or
outsb
xchg
xor
pop
inc
mov
roll
push
mov
push
xor
fiadds
jp
mov
fpatan
adc
cmp
pandn
push
adc
das
ds
int3
icebp
pop
add
inc
das
push
jmp
pop
adc
push
inc
or
xor
sub
and
add
dec
lss
mov
and
test
iret
inc
pop
add
mov
add
popf
daa
adc
test
mov
push
call
enter
clc
insl
push
sti
sub
sub
add
jnp
out
fst
sarb
push
sub
repz
dec
sbb
pop
call
xchg
add
fisttpl
scas
xor
into
insl
fisubrs
jmp
push
cmc
mov
sbb
fdivp
add
xor
inc
movsb
xor
mov
verw
fsubp
stos
in
add
sub
jae
mov
icebp
inc
jmp
mov
or
test
inc
mov
add
sub
push
mov
add
lock
inc
jmp
cmp
ret
icebp
sub
mov
sub
or
outsl
out
pushw
aaa
je
mov
adc
pop
xor
cmp
xor
sub
mov
or
sub
mov
inc
call
test
fimuls
fildl
fadd
unpckhps
xchg
pop
fidivl
add
js
call
mov
or
lock
push
ljmp
and
inc
inc
arpl
or
xchg
adc
add
test
add
mov
in
push
dec
mov
mov
xchg
pop
jnp
fiaddl
push
add
int
jb
iret
and
je
rorl
add
adc
inc
das
inc
rorl
fimull
adcb
add
inc
or
pop
data16
mov
ds
mov
add
decl
cs
pop
push
dec
and
dec
jmp
das
adc
das
cmp
ljmp
lret
dec
mov
je
pop
aaa
les
mov
mov
pop
loope
add
inc
ret
add
aam
ljmp
icebp
add
mov
mov
das
pop
stos
pop
hlt
cmp
xor
add
jecxz
stc
fs
inc
xor
xor
pop
stos
push
push
jle
push
loop
js
sub
fs
lods
cs
iret
add
das
sub
or
mov
insb
mov
adc
add
ret
sub
xchg
sub
ja
jb
pop
xlat
aaa
add
test
outsl
xlat
test
cmp
sub
cmp
or
jmp
shl
sahf
mov
loopne
add
in
sbb
sub
sbb
or
insl
imul
sub
fimuls
inc
sti
in
xor
add
scas
xchg
or
cs
fdivs
fs
add
xor
scas
xchg
or
out
fiaddl
bound
mov
shll
sbb
pop
shr
popf
mov
mov
dec
adc
xchg
xlat
jge
push
loop
inc
into
addb
fiaddl
xor
inc
add
sbb
push
fisubrl
scas
inc
loop
inc
add
fisubrl
scas
inc
xchg
xchg
inc
inc
jne
add
inc
jbe
sbb
xchg
and
mov
ljmp
ds
mov
mov
push
push
add
push
loop
leave
gs
push
sbb
push
jge
mov
jl
xor
mov
cld
imul
outsl
xor
add
aad
add
insb
xor
lret
insb
push
ret
mov
enter
xor
das
movl
stc
repz
ror
inc
mov
add
mov
inc
loope
in
lock
call
in
in
mov
pop
pop
and
mov
inc
add
ret
incb
xchg
in
add
das
inc
rolb
add
ficomps
loope
jecxz
and
mov
adc
add
cli
add
jmp
jo
sub
xchg
adc
pop
pusha
cli
lods
sahf
jmp
xchg
mov
inc
das
push
pushf
mov
mov
inc
das
jg
leave
in
fstpl
ret
dec
pushf
sbb
mov
cmp
sub
xchg
shr
xchg
lock
sbb
xor
xlat
add
pop
and
lock
jecxz
dec
cmpsl
stos
add
jecxz
insl
fidivs
out
movb
lcall
pop
and
mov
pushf
sahf
loopne
loope
mov
repz
push
adc
ljmp
shll
fsubl
jae
mov
fucomp
ljmp
rcl
std
push
jecxz
sub
aam
sub
adc
mov
mov
call
icebp
lods
sti
in
fstl
test
fidivs
add
faddp
ficoms
sub
mov
sbb
add
call
test
dec
faddl
add
add
mov
sarb
clc
mov
call
lcall
idiv
mov
pop
xor
ret
movb
jo
inc
and
xor
mov
adc
push
call
push
test
neg
cwtl
add
pop
ret
push
xor
ret
inc
adc
push
das
mov
pop
mov
pop
adc
and
aas
push
push
jno
cmp
xor
add
add
jp
mov
lcall
cltd
pushf
enter
mov
mov
mov
add
adc
mov
ljmp
or
call
ss
out
push
xor
adc
pop
rolb
ljmp
inc
cmp
imul
fcompl
add
sbb
jae
lock
jno
call
inc
outsl
add
sbb
ja
push
call
inc
outsl
fisubrs
pop
fisubrs
mov
pushf
rolb
pop
lahf
add
cli
jg
mov
xchg
call
mov
mov
fcompl
sub
jno
imul
add
ficoms
daa
mov
mov
or
add
lods
dec
sub
sar
es
xor
jne
out
insb
cli
dec
sbb
ljmp
out
pushw
jmp
daa
xor
adc
pop
in
bound
mov
cltd
outsl
dec
sub
fists
push
loope
test
rcl
mulb
fisubs
add
xor
add
or
jae
mov
filds
movsb
push
iret
and
pop
leave
inc
add
jno
fcompp
stc
xor
je
inc
fdivrp
inc
adc
aad
inc
adc
mov
ljmp
and
xchg
mov
jge
or
push
ret
int
call
jmp
push
inc
or
add
xchg
repz
into
fsubs
mov
inc
push
cmpl
ja
sbbb
xor
mov
and
ret
push
mov
pop
jmp
test
stc
add
das
cmp
das
inc
ljmp
xor
fisubrs
lea
push
call
mov
cmp
test
pushf
mov
add
incb
add
lock
mov
out
push
fucomip
push
push
inc
add
push
andb
notl
inc
aam
aas
cmp
incl
imulb
xor
adc
ja
outsb
pop
incl
lods
fdivp
lods
push
sbb
xor
fildl
inc
or
mov
jns
rcrb
add
adc
add
notl
cwtl
push
movsl
in
je
call
inc
xor
pop
cltd
sub
ss
and
out
je
fisubrl
add
mov
inc
scas
pusha
xchg
stos
xchg
adc
daa
add
xchg
daa
add
xchg
daa
add
xchg
daa
add
xchg
daa
add
nop
add
xor
mov
sub
test
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
pop
test
fisubrs
sub
inc
jmp
push
push
add
xor
cmpsl
cs
lret
scas
inc
jmp
inc
ljmp
in
inc
jmp
add
clc
in
inc
jmp
out
xchg
push
jp
pop
add
mov
add
clc
lcall
lea
xchg
std
dec
mov
incb
and
mov
inc
inc
lock
jmp
push
adc
ret
data16
xor
fistpl
and
jne
xor
ficoms
sub
inc
add
mov
fadds
pushf
add
jl
add
mov
clc
aam
loop
dec
push
loop
sbb
das
jnp
fdivs
add
loope
adc
ds
in
cmpsb
fnstenv
pusha
mov
mov
xor
push
adc
fsubl
out
xorb
mov
xor
jae
test
daa
mov
clc
add
xchg
xor
add
xchg
cs
or
jl
mov
mov
daa
cwtl
or
sub
pushf
add
inc
ret
lahf
out
das
fsubp
dec
mov
inc
mov
movsb
mov
inc
cld
pop
sbb
in
add
fisubs
mov
sahf
out
and
out
add
aad
mov
inc
das
fldcw
leave
out
dec
mov
add
add
sbb
test
jecxz
in
in
adc
das
add
in
add
imul
push
pop
jl
ficomps
rcr
cmp
jg
xchg
repz
stos
push
xlat
in
mov
jmp
aam
jae
add
insl
loope
xchg
repz
sub
shl
add
fcoml
or
repz
adc
shrl
cmp
aam
sub
jmp
pushf
ss
xor
fidivrs
sub
in
mov
jmp
fidivs
out
loop
adc
fiadds
jmp
sub
leave
repnz
iret
add
add
fildl
dec
push
loop
cmp
clc
adc
out
push
push
loop
or
aad
inc
xchg
jmp
aad
fisttpl
adc
jo
inc
fdivl
add
test
mov
in
lret
and
fildl
data16
inc
push
sub
add
in
add
adc
inc
add
loop
adc
das
xor
or
je
leave
in
xor
out
fpatan
add
cmp
dec
mov
stc
jg
movsb
cmp
gs
inc
das
mov
pop
xchg
leave
mov
jae
xor
repz
add
imul
push
adc
mov
mov
insb
xor
out
push
jae
add
add
sbb
add
ja
orb
inc
das
mov
pop
pop
xchg
jae
cmp
repz
sub
pushf
in
repnz
add
hlt
push
push
push
call
inc
das
mov
sbb
test
add
cs
sub
add
and
dec
sub
adc
fnstsw
add
jmp
pushf
add
arpl
data16
xor
mov
and
add
aam
push
push
call
inc
das
push
les
outsl
sarb
pop
push
call
adc
add
sbb
dec
testb
mov
fimuls
pop
rcrb
outsl
fimuls
leave
aam
sub
lds
in
pop
add
add
cs
pop
popf
pop
sbb
xor
lahf
push
bound
dec
or
push
std
cld
loopne
inc
jmp
sbb
push
mov
cmp
add
mov
cmp
pop
push
sub
pusha
lods
inc
jmp
mov
push
mov
ljmp
lret
cmp
push
push
push
rol
int
add
push
jne
adcb
pop
add
or
jmp
testl
push
cmp
test
mov
mov
pop
pop
mov
push
jmp
add
mov
cwtl
or
lcall
adc
hlt
mov
push
push
adcb
pop
add
inc
pop
cmc
incl
pop
xor
add
das
mov
lea
mov
scas
ljmp
incl
hlt
aas
das
scas
mov
mov
mov
xchg
mov
add
fldlg2
mov
test
jne
jl
loop
mov
push
test
das
mov
inc
and
pushf
jno
in
adc
ffreep
cmp
outsl
incl
add
mov
fsubrs
adc
movsl
inc
add
arpl
imul
add
jmp
dec
arpl
add
call
mov
das
add
call
xor
or
stos
lahf
loop
add
adc
push
jmp
das
fisubrs
mov
std
pusha
shll
hlt
jb
push
push
fs
dec
rcll
leave
dec
pop
inc
shrl
outsl
add
js
sti
cs
mov
test
daa
fcmovb
lods
iret
fstl
int3
jecxz
jmp
xchg
mov
sti
out
adc
pop
mov
add
insb
in
iret
adc
mov
sbb
std
lcall
scas
iret
mov
sbb
sub
inc
xchg
out
pop
pop
mov
stos
enter
shll
jmp
std
fcompl
pop
and
push
inc
xor
add
fdivrl
sbb
stos
mov
or
add
or
or
push
xchg
pop
cli
incl
add
std
jne
jle
je
sbb
mov
hlt
add
arpl
xor
fxam
or
jmp
pop
jnp
push
insl
add
adc
pop
add
out
push
test
pop
je
mov
push
ret
jmp
lods
mov
ret
push
mov
sbb
loope
sahf
je
dec
popf
mov
add
sti
add
cmp
and
cmp
jns
subb
add
mov
ret
add
scas
fildl
mov
cmp
add
mov
adc
mov
nop
sbb
mov
jg
mov
cmc
add
outsl
or
mov
ja
rorb
add
mov
ror
adc
push
js
outsl
stos
add
lret
roll
daa
mov
push
push
fstp
out
push
push
sahf
sbb
inc
das
push
dec
test
jmp
add
jle
push
pop
imul
das
bound
pop
dec
mov
xchg
out
adc
aaa
repnz
insb
ret
pusha
pop
dec
sar
test
cmc
imul
test
popa
lahf
popf
push
sbb
or
adc
mov
enter
nop
inc
or
add
add
and
lods
out
xorb
add
cmp
es
add
sahf
pusha
loop
scas
lahf
xor
das
mov
pop
inc
mov
xchg
mov
and
fldt
sub
je
xor
jmp
inc
mov
fcompl
std
je
mov
adc
cld
add
add
stos
xor
repz
in
faddp
in
sub
jl
aaa
fidivs
jg
jmp
sbb
mov
adc
mov
and
test
mov
jno
mov
and
lock
pop
add
add
mov
mov
ljmp
add
out
adc
lea
inc
xlat
fs
sbb
filds
ljmp
or
pop
sbb
cmc
ret
hlt
push
mov
out
mov
or
inc
or
loop
call
int
lcall
mov
divl
lcall
dec
dec
or
lds
ret
mov
mov
fstl
mov
jmp
xor
rcrl
ret
add
dec
sbb
lds
push
pusha
inc
mov
mov
cmp
aas
das
dec
sahf
bound
lcall
jae
imull
stc
ljmp
xor
push
cwtl
clc
loopne
sub
xor
xchg
add
outsb
call
cmp
add
push
stos
ljmp
xchg
fs
daa
add
popf
cmc
cmp
daa
sbb
jmp
xlat
loop
push
jecxz
in
ret
imul
cmc
pop
pop
pop
push
sub
add
and
pop
xlat
pop
push
jecxz
out
ret
imul
aaa
add
add
pop
or
ljmp
add
inc
fsubp
aam
inc
jno
icebp
pushf
add
pop
in
fldenv
call
roll
mov
pop
push
jo
mov
lcall
sbbl
in
gs
mov
cmp
sbb
jmp
xor
aas
sti
fcmovnb
add
call
sub
mov
loope
xchg
jae
jl
jmp
js
mov
stos
les
sub
jae
mov
push
jmp
mov
pop
pop
cmp
mov
add
popa
fldl
push
hlt
jmp
imul
fmull
insl
dec
jb
int3
lods
aaa
push
call
outsl
hlt
mov
arpl
loopne
jmp
mov
add
jle
add
mov
pusha
or
cs
adc
aaa
mov
inc
cmp
je
repnz
movsl
cld
dec
arpl
mov
add
mov
add
mov
pop
mov
mov
mov
aad
push
les
roll
add
cmpb
inc
pushf
pop
ret
lods
sub
mov
sbb
mov
pop
inc
xor
adc
mov
jg
movsb
or
and
push
add
imul
mov
or
add
or
sub
xor
incb
das
mov
sub
test
in
subl
and
mov
inc
jnp
popf
stos
insb
iret
out
lods
movsl
mov
lods
leave
jmp
lret
mov
xor
bound
or
je
xor
jno
xor
mov
out
movsl
out
pushf
xor
loop
pop
call
hlt
push
daa
push
jno
repz
sub
sar
sub
lods
jle
add
push
add
cld
je
add
lods
mov
jnp
xchg
mov
lods
mov
push
sub
lock
fildl
cs
ret
mov
sub
std
cmp
and
xor
sub
sbb
mov
sbb
jae
mov
std
lods
cwtl
push
mov
fiadds
jmp
sub
shlb
add
icebp
rclb
leave
add
xor
pop
cld
rorl
push
dec
add
test
pop
incb
gs
hlt
pop
imul
dec
decb
or
mov
adc
xchg
jmp
push
mov
pop
jmp
add
xchg
std
mov
push
mov
add
xchg
ret
test
call
je
pop
clc
or
fiaddl
addl
inc
adc
fadd
xor
fadd
add
daa
inc
sbb
lods
scas
fnstenv
dec
fwait
and
jge
cmpsb
adc
push
lods
mov
jae
dec
mov
sbb
repz
std
arpl
inc
popf
popf
add
rorl
mov
add
inc
popf
add
inc
int
mov
xchg
or
popf
jmp
cli
lcall
fiadds
mov
jg
mov
add
das
fidivrs
add
pop
daa
sbb
pop
xor
and
and
xchg
cmp
loop
mov
in
jle
mov
pop
add
mov
mov
mov
fbld
andl
dec
mov
xchg
movsl
sbb
mov
fsubp
xchg
push
xor
movsb
stos
cmp
mov
xchg
mov
pop
jl
mov
xor
loope
pop
adc
add
out
in
adc
addr16
jo
ret
ror
push
add
clc
lock
pushw
loop
fdivl
fisubs
jae
loop
aaa
cwtl
inc
into
sub
fsubl
in
fs
out
pop
and
addr16
sub
test
stos
mov
and
sub
adc
addr16
aaa
xor
add
xor
and
push
addr16
ja
inc
cmp
add
ret
dec
mov
dec
add
pop
jl
push
leave
push
push
add
mov
loope
xor
add
add
dec
inc
clc
cmp
mov
andb
pop
pop
in
je
or
fwait
adc
xchg
mov
and
mov
or
push
enter
je
pop
inc
incl
jne
add
mov
incl
mov
add
xor
add
or
mov
mov
mov
std
push
cmp
clc
cmp
jae
cmpb
pop
cmp
pop
mov
mov
push
nop
shlb
adc
or
push
mov
ds
or
rolb
cmp
jecxz
add
jns
out
test
jmp
outsl
inc
mov
inc
rorb
pop
out
sub
inc
call
pop
cltd
add
ror
mov
sahf
outsb
fidivs
and
mov
das
jno
sub
or
jae
pop
pop
arpl
add
sbb
pop
push
sbb
pop
pop
pop
dec
out
das
pop
push
sbb
jmp
inc
dec
out
add
das
jmp
popf
movsb
fucom
add
cld
ds
call
fildll
std
out
push
sub
jle
inc
scas
xor
inc
lahf
or
subl
push
xor
push
xlat
pop
add
pop
ret
inc
mov
out
in
jns
xor
pop
fstpl
loope
and
cmp
add
and
xor
add
cmpsl
jle
call
int3
sub
aaa
fldl
jmp
jmp
add
sahf
lock
fs
rcll
std
or
and
in
adc
mov
xchg
fldenv
xor
sahf
movsb
mov
push
ss
adc
push
loope
inc
push
icebp
std
jne
out
push
lcall
adc
add
mov
data16
push
aas
loopne
cmc
sti
cmpsl
push
jmp
cmovo
push
mov
addr16
out
and
dec
pop
jle
inc
push
pop
add
mov
call
and
push
shll
inc
inc
pop
std
cmpb
or
adc
and
pop
aad
add
xchg
rcll
push
cmpl
std
push
add
shll
adc
push
push
or
ja
dec
dec
dec
jb
inc
sub
mov
or
xor
add
adc
js
sbb
or
out
rclb
push
movsb
in
mov
or
jg
pop
or
xchg
sarb
inc
cld
lods
fisttpll
sub
lea
aam
clc
movsl
add
dec
lret
ja
add
xor
cltd
cmpl
mov
das
mov
mov
repnz
xor
in
js
test
mov
popa
jge
xor
rcr
add
mov
jle
stos
jb
aaa
push
call
adc
aas
add
xor
lcall
das
xchg
stos
pushf
mul
xor
sti
fnop
adc
add
adc
bound
ficoms
sbb
test
add
push
in
fdivs
stc
xor
xor
inc
das
push
and
ret
rorb
fiadds
xchg
js
andb
mov
adc
or
add
scas
push
loopne
or
stos
filds
call
ljmp
fnstenv
mov
in
ror
ffreep
bound
add
sub
add
stc
fwait
jb
inc
sahf
sub
and
mov
cmpsl
sub
in
sub
adcb
xor
leave
push
mov
jns
add
and
ljmp
dec
repz
sub
and
call
adc
add
push
bound
xchg
fidivl
mov
ret
mov
loop
mov
orb
stos
insb
mov
dec
mov
shlb
outsl
ficomps
adc
cwtl
mov
inc
dec
jmp
jl
aas
sbb
mov
dec
xor
push
xchg
decb
xchg
std
add
mov
xor
jns
jnp
aaa
clc
add
movsb
clc
add
loop
int3
jge
mov
int3
das
mov
mov
scas
sarl
insb
pushf
daa
add
inc
sahf
pushl
mov
jge
mov
mov
jnp
sub
sbb
push
cmc
out
mov
jae
cmp
jbe
xor
dec
jg
fimuls
add
adc
clc
mov
add
jg
inc
add
fucom
xor
rcll
inc
mov
xchg
mov
lret
push
mov
leave
jmp
cli
fildl
push
jp
movsl
shlb
inc
cmpsl
xchg
fnstcw
adcb
lods
mov
xlat
insb
sub
add
cmpsl
xchg
add
fiadds
movsl
pop
in
jl
call
xchg
sbb
incl
sbb
xchg
popa
or
test
and
cmp
jns
rol
cmpsl
std
scas
in
or
fisttpll
stos
sbb
xor
ret
or
int
cmp
add
or
mov
push
jmp
call
aam
jle
xchg
testb
outsl
orb
pop
mov
pop
mov
mov
jmp
test
lods
test
pop
incb
fistl
jb
dec
mov
jmp
cmp
ljmp
dec
addr16
in
push
cmp
std
xor
add
and
test
dec
std
cmovbe
jae
mov
loope
jne
xchg
in
cmp
add
pop
daa
testb
cmc
mov
test
push
in
mov
dec
aad
call
inc
push
sbb
das
cmp
inc
mov
test
push
stos
out
pop
cmp
stos
jge
add
das
mov
push
cmp
aam
daa
xor
and
out
aas
das
cmp
mov
dec
xor
jnp
adc
test
add
mov
add
sub
aam
das
mov
lock
xor
push
mov
add
das
das
cmc
jg
pop
push
add
sub
mov
lods
js
adc
cmc
add
pop
add
insb
pop
add
add
jmp
push
jmp
imull
nop
fnstenv
pop
mov
xchg
xrelease
cmp
movsl
enter
cmp
fcmovb
push
pop
cmpsl
clc
pop
push
sub
add
push
xor
adc
pushf
and
inc
push
sub
mov
push
mov
add
fnstenv
or
cmp
sub
mov
cmpsb
nop
imul
ret
push
packssdw
lods
leave
pusha
sti
in
mov
enter
push
bound
push
push
push
stos
add
xor
dec
xchg
test
mov
push
fs
push
inc
xor
subl
pop
shlb
call
les
adc
inc
icebp
pop
mov
add
xchg
cmpsl
popa
jae
cmc
mov
xor
push
lds
push
mov
mov
xor
mov
inc
pop
jno
sbbb
xor
mov
inc
daa
jb
rolb
adc
push
call
inc
xor
xchg
pop
pop
add
cld
sbb
pop
je
std
adc
push
xor
shlb
std
je
fscale
adc
xchg
sbb
in
ds
push
mov
jmp
fldt
pusha
mov
lcall
push
sbb
das
mov
fdivs
dec
dec
enter
outsl
mov
inc
mov
inc
je
inc
fcoms
add
push
inc
das
ds
notl
test
mov
add
mov
je
sub
jg
pusha
xor
mov
add
das
sub
pop
mov
or
insb
rcll
repnz
inc
daa
sub
mov
mov
add
out
lcall
leave
rcll
or
lret
outsl
fisubs
xor
pop
fwait
aam
lahf
mov
add
loopne
mov
jae
stos
fwait
cmp
leave
mov
outsl
fidivs
ret
mov
cwtl
imul
jl
add
call
inc
cld
fldcw
jg
sahf
fcmovnb
push
shl
loopne
sub
jle
test
sahf
jg
movsl
xchg
sbb
leave
daa
add
sbb
inc
sub
add
add
mov
xchg
inc
push
daa
fldl
jmp
in
sahf
subl
pop
pop
shlb
rolb
imul
or
mov
sub
sbbl
shr
pop
cmp
xchg
pop
rcl
add
mov
or
add
sub
add
popa
pop
xor
push
ret
xor
mov
or
inc
push
imul
fadd
jp
imul
mov
std
cmp
shll
je
testb
fadd
jne
fdivr
jne
and
shl
out
loope
push
outsb
jno
jbe
mov
xchg
call
push
add
aam
adc
push
lea
and
xchg
and
mov
fiaddl
inc
loope
inc
jp
cmp
sbb
xor
das
pusha
add
add
dec
or
adc
jae
sub
inc
and
and
push
test
xchg
test
cmp
ljmp
stos
std
out
add
jmp
movsb
int3
aam
sbb
inc
das
adc
and
jl
jmp
sar
adc
fsub
mov
js
xchg
call
xor
and
testl
push
cmp
pop
or
aaa
lods
shrl
fidivs
lods
ret
das
ficoms
mov
add
je
sub
pop
fucom
add
sub
add
stc
pop
sub
stos
sahf
int
call
mov
xchg
jmp
adc
adc
js
in
inc
insb
ret
pop
mov
testl
rclb
icebp
jg
out
fnsave
dec
jmp
fcmovbe
data16
fldcw
jae
lods
cmpb
sub
push
pop
mov
adc
sahf
ds
xchg
add
push
jb
sub
gs
int
popa
shr
out
call
sub
add
xor
fiadds
jmp
sub
xchg
xor
add
fiadds
fimuls
add
sub
pop
cli
sub
test
and
fsubr
sub
mov
aas
sub
test
mov
ficomps
fmuls
mov
add
rcrb
jle
in
add
andl
outsl
cld
decl
mov
and
in
inc
repnz
push
mov
lods
mov
scas
mov
scas
addr16
add
add
pop
mov
or
int
jo
push
push
push
add
test
add
and
cmc
je
jg
add
dec
incl
xchg
pop
xlat
loop
aas
das
adc
inc
out
insb
jae
xchg
xor
mov
flds
xor
imull
push
js
push
mov
ja
push
scas
rcll
test
xchg
xchg
call
mov
sbb
mov
add
jns
or
cld
add
mov
lock
pop
clc
or
ret
add
push
jmp
je
jmp
mov
out
jns
hlt
in
jo
pop
adc
adc
js
in
push
pop
in
daa
add
xchg
mov
sub
cmpsl
insb
or
add
sbb
sub
or
pop
xor
sub
dec
out
aam
add
imul
out
mov
cmp
comiss
arpl
sub
jae
sub
fld
shlb
sub
daa
insb
and
jnp
loopne
mov
enter
sub
add
pop
arpl
xor
xor
jmp
mov
es
cmp
arpl
fsts
cmc
mov
add
xchg
adc
repz
out
mov
jo
fidivl
in
sub
je
sub
data16
mov
adc
xchg
adc
jnp
shlb
popf
or
fbld
ret
sub
inc
stc
fcoml
or
sahf
loop
fstps
repnz
je
std
test
add
dec
por
add
or
fiadds
push
adc
xor
sti
push
mov
cmp
adc
aaa
jae
faddl
lea
mov
not
inc
push
arpl
fisubl
fildl
aam
shlb
adc
pop
cmpsl
or
shll
icebp
dec
xchg
std
adc
mov
shll
add
mov
adc
das
sub
in
xchg
ret
and
mov
jg
daa
orb
adc
jnp
lcall
pop
sbb
pop
pop
insl
jg
push
sbb
cmp
outsl
jne
inc
xchg
lret
mov
loop
or
cmp
push
inc
das
ljmp
das
push
push
cld
jecxz
add
and
push
inc
das
add
roll
add
inc
add
loop
inc
das
loopne
je
lahf
insl
dec
outsl
xchg
ret
mov
sub
inc
push
mov
je
mov
ret
nop
aas
ret
dec
in
fnsave
inc
test
jb
dec
out
sub
or
cld
xchg
sbb
mov
fsubrs
out
mov
push
add
aas
mov
add
jle
je
shr
icebp
je
and
js
cmpb
or
xor
xchg
subb
mov
and
ret
fadds
xchg
xchg
add
push
cmc
scas
adc
fs
push
push
mov
std
pop
scas
lahf
or
out
or
pop
xchg
push
out
insb
jbe
push
add
data16
mov
movb
lock
cmp
xchg
jae
mov
lock
jmp
mov
je
cmpsl
mov
hlt
repnz
jl
dec
fucomip
xchg
andb
movsl
ret
sub
aam
xchg
adc
cs
inc
add
pushl
dec
cld
or
adc
cli
adc
mov
fiadds
add
add
pcmpeqw
sbb
call
sbb
lods
fisubrs
mov
inc
cld
outsb
xchg
ljmp
mov
cld
pop
dec
stc
jns
add
dec
pop
inc
cld
sahf
dec
stc
dec
lret
rcrb
push
add
ljmp
pop
jl
push
mov
in
mov
add
push
pop
inc
and
jg
push
je
incb
add
add
inc
add
pop
das
cld
cmp
add
stc
and
sar
addl
cld
jg
pop
adcb
mov
lcall
cmp
comiss
add
mov
sub
fisttps
subb
pop
cmp
sbb
sub
ret
xor
enter
shl
hlt
pop
outsl
incb
add
jo
pop
or
or
mov
cmp
popw
outsl
in
cmpsl
add
mov
inc
loope
lods
jl
xor
adc
push
push
clc
or
cs
jmp
add
ljmp
xor
mov
push
sbb
pushf
outsl
jno
ds
fucom
add
faddl
fucom
add
sbb
mov
lods
popf
xor
mov
or
jo
sahf
adc
pop
mov
into
cld
pop
xor
mov
sti
stc
pop
jmp
sbb
pop
push
out
cmp
sbb
inc
int
add
inc
fdivrs
sub
xlat
dec
xchg
fcoml
xor
insb
popl
xchg
aam
jl
gs
in
repnz
mov
add
sub
inc
in
sub
shlb
cmpsb
ret
gs
and
jbe
mov
mov
aad
andl
scas
push
pusha
mov
sahf
jbe
sub
mov
push
cmp
cli
xor
inc
push
add
fimull
ret
movzwl
gs
fidivrl
xlat
jo
xor
jge
jl
lds
pop
ret
test
add
mov
test
xor
movsl
or
fistpl
inc
and
mov
mov
aas
mov
std
jae
cld
mov
in
pop
push
jecxz
in
test
addb
inc
add
pop
jbe
setns
fdivr
xorl
test
dec
cld
push
jns
inc
fistps
jle
sti
movsb
inc
adc
out
mov
adc
loopne
xadd
push
mov
ret
out
jbe
rorb
or
mov
inc
push
xor
cld
dec
sub
xor
incb
mov
fsubp
add
add
arpl
test
sub
call
testl
daa
add
movsl
add
push
xor
or
add
aas
ds
std
jns
lds
out
xor
add
sbb
das
faddp
insb
sbb
out
xchg
sahf
mov
inc
sub
xor
cmpsl
imull
fists
add
adc
daa
add
mov
out
mov
iret
dec
pop
fiadds
jmp
add
cmc
cmpsl
in
test
cmp
adc
xor
int
mov
jecxz
add
sub
adc
sub
std
fisttpll
ljmp
in
mov
popf
jmp
xchg
outsb
filds
xchg
daa
ja
mov
jno
add
add
sub
subl
mov
std
cwtl
stc
sbb
cwtl
push
push
out
inc
ljmp
push
pusha
jnp
das
adc
bound
test
push
jnp
xor
in
rcr
mov
popf
sbb
mov
rol
jmp
mov
push
xchg
adc
pop
repz
rol
jmp
add
jns
int3
cmp
xchg
adc
dec
repnz
or
or
repnz
cmp
jmp
mov
popl
jmp
adc
add
sbb
and
ret
fiadds
add
incl
in
inc
add
cli
cmp
sub
js
add
lods
loope
jmp
or
sub
aam
out
ljmp
add
fnstenv
inc
das
pop
cli
dec
push
jg
xor
leave
fsts
cmpb
push
add
or
jne
mov
add
lods
mov
incb
mov
sti
dec
js
sbb
in
jbe
adc
movsb
sar
fdivp
rol
fstp
das
pop
mov
add
repz
add
ret
loope
inc
inc
loop
add
fisubrs
add
out
push
or
call
push
adc
xor
je
push
fadds
call
ret
rcrb
add
adc
push
mov
sbb
push
mov
idivl
adc
jle
add
add
cmpsb
xchg
add
notb
jmp
das
ljmp
aad
add
fldcw
cmp
in
or
xchg
xchg
je
ficoms
add
add
sbb
popa
cmp
testb
fildl
mov
je
std
push
push
push
lock
inc
enter
sarb
repnz
xlat
insb
xchg
mov
xchg
mov
sub
decl
sbb
int
add
and
cltd
adc
aad
or
push
add
jmp
int3
rcrb
add
lret
std
cmp
or
sbb
sub
repnz
sbb
and
das
xor
inc
mov
mov
loope
shrb
and
ljmp
and
call
fcomps
mov
cmp
or
gs
xor
mov
sar
add
int
out
je
ret
xor
inc
jae
mov
clc
jne
jecxz
pop
loope
stc
jmp
shlb
pushf
mov
enter
adc
add
push
adc
and
xorl
sub
add
sub
ja
inc
and
into
mov
in
add
call
jmp
mov
xchg
jno
lock
test
sbb
cwtl
fimuls
mov
test
or
in
inc
and
icebp
push
shll
jecxz
mov
int3
jp
loope
incl
aad
add
add
push
jecxz
mov
push
jb
in
stos
sub
sub
das
jmp
daa
add
clc
jmp
jns
push
sub
pop
test
stc
or
fyl2x
test
add
push
lods
adc
pop
out
xor
call
mov
jns
fldcw
sub
mov
test
or
jb
pop
mov
fadds
mov
mov
into
add
sub
push
in
cs
add
fiadds
sbb
iret
rolb
mov
clc
lret
pushf
pop
std
adc
adc
mov
add
mov
movl
cld
jecxz
rolb
sbb
call
add
push
push
add
cli
shlb
adc
jmp
outsb
stos
je
xchg
imul
inc
stc
decl
fists
stos
je
add
pop
cld
lcall
or
dec
jle
and
push
pop
mov
jmp
adc
in
scas
ds
call
testl
push
call
xor
fidivrl
movl
add
fisttps
add
outsb
je
dec
incb
jne
pushl
das
ret
inc
aaa
inc
das
sbb
fisttps
jmp
je
push
jns
add
popa
insb
dec
je
je
xor
lret
int
aaa
inc
das
test
addr16
add
lcall
int
in
je
pop
popa
mov
lcall
jno
out
je
xor
add
dec
pop
cmp
dec
aaa
mov
push
jp
aad
ja
pop
inc
stos
mov
insb
ja
pop
ss
es
loope
insb
ja
pop
adc
xlat
sub
call
rcrl
inc
sub
lcall
out
aas
call
rorb
out
xchg
into
xor
mov
jo
cmp
add
fisttpll
adc
push
adc
inc
ret
fstps
inc
in
insb
cmp
push
sbb
call
popa
sbb
jmp
push
das
fimuls
out
call
imul
popa
and
cli
push
nop
fildl
dec
xchg
cmpsb
inc
jmp
sub
jb
fstpl
lret
rcl
sub
std
push
add
call
stos
sub
shlb
ljmp
sbb
stos
sub
xor
push
inc
jmp
pop
stos
sbb
jg
and
add
xchg
or
stc
mov
add
jbe
mov
xor
xor
add
cmp
call
test
add
faddl
add
cmc
std
popa
decb
adc
mov
std
mov
and
jmp
in
out
incb
aad
or
add
dec
mov
pop
out
xchg
add
fcomi
inc
pop
fcoml
mov
fildl
adcb
xlat
inc
push
fimull
add
push
xchg
lcall
add
shl
loopne
fisttpl
ljmp
lds
rcrb
mov
aad
pushl
clc
push
cmp
add
out
mov
mov
inc
nop
test
and
pop
inc
imul
outsl
inc
idiv
pop
icebp
ss
das
cli
xchg
xchg
scas
pop
dec
mov
mov
and
incb
add
insb
cmp
movsb
repz
out
je
add
ret
adcl
ds
sub
cmpl
cmpsl
push
add
aam
scas
rorb
xor
out
mov
push
add
mov
cs
loopne
call
ss
popf
mov
add
hlt
push
out
call
ret
mov
and
mov
outsb
and
mov
add
sbb
call
pop
pop
imul
push
imul
call
mov
xchg
mov
push
and
imul
pop
call
call
mov
pusha
enter
ficoms
call
push
fsubrs
xor
mov
pop
mov
bound
out
add
inc
cmp
xor
xchg
xorl
jl
orb
add
mov
jnp
add
je
mov
test
or
add
adc
insb
jl
movsb
hlt
jnp
lcall
add
sub
mov
std
into
fsubl
add
sbb
mov
pop
sti
jmp
rcll
decb
add
adc
mov
inc
xor
adc
inc
pop
jb
dec
movsb
stc
mov
pop
adc
inc
clc
adc
inc
add
rcl
int
packssdw
sbb
lea
daa
std
lcall
pop
mov
test
sbb
ds
add
dec
fists
mov
add
enter
add
popf
mov
mov
cmp
idivl
das
jo
jae
lock
out
xor
add
adc
and
jno
call
push
scas
inc
push
movsb
sub
or
test
push
stc
pop
mov
orb
mov
jno
or
and
pop
incb
add
lds
test
push
xlat
test
or
fidivrs
pop
and
ret
xor
pushl
insl
ficoms
inc
fwait
int
lock
daa
add
popf
or
pop
negb
in
out
call
mov
mov
push
sub
std
pop
mov
aaa
cmc
add
iret
add
sbb
test
in
fisttpll
mov
or
add
call
fisubs
loopne
stos
add
fidivs
sub
arpl
pop
ret
mov
add
in
or
insb
jns
in
cmp
inc
jmp
ljmp
mov
addr16
gs
ss
js
sahf
loopne
call
gs
ja
std
jle
add
aam
sub
cmp
cmp
or
inc
jmp
sub
shl
ds
lods
ds
mov
fwait
inc
jmp
test
fiadds
add
fildl
add
mov
sub
xor
push
flds
test
adc
sar
shrl
push
push
decl
adc
add
repnz
jmp
dec
add
test
xchg
shlb
pop
mov
dec
mov
inc
pop
testb
sub
pusha
add
fildl
lea
nop
add
std
pop
jecxz
das
test
push
sbb
add
ja
pop
mov
add
sbb
inc
das
lea
and
test
jmp
scas
iret
clc
mov
sbb
xchg
dec
sar
jns
adc
mov
mov
rclb
outsl
test
mov
test
jne
xlat
push
adc
xchg
sar
push
mov
jmp
ret
add
cli
sti
push
jmp
addb
loopne
fldenv
aaa
sbb
das
fsubp
push
sti
int
leave
xor
imul
loop
add
jbe
pop
jns
call
stos
data16
imul
add
les
mov
push
nop
or
shlb
and
js
cmp
pop
inc
scas
push
stc
arpl
pusha
or
jmp
mov
add
lret
outsl
hlt
sbb
jb
stos
insb
repz
push
jne
push
sbb
daa
iret
add
sbb
fildl
ds
call
inc
xor
add
mov
xchg
movsl
mov
movsl
loop
aaa
insl
jne
mov
sub
fnstenv
insl
cmp
pop
fdivl
sub
cltd
add
sub
add
jle
inc
icebp
fmull
pop
xor
into
add
iret
inc
jmp
inc
sbb
call
sub
cmc
add
xor
test
push
inc
cmp
lahf
out
je
in
sbb
je
call
insb
jmp
add
jae
add
lds
inc
and
inc
clc
sti
pushf
cmc
push
cmpsb
inc
cwtl
repz
ljmp
in
fstl
lahf
std
inc
sbb
mov
pop
jne
add
clc
xor
incl
faddl
pop
or
jne
inc
in
rorl
test
movsb
add
adc
ss
mov
pop
std
pushl
or
call
cmp
sbb
add
bound
out
iret
sbb
nop
inc
notb
scas
mov
mov
ljmp
xor
xor
inc
inc
push
cmp
rorl
lcall
inc
add
mov
test
call
movsb
jno
adc
les
adc
std
call
xor
outsl
rcrl
dec
mov
aad
shr
adc
xchg
sar
frstor
fnstenv
mov
je
push
test
mov
fsubp
xorb
cwtl
push
bound
add
fucom
add
xor
popa
xchg
ret
cwtl
das
out
das
xchg
sub
jb
dec
call
xor
add
pop
jb
or
add
addr16
mov
fsubp
add
lea
aam
add
push
loope
insl
enter
jge
add
inc
addr16
fildl
add
lret
sbb
add
add
adc
push
mov
scas
bnd
outsl
mov
call
fstpl
ds
aam
das
push
enter
stc
mov
enter
jae
hlt
adc
push
frstor
ret
sbb
push
mov
xor
or
sbbl
std
cmp
fimuls
ret
jbe
add
popa
inc
or
clc
add
xchg
sbbl
std
add
mov
mov
je
push
nop
cmp
or
shl
push
incl
lret
js
cmp
jnp
scas
dec
std
call
fcompl
dec
xchg
enter
push
mov
cwtl
xchg
popf
outsl
xchg
push
ljmp
adc
icebp
or
add
and
roll
pop
rorl
add
push
pushf
dec
jne
sub
sub
adc
fldt
xor
push
std
shlb
push
outsl
xchg
mov
aad
inc
daa
pop
add
test
das
addl
stos
stos
cli
push
std
nop
and
repz
add
add
jl
dec
cmp
pop
enter
lds
mov
sub
test
add
inc
mov
add
addr16
jmp
cwtl
mov
push
sub
mov
dec
xor
fstp
inc
mov
in
or
aas
shrb
les
stos
cmpsl
cmc
push
pop
std
popf
daa
addl
mov
fsub
adcb
out
stos
mov
jae
mov
daa
fsubr
bound
dec
mov
jo
pusha
pop
sbb
sbb
add
xor
pushl
fsub
xchg
repnz
inc
sbbl
dec
or
xlat
xor
mov
push
outsl
add
test
mov
add
insb
xor
jp
std
adc
push
aam
roll
lods
mov
pop
ret
add
xlat
pop
in
push
sub
push
sahf
shr
fisubrs
cli
inc
test
mov
pop
lock
call
lea
shl
imul
sub
xor
insl
insl
test
sub
imulb
add
add
sub
je
jmp
call
loope
sbb
adc
jecxz
faddl
in
call
dec
adc
add
adc
out
bound
add
in
push
loop
je
jmp
test
call
loope
xor
aad
add
xchg
je
or
loopne
push
mov
sub
add
add
push
rcl
inc
push
mov
in
aaa
sbb
mov
dec
sbb
mov
jns
push
aaa
add
sub
push
sar
mov
call
adc
aad
cmpsb
lea
xor
push
aaa
lock
ljmp
sar
icebp
xchg
das
or
xor
jp
leave
add
sub
cmp
insb
aad
movsb
jb
in
je
divl
add
movsl
lds
ret
fstpt
jge
jbe
push
push
inc
push
cmp
data16
add
fdivp
add
sub
xlat
shll
movsb
and
add
pop
push
call
mov
imul
loope
add
imul
rcll
fisubs
push
enter
mov
jmp
fldt
hlt
daa
add
mov
out
mov
daa
rorb
aas
dec
cld
mov
cmp
lock
or
cmpsl
add
pop
mov
inc
cmp
add
adc
sbb
inc
ficoms
or
mov
jno
ljmp
gs
sarb
push
mov
sub
incl
dec
or
xchg
or
jle
sub
imul
jmp
sub
cmp
pop
int
mov
mov
loope
movsl
xor
xor
icebp
andb
repnz
mov
je
add
test
add
je
push
mov
mov
mov
hlt
dec
lea
pop
mov
ss
shl
push
lock
cwtl
push
or
fldl
subl
push
xchg
lret
call
lea
cli
dec
call
dec
and
xor
jle
fwait
xchg
mov
mov
or
push
sbb
pop
jmp
push
cwtl
sub
inc
add
add
lea
sbb
sahf
and
inc
add
into
inc
faddl
jmp
in
ret
lcall
jae
in
out
jns
movsb
jge
jnp
jno
incb
gs
push
jge
push
loopne
add
xor
lds
cmp
lds
aas
dec
add
das
js
es
push
xlat
push
ss
mov
cli
add
das
fildl
lea
add
mov
icebp
push
or
ja
dec
xchg
mov
cs
in
je
adc
xchg
pushl
fisubrs
cs
dec
and
cli
ret
inc
push
in
inc
push
push
call
add
stos
cmc
jge
xlat
imul
fsubp
pop
mov
out
xlat
mov
imull
lods
shll
add
mov
out
stos
popf
adc
mov
fsubp
pop
or
inc
dec
pop
cmp
push
add
repnz
pop
jnp
inc
add
aas
mov
pop
stos
pop
cmp
aas
icebp
fs
add
aas
fcmovnb
mov
sbb
and
sub
mov
in
mov
sbb
or
add
not
std
hlt
ror
inc
jmp
dec
cli
push
push
sub
inc
adc
push
inc
add
neg
std
hlt
aam
inc
jmp
call
cltd
adc
xor
call
mov
xor
bound
adc
push
pusha
jns
xchg
test
add
insb
fildll
jb
xchg
add
notl
dec
and
adc
and
test
in
add
mov
aaa
mov
incl
inc
xor
inc
fisubrl
jmp
push
add
add
or
lret
loopne
inc
repnz
sbbb
mov
sbb
cmp
add
add
cli
jo
jnp
add
mov
ja
call
inc
fs
mov
inc
subl
shrb
add
add
out
pop
aaa
add
mov
ss
jmp
jmp
add
sahf
add
cmpsl
mov
hlt
test
jne
add
push
sub
test
orl
add
add
das
movsl
pop
push
jbe
test
outsb
inc
dec
jl
pop
push
test
imul
ret
mov
mov
rorb
arpl
xchg
mov
fdivrl
inc
cmp
clc
ret
dec
pop
xchg
pop
or
pop
pop
push
xchg
pop
adc
push
or
call
pop
icebp
pop
fiadds
cmc
jge
sub
sub
push
push
add
notl
fisubs
add
out
iret
daa
add
add
pop
fdivl
pop
shr
lret
jmp
mov
call
and
mov
fisubs
xor
add
sub
pop
cmc
pop
add
jne
call
in
arpl
cmpsl
mov
pushf
ljmp
lcall
call
insl
repz
add
aam
sub
popa
adc
cmp
add
push
sbb
adc
sbb
add
insb
lret
in
popa
mov
jmp
add
aaa
std
push
add
cmpsl
and
pop
cmp
xchg
addb
add
pop
lcall
add
jl
rorb
push
push
loope
pop
push
xchg
fstl
add
jp
inc
add
aam
lret
jbe
add
fwait
mov
adc
pop
sub
add
mov
pop
fucomp
int
flds
negb
insl
roll
add
mov
pop
xlat
fsubr
push
dec
sbb
call
xlat
int
rclb
and
and
inc
dec
xchg
addr16
addl
je
push
imulb
daa
push
inc
das
jne
or
sar
sub
sbb
mov
xor
inc
dec
pop
cmpl
push
mov
sub
loope
test
push
sbb
incb
pop
inc
das
hlt
dec
or
mov
push
pop
dec
xor
shl
inc
out
cmpsb
add
add
sub
add
ficoms
sbb
out
inc
cs
mov
lea
pop
insb
inc
and
add
fidivrs
js
out
jmp
mov
jb
mov
inc
mov
notb
xor
or
dec
add
das
fsubp
mov
add
add
push
mov
daa
cs
xchg
jmp
adc
add
in
pop
adc
rcrb
call
jge
jg
add
pop
add
dec
int
jmp
in
pop
std
adc
jbe
xchg
lock
test
dec
addl
icebp
sbb
call
sbb
addl
add
inc
inc
inc
pop
sub
lock
sbb
sbb
or
cld
add
fmul
inc
jmp
das
pop
add
sub
sbb
in
pop
xor
icebp
shlb
dec
or
xor
bound
jmp
jae
add
ss
inc
or
faddl
loope
push
and
add
std
push
cltd
mulb
mov
inc
add
sbb
call
mov
loope
add
movb
push
incl
xchg
push
lret
xchg
in
call
mov
loopne
add
xor
add
xchg
ret
in
push
mov
adc
fisubl
call
das
mov
cmp
fistpl
add
addb
sbb
enter
inc
add
fiaddl
add
inc
add
repz
clc
dec
out
mov
das
ret
push
cmp
seta
add
cltd
or
inc
add
push
jno
mov
or
addr16
or
decl
pop
push
insb
cmp
add
out
inc
std
out
fisubs
mov
and
add
add
push
cmp
sub
add
pop
test
pop
mov
mov
pop
aaa
mov
fwait
cmp
inc
push
cmc
das
fisubs
xor
lcall
inc
jno
das
fisubrs
andb
add
loope
add
inc
mov
ja
push
pop
xor
test
fldl
inc
push
and
jmp
jnp
aam
add
movsb
or
add
insb
inc
adc
push
add
out
xor
pop
std
out
mov
lock
sbb
fiadds
jmp
adc
jmp
add
cmpsb
hlt
pop
mov
gs
loope
rorb
pop
outsb
push
push
push
add
pushf
push
fldl
arpl
pop
je
enter
and
push
ljmp
sbb
add
pop
std
daa
sub
inc
mov
fs
add
pop
in
popf
and
add
ds
add
fsubrp
hlt
and
lea
sbb
mov
add
adc
lea
ds
pop
gs
and
dec
aas
cltd
and
xor
and
loop
rolb
fwait
sti
mov
push
lea
sbb
cltd
and
data16
bound
jmp
mov
adc
test
faddl
add
push
test
faddl
add
les
xor
lods
and
lret
sub
insl
and
add
lock
sub
add
das
inc
add
imul
loope
movsb
xchg
sub
add
xlat
aaa
mov
jecxz
xor
roll
add
rol
add
repz
inc
mov
cmp
repnz
aaa
mov
push
mov
mov
and
add
mov
mov
cmpsb
push
jp
cs
add
das
fsubp
mov
sahf
mov
es
fbstp
repz
fsubp
add
fsubp
mov
add
sahf
mov
fcoms
jb
mov
add
mov
cmp
call
cmp
fldenv
repz
inc
dec
and
out
sub
aas
jle
cmp
mov
daa
fildll
mov
cs
outsl
cmp
bound
mov
mov
imul
add
mov
or
iret
adc
pop
subb
add
aas
std
push
pushf
fsubrp
icebp
ds
push
inc
pop
xor
out
sub
push
push
jb
pop
in
mov
jl
sub
push
into
sahf
fsubrp
mov
pop
std
gs
xor
or
repnz
std
cmpsb
movsb
test
xor
aad
pop
bound
or
sub
push
outsl
cli
or
xor
pop
lock
jmp
mov
pop
sub
ficoms
fldl
or
and
call
orl
push
or
std
cmp
jne
aam
ljmp
fnsave
lods
fstpl
xor
dec
push
push
fiaddl
mov
xlat
sub
ret
push
mov
push
push
icebp
inc
cld
add
data16
xchg
loope
mov
or
mov
pop
repz
push
push
or
filds
mov
pop
jne
inc
lret
out
popf
ss
movsb
add
pop
jbe
rorl
das
js
pextrw
inc
test
xor
fdivrp
sti
sbb
sub
mov
inc
cmpsl
add
rorb
call
stos
xchg
sbb
add
mov
push
xor
dec
xchg
lods
pop
mov
sub
roll
aad
xor
mov
loope
lcall
dec
xor
fildll
ljmp
ret
or
dec
adc
push
pop
pop
scas
sub
sub
punpckhwd
sub
stos
cs
sub
movl
mov
cmp
xor
out
into
mov
push
dec
pop
insb
or
lret
or
push
or
cltd
mov
fldl2t
sbb
outsl
fisubrs
xor
and
jo
dec
stos
or
ret
ficoms
sahf
pop
push
popl
outsb
orb
ljmp
stos
roll
stos
sarl
inc
in
adc
mov
add
pop
inc
inc
jmp
gs
push
std
jmp
add
cli
arpl
out
mov
addr16
loope
cwtl
std
push
inc
bound
frstor
arpl
cmp
mov
lock
and
popa
xor
add
lret
sub
in
cld
maskmovq
std
xadd
cmp
cltd
and
psrlw
leave
push
add
add
pop
add
inc
jmp
inc
ret
pcmpeqw
mov
call
lret
inc
loope
in
mov
icebp
int
add
mov
rcll
add
add
decl
or
testl
jp
mov
cmc
xchg
add
fnstsw
ret
jnp
jmp
jae
in
cli
fildl
add
add
stc
call
mov
pop
pop
in
adc
or
push
aam
stc
pop
addb
xchg
das
inc
add
int3
xor
movsb
xlat
inc
inc
push
bnd
push
sbb
inc
pop
inc
adc
sbb
mov
out
inc
clc
mov
push
sbb
adc
cmp
inc
jae
les
add
xor
mov
add
inc
inc
call
sbb
movsl
add
pop
jno
cmp
xor
mov
ret
lods
pop
das
hlt
fidivl
ret
lods
or
ficomps
xor
out
xchg
mov
jge
pop
jge
sub
test
push
gs
fld
dec
add
fimuls
addr16
pop
fisubl
push
dec
jle
inc
cmc
popf
inc
mov
cli
inc
add
dec
and
xor
mov
into
out
out
movsl
inc
mov
das
js
pusha
add
fimuls
sbb
call
arpl
push
out
push
jp
fldl
inc
push
cmp
mov
out
jp
arpl
test
xlat
dec
rcrl
pop
mov
fiaddl
cmp
stos
push
push
or
pop
arpl
push
add
push
lret
and
inc
push
loope
pop
fs
push
lret
repz
and
jmp
jno
std
cs
fcoms
sarl
push
lcall
jo
fiadds
mov
aas
push
pop
xchg
jecxz
ret
test
push
insb
out
push
inc
movsl
dec
std
jmp
jmp
or
dec
and
add
add
test
shlb
push
cmp
mov
mov
push
mov
std
xchg
ljmp
xor
imul
dec
cmpl
add
gs
fildl
add
repnz
pop
and
push
repz
push
mov
lcall
test
mov
jmp
stc
cld
xchg
das
and
imul
aaa
repnz
mov
into
pop
push
jns
add
iret
sbb
inc
xchg
pop
popf
xchg
das
aaa
add
mov
xor
imul
xor
ss
mov
mov
jno
rcr
mov
jp
inc
dec
aam
mov
test
push
movsb
fcmovbe
push
add
jns
enter
movsl
out
fisubrs
movsb
push
mov
jnp
jp
jmp
out
std
fldl
loop
mov
xor
xlat
xlat
sub
js
cmp
ror
adc
sub
ja
jmp
add
orl
sti
icebp
mov
repz
mov
mov
ss
pop
dec
jb
stos
push
faddl
add
std
sbb
lret
js
xor
popf
jns
aaa
cmp
and
add
ret
adc
movsl
enter
inc
sub
add
cltd
jecxz
pop
fildl
enter
testl
xchg
das
cmpsl
rcll
cwtl
outsb
dec
in
lods
fldl
pop
lret
adc
cs
xor
add
xor
imul
or
cmp
push
icebp
sub
fdivrl
lods
inc
fcoml
pop
fildl
out
shrl
cltd
cld
es
mov
cmpsb
scas
faddl
sub
fidivs
cmp
xchg
and
push
xor
sahf
out
jae
push
xor
je
and
dec
cmp
je
push
jmp
xor
add
loop
inc
mov
or
pop
dec
mov
jmp
mov
cmp
je
push
mov
add
popf
add
jae
enter
mov
test
or
mov
xor
mov
mov
mov
push
xor
mov
push
ficoms
das
imul
add
adc
jle
add
stos
cld
test
je
stos
mov
lods
add
add
pusha
ffreep
sbb
ja
and
and
out
adc
xor
ljmp
inc
push
sub
repz
add
pop
subb
stos
ja
add
sub
dec
xor
add
cmpsl
lods
and
xchg
adc
push
sar
sti
cmc
add
inc
jle
add
xor
pushl
jmp
imul
filds
add
mov
jle
pop
mov
pop
loop
inc
lds
jb
sarb
xlat
jnp
insb
xor
loop
inc
xchg
xchg
sbb
mov
fnsave
sub
aas
add
pop
push
cld
sub
shr
sub
ffree
add
pusha
cmc
push
add
ret
clc
inc
cmovo
dec
dec
inc
test
fidivrs
mov
inc
or
inc
jmp
push
je
sbb
das
repnz
xor
jo
je
imul
pop
ljmp
push
sub
rcrb
enter
or
pushfw
add
js
andl
jmp
push
xor
negb
cmp
rcl
ljmp
push
bound
std
jno
fiadds
ljmp
and
add
sub
aad
call
test
aas
mov
dec
fildl
testb
and
mov
decb
stos
fildl
jbe
push
shl
loopne
add
decb
fistl
fiaddl
call
inc
lds
outsb
mov
pop
mov
adc
ret
mov
sbb
test
lea
gs
mov
loopne
add
sbb
jb
movsb
sbb
hlt
hlt
add
sub
dec
jbe
enter
or
dec
inc
adc
rol
out
cltd
aas
cmp
mov
jl
aas
lret
cld
mov
inc
xor
std
add
jp
pop
call
lods
sbb
jp
adc
jne
incl
sbb
subb
vsubpd
mov
outsl
xchg
rcll
xchg
cmp
push
movsb
fisubrs
repnz
lock
inc
fidivl
int3
repz
out
dec
lds
out
mov
inc
es
pushf
loop
push
es
mov
testb
add
cwtl
or
ds
stos
rcrl
jns,pt
mov
jl
inc
out
push
popf
shll
pusha
aad
hlt
lds
mov
mov
add
jns
push
test
out
inc
and
and
ret
aam
fcmovbe
lret
or
sbb
inc
push
hlt
cmp
fcmovbe
call
mov
and
xchg
dec
subl
scas
mov
fsubs
inc
jmp
jae
std
jmp
or
les
loopne
ss
sub
dec
push
std
pop
stc
pop
aad
std
push
add
mov
inc
std
or
aaa
adc
mov
jno
fiadds
pop
pop
and
adc
fmull
cmpsb
cltd
inc
add
pop
pop
test
in
ljmp
bswap
mov
loope
pop
out
pop
mov
fs
cli
push
in
fsubrp
jae
cli
incb
filds
mov
mov
add
cs
sbb
incb
fiadds
push
insl
je
outsb
repnz
imulb
insl
push
adc
stc
loope
dec
call
sbb
add
das
mov
and
and
adc
xor
negl
test
das
xor
xchg
out
call
cmp
sub
pop
aas
inc
incl
add
fisttps
cmc
add
pop
icebp
das
mov
mov
call
mov
xor
lock
fmuls
pop
lods
dec
add
mov
mov
pop
mov
and
adc
jg
and
testl
cmp
imul
out
mov
nop
and
incl
cs
nop
stos
mov
and
add
mov
adc
push
lods
aas
lock
hlt
jecxz
sahf
out
jo
nop
mov
inc
and
mov
and
pushf
or
aad
inc
cs
push
das
lret
lds
shrl
out
jo
fs
enter
test
push
insb
mov
add
inc
fisttpl
cmpsb
mov
or
test
je
push
lcall
mov
std
jbe
mov
add
jns
in
push
sub
push
ret
or
dec
jecxz
push
xor
insl
aas
std
bound
push
je
imul
dec
inc
std
fs
test
ss
add
push
xchg
aas
std
jmp
adc
cmp
xor
test
std
mov
cmp
out
test
sbb
mov
ds
call
inc
push
xor
je
std
mov
loop
mov
adcl
push
fldenv
jmp
mov
clc
jecxz
cmpb
je
pop
push
add
inc
push
jno
mov
push
inc
clc
cmpsb
test
jne
fidivs
add
aaa
jge
push
pushl
in
fidivs
sub
sub
sbb
ljmp
xchg
xchg
ss
jo
push
add
jle
push
mov
sub
jne
add
fsub
mov
aas
inc
sbbl
push
sub
jge
outsl
inc
mov
adc
cmc
orl
ja
fdiv
sti
sbb
ret
das
inc
mov
xchg
add
movsb
das
mov
inc
bound
sub
sub
push
pop
imul
into
sub
push
add
sub
sbb
enter
mov
add
mov
out
jecxz
bound
push
and
inc
sbb
push
cmp
cmpsl
push
mov
cmp
lock
mov
cmp
dec
pushf
idivb
sub
enter
cmp
push
pop
pushf
ret
xchg
bound
lods
dec
out
mov
xchg
mov
ret
add
mov
sub
in
cmp
add
sbb
adc
mov
add
insb
cmp
and
subl
and
addl
and
jg
outsb
cmp
and
jg
mov
cmp
and
xor
sbb
mov
icebp
or
fnstcw
bound
xor
test
incl
mov
cmp
jb
stos
std
aam
sbb
jmp
add
dec
out
add
ja
mov
or
xor
shl
addr16
xchg
insb
jl
dec
or
fnstenv
mov
std
mov
loop
sbb
cmp
inc
add
cmp
cmp
movb
push
ret
addr16
dec
push
std
pop
add
shlb
ret
push
mov
jmp
inc
mov
popa
ficoml
fisubl
das
ret
xchg
ret
mov
mov
outsl
pop
inc
mov
or
sub
xchg
add
mov
or
cmp
xchg
xchg
les
jg
cmp
inc
add
inc
mov
scas
add
add
shrl
ret
mov
push
jg
sub
push
das
inc
xchg
or
mov
dec
test
push
pop
out
add
mov
daa
or
pop
xchg
sub
call
out
imul
mov
xchg
mov
inc
in
das
fidivs
fsubs
or
pop
dec
adc
call
out
add
repz
pop
scas
sub
mov
add
jmp
out
shll
out
push
imul
loopne
repnz
inc
cmp
mov
loopne
pop
nop
xor
cltd
das
fisubs
popf
push
sbb
out
jg
faddl
jmp
sub
test
sub
add
mov
cmp
je
sub
pop
adc
adc
add
sub
add
scas
sub
inc
lds
call
inc
out
cmp
cmp
insb
cmp
mov
add
sub
inc
std
xchg
ffreep
and
out
add
sub
subl
xor
sub
xchg
xchg
ss
jae
add
imul
mov
outsb
cwtl
aad
add
dec
mov
jne
mov
add
fistpl
xchg
lret
mov
in
not
popf
mov
add
cmp
pushf
jno
decb
add
mov
add
add
ja
call
or
ljmp
daa
arpl
scas
lock
ljmp
pop
roll
pop
addr16
mov
add
movb
incb
inc
mov
mov
xor
aaa
push
sub
insb
sbb
push
sub
add
inc
xchg
sub
add
call
dec
mov
mov
inc
jae
mov
nop
or
mov
cmc
mov
adc
cmp
add
rorl
and
add
jg
pop
cs
out
cmp
inc
orb
adc
rsm
ret
cmp
shr
mov
mov
das
arpl
stc
stos
xlat
push
jnp
paddw
out
mov
ss
pop
in
mov
inc
xchg
pop
shll
jecxz
fwait
lret
mov
xor
sbb
add
out
enter
loopne
mov
xor
loopne
push
pop
jo
je
pusha
mov
lock
hlt
pop
stos
fldt
fs
add
add
sub
inc
sbb
popa
inc
or
movsl
sbb
inc
mov
stos
or
out
sub
inc
push
jns
mov
inc
std
push
mov
inc
bound
add
faddl
pop
and
xor
xchg
pop
and
add
cltd
adc
out
mov
loop
and
xor
lods
jmp
push
popa
jnp
mov
fimuls
add
call
add
or
or
arpl
adcb
push
pop
rorl
jmp
adc
fisttps
or
push
and
dec
lea
or
call
decl
cmp
outsb
dec
lea
add
call
je
push
in
faddl
sti
sbb
test
pop
pop
aam
sarb
adc
pop
mov
or
pop
xor
xor
mov
rorl
sub
icebp
pop
jno
dec
rcrl
scas
mov
enter
and
mov
push
or
cmp
xor
outsb
mov
aas
push
addb
in
inc
add
test
pop
test
in
inc
jle
test
jae
jne
add
fcomps
outsl
call
divl
in
fnsave
ret
push
mov
inc
xor
idiv
fstl
mov
gs
xor
pop
stc
sbb
add
add
xor
and
lock
cld
sbb
adc
divl
insl
fidivs
ret
sarb
sbb
add
stos
in
lods
sub
adc
xor
pop
ds
out
repnz
scas
insl
mov
cld
add
mov
cmc
add
mov
rorl
xchg
test
and
and
aam
sbb
cwtl
js
je
jae
lods
test
jmp
pop
pushf
add
test
test
mov
add
add
adc
hlt
cs
aad
cld
ss
add
popa
jo
sbb
das
std
xchg
mov
das
std
sbbl
pop
out
ret
gs
call
lcall
xorb
je
pop
testl
int
inc
test
push
mov
std
xchg
add
add
fcoml
popf
inc
add
push
and
daa
jno
fildl
inc
es
and
mov
and
adc
jl
imul
mov
and
mov
lea
pop
ret
adc
adc
mov
call
add
lds
dec
mov
add
jp
adc
add
add
pop
fisttps
cs
test
das
inc
fwait
daa
stos
adc
cmp
fwait
mov
inc
jl
pop
cwtl
aam
inc
lea
cs
adc
xlat
or
fmuls
mov
movsl
dec
enter
rclb
adc
and
mov
sbb
push
xchg
fstpl
dec
add
cwtl
cs
enter
jnp
into
roll
fucom
mov
stc
inc
mov
enter
fidivs
sub
mov
cmp
out
in
stc
pop
mov
and
sbb
add
cmc
bound
mov
aas
push
add
inc
sbb
incl
rolb
jbe
das
pop
stos
out
mov
add
mov
icebp
mov
call
movl
and
test
pop
into
bound
add
cmp
std
fs
mov
rolb
bound
pop
add
add
orl
filds
out
loope
cltd
ret
sbb
shlb
pop
push
push
loop
loop
add
sub
mov
cmpl
std
call
cmp
es
jecxz
xchg
enter
in
add
clc
call
lcall
jmp
jmp
pop
in
cmpsb
in
aam
add
incb
mov
fiadds
bswap
into
std
incl
jae
lds
push
add
sub
push
call
mov
arpl
jne
push
mov
add
add
in
cwtl
loop
push
stos
jl
into
fdivl
cmp
jne
insl
in
mov
add
dec
pop
fstp
outsb
cs
jp
stos
fnsave
mov
mov
push
xchg
decb
mov
or
mov
xor
adc
push
xchg
push
lcall
inc
dec
mov
cli
sub
pop
lods
mov
rcrb
jo
or
repz
xchg
movsb
pushf
mov
xchg
mov
pop
popf
call
mov
jns
add
push
jle
out
add
fcomp
xchg
bound
std
push
outsl
out
add
pop
push
scas
xchg
mov
jnp
clc
movsl
test
stos
jb
and
daa
clc
das
xor
bound
jno
dec
cld
cmp
out
cmp
scas
or
hlt
or
fs
pop
fsubp
js
jecxz
or
shll
add
es
or
pop
aam
add
xchg
fdivs
jl
add
sbb
std
pusha
out
aad
mov
out
loope
test
sahf
aad
cli
xchg
or
sub
add
and
sub
into
and
ja
subl
addr16
dec
out
pop
or
lcall
sub
inc
fucomp
fcompl
hlt
and
aam
in
add
adc
std
and
push
inc
icebp
xchg
lcall
aam
xchg
pusha
std
jmp
pop
pop
mov
cmpsl
cmp
and
movsl
jne
push
popf
adc
push
in
pushl
repz
ret
push
mov
insb
mov
std
sbb
mov
mov
test
psrld
call
js
add
inc
push
cmp
in
leave
or
push
fmull
psllw
or
push
jbe
jne
lret
mov
add
test
jl
movsb
in
jnp
repz
sbb
out
push
and
sbb
inc
xor
mov
jne
pop
pop
sbb
mov
mov
int3
jnp
add
xchg
lods
roll
xchg
or
loop
aas
aas
sbb
jl
jae
mov
mov
clc
stos
enter
push
loop
jnp
daa
mov
jle
mov
ss
add
jmp
ret
or
or
aaa
or
xchg
loope
cmp
xor
jl
loop
stos
xor
mov
and
shrb
sbb
shr
daa
test
test
test
lods
movsl
jmp
and
test
ss
add
cmpl
cmpsl
add
pop
lahf
pop
inc
inc
outsb
loope
testb
cmp
add
loop
cmpsb
popf
fldt
mov
std
sub
mov
inc
add
adcl
jmp
cmp
aaa
adc
mov
dec
pusha
add
sub
pop
xor
and
sub
fiadds
insl
mov
add
lods
mov
ljmp
call
insl
in
roll
adcl
insl
and
mov
and
and
pusha
clc
add
loope
imul
loopne
sub
and
orb
std
je
popa
jne
push
push
or
jne
enter
fsubr
sbb
loopne
mov
lret
int3
in
xor
decb
mov
push
jmp
inc
xchg
push
repz
dec
sbb
xchg
fbstp
add
cli
pushl
mov
incl
inc
in
insl
nop
mov
cmpsb
xchg
test
add
das
insl
mov
icebp
hlt
push
insl
cli
hlt
push
and
test
sbb
add
and
int
mov
insb
subl
add
mov
add
and
lea
shlb
add
scas
xor
js
add
scas
xor
clc
pop
incb
popa
xor
mov
or
jne
and
add
daa
sar
loop
fidivl
add
daa
insb
out
aaa
jno
add
fisubrs
xor
ret
mov
add
mov
sbb
xor
movsl
and
outsb
add
pop
data16
fisubrs
or
into
inc
add
add
jb
add
push
adc
ljmp
push
lods
adc
fsub
add
out
sub
jo
test
std
scas
xchg
test
or
dec
mov
mov
pusha
andl
dec
in
add
test
cmp
ss
jmp
test
in
bound
je
pop
add
add
sub
push
movsl
sub
test
sub
mov
fiadds
fs
stos
adc
stos
pop
add
sub
adc
jp
rolb
adc
in
jb
rclb
fstl
add
xchg
lret
sub
inc
test
sub
xor
mov
mov
out
pop
dec
out
dec
or
dec
js
lds
call
sti
call
sbb
test
fildl
add
and
divb
jecxz
hlt
sbb
add
fnsave
or
add
fnsave
dec
hlt
jne
call
mov
push
dec
in
dec
lcall
fimull
in
aas
lcall
mov
popf
jl
sbb
int3
xchg
rolb
push
lcall
push
push
inc
hlt
das
mov
pushf
shll
mov
das
aaa
mov
addr16
push
and
std
inc
stos
inc
lock
sbb
or
std
mov
hlt
push
mov
adc
dec
adc
adc
decl
push
mov
and
js
and
sbbb
xchg
call
cmp
inc
add
add
test
mov
inc
inc
aaa
pop
popa
ja
mov
sub
lahf
mov
in
xchg
fstpl
in
xor
notl
lock
dec
add
iret
push
ret
cmpsl
popf
xor
in
sub
sbb
inc
rorb
sub
bound
ss
sbb
unpcklps
lcall
das
push
sub
add
aaa
mov
loope
ficoms
fwait
lret
cmpsl
add
iret
xchg
push
add
rclb
test
push
adc
pop
pop
hlt
scas
sbb
into
push
jbe
pop
jl
lcall
push
rcrl
jecxz
shll
push
xor
push
jo
add
sub
xor
std
fcompl
xchg
sahf
add
push
and
sub
fsubrs
ljmp
adc
movsb
fldt
les
sbb
xchg
push
loop
sbb
cmc
cli
lahf
add
in
data16
sub
add
ficompl
adc
cltd
add
add
dec
call
sub
call
cmp
inc
add
sub
add
jg
ret
or
mov
lock
lcall
mov
xchg
add
aad
inc
push
test
fiadds
sbb
lods
hlt
mov
mov
push
jno
lods
adc
xlat
fimuls
xchg
orps
jp
sbb
adc
cld
dec
add
lds
je
je
adc
cmp
xchg
popa
out
js
cld
std
cli
pop
addr16
xchg
in
std
pusha
fdivr
inc
adc
inc
das
mov
les
xor
fildl
cs
push
cmp
nop
mov
push
mov
jg
pop
xchg
test
add
push
push
daa
adc
lret
or
add
popf
add
aad
enter
stos
bound
das
fsubp
pop
and
arpl
add
fimuls
cmpsb
xchg
out
push
xchg
mov
cld
andb
mov
out
das
pop
neg
out
fnstsw
std
cmp
stc
inc
das
push
cwtl
ljmp
or
sbb
ja
test
add
inc
das
aad
pusha
mov
add
movsl
jmp
sbb
cld
push
mov
pop
xchg
jbe
addr16
fstps
inc
call
mov
add
mov
or
push
mov
and
scas
adc
inc
int
push
push
adc
xor
sub
std
cld
enter
mov
fsubrp
std
push
sub
adc
jbe
add
add
pop
pop
loopne
jecxz
jo
inc
icebp
stc
xor
cmp
imul
and
jnp
jmp
sub
mov
call
mov
insb
ficoms
incb
decl
adc
add
pusha
enter
test
test
test
jns
push
xchg
xchg
push
push
in
add
jns
fadds
xchg
add
push
push
shrl
add
mov
faddl
add
cltd
add
pop
cltd
addb
fisttpll
jl
clc
call
call
addb
fisttpll
test
add
push
add
cmpb
add
orl
rolb
imul
push
sbb
adc
add
cli
je
das
jmp
std
sbb
xor
inc
adc
mov
pop
cmp
stos
out
add
mov
aam
cs
mov
jl
and
inc
inc
or
mov
jno
add
outsb
jge
push
inc
cmpsb
cli
std
sub
adc
sti
or
mov
leave
and
mov
insl
sbb
fisubl
subb
add
or
jecxz
add
imul
add
xchg
add
or
jge
mov
stos
or
fsubp
mov
jmp
out
das
test
mov
in
fs
jmp
dec
out
aad
insb
ja
das
in
nop
dec
out
cmpsb
pop
pop
xchg
sar
inc
xchg
xlat
clc
ret
roll
xchg
sub
shll
cltd
lret
sbb
cmpsw
das
fidivs
pop
stos
jle
dec
mov
call
mov
and
addl
test
mov
jl
std
mov
pusha
pop
std
pusha
clc
rcll
shll
sbb
adcl
out
mov
gs
fstps
repnz
add
je
insb
sbb
add
mov
fldenv
std
into
ffreep
insb
jo
rcrl
add
std
mov
cltd
and
sub
or
xor
mov
cmc
add
out
push
sbb
sbb
orl
mov
call
mov
addl
inc
sub
test
push
insb
add
mov
add
enter
and
dec
call
or
cmpsl
adc
xchg
bound
mov
insb
add
stc
jmp
xchg
aad
lret
add
mov
push
sbb
jns
das
in
pop
call
mov
insl
pop
xchg
aaa
roll
mov
movsb
sbb
or
fnstcw
cli
add
xor
mov
add
mov
xchg
rcrl
insl
sub
mov
das
pop
add
pop
popf
inc
add
cmpl
into
jmp
subl
imulb
push
jo
lock
insb
adc
add
cmp
insl
adc
or
xor
fucomp
push
add
fiadds
xchg
sub
ljmp
mov
inc
neg
bound
arpl
shll
push
addr16
add
in
sub
adc
popf
xor
aad
adc
or
add
and
test
xor
add
push
jo
jmp
mov
mov
adcb
inc
or
push
xor
pop
pop
rcll
add
stos
push
xor
add
addl
inc
jmp
out
loopne
push
sub
add
stos
fs
jmp
push
sahf
add
sub
xchg
mov
adc
loopne
mov
fiadds
lcall
fcomps
sub
call
incl
std
fadd
in
inc
jmp
xchg
stc
fsubrp
call
push
in
inc
jmp
jo
test
jno
add
ficomps
dec
push
mov
jg
fimuls
and
inc
hlt
fstpl
je
jnp
mov
push
or
add
xchg
push
push
jmp
jge
inc
data16
pop
hlt
cmp
add
xchg
or
push
mov
inc
inc
or
lock
stc
push
incl
xchg
inc
in
insl
sbb
xlat
fcoml
xchg
fstl
add
sti
fbld
jne
xlat
out
int3
out
repz
push
cmp
call
push
sub
in
std
cmp
inc
das
jp
je
cs
hlt
andl
dec
repz
movsb
mov
add
add
sbb
xor
push
jle
js
rclb
adc
jae
mov
mov
fiaddl
add
bnd
out
js
nop
shl
jae
fistps
mov
add
repnz
inc
add
add
add
mov
js
xchg
out
ja
adc
negl
mov
lock
ss
aam
add
mov
inc
das
arpl
push
xor
das
test
enter
inc
das
paddq
jno
jb
out
test
repz
jmp
add
or
or
cmp
lret
jmp
add
jge
fldcw
or
push
jnp
scas
push
call
fmull
add
add
sbb
sub
pop
rcrb
clc
call
sub
int
stos
arpl
inc
stos
jns
in
cmp
fwait
cld
cmp
mov
sub
add
pop
fdivrp
hlt
hlt
adc
dec
inc
sahf
add
add
sub
xor
test
or
inc
cmpsb
aas
imul
push
add
in
icebp
lods
push
add
add
sub
jmp
in
into
cmp
mov
mov
mov
or
call
ret
push
mov
dec
setns
xor
inc
jno
adc
lea
cld
jno
or
sti
addps
inc
or
push
xlat
add
mov
or
rcll
add
or
add
cmp
test
mov
adc
sbb
xchg
loope
es
dec
stc
add
lds
cld
mov
out
cmc
inc
or
aad
xor
mov
sub
test
ja
out
idivl
clc
repz
ja
mov
adc
in
pop
add
insb
add
jb
pusha
sbb
repnz
add
ja
mov
inc
inc
and
outsl
test
sub
inc
pop
clc
shr
adcl
cmp
dec
repz
into
add
jle
clc
push
fidivs
out
mov
out
cmpsb
stc
imul
push
xor
jl
cmc
outsl
push
pop
push
xor
mov
lret
sub
icebp
fidivrs
add
lcall
adc
adc
mov
sub
fldt
or
js
cli
popa
push
negl
adc
out
xchg
fucom
add
out
das
fisubs
push
mov
fildll
adc
bound
push
cmp
inc
popl
lds
sbb
mov
in
ret
add
jl
sub
lock
arpl
aam
lock
or
lock
std
decl
jnp
rcr
shlb
pop
arpl
sub
jnp
sub
adc
stos
push
jnp
xchg
sub
xlat
push
push
jns
scas
clc
bound
sub
cmp
stos
inc
aam
mov
mov
mov
test
add
and
test
pop
jns
xchg
mov
test
pop
imul
and
add
pop
mov
add
mov
iret
inc
mov
cli
mov
mov
int
dec
div
shl
mov
or
add
mov
popa
ret
add
push
test
mov
adc
xbegin
aam
scas
fmull
adc
sub
adc
push
mov
jp
aaa
hlt
rorl
repnz
movsb
push
std
ljmp
hlt
and
sarl
aas
clc
movsb
rclb
cli
stc
mov
inc
add
push
divb
in
outsl
fdivrl
adc
andl
add
cmp
and
jle
pusha
rorl
in
push
add
out
imul
mov
xchg
ja
cmp
movsb
mov
jo
mov
add
pop
fstpl
push
mov
cmp
shr
out
in
pusha
push
inc
pop
out
js
fsubp
add
mov
push
mov
xlat
jle
sbb
pop
cli
add
movsl
pop
call
jnp
sub
mov
pop
cmpsl
jo
and
enter
add
insb
sbb
ret
jo
jecxz
xor
sub
fsubl
dec
sbb
mov
out
push
loop
add
mov
adcl
xchg
or
clc
or
or
cmpsb
mov
jae
adc
fdivs
add
movsb
xchg
faddp
lods
pop
faddp
movsb
pusha
pop
ret
lods
push
pop
test
aad
xorl
mov
push
add
add
jae
inc
fwait
in
and
leave
sub
add
popa
pop
icebp
cmp
mov
cmpsb
dec
decb
mov
pop
jnp
sub
inc
add
sbb
aam
mov
popf
loopne
mov
add
adc
enter
dec
cwtl
sti
xorb
xchg
mov
add
push
or
lret
cld
xchg
inc
inc
andb
add
push
pop
or
jg
add
fnsave
je
add
push
sti
fcmovu
or
sahf
add
inc
incb
mov
dec
sub
or
inc
inc
push
mov
incl
add
loop
mov
and
outsl
fsub
or
push
fadds
icebp
call
sub
jg
cmp
in
lods
dec
xchg
outsl
hlt
cmp
mov
mov
or
in
pushf
je
in
ljmp
out
bsr
add
lods
cmp
adc
adc
repnz
std
lods
mov
adc
adc
push
testb
test
mov
jnp
pusha
xchg
pop
jle
push
xor
shlb
push
push
pusha
push
fistl
out
test
cmp
sqrtps
aad
sahf
test
out
hlt
aad
push
push
movsb
repz
xchg
xlat
jl
add
mov
das
fisubs
jae
mov
add
cs
jo
xchg
mull
jl
cmp
aad
dec
dec
add
js
push
cmp
movsb
lods
mov
das
fidivs
cwtd
shll
push
add
pop
dec
mov
xchg
fdivs
push
data16
shll
jbe
cld
bound
rorl
aad
popl
es
xchg
in
xchg
cmp
faddl
push
push
xchg
les
add
pop
jnp
scas
xchg
jmp
pusha
addb
fiaddl
fimuls
call
shr
jl
xchg
bound
repnz
pop
push
shll
add
add
push
inc
lahf
je
pop
or
ficomps
mov
xchg
popf
add
in
jl
add
add
add
mov
dec
xchg
adc
or
cmovns
add
stc
inc
fcoml
jl
add
test
push
or
lret
adcb
dec
sbb
fldl
inc
mov
test
sub
loope
mov
dec
inc
call
into
lret
aad
add
das
sub
lds
mov
in
mov
add
add
jle
fdivs
in
sbb
mov
jmp
call
push
push
decl
data16
ss
add
mov
adc
lcall
sbb
dec
adc
fisttpll
js
mov
jecxz
add
inc
and
cmc
or
push
push
jl
or
add
fidivs
ficompl
out
out
hlt
sarl
mov
imul
cmpsb
xchg
sarl
bound
fdivs
push
xor
das
push
ljmp
push
lahf
push
hlt
lahf
mov
jnp
adc
ljmp
pusha
push
ja
jmp
dec
fistl
rcll
out
rcr
add
add
jo
imul
mov
adc
fldt
sub
in
add
cmp
iret
fiadds
rcrl
dec
lds
dec
push
fnstenv
mov
mov
jmp
std
fidivrs
rorb
mov
pop
arpl
xor
test
push
cmp
jbe
add
jo
add
sub
cmp
inc
imulb
pop
jnp
sub
xchg
lds
fcomp
std
lods
push
cmc
pop
push
cli
fcmovnbe
xchg
or
loopne
jge
loopne
cmp
inc
in
xchg
call
jg
adc
jns
push
push
inc
les
out
fcoms
call
or
add
inc
gs
loopne
rorb
mov
cli
or
inc
fildl
or
je
pop
or
push
xlat
push
ud1
call
xchg
xchg
push
push
rclb
std
push
or
orb
mov
je
jne
std
das
orl
data16
rcrl
add
add
mov
addb
or
mov
cmp
ret
inc
add
mov
mov
add
or
icebp
lret
mov
fidivs
jb
push
shl
sar
dec
fnsave
xlat
fnsave
gs
mov
add
mov
push
cmp
xor
std
sbb
fnsave
adcb
fsubrp
add
jnp
mov
sti
pop
dec
add
bound
jne
pop
std
jno
and
and
dec
jae
add
call
jbe
in
ds
and
aas
imul
push
mov
mov
lock
imul
aaa
mov
xchg
fsubp
cwtl
cs
fwait
mov
aas
ficoms
das
pop
xchg
push
adc
mov
inc
sbb
mov
mov
add
add
cmp
insl
test
mov
or
add
stc
mov
ljmp
stc
mov
test
bound
out
xor
jmp
add
testb
sub
add
mov
cmp
jns
bound
mov
mov
repnz
jnp
add
cmpsl
cmpsl
clc
sarb
jae
imul
and
outsl
push
jo
out
xchg
js
jnp
clc
faddl
jge
loope
or
lock
popf
out
add
lcall
or
jno
stos
inc
xchg
gs
lock
lods
cld
sub
lahf
inc
mov
in
xchg
push
cld
lea
flds
fadds
add
dec
repnz
out
test
add
test
pop
jns
imul
fisttpll
adc
dec
push
adc
cld
add
cld
jmp
add
das
dec
mov
mov
icebp
push
sbb
xchg
jl
xor
sub
inc
adc
lods
ret
add
fbstp
out
enter
xor
dec
inc
or
rorb
push
sub
lret
orb
test
add
pop
mov
in
lds
jl
call
outsb
das
fdivs
in
sbb
push
clc
sar
mov
lea
fidivs
aaa
fnstsw
lea
test
in
lret
loope
stos
xlat
cmc
out
xchg
movsb
fildl
add
stos
adc
stc
stos
xlat
mov
negl
stc
in
lods
clc
or
dec
push
pop
or
inc
stos
pop
inc
mulb
in
sub
or
cmpsb
cmp
mov
daa
fdivrp
ret
push
repz
cmpsb
stos
out
mov
xor
mov
frstor
faddl
sub
ffree
and
add
fldl
sub
ljmp
jnp
dec
xor
addr16
sub
ljmp
jb
inc
sbb
jo
adc
out
cmp
xlat
fiadds
mov
aaa
jnp
movsl
fwait
clc
into
pusha
testb
push
std
xor
jmp
jb
mov
add
repnz
sahf
mov
clc
out
fwait
hlt
push
push
add
push
xchg
faddl
push
xchg
loopne
inc
xchg
in
dec
lock
inc
mov
test
arpl
movzwl
fldt
std
std
test
dec
add
pushl
add
jge
fdivs
push
inc
loopne
pop
cmpb
jno
or
fdivrl
pop
ss
add
add
jg
or
aam
xchg
enter
inc
rolb
push
in
mov
jbe
imul
das
pop
mov
jnp
fsubrs
add
repz
sub
dec
insb
mov
xchg
in
mov
mov
outsb
lcall
daa
insl
sub
push
sub
ds
test
incl
add
mov
or
das
imul
add
cmp
push
xor
sti
mov
out
inc
in
or
inc
ret
call
out
push
cld
xchg
add
add
fwait
xchg
add
aaa
loop
mov
xor
sti
mov
fcmove
sbb
push
cmpsl
cmc
ror
push
fcmovnbe
add
xchg
xlat
mov
aaa
subl
in
in
cs
arpl
pop
xor
xchg
shll
fbld
aaa
data16
aad
fwait
jmp
icebp
cmc
cmpsb
fwait
xor
pavgb
xlat
pushf
out
imul
mov
add
pusha
sub
pop
imul
cld
mov
test
stc
repnz
mov
pop
imul
cmp
bound
jg
repnz
bound
stos
xor
push
jb
inc
in
xor
dec
add
sub
push
jb
leave
add
lret
mov
or
push
jb
add
or
or
mov
sbb
fdivs
mov
sbb
lret
insb
fldl
das
or
lahf
mov
incl
add
aaa
repnz
repnz
frstor
cmp
movsb
adc
mov
sbb
pop
aad
jb
add
jno
fisttpll
test
mov
xchg
fiadds
pushl
or
mov
pushf
add
ljmp
push
mov
push
pop
in
inc
add
xchg
shrl
xchg
data16
data16
add
or
pop
das
mov
cli
add
add
add
and
cmpb
add
add
shlb
inc
mov
insl
ss
movsb
push
mov
pop
mov
pusha
add
loopne
rcl
sub
lock
cli
add
adc
sub
mov
add
add
das
cld
mov
adc
ret
jmp
xchg
fbstp
repz
call
out
test
mov
adc
push
lcall
sbb
sub
add
inc
ljmp
das
loope
cmp
add
loope
ret
fsub
movsb
xchg
clc
shlb
inc
das
add
pop
pusha
pop
xchg
jge
aas
frstor
lcall
mov
mov
pusha
cmp
movsb
xor
add
fidivs
lcall
lock
sti
mov
mulb
addr16
icebp
mov
enter
cmp
out
enter
out
arpl
sub
or
jmp
pop
add
mov
clc
sub
fiadds
jb
mov
out
movsl
addr16
call
add
rolb
imul
cmp
add
sub
data16
mov
xchg
adc
add
jb
fmuls
fnsave
jbe
das
int3
std
incl
add
pop
cmc
add
pop
add
faddl
xchg
fildl
add
sbb
aad
aaa
ret
mov
shl
add
xchg
mov
aaa
xor
loop
jb
dec
xor
call
add
xchg
rolb
fiaddl
xorl
inc
cld
mov
fiadds
adc
mov
add
push
adc
dec
insb
cmp
or
jno
call
mov
add
shl
push
mov
addr16
aas
lahf
jnp
lret
xchg
rol
fistpll
sub
faddp
ret
jns
xor
jnp
mov
fistpll
sub
cmpsb
xor
adcb
push
mov
add
clc
push
or
js
lea
xchg
int
push
aaa
inc
dec
jecxz
fistpll
fstpt
push
inc
fldl
xor
fmull
push
daa
pop
lods
mov
pop
adc
shr
iret
push
mov
pop
out
cmp
add
insb
push
sbb
pop
jne
iret
ljmp
cmp
out
sbb
cmpsb
mov
insb
rolb
add
in
pop
dec
mov
pop
sub
stos
mov
fstpt
jno
fbld
in
inc
lahf
je
inc
jnp
std
jmp
jg
cld
test
xchg
cs
loopne
push
pushaw
neg
push
scas
mov
or
mov
std
out
sbb
in
addr16
push
add
sti
add
insl
loope
subl
testl
mov
stc
push
movb
xchg
stos
mov
cs
loope
xorl
mov
cs
inc
or
je
push
add
or
in
pop
scas
push
push
insb
mov
sub
test
xchg
mov
out
cmp
int
xor
insb
add
loopne
jge
loopne
push
mov
add
movsb
or
mov
sbb
data16
movsb
or
sbbb
dec
into
scas
dec
push
mov
fcoml
push
loop
shlb
dec
push
test
out
lea
dec
push
scas
mov
xchg
add
inc
addr16
adc
and
test
add
add
orb
jo
push
add
cmp
leave
mov
add
mov
lods
outsb
outsb
inc
or
clc
push
push
lods
aad
subl
inc
push
mov
and
cmpsl
mov
add
lods
xchg
incb
sub
mov
adc
arpl
cmp
mov
les
add
ret
inc
push
add
das
inc
inc
hlt
adc
add
xchg
jg
add
dec
ljmp
nop
fucom
in
in
int3
das
fisubrs
inc
sub
add
pop
lods
sbb
pop
movsl
daa
call
sti
push
adc
sbb
pop
movsl
and
inc
and
pop
jg
movsl
sbb
lods
xlat
pop
xor
lret
adc
ss
sbb
pop
cwtl
lret
cli
push
and
sti
mov
mov
jno
call
fcmovnb
cs
lret
test
out
sub
cmc
lret
xchg
stos
rcrl
pusha
in
loope
test
jne
push
push
cmpb
push
mov
std
jmp
pop
ljmp
je
scas
cs
divb
mov
sbbl
gs
push
sbb
test
std
fdivl
add
outsl
sbb
sub
sbb
out
sub
inc
shll
divb
push
cli
dec
aas
hlt
insb
or
mov
push
lock
std
add
in
pop
rorl
add
std
cs
shr
mov
mov
popf
cld
push
and
sti
incl
add
sbb
sbb
push
je
js
jno
and
sti
decl
loop
add
sbb
aam
cld
push
jge
jge
loopne
add
lods
xchg
mov
mov
cmp
rolb
addr16
pop
das
cmc
add
shr
call
icebp
jne
ja
fsubr
scas
jo
test
jge
xor
add
add
sbb
xor
push
ss
pusha
add
mov
ljmp
jge
int
cmp
imul
add
adc
rclb
popf
ljmp
add
dec
or
sti
mov
repnz
std
cmpsb
hlt
add
das
lahf
or
das
cmc
jnp
lods
fisttpll
das
stos
sahf
jbe
add
xor
nop
jnp
and
test
push
and
cmpsb
adc
subb
enter
jl
daa
out
das
fimuls
mov
std
cld
jo
jecxz
in
std
daa
fisubl
sbb
fwait
sti
aaa
adc
ss
cmc
sbb
xor
ss
jno
or
add
pop
int
das
fisubrs
imull
jbe
dec
add
push
fidivs
jnp
je
loop
iret
sti
pop
in
mov
push
or
jmp
xor
jecxz
loope
push
or
jmp
mov
mov
mov
in
cmc
adc
sub
std
mov
jnp
cld
ss
roll
fdivrp
cld
cld
loopne
inc
jmp
dec
lock
out
jb
data16
data16
jnp
sub
jl
sub
shll
leave
in
or
xchg
addb
loopne
add
mov
mov
xor
lea
mov
or
xchg
lea
push
roll
call
pusha
sbb
dec
cmpb
xchg
dec
or
gs
pushf
cmpsb
sbb
push
push
jnp
sbb
cmpnleps
add
pop
sti
je
mov
jne
sbb
or
jp
sbb
setb
add
push
cmp
jecxz
add
pop
ret
add
cmc
ja
jns
jns
in
jge
sarl
das
movsl
mov
xchg
sub
lret
mov
add
ret
xor
pusha
js
sbb
xchg
jg
ja
repz
hlt
pop
sub
cmc
add
outsl
popf
xchg
jg
mov
jge
das
cmc
add
inc
shr
das
sbb
andb
in
jl
repnz
cli
loop
lock
fisubs
xor
les
jb
add
xlat
pop
dec
hlt
enter
push
pop
or
das
ja
cli
cmpsl
cwtl
cmpl
pop
push
js
inc
sub
cmc
cmp
pop
cmc
cld
mov
subb
outsb
cmc
jge
jb
imul
sub
shlb
sub
fdivl
negb
mov
js
push
jl
pop
dec
dec
les
idiv
loopne
add
push
add
std
out
popf
adc
into
subl
insb
xchg
push
lret
test
std
mov
jecxz
aad
int
clc
insb
fsubp
cld
in
jecxz
out
aad
sub
adc
push
inc
jle
cmc
out
insl
jecxz
test
sub
or
inc
xor
test
sub
add
sub
add
add
sub
dec
divb
xchg
or
jmp
jbe
add
mov
mov
mov
dec
push
call
mov
add
outsb
lcall
or
push
call
dec
sbb
add
cmp
cmc
cld
pushl
xor
or
dec
int
mov
jge
xchg
sbb
add
add
mov
or
test
popf
or
xchg
lods
incl
push
lock
lret
test
dec
faddl
push
das
enter
jp
flds
add
cmc
lea
jl
les
push
call
lret
fsubrs
inc
mov
sbb
fwait
add
call
add
stos
xor
add
or
inc
out
daa
iret
roll
sub
scas
cmc
add
and
adc
data16
fimull
push
xor
inc
psubd
sub
mov
das
push
movsb
pop
or
scas
sti
out
out
lds
jmp
dec
test
scas
cld
in
add
test
ret
adc
pop
ret
enter
jmp
rclb
mov
or
mov
gs
ljmp
mov
ret
mov
sub
out
xchg
test
push
pop
pop
sub
es
jo
pop
pop
dec
add
je
adc
insb
pop
negb
mov
insb
out
pop
jno
or
dec
jns
or
sub
rep
mov
data16
dec
push
pop
data16
push
je
mov
roll
xchg
mov
xchg
inc
mov
data16
jb
jmp
cld
cmp
lds
test
fisttpl
and
and
pop
test
shl
xchg
call
jle
repnz
xchg
push
in
mov
cmpsb
push
mov
pop
mov
xorl
lret
mov
fcoml
jecxz
std
add
call
mov
or
mov
or
xor
decl
or
adc
xchg
xor
test
pushf
incb
loopne
data16
and
inc
iret
add
sahf
add
push
mov
orb
xor
inc
popf
mov
add
dec
push
mov
mov
xor
xor
or
mov
rolb
jp
jb
mov
clc
mov
push
push
clc
xchg
push
or
xchg
int3
mov
lds
imul
pop
or
add
xlat
adc
rcrb
inc
cmp
add
jl,pn
or
inc
lds
das
push
cmp
pop
add
decb
push
mov
sub
das
jmp
dec
push
pop
dec
das
addr16
cmp
jmp
ret
out
ret
cmpsl
dec
xchg
popa
sub
das
jmp
mov
call
int
jmp
stos
or
push
jmp
xor
add
or
xor
stos
cmp
add
pop
add
jns
fucomi
add
pop
daa
dec
das
outsl
add
and
jmp
jb
lcall
daa
rorl
add
fwait
jmp
shll
sub
into
mov
mov
inc
jb
addr16
jne
or
mov
fildl
dec
addr16
fsts
dec
mov
push
sti
jmp
test
ret
addr16
or
cltd
jmp
ror
or
pop
sub
mov
out
bnd
dec
cmp
pop
js
xchg
fisttpll
ljmp
fiadds
add
xchg
or
dec
lret
push
xchg
adc
add
inc
pop
out
cli
add
add
jne
call
xorl
ljmp
or
jnp
call
test
test
sub
inc
jns
add
gs
mov
mov
sar
cmpl
add
push
mov
cmp
cmpb
or
inc
cmp
outsb
add
adc
lds
into
cmpb
adc
pop
rorb
jbe
inc
jbe
inc
add
mov
pop
mov
jb
shr
dec
inc
aas
push
mov
adc
pop
push
std
jp
mov
inc
mov
add
cs
std
add
loopne
mov
jns
mov
call
aam
icebp
movl
push
std
and
xchg
mov
mov
xor
lea
je
call
push
pop
cmc
jle
adc
pop
inc
loop
in
fstp
mov
test
push
mov
sti
mov
jbe
and
call
lea
add
pop
adc
xchg
ret
scas
jg
push
out
cmc
fsubr
jno
iret
sub
jnp
add
fucomp
add
fwait
inc
or
mov
sbb
add
xor
inc
icebp
push
mov
mov
fsubs
in
stos
aaa
bound
call
sub
cld
outsb
xchg
xchg
call
mov
std
push
add
sub
add
xor
inc
xor
out
test
cs
in
imul
pop
pushf
push
pop
shl
test
jmp
pop
imul
cwtl
pop
shr
js
jmp
sbb
addl
icebp
outsb
aaa
adc
xchg
jmp
test
push
or
xor
dec
lock
add
lcall
pop
insb
lcall
jl
call
addb
mov
mov
inc
jne
mov
xchg
jne
pusha
dec
cld
stc
sub
filds
nopl
aaa
add
push
inc
cld
jne,pn
ljmp
push
jmp
push
loope
test
mov
decl
inc
dec
sbbl
lea
add
std
add
xchg
add
pop
dec
jae
ss
cld
xchg
xchg
std
mov
mov
cmpsl
scas
inc
inc
loop
repnz
insl
mov
test
inc
lds
add
xlat
xlat
push
divb
je
into
pop
or
sti
mov
pop
push
in
adc
std
pop
fsts
mov
add
mov
jne
push
jg
data16
loopne
loop
notl
fs
aam
mov
imulb
dec
cmp
outsl
sub
sub
add
fidivs
sub
cmp
cmp
into
roll
sar
sbb
xor
push
mulb
addb
or
aad
add
push
push
ljmp
sarl
cmpsb
fwait
daa
dec
mov
addr16
sub
push
jmp
push
enter
pop
stc
test
scas
call
pop
dec
add
andb
rolb
cmpsl
cld
inc
cltd
mov
fisttpll
rcll
stc
popf
or
insb
pop
sar
add
roll
fdivrl
insb
rol
push
sbbl
inc
loop
les
rcrb
xor
fiadds
mov
sub
ret
filds
call
dec
popf
push
test
push
and
adc
jne
sub
fisttpll
nop
xchg
fldl
mov
pop
test
flds
add
inc
and
sub
add
mov
adc
inc
loopne
ficompl
jne
icebp
shl
sti
stos
push
outsb
xchg
movsl
call
gs
fucomp
and
daa
or
mov
cld
mov
jge
movsb
cmp
ja
jge
mov
cld
xchg
add
add
cli
call
and
cmp
call
jbe
add
and
jns
add
or
call
jecxz
test
loop
pushf
orl
sub
cwtl
aad
lds
mov
lret
or
das
dec
sub
pop
dec
dec
and
sbb
test
sub
insl
mov
add
fsubrp
addb
call
leave
pop
inc
xchg
push
xlat
cltd
and
pop
sub
mov
ljmp
mov
stos
add
popa
ss
mov
cwtl
cmp
add
xchg
cltd
ja
jmp
jbe
fsubrp
jle
stc
fsts
xchg
add
arpl
popa
dec
or
add
aad
mov
mov
gs
out
movb
iret
add
cli
or
das
pop
sub
add
jo
sbbl
push
out
fiadds
xlat
lahf
dec
and
cmp
sub
stos
push
sar
imul
and
stos
xchg
iret
cld
adc
les
sub
addl
jmp
icebp
sbb
lret
xchg
jne
sahf
dec
and
mov
sub
mov
xorb
call
push
add
jmp
imul
movsb
inc
pushl
dec
loopne
adc
add
insl
and
arpl
and
loope
sbbl
cmpsb
loop
push
adc
andl
sti
std
pushl
push
lret
xchg
mov
gs
fisttps
loope
inc
cmc
push
mov
adc
std
call
mov
add
fistl
cwtl
lds
loopne
je
or
and
insl
sbb
dec
lds
mov
mov
psubsb
sbb
add
das
aam
cmc
das
mov
mov
or
jnp
add
pop
xor
push
xlat
ljmp
stos
jge
add
xor
push
add
jl
add
mov
add
out
jbe
outsb
add
cs
shrb
pop
add
fsubrp
in
vpsrlq
mov
mov
lds
add
int3
retw
xor
add
fdivp
xor
push
repz
jl
sbb
mov
xabort
retw
jnp
shll
push
jmp
pop
out
jg
jle
stos
ror
outsb
les
insl
xor
imulb
fwait
pop
lret
adc
push
mov
lcall
call
xchg
push
ret
push
push
call
js
jmp
add
aam
and
jmp
xor
inc
mov
test
cmp
ss
inc
fsubrl
es
mov
dec
ror
xchg
ret
or
daa
dec
leave
cld
lcall
rorl
mov
in
bound
pop
in
xor
sub
lods
sbb
or
mov
add
or
mov
pop
add
or
outsl
aam
daa
mov
add
jp
jnp
jns
mov
mov
je
inc
add
pop
jbe
push
loope
or
jmp
push
fcmovnb
push
push
data16
inc
jp
fmul
gs
mov
inc
push
dec
mov
in
adc
add
add
add
pop
stc
push
push
pop
std
push
out
xchg
pop
shll
jmp
dec
inc
clc
sub
add
into
xor
jne
jae
inc
addl
gs
mov
std
fimull
fadds
gs
push
inc
int3
je
inc
xor
inc
mov
std
ret
jae
sbb
or
pop
stos
std
and
std
mov
mull
fwait
mov
orl
jno
mov
repz
leave
test
fdivrs
lds
xor
push
and
cld
cmp
xor
and
inc
or
sub
call
cwtl
or
mov
mov
aas
mov
cmpsb
mov
jmp
stos
movsb
bound
sbb
fucomp
add
add
movsb
pop
adc
jmp
add
or
das
fidivrs
test
enter
ljmp
push
enter
icebp
icebp
push
outsl
fisubs
sbb
sti
test
rol
retw
inc
or
fldt
mov
les
std
ret
push
and
lcall
insb
ffreep
cld
scas
jecxz
inc
cmpsb
leave
xchg
add
add
xchg
leave
push
adcl
shlb
pushf
add
push
sub
push
push
and
push
adc
das
cmp
push
fnsave
push
or
push
movb
sub
out
out
sbb
in
fiadds
add
mov
add
inc
fisttpll
jmp
dec
inc
cld
out
clc
pop
inc
xor
in
add
xor
mov
push
jp
add
or
push
sbb
inc
xchg
sub
add
dec
stc
test
imul
push
scas
inc
xchg
flds
jne
call
add
adc
and
adcl
jne
dec
inc
lock
mov
push
sub
loop
pop
aas
fwait
add
and
add
cs
pop
xor
jo
mov
js
add
lcall
aas
mov
je
xor
inc
xchg
mov
movsb
outsb
adc
push
or
call
loop
subl
xor
inc
pop
stc
js
jmp
cmc
cmp
insl
mov
mov
dec
call
ja
add
scas
sub
lcall
mov
push
movsb
orl
das
push
inc
and
jne
or
stos
add
das
lds
sub
jno
je
inc
inc
sbb
movsb
sbb
inc
dec
pop
fildl
or
ljmp
pusha
mov
xor
fdivrl
jmp
lahf
popa
or
fstpt
sub
add
pop
jecxz
ficoms
mov
jge
das
fisubs
push
mov
subb
jmp
jp
xor
fwait
push
movsb
imull
ss
jp
into
mov
dec
pop
lods
bound
sbb
test
mov
shll
testb
or
add
or
dec
fld
leave
adc
jo
lcall
jl
mov
push
subl
add
xchg
jmp
clc
gs
sub
mov
sbb
insb
repz
out
int3
sub
sub
out
subl
mov
pop
ljmp
loope
test
add
filds
add
gs
pop
hlt
gs
adc
stc
out
repnz
mov
or
shlb
rcll
add
sbb
data16
repz
jbe
jo
shl
or
out
call
jbe
push
lret
add
shll
cld
jno
push
test
stc
adc
fcmovnu
add
add
loope
inc
add
xor
add
das
cmc
add
and
adc
dec
dec
or
addl
das
mov
arpl
mov
testl
add
inc
mov
clc
lods
add
pushl
sbbb
sub
push
or
dec
mov
xchg
je
mov
and
cli
clc
mov
mov
dec
and
add
cld
inc
and
cmp
das
mov
inc
or
lock
jns
jne
cmp
lock
jns
xchg
sbb
insb
mov
les
call
les
pop
push
mov
mov
add
insl
fsubrl
adc
pop
ljmp
pop
inc
cwtl
das
add
sti
mov
pop
shrb
in
jmp
adc
sub
sbb
jmp
pop
sub
sbb
sar
push
fisubs
mov
sbb
pop
add
mov
pop
sub
sahf
cmp
sarb
mov
or
cld
jmp
sbb
jmp
scas
fdivp
sbb
div
adc
cmpsl
rcl
pop
test
movb
lods
add
mov
add
sub
ljmp
push
xchg
call
xor
jbe
mov
sub
fcompl
enter
sti
add
shr
cmc
dec
jge
jmp
lea
push
fstpt
fsts
incb
add
jge
mov
or
loopne
sarl
dec
fiaddl
cmovb
sti
call
push
or
xchg
andl
cmc
or
decl
cld
orb
mov
mov
jns
or
adc
cld
shlb
stc
je
flds
leave
pop
adc
inc
das
and
dec
add
dec
stos
ret
fldl
int3
mov
add
mov
inc
inc
dec
sub
lea
mov
nop
sub
jmp
shrb
inc
add
mov
and
xchg
les
sub
ljmp
or
xchg
das
movl
fcoms
inc
xchg
push
sbb
in
je
inc
dec
in
add
push
or
xchg
mov
jo
and
sbb
xor
bound
sub
and
imul
sub
pop
mov
shl
faddp
cmp
popf
jmp
lea
sbb
cltd
push
jmp
movsl
aaa
jmp
ljmp
xchg
inc
out
sub
aad
dec
cmp
clc
add
inc
and
and
mov
jmp
cmp
xchg
sahf
pop
in
push
inc
push
jmp
dec
sub
lahf
add
mov
subl
add
pop
sarb
and
call
cltd
mov
or
xchg
clc
push
stc
aad
mov
pop
gs
std
stos
rorb
bound
ljmp
add
jo
add
scas
cmp
fiadds
push
loopne
sub
les
sub
xchg
pop
movsb
cmp
sub
cmp
aaa
jmp
cld
bound
arpl
add
loopne
cmp
std
jbe
pop
adc
add
push
push
jmp
inc
push
mov
add
inc
pop
push
mov
filds
add
sar
inc
gs
and
out
data16
push
add
movsl
jne
pop
jo
jle
idiv
sbbl
sbb
je
arpl
je
fwait
push
cld
rcrl
push
ret
cld
call
inc
add
les
sub
xchg
clc
scas
jnp
je
pop
push
mov
add
mov
inc
aaa
inc
fstl
inc
xchg
sbb
xchg
inc
dec
or
add
xor
sub
dec
add
daa
or
out
les
in
movsb
dec
addb
movl
std
mov
push
sub
adc
dec
xor
add
cwtl
jae
mov
sahf
std
js
popf
jmp
inc
jp
add
das
fsubrp
fdivrs
mov
js
push
mov
adcl
cli
ficoms
cmc
shrl
sub
or
fdivrs
mov
out
or
ljmp
in
pop
out
jecxz
pop
push
sub
add
jo
add
sbb
test
adc
mov
arpl
mov
rcrl
fdivp
push
repnz
test
nop
cmp
sbb
jle
addr16
jo
mov
pop
ds
and
fimuls
aaa
insl
mov
mov
pop
xchg
mov
cld
bound
mov
cld
inc
mov
imul
xchg
mov
daa
xor
add
mov
sub
xor
mov
or
cmc
faddl
test
jo
in
sbb
test
out
add
arpl
std
notb
cltd
sub
testb
fs
mov
pop
cltd
add
xchg
xchg
aaa
imul
push
fildl
xor
add
lea
jle
pop
add
movb
repz
arpl
pop
out
lock
jne
pop
push
add
out
mov
jmp
jne
push
jo
cltd
out
call
add
ljmp
sbbl
pushl
push
inc
cs
push
dec
sub
xchg
je
add
mov
inc
daa
sub
cmp
mov
jnp
inc
movl
or
jl
mov
sub
cmpb
push
lea
mov
or
jb
or
adcb
mov
outsl
testl
sub
scas
mov
and
sbb
inc
scas
cmc
adc
dec
int
add
mov
clc
push
sub
sub
mov
fwait
xor
loope
mov
sbb
cmpsb
out
adc
fimull
loopne
movsb
daa
jmp
repz
arpl
inc
ljmp
mov
xchg
cmp
pop
scas
ret
mov
add
or
adc
mov
jl
mov
loope
cmpsl
hlt
out
pusha
shr
cmpsl
and
sub
mov
sub
mov
sub
jne
mov
repnz
xor
shll
and
jecxz
cmp
test
test
cmc
push
std
shlb
lds
addr16
pop
faddl
enter
adc
loop
mov
add
jb
shll
enter
dec
mov
insb
inc
call
les
add
push
mov
mov
dec
push
mov
fisttps
loope
out
mov
lds
inc
mov
adc
dec
data16
sbb
dec
inc
xchg
mov
pop
hlt
pop
inc
xor
sbb
add
filds
mov
clc
or
call
cmp
add
pop
hlt
pop
shll
movsl
sbb
fiadds
orb
push
test
xor
dec
sub
dec
inc
sub
mov
adc
ds
hlt
cmpsb
sub
vandnpd
or
ljmp
lds
mov
adc
add
nop
mov
xchg
das
cs
xchg
inc
xlat
cmp
inc
hlt
mov
xchg
adc
xchg
mov
mov
or
inc
jge
jb
sub
mov
xchg
xchg
mov
xchg
pop
loop
or
sbb
ljmp
movsl
repz
add
add
aaa
imul
pop
adc
mov
ret
aad
xchg
mov
xchg
adc
xchg
pop
pop
loop
ss
movsb
dec
pop
stos
push
scas
icebp
xor
std
repnz
lret
jmp
inc
jg
ljmp
lfs
add
ficoms
cld
mov
mov
loopne
insb
rolb
jmp
add
cmpsl
push
pop
jmp
mov
pop
jnp
sub
or
pop
inc
or
ljmp
jmp
inc
mov
sub
fstps
negl
sub
sub
sub
xchg
pop
pop
sarl
rcrl
jmp
add
cmc
rcrl
insb
insb
loop
out
mov
orb
inc
int
cmpsb
cmp
pop
hlt
testb
sub
xchg
loope
xchg
ljmp
pop
fildl
mov
fdivrl
rcr
inc
das
sub
pop
push
push
fildl
add
push
fisttps
pusha
pop
sbb
loop
mov
mov
inc
sbb
cltd
jne
in
fsts
inc
scas
mov
mov
push
test
sub
pop
test
xchg
cmp
fnstsw
add
add
jl
cld
ljmp
popf
xchg
lods
xchg
inc
add
cmp
jg
adc
data16
out
jg
imul
cmp
cmp
sbb
add
subl
xor
lds
jmp
dec
sbb
insl
int
cmp
jecxz
das
lds
adc
decl
mov
mov
mov
and
adc
mov
inc
xchg
mov
xchg
std
adc
push
xor
fsubrp
lcall
int3
add
gs
lods
xor
fs
pop
add
stos
ds
popl
pop
pop
mov
sbb
add
add
loopne
movsl
pushl
aas
sub
jmp
mov
movsl
fcos
cmp
fistpll
cld
cmpsb
and
leave
ljmp
fucomi
leave
into
stos
mov
lods
or
ss
pop
pop
xchg
add
cmp
lea
add
push
je
xor
sub
add
loope
dec
sub
pop
lds
int3
xchg
mov
fsubrl
cmp
push
lods
in
or
cld
fldl
jmp
cltd
jb
bound
or
sub
call
cmpsb
loopne
lock
cmp
xor
into
repnz
stos
lds
loope
test
stos
cld
add
add
jg
sbb
push
pop
push
sbb
mov
incb
jno
jmp
daa
inc
sbb
push
fstps
jmp
stc
add
arpl
jmp
pop
xchg
xchg
inc
sub
mov
cwtl
inc
insb
sbbl
inc
loop
rorl
jbe
pushl
push
or
add
mov
daa
dec
pop
dec
mov
ljmp
fistps
std
sub
mov
inc
cmp
xor
or
push
movsb
incb
or
pop
mov
jns
and
add
sar
mov
std
movb
enter
cmp
mov
inc
cmp
rorl
or
into
push
mov
sub
add
mov
dec
inc
clc
xchg
add
mov
into
xor
and
push
cli
fadds
mov
mov
dec
fstp
sub
cmp
pop
cmp
aaa
into
mov
push
leave
stc
fldenv
or
cmpsb
xor
loop
sbb
or
sub
or
add
add
xor
into
adc
jmp
lea
fsubrp
cld
mov
cmc
mov
cmp
fisttpl
jb
mov
scas
xchg
mov
std
sub
mov
stos
popf
std
cmpsb
mov
pop
or
movsb
stos
or
xor
loope
fidivrs
ret
cs
jae
outsb
mov
stc
lock
add
stos
adcb
test
fiadds
jmp
movsb
stos
imul
test
jmp
mov
cld
les
bound
movsl
stos
ds
add
fisubs
fimuls
gs
movsl
cld
add
cld
das
inc
fsub
mov
cmp
or
incl
add
add
push
xchg
mov
xor
stos
or
call
mov
lcall
pushf
add
fisttpl
fistpl
add
dec
dec
std
sbb
neg
add
inc
scas
idiv
sbb
or
fildl
call
jmp
daa
fdivr
add
das
nop
mov
das
lds
push
xchg
insb
and
sti
dec
js
mov
hlt
test
and
push
mov
in
pusha
mov
pop
inc
add
mov
cmp
add
aas
addr16
lock
mov
or
fmuls
int
pop
mov
or
mov
stc
addl
std
lods
fdiv
or
push
std
nop
jno
add
mov
orl
fimuls
jo
jecxz
shrb
or
xlat
bound
push
cmpsb
mov
lock
sub
sub
push
jo
loop
jmp
loope
ds
ljmp
cmp
xorb
outsb
xor
stc
cmp
add
mov
fdivr
and
mov
ss
push
lods
das
fsubrp
addr16
cmc
aam
mov
loop
out
imul
inc
jmp
push
ret
mov
xchg
cmp
enter
add
rcrb
std
pusha
out
movsl
jbe
hlt
mov
inc
mov
call
imul
add
pop
push
dec
test
arpl
divb
mov
pusha
mov
sarl
mov
std
lock
into
stos
xor
adc
push
movb
xchg
daa
ret
mov
addr16
xchg
pop
add
and
adc
mov
adc
sbb
jnp
add
fucom
cld
mov
push
cmp
popa
and
out
xchg
pop
cmpb
or
decl
scas
mov
pop
test
out
jecxz
fcmovu
add
jo
dec
popa
mov
outsb
mov
pushl
rorl
mov
push
hlt
outsl
add
inc
add
sbb
das
jb
mov
xchg
jb,pt
cltd
aaa
jbe
popa
cmp
add
mov
mov
inc
sub
cli
cwtl
or
dec
lods
stc
and
add
std
or
xor
cmpsb
repnz
cmp
ja
daa
cmp
mov
xor
xchg
idivb
das
mov
sub
inc
add
xor
cmpsb
jno
sub
repnz
jmp
jge
add
mov
outsb
ret
test
push
jnp
movsl
xlat
mov
push
mov
push
cwtl
xchg
push
add
hlt
scas
push
out
test
xchg
pop
mov
mov
pop
ss
pushf
ret
fyl2x
inc
stos
jmp
out
mov
inc
sbb
js
mov
lods
js
cmpsb
iret
mov
sbb
jo
and
insl
mov
add
insb
cli
test
lcall
mov
inc
push
lahf
jmp
pop
lret
add
sub
add
xor
negb
mov
jae
stos
mov
leave
shrb
aaa
sub
fimuls
aaa
jg
inc
sbb
dec
call
and
add
add
mov
sub
mov
xor
loope
popa
mov
pop
ljmp
mov
shll
push
sub
jge
popa
loope
xor
negb
mov
push
movsb
add
out
add
faddl
inc
pop
loopne
rclb
clc
jmp
pop
pusha
cld
xchg
out
inc
seta
inc
sub
pop
faddl
decl
fcompl
fmull
inc
add
push
xchg
orl
inc
clc
rcrl
or
push
inc
clc
dec
pushw
inc
adcb
setb
add
push
push
dec
xor
gs
dec
adcb
push
push
push
adc
adc
pop
fdivs
rclb
sbbl
add
ljmp
cmp
adc
test
dec
add
mov
ljmp
mov
jae
cmpsb
sbb
xchg
mov
sbb
ljmp
lret
repz
cld
ljmp
jmp
mov
stc
adc
jbe
fs
aas
mov
loopne
out
jg
out
frstor
scas
and
xor
outsl
add
ficompl
movsb
sahf
cmp
insb
cli
sub
or
cmp
test
xchg
pop
mov
adc
inc
or
mull
lahf
jge
mov
repnz
and
sub
lods
mov
add
jecxz
sbb
shr
sahf
lret
mov
mov
jmp
add
into
data16
sahf
fwait
adc
jmp
fildl
addl
lcall
xor
cld
pop
stos
sbb
jmp
test
gs
cmp
sti
cmp
sbb
mov
gs
xchg
dec
pop
cld
lods
inc
aad
cmc
nop
xchg
jecxz
and
fs
adc
mov
in
fistpll
movsl
inc
jo
cmp
test
imul
fcomps
or
inc
mov
mov
scas
mov
scas
mov
inc
int
arpl
mov
or
mov
stc
xchg
mov
sbb
or
sti
call
decb
and
test
repnz
cmp
or
pop
bnd
cmpsl
sbb
invd
jmp
sti
jae
addr16
xor
push
add
in
or
cmp
jmp
or
sbb
jmp
push
push
inc
add
and
cmp
mov
add
callw
iret
movsl
clc
sbb
jecxz
push
loopne
comiss
ret
and
roll
lods
ljmp
in
pop
push
xor
or
pop
jg
fildl
add
das
dec
addr16
cld
les
aad
inc
mov
jb
adc
pushl
outsl
inc
lea
dec
addr16
and
ret
cmp
lret
bound
in
add
das
test
mov
orl
jmp
or
or
aas
das
les
sbb
divl
push
xchg
jge
sbb
add
cmp
clc
gs
bound
into
adc
xchg
adc
iret
aaa
mov
iret
les
jno
sbb
das
add
out
fstpl
out
fstl
inc
xor
jmp
into
inc
jmp
adc
ljmp
in
icebp
pop
iret
fs
sbb
mov
dec
sub
imul
jo
sbb
fs
fiadds
jmp
add
je
cmp
add
jo
sub
leave
or
in
xor
adc
sub
adc
mov
xchg
aas
xlat
pop
loope
jmp
and
pusha
dec
movsl
pop
pop
or
jmp
cld
ss
adc
test
mov
sbb
inc
jo
mov
aam
sub
jbe
mov
cld
pop
add
inc
xor
push
inc
fwait
jbe
aad
or
or
psrlq
adc
inc
test
pop
ficoml
lcall
out
sti
call
fldl
cmp
xchg
decl
dec
or
cmpsl
lock
jns
inc
adc
cmpsl
clc
cmp
jp
sub
or
call
cmpsl
adc
add
adc
or
xchg
cld
pop
and
xor
push
or
lahf
std
inc
fnstcw
adc
pop
ljmp
inc
in
adc
or
sub
cmp
mov
ja
lcall
std
or
shl
sbb
inc
adc
icebp
and
adc
add
in
icebp
pop
popa
sub
xadd
std
inc
lea
shlb
outsl
mov
add
pop
je
jnp
pop
repz
push
mov
test
mov
addb
jl
mov
shr
fsubrp
add
gs
push
fsubrp
add
push
xor
sub
push
jo
loop
cmc
fs
inc
scas
sub
add
enter
test
xchg
lea
jmp
and
das
fsubrp
xor
lods
ja
cmpl
fadds
testl
lcall
mov
popf
or
sahf
sub
das
jecxz
insl
lahf
push
add
xchg
mov
xor
mov
imul
add
mov
std
jo
mov
mov
xchg
jl
jmp
sbb
out
sti
call
mov
or
scas
xchg
adc
sub
and
jmp
imul
add
icebp
out
add
cmp
aaa
pop
dec
fisubrs
jg
xor
je
adcb
in
mov
jmp
lods
std
decl
and
test
dec
push
clc
jmp
imul
jmp
pushf
sub
pusha
testl
loope
xchg
xlat
dec
sub
mov
mov
mov
aas
adc
insl
in
add
add
popf
ss
xchg
inc
cmp
lret
add
mov
sti
inc
loopne
clc
add
fisttpl
mov
or
incl
or
sti
pushf
add
lods
loopne
jle
or
add
and
jecxz
dec
stos
jg
iret
xchg
or
jae
xor
idivb
das
adc
pushf
arpl
inc
adc
cmp
xchg
add
or
add
cmp
xlat
add
test
pop
dec
mov
or
lds
test
pop
and
mov
fsubrp
add
pop
in
jb
xchg
adc
sbb
movsb
psubw
jmp
add
fisubs
pop
in
adc
fsubrp
cmp
add
addb
jne
dec
xlat
shrb
mov
add
fwait
loop
jp
fucomp
add
pop
lods
jb
xchg
xchg
mov
jns
xchg
fs
ljmp
fisubs
fsub
jne
rclb
jecxz
xchg
xlat
shrb
add
sub
mov
cld
push
sub
test
nop
cld
push
mov
adc
adc
xchg
cld
jmp
add
sub
add
xchg
or
xchg
cld
jmp
scas
or
mov
pop
mul
sub
mov
sub
or
jmp
jge
cld
xchg
adc
addb
jmp
loope
aaa
sub
bound
sub
out
ljmp
push
add
mov
lcall
test
push
adc
ret
loope
fnstcw
hlt
sti
call
into
inc
iret
lahf
adc
test
mov
push
fldl
jmp
enter
lods
push
add
fdivl
mov
jmp
or
lcall
idivb
lahf
add
into
inc
dec
mov
cmp
add
add
aad
into
inc
das
in
into
imul
dec
or
xchg
mov
or
xor
and
jbe
mov
leave
adc
adc
push
frstor
shr
or
decl
inc
xorl
in
mov
xchg
or
xchg
mov
or
xor
cmpsb
add
std
adc
leave
adc
sbb
add
pop
fdivs
ffree
jge
sbb
xor
ret
sub
mov
addr16
jmp
jle
lret
sub
push
pop
fildll
cmp
jmp
adc
lret
aaa
lds
adc
pop
cs
aaa
lds
xor
add
fistpll
cmpsl
sub
test
ljmp
add
sbb
sub
jmp
ret
fisubrs
or
sub
lods
imul
das
arpl
jnp
xchg
outsb
cmp
jmp
fiadds
jmp
leave
iret
add
ljmp
fcom
fcomp
xlat
pop
jnp
sub
pop
shrl
jae
sbb
rclb
ss
push
test
jbe
sti
and
add
add
gs
in
pushf
cmp
ljmpw
sub
call
sub
inc
add
lret
imul
mov
inc
mov
out
xchg
push
add
insb
insb
adc
shl
in
add
rol
inc
pop
lahf
pop
cmp
push
incb
dec
and
jmp
push
cld
shll
lock
icebp
or
addl
jo
or
xchg
sbb
mov
xchg
or
jmp
in
sub
decb
and
test
scas
clc
jae
sub
out
popa
std
add
insl
push
test
mov
inc
insb
sbb
push
adc
push
mov
test
and
clc
data16
add
jg
dec
ja
subl
or
jnp
cli
mov
add
and
test
sar
mov
dec
inc
push
scas
out
mov
fmull
test
mov
lods
lock
or
dec
imul
mull
sub
mov
cli
jbe
add
add
std
cmp
in
iret
push
icebp
imul
loope
imul
sub
idiv
adc
imul
xor
sbb
add
fdivp
mov
mov
outsb
push
scas
inc
push
cmpsb
subl
cli
ljmp
push
testl
scas
mov
lods
jle
outsb
mov
pushl
bound
insl
jp
imul
mov
test
ljmp
add
jmp
or
test
xorb
cmp
cbtw
sub
pushw
adc
shrb
pop
div
clc
fstpt
clc
push
or
jmp
push
mov
sub
vpmaddwd
addl
sbb
shr
psubq
lds
stos
pop
dec
inc
adc
push
std
sbb
adc
add
mov
daa
adc
cmp
mov
push
in
adc
stos
ret
mov
testb
or
cld
fidivrs
push
add
into
repnz
loop
add
sahf
std
inc
repnz
adc
sbb
sbb
cli
std
mov
cmp
or
or
mov
mov
movups
mov
adc
mov
pop
cli
std
inc
pop
mov
jl
jmp
clc
lcall
inc
adc
sbb
lea
clc
std
decl
cmp
lcall
mov
notb
sti
push
shlb
clc
lcall
std
inc
bound
mov
das
mov
jns
and
clc
andb
add
pop
stos
jb
add
pop
xchg
sbbb
ret
rclb
jl
insl
jg
rorb
jle
and
mov
imul
and
int3
cli
test
clc
mov
or
xor
sti
loop
mov
sub
out
icebp
addr16
cmp
rolb
leave
mov
outsb
cld
or
jmp
or
add
add
jo
loop
jmp
xor
pop
adc
adc
jnp
das
xlat
jae
sub
mov
daa
xchg
jno
cld
ja
fucomi
add
lahf
sub
add
pop
loopnew
fimuls
cmpsl
and
clc
xchg
and
push
jmp
sbb
ljmp
mov
push
in
outsb
jb,pt
out
add
add
addl
add
fadds
idivb
add
jle
jmp
sub
or
fadd
leave
or
shrl
push
sbb
sub
test
fiadds
ficomps
sbb
clc
sbb
push
aad
fdivr
fdivl
mov
fisttpll
or
fsubrp
inc
adc
test
mov
out
sti
adc
mov
jecxz
cld
add
and
fucomi
std
jne
cmc
outsl
or
leave
loopne
push
pop
rorl
leave
push
add
pop
movb
movsb
sbb
popf
fistpll
inc
or
add
xchg
push
loope
shll
cld
lcall
in
int3
loope
mov
or
loope
push
push
je
lea
fdivr
jne
or
push
je
mov
scas
std
jne
mov
mov
xchg
add
add
pop
fcmovbe
call
std
clc
jnp
jae
std
ljmp
bound
std
fldenv
jae
fmull
push
out
aas
jae
dec
outsl
stos
mov
out
nop
add
lods
insb
mov
das
ja
jae
adc
or
add
ja
lds
mov
clc
cmpps
arpl
jl
add
mov
ja
jae
js
push
rorb
or
pop
fs
stos
mov
subb
add
xlat
andb
xchg
xorb
shll
lret
fcoml
icebp
inc
aad
xchg
out
sub
loop
add
bound
xrelease
addr16
jbe
inc
sub
cld
sbb
pop
fs
data16
push
test
adcl
pop
loop
lods
scas
push
sbb
rolb
addr16
out
mov
adc
nop
pop
xor
pop
sub
lods
pop
icebp
add
inc
fbld
addl
add
inc
loopne
outsl
mov
add
shl
or
sub
inc
int
adc
xchg
or
mov
leave
push
sbb
cltd
insb
cmp
and
sarl
lret
jb
xorl
inc
mov
or
push
fildl
jmp
daa
cmp
push
xchg
out
push
push
inc
int
dec
push
call
or
mov
push
nop
xchg
pop
inc
sbb
add
cmp
and
ret
mov
movups
cld
xorb
xchg
cld
add
xchg
cmc
sub
std
test
jg
mov
add
ss
cmp
jecxz
dec
fiadds
mov
jae
sldt
mov
push
stos
cmp
or
add
xchg
std
jne
pop
lret
xchg
jne
and
jg
flds
scas
or
add
fidivrs
jmp
dec
inc
and
adc
outsl
and
xor
inc
inc
xchg
cli
outsl
sbb
je
push
cwtl
stos
adc
jg
jmp
mov
fs
pop
aad
js
jp
and
aam
das
ja
push
arpl
fs
shll
xor
mov
cs
mov
movsb
arpl
add
add
sub
mov
mov
push
shl
mov
mov
das
ja
dec
pop
cld
dec
sub
cmpl
lea
pop
jle
inc
pcmpeqw
add
insb
or
push
rolb
fdivp
cltd
xor
jp
call
loop
cmp
daa
xor
sub
repnz
arpl
add
or
inc
xor
jmp
xchg
mov
jmp
add
loopne
loop
in
rolb
mov
out
mov
loopne
push
out
hlt
cmpsl
sub
mov
fbstp
ficompl
sub
testb
roll
pop
cmp
cmc
mov
fisubrs
sub
add
pop
add
sub
inc
or
dec
shll
ficoms
jg
xchg
fs
mov
loope
jbe
int
or
jns
cld
divb
fiaddl
jmp
mov
pop
loope
out
pop
xlat
or
out
mov
mov
sub
jmp
add
inc
icebp
add
and
push
subl
add
add
mov
sbb
sbbl
cmc
fsubrs
std
std
mov
cmpsb
cmp
mov
add
test
inc
jmp
xchg
fs
add
push
add
stos
pusha
shll
or
inc
sbb
pop
pop
pusha
aam
icebp
adc
clc
xchg
add
clc
cltd
add
imul
or
lahf
lods
rorb
push
imul
int3
mov
imul
add
mov
stc
push
das
aam
mov
out
lret
fwait
enter
std
sbb
ret
rolb
xchg
mov
es
loopne
push
popa
jbe
mov
int3
adc
aas
lock
dec
fs
cmpsb
mov
lods
lret
or
add
jg
adcl
xchg
test
and
push
inc
or
outsl
xchg
push
dec
fcompl
and
inc
std
orb
jae
fisubs
aas
fidivrl
cmp
xchg
add
das
fidivrs
stos
ljmpw
fsubrs
mov
fucom
movsl
and
lea
imul
repnz
stc
hlt
shrl
push
cltd
and
call
dec
cs
popa
leave
adc
xor
and
pop
sbb
loopne
sbb
add
fisubrs
jl
mov
mov
fidivs
jns
int
sbb
cld
mov
outsb
sti
jle
mov
std
add
sub
mov
ja
jmp
bound
mov
fiadds
insb
cmpsl
outsb
sti
shll
aad
sbb
sbb
cld
bound
xchg
jl
jp
add
gs
stc
movsl
arpl
and
arpl
inc
addr16
jo
sub
adc
add
insb
shl
mov
jne
gs
hlt
mov
fs
mov
push
test
loope
add
jb
jne
mov
jae
mov
stc
xchg
adc
cmp
sbb
cmp
std
call
and
aas
add
pop
cld
iret
stos
adc
lcall
xor
jo
lea
mov
add
jle
stc
pusha
shll
pop
add
clc
cmp
add
mov
add
inc
jl
imul
pop
daa
xor
movl
std
mov
mov
out
add
inc
dec
adc
and
cld
mov
pop
fldcw
or
fisubrl
data16
jne
pop
subl
xor
adc
cmp
xor
xor
pop
faddl
or
inc
or
mov
or
pusha
popf
popa
bnd
inc
outsl
addr16
daa
cmpsb
xchg
pop
sarl
insb
jbe
rcrb
inc
int3
js
pop
pop
or
xchg
jg
pop
cmp
out
ja
aaa
xchg
cmpsl
add
lea
enter
sub
cmpsb
jg
call
xor
shrl
rorl
ljmp
repnz
mov
or
xor
pop
cmp
icebp
imul
testb
shr
sub
mov
mov
push
ret
mov
cmp
xor
cli
cmp
out
repnz
imull
xchg
xor
push
mov
add
icebp
jp
cmc
mov
adc
xchg
inc
aam
das
xchg
cltd
mov
icebp
jle
das
xor
dec
mov
aaa
or
mov
adc
out
stos
aad
ss
pusha
inc
int
ljmp
pop
roll
add
cmpsl
or
stos
jecxz
dec
aas
adc
test
in
dec
add
das
clc
jae
add
adc
inc
xor
rorb
mov
push
or
pop
into
in
adc
repnz
xchg
jg
shl
in
adc
xorb
cs
pushl
inc
and
arpl
pushl
and
les
adc
pop
xchg
in
adc
sbbl
add
jmp
insl
lds
jb
or
sbb
lock
lcall
mov
movsb
lret
pop
movsb
xor
jae
sub
pop
xlat
repz
std
fadds
inc
je
dec
lods
add
xchg
inc
adc
insl
sub
or
push
popf
in
lods
aad
std
mov
in
int
repz
and
add
jo
pop
inc
inc
lods
lret
xchg
cmp
outsb
xor
add
xor
pop
cmp
icebp
imul
sti
push
lods
popf
jle
or
call
and
and
mov
rcrl
sbb
jns
push
sub
mov
ljmp
push
jg
addb
add
sbb
incl
mov
je
sti
cmpsl
test
push
cld
int
shll
sbb
pop
sub
sahf
xchg
xor
fiadds
bound
inc
jo
rclb
addr16
adc
and
push
fdivs
mov
sub
cmp
loope
dec
mov
out
iret
sti
push
dec
or
xchg
add
jne
cld
xor
jb
cmc
jns
or
scas
sahf
jne
dec
inc
add
sub
out
nop
es
jmp
outsl
iret
xchg
push
ljmp
imul
ret
orl
int
push
and
or
subl
inc
sbb
push
jne
pushf
fists
shrb
sub
add
or
rorb
or
jmp
jbe
enter
sbb
in
dec
cmp
or
lcall
cmp
mov
std
decl
lock
faddl
stc
mov
test
or
jmp
pop
xchg
xlat
fiadds
test
add
and
movsl
loop
mov
clc
xor
lock
sbb
add
add
mov
push
xor
mov
loop
jno
lods
das
xchg
cmp
add
int3
xchg
add
in
ljmp
les
das
xchg
and
movsl
push
std
lods
das
and
enter
das
xchg
lods
dec
pop
je
add
and
jbe
mov
mov
std
nop
fimuls
add
scas
jbe
shl
pop
push
push
sub
bound
add
push
sub
push
jno
pop
xor
test
lods
fsubrp
add
pop
out
or
test
xor
and
out
pop
mov
add
into
outsb
ret
out
xor
mov
daa
into
repnz
jle
push
add
ret
push
cmp
incl
mov
in
xorb
mov
add
cld
in
adc
in
faddl
xchg
sub
jle
fdivl
ljmp
lret
ficoms
in
jae
add
imul
mov
icebp
mov
pushf
jmp
mov
pop
call
mov
mov
add
repnz
sti
jmp
mov
add
mov
jp
mov
std
out
add
divb
add
and
cmp
sbbb
add
xor
add
xor
add
xor
add
xor
add
cmp
jo
cmp
lahf
xor
add
cmp
xor
cmp
loope
cmp
jmp
add
xor
add
xor
add
sahf
cmp
cmp
cmp
or
cmp
push
das
cmp
inc
das
cmp
jnp
cmp
and
mov
cmp
es
cmp
mov
cmp
das
in
aas
das
imul
das
push
push
aas
das
xchg
or
das
and
aas
das
push
aas
das
stos
mov
ds
mov
adc
add
das
pop
das
les
ds
repz
das
mov
ds
mov
ds
mov
mov
ds
mov
adc
das
push
in
das
ja
add
add
sub
or
sti
or
cmp
fdivrp
jmp
enter
enter
lret
dec
mov
inc
mov
daa
dec
mov
sbb
mov
push
inc
mov
mov
mov
or
hlt
sbb
mov
or
cmpsl
fimuls
cmc
test
mov
lods
ret
and
enter
rorb
mov
fisubrs
cmp
pusha
mov
fisubs
mov
fisubs
fiadds
es
stos
add
mov
add
jno
add
stos
add
stos
add
stos
add
mov
stos
add
mov
stos
add
mov
stos
add
stos
add
xchg
stos
add
mov
add
lods
add
cmpsl
add
hlt
or
add
or
add
or
add
shrl
add
jg
add
jg
add
jg
add
add
add
cmp
add
cmp
add
cmp
add
cmp
add
out
sbb
pusha
dec
hlt
fstps
lock
pop
dec
int3
jmp
xor
shlb
add
ljmp
jnp
test
ljmp
or
pop
push
fistpll
fucompp
bound
push
notb
clc
or
mov
adc
js
add
mov
xchg
adcl
mov
ret
out
stos
rorb
lods
les
add
jne
orl
std
cmpsb
stc
adc
push
out
mov
cmpsb
inc
dec
cmp
add
pop
out
je
cmp
mov
jg
add
adc
lds
push
add
outsb
push
lods
jo
add
xor
jmp
cld
cmpsl
xchg
test
pop
scas
jle
and
jo
add
push
lds
push
and
add
ja
cmpb
jle
imul
xor
xor
ret
and
jnp
dec
out
xor
sbb
mov
adc
hlt
push
pop
lds
lahf
inc
push
xchg
test
lret
xor
js
sub
mov
jno
subl
je
inc
loope
jbe
or
xchg
add
in
loopne
rcl
shll
sti
mov
dec
pop
pop
scas
je
push
sub
fiadds
jo
add
xchg
hlt
pusha
xchg
add
push
jo
ljmp
or
mov
pop
pop
push
hlt
push
cmpsl
fs
pop
cmc
mov
repnz
sub
rcrb
sub
sbb
adc
popa
push
jno
pop
or
add
sub
jo
add
pop
add
insb
cld
jae
add
neg
je
push
loop
xor
cwtl
fildl
jp
aaa
add
sub
jae
mov
jmp
imul
inc
xchg
adc
cmp
xor
mov
sbb
mov
std
incl
jecxz
push
adc
mov
cs
call
pop
and
xor
aad
add
stc
fists
call
adc
adc
in
call
adc
or
in
call
adc
test
sub
and
roll
popa
in
orb
jge
dec
jo
std
mov
insb
push
push
push
mull
push
mov
sub
push
mov
jmp
push
lods
hlt
les
jl
or
incb
push
mov
xor
sbb
in
je
fadds
add
out
flds
js
stc
xchg
push
add
das
mov
add
push
jnp
inc
aas
jnp
pop
pop
dec
mov
add
cmp
and
frstor
aam
popa
xchg
or
pop
dec
adc
nop
jno
rolb
pusha
mov
jb
jo
aam
scas
iret
push
pop
and
adc
add
pop
lds
push
out
scas
ja
or
lock
test
gs
sub
setb
test
ljmp
ljmp
ja
dec
dec
das
fsubrp
inc
inc
data16
lods
dec
mov
add
jo
xchg
cld
es
sub
pop
out
fadds
push
push
leave
sub
add
or
add
mov
add
mov
insl
jecxz
add
sub
dec
mov
out
fadds
mov
xchg
xor
in
insb
cmpsl
pop
cmp
fisubl
ljmp
addr16
lods
call
xchg
adc
test
push
add
dec
loop
mov
add
stc
sbb
jecxz
std
decl
jmp
std
decl
lea
jmp
call
inc
stc
sbb
clc
cmpl
decl
sbb
inc
jmp
in
add
jne
adc
ja
adc
test
rol
cmp
jge
jg
les
pop
cmovo
mov
add
pop
push
add
psrld
ret
adc
push
and
gs
jne
add
jecxz
cmp
test
cmpl
add
mov
fs
jno
ficomps
adcl
std
xor
add
jne
push
lahf
imul
jne
jmp
fcoms
or
stos
mov
cmp
int3
popl
add
inc
inc
mov
dec
inc
std
xchg
ret
out
stos
sti
mov
int3
aaa
xchg
cltd
jns
repz
std
movsb
ffree
pop
ja
arpl
cmpsb
lahf
pop
mov
scas
jmp
scas
xor
or
fists
inc
push
or
sarl
jmp
add
repz
cli
fbstp
scas
and
inc
add
ljmp
clc
pop
xlat
imul
mov
mov
cmp
cmp
movl
mov
add
aas
sahf
shll
fidivrs
lods
xor
cmpsb
ret
out
icebp
add
sub
mov
insb
cmpsb
dec
cmp
aaa
movsb
add
sbb
adc
ret
out
add
scas
or
jmp
in
movsl
dec
stc
stc
fidivl
fisubrs
call
scas
movsb
add
sub
inc
mov
notb
sti
adc
inc
mov
mov
insb
arpl
sbb
xchg
mov
pop
jle
stos
pop
sub
mov
inc
adc
je
popa
inc
call
mov
inc
call
push
cld
loope
push
test
flds
add
mov
jne
mov
pop
aam
in
mov
push
faddl
cmpl
lret
jg
push
faddl
mov
bound
jp
mov
arpl
je
pusha
aas
xchg
add
push
dec
xchg
and
mov
das
pop
insb
aas
add
nop
push
mov
cmp
sahf
add
jne
cmp
push
je
cld
rclb
int3
xchg
inc
pop
or
cmp
in
mov
fisttpll
and
addb
lcall
ds
movsb
cmp
outsb
jbe
bound
mov
aaa
jne
cmc
mov
cmp
mov
scas
or
xchg
or
add
mov
inc
std
mov
icebp
cld
test
mov
jg
pop
xchg
inc
sub
loopne
jecxz
cltd
outsl
lahf
inc
pop
jae
mov
ds
pop
push
punpcklwd
add
inc
inc
mov
fnstsw
inc
sub
pop
push
and
mov
not
fdivrp
loopne
ljmp
add
ficomps
or
dec
popa
gs
in
imul
out
cmp
mov
iret
xor
and
inc
jg
sub
jg
out
inc
jle
loope
cmp
sarb
push
loope
lret
mov
mov
out
pop
cld
sbb
pop
subb
scas
xchg
pop
push
popf
es
add
jmp
fildl
pusha
mov
sti
outsl
addr16
outsl
pop
cld
push
inc
or
stos
sub
mov
jmp
dec
out
lods
test
sub
and
flds
jae
sbb
je
xor
dec
add
imul
push
imul
data16
out
cmp
pop
fistps
in
xorl
push
call
add
or
xchg
js
xchg
inc
or
clc
xchg
push
push
xor
adc
shll
and
xchg
pop
or
sbb
ret
je
aas
in
mov
add
addb
ret
nop
std
decl
jg
sbbb
adc
xor
sub
loop
sub
push
inc
das
inc
dec
in
inc
add
add
mov
mov
pop
out
jle
inc
add
mov
and
das
clc
cmp
outsl
aaa
sar
push
in
cmp
mov
mov
std
mov
repnz
jecxz
pop
loopne
jnp
sub
or
add
cwtl
cmp
shl
add
jmp
subb
pop
call
add
add
and
adc
cmc
xlat
ficompl
gs
and
add
fidivs
xchg
jmp
xchg
jmp
add
bound
mov
pop
imul
fsubrp
cmp
pop
std
idivl
sahf
jmp
insl
das
fsubrp
rorl
mov
sub
rep
push
xrelease
add
mov
stc
xchg
fidivrs
cmp
dec
arpl
jmp
xor
cmpsl
aad
insb
test
scas
sti
push
lods
and
int
pop
ret
fs
fiadds
jmp
insb
pop
test
pop
push
cld
mov
pop
jne
cmp
xor
sub
mov
sbb
insb
add
test
scas
sti
push
mov
in
sti
pop
les
cld
ss
jmp
in
pop
test
fldz
push
subl
add
sbb
inc
sbb
shl
rclb
loop
pop
pop
pop
sub
lahf
sub
sti
push
std
decl
outsl
pop
inc
adc
cld
push
pop
imul
add
xchg
std
adc
sbb
jne
adc
shr
pusha
test
mov
fistl
push
lret
mov
jne
lds
jae
pusha
js
push
mov
mov
fcoms
movsb
das
push
sar
inc
fcomp
insb
inc
add
jbe
inc
aaa
adc
xor
pushl
cmp
add
add
sub
sbb
andl
inc
sar
cmp
adc
mov
rcrl
mov
les
pushl
aaa
and
cli
cmpsb
ds
lds
add
in
test
inc
add
test
add
fiadds
fsubr
arpl
xor
imul
repnz
mov
lods
push
jmp
fucomi
pop
loope
cmp
add
fidivrs
adc
push
add
fs
test
ljmp
mov
add
sbb
jecxz
mov
sti
sbb
pop
jno
loop
imul
pop
or
jle
fucomp
add
repnz
movsl
sbb
jecxz
add
mov
add
loopne
andb
aam
imul
xchg
pusha
pop
cli
daa
pop
imul
loop
or
insb
pop
fiadds
jmp
xchg
stc
pop
stos
lods
dec
pop
cmp
enter
pop
cli
stc
fsub
xorb
loope
iret
add
into
lret
or
sbb
lods
fiadds
jmp
pop
stos
lods
dec
sub
fdivr
sti
popw
pop
cli
push
jg
addl
mov
rorl
mov
mov
push
test
dec
cmp
pushf
aas
push
ret
or
mov
inc
push
loope
add
inc
push
ret
push
sbb
je
popa
hlt
aas
jae
jmp
sbbb
add
inc
push
ret
push
adc
je
add
pop
hlt
aas
arpl
jmp
orb
inc
xchg
loopne
or
jle
hlt
aas
fbstp
rclb
xchg
movsb
insb
inc
inc
pop
insl
inc
push
mull
das
inc
call
push
inc
imul
imul
imul
push
inc
push
imul
imul
imul
outsb
outsb
inc
add
inc
adc
outsb
inc
clc
insl
add
outsb
inc
rorl
lods
and
mov
iret
mov
into
mov
fcomps
jmp
adc
repz
xchg
and
icebp
dec
mov
andb
push
movsb
fimull
je
cwtl
inc
out
xor
mov
movsl
fidivs
out
push
call
mov
lret
sbb
mov
addb
out
leave
ss
push
cmp
jno
lds
inc
inc
cmp
test
loope
jno
mov
outsl
inc
pop
adc
fisubrs
rcll
scas
sub
dec
loopne
adc
scas
sub
loopne,pt
add
imull
lret
in
adc
leave
xchg
jecxz
mov
dec
cli
into
cmp
pop
adc
popa
or
arpl
adc
fiadds
push
cmp
sub
xorl
add
fimull
jg
push
inc
push
adc
add
pop
cli
test
lods
adc
imul
add
lods
push
pop
imulb
or
sub
and
scas
mov
or
mov
and
loop
mov
mull
scas
ljmp
in
pop
lret
out
fiadds
scas
add
adcl
mov
pop
clc
add
test
pop
fldl
sbb
or
add
mov
adc
adc
adc
orb
cmp
dec
sub
sub
mov
lret
incl
shlb
pop
ljmp
mov
xchg
and
ror
addl
cmp
add
or
inc
add
cmovp
or
xchg
pop
cli
or
fadd
inc
xchg
incb
das
adc
das
mov
pop
or
mov
dec
inc
cs
pop
adc
dec
cmpb
mov
cld
push
sbb
cld
push
lds
dec
inc
js
inc
mov
mov
shrb
incl
add
scas
inc
orb
and
dec
cmp
or
inc
sub
pop
or
cmp
enter
rorl
add
inc
push
jle
in
inc
add
pop
or
lcall
test
out
xlat
or
popa
scas
or
scas
or
jmp
out
gs
out
add
sub
jae
cmc
jl
out
dec
out
pop
cmp
dec
out
outsb
leave
xor
sub
fimull
jmp
lcall
lret
scas
sub
sbb
add
adc
and
shll
pop
shll
pop
or
arpl
and
jmp
and
add
das
pop
inc
jle
push
orb
push
cld
stos
push
push
out
mov
or
jecxz
bound
hlt
sub
xchg
adc
fildll
ret
filds
insl
push
flds
jmp
test
jne
pop
movsb
adc
lods
fiaddl
popa
cmc
xacquire
add
add
test
or
add
repnz
add
loope
cmpb
and
mov
mov
lods
mov
fistpll
pop
loope
xorb
inc
jo
ret
jecxz
inc
push
repz
dec
loope
andb
orl
push
cmp
pop
dec
jo
xchg
cli
dec
setae
pop
add
xchg
inc
add
call
cmp
loopne
movb
sbb
jmp
push
stc
push
rcpps
ljmp
aaa
inc
inc
cs
sbb
adcb
add
push
or
mov
sub
push
dec
sbb
mov
data16
push
shr
or
mull
xchg
inc
inc
inc
cs
sbb
adcb
push
jmp
add
dec
cld
incl
mov
xor
cmp
je
gs
adc
cmc
mulb
or
data16
mov
xchg
stc
insb
rcr
jmp
mov
filds
das
pop
sub
push
push
out
cli
mov
out
das
pop
daa
push
inc
aad
and
fistpl
or
repz
imul
jecxz
aam
lds
add
push
inc
es
xorl
dec
scas
inc
adc
ds
into
inc
and
ret
out
mov
repz
push
movsb
adc
gs
loope
cmp
ret
sbb
les
pusha
repnz
ret
fsubr
jno
dec
cld
imul
aad
jmp
scas
mov
add
or
and
add
mulb
pop
punpckhdq
arpl
push
mov
pinsrw
xor
sub
clc
jecxz
testl
subl
pop
jmp
shl
cmpsl
sub
dec
cld
imul
repz
mov
or
fldl
mov
add
repz
xchg
xlat
jecxz
fldl
subb
test
inc
cld
call
testb
or
push
add
mov
aad
or
int3
popf
or
jb
or
incl
inc
cld
incl
rol
repz
fcomp
sti
cmpb
dec
ficompl
call
lret
call
lcall
dec
add
das
inc
orl
aaa
add
jno
cli
call
ss
lds
add
pop
jns
adc
icebp
dec
add
call
sub
adc
inc
mov
dec
sti
inc
mov
jae
cmpxchg
xor
or
aaa
inc
inc
cmp
sbb
clc
push
add
and
adc
adc
adc
inc
inc
add
cmp
add
ja
push
jmp
cmp
std
add
dec
or
lock
jo
inc
xlat
pop
inc
mov
fs
repz
jmp
adc
inc
push
xor
pop
std
ljmp
add
push
xor
sub
ljmp
inc
in
dec
pop
mov
cs
loopne
jmp
add
fucomp
add
adc
add
pop
outsl
shrl
popa
sub
xor
roll
sbb
fsubrp
andl
mov
mov
pop
add
daa
out
lock
adc
add
lods
inc
add
ffreep
scas
ds
jmp
imul
inc
cs
mov
inc
idivl
aas
test
sub
adc
flds
inc
cld
imul
add
out
lahf
adc
adc
pop
cli
call
flds
imul
aam
jmp
adc
andb
imul
add
ffreep
inc
loopne
jmp
jne
mov
push
orb
cld
call
and
sbb
add
je
cmpb
dec
jne
mov
sub
sub
repnz
jne
mov
sbb
test
dec
cld
incl
clc
or
shrl
add
push
popa
cli
push
jns
inc
or
ret
dec
inc
into
cs
lcall
setb
test
add
daa
sarb
and
add
test
lds
adc
hlt
fisubs
fcom
ja
cs
or
stos
idiv
rol
adc
movsl
repz
test
daa
or
sbb
stc
sub
mov
xchg
jno
stc
xor
and
test
pusha
or
inc
aas
icebp
std
push
scas
pop
cli
gs
push
or
add
in
xor
jg
jmp
orb
adc
cli
out
scas
pop
repnz
arpl
outsl
mov
cs
movsb
push
movsl
pushf
fcmovu
dec
push
cmpsb
fbstp
shrl
inc
jmp
dec
cli
or
fyl2x
add
pop
iret
jecxz
pop
into
nop
inc
push
not
fs
sub
jmp
sbb
jmp
imull
sbb
add
dec
inc
push
fcmovnbe
add
cld
outsb
repnz
add
dec
sbb
jmp
and
dec
dec
inc
ret
scas
xor
jmp
imul
cld
sub
jmp
enter
mov
cld
mov
pop
jmp
stc
add
push
add
inc
pusha
add
sub
clc
lcall
inc
ret
daa
sub
jmp
pop
outsb
adc
mov
rcrb
push
push
arpl
mov
fildll
jmp
hlt
pop
jne
add
add
in
pop
push
fiadds
and
std
jmp
xchg
push
jp
les
add
ljmp
add
add
mov
adc
fisttpll
add
dec
addb
sbb
sti
inc
mov
orl
mov
enter
cwtl
cmp
cmp
sub
lods
pop
cld
jae
psadbw
jno
incb
inc
arpl
ljmp
icebp
mov
push
add
das
aaa
ds
sub
aaa
add
imul
inc
mov
mov
ljmp
and
sub
xor
xor
add
or
and
jecxz
or
jbe
enter
pop
sub
xor
insl
sub
add
cli
fucom
add
inc
and
sbb
adc
fidivrl
aas
mov
sub
ret
fisubrs
iret
xor
jmp
shrb
pop
push
push
and
add
fdivp
pop
lock
or
sahf
jmp
add
pop
and
das
fisubrs
lret
add
xor
jmp
shrb
pop
icebp
repz
add
fdivp
pop
jo
push
adc
das
pop
rcll
adc
sub
ffreep
leave
or
add
shll
stc
fcompl
faddp
daa
xor
jmp
outsl
neg
xchg
mov
or
stos
incb
mov
sbb
faddp
cmpsl
xor
jmp
pop
out
xchg
movsl
clc
or
add
sti
add
xchg
incb
jl
mov
mov
sub
ret
shr
imul
decb
add
gs
incl
repz
push
fiaddl
adc
sub
test
add
xor
mov
sub
out
lret
jmp
shll
pop
xor
add
adc
and
and
or
clc
or
andl
add
push
fildl
jne
cmpsl
inc
add
cmpb
add
shlb
sti
sub
rolb
mov
add
jae
add
cmp
repz
jb
mov
and
scas
lret
and
lret
mov
or
in
inc
add
jns,pn
aaa
jae
hlt
or
out
add
das
mov
or
sub
in
inc
or
sub
push
mov
in
sub
inc
cmp
leave
adc
insb
mov
adc
lods
push
adc
fimuls
xchg
out
push
imul
outsl
inc
sub
sub
sub
add
fdivr
and
cs
mov
loope
add
loope
add
shr
outsl
cmp
nop
outsb
push
es
das
fsubp
pop
out
pop
inc
aam
lods
or
loop
add
mov
jmp
add
add
cli
xchg
pushf
push
or
or
jno
cs
pop
das
fiadds
push
call
add
ljmp
in
fiadds
shlb
sub
cmpsb
sbb
push
fidivs
jmp
add
fimuls
gs
inc
or
test
add
sub
je
repz
add
fiadds
jmp
test
add
sub
clc
stc
and
in
sub
xorb
ljmp
add
loop
jmp
cmp
ret
xor
mov
or
fiadds
add
into
or
add
out
jle
jmp
add
sahf
fmuls
add
pop
add
add
jecxz
push
fiadds
decb
fldl
pop
adc
std
xchg
fisttpl
push
add
push
push
cld
push
fwait
stos
idiv
jno
hlt
push
add
add
faddp
inc
aam
jecxz
aad
add
inc
aad
je
cmp
add
leave
jne
mov
cmpsb
icebp
inc
sar
xchg
sbb
add
inc
movb
or
addb
sbb
cmp
inc
xorl
sbb
orl
add
add
call
push
mov
add
popa
movb
or
andb
or
std
sub
cmp
inc
addl
sbb
imulb
add
icebp
mov
mov
imul
ret
or
lahf
out
int
lds
mov
lret
xor
add
fisubrs
aas
inc
pushw
das
fisubrs
add
aaa
inc
dec
push
das
fisubrs
sub
push
das
fisubrs
scas
cs
mov
imul
fisubrs
int3
pop
add
push
outsl
xor
pop
scas
push
fldcw
cs
les
insb
sbb
bound
push
das
fisubrs
repnz
inc
cmp
or
cmp
arpl
shlb
daa
loope
cmc
pop
cmp
imul
add
xor
push
test
add
mov
cmpsl
jmp
fiadds
shll
xchg
pop
jg
add
scas
xor
jmp
mov
in
xor
retw
xchg
pop
faddl
jmp
lods
cmp
call
addl
cmp
lods
cmp
aad
aas
fwait
in
sub
test
test
ret
add
loope
jmp
dec
popf
call
test
in
pop
sub
std
xor
mov
cmovae
add
cltd
aam
jl
xor
je
imul
jle
inc
and
sub
jne
fiaddl
pavgb
cmp
dec
aad
test
filds
add
rcrb
out
inc
add
pop
es
pop
loop
sbbb
sti
xor
das
inc
or
push
xchg
and
mov
lock
sbb
add
inc
inc
inc
adc
push
cs
add
aaa
mov
or
cmp
xchg
sub
cmc
leave
inc
jl
subb
fstpl
inc
xchg
add
inc
add
push
jl
test
inc
add
mov
or
jmp
inc
add
incb
add
jg
and
sub
mov
loope
xchg
fucompp
or
loop
or
sub
sbb
fwait
call
add
imul
mov
into
inc
fstcw
sub
add
sbb
fisubrl
mov
addr16
dec
jmp
loopne
or
jmp
fsqrt
pushw
nop
inc
or
mov
sub
cmc
dec
sub
sub
scas
mov
int
xor
daa
sub
je
mov
adc
sbb
sbb
call
adc
xchg
cmp
xchg
mov
add
incl
divb
pop
inc
lds
loope
jecxz
xor
push
lcall
jmp
es
out
xor
push
filds
scas
mov
call
jb
call
jb
cmc
inc
or
cmp
cld
jb
fstpt
dec
xlat
add
mov
gs
add
pop
rorl
jmp
push
and
addr16
sub
add
adc
push
jge
std
rorb
jno
and
fildl
mov
dec
or
add
int3
std
mov
loope
nop
xchg
fiadds
mov
inc
and
xchg
add
xchg
fucomi
jnp
je
and
in
jmp
push
or
insl
xchg
or
inc
pop
add
lahf
jno
ljmp
dec
mov
inc
mov
inc
je
lods
cli
and
dec
rcrb
cli
mov
out
sub
cmp
lds
inc
ret
stos
sub
std
fdivrs
or
shrb
add
inc
xor
in
and
cmp
call
push
pop
add
mov
in
mov
add
das
push
lock
adc
mov
loop
in
jle
stos
ret
stc
std
mov
push
loopne
outsb
inc
and
gs
mov
cli
gs
xor
in
cli
xchg
repnz
sub
adc
xor
or
jmp
ljmp
mov
or
mov
jle
add
test
int
xor
jno
inc
sub
mov
jecxz
add
add
add
sbb
stos
cwtl
or
gs
fbld
add
xor
fs
and
das
fmuls
idivb
xor
jb
fistps
shlb
jno
add
rolb
ret
pop
mov
sbb
lods
inc
jmp
repnz
inc
jmp
out
lods
inc
jmp
pop
lods
inc
jmp
sub
inc
jmp
mov
inc
jmp
adc
stos
inc
jmp
pop
test
jbe
inc
aas
jbe
inc
aas
jbe
push
aas
jbe
push
aas
jbe
inc
jbe,pt
inc
jbe,pt
push
aas
jbe
add
push
jbe,pt
push
jbe,pt
push
jbe,pt
push
jbe,pt
push
jbe,pt
push
jbe,pt
push
lods
jb
mov
jb
in
jb
lret
fdivs
cmp
movb
inc
data16
xchg
dec
jne
xchg
mov
jne
xchg
inc
xchg
cmp
loop
inc
das
inc
loope
out
inc
mov
out
inc
jnp,pt
add
inc
xor
inc
int
out
inc
cmpb
jnp
inc
ret
jge
inc
jne
outsb
aaa
arpl
aaa
idivb
aaa
jnp
aaa
out
outsb
aaa
fidivs
aaa
int
outsb
aaa
cmpsl
ja
aaa
ja
outsb
aaa
pop
js
aaa
xor
outsb
aaa
or
outsb
aaa
in
outsb
aaa
in
outsb
aaa
in
outsb
aaa
in
outsb
aaa
mov
dec
aad
add
jns
mov
adc
popa
movsb
xchg
call
fsubp
add
std
mov
test
scas
push
dec
stos
pop
push
ss
cmpsb
and
xchg
sbb
jmp
cld
shld
daa
sub
sub
out
xchg
pop
adc
mov
test
jns
pop
or
mov
aam
mov
sbb
mov
pop
xor
add
lret
in
sbbb
jmp
jg
add
jmp
out
popa
add
ss
jge
jnp
mov
mov
fistpl
popa
in
shrb
add
fs
add
roll
in
pop
inc
cmpsb
push
orl
lods
stos
and
sub
xchg
stos
add
xor
orl
test
adc
aaa
fidivs
xchg
push
cmp
jmp
popa
popf
add
jns
test
loop
je
fiadds
add
fdivl
lea
xchg
fsubr
mov
loop
call
sub
test
fdivr
push
outsl
mov
inc
filds
call
aad
adc
or
rcr
add
fucomi
test
fiadds
call
es
pop
fisttps
test
sbbb
sub
shr
inc
add
dec
or
imul
enter
rcrb
call
das
xor
inc
jbe
xor
lcall
add
add
push
xor
ret
imul
pushf
add
xor
xchg
xor
inc
je
ret
and
push
sbb
xchg
adc
mov
mov
or
add
pushf
enter
std
cmp
test
pop
cmp
add
xorb
adc
or
mov
sub
adc
notl
sub
das
nop
outsb
adc
push
je
push
jns
cmp
insb
or
fcmovu
aam
and
or
call
add
add
add
push
loope
push
mov
sub
jns
xchg
pusha
mov
cmpsl
mov
cmp
pop
pop
xchg
pop
pop
es
cmpsl
scas
in
jae
adc
add
mov
into
jo
or
and
or
add
call
sub
xor
and
and
ja
jmp
jl
adcb
add
popf
daa
cld
jb
pop
fsub
loopne
add
sub
call
push
cld
and
lea
add
push
ret
mov
push
dec
stc
add
jecxz
jmp
jmp
xor
xor
fs
add
sub
mov
push
mov
xchg
dec
mov
lret
fistl
aas
push
and
leave
push
cmp
les
sti
imul
fildl
lea
ds
lcall
call
add
xor
mov
dec
add
imul
sti
or
ljmp
ss
dec
movsl
inc
and
imul
jecxz
std
test
push
cmp
das
dec
cwtl
cld
fdivs
fmull
mov
sbb
dec
dec
add
std
and
hlt
out
jecxz
ljmp
lock
das
xor
jge
push
adc
adc
sub
mov
sbb
cmc
jmp
lock
ret
inc
sbb
xor
div
loopne
add
testl
movsb
sti
loopne
xchg
add
scas
inc
sbb
imul
fdivrp
ret
cmp
scas
fistpll
aad
dec
fsubrp
add
add
fadd
mov
jmp
jmp
test
mov
hlt
and
mov
mov
sub
sti
movsl
test
sbb
xchg
fimull
mov
xor
xor
ss
cs
mov
aam
icebp
mov
dec
stos
call
hlt
mov
and
test
adc
fcomp
mov
add
pushf
rclb
daa
xchg
sti
imul
pop
mov
in
xor
dec
dec
daa
out
mov
sub
shl
stos
add
push
stc
adc
cld
fisubl
out
xchg
nop
out
rclb
mov
adc
sti
mulb
loop
fnsave
jae
mov
aaa
lcall
repz
push
pop
and
jbe
sti
mov
xor
call
sub
add
insl
stos
or
jl
sti
hlt
insb
rolb
push
cmpsb
rcrl
rcll
dec
push
scas
mov
call
pop
sarl
iret
jne
xchg
sbb
fbstp
shlb
add
jne
xchg
push
add
pop
cld
push
push
movl
add
push
cwtl
je
fildl
filds
xchg
jbe
dec
pop
add
sub
stc
outsl
add
aas
test
jmp
cmpsl
sbb
int
add
popf
mov
add
das
outsb
xchg
or
mov
mov
cmpsl
pop
in
cmp
push
pop
rolb
orb
fcoms
subl
nop
add
sub
in
jmp
testb
dec
add
imul
scas
fbstp
jg
sbb
mov
sub
outsl
inc
cmc
add
imul
das
xor
subl
cmp
cli
jae
mov
jmp
outsl
lcall
fwait
push
cmpsl
cmpsb
lods
add
adc
imull
out
test
lock
pop
dec
loop
pop
test
add
pop
adc
fisubrl
xor
jb
mov
imul
cmpsb
jecxz
outsb
push
in
sbb
pop
les
mov
mov
add
pop
insl
inc
clc
fsubs
fsubl
pusha
sbb
cmp
jmp
dec
lods
mov
testl
pop
add
test
mov
out
pop
repz
cld
adc
idivb
push
and
xor
push
jp
pop
sub
scas
testl
xor
and
mov
fidivrl
sub
jne
pop
fsubrl
insb
and
and
out
rol
cld
add
jb
inc
lds
push
sub
jl
es
jmp
mov
push
and
shlb
mov
enter
adc
int3
xchg
push
shlb
or
mov
sbb
pop
jg
add
fisttpl
leave
loop
sbbl
mov
dec
mov
andl
sub
fistl
and
and
push
ja
insl
and
add
add
or
test
or
enter
xchg
inc
dec
add
pop
test
js
lods
push
push
dec
push
cmp
mov
or
out
rolb
aaa
lods
dec
cld
jno
int
aaa
xor
mov
cmpb
shl
pop
mov
out
loope
pop
mov
jae
lods
cld
inc
in
mov
pop
mov
add
inc
mov
cmp
xor
jbe
pop
mov
stc
out
cltd
mov
jae
lods
cld
inc
insb
stos
dec
cld
repz
mov
fdiv
std
pusha
fucom
xchg
test
mov
sbb
aad
clc
fstpt
lret
mov
or
push
mov
loope
insl
out
mov
add
pop
cli
jb
ljmp
lock
pop
test
icebp
jmp
sbb
add
sub
insb
cltd
sbb
faddl
add
jle
cmpsb
stos
icebp
imul
adc
shlb
jecxz
test
push
jmp
das
xchg
or
push
jb
sbb
jae
add
sbb
ret
cld
sbb
movsb
ljmp
pop
ret
jo
adc
cs
and
mov
adc
data16
pop
mov
adc
push
dec
cmp
or
jo
or
dec
sbb
ss
xchg
and
jne
aam
add
lods
add
dec
add
pop
pushl
aam
cmp
add
jge
gs
loope
inc
popa
loope
adcl
pushf
cmp
in
fmul
movsl
std
add
xchg
clc
call
mov
jo
mov
adc
sbb
std
jne
push
in
push
sbb
mov
jp
in
jne
pop
ja
xchg
mov
test
mov
inc
repnz
das
loopne
cmpb
mov
or
dec
ja
or
outsl
loopne
push
mov
push
dec
lods
orb
add
call
fsubrl
xor
mov
jge
out
add
scas
outsl
pop
orl
inc
add
clc
add
fdivs
test
call
mov
fadds
push
add
mov
aas
sti
cld
mov
jae
mov
adc
add
dec
clc
movsb
jmp
push
sbb
mov
imul
std
clc
imul
cld
cmpsl
ljmp
pop
cli
add
push
roll
adc
jmp
insb
ret
adc
or
lds
pop
mov
adc
cld
popa
or
das
fidivs
scas
roll
sub
ss
inc
das
adc
sbb
sahf
outsb
out
sbb
adc
adc
fldt
jecxz
add
out
fstl
inc
inc
pop
sub
sbb
add
fpatan
call
insl
add
insb
lea
cmpsb
xor
fldt
sub
push
cltd
add
push
push
ds
add
mov
and
scas
stos
add
scas
orb
movsb
mov
or
in
cmpsl
out
loopne
mov
sub
add
ret
inc
loopne
add
inc
ljmp
pop
push
loope
push
or
fildl
add
test
faddl
cmp
xchg
fldl
mov
adc
rcr
adc
add
ljmp
add
repnz
cmp
rcr
rcr
inc
loop
push
test
loop
inc
stos
mov
test
std
incl
add
fldt
dec
loop
push
jecxz
je
fildl
mov
xor
cld
and
das
mov
jae
jo
xorb
push
std
cmp
inc
das
test
or
pop
sti
xor
cld
add
add
aas
inc
or
jl
sarl
sub
out
push
add
lods
sahf
or
mov
or
sub
push
mov
mov
add
xchg
incl
add
test
jae
aad
shll
fwait
inc
xor
aad
ja
out
out
sbb
add
sub
loopne
inc
sub
push
clc
lods
sbb
dec
lock
sti
jae
lods
cmp
scas
xchg
loope
jecxz
mov
aas
out
les
cmc
jmp
sahf
jmp
les
in
add
cmp
pop
stos
outsl
sub
adc
fbld
lsl
sub
jl
add
fiaddl
push
adc
inc
loopne
data16
adc
mov
xor
insb
fidivrs
test
mov
sub
inc
jmp
imul
mov
add
add
xor
adc
shll
push
adc
leave
frstor
test
es
aam
fidivrs
xor
xchg
into
sub
lea
movsb
xchg
mov
subl
mov
mov
test
cmp
outsl
and
mov
ficompl
jge
loopne
mov
test
inc
xchg
lret
dec
sbb
add
add
loopne
notl
int3
jmp
movsb
mov
pop
std
jae
xchg
xchg
mov
test
push
std
pushl
loopne
call
add
fndisi(8087
lds
sti
incl
pmulhuw
mov
pop
mov
add
add
loopne
add
pop
ret
ret
add
xor
inc
shrb
mov
inc
add
ja
pop
adc
les
insl
or
aas
xor
or
push
pushl
outsl
enter
data16
movl
je
mov
adc
pop
das
shrb
insb
pop
adc
push
jmp
mov
cld
fistps
mov
sbb
push
cmp
add
repz
mov
cmc
repz
fisubs
adc
pop
and
test
add
push
cmpsb
sbb
push
push
fisubs
aaa
movsl
idivl
fisubs
xor
lods
div
adc
idivb
or
outsl
popf
xor
sub
adc
fimull
jae
adc
arpl
in
out
fidivl
push
stos
shrl
mov
xor
add
stos
cmp
int3
adc
cmc
lods
push
ss
add
add
scas
add
sbb
scas
or
sbb
xchg
xor
jecxz
mov
or
test
pop
loope
pop
scas
sti
ffreep
adc
cmp
jmp
bound
push
test
pop
mov
cld
repnz
lea
adc
cld
push
orb
adc
outsl
mov
adc
or
and
lea
mov
adc
nop
filds
add
nop
mov
sbbl
jae
or
leave
fildll
inc
fisubrl
sarb
pop
leave
xchg
in
push
pop
or
pop
add
fisttpl
xorl
jg
add
cld
pop
or
cwtl
call
test
inc
movups
cmp
xchg
clc
jno
pop
or
push
pop
addl
push
mov
or
das
adc
jne
and
cmp
lds
out
lret
cs
std
and
inc
das
mov
out
jb
cld
pop
push
add
add
out
mov
loopne
ret
mov
add
hlt
pop
jle
xorb
mov
add
sbb
aaa
mov
mov
out
cld
adc
jae
mov
add
mov
jns
das
fldl
pusha
fadds
inc
push
pop
jnp
inc
push
lds
lods
mov
repnz
cld
mov
push
repz
rorb
mov
repnz
shrl
sub
ficoms
gs
fidivrl
fdivrp
or
cwtl
adcl
insl
or
and
jmp
jne
lret
sub
sbb
add
fmull
std
bound
cli
bound
adc
repnz
in
lret
pop
push
gs
imul
repnz
fsqrt
pop
add
adc
add
cmp
frstor
xlat
adc
loope
sahf
add
xor
cld
fs
adc
mov
call
jb
testl
scas
test
jg
mov
test
loop
data16
imul
mov
fstl
cmp
adc
cmp
push
test
fldenv
js
jb
or
mov
in
sub
stos
pop
add
and
add
std
je
or
nopl
mov
dec
mov
popa
call
mov
mov
mov
push
mov
or
jle
aad
sub
lods
mov
int3
adc
stc
loopne
jne
add
stos
xor
loopne
inc
cli
mov
inc
mov
add
or
outsl
das
pop
movsb
aam
lret
inc
inc
xchg
sub
lret
xor
jae
popa
ja
das
divl
stos
lahf
cmc
push
pop
hlt
int
add
pop
jae
das
div
adc
or
fsubr
sub
jp
add
pop
mov
out
mov
add
cld
add
movsb
mov
les
jg
jp
inc
cmc
ljmp
push
add
sbb
adc
or
das
add
and
add
sbb
add
push
stc
ljmp
std
call
leave
jg
dec
fidivs
jnp
push
xor
hlt
push
hlt
stos
pop
jecxz
add
push
jmp
jb
xchg
jp
or
push
add
cs
mov
popf
sbb
add
dec
fsubrp
js
or
push
cmpsb
mov
xor
das
fisubrs
out
dec
add
std
or
mov
jae
jg
jmp
shrl
pop
les
or
pop
inc
sahf
jmp
fildl
pop
add
xchg
lcall
orl
push
jnp
push
aaa
sahf
adc
push
or
insb
sbb
jmp
dec
jg
pop
or
adc
adc
sub
jae
xchg
cld
aas
aaa
or
repz
push
or
jo
fiadds
bound
mov
push
xchg
hlt
insb
out
add
test
jo
sti
fcompl
push
push
add
sbb
sti
hlt
cmp
inc
add
xchg
sbb
ret
or
decl
mov
or
aad
shrl
daa
pop
subl
cld
jecxz
fldl
jmp
pop
stc
add
fldl
jne
and
cld
cmp
add
jmp
or
jbe
cli
aam
nop
add
lret
or
add
call
mov
or
scas
mov
inc
sub
xor
lods
push
fildl
push
das
inc
pop
or
inc
hlt
dec
pop
sti
jmp
cmp
js
inc
ljmp
inc
arpl
add
fcoms
cld
cmp
add
addr16
mov
add
jnp
dec
sarb
pop
push
sbb
push
call
add
insl
or
outsl
ds
add
les
add
inc
andb
movl
lahf
add
insb
cmc
push
std
sbb
sub
rcr
cmpsb
add
xchg
add
xchg
adc
lods
push
adc
sbb
jle
fisubs
pop
sub
xchg
ds
jmp
fistl
int
add
out
fisttpll
push
cmp
adcb
mov
sbb
ljmp
out
out
cmc
xor
sahf
jmp
jmp
cmpsb
inc
dec
mov
aas
sub
cmp
les
movd
sahf
push
pop
jmp
add
incl
mov
push
data16
inc
pop
sub
sbb
aam
mulb
xchg
or
xlat
ret
in
push
push
inc
jmp
jmp
jmp
sti
in
fldl
jmp
mov
testb
aam
lock
jmp
adc
jbe
arpl
call
fsubrl
sbb
dec
mov
scas
lea
xchg
dec
cmp
stos
push
pusha
jo
mov
add
add
cld
jne
testl
mov
add
mov
mov
mov
je
and
aas
loope
addb
shll
lret
std
dec
mov
stos
push
push
inc
jne
lcall
test
or
sbb
push
or
clc
lcall
adc
cmpb
popa
cwtl
pop
leave
les
push
lea
push
push
add
in
mov
add
sti
mov
sbb
cld
ljmp
xor
imul
add
out
inc
jmp
sub
es
mov
pop
cs
stos
or
aas
aaa
add
cli
hlt
jmp
std
sub
mov
pop
stos
in
imul
fistps
push
shll
sbb
imul
mov
mov
add
movl
shl
ret
jecxz
adc
daa
inc
add
cmc
pushl
ficoms
sbbb
lods
inc
das
mov
das
sbb
rcr
lahf
jmp
xchg
ds
jmp
push
lcall
add
inc
xor
fsubrp
push
xor
loopne
mov
imul
adc
add
frstor
out
sbbl
dec
lock
add
and
xor
cmp
adc
into
dec
xchg
loope
das
testb
lcall
jo
js
loope
lock
insb
fisubrs
test
sub
xchg
int
aaa
js
jle
sbbb
loope
mov
out
and
inc
cmp
adc
out
stc
call
adc
mov
fiadds
jmp
iret
or
xchg
sub
inc
xor
add
mov
adc
in
fnstsw
fisubrs
testl
push
pop
pop
rcll
stc
add
or
pop
fiadds
mov
jns
jmp
test
pop
ja
mov
lods
push
sti
jne
test
add
inc
movb
call
or
mov
dec
jg
jns
add
xchg
mov
outsb
fisttpll
add
outsb
lock
push
push
test
in
ret
sbb
enter
push
jg
ret
add
nop
in
push
sbb
incl
fiadds
add
das
idiv
and
jnp
das
idiv
mov
jnp
imul
imul
addr16
pop
jl
call
mov
xchg
ljmp
jl
addr16
sldt
cwtl
sub
mov
dec
add
cmp
subb
subb
cld
sbb
xor
popa
cmp
jae
mov
push
std
jb
mov
call
xor
or
add
push
push
aas
jmp
push
jmp
mov
jecxz
out
fs
pop
jne
xor
mov
inc
das
shl
das
mov
add
push
or
jmp
lock
pop
bound
and
dec
or
sub
das
fisubs
add
xor
xlat
xchg
pusha
dec
arpl
in
in
call
in
adc
adc
loope
jge
cmp
add
insb
fiadds
std
sub
push
jb
pop
cld
pop
cmp
push
and
call
push
pop
fdivs
mov
jne
aam
cmp
int
icebp
testb
jmp
shrb
add
insl
insb
mov
pop
xchg
dec
cmp
push
dec
push
xor
sbb
add
xor
not
in
add
jl
add
lret
imul
bound
in
add
ja
inc
je
jne
imul
add
mov
pop
insb
cmc
push
push
ljmp
push
movsl
out
add
out
xchg
cmp
xchg
mov
lea
or
ljmp
xchg
xchg
pop
dec
sbb
rcll
and
call
test
pushl
push
mov
ret
ret
dec
mov
call
shll
lock
add
outsb
push
mov
iret
push
inc
fimuls
jp
cld
out
add
push
mov
outsb
inc
icebp
mov
inc
call
test
repz
pop
add
add
inc
clc
lock
aam
das
pop
add
mov
shl
or
into
or
pop
pop
inc
cmpb
pop
adc
pop
mov
cmc
js
inc
xor
jne
std
insb
jle
xor
add
notb
mov
sahf
or
xor
mov
add
xor
jl
xor
leave
sub
adc
adc
xlat
sti
cld
cmpsb
xadd
out
lods
adc
pop
das
fisubrs
cs
cmp
decb
xor
mov
and
popa
dec
js
ljmp
hlt
or
shrb
add
mov
sub
add
scas
aaa
aas
xor
mov
in
add
sub
adc
pushf
and
add
sub
add
insb
fimuls
aaa
in
and
xchg
pop
and
int
push
push
aas
cmp
sarl
loopne
stc
test
sub
add
lahf
call
xchg
add
cld
clc
adc
addl
cld
ss
add
lods
ja
jmp
xchg
adc
xlat
in
add
adc
mov
outsl
ds
cld
xor
in
push
fdivp
icebp
lret
movsl
call
call
sub
sbb
into
decb
add
pop
in
add
cli
inc
dec
into
std
inc
out
pop
ja
filds
add
xor
sub
mov
popf
adc
adc
or
cli
lds
push
sbb
rolb
rcrl
cmpb
add
add
mov
push
xchg
addb
push
inc
cltd
out
push
push
std
mov
add
push
fnsave
iret
add
cs
add
das
push
mov
movsb
leave
adc
out
ss
cmp
ljmp
lock
das
pop
add
xor
fsub
in
sub
add
repz
and
add
jmp
cmpb
push
call
xchg
frstor
in
or
lock
nop
enter
add
lods
fbld
and
push
cmpsb
jp
adcb
add
sarl
mov
call
std
das
sub
xchg
cmc
pusha
fisubs
and
sub
mov
jmp
out
in
rcl
fucomp
add
jno
push
push
stos
xchg
sbb
cli
les
and
imul
or
and
popa
test
add
fldcw
ja
ret
inc
stos
das
adc
rcr
mov
push
add
sub
mov
xor
add
call
imul
stc
call
je
out
call
mov
jecxz
or
insb
xor
inc
inc
mov
ficoms
fbld
sub
mov
jecxz
vpaddw
sbb
outsb
out
pusha
outsb
loop
and
mov
add
jmp
std
adc
adc
loope
cmp
xchg
cld
leave
lods
call
andl
jbe
outsl
adc
add
data16
mov
lret
and
decl
adc
pop
rorb
mov
or
pop
xchg
adc
je
pop
outsl
cld
lea
in
cmp
std
mov
fnstcw
jmp
xor
xchg
fs
pop
std
ljmp
mov
jmp
jae
push
add
addl
in
ret
add
xchg
jle
hlt
mov
dec
add
in
imul
sar
pusha
mov
add
pop
outsb
add
add
mov
into
jae
addl
mov
out
mov
push
fnstenv
popa
add
fbstp
or
stos
or
sbb
rorl
cmpb
stos
inc
dec
add
shl
enter
enter
mov
sbb
in
mov
cmp
cltd
mov
and
sbb
test
mov
stc
xor
in
fs
sbb
pop
sub
divl
mov
jmp
in
cmc
inc
push
fsubrp
popa
scas
cmc
fsts
sub
mov
das
dec
sub
lods
xlat
pop
frstor
push
gs
xlat
cmpsl
sub
dec
xor
jmp
mov
addr16
mov
dec
mov
jno
add
daa
addr16
movsl
dec
call
add
pop
bnd
insl
jmp
mov
cmc
push
xchg
icebp
call
imul
push
jne
dec
icebp
jne
pop
sbb
jae
lea
sbb
push
out
in
stc
push
loope
call
add
push
bound
je
and
add
aam
call
jb
lods
sti
jo
add
cmp
pop
fldcw
test
fimuls
je
addr16
in
aas
sahf
loopne
xchg
lea
push
scas
cmp
fmuls
xchg
dec
call
adc
jo
dec
sub
add
gs
cwtl
shrb
add
xor
test
mov
flds
inc
fidivrs
sti
add
xchg
stc
call
xor
ret
push
push
mov
lcall
or
sub
add
das
aas
add
icebp
jp
std
loopne
add
jb
add
jb
in
mov
add
dec
add
addl
pop
push
into
lock
inc
addr16
or
lods
out
push
scas
jl
pop
test
push
push
add
add
sub
mov
cli
mov
mov
xlat
xchg
and
cmp
incl
pop
aaa
jmp
pop
add
mov
loopne
xor
add
add
out
mov
sub
push
lock
mov
push
icebp
add
addr16
sub
bound
add
roll
sub
sbb
jle
add
imul
add
fisubrs
call
jns
jmp
push
inc
movsl
out
sbb
out
movsl
pusha
lar
ficoms
aam
fcmovnbe
ret
lods
sbb
std
xchg
xchg
jmp
mov
sarl
add
jno
call
rolb
icebp
sti
jmp
cltd
ljmp
jo
inc
pop
lret
pop
add
sub
incb
push
inc
dec
sub
inc
rcll
dec
push
das
loop
push
in
pop
adc
in
arpl
pop
shll
cmpsb
add
mov
add
sub
adc
sub
inc
repz
fs
lock
loop,pn
in
xchg
mov
stc
pop
arpl
pop
stos
std
adc
cmp
adc
xchg
or
adc
xchg
stos
xchg
das
ret
add
outsl
or
nop
add
dec
sub
xchg
or
lret
std
jne
pop
aas
lods
cmpb
xchg
outsl
int3
call
or
jo
rcll
add
cltd
nop
sub
jecxz
push
call
or
lea
add
push
std
out
mov
mov
adc
addb
divb
mov
adc
cld
adc
dec
xor
or
stc
add
das
jo
hlt
sub
in
sub
add
xor
cld
rolb
add
lock
inc
xor
jp
pop
mov
mov
inc
pop
outsl
push
ljmp
add
sbb
stos
cmp
xor
out
testb
cmp
lds
incl
shlb
mov
icebp
xorl
adc
push
test
movsl
rcll
fsubp
les
fidivs
fdivl
mov
rcl
fists
les
mov
fmull
add
push
adc
in
insb
push
mov
in
data16
lea
xchg
jno
pop
and
fsub
movsl
mov
mov
and
sub
mov
imul
lea
jmp
sti
push
add
leave
jmp
xchg
mov
or
and
inc
add
add
sub
inc
stc
cmp
mov
data16
aaa
stos
addr16
mov
flds
daa
test
push
xchg
cmpsb
adc
xor
cmc
cmpsl
sub
in
push
xchg
sub
add
push
rolb
out
jo
out
ret
out
out
stos
std
stc
test
call
mov
add
ret
mov
dec
push
fimuls
or
and
inc
scas
scas
std
adc
inc
and
lea
push
call
dec
inc
sub
mov
movb
call
incl
in
je
std
call
sbb
mov
pop
pop
sbb
movsl
mov
movsl
mov
movb
das
popf
push
add
cmc
xlat
push
sub
pushl
fs
das
push
inc
sub
mov
push
lret
adc
outsb
add
cld
push
stc
pop
add
mov
dec
enter
das
mov
incl
cmpsl
int
loopne
int
mov
cmp
cld
jp
push
call
pop
int
and
or
ljmp
or
insb
ljmp
xor
mov
imulb
rcr
daa
add
nop
mov
push
testb
das
ficomps
sub
movsb
sbb
jb
xor
adc
sub
outsb
push
lods
sbb
cmp
out
push
lods
sti
lods
sbb
fsubl
mov
jmp
adc
call
jnp
add
data16
fistl
jns
and
int3
and
ss
jbe
mov
push
sub
add
pop
ljmp
fdivp
push
ret
in
fucomp
ds
sti
shrl
push
ret
sub
enter
sti
mov
sub
adc
pusha
ljmp
jmp
cltd
xchg
or
add
jno
add
sub
sti
fsubl
pop
hlt
push
ds
fisubs
add
in
movsbl
pop
shl
pop
add
sub
inc
icebp
pop
push
xchg
insb
pushf
or
sub
add
mov
cmpsl
adc
jg
jnp
mov
cmp
jecxz
test
jmp
loope
test
adc
incl
add
fwait
add
lret
adc
adc
lcall
fimull
or
push
jbe
gs
iret
adc
call
adc
in
lcall
xchg
out
dec
lea
incl
adc
addl
je
jecxz
push
fstp
ja
hlt
jne
push
ja
push
sbb
jne
mov
cmpsl
inc
xor
push
add
mov
add
loop
pop
rorl
shll
xor
addl
pop
add
jmp
and
add
out
mov
xor
call
adc
rolb
jnp
das
idiv
cmpb
pushl
add
fdivp
enter
inc
das
mov
adc
mov
test
fwait
icebp
xor
in
sti
test
and
inc
das
pop
sub
pop
lods
lods
push
or
inc
add
das
clc
cmp
mov
mov
cmc
rcrl
sbb
insl
les
in
add
ficoml
icebp
xor
pop
aas
add
jmp
scas
mul
lcall
add
lret
not
xor
sub
leave
mov
testl
leave
stos
xchg
in
bound
in
fnstsw
mov
mov
sub
data16
js
shrl
add
or
sti
hlt
sbb
inc
jmp
roll
fiadds
xchg
mov
or
add
sub
call
pusha
push
ljmp
hlt
lods
pop
fldcw
dec
mulb
sti
aam
int
jmp
sub
push
outsb
out
push
bound
push
add
hlt
push
loope
adc
adc
jo
sbb
mov
add
jnp
sahf
fiaddl
mov
or
outsl
hlt
inc
sbb
cmp
lahf
add
jnp
or
std
adc
add
hlt
call
loope
xadd
add
mov
jne
sbb
push
cmp
stc
fs
mov
fimuls
ljmp
push
enter
cmp
fsubr
icebp
hlt
incl
sub
add
iret
add
testb
add
nop
shl
add
ret
pop
push
in
xchg
ret
cld
jo
mov
lock
jbe
inc
ds
cld
push
jo
jae
dec
add
cld
ret
ja
lods
ret
cmpsl
xlat
outsl
push
mov
es
out
repz
rorl
dec
les
test
add
ficomps
sbb
push
inc
add
das
mov
mov
lods
lods
add
flds
das
je
les
mov
das
loope
push
sbb
pop
adcl
insb
aas
jae
sbb
aad
jo
pop
loope
jg
imul
in
loope
mov
sub
jmp
iret
push
loope
and
lds
push
sub
add
mov
cwtl
orb
add
mov
cld
cmp
or
imul
lcall
lds
sti
aam
int
jmp
xor
movsl
in
imul
xchg
pop
jmp
lea
nop
push
adc
jne
jae
xorb
adc
rolb
movsb
jo
or
cmc
or
sub
xchg
push
pop
mov
adc
sub
xchg
mov
inc
jmp
xor
or
imul
dec
sbb
setne
je
sbb
adc
fwait
add
cmp
fdivs
fsubs
call
dec
hlt
test
cmpsb
sbb
dec
push
dec
push
mov
sar
add
add
test
adc
jnp
leave
add
add
sub
cld
add
iret
std
adc
push
movsl
adc
sti
sbb
inc
push
push
aam
das
xor
clc
xlat
add
pop
loopne
or
mov
mov
add
dec
cld
add
cmovne
mov
inc
ja
cld
add
test
dec
clc
stos
xor
cmp
mov
mov
add
pop
push
std
cli
pop
push
std
loop
mov
jae
insb
dec
adc
cmp
inc
ljmp
sub
pop
in
fdivrp
add
xchg
mov
mov
outsb
sbb
lcall
cs
add
fldt
sbbb
push
repnz
fcmovu
mov
mov
outsl
fidivrs
xchg
or
cmc
rcrl
cs
jno
daa
addr16
mov
mov
ja
hlt
fisttpl
cmp
lret
outsb
loop
push
cmpsb
lret
pop
and
add
fmulp
aaa
sub
sub
xor
xchg
mov
add
insb
fisubs
add
test
pop
cld
mov
cmp
sti
aaa
mov
jne
out
out
adc
insb
fidivrs
and
bound
inc
pop
fadd
cwtl
adc
flds
add
fimuls
mov
xor
shrb
pop
adc
push
vpsraw
lds
test
sub
push
jb
add
fiadds
mov
xlat
inc
and
outsl
and
push
fwait
fs
sti
pop
sahf
dec
mov
popl
dec
sahf
jle
mov
mov
push
loopne
test
cld
inc
insb
jle
fstpl
inc
adc
loop
inc
mov
out
add
mov
sar
jmp
loop
test
jmp
aad
filds
mov
add
dec
idiv
test
out
shlb
clc
push
mov
test
in
test
addl
mov
sbb
sbb
cmpl
lds
cld
pop
cwtl
mov
jb
rolb
cs
mov
adc
mov
add
adc
out
lods
mov
push
cld
cmpsl
sbb
cwtl
mov
popa
insb
sbb
mov
imull
imul
dec
mov
or
ret
cld
push
fnsave
cmpb
fnsave
inc
dec
mov
xor
xchg
lods
mov
mov
das
fsubrp
xchg
push
testl
or
repz
mov
pop
hlt
mov
pop
or
repz
outsl
fisubrs
arpl
mov
pop
cmpsl
mov
pop
ret
movsl
push
jmp
inc
das
gs
xchg
in
adc
mov
jmp
add
xor
cld
aam
out
inc
jmp
out
mov
dec
add
xor
and
sub
sub
mov
es
je
in
loopne
out
jb
cmpsb
and
jge
in
aam
out
inc
jmp
imul
stc
mov
or
ficomps
or
aas
push
add
or
jmp
add
imul
add
faddl
add
add
and
test
ljmp
xchg
cmp
les
push
loopne
adc
cmp
lret
bound
and
repnz
pop
mov
xor
andb
mov
sahf
push
push
dec
xchg
mov
mov
add
stc
decl
jecxz
mov
add
pop
add
push
call
std
lcall
das
cmp
dec
fmull
push
std
loop
repnz
pop
mov
xor
rorb
std
ret
jb
xchg
push
call
movsb
xor
and
and
xor
je
std
and
rorl
ret
push
data16
jle
or
mov
fbld
add
in
data16
pop
xchg
mov
inc
dec
push
out
push
xor
add
sbb
push
push
push
call
add
adc
ljmp
jecxz
add
mov
or
mov
pop
sbb
imul
inc
jmp
mov
adc
out
test
mov
xor
pop
je
roll
add
jl
cmp
add
mov
mov
gs
pusha
push
jmp
out
xchg
in
je
mov
repnz
xchg
mov
pop
xor
das
sub
pop
or
dec
into
mov
das
fsubrp
lret
add
loope
in
push
sub
mov
aas
fimuls
leave
pop
push
addr16
xchg
fldenv
jle
lock
hlt
cmc
add
sub
je
sub
das
sub
jns
sub
mov
push
push
push
imul
leave
jmp
push
sar
bound
movb
fisubrs
sub
pop
jae
bound
es
pop
sti
pusha
repnz
repz
push
add
popa
je
outsb
push
pop
add
add
popa
add
xchg
jmp
mov
ret
mov
pop
int3
add
cmp
int
lret
leave
xchg
or
cmp
add
sub
popf
call
cmp
sarl
cs
add
sub
and
and
and
out
inc
xor
add
add
jo
mov
inc
inc
mov
mov
cwtl
xchg
lea
lds
dec
cmp
das
push
sbb
add
std
loop
mov
mov
lods
jns
adc
fistps
std
mov
xchg
mov
lods
add
std
mov
sbb
adc
mov
dec
cmp
subb
jg
fldl
jbe
add
mov
insl
inc
inc
dec
cmp
les
decl
mov
sub
pop
sub
shlb
add
xor
ret
shrb
mov
das
dec
or
fildll
xchg
cld
rcrl
mov
arpl
jmp
das
and
adc
push
mov
fucomp
mov
inc
mov
add
sarb
mov
das
push
cmp
shll
ret
cmp
mov
cld
fidivrl
enter
sub
xor
and
bound
jo
cs
rol
inc
loope
fmull
xchg
cs
imul
rolb
rcr
xchg
ret
fldenv
xchg
mov
add
sub
icebp
rcl
je
mov
xchg
daa
ficoms
xchg
loope
fiadds
pop
mov
and
sub
add
sub
jne
push
inc
cmp
sti
fs
adc
cwtl
sar
add
sbb
test
add
lcall
xchg
out
pop
sti
call
add
push
push
test
popa
pop
mov
push
std
js
inc
push
sub
jne
mov
lret
pushf
outsl
pop
cmp
shll
test
add
pop
in
std
aaa
and
jg
fidivrl
mov
pop
ds
rorl
cmc
mov
subl
add
out
pop
push
std
int
call
dec
push
or
pop
lcall
or
scas
adc
aas
add
stc
ret
ljmp
mov
cltd
mov
xchg
cli
ljmp
dec
pusha
lret
out
les
cmp
or
insb
add
das
hlt
push
mov
sbb
mov
les
cmp
add
or
jnp
mov
lret
mov
fucomp
add
sub
call
iret
xchg
scas
jl
adcb
std
mov
iret
push
mov
cmpsl
push
mov
sbb
add
lahf
dec
xor
mov
sbb
push
sub
cmp
hlt
push
cmp
ljmp
dec
cmc
mov
loope
cmp
sbb
mov
sbb
movsb
sbb
xchg
fistpll
ret
pushf
or
into
pop
push
inc
cmp
add
or
insb
in
push
push
push
loope
std
popa
int3
movsb
mov
je
sbb
sti
out
jb
ret
sub
pop
jl
jne
fidivs
icebp
into
pusha
lret
sub
inc
jmp
imul
jge
xor
out
test
fidivrs
jle
push
jecxz
dec
sahf
adc
mov
push
mov
xchg
add
cmp
xor
xorb
cmpl
dec
add
push
js
and
mov
xchg
dec
imul
aad
xor
xchg
cmp
shlb
gs
roll
cmp
xchg
push
imul
mull
movl
test
pushf
fistpl
movzwl
cmp
repz
pop
call
fs
cmp
out
or
outsb
mov
loop
inc
inc
inc
sub
mov
add
mov
mov
stos
lahf
cwtl
push
insl
cmp
pushf
mov
mov
andb
insb
adc
cld
mov
or
out
into
stos
mov
pushf
mov
scas
mov
pop
or
jl
jnp
pushf
inc
out
mov
xchg
and
test
jp
js
pop
repz
add
dec
mov
pop
lds
inc
inc
iret
mov
hlt
bound
push
add
lret
ficoml
sbb
lock
adc
and
xor
mov
loop
xchg
jne
add
int3
lret
jne
inc
das
mov
jecxz
lret
cld
fcomps
push
jmp
icebp
mov
add
fs
aad
insb
cmp
add
or
xchg
jl
xchg
aas
insl
fimuls
inc
pop
mov
inc
ror
test
stc
insb
shlb
or
in
inc
mov
sti
push
mov
insb
clc
sti
pop
lret
adc
fs
push
test
fmul
sti
push
movsb
mov
jbe
add
mov
ret
push
dec
xor
jns
push
jmp
sub
je
sub
dec
aas
pop
cmpsb
push
pop
sbb
add
mov
loop
add
lahf
dec
ljmp
fstl
inc
push
inc
aas
hlt
cmp
loope
add
loop
add
add
push
adc
cmc
fistl
shlb
clc
add
cmpsl
inc
xchg
or
stc
add
faddl
jmp
pop
repz
pop
mov
push
in
imul
push
adc
jg
cmp
mov
es
cld
das
lds
add
cmp
mov
inc
inc
push
mov
out
adc
les
add
jp
mov
and
add
testl
lods
cld
pop
mov
cs
add
outsl
mov
pop
enter
out
out
xor
mov
ds
call
das
cmp
incl
in
sub
fildll
test
ljmp
xchg
mov
inc
das
push
and
pop
fwait
sbb
add
xlat
insb
mov
add
aad
loop
fsubrp
add
and
xlat
arpl
jmp
jle
iret
adc
adc
cli
lock
push
outsl
fisubs
popa
jl
das
fisubrs
jecxz
daa
sti
lods
push
jmp
fs
push
mov
imul
stos
lods
popf
pop
sbb
cmp
jge
stos
mov
mov
cmp
test
ret
mov
call
in
push
test
leave
sti
sbb
pop
add
cmp
mov
sti
outsb
jl
jmp
fs
push
sub
aad
push
lcall
sarb
ret
popa
and
push
sbb
ret
ret
dec
sti
aam
out
inc
jmp
add
cmpsb
pop
inc
out
ret
lret
ret
cmp
add
mov
add
arpl
mov
ja
push
cmp
data16
filds
adc
rcrl
mov
mov
fiaddl
add
dec
jg
lea
push
aad
lock
pop
loope
rol
push
lea
sub
ds
add
add
push
lcall
dec
add
call
add
sub
or
jecxz
mov
add
ret
jb
popf
scas
test
fbstp
mov
mov
mov
or
jl
subb
mov
sbb
mov
out
mov
out
movsb
mov
add
pop
cmc
and
or
ret
sbb
decl
lock
push
test
test
jg
decl
xlat
adc
jge
push
ret
sub
jnp
cmpsb
fsubp
cmpsl
call
ret
insb
les
imul
cmpl
mov
arpl
cmp
add
jne
ljmp
loopne
adc
sub
out
xchg
inc
das
pop
cmpsl
xor
das
mov
inc
das
mov
cmp
ficomps
movl
das
push
lods
loope
sub
ljmp
js
ljmp
or
cmpsb
mov
add
push
sti
lea
mov
sub
call
add
out
push
push
adc
mov
xchg
roll
insb
dec
or
insb
cmp
mov
pop
clc
jge
rcll
fiadds
imul
fiadds
jmp
rol
push
pop
scas
shl
rcll
cld
pop
ja
or
xchg
ret
scas
leave
stc
es
adc
aaa
push
test
push
xchg
ret
add
sub
add
push
pop
add
movb
mov
pop
jmp
xchg
jnp
lea
ret
popa
sub
call
inc
lds
or
scas
andb
cld
inc
popf
jne
mov
jmp
cmp
xlat
inc
push
lock
jp
clc
push
sbb
add
xchg
inc
cld
divb
lds
add
push
sbb
pop
mov
adc
and
icebp
or
jnp
das
ja
jae
mov
mov
pusha
roll
bound
lods
fisubrl
nop
add
mov
mov
mov
mov
jmp
sub
add
jo
adc
js
aad
inc
mov
fnstcw
push
jnp
add
mov
cmp
ja
mov
inc
dec
lea
outsl
mov
cmovs
cmp
aad
push
loope
fistpl
mov
sbbl
fcomi
mov
hlt
lods
insb
jmp
lcall
insl
filds
insl
call
fists
call
jnp
dec
std
mov
adc
push
and
fldln2
fisttpll
outsl
pop
xlat
fucom
add
push
pop
call
loopne
scas
mov
lods
lock
sbb
xor
xlat
push
fsubrp
sbb
es
dec
cltd
mov
add
lret
push
out
inc
scas
movsb
sti
cmpsb
jle
gs
sti
push
xchg
dec
cld
push
mov
shl
insb
roll
add
add
sti
out
dec
and
insb
mov
out
xchg
ss
gs
roll
inc
push
jl
inc
es
adc
shll
xor
jmp
lea
test
les
add
loop
lock
push
outsl
pop
shrb
add
pop
loopne
loope
push
push
leave
mov
arpl
cmp
inc
xchg
loope
jmp
mov
inc
jb
cld
jne
repnz
jo
mov
pop
jg
mov
jb
incl
loop
add
mov
psrlq
ficomps
into
add
insl
jp
add
add
inc
clc
push
lea
idiv
mov
push
loope
fistpl
ds
cmpsb
mov
pop
out
cmp
xlat
addr16
fsubs
mov
xor
call
stos
push
sbb
sbb
cld
sbb
sbb
cmp
mov
cld
pusha
mov
lods
jle
incl
add
mov
pop
pop
mov
mov
in
pop
sbb
cld
sbb
cmp
cmpsb
faddp
fwait
mov
pop
mov
pop
mov
les
das
ficomps
lret
negl
pop
cmp
stos
add
and
fisubl
mov
xor
mov
lods
stos
decl
loop
insb
ficompl
add
jg
fldcw
xor
lods
and
mov
xchg
arpl
add
mov
test
std
icebp
daa
std
cltd
mov
int
ljmp
fldt
inc
jmp
dec
cmc
push
jmp
rcll
cmp
or
fs
ljmp
or
dec
jmp
ret
pop
out
pop
sti
add
daa
testb
and
je
lahf
rcrb
jl
bound
cmp
mov
jmp
movb
cmp
adc
testl
fiadds
inc
dec
mov
btr
pop
fs
sbb
pop
fcompp
cli
jmp
stos
mov
and
xor
pop
sub
mov
jmp
inc
push
adc
add
loope
call
ffree
push
and
add
push
adc
mov
push
xchg
fldl
ret
js
ljmp
and
push
notb
incl
out
mov
lds
bound
add
mov
push
rolb
xor
pop
movsl
lea
sahf
cmpb
pushl
fldl
add
das
int
imul
pop
add
mov
out
xchg
or
test
xor
adc
sbb
ret
insl
testl
lods
shl
push
pop
sub
xor
xchg
jmp
cmpsl
loopne
mov
mov
push
pushf
adc
xchg
or
or
aas
das
cs
lock
aad
cmpsl
iret
test
decl
add
add
bound
mov
lods
cmp
adc
jmp
sub
imul
or
dec
add
bound
pop
and
cmpsl
sarb
sub
cmp
das
idivb
test
inc
mov
ud2
div
iret
test
mov
add
roll
xchg
jmp
xor
fldcw
jo
jge
mov
add
arpl
stos
mov
mov
cltd
xchg
xchg
gs
int
gs
jno
faddl
das
sub
in
pushf
jg
loopne
add
mov
out
sar
aad
iret
push
inc
pushf
pop
in
mov
call
mov
add
ficoms
in
into
push
push
jl
frstor
mov
clc
int
jmp
xor
outsl
out
ds
xchg
mov
add
mov
faddl
mov
loop
rclb
mov
es
dec
or
cld
or
mov
push
cld
push
lea
push
xchg
aam
add
mov
add
pushf
andb
jle
push
push
fiadds
push
inc
push
mov
push
jns
mov
push
dec
outsl
cmp
andl
ljmp
mov
pop
mov
ret
pop
push
push
cltd
icebp
sbb
inc
in
xorl
mov
ss
dec
or
inc
call
testl
outsl
jmp
xchg
mov
mov
test
or
adc
jge
cltd
dec
addr16
jae
dec
sbb
das
inc
cmp
testb
push
xchg
aas
das
pop
dec
push
loopne
mov
mov
adc
in
adc
add
inc
sbb
decl
cli
aas
call
xor
stos
push
or
sub
dec
and
inc
decl
ret
das
cmp
add
imul
jg
sub
mov
dec
ljmp
sub
mov
or
xor
icebp
xchg
xor
lret
push
adc
pop
das
or
popa
addr16
popa
or
mov
pop
push
punpckhwd
xchg
call
mov
cwtl
pop
lret
gs
cwtl
xor
push
add
sub
test
jmp
or
xor
movsb
xchg
mov
insb
ret
sbb
outsb
or
and
bound
or
imul
fdivs
and
into
sti
xor
and
scas
mov
in
pop
jae
fldenv
ret
cli
mov
das
add
bound
or
cmp
xchg
fcoms
cmp
test
add
xor
loopne
cld
cltd
and
mov
sub
mov
bound
in
xlat
mov
or
call
adc
call
sbb
add
cmp
call
xorl
cld
incl
push
lock
hlt
jmp
fsubrs
gs
testb
mov
dec
cld
cmp
fadds
add
popf
push
stc
xor
mov
lea
adc
div
mov
pop
rolb
jns
cmp
fidivrs
pop
outsb
loopne
cmp
cltd
mov
mov
dec
or
sbb
pop
jg
adc
lods
lock
jp
cwtl
jecxz
cmpb
or
add
call
dec
repnz
mov
or
inc
mov
std
xor
lds
dec
int
cmp
out
aas
das
inc
lds
idiv
call
fs
dec
popa
jo
xor
or
lds
cmp
and
inc
or
std
lods
jle
std
lods
cmpsb
out
ljmp
gs
mov
incb
pop
test
mov
add
into
pop
xchg
test
mov
jg
sub
stos
movsl
inc
rcll
mov
sub
adc
push
pop
pop
pop
sub
mov
xor
sub
stos
xor
sbb
fsubr
fbld
or
pop
mov
fildl
cmp
add
fidivs
loopne
scas
cmp
add
sbb
cli
stc
in
int
jmp
arpl
dec
popa
pop
mov
lods
mov
sbb
cltd
fwait
ljmp
test
std
in
out
divb
sti
cmp
mov
mov
push
inc
loope
sbb
sbb
pop
inc
leave
xor
sti
es
mov
aad
out
add
loop
filds
add
mov
cmp
lds
mov
hlt
mov
inc
ret
ret
mov
mov
adc
push
out
adc
dec
xor
call
fimull
sub
adc
das
pop
adc
das
jle
sbb
and
aam
mov
clc
push
aad
mov
bound
inc
pop
xor
push
sbb
lea
in
jge
xlat
testb
roll
aas
clc
sahf
push
std
not
loop
add
mov
push
push
jge
jecxz
or
test
mov
inc
lock
leave
adc
ds
or
jl
pop
xor
mov
in
inc
inc
or
mov
stc
aaa
mov
and
mov
pop
mov
push
mov
xchg
cmp
mov
outsl
or
loopne
fdivl
lahf
add
lahf
fists
push
movsb
jge
mov
sbb
insl
pop
or
rcll
add
xor
cld
adc
cld
jnp
out
icebp
aas
mov
add
pop
lods
out
push
call
push
shll
nop
ret
out
sub
push
pop
sub
mov
outsl
mov
repnz
mov
pusha
add
das
ficomps
and
pop
int
mov
sbb
aad
inc
daa
jmp
addr16
frstor
inc
fnstsw
add
xor
xchg
or
sbb
pop
jge
in
jle
cmpsb
sbb
pop
dec
add
lahf
stos
jg
sub
inc
jb
cmpsb
das
add
aam
inc
icebp
cld
and
bound
das
sub
ljmp
ret
and
push
loopne
cmp
push
sbb
xchg
enter
fs
cmc
je
or
mov
jb
jge
pop
inc
mov
and
call
daa
mov
inc
fnstsw
xchg
fimuls
mov
or
fiaddl
xorl
jne
push
repnz
mov
dec
out
or
add
cmc
push
test
add
pop
cmp
lds
nop
mov
dec
dec
xchg
inc
hlt
sbb
mov
je
stc
push
pop
jne
and
jbe
mov
mov
push
mov
sbb
call
mov
lea
dec
dec
push
add
ds
es
xor
inc
inc
push
mov
cld
sbb
or
sub
push
clc
sub
outsb
mov
push
movsb
arpl
divl
arpl
cld
insb
mov
jbe
and
mov
mov
daa
out
mov
call
xchg
daa
call
stc
cmp
dec
add
adc
mov
mov
dec
mov
out
lea
pop
mov
cld
call
shll
cmp
dec
and
ja
or
ja
push
jp
add
fwait
cmpb
dec
push
lret
scas
fucomp
add
in
sbb
add
fwait
lret
mov
aad
fidivl
push
clc
cmpsl
and
lock
mov
add
mulb
push
pop
push
movsl
out
xor
sarb
adc
test
repz
mov
mull
mov
fs
loope
inc
adc
les
xor
clc
dec
fmuls
call
lock
sbb
xchg
test
pop
int3
call
insb
add
jo
sbb
outsb
addr16
pop
push
in
out
or
inc
lods
mov
out
fimuls
xchg
adc
mov
pop
cmp
mov
pop
cmp
mov
jmp
sub
push
fimuls
fs
sti
jmp
out
lods
call
ret
dec
add
sub
mov
add
cmp
sahf
sbb
dec
lea
dec
mov
push
adcl
push
mov
jns
inc
lea
sbb
decl
pop
sbb
cmp
call
sbb
add
stc
dec
mov
sbb
dec
pop
lahf
xchg
add
add
add
add
pop
out
push
jmp
adc
pop
mov
mov
test
mov
lods
jp
xor
shl
ljmpw
pushf
stos
aas
inc
xchg
lcall
push
pop
ds
clc
imul
xchg
cwtl
mov
push
cmpb
roll
or
movsb
jp
call
mov
scas
xchg
add
iret
int3
jb
mov
ds
mov
sub
cmpsb
sub
sbb
sub
cmpsl
push
out
xor
add
loopne
add
lods
pusha
push
sub
pop
sub
test
lret
aaa
or
mov
popa
movsl
clc
lods
popf
std
stc
jmp
jb
insl
cmpsb
retw
cmp
movsb
xchg
pop
test
xchg
mov
ds
insl
cmpsb
bnd
fsubrp
add
dec
jmp
mov
out
insb
mov
clc
mov
out
movsl
sbb
xor
lahf
push
out
push
sbb
sub
pop
in
cmpsl
pop
in
push
rorb
icebp
add
leave
mov
test
jmp
mov
pop
mov
dec
sub
test
sub
xchg
push
mov
test
sbb
cs
mov
call
pusha
imul
xchg
jae
call
ret
outsl
imul
push
push
dec
js
add
cld
mov
ret
iret
insb
pop
cld
push
lds
push
lds
push
sub
call
popf
jb
fistl
and
add
fildll
in
fiadds
mov
fiadds
add
stos
mov
jle
out
daa
aas
clc
insl
decl
adc
outsb
add
push
call
call
adcl
adc
add
mov
aad
mov
outsl
mov
adc
xchg
add
cmp
push
mov
cmp
pop
cmpsb
push
sub
jmp
jb
sub
xchg
mov
mov
iret
cmc
imul
mov
imul
sbb
mov
dec
add
out
sub
and
notb
jp
out
adc
add
adc
movsb
fsubrp
jg
sub
jp
shrl
inc
jb
fs
repnz
insb
fnop
insb
aaa
dec
mov
push
mov
ret
push
sbb
pop
test
aas
pop
push
and
scas
sbb
cmc
mov
xchg
test
mov
repz
add
push
adc
mov
mov
das
mov
ss
and
mov
aaa
mov
sub
jnp
xchg
add
pusha
add
jnp
jmp
xor
decb
mov
jne
xchg
test
pop
pop
mov
call
fidivrs
mov
sti
adc
mov
data16
add
add
in
or
push
push
in
push
cmpsl
jg
add
push
aaa
pop
push
stc
xchg
adc
xor
int
push
inc
in
dec
add
sub
mov
sti
insb
fsubrp
fcoms
sti
bound
push
add
inc
clc
lcall
mov
rcl
jmp
test
adc
fildl
add
add
std
adc
ret
sbb
imul
addl
es
flds
mov
fsubrp
je
fucomip
setb
incl
push
aas
sti
decl
adc
and
fildl
ret
out
pop
cld
cmp
int
ljmp
ja
das
rorl
or
cmp
add
outsb
add
xor
incl
call
mov
subl
lcall
aaa
add
pop
decl
mov
adc
pushl
adc
add
out
cmp
decl
xchg
dec
adc
mov
sub
mov
xchg
mov
pop
push
clc
insb
test
add
fsubrp
add
cmpl
pop
mov
mov
jmp
clc
dec
fsubrp
mov
loope
dec
cmc
call
or
icebp
outsb
dec
mov
adc
fsubrp
shrb
movsb
sub
enter
testl
ret
subl
loopne
insb
gs
call
pop
add
icebp
and
sbb
shrb
imull
imul
in
mov
cs
adc
add
fdivr
hlt
js
inc
jmp
icebp
pop
lea
adc
xchg
xchg
add
scas
pusha
rcrb
push
adc
out
sahf
pop
ficomps
jo
sti
imulb
pushf
mov
add
shll
stos
and
add
sbb
fwait
xchg
aaa
cmpb
add
repz
jmp
icebp
inc
add
or
ljmp
loop
push
popa
hlt
lods
adc
mov
dec
mov
pop
out
xchg
add
cmp
jae
je
and
adc
ljmp
out
call
mov
icebp
je
push
or
insl
mov
pusha
sbb
call
in
in
jge
mov
std
push
xchg
mov
mov
mov
inc
cli
scas
jecxz
das
outsb
jp
lods
inc
adc
lods
pop
jnp
inc
sbb
adc
pop
std
and
inc
das
or
inc
xchg
mov
call
stc
sub
or
outsl
dec
rcrl
fmuls
orl
je
inc
call
jle
sub
pop
addb
decl
mov
adc
jg
dec
dec
test
mov
lahf
insl
aaa
das
fsubrp
xchg
adc
jmp
pop
xchg
add
jmp
je
sub
jnp
or
mov
inc
cmp
data16
loopne
fistpll
add
xchg
mov
arpl
imul
add
jle
out
popl
xchg
xlat
imul
jns
call
mov
sahf
adc
fucompp
pop
inc
dec
adc
roll
cmp
xor
pop
dec
dec
pop
adc
bound
and
test
add
loop
stos
cmpsl
sbbb
jmp
pop
in
dec
pop
cli
add
in
cwtl
arpl
cmp
add
mov
das
push
divb
push
mov
sub
xchg
subb
jmp
pop
cltd
nop
add
add
xor
ret
call
ljmp
add
push
cmpl
adc
ds
jno
push
sbb
movaps
add
add
addb
out
adc
push
mov
add
arpl
push
inc
aas
cld
xchg
push
fildl
add
testl
add
out
push
push
push
shll
incl
add
mov
adc
jo
sti
lahf
jecxz
sbb
cmp
sahf
sbb
mov
ds
xchg
addl
mov
lea
sbb
das
mov
repnz
imul
sub
or
sarl
inc
inc
lock
adc
mov
lcall
mov
add
pop
or
pop
cld
sbb
pop
movsb
ret
fcmovnb
in
mov
push
mov
aad
sub
lret
outsb
jbe
pop
or
xor
sti
das
or
push
js
pop
mov
lock
rolb
push
lcall
shll
je
jbe
pop
mov
ljmp
sbb
dec
adc
mov
rclb
push
in
adc
lock
out
add
das
fisubrs
movsl
arpl
lret
movsb
xchg
mov
fldt
jnp
jmp
sub
or
sbb
add
cmp
jp
arpl
xchg
dec
rcll
fisubrs
call
xchg
xor
mov
rcll
out
icebp
popl
pop
or
shlb
popf
adc
cltd
add
and
lcall
dec
jmp
jmp
imul
add
in
in
xchg
push
cmp
sub
sti
cld
clc
jecxz
jmp
xchg
sti
pop
sub
mov
imul
cmpl
sub
stos
sub
jne
adc
shr
imul
sub
jge
sub
inc
xor
sbb
add
and
xchg
xor
icebp
add
adc
call
notrack
push
jmp
scas
std
sti
lcall
mov
lods
cld
jne
or
or
push
mov
mov
std
sti
lcall
xchg
incl
mov
test
movsb
dec
add
scas
mov
pop
sbb
add
inc
pop
call
cld
jne
add
fucomip
arpl
add
out
push
mov
fistl
or
cld
push
das
fstp
add
in
inc
pop
cmp
pop
movw
xchg
ljmp
test
shrb
xchg
xor
in
aaa
mov
add
push
movsb
call
jae
add
xchg
add
and
add
adcl
jne
adc
cwtl
roll
mov
inc
jle
inc
loopne
jno
das
or
sub
xchg
add
into
les
movsl
shll
push
mov
sub
adc
xchg
push
ljmp
addr16
cmp
out
mov
add
roll
add
jno
cmpsl
xor
jbe
loop
ret
add
sbb
sub
test
out
mov
sub
mov
lret
mov
adc
int
mov
insl
or
adc
mov
loop
push
fiadds
outsl
in
test
in
or
jb
movsl
sbb
jmp
push
push
add
movsl
or
lahf
aam
fldz
ret
outsb
xchg
xchg
test
je
mov
cwtl
scas
out
nop
xchg
neg
fsubrs
fidivs
scas
ja
add
xchg
shl
dec
orl
cwtl
lahf
out
nop
out
mov
addr16
cwtl
inc
out
nop
jecxz
test
jb
stos
sub
pop
add
mov
add
cmpsl
stos
push
mov
dec
sub
adc
mov
adc
inc
gs
adc
je
pop
repz
ret
clc
loop
orl
outsb
jo
cwtl
jae
arpl
add
push
push
dec
incl
push
call
push
sbb
and
inc
adc
fucomi
dec
xor
sahf
sti
push
add
cmp
movsb
adc
xor
or
xor
pop
repz
mov
mov
or
aas
daa
inc
jno
add
js
jae
jge
adc
mov
cld
cmp
adc
inc
jnp
hlt
adc
or
mov
pop
cmp
or
mov
outsl
push
daa
cmp
push
jp
dec
xor
fcoml
sub
sub
dec
inc
das
jo
movsb
cmp
cltd
cli
call
stos
repz
sbb
fdivr
mov
ficomps
out
fldl
cs
fisubs
nop
mov
jle
adc
or
das
fs
jle
push
inc
push
pop
pop
add
fisubrs
fidivl
fsubrp
mov
scas
cmpsb
add
add
in
jb
arpl
add
aas
dec
push
outsl
fisubrs
xchg
push
outsl
ficoms
fimuls
add
push
outsl
fidivrs
sbb
mov
mull
add
xlat
mov
pushw
push
lock
push
sub
aad
clc
add
add
add
data16
es
add
jae
lds
mov
fs
adc
das
jo
psubsb
mov
add
push
xor
jmp
ljmp
into
pop
adc
sub
mov
mov
xor
pop
inc
fildll
lods
sti
in
mov
xor
popf
push
add
mov
mov
push
inc
movsl
imul
lret
adc
push
mov
jge
push
test
or
mov
paddw
cld
dec
lea
mov
jge
or
or
ret
clc
sti
jae
or
std
cmp
shr
mov
inc
mov
leave
aad
xchg
jnp
cmp
add
adc
icebp
inc
add
sar
push
push
inc
das
add
or
push
inc
das
push
sub
fildll
push
call
push
jo
decl
sti
push
mov
jg
iret
mov
mov
test
data16
cmp
push
pop
lds
cld
aad
jp
push
insl
push
insb
inc
jl
push
sub
addb
iret
push
add
test
inc
pop
in
lds
mov
inc
mov
fnsave
pop
jecxz
bswap
movsl
adc
int3
enter
lret
imull
cmp
jne
outsl
movsl
and
jge
cmc
outsb
inc
test
imulb
leave
sbb
jmp
shlb
fsubr
add
sub
lods
popf
xchg
adc
vsubpd
add
fsubrs
movsb
inc
call
mov
sub
xor
popf
xchg
dec
movsl
adc
outsb
or
sub
filds
inc
xor
jne
mov
sbb
or
inc
jmp
xor
or
sti
push
cs
shlb
adc
push
pop
ja
push
jb
add
subb
fiadds
in
sbb
mov
cwtl
sbb
lods
cmp
iret
or
fisubs
scas
or
xchg
aam
jecxz
lcall
roll
cmp
cmc
push
mov
jmp
decl
xchg
mov
dec
mov
les
loope
add
stc
outsb
je
mov
pop
lea
add
aad
cmp
out
sbb
push
pop
adc
jle
jl
xchg
lcall
jmp
faddl
add
sub
in
fdivrl
ret
gs
fsubl
lret
mov
push
rcl
std
cmp
adcl
jne
cli
je,pt
dec
imul
int3
pop
fs
inc
ja
xor
mov
negl
add
daa
jne
push
cmpl
jp
rorl
lret
sti
push
pusha
dec
add
stos
mov
ljmp
in
mov
xchg
arpl
xchg
insl
mov
mov
out
push
add
lods
insb
or
scas
ljmp
jo
push
sbb
js
imul
outsb
cmpb
clc
das
jne
imul
in
sub
dec
add
mov
ficoms
bound
xchg
push
test
arpl
jmp
sar
std
jnp
adc
lods
fadds
loop
fucomp
add
or
movsb
test
jmp
jg
fucomp
add
mov
jmp
cli
lods
pop
jmp
imul
lock
push
mov
push
pusha
sub
sbb
pop
fildll
jmp
xchg
sub
test
clc
fiadds
and
cmpsl
jecxz
dec
int
xchg
jecxz
test
xor
imul
inc
sar
cmp
sub
lea
sti
mov
xchg
in
test
push
lret
sbb
push
add
test
inc
je
mov
or
add
or
lds
jne
xor
aad
out
aad
std
adc
cli
push
test
pop
stc
bound
call
call
xchg
ret
loope
mov
add
or
es
push
loope
adc
push
cmp
cld
incl
repz
dec
sbb
add
mov
inc
xchg
push
and
xor
addb
mov
push
adc
je
loopne
dec
xchg
add
lea
add
fidivs
mov
or
ficoms
mov
dec
adc
ret
xor
or
add
out
subl
jo
inc
sub
or
movsl
iret
out
add
mov
cld
cmp
enter
call
xchg
test
out
push
dec
sub
int3
jae
or
push
dec
adc
iret
xchg
divl
outsl
in
imul
sbb
out
je
pop
push
aad
inc
dec
fnstenv
push
in
imul
mov
ljmp
lret
dec
pop
add
pop
add
aaa
push
movsl
pop
pop
push
lods
pop
out
movsl
pop
dec
push
lods
pop
sub
pop
push
push
sub
mov
dec
mov
stos
rorb
das
fisubrs
add
ficoms
jnp
sub
cmp
rcrb
pushf
data16
test
and
sub
jo
dec
mov
push
outsb
outsl
adc
add
adc
jl
push
add
pusha
pop
add
aad
pop
sub
push
out
in
test
push
je
xchg
out
lea
cs
jmp
sbb
fucom
adc
sub
lea
mov
mov
jns
lret
xchg
inc
sahf
push
fs
popa
push
add
hlt
add
add
sub
sbb
cmpb
das
jmp
push
lret
push
in
push
enter
stc
add
push
fldl
mov
add
adc
mov
data16
into
sub
xchg
adc
int
sbbl
fnstenv
iret
shr
fldl
add
jno
call
xchg
or
cmpsl
and
or
int3
insb
ficoml
inc
idiv
incb
add
lods
adc
int3
inc
push
or
faddl
sbbb
add
pop
aas
in
nop
cld
jne
sti
outsb
or
sarl
or
ror
imul
daa
jmp
jo
jnp
out
jbe
mov
aas
movsb
mov
add
push
mov
jp
out
testb
sarb
sti
dec
jae
add
ljmp
ja
cld
mov
ljmp
sub
mov
gs
scas
ret
pop
jnp
inc
aas
xor
call
mov
imul
lret
hlt
pop
imull
idiv
cld
sti
add
rolb
cmpb
cmp
outsb
imul
arpl
insl
add
add
inc
rorb
sbb
fwait
mov
adc
das
fisubs
cmp
jl
cmpsb
pop
fisubrl
ficompl
mov
push
lea
jne
add
and
test
cs
icebp
xchg
mov
lods
imul
add
push
sub
pop
out
sbbl
enter
stc
aam
sub
or
sarl
add
or
lods
or
cmp
mov
and
inc
addr16
cs
push
lock
orl
jmp
sub
test
fiadds
xchg
xchg
mov
mov
mov
xor
mov
and
add
xor
jmp
jo
add
shrl
imul
mov
mov
xlat
add
movsl
pop
cmp
cmp
movsb
add
ret
xchg
mov
or
add
aaa
in
jmp
insb
repz
loopne
push
and
pop
xor
or
ficoml
loope
call
and
sub
loope
add
loopne
addb
ret
pop
aaa
mov
push
loope
mov
sbb
lds
decl
cmp
sub
xchg
dec
push
das
push
fsubs
cmove
push
das
xchg
cld
cmp
aas
das
or
xor
enter
mov
fldenv
cmp
and
push
addr16
test
pop
std
push
lret
fsubs
daa
iret
imul
add
adc
popa
cld
mov
loope
cld
movsb
dec
and
cmpsb
inc
testl
sbb
pop
cld
jnp
sub
jae
or
pop
das
mov
incl
ficoms
mov
rcr
xor
daa
fbstp
cld
or
repnz
mov
aad
leave
sub
mov
inc
ja
push
add
add
mov
sub
cs
rcr
das
fsubrp
jmp
fwait
cmpsb
add
dec
cmc
clc
fstpl
or
stos
roll
jmp
add
scas
rcl
pop
jl
cmp
pop
adc
pop
mov
pop
das
pop
add
rolb
inc
push
leave
add
popa
shlb
in
jp
pop
jbe
in
push
add
jmp
adc
mov
lock
loope
loopne
jmp
xor
fstpl
fidivrl
aaa
hlt
pop
push
sub
aam
add
stos
sbb
jmp
adcl
push
or
out
lahf
sub
lods
pop
jp
das
and
push
xor
push
cld
inc
dec
inc
adc
addr16
rcpps
call
test
add
pop
cld
jne
add
push
mov
xchg
sub
imul
xchg
std
adc
aad
sti
je
fidivrl
cld
mov
sub
testl
dec
inc
and
cli
call
pop
cld
jne
add
sbb
addl
adc
cld
orl
xchg
push
mov
ret
notb
add
pop
or
addr16
out
cmp
loope
cmp
xchg
or
cld
cwtl
add
push
jmp
adc
inc
aas
or
std
cli
jle
sbb
daa
pop
xchg
xchg
inc
inc
aaa
xchg
add
scas
xor
cmp
sub
inc
mov
or
or
pop
cld
icebp
aas
idiv
pop
negl
push
xlat
push
jo
push
pop
aam
std
add
shl
pop
ja
mov
lcall
adc
scas
add
cli
pop
sbb
adc
ret
scas
outsb
sub
mov
xchg
xor
pop
mov
je
dec
sub
dec
mov
mov
xchg
out
std
cs
mov
in
loope
ja
mov
shl
jb
push
lret
jmp
stos
inc
jmp
jmp
jmp
icebp
push
shr
push
fucomp
add
fildl
out
pop
add
sub
fs
in
mov
cmp
cli
jne
test
and
jmp
add
nopl
dec
adc
add
ljmp
or
je
push
xchg
jo
jns
fstpl
scas
sti
hlt
in
int3
inc
jmp
mov
and
in
mov
cli
subb
mov
out
sbb
lea
ds
call
gs
jmp
sti
addr16
loop
mov
les
mov
ljmp
mov
call
popa
push
push
les
mov
js
and
pop
scas
pop
pushl
and
jmp
std
mov
mov
mov
or
popa
cmc
jp
inc
loope
jne
or
icebp
adc
cmp
fwait
jecxz
call
std
ljmp
nop
inc
jae
add
mov
ret
insl
es
xorl
mov
jmp
inc
mov
ss
das
mov
add
fstps
add
push
test
decl
or
add
mov
add
add
sahf
mov
ret
mov
decb
into
push
aaa
inc
das
lock
enter
inc
data16
in
xchg
sub
insl
pop
dec
xor
js
cli
and
inc
fiadds
das
pop
xchg
pop
aas
ficoms
repz
das
pop
or
out
aam
test
adc
ljmp
or
or
outsb
and
mov
lea
adc
push
push
ljmp
add
jmp
jns
mov
jns
mov
insb
adc
frstpm(287
imul
loopne
loope
cmp
fldl
pusha
and
xchg
xlat
iret
lods
sti
insb
jae
movsl
dec
push
jmp
fdivrs
mov
pushf
adc
shll
add
cli
out
xor
lods
repnz
loop
out
add
cmp
or
aad
add
sub
sti
cmp
jno
frstor
or
xor
stc
mov
or
outsb
lret
outsb
into
push
pop
loopne
or
loopne
pop
push
jno
out
jno
imul
add
mov
out
xchg
std
call
sbb
mov
outsb
outsl
pop
jg
sti
incl
ds
jne
add
or
or
push
inc
push
arpl
jg
pop
lea
jb
lea
outsb
dec
push
jmp
add
pop
cmpl
pop
sub
pop
test
popf
sti
pop
aam
sti
push
or
pop
out
xor
adc
or
add
mov
imulb
xchg
xor
mov
push
das
aaa
push
adc
push
add
add
repz
das
xchg
call
lods
cmc
sub
sbb
dec
jae
and
sbb
fwait
jns
decl
xchg
cld
sbbl
adc
mov
adc
ret
pop
add
and
xlat
stos
cld
inc
jg
mov
add
sbb
inc
push
jg
add
push
jb
add
call
lret
pop
jo
cld
jae
push
ljmp
fidivs
scas
orl
sarb
popa
movsl
pop
xor
mov
adc
cltd
in
dec
fisubs
xor
lods
pop
daa
jmp
push
pop
loop
insb
sub
rcll
add
rorb
xor
add
add
outsl
sbb
or
leave
inc
out
pop
fisubs
dec
into
jo
dec
lret
dec
mov
and
fdivl
sti
push
scas
addr16
aam
fs
or
and
jne
fucomi
adc
adc
test
fstps
jne
loop
testb
adc
gs
jo
cli
fidivs
xor
mov
push
sub
xchg
les
mov
jmp
xchg
sbb
adc
frstor
add
add
sbb
out
adc
decl
sbb
inc
sbb
inc
push
xchg
cmp
movsl
pcmpeqb
dec
jnp
xchg
or
add
fisttps
std
call
das
cld
and
shll
or
fwait
in
out
cs
outsb
or
and
dec
pop
jo
dec
daa
jne
sbb
or
outsl
adc
xor
and
std
ljmp
clc
inc
cld
sbb
jb
fmuls
fldpi
fadds
js
adcl
jbe
pop
insl
call
add
dec
subl
cld
ret
inc
aaa
xchg
add
inc
jbe
enter
andb
fadds
aam
mov
aaa
lcall
xchg
push
mov
push
int
je
sub
lds
inc
test
insb
ja
cld
inc
pop
repnz
das
add
pop
xlat
xchg
pusha
cld
shl
cld
inc
xchg
fdivrl
mov
es
in
add
add
adc
das
bnd
inc
ret
xor
sub
or
push
or
test
push
push
insb
gs
mov
push
cwtl
dec
insb
xor
out
ret
sub
inc
pushf
aad
rorb
sbb
dec
pop
aam
clc
adc
scas
jmp
data16
cmp
push
repz
shll
xlat
xor
hlt
enter
mov
xor
xchg
and
or
jmp
xor
add
xor
outsb
add
or
imul
out
adc
outsl
cli
dec
fildll
insb
fsubrs
ds
inc
jmp
imul
jle
sti
adc
add
lods
movsl
inc
test
add
pop
jbe
in
add
sub
outsl
loope
hlt
pop
stc
loop
shl
mov
or
in
fidivs
mov
fisubs
rclb
mov
addb
lahf
or
or
mov
fildll
rorb
ret
dec
mov
fiadds
push
mov
fimuls
cmp
xchg
pushl
add
push
pop
xadd
dec
pushl
xchg
xor
sub
std
push
vxorps
stos
std
lcall
pop
inc
or
jp
jle
xor
push
inc
das
lahf
test
das
ja
jp
ja
and
das
dec
cld
test
addb
aaa
or
das
or
addb
add
cmpsl
add
or
inc
pop
das
sub
scas
sbb
add
ja
push
scas
push
add
das
ja
insl
stos
sti
idiv
xor
shl
mov
pop
lods
dec
idiv
movsl
js
inc
pop
push
and
mov
das
add
out
fisubs
add
hlt
in
movsl
sbb
jg
jne
dec
ret
jne
les
add
repnz
dec
sbb
or
xchg
dec
mov
jmp
dec
jae
test
pop
out
xchg
outsl
pop
mov
js
je
mov
jns
pusha
and
movsb
ficoml
mov
int3
pop
jp
movsb
sti
inc
arpl
inc
pusha
movzwl
push
movsb
push
or
movsb
dec
pusha
hlt
add
or
stc
cld
mov
inc
jmp
push
lahf
mov
mov
cmc
loop
or
push
sub
push
push
aam
mov
icebp
ljmp
sbb
mov
aaa
xor
in
fldt
push
jbe
outsl
sti
hlt
pusha
push
icebp
jmp
pop
clc
insb
addr16
fsub
push
iret
mov
ljmp
cmp
xchg
ficompl
sub
push
xchg
xor
test
fs
icebp
push
add
add
lock
ss
shl
lds
loopne
adc
push
fstps
fsts
xor
mov
les
push
inc
xchg
xorb
inc
loop
inc
lcall
mov
sbbl
lds
adc
adc
add
mov
mov
je
nop
jmp
pop
add
fwait
sbb
push
loop
mov
rclb
in
push
loop
imulb
xor
or
dec
add
mov
aas
pop
in
jae
push
mov
mov
lods
adc
lods
add
jmp
aas
mov
add
pop
enter
lock
mov
push
rcrl
add
cmpsb
mov
add
pop
sbb
js
jp
lods
mov
cmpsl
pop
fstpl
xor
push
sti
les
cmp
das
pop
test
cmp
out
cmpsb
dec
cld
sub
inc
mov
or
ficoms
out
push
jecxz
add
sti
repz
rep
sbb
repz
jmp
mov
cmp
or
add
jns
in
or
lret
dec
lods
popf
cmp
add
fstpl
mov
or
jmp
shll
jle
fsubrp
add
push
dec
push
pop
sub
adc
jecxz
sub
movsb
inc
call
fldcw
sub
add
out
xlat
xchg
stos
lahf
or
pop
in
pusha
add
out
xlat
test
mov
push
ret
jo
lock
imul
out
ffreep
jmp
fs
jmp
ja
jmp
sti
insb
add
stos
fsts
push
testb
repz
xchg
add
or
fs
jmp
je
add
stos
pop
add
sub
subl
test
add
jns
data16
jecxz
lcall
inc
dec
fistpll
jmp
pop
mov
mov
adc
addb
pop
or
add
repz
mov
pop
lret
inc
je
and
jmp
insl
cmp
or
mov
add
gs
mov
add
sbb
push
sbbl
call
push
inc
push
pop
jbe
das
jne
push
cmp
inc
jb
sbb
std
inc
dec
in
aas
das
hlt
inc
or
adcb
ret
dec
ja
and
rol
cld
scas
pop
inc
add
cmc
cld
loopne
js
mov
rorl
ja
pushl
jns
sti
mov
push
add
decl
add
ret
xor
add
jbe
cld
xor
jne
inc
cld
mov
adc
cmpb
fidivs
or
pop
pop
push
push
lret
mov
or
or
das
jbe
int3
sbb
mov
cs
adc
insl
outsb
mov
add
mov
popa
inc
cmpsl
sbb
ret
inc
sahf
dec
ja
fidivrl
pop
divl
inc
lods
popf
push
push
inc
je
rorb
in
fcomps
inc
cmp
push
and
mov
cmp
pop
movsl
clc
das
shlb
push
and
add
sub
push
pop
nop
dec
call
sbb
add
cmc
sahf
or
push
les
cli
push
add
push
add
add
scas
cld
cld
jmp
xchg
jb
jg
mov
sub
add
xlat
in
pop
inc
sbb
or
jb
xlat
mov
pop
leave
out
dec
add
sub
jne
mov
fiadds
ljmp
jnp
loop
outsl
xor
sub
testl
fdivrs
sbb
mov
add
or
lcall
cmp
std
cwtl
adc
ljmp
inc
adc
jge
inc
sbb
stos
mov
jle
mov
fwait
cld
jne
out
or
jg
loope
mov
out
clc
jnp
jmp
and
xlat
mov
jecxz
loope
std
mov
xor
and
addl
inc
push
std
mov
scas
push
ljmp
mov
out
push
aas
cld
sbb
shlb
xor
mov
jne
or
sub
or
add
jb
lret
jg
xchg
or
inc
cmpl
dec
nop
inc
sti
xchg
daa
cmp
inc
incl
das
inc
incl
xchg
ja
inc
lret
pop
sub
inc
incl
das
inc
decl
jnp
inc
lcall
mov
xchg
pop
nop
add
jmp
inc
lock
and
push
js
shrl
inc
pop
outsb
pop
lods
cmp
shlb
xchg
jmp
cmp
movsb
and
bound
aas
jo
inc
adc
add
fisubrs
add
test
sbb
repnz
or
cmc
mov
cmp
mov
mov
inc
or
stos
pop
jno
xor
add
pop
or
jmp
sub
adc
push
and
pushf
or
pop
sti
jbe
xlat
cld
jmp
add
add
add
out
mov
cld
jmp
pop
stos
call
sti
insb
mov
or
loope
in
push
out
mov
paddb
mov
push
out
and
clc
jo
push
sti
cld
mov
mov
std
je
das
xchg
das
jecxz
arpl
add
push
std
adc
add
jg
divl
outsb
cld
fpatan
fcoms
push
loop
jge
xchg
add
arpl
std
adc
pop
fwait
out
je
bound
imul
inc
add
pop
pop
in
cmpsl
rorl
push
and
fiadds
cld
in
jne
sbb
incl
push
push
pop
out
jne
sbb
fsubrl
push
mov
cmp
add
insl
cld
sbb
aam
sbb
cmp
cli
addb
outsl
push
mov
jae
fs
jp
pop
push
or
les
rolb
mov
cmp
mov
mov
xor
rorb
ret
inc
jae
imul
adc
popa
mov
loopne
lahf
push
add
outsl
inc
jle
sub
in
movl
add
and
and
idivl
xor
sbb
sbb
cmpsl
pop
das
gs
adc
stc
xor
das
fsubrp
cli
push
in
shl
out
cmpsb
fisttpll
mull
aad
leave
push
sbb
xchg
fdivrl
sub
add
addr16
adc
popf
aad
das
fsubrp
jae
inc
pop
fsubs
pop
std
push
sub
gs
scas
xlat
add
sub
mov
cmpsb
mov
mov
jmp
lret
arpl
jle
adc
sbb
or
fs
lds
call
fs
inc
jb
inc
jb
adc
jno
add
int
fidivrs
shlb
push
pop
fdivrl
inc
add
adc
call
inc
and
add
adc
xchg
inc
push
std
push
sub
xchg
xor
mov
jecxz
rcrl
pop
push
fistpl
jmp
rorl
data16
and
xor
push
xchg
inc
or
fistpll
add
cmpsl
lea
lea
dec
call
lods
ror
outsl
cmpxchg
add
push
sub
push
scas
sbb
pop
jo
mov
sbb
jae
xor
add
adc
push
cmp
add
xor
out
addr16
loopne
movsl
add
les
mov
add
repz
push
add
movsb
cmp
inc
pop
mov
inc
push
add
push
jno
lret
fstpl
jmp
cmp
inc
ss
aaa
mov
movsb
push
inc
movsl
sub
push
not
shll
mov
inc
cli
ds
xor
xchg
dec
stos
mov
sahf
cmp
addb
aaa
pop
in
cmp
push
mov
sub
mov
out
pop
fisubs
adc
add
test
aam
loopne
add
daa
shll
fwait
icebp
rol
lret
loope
sbb
push
aad
mov
or
mov
jmp
cmpsb
subb
add
in
cld
push
data16
and
sbb
in
mov
mov
push
cmp
sub
add
stos
mov
loop
popf
push
sahf
sub
sbb
cmp
add
fisttpl
aaa
outsl
push
sti
shrb
ss
out
pop
ljmp
fs
stc
loope
je
fnsave
test
rorb
xor
adc
xor
sbb
mov
call
aaa
or
movsl
mov
data16
add
hlt
push
or
daa
mov
neg
mov
jmp
notb
std
imul
sar
in
push
xchg
sub
es
or
pop
add
loopne
inc
jge
dec
loop
sbbl
and
dec
bound
add
jbe
push
movaps
pop
sti
push
leave
in
adc
fidivrl
add
push
xor
das
arpl
add
push
pop
and
std
adc
insl
adc
fstpl
dec
mov
pop
out
xor
cmp
inc
jecxz
fmul
pop
std
adc
popf
sbb
pop
lcall
inc
or
das
adc
adc
or
mov
dec
loopne
xor
inc
cmc
adc
add
das
ret
mov
add
das
arpl
movsb
mov
sub
inc
add
das
loopne
add
inc
adc
mov
call
ja
cmp
call
cld
mov
out
mov
lods
insb
cli
jae
or
out
call
inc
fisttpll
adcl
aad
ja
sti
lret
pushf
in
mov
movsb
das
add
mov
cmp
pop
addr16
das
mov
inc
sub
les
xlat
fdivs
shlb
daa
movsl
fwait
add
shr
in
adc
fs
cmp
lret
in
ss
xchg
add
sahf
pop
sbb
fcompl
scas
ret
push
aam
pop
sahf
jmp
adc
sub
fwait
xchg
ljmp
jmp
ljmp
mov
cmp
stc
lret
cld
data16
cmp
sub
pop
mov
push
push
bound
xchg
fimuls
enter
roll
ret
add
sub
je
lds
or
sti
jmp
fiadds
sbb
inc
sub
jmp
fsubp
ficoml
cld
ljmp
inc
mov
add
sti
jmp
daa
jnp
jmp
cwtl
push
lahf
jmp
push
or
mov
sbb
mov
shlb
push
fsubrl
popf
pop
arpl
push
fdivrl
dec
repnz
inc
inc
lea
add
push
andl
insl
jg
push
sub
adc
outsb
loop
sbb
faddl
add
pop
add
add
fildl
add
data16
cmp
xchg
fs
mov
ja
call
ds
xor
call
ror
push
loope
mov
int3
das
jle
inc
add
das
dec
movq
inc
add
das
sub
jg
inc
add
das
sub
imul
inc
mov
xor
scas
incb
add
inc
stos
cmp
test
rsm
xorl
mov
push
mov
pop
je
push
mov
pop
std
inc
sub
inc
jae
les
push
cs
incl
mov
add
das
mov
jmp
adc
xchg
ret
dec
sbb
sbb
mov
ret
leave
xor
add
roll
sahf
adc
sub
ss
add
mov
pusha
dec
mov
ljmp
xor
dec
add
fimuls
mov
enter
mov
dec
loope
mov
frstor
cwtl
dec
jmp
xchg
dec
out
add
mov
rclb
test
roll
add
dec
sti
jmp
sub
add
inc
or
aas
insl
add
sub
sub
dec
sti
jmp
sub
add
in
call
loope
adc
cltd
inc
mov
es
test
push
xchg
in
dec
add
imul
sub
or
out
out
nop
insb
add
sub
pop
inc
add
sub
mov
jne
mov
std
jne
fbstp
add
std
jne
or
ret
loopne
movsl
inc
loopne
cmpps
call
cmp
jmp
incl
xchg
xchg
cmp
stc
arpl
add
loopne
mov
dec
leave
push
or
sti
push
cmp
add
push
call
sbb
filds
movlps
decl
pop
pop
add
xor
addr16
jg
call
sti
push
add
lods
orb
popf
mov
test
and
xor
lea
add
sub
out
lods
xor
push
push
ljmp
sub
in
add
add
cld
mov
xor
call
xor
movsb
cmp
dec
xor
xor
mov
ss
inc
cmc
loop
das
fsubrp
add
fiaddl
fistpl
imul
push
test
lods
sbb
mov
ljmp
dec
adc
inc
shl
cltd
add
mov
mov
xor
jnp
pop
jge
jg
outsb
xor
mov
pusha
mov
rclb
xor
jmp
leave
sub
mov
jp
fisubrl
rcrb
mov
lret
sti
sub
rcrb
xlat
add
push
dec
sti
add
fiadds
jo
dec
aaa
scas
fmull
push
jge
xchg
push
jmp
jecxz
in
jb
xchg
push
pop
loope
pusha
add
sub
xchg
and
fnstenv
fidivs
mov
pop
jp
sub
mov
rolb
sub
add
insl
fnsave
js
bound
inc
and
cmp
or
xor
add
insl
or
mov
or
or
add
faddl
mov
dec
outsl
add
fsubr
push
push
xor
out
inc
loop
mov
repnz
mov
fildl
add
xor
push
loope
call
pop
pop
scas
push
ret
add
repz
cli
add
ret
jbe
xchg
cli
add
cmp
jno
aam
je
mov
incl
mov
xor
add
filds
adc
das
ret
xor
ret
sti
movsb
fldl
out
jl
inc
cmc
mov
jae
fwait
add
adcb
out
xor
incb
xor
mulb
inc
inc
push
ss
ljmp
insb
ret
mov
push
sar
and
inc
das
ret
dec
mov
dec
jae
add
cmpsl
ret
xor
xchg
inc
inc
pop
ss
ljmp
int3
sub
sbb
lcall
cltd
incb
jmp
sbb
adc
fucomp
add
lods
pop
fs
add
frstor
bound
aad
bnd
fldcw
xchg
inc
call
jecxz
add
fucomp
pop
sub
in
jle
xor
jle
in
into
shlb
sub
fwait
in
insl
subb
daa
inc
dec
pop
mov
loope
test
scas
sub
jmp
jmp
fsubp
fistpl
mov
dec
mov
jg
jmp
sub
sti
jl
pop
inc
push
addl
and
call
push
cmp
push
add
test
sti
jmp
sub
push
mov
fldl
ss
push
inc
sti
inc
sti
jmp
sub
jne
lahf
test
add
cld
jb
cmp
adcl
hlt
inc
inc
outsl
filds
stos
push
rorl
filds
jmp
hlt
aam
add
sub
push
out
inc
imull
pop
push
mov
mov
add
jmp
cmc
inc
mov
das
arpl
xchg
add
mov
push
mov
mov
outsb
pop
stc
ljmp
aas
or
sti
jmp
aas
imul
mov
inc
mov
inc
inc
mov
cmc
mov
dec
push
cltd
jae
incl
adc
inc
push
pop
pop
pop
aas
pushf
or
das
mov
loope
incl
jnp
sbb
aad
sub
sub
jo
xor
pushl
movsb
ja
das
xor
cld
mov
cmp
cmc
xor
stos
aaa
xchg
cmc
sbb
xorb
and
mov
jae
shl
ja
clc
add
cmpsb
xor
testl
cs
out
hlt
mov
pop
jne
negb
sbb
xor
fsts
inc
inc
sub
pop
sub
outsl
ficomps
or
pusha
jnp
fucomp
add
rclb
subb
inc
sub
repnz
test
dec
out
fucom
rcr
stos
pop
rcll
test
push
sbb
jmp
enter
stos
dec
mov
loop
cmp
xlat
pop
in
add
in
sbb
outsl
fiadds
pop
cld
push
clc
outsb
ficoms
aam
test
mov
adc
pop
cmpsl
cmc
inc
and
aas
cs
shrl
and
jmp
popf
les
mov
cmpsb
leave
fldt
and
fiadds
je
scas
push
sbb
nop
push
cmp
inc
lock
add
dec
sti
pop
sbbl
adc
and
insb
inc
cs
xor
shrl
sub
push
add
test
adc
jo
sti
sub
inc
push
les
js
sbb
cmp
mov
call
pop
cmc
je
add
adc
adc
pop
popf
outsb
adc
aad
mov
out
repnz
dec
dec
mov
pop
inc
sbb
and
adc
jo
and
sub
sbb
cmc
add
dec
jo
call
lret
sbb
xchg
lods
fsubr
ss
das
ss
pushl
push
movsl
mov
decl
ss
daa
repz
popa
mov
and
adc
and
adc
adc
int3
sub
xlat
shll
push
repz
add
mov
aaa
push
and
dec
sub
lret
adc
inc
das
mov
and
pop
add
add
mov
std
push
add
dec
ficomps
inc
leave
cmc
and
in
xchg
scas
and
mov
or
sub
inc
adc
aas
jb
cmpsl
push
or
gs
add
int
enter
enter
ljmp
cmpb
and
jmp
add
sbb
sahf
mov
out
jmp
xor
fucomp
js
mov
inc
loope
inc
add
out
fstl
fnsave
stc
mov
sub
loope
inc
out
fldl
cmp
ss
sub
test
fsubs
aas
jmp
lock
lods
fucomi
cmp
inc
mov
sub
lea
inc
imul
adc
das
sub
push
xchg
add
xlat
bound
test
push
add
loopne
cmp
sbb
mov
add
imul
add
in
sbb
sbb
add
cmp
fldl
cld
mov
ljmp
inc
loope
add
mov
push
mov
fs
cld
push
insb
or
loop
mov
add
push
add
adc
xchg
xchg
add
lcall
add
inc
jb
inc
jge
loopne
add
mov
push
cs
add
imul
cltd
pavgw
loope
mov
jmp
ret
das
shlb
pusha
and
sub
and
lret
shrl
lods
addr16
sahf
cltd
inc
das
pop
dec
jnp
add
inc
mov
js
xchg
fdivrl
dec
mov
pop
std
aas
rorl
inc
xchg
enter
nop
divb
out
test
popf
stos
xchg
addr16
sbb
cld
fisttpl
or
lods
add
das
and
or
lret
add
das
pop
xlat
push
loope
repnz
sbb
sub
and
test
mov
inc
lea
add
imul
in
dec
dec
mov
loope
in
push
or
xchg
sub
mov
outsb
int3
fs
cmpsl
mov
pop
aam
stos
call
gs
jecxz
movsb
push
dec
gs
in
movsb
pop
dec
gs
out
movsb
pop
dec
gs
jmp
dec
gs
jmp
mov
outsl
movb
shl
xchg
and
das
pop
nop
push
sub
out
into
movaps
in
rol
mov
jmp
aas
dec
ss
cmp
xchg
movsb
cmp
push
add
xor
icebp
adc
jmp
pusha
idivb
inc
stos
movsb
mov
cwtl
outsb
and
jg
sbb
xchg
fidivrs
shl
mov
jmp
ja
sub
gs
sbb
jmp
pusha
jbe
out
jge
inc
add
pop
call
sbb
cld
mov
in
or
frstor
out
dec
je
inc
add
andl
fsubrs
mov
add
jg
ds
dec
cli
imul
ljmp
lods
ljmp
pop
mov
cld
call
idiv
pop
es
mov
sub
adc
fsubr
or
das
ftst
jb
mov
or
cs
mov
inc
movsl
subb
imul
or
repnz
stc
sub
fdivrp
mov
and
out
aas
add
das
ret
xor
dec
sub
lds
sarb
pop
or
out
sub
in
or
addr16
adc
call
pop
xchg
loopne
ret
shld
jp
les
cmp
jmp
jle
aaa
jmp
add
fidivs
and
or
das
arpl
jo
sub
add
out
inc
bndstx
es
adc
xor
sahf
xor
adc
das
adc
fiadds
mov
pop
or
or
data16
or
pop
mov
repz
nop
cmp
lcall
mov
or
fiaddl
das
fcmovnbe
add
repnz
or
stos
add
cld
mov
jb
add
hlt
call
mov
xchg
sbb
mov
jno
sti
cmp
idivb
and
cmp
test
sub
or
lcall
roll
add
mov
cwtl
cld
in
stc
xchg
dec
movl
mov
xor
jo
add
adc
push
mov
ret
flds
push
daa
xlat
cmp
outsl
mov
add
decb
jg
ret
push
sub
call
add
jne
fmuls
pop
fs
negb
xor
ds
dec
xlat
call
ja,pt
jne
mov
jg
loope
incl
cli
cld
jne
fmuls
test
sti
mov
orb
mov
add
xor
and
mov
add
shrb
cld
cmp
das
adc
popf
shrb
decl
lods
sahf
jg
inc
adc
enter
push
mov
xlat
lods
sbb
jae
scas
rorl
add
cld
loop
mov
roll
testb
mov
sub
xchg
lods
mov
mov
jp
mov
test
pushl
dec
sti
add
enter
dec
mov
sbb
or
jp
xchg
lods
mov
xorl
inc
cmp
addb
dec
nop
sahf
lea
mov
inc
rorb
mov
das
and
add
lahf
jmp
add
add
jno
xchg
gs
pop
mov
mov
pushf
out
add
ficomps
xor
sub
add
lret
movsl
ljmp
push
pop
cmp
mov
int
inc
mov
mov
clc
pushf
pop
scas
sub
test
add
outsl
fistpll
call
iret
out
add
sub
add
ss
arpl
call
sub
xchg
fdivr
or
inc
repz
daa
push
sti
jne
lahf
aas
xor
sub
fistps
insb
xor
fsubrl
ret
adc
jmp
fdivl
mov
mov
cli
shrb
sub
adc
imul
cmpsb
jmp
testl
add
push
ds
inc
fcmovb
mov
pop
mov
add
popa
or
fistl
mov
cli
lcall
dec
call
add
jecxz
sbb
cld
cmpl
data16
rcll
sub
xchg
pop
pop
clc
xchg
adcl
xchg
incl
loop
dec
cld
adc
sti
sbb
imul
add
add
or
addl
sbb
mov
bound
das
mov
lea
add
sub
add
out
jae
add
pop
call
stc
mov
mov
mov
les
dec
sarl
test
incl
inc
test
sbb
inc
xchg
inc
mov
add
sub
outsl
daa
push
insl
call
sbb
mov
fcomip
aas
das
xor
push
stos
add
push
jl
ss
sbb
call
lods
push
cld
mov
arpl
push
out
ljmp
mov
shll
adc
lods
pshufw
adc
loop
popl
add
test
adc
add
add
adc
adc
xor
pop
cmp
imul
loopne
pop
int
fiadds
jmp
insb
lea
xor
cmp
sahf
data16
in
xlat
mov
mov
sub
pop
shl
gs
pop
imul
lahf
sti
aaa
cmpsl
repz
in
cs
mov
movsb
inc
sbb
push
ds
popw
sub
test
cmp
cli
insb
test
mov
xor
push
mov
arpl
mov
xor
cmp
test
mov
xor
ljmp
lea
lcall
push
push
mov
xchg
cli
ljmp
jecxz
mov
lods
rcrb
outsl
leave
xchg
add
jp
add
xchg
addr16
push
shrb
cmp
jb
xor
sar
xor
shll
rcl
mov
inc
xor
mov
xor
push
xchg
cwtl
cmp
cmovg
je
add
fimull
jb
mov
xchg
adc
xor
cmp
das
aaa
popf
jne
rcll
adc
dec
aaa
decl
stc
clc
sub
xor
inc
jnp
mov
dec
out
cmpsl
mov
popf
add
inc
inc
movsl
jbe
imul
scas
adc
inc
popa
adc
mov
dec
addb
push
adc
je
movb
insl
call
rolb
push
fsubs
push
push
sub
sbb
cmp
cmp
jp
ret
adc
mov
movsb
int
add
sub
jnp
sahf
jmp
ret
or
cmc
add
adc
sub
push
cs
add
fcoml
mov
icebp
in
outsl
fimuls
add
pop
and
mov
or
inc
sub
mov
add
adcw
sub
sub
and
adc
push
sub
add
aam
aam
sub
pusha
imul
cmc
jmp
mov
std
or
aas
inc
mov
push
scas
and
adc
pop
jmp
sub
data16
lea
pop
xor
mov
pop
pusha
ror
push
ret
pop
shrb
cmp
sti
cltd
inc
dec
cmpsb
daa
aas
pusha
shr
imul
mov
arpl
out
cld
cli
call
jle
pop
mov
and
dec
pop
jle
arpl
cld
push
jno
xchg
adc
loop
test
add
int3
cld
incl
push
cld
add
sti
mov
jecxz
rcr
cld
test
inc
pop
push
arpl
mov
sahf
push
mov
popa
movsl
rolb
sti
mov
xchg
fsubrs
or
sbb
js
sub
pop
imul
dec
cld
jne
pop
jle
xor
cld
push
das
pop
add
ljmp
out
lock
add
cld
das
fmuls
xorb
cld
inc
jae
call
adc
aaa
into
mov
mov
lret
jle
mov
movsb
inc
fcmovnbe
insb
aaa
into
fcomps
add
movsb
cmpsl
pop
popa
enter
jl
nop
outsb
aaa
scas
xchg
pop
push
mov
pushl
push
cwtl
pop
add
notb
add
idivb
rolb
cli
mov
cmp
das
fidivs
subb
xchg
loop
cld
cli
sbb
add
or
xchg
fucomp
add
xchg
or
inc
sub
andl
sbb
inc
sbb
pop
fisubrs
fwait
adc
or
jmp
ret
clc
pop
sub
pusha
mov
cltd
call
pusha
popl
add
daa
cld
scas
and
clc
jle
out
dec
or
mov
mov
test
add
in
shlb
or
out
cmpsb
mul
sahf
subb
rorb
add
sbb
xor
add
sbb
out
jg
lahf
and
sahf
add
iret
lcall
adc
add
loope
mov
push
dec
cmc
add
xchg
xchg
call
and
pop
enter
fmull
push
fmul
push
pusha
inc
jno
xchg
shrl
mov
dec
scas
xor
mov
add
rorb
add
mov
sbb
shll
andb
jg
mov
movsl
outsb
clc
push
pop
sub
repnz
inc
cs
clc
in
mov
mov
pop
sldt
aam
cli
call
add
xorb
add
sti
incl
movsl
dec
add
addr16
setb
sti
call
sarl
jb
popa
jbe
push
pop
testl
loope
mov
out
loope
aaa
jg
cmp
inc
lahf
mov
or
bound
inc
sbb
and
dec
fildl
mov
fcomip
or
mov
add
xchg
fsubr
ss
stos
lea
lock
sbb
int3
mov
jp,pt
aaa
adc
mov
dec
push
and
mov
dec
cmp
mov
mov
das
daa
jp
ret
arpl
movsbl
pop
jmp
jp
daa
fisubrs
xor
repz
rcr
in
add
popa
daa
punpcklwd
js
rcrl
pop
mov
mov
pop
sub
jo
jmp
shlb
add
fwait
cmc
add
xor
data16
and
test
icebp
test
add
jp
cmpsl
clc
adc
test
sbb
and
mov
add
add
mov
sub
test
jmp
shrl
add
movsb
sub
lea
fimuls
mov
xchg
pop
inc
adc
fsubp
ljmp
stc
icebp
addr16
xor
sub
aaa
movsb
inc
rolb
push
ficoml
sbb
ret
jmpw
xchg
loopne
loope
call
gs
rolb
mov
xchg
adc
cli
add
mov
std
jne
mov
sti
out
fdivr
decl
or
add
icebp
push
fisttps
xchg
inc
jg
andl
inc
or
fs
test
add
outsl
adc
icebp
jge
ret
sbb
push
fmull
jecxz
push
ljmp
lret
enter
add
std
decl
dec
add
das
adcb
loopne
xchg
fbld
add
jb
add
cmp
andl
sub
or
xor
das
aaa
movb
jp
sub
cmp
mov
and
jle
xor
jge
cs
push
outsb
repnz
pushl
cmp
outsb
aaa
out
ljmp
loop
cmp
xor
hlt
out
ss
or
bnd
fsubrp
add
pop
xchg
add
fimuls
add
and
add
popf
mov
add
pop
pop
sub
out
sbbl
lret
cwtl
push
jl
xchg
and
xorb
cmp
pop
sbb
jo
jmp
lods
mov
test
dec
push
and
sbb
insb
loop
mov
push
add
push
mov
adc
aam
ds
add
fdivl
xchg
call
gs
pcmpgtb
and
jb
pop
repnz
add
icebp
ja
and
push
sub
jmp
push
fidivs
and
sub
mov
inc
fwait
outsb
sti
add
sub
push
jb
ss
fs
push
xor
test
and
cltd
xor
movsb
out
xor
add
rcrl
test
xchg
pop
test
and
add
test
scas
cld
push
fildl
and
lds
fisttpl
push
mov
pop
push
pop
pop
mov
xchg
push
mov
jmp
fidivl
decl
out
pop
fidivl
testb
nop
sbb
roll
xor
mov
cli
mov
add
testb
jno
fcmovbe
cld
out
fildl
add
imul
repnz
call
addl
lcall
pop
adc
cmc
add
out
mov
lea
push
lea
push
push
js
mov
or
push
add
loopne
and
jns
mov
cmove
call
lods
xchg
or
dec
jp
xor
out
add
lret
mov
xchg
incb
dec
out
int3
or
addb
ljmp
hlt
sub
cmpl
push
jg
loop
sti
movsb
inc
out
cwtl
inc
or
pop
aas
loop
out
push
fadds
xlat
add
imul
add
ficomps
jecxz
test
sbb
nop
repz
clc
xchg
out
stc
outsb
loop
js
leave
lahf
push
jmp
add
or
sahf
jmp
jb
insb
inc
mov
daa
adc
in
pop
les
dec
xor
fcompl
out
mov
sbb
cmpsl
stos
or
rcrb
mov
inc
jo
andl
adc
inc
loop
inc
aaa
xchg
add
push
push
mov
add
add
push
aad
mov
movsl
xchg
outsl
popf
addr16
jae
add
lahf
cs
rcrb
sbb
add
add
imul
call
arpl
mov
lds
sub
call
out
jecxz
cs
dec
es
xchg
sub
data16
mov
mov
push
int3
incb
aas
cmp
je
push
cmpsb
cmp
and
outsl
pop
add
or
lea
call
decl
addl
xchg
clts
fisttps
cmp
xchg
mov
call
stc
shl
jge
pop
and
jnp
in
andl
push
jmp
cmpsb
inc
test
test
add
add
or
cli
incl
out
push
mov
out
add
mov
das
sub
ljmp
enter
int3
mov
aam
stos
push
cli
sti
mov
or
inc
mov
jnp
jg
das
cli
add
stc
add
out
and
das
xchg
addr16
cli
add
outsl
add
shll
out
mov
xchg
xlat
in
cli
mov
or
pop
or
das
fisubs
ja
lods
sbb
dec
sub
push
sbb
insb
dec
ja
dec
in
inc
sbb
mov
pop
ret
call
push
push
hlt
jg
cmp
test
adc
jmp
mov
add
mov
leave
xor
xacquire
jmp
add
xchg
std
sbb
out
push
aaa
std
les
call
stos
lret
call
sub
push
ret
and
jo
fwait
add
jmp
and
aaa
andl
les
jmp
sub
mov
pop
int3
jmp
push
pusha
inc
stc
add
scas
fnstenv
jmp
fsubl
gs
test
or
or
xchg
or
movsl
ljmp
push
push
mov
aad
test
xchg
imul
add
imul
test
push
iret
imul
add
fwait
add
mulb
mov
add
xchg
mov
call
call
mov
aad
inc
sbb
inc
in
inc
test
sub
inc
add
add
xor
xor
leave
out
je
push
loop
dec
mov
divl
dec
hlt
aad
push
call
lds
mov
gs
dec
mov
xor
jmp
idivl
add
jmp
mov
hlt
xchg
sbb
cli
fsub
je
cld
and
clc
mov
lea
dec
daa
ret
incb
addr16
jb
inc
jae
lock
stos
int
sub
sbb
mov
das
push
jecxz
dec
xor
pop
in
leave
in
add
push
mov
test
add
ud0
ljmp
dec
push
jmp
sub
movsb
imul
fistpl
pusha
inc
lahf
popa
inc
or
push
in
dec
fldenv
xor
xchg
sbb
loope
inc
and
cltd
jmp
aas
repnz
mov
jo
test
adc
loope
xchg
add
mov
imul
add
jmp
adc
outsl
pop
test
add
xchg
add
out
add
jp
jmp
jmp
add
jmp
test
mov
ret
fisttpll
dec
xchg
test
xor
fsubrp
sub
add
dec
adc
push
inc
pop
dec
jmp
lock
fldcw
lret
pop
scas
and
jmp
xchg
fimuls
into
stos
es
shll
jp
mov
xor
popa
mov
in
sti
popa
sahf
fiadds
jmp
popa
test
mov
idiv
es
mov
inc
test
lret
dec
std
incl
push
mov
push
adc
sbb
idiv
inc
stos
add
sub
jmp
xchg
fdivr
inc
adc
idiv
fistpl
pop
xchg
push
pop
shlb
shlb
fdivr
adc
mov
lea
sbb
add
jne
jge
call
or
pop
or
es
jge
add
nop
ljmp
mov
add
rclb
cwtl
mull
shrl
stc
adc
jle
out
mov
out
xor
lock
sti
mov
push
addb
fmul
cmpsb
das
add
repz
movsl
sti
xor
mov
or
inc
mov
sti
xor
adc
scas
add
push
scas
incb
add
push
scas
add
outsb
jno
adc
or
mov
dec
aam
adc
xor
gs
in
bound
jb
stos
push
cmc
sub
push
adcl
insl
add
fsubrp
dec
xor
je
das
fidivs
or
mov
sbb
and
inc
add
inc
add
ret
sti
add
dec
adc
mov
fucomip
subb
fisttpll
aaa
pop
mov
xor
push
sub
pop
lock
shl
mov
outsl
cs
add
add
xchg
nop
mov
dec
xchg
add
das
out
sub
jo
xor
and
sti
gs
in
fs
add
call
inc
add
xchg
fldl
jmp
cmpsl
pop
pop
push
pop
adc
jmp
xor
lea
sti
out
mov
insb
out
adc
fs
sti
jnp
add
cltd
loop
add
or
rorl
add
fcomi
adc
inc
adc
rcpps
idiv
test
or
add
xchg
and
sbb
lea
idiv
add
clc
or
adc
or
roll
add
jl
idiv
nop
or
rorl
je
fwait
add
sbb
cmp
jne
pop
inc
aam
cmp
clc
test
sbb
or
decl
sbb
cli
or
and
and
mov
xlat
xchg
test
mov
inc
es
mov
out
jmp
or
imul
jp
sbb
orb
mov
inc
hlt
cmc
mov
sarl
ret
sti
push
pop
cmp
dec
cs
adc
ret
jecxz
pop
cmp
jno
cmp
hlt
pop
push
popa
test
xor
addb
out
jecxz
cwtl
and
fiadds
add
cmp
push
push
scas
jmp
cmpb
roll
mov
lret
sub
pop
idiv
mov
or
mov
push
movsb
xchg
jge
and
iret
add
das
ficomps
xchg
in
mov
mov
xchg
fildll
stc
out
xchg
add
cmpsb
add
add
icebp
imul
mov
shrl
divl
and
add
add
dec
roll
inc
shl
test
jno
ret
or
test
scas
mov
mov
loope
and
aad
cli
dec
testb
sahf
or
insb
fadds
add
insb
aas
adc
lret
xchg
cmp
stc
pop
out
ret
in
lock
push
daa
pushf
xor
add
or
aaa
add
les
neg
pop
test
fimull
sub
or
bound
dec
sub
inc
cmpsb
popa
jge
fiadds
sub
add
clc
or
movsb
add
aam
add
push
ret
jne
rcrb
cmp
or
aaa
xchg
inc
rclb
mov
je
add
mov
arpl
je
js
cmp
cmp
pop
push
rorl
adc
cmc
aaa
incl
mov
adc
std
jnp
xor
icebp
sti
add
movsb
sbb
sti
cmp
add
cmc
pop
cmp
lret
jnp
iret
push
sti
push
cmc
dec
sti
sbb
push
inc
das
js
or
sbb
data16
jl
or
imul
outsl
aaa
mov
jo
xor
jno
add
shl
sti
pop
popf
jnp
pop
frstor
pop
ss
push
cmove
adc
mov
xor
test
das
push
xchg
fildl
add
cltd
test
dec
lcall
mov
xchg
in
ja
sub
loopne
mov
stos
out
aam
cltd
push
popa
scas
cmp
arpl
xor
pop
inc
loopne
or
adc
loop
outsl
mov
les
scas
push
popf
dec
or
jae
popa
dec
sub
inc
out
cli
cmc
push
in
test
add
lock
bound
es
mov
jmp
push
or
fisubrl
inc
add
jne
jge
mov
test
sbb
cmc
sub
out
je
lods
nop
cmp
ja
xchg
sbb
or
sti
jecxz
cmpsb
shll
aaa
mov
sub
out
jns
sti
jb
add
mov
mov
push
adc
icebp
dec
mov
sub
add
sub
add
cmpb
or
and
cli
popw
jge
inc
faddl
subb
xchg
jecxz
add
int
lea
loop
xchg
mov
dec
cmp
nop
cmc
test
pop
test
loop
add
das
jne
into
shr
add
mov
push
stc
je
dec
scas
cld
adc
jmp
mov
idiv
adc
sbb
add
pop
mov
dec
das
add
outsb
jl
xchg
clc
pop
stc
sub
adc
pushf
popa
mov
push
jp
je
add
stos
lcall
inc
mov
push
sbb
and
movsb
inc
or
add
or
enter
dec
push
pop
sbb
mov
clc
mov
js
aaa
stos
cmp
jo
cli
enter
push
jl
xchg
repz
lods
pop
add
mov
mov
decb
add
push
xchg
das
ret
dec
adc
pop
sbbl
fistps
xor
sub
fs
xor
scas
sub
jecxz
test
in
add
mov
pop
or
jmp
loope
das
push
jge
adc
insl
sub
mov
add
cltd
add
mov
jmp
jmp
push
shll
add
ffreep
stos
outsb
fmuls
cmp
push
pop
add
lods
pop
jno
pop
repz
test
adc
sahf
add
sbb
data16
stc
pop
inc
pop
sub
or
or
insl
mov
add
loope
or
or
mov
jl
je
and
sti
push
mov
call
pop
adc
shlb
mov
add
xor
mov
jns
or
add
pop
insb
aad
stc
aad
dec
mov
sbb
lea
push
push
add
pop
scas
mov
or
sahf
add
adc
sahf
test
xor
mov
orb
mov
push
mov
hlt
jp
bound
mov
in
push
insb
in
push
fwait
testl
dec
sbb
pushl
clc
addl
sbb
add
ljmp
or
hlt
mov
add
xorl
xchg
mov
cmp
push
outsl
adc
cmpl
das
loop
sub
imul
jmp
lods
incb
ljmp
jge
sub
push
lods
mov
dec
push
sub
cmp
inc
stc
andl
jns
mov
cmc
push
mov
xor
push
add
pop
pushf
out
sbb
push
lods
jns
add
jns
add
cmc
jnp
daa
mov
cmp
jg
je
fadd
clc
push
ror
hlt
call
les
clc
lods
in
add
push
or
nop
fisubrs
aaa
jl
data16
loop
int
jmp
inc
das
add
xrelease
cmp
je
push
ljmp
ljmp
add
cltd
leave
std
call
rsm
leave
sub
cmp
lods
adc
add
push
sub
dec
inc
jmp
mov
stc
sub
gs
das
fsubrp
out
add
jg
fdivl
cmp
fldl
sub
add
cmpsb
ds
push
sahf
push
xchg
adc
sub
in
cltd
adc
in
in
add
flds
add
mov
ljmp
sti
cld
cmp
inc
jmp
fsubr
call
pusha
fsubr
mov
sub
pop
push
add
add
fiaddl
xchg
sub
inc
cli
out
mov
cmp
je
call
pusha
outsl
or
sbb
xorl
dec
cmp
add
and
mov
and
addl
fisttpl
inc
repnz
incl
mov
add
or
xorl
xchg
notl
lea
adc
lods
sub
sub
push
mov
jne
mov
mov
sbb
or
push
fmull
sbb
clc
insl
or
add
or
xchg
call
sti
mov
cmc
add
fadd
cld
xchg
pop
adc
lahf
in
sarb
shrb
ja
das
cmc
ja
inc
push
inc
lock
mov
jbe
xchg
je
add
jae
add
cmc
ja
lods
jge
or
in
cmp
xor
add
cmc
repz
lock
shll
push
orb
mov
add
pop
data16
call
fmul
ja
pcmpeqb
or
dec
inc
push
jp
das
in
ljmp
mov
xchg
pop
in
pop
roll
into
pop
dec
aaa
push
sbb
pop
push
xor
pop
call
in
adc
in
push
pop
mov
fs
sbb
jb
xchg
repz
das
imulb
add
jne
pop
data16
push
out
ljmp
std
and
gs
fwait
sub
sub
out
fiadds
jmp
cld
add
arpl
outsl
ss
jnp
cli
je
fimuls
ljmp
int3
lods
call
jbe
out
mov
cli
mov
cmp
add
inc
mov
adc
add
mov
add
xchg
in
sub
jge
fstp
test
fisttpl
mov
push
add
xchg
sub
and
out
repnz
jb
jb
mov
ret
sbb
jmp
xor
test
lcall
loopne
or
and
add
clc
cmp
add
dec
in
cmp
mov
addl
cmpsl
cld
add
arpl
ret
push
mov
cmpsb
adc
testl
cmpsb
in
sbb
shl
call
rol
cmp
lahf
out
fmuls
mov
lock
idiv
adc
idiv
das
aam
sbb
push
sbb
pop
sub
inc
fwait
cli
or
push
xor
pop
fwait
cli
clc
add
xor
mov
cli
call
adc
fdivr
out
xchg
cmp
push
xlat
sti
lcall
or
sub
pop
loope
and
out
jecxz
loope
and
loope
loopne
faddl
movsb
pushf
insl
repnz
or
cmp
loope
pop
xor
cmc
add
icebp
pop
out
test
test
aaa
fisubrs
daa
pop
or
loopne
loop
pop
push
mov
adc
jmp
subb
jmp
inc
dec
shr
add
cltd
pop
loopne
mov
mov
sub
xor
mov
sub
push
inc
pushf
xchg
cli
mov
xchg
add
jmp
add
mov
dec
xchg
pop
push
adc
dec
imulb
add
pop
add
test
add
sub
inc
icebp
mov
fistpll
xchg
xor
jle
fisubrs
xor
or
or
mov
add
aas
bound
clc
outsb
or
jbe
jmp
add
stc
hlt
jae
jae
adc
mov
add
mov
out
sub
jmp
cmpps
sti
lcall
data16
sbb
lods
cld
in
frstor
mov
mov
loopne
sbb
mov
addl
mov
jbe
sbb
fwait
cmpsb
and
out
inc
and
lods
call
adcl
sarb
add
add
frstor
and
mov
adc
jmp
cmp
incb
lret
xor
mov
clc
xchg
xchg
sub
mov
inc
and
lods
push
push
shll
add
fistpll
clc
mov
push
add
and
ja
inc
aas
xor
cmpsl
clc
aas
das
fcoms
dec
sar
lahf
inc
inc
cli
fwait
sub
cli
and
inc
and
test
sbb
or
lods
pop
loopne
sub
ret
xchg
cli
shlb
pop
and
or
cmp
xchg
mov
pop
and
pop
and
dec
sbb
frstor
jle
or
fstl
add
vmulsd
cmc
cmp
push
push
daa
jle
lcall
lods
daa
push
push
setnp
ret
adc
rcll
mov
push
push
arpl
fwait
ss
pop
mul
lods
pop
int3
sub
arpl
fwait
xlat
inc
push
das
arpl
fildl
outsb
pop
push
xchg
movb
out
xchg
mov
shr
mov
push
add
mov
push
pop
clc
and
repz
push
and
mov
xor
xlat
jo
out
mov
inc
mov
jmp
pop
add
push
test
mov
push
and
aam
xchg
cmpsl
mov
cmp
jo
dec
cmp
add
outsb
lock
dec
sbb
lret
and
insb
fimuls
xor
cmp
xor
inc
push
pop
xor
push
add
add
cld
push
adc
cmc
frstor
test
jnp
sub
in
repz
repnz
aad
or
jne
sub
in
fsubrl
rcl
dec
adc
sbb
add
add
arpl
cmpl
jnp
adc
pop
push
addl
xchg
popa
je
cs
adc
sbb
fisubl
or
lret
call
test
out
jg
pop
test
jnp,pn
jne
inc
cmp
pop
mov
sub
fimull
ret
das
call
scas
or
comiss
or
lock
xor
mov
fsincos
movsb
cmp
call
xorb
add
pop
in
stc
decb
roll
pop
lods
repnz
clc
addb
jle
xchg
or
das
push
adc
push
push
or
mov
and
test
mov
push
fsubrp
add
cbtw
shrl
jecxz
xchg
roll
add
test
cmp
popf
in
push
pop
imull
adc
pop
xchg
lock
push
rol
xchg
daa
mov
push
xchg
mov
dec
fsubrl
repz
test
jmp
in
das
mov
push
sarb
push
xchg
sub
lret
das
fisubrs
dec
das
fidivrs
shll
or
add
jae
add
dec
cld
call
dec
rolb
mov
cld
call
adc
fidivrs
dec
mov
sbb
fldl
jmp
sbb
sub
lock
push
aad
cli
ss
jno
shrl
push
popa
movsb
test
jmp
sub
jp
sub
test
add
inc
das
add
xor
adc
clc
js
jb
push
test
stc
cmc
subl
mov
add
push
sahf
and
push
xchg
and
xchg
fcoms
scas
jae
mov
mov
cmc
incl
xchg
and
push
mov
mov
fisttpll
call
test
filds
add
in
incl
add
xor
lea
fisttpll
inc
repnz
adc
mov
lcall
jl
mov
jmp
jae
adc
inc
movl
int
adc
mov
or
lretw
jg
mov
test
xor
sub
std
mov
out
shll
mov
add
cmp
and
jns
and
mov
mov
mov
mov
mov
out
les
out
ret
sbb
jg
sbb
jmp
les
mov
sub
mov
es
leave
mov
add
fsubrp
add
inc
mov
movsb
or
test
inc
roll
std
xchg
or
fs
aaa
push
jae
test
jp
push
loop
mov
das
push
sub
push
outsb
mov
loop
cmp
fisubs
and
popa
add
fsubrp
mov
arpl
aaa
ret
sbb
mov
add
push
jmp
mov
faddl
cmp
jecxz
sub
add
push
sbb
mov
add
fisttpll
jg
fmull
ja
out
enter
or
fldl
jmp
sub
dec
loope
sbb
movsl
mov
add
sub
dec
outsl
mov
add
sub
pop
xor
add
shl
or
mov
gs
add
insb
push
adc
push
add
mov
jecxz
shlb
push
mov
push
inc
or
or
push
fiadds
cmovs
add
mov
push
fisubrs
stc
push
pop
inc
call
gs
xchg
testl
repz
enter
inc
xchg
movaps
loop
fdivrl
mov
sbb
add
push
insb
ljmp
in
out
mov
fs
add
in
std
mov
roll
out
int
pop
cmc
xorb
ss
sub
or
jb
add
dec
lds
cmp
neg
fcomip
jle
aas
notl
sub
mov
dec
mov
or
outsb
dec
decb
outsb
das
add
jge
add
out
repnz
ja
jg,pn
test
add
cli
cmpl
mov
sti
sbbb
jb
icebp
mov
mov
fbstp
mov
cmp
outsb
dec
daa
push
and
lods
ret
cmp
das
fidivrs
adc
in
and
mulb
push
add
add
add
pop
out
push
xor
push
mov
es
adc
inc
sbb
ljmp
sahf
jmp
mov
in
andl
inc
mov
adc
xlat
mov
fisttpll
in
jmp
jl
rolb
mov
in
aad
add
xchg
inc
and
in
mov
arpl
hlt
xchg
add
filds
movsb
repz
std
repnz
sbb
jp
xor
jae
fdivr
mov
icebp
xchg
mov
jne
in
mov
sbb
stos
lcall
push
ret
pop
xchg
leave
stos
fs
sub
rorl
pop
cli
out
add
sub
adc
add
nop
hlt
pop
inc
aam
and
xchg
pop
push
sub
adc
addl
inc
jmp
imul
or
push
xchg
ret
push
mov
mov
xor
sbb
mov
adc
mov
daa
push
or
push
dec
test
add
inc
daa
add
call
sbb
das
xchg
dec
sti
cmpsl
stc
jbe
cs
dec
sub
inc
or
sti
les
testl
scas
mov
add
test
shlb
lret
or
add
push
das
idiv
jle
cli
cs
inc
jecxz
sti
sbb
ret
or
cli
incb
add
sbb
cmp
outsb
dec
add
cmpsb
cld
mov
sti
push
je
add
sbb
data16
out
outsl
sbb
mov
xor
out
sti
test
push
and
testb
call
in
xor
repz
xchg
sbb
add
pop
adc
add
add
cmp
and
xchg
push
fisubrl
sbb
mov
pop
je
fcoms
push
scas
fdivl
xchg
int
out
cld
test
push
mov
fs
cli
adcb
in
lcall
jb
idiv
push
push
xchg
outsb
pop
dec
or
gs
push
bound
jb
mov
pop
sbb
test
sbb
std
std
add
cmp
sahf
pop
inc
jmp
jmp
sub
out
add
test
pop
iret
xchg
loop
cli
insb
insb
jno
jb
ret
aad
pop
sub
mov
push
popf
jecxz
fisubrl
stos
je
push
add
or
je
mov
sti
jae
int3
rcrb
dec
mov
add
add
loope
push
jmp
adc
popf
daa
divl
addr16
sti
push
adc
or
and
pop
sbb
mov
push
mov
data16
test
mov
xchg
add
jmp
je
mov
add
add
pop
idiv
insl
lret
popf
fsubl
cmp
mov
inc
fdivl
out
pop
push
or
mov
sti
push
ljmp
movsb
mov
movl
movsb
cmp
or
push
das
push
pop
mov
cli
clc
jg
test
dec
out
arpl
xrelease
repz
jg
call
mov
dec
push
stos
pop
dec
cmpsl
idivl
sub
leavew
sti
pop
aaa
es
add
das
fs
sub
gs
test
jl
cmp
ja
xor
ficoms
aaa
clc
nop
bound
in
imul
jne
enter
mov
out
std
movsl
mov
inc
mov
sub
ffree
jnp
mov
pop
mov
push
pop
jecxz
idivl
adc
add
das
fdivrp
mov
sbb
not
imul
leave
adc
into
repnz
aad
push
popa
call
repnz
cmp
push
add
xchg
xor
push
push
mov
stos
xchg
test
or
cli
fs
add
insb
sti
or
pushw
in
push
frstor
data16
or
or
push
rolb
loopne
popl
sub
xor
ret
cmp
cmp
adc
js
or
stos
clc
xor
imul
jae
inc
lahf
and
aad
out
xor
mov
and
in
pop
xchg
fstps
fpatan
mov
inc
mov
add
popa
inc
or
imul
faddl
in
inc
jge
push
push
xchg
cld
add
add
push
cmp
jne
popf
mov
dec
clc
add
bound
data16
jns
add
rolb
sbb
lock
cld
add
ss
lcall
jmp
gs
clc
lds
hlt
mov
mov
aaa
outsb
movsl
into
lcall
sub
inc
add
mov
mov
push
xor
fidivrl
sbbl
sub
ljmp
das
div
mov
outsb
inc
hlt
xchg
dec
add
idiv
cs
push
mov
sbb
ljmp
jl
hlt
inc
sbb
jae
jae
adc
sti
das
idivl
aaa
outsb
inc
hlt
stos
jns
sti
shl
cs
inc
add
add
fnsave
mov
or
mov
lret
mov
roll
cmp
loop
outsl
divb
adc
push
fs
fs
xor
pop
insb
ret
xor
cmpsl
jnp
jecxz
mov
mov
insb
pop
and
dec
or
popa
in
sbb
push
movsb
shrl
fildll
cmp
push
sbb
lods
iret
push
and
fcompl
add
js
mov
pop
je
ljmp
into
rcrl
testb
sidtl
je
push
xchg
add
add
cmpsb
jb
rcrl
shll
xchg
out
je
jb
ss
xlat
daa
test
cwtl
call
cli
and
not
add
xor
pop
clc
dec
ljmp
test
not
test
jmp
cli
mov
insb
ficoms
addr16
cli
hlt
xchg
into
inc
add
aad
cmovp
jge
rcll
adc
fimull
jne
mov
adc
jg
cmc
inc
and
xchg
cmpb
adc
jle
xchg
add
xchg
gs
fdivrl
aam
pop
mov
inc
loopne
lahf
fadd
mov
add
mov
push
inc
pushf
out
xor
push
push
add
mov
adc
out
add
shrl
dec
jge
cmpb
shlb
jnp
cmp
sti
and
dec
hlt
data16
out
pop
lock
push
sti
sbb
mov
add
leave
call
cld
loopne
push
push
rorb
mov
xor
jne
mov
push
roll
add
xor
or
shlb
inc
daa
mov
lea
lods
jecxz
or
sti
sbb
pop
hlt
repnz
adc
fisubs
xor
fimull
out
push
cmp
cmp
xchg
push
push
cmp
xor
sbb
daa
add
and
sti
sti
lock
loopne
xor
pop
test
cmpsl
adc
daa
xor
add
mov
shl
cmpb
fstl
fistpl
sahf
sub
and
inc
das
push
mov
fwait
in
mov
mov
add
xor
add
sbb
cmp
jne
in
in
inc
adc
sub
stc
je
xlat
adc
sbb
add
out
call
das
cli
xor
mov
add
cmp
sub
ret
inc
mov
ficoml
xchg
cmp
aaa
cmp
push
or
outsb
push
icebp
mov
lret
cmp
xor
mov
arpl
andl
call
cli
jmp
inc
push
add
fisubs
fwait
sub
mov
fdivrp
dec
popf
divb
cmp
adc
mov
push
add
lea
inc
hlt
into
adc
cmp
je
dec
cmp
je
xor
jne
popf
je
xor
add
add
sub
mov
xchg
push
leave
adc
inc
inc
arpl
jne
pop
sti
popf
inc
out
add
push
xor
push
popf
sbb
call
stos
pop
xor
sbb
inc
add
sub
insb
mov
add
std
pop
xor
outsl
js
push
fstcw
add
add
sub
mov
mov
cli
nop
dec
inc
or
add
sti
and
pop
push
insl
iret
icebp
sub
push
xchg
stos
push
je
outsl
mov
ret
lods
mov
inc
das
fprem1
mov
push
call
cli
and
or
test
sub
mov
sbb
add
cmpsl
add
gs
xor
xor
loop
push
mov
lock
cld
lds
cmp
jecxz
adc
daa
add
repnz
adc
fstpl
stos
iret
cmp
inc
pop
in
sbb
sub
mov
stos
in
daa
add
pop
loopne
sub
push
fdivrs
sbb
add
in
fstpl
into
xchg
or
loope
aaa
insl
fiadds
movsl
push
and
cmp
in
push
sbb
testl
jno
push
add
or
sbb
jae
ljmp
out
rcll
out
loop
fbstp
push
shrl
sub
push
bound
or
mov
test
dec
mov
jmp
in
fldl
jmp
or
push
ljmp
pop
sbb
pop
test
add
sbb
rolb
fisttps
cli
mov
outsl
mov
cltd
test
mov
mov
mov
xchg
fiaddl
jo
xor
and
or
cltd
adc
aad
add
ljmp
inc
mov
add
add
xor
pop
int
inc
pop
shll
insb
mov
bound
inc
push
gs
test
ja
push
adc
or
inc
cmp
rorl
or
cmp
jg
test
aas
xor
or
sub
clc
xchg
push
xchg
mov
mov
outsl
mov
xor
push
sti
add
pop
mov
mov
add
mov
or
sbb
push
sti
inc
mov
pop
pop
insl
lret
push
mov
scas
add
sub
mov
fidivrs
xor
lds
push
aad
fstpt
icebp
aam
daa
add
jmp
adc
stos
int3
hlt
push
pusha
xor
xor
rcrb
adc
cld
mov
add
cmp
mov
adc
fisubs
pop
fidivs
or
ljmp
aam
loopne
movl
movq
cli
fistpl
sahf
xchg
mov
in
icebp
ficoml
jg
daa
add
inc
out
sub
aad
adc
dec
add
adc
cmp
add
xor
test
fidivrs
add
mov
add
loope
test
jl
adc
cmp
add
fldl
jmp
sub
mov
fldl
jmp
push
fiadds
pop
pop
hlt
cmc
movsl
iret
sub
add
fiadds
cmpl
addr16
in
jmp
fs
pop
sbb
insl
imul
out
sti
into
cs
incl
add
lcall
dec
lret
fists
std
mov
filds
sarl
add
push
daa
je
pop
pop
test
cltd
xchg
notb
pop
dec
aaa
aas
addb
js
arpl
mov
add
push
cmp
push
push
fidivrs
or
sbb
cmp
inc
mov
jecxz
adc
mov
add
arpl
scas
sub
adc
notb
popf
cmp
sar
hlt
mov
mov
pushf
mov
call
fdivrs
add
les
adc
out
pop
dec
add
sub
mov
mov
in
mov
jg
call
mov
mov
add
or
sbb
aas
das
cmp
lret
sbb
dec
jmp
sbb
out
cmp
inc
push
out
push
add
mov
add
or
dec
ljmp
xor
cmp
sbb
ljmp
adc
jg
cmp
mov
das
imul
out
bound
inc
add
das
sarl
sub
inc
call
fbld
cs
into
adc
xor
or
sub
das
pop
mov
lret
pop
or
das
fsubp
dec
pop
rcll
iret
pop
fsubp
push
jl
add
leave
test
call
shrl
adc
pop
push
add
sub
sbb
aad
mov
sbb
cmp
add
cli
xchg
add
mov
cli
jle
sub
mov
mov
das
outsl
roll
imul
adc
outsl
lret
insl
shll
mov
loop
pop
gs
or
mov
ficoms
add
or
sub
ja
mov
fists
fiaddl
in
bound
or
inc
xchg
dec
add
push
orl
cmp
addl
call
jmp
cmp
cmc
mov
mov
xchg
inc
mov
push
fcomi
adc
mov
cli
incl
mov
and
rclb
xchg
fiaddl
inc
pop
mov
ljmp
push
xchg
cmpsl
pop
inc
lds
jmp
aad
add
cmp
or
add
js
jne,pt
hlt
jg
xor
addl
sarb
add
mov
inc
push
adc
mov
cmp
sub
xchg
roll
xorl
adc
mov
add
add
mov
add
lcall
inc
mov
jno
sti
dec
in
add
ficoms
sub
sub
add
das
repnz
add
fsubp
add
add
lds
fsubp
inc
sti
loop
xor
mov
mov
add
out
xor
jmp
sbb
fnsave
xchg
aaa
sub
add
insl
les
test
out
push
lds
repnz
arpl
sub
cmpsl
add
and
pop
js
in
push
mov
int
sbb
popa
rcll
loopne
xchg
rcr
test
xchg
ret
cld
frstor
pop
add
jb
icebp
xchg
and
inc
jmp
add
fcompl
add
loop
add
std
lea
inc
rol
pop
stos
out
in
push
in
dec
aaa
aam
stc
jb
push
jl
pusha
and
add
fiadds
jmp
jg
jmp
pusha
ja
ss
loopne
mov
loope
movsb
filds
push
aam
pop
and
xchg
add
fisttps
mov
add
cs
mov
jnp
orb
and
inc
cld
inc
push
rcrb
inc
bound
add
push
dec
inc
clc
inc
ljmp
int
testb
or
add
jl
jbe
jp
pop
filds
mov
dec
call
andl
add
cmp
or
mov
push
pop
sbb
add
inc
lds
add
enter
adc
push
xlat
out
arpl
sarb
jmp
mov
mov
repnz
shlb
call
mov
mov
outsl
rolb
int3
mov
add
mov
push
icebp
int3
push
sti
and
adc
das
inc
enter
jmp
jge
and
dec
sub
add
pop
pushf
mov
lods
pop
ss
push
movsl
stos
pusha
push
ret
and
jge
xor
mov
cmpsl
add
leave
loope
or
pop
pop
xor
inc
das
push
stos
out
popa
mov
lcall
jl
scas
adc
inc
fwait
add
pop
lock
fwait
adc
fnsave
push
out
insl
push
push
sub
add
adc
mov
fucomp
add
push
out
scas
pop
leave
aad
xor
add
fwait
adc
mov
add
ror
adc
jmp
sub
les
es
jmp
cmpb
adc
lahf
pop
mov
or
cli
mov
rcll
add
sti
out
stc
mov
mov
add
les
shll
xor
pusha
in
sbb
sbb
adc
push
pusha
pop
cli
aam
xlat
inc
jmp
arpl
repnz
xor
add
outsl
mov
sub
cltd
adc
rclb
fisttpll
lea
pop
push
adc
decl
push
or
movsb
aas
or
jnp
add
or
lcall
add
mov
sub
test
jne
fs
mov
sbb
mov
iret
arpl
jns
ds
lock
fcmovne
notl
add
jp
adc
or
jns
lods
inc
sbb
xor
jae
add
cmp
push
jmp
stos
jb
outsl
mov
clc
mov
subl
in
mov
sub
shrb
inc
hlt
mov
testb
js
add
fdivs
hlt
test
push
adc
mov
les
cmp
jne
cmp
sub
cld
jg
mov
mov
daa
ds
or
out
dec
testb
int
inc
das
ficoms
sbb
add
and
in
xor
push
add
cmpsl
push
in
cwtl
sub
cld
or
stos
mov
push
subb
subb
insl
lods
into
xor
xor
add
xchg
es
mov
mov
outsb
add
ficomps
js
add
jge
stc
xrelease
cmp
das
push
and
add
inc
cs
push
fs
adc
fldl
hlt
sub
add
sbb
jge
sub
orl
add
cli
or
and
movsl
insb
jo
push
jbe
jp
sub
pop
or
sbb
push
mov
xchg
enter
add
or
xchg
dec
or
sbb
jmp
rcr
jge
aam
ds
add
cld
enter
push
add
lea
sub
rcll
add
xchg
insb
add
sub
roll
lret
xor
dec
push
loop
push
ja
call
dec
dec
icebp
idivl
out
xorl
in
add
outsb
mov
decl
jmp
push
mov
mov
or
add
idiv
sbb
mov
push
addb
adc
movsb
adc
fisttps
call
cltd
push
xor
movsb
aas
idiv
fsubr
pop
xchg
fistpll
jg
aad
xor
fs
pop
das
std
push
imul
push
push
out
mov
pop
aam
dec
xchg
ss
lods
cs
dec
sub
daa
inc
add
das
call
mov
lea
push
xchg
sub
cld
fadds
add
das
mov
inc
lret
in
mov
lock
ljmp
sub
cmpsl
adc
mov
add
outsl
fs
lret
fisttpll
ffreep
cmc
push
sbb
roll
fidivrl
cmp
out
cltd
cmp
push
add
pop
push
and
pop
ffreep
cmc
aaa
sbb
sarb
test
lea
jbe
jge
lret
pop
test
out
je
jmp
jno
int
jbe
in
dec
cs
lods
pop
inc
out
add
push
and
stos
sahf
popf
call
pop
push
sbb
mov
xor
repnz
push
sub
fldl
add
xlat
sbb
imul
cli
nop
lock
sub
stos
pop
rorl
mov
or
lds
stc
sbb
push
inc
popf
ret
or
rclb
gs
test
add
mov
jmp
ja
shll
adc
mov
mov
cli
ret
sub
cli
test
fiadds
push
ret
xor
inc
popa
sti
mov
add
ja
test
aaa
cmovns
mov
lock
adc
inc
mov
ss
inc
mov
bound
xorl
test
js
push
inc
inc
shlb
pop
mov
notb
pop
cmp
push
inc
test
js
push
xchg
push
stc
lret
xchg
add
fcmovnu
add
arpl
mov
pop
xchg
jmp
mov
add
loope
push
sbb
js
jae
inc
int3
pop
add
cmp
sti
loop
cltd
addl
imul
or
mov
cs
mov
push
add
xor
movsb
test
sar
out
insl
test
das
mov
add
lret
scas
xor
ljmp
xor
clc
call
and
das
xor
je
ljmp
lock
stos
call
cld
fnstsw
jnp
mov
shlb
add
ficomps
les
movsl
xchg
movsl
mov
fstpl
mov
and
fwait
add
lret
xchg
call
test
inc
outsl
cld
mov
aam
loop
out
ds
dec
ljmp
adc
mov
pop
in
add
stc
cmpsb
das
xor
psubb
push
sbb
fsubp
call
js
shl
jge
sub
mov
add
cmpsl
push
xchg
xchg
mov
imul
add
sarb
add
jg
jmp
cmp
stc
push
fwait
es
xlat
mov
jmp
ss
jmp
bound
sub
jb
pop
add
sub
jg
sub
sub
call
dec
cmpsl
mov
orl
imul
mov
add
jmp
push
std
xor
mov
mov
mov
dec
lea
and
cmp
fdivrp
call
mov
pop
mov
lock
push
jne
cmpxchg
lret
push
add
jne
imul
xchg
aam
adcl
ds
adcb
and
adc
add
aad
add
xor
add
or
call
fstps
ds
rcll
and
cmp
jb
sub
push
mov
fsts
cmp
and
mov
add
sar
xor
add
outsl
mov
inc
sbb
ret
repnz
inc
add
add
mov
jg
lods
lret
push
aaa
call
lahf
sti
std
test
pop
aam
or
orl
add
inc
add
mov
and
out
cld
pushw
fstpl
push
xor
mov
mov
out
add
imull
push
out
daa
inc
push
mov
lock
fsubp
enter
ud2
fwait
cmpsl
add
adc
lret
add
add
imul
lcall
gs
inc
scas
mov
inc
fldcw
loopne
das
fsubp
lds
inc
mov
aaa
fsubp
popa
addr16
daa
add
pushf
pop
mov
dec
add
mov
icebp
sub
stc
in
xchg
ds
imul
out
mov
fldl
in
add
gs
repz
les
popf
in
pusha
adc
outsl
stc
add
inc
enter
add
clc
notb
xor
push
sub
je
je
jne
mov
push
jmp
in
fucomp
adc
push
cmp
pop
stos
push
popa
in
add
loop
fildl
inc
push
pop
jl
add
push
jmp
add
dec
popl
add
pop
jl
out
ret
faddl
jnp
call
test
adc
mov
pop
testb
faddl
test
add
rolb
lea
dec
mov
dec
faddl
jmp
dec
jns
ret
or
add
fdivrl
push
faddl
or
mov
add
adc
add
das
cli
hlt
outsb
sub
push
add
lock
in
out
std
add
popa
mov
rorb
or
jne
call
xor
add
mov
push
cmpsb
lods
bound
scas
cmpsl
adc
sahf
add
fcoms
xor
cwtl
cmp
das
push
cmpsb
pop
aam
incb
add
mov
jns
sti
jg
add
ja
stos
sbb
fwait
add
sub
cld
outsl
xor
call
add
or
or
scas
loope
add
out
mov
loop
add
sub
mov
push
lods
loope
add
inc
jmp
add
popa
sub
ficoml
daa
xor
das
nop
int3
lret
cmpsl
add
add
cmp
or
lock
enter
stos
popf
je
std
fsubrs
cmc
push
shl
test
daa
add
fwait
in
add
sbbl
notl
mov
fisubrl
sub
cli
hlt
nop
in
jmp
aam
cld
xchg
sub
inc
mov
stc
sbb
inc
mov
fiaddl
jmp
add
xor
add
mov
adc
mov
mov
add
lret
jl
je
mov
icebp
adc
ret
shrl
sti
fisubrs
fists
push
loop
add
loop
push
js
testb
loope
mov
lock
jne
arpl
into
sbb
add
add
dec
push
call
cmp
pop
pop
sbb
test
cmp
fidivrs
idiv
push
lcall
sbb
xchg
pop
adc
xchg
addl
inc
and
imul
iret
and
push
je
jns
aad
jns
or
sub
call
jno
mov
add
pop
jmp
rorb
jae
adc
icebp
hlt
cli
mov
jl
sbb
add
js
pop
out
sahf
add
rolb
xchg
jne
pop
jb
loopne
stos
or
xor
pop
mov
xor
rcrb
pop
push
les
das
push
mov
cld
dec
mov
je
jne
xor
or
push
repnz
add
das
sti
add
adcl
test
pop
inc
mov
push
cmp
xchg
frstor
aam
pop
mov
in
adc
cltd
and
sub
add
das
mov
in
sub
stos
add
cmc
jecxz
mov
pop
mov
sysexit
mov
and
call
add
dec
sub
add
loopne
sbb
setl
shll
clc
orb
test
or
xor
repnz
mov
stc
mov
jb
sub
mov
bound
add
pop
cmp
packsswb
cmp
sahf
and
stc
mov
cmpsl
sub
jge
iret
add
sub
je
add
mov
stc
data16
pop
inc
popa
push
or
sub
push
bound
or
hlt
mov
pop
stc
rcr
inc
jmp
enter
sub
roll
xchg
mov
iret
push
push
mov
iret
xor
inc
call
and
iret
lock
ret
add
push
xchg
rorb
mov
push
inc
hlt
push
addr16
cld
inc
arpl
iret
cld
mov
pusha
not
mov
add
dec
pop
cmc
cmp
flds
jmp
push
test
fiaddl
add
icebp
fnstcw
inc
flds
push
iret
hlt
mov
xlat
jg
cli
fnsave
lret
jbe
xor
add
cmp
aas
das
inc
mov
stc
jge
sti
lret
paddb
jo
popw
les
push
pop
jo
cli
sbb
cld
das
xchg
mov
and
adc
sub
add
lds
cli
push
sub
aas
das
cmp
clc
cmp
paddsb
frstor
adc
mov
mov
mov
add
jne
ret
and
out
das
arpl
mov
fcomps
mov
jne
les
popa
sub
scas
inc
sbb
xchg
xchg
sbb
aaa
scas
adc
aas
pop
sub
mov
push
xchg
xor
gs
fcompl
mov
jle
xchg
xor
adc
mov
pusha
test
adc
ret
aaa
fidivs
mov
call
shrl
std
and
mov
push
cmp
stc
cld
dec
lret
cmpsl
xchg
test
sbb
sub
aas
pop
or
imul
mov
push
mov
mov
jne
scas
mov
dec
cmp
std
rolb
enter
addr16
sub
data16
sbb
inc
jmp
nop
pop
in
jecxz
cli
pop
or
call
and
push
fwait
rcrl
test
std
xor
add
fs
test
stc
setns
sub
testb
sub
or
loop
inc
shl
push
call
add
mov
int3
mov
inc
push
adc
pop
and
mov
xor
and
arpl
pop
pop
test
les
js
dec
adc
push
repnz
push
dec
cmpsl
xchg
adc
stos
lret
roll
add
fldenv
push
lahf
popf
cltd
sti
jg
stos
pushw
sub
mov
mov
out
mov
incl
add
mov
sti
add
sub
adc
add
incl
cmpsb
div
add
mov
jns
inc
sbb
add
adc
mov
inc
sti
nop
enter
add
das
xor
scas
aas
cmc
add
aaa
lds
adc
adc
rcr
cmp
mov
add
fcoml
fbld
inc
sbb
add
fsubrp
leave
sbb
mov
fstpl
jecxz
pop
lods
xchg
fildll
rolb
mov
mov
pop
int3
cmp
cmc
or
and
das
fsubp
jl
lods
dec
jge
faddl
pop
fistps
push
and
daa
loopne
push
aam
add
ljmp
or
fidivs
stos
add
add
jmp
mov
add
sub
mov
daa
push
dec
sti
ds
into
push
pop
ljmp
push
add
adc
cmpsb
jmp
jb
mov
movsl
in
add
sub
ret
scas
sub
inc
xor
movsl
imul
test
push
mov
pop
push
jmp
inc
add
sub
inc
insl
cmp
pop
pop
xchg
call
pop
imul
push
popa
mov
adc
loop
xor
add
or
dec
idiv
jns
adc
mov
out
je
out
adc
jmp
add
lea
fmull
mov
inc
push
and
pop
inc
fldl
cmp
rcll
push
add
push
or
cmc
adc
iret
pop
pop
add
fnsave
pop
mov
push
shll
inc
int
push
leave
das
jne
add
mov
mov
jbe
cmp
xchg
pop
mov
sti
fsubrl
inc
or
leave
les
outsl
mov
sarb
cs
subb
add
push
mov
mov
mov
repnz
add
decl
out
inc
pop
inc
lds
mov
movsb
mov
cs
pusha
or
mov
jns
cmp
add
mov
shlb
add
das
jo
fstpt
cmc
add
mov
inc
add
sbb
loopne
bound
cs
mov
xor
xor
rorl
test
out
stos
sahf
aam
add
pop
cmpsl
cmp
pop
jmp
pop
inc
xor
xor
in
add
fsubp
pop
xor
sbb
xor
mov
cmpsl
insl
sub
add
mov
jge
fiadds
fcomps
clc
dec
scas
fsubp
add
sub
das
or
out
addr16
scas
shlb
std
cli
add
aad
add
cmp
dec
sub
mov
pop
addb
sub
or
jmp
jmp
jmp
push
inc
fcmovnb
icebp
test
fiadds
jmp
push
fiadds
jmp
xchg
cmpsl
xchg
repz
add
dec
sub
add
nop
dec
sub
add
rcl
pop
mov
test
add
sub
test
inc
loopne
add
je
xchg
imul
add
mov
add
or
shl
push
mov
inc
aad
loope
inc
icebp
or
icebp
cmc
adc
adc
and
mov
fs
lret
push
insb
fists
sbbl
inc
xchg
lret
and
jecxz
inc
add
mov
movsl
dec
push
cs
decb
dec
lea
mov
loopne
pop
mov
lds
dec
push
mov
jbe
or
cli
out
loope
xchg
dec
std
fsubs
sub
xor
inc
and
cld
add
mov
mov
cmc
xchg
add
cmpsb
fistl
ds
add
mov
add
push
in
lods
fisubrl
outsb
add
lods
aad
jge
pop
xor
in
fidivrs
in
je
movsb
dec
push
loope
cwtl
das
cs
mov
lret
das
cmp
mov
xor
inc
das
pop
test
sub
jne
pop
seto
fsubp
mov
ficoms
hlt
aad
in
add
das
ficomps
das
fucom
add
int3
jle
out
xor
add
pop
sub
xor
outsl
ret
mov
and
push
shrb
je
int3
mull
div
mov
pop
push
mov
add
and
icebp
ret
push
ret
and
aam
pop
outsb
call
out
add
stos
movsl
cli
out
add
cmpsl
je
cmpsl
enter
fiadds
gs
add
mov
and
faddl
lret
fisttpl
mov
insb
jae
and
fcoml
inc
jmp
adc
xor
stc
cld
in
leave
inc
jmp
repz
out
aad
inc
push
mov
push
fiadds
incl
add
incl
cmc
jne
push
adc
sub
add
and
stc
add
fimuls
sub
pop
ficompl
or
xor
adc
ficompl
cli
pushl
push
adc
ficompl
clc
cmovp
add
fiaddl
add
and
rolw
cltd
push
adc
add
jnp
add
das
xor
das
mov
inc
adc
or
dec
cmpb
out
mov
shrb
jl
das
mov
add
add
cli
fcmovnu
cli
mov
testl
sbb
add
mov
and
mov
call
pop
clc
dec
sbbb
cmp
add
daa
adc
mov
mov
pushw
adc
add
mov
cli
and
add
pushf
adc
sub
data16
fisubs
adc
push
movsb
fists
lahf
add
enter
das
push
lods
fisttps
xchg
fisttps
movsb
fists
mov
cmpsl
xor
iret
divl
lock
leave
daa
add
ljmp
hlt
int3
daa
add
add
ret
pusha
push
lea
mov
out
add
mov
addr16
dec
test
sar
sbb
lcall
mulb
sub
sbb
push
lods
addr16
ss
cmp
cmc
aas
add
and
je
mov
mov
test
add
cmp
adc
mov
add
jns
je
mov
or
hlt
jl
inc
jmp
mov
fldl
test
fsubrl
pusha
add
jb
stos
add
rcr
add
dec
push
je
and
call
insl
jmp
sbb
jmp
sub
jle
into
test
mov
cld
data16
mov
pop
cmp
stc
fcompl
adc
lods
cmp
test
mov
in
inc
lahf
sub
push
or
ja
push
cwtl
add
sub
rcl
xor
ret
stos
divl
and
or
jns
idiv
in
xchg
divl
arpl
arpl
mov
push
loop
pop
les
out
add
ror
xorl
or
call
jne
jge
push
add
in
adc
das
jg
sub
add
and
adc
push
out
push
sbbb
and
jmp
mov
push
std
cli
das
orl
or
movsl
xchg
lret
jle
outsl
adc
ss
ss
aas
das
xor
dec
inc
lods
clc
pop
pop
test
sti
or
jg
pop
cmc
jge
daa
inc
sbb
movl
addb
repnz
aas
add
das
sbb
cmp
xchg
cli
mov
imul
cmp
mov
dec
stc
cmp
mov
test
lock
sub
sbb
xchg
pcmpgtb
loopne
inc
lret
push
cmp
mov
in
xor
call
adc
mov
roll
pop
push
mov
addb
jp
pop
shlb
fwait
xor
and
testl
and
std
or
icebp
lret
sbb
add
into
pop
adc
pop
aaa
into
shrb
xchg
out
or
nop
xchg
inc
lods
vpsrlq
mov
sbb
je
mov
jecxz
loop
xchg
cli
add
je
lods
adc
xchg
lods
adc
testb
and
adc
stos
inc
ficoms
lahf
nop
add
jne
add
mulb
cmc
add
cli
insl
jae
sbb
cmp
fisubrl
xor
adc
aaa
xchg
je
inc
mov
loop
inc
xchg
push
mov
out
adc
loopne
mov
in
clc
loop
aad
add
std
xchg
or
arpl
test
lret
xor
mov
imul
sbb
ljmp
pop
je
push
xchg
add
sbb
adc
push
sbbb
fstl
repnz
add
cwtl
mov
je
dec
mov
testb
out
fisubrl
xadd
xorl
add
mov
sti
and
xorl
inc
pop
fcmovb
adc
xor
pxor
leave
cmp
notl
mov
call
mov
adc
xchg
add
pop
int
das
inc
es
sbb
rolb
sub
jbe
add
cld
jo
add
jb
pop
fidivrs
fdivl
mov
sbb
jbe
jle
popa
test
or
clc
pcmpgtw
or
jns
jg
bound
clc
cmp
stos
sub
aad
fcomps
test
pop
mov
and
xchg
ficomps
ret
push
fidivs
pop
loop
push
or
jmp
test
xchg
mov
mov
sub
and
cwtl
gs
xor
sub
imul
pusha
divl
out
add
add
jp
add
push
into
repnz
cld
stos
ds
xor
cs
sbb
push
test
jne
mov
jne
lods
aam
mov
pop
inc
loope
cltd
sti
cs
add
mov
sub
mov
xchg
leave
fs
and
fcoml
sbb
adc
aaa
ficoms
lahf
pop
in
sbb
xchg
jmp
gs
inc
int
lods
push
sbb
test
xchg
and
dec
mov
idiv
push
and
sbb
dec
lea
xor
dec
fs
pop
lahf
rorb
xchg
add
inc
add
and
in
pop
push
and
lea
add
cmp
or
inc
fimull
jmp
add
rcrb
add
addr16
add
mov
out
inc
ljmp
icebp
clc
pop
sbb
das
and
call
jg
loop
sbb
stos
das
xchg
inc
mov
imull
or
push
add
xchg
mov
push
call
outsb
flds
mov
mov
pop
pop
ljmp
push
jge
mov
testl
ljmp
xchg
adc
sbb
test
or
xchg
fisttpll
shll
and
mov
cmp
jle
mov
add
out
daa
add
sbb
jnp
and
pop
hlt
jp
xchg
cmp
add
ret
mov
xchg
jae
call
pop
stc
mov
jge
mov
in
out
test
aas
jmp
fucom
fldenv
in
fisubrl
xchg
xchg
in
invd
call
adc
frstor
cmp
leave
fcmovne
data16
add
sbb
roll
add
add
xchg
lods
mov
sub
add
sub
add
or
fiadds
fs
or
jb
xchg
ss
and
dec
loopne
mov
fdivrl
dec
es
test
and
leave
out
insl
test
iret
mov
data16
inc
cmpsl
sbb
cltd
add
movsl
aaa
add
in
shll
call
xchg
xchg
mov
mov
push
push
adcb
jp
jns
repnz
push
js
inc
add
scas
loop
jle
test
mov
pop
add
fimuls
sbb
add
fimuls
pop
inc
cld
pushl
loop
adc
fiaddl
add
add
push
repnz
or
loope
lea
add
ja
adc
sarb
into
push
scas
not
lds
or
test
cld
sbb
xchg
jmp
mov
scas
dec
jb
mov
rolb
in
ljmp
push
jg
addl
xchg
inc
jns
add
jg
add
fists
adc
adc
xchg
push
xorl
xchg
jb
clc
jns
sbb
pop
data16
push
jns
lods
ret
add
bnd
ljmp
ror
nop
sbb
xchg
out
cmpsl
add
mov
and
push
jle
sub
addr16
push
push
push
dec
and
pop
shrb
mov
fs
mov
pop
fsubrs
in
jo
fcomps
icebp
sub
fucom
add
jnp
cmpsl
pop
jae
sbb
ds
nop
mov
ret
andb
cmpsl
sbb
jbe
dec
fld
push
fiadds
lods
clc
pop
xor
add
cmp
add
movsl
sbb
mov
sbb
mov
adc
leave
sbb
cmp
jecxz
mov
dec
inc
imull
or
sbb
or
fistpll
sub
or
in
sbb
mov
and
pextrw
or
xorl
or
pop
mov
loope
add
xchg
sti
dec
movsl
sbb
add
repnz
adc
cli
push
ret
mov
mov
sub
push
xor
inc
inc
dec
add
aad
cmp
mov
rcrl
lock
add
adc
or
sbb
nop
mov
fiadds
fisubrs
aam
cmp
add
xor
add
bound
add
out
fiadds
jae
rorl
aam
mov
xlat
inc
das
test
adc
add
cmp
adc
addl
aas
das
xchg
cli
and
cmovo
pop
lahf
add
popa
cmpsb
ds
out
fs
mov
std
cli
inc
and
inc
das
and
popa
mov
pop
push
in
lret
lods
mov
add
add
call
ficoml
outsl
ja
xlat
cmpsb
mov
jmp
cld
ss
sub
jbe
call
insl
sar
ret
and
sub
cmc
out
push
call
out
pop
pop
insb
pop
mov
xor
add
mov
les
inc
repz
inc
mov
add
call
or
cmpsb
and
xchg
insl
les
pop
sub
sbb
lret
sbb
lock
add
adc
cwtl
imul
mov
in
and
daa
movsl
sub
pop
shl
das
push
sub
pop
push
sbb
pop
push
add
inc
out
test
imul
fisubrs
gs
add
inc
call
cmp
out
lret
out
fisttps
pop
repz
jge
push
xchg
dec
ljmp
popf
icebp
pusha
clc
in
mov
sub
mov
fisubrs
push
or
fiadds
jmp
sub
add
sub
cmpsb
jmp
pop
flds
pop
sub
add
add
loop
add
arpl
push
mov
dec
push
mov
inc
and
mov
adc
lret
push
push
test
fiadds
add
pop
mov
ret
inc
fisttps
add
scas
notl
fwait
push
xor
sbb
insb
or
pop
push
push
push
and
push
mov
loop
rolb
sbb
cmp
xchg
sub
das
mov
aaa
ret
add
xchg
inc
dec
inc
push
addb
cmp
and
js
or
and
jo
inc
inc
adc
sar
pop
roll
or
enter
jo
inc
or
mov
adc
and
aad
jae
push
push
adc
outsl
ja
sarb
inc
push
out
jne
sub
push
enter
sub
mov
enter
icebp
jge
ret
insb
ret
arpl
idivl
faddp
mov
sub
leave
das
mov
xor
lods
daa
pop
pop
fsubl
and
loop
incb
or
das
push
movsl
sti
mov
or
cmpsb
mov
inc
adc
pop
add
push
cmc
data16
push
sub
and
data16
test
xchg
push
sub
push
dec
gs
mov
jae
repz
ret
mov
pop
jge
ret
jae
add
jmp
cli
jmp
push
popa
dec
lds
inc
lds
jo
mov
or
repz
jge
sbb
cli
jmp
mov
dec
rep
mov
bnd
leave
stc
ss
mov
inc
pop
sbb
sub
test
jo
inc
jmp
xchg
out
mov
pop
add
sub
test
sub
add
sbb
out
test
jmp
jne
cmc
cmp
lea
testl
fndisi(8087
or
jmp
test
add
push
loop
test
fildl
add
sbb
xor
inc
and
lcall
pushf
add
adc
scas
addl
shll
adc
stc
adc
cmpl
stos
mov
das
test
test
addl
bound
pop
inc
and
and
subl
jae
mov
xlat
orb
inc
xor
test
das
sub
jl
movq
leave
and
in
iret
lods
cmp
xchg
cmp
sbb
xchg
in
imul
sti
das
jne
ss
bnd
ss
cmp
dec
out
movsl
sti
js
popa
cmpsb
inc
and
and
repz
or
or
dec
push
and
mov
and
inc
test
stc
xor
inc
je
aad
and
add
repz
mov
std
test
or
adc
fbstp
dec
mov
mov
js
leave
mov
addr16
sbb
aas
shr
add
or
in
adc
outsb
add
fisubl
sub
xor
mov
out
dec
mov
scas
out
imul
mov
idivl
mov
incb
testl
test
insb
xor
sbb
inc
or
sub
mov
call
dec
pop
arpl
push
and
jne
dec
push
jge
inc
jbe
and
test
paddsw
and
pmaxsw
mov
add
add
or
outsl
rcrb
pusha
push
jge
and
pop
or
push
mov
pushf
adc
aas
les
aaa
sub
sarl
das
ficoms
xlat
add
cltd
add
addr16
add
push
fistpll
adc
inc
test
sbb
mov
jmp
adc
pop
shll
mov
inc
stos
sldt
mov
adc
rcrb
jns
xchg
pushl
iret
mov
xchg
add
add
xchg
adc
mov
cmp
sbb
es
ds
push
daa
xchg
clc
mov
aaa
xchg
add
call
sti
mov
int
jb
into
mov
jne
jg
xor
incl
add
add
adc
mov
pop
push
rolb
inc
fisttpl
mov
mov
lea
std
shlb
jecxz
mov
sub
and
mov
mov
enter
lret
mull
scas
add
add
jne
push
fsub
inc
das
test
enter
jmp
das
outsl
or
call
mov
add
jecxz
sahf
insl
call
fwait
mov
mov
pop
inc
aas
push
push
cmp
stos
fsubp
add
cltd
and
daa
fidivl
loopne
sub
outsl
push
and
imul
lds
call
add
fimuls
jl
cs
mov
ret
add
pop
les
fsubp
roll
add
jne
test
fisubs
and
test
das
fisubrs
imul
add
jnp
inc
int
push
inc
vandnps
inc
push
inc
lds
inc
int
push
inc
lds
int
popf
inc
lds
stos
lea
sub
cli
jmp
daa
cld
test
push
dec
and
rcr
stc
scas
or
and
popf
add
and
add
fadd
mov
jmp
hlt
fldl
jmp
pop
test
jb
enter
pop
inc
add
fldt
xor
lods
notl
pop
shll
and
xchg
notl
popf
sahf
push
adc
push
sbb
fiaddl
add
lea
dec
lea
add
mov
push
push
mov
push
orl
insb
add
scas
addl
or
lea
dec
push
ds
lea
stos
notl
pop
shll
jnp
and
inc
and
lods
daa
mov
aaa
inc
repz
mov
sbb
mov
jg
cmp
js
push
gs
cli
cmp
das
cld
mov
dec
or
xchg
push
xchg
arpl
hlt
shlb
jae
inc
or
sbb
stos
ds
enter
pop
popf
add
das
jne
je
xchg
push
pop
in
mov
xchg
push
xchg
shll
jne
inc
das
insl
out
addb
rolb
jns
dec
fimuls
jns
push
mov
aas
sub
fs
mov
fcmovbe
leave
or
xlat
fs
sub
int3
daa
subb
cmp
ret
das
fsubp
jbe
ret
cmp
add
sub
fildl
sub
mov
shll
sbb
stos
cltd
pop
add
jge
xlat
test
jl
js
arpl
and
push
call
cld
das
push
sub
add
mov
test
add
mulb
and
negb
icebp
and
loope
or
mov
std
and
das
inc
out
pop
js
add
and
inc
out
out
scas
sbb
lds
jl
cltd
xchg
nop
xchg
sbb
lds
mov
adc
pop
fbstp
pop
test
sti
mov
or
arpl
push
in
adc
jmp
pop
mov
faddl
push
cli
xor
mov
add
loopne
lcall
add
loope
adc
iret
cmpsb
testb
cmpsb
negb
sub
in
xchg
icebp
push
lcall
dec
adc
loopne
add
ljmp
push
add
xchg
movsl
ficoml
mov
loope
add
adc
loop
and
adcl
cli
stos
pop
adc
shlw
cli
cmp
aas
das
mov
out
aaa
ds
addl
or
test
sti
sbb
push
add
cmp
jg
jmp
xchg
test
add
lret
jg
je
and
mov
mov
mov
jno
jl
mov
lock
test
daa
inc
adc
cmc
insl
lret
pop
pop
movsb
adc
movl
das
xor
pop
outsl
frstor
movsl
pop
test
hlt
sbb
inc
out
xchg
sti
shr
out
jb
dec
out
add
add
adc
sahf
addr16
pop
sub
mov
out
jmp
jecxz
frstor
dec
sub
out
jmp
popa
adc
sub
shl
out
mov
outsl
shrb
loop
stos
push
call
mov
add
pusha
aas
imul
call
sub
fildll
add
loopne
pop
inc
xor
punpcklwd
inc
add
jmp
mov
sti
mov
pop
mov
call
bound
fnstsw
sub
hlt
mov
inc
jmp
xor
jmp
sub
jmp
gs
repnz
call
jg
out
mov
fwait
out
adc
out
cli
and
add
push
into
ret
adc
cmp
test
xchg
and
imul
jp
inc
and
arpl
add
imul
test
jo
faddl
push
adc
mov
adc
test
clc
fnstsw
push
jmp
into
fildl
pop
into
mov
in
xlat
orl
mov
incb
xor
mov
mov
sbb
ret
call
jle
add
push
jno
das
test
out
scas
pop
sti
pop
mov
add
fsubrs
jmp
push
mov
sub
out
incl
inc
add
mov
imul
mov
pop
add
clc
push
add
cld
daa
sbb
xchg
sbbb
sbb
ret
insl
shr
js
roll
pop
addr16
or
add
add
pop
das
push
aas
push
movsb
jne
jp
test
adc
outsb
sub
sbb
xlat
sbb
les
or
ret
pop
arpl
pop
add
cmpsb
or
or
dec
out
mov
sub
add
mov
repz
bound
in
loope
sbb
jbe
sbb
in
insb
in
pop
dec
push
in
push
pop
xor
lahf
inc
sub
cltd
mov
xchg
enter
xlat
cs
xchg
mov
adc
or
push
or
das
fiadds
add
js
xor
push
je
jmp
add
cmpsb
cmpb
and
add
add
cli
lret
insb
jne
lods
cmp
in
cmp
cmpsl
sbb
pusha
jb
mov
fiadds
jmp
repz
jmp
add
jmp
roll
dec
adc
fimuls
dec
mov
cli
jmp
imul
sldt
cmp
shl
or
xchg
mov
add
addb
mov
mov
mov
addl
leave
sbb
adc
call
push
mov
add
add
sbb
push
cmp
add
dec
push
sub
adc
aad
or
push
popa
xor
add
add
sub
pop
addb
add
dec
sbb
mov
cpuid
sti
dec
add
test
add
mov
roll
add
fsubrs
test
dec
stos
or
das
test
sbb
test
jg
cs
dec
movsb
pusha
data16
test
cli
mov
add
adc
dec
mov
test
ljmp
test
and
out
mov
outsb
inc
pop
mov
push
inc
out
jge
mov
mov
lcall
pushf
popf
out
mov
int
out
test
in
or
fidivs
leave
fsub
add
data16
add
daa
or
xchg
fnstenv
out
inc
adc
hlt
mov
pop
test
cld
mov
and
ret
pusha
gs
das
fsubp
in
and
test
fsubp
mov
pop
and
ficoms
add
fiadds
mov
push
mov
fiadds
jmp
outsl
push
je
pusha
add
sub
mov
daa
filds
jmp
add
ja
and
xchg
filds
jmp
sub
data16
mov
mov
pop
mov
call
mov
or
jmp
sub
push
insb
ret
jbe
call
in
jmp
jb
mov
jle
fiadds
add
test
add
push
jp
adc
add
scas
jns
add
sbb
mov
xchg
push
stos
adc
faddl
push
pop
leave
ljmp
cmp
leave
fs
xlat
faddl
pop
clc
bound
into
faddl
pop
test
add
push
sub
flds
add
or
add
inc
addr16
test
imul
mov
cmc
call
xchg
push
add
adcl
dec
or
pop
stc
jmp
add
ret
les
push
in
stos
jg
incl
xchg
call
mov
loope
daa
test
add
push
mov
data16
adcb
insl
cwtl
ljmp
or
sti
push
in
pusha
pop
insl
jns
xchg
loopne
dec
add
mov
xor
pop
mov
lods
dec
add
imul
adc
adc
pusha
in
adc
adc
push
out
mov
outsl
cld
xchg
out
iret
dec
lret
int
out
jg
std
push
push
call
mov
sub
lahf
fcompl
adc
xor
arpl
xchg
xchg
cs
imul
xchg
incl
and
mov
lret
xchg
jmp
mov
add
fwait
adc
stos
loope
sbb
outsb
cld
cld
jmp
add
inc
stc
cmc
xor
mov
fldl
jmp
dec
scas
add
mov
add
sub
in
fistps
outsb
fiaddl
fldt
jb
roll
pop
mov
sub
add
add
dec
mov
aas
xchg
ss
mov
push
cmp
and
jle
cli
cld
cmp
inc
jmp
mov
xor
in
jne
scas
adc
push
sbb
or
subb
pop
jno
bound
sbb
mov
or
adc
inc
lds
jmp
das
dec
lcall
push
push
loope
push
push
jno
add
add
sti
in
cmovo
mov
adc
loope
or
enter
imul
mov
and
push
mov
push
inc
adc
xchg
xor
adc
out
cmc
jmp
in
clc
test
xor
or
inc
cmp
adc
lock
jne
std
xchg
or
lods
dec
jne
or
out
jmp
sti
add
adc
flds
dec
add
rclb
and
inc
je
in
xchg
inc
scas
pop
xorb
jg
xchg
andl
mov
addl
andl
mov
daa
inc
inc
inc
fbstp
ljmp
scas
jmp
jnp
inc
lea
das
jne
sarb
jnp
mov
cmp
sti
add
loop
sbb
mov
ja
jg
insl
popa
enter
shrb
push
add
shlb
add
mov
push
mov
push
call
inc
mov
push
sub
loope
add
sub
add
dec
test
sbb
add
or
fcoml
pop
in
clc
add
jmp
push
add
xor
pop
push
les
mov
sahf
cmp
push
mov
add
and
loope
or
sub
subl
xchg
jmp
repz
inc
sahf
pop
stos
cwtl
arpl
sbb
push
push
jne
sti
push
mov
cs
cmp
mov
fistpll
loope
sbb
addr16
loop
add
add
push
jno
jae
test
pop
enter
add
adc
in
call
arpl
out
xor
add
divb
cs
pop
iret
and
push
inc
daa
test
and
add
mov
clc
push
inc
or
je
or
je
test
nop
add
add
add
jns
test
jle
imul
jmp
jmp
mov
addr16
fldl
add
sbb
inc
jg
negb
cmp
push
rcl
xor
mov
jge
jmp
jnp
es
sbb
sbb
scas
cli
sbb
adc
lods
cmp
test
std
cli
ljmp
pop
add
sub
sub
push
jbe
or
add
pusha
push
cld
or
jge
mov
jne
sub
loop
cmpsl
roll
inc
mov
jle
loope
cli
lcall
ljmp
push
cli
push
mov
pop
sub
xchg
stos
push
out
or
popa
push
ja
mov
sub
mov
cmp
rorl
add
data16
xor
daa
cld
jne
dec
xchg
addr16
mov
jecxz
outsl
jae
adc
cmp
aaa
push
sbb
xor
or
icebp
out
outsl
fwait
iret
inc
sarb
jns
out
jne
movsl
add
addr16
pop
mov
mov
add
test
int3
sti
pop
push
xchg
daa
daa
fiaddl
mov
add
out
aad
rcr
callw
loop
jmp
adc
out
stc
jp
icebp
jmp
fdivrp
xor
repz
mov
popa
rcr
push
add
sub
inc
in
mov
pusha
jo
mov
movsl
pop
in
push
xchg
jle
mov
jno
mov
call
mov
loopne
rclb
add
repnz
sbb
adc
test
sbb
jb
imul
decl
call
pop
sbb
and
mov
push
sub
inc
cmc
adc
add
push
cmpb
inc
hlt
add
lcall
sub
xchg
clc
incl
add
loopne
pop
and
inc
cld
lret
and
pop
loope
call
insl
test
jl
add
in
mov
add
mov
lcall
das
int3
dec
test
dec
add
out
iret
sbb
imulb
push
mov
jne
test
add
popa
jnp
rcll
ljmp
and
dec
sub
dec
add
and
mov
fcomps
add
stos
jns
lods
pop
lds
leave
inc
call
movsb
mov
gs
call
fldcw
scas
xchg
add
std
inc
sti
cmpsb
xor
xchg
or
add
mov
icebp
aaa
fsubp
push
mov
mov
inc
sub
jmp
jle
or
sub
daa
or
fimuls
xor
out
push
mov
ljmp
js
ret
and
sbb
or
ret
js
lods
imull
push
sbb
dec
push
pop
addb
jmp
hlt
not
fnstenv
push
insl
movb
je
cmpsl
add
arpl
cli
mov
cmpsb
cmp
aam
movsb
clc
bound
into
push
ds
outsb
sbb
call
sub
pop
xchg
mov
mov
adc
mov
roll
bound
call
push
arpl
push
jmp
shll
inc
cmc
popa
shll
loope
and
cmp
enter
bound
inc
pushf
inc
jbe
xlat
mov
pop
add
stos
add
and
or
aad
fsubl
add
add
addb
push
leave
push
cli
push
rorb
pop
jecxz
loop
addl
sbb
rcll
dec
out
sub
sbb
imul
lret
rolb
orl
push
addr16
imul
orb
in
sub
add
push
fstpt
jge
lret
inc
loop
or
and
pop
lret
das
out
add
pop
jno
inc
jp
lea
scas
lods
cli
inc
sub
aas
das
hlt
cmp
mov
or
xor
cli
jnp
repz
mov
enter
aas
pop
pop
xor
sbb
sar
and
mov
je
imul
add
pusha
mov
test
rep
aaa
or
fsubrl
add
mov
push
repz
or
xor
sbb
and
xor
or
out
enterw
cmc
xor
cmpsb
mov
test
lret
bnd
add
adc
fwait
lcall
xchg
iret
push
test
adc
pop
lock
cs
fwait
rcr
jmp
jnp
shlb
pop
push
xchg
sub
mov
inc
movsb
push
and
js
jb
ds
pop
ret
fstps
and
sub
pop
aad
push
push
call
inc
aaa
fidivrs
dec
pop
jl
cs
lods
fstl
incl
add
sub
outsb
jmp
jmp
add
xchg
pop
or
add
push
inc
jmp
test
ja
or
imul
test
fidivrs
gs
ljmp
push
cli
cltd
xor
pop
cli
insl
repz
cmpsb
sub
fiadds
jmp
inc
jmp
sub
mov
cli
cmpsb
sub
add
movsb
jmp
aaa
add
add
add
sub
adc
pop
lcall
rcrb
push
jmp
and
orb
inc
jp
xchg
inc
push
loop
out
pop
loop
lea
sbb
add
mov
cmpb
sub
push
add
aad
mov
adc
push
in
ficoms
add
mov
test
dec
push
jnp
add
jb
cmp
xchg
add
mov
mov
cli
pop
das
scas
dec
loopne
inc
inc
and
sti
inc
fsubrl
cli
sbb
ljmp
lahf
call
jge
loop
and
fmull
imul
dec
mov
imulb
lret
sub
cmp
add
lret
sub
mov
xchg
sub
stos
or
push
ljmp
sbb
pop
add
jg
inc
test
jmp
ficomps
pop
int
or
fdiv
std
adc
mov
add
and
lods
cmp
out
scas
pop
sbb
cmpsl
add
mov
lahf
inc
push
add
add
je
sub
sub
das
pop
xor
ret
shlb
dec
pop
jae
mov
jecxz
xor
sub
ljmp
sbb
pop
mov
sbb
ficoms
inc
jo
outsb
lret
add
dec
sarb
pop
push
cs
stos
mov
sub
inc
mov
and
faddl
add
scas
stc
cmp
mov
push
sub
lods
add
pop
push
bound
adc
inc
sahf
add
ljmp
adc
cmpsl
adc
imul
loope
out
push
fs
push
out
add
xor
xor
cmc
icebp
mov
push
push
fstps
popl
add
sub
add
mov
lea
ljmp
dec
call
in
scas
dec
push
test
loopne
popa
lds
jmp
cs
mov
mov
loope
sar
push
call
addl
scas
dec
adc
lds
ljmp
in
mov
add
cmp
incb
lahf
loope
lods
jecxz
call
sbb
add
bnd
sti
mov
mov
mov
lret
or
jo
mov
mov
mov
clc
outsb
popa
ljmp
lret
loope
outsl
add
das
repnz
fdivp
mov
mov
mov
pop
pop
sub
adc
push
call
inc
incb
sbbl
lods
call
enter
add
leave
cmp
addb
je
int3
pop
cs
aas
mov
mov
mov
push
add
cmpsl
xlat
adc
cmp
lods
cmp
dec
add
fidivs
add
push
insl
aas
loop
outsb
push
leave
ficomps
inc
in
pop
inc
in
sbb
xor
add
fsubp
sub
lds
cmpsb
pusha
or
add
das
fisubs
ljmp
outsl
fdivp
inc
test
js
test
mov
mov
push
pushf
out
inc
cli
jecxz
push
mov
in
loopne
nop
outsl
fiadds
pusha
jno
xchg
fldl
jmp
sub
xchg
pop
cli
jmp
and
push
jb
inc
push
jmp
push
sbb
lods
call
mov
in
add
mov
fiadds
cmpsb
sub
mov
xor
add
xchg
dec
and
lods
repnz
rclb
ret
sbb
in
fiadds
mov
popa
push
cli
aaa
insl
pop
outsb
shll
sbb
add
add
mov
call
lods
out
xor
jle
scas
jmp
xchg
sub
in
push
sbb
jne
xchg
lcall
inc
or
push
inc
idiv
fstpl
test
and
out
xchg
add
inc
mov
push
inc
push
lea
adc
jno
mov
add
sub
je
testb
and
push
call
flds
xor
std
rolb
or
add
add
ljmp
sub
loope
cmp
xchg
loop
xchg
call
fmul
inc
call
add
xchg
cli
iret
sub
adc
jne
or
stc
inc
in
xor
mov
inc
pushl
inc
pushl
cmp
out
xchg
add
adc
jge
add
inc
mov
das
scas
jo
shlb
xlat
outsl
push
cmp
push
call
add
fcmovne
mov
or
push
lcall
push
jnp
jb
call
loop
push
popa
shll
stos
mov
push
adc
sub
mov
add
loopne
add
add
loop
imul
pop
jb
scas
cs
dec
mov
inc
cmp
cmc
push
fincstp
and
loope
test
or
mov
push
rep
rcll
jmp
add
mul
mov
cs
test
out
push
pop
rcrl
add
sub
xor
jmp
fimuls
xor
mov
add
jnp
dec
lods
add
stos
cltd
adc
mov
cli
call
outsl
dec
xchg
inc
cmp
gs
cli
hlt
pusha
pop
inc
stc
inc
je
pop
inc
pop
inc
push
mov
hlt
mov
push
cli
add
pop
negb
fisttpl
mov
push
in
and
setns
andl
xchg
sub
jne
das
notl
nop
addb
dec
fiaddl
push
adc
adc
mov
pop
fdiv
test
and
pop
mov
insl
inc
mov
add
sub
pop
fidivs
sbb
mov
in
or
push
addl
xor
jne
jno
dec
daa
sub
xorb
je
ret
cs
mov
outsl
inc
jnp
add
inc
dec
sar
sbb
inc
das
faddl
daa
jmp
inc
ret
cmc
mov
daa
inc
lret
xchg
bts
fadds
hlt
mov
or
pop
add
les
into
mov
mov
push
inc
jae
aam
xor
mov
xor
add
daa
sub
fucom
add
add
dec
cmp
lret
jb
push
xor
xor
lock
repnz
push
cmp
or
sbb
outsl
mov
stos
rcr
add
lret
rolb
mov
jmp
test
inc
cli
sahf
push
push
mov
les
xchg
aam
mov
xor
adc
mov
jnp
sbb
sub
out
cli
data16
add
sub
xchg
movsl
cltd
hlt
test
mov
fmul
stos
pushf
or
out
pop
jle
sub
or
xor
pop
daa
jno
adc
sbb
out
sub
mov
aad
inc
adc
jno
stc
pop
sub
flds
add
cs
adc
sti
mov
mov
mov
mov
mov
sub
popf
add
test
insb
dec
aaa
add
jle
cmp
je
ss
leave
ljmp
fs
cmp
and
fistl
add
imul
pop
shll
jmp
incb
jmp
mov
and
arpl
add
or
pop
test
idiv
sbb
call
mov
sub
mov
gs
andb
jne
sbb
das
sbb
ds
mov
or
inc
sbb
test
inc
hlt
subl
cmp
dec
push
cmp
dec
cli
cmp
dec
push
cmp
push
cli
cmp
cli
scas
cs
sub
das
xchg
mov
lods
mov
das
add
divb
cmpsb
subb
std
test
into
shl
jp
or
xchg
sub
pop
push
testb
sbbb
je
cmp
repz
push
ljmp
mov
repnz
ret
das
aaa
mov
mov
test
pushl
push
mov
test
daa
call
pop
mov
and
fmulp
mov
out
cs
mov
cmp
xor
sbb
out
in
mov
call
aam
push
xchg
or
jb
ret
mov
lock
dec
insb
inc
sbb
and
das
fsubp
cmp
mov
test
fisttpll
cmp
hlt
ret
jge
pop
push
add
add
pop
inc
shll
ss
cld
dec
test
cld
pop
jl
das
mov
mov
pop
andl
push
dec
pop
xchg
sbb
fidivs
add
je
fsub
je
rcl
je
enter
push
mov
clc
in
xchg
data16
mov
inc
out
xor
inc
jmp
adc
jbe
add
sub
and
je
add
push
mov
cmp
add
jnp
adc
jnp
pop
mov
paddq
inc
mov
add
dec
push
leave
aam
add
cmovle
push
idivl
inc
or
nop
pop
add
push
xor
dec
xor
orb
clc
and
aad
add
sub
addr16
cli
xor
pop
clc
sub
add
fadds
imul
pop
push
movsl
push
stc
add
pop
clc
pop
adc
cmp
test
mov
mov
add
or
ja
scas
pop
or
scas
testb
jbe
scas
push
or
lcall
add
mov
hlt
add
ja
out
mov
jmp
dec
dec
add
add
sti
push
nop
dec
add
aaa
sarb
adc
mov
sub
jl
mov
mov
or
sbb
sti
cwtl
int3
inc
out
test
pop
insl
aas
push
mov
roll
loop
add
xor
rcl
ret
pop
push
and
cmpsb
inc
ficomps
sub
add
scas
insb
testl
sbb
mov
into
and
fs
add
int3
aam
dec
outsl
sub
pop
jnp,pn
push
iret
xor
clc
ljmp
xlat
add
data16
cmp
mov
stc
lret
and
das
pusha
dec
popf
adc
insb
inc
and
outsb
xchg
pop
add
add
lods
sbb
movsb
pop
xor
add
mov
jmp
xchg
dec
xchg
popa
dec
frstor
mov
and
popa
out
loop
mov
test
sbb
or
fnstcw
lods
push
stc
sub
jl
or
cmp
jo
lods
leave
adc
mov
fnsave
leave
adc
xchg
test
add
out
xor
dec
add
add
inc
add
pushf
xchg
sub
pop
pop
add
xchg
cmp
ja
cmp
call
ret
mov
mov
sti
ret
imull
dec
decl
cmc
adc
popf
xchg
mov
addl
punpckhdq
ret
mov
or
sbb
addb
or
inc
adc
jne
leave
jnp
insl
fdiv
inc
adc
pop
cld
fstpl
mov
lods
jmp
je
mov
or
jae
inc
xchg
mov
inc
out
mov
scas
add
ss
jmp
push
push
test
inc
jne
in
test
sti
fnstenv
dec
and
add
sarb
jns
aaa
mov
add
sub
mov
add
push
int3
scas
test
or
xor
xchg
mov
sub
jae
ja
cli
stc
add
movzbl
sti
fld
mov
xor
pop
dec
mov
adc
outsb
aad
popa
das
fsubp
aam
push
jne
xchg
mov
sub
xchg
ret
xlat
call
loope
xor
jmp
adc
frstor
mov
out
stc
pop
adc
add
pushf
mov
adc
mov
jle
in
call
pop
push
hlt
or
inc
dec
sbb
shr
aad
loope
rcl
nop
add
adc
lods
or
jb
add
cld
daa
xor
and
f2xm1
inc
pop
xor
push
adc
sar
add
imul
es
inc
out
jo
fdivr
fsubrs
ret
hlt
bound
cmpsl
push
ret
adc
pop
bound
pop
adc
adcl
pop
pop
in
cmp
scas
test
rcl
inc
jmp
inc
xor
hlt
add
stc
jbe
pop
cli
out
int
shl
mov
stc
cld
xchg
aam
jmp
mov
dec
mov
sbb
xchg
aaa
cld
test
mov
add
decl
push
dec
call
dec
dec
call
lods
cmp
jne
clc
adc
pop
cli
incb
inc
test
dec
outsb
sar
and
lea
and
jp
outsl
add
decb
clc
jae
lea
cmc
pop
dec
adc
ret
push
mov
filds
push
add
mov
fs
pop
mulps
das
jb
add
jp
or
gs
mov
jmp
sti
add
jge
inc
sub
stos
add
aaa
mov
or
mov
cs
sti
dec
jae
aaa
or
mov
jnp
lock
sbb
decl
out
pop
sub
movsb
insb
jp
mov
add
js
testl
dec
in
jmp
in
loope
cmpsl
jae
daa
xchg
repz
shll
push
sbb
lcall
sbb
das
push
inc
sub
inc
ret
leave
add
es
mov
ficoms
rorb
mov
and
mov
fcoms
sub
add
ficoms
inc
out
push
sub
xchg
inc
sub
dec
addr16
fdivl
mov
sahf
out
pushf
fidivrl
pop
inc
or
sbb
add
jb
lcall
rol
scas
cld
faddl
jmp
pop
inc
mov
out
push
jb
pop
inc
cltd
test
jae
xchg
inc
lea
insb
inc
sti
sahf
add
cwtl
cmp
sub
fsubrl
sub
or
scas
pop
inc
cli
jmp
outsl
cld
or
sub
stc
fistpl
call
cmp
mov
cld
adc
stc
sbb
das
ss
ficoms
repnz
push
repnz
pop
pop
ret
dec
mov
ds
dec
orb
fs
mov
adc
clc
sbb
incb
add
aas
loop
leave
stc
cmc
test
xor
jecxz
mov
sti
call
jmp
jle
clc
je
xchg
clc
insl
add
fisubrs
sbb
fcomps
popf
or
sub
imul
push
xor
pushl
movb
jg
mov
adc
pusha
inc
fldl
add
sub
xchg
out
cmp
lds
icebp
jae
testb
aaa
int3
out
push
and
mov
ret
mov
jnp
sti
mov
inc
pop
and
lock
outsl
xor
push
mov
mov
movsb
jg
test
push
xchg
jl
dec
push
xchg
mov
sbb
call
dec
jns
daa
in
jp
add
in
jae
sbb
jp
mov
popf
cmpsb
repnz
cmp
out
jns
xchg
insb
mov
stc
add
pop
jno
fsubp
add
mov
in
add
jecxz
add
imul
js
xchg
sub
pop
cmc
sbb
adc
mov
xor
push
add
add
fsubrp
mov
ljmp
add
ficomps
loopne
pop
mov
movsl
das
cmc
stos
push
add
testl
jae
fiadds
ds
mov
sahf
leave
in
stc
cld
fmul
inc
jmp
adc
inc
fnstenv
or
ljmp
or
out
pop
dec
add
sub
lcall
nop
push
ds
call
ss
fs
mov
es
test
pop
roll
jecxz
cmp
mov
xchg
inc
cmp
fiadds
jmp
xchg
stc
pop
jp
add
or
push
push
push
jmp
testb
inc
adc
testb
dec
idiv
jns
aas
push
test
jge
add
fs
add
loop
xor
sbb
add
pop
cwtl
jl
ret
sub
in
aam
mov
jno
push
jne
mov
test
mov
and
out
std
cmc
pushl
loope
add
add
imulb
or
add
adc
pop
and
fstpl
sti
add
sub
dec
mov
push
and
lods
pop
or
mov
std
arpl
lcall
inc
push
jbe
inc
or
je
stc
xlat
pop
ljmp
repz
inc
xchg
add
popf
xchg
pop
mov
push
add
stc
rcll
out
inc
es
fstpt
and
das
fldl
pusha
fucom
popl
add
std
iret
inc
push
cmp
dec
sub
pop
les
cmpsb
mov
dec
sbb
jle
mov
lea
outsb
adc
mov
sub
jmp
out
mov
sbb
fs
sarl
adc
aam
sub
test
inc
xchg
and
cmc
iret
push
sahf
out
movsl
adc
sahf
movsb
cmp
fldl
add
cmp
mov
andb
or
loopne
and
out
add
jb
jns
in
shrd
fsts
mov
test
xchg
test
jb
add
dec
push
sbb
fiadds
add
xor
add
sbb
pop
psrlq
add
cmp
insl
jno
add
mov
cmp
fcmovnb
mov
es
add
sub
je
dec
or
test
enter
sbb
push
add
cltd
rorw
pusha
add
push
xlat
jae
jno
mov
push
loop
jbe
gs
clc
sbb
mov
cmc
xlat
outsl
arpl
punpckhwd
or
add
mov
dec
or
push
or
jmp
push
and
jecxz
pop
cmp
mov
jmp
add
loop
fdivrl
lcall
jl
das
outsb
lea
mov
cwtl
std
cmpsl
jo
jne
xor
dec
add
pop
push
xor
out
inc
lea
int3
cmp
fcoml
mov
subb
or
fiaddl
sti
cmp
enter
mov
in
cmp
push
movsb
push
ljmp
addb
inc
adc
and
inc
ret
je
test
sbb
pop
clc
cwtl
or
sbb
cmp
shlb
repz
or
fucom
add
add
cmc
sub
cs
sub
add
add
mov
cmp
ljmp
sbb
xorl
push
mov
mov
mov
arpl
repz
or
push
mov
sub
dec
sbb
pop
xor
jmp
lods
cmp
call
adc
adc
cli
push
and
ret
fcmovb
lods
inc
in
jmp
imul
add
sub
xchg
pop
inc
hlt
xchg
mov
mov
and
fcmovnb
sub
fsubrp
xchg
ss
jmp
mov
hlt
xor
and
add
inc
cmp
mov
insl
pop
shlb
into
add
fiaddl
add
insl
push
mov
call
or
dec
push
leave
cmp
loope
shll
push
arpl
testl
push
loop
inc
inc
loopne
cmp
aam
test
faddl
add
inc
sti
cmc
imul
sub
xlat
test
add
stc
mov
add
loopne
mov
shl
or
xchg
add
repnz
xor
jecxz
sub
popa
repnz
repz
decb
add
das
cmp
shlb
mov
mov
adc
fldt
inc
popa
inc
push
sbb
xchg
add
arpl
jmp
xor
out
pop
lods
add
add
jnp
inc
or
shrb
dec
add
inc
jle
repz
test
inc
jmp
cli
and
fwait
xor
ljmp
test
mov
add
aas
inc
cmpsl
inc
ljmp
test
mov
and
cltd
shr
outsb
rclb
add
iret
call
mulb
out
test
out
mov
add
into
insb
andb
adc
filds
in
jbe
insb
inc
xor
mov
das
fidivrs
shl
ljmp
or
pop
mulb
add
enter
lock
xor
clc
adc
out
push
das
fsubp
mov
arpl
in
out
fs
xor
add
sub
das
or
fiadds
jmp
inc
pop
andb
inc
jecxz
int3
adc
test
es
fucomip
sub
or
das
mov
int
push
push
arpl
mov
cmc
incb
xchg
icebp
add
pop
cmpsl
subl
sub
jmp
mov
stos
mov
add
add
std
jecxz
je
add
push
jo
xchg
sub
flds
cwtl
outsl
out
add
pusha
ret
inc
adc
add
out
divl
add
push
pusha
xchg
adc
notl
adc
pop
sbb
je
ljmp
decb
inc
clc
dec
pushf
je
lods
inc
or
and
adc
push
sarb
test
movb
or
ljmp
or
addr16
mov
lcall
mov
cmp
mov
and
mov
shlb
jne
pop
hlt
push
leave
mov
mov
in
inc
inc
push
add
or
add
adc
bound
jp
dec
sub
inc
add
add
mov
add
das
insl
mov
jno
or
inc
sub
add
jge
add
inc
lea
mov
push
push
mov
jo
push
sbb
add
outsl
inc
add
sub
out
jb
cmp
in
sbb
cmp
aad
fcomps
push
stos
outsl
in
das
mov
pop
push
sbb
pusha
addb
jo
add
jmp
cmp
cmpsb
push
clc
push
xchg
cs
push
pop
das
and
xchg
in
into
adc
lock
in
add
out
fidivrs
push
call
loop
aam
daa
add
xor
mov
movsb
sub
out
mov
in
scas
mov
xor
add
jno
add
sub
inc
xchg
scas
fwait
in
jle
add
sub
pusha
sbbb
inc
cli
bound
call
mov
arpl
ucomiss
add
mov
mov
cli
push
inc
dec
and
inc
push
sahf
cmp
adc
sub
out
mov
call
mov
adc
push
rolb
loope
pop
xor
cmc
test
loope
mov
inc
rclb
push
inc
idiv
test
rolb
add
shll
pop
cmp
adc
aas
pop
into
cmp
xchg
call
fiadds
add
test
shl
data16
stos
adc
sbb
add
add
loop
test
cmc
lcall
add
loope
lock
pop
jecxz
adc
ret
sub
or
sbb
andnps
jne
sarb
in
add
jle
sub
aaa
call
out
or
push
mov
pop
pcmpeqw
sub
les
std
mov
mov
push
mov
or
popf
or
bound
js
jns
jg
jecxz
mov
add
mov
sub
sub
dec
pushl
stc
dec
and
or
sub
mov
faddl
das
ficomps
mov
mov
jmp
stc
xor
fimuls
mov
xchg
adc
pop
lret
je
and
jnp
jg
sub
add
push
mov
mov
sbb
fucom
add
fisubrl
das
fsubp
add
sbb
cmp
mov
call
ret
fs
or
xor
and
push
daa
add
sub
cmp
xchg
pop
test
and
aam
in
sub
call
loop
xchg
add
ret
aam
mov
in
add
aad
pop
je
sbb
mov
add
sub
lock
ret
rorl
ss
inc
sub
call
int
in
jb
push
ds
idiv
push
into
jae
inc
xor
push
xchg
fucom
das
xadd
push
dec
cld
push
push
int
push
test
add
test
cmc
push
leave
pop
ljmp
jno
ljmp
push
pop
loope
addl
pop
mov
idiv
push
push
push
push
adc
std
icebp
int
add
sbb
gs
into
pop
mov
xor
call
fisubrs
or
add
fbstp
jae
lock
dec
das
js
push
mov
sti
sub
iret
mov
xor
add
sub
fildll
mov
sbb
or
lock
or
mov
push
movsb
add
data16
sbb
push
mov
jmp
mov
jne
aas
das
mov
jmp
or
xor
jg
and
or
xchg
xchg
js
imul
add
ficomps
jo
movsl
adc
pop
insl
loopne
daa
sti
mov
add
add
and
subl
cmp
clc
and
daa
add
sbb
and
insl
filds
or
jge
push
sub
dec
pop
push
es
and
add
pop
mov
lds
nop
in
pop
mov
and
xlat
movsl
es
sbb
mov
cltd
sub
insl
roll
pop
dec
in
cmpsb
mov
scas
pop
sub
xor
push
pop
cwtl
jmp
cwtl
xor
dec
cmp
je
scas
pop
xchg
in
sub
push
cmp
sbb
cmp
adc
xor
inc
int
add
push
jle
xor
xchg
test
pop
and
sub
sub
bound
daa
cli
jle
xchg
call
outsb
sub
adc
mov
insb
and
xchg
dec
shl
mov
xor
cmc
jmp
pop
stc
inc
fstpt
add
je
push
ds
dec
decb
jae
add
das
int
add
inc
testl
sub
jo
aaa
pop
jo
add
adc
xchg
leave
push
outsl
push
mov
ljmp
loopne
inc
add
and
lock
clc
adc
cmpb
addr16
jg
push
cld
push
in
xchg
js
add
cmpsb
jno
call
lods
ret
or
mov
aam
xchg
or
inc
mov
inc
mov
push
sti
movsb
ds
mov
cli
lcall
and
sbb
sbb
add
sti
clc
add
push
lock
jg
mov
repnz
jns
imul
jg
lods
popl
icebp
cli
or
ficomps
mov
push
or
dec
xchg
sub
mov
or
test
xchg
sbb
and
push
aam
or
test
jmp
push
push
push
lds
inc
and
inc
sets
xor
sub
and
rorl
scas
mov
xchg
or
and
adc
repnz
add
and
xor
test
ret
or
xchg
xchg
std
data16
add
jmp
push
inc
fcoml
inc
fsubl
je
in
cwtl
cld
stc
sub
add
jg
add
or
daa
out
xor
and
push
fstps
arpl
cmp
out
mov
arpl
sub
sub
pop
inc
aam
add
push
adc
inc
mov
xor
push
or
shlb
xor
jmp
mov
xchg
incl
leave
cmp
es
inc
int3
dec
push
test
in
mov
call
test
pop
xor
sahf
add
fidivl
rorb
add
inc
test
sti
xchg
lds
sarb
fisttps
adc
adc
les
cmc
add
pushf
fists
std
jmp
call
or
iret
push
cmp
das
cmp
gs
int
mov
scas
xchg
jns
and
jns
imul
testb
das
aaa
jns
popf
mov
jo
jb
pop
data16
clc
addr16
imul
sti
mov
sub
ret
xor
cmp
das
mov
adc
ss
add
xor
repnz
imul
xor
loop
fimuls
pop
bound
xchg
icebp
or
daa
add
add
daa
cld
ds
mov
outsb
add
das
fmulp
repz
aaa
lcall
cmpsl
add
sbb
cltd
addb
dec
ljmp
add
xchg
xchg
cld
outsb
cltd
sbb
das
push
lods
xor
leave
add
mov
stos
int3
push
lcall
in
pop
lret
jp
pop
ret
add
add
insb
shlb
add
push
roll
cli
cmpsb
gs
jl
xor
sbb
xchg
sbb
jle
xor
push
push
jb
stc
pop
adc
jge
mov
rorl
cli
bound
stc
call
or
jne
xor
xchg
and
sub
test
cli
push
fnsave
mov
cmc
shll
enter
jg
int3
mov
mov
cltd
inc
aam
ret
adc
cmpl
cmc
incl
cli
or
jecxz
jne
js
push
adc
jecxz
clc
xchg
insb
add
mov
stc
testb
push
pop
out
pop
fstp
mov
loop
mov
mov
pushl
jl
pushf
insl
nop
jmp
ja
push
push
sub
rorb
mov
in
xor
jns
das
sti
scas
push
pusha
clc
add
cmp
mov
in
or
mov
sbb
dec
jge
test
add
cs
cs
jne
adc
movl
cs
incb
das
nop
mov
clc
and
out
mov
jbe
dec
out
repnz
jle
sub
mov
stc
repz
push
pushf
stc
inc
in
pop
add
pop
jns
daa
fisttps
sub
add
cmpsb
lcall
add
test
mov
call
sub
scas
stos
js
add
mov
fwait
fs
je
rcll
stos
dec
adc
out
insb
ret
and
daa
in
xacquire
mov
jmp
adc
out
frstor
movsb
daa
xor
inc
xlat
daa
cmp
daa
pop
lods
daa
cmp
imul
outsl
hlt
sbb
pushf
data16
aaa
hlt
rol
fstpl
je
sti
into
add
sbb
jne
sub
add
jne
cmp
or
sub
in
sub
pop
out
stc
sub
pop
jne
cmp
dec
int
push
cmp
jns
push
je
lods
xchg
and
sub
movd
ret
lock
sbb
and
mov
and
test
aas
sub
push
sbb
cs
cli
popf
adc
loopne
cli
lock
sahf
and
push
inc
adc
pusha
and
mov
call
mov
or
lea
sbb
jmp
sbb
in
xchg
repnz
push
jnp
mov
test
fldl
push
or
cmc
mov
fildll
adc
fisttps
adc
outsb
or
cmpsb
and
aad
cmpsb
add
loope
dec
push
fisubrs
jmp
xchg
and
xor
dec
mov
popa
add
pop
cmp
and
or
sbb
or
dec
pop
or
out
pushl
jmp
and
test
sub
mov
jmp
mov
out
cli
movsb
xchg
adc
orl
das
pop
add
mov
out
pushl
and
mov
sbb
sub
jmp
add
and
das
mov
or
sbb
xor
adc
sbb
movsb
daa
daa
movsb
daa
and
insl
add
fimuls
imul
call
mov
add
add
subb
inc
cmp
mov
add
stos
dec
or
fisubrl
mov
lret
aas
icebp
adc
outsl
fidivs
or
outsb
dec
push
out
pop
in
shll
inc
xchg
cmc
inc
das
imul
out
das
push
jl
gs
add
mov
fwait
and
lds
stos
test
push
ret
cmp
lds
mov
sbb
adc
sbb
add
push
testb
inc
out
lcall
repnz
mov
mov
dec
cmpsb
rcll
sbbl
sbb
push
mov
xchg
mov
inc
addr16
imul
adcb
aad
mov
idiv
add
sub
inc
decb
sbb
jbe
dec
sub
push
pop
int3
sbb
xor
add
mov
in
xchg
std
icebp
sbbl
pop
push
or
add
and
and
call
addr16
repnz
into
fldl
add
pop
cld
xor
out
pushl
loope
add
add
and
decl
xchg
and
les
out
jnp
sti
mov
pop
xchg
and
lock
daa
push
push
xchg
pop
sti
xor
mov
gs
sbb
jnp
add
pop
push
push
sbb
xchg
outsl
pop
xor
das
pop
cli
cmp
je
mov
cli
xlat
dec
ss
loopne
mov
inc
ljmp
mov
dec
xlat
add
add
jnp
jae
pop
jae
xchg
cmp
cli
mov
or
mov
adc
push
filds
gs
cld
fcoms
inc
pop
lods
pusha
pop
pop
data16
mull
negl
cld
lods
sbb
fcmovnu
icebp
fnsave
adc
sti
jo
lods
repz
add
jo
add
and
cli
cmc
lods
mov
mov
iret
xor
jbe
je
in
fwait
sti
jo
sbb
mov
mov
cmp
jl
scas
out
push
add
mov
xchg
clc
jmp
cmc
jge
jne
jge
cmp
cli
bound
in
mov
pop
add
pop
int3
callw
mov
cli
push
or
leave
and
mov
pop
sbb
popa
test
add
shr
cltd
stc
pop
lret
dec
dec
scas
aad
xchg
mov
mov
fiadds
cmpl
mov
push
lret
shrl
fwait
call
mov
mov
push
les
xchg
inc
add
out
pushf
adc
pop
outsb
xor
arpl
push
lods
fsubp
adc
adc
mov
sahf
add
add
mov
push
loope
xor
or
in
scas
test
adc
ficoml
inc
pusha
mov
ljmp
mov
bound
add
das
pop
push
divb
pop
jno
sub
push
add
xor
xor
dec
xchg
pop
push
fdivs
testl
cs
and
add
call
testl
inc
decb
xlat
in
out
and
stc
test
testl
inc
pusha
mov
out
das
pop
addl
call
sti
dec
adc
shll
ljmp
aaa
pop
test
jecxz
clc
aad
outsl
sbb
cmpsl
add
cwtl
clc
fstp
fs
adc
clc
clc
add
push
pop
stos
pop
cmp
xor
add
mov
lds
pushf
mov
add
pop
lods
ss
mov
add
mov
mov
imull
add
sub
lods
call
aam
jge
shlb
sub
fildl
mov
sub
fidivrs
out
sub
mov
outsb
fildl
sbb
loopne
push
add
popl
jmp
fidivrs
cmp
lods
xchg
or
lock
sub
rclb
jp
sub
and
adc
inc
out
pop
rcll
stc
shll
into
aad
das
add
sbb
dec
mov
jne
cmc
call
outsb
lret
aas
cmp
loop
adc
push
loop
add
inc
pop
testl
dec
add
mov
in
sbb
pushl
jecxz
call
sbb
ret
sbb
test
fiaddl
add
pop
int3
cmpps
push
pop
cmp
popf
sar
dec
push
popa
mov
test
outsb
push
cli
and
shrb
pop
xchg
fcoml
or
add
lods
xchg
adc
lock
add
adc
mov
mov
xchg
stc
xor
stos
lea
stos
cmp
nop
xchg
push
data16
sbb
test
lea
inc
mov
push
addr16
sbbl
mov
or
adc
add
mov
xchg
testb
jno
mov
pop
jg
fdivp
mov
and
add
fisubs
out
stc
popl
das
ficoms
dec
mov
pop
xor
hlt
pop
pop
stos
jmp
add
mov
das
frstor
das
fsubp
adcb
call
xchg
outsb
int
adc
cmpl
movsb
mull
fisubs
add
aas
fsubp
add
push
movsl
jmp
pusha
xchg
sti
sub
xchg
fsubp
mov
outsb
inc
sbb
mov
enter
cmpsb
dec
or
fldl
jmp
iret
fs
shll
xor
mov
fiadds
insb
call
fiadds
ficompl
arpl
jmp
jl
jmp
jb
add
je
lock
inc
and
add
mov
or
or
jmp
and
or
jmp
stc
test
pop
sbb
sub
stc
add
stc
or
adc
mov
sub
idivl
xchg
xchg
sbb
adc
fnsave
js
cmp
sti
jecxz
roll
mov
add
push
lea
jecxz
add
xchg
clc
call
sbb
outsb
push
or
outsb
pop
adc
ret
adc
cld
popl
fwait
cli
orb
incb
dec
mov
call
and
dec
cld
push
inc
out
lods
outsb
out
cli
or
cld
add
mov
stc
add
mov
idiv
incl
add
jg
add
jl
cld
stos
mov
out
cli
aam
add
jnp
inc
add
ret
mov
lock
mov
jb
movsb
ret
cli
add
inc
xchg
popa
lods
test
jne
jl
lock
cli
ret
cwtl
call
jbe
mov
fiaddl
cmp
and
jae
pop
inc
add
pop
xchg
into
inc
sbb
gs
or
fsubrl
fucom
add
adc
out
or
imul
ficomps
push
pusha
pop
cmpsb
sti
shlb
push
pop
mov
ss
out
daa
add
push
mov
outsb
jp
dec
pushf
sarl
pop
pop
or
sti
rcrb
xlat
loopne
xor
fstps
add
dec
xor
mov
in
inc
push
cmpsb
cli
test
jmp
sub
mov
add
gs
mov
fs
call
mov
or
arpl
xor
mov
flds
xor
call
roll
xor
add
inc
pop
inc
mov
pop
inc
test
shrl
shr
shl
add
pusha
out
mov
fiadds
inc
cmp
xchg
xchg
and
add
sbbl
cmpb
or
add
fstpl
mov
setne
incl
pop
inc
sbb
clc
orb
adc
adc
dec
lea
push
incl
add
scas
push
inc
pop
mov
or
and
xchg
and
xchg
mov
mov
dec
in
cmp
nop
cmp
push
fstpl
and
lods
push
sbb
repnz
les
push
inc
sub
adc
hlt
jle
and
pop
push
cmp
es
and
sub
jle
pop
add
daa
and
insl
add
mov
jo
das
mov
push
push
inc
mov
inc
call
shlb
je
inc
jb
xlat
add
out
mov
push
call
adc
mov
push
call
mov
xor
jno
in
mov
dec
jns
or
add
fwait
in
inc
lods
insl
int3
dec
or
xor
push
in
and
push
popf
fists
push
mov
adc
fimuls
cli
mov
add
ja
jmp
dec
adcb
pop
das
stos
pop
fildll
ficomps
xchg
mov
inc
leave
out
cmc
push
jne
mov
mov
in
and
add
jnp
add
push
sub
xchg
test
insl
insb
nop
adc
add
add
shrl
push
inc
ss
hlt
push
aad
cli
ss
insl
test
pop
pop
xor
stos
test
clc
push
add
sub
push
sahf
mov
push
pusha
cmpb
out
inc
or
add
jmp
les
ja
sbb
mov
jae
aam
cmpsb
add
xchg
lods
sub
pslld
cli
push
mov
push
and
and
test
jae
scas
stos
cs
roll
dec
add
jp
inc
and
notb
sti
stc
incl
in
in
ret
sbb
call
test
bnd
or
mov
call
call
pop
inc
jnp
add
push
and
jl
clc
xor
je
inc
ret
and
movsb
ljmp
xchg
xchg
call
lea
mov
dec
cli
nop
mov
das
outsl
mov
cli
clc
dec
sahf
aad
hlt
add
and
dec
das
pusha
dec
dec
push
scas
xchg
cmp
and
adc
nop
in
ss
inc
pop
push
cmpl
out
arpl
push
jns
adc
push
aaa
push
add
mov
pop
in
push
jmp
sub
je
iret
fcompl
adc
cli
inc
subps
xlat
fisttpll
cli
mov
das
jae
jg
aaa
jmp
daa
negb
cld
fidivl
xor
pop
cmpsb
add
stos
pop
fsubr
stc
pop
adcl
das
test
push
add
mov
cmc
loopne
inc
add
shrb
pop
jo
lret
sub
cltd
lret
push
jg
pop
jmp
jl
pushaw
push
shl
jbe
mov
divl
mov
out
jl
lods
pop
aas
adc
stos
aas
or
in
das
fiadds
scas
lock
add
sub
add
add
negb
and
test
or
sub
mov
cli
data16
cmc
xor
add
pop
push
add
inc
or
jmp
mov
jge
xor
test
jg
dec
sbb
pop
mov
bnd
xchg
sub
lcall
jge
subl
fiadds
cmp
add
add
xchg
clc
jo
adc
dec
sub
sbb
test
popf
clc
mov
movsb
and
stos
cmc
xchg
lret
add
sbb
ja
cld
cmp
adc
add
divl
inc
push
stc
in
js
xchg
add
scas
dec
push
pop
ret
pop
sbb
cmp
and
add
ds
xchg
jecxz
testb
sub
jle
xchg
cmc
cmp
cli
pop
sub
jecxz
mov
inc
cld
lods
xor
aaa
ljmp
xchg
pusha
ja
mov
push
push
sub
loope
aaa
jo
or
out
dec
sti
decl
jecxz
and
cs
jo
fsts
repnz
add
loop
sub
testb
jo
adc
jecxz
xor
cmp
jno
ja
mov
fsubp
insl
xor
test
insb
imul
pop
das
std
xor
pusha
std
pop
or
push
xor
js
icebp
xor
sbb
pop
roll
cld
and
mov
jb
add
aaa
imul
push
push
mov
in
in
add
cld
xchg
cmp
fwait
sahf
mov
mov
imul
push
insb
test
xchg
xchg
pop
inc
das
push
shrl
cld
outsb
hlt
inc
sbb
mov
out
pop
sub
add
jle
pop
fstl
push
pop
ljmp
inc
stos
clc
sbb
push
xchg
lods
adc
add
insb
jno
adc
inc
jmp
xor
jmp
mov
test
stc
mov
cltd
outsl
dec
notl
sbb
push
pop
shl
aas
daa
ret
mov
test
idiv
shrl
sti
stc
es
loopne
push
jl
test
stc
dec
call
add
mov
add
and
test
push
pop
adc
out
jb
stc
call
loop
incl
std
idiv
inc
pushl
adc
adc
and
aad
or
std
cmc
mov
xchg
loope
daa
add
mov
dec
lea
xchg
sbb
add
mov
xor
aam
mov
pop
shl
mov
push
aaa
jg
or
bound
add
mov
mov
pop
adcb
mov
aam
test
repnz
mov
jg
pop
out
dec
push
filds
ljmp
sti
call
mov
pop
add
add
add
repnz
inc
xor
test
add
pushf
std
gs
sbbb
lahf
mov
sbb
and
imul
add
pop
cmp
ss
outsl
fisubs
out
loop
fsubl
adc
addr16
xlat
fisubrs
cmp
fs
xlat
pop
dec
adc
nop
repnz
push
outsb
push
dec
mov
loope
cli
pop
loope
out
inc
stos
mov
testb
inc
ficomps
mov
nop
jg
clc
jp
insb
fidivl
xor
pop
push
stc
bound
push
out
pop
inc
stc
mov
loope
xchg
sahf
lret
out
mov
add
pop
call
test
mov
imul
mov
fcmovnb
aad
addb
cli
aas
cli
call
inc
fisttps
mov
clc
cld
popf
subl
call
mov
in
scas
pop
rolb
call
sub
stc
test
mov
cmc
dec
mov
cmp
fs
add
xor
je
call
stos
loopne
add
add
shrb
pop
notb
or
xor
lods
cmc
push
add
je
gs
lock
add
mov
enter
pop
enter
mulb
cld
cmp
std
jmp
int
push
jmp
xchg
add
leave
add
test
pop
loop
mov
testl
cmpsl
mov
inc
inc
inc
fs
xchg
cli
mov
mov
push
clc
hlt
stos
or
neg
int
xor
add
dec
pop
xor
xor
and
out
aas
das
insb
mov
push
push
out
fidivrl
adc
je
imul
hlt
mov
leave
xor
mov
or
xor
icebp
ljmp
lea
dec
ss
mov
fmull
dec
call
adc
add
sub
out
addr16
add
add
bound
fidivs
push
imul
divb
aad
sbb
imul
and
mov
out
cmp
jg
fldenv
xlat
mov
mov
lret
push
in
faddp
cmc
flds
out
adc
je
mov
mov
add
repz
pop
insb
popf
loope
notl
out
out
sbb
ljmp
iret
imull
lcall
mov
call
push
cmpsb
fstl
cld
in
lods
sbb
pop
repnz
cltd
sti
lea
jmp
test
push
stc
dec
loope
ficoms
and
test
in
out
add
repz
pop
inc
hlt
xor
pop
in
gs
add
stc
nop
mov
cld
rcr
xor
cmp
pop
ret
sbb
jo
sahf
arpl
addr16
pop
notl
test
jnp
ja
inc
or
call
adc
lret
add
and
int
or
pop
shl
jge
sub
shll
push
lea
sub
add
lds
dec
mov
test
jmp
pop
dec
push
lods
addl
push
clc
andl
or
push
pop
idiv
dec
mov
insb
pop
popf
call
inc
scas
dec
push
popa
inc
fsubr
add
das
dec
cs
push
cmp
mov
fmull
mov
imul
mov
fimuls
sbb
adc
xchg
pushf
xchg
jg
das
add
cmp
fildll
mov
cli
idiv
clc
lret
dec
lock
mov
mov
jns
fldpi
cmp
mov
or
or
add
faddl
das
sbb
cmp
sbb
add
orb
and
add
out
mov
jge
and
push
xor
or
mov
dec
in
data16
dec
lock
jg
push
mov
cwtl
ss
lea
push
cmp
mov
mov
lock
into
cmpsl
add
call
test
shl
imul
jae
loop
and
daa
add
imul
leave
fsts
test
icebp
mov
sbb
bound
push
inc
cld
push
hlt
test
pop
dec
lods
dec
and
out
sbb
mov
add
je
mov
xchg
cmp
dec
mov
test
stc
inc
push
hlt
jae
imulb
cltd
imull
xchg
adc
cmc
xlat
imul
stos
cli
push
push
push
jb
lcall
jns
stc
mov
jle
jae
xlat
push
cli
push
mov
rolb
sbb
cmc
pop
cmp
push
mov
pop
out
xchg
faddl
mov
dec
add
push
incl
mov
ss
hlt
scas
push
or
fldcw
psrld
add
inc
push
test
adc
sub
ljmp
jo
add
faddl
push
rclb
mov
faddl
test
out
mov
fildl
mov
rorb
cmpsb
push
push
sbb
sbb
test
add
das
mov
adc
cmp
dec
daa
fwait
roll
out
and
push
shlb
pop
inc
cmp
add
xchg
adc
test
pop
cs
std
rolb
and
sub
or
cmpb
sti
sahf
mov
das
add
sub
pop
cmpsl
daa
sti
call
add
fildl
push
xlat
icebp
idiv
rcr
inc
sub
mov
xor
xlat
mov
pop
test
add
and
in
inc
std
test
xchg
fldenv
ja
std
insb
mov
out
pop
in
popf
sarb
test
icebp
pop
inc
cmp
pushf
add
cmpsl
add
pop
cmp
mov
mov
outsl
add
popa
lock
pusha
pop
movsl
sahf
out
popa
cmpb
jo
lods
or
inc
pop
aad
add
add
fs
out
call
test
add
das
mov
adc
insl
sbb
stc
jmp
xchg
cs
xchg
movsb
adc
xchg
test
or
scas
and
ss
push
jb
dec
ja
stc
insl
jae
outsb
outsb
subl
add
pmullw
push
mov
or
cmpsl
mov
stc
ss
sub
jmp
add
sub
mov
in
add
push
push
add
loope
xchg
test
or
pusha
cld
rcll
sarb
test
outsb
push
rcrl
jnp
jno
jb
jo
divl
clc
mov
rclb
jne
mov
mov
orl
int
dec
jmp
fisubrl
rclb
mov
in
xlat
add
add
sub
add
push
lods
or
jnp
push
jmp
adc
lret
divl
fistpll
mov
adc
pushf
rcrb
imul
das
aam
sarl
jae
in
dec
xchg
idiv
ljmp
cld
int
in
or
adc
fs
subl
ljmp
add
cli
inc
sub
inc
add
adc
dec
xor
test
arpl
cli
inc
jnp
inc
jle
hlt
inc
adc
adc
hlt
mov
and
cmpl
adc
adc
add
jle
lock
fstpl
sarl
sti
mov
jmp
xor
sub
sti
rcl
mov
stos
jl
out
dec
add
xchg
push
sub
rcll
pop
and
subb
je
pop
and
add
add
fsubp
lret
out
das
fidivrs
ss
jle
stc
push
clc
mov
addr16
mov
xchg
aad
ljmp
das
xchg
add
pop
in
pop
xor
add
scas
jb
mov
add
aad
push
pop
push
insb
lahf
jno
neg
xor
call
mov
stc
push
in
insl
das
call
or
call
push
mov
jmp
inc
mov
sbb
jmp
addr16
call
jb
cltd
stc
cld
jl
adc
test
test
sub
add
add
pop
pop
dec
add
cmc
rclb
fldl
add
addr16
fsubs
xchg
sqrtps
pop
test
mov
push
aam
push
adc
fdivr
add
dec
pushl
fiaddl
add
loopne
test
aam
dec
addr16
call
add
data16
daa
fiaddl
add
addl
and
and
mov
ljmp
insb
inc
call
fildl
sti
jp
sub
mov
fdiv
jl
rep
sub
push
std
add
cmpsb
pop
loop
bound
xorb
jge
fwait
into
sub
jg
call
add
mov
sub
adc
das
jecxz
ss
jnp
or
mov
sti
cmp
in
aas
das
add
loop
push
or
pop
fsubr
les
stos
add
fistps
mov
or
add
outsb
filds
xlat
pop
repz
push
adc
push
push
add
add
daa
call
pushl
jno
adc
dec
jle
fisubs
and
call
pop
dec
sbbl
and
or
gs
stos
mov
mov
outsb
sti
clc
out
in
inc
mov
fsubl
in
jge
adc
xor
push
jmp
pop
adc
test
hlt
xchg
stc
cwtl
hlt
pop
inc
cmp
sbb
test
fstl
add
test
mov
bound
test
pop
jmp
clc
inc
push
xchg
push
jnp
stc
loopne
cli
aam
aad
jmp
outsb
mov
call
and
imul
out
cmp
sahf
jbe
inc
data16
mov
add
test
and
add
loope
pop
xchg
rcrb
out
push
pushl
push
lea
jmp
jns
dec
fiaddl
rclb
pop
mov
add
decb
mov
test
loope
or
pop
gs
popa
adc
pop
pop
cmp
inc
gs
clc
or
fsubp
xlat
add
push
loopne
lea
decb
das
dec
das
adc
ss
test
std
pushl
xor
fstp
test
outsl
cmc
sub
or
mov
xchg
inc
add
test
int3
cli
pop
pop
adc
jp
cli
loopne
aad
cmp
int3
pop
jbe
mov
lock
pop
sub
mov
cld
xor
add
jo
dec
cmpsb
stos
faddl
cmp
je
popl
mov
cli
jo
lds
inc
das
pop
test
or
inc
push
jecxz
xor
adc
mov
in
xorb
push
out
jne
jns
fisubs
les
pop
inc
dec
jnp
data16
das
imul
sub
shrb
in
sbb
add
pop
cld
pusha
jecxz
sti
mov
pop
jg
repnz
cld
push
cwtl
out
jle
mov
xor
pop
test
repz
sti
and
loop
lret
outsb
add
loop
sbb
pop
mov
pop
xchg
dec
hlt
stc
sahf
add
call
lds
or
xor
divb
out
pmaddwd
stc
push
and
mov
in
loop
add
in
inc
test
stc
inc
fucomip
sbb
in
nop
jmp
adc
in
incl
test
aam
stos
sub
subl
add
dec
jecxz
out
and
repz
add
push
and
ljmp
xor
ror
je
out
or
rol
je
lret
sub
pop
jmp
add
stc
sub
loop
xor
cmp
lock
testb
leave
fwait
mov
rolb
fistpll
es
xchg
and
add
cmp
sti
imul
sbb
mov
push
push
push
adc
out
xor
les
add
enter
lea
test
sub
adc
aaa
add
add
add
clc
mov
rcrb
leave
mov
cmc
jns
xor
or
xor
cli
enter
aad
jl
addr16
xchg
movsl
push
out
mov
std
pop
mov
pop
je
stc
incl
add
das
out
mov
lea
clc
jnp
xor
dec
push
sbb
add
pop
out
adc
je
mov
jns
push
add
cld
jnp
add
sti
sbb
aad
sahf
sub
jae
fisubs
cmc
push
pop
mov
bsf
xchg
sbb
call
push
cmp
in
push
mov
and
inc
insb
cltd
or
mov
xorl
cmc
and
push
mov
pop
pop
insb
lock
push
addr16
pop
jmp
aam
pop
inc
and
and
add
in
repnz
out
jg
ret
adc
les
pop
inc
aaa
xchg
repnz
out
mov
jno
test
scas
pop
je
jno
clc
das
lods
in
pop
push
xchg
stos
je
es
jmp
cld
jno
fdivrp
jmp
incb
xor
sti
sub
add
stc
test
lahf
mov
jmp
in
movsb
clc
fs
in
and
mov
or
xor
fdivr
pushf
hlt
fs
in
fisubl
inc
cld
adc
int
cs
lret
pop
cmp
or
sbb
cmp
cmpsb
push
cmovnp
dec
push
add
inc
cmp
add
call
sbbl
idiv
mov
std
call
lea
cli
ret
stc
jmp
and
mov
or
pop
in
and
inc
mov
decb
xchg
das
std
cmp
inc
add
and
int
add
xor
adc
cmp
add
insb
push
mov
notl
idivb
movl
jg
pop
movsb
ds
dec
xor
insb
lds
cmp
lock
das
inc
add
sbb
jne
sub
repz
imul
add
fidivrs
mov
inc
das
cmp
xorl
cmp
fnstsw
loope
ret
sbb
xchg
les
clc
inc
das
adc
loope
das
xor
sbb
in
daa
add
sahf
adc
push
sub
pop
dec
daa
xor
cmp
mov
movl
fisubs
cld
repz
push
hlt
dec
lcall
loop
add
loop
jae
out
lock
mov
ss
xor
add
sub
xchg
sub
jae
in
psubd
add
inc
jmp
insb
sbb
pop
mov
movsl
aaa
xor
push
sbb
in
jg
in
sub
jmp
and
add
jmp
add
cli
mov
pop
daa
shlb
test
push
loope
and
mov
push
inc
push
fldcw
jb
adc
ficoml
add
fiadds
jmp
movsb
inc
cld
push
fiadds
add
add
shlb
std
push
orl
inc
adc
fnstsw
xchg
push
add
and
loop
and
loop
or
add
out
add
mov
in
dec
xor
and
idiv
and
add
mov
idiv
ret
setge
test
adc
sti
xor
inc
hlt
das
pop
lahf
stc
clc
daa
pop
xchg
jnp
mov
xor
adc
mov
add
xchg
mov
add
in
nop
pop
xchg
add
push
ja
xlat
adc
cmp
stc
xor
cmpb
call
lods
mov
push
push
pusha
pop
insb
cmc
push
push
movsb
jbe
inc
cmp
xchg
ret
rclb
cmp
pop
aaa
rclb
pop
negb
mov
fsubrp
mov
pop
sbb
ljmp
cmc
icebp
pop
adc
fs
test
xlat
repz
icebp
daa
adc
sub
jnp
xchg
jo
sbb
pusha
cmpsb
clc
pop
int3
outsl
mov
iret
xchg
shlb
push
add
je
xchg
adc
fstpl
pop
push
fwait
sbb
inc
sub
hlt
push
fbld
inc
icebp
dec
adc
fst
ss
mov
out
add
das
adc
test
add
imul
sub
add
add
jmp
insb
lcall
jae
mov
mov
insb
fiadds
mov
cmpsb
inc
lcall
inc
rcll
enter
push
push
add
and
sub
cs
mov
add
xor
aam
call
test
popf
fucomip
test
adc
popf
faddl
mov
pop
testb
xchg
adc
add
add
popa
imulb
adc
loop
push
dec
movsb
adc
adc
inc
into
sub
adc
in
mov
cmp
xor
les
fcompl
pop
mov
in
loopne
or
xor
jnp
cmovo
mov
inc
dec
ret
imul
fnstsw
add
arpl
cli
jns
push
sti
cmp
cmovo
inc
dec
and
in
push
data16
adc
jae
std
dec
pop
mov
cli
xlat
mov
xor
addl
pop
or
out
mov
xchg
shlb
xor
aas
ret
out
js
cli
adc
stos
mov
je
inc
cli
push
lods
or
pop
inc
mov
dec
xlat
fnstsw
add
insb
xchg
lds
ret
xor
dec
loope
sarb
xchg
add
shll
inc
das
dec
jmp
pop
mov
xor
shr
add
fimuls
sbb
call
arpl
push
mov
mov
fsubp
add
dec
fmull
sbb
pop
cmp
shll
and
add
xor
add
and
stc
xchg
jns
xlat
stc
sbb
adc
jg
pop
shl
push
add
sub
mov
sub
add
sub
mov
stc
ds
stc
cmp
add
push
sti
es
hlt
stc
hlt
sbb
inc
jmp
cld
inc
add
xor
add
mov
dec
je
rcll
mov
stc
aas
add
mov
cmp
in
fldl
adc
cmp
xchg
insl
add
xor
sub
push
fimull
xor
pop
or
fimull
pushl
adcb
test
out
pop
fiadds
lea
std
ljmp
stc
incl
push
add
xor
ret
push
mov
pop
in
into
fldl
push
add
loopne
mov
adc
pop
movsl
data16
xchg
notb
push
cwtl
jns
fnstenv
popf
xlat
in
movb
fildll
sti
xor
mov
out
roll
das
out
fadds
cli
mov
cmp
and
adc
cmp
jns
pop
mov
dec
sub
ja
adc
cld
sub
mov
out
shll
mull
std
xchg
addb
je
lods
fidivrl
imul
ret
xor
fisubrs
leave
mov
clc
bound
shlb
adc
frstor
and
pusha
ds
pop
jg
add
and
fisubs
pop
rcrb
bound
stc
iret
push
push
mov
iret
xchg
stos
mov
sahf
loop
mov
out
push
pop
out
das
inc
out
mov
call
jle
aad
mov
mov
aam
sub
pop
cwtl
jmp
mov
mov
shl
cli
scas
je
add
movsb
dec
in
mov
inc
sar
jle
mov
jb
std
in
xchg
xor
mov
das
sub
in
ret
jno
shll
int3
ja
inc
sub
cld
or
inc
jmp
and
push
insb
outsb
push
inc
xchg
cli
les
fs
sar
push
fstpt
push
fcoms
add
jg
add
add
lcall
push
dec
shll
test
dec
sbb
xchg
pop
jl
push
or
loope
xor
out
inc
xor
jne
xchg
adc
mull
add
adcb
sub
clc
outsb
pop
pop
jno
je
jno
inc
adc
loope
lea
add
cld
call
mov
incl
inc
inc
hlt
xchg
sarl
mov
mov
std
std
out
jge
stc
cmp
push
pop
aam
mov
jmp
mov
repnz
std
test
xor
loope
cmpl
mov
lds
inc
sub
xor
mov
int
push
mov
pop
popf
das
inc
add
stos
jns
dec
test
sbb
xchg
cmovo
cmp
jae
mov
jle
movmskps
cmp
dec
mov
xorps
cmpsl
add
and
add
push
add
and
xacquire
out
frstor
je
push
add
rolb
loopne
divl
sub
mov
lret
mov
mov
add
jmp
es
xor
outsb
jae
mov
out
cmp
pop
call
push
fstpl
call
mov
test
mov
mov
hlt
lock
rdtsc
clc
fsts
mov
or
xlat
aaa
roll
mov
in
dec
sar
xchg
outsb
pop
cmpsl
popf
sub
fidivs
jmp
mov
add
add
adc
push
in
push
pop
lds
jb
leave
push
or
jecxz
jnp
fstl
gs
inc
enter
dec
adc
sbb
lret
aaa
arpl
mov
adc
data16
push
lret
pop
fsubp
add
sarb
or
clc
decl
aam
pop
call
ficomps
and
test
or
inc
xchg
xchg
xchg
imul
xchg
movsb
cmp
rcl
ret
adc
loop
pop
test
add
mov
mov
adc
test
add
jne
mov
adc
aad
add
gs
lcall
hlt
inc
add
add
push
mov
insb
mov
sbbl
std
sahf
xlat
hlt
inc
add
adc
mov
inc
ja
sahf
xchg
hlt
inc
add
pop
sbb
adc
ret
in
mov
mov
testl
mov
inc
das
push
fadd
in
mov
das
and
add
pop
jnp
add
adc
les
out
cmp
add
ja
inc
add
add
ret
das
adc
les
jmp
testl
das
jg
pop
outsl
fiadds
bound
cmpsl
add
jg
adc
in
sbb
bound
repnz
add
test
inc
das
jg
push
out
fldl
insb
sbb
call
movsl
and
jg
sbb
fldl
bound
daa
add
lds
jg
sbb
fldl
in
icebp
daa
add
out
inc
das
jge
pop
outsl
fiadds
jmp
call
add
push
add
push
add
dec
call
sub
pop
and
ficomps
mov
cmp
test
repz
dec
adc
cmp
test
add
jmp
lahf
mov
aam
cmp
sub
addr16
icebp
cmp
add
lret
scas
or
movsb
in
fstpl
dec
ret
mov
adc
sub
add
sbb
mov
gs
push
inc
pop
adc
or
add
movsl
test
repnz
add
sbb
mov
cmc
or
adc
ficompl
mov
cmc
jmp
out
ficompl
mov
movsl
inc
rolb
ficoml
loop
cwtl
mov
add
movsl
and
inc
push
cmp
mov
into
dec
push
inc
das
icebp
in
addr16
add
jg
add
das
pop
add
call
push
stc
repz
and
aam
xor
vpunpcklqdq
jl
das
mov
jno
std
cli
jns
jno
out
mov
lahf
xchg
add
adc
push
mov
les
das
movsb
shlb
pop
int
in
mov
pop
jo
add
jle
stos
cli
movsl
outsl
mov
mov
add
stos
inc
das
pop
mov
inc
das
in
and
lods
cmp
mov
mov
xchg
sbb
lods
xchg
dec
cwtl
lret
stos
out
fbstp
mov
sub
les
jns
and
or
sub
adc
jg
cmpsl
add
shll
aad
push
or
pop
mov
add
add
jmp
out
cmp
cmp
sub
mov
sub
mov
mov
fs
xchg
stos
fldt
jbe
sub
std
sbb
lds
fidivs
dec
and
cmp
and
into
jb
cld
inc
add
cltd
xor
mov
add
outsb
filds
mov
jg
dec
xchg
lods
ret
stc
jmp
sub
push
cli
pop
arpl
adc
inc
push
add
inc
sti
into
decl
cmp
or
insl
sbb
adc
mov
das
divb
js
or
ja
cmp
pop
add
pop
sub
inc
add
ja
or
sbb
jns
add
add
sub
dec
xor
cs
push
das
arpl
outsb
fiadds
add
ja
or
in
xor
fiadds
incl
jl
call
or
pop
mov
cld
add
addb
jl
xor
mov
out
add
jg
movsl
adc
cmp
ret
dec
lea
add
push
sti
jns
dec
sti
or
cmp
or
jb
ss
xor
mov
sbb
jge
shlb
mov
mov
jno
lock
cmp
cmpb
cmp
test
clc
addr16
aaa
incl
out
adc
das
fisubrs
daa
pop
shll
sub
rorl
outsl
in
daa
add
add
pushf
sbb
inc
pop
lret
adc
fsubp
push
jge
pop
jg
lds
add
ficoms
add
add
das
fdivp
pop
inc
enter
mov
lods
jecxz
mov
outsl
adc
inc
das
test
add
fidivs
ret
enter
movsl
pop
and
and
push
push
and
pop
lods
test
mov
sti
rorl
add
add
jle
dec
add
dec
fisubrs
sub
add
cmp
push
sub
add
sub
stc
push
inc
ret
adc
and
add
ret
jae
outsb
pop
cli
mov
mov
daa
enter
dec
mov
sahf
push
sub
mov
xchg
xchg
sub
in
fimuls
jg
sbbl
stc
mov
sub
adc
push
add
add
sub
push
cli
fidivs
push
xchg
in
adc
and
mov
xchg
add
popa
prefetchwt1
jp
bound
cli
mov
test
pop
ja
push
jno
or
adc
lcall
jne
js
dec
pop
sbb
test
or
inc
xchg
js
jb
int3
mov
ret
fcmovu
mov
lods
mov
push
test
sbb
das
inc
add
pop
enter
clc
jnp,pn
pop
sbb
stc
je
lret
mov
ret
aad
subb
push
fmuls
sub
out
mov
out
mov
xor
mov
repnz
xor
pop
fcmovne
jle
sbb
add
je
sub
pushf
out
mov
sub
outsl
jle
sbb
mull
repnz
add
xchg
sub
mov
jae
in
jnp
lods
test
out
pop
add
jno
ja
fs
lcall
xchg
jle
pop
test
push
ret
std
incl
pop
adc
xchg
add
push
xchg
imul
add
fbld
loopne
add
push
fbstp
jmp
add
out
into
daa
add
scas
data16
inc
xor
lods
add
das
fmulp
xor
jbe
add
add
fidivs
dec
mov
sbb
les
orb
das
into
sti
clc
mov
sti
shlb
movsl
aad
in
jbe
add
push
xlat
loope
movsl
mov
imul
loopne
add
adc
xor
adc
add
repz
cli
hlt
dec
iret
inc
jmp
sub
cli
fcoml
adc
cmp
add
or
xchg
icebp
jl
bound
sub
sbb
xor
pusha
popa
mov
adc
sub
adc
inc
or
sub
push
pop
cmp
push
xchg
mov
nop
ret
fsubr
sub
test
mov
pop
add
sbb
repz
out
pushl
jp
sahf
fnsave
adc
pop
mov
xor
pushl
or
dec
sbb
loopne
add
ret
sub
mov
push
inc
fnstsw
clc
push
aad
sbb
cli
je
imul
jg
jge
mov
fs
je
pop
add
push
leave
mov
adc
add
add
jecxz
lret
test
jge
mov
jle
pop
mov
in
xchg
cld
das
lds
add
sahf
je
cs
clc
push
negl
test
test
cld
push
adc
je
inc
daa
jne
je
xor
clc
push
mov
stos
lods
cld
popf
jle
enter
add
cld
add
das
inc
dec
cld
data16
push
mov
stc
dec
sbb
hlt
jle
sbbb
jp
sahf
xor
mov
adc
sahf
xor
fwait
sahf
adc
xchg
cmp
inc
push
testl
push
sub
inc
out
lock
sbb
jbe
add
pop
mov
repz
cmpsl
add
add
loopne
jecxz
cli
pop
aas
or
je
push
roll
or
les
xor
mov
das
cmpsb
cmp
andb
add
dec
pop
mov
das
hlt
cmp
pop
inc
repz
hlt
movzbl
add
mov
loope
jmp
aas
mov
jae
mov
std
adc
xor
lock
push
add
mov
add
push
cmp
iret
cli
movsb
and
loop
sub
insb
lock
or
push
xchg
adc
int
pushf
mov
mov
or
and
stc
movb
adc
sbb
add
mov
adc
jns
jmp
cmp
push
xchg
and
sbb
push
mov
add
add
sbb
jp
fildl
notb
cmp
push
ret
dec
mov
out
and
add
cmp
pop
and
push
push
or
and
pop
inc
filds
push
or
faddl
add
cmc
dec
mov
imulb
popa
xchg
add
jg
in
add
mov
inc
fildl
je
call
test
jae
pop
icebp
pop
sub
xorl
dec
cltd
cli
sub
std
pushl
dec
test
stos
dec
popf
stc
rolb
insb
push
inc
lcall
push
inc
mov
jb
push
xchg
idiv
nop
cmp
out
les
add
inc
add
sub
into
icebp
mov
adc
add
sbb
sub
cmc
stc
cmp
sbb
mov
daa
add
cmp
jle
pop
das
fisubrs
je
daa
add
cltd
sbb
mov
add
arpl
dec
dec
ficoms
lahf
inc
push
fiaddl
imul
movsl
xchg
pop
sahf
push
mov
subb
movsl
sub
nop
out
lret
xchg
sahf
jge
and
add
mov
push
push
icebp
or
adc
or
add
or
fiaddl
addr16
push
and
mov
sahf
aas
test
mov
and
jne
add
dec
sbb
add
cs
adc
lret
aad
fidivrs
loope
cli
fcompl
inc
jmp
add
add
push
sub
pop
xor
mov
mov
cmpsl
adc
mov
imul
xchg
das
adc
aas
cmpsb
lods
orl
rcrb
faddl
xchg
cmpsl
enter
xor
aad
rsqrtps
sbb
test
fwait
sub
pusha
sbb
and
js
sbb
jmp
fiaddl
test
or
add
mov
and
and
loop
inc
fiaddl
add
or
push
test
call
push
int3
add
pop
xchg
sarb
je
or
fbld
lds
and
push
iret
mov
adc
push
in
add
push
push
add
xlat
pop
leave
or
mov
loope
dec
xor
das
mov
jae
mov
adc
xchg
jne
jae
fsts
icebp
jnp
mov
mov
mov
in
lods
std
push
movsb
pop
xor
fisttps
lea
cmp
cli
movsb
jns
xchg
movsl
arpl
imul
add
xchg
push
xchg
cwtl
stc
jo
dec
or
add
xchg
cli
mov
adc
xchg
stos
xchg
decl
add
outsl
fldl
jp
out
test
cmp
fwait
cmp
fiaddl
gs
nop
lcall
pop
xor
divb
insb
mov
fisttpl
pop
push
call
lods
js
jno
mov
repz
adc
sub
call
add
std
mov
fs
sbb
pop
or
mov
adc
mov
rdmsr
pop
adc
outsb
leave
push
dec
out
add
lds
pop
clc
bound
sbb
sub
pop
shlb
add
dec
mov
test
pop
sarb
fadds
in
jo
out
cmp
or
jb
pop
stos
xor
push
jb
add
les
clc
in
ljmp
lret
push
or
mov
jo
jp
inc
mov
push
cmp
mov
fs
mov
xchg
pop
shll
pop
or
pop
jne
pop
incb
inc
sub
call
mov
or
out
inc
adc
add
icebp
into
shll
mov
mov
mov
and
addr16
lcall
and
in
popf
push
test
flds
add
cmpb
push
push
divb
loope
imul
xchg
dec
stc
add
mov
rorb
inc
add
jmp
je
mov
add
mov
or
sub
or
add
sar
ret
sbb
je
nop
adc
cmp
and
popf
inc
out
cwtl
stos
les
and
gs
sbb
movsb
dec
lods
cmc
rorb
sub
clc
jg
mov
sub
mov
xchg
jge
adc
movsl
aad
pop
xchg
out
sbb
seto
daa
add
add
fucom
xor
repnz
jge
mov
ret
outsl
pop
scas
out
pusha
mov
pop
and
inc
scas
pop
orb
add
push
rclb
lods
sarb
frstor
cs
sub
pop
pop
filds
out
pop
shrl
cmc
bound
add
lods
cld
fistpll
call
aas
or
mov
add
int3
push
xor
push
add
add
fmulp
cpuid
xor
add
pop
jg
push
in
das
push
into
call
test
sub
xor
das
cmp
test
mov
stc
jmp
xchg
fs
or
push
add
dec
lcall
add
fmuls
jmp
pop
pop
inc
add
nopl
ds
test
add
je
stc
jmp
sbb
subl
lods
stc
jbe
add
test
cmpsl
arpl
sub
cmpsl
je
and
and
push
outsb
fstl
add
and
cmpb
cmc
mov
call
jge
cmp
add
dec
sbb
cld
inc
loopne
mov
add
sub
jmp
jmp
cmp
push
cmp
shr
and
and
cmp
shr
inc
outsb
push
cmp
xchg
jmp
dec
sub
cmp
sub
cmp
xchg
jmp
push
ds
add
jmp
push
in
cmp
das
sbb
sub
mov
mov
out
ss
cli
movsb
pop
add
out
iret
xchg
cli
add
mov
fsts
inc
cmpsl
cmpsl
cld
push
dec
movsl
pop
and
mov
mov
sbb
mov
dec
orl
fwait
cli
or
xor
mov
or
inc
sti
das
mov
mov
mov
mov
inc
repz
jns
jne
cld
loop
xor
cmpsb
mov
bound
push
mov
add
lret
add
fidivrs
xchg
inc
ficompl
das
stos
fdivl
jb
out
push
sbb
add
adc
subb
cmp
pop
xchg
inc
pop
xor
inc
stos
repnz
inc
inc
ljmp
stos
aaa
sbbl
stos
outsl
dec
add
push
out
orl
add
sahf
fs
test
add
jl
call
xchg
mov
add
xor
call
mov
fiadds
daa
cmpsl
cmp
fiadds
ret
sub
add
push
fisubrl
add
aam
push
sub
add
cmpsb
push
andl
inc
fldenv
sbb
mov
test
and
add
mov
cltd
or
popf
mov
pop
rcrb
and
lret
dec
mov
fucom
dec
sub
repnz
push
out
dec
imulb
lret
mov
insb
push
sbb
mov
popa
out
je
sub
mov
sub
mov
cmp
sahf
faddl
add
add
jge
iret
adc
lcall
dec
rcll
dec
divb
inc
mov
jge
fildl
decl
dec
cld
call
cmc
add
lret
sub
add
pusha
cmp
mov
mov
adc
cli
mov
setno
mov
xor
outsl
jl
mov
xor
cld
data16
cmp
int3
neg
jge
push
fdivrs
xor
cld
das
scas
or
lds
in
mov
sub
mov
adc
or
pusha
mov
add
pusha
inc
adc
movsb
jae
lock
mov
cmp
adc
test
cmpsb
orb
cmpsb
cld
xchg
add
mov
stos
mov
dec
add
cwtl
test
subl
and
cmpsb
out
insl
or
adc
cmpsl
cld
imul
call
les
fiadds
stc
xor
cmpsl
add
outsb
out
das
xor
mov
shlb
add
cmp
add
sub
mov
mov
sub
test
fucom
add
pop
stc
adc
fxam
add
ret
push
inc
in
cld
push
inc
in
test
bound
cmp
pusha
xor
adc
out
jge
xchg
aas
jle
inc
fiadds
imul
aas
jle
fidivs
sbb
out
sub
add
stos
xlat
add
cmpsl
gs
in
popa
mov
sti
add
mov
stc
push
sbb
cs
mov
daa
out
loop
jp
sub
dec
push
cmp
push
call
dec
push
and
push
push
dec
add
loopne
icebp
sbb
push
jmp
dec
jae
clc
push
jge
jns
inc
add
loopne
mov
mov
or
push
cld
dec
adc
testb
xor
pop
and
loopne
push
mov
and
call
das
inc
or
cmp
or
push
sti
cmp
cmp
xchg
adc
mov
or
jp
fbstp
ja
les
mov
mov
leave
test
mov
mov
lods
add
daa
mov
cs
and
add
mov
je
cld
inc
and
mov
ljmp
movsb
or
cli
mov
fisubs
pushf
xchg
cmpsb
fimull
js
mov
inc
push
ror
xor
movsb
mov
insb
cli
xlat
xor
bound
sti
stos
in
xchg
mov
add
push
and
sbb
nop
pop
push
movsb
jp
fcomps
adc
push
jmp
cmp
adc
push
xchg
pop
add
push
pop
inc
dec
test
fbstp
data16
js
stc
fbstp
jmp
call
inc
or
xchg
fldenv
add
les
xor
stc
sbb
cmpl
rcr
insb
fidivrs
jmp
fiadds
out
sub
scas
mov
je
sarb
sub
bound
or
sbb
cli
hlt
cwtl
push
pop
movsl
movsl
sub
jb
mov
jge
mov
mov
cmpsl
stc
bound
jae
sbb
add
cli
push
ret
add
add
push
negb
and
add
cmpsb
stc
test
int
lea
mov
jmp
xchg
out
mov
stos
pop
mov
xor
rolb
dec
pop
sti
gs
hlt
je
push
inc
or
lahf
xor
stos
test
shrb
sbb
dec
repz
sub
dec
loope
add
sar
call
idiv
fistpl
cld
xor
ljmp
lcall
ret
mov
xchg
jo
mov
dec
pop
push
stos
call
pop
cmp
test
test
std
test
mov
arpl
ror
sbb
jge
pop
lret
popa
mov
cmc
inc
leave
stc
jg
std
or
inc
mov
sub
add
scas
cmp
jb
xchg
clc
mov
or
out
xor
scas
in
cli
jb
xchg
clc
mov
sub
out
into
pop
add
dec
enter
pop
std
mov
mov
mov
mov
das
and
mov
adc
repnz
and
dec
jge
push
mov
mov
inc
jge
push
inc
ret
stos
mov
xor
adc
ret
cmp
out
nop
fsubs
dec
sub
inc
std
ljmp
add
cmp
inc
addr16
out
push
pop
dec
aam
add
in
push
push
imul
xchg
jmp
icebp
xchg
test
sub
xor
jmp
in
int3
rolb
out
inc
pop
test
aas
popf
cmp
jmp
inc
cltd
je
out
ja
test
and
xchg
cmpb
adc
sbb
cs
shrb
sahf
adc
cld
fnstsw
xlat
cmp
and
pop
in
incl
jns
xchg
loope
push
sarb
or
add
push
sbb
xorl
sub
cwtl
stc
call
and
cs
or
sub
mov
add
push
loope
test
pop
stc
call
pop
jle
dec
loop
add
loopne
add
loopne
mov
out
push
sbb
and
inc
pop
dec
add
sarb
incb
add
pushf
jge
das
test
sub
ljmp
pusha
pop
fldenv
inc
outsl
leave
call
inc
and
adc
daa
add
xchg
mov
and
aam
pop
out
movsl
or
xchg
sub
cld
mov
loope
das
mov
sub
test
dec
jmp
std
je
lds
xchg
test
inc
movsb
add
das
test
out
ja
cli
mov
test
out
cmp
jmp
or
test
add
lock
stos
and
loopne
stos
fists
cs
aas
mov
mulb
jno
dec
push
fucom
add
push
mov
sti
lods
scas
je
and
fdivrs
ret
insb
ret
sub
fmuls
push
add
adc
sahf
xor
cmpsl
clc
inc
fwait
xor
test
or
aam
fmull
testb
inc
cmp
mov
sbbb
imul
add
xchg
je
xor
sbb
out
out
sbb
jmp
sub
repnz
jb
jmp
test
fiadds
jmp
sub
repnz
pop
jb
jmp
test
fiadds
jmp
sub
mov
ret
je
sbb
or
cld
push
or
pop
sub
rclb
adc
cmpsl
cli
call
jp
sbb
sbb
fnstsw
andl
jl
repnz
or
cli
incl
add
call
push
add
notl
push
and
mov
pop
adc
cmp
add
adc
add
jne
insl
jge
scas
loope
add
inc
adc
out
iret
pop
testb
pop
divb
xchg
test
faddl
ljmp
xchg
das
push
inc
add
cs
xchg
and
cmp
mov
xchg
mov
xchg
xchg
sahf
xor
xchg
movsb
mov
ret
inc
pop
or
push
cmp
sti
stc
dec
and
xlat
out
jge
cli
scas
or
or
cmp
cli
insb
cmpl
mov
in
stc
loopne
or
add
pushf
sub
fidivs
and
jmp
loopne
out
das
add
dec
and
repz
test
push
test
fiadds
das
xchg
jnp
scas
fsubp
add
es
sub
fldenv
fidivrs
out
in
shl
jge
clc
inc
cs
jg
sbb
ljmp
addl
adc
jo
in
jge
cmp
aas
mov
add
ja
stc
gs
or
insb
rolb
adc
pop
or
xchg
push
out
push
or
push
jbe
xchg
jae
lods
sub
data16
or
xchg
data16
mov
mov
fcoms
push
test
inc
leave
std
xchg
xorl
lret
adc
rolb
xchg
jae
movsl
sub
mov
mov
in
mov
add
out
mov
mov
push
and
cmp
xchg
pop
cmpl
xor
and
test
lods
scas
orb
dec
or
dec
pushl
or
addr16
sldt
imul
shlb
jmp
loope
lret
cltd
add
in
lea
adc
test
lea
lock
cmc
mov
bound
and
push
mov
addl
xor
push
cli
cmp
inc
das
cwtl
pop
sarb
add
inc
mov
or
stc
lcall
add
mov
int
xor
sub
jecxz
mov
test
sbb
cltd
inc
and
pop
out
leave
movsl
je
addb
pop
xor
shll
inc
test
cli
inc
rorl
inc
das
cmp
mov
movsl
inc
and
sarl
inc
and
add
xchg
pop
aad
pop
mov
testl
pop
jge
and
ret
shlb
mov
mov
sub
pop
std
push
mov
cld
data16
popa
cli
pop
mov
out
sbbl
inc
inc
xor
xchg
in
cld
xor
sub
faddl
mov
mov
add
cmp
jbe
cmpsb
sbb
call
fsubl
in
movsb
or
je
mov
bound
fiadds
xor
mov
jmp
dec
jecxz
mov
dec
fildl
jge
pop
fdivs
xchg
jle
cwtl
cmp
rcll
sub
fldl
jmp
xor
push
mov
add
sbb
ss
fiadds
push
mov
xchg
sub
add
add
daa
loop
call
fiadds
and
loope
data16
add
mov
sub
loope
loopne
pop
scas
or
dec
mov
in
in
shl
loopne
imul
psubw
mov
in
gs
iret
imul
mov
sbb
or
loopne
data16
adc
xor
loopne
mov
comiss
lret
adc
daa
movsb
dec
rorb
or
xchg
dec
adc
movsb
sbb
xchg
inc
push
or
cmp
popa
cmpsb
lock
daa
xchg
jmp
data16
jae
xchg
or
shlb
cli
mov
adc
sub
lret
add
or
sub
push
inc
and
xchg
fcompl
std
push
movsb
sub
push
mov
jle
je
xchg
outsl
cli
and
mov
out
frstor
rcll
out
sub
outsb
je
mov
add
mov
in
jnp
pop
mov
hlt
or
in
xor
pop
or
jmp
insb
inc
pop
out
insb
adc
js
mov
inc
and
call
inc
sub
xor
test
pop
std
es
fldl
in
js
push
ret
js
push
test
push
je
enter
cs
repz
add
fidivrs
push
push
in
add
adc
jns
xor
cmpsb
mov
in
xchg
adc
ds
add
jmp
fucomi
mov
stos
das
ficoms
push
adc
icebp
std
popa
inc
roll
rcl
aam
in
inc
jmp
and
add
adc
push
add
stc
mov
cli
adc
sub
hlt
mov
rolb
add
jae
xor
jmp
mov
sub
add
jmp
fiaddl
push
xchg
gs
call
dec
adc
stc
test
add
inc
push
pop
mov
incl
out
inc
add
leave
xchg
stc
push
dec
add
inc
clc
es
push
rcl
jmp
lods
or
add
pop
mov
call
icebp
inc
add
sahf
cmc
push
and
icebp
jmp
adc
adc
stc
subb
clc
je
inc
sti
adc
jmp
add
xchg
hlt
jmp
dec
sub
push
xchg
mov
pop
fmull
out
or
sti
inc
mov
jo
aaa
std
ss
adc
das
sarl
add
pop
jl
mov
fcoms
cmp
add
add
enter
jo
cmp
inc
push
test
sub
pop
mov
push
inc
das
faddl
inc
add
shl
add
xchg
lcall
push
call
in
adc
add
mov
outsl
cmp
call
adc
xchg
mov
jg
adc
xor
xchg
cmpl
mov
adcl
aam
cmp
out
rcr
cmpsl
sbb
cmp
adc
jmp
pop
cs
push
pop
hlt
daa
add
mov
sub
ficomps
pop
xor
inc
adc
out
sbbl
jge
sbb
fdivl
xor
sub
add
add
push
push
mov
icebp
aam
insb
mov
sbb
adc
sbb
inc
adc
xchg
aas
add
mov
jnp
mov
jnp
stc
jl
mov
bound
sahf
pop
mov
xlat
add
ja
sbb
inc
cmc
sbb
or
loope
rorb
push
and
in
sbb
add
pop
cmp
sub
add
jnp
push
mov
jne
fstl
jne
es
icebp
push
divl
or
call
int
pop
pop
push
out
push
popf
jp
scas
movsb
sub
scas
mov
inc
push
or
add
cmp
fldl
cvtps2pd
cli
call
mov
mov
push
or
movsl
pop
popl
add
loop
lcall
loop
jne
or
call
sub
test
add
ljmp
lods
inc
or
lock
je
add
neg
std
lock
mov
push
popf
rcrl
xlat
popa
mov
imul
jbe
dec
cmp
inc
or
pop
sub
lcall
fildl
add
enter
enter
jbe
inc
aaa
and
sub
or
ja
add
xlat
push
pop
call
adc
add
out
rclb
sti
and
xchg
sahf
cmc
ret
cwtl
xchg
pop
mov
mov
shr
adc
jo
test
push
mov
ja
repnz
out
fnsave
shll
out
add
add
frstor
xchg
adc
rcll
jbe
or
push
add
out
xchg
fucomp
mov
adc
jo
cmp
adc
cmp
pop
jno
sahf
add
in
xchg
fldlg2
sub
test
ficoms
add
jg
adcl
add
stc
aam
repnz
jmp
filds
mov
sub
mov
stc
ss
out
sub
or
cmc
jmp
sub
jmp
insb
mov
jle
jmp
add
mov
push
mov
sub
pusha
in
push
sub
push
pop
mov
sti
add
testb
pop
cmp
out
or
incl
add
push
mov
incl
div
push
jmp
lods
std
test
xchg
xchg
mov
div
push
leave
test
lea
mov
icebp
std
jmp
stc
testb
stc
call
mov
jne
pop
test
jns
cmp
je
jl
loop
add
testb
add
cld
stc
mov
fsubrl
cld
mov
add
or
out
inc
jo
push
out
jge
mov
jbe
jmp
push
int
xchg
or
jns
popa
adc
jbe
cmp
jbe
fdivs
xlat
inc
sbb
addl
adc
clc
inc
or
mov
mov
sbb
mov
int
mov
xchg
cmc
add
sbb
int
stos
and
or
inc
ret
xor
ljmp
mov
std
call
jle
cli
loopne
fimull
rorb
xchg
insl
jo
add
test
inc
push
sub
jns
pop
xchg
test
fsubp
aad
div
ljmp
and
hlt
sti
push
shl
testl
pushl
test
repz
sarb
int
andb
or
ljmp
sahf
add
mov
aam
mov
loopne
imul
fdivr
jmp
and
stc
jb
pop
repnz
jp
dec
testl
pop
rclb
add
mov
xchg
les
imul
sar
outsb
xchg
stc
pop
jl
inc
in
sbb
bound
jnp
adc
fiadds
insb
fwait
bswap
imul
pop
inc
std
xchg
test
fwait
shr
mov
es
add
idivb
loop
push
lea
repz
mov
push
push
add
push
fiaddl
or
mov
add
fwait
add
xor
div
mov
push
pop
iret
sbb
add
fdecstp
ljmp
bound
cmp
adc
pop
sahf
stc
orb
mov
or
inc
xor
mov
fldl
add
cmc
sub
rcrb
ljmp
inc
jp
pop
inc
jp
add
movsb
testl
orb
sub
xor
inc
stos
jp
shrb
cli
inc
mov
das
ja
cli
and
notl
or
xchg
mov
scas
jbe
fcomps
or
ja
shrb
leave
enter
push
movsb
sub
xlat
cmp
inc
flds
lock
lea
mov
cli
shrl
gs
fisubs
lock
movsb
push
xchg
fdivrp
push
or
or
push
subl
out
jnp
cwtl
push
shr
out
xor
cli
rolb
pop
pshufw
shll
push
loop
das
push
mov
pop
push
push
jmp
add
push
and
fists
cld
filds
cmpsb
pop
add
mov
out
stos
popf
repz
push
or
jl
adc
stc
jne
add
fimuls
xor
stc
xchg
pushf
dec
imul
cs
and
add
add
in
jecxz
push
push
add
test
imul
subl
lds
xchg
in
test
test
inc
jbe
jmp
dec
scas
aad
add
and
and
sti
insb
jg
push
leave
xlat
dec
sbb
mov
sbb
movl
roll
jmp
cmp
adc
add
and
and
adcl
push
sbb
mov
je
xchg
ljmp
sub
jae
addb
ret
add
sub
add
cmc
testb
idiv
insb
ljmp
jmp
fisubrl
fistl
notl
xchg
lcall
cltd
idivb
jb
add
je
add
cmc
je
ljmp
push
imul
das
jle
jae
lea
xor
bound
pop
pop
jo
sbb
lret
add
addr16
mov
add
cli
clc
add
pop
push
inc
jbe
mov
clc
jp
jbe
stos
hlt
cmc
out
andb
adc
call
stos
les
mov
popf
or
sub
arpl
aam
adc
jns
jmp
jg
jae
mov
or
sub
mov
add
fidivrs
push
stc
idivb
out
jge
jmp
xchg
out
bound
sti
pop
lahf
lcall
and
int
lods
mov
jl
fstpt
aam
ds
call
add
out
das
sbb
cld
rclb
pop
pop
pand
adc
adc
es
dec
sahf
rcrb
mov
add
mov
fistpll
popa
add
jo
sbb
dec
call
adc
sub
inc
jmp
jmp
push
push
dec
in
inc
pop
jbe
inc
movsb
and
jb
jecxz
lods
nop
sub
aam
jmp
clc
jmp
adcl
arpl
sub
in
in
aad
dec
js
test
sarb
aas
add
aad
pop
sbb
roll
ret
pop
fs
mov
sub
jns,pt
lods
arpl
js
test
jae
add
mov
pop
lret
add
rolb
mov
mov
push
push
popf
xchg
sbb
clc
xchg
mov
push
mov
adc
fiadds
or
add
mov
addb
imull
cli
sti
mov
dec
loope
leave
adc
loop
add
fiadds
jne
rcl
lcall
adc
jnp
or
push
pop
pop
out
and
add
add
pushl
dec
enter
push
add
imull
outsl
cli
stc
sbb
mov
or
das
xchg
out
mov
xchg
fwait
xrelease
jns
call
cmpsl
mov
fdivr
enter
jge
loopne
mov
add
aas
inc
xchg
adc
jno
jmp
inc
cmc
test
mov
lods
mov
or
xchg
fucomp
jmp
xor
add
gs
add
and
adc
imul
mov
or
inc
and
aam
jo
jmp
fsubp
add
push
rol
or
or
orl
inc
pop
in
fwait
daa
inc
or
movsl
add
out
das
xchg
xor
loope
add
sbb
add
xlat
add
jecxz
stc
cmpsb
lds
xchg
cmpb
sbb
loope
repnz
rcl
cld
jl
pop
ret
faddl
bound
shr
dec
inc
jmp
mov
fistpll
xor
stc
mov
jae
lods
sbb
stc
fimuls
push
push
ficoml
push
mov
js
lahf
cmpsb
add
xchg
dec
rcrb
ss
out
cmp
sub
adcb
rol
or
cmpsl
mov
add
and
inc
xchg
sti
aaa
fdivr
cmp
std
je
fs
sbb
jo
adc
loop
fcomp
in
fisubs
dec
pushl
ljmp
adc
add
jo
dec
push
loopne
dec
inc
out
inc
or
push
pop
sub
push
add
pop
jo
adc
fidivl
jne
nop
lret
push
outsb
into
mov
loope
push
mov
push
adc
test
ljmp
aaa
pushf
mov
repnz
mov
cmc
add
lret
flds
jg
inc
add
movsb
mov
int3
or
jnp
gs
dec
cmp
enter
xlat
repz
push
pop
xor
cmp
inc
out
and
cli
xchg
or
popf
cltd
xchg
aas
cli
inc
je
out
sti
adc
jle
push
out
sti
movsb
push
add
cli
inc
sbb
aas
das
lock
cmp
push
adc
das
pop
fsubp
clc
test
daa
add
sub
repz
into
imull
aam
add
mov
mov
add
add
data16
test
arpl
idivb
sahf
movb
jmp
fbld
pop
filds
jmp
xor
jne
push
mov
mov
inc
sahf
shll
testb
push
adc
sbb
mov
fnsave
test
add
mov
adc
add
insb
jge
add
mov
cli
pop
pop
pop
inc
loope
je
jns
fldl
jmp
ljmp
stos
sub
push
jb
pop
in
sbb
fiadds
cmp
fwait
call
xrstor
scas
ss
sub
pop
in
fimuls
dec
adc
arpl
jb,pt
loope
xorb
out
jecxz
sub
das
repz
add
das
dec
ljmp
xchg
jns
into
rcrl
add
fistps
jg
jl
mov
loopne
je
sub
lea
jmp
call
xor
daa
pop
mov
call
ficompl
outsb
push
int
cmc
cmp
push
fcomps
lea
mov
push
mov
or
sbb
mov
arpl
test
decb
and
lret
rolw
das
inc
add
adc
test
call
mov
or
sub
and
test
repz
dec
movsb
rorl
xchg
xchg
dec
xlat
out
push
push
or
mov
cmp
add
mov
add
das
lods
int3
jae
mov
int3
jae
or
mov
add
cld
mov
scas
cmpsl
xchg
pushl
push
call
das
jno
or
jno
insl
jmp
movsl
cmovns
jo
loope
jbe
aad
xchg
mov
clc
push
jno
push
pop
popa
insb
cmp
add
pushf
xchg
fiadds
popf
pop
or
xor
inc
sub
dec
lret
sub
jo
mov
jno
mov
sub
test
pop
cmp
clc
add
fs
imul
push
pop
pop
pop
jmp
shrb
addr16
pop
adc
add
lds
xchg
push
add
mov
adc
test
stos
or
jo
insb
stc
aam
add
jmp
xor
aad
sbb
pop
lea
shll
inc
icebp
fsubl
leave
mov
in
cld
pop
stc
scas
scas
xor
stos
jae
sbb
popa
dec
cltd
lret
push
addb
push
jae
lret
or
enter
adc
popl
add
sbbl
jl
add
cmp
in
roll
orl
inc
call
mov
popf
sub
call
push
push
mov
std
mov
bound
xor
lea
shl
jns
inc
or
mov
mov
cmpl
push
cmp
bound
pop
jbe
push
mov
std
push
scas
mov
add
inc
insl
arpl
sub
mov
add
loope
cmc
pop
imul
cmpsl
test
xchg
add
sti
push
add
sub
inc
push
mov
inc
dec
xchg
xlat
inc
lds
sub
or
enterw
lcall
mov
adc
xchg
lahf
stc
dec
je
cwtl
iret
out
xchg
fimull
sbbb
inc
add
daa
in
sbb
mov
das
test
cli
push
push
iret
out
push
jp
cld
inc
cli
cmp
je
fimuls
and
mov
or
inc
xor
mov
add
push
cmp
fsubp
mov
adc
aaa
mov
fsubp
mov
jge
ja
sbb
add
sahf
ljmp
lret
xchg
in
lock
add
mov
pop
daa
add
insb
mov
insb
fisubrl
lds
mov
mov
add
insb
mov
insb
fisubl
arpl
das
ficomps
insl
adcb
mov
insl
in
xlat
test
fiadds
iret
lods
sub
jns
pop
mov
xor
push
and
jle
sub
cs
adc
fldl
add
stc
mov
sub
int
or
icebp
and
sub
sub
das
sub
sub
add
mov
test
fldl
jmp
jo
test
inc
and
sbb
pusha
js
mov
bound
call
jecxz
add
test
xor
xor
adc
jmp
int
divb
xchg
cmp
or
stos
jno
mov
incl
jbe
lret
sbb
fwait
inc
dec
incb
xor
jns
lret
or
test
adc
call
cld
mov
lea
mov
pop
gs
mov
xchg
add
leave
ss
ljmp
jne
xlat
add
lds
cli
inc
mov
push
jnp
cli
cmp
jnp
xor
push
dec
mov
ss
cli
sub
mov
ja
or
lock
cltd
leave
push
inc
mov
dec
adc
leave
cmp
mov
cmp
aas
jae
nop
aas
je
lock
cli
jg
ljmp
lea
push
mov
adc
add
aaa
lock
mov
mov
das
jne
loopne
cmp
push
fisubrs
sub
inc
xor
mov
xchg
push
inc
jbe
xchg
hlt
cld
adc
js
sub
push
and
repz
cld
imul
sub
pushf
jle
pop
inc
dec
scas
jp
push
das
fidivs
subb
push
add
add
push
lahf
pop
cmpsb
sbb
pushl
loope
jl
shl
call
fisubrs
dec
shrb
sub
and
jmp
mov
add
add
mov
jb
scas
sbb
sti
jbe
push
jmp
je
mov
stc
push
cmp
mov
dec
add
ret
pop
push
sahf
jno
test
jge
test
sub
pop
fldl
test
jb
arpl
jge
pop
jb
mov
add
gs
fnsave
jp
into
xorb
push
loop
jge
pop
add
xchg
test
inc
xchg
addb
int
or
ljmp
inc
shlb
add
mov
push
loop
push
lahf
mov
mov
fildll
push
fs
out
stos
idiv
xchg
and
mov
or
addb
test
push
pop
popf
movsb
mov
in
push
incb
push
dec
or
je
in
hlt
jle
std
das
nop
fildl
mov
dec
gs
bnd
mov
les
jl
dec
cld
dec
add
dec
jl
adc
shll
push
inc
cld
inc
and
mov
cmp
jl
scas
xor
das
jne
cli
popa
or
jbe
or
inc
jns
push
jg
cmp
push
into
dec
cli
dec
hlt
inc
adc
jl
aas
mov
or
lea
add
jbe
and
add
fucom
fnstenv
pop
and
mov
rcrb
ret
and
xor
adc
push
pop
mov
sti
jnp
sar
outsl
or
jge
shl
pusha
cmovo
push
and
inc
pushf
stos
daa
and
into
pusha
mov
lret
dec
aad
jp
outsb
pop
pop
add
daa
ljmp
das
clc
call
daa
pop
push
pop
leave
xor
out
mov
xchg
add
stc
pop
lock
xlat
test
xor
add
aam
jmp
andb
in
stc
call
sbb
stc
jmp
cmc
test
stc
jge
sub
jle
sub
add
push
jbe
cltd
movaps
jbe
cmp
sub
jmp
clc
dec
out
cli
lods
push
flds
in
repz
jno,pn
mov
sub
sub
in
ss
sub
dec
add
je
jno
push
out
je
pop
mov
out
mov
call
dec
icebp
mov
mov
test
test
cmp
andl
xor
jl
mov
mov
mov
sldt
jmp
loopne
mov
lret
adc
inc
jecxz
and
in
and
or
cmp
rcr
mov
mov
out
and
or
decl
mov
sbb
push
and
sub
xor
mov
js
push
test
aas
std
xchg
pusha
js
dec
imul
add
in
bound
std
out
xor
cli
push
out
cld
pop
xchg
jmp
cmpsl
ja
mov
add
xorb
test
dec
xchg
cmpl
pop
js
call
xchg
dec
cld
add
cmp
cli
jp
push
xorl
fcmovbe
inc
rorl
pop
add
add
ficomps
ja
shll
adc
fsubp
mov
xchg
iret
dec
lret
or
or
push
push
sbb
adc
inc
sub
rcrb
mov
or
sbb
push
stos
pop
sbb
dec
lods
popf
adc
mov
or
hlt
pop
sahf
jle
test
or
adc
outsl
pop
pop
push
out
jae
mov
mov
push
add
xchg
add
call
insl
imul
push
add
xor
mov
je
js
stc
mull
stc
scas
outsl
je
adc
std
jb
fsts
jns,pt
jge
arpl
mov
sahf
pop
bndldx
add
rcrl
std
jo
fldl
jg
pusha
cli
cmp
cmpsl
or
jae
sub
add
je
stos
pop
jne
shl
and
add
sbb
mov
flds
add
test
mov
addl
push
mov
pop
mov
adc
xchg
fcoml
xchg
fcoml
lcall
push
inc
das
mov
sub
cmp
push
testl
testl
push
loop
add
loop
or
faddl
or
faddl
mov
cli
rorl
and
xor
jne
pop
in
mov
inc
int3
stos
xor
test
cmp
rorl
push
mov
jb
mov
daa
test
call
pusha
dec
jmp
add
pop
add
jne
cli
and
cmp
fists
add
mov
das
jne
je
dec
sbb
inc
dec
jl
inc
orb
dec
sub
in
lods
das
std
or
ficoms
inc
mov
inc
jae
call
add
dec
stos
aad
xor
jmp
arpl
xchg
pop
iret
push
mov
enter
mov
outsb
push
xchg
jg
fsub
add
arpl
addb
sbb
filds
ret
mov
pop
cmpsl
roll
leavew
je
fisubrl
pop
cmpsl
rcrl
push
loop
inc
push
xchg
mov
scas
ljmp
outsb
rcll
add
or
bound
add
pop
lret
dec
mov
ficoml
sub
jp
scas
out
ds
flds
cmc
lods
and
push
cli
push
fstps
mov
cmc
icebp
push
stc
xchg
jp
div
push
mov
stc
out
pop
call
insl
in
rorl
sarl
icebp
pusha
shlb
add
gs
inc
loopne
sub
mov
cmp
xchg
jl
xor
fdivrl
test
movsb
idiv
dec
lcall
or
adc
or
imul
mov
inc
sti
xlat
inc
call
out
inc
lock
stc
gs
loop
jmp
loopne
pop
adc
dec
sub
mov
jl
add
popa
push
shlb
jae
fstpl
add
mov
in
psubusb
dec
je
cwtl
je
sbb
mov
pushl
inc
pop
or
inc
std
ljmp
in
jno
fistpl
iret
or
ja
decl
push
cmp
mov
jbe
inc
jns
or
jecxz
mov
js
lods
xchg
xchg
jb
add
jecxz
push
inc
and
test
leave
pop
movsb
inc
xlat
jmp
inc
lods
xor
addb
inc
dec
inc
addb
jl
dec
hlt
jge
mov
fisubrs
stos
push
adc
mov
aaa
inc
data16
mov
out
cmpsb
pop
movl
out
pop
pop
add
fsubrp
pop
jnp
out
stos
sbb
xor
fsubp
js
mov
pop
subb
out
lds
add
ficomps
in
jecxz
mov
insb
inc
sbb
ljmp
cmpsl
sti
mov
xchg
in
fsubp
inc
stc
adc
test
icebp
shlb
bswap
add
mov
mov
dec
imull
lods
pop
imul
add
aas
mov
jnp
push
stc
fs
and
stc
push
mov
sub
ficoms
mov
xchg
pop
call
cmc
lods
push
sahf
insl
repnz
in
pop
mov
fiadds
jmp
mov
ficomps
jmp
inc
sub
mov
filds
jmp
mov
call
pop
push
add
jecxz
add
add
out
push
iret
xchg
rol
adc
add
push
fldl
movsb
xor
stc
mov
cmp
or
add
fldl
add
icebp
mov
push
inc
pop
fldl
add
faddl
je
mov
dec
sbb
rclb
xchg
faddl
add
fdivrl
inc
sub
add
loopne
add
push
in
adc
add
das
inc
ja
cmp
mov
icebp
repnz
jle
cmp
mov
add
into
shl
dec
test
test
adc
sbb
adc
sar
xorb
jae
les
stc
lods
mov
cmp
adc
add
into
mov
sarb
mov
movsb
std
jge
dec
and
lcall
xchg
test
inc
dec
cmpl
mov
sub
and
scas
mov
aam
mov
jbe
das
fsubp
inc
and
aad
inc
inc
sar
stc
out
mov
aam
dec
fsubp
shll
sub
sbb
or
lret
shll
pop
out
and
movsb
inc
das
lods
xor
fimull
jecxz
lods
inc
pop
fnstcw
add
lds
mov
mov
out
xchg
aam
out
jmp
push
out
sbb
stc
add
or
push
movb
sbb
mov
push
test
fldl
jmp
push
pop
add
aaa
pop
inc
icebp
cmpsl
xchg
je
mov
lock
jno
push
cmpsb
add
push
sub
sub
push
inc
xchg
mov
clc
shrb
jmp
stc
bound
call
inc
pop
adc
or
in
push
in
push
xchg
movsl
dec
test
test
add
sub
cmp
rdpmc
fiadds
arpl
add
bound
pop
xor
mov
notl
inc
add
rcll
push
loope
bswap
mov
jle
push
loope
mov
adc
hlt
lret
or
lea
add
push
xor
adc
fwait
mov
imul
out
inc
hlt
push
mov
out
and
xchg
lea
sub
inc
pop
mov
ret
aaa
ror
push
test
jae
push
shl
xorl
out
shlb
push
cwtl
dec
cli
pop
iret
ret
xchg
add
adcl
sbb
push
cmp
insb
cmp
das
ror
imull
cmp
ljmp
xor
call
call
add
rorl
inc
das
mov
repz
loopne
mov
add
and
nop
das
fsubp
and
mov
iret
xor
cmp
clc
push
cmp
dec
loop
lods
push
push
or
data16
sub
add
mov
inc
add
lsl
fidivs
clc
fisubs
xlat
das
fsubp
shlb
fstl
add
push
mov
sub
inc
imul
das
fdivp
sub
cmp
das
fsubp
test
leave
aas
jl
push
inc
fstl
scas
add
in
push
adc
fldl
jmp
insb
push
dec
mov
sub
xchg
fldl
jmp
test
fimuls
and
data16
mov
and
sub
dec
sbb
add
jge
dec
mov
add
sub
inc
and
push
push
insb
in
fucomp
mov
push
stc
bound
orb
sub
mov
inc
sub
addr16
fiadds
jmp
xor
add
test
lcall
lods
addb
xchg
add
cmp
xchg
fstl
sbb
add
fldl
incl
add
xor
std
jmp
fldl
add
cmp
std
imul
push
and
nop
inc
inc
data16
or
fldl
pop
out
leave
inc
faddl
adc
pop
cmp
shl
addl
lods
out
add
sub
in
out
clc
ss
add
insb
dec
xchg
push
cs
std
insl
int
lock
cmp
sub
das
xchg
rcll
inc
and
xchg
ret
xor
cmp
push
mov
add
inc
int
popa
sarl
inc
std
dec
cmp
mov
inc
std
call
sub
cld
and
inc
add
pushl
leave
xchg
test
incl
add
cmc
ds
lock
mov
pop
jnp
scas
add
fiadds
enter
test
dec
sub
mov
call
dec
sbb
pop
jno
fsub
add
pop
daa
mov
popa
cmpsb
jmp
dec
cld
inc
aas
sahf
out
lods
mov
add
arpl
mov
out
inc
push
lsl
fisubrs
in
daa
add
cwtl
lcall
jmp
insl
mov
test
jecxz
and
lods
push
jb
fidivrs
ds
fptan
pop
lock
pop
stos
adc
jmp
pop
dec
jle
mov
jmp
cs
mov
clc
shlb
cmpsl
call
mov
call
stos
andl
pushf
aaa
xor
add
lret
push
jge
sub
repnz
out
mov
in
stos
stc
fsubrl
inc
jmp
jae
pop
jb
mov
call
inc
push
les
mov
orl
jp
pop
loop
sub
stc
lds
mov
pop
loope
jb
bound
jge
mov
stc
sub
jne
adc
movsb
and
mov
adc
pop
dec
mov
in
xor
dec
push
cltd
stc
mov
adcl
test
xor
loope
jge
loope
jnp
or
inc
mov
lea
cmpsb
loope
loop
testl
daa
pop
mov
mov
addb
aaa
and
test
cmp
jle
mov
xchg
add
sub
pushf
mov
enter
cmp
xor
mov
movl
pop
xchg
aas
xchg
xchg
cli
mov
sar
fistps
pop
pop
mov
mull
sub
repz
xor
inc
clc
sbb
dec
out
cmp
xor
aam
ds
das
fidivrs
adc
mov
cwtl
rcll
pop
mov
push
lahf
mov
push
sub
test
inc
dec
sub
dec
pop
sbbb
pop
idivl
in
cmpsl
add
insb
mov
mov
data16
rcl
sbbb
out
cmp
mov
rcr
mov
jo
js
out
repz
xchg
test
push
out
data16
push
dec
mov
stc
add
outsl
shl
mov
dec
push
mov
aad
rcll
scas
mov
cld
inc
push
push
mov
test
arpl
jb
mov
and
mov
mov
and
fst
clc
rolb
add
test
inc
repnz
inc
bound
sub
popa
cmp
add
adc
rorb
test
in
aaa
lods
dec
ror
scas
leave
hlt
jmp
jbe
outsb
movsb
test
test
addl
push
cwtl
inc
sti
inc
xchg
inc
stc
pop
or
stc
test
fstl
jno
or
push
test
pop
rcll
loop
add
xor
cmp
push
jns
insb
loop
jge
add
xchg
adc
inc
stc
idiv
sbb
in
jno
or
add
xor
stc
cmc
or
mov
call
stc
jae
fiaddl
sbb
xor
cmp
cld
add
cli
mov
mov
mov
adc
sub
or
jb
add
cmp
nop
jecxz
shl
add
cwtl
pop
xor
scas
cmp
lcall
add
std
jg
sbb
pushf
std
jae
movl
scas
jns
pushl
mov
addb
mov
popa
or
rorl
std
dec
mov
sbb
rcr
xor
dec
ds
fdiv
popf
cmp
lgs
add
aaa
aad
push
dec
jo
sub
cmpsb
sbb
int
xor
testl
mov
inc
pop
fldenv
mov
das
fsubp
xchg
das
fsubp
mov
or
jge
ss
mov
xor
xor
mov
or
mov
and
cmp
add
fiadds
sahf
jl
inc
out
add
sub
inc
fstps
repnz
sti
insb
inc
cs
stos
mov
mov
sub
dec
test
fldl
jmp
mov
or
stc
insb
insb
aam
insb
sub
add
sar
repz
ret
fisubrl
out
push
xchg
jmp
sub
fs
pop
inc
adc
in
inc
jmp
add
lock
jmp
aas
inc
jae
jbe
dec
clc
add
lock
adc
loopne
add
loope
inc
sahf
xor
shrb
pushl
mov
lea
or
mov
mov
call
cmc
je
mov
movsb
adc
loope
sbb
add
out
testb
sub
dec
or
arpl
push
loope
push
sub
sbb
push
xchg
add
mov
add
ljmp
xchg
ss
call
scas
cli
pusha
xor
imull
sub
bnd
cmp
in
shll
cli
sub
lods
cmp
fs
jae
add
ror
pop
dec
lods
cli
clc
ror
cli
push
in
mov
loope
mov
das
aaa
sub
dec
mov
sarb
out
in
imul
xchg
cmp
lcall
mov
jmp
test
jecxz
out
fnsave
cmpsb
bswap
sahf
inc
bnd
mov
ret
pop
push
imul
fucom
add
inc
mov
stc
xchg
add
fsubp
cltd
xor
push
call
cmpsb
or
adc
sbb
sub
dec
push
je
dec
cs
das
xchg
inc
pop
enter
mov
out
das
push
stos
out
push
mov
jo
jb
add
push
add
push
loop
ljmp
icebp
or
dec
push
add
faddp
cmc
xchg
rorl
jmp
in
ret
cmc
aad
and
les
inc
add
add
test
push
call
adc
call
adc
xchg
or
call
sub
add
pop
and
sub
scas
stc
cmp
pop
and
add
xor
add
pop
pop
jns
xchg
fimuls
xchg
loopne
add
sbb
mov
movl
and
filds
add
jle
inc
fiadds
call
faddl
daa
ja
testb
inc
addl
jno
lea
jecxz
adc
adc
testb
jle
test
add
pop
bound
fiaddl
xor
fildl
add
out
add
das
xchg
adc
es
jae
dec
add
das
aaa
test
aaa
cs
std
outsb
gs
xchg
shlb
out
loope
pusha
dec
sbb
cs
std
ss
cmp
cs
std
xchg
fdivrl
add
xor
es
es
adc
jne
dec
inc
divb
stos
scas
cmc
add
aaa
ljmp
dec
or
adc
roll
sub
inc
sbb
fucom
add
stos
fistpll
push
jae
sub
out
pusha
dec
fidivrl
fucom
add
inc
cltd
sti
jne
jecxz
sbb
fld
push
xchg
add
add
dec
mov
cmc
pop
bound
js
inc
out
mov
pop
fs
fmulp
clc
jo
push
das
fsubp
sbb
xor
xor
inc
out
mov
jg
cltd
inc
sub
leave
mov
insb
cli
add
sub
sti
sub
fimuls
je
pop
rcr
pop
add
pushf
fiaddl
jmp
mov
push
and
add
sub
add
test
mov
lds
mov
adc
stc
jmp
push
inc
test
pop
xor
and
scas
adc
hlt
into
pop
aaa
rolb
ret
in
addr16
scas
inc
sarb
rcll
adc
add
ret
hlt
in
cmp
xor
add
push
imul
outsl
pusha
div
ficompl
push
call
sbb
fimull
add
scas
sbb
or
test
xchg
sbb
xchg
pop
inc
clc
testb
xor
or
dec
jns
push
and
push
dec
mov
fld
roll
incl
add
xchg
add
das
pop
mov
inc
or
sbb
pushf
mov
pop
jno
jne
push
rolb
sub
and
cmp
sub
jg
lcall
xor
adc
mov
ja
je
in
pop
push
cmp
xor
pop
mov
jle
ss
jae
sbb
sldt
cmp
or
jae
jl
adc
mov
out
out
cmp
or
push
mov
mov
cmp
out
loopne
sti
adc
add
mov
and
dec
push
dec
sbb
and
add
push
out
add
sub
add
jne
incl
das
fisubrs
pop
aas
jo
pusha
out
outsl
xchg
daa
push
jno
daa
inc
lock
repnz
lret
pushf
cmp
call
add
das
fisttps
jo
ffreep
stos
jbe
and
pop
mov
outsb
repz
and
lahf
and
and
test
imul
jmp
or
add
jnp
inc
sbb
subl
jnp
inc
loope
lcall
scas
jnp
insl
dec
cmp
jmp
xor
in
pop
test
cmp
add
sub
aaa
and
leave
push
pop
xor
jae
fsubrp
stc
add
cli
icebp
dec
call
popf
fsubrl
rclb
add
dec
cli
xor
add
jnp
jb
mov
rcr
imul
mov
add
in
lahf
dec
push
outsb
daa
idiv
stc
aad
xor
mov
mov
inc
loopne
in
add
jne
jne
test
divb
into
mov
lcall
loop
xchg
sahf
jge
ret
mov
push
adc
dec
fdivl
icebp
cli
lcall
repz
out
xlat
mov
xor
sarl
movsb
or
test
roll
inc
xor
mov
xchg
repz
mov
lahf
comiss
hlt
gs
mov
in
cli
inc
mov
aas
das
les
mov
add
dec
fbstp
cmp
or
xor
xchg
xor
add
sub
dec
push
je
fidivs
cmp
and
inc
xchg
and
jmp
out
mov
out
stos
jp
add
pop
sub
hlt
in
xchg
mov
mov
nop
stos
dec
test
aad
jp
dec
int
add
sbb
out
mov
loope
add
fisubs
and
inc
bound
add
mov
arpl
mov
enter
and
or
cwtl
cmp
ud0
and
arpl
mov
stc
je
mov
loope
mov
ss
inc
fucom
xor
fisttpll
and
in
aaa
test
daa
cmpsl
push
sbb
or
sahf
cmpsl
ja
lss
fdivs
sub
mov
in
jge
or
popa
rcr
mov
xorl
call
jns
aas
push
fs
call
fucomi
xchg
pop
ret
or
mov
jecxz
incl
dec
mov
lods
inc
push
push
shll
add
mov
fs
or
and
shl
add
lahf
and
test
cld
idiv
arpl
incb
add
std
mov
call
fiaddl
add
std
std
inc
cmp
std
negb
mov
in
push
push
addl
insl
gs
lcall
shl
addl
ret
mov
fsubs
subl
xchg
lods
lea
sub
xchg
ret
and
or
add
jns
pop
mov
pop
cmp
adc
lock
std
mov
xchg
add
dec
add
dec
iret
mov
lret
comiss
jmp
mov
in
mov
mov
ljmp
sbb
ja
sbb
stos
pop
cwtl
or
pushf
pop
mov
and
add
es
push
stos
add
fldt
cli
cwtl
xor
jl
push
lahf
ljmp
pop
cmpsl
cwtl
cmp
sbbb
cmpsl
rorl
xor
add
imul
mov
inc
cmp
popf
xchg
sub
fcmovb
xchg
icebp
add
push
cmpsb
rolb
stc
mov
sub
push
xor
xchg
push
mov
outsb
iret
dec
fiaddl
inc
or
stc
cmpsl
je
inc
out
call
dec
bound
dec
mov
je
xchg
lods
je
cwtl
adc
hlt
and
cmp
daa
aaa
fisttpll
into
rcr
out
xor
jb
pop
stc
cmp
icebp
sbb
inc
ds
dec
cmp
sbb
pop
inc
fldl
add
lods
or
fistl
lock
ret
stc
push
cmpsb
or
div
xor
push
fidivs
push
roll
add
shl
negl
shl
xor
push
leave
inc
out
incl
cld
ljmp
gs
or
sbb
push
out
mov
loopne
jmp
imul
stc
shrl
and
insl
and
add
push
sbb
leave
roll
sbb
dec
sbb
dec
gs
test
dec
add
add
xchg
cmp
loop
push
dec
add
add
sbb
add
js
push
movsb
and
ljmp
cmp
stc
js
mov
stos
rclb
ffreep
fsubl
inc
sub
cmp
push
or
add
mov
ds
mov
out
xchg
loop
inc
add
jne
jo
add
inc
pop
add
sbbb
lods
inc
out
dec
adc
fadd
andb
lods
int3
add
inc
mov
fiadds
add
loopne
and
cmpsl
cmpsb
jecxz
xchg
pop
or
sbb
add
mov
xor
jne
aaa
cmpl
out
sbb
push
cmp
pop
xor
cmpsl
and
pushf
pop
stos
push
loop
push
add
out
out
das
gs
addr16
pusha
lret
cmp
mov
jo
and
cmpsl
mov
inc
inc
xchg
cwtl
out
mov
pop
cmpsl
repz
pop
nop
and
sub
rclb
xchg
sbb
add
add
pop
rcr
and
or
test
xor
loope
mov
test
test
in
mov
pop
xchg
pop
lea
sub
fdivl
inc
jmp
outsl
xor
out
mov
jl
inc
xor
rcrl
lock
xor
mov
test
add
fistpl
rcll
outsl
je
subl
loope
add
sub
mov
scas
in
incb
aad
incl
out
xlat
std
enter
aam
out
jb
incl
je
aad
in
incb
stc
mov
int
jmp
add
and
aad
mov
enter
aad
incl
add
or
add
adc
xor
call
add
mov
arpl
push
into
std
shrl
pop
das
mov
je
add
or
cli
sbb
ds
mov
std
mov
ret
cmp
adc
inc
std
jmp
aas
out
jne
imul
js
sbb
pop
xor
push
adc
push
mov
jle
pop
inc
std
fnstcw
jg
xor
inc
lcall
cmp
cli
test
add
movsb
cli
or
aaa
mov
sbb
jge
outsl
std
sub
pop
mov
out
das
popa
cld
or
mov
pop
cmp
popaw
nop
sub
pop
mov
add
add
mov
mov
inc
stos
arpl
push
jne
aas
adc
sbb
push
loop
add
arpl
nop
xor
pop
fs
sub
jmp
mov
sti
mov
sbb
aaa
mov
aaa
mov
stos
lea
cmc
popa
add
mov
and
mov
push
sahf
fists
sub
jae
xchg
loopne
add
sub
insb
insb
mov
push
sub
jmp
insb
subl
loopne
sbb
int3
xor
jae
rolb
pop
sub
sub
int3
xor
lock
mov
jb
test
outsl
daa
push
sahf
jnp
into
push
fstpt
sub
or
push
stc
call
add
imul
and
addb
dec
inc
pop
mov
rcrb
ret
adc
push
add
arpl
iret
dec
movl
fucomip
movsl
or
testb
lods
mov
cld
cmpsl
testl
jne
push
push
cld
frstor
add
add
or
push
in
add
adc
jno
add
add
mov
mov
vcomiss
xchg
pop
call
addb
dec
call
xor
out
test
movsb
stc
sbb
cmp
or
fs
mov
ret
cmp
jle
pop
pop
and
jp
sbb
mov
andb
call
push
sysenter
into
jp
ficompl
orb
stc
push
rcll
jae
jp
mov
scas
ret
cmc
pop
pop
sub
mov
fidivrs
jg
mov
mov
fsub
add
ficomps
jg
mov
jg
pop
mov
jg
pop
and
test
sub
add
fimuls
jg
add
push
sub
pop
mov
mov
es
movsb
pandn
dec
sub
das
jg
sub
xchg
sbb
cld
sti
and
aas
mov
loope
jecxz
mov
mov
and
jle
push
add
flds
cmp
push
loopne
adc
andl
cltd
call
push
fldl
mov
mov
test
roll
fildll
sti
cli
jle
test
in
sub
test
inc
pop
lods
and
aam
pop
push
push
ret
dec
sbb
popa
enter
xchg
sub
pop
movsb
xor
pushf
cs
inc
sbb
sbb
popa
enter
cmc
cltd
pop
std
or
fcmovnbe
test
add
fwait
adc
repz
mov
popa
mov
and
cmc
cltd
jge
addb
out
or
jo
pop
pop
adc
push
add
test
mov
add
and
incl
jns
in
mov
sahf
sahf
stos
in
and
dec
mov
add
dec
push
fstl
xor
lcall
jp
cli
xor
jbe
or
iret
call
mov
adc
not
mov
or
inc
dec
sbbb
cmc
lods
js
xchg
lods
stos
iret
repnz
daa
mov
cli
mov
std
outsb
aaa
mov
add
add
add
xor
adc
clc
ljmp
call
aam
movsl
inc
std
ljmp
inc
and
ficomps
cmp
in
int3
push
es
cmp
scas
add
je
mov
sarl
outsb
xchg
call
and
pop
das
fisubs
lock
jmp
lock
fistpll
jo
sarb
jl
add
pusha
rcl
and
mov
into
cwtl
les
jmp
cs
inc
or
scas
daa
jecxz
das
fcompp
push
mov
cmp
ficoml
movsb
pushl
and
call
push
rolb
mov
pop
inc
cmc
jge
push
jb
faddl
in
daa
into
push
aad
stos
cmpsl
mov
pop
rorb
dec
lds
adc
fdivr
and
and
xor
loope
loopne
out
fs
adc
rcl
pusha
ja
add
faddl
cltd
lock
cli
stc
dec
sub
in
cmp
shl
dec
gs
push
mov
repz
int
fisttpll
jp
jae,pt
pop
popf
negb
test
sbbl
dec
mov
dec
push
jge
add
push
inc
imul
filds
in
dec
loope
rclb
call
or
pop
or
and
popf
dec
push
scas
jne
add
repnz
cmpsl
push
loopne
mov
jb
pop
cmc
addb
je
or
push
loope
push
push
rorb
sub
std
call
xor
in
in
xor
ret
and
cwtl
mov
incb
das
xor
test
das
xor
sbb
std
call
push
jp
das
shrb
jp
js
mov
jbe
add
xor
cmp
add
sub
aaa
jg
cmc
mov
mov
dec
add
repz
movsb
and
push
cs
inc
sbb
int3
lcall
ficomps
add
aaa
in
push
push
movsb
ljmp
mov
enter
inc
sbb
cmpsl
xchg
jg
xor
test
mov
add
sub
call
aad
inc
cmp
cmpsb
xchg
pop
push
or
xchg
cmpl
add
fcos
and
and
aam
pop
jl
xor
je
scas
popa
jns
dec
aam
ljmp
add
pushf
pop
pop
inc
and
lock
sti
stc
push
and
or
out
aaa
lods
cmp
jle
add
and
aam
cmp
xchg
jmpw
sbb
icebp
and
shrl
jge
in
iret
out
push
cli
scas
and
and
jl
call
push
int3
addl
and
dec
dec
mov
lahf
call
adc
and
pop
loopne
testb
mov
idiv
add
test
and
inc
and
idivb
mov
push
test
idiv
mov
pushf
or
xor
incl
pop
mov
test
pop
cmc
push
lea
repz
lcall
push
push
cmc
add
mov
pop
xchg
jnp
mov
mov
clc
sbb
push
xor
jp
add
cmp
jno
jnp
jl
movsb
mov
pop
jle
cmp
sub
jge
dec
gs
sarb
pop
xchg
lock
pop
mov
stos
xchg
inc
inc
lret
jmp
jl
movsb
inc
cmc
dec
popa
lods
mov
pop
lods
aas
xchg
aaa
push
ret
sub
xlat
add
jl
mov
sbb
call
xor
data16
add
push
adc
and
aaa
add
das
sbb
sarl
popa
clc
aam
out
test
pusha
lds
push
sub
xchg
sub
lcall
pop
inc
enter
add
sub
sub
aaa
hlt
sub
aaa
in
pushf
jl
sti
mov
cmp
rcr
roll
add
xchg
sub
push
mov
cmpsb
jnp
mov
ljmp
dec
xor
subb
jmp
scas
pop
je
lods
and
xorb
jne
fs
sbb
call
push
loopne
sub
add
push
sub
sub
mov
mov
call
push
loope
sub
fs
mov
test
call
push
loope
test
popf
jecxz
inc
adcb
xchg
call
push
test
jecxz
inc
xchg
call
add
insb
cli
cmpb
push
pushf
mov
call
idiv
aad
std
test
insl
cli
orb
dec
lea
in
mov
push
or
nop
icebp
lcall
pop
mov
add
xor
das
sbb
jg
sub
aaa
cli
movsb
lret
jp
jne
mov
xor
cmpsl
insb
add
add
jp
and
add
subb
mov
int
imul
add
lods
leave
add
fs
inc
mov
xor
outsb
hlt
add
lods
leave
add
hlt
jecxz
inc
pop
mov
out
adc
lods
add
shlb
push
aaa
jns
into
outsb
xor
mov
aad
stos
pushl
daa
mov
mov
lods
pop
xor
movsl
pop
stos
pushl
daa
jb
out
int
scas
push
sbb
add
pop
sub
mov
roll
loopne
inc
jbe
sbb
xor
inc
pop
sub
mov
xchg
add
sbb
or
dec
cmpsl
stos
add
add
in
sub
fiadds
jb
out
subl
shl
pop
xor
out
stos
xchg
cld
shrb
popa
dec
mov
pop
je
mov
je
test
cld
jb
into
dec
bound
loope
sbb
jge
cmp
inc
jne
sbb
sub
jnp
stos
xchg
cld
fs
lea
scas
testb
frstor
subl
add
jnp
sub
test
subl
jnp
cli
shlb
cmp
lret
adc
mov
cmpl
sbb
xor
dec
mov
push
daa
orl
insl
push
test
enter
lret
mov
cmp
iret
xchg
lods
cld
jmp
add
mov
mov
pand
stc
call
rorb
inc
leave
cmp
je
imul
xor
push
push
call
lods
leave
adc
sbb
inc
add
push
test
sub
jge
cmp
or
std
jmp
dec
test
sbb
add
add
mov
je
mov
test
xor
push
cmpsl
rorl
stc
nop
test
add
inc
js
mov
cmpl
jb
cmp
mov
xor
mov
jo
test
adc
lret
idiv
inc
test
add
fisubs
js
cmp
movsb
inc
pushf
push
mov
out
outsb
dec
pop
imul
jns
jmp
add
out
xchg
in
push
aad
call
fnstsw
stos
lahf
testl
mov
data16
sub
ja
arpl
xor
mov
jne
mov
xor
cld
mov
adc
call
pop
inc
cmp
das
pop
and
lods
sbb
fldenv
adc
icebp
add
xor
sbb
mov
stc
push
das
pop
aad
mov
add
sub
jnp
sub
outsl
jb
push
test
lret
clc
pop
aas
pop
push
or
ficoml
jmp
sub
inc
mov
inc
repnz
jbe
call
pop
scas
push
xorl
sbb
jae
std
imul
in
fidivs
mov
hlt
bound
add
mov
inc
add
dec
mov
sub
push
fdivrs
lret
dec
mov
ret
frstor
pop
inc
shll
pop
jne
push
lea
push
push
loope
lea
jmp
pop
cmpsb
or
xchg
mov
mov
push
orl
adc
dec
and
repz
int3
jp
int3
int3
fisubl
int3
arpl
mov
add
orl
dec
sbb
imul
adc
scas
bound
das
push
xchg
lahf
and
push
fwait
jle
mov
in
loope
js
stos
hlt
js
mov
movl
test
add
add
cmp
das
mov
dec
mov
test
das
add
jmp
mov
std
shlb
add
add
sti
test
mov
and
fs
loopne
mov
das
fidivs
sarb
sub
jae
mov
ja
pop
cmp
popa
mov
or
addr16
pushf
mov
push
jnp
adc
mov
lcall
cli
push
adc
add
std
jnp
outsb
inc
jg
sub
push
call
ret
dec
cmp
sbb
mov
pop
das
addr16
das
fsubp
add
addr16
das
fsubp
imul
in
add
sub
jl
push
mov
push
lods
inc
sub
add
test
add
add
sub
mov
fldl
jmp
aas
or
push
mov
sub
fs
xchg
sub
xchg
cmpsl
push
pop
mov
fiaddl
mov
and
lods
mull
int3
cmp
add
fnstenv
push
xchg
test
pop
js
mov
adc
in
mov
add
xchg
pusha
inc
xor
add
stos
dec
push
sbb
out
xor
jnp
pop
pop
shlb
incl
popa
ds
scas
cld
push
int
call
sbbl
sarb
push
andl
jae
incl
cmp
pop
xor
call
orl
jnp
icebp
pop
xor
clc
push
dec
daa
call
adc
sbb
jle
cmp
jnp
das
push
push
cld
fisttpll
idiv
lods
inc
stc
subb
jge
ja
push
stos
scas
jo
movsb
addb
dec
push
pop
subl
jge
cli
push
je
js
stc
and
mov
push
mov
jl
call
lods
mov
add
add
mov
jl
mov
test
push
clc
lods
inc
add
call
inc
imul
pop
push
sbb
popf
sbb
outsb
sub
pusha
stc
xchg
insb
aas
jnp
pop
inc
aas
arpl
stc
loop
jecxz
outsl
mov
test
ds
mov
mov
lods
bsf
add
out
mov
fucom
add
add
out
fwait
in
lds
mov
mov
mov
mov
adc
cmc
out
mov
cmpsl
outsl
sub
lcall
pop
sar
mov
sbb
insb
enter
fiadds
adc
leave
orb
add
adc
mov
out
int
adc
lahf
test
push
scas
out
pop
add
push
pop
pop
push
stos
sbb
insb
mov
push
adc
fdivrs
jae
jmp
out
stc
push
pop
fs
loope
out
movsb
add
test
inc
std
clc
imulb
std
imul
arpl
sbb
fiadds
add
lock
loope
addl
sbb
into
pop
inc
or
add
loopne
add
push
ret
lret
int3
adc
sub
addl
lret
adc
test
pop
fstpl
add
push
loopne
inc
loope
repnz
mov
pop
popf
call
loope
push
mov
adc
push
ret
dec
mov
fcoms
xchg
mov
addb
mov
ss
stos
idiv
lcall
gs
das
imull
push
lds
das
imull
mov
jge
das
testl
test
inc
js
inc
jno
jg
or
lock
fimuls
jae
orb
hlt
mov
js
adc
cld
jp
cs
cld
jl
std
cld
or
add
nop
cmp
jne
out
xchg
add
jg
fsubp
add
popa
cmpsl
insl
xor
out
mov
bound
das
fisubrs
outsl
fsubp
add
and
add
out
xor
je
add
fdivrp
add
lods
adc
add
scas
dec
in
fsubp
xorb
les
popa
movsb
add
add
fisubrs
stos
je
add
ficomps
lret
fucom
add
outsb
xchg
scas
or
andb
cmp
fisubl
or
jmp
sub
inc
jo
loop
pop
and
inc
sub
add
add
xor
or
fldl
jmp
sub
add
mov
in
fucomip
sub
test
sbb
flds
add
or
pop
das
pushf
xchg
bound
inc
stos
adc
loope
sbb
sbb
enter
and
stc
and
pop
push
test
inc
test
jb
repz
lahf
jl
inc
add
out
ds
jge
adc
lods
call
sub
mov
dec
xchg
jo
cmp
add
call
or
add
inc
push
jnp
xchg
xchg
jae
movb
or
and
or
mov
mov
fimuls
rolb
pop
inc
add
mov
orl
adc
xchg
adc
pop
stc
jge
lods
dec
adc
push
pop
call
inc
mov
jnp
pop
popl
es
nopl
imulb
cs
incl
add
mov
clc
test
dec
out
test
cmp
stc
mov
pop
insl
cli
cld
pop
in
mov
mov
lods
dec
out
pop
mov
push
mov
imul
int3
arpl
jp
fmull
jnp
add
xorl
cld
pop
mov
mov
add
add
add
insl
push
push
mov
outsb
mov
pusha
arpl
das
ficomps
push
pop
std
stos
cwtl
push
sub
movsb
cmpsb
push
jge
lods
cmp
rcrb
enterw
cmp
pop
jmp
jbe
pop
sub
fcomip
push
and
ficomps
pop
das
pop
and
fsubp
add
add
sti
rorb
fisubs
aaa
test
mov
out
das
fsubp
add
mov
int3
xor
out
sbb
mov
clc
pop
stc
jmp
loope
add
sub
add
out
cmp
cmp
hlt
iret
mov
pop
orl
add
shl
add
arpl
add
add
stc
shlb
test
fiadds
sbb
pop
hlt
jg
add
adcl
testl
das
bound
add
mov
dec
push
les
push
inc
pushf
faddl
push
loop
call
test
sti
sbbb
idiv
jnp
cld
push
pop
pop
hlt
jmp
add
cmc
testb
loopne
lret
jmp
cmc
testb
push
idiv
test
cmc
jp
xchg
push
shlb
fistl
and
leave
hlt
test
ficoms
ljmp
lods
jge
xor
je
js
stc
mov
sub
and
jg
pop
data16
mov
stc
add
add
add
iret
jmp
stc
loopne
push
lock
jg
sar
jmp
stc
lods
xor
sub
std
jl
sbb
orl
stc
stos
mov
aad
fwait
arpl
jge
repnz
add
jge
jo
mov
sub
mov
ljmp
frstor
inc
cmc
mov
inc
add
xor
ja
add
pop
cs
mov
add
es
pop
pop
mov
sbbb
and
pop
into
or
push
pusha
sub
lods
push
xchg
add
add
push
mov
in
pop
jmp
je
movb
ja
lds
fsts
outsl
mov
add
in
xchg
add
add
clc
test
xchg
fcoml
sbb
xchg
add
out
push
add
stc
outsb
inc
scas
test
stc
pop
rclb
dec
add
stc
push
flds
and
pop
mov
adc
push
and
or
cli
push
ficoml
stc
fstpl
push
aad
mov
lahf
in
cs
into
ret
add
pop
add
pop
stc
mov
pop
jnp
je
sub
sub
cmc
test
sbb
bound
icebp
test
scas
test
scas
sbb
call
pop
les
push
je
lds
mov
mov
dec
lock
imul
into
es
xchg
sbb
dec
repnz
lods
addl
xor
add
loope
out
sub
fidivrs
pop
fnstcw
loope
jge
loope
testb
push
idiv
loope
add
shl
les
pop
ret
ljmp
jl
cld
mov
jb
stc
pusha
xorb
mov
stc
cmpsb
stos
sbb
dec
js
mov
inc
lret
xor
mov
jo
lods
lret
in
jb
xor
add
push
jp
stc
or
xor
clc
out
push
ss
jmp
lock
cli
test
test
mov
cld
pop
jb
hlt
mov
sbb
stc
lods
xor
subb
jge
inc
jp
xchg
mov
outsb
orb
ljmp
pusha
nop
roll
sub
inc
por
jg
dec
add
add
jae
insb
ret
mov
push
movsb
out
pop
add
add
cmp
mov
ret
ljmp
and
push
push
pop
jae
call
fstpt
hlt
or
push
jmp
out
mov
xchg
lcall
inc
jmp
jmp
aas
call
jmp
cmp
jmp
or
add
cli
jo
pop
aas
outsb
out
add
cmp
xor
insb
dec
add
adc
inc
imul
inc
add
pop
sbb
test
test
adc
test
cmp
inc
push
add
push
cmp
fiadds
xchg
sub
add
inc
push
add
insb
ja
stc
push
dec
pusha
test
xchg
ljmp
test
jnp
adc
scas
mov
add
cmc
testb
leave
in
lcall
xchg
and
sbb
int3
lcall
int3
xor
dec
mov
sub
or
xor
add
loop
jge
repnz
mov
or
or
loop
push
inc
sbb
add
sbb
jnp
shlb
mov
or
loope
rcr
xor
add
mov
jecxz
dec
cld
pushl
int3
imul
arpl
jne
loope
outsl
or
lds
add
std
jae
aad
mov
loope
icebp
ss
and
adc
xor
std
clc
add
inc
or
cmp
pop
movl
sti
fidivrl
int3
jmp
mov
in
lods
cli
lock
sbb
sub
jae
mov
inc
test
imul
out
cmp
pop
cmp
sbb
and
push
out
vcvttpd2dqy
das
jb
dec
xchg
out
push
or
add
push
lock
add
gs
and
lahf
mov
cld
push
inc
mov
lods
sarl
xchg
pop
fsubp
add
or
addr16
xor
faddp
jnp
jg
outsl
fsubp
pop
loopne
add
aaa
sbb
std
inc
clc
pusha
add
arpl
ss
adc
outsl
ljmp
add
push
jle
inc
packsswb
bnd
outsl
pop
cmp
hlt
adc
imul
das
xchg
push
stc
xchg
test
sahf
or
movsl
xor
outsl
mov
add
movsl
out
pushf
cmp
leave
mov
sub
add
data16
sub
loopne
scas
add
call
add
incl
add
fsubp
push
sbb
cli
call
fsubp
push
mov
add
fiadds
add
xchg
in
cltd
cmpl
jno
add
filds
add
mov
add
push
jne
in
jbe
add
add
push
fsubrp
movsl
int
dec
mov
jne
dec
inc
add
add
jno
add
add
pop
icebp
or
xchg
xor
fwait
xchg
mov
add
push
std
ljmp
jl
cwtl
das
pop
std
xchg
nop
stos
pop
std
pushl
addr16
das
outsb
mov
mov
insb
dec
cld
cmpsb
xchg
mov
das
pop
adc
sub
mov
push
pop
std
ljmp
pop
or
ret
dec
pop
std
incl
add
jge
in
pop
std
pop
cld
cmp
adc
test
or
nop
mov
daa
rolb
xchg
out
mov
fimuls
pushf
out
inc
jae
add
loop
aam
addr16
mov
pusha
pop
aaa
push
push
mov
lock
adc
cmpsb
filds
das
cmp
clc
addr16
out
add
jae
ds
insl
xchg
cmp
pusha
and
iret
imul
iret
arpl
stos
iret
jnp
sbb
push
fs
mov
out
xor
add
stc
dec
loop
sbb
add
sub
iret
sti
sub
pushf
mov
dec
xchg
test
fiadds
jmp
xor
pop
fucomp
insl
sbb
add
test
jmp
adc
sub
add
lods
sbb
add
sub
mov
fbld
clc
jmp
xor
add
and
repnz
sub
scas
sub
add
insb
sbb
add
sub
xor
ljmp
int3
sbb
pop
stc
aad
jns
add
and
mov
xor
out
adc
lock
push
es
inc
or
sub
mov
test
mov
ds
mov
int3
fisubl
int3
int3
arpl
mov
jnp
jbe
dec
lea
push
lea
test
addr16
cld
push
std
out
leave
std
testb
pop
shll
cld
rcrl
je
int
clc
push
adc
dec
hlt
je
dec
lock
push
push
add
das
mov
das
cmp
nop
push
stc
or
cmp
jecxz
leave
int3
sti
ret
leave
int3
repz
and
mov
repnz
mov
mov
push
and
mov
ret
pushl
cmp
adc
push
jle
dec
sar
sub
outsb
inc
add
ret
add
movsb
pop
aas
mov
jnp
ror
jae
test
fmulp
test
ficoms
les
push
mov
imul
push
cwtl
ficomps
cmc
inc
das
pop
daa
pop
aas
cmc
sti
repz
jl
sbb
jo
sub
fists
add
jb
mov
jnp
stos
iret
jae
cmp
mov
or
add
push
mov
leave
jbe
mov
in
push
fisubrl
popa
sub
decl
pusha
dec
hlt
rorl
xor
clc
push
divb
mov
adc
insb
fdivrp
cmpsl
push
je
icebp
or
jge
loope
cmp
mov
pop
inc
and
pop
jecxz
in
and
sbb
add
clc
and
sub
movsl
add
push
loop
mov
jns
popa
mov
sti
cmp
pushf
je
cmc
outsb
jo,pn
fiadds
jmp
sub
add
popf
push
cmp
lcall
dec
in
cmp
lds
divl
adc
mov
fidivrl
popa
mov
ret
add
add
int3
int3
fwait
gs
push
cltd
gs
push
and
test
adc
iret
scas
notl
test
dec
push
adc
sbb
push
mov
mov
ret
pop
gs
mov
into
jnp
jno
shll
add
sbb
int3
int3
mov
and
int3
das
mov
in
movsb
mov
idivb
cmp
add
add
cmovo
push
inc
std
shrb
push
insb
pop
les
div
cmp
sarb
lock
cmc
lahf
adc
std
shrb
add
pop
cmp
jecxz
leave
int3
sti
stos
leave
int3
repz
leave
int3
jmp
mov
dec
xor
and
lock
testb
sub
stos
sub
in
push
mov
add
leave
xor
push
fidivrs
push
sub
push
hlt
push
push
data16
imul
mov
addr16
hlt
xchg
sub
jmp
mov
push
aaa
pop
cmp
stos
sbb
add
gs
jg
fucom
add
lahf
lcall
mov
inc
inc
mov
lds
xor
orl
push
sbb
push
add
in
pushf
test
rcr
xchg
movsl
js
add
and
xor
sbb
inc
rcrl
into
push
in
aaa
inc
pop
ds
test
fwait
sub
add
jge
xor
push
std
test
push
bound
push
jb
push
ds
jno
loope
mov
jb
subl
add
test
add
stc
cmp
roll
int
stc
sbb
jno
pop
es
shlb
pushf
sbb
sub
add
dec
mov
mov
lcall
fiadds
int3
mov
int3
int3
int
add
int
xor
inc
flds
add
sbb
in
sbb
push
add
test
add
push
pop
les
popa
dec
xor
test
add
aam
jge
arpl
xor
push
ret
push
adc
je
popa
xor
mov
xor
cmp
jbe
das
jl
pop
insb
push
ror
sub
int3
imul
arpl
mov
rorl
pop
pop
dec
cli
test
add
xor
mov
sbb
lret
imul
nop
or
sub
and
jp
inc
cmp
sbb
in
outsl
idiv
test
mov
fidivs
jo
pop
popa
jge
repz
push
mov
js
incb
mov
dec
bound
fidivs
inc
mov
insb
or
dec
loop
add
dec
in
gs
subl
cmpsl
dec
int
call
mov
popa
pop
add
das
fsubp
mov
jno
ss
pop
test
aam
imull
fildll
mov
xor
add
pop
repz
sub
push
jl
xchg
stos
mov
mov
lods
ss
repnz
scas
mov
fcompl
cmp
les
add
movsl
fwait
mov
fs
cmp
test
xor
inc
stc
arpl
mov
mov
test
pop
gs
and
arpl
or
popa
jo
jns
jecxz,pn
inc
sub
pop
push
mov
sub
test
iret
add
mov
je
hlt
lods
jge
sub
outsl
mov
popa
jb
call
add
movsl
int
ret
lock
insb
cmc
call
sar
fiadds
lcall
insb
add
sub
frstor
sbb
or
add
loopne
incl
sub
outsb
jmp
les
test
push
mov
and
add
and
sbb
xchg
inc
loopne
add
imul
loopne
add
add
xor
sub
xor
mov
dec
call
xchg
push
or
cltd
and
add
mov
mov
mov
push
mov
lods
or
push
add
sar
shl
cmp
clc
test
jg
je
in
std
jo
jo
call
mov
push
subl
test
cmc
cld
ljmp
cmpb
mov
push
add
cmc
addl
adc
je
ret
imul
sti
test
add
add
bswap
test
daa
mov
into
add
movsb
xor
xor
mov
xor
inc
mov
stc
sbbb
dec
jb
mov
mov
into
mov
loopne
add
movsl
pop
add
add
addr16
push
and
push
mov
add
lea
faddl
cmpsl
out
mov
inc
jg
pop
mov
fsubl
cltd
shll
mov
call
cmpsl
xor
mov
pop
lret
lods
xor
add
fsubp
add
pop
dec
or
inc
push
arpl
dec
cs
add
add
xor
callw
dec
mov
sub
test
ja
xchg
jge
test
cmp
aaa
sub
cmpl
arpl
and
bound
call
arpl
mov
movsl
std
mov
out
mov
cld
cwtl
push
xchg
jns
add
test
imul
push
add
cmp
clc
pop
mov
jge
cld
out
gs
in
add
mov
pop
dec
notb
daa
int3
int3
sbb
int3
int3
sbb
int3
int3
subl
subb
xchg
pop
stc
call
xchg
je
nop
loop
add
rolb
pop
imul
incl
fiadds
psrld
rorb
xchg
cli
incl
add
clc
add
addl
inc
pop
mov
iret
lret
loopne
pushf
cmp
pusha
sahf
or
xor
imul
popa
xor
jl
outsb
pop
jbe
gs
insb
or
adc
xor
jl
ja
ss
push
jl
insb
dec
outsb
adc
mov
sbb
sbb
scas
or
decl
add
add
add
je
or
xchg
add
lods
loope
ljmp
xlat
jnp
fcmovnu
sbb
jnp
mov
jmp
or
mov
cmpsb
add
test
out
xchg
iret
int3
out
dec
loope
pop
cmp
popa
mov
popf
push
loop
mov
jl
outsl
popf
inc
jecxz
das
push
imul
xchg
add
pop
add
das
fidivrs
add
push
jbe
daa
sub
xlat
cmp
fnstsw
lds
in
das
inc
das
jl
outsl
lods
push
loopne
das
pop
imul
mov
icebp
add
pop
sub
test
insl
push
ljmp
jmp
lods
in
cld
fidivrl
xchg
xchg
pop
aad
nop
insb
jb
xchg
test
shrl
inc
jmp
adc
jb
lcall
add
mov
jmp
bound
bound
mov
sahf
bnd
das
inc
pop
push
sub
pusha
xchg
pusha
xorb
add
pop
das
out
sub
add
ljmp
or
bnd
jmp
add
push
das
loopne
pop
movsl
stc
xor
sarb
jg
dec
jmp
push
cmp
mov
clc
lcall
movsb
push
fildll
call
imul
decl
or
adc
push
add
ficompl
std
arpl
or
add
xlat
xchg
add
cli
pop
testl
jge
call
std
das
dec
lret
test
mov
cmpsl
hlt
ja
addr16
mov
test
push
add
push
pop
lea
xor
cmc
ja
addl
inc
orl
or
outsl
sti
rol
pop
cld
mov
pop
in
jg
insb
mov
jg
sub
add
jno
add
cmc
push
cmp
add
push
testb
cld
fistpll
loop
fsubp
add
pop
stos
repz
out
int3
stos
fdivs
sub
dec
test
bound
add
iret
enter
push
jns
subb
outsb
cmp
add
shrl
xor
cld
fucom
js
jb
or
std
orl
ja
pop
outsl
repz
imul
sub
push
cmpsb
das
aam
fwait
mov
jae
stos
mov
shl
dec
pop
enter
mov
clc
jmp
cmc
imul
jns
test
xor
in
dec
cmc
add
mov
add
sub
insl
repz
or
cmc
pop
sub
sub
xorl
pop
shr
sub
sub
mov
inc
xchg
pop
jb
jno
xchg
and
loopne
cmpsb
or
addr16
mov
adc
sub
pushf
dec
inc
clc
fnstcw
dec
repnz
es
add
into
adcl
scas
add
popa
inc
dec
int
inc
data16
mov
fadds
or
push
inc
push
cli
call
faddl
fs
xchg
pusha
test
popl
js
add
push
mov
mov
rcl
jg
stc
inc
ror
ja
stos
dec
call
push
pop
or
ret
mov
cmp
arpl
add
fsubrs
or
mov
xchg
jmp
incl
add
fadds
inc
out
int3
std
xor
lcall
add
fs
cld
popa
mov
pop
bound
pusha
test
fdivrs
mov
jbe
adc
cmc
jno
daa
push
inc
xchg
nop
mov
movsb
adc
cmc
pop
xchg
and
lcall
insb
adc
cmc
adc
test
ljmp
hlt
cld
lcall
testl
xchg
mov
cld
jmp
cmc
cld
jle
fucom
enter
add
out
and
push
clc
aaa
daa
mov
sahf
pop
mov
out
fnstsw
ret
repnz
mov
js
lods
data16
das
imul
rclb
mov
add
imul
add
add
imul
addr16
mov
bnd
fsubrp
sub
nop
push
cli
mov
or
arpl
arpl
out
xchg
jmp
jmp
rolb
add
add
loop
or
arpl
or
xor
aas
push
aam
dec
jb
and
das
and
call
add
pop
sub
gs
out
bound
add
shrb
fiadds
jmp
sub
pusha
fisubs
mov
jmp
movsb
in
jmp
movsl
imul
pushf
push
cwtl
sbb
sub
sub
mov
out
in
mov
push
pop
outsl
adc
mov
rcrb
jbe
fsubp
or
sbb
add
and
jle
pop
mov
clc
dec
push
popf
push
inc
loopne
ljmp
pop
xor
push
push
loopne
mov
clc
lcall
jg
add
aad
shr
loop
xchg
jp
add
push
pop
xchg
xchg
filds
mov
adc
xabort
cmp
adc
sub
mov
jge
das
lods
add
movsb
jnp
data16
das
mov
dec
fistpll
xchg
xor
lods
sub
out
lods
mov
insb
push
or
mov
out
mov
stc
loope
jnp
xchg
pop
lret
insb
cmpb
dec
inc
movsb
repnz
test
jp
sub
fiaddl
movsb
push
mov
stc
dec
or
cmp
mov
add
shl
lcall
lea
jmp
add
imul
mov
cmpb
arpl
xchg
in
add
fisubrs
xor
pusha
jne
repz
sub
sbb
cmp
sbb
cmp
pop
mov
xor
sbb
pop
and
add
pop
sbb
mulb
adc
pop
lods
repz
je
test
sub
das
fiadds
mov
cmp
cmp
out
add
in
add
outsb
cs
lahf
je
xor
sub
aas
test
adc
and
ret
enter
arpl
push
out
add
mov
test
jo
push
stos
pop
stos
lds
lds
ljmp
mov
sub
jg
cmpsl
insl
or
push
pop
pusha
inc
cli
mov
sbb
icebp
mov
out
aaa
pop
faddl
push
insl
mov
rcr
add
aas
adc
jo
imul
push
loop
mov
imul
add
xchg
idiv
push
fadd
adcb
cli
call
pop
pop
xchg
loopne
mov
sub
mov
inc
test
int3
fisubl
in
cmp
and
sbb
adc
push
sub
mov
mov
das
xor
pop
in
roll
and
stc
push
add
repz
in
movsb
jp
push
stos
push
xor
mov
sbb
add
or
xlat
cmp
cmp
mov
fisubrl
cmp
mov
stos
or
cmpsl
add
or
enter
pop
stc
cmp
push
mov
arpl
je
scas
cmp
rclb
lods
test
cmc
ror
add
inc
cmp
jmp
mov
add
mov
mov
or
xchg
xor
mov
xchg
in
iret
jnp
shlb
mov
mov
adc
or
std
lret
out
xchg
fsubrp
sti
and
test
icebp
and
out
jae
aaa
adc
aaa
arpl
in
aaa
loop
mov
cli
out
xor
shlb
inc
pop
jmp
push
aaa
sub
add
stc
jmp
rcr
addb
add
out
xlat
pop
mov
and
dec
jo
or
jmp
aam
fdivl
mov
shrb
out
cmpsl
xor
add
sub
push
jb
sub
sbb
mov
inc
into
xchg
adc
jo
lds
add
in
fnstsw
jmp
xor
inc
jmp
sub
add
movsb
rcll
inc
adc
add
imul
and
xor
mov
and
or
dec
xchg
xchg
movl
int
mov
pop
sbb
mov
push
mov
add
arpl
nopl
jnp
addr16
sub
daa
add
sub
inc
call
int
sub
add
add
das
jno
test
xor
rorl
xchg
mov
mov
or
pop
xchg
jmp
jle
lods
and
les
add
loopne
je
inc
inc
or
mov
push
push
cld
push
dec
xchg
dec
sub
push
xchg
cwtl
repz
insb
push
aas
sub
add
ss
hlt
das
add
in
decl
add
fchs
stc
iret
mov
jmp
pop
pop
fisubrs
shr
xor
or
ret
lods
popf
out
add
mov
jmp
xchg
loop
jno
fsubrp
adcb
or
test
add
pop
add
call
fiadds
sub
repz
fsubrp
mov
loope
adc
and
mov
in
jb
xor
arpl
gs
mov
cs
xor
gs
mov
mov
jmp
mov
add
in
leave
cmp
pop
adc
and
adc
lahf
add
sub
add
scas
aam
cli
into
push
jbe
sub
jl
fiadds
out
shl
pushf
mov
sbb
dec
xor
mov
das
cmp
xlat
pop
jmp
add
cmpsl
fiadds
xchg
cmpb
xchg
sub
add
fwait
out
add
movsl
pop
sbb
inc
aad
pop
push
int
das
sbb
stc
lds
add
xchg
fstpt
popf
add
push
fldl
jmp
popf
sbb
add
push
fldl
inc
mov
cli
jns
inc
or
jecxz
xchg
faddl
xadd
mov
rol
mov
faddl
div
pop
jne
pop
movb
cli
sahf
add
mov
in
push
push
popf
inc
sbb
mov
add
cmp
pextrw
xchg
subb
or
outsl
sub
xchg
loop
cmp
add
das
je
data16
sbb
xchg
lods
fimuls
add
bound
cmpsl
or
je
add
sbb
out
icebp
add
bound
das
in
les
cmp
clc
ss
das
dec
push
or
sbbl
test
aas
lds
lods
bound
adc
lds
mov
enter
out
into
loopne
daa
gs
mov
out
imul
ljmp
mov
inc
add
aaa
notb
das
das
fidivs
dec
pop
stos
xor
arpl
mov
outsb
out
jmp
sbb
in
add
push
shll
sub
stos
pop
call
and
pop
enter
into
ljmp
dec
add
mov
cmc
jmp
sub
pop
xchg
sub
inc
aad
add
push
mov
ljmp
mov
or
sbb
fistps
adc
xor
add
stos
mov
or
inc
inc
std
jae
mov
dec
inc
mov
call
cwtl
test
xor
sti
out
cs
lret
clc
jmp
out
jae
add
stos
dec
cmc
add
loope
movaps
stc
dec
push
pop
lret
shll
jbe
pop
pop
push
clc
push
test
fisttpl
cli
fstpt
xchg
cmp
push
loope
dec
push
pop
dec
and
pop
cmp
or
add
add
pop
in
xchg
js
push
push
push
in
pop
daa
in
mov
sbb
push
push
clc
add
aas
or
repnz
cltd
int3
clc
call
int3
clc
mov
xor
lods
pop
mov
sub
dec
or
mov
mov
aam
cld
mov
shl
in
aaa
mov
cmpsb
adc
adc
dec
dec
inc
stos
jbe
std
mov
adc
push
mov
sbb
mov
test
pop
jb
push
add
pop
out
call
mov
mov
jo
repz
xor
sub
test
das
mov
add
mov
add
fsubrp
add
bound
das
fisubs
out
push
xchg
mov
and
stc
mov
fisttpll
lods
sahf
xlat
jg
fucomp
add
push
adc
arpl
xor
push
pmulhuw
add
push
arpl
push
sub
leave
jge
ret
push
lods
mov
mov
shrl
sbb
and
jl
imul
shll
add
jb
mov
sbb
sar
sub
add
cmpsl
cs
jo
out
lods
rolb
ds
in
bound
scas
inc
inc
jmp
dec
fildll
mov
jmp
sub
add
sti
in
add
sub
pop
gs
fiadds
jmp
xor
imull
xor
xchg
ficoml
sub
mov
pop
sar
bound
movsl
adc
adc
push
cmp
int3
cmp
bound
mov
subl
pushf
xchg
inc
inc
or
add
imul
hlt
lea
cmc
jb
jns
adc
fnstcw
bound
clc
int
sbb
sub
add
ds
inc
hlt
das
pop
cmc
add
dec
push
clc
or
or
popf
adc
add
push
out
add
push
ffree
inc
inc
loop
add
xchg
add
faddl
notl
repnz
add
fmull
test
loop
add
xor
cld
das
test
jg
mov
sub
das
sarb
ja
inc
fwait
dec
dec
and
push
test
mov
mov
inc
dec
inc
inc
and
fsubrl
pop
aam
stc
test
xor
mov
out
cmp
lods
sbb
inc
and
dec
cld
popf
push
mov
ljmp
jmp
jp
ja
pop
cmp
dec
call
mov
movsb
xchg
ja
jecxz
dec
cld
sub
cmp
pop
fisttps
lret
dec
dec
popa
sub
cs
stos
out
ljmp
fimuls
dec
pop
fsubrp
add
push
lds
mov
ljmp
xchg
jmp
mov
add
leave
arpl
push
sub
insl
jo
daa
shlb
pop
or
movsl
out
xchg
ret
xchg
mov
mov
lret
push
fdivrs
test
sub
mov
dec
mov
jno
add
sub
push
sbb
push
xchg
sbb
jmp
and
stc
pusha
out
mov
sub
add
das
fiaddl
jmp
and
xor
jl
pusha
xabort
negl
pop
test
xor
xlat
jb
pop
les
sub
add
sub
or
mov
pop
inc
add
mov
addb
cmp
xchg
xchg
negb
call
loope
jg
loope
test
add
loope
add
lods
das
fiaddl
mov
dec
aaa
xor
sub
mov
clc
incl
fidivrs
loope
and
add
lret
call
jp
push
or
fadds
jne
push
icebp
push
add
loope
pop
or
loopne
sub
loope
add
cmp
cld
das
movsb
sbbb
or
aas
mov
iret
clc
add
dec
pop
clc
sub
test
sub
movb
aaa
sahf
ljmp
mov
clc
sub
dec
stc
push
xor
in
hlt
decl
das
mov
jge
mov
stc
xor
fidivrs
push
mov
jnp
mov
add
add
ret
in
cmp
incl
add
ja
icebp
mov
add
mov
ljmp
jmp
inc
pop
out
inc
das
fwait
out
das
fsubrp
shl
push
shlb
jae
inc
mov
inc
xorb
add
pop
inc
stc
cwtl
ret
fbstp
les
mov
mov
adc
push
pop
or
fisubl
out
roll
add
out
add
popf
add
add
xlat
lods
or
add
cs
add
roll
insl
cltd
faddl
jmp
sub
mov
jae
ds
test
or
loopne
jmp
in
dec
popa
in
pop
inc
jne
pop
icebp
and
dec
jno
pop
ds
test
or
fildl
jmp
add
mov
cltd
movsb
outsl
sub
sub
ds
jmp
ret
out
stc
push
shrl
scas
in
mov
and
xor
insb
adc
add
ret
mov
or
push
fimuls
mov
jae
cld
lea
ret
or
stc
add
pop
sti
push
adc
jle
push
jl
sarl
add
dec
sahf
orb
ss
fiadds
mov
pop
mov
cmp
ja
shl
incl
add
adc
stc
push
mov
stc
cmp
inc
mov
lcall
test
or
inc
inc
inc
add
xor
std
popf
aad
jnp
mov
sbb
add
and
clc
jp
js
add
fcoml
jge
into
jne
divl
fidivl
inc
orb
sahf
add
cmp
and
ja
mov
sub
cmp
gs
lock
das
sbb
push
mov
add
cmp
push
scas
xchg
inc
add
xor
lock
in
xlat
fstpl
add
movsb
pop
sbb
das
ficomps
push
jmp
xchg
pop
fucomp
add
daa
push
pop
sub
jmp
inc
jg
add
xlat
and
adc
jl
cmpsb
gs
ss
cmp
inc
inc
xchg
fists
out
cmp
inc
syscall
cmpsl
sbb
pop
dec
add
fisubs
jecxz
jmp
mov
add
adc
sub
push
out
jno
push
movsl
scas
sbb
jbe
sub
mov
mull
pop
mov
jno
mov
call
lret
pop
dec
xor
or
ret
aad
aas
repz
inc
jne
pushf
jo
dec
jg
sbbl
inc
stc
stc
sti
out
inc
add
stos
aad
and
sub
sbb
dec
mov
inc
mov
mov
insb
mov
out
popf
test
sub
icebp
add
lret
inc
fiaddl
add
div
add
dec
or
or
lea
loopne
hlt
in
inc
test
mov
xchg
mov
cs
jle
push
mov
int
pop
push
icebp
add
dec
mov
add
shrl
inc
xor
mov
mov
jne
lds
fmull
xchg
pop
movsb
add
outsl
or
or
xor
loop
lock
cwtl
jge
das
dec
pop
cld
das
pushf
js
xor
add
cltd
leave
test
int
inc
das
fsubr
inc
mov
sub
jp
sub
push
clc
fs
xor
add
cld
jl
lods
cmpsb
clc
jl
jne
sti
test
lock
inc
mov
jmp
pop
movsb
cmpl
out
xorl
add
jb
jl
fsubl
jl
rorl
int3
mov
ret
jne
xchg
fildll
insb
inc
popf
jns
push
cld
xchg
fstl
lods
mov
mov
mov
inc
add
dec
fucomp
add
imul
and
movsl
out
cmc
loopne
add
fidivl
or
jmp
jo
bound
xchg
mov
es
jg
pop
sbb
cmp
ds
fbld
and
and
testl
cmpsl
or
bound
and
in
add
jg
in
add
das
fiadds
cmp
call
mov
sub
mov
cld
sub
jmp
fisubs
jns
inc
add
cmp
add
scas
mov
jle
sbb
aam
mov
push
aaa
addr16
dec
test
add
sub
xchg
arpl
push
jb
ds
mov
pop
sbb
dec
stc
pop
inc
add
add
scas
mov
jle
mov
mov
int3
mov
xchg
pop
fiadds
add
faddp
pop
jb
add
aad
cmc
push
shlb
ss
incl
arpl
cs
add
sti
mov
mov
jge
ljmp
pop
cs
sub
add
push
aaa
inc
or
add
pop
ss
dec
sub
mov
ss
add
jns
cmpl
dec
ss
clc
aas
clc
hlt
movlps
add
das
mov
jae
add
nop
and
incl
movb
hlt
mov
add
movl
movsb
out
js
sti
sub
xchg
movw
or
test
inc
and
das
cwtl
cmpb
les
int
cmp
push
insl
inc
lret
or
push
jmp
movb
fsts
scas
cmp
mov
out
jo
mov
popa
sub
mov
ljmp
jne
add
gs
nop
in
push
pop
call
mov
adc
popfw
mov
das
lea
hlt
shll
in
test
mov
arpl
push
mov
popa
adc
sub
stos
aaa
out
ret
cli
sahf
repz
jge
xchg
or
push
fcmovnu
xchg
loope
add
jo
mov
mov
mov
mov
scas
and
add
sahf
add
hlt
mov
jmp
ffreep
test
and
dec
xor
fadd
cmp
shll
mov
stos
pop
ds
insb
or
out
add
nop
icebp
mov
xor
pusha
ds
shrb
fs
mov
mov
add
rolb
jmp
mov
fnsave
jbe
stc
add
movsl
and
gs
or
cltd
in
add
fcmovu
cmp
fiaddl
test
into
adc
sbb
cli
incl
movsl
add
xchg
add
aaa
out
add
pop
or
mov
jne
fcmovu
or
add
clc
test
dec
dec
sbb
adc
push
fidivrl
mov
je
cltd
call
and
loop
add
add
pop
cmp
loop
mov
jg
cld
lea
ret
or
clc
add
xchg
jno
das
fld
test
push
dec
movl
outsl
pop
movsl
mov
xor
cmpsb
cmp
adc
and
add
mov
cmp
movl
insb
xor
test
jbe
add
inc
int3
mov
add
jbe
aas
hlt
add
sbb
dec
pop
cld
das
xchg
or
movl
sbb
int
inc
dec
pop
insl
dec
mov
clc
movb
fnsave
ja
stos
mov
pop
arpl
nop
loop
jge
jno
mov
test
lods
insl
ljmp
in
push
and
int
and
bsr
mov
mov
das
xchg
dec
mov
mov
adc
aas
loope
mov
cmpsl
xor
and
in
test
xchg
ret
and
imul
xchg
jmp
mov
popl
leave
movsl
daa
aad
jg
inc
ljmp
fucom
jp
add
fs
jmp
add
pop
mov
dec
jno
rol
cmp
in
lods
fidivl
mov
mov
ds
loop
add
enter
in
mov
pop
ds
sub
repnz
mov
imul
pushw
jmp
mov
fstl
push
lret
insl
add
fistps
filds
mov
add
loopne
rclb
jg
adc
dec
sbb
jge
pop
shll
jae
pop
jl
xchg
loope
nop
xchg
fiadds
xadd
stc
dec
cli
fs
shl
pop
jbe
jle
push
clc
test
ja
int3
fimull
push
fiadds
shll
gs
clc
inc
xchg
insl
fiadds
mov
cltd
add
inc
fiadds
addl
fwait
dec
add
xchg
and
incl
addr16
loopne
faddl
mov
dec
xor
out
cs
hlt
xor
icebp
jno
inc
push
rolb
sub
pop
call
mov
mov
jb
mov
test
add
ds
hlt
push
jg
add
les
movsb
adcb
out
sub
push
adc
lods
and
cmp
xchg
ljmp
add
push
add
int3
xchg
orb
adc
mov
rorb
jecxz
adc
scas
daa
push
fs
add
sbb
dec
lods
cmp
imul
fsubrp
xor
jmp
add
fiadds
xchg
add
ljmp
gs
stos
test
push
aaa
dec
jg
movsl
stos
outsb
fmul
add
ficoms
hlt
pop
mov
xchg
in
or
pop
add
lret
mull
fiadds
push
mov
fisubs
in
jmp
and
mulb
or
mov
mov
movsl
pop
ds
rcrl
jb
out
sub
add
mov
cmc
mov
sub
jb
mov
mov
sub
mov
adc
pop
and
les
incb
roll
jmp
aas
mov
cmpsb
je
inc
stc
mov
adc
mov
icebp
jo
mov
sbb
bound
loop
push
fdivs
or
mov
lcall
cs
fiadds
dec
loop
inc
push
mov
inc
orl
leave
mov
inc
pop
jp
in
mov
fiaddl
xorl
clc
push
dec
pop
add
xchg
pop
sti
and
fimull
test
or
mov
jp
orl
push
push
adcl
data16
adc
lcall
sbb
add
dec
inc
add
out
pushl
les
or
sbbb
push
mov
test
das
dec
or
add
cld
cmpsb
out
in
xchg
mov
cmc
mov
lock
mov
bound
mov
pop
xor
add
push
mov
in
add
fadds
add
cltd
stc
movsb
orb
inc
aas
lock
fdivrp
mov
test
mov
add
jmp
or
push
in
pushf
xor
or
subl
jl
jae
mulps
xchg
out
stos
adc
out
shrb
xchg
lods
daa
mov
or
in
or
loope
cmp
and
add
shr
and
or
push
movsl
mov
out
pop
mov
cmp
add
sub
add
mov
sub
or
cwtl
pop
mov
int3
sub
mov
adc
sbb
add
jmp
add
xor
add
sub
mov
das
lods
fiaddl
cli
stc
shrb
push
test
sub
mov
cwtl
sub
mov
jo
cli
insl
in
scas
xchg
insl
out
daa
add
mov
pop
mov
pop
into
inc
cli
ljmp
hlt
jge
jnp
or
int
fstps
hlt
jge
lret
pushf
or
add
pop
push
cli
decl
icebp
jge
imul
add
mov
add
xor
add
les
add
xchg
xor
add
xor
add
mov
add
lea
add
lea
cmp
push
sarl
imul
das
imul
cmp
add
and
cmp
jnp
cmp
sub
cmp
outsb
sarb
pop
sarb
mov
iret
cmp
fcmovne
cmp
jp
cmp
inc
sarl
cmp
cmp
arpl
cmp
pop
sarb
jae
int3
sti
jnp
int3
repz
cmpl
cmp
movb
mov
inc
les
mov
iret
add
lods
fisubs
mov
cmc
bound
pop
pop
or
add
fsubrp
rcrb
fisubs
inc
test
out
imul
sti
cltd
es
repz
xchg
mov
push
popf
or
int
cmp
push
sub
push
sub
mov
mov
sbb
xor
adc
mov
lret
mov
sub
stos
shl
scas
sarb
shlb
sbb
mov
inc
stc
mov
insl
add
or
push
bound
rclb
es
push
jb
ficoml
mov
add
jb
int
cmp
outsb
in
imul
leave
push
pop
imul
adc
mov
jmp
clc
mov
adc
lcall
test
lds
pop
mov
jns
sub
inc
in
inc
push
adc
bound
add
pusha
mov
inc
push
roll
adc
add
push
pusha
mov
rol
mov
addr16
sub
divl
push
repz
pop
popf
and
fildl
add
add
mov
mov
in
js
and
add
inc
inc
or
or
test
dec
pop
addb
dec
and
test
sti
shl
jge
aad
jge
xchg
mov
lcall
das
mov
jg
push
std
ljmp
sub
xchg
xlat
sahf
inc
add
test
cmc
cld
test
xchg
sbb
addr16
jne
and
add
add
sbb
jg
adc
sub
outsb
sbb
and
add
mov
jg
adc
test
xchg
or
mov
add
inc
cmpsl
mov
mov
ss
stc
das
mov
sub
outsl
mov
ds
inc
mov
lds
xchg
sti
inc
rcll
mov
jmp
lret
dec
push
ljmp
fisubs
enter
sbb
xchg
in
fiadds
das
fsubrp
aam
pop
xchg
loope
fdivrp
xor
pop
sub
inc
into
cld
nop
das
fsubrp
jl
pop
push
jmp
jo
loop
or
imull
pushf
daa
icebp
in
xlat
ljmp
add
ror
das
ficomps
or
das
icebp
sub
mov
add
repnz
add
sub
or
jmp
sub
xor
pop
jbe
sub
pop
fldcw
pushl
test
sub
xor
mov
daa
test
aad
ret
push
jmp
mov
pop
test
xchg
aad
or
fists
jecxz
lds
rcr
fists
push
sub
cld
jae
clc
inc
add
pusha
mov
sub
jge
dec
ja
ljmp
cli
add
fistpll
and
and
pop
incl
cs
fcoms
sbb
subb
and
fbld
call
add
adcb
xchg
and
sub
call
add
xchg
jge
push
dec
or
push
nop
add
outsb
test
add
lea
das
mov
sub
outsl
mov
or
aaa
xchg
dec
add
outsb
mov
in
jle
and
ljmp
inc
sarl
inc
add
mov
sub
out
mov
fsubrs
in
adc
push
push
out
mov
clc
das
mov
sub
out
mov
ljmp
and
push
mov
movl
sti
inc
fidivl
push
ljmp
add
jns
push
adc
xchg
adc
ret
bound
aas
push
sbb
mov
xchg
pop
andl
or
dec
ficomps
xchg
int
sbb
pop
push
insb
jnp
fsubrp
dec
and
test
jp
pop
sub
call
and
add
fildl
das
fisubs
fiadds
mov
scas
popf
std
das
add
push
lods
mov
dec
push
in
fidivs
test
sub
mov
int3
add
inc
and
imul
jmp
out
lds
xlat
xchg
lds
mov
sti
or
dec
jb
mov
add
sub
add
add
fiadds
lods
pop
pop
lods
jno
fildl
jmp
mov
jge
scas
add
or
lds
into
sbb
push
fdivrl
jle
std
call
xchg
xchg
push
push
scas
clc
lcall
fnstenv
mov
push
or
fstpt
xchg
movsb
mov
cmp
roll
adc
fstps
xchg
cs
cwtl
repz
xchg
int
mov
idiv
incl
add
xchg
push
pop
fildl
mov
fdivrs
lret
jle
adc
test
jo
jge
das
push
test
jbe
daa
ja
xchg
cmpsl
inc
idiv
or
hlt
je
mov
fisubs
int3
repz
mov
int3
jecxz
mov
in
lods
pusha
aad
pop
mov
test
sub
or
add
ds
movsb
lds
push
cmpsb
leave
pushf
test
mov
int
cmpsb
popa
cwtl
or
adc
add
cmp
add
cmpsl
je
decl
jne
xor
add
cmpsl
fnsave
jl
jmp
mov
jl
jmp
xchg
cld
add
jmp
daa
xor
jmp
aaa
add
stos
loopne
jnp
bnd
jnp
mov
push
mov
xchg
aad
das
jbe
fsubrp
add
jmp
movb
xor
mov
pop
outsb
arpl
pop
imul
add
dec
push
add
xchg
jmp
movsb
add
mov
xor
nop
es
push
lods
jne
jnp
sub
je
loope
decl
sahf
imull
lahf
loopne
enter
psubsw
inc
xchg
scas
movsb
insl
fld
dec
dec
js
fwait
into
out
add
add
adc
xchg
test
loope
and
adc
sub
notl
mov
and
cmp
or
add
adc
add
xchg
js
dec
mov
das
add
fidivrl
or
loopne
mov
pusha
loope
dec
dec
xchg
clc
decl
arpl
stc
pusha
jmp
inc
imul
movsb
jmp
mov
jbe
mov
sbb
fs
push
or
pop
push
or
filds
add
add
jb
out
sbbb
loopne
aad
jg
in
mov
incl
mov
lar
gs
test
sub
and
test
sub
fcomps
lcall
arpl
adc
test
or
mov
mov
inc
mov
cltd
jae
rcrl
push
movsb
mov
mov
int3
repz
jns
add
lods
pop
in
dec
pop
fdivrl
mov
out
mov
xchg
int
roll
adc
inc
sub
adc
inc
or
mov
jae
das
fisubs
push
dec
test
fidivrs
jle
ljmp
outsb
jecxz
jp
cltd
jae
aaa
addr16
stos
cmp
jns
movsl
xchg
push
jecxz
inc
scas
jne
cmp
gs
add
mov
jne
imul
add
leave
fs
arpl
adc
xlat
adc
sbb
sub
jmp
stc
mov
xchg
out
sub
jl
in
add
mov
add
or
add
flds
add
dec
rol
aam
push
call
test
cltd
clc
jmp
add
imul
pop
bound
test
lds
sub
popa
out
aas
sub
sarb
test
shlb
clc
lods
pusha
push
mov
pop
add
sub
jge
cmpsb
in
jae
fiadds
scas
xchg
add
sub
jge
mov
mov
enter
jnp
cmpb
clc
incl
add
jge
int
lock
jne
loope
mov
cmpb
push
cld
cmp
adc
add
std
mov
inc
add
push
outsl
popf
and
faddl
add
push
mov
sub
add
mov
fldt
sub
jmp
mov
xchg
inc
test
push
ljmp
add
das
test
mov
sub
aam
mov
or
mov
into
sbb
das
or
adc
xchg
jle
mov
inc
test
loopne
es
leave
repz
jnp
je
mov
mov
jae
fmull
bound
add
fsub
jmp
add
test
cmpb
add
add
add
clc
enter
sub
add
test
stos
inc
ljmp
pop
in
das
push
fiaddl
das
jp
sub
cmpsl
pop
rolb
das
shrl
add
out
cwtl
lahf
sbb
add
lods
outsl
int
dec
mul
jo
dec
jmp
xchg
ja
jmp
lea
data16
stos
sbb
add
add
jb
sbb
mov
mov
xor
das
fisubs
imul
push
sub
cmp
cli
sub
stos
and
mov
add
sub
mov
add
jmp
enter
sub
pop
lcall
add
xor
mov
lods
aam
mov
loop
dec
inc
add
pop
dec
mov
fiadds
jbe
fiadds
jmp
movsb
pop
mov
fiadds
sarb
pusha
faddp
insl
mov
sub
mov
and
pop
lock
pop
push
std
cmpsb
pop
mov
add
jmp
pop
adc
xchg
adc
dec
loop
nop
paddsb
add
testb
push
sahf
adc
xchg
addr16
xchg
mov
push
mov
dec
fisubrs
or
arpl
mov
push
adc
push
pop
pcmpgtd
loopne
shll
pushl
add
sahf
adc
push
imul
stc
or
arpl
hlt
push
in
das
jle
mov
pop
mov
xorb
add
add
cwtl
std
push
cmp
cld
adc
test
or
mov
xchg
adc
xlat
data16
aaa
test
sar
mov
out
xchg
leave
mull
ss
cmpl
test
jge
popl
mov
xchg
and
mov
add
out
jo
loopne
jb
cmp
adc
or
das
fidivs
sti
lcall
jns
or
cmp
mov
push
push
das
fidivs
sub
push
out
int3
sub
mov
cmp
bound
adc
xlat
jmp
enter
xchg
jnp
add
push
push
das
fisubs
add
pusha
mov
adc
add
sub
pop
sbb
mov
and
mov
sbb
pop
mov
movsb
push
psubsw
ret
lods
scas
mov
daa
pop
dec
lea
pop
mov
add
cmpsl
cs
jmp
add
cmpsl
sbb
mov
and
nop
sbb
add
jne
fiadds
bound
test
roll
shll
roll
scas
dec
hlt
pusha
pushf
push
sldt
frstor
outsb
push
adc
add
add
fsubl
in
decl
push
sbb
call
rorl
mov
bound
bound
iret
add
xor
mov
push
call
sub
mov
loop
inc
mov
in
add
adc
push
fs
adc
sahf
in
mov
jge
pop
pop
dec
or
mov
popa
xchg
mov
das
push
lcall
lods
adc
loop
add
push
lock
mov
push
rcll
xchg
add
aam
loop
ja
push
add
pop
push
loope
std
scas
adc
test
push
xlat
std
adc
das
test
divl
test
add
cli
push
mov
push
dec
daa
push
shl
jge
mov
fbstp
add
mov
or
push
inc
fidivs
cmp
jp
sbb
add
popa
arpl
sbb
sub
cmp
fisubrl
push
pushf
iret
mov
clc
pusha
mov
lret
push
mov
loopne
out
jmp
mov
arpl
out
test
out
es
je
das
fisubs
add
addl
inc
or
mov
outsb
sbb
add
das
fsubrp
insb
and
add
fiadds
loopne,pn
std
call
pushf
loop
mov
addl
lds
mov
push
bound
lock
jecxz
not
inc
xchg
sub
xchg
or
jge
mov
data16
mov
add
ja
lock
mov
or
inc
psubsw
add
std
xlat
sub
push
psubsw
ja
mov
mov
lea
fiadds
add
adc
push
mov
jne
arpl
mov
jg
mov
adc
pop
mov
rcl
mov
jge
stos
fildl
add
popa
lock
bound
add
sbb
push
arpl
add
add
or
add
loope
adc
pop
mov
push
loopne
jle
push
dec
or
sahf
cld
mov
jge
stos
fildl
add
jbe
adc
sub
leave
out
jge
rolb
add
jne
in
arpl
mov
mov
out
jp
mov
add
push
add
clc
inc
cld
lods
jle
jp
sbb
popa
test
push
xchg
out
add
movsb
repz
test
or
adc
das
adc
adc
mov
add
add
out
mov
mov
imul
pop
mov
fsubrp
add
fiadds
lea
bound
xor
mov
fsubrp
xor
les
pop
push
add
fisubs
xchg
repz
cmc
dec
fistl
add
push
data16
push
lcall
add
repz
mov
fst
jno
cmp
add
out
add
add
cmpsl
pop
or
std
sbb
fiadds
cwtl
sbb
lret
jbe
call
add
subl
cld
mov
in
add
mov
mov
sub
jmp
sub
out
leave
add
fiadds
xchg
pop
lock
or
ljmp
add
addr16
clc
mov
arpl
gs
jge
add
add
jbe
xchg
add
xchg
or
add
ret
call
and
and
int3
jnp
in
repnz
inc
mov
aam
leave
mov
fiaddl
add
or
pop
xchg
test
hlt
mov
adc
loope
adc
push
mov
clc
faddl
nop/reserved
hlt
mov
add
dec
adc
or
xor
test
inc
jne
test
adc
xchg
sbb
push
xchg
inc
sub
rorb
inc
pop
test
mov
push
mov
cmpb
mov
adc
and
add
mov
adc
ds
mov
mov
aaa
es
push
dec
ljmp
lods
mov
aas
push
ja
pushf
pop
dec
ficoms
xchg
mov
jmp
jne
test
dec
daa
mov
scas
add
sub
mov
nop
cmp
mov
fsubrp
pop
das
fidivs
mov
out
jmp
cs
ljmp
faddp
jle
add
gs
loop
add
sub
sbb
fsubrp
mov
das
push
lcall
repnz
mov
das
push
mov
jnp
in
jb
mov
sbb
and
sti
ja
sar
aaa
jnp
dec
clc
add
add
out
jmp
addr16
lcall
jae
pop
pop
cmpsl
push
jmp
sub
mov
ret
cli
pop
dec
and
add
out
jno
in
fiadds
jo
jbe
cmp
pusha
dec
loope
fists
mul
mov
fimuls
fdivrs
or
imull
mov
fs
jb
inc
psubsw
push
stc
pop
push
or
dec
pop
jnp
sub
pop
dec
jecxz
pop
xchg
lea
add
add
lock
jmp
ja
xchg
cld
fdivr
call
mov
add
jg
ljmp
test
lcall
out
into
je
loop
mov
lea
mov
push
loope
adc
loope
sub
leave
jle
jbe
mov
loop
mov
cmp
add
fnsave
add
add
adc
cli
mov
inc
loop
mov
jmp
add
das
sbb
jecxz
add
cwtl
mov
scas
aas
loope
bound
dec
jg
roll
jne
mov
add
push
mov
cmc
scas
xchg
lods
add
sub
jbe
mov
sti
scas
add
xor
push
cmp
lock
add
sub
cmp
divl
das
adc
or
sub
scas
sub
jne
mov
jne
add
jne
fists
jp
add
or
ficoms
push
dec
scas
int3
jp
aad
std
mov
fadds
das
shrl
xlat
in
jmp
jnp
in
sahf
ret
sbb
xor
es
jb
cmp
aad
movaps
scas
cmp
add
jmp
enter
movsl
jae
sub
jae
insl
xchg
adc
jo
xlat
jmp
add
in
shlb
jb
lret
bound
fsubrp
add
push
jb
cmp
dec
add
jge
mov
test
sub
test
add
fiadds
jmp
add
adcb
test
std
call
out
or
xor
aaa
mov
pop
jno
vpcmpgtd
pop
xchg
mov
pop
jno
cmpsl
push
or
aam
popa
fucomip
add
fwait
push
or
pop
js
jo
inc
psubsw
push
add
add
mov
in
stc
ljmp
add
fldl
data16
bound
es
leave
pop
push
add
add
clc
pop
ret
mov
rol
ret
int3
cld
jno
inc
into
rorb
add
enter
dec
jnp
cmp
inc
inc
lds
std
shrb
pop
lock
push
fnsave
clc
pop
mov
add
add
add
das
ja
jae
das
and
das
ja
mov
jbe
add
or
aas
lods
xor
add
sub
ljmp
ja
int3
arpl
cmp
jnp
inc
push
mov
and
mov
pop
insl
add
mov
in
out
jle
lret
mov
arpl
cmp
jnp
je
sbb
dec
lods
std
or
clc
outsl
mov
add
out
add
mov
or
sarb
jne
test
cmc
jle
jno
cmp
movlps
fadds
das
push
jb
sbb
pop
icebp
sti
xor
jb
sub
adc
fisubs
xor
ja
fsubr
jmp
xchg
xchg
jge
inc
lock
and
xchg
xchg
aaa
imul
aaa
jnp
arpl
call
popa
sti
mov
out
movl
lss
ss
sbb
add
cmc
dec
cltd
pusha
push
fiadds
adc
lret
pop
dec
loope
cs
jmp
push
push
or
jno
jmp
jmp
sub
pop
stos
add
push
xchg
lds
inc
xchg
lds
jb
pop
cli
cmpsb
mov
add
sub
inc
bound
push
adc
bound
dec
bound
mov
in
jbe
jno
iret
imull
fwait
push
or
pushf
mov
adc
in
jge
loop
push
or
icebp
rcll
sbb
mov
into
stc
inc
loop
sbb
add
mov
dec
cmp
xchg
jns
mov
jle
push
in
mov
stc
inc
mov
add
sub
sti
in
mov
add
leave
into
filds
add
rorb
push
int3
loopne
push
lock
shlb
xor
inc
inc
out
jne
sbb
ja
xchg
jecxz
mov
cld
std
addb
fnsave
adc
mov
mov
xchg
push
loopne
jnp
mov
ret
leave
test
pop
cmp
in
lods
jp
test
rcll
mov
int
movsb
outsb
add
ja
xchg
sahf
jbe
orl
and
add
mov
adc
das
xchg
add
das
add
sbb
cmpl
call
or
adc
xchg
cmc
add
gs
mov
and
stos
scas
mov
jp
xchg
xor
add
shrb
jbe
cmp
mov
call
inc
loope
jp
xchg
xor
jnp
aam
fsubrp
jp
push
out
add
gs
sti
out
add
fucomp
add
add
xsave
shr
add
jnp
fwait
cmp
repnz
lahf
and
or
das
fisubrs
add
sub
jl
mov
cmc
jb
loop
mov
bound
sub
add
cmp
and
test
cli
adc
push
jne
mov
mov
jne
push
pop
stc
pusha
out
jb
out
inc
inc
sbb
bound
push
or
popa
test
loope
jmp
sub
dec
pusha
adc
or
jb
arpl
shll
clc
cmpsb
out
popa
repnz
andl
fiadds
add
fidivrs
shlb
xchg
push
sub
add
push
cmc
jl
ret
clc
testb
fimuls
lea
lock
into
mov
pop
adc
fnstsw
enter
pop
mov
mov
outsl
cmc
push
clc
or
dec
mov
jae
adc
fisttpll
mov
fwait
jg
or
bound
adc
incl
mov
xchg
roll
les
mov
add
clc
pop
stc
test
cld
jne
inc
xchg
stc
lcall
cld
scas
pop
cmpsb
bnd
xor
add
jmp
scas
js
repz
call
js
jns
jb
das
int3
sti
mov
int3
repz
jmp
jns
movsb
add
add
mov
lahf
or
nop
cmpsl
mov
mov
test
das
xchg
stc
mov
fsubrp
mov
add
lea
pop
sahf
adc
test
nop
lock
cltd
cmpsl
fldcw
les
add
mov
repz
in
daa
xor
dec
push
ljmp
fsubrp
add
cltd
mov
stos
ret
loopne
imul
fimuls
add
ljmp
fsubrp
add
push
sub
push
adc
pop
iret
add
push
int
xchg
xlat
shr
add
lcall
sub
sub
push
stos
test
mov
call
sub
les
js
sub
test
add
out
cmp
xor
push
mov
push
ja
push
jecxz
sarb
mov
test
pop
loopne
psubsw
add
add
test
out
aaa
and
psubsw
or
in
jge
xchg
add
mov
mov
dec
popaw
mov
fcomip
mov
inc
fidivrl
push
jg
out
jae
lcall
cmp
scas
mov
mov
mov
insl
add
add
loop
dec
xchg
jle
clc
decl
or
xlat
or
int3
sub
or
in
shr
pop
jmp
lret
int3
das
mov
in
fidivs
test
or
add
cmp
sti
das
xchg
fnstenv
xor
ret
jle
repnz
pop
popa
xchg
add
mov
add
jg
sbb
and
xchg
jle
and
les
lock
call
movsb
adc
adc
xchg
add
inc
out
push
mov
pop
xor
sub
les
mov
xchg
push
fnstenv
and
stos
fcomps
inc
clc
fists
sbb
add
jbe
cmpsb
hlt
push
and
add
popa
pusha
mov
fsubrp
pop
es
push
add
dec
ss
dec
add
fidivs
jae
jmp
nop
jle
push
and
mov
xor
push
addr16
sbb
push
jb
call
data16
sbb
push
popf
push
push
test
arpl
sbb
mov
cmpsl
shl
mov
add
mull
jmp
rcl
lods
sahf
hlt
pusha
mov
psubsw
mov
rolb
jmp
into
decl
push
rolb
jmp
mov
pop
lea
fimuls
jmp
in
and
popf
jle
clc
insb
stos
gs
sub
xchg
fiadds
jmp
subl
inc
add
mov
add
movsl
addr16
sub
mov
push
add
jns
loop
mov
mov
mov
push
adc
xchg
gs
or
fiadds
decl
or
push
gs
adc
sub
mov
outsl
jge
repnz
mov
les
ret
xchg
mov
pop
mov
adc
scas
loopne
subps
roll
add
movsl
cmp
out
adc
ret
call
das
add
or
push
xorl
sbb
mov
jmp
pop
insb
inc
dec
int3
jnp
mov
mov
add
movsb
mov
inc
jmp
pusha
xchg
add
movsb
mov
add
scas
dec
push
stc
das
xchg
add
xchg
imull
xchg
add
xchg
pop
and
mov
push
mov
or
jno
call
inc
cmp
push
pop
in
stos
xchg
jmp
jmp
xchg
sub
jne
rcrl
add
pop
rcll
jmp
sbbl
outsb
ss
inc
dec
inc
push
xchg
cmp
int
jo
fisubrs
jg
jmp
add
fidivs
stos
rolb
rclb
push
cmpxchg
fiadds
mov
loopne
fiadds
out
int3
add
and
dec
call
xor
dec
jmp
add
addr16
and
dec
ljmp
dec
in
sub
and
dec
in
sub
mov
sub
out
sub
mov
sub
mov
sub
loope
addr16
and
addr16
xor
addr16
and
addr16
xor
addr16
and
addr16
xor
addr16
add
and
xlat
out
add
out
adcl
inc
rcpps
adc
repnz
add
imul
fdivrs
andb
jbe
adc
or
out
sub
fstpt
movl
xchg
jbe
inc
fiaddl
mov
jge
add
adc
mov
mov
add
inc
add
xlat
mov
adc
out
add
xlat
mov
add
xlat
mov
das
jnp
imulb
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
add
sub
or
sub
or
sub
jge
pop
js
jge
addr16
or
add
add
ret
fidivs
subl
push
bound
fsubr
pop
out
xor
fiadds
or
insl
pop
add
pop
daa
mov
sub
jmp
cltd
xchg
mov
arpl
sarb
pop
and
sub
cli
mov
fildll
fnsave
mov
pop
adc
or
frstor
sarl
or
dec
repz
xchg
mov
and
fwait
pop
sub
add
insb
popa
inc
cmc
mov
jne
add
sub
sub
stc
xor
popa
cmpl
add
out
cmp
xchg
and
cld
cmp
mov
test
fimuls
cmpsb
loope
test
sub
bound
push
loopne
jmp
sub
xrelease
mov
in
pop
lahf
xor
adc
add
sbbl
inc
jge
and
add
add
mov
loopne
fidivs
fdivp
inc
push
int
fimuls
mov
sar
cmp
lret
pop
imul
lret
jne
pop
or
add
test
test
jle
sub
clc
jo
cli
loop
or
inc
fimuls
incl
add
std
xor
jne,pn
imul
add
aam
in
subl
sub
inc
out
pop
in
sub
hlt
xor
mov
jecxz
and
shlb
dec
mov
sbb
mov
sbb
mov
or
push
sbb
mov
les
fwait
imul
dec
test
xchg
add
loop
xchg
push
sbb
adc
lock
and
sub
scas
aaa
push
cld
fnstcw
mov
cmp
pop
push
mov
and
and
call
aam
adc
clc
stos
sbb
sbb
call
push
pop
orb
mov
pushf
es
jmp
ljmp
fsubrp
xchg
jmp
fsubrp
add
fsubrp
add
fsubrp
add
add
add
faddp
add
ficomps
add
ficoms
das
fmulp
add
faddp
add
das
fidivs
mov
fiadds
scas
cmp
clc
cmpsb
sbb
add
add
jl
clc
jle
fldl
jbe
aad
outsb
pop
lds
pop
movsl
add
in
push
add
pop
add
add
gs
jl
add
jl
or
pop
sbb
pop
cmp
pop
gs
pop
gs
mov
or
gs
inc
std
sbb
sbb
adc
adc
out
sub
cmp
add
xor
jge
jbe
pop
or
or
fstl
js
push
loop
add
jg
xlat
jg
add
bnd
repnz
inc
dec
out
push
lahf
and
daa
and
into
loope
add
call
dec
mov
mov
add
mov
cmp
shl
inc
sub
into
jg
loop
jg
jb
jg
jb
jge
outsb
out
cmp
and
or
sbb
and
aas
test
jne
and
shlb
cmp
test
inc
in
xchg
or
and
out
fsubs
and
imul
sub
icebp
or
xor
daa
dec
pop
add
adc
jge
aaa
inc
cmp
mov
add
pop
nop
mov
jle
push
xor
ja
and
pop
jno
cld
cmpsb
fadds
mov
sahf
scas
ror
bound
loop
aaa
add
scas
fsubp
jae
pop
iret
das
scas
jno
imul
es
movsl
test
loop
dec
aad
dec
sub
fsubrp
subl
jmp
xor
ljmp
popf
ffree
loopne
ljmp
or
pop
scas
dec
push
ss
in
adc
sti
test
pop
sub
sti
jge
pop
stos
leave
add
and
add
pop
out
mov
add
bnd
inc
cmp
sub
cmp
iret
dec
into
mov
fucompp
add
mov
add
loopne
jmp
sbbl
jnp
jl
xor
add
insb
or
lea
jl
test
stos
and
mov
out
and
rorl
addr16
out
pop
pop
dec
int
add
sti
fcompp
fdivs
sub
cmp
cmp
call
jno
mov
std
push
inc
mov
inc
mov
xchg
out
repz
add
sub
loop
mov
popl
mov
iret
shlb
mov
loopne
pop
jg
mov
mov
dec
cmp
adc
iret
insl
fistpll
add
sub
and
dec
sbb
add
lea
and
popf
or
repnz
testb
fnstcw
add
ret
add
testl
lcall
call
clc
je
shlb
mov
sbb
jl
ja
inc
cs
mov
jge
jo
cmpsb
xchg
faddl
add
js
mov
add
dec
add
das
jne
loopne
xlat
aas
std
outsb
out
mov
jle
out
inc
stc
cmp
add
add
ja
loopne
xchg
aas
std
out
in
mov
jle
popl
clc
in
xor
imul
icebp
push
std
fsubs
daa
int3
inc
or
je
jge
rorl
cmp
sbb
add
imul
sbb
insl
jns,pt
mov
pop
std
movsb
sub
cli
mov
push
lret
push
out
sbb
mov
std
add
mov
mov
sub
movsl
test
push
mov
push
xchg
push
push
sub
push
sub
test
inc
mov
push
rcll
add
add
mov
js
mov
icebp
sbb
add
mov
js
insb
jle
arpl
aaa
dec
mov
add
fcmovnbe
data16
jnp
xchg
or
test
pop
mov
out
pop
add
out
and
push
imul
xor
jno
push
mov
fcmovne
inc
out
out
test
xor
leave
rorb
add
and
stc
mov
xlat
jle
xor
add
stos
ja
jmp
fimuls
sbb
fiadds
add
or
test
js
addl
cwtl
clc
add
adc
push
cltd
test
adcl
xrelease
and
ret
mov
or
add
jns
fstpl
xadd
adc
outsl
fs
fisubrs
test
add
xchg
sti
or
test
invd
sbb
call
es
clc
add
insb
and
ffreep
sub
xor
sub
cli
jge
je
add
jle
sub
add
mov
jl
jae
inc
cs
mov
add
lods
scas
in
shr
and
lahf
and
ficomps
stc
jo
jo
das
hlt
inc
fisttpl
adc
shrb
xor
pop
std
test
add
sub
inc
add
mov
pop
dec
aas
pop
add
insl
dec
test
mov
or
enter
js
or
sub
and
ljmp
pop
aas
dec
add
mov
xchg
les
arpl
fs
cmp
fsubrl
and
pop
fisubs
dec
ljmp
sbb
dec
mov
arpl
mov
jae
or
adc
pusha
mov
das
fsubrp
cmp
fscale
adc
rorl
sbb
pusha
aam
sbb
push
or
shrl
cltd
push
shrl
sbb
add
dec
add
jp
sbb
and
outsl
adc
rcrb
cmp
cmp
incb
sub
arpl
mov
fdivp
sub
add
in
stc
xor
sbb
sub
hlt
inc
add
cli
hlt
and
inc
repz
add
not
lock
stc
cs
pop
mov
shlb
xchg
cmp
add
sub
mov
xchg
pop
xchg
in
ss
pop
mov
add
repz
cld
and
clc
mov
jge
jge
sub
jg
inc
sbb
push
fldl
push
in
rolb
fisttpl
pop
xlat
push
sbb
mov
xlat
add
cmpb
dec
cmp
pop
mov
push
das
pop
cmp
adc
scas
jge
iret
andb
mov
pop
pop
pusha
fimuls
push
andl
out
lods
add
add
mov
jne
push
mov
roll
and
out
jo
jo
data16
rcrb
xor
dec
jne
xor
sbb
jo
rcrb
jb
loopne
jg
add
ljmp
into
stos
je
or
cs
add
mov
hlt
jl
test
shrb
mov
jae
cmp
imul
in
lods
cwtl
leave
test
xor
shlb
xor
outsb
test
xchg
jnp
xchg
les
xchg
test
dec
jnp
xchg
jno
les
inc
dec
push
pop
jns
ljmp
add
mov
ljmp
mov
test
stos
jge
add
push
stos
rcl
js
lods
inc
out
jmp
adcb
cmp
addb
std
or
fdivrl
pop
jae
lods
push
dec
sbb
and
add
pop
add
xor
pusha
fiaddl
in
lret
sbb
sub
add
insb
mov
test
cltd
push
inc
sub
fwait
outsl
in
fnstenv
out
adc
fstpt
int3
fisubrl
popa
push
dec
mov
clc
jmp
fdivr
add
mov
sub
je
inc
push
out
push
pop
int
fs
insb
repnz
imul
mov
and
mov
int3
dec
cltd
xor
test
outsl
add
rcll
jmp
mov
faddl
nop
loopne
inc
add
adc
jne
add
jg
add
clc
sbb
and
sub
pop
xor
xadd
inc
xadd
dec
test
sbb
dec
out
cmovno
inc
data16
and
add
lea
jne
xchg
stc
incl
add
fwait
insb
ss
mov
dec
fcmovnb
inc
ss
push
push
in
dec
mov
das
add
ljmp
into
enter
sarl
das
loop
std
sub
inc
or
ljmp
insb
adc
jmp
leave
jecxz
inc
add
cmpsb
add
push
sbb
test
int
repz
mov
mov
dec
inc
add
add
iret
int
out
pushf
nop
dec
mov
rcl
sbbl
jb
cmp
inc
add
xchg
cmp
sub
inc
add
and
daa
ljmp
xchg
fidivs
dec
inc
loopne
call
bound
lea
cmp
outsb
add
call
pop
mov
out
xchg
jb
add
or
cs
mov
or
xor
mov
out
mov
push
adc
sub
sub
bound
sub
stos
shll
jle
push
ljmp
xor
mov
inc
jno
jo
scas
xchg
das
fiadds
jmp
aas
lea
sub
add
ret
sar
je
push
mov
fiadds
lcall
insl
hlt
test
fiadds
mov
inc
popa
sar
imul
mov
clc
xorb
ds
sub
add
stos
mov
clc
jmp
flds
in
mov
add
sub
inc
sbb
adc
call
cmp
popf
stc
std
mov
and
add
sbb
shlb
idiv
jno
jle
push
jne
addr16
cld
mov
push
rorb
movsl
jg
mov
loopne
rol
cli
sub
cli
movsb
nop
ror
cmp
mov
jle
sbb
cmc
mov
insl
addr16
cmp
out
add
add
mov
stos
jg
out
pop
stc
add
jb
jg
mov
add
lock
inc
mov
std
pusha
inc
mov
movsb
xchg
mov
sar
xchg
aad
or
mov
test
rcl
out
jge
imull
into
sub
insb
mov
mov
loope
cmp
sahf
xchg
jp
sldt
outsl
int
push
movsb
adcl
out
fdivr
stos
dec
mov
das
inc
add
repnz
pop
mov
sbb
clc
fnsave
inc
push
mov
xchg
jmp
mov
bound
loopne
sbb
das
fimuls
lock
fs
aas
ss
jno
push
push
mov
mov
xchg
aas
es
popa
lahf
add
add
test
mov
jg
push
xchg
hlt
push
ja
mov
jle
out
add
mov
dec
cmp
mov
aas
cmpsb
movsb
xorl
push
add
pop
icebp
sub
push
mov
push
clc
fs
push
clc
push
sub
add
mov
in
hlt
and
test
imul
add
adc
add
cld
cli
insb
push
mov
add
sarl
fiadds
jmp
add
inc
inc
cmpsl
negl
xor
add
xor
add
lods
mov
insl
test
pop
clc
arpl
movsb
mov
xlat
sbb
test
out
mov
mov
int3
pop
mov
or
jge,pn
jle
jge
insl
push
jae
int
or
push
out
mov
push
push
jmp
gs
add
mov
mov
ja
addr16
and
faddl
add
sub
push
push
pop
mov
add
push
icebp
jbe
pop
dec
or
sub
ret
mov
test
mov
nop
das
mov
and
sbb
xchg
lahf
mov
or
xchg
cmp
jno
xlat
pop
mov
fnstcw
or
jnp
dec
int3
jae
cmp
push
jge
das
inc
add
fmul
fadds
fdivrs
mov
stos
sbb
adc
cmpsb
incl
inc
cmpsb
push
inc
adc
das
inc
sub
stc
pop
cmp
add
xor
push
mov
fnstcw
mov
lods
fstp
comiss
cld
cmp
test
mov
jmp
inc
das
call
jae
xchg
dec
imul
mov
fisubrs
dec
in
mov
sahf
out
push
fiaddl
inc
in
dec
ljmp
fs
cmp
jb
add
fisubs
adc
sbb
inc
sub
sbb
repnz
jle
jb
pop
and
adc
insl
jmp
sbb
ss
in
loope
stos
stos
dec
dec
sbb
inc
dec
std
mov
add
call
mov
int
inc
clc
jb
cmc
dec
lcall
add
jb
fisttpll
mov
jo
dec
xchg
add
jge
dec
fnsave
movl
mov
jmp
adc
iret
sbb
add
cmp
cmp
or
dec
fidivrl
movb
mov
adc
scas
lea
mov
ljmp
inc
or
loopne
aad
inc
add
call
push
adc
add
xchg
cmp
lea
mov
inc
jge
insl
xchg
ds
adc
mov
fisttps
adc
fdiv
push
test
std
xchg
push
lock
pop
jne
dec
icebp
setnp
jmp
push
out
push
adc
incl
and
adc
and
push
mov
adc
js
das
push
inc
mov
stos
jne
out
lods
mov
aam
mov
loopne
shld
test
cmp
push
adc
adc
push
test
call
dec
test
dec
and
adc
aaa
insl
inc
ror
cmpsb
rorl
cmpl
xchg
xor
aad
fimuls
icebp
cmp
xchg
stc
add
inc
faddp
mov
push
and
mov
ret
pop
ljmp
push
mov
inc
fsubl
les
adc
dec
dec
ss
sar
mov
push
imul
push
popf
das
es
out
xchg
dec
arpl
xchg
subb
test
add
pop
stos
inc
adc
push
dec
out
inc
arpl
fwait
int
push
ss
add
push
push
loopne
push
push
loopne
mov
aam
scas
push
pusha
xchg
popf
jmp
jmp
out
mov
sbb
pop
pusha
rorb
jmp
fsubl
icebp
cmpsl
lcall
xor
mulb
adc
stc
sar
adc
es
iret
test
movsl
xchg
add
fldl
pushf
call
add
mov
sub
mov
jb
loope
xor
ret
roll
scas
and
ss
mov
lock
cld
jmp
sbb
push
fldl
mov
inc
dec
jge
repnz
dec
decb
call
and
sbb
in
stc
jo
hlt
cmp
pop
adc
mov
fidivrl
add
and
jg
mov
popf
push
mov
sub
mov
adc
pop
mov
jmp
adc
addl
ret
push
push
shrl
fistl
adc
shr
sub
pop
test
fimuls
xchg
ss
sub
inc
sub
or
push
mov
rclb
jmp
gs
fnsave
xor
add
js
pop
in
ljmp
shrb
adc
jno
stc
mov
dec
or
repz
pushl
int3
imul
int3
arpl
in
daa
int3
leave
pop
fmul
rcll
fnstcw
fildl
add
repz
adc
mov
push
sub
xor
sbb
addr16
sub
xchg
in
jle
ljmp
fisubl
xor
or
inc
ljmp
push
and
mov
xchg
jle
out
enter
xor
mov
ljmp
push
xchg
cltd
cmp
cltd
aas
push
popf
xor
pusha
and
daa
inc
pop
xor
push
add
sbb
jb
add
pusha
push
and
out
pop
jbe
sub
leave
clc
fbstp
mov
aaa
inc
sbb
push
clc
sbb
pop
inc
in
xchg
mov
ljmp
add
lock
pop
aas
loop
fidivs
pop
ds
sub
add
cmp
mov
lds
or
ret
adc
add
js
push
inc
rolb
jmp
add
jmp
pop
enter
pop
inc
push
lds
add
aad
movsb
inc
ss
push
inc
mov
mov
das
pop
inc
lea
mov
stos
jge
pop
lret
push
ret
lea
push
test
cli
je
ret
adc
or
or
cmp
into
add
fidivrs
push
ret
pop
cmpsb
call
push
cli
mov
movntps
dec
es
incl
ret
out
jge
jns
call
and
inc
push
cli
and
push
cmp
push
loopne
int3
das
test
dec
sbb
je
adc
cmc
mov
jecxz
adc
addr16
inc
jge
ss
or
push
push
inc
jnp
dec
xor
mov
jnp
add
out
dec
jge
add
xor
jne
dec
mov
or
inc
adc
repz
jnp
mov
call
int
jbe
fsubs
loopne
mov
loopne
jle
dec
xlat
jle
dec
fdivs
mov
lock
out
push
xor
stc
icebp
ss
fistpll
mov
pop
xchg
out
lret
icebp
mov
pop
cmpsb
out
int3
call
xor
out
fidivs
add
cmp
xor
ja
fiaddl
stos
inc
or
fildl
inc
ljmp
shlb
sbb
adc
movsl
cmp
fidivs
mov
es
ffree
jg
ss
test
pop
add
push
sahf
jmp
jge
add
xbegin
add
pop
insl
dec
jbe
stos
sub
mov
or
inc
jmp
loopne
inc
jmp
in
inc
jmp
push
push
inc
jmp
dec
inc
shr
sbb
fiadds
jmp
xor
scas
out
inc
mov
jmp
jb
int3
scas
out
inc
add
sub
mov
pusha
mov
cmc
data16
sub
add
mov
clc
dec
mov
testl
xchg
gs
adc
sahf
inc
add
push
repz
addr16
nop
adc
sahf
int3
mov
inc
mov
and
cmp
or
div
inc
ss
mov
pop
and
rorb
and
ffree
jmp
add
enter
or
adc
add
scas
stos
int
lods
stos
fmuls
incl
lock
adc
adc
sub
or
or
aas
mov
xor
loopne
loope
mov
jmp
adc
add
adc
aaa
cmp
and
inc
dec
icebp
push
mov
add
js
mov
lret
mov
xor
jecxz
int
pop
jne
call
in
cmp
cmp
mov
mov
add
jg
lds
cld
ds
enter
popa
cmp
jecxz
sub
cmp
arpl
cld
push
ss
aad
mov
cmp
mov
dec
push
test
popf
fldl
test
loop
in
fucomp
mov
or
jmp
or
push
jg
mov
scas
aaa
sti
adc
sub
jle
jb
inc
pop
iret
outsb
mov
or
lods
inc
sbb
mov
aad
addr16
sub
aad
lret
sub
add
ljmp
push
cltd
jle
mov
mov
enter
jno
loopne
sub
add
inc
add
fiadds
jle
bound
adc
leave
xor
das
pop
lods
call
nop
imul
push
pop
inc
or
jnp
loopne
outsl
mov
clc
rclb
arpl
int
fimuls
in
faddp
idivb
arpl
outsb
mov
clc
add
add
loope
ret
dec
push
and
dec
jbe
adc
ss
or
add
loope
test
icebp
fs
cmc
xlat
fstpl
not
popf
mov
jae
push
pop
stc
xor
int
and
iret
push
and
mov
add
pop
sarl
loop
inc
repnz
push
jg
loopne
add
cmp
jle
ret
cld
nop
add
lock
or
add
mov
mov
inc
add
push
in
leave
pop
add
push
pop
incb
jne
add
psubw
xor
jae
movsb
cmpsb
or
pop
mov
cmp
pusha
fstpt
jb
stc
or
inc
das
mov
mov
in
inc
cwtl
sahf
add
das
inc
add
jg
shlb
scas
cwtl
and
ret
aas
loopne
dec
popa
fdivrl
pop
scas
mov
sti
call
ficomps
jns
cs
arpl
fsubrp
add
gs
das
fsubrp
int3
push
pushf
adc
and
test
int
mov
mov
stos
stos
std
lss
das
xor
jae
or
push
xor
stos
es
or
jb
or
jb
or
sbb
clc
adc
iret
xor
bound
mov
add
push
mov
add
loopne
adc
jmp
jmp
mov
test
mov
insl
into
add
sub
add
sub
add
add
clc
adc
stc
add
fdivrp
add
sub
add
xor
add
add
sub
add
or
add
sub
add
or
add
or
add
sub
add
dec
aaa
clc
and
stc
add
inc
stc
add
sub
add
jmp
add
add
add
mov
cli
incl
add
cmp
dec
add
add
fldl
add
add
add
add
add
add
jl
cmp
push
fldl
add
add
lcall
cmp
es
add
or
cli
jmp
or
add
or
add
add
sub
cli
fimuls
cmp
ljmp
add
add
call
add
adc
add
das
and
aas
das
cld
adc
das
inc
add
das
sbbb
das
jl
aas
das
inc
add
das
pusha
sbb
aas
das
loopne
aas
das
inc
add
das
rcrb
fnstcw
das
xchg
das
inc
add
das
mov
mov
stc
mov
inc
add
das
inc
add
das
inc
add
das
jp
in
add
adc
sbb
pop
inc
add
push
inc
add
ds
add
ds
add
int
add
int
add
int
add
int
add
int
add
int
add
jmp
add
jmp
add
int
add
jmp
add
jmp
add
int3
jmp
int3
jmp
add
int
add
jmp
add
jmp
add
int
add
int
add
int
add
add
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
add
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
sub
adc
inc
ficompl
push
loop
adc
loop
adc
loop
adc
loop
adc
loop
adc
loop
adc
loop
adc
add
loop
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
loope
adc
add
push
loope
adc
cld
cmovbe
add
das
inc
add
xor
clc
sub
hlt
and
lock
cmp
in
xor
or
inc
add
and
stos
pop
inc
add
pop
inc
add
and
in
sbb
ds
add
ds
add
sub
sub
inc
add
cmp
mov
sub
mov
inc
add
cmp
mov
inc
add
sub
test
inc
add
cmp
mov
sub
cwtl
and
xchg
cmp
nop
add
xor
mov
fsubrp
add
in
add
in
add
in
add
int
add
jecxz
add
jmp
add
jmp
add
jmp
add
jecxz
add
jecxz
add
loop
add
jecxz
add
jecxz
add
jmp
add
jmp
jecxz
add
jmp
add
jecxz
add
jecxz
add
jecxz
add
jecxz
jmp
sub
adc
sub
pop
jmp
sub
pop
jmp
sub
pop
jmp
sub
adc
sub
adc
sub
adc
sub
pop
jmp
sub
pop
jmp
sub
pop
jmp
sub
pop
jmp
pop
jmp
sub
pop
jmp
sub
pop
jmp
sub
pop
jmp
sub
pop
jmp
sub
pop
jmp
xchg
cwtl
push
push
fsubp
push
push
push
inc
push
inc
fmulp
push
push
push
push
faddp
push
inc
fmulp
push
inc
fidivrs
push
push
push
fidivs
push
add
push
fiadds
clts
fidivs
frstor
fldl
fstl
push
fldl
fldl
xchg
frstor
push
xchg
fstl
xchg
sbb
xchg
or
xchg
fstpl
and
inc
add
and
adc
inc
add
cmp
mov
aaa
inc
add
daa
inc
add
add
es
add
push
inc
add
push
inc
add
inc
inc
add
xor
lock
in
and
call
xor
loopne
inc
add
and
fdivrs
inc
add
xor
or
inc
add
and
enter
shlb
add
sub
mov
cmp
jp
inc
add
sub
in
cmp
jmp
add
loop
add
add
into
jmp
add
loop
add
loop
add
loop
add
into
jmp
add
iret
jmp
add
jmp
add
jmp
add
loope
add
jmp
add
jmp
add
loope
add
add
loopne
add
loope
jmp
sub
add
jmp
sub
add
jmp
sub
or
jmp
sub
add
jmp
sub
add
jmp
sub
push
jmp
sub
push
jmp
sub
pop
jmp
add
sub
or
sub
add
jmp
sub
add
jmp
sub
add
or
fidivl
or
fisubrl
or
fisubl
or
push
push
push
push
fidivl
inc
fcmove
adc
push
fcmovu
push
inc
fcmove
push
inc
fcmovbe
push
push
loop
push
add
push
loop
or
loop
or
loop
or
loop
or
loop
or
loop
or
loop
or
loope
or
loope
or
loope
or
loope
or
loope
or
loope
or
aaa
add
and
add
cmp
add
xor
add
sub
add
and
add
cmp
add
xor
add
sub
add
and
add
cmp
add
xor
add
add
sub
add
and
add
xor
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
xor
jmp
add
fsubr
add
fsubr
add
fsubr
add
fsubr
add
fsubr
add
add
iret
jmp
add
fsubr
add
fsubr
add
fsubr
add
jmp
add
fsubr
add
xlat
jmp
add
xlat
jmp
add
jmp
add
xlat
jmp
add
pop
or
add
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
add
sub
or
sub
or
sub
or
sub
add
or
faddp
or
fmulp
or
fisubrs
fisubs
xchg
ficomps
xchg
xchg
or
fimuls
xchg
test
push
fimuls
or
orb
fiadds
push
fisubrs
add
jo
inc
fisubs
fisubrs
push
ficomps
fisubs
push
ficoms
ficomps
push
fimuls
ficoms
das
aaa
add
xor
aaa
add
sub
add
and
aaa
add
xor
aaa
add
and
aaa
add
xor
aaa
add
and
aaa
add
xor
aaa
add
add
and
aaa
add
xor
add
and
aaa
add
ss
add
ss
add
es
add
es
add
ss
add
ss
add
es
add
es
add
ss
add
ss
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
aad
add
shr
add
mov
jmp
sub
or
sub
or
sub
or
add
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
add
push
fildl
push
fucomi
or
fcomi
or
or
fucomi
or
fcmovnu
or
or
fidivl
or
fisubl
or
fcmove
or
fcmovbe
or
fcmovb
or
fcmove
or
ficompl
or
ficoml
or
fisubrl
or
fisubrl
or
mov
or
fwait
or
add
xchg
or
xchg
inc
fimull
or
aaa
add
aaa
aaa
add
daa
aaa
add
daa
aaa
add
aaa
aaa
add
aaa
aaa
add
and
aaa
add
xor
aaa
add
and
aaa
add
xor
aaa
add
and
aaa
add
xor
aaa
add
and
aaa
add
add
xor
aaa
add
and
aaa
add
xor
aaa
add
and
aaa
add
xor
aaa
add
and
xlat
jmp
add
jmp
add
jmp
add
jmp
add
fsubr
add
fsubr
add
fsubr
add
add
fsubr
add
fsubr
add
jmp
add
fsubr
add
fsubr
add
jmp
add
jmp
add
jmp
jmp
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
add
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
sub
or
inc
fbld
push
fildll
push
fistps
inc
fbld
add
inc
fists
push
fistps
push
fisttps
push
fists
push
filds
push
fisttps
push
fistpll
or
filds
push
fbstp
or
fidivrs
or
fisubrs
or
fidivs
or
fisubs
or
fisubrs
or
ficomps
or
fisubs
or
ficoms
or
fimuls
or
fiadds
or
fdivrp
or
fdivp
or
add
cli
or
xor
add
daa
xor
add
aaa
xor
add
daa
xor
add
aaa
aaa
add
daa
aaa
add
daa
aaa
add
aaa
aaa
add
aaa
aaa
add
daa
aaa
add
daa
aaa
add
aaa
aaa
add
aaa
aaa
add
daa
aaa
add
daa
aaa
add
aaa
aaa
add
aaa
aaa
add
daa
aaa
add
daa
aaa
add
aaa
aaa
add
add
aaa
aaa
add
daa
aaa
add
daa
aaa
add
aaa
aaa
add
aaa
aaa
add
daa
aaa
add
daa
fsubrp
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
sub
or
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
std
call
sub
std
call
sub
std
call
sub
std
call
fisttpl
pop
xchg
addb
push
fldt
add
add
push
fldt
add
inc
fistpl
inc
push
fistl
push
fistpl
push
fisttpl
push
fistl
push
fildl
push
add
fildl
add
fidivl
pop
fidivrl
pop
fisubrl
pop
fidivl
pop
fisubl
pop
fisubrl
pop
ficompl
pop
fisubl
pop
xchg
ficoml
pop
xchg
ficompl
pop
das
xor
add
xor
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
xor
add
sub
add
xor
add
sub
add
xor
add
sub
add
xor
add
sub
add
xor
add
sub
add
xor
add
sub
add
add
xor
add
sub
add
xor
jmp
add
in
add
in
add
in
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
jmp
add
jmp
add
loop
add
add
loop
add
loopne
add
loopne
add
in
add
jecxz
add
in
add
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
call
sub
call
sub
call
sub
call
sub
call
sub
call
sub
call
fbld
add
xchg
fbld
add
xchg
mov
xchg
filds
add
push
filds
fbstp
inc
fistpll
inc
fildll
push
fbstp
push
fbld
inc
fildll
inc
fistps
push
fbld
push
fists
push
fistps
push
fisttps
push
fists
push
filds
push
fisttps
push
fistpll
add
fidivs
add
das
add
add
sub
add
sub
add
sub
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
xor
add
sub
add
xor
add
sub
add
xor
add
sub
add
xor
add
sub
jmp
add
add
loop
add
jmp
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loope
add
loope
add
loope
add
loope
add
loope
add
loop
add
jmp
add
add
jmp
add
jmp
jmp
sub
cld
call
sub
cld
call
sub
cld
call
sub
cld
call
sub
cld
call
sub
cld
call
sub
cld
call
sub
cld
call
sub
cld
call
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
push
fadd
add
fcoml
add
fistpl
add
fisttpl
add
fistl
add
fildl
add
add
fstpt
add
fildl
add
fcomi
add
fucomi
add
add
fcmovnu
add
add
fcmovnbe
add
fildl
push
fcmovne
add
roll
inc
fcmovnb
add
lret
add
mov
add
mov
push
fstpt
add
add
add
add
das
add
add
call
and
inc
or
in
ljmp
dec
dec
add
add
das
inc
add
cmp
lret
inc
xor
cld
ljmp
jl
sbb
sub
add
pop
cmp
add
xchg
sub
sub
jmp
jge
pop
popa
mov
xor
jl
sbb
adc
add
das
pop
inc
add
pop
sub
inc
and
mov
xchg
call
pop
jp
jecxz
test
out
add
or
call
add
arpl
xchg
rcll
mov
adc
call
in
stos
and
and
sub
fwait
add
mov
lret
sahf
jmp
pop
fnsave
and
adc
in
jmp
sbb
sub
lcall
pop
mov
test
add
add
jmp
bound
cs
mov
lahf
and
jmp
ds
cmp
jl
out
insl
out
aam
clc
out
das
push
jmp
stos
mov
add
cmp
call
imul
clc
jmp
in
nop
nop
dec
adc
jmp
imul
imul
lahf
and
imul
nop
std
imul
xchg
add
mov
loope
add
fwait
adc
lcall
stc
inc
and
lahf
jae
push
pushf
idivb
push
loopne
call
mov
mov
pop
fisttpl
add
xor
inc
les
stc
inc
xor
lcall
push
rolb
outsb
cmp
incl
add
in
or
out
add
sub
ret
adc
jge
jecxz
push
ficoms
ret
test
out
mov
mov
mov
int3
mov
xchg
paddsb
or
idivl
add
lock
sub
inc
jns
cmp
ljmp
dec
addl
or
ret
jl
call
and
in
xchg
out
push
add
insb
sbb
stc
nop
cmp
out
jae
clc
lods
jmp
jmp
jno
idivl
dec
addl
ret
jl
fucom
inc
mov
in
sub
fadd
mov
out
pushf
fldt
inc
adcb
movsl
and
and
sub
sub
adc
jmp
fsubrp
add
mov
jmp
adc
std
sbbl
mov
adc
add
mov
jmp
adc
add
fisubrs
ja
push
jb
das
fisubrs
jbe
pop
add
ffreep
push
repnz
sub
jne
sbb
adc
add
pushf
sbb
jno
andl
clc
cmpsb
fwait
sbb
jno
andl
inc
xchg
sub
dec
jmp
pusha
adc
jl
xchg
cmp
sub
ffree
shrl
xchg
push
jmp
test
movb
sub
test
sahf
insl
in
scas
fwait
and
outsl
xchg
jne
dec
std
imul
call
sbb
jae
scas
jae
call
sbb
add
sahf
adc
jmp
sbb
jae
jle
stc
jmp
loopne
inc
adc
sbb
test
mov
adc
sbbl
sti
jmp
popl
les
loopne
rclb
stc
call
inc
xchg
adc
pop
fistpll
add
mov
inc
and
push
jnp
xchg
stc
call
pop
inc
sbb
push
inc
sbb
insl
test
inc
adc
call
inc
cmp
clc
dec
test
das
sub
test
or
inc
or
inc
sbb
cmp
jno
pop
sbb
clc
adc
xchg
push
inc
sbb
in
fcoml
lock
xchg
jmp
sti
jl
add
add
and
inc
push
cmp
jge
in
mov
inc
jmp
mov
sti
mov
jmp
jg
dec
add
clc
xchg
fldl
clc
xchg
imul
lar
sbb
cmp
sbb
ficompl
and
inc
push
imul
xlat
add
push
cli
aaa
sbb
and
aas
mov
call
popa
movsl
adc
inc
jecxz
push
pop
jmp
or
cli
jnp
testl
out
inc
stos
mov
push
xor
sub
xchg
enter
mov
dec
adc
xchg
repz
cmp
add
popa
add
or
negl
sbb
mov
ljmp
xor
add
or
clc
jmp
ss
test
push
or
stc
mov
or
aaa
popa
gs
push
push
clc
sub
fiaddl
mov
mov
push
out
test
xchg
ljmp
clc
stos
stos
xchg
in
loopne
adc
mov
push
add
fdiv
je
cli
sbb
add
add
popa
jnp
test
cmpl
inc
jne
popa
jnp
inc
jl
call
xchg
clc
add
leave
add
testl
loopne
insb
push
stc
call
test
in
push
stc
ret
jge
push
add
ret
cmc
loop
call
ds
fstps
push
jl
call
stc
incl
divl
xchg
insl
cli
clc
mov
clc
jo
xchg
clc
mov
test
stc
jo
xchg
test
add
push
test
test
cld
insl
add
stc
clc
inc
mov
inc
sbb
in
pushf
mov
and
add
and
clc
or
jo
add
pop
push
stc
clc
lock
jp
divl
xlat
push
cli
clc
fdivs
push
sub
push
call
in
sbb
enter
push
imul
xor
xchg
sub
jmp
or
push
sub
out
inc
or
or
das
or
lret
mov
add
or
add
dec
or
daa
push
arpl
fbld
shl
stc
pop
or
sbb
add
div
sbb
mov
enter
xlat
sbb
add
ret
push
test
je
ret
inc
cmc
mov
or
test
cmc
mov
cmp
insl
fcoms
jne
das
xchg
daa
addl
mov
jne
pop
mov
nop
stos
add
jne
inc
mov
push
mov
clc
pop
scas
test
ljmp
clc
sub
jnp
sbb
lods
or
ljmp
test
scas
hlt
add
adc
je
hlt
cmp
adcl
je
hlt
xor
adcl
mov
or
shl
rcrl
sbb
sbb
call
xorl
cmc
jae
cli
add
call
xchg
pop
jnp
dec
ja
call
push
pop
jnp
or
call
inc
pop
jnp
sbb
call
test
call
clc
in
je
adc
add
mov
push
fnsave
jp
hlt
outsl
or
xor
aad
movsb
sbb
mov
jmp
jg
dec
hlt
mov
clc
lods
ret
cli
adc
nop
addr16
jl
cli
decb
mov
cld
ljmp
insl
test
dec
nop
mov
jb
lods
jo
xor
add
pop
dec
out
add
adc
adc
push
in
clc
clc
sub
out
push
fsubrp
add
movsb
adc
xlat
sbb
cmp
lahf
icebp
repnz
pop
gs
mov
add
bnd
dec
sbb
xchg
pop
add
sbb
fcomp
and
cmpsl
repnz
mov
push
cld
int
adc
pop
jecxz
out
or
in
xchg
lcall
ja
add
js
mul
out
aaa
push
sub
notb
push
inc
or
or
repnz
and
and
add
inc
jmp
push
lock
push
test
pop
sti
idivb
add
lock
xchg
cmp
or
push
jne
xor
xlat
push
clc
scas
mov
or
stc
loop
dec
pop
push
clc
stos
stos
mov
ljmp
clc
push
fildl
cld
inc
std
mov
push
les
or
pop
repnz
ds
jecxz
add
inc
and
testb
loope
sarl
jae
ds
out
cmp
jge
in
mov
pop
mov
pop
mov
inc
add
rolb
sbb
inc
xor
je
lsl
call
ret
std
ret
add
outsl
xchg
or
or
adcl
add
cmpsl
xchg
xchg
or
push
orb
jne
sub
stc
mov
mov
das
xor
movsb
fwait
daa
sub
jnp
daa
test
add
jnp
aam
icebp
cmp
mov
sbb
add
stc
lock
jmp
hlt
cmp
subb
divl
sbb
les
add
xor
stc
popf
jae
and
jae
adc
jae
inc
mov
jae
xor
pusha
add
mov
aam
pop
mov
fdivr
jl
push
or
cwtl
call
mov
fsubrp
andb
call
and
cwtl
lret
addl
js
mulb
jp
mov
data16
fsubrp
add
add
out
in
mov
adc
push
mov
addr16
arpl
rorl
movsl
pop
jo
aaa
fsubrp
add
pop
add
inc
lahf
and
loopne
fmull
insl
out
hlt
or
dec
add
lods
dec
xlat
scas
icebp
scas
pop
xchg
clc
add
ljmp
les
ja
add
sub
mov
lds
fcom
aad
out
ret
pushl
test
rcl
or
add
outsb
stc
mov
addb
sub
add
jmp
push
shrl
add
out
and
lcall
jmp
test
stc
call
jo
add
movsb
jne
pop
fidivrl
jle
lock
fldl
jl
xorl
xchg
std
or
test
divl
and
clc
inc
repz
cmp
jae
add
inc
cmc
cmc
je
and
clc
shl
cmpl
clc
call
xchg
call
lds
pop
dec
fsubr
xor
clc
ret
add
and
clc
xchg
icebp
mov
das
or
ljmp
jl
push
cs
add
das
testl
mov
mulb
mov
ds
repz
and
gs
in
clc
clc
mov
shrb
add
sarl
hlt
jl
pop
outsl
add
push
in
mov
mov
and
xchg
xor
clc
mov
sub
test
or
inc
dec
je
sbb
adc
jl
sbb
pusha
ret
das
fimuls
or
mov
inc
pop
std
adc
add
mov
xchg
pop
in
jg,pn
fisubs
imul
out
fucomp
add
repz
dec
sti
jae
fdivs
pop
and
gs
repnz
fisttpl
ljmp
loop
mov
cwtl
ljmp
into
jle
jecxz
inc
sub
daa
sbbl
and
add
sub
mov
aad
sub
ret
mov
sub
ja
je
in
mov
jne
sub
or
shr
fidivs
cmp
push
sbb
push
out
push
pop
jno
push
stc
out
idivl
icebp
add
mov
mov
ds
add
dec
mov
add
add
call
push
sar
push
fwait
jp
ljmp
ja
ret
scas
add
pop
stc
ret
jnp
clc
incl
and
add
and
dec
out
or
sti
je
dec
test
call
test
rdpmc
fucomip
mov
xchg
jns
inc
sbb
mov
test
mov
add
add
xchg
fistpll
mov
xlat
sbb
jge
fnstsw
push
xchg
repnz
mov
loopne
jl
ja
sarl
add
adc
jb
mov
push
sti
or
sub
xchg
in
clc
push
lret
repnz
mov
das
pop
add
ljmp
mov
ds
cmp
add
and
push
pop
xchg
out
or
push
shrb
add
jb
mov
mov
in
data16
in
clc
ror
jl
cmp
call
in
mov
or
adc
add
cmpsb
fdivp
push
xchg
sti
stos
addl
icebp
addr16
sti
stos
fmul
lock
out
mov
in
mov
stos
mov
inc
sti
jmp
add
fidivrs
sub
insl
adc
fidivrs
add
fsubrp
add
ficomps
adc
ficomps
repz
jmp
add
fimuls
jmp
mov
cli
jmp
add
ficoms
mov
stc
imul
sub
add
add
sub
add
sbb
add
sub
add
sub
add
cmp
stc
imul
sub
add
sub
add
and
add
sub
add
sub
add
testl
sub
add
sub
add
lcall
cmc
movsb
cli
imul
sub
add
add
sub
add
xchg
cli
testl
mov
fldl
add
dec
cmc
push
call
cmc
call
fldl
add
into
add
out
cmc
incl
add
inc
fldl
add
inc
cmc
incl
gs
incl
add
push
fldl
add
inc
cmc
incl
popa
cmc
call
fldl
add
add
fldl
add
inc
cmc
mov
faddl
add
faddl
add
faddl
add
faddl
add
pop
add
das
aas
cld
mov
repnz
cld
test
cld
mov
xchg
mov
cld
subb
js
cld
jo
cld
push
add
push
sub
inc
fisubrl
lods
cld
xor
mov
sub
mov
sbb
cld
adc
mov
or
mov
clc
add
cld
call
pop
mov
fcomp
shll
mull
ret
testl
das
ficomps
lods
mov
testl
mov
and
lcall
jae
jmp
cltd
arpl
lret
cwtl
pop
imull
cwtl
dec
mull
cwtl
cmp
int
xor
xlat
cwtl
sub
aad
and
loope
sbb
pop
cwtl
adc
pop
cwtl
or
xchg
cwtl
add
pop
cwtl
sti
testb
das
fiadds
cmpsl
ret
stc
imul
sub
add
mov
test
mov
test
mov
mull
idivl
stc
imull
stc
testl
leave
stc
mull
leave
stc
idivl
mov
testl
mov
mull
xchg
stc
divl
xchg
stc
idiv
nop
stc
imull
stc
imull
repnz
repnz
shl
idivl
enter
shl
testl
repnz
xor
cmc
incl
add
inc
cmc
inc
inc
cmc
jmp
inc
cmc
ds
cmc
incl
inc
cmc
call
inc
cmc
pushl
inc
cmc
jmp
inc
cmc
call
dec
cmc
lcall
cmc
call
cmc
call
dec
cmc
clc
inc
cmc
call
inc
cmc
cli
inc
cmc
jmp
inc
cmc
call
dec
cmc
mov
dec
cmc
decl
inc
cmc
in
inc
cmc
incl
add
in
inc
cmc
push
inc
cmc
ljmp
adc
cld
lock
cld
call
enter
fsubrs
cld
enter
rolb
mov
sub
cld
mov
push
popf
cld
nop
and
cld
mov
sahf
cld
adcb
js
popf
cld
jo
popf
cld
push
scas
sahf
cld
pop
mov
push
pushf
sahf
cld
dec
scas
sahf
cld
inc
or
cld
xor
sahf
cld
sub
popf
cld
and
cld
sbb
cld
adc
inc
mov
add
cltd
mov
repz
jmp
scas
mov
fcomi
lea
lret
repz
mov
repz
mov
repz
movsb
add
mov
insl
movsb
xor
movsb
jnp
inc
movsb
jae
sbb
repz
repz
jg
xrelease
repz
jg
repz
jg
repz
jg
repz
repnz
repnz
mov
test
jns
imull
imul
neg
pop
repnz
push
repnz
add
inc
repnz
cmp
notl
repnz
repnz
repnz
or
notl
repnz
stc
icebp
mull
xchg
icebp
imul
sub
add
mov
icebp
div
stos
icebp
imul
sub
add
sub
and
fiadds
adcb
addb
add
je
cmc
call
dec
cmc
fimuls
add
push
fiadds
add
dec
cmc
ljmp
push
dec
cmc
incl
dec
cmc
jmp
dec
cmc
pushl
cmc
decb
call
dec
cmc
call
cmc
jmp
call
dec
cmc
call
dec
cmc
push
dec
cmc
ds
cmc
incl
ljmp
cmc
ljmp
dec
cmc
call
add
ds
cmc
jmp
arpl
xchg
cld
sub
cld
and
add
das
mov
cld
or
add
das
adc
cld
lock
test
cld
loopne
test
fcomp
test
cld
enter
rolb
mov
fsubrs
cld
mov
stos
test
cld
mov
test
cld
js
test
cld
add
push
adc
cld
push
mov
dec
fnsave
inc
lock
scas
xor
imul
sbb
xor
scas
or
inc
scas
add
inc
scas
sti
out
dec
scas
repz
xlat
scas
jmp
fildll
fucomi
mov
lret
out
imul
out
test
stos
out
mov
add
mov
out
push
test
out
leave
lods
mov
in
test
jnp
lret
test
imul
stos
arpl
jecxz
pop
out
add
xor
sub
repnz
xor
ja
icebp
testl
icebp
mull
fyl2x
testl
shl
rcrl
icebp
negl
imull
lcall
sti
mov
imul
xor
pop
mull
shl
divl
lret
xor
testl
icebp
negl
xchg
inc
cmc
call
inc
cmc
jmp
cmc
decl
cmc
cli
inc
cmc
decl
ljmp
cmp
incl
add
cmp
fdivrs
cmc
mov
cmp
call
cmp
lcall
cmc
jmp
cmc
inc
loope
add
dec
cmc
call
dec
cmc
pushl
cmc
decl
cmc
mov
dec
cmc
call
dec
cmc
ljmp
cmc
jmp
decl
dec
cmc
ljmp
inc
xchg
cld
push
dec
xchg
cld
pop
xchg
xchg
cld
push
mov
cld
add
dec
movsl
xchg
cld
inc
cmpsl
xchg
cld
cmp
nop
cld
xor
cld
sub
nop
cld
and
xchg
cld
sbb
add
das
in
ljmp
jl
cld
clc
pop
add
scas
cli
add
scas
jb
cld
loopne
add
scas
push
mov
rolb
xchg
cld
enter
ror
cld
mov
faddl
add
stos
xchg
nop
cld
add
scas
adc
add
scas
add
pop
dec
add
pop
cli
add
pop
in
add
pop
xlat
add
pop
xor
das
pop
jmp
das
pop
sti
add
pop
in
das
pop
jmp
add
pop
ljmp
in
out
lcall
jnp
sti
jmp
lcall
ja
jecxz
sbbl
lret
jmp
lcall
mov
jmp
lcall
jmp
xchg
jmp
cltd
mov
ljmp
lahf
ljmp
mov
ljmp
sub
add
cs
pop
sbb
out
jnp
push
jge
add
sub
or
sti
jg
lret
imul
xchg
movsl
add
mov
enter
rclb
push
popf
pop
mov
jg
mov
push
mov
fiadds
add
push
andl
mov
arpl
arpl
xlat
frstor
push
insl
mov
fs
push
jo
xorl
in
inc
jb
jl
imul
loop
add
adcl
add
push
jb
mov
push
fimuls
and
push
push
fiadds
push
jmp
jo
negl
inc
add
adcb
mov
test
imul
dec
pop
pop
push
push
add
sbb
dec
sub
je
xchg
dec
ja
testb
xor
popf
push
outsb
xchg
inc
je
mov
imull
lret
mov
js
inc
mov
inc
imul
enter
lret
popa
push
push
jno
and
addr16
sbb
sub
pop
imul
addr16
xor
arpl
pop
std
cmp
fiadds
push
jge
push
adc
mov
jb
sbb
jl
fnstenv
popa
sti
fldl
cli
adcb
xorb
das
fisubrs
adc
ret
andb
roll
adc
nop
jmp
dec
lahf
jp
popa
js
add
jo
std
addr16
sbb
jp
push
mov
mov
pop
push
jno
pop
xorl
add
jo
jmp
scas
dec
jne
enter
mov
add
popf
pop
popf
push
jg
sub
insl
xchg
loopne
add
cs
data16
popa
jge
jo
sub
jle
push
rolb
insb
inc
int3
jae
add
lcall
loop
imul
jno
push
fiadds
lods
sub
fs
jp
or
add
add
xchg
fistl
imul
dec
jb
mov
aaa
loop
gs
jne
gs
nop
pop
je
jg
insb
jne
push
je
jnp
add
popf
imul
pop
insb
mov
add
icebp
fiadds
jecxz
outsl
push
repz
bound
jge
outsb
in
xor
gs
and
add
adc
dec
out
pop
jbe
scas
outsl
jae
ja
dec
sub
add
inc
adc
imul
loope
jb
jp
movsb
jbe
outsl
das
add
inc
or
dec
testl
arpl
dec
imul
push
push
dec
push
jae
pop
dec
outsb
adc
js
test
dec
std
push
pop
arpl
addr16
add
icebp
pop
dec
insl
sti
mov
dec
imul
leave
inc
arpl
mov
cld
cmp
xchg
arpl
popa
imul
or
dec
xchg
dec
insl
xchg
dec
add
stos
ljmp
jmp
insb
mov
inc
add
fdivr
dec
jp
int
push
mov
mov
inc
inc
jg
add
fbstp
pop
dec
jne
add
add
fnstenv
bound
xchg
or
dec
das
fisubrs
add
fildll
fs
jp
or
dec
push
loopne
flds
std
jbe
pop
fdivrl
xor
je
addr16
pop
fnsave
pop
mov
jb
gs
jmpw
fldcw
push
mov
xor
jae
addr16
outsl
add
ja
sti
fiadds
lods
add
xor
aad
andl
sub
outsl
jb
dec
js
popf
push
je
enter
jmp
or
nop
add
jl
jnp
mov
cld
cltd
or
xchg
xchg
pop
cmpsl
aad
pop
jmp
imul
bnd
dec
fstpl
cld
sbb
imul
adc
add
lea
ja
add
fadds
cli
cwtl
pop
insb
sub
push
jne
jbe
push
faddp
add
fs
fimuls
popa
jp
inc
imul
inc
insb
mov
andb
js
gs
add
xchg
inc
gs
cwtl
pop
insb
stos
scas
pop
jp
xchg
js
add
add
popf
push
jae
xchg
data16
popl
add
pop
insb
jmp
pop
insl
cmp
rolb
dec
ja
gs
ret
imul
dec
std
inc
mov
cmp
push
loopne
imul
imul
pusha
insb
dec
testl
pop
aas
inc
imul
das
rolb
adc
inc
sbb
cmp
or
outsb
sbb
cld
imul
aas
imul
mov
das
out
add
popf
pop
push
mov
mov
pop
je
movsb
push
imul
fisubs
addr16
popf
negb
imul
xchg
nop
or
mov
add
fstps
pusha
dec
jnp
add
fcompl
addr16
jb
inc
add
push
jb
cmp
das
fisubs
imul
jo
xor
ficoms
or
jle
push
in
jo
ds
jno
pop
pushl
cmp
jae
pusha
jecxz
jmp
push
jecxz
dec
arpl
mov
add
sbb
int3
outsl
add
sub
imul
je
cmp
arpl
jno
or
add
nop
push
sti
push
insb
popa
cmc
push
mov
dec
ja
les
push
shlb
jmp
dec
push
mov
dec
mov
adc
mov
insb
mov
call
pop
mov
jp
jl
jp
jmp
or
cmp
je
push
into
gs
jmp
into
imul
add
xchg
imul
fildl
jge
push
xor
push
gs
add
insb
dec
daa
test
mov
imul
imul
adcl
adcl
fisubrl
add
andl
mov
add
push
jg
insb
cltd
xchg
rcr
inc
imul
fimuls
push
add
fidivl
je
mov
push
imul
clc
inc
arpl
cmc
popa
cmp
fwait
loop
arpl
imul
aad
inc
push
mov
inc
push
xchg
add
sub
inc
jb
mov
add
sub
push
inc
cltd
inc
jae
add
fwait
xor
jnp
pop
and
add
mov
repz
jb
jnp
jo
je
pop
sub
pop
arpl
fisttpll
repz
push
push
int3
push
ljmp
push
inc
push
jecxz
inc
pop
fisttpl
fwait
inc
push
pop
xchg
inc
ljmp
xor
push
mov
negl
daa
adc
push
add
pop
das
fsubrp
add
aaa
inc
inc
leave
push
jnp
mov
push
push
xor
push
das
fiadds
xor
dec
lea
sub
push
or
ja
fisttpll
add
movsl
pop
cld
dec
add
inc
push
lock
ljmp
xor
iret
fldl
pusha
xor
pop
cmp
mov
sbb
add
adc
add
jae
mov
sbb
fiadds
fsubr
cs
sbbb
enter
lods
popa
dec
insl
shlb
les
inc
les
add
mov
aas
insl
mov
dec
outsb
mov
cld
mov
dec
data16
packuswb
cmp
jae
fnstsw
add
cmp
into
cmp
icebp
cmp
fs
ljmp
popa
push
dec
jne
cmp
ret
add
ss
xor
push
push
ffreep
add
ss
hlt
cmp
inc
fimull
jo
cli
cmp
pop
jne
sub
inc
imul
bound
fiadds
fnstcw
push
gs
dec
imul
insb
cld
jo
pop
or
add
add
popa
pop
sarl
imul
inc
dec
inc
add
dec
add
sbb
insl
lret
arpl
repnz
jae
loopne
add
cmp
addr16
outsb
mov
xor
in
inc
addr16
mov
jns
dec
jae
stos
xor
add
dec
cwtl
push
imul
imul
push
arpl
jp
je
fisubs
add
push
lcall
inc
jl
add
sub
push
enter
push
rolb
push
int3
xor
int3
ds
add
fdivl
push
mov
cmp
adc
inc
add
add
fsubl
push
add
addl
xchg
add
pop
inc
push
ljmp
dec
lret
push
aas
inc
test
pop
inc
push
lods
bound
and
mov
das
sub
fwait
loopne
bound
pmaxub
ljmp
pop
movsl
add
inc
jae
or
add
sub
inc
outsl
inc
fldl
cmp
inc
insl
pop
add
int3
inc
push
lea
push
sub
pop
or
dec
je
sub
pop
or
push
insl
jmp
jge
xlat
pusha
cmp
pop
aas
insl
rorb
mov
fbstp
imul
sbb
rorl
xor
frstpm(287
add
xor
ds
mov
adc
sarl
inc
add
mov
cmp
fs
cmp
popa
inc
add
add
push
outsl
out
pop
push
repnz
push
fcomi
add
pop
outsb
push
push
pop
je
sub
bound
fistpl
jb
or
in
add
jmp
dec
jo
or
imul
push
pop
je
sahf
xor
lds
test
mov
je
xchg
sub
add
mov
inc
push
jo
imul
and
adc
sub
sub
arpl
pop
das
imul
add
imul
add
sub
sti
sub
adc
add
push
pop
stc
xor
clc
das
push
xchg
pop
imul
xor
xlat
add
sbb
sub
cmp
cmp
leave
aaa
push
inc
mov
add
ss
shll
inc
scas
push
sbb
xchg
sub
inc
ljmp
sub
inc
int3
push
xchg
aaa
dec
ljmp
sub
pop
xor
dec
cmp
rorb
xor
push
inc
and
add
sub
sub
push
push
xor
cld
pop
das
fisubrs
cli
and
pop
cli
sbb
add
sub
fsts
jae
stc
xor
mov
dec
push
jmp
push
cmp
pop
xchg
inc
inc
mov
push
dec
inc
xchg
cmp
jnp
inc
je
sub
add
pop
dec
dec
push
add
adc
sbb
negb
ds
fldl
inc
sub
pop
xor
push
inc
inc
inc
push
inc
push
inc
fiadds
loope
adc
inc
sub
dec
inc
push
add
fbstp
adc
or
aam
add
or
aas
jae
cld
push
je
add
je
fistps
jg
pop
outsl
fldcw
imul
push
push
add
movsl
or
xchg
dec
add
cld
insb
dec
mov
cld
push
outsl
aad
incl
mov
jno
filds
pop
outsl
fldcw
push
lock
inc
addb
gs
sub
add
inc
and
pop
jo
icebp
cmp
lds
aad
push
xor
push
jecxz
imul
sub
mov
insl
cmp
push
arpl
add
xor
stos
das
push
das
add
dec
or
es
xchg
xor
das
mov
push
or
dec
adc
pop
or
add
cwtl
add
pop
sub
push
xor
pop
dec
add
sar
lret
push
and
shlb
xchg
add
je
cs
mov
push
imul
cmp
inc
jl
sbb
add
subl
icebp
add
cmp
inc
js
idivb
inc
cmp
add
fbld
and
dec
sahf
cs
cmp
sub
sub
sub
add
fbld
xor
xchg
add
sbb
xor
dec
jl
das
fimuls
int3
dec
pop
and
cmp
add
fbld
daa
mov
add
cmp
add
dec
dec
inc
inc
ds
bound
dec
adc
jge
sbb
pop
cmp
sbb
sti
adc
push
jmp
sbb
cmp
adc
pop
xor
push
les
add
sub
sub
dec
xor
push
inc
je
dec
cmp
add
pop
cmp
sub
add
jmp
sbb
or
inc
push
dec
push
dec
push
dec
add
sub
pop
add
add
daa
jno
ja
fs
xor
insb
add
fdivl
and
imul
imul
add
or
ja
push
bound
fcomi
add
clc
push
je
fildl
push
jg
pop
outsl
add
loope
add
faddl
ret
fs
fs
mov
add
cmp
inc
outsb
mov
pop
imul
sub
push
imul
fstpt
popa
xchg
xor
arpl
adc
add
xor
inc
xchg
pop
inc
outsb
mov
and
loopne
push
das
movl
push
push
out
imul
dec
lock
aam
cli
sub
sub
rolb
cmp
push
pop
imul
xchg
dec
sub
xchg
daa
arpl
sbbl
cld
jae
add
sbb
inc
push
and
push
lea
arpl
les
cwtl
das
jns
vrcp14sd
inc
push
sub
sub
ljmp
and
jg
aas
daa
add
dec
ficomps
add
mov
inc
push
push
clc
das
das
ficoms
xor
and
out
sub
fiadds
dec
imul
sub
cmp
push
das
fisubs
jmp
enter
mov
sub
push
ljmp
sbb
fdivl
jbe
jecxz
ljmp
push
inc
jge
add
cmp
cmp
sub
insl
inc
dec
bound
dec
cmp
xor
and
push
cmp
pop
aaa
jno
and
pop
call
and
sub
add
xor
or
push
dec
cmc
and
push
int3
adc
lods
sub
into
push
cmp
pop
or
arpl
ds
add
jmp
add
add
inc
cmpsw
sbb
data16
loopne
add
divb
ficompl
push
push
loopne
add
bound
ljmp
ss
arpl
xchg
add
bound
push
jb
add
cmp
inc
cmp
je
and
push
fists
dec
sub
push
outsl
out
pop
push
add
fiaddl
insl
gs
filds
leave
in
insb
dec
imul
dec
imul
push
add
arpl
clc
push
das
xor
addr16
rcrb
add
jns
dec
rcrb
insl
mov
adc
add
cli
std
inc
mov
dec
pop
pushf
or
lahf
adc
inc
cltd
sbb
add
dec
std
inc
xchg
sub
jnp
and
add
push
call
inc
add
roll
pop
in
pop
push
leave
xor
insb
inc
scas
xor
and
cwtl
daa
insl
das
sub
inc
adc
push
jno
stc
add
xchg
inc
addr16
test
sbb
add
fildll
cs
dec
xchg
fistpll
andl
call
xor
add
add
dec
xor
aaa
dec
and
sub
rcrb
cmpl
add
xor
sub
es
cmp
sub
add
push
fsubrp
add
cmp
das
dec
aas
sub
inc
mov
sub
inc
cmpsb
and
cmp
add
fiadds
ja
sbb
fnstsw
xchg
push
inc
insl
nop
and
push
inc
jno
or
cmp
jnp
or
or
jae
push
aas
push
dec
dec
dec
jae
pop
push
cmp
push
inc
push
push
inc
dec
dec
jae
aas
push
cmp
add
push
push
xor
pop
pop
cmc
pop
cmp
insl
lock
cmp
lret
jno
push
cmp
cmp
xchg
sub
add
sub
pusha
je
or
push
pusha
jo
add
mov
add
and
clc
push
add
loop
jb
or
push
jecxz
pusha
data16
sub
insb
jne
out
add
inc
jae
ds
xor
daa
incl
add
insl
dec
fisttpl
push
rclb
fs
add
jo
pop
fs
or
outsl
add
add
sbb
cltd
xor
cmp
test
add
inc
add
xchg
insb
fisttpl
push
shll
das
je
push
popa
xor
pop
push
enter
cs
xchg
and
mov
push
insb
jl
sub
das
fdivrp
dec
add
mov
inc
outsb
xchg
push
cmp
fisubl
das
sub
leave
and
or
ja
lret
push
fidivrs
addr16
shrl
dec
ss
aaa
or
mov
and
cmp
add
dec
shll
push
lds
out
mov
and
fstpl
and
jecxz
mov
xor
sub
aaa
mov
int3
inc
jbe
add
das
fisubs
add
dec
popa
xor
xor
sub
cmp
mov
add
fisubrs
ss
ss
mov
dec
cmp
mov
and
xor
push
or
inc
sbb
cmp
pop
push
jno
add
bound
sti
add
aad
inc
loope,pt
fiadds
enter
in
dec
pop
xlat
dec
inc
jp
push
das
add
add
flds
mov
testl
sahf
sbb
addr16
add
fs
xor
sbb
jmp
push
dec
push
push
push
adc
insb
push
insl
inc
dec
xor
cmp
sub
jno
dec
sub
dec
and
pop
movntps
add
adc
add
adc
xor
je
push
jmp
mov
insb
add
add
ljmp
or
imul
inc
lds
les
inc
outsl
mov
jae
cmpsb
or
mov
es
insb
mov
loopne
fs
or
lcall
imul
push
push
inc
push
pop
xor
mulb
loopne
add
ljmp
out
fs
fs
adc
imul
std
test
add
pop
imul
inc
inc
fstps
dec
aas
ficompl
dec
sbb
inc
add
xlat
add
xchg
pushl
add
xor
push
mov
dec
shrb
jb
jbe
pop
les
pop
fcompl
das
inc
add
push
sub
mov
imul
cs
push
and
mov
pop
aas
das
xor
dec
mov
adc
push
pop
mov
pop
fidivrs
cmp
add
add
fidivrs
and
push
cmp
xor
clc
push
das
ficomps
add
cmp
sbb
movb
ret
xor
cmp
mov
fistpll
sbb
dec
mov
int3
cs
fidivs
mov
out
cmp
shll
sub
dec
jge
int3
dec
popl
xchg
fbstp
xchg
sub
mov
ljmp
sbb
add
sub
add
adc
xor
add
sub
insl
sbb
imul
xor
insl
sti
insl
xor
add
sub
insl
fucomi
xor
add
inc
sarl
add
pop
sub
bound
sbb
push
jle
bound
pop
aaa
insl
mov
dec
bound
sub
add
dec
dec
pop
aaa
dec
xor
jp
add
push
stc
fs
stc
cmp
add
loop
jae
in
gs
sub
add
add
aaa
and
jns
xor
imul
inc
push
sub
jb,pn
add
fists
bound
pusha
outsb
jae
push
stc
jb
inc
fdivl
mov
mull
cmpsl
or
inc
fcoml
add
jecxz
insb
jp
jns
gs
insl
gs
add
dec
ja
inc
dec
cmp
aad
add
mov
std
sbb
lock
je
add
outsb
jno
pop
arpl
dec
add
add
pop
inc
jecxz
sub
das
in
cld
cmp
loope
insl
adc
pop
imul
push
arpl
lds
cmp
push
test
das
pop
or
cmp
shrl
addr16
push
sbb
mov
inc
das
je
inc
shrl
addr16
push
sbb
add
arpl
pop
mov
fsubrp
add
sub
push
cmp
and
add
adc
cmp
push
sub
ss
xor
add
cmp
pop
xor
nopl
xor
fisubs
push
std
and
cmp
sbb
das
mov
and
fmulp
add
das
fwait
and
sub
out
lods
pop
add
xchg
and
fldl
fxch
xor
push
fisubrs
and
add
dec
pop
sub
xor
pop
fiadds
sbb
sti
jb
dec
xor
adc
jno
aas
inc
arpl
and
das
add
push
dec
pop
or
daa
arpl
push
sbb
sub
add
arpl
dec
sbb
add
sub
add
dec
and
mov
cmp
jmp
fwait
add
mov
jmp
sub
inc
jge
fiadds
add
or
jb
cld
xor
popa
js
cmp
push
loope
add
insb
push
imul
push
imul
inc
outsl
and
and
add
inc
cmp
pusha
gs
imul
or
add
gs
cld
aas
inc
das
out
add
loop
jb
ljmp
divl
push
imul
imul
aas
xor
insb
mov
repnz
fcompl
pop
sbb
movb
das
insb
push
je
bound
outsb
xchg
arpl
imul
push
inc
add
mov
sbb
stc
sbb
pop
sbb
nop
push
std
pop
das
aam
aas
insb
notl
pop
pop
and
jb
shll
add
popl
push
pop
push
cmp
mov
pop
pop
cmp
add
das
fmull
ljmp
jno
xchg
adc
add
add
das
pop
dec
aas
out
sbb
fcmovnb
add
in
fisttpll
xor
add
dec
xchg
add
sbb
fstpl
push
mov
jo
jle
sbb
inc
lock
and
fisubrs
and
inc
and
inc
cmp
dec
inc
inc
and
add
push
inc
dec
sbb
das
fidivs
add
inc
cld
das
data16
adc
or
sbb
push
xor
dec
das
fdivrp
add
fsubrl
add
inc
dec
mov
or
mov
add
add
fldl
cltd
and
dec
mov
in
jae,pt
fnsave
push
mov
add
addr16
sti
pop
jnp
inc
pop
orb
dec
pop
and
aas
inc
jae
sub
add
dec
dec
insl
sub
or
insl
dec
insb
cmp
push
or
pop
sub
inc
insl
or
xor
testl
and
jno
pop
xor
xor
dec
pop
lods
inc
fiadds
inc
sub
jb
cmp
dec
mov
mov
push
je
add
push
fnsave
xor
insb
mov
shrl
shll
xchg
push
fs
fs
fisttpll
into
or
push
or
cmc
push
imul
xor
data16
jae
xor
arpl
sbb
aas
outsb
and
data16
xor
inc
jne
in
outsl
dec
mov
pusha
outsl
cmp
add
ljmp
outsb
arpl
inc
gs
jo
das
sahf
or
out
movb
das
outsl
daa
je
xchg
arpl
push
push
outsl
loop
xor
add
outsl
daa
je
test
frstor
jae
xor
dec
add
xchg
popw
arpl
dec
add
sbb
dec
mov
sub
adc
sbb
pop
icebp
pop
outsb
push
sub
dec
pop
and
aas
das
int3
cld
inc
pop
rcll
outsb
push
ljmp
addr16
fs
cld
lcall
or
cs
loope
pushl
rcll
mov
jecxz
mov
xor
adc
inc
test
fidivs
xor
inc
js
loope
jns
mov
outsb
cmpsl
sbb
mov
sub
xor
andl
cmp
fidivrs
jo
sub
inc
sbb
cs
pop
cmp
or
push
cmp
daa
push
sbb
xor
and
xor
add
add
cmp
call
sub
push
pop
arpl
inc
fiadds
mov
pop
addr16
cmp
pop
enter
mov
sub
add
pop
inc
pop
mov
inc
sub
sub
add
inc
repz
dec
pop
inc
ds
daa
inc
jp
cmp
push
xor
inc
insl
sbb
sub
add
sub
jo
gs
hlt
fldl
cmp
es
add
in
arpl
push
data16
pop
pop
fs
gs
xchg
loope
add
out
insb
gs
out
arpl
push
arpl
data16
xchg
push
dec
mov
dec
inc
mov
dec
dec
mov
push
push
push
mov
fs
add
loopne
gs
je
add
lock
loope
add
insb
inc
push
or
jne
or
int3
arpl
loopne
add
std
insb
push
and
int
add
std
aas
push
outsb
testl
adc
add
das
add
je
fisubl
jo
mov
pop
outsb
adc
add
outsb
inc
push
out
push
dec
sub
jp
add
dec
add
pop
or
movb
xor
imul
sbb
das
lret
or
bound
mov
xor
imul
pop
adcb
addr16
inc
std
pop
bound
sbb
lds
pushf
sub
pop
hlt
and
das
fimuls
das
inc
sub
add
fstps
sbb
aas
or
add
or
or
sbb
das
add
sub
xor
add
sub
rolb
fistps
adc
das
fiadds
aam
lea
das
ljmp
fnsave
aas
jl
push
cmp
pop
bound
outsb
dec
nop
inc
inc
xor
inc
dec
sbb
push
sbb
xor
sbb
add
jb
add
aaa
and
or
add
add
add
in
jae,pn
inc
dec
insl
sbb
inc
add
aaa
packuswb
push
dec
pop
lds
rorl
inc
cmpsl
or
int3
fiadds
test
and
pop
dec
imul
push
cs
nop
push
inc
aas
nop
dec
sub
sub
add
sbb
pop
push
push
inc
pop
inc
inc
inc
xor
add
sub
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
add
push
fldl
add
add
inc
fldl
add
add
push
fldl
add
add
inc
fldl
add
fldl
add
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
movl
add
movl
add
movl
add
lds
add
lds
add
lds
add
lds
add
lds
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
ficoms
inc
outsl
fiadds
outsl
fsubrp
add
add
fiadds
out
fiadds
jno
push
add
jo
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
int
mov
jmp
das
popa
sbb
sub
add
sub
add
sub
add
push
mov
cld
sub
add
sub
add
sub
add
fiadds
push
sub
add
sub
add
out
add
xchg
loope
add
loop
add
add
loop
add
inc
idivb
push
loop
add
loope
add
cltd
add
loope
add
loope
add
dec
aas
loope
add
loope
add
es
xchg
loope
add
movsl
or
loope
add
pop
add
add
sub
inc
push
loope
add
add
rolb
cmovo
add
push
lods
mov
pop
xor
loope
mov
inc
stc
scas
dec
outsl
xchg
xchg
cltd
fisubl
out
js
outsl
cmp
push
lcall
outsl
push
jae
mov
int
cltd
outsl
sahf
pop
lahf
jae
orl
inc
mov
inc
dec
iret
mov
fildll
and
out
bnd
fisubl
mov
dec
scas
mov
pushf
gs
in
push
mov
sbb
test
jmp
in
adc
rcrl
and
popa
cld
scas
push
lods
stc
sbb
out
dec
fbld
jle
movsb
fwait
and
push
push
fimull
xor
push
sbbl
icebp
adcl
or
mov
mov
add
scas
dec
jecxz
adc
xchg
stos
or
dec
or
pop
inc
inc
outsb
subb
mov
cmp
mov
lret
xor
add
fiadds
and
cwtl
les
push
loope
dec
cmp
or
xchg
mov
mov
mov
data16
negb
int
adc
add
sub
jl
aam
movsl
lods
jo
aaa
sub
imul
ret
xlat
inc
and
mov
mov
or
mov
loop
outsl
mov
aaa
jnp
sbb
and
aaa
add
lret
scas
xchg
das
sbb
xchg
aas
xor
sub
aas
mov
dec
roll
test
inc
jl
add
aas
and
xchg
and
and
jns
push
aas
imul
in
leave
je
cmpsb
push
jne,pt
add
and
xor
daa
inc
sub
inc
ja
stos
cmp
pop
cmp
xchg
mov
stos
push
dec
or
or
cmp
stc
ja
in
mov
fisubl
or
pop
aam
sub
negb
ja
out
outsl
mov
mov
aad
scas
sbb
cltd
jae
inc
rcpps
dec
pop
push
mov
add
jbe
mov
xor
xchg
jae
add
sbb
dec
addb
ds
mov
adcb
add
mov
add
pop
dec
pop
xchg
fucomp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fdivrp
daa
add
jmp
add
fsubrp
add
fdivrp
mov
fsubrp
add
fsubrp
add
fsubrp
add
ficoms
add
fsubrp
add
fsubrp
add
ficoms
add
fsubrp
add
fsubrp
add
fidivrs
fsubrp
add
fsubrp
add
fsubrp
add
fdivp
mov
das
fsubrp
add
fsubrp
add
fisubs
jmp
sub
add
sub
add
call
add
sub
add
sub
add
mov
add
sub
add
sub
add
sub
add
int
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
out
jmp
sub
add
sub
add
out
jmp
sub
add
sub
add
call
add
sub
add
xchg
fiaddl
add
xchg
xor
add
fiaddl
add
mov
add
add
push
fiaddl
add
fiaddl
add
add
add
push
loop
add
xor
add
loop
add
loop
add
aaa
add
loop
add
loop
add
loope
add
sbb
add
loope
add
loope
add
loope
add
loope
add
loope
add
sbb
add
mov
add
mov
add
mov
add
in
dec
ds
mov
add
mov
add
add
mov
add
add
das
mov
add
mov
add
mov
add
js
ds
mov
add
mov
add
mov
add
xor
das
mov
add
mov
add
mov
add
lret
das
mov
add
mov
add
mov
add
loopne
ds
mov
add
mov
add
mov
add
push
cmp
das
mov
add
mov
add
fsubrp
add
add
ficoms
pop
fsubrp
add
fsubrp
add
fsubrp
add
faddp
cmp
das
fsubrp
add
fsubrp
add
cmp
das
fsubrp
add
fsubrp
add
fidivs
ds
fucomp
add
fsubrp
add
fsubrp
add
fiadds
cmp
das
fsubrp
add
fsubrp
add
fisubs
fstpt
fsubrp
add
fsubrp
add
fsubrp
add
ficoms
fiadds
add
fsubrp
add
fsubrp
add
fsubrp
add
fidivs
fdivrp
fldl
jmp
sub
add
sub
add
jp
add
sub
add
sub
add
sub
add
pop
loope
jmp
sub
add
sub
add
sub
add
sub
add
sub
add
loope
jmp
sub
add
sub
add
clc
loopne
jmp
add
sub
add
sub
add
sub
add
sub
add
sub
add
jecxz
jmp
sub
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
fiadds
add
add
push
dec
add
add
add
push
fiadds
add
add
cltd
dec
add
add
push
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
fiadds
add
fldl
add
fldl
add
dec
add
mov
add
mov
add
mov
add
imul
das
mov
add
mov
add
loopne
aas
das
mov
add
mov
add
add
mov
add
cwtl
mov
das
mov
add
mov
add
mov
add
movsl
add
das
mov
add
mov
add
mov
add
dec
add
das
mov
add
mov
add
mov
add
sbb
ds
mov
add
mov
add
mov
add
dec
std
ds
mov
add
mov
add
fsubrp
add
fisubs
stc
adc
jmp
add
faddp
pop
add
stc
fst
pop
icebp
fucomp
or
frstor
adc
out
fldl
adc
out
fstpl
adc
out
frstor
adc
out
fnsave
out
fstpl
out
fnsave
out
outsl
fisubrs
adc
fimuls
adc
ficoms
adc
fisubrs
fiadds
lds
add
cmp
add
sub
add
filds
push
inc
filds
cmp
filds
dec
xor
add
filds
inc
and
add
sbb
add
or
add
clc
fiadds
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
cld
sahf
imul
sub
add
jle
xchg
cmp
stos
cmp
xchg
ret
cmp
fstpt
nop
repz
sbb
add
fiaddl
add
xchg
idivl
lret
ds
xchg
pop
aas
jp
push
xchg
cmpl
xchg
mov
push
xchg
xchg
aas
xchg
fwait
aas
mov
ljmp
add
adc
shll
adc
repz
mov
xor
adc
push
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
pop
int3
jae
pop
into
mov
dec
mov
push
int
push
sti
int
push
mov
int3
repz
mov
add
mov
int
std
ljmp
pop
sti
into
push
add
pop
and
arpl
into
jae
repz
cmpl
into
mov
sbb
jnp
rcrl
sub
repz
xor
add
mov
into
and
ljmp
pop
jnp
push
pop
fidivrs
jl
lods
rclb
pushf
rcrb
int3
rolb
pushf
shrb
cld
sarb
rol
aad
ror
aad
rcl
iret
sbb
or
add
iret
in
rcll
rorb
add
shrb
pop
ror
roll
pushf
shrl
sarb
rorb
sarb
dec
shrb
aad
sbb
or
add
cmc
icebp
pop
cs
jmp
ljmp
ucomiss
call
aas
sub
xor
call
jg
int
sub
fstp
out
cs
mov
cs
jle
das
sbb
jge
cs
pop
pop
cs
pop
outsl
cs
aas
cs
jle
cs
jle
cs
jle
cs
pop
cs
add
pop
fildll
fstpl
das
add
and
cmp
inc
aaa
mov
lods
arpl
mov
lods
xorl
scas
xchg
aaa
mov
mov
sbb
shll
out
add
push
loop
add
stos
cmp
outsl
cmp
ja
adc
xchg
scas
test
mov
push
stos
mov
cmp
add
dec
cmp
push
cmp
test
cmp
outsl
cmp
idiv
mov
add
das
xor
push
or
cmc
nop
leave
daa
gs
das
gs
leave
aas
push
inc
leave
inc
push
push
leave
dec
inc
push
leave
fwait
inc
daa
lret
mov
xor
pop
lret
mov
sbb
enter
enter
enter
enter
repnz
bound
enter
leave
inc
dec
aaa
leave
mov
das
leave
mov
xor
lret
sub
shll
outsl
enter
mov
lds
fcoms
inc
fadds
xor
in
xor
in
xor
aad
inc
fld
xor
cltd
jmp
add
shrl
into
in
roll
add
into
into
pushf
shrl
jbe
push
into
jns
or
dec
rclb
xor
pushf
rcr
into
pop
rcll
iret
not
jne
imul
iret
and
shlb
into
aam
or
mov
iret
mov
dec
iret
add
arpl
das
mov
jb
cmp
repnz
arpl
cmp
hlt
sarb
incl
add
fidivrl
mov
in
cmp
icebp
cmp
cmc
mov
cmp
out
cmp
mulb
ds
cmp
in
cmp
imul
cmp
negb
and
scas
cmp
out
xor
ja
xor
push
jo
xor
imul
ss
mov
popf
jno
ss
push
add
mov
or
test
aas
push
sti
idiv
faddl
add
loope
inc
stos
out
xor
les
cmp
xlat
xor
repnz
add
adc
and
lods
inc
xor
scas
lea
subl
enter
ljmp
inc
xor
xchg
xor
xor
aad
xor
add
xor
add
shll
cmp
or
xor
mov
and
cmp
mov
roll
xor
pop
dec
cmp
movsb
cmp
add
test
or
push
push
jecxz
and
inc
gs
jle
pushl
nop
xor
cmp
shll
int
jmp
jecxz
xchg
repnz
add
add
xorl
sti
mov
and
int
bound
inc
sti
arpl
pop
aad
adcb
cmpsb
dec
ficomps
ret
inc
push
aam
inc
xor
fiaddl
aad
inc
out
aam
inc
lret
aam
inc
ret
inc
test
aad
inc
aad
inc
sbb
cmp
aad
mov
xchg
xchg
add
fsubrp
xor
into
loopne
add
inc
into
mov
push
xchg
or
xor
push
test
int
xor
iret
sub
pop
iret
xor
test
jno
nop
into
xorl
lods
shrb
loope
add
push
xor
cmp
mov
mov
xchg
jl
xchg
sbb
fstps
lock
add
sub
pop
sub
add
neg
sub
clc
data16
addr16
mov
sub
push
push
sub
push
push
sub
inc
mov
hlt
cmp
sub
mov
stc
sub
jb
outsl
sub
xor
cltd
sub
xlat
stc
mov
lock
adc
add
dec
ss
fsubs
in
xlat
jnp
or
nop
ss
xchg
ss
movsl
add
shlb
aad
ss
loope
test
icebp
ss
cld
ss
sbb
xor
sbb
aaa
mov
dec
aaa
arpl
sti
aad
aaa
fcmovbe
xorl
lea
mov
sahf
aaa
data16
iret
aaa
and
sti
aaa
add
push
cmp
xor
call
cwtl
cmp
xlat
in
adc
cmp
rol
cmp
mov
sarl
stos
gs
or
and
xchg
push
inc
cmp
dec
xchg
aaa
mov
inc
inc
cmp
aaa
add
test
push
cvtps2pi
push
je
fwait
sbb
sub
cld
add
mov
stc
out
das
mov
das
mov
in
xor
push
sub
dec
inc
inc
xor
inc
es
divl
adc
add
into
cmp
adc
sti
cmp
pop
shrb
inc
movsl
shr
inc
push
roll
leave
sarl
ds
rorb
cmp
mov
shlb
cmp
pop
shr
ds
mov
aas
not
scas
jecxz,pt
ret
ds
sarl
ror
ds
shlb
add
stos
rorb
das
fsubrp
push
or
loopne
data16
xchg
xor
into
mov
pop
iret
imul
lret
cs
lret
add
std
in
xor
mov
idiv
fs
addr16
addr16
hlt
popa
jecxz
fistps
sub
or
xor
and
cs
cs
mov
xor
das
test
lea
jmp
out
cli
hlt
sarl
lods
hlt
and
mov
xor
cmp
push
adc
popa
dec
cmp
cmp
cmp
cmp
dec
cmp
and
cmc
cmp
aam
cmp
aam
cmp
shrl
inc
aam
cmp
aam
cmp
aam
cmp
aam
cmp
add
cmp
aam
cmp
aam
cmp
aam
cmp
aad
cmp
aad
cmp
aad
cmp
aad
cmp
fstpt
xor
sbb
iret
push
cmp
push
inc
cmp
into
insl
cmp
iret
mov
cmp
iret
mov
cmp
iret
loopne
das
repz
clc
and
ss
or
jo
add
or
xchg
cli
pop
cmp
imul
cmp
push
cmp
int
mov
cmp
cmp
cmp
sarb
sub
cmp
sbb
cmp
adc
out
test
inc
pusha
cld
ljmp
xchg
xor
call
int3
pop
stc
sub
xchg
pop
pusha
sub
cmp
inc
cs
add
cmp
xchg
adc
jne
mov
push
aaa
add
or
shrb
or
fwait
das
push
shlb
mov
roll
nop
sarl
xor
dec
xor
mov
xor
aam
xor
aad
xor
stc
cmp
mov
sti
lds
stos
dec
cmp
jne
cmp
add
lods
cmp
fdivrs
jns
rol
cmp
enter
enter
and
cmp
xor
cmp
and
cmp
adc
movl
push
cmp
repnz
xor
and
cmp
cld
mov
insl
sub
add
lea
push
cmp
pop
add
pop
stos
sub
adc
cs
push
sub
xchg
sbb
cs
das
in
aaa
das
pushf
pop
xchg
das
mov
pop
cmp
out
cmp
sbb
cmp
leave
jp
std
lret
das
leave
sbb
icebp
lret
add
cmp
lahf
lret
mov
pop
cmp
lret
pop
leave
xchg
cmp
lret
add
out
fdivrs
gs
jecxz
data16
lret
add
filds
add
shlb
xor
cmp
or
pop
xor
xorb
into
fwait
xor
rorb
xor
aam
xor
xor
lahf
daa
xchg
daa
rcrl
xor
cmp
xor
cmp
xor
es
cmp
add
push
mov
sti
push
xchg
xor
cmp
or
popf
cmc
inc
cmp
gs
cmp
gs
or
cmp
pop
inc
sub
cmp
cmp
hlt
cmp
sub
cs
sbb
adc
cs
add
das
mov
cmp
jmp
add
fsubrp
xor
into
in
add
push
into
scas
xor
xor
dec
xor
iret
out
xor
iret
leave
xor
iret
shlb
iret
lods
xor
iret
pop
xor
das
fsubrp
and
ficoms
int3
jmp
xor
shlb
mov
rorl
add
into
cs
mov
movb
lret
ss
and
ss
fsubrp
xor
add
lds
das
fiadds
inc
mov
sub
sahf
push
pushf
cs
dec
add
addr16
jbe
fiaddl
cmp
aaa
fiadds
jmp
sub
add
sbb
das
mov
xor
add
cmp
imull
sbb
pop
ja
and
sub
outsl
pop
lahf
cs
add
push
sbb
push
dec
mov
dec
xor
cmp
adc
push
adc
xor
add
idiv
push
fldl
add
int3
js
inc
int3
xorb
rorb
xor
shlb
xor
sarb
xor
ror
xor
rcl
xor
rcr
xor
shl
xor
shr
xor
shl
xor
add
lret
add
lcall
xor
int3
and
cmp
sub
xor
xor
jp
cmp
or
xor
lret
dec
xor
lret
push
xor
leave
xor
mov
xor
fdivs
jo
mov
js
js
sbbb
mov
xor
pop
xchg
xor
cmp
loope
sub
add
xorl
dec
sbb
push
xor
inc
xor
pusha
xor
pusha
xor
adc
js
add
sbbb
mov
das
nop
pop
adc
cwtl
cmp
popa
cs
popa
cs
adc
mov
outsl
lret
popf
ss
popf
ss
or
or
add
mov
cmp
add
test
cs
leave
enter
xchg
fmulp
push
das
test
das
xor
iret
das
dec
ret
pop
ret
retw
mov
jp
mov
push
xor
ret
sub
enter
mov
pusha
les
adc
dec
xor
les
les
les
les
les
das
fiadds
jmp
xor
add
sbb
mov
add
dec
adc
cmp
adc
cmp
or
xor
add
pop
sub
enter
sarb
mov
cmp
xor
popa
xor
pop
xor
jno
sbbb
dec
sbb
xor
cmp
cmp
push
xor
dec
xor
cld
mov
xor
add
arpl
xor
inc
jns
add
leave
repz
sti
xor
iret
or
addr16
adc
das
rcrl
xor
and
outsl
iret
sub
xchg
xor
outsl
iret
cmp
pop
roll
dec
iret
dec
xor
rclb
out
rcrb
out
arpl
out
shrb
shlb
out
sarb
add
divl
xchg
lock
leave
add
cs
fs
adc
xchg
lds
push
enter
stc
aaa
xor
push
cmp
mov
cmp
sub
addl
cmpsb
xor
and
add
mov
xor
movsl
daa
xor
stos
daa
fs
xor
cli
xchg
es
daa
pop
push
mov
es
fdivl
cmpsb
push
push
loopne
add
xor
cmp
bound
divl
mov
jne
call
xchg
and
test
xor
xchg
xor
push
xor
add
xchg
mov
sub
xor
inc
xor
aaa
dec
lret
lock
sbb
inc
cmp
leave
cmp
fmul
jno
test
movsl
cmp
mov
dec
leave
cwtl
cmp
add
cmpb
leave
int3
cmp
leave
push
cmp
add
push
enter
enter
enter
enter
enter
enter
leave
cmp
cmp
sub
cmc
les
sub
push
xor
ret
ret
rolb
pop
fiadds
jmp
sub
add
and
xor
xor
xor
cmp
xor
push
xor
sbb
shrl
clc
add
dec
clc
pushf
sub
pusha
aam
mov
das
jns,pn
jge
hlt
pop
into
cs
cmp
das
testb
adc
lret
das
test
or
pop
sbb
cmp
adc
cmp
adc
jge
add
sub
xor
shlb
cmp
int
cmp
mov
cmp
test
aas
stos
mov
add
idiv
flds
add
inc
xor
lret
repz
pop
xor
lret
stos
xor
cmp
inc
int3
xorb
int3
mov
xor
iret
dec
xor
into
stos
xor
enter
jo
add
ror
and
sub
adc
repz
xor
dec
stc
dec
sub
dec
clc
addr16
pusha
ljmp
push
or
in
push
cmpsl
sub
inc
fsubrl
aaa
inc
fildll
xchg
xor
sub
xor
daa
inc
sub
fsubs
push
daa
push
sbb
daa
jb
xor
and
das
jne
cmp
cld
ljmp
int
pop
inc
xor
xor
pop
test
sarl
mov
sbb
pop
sub
and
lods
es
sub
jg
js
test
ret
outsb
ret
in
in
cs
shll
cmp
or
in
inc
sub
mov
pushf
sub
mov
dec
sub
add
mov
jge
ds
pop
add
fsubrp
xor
int
xor
adc
scas
add
scas
jnp
lret
scas
xchg
xor
scas
lea
scas
sub
xor
scas
pushl
mov
cwtl
and
xor
sbb
xor
cli
xorb
add
sub
repz
fisubrs
rcrb
das
cmp
add
pop
cmp
das
mov
outsl
das
push
dec
and
pop
inc
sub
mov
jp
or
mov
leave
or
xor
pop
addr16
adc
xor
movl
sbb
xor
push
inc
outsl
xor
js
das
ss
inc
shll
add
mov
push
enter
add
jp
add
aam
adc
mov
xor
xor
mov
xor
mov
xor
mov
xor
mov
xor
pop
xor
scas
xor
scas
xchg
xor
lods
pushl
lret
sub
es
xor
cmp
xor
push
scas
xchg
cmp
enter
lret
jmp
int3
xor
sbb
xchg
cmp
ret
dec
cmp
add
das
push
pop
mov
xor
sub
sbb
adcb
sub
das
test
rorb
cmp
pop
pop
sub
pop
sub
enter
push
pop
daa
sub
daa
xchg
cmp
mov
cmp
xor
sbb
dec
and
xor
xor
pop
xor
sar
aas
xor
popa
mov
sbb
xor
pusha
fdivl
je
fidivrs
in
mov
xor
mov
sub
mov
sub
cld
sub
mov
sub
mov
sub
mov
pop
sub
mov
cs
xchg
shrb
xor
es
mov
loopne
add
inc
mov
cltd
daa
xchg
jmp
add
fmulp
xor
xor
lods
lods
mov
xor
bound
xor
cmp
test
xor
sbb
xor
add
das
pop
sbb
cmp
or
push
xor
push
cs
push
dec
ss
mov
add
sbb
mull
fiadds
inc
cmp
xor
and
xor
push
xor
and
sbb
xor
imul
jmp
sub
leave
lods
pop
ss
push
ss
lret
inc
lret
xchg
lds
cmp
lds
cmp
add
pop
cmp
pop
cmp
xbegin
cmp
idivb
in
sbb
ds
test
call
ret
call
aas
add
aas
push
ret
add
xchg
add
addr16
mov
xor
lods
cmc
xor
stos
test
xchg
daa
mov
pusha
or
xchg
pop
or
pusha
hlt
and
sbb
and
inc
cltd
sub
aaa
mov
adc
jmp
sub
xor
jge
pop
sub
push
shrb
xor
inc
sub
dec
sub
add
xchg
gs
sub
push
jae
clc
inc
jne
push
inc
sub
xor
sub
adc
sub
sahf
sub
add
adc
pop
and
fmulp
daa
in
mov
or
daa
jecxz
mov
daa
lods
mov
cwtl
sbb
fbld
inc
mov
lcall
mov
and
sahf
mov
and
mov
and
fsubrp
xor
fdivp
xor
mov
xor
add
and
hlt
stos
xor
mov
stos
cmc
push
push
stos
sbb
iret
stos
jo
dec
stos
add
daa
js
loopne
push
sub
out
adc
sub
jecxz
pop
cmp
pusha
cmp
xor
cwtl
sub
cmp
sbb
cmp
adc
mov
inc
lods
cmp
xor
cmp
cmp
add
and
xor
sbb
out
adc
xor
hlt
dec
loope
adc
ss
dec
mov
add
insb
jae
add
add
dec
shll
xor
dec
xor
rorb
xor
lret
les
in
loope
mov
lret
inc
int3
pop
xor
lret
add
push
lret
pushl
aas
int3
loopne
jg
sub
pop
xor
int3
test
xor
aas
cltd
xor
cmc
aad
xor
push
ss
test
dec
xlat
ret
ss
xlat
add
mov
and
das
xlat
sbb
pop
sbb
jmp
stos
and
sbb
sbb
sbb
add
adc
testl
mull
adc
lock
sbb
push
sub
pop
push
jecxz
jl
es
inc
ret
or
mov
sbb
insb
adc
rolb
adc
hlt
mov
pop
inc
imul
bound
jnp
sti
pop
mov
dec
and
ficomps
das
mov
and
mov
and
add
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
fsubrp
mov
jae
add
fsubrp
adc
scas
loop
dec
scas
push
adc
scas
aad
push
lods
je
js
jae
nop
test
pushw
aad
xlat
sbb
lods
pop
sbb
stos
jmp
sbb
mov
sbb
mov
sbb
add
mov
sbb
mov
adc
and
cmp
adc
sub
dec
pmuludq
push
mov
aaa
dec
sub
mov
dec
jo
sbb
fiadds
mov
mov
xor
cmp
xor
cmp
cmp
nop
sub
daa
pop
cs
push
xlat
cs
sbb
jmp
cmp
je
add
das
arpl
inc
das
jp
sub
sub
mov
mov
cmp
dec
push
or
xchg
cmp
fwait
shrb
cmp
xlat
cmp
aam
cmp
jae
push
mov
mov
outsl
shll
aas
lahf
sar
aas
inc
cmc
call
fiaddl
add
lret
es
mov
iret
mov
xor
lret
bound
push
int3
aaa
xor
add
xchg
xor
enter
mov
ss
lret
xchg
mov
outsb
enter
rcll
cmp
shr
cmp
and
cmp
add
das
test
and
pop
xchg
adc
adc
lea
xchg
inc
leave
push
add
xchg
ljmp
cmc
or
push
cmc
adc
push
mov
adc
add
lcall
add
push
fdivr
mov
sbb
mov
and
push
lock
inc
nop/reserved
xor
adc
add
test
fsubrs
add
das
adc
out
stos
std
mov
iret
add
or
stos
and
sub
test
adc
adc
loope
add
out
mov
sbb
mov
sbb
mov
sbb
mov
pop
movsl
mov
push
jns
rcrb
outsl
pop
add
fidivs
lods
scas
fistl
subl
adc
adc
mov
ds
adc
and
and
adc
cmpsl
cmp
adc
mov
sbb
mov
sbb
add
push
add
adc
xchg
and
cmp
ss
push
sub
push
es
cmp
daa
fidivrl
mov
adc
xor
inc
sub
aaa
mov
xor
scas
and
call
aaa
mov
popf
aaa
jmp
xor
add
cmp
xor
sbb
xor
xor
dec
xor
xor
sub
sub
xor
sbb
ror
xor
rcr
xor
ljmp
shl
xor
rclb
xor
rcrb
xor
sub
mov
rorl
sbb
inc
xor
rcll
shlb
std
shlb
add
outsb
xor
sarb
rorl
xor
add
shlb
insl
rol
xor
sarl
xor
shr
xor
out
das
or
cld
push
jbe
add
xchg
or
and
fisttpll
sub
xchg
ds
cmp
dec
pop
es
pusha
cmp
fs
jp
clc
push
mov
add
push
push
mov
std
icebp
push
mov
repz
std
aas
push
sar
movsb
push
fstpl
push
out
pop
dec
push
cli
pop
orb
xchg
or
cmp
or
cmp
or
adc
scas
imul
mov
adc
mov
adc
mov
adc
mov
push
add
daa
sldt
xchg
ret
mov
adc
mov
adc
mov
adc
cmpsb
pop
sbb
cmpsb
mov
sbb
movsl
sub
xchg
movsl
mov
sbb
cmpsl
out
jo
or
add
pushf
pop
jl
add
push
sub
rcll
adc
leave
inc
icebp
aaa
lea
aaa
xchg
aaa
mov
aaa
xchg
aaa
and
insb
imul
ret
xor
cmp
repz
push
xor
xor
sub
xor
sbb
sub
aas
cmp
das
ljmp
cmp
and
cmp
xor
inc
xor
xchg
inc
loop
out
cmp
aaa
add
out
add
add
cwtl
ds
mov
aas
jmp
push
aas
cmc
rcrb
add
outsl
aas
mov
lods
cmc
lcall
add
mov
int
xor
xchg
xor
shrl
xor
push
xor
rcl
xor
and
ror
pop
xor
lret
shll
iret
fdivl
push
int
xor
into
mov
sub
xor
lahf
fcoms
sti
fsubr
aaa
pusha
lds
cmp
cmp
lret
das
inc
sbb
push
scas
adc
movsb
inc
push
adc
or
and
jmp
push
xor
lcall
rolb
das
jg
and
inc
or
pop
adcl
pop
jmp
stos
bound
repnz
out
lods
inc
popf
sbb
xor
outsb
sbb
and
sbb
and
sbb
dec
sbb
adc
cmp
add
pinsrw
comiss
stos
push
bound
jmp
add
adc
scas
loopne
jl
bound
adc
aaa
adc
lods
fstl
cmp
adc
dec
mov
push
leave
mov
or
call
cmpsb
push
sbb
add
fwait
sbb
stos
sbb
test
dec
push
das
fsubrp
add
fimuls
adc
push
repz
das
fimuls
push
lret
scas
fimull
movsl
inc
sbb
movsl
add
in
cmp
mov
into
inc
mov
push
xor
xchg
cmp
adc
daa
pop
cmp
pop
cmpl
add
inc
cmpl
jmp
sub
add
lret
sbb
xor
jb
push
xor
cmp
testl
xor
ja
mov
xor
or
cmp
aaa
sbb
sbb
cmp
adc
dec
aas
or
push
aas
adc
pop
aas
cmp
pusha
aas
add
xor
push
aas
xor
js
cmp
cmpb
rorl
aas
push
rcrl
aas
mov
add
mov
add
ror
xor
jp
push
lret
xchg
xor
lret
aam
ds
hlt
xor
lret
aaa
xor
lret
outsb
xor
int3
cwtl
xor
lret
ret
xor
jl
cli
xor
addr16
sbb
fisttpll
dec
cld
adc
outsl
cld
mov
adc
and
or
pop
push
or
cmp
cltd
push
dec
aaa
fiaddl
aaa
decb
jo
push
add
ja
cld
fdivrs
or
mov
subps
negl
sbb
popa
and
or
add
push
outsb
push
xchg
inc
sbb
mov
cmp
sar
push
fisubrs
adc
scas
dec
adc
scas
aad
inc
scas
push
subl
push
pop
scas
xchg
push
or
xchg
push
adc
scas
hlt
adc
scas
rclb
mov
xor
push
adc
push
scas
notl
scas
ficoms
stos
inc
sbb
add
dec
pop
ret
test
xchg
sbb
lods
sbb
fwait
lods
jmp
sbb
stos
leave
sbb
mov
sbb
stos
add
inc
repnz
pop
ss
imul
inc
das
mov
xor
jns
and
test
inc
subb
inc
jb
cltd
aaa
fiadds
jmp
sub
add
add
sbb
xor
sbb
xor
sbb
xor
inc
push
xor
xor
movsl
inc
xchg
xor
and
sub
sbb
sub
mov
push
sub
cmp
sub
inc
xchg
sub
cmp
adc
sbb
inc
xor
loop
test
xchg
les
les
push
enter
add
int3
inc
ss
fs
enter
enter
enter
enter
enter
leave
sub
loop
xor
mov
enter
leave
dec
aaa
mov
enter
enter
enter
enter
enter
enter
leave
mov
and
nop
aaa
sbb
cwtl
aaa
das
pop
adc
cmpsl
lfs
add
pop
adc
mov
add
das
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
ja
add
add
ja
add
ja
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fiadds
jmp
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
push
fiaddl
add
add
add
inc
fiaddl
add
add
push
fiaddl
add
add
inc
fiaddl
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loope
add
loope
add
loope
add
loope
add
loope
add
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
fsubrp
add
fsubrp
add
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
add
fsubrp
add
fsubrp
add
fsubrp
add
fiadds
jmp
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
add
push
fiadds
add
add
inc
fiadds
add
add
push
fiadds
add
add
inc
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fiadds
jmp
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
inc
fiaddl
add
add
push
fiaddl
add
add
inc
fiaddl
add
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fiadds
jmp
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
inc
filds
add
add
push
filds
add
add
inc
filds
add
add
push
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
fiadds
add
fiadds
add
fiadds
add
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fiadds
jmp
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
xchg
add
xchg
fildl
add
add
fildl
add
add
push
fildl
add
add
inc
fildl
add
add
push
fildl
add
add
inc
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
fiaddl
add
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
inc
add
das
aaa
add
das
aaa
add
das
aaa
add
das
aaa
add
das
aaa
add
das
aaa
add
das
aaa
add
das
aaa
add
add
das
aaa
add
das
aaa
add
das
aaa
add
das
aaa
add
das
aaa
add
das
aaa
add
das
aaa
add
das
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fsubrp
add
fiadds
jmp
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
filds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
filds
add
filds
add
add
inc
filds
add
add
push
filds
add
add
inc
filds
add
add
push
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
fiadds
add
fiadds
add
xor
add
add
das
xor
add
das
xor
add
das
xor
add
das
xor
add
das
xor
add
das
xor
add
das
xor
add
das
push
rorl
das
fstps
xor
loop
mov
and
icebp
mov
jl
pop
out
arpl
jmp
cmpsb
adc
mov
add
mov
adc
mov
fiadds
rorl
mov
push
aad
xlat
popf
ret
adc
rcll
or
dec
insb
or
pop
xor
stos
xchg
mov
jl
push
aaa
mov
xchg
mov
xchg
xor
add
push
add
mov
or
ljmp
or
call
and
imul
dec
icebp
stc
add
mov
or
push
in
cmpb
pop
enter
mov
pop
call
xor
test
and
cltd
pushf
add
insb
cwtl
sub
mov
xchg
inc
mov
or
and
lods
icebp
inc
rcll
pop
pop
in
aad
xor
mov
incb
pop
mov
mov
call
movsl
adc
mull
cltd
sub
pop
xlat
jnp
pop
fimuls
xor
jne
sub
mov
sub
call
in
mov
or
add
nop
in
mov
inc
popa
jp
add
adc
push
scas
leave
sub
jne
jns
hlt
xchg
sub
xchg
jb
pop
mov
rorl
mov
cmpsl
dec
inc
shll
pop
loop
push
das
ja
and
mov
lahf
adc
jnp
call
cwtl
roll
subl
push
scas
mov
jb
mov
pusha
in
cmp
fnsave
je
inc
test
ss
fcom
fmull
jmp
mov
inc
sbb
sub
pop
dec
push
popf
into
ror
test
pop
sbb
int3
jnp
int3
jae
int3
imul
int3
ficoml
push
mov
or
add
movsb
cmp
jp
in
popa
lods
xor
mov
xor
mov
push
cmp
mov
pop
aaa
imul
aas
je
add
movsl
push
mov
mov
in
fwait
cli
mov
push
cmp
mov
cmp
dec
in
fmull
daa
push
inc
clc
mov
clc
mov
stc
add
push
cmp
xchg
clc
mov
std
add
push
dec
lock
fwait
clc
mov
loope
dec
aaa
push
inc
cld
call
fiadds
jmp
pop
dec
hlt
lods
pop
add
negl
hlt
xor
sbb
pop
dec
lock
add
push
cmp
lods
sub
add
pop
filds
add
sbb
xchg
scas
or
push
inc
in
add
mov
in
ljmp
or
roll
lock
adc
mov
ret
int3
jnp
int3
jae
int3
imul
int3
ficompl
sbbl
call
mov
mov
scas
call
sub
mov
push
mov
call
cld
insb
fisubs
push
mov
repz
mov
fimuls
cld
das
fiadds
add
ret
test
or
push
cmp
mov
add
test
dec
cld
in
fisttpll
mov
inc
inc
add
in
push
int3
sti
adc
int3
repz
int3
jmp
int3
jp
in
mov
push
inc
xor
add
or
adc
int3
repz
int3
jmp
int3
jp
in
jb
push
mov
push
jmp
stos
hlt
inc
das
mov
int3
jae
int3
imul
int3
cli
push
in
fwait
aad
add
sahf
add
sbb
cmp
inc
das
push
cmp
decl
add
push
cmp
push
add
movsb
test
push
mov
or
lods
hlt
mov
movsb
ret
int3
jp
in
lock
hlt
add
fiadds
jmp
push
cmp
mov
mov
add
mov
fisttpll
cmp
add
shrl
pop
out
add
das
xor
rorl
adc
int3
jae
int3
imul
int3
ficoml
add
inc
fiadds
add
push
or
das
mov
int3
jae
int3
imul
int3
ficoml
sbb
mov
pop
js
das
sarl
fiadds
mov
mov
pop
ljmp
push
cmp
mov
mov
add
xor
add
push
inc
cld
movsb
stos
hlt
cmp
jae
mov
hlt
mov
add
dec
pop
mov
lahf
sar
pop
cli
add
or
inc
adcl
mov
scas
cmp
comiss
mov
push
cmp
add
push
dec
clc
mov
adc
ljmp
or
out
mov
push
cld
or
mov
push
cmp
mov
jmp
mov
mov
in
mov
push
cmp
xchg
fmull
or
call
cmpsl
pop
add
das
push
inc
lock
shl
xor
add
fimuls
lock
loopne
ljmp
test
mov
loopne
add
add
lods
notl
mov
hlt
mov
cmp
sbb
aaa
fistl
mov
add
push
inc
or
adc
movsb
test
mov
add
push
cmp
mov
test
jb
add
das
fimuls
adc
lret
cli
cmp
inc
repnz
add
das
fimuls
add
mov
or
scas
leave
adc
cli
dec
mov
adc
idiv
shrb
dec
lods
call
xorl
inc
push
xor
xorb
add
add
mov
cmc
incl
bound
bound
push
or
mov
add
addr16
sub
mov
dec
mov
add
addr16
loopne
in
idiv
mov
sub
int3
cli
push
push
sahf
add
and
cmp
inc
das
imul
les
addr16
push
movsb
xchg
add
movsb
mov
hlt
mov
fwait
ret
int3
jmp
int3
jp
in
lret
cmp
jmp
jb
inc
das
addr16
add
fwait
ret
int3
jmp
int3
jp
in
fucomi
mov
mov
add
lock
movsb
popf
xor
mov
add
jge
inc
hlt
movsb
mov
mov
push
hlt
mov
mov
insb
inc
lods
mov
xor
inc
stc
mov
push
or
imul
push
daa
push
sbb
adc
mov
push
mov
add
idivl
rcl
jmp
sbb
mov
jb
int3
sti
sub
int3
repz
int3
jmp
int3
pop
addr16
fwait
mov
add
cld
add
frstor
push
xchg
hlt
js
mov
push
inc
clc
or
lahf
add
das
cmp
mov
xor
add
add
fiadds
jmp
addr16
mov
push
push
movsb
shrb
fiadds
add
xchg
sarb
add
jbe
add
and
mov
mov
inc
das
pop
leave
mov
xor
das
addr16
push
into
mov
inc
das
mov
popf
jae
testl
inc
add
or
push
cmp
mov
ret
int3
imul
int3
fisubl
mov
cmp
lods
decl
add
mov
fwait
ret
int3
repz
int3
jmp
int3
pop
gs
fisttpl
rolb
and
gs
mov
mov
fstl
cmpsb
xchg
loopne
push
pop
mov
rorl
or
add
addr16
aas
das
gs
push
xchg
mov
push
lds
xor
fisubrs
psrad
push
cmp
mov
fmull
fisttpl
mov
mov
rcrl
testl
das
inc
or
cs
sets
jae
add
movsb
mov
add
inc
call
cmp
mov
fs
adc
test
mov
in
shl
stc
mov
call
mov
fs
or
or
movsb
xchg
call
inc
cmp
testl
mov
call
in
inc
push
cld
adc
add
add
sbb
outsl
fisubs
push
pop
fs
call
mov
hlt
inc
das
fisubrs
mov
nop
cld
insb
ficoms
bound
cmpl
mov
push
lds
xor
fimuls
inc
arpl
fidivs
dec
lock
mov
inc
das
inc
or
xor
fimuls
add
lock
add
lods
stc
insb
cld
in
fldl
jne
les
das
out
add
mov
hlt
push
test
notl
jnp
cld
insb
fimuls
fsubs
add
gs
mov
push
mov
push
mov
mov
inc
das
call
sub
mov
pop
mov
add
cmc
mov
bound
sub
mov
dec
add
mov
loopne
mov
inc
das
add
mov
add
push
mov
insb
cld
in
fstl
repnz
push
call
lods
sbb
jb
mov
sub
sub
das
popa
xor
add
mov
push
mov
lods
cld
insb
ficoms
cmp
inc
das
nop
call
xor
mov
mov
stc
jmp
mov
add
das
xor
mov
imul
mov
stos
hlt
inc
das
loope
sub
push
add
or
ljmp
popa
mov
inc
das
fcomi
stc
sub
mov
lea
push
push
enter
jb
inc
add
das
nop
notl
inc
loop
fdivs
add
fiadds
mov
xchg
ret
and
int3
jmp
int3
pop
imul
inc
mov
and
int3
cli
push
mov
movsb
rolb
out
inc
add
xchg
pop
pop
insb
and
int3
cli
push
cld
aas
das
jg
cld
in
fstl
xorl
mov
add
mov
lea
movsb
leave
mov
lcall
mov
pop
pop
int3
pop
addr16
mov
add
sbb
add
cltd
in
add
fiadds
jb
add
das
fidivrs
add
addr16
or
fucomp
test
lahf
xor
push
xor
add
stos
add
xor
inc
das
fiadds
add
add
inc
or
sub
inc
das
fldl
add
pop
xor
add
xor
das
fiadds
add
add
enter
mov
nop
cld
insb
fimuls
add
dec
hlt
inc
das
addr16
mov
mov
fs
push
mov
frstor
sahf
add
xor
cld
aas
das
pusha
add
fisttpll
add
inc
ret
xor
cld
in
adc
mov
inc
das
jge
cld
insb
ficoms
idiv
lods
sbb
mov
mov
xor
xor
mov
mov
jg
cld
insb
ficoms
mov
idiv
add
lods
sbb
jb
mov
gs
cld
hlt
mov
jae
gs
fdivr
inc
cmpsb
sti
nop
xor
cld
in
fisttpll
add
jle
cld
in
fldl
inc
dec
mov
add
hlt
push
push
or
incl
mov
add
adc
push
adc
in
lcall
adc
loopne
jecxz
cld
add
insb
fimuls
push
add
das
fsubrp
or
mov
fs
jae
gs
add
mov
sub
clc
mov
sub
clc
mov
gs
clc
scas
push
jmp
adc
sub
clc
xor
fldl
inc
push
data16
cwtl
and
pushf
add
add
das
in
leave
mov
mov
inc
das
jmp
mov
hlt
inc
das
inc
inc
notl
xor
add
fildl
scas
inc
add
das
fimuls
mov
hlt
inc
das
jge
cld
insb
ficoms
sub
ljmp
hlt
inc
das
call
test
cld
xor
sub
das
pop
mov
cld
add
in
fldl
je
jge
cld
in
fisttpll
pop
push
das
testl
outsl
arpl
pop
insb
and
int3
das
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
fiadds
add
fiadds
add
add
add
fiadds
add
fiadds
add
in
cwtl
xor
in
test
das
add
fiadds
add
cli
xor
in
xor
xor
dec
xor
jmp
xor
cmp
xor
lret
ljmp
or
cmp
jbe
dec
ss
ss
call
cltd
add
test
movsl
ss
out
aaa
push
jmp
std
aaa
xor
adc
adc
inc
cmp
bound
stos
in
cmp
in
cmp
in
cmp
inc
out
cmp
inc
cmp
out
cmp
jno
xlat
out
cmp
out
cmp
loop
dec
in
cmp
in
cmp
jecxz
cmp
jecxz
cmp
jecxz
cmp
add
jecxz
cmp
jecxz
cmp
in
cmp
in
cmp
in
cmp
in
cmp
jecxz
cmp
jecxz
cmp
mov
in
jecxz
cmp
jecxz
cmp
jecxz
cmp
jecxz
cmp
loop
cmp
loop
cmp
loop
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
cld
jecxz
or
and
xor
jno
andl
out
aas
push
push
jbe
imul
xor
enter
mov
jecxz
push
mov
mov
push
jns
sub
mov
movlps
sbb
push
lret
pop
add
lock
push
test
dec
add
push
hlt
xlat
mov
mov
jns
rcrb
or
fwait
fwait
cli
call
or
imul
xor
jnp
add
jne
push
xor
push
enter
arpl
mov
dec
push
enter
push
jl
or
sbb
inc
aam
dec
and
mov
rclb
mov
mov
fistpl
dec
mov
mov
xchg
push
cwtl
call
adc
fidivs
jl,pt
je
cmp
push
xor
in
jmp
lds
gs
ja
push
outsl
aam
add
cld
or
mov
push
xchg
stos
out
nop
push
push
sub
fldt
adc
ja
pushf
inc
jbe
addb
adc
jo
std
inc
imul
jl
icebp
repz
jl
jle
or
sbb
mov
clc
inc
popa
jl
adc
test
fstpt
adc
xchg
and
mov
hlt
xor
cmp
out
aaa
xchg
and
pop
mov
or
push
in
gs
pop
inc
push
test
aam
outsb
adc
imul
out
outsl
push
fs
mov
mov
push
test
xor
sub
push
cmpxchg
dec
movsb
jmp
sbb
push
in
ja
jnp
roll
inc
mov
sbb
fcmovbe
and
jecxz
pop
sub
and
sbb
pop
jnp
xlat
test
pop
loop
outsb
shll
sub
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
