push
cltd
sti
incl
inc
add
push
push
je
imul
sub
or
add
ss
js
in
aas
xor
cmp
ret
mov
bound
arpl
pop
or
outsl
fildll
jae
gs
test
dec
dec
outsb
or
fldenv
fbld
jo
shrb
add
dec
addl
jmp
sub
pop
testl
mov
rcrb
or
or
pop
or
jmp
fdiv
or
inc
fcoms
push
repz
push
aas
fwait
in
and
lock
jmp
nop
addl
xor
and
and
and
push
fs
pop
pop
or
enter
dec
xor
and
and
and
cmp
sarb
sub
andl
les
outsl
ljmp
das
roll
in
sub
je
movzwl
mov
sbb
enter
arpl
sbb
and
or
pop
xor
or
mov
cmp
mov
push
add
add
lcall
pop
xor
mov
jmp
mov
mov
jg
or
add
mov
push
roll
push
jg
sbb
add
mov
pop
mov
inc
cmp
jne
mov
mov
adc
push
mov
outsb
lret
add
or
adc
lret
push
push
xchg
out
jge
push
clc
mov
mov
jg
xor
add
outsb
arpl
cmp
inc
add
or
jnp
out
inc
push
adc
xchg
push
pop
add
outsl
mov
push
push
insl
imul
into
mov
mov
mov
mov
sarb
dec
add
loopne
ja
mov
push
push
aaa
insl
jmp
jg
pop
mov
mov
pop
mov
mov
push
xchg
lret
add
cmp
jne
sbb
mov
mov
or
jmp
add
fidivs
jne
push
pop
mov
aaa
jne
mov
mov
sbb
lock
out
xor
hlt
xchg
mov
mov
push
push
pop
outsl
jb
in
or
mov
add
stc
add
fbstp
xchg
mov
add
pop
push
sub
cmpl
pop
mov
sub
xor
or
jmp
mov
add
pop
fnstsw
mov
fisttpll
or
sti
mov
sub
jle
or
xor
push
fadds
lods
jmp
gs
xchg
mov
pop
adc
mov
incl
sbb
aaa
mov
adc
nop
ret
mov
inc
cmp
std
adc
jge
mov
and
and
add
mov
push
push
cmpl
test
je
sbb
push
push
fistl
and
movsl
outsl
push
es
sbb
sub
push
lods
inc
call
sub
push
dec
push
in
push
jne
js
and
add
mov
or
dec
sahf
mov
jecxz
push
stc
leave
mov
stos
adc
ret
test
mov
dec
push
jmp
es
rcrl
jb
out
xchg
cmp
inc
adc
jbe
ret
or
or
push
insb
dec
cmp
insl
jbe
add
sarb
lcall
divl
push
mov
stos
cmp
push
pop
dec
or
adc
xor
add
sbb
out
shll
je
jge
fildll
mov
and
out
xor
add
adc
or
jne
adc
or
jl
in
iret
in
pop
jmp
push
push
add
lcall
adc
xor
adc
jbe
adc
add
pop
mov
mov
sub
push
adc
mov
push
jae
pop
faddl
jne
jb
dec
cwtl
rolb
cmp
in
insb
mov
add
sbb
mov
add
notb
sbb
jae
mov
add
sahf
add
and
imul
push
mov
jbe
movsl
inc
cmp
jg
mov
cwtl
mov
pusha
push
hlt
sahf
sbbl
pop
add
mov
pop
inc
mov
js,pt
out
and
das
jne
add
sbb
into
add
xchg
adc
xchg
push
add
pop
sub
and
fidivrl
mov
cli
inc
arpl
jb
addr16
out
sbb
jmp
push
cmp
je
jmp
icebp
data16
push
pop
lcall
sub
mov
int
add
jns
fwait
mov
push
mov
js
xor
insl
or
adc
mov
repz
mov
outsl
or
push
push
inc
xor
fstps
and
movsb
inc
jmp
jl
fnsave
scas
jg
and
push
and
pop
jb
clc
pusha
sti
mov
inc
js
inc
es
or
inc
pop
inc
mov
push
cmpsl
lea
xor
dec
sub
shlb
xor
pop
jmp
push
sub
dec
pop
mov
imulb
lret
test
je
or
cwtl
dec
ret
lds
add
ljmp
xor
mov
xchg
xlat
jg
fildll
cmp
push
movsb
push
push
xor
push
sub
enter
jo
aas
or
mov
sbb
and
fs
and
cmovbe
cmpl
notb
aas
and
stos
jne
movl
addr16
fiadds
mov
mov
adc
movb
pop
pushf
adc
negl
fadd
add
xor
in
sub
pop
pop
imul
sub
jae
out
ret
call
sbb
or
xor
fsubrl
mov
movsl
les
insl
or
inc
clc
jmp
xchg
xchg
fimuls
sbb
pop
jne
pop
test
adc
dec
out
or
call
je
add
je
leave
push
fsubs
jne
stc
sbb
adc
add
fistpl
hlt
popa
idiv
push
std
cmp
adc
or
push
or
inc
ja
addr16
insb
jne
test
jns
ret
cli
add
lahf
nop
hlt
jmp
push
mov
lock
sub
insl
mov
adc
adc
clc
sub
movsb
ror
push
mov
aaa
mov
inc
adc
sbb
outsl
jmp
outsl
sahf
sbb
push
or
sbb
and
adc
cmp
mov
pop
inc
lret
loopne
add
jle
cli
adc
movl
roll
setl
js
es
add
btc
add
mov
ret
pop
cmp
lods
rolb
ret
rclb
jne
je
or
adc
fwait
jnp
clc
pop
cmp
push
or
mov
add
das
sbb
adc
fmull
add
andl
ret
imul
subb
cmp
shlb
and
scas
mov
test
testb
test
mov
cwtl
aam
sbb
or
jmp
or
add
loop
pop
loopne
iret
ja
xor
mov
and
std
add
add
test
jg
or
and
cli
clc
rolb
sub
fistl
or
xor
inc
js
mov
ja
rorb
sbb
lock
xor
sub
fmull
xor
fadd
dec
or
xchg
mov
inc
add
mov
lret
push
out
lods
cmpl
push
cmp
dec
pop
push
movl
lea
shlb
push
adc
testl
xor
hlt
or
push
call
enter
jbe
jns
mov
sbb
jo
mov
cmp
outsb
pop
in
adc
jo
push
sti
xchg
stos
push
jb
sbb
ljmp
arpl
or
or
ret
add
cmp
or
rorb
adc
push
rolb
or
aaa
mov
mov
adc
inc
or
pop
idivl
sub
or
outsb
les
mov
rorb
and
scas
push
inc
lea
xor
xchg
cmp
pop
loopne
jp
jne
lock
shrb
sub
add
add
popa
fisttps
sbb
jae
sbb
clc
cmp
jne
mov
sti
jmp
lea
pop
orl
fbld
aam
inc
lods
or
xchg
fiaddl
clc
push
out
or
add
outsb
or
or
and
push
mov
mov
push
ret
xor
sbb
gs
push
pop
int3
or
cmp
jmp
sbb
dec
xor
or
clts
mov
mov
pop
and
mov
mov
or
adc
and
into
stos
aad
mov
js
nop
fcoms
lcall
shrb
fstp
push
or
jg
aaa
pop
insb
mov
mov
jbe
xor
int3
jbe
push
ret
adc
inc
or
jp
or
xorl
xchg
inc
cmp
mov
add
push
xchg
sub
loope
add
push
add
icebp
jno
dec
add
ds
fdivl
fucomp
imul
test
ret
rcll
fcom
jl
jge
xchg
xor
push
push
xchg
pop
jnp
movsb
jne
iret
inc
push
pop
cmp
out
mov
xchg
push
scas
xor
push
inc
xchg
mov
mov
or
je
clc
mov
pop
fwait
pop
jle
inc
cld
adc
test
and
push
and
popf
add
sbb
loope
dec
cmp
add
dec
sbb
fimull
push
push
push
clc
cmp
aad
or
mov
mov
adc
pop
xchg
and
or
movsb
push
lock
jne
fwait
mov
pop
jmp
inc
dec
lock
loopne
or
add
lock
sub
addr16
clc
push
in
or
in
xor
cld
jg
fildl
cmp
sub
nop
bound
rorb
sbbb
arpl
adc
incb
das
repz
inc
cld
pop
mov
lock
inc
lock
sbbl
pop
jne
jae
lahf
or
mov
mov
mov
pop
clc
and
addr16
sub
clc
sbb
ret
cmpsl
cmovl
sbb
or
inc
jnp
sub
add
cmp
mov
mov
test
and
movsb
lods
adc
int3
insb
push
and
jle
add
fs
and
add
inc
sbb
mov
sbb
outsb
add
inc
aad
add
mov
cmp
pop
jb
push
mov
add
or
fwait
sti
out
dec
push
orl
jmp
pop
jns
scas
pushf
or
inc
into
dec
fdivs
xor
adc
and
shll
inc
js
lret
shlb
and
sti
pop
sbb
jo
xor
cli
hlt
dec
in
repz
lods
mov
lret
or
nop
out
sub
mull
or
cmp
mov
jge
sub
cli
inc
scas
inc
testb
or
or
call
inc
cmp
and
sbb
outsl
in
int
sub
add
movhps
sti
sub
mov
cmp
add
mov
shrl
outsb
jae
mov
mov
or
and
sbb
popa
dec
mov
notl
les
clc
and
dec
enter
xchg
lds
sub
adc
add
inc
mov
gs
xor
dec
add
in
jmp
mov
iret
sub
mov
notl
cwtl
push
mov
cs
pop
cmpsb
jmp
ret
or
xchg
or
jmp
and
dec
add
sub
popa
push
rorb
xchg
fdivr
jmp
in
adc
or
sbb
testl
lret
xchg
sub
imul
adc
int
cmc
stos
lea
in
push
addr16
fcomps
adc
pop
int
jmp
jne
mov
sbb
adc
test
insb
sub
sub
mov
ret
push
jmp
aad
xor
je
push
mov
daa
inc
pop
or
imul
sbb
sub
lahf
sbb
mov
fiadds
jne
adc
int
adc
test
out
mov
add
mov
mov
cmp
or
jmp
and
add
jo
jnp
sbb
inc
inc
or
std
adc
loopne
adc
ret
push
push
jbe
into
mov
cmp
jnp
mov
in
xor
xchg
repz
mov
add
add
sub
jg
sub
inc
cli
sarl
sarl
mov
inc
rep
jmp
mov
leave
jmp
push
mov
mov
aas
ret
fstpl
addl
je
fstpl
jmp
mov
xchg
add
jb
add
lea
add
cs
lea
or
or
xorl
mov
adc
bound
ja
lock
and
or
or
pop
jle
mov
mov
je
sar
js
imul
sub
movsl
mov
mov
lea
in
pusha
mov
sbb
cld
scas
xor
push
xchg
or
lcall
sub
dec
add
sub
lock
push
dec
sub
jae
roll
jmp
lret
lea
cmp
pop
pop
jb
pop
cmp
add
addb
addr16
outsb
mov
les
sbb
sbb
inc
mov
mov
cmp
mov
ja
and
or
jae
test
push
sbb
test
or
mov
jmp
jmp
hlt
dec
movsl
inc
cmp
dec
mov
movzwl
das
push
mov
shl
add
or
aam
ljmp
pop
aas
sub
fistpll
xor
mov
push
inc
je
iret
repnz
je
mov
push
sub
je
and
negl
lret
je
pop
je
xor
daa
adc
inc
mov
std
in
sub
adc
ja
cmp
ja
lea
add
add
sub
mov
int
imul
push
neg
jle
js
insb
or
pop
sub
jmp
inc
and
pushf
mov
fdecstp
jbe
filds
jb
dec
and
pop
popa
pop
notl
add
push
leave
into
add
ret
lret
aad
add
testb
or
or
cmpsb
in
inc
mov
sbb
dec
sti
lcall
sub
loop
std
jge
adc
fldt
call
pcmpeqb
mov
das
add
popa
xlat
adc
xor
push
jge
jge
inc
stc
inc
sahf
sub
stc
sbb
adc
push
fstp
fldt
fldz
lods
rorb
pop
xorb
aas
mov
push
in
push
cli
or
or
ret
setg
in
and
adc
mov
xchg
sbb
imul
stc
add
mov
and
movsl
aam
and
cld
sub
test
out
sub
pop
jecxz
cld
int
incb
leave
sbb
mov
cmp
fidivrs
mov
mov
mov
bound
cmpb
es
das
jmp
xlat
fadds
outsb
xor
xchg
push
or
push
push
jg
in
int3
into
sbb
rorl
mov
push
pop
test
enter
mov
inc
cmp
decl
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
incl
inc
xchg
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
call
fistpl
js
inc
call
mov
cmp
or
mov
xchg
test
stos
pop
out
sub
imul
divl
jl
xor
cmp
call
inc
inc
mov
push
inc
mov
push
sbb
sarb
repnz
incl
incl
nop
fistl
pop
stos
clc
scas
adc
inc
pop
lcall
repnz
aam
imul
loope
jp
iret
inc
bound
ds
push
call
scas
mov
pop
or
addl
cmp
xor
ljmp
pop
add
mov
mov
popa
mov
pushl
stc
repz
mov
subb
and
and
push
pop
aad
bound
xor
and
mov
lods
xchg
jmp
and
jne
push
or
stc
or
mov
mov
hlt
movzwl
add
xor
push
mov
push
subb
pop
xor
pop
mov
xor
xor
add
adcl
add
dec
pusha
adc
mov
jmp
jmp
sub
jp
aas
or
mov
incl
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
and
imul
jne
fninit
fldcw
ret
add
fstpt
or
rorl
xor
mov
clc
mov
adc
icebp
sub
pushf
and
add
arpl
imul
mov
pop
sbb
mov
jnp
fdivs
test
or
scas
add
push
and
or
or
xor
popl
sbb
mov
jle
in
aaa
jo
mov
or
push
cld
pusha
sti
in
add
mov
xor
inc
dec
cltd
pop
cwtl
jo
bound
mov
fcoml
inc
sbb
in
cmp
je
mov
movsl
mov
jae
incl
mov
mov
or
fimuls
sbb
jne
jne
xchg
push
mov
mov
push
rorb
jne
xor
fdivrs
cmp
sahf
pushl
pop
jb
movswl
xchg
and
add
xor
add
mov
sbb
xchg
adc
inc
test
daa
push
pop
test
push
lock
mov
cmp
dec
and
sub
adc
rcll
sub
mov
mov
out
dec
sbb
lea
and
les
int3
outsb
xchg
cmp
cli
pop
jae
setne
leave
fdivrs
pop
sbb
repnz
call
ret
pop
out
stos
inc
mov
cmp
sti
inc
pop
mov
push
jb
jo
jne
pop
pop
stos
in
or
jne
or
je
adc
mov
push
lds
jne
xor
xchg
adc
push
add
dec
xor
push
push
push
xchg
sbb
push
jle
mov
ret
ret
adc
sub
jne
data16
mov
pusha
ret
pop
out
sub
mov
xchg
push
mov
dec
add
pop
gs
pop
mov
mov
cmp
aaa
jg
repz
pop
mov
orb
xchg
push
leavew
or
pop
test
xchg
es
dec
pop
fs
mov
icebp
pop
lods
pop
inc
popa
push
nop
mov
push
popa
jl
push
hlt
xor
clc
sbb
sbb
test
or
inc
add
xchg
mov
xchg
sub
es
mov
mov
push
and
bound
pushf
add
nop
pop
adc
cmc
or
testl
jae
jg
fs
pop
ja
mov
push
xchg
cli
in
push
cs
add
mov
push
push
sbb
fisttpll
addr16
add
fstpt
fs
pop
push
push
mov
push
adc
sbb
jmp
lea
fucomp
or
mov
roll
fwait
xor
pop
add
cmp
sub
adc
loop
ficompl
adc
sbb
testl
xchg
xorl
and
dec
adc
outsb
add
test
dec
pop
xor
adc
icebp
arpl
cmp
out
or
jg
dec
cmpl
je
movsb
xor
jbe,pt
ja,pn
imul
add
add
stos
or
push
pushf
jp
or
jp
addr16
or
add
adc
lcall
je
adcl
sbb
push
mov
xchg
push
loopne
stos
sub
sbb
sub
mov
add
add
add
hlt
mov
loop
add
int
add
push
arpl
cmc
jge
jnp
adc
stos
mov
sbb
dec
mov
or
das
je
mov
mov
dec
inc
add
aaa
inc
push
cwtl
add
or
push
mov
push
sbb
insb
and
clc
dec
call
push
push
inc
pop
or
mov
insb
mov
pusha
pop
xor
fnstenv
dec
lea
dec
adc
inc
or
pusha
add
lahf
rolb
call
cli
outsl
adc
addr16
adc
fsubs
push
jp
dec
ss
in
cmp
fs
lea
incl
jmp
ret
xor
jmp
insl
sbb
leave
ret
das
int3
sti
dec
les
add
je
cmp
data16
adc
cvtps2pi
dec
jmp
fistps
rolb
call
aad
cmp
outsl
fcomi
je
sub
add
cmp
outsl
daa
cmp
mov
jmp
mov
es
jmp
mov
jmp
mov
mov
xlat
jmp
mov
or
decb
mov
jmp
mov
arpl
lock
xor
enter
pop
ret
inc
or
push
movb
seto
je
bnd
xor
and
pop
int3
cmp
push
loopne
xchg
shl
inc
sbb
shll
or
mov
and
lret
sub
out
xchg
or
fstps
push
lods
pop
pop
xor
lds
add
push
outsb
in
pop
hlt
scas
cmp
push
pop
mov
or
sbb
cmp
fildl
sub
das
lock
stc
cltd
or
add
mov
mov
xor
inc
or
push
mov
add
rorl
cmp
dec
mov
xchg
inc
fcoms
push
xchg
and
xor
jmp
inc
or
enter
mov
in
jno
jb
outsl
mov
sub
jle
insb
nop
dec
imul
add
imul
or
cmp
jg
or
rorl
movl
sbb
cmp
cmp
rcr
inc
sub
sub
jb
mov
add
and
pop
mov
loop
pop
mov
lea
inc
push
mov
add
mov
add
dec
jne
pop
pop
mull
fildl
add
dec
pop
sbb
or
repnz
in
gs
pop
mov
ret
mov
add
insb
filds
adc
adc
sbb
dec
rcr
pop
lock
mov
fldcw
push
pop
xor
add
dec
sbb
iret
sahf
lock
neg
sbb
inc
pop
pop
sbb
call
pushl
add
mov
mov
push
daa
insl
sub
jg
jl
jo
dec
jo
push
cmp
roll
adc
cmp
mov
fcmovnb
xor
push
icebp
push
stc
pop
jl
add
push
repnz
pop
sub
xor
shrl
and
ds
push
mov
add
or
mov
inc
xchg
cmpb
mov
cmpl
push
pushf
push
lea
ljmp
or
inc
sub
add
enter
cmp
push
pop
add
mov
or
sbb
jbe
subb
adc
outsl
push
mov
imul
out
mov
sahf
lods
mov
push
jl
add
dec
lods
andb
or
sti
addb
test
mov
imul
sub
mov
frstor
sub
pop
cmc
andb
jecxz
mov
das
lock
cli
clc
dec
jl
lock
fldt
and
movsb
inc
clc
inc
pop
leave
fldl
cmpsl
insl
adc
sbb
add
sbb
xor
or
in
dec
jne
jnp
mov
scas
aas
and
sbb
adc
sub
dec
outsb
lock
inc
out
jmp
cmp
sbb
pusha
filds
or
pop
mov
sarb
loop
ljmp
push
adc
add
outsl
sub
mov
lcall
mov
int3
mov
mov
mov
ret
addr16
stc
mov
jne
lahf
mov
pushf
sbb
add
pop
mov
inc
scas
sub
push
push
add
jo
lock
out
or
or
push
cmp
std
mov
sar
les
outsb
or
insb
jg
clc
cmp
fbld
pop
lea
cmp
sub
out
push
imul
std
push
cld
out
mov
adc
sub
mov
add
push
shll
pushf
in
pop
pop
negb
xor
push
jl
inc
sub
jo
bound
xor
pop
jecxz
ficoms
push
cmp
stc
cmp
lret
add
outsl
outsl
sbb
je
add
mov
mov
pop
fcmovnb
push
out
sub
jmp
push
cmp
and
sub
add
xor
jmp
mov
mov
add
add
cmp
mov
fldenv
mov
inc
dec
nop
push
sub
mov
roll
pop
mov
ss
add
jne
cmp
int
cld
ret
sbb
out
test
mov
jns
pop
mov
add
cmpsb
mov
das
inc
fldt
mov
adc
repz
fldt
bound
insb
stc
iret
inc
popa
imul
adc
cmp
mov
inc
mov
push
rorl
pop
inc
inc
cld
xor
mov
sub
push
pop
dec
mov
cli
bound
cltd
fcmovu
add
pop
pinsrw
lds
mov
jmp
loope
cmp
push
xor
mov
scas
ss
or
fidivrs
cmp
cld
dec
out
add
subl
pop
fldcw
push
or
cld
mov
add
dec
ret
outsl
rcr
or
sbb
insb
push
or
into
mov
jmp
dec
pop
or
xchg
dec
pop
xchg
jne
add
pop
lea
jmp
jnp
xlat
adc
push
imul
jmp
shlb
add
push
shr
mov
std
mov
pop
cmp
jne
dec
je
in
add
or
fsubr
mov
or
loopne
or
pop
or
and
aam
das
lret
cmp
cmp
jne
push
adc
ret
add
jmp
pop
mov
pusha
jmp
push
adc
or
movsb
sar
shr
shr
or
pop
xor
xchg
mov
adc
je
push
out
inc
stos
sbb
push
dec
pop
or
icebp
in
dec
inc
add
rolb
out
into
pop
dec
xor
mov
mov
cli
mov
sbb
fidivrl
sub
cmp
mov
ret
pop
int
jp
adc
jmp
call
pop
ds
lea
fcomip
inc
inc
mov
push
jp
js
mov
inc
call
jle
int3
adc
scas
inc
popa
push
out
in
pop
fbstp
pop
jg
cmc
packssdw
js
call
pop
sbb
mov
jne
cs
ret
mov
mov
in
cld
pop
xor
xchg
jmp
lret
mov
mov
out
mov
cli
cld
cmp
jl
icebp
scas
les
or
pop
stc
rorb
dec
fucom
incl
dec
push
push
pop
pop
ud0
in
in
fs
push
push
pop
stos
stos
inc
in
add
jb
repz
sbb
ds
push
jl
mov
jb
in
xor
dec
cs
pop
pop
jo
pop
xor
sub
xor
and
js
xor
xchg
or
movsl
pop
test
daa
int3
pop
pushl
xchg
adc
out
and
or
cmc
cmp
mov
add
fbld
inc
call
add
inc
imul
sub
leave
dec
shll
je
sbb
out
cvtps2pd
or
inc
mov
pop
mov
cmp
jge
pop
dec
ja
xchg
cmp
dec
dec
decl
leave
sub
cmp
and
mov
shrb
cmp
adc
adc
mov
adc
or
push
pop
movsb
ficoms
fadds
add
mov
xor
or
xchg
je
mov
xchg
jg
mov
insl
lds
loope
adc
sub
xor
add
jg
sbb
mov
notb
dec
xlat
ret
push
add
push
inc
cmp
and
je
cmp
lea
je
jo,pn
dec
cmp
leave
cmp
cmp
mov
movsl
dec
clc
jmp
or
dec
add
or
adc
jmp
push
mov
mov
bound
pop
cs
jg
scas
aam
sbb
pop
icebp
sbb
add
push
add
rolb
mov
or
pop
or
mov
mov
adc
decl
mov
loopne
loope
and
xor
pop
jbe
test
ficompl
aaa
stos
inc
push
pop
lods
fildl
data16
adc
mov
pop
mov
sbb
sbb
dec
jmp
adc
cmpsl
mov
or
jmp
rolb
mov
jmp
inc
add
in
imul
sbb
sbb
add
loopne
jmp
popf
mov
dec
adc
xlat
inc
push
loope
unpcklps
outsl
adc
add
sub
dec
test
add
sarl
adcb
ret
sbb
inc
pop
mov
jl
stc
sub
add
jns
jns
je
or
dec
or
jo
orb
mov
pop
sbb
and
dec
cmpsl
jmp
adc
cmpl
insb
insb
lea
enter
or
push
add
je
fucomi
popa
or
cld
cmc
cmp
ss
imul
add
cmp
sbb
jns
and
test
pop
adc
inc
lahf
notb
or
cmc
dec
jne
outsl
sbb
call
lahf
and
psadbw
nop
inc
inc
sahf
popa
jge
pushf
mov
lock
cmc
lods
and
pusha
dec
jne
push
cmp
xor
fsub
jmp
sar
adc
adc
fiadds
cwtl
cmp
sbb
or
rcl
loop
ja
std
add
lds
ljmp
xchg
clc
les
mov
push
aaa
cmp
add
sbb
jnp
cmp
in
gs
test
adc
adc
xor
or
cmpsb
lock
mov
out
test
les
cmp
and
mov
ss
pop
sub
cwtl
mov
pop
mov
push
dec
dec
cmp
inc
inc
sub
scas
loopne
adc
jp
mov
pop
daa
in
dec
mov
inc
sub
fcmovnb
push
insb
lock
outsl
sbb
mov
out
mov
and
inc
dec
cmp
xor
pop
and
cmpl
or
cmp
cmp
mov
add
dec
jo
mov
push
xor
cmp
imul
mov
loopne
xchg
in
cmpb
je
push
mov
or
dec
cmpl
sti
sbb
cmp
sub
cmp
jle
xchg
sbb
outsl
icebp
sub
scas
add
iret
sub
push
cmp
and
mov
and
mov
dec
imul
arpl
adc
lock
add
or
pop
dec
sub
inc
push
lods
mov
mov
mov
push
in
push
mov
sbb
sbb
pop
loopne
es
and
call
mov
xchg
add
sbb
shrl
xlat
pop
add
add
cvtps2pd
hlt
add
pop
or
imul
in
or
sbb
xor
push
aaa
lea
adc
fsubr
pusha
lret
dec
inc
jmp
push
lds
in
rclb
bound
jmp
and
xchg
lea
adc
rcrl
dec
daa
sub
push
xchg
shr
mov
lds
int
inc
jle
dec
roll
pop
sbb
je
adc
add
sbb
mov
inc
clc
pop
addr16
mov
push
xchg
lock
pop
mov
inc
sbbl
fiadds
dec
roll
in
ja
decb
dec
add
inc
mov
inc
mov
ret
les
icebp
aas
sub
ljmp
cmp
dec
je
in
and
hlt
inc
pop
xor
mov
sub
jg
sbb
lcall
or
add
pop
rolb
fimuls
xchg
mov
lea
mov
push
mov
mov
test
cmp
aam
stos
pop
dec
or
andl
insl
andb
jno
rolb
aam
inc
push
jo
mov
dec
mov
cmpsb
inc
push
jne
push
dec
ljmp
sbb
cmp
mov
push
or
cmp
pop
js
pop
inc
or
aas
or
cltd
es
and
cmp
nop
mov
sbb
inc
pop
cmc
cmp
mov
icebp
xor
leave
sub
lea
imul
jo
inc
imul
test
jge
sub
leave
ret
inc
cmp
adc
test
int3
fsubl
sbb
inc
stos
decb
adc
mov
ja
pushf
pop
sub
cs
jle
jg
movb
dec
push
mov
xchg
int
pop
inc
pop
aas
cmc
mov
loop
dec
in
loopne
dec
push
adc
imul
pop
shlb
gs
xor
js,pn
push
fs
insb
add
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
adc
fdivr
shrb
js
sbb
movb
addr16
outsb
add
push
insb
push
add
xor
je
sbb
jb
cmp
adc
ja
inc
test
call
cmpsb
out
mov
jl
sub
addr16
outsb
out
rcrb
sub
int
shlb
push
clc
std
insb
vmwrite
push
push
repz
lock
add
in
adc
mov
jge
push
or
xor
insl
add
imulb
or
lcall
test
mov
cmp
add
ss
pushf
sbb
and
in
shlb
popa
xor
cmp
fidivrl
xchg
add
std
jle
and
jb
je
xchg
repz
sub
pushl
pop
pusha
addr16
outsl
data16
popa
jb
cltd
sti
lea
jmp
arpl
gs
sbb
or
and
inc
mov
xlat
repnz
jmp
xchg
cld
pop
cmpl
mov
call
fbld
add
jne
clc
adc
pop
das
aas
clc
stos
add
or
inc
sbb
mov
clc
jle
adc
mov
sarb
lock
mov
xor
lds
push
push
inc
add
jne
pop
xor
lods
imul
xor
into
fsubr
inc
or
mov
sbb
popf
add
mov
xor
ret
mov
jnp
push
int
jp
sarl
push
push
mov
xchg
mov
in
lds
sbb
xchg
divb
mov
lds
or
out
inc
test
pause
mov
cmp
cmp
pop
add
xor
jp
push
and
imul
push
nop
fcompl
cmp
popa
rcrl
call
adc
sbb
pop
mov
mov
insb
add
add
in
push
mov
je
push
fcompl
sub
shll
mov
add
push
mov
jnp
lods
mov
add
cmp
and
cld
inc
aaa
pusha
sbb
xorb
or
pop
pop
fs
cwtl
cmp
or
or
fadds
ret
or
sub
push
pop
push
jl
add
xlat
test
or
push
xchg
cld
push
pushl
sbb
mov
dec
inc
cmp
ja
mov
inc
jmp
cmp
fnstenv
lea
outsb
cld
ja
fcmovb
test
or
lret
loopne
sbb
or
and
or
pop
lret
jbe
loop
lret
add
jmp
in
mov
xor
and
shlb
sbb
or
cmp
mov
xchg
fbstp
add
mov
xor
sbb
or
add
sbb
jecxz
push
loopne
inc
repnz
in
lods
mov
push
pop
imul
shr
cld
sub
sub
inc
std
push
std
add
jg
or
inc
test
xchg
xchg
jae
and
je
push
mov
shlb
mov
shlb
mov
and
add
jp
loope
or
lret
and
aad
xchg
dec
cld
mov
test
outsb
jae
ja
or
inc
dec
jmp
cmp
dec
jne
jb
dec
push
movl
fwait
jge
inc
pop
cmpsb
ret
xor
push
or
adc
jb
pop
idivb
xorb
sbb
or
mov
adc
inc
subl
xor
sbb
js
adc
xchg
pop
test
pop
or
clc
adc
mov
int3
or
cmp
pop
adc
xchg
or
aad
dec
aaa
add
or
in
pusha
cwtl
fwait
movsb
shlb
sbbb
es
mov
stos
jnp
das
fs
orb
inc
dec
adc
fsub
pusha
mov
inc
dec
enter
inc
inc
xor
xchg
xor
insb
xor
pop
and
pop
cs
fst
cmpsl
adc
inc
js
mov
jb
pop
dec
test
cmp
mov
sub
sub
inc
cmp
icebp
inc
pop
aam
pusha
enter
push
rorb
sub
add
das
fdivl
jg
pop
sub
icebp
punpckhdq
lea
push
push
jbe
cwtl
lock
mov
jnp
stos
sbb
xchg
mov
pushf
test
mov
pop
and
jge
adc
push
jle
xor
add
mov
pop
push
pusha
cmp
fwait
insb
pop
in
jae
or
pop
cmp
push
clc
pop
subl
loopne
or
add
sbb
add
hlt
dec
clc
int3
sub
or
jbe
in
or
or
jb
pop
into
inc
in
or
push
testb
mov
fisubs
sub
stos
pop
xchg
xchg
jbe
dec
outsb
jae
sub
xchg
add
mov
insb
adc
cmp
add
add
xor
pop
ror
call
add
aaa
mov
push
scas
cmp
sbb
cmpl
add
add
dec
pusha
push
pop
pusha
pop
adc
push
mov
pop
cmc
and
mov
arpl
fs
sub
add
arpl
sub
lahf
int3
adc
hlt
mov
ret
mov
jo
lahf
cld
mov
ds
out
shll
pushf
dec
or
pusha
pop
add
popf
jne
mov
push
test
dec
les
ds
xchg
jae
daa
ret
pop
repnz
inc
pop
fisubrl
and
push
cwtl
add
nop
shll
insb
push
adc
sbb
addb
pusha
sbb
pop
pop
push
fs
inc
push
push
dec
dec
nop
inc
push
sbb
inc
push
sbb
xor
sbb
sub
sbb
sbb
adc
nop
inc
push
adc
leave
inc
push
sbb
cld
addl
xor
and
in
fs
xchg
cmpl
sbb
sbb
pushf
push
sbb
xchg
nop
mov
fs
inc
mov
jl
je
inc
push
sbb
loopne
inc
push
sbb
aam
sbb
int3
enter
pusha
inc
aas
mov
jo
sbb
add
cli
fdiv
incb
icebp
repnz
repz
cmc
and
clc
push
sbb
leave
stc
add
sti
cld
sbb
std
jmp
push
loopne
loop
inc
push
sbb
in
inc
push
sbb
call
jmp
fs
inc
in
out
out
fs
inc
push
rcl
rclb
aam
inc
push
sbb
fadds
sbb
fcmovu
fcompl
fs
inc
fstp
fbld
push
rol
nop
inc
push
sbb
lds
sbb
enter
nop
leave
lret
sbb
int
iret
fs
inc
push
mov
mov
inc
push
sbb
sbb
mov
mov
fs
inc
mov
inc
push
mov
push
sbb
sbb
test
dec
xchg
test
inc
repnz
je,pn
pusha
je
and
and
rorl
and
ss
les
add
sbb
xchg
add
inc
adc
gs
imul
repnz
xor
fsubs
cmpsl
es
cmovne
popa
jo
pmulhuw
add
xchg
pop
call
ljmp
je
dec
gs
outsl
jb
filds
dec
pop
fs
bound
or
outsb
pop
inc
jb
pop
pushf
push
sub
xchg
or
insb
xlat
hlt
push
stos
in
inc
hlt
push
enter
adc
arpl
pop
cmpl
mov
push
lods
ljmp
cmp
arpl
inc
inc
imul
outsl
nop
add
lods
inc
pop
and
fs
fxch
das
mov
gs
push
pop
mov
add
or
dec
jbe
data16
js
in
shrl
das
pop
pop
add
dec
sahf
leave
mov
mov
nop
adc
adc
lcall
sbb
inc
enter
jo
push
push
test
mov
inc
and
imul
test
sbb
addr16
test
pop
nop
add
test
and
push
outsl
imul
pop
pop
or
in
clc
popa
inc
or
inc
popa
jae
outsl
sub
add
pop
sub
inc
inc
mov
xor
aas
add
test
lret
adc
arpl
jmp
pop
xchg
push
mov
mov
and
in
js
jb
insb
gs
cmp
push
sbb
push
xchg
arpl
nop
cwtl
pop
cwtl
pop
push
push
inc
or
push
inc
ret
or
push
pop
adc
add
lahf
or
inc
jbe
imul
ret
mov
or
or
lods
pop
lods
mov
or
push
fdivs
and
lods
jb
nop
or
or
push
adc
mov
movl
add
xchg
cmp
push
popa
data16
aam
adc
insb
adc
add
aaa
xor
scas
dec
pop
or
push
and
clc
and
inc
jb
scas
add
in
jmp
pop
inc
cli
in
sbb
mov
jb
mov
loop
sbb
add
js
call
cmp
jl
repz
jb
and
aam
jg
shll
lea
xor
push
mov
jnp
sbb
push
loopne
sbb
insb
cmp
xchg
push
icebp
jge
xor
adc
loopne
pop
cmp
mov
jne
push
fisubs
insb
jne
je
push
insb
loope
mov
test
arpl
popf
imul
xor
ret
adc
repz
mov
add
daa
mov
lret
mov
mov
xor
orl
sbb
pop
insb
lret
icebp
sub
insb
int
mov
leave
hlt
into
test
mov
movb
or
or
sbb
fdiv
sub
movb
les
mov
lods
daa
push
cmp
ja
sub
add
ljmp
or
rorb
pop
mov
push
enter
filds
jb
pop
clc
pop
sub
push
cld
mov
cmp
jbe
cmp
repz
je
mov
add
add
or
push
insb
mov
out
and
sti
je
jp
ret
add
sub
pop
or
sub
push
pop
dec
adc
lret
aam
dec
test
xor
aas
call
mov
push
popf
or
popa
push
lds
mov
fdivs
push
xor
rolb
es
movnti
in
or
or
mov
cmp
add
push
jno
mov
pop
insb
xor
pop
ljmp
cli
idiv
dec
into
add
repz
cmpb
jbe
or
mov
pop
mov
or
pop
dec
adc
clc
xor
loope
lret
inc
lods
cmp
adc
pop
icebp
test
or
jne
sarb
inc
mov
and
push
ret
mov
shl
icebp
dec
and
cmp
jb
pop
pop
mov
shl
incl
sub
jbe
add
mov
sub
jmp
mov
dec
jne
xor
push
mov
sub
xor
push
aaa
dec
or
repnz
dec
insb
mov
mov
incl
and
jo
pushl
xor
loopne
out
pop
test
scas
inc
xchg
lods
movb
dec
inc
lods
pushl
add
jl
add
cmp
orw
sub
mov
call
pop
in
andl
fildll
idivb
faddp
sub
fildll
filds
rorl
filds
adc
mov
xor
lahf
push
fbstp
rcrl
loope
xor
lea
ffree
ffree
pop
ljmp
xchg
rcl
out
and
push
push
jecxz
icebp
js
adc
dec
imul
push
jnp
and
push
mov
and
and
lds
cmp
call
dec
add
push
or
add
js
sbb
push
push
or
clc
inc
lahf
jmp
sbb
sub
pextrw
mov
shrb
aam
int3
sbb
mov
fs
test
test
push
inc
sahf
add
emms
push
jb
xor
add
lods
loopne
cmp
inc
decl
test
jl
push
insl
sub
mov
push
aas
mov
push
sbb
jecxz
addb
push
lods
sbb
lock
jae
xchg
mov
fldt
fcomps
setne
jmp
sbb
mulb
mov
jmp
or
pop
xor
mov
add
and
add
sbb
iret
add
or
jmp
push
fldcw
sub
sub
adc
adc
jno
adc
jmp
adc
cmp
addr16
xchg
sub
jbe
nop
mov
push
or
mov
popa
or
adc
mov
pop
jns
push
push
xchg
jae
outsl
dec
je
xorl
or
es
or
pop
arpl
insb
jp
inc
jae
and
mov
cmp
clc
mov
cmp
ja
and
xor
test
ljmp
stos
fsubl
ljmp
rolb
out
cmp
ja
jl
rorb
loop
loope
inc
ja
mov
mov
or
push
push
imul
inc
sub
push
xor
xor
pop
xchg
pushf
push
push
cmp
aas
js
mov
lea
inc
lods
push
xor
fwait
sbb
mov
inc
fdivs
push
pop
sub
or
iret
push
jne
or
push
push
xor
testb
cmp
rorl
lahf
test
inc
cld
insl
pusha
mov
clc
pushl
adc
loope
jo
mov
movsb
clc
movsb
clc
xor
clc
fwait
mov
mov
sbbl
adc
iret
dec
addr16
negb
sti
add
cs
and
add
dec
dec
sub
loope
shll
mov
and
pop
leave
jle
jge
and
pop
jne
lret
dec
sbb
in
jnp
mov
jp
push
jns
iret
shll
adc
fcmovu
push
mov
push
in
sbb
test
rcrl
out
add
mov
push
push
fwait
adc
in
inc
add
iret
push
or
sub
add
sub
or
adc
packsswb
int3
mov
in
in
cld
and
mov
xor
lods
xor
call
out
cmp
sub
inc
repnz
insb
cltd
add
adc
rcll
jno
inc
std
ljmp
sub
fists
push
push
inc
call
push
add
or
sub
ret
pop
aam
and
sbb
add
lret
mov
mov
cmp
cmp
loope
inc
pop
pop
pop
ret
and
add
outsb
pop
mov
pop
or
and
repnz
popa
daa
pop
xlat
mov
xor
or
ljmp
xchg
test
push
and
mov
push
push
cli
cli
ljmp
je
jo
int3
jmp
sub
mov
jmp
or
jne
pop
ret
mov
inc
inc
sti
lcall
leave
hlt
push
rorl
cs
mov
shrd
jbe
inc
jbe
push
int3
ficoms
mov
enter
int3
inc
sbb
in
jne
and
jecxz
xchg
or
mov
aad
cmp
sub
adcl
pushw
test
inc
pop
addr16
fidivl
pop
repnz
pop
mov
pop
jbe
mov
std
enter
dec
cmp
fisttps
mov
hlt
cmp
add
sbb
jecxz
and
add
jl
test
or
movsb
dec
sub
mov
mov
push
or
sbb
rcrl
movsb
pusha
inc
jnp
filds
sub
insl
dec
sub
into
jmp
add
clc
or
jo
cmp
jmp
or
push
sbb
gs
sub
push
out
mov
incb
mov
cmp
jne
adc
faddl
imul
xchg
mov
jmp
or
mov
sub
ss
mov
aam
popa
mov
mov
jne
cmpb
sub
mov
or
jae
rcrl
movsb
xchg
mov
mov
rep
or
sbb
mov
push
call
push
inc
sub
jb
cmp
ja
imul
rol
jmp
in
daa
cmpsb
insl
in
and
adc
pop
jle
mov
in
ret
je
mov
cwtl
leave
ret
and
mov
mov
insl
mov
lea
mov
dec
push
insl
or
or
and
sarl
add
in
lcall
xor
xlat
xor
mov
testl
lcall
insb
das
xor
fsubrs
shll
and
mov
fdivl
cmp
dec
cmc
dec
mov
insb
add
or
int
push
sub
mov
cmpsl
add
jbe
aaa
adc
sbb
or
mov
jne
lcall
jbe
mov
sbb
add
jmp
mov
into
and
lods
adc
jmp
mov
mov
lret
mov
cld
pop
and
insb
aad
mov
xor
or
add
test
ja
sahf
mov
dec
add
pop
pop
leave
lahf
lds
jecxz
dec
mov
mov
dec
mov
pop
pop
push
leave
mov
repz
aaa
mov
aaa
mov
inc
je
mov
inc
lods
mov
mov
push
inc
je
mov
dec
je
dec
loopne,pt
fcompl
adc
sub
ret
mov
or
inc
jle
push
in
xor
mov
jne
adc
scas
mov
xchg
pop
dec
fmuls
and
movsb
insl
push
xor
scas
fnstsw
sbb
adc
and
pushf
repnz
lahf
cmpsl
or
push
xor
xchg
test
mulb
cmp
or
lret
xlat
aaa
add
ljmp
hlt
rclb
jns
dec
cmpsb
dec
mov
iret
push
mov
jp
into
xchg
pop
sbb
adc
add
mov
xorl
sbb
push
ja
add
fsubrp
dec
filds
dec
sarb
jg
or
cld
movsl
mov
ds
cwtl
dec
cmpb
add
fwait
add
inc
sbb
fcom
add
push
dec
cmp
sbb
das
xlat
add
lea
mov
xchg
push
lods
mov
or
pop
ljmp
push
mov
neg
lcall
mov
insl
jecxz
mov
push
jl
or
push
mov
inc
dec
add
jg
dec
mov
stos
cmp
jne
pop
pop
jae
mov
cltd
mov
mov
pop
cli
mov
jl
or
repz
add
sbb
jecxz
add
testl
sub
aaa
inc
sbb
dec
adc
jb
push
sub
int
adc
idivb
movzwl
sub
icebp
jmp
outsb
dec
lea
mov
dec
repz
mov
jg
je
add
or
mov
clc
mov
lea
sbb
js
or
cld
mov
cmp
in
fs
lock
jg
ja
jg
dec
inc
dec
inc
dec
lods
or
dec
ret
cltd
mov
add
jle
ret
jg
jo
aam
pop
or
sbb
sbb
sbb
stos
orb
rolb
pop
jmp
cmc
inc
inc
in
jge
pop
stos
loop
pop
adc
or
and
sbb
add
push
test
fwait
pop
add
mov
mov
or
cmp
leave
mov
div
in
inc
mov
mov
or
jb
out
lock
push
cli
adc
mov
adc
cmp
jmp
add
testb
dec
scas
div
mov
inc
push
in
add
cmovnp
cli
scas
in
stos
sbb
mov
mov
or
fimull
jne
cs
test
fdivrs
jno
or
xchg
outsb
xchg
add
lret
xchg
mov
fimuls
xchg
movsl
outsl
cwtl
movsl
pop
add
push
mov
cmp
jmp
or
outsl
push
add
loop
sbb
dec
bound
fsubr
lea
sub
sub
popf
idivl
jbe
sub
sub
inc
sub
mov
sub
or
out
jmp
sub
sub
pop
jae
pop
sbb
sub
sbb
mov
addr16
inc
shl
sub
push
inc
or
cmpsl
je
frstor
and
jb
or
movl
je
mov
pushl
and
inc
push
popf
adc
push
fcoml
or
insb
mov
inc
and
mov
mov
cld
clc
adc
call
neg
loope
fstpl
sbb
cld
jmp
fcomp
fstsw
fcmovnbe
sub
add
fidivl
push
out
jne
lea
mov
inc
sub
dec
loope
or
pcmpgtd
inc
shrb
clc
add
jns
dec
fdivrs
or
dec
add
call
jae
orb
xor
js
mov
add
or
in
jmp
mov
mov
fs
mov
mov
je
sti
push
or
mov
subl
dec
out
in
fs
movups
or
rcrl
pop
push
addr16
fiaddl
clc
push
add
test
or
jge
jge
fisttpl
sub
cmpsl
sbb
mov
loopne
jae
dec
add
rorl
fildll
cli
repnz
lods
or
fidivl
test
push
lea
or
xchg
sub
into
and
jne
dec
adc
cmp
enter
adc
cs
lods
int
and
add
movb
aaa
mov
out
aas
jecxz
mov
loope
push
fcomp
mov
add
sub
pmuludq
mov
adc
mov
fclex
fldcw
test
ja
pop
mov
cmp
add
outsl
dec
aad
add
icebp
adc
mov
xor
inc
test
pop
bound
push
cmp
je
adc
mov
mov
inc
push
adc
pop
add
aas
push
pop
in
dec
jne
pop
iret
xorb
add
loopne
aaa
loop
outsl
mov
aas
pushf
fstpt
test
xchg
push
ret
mov
scas
fcmovnbe
ret
xchg
jmp
data16
and
lock
lcall
fsubrs
pminub
xor
jmp
sbb
mov
scas
stc
xchg
sub
inc
imul
popl
cli
hlt
enter
add
test
mov
sub
push
loop
dec
cmp
add
xor
xchg
cmp
mov
add
daa
inc
mov
add
pop
jb
or
mov
sti
sbb
fldt
fstpl
fwait
and
sub
dec
mov
test
add
mov
sbb
and
icebp
test
inc
sub
mov
jmp
lods
inc
jae
divl
or
sub
std
add
scas
leave
push
aam
xor
repz
or
xlat
sbb
add
cli
cmp
inc
stc
inc
cmp
orl
cmp
shlb
out
add
shrb
pusha
ljmp
aad
call
mov
inc
filds
fdivs
fstpl
fwait
jmp
dec
popa
jae
pop
mov
lret
movsb
dec
outsl
imul
aas
es
inc
fcoml
je
cmp
pop
addr16
pop
mov
clc
dec
cmp
fs
aas
hlt
jbe
test
adc
or
cmp
xlat
mov
mov
lret
mov
mulb
cmp
cmp
outsl
imul
jbe
mov
pop
adc
fistl
loop
enter
add
mov
loop
mov
test
jne
push
mov
xchg
add
adc
fisttps
inc
jne
dec
jg
add
das
les
scas
push
incb
pextrw
pop
sbb
orb
subl
push
sub
add
sti
jle
les
cmp
ja
inc
bound
ljmp
pop
cmp
add
inc
dec
test
into
dec
mov
movsl
push
aam
jg
idiv
imul
jnp
xchg
bound
repnz
pop
mov
stc
add
das
or
sub
sub
mov
pop
repnz
inc
xchg
jp
or
dec
call
or
xchg
flds
or
add
sub
ja
mov
pop
inc
orl
pop
call
mov
jne
adc
pop
pop
or
mov
repnz
lahf
lods
mov
mov
lea
decw
sbbl
pop
insb
popa
fs
sub
pop
mov
sub
shl
sbb
sbb
and
fsubs
pop
fsubrl
mov
ret
data16
jnp
mov
enter
dec
mov
testl
or
hlt
inc
jmp
icebp
sbb
lcall
sbb
push
pop
lock
aad
aas
add
xchg
add
mov
sbb
dec
cmp
xchg
clc
lret
aaa
stc
push
mov
fimull
inc
and
mov
in
add
or
push
lcall
or
lret
rcrl
ret
push
fnsave
xor
das
adc
cmp
xor
sub
adc
roll
mov
sbb
and
mov
inc
inc
cmp
and
or
cwtl
sbb
insb
or
leave
cmp
xchg
or
nop
pop
pop
iret
shrl
add
loopne
in
mov
loopne
mov
jo
out
mov
xlat
dec
rorb
inc
aas
scas
push
sbb
push
sbb
push
add
adc
sti
je
and
fildl
cld
inc
mov
pop
mov
pop
cmpb
sub
mov
jo
add
rorb
add
push
lock
repnz
add
push
xchg
in
aaa
jecxz
sub
fs
in
ds
ljmp
jecxz
fwait
in
sbb
enter
xor
nop
bswap
adc
ljmp
cmp
dec
jae
mov
or
ljmp
loopne
push
xor
nop
mov
orl
ret
cli
jge
call
and
xchg
sub
test
mov
and
adcl
jge
add
lahf
jo
or
jmp
cmpl
xchg
repnz
push
loop
sahf
sbb
imul
je
jp
mov
push
dec
jecxz
clc
sbb
in
xchg
mov
jl
ret
sbb
cltd
dec
adc
in
sbb
pop
push
and
or
daa
adc
in
or
inc
gs
out
repnz
pop
stc
jo
punpckhdq
or
mov
mov
xor
or
adc
inc
daa
cmpb
jne
push
inc
enter
sbb
add
cmp
and
idivl
add
loopne
mov
add
add
push
pop
push
fs
aam
fcoms
jne
push
xchg
call
push
pop
pop
mov
jmp
add
dec
ud0
jbe
and
in
add
loope
shlb
push
xor
and
test
bt
and
mov
addr16
lods
adc
push
dec
ds
xchg
mov
add
sub
jae
add
cltd
push
or
adc
loop
inc
dec
mov
xchg
fcomps
and
ficomps
push
mov
sub
test
inc
pushf
add
or
orb
or
or
add
add
add
outsl
sti
stos
js
push
or
xchg
cmp
inc
lret
cmpsb
imul
int
imul
shrl
xchg
sub
ret
jns
aam
add
jo
js
jl
ss
lcall
and
mov
fadd
data16
and
adc
or
push
xchg
scas
stc
adc
fsubrs
aam
nop
xor
jnp
aam
dec
lcall
jmp
mov
sub
lock
in
mov
pushf
cmp
aam
add
push
jbe
pop
outsl
dec
in
dec
je
add
jg
push
add
pop
fsts
pop
cld
es
popf
xchg
pop
sbb
test
jl
xchg
mov
rclb
adc
pop
xchg
loopne
sbb
fcomps
cmpb
xchg
movzbl
hlt
inc
call
cmp
mov
data16
je
sbb
bound
jge
mov
pop
je
fmul
pop
jne
mov
xor
dec
data16
jns
nop
out
sub
sbb
add
mov
rorl
jne
jl
jmp
mov
or
lcall
sbb
dec
les
push
test
popf
je
data16
outsb
icebp
adc
mov
or
adc
lret
jbe
out
or
jle
push
pop
ret
mov
fmuls
das
mov
inc
popa
xor
sub
repnz
stos
add
cwtl
sbb
push
leave
pushf
add
call
test
dec
sbb
pusha
lods
je
sub
ljmp
adcl
mov
pop
lods
addl
push
and
xorb
sbb
jbe
jae,pt
in
nop
in
sub
adc
in
xor
addr16
sbb
xor
jo
pop
test
dec
cmpsb
mov
testl
nop
orb
add
push
call
mov
mov
inc
rorb
fstps
sarb
jae
and
mov
gs
pop
push
loopne
push
xor
or
mov
and
inc
shl
mov
sub
and
dec
outsl
and
or
xchg
ficoml
inc
mov
jns
jae
xchg
aam
iret
push
clc
adc
push
jmp
inc
dec
das
push
dec
jae
imul
or
loope
and
and
clc
ret
push
hlt
fisubrs
out
test
jne
ret
cmp
or
mov
jp
bound
or
or
cwtl
aad
inc
pop
insb
sbb
jge
test
scas
pop
les
sbb
addb
lods
and
pop
cwtl
sub
sub
hlt
jl
jmp
xchg
fidivrl
dec
mov
aaa
loop
sbb
inc
add
fisttpll
sbb
push
pop
pop
imul
arpl
xor
pusha
pop
or
mulb
adc
sub
jae
imul
int
sbb
mov
aam
dec
adc
ret
add
sbb
push
mov
outsl
stos
testl
sbb
xchg
faddl
push
or
sub
dec
inc
mov
les
inc
xchg
push
mov
inc
cld
mov
add
repnz
xor
or
dec
inc
mov
ficoml
lock
outsb
ds
repnz
jp
cmp
add
pop
call
sub
mov
pop
sub
ds
fildll
je
outsl
mov
or
sub
je
adc
fucomp
sbb
push
sub
pop
ret
aad
pop
clc
jle
outsb
xchg
movsb
mov
xor
add
xor
mov
xor
test
add
inc
test
xchg
add
mov
ds
push
push
mov
add
push
mov
add
pop
les
pop
add
adc
add
mov
push
inc
cwtl
sbbb
rcrb
mov
xor
cld
xor
popa
andb
sti
arpl
dec
jl
mov
cltd
xor
sub
add
mov
add
shlb
js
add
or
pop
cld
jmp
leave
andb
dec
cld
xor
ret
outsl
xchg
sbb
loopne
xchg
cld
cmp
test
lret
xor
pop
out
cmpsb
jmp
push
adc
lods
enter
adc
xchg
js
xchg
test
adc
ds
addr16
out
andb
mov
dec
inc
pop
rorb
loopne
sti
sbb
in
mov
mov
adc
test
mov
dec
stos
lock
pop
lock
jmp
hlt
push
test
test
pop
or
or
repz
call
cmp
nop
or
into
add
mov
shll
jb
pop
ja
pop
and
jmp
push
lock
into
add
fstps
pop
nop
or
add
jmp
sbb
inc
xchg
data16
sbb
jmp
xchg
out
cli
scas
push
jg
insb
aad
ja
or
jo
and
ret
ja
out
or
popa
fldcw
shrb
jmp
in
movsl
push
and
mov
cmp
cmp
jle
adc
fs
cmp
mov
pop
dec
inc
negb
test
movsl
popa
jns
mov
and
fs
ja
pushf
jo
mov
test
push
and
movsl
or
fwait
mov
and
aam
adc
hlt
repz
sub
rorb
push
test
xchg
pop
jne
pusha
sbb
adcb
insl
sbb
fcoml
outsl
je
sub
sbb
subl
add
cltd
test
in
stc
push
out
movsl
jne
xor
daa
mov
mov
dec
cmp
jae
addl
sbb
jb
ret
iret
jmp
or
or
adc
fs
mov
sub
xchg
pushf
pop
push
add
xor
mov
fldenv
mov
inc
add
xchg
mov
or
add
and
sub
or
in
or
add
xchg
sbb
or
ss
jns
push
aad
push
je
pop
or
ds
cmp
jne
pop
add
push
cmp
repz
add
mov
dec
inc
nop
or
xor
adc
inc
outsl
inc
and
adc
push
mov
jno
into
clc
mov
xchg
or
leave
sbb
push
add
xchg
push
pop
scas
mov
lods
roll
add
das
es
es
xchg
push
nop
clc
add
jne
and
mov
fcomps
idivl
jb
push
fcoml
pop
fwait
jmp
or
fisubl
mov
sbb
mov
and
sbb
push
or
in
sbb
mov
dec
inc
push
xchg
ljmp
fadds
in
xor
sub
or
add
inc
divl
inc
dec
or
adc
xor
push
adc
in
and
adc
mov
ret
inc
into
lret
inc
xchg
clc
push
mov
push
cmovo
mov
insl
ss
adc
leave
fs
lea
shlb
fiadds
adc
mov
fcmovnu
orl
es
add
enter
lahf
cltd
add
pusha
scas
mov
jne
rolb
jl
mov
lea
dec
sub
inc
add
ret
and
enter
lods
cmp
mov
std
mov
inc
loope
sti
or
imul
cs
mov
dec
push
in
mov
push
fdivl
xor
jmp
call
push
sub
or
push
mov
lahf
pop
xchg
push
push
dec
jnp
or
mov
ds
je
dec
pop
mov
add
lahf
or
test
xchg
or
mov
ret
out
dec
fcoms
dec
sub
sbb
jmp
sbb
push
in
inc
sub
ljmp
jne
ja
push
dec
jbe
in
rorl
jae
push
mov
adc
and
jb
xchg
insl
arpl
xchg
ljmp
push
push
xchg
arpl
mov
cwtl
add
jmp
mov
mov
xchg
dec
jne
push
sub
rcrb
mov
xor
mov
xchg
scas
mov
push
pop
xabort
jb
jae
mov
xchg
inc
aas
jb
adc
inc
rorl
aad
in
sahf
sub
stos
mov
arpl
loope
stos
xchg
jp
sbbb
rcl
movsb
mov
jle,pn
xchg
pop
stos
adc
push
or
mov
leave
mov
insb
popf
lock
in
mov
push
add
std
mov
aas
cmpb
fsubr
or
in
outsb
mov
fmul
sub
add
push
movsl
xchg
sub
jbe
adc
push
mov
hlt
or
mov
jne
sbb
mov
xor
in
in
jle
push
mov
or
daa
xor
int
adc
or
leave
mov
add
push
out
sub
imul
scas
mov
imul
mov
jge
adc
mov
adc
sbb
ljmp
shlb
adc
and
mov
mov
sbb
fiadds
hlt
sahf
sub
stos
repz
sbb
xorps
push
push
cmp
pop
movsb
inc
xchg
pop
clc
fcomps
stos
push
xlat
adc
bound
call
out
inc
inc
and
aam
adc
sahf
out
shr
mov
cld
inc
sub
add
loopne
test
enter
xchg
in
imul
and
sub
mov
enter
add
adc
stc
hlt
lfs
and
pinsrw
subb
mov
ficoms
in
mov
dec
add
add
add
mov
lock
loopne
or
mov
fwait
rcrl
sbb
mov
dec
leave
mov
pop
or
hlt
ret
pop
sbb
pushf
je
sub
imul
les
in
das
aam
push
sub
and
adc
insl
mov
lods
repz
mov
cmp
enter
lea
cld
dec
mov
jo
xchg
mov
adc
inc
sbb
pop
adc
insb
mov
dec
or
xor
rorb
jb
int
cmpsb
dec
lods
mov
inc
jge
les
sbb
mov
stos
int3
mov
mov
or
jecxz
subl
cmpsl
cmpb
and
ret
adc
mov
push
scas
add
lods
call
sbb
jp
nop
das
rorl
push
jg
fildl
adc
dec
icebp
or
sbb
out
movsl
clc
popa
xchg
je
sbb
adc
and
add
testb
jo
pop
lods
ljmp
push
rol
or
sub
dec
adc
adc
push
jb
cmp
push
outsb
fists
pop
nop
and
cmp
xor
dec
xchg
mov
lds
cmp
pop
or
mov
ret
fwait
data16
cmp
xchg
cld
lock
cmp
lock
pusha
inc
inc
sbbb
push
test
cld
insl
insl
inc
and
or
in
cmpsb
xchg
mov
lock
clc
in
f2xm1
nop
outsl
sub
mov
sbb
imul
or
and
call
xor
add
sub
mov
cwtl
lods
pop
xchg
push
cmp
imul
mov
fs
push
cmp
je
jmp
aas
and
jmp
xor
gs
aaa
and
add
mov
add
push
pop
or
or
mov
push
out
push
cwtl
mov
lock
mov
xor
push
mov
add
mov
lods
fists
inc
mov
cld
cmpl
nop
bndstx
xchg
pop
push
jb
inc
sbb
iret
loopne
add
or
les
push
in
add
mov
sbb
cmpsl
push
xorb
xor
sbb
lcall
fsubs
sub
pusha
ja
mov
gs
mov
mov
int
or
les
enter
jbe
pop
int3
shlb
pop
imul
mov
sbb
cmp
pop
cwtl
xchg
mov
ss
ds
pop
cwtl
in
fs
pushf
mov
sahf
add
nop
add
mov
add
or
pop
xchg
sub
scas
push
aad
mov
pop
mov
push
rolb
ret
or
sbb
pop
insl
add
imul
or
pop
imul
lock
pop
dec
ss
xor
sub
inc
inc
xchg
mov
mov
lret
lock
enter
mov
and
fcomps
mov
and
push
aaa
xchg
mov
test
mov
or
lods
int3
adc
lds
and
or
lcall
test
lods
adc
adc
data16
cmp
mov
sbb
cmp
or
ficoms
nop
or
and
mov
adc
push
inc
push
cmp
lods
adc
insb
jmp
add
jno
inc
leave
pop
sub
pop
mov
mov
test
pop
add
inc
out
mov
pop
stc
jmp
loopne
mov
add
ficoms
addb
out
rol
pop
jnp
jnp
data16
jo
aam
addr16
dec
stos
ss
testl
fbstp
mov
and
ja
mov
out
adc
add
icebp
or
inc
inc
add
add
adc
push
add
sub
popf
or
neg
xchg
add
popf
lods
ja
leave
sbb
pop
adc
adcl
lock
or
arpl
mov
in
rolb
and
push
ds
out
clc
jbe
ret
pop
xor
mov
mov
or
insb
dec
cltd
inc
and
out
xchg
push
mov
pop
sbb
xor
inc
cmp
sub
mov
and
pop
jbe
cld
xchg
cmp
jge
jl
cmpsb
in
sub
push
push
xor
jo
dec
dec
testl
inc
inc
or
aad
push
dec
aas
xchg
repnz
cmp
aam
mov
in
cmp
and
adc
adc
pop
or
add
push
push
mov
or
add
addb
inc
ss
pop
jge
or
lret
cmp
push
jmp
sub
adc
adc
fcoms
sbb
mov
xchg
ret
insb
and
and
loop
orb
jb
pop
add
dec
rorb
inc
popf
repz
xchg
in
inc
popf
cmp
stos
dec
dec
push
adc
call
aaa
popa
push
xchg
je
sub
pop
mov
adc
in
mov
incl
xchg
ret
lea
test
fiaddl
pop
aam
cmpsl
dec
bound
add
xchg
shll
divl
jg
or
or
push
jns
mov
repnz
clc
push
pop
xor
in
call
ret
into
or
and
loope
dec
pop
cmp
dec
pop
ljmp
pop
inc
or
cmp
jl
adc
mov
push
rcrb
jmp
inc
and
sbb
inc
xor
cmp
cmp
shll
adcb
inc
dec
jge
fisubl
and
pop
add
cli
mov
jne
mov
in
aam
jge
xchg
cmpb
imul
sub
loope
outsl
mov
int
ds
in
push
adc
addr16
xchg
inc
adc
sahf
je
sti
add
push
dec
pop
add
push
test
jae
pop
mov
xor
sub
ret
lcall
icebp
decb
cmp
jbe
mov
repnz
inc
dec
sbb
bt
and
ljmp
inc
lret
sbb
repnz
xchg
push
je
call
inc
les
aas
inc
nop
xor
mov
sub
test
es
or
je
aam
pop
shlb
jne
or
mov
and
mov
mov
dec
xchg
push
loope
mov
dec
sub
add
xor
dec
pop
out
xor
fmuls
mov
inc
or
inc
mov
push
xor
lea
int3
and
mov
mov
sub
jb
inc
mov
inc
hlt
insl
xor
decb
dec
jne
pop
jle
add
cmp
jge
sub
pop
sub
std
push
clc
pop
ja
dec
push
xchg
sbb
xchg
aas
xchg
repz
jbe
fidivrl
rep
or
inc
leave
out
imul
or
cmpb
add
mov
xor
or
pop
push
mov
or
cmp
add
lods
dec
movsb
xchg
cmp
jmp
add
call
movsl
std
push
sbb
pop
mov
jne
pop
cmp
sbb
adc
hlt
cmp
jge
mov
add
cmp
fldcw
mov
jecxz
idivb
add
pop
in
test
cmpl
aam
rorl
dec
incl
dec
jne
jmp
push
cli
dec
xchg
shlb
push
adc
mov
add
popa
ja
les
stc
push
adc
mov
sbb
pop
dec
nop
xor
push
cmpsl
sbb
adc
add
adc
inc
mov
mov
mov
outsl
sbb
xchg
or
adc
mov
insb
and
sbb
out
leave
ficomps
sbb
mov
push
in
mov
decb
cmp
das
mov
inc
sbb
loopne
ljmp
loopne
test
sub
and
lss
fcomp
mov
sti
mov
mov
aas
cmp
stc
inc
js
xor
mov
in
and
int3
mov
rorl
mull
pop
xor
enter
push
popa
mov
subl
push
les
mov
jb
les
popa
shlb
inc
push
add
inc
inc
ds
insb
clc
mov
mov
arpl
push
mov
loope
xor
cwtl
pushf
clc
xchg
jo
dec
or
xorl
cli
mov
mov
push
insl
das
fs
jp
add
add
fs
xchg
pop
push
or
add
or
sarb
push
adc
dec
minps
lock
bound
lods
orw
jae
sbb
stos
pop
push
add
test
cmp
cmp
aaa
mov
pusha
add
or
cmp
loop
sahf
xor
or
push
insl
and
adc
mov
mov
rorl
mov
inc
inc
push
jge
icebp
test
pop
add
hlt
mov
sbb
inc
xor
xchg
call
ljmp
push
scas
fldenv
cmp
dec
sbb
enter
testb
mov
or
pop
sbb
pop
mov
adc
daa
inc
imul
push
jo
or
and
inc
js
xchg
lock
mov
arpl
ret
xchg
jmp
sub
push
pop
add
mov
lods
loopne
mov
mov
loope
in
inc
lahf
add
jne
aad
push
adc
inc
add
ror
outsb
fisttps
jne
mov
and
cmp
loope
sub
and
pop
push
mov
fisttpl
mov
xor
and
je
and
mov
fcompl
mov
outsl
std
stos
fnstcw
adc
sahf
fsubrs
mov
mov
pop
jmp
and
lds
fnsave
or
pusha
xor
enter
mov
movl
mov
pop
into
push
lea
loop
call
adc
in
push
mov
shr
add
jl
pop
push
or
dec
pop
lcall
sbbl
lahf
mov
pusha
push
fadds
js
sti
rcll
inc
add
or
cwtl
scas
push
push
int
pop
lods
or
cmc
mov
enter
inc
or
outsb
incl
mov
cmp
adc
adc
sbb
mov
cltd
outsl
imul
and
rolb
hlt
addr16
push
adc
ret
mov
mov
mov
enter
or
and
rcrb
push
into
pop
enter
inc
sub
jl
xchg
adc
sbb
xchg
psraw
leave
adc
call
enter
cmp
repz
call
xchg
sbb
stos
mov
loop
sti
inc
test
fsubr
sbb
mov
fisttps
clc
gs
inc
insb
negb
jae
sbb
pop
sbb
jmp
or
mov
sub
sbb
mov
adc
popf
add
nop
iret
xchg
mov
imul
sbb
and
shr
in
cmp
pop
push
push
inc
scas
rorl
xor
lods
sbb
out
dec
mov
inc
or
add
std
or
cmp
je
movsl
jne
dec
lods
pop
data16
jmp
lea
popa
lret
fdivs
fisubrs
arpl
test
adc
int
mov
insl
dec
or
dec
jl
xchg
mov
inc
xor
imul
orl
adc
push
incl
add
fimull
xor
mov
clc
ret
cwtl
cmpsb
imul
dec
call
pop
loopne
aam
call
shll
je
shrl
rcrl
addr16
int
xor
mov
sbb
dec
shll
dec
andb
pop
mov
push
xor
pop
aaa
pop
and
mov
loopne
pop
mov
mov
shrb
pop
addb
mov
pop
sub
negl
add
or
enter
pop
add
sahf
cmp
cld
popa
repz
cmp
or
test
hlt
and
lock
jae
pushf
addr16
les
int
xchg
and
addr16
loopne
imul
addr16
fcoms
pushf
insb
push
aam
data16
cmp
fmul
fs
movsb
sbb
hlt
rclb
dec
jae
xchg
mov
xor
xchg
int
int
inc
test
push
movsb
push
jae
cmp
mov
out
addr16
nop
push
xchg
lods
mov
int
int
or
cmpb
sahf
inc
lcall
xchg
daa
add
xchg
test
pusha
mov
dec
jo
loope
ja
ja
push
add
pushf
mov
rclb
mov
push
iret
nop
pushl
repnz
mov
pop
adc
popa
add
adc
adc
std
adc
xchg
cmp
mov
nop
mov
ds
imul
jbe
push
or
fs
leave
into
xchg
cwtl
or
mov
int3
pusha
mov
ret
or
jecxz
ret
jns
inc
dec
jg
les
incl
jae
mov
aam
push
rorb
cmpb
inc
mov
mov
xor
cltd
cmp
and
jl
cmpsb
and
les
push
sbb
xor
pop
pop
cwtl
jb
les
sahf
cwtl
ret
xor
pop
or
sbb
jge
testb
xchg
mov
pop
sub
push
add
in
mov
mov
pop
ret
xchg
sbb
or
add
in
sbb
cmp
fs
cmc
popf
add
and
mov
sbb
jge
test
repz
adc
cld
pop
out
or
cmpsb
sbb
test
push
test
adc
jae
or
sbb
sbb
jle
inc
dec
test
add
je
adcb
icebp
inc
enter
clc
clc
jno
sub
clc
clc
lea
popa
cwtl
mov
fdivrl
jge
add
sbb
mov
add
dec
leave
jae
xbegin
sbb
jnp
push
fs
ds
adc
mov
jae
push
daa
test
cmpb
rorb
jnp
add
icebp
xor
nop
adc
nop
outsl
dec
enter
enter
enter
nop
adc
enter
pop
mov
inc
inc
lea
and
popf
bound
adc
mov
lret
ja
leave
enter
add
enter
mov
jns
test
dec
nop
cld
adc
add
sbbb
push
push
push
mov
mov
inc
adc
leave
and
mov
pop
jb
movsb
enter
xchg
pop
test
lods
and
mov
xchg
pop
jb
mov
mov
and
leave
and
pop
repnz
nop
int3
mov
loopne
rorb
inc
imul
and
enter
cmp
nop
fsub
cld
lcall
xbegin
call
xchg
out
in
pop
enter
cmpb
popa
jne
pop
mov
sbb
inc
push
mov
adc
add
cmp
enter
fs
jne
dec
jne
jle
enter
jbe
or
outsl
fs
dec
into
das
outsb
dec
jb
pop
outsl
jb
out
aas
jns
insl
jo
inc
jb
insl
push
je
rsqrtps
pop
mulb
inc
jns
inc
bnd
in
outsl
insb
je
inc
jns
icebp
push
notb
inc
getsec
add
int3
hlt
mov
leave
push
int3
hlt
xchg
xchg
stos
sub
adc
pop
cmp
idiv
and
loop
or
jbe
or
add
adc
mov
int
xchg
adc
or
int
cmpsb
jmp
repnz
xor
gs
lcall
test
icebp
scas
jnp
leave
hlt
sub
pop
pop
lock
inc
mov
jne
and
mov
nop
pop
jnp
sbb
cmpb
in
adc
int
int
fsubrs
inc
pop
and
xor
and
mov
arpl
adc
inc
aam
and
lret
cwtl
arpl
pop
arpl
inc
xchg
push
adc
inc
jb
gs
iret
arpl
iret
inc
popa
or
bound
add
fs
mov
and
sub
arpl
shr
jbe
adc
jns
and
mov
cmpsl
dec
xchg
jb
leave
popa
scas
mov
clc
andl
and
pop
mov
pop
roll
dec
pop
pop
shll
les
cmpsl
ret
arpl
sti
enter
pop
arpl
shlb
or
adc
movb
jecxz
xor
pop
sbb
push
cmp
in
int
xchg
shlb
mov
leave
imul
adc
in
in
add
in
in
add
and
inc
out
in
cmp
or
push
push
or
call
test
mov
mov
add
add
out
pop
jb
daa
jp
pop
test
rcll
aam
nop
push
and
addr16
into
mov
aam
aam
pop
enter
rorb
test
sahf
or
cmp
add
cmpb
add
loopne
popa
daa
adc
sub
sub
sti
out
popf
push
cmp
aas
dec
je
push
or
add
lahf
mov
lods
mov
dec
adc
dec
cmp
add
jge
and
fldenv
push
adc
das
lea
enter
gs
xchg
jg
xchg
das
push
hlt
mov
xchg
data16
js
pop
dec
ja
dec
jnp
and
cltd
in
nop
addr16
lods
rclb
mov
rorl
mov
mov
fisubs
shr
jae
mov
loopne
mov
jge
dec
jmp
mov
push
enter
mov
push
aam
les
lea
cwtl
fcomp
enter
gs
mov
xchg
scas
loopne
rcl
rclb
inc
movsl
loopne
or
pusha
ja
data16
mov
mov
jg
cmp
adc
add
je
mulb
mov
ljmp
jmp
in
mov
sbb
push
xlat
add
and
je
push
mov
jb
xlat
aad
sub
add
add
adc
test
lds
inc
cmp
dec
imul
add
jge
outsl
add
hlt
out
pop
gs
test
lcall
ss
add
xchg
or
xchg
push
pop
mov
push
add
gs
fmuls
push
dec
and
rorb
inc
add
out
call
mov
test
imul
ss
add
mov
xor
les
sub
pushf
adc
insl
add
mov
and
ds
push
scas
xchg
das
les
adc
insb
sbb
clc
jmp
adc
data16
and
mov
ja
lock
lock
add
js
insl
in
decl
call
add
inc
add
clc
enter
mov
hlt
adc
in
insb
fsubrl
add
bsr
rol
inc
sub
sahf
test
sbb
inc
pop
lods
push
shll
or
jbe
repz
and
jnp
fistl
sub
test
add
push
or
fcoml
es
into
mov
add
mov
add
sub
add
push
je
adc
or
and
pop
std
add
sub
and
inc
push
add
aaa
or
das
jl
jmp
idiv
and
in
out
pop
aad
and
loop
lods
or
add
scas
rep
and
or
mov
dec
cmp
mov
leave
pusha
or
mov
jl
xor
clc
fimull
mov
cld
popa
mov
call
or
mov
and
push
call
call
enter
jl
mov
addl
xchg
add
sbb
cld
mov
mov
sub
leave
clc
test
push
in
and
in
jno
data16
mov
call
sahf
dec
sub
js
push
rolb
mov
mov
xchg
sbb
decl
push
shrl
and
sub
add
and
cmpsl
pop
xchg
pop
mov
lcall
outsb
sbb
adc
hlt
data16
adc
lcall
xor
adc
and
nop
sbb
or
jg
xor
je
and
mov
lods
jne
mov
outsb
inc
lock
jne
add
xchg
lods
cmp
or
dec
sub
notl
ljmp
orb
sbb
cli
or
or
jp
ss
aad
push
in
addr16
in
mov
jmp
pop
xchg
mov
adc
addb
cltd
or
in
jg
je
and
inc
std
adc
es
fwait
pop
cmp
fnstcw
push
ret
lcall
enter
pop
call
stos
and
xlat
fdivp
dec
add
enter
call
fistps
outsb
cmp
sbb
sbb
push
fsts
mov
mov
imul
clc
lcall
adc
inc
add
xor
inc
outsb
lret
adc
sbbb
sbb
and
add
xor
mov
sub
ret
mov
mov
pop
pop
pop
cmp
enter
or
rolb
inc
es
scas
aas
andb
fsubrl
mov
lock
pop
add
push
and
loopne
std
stos
xchg
mov
adc
cmc
aam
adc
sbb
in
in
and
loopne
in
push
mov
rorl
or
jne
rclb
pop
rorb
xchg
mov
rolb
dec
mov
or
and
xchg
dec
rcrl
loopne
lcall
sti
push
xor
cmpsb
jmp
int
sub
arpl
loopne
xor
jne
lds
adc
daa
sbb
sbb
mov
movsl
cmpl
or
fsts
cmp
adc
mov
fsubs
push
in
mov
and
fdivrs
nop
inc
lock
add
test
int
sbb
subl
xor
mov
in
shll
int3
dec
testb
mov
cmpsb
test
sbb
and
sbb
fstps
push
pop
enter
ror
sbb
cmp
fxch
cmp
enter
enterw
sub
pop
lcall
dec
je
jmp
enter
push
adc
les
nop
in
pop
les
je
sbb
cmc
and
aam
mov
mov
add
add
data16
jecxz
cwtl
mov
scas
std
pop
sbb
sub
orb
dec
test
lcall
test
add
mov
ret
sbb
nop
or
mov
and
scas
or
xor
sbb
lods
pusha
lods
push
push
sti
ds
mov
adc
test
shll
dec
test
cmp
mov
mov
sbb
mov
in
pushf
sbb
push
jbe
sarl
cmp
and
dec
push
insb
xchg
lea
jmp
dec
nop
nop
and
jo
cmp
daa
daa
xor
nop
dec
mov
lds
mov
jl
mov
cwtl
test
cli
test
xor
test
sbb
gs
mov
data16
cmpl
sbb
in
pushf
or
in
sub
sbb
insb
cmp
xor
repnz
and
cmp
xlat
fs
out
or
pop
loopne
sbb
loopne
push
dec
ds
out
fs
dec
cmp
cmp
cmp
subl
push
sub
in
loopne
jns
and
in
mov
repz
out
push
pop
adc
mov
scas
cmp
inc
sub
shll
add
sub
mov
mov
repnz
stc
xchg
in
setp
add
lcall
push
xor
add
dec
and
daa
push
sbb
fmuls
push
sbb
and
or
lods
and
sub
push
sbb
mov
les
lods
in
or
inc
adc
xor
loopne
pop
ss
jecxz
adc
jno
pop
fcompl
fcoms
cltd
and
fcomps
adc
xchg
lret
fsubrl
cwtl
imul
add
mov
mov
insb
mov
adc
sahf
enter
enter
enter
cs
sbb
jno
mov
xor
lock
jmp
jl
jmp
add
dec
sarl
mov
jmp
loop
cwtl
nop
les
dec
or
inc
adc
sbb
xor
mov
sub
and
xor
xorl
push
mov
and
mov
mov
inc
mov
lods
adc
mov
lods
dec
test
inc
loop
es
movsb
adc
dec
sub
movsb
sbb
mov
dec
sub
ret
sub
and
test
dec
sub
mov
xlat
fs
dec
xchg
dec
push
xor
xor
pushf
nop
inc
inc
nop
leave
sub
dec
in
nop
mov
add
push
lods
mov
pop
xor
rol
adc
nop
mov
mov
jb
lock
sub
in
loop
mov
bound
gs
and
insl
jo
jns
aaa
pop
test
dec
jne
invd
push
insl
popa
xchg
adc
mov
sub
int
gs
repnz
mov
insb
add
inc
outsl
jne
mov
jne
jb
outsb
arpl
call
ret
push
inc
mov
mov
adcb
rorb
xchg
gs
outsb
jns
pop
push
outsb
imul
inc
arpl
cs
mov
push
and
inc
out
dec
push
cwtl
fistpl
fsubs
in
sbb
jb
in
faddp
dec
or
mov
mov
pop
out
push
iret
adc
fcomps
push
sti
mov
cmpsb
mov
adc
push
inc
fcom
notb
pusha
stos
add
fbld
and
jmp
sbb
jl
pop
jl
mov
add
mov
jno
adc
lret
or
push
jp
xchg
cld
jl
fwait
push
pusha
adc
pushf
add
sbb
and
out
popa
insb
mov
das
xchg
lea
pop
je
pusha
insb
mov
adc
stc
es
sti
sbb
and
cwtl
adc
add
test
add
inc
adc
or
cmp
aam
jne
inc
outsb
jns
clc
add
and
cmovnp
in
mov
shlb
mov
add
cld
or
fsubr
fbstp
xor
int
jbe
fcmovnbe
arpl
mov
add
jbe
pop
rep
cmp
mov
cmp
sub
jl
mov
fldl
imul
cs
lds
cmc
cmp
add
fsubrl
jo
cmp
and
call
ficomps
test
xchg
mov
push
xchg
xlat
stos
cmp
inc
sbb
pop
loop
mov
lret
arpl
push
cwtl
mov
jge
cmp
je
jl
fcoms
mov
adc
into
xor
sub
mov
pop
adc
adc
clc
mov
xor
ja
andl
lock
inc
pushf
or
int3
inc
aam
push
pop
mov
call
jge
and
ret
ret
pop
mov
or
push
sti
in
shlb
push
jle
icebp
jne
mov
sbb
add
push
sbb
adc
xchg
push
and
inc
gs
push
aam
nop
icebp
mov
jge
adc
jle
pop
or
sahf
or
and
pop
mov
mov
mov
loope
push
add
or
sbb
mov
pop
movl
pop
sbb
sub
enter
or
lahf
lock
int
inc
push
js
or
pop
out
jb
push
ljmp
pop
sbbb
sub
inc
repz
cmp
dec
sti
pushf
fsubs
push
sub
cmp
setg
and
ljmp
or
pop
jbe
in
jne
jo
add
enter
or
ret
repz
push
mov
js
lahf
hlt
movsb
movsb
mov
nop
mov
sub
clc
in
andb
and
ja
lock
jns
dec
repnz
insl
hlt
sbb
cmp
outsb
aad
ffreep
mov
push
mov
mov
inc
rorb
mov
adc
fnstenv
leave
ja
ja
in
or
data16
sbb
dec
loopne
push
push
xor
sbb
hlt
push
adc
stos
inc
push
stc
or
lods
lods
push
sbb
scas
nop
xchg
sbb
xchg
xchg
xchg
je
inc
push
xchg
xchg
xchg
dec
dec
push
push
stos
add
into
and
cmc
cmp
add
out
in
pop
jmp
out
adc
cmp
mov
test
add
nop
cmpl
inc
push
roll
add
cmpsb
inc
and
push
inc
and
inc
and
push
sub
ret
insl
mov
add
das
inc
xor
mov
cmc
inc
xchg
sub
inc
xor
or
inc
pop
cmp
pop
mov
testl
push
adc
pop
push
xchg
and
pop
pop
adc
fs
mov
push
call
call
inc
testl
xchg
scas
inc
clc
scas
add
pop
push
scas
test
push
sbb
scas
xor
je
push
lock
push
and
jae
pop
mov
push
stc
pop
push
stc
pop
adc
aas
jecxz
inc
and
int3
ja
lcall
mov
mov
mov
add
ss
in
push
add
addb
mov
adc
pop
and
and
es
lods
pop
or
nop
jge
mov
str
or
add
mov
ljmp
dec
or
sub
mov
or
dec
outsb
loope
sub
arpl
rcrb
fadds
adc
pop
inc
insb
popa
arpl
daa
fmull
cmovns
jae
fs
jo
imul
out
jb
daa
add
pushf
jae
push
rclb
sahf
cmpsb
js
cmp
mov
sbb
inc
sti
ret
rorb
stc
adc
sti
and
push
cmp
or
or
testb
pop
or
lods
push
pop
mov
ss
insl
or
add
int3
fstpt
das
adc
or
add
das
insl
loopw
add
or
add
jne
fwait
rclb
dec
adc
subl
call
xchg
push
fwait
mov
cld
xchg
jge
adc
xchg
cli
mov
push
and
or
ret
aas
insl
jo
mov
cld
pop
rcl
pop
fcomps
std
invd
xor
hlt
jne
in
push
pop
cld
sbb
sbb
ret
add
sbb
lods
sbb
sbb
in
in
sbb
sbb
sbb
fistl
cwtl
add
das
or
leave
xchg
sbb
or
sbb
xlat
sub
out
and
cmp
xor
test
in
pop
arpl
adc
fdivr
jg
std
or
std
sbb
fdivs
aaa
test
hlt
add
sbb
lret
cwtl
push
sbb
pop
push
and
outsl
and
or
dec
and
pusha
add
pop
inc
fdivrl
and
or
mov
jo
ja
sub
in
lods
and
inc
mov
jb
pushf
mov
cmpsb
out
push
push
push
push
dec
decb
inc
add
dec
adc
or
xchg
aaa
add
mov
adc
call
bound
push
pop
addr16
pcmpeqw
and
inc
cltd
push
pop
dec
test
xchg
pop
pusha
add
push
jae
fs
cmp
clc
stc
mov
insb
add
xchg
fdiv
ret
in
push
jb
lds
add
and
mov
xchg
or
clc
or
repz
aad
enter
int3
push
xchg
repz
add
dec
xor
push
pop
or
or
stos
sbb
fsubs
and
mov
aas
in
or
inc
jmp
shlb
lock
or
hlt
sbb
fildl
dec
add
or
or
fcoml
xor
enter
std
sbb
or
mov
dec
xor
shlb
add
push
mov
push
inc
add
inc
dec
mov
add
push
stos
cmpsb
jbe
inc
adc
popa
push
lods
xor
sub
pop
fsubs
lea
dec
jle
idiv
test
jl
inc
xor
or
dec
jne
adc
inc
adc
adc
popl
cmp
fisttpl
out
adc
adc
xor
mov
arpl
mov
dec
push
jne
and
push
shll
fcoml
push
aam
mov
pop
push
leave
xchg
shrl
and
int3
push
push
les
fisubs
jae
or
add
outsl
or
and
or
jmp
in
mov
or
or
or
add
mov
rcll
js
jl
sbb
les
mull
loop
test
push
sbb
or
lea
xchg
mov
fmull
jle
cld
mov
jmp
ret
or
loope
ret
mov
cmp
push
iret
push
inc
dec
inc
push
inc
mov
sbb
movb
fstpl
pushf
sub
or
adc
push
inc
mov
cmpl
and
jae
cmp
pop
adc
push
jne
jecxz
aaa
mov
mov
inc
push
rorl
fmul
mov
xor
or
sbb
cmp
fs
out
hlt
mov
ds
adc
push
clc
decl
out
std
jno
jge
sub
mov
shl
lea
add
inc
mov
sbb
scas
popf
adc
icebp
iret
push
add
loopne
push
mov
lods
pusha
adc
or
inc
and
dec
add
sbb
jecxz
mov
add
shlb
xchg
in
add
adc
inc
das
push
lods
shl
add
mov
adc
add
or
lret
int3
roll
insb
mov
jns
adc
or
jle
jmp
inc
add
mov
dec
insb
mov
sub
jbe
push
cmp
outsl
insl
nop
jge
pop
add
jne
or
cmp
leave
inc
imul
xchg
mov
cmc
fs
mov
fwait
xchg
or
out
lahf
test
sbb
out
pushf
shl
xchg
sub
mov
and
sbb
sbb
js
jle
mov
jle
mov
add
push
les
add
and
dec
cmp
dec
mov
sub
jg
dec
dec
pop
or
inc
jne
mov
pop
and
out
xlat
or
add
add
add
add
cmp
imull
sbbl
pop
inc
repz
xorl
adc
inc
movsb
or
inc
sub
lock
mov
movsb
cmpb
mov
inc
int3
cmpl
movhps
fcmovnb
das
jmp
daa
add
xorb
arpl
out
mov
stos
mov
shrl
xchg
in
xchg
fwait
pop
or
leave
cs
xchg
test
or
or
dec
outsl
adc
and
push
xchg
jne
add
sub
sbb
add
xchg
or
xchg
push
mov
mov
mov
add
add
in
into
into
leave
pusha
lret
lock
add
pop
hlt
clc
shrb
pop
adc
push
xchg
mov
fistps
or
outsb
popf
add
lods
mov
cld
xchg
in
in
push
fdivr
rcrl
or
xlat
aaa
mov
add
or
and
push
mov
out
rorl
scas
or
or
push
stc
call
aaa
cmp
xor
fsubrs
mov
push
cmpsl
out
iret
das
stc
jo
nop
roll
leave
bound
dec
insb
adcl
adc
int
pusha
imul
mov
jno
sub
dec
popa
adc
out
orl
movsl
xchg
fildll
ud2
sar
adc
loop
clc
js
int3
sub
cld
jnp
mov
cmp
push
or
bound
mov
cmp
dec
cld
sbb
cmp
ljmp
cld
jo
push
or
hlt
repz
dec
inc
xchg
pop
cmp
cli
faddp
push
insb
imul
inc
pop
push
repz
lret
mov
or
xchg
xchg
pop
pop
push
push
add
add
inc
jp
cmp
xor
xor
iret
sbb
dec
push
sbb
add
fisubrs
mov
cmpsl
xor
pop
sub
mov
daa
adc
daa
clc
push
sbb
adc
mov
cmpsb
ficompl
sarb
subl
or
test
lret
nop
push
push
or
pop
cmpb
cmp
in
fisubrl
push
mov
iret
xor
clc
jbe
cmpl
in
adc
nop
xchg
sbb
and
jl
outsb
mov
insb
push
xor
inc
ss
repnz
lock
das
in
jmp
mov
push
in
pop
stos
xor
jl
rcll
bt
inc
add
movsb
xor
cmp
mov
sub
pop
add
adc
and
inc
ret
es
xchg
hlt
pop
xor
mov
xor
fidivs
add
fwait
pop
pushf
push
fs
add
cs
pop
ret
imul
push
and
jo
ljmp
or
clc
and
bnd
cmp
lock
ret
adc
in
rclb
or
mov
inc
std
push
movsb
add
or
mov
adc
addr16
add
rorl
cmp
push
or
or
pop
adc
adc
cmp
lods
xor
popf
mov
arpl
push
cmp
lea
shl
or
loop
aad
add
add
ljmp
stos
mov
inc
ss
mov
call
push
dec
call
cmp
adc
add
leave
xchg
jne
in
in
and
daa
popa
mov
push
adc
mov
or
lret
mov
lods
je
add
clc
nop
push
inc
popf
hlt
pop
mov
adc
add
iret
sub
mov
sub
lahf
rcrb
adc
scas
in
nop
or
inc
repnz
push
pop
mov
enter
mov
pop
cmp
inc
xchg
imul
pop
movsl
adc
and
push
or
sahf
mov
jns
xchg
lcall
mov
or
test
bound
arpl
jecxz
adc
int3
aad
roll
mov
fcoml
rcrb
cmp
je
adc
adc
pop
insl
dec
mov
or
loopne
or
jmp
loope
xor
sbb
mov
cmp
loope
adc
popf
ret
xchg
mov
lds
mov
sub
and
push
jg
clc
gs
enter
adc
adc
mov
sub
lea
push
imul
or
mov
jp
ja
push
rcll
dec
sbb
inc
lock
clc
adc
pop
push
jmp
aam
xchg
inc
xor
or
fs
adc
or
in
mov
cmp
add
scas
adcl
push
jb
mov
popf
adc
push
mov
mov
ret
lock
jo
or
or
cmp
or
lds
je
and
je
adc
jne
je
and
lret
pusha
lea
rolb
adc
enter
sbb
data16
jl
add
dec
xlat
mov
or
lds
push
leave
or
adc
loop
and
adc
inc
sbb
jge
adc
stos
fcompl
js
xor
adc
iret
pop
xchg
jge
push
or
lds
adc
pop
es
pusha
jle
inc
or
add
ja
cmp
xor
cs
mov
xchg
mov
and
mov
arpl
inc
jecxz
inc
aam
es
jmp
insb
jecxz
adc
or
add
gs
mov
fdivl
sub
xchg
xchg
xchg
lods
jge
incb
add
inc
iret
ret
push
push
mov
out
ret
daa
push
pop
mov
pop
mov
add
push
pop
mov
push
push
inc
inc
mov
test
enter
in
or
or
push
push
pop
insb
std
or
lahf
testb
cmp
pop
xchg
cmp
jne
testb
orb
mov
add
shl
sbb
sub
dec
subb
in
pop
pusha
xchg
mov
sub
adc
or
add
fisubrl
pop
xor
sahf
loope
or
dec
inc
sbb
js
shll
or
xchg
xchg
stos
lods
leave
add
sbb
sbb
shll
iret
add
fdivrs
mov
fs
xor
xchg
mov
adc
jmp
mov
sub
pushw
and
mov
insl
dec
je
fs
and
push
fs
in
sub
or
cmp
lret
adc
ficoms
sub
pop
fmuls
jmp
sub
sbb
adc
ret
mov
lea
mov
mov
bound
mov
fildll
and
add
imul
dec
cs
jnp
sub
jnp
repnz
add
pop
xchg
fmull
inc
pop
pop
jle
inc
mov
mov
pop
sbb
dec
mov
sbb
add
pop
add
add
cmpsb
das
xlat
aad
and
shr
inc
fwait
mov
adc
or
imul
fstpt
je
jg
mov
jmp
inc
pop
inc
pop
test
or
jbe
and
jae,pn
add
rorl
push
add
ja
and
jne
inc
add
or
mov
jle,pt
cwtl
add
sbb
mov
insl
jnp
repnz
xor
sbb
push
test
add
push
sbb
test
into
enter
add
mov
fmuls
push
pop
addr16
ret
push
push
out
cwtl
icebp
cwtl
jl
sbb
mov
mov
inc
jbe
leave
out
je
inc
or
pop
ret
ret
mov
into
mov
fs
cmp
cmp
pop
sti
jne
sbb
sbb
inc
lea
push
pop
dec
xchg
divl
mov
push
and
shrb
cmpb
enter
dec
sub
add
and
jb
or
pushf
mov
test
enter
and
rolb
add
push
cmp
jae
inc
enter
mov
mov
dec
sahf
mov
jl
jno
sti
inc
inc
xchg
dec
pop
jne
mov
fistl
shll
cmp
add
jbe
mov
clc
jle
mov
sbb
insl
sub
hlt
jl
rorl
movsb
xchg
aaa
adc
lea
sbb
cmp
ror
adc
pop
lret
add
add
pop
adc
xchg
xchg
and
sub
jnp
pop
jb
jle
push
loop
rcll
imul
daa
pop
xor
jb
adc
mov
sbb
lret
or
or
push
pop
pop
lahf
xor
lods
sbb
and
and
into
fmul
int3
icebp
adc
cmp
hlt
add
and
pop
mov
fbld
xorb
add
inc
xchg
scas
loop
add
jbe
push
pop
push
fstl
jle
cmp
rcll
and
shrb
scas
rcrl
loop
mov
lock
add
dec
mov
or
push
mov
inc
mov
cmp
aam
lea
adc
cli
mov
pop
loopne
loope
adc
orl
pop
add
pop
mov
or
push
add
xchg
faddl
jne
push
nop
push
mov
sbb
icebp
add
call
push
cmp
aad
cli
push
push
mov
xchg
stos
test
clc
jmp
shrb
cltd
pop
push
push
adc
movsl
or
push
mov
je
and
push
insb
addr16
test
xor
idivl
dec
and
xchg
sub
mov
arpl
clc
fidivrs
pop
fs
add
in
add
rolb
ja
rclb
dec
push
lcall
mov
dec
je
stos
inc
lret
push
jmp
iret
mov
sub
test
lret
pop
loopne
fdivrl
adc
icebp
psubw
mov
addl
jo
enter
pop
add
std
push
lea
inc
hlt
mov
sub
jle
lea
inc
mov
nop
addr16
push
loop
imul
arpl
push
and
fsubl
or
js
in
repnz
inc
and
dec
leave
fdivl
mov
inc
nop
incl
mov
incl
ret
add
subb
or
mov
or
inc
mov
pop
adc
cwtl
pop
stos
mov
test
push
or
cmp
mov
clc
notb
int3
add
cmp
jo
sub
mov
or
cltd
jae
out
leave
xchg
add
push
shll
je
mov
pusha
out
mov
pushf
xchg
mov
and
repz
mull
cwtl
repnz
subb
icebp
xchg
pop
push
pusha
cmp
addr16
adc
pop
jo
cwtl
pop
mov
inc
sub
test
or
adc
nop
ljmp
mov
jmp
mov
sub
mov
xor
ja
fwait
cmp
cmp
jb
mov
push
sub
jno
sub
adc
sbb
add
rcl
popa
push
std
pop
or
jne
pop
adc
mov
or
inc
pop
and
ljmp
xchg
push
stos
scas
lds
mov
sub
inc
or
mov
and
mov
in
xor
fildl
mov
arpl
and
int
push
and
ja
jl
or
jno
jo
add
fsubrl
xchg
add
mov
lret
adc
xor
shr
cld
push
shr
sub
je
add
jmp
add
cmp
adc
jl
mov
je
mov
or
adc
adcb
mov
jbe
es
push
dec
mov
int
mov
jmp
test
mov
js
add
cmpsb
sarb
fs
mov
inc
and
nop
in
inc
dec
pop
es
dec
call
cltd
sbb
dec
mov
xchg
mov
cltd
sub
je
bnd
sub
push
imul
sbb
and
mov
xchg
data16
pop
pause
out
imul
adc
adc
push
push
cmp
add
sub
jae
in
inc
lret
fs
xor
sub
sbb
mov
scas
aad
sbb
jno
sub
pop
lea
lcall
sub
add
and
inc
pop
in
mov
pcmpeqd
lcall
loope
fsubr
lods
jmp
jno
pop
or
es
fmull
adc
rorl
fs
fistpll
xor
push
lea
in
jmp
pop
pop
testb
jle
pop
adc
push
jmp
mov
and
cmp
inc
add
pop
jbe
sbb
pusha
pushf
push
repnz
sub
xchg
dec
sub
sub
cwtl
push
sub
or
into
clc
cmpsb
fwait
cmp
jle
mov
jle
or
or
jmp
stc
jbe
mov
jg
add
fldt
dec
sarb
dec
clc
push
scas
sub
and
in
mov
dec
int3
and
nop
pop
scas
adc
xor
fisttpll
mov
stos
jle
sub
xor
je
imul
nop
das
mov
popf
sub
lret
cmp
pushf
sub
stos
sahf
mov
xor
sub
lea
aaa
add
jmp
mov
push
inc
add
icebp
sub
enter
pop
mov
dec
adc
nop
sub
sbb
fwait
pusha
mov
push
jmp
dec
sbb
dec
mov
push
mov
cmp
push
jno
and
or
mov
or
mov
leave
sub
out
cmp
inc
aad
outsl
sub
ret
adcl
js
inc
aaa
addl
ret
outsb
mov
sbb
fcoms
xor
push
mov
outsl
scas
rorb
orb
inc
movsb
fwait
or
mov
push
notb
aaa
dec
inc
mov
ret
mov
push
stc
sub
xorl
cwtl
in
jnp
dec
adc
dec
add
or
stos
lods
jl
add
frstor
push
adc
rcll
scas
adc
stc
notb
stc
mov
aaa
ljmp
test
cwtl
aas
inc
sub
push
js
dec
fnsave
pop
add
push
inc
outsl
insb
outsl
jb
popf
add
roll
or
inc
cmp
mov
gs
outsl
nop
mov
add
repnz
ja
cs
add
cmp
pushl
jne
arpl
popa
outsb
popa
addr16
mov
and
jnp
and
add
popa
adc
jmp
inc
insb
popa
arpl
fwait
jne
mov
add
inc
mov
outsb
cmovg
inc
and
inc
in
cld
add
dec
popa
jbe
add
jb
insb
gs
mov
popa
insb
rcpps
test
and
imul
pusha
lahf
mov
inc
dec
imul
insb
outsl
xor
mov
ja
jne
or
enter
arpl
imul
popa
ret
push
push
add
pop
jbe
gs
add
imul
pop
adc
and
fsubrs
push
pop
and
inc
scas
loope
rolb
stc
pop
cmovae
mov
in
daa
das
jo
push
sub
push
pushf
sbb
addr16
pop
jbe
mov
je
inc
sub
dec
imul
data16
in
push
in
ss
leave
pusha
pop
adc
ljmp
mov
pop
sub
popa
jne
mov
ret
lret
imul
iret
sbb
dec
and
and
mulb
fbstp
rclb
jle
insb
and
dec
outsl
je
adc
lret
jmp
outsl
jns
insb
leave
fstps
adc
lret
or
in
and
inc
xor
adc
push
or
wbinvd
jnp
pop
and
mov
adc
sbb
mov
or
dec
dec
test
pop
push
arpl
es
xor
and
inc
inc
imul
xchg
or
cmpb
outsb
daa
or
jbe
lea
pop
inc
mov
out
xchg
das
loop
cmp
push
dec
pop
ret
push
mov
xchg
sub
std
xor
dec
push
dec
pop
inc
dec
inc
push
push
inc
push
add
inc
inc
inc
inc
push
popa
and
cltd
sbb
push
pop
dec
inc
dec
dec
adc
popa
lret
xor
dec
inc
inc
sub
mov
idivb
dec
dec
inc
push
dec
dec
push
pop
adc
mov
insb
flds
dec
out
dec
dec
adc
pop
repnz
pop
ja
inc
xor
xor
adc
dec
inc
adc
inc
xor
cld
inc
push
inc
inc
dec
fistl
dec
dec
push
dec
push
mov
sub
xor
jle
mov
pop
push
xchg
dec
inc
pop
inc
inc
dec
push
mov
fisttps
push
push
push
push
fbld
imul
scas
test
push
inc
xchg
dec
push
inc
push
dec
inc
adc
dec
push
mov
stc
add
pop
sub
mov
mov
mov
aam
and
xchg
add
jne
cmp
add
dec
sub
and
adc
cmp
sahf
imul
enter
inc
sbb
out
pop
std
je
movl
or
add
pop
mov
or
aaa
and
and
or
mov
or
xlat
lods
arpl
pop
movsb
loop
ret
or
add
adc
sbb
and
jmp
cmp
inc
movb
add
fldcw
dec
dec
lods
or
add
add
or
mov
lods
dec
mov
adc
and
adc
les
adcb
xor
or
or
xchg
loopne
mov
or
int3
add
jne
or
add
lock
lods
xor
std
out
lods
inc
mov
mov
xchg
xchg
in
mov
roll
or
inc
outsb
and
xor
mov
daa
lds
or
xchg
mov
push
xchg
pop
mov
scas
mov
fs
fisubs
bound
add
push
sbb
cmpsb
imul
invd
add
add
call
lcall
aaa
shr
push
mov
js
and
adc
test
xor
incl
or
inc
add
push
cmp
jle
adc
sub
sub
and
cld
shrb
dec
push
mov
cmpb
push
dec
xchg
andb
adc
daa
faddl
pop
adc
daa
cmp
mov
xchg
cmp
cwtl
or
cmpb
xchg
pushf
add
sub
mov
clc
mov
mov
imul
sub
jae
fistpll
push
cmp
shlb
inc
or
je
jnp
sbb
mov
add
mov
pop
inc
mov
cmp
add
xchg
stos
and
sbb
fadds
cmpsl
sub
aam
fsubrl
or
inc
sbb
add
fidivrs
andb
mov
orb
mov
fdivrs
test
iret
lods
lock
shlb
sbb
mov
ret
je
push
pushf
add
xor
mov
or
addr16
xchg
sub
add
and
and
js
pop
in
mov
outsl
add
rorl
movsb
sub
loope
repnz
fwait
sub
sub
es
adc
jmp
aaa
sbb
sbb
adc
adc
cmp
popa
subl
adc
add
or
xchg
and
add
clc
sti
movw
stos
scas
adc
mov
cmpsb
cmpl
enter
cmp
rcrb
cmpsb
push
push
aam
cmp
mov
push
mov
push
push
sbb
rolb
dec
pop
or
ret
repnz
or
lea
xchg
fnsave
sbb
fwait
pop
jbe
adc
push
xor
jae
sbb
shrl
jnp
enter
adc
sub
hlt
mov
mov
scas
cmp
dec
stos
add
cmp
mov
stc
xchg
pop
adc
sub
xor
xchg
leave
jle
sbb
xchg
lea
pop
and
mov
push
pop
pushl
and
popa
sar
sbb
add
add
fsubl
mov
in
cmp
inc
pop
addr16
or
or
push
imul
pusha
sbb
add
dec
xchg
loopne
sub
in
sbb
xchg
nop
out
leave
push
cmp
add
mov
pop
inc
fsubl
mov
sub
mov
hlt
mov
jl
pop
enter
ljmp
jle
sti
data16
scas
push
or
mov
push
xor
les
adc
lcall
push
mov
neg
mov
pop
add
aaa
jbe
mov
out
test
pop
sub
jne
mov
mov
enter
add
or
xor
pop
jb
subb
subl
orl
add
and
push
pop
mov
stos
test
jp
inc
lret
mov
popa
mov
das
sbb
sbbl
add
or
adc
add
add
insl
aas
enter
pushf
test
jge
or
jo
pop
data16
push
sub
shlb
mov
fists
inc
orb
cmp
stos
sahf
fadds
and
and
mov
aam
and
dec
ss
pusha
lds
xchg
int3
push
daa
mov
and
inc
arpl
dec
mov
xor
jo
xchg
mov
ret
aaa
jns
xor
sub
or
ss
call
push
or
nop
push
jle
out
jge
mov
mov
mov
out
add
int3
xchg
popf
cmp
adc
jbe
pop
icebp
mov
adc
cmpsb
pop
adc
mov
lret
pop
int
and
sub
xor
cwtl
xor
in
movsl
and
jmp
sbb
movups
adc
gs
and
jb
jmp
sub
jl
adc
sbb
dec
dec
jle
jno
pop
add
js
dec
pop
push
jg
call
inc
push
pusha
inc
inc
adc
pop
jb
sub
push
and
mov
push
inc
inc
jnp
xor
inc
xor
xor
push
add
pop
push
push
push
pop
or
fists
sbb
add
sbb
add
xor
pop
xor
jns
ljmp
decl
dec
add
push
pop
jo
jo
sbb
pop
adc
pop
adc
jo
inc
outsl
lcall
pop
sbb
xor
jb
and
jae
arpl
insl
dec
fs
jl,pt
cmp
lcall
aaa
ss
pop
xor
cmp
sub
sub
sbb
jo
xor
jmp
es
xor
or
cmp
pop
add
or
push
aaa
xor
pop
jns
dec
pop
jl
sti
incl
jle
push
add
pop
arpl
pop
pop
dec
pop
pop
inc
pop
push
cmp
jge
das
jbe
decl
pop
push
daa
js
pop
inc
inc
push
gs
cmp
arpl
jbe
sbb
sub
ljmp
xor
push
xor
or
sbb
or
adc
and
xor
cmp
sub
adc
and
sub
adc
or
or
dec
push
jg
mov
clc
pop
push
jle
inc
sbb
adc
outsl
inc
insb
jbe
jp
in
jle
push
inc
cs
inc
je
pop
jb
dec
push
dec
dec
dec
cmp
inc
pop
push
inc
dec
sub
lsl
push
insb
imul
add
adc
jle
jge
lcall
test
jne
or
ja
push
or
jp
add
ja
inc
fs
pop
push
sbb
pop
js
or
outsl
and
dec
jp
pop
xor
sub
inc
and
decl
cmp
dec
ficompl
imul
cmp
push
push
push
sub
jl
loope
or
inc
adc
or
sbb
mov
cld
das
aaa
or
or
adc
jb
pop
cli
fbstp
jp
je
inc
dec
popa
pop
gs
adc
inc
adc
pushl
jo
push
outsl
push
jo
and
cmp
pusha
insb
inc
jl
jo
xor
pusha
xor
incl
add
pop
sub
xor
xor
cmp
and
cmp
sbb
add
add
jp
sbb
jg
jo
sub
jne
or
jae
jne
pop
push
jnp
add
inc
add
lcall
arpl
or
jp
rcll
out
inc
imul
ret
call
pop
data16
jge
cmp
pusha
dec
pop
push
cmp
xor
pop
adc
in
inc
sub
sbb
xor
ss
pop
sub
arpl
jge
pop
js
add
mov
adc
ljmp
insl
insb
or
sbb
pop
dec
jbe
pop
pusha
bound
jnp
or
jno
mov
notb
push
dec
js
jbe
and
pop
daa
ret
decl
inc
jle
insb
inc
cmp
mov
bound
cmp
aas
push
std
jg
ljmp
xor
push
clts
push
subl
push
xor
mov
decl
aas
cmp
and
or
imul
rorb
loope
movsl
pop
jns
aad
jge
pop
orb
jg
imul
jae
sbb
push
sub
sub
fstl
and
and
ljmp
aas
jl
jge
cmp
subl
jp
jnp
cmp
push
das
push
pop
push
push
or
call
sub
pop
es
sub
and
outsl
inc
jnp
loop
push
ja
jne
jnp
fs
jae
jle
ja
pop
ljmp
and
fs
pop
adc
sub
bound
push
daa
pop
das
fdivrl
addr16
jbe
jle
push
inc
dec
pop
jb
ljmp
hlt
ss
add
push
push
das
xor
or
push
adc
and
pop
es
pop
std
or
add
adc
cmp
and
jnp
es
decl
dec
jp
inc
adc
inc
arpl
pop
inc
push
jnp
inc
inc
push
sti
ljmp
jbe
pop
gs
jo
jg,pn
outsl
sub
bound
pop
push
cmp
pop
ljmp
cmp
jbe
inc
jbe
imul
or
pop
je
insb
cmp
dec
pop
xor
adc
add
sbb
sub
adc
or
outsl
loope
xor
or
outsb
pusha
push
jge
inc
inc
dec
addr16
pop
icebp
inc
pop
inc
jp
add
je
adc
gs
mulb
cmp
jl
inc
jae
insl
and
fimull
dec
nop
pushl
sub
sub
sbb
push
imul
cmp
sbb
fists
fiadds
sub
sub
adc
adc
adc
dec
pop
incl
push
sbb
dec
pop
imul
jl
sub
jae
pop
je
push
sub
sbb
ja
aaa
push
jb
pop
inc
and
inc
je
pop
pop
cmp
ljmp
jns
add
push
add
push
xor
cmp
push
sbb
mov
adc
sub
and
jnp
xor
add
push
dec
adc
jle
sbb
sbb
inc
ja
pop
mov
movsl
jg
jge
push
push
inc
pop
dec
in
push
cmp
das
jne
pusha
push
bound
pop
jp
jo
pop
push
jns
pop
cmp
sti
call
push
popa
xor
adc
cmp
outsb
outsb
or
sub
jg
pop
arpl
xor
jg
add
jae
jno
pop
mov
sbb
insl
pop
pop
bound
inc
jg
imul
pop
jmp
pop
dec
sbb
sbb
jo
dec
gs
dec
jbe
pop
jo
pop
bound
xchg
jg
push
pop
dec
je
jp
jo
jbe
popa
pop
xor
sqrtps
ss
das
lea
push
xor
add
xor
aaa
push
add
and
cld
cmp
and
and
sub
jne
or
push
xor
outsl
test
ja
push
pop
or
inc
popa
pop
jo
ja
scas
clc
lcall
cld
dec
pop
sbb
and
pop
inc
ja
inc
and
pop
outsl
movsl
movb
ds
pop
xor
mov
jg
jmp
push
aas
sub
and
dec
outsb
push
adc
adc
outsb
sub
call
aas
and
push
sbb
cmp
adc
ja
pushl
outsb
lock
push
jne
pop
pop
sbb
or
pop
add
or
jne
dec
or
push
mov
sub
sub
decb
pop
in
and
pop
aas
fs
jge
inc
das
mov
aaa
pusha
xor
cmp
pop
inc
pop
add
idiv
incl
les
es
push
pop
xor
and
jnp
push
sub
or
sbb
mov
jno
adc
jns
pop
ja
bound
push
add
incl
jle
pop
dec
movsb
dec
data16
adc
adc
mov
dec
je
dec
add
and
aas
call
clc
push
inc
pop
inc
dec
push
dec
cs
je
daa
and
xor
xor
push
aaa
sub
test
pop
xchg
jae
and
add
jl
jl
sbb
pop
loopne
out
or
pop
add
das
pop
clc
or
rolb
sbb
pusha
add
add
adc
clc
push
ja
sbb
icebp
push
iret
imul
inc
jno
call
mov
jmp
xor
push
popa
push
xor
ljmp
lock
and
and
sub
pop
cmp
push
stos
shrl
mov
mov
cli
and
adc
lock
adc
push
ficompl
mov
outsl
std
inc
dec
sbb
sbb
sbb
sbb
imul
or
outsl
std
shlb
sub
arpl
push
and
inc
inc
push
jns
outsl
push
jmp
daa
imul
add
dec
add
cmp
stos
aaa
addb
and
std
jg
je
aaa
idivb
jnp
and
push
xor
ss
mov
clc
pop
xorb
dec
dec
sbb
push
add
mov
pop
push
add
jl
inc
js
fildl
shrl
dec
xor
jns
dec
mov
das
arpl
dec
inc
push
and
js
imul
decb
js
jns
cmp
or
jg
jg
addr16
jne
jae
push
add
add
jl
incl
sub
aas
xor
sub
adc
adc
jno
pop
clc
fcomip
push
pop
jne
cmp
sbb
inc
jg
jge
mov
jmp
rorb
scas
push
imul
pop
jno
adc
outsl
jo
and
xchg
jmp
dec
pop
pop
daa
sub
push
dec
xor
aaa
xor
adc
aaa
das
and
mov
add
xchg
cmp
pop
or
or
cli
mov
pop
jae
push
pop
add
ja
imul
repz
pop
xor
push
dec
push
es
dec
dec
pop
insb
das
hlt
pushl
sbb
inc
jl
aas
pop
ja
outsb
insb
aas
jae
arpl
addr16
dec
dec
jl
jmp
pop
adc
cmp
cs
das
jne
sub
mov
js
add
and
sbb
popa
and
cmp
pop
xchg
ss
adc
loop
test
dec
push
jle
add
push
or
jae
jb
adc
dec
into
dec
xor
jp
arpl
aas
jge
and
test
or
dec
dec
addr16
xchg
push
jg
push
shll
js
divb
sbb
sub
test
fisttpl
adc
test
jns
shrb
or
outsl
inc
push
mov
clc
filds
ja
push
jp
inc
dec
jne
add
insb
outsl
sar
movsl
jg
addr16
pop
push
pop
jge
push
jp
pop
pushl
sbb
jge
inc
pop
and
jnp
imul
clc
jmp
jge
push
aaa
dec
das
adc
cli
or
aaa
ljmp
ja
push
adc
jl
push
pop
sub
cmp
and
adc
cltd
push
pop
jb
in
adc
pushl
push
add
sbb
pusha
push
or
inc
insb
inc
xor
jg
jo
xor
push
cmp
adc
pop
push
and
es
ds
pop
jmp
push
daa
pop
push
add
sbb
xor
outsl
push
or
fldt
mov
adc
jbe
xor
mov
test
push
sub
inc
add
shlb
repnz
add
add
popf
inc
popa
dec
push
fildll
icebp
sbb
jl
pop
push
sub
pop
pop
dec
jle
lods
lods
push
xor
pusha
or
mov
inc
inc
insl
xor
push
testb
or
adc
xor
loopne
decl
mov
imul
daa
outsl
and
push
push
outsl
cmc
jg
bndldx
or
sub
xor
push
jno
decl
jg
add
push
add
adc
inc
sbb
js
jae
outsb
std
inc
test
inc
dec
inc
jo
push
ljmp
sub
pop
je
and
imul
dec
xor
inc
fsubrs
xchg
clc
inc
imul
daa
pop
cld
movsl
ss
jle
jbe
jns,pn
fsubl
jno
sar
jle
push
or
sbb
jl
daa
les
push
insb
cmp
xchg
insb
push
inc
decl
andl
adc
dec
popa
push
push
adc
or
push
das
pop
and
jne
insb
movsl
ss
inc
lods
pop
inc
popa
xchg
ss
hlt
pop
loopne
insl
pop
jle
xor
inc
inc
imul
and
xor
mov
sub
jmp
adc
adc
pop
mov
adc
and
adc
imul
pop
pop
xchg
lret
inc
data16
jnp
jae
jp
fmuls
or
popa
bound
je
or
jge
push
jbe
icebp
or
and
xchg
insb
outsl
cld
jnp
cmp
inc
jbe
jo
pop
push
and
outsb
and
les
sbb
xor
sub
jl
cmp
push
and
xchg
sti
lret
push
jmp
dec
jmp
jmp
xor
jmp
pop
jmp
test
jmp
push
jmp
sub
and
sub
loop
cs
and
lods
std
jbe
repnz
jmp
jne
or
pop
pop
jmp
jmp
std
das
add
jmp
push
jmp
mul
jmp
and
jle
or
jmp
add
dec
jmp
orb
insb
scas
mov
in
lret
ds
mov
in
shrb
push
and
or
pop
and
das
aam
push
mov
xor
add
ja
testb
popf
out
sub
add
in
test
inc
add
sbb
mov
mov
outsb
add
cmp
push
sub
or
inc
jne
sbb
push
mov
stos
fdivrs
xchg
or
lods
pop
bound
shr
push
fdivrl
loopne
sub
lret
stos
pop
insb
hlt
sub
or
ss
push
in
cmpb
lcall
jne
mov
mov
cmp
cs
jb
fisttps
xor
xor
pop
ss
cmp
push
leave
mov
pop
sub
inc
xor
mov
xor
inc
adcl
decb
bound
gs
xchg
lods
lea
std
outsl
jecxz
jne
popf
mov
jecxz
add
ds
or
and
add
sbb
mov
mov
pop
inc
add
push
inc
or
add
prefetchnta
cmp
jbe
mov
dec
pop
or
mov
mov
nop
shlb
mov
pop
xor
fwait
gs
int3
cmc
pushf
pop
int3
mov
int3
repz
adc
loopne
pop
jle
insb
pop
xchg
inc
add
push
sub
and
sub
aaa
mov
aas
inc
jg
sbb
mov
leave
out
dec
rcl
pop
push
sub
cmpb
or
mov
jecxz
mov
mov
sbb
fsubs
sub
fnsave
gs
mov
add
sub
pop
hlt
into
mov
mov
fsts
push
loopne
cmp
insb
pushaw
popf
psrlq
sti
xchg
mov
call
movaps
cmp
push
call
cld
nop
or
inc
add
das
xchg
adc
and
jo
insb
in
xchg
mov
pop
dec
push
add
push
dec
je
sub
jo
inc
add
lahf
sarb
add
mov
outsb
daa
fwait
popf
add
pop
push
and
cld
and
fistps
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
sbb
add
in
lret
inc
push
cs
lods
test
push
and
cmp
mov
popa
je
xor
add
or
pop
add
add
dec
pusha
adc
or
imulb
and
sub
inc
lcall
rcrb
mov
cwtl
pop
mov
sbb
add
xchg
pop
adc
aas
addr16
xor
add
jo
incl
orb
dec
mov
xor
shll
ror
fcomp
xor
shl
call
cmpsb
imul
imul
cmpsb
imul
addr16
sbb
lret
pop
add
fs
or
lret
gs
in
mov
add
pop
adc
and
sbbw
cwtl
sub
push
jns
dec
imul
pop
add
add
pop
and
sbb
ret
filds
mov
cmp
in
pop
add
in
sbb
xor
shll
dec
pusha
jo
shll
aam
pop
ss
in
add
adc
negb
cltd
cmp
add
ror
jo
adc
cmc
stos
add
orl
outsl
insl
popa
lahf
notl
sarb
stc
or
mov
pop
mov
jo
scas
mov
xchg
hlt
pop
lcall
jnp
xlat
mov
pop
ljmp
movups
bnd
cmp
add
pusha
repz
in
pop
jo
aas
faddl
add
sti
pop
lods
mov
or
shlb
add
or
xor
add
xor
sbb
xor
adc
jo
test
out
leave
xchg
shll
or
lcall
xor
dec
imul
imul
imul
cmp
sbb
adc
pop
adc
cmp
push
add
shll
or
sti
fs
dec
lcall
adcl
xchg
cmpsb
mov
cmp
lcall
imul
popa
lcall
xlat
mov
mov
jnp
jno
or
pop
or
sbb
and
sar
lret
or
add
or
or
dec
icebp
pop
mov
addr16
or
or
lcall
out
pop
hlt
pop
lock
pusha
popf
mov
pop
rcrl
xchg
cli
ficoml
xchg
sub
inc
shl
in
xchg
or
scas
nop
jmp
pop
or
pop
ret
push
jne
pop
rolb
mov
or
add
or
dec
jmp
xor
jmp
xor
pop
adc
sbb
add
xor
js
xchg
xlat
or
xlat
addb
or
pop
imul
cmp
js
loopne
enter
fwait
shr
mov
ja
or
fcoms
fnstsw
fisttpl
xchg
adc
sbb
orl
jae
scas
cmp
inc
sbb
adc
ss
inc
mov
pusha
sbb
and
divl
sti
inc
xor
ja
pop
enter
pop
pop
pushf
sbb
mov
scas
jmp
out
or
call
add
lret
dec
fcomps
and
xchg
xor
lock
daa
jo
jnp
or
fisubl
hlt
pop
mov
and
and
sbb
add
inc
cwtl
or
adc
lahf
dec
inc
adc
mov
adc
push
add
add
dec
add
data16
or
push
pop
or
add
dec
add
pop
add
inc
add
adc
cmpsl
add
fstpt
xchg
add
add
add
xchg
push
add
call
in
mov
flds
fprem
add
mov
cs
mov
in
ljmp
mov
ss
sbb
and
add
add
arpl
mov
cld
add
add
cltd
add
sub
addb
adc
in
add
add
dec
aaa
add
jge
push
mov
add
add
insl
repnz
neg
fildl
pop
add
rolb
les
adc
push
sahf
add
cmpsl
imul
add
jae
mov
outsl
mov
and
jnp
mov
pop
into
add
call
in
fildll
str
addl
add
adc
repnz
xor
ljmp
cmc
enter
sti
mov
or
out
fwait
inc
fsubrl
pushf
roll
sbbl
rol
and
jp
test
fbstp
push
int
or
add
in
stos
cmp
cmc
lock
lcall
add
std
mov
add
mov
fstp
mov
arpl
mov
lods
dec
mov
add
inc
dec
add
mov
das
sub
sbb
add
mov
movsl
das
lcall
add
cmp
pop
xchg
add
mov
xlat
popl
dec
xchg
orl
xor
add
sahf
sahf
push
jecxz
clc
pushf
pop
mov
fdivs
inc
in
add
mov
add
lret
mov
mov
cmp
insl
fisttpl
cs
xor
mov
mov
mov
sbb
in
int
loope
insl
rcr
xchg
pop
pop
add
iret
idivl
neg
xor
jg
imul
in
xor
cwtl
jle
shll
pop
cmpsl
cwtl
mov
push
fcoms
or
add
fdivrl
add
cmp
sub
sub
popf
pop
push
mov
sti
mov
xchg
js
loope
out
fcomip
add
jg
push
add
mov
lret
int3
and
test
jl
filds
cmp
jmp
bound
mov
idivl
loop
push
xchg
popa
loope
ret
mov
add
adc
int
fcmovnu
insl
enter
push
xor
mov
or
inc
jg
add
fsubrs
push
dec
call
xchg
lods
jo
and
rcrb
dec
sbb
incb
jbe
add
lock
sub
pop
sbb
sub
mov
push
push
stos
add
jecxz
rolb
push
sub
sbb
push
or
or
inc
insl
in
mov
dec
lods
add
sub
add
std
pop
outsb
sub
mov
mov
xor
pop
push
das
inc
scas
dec
cmp
push
ret
insl
pusha
xchg
orl
gs
add
mov
sub
jmp
fimull
stc
pop
push
mov
sub
or
in
rclb
loopne
lret
jne
addb
insl
or
ficoml
inc
mov
pop
jmp
and
mov
add
adc
das
add
push
movl
mov
dec
jge
pop
pop
sub
cwtl
cmpb
aam
xor
repz
sbb
inc
imul
xchg
loopne
xor
rcll
inc
lret
fcoms
xchg
aas
lds
imul
mov
dec
int3
mov
inc
cmp
pop
dec
inc
xchg
xchg
mov
adc
pop
arpl
incl
jnp
mov
je
and
dec
cmp
and
dec
xor
xor
mov
and
dec
xor
xor
mov
xor
iret
cmpsb
dec
push
enter
repnz
iret
dec
xor
xchg
add
cmp
repnz
add
pop
xor
iret
dec
icebp
inc
jecxz
adc
repnz
ljmp
xor
iret
stos
jnp
or
lods
pop
inc
xchg
and
sub
add
inc
xchg
call
outsb
jns
outsl
insb
insb
cmp
jbe
jb
add
sub
in
sub
out
add
push
add
cltd
push
pop
jg
popa
imul
push
pusha
jle
add
leave
add
outsl
push
mov
ficompl
jg
nop
add
sub
aad
je
loopne
fcoml
fcomps
pushf
lcall
stos
lea
cmc
push
push
mov
xchg
mov
inc
cmpb
xchg
aaa
push
add
xor
jmp
xor
iret
lret
cmp
fldl
dec
xchg
or
inc
adcl
push
std
add
jbe
frstor
jge
jae
jmp
xorb
push
outsb
rclb
ss
mov
push
ja
inc
xchg
loope
jo
arpl
push
sbb
mov
mov
xor
mov
mov
mov
imul
inc
dec
mov
repnz
fdivs
ss
push
pop
ljmp
sbb
sub
in
lcall
push
loope
in
mov
mov
movsb
mov
movsl
sbb
mov
rclb
sub
cmp
xchg
arpl
fdiv
add
loopne
mov
pop
call
insb
insb
jmp
and
pop
je
jl
add
cs
in
inc
sub
cmpsl
dec
inc
jae
push
mov
mov
inc
dec
cmpsl
push
sbb
pop
ljmp
add
lods
add
mov
ret
jge
xor
outsb
mov
adc
push
sbb
nop
cld
add
in
ret
mov
ret
sub
dec
movsl
int
movq
lret
shll
fidivrs
add
sbb
sub
out
jae
cld
fsubs
dec
add
xor
popf
sub
adc
insb
or
lds
add
add
jbe
sub
bound
outsb
movsl
add
cmpsl
lea
decl
decb
frstor
mov
add
jbe
sub
ja
push
jnp
pop
sub
or
outsb
mov
pop
fdivrs
addr16
cmp
test
rclb
nop
ljmp
mov
out
fstpt
or
pop
rorb
sbb
sbb
incl
cmp
add
sub
in
add
test
outsb
pop
cmp
mov
dec
jg
jg
mov
sub
lret
loopne
imul
jg
and
pop
jb
jle
add
arpl
mov
mov
pop
xchg
dec
rclb
and
les
lea
jb
fs
call
scas
outsb
sub
pop
jg
jp
jge
push
cwtl
pop
in
inc
jecxz
mov
loop
pop
jmp
mov
call
cmpsb
pusha
mov
jmp
aaa
jae
mov
mov
lds
leave
roll
adc
or
jae
jecxz
mov
shrl
pushf
iret
es
adc
aad
in
out
and
lods
pop
add
xor
insl
mov
add
addr16
fdivr
das
outsb
sub
jae
xor
pusha
add
add
xor
push
pop
add
and
subps
push
adc
mov
dec
mov
insl
test
addr16
in
mov
fcoms
mov
push
mov
out
dec
das
sti
pushl
fmul
jg
movl
lods
cwtl
rorl
dec
outsb
fcmovnb
add
shlb
int
mov
loop
into
xor
mov
sub
mov
je
adc
cmp
push
lcall
jp
int3
add
sbb
sti
rolb
xor
push
add
cli
js
pop
flds
pop
mov
jg
push
xor
scas
insl
mov
mov
mov
cmp
sbb
jno
add
addl
arpl
scas
js,pt
fcomi
add
pusha
lods
add
sbb
sbb
pop
fcomi
dec
xor
mov
out
jg
and
test
add
popa
adc
das
sub
mov
xor
in
add
das
insb
dec
pop
outsb
jg
jle
sub
insb
add
pop
stc
je
add
adc
dec
jg
repnz
adc
call
inc
add
pop
lret
jg
test
xor
add
and
mov
push
ror
add
add
xchg
xchg
xchg
mov
and
add
addb
mov
fcomps
xchg
out
pop
mov
add
push
add
iret
or
leave
pop
and
pop
int3
dec
pop
jg
xor
add
jg
imul
cld
jg
push
add
negb
das
incl
setne
inc
pusha
add
xor
add
pop
insl
mov
movsl
dec
das
sub
jg
pop
cwtl
fistl
mov
vpshaq
pushf
sub
movq
inc
adc
in
inc
mov
jmp
loopne
dec
cmpsb
and
lret
addl
imul
pusha
jbe
incl
add
add
mov
jo
fdivs
xor
cmpsl
pop
mov
addr16
call
adc
xor
iret
cmpsl
clc
repnz
push
add
lahf
out
stc
push
push
out
and
pusha
adc
outsl
sahf
xchg
cmp
inc
add
lea
repz
stos
inc
xchg
mov
mov
xchg
popl
fdivr
push
mov
lret
test
mov
repnz
mov
out
push
add
ja
stos
rolb
fcom
xchg
adc
push
xchg
or
jmp
cmp
imul
jmp
push
and
xchg
orl
pop
add
add
fisubrl
es
imul
fdivrs
mov
ss
into
lock
in
test
push
lret
pop
into
fsubrl
mov
imul
and
ljmp
add
add
jg
aad
cmpsl
mov
out
mov
xor
rolb
add
rclb
fdivrl
out
add
shl
xor
adc
inc
lcall
les
add
dec
jae
jl
insl
or
jl
ja
imul
lcall
int
pop
add
aaa
iret
cmpsl
mov
mov
scas
movsl
add
out
stc
xor
jns
xchg
imul
rcr
cmp
mov
and
inc
add
jecxz
lcall
add
pop
nop
dec
jae
sbb
jns
dec
push
ds
fwait
and
cmpsl
stc
filds
stos
pop
aam
sbb
pop
jmp
aad
test
in
int
imul
jns
repz
stc
xor
iret
fildll
in
add
xchg
adc
out
and
pop
sbb
int
fisubrl
mov
call
aad
pop
pop
pop
fbld
jns
or
aad
xlat
out
cld
pop
call
add
in
movsl
jg
repz
cld
add
xor
iret
dec
aam
les
mov
pushf
and
dec
xor
mov
jl
xor
mov
lock
cmp
iret
dec
inc
push
jnp
filds
mov
int
imul
add
icebp
mov
pop
add
fs
xor
iret
adc
push
and
loopne
xor
sbb
push
lret
add
fstpl
push
or
sbb
jno
jno
stc
xor
incl
dec
mov
cmp
out
add
lods
imul
add
fwait
out
cmp
test
les
xchg
ds
repz
cmpsl
inc
in
add
cmpsl
mov
rorb
jecxz
repnz
xor
and
repnz
push
std
aad
shll
adcb
mov
and
stc
inc
je
xchg
fcompl
ljmp
xor
test
popa
mov
shll
inc
lret
push
push
jge
adc
decl
push
mov
sub
loopne
scas
sbb
popa
jno
pusha
sbb
jg
sbb
stos
test
mov
nop
add
add
in
add
inc
jg
push
ret
bound
aaa
rcll
sub
jnp
in
scas
and
cmpsl
pop
fcmove
or
add
jno
push
pop
scas
fwait
mov
ja
fs
pop
pop
pop
mov
mov
cmp
ret
xchg
xchg
xchg
xchg
lea
cld
cmc
adc
data16
add
bound
addr16
shlb
insb
ja
in
jae
mov
inc
rorl
adc
sub
sub
push
lds
jnp
or
xchg
xor
out
jmp
sbb
jle
add
mov
int
outsb
mov
nop
pop
add
out
jg
ret
int
pop
ds
fnstcw
jg
adc
arpl
inc
inc
inc
jg
lea
fsubrs
cmp
jno
lahf
dec
jg
lret
pop
fildl
shlb
add
jae
pop
insb
jl
movsl
dec
shrb
jg
fistpll
jg
in
test
roll
jne
mov
add
in
mov
mov
outsl
inc
ficoms
es
or
out
jle
clc
imul
out
mov
sub
pusha
test
mov
popa
adc
mov
xchg
sbb
js
fcompl
call
js
push
push
in
rorl
ror
dec
jb
ss
mov
xlat
add
and
lods
pop
sub
sub
sub
add
addl
sub
insl
mov
sbb
cmpb
out
adc
ja
pushl
ret
aas
fiadds
jge
fcmovnu
pop
or
movsb
popf
daa
xor
shrl
outsb
insb
cmp
sub
mov
sbb
adc
or
add
inc
sbb
add
mov
or
outsb
insb
lods
dec
or
scas
mov
push
push
int3
push
mov
fisttpl
pop
icebp
add
fsubl
lea
inc
in
or
add
cmp
mov
test
push
pop
pop
jnp
mov
aam
mov
imul
mov
push
daa
cltd
pop
mov
push
std
into
cmpsb
push
les
jg
dec
popa
or
cmpsl
pop
jg
cmp
pop
add
and
daa
inc
idiv
insl
mov
popa
xchg
aad
rcrb
jmp
xchg
pushf
pop
sub
inc
fucomi
sub
push
jp
imul
pop
fcmovu
push
mov
jno
fidivl
imul
stc
sub
sub
mov
fcompl
aam
repz
push
fisubrl
mov
insl
sarb
add
inc
icebp
addr16
add
dec
cmc
mov
cmp
or
mov
jne
dec
add
mov
in
jp
adc
sub
mov
jecxz
in
pusha
inc
cltd
sub
fcompl
push
pop
sub
adc
inc
push
test
dec
push
jns
mov
adc
aad
push
add
dec
ret
fistl
jns
jmp
cmp
jg
out
mov
jg
or
in
push
or
sti
jg
mov
lods
out
xchg
scas
jmp
inc
lcall
insb
insb
pop
push
xor
insb
or
and
sbb
push
insl
outsl
pop
xlat
push
pop
aas
xchg
jg
mov
movsl
mov
sub
sub
jbe
jle
fisubrl
clc
xor
xchg
jl
loope
cwtl
outsb
or
adc
jecxz
dec
fwait
repz
sub
pop
jge
jb
push
mov
repnz
fidivrs
xor
push
mov
idivb
subl
je
rorl
lcall
nop
in
pushw
xchg
cmp
sub
sub
incl
iret
out
clc
movsl
mov
or
xchg
fistpll
outsl
out
iret
jg
add
jmp
jo
dec
xor
and
and
push
sahf
lret
aaa
jg
cmp
rcl
pop
sti
jmp
sarl
mov
fstl
pop
dec
aad
or
push
fcmove
pop
sbb
incl
mov
or
arpl
jg
jg
mov
push
mov
sbb
stos
and
cltd
cmp
ljmp
mov
enter
adc
movsl
pop
mov
ror
sbb
insl
jmp
pop
cli
cwtl
jg
in
ret
orb
mov
lcall
enter
or
pusha
aad
scas
mov
push
or
xor
aaa
inc
xorl
jg
enter
jg
add
jae
jg
add
lods
movsl
bound
ret
push
jg
mov
xor
imul
mov
xchg
pop
sbb
fs
sbb
mov
add
sbb
mov
insl
rorb
mov
mov
int3
orb
push
jmp
sahf
mov
jp
pop
pushl
push
mov
call
clc
cld
xor
std
add
inc
fcmovnb
jmp
mov
sti
jg
push
fstpt
les
push
jg
shr
cmpsl
mov
push
jl
sahf
push
xor
insb
in
ret
imul
cmpsl
cs
jno
dec
insb
sub
fucomip
test
xchg
pop
jg
sbb
sar
pop
nop
or
inc
xchg
fsubl
insl
or
out
mov
hlt
inc
enter
loope
add
mov
push
insl
fistpl
mov
push
int3
int
jnp
mov
fdivrs
sbb
or
mov
notb
push
fildl
lock
add
sbb
sub
mov
fidivrl
repnz
xchg
aaa
push
jg
ljmp
add
pop
jg
add
mov
mov
jg
cmc
lcall
incl
jl
stc
enter
add
or
inc
mov
mov
push
cltd
adc
jo
push
pop
out
sbb
mov
mov
es
sbb
add
inc
mov
sub
add
add
addr16
das
jge
cli
aam
push
push
fidivrl
popf
aas
in
fldenv
jecxz
imul
orl
cmp
dec
sbb
ds
notl
pop
lods
shrb
int
sbb
push
sbb
fldenv
jg
nop
or
push
mov
jg
sub
xchg
or
repz
push
pop
lahf
sub
mov
cs
das
inc
sbb
arpl
loopne
outsb
mov
fwait
mov
jo
mov
sahf
lds
sbb
or
mov
jmp
outsb
cld
lret
jg
aad
adc
mov
sub
test
das
inc
mov
or
pop
jns
xchg
pop
mov
inc
pushl
add
adc
ja
pop
push
sti
add
push
das
lcall
mov
ret
xor
and
or
stos
roll
dec
or
inc
sbb
ljmp
add
push
pushl
lea
mov
mov
cmp
or
sbb
data16
clc
into
jbe
pop
inc
rolb
in
inc
arpl
and
paddsw
mov
inc
xchg
xlat
xchg
adc
lcall
or
push
push
stos
jl
pusha
loope
das
insb
mov
add
sub
sub
jbe
jns
add
mov
jne
pop
push
and
in
pop
fidivl
sbb
cmpsl
xchg
mov
mov
insl
movsb
jecxz
xor
lods
sub
gs
imul
xchg
and
mov
rclb
or
sub
push
or
inc
insl
popa
stc
stos
add
pop
mov
test
ret
mov
fadd
movsl
insl
imul
pop
stos
jp
mov
js
pop
add
fcmovbe
je
mov
mov
sbb
js
rorb
inc
cmp
and
xchg
insl
popa
test
dec
push
push
popf
sarb
insl
and
push
jae
sub
lret
cwtl
or
pop
xchg
mov
idivb
mov
fisubrl
xlat
loopne
add
mov
pop
pop
fmuls
sahf
mov
or
fiaddl
xchg
cmp
lods
insb
aaa
lock
mov
adc
mov
insb
aam
sbb
enter
aam
mov
inc
int
fcompl
mov
mov
roll
movsb
pop
fstpt
push
rol
ret
mov
xchg
cs
dec
mov
and
adc
xor
fisttpl
mov
je
cmp
lods
mov
bound
mov
xchg
mov
xchg
mov
pop
adc
sbb
lahf
adc
jp
fcoms
mov
pop
jg
adc
insl
stc
jbe
pop
and
add
xor
mov
in
push
popa
mov
mov
fldt
xchg
push
push
test
bound
sti
mov
ss
fbstp
mov
xor
popf
aas
insl
arpl
push
call
mov
ja
or
jmp
mov
sahf
fsts
es
push
pop
fcmovnbe
idiv
mov
sahf
in
stos
lcall
in
cmp
or
mov
add
mov
cmp
frstor
sub
int3
inc
loop
cld
inc
mov
cmp
ds
pop
add
cli
fcmovnbe
pop
mov
loopne
das
sub
xlat
lcall
loopne
mov
loopne
mov
stc
mov
fcompl
arpl
test
adcl
imul
mov
push
push
add
xor
popa
stos
xchg
pop
cmp
filds
ror
jno
mov
push
mov
sbb
adc
sub
or
lahf
or
cwtl
xchg
test
movsb
inc
fldl
cmc
pop
push
cmp
pop
xchg
jge
bound
mov
insl
data16
cltd
fidivrl
sbb
push
pop
pop
imul
jo
mov
xlat
xor
push
sti
dec
xchg
shll
je
sub
ret
aam
sub
inc
inc
in
fnsave
ret
std
movsl
jno,pt
sbb
jbe
mov
inc
das
push
push
dec
mov
mov
adc
pop
mov
or
sbb
or
lcall
hlt
arpl
lret
and
ret
ss
stos
xor
js
xchg
test
push
stos
adc
fcoml
push
cmpsl
out
jle
imul
in
push
sub
fldl
cmp
push
pop
mov
sub
mov
mov
negl
repnz
push
sti
mov
out
add
test
or
mov
jge
insb
lret
insl
icebp
mov
loopne
xor
push
lcall
or
mov
pop
push
ffree
pop
iret
inc
mov
cmp
lea
sub
outsb
xor
int
ret
push
ret
or
sbb
cmp
mov
insl
test
mov
inc
in
pusha
mov
inc
out
fadds
mov
ds
add
lret
shrb
or
jnp
xor
xor
xlat
mov
loopne
rolb
jbe
push
imul
enter
sbb
cmp
inc
add
and
jmp
clc
inc
jbe
jno
inc
sti
rolb
dec
or
mov
pop
push
loopne
push
loop
xchg
jb
test
clc
and
mov
arpl
jno
lods
insb
or
jp
jl
pop
fcomp
push
xor
shrl
ja
xchg
fcmovb
sub
pop
int
adc
xor
sub
aaa
jae
or
add
push
cmp
push
jg
stos
loopne
pop
pop
mov
or
dec
lds
jmp
fmuls
or
cmp
push
jge
imul
fistps
cmp
or
sub
push
fcomp
push
mov
adc
push
jnp
or
insl
mov
cmp
push
les
pop
push
inc
and
mov
inc
aad
add
fdivs
das
ret
fwait
jl
lods
mov
mov
test
loopne
pop
push
mov
xlat
std
cs
dec
mov
pop
jne
pop
add
outsb
xlat
cli
fiaddl
push
xchg
xor
shlb
lock
sub
mov
shlb
mov
ss
pop
mov
into
push
insb
shrb
js
outsb
cmpsl
add
fisubrl
leave
mov
int3
mov
arpl
mov
cmp
inc
das
out
sbb
jne
push
fistl
in
in
daa
pop
push
dec
mov
in
negl
pop
mov
scas
imul
sub
fldt
dec
pop
sarb
add
jbe
mov
sbb
outsl
xor
mov
push
stos
adc
pop
movsb
xchg
fistps
ficompl
mov
sbbl
clc
daa
jbe
popa
sub
int
mov
and
fstp
push
mov
xor
ds
push
aad
or
fidivl
add
fiaddl
test
cmp
or
lods
test
jl
loopne
ret
fildl
inc
fs
add
fiaddl
rorb
mov
pop
fadds
adc
aas
sbb
inc
loop
mov
outsb
sub
cli
es
ljmp
mov
jp
pop
incb
mov
fcmovnb
push
rorl
mov
lahf
mov
mov
mov
fdivs
aad
in
int3
jbe
ds
ss
mov
lods
mov
gs
sbb
xchg
sub
push
pop
andb
mov
jae
mov
push
mov
addr16
imul
gs
fidivl
nop
sbb
jl
fdivrl
mov
push
fs
mov
mov
and
mov
shrl
in
shlb
sub
cmp
shrl
es
pop
pop
push
dec
andb
movb
lods
sub
mov
fidivl
ficompl
cld
aam
mov
insl
imul
push
stos
and
stos
mov
push
jge
add
ljmp
sbb
jns
sbb
mov
mov
or
rorl
or
leave
aad
mov
vpshuflw
mov
fwait
cmp
jo
sub
cmp
xchg
es
cmp
out
daa
sbb
lea
insl
pop
hlt
cli
lahf
inc
sbb
imul
mov
cmp
mov
aam
int
pop
fdivs
push
xor
sub
xor
hlt
std
add
sahf
in
movl
mov
cmc
test
insl
dec
add
sub
ret
out
xchg
jnp
xchg
enter
sbb
aad
sbb
jbe
mov
popf
pop
inc
sub
lret
les
mov
mov
outsb
mov
rclb
jb
jb
mov
out
clc
xchg
pop
insl
sub
sbb
jb
adc
pop
pop
fsubrs
pushf
in
sub
fildl
or
test
jle
sub
add
add
or
mov
xlat
push
inc
adc
push
fmull
mov
ficomps
jge
ror
xchg
push
insl
jmp
xchg
mov
loope
pop
or
data16
repnz
mov
sub
mov
outsb
or
jbe
lods
jg
out
in
xchg
add
mov
popa
stc
add
add
hlt
and
imul
fcomi
sbb
ds
stos
fimull
sub
xchg
insl
xchg
jmp
imul
jae
add
add
ljmp
imul
add
fildl
dec
or
push
insl
sti
repz
or
je
push
mov
jmp
jae
hlt
push
repnz
mov
mov
cmpsb
mov
or
mov
push
mov
mov
imul
ficompl
ss
add
lret
ret
cmp
jns
aad
sbb
imul
pop
int
fsubrl
fiaddl
pop
dec
ret
xorb
ja
inc
sub
ds
mov
mov
dec
push
sbb
xor
add
insl
fcmovne
jns
stos
pushf
das
adc
imul
or
lret
push
ficoml
or
xchg
fiaddl
sub
or
sub
mov
jbe
imul
xchg
movsb
xchg
add
mov
mov
test
aaa
mov
ja
fcmovnu
es
jmp
adc
adc
add
outsb
mov
dec
sbb
lods
enter
and
fimull
lret
mov
mov
movups
mov
mov
mov
sub
mov
lods
insl
das
lret
mov
mov
fcmovnb
pop
pop
rcr
repz
mov
push
or
rcrb
fcmovnu
popa
mov
sahf
adc
push
ja
add
outsl
jmp
add
xor
insb
lods
test
aam
loop
ficoml
insl
or
imul
xchg
add
mov
push
mov
and
mov
push
outsl
dec
fcmovnb
call
imul
sbb
sub
add
dec
out
add
mov
rclb
shll
mov
inc
xor
cwtl
out
and
dec
and
je
xchg
sub
jbe
add
dec
pop
or
pop
jbe
mov
fidivl
loopne
aad
mov
mov
fdivs
pushf
dec
lret
aam
sub
mov
fs
dec
pop
dec
call
rorb
fmuls
cmp
adc
xchg
sbb
or
idivl
push
push
fisubs
adc
mov
sbb
ss
clc
or
inc
mov
mov
lret
inc
jl
and
mov
lods
aam
outsb
pop
mov
sbb
and
in
leave
fmul
test
stos
mov
ret
mov
loop
cld
ret
imul
mov
fidivrl
sbb
mov
push
fsubrs
cmp
insl
sub
inc
pop
movsb
shlb
push
fldt
dec
adc
fs
inc
mov
mov
cmp
mov
adc
sub
pop
in
push
scas
mov
push
xor
fsubrs
dec
push
inc
pop
xor
mov
fldt
cmp
jnp
mov
add
cmpsb
push
dec
pop
pop
push
push
dec
cld
inc
out
pop
add
pop
xchg
adc
sub
es
sti
fdivs
adc
push
fldt
lea
add
out
and
pop
insl
clc
mov
loope
sbb
mov
imul
inc
test
mov
mov
shlb
fdivs
push
push
ja
mov
pop
fstpt
xchg
out
cmpsl
pop
in
sbb
or
cmp
xchg
movsl
movsl
dec
inc
inc
in
xchg
mov
push
in
jge
insl
mov
dec
lahf
or
mov
push
push
adc
dec
sub
xchg
mov
jmp
fistpll
mov
loop
ret
lea
shrb
js
add
in
mov
jae
leave
das
push
mov
adc
mov
push
jg
imul
lea
cmp
lods
test
mov
iret
movsl
sub
fimull
push
push
pop
outsb
pop
jno
mov
iret
pop
lods
xlat
into
pop
loopne
rcr
dec
and
stc
loope
inc
add
in
lods
add
cs
test
ret
icebp
jecxz
test
ret
mov
or
inc
loop
jmp
push
fsubrl
daa
push
push
or
les
mov
loopne
std
stos
lret
mov
xchg
pop
mov
add
cld
sub
mov
or
js
lret
mov
test
push
outsb
sar
insl
or
ds
and
mov
mov
cmc
cwtl
jl
mov
mov
negb
sbb
jmp
ror
sti
or
pop
fst
rclb
cltd
mov
mov
mov
jne
ss
cs
pop
es
ret
popa
add
stc
rolb
aam
push
js
adc
mov
xor
xchg
in
ror
add
insl
stc
shlb
push
in
inc
sbb
push
mov
xchg
gs
pop
push
insb
pop
mov
sub
and
lds
mov
xor
imul
pop
or
fldt
clc
jae
lret
fs
xchg
sbb
outsb
fildl
sub
mov
xor
fcmovnbe
and
push
clc
repnz
iret
insl
sbb
popa
mov
adc
xor
repnz
jl
or
loop
inc
inc
xchg
inc
fwait
cld
xor
ss
mov
dec
cmc
mov
lcall
sbb
dec
outsl
sub
xor
mov
pop
mov
les
enter
xlat
fs
ret
out
or
or
fistpll
dec
or
fistl
test
sbb
orb
adc
dec
inc
mov
or
sub
pop
xor
push
sub
movsl
or
imul
ss
int3
sub
sahf
xchg
lods
insl
imul
xlat
push
inc
mov
insl
mov
movsl
add
add
sbb
fcom
push
outsb
inc
std
jge
lea
sbb
into
je
dec
mov
outsb
insb
lret
mov
push
mov
mov
or
xor
push
mov
aam
cs
pop
out
ret
xchg
pop
jmp
mov
sub
inc
lret
ds
enter
fidivl
lds
or
sub
jnp
imul
cmp
mov
mov
imul
or
cwtl
push
jge
aaa
adc
sbbl
gs
jne
stos
push
in
test
cmp
or
cmc
mov
pop
sub
aam
icebp
repnz
pop
cltd
adc
pop
outsb
cmpsb
sbb
imul
inc
pop
xor
pop
jbe
mov
mov
mov
aam
enter
sbb
mov
dec
out
dec
jge
mov
dec
fildl
insl
popf
lods
inc
roll
scas
push
ficoml
fldenv
or
dec
mov
push
shl
repnz
stos
les
dec
lods
adc
pop
fnstcw
mov
insb
mov
je
clc
icebp
mov
dec
pushf
mov
rcrl
out
adc
jp
loope
fwait
ljmp
pop
inc
jg
insl
in
inc
shlb
in
add
in
mov
fnsave
cli
and
pop
das
outsb
dec
or
or
ss
mov
mov
sbb
pop
in
mov
enter
sbb
sbb
mov
into
shrl
lods
add
push
mov
xor
cmp
cwtl
xchg
mov
jp
ret
dec
and
mov
pop
int3
insl
in
mov
adc
cld
mov
cmp
insb
insl
mov
mov
xlat
repz
cs
push
mov
or
dec
pop
adc
mov
test
in
inc
pop
mov
jbe
popf
je
pop
in
mov
movsl
mov
cld
dec
jp
das
ljmp
outsb
push
ds
cmp
out
mov
add
ret
mov
adc
movb
sub
mov
mov
test
imul
sub
dec
subb
jbe
shll
jns
stos
add
fcmovnb
ret
adc
cs
test
inc
scas
clc
sbb
rclb
decb
out
fcmovnbe
in
fistpll
adc
pop
fldt
mov
mov
xor
inc
pop
mov
xchg
sbb
sbb
in
dec
mov
divb
outsb
dec
aaa
push
dec
cwtl
dec
xor
cmpl
fsubrl
leave
mov
mov
jo
mov
stos
inc
in
sti
das
sub
repz
enter
pusha
cmc
loop
mov
ss
and
and
leave
jbe
fdivl
push
in
popa
mov
test
and
jg
sub
imul
and
add
movsl
shrb
popa
sub
pop
mov
jecxz,pt
inc
cmp
shrb
xchg
dec
ja
xchg
loope
mov
mov
bound
add
or
insl
fcmovnbe
rcrl
cld
ds
adc
cmc
in
and
xchg
outsb
ficoms
ret
int3
and
insl
insb
call
imul
das
pop
push
in
stc
mov
sub
out
add
daa
test
cs
adc
js
adc
dec
or
xchg
leave
insb
and
mov
popa
pop
inc
pop
push
outsb
movsb
jmp
adc
mov
pop
shrb
jle
movsl
inc
insl
pop
mov
lcall
inc
pop
outsb
xchg
jbe
add
int3
enter
push
shrb
loop
mov
or
pop
push
fimull
adc
sub
pop
mov
hlt
mov
push
ss
jp
sbb
fldenv
jp
fdivl
push
rol
rolb
sub
xchg
jo
xor
movsb
ret
outsb
pop
cli
pusha
push
dec
mov
rol
cltd
insb
divl
popf
mov
dec
insl
push
or
lods
insl
pop
fisubl
mov
adc
mov
test
xor
enter
jmp
push
das
lret
add
incl
and
add
ljmp
mov
lea
and
das
mov
mov
jne
insl
insl
mov
dec
inc
sti
stos
pop
mov
mov
enter
mov
int3
add
mov
fisubs
mov
xor
mov
cmp
jl
aaa
add
shll
push
xchg
push
lea
mov
cmp
adc
arpl
jecxz
enter
sub
lea
scas
fwait
sub
pop
mov
mov
out
nop
filds
int
sub
inc
sub
sub
repnz
push
xor
fwait
mov
fwait
popa
popa
loop
test
and
sub
lock
xorb
incl
inc
mov
int3
movsl
pop
adc
jno
insb
lcall
js
pop
mov
fnstsw
mov
cmp
test
mov
lock
mov
pop
pusha
imul
arpl
inc
mov
jmp
icebp
out
add
into
cmpl
in
orl
repz
inc
or
mov
add
mov
mov
jb
pop
or
adc
dec
mov
mov
cs
adc
push
inc
loope
lods
jns
test
xor
pop
sub
mov
jns
mov
pop
mov
inc
mov
push
mov
test
cmpsl
add
fstl
cmp
xchg
rcl
sub
fs
aas
mov
xchg
xchg
sti
bound
out
inc
xor
jns
or
jmp
sub
inc
loopne
lock
sahf
ret
fs
jbe
imul
inc
fnstsw
sbb
mov
test
push
mov
fcom
cmp
cmp
out
add
jge
sub
fidivs
mov
popa
outsl
xchg
and
mov
add
movb
mov
das
js
mov
lods
cld
ret
out
ret
inc
sbb
and
cmp
mov
add
add
push
push
inc
add
push
pop
pop
mov
sbb
push
and
je
ja
insl
rcl
es
xor
mov
cld
add
out
dec
xchg
jb
dec
or
push
push
scas
inc
inc
cmp
sub
in
inc
push
shrb
mov
insl
sbb
pusha
xchg
es
mov
mov
cld
inc
das
dec
loop
and
loope
sub
push
or
add
enter
insl
mov
fldcw
push
jle
loope
mov
jge
adc
jae
xchg
ss
lods
test
scas
dec
jg
pop
xchg
jbe
xor
andb
cmp
repz
jmp
in
xchg
inc
cld
mov
sub
xchg
add
add
xchg
pop
add
jno
popa
xchg
mov
or
dec
cmpsb
or
add
xlat
mov
fstpt
push
pushf
jne
and
insb
insl
in
add
jge
jl
dec
lahf
or
fcompl
shl
lea
test
sub
movsb
pop
loope
jecxz
test
push
dec
jg
imul
mov
shlb
pop
mull
cmp
sub
sbb
inc
lods
movsl
push
fisubl
fildl
mov
sub
test
ja
cmpb
test
mov
fcoms
adc
pop
js
orl
pop
pop
jl
cmc
inc
dec
add
add
mov
pusha
mov
and
or
outsl
mov
jg
xlat
aaa
int3
or
adc
lea
mov
ss
push
cmpsb
sub
jge
xchg
call
pop
movsl
btr
pop
mov
cs
clc
sub
push
dec
loopne
out
mov
pop
mov
add
adc
or
movsl
cmp
or
fcmovnbe
or
push
movd
imul
hlt
fsts
inc
fistl
outsl
pop
sbb
push
sbb
inc
sub
fisubrl
pop
push
aam
stc
mov
mov
bound
cs
xchg
insl
pop
mov
gs
cmp
jo
inc
popa
cmp
mov
mov
sbb
aad
mov
jns
xchg
dec
push
cmpsl
lods
mov
insb
in
push
sbb
xor
push
ficoml
push
fwait
jns
push
add
dec
pop
inc
test
pop
jno
cmp
mov
sbb
jp
dec
imul
and
sub
rcll
lea
push
xchg
fcmovbe
push
popf
cltd
popf
out
jg
fcmovnu
xchg
xchg
push
sbb
out
movsl
and
mov
or
xor
xchg
inc
sub
mov
gs
out
jae
mov
dec
push
xor
mov
add
das
rorl
call
cmp
clc
aas
mov
lea
adc
outsb
mov
xchg
sub
lods
imulb
call
roll
sub
pop
insl
sub
mov
inc
or
pop
pop
shll
adc
outsb
adc
ss
mov
loope
cmp
or
add
cwtl
mov
insb
sbb
clc
and
mov
jnp
pop
jmp
inc
cmp
mov
push
outsb
insb
xor
cmp
dec
ret
xchg
mov
insl
mov
sub
movntq
push
fadds
int
inc
lcall
and
fdivl
cmc
mov
insl
adc
outsl
dec
mov
push
lock
aaa
dec
push
mov
adc
fisttpll
fstpt
and
popa
sahf
rcr
in
insb
pop
pop
fldl
xchg
lds
cmp
and
mov
or
sahf
mov
xorl
dec
or
fcomps
fisttpll
fildl
mov
fcomp
test
jle
cltd
dec
repnz
push
pop
mov
add
xchg
or
dec
push
lods
jl
loop
fwait
mov
pusha
clc
dec
push
add
test
mov
mov
lret
mov
jb
mov
inc
lods
xor
in
test
inc
or
and
outsl
sbb
mov
movsb
inc
add
punpckhbw
das
bnd
imul
verw
add
and
sbb
mov
ljmp
inc
mov
fistl
dec
mov
sbb
es
lods
push
lea
dec
leave
push
js
dec
cmp
adc
mov
cs
sbb
inc
pusha
cmp
jl
add
test
imul
mov
jl
cmpsl
ret
or
lods
xchg
mov
inc
sub
in
insb
pop
sbb
arpl
pop
insb
test
mov
pop
jo
pop
jmp
jbe
jmp
loope
pop
nop
lock
adc
inc
insb
test
imul
inc
inc
sbb
insl
test
insl
pop
into
lock
fistpl
and
or
dec
shrl
aam
jbe
frstor
stc
and
sti
test
adc
add
movsl
movsb
aaa
push
pop
scas
jne
insb
or
fisttpl
or
add
cmp
add
xchg
insl
sbb
je
loopne
jb
adc
jae
mov
inc
jns
in
lds
ret
pop
jae
fdivl
xor
aas
outsb
pop
fistl
adc
or
mov
fnsave
mov
fcmovu
add
jge
xchg
addl
xchg
mov
out
lret
mov
ja
pop
test
or
mov
fsubrs
insb
push
mov
push
sbb
dec
adc
xchg
xchg
mov
maxps
test
push
mov
jbe
or
push
pop
pop
pop
sub
imul
push
mov
sbb
inc
jge
jno
shlb
pop
pop
adc
add
out
mov
mov
dec
adc
hlt
mov
pop
leave
sub
jne
fcmovnb
repnz
mov
pop
in
outsb
pop
mov
xchg
cwtl
mov
sub
rclb
cmp
mov
insl
fldt
pop
sarb
inc
xchg
imul
mov
xor
gs
lock
xchg
ret
fldt
mov
mov
mov
in
pop
cmp
jns
imul
jo
and
aaa
loopne
imul
sub
pop
mov
cs
add
cmp
out
inc
pop
inc
cs
xchg
pop
adc
icebp
ds
mov
or
pop
cwtl
ja
mov
fcomp
lods
lods
pushf
jge
inc
mov
pop
pop
mov
jge
icebp
pusha
push
icebp
sahf
shl
fildl
cmp
adc
fcmovu
fdivrs
sbb
in
fsubs
pop
cltd
lret
mov
ljmp
jecxz
mov
pop
cmp
xor
sub
lods
add
insb
or
ret
mov
ret
jmp
mov
das
je
xchg
sbb
inc
insb
mov
dec
pop
outsb
cmp
jnp
sbb
mov
insl
jne
and
sbb
mov
insl
in
push
and
sub
leave
jo
loop,pn
outsb
sub
mov
lret
hlt
mov
cmp
add
jle
rorb
push
data16
xor
insl
mov
and
popf
rol
mov
arpl
xor
jp
lea
sbb
fcmovbe
jle
xor
ja
xlat
mov
pusha
push
nop
xchg
sbb
repnz
ljmp
mov
enter
inc
dec
mov
lods
out
cmp
jns
shrl
dec
repnz
sbb
movb
pop
mov
aaa
stc
vphadduwd
pop
pushf
sahf
cmp
adcl
clc
push
mov
icebp
cmpsb
mov
mov
push
mov
mov
movsl
mov
stos
into
loop
pop
mov
adc
insl
fcmovne
xlat
xchg
test
sarl
mov
pop
sub
xchg
and
test
push
pop
je
and
dec
movsl
bound
xor
mov
sub
mov
mov
mov
inc
jno
add
imul
mov
daa
sub
xlat
int3
mov
jo
pop
out
dec
inc
out
add
cmp
mov
ja
sub
jns
jo
add
out
push
or
jge
xchg
inc
outsl
mov
ret
into
mov
daa
sub
sbb
add
add
sbb
dec
sub
rorb
lea
sti
fldcw
mov
add
aaa
sub
or
fadds
push
push
sub
inc
mov
xchg
in
jg
shrl
fsubrl
addr16
and
add
sub
lcall
movsb
pop
dec
outsb
or
and
pop
dec
outsb
aad
mov
cs
test
push
jecxz
mov
std
push
loope
addl
popa
xor
pop
insb
adc
xchg
jns
pop
mov
add
ret
jbe
push
fiaddl
hlt
andl
loopne
xchg
mov
shlb
push
mov
jb
add
push
jecxz
stos
dec
push
aaa
add
mov
fcomi
cmpsl
sub
cli
sahf
xchg
mov
insl
imul
ret
xor
xor
fcmovu
rcr
push
jmp
jmp
mov
sbbb
addr16
in
mov
test
mov
clc
jp
les
cmp
sbb
loope
mov
and
jle
mov
scas
fistl
sub
push
dec
push
call
pop
arpl
add
aam
bound
insl
mov
xor
imul
test
or
cwtl
jle
sahf
adc
jmp
lods
inc
in
inc
aad
fwait
out
jge
push
push
xchg
imul
sub
pop
rcr
lahf
adc
mov
adc
outsb
xor
xor
dec
mov
dec
jl
data16
push
pop
mov
ja
inc
and
stos
fistpl
enter
fildl
mov
jecxz
insb
in
fistl
in
or
pop
fldt
mov
inc
sub
cmp
pusha
jmp
mov
mov
add
rcrb
jo
pop
cmpsb
sbb
test
mov
mov
lods
gs
push
insl
test
push
and
add
insl
xchg
outsl
and
adc
mov
gs
mov
lret
lret
adc
add
arpl
jnp
or
or
test
shll
dec
xchg
push
pop
push
dec
sahf
sub
sub
das
jg
mov
push
lret
bound
mov
jle
movsl
lods
push
sub
int
clc
adc
pop
mov
rclb
pop
jp
sti
lret
shll
aaa
sysret
sbb
mov
adc
jne
in
gs
rol
xor
mull
dec
popf
cs
lock
push
adc
fdivs
fstpl
iret
repnz
repnz
mov
scas
push
mov
cltd
mov
mov
popf
push
test
mov
out
adc
push
fisubl
sbb
ss
adc
ret
mov
inc
test
or
sub
inc
xchg
fildl
jno
test
leave
mov
sub
loope
mov
xchg
cmp
pop
lret
mov
into
aam
fdivs
ss
popa
movzbl
pop
xchg
fdivrs
andl
or
pop
mov
or
fnsave
dec
mov
lcall
pop
test
cmc
jno
adc
mov
ss
cmp
dec
adc
mov
ja
in
sti
pop
ficompl
mov
shl
lods
fstpl
pop
inc
test
push
jge
pop
add
mov
xor
and
mov
fidivrl
cmp
jae
fcmovnbe
mov
out
xchg
iret
lods
ljmp
cmp
cs
mov
mov
in
or
or
fistps
in
mov
xor
outsb
sub
push
lods
lods
jbe
and
test
xchg
mov
or
nop
jmp
xor
arpl
test
xor
inc
mov
aad
dec
scas
xchg
insb
mov
dec
lret
push
stos
lcall
mov
xor
pop
into
push
insb
test
mov
sbb
dec
subb
push
ret
stos
imul
push
mov
sub
cwtl
cmc
mov
movb
and
add
fstpt
pop
sbb
ret
inc
xor
cmp
xor
xor
je
jp
sub
push
gs
stc
cwtl
xchg
mov
pop
cmp
xchg
and
adcl
arpl
in
or
movsl
enter
pop
fstpt
pop
xor
or
mov
scas
rorl
sti
push
pushf
lds
sbbl
aam
xlat
ficompl
pop
stc
mov
push
mov
jae
xor
shll
cli
xchg
push
insl
sarl
sti
es
push
mov
inc
mov
sbb
mov
push
mov
lret
fsubrl
jno
ret
jge
insb
fdivrl
xorb
pop
andl
jae
push
in
add
aaa
mov
jno
jle
addr16
je
lds
dec
aam
int
push
insb
test
imul
lods
jmp
sub
mov
or
sbb
add
cmpsl
test
subb
mov
stos
pop
mov
jecxz
in
mov
push
push
mov
push
jge
out
inc
or
mov
jge
fisubrl
shl
sbb
adc
dec
inc
insl
popa
sub
stos
push
pop
das
xchg
push
ss
push
ret
mov
stos
outsb
insb
sbb
idivb
rcll
mov
dec
rorb
mov
fsubrs
mov
jge
sbb
scas
in
mov
and
hlt
imul
outsb
pushf
or
and
sub
mov
dec
pop
bound
insl
pop
and
aam
andl
inc
inc
jbe
lods
adc
arpl
or
mov
mov
data16
scas
xchg
push
mov
aaa
cwtl
xlat
lcall
sbb
cmpsl
sbb
fisubrl
dec
test
mov
mov
out
cwtl
sub
or
insl
mov
sbb
push
pusha
test
les
movsl
inc
cwtl
xchg
sbb
movsl
rorb
or
adc
fwait
insb
xor
mov
lret
imul
mov
sbb
outsb
cltd
xor
fcmovnbe
pushf
mov
push
out
mov
inc
lods
fsubrl
cwtl
push
inc
pop
shll
pop
test
lods
mov
in
aad
movsb
push
arpl
and
lea
add
add
test
rcrb
cmp
mov
push
lods
je
push
mov
fwait
lods
fcoms
and
or
sahf
sti
push
dec
mov
fldl
mov
inc
lock
jle
push
js
mov
or
inc
mov
dec
sub
insl
cmp
sahf
fwait
pop
in
push
push
mov
jbe
subl
aam
ds
pop
clc
pop
pop
mov
mov
sbb
push
std
mov
int
xlat
cld
mov
sub
cmp
insl
imul
mov
push
lods
imul
xchg
adc
sub
fistl
jno
sbb
jge
fildl
pop
ss
gs
andb
fimuls
add
jbe
test
jmp
adc
sarb
lock
fcmovnb
cmp
lods
pop
sbb
mov
dec
pop
dec
lea
sbb
mov
jecxz
push
xchg
and
pop
adc
and
xchg
add
das
subl
jmp
lods
lods
lods
pop
mov
inc
jbe
inc
mov
push
fcomp
cmp
sub
push
mov
mov
inc
sub
sti
inc
mov
xor
adc
lods
lea
mov
or
mov
mov
cmp
mov
sti
mov
inc
int3
or
test
sub
mov
ss
jno
mov
aas
hlt
fs
rolb
sub
pop
or
in
sub
add
scas
fsubr
mov
mov
mov
sarl
sub
sbb
aam
das
sbb
js
mov
repz
lahf
and
push
jne
pop
or
mov
fcmovu
push
fnsave
loope
sbb
pop
jmp
push
in
or
jg
ja
mov
test
aas
pop
adc
sbb
rcrl
push
das
mov
mov
pop
andl
mov
lods
add
xchg
ja
fidivrl
lcall
ss
jmp
insl
in
sub
add
aad
popf
or
or
out
adc
ret
dec
sbb
shl
xchg
and
mov
shll
xor
push
lret
mov
pop
bound
out
insl
test
fnsave
sub
pushf
inc
mov
or
add
outsb
or
adc
aam
or
sbb
push
ja
xchg
insb
lahf
xchg
sbb
mov
sbb
loop
xor
lret
jp
orb
subl
inc
popa
fldt
jl
add
fcomi
jge
mov
sub
mov
xchg
mov
add
lret
popf
pushf
fiadds
add
insl
add
test
popa
pop
jne
ljmp
in
inc
pop
mov
test
in
sbb
insb
insb
cmpsl
cmpl
adc
inc
mov
shrl
or
fldt
lock
jge
ret
fcmovnb
dec
push
in
jl
inc
push
fwait
dec
ret
mov
sahf
sub
push
xor
lods
or
ret
or
xchg
cmp
or
mov
popa
xchg
insl
or
inc
jge
cwtl
in
scas
push
adc
xor
mov
cltd
insl
sbb
fldcw
mov
jmp
xchg
mov
popa
imul
fldt
test
incb
insl
mov
movsl
gs
daa
out
ss
ret
pop
dec
lea
push
fisttpl
sahf
mov
pop
test
sbbl
push
stos
inc
jecxz
push
inc
aas
dec
daa
rorb
fisubrl
and
ret
fnsave
lods
mov
mov
enter
jle
pop
push
insb
insb
insb
xor
sbb
sbb
add
rcrb
pop
mov
dec
dec
mov
sub
mov
repnz
sbb
dec
insl
pop
pop
fimull
xlat
jbe
pop
push
insl
inc
fcmovu
roll
in
repnz
inc
fcomp
mov
jmp
cmpb
mov
pop
js,pn
mov
xor
xor
jp
sub
popa
adc
jge
les
inc
mov
mov
aam
sbb
adc
jecxz
iret
lea
leave
shrl
imul
adc
ret
and
test
pop
fnstsw
rclb
push
mov
stos
mov
sbbb
or
inc
cltd
in
pop
mov
jg
outsb
pop
test
insl
push
arpl
sbb
insl
sbb
clc
sar
and
je
sbb
flds
lahf
loopne
outsb
or
das
adc
rcr
fnstsw
push
push
or
jle
push
mov
inc
fnsave
cmp
mov
pusha
or
sbb
stos
or
cmp
push
push
mov
das
push
lahf
sub
mov
rclb
pop
push
cmp
sbb
mov
pop
cltd
xchg
pop
sbb
in
add
cwtl
fmuls
les
shlb
lret
paddq
fstp
test
mov
cs
mov
jmp
dec
mov
sub
pushf
ja
push
aaa
insl
mov
push
nop
jbe
xorl
cmp
adc
mov
aad
mov
mov
and
add
fcompl
mov
lods
xor
add
lret
push
xor
fidivl
push
or
mov
scas
fildl
fwait
mov
ds
mov
rolb
jne
fsubrl
pop
fidivl
stc
or
jl
popa
fsts
fisubrs
mov
and
inc
fisubl
inc
pop
cmp
push
je
xchg
or
dec
insb
aaa
fmuls
cmpsb
fmuls
fdivs
lret
clc
rcll
jle
lahf
mov
add
lods
mov
clc
jbe
shlb
shrl
movsb
pop
fwait
test
mov
lods
lock
fdivl
outsb
xchg
add
sub
rclb
cs
iret
movsb
ret
ret
stc
cmpsl
inc
or
adc
out
or
mov
mov
mov
jmp
or
bound
mov
sbb
rolb
jb
outsb
push
sahf
fadds
outsb
jge
lahf
pop
xchg
test
sbb
mov
or
repnz
iret
add
add
mov
inc
test
popa
movsl
lods
rorb
jb
inc
and
mov
imul
mov
fnstenv
movb
mov
add
outsl
movsl
add
sbb
sbb
or
xchg
lret
sbb
mov
and
pop
pop
adc
sbb
mov
pop
data16
enter
movsl
aaa
ja
push
aam
mov
push
arpl
and
retw
mov
xor
sbb
sbb
test
inc
outsl
jmp
cs
popf
mov
mov
adc
xlat
imul
sbbb
mov
shll
mov
cmc
je
or
xchg
mov
jbe
xchg
jg
inc
movsb
mov
pop
sbb
push
sbb
dec
add
outsl
jno
outsb
pop
mov
dec
sbb
fistpl
lock
jge
cltd
and
mov
jbe
shrb
xlat
pop
xchg
fwait
roll
push
ja
sbb
mov
jae
loope
mov
clc
pop
loop
pop
mov
in
mov
jnp
insb
sub
mov
insb
sbb
mov
stc
lds
dec
mov
push
pop
loope
mov
shrl
test
mov
fwait
sub
fimull
das
jno
icebp
xchg
pop
xor
ficompl
mov
cli
adc
sbb
sub
lahf
dec
jne
hlt
sub
bound
outsb
xchg
sbb
cli
or
outsl
push
sbb
mov
mov
adc
mov
xchg
mov
lcall
pop
aas
cmp
pop
push
cmp
lea
sub
xor
imul
mov
stos
sub
mov
roll
jne
sahf
rorl
sbb
mov
sbb
ds
stos
xor
and
sbb
rol
push
jge
addr16
push
es
in
ret
adc
sub
pop
out
and
jne
sbb
pop
mov
test
mov
sub
in
and
xchg
dec
sahf
xor
adc
fwait
mov
mov
mov
inc
subl
lahf
adc
ret
fildl
ljmp
aas
outsl
shl
mov
inc
lods
in
fisttpll
xchg
mov
push
or
pop
jae
aad
movsb
add
adc
jae
jl
insl
es
bound
dec
jg
mov
inc
inc
sub
pop
pop
sbb
insl
mov
or
cmp
into
pushf
sti
fcmovnb
mov
sahf
jmp
inc
xchg
cs
mov
jge
jbe
sbb
cli
sub
cmp
mov
jo
or
es
xchg
sbb
stos
mov
mov
jo
imul
dec
mov
lret
shrb
ja
mov
mov
mov
jb
test
mov
and
lods
fnsave
push
cmp
decb
jg
rolb
insb
add
sti
xchg
movsl
insl
out
sub
enter
gs
aas
js
or
sbb
ret
in
lds
mov
sbb
inc
fldt
jbe
into
pop
das
mov
shrb
aad
mov
mov
imul
push
faddl
fnstcw
xchg
mov
lret
ret
fs
fcmovnu
inc
mov
adc
cmp
ret
out
push
icebp
jne
or
daa
sub
lea
push
push
sbb
in
mov
adc
ss
dec
add
shl
mov
mov
ret
mov
jnp
xor
insl
mov
cmp
loopne
pop
fists
lahf
jecxz
xor
lock
or
cmp
std
mov
call
stc
bnd
mov
and
mov
in
push
mov
sbb
pop
outsb
lea
jmp
cmp
pop
repnz
popf
inc
data16
or
cld
xchg
movsl
insl
mov
lods
push
pop
mov
add
test
pop
mov
mov
insl
pusha
das
dec
inc
dec
jno
pop
push
stos
inc
insl
fistl
jge
dec
mov
imul
neg
mov
sub
mov
dec
xchg
mov
pop
fcompl
rolb
add
inc
mov
pop
enter
mov
stc
sbb
insl
mov
sub
lods
dec
dec
clc
sti
cs
adc
sahf
xor
stc
cltd
pop
ss
lods
mov
mov
shlb
mov
mov
jbe
es
xor
js
dec
pop
fcomps
mov
call
fdivrl
andb
jne
dec
aaa
lahf
mov
xchg
cmc
aam
lods
dec
sbb
imul
lret
push
jmp
sbb
inc
enter
push
xchg
sbb
popa
pop
stos
decb
mov
cmp
lahf
mov
xchg
cmp
cmp
or
ss
pop
xor
push
pop
scas
pop
es
shl
lods
jo
and
mov
sub
mov
pop
push
flds
cmp
insl
sub
add
sahf
mov
insb
mov
enter
mov
or
mov
cmp
sbb
aas
aam
sub
push
xchg
shlb
xchg
push
push
out
fwait
int3
jecxz
cmpsb
mov
adc
jno
ds
lods
insl
sbb
mov
dec
into
sbb
fmuls
mov
data16
addr16
rolb
pop
pop
and
orb
outsb
pop
pop
mov
xchg
inc
fnsave
xor
outsb
in
mov
mov
gs
add
jecxz,pn
push
sub
fcmovnbe
outsb
cmpsl
ljmp
pop
mov
ficoml
shlb
popf
cmc
pop
test
push
lea
jo
mov
adc
add
shrl
stos
mov
xchg
ficoml
adc
loope
mov
jmp
rcr
imul
lahf
fs
push
xchg
ja
test
cs
jmp
and
fildll
push
mov
dec
pmullw
push
pop
fcomp
jbe
sbb
or
stos
jo
ss
aad
sti
mov
shr
sub
jns
fwait
xchg
scas
jl
jmp
imul
loop
popa
fldt
adc
xchg
jae
ficoml
sbb
daa
add
or
mov
pop
sub
or
ss
xchg
into
aam
cmp
insb
adc
mov
sub
mov
lods
cwtl
mov
push
mov
pop
lods
sub
jle
pusha
sbb
add
movsb
je,pn
adc
add
test
xchg
cmpsl
imul
fcmovnbe
xor
sbb
and
sub
shl
mov
popa
imul
testl
imul
and
insl
test
jae
test
sub
pop
push
popa
push
and
mov
add
or
add
cmp
pop
inc
or
jle
lcall
fisttpll
jo
fcoms
xor
insl
fisttpl
adc
adc
jae
pusha
push
les
pop
or
pop
fisubrl
std
pop
dec
or
movsb
and
popa
lods
xor
dec
mov
mov
test
pop
xor
das
inc
push
pushf
mov
imul
aam
movsb
mov
pop
fidivl
and
les
insb
or
push
sub
insl
mov
clc
jp
add
pop
push
mov
push
mov
adc
cli
scas
jl
imul
jbe
jno
sbb
pop
push
enter
add
movsl
mov
dec
cli
sbb
insl
adc
stc
push
xor
cmp
lods
push
shrl
cmpsl
push
lea
cli
or
pop
mov
ds
popa
hlt
adc
test
stos
xchg
mov
xchg
sbb
imul
imul
rolb
mov
cmp
push
fiaddl
aad
xor
adc
sub
pop
push
add
pop
push
lock
jbe
mov
ret
xchg
or
fisubl
mov
push
mov
sub
fcompl
pop
pop
fs
jns
push
or
ret
or
xor
add
outsb
fcmovnbe
ret
jge
mov
mov
mov
fiaddl
in
sbb
aad
pop
mov
mov
bound
and
cwtl
in
jge
lods
insl
push
int
mov
fsubs
ljmp
or
pop
lds
pop
test
icebp
mov
loope
push
mov
inc
sub
push
and
jbe
mov
out
push
ss
enter
adcb
roll
lret
imul
scas
pop
int
or
ds
sbb
out
insl
pop
stos
inc
adc
into
lds
sub
inc
insl
or
pop
jl
push
in
jne
jg
cs
pop
mov
xor
out
mov
mov
jne
xor
pop
out
nop
sbb
int3
pop
sub
imul
lods
mov
mov
gs
push
in
or
xor
pop
negl
sub
fldt
hlt
fisubrs
movsl
sub
dec
mov
cmc
sarb
and
jae
push
dec
in
mov
shll
dec
sub
movsl
pop
xchg
stos
sub
addl
mov
das
and
or
stos
je
fcoms
inc
adc
fidivs
pop
adc
popa
xchg
cli
xchg
xlat
inc
lds
ss
sahf
les
movb
mov
lea
adc
sbb
mov
mov
je
xor
cs
and
mov
dec
dec
aaa
pushf
mov
jae
add
les
push
xor
ss
shr
decl
arpl
push
cmpsb
lods
popa
push
loop
insl
pop
jecxz
loopne
and
push
imul
and
and
sub
or
cmc
add
pop
push
mov
insl
xor
ds
sbb
das
sub
fstpt
push
addb
sbb
sub
scas
push
pushf
sub
xchg
dec
mov
pop
hlt
cmp
lret
outsb
sub
pop
adc
movsb
cmp
cmc
lods
and
or
mov
pop
mov
jnp
iret
add
push
push
jo
push
in
fisubl
mov
mov
jo
and
cmp
xchg
ljmp
sbb
in
add
inc
pop
lds
cli
mov
in
mov
mov
ljmp
arpl
ljmp
stos
fwait
or
pop
adc
lods
test
test
push
inc
xchg
aam
push
pop
mov
movsl
xchg
cmp
dec
xlat
push
rorb
inc
xorl
loop
pop
test
and
imul
sbb
sbb
insl
imul
pop
and
ror
shlb
movsb
sti
xor
outsl
insb
add
std
outsl
or
lods
ficomps
cs
frstor
bound
pusha
fidivrl
rorl
cmp
jle
cli
repnz
insb
test
adc
dec
add
mov
pusha
in
mov
push
inc
or
in
mov
lock
enter
imul
push
xor
insl
xchg
jg
add
das
in
outsb
pop
pop
mov
mov
sub
aam
and
in
mov
lds
arpl
push
mov
lea
adc
add
insl
stc
mov
pop
std
jae
push
push
clc
or
loope
mov
jno
mov
add
dec
fidivrl
lods
repz
mov
add
insl
scas
xchg
jmp
xchg
sbb
ds
outsb
out
xchg
ss
aaa
lahf
push
jl
sbb
cs
adc
cli
pop
xor
mov
xchg
mov
cmp
loopne
xchg
jnp
pop
mov
pop
mov
push
mov
add
in
mov
sbb
add
sbb
in
stos
mov
mov
fistl
add
fcmovnu
pop
xchg
je
in
in
mov
add
sub
rclb
push
loop
xor
push
roll
or
fildl
ja
cmp
mov
push
jp
pop
pop
pop
xchg
push
mov
xor
lods
mov
cmp
outsb
sarb
push
fiaddl
push
xor
jns
ret
mov
hlt
inc
dec
movsb
dec
jae
sub
ss
lods
sahf
pop
sbb
push
mov
jle
mov
bound
xchg
push
sbb
mov
xabort
std
out
cwtl
push
push
or
cs
jb
and
mov
pop
or
sub
call
je
or
sub
loopne
test
sbb
fsubrs
pop
imul
mov
ds
test
clc
mov
adc
or
mov
sbb
sub
adc
nop
scas
or
inc
out
push
xchg
mov
push
stos
outsb
in
xchg
daa
es
mov
mov
lds
inc
and
add
outsb
push
sbb
dec
adc
cmp
mov
adc
rclb
lea
sbb
mov
cmp
mov
mov
shr
xchg
ficompl
fiaddl
jnp
cmpsb
mov
arpl
mov
in
nop
push
into
insl
add
mov
insb
or
insb
mov
push
mov
sub
adc
jno
push
pop
sbb
mov
cmp
and
ss
ret
in
into
sbb
fmuls
xchg
push
mov
mov
test
adc
sub
mov
fcmovb
add
sub
cli
pop
insl
xchg
pop
sti
lea
push
pop
push
xor
insl
inc
mov
pop
fimuls
fidivrl
negb
jno
stos
cmp
bound
fndisi(8087
pop
fcomi
push
leave
add
jmp
and
insb
andb
sbb
rorb
cmpsl
in
call
cmp
ja
cmpsl
and
inc
pop
cmc
and
mov
pop
add
jno
leave
adc
push
imul
adc
add
cmp
pop
fcoms
fimull
cmp
push
mov
test
mov
insl
or
bound
sahf
pop
pop
bound
push
mov
adcb
xchg
or
push
outsb
rorl
push
stos
repz
jecxz
add
in
cld
fistps
lea
cmc
cmp
pop
dec
push
jecxz
mov
mov
loope
add
out
aam
je
cmpsb
xchg
rcll
mov
mov
aad
push
pop
pop
adc
sbb
cli
into
ds
in
jo
pusha
add
xchg
sbb
sbbl
mov
mov
jmp
xor
lds
pop
sbb
pop
mov
lea
inc
aam
lea
shlb
idivl
jo
sub
ss
mov
aad
mov
insl
imul
lret
repnz
lock
add
mov
push
movsl
mov
push
aas
pop
fdivs
fisubl
sbb
ret
sbb
and
test
scas
pop
cmp
lcall
mov
add
imul
fistps
or
adc
jp
inc
mov
outsl
outsb
dec
sbb
das
outsb
aam
pop
call
mov
cmp
stos
lea
nop
add
adc
insb
xor
data16
gs
ret
inc
add
outsb
or
enter
push
dec
test
xor
test
in
out
or
and
fcomp
dec
mov
mov
xchg
mov
pop
test
xchg
mov
or
lds
xchg
inc
cltd
jmp
js
std
add
test
ret
push
es
test
adc
mov
jp
sti
mov
addr16
cmp
pop
fsubrs
push
cmp
stos
push
adc
cs
in
mov
push
dec
xchg
jns
inc
ficoms
js
pop
pop
sub
cli
sarb
shlb
popa
pop
bound
loopne
mov
mov
insl
imul
mov
sub
sarb
push
push
sar
mov
lods
jp
fadd
mov
push
xchg
test
add
sbb
pop
fidivl
sbb
mov
mov
test
or
daa
mov
test
xor
hlt
icebp
test
push
push
mov
stos
cwtl
xor
mov
or
add
pusha
cld
shrl
outsb
push
adc
push
mov
pop
fdivrs
jb
pop
mov
pop
pop
jbe
jne
mov
mov
add
imul
aad
loope
mov
aam
jbe
and
movb
mov
mov
jecxz
pop
insl
pop
xchg
pusha
jbe
lds
xchg
push
mov
stos
adc
dec
or
xchg
lea
loop
mov
inc
shr
out
jb
adc
outsb
gs
out
stos
mov
insl
cltd
leave
mov
sbb
fmul
jnp
pop
xor
mov
insb
pop
aam
das
add
shlb
cmc
and
imul
xor
xchg
mov
and
das
icebp
mov
sbb
pop
mov
jecxz
mov
add
nop
icebp
fdivs
mov
or
arpl
inc
push
sub
enter
inc
outsb
sub
add
and
cmp
fucomip
add
xchg
adc
add
fcmovu
repnz
xchg
xchg
fisttpl
jmp
pop
sub
adc
xor
outsb
insl
sti
and
mov
insl
mov
mov
es
push
mov
sub
mov
cld
dec
mov
adc
inc
jne
pop
push
mov
addl
fbstp
jl
les
scas
lcall
sub
xchg
jns
fsubrl
and
shl
sbb
mov
test
outsb
movsl
inc
xchg
dec
fmul
or
mov
jb
int
insl
sub
mov
repnz
test
inc
fstpt
sub
imul
push
gs
jp
movsl
dec
test
xchg
insl
hlt
mov
aaa
pop
push
cli
addb
sub
arpl
xor
movb
cmp
xchg
push
xor
cwtl
or
fchs
ret
repz
aad
cmpsl
mov
ja
repz
jo
fsubrs
mov
xor
mov
adc
cwtl
gs
jl
mov
lods
aaa
add
mov
mov
dec
add
daa
inc
sbb
xchg
push
mov
outsb
sbb
inc
out
fwait
int3
push
fisubrl
fwait
ret
aaa
stos
sbbl
rcrl
or
jnp
sub
mov
fmuls
pop
or
shrl
inc
test
fldt
pop
mov
and
lock
mov
mov
test
loopne
pop
push
in
mov
and
sti
push
sub
jmp
pop
jno
inc
cmpsb
pop
repnz
movsl
sahf
cmc
lds
cmp
insl
sub
fcoms
cmp
outsb
mov
dec
ret
dec
stos
push
add
inc
cwtl
adc
ret
sbb
mov
sbb
lds
cmp
sub
scas
push
mov
outsb
xor
add
push
mov
adc
cwtl
daa
mov
jmp
js
lret
sub
cmp
add
lret
pushf
outsb
sub
push
jne
sti
mov
gs
or
fisubrs
pop
out
outsb
cmp
insb
or
int
popa
je
mov
fisubrl
cmc
xchg
idivl
cs
test
push
push
fsqrt
pop
xchg
sbb
sub
imul
sub
shlb
push
jbe
das
or
shrl
ret
ret
stos
dec
fldenv
in
mov
jbe
fisttpl
dec
push
mov
addb
xchg
rclb
fsubl
sbb
fcmovnbe
mov
pop
subb
or
mov
sbb
leave
xchg
cs
jecxz
cmp
mov
mov
or
lods
sbb
xchg
rorl
push
outsb
movsl
lods
or
hlt
jno
out
sbb
sub
leave
jecxz
inc
fcmovnu
pop
fdivrs
mov
mov
lods
pop
lods
inc
repnz
mov
push
fsubr
sub
and
lods
insl
sbb
adc
fmuls
ret
aaa
pop
cs
add
xchg
loop
jg
mov
insl
dec
dec
push
adcl
push
xchg
mov
movsb
jecxz
jns,pt
inc
imul
movsl
push
aas
and
inc
or
pop
xchg
aad
mov
sti
cli
sub
scas
mov
cmc
adc
les
mov
dec
mov
fsubrl
insl
pop
lahf
js
cmp
lods
stos
outsb
insb
ljmp
push
test
cs
mov
outsl
jo
mov
cmovno
dec
into
sub
les
jne
sbb
inc
imul
fcmovnu
xchg
dec
pop
sub
inc
int3
inc
xorl
jp
imul
add
or
pop
jo
imul
mov
push
push
movsl
ret
cmpsb
mov
pop
add
insl
xchg
mov
in
jle
mov
incl
pop
lds
mov
mov
pop
mov
cmpb
xchg
push
mov
das
int3
out
cld
push
push
pop
push
call
push
mov
cld
mov
insl
pop
add
add
mov
ds
sub
imul
sar
or
clc
ss
subb
aas
mov
leave
lret
fwait
pop
jnp
sbb
jo
or
std
sub
add
out
pop
push
fildl
fisttpll
sbb
ret
push
pop
jg
pop
xor
mov
mov
scas
aad
aam
mov
addb
jg
add
insb
das
inc
lods
cmp
sbb
pop
mov
jae
dec
mov
insb
stos
outsb
jl
xchg
fsub
sti
xchg
mov
jmp
mov
pop
mov
aas
mov
das
mov
pop
mov
ret
repnz
xor
xlat
movsb
sub
mov
sub
ret
mov
adc
enter
add
aam
cs
pop
ja
inc
cwtl
rorl
lods
add
mov
inc
ror
push
bound
push
addl
outsb
mov
fimull
sarb
sub
xor
lods
inc
mov
vphadduwq
testb
popf
push
xchg
cmp
push
sub
adc
insl
mov
and
push
push
in
push
mov
lock
adc
fs
add
push
insl
insb
sub
pop
subb
mov
cmp
xor
and
dec
fcompl
aas
jns
repnz
push
jae
ret
mov
mov
push
arpl
ficoml
iret
adc
mov
aam
pop
push
cli
rclb
jg
fwait
push
stc
mov
call
aaa
rolb
jo
and
leave
das
push
stos
fistl
subb
add
inc
dec
add
cvtpi2ps
call
sbb
xlat
or
fisubs
rclb
lds
xchg
inc
and
jbe
add
enter
mov
and
ja
in
push
imul
or
sub
pop
mov
inc
fwait
loopne
add
push
cmp
sahf
cmpsb
sti
dec
insb
je
jno
test
mov
dec
fistl
jle
mov
popa
notl
fs
loope
lods
mov
stos
jp
je
jae
mov
or
and
push
adcl
inc
xor
outsb
sbb
fildl
bound
mov
orb
inc
lret
inc
cmpsl
rol
jo
mov
inc
fwait
es
iret
shlb
jb
push
add
fcmovnbe
in
popa
imul
xchg
mov
push
mov
scas
rcr
inc
imul
cmc
or
pop
movsl
add
insl
das
fs
cwtl
in
mov
insl
imul
adc
xchg
mov
push
gs
xchg
mov
stos
andb
leave
fistl
mov
loope
inc
adc
test
xor
aam
out
pop
adc
add
shrl
mov
xor
insl
mov
ficoml
test
addl
mov
mov
inc
cmpsb
popa
inc
pop
push
pop
mov
add
mov
pop
sub
icebp
xchg
mov
pop
and
leavew
dec
sbb
sbb
mov
pushf
mov
das
insl
fistpl
mov
mov
add
add
movsl
or
jge
inc
mov
fildl
in
ret
add
loopne
stos
clc
add
into
add
or
adc
mov
mov
test
andl
into
cwtl
insl
fcmovnb
insl
xchg
mov
xor
push
xchg
mov
mov
mov
in
jg
add
mov
push
inc
add
dec
add
lods
lds
push
mov
adc
rorb
pop
popa
fldt
cmp
in
loop
lea
stos
mov
addr16
pop
sbb
fisubrl
cld
jle
mov
add
sub
fidivl
cltd
aam
or
push
inc
push
scas
pop
pop
mov
or
xchg
hlt
sub
jge
call
push
jns
pop
lds
lock
xor
insb
pop
cmp
add
insl
addl
mov
scas
mov
rcll
pop
testb
fistl
mov
mov
or
push
fldl
push
mov
cmc
add
and
mov
inc
icebp
inc
jecxz
sub
addr16
fcmovnbe
mov
sbb
test
std
sbbb
mov
sub
jp
xchg
in
push
jge
and
inc
xor
movsl
and
pop
lea
pusha
mov
or
aad
ss
pop
negb
mov
sbb
and
jmp
ret
xchg
sarl
loope
add
mov
std
cmp
repnz
mov
or
aad
push
mov
mov
outsb
jge
fdivrs
mov
lea
sbb
inc
mov
mov
ljmp
mov
inc
mov
pop
inc
inc
push
mov
shl
sbbb
sbb
jno
stc
add
pop
sub
imul
outsb
in
inc
mov
je
fwait
gs
mov
mov
dec
es
sti
sub
fldenv
sub
pop
test
and
push
fisttpl
cmp
push
das
gs
lcall
enter
sub
std
mov
xor
pop
lea
jnp
rolb
jecxz
dec
mov
fisubrl
sub
push
lock
das
xor
aad
ret
ja
lret
jp
sub
mov
sbb
mov
mov
into
add
icebp
mov
push
jno
fcomi
sahf
test
aas
mov
push
fistpl
mov
add
lds
rcll
insl
pop
mov
or
mov
orb
ficompl
lods
mov
sbb
movsb
pop
ljmp
cmp
pushf
xor
into
fwait
jne
push
lods
subl
jmp
lea
fucom
push
shrb
mov
inc
inc
cmp
fnsave
mov
sub
outsl
std
inc
push
or
fnsave
cmpsl
out
or
fdivs
fdivr
stos
sub
das
cmp
xchg
jns
repnz
push
sub
or
jno
add
ret
subl
or
push
pop
fcmovnbe
adc
xor
mov
fnstsw
ljmp
stos
adc
inc
shll
xlat
addb
test
push
inc
je
aam
dec
inc
scas
ret
push
cmpsb
jb
pop
inc
sub
mov
jb
imul
mov
bound
cmp
icebp
popa
add
xchg
cmp
aad
jp
clc
loope
mov
inc
sti
xor
repz
cmp
mov
mov
push
mov
lods
push
push
xor
fdivs
sti
mov
xchg
mov
cmp
mov
or
into
and
xchg
lods
fnsave
je
ds
ss
sub
cld
inc
pusha
ljmp
push
sub
fmuls
iret
adc
mov
or
xor
xor
jne
scas
scas
bound
pop
bound
mov
mov
sub
inc
imul
pop
adc
in
push
mov
ret
rolb
fmul
lods
popa
inc
cmp
add
aas
add
xlat
ficoml
subb
and
outsb
add
push
pop
push
mov
pop
inc
xor
jmp
jg
aam
out
ds
add
add
scas
add
jbe
xchg
mov
add
pop
nop
inc
mov
mov
dec
push
xchg
mov
insb
mov
sub
xchg
adcl
xor
add
lds
mov
mov
rcll
pop
fcoms
sub
pop
adc
and
fidivl
mov
xchg
andb
std
add
mov
lret
arpl
cli
add
pop
push
xchg
adc
dec
inc
dec
mov
popf
add
push
into
daa
xlat
repnz
mov
test
out
insl
pop
jo
xchg
mov
insl
cmp
aam
ja
pop
mov
cwtl
xchg
adc
sub
pop
inc
fdivrp
mov
stos
mov
shll
jbe
leave
fistpll
mov
cs
lods
es
gs
xchg
in
inc
jmp
loope
jae
add
and
out
xor
pop
js
out
lea
dec
push
sub
cwtl
xchg
or
mov
add
inc
mov
push
ret
push
cmc
jg
fimull
clc
cmp
sub
popa
popa
pop
pop
push
inc
rorl
pop
pop
fisubrl
out
movsl
pop
loope
mov
fiaddl
int
das
sub
mov
movsl
jle
push
jno
insl
sbb
repz
sbb
fcmovne
xchg
call
sbb
fadds
pop
push
xchg
rolb
aad
dec
mov
xchg
dec
in
imul
jg
shrl
xchg
loope
pop
inc
add
lret
pop
leave
movsb
das
add
mov
mov
or
vpmacssww
cmp
mov
rclb
push
scas
xchg
stos
fwait
mov
cs
popa
out
je
ret
pop
mov
fildl
mov
jge
insl
insb
fcmovnbe
rolb
mov
movsl
inc
sbb
sbb
adc
sbb
xchg
aaa
hlt
push
xor
movsl
in
ret
fmuls
mov
mov
aam
jns
test
inc
out
ja
lea
mov
lock
test
mov
insl
mov
fsubrl
lods
lea
jnp
popf
push
mov
lret
mov
fsts
incb
nop
stos
insl
jmp
push
aas
stos
add
add
mov
jl
cmpsb
add
adc
jle
adc
aad
ret
mov
loopne
ss
insl
jo
or
popf
sub
mov
fistl
gs
into
outsl
inc
mov
sbb
aad
in
and
loopne
pop
fmuls
imul
cld
imul
mov
lret
popf
inc
sub
mov
imul
scas
les
dec
add
jge
mov
mov
dec
jmp
pusha
orl
lods
add
add
dec
fisubrl
add
pop
mov
mov
and
test
dec
jp
jecxz
adc
mov
push
xchg
or
in
pop
lahf
das
jl
shlb
pop
rcr
mov
mov
popa
pushf
xor
jo
shrb
fsubrs
xchg
xchg
test
test
xchg
dec
pop
jns
or
ja
add
add
insl
sub
xchg
rorl
push
pop
ss
fisubl
movsb
cmp
js
fildl
mov
mov
insl
pop
jbe
stos
out
pop
sbb
mov
inc
es
adc
inc
adc
xchg
mov
in
mov
jecxz
xor
inc
inc
popa
mov
xchg
xchg
add
ss
cmpsl
cmpsb
adc
sahf
cmp
fidivl
insl
fbld
push
in
mov
in
outsb
loopne
pop
fildl
adc
xor
movsl
cwtl
adc
push
mov
push
cmp
fisubl
shll
sbb
mov
mov
fcmovnbe
inc
fs
jae
lret
add
xor
lret
frstor
adc
mov
push
mov
roll
shlb
fisubs
mov
mov
mov
jmp
mov
stos
mov
dec
ret
cwtl
mov
mov
icebp
inc
lcall
adc
sub
mov
dec
jnp
cmpsl
or
pusha
add
xor
mov
xchg
jle
push
std
fildl
ja
adc
and
icebp
insl
mov
or
and
mov
clc
xchg
dec
push
sub
xor
sub
push
mov
pop
xchg
pop
cmp
jg
push
fstpl
pop
lods
ds
std
inc
dec
sbb
movsb
or
shl
pop
mov
mov
je
push
xchg
cli
hlt
mov
sub
push
adc
out
outsl
imul
xchg
jg
popa
shl
mov
in
in
add
test
sbb
int
sub
xchg
push
jns
adc
jmp
lods
lds
inc
leave
fidivrl
pop
push
dec
pop
push
dec
sti
and
or
add
filds
or
aaa
sbb
xchg
cmp
cs
pop
inc
sbbb
lods
mov
push
sbb
adc
hlt
fadds
cmp
dec
fildl
pop
les
xchg
cmp
dec
mov
lods
mov
add
sahf
cmp
xor
js
fsubrs
jg
cs
or
std
push
loop
fnsave
sbb
stos
test
add
add
lods
mov
sbb
pop
stos
loop
hlt
repz
mov
add
fmul
mov
lret
es
mov
sbb
push
in
add
xchg
xor
push
fldt
or
mov
xlat
dec
iret
aam
pop
mov
push
adc
mov
fiaddl
or
dec
pushf
sub
inc
insl
cmp
js
or
daa
inc
insl
dec
fildl
inc
adc
or
pop
mov
fistl
xchg
lret
mov
sahf
sbb
mov
mov
jmp
push
adc
std
xchg
outsb
cmpl
pop
shrb
dec
jno
sbb
jns
insb
sub
mov
pop
call
adc
push
mov
jno
adc
adc
adc
je,pn
adc
test
cmp
mov
sbb
mov
sbb
mov
mov
fnstsw
push
xor
loope
add
and
insl
popf
fnstsw
loopne
xchg
inc
in
cmp
inc
cltd
fcmovnbe
mov
mov
add
mov
jno
push
icebp
clc
repz
hlt
popa
rol
scas
movl
add
cmp
add
push
ss
inc
pop
sarl
lods
fstp
movsb
dec
sub
out
push
xchg
or
mov
in
stos
fsubrl
sub
je
enter
movsl
or
imull
xchg
outsb
insl
lea
cld
inc
mov
pop
les
mov
mov
adc
mov
fildl
adc
out
pop
inc
les
mov
mov
lods
pop
push
ret
aam
and
fmulp
decl
cmpb
dec
mov
or
insl
jmp
dec
sbb
mov
int
pop
pop
fisubrl
pop
jo
fsts
in
inc
popa
add
jl
sti
je
in
mov
test
sarl
arpl
inc
add
lods
mov
test
ljmp
xchg
mov
dec
mov
cli
divl
fstpl
add
dec
enter
add
stos
sbb
dec
sbb
sbb
mov
insl
pop
sub
fcomi
into
pop
xchg
shrl
test
daa
xchg
lods
movsl
aam
push
add
scas
inc
aam
jbe
pop
sbb
nop
jne
mov
pop
insl
rclb
gs
inc
xchg
mov
test
outsl
jns
inc
or
loopne
in
jmp
inc
mov
inc
pop
ljmp
sub
fildl
sti
jge
lds
sub
mov
push
sub
add
sbb
int
cmpsl
je
test
arpl
in
push
cmp
lret
add
push
int
faddl
jecxz
dec
and
insb
mov
fstpt
sbbl
dec
dec
xchg
mov
outsl
xchg
int3
aas
add
add
or
dec
push
pop
stos
push
mov
test
loopnew
rolb
adc
adc
jns
jecxz
cmpsb
aas
mov
add
popa
xor
push
les
sbb
lds
arpl
xchg
or
pop
fistl
mov
mov
dec
mov
insl
fidivrl
adc
adcb
lret
mov
push
push
in
mov
xor
fisubrl
sub
pop
push
mov
movsb
pop
fsubrs
mov
cltd
lds
mov
sarb
loopne
lcall
aad
jno
cmp
rol
push
loopne
sbb
cmp
in
pop
fldt
xchg
lods
mov
mov
outsb
mov
lret
lret
ljmp
pop
mov
xchg
movb
xor
or
mov
imul
mov
cmp
clc
dec
addb
fwait
orb
shlb
idivb
mov
or
cmp
sbb
adc
push
mov
cmc
push
imull
stos
mov
mov
mov
jbe
fwait
sbb
jae
insb
push
cmc
push
jge
popa
imul
stos
lods
outsb
insl
sub
jns
inc
lret
inc
cmp
mov
jle
je
pushw
pop
fstp
lods
mov
sti
mov
inc
and
sub
fdivl
pop
addl
pop
pop
jno
in
add
jmp
mov
xchg
jmp
push
inc
add
insl
stos
sub
ficoml
lods
lds
xchg
sub
std
dec
pop
mov
cmp
rclb
cli
mov
jbe
sub
push
sbb
push
mov
mov
icebp
sti
lods
test
jmp
aam
fisttpl
or
mov
xchg
mov
stos
mov
pop
pop
jo
mov
add
mov
test
sbb
push
sub
loope
jo
mov
mov
inc
push
add
add
push
xor
mulb
aas
push
mov
jbe
lret
test
jmp
cmpsb
adc
push
outsb
mov
lods
mov
fidivs
sub
shrb
or
mov
in
je
fs
and
push
sbb
or
outsl
mov
mov
push
add
mov
ficoml
fisubrs
mov
mov
inc
and
repz
sub
xor
imul
aaa
fisubrl
xor
ficoml
in
mov
sarl
dec
mov
shlb
aaa
dec
add
mull
orb
mov
sbb
cld
inc
movsb
test
andb
and
mov
fldt
xor
mov
mov
mov
and
push
mov
pop
ret
lret
pop
or
jge
ret
outsb
out
fwait
movsb
dec
mov
insl
add
andl
adc
movsb
or
adc
outsb
mov
or
mov
inc
fsubl
inc
inc
xchg
xchg
push
shlb
sub
mov
movsl
test
sbb
hlt
inc
imul
add
repnz
dec
movsl
push
xor
pop
push
push
or
aam
mov
adc
xchg
leave
push
inc
cmpsl
mov
fsubl
shlb
pop
xchg
sbb
push
mov
pop
push
insl
mov
arpl
mov
add
xchg
pop
cmpsl
sbb
insl
inc
mov
push
jmp
mov
iret
mov
imul
add
adc
lahf
sub
dec
aas
sbb
inc
inc
jo
push
adc
insl
clc
int
pop
push
pop
jg
pusha
cmp
mov
sbbl
cmp
bound
fwait
imul
js
out
fistl
aad
mov
loop
fadds
jl
xchg
js
inc
sub
adc
and
mov
xchg
mov
imull
mov
insl
push
sbb
ret
and
out
outsb
mov
rcll
lahf
stc
cmp
jbe
sbb
es
lds
lea
shlb
pusha
xor
test
mov
out
inc
sub
mov
mov
inc
inc
fdivl
lret
in
pusha
push
sbb
pop
adc
insl
das
push
inc
fisubrl
ss
xor
mov
fildll
push
pop
mull
jle
and
sub
scas
jecxz
gs
icebp
add
insl
add
mov
xchg
pushf
dec
js
mull
inc
push
fidivl
adc
call
cs
aas
jecxz
sbb
mov
mov
stc
in
daa
call
mov
sbb
ljmp
lcall
mov
cmp
inc
fcoml
lcall
inc
fcoms
mov
jmp
test
repnz
cs
lea
xchg
mov
mov
sbb
or
rcl
popa
cld
gs
add
adc
and
rcll
out
pop
mov
push
mov
push
in
repnz
inc
clc
jb
roll
pop
and
pop
dec
movsb
inc
pop
jecxz
lods
inc
mov
xchg
add
fcmovnb
lods
and
sbb
outsb
sbb
dec
fiaddl
les
popf
jmp
repnz
fistl
bound
adc
xchg
push
insb
cmc
cmp
inc
jno
outsl
dec
sahf
and
mov
mov
xchg
imul
and
mov
xchg
inc
loope
or
or
or
pop
js
in
mov
outsb
push
adc
ds
out
movsb
je
xor
pop
sbb
dec
std
outsl
pop
mov
subl
sub
movb
mov
pop
mov
cmp
sub
movsl
xor
aaa
adc
lret
lahf
insl
mov
mov
ljmp
push
push
xor
cli
cs
pcmpeqd
dec
ds
shlb
mov
lea
push
xlat
out
cltd
mov
mov
cmpsb
scas
lds
dec
and
cs
inc
cmp
xor
jbe
in
dec
and
mov
icebp
mov
ret
pop
outsl
xchg
loopne
xorb
ret
mov
outsb
in
mov
lds
ja
fwait
mov
xchg
push
out
stc
inc
movsl
fsubl
xchg
mov
aas
adc
call
add
rcr
jg
sbb
shlb
and
out
insl
subb
scas
or
sti
sub
lcall
lds
pop
in
pop
insl
mov
sub
xchg
mov
lea
stc
jecxz
sti
outsl
inc
mov
xor
and
jae
out
or
int3
mov
adc
mov
lret
arpl
je
insl
test
out
jl
das
in
subb
shl
cli
pop
inc
out
add
loop
adc
and
pop
adc
fidivl
cmpb
mov
sbb
rcrb
mov
ficoml
push
cmpb
insl
or
add
pushf
mov
shl
mov
aam
repz
sub
rcrl
insl
movsl
mov
and
stos
loopne
insl
mov
andl
orb
pop
push
das
inc
pop
stos
xchg
es
cmpsb
xlat
dec
sub
test
cli
lds
mov
jle
push
jne
or
inc
cmp
push
mov
aas
pop
pop
cmp
push
testl
insl
pop
fcoms
outsl
inc
lahf
mov
dec
inc
stc
sbb
cli
mov
ffree
push
sbb
and
mov
pop
imull
rol
jo
dec
pop
sar
cld
xchg
cmp
stos
mov
lea
and
push
inc
xor
cmp
adc
adc
outsb
fcmovnbe
push
sti
adc
sahf
mov
push
jecxz
arpl
or
add
inc
in
test
pop
pop
gs
xchg
ss
inc
xchg
ret
mov
scas
insl
mov
sarb
lcall
mov
and
xchg
mov
mov
push
xor
mov
pop
iret
pop
daa
shl
pop
test
add
pop
mov
repnz
shl
imul
push
cmp
arpl
shrb
xor
fcomp
or
and
lock
lods
pop
push
push
es
testl
leave
in
insl
add
call
sub
shrl
sub
sub
or
and
mov
jl
cwtl
fmull
jp
inc
jmp
push
aam
insl
lock
mov
fisubl
je
mov
lds
jno
lds
fwait
out
mov
inc
or
xchg
ss
cmpsb
and
ret
mov
jnp
jne
out
dec
roll
ss
pop
bound
mov
add
cwtl
dec
ja
lods
or
xchg
movb
xchg
imul
and
jmp
jbe
lret
adc
xlat
sub
mov
insl
push
dec
mov
cmpsl
stos
insl
in
add
out
mov
add
push
lcall
dec
or
pop
in
sti
test
mov
mov
sti
cli
cmpsb
cmp
pop
xor
jg
gs
gs
fs
and
xchg
mov
adc
dec
mov
push
jg,pt
sub
adc
out
cs
mov
fsubrs
sub
out
mov
roll
mov
push
pop
dec
imul
insl
insb
pop
or
inc
push
test
insb
insb
jp
adc
scas
push
call
aas
in
pop
mov
push
aam
xor
mov
mov
aaa
ljmp
mov
aaa
push
fsubrs
daa
clc
and
arpl
add
mov
mov
add
andl
lock
gs
pop
push
xor
push
sbb
popf
adc
fcmovnu
mov
dec
add
mov
dec
inc
cs
jmp
pop
sub
nop
pop
mov
les
inc
add
jno
scas
loop
inc
push
and
cmp
xchg
add
rcll
cltd
dec
hlt
lea
stos
sbb
sbb
ljmp
mov
add
in
xor
cli
pop
sub
mov
cmpsl
das
call
sub
lea
mov
xchg
jne
test
mov
sbb
sarb
rcll
lods
or
push
sbb
pushf
sahf
lods
cmp
aad
fistpll
subb
aad
sbbb
adc
lods
or
xorb
xchg
dec
aaa
mov
xchg
mov
add
test
insb
dec
cmp
dec
insl
jno
mov
insl
jecxz
mov
shlb
add
in
inc
mov
sub
imul
push
test
and
cld
jbe
add
jecxz
push
ss
ficoml
jno
mov
sbb
add
inc
scas
iret
ljmp
dec
inc
mov
inc
sbb
jmp
or
mov
lea
mov
xchg
sub
pop
add
mov
and
mov
outsb
lods
mov
mov
std
push
dec
movsb
lods
xor
je
push
fs
push
xor
popa
test
mov
dec
mov
bound
dec
lret
lods
sbb
xchg
mov
cwtl
sub
fidivl
ja
add
stos
mov
clc
cmp
lock
insl
push
dec
pop
dec
imul
int
pop
xlat
test
repnz
imul
push
ret
gs
test
push
mov
ljmp
ljmp
adc
loopne
mov
adc
dec
mov
jno
mov
or
and
adc
lcall
cmp
and
popf
pop
pop
pop
mov
mov
push
or
mov
sbb
call
fisubrl
mov
adc
add
mov
sarb
sub
and
push
jne
leave
pop
or
scas
pop
jle
aad
rcrb
lea
mov
fildl
xchg
outsl
mov
outsb
xlat
clc
aaa
mov
push
pop
sti
sbb
jns
mov
imul
cwtl
jbe
mov
mov
es
imul
pop
insl
movsl
pop
fildl
push
add
jle
fstp
lods
imul
mov
rcll
sbb
enter
jne
rolb
rolb
jne
jne
mov
es
jge
xchg
mov
repnz
int
outsl
mov
scas
loopne
push
pop
je
or
sub
mov
push
pusha
sub
subl
inc
sub
push
out
stos
adc
and
mov
incl
dec
or
mov
ljmp
cld
sbb
repz
jns
push
aaa
fisubrl
pusha
nop
inc
insb
push
rcll
shl
sbb
lods
adc
or
divb
dec
mov
adc
mov
andb
fwait
adcb
ljmp
xchg
clc
or
shr
clc
mov
mov
mov
ret
dec
setge
ss
mov
call
in
mov
lods
add
cmp
pop
shl
push
push
inc
sub
or
mov
lods
mov
push
sahf
cmp
xlat
les
dec
sbb
xchg
test
push
jno
jmp
jo
add
xchg
xor
fistl
sbb
mov
insb
dec
cmpl
scas
mov
pusha
mov
pop
mov
mov
in
add
shl
cmp
icebp
push
add
push
sub
test
pop
aad
mov
mov
test
xor
ret
and
pop
push
or
xor
aaa
aas
or
ja
les
scas
mov
adc
jne
jbe
jbe
cmpsl
dec
sub
push
adc
fldt
adc
xor
arpl
pop
push
add
ficomps
cmp
fstl
pop
jb
jecxz
aam
inc
pop
jnp
pop
ret
jbe
pop
addb
es
bound
sbb
push
jo
xchg
cmp
mov
shrl
ret
xchg
andl
loop
mov
mov
lcall
sub
mov
mov
aam
push
lcall
jns
xchg
push
xchg
inc
mov
roll
insb
test
and
shll
or
popa
jns
lds
adcb
inc
rcr
inc
and
and
xchg
push
out
inc
fisubrl
insb
mov
stos
push
lret
xor
cmc
xchg
icebp
mov
add
fisubl
cs
inc
add
sub
imul
imul
es
jmp
imul
xchg
lret
lods
push
fisubrl
icebp
mov
aad
and
xor
xchg
leave
inc
pop
pop
inc
movsl
jmp
and
dec
addr16
sub
adc
outsb
insb
add
and
push
pop
push
fisubs
inc
insl
popa
arpl
jo
jp
adc
das
sub
fldt
lahf
mov
sub
inc
andl
pusha
inc
add
test
ret
rorb
lods
pop
sub
sahf
add
cmpsb
xchg
dec
xor
push
mov
mov
jmp
push
add
sub
adc
push
insl
inc
cmpsb
call
cld
mov
mov
sub
xor
push
sbb
aam
sub
loope
or
jne
dec
push
push
add
or
xchg
rolb
jnp
sahf
int
mov
test
push
cmpsl
fstp
mov
xchg
sti
pusha
push
dec
je
fdivl
adc
outsb
push
in
subb
bound
stc
or
mov
ficoml
les
dec
or
cmp
adc
fsubrs
aam
addb
mov
js
lock
and
cs
dec
in
test
jo
pop
call
jno
dec
and
movsb
cltd
jno
in
orb
roll
imul
pop
sahf
fs
lret
mov
cmp
scas
sub
dec
mov
mov
and
nop
pop
imul
sub
outsb
sbb
jmp
lods
insl
or
or
pop
mov
arpl
aam
aas
or
and
xor
pop
sub
mov
repnz
fwait
push
ficomps
fidivl
add
sbb
mov
dec
push
dec
xor
out
jb
push
add
sbb
rol
test
sarb
or
xchg
jns
cmpsl
int
mov
inc
cli
push
adc
test
decb
outsb
rorb
xacquire
in
push
arpl
push
lock
aas
and
lods
mov
adc
cmp
insl
test
sub
xor
fucomip
mov
inc
filds
jne
repnz
pop
cs
push
and
pusha
cmc
out
lret
push
mov
mov
mov
inc
pop
xchg
xor
mov
inc
jb
inc
pop
inc
movsl
pusha
popa
arpl
scas
movsb
dec
mov
or
insl
into
stos
cmp
jb
insb
adc
mov
test
lea
movsl
and
pop
mov
cmc
push
xchg
sub
adc
adc
add
sub
dec
push
push
lds
clc
call
dec
filds
cmp
mov
push
dec
xor
add
loopne
fwait
fwait
xchg
enter
pop
push
mov
mov
imul
xchg
push
xor
or
mov
adc
pusha
pop
subl
cwtl
inc
hlt
ja
call
rcrb
loope
insl
mov
pusha
sbb
or
insl
mov
add
enter
sub
cmpsl
fs
jecxz
mov
std
lods
movsl
adcl
nop
jae
mov
jge
lea
fadd
add
lods
add
cld
jecxz
mov
lods
jo
shr
or
fisubl
fildl
ds
mov
inc
dec
je
aaa
mull
pop
pop
push
bound
mov
invd
mov
arpl
mov
adc
insb
mov
pop
add
stos
push
insl
cmp
lods
cmp
mov
int3
je
pop
mov
mov
cmp
xor
pop
sti
jno
add
les
mov
or
pusha
mov
ret
fidivl
push
ss
add
sbb
dec
sub
outsl
fdivl
mov
push
add
out
add
lahf
mov
mov
jmp
pop
movsb
adc
cmp
movsl
addr16
aaa
insl
or
arpl
xchg
cmp
push
cmpsb
movsl
fwait
or
pop
push
outsb
or
push
inc
or
mov
clc
ljmp
pop
adc
push
inc
add
mov
jb
insl
mov
pop
xor
push
sub
fidivrl
fldenv
jns
mov
int
push
dec
sub
fadds
insl
inc
jo
aaa
jo
push
and
push
adc
dec
jbe
mov
mov
xchg
aam
dec
mov
je
outsb
xchg
mov
js
xor
insl
sbb
jecxz
stos
loop
mov
daa
lret
pop
inc
mov
adc
pop
fisubrl
in
push
jp
dec
add
xor
mov
mov
push
ja
jae
fcoms
sbb
push
jno
fsubrs
pop
sbb
mov
add
push
imul
xchg
cwtl
cmpsl
jge
out
cmpsl
outsb
xor
jo
in
ret
cmp
or
mov
xchg
inc
addl
loopne
push
stos
dec
mov
sub
int3
adc
insl
arpl
or
or
fidivrl
or
adc
je
push
cmp
mov
lea
push
insl
and
mov
pop
fcmovnbe
movsl
mov
lcall
fucomp
sub
std
clc
rol
push
and
cli
dec
sbb
cmp
dec
sbb
inc
imul
lret
sbb
fcmovnbe
sub
jg
adc
mov
fstpl
sub
pop
cmp
dec
or
fistl
push
jp
mov
xchg
fdivs
inc
lcall
clc
jp
push
int3
push
lcall
fistl
or
insb
insl
popa
pop
mov
xchg
int
sub
pop
mov
fcoms
jl,pn
in
sarb
enter
loop
sbbb
ret
pop
mov
mov
aas
push
add
mov
aam
and
adcl
ret
ss
scas
push
dec
xchg
rcr
add
push
lcall
push
add
inc
leave
shrb
mov
imul
push
mov
out
mov
mov
mov
popf
dec
and
aas
cmpsl
jle
push
les
fidivl
and
les
inc
popf
adc
jne
insl
inc
sub
inc
jno
outsb
fldt
sub
pop
cmp
pop
shrl
inc
push
jecxz
outsb
cmpsl
test
outsb
sbb
test
insl
out
mov
push
insl
pop
inc
vmaxss
andl
mov
jno
dec
dec
push
pop
jno
sub
xchg
mov
and
test
insl
ret
lea
push
xchg
sub
shrb
imul
add
and
test
add
mov
fs
stos
dec
mov
call
hlt
add
mov
movsb
push
clc
xchg
xchg
add
ss
xchg
add
dec
fmull
xchg
movsl
test
lea
adc
bound
inc
or
movl
lds
mov
mov
mov
xchg
xchg
adc
aaa
ret
shrl
in
mov
pop
xor
rcrl
mov
adcl
lods
or
repnz
push
push
scas
dec
pop
aam
jl
jb
fistpl
sbb
mov
pop
inc
add
push
fisubl
out
cli
call
pop
mov
push
mov
push
xor
ret
jae
sub
push
lods
push
test
push
sbb
loope
es
popf
cmpsb
pop
xchg
pop
jo
stc
jl
fidivl
or
cmp
adc
cmp
lea
shll
adc
iret
mov
dec
lods
insl
mov
ds
arpl
test
xchg
lods
push
sbb
roll
enter
shll
sti
and
inc
lcall
call
adc
mov
push
inc
mov
imul
jbe
fstpl
daa
inc
fmull
out
ja
ss
insl
or
inc
mov
aaa
or
lcall
push
enter
adc
xlat
dec
sbbb
cmp
xlat
and
ss
in
add
mov
mov
and
pop
cmp
lods
scas
and
jg
and
fnstenv
push
push
cwtl
shrl
jne
mov
call
adc
fldl
inc
stos
mov
int
int
lds
shl
xchg
loop
fcmovu
lods
push
mov
mov
stos
ljmp
jns
outsb
rol
mov
fldt
enter
jae
adc
push
fs
test
inc
push
pushf
mov
mov
inc
movsb
dec
loop
sub
mov
sub
test
jp
xchg
rcrb
les
adc
sbb
mov
cs
xchg
mov
pop
cmp
sbb
gs
fcmovnbe
inc
jno
inc
or
jl
and
adc
sub
jns
mov
and
jo
lret
add
lret
cmpb
fwait
add
adcb
sbb
sbb
push
fsub
fcmovne
cmc
dec
sbb
or
mov
adc
stos
je,pn
cwtl
adc
dec
sbb
outsb
out
sub
dec
fs
and
lcall
ja
add
movsb
cmpsb
sub
in
shlb
sub
mov
filds
cmpsl
mov
cmp
movsl
add
loope
xchg
insb
cmp
outsb
jo
ds
aaa
mov
mov
inc
clc
push
inc
pop
add
movsl
jp
dec
mov
pop
in
movsl
lods
mov
popf
adc
es
mov
scas
xchg
sbb
mov
add
call
sub
lods
cmpsb
or
mov
sub
xor
ss
inc
push
iret
mov
test
aas
or
or
fdivs
out
jmp
jbe
pop
scas
hlt
mov
pop
sbb
xor
pop
mov
pop
js
fistpl
and
fiaddl
stos
insl
pop
jl
sub
les
fadds
insl
popa
popa
jmp
enter
mov
aaa
fimull
inc
js
push
push
jge
pop
push
mov
stc
repz
push
in
mov
adc
inc
xchg
pop
outsb
xor
jmp
inc
add
iret
imul
ss
call
jmp
mov
pusha
xchg
xor
sbb
outsb
shrl
jnp
mov
popa
stos
in
daa
pusha
sbb
mov
mov
ds
adc
push
cwtl
lcall
movsb
xchg
jge
ret
mov
xchg
add
nop
enter
call
push
push
inc
in
addb
push
fistl
lods
clc
push
rorb
fisttps
push
mov
fcmovnb
fstps
sahf
mov
lock
jne
lahf
mov
add
and
pusha
imul
mov
add
lds
rcll
out
push
push
orl
jns
adc
cwtl
aam
fcmovu
xchg
push
xor
mov
or
aam
pop
pop
push
mov
dec
insb
sbbl
or
xlat
cmp
cmpsb
adc
jp
fdivl
sbb
mov
sub
pop
jae
jp
or
mov
jge
jl
add
push
dec
mov
jb
movsl
roll
out
rorb
xchg
pop
sub
sbb
push
popa
fstps
and
push
insl
mov
fwait
add
leave
popl
inc
shll
push
out
lods
mov
outsb
in
imul
gs
pop
ret
adc
mov
pop
pop
mov
pop
fisubrl
pop
xor
mov
aam
mov
or
cwtl
push
in
adcl
mov
adc
add
cmc
ret
pusha
pop
cmp
sbb
xor
pop
insb
lret
or
xchg
insb
pop
pop
aad
stos
mov
fsubrl
inc
shll
lock
sub
inc
mov
or
push
jecxz
mov
mov
cmp
add
mov
imul
in
lcall
inc
pop
add
pop
pop
sub
mov
mov
dec
add
mov
lea
cmp
shrl
ds
xchg
adc
mov
add
rcrb
jne
inc
aad
pop
pop
sub
fdivrp
outsb
mov
bound
test
je
cli
outsb
ficompl
push
into
adc
fildl
push
and
lcall
add
cmp
push
mov
mov
jno
cld
fs
ss
bound
sub
das
ljmp
push
insl
test
or
fcmovu
fcoms
jno
mov
mov
adc
mov
or
mov
aad
pop
sub
sahf
lcall
mov
insl
fistpl
xor
test
mov
or
add
mov
cmp
push
xchg
dec
jne
bound
cmpsl
jno
insl
mov
imull
ret
sub
mov
pop
adc
aaa
mov
lcall
negb
mov
loop
lods
mov
test
imul
jo
test
push
fistl
jbe
and
lcall
or
rolb
mov
lods
add
and
lods
aaa
xlat
outsb
insb
cmpsl
add
mov
nop
rcll
dec
mov
pop
inc
in
mov
lahf
cltd
sbb
pop
push
ja
ljmp
stc
decl
jge
xchg
mov
subl
pop
mov
ljmp
jp
mov
mov
push
cs
pop
mov
mov
cmp
pop
add
in
mov
rorb
dec
mov
outsb
mov
ret
test
lds
mov
stos
jl
mov
mov
mov
jne
push
mov
adc
inc
mov
xor
sub
fucomi
sbb
jmp
outsb
fildl
das
and
ja
add
inc
insl
shr
std
xor
sbb
sub
shlb
cmp
mov
xchg
fnsave
into
lret
lret
lods
mov
sub
sti
mov
les
mov
xchg
jno
sub
loopne
lea
insl
fs
cmpl
test
dec
aam
sbb
add
popf
mov
aaa
fiaddl
repnz
and
mov
arpl
lret
in
test
fstp
movsl
add
lahf
sbb
shlb
xchg
rcrl
and
mov
mov
add
das
mov
roll
mov
out
jae
fwait
add
dec
mov
mov
ljmp
dec
push
xchg
repz
jo
sub
ret
push
mov
in
and
and
pop
lcall
sub
xchg
push
mov
pop
cmc
push
fisttpl
mov
ret
xchg
test
lds
imul
insl
fistpl
cmp
pop
es
mov
orl
aas
movsl
fsubrs
insb
sub
fsubrl
in
push
cmc
outsb
insb
insl
fcomi
cs
mov
or
loopne
ja
and
push
fdivrl
pop
popa
fisubrl
push
mov
sbb
inc
gs
pop
cmp
aas
xorl
aad
xor
test
insb
push
xchg
mov
popa
cmp
sub
xchg
pop
pop
lods
movsl
cmpsl
int
scas
outsl
outsb
push
out
inc
insl
pop
adc
imul
pop
imul
jno
loope
mov
and
cs
jmp
shrl
jg
inc
jne
test
mov
add
in
test
insw
pop
mov
sub
mov
fwait
mov
icebp
faddl
push
mov
loop
dec
dec
mov
or
pop
mov
push
mov
dec
or
adc
or
insb
je
fsubrs
popa
pop
in
add
pop
dec
jp
jmp
insl
dec
dec
ja
out
xor
lods
subl
outsl
insb
fcmovnb
divb
jge
dec
cmp
shrl
sbb
sub
lock
popf
pop
insl
mov
pop
shl
ss
add
mov
in
enter
add
pop
ds
sti
pop
mov
mov
daa
ds
mov
pop
cltd
pop
pop
mov
cmp
mov
sbb
mov
mov
mov
subl
push
pop
pusha
popa
sub
cmc
arpl
mov
test
into
loop
push
xor
aaa
inc
stc
lret
push
cmpsb
fwait
aam
mov
mov
out
out
jne
rcll
pop
fadds
push
bound
out
jge
xor
mov
aaa
hlt
mov
lds
test
neg
scas
sbb
movsb
jle
push
insb
xor
jle
leave
mov
addb
out
jnp
pop
xlat
cmpl
movb
jno
mov
mov
je
push
mov
adc
xchg
sbb
xor
adc
dec
mov
in
insb
cmp
insb
add
xchg
cmp
dec
in
mov
add
or
add
cs
aam
popa
daa
cli
xchg
add
imulb
cli
push
and
je
inc
pslld
mov
aam
xor
ret
xlat
adc
xor
data16
cmpb
mov
add
sbb
push
lea
pop
or
jb
ret
jmp
sbb
insl
stc
sbb
or
mov
xlat
test
push
or
loop
mov
cwtl
push
clc
movsb
jbe
sti
xlat
call
lret
jae
andb
ret
loope
insb
inc
cs
pop
or
insb
pop
aam
or
mov
add
and
push
lds
fwait
and
insb
testb
test
imul
scas
andb
inc
jo
insl
sahf
sbb
mov
movsb
push
mov
mov
inc
xchg
in
sti
mov
sahf
push
mov
les
add
outsb
add
mov
jbe
mov
inc
xor
xor
adcb
sub
enter
roll
mov
cs
fwait
push
lcall
mov
mov
gs
cs
push
fisubrl
jl
fstl
push
mov
sti
mov
clc
sbb
sarb
mov
cs
in
and
into
add
xchg
outsb
pop
sbb
sub
cltd
xchg
add
in
mov
sahf
ficompl
sub
and
sar
pop
out
jle
xchg
push
fcmovbe
inc
push
cs
xor
xchg
test
jne
pop
into
loop
pop
in
inc
dec
dec
mov
test
sbb
adc
xor
lea
repnz
call
ja
aam
add
fmull
mov
ret
jno
fsubrs
push
fstpt
repnz
stos
mov
jl
jmp
add
dec
cmp
sbb
cmpsl
xchg
sub
mov
pop
jne
out
shrl
push
int3
cmp
sub
inc
loope
pushf
repz
mov
push
mov
sahf
rol
jp
sbb
stos
mov
sti
xchg
outsb
sbb
in
mov
aam
stc
lods
out
mov
add
cs
insl
mov
xor
dec
test
xchg
mov
mov
cmp
outsb
dec
fwait
iret
out
test
mov
fisubl
mov
mov
into
imul
out
jg
sbbb
or
sub
add
xor
cltd
inc
arpl
push
mov
aad
sbb
lods
cli
mov
mov
cs
push
idivb
lds
loopne
inc
push
cmp
pop
pop
orl
fwait
add
les
ds
mov
push
fimuls
enter
in
sbb
imul
sbb
add
outsb
push
fisttpll
push
imul
and
lods
in
in
popa
imul
mov
mov
outsb
ja
adc
push
xlat
xchg
inc
cmc
cwtl
and
xor
aaa
xchg
cmpsl
cmpsb
jp
test
testl
push
sub
mov
mov
mov
icebp
jae
bnd
test
mov
or
mull
lods
insb
adc
aas
mov
lds
mov
pop
xchg
xor
dec
in
mov
shlb
das
mov
mov
arpl
mov
lahf
pop
pop
insl
popa
fisttpl
je
inc
sub
dec
sarb
sub
push
xchg
push
test
fdivs
add
sbb
jb,pn
mov
xchg
cmp
in
cmp
stc
fnsave
push
xor
enter
mov
or
sbb
adc
mov
mov
xchg
adc
pop
mov
ficoms
inc
lea
lods
or
mov
cld
lcall
pop
mov
push
fildl
clc
stc
dec
sbb
pop
push
sub
in
stos
sbb
add
pop
mov
add
add
pop
fsubrs
push
stos
lea
cli
imul
add
lret
cld
into
jno
jbe
jo
pop
adc
mov
insb
pop
mov
mov
mov
xchg
in
rclb
repnz
pop
mov
inc
pop
rcrb
mov
in
mov
mov
cmp
push
mov
push
fidivl
stos
lcall
add
inc
in
rcll
nop
jecxz
xor
inc
bound
rcrl
popa
imul
imul
xor
test
push
jo
pop
cld
cmpsb
push
or
adc
insb
insb
sbb
js
int
dec
js
cmc
add
mov
test
fs
dec
lcall
iret
loope
add
dec
ficoml
and
jmp
outsb
sbb
xchg
call
fwait
mov
inc
adc
into
cmp
mov
loop
mov
rcll
inc
add
es
mov
test
mov
mov
sub
lods
or
call
mov
inc
mov
subb
adc
aad
jge
rolb
arpl
push
mov
push
mov
sbb
lods
xchg
xor
pop
jmp
mov
ret
adc
repnz
adc
mov
mov
mov
repz
test
jno
ret
push
outsb
pop
hlt
mov
movsb
popa
scas
mov
push
dec
lcall
jb
jl
aad
add
frstor
mov
in
ret
add
push
push
add
mov
stos
adc
jmp
add
stos
loopne
mov
sti
repnz
iret
mov
pusha
in
fcoml
sahf
cmovne
fnstsw
les
gs
repnz
pop
sbb
jl
mov
push
add
pushf
xchg
rol
pop
roll
insb
mov
loopne
loope
jo
cwtl
adc
and
adc
test
pop
push
ds
sub
jno
insb
aam
pop
mov
dec
fldcw
mov
or
leave
notl
mov
jno
push
pop
call
xchg
dec
inc
pop
sahf
adc
mov
jecxz
loop
inc
insb
add
cmp
test
fsts
insb
mov
fprem
lret
cmpsl
adc
outsb
pop
insb
pop
push
xchg
xchg
dec
dec
mov
cmp
lods
cmp
loope
dec
mov
sub
jmp
cs
inc
rol
in
adc
xor
cmp
sub
push
dec
in
testl
pop
add
sqrtps
mov
lods
sub
or
insb
and
test
pusha
std
pop
fs
test
out
inc
pop
mov
mov
adc
push
push
sti
leave
lret
mov
outsb
dec
andb
sbb
push
mov
addr16
mov
inc
dec
jp
adc
push
fisubl
fistpll
jns
fcomps
push
fldl
arpl
mov
mov
icebp
fstpl
jl
dec
jge
cmp
inc
push
push
testl
fisubrl
adc
inc
dec
daa
mov
or
lds
sub
movsb
popa
popa
sub
inc
ret
sub
push
je
arpl
int
mov
popa
imul
test
inc
and
xchg
or
loopne
cmp
insl
in
ret
xchg
data16
in
add
outsl
cmp
mov
clc
and
cmpsl
les
sbb
int
cmp
mov
ret
scas
push
leave
cmpsb
sub
lods
pop
cmc
fs
sbb
scas
xchg
pop
shrl
mov
adc
das
jo
and
mov
sub
loopne
lea
jb
rolb
imul
fisttpll
dec
adc
push
data16
insl
arpl
xchg
ret
bnd
adc
cmp
pop
mov
imul
inc
fs
mov
jle
mov
jns
mov
insl
imul
pop
cmp
sahf
xor
dec
or
sub
jo
ret
in
push
insl
push
rolb
aam
adc
and
bound
stos
mov
sub
push
xchg
and
stos
inc
sbb
pop
dec
inc
mov
pusha
scas
adc
mov
sub
sbb
xor
or
movnti
and
addr16
or
pop
addl
push
sbb
das
jno
or
adcb
push
push
test
test
mov
mov
or
mov
mov
dec
adc
sbb
xchg
jo
insb
rorl
dec
and
push
lcall
pop
imul
in
pusha
inc
push
jno
repnz
jne
sub
mov
mov
outsb
dec
fcmovnb
jle
addl
in
addb
sub
insl
sub
jmp
ret
lods
scas
add
mov
fcomp
pop
ljmp
pop
push
cmp
xor
test
mov
pop
push
jnp
lock
dec
dec
inc
mov
mov
movsl
lods
pop
push
das
pop
mov
outsb
dec
shll
arpl
pop
in
in
mov
insl
sbbb
ret
bound
test
mov
outsb
mov
and
imul
fadds
rorl
pop
pop
or
fcmovu
ds
aas
ja
push
in
mov
and
cmp
mov
jb
ret
cmp
insb
or
or
push
mov
lods
or
xor
out
mov
filds
repz
insl
fistpl
jp
sbb
ret
push
pop
push
xor
fnsave
das
scas
inc
daa
push
sbb
mov
jae
mov
sbb
xchg
loop
push
sub
popf
cmpsb
cmp
enter
ljmp
mov
and
sahf
mov
mov
mov
add
lahf
scas
outsb
sub
test
and
xchg
cltd
or
mov
sub
mov
imul
loopne
mov
mov
jbe
outsl
movsl
jmp
xchg
dec
insl
aas
addb
push
push
fdivs
ss
sub
pushl
fwait
and
xchg
enterw
inc
loopne
insl
xchg
das
mov
and
cmpsl
add
pop
xlat
cs
fiaddl
dec
outsb
and
mov
pop
fnstcw
das
clc
and
dec
xlat
lret
sbb
lret
xchg
sub
popf
fmuls
pop
fstpl
push
jp
outsb
fcmovnbe
mov
lds
in
or
dec
inc
dec
pop
aam
mov
push
mov
cld
ret
test
adc
adc
fstps
xor
mov
ret
subb
imul
popa
out
inc
jb
lea
jbe
shrb
add
inc
pop
loop
repnz
add
faddl
mov
test
sahf
jl
pop
mov
in
inc
cmpb
stos
and
pop
inc
fcmovnb
mov
add
mov
mov
adc
inc
mov
push
lods
adc
insl
or
mov
add
out
jbe
stc
mov
and
mov
or
mov
cmp
sbb
fidivs
stos
and
popa
mov
js
push
ds
outsb
pop
sti
shl
push
add
leave
sub
fsubr
faddl
adc
mov
cli
xchg
pop
movsb
fldcw
mov
mov
outsl
adc
lods
fstp
or
ja
mov
out
pop
inc
inc
rcl
adc
sub
outsl
addr16
fnsave
enter
sub
jbe
mov
lds
fildl
jmp
sub
jge
addr16
inc
push
andl
outsb
inc
push
mov
into
pop
movsb
ljmp
sub
xor
movl
pop
pop
add
lret
movb
mov
test
scas
int
stos
aaa
cmp
imul
xor
sbb
mov
xchg
push
mov
sbb
adc
pop
rorb
xchg
sahf
push
fwait
jmp
fistl
scas
aas
pop
push
mov
adc
cmp
adc
sub
mov
test
push
rclb
test
xor
cld
int3
loope
lods
push
pop
mov
xchg
aam
bound
inc
push
pusha
or
mov
insl
push
cld
lock
add
mov
shrl
outsb
shlb
mov
mov
jne
xchg
add
xor
or
call
loop
adc
inc
mov
orb
test
and
sub
xchg
mov
inc
insb
add
fwait
pusha
sub
push
push
sub
xchg
pop
sub
test
insl
sbb
addb
xchg
mov
cld
add
cs
pop
mov
sbb
xchg
dec
add
ljmp
call
roll
repz
mov
test
cltd
xchg
cwtl
je
insb
inc
jmp
or
lods
arpl
sub
inc
or
or
lds
adcl
outsb
sub
pusha
mov
sbb
push
mov
cmp
cwtl
inc
jb
out
cltd
pusha
addl
sbb
out
xor
je
mov
into
xchg
imul
in
es
aam
shll
jecxz
or
in
movsl
insl
imul
mov
repz
dec
push
pop
mov
sbb
or
push
inc
movsl
test
jl
mov
push
add
in
or
cmp
push
imul
imull
fwait
test
add
sub
sbb
scas
push
mov
test
adc
mov
scas
or
or
pop
cmpsb
mov
dec
das
inc
fsubrl
xor
push
xchg
out
lods
mov
inc
es
movsl
movsl
push
push
xlat
out
inc
ja
insl
push
les
ja
insl
gs
ret
mov
push
mov
push
sbb
add
push
imul
cmp
sub
adc
out
fcomp
fiaddl
movsl
movaps
or
pop
pop
out
mov
add
pop
mov
xor
or
pop
mov
add
mov
xchg
or
mov
insl
pop
sbb
int3
lods
adc
push
sub
mov
mov
mov
mov
fildl
lds
loope
mov
mov
push
les
nop
xchg
dec
repnz
pop
outsb
pop
mov
imul
mov
adc
sbb
dec
test
mov
mov
sbb
cltd
stos
pop
push
fcmove
jnp
sbb
inc
fistl
jo
or
mov
pop
mov
cmp
xchg
mov
or
outsb
es
mov
add
push
push
test
push
popf
adc
inc
adc
inc
push
adc
mov
fildl
mov
mov
dec
shlb
lods
mov
mov
jno
pop
sub
hlt
bound
es
push
rcl
rclb
push
shll
xor
ss
mov
lock
mov
and
movsl
daa
pop
pop
repnz
sahf
jecxz
push
jle
aam
cmp
add
mov
adc
ljmp
add
outsb
sbb
xor
insb
sbb
pusha
mov
in
sarl
sbb
jae
and
inc
pop
mov
mov
shrl
outsb
in
int
sbb
rclb
xor
push
xlat
pop
adc
in
add
fsub
ja
sbb
gs
push
add
sarl
inc
mov
bound
jecxz
out
call
mov
movsl
adc
sbb
push
fiaddl
or
hlt
aam
or
insl
imul
push
idivb
fmuls
sbb
add
mov
outsl
ret
mov
mov
loopne
xor
movsl
gs
xchg
stos
je
lods
sub
leave
out
hlt
push
xchg
mov
push
imul
lods
lahf
inc
jbe
clc
mov
mov
pop
mov
dec
sbb
push
test
sub
aam
cld
lret
jne
pop
cs
mov
push
arpl
aam
mov
xor
jle
outsb
dec
or
push
shrb
jns
fsubrl
push
sbbb
lea
jecxz,pn
je
push
or
inc
mov
shrl
dec
sahf
mov
stc
and
mov
and
std
adc
fcmovnb
inc
push
or
and
mov
mov
mov
add
repnz
test
adc
xlat
inc
shll
push
test
fbld
add
add
fwait
outsl
loop
sbb
in
test
aam
pop
leave
push
mov
mov
insb
pop
push
jmp
nop
fwait
scas
add
idivl
jmp
or
xor
cmp
jp
and
fistl
fistl
inc
lret
mov
shrl
pop
sbb
inc
fidivl
test
xchg
jns
in
or
pop
sub
sub
push
xchg
fdivs
push
dec
xchg
shrl
aad
fdivl
nop
xchg
aad
lods
in
mov
jp
rcrb
add
adc
mov
je
or
jns
mov
jmp
add
adc
cs
insl
inc
sub
fdivrl
aam
sub
sbb
in
mov
scas
add
mov
adc
cmc
fwait
cmpsb
mov
bound
fsubrs
mov
pop
and
imulb
jmp
adc
loop
sub
jle
lret
xchg
and
out
inc
push
mov
rclb
pop
sub
insb
fldt
mov
inc
pusha
or
shr
cld
out
xor
push
jg
push
jb
fdivs
aas
mov
adc
mov
das
pushf
xor
sub
test
mul
xchg
sub
imul
sub
and
or
insl
add
push
enter
mov
pop
adc
xor
enter
cmp
movsb
push
shll
dec
jl
repnz
push
mov
cmpsl
xor
insl
fs
pop
mov
cmp
xor
add
repnz
cmp
pop
push
xor
xor
lods
movsl
push
or
sub
cmp
aam
mov
scas
xor
or
mov
push
sub
fidivl
xor
sub
loop
xchg
jmp
cmc
inc
outsb
dec
add
dec
stc
mov
cmp
jg
xlat
or
or
aad
xlat
lods
test
insl
movsb
int3
sbb
fildl
mov
lds
ja
outsl
adc
jmp
out
loop
or
inc
flds
aam
lret
mov
loop
add
pusha
rcrl
add
mov
popf
sub
dec
enter
mov
or
xchg
pop
loope
stos
hlt
and
add
ss
or
sbb
jbe
mov
xchg
mov
and
mov
arpl
test
xchg
mov
sub
add
mov
dec
inc
sub
push
adc
inc
jecxz
sub
add
into
and
and
jno
arpl
mov
push
inc
dec
xor
aam
lods
bound
inc
xor
aaa
mov
ds
dec
in
adc
lcall
jne
mov
aaa
cmpsl
lret
xor
dec
or
and
inc
mov
xchg
cs
loopne
adc
in
aad
out
call
into
shll
adc
imul
pusha
sub
dec
shl
fdivrl
jo
fstpl
test
adc
pop
pop
cmp
das
es
dec
mov
add
pop
in
pop
inc
lret
cmp
sbb
xchg
push
and
mov
and
sbb
pop
mov
iret
pop
sbb
mov
lods
push
jae
sbb
inc
loope
add
push
jnp
jno
lods
mov
lret
popa
xor
ret
mov
and
add
stos
push
pop
push
mov
mov
mov
jmp
jo
stos
sarb
test
mov
lods
insl
arpl
movsb
aam
mov
cs
aaa
sarl
ficomps
inc
and
and
mov
ss
aas
xchg
lret
or
inc
call
out
push
pop
fistpll
jl
out
fwait
sbb
outsl
inc
jo
sbbb
dec
in
dec
aam
mov
test
mov
add
insl
mov
sbb
adc
jmp
push
ljmp
pop
imul
sbb
mov
int3
jno
or
iret
sahf
ljmp
imul
aam
cs
jg
mov
xor
mov
push
push
cwtl
jge
and
fildl
insb
adc
pop
jns
sahf
sub
lods
dec
dec
cmp
cmc
jp
inc
sbbb
jae
movsl
xchg
adc
repnz
mov
aad
popa
add
sub
sbb
mov
add
imul
imul
fimull
push
lea
adc
sbb
rcl
adcb
rolb
push
inc
flds
sbb
out
and
sub
mov
mov
xchg
sbb
outsb
mov
mov
gs
and
mov
mov
mov
lds
and
lahf
jo
popa
mov
jae
jno
or
je
inc
adc
mov
ja
adc
adc
sub
outsb
jne
jl
pushf
pushf
inc
mov
aam
add
rcr
xor
sbb
cmp
add
bound
shrb
push
test
imul
ds
rorb
outsb
jmp
pop
push
test
mov
cmp
push
iret
push
fildll
mov
adc
jbe
incb
mov
cltd
mov
rcll
out
lea
movsb
es
ret
xchg
imul
in
mov
mov
and
ret
jb
cmpsl
movsl
sub
pop
sbb
jns
cli
es
in
loope
mov
insb
mov
scas
jmp
int3
or
add
enter
mov
xchg
xor
jmp
test
mov
add
cmp
lea
loop
jmp
fstpt
loopne
sub
shll
popa
and
adc
movsl
mov
inc
inc
jno
cltd
add
mov
scas
in
test
daa
aaa
dec
adc
and
push
test
fwait
xorl
fistl
in
and
insl
sub
push
insl
mov
fidivrl
cmpsl
aaa
push
pop
mov
inc
psubusb
mov
bound
inc
popa
push
adc
inc
ja
cmp
loopne
das
add
cmp
out
adc
or
mov
or
xchg
ds
jg
imul
out
inc
mov
mov
imul
stos
sahf
sarb
dec
enter
add
xchg
cmp
mov
dec
and
jg
lret
pop
push
lods
push
dec
add
mov
test
dec
jnp
stos
je
sbb
push
adc
mov
adc
popf
sti
and
in
imul
mov
mov
mov
add
or
adc
test
ds
inc
jecxz
fdiv
and
cmc
push
imul
imul
add
and
push
add
or
aaa
fisubl
cmp
fstp
mov
stos
xlat
loopne
inc
dec
and
mov
or
sbb
dec
pop
mov
repz
or
scas
mov
xorb
push
xorb
idiv
sub
or
sbb
adc
je
roll
adc
sbb
sahf
fldt
cmc
jmp
jp
lret
jb
jo
mov
in
mov
mov
add
pop
pop
push
lods
pop
xor
sbbb
ss
inc
repnz
push
inc
outsb
andl
test
mov
push
inc
dec
cmp
and
inc
ret
bound
sbb
add
mov
ss
push
mov
inc
popf
js
pop
aaa
mov
jecxz
into
dec
sti
push
loop
jae
adc
adc
sbbl
mov
insl
arpl
mov
loopne
dec
pop
stos
push
fdivrl
stos
andb
insb
xor
xor
rcl
mov
push
mov
imul
inc
mov
mov
mov
sti
inc
jecxz
movsb
mov
shll
mov
push
sahf
hlt
lret
fs
sub
jp
cmpsl
mov
mov
push
andl
lcall
mov
mov
add
lods
aad
stos
dec
inc
fcmovnb
mov
pop
add
sbb
jge
fnstsw
xorb
ja
imul
out
out
xor
mov
inc
mov
push
jae
sbb
mov
sub
or
repz
dec
arpl
lods
or
mov
in
ds
imul
mov
int3
xorl
or
scas
mov
insb
or
enter
push
jmp
pop
rcrb
mov
lea
mov
mov
test
push
sub
push
jle
inc
xor
test
push
loope
fldt
lds
mov
jo
jp
mov
jp
pop
lods
lea
daa
testl
mov
push
mov
je
cmpsb
and
mov
vcvtsi2ssl
dec
dec
les
adc
mov
movsl
lods
ret
mov
es
push
jne
pop
lcall
mov
ret
pop
sub
mov
mov
inc
loopne
add
mov
fwait
out
jge
mov
add
ffree
jge
scas
sub
insl
cmp
mov
ret
inc
pop
clc
sub
lcall
insb
push
mov
jbe
fdivl
test
aad
stc
das
insl
xchg
aam
or
lret
inc
cmc
add
pop
rorl
adc
inc
adc
jbe
pusha
bound
add
cmp
mov
sbb
mov
pushl
into
add
in
pusha
js
in
dec
sbb
lds
xchg
inc
aad
test
push
popa
aas
cltd
mov
subb
sub
rol
xchg
test
popa
loopne
jne
das
xchg
lret
ss
fwait
mov
dec
push
push
add
sub
add
imul
adc
mov
ret
push
subb
in
mov
adc
and
lcall
push
push
jne
fmuls
ss
ja
cs
or
hlt
push
lret
pop
adc
mov
in
rclb
add
xor
movsl
lods
mov
and
outsb
add
push
ja
jmp
cmp
negb
pop
sbbb
xor
xor
xor
pop
fsubrl
stc
jecxz
sahf
sub
sub
and
push
lds
xchg
add
lods
insl
adc
push
test
movsb
cmp
fcoms
pusha
addl
stos
mov
dec
ret
jge
shlb
popf
nop
jg
sub
insb
xor
std
cli
adc
push
jno
xchg
mov
jle
out
test
ds
shlb
clc
insb
xchg
xchg
push
mov
enter
stos
pop
adc
dec
int
push
inc
aad
xchg
movl
fs
cmpb
jae
dec
or
push
insb
mov
jae
push
cs
dec
cmp
icebp
add
mov
or
lahf
addb
aad
fdivl
add
adc
hlt
mov
jbe
push
or
sbb
sahf
ja
add
jmp
xchg
xchg
adc
cmpsb
push
cmp
jnp
sub
mov
insl
and
jbe
mov
cli
add
dec
aam
data16
jg
xor
in
adc
and
or
sbb
fsubrs
push
mov
adc
sbbl
mov
in
lds
add
es
sbb
iret
jp
mov
popl
mov
jbe
iret
adc
pop
jae
cmp
outsb
mov
mov
add
stc
add
sub
xchg
das
repnz
inc
fimull
push
nop
and
dec
fldt
pop
xor
xor
test
int3
xor
adc
cmp
xchg
push
push
lea
addr16
mov
out
mov
jl
jecxz
push
dec
movsb
mov
dec
sarl
xchg
inc
and
mov
pushf
jb
in
add
mov
outsb
mov
jb
in
test
imulb
in
mov
mov
mov
popf
ficoms
scas
pusha
push
dec
push
mov
mov
push
mov
push
mov
pop
test
lcall
rclb
fsubs
fisubl
repnz
out
xor
dec
shl
mov
inc
fistl
sbbl
mov
ret
scas
xchg
push
xchg
jmp
in
ret
mov
stos
inc
insb
mov
xchg
pop
and
xchg
outsb
jne
leave
insl
or
sub
shrl
sti
and
cmpsb
pop
cmpsl
add
lods
rcrl
sahf
pop
popf
and
dec
sbb
ret
pop
adc
sub
mov
or
mov
add
aam
test
sub
pop
mov
filds
lcall
lcallw
sbb
inc
les
into
daa
push
add
lods
inc
inc
mov
cs
iret
fisttpll
bound
jg
inc
imul
ljmp
jg
insb
or
subl
lods
mov
outsb
pop
or
adc
out
push
pop
adc
push
popf
ja
bnd
in
sub
mov
adc
in
fisubl
in
and
ficompl
das
mov
jne
insl
jg
pop
push
mov
cmp
mov
jecxz
repz
cmc
xor
rclb
mov
jnp
xchg
xchg
fcompl
test
imul
fstl
or
adc
and
and
inc
out
jmp
stos
pop
adc
std
xchg
xor
insl
sbb
inc
inc
cmp
mov
stos
out
adcb
cltd
call
jns
inc
xlat
and
and
add
aaa
aam
daa
xor
fisttpl
pop
push
dec
jle
les
mov
les
sub
fisubrl
mov
mov
mov
mov
jp
movsb
addr16
aaa
dec
aaa
sbb
sbb
dec
imul
inc
fsubrp
mov
sub
xlat
lahf
dec
jne
lods
stos
or
push
cmp
inc
mov
or
add
mov
fadds
nop
xchg
mov
mov
add
inc
sbb
jl
enter
jo
cmp
cli
incb
shrb
push
mov
xorl
adc
cmp
mov
xor
cmp
pop
jno
adc
mov
sub
test
mov
jmp
fiaddl
sub
pop
scas
mov
leave
fisubl
pop
mov
or
jbe
test
mov
cmpl
mov
fs
es
mov
shrb
xor
fs
add
mov
cmpsb
sub
orl
push
sub
pop
mov
lcall
push
ja
insl
and
jo
sbb
add
mov
sbb
pop
test
mov
mov
and
dec
mov
lcall
add
movsl
push
je
mov
jae,pt
push
push
adc
adcb
mov
je
insl
aaa
data16
call
and
lea
rolb
insl
push
lds
sbb
cmpsl
jne
add
lods
add
dec
mov
or
adc
insl
or
jmp
mov
inc
inc
or
mov
loope
dec
test
inc
push
inc
add
mov
inc
push
les
adc
sbb
mov
push
adc
jbe
dec
sub
addr16
and
sbb
xchg
sbb
mov
repnz
cwtl
imul
push
roll
add
stos
dec
xchg
lods
pop
lods
clc
fnsave
xor
cmpsl
loopne
cmp
lods
cmc
into
cmp
or
adc
push
xor
push
or
cmpsb
arpl
mov
mov
fcmovne
insl
pop
movsb
pop
loop
test
mov
sub
ss
test
mov
or
sbbb
or
inc
popf
clc
push
cs
xor
fldcw
xor
insl
mull
cld
rcrb
fcmovnb
mov
add
lods
mov
dec
enter
mov
xchg
xchg
lds
cmp
push
sbb
sbb
test
icebp
js
aaa
mov
mov
scas
inc
test
test
adc
popa
and
inc
jo
ret
xor
shlb
aaa
add
mov
dec
xchg
and
lds
or
mov
sbb
lret
leave
xlat
mov
and
movsb
mov
sub
mov
rcr
jne
xchg
mov
sbb
mov
mov
sbbl
fstp
sahf
mov
test
inc
inc
pop
push
pop
hlt
mov
sbb
push
sub
mov
add
aad
inc
insb
push
mov
jecxz
pusha
mov
and
insl
jecxz
add
ds
movsl
lea
sub
lcall
xlat
xor
in
inc
inc
pop
or
leave
jnp
cmp
mov
fstps
mov
jno
bound
mov
mov
ret
sti
shll
adc
fldt
pop
jo
arpl
cmp
pop
das
fnsave
inc
lds
pop
or
mov
sbb
pop
and
notl
mov
cmp
loope
or
aam
mov
mov
pop
ficoml
mov
sub
aaa
xlat
inc
mov
das
inc
xchg
in
or
les
cs
dec
movsl
add
xor
loopne
mov
mov
xchg
aam
orb
push
shrb
pop
pop
js
inc
jns
fdivrs
stos
pop
jbe
xchg
mov
cmp
fldt
jmp
test
inc
cli
xor
add
movsl
ret
mov
notb
pop
fcmovnbe
dec
cltd
fstpt
mov
sbb
pop
ds
xchg
pop
lods
mov
in
dec
jno
fcmovb
mov
cs
rcrl
sbb
jl
push
mov
fs
or
inc
mov
fldl
fcmovb
dec
mov
jbe
dec
rcll
jns
push
mov
repnz
or
lods
and
fnsave
ret
andb
mov
cmp
je
pop
bound
pusha
mov
mov
aam
div
clc
loop
sbb
xor
sub
out
xchg
xchg
xchg
xorb
roll
pop
fildl
dec
shll
lret
mov
pop
out
xor
push
movsb
jp
ficoml
sbb
sub
mov
sub
insl
pop
fdivs
ja
mov
lds
fsts
fistpl
lea
out
dec
mov
mov
notl
sub
je
mov
sbb
stos
ficoml
xchg
xchg
jbe
mov
aaa
dec
sbb
fstpl
push
or
or
or
imul
aaa
bound
or
add
or
cwtl
dec
push
insl
imul
lds
xchg
mov
adc
mov
mov
rcll
mov
cs
push
cmp
sbb
cmp
xorb
rcrb
mov
xor
fiadds
in
and
es
arpl
int
lods
or
mov
dec
rcll
cmpsl
pop
xlat
add
movb
or
inc
lds
lock
mov
sbb
sahf
cli
dec
jl
push
inc
aad
sti
fidivrs
popf
pop
decl
test
out
icebp
add
sub
rcl
sbb
push
add
imul
push
xchg
inc
or
adc
loopne
push
sbb
gs
je
hlt
sti
sub
push
cs
stc
push
cmp
aam
dec
lret
test
int
add
and
add
xchg
ret
add
mov
add
inc
add
pop
rolb
push
push
cmpb
.byte
.byte
.byte
push
cltd
sti
incl
inc
add
push
push
je
imul
sub
or
add
ss
js
in
aas
xor
cmp
ret
mov
bound
arpl
pop
or
outsl
fildll
jae
gs
test
dec
dec
outsb
or
fldenv
fbld
jo
shrb
add
dec
addl
jmp
sub
pop
testl
mov
rcrb
or
or
pop
or
jmp
fdiv
or
inc
fcoms
push
repz
push
aas
fwait
in
and
lock
jmp
nop
addl
xor
and
and
and
push
fs
pop
pop
or
enter
dec
xor
and
and
and
cmp
sarb
sub
andl
les
outsl
ljmp
das
roll
in
sub
je
movzwl
mov
sbb
enter
arpl
sbb
and
or
pop
xor
or
mov
cmp
mov
push
add
add
lcall
pop
xor
mov
jmp
mov
mov
jg
or
add
mov
push
roll
push
jg
sbb
add
mov
pop
mov
inc
cmp
jne
mov
mov
adc
push
mov
outsb
lret
add
or
adc
lret
push
push
xchg
out
jge
push
clc
mov
mov
jg
xor
add
outsb
arpl
cmp
inc
add
or
jnp
out
inc
push
adc
xchg
push
pop
add
outsl
mov
push
push
insl
imul
into
mov
mov
mov
mov
sarb
dec
add
loopne
ja
mov
push
push
aaa
insl
jmp
jg
pop
mov
mov
pop
mov
mov
push
xchg
lret
add
cmp
jne
sbb
mov
mov
or
jmp
add
fidivs
jne
push
pop
mov
aaa
jne
mov
mov
sbb
lock
out
xor
hlt
xchg
mov
mov
push
push
pop
outsl
jb
in
or
mov
add
stc
add
fbstp
xchg
mov
add
pop
push
sub
cmpl
pop
mov
sub
xor
or
jmp
mov
add
pop
fnstsw
mov
fisttpll
or
sti
mov
sub
jle
or
xor
push
fadds
lods
jmp
gs
xchg
mov
pop
adc
mov
incl
sbb
aaa
mov
adc
nop
ret
mov
inc
cmp
std
adc
jge
mov
and
and
add
mov
push
push
cmpl
test
je
sbb
push
push
fistl
and
movsl
outsl
push
es
sbb
sub
push
lods
inc
call
sub
push
dec
push
in
push
jne
js
and
add
mov
or
dec
sahf
mov
jecxz
push
stc
leave
mov
stos
adc
ret
test
mov
dec
push
jmp
es
rcrl
jb
out
xchg
cmp
inc
adc
jbe
ret
or
or
push
insb
dec
cmp
insl
jbe
add
sarb
lcall
divl
push
mov
stos
cmp
push
pop
dec
or
adc
xor
add
sbb
out
shll
je
jge
fildll
mov
and
out
xor
add
adc
or
jne
adc
or
jl
in
iret
in
pop
jmp
push
push
add
lcall
adc
xor
adc
jbe
adc
add
pop
mov
mov
sub
push
adc
mov
push
jae
pop
faddl
jne
jb
dec
cwtl
rolb
cmp
in
insb
mov
add
sbb
mov
add
notb
sbb
jae
mov
add
sahf
add
and
imul
push
mov
jbe
movsl
inc
cmp
jg
mov
cwtl
mov
pusha
push
hlt
sahf
sbbl
pop
add
mov
pop
inc
mov
js,pt
out
and
das
jne
add
sbb
into
add
xchg
adc
xchg
push
add
pop
sub
and
fidivrl
mov
cli
inc
arpl
jb
addr16
out
sbb
jmp
push
cmp
je
jmp
icebp
data16
push
pop
lcall
sub
mov
int
add
jns
fwait
mov
push
mov
js
xor
insl
or
adc
mov
repz
mov
outsl
or
push
push
inc
xor
fstps
and
movsb
inc
jmp
jl
fnsave
scas
jg
and
push
and
pop
jb
clc
pusha
sti
mov
inc
js
inc
es
or
inc
pop
inc
mov
push
cmpsl
lea
xor
dec
sub
shlb
xor
pop
jmp
push
sub
dec
pop
mov
imulb
lret
test
je
or
cwtl
dec
ret
lds
add
ljmp
xor
mov
xchg
xlat
jg
fildll
cmp
push
movsb
push
push
xor
push
sub
enter
jo
aas
or
mov
sbb
and
fs
and
cmovbe
cmpl
notb
aas
and
stos
jne
movl
addr16
fiadds
mov
mov
adc
movb
pop
pushf
adc
negl
fadd
add
xor
in
sub
pop
pop
imul
sub
jae
out
ret
call
sbb
or
xor
fsubrl
mov
movsl
les
insl
or
inc
clc
jmp
xchg
xchg
fimuls
sbb
pop
jne
pop
test
adc
dec
out
or
call
je
add
je
leave
push
fsubs
jne
stc
sbb
adc
add
fistpl
hlt
popa
idiv
push
std
cmp
adc
or
push
or
inc
ja
addr16
insb
jne
test
jns
ret
cli
add
lahf
nop
hlt
jmp
push
mov
lock
sub
insl
mov
adc
adc
clc
sub
movsb
ror
push
mov
aaa
mov
inc
adc
sbb
outsl
jmp
outsl
sahf
sbb
push
or
sbb
and
adc
cmp
mov
pop
inc
lret
loopne
add
jle
cli
adc
movl
roll
setl
js
es
add
btc
add
mov
ret
pop
cmp
lods
rolb
ret
rclb
jne
je
or
adc
fwait
jnp
clc
pop
cmp
push
or
mov
add
das
sbb
adc
fmull
add
andl
ret
imul
subb
cmp
shlb
and
scas
mov
test
testb
test
mov
cwtl
aam
sbb
or
jmp
or
add
loop
pop
loopne
iret
ja
xor
mov
and
std
add
add
test
jg
or
and
cli
clc
rolb
sub
fistl
or
xor
inc
js
mov
ja
rorb
sbb
lock
xor
sub
fmull
xor
fadd
dec
or
xchg
mov
inc
add
mov
lret
push
out
lods
cmpl
push
cmp
dec
pop
push
movl
lea
shlb
push
adc
testl
xor
hlt
or
push
call
enter
jbe
jns
mov
sbb
jo
mov
cmp
outsb
pop
in
adc
jo
push
sti
xchg
stos
push
jb
sbb
ljmp
arpl
or
or
ret
add
cmp
or
rorb
adc
push
rolb
or
aaa
mov
mov
adc
inc
or
pop
idivl
sub
or
outsb
les
mov
rorb
and
scas
push
inc
lea
xor
xchg
cmp
pop
loopne
jp
jne
lock
shrb
sub
add
add
popa
fisttps
sbb
jae
sbb
clc
cmp
jne
mov
sti
jmp
lea
pop
orl
fbld
aam
inc
lods
or
xchg
fiaddl
clc
push
out
or
add
outsb
or
or
and
push
mov
mov
push
ret
xor
sbb
gs
push
pop
int3
or
cmp
jmp
sbb
dec
xor
or
clts
mov
mov
pop
and
mov
mov
or
adc
and
into
stos
aad
mov
js
nop
fcoms
lcall
shrb
fstp
push
or
jg
aaa
pop
insb
mov
mov
jbe
xor
int3
jbe
push
ret
adc
inc
or
jp
or
xorl
xchg
inc
cmp
mov
add
push
xchg
sub
loope
add
push
add
icebp
jno
dec
add
ds
fdivl
fucomp
imul
test
ret
rcll
fcom
jl
jge
xchg
xor
push
push
xchg
pop
jnp
movsb
jne
iret
inc
push
pop
cmp
out
mov
xchg
push
scas
xor
push
inc
xchg
mov
mov
or
je
clc
mov
pop
fwait
pop
jle
inc
cld
adc
test
and
push
and
popf
add
sbb
loope
dec
cmp
add
dec
sbb
fimull
push
push
push
clc
cmp
aad
or
mov
mov
adc
pop
xchg
and
or
movsb
push
lock
jne
fwait
mov
pop
jmp
inc
dec
lock
loopne
or
add
lock
sub
addr16
clc
push
in
or
in
xor
cld
jg
fildl
cmp
sub
nop
bound
rorb
sbbb
arpl
adc
incb
das
repz
inc
cld
pop
mov
lock
inc
lock
sbbl
pop
jne
jae
lahf
or
mov
mov
mov
pop
clc
and
addr16
sub
clc
sbb
ret
cmpsl
cmovl
sbb
or
inc
jnp
sub
add
cmp
mov
mov
test
and
movsb
lods
adc
int3
insb
push
and
jle
add
fs
and
add
inc
sbb
mov
sbb
outsb
add
inc
aad
add
mov
cmp
pop
jb
push
mov
add
or
fwait
sti
out
dec
push
orl
jmp
pop
jns
scas
pushf
or
inc
into
dec
fdivs
xor
adc
and
shll
inc
js
lret
shlb
and
sti
pop
sbb
jo
xor
cli
hlt
dec
in
repz
lods
mov
lret
or
nop
out
sub
mull
or
cmp
mov
jge
sub
cli
inc
scas
inc
testb
or
or
call
inc
cmp
and
sbb
outsl
in
int
sub
add
movhps
sti
sub
mov
cmp
add
mov
shrl
outsb
jae
mov
mov
or
and
sbb
popa
dec
mov
notl
les
clc
and
dec
enter
xchg
lds
sub
adc
add
inc
mov
gs
xor
dec
add
in
jmp
mov
iret
sub
mov
notl
cwtl
push
mov
cs
pop
cmpsb
jmp
ret
or
xchg
or
jmp
and
dec
add
sub
popa
push
rorb
xchg
fdivr
jmp
in
adc
or
sbb
testl
lret
xchg
sub
imul
adc
int
cmc
stos
lea
in
push
addr16
fcomps
adc
pop
int
jmp
jne
mov
sbb
adc
test
insb
sub
sub
mov
ret
push
jmp
aad
xor
je
push
mov
daa
inc
pop
or
imul
sbb
sub
lahf
sbb
mov
fiadds
jne
adc
int
adc
test
out
mov
add
mov
mov
cmp
or
jmp
and
add
jo
jnp
sbb
inc
inc
or
std
adc
loopne
adc
ret
push
push
jbe
into
mov
cmp
jnp
mov
in
xor
xchg
repz
mov
add
add
sub
jg
sub
inc
cli
sarl
sarl
mov
inc
rep
jmp
mov
leave
jmp
push
mov
mov
aas
ret
fstpl
addl
je
fstpl
jmp
mov
xchg
add
jb
add
lea
add
cs
lea
or
or
xorl
mov
adc
bound
ja
lock
and
or
or
pop
jle
mov
mov
je
sar
js
imul
sub
movsl
mov
mov
lea
in
pusha
mov
sbb
cld
scas
xor
push
xchg
or
lcall
sub
dec
add
sub
lock
push
dec
sub
jae
roll
jmp
lret
lea
cmp
pop
pop
jb
pop
cmp
add
addb
addr16
outsb
mov
les
sbb
sbb
inc
mov
mov
cmp
mov
ja
and
or
jae
test
push
sbb
test
or
mov
jmp
jmp
hlt
dec
movsl
inc
cmp
dec
mov
movzwl
das
push
mov
shl
add
or
aam
ljmp
pop
aas
sub
fistpll
xor
mov
push
inc
je
iret
repnz
je
mov
push
sub
je
and
negl
lret
je
pop
je
xor
daa
adc
inc
mov
std
in
sub
adc
ja
cmp
ja
lea
add
add
sub
mov
int
imul
push
neg
jle
js
insb
or
pop
sub
jmp
inc
and
pushf
mov
fdecstp
jbe
filds
jb
dec
and
pop
popa
pop
notl
add
push
leave
into
add
ret
lret
aad
add
testb
or
or
cmpsb
in
inc
mov
sbb
dec
sti
lcall
sub
loop
std
jge
adc
fldt
call
pcmpeqb
mov
das
add
popa
xlat
adc
xor
push
jge
jge
inc
stc
inc
sahf
sub
stc
sbb
adc
push
fstp
fldt
fldz
lods
rorb
pop
xorb
aas
mov
push
in
push
cli
or
or
ret
setg
in
and
adc
mov
xchg
sbb
imul
stc
add
mov
and
movsl
aam
and
cld
sub
test
out
sub
pop
jecxz
cld
int
incb
leave
sbb
mov
cmp
fidivrs
mov
mov
mov
bound
cmpb
es
das
jmp
xlat
fadds
outsb
xor
xchg
push
or
push
push
jg
in
int3
into
sbb
rorl
mov
push
pop
test
enter
mov
inc
cmp
decl
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
incl
inc
xchg
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
call
fistpl
js
inc
call
mov
cmp
or
mov
xchg
test
stos
pop
out
sub
imul
divl
jl
xor
cmp
call
inc
inc
mov
push
inc
mov
push
sbb
sarb
repnz
incl
incl
nop
fistl
pop
stos
clc
scas
adc
inc
pop
lcall
repnz
aam
imul
loope
jp
iret
inc
bound
ds
push
call
scas
mov
pop
or
addl
cmp
xor
ljmp
pop
add
mov
mov
popa
mov
pushl
stc
repz
mov
subb
and
and
push
pop
aad
bound
xor
and
mov
lods
xchg
jmp
and
jne
push
or
stc
or
mov
mov
hlt
movzwl
add
xor
push
mov
push
subb
pop
xor
pop
mov
xor
xor
add
adcl
add
dec
pusha
adc
mov
jmp
jmp
sub
jp
aas
or
mov
incl
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
and
imul
jne
fninit
fldcw
ret
add
fstpt
or
rorl
xor
mov
clc
mov
adc
icebp
sub
pushf
and
add
arpl
imul
mov
pop
sbb
mov
jnp
fdivs
test
or
scas
add
push
and
or
or
xor
popl
sbb
mov
jle
in
aaa
jo
mov
or
push
cld
pusha
sti
in
add
mov
xor
inc
dec
cltd
pop
cwtl
jo
bound
mov
fcoml
inc
sbb
in
cmp
je
mov
movsl
mov
jae
incl
mov
mov
or
fimuls
sbb
jne
jne
xchg
push
mov
mov
push
rorb
jne
xor
fdivrs
cmp
sahf
pushl
pop
jb
movswl
xchg
and
add
xor
add
mov
sbb
xchg
adc
inc
test
daa
push
pop
test
push
lock
mov
cmp
dec
and
sub
adc
rcll
sub
mov
mov
out
dec
sbb
lea
and
les
int3
outsb
xchg
cmp
cli
pop
jae
setne
leave
fdivrs
pop
sbb
repnz
call
ret
pop
out
stos
inc
mov
cmp
sti
inc
pop
mov
push
jb
jo
jne
pop
pop
stos
in
or
jne
or
je
adc
mov
push
lds
jne
xor
xchg
adc
push
add
dec
xor
push
push
push
xchg
sbb
push
jle
mov
ret
ret
adc
sub
jne
data16
mov
pusha
ret
pop
out
sub
mov
xchg
push
mov
dec
add
pop
gs
pop
mov
mov
cmp
aaa
jg
repz
pop
mov
orb
xchg
push
leavew
or
pop
test
xchg
es
dec
pop
fs
mov
icebp
pop
lods
pop
inc
popa
push
nop
mov
push
popa
jl
push
hlt
xor
clc
sbb
sbb
test
or
inc
add
xchg
mov
xchg
sub
es
mov
mov
push
and
bound
pushf
add
nop
pop
adc
cmc
or
testl
jae
jg
fs
pop
ja
mov
push
xchg
cli
in
push
cs
add
mov
push
push
sbb
fisttpll
addr16
add
fstpt
fs
pop
push
push
mov
push
adc
sbb
jmp
lea
fucomp
or
mov
roll
fwait
xor
pop
add
cmp
sub
adc
loop
ficompl
adc
sbb
testl
xchg
xorl
and
dec
adc
outsb
add
test
dec
pop
xor
adc
icebp
arpl
cmp
out
or
jg
dec
cmpl
je
movsb
xor
jbe,pt
ja,pn
imul
add
add
stos
or
push
pushf
jp
or
jp
addr16
or
add
adc
lcall
je
adcl
sbb
push
mov
xchg
push
loopne
stos
sub
sbb
sub
mov
add
add
add
hlt
mov
loop
add
int
add
push
arpl
cmc
jge
jnp
adc
stos
mov
sbb
dec
mov
or
das
je
mov
mov
dec
inc
add
aaa
inc
push
cwtl
add
or
push
mov
push
sbb
insb
and
clc
dec
call
push
push
inc
pop
or
mov
insb
mov
pusha
pop
xor
fnstenv
dec
lea
dec
adc
inc
or
pusha
add
lahf
rolb
call
cli
outsl
adc
addr16
adc
fsubs
push
jp
dec
ss
in
cmp
fs
lea
incl
jmp
ret
xor
jmp
insl
sbb
leave
ret
das
int3
sti
dec
les
add
je
cmp
data16
adc
cvtps2pi
dec
jmp
fistps
rolb
call
aad
cmp
outsl
fcomi
je
sub
add
cmp
outsl
daa
cmp
mov
jmp
mov
es
jmp
mov
jmp
mov
mov
xlat
jmp
mov
or
decb
mov
jmp
mov
arpl
lock
xor
enter
pop
ret
inc
or
push
movb
seto
je
bnd
xor
and
pop
int3
cmp
push
loopne
xchg
shl
inc
sbb
shll
or
mov
and
lret
sub
out
xchg
or
fstps
push
lods
pop
pop
xor
lds
add
push
outsb
in
pop
hlt
scas
cmp
push
pop
mov
or
sbb
cmp
fildl
sub
das
lock
stc
cltd
or
add
mov
mov
xor
inc
or
push
mov
add
rorl
cmp
dec
mov
xchg
inc
fcoms
push
xchg
and
xor
jmp
inc
or
enter
mov
in
jno
jb
outsl
mov
sub
jle
insb
nop
dec
imul
add
imul
or
cmp
jg
or
rorl
movl
sbb
cmp
cmp
rcr
inc
sub
sub
jb
mov
add
and
pop
mov
loop
pop
mov
lea
inc
push
mov
add
mov
add
dec
jne
pop
pop
mull
fildl
add
dec
pop
sbb
or
repnz
in
gs
pop
mov
ret
mov
add
insb
filds
adc
adc
sbb
dec
rcr
pop
lock
mov
fldcw
push
pop
xor
add
dec
sbb
iret
sahf
lock
neg
sbb
inc
pop
pop
sbb
call
pushl
add
mov
mov
push
daa
insl
sub
jg
jl
jo
dec
jo
push
cmp
roll
adc
cmp
mov
fcmovnb
xor
push
icebp
push
stc
pop
jl
add
push
repnz
pop
sub
xor
shrl
and
ds
push
mov
add
or
mov
inc
xchg
cmpb
mov
cmpl
push
pushf
push
lea
ljmp
or
inc
sub
add
enter
cmp
push
pop
add
mov
or
sbb
jbe
subb
adc
outsl
push
mov
imul
out
mov
sahf
lods
mov
push
jl
add
dec
lods
andb
or
sti
addb
test
mov
imul
sub
mov
frstor
sub
pop
cmc
andb
jecxz
mov
das
lock
cli
clc
dec
jl
lock
fldt
and
movsb
inc
clc
inc
pop
leave
fldl
cmpsl
insl
adc
sbb
add
sbb
xor
or
in
dec
jne
jnp
mov
scas
aas
and
sbb
adc
sub
dec
outsb
lock
inc
out
jmp
cmp
sbb
pusha
filds
or
pop
mov
sarb
loop
ljmp
push
adc
add
outsl
sub
mov
lcall
mov
int3
mov
mov
mov
ret
addr16
stc
mov
jne
lahf
mov
pushf
sbb
add
pop
mov
inc
scas
sub
push
push
add
jo
lock
out
or
or
push
cmp
std
mov
sar
les
outsb
or
insb
jg
clc
cmp
fbld
pop
lea
cmp
sub
out
push
imul
std
push
cld
out
mov
adc
sub
mov
add
push
shll
pushf
in
pop
pop
negb
xor
push
jl
inc
sub
jo
bound
xor
pop
jecxz
ficoms
push
cmp
stc
cmp
lret
add
outsl
outsl
sbb
je
add
mov
mov
pop
fcmovnb
push
out
sub
jmp
push
cmp
and
sub
add
xor
jmp
mov
mov
add
add
cmp
mov
fldenv
mov
inc
dec
nop
push
sub
mov
roll
pop
mov
ss
add
jne
cmp
int
cld
ret
sbb
out
test
mov
jns
pop
mov
add
cmpsb
mov
das
inc
fldt
mov
adc
repz
fldt
bound
insb
stc
iret
inc
popa
imul
adc
cmp
mov
inc
mov
push
rorl
pop
inc
inc
cld
xor
mov
sub
push
pop
dec
mov
cli
bound
cltd
fcmovu
add
pop
pinsrw
lds
mov
jmp
loope
cmp
push
xor
mov
scas
ss
or
fidivrs
cmp
cld
dec
out
add
subl
pop
fldcw
push
or
cld
mov
add
dec
ret
outsl
rcr
or
sbb
insb
push
or
into
mov
jmp
dec
pop
or
xchg
dec
pop
xchg
jne
add
pop
lea
jmp
jnp
xlat
adc
push
imul
jmp
shlb
add
push
shr
mov
std
mov
pop
cmp
jne
dec
je
in
add
or
fsubr
mov
or
loopne
or
pop
or
and
aam
das
lret
cmp
cmp
jne
push
adc
ret
add
jmp
pop
mov
pusha
jmp
push
adc
or
movsb
sar
shr
shr
or
pop
xor
xchg
mov
adc
je
push
out
inc
stos
sbb
push
dec
pop
or
icebp
in
dec
inc
add
rolb
out
into
pop
dec
xor
mov
mov
cli
mov
sbb
fidivrl
sub
cmp
mov
ret
pop
int
jp
adc
jmp
call
pop
ds
lea
fcomip
inc
inc
mov
push
jp
js
mov
inc
call
jle
int3
adc
scas
inc
popa
push
out
in
pop
fbstp
pop
jg
cmc
packssdw
js
call
pop
sbb
mov
jne
cs
ret
mov
mov
in
cld
pop
xor
xchg
jmp
lret
mov
mov
out
mov
cli
cld
cmp
jl
icebp
scas
les
or
pop
stc
rorb
dec
fucom
incl
dec
push
push
pop
pop
ud0
in
in
fs
push
push
pop
stos
stos
inc
in
add
jb
repz
sbb
ds
push
jl
mov
jb
in
xor
dec
cs
pop
pop
jo
pop
xor
sub
xor
and
js
xor
xchg
or
movsl
pop
test
daa
int3
pop
pushl
xchg
adc
out
and
or
cmc
cmp
mov
add
fbld
inc
call
add
inc
imul
sub
leave
dec
shll
je
sbb
out
cvtps2pd
or
inc
mov
pop
mov
cmp
jge
pop
dec
ja
xchg
cmp
dec
dec
decl
leave
sub
cmp
and
mov
shrb
cmp
adc
adc
mov
adc
or
push
pop
movsb
ficoms
fadds
add
mov
xor
or
xchg
je
mov
xchg
jg
mov
insl
lds
loope
adc
sub
xor
add
jg
sbb
mov
notb
dec
xlat
ret
push
add
push
inc
cmp
and
je
cmp
lea
je
jo,pn
dec
cmp
leave
cmp
cmp
mov
movsl
dec
clc
jmp
or
dec
add
or
adc
jmp
push
mov
mov
bound
pop
cs
jg
scas
aam
sbb
pop
icebp
sbb
add
push
add
rolb
mov
or
pop
or
mov
mov
adc
decl
mov
loopne
loope
and
xor
pop
jbe
test
ficompl
aaa
stos
inc
push
pop
lods
fildl
data16
adc
mov
pop
mov
sbb
sbb
dec
jmp
adc
cmpsl
mov
or
jmp
rolb
mov
jmp
inc
add
in
imul
sbb
sbb
add
loopne
jmp
popf
mov
dec
adc
xlat
inc
push
loope
unpcklps
outsl
adc
add
sub
dec
test
add
sarl
adcb
ret
sbb
inc
pop
mov
jl
stc
sub
add
jns
jns
je
or
dec
or
jo
orb
mov
pop
sbb
and
dec
cmpsl
jmp
adc
cmpl
insb
insb
lea
enter
or
push
add
je
fucomi
popa
or
cld
cmc
cmp
ss
imul
add
cmp
sbb
jns
and
test
pop
adc
inc
lahf
notb
or
cmc
dec
jne
outsl
sbb
call
lahf
and
psadbw
nop
inc
inc
sahf
popa
jge
pushf
mov
lock
cmc
lods
and
pusha
dec
jne
push
cmp
xor
fsub
jmp
sar
adc
adc
fiadds
cwtl
cmp
sbb
or
rcl
loop
ja
std
add
lds
ljmp
xchg
clc
les
mov
push
aaa
cmp
add
sbb
jnp
cmp
in
gs
test
adc
adc
xor
or
cmpsb
lock
mov
out
test
les
cmp
and
mov
ss
pop
sub
cwtl
mov
pop
mov
push
dec
dec
cmp
inc
inc
sub
scas
loopne
adc
jp
mov
pop
daa
in
dec
mov
inc
sub
fcmovnb
push
insb
lock
outsl
sbb
mov
out
mov
and
inc
dec
cmp
xor
pop
and
cmpl
or
cmp
cmp
mov
add
dec
jo
mov
push
xor
cmp
imul
mov
loopne
xchg
in
cmpb
je
push
mov
or
dec
cmpl
sti
sbb
cmp
sub
cmp
jle
xchg
sbb
outsl
icebp
sub
scas
add
iret
sub
push
cmp
and
mov
and
mov
dec
imul
arpl
adc
lock
add
or
pop
dec
sub
inc
push
lods
mov
mov
mov
push
in
push
mov
sbb
sbb
pop
loopne
es
and
call
mov
xchg
add
sbb
shrl
xlat
pop
add
add
cvtps2pd
hlt
add
pop
or
imul
in
or
sbb
xor
push
aaa
lea
adc
fsubr
pusha
lret
dec
inc
jmp
push
lds
in
rclb
bound
jmp
and
xchg
lea
adc
rcrl
dec
daa
sub
push
xchg
shr
mov
lds
int
inc
jle
dec
roll
pop
sbb
je
adc
add
sbb
mov
inc
clc
pop
addr16
mov
push
xchg
lock
pop
mov
inc
sbbl
fiadds
dec
roll
in
ja
decb
dec
add
inc
mov
inc
mov
ret
les
icebp
aas
sub
ljmp
cmp
dec
je
in
and
hlt
inc
pop
xor
mov
sub
jg
sbb
lcall
or
add
pop
rolb
fimuls
xchg
mov
lea
mov
push
mov
mov
test
cmp
aam
stos
pop
dec
or
andl
insl
andb
jno
rolb
aam
inc
push
jo
mov
dec
mov
cmpsb
inc
push
jne
push
dec
ljmp
sbb
cmp
mov
push
or
cmp
pop
js
pop
inc
or
aas
or
cltd
es
and
cmp
nop
mov
sbb
inc
pop
cmc
cmp
mov
icebp
xor
leave
sub
lea
imul
jo
inc
imul
test
jge
sub
leave
ret
inc
cmp
adc
test
int3
fsubl
sbb
inc
stos
decb
adc
mov
ja
pushf
pop
sub
cs
jle
jg
movb
dec
push
mov
xchg
int
pop
inc
pop
aas
cmc
mov
loop
dec
in
loopne
dec
push
adc
imul
pop
shlb
gs
xor
js,pn
push
fs
insb
add
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
adc
fdivr
shrb
js
sbb
movb
addr16
outsb
add
push
insb
push
add
xor
je
sbb
jb
cmp
adc
ja
inc
test
call
cmpsb
out
mov
jl
sub
addr16
outsb
out
rcrb
sub
int
shlb
push
clc
std
insb
vmwrite
push
push
repz
lock
add
in
adc
mov
jge
push
or
xor
insl
add
imulb
or
lcall
test
mov
cmp
add
ss
pushf
sbb
and
in
shlb
popa
xor
cmp
fidivrl
xchg
add
std
jle
and
jb
je
xchg
repz
sub
pushl
pop
pusha
addr16
outsl
data16
popa
jb
cltd
sti
lea
jmp
arpl
gs
sbb
or
and
inc
mov
xlat
repnz
jmp
xchg
cld
pop
cmpl
mov
call
fbld
add
jne
clc
adc
pop
das
aas
clc
stos
add
or
inc
sbb
mov
clc
jle
adc
mov
sarb
lock
mov
xor
lds
push
push
inc
add
jne
pop
xor
lods
imul
xor
into
fsubr
inc
or
mov
sbb
popf
add
mov
xor
ret
mov
jnp
push
int
jp
sarl
push
push
mov
xchg
mov
in
lds
sbb
xchg
divb
mov
lds
or
out
inc
test
pause
mov
cmp
cmp
pop
add
xor
jp
push
and
imul
push
nop
fcompl
cmp
popa
rcrl
call
adc
sbb
pop
mov
mov
insb
add
add
in
push
mov
je
push
fcompl
sub
shll
mov
add
push
mov
jnp
lods
mov
add
cmp
and
cld
inc
aaa
pusha
sbb
xorb
or
pop
pop
fs
cwtl
cmp
or
or
fadds
ret
or
sub
push
pop
push
jl
add
xlat
test
or
push
xchg
cld
push
pushl
sbb
mov
dec
inc
cmp
ja
mov
inc
jmp
cmp
fnstenv
lea
outsb
cld
ja
fcmovb
test
or
lret
loopne
sbb
or
and
or
pop
lret
jbe
loop
lret
add
jmp
in
mov
xor
and
shlb
sbb
or
cmp
mov
xchg
fbstp
add
mov
xor
sbb
or
add
sbb
jecxz
push
loopne
inc
repnz
in
lods
mov
push
pop
imul
shr
cld
sub
sub
inc
std
push
std
add
jg
or
inc
test
xchg
xchg
jae
and
je
push
mov
shlb
mov
shlb
mov
and
add
jp
loope
or
lret
and
aad
xchg
dec
cld
mov
test
outsb
jae
ja
or
inc
dec
jmp
cmp
dec
jne
jb
dec
push
movl
fwait
jge
inc
pop
cmpsb
ret
xor
push
or
adc
jb
pop
idivb
xorb
sbb
or
mov
adc
inc
subl
xor
sbb
js
adc
xchg
pop
test
pop
or
clc
adc
mov
int3
or
cmp
pop
adc
xchg
or
aad
dec
aaa
add
or
in
pusha
cwtl
fwait
movsb
shlb
sbbb
es
mov
stos
jnp
das
fs
orb
inc
dec
adc
fsub
pusha
mov
inc
dec
enter
inc
inc
xor
xchg
xor
insb
xor
pop
and
pop
cs
fst
cmpsl
adc
inc
js
mov
jb
pop
dec
test
cmp
mov
sub
sub
inc
cmp
icebp
inc
pop
aam
pusha
enter
push
rorb
sub
add
das
fdivl
jg
pop
sub
icebp
punpckhdq
lea
push
push
jbe
cwtl
lock
mov
jnp
stos
sbb
xchg
mov
pushf
test
mov
pop
and
jge
adc
push
jle
xor
add
mov
pop
push
pusha
cmp
fwait
insb
pop
in
jae
or
pop
cmp
push
clc
pop
subl
loopne
or
add
sbb
add
hlt
dec
clc
int3
sub
or
jbe
in
or
or
jb
pop
into
inc
in
or
push
testb
mov
fisubs
sub
stos
pop
xchg
xchg
jbe
dec
outsb
jae
sub
xchg
add
mov
insb
adc
cmp
add
add
xor
pop
ror
call
add
aaa
mov
push
scas
cmp
sbb
cmpl
add
add
dec
pusha
push
pop
pusha
pop
adc
push
mov
pop
cmc
and
mov
arpl
fs
sub
add
arpl
sub
lahf
int3
adc
hlt
mov
ret
mov
jo
lahf
cld
mov
ds
out
shll
pushf
dec
or
pusha
pop
add
popf
jne
mov
push
test
dec
les
ds
xchg
jae
daa
ret
pop
repnz
inc
pop
fisubrl
and
push
cwtl
add
nop
shll
insb
push
adc
sbb
addb
pusha
sbb
pop
pop
push
fs
inc
push
push
dec
dec
nop
inc
push
sbb
inc
push
sbb
xor
sbb
sub
sbb
sbb
adc
nop
inc
push
adc
leave
inc
push
sbb
cld
addl
xor
and
in
fs
xchg
cmpl
sbb
sbb
pushf
push
sbb
xchg
nop
mov
fs
inc
mov
jl
je
inc
push
sbb
loopne
inc
push
sbb
aam
sbb
int3
enter
pusha
inc
aas
mov
jo
sbb
add
cli
fdiv
incb
icebp
repnz
repz
cmc
and
clc
push
sbb
leave
stc
add
sti
cld
sbb
std
jmp
push
loopne
loop
inc
push
sbb
in
inc
push
sbb
call
jmp
fs
inc
in
out
out
fs
inc
push
rcl
rclb
aam
inc
push
sbb
fadds
sbb
fcmovu
fcompl
fs
inc
fstp
fbld
push
rol
nop
inc
push
sbb
lds
sbb
enter
nop
leave
lret
sbb
int
iret
fs
inc
push
mov
mov
inc
push
sbb
sbb
mov
mov
fs
inc
mov
inc
push
mov
push
sbb
sbb
test
dec
xchg
test
inc
repnz
je,pn
pusha
je
and
and
rorl
and
ss
les
add
sbb
xchg
add
inc
adc
gs
imul
repnz
xor
fsubs
cmpsl
es
cmovne
popa
jo
pmulhuw
add
xchg
pop
call
ljmp
je
dec
gs
outsl
jb
filds
dec
pop
fs
bound
or
outsb
pop
inc
jb
pop
pushf
push
sub
xchg
or
insb
xlat
hlt
push
stos
in
inc
hlt
push
enter
adc
arpl
pop
cmpl
mov
push
lods
ljmp
cmp
arpl
inc
inc
imul
outsl
nop
add
lods
inc
pop
and
fs
fxch
das
mov
gs
push
pop
mov
add
or
dec
jbe
data16
js
in
shrl
das
pop
pop
add
dec
sahf
leave
mov
mov
nop
adc
adc
lcall
sbb
inc
enter
jo
push
push
test
mov
inc
and
imul
test
sbb
addr16
test
pop
nop
add
test
and
push
outsl
imul
pop
pop
or
in
clc
popa
inc
or
inc
popa
jae
outsl
sub
add
pop
sub
inc
inc
mov
xor
aas
add
test
lret
adc
arpl
jmp
pop
xchg
push
mov
mov
and
in
js
jb
insb
gs
cmp
push
sbb
push
xchg
arpl
nop
cwtl
pop
cwtl
pop
push
push
inc
or
push
inc
ret
or
push
pop
adc
add
lahf
or
inc
jbe
imul
ret
mov
or
or
lods
pop
lods
mov
or
push
fdivs
and
lods
jb
nop
or
or
push
adc
mov
movl
add
xchg
cmp
push
popa
data16
aam
adc
insb
adc
add
aaa
xor
scas
dec
pop
or
push
and
clc
and
inc
jb
scas
add
in
jmp
pop
inc
cli
in
sbb
mov
jb
mov
loop
sbb
add
js
call
cmp
jl
repz
jb
and
aam
jg
shll
lea
xor
push
mov
jnp
sbb
push
loopne
sbb
insb
cmp
xchg
push
icebp
jge
xor
adc
loopne
pop
cmp
mov
jne
push
fisubs
insb
jne
je
push
insb
loope
mov
test
arpl
popf
imul
xor
ret
adc
repz
mov
add
daa
mov
lret
mov
mov
xor
orl
sbb
pop
insb
lret
icebp
sub
insb
int
mov
leave
hlt
into
test
mov
movb
or
or
sbb
fdiv
sub
movb
les
mov
lods
daa
push
cmp
ja
sub
add
ljmp
or
rorb
pop
mov
push
enter
filds
jb
pop
clc
pop
sub
push
cld
mov
cmp
jbe
cmp
repz
je
mov
add
add
or
push
insb
mov
out
and
sti
je
jp
ret
add
sub
pop
or
sub
push
pop
dec
adc
lret
aam
dec
test
xor
aas
call
mov
push
popf
or
popa
push
lds
mov
fdivs
push
xor
rolb
es
movnti
in
or
or
mov
cmp
add
push
jno
mov
pop
insb
xor
pop
ljmp
cli
idiv
dec
into
add
repz
cmpb
jbe
or
mov
pop
mov
or
pop
dec
adc
clc
xor
loope
lret
inc
lods
cmp
adc
pop
icebp
test
or
jne
sarb
inc
mov
and
push
ret
mov
shl
icebp
dec
and
cmp
jb
pop
pop
mov
shl
incl
sub
jbe
add
mov
sub
jmp
mov
dec
jne
xor
push
mov
sub
xor
push
aaa
dec
or
repnz
dec
insb
mov
mov
incl
and
jo
pushl
xor
loopne
out
pop
test
scas
inc
xchg
lods
movb
dec
inc
lods
pushl
add
jl
add
cmp
orw
sub
mov
call
pop
in
andl
fildll
idivb
faddp
sub
fildll
filds
rorl
filds
adc
mov
xor
lahf
push
fbstp
rcrl
loope
xor
lea
ffree
ffree
pop
ljmp
xchg
rcl
out
and
push
push
jecxz
icebp
js
adc
dec
imul
push
jnp
and
push
mov
and
and
lds
cmp
call
dec
add
push
or
add
js
sbb
push
push
or
clc
inc
lahf
jmp
sbb
sub
pextrw
mov
shrb
aam
int3
sbb
mov
fs
test
test
push
inc
sahf
add
emms
push
jb
xor
add
lods
loopne
cmp
inc
decl
test
jl
push
insl
sub
mov
push
aas
mov
push
sbb
jecxz
addb
push
lods
sbb
lock
jae
xchg
mov
fldt
fcomps
setne
jmp
sbb
mulb
mov
jmp
or
pop
xor
mov
add
and
add
sbb
iret
add
or
jmp
push
fldcw
sub
sub
adc
adc
jno
adc
jmp
adc
cmp
addr16
xchg
sub
jbe
nop
mov
push
or
mov
popa
or
adc
mov
pop
jns
push
push
xchg
jae
outsl
dec
je
xorl
or
es
or
pop
arpl
insb
jp
inc
jae
and
mov
cmp
clc
mov
cmp
ja
and
xor
test
ljmp
stos
fsubl
ljmp
rolb
out
cmp
ja
jl
rorb
loop
loope
inc
ja
mov
mov
or
push
push
imul
inc
sub
push
xor
xor
pop
xchg
pushf
push
push
cmp
aas
js
mov
lea
inc
lods
push
xor
fwait
sbb
mov
inc
fdivs
push
pop
sub
or
iret
push
jne
or
push
push
xor
testb
cmp
rorl
lahf
test
inc
cld
insl
pusha
mov
clc
pushl
adc
loope
jo
mov
movsb
clc
movsb
clc
xor
clc
fwait
mov
mov
sbbl
adc
iret
dec
addr16
negb
sti
add
cs
and
add
dec
dec
sub
loope
shll
mov
and
pop
leave
jle
jge
and
pop
jne
lret
dec
sbb
in
jnp
mov
jp
push
jns
iret
shll
adc
fcmovu
push
mov
push
in
sbb
test
rcrl
out
add
mov
push
push
fwait
adc
in
inc
add
iret
push
or
sub
add
sub
or
adc
packsswb
int3
mov
in
in
cld
and
mov
xor
lods
xor
call
out
cmp
sub
inc
repnz
insb
cltd
add
adc
rcll
jno
inc
std
ljmp
sub
fists
push
push
inc
call
push
add
or
sub
ret
pop
aam
and
sbb
add
lret
mov
mov
cmp
cmp
loope
inc
pop
pop
pop
ret
and
add
outsb
pop
mov
pop
or
and
repnz
popa
daa
pop
xlat
mov
xor
or
ljmp
xchg
test
push
and
mov
push
push
cli
cli
ljmp
je
jo
int3
jmp
sub
mov
jmp
or
jne
pop
ret
mov
inc
inc
sti
lcall
leave
hlt
push
rorl
cs
mov
shrd
jbe
inc
jbe
push
int3
ficoms
mov
enter
int3
inc
sbb
in
jne
and
jecxz
xchg
or
mov
aad
cmp
sub
adcl
pushw
test
inc
pop
addr16
fidivl
pop
repnz
pop
mov
pop
jbe
mov
std
enter
dec
cmp
fisttps
mov
hlt
cmp
add
sbb
jecxz
and
add
jl
test
or
movsb
dec
sub
mov
mov
push
or
sbb
rcrl
movsb
pusha
inc
jnp
filds
sub
insl
dec
sub
into
jmp
add
clc
or
jo
cmp
jmp
or
push
sbb
gs
sub
push
out
mov
incb
mov
cmp
jne
adc
faddl
imul
xchg
mov
jmp
or
mov
sub
ss
mov
aam
popa
mov
mov
jne
cmpb
sub
mov
or
jae
rcrl
movsb
xchg
mov
mov
rep
or
sbb
mov
push
call
push
inc
sub
jb
cmp
ja
imul
rol
jmp
in
daa
cmpsb
insl
in
and
adc
pop
jle
mov
in
ret
je
mov
cwtl
leave
ret
and
mov
mov
insl
mov
lea
mov
dec
push
insl
or
or
and
sarl
add
in
lcall
xor
xlat
xor
mov
testl
lcall
insb
das
xor
fsubrs
shll
and
mov
fdivl
cmp
dec
cmc
dec
mov
insb
add
or
int
push
sub
mov
cmpsl
add
jbe
aaa
adc
sbb
or
mov
jne
lcall
jbe
mov
sbb
add
jmp
mov
into
and
lods
adc
jmp
mov
mov
lret
mov
cld
pop
and
insb
aad
mov
xor
or
add
test
ja
sahf
mov
dec
add
pop
pop
leave
lahf
lds
jecxz
dec
mov
mov
dec
mov
pop
pop
push
leave
mov
repz
aaa
mov
aaa
mov
inc
je
mov
inc
lods
mov
mov
push
inc
je
mov
dec
je
dec
loopne,pt
fcompl
adc
sub
ret
mov
or
inc
jle
push
in
xor
mov
jne
adc
scas
mov
xchg
pop
dec
fmuls
and
movsb
insl
push
xor
scas
fnstsw
sbb
adc
and
pushf
repnz
lahf
cmpsl
or
push
xor
xchg
test
mulb
cmp
or
lret
xlat
aaa
add
ljmp
hlt
rclb
jns
dec
cmpsb
dec
mov
iret
push
mov
jp
into
xchg
pop
sbb
adc
add
mov
xorl
sbb
push
ja
add
fsubrp
dec
filds
dec
sarb
jg
or
cld
movsl
mov
ds
cwtl
dec
cmpb
add
fwait
add
inc
sbb
fcom
add
push
dec
cmp
sbb
das
xlat
add
lea
mov
xchg
push
lods
mov
or
pop
ljmp
push
mov
neg
lcall
mov
insl
jecxz
mov
push
jl
or
push
mov
inc
dec
add
jg
dec
mov
stos
cmp
jne
pop
pop
jae
mov
cltd
mov
mov
pop
cli
mov
jl
or
repz
add
sbb
jecxz
add
testl
sub
aaa
inc
sbb
dec
adc
jb
push
sub
int
adc
idivb
movzwl
sub
icebp
jmp
outsb
dec
lea
mov
dec
repz
mov
jg
je
add
or
mov
clc
mov
lea
sbb
js
or
cld
mov
cmp
in
fs
lock
jg
ja
jg
dec
inc
dec
inc
dec
lods
or
dec
ret
cltd
mov
add
jle
ret
jg
jo
aam
pop
or
sbb
sbb
sbb
stos
orb
rolb
pop
jmp
cmc
inc
inc
in
jge
pop
stos
loop
pop
adc
or
and
sbb
add
push
test
fwait
pop
add
mov
mov
or
cmp
leave
mov
div
in
inc
mov
mov
or
jb
out
lock
push
cli
adc
mov
adc
cmp
jmp
add
testb
dec
scas
div
mov
inc
push
in
add
cmovnp
cli
scas
in
stos
sbb
mov
mov
or
fimull
jne
cs
test
fdivrs
jno
or
xchg
outsb
xchg
add
lret
xchg
mov
fimuls
xchg
movsl
outsl
cwtl
movsl
pop
add
push
mov
cmp
jmp
or
outsl
push
add
loop
sbb
dec
bound
fsubr
lea
sub
sub
popf
idivl
jbe
sub
sub
inc
sub
mov
sub
or
out
jmp
sub
sub
pop
jae
pop
sbb
sub
sbb
mov
addr16
inc
shl
sub
push
inc
or
cmpsl
je
frstor
and
jb
or
movl
je
mov
pushl
and
inc
push
popf
adc
push
fcoml
or
insb
mov
inc
and
mov
mov
cld
clc
adc
call
neg
loope
fstpl
sbb
cld
jmp
fcomp
fstsw
fcmovnbe
sub
add
fidivl
push
out
jne
lea
mov
inc
sub
dec
loope
or
pcmpgtd
inc
shrb
clc
add
jns
dec
fdivrs
or
dec
add
call
jae
orb
xor
js
mov
add
or
in
jmp
mov
mov
fs
mov
mov
je
sti
push
or
mov
subl
dec
out
in
fs
movups
or
rcrl
pop
push
addr16
fiaddl
clc
push
add
test
or
jge
jge
fisttpl
sub
cmpsl
sbb
mov
loopne
jae
dec
add
rorl
fildll
cli
repnz
lods
or
fidivl
test
push
lea
or
xchg
sub
into
and
jne
dec
adc
cmp
enter
adc
cs
lods
int
and
add
movb
aaa
mov
out
aas
jecxz
mov
loope
push
fcomp
mov
add
sub
pmuludq
mov
adc
mov
fclex
fldcw
test
ja
pop
mov
cmp
add
outsl
dec
aad
add
icebp
adc
mov
xor
inc
test
pop
bound
push
cmp
je
adc
mov
mov
inc
push
adc
pop
add
aas
push
pop
in
dec
jne
pop
iret
xorb
add
loopne
aaa
loop
outsl
mov
aas
pushf
fstpt
test
xchg
push
ret
mov
scas
fcmovnbe
ret
xchg
jmp
data16
and
lock
lcall
fsubrs
pminub
xor
jmp
sbb
mov
scas
stc
xchg
sub
inc
imul
popl
cli
hlt
enter
add
test
mov
sub
push
loop
dec
cmp
add
xor
xchg
cmp
mov
add
daa
inc
mov
add
pop
jb
or
mov
sti
sbb
fldt
fstpl
fwait
and
sub
dec
mov
test
add
mov
sbb
and
icebp
test
inc
sub
mov
jmp
lods
inc
jae
divl
or
sub
std
add
scas
leave
push
aam
xor
repz
or
xlat
sbb
add
cli
cmp
inc
stc
inc
cmp
orl
cmp
shlb
out
add
shrb
pusha
ljmp
aad
call
mov
inc
filds
fdivs
fstpl
fwait
jmp
dec
popa
jae
pop
mov
lret
movsb
dec
outsl
imul
aas
es
inc
fcoml
je
cmp
pop
addr16
pop
mov
clc
dec
cmp
fs
aas
hlt
jbe
test
adc
or
cmp
xlat
mov
mov
lret
mov
mulb
cmp
cmp
outsl
imul
jbe
mov
pop
adc
fistl
loop
enter
add
mov
loop
mov
test
jne
push
mov
xchg
add
adc
fisttps
inc
jne
dec
jg
add
das
les
scas
push
incb
pextrw
pop
sbb
orb
subl
push
sub
add
sti
jle
les
cmp
ja
inc
bound
ljmp
pop
cmp
add
inc
dec
test
into
dec
mov
movsl
push
aam
jg
idiv
imul
jnp
xchg
bound
repnz
pop
mov
stc
add
das
or
sub
sub
mov
pop
repnz
inc
xchg
jp
or
dec
call
or
xchg
flds
or
add
sub
ja
mov
pop
inc
orl
pop
call
mov
jne
adc
pop
pop
or
mov
repnz
lahf
lods
mov
mov
lea
decw
sbbl
pop
insb
popa
fs
sub
pop
mov
sub
shl
sbb
sbb
and
fsubs
pop
fsubrl
mov
ret
data16
jnp
mov
enter
dec
mov
testl
or
hlt
inc
jmp
icebp
sbb
lcall
sbb
push
pop
lock
aad
aas
add
xchg
add
mov
sbb
dec
cmp
xchg
clc
lret
aaa
stc
push
mov
fimull
inc
and
mov
in
add
or
push
lcall
or
lret
rcrl
ret
push
fnsave
xor
das
adc
cmp
xor
sub
adc
roll
mov
sbb
and
mov
inc
inc
cmp
and
or
cwtl
sbb
insb
or
leave
cmp
xchg
or
nop
pop
pop
iret
shrl
add
loopne
in
mov
loopne
mov
jo
out
mov
xlat
dec
rorb
inc
aas
scas
push
sbb
push
sbb
push
add
adc
sti
je
and
fildl
cld
inc
mov
pop
mov
pop
cmpb
sub
mov
jo
add
rorb
add
push
lock
repnz
add
push
xchg
in
aaa
jecxz
sub
fs
in
ds
ljmp
jecxz
fwait
in
sbb
enter
xor
nop
bswap
adc
ljmp
cmp
dec
jae
mov
or
ljmp
loopne
push
xor
nop
mov
orl
ret
cli
jge
call
and
xchg
sub
test
mov
and
adcl
jge
add
lahf
jo
or
jmp
cmpl
xchg
repnz
push
loop
sahf
sbb
imul
je
jp
mov
push
dec
jecxz
clc
sbb
in
xchg
mov
jl
ret
sbb
cltd
dec
adc
in
sbb
pop
push
and
or
daa
adc
in
or
inc
gs
out
repnz
pop
stc
jo
punpckhdq
or
mov
mov
xor
or
adc
inc
daa
cmpb
jne
push
inc
enter
sbb
add
cmp
and
idivl
add
loopne
mov
add
add
push
pop
push
fs
aam
fcoms
jne
push
xchg
call
push
pop
pop
mov
jmp
add
dec
ud0
jbe
and
in
add
loope
shlb
push
xor
and
test
bt
and
mov
addr16
lods
adc
push
dec
ds
xchg
mov
add
sub
jae
add
cltd
push
or
adc
loop
inc
dec
mov
xchg
fcomps
and
ficomps
push
mov
sub
test
inc
pushf
add
or
orb
or
or
add
add
add
outsl
sti
stos
js
push
or
xchg
cmp
inc
lret
cmpsb
imul
int
imul
shrl
xchg
sub
ret
jns
aam
add
jo
js
jl
ss
lcall
and
mov
fadd
data16
and
adc
or
push
xchg
scas
stc
adc
fsubrs
aam
nop
xor
jnp
aam
dec
lcall
jmp
mov
sub
lock
in
mov
pushf
cmp
aam
add
push
jbe
pop
outsl
dec
in
dec
je
add
jg
push
add
pop
fsts
pop
cld
es
popf
xchg
pop
sbb
test
jl
xchg
mov
rclb
adc
pop
xchg
loopne
sbb
fcomps
cmpb
xchg
movzbl
hlt
inc
call
cmp
mov
data16
je
sbb
bound
jge
mov
pop
je
fmul
pop
jne
mov
xor
dec
data16
jns
nop
out
sub
sbb
add
mov
rorl
jne
jl
jmp
mov
or
lcall
sbb
dec
les
push
test
popf
je
data16
outsb
icebp
adc
mov
or
adc
lret
jbe
out
or
jle
push
pop
ret
mov
fmuls
das
mov
inc
popa
xor
sub
repnz
stos
add
cwtl
sbb
push
leave
pushf
add
call
test
dec
sbb
pusha
lods
je
sub
ljmp
adcl
mov
pop
lods
addl
push
and
xorb
sbb
jbe
jae,pt
in
nop
in
sub
adc
in
xor
addr16
sbb
xor
jo
pop
test
dec
cmpsb
mov
testl
nop
orb
add
push
call
mov
mov
inc
rorb
fstps
sarb
jae
and
mov
gs
pop
push
loopne
push
xor
or
mov
and
inc
shl
mov
sub
and
dec
outsl
and
or
xchg
ficoml
inc
mov
jns
jae
xchg
aam
iret
push
clc
adc
push
jmp
inc
dec
das
push
dec
jae
imul
or
loope
and
and
clc
ret
push
hlt
fisubrs
out
test
jne
ret
cmp
or
mov
jp
bound
or
or
cwtl
aad
inc
pop
insb
sbb
jge
test
scas
pop
les
sbb
addb
lods
and
pop
cwtl
sub
sub
hlt
jl
jmp
xchg
fidivrl
dec
mov
aaa
loop
sbb
inc
add
fisttpll
sbb
push
pop
pop
imul
arpl
xor
pusha
pop
or
mulb
adc
sub
jae
imul
int
sbb
mov
aam
dec
adc
ret
add
sbb
push
mov
outsl
stos
testl
sbb
xchg
faddl
push
or
sub
dec
inc
mov
les
inc
xchg
push
mov
inc
cld
mov
add
repnz
xor
or
dec
inc
mov
ficoml
lock
outsb
ds
repnz
jp
cmp
add
pop
call
sub
mov
pop
sub
ds
fildll
je
outsl
mov
or
sub
je
adc
fucomp
sbb
push
sub
pop
ret
aad
pop
clc
jle
outsb
xchg
movsb
mov
xor
add
xor
mov
xor
test
add
inc
test
xchg
add
mov
ds
push
push
mov
add
push
mov
add
pop
les
pop
add
adc
add
mov
push
inc
cwtl
sbbb
rcrb
mov
xor
cld
xor
popa
andb
sti
arpl
dec
jl
mov
cltd
xor
sub
add
mov
add
shlb
js
add
or
pop
cld
jmp
leave
andb
dec
cld
xor
ret
outsl
xchg
sbb
loopne
xchg
cld
cmp
test
lret
xor
pop
out
cmpsb
jmp
push
adc
lods
enter
adc
xchg
js
xchg
test
adc
ds
addr16
out
andb
mov
dec
inc
pop
rorb
loopne
sti
sbb
in
mov
mov
adc
test
mov
dec
stos
lock
pop
lock
jmp
hlt
push
test
test
pop
or
or
repz
call
cmp
nop
or
into
add
mov
shll
jb
pop
ja
pop
and
jmp
push
lock
into
add
fstps
pop
nop
or
add
jmp
sbb
inc
xchg
data16
sbb
jmp
xchg
out
cli
scas
push
jg
insb
aad
ja
or
jo
and
ret
ja
out
or
popa
fldcw
shrb
jmp
in
movsl
push
and
mov
cmp
cmp
jle
adc
fs
cmp
mov
pop
dec
inc
negb
test
movsl
popa
jns
mov
and
fs
ja
pushf
jo
mov
test
push
and
movsl
or
fwait
mov
and
aam
adc
hlt
repz
sub
rorb
push
test
xchg
pop
jne
pusha
sbb
adcb
insl
sbb
fcoml
outsl
je
sub
sbb
subl
add
cltd
test
in
stc
push
out
movsl
jne
xor
daa
mov
mov
dec
cmp
jae
addl
sbb
jb
ret
iret
jmp
or
or
adc
fs
mov
sub
xchg
pushf
pop
push
add
xor
mov
fldenv
mov
inc
add
xchg
mov
or
add
and
sub
or
in
or
add
xchg
sbb
or
ss
jns
push
aad
push
je
pop
or
ds
cmp
jne
pop
add
push
cmp
repz
add
mov
dec
inc
nop
or
xor
adc
inc
outsl
inc
and
adc
push
mov
jno
into
clc
mov
xchg
or
leave
sbb
push
add
xchg
push
pop
scas
mov
lods
roll
add
das
es
es
xchg
push
nop
clc
add
jne
and
mov
fcomps
idivl
jb
push
fcoml
pop
fwait
jmp
or
fisubl
mov
sbb
mov
and
sbb
push
or
in
sbb
mov
dec
inc
push
xchg
ljmp
fadds
in
xor
sub
or
add
inc
divl
inc
dec
or
adc
xor
push
adc
in
and
adc
mov
ret
inc
into
lret
inc
xchg
clc
push
mov
push
cmovo
mov
insl
ss
adc
leave
fs
lea
shlb
fiadds
adc
mov
fcmovnu
orl
es
add
enter
lahf
cltd
add
pusha
scas
mov
jne
rolb
jl
mov
lea
dec
sub
inc
add
ret
and
enter
lods
cmp
mov
std
mov
inc
loope
sti
or
imul
cs
mov
dec
push
in
mov
push
fdivl
xor
jmp
call
push
sub
or
push
mov
lahf
pop
xchg
push
push
dec
jnp
or
mov
ds
je
dec
pop
mov
add
lahf
or
test
xchg
or
mov
ret
out
dec
fcoms
dec
sub
sbb
jmp
sbb
push
in
inc
sub
ljmp
jne
ja
push
dec
jbe
in
rorl
jae
push
mov
adc
and
jb
xchg
insl
arpl
xchg
ljmp
push
push
xchg
arpl
mov
cwtl
add
jmp
mov
mov
xchg
dec
jne
push
sub
rcrb
mov
xor
mov
xchg
scas
mov
push
pop
xabort
jb
jae
mov
xchg
inc
aas
jb
adc
inc
rorl
aad
in
sahf
sub
stos
mov
arpl
loope
stos
xchg
jp
sbbb
rcl
movsb
mov
jle,pn
xchg
pop
stos
adc
push
or
mov
leave
mov
insb
popf
lock
in
mov
push
add
std
mov
aas
cmpb
fsubr
or
in
outsb
mov
fmul
sub
add
push
movsl
xchg
sub
jbe
adc
push
mov
hlt
or
mov
jne
sbb
mov
xor
in
in
jle
push
mov
or
daa
xor
int
adc
or
leave
mov
add
push
out
sub
imul
scas
mov
imul
mov
jge
adc
mov
adc
sbb
ljmp
shlb
adc
and
mov
mov
sbb
fiadds
hlt
sahf
sub
stos
repz
sbb
xorps
push
push
cmp
pop
movsb
inc
xchg
pop
clc
fcomps
stos
push
xlat
adc
bound
call
out
inc
inc
and
aam
adc
sahf
out
shr
mov
cld
inc
sub
add
loopne
test
enter
xchg
in
imul
and
sub
mov
enter
add
adc
stc
hlt
lfs
and
pinsrw
subb
mov
ficoms
in
mov
dec
add
add
add
mov
lock
loopne
or
mov
fwait
rcrl
sbb
mov
dec
leave
mov
pop
or
hlt
ret
pop
sbb
pushf
je
sub
imul
les
in
das
aam
push
sub
and
adc
insl
mov
lods
repz
mov
cmp
enter
lea
cld
dec
mov
jo
xchg
mov
adc
inc
sbb
pop
adc
insb
mov
dec
or
xor
rorb
jb
int
cmpsb
dec
lods
mov
inc
jge
les
sbb
mov
stos
int3
mov
mov
or
jecxz
subl
cmpsl
cmpb
and
ret
adc
mov
push
scas
add
lods
call
sbb
jp
nop
das
rorl
push
jg
fildl
adc
dec
icebp
or
sbb
out
movsl
clc
popa
xchg
je
sbb
adc
and
add
testb
jo
pop
lods
ljmp
push
rol
or
sub
dec
adc
adc
push
jb
cmp
push
outsb
fists
pop
nop
and
cmp
xor
dec
xchg
mov
lds
cmp
pop
or
mov
ret
fwait
data16
cmp
xchg
cld
lock
cmp
lock
pusha
inc
inc
sbbb
push
test
cld
insl
insl
inc
and
or
in
cmpsb
xchg
mov
lock
clc
in
f2xm1
nop
outsl
sub
mov
sbb
imul
or
and
call
xor
add
sub
mov
cwtl
lods
pop
xchg
push
cmp
imul
mov
fs
push
cmp
je
jmp
aas
and
jmp
xor
gs
aaa
and
add
mov
add
push
pop
or
or
mov
push
out
push
cwtl
mov
lock
mov
xor
push
mov
add
mov
lods
fists
inc
mov
cld
cmpl
nop
bndstx
xchg
pop
push
jb
inc
sbb
iret
loopne
add
or
les
push
in
add
mov
sbb
cmpsl
push
xorb
xor
sbb
lcall
fsubs
sub
pusha
ja
mov
gs
mov
mov
int
or
les
enter
jbe
pop
int3
shlb
pop
imul
mov
sbb
cmp
pop
cwtl
xchg
mov
ss
ds
pop
cwtl
in
fs
pushf
mov
sahf
add
nop
add
mov
add
or
pop
xchg
sub
scas
push
aad
mov
pop
mov
push
rolb
ret
or
sbb
pop
insl
add
imul
or
pop
imul
lock
pop
dec
ss
xor
sub
inc
inc
xchg
mov
mov
lret
lock
enter
mov
and
fcomps
mov
and
push
aaa
xchg
mov
test
mov
or
lods
int3
adc
lds
and
or
lcall
test
lods
adc
adc
data16
cmp
mov
sbb
cmp
or
ficoms
nop
or
and
mov
adc
push
inc
push
cmp
lods
adc
insb
jmp
add
jno
inc
leave
pop
sub
pop
mov
mov
test
pop
add
inc
out
mov
pop
stc
jmp
loopne
mov
add
ficoms
addb
out
rol
pop
jnp
jnp
data16
jo
aam
addr16
dec
stos
ss
testl
fbstp
mov
and
ja
mov
out
adc
add
icebp
or
inc
inc
add
add
adc
push
add
sub
popf
or
neg
xchg
add
popf
lods
ja
leave
sbb
pop
adc
adcl
lock
or
arpl
mov
in
rolb
and
push
ds
out
clc
jbe
ret
pop
xor
mov
mov
or
insb
dec
cltd
inc
and
out
xchg
push
mov
pop
sbb
xor
inc
cmp
sub
mov
and
pop
jbe
cld
xchg
cmp
jge
jl
cmpsb
in
sub
push
push
xor
jo
dec
dec
testl
inc
inc
or
aad
push
dec
aas
xchg
repnz
cmp
aam
mov
in
cmp
and
adc
adc
pop
or
add
push
push
mov
or
add
addb
inc
ss
pop
jge
or
lret
cmp
push
jmp
sub
adc
adc
fcoms
sbb
mov
xchg
ret
insb
and
and
loop
orb
jb
pop
add
dec
rorb
inc
popf
repz
xchg
in
inc
popf
cmp
stos
dec
dec
push
adc
call
aaa
popa
push
xchg
je
sub
pop
mov
adc
in
mov
incl
xchg
ret
lea
test
fiaddl
pop
aam
cmpsl
dec
bound
add
xchg
shll
divl
jg
or
or
push
jns
mov
repnz
clc
push
pop
xor
in
call
ret
into
or
and
loope
dec
pop
cmp
dec
pop
ljmp
pop
inc
or
cmp
jl
adc
mov
push
rcrb
jmp
inc
and
sbb
inc
xor
cmp
cmp
shll
adcb
inc
dec
jge
fisubl
and
pop
add
cli
mov
jne
mov
in
aam
jge
xchg
cmpb
imul
sub
loope
outsl
mov
int
ds
in
push
adc
addr16
xchg
inc
adc
sahf
je
sti
add
push
dec
pop
add
push
test
jae
pop
mov
xor
sub
ret
lcall
icebp
decb
cmp
jbe
mov
repnz
inc
dec
sbb
bt
and
ljmp
inc
lret
sbb
repnz
xchg
push
je
call
inc
les
aas
inc
nop
xor
mov
sub
test
es
or
je
aam
pop
shlb
jne
or
mov
and
mov
mov
dec
xchg
push
loope
mov
dec
sub
add
xor
dec
pop
out
xor
fmuls
mov
inc
or
inc
mov
push
xor
lea
int3
and
mov
mov
sub
jb
inc
mov
inc
hlt
insl
xor
decb
dec
jne
pop
jle
add
cmp
jge
sub
pop
sub
std
push
clc
pop
ja
dec
push
xchg
sbb
xchg
aas
xchg
repz
jbe
fidivrl
rep
or
inc
leave
out
imul
or
cmpb
add
mov
xor
or
pop
push
mov
or
cmp
add
lods
dec
movsb
xchg
cmp
jmp
add
call
movsl
std
push
sbb
pop
mov
jne
pop
cmp
sbb
adc
hlt
cmp
jge
mov
add
cmp
fldcw
mov
jecxz
idivb
add
pop
in
test
cmpl
aam
rorl
dec
incl
dec
jne
jmp
push
cli
dec
xchg
shlb
push
adc
mov
add
popa
ja
les
stc
push
adc
mov
sbb
pop
dec
nop
xor
push
cmpsl
sbb
adc
add
adc
inc
mov
mov
mov
outsl
sbb
xchg
or
adc
mov
insb
and
sbb
out
leave
ficomps
sbb
mov
push
in
mov
decb
cmp
das
mov
inc
sbb
loopne
ljmp
loopne
test
sub
and
lss
fcomp
mov
sti
mov
mov
aas
cmp
stc
inc
js
xor
mov
in
and
int3
mov
rorl
mull
pop
xor
enter
push
popa
mov
subl
push
les
mov
jb
les
popa
shlb
inc
push
add
inc
inc
ds
insb
clc
mov
mov
arpl
push
mov
loope
xor
cwtl
pushf
clc
xchg
jo
dec
or
xorl
cli
mov
mov
push
insl
das
fs
jp
add
add
fs
xchg
pop
push
or
add
or
sarb
push
adc
dec
minps
lock
bound
lods
orw
jae
sbb
stos
pop
push
add
test
cmp
cmp
aaa
mov
pusha
add
or
cmp
loop
sahf
xor
or
push
insl
and
adc
mov
mov
rorl
mov
inc
inc
push
jge
icebp
test
pop
add
hlt
mov
sbb
inc
xor
xchg
call
ljmp
push
scas
fldenv
cmp
dec
sbb
enter
testb
mov
or
pop
sbb
pop
mov
adc
daa
inc
imul
push
jo
or
and
inc
js
xchg
lock
mov
arpl
ret
xchg
jmp
sub
push
pop
add
mov
lods
loopne
mov
mov
loope
in
inc
lahf
add
jne
aad
push
adc
inc
add
ror
outsb
fisttps
jne
mov
and
cmp
loope
sub
and
pop
push
mov
fisttpl
mov
xor
and
je
and
mov
fcompl
mov
outsl
std
stos
fnstcw
adc
sahf
fsubrs
mov
mov
pop
jmp
and
lds
fnsave
or
pusha
xor
enter
mov
movl
mov
pop
into
push
lea
loop
call
adc
in
push
mov
shr
add
jl
pop
push
or
dec
pop
lcall
sbbl
lahf
mov
pusha
push
fadds
js
sti
rcll
inc
add
or
cwtl
scas
push
push
int
pop
lods
or
cmc
mov
enter
inc
or
outsb
incl
mov
cmp
adc
adc
sbb
mov
cltd
outsl
imul
and
rolb
hlt
addr16
push
adc
ret
mov
mov
mov
enter
or
and
rcrb
push
into
pop
enter
inc
sub
jl
xchg
adc
sbb
xchg
psraw
leave
adc
call
enter
cmp
repz
call
xchg
sbb
stos
mov
loop
sti
inc
test
fsubr
sbb
mov
fisttps
clc
gs
inc
insb
negb
jae
sbb
pop
sbb
jmp
or
mov
sub
sbb
mov
adc
popf
add
nop
iret
xchg
mov
imul
sbb
and
shr
in
cmp
pop
push
push
inc
scas
rorl
xor
lods
sbb
out
dec
mov
inc
or
add
std
or
cmp
je
movsl
jne
dec
lods
pop
data16
jmp
lea
popa
lret
fdivs
fisubrs
arpl
test
adc
int
mov
insl
dec
or
dec
jl
xchg
mov
inc
xor
imul
orl
adc
push
incl
add
fimull
xor
mov
clc
ret
cwtl
cmpsb
imul
dec
call
pop
loopne
aam
call
shll
je
shrl
rcrl
addr16
int
xor
mov
sbb
dec
shll
dec
andb
pop
mov
push
xor
pop
aaa
pop
and
mov
loopne
pop
mov
mov
shrb
pop
addb
mov
pop
sub
negl
add
or
enter
pop
add
sahf
cmp
cld
popa
repz
cmp
or
test
hlt
and
lock
jae
pushf
addr16
les
int
xchg
and
addr16
loopne
imul
addr16
fcoms
pushf
insb
push
aam
data16
cmp
fmul
fs
movsb
sbb
hlt
rclb
dec
jae
xchg
mov
xor
xchg
int
int
inc
test
push
movsb
push
jae
cmp
mov
out
addr16
nop
push
xchg
lods
mov
int
int
or
cmpb
sahf
inc
lcall
xchg
daa
add
xchg
test
pusha
mov
dec
jo
loope
ja
ja
push
add
pushf
mov
rclb
mov
push
iret
nop
pushl
repnz
mov
pop
adc
popa
add
adc
adc
std
adc
xchg
cmp
mov
nop
mov
ds
imul
jbe
push
or
fs
leave
into
xchg
cwtl
or
mov
int3
pusha
mov
ret
or
jecxz
ret
jns
inc
dec
jg
les
incl
jae
mov
aam
push
rorb
cmpb
inc
mov
mov
xor
cltd
cmp
and
jl
cmpsb
and
les
push
sbb
xor
pop
pop
cwtl
jb
les
sahf
cwtl
ret
xor
pop
or
sbb
jge
testb
xchg
mov
pop
sub
push
add
in
mov
mov
pop
ret
xchg
sbb
or
add
in
sbb
cmp
fs
cmc
popf
add
and
mov
sbb
jge
test
repz
adc
cld
pop
out
or
cmpsb
sbb
test
push
test
adc
jae
or
sbb
sbb
jle
inc
dec
test
add
je
adcb
icebp
inc
enter
clc
clc
jno
sub
clc
clc
lea
popa
cwtl
mov
fdivrl
jge
add
sbb
mov
add
dec
leave
jae
xbegin
sbb
jnp
push
fs
ds
adc
mov
jae
push
daa
test
cmpb
rorb
jnp
add
icebp
xor
nop
adc
nop
outsl
dec
enter
enter
enter
nop
adc
enter
pop
mov
inc
inc
lea
and
popf
bound
adc
mov
lret
ja
leave
enter
add
enter
mov
jns
test
dec
nop
cld
adc
add
sbbb
push
push
push
mov
mov
inc
adc
leave
and
mov
pop
jb
movsb
enter
xchg
pop
test
lods
and
mov
xchg
pop
jb
mov
mov
and
leave
and
pop
repnz
nop
int3
mov
loopne
rorb
inc
imul
and
enter
cmp
nop
fsub
cld
lcall
xbegin
call
xchg
out
in
pop
enter
cmpb
popa
jne
pop
mov
sbb
inc
push
mov
adc
add
cmp
enter
fs
jne
dec
jne
jle
enter
jbe
or
outsl
fs
dec
into
das
outsb
dec
jb
pop
outsl
jb
out
aas
jns
insl
jo
inc
jb
insl
push
je
rsqrtps
pop
mulb
inc
jns
inc
bnd
in
outsl
insb
je
inc
jns
icebp
push
notb
inc
getsec
add
int3
hlt
mov
leave
push
int3
hlt
xchg
xchg
stos
sub
adc
pop
cmp
idiv
and
loop
or
jbe
or
add
adc
mov
int
xchg
adc
or
int
cmpsb
jmp
repnz
xor
gs
lcall
test
icebp
scas
jnp
leave
hlt
sub
pop
pop
lock
inc
mov
jne
and
mov
nop
pop
jnp
sbb
cmpb
in
adc
int
int
fsubrs
inc
pop
and
xor
and
mov
arpl
adc
inc
aam
and
lret
cwtl
arpl
pop
arpl
inc
xchg
push
adc
inc
jb
gs
iret
arpl
iret
inc
popa
or
bound
add
fs
mov
and
sub
arpl
shr
jbe
adc
jns
and
mov
cmpsl
dec
xchg
jb
leave
popa
scas
mov
clc
andl
and
pop
mov
pop
roll
dec
pop
pop
shll
les
cmpsl
ret
arpl
sti
enter
pop
arpl
shlb
or
adc
movb
jecxz
xor
pop
sbb
push
cmp
in
int
xchg
shlb
mov
leave
imul
adc
in
in
add
in
in
add
and
inc
out
in
cmp
or
push
push
or
call
test
mov
mov
add
add
out
pop
jb
daa
jp
pop
test
rcll
aam
nop
push
and
addr16
into
mov
aam
aam
pop
enter
rorb
test
sahf
or
cmp
add
cmpb
add
loopne
popa
daa
adc
sub
sub
sti
out
popf
push
cmp
aas
dec
je
push
or
add
lahf
mov
lods
mov
dec
adc
dec
cmp
add
jge
and
fldenv
push
adc
das
lea
enter
gs
xchg
jg
xchg
das
push
hlt
mov
xchg
data16
js
pop
dec
ja
dec
jnp
and
cltd
in
nop
addr16
lods
rclb
mov
rorl
mov
mov
fisubs
shr
jae
mov
loopne
mov
jge
dec
jmp
mov
push
enter
mov
push
aam
les
lea
cwtl
fcomp
enter
gs
mov
xchg
scas
loopne
rcl
rclb
inc
movsl
loopne
or
pusha
ja
data16
mov
mov
jg
cmp
adc
add
je
mulb
mov
ljmp
jmp
in
mov
sbb
push
xlat
add
and
je
push
mov
jb
xlat
aad
sub
add
add
adc
test
lds
inc
cmp
dec
imul
add
jge
outsl
add
hlt
out
pop
gs
test
lcall
ss
add
xchg
or
xchg
push
pop
mov
push
add
gs
fmuls
push
dec
and
rorb
inc
add
out
call
mov
test
imul
ss
add
mov
xor
les
sub
pushf
adc
insl
add
mov
and
ds
push
scas
xchg
das
les
adc
insb
sbb
clc
jmp
adc
data16
and
mov
ja
lock
lock
add
js
insl
in
decl
call
add
inc
add
clc
enter
mov
hlt
adc
in
insb
fsubrl
add
bsr
rol
inc
sub
sahf
test
sbb
inc
pop
lods
push
shll
or
jbe
repz
and
jnp
fistl
sub
test
add
push
or
fcoml
es
into
mov
add
mov
add
sub
add
push
je
adc
or
and
pop
std
add
sub
and
inc
push
add
aaa
or
das
jl
jmp
idiv
and
in
out
pop
aad
and
loop
lods
or
add
scas
rep
and
or
mov
dec
cmp
mov
leave
pusha
or
mov
jl
xor
clc
fimull
mov
cld
popa
mov
call
or
mov
and
push
call
call
enter
jl
mov
addl
xchg
add
sbb
cld
mov
mov
sub
leave
clc
test
push
in
and
in
jno
data16
mov
call
sahf
dec
sub
js
push
rolb
mov
mov
xchg
sbb
decl
push
shrl
and
sub
add
and
cmpsl
pop
xchg
pop
mov
lcall
outsb
sbb
adc
hlt
data16
adc
lcall
xor
adc
and
nop
sbb
or
jg
xor
je
and
mov
lods
jne
mov
outsb
inc
lock
jne
add
xchg
lods
cmp
or
dec
sub
notl
ljmp
orb
sbb
cli
or
or
jp
ss
aad
push
in
addr16
in
mov
jmp
pop
xchg
mov
adc
addb
cltd
or
in
jg
je
and
inc
std
adc
es
fwait
pop
cmp
fnstcw
push
ret
lcall
enter
pop
call
stos
and
xlat
fdivp
dec
add
enter
call
fistps
outsb
cmp
sbb
sbb
push
fsts
mov
mov
imul
clc
lcall
adc
inc
add
xor
inc
outsb
lret
adc
sbbb
sbb
and
add
xor
mov
sub
ret
mov
mov
pop
pop
pop
cmp
enter
or
rolb
inc
es
scas
aas
andb
fsubrl
mov
lock
pop
add
push
and
loopne
std
stos
xchg
mov
adc
cmc
aam
adc
sbb
in
in
and
loopne
in
push
mov
rorl
or
jne
rclb
pop
rorb
xchg
mov
rolb
dec
mov
or
and
xchg
dec
rcrl
loopne
lcall
sti
push
xor
cmpsb
jmp
int
sub
arpl
loopne
xor
jne
lds
adc
daa
sbb
sbb
mov
movsl
cmpl
or
fsts
cmp
adc
mov
fsubs
push
in
mov
and
fdivrs
nop
inc
lock
add
test
int
sbb
subl
xor
mov
in
shll
int3
dec
testb
mov
cmpsb
test
sbb
and
sbb
fstps
push
pop
enter
ror
sbb
cmp
fxch
cmp
enter
enterw
sub
pop
lcall
dec
je
jmp
enter
push
adc
les
nop
in
pop
les
je
sbb
cmc
and
aam
mov
mov
add
add
data16
jecxz
cwtl
mov
scas
std
pop
sbb
sub
orb
dec
test
lcall
test
add
mov
ret
sbb
nop
or
mov
and
scas
or
xor
sbb
lods
pusha
lods
push
push
sti
ds
mov
adc
test
shll
dec
test
cmp
mov
mov
sbb
mov
in
pushf
sbb
push
jbe
sarl
cmp
and
dec
push
insb
xchg
lea
jmp
dec
nop
nop
and
jo
cmp
daa
daa
xor
nop
dec
mov
lds
mov
jl
mov
cwtl
test
cli
test
xor
test
sbb
gs
mov
data16
cmpl
sbb
in
pushf
or
in
sub
sbb
insb
cmp
xor
repnz
and
cmp
xlat
fs
out
or
pop
loopne
sbb
loopne
push
dec
ds
out
fs
dec
cmp
cmp
cmp
subl
push
sub
in
loopne
jns
and
in
mov
repz
out
push
pop
adc
mov
scas
cmp
inc
sub
shll
add
sub
mov
mov
repnz
stc
xchg
in
setp
add
lcall
push
xor
add
dec
and
daa
push
sbb
fmuls
push
sbb
and
or
lods
and
sub
push
sbb
mov
les
lods
in
or
inc
adc
xor
loopne
pop
ss
jecxz
adc
jno
pop
fcompl
fcoms
cltd
and
fcomps
adc
xchg
lret
fsubrl
cwtl
imul
add
mov
mov
insb
mov
adc
sahf
enter
enter
enter
cs
sbb
jno
mov
xor
lock
jmp
jl
jmp
add
dec
sarl
mov
jmp
loop
cwtl
nop
les
dec
or
inc
adc
sbb
xor
mov
sub
and
xor
xorl
push
mov
and
mov
mov
inc
mov
lods
adc
mov
lods
dec
test
inc
loop
es
movsb
adc
dec
sub
movsb
sbb
mov
dec
sub
ret
sub
and
test
dec
sub
mov
xlat
fs
dec
xchg
dec
push
xor
xor
pushf
nop
inc
inc
nop
leave
sub
dec
in
nop
mov
add
push
lods
mov
pop
xor
rol
adc
nop
mov
mov
jb
lock
sub
in
loop
mov
bound
gs
and
insl
jo
jns
aaa
pop
test
dec
jne
invd
push
insl
popa
xchg
adc
mov
sub
int
gs
repnz
mov
insb
add
inc
outsl
jne
mov
jne
jb
outsb
arpl
call
ret
push
inc
mov
mov
adcb
rorb
xchg
gs
outsb
jns
pop
push
outsb
imul
inc
arpl
cs
mov
push
and
inc
out
dec
push
cwtl
fistpl
fsubs
in
sbb
jb
in
faddp
dec
or
mov
mov
pop
out
push
iret
adc
fcomps
push
sti
mov
cmpsb
mov
adc
push
inc
fcom
notb
pusha
stos
add
fbld
and
jmp
sbb
jl
pop
jl
mov
add
mov
jno
adc
lret
or
push
jp
xchg
cld
jl
fwait
push
pusha
adc
pushf
add
sbb
and
out
popa
insb
mov
das
xchg
lea
pop
je
pusha
insb
mov
adc
stc
es
sti
sbb
and
cwtl
adc
add
test
add
inc
adc
or
cmp
aam
jne
inc
outsb
jns
clc
add
and
cmovnp
in
mov
shlb
mov
add
cld
or
fsubr
fbstp
xor
int
jbe
fcmovnbe
arpl
mov
add
jbe
pop
rep
cmp
mov
cmp
sub
jl
mov
fldl
imul
cs
lds
cmc
cmp
add
fsubrl
jo
cmp
and
call
ficomps
test
xchg
mov
push
xchg
xlat
stos
cmp
inc
sbb
pop
loop
mov
lret
arpl
push
cwtl
mov
jge
cmp
je
jl
fcoms
mov
adc
into
xor
sub
mov
pop
adc
adc
clc
mov
xor
ja
andl
lock
inc
pushf
or
int3
inc
aam
push
pop
mov
call
jge
and
ret
ret
pop
mov
or
push
sti
in
shlb
push
jle
icebp
jne
mov
sbb
add
push
sbb
adc
xchg
push
and
inc
gs
push
aam
nop
icebp
mov
jge
adc
jle
pop
or
sahf
or
and
pop
mov
mov
mov
loope
push
add
or
sbb
mov
pop
movl
pop
sbb
sub
enter
or
lahf
lock
int
inc
push
js
or
pop
out
jb
push
ljmp
pop
sbbb
sub
inc
repz
cmp
dec
sti
pushf
fsubs
push
sub
cmp
setg
and
ljmp
or
pop
jbe
in
jne
jo
add
enter
or
ret
repz
push
mov
js
lahf
hlt
movsb
movsb
mov
nop
mov
sub
clc
in
andb
and
ja
lock
jns
dec
repnz
insl
hlt
sbb
cmp
outsb
aad
ffreep
mov
push
mov
mov
inc
rorb
mov
adc
fnstenv
leave
ja
ja
in
or
data16
sbb
dec
loopne
push
push
xor
sbb
hlt
push
adc
stos
inc
push
stc
or
lods
lods
push
sbb
scas
nop
xchg
sbb
xchg
xchg
xchg
je
inc
push
xchg
xchg
xchg
dec
dec
push
push
stos
add
into
and
cmc
cmp
add
out
in
pop
jmp
out
adc
cmp
mov
test
add
nop
cmpl
inc
push
roll
add
cmpsb
inc
and
push
inc
and
inc
and
push
sub
ret
insl
mov
add
das
inc
xor
mov
cmc
inc
xchg
sub
inc
xor
or
inc
pop
cmp
pop
mov
testl
push
adc
pop
push
xchg
and
pop
pop
adc
fs
mov
push
call
call
inc
testl
xchg
scas
inc
clc
scas
add
pop
push
scas
test
push
sbb
scas
xor
je
push
lock
push
and
jae
pop
mov
push
stc
pop
push
stc
pop
adc
aas
jecxz
inc
and
int3
ja
lcall
mov
mov
mov
add
ss
in
push
add
addb
mov
adc
pop
and
and
es
lods
pop
or
nop
jge
mov
str
or
add
mov
ljmp
dec
or
sub
mov
or
dec
outsb
loope
sub
arpl
rcrb
fadds
adc
pop
inc
insb
popa
arpl
daa
fmull
cmovns
jae
fs
jo
imul
out
jb
daa
add
pushf
jae
push
rclb
sahf
cmpsb
js
cmp
mov
sbb
inc
sti
ret
rorb
stc
adc
sti
and
push
cmp
or
or
testb
pop
or
lods
push
pop
mov
ss
insl
or
add
int3
fstpt
das
adc
or
add
das
insl
loopw
add
or
add
jne
fwait
rclb
dec
adc
subl
call
xchg
push
fwait
mov
cld
xchg
jge
adc
xchg
cli
mov
push
and
or
ret
aas
insl
jo
mov
cld
pop
rcl
pop
fcomps
std
invd
xor
hlt
jne
in
push
pop
cld
sbb
sbb
ret
add
sbb
lods
sbb
sbb
in
in
sbb
sbb
sbb
fistl
cwtl
add
das
or
leave
xchg
sbb
or
sbb
xlat
sub
out
and
cmp
xor
test
in
pop
arpl
adc
fdivr
jg
std
or
std
sbb
fdivs
aaa
test
hlt
add
sbb
lret
cwtl
push
sbb
pop
push
and
outsl
and
or
dec
and
pusha
add
pop
inc
fdivrl
and
or
mov
jo
ja
sub
in
lods
and
inc
mov
jb
pushf
mov
cmpsb
out
push
push
push
push
dec
decb
inc
add
dec
adc
or
xchg
aaa
add
mov
adc
call
bound
push
pop
addr16
pcmpeqw
and
inc
cltd
push
pop
dec
test
xchg
pop
pusha
add
push
jae
fs
cmp
clc
stc
mov
insb
add
xchg
fdiv
ret
in
push
jb
lds
add
and
mov
xchg
or
clc
or
repz
aad
enter
int3
push
xchg
repz
add
dec
xor
push
pop
or
or
stos
sbb
fsubs
and
mov
aas
in
or
inc
jmp
shlb
lock
or
hlt
sbb
fildl
dec
add
or
or
fcoml
xor
enter
std
sbb
or
mov
dec
xor
shlb
add
push
mov
push
inc
add
inc
dec
mov
add
push
stos
cmpsb
jbe
inc
adc
popa
push
lods
xor
sub
pop
fsubs
lea
dec
jle
idiv
test
jl
inc
xor
or
dec
jne
adc
inc
adc
adc
popl
cmp
fisttpl
out
adc
adc
xor
mov
arpl
mov
dec
push
jne
and
push
shll
fcoml
push
aam
mov
pop
push
leave
xchg
shrl
and
int3
push
push
les
fisubs
jae
or
add
outsl
or
and
or
jmp
in
mov
or
or
or
add
mov
rcll
js
jl
sbb
les
mull
loop
test
push
sbb
or
lea
xchg
mov
fmull
jle
cld
mov
jmp
ret
or
loope
ret
mov
cmp
push
iret
push
inc
dec
inc
push
inc
mov
sbb
movb
fstpl
pushf
sub
or
adc
push
inc
mov
cmpl
and
jae
cmp
pop
adc
push
jne
jecxz
aaa
mov
mov
inc
push
rorl
fmul
mov
xor
or
sbb
cmp
fs
out
hlt
mov
ds
adc
push
clc
decl
out
std
jno
jge
sub
mov
shl
lea
add
inc
mov
sbb
scas
popf
adc
icebp
iret
push
add
loopne
push
mov
lods
pusha
adc
or
inc
and
dec
add
sbb
jecxz
mov
add
shlb
xchg
in
add
adc
inc
das
push
lods
shl
add
mov
adc
add
or
lret
int3
roll
insb
mov
jns
adc
or
jle
jmp
inc
add
mov
dec
insb
mov
sub
jbe
push
cmp
outsl
insl
nop
jge
pop
add
jne
or
cmp
leave
inc
imul
xchg
mov
cmc
fs
mov
fwait
xchg
or
out
lahf
test
sbb
out
pushf
shl
xchg
sub
mov
and
sbb
sbb
js
jle
mov
jle
mov
add
push
les
add
and
dec
cmp
dec
mov
sub
jg
dec
dec
pop
or
inc
jne
mov
pop
and
out
xlat
or
add
add
add
add
cmp
imull
sbbl
pop
inc
repz
xorl
adc
inc
movsb
or
inc
sub
lock
mov
movsb
cmpb
mov
inc
int3
cmpl
movhps
fcmovnb
das
jmp
daa
add
xorb
arpl
out
mov
stos
mov
shrl
xchg
in
xchg
fwait
pop
or
leave
cs
xchg
test
or
or
dec
outsl
adc
and
push
xchg
jne
add
sub
sbb
add
xchg
or
xchg
push
mov
mov
mov
add
add
in
into
into
leave
pusha
lret
lock
add
pop
hlt
clc
shrb
pop
adc
push
xchg
mov
fistps
or
outsb
popf
add
lods
mov
cld
xchg
in
in
push
fdivr
rcrl
or
xlat
aaa
mov
add
or
and
push
mov
out
rorl
scas
or
or
push
stc
call
aaa
cmp
xor
fsubrs
mov
push
cmpsl
out
iret
das
stc
jo
nop
roll
leave
bound
dec
insb
adcl
adc
int
pusha
imul
mov
jno
sub
dec
popa
adc
out
orl
movsl
xchg
fildll
ud2
sar
adc
loop
clc
js
int3
sub
cld
jnp
mov
cmp
push
or
bound
mov
cmp
dec
cld
sbb
cmp
ljmp
cld
jo
push
or
hlt
repz
dec
inc
xchg
pop
cmp
cli
faddp
push
insb
imul
inc
pop
push
repz
lret
mov
or
xchg
xchg
pop
pop
push
push
add
add
inc
jp
cmp
xor
xor
iret
sbb
dec
push
sbb
add
fisubrs
mov
cmpsl
xor
pop
sub
mov
daa
adc
daa
clc
push
sbb
adc
mov
cmpsb
ficompl
sarb
subl
or
test
lret
nop
push
push
or
pop
cmpb
cmp
in
fisubrl
push
mov
iret
xor
clc
jbe
cmpl
in
adc
nop
xchg
sbb
and
jl
outsb
mov
insb
push
xor
inc
ss
repnz
lock
das
in
jmp
mov
push
in
pop
stos
xor
jl
rcll
bt
inc
add
movsb
xor
cmp
mov
sub
pop
add
adc
and
inc
ret
es
xchg
hlt
pop
xor
mov
xor
fidivs
add
fwait
pop
pushf
push
fs
add
cs
pop
ret
imul
push
and
jo
ljmp
or
clc
and
bnd
cmp
lock
ret
adc
in
rclb
or
mov
inc
std
push
movsb
add
or
mov
adc
addr16
add
rorl
cmp
push
or
or
pop
adc
adc
cmp
lods
xor
popf
mov
arpl
push
cmp
lea
shl
or
loop
aad
add
add
ljmp
stos
mov
inc
ss
mov
call
push
dec
call
cmp
adc
add
leave
xchg
jne
in
in
and
daa
popa
mov
push
adc
mov
or
lret
mov
lods
je
add
clc
nop
push
inc
popf
hlt
pop
mov
adc
add
iret
sub
mov
sub
lahf
rcrb
adc
scas
in
nop
or
inc
repnz
push
pop
mov
enter
mov
pop
cmp
inc
xchg
imul
pop
movsl
adc
and
push
or
sahf
mov
jns
xchg
lcall
mov
or
test
bound
arpl
jecxz
adc
int3
aad
roll
mov
fcoml
rcrb
cmp
je
adc
adc
pop
insl
dec
mov
or
loopne
or
jmp
loope
xor
sbb
mov
cmp
loope
adc
popf
ret
xchg
mov
lds
mov
sub
and
push
jg
clc
gs
enter
adc
adc
mov
sub
lea
push
imul
or
mov
jp
ja
push
rcll
dec
sbb
inc
lock
clc
adc
pop
push
jmp
aam
xchg
inc
xor
or
fs
adc
or
in
mov
cmp
add
scas
adcl
push
jb
mov
popf
adc
push
mov
mov
ret
lock
jo
or
or
cmp
or
lds
je
and
je
adc
jne
je
and
lret
pusha
lea
rolb
adc
enter
sbb
data16
jl
add
dec
xlat
mov
or
lds
push
leave
or
adc
loop
and
adc
inc
sbb
jge
adc
stos
fcompl
js
xor
adc
iret
pop
xchg
jge
push
or
lds
adc
pop
es
pusha
jle
inc
or
add
ja
cmp
xor
cs
mov
xchg
mov
and
mov
arpl
inc
jecxz
inc
aam
es
jmp
insb
jecxz
adc
or
add
gs
mov
fdivl
sub
xchg
xchg
xchg
lods
jge
incb
add
inc
iret
ret
push
push
mov
out
ret
daa
push
pop
mov
pop
mov
add
push
pop
mov
push
push
inc
inc
mov
test
enter
in
or
or
push
push
pop
insb
std
or
lahf
testb
cmp
pop
xchg
cmp
jne
testb
orb
mov
add
shl
sbb
sub
dec
subb
in
pop
pusha
xchg
mov
sub
adc
or
add
fisubrl
pop
xor
sahf
loope
or
dec
inc
sbb
js
shll
or
xchg
xchg
stos
lods
leave
add
sbb
sbb
shll
iret
add
fdivrs
mov
fs
xor
xchg
mov
adc
jmp
mov
sub
pushw
and
mov
insl
dec
je
fs
and
push
fs
in
sub
or
cmp
lret
adc
ficoms
sub
pop
fmuls
jmp
sub
sbb
adc
ret
mov
lea
mov
mov
bound
mov
fildll
and
add
imul
dec
cs
jnp
sub
jnp
repnz
add
pop
xchg
fmull
inc
pop
pop
jle
inc
mov
mov
pop
sbb
dec
mov
sbb
add
pop
add
add
cmpsb
das
xlat
aad
and
shr
inc
fwait
mov
adc
or
imul
fstpt
je
jg
mov
jmp
inc
pop
inc
pop
test
or
jbe
and
jae,pn
add
rorl
push
add
ja
and
jne
inc
add
or
mov
jle,pt
cwtl
add
sbb
mov
insl
jnp
repnz
xor
sbb
push
test
add
push
sbb
test
into
enter
add
mov
fmuls
push
pop
addr16
ret
push
push
out
cwtl
icebp
cwtl
jl
sbb
mov
mov
inc
jbe
leave
out
je
inc
or
pop
ret
ret
mov
into
mov
fs
cmp
cmp
pop
sti
jne
sbb
sbb
inc
lea
push
pop
dec
xchg
divl
mov
push
and
shrb
cmpb
enter
dec
sub
add
and
jb
or
pushf
mov
test
enter
and
rolb
add
push
cmp
jae
inc
enter
mov
mov
dec
sahf
mov
jl
jno
sti
inc
inc
xchg
dec
pop
jne
mov
fistl
shll
cmp
add
jbe
mov
clc
jle
mov
sbb
insl
sub
hlt
jl
rorl
movsb
xchg
aaa
adc
lea
sbb
cmp
ror
adc
pop
lret
add
add
pop
adc
xchg
xchg
and
sub
jnp
pop
jb
jle
push
loop
rcll
imul
daa
pop
xor
jb
adc
mov
sbb
lret
or
or
push
pop
pop
lahf
xor
lods
sbb
and
and
into
fmul
int3
icebp
adc
cmp
hlt
add
and
pop
mov
fbld
xorb
add
inc
xchg
scas
loop
add
jbe
push
pop
push
fstl
jle
cmp
rcll
and
shrb
scas
rcrl
loop
mov
lock
add
dec
mov
or
push
mov
inc
mov
cmp
aam
lea
adc
cli
mov
pop
loopne
loope
adc
orl
pop
add
pop
mov
or
push
add
xchg
faddl
jne
push
nop
push
mov
sbb
icebp
add
call
push
cmp
aad
cli
push
push
mov
xchg
stos
test
clc
jmp
shrb
cltd
pop
push
push
adc
movsl
or
push
mov
je
and
push
insb
addr16
test
xor
idivl
dec
and
xchg
sub
mov
arpl
clc
fidivrs
pop
fs
add
in
add
rolb
ja
rclb
dec
push
lcall
mov
dec
je
stos
inc
lret
push
jmp
iret
mov
sub
test
lret
pop
loopne
fdivrl
adc
icebp
psubw
mov
addl
jo
enter
pop
add
std
push
lea
inc
hlt
mov
sub
jle
lea
inc
mov
nop
addr16
push
loop
imul
arpl
push
and
fsubl
or
js
in
repnz
inc
and
dec
leave
fdivl
mov
inc
nop
incl
mov
incl
ret
add
subb
or
mov
or
inc
mov
pop
adc
cwtl
pop
stos
mov
test
push
or
cmp
mov
clc
notb
int3
add
cmp
jo
sub
mov
or
cltd
jae
out
leave
xchg
add
push
shll
je
mov
pusha
out
mov
pushf
xchg
mov
and
repz
mull
cwtl
repnz
subb
icebp
xchg
pop
push
pusha
cmp
addr16
adc
pop
jo
cwtl
pop
mov
inc
sub
test
or
adc
nop
ljmp
mov
jmp
mov
sub
mov
xor
ja
fwait
cmp
cmp
jb
mov
push
sub
jno
sub
adc
sbb
add
rcl
popa
push
std
pop
or
jne
pop
adc
mov
or
inc
pop
and
ljmp
xchg
push
stos
scas
lds
mov
sub
inc
or
mov
and
mov
in
xor
fildl
mov
arpl
and
int
push
and
ja
jl
or
jno
jo
add
fsubrl
xchg
add
mov
lret
adc
xor
shr
cld
push
shr
sub
je
add
jmp
add
cmp
adc
jl
mov
je
mov
or
adc
adcb
mov
jbe
es
push
dec
mov
int
mov
jmp
test
mov
js
add
cmpsb
sarb
fs
mov
inc
and
nop
in
inc
dec
pop
es
dec
call
cltd
sbb
dec
mov
xchg
mov
cltd
sub
je
bnd
sub
push
imul
sbb
and
mov
xchg
data16
pop
pause
out
imul
adc
adc
push
push
cmp
add
sub
jae
in
inc
lret
fs
xor
sub
sbb
mov
scas
aad
sbb
jno
sub
pop
lea
lcall
sub
add
and
inc
pop
in
mov
pcmpeqd
lcall
loope
fsubr
lods
jmp
jno
pop
or
es
fmull
adc
rorl
fs
fistpll
xor
push
lea
in
jmp
pop
pop
testb
jle
pop
adc
push
jmp
mov
and
cmp
inc
add
pop
jbe
sbb
pusha
pushf
push
repnz
sub
xchg
dec
sub
sub
cwtl
push
sub
or
into
clc
cmpsb
fwait
cmp
jle
mov
jle
or
or
jmp
stc
jbe
mov
jg
add
fldt
dec
sarb
dec
clc
push
scas
sub
and
in
mov
dec
int3
and
nop
pop
scas
adc
xor
fisttpll
mov
stos
jle
sub
xor
je
imul
nop
das
mov
popf
sub
lret
cmp
pushf
sub
stos
sahf
mov
xor
sub
lea
aaa
add
jmp
mov
push
inc
add
icebp
sub
enter
pop
mov
dec
adc
nop
sub
sbb
fwait
pusha
mov
push
jmp
dec
sbb
dec
mov
push
mov
cmp
push
jno
and
or
mov
or
mov
leave
sub
out
cmp
inc
aad
outsl
sub
ret
adcl
js
inc
aaa
addl
ret
outsb
mov
sbb
fcoms
xor
push
mov
outsl
scas
rorb
orb
inc
movsb
fwait
or
mov
push
notb
aaa
dec
inc
mov
ret
mov
push
stc
sub
xorl
cwtl
in
jnp
dec
adc
dec
add
or
stos
lods
jl
add
frstor
push
adc
rcll
scas
adc
stc
notb
stc
mov
aaa
ljmp
test
cwtl
aas
inc
sub
push
js
dec
fnsave
pop
add
push
inc
outsl
insb
outsl
jb
popf
add
roll
or
inc
cmp
mov
gs
outsl
nop
mov
add
repnz
ja
cs
add
cmp
pushl
jne
arpl
popa
outsb
popa
addr16
mov
and
jnp
and
add
popa
adc
jmp
inc
insb
popa
arpl
fwait
jne
mov
add
inc
mov
outsb
cmovg
inc
and
inc
in
cld
add
dec
popa
jbe
add
jb
insb
gs
mov
popa
insb
rcpps
test
and
imul
pusha
lahf
mov
inc
dec
imul
insb
outsl
xor
mov
ja
jne
or
enter
arpl
imul
popa
ret
push
push
add
pop
jbe
gs
add
imul
pop
adc
and
fsubrs
push
pop
and
inc
scas
loope
rolb
stc
pop
cmovae
mov
in
daa
das
jo
push
sub
push
pushf
sbb
addr16
pop
jbe
mov
je
inc
sub
dec
imul
data16
in
push
in
ss
leave
pusha
pop
adc
ljmp
mov
pop
sub
popa
jne
mov
ret
lret
imul
iret
sbb
dec
and
and
mulb
fbstp
rclb
jle
insb
and
dec
outsl
je
adc
lret
jmp
outsl
jns
insb
leave
fstps
adc
lret
or
in
and
inc
xor
adc
push
or
wbinvd
jnp
pop
and
mov
adc
sbb
mov
or
dec
dec
test
pop
push
arpl
es
xor
and
inc
inc
imul
xchg
or
cmpb
outsb
daa
or
jbe
lea
pop
inc
mov
out
xchg
das
loop
cmp
push
dec
pop
ret
push
mov
xchg
sub
std
xor
dec
push
dec
pop
inc
dec
inc
push
push
inc
push
add
inc
inc
inc
inc
push
popa
and
cltd
sbb
push
pop
dec
inc
dec
dec
adc
popa
lret
xor
dec
inc
inc
sub
mov
idivb
dec
dec
inc
push
dec
dec
push
pop
adc
mov
insb
flds
dec
out
dec
dec
adc
pop
repnz
pop
ja
inc
xor
xor
adc
dec
inc
adc
inc
xor
cld
inc
push
inc
inc
dec
fistl
dec
dec
push
dec
push
mov
sub
xor
jle
mov
pop
push
xchg
dec
inc
pop
inc
inc
dec
push
mov
fisttps
push
push
push
push
fbld
imul
scas
test
push
inc
xchg
dec
push
inc
push
dec
inc
adc
dec
push
mov
stc
add
pop
sub
mov
mov
mov
aam
and
xchg
add
jne
cmp
add
dec
sub
and
adc
cmp
sahf
imul
enter
inc
sbb
out
pop
std
je
movl
or
add
pop
mov
or
aaa
and
and
or
mov
or
xlat
lods
arpl
pop
movsb
loop
ret
or
add
adc
sbb
and
jmp
cmp
inc
movb
add
fldcw
dec
dec
lods
or
add
add
or
mov
lods
dec
mov
adc
and
adc
les
adcb
xor
or
or
xchg
loopne
mov
or
int3
add
jne
or
add
lock
lods
xor
std
out
lods
inc
mov
mov
xchg
xchg
in
mov
roll
or
inc
outsb
and
xor
mov
daa
lds
or
xchg
mov
push
xchg
pop
mov
scas
mov
fs
fisubs
bound
add
push
sbb
cmpsb
imul
invd
add
add
call
lcall
aaa
shr
push
mov
js
and
adc
test
xor
incl
or
inc
add
push
cmp
jle
adc
sub
sub
and
cld
shrb
dec
push
mov
cmpb
push
dec
xchg
andb
adc
daa
faddl
pop
adc
daa
cmp
mov
xchg
cmp
cwtl
or
cmpb
xchg
pushf
add
sub
mov
clc
mov
mov
imul
sub
jae
fistpll
push
cmp
shlb
inc
or
je
jnp
sbb
mov
add
mov
pop
inc
mov
cmp
add
xchg
stos
and
sbb
fadds
cmpsl
sub
aam
fsubrl
or
inc
sbb
add
fidivrs
andb
mov
orb
mov
fdivrs
test
iret
lods
lock
shlb
sbb
mov
ret
je
push
pushf
add
xor
mov
or
addr16
xchg
sub
add
and
and
js
pop
in
mov
outsl
add
rorl
movsb
sub
loope
repnz
fwait
sub
sub
es
adc
jmp
aaa
sbb
sbb
adc
adc
cmp
popa
subl
adc
add
or
xchg
and
add
clc
sti
movw
stos
scas
adc
mov
cmpsb
cmpl
enter
cmp
rcrb
cmpsb
push
push
aam
cmp
mov
push
mov
push
push
sbb
rolb
dec
pop
or
ret
repnz
or
lea
xchg
fnsave
sbb
fwait
pop
jbe
adc
push
xor
jae
sbb
shrl
jnp
enter
adc
sub
hlt
mov
mov
scas
cmp
dec
stos
add
cmp
mov
stc
xchg
pop
adc
sub
xor
xchg
leave
jle
sbb
xchg
lea
pop
and
mov
push
pop
pushl
and
popa
sar
sbb
add
add
fsubl
mov
in
cmp
inc
pop
addr16
or
or
push
imul
pusha
sbb
add
dec
xchg
loopne
sub
in
sbb
xchg
nop
out
leave
push
cmp
add
mov
pop
inc
fsubl
mov
sub
mov
hlt
mov
jl
pop
enter
ljmp
jle
sti
data16
scas
push
or
mov
push
xor
les
adc
lcall
push
mov
neg
mov
pop
add
aaa
jbe
mov
out
test
pop
sub
jne
mov
mov
enter
add
or
xor
pop
jb
subb
subl
orl
add
and
push
pop
mov
stos
test
jp
inc
lret
mov
popa
mov
das
sbb
sbbl
add
or
adc
add
add
insl
aas
enter
pushf
test
jge
or
jo
pop
data16
push
sub
shlb
mov
fists
inc
orb
cmp
stos
sahf
fadds
and
and
mov
aam
and
dec
ss
pusha
lds
xchg
int3
push
daa
mov
and
inc
arpl
dec
mov
xor
jo
xchg
mov
ret
aaa
jns
xor
sub
or
ss
call
push
or
nop
push
jle
out
jge
mov
mov
mov
out
add
int3
xchg
popf
cmp
adc
jbe
pop
icebp
mov
adc
cmpsb
pop
adc
mov
lret
pop
int
and
sub
xor
cwtl
xor
in
movsl
and
jmp
sbb
movups
adc
gs
and
jb
jmp
sub
jl
adc
sbb
dec
dec
jle
jno
pop
add
js
dec
pop
push
jg
call
inc
push
pusha
inc
inc
adc
pop
jb
sub
push
and
mov
push
inc
inc
jnp
xor
inc
xor
xor
push
add
pop
push
push
push
pop
or
fists
sbb
add
sbb
add
xor
pop
xor
jns
ljmp
decl
dec
add
push
pop
jo
jo
sbb
pop
adc
pop
adc
jo
inc
outsl
lcall
pop
sbb
xor
jb
and
jae
arpl
insl
dec
fs
jl,pt
cmp
lcall
aaa
ss
pop
xor
cmp
sub
sub
sbb
jo
xor
jmp
es
xor
or
cmp
pop
add
or
push
aaa
xor
pop
jns
dec
pop
jl
sti
incl
jle
push
add
pop
arpl
pop
pop
dec
pop
pop
inc
pop
push
cmp
jge
das
jbe
decl
pop
push
daa
js
pop
inc
inc
push
gs
cmp
arpl
jbe
sbb
sub
ljmp
xor
push
xor
or
sbb
or
adc
and
xor
cmp
sub
adc
and
sub
adc
or
or
dec
push
jg
mov
clc
pop
push
jle
inc
sbb
adc
outsl
inc
insb
jbe
jp
in
jle
push
inc
cs
inc
je
pop
jb
dec
push
dec
dec
dec
cmp
inc
pop
push
inc
dec
sub
lsl
push
insb
imul
add
adc
jle
jge
lcall
test
jne
or
ja
push
or
jp
add
ja
inc
fs
pop
push
sbb
pop
js
or
outsl
and
dec
jp
pop
xor
sub
inc
and
decl
cmp
dec
ficompl
imul
cmp
push
push
push
sub
jl
loope
or
inc
adc
or
sbb
mov
cld
das
aaa
or
or
adc
jb
pop
cli
fbstp
jp
je
inc
dec
popa
pop
gs
adc
inc
adc
pushl
jo
push
outsl
push
jo
and
cmp
pusha
insb
inc
jl
jo
xor
pusha
xor
incl
add
pop
sub
xor
xor
cmp
and
cmp
sbb
add
add
jp
sbb
jg
jo
sub
jne
or
jae
jne
pop
push
jnp
add
inc
add
lcall
arpl
or
jp
rcll
out
inc
imul
ret
call
pop
data16
jge
cmp
pusha
dec
pop
push
cmp
xor
pop
adc
in
inc
sub
sbb
xor
ss
pop
sub
arpl
jge
pop
js
add
mov
adc
ljmp
insl
insb
or
sbb
pop
dec
jbe
pop
pusha
bound
jnp
or
jno
mov
notb
push
dec
js
jbe
and
pop
daa
ret
decl
inc
jle
insb
inc
cmp
mov
bound
cmp
aas
push
std
jg
ljmp
xor
push
clts
push
subl
push
xor
mov
decl
aas
cmp
and
or
imul
rorb
loope
movsl
pop
jns
aad
jge
pop
orb
jg
imul
jae
sbb
push
sub
sub
fstl
and
and
ljmp
aas
jl
jge
cmp
subl
jp
jnp
cmp
push
das
push
pop
push
push
or
call
sub
pop
es
sub
and
outsl
inc
jnp
loop
push
ja
jne
jnp
fs
jae
jle
ja
pop
ljmp
and
fs
pop
adc
sub
bound
push
daa
pop
das
fdivrl
addr16
jbe
jle
push
inc
dec
pop
jb
ljmp
hlt
ss
add
push
push
das
xor
or
push
adc
and
pop
es
pop
std
or
add
adc
cmp
and
jnp
es
decl
dec
jp
inc
adc
inc
arpl
pop
inc
push
jnp
inc
inc
push
sti
ljmp
jbe
pop
gs
jo
jg,pn
outsl
sub
bound
pop
push
cmp
pop
ljmp
cmp
jbe
inc
jbe
imul
or
pop
je
insb
cmp
dec
pop
xor
adc
add
sbb
sub
adc
or
outsl
loope
xor
or
outsb
pusha
push
jge
inc
inc
dec
addr16
pop
icebp
inc
pop
inc
jp
add
je
adc
gs
mulb
cmp
jl
inc
jae
insl
and
fimull
dec
nop
pushl
sub
sub
sbb
push
imul
cmp
sbb
fists
fiadds
sub
sub
adc
adc
adc
dec
pop
incl
push
sbb
dec
pop
imul
jl
sub
jae
pop
je
push
sub
sbb
ja
aaa
push
jb
pop
inc
and
inc
je
pop
pop
cmp
ljmp
jns
add
push
add
push
xor
cmp
push
sbb
mov
adc
sub
and
jnp
xor
add
push
dec
adc
jle
sbb
sbb
inc
ja
pop
mov
movsl
jg
jge
push
push
inc
pop
dec
in
push
cmp
das
jne
pusha
push
bound
pop
jp
jo
pop
push
jns
pop
cmp
sti
call
push
popa
xor
adc
cmp
outsb
outsb
or
sub
jg
pop
arpl
xor
jg
add
jae
jno
pop
mov
sbb
insl
pop
pop
bound
inc
jg
imul
pop
jmp
pop
dec
sbb
sbb
jo
dec
gs
dec
jbe
pop
jo
pop
bound
xchg
jg
push
pop
dec
je
jp
jo
jbe
popa
pop
xor
sqrtps
ss
das
lea
push
xor
add
xor
aaa
push
add
and
cld
cmp
and
and
sub
jne
or
push
xor
outsl
test
ja
push
pop
or
inc
popa
pop
jo
ja
scas
clc
lcall
cld
dec
pop
sbb
and
pop
inc
ja
inc
and
pop
outsl
movsl
movb
ds
pop
xor
mov
jg
jmp
push
aas
sub
and
dec
outsb
push
adc
adc
outsb
sub
call
aas
and
push
sbb
cmp
adc
ja
pushl
outsb
lock
push
jne
pop
pop
sbb
or
pop
add
or
jne
dec
or
push
mov
sub
sub
decb
pop
in
and
pop
aas
fs
jge
inc
das
mov
aaa
pusha
xor
cmp
pop
inc
pop
add
idiv
incl
les
es
push
pop
xor
and
jnp
push
sub
or
sbb
mov
jno
adc
jns
pop
ja
bound
push
add
incl
jle
pop
dec
movsb
dec
data16
adc
adc
mov
dec
je
dec
add
and
aas
call
clc
push
inc
pop
inc
dec
push
dec
cs
je
daa
and
xor
xor
push
aaa
sub
test
pop
xchg
jae
and
add
jl
jl
sbb
pop
loopne
out
or
pop
add
das
pop
clc
or
rolb
sbb
pusha
add
add
adc
clc
push
ja
sbb
icebp
push
iret
imul
inc
jno
call
mov
jmp
xor
push
popa
push
xor
ljmp
lock
and
and
sub
pop
cmp
push
stos
shrl
mov
mov
cli
and
adc
lock
adc
push
ficompl
mov
outsl
std
inc
dec
sbb
sbb
sbb
sbb
imul
or
outsl
std
shlb
sub
arpl
push
and
inc
inc
push
jns
outsl
push
jmp
daa
imul
add
dec
add
cmp
stos
aaa
addb
and
std
jg
je
aaa
idivb
jnp
and
push
xor
ss
mov
clc
pop
xorb
dec
dec
sbb
push
add
mov
pop
push
add
jl
inc
js
fildl
shrl
dec
xor
jns
dec
mov
das
arpl
dec
inc
push
and
js
imul
decb
js
jns
cmp
or
jg
jg
addr16
jne
jae
push
add
add
jl
incl
sub
aas
xor
sub
adc
adc
jno
pop
clc
fcomip
push
pop
jne
cmp
sbb
inc
jg
jge
mov
jmp
rorb
scas
push
imul
pop
jno
adc
outsl
jo
and
xchg
jmp
dec
pop
pop
daa
sub
push
dec
xor
aaa
xor
adc
aaa
das
and
mov
add
xchg
cmp
pop
or
or
cli
mov
pop
jae
push
pop
add
ja
imul
repz
pop
xor
push
dec
push
es
dec
dec
pop
insb
das
hlt
pushl
sbb
inc
jl
aas
pop
ja
outsb
insb
aas
jae
arpl
addr16
dec
dec
jl
jmp
pop
adc
cmp
cs
das
jne
sub
mov
js
add
and
sbb
popa
and
cmp
pop
xchg
ss
adc
loop
test
dec
push
jle
add
push
or
jae
jb
adc
dec
into
dec
xor
jp
arpl
aas
jge
and
test
or
dec
dec
addr16
xchg
push
jg
push
shll
js
divb
sbb
sub
test
fisttpl
adc
test
jns
shrb
or
outsl
inc
push
mov
clc
filds
ja
push
jp
inc
dec
jne
add
insb
outsl
sar
movsl
jg
addr16
pop
push
pop
jge
push
jp
pop
pushl
sbb
jge
inc
pop
and
jnp
imul
clc
jmp
jge
push
aaa
dec
das
adc
cli
or
aaa
ljmp
ja
push
adc
jl
push
pop
sub
cmp
and
adc
cltd
push
pop
jb
in
adc
pushl
push
add
sbb
pusha
push
or
inc
insb
inc
xor
jg
jo
xor
push
cmp
adc
pop
push
and
es
ds
pop
jmp
push
daa
pop
push
add
sbb
xor
outsl
push
or
fldt
mov
adc
jbe
xor
mov
test
push
sub
inc
add
shlb
repnz
add
add
popf
inc
popa
dec
push
fildll
icebp
sbb
jl
pop
push
sub
pop
pop
dec
jle
lods
lods
push
xor
pusha
or
mov
inc
inc
insl
xor
push
testb
or
adc
xor
loopne
decl
mov
imul
daa
outsl
and
push
push
outsl
cmc
jg
bndldx
or
sub
xor
push
jno
decl
jg
add
push
add
adc
inc
sbb
js
jae
outsb
std
inc
test
inc
dec
inc
jo
push
ljmp
sub
pop
je
and
imul
dec
xor
inc
fsubrs
xchg
clc
inc
imul
daa
pop
cld
movsl
ss
jle
jbe
jns,pn
fsubl
jno
sar
jle
push
or
sbb
jl
daa
les
push
insb
cmp
xchg
insb
push
inc
decl
andl
adc
dec
popa
push
push
adc
or
push
das
pop
and
jne
insb
movsl
ss
inc
lods
pop
inc
popa
xchg
ss
hlt
pop
loopne
insl
pop
jle
xor
inc
inc
imul
and
xor
mov
sub
jmp
adc
adc
pop
mov
adc
and
adc
imul
pop
pop
xchg
lret
inc
data16
jnp
jae
jp
fmuls
or
popa
bound
je
or
jge
push
jbe
icebp
or
and
xchg
insb
outsl
cld
jnp
cmp
inc
jbe
jo
pop
push
and
outsb
and
les
sbb
xor
sub
jl
cmp
push
and
xchg
sti
lret
push
jmp
dec
jmp
jmp
xor
jmp
pop
jmp
test
jmp
push
jmp
sub
and
sub
loop
cs
and
lods
std
jbe
repnz
jmp
jne
or
pop
pop
jmp
jmp
std
das
add
jmp
push
jmp
mul
jmp
and
jle
or
jmp
add
dec
jmp
orb
insb
scas
mov
in
lret
ds
mov
in
shrb
push
and
or
pop
and
das
aam
push
mov
xor
add
ja
testb
popf
out
sub
add
in
test
inc
add
sbb
mov
mov
outsb
add
cmp
push
sub
or
inc
jne
sbb
push
mov
stos
fdivrs
xchg
or
lods
pop
bound
shr
push
fdivrl
loopne
sub
lret
stos
pop
insb
hlt
sub
or
ss
push
in
cmpb
lcall
jne
mov
mov
cmp
cs
jb
fisttps
xor
xor
pop
ss
cmp
push
leave
mov
pop
sub
inc
xor
mov
xor
inc
adcl
decb
bound
gs
xchg
lods
lea
std
outsl
jecxz
jne
popf
mov
jecxz
add
ds
or
and
add
sbb
mov
mov
pop
inc
add
push
inc
or
add
prefetchnta
cmp
jbe
mov
dec
pop
or
mov
mov
nop
shlb
mov
pop
xor
fwait
gs
int3
cmc
pushf
pop
int3
mov
int3
repz
adc
loopne
pop
jle
insb
pop
xchg
inc
add
push
sub
and
sub
aaa
mov
aas
inc
jg
sbb
mov
leave
out
dec
rcl
pop
push
sub
cmpb
or
mov
jecxz
mov
mov
sbb
fsubs
sub
fnsave
gs
mov
add
sub
pop
hlt
into
mov
mov
fsts
push
loopne
cmp
insb
pushaw
popf
psrlq
sti
xchg
mov
call
movaps
cmp
push
call
cld
nop
or
inc
add
das
xchg
adc
and
jo
insb
in
xchg
mov
pop
dec
push
add
push
dec
je
sub
jo
inc
add
lahf
sarb
add
mov
outsb
daa
fwait
popf
add
pop
push
and
cld
and
fistps
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
sbb
add
in
lret
inc
push
cs
lods
test
push
and
cmp
mov
popa
je
xor
add
or
pop
add
add
dec
pusha
adc
or
imulb
and
sub
inc
lcall
rcrb
mov
cwtl
pop
mov
sbb
add
xchg
pop
adc
aas
addr16
xor
add
jo
incl
orb
dec
mov
xor
shll
ror
fcomp
xor
shl
call
cmpsb
imul
imul
cmpsb
imul
addr16
sbb
lret
pop
add
fs
or
lret
gs
in
mov
add
pop
adc
and
sbbw
cwtl
sub
push
jns
dec
imul
pop
add
add
pop
and
sbb
ret
filds
mov
cmp
in
pop
add
in
sbb
xor
shll
dec
pusha
jo
shll
aam
pop
ss
in
add
adc
negb
cltd
cmp
add
ror
jo
adc
cmc
stos
add
orl
outsl
insl
popa
lahf
notl
sarb
stc
or
mov
pop
mov
jo
scas
mov
xchg
hlt
pop
lcall
jnp
xlat
mov
pop
ljmp
movups
bnd
cmp
add
pusha
repz
in
pop
jo
aas
faddl
add
sti
pop
lods
mov
or
shlb
add
or
xor
add
xor
sbb
xor
adc
jo
test
out
leave
xchg
shll
or
lcall
xor
dec
imul
imul
imul
cmp
sbb
adc
pop
adc
cmp
push
add
shll
or
sti
fs
dec
lcall
adcl
xchg
cmpsb
mov
cmp
lcall
imul
popa
lcall
xlat
mov
mov
jnp
jno
or
pop
or
sbb
and
sar
lret
or
add
or
or
dec
icebp
pop
mov
addr16
or
or
lcall
out
pop
hlt
pop
lock
pusha
popf
mov
pop
rcrl
xchg
cli
ficoml
xchg
sub
inc
shl
in
xchg
or
scas
nop
jmp
pop
or
pop
ret
push
jne
pop
rolb
mov
or
add
or
dec
jmp
xor
jmp
xor
pop
adc
sbb
add
xor
js
xchg
xlat
or
xlat
addb
or
pop
imul
cmp
js
loopne
enter
fwait
shr
mov
ja
or
fcoms
fnstsw
fisttpl
xchg
adc
sbb
orl
jae
scas
cmp
inc
sbb
adc
ss
inc
mov
pusha
sbb
and
divl
sti
inc
xor
ja
pop
enter
pop
pop
pushf
sbb
mov
scas
jmp
out
or
call
add
lret
dec
fcomps
and
xchg
xor
lock
daa
jo
jnp
or
fisubl
hlt
pop
mov
and
and
sbb
add
inc
cwtl
or
adc
lahf
dec
inc
adc
mov
adc
push
add
add
dec
add
data16
or
push
pop
or
add
dec
add
pop
add
inc
add
adc
cmpsl
add
fstpt
xchg
add
add
add
xchg
push
add
call
in
mov
flds
fprem
add
mov
cs
mov
in
ljmp
mov
ss
sbb
and
add
add
arpl
mov
cld
add
add
cltd
add
sub
addb
adc
in
add
add
dec
aaa
add
jge
push
mov
add
add
insl
repnz
neg
fildl
pop
add
rolb
les
adc
push
sahf
add
cmpsl
imul
add
jae
mov
outsl
mov
and
jnp
mov
pop
into
add
call
in
fildll
str
addl
add
adc
repnz
xor
ljmp
cmc
enter
sti
mov
or
out
fwait
inc
fsubrl
pushf
roll
sbbl
rol
and
jp
test
fbstp
push
int
or
add
in
stos
cmp
cmc
lock
lcall
add
std
mov
add
mov
fstp
mov
arpl
mov
lods
dec
mov
add
inc
dec
add
mov
das
sub
sbb
add
mov
movsl
das
lcall
add
cmp
pop
xchg
add
mov
xlat
popl
dec
xchg
orl
xor
add
sahf
sahf
push
jecxz
clc
pushf
pop
mov
fdivs
inc
in
add
mov
add
lret
mov
mov
cmp
insl
fisttpl
cs
xor
mov
mov
mov
sbb
in
int
loope
insl
rcr
xchg
pop
pop
add
iret
idivl
neg
xor
jg
imul
in
xor
cwtl
jle
shll
pop
cmpsl
cwtl
mov
push
fcoms
or
add
fdivrl
add
cmp
sub
sub
popf
pop
push
mov
sti
mov
xchg
js
loope
out
fcomip
add
jg
push
add
mov
lret
int3
and
test
jl
filds
cmp
jmp
bound
mov
idivl
loop
push
xchg
popa
loope
ret
mov
add
adc
int
fcmovnu
insl
enter
push
xor
mov
or
inc
jg
add
fsubrs
push
dec
call
xchg
lods
jo
and
rcrb
dec
sbb
incb
jbe
add
lock
sub
pop
sbb
sub
mov
push
push
stos
add
jecxz
rolb
push
sub
sbb
push
or
or
inc
insl
in
mov
dec
lods
add
sub
add
std
pop
outsb
sub
mov
mov
xor
pop
push
das
inc
scas
dec
cmp
push
ret
insl
pusha
xchg
orl
gs
add
mov
sub
jmp
fimull
stc
pop
push
mov
sub
or
in
rclb
loopne
lret
jne
addb
insl
or
ficoml
inc
mov
pop
jmp
and
mov
add
adc
das
add
push
movl
mov
dec
jge
pop
pop
sub
cwtl
cmpb
aam
xor
repz
sbb
inc
imul
xchg
loopne
xor
rcll
inc
lret
fcoms
xchg
aas
lds
imul
mov
dec
int3
mov
inc
cmp
pop
dec
inc
xchg
xchg
mov
adc
pop
arpl
incl
jnp
mov
je
and
dec
cmp
and
dec
xor
xor
mov
and
dec
xor
xor
mov
xor
iret
cmpsb
dec
push
enter
repnz
iret
dec
xor
xchg
add
cmp
repnz
add
pop
xor
iret
dec
icebp
inc
jecxz
adc
repnz
ljmp
xor
iret
stos
jnp
or
lods
pop
inc
xchg
and
sub
add
inc
xchg
call
outsb
jns
outsl
insb
insb
cmp
jbe
jb
add
sub
in
sub
out
add
push
add
cltd
push
pop
jg
popa
imul
push
pusha
jle
add
leave
add
outsl
push
mov
ficompl
jg
nop
add
sub
aad
je
loopne
fcoml
fcomps
pushf
lcall
stos
lea
cmc
push
push
mov
xchg
mov
inc
cmpb
xchg
aaa
push
add
xor
jmp
xor
iret
lret
cmp
fldl
dec
xchg
or
inc
adcl
push
std
add
jbe
frstor
jge
jae
jmp
xorb
push
outsb
rclb
ss
mov
push
ja
inc
xchg
loope
jo
arpl
push
sbb
mov
mov
xor
mov
mov
mov
imul
inc
dec
mov
repnz
fdivs
ss
push
pop
ljmp
sbb
sub
in
lcall
push
loope
in
mov
mov
movsb
mov
movsl
sbb
mov
rclb
sub
cmp
xchg
arpl
fdiv
add
loopne
mov
pop
call
insb
insb
jmp
and
pop
je
jl
add
cs
in
inc
sub
cmpsl
dec
inc
jae
push
mov
mov
inc
dec
cmpsl
push
sbb
pop
ljmp
add
lods
add
mov
ret
jge
xor
outsb
mov
adc
push
sbb
nop
cld
add
in
ret
mov
ret
sub
dec
movsl
int
movq
lret
shll
fidivrs
add
sbb
sub
out
jae
cld
fsubs
dec
add
xor
popf
sub
adc
insb
or
lds
add
add
jbe
sub
bound
outsb
movsl
add
cmpsl
lea
decl
decb
frstor
mov
add
jbe
sub
ja
push
jnp
pop
sub
or
outsb
mov
pop
fdivrs
addr16
cmp
test
rclb
nop
ljmp
mov
out
fstpt
or
pop
rorb
sbb
sbb
incl
cmp
add
sub
in
add
test
outsb
pop
cmp
mov
dec
jg
jg
mov
sub
lret
loopne
imul
jg
and
pop
jb
jle
add
arpl
mov
mov
pop
xchg
dec
rclb
and
les
lea
jb
fs
call
scas
outsb
sub
pop
jg
jp
jge
push
cwtl
pop
in
inc
jecxz
mov
loop
pop
jmp
mov
call
cmpsb
pusha
mov
jmp
aaa
jae
mov
mov
lds
leave
roll
adc
or
jae
jecxz
mov
shrl
pushf
iret
es
adc
aad
in
out
and
lods
pop
add
xor
insl
mov
add
addr16
fdivr
das
outsb
sub
jae
xor
pusha
add
add
xor
push
pop
add
and
subps
push
adc
mov
dec
mov
insl
test
addr16
in
mov
fcoms
mov
push
mov
out
dec
das
sti
pushl
fmul
jg
movl
lods
cwtl
rorl
dec
outsb
fcmovnb
add
shlb
int
mov
loop
into
xor
mov
sub
mov
je
adc
cmp
push
lcall
jp
int3
add
sbb
sti
rolb
xor
push
add
cli
js
pop
flds
pop
mov
jg
push
xor
scas
insl
mov
mov
mov
cmp
sbb
jno
add
addl
arpl
scas
js,pt
fcomi
add
pusha
lods
add
sbb
sbb
pop
fcomi
dec
xor
mov
out
jg
and
test
add
popa
adc
das
sub
mov
xor
in
add
das
insb
dec
pop
outsb
jg
jle
sub
insb
add
pop
stc
je
add
adc
dec
jg
repnz
adc
call
inc
add
pop
lret
jg
test
xor
add
and
mov
push
ror
add
add
xchg
xchg
xchg
mov
and
add
addb
mov
fcomps
xchg
out
pop
mov
add
push
add
iret
or
leave
pop
and
pop
int3
dec
pop
jg
xor
add
jg
imul
cld
jg
push
add
negb
das
incl
setne
inc
pusha
add
xor
add
pop
insl
mov
movsl
dec
das
sub
jg
pop
cwtl
fistl
mov
vpshaq
pushf
sub
movq
inc
adc
in
inc
mov
jmp
loopne
dec
cmpsb
and
lret
addl
imul
pusha
jbe
incl
add
add
mov
jo
fdivs
xor
cmpsl
pop
mov
addr16
call
adc
xor
iret
cmpsl
clc
repnz
push
add
lahf
out
stc
push
push
out
and
pusha
adc
outsl
sahf
xchg
cmp
inc
add
lea
repz
stos
inc
xchg
mov
mov
xchg
popl
fdivr
push
mov
lret
test
mov
repnz
mov
out
push
add
ja
stos
rolb
fcom
xchg
adc
push
xchg
or
jmp
cmp
imul
jmp
push
and
xchg
orl
pop
add
add
fisubrl
es
imul
fdivrs
mov
ss
into
lock
in
test
push
lret
pop
into
fsubrl
mov
imul
and
ljmp
add
add
jg
aad
cmpsl
mov
out
mov
xor
rolb
add
rclb
fdivrl
out
add
shl
xor
adc
inc
lcall
les
add
dec
jae
jl
insl
or
jl
ja
imul
lcall
int
pop
add
aaa
iret
cmpsl
mov
mov
scas
movsl
add
out
stc
xor
jns
xchg
imul
rcr
cmp
mov
and
inc
add
jecxz
lcall
add
pop
nop
dec
jae
sbb
jns
dec
push
ds
fwait
and
cmpsl
stc
filds
stos
pop
aam
sbb
pop
jmp
aad
test
in
int
imul
jns
repz
stc
xor
iret
fildll
in
add
xchg
adc
out
and
pop
sbb
int
fisubrl
mov
call
aad
pop
pop
pop
fbld
jns
or
aad
xlat
out
cld
pop
call
add
in
movsl
jg
repz
cld
add
xor
iret
dec
aam
les
mov
pushf
and
dec
xor
mov
jl
xor
mov
lock
cmp
iret
dec
inc
push
jnp
filds
mov
int
imul
add
icebp
mov
pop
add
fs
xor
iret
adc
push
and
loopne
xor
sbb
push
lret
add
fstpl
push
or
sbb
jno
jno
stc
xor
incl
dec
mov
cmp
out
add
lods
imul
add
fwait
out
cmp
test
les
xchg
ds
repz
cmpsl
inc
in
add
cmpsl
mov
rorb
jecxz
repnz
xor
and
repnz
push
std
aad
shll
adcb
mov
and
stc
inc
je
xchg
fcompl
ljmp
xor
test
popa
mov
shll
inc
lret
push
push
jge
adc
decl
push
mov
sub
loopne
scas
sbb
popa
jno
pusha
sbb
jg
sbb
stos
test
mov
nop
add
add
in
add
inc
jg
push
ret
bound
aaa
rcll
sub
jnp
in
scas
and
cmpsl
pop
fcmove
or
add
jno
push
pop
scas
fwait
mov
ja
fs
pop
pop
pop
mov
mov
cmp
ret
xchg
xchg
xchg
xchg
lea
cld
cmc
adc
data16
add
bound
addr16
shlb
insb
ja
in
jae
mov
inc
rorl
adc
sub
sub
push
lds
jnp
or
xchg
xor
out
jmp
sbb
jle
add
mov
int
outsb
mov
nop
pop
add
out
jg
ret
int
pop
ds
fnstcw
jg
adc
arpl
inc
inc
inc
jg
lea
fsubrs
cmp
jno
lahf
dec
jg
lret
pop
fildl
shlb
add
jae
pop
insb
jl
movsl
dec
shrb
jg
fistpll
jg
in
test
roll
jne
mov
add
in
mov
mov
outsl
inc
ficoms
es
or
out
jle
clc
imul
out
mov
sub
pusha
test
mov
popa
adc
mov
xchg
sbb
js
fcompl
call
js
push
push
in
rorl
ror
dec
jb
ss
mov
xlat
add
and
lods
pop
sub
sub
sub
add
addl
sub
insl
mov
sbb
cmpb
out
adc
ja
pushl
ret
aas
fiadds
jge
fcmovnu
pop
or
movsb
popf
daa
xor
shrl
outsb
insb
cmp
sub
mov
sbb
adc
or
add
inc
sbb
add
mov
or
outsb
insb
lods
dec
or
scas
mov
push
push
int3
push
mov
fisttpl
pop
icebp
add
fsubl
lea
inc
in
or
add
cmp
mov
test
push
pop
pop
jnp
mov
aam
mov
imul
mov
push
daa
cltd
pop
mov
push
std
into
cmpsb
push
les
jg
dec
popa
or
cmpsl
pop
jg
cmp
pop
add
and
daa
inc
idiv
insl
mov
popa
xchg
aad
rcrb
jmp
xchg
pushf
pop
sub
inc
fucomi
sub
push
jp
imul
pop
fcmovu
push
mov
jno
fidivl
imul
stc
sub
sub
mov
fcompl
aam
repz
push
fisubrl
mov
insl
sarb
add
inc
icebp
addr16
add
dec
cmc
mov
cmp
or
mov
jne
dec
add
mov
in
jp
adc
sub
mov
jecxz
in
pusha
inc
cltd
sub
fcompl
push
pop
sub
adc
inc
push
test
dec
push
jns
mov
adc
aad
push
add
dec
ret
fistl
jns
jmp
cmp
jg
out
mov
jg
or
in
push
or
sti
jg
mov
lods
out
xchg
scas
jmp
inc
lcall
insb
insb
pop
push
xor
insb
or
and
sbb
push
insl
outsl
pop
xlat
push
pop
aas
xchg
jg
mov
movsl
mov
sub
sub
jbe
jle
fisubrl
clc
xor
xchg
jl
loope
cwtl
outsb
or
adc
jecxz
dec
fwait
repz
sub
pop
jge
jb
push
mov
repnz
fidivrs
xor
push
mov
idivb
subl
je
rorl
lcall
nop
in
pushw
xchg
cmp
sub
sub
incl
iret
out
clc
movsl
mov
or
xchg
fistpll
outsl
out
iret
jg
add
jmp
jo
dec
xor
and
and
push
sahf
lret
aaa
jg
cmp
rcl
pop
sti
jmp
sarl
mov
fstl
pop
dec
aad
or
push
fcmove
pop
sbb
incl
mov
or
arpl
jg
jg
mov
push
mov
sbb
stos
and
cltd
cmp
ljmp
mov
enter
adc
movsl
pop
mov
ror
sbb
insl
jmp
pop
cli
cwtl
jg
in
ret
orb
mov
lcall
enter
or
pusha
aad
scas
mov
push
or
xor
aaa
inc
xorl
jg
enter
jg
add
jae
jg
add
lods
movsl
bound
ret
push
jg
mov
xor
imul
mov
xchg
pop
sbb
fs
sbb
mov
add
sbb
mov
insl
rorb
mov
mov
int3
orb
push
jmp
sahf
mov
jp
pop
pushl
push
mov
call
clc
cld
xor
std
add
inc
fcmovnb
jmp
mov
sti
jg
push
fstpt
les
push
jg
shr
cmpsl
mov
push
jl
sahf
push
xor
insb
in
ret
imul
cmpsl
cs
jno
dec
insb
sub
fucomip
test
xchg
pop
jg
sbb
sar
pop
nop
or
inc
xchg
fsubl
insl
or
out
mov
hlt
inc
enter
loope
add
mov
push
insl
fistpl
mov
push
int3
int
jnp
mov
fdivrs
sbb
or
mov
notb
push
fildl
lock
add
sbb
sub
mov
fidivrl
repnz
xchg
aaa
push
jg
ljmp
add
pop
jg
add
mov
mov
jg
cmc
lcall
incl
jl
stc
enter
add
or
inc
mov
mov
push
cltd
adc
jo
push
pop
out
sbb
mov
mov
es
sbb
add
inc
mov
sub
add
add
addr16
das
jge
cli
aam
push
push
fidivrl
popf
aas
in
fldenv
jecxz
imul
orl
cmp
dec
sbb
ds
notl
pop
lods
shrb
int
sbb
push
sbb
fldenv
jg
nop
or
push
mov
jg
sub
xchg
or
repz
push
pop
lahf
sub
mov
cs
das
inc
sbb
arpl
loopne
outsb
mov
fwait
mov
jo
mov
sahf
lds
sbb
or
mov
jmp
outsb
cld
lret
jg
aad
adc
mov
sub
test
das
inc
mov
or
pop
jns
xchg
pop
mov
inc
pushl
add
adc
ja
pop
push
sti
add
push
das
lcall
mov
ret
xor
and
or
stos
roll
dec
or
inc
sbb
ljmp
add
push
pushl
lea
mov
mov
cmp
or
sbb
data16
clc
into
jbe
pop
inc
rolb
in
inc
arpl
and
paddsw
mov
inc
xchg
xlat
xchg
adc
lcall
or
push
push
stos
jl
pusha
loope
das
insb
mov
add
sub
sub
jbe
jns
add
mov
jne
pop
push
and
in
pop
fidivl
sbb
cmpsl
xchg
mov
mov
insl
movsb
jecxz
xor
lods
sub
gs
imul
xchg
and
mov
rclb
or
sub
push
or
inc
insl
popa
stc
stos
add
pop
mov
test
ret
mov
fadd
movsl
insl
imul
pop
stos
jp
mov
js
pop
add
fcmovbe
je
mov
mov
sbb
js
rorb
inc
cmp
and
xchg
insl
popa
test
dec
push
push
popf
sarb
insl
and
push
jae
sub
lret
cwtl
or
pop
xchg
mov
idivb
mov
fisubrl
xlat
loopne
add
mov
pop
pop
fmuls
sahf
mov
or
fiaddl
xchg
cmp
lods
insb
aaa
lock
mov
adc
mov
insb
aam
sbb
enter
aam
mov
inc
int
fcompl
mov
mov
roll
movsb
pop
fstpt
push
rol
ret
mov
xchg
cs
dec
mov
and
adc
xor
fisttpl
mov
je
cmp
lods
mov
bound
mov
xchg
mov
xchg
mov
pop
adc
sbb
lahf
adc
jp
fcoms
mov
pop
jg
adc
insl
stc
jbe
pop
and
add
xor
mov
in
push
popa
mov
mov
fldt
xchg
push
push
test
bound
sti
mov
ss
fbstp
mov
xor
popf
aas
insl
arpl
push
call
mov
ja
or
jmp
mov
sahf
fsts
es
push
pop
fcmovnbe
idiv
mov
sahf
in
stos
lcall
in
cmp
or
mov
add
mov
cmp
frstor
sub
int3
inc
loop
cld
inc
mov
cmp
ds
pop
add
cli
fcmovnbe
pop
mov
loopne
das
sub
xlat
lcall
loopne
mov
loopne
mov
stc
mov
fcompl
arpl
test
adcl
imul
mov
push
push
add
xor
popa
stos
xchg
pop
cmp
filds
ror
jno
mov
push
mov
sbb
adc
sub
or
lahf
or
cwtl
xchg
test
movsb
inc
fldl
cmc
pop
push
cmp
pop
xchg
jge
bound
mov
insl
data16
cltd
fidivrl
sbb
push
pop
pop
imul
jo
mov
xlat
xor
push
sti
dec
xchg
shll
je
sub
ret
aam
sub
inc
inc
in
fnsave
ret
std
movsl
jno,pt
sbb
jbe
mov
inc
das
push
push
dec
mov
mov
adc
pop
mov
or
sbb
or
lcall
hlt
arpl
lret
and
ret
ss
stos
xor
js
xchg
test
push
stos
adc
fcoml
push
cmpsl
out
jle
imul
in
push
sub
fldl
cmp
push
pop
mov
sub
mov
mov
negl
repnz
push
sti
mov
out
add
test
or
mov
jge
insb
lret
insl
icebp
mov
loopne
xor
push
lcall
or
mov
pop
push
ffree
pop
iret
inc
mov
cmp
lea
sub
outsb
xor
int
ret
push
ret
or
sbb
cmp
mov
insl
test
mov
inc
in
pusha
mov
inc
out
fadds
mov
ds
add
lret
shrb
or
jnp
xor
xor
xlat
mov
loopne
rolb
jbe
push
imul
enter
sbb
cmp
inc
add
and
jmp
clc
inc
jbe
jno
inc
sti
rolb
dec
or
mov
pop
push
loopne
push
loop
xchg
jb
test
clc
and
mov
arpl
jno
lods
insb
or
jp
jl
pop
fcomp
push
xor
shrl
ja
xchg
fcmovb
sub
pop
int
adc
xor
sub
aaa
jae
or
add
push
cmp
push
jg
stos
loopne
pop
pop
mov
or
dec
lds
jmp
fmuls
or
cmp
push
jge
imul
fistps
cmp
or
sub
push
fcomp
push
mov
adc
push
jnp
or
insl
mov
cmp
push
les
pop
push
inc
and
mov
inc
aad
add
fdivs
das
ret
fwait
jl
lods
mov
mov
test
loopne
pop
push
mov
xlat
std
cs
dec
mov
pop
jne
pop
add
outsb
xlat
cli
fiaddl
push
xchg
xor
shlb
lock
sub
mov
shlb
mov
ss
pop
mov
into
push
insb
shrb
js
outsb
cmpsl
add
fisubrl
leave
mov
int3
mov
arpl
mov
cmp
inc
das
out
sbb
jne
push
fistl
in
in
daa
pop
push
dec
mov
in
negl
pop
mov
scas
imul
sub
fldt
dec
pop
sarb
add
jbe
mov
sbb
outsl
xor
mov
push
stos
adc
pop
movsb
xchg
fistps
ficompl
mov
sbbl
clc
daa
jbe
popa
sub
int
mov
and
fstp
push
mov
xor
ds
push
aad
or
fidivl
add
fiaddl
test
cmp
or
lods
test
jl
loopne
ret
fildl
inc
fs
add
fiaddl
rorb
mov
pop
fadds
adc
aas
sbb
inc
loop
mov
outsb
sub
cli
es
ljmp
mov
jp
pop
incb
mov
fcmovnb
push
rorl
mov
lahf
mov
mov
mov
fdivs
aad
in
int3
jbe
ds
ss
mov
lods
mov
gs
sbb
xchg
sub
push
pop
andb
mov
jae
mov
push
mov
addr16
imul
gs
fidivl
nop
sbb
jl
fdivrl
mov
push
fs
mov
mov
and
mov
shrl
in
shlb
sub
cmp
shrl
es
pop
pop
push
dec
andb
movb
lods
sub
mov
fidivl
ficompl
cld
aam
mov
insl
imul
push
stos
and
stos
mov
push
jge
add
ljmp
sbb
jns
sbb
mov
mov
or
rorl
or
leave
aad
mov
vpshuflw
mov
fwait
cmp
jo
sub
cmp
xchg
es
cmp
out
daa
sbb
lea
insl
pop
hlt
cli
lahf
inc
sbb
imul
mov
cmp
mov
aam
int
pop
fdivs
push
xor
sub
xor
hlt
std
add
sahf
in
movl
mov
cmc
test
insl
dec
add
sub
ret
out
xchg
jnp
xchg
enter
sbb
aad
sbb
jbe
mov
popf
pop
inc
sub
lret
les
mov
mov
outsb
mov
rclb
jb
jb
mov
out
clc
xchg
pop
insl
sub
sbb
jb
adc
pop
pop
fsubrs
pushf
in
sub
fildl
or
test
jle
sub
add
add
or
mov
xlat
push
inc
adc
push
fmull
mov
ficomps
jge
ror
xchg
push
insl
jmp
xchg
mov
loope
pop
or
data16
repnz
mov
sub
mov
outsb
or
jbe
lods
jg
out
in
xchg
add
mov
popa
stc
add
add
hlt
and
imul
fcomi
sbb
ds
stos
fimull
sub
xchg
insl
xchg
jmp
imul
jae
add
add
ljmp
imul
add
fildl
dec
or
push
insl
sti
repz
or
je
push
mov
jmp
jae
hlt
push
repnz
mov
mov
cmpsb
mov
or
mov
push
mov
mov
imul
ficompl
ss
add
lret
ret
cmp
jns
aad
sbb
imul
pop
int
fsubrl
fiaddl
pop
dec
ret
xorb
ja
inc
sub
ds
mov
mov
dec
push
sbb
xor
add
insl
fcmovne
jns
stos
pushf
das
adc
imul
or
lret
push
ficoml
or
xchg
fiaddl
sub
or
sub
mov
jbe
imul
xchg
movsb
xchg
add
mov
mov
test
aaa
mov
ja
fcmovnu
es
jmp
adc
adc
add
outsb
mov
dec
sbb
lods
enter
and
fimull
lret
mov
mov
movups
mov
mov
mov
sub
mov
lods
insl
das
lret
mov
mov
fcmovnb
pop
pop
rcr
repz
mov
push
or
rcrb
fcmovnu
popa
mov
sahf
adc
push
ja
add
outsl
jmp
add
xor
insb
lods
test
aam
loop
ficoml
insl
or
imul
xchg
add
mov
push
mov
and
mov
push
outsl
dec
fcmovnb
call
imul
sbb
sub
add
dec
out
add
mov
rclb
shll
mov
inc
xor
cwtl
out
and
dec
and
je
xchg
sub
jbe
add
dec
pop
or
pop
jbe
mov
fidivl
loopne
aad
mov
mov
fdivs
pushf
dec
lret
aam
sub
mov
fs
dec
pop
dec
call
rorb
fmuls
cmp
adc
xchg
sbb
or
idivl
push
push
fisubs
adc
mov
sbb
ss
clc
or
inc
mov
mov
lret
inc
jl
and
mov
lods
aam
outsb
pop
mov
sbb
and
in
leave
fmul
test
stos
mov
ret
mov
loop
cld
ret
imul
mov
fidivrl
sbb
mov
push
fsubrs
cmp
insl
sub
inc
pop
movsb
shlb
push
fldt
dec
adc
fs
inc
mov
mov
cmp
mov
adc
sub
pop
in
push
scas
mov
push
xor
fsubrs
dec
push
inc
pop
xor
mov
fldt
cmp
jnp
mov
add
cmpsb
push
dec
pop
pop
push
push
dec
cld
inc
out
pop
add
pop
xchg
adc
sub
es
sti
fdivs
adc
push
fldt
lea
add
out
and
pop
insl
clc
mov
loope
sbb
mov
imul
inc
test
mov
mov
shlb
fdivs
push
push
ja
mov
pop
fstpt
xchg
out
cmpsl
pop
in
sbb
or
cmp
xchg
movsl
movsl
dec
inc
inc
in
xchg
mov
push
in
jge
insl
mov
dec
lahf
or
mov
push
push
adc
dec
sub
xchg
mov
jmp
fistpll
mov
loop
ret
lea
shrb
js
add
in
mov
jae
leave
das
push
mov
adc
mov
push
jg
imul
lea
cmp
lods
test
mov
iret
movsl
sub
fimull
push
push
pop
outsb
pop
jno
mov
iret
pop
lods
xlat
into
pop
loopne
rcr
dec
and
stc
loope
inc
add
in
lods
add
cs
test
ret
icebp
jecxz
test
ret
mov
or
inc
loop
jmp
push
fsubrl
daa
push
push
or
les
mov
loopne
std
stos
lret
mov
xchg
pop
mov
add
cld
sub
mov
or
js
lret
mov
test
push
outsb
sar
insl
or
ds
and
mov
mov
cmc
cwtl
jl
mov
mov
negb
sbb
jmp
ror
sti
or
pop
fst
rclb
cltd
mov
mov
mov
jne
ss
cs
pop
es
ret
popa
add
stc
rolb
aam
push
js
adc
mov
xor
xchg
in
ror
add
insl
stc
shlb
push
in
inc
sbb
push
mov
xchg
gs
pop
push
insb
pop
mov
sub
and
lds
mov
xor
imul
pop
or
fldt
clc
jae
lret
fs
xchg
sbb
outsb
fildl
sub
mov
xor
fcmovnbe
and
push
clc
repnz
iret
insl
sbb
popa
mov
adc
xor
repnz
jl
or
loop
inc
inc
xchg
inc
fwait
cld
xor
ss
mov
dec
cmc
mov
lcall
sbb
dec
outsl
sub
xor
mov
pop
mov
les
enter
xlat
fs
ret
out
or
or
fistpll
dec
or
fistl
test
sbb
orb
adc
dec
inc
mov
or
sub
pop
xor
push
sub
movsl
or
imul
ss
int3
sub
sahf
xchg
lods
insl
imul
xlat
push
inc
mov
insl
mov
movsl
add
add
sbb
fcom
push
outsb
inc
std
jge
lea
sbb
into
je
dec
mov
outsb
insb
lret
mov
push
mov
mov
or
xor
push
mov
aam
cs
pop
out
ret
xchg
pop
jmp
mov
sub
inc
lret
ds
enter
fidivl
lds
or
sub
jnp
imul
cmp
mov
mov
imul
or
cwtl
push
jge
aaa
adc
sbbl
gs
jne
stos
push
in
test
cmp
or
cmc
mov
pop
sub
aam
icebp
repnz
pop
cltd
adc
pop
outsb
cmpsb
sbb
imul
inc
pop
xor
pop
jbe
mov
mov
mov
aam
enter
sbb
mov
dec
out
dec
jge
mov
dec
fildl
insl
popf
lods
inc
roll
scas
push
ficoml
fldenv
or
dec
mov
push
shl
repnz
stos
les
dec
lods
adc
pop
fnstcw
mov
insb
mov
je
clc
icebp
mov
dec
pushf
mov
rcrl
out
adc
jp
loope
fwait
ljmp
pop
inc
jg
insl
in
inc
shlb
in
add
in
mov
fnsave
cli
and
pop
das
outsb
dec
or
or
ss
mov
mov
sbb
pop
in
mov
enter
sbb
sbb
mov
into
shrl
lods
add
push
mov
xor
cmp
cwtl
xchg
mov
jp
ret
dec
and
mov
pop
int3
insl
in
mov
adc
cld
mov
cmp
insb
insl
mov
mov
xlat
repz
cs
push
mov
or
dec
pop
adc
mov
test
in
inc
pop
mov
jbe
popf
je
pop
in
mov
movsl
mov
cld
dec
jp
das
ljmp
outsb
push
ds
cmp
out
mov
add
ret
mov
adc
movb
sub
mov
mov
test
imul
sub
dec
subb
jbe
shll
jns
stos
add
fcmovnb
ret
adc
cs
test
inc
scas
clc
sbb
rclb
decb
out
fcmovnbe
in
fistpll
adc
pop
fldt
mov
mov
xor
inc
pop
mov
xchg
sbb
sbb
in
dec
mov
divb
outsb
dec
aaa
push
dec
cwtl
dec
xor
cmpl
fsubrl
leave
mov
mov
jo
mov
stos
inc
in
sti
das
sub
repz
enter
pusha
cmc
loop
mov
ss
and
and
leave
jbe
fdivl
push
in
popa
mov
test
and
jg
sub
imul
and
add
movsl
shrb
popa
sub
pop
mov
jecxz,pt
inc
cmp
shrb
xchg
dec
ja
xchg
loope
mov
mov
bound
add
or
insl
fcmovnbe
rcrl
cld
ds
adc
cmc
in
and
xchg
outsb
ficoms
ret
int3
and
insl
insb
call
imul
das
pop
push
in
stc
mov
sub
out
add
daa
test
cs
adc
js
adc
dec
or
xchg
leave
insb
and
mov
popa
pop
inc
pop
push
outsb
movsb
jmp
adc
mov
pop
shrb
jle
movsl
inc
insl
pop
mov
lcall
inc
pop
outsb
xchg
jbe
add
int3
enter
push
shrb
loop
mov
or
pop
push
fimull
adc
sub
pop
mov
hlt
mov
push
ss
jp
sbb
fldenv
jp
fdivl
push
rol
rolb
sub
xchg
jo
xor
movsb
ret
outsb
pop
cli
pusha
push
dec
mov
rol
cltd
insb
divl
popf
mov
dec
insl
push
or
lods
insl
pop
fisubl
mov
adc
mov
test
xor
enter
jmp
push
das
lret
add
incl
and
add
ljmp
mov
lea
and
das
mov
mov
jne
insl
insl
mov
dec
inc
sti
stos
pop
mov
mov
enter
mov
int3
add
mov
fisubs
mov
xor
mov
cmp
jl
aaa
add
shll
push
xchg
push
lea
mov
cmp
adc
arpl
jecxz
enter
sub
lea
scas
fwait
sub
pop
mov
mov
out
nop
filds
int
sub
inc
sub
sub
repnz
push
xor
fwait
mov
fwait
popa
popa
loop
test
and
sub
lock
xorb
incl
inc
mov
int3
movsl
pop
adc
jno
insb
lcall
js
pop
mov
fnstsw
mov
cmp
test
mov
lock
mov
pop
pusha
imul
arpl
inc
mov
jmp
icebp
out
add
into
cmpl
in
orl
repz
inc
or
mov
add
mov
mov
jb
pop
or
adc
dec
mov
mov
cs
adc
push
inc
loope
lods
jns
test
xor
pop
sub
mov
jns
mov
pop
mov
inc
mov
push
mov
test
cmpsl
add
fstl
cmp
xchg
rcl
sub
fs
aas
mov
xchg
xchg
sti
bound
out
inc
xor
jns
or
jmp
sub
inc
loopne
lock
sahf
ret
fs
jbe
imul
inc
fnstsw
sbb
mov
test
push
mov
fcom
cmp
cmp
out
add
jge
sub
fidivs
mov
popa
outsl
xchg
and
mov
add
movb
mov
das
js
mov
lods
cld
ret
out
ret
inc
sbb
and
cmp
mov
add
add
push
push
inc
add
push
pop
pop
mov
sbb
push
and
je
ja
insl
rcl
es
xor
mov
cld
add
out
dec
xchg
jb
dec
or
push
push
scas
inc
inc
cmp
sub
in
inc
push
shrb
mov
insl
sbb
pusha
xchg
es
mov
mov
cld
inc
das
dec
loop
and
loope
sub
push
or
add
enter
insl
mov
fldcw
push
jle
loope
mov
jge
adc
jae
xchg
ss
lods
test
scas
dec
jg
pop
xchg
jbe
xor
andb
cmp
repz
jmp
in
xchg
inc
cld
mov
sub
xchg
add
add
xchg
pop
add
jno
popa
xchg
mov
or
dec
cmpsb
or
add
xlat
mov
fstpt
push
pushf
jne
and
insb
insl
in
add
jge
jl
dec
lahf
or
fcompl
shl
lea
test
sub
movsb
pop
loope
jecxz
test
push
dec
jg
imul
mov
shlb
pop
mull
cmp
sub
sbb
inc
lods
movsl
push
fisubl
fildl
mov
sub
test
ja
cmpb
test
mov
fcoms
adc
pop
js
orl
pop
pop
jl
cmc
inc
dec
add
add
mov
pusha
mov
and
or
outsl
mov
jg
xlat
aaa
int3
or
adc
lea
mov
ss
push
cmpsb
sub
jge
xchg
call
pop
movsl
btr
pop
mov
cs
clc
sub
push
dec
loopne
out
mov
pop
mov
add
adc
or
movsl
cmp
or
fcmovnbe
or
push
movd
imul
hlt
fsts
inc
fistl
outsl
pop
sbb
push
sbb
inc
sub
fisubrl
pop
push
aam
stc
mov
mov
bound
cs
xchg
insl
pop
mov
gs
cmp
jo
inc
popa
cmp
mov
mov
sbb
aad
mov
jns
xchg
dec
push
cmpsl
lods
mov
insb
in
push
sbb
xor
push
ficoml
push
fwait
jns
push
add
dec
pop
inc
test
pop
jno
cmp
mov
sbb
jp
dec
imul
and
sub
rcll
lea
push
xchg
fcmovbe
push
popf
cltd
popf
out
jg
fcmovnu
xchg
xchg
push
sbb
out
movsl
and
mov
or
xor
xchg
inc
sub
mov
gs
out
jae
mov
dec
push
xor
mov
add
das
rorl
call
cmp
clc
aas
mov
lea
adc
outsb
mov
xchg
sub
lods
imulb
call
roll
sub
pop
insl
sub
mov
inc
or
pop
pop
shll
adc
outsb
adc
ss
mov
loope
cmp
or
add
cwtl
mov
insb
sbb
clc
and
mov
jnp
pop
jmp
inc
cmp
mov
push
outsb
insb
xor
cmp
dec
ret
xchg
mov
insl
mov
sub
movntq
push
fadds
int
inc
lcall
and
fdivl
cmc
mov
insl
adc
outsl
dec
mov
push
lock
aaa
dec
push
mov
adc
fisttpll
fstpt
and
popa
sahf
rcr
in
insb
pop
pop
fldl
xchg
lds
cmp
and
mov
or
sahf
mov
xorl
dec
or
fcomps
fisttpll
fildl
mov
fcomp
test
jle
cltd
dec
repnz
push
pop
mov
add
xchg
or
dec
push
lods
jl
loop
fwait
mov
pusha
clc
dec
push
add
test
mov
mov
lret
mov
jb
mov
inc
lods
xor
in
test
inc
or
and
outsl
sbb
mov
movsb
inc
add
punpckhbw
das
bnd
imul
verw
add
and
sbb
mov
ljmp
inc
mov
fistl
dec
mov
sbb
es
lods
push
lea
dec
leave
push
js
dec
cmp
adc
mov
cs
sbb
inc
pusha
cmp
jl
add
test
imul
mov
jl
cmpsl
ret
or
lods
xchg
mov
inc
sub
in
insb
pop
sbb
arpl
pop
insb
test
mov
pop
jo
pop
jmp
jbe
jmp
loope
pop
nop
lock
adc
inc
insb
test
imul
inc
inc
sbb
insl
test
insl
pop
into
lock
fistpl
and
or
dec
shrl
aam
jbe
frstor
stc
and
sti
test
adc
add
movsl
movsb
aaa
push
pop
scas
jne
insb
or
fisttpl
or
add
cmp
add
xchg
insl
sbb
je
loopne
jb
adc
jae
mov
inc
jns
in
lds
ret
pop
jae
fdivl
xor
aas
outsb
pop
fistl
adc
or
mov
fnsave
mov
fcmovu
add
jge
xchg
addl
xchg
mov
out
lret
mov
ja
pop
test
or
mov
fsubrs
insb
push
mov
push
sbb
dec
adc
xchg
xchg
mov
maxps
test
push
mov
jbe
or
push
pop
pop
pop
sub
imul
push
mov
sbb
inc
jge
jno
shlb
pop
pop
adc
add
out
mov
mov
dec
adc
hlt
mov
pop
leave
sub
jne
fcmovnb
repnz
mov
pop
in
outsb
pop
mov
xchg
cwtl
mov
sub
rclb
cmp
mov
insl
fldt
pop
sarb
inc
xchg
imul
mov
xor
gs
lock
xchg
ret
fldt
mov
mov
mov
in
pop
cmp
jns
imul
jo
and
aaa
loopne
imul
sub
pop
mov
cs
add
cmp
out
inc
pop
inc
cs
xchg
pop
adc
icebp
ds
mov
or
pop
cwtl
ja
mov
fcomp
lods
lods
pushf
jge
inc
mov
pop
pop
mov
jge
icebp
pusha
push
icebp
sahf
shl
fildl
cmp
adc
fcmovu
fdivrs
sbb
in
fsubs
pop
cltd
lret
mov
ljmp
jecxz
mov
pop
cmp
xor
sub
lods
add
insb
or
ret
mov
ret
jmp
mov
das
je
xchg
sbb
inc
insb
mov
dec
pop
outsb
cmp
jnp
sbb
mov
insl
jne
and
sbb
mov
insl
in
push
and
sub
leave
jo
loop,pn
outsb
sub
mov
lret
hlt
mov
cmp
add
jle
rorb
push
data16
xor
insl
mov
and
popf
rol
mov
arpl
xor
jp
lea
sbb
fcmovbe
jle
xor
ja
xlat
mov
pusha
push
nop
xchg
sbb
repnz
ljmp
mov
enter
inc
dec
mov
lods
out
cmp
jns
shrl
dec
repnz
sbb
movb
pop
mov
aaa
stc
vphadduwd
pop
pushf
sahf
cmp
adcl
clc
push
mov
icebp
cmpsb
mov
mov
push
mov
mov
movsl
mov
stos
into
loop
pop
mov
adc
insl
fcmovne
xlat
xchg
test
sarl
mov
pop
sub
xchg
and
test
push
pop
je
and
dec
movsl
bound
xor
mov
sub
mov
mov
mov
inc
jno
add
imul
mov
daa
sub
xlat
int3
mov
jo
pop
out
dec
inc
out
add
cmp
mov
ja
sub
jns
jo
add
out
push
or
jge
xchg
inc
outsl
mov
ret
into
mov
daa
sub
sbb
add
add
sbb
dec
sub
rorb
lea
sti
fldcw
mov
add
aaa
sub
or
fadds
push
push
sub
inc
mov
xchg
in
jg
shrl
fsubrl
addr16
and
add
sub
lcall
movsb
pop
dec
outsb
or
and
pop
dec
outsb
aad
mov
cs
test
push
jecxz
mov
std
push
loope
addl
popa
xor
pop
insb
adc
xchg
jns
pop
mov
add
ret
jbe
push
fiaddl
hlt
andl
loopne
xchg
mov
shlb
push
mov
jb
add
push
jecxz
stos
dec
push
aaa
add
mov
fcomi
cmpsl
sub
cli
sahf
xchg
mov
insl
imul
ret
xor
xor
fcmovu
rcr
push
jmp
jmp
mov
sbbb
addr16
in
mov
test
mov
clc
jp
les
cmp
sbb
loope
mov
and
jle
mov
scas
fistl
sub
push
dec
push
call
pop
arpl
add
aam
bound
insl
mov
xor
imul
test
or
cwtl
jle
sahf
adc
jmp
lods
inc
in
inc
aad
fwait
out
jge
push
push
xchg
imul
sub
pop
rcr
lahf
adc
mov
adc
outsb
xor
xor
dec
mov
dec
jl
data16
push
pop
mov
ja
inc
and
stos
fistpl
enter
fildl
mov
jecxz
insb
in
fistl
in
or
pop
fldt
mov
inc
sub
cmp
pusha
jmp
mov
mov
add
rcrb
jo
pop
cmpsb
sbb
test
mov
mov
lods
gs
push
insl
test
push
and
add
insl
xchg
outsl
and
adc
mov
gs
mov
lret
lret
adc
add
arpl
jnp
or
or
test
shll
dec
xchg
push
pop
push
dec
sahf
sub
sub
das
jg
mov
push
lret
bound
mov
jle
movsl
lods
push
sub
int
clc
adc
pop
mov
rclb
pop
jp
sti
lret
shll
aaa
sysret
sbb
mov
adc
jne
in
gs
rol
xor
mull
dec
popf
cs
lock
push
adc
fdivs
fstpl
iret
repnz
repnz
mov
scas
push
mov
cltd
mov
mov
popf
push
test
mov
out
adc
push
fisubl
sbb
ss
adc
ret
mov
inc
test
or
sub
inc
xchg
fildl
jno
test
leave
mov
sub
loope
mov
xchg
cmp
pop
lret
mov
into
aam
fdivs
ss
popa
movzbl
pop
xchg
fdivrs
andl
or
pop
mov
or
fnsave
dec
mov
lcall
pop
test
cmc
jno
adc
mov
ss
cmp
dec
adc
mov
ja
in
sti
pop
ficompl
mov
shl
lods
fstpl
pop
inc
test
push
jge
pop
add
mov
xor
and
mov
fidivrl
cmp
jae
fcmovnbe
mov
out
xchg
iret
lods
ljmp
cmp
cs
mov
mov
in
or
or
fistps
in
mov
xor
outsb
sub
push
lods
lods
jbe
and
test
xchg
mov
or
nop
jmp
xor
arpl
test
xor
inc
mov
aad
dec
scas
xchg
insb
mov
dec
lret
push
stos
lcall
mov
xor
pop
into
push
insb
test
mov
sbb
dec
subb
push
ret
stos
imul
push
mov
sub
cwtl
cmc
mov
movb
and
add
fstpt
pop
sbb
ret
inc
xor
cmp
xor
xor
je
jp
sub
push
gs
stc
cwtl
xchg
mov
pop
cmp
xchg
and
adcl
arpl
in
or
movsl
enter
pop
fstpt
pop
xor
or
mov
scas
rorl
sti
push
pushf
lds
sbbl
aam
xlat
ficompl
pop
stc
mov
push
mov
jae
xor
shll
cli
xchg
push
insl
sarl
sti
es
push
mov
inc
mov
sbb
mov
push
mov
lret
fsubrl
jno
ret
jge
insb
fdivrl
xorb
pop
andl
jae
push
in
add
aaa
mov
jno
jle
addr16
je
lds
dec
aam
int
push
insb
test
imul
lods
jmp
sub
mov
or
sbb
add
cmpsl
test
subb
mov
stos
pop
mov
jecxz
in
mov
push
push
mov
push
jge
out
inc
or
mov
jge
fisubrl
shl
sbb
adc
dec
inc
insl
popa
sub
stos
push
pop
das
xchg
push
ss
push
ret
mov
stos
outsb
insb
sbb
idivb
rcll
mov
dec
rorb
mov
fsubrs
mov
jge
sbb
scas
in
mov
and
hlt
imul
outsb
pushf
or
and
sub
mov
dec
pop
bound
insl
pop
and
aam
andl
inc
inc
jbe
lods
adc
arpl
or
mov
mov
data16
scas
xchg
push
mov
aaa
cwtl
xlat
lcall
sbb
cmpsl
sbb
fisubrl
dec
test
mov
mov
out
cwtl
sub
or
insl
mov
sbb
push
pusha
test
les
movsl
inc
cwtl
xchg
sbb
movsl
rorb
or
adc
fwait
insb
xor
mov
lret
imul
mov
sbb
outsb
cltd
xor
fcmovnbe
pushf
mov
push
out
mov
inc
lods
fsubrl
cwtl
push
inc
pop
shll
pop
test
lods
mov
in
aad
movsb
push
arpl
and
lea
add
add
test
rcrb
cmp
mov
push
lods
je
push
mov
fwait
lods
fcoms
and
or
sahf
sti
push
dec
mov
fldl
mov
inc
lock
jle
push
js
mov
or
inc
mov
dec
sub
insl
cmp
sahf
fwait
pop
in
push
push
mov
jbe
subl
aam
ds
pop
clc
pop
pop
mov
mov
sbb
push
std
mov
int
xlat
cld
mov
sub
cmp
insl
imul
mov
push
lods
imul
xchg
adc
sub
fistl
jno
sbb
jge
fildl
pop
ss
gs
andb
fimuls
add
jbe
test
jmp
adc
sarb
lock
fcmovnb
cmp
lods
pop
sbb
mov
dec
pop
dec
lea
sbb
mov
jecxz
push
xchg
and
pop
adc
and
xchg
add
das
subl
jmp
lods
lods
lods
pop
mov
inc
jbe
inc
mov
push
fcomp
cmp
sub
push
mov
mov
inc
sub
sti
inc
mov
xor
adc
lods
lea
mov
or
mov
mov
cmp
mov
sti
mov
inc
int3
or
test
sub
mov
ss
jno
mov
aas
hlt
fs
rolb
sub
pop
or
in
sub
add
scas
fsubr
mov
mov
mov
sarl
sub
sbb
aam
das
sbb
js
mov
repz
lahf
and
push
jne
pop
or
mov
fcmovu
push
fnsave
loope
sbb
pop
jmp
push
in
or
jg
ja
mov
test
aas
pop
adc
sbb
rcrl
push
das
mov
mov
pop
andl
mov
lods
add
xchg
ja
fidivrl
lcall
ss
jmp
insl
in
sub
add
aad
popf
or
or
out
adc
ret
dec
sbb
shl
xchg
and
mov
shll
xor
push
lret
mov
pop
bound
out
insl
test
fnsave
sub
pushf
inc
mov
or
add
outsb
or
adc
aam
or
sbb
push
ja
xchg
insb
lahf
xchg
sbb
mov
sbb
loop
xor
lret
jp
orb
subl
inc
popa
fldt
jl
add
fcomi
jge
mov
sub
mov
xchg
mov
add
lret
popf
pushf
fiadds
add
insl
add
test
popa
pop
jne
ljmp
in
inc
pop
mov
test
in
sbb
insb
insb
cmpsl
cmpl
adc
inc
mov
shrl
or
fldt
lock
jge
ret
fcmovnb
dec
push
in
jl
inc
push
fwait
dec
ret
mov
sahf
sub
push
xor
lods
or
ret
or
xchg
cmp
or
mov
popa
xchg
insl
or
inc
jge
cwtl
in
scas
push
adc
xor
mov
cltd
insl
sbb
fldcw
mov
jmp
xchg
mov
popa
imul
fldt
test
incb
insl
mov
movsl
gs
daa
out
ss
ret
pop
dec
lea
push
fisttpl
sahf
mov
pop
test
sbbl
push
stos
inc
jecxz
push
inc
aas
dec
daa
rorb
fisubrl
and
ret
fnsave
lods
mov
mov
enter
jle
pop
push
insb
insb
insb
xor
sbb
sbb
add
rcrb
pop
mov
dec
dec
mov
sub
mov
repnz
sbb
dec
insl
pop
pop
fimull
xlat
jbe
pop
push
insl
inc
fcmovu
roll
in
repnz
inc
fcomp
mov
jmp
cmpb
mov
pop
js,pn
mov
xor
xor
jp
sub
popa
adc
jge
les
inc
mov
mov
aam
sbb
adc
jecxz
iret
lea
leave
shrl
imul
adc
ret
and
test
pop
fnstsw
rclb
push
mov
stos
mov
sbbb
or
inc
cltd
in
pop
mov
jg
outsb
pop
test
insl
push
arpl
sbb
insl
sbb
clc
sar
and
je
sbb
flds
lahf
loopne
outsb
or
das
adc
rcr
fnstsw
push
push
or
jle
push
mov
inc
fnsave
cmp
mov
pusha
or
sbb
stos
or
cmp
push
push
mov
das
push
lahf
sub
mov
rclb
pop
push
cmp
sbb
mov
pop
cltd
xchg
pop
sbb
in
add
cwtl
fmuls
les
shlb
lret
paddq
fstp
test
mov
cs
mov
jmp
dec
mov
sub
pushf
ja
push
aaa
insl
mov
push
nop
jbe
xorl
cmp
adc
mov
aad
mov
mov
and
add
fcompl
mov
lods
xor
add
lret
push
xor
fidivl
push
or
mov
scas
fildl
fwait
mov
ds
mov
rolb
jne
fsubrl
pop
fidivl
stc
or
jl
popa
fsts
fisubrs
mov
and
inc
fisubl
inc
pop
cmp
push
je
xchg
or
dec
insb
aaa
fmuls
cmpsb
fmuls
fdivs
lret
clc
rcll
jle
lahf
mov
add
lods
mov
clc
jbe
shlb
shrl
movsb
pop
fwait
test
mov
lods
lock
fdivl
outsb
xchg
add
sub
rclb
cs
iret
movsb
ret
ret
stc
cmpsl
inc
or
adc
out
or
mov
mov
mov
jmp
or
bound
mov
sbb
rolb
jb
outsb
push
sahf
fadds
outsb
jge
lahf
pop
xchg
test
sbb
mov
or
repnz
iret
add
add
mov
inc
test
popa
movsl
lods
rorb
jb
inc
and
mov
imul
mov
fnstenv
movb
mov
add
outsl
movsl
add
sbb
sbb
or
xchg
lret
sbb
mov
and
pop
pop
adc
sbb
mov
pop
data16
enter
movsl
aaa
ja
push
aam
mov
push
arpl
and
retw
mov
xor
sbb
sbb
test
inc
outsl
jmp
cs
popf
mov
mov
adc
xlat
imul
sbbb
mov
shll
mov
cmc
je
or
xchg
mov
jbe
xchg
jg
inc
movsb
mov
pop
sbb
push
sbb
dec
add
outsl
jno
outsb
pop
mov
dec
sbb
fistpl
lock
jge
cltd
and
mov
jbe
shrb
xlat
pop
xchg
fwait
roll
push
ja
sbb
mov
jae
loope
mov
clc
pop
loop
pop
mov
in
mov
jnp
insb
sub
mov
insb
sbb
mov
stc
lds
dec
mov
push
pop
loope
mov
shrl
test
mov
fwait
sub
fimull
das
jno
icebp
xchg
pop
xor
ficompl
mov
cli
adc
sbb
sub
lahf
dec
jne
hlt
sub
bound
outsb
xchg
sbb
cli
or
outsl
push
sbb
mov
mov
adc
mov
xchg
mov
lcall
pop
aas
cmp
pop
push
cmp
lea
sub
xor
imul
mov
stos
sub
mov
roll
jne
sahf
rorl
sbb
mov
sbb
ds
stos
xor
and
sbb
rol
push
jge
addr16
push
es
in
ret
adc
sub
pop
out
and
jne
sbb
pop
mov
test
mov
sub
in
and
xchg
dec
sahf
xor
adc
fwait
mov
mov
mov
inc
subl
lahf
adc
ret
fildl
ljmp
aas
outsl
shl
mov
inc
lods
in
fisttpll
xchg
mov
push
or
pop
jae
aad
movsb
add
adc
jae
jl
insl
es
bound
dec
jg
mov
inc
inc
sub
pop
pop
sbb
insl
mov
or
cmp
into
pushf
sti
fcmovnb
mov
sahf
jmp
inc
xchg
cs
mov
jge
jbe
sbb
cli
sub
cmp
mov
jo
or
es
xchg
sbb
stos
mov
mov
jo
imul
dec
mov
lret
shrb
ja
mov
mov
mov
jb
test
mov
and
lods
fnsave
push
cmp
decb
jg
rolb
insb
add
sti
xchg
movsl
insl
out
sub
enter
gs
aas
js
or
sbb
ret
in
lds
mov
sbb
inc
fldt
jbe
into
pop
das
mov
shrb
aad
mov
mov
imul
push
faddl
fnstcw
xchg
mov
lret
ret
fs
fcmovnu
inc
mov
adc
cmp
ret
out
push
icebp
jne
or
daa
sub
lea
push
push
sbb
in
mov
adc
ss
dec
add
shl
mov
mov
ret
mov
jnp
xor
insl
mov
cmp
loopne
pop
fists
lahf
jecxz
xor
lock
or
cmp
std
mov
call
stc
bnd
mov
and
mov
in
push
mov
sbb
pop
outsb
lea
jmp
cmp
pop
repnz
popf
inc
data16
or
cld
xchg
movsl
insl
mov
lods
push
pop
mov
add
test
pop
mov
mov
insl
pusha
das
dec
inc
dec
jno
pop
push
stos
inc
insl
fistl
jge
dec
mov
imul
neg
mov
sub
mov
dec
xchg
mov
pop
fcompl
rolb
add
inc
mov
pop
enter
mov
stc
sbb
insl
mov
sub
lods
dec
dec
clc
sti
cs
adc
sahf
xor
stc
cltd
pop
ss
lods
mov
mov
shlb
mov
mov
jbe
es
xor
js
dec
pop
fcomps
mov
call
fdivrl
andb
jne
dec
aaa
lahf
mov
xchg
cmc
aam
lods
dec
sbb
imul
lret
push
jmp
sbb
inc
enter
push
xchg
sbb
popa
pop
stos
decb
mov
cmp
lahf
mov
xchg
cmp
cmp
or
ss
pop
xor
push
pop
scas
pop
es
shl
lods
jo
and
mov
sub
mov
pop
push
flds
cmp
insl
sub
add
sahf
mov
insb
mov
enter
mov
or
mov
cmp
sbb
aas
aam
sub
push
xchg
shlb
xchg
push
push
out
fwait
int3
jecxz
cmpsb
mov
adc
jno
ds
lods
insl
sbb
mov
dec
into
sbb
fmuls
mov
data16
addr16
rolb
pop
pop
and
orb
outsb
pop
pop
mov
xchg
inc
fnsave
xor
outsb
in
mov
mov
gs
add
jecxz,pn
push
sub
fcmovnbe
outsb
cmpsl
ljmp
pop
mov
ficoml
shlb
popf
cmc
pop
test
push
lea
jo
mov
adc
add
shrl
stos
mov
xchg
ficoml
adc
loope
mov
jmp
rcr
imul
lahf
fs
push
xchg
ja
test
cs
jmp
and
fildll
push
mov
dec
pmullw
push
pop
fcomp
jbe
sbb
or
stos
jo
ss
aad
sti
mov
shr
sub
jns
fwait
xchg
scas
jl
jmp
imul
loop
popa
fldt
adc
xchg
jae
ficoml
sbb
daa
add
or
mov
pop
sub
or
ss
xchg
into
aam
cmp
insb
adc
mov
sub
mov
lods
cwtl
mov
push
mov
pop
lods
sub
jle
pusha
sbb
add
movsb
je,pn
adc
add
test
xchg
cmpsl
imul
fcmovnbe
xor
sbb
and
sub
shl
mov
popa
imul
testl
imul
and
insl
test
jae
test
sub
pop
push
popa
push
and
mov
add
or
add
cmp
pop
inc
or
jle
lcall
fisttpll
jo
fcoms
xor
insl
fisttpl
adc
adc
jae
pusha
push
les
pop
or
pop
fisubrl
std
pop
dec
or
movsb
and
popa
lods
xor
dec
mov
mov
test
pop
xor
das
inc
push
pushf
mov
imul
aam
movsb
mov
pop
fidivl
and
les
insb
or
push
sub
insl
mov
clc
jp
add
pop
push
mov
push
mov
adc
cli
scas
jl
imul
jbe
jno
sbb
pop
push
enter
add
movsl
mov
dec
cli
sbb
insl
adc
stc
push
xor
cmp
lods
push
shrl
cmpsl
push
lea
cli
or
pop
mov
ds
popa
hlt
adc
test
stos
xchg
mov
xchg
sbb
imul
imul
rolb
mov
cmp
push
fiaddl
aad
xor
adc
sub
pop
push
add
pop
push
lock
jbe
mov
ret
xchg
or
fisubl
mov
push
mov
sub
fcompl
pop
pop
fs
jns
push
or
ret
or
xor
add
outsb
fcmovnbe
ret
jge
mov
mov
mov
fiaddl
in
sbb
aad
pop
mov
mov
bound
and
cwtl
in
jge
lods
insl
push
int
mov
fsubs
ljmp
or
pop
lds
pop
test
icebp
mov
loope
push
mov
inc
sub
push
and
jbe
mov
out
push
ss
enter
adcb
roll
lret
imul
scas
pop
int
or
ds
sbb
out
insl
pop
stos
inc
adc
into
lds
sub
inc
insl
or
pop
jl
push
in
jne
jg
cs
pop
mov
xor
out
mov
mov
jne
xor
pop
out
nop
sbb
int3
pop
sub
imul
lods
mov
mov
gs
push
in
or
xor
pop
negl
sub
fldt
hlt
fisubrs
movsl
sub
dec
mov
cmc
sarb
and
jae
push
dec
in
mov
shll
dec
sub
movsl
pop
xchg
stos
sub
addl
mov
das
and
or
stos
je
fcoms
inc
adc
fidivs
pop
adc
popa
xchg
cli
xchg
xlat
inc
lds
ss
sahf
les
movb
mov
lea
adc
sbb
mov
mov
je
xor
cs
and
mov
dec
dec
aaa
pushf
mov
jae
add
les
push
xor
ss
shr
decl
arpl
push
cmpsb
lods
popa
push
loop
insl
pop
jecxz
loopne
and
push
imul
and
and
sub
or
cmc
add
pop
push
mov
insl
xor
ds
sbb
das
sub
fstpt
push
addb
sbb
sub
scas
push
pushf
sub
xchg
dec
mov
pop
hlt
cmp
lret
outsb
sub
pop
adc
movsb
cmp
cmc
lods
and
or
mov
pop
mov
jnp
iret
add
push
push
jo
push
in
fisubl
mov
mov
jo
and
cmp
xchg
ljmp
sbb
in
add
inc
pop
lds
cli
mov
in
mov
mov
ljmp
arpl
ljmp
stos
fwait
or
pop
adc
lods
test
test
push
inc
xchg
aam
push
pop
mov
movsl
xchg
cmp
dec
xlat
push
rorb
inc
xorl
loop
pop
test
and
imul
sbb
sbb
insl
imul
pop
and
ror
shlb
movsb
sti
xor
outsl
insb
add
std
outsl
or
lods
ficomps
cs
frstor
bound
pusha
fidivrl
rorl
cmp
jle
cli
repnz
insb
test
adc
dec
add
mov
pusha
in
mov
push
inc
or
in
mov
lock
enter
imul
push
xor
insl
xchg
jg
add
das
in
outsb
pop
pop
mov
mov
sub
aam
and
in
mov
lds
arpl
push
mov
lea
adc
add
insl
stc
mov
pop
std
jae
push
push
clc
or
loope
mov
jno
mov
add
dec
fidivrl
lods
repz
mov
add
insl
scas
xchg
jmp
xchg
sbb
ds
outsb
out
xchg
ss
aaa
lahf
push
jl
sbb
cs
adc
cli
pop
xor
mov
xchg
mov
cmp
loopne
xchg
jnp
pop
mov
pop
mov
push
mov
add
in
mov
sbb
add
sbb
in
stos
mov
mov
fistl
add
fcmovnu
pop
xchg
je
in
in
mov
add
sub
rclb
push
loop
xor
push
roll
or
fildl
ja
cmp
mov
push
jp
pop
pop
pop
xchg
push
mov
xor
lods
mov
cmp
outsb
sarb
push
fiaddl
push
xor
jns
ret
mov
hlt
inc
dec
movsb
dec
jae
sub
ss
lods
sahf
pop
sbb
push
mov
jle
mov
bound
xchg
push
sbb
mov
xabort
std
out
cwtl
push
push
or
cs
jb
and
mov
pop
or
sub
call
je
or
sub
loopne
test
sbb
fsubrs
pop
imul
mov
ds
test
clc
mov
adc
or
mov
sbb
sub
adc
nop
scas
or
inc
out
push
xchg
mov
push
stos
outsb
in
xchg
daa
es
mov
mov
lds
inc
and
add
outsb
push
sbb
dec
adc
cmp
mov
adc
rclb
lea
sbb
mov
cmp
mov
mov
shr
xchg
ficompl
fiaddl
jnp
cmpsb
mov
arpl
mov
in
nop
push
into
insl
add
mov
insb
or
insb
mov
push
mov
sub
adc
jno
push
pop
sbb
mov
cmp
and
ss
ret
in
into
sbb
fmuls
xchg
push
mov
mov
test
adc
sub
mov
fcmovb
add
sub
cli
pop
insl
xchg
pop
sti
lea
push
pop
push
xor
insl
inc
mov
pop
fimuls
fidivrl
negb
jno
stos
cmp
bound
fndisi(8087
pop
fcomi
push
leave
add
jmp
and
insb
andb
sbb
rorb
cmpsl
in
call
cmp
ja
cmpsl
and
inc
pop
cmc
and
mov
pop
add
jno
leave
adc
push
imul
adc
add
cmp
pop
fcoms
fimull
cmp
push
mov
test
mov
insl
or
bound
sahf
pop
pop
bound
push
mov
adcb
xchg
or
push
outsb
rorl
push
stos
repz
jecxz
add
in
cld
fistps
lea
cmc
cmp
pop
dec
push
jecxz
mov
mov
loope
add
out
aam
je
cmpsb
xchg
rcll
mov
mov
aad
push
pop
pop
adc
sbb
cli
into
ds
in
jo
pusha
add
xchg
sbb
sbbl
mov
mov
jmp
xor
lds
pop
sbb
pop
mov
lea
inc
aam
lea
shlb
idivl
jo
sub
ss
mov
aad
mov
insl
imul
lret
repnz
lock
add
mov
push
movsl
mov
push
aas
pop
fdivs
fisubl
sbb
ret
sbb
and
test
scas
pop
cmp
lcall
mov
add
imul
fistps
or
adc
jp
inc
mov
outsl
outsb
dec
sbb
das
outsb
aam
pop
call
mov
cmp
stos
lea
nop
add
adc
insb
xor
data16
gs
ret
inc
add
outsb
or
enter
push
dec
test
xor
test
in
out
or
and
fcomp
dec
mov
mov
xchg
mov
pop
test
xchg
mov
or
lds
xchg
inc
cltd
jmp
js
std
add
test
ret
push
es
test
adc
mov
jp
sti
mov
addr16
cmp
pop
fsubrs
push
cmp
stos
push
adc
cs
in
mov
push
dec
xchg
jns
inc
ficoms
js
pop
pop
sub
cli
sarb
shlb
popa
pop
bound
loopne
mov
mov
insl
imul
mov
sub
sarb
push
push
sar
mov
lods
jp
fadd
mov
push
xchg
test
add
sbb
pop
fidivl
sbb
mov
mov
test
or
daa
mov
test
xor
hlt
icebp
test
push
push
mov
stos
cwtl
xor
mov
or
add
pusha
cld
shrl
outsb
push
adc
push
mov
pop
fdivrs
jb
pop
mov
pop
pop
jbe
jne
mov
mov
add
imul
aad
loope
mov
aam
jbe
and
movb
mov
mov
jecxz
pop
insl
pop
xchg
pusha
jbe
lds
xchg
push
mov
stos
adc
dec
or
xchg
lea
loop
mov
inc
shr
out
jb
adc
outsb
gs
out
stos
mov
insl
cltd
leave
mov
sbb
fmul
jnp
pop
xor
mov
insb
pop
aam
das
add
shlb
cmc
and
imul
xor
xchg
mov
and
das
icebp
mov
sbb
pop
mov
jecxz
mov
add
nop
icebp
fdivs
mov
or
arpl
inc
push
sub
enter
inc
outsb
sub
add
and
cmp
fucomip
add
xchg
adc
add
fcmovu
repnz
xchg
xchg
fisttpl
jmp
pop
sub
adc
xor
outsb
insl
sti
and
mov
insl
mov
mov
es
push
mov
sub
mov
cld
dec
mov
adc
inc
jne
pop
push
mov
addl
fbstp
jl
les
scas
lcall
sub
xchg
jns
fsubrl
and
shl
sbb
mov
test
outsb
movsl
inc
xchg
dec
fmul
or
mov
jb
int
insl
sub
mov
repnz
test
inc
fstpt
sub
imul
push
gs
jp
movsl
dec
test
xchg
insl
hlt
mov
aaa
pop
push
cli
addb
sub
arpl
xor
movb
cmp
xchg
push
xor
cwtl
or
fchs
ret
repz
aad
cmpsl
mov
ja
repz
jo
fsubrs
mov
xor
mov
adc
cwtl
gs
jl
mov
lods
aaa
add
mov
mov
dec
add
daa
inc
sbb
xchg
push
mov
outsb
sbb
inc
out
fwait
int3
push
fisubrl
fwait
ret
aaa
stos
sbbl
rcrl
or
jnp
sub
mov
fmuls
pop
or
shrl
inc
test
fldt
pop
mov
and
lock
mov
mov
test
loopne
pop
push
in
mov
and
sti
push
sub
jmp
pop
jno
inc
cmpsb
pop
repnz
movsl
sahf
cmc
lds
cmp
insl
sub
fcoms
cmp
outsb
mov
dec
ret
dec
stos
push
add
inc
cwtl
adc
ret
sbb
mov
sbb
lds
cmp
sub
scas
push
mov
outsb
xor
add
push
mov
adc
cwtl
daa
mov
jmp
js
lret
sub
cmp
add
lret
pushf
outsb
sub
push
jne
sti
mov
gs
or
fisubrs
pop
out
outsb
cmp
insb
or
int
popa
je
mov
fisubrl
cmc
xchg
idivl
cs
test
push
push
fsqrt
pop
xchg
sbb
sub
imul
sub
shlb
push
jbe
das
or
shrl
ret
ret
stos
dec
fldenv
in
mov
jbe
fisttpl
dec
push
mov
addb
xchg
rclb
fsubl
sbb
fcmovnbe
mov
pop
subb
or
mov
sbb
leave
xchg
cs
jecxz
cmp
mov
mov
or
lods
sbb
xchg
rorl
push
outsb
movsl
lods
or
hlt
jno
out
sbb
sub
leave
jecxz
inc
fcmovnu
pop
fdivrs
mov
mov
lods
pop
lods
inc
repnz
mov
push
fsubr
sub
and
lods
insl
sbb
adc
fmuls
ret
aaa
pop
cs
add
xchg
loop
jg
mov
insl
dec
dec
push
adcl
push
xchg
mov
movsb
jecxz
jns,pt
inc
imul
movsl
push
aas
and
inc
or
pop
xchg
aad
mov
sti
cli
sub
scas
mov
cmc
adc
les
mov
dec
mov
fsubrl
insl
pop
lahf
js
cmp
lods
stos
outsb
insb
ljmp
push
test
cs
mov
outsl
jo
mov
cmovno
dec
into
sub
les
jne
sbb
inc
imul
fcmovnu
xchg
dec
pop
sub
inc
int3
inc
xorl
jp
imul
add
or
pop
jo
imul
mov
push
push
movsl
ret
cmpsb
mov
pop
add
insl
xchg
mov
in
jle
mov
incl
pop
lds
mov
mov
pop
mov
cmpb
xchg
push
mov
das
int3
out
cld
push
push
pop
push
call
push
mov
cld
mov
insl
pop
add
add
mov
ds
sub
imul
sar
or
clc
ss
subb
aas
mov
leave
lret
fwait
pop
jnp
sbb
jo
or
std
sub
add
out
pop
push
fildl
fisttpll
sbb
ret
push
pop
jg
pop
xor
mov
mov
scas
aad
aam
mov
addb
jg
add
insb
das
inc
lods
cmp
sbb
pop
mov
jae
dec
mov
insb
stos
outsb
jl
xchg
fsub
sti
xchg
mov
jmp
mov
pop
mov
aas
mov
das
mov
pop
mov
ret
repnz
xor
xlat
movsb
sub
mov
sub
ret
mov
adc
enter
add
aam
cs
pop
ja
inc
cwtl
rorl
lods
add
mov
inc
ror
push
bound
push
addl
outsb
mov
fimull
sarb
sub
xor
lods
inc
mov
vphadduwq
testb
popf
push
xchg
cmp
push
sub
adc
insl
mov
and
push
push
in
push
mov
lock
adc
fs
add
push
insl
insb
sub
pop
subb
mov
cmp
xor
and
dec
fcompl
aas
jns
repnz
push
jae
ret
mov
mov
push
arpl
ficoml
iret
adc
mov
aam
pop
push
cli
rclb
jg
fwait
push
stc
mov
call
aaa
rolb
jo
and
leave
das
push
stos
fistl
subb
add
inc
dec
add
cvtpi2ps
call
sbb
xlat
or
fisubs
rclb
lds
xchg
inc
and
jbe
add
enter
mov
and
ja
in
push
imul
or
sub
pop
mov
inc
fwait
loopne
add
push
cmp
sahf
cmpsb
sti
dec
insb
je
jno
test
mov
dec
fistl
jle
mov
popa
notl
fs
loope
lods
mov
stos
jp
je
jae
mov
or
and
push
adcl
inc
xor
outsb
sbb
fildl
bound
mov
orb
inc
lret
inc
cmpsl
rol
jo
mov
inc
fwait
es
iret
shlb
jb
push
add
fcmovnbe
in
popa
imul
xchg
mov
push
mov
scas
rcr
inc
imul
cmc
or
pop
movsl
add
insl
das
fs
cwtl
in
mov
insl
imul
adc
xchg
mov
push
gs
xchg
mov
stos
andb
leave
fistl
mov
loope
inc
adc
test
xor
aam
out
pop
adc
add
shrl
mov
xor
insl
mov
ficoml
test
addl
mov
mov
inc
cmpsb
popa
inc
pop
push
pop
mov
add
mov
pop
sub
icebp
xchg
mov
pop
and
leavew
dec
sbb
sbb
mov
pushf
mov
das
insl
fistpl
mov
mov
add
add
movsl
or
jge
inc
mov
fildl
in
ret
add
loopne
stos
clc
add
into
add
or
adc
mov
mov
test
andl
into
cwtl
insl
fcmovnb
insl
xchg
mov
xor
push
xchg
mov
mov
mov
in
jg
add
mov
push
inc
add
dec
add
lods
lds
push
mov
adc
rorb
pop
popa
fldt
cmp
in
loop
lea
stos
mov
addr16
pop
sbb
fisubrl
cld
jle
mov
add
sub
fidivl
cltd
aam
or
push
inc
push
scas
pop
pop
mov
or
xchg
hlt
sub
jge
call
push
jns
pop
lds
lock
xor
insb
pop
cmp
add
insl
addl
mov
scas
mov
rcll
pop
testb
fistl
mov
mov
or
push
fldl
push
mov
cmc
add
and
mov
inc
icebp
inc
jecxz
sub
addr16
fcmovnbe
mov
sbb
test
std
sbbb
mov
sub
jp
xchg
in
push
jge
and
inc
xor
movsl
and
pop
lea
pusha
mov
or
aad
ss
pop
negb
mov
sbb
and
jmp
ret
xchg
sarl
loope
add
mov
std
cmp
repnz
mov
or
aad
push
mov
mov
outsb
jge
fdivrs
mov
lea
sbb
inc
mov
mov
ljmp
mov
inc
mov
pop
inc
inc
push
mov
shl
sbbb
sbb
jno
stc
add
pop
sub
imul
outsb
in
inc
mov
je
fwait
gs
mov
mov
dec
es
sti
sub
fldenv
sub
pop
test
and
push
fisttpl
cmp
push
das
gs
lcall
enter
sub
std
mov
xor
pop
lea
jnp
rolb
jecxz
dec
mov
fisubrl
sub
push
lock
das
xor
aad
ret
ja
lret
jp
sub
mov
sbb
mov
mov
into
add
icebp
mov
push
jno
fcomi
sahf
test
aas
mov
push
fistpl
mov
add
lds
rcll
insl
pop
mov
or
mov
orb
ficompl
lods
mov
sbb
movsb
pop
ljmp
cmp
pushf
xor
into
fwait
jne
push
lods
subl
jmp
lea
fucom
push
shrb
mov
inc
inc
cmp
fnsave
mov
sub
outsl
std
inc
push
or
fnsave
cmpsl
out
or
fdivs
fdivr
stos
sub
das
cmp
xchg
jns
repnz
push
sub
or
jno
add
ret
subl
or
push
pop
fcmovnbe
adc
xor
mov
fnstsw
ljmp
stos
adc
inc
shll
xlat
addb
test
push
inc
je
aam
dec
inc
scas
ret
push
cmpsb
jb
pop
inc
sub
mov
jb
imul
mov
bound
cmp
icebp
popa
add
xchg
cmp
aad
jp
clc
loope
mov
inc
sti
xor
repz
cmp
mov
mov
push
mov
lods
push
push
xor
fdivs
sti
mov
xchg
mov
cmp
mov
or
into
and
xchg
lods
fnsave
je
ds
ss
sub
cld
inc
pusha
ljmp
push
sub
fmuls
iret
adc
mov
or
xor
xor
jne
scas
scas
bound
pop
bound
mov
mov
sub
inc
imul
pop
adc
in
push
mov
ret
rolb
fmul
lods
popa
inc
cmp
add
aas
add
xlat
ficoml
subb
and
outsb
add
push
pop
push
mov
pop
inc
xor
jmp
jg
aam
out
ds
add
add
scas
add
jbe
xchg
mov
add
pop
nop
inc
mov
mov
dec
push
xchg
mov
insb
mov
sub
xchg
adcl
xor
add
lds
mov
mov
rcll
pop
fcoms
sub
pop
adc
and
fidivl
mov
xchg
andb
std
add
mov
lret
arpl
cli
add
pop
push
xchg
adc
dec
inc
dec
mov
popf
add
push
into
daa
xlat
repnz
mov
test
out
insl
pop
jo
xchg
mov
insl
cmp
aam
ja
pop
mov
cwtl
xchg
adc
sub
pop
inc
fdivrp
mov
stos
mov
shll
jbe
leave
fistpll
mov
cs
lods
es
gs
xchg
in
inc
jmp
loope
jae
add
and
out
xor
pop
js
out
lea
dec
push
sub
cwtl
xchg
or
mov
add
inc
mov
push
ret
push
cmc
jg
fimull
clc
cmp
sub
popa
popa
pop
pop
push
inc
rorl
pop
pop
fisubrl
out
movsl
pop
loope
mov
fiaddl
int
das
sub
mov
movsl
jle
push
jno
insl
sbb
repz
sbb
fcmovne
xchg
call
sbb
fadds
pop
push
xchg
rolb
aad
dec
mov
xchg
dec
in
imul
jg
shrl
xchg
loope
pop
inc
add
lret
pop
leave
movsb
das
add
mov
mov
or
vpmacssww
cmp
mov
rclb
push
scas
xchg
stos
fwait
mov
cs
popa
out
je
ret
pop
mov
fildl
mov
jge
insl
insb
fcmovnbe
rolb
mov
movsl
inc
sbb
sbb
adc
sbb
xchg
aaa
hlt
push
xor
movsl
in
ret
fmuls
mov
mov
aam
jns
test
inc
out
ja
lea
mov
lock
test
mov
insl
mov
fsubrl
lods
lea
jnp
popf
push
mov
lret
mov
fsts
incb
nop
stos
insl
jmp
push
aas
stos
add
add
mov
jl
cmpsb
add
adc
jle
adc
aad
ret
mov
loopne
ss
insl
jo
or
popf
sub
mov
fistl
gs
into
outsl
inc
mov
sbb
aad
in
and
loopne
pop
fmuls
imul
cld
imul
mov
lret
popf
inc
sub
mov
imul
scas
les
dec
add
jge
mov
mov
dec
jmp
pusha
orl
lods
add
add
dec
fisubrl
add
pop
mov
mov
and
test
dec
jp
jecxz
adc
mov
push
xchg
or
in
pop
lahf
das
jl
shlb
pop
rcr
mov
mov
popa
pushf
xor
jo
shrb
fsubrs
xchg
xchg
test
test
xchg
dec
pop
jns
or
ja
add
add
insl
sub
xchg
rorl
push
pop
ss
fisubl
movsb
cmp
js
fildl
mov
mov
insl
pop
jbe
stos
out
pop
sbb
mov
inc
es
adc
inc
adc
xchg
mov
in
mov
jecxz
xor
inc
inc
popa
mov
xchg
xchg
add
ss
cmpsl
cmpsb
adc
sahf
cmp
fidivl
insl
fbld
push
in
mov
in
outsb
loopne
pop
fildl
adc
xor
movsl
cwtl
adc
push
mov
push
cmp
fisubl
shll
sbb
mov
mov
fcmovnbe
inc
fs
jae
lret
add
xor
lret
frstor
adc
mov
push
mov
roll
shlb
fisubs
mov
mov
mov
jmp
mov
stos
mov
dec
ret
cwtl
mov
mov
icebp
inc
lcall
adc
sub
mov
dec
jnp
cmpsl
or
pusha
add
xor
mov
xchg
jle
push
std
fildl
ja
adc
and
icebp
insl
mov
or
and
mov
clc
xchg
dec
push
sub
xor
sub
push
mov
pop
xchg
pop
cmp
jg
push
fstpl
pop
lods
ds
std
inc
dec
sbb
movsb
or
shl
pop
mov
mov
je
push
xchg
cli
hlt
mov
sub
push
adc
out
outsl
imul
xchg
jg
popa
shl
mov
in
in
add
test
sbb
int
sub
xchg
push
jns
adc
jmp
lods
lds
inc
leave
fidivrl
pop
push
dec
pop
push
dec
sti
and
or
add
filds
or
aaa
sbb
xchg
cmp
cs
pop
inc
sbbb
lods
mov
push
sbb
adc
hlt
fadds
cmp
dec
fildl
pop
les
xchg
cmp
dec
mov
lods
mov
add
sahf
cmp
xor
js
fsubrs
jg
cs
or
std
push
loop
fnsave
sbb
stos
test
add
add
lods
mov
sbb
pop
stos
loop
hlt
repz
mov
add
fmul
mov
lret
es
mov
sbb
push
in
add
xchg
xor
push
fldt
or
mov
xlat
dec
iret
aam
pop
mov
push
adc
mov
fiaddl
or
dec
pushf
sub
inc
insl
cmp
js
or
daa
inc
insl
dec
fildl
inc
adc
or
pop
mov
fistl
xchg
lret
mov
sahf
sbb
mov
mov
jmp
push
adc
std
xchg
outsb
cmpl
pop
shrb
dec
jno
sbb
jns
insb
sub
mov
pop
call
adc
push
mov
jno
adc
adc
adc
je,pn
adc
test
cmp
mov
sbb
mov
sbb
mov
mov
fnstsw
push
xor
loope
add
and
insl
popf
fnstsw
loopne
xchg
inc
in
cmp
inc
cltd
fcmovnbe
mov
mov
add
mov
jno
push
icebp
clc
repz
hlt
popa
rol
scas
movl
add
cmp
add
push
ss
inc
pop
sarl
lods
fstp
movsb
dec
sub
out
push
xchg
or
mov
in
stos
fsubrl
sub
je
enter
movsl
or
imull
xchg
outsb
insl
lea
cld
inc
mov
pop
les
mov
mov
adc
mov
fildl
adc
out
pop
inc
les
mov
mov
lods
pop
push
ret
aam
and
fmulp
decl
cmpb
dec
mov
or
insl
jmp
dec
sbb
mov
int
pop
pop
fisubrl
pop
jo
fsts
in
inc
popa
add
jl
sti
je
in
mov
test
sarl
arpl
inc
add
lods
mov
test
ljmp
xchg
mov
dec
mov
cli
divl
fstpl
add
dec
enter
add
stos
sbb
dec
sbb
sbb
mov
insl
pop
sub
fcomi
into
pop
xchg
shrl
test
daa
xchg
lods
movsl
aam
push
add
scas
inc
aam
jbe
pop
sbb
nop
jne
mov
pop
insl
rclb
gs
inc
xchg
mov
test
outsl
jns
inc
or
loopne
in
jmp
inc
mov
inc
pop
ljmp
sub
fildl
sti
jge
lds
sub
mov
push
sub
add
sbb
int
cmpsl
je
test
arpl
in
push
cmp
lret
add
push
int
faddl
jecxz
dec
and
insb
mov
fstpt
sbbl
dec
dec
xchg
mov
outsl
xchg
int3
aas
add
add
or
dec
push
pop
stos
push
mov
test
loopnew
rolb
adc
adc
jns
jecxz
cmpsb
aas
mov
add
popa
xor
push
les
sbb
lds
arpl
xchg
or
pop
fistl
mov
mov
dec
mov
insl
fidivrl
adc
adcb
lret
mov
push
push
in
mov
xor
fisubrl
sub
pop
push
mov
movsb
pop
fsubrs
mov
cltd
lds
mov
sarb
loopne
lcall
aad
jno
cmp
rol
push
loopne
sbb
cmp
in
pop
fldt
xchg
lods
mov
mov
outsb
mov
lret
lret
ljmp
pop
mov
xchg
movb
xor
or
mov
imul
mov
cmp
clc
dec
addb
fwait
orb
shlb
idivb
mov
or
cmp
sbb
adc
push
mov
cmc
push
imull
stos
mov
mov
mov
jbe
fwait
sbb
jae
insb
push
cmc
push
jge
popa
imul
stos
lods
outsb
insl
sub
jns
inc
lret
inc
cmp
mov
jle
je
pushw
pop
fstp
lods
mov
sti
mov
inc
and
sub
fdivl
pop
addl
pop
pop
jno
in
add
jmp
mov
xchg
jmp
push
inc
add
insl
stos
sub
ficoml
lods
lds
xchg
sub
std
dec
pop
mov
cmp
rclb
cli
mov
jbe
sub
push
sbb
push
mov
mov
icebp
sti
lods
test
jmp
aam
fisttpl
or
mov
xchg
mov
stos
mov
pop
pop
jo
mov
add
mov
test
sbb
push
sub
loope
jo
mov
mov
inc
push
add
add
push
xor
mulb
aas
push
mov
jbe
lret
test
jmp
cmpsb
adc
push
outsb
mov
lods
mov
fidivs
sub
shrb
or
mov
in
je
fs
and
push
sbb
or
outsl
mov
mov
push
add
mov
ficoml
fisubrs
mov
mov
inc
and
repz
sub
xor
imul
aaa
fisubrl
xor
ficoml
in
mov
sarl
dec
mov
shlb
aaa
dec
add
mull
orb
mov
sbb
cld
inc
movsb
test
andb
and
mov
fldt
xor
mov
mov
mov
and
push
mov
pop
ret
lret
pop
or
jge
ret
outsb
out
fwait
movsb
dec
mov
insl
add
andl
adc
movsb
or
adc
outsb
mov
or
mov
inc
fsubl
inc
inc
xchg
xchg
push
shlb
sub
mov
movsl
test
sbb
hlt
inc
imul
add
repnz
dec
movsl
push
xor
pop
push
push
or
aam
mov
adc
xchg
leave
push
inc
cmpsl
mov
fsubl
shlb
pop
xchg
sbb
push
mov
pop
push
insl
mov
arpl
mov
add
xchg
pop
cmpsl
sbb
insl
inc
mov
push
jmp
mov
iret
mov
imul
add
adc
lahf
sub
dec
aas
sbb
inc
inc
jo
push
adc
insl
clc
int
pop
push
pop
jg
pusha
cmp
mov
sbbl
cmp
bound
fwait
imul
js
out
fistl
aad
mov
loop
fadds
jl
xchg
js
inc
sub
adc
and
mov
xchg
mov
imull
mov
insl
push
sbb
ret
and
out
outsb
mov
rcll
lahf
stc
cmp
jbe
sbb
es
lds
lea
shlb
pusha
xor
test
mov
out
inc
sub
mov
mov
inc
inc
fdivl
lret
in
pusha
push
sbb
pop
adc
insl
das
push
inc
fisubrl
ss
xor
mov
fildll
push
pop
mull
jle
and
sub
scas
jecxz
gs
icebp
add
insl
add
mov
xchg
pushf
dec
js
mull
inc
push
fidivl
adc
call
cs
aas
jecxz
sbb
mov
mov
stc
in
daa
call
mov
sbb
ljmp
lcall
mov
cmp
inc
fcoml
lcall
inc
fcoms
mov
jmp
test
repnz
cs
lea
xchg
mov
mov
sbb
or
rcl
popa
cld
gs
add
adc
and
rcll
out
pop
mov
push
mov
push
in
repnz
inc
clc
jb
roll
pop
and
pop
dec
movsb
inc
pop
jecxz
lods
inc
mov
xchg
add
fcmovnb
lods
and
sbb
outsb
sbb
dec
fiaddl
les
popf
jmp
repnz
fistl
bound
adc
xchg
push
insb
cmc
cmp
inc
jno
outsl
dec
sahf
and
mov
mov
xchg
imul
and
mov
xchg
inc
loope
or
or
or
pop
js
in
mov
outsb
push
adc
ds
out
movsb
je
xor
pop
sbb
dec
std
outsl
pop
mov
subl
sub
movb
mov
pop
mov
cmp
sub
movsl
xor
aaa
adc
lret
lahf
insl
mov
mov
ljmp
push
push
xor
cli
cs
pcmpeqd
dec
ds
shlb
mov
lea
push
xlat
out
cltd
mov
mov
cmpsb
scas
lds
dec
and
cs
inc
cmp
xor
jbe
in
dec
and
mov
icebp
mov
ret
pop
outsl
xchg
loopne
xorb
ret
mov
outsb
in
mov
lds
ja
fwait
mov
xchg
push
out
stc
inc
movsl
fsubl
xchg
mov
aas
adc
call
add
rcr
jg
sbb
shlb
and
out
insl
subb
scas
or
sti
sub
lcall
lds
pop
in
pop
insl
mov
sub
xchg
mov
lea
stc
jecxz
sti
outsl
inc
mov
xor
and
jae
out
or
int3
mov
adc
mov
lret
arpl
je
insl
test
out
jl
das
in
subb
shl
cli
pop
inc
out
add
loop
adc
and
pop
adc
fidivl
cmpb
mov
sbb
rcrb
mov
ficoml
push
cmpb
insl
or
add
pushf
mov
shl
mov
aam
repz
sub
rcrl
insl
movsl
mov
and
stos
loopne
insl
mov
andl
orb
pop
push
das
inc
pop
stos
xchg
es
cmpsb
xlat
dec
sub
test
cli
lds
mov
jle
push
jne
or
inc
cmp
push
mov
aas
pop
pop
cmp
push
testl
insl
pop
fcoms
outsl
inc
lahf
mov
dec
inc
stc
sbb
cli
mov
ffree
push
sbb
and
mov
pop
imull
rol
jo
dec
pop
sar
cld
xchg
cmp
stos
mov
lea
and
push
inc
xor
cmp
adc
adc
outsb
fcmovnbe
push
sti
adc
sahf
mov
push
jecxz
arpl
or
add
inc
in
test
pop
pop
gs
xchg
ss
inc
xchg
ret
mov
scas
insl
mov
sarb
lcall
mov
and
xchg
mov
mov
push
xor
mov
pop
iret
pop
daa
shl
pop
test
add
pop
mov
repnz
shl
imul
push
cmp
arpl
shrb
xor
fcomp
or
and
lock
lods
pop
push
push
es
testl
leave
in
insl
add
call
sub
shrl
sub
sub
or
and
mov
jl
cwtl
fmull
jp
inc
jmp
push
aam
insl
lock
mov
fisubl
je
mov
lds
jno
lds
fwait
out
mov
inc
or
xchg
ss
cmpsb
and
ret
mov
jnp
jne
out
dec
roll
ss
pop
bound
mov
add
cwtl
dec
ja
lods
or
xchg
movb
xchg
imul
and
jmp
jbe
lret
adc
xlat
sub
mov
insl
push
dec
mov
cmpsl
stos
insl
in
add
out
mov
add
push
lcall
dec
or
pop
in
sti
test
mov
mov
sti
cli
cmpsb
cmp
pop
xor
jg
gs
gs
fs
and
xchg
mov
adc
dec
mov
push
jg,pt
sub
adc
out
cs
mov
fsubrs
sub
out
mov
roll
mov
push
pop
dec
imul
insl
insb
pop
or
inc
push
test
insb
insb
jp
adc
scas
push
call
aas
in
pop
mov
push
aam
xor
mov
mov
aaa
ljmp
mov
aaa
push
fsubrs
daa
clc
and
arpl
add
mov
mov
add
andl
lock
gs
pop
push
xor
push
sbb
popf
adc
fcmovnu
mov
dec
add
mov
dec
inc
cs
jmp
pop
sub
nop
pop
mov
les
inc
add
jno
scas
loop
inc
push
and
cmp
xchg
add
rcll
cltd
dec
hlt
lea
stos
sbb
sbb
ljmp
mov
add
in
xor
cli
pop
sub
mov
cmpsl
das
call
sub
lea
mov
xchg
jne
test
mov
sbb
sarb
rcll
lods
or
push
sbb
pushf
sahf
lods
cmp
aad
fistpll
subb
aad
sbbb
adc
lods
or
xorb
xchg
dec
aaa
mov
xchg
mov
add
test
insb
dec
cmp
dec
insl
jno
mov
insl
jecxz
mov
shlb
add
in
inc
mov
sub
imul
push
test
and
cld
jbe
add
jecxz
push
ss
ficoml
jno
mov
sbb
add
inc
scas
iret
ljmp
dec
inc
mov
inc
sbb
jmp
or
mov
lea
mov
xchg
sub
pop
add
mov
and
mov
outsb
lods
mov
mov
std
push
dec
movsb
lods
xor
je
push
fs
push
xor
popa
test
mov
dec
mov
bound
dec
lret
lods
sbb
xchg
mov
cwtl
sub
fidivl
ja
add
stos
mov
clc
cmp
lock
insl
push
dec
pop
dec
imul
int
pop
xlat
test
repnz
imul
push
ret
gs
test
push
mov
ljmp
ljmp
adc
loopne
mov
adc
dec
mov
jno
mov
or
and
adc
lcall
cmp
and
popf
pop
pop
pop
mov
mov
push
or
mov
sbb
call
fisubrl
mov
adc
add
mov
sarb
sub
and
push
jne
leave
pop
or
scas
pop
jle
aad
rcrb
lea
mov
fildl
xchg
outsl
mov
outsb
xlat
clc
aaa
mov
push
pop
sti
sbb
jns
mov
imul
cwtl
jbe
mov
mov
es
imul
pop
insl
movsl
pop
fildl
push
add
jle
fstp
lods
imul
mov
rcll
sbb
enter
jne
rolb
rolb
jne
jne
mov
es
jge
xchg
mov
repnz
int
outsl
mov
scas
loopne
push
pop
je
or
sub
mov
push
pusha
sub
subl
inc
sub
push
out
stos
adc
and
mov
incl
dec
or
mov
ljmp
cld
sbb
repz
jns
push
aaa
fisubrl
pusha
nop
inc
insb
push
rcll
shl
sbb
lods
adc
or
divb
dec
mov
adc
mov
andb
fwait
adcb
ljmp
xchg
clc
or
shr
clc
mov
mov
mov
ret
dec
setge
ss
mov
call
in
mov
lods
add
cmp
pop
shl
push
push
inc
sub
or
mov
lods
mov
push
sahf
cmp
xlat
les
dec
sbb
xchg
test
push
jno
jmp
jo
add
xchg
xor
fistl
sbb
mov
insb
dec
cmpl
scas
mov
pusha
mov
pop
mov
mov
in
add
shl
cmp
icebp
push
add
push
sub
test
pop
aad
mov
mov
test
xor
ret
and
pop
push
or
xor
aaa
aas
or
ja
les
scas
mov
adc
jne
jbe
jbe
cmpsl
dec
sub
push
adc
fldt
adc
xor
arpl
pop
push
add
ficomps
cmp
fstl
pop
jb
jecxz
aam
inc
pop
jnp
pop
ret
jbe
pop
addb
es
bound
sbb
push
jo
xchg
cmp
mov
shrl
ret
xchg
andl
loop
mov
mov
lcall
sub
mov
mov
aam
push
lcall
jns
xchg
push
xchg
inc
mov
roll
insb
test
and
shll
or
popa
jns
lds
adcb
inc
rcr
inc
and
and
xchg
push
out
inc
fisubrl
insb
mov
stos
push
lret
xor
cmc
xchg
icebp
mov
add
fisubl
cs
inc
add
sub
imul
imul
es
jmp
imul
xchg
lret
lods
push
fisubrl
icebp
mov
aad
and
xor
xchg
leave
inc
pop
pop
inc
movsl
jmp
and
dec
addr16
sub
adc
outsb
insb
add
and
push
pop
push
fisubs
inc
insl
popa
arpl
jo
jp
adc
das
sub
fldt
lahf
mov
sub
inc
andl
pusha
inc
add
test
ret
rorb
lods
pop
sub
sahf
add
cmpsb
xchg
dec
xor
push
mov
mov
jmp
push
add
sub
adc
push
insl
inc
cmpsb
call
cld
mov
mov
sub
xor
push
sbb
aam
sub
loope
or
jne
dec
push
push
add
or
xchg
rolb
jnp
sahf
int
mov
test
push
cmpsl
fstp
mov
xchg
sti
pusha
push
dec
je
fdivl
adc
outsb
push
in
subb
bound
stc
or
mov
ficoml
les
dec
or
cmp
adc
fsubrs
aam
addb
mov
js
lock
and
cs
dec
in
test
jo
pop
call
jno
dec
and
movsb
cltd
jno
in
orb
roll
imul
pop
sahf
fs
lret
mov
cmp
scas
sub
dec
mov
mov
and
nop
pop
imul
sub
outsb
sbb
jmp
lods
insl
or
or
pop
mov
arpl
aam
aas
or
and
xor
pop
sub
mov
repnz
fwait
push
ficomps
fidivl
add
sbb
mov
dec
push
dec
xor
out
jb
push
add
sbb
rol
test
sarb
or
xchg
jns
cmpsl
int
mov
inc
cli
push
adc
test
decb
outsb
rorb
xacquire
in
push
arpl
push
lock
aas
and
lods
mov
adc
cmp
insl
test
sub
xor
fucomip
mov
inc
filds
jne
repnz
pop
cs
push
and
pusha
cmc
out
lret
push
mov
mov
mov
inc
pop
xchg
xor
mov
inc
jb
inc
pop
inc
movsl
pusha
popa
arpl
scas
movsb
dec
mov
or
insl
into
stos
cmp
jb
insb
adc
mov
test
lea
movsl
and
pop
mov
cmc
push
xchg
sub
adc
adc
add
sub
dec
push
push
lds
clc
call
dec
filds
cmp
mov
push
dec
xor
add
loopne
fwait
fwait
xchg
enter
pop
push
mov
mov
imul
xchg
push
xor
or
mov
adc
pusha
pop
subl
cwtl
inc
hlt
ja
call
rcrb
loope
insl
mov
pusha
sbb
or
insl
mov
add
enter
sub
cmpsl
fs
jecxz
mov
std
lods
movsl
adcl
nop
jae
mov
jge
lea
fadd
add
lods
add
cld
jecxz
mov
lods
jo
shr
or
fisubl
fildl
ds
mov
inc
dec
je
aaa
mull
pop
pop
push
bound
mov
invd
mov
arpl
mov
adc
insb
mov
pop
add
stos
push
insl
cmp
lods
cmp
mov
int3
je
pop
mov
mov
cmp
xor
pop
sti
jno
add
les
mov
or
pusha
mov
ret
fidivl
push
ss
add
sbb
dec
sub
outsl
fdivl
mov
push
add
out
add
lahf
mov
mov
jmp
pop
movsb
adc
cmp
movsl
addr16
aaa
insl
or
arpl
xchg
cmp
push
cmpsb
movsl
fwait
or
pop
push
outsb
or
push
inc
or
mov
clc
ljmp
pop
adc
push
inc
add
mov
jb
insl
mov
pop
xor
push
sub
fidivrl
fldenv
jns
mov
int
push
dec
sub
fadds
insl
inc
jo
aaa
jo
push
and
push
adc
dec
jbe
mov
mov
xchg
aam
dec
mov
je
outsb
xchg
mov
js
xor
insl
sbb
jecxz
stos
loop
mov
daa
lret
pop
inc
mov
adc
pop
fisubrl
in
push
jp
dec
add
xor
mov
mov
push
ja
jae
fcoms
sbb
push
jno
fsubrs
pop
sbb
mov
add
push
imul
xchg
cwtl
cmpsl
jge
out
cmpsl
outsb
xor
jo
in
ret
cmp
or
mov
xchg
inc
addl
loopne
push
stos
dec
mov
sub
int3
adc
insl
arpl
or
or
fidivrl
or
adc
je
push
cmp
mov
lea
push
insl
and
mov
pop
fcmovnbe
movsl
mov
lcall
fucomp
sub
std
clc
rol
push
and
cli
dec
sbb
cmp
dec
sbb
inc
imul
lret
sbb
fcmovnbe
sub
jg
adc
mov
fstpl
sub
pop
cmp
dec
or
fistl
push
jp
mov
xchg
fdivs
inc
lcall
clc
jp
push
int3
push
lcall
fistl
or
insb
insl
popa
pop
mov
xchg
int
sub
pop
mov
fcoms
jl,pn
in
sarb
enter
loop
sbbb
ret
pop
mov
mov
aas
push
add
mov
aam
and
adcl
ret
ss
scas
push
dec
xchg
rcr
add
push
lcall
push
add
inc
leave
shrb
mov
imul
push
mov
out
mov
mov
mov
popf
dec
and
aas
cmpsl
jle
push
les
fidivl
and
les
inc
popf
adc
jne
insl
inc
sub
inc
jno
outsb
fldt
sub
pop
cmp
pop
shrl
inc
push
jecxz
outsb
cmpsl
test
outsb
sbb
test
insl
out
mov
push
insl
pop
inc
vmaxss
andl
mov
jno
dec
dec
push
pop
jno
sub
xchg
mov
and
test
insl
ret
lea
push
xchg
sub
shrb
imul
add
and
test
add
mov
fs
stos
dec
mov
call
hlt
add
mov
movsb
push
clc
xchg
xchg
add
ss
xchg
add
dec
fmull
xchg
movsl
test
lea
adc
bound
inc
or
movl
lds
mov
mov
mov
xchg
xchg
adc
aaa
ret
shrl
in
mov
pop
xor
rcrl
mov
adcl
lods
or
repnz
push
push
scas
dec
pop
aam
jl
jb
fistpl
sbb
mov
pop
inc
add
push
fisubl
out
cli
call
pop
mov
push
mov
push
xor
ret
jae
sub
push
lods
push
test
push
sbb
loope
es
popf
cmpsb
pop
xchg
pop
jo
stc
jl
fidivl
or
cmp
adc
cmp
lea
shll
adc
iret
mov
dec
lods
insl
mov
ds
arpl
test
xchg
lods
push
sbb
roll
enter
shll
sti
and
inc
lcall
call
adc
mov
push
inc
mov
imul
jbe
fstpl
daa
inc
fmull
out
ja
ss
insl
or
inc
mov
aaa
or
lcall
push
enter
adc
xlat
dec
sbbb
cmp
xlat
and
ss
in
add
mov
mov
and
pop
cmp
lods
scas
and
jg
and
fnstenv
push
push
cwtl
shrl
jne
mov
call
adc
fldl
inc
stos
mov
int
int
lds
shl
xchg
loop
fcmovu
lods
push
mov
mov
stos
ljmp
jns
outsb
rol
mov
fldt
enter
jae
adc
push
fs
test
inc
push
pushf
mov
mov
inc
movsb
dec
loop
sub
mov
sub
test
jp
xchg
rcrb
les
adc
sbb
mov
cs
xchg
mov
pop
cmp
sbb
gs
fcmovnbe
inc
jno
inc
or
jl
and
adc
sub
jns
mov
and
jo
lret
add
lret
cmpb
fwait
add
adcb
sbb
sbb
push
fsub
fcmovne
cmc
dec
sbb
or
mov
adc
stos
je,pn
cwtl
adc
dec
sbb
outsb
out
sub
dec
fs
and
lcall
ja
add
movsb
cmpsb
sub
in
shlb
sub
mov
filds
cmpsl
mov
cmp
movsl
add
loope
xchg
insb
cmp
outsb
jo
ds
aaa
mov
mov
inc
clc
push
inc
pop
add
movsl
jp
dec
mov
pop
in
movsl
lods
mov
popf
adc
es
mov
scas
xchg
sbb
mov
add
call
sub
lods
cmpsb
or
mov
sub
xor
ss
inc
push
iret
mov
test
aas
or
or
fdivs
out
jmp
jbe
pop
scas
hlt
mov
pop
sbb
xor
pop
mov
pop
js
fistpl
and
fiaddl
stos
insl
pop
jl
sub
les
fadds
insl
popa
popa
jmp
enter
mov
aaa
fimull
inc
js
push
push
jge
pop
push
mov
stc
repz
push
in
mov
adc
inc
xchg
pop
outsb
xor
jmp
inc
add
iret
imul
ss
call
jmp
mov
pusha
xchg
xor
sbb
outsb
shrl
jnp
mov
popa
stos
in
daa
pusha
sbb
mov
mov
ds
adc
push
cwtl
lcall
movsb
xchg
jge
ret
mov
xchg
add
nop
enter
call
push
push
inc
in
addb
push
fistl
lods
clc
push
rorb
fisttps
push
mov
fcmovnb
fstps
sahf
mov
lock
jne
lahf
mov
add
and
pusha
imul
mov
add
lds
rcll
out
push
push
orl
jns
adc
cwtl
aam
fcmovu
xchg
push
xor
mov
or
aam
pop
pop
push
mov
dec
insb
sbbl
or
xlat
cmp
cmpsb
adc
jp
fdivl
sbb
mov
sub
pop
jae
jp
or
mov
jge
jl
add
push
dec
mov
jb
movsl
roll
out
rorb
xchg
pop
sub
sbb
push
popa
fstps
and
push
insl
mov
fwait
add
leave
popl
inc
shll
push
out
lods
mov
outsb
in
imul
gs
pop
ret
adc
mov
pop
pop
mov
pop
fisubrl
pop
xor
mov
aam
mov
or
cwtl
push
in
adcl
mov
adc
add
cmc
ret
pusha
pop
cmp
sbb
xor
pop
insb
lret
or
xchg
insb
pop
pop
aad
stos
mov
fsubrl
inc
shll
lock
sub
inc
mov
or
push
jecxz
mov
mov
cmp
add
mov
imul
in
lcall
inc
pop
add
pop
pop
sub
mov
mov
dec
add
mov
lea
cmp
shrl
ds
xchg
adc
mov
add
rcrb
jne
inc
aad
pop
pop
sub
fdivrp
outsb
mov
bound
test
je
cli
outsb
ficompl
push
into
adc
fildl
push
and
lcall
add
cmp
push
mov
mov
jno
cld
fs
ss
bound
sub
das
ljmp
push
insl
test
or
fcmovu
fcoms
jno
mov
mov
adc
mov
or
mov
aad
pop
sub
sahf
lcall
mov
insl
fistpl
xor
test
mov
or
add
mov
cmp
push
xchg
dec
jne
bound
cmpsl
jno
insl
mov
imull
ret
sub
mov
pop
adc
aaa
mov
lcall
negb
mov
loop
lods
mov
test
imul
jo
test
push
fistl
jbe
and
lcall
or
rolb
mov
lods
add
and
lods
aaa
xlat
outsb
insb
cmpsl
add
mov
nop
rcll
dec
mov
pop
inc
in
mov
lahf
cltd
sbb
pop
push
ja
ljmp
stc
decl
jge
xchg
mov
subl
pop
mov
ljmp
jp
mov
mov
push
cs
pop
mov
mov
cmp
pop
add
in
mov
rorb
dec
mov
outsb
mov
ret
test
lds
mov
stos
jl
mov
mov
mov
jne
push
mov
adc
inc
mov
xor
sub
fucomi
sbb
jmp
outsb
fildl
das
and
ja
add
inc
insl
shr
std
xor
sbb
sub
shlb
cmp
mov
xchg
fnsave
into
lret
lret
lods
mov
sub
sti
mov
les
mov
xchg
jno
sub
loopne
lea
insl
fs
cmpl
test
dec
aam
sbb
add
popf
mov
aaa
fiaddl
repnz
and
mov
arpl
lret
in
test
fstp
movsl
add
lahf
sbb
shlb
xchg
rcrl
and
mov
mov
add
das
mov
roll
mov
out
jae
fwait
add
dec
mov
mov
ljmp
dec
push
xchg
repz
jo
sub
ret
push
mov
in
and
and
pop
lcall
sub
xchg
push
mov
pop
cmc
push
fisttpl
mov
ret
xchg
test
lds
imul
insl
fistpl
cmp
pop
es
mov
orl
aas
movsl
fsubrs
insb
sub
fsubrl
in
push
cmc
outsb
insb
insl
fcomi
cs
mov
or
loopne
ja
and
push
fdivrl
pop
popa
fisubrl
push
mov
sbb
inc
gs
pop
cmp
aas
xorl
aad
xor
test
insb
push
xchg
mov
popa
cmp
sub
xchg
pop
pop
lods
movsl
cmpsl
int
scas
outsl
outsb
push
out
inc
insl
pop
adc
imul
pop
imul
jno
loope
mov
and
cs
jmp
shrl
jg
inc
jne
test
mov
add
in
test
insw
pop
mov
sub
mov
fwait
mov
icebp
faddl
push
mov
loop
dec
dec
mov
or
pop
mov
push
mov
dec
or
adc
or
insb
je
fsubrs
popa
pop
in
add
pop
dec
jp
jmp
insl
dec
dec
ja
out
xor
lods
subl
outsl
insb
fcmovnb
divb
jge
dec
cmp
shrl
sbb
sub
lock
popf
pop
insl
mov
pop
shl
ss
add
mov
in
enter
add
pop
ds
sti
pop
mov
mov
daa
ds
mov
pop
cltd
pop
pop
mov
cmp
mov
sbb
mov
mov
mov
subl
push
pop
pusha
popa
sub
cmc
arpl
mov
test
into
loop
push
xor
aaa
inc
stc
lret
push
cmpsb
fwait
aam
mov
mov
out
out
jne
rcll
pop
fadds
push
bound
out
jge
xor
mov
aaa
hlt
mov
lds
test
neg
scas
sbb
movsb
jle
push
insb
xor
jle
leave
mov
addb
out
jnp
pop
xlat
cmpl
movb
jno
mov
mov
je
push
mov
adc
xchg
sbb
xor
adc
dec
mov
in
insb
cmp
insb
add
xchg
cmp
dec
in
mov
add
or
add
cs
aam
popa
daa
cli
xchg
add
imulb
cli
push
and
je
inc
pslld
mov
aam
xor
ret
xlat
adc
xor
data16
cmpb
mov
add
sbb
push
lea
pop
or
jb
ret
jmp
sbb
insl
stc
sbb
or
mov
xlat
test
push
or
loop
mov
cwtl
push
clc
movsb
jbe
sti
xlat
call
lret
jae
andb
ret
loope
insb
inc
cs
pop
or
insb
pop
aam
or
mov
add
and
push
lds
fwait
and
insb
testb
test
imul
scas
andb
inc
jo
insl
sahf
sbb
mov
movsb
push
mov
mov
inc
xchg
in
sti
mov
sahf
push
mov
les
add
outsb
add
mov
jbe
mov
inc
xor
xor
adcb
sub
enter
roll
mov
cs
fwait
push
lcall
mov
mov
gs
cs
push
fisubrl
jl
fstl
push
mov
sti
mov
clc
sbb
sarb
mov
cs
in
and
into
add
xchg
outsb
pop
sbb
sub
cltd
xchg
add
in
mov
sahf
ficompl
sub
and
sar
pop
out
jle
xchg
push
fcmovbe
inc
push
cs
xor
xchg
test
jne
pop
into
loop
pop
in
inc
dec
dec
mov
test
sbb
adc
xor
lea
repnz
call
ja
aam
add
fmull
mov
ret
jno
fsubrs
push
fstpt
repnz
stos
mov
jl
jmp
add
dec
cmp
sbb
cmpsl
xchg
sub
mov
pop
jne
out
shrl
push
int3
cmp
sub
inc
loope
pushf
repz
mov
push
mov
sahf
rol
jp
sbb
stos
mov
sti
xchg
outsb
sbb
in
mov
aam
stc
lods
out
mov
add
cs
insl
mov
xor
dec
test
xchg
mov
mov
cmp
outsb
dec
fwait
iret
out
test
mov
fisubl
mov
mov
into
imul
out
jg
sbbb
or
sub
add
xor
cltd
inc
arpl
push
mov
aad
sbb
lods
cli
mov
mov
cs
push
idivb
lds
loopne
inc
push
cmp
pop
pop
orl
fwait
add
les
ds
mov
push
fimuls
enter
in
sbb
imul
sbb
add
outsb
push
fisttpll
push
imul
and
lods
in
in
popa
imul
mov
mov
outsb
ja
adc
push
xlat
xchg
inc
cmc
cwtl
and
xor
aaa
xchg
cmpsl
cmpsb
jp
test
testl
push
sub
mov
mov
mov
icebp
jae
bnd
test
mov
or
mull
lods
insb
adc
aas
mov
lds
mov
pop
xchg
xor
dec
in
mov
shlb
das
mov
mov
arpl
mov
lahf
pop
pop
insl
popa
fisttpl
je
inc
sub
dec
sarb
sub
push
xchg
push
test
fdivs
add
sbb
jb,pn
mov
xchg
cmp
in
cmp
stc
fnsave
push
xor
enter
mov
or
sbb
adc
mov
mov
xchg
adc
pop
mov
ficoms
inc
lea
lods
or
mov
cld
lcall
pop
mov
push
fildl
clc
stc
dec
sbb
pop
push
sub
in
stos
sbb
add
pop
mov
add
add
pop
fsubrs
push
stos
lea
cli
imul
add
lret
cld
into
jno
jbe
jo
pop
adc
mov
insb
pop
mov
mov
mov
xchg
in
rclb
repnz
pop
mov
inc
pop
rcrb
mov
in
mov
mov
cmp
push
mov
push
fidivl
stos
lcall
add
inc
in
rcll
nop
jecxz
xor
inc
bound
rcrl
popa
imul
imul
xor
test
push
jo
pop
cld
cmpsb
push
or
adc
insb
insb
sbb
js
int
dec
js
cmc
add
mov
test
fs
dec
lcall
iret
loope
add
dec
ficoml
and
jmp
outsb
sbb
xchg
call
fwait
mov
inc
adc
into
cmp
mov
loop
mov
rcll
inc
add
es
mov
test
mov
mov
sub
lods
or
call
mov
inc
mov
subb
adc
aad
jge
rolb
arpl
push
mov
push
mov
sbb
lods
xchg
xor
pop
jmp
mov
ret
adc
repnz
adc
mov
mov
mov
repz
test
jno
ret
push
outsb
pop
hlt
mov
movsb
popa
scas
mov
push
dec
lcall
jb
jl
aad
add
frstor
mov
in
ret
add
push
push
add
mov
stos
adc
jmp
add
stos
loopne
mov
sti
repnz
iret
mov
pusha
in
fcoml
sahf
cmovne
fnstsw
les
gs
repnz
pop
sbb
jl
mov
push
add
pushf
xchg
rol
pop
roll
insb
mov
loopne
loope
jo
cwtl
adc
and
adc
test
pop
push
ds
sub
jno
insb
aam
pop
mov
dec
fldcw
mov
or
leave
notl
mov
jno
push
pop
call
xchg
dec
inc
pop
sahf
adc
mov
jecxz
loop
inc
insb
add
cmp
test
fsts
insb
mov
fprem
lret
cmpsl
adc
outsb
pop
insb
pop
push
xchg
xchg
dec
dec
mov
cmp
lods
cmp
loope
dec
mov
sub
jmp
cs
inc
rol
in
adc
xor
cmp
sub
push
dec
in
testl
pop
add
sqrtps
mov
lods
sub
or
insb
and
test
pusha
std
pop
fs
test
out
inc
pop
mov
mov
adc
push
push
sti
leave
lret
mov
outsb
dec
andb
sbb
push
mov
addr16
mov
inc
dec
jp
adc
push
fisubl
fistpll
jns
fcomps
push
fldl
arpl
mov
mov
icebp
fstpl
jl
dec
jge
cmp
inc
push
push
testl
fisubrl
adc
inc
dec
daa
mov
or
lds
sub
movsb
popa
popa
sub
inc
ret
sub
push
je
arpl
int
mov
popa
imul
test
inc
and
xchg
or
loopne
cmp
insl
in
ret
xchg
data16
in
add
outsl
cmp
mov
clc
and
cmpsl
les
sbb
int
cmp
mov
ret
scas
push
leave
cmpsb
sub
lods
pop
cmc
fs
sbb
scas
xchg
pop
shrl
mov
adc
das
jo
and
mov
sub
loopne
lea
jb
rolb
imul
fisttpll
dec
adc
push
data16
insl
arpl
xchg
ret
bnd
adc
cmp
pop
mov
imul
inc
fs
mov
jle
mov
jns
mov
insl
imul
pop
cmp
sahf
xor
dec
or
sub
jo
ret
in
push
insl
push
rolb
aam
adc
and
bound
stos
mov
sub
push
xchg
and
stos
inc
sbb
pop
dec
inc
mov
pusha
scas
adc
mov
sub
sbb
xor
or
movnti
and
addr16
or
pop
addl
push
sbb
das
jno
or
adcb
push
push
test
test
mov
mov
or
mov
mov
dec
adc
sbb
xchg
jo
insb
rorl
dec
and
push
lcall
pop
imul
in
pusha
inc
push
jno
repnz
jne
sub
mov
mov
outsb
dec
fcmovnb
jle
addl
in
addb
sub
insl
sub
jmp
ret
lods
scas
add
mov
fcomp
pop
ljmp
pop
push
cmp
xor
test
mov
pop
push
jnp
lock
dec
dec
inc
mov
mov
movsl
lods
pop
push
das
pop
mov
outsb
dec
shll
arpl
pop
in
in
mov
insl
sbbb
ret
bound
test
mov
outsb
mov
and
imul
fadds
rorl
pop
pop
or
fcmovu
ds
aas
ja
push
in
mov
and
cmp
mov
jb
ret
cmp
insb
or
or
push
mov
lods
or
xor
out
mov
filds
repz
insl
fistpl
jp
sbb
ret
push
pop
push
xor
fnsave
das
scas
inc
daa
push
sbb
mov
jae
mov
sbb
xchg
loop
push
sub
popf
cmpsb
cmp
enter
ljmp
mov
and
sahf
mov
mov
mov
add
lahf
scas
outsb
sub
test
and
xchg
cltd
or
mov
sub
mov
imul
loopne
mov
mov
jbe
outsl
movsl
jmp
xchg
dec
insl
aas
addb
push
push
fdivs
ss
sub
pushl
fwait
and
xchg
enterw
inc
loopne
insl
xchg
das
mov
and
cmpsl
add
pop
xlat
cs
fiaddl
dec
outsb
and
mov
pop
fnstcw
das
clc
and
dec
xlat
lret
sbb
lret
xchg
sub
popf
fmuls
pop
fstpl
push
jp
outsb
fcmovnbe
mov
lds
in
or
dec
inc
dec
pop
aam
mov
push
mov
cld
ret
test
adc
adc
fstps
xor
mov
ret
subb
imul
popa
out
inc
jb
lea
jbe
shrb
add
inc
pop
loop
repnz
add
faddl
mov
test
sahf
jl
pop
mov
in
inc
cmpb
stos
and
pop
inc
fcmovnb
mov
add
mov
mov
adc
inc
mov
push
lods
adc
insl
or
mov
add
out
jbe
stc
mov
and
mov
or
mov
cmp
sbb
fidivs
stos
and
popa
mov
js
push
ds
outsb
pop
sti
shl
push
add
leave
sub
fsubr
faddl
adc
mov
cli
xchg
pop
movsb
fldcw
mov
mov
outsl
adc
lods
fstp
or
ja
mov
out
pop
inc
inc
rcl
adc
sub
outsl
addr16
fnsave
enter
sub
jbe
mov
lds
fildl
jmp
sub
jge
addr16
inc
push
andl
outsb
inc
push
mov
into
pop
movsb
ljmp
sub
xor
movl
pop
pop
add
lret
movb
mov
test
scas
int
stos
aaa
cmp
imul
xor
sbb
mov
xchg
push
mov
sbb
adc
pop
rorb
xchg
sahf
push
fwait
jmp
fistl
scas
aas
pop
push
mov
adc
cmp
adc
sub
mov
test
push
rclb
test
xor
cld
int3
loope
lods
push
pop
mov
xchg
aam
bound
inc
push
pusha
or
mov
insl
push
cld
lock
add
mov
shrl
outsb
shlb
mov
mov
jne
xchg
add
xor
or
call
loop
adc
inc
mov
orb
test
and
sub
xchg
mov
inc
insb
add
fwait
pusha
sub
push
push
sub
xchg
pop
sub
test
insl
sbb
addb
xchg
mov
cld
add
cs
pop
mov
sbb
xchg
dec
add
ljmp
call
roll
repz
mov
test
cltd
xchg
cwtl
je
insb
inc
jmp
or
lods
arpl
sub
inc
or
or
lds
adcl
outsb
sub
pusha
mov
sbb
push
mov
cmp
cwtl
inc
jb
out
cltd
pusha
addl
sbb
out
xor
je
mov
into
xchg
imul
in
es
aam
shll
jecxz
or
in
movsl
insl
imul
mov
repz
dec
push
pop
mov
sbb
or
push
inc
movsl
test
jl
mov
push
add
in
or
cmp
push
imul
imull
fwait
test
add
sub
sbb
scas
push
mov
test
adc
mov
scas
or
or
pop
cmpsb
mov
dec
das
inc
fsubrl
xor
push
xchg
out
lods
mov
inc
es
movsl
movsl
push
push
xlat
out
inc
ja
insl
push
les
ja
insl
gs
ret
mov
push
mov
push
sbb
add
push
imul
cmp
sub
adc
out
fcomp
fiaddl
movsl
movaps
or
pop
pop
out
mov
add
pop
mov
xor
or
pop
mov
add
mov
xchg
or
mov
insl
pop
sbb
int3
lods
adc
push
sub
mov
mov
mov
mov
fildl
lds
loope
mov
mov
push
les
nop
xchg
dec
repnz
pop
outsb
pop
mov
imul
mov
adc
sbb
dec
test
mov
mov
sbb
cltd
stos
pop
push
fcmove
jnp
sbb
inc
fistl
jo
or
mov
pop
mov
cmp
xchg
mov
or
outsb
es
mov
add
push
push
test
push
popf
adc
inc
adc
inc
push
adc
mov
fildl
mov
mov
dec
shlb
lods
mov
mov
jno
pop
sub
hlt
bound
es
push
rcl
rclb
push
shll
xor
ss
mov
lock
mov
and
movsl
daa
pop
pop
repnz
sahf
jecxz
push
jle
aam
cmp
add
mov
adc
ljmp
add
outsb
sbb
xor
insb
sbb
pusha
mov
in
sarl
sbb
jae
and
inc
pop
mov
mov
shrl
outsb
in
int
sbb
rclb
xor
push
xlat
pop
adc
in
add
fsub
ja
sbb
gs
push
add
sarl
inc
mov
bound
jecxz
out
call
mov
movsl
adc
sbb
push
fiaddl
or
hlt
aam
or
insl
imul
push
idivb
fmuls
sbb
add
mov
outsl
ret
mov
mov
loopne
xor
movsl
gs
xchg
stos
je
lods
sub
leave
out
hlt
push
xchg
mov
push
imul
lods
lahf
inc
jbe
clc
mov
mov
pop
mov
dec
sbb
push
test
sub
aam
cld
lret
jne
pop
cs
mov
push
arpl
aam
mov
xor
jle
outsb
dec
or
push
shrb
jns
fsubrl
push
sbbb
lea
jecxz,pn
je
push
or
inc
mov
shrl
dec
sahf
mov
stc
and
mov
and
std
adc
fcmovnb
inc
push
or
and
mov
mov
mov
add
repnz
test
adc
xlat
inc
shll
push
test
fbld
add
add
fwait
outsl
loop
sbb
in
test
aam
pop
leave
push
mov
mov
insb
pop
push
jmp
nop
fwait
scas
add
idivl
jmp
or
xor
cmp
jp
and
fistl
fistl
inc
lret
mov
shrl
pop
sbb
inc
fidivl
test
xchg
jns
in
or
pop
sub
sub
push
xchg
fdivs
push
dec
xchg
shrl
aad
fdivl
nop
xchg
aad
lods
in
mov
jp
rcrb
add
adc
mov
je
or
jns
mov
jmp
add
adc
cs
insl
inc
sub
fdivrl
aam
sub
sbb
in
mov
scas
add
mov
adc
cmc
fwait
cmpsb
mov
bound
fsubrs
mov
pop
and
imulb
jmp
adc
loop
sub
jle
lret
xchg
and
out
inc
push
mov
rclb
pop
sub
insb
fldt
mov
inc
pusha
or
shr
cld
out
xor
push
jg
push
jb
fdivs
aas
mov
adc
mov
das
pushf
xor
sub
test
mul
xchg
sub
imul
sub
and
or
insl
add
push
enter
mov
pop
adc
xor
enter
cmp
movsb
push
shll
dec
jl
repnz
push
mov
cmpsl
xor
insl
fs
pop
mov
cmp
xor
add
repnz
cmp
pop
push
xor
xor
lods
movsl
push
or
sub
cmp
aam
mov
scas
xor
or
mov
push
sub
fidivl
xor
sub
loop
xchg
jmp
cmc
inc
outsb
dec
add
dec
stc
mov
cmp
jg
xlat
or
or
aad
xlat
lods
test
insl
movsb
int3
sbb
fildl
mov
lds
ja
outsl
adc
jmp
out
loop
or
inc
flds
aam
lret
mov
loop
add
pusha
rcrl
add
mov
popf
sub
dec
enter
mov
or
xchg
pop
loope
stos
hlt
and
add
ss
or
sbb
jbe
mov
xchg
mov
and
mov
arpl
test
xchg
mov
sub
add
mov
dec
inc
sub
push
adc
inc
jecxz
sub
add
into
and
and
jno
arpl
mov
push
inc
dec
xor
aam
lods
bound
inc
xor
aaa
mov
ds
dec
in
adc
lcall
jne
mov
aaa
cmpsl
lret
xor
dec
or
and
inc
mov
xchg
cs
loopne
adc
in
aad
out
call
into
shll
adc
imul
pusha
sub
dec
shl
fdivrl
jo
fstpl
test
adc
pop
pop
cmp
das
es
dec
mov
add
pop
in
pop
inc
lret
cmp
sbb
xchg
push
and
mov
and
sbb
pop
mov
iret
pop
sbb
mov
lods
push
jae
sbb
inc
loope
add
push
jnp
jno
lods
mov
lret
popa
xor
ret
mov
and
add
stos
push
pop
push
mov
mov
mov
jmp
jo
stos
sarb
test
mov
lods
insl
arpl
movsb
aam
mov
cs
aaa
sarl
ficomps
inc
and
and
mov
ss
aas
xchg
lret
or
inc
call
out
push
pop
fistpll
jl
out
fwait
sbb
outsl
inc
jo
sbbb
dec
in
dec
aam
mov
test
mov
add
insl
mov
sbb
adc
jmp
push
ljmp
pop
imul
sbb
mov
int3
jno
or
iret
sahf
ljmp
imul
aam
cs
jg
mov
xor
mov
push
push
cwtl
jge
and
fildl
insb
adc
pop
jns
sahf
sub
lods
dec
dec
cmp
cmc
jp
inc
sbbb
jae
movsl
xchg
adc
repnz
mov
aad
popa
add
sub
sbb
mov
add
imul
imul
fimull
push
lea
adc
sbb
rcl
adcb
rolb
push
inc
flds
sbb
out
and
sub
mov
mov
xchg
sbb
outsb
mov
mov
gs
and
mov
mov
mov
lds
and
lahf
jo
popa
mov
jae
jno
or
je
inc
adc
mov
ja
adc
adc
sub
outsb
jne
jl
pushf
pushf
inc
mov
aam
add
rcr
xor
sbb
cmp
add
bound
shrb
push
test
imul
ds
rorb
outsb
jmp
pop
push
test
mov
cmp
push
iret
push
fildll
mov
adc
jbe
incb
mov
cltd
mov
rcll
out
lea
movsb
es
ret
xchg
imul
in
mov
mov
and
ret
jb
cmpsl
movsl
sub
pop
sbb
jns
cli
es
in
loope
mov
insb
mov
scas
jmp
int3
or
add
enter
mov
xchg
xor
jmp
test
mov
add
cmp
lea
loop
jmp
fstpt
loopne
sub
shll
popa
and
adc
movsl
mov
inc
inc
jno
cltd
add
mov
scas
in
test
daa
aaa
dec
adc
and
push
test
fwait
xorl
fistl
in
and
insl
sub
push
insl
mov
fidivrl
cmpsl
aaa
push
pop
mov
inc
psubusb
mov
bound
inc
popa
push
adc
inc
ja
cmp
loopne
das
add
cmp
out
adc
or
mov
or
xchg
ds
jg
imul
out
inc
mov
mov
imul
stos
sahf
sarb
dec
enter
add
xchg
cmp
mov
dec
and
jg
lret
pop
push
lods
push
dec
add
mov
test
dec
jnp
stos
je
sbb
push
adc
mov
adc
popf
sti
and
in
imul
mov
mov
mov
add
or
adc
test
ds
inc
jecxz
fdiv
and
cmc
push
imul
imul
add
and
push
add
or
aaa
fisubl
cmp
fstp
mov
stos
xlat
loopne
inc
dec
and
mov
or
sbb
dec
pop
mov
repz
or
scas
mov
xorb
push
xorb
idiv
sub
or
sbb
adc
je
roll
adc
sbb
sahf
fldt
cmc
jmp
jp
lret
jb
jo
mov
in
mov
mov
add
pop
pop
push
lods
pop
xor
sbbb
ss
inc
repnz
push
inc
outsb
andl
test
mov
push
inc
dec
cmp
and
inc
ret
bound
sbb
add
mov
ss
push
mov
inc
popf
js
pop
aaa
mov
jecxz
into
dec
sti
push
loop
jae
adc
adc
sbbl
mov
insl
arpl
mov
loopne
dec
pop
stos
push
fdivrl
stos
andb
insb
xor
xor
rcl
mov
push
mov
imul
inc
mov
mov
mov
sti
inc
jecxz
movsb
mov
shll
mov
push
sahf
hlt
lret
fs
sub
jp
cmpsl
mov
mov
push
andl
lcall
mov
mov
add
lods
aad
stos
dec
inc
fcmovnb
mov
pop
add
sbb
jge
fnstsw
xorb
ja
imul
out
out
xor
mov
inc
mov
push
jae
sbb
mov
sub
or
repz
dec
arpl
lods
or
mov
in
ds
imul
mov
int3
xorl
or
scas
mov
insb
or
enter
push
jmp
pop
rcrb
mov
lea
mov
mov
test
push
sub
push
jle
inc
xor
test
push
loope
fldt
lds
mov
jo
jp
mov
jp
pop
lods
lea
daa
testl
mov
push
mov
je
cmpsb
and
mov
vcvtsi2ssl
dec
dec
les
adc
mov
movsl
lods
ret
mov
es
push
jne
pop
lcall
mov
ret
pop
sub
mov
mov
inc
loopne
add
mov
fwait
out
jge
mov
add
ffree
jge
scas
sub
insl
cmp
mov
ret
inc
pop
clc
sub
lcall
insb
push
mov
jbe
fdivl
test
aad
stc
das
insl
xchg
aam
or
lret
inc
cmc
add
pop
rorl
adc
inc
adc
jbe
pusha
bound
add
cmp
mov
sbb
mov
pushl
into
add
in
pusha
js
in
dec
sbb
lds
xchg
inc
aad
test
push
popa
aas
cltd
mov
subb
sub
rol
xchg
test
popa
loopne
jne
das
xchg
lret
ss
fwait
mov
dec
push
push
add
sub
add
imul
adc
mov
ret
push
subb
in
mov
adc
and
lcall
push
push
jne
fmuls
ss
ja
cs
or
hlt
push
lret
pop
adc
mov
in
rclb
add
xor
movsl
lods
mov
and
outsb
add
push
ja
jmp
cmp
negb
pop
sbbb
xor
xor
xor
pop
fsubrl
stc
jecxz
sahf
sub
sub
and
push
lds
xchg
add
lods
insl
adc
push
test
movsb
cmp
fcoms
pusha
addl
stos
mov
dec
ret
jge
shlb
popf
nop
jg
sub
insb
xor
std
cli
adc
push
jno
xchg
mov
jle
out
test
ds
shlb
clc
insb
xchg
xchg
push
mov
enter
stos
pop
adc
dec
int
push
inc
aad
xchg
movl
fs
cmpb
jae
dec
or
push
insb
mov
jae
push
cs
dec
cmp
icebp
add
mov
or
lahf
addb
aad
fdivl
add
adc
hlt
mov
jbe
push
or
sbb
sahf
ja
add
jmp
xchg
xchg
adc
cmpsb
push
cmp
jnp
sub
mov
insl
and
jbe
mov
cli
add
dec
aam
data16
jg
xor
in
adc
and
or
sbb
fsubrs
push
mov
adc
sbbl
mov
in
lds
add
es
sbb
iret
jp
mov
popl
mov
jbe
iret
adc
pop
jae
cmp
outsb
mov
mov
add
stc
add
sub
xchg
das
repnz
inc
fimull
push
nop
and
dec
fldt
pop
xor
xor
test
int3
xor
adc
cmp
xchg
push
push
lea
addr16
mov
out
mov
jl
jecxz
push
dec
movsb
mov
dec
sarl
xchg
inc
and
mov
pushf
jb
in
add
mov
outsb
mov
jb
in
test
imulb
in
mov
mov
mov
popf
ficoms
scas
pusha
push
dec
push
mov
mov
push
mov
push
mov
pop
test
lcall
rclb
fsubs
fisubl
repnz
out
xor
dec
shl
mov
inc
fistl
sbbl
mov
ret
scas
xchg
push
xchg
jmp
in
ret
mov
stos
inc
insb
mov
xchg
pop
and
xchg
outsb
jne
leave
insl
or
sub
shrl
sti
and
cmpsb
pop
cmpsl
add
lods
rcrl
sahf
pop
popf
and
dec
sbb
ret
pop
adc
sub
mov
or
mov
add
aam
test
sub
pop
mov
filds
lcall
lcallw
sbb
inc
les
into
daa
push
add
lods
inc
inc
mov
cs
iret
fisttpll
bound
jg
inc
imul
ljmp
jg
insb
or
subl
lods
mov
outsb
pop
or
adc
out
push
pop
adc
push
popf
ja
bnd
in
sub
mov
adc
in
fisubl
in
and
ficompl
das
mov
jne
insl
jg
pop
push
mov
cmp
mov
jecxz
repz
cmc
xor
rclb
mov
jnp
xchg
xchg
fcompl
test
imul
fstl
or
adc
and
and
inc
out
jmp
stos
pop
adc
std
xchg
xor
insl
sbb
inc
inc
cmp
mov
stos
out
adcb
cltd
call
jns
inc
xlat
and
and
add
aaa
aam
daa
xor
fisttpl
pop
push
dec
jle
les
mov
les
sub
fisubrl
mov
mov
mov
mov
jp
movsb
addr16
aaa
dec
aaa
sbb
sbb
dec
imul
inc
fsubrp
mov
sub
xlat
lahf
dec
jne
lods
stos
or
push
cmp
inc
mov
or
add
mov
fadds
nop
xchg
mov
mov
add
inc
sbb
jl
enter
jo
cmp
cli
incb
shrb
push
mov
xorl
adc
cmp
mov
xor
cmp
pop
jno
adc
mov
sub
test
mov
jmp
fiaddl
sub
pop
scas
mov
leave
fisubl
pop
mov
or
jbe
test
mov
cmpl
mov
fs
es
mov
shrb
xor
fs
add
mov
cmpsb
sub
orl
push
sub
pop
mov
lcall
push
ja
insl
and
jo
sbb
add
mov
sbb
pop
test
mov
mov
and
dec
mov
lcall
add
movsl
push
je
mov
jae,pt
push
push
adc
adcb
mov
je
insl
aaa
data16
call
and
lea
rolb
insl
push
lds
sbb
cmpsl
jne
add
lods
add
dec
mov
or
adc
insl
or
jmp
mov
inc
inc
or
mov
loope
dec
test
inc
push
inc
add
mov
inc
push
les
adc
sbb
mov
push
adc
jbe
dec
sub
addr16
and
sbb
xchg
sbb
mov
repnz
cwtl
imul
push
roll
add
stos
dec
xchg
lods
pop
lods
clc
fnsave
xor
cmpsl
loopne
cmp
lods
cmc
into
cmp
or
adc
push
xor
push
or
cmpsb
arpl
mov
mov
fcmovne
insl
pop
movsb
pop
loop
test
mov
sub
ss
test
mov
or
sbbb
or
inc
popf
clc
push
cs
xor
fldcw
xor
insl
mull
cld
rcrb
fcmovnb
mov
add
lods
mov
dec
enter
mov
xchg
xchg
lds
cmp
push
sbb
sbb
test
icebp
js
aaa
mov
mov
scas
inc
test
test
adc
popa
and
inc
jo
ret
xor
shlb
aaa
add
mov
dec
xchg
and
lds
or
mov
sbb
lret
leave
xlat
mov
and
movsb
mov
sub
mov
rcr
jne
xchg
mov
sbb
mov
mov
sbbl
fstp
sahf
mov
test
inc
inc
pop
push
pop
hlt
mov
sbb
push
sub
mov
add
aad
inc
insb
push
mov
jecxz
pusha
mov
and
insl
jecxz
add
ds
movsl
lea
sub
lcall
xlat
xor
in
inc
inc
pop
or
leave
jnp
cmp
mov
fstps
mov
jno
bound
mov
mov
ret
sti
shll
adc
fldt
pop
jo
arpl
cmp
pop
das
fnsave
inc
lds
pop
or
mov
sbb
pop
and
notl
mov
cmp
loope
or
aam
mov
mov
pop
ficoml
mov
sub
aaa
xlat
inc
mov
das
inc
xchg
in
or
les
cs
dec
movsl
add
xor
loopne
mov
mov
xchg
aam
orb
push
shrb
pop
pop
js
inc
jns
fdivrs
stos
pop
jbe
xchg
mov
cmp
fldt
jmp
test
inc
cli
xor
add
movsl
ret
mov
notb
pop
fcmovnbe
dec
cltd
fstpt
mov
sbb
pop
ds
xchg
pop
lods
mov
in
dec
jno
fcmovb
mov
cs
rcrl
sbb
jl
push
mov
fs
or
inc
mov
fldl
fcmovb
dec
mov
jbe
dec
rcll
jns
push
mov
repnz
or
lods
and
fnsave
ret
andb
mov
cmp
je
pop
bound
pusha
mov
mov
aam
div
clc
loop
sbb
xor
sub
out
xchg
xchg
xchg
xorb
roll
pop
fildl
dec
shll
lret
mov
pop
out
xor
push
movsb
jp
ficoml
sbb
sub
mov
sub
insl
pop
fdivs
ja
mov
lds
fsts
fistpl
lea
out
dec
mov
mov
notl
sub
je
mov
sbb
stos
ficoml
xchg
xchg
jbe
mov
aaa
dec
sbb
fstpl
push
or
or
or
imul
aaa
bound
or
add
or
cwtl
dec
push
insl
imul
lds
xchg
mov
adc
mov
mov
rcll
mov
cs
push
cmp
sbb
cmp
xorb
rcrb
mov
xor
fiadds
in
and
es
arpl
int
lods
or
mov
dec
rcll
cmpsl
pop
xlat
add
movb
or
inc
lds
lock
mov
sbb
sahf
cli
dec
jl
push
inc
aad
sti
fidivrs
popf
pop
decl
test
out
icebp
add
sub
rcl
sbb
push
add
imul
push
xchg
inc
or
adc
loopne
push
sbb
gs
je
hlt
sti
sub
push
cs
stc
push
cmp
aam
dec
lret
test
int
add
and
add
xchg
ret
add
mov
add
inc
add
pop
rolb
push
push
cmpb
add
adc
fcomp
mov
rclb
pop
push
enter
lods
std
xchg
mov
mov
mov
xchg
ja
xor
lea
dec
pop
or
mov
std
xorl
mov
inc
inc
add
sahf
jnp
fucom
fcoms
pop
enter
gs
cmpsl
pop
daa
mov
adc
cld
pop
dec
adc
and
inc
inc
add
loopne
lahf
add
cwtl
sub
mov
stos
roll
xor
add
sub
insb
sahf
ss
lea
add
clc
loopne
fildl
sbb
and
sbb
mov
or
adc
mov
cmp
sub
sahf
unpcklps
icebp
outsl
jae
mov
adc
jne
xchg
imul
adc
loopne
cs
das
jno
ret
pop
bound
addl
insb
pop
fcomi
push
ret
xlat
adc
mov
xor
sub
adc
in
and
insl
inc
fcmovnu
xchg
fdivrp
inc
mov
jle
inc
scas
std
push
mov
xchg
mov
adc
jmp
or
arpl
lds
xchg
pop
clc
aam
test
dec
cmp
fldcw
movsl
mov
lcall
mov
fnsave
repnz
pop
enter
fcmovnu
adc
das
mov
ss
jae
pop
sahf
pop
fiaddl
sub
sub
mov
pop
mov
in
pop
xchg
adc
add
aad
loope
mov
mov
sub
add
in
mov
cmp
rolb
and
leave
mov
mov
sub
scas
xchg
xchg
arpl
cs
loopne
in
out
std
clc
les
jo
xlat
jg
inc
push
addr16
test
sub
pop
and
out
mov
pop
cmp
pop
jl
inc
int3
imul
sbb
pop
lret
xchg
mov
pop
es
add
mov
inc
imul
outsb
push
js
ret
cmp
ret
mov
sbb
sub
sub
push
mov
cmpb
shlb
inc
mov
lret
inc
sti
and
das
push
mov
adc
jb
add
fdivrs
stos
js
mov
insb
cmp
bound
outsb
xchg
test
inc
out
imul
outsb
sbb
subl
adc
imull
mov
xchg
xchg
adc
or
mov
and
fdecstp
out
cltd
in
inc
push
add
leave
insl
cwtl
mov
xchg
add
dec
add
rorb
inc
insb
sub
mov
pop
sti
pop
outsb
sub
dec
and
jo
and
out
stc
sti
cmp
inc
das
mov
test
jmp
add
or
test
sub
popa
popa
mov
ret
pop
outsb
pusha
insb
sub
mov
cmp
sbb
jne
sbb
mov
xchg
pop
mov
mulb
push
mov
and
mov
ds
push
dec
sub
push
inc
lret
push
ss
mov
sti
jbe
push
push
xlat
jbe
jmp
mov
cmp
sbb
cmp
int3
sarl
fwait
mov
inc
push
out
fcmovb
test
decb
push
jp
jns
shll
lods
adc
aam
sub
icebp
jmp
loop
sbb
mov
xchg
inc
fcomps
sub
lds
out
jmp
sub
out
sbb
sub
lods
mov
rorl
testb
jmp
adc
xchg
adc
inc
push
test
mov
loopne
inc
imul
lods
enter
pusha
pop
sub
xor
mov
lods
push
sbb
inc
mov
mov
cmc
or
and
lret
xchg
clc
mov
push
in
jnp
rcrb
repnz
mov
sub
mov
stos
loop
push
mov
xor
dec
sub
outsl
push
arpl
push
inc
imul
bnd
aam
idivb
or
and
and
in
inc
add
cmpsl
ljmp
push
fs
sbb
stos
cmpsl
ret
jmp
movsb
or
push
test
dec
call
mov
das
add
mov
fsubr
movsl
inc
fcmovnbe
inc
hlt
mov
xor
push
dec
fsubrs
lock
out
stos
loope
push
mov
lds
jo
mov
test
or
mov
xchg
subl
gs
xor
popa
pop
sub
cmp
mov
mov
push
jno
push
xor
lods
push
inc
sbb
inc
cmp
out
add
faddl
add
and
cmp
fcmovnb
push
mov
gs
andb
and
aad
insl
test
pop
es
jbe
mov
inc
in
push
insl
and
lods
add
rol
out
ret
ss
jp
and
mov
mov
jmp
cli
pop
fdivs
adc
out
adc
xchg
mov
adc
stc
or
xor
popa
gs
aam
lods
inc
shrb
mov
sbb
ret
sub
adc
mov
adc
adc
push
mov
je
mov
adc
inc
fistl
movsl
lock
mov
xchg
push
mov
scas
imul
pop
pushf
cmp
add
xor
jge
pop
das
lods
stos
push
subb
sub
outsb
movsl
orb
xor
push
inc
shrb
xchg
inc
iret
cmp
push
mov
push
in
inc
add
jb
mov
inc
in
xchg
sub
test
es
add
cmp
jne
xor
push
call
stc
out
mov
insb
enter
mov
cltd
sbb
sahf
push
insl
test
push
stos
adc
mov
fwait
push
sub
adc
lret
xchg
sbb
mov
cmp
rclb
fdivrl
imul
jmp
cli
loop
cmp
and
push
pop
mulb
repnz
sti
pop
lods
push
xchg
adc
aam
rorl
inc
insb
sub
mov
mov
xchg
sbb
popa
cmp
fdivrl
xorb
xchg
push
inc
aad
inc
jnp
int
mov
mov
divl
int3
xchg
mov
mov
mov
ret
pop
loope
inc
lods
and
lret
int3
adc
std
cltd
mov
adc
xchg
fdivrl
adc
mov
adc
movsl
push
push
xchg
jae
jp
jb
mov
insl
mov
outsb
lret
ss
cmp
mov
push
fwait
push
pop
jb
push
sbb
in
mov
mov
sbb
icebp
imul
mov
mov
add
in
mov
pop
xor
sbb
insl
sbb
ret
and
es
in
cmpb
lret
outsb
or
test
xor
sub
in
insl
imul
or
xchg
mov
jmp
movsl
mov
mov
movsl
insl
imul
or
enter
mov
lds
push
inc
fildl
mov
jns
enter
xchg
xchg
push
inc
inc
ret
pop
jl
scas
test
or
add
je
ret
or
hlt
mov
mov
fnstsw
sbb
xchg
outsl
jbe
lods
inc
mov
or
outsb
xchg
adc
fdivs
push
push
push
inc
mov
mov
lea
mov
push
shlb
xchg
pop
lds
mov
sub
insl
test
sub
sbbb
fcmovnbe
movb
aaa
aaa
adc
stos
pop
stc
lods
mov
mov
mov
lds
adc
adc
cmp
roll
stos
or
cmp
xlat
jbe
insb
pop
fistl
mov
or
mov
insb
mov
xlat
out
or
mov
aaa
sbb
loop
and
test
jbe
repnz
jo
or
shll
pop
fistl
insl
pop
cld
pop
xlat
inc
xor
outsb
insl
sbb
int
lcall
sub
push
test
and
pop
int
fisubrl
add
idiv
aam
sbb
in
ret
push
iret
int3
ja
insl
dec
insl
jp
sti
mov
and
dec
lds
pop
fisttpl
jg
imul
pop
mov
mov
cmc
xor
loop
sub
mov
mull
inc
loope
jecxz
jmp
adc
mov
inc
in
or
xor
pop
push
mov
enter
aaa
fimull
aad
andl
or
outsl
push
adc
pop
push
in
in
mov
or
arpl
cmp
add
andl
lods
popf
mov
sti
repz
icebp
push
inc
cvttps2pi
add
outsb
insb
pop
cmp
daa
mov
cltd
pop
mov
fcompl
aaa
add
addl
jle
cwtl
dec
mov
pushf
rcl
add
push
enter
push
mov
sub
call
inc
fisubrl
insb
fstpt
int3
mov
ja
mov
add
push
add
pop
mov
jle
in
jno
sbb
jmp
pop
stc
mov
adc
lea
inc
outsb
mov
or
xlat
loope
push
in
test
cmp
insb
sbb
push
popa
xor
mov
or
imul
outsb
fisttpl
pop
je
push
ficoml
push
xchg
fisubrl
dec
scas
int
jge
and
jno
das
push
aam
gs
andl
fucomi
inc
or
or
adc
mov
insb
dec
test
das
xchg
jne
or
fidivl
cmp
sbb
or
out
push
mov
cmc
mov
je
and
ret
repnz
jne
mov
xchg
fildll
sub
ret
adc
test
sbb
rorl
insl
push
mov
enter
into
mov
mov
and
mov
int3
sub
push
push
inc
mov
nop
lret
push
add
pop
mov
jg
neg
imul
inc
insb
ljmp
mov
insl
inc
mov
jb
sbb
push
fcmovnb
or
ret
ret
clc
push
sbb
pop
xchg
stos
and
push
repz
or
add
out
cwtl
rcll
les
cmp
jae
jle
insl
mov
pop
cmp
cmp
adc
adc
push
xor
sbb
jmp
fisubrl
aam
adc
pop
jp
imul
mov
mov
xchg
or
xchg
mov
add
adc
outsl
fstl
ja
xchg
addr16
pop
mov
sub
add
xor
mov
fildl
fwait
push
enter
imul
aad
inc
insl
mov
mov
pop
add
test
xchg
sub
add
stos
int
ss
pop
push
loopne
and
push
sub
inc
sbbl
insb
xchg
cmp
mulb
imul
scas
push
mov
shrw
push
std
sbb
add
adc
into
pop
jecxz
out
icebp
lds
insb
mov
mov
inc
loope
out
and
fwait
push
rol
sarl
sbb
pop
fimull
aas
jmp
mov
mov
push
shll
aam
lret
mov
inc
mov
lods
xor
lret
das
xor
xchg
sahf
les
jecxz
push
inc
inc
inc
adc
dec
clc
in
pop
shll
xchg
mov
mov
das
lods
lock
lret
jo
dec
cmp
mov
push
je
fsubr
push
jbe
lahf
pop
sub
cwtl
mov
daa
imul
push
imulb
jae
loopne
test
pop
pop
adc
test
xchg
ljmp
outsb
adc
sub
dec
loop
mov
fisttps
aam
and
push
std
call
sbb
xor
outsb
insl
pop
lcall
fldl
mov
add
data16
bound
call
ss
lret
push
in
popa
in
pop
out
sub
mov
pop
test
and
sbb
push
lcall
sbb
push
rorb
or
push
mov
or
inc
push
popa
fldcw
xlat
rolb
adc
mov
aam
das
mov
aad
adc
mov
je
sbbb
cmp
cmc
xor
outsl
sbb
mov
mov
out
and
es
cwtl
ja
aas
sbb
lret
incb
stc
rolb
pop
sbb
pop
js
cmp
inc
dec
mov
es
mov
sti
bound
jno
jecxz
push
pusha
or
mov
pop
and
jmp
jge
push
andl
jl
pop
fiaddl
cli
inc
mov
sub
inc
fucomp
inc
xchg
andl
outsl
negb
mov
fstl
sub
je
aaa
push
mov
scas
add
sub
pop
loop
jmp
xchg
and
dec
or
mov
sub
addr16
punpcklwd
fisttpll
or
loopne
add
aam
or
in
mov
push
add
inc
push
push
xlat
stos
add
cld
ret
mov
mov
mov
fsubr
scas
xor
mov
jmp
ss
dec
out
xor
inc
add
loop
call
imul
push
fiaddl
mov
inc
aaa
rorl
imul
dec
xchg
cmp
xchg
pop
jno
rorb
jo
inc
mov
dec
jg
cmp
out
xchg
insb
push
lcall
cmpsb
lds
es
adc
mov
sbb
cmpsl
jnp
cs
es
or
jo
fidivs
sbb
mov
movsb
cmp
sub
jb
je
push
bnd
push
jno
scas
or
sbb
push
sub
adc
pop
das
fiaddl
aas
pop
add
andb
cld
inc
inc
aaa
mov
insb
lret
sub
xchg
aaa
adc
sbb
mov
xchg
repz
pushf
xchg
xchg
xor
fs
and
fidivl
insl
lea
sub
insl
mov
jg
das
jg
mov
mov
fstl
mov
cmc
xor
adc
jmp
cmpb
test
push
lds
outsb
push
sub
dec
int
mov
ret
stos
je
push
out
sbb
sbb
out
jg
push
push
cmp
psubd
in
cmpsl
sbb
cmp
inc
hlt
insl
pop
mov
adc
add
imul
and
xlat
jecxz
movl
pop
fwait
stos
fadds
lcall
call
push
call
dec
xchg
rcr
fndisi(8087
lods
pushf
add
adc
clc
lret
fimull
cld
cmp
roll
or
and
push
aam
xor
loope
insl
push
adc
jo
ret
clc
mov
push
insb
or
mov
mov
lock
jbe
mov
cmp
xchg
shll
or
or
inc
test
mov
fcomip
cwtl
jle
lea
insl
inc
adc
pop
mov
mov
test
fnsave
lret
inc
sbb
fcmovbe
push
shl
mov
add
jbe
enter
ret
mov
mov
inc
insl
add
int3
fs
xlat
rcll
push
mov
fldt
xchg
fisubl
lods
sbb
inc
lods
adc
test
andl
in
rorl
es
or
or
mov
jnp
movsl
sub
inc
xor
sub
outsb
sbb
cmpsb
bound
ss
stc
insl
pop
push
cwtl
push
lea
add
pop
in
mov
or
inc
push
shlb
mov
cs
sbb
aam
push
clc
xor
push
or
inc
popl
push
xorb
in
inc
cmp
in
xchg
xchg
fmuls
push
sbb
dec
imul
movsl
shll
xor
push
fsubr
leave
push
insb
xor
dec
mov
xchg
clc
ret
in
imul
cmp
ds
aam
rcrl
call
add
xchg
ljmp
ljmp
add
mov
add
push
imul
shll
dec
pop
dec
and
mov
adc
pop
out
xor
imul
xchg
adc
scas
sbb
fdivrs
mov
add
add
lea
repnz
or
test
dec
add
nop
xor
mov
inc
pop
pop
call
or
jbe
stc
clc
lds
push
lret
sbb
jno
dec
repz
or
gs
dec
test
xor
adc
pop
incl
inc
mov
das
jg
lds
mov
subb
pop
movsl
fnstsw
lcall
sbbl
test
push
mov
outsb
clc
xor
and
mov
adc
mov
out
in
stos
push
jle
mov
mov
imul
dec
cmpb
arpl
or
stc
dec
mov
fstpl
pop
clc
jmp
inc
stc
jbe
dec
fwait
sti
add
push
fcoml
and
insl
sbb
pop
jp
xorb
ds
jae
mov
ljmp
lods
or
add
xor
jne
jl
dec
mov
mov
mov
jb
fstpl
sub
push
ficompl
adc
fwait
mov
push
and
inc
push
out
nop
push
jne
mov
imul
cs
test
push
add
mov
fcoms
mov
push
inc
adc
cmpsl
test
mov
in
mov
add
pop
mov
addb
sti
push
sbb
inc
jbe
cmp
ret
mov
sub
xchg
pusha
jmp
jmp
or
push
or
inc
lods
adc
outsb
push
inc
add
inc
adc
xor
or
adc
xchg
inc
in
jo
adc
loope
mov
mov
or
into
add
or
adc
fiaddl
jne
js
mov
insl
mov
xor
ja
mov
xchg
push
sbb
xchg
pusha
xchg
pop
inc
pop
add
cwtl
push
mov
ret
sub
dec
sbb
jno
mov
xor
or
or
mov
xor
fwait
mov
or
lahf
mov
and
mov
stos
add
es
mov
loopne
subb
imul
mov
xor
inc
rolb
sub
adc
jae
std
fs
lods
lods
jbe
sbb
add
xor
repnz
cmc
bound
or
leave
or
inc
inc
inc
adc
lcall
stos
addr16
mov
mov
or
sbb
in
rcl
inc
lds
ss
je
mov
mov
mov
pop
push
jne
insb
adc
test
fdiv
or
adc
dec
ss
lods
pop
inc
mov
xor
rorl
aas
sahf
stos
clc
inc
mov
cmp
enter
push
or
test
add
pop
pop
jo
inc
lcall
add
cmp
aaa
mov
jo
jge
les
and
jg
ss
sarl
xchg
dec
xchg
sbb
repnz
je
imul
mov
jge
sbb
fiaddl
mov
dec
popa
cmp
pop
in
mov
and
mov
dec
dec
iret
add
outsl
mov
ljmp
mov
inc
adc
shll
and
mov
insb
mov
std
dec
enter
insb
insl
mov
std
mov
pop
inc
mov
out
cmp
fcoml
sbb
push
shl
cmp
loopne
rcll
ds
pop
pop
mov
fwait
in
xchg
arpl
sub
adc
and
sbb
ret
pop
ds
sub
xor
mov
test
mov
push
fwait
and
xor
xor
int
je
bound
inc
mov
ljmp
je
add
repnz
fstpl
fcmovnbe
dec
pop
sbb
lea
ja
sub
mov
inc
insl
iret
out
mov
int
lods
sub
add
out
cs
dec
scas
mov
push
xlat
insl
sbb
add
pop
pusha
out
cmp
pushl
jo
pop
push
movsl
enter
test
xchg
dec
int3
dec
lock
out
shrb
mov
add
int
das
ds
pop
aaa
xchg
mov
pusha
inc
clc
jp
pop
push
pop
push
divb
adc
mov
mov
mov
xchg
add
shrb
scas
or
inc
jno
xor
xchg
sub
dec
lret
movsl
mov
cs
rclb
test
mov
pop
cmp
jbe
call
mov
movsl
out
cmp
dec
or
push
orb
adc
fstp
movsl
or
rorl
add
in
iret
frstor
and
cmc
lcall
push
mov
adc
cmpsl
adc
jne
jno
or
rolb
push
add
insl
imul
cmp
loop
insl
fwait
push
xlat
add
mov
xchg
add
int3
adc
mov
cmpsl
xchg
inc
pop
sbb
fcmovu
stc
sub
icebp
mov
aam
push
sub
push
xor
jbe
mov
addr16
imul
mov
testb
outsb
jne
leave
mov
jle
aaa
mov
xchg
jp
cmc
sbbl
gs
pop
adc
xchg
mov
movsl
or
es
jge
jo
cmp
mov
adc
scas
mov
add
insl
add
lds
push
xor
push
cmp
outsb
insl
mov
cmp
jbe
aam
mov
sub
xchg
push
sub
cmp
push
das
sub
pop
pop
inc
sub
xchg
clc
push
ret
insl
inc
mov
inc
fcoms
mov
lods
fcoml
std
xchg
mov
dec
sub
test
mov
sub
pop
cld
jno
insl
mov
add
out
arpl
test
movsb
adc
xchg
pusha
or
loop
loopne
inc
add
ficomps
jmp
sub
andl
fbstp
xlat
or
ret
mov
mov
xchg
xor
dec
insl
imul
jae
pop
cltd
pop
fisubs
mov
mov
xlat
xchg
sti
sbb
sub
pusha
jecxz
pcmpgtd
pop
imul
adcb
pop
xchg
cmpsb
sbbb
jmp
mov
mov
das
loopne
sub
adc
sub
test
lods
push
insl
leave
outsl
sbb
mov
xor
in
pop
shll
adc
movsl
je
pop
or
adc
push
cwtl
cmpsl
push
sbb
push
add
mov
push
xor
hlt
arpl
lds
je
cmp
mov
jo
mov
cmpsl
mov
push
mov
dec
inc
scas
cmp
rolb
or
xchg
adc
stos
dec
cs
sbb
movsb
pop
imul
sbb
mov
and
pop
rclb
pop
push
jg
inc
mov
movsl
sbb
inc
mov
insl
stos
test
lds
xor
repz
ja
insl
sbb
xchg
mov
and
mov
movsb
mov
jecxz
adc
repz
xor
subps
loopne
adc
insl
pop
adc
xchg
mov
sub
mov
cmp
mov
shll
fdivrs
or
or
xchg
sbb
daa
lods
adc
mov
addb
dec
shr
push
mov
movsl
lea
and
and
jmp
out
addl
es
in
jmp
pusha
rcll
mov
stc
or
mov
stos
stos
sub
je
sub
add
push
mov
mov
mov
push
sub
mov
sbb
add
ss
mov
rcl
push
xor
xchg
shl
gs
je
jno
movsb
fistl
jnp
sbb
les
fs
or
insb
fsqrt
jmp
inc
shll
test
xchg
mov
sbb
push
add
xor
stos
dec
lea
addr16
mov
pop
nop
mov
sub
mov
adc
pop
add
loop
sub
pop
dec
mov
je
dec
cmp
fnstcw
fcmovnbe
adc
mov
inc
fwait
and
add
pop
in
loop
ds
cmpsb
cmpsl
mov
adc
mov
lcall
lret
push
mov
jl
daa
cmpsl
out
mov
add
cli
js
lret
and
push
stc
int
or
sbb
jbe
sub
push
test
rolb
pop
add
jbe
fcompl
hlt
mov
mov
ljmp
jne
mov
add
fcos
out
pusha
mov
and
mov
insl
and
or
fisttpll
subps
sub
mov
test
out
in
idivl
cmp
frstor
ljmp
mov
inc
les
and
mov
mov
jbe
stos
lea
loop
jb
out
add
push
fdivrl
mov
mov
in
in
jnp
inc
rcl
lods
and
inc
dec
or
push
les
ret
inc
xchg
add
or
scas
or
mov
inc
dec
std
cli
mov
mov
stos
fcmovnbe
in
mov
mov
mov
leave
xor
ret
pop
or
incl
lret
ret
dec
sbb
push
lds
mov
int
push
fisubrl
sbb
pop
andl
sar
and
shlb
or
pop
pop
adc
and
cmpsb
and
mov
sbb
mov
in
xor
loop
xchg
or
sub
inc
mov
mov
mov
fwait
addb
mov
push
adcb
push
xorb
and
add
fcomps
out
xor
mov
sub
leave
into
scas
clc
cli
test
add
aam
insl
fistl
out
out
adc
mov
sbb
mov
push
mov
push
lret
inc
jno
add
sub
outsb
gs
fistpl
mov
sbb
sbb
sub
sub
test
pop
sub
cmp
test
push
mov
aad
mov
aaa
xor
xlat
or
shlb
repnz
sbb
sub
stc
call
mov
mov
mov
sbbl
adc
xorl
push
mov
aam
stos
adc
pop
mov
mov
push
enter
fcoml
mov
cs
jp
mov
test
clc
hlt
dec
imull
ljmp
lods
and
inc
cld
xlat
mov
popf
addb
mov
push
sbb
fisubl
les
mov
sbb
pop
fcoms
mov
aad
xor
mov
pop
lods
rolb
popa
push
subb
ljmp
pop
pop
cmpsb
sub
xor
ret
js
clc
xchg
inc
xor
nop
jmp
imul
and
or
sub
add
adc
sub
or
subb
shlb
pop
inc
ret
xchg
clc
fidivrl
push
lods
cmp
js
xchg
push
pop
mov
test
inc
sub
pop
cmp
andb
bound
xlat
adc
sbb
ficoml
ja
sbb
shrb
pop
mov
push
adc
orb
repnz
pop
cmp
fisubrl
push
or
lods
add
jmp
enter
fstp
ljmp
in
fisttpll
adc
sbb
arpl
or
push
push
aaa
add
cmc
insb
shrb
je
sahf
imul
push
mov
push
xor
push
pop
jecxz
insl
fwait
stc
cwtl
in
arpl
push
mov
and
push
nop
test
cmp
mov
xchg
rcll
mov
inc
cmpsl
in
lahf
or
imul
and
bound
ds
push
mov
sub
add
fldt
rolw
dec
mov
pop
fsubrs
adc
mov
push
mov
sahf
sbb
add
mov
insl
jge
or
out
inc
pop
pop
mov
pop
inc
cld
push
insl
add
adc
pop
in
lods
pusha
inc
xchg
xchg
insl
mov
aam
enter
mov
mov
mov
xchg
cmp
movsb
mov
sbb
jl
pop
pop
push
add
and
lds
pop
sub
fildl
aaa
pop
roll
pop
aaa
add
dec
xlat
mov
xor
push
mov
cmpb
cmpsb
fildl
addb
lret
popa
mov
cs
adc
mov
inc
in
fs
gs
mov
sbb
add
test
add
outsb
lret
push
insl
test
sbb
push
jmp
test
mov
sub
insb
cmp
jo
popf
popf
adc
mov
pop
sbb
push
aaa
push
and
add
inc
inc
insb
sub
cmp
mov
push
lret
add
ficompl
test
ss
lds
mov
mov
push
and
mov
pop
fdivrs
and
mov
pop
pop
mov
add
int
mov
insl
je
mov
dec
mov
push
jnp
dec
das
stos
xor
or
cli
lcall
pop
lret
fcmovnbe
mov
and
mov
sub
dec
add
ret
xchg
sub
ja
pop
dec
sbb
push
insl
xchg
mov
fisubl
je
insb
jb
fstpl
push
fldt
xchg
inc
lds
mov
and
adc
inc
mov
push
je
add
mov
cmp
or
iret
pop
aam
ljmp
inc
addl
test
xchg
mov
push
fnsave
mov
or
inc
lds
jnp
pushf
mov
subb
sbb
daa
add
inc
test
mov
inc
mov
jbe
je
dec
cmp
sub
jecxz
pop
add
push
mov
sbb
adc
daa
in
pop
add
test
or
inc
inc
jge
add
adc
shrl
cmp
mov
and
mov
push
push
mov
or
test
push
mov
ja
ficoml
jmp
jmp
mov
dec
mov
sbb
add
cld
pop
fwait
cmpsl
push
sub
pop
call
jle
push
pusha
call
mov
sub
xchg
sbb
mov
mov
fdivl
mov
or
hlt
fwait
test
inc
sbb
xor
mov
mov
add
jbe
mov
adc
sub
inc
mov
mov
loope
shl
lea
xor
daa
dec
ret
mov
loopne
mov
jmp
aaa
pop
mov
sarb
xchg
outsb
inc
sub
mov
pop
mov
pushf
xchg
jmp
add
add
inc
cmp
mov
fistpl
mov
pop
aam
mov
sub
insb
ret
mov
jae
movsb
arpl
xchg
in
mov
sbb
mov
xchg
adc
mov
insl
xchg
imul
repnz
pop
xlat
xor
outsb
insb
ja
iret
outsl
jns
ficoml
rolb
mov
fwait
orl
aam
das
sub
sub
in
add
stos
xchg
iret
jno
aad
jmp
test
mov
mov
lds
xor
enter
arpl
negb
das
sbb
or
dec
xor
sar
aam
mov
fcomps
xchg
outsb
in
outsl
cmpl
mov
jl
test
add
dec
in
stos
ficompl
and
jge
data16
andb
fistl
nop
imul
outsb
popa
arpl
mov
imul
jno
sbb
clc
fidivl
xchg
inc
je
subb
cs
sub
jns
cmp
in
add
push
ljmp
mov
mov
push
push
pop
roll
cwtl
inc
pusha
cmp
mov
sbb
add
filds
inc
sbb
add
dec
bsr
ret
mov
jnp
xlat
rcrl
push
mov
pop
push
mov
insl
in
ret
repnz
dec
mov
inc
mov
aaa
rcr
or
inc
inc
push
lret
or
inc
mov
mov
adc
mov
outsb
xchg
mov
fldenv
xchg
icebp
mov
mov
mov
mov
ret
jmp
fcomp
sbb
jg
bound
jns
fldt
rcrl
jae
ljmp
mov
add
jno
jo
mov
push
sbb
pop
movsb
ds
jge
mov
sahf
cmp
cmp
insl
push
pop
sbb
mov
imul
shrb
push
inc
test
mov
sbb
push
shlb
inc
insl
or
add
scas
dec
jmp
stos
add
dec
fsubrl
jle
addr16
xor
push
loopne,pt
inc
pop
jo
xchg
aaa
pop
inc
shll
mov
mov
test
sbb
sarl
loopne
cmovb
pop
addb
adc
mov
jle
in
out
add
push
mov
mov
mov
mov
adc
xlat
mull
insl
push
inc
add
insl
inc
loope
imul
dec
xlat
jo
mov
add
sahf
push
jp
test
fistpl
sub
xchg
call
insb
aaa
cltd
aas
out
and
loopne
xor
and
imul
push
mov
or
or
jle
imul
jno,pt
xchg
test
add
push
adc
xchg
ljmp
jp
bound
cmp
mov
repnz
dec
mov
insl
sbb
push
dec
lods
popl
lds
sbb
xchg
adc
aaa
js
push
sub
cmpsl
mov
mov
fimuls
mov
pusha
mov
sti
xor
cmp
fisubl
sti
sbb
xchg
shl
imul
insl
imul
aam
push
adc
sub
test
sub
xchg
call
lods
fwait
dec
movsl
sbb
push
fisubl
xor
inc
aam
std
lds
in
add
out
xchg
adc
xchg
outsl
sbb
jmp
js
mov
hlt
push
sub
inc
enter
sub
sub
jne
adc
jecxz
sti
inc
or
push
aad
aad
inc
aad
fildl
lds
incb
addr16
sbb
pop
or
dec
or
sbb
cmp
push
in
adc
cli
pop
xor
mov
or
mov
jbe
jge
and
xor
sub
sub
add
js
dec
add
mov
inc
push
pop
pop
pop
pop
pop
popa
mov
pop
pop
mov
in
fcoml
aas
jno
aam
or
rol
pop
xor
mov
mov
pop
or
sub
test
add
insb
mov
inc
jmp
lds
xchg
dec
mov
and
adc
sub
js
mov
lods
into
pop
or
sub
insb
es
pop
or
add
loop
aad
dec
xor
xchg
cmp
push
sub
push
clc
or
adc
add
int3
rolb
or
or
inc
lods
fsub
outsb
insb
and
push
jbe
in
dec
jecxz
dec
inc
push
scas
sbb
push
dec
inc
adc
out
mov
sbb
mov
add
mov
pop
inc
pop
jb
ret
lods
rolb
pop
dec
icebp
xchg
fldcw
mov
push
aad
in
lahf
idivl
inc
les
mov
aam
sbb
or
out
pop
rcl
xchg
loop
inc
gs
add
lods
orb
popa
inc
outsl
or
mov
add
in
lods
xchg
cmp
pop
rorb
in
cltd
and
and
jmp
push
pop
cmc
or
and
mov
mov
jb
cld
adc
mov
es
bound
sub
fdivl
addb
sub
sub
call
hlt
orl
mov
outsb
or
cmpsl
cmp
sub
fidivrl
adc
adc
shlb
jne
fldz
jge
clc
or
insl
frstpm(287
stos
dec
adc
mov
xor
mov
ret
jecxz
add
mov
push
gs
xchg
out
mov
pusha
xor
cmpsl
pop
mov
pusha
push
push
mov
adcl
sbb
dec
rcl
mov
dec
xlat
pop
sahf
adc
jecxz
jecxz
loop
mov
or
push
push
sub
outsb
or
mov
inc
or
xchg
sbb
sbb
ret
hlt
ss
mov
repz
cmp
aad
push
and
dec
rcrl
lcall
aaa
lea
insb
cmp
push
xchg
movsb
sub
insl
fistl
insl
mov
push
mov
jne
mov
call
mov
push
imul
pop
sbb
loopne
mov
ds
jge
lcall
fistl
insl
mov
imul
or
test
add
pop
mov
test
dec
pop
or
frstor
mov
and
mov
fwait
imul
push
out
sahf
popa
add
add
lea
push
jnp
adc
je
insb
sub
arpl
je
xor
sbb
mov
mov
adc
cmp
je
fwait
sub
test
cmpb
inc
dec
inc
pop
mov
cmp
push
aaa
mov
jp
sbb
insl
sbb
movsl
scas
mov
mov
jge
divl
pop
aam
add
sbb
and
sti
pop
fistl
popa
out
xchg
pop
xor
insl
insl
das
loopne
pop
mov
adc
sub
add
cmp
fiaddl
sub
mov
push
arpl
adc
inc
sbb
xchg
sbb
les
addr16
je
test
call
test
sub
mov
lea
sbb
add
jl
icebp
push
sti
ljmp
ret
mov
inc
add
imul
inc
push
push
cmp
orl
lock
mov
and
scas
mov
lods
add
fcoml
divb
push
negl
mov
push
and
or
mov
jl
xchg
pop
arpl
ret
pop
adc
xlat
stos
shlb
mov
mov
jns
in
cmpsl
dec
mov
or
repz
ds
add
cltd
and
mov
inc
pop
bound
xlat
iret
in
push
push
mov
lods
and
dec
fstpt
xlat
test
mov
or
bound
les
mov
push
enter
pop
or
repnz
ret
and
mov
test
cld
into
cmpsl
sub
adc
aaa
xchg
pop
repz
rol
pop
dec
mov
sub
rcll
mov
sbb
shlb
call
fcoml
cmpsl
push
loop
insl
mov
xor
add
adc
mov
xor
inc
insb
fisttpll
je
fs
dec
subl
call
add
lods
test
jno
arpl
sbb
pop
mov
lods
sub
jne
mov
loop
repnz
sbb
inc
call
xchg
sub
mov
mov
push
push
insb
push
es
push
adc
pusha
test
lds
testl
orb
push
inc
inc
push
mov
add
fnstsw
inc
push
sbb
mov
outsb
add
mov
imulb
jne
insb
das
jl
xchg
flds
adc
and
subl
test
or
bound
dec
mull
xchg
adc
push
insl
test
jnp
mov
mov
cltd
dec
and
push
in
aam
add
int
sti
fsubrl
call
repz
lock
loope
test
ret
ja
jbe
cmp
cs
sub
lret
icebp
test
ret
ja
fbld
push
fstl
xor
ss
ret
xor
sbb
pusha
ds
ljmp
js
out
xchg
imul
xlat
sahf
push
add
fsubrs
mov
mov
jno
and
xorb
or
inc
mov
imul
fsubl
call
pop
jg
addl
andl
clc
xlat
jno
sbb
sbb
pop
add
xor
pusha
js
add
cmp
addb
ret
mov
dec
shrl
xchg
sbb
mov
test
push
xchg
xchg
mov
adc
mov
mov
icebp
insl
sub
aad
xchg
call
mov
pusha
mov
loope
pop
cwtl
fdivs
and
push
xchg
inc
cmovo
push
add
test
fdivrs
mov
lock
push
ss
stc
aas
jmp
fsubl
push
mov
adc
adc
insl
sbb
lea
pop
add
rolb
mov
adc
or
mov
or
inc
test
fisttpl
mov
mov
mov
sbb
push
rolb
cwtl
jae
or
and
lcall
mov
sub
add
mov
mov
fwait
ret
pusha
inc
pop
call
in
aad
out
fnstsw
add
mov
mov
and
mov
ss
mov
and
add
and
rcll
loop
lods
mov
dec
or
scas
daa
outsb
lea
in
popf
and
pusha
test
mov
mov
mov
fdivs
loopne
sub
add
sar
lods
add
movsb
mov
jnp
sub
inc
adc
mov
lea
nop
pop
fiadds
in
add
sarl
mov
out
pop
stc
les
adc
ds
mov
push
xchg
in
pop
add
pop
fildl
pop
xor
dec
push
lods
pop
mov
aam
fnstenv
and
mov
movsb
mov
test
ljmp
loop
lret
pusha
mov
inc
loopne
aad
mov
outsl
cmp
xor
mov
cli
push
fistpll
push
loope
lods
out
movsl
and
cs
int3
inc
cld
or
mov
ja
movsb
insl
sbb
mov
mov
ret
mov
insb
xchg
sub
movb
call
jnp
in
inc
es
xchg
mov
adc
push
inc
rolb
mov
outsb
pop
aad
sub
rorb
loope
pop
cli
bnd
lds
hlt
and
insl
sub
inc
iret
in
push
in
jle
rclb
cmc
xlat
push
dec
sub
insl
fldt
test
mov
dec
xor
xor
fimull
mov
push
add
push
std
outsl
add
gs
mov
add
je
imul
adc
jmp
pop
arpl
daa
outsl
and
add
bound
outsb
push
jae
mov
nop
sub
or
inc
aaa
inc
jbe
and
sbb
xchg
js
pop
int
mov
and
gs
pop
or
jnp
out
out
add
sub
cmp
xlat
sub
imul
pop
insl
insl
jmp
idivl
add
or
imul
pusha
xor
insb
or
fcompl
jnp
sbb
pop
mov
adc
fwait
loopne
test
fldt
xorl
jae
xchg
xor
sub
adc
xchg
pop
push
add
jne
push
sbbb
sub
push
pop
and
fildl
outsl
ror
fldl
xor
wbinvd
dec
leave
push
sbb
jb
jnp
fs
popa
pop
and
jne
add
jae
imul
or
pop
test
and
arpl
das
es
inc
ret
aad
xor
push
lret
inc
lods
pop
sbb
add
enter
jecxz
mov
lea
insb
or
lds
test
cltd
outsb
xor
inc
arpl
dec
pop
jne
jb
inc
pop
divl
adc
dec
or
idivl
inc
sbb
pop
pop
test
ds
add
adc
cmp
add
or
cmpsb
sbb
je
ja
dec
push
mov
cmovnp
jbe
push
insb
shlb
mov
testl
arpl
adc
pop
pop
adc
mov
sbb
scas
movsb
jmp
das
xchg
jae
addl
mov
notl
rcl
out
icebp
or
fs
and
sbb
and
outsl
adc
xchg
fs
mov
loope
aas
jns
jae
aaa
jmp
idivb
iret
adc
or
and
xchg
cwtd
daa
dec
push
jo
div
inc
push
arpl
popw
xor
js
push
or
xchg
xrelease
add
cwtl
add
or
and
add
add
lea
jg
cmp
negl
sbb
or
or
jmp
or
xchg
daa
jbe
add
js
cmp
cmpsb
mov
mov
sbb
outsl
dec
popa
add
cmpsb
and
push
and
xor
sub
insb
add
cmpl
loopne
xor
inc
lret
add
jne
mov
fwait
pop
jnp
out
or
mov
push
das
adc
mov
scas
fistl
pusha
and
sbb
icebp
out
rcr
pop
jnp
xor
mov
sub
daa
jb
xchg
sbb
shll
cmp
sbb
sub
pop
mov
mov
cmp
pop
frstor
popa
aas
and
mov
popa
dec
out
mov
mov
mov
das
mov
dec
outsl
daa
or
scas
arpl
dec
lds
addl
jmp
pop
and
xchg
push
jae
imul
aaa
sub
mov
je
push
inc
sbb
icebp
lock
in
addr16
and
add
fnsave
sub
push
sbb
fwait
int
std
leave
addr16
shl
or
pop
testl
dec
loop
pop
insl
pop
or
int
dec
cmpsl
and
popf
popf
jge
bound
push
imul
gs
or
add
pop
adc
cmp
adc
les
xor
push
pop
das
push
mov
and
sti
lret
sub
push
mov
pop
fstpl
or
dec
dec
cwtl
scas
adc
rorl
sbb
or
pusha
mov
jp
mov
jne
data16
dec
jge
mov
shll
int
outsl
or
test
or
adc
dec
dec
repnz
mov
pop
fwait
add
stos
jmp
push
or
xchg
hlt
icebp
imul
adc
cwtl
outsb
inc
cmpsl
arpl
jo
adc
ja
fdivp
xchg
in
ja
jp
xlat
adc
push
jp
inc
xchg
ljmp
imul
adc
fwait
addr16
dec
sbb
inc
inc
dec
pusha
nop
rolb
sbb
pop
jne
insb
mov
add
ljmp
jnp
cmp
jno
or
sub
mov
int3
add
shrb
insl
push
pop
adc
adc
mov
ret
frstor
push
orl
std
pusha
inc
push
pop
adcl
imul
cltd
subl
popf
or
push
push
jns
push
outsl
adc
or
dec
mov
jae
push
add
int
and
xor
mov
and
inc
lret
int
push
cmp
push
mov
push
pusha
pop
xor
or
sti
dec
jo,pn
imul
out
mov
add
jg
popa
bound
das
inc
outsl
jb
mov
adc
imul
cli
popa
insb
push
jne
movb
gs
fadds
popf
fstpl
dec
dec
push
pop
push
and
xchg
lods
cmc
xor
pop
adc
sub
pop
pop
cmp
sti
push
ret
imul
mov
push
inc
dec
push
outsb
jae
add
sbb
mov
mov
add
adc
and
sub
push
xor
inc
fs
cmovge
lea
mov
cmp
test
std
adc
pop
sub
mov
stos
push
or
add
inc
cmp
push
inc
add
je
adc
adc
xor
cmovg
popf
sbb
adc
or
xor
inc
or
das
loopne
int
lock
jnp
insl
inc
stos
into
rclb
popa
mov
inc
mov
adc
test
dec
xor
mov
or
pusha
setle
xor
outsl
jae
inc
int3
push
add
sbb
inc
add
repnz
sub
push
js
lock
pushf
fstpl
jo
add
int3
push
sbb
cmp
inc
xor
popa
push
mov
pop
mov
mov
and
sub
out
dec
subb
fdivl
sbb
adc
imul
or
outsl
and
xchg
bound
xchg
mov
sub
outsl
sub
mov
xor
negl
stc
inc
or
jns
mov
push
js
aaa
xor
jo
and
push
mov
mov
in
lock
inc
insl
dec
xchg
outsb
ss
sahf
push
jo
pop
or
and
mov
fwait
xor
fdivrs
fadds
mov
push
les
in
negb
push
je
sbb
inc
or
lods
rolb
adc
lods
shrl
lods
mov
and
sub
dec
gs
mov
int3
in
push
add
xchg
imul
insb
les
add
dec
loopne
bound
movb
addb
push
in
prefetchwt1
xor
mov
inc
imul
pop
int
mov
insb
xor
ret
ss
push
dec
jbe,pn
nop
mov
dec
out
push
std
xchg
arpl
add
push
sbb
int3
push
div
jge
adc
gs
cwtl
fiaddl
push
fisubs
insb
fcoms
or
inc
inc
push
push
sub
xchg
inc
fistl
jne
aas
pop
ret
mov
je
dec
inc
jb
jae
in
andl
sbb
fldt
add
clc
push
popa
data16
mov
push
cmp
adc
sbb
mov
inc
xor
dec
jnp
ss
mov
sub
das
or
or
xchg
mov
sub
pop
push
fistpl
adc
push
push
adc
xor
and
mov
dec
mov
pop
nop
mov
js
das
or
add
aam
ficomps
or
mov
cmp
or
ja
jne
mov
dec
inc
inc
test
lds
bound
fs
ret
pop
jle
pop
stc
das
bound
inc
dec
add
add
pop
inc
sub
jbe
pavgb
popl
add
add
mov
adc
inc
or
mov
leave
mov
in
int
dec
add
cs
outsb
xchg
int
xor
add
mov
jmp
shrb
sbb
scas
nop
loop
xor
mov
sub
inc
dec
inc
inc
xlat
jo
fldl
and
in
inc
jmp
cmp
inc
push
sub
or
dec
cmpsl
cmp
rolb
add
in
adc
sbbl
iret
shrb
sub
into
outsb
mov
daa
push
lcall
or
dec
push
nop
rorl
sbb
movsb
stc
daa
mov
popf
lock
gs
mov
sbb
mov
jb
mov
xor
push
jl
and
sub
pop
xor
add
add
add
add
pusha
mov
lea
movl
push
jmp
nop
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
loopne
inc
add
or
inc
