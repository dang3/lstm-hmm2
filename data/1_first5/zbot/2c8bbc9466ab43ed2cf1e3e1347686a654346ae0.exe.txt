push
mov
sub
push
push
push
mov
movzwl
mov
movzwl
cmp
jne
mov
jmp
mov
add
mov
cmp
jne
mov
jmp
mov
xor
mov
mov
or
mov
cmp
jne
mov
jmp
mov
xor
sub
mov
xor
mov
mov
shl
mov
cmp
je
mov
mov
jmp
mov
imul
sub
mov
xor
mov
mov
mov
and
add
mov
mov
mov
mov
xor
div
mov
mov
add
add
mov
mov
sub
movzwl
cmp
jge
call
mov
test
je
movb
movzbl
or
mov
cmpb
je
movzwl
movzbl
xor
push
movzwl
imul
push
call
cmpb
je
movzwl
mov
jmp
mov
movzbl
imul
mov
cmpl
jge
movzwl
mov
jmp
mov
mov
cmpl
je
movzbl
mov
jmp
mov
mov
movzwl
movzbl
sub
add
mov
movzbl
mov
mov
mov
and
movzwl
add
mov
movzwl
movzbl
xor
sub
mov
add
mov
movzwl
add
mov
mov
add
mov
mov
mov
cmpb
je
movzwl
mov
jmp
movzwl
movzwl
imul
sub
mov
sub
mov
mov
or
movzwl
add
mov
jmp
mov
mov
cmp
jne
mov
jmp
mov
xor
add
mov
xor
mov
mov
xor
mov
imul
mov
cmp
jge
mov
mov
jmp
mov
mov
mov
mov
shl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
mov
movzbl
mov
add
sub
mov
cmp
jne
mov
jmp
mov
shr
mov
cmp
jge
push
mov
and
and
push
mov
xor
mov
add
push
mov
sub
push
call
mov
add
mov
cmp
je
mov
jmp
mov
sub
mov
movzbl
movzbl
cmp
jge
mov
jmp
mov
and
movzbl
test
je
mov
mov
jmp
mov
test
jne
movzbl
push
push
call
movzbl
mov
mov
cmp
jge
movzbl
jmp
movzbl
shl
movzbl
cmp
jge
movzbl
mov
jmp
mov
xor
div
mov
mov
mov
cmp
jle
mov
jmp
cmp
jne
push
push
movzbl
push
call
mov
mov
xor
add
mov
cmpb
jge
mov
jmp
movzbl
xor
or
mov
mov
movzbl
mov
movzbl
cmpb
jle
mov
jmp
mov
add
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
or
imul
movzbl
cmp
jge
mov
mov
jmp
mov
test
jne
push
push
push
call
movzbl
mov
xor
movzbl
mov
add
mov
cmp
jle
mov
mov
jmp
mov
or
or
movzbl
cmp
jge
movzwl
jmp
mov
or
or
movzbl
cmp
jge
mov
mov
jmp
mov
sub
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
add
movzbl
cmp
jle
mov
jmp
mov
shl
movzbl
cmp
jne
mov
jmp
mov
sub
mov
cmpw
jge
mov
mov
jmp
mov
movzwl
imul
add
mov
xor
mov
mov
mov
mov
test
je
movzwl
mov
jmp
mov
xor
add
mov
mov
mov
mov
movzwl
mov
test
je
push
mov
xor
mov
sub
push
push
call
mov
movzwl
sub
sub
mov
xor
mov
mov
imul
mov
cmp
jne
mov
mov
jmp
mov
movzwl
add
sub
mov
mov
mov
mov
sub
movzbl
mov
movzwl
or
add
cmp
je
mov
mov
movzwl
mov
cmpl
jne
movzwl
mov
jmp
movzwl
shr
mov
cmpw
jge
movzwl
jmp
movzwl
shr
mov
cmpw
jne
mov
mov
jmp
movzwl
movzwl
and
sub
mov
mov
movzwl
imul
mov
mov
movzwl
movzwl
imul
sub
xor
mov
movzwl
xor
mov
cmpw
jge
mov
mov
jmp
mov
mov
mov
mov
mov
cmpw
jne
movzwl
mov
jmp
mov
movzwl
and
sub
mov
mov
mov
add
sub
xor
mov
mov
mov
mov
mov
mov
movzwl
sub
add
mov
cmpw
jne
movzwl
mov
jmp
movzwl
imul
add
mov
add
mov
mov
and
mov
cmpw
jle
movzwl
jmp
movzwl
sub
sub
mov
sub
mov
movzwl
xor
divl
mov
jmp
mov
xor
imul
movzbl
mov
test
je
mov
mov
jmp
mov
xor
add
mov
xor
mov
mov
mov
xor
div
movzbl
cmpl
jle
mov
mov
jmp
mov
imul
mov
mov
mov
movzwl
shr
movzwl
cmpw
jge
mov
mov
jmp
call
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
movzbl
mov
mov
imul
mov
cmp
jge
mov
mov
jmp
mov
xor
add
mov
xor
mov
mov
imul
imul
mov
mov
or
add
mov
mov
mov
mov
xor
div
mov
cmp
jge
movzwl
jmp
mov
or
sub
mov
sub
mov
mov
imul
add
mov
movl
mov
and
sub
cmp
je
mov
mov
movzwl
xor
add
mov
mov
movzwl
and
mov
cmpl
jge
movb
movzbl
sub
mov
cmpb
je
movzbl
jmp
movzbl
or
movzbl
imul
mov
cmpb
je
movzbl
mov
jmp
mov
shl
mov
cmpb
jne
movzbl
mov
jmp
mov
xor
mov
cmpl
jle
movzbl
jmp
mov
movzbl
mov
mov
movzbl
sub
mov
cmpb
jle
mov
mov
jmp
movzbl
movzbl
sub
add
mov
add
mov
mov
add
mov
cmpb
jge
movzbl
jmp
movzbl
add
sub
mov
add
mov
mov
imul
movzbl
imul
mov
movzbl
movzbl
or
sub
mov
sub
mov
movzbl
add
mov
jmp
mov
mov
mov
and
mov
movzwl
mov
cmpw
jge
movzwl
mov
jmp
mov
and
mov
sub
mov
cmpw
jge
pushl
mov
or
or
push
movzwl
push
mov
add
push
call
cmpw
jge
mov
mov
jmp
mov
imul
mov
movzbl
shl
mov
movzwl
sub
mov
cmpw
jne
movzwl
or
imul
push
mov
add
push
pushl
mov
and
push
movzwl
or
push
call
mov
xor
add
mov
movzbl
shl
mov
movzwl
or
xor
mov
cmpl
jle
mov
jmp
mov
add
mov
sub
add
add
mov
mov
add
sub
mov
mov
movzbl
xor
add
mov
movzbl
shl
mov
movzwl
add
mov
cmpb
je
movzbl
mov
jmp
mov
add
mov
movzbl
shr
mov
mov
movzwl
add
add
mov
movzbl
mov
add
mov
movzbl
imul
mov
add
mov
mov
movzwl
sub
sub
mov
sub
mov
mov
mov
cmpl
jge
mov
mov
jmp
mov
movzwl
add
sub
mov
mov
shr
mov
mov
movzbl
sub
add
mov
mov
cmp
jne
mov
mov
mov
xor
mov
imul
mov
cmpl
jge
mov
mov
jmp
mov
mov
cmpl
jge
movzwl
jmp
mov
add
mov
movzwl
or
sub
mov
mov
cmp
jne
mov
mov
mov
shl
mov
cmpl
jne
mov
mov
jmp
movzwl
shl
mov
mov
imul
mov
movzbl
xor
divl
mov
cmpl
jne
movzbl
mov
jmp
movzbl
sub
add
mov
mov
shl
mov
movzwl
and
and
mov
cmpl
jle
movzwl
mov
jmp
movzbl
xor
divl
mov
cmpw
jle
movzwl
mov
jmp
mov
test
je
mov
mov
mov
or
mov
mov
mov
mov
or
mov
add
mov
mov
sub
add
mov
sub
mov
mov
add
mov
cmpl
jle
mov
mov
jmp
mov
sub
add
mov
add
mov
mov
mov
jmp
mov
mov
mov
or
mov
mov
xor
mov
add
mov
cmpl
jne
mov
mov
jmp
movzbl
shl
mov
cmpl
jge
movzbl
jmp
mov
movzbl
or
sub
mov
movzbl
mov
mov
movzbl
mov
cmpb
je
mov
jmp
mov
add
mov
mov
shr
mov
movzbl
sub
add
mov
add
mov
mov
shr
mov
movzbl
movzbl
sub
add
mov
sub
mov
movzwl
shr
mov
mov
and
mov
jmp
mov
cmpw
jne
mov
mov
jmp
mov
and
sub
mov
xor
mov
mov
shr
mov
cmp
jle
mov
jmp
mov
xor
mov
mov
mov
mov
xor
mov
cmp
jge
movzwl
and
movzwl
sub
push
call
mov
sub
shr
mov
movzwl
imul
add
mov
xor
mov
mov
mov
mov
mov
mov
and
and
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
movzbl
cmp
je
mov
jmp
mov
or
mov
add
movzbl
mov
sub
movzbl
mov
mov
cmpl
jle
mov
mov
jmp
mov
sub
mov
mov
shl
movzbl
mov
sub
mov
mov
shr
mov
mov
test
jne
push
pushl
call
mov
mov
mov
mov
imul
mov
mov
xor
div
movzbl
mov
test
jne
call
mov
mov
shl
mov
mov
add
mov
movzbl
add
mov
mov
xor
div
mov
mov
or
add
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
cmp
jge
mov
mov
jmp
mov
movzbl
cmp
jge
mov
or
mov
imul
push
mov
and
push
mov
imul
sub
push
call
mov
imul
sub
movzbl
cmp
je
mov
jmp
mov
movzwl
cmp
jle
mov
jmp
mov
imul
sub
mov
xor
mov
mov
xor
mov
cmp
jle
movzwl
mov
jmp
mov
add
sub
mov
xor
mov
movzwl
and
movzbl
mov
xor
add
mov
mov
mov
mov
sub
movzwl
cmpw
jne
movzwl
jmp
mov
sub
add
mov
movzwl
imul
movzwl
add
movzbl
mov
or
sub
cmp
je
movb
movzbl
shl
mov
movzbl
movzbl
xor
mov
cmpb
jle
movzbl
mov
jmp
movzbl
mov
mov
movzbl
mov
cmpw
jge
movzbl
mov
jmp
movzwl
movzbl
xor
add
mov
add
mov
movzwl
sub
mov
movzbl
movzwl
xor
sub
add
movzwl
movzbl
or
movzbl
sub
mov
mov
test
je
movzbl
push
call
mov
test
je
movzbl
jmp
movzbl
movzbl
and
add
mov
sub
mov
movzbl
or
movzwl
imul
mov
cmpb
jge
movzbl
mov
jmp
jmp
mov
imul
movzwl
add
movzwl
cmpw
jle
movzwl
jmp
mov
or
sub
mov
xor
mov
mov
movzwl
mov
mov
mov
movzwl
movzbl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
mov
imul
movzbl
mov
shl
mov
mov
test
je
mov
mov
jmp
mov
test
jne
push
pushl
call
movzwl
mov
shr
movzbl
mov
xor
mov
sub
movzwl
cmp
jne
mov
mov
jmp
mov
movzwl
cmp
jle
call
cmp
jne
mov
mov
jmp
mov
shl
mov
cmp
jge
mov
mov
jmp
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
movzwl
mov
and
imul
mov
mov
movzwl
cmp
jle
mov
mov
jmp
mov
mov
xor
div
movzwl
mov
shr
mov
cmpb
jge
push
mov
and
mov
add
push
mov
or
movzbl
or
push
call
movzbl
imul
sub
movzwl
cmp
jle
mov
jmp
mov
or
sub
mov
mov
shr
movzbl
cmpb
jne
movzbl
jmp
movzbl
shr
movzwl
mov
test
je
mov
mov
jmp
mov
shl
mov
mov
test
jne
push
call
mov
mov
mov
cmp
jge
movzwl
jmp
movzbl
imul
mov
sub
movzwl
cmp
jle
mov
jmp
mov
sub
mov
mov
movzwl
mov
test
je
movzbl
mov
jmp
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
shr
mov
mov
shr
mov
mov
add
mov
mov
or
mov
cmp
jge
mov
jmp
mov
sub
mov
movzwl
sub
mov
cmp
je
mov
jmp
mov
shr
mov
cmp
jle
mov
mov
jmp
mov
test
jne
push
call
mov
movzwl
xor
divl
mov
mov
test
je
mov
jmp
mov
mov
mov
test
je
push
mov
or
mov
sub
push
mov
and
push
movzwl
sub
push
push
call
cmp
jne
mov
jmp
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
shl
movzbl
cmp
jne
mov
mov
jmp
mov
imul
movzbl
mov
xor
mov
sub
movzbl
cmp
jge
mov
mov
jmp
mov
test
jne
push
push
call
movzbl
mov
movzbl
mov
movzbl
mov
shr
mov
mov
movzbl
cmp
jle
movzwl
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
movzbl
mov
imul
movzbl
mov
or
movzbl
cmp
jne
push
call
mov
mov
xor
div
movzbl
cmp
jne
push
call
cmp
jne
push
call
movzwl
mov
mov
cmpw
jge
mov
mov
jmp
movzwl
shr
mov
cmp
je
mov
mov
jmp
mov
xor
mov
sub
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
add
mov
mov
shr
movzwl
cmp
jne
mov
jmp
mov
shr
mov
mov
and
sub
mov
cmp
jne
movzwl
and
add
push
call
cmp
je
movzwl
jmp
mov
mov
cmpl
jne
push
push
push
pushl
call
mov
mov
xor
divl
mov
mov
mov
cmp
jne
mov
jmp
mov
movzwl
shl
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
cmp
jne
mov
jmp
mov
mov
xor
div
movzbl
mov
xor
mov
imul
movzbl
cmp
jne
mov
jmp
mov
shl
mov
mov
test
jne
movzwl
push
push
push
call
movzbl
movzwl
xor
add
mov
imul
cmpw
jle
mov
jmp
mov
mov
xor
div
movzbl
movzwl
mov
mov
shr
mov
mov
test
je
mov
jmp
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
test
je
push
call
mov
shr
movzbl
mov
test
je
mov
mov
jmp
mov
and
or
mov
mov
test
jne
push
push
push
call
movzbl
movzbl
imul
movzbl
mov
shr
mov
mov
or
movzbl
cmpb
jle
mov
jmp
mov
imul
movzbl
cmpb
jne
movzbl
jmp
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
sub
movzwl
cmp
jne
mov
sub
push
mov
or
push
mov
add
sub
push
mov
xor
push
push
call
mov
and
movzwl
cmp
jge
mov
mov
jmp
mov
mov
movzwl
cmp
jle
mov
jmp
mov
shr
mov
cmp
jne
movzwl
jmp
movzwl
xor
xor
movzwl
mov
or
mov
mov
xor
movzwl
cmp
jge
mov
jmp
mov
sub
movzwl
cmp
jne
push
push
movzwl
push
call
mov
mov
add
movzwl
cmp
je
mov
jmp
mov
movzwl
and
imul
mov
cmpw
jne
movzwl
mov
jmp
mov
shr
movzwl
cmp
jge
mov
jmp
mov
shr
movzwl
cmp
jle
mov
mov
jmp
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
movzwl
mov
xor
mov
cmp
jge
mov
jmp
mov
xor
movzwl
test
je
mov
jmp
mov
add
add
mov
xor
mov
mov
sub
mov
mov
movzwl
imul
add
mov
xor
mov
movzwl
shr
mov
cmp
jle
movzbl
jmp
mov
mov
mov
mov
shl
mov
movzbl
movzwl
imul
add
mov
mov
shr
mov
cmpl
jge
mov
mov
jmp
mov
movzwl
xor
sub
cmp
je
movb
movzbl
mov
xor
div
mov
mov
test
je
movzbl
mov
jmp
mov
mov
mov
test
je
mov
mov
jmp
mov
and
xor
mov
cmpb
jne
mov
mov
jmp
mov
or
movzbl
imul
mov
cmpb
jle
mov
mov
jmp
mov
add
add
movzbl
mov
mov
mov
add
mov
mov
test
je
mov
mov
jmp
movzbl
or
add
mov
add
mov
mov
add
mov
cmpb
jne
mov
imul
push
call
mov
add
sub
add
movzbl
shr
mov
cmpb
jne
movzbl
mov
jmp
mov
movzbl
add
sub
mov
sub
mov
mov
or
add
mov
jmp
mov
imul
mov
mov
xor
mov
movzwl
xor
add
cmpl
jne
movzbl
mov
jmp
mov
mov
mov
movzwl
xor
div
mov
cmpw
je
mov
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
movzbl
cmp
jge
mov
mov
jmp
mov
shl
movzbl
mov
test
je
mov
jmp
mov
shr
movzbl
cmp
jge
mov
mov
jmp
mov
shr
mov
mov
or
imul
movzbl
cmp
jne
mov
mov
jmp
mov
mov
mov
test
je
movzbl
mov
jmp
movzbl
shl
mov
cmp
jne
movzbl
jmp
mov
movzbl
add
sub
movzbl
mov
or
movzbl
mov
mov
mov
mov
cmpb
jge
movzbl
jmp
cmpb
jne
movzbl
push
movzbl
push
call
mov
movzbl
shr
movzbl
cmpb
je
movzbl
mov
jmp
mov
movzbl
mov
movzbl
mov
and
movzbl
movzbl
shr
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
imul
sub
mov
mov
or
mov
sub
movzwl
test
jne
push
call
mov
mov
mov
add
add
mov
cmp
jne
mov
jmp
mov
mov
movzbl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
shl
movzbl
cmp
jge
mov
mov
jmp
mov
and
movzbl
cmp
jne
mov
mov
jmp
mov
and
add
movzbl
mov
shl
mov
cmp
je
mov
jmp
cmp
jne
call
movzbl
movzwl
or
movzwl
add
movzbl
cmpw
jle
movzwl
mov
jmp
mov
or
and
mov
cmp
jge
mov
jmp
mov
shr
movzbl
cmp
jge
movzwl
mov
jmp
mov
mov
mov
or
movzbl
cmp
jne
push
movzwl
push
push
call
mov
mov
or
mov
movzwl
and
or
mov
cmpw
jge
movzwl
mov
jmp
mov
mov
xor
div
mov
mov
sub
mov
cmpw
jle
mov
jmp
mov
mov
cmpw
je
mov
jmp
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
mov
imul
movzwl
mov
movzwl
mov
movzbl
cmp
jge
mov
mov
jmp
mov
or
push
call
movzwl
mov
test
je
mov
xor
mov
add
push
push
push
call
mov
imul
mov
mov
test
je
movzwl
xor
or
push
mov
or
mov
add
push
call
movl
mov
shr
mov
cmp
jge
movzwl
mov
jmp
movzwl
and
add
mov
xor
mov
movzwl
imul
movzwl
movzwl
sub
push
call
movzwl
mov
test
je
movzwl
push
movzwl
movzwl
sub
sub
push
call
mov
movzwl
sub
mov
mov
mov
imul
add
mov
mov
xor
mov
cmpw
jle
mov
jmp
mov
add
mov
mov
shl
mov
movzwl
movzwl
xor
sub
mov
add
movzwl
sub
mov
mov
or
mov
cmpw
jne
mov
mov
jmp
mov
movzwl
add
mov
add
mov
movzwl
and
mov
cmpl
jne
movzwl
jmp
mov
movzwl
sub
sub
mov
add
mov
mov
sub
mov
mov
and
mov
movzwl
cmp
je
mov
mov
movzwl
imul
movzwl
sub
mov
movzbl
mov
movzwl
movzwl
and
sub
mov
sub
mov
jmp
movzwl
or
sub
mov
add
mov
mov
xor
divl
mov
movzwl
and
add
mov
mov
mov
add
movzwl
xor
sub
mov
mov
mov
mov
movzwl
imul
add
mov
mov
mov
add
movzwl
imul
sub
mov
mov
imul
movzwl
mov
test
je
mov
mov
jmp
movzwl
xor
sub
mov
mov
movzwl
xor
sub
mov
mov
add
movzwl
movzwl
imul
add
mov
mov
mov
add
mov
add
sub
mov
mov
sub
mov
cmp
jne
movzwl
jmp
movzwl
or
sub
cmp
je
movl
mov
mov
mov
shr
mov
cmpl
je
movzwl
jmp
mov
movzwl
xor
add
mov
mov
add
mov
or
sub
add
mov
mov
shr
mov
cmpl
jle
mov
jmp
mov
movzwl
and
sub
mov
mov
mov
cmpw
jge
movzwl
push
mov
xor
and
push
mov
or
movzwl
xor
push
movzwl
push
movzwl
xor
movzwl
add
push
call
cmpl
jne
mov
jmp
mov
movzbl
mov
or
sub
cmp
je
mov
mov
movzwl
add
movzwl
add
mov
cmpw
jne
movzwl
mov
jmp
mov
or
add
mov
cmpw
jge
movzwl
mov
jmp
movzwl
movzbl
and
push
movzwl
movzbl
add
sub
push
movzwl
movzbl
add
sub
push
movzbl
movzwl
and
push
movzbl
movzwl
imul
add
push
push
movzwl
movzbl
add
sub
push
call
mov
mov
test
je
movzbl
or
movzbl
xor
push
call
movzwl
sub
mov
cmpb
jle
movzwl
mov
jmp
movzbl
sub
mov
cmpw
jle
movzwl
mov
jmp
mov
shl
mov
shr
or
mov
movzwl
shr
mov
mov
test
je
movzwl
mov
jmp
movzbl
movzwl
or
add
mov
movzbl
xor
mov
add
mov
movzbl
mov
cmpb
je
movzwl
mov
jmp
movzbl
movzwl
xor
sub
mov
add
mov
movzwl
mov
xor
div
mov
cmpb
jne
movzwl
mov
jmp
jmp
mov
shl
mov
cmpw
jge
mov
mov
jmp
mov
cmp
jne
mov
mov
movzbl
shl
mov
cmpb
jle
movzbl
mov
jmp
movzbl
mov
cmpb
jle
call
cmpb
jle
movzbl
mov
jmp
movzbl
mov
cmpw
jge
movzwl
mov
jmp
mov
mov
sub
movzbl
movzwl
xor
sub
mov
movzbl
shr
mov
movzwl
movzbl
and
sub
mov
mov
movzwl
movzbl
sub
sub
mov
movzbl
imul
mov
cmpw
jle
movzbl
mov
jmp
mov
add
movzwl
movzbl
add
add
mov
mov
and
mov
movzwl
movzbl
sub
mov
sub
mov
movzwl
mov
mov
movzbl
xor
mov
cmpw
jne
movzwl
jmp
movzwl
movzbl
and
sub
mov
mov
mov
add
movzbl
movzwl
or
add
mov
movzwl
add
mov
cmpb
jge
movzbl
mov
jmp
movzbl
movzwl
or
mov
sub
mov
mov
mov
add
mov
movzbl
mov
cmpw
jge
movzwl
jmp
movzbl
movzbl
or
add
mov
xor
mov
movzwl
sub
mov
cmpb
jge
movzwl
jmp
movzwl
movzwl
xor
sub
push
movzwl
movzbl
or
add
push
movzwl
movzbl
imul
sub
push
movzbl
movzwl
or
sub
push
call
mov
movzwl
sub
mov
cmpb
jne
movzwl
jmp
movzbl
movzwl
or
sub
mov
add
mov
mov
movzbl
mov
xor
div
mov
movzwl
imul
add
mov
add
mov
mov
sub
mov
cmpw
jge
mov
xor
mov
sub
push
call
movzwl
movzwl
or
sub
mov
sub
mov
mov
mov
cmpl
jge
mov
jmp
jmp
mov
add
movzbl
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
add
movzwl
mov
xor
mov
add
mov
cmp
jle
mov
jmp
mov
xor
div
movzwl
mov
test
je
mov
jmp
mov
test
jne
call
mov
mov
imul
mov
sub
mov
mov
and
mov
imul
movzwl
cmpb
jge
mov
jmp
mov
mov
xor
div
mov
mov
test
jne
push
push
push
push
call
movzwl
mov
mov
mov
and
mov
cmpw
jne
movzwl
jmp
mov
imul
mov
cmpl
jge
mov
jmp
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
mov
mov
movzbl
cmp
je
mov
jmp
mov
sub
mov
mov
cmp
jne
push
call
mov
mov
shl
mov
cmp
jle
mov
jmp
mov
cmp
jle
mov
mov
jmp
mov
cmp
je
mov
mov
jmp
cmp
jne
push
push
call
mov
mov
sub
movzbl
cmp
jge
mov
jmp
mov
or
mov
movzwl
xor
div
mov
cmpw
jle
mov
jmp
mov
movzwl
imul
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
cmp
jge
mov
mov
jmp
mov
mov
xor
div
mov
mov
and
mov
cmpw
jne
movzwl
push
push
mov
xor
mov
imul
push
call
mov
shl
mov
mov
mov
xor
div
mov
mov
test
je
mov
jmp
mov
add
mov
cmpw
jle
mov
or
movzwl
imul
push
movzwl
imul
push
mov
imul
push
mov
or
push
mov
or
mov
add
push
mov
imul
push
call
test
jne
push
push
movzwl
push
movzwl
push
call
mov
mov
sub
sub
mov
mov
test
je
movzwl
jmp
mov
add
mov
mov
mov
xor
or
mov
cmp
jne
pushl
pushl
push
push
call
movzbl
mov
add
mov
mov
test
je
mov
mov
jmp
movzwl
xor
sub
mov
cmp
jge
movzwl
mov
jmp
mov
shl
mov
mov
sub
movzbl
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
cmp
je
mov
mov
jmp
mov
sub
mov
mov
movzwl
mov
sub
mov
mov
shl
mov
mov
test
je
mov
jmp
mov
movzwl
mov
shl
mov
mov
mov
and
mov
cmpl
jne
mov
jmp
mov
imul
movzbl
imul
movzwl
cmpw
jne
mov
jmp
cmp
jne
movzwl
push
pushl
push
call
mov
mov
xor
div
mov
cmp
jge
mov
mov
jmp
mov
sub
movzwl
cmpw
jge
mov
add
push
movzbl
push
mov
and
mov
add
push
call
mov
xor
div
mov
mov
shr
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
xor
movzwl
cmp
jge
mov
mov
jmp
mov
and
movzwl
mov
mov
mov
mov
xor
div
mov
mov
sub
sub
mov
xor
mov
mov
mov
mov
imul
sub
mov
xor
mov
mov
mov
xor
div
mov
cmp
jge
mov
jmp
mov
and
mov
mov
mov
mov
movzwl
mov
and
add
mov
mov
add
movzwl
cmp
jge
mov
xor
push
mov
imul
push
push
push
call
mov
and
cmp
je
movw
movzwl
xor
mov
cmpw
jge
movzwl
jmp
movzwl
add
mov
movzwl
shl
mov
movzwl
or
movzwl
and
mov
movzwl
movzbl
sub
mov
movzbl
mov
mov
movzwl
movzbl
imul
mov
mov
test
je
movzwl
mov
jmp
movzbl
movzwl
add
add
mov
add
mov
mov
movzwl
and
mov
cmpw
jne
movzbl
mov
jmp
mov
movzwl
or
add
mov
add
mov
mov
movzbl
xor
movzbl
or
mov
movzwl
and
add
mov
sub
mov
movzbl
xor
xor
mov
jmp
mov
shl
mov
cmp
jge
mov
mov
jmp
mov
add
sub
mov
xor
mov
mov
shl
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
movzwl
cmpl
jge
mov
jmp
mov
mov
pop
pop
pop
mov
pop
ret
jmp
jmp
jmp
jmp
ret
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
push
push
call
pop
pop
ret
or
aam
into
loop
jl
enter
popa
arpl
aam
adc
repnz
mov
mov
pop
imul
rolb
cmc
stos
lods
mov
jo
mov
jns
lods
fwait
jno
in
sub
add
inc
cmpb
pop
lock
test
lcall
insl
xchg
push
aam
push
orl
jo
mov
das
cmp
jo
je
cwtl
dec
ret
jmp
in
mov
jae
idivb
xchg
push
fiadds
sub
test
sti
push
nop
pop
fcompl
mov
mov
push
sbb
push
pop
mov
out
in
sbb
sti
inc
nop
std
jns
and
jae
lods
fistpl
lcall
mov
insl
add
cmpb
fcompl
inc
rcl
repnz
stos
xorl
movsb
divl
push
aad
cwtl
mov
jno
enter
insl
dec
icebp
and
mov
lret
dec
lret
xchg
and
ret
mov
sbb
ret
cmpsb
nop
repz
and
xor
mov
mov
scas
cli
test
sub
sub
cli
test
sbb
mov
xor
enter
cmp
pop
lret
aas
ret
mov
mov
jp
andb
bound
sti
shrl
or
and
ret
xor
loopne
or
adc
push
faddl
or
jp
push
push
loope
test
aaa
fmulp
cmp
ja
cmp
push
loop
mov
fstpt
sbb
add
popa
sub
lds
mov
jae
xchg
mov
je
dec
mov
test
icebp
test
into
and
fistps
push
aam
fisubrl
cmp
xor
inc
outsl
rolb
movsl
add
mov
jmp
hlt
test
lret
push
cmp
fsubs
inc
xor
jge
loopne
ds
xlat
notl
lahf
add
xchg
stos
call
loopne
mov
sbb
mov
into
or
sub
adc
fnsave
cmp
mov
jb
adc
xchg
jmp
lods
outsl
xor
in
mov
dec
dec
sahf
push
shll
ret
mov
cmpsb
ret
les
test
cwtl
lret
inc
push
push
data16
and
and
sub
daa
icebp
sti
inc
ljmp
mov
add
daa
xadd
xor
or
dec
xlat
jmp
icebp
cmc
jl
fs
fisubrl
pop
xchg
clc
lods
push
jle
and
inc
stc
test
icebp
loope
ret
rcr
dec
push
cmp
stc
faddl
adc
test
lret
aad
pop
sub
xchg
test
push
fcomi
and
dec
fcomi
push
pop
stc
test
pop
pop
push
push
std
and
and
das
cwtl
mov
or
inc
movsl
fstpt
loope
ret
mov
xlat
sbb
aas
inc
jmp
adc
mov
jns
daa
mov
xacquire
test
inc
scas
cli
test
pop
push
jo
fcomi
push
pop
loope
addr16
and
sub
lods
cli
test
xor
adc
icebp
and
gs
sub
and
shr
xchg
mov
lret
outsb
mov
fcomi
xchg
mov
mov
xchg
push
jns
bound
ret
outsb
stc
scas
mov
fidivrl
ljmp
mov
mov
cs
fs
lock
sub
push
cmp
adc
cmp
cmp
or
int3
bound
scas
insl
and
and
add
nop
test
faddl
mov
sahf
mov
and
and
ret
jp
pop
and
ret
icebp
data16
aaa
repz
inc
stc
jecxz
rclb
add
add
loop
sub
dec
shll
icebp
and
sbb
push
in
scas
mov
in
push
push
clc
test
clc
jecxz
push
std
add
adc
outsb
cmpsl
fidivrl
loopne
mov
xchg
scas
data16
fisttps
std
lods
shlb
and
ret
fsubrs
scas
repz
push
sti
fadd
lret
outsb
cmc
add
xacquire
icebp
sbb
lret
jne
mov
shrb
addr16
scas
cli
sub
xor
sub
mov
push
fcompl
add
and
and
cli
test
scas
stos
aad
fs
ret
add
sub
in
push
cli
clc
test
bound
test
faddl
stos
je
adc
scas
ja
xor
adc
repz
dec
sub
and
scas
xchg
jae
cli
test
faddl
stos
je
adc
scas
stos
rorl
and
ret
or
xchg
xchg
icebp
mov
test
stos
sub
mov
ja
mulb
adc
icebp
and
scas
nop
test
scas
stos
fsubl
ret
fsubl
ret
mov
test
sahf
ja
stc
test
pop
sub
mov
mov
scas
je
push
ret
jp
jne
adc
cmpsl
cmp
ret
inc
push
or
into
xchg
cli
xchg
pushf
and
and
and
and
and
lods
cli
test
scas
cli
fisubrs
xor
dec
sub
ret
test
cmpsb
push
scas
cli
aad
icebp
dec
adc
jmp
and
jae
cmp
icebp
jae
cmp
icebp
jnp
add
rorb
xchg
mov
adc
lahf
xor
movsb
cmp
sarl
ret
outsl
adc
fists
ret
mov
test
outsb
and
sub
push
outsl
frstor
icebp
and
lock
xchg
aam
mov
push
jle
mov
xchg
pop
jo,pt
je
sub
jle
mov
jl
xchg
ret
or
jb
push
outsl
cmpsl
cmp
sub
add
jns
cli
xchg
and
scas
mov
test
popa
adc
cli
jp
pusha
and
ret
aad
sbb
cmp
mov
inc
xchg
inc
fidivrs
push
dec
adc
cli
out
and
cli
test
out
cmp
or
in
dec
push
stc
ret
arpl
ret
push
cmpsl
fidivrl
dec
adc
fs
adc
scas
shll
mov
test
aad
cld
xor
mov
sbb
cmc
adc
inc
mov
aad
jno
jge
xor
mov
push
arpl
insl
lahf
outsl
cmp
fisubrs
xor
test
push
in
out
hlt
pop
movsl
mov
jo
stos
rcrb
rcll
cmp
gs
sub
mov
and
popa
js
inc
xor
xor
mov
das
sub
test
cli
mov
jp
lods
or
stos
push
mov
mov
jns
test
icebp
rcl
mov
and
ret
out
xchg
addr16
sbbb
stos
icebp
xchg
ljmp
mov
push
sahf
push
jbe
sbbb
mov
in
xchg
dec
cmp
pusha
cmpsb
jo
lods
rclb
scas
ret
inc
xchg
dec
jbe
loope
popf
and
xchg
out
shll
outsl
adc
and
loope
test
outsb
inc
ret
in
dec
xchg
stos
sbbb
mov
mov
adc
or
push
xorl
out
test
inc
pop
mov
xchg
into
inc
mov
subl
jbe
xlat
lods
in
test
mov
xchg
pusha
jg
fstpl
inc
fwait
std
scas
shrb
jl
fimull
addr16
lret
fnstenv
push
gs
int
idivb
dec
pusha
test
pushf
and
enter
addl
cltd
testl
in
dec
xchg
dec
fs
mov
jge
clc
lahf
notl
dec
jge
sahf
cli
aad
sahf
inc
mov
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
ret
test
icebp
and
rclb
mov
es
out
int3
push
inc
frstor
mov
inc
stos
leave
and
pushf
repnz
jl
xchg
fildl
addr16
cmp
inc
sahf
in
pop
or
ja
inc
sub
outsb
aam
or
pop
jl
or
cmpsb
and
push
pusha
popf
and
lds
mov
dec
int
push
sbb
into
inc
fs
add
int
ljmp
in
loopne
push
repnz
or
inc
inc
xor
mov
inc
mov
imul
insb
push
mov
fcomps
enter
mov
adc
cvttps2pi
xorl
and
aam
stos
addr16
sub
pop
xchg
out
inc
adc
lds
in
dec
sahf
jae
call
call
ds
pop
gs
sar
arpl
lret
icebp
mov
test
pop
push
gs
jmp
out
sub
mov
jo
shll
jne
or
inc
test
scas
ret
rcl
sbbl
pop
pop
cmpl
jmp
and
or
mov
dec
test
push
stos
jmp
cmc
stos
sbb
ljmp
mov
pusha
sahf
clc
adc
push
out
fsubrl
xor
int3
push
adc
push
ds
add
lock
addl
popf
ret
ss
pop
add
xchg
jb
cmpsl
xor
movsb
adc
js
into
out
inc
push
jbe
mov
adc
sub
sti
ljmp
aas
xchg
inc
repnz
leave
and
int
xor
mov
push
imul
sub
mov
mov
mov
fistpll
je
adc
mov
adc
pop
outsl
lahf
sub
ret
test
aas
add
push
stos
mov
cmp
xchg
inc
jae
lret
xchg
dec
ss
loope
sbb
loop
xchg
xor
jl
add
addr16
jb
xchg
arpl
scas
adc
stos
sbb
pushf
push
daa
bound
daa
std
das
test
sbb
jbe,pn
inc
mov
or
or
lret
xor
in
ficompl
add
dec
call
xor
push
aam
inc
test
xor
test
sub
add
sbb
daa
popa
cmpsl
ret
es
mov
adc
add
lods
scas
inc
xchg
mov
das
mov
out
cmc
aaa
and
push
or
loopne
mov
add
pusha
cltd
xor
cwtl
sti
jp
addr16
mov
movsb
xchg
push
aad
pop
pusha
aas
inc
cmpsl
jmp
lods
out
pop
mov
add
push
stos
stos
test
out
loope
pop
lret
xchg
add
mov
rorb
push
arpl
mov
sti
subb
push
jecxz
nop
add
mov
inc
push
or
and
test
push
ja
cmpsl
int3
int
pusha
jg
scas
ljmp
out
mov
mov
xor
or
stos
pop
sar
fsubrp
imul
loopne
mov
leave
movswl
mov
test
mov
inc
fcoms
loop
or
jecxz
aaa
pop
out
adc
shr
push
push
inc
jae
xor
push
adc
mov
int
pusha
jnp
mov
clc
addr16
test
int3
xchg
add
es
ljmp
sahf
cmpsl
jno
sbb
dec
mov
jb
and
and
out
pusha
lahf
xor
out
je
loopne
icebp
dec
jl
shl
stos
mov
sub
icebp
imul
stos
xor
rorb
cmp
mov
add
mov
sbb
daa
ljmp
dec
fmuls
dec
mov
mov
mov
aaa
shlb
lret
and
data16
adc
xchg
jp
mov
sub
rclb
xchg
mov
xchg
pushf
popf
les
fistl
pop
mov
popa
jmp
icebp
fwait
adc
jecxz
xor
sbb
add
test
fidivs
in
cs
test
inc
cltd
mov
aad
pop
cli
aas
aam
aas
mov
jmp
stc
jecxz
aaa
jle
push
adc
shll
int
pusha
addr16
ljmp
mov
and
mov
pop
mov
scas
js
add
js
fcmovne
jle
popa
add
add
ljmp
out
mov
stos
addps
sub
adc
fsubp
imul
mov
cmp
jae
xor
mov
push
xchg
popa
pop
mov
mov
rclb
lret
mov
add
lahf
ret
lea
or
and
sub
out
fwait
xor
pusha
or
into
mov
mov
add
xor
test
xchg
adc
sub
xor
dec
sub
sub
fisttpl
jne
jb
mov
sbb
sub
inc
scas
and
sti
cwtl
sub
jg
mov
jmp
lods
imul
mov
repz
xchg
cmp
mov
cmc
shll
rorl
xchg
fs
shrl
popf
xchg
lock
lret
push
xor
add
hlt
xor
out
mov
mov
mov
and
xchg
mov
sbb
test
cmpsl
sti
mov
in
dec
mov
sub
out
mov
or
sbb
hlt
pop
rcl
hlt
test
mov
cli
or
jb
adc
fisttpl
cli
sbb
sbb
mov
pop
loop
dec
mov
mov
cmpsb
insl
gs
rorl
loope
dec
add
cmpsl
or
aas
std
ljmp
cmp
sti
subl
and
icebp
fsubrp
inc
or
pop
pop
subb
shll
mov
or
push
mov
mov
mov
xor
arpl
fs
jno
mov
add
arpl
inc
add
add
mov
xchg
ret
repz
lods
inc
cmpsb
in
xchg
ret
fistpl
or
pop
stc
add
jbe
fldln2
add
pushw
and
insb
push
adc
jno
imul
or
repnz
cmpsb
adc
dec
imul
loop
test
nop
scas
aas
pop
jp
xor
mul
cli
wbinvd
dec
pop
push
mov
mov
mov
stos
fldl
xchg
add
mov
add
cmp
out
rcrb
mov
dec
mov
add
inc
jo
mov
inc
int3
mov
xchg
repnz
pusha
inc
xor
andl
or
test
xchg
mov
push
shrl
add
add
jbe
mov
jne
pop
gs
arpl
jns
fs
out
xchg
in
xchg
xor
out
adc
sbb
cmp
or
enter
sub
rcll
inc
push
pop
jo
mov
push
int
xchg
lret
inc
pusha
and
imul
ss
shl
sar
add
ret
jno
and
mov
cmp
fnstenv
test
push
push
adc
and
arpl
scas
movntps
bound
jno
mov
cmp
push
mov
scas
sbb
adc
dec
inc
jnp
add
cli
mov
ljmp
add
ss
bound
fistpl
push
jle
cmpsb
cli
add
adc
lea
mov
mov
cwtl
cmp
sub
repz
ljmp
out
cs
pop
scas
pop
and
sbb
cmp
and
xchg
daa
mov
jb
and
shrb
and
mov
adc
mov
daa
imul
lods
insb
int
scas
cli
and
gs
jmp
mov
add
mov
sbb
or
shlb
and
and
stc
pop
repz
push
sbb
or
aaa
icebp
cmpsb
enter
or
loop
mov
scas
pop
bound
aas
xor
bt
lret
mov
cmp
mov
or
int
ljmp
cmp
icebp
test
push
out
rcll
jg
inc
lock
frstor
je
test
mov
adc
inc
and
inc
cs
push
ljmp
aam
mov
in
sub
lea
mov
cs
outsl
push
faddl
jge
std
out
fstpl
ret
sbb
sub
jae
mov
inc
movsl
jp
pushf
inc
popa
push
dec
ret
cld
add
push
inc
out
add
mov
mov
nop
cld
and
fwait
pop
adc
inc
hlt
adc
cltd
jmp
adc
fbld
int3
push
jle
xchg
mov
ja
push
cmc
pusha
call
mulps
push
ljmp
data16
jecxz
sbb
int
aaa
test
enter
push
mov
add
out
pop
inc
inc
and
ret
jmp
inc
pop
cwtl
les
imul
ljmp
mov
push
push
push
js
enter
mov
cmp
mov
cmp
sbb
fwait
sti
pop
test
or
lods
cli
and
into
stc
cmp
add
and
cs
cli
and
int3
fdivl
outsl
sbb
out
add
push
test
cmp
sbb
lea
cmc
ljmp
sub
test
mov
int
xor
icebp
mov
pop
es
sbb
add
inc
xor
stos
jbe
sub
mov
and
mov
inc
and
cmpsl
mov
gs
mov
insb
xchg
push
fcomps
fcoms
inc
add
test
dec
addb
sub
and
xor
xlat
cmpsb
call
adc
mov
mov
rolb
ret
dec
add
adc
inc
add
add
dec
and
sbb
push
cmc
add
cmp
push
adc
dec
sbb
ds
and
je
or
sub
shll
loopne
daa
in
and
shlb
in
sarl
add
and
mov
sbb
jmp
ret
sub
andb
jo
arpl
fadd
ds
pusha
int
pop
leave
cs
push
jmp
scas
xor
mov
push
xor
mov
sub
xchg
push
pushf
inc
xor
sti
bound
test
jg
ja
lret
loop
fstpt
push
lcall
jecxz
call
movb
push
dec
fdivrs
cs
inc
xchg
mov
mov
dec
fwait
push
stc
inc
mov
lret
jg
mov
cmc
fmuls
jo
popf
cmp
outsl
xchg
repnz
inc
movsb
test
and
gs
les
jbe
stos
lock
sbb
add
loop
sub
mull
fnsave
and
pop
es
shlb
push
lods
sti
shlb
and
sti
push
jb
in
fisubs
pop
or
jp
mov
ljmp
and
sbb
rcr
in
mov
adc
cltd
jmp
add
add
push
movsb
or
mov
out
loopne
or
mov
xor
ror
sarl
enter
xor
pusha
mov
imul
arpl
pushf
lods
arpl
push
movsb
mov
sub
fisttpll
inc
inc
adc
shrl
and
imul
stc
add
test
pop
push
pop
repz
or
xchg
mov
or
lahf
sahf
stos
or
xor
mov
mov
fs
push
rcrl
jle
mov
sbbl
cmp
lods
rcll
fldenv
imul
stc
pusha
scas
js
mov
call
jg
imul
leave
mov
out
xchg
test
and
add
lods
ret
jecxz
aad
hlt
mov
jmp
rorl
cltd
fdivrl
or
rclb
mov
shlb
test
push
jno
data16
stos
lahf
jecxz
nop
push
aaa
inc
fisttps
shlb
xorl
mov
add
popa
fs
iret
pop
test
sti
aaa
xchg
push
xchg
sbb
sub
xchg
std
repnz
pusha
dec
and
mov
or
pop
mov
inc
cmp
mov
mov
fwait
push
adc
sub
and
lds
push
in
xchg
pop
sub
icebp
add
test
fs
xchg
clc
mov
jp
jae
dec
push
pop
xchg
push
mov
ljmp
cs
inc
nop
push
imul
cld
popa
push
mov
aas
jne
add
shl
dec
pop
jbe
inc
mov
insl
shlb
jo
inc
ret
cmp
lds
iret
add
mov
sbb
push
fisubrs
add
mov
sbb
xor
add
add
adc
aad
and
loope
fsub
cmp
mov
frstor
jae
xchg
in
ljmp
into
cmpsl
sbb
sbb
inc
mov
sub
jmp
stos
fs
arpl
inc
and
popf
pop
push
aad
push
aas
jne
cmc
mov
push
pusha
jb
xchg
arpl
mov
mov
or
mov
sbb
arpl
inc
sub
mov
cmp
add
pop
je
or
sub
ja
mov
ficomps
jae
xchg
mov
pop
rcl
inc
xchg
icebp
sub
sub
rorb
sub
ds
rcll
out
push
dec
dec
inc
push
xor
out
rclb
pop
fcomip
test
xchg
ds
and
sti
push
in
jnp
rcrb
sub
mov
jo
add
js
mov
xor
inc
dec
fnsave
cltd
mov
pop
dec
cmp
ret
ljmp
push
mov
fidivl
pop
and
push
dec
inc
mov
xchg
push
rcr
and
mov
lods
cmc
arpl
out
lods
jl
lock
cmp
test
mov
adc
jge
push
call
ja
aad
das
pop
fnsave
mov
mov
lret
or
dec
roll
mov
add
adc
add
ret
xor
push
mov
sbb
mov
bound
in
mov
shlb
mov
and
cmc
subl
and
shrl
jo
jg
aad
cld
jecxz
jge
xchg
aad
cmc
dec
xchg
ucomiss
test
call
sub
and
ret
mov
add
movsl
pop
adc
dec
mov
sbbl
dec
mov
lcall
dec
mull
cmp
pop
hlt
dec
mov
mov
ret
repz
shll
arpl
push
popa
sub
scas
bnd
add
push
xor
mov
mov
adc
jno
add
dec
stos
mov
jp
int
inc
xchg
out
sub
adc
dec
inc
mov
out
out
int
ljmp
xchg
cs
arpl
loop
das
and
and
shlb
hlt
rcrb
mov
jecxz
insb
add
cmpsl
pop
mov
add
pushf
and
pop
sbb
push
xor
icebp
lods
lret
xor
icebp
std
aad
dec
xor
aam
jge
lds
push
and
pop
aas
push
xor
push
jns
in
test
dec
insb
mov
icebp
xchg
mov
pop
aaa
mov
push
ljmp
jnp
cmpxchg
cmp
dec
test
mov
sbb
push
lret
mov
mov
in
xor
mov
gs
push
subl
popf
lds
push
dec
repz
cltd
add
icebp
scas
test
adc
and
adc
inc
pop
xlat
fstsw
pusha
mov
cmp
pop
lea
jp
fmuls
loopne
pop
pop
inc
sub
mov
mov
push
inc
push
mov
or
fadds
dec
adc
fwait
push
ja
mov
jae
scas
mov
add
mov
insl
loop
mov
push
daa
mov
fwait
lret
nop
adc
pop
rcr
push
adc
out
insl
xor
sub
lds
aam
push
or
push
mov
dec
adc
pop
js
arpl
repnz
daa
insb
xor
sub
adc
lret
popa
jb
cmp
mov
lock
sbb
daa
sbb
jne
sbb
mov
mov
cltd
into
mov
mov
mov
mov
cmp
mov
cmc
aas
add
mov
adc
mov
mov
xlat
popf
push
add
sbb
ffreep
sarb
test
jg
mov
or
stos
ds
fistpl
lret
xchg
flds
in
das
test
add
mov
mov
push
shrl
test
mov
jb
or
movl
movl
adc
and
shlb
add
pop
xor
subb
repz
or
enter
leave
xchg
adcb
pushf
dec
mov
and
mov
in
dec
pop
arpl
jnp
jl
add
call
xor
push
and
add
sti
lods
cmp
mov
ror
pop
lret
mov
rorl
ja
jge
mov
outsl
ret
fstps
pop
bnd
xchg
pxor
push
jb
in
sbb
out
push
lcall
sub
cmp
sbb
dec
es
out
in
jle
lret
test
mov
xchg
in
sub
add
cvtps2pd
fdivp
jecxz
rclb
mov
xchg
mov
and
cmp
cmp
dec
insl
lret
push
mov
add
cmp
andb
sbb
sahf
mov
dec
push
xor
inc
pop
or
popa
into
mov
popf
out
xchg
push
ror
dec
jp
mov
sbb
mov
jg
push
sahf
bound
hlt
and
cmp
icebp
das
dec
add
loop
jns
lcall
pop
xor
test
arpl
push
cs
addb
adc
cmp
mov
jle
cmpsl
lret
shlb
ds
pop
cmp
lret
dec
cli
ja
dec
xchg
repz
mov
inc
lock
inc
fsubl
hlt
movsb
adc
xor
mov
outsb
ds
mov
out
cli
mov
sbbl
adc
fstpl
movsb
lret
mov
mov
mov
add
sub
and
mov
xor
xor
ja
mov
sti
lcall
clc
inc
sbb
aas
out
out
jo
mov
or
mov
mov
imul
jo
pop
dec
ret
lds
pop
sub
sbb
push
mov
jecxz
sarb
dec
push
mov
daa
loopne
fcoml
pushw
repz
loop
mov
cmp
fbld
repz
jmp
and
fstpl
push
sti
add
xchg
negb
fldcw
push
push
stos
jne
aad
mov
inc
cmp
mov
pop
popf
leave
call
aas
or
mov
and
aad
mov
xor
mov
sub
enter
cmp
sbb
sbb
out
pop
mov
ror
testl
mov
stos
xchg
aaa
cltd
ret
lcall
mov
pop
push
mov
mov
and
addr16
adc
and
mov
xor
lods
jle
xchg
lock
sub
stos
das
les
jb
imull
pavgb
push
or
mov
scas
ret
cmp
and
insl
mov
out
jg
stos
faddl
out
or
add
sub
push
and
popf
aam
or
aaa
daa
stc
add
data16
movb
xchg
loopne
add
inc
ficomps
jp
lcall
test
sbb
xchg
jno
and
push
ret
insl
cmpl
arpl
arpl
pop
ficoml
ror
rcll
stc
push
insb
aaa
push
jle
jns
pop
out
icebp
sbb
lret
frstor
sub
push
xchg
cld
adcl
sbb
jno
and
pop
ss
add
dec
mov
dec
cmp
and
mov
lds
xor
cmp
loopne
ret
sbb
ljmp
mov
ret
jns
add
lods
ljmp
mov
popa
popa
aam
loopne
mov
adcb
rcrl
mov
int3
call
pop
insb
mov
lds
addb
and
les
sti
pop
call
dec
out
cmp
mov
sub
xor
sarl
cmp
aas
push
xchg
test
and
cmp
inc
lods
pushf
sbb
pop
jecxz
cmp
test
jp
pushf
adc
adc
cli
and
mov
stc
and
into
pop
imul
mov
lret
jae
cmp
or
mov
xor
nop
mov
xchg
mov
lahf
gs
lds
decl
mov
stos
hlt
incl
inc
xor
out
adc
add
push
stos
icebp
mov
outsl
xor
in
xor
jl
sbb
mov
jecxz
cli
mov
and
xchg
sbb
lods
xchg
inc
and
dec
out
lret
mov
aad
into
mov
scas
dec
and
stc
sbb
add
cmp
add
sti
mov
dec
jns
mov
push
rol
popa
jb
mov
cmp
data16
shrl
xor
test
mov
pop
fdivr
xlat
cmp
sub
mov
jno
bnd
cmpl
lret
outsl
sbb
and
xor
mov
mov
movsl
mov
push
xorl
push
inc
and
adc
and
movsl
add
lcall
push
ret
jecxz
inc
push
dec
out
js
icebp
dec
jb
jecxz
adc
dec
clc
insl
mov
push
xor
test
or
jmp
sub
je
jne
les
lcall
inc
lea
divl
and
mov
xor
incl
add
jle
lret
adcb
and
push
jmp
mov
push
jecxz
loopne
cs
roll
out
andb
or
test
sbb
dec
test
mov
mov
scas
into
pusha
jbe
push
stos
stc
mov
imul
mov
and
mov
int3
shll
movsb
gs
dec
mov
or
dec
xchg
add
add
inc
lahf
mov
sbb
das
xchg
adcb
test
lcall
and
in
mov
cs
mov
test
aaa
adc
mov
cmp
les
sbb
shll
je
ret
pop
out
adc
mov
jg
inc
enter
loop
aas
jmp
add
scas
loope
out
je
adc
and
and
lea
arpl
out
cmc
in
dec
add
xacquire
roll
xor
cmpsb
das
clc
mov
and
shlb
dec
inc
xchg
push
rcr
jg
xor
xchg
cmp
xchg
xor
das
stc
adc
pop
gs
jp
js
cmpsb
idivb
aas
and
imul
test
bound
jmp
stos
cmp
loope
sub
aaa
loopne
inc
enter
jnp
sub
cmpsb
push
mov
rclb
fisttpll
movsb
dec
mov
inc
ss
lahf
lods
jecxz
or
push
aas
dec
xchg
push
mov
fbstp
fidivrs
dec
std
out
leave
push
insb
gs
jl
inc
aad
jmp
xorl
scas
popf
scas
frstor
mov
scas
js
pop
or
xor
cli
push
sbbl
test
bound
mov
push
loop
jbe
nop
daa
icebp
in
add
outsl
add
scas
adc
mov
loope
dec
stos
addl
dec
lods
adc
xchg
jg
rolb
or
xor
sbb
sub
or
icebp
scas
jg
pop
inc
xor
sub
push
xor
test
dec
xchg
leave
jecxz
add
pop
roll
adc
xor
gs
loope
call
mov
add
mov
dec
call
jge
ret
mov
sti
push
out
cmpsb
inc
lock
inc
adcb
cld
les
adc
dec
jnp
test
lret
subb
stc
cltd
imul
out
xchg
icebp
in
pop
into
sahf
jp
cltd
mov
dec
jecxz
repnz
int3
iret
iret
rcrb
xor
jge
loopne
lret
outsb
push
cmp
xchg
pop
scas
push
stos
push
jge
mov
ds
scas
ds
jno
test
lret
icebp
sbb
es
mov
adc
je
addr16
scas
mov
test
loope
imul
push
cmp
lret
sub
xorb
fiadds
mov
jno
and
push
jmp
lret
mov
repnz
and
ficomps
adc
lock
ret
je
scas
mov
sub
and
scas
scas
adc
stos
jno
cld
push
and
cmp
xchg
icebp
mov
dec
lret
and
lcall
mov
xor
jne
pop
push
test
add
xchg
and
push
int3
lods
jmp
cmp
daa
xchg
test
loope
and
andl
aaa
out
and
push
jb
in
xchg
pop
sarb
push
sub
inc
imul
mov
push
sbb
aaa
jo,pn
cwtl
int
adc
cmc
pop
test
ret
jo
mov
aam
push
xchg
pop
mov
aas
jl
loope
mov
std
jl
pop
imul
in
ja
bnd
and
movsl
push
rcll
aas
outsb
and
jns
pop
imul
cmovl
mov
fld
nop
xchg
test
clc
cli
and
xor
out
push
or
inc
push
jns
xchg
movsl
daa
lods
or
mov
stos
dec
jo
and
jnp
mov
loope
aas
es
mov
lea
mov
push
dec
mov
push
rcll
sub
pop
xor
and
lock
addr16
shll
push
pop
add
rclb
and
adc
shlb
loope
lahf
sbb
adc
repnz
lods
adc
add
or
shll
aad
xor
mov
or
call
insl
xor
movl
mov
ljmp
and
push
daa
fsubs
push
iret
lods
jmp
int
bound
and
xor
mov
std
rcll
dec
fnsave
dec
push
sbb
mov
jo
aaa
pop
mov
add
das
es
lds
adc
and
lcall
jb
negl
xor
gs
cwtl
popf
sbb
ret
cmpsb
push
ss
test
jg
sbb
cwtl
ret
loope
aas
push
fldt
dec
ret
jg
xchg
adcl
scas
xchg
cmpsb
adc
dec
lret
add
mov
xchg
mov
push
out
ds
push
or
ret
addb
cs
pushf
fisubs
mov
adc
bound
xchg
out
in
cld
fs
xchg
cltd
stc
mov
push
jecxz
sbb
idivb
add
sbb
mov
mov
xor
imull
ret
jl
and
insl
xchg
cmpl
xchg
aas
enter
stc
scas
and
add
insl
push
sub
hlt
push
in
loopne
and
imul
lea
andl
subb
jecxz
orb
mov
cli
stos
add
mov
std
fiadds
or
rcll
lahf
bound
ds
ret
ja
push
icebp
push
lret
aas
pop
movsb
mov
enter
push
imul
jg
fbld
push
lahf
adc
xchg
dec
mov
xlat
sub
push
sbb
xor
testl
in
and
into
pusha
jge
mov
pop
dec
mov
adc
jbe
divb
out
push
fs
jmp
cmpsl
out
xor
push
cltd
and
leave
push
out
lahf
xchg
mov
or
push
xchg
lret
xlat
fcmovb
mov
imul
fisubs
mov
pop
insl
jg
test
ret
aad
mov
pop
mov
xchg
in
in
add
stos
dec
lret
loopne
mov
imul
mov
out
mov
pop
bt
mov
xchg
int
ds
adcb
rol
ret
xchg
add
bound
sbb
aam
test
loope
push
or
jl
xchg
jmp
repz
push
sbb
xor
dec
clc
mov
add
outsl
fs
sbb
mov
jmp
shll
push
icebp
jl
xchg
cwtl
pop
cli
xlat
mov
mov
pop
js
xchg
or
push
fs
pop
or
out
ljmp
in
push
xchg
jmp
pop
mov
push
xchg
aas
pushf
fwait
bsr
js
xchg
fsubs
pushf
nop/reserved
ret
popa
add
xchg
inc
fwait
jae
push
fisubrs
sbb
inc
jns
rcr
in
out
pop
out
gs
hlt
ja
fistpll
jmp
sbb
mov
aas
inc
cmpsl
xchg
mov
inc
dec
lods
call
or
fsubs
imul
mov
subb
jae
xor
imul
addr16
daa
mov
pop
insb
aas
nop
cmpsl
jns
bound
dec
loope
flds
add
imul
out
adc
roll
pushf
xchg
xor
pop
cmpsb
mov
addr16
xchg
xchg
pop
pusha
mov
icebp
stos
fbstp
ds
mov
mov
add
xchg
fwait
or
jecxz
aaa
cld
out
adc
rcl
push
stos
insb
fisubrs
loopne
pop
xchg
popf
aad
pop
sbb
mov
std
mov
sti
dec
jp
out
mov
add
xchg
jbe
push
mov
xchg
rcrb
shrl
lock
mov
add
inc
int
pusha
daa
xor
sub
fmuls
mov
ret
mov
rcrl
stos
loope
sub
ret
mov
loopne
mov
add
mov
xor
jns
stos
fdivs
shl
mov
mov
add
xchg
rorl
sbb
popf
pop
testl
daa
pop
xchg
adc
test
lock
mov
lahf
dec
lret
pop
adc
push
push
fadds
dec
mov
testb
aad
loop
imul
pop
daa
fistl
inc
ljmp
out
mov
mov
add
xchg
aaa
adc
imul
add
rclb
mov
loopne
mov
add
int
pusha
add
mov
add
pushf
out
mov
mov
add
xchg
loopne
jb
lea
shr
push
js,pt
mov
mov
imul
add
lods
daa
aas
xchg
adc
and
aas
shll
dec
fsubr
dec
pop
jae
ficoml
mov
jecxz
aaa
xor
push
adc
roll
and
addl
mov
imul
addr16
aam
out
pop
idivb
pop
cmpsl
mov
bound
call
pop
push
imul
lcall
and
rorb
xor
sbb
lock
nop
loopne
mov
pop
cwtl
aas
pop
cmpsl
jno
sbb
dec
sbb
imul
fcom
data16
aaa
das
out
adc
rcll
dec
xor
mov
loopne
mov
add
mov
xor
je
push
out
mov
mov
add
xchg
gs
jecxz
aaa
popa
out
adc
shll
jo
dec
mov
loopne
mov
add
mov
int
pusha
das
xor
ljmp
out
mov
mov
add
xchg
sahf
or
jecxz
aaa
mov
lcall
mov
xor
fwait
mov
imul
addr16
sbb
movsb
xchg
sub
clc
pop
and
enter
sub
test
mov
push
jge
sub
mov
push
mov
les
xor
mov
imul
addr16
ss
adc
insb
aas
repnz
cltd
mov
ss
sub
pop
push
imul
sub
lcall
test
dec
mov
jne
out
xchg
mov
loopne
mov
add
int
pusha
mov
sbb
out
mov
mov
add
lret
aaa
xchg
out
adc
shrl
mov
dec
pop
cmc
mov
imul
mov
mov
daa
cmc
xchg
fwait
pusha
ja
jns
in
out
lea
fs
mov
mov
add
lret
jecxz
aaa
jmp
rorl
pop
xor
pop
outsb
sahf
int3
mov
add
cs
pusha
mov
pop
ljmp
out
mov
mov
add
out
jecxz
aaa
addr16
adc
rcll
sbb
pop
aam
lea
add
addr16
daa
pusha
xchg
and
xor
aas
sbb
dec
fucomi
mov
jb
aas
push
mov
or
jecxz
aaa
out
adc
shl
push
jno
jae
xor
pop
xchg
mov
imul
pop
ret
mov
add
dec
test
xor
mov
mov
stos
ds
out
mov
mov
add
jecxz
or
jecxz
aaa
cmp
clc
adc
shll
xor
xor
imul
arpl
cli
daa
setb
ljmp
out
mov
mov
add
xchg
or
jecxz
aaa
aad
ds
rcrl
dec
jae
xor
pop
pusha
mov
imul
addr16
loopne
rclb
test
adc
fwait
mov
int
lock
repz
pushf
fdivrs
les
adcb
push
roll
xchg
dec
fdivrp
imul
fstpt
negb
aas
push
cmpsl
dec
mov
out
inc
call
mov
mov
mov
xchg
addb
sar
stos
or
in
cmp
mov
loopne
mov
add
pusha
sub
shrb
outsl
mov
mov
add
xchg
or
jecxz
aaa
sbb
je
mov
mov
insb
xor
pop
inc
mov
addr16
daa
notl
cmpb
cmpsl
bound
in
sub
xchg
jae
or
lahf
cmp
xchg
inc
mov
or
in
data16
and
push
repz
in
aad
push
out
imul
push
pop
rorl
out
call
add
dec
jo
fildll
and
sub
outsb
sbb
test
xchg
ret
xchg
scas
mov
mov
scas
sub
lods
dec
and
fs
jle
inc
xlat
jp
stc
jl
xlat
fstl
and
mov
lods
lods
cmp
adc
add
cli
fstpl
jae
test
mov
in
dec
and
jne
pusha
shlb
icebp
cld
pop
fimull
mov
and
into
cwtl
pop
mov
adc
pop
cmpsl
in
ret
cltd
or
jnp
data16
fisttpl
jmp
cmp
push
div
icebp
add
lods
sbb
jle
inc
movsb
sti
jp
xchg
sbb
adc
scas
dec
inc
and
push
sub
inc
pop
fnstcw
incl
adc
les
xor
popa
out
test
std
ja
mov
cli
pop
xlat
cmp
push
jl
sub
push
jo
or
pop
scas
and
data16
or
push
cli
mov
in
pop
jge
pop
test
orb
sub
sbb
fmull
stos
push
enter
push
push
cli
ja
push
iret
out
inc
stos
cld
push
dec
xchg
jae
ret
sbb
sub
out
je
xor
repnz
sbb
lds
jno
call
xor
push
pop
sbb
sbb
xchg
fsubl
shll
mov
push
mov
xchg
fists
ficoms
int3
push
add
ret
fwait
adc
push
and
jecxz
mov
and
inc
icebp
xchg
adcb
and
fnstenv
out
iret
movsl
subl
roll
fcmovnb
das
loopne
test
imul
icebp
test
jp
mov
and
cmp
pushf
cmpsb
icebp
mov
loop
sbb
dec
and
and
mov
cmp
sbb
ret
sti
pop
jp
cmp
xchg
ds
mov
sub
inc
repz
xor
inc
je
add
fadd
cmpsl
aaa
xor
adc
fdivrp
and
cwtl
cmp
add
arpl
out
or
jmp
movsl
mov
sbb
inc
xor
cmp
loopne
pop
cmp
adc
dec
push
jne
into
cmp
andb
adc
adc
mov
cli
leave
repnz
and
daa
sbb
scas
pop
jo
xchg
xchg
pop
xchg
jg
sub
adc
bswap
mov
mov
fwait
jl
pop
cli
test
inc
icebp
aad
shrl
fwait
sbb
cmp
loopne
adc
jp
dec
and
test
ds
add
xor
mov
or
insl
mov
adc
pop
sbb
loop
iret
imul
pop
mov
cmpsl
add
xor
or
add
iret
dec
in
stc
pop
cmpsl
test
inc
pop
dec
sub
fistpl
add
adc
les
lret
lahf
fists
mov
xchg
and
and
addl
aam
out
inc
int3
mov
push
pop
adc
mov
fildll
scas
popa
mov
cld
lea
scas
dec
outsw
fwait
stos
or
cmp
fwait
mov
inc
mov
cmc
and
and
aam
inc
icebp
ds
push
jne
xlat
lret
inc
icebp
ret
sub
xor
adc
mov
fnstsw
stos
adc
xchg
nop
ljmp
mov
xor
pop
jp
jbe
mov
loop
in
mov
aam
cltd
inc
aam
leave
dec
aas
scas
push
fdivrp
int3
dec
pop
mov
cmp
out
sbb
testb
add
shl
pop
ljmp
xchg
stc
insl
inc
inc
add
sti
call
sbb
adc
fisubrs
cmp
stos
cmp
loop
jg
push
movsb
aad
push
mov
inc
push
inc
and
xor
imul
daa
sbb
pop
sbb
xlat
cmpsl
lock
push
dec
call
into
push
sbb
xchg
addr16
xchg
lcall
data16
jle
aas
gs
dec
shlb
mov
loopne
mov
add
mov
xchg
xor
inc
fldcw
pop
mov
mov
add
xchg
xorl
out
adc
rorl
jl
int3
pop
mov
pop
js
add
pusha
out
xor
leave
imul
jmp
loope
inc
out
adc
shrl
cmp
jno
imul
ja
mov
add
mov
int
pusha
insb
xor
xchg
xchg
stos
sti
xor
out
mov
mov
add
cmpsb
jecxz
aaa
jns
pop
adc
rcrl
repz
imul
addr16
loop
xchg
scas
ljmp
out
mov
mov
add
xchg
or
jecxz
aaa
add
rcll
mov
mov
shrl
daa
movsb
xchg
aad
pop
mov
mov
mov
shr
pop
clc
imul
scas
fsubrs
lret
adc
shr
push
push
js
sub
mov
loopne
mov
add
mov
xor
jmp
dec
pop
movsl
imul
dec
fcomps
mov
or
rcll
stos
lahf
rcl
fimuls
imul
loopne
mov
pop
std
aas
andl
pop
mov
mov
add
push
jecxz
aaa
dec
out
adc
sar
push
pop
jae,pt
xor
imul
xchg
addr16
daa
xchg
xchg
data16
pop
rcll
test
imul
fmuls
mov
lcall
jecxz
mov
or
mov
stos
dec
shlb
fdivrp
imul
in
jmp
stos
add
pusha
insb
xor
push
mov
out
mov
mov
add
dec
jecxz
aaa
scas
out
adc
shll
push
dec
inc
fisubrs
loopne
mov
pop
inc
aas
out
xchg
mov
icebp
dec
pop
call
in
push
std
fcom
addr16
lcall
xor
xor
mov
loopne
mov
add
mov
xor
mov
sbb
mov
cmpsl
addr16
lcall
sbb
cli
push
stos
inc
rolb
mov
loopne
mov
add
mov
or
xor
ljmp
out
mov
mov
add
mov
or
jecxz
aaa
jmp
cmp
shl
shrb
fisubs
loopne
mov
add
mov
xor
mov
stos
jge
sub
xorb
xchg
or
jecxz
aaa
dec
out
adc
shll
xchg
xor
in
add
add
shlb
arpl
jns
cmp
inc
xor
jg
xor
pop
mov
shrl
stos
mov
imul
push
sti
js
add
mov
xor
call
fwait
push
mov
aam
sbb
lcall
icebp
adcb
pop
rclb
mov
loopne
mov
add
mov
int
pusha
dec
xor
ljmp
out
mov
mov
add
jecxz
aaa
inc
out
adc
shll
out
jae
xor
pop
mov
add
and
xchg
and
pop
call
mov
test
pop
fisubrs
push
call
mov
scas
mov
push
andb
xor
loope
pop
dec
mov
imul
xor
and
pop
xchg
aas
sahf
cmpsl
dec
mov
sbb
call
push
addr16
jbe
sub
lods
push
adc
xor
pop
fmull
cwtl
addr16
daa
into
xchg
test
or
jae
jb
jae
fbstp
into
sub
add
stos
sarl
fisubrs
xchg
or
daa
xchg
loopne
jp
stos
loopne
dec
out
mov
mov
add
xor
call
imul
loopne
mov
add
fmul
cmp
xor
dec
fwait
stos
add
data16
mov
mov
add
enter
jecxz
aaa
das
out
adc
xchg
iret
imul
loopne
mov
add
mov
push
pusha
mov
sub
push
jne
mov
and
out
mov
xchg
or
jecxz
aaa
clc
out
adc
rcrl
dec
jbe
mov
mov
push
add
addr16
mov
xor
fs
out
mov
mov
add
dec
or
jecxz
aaa
addr16
adc
shll
xorl
aas
imul
push
addr16
dec
aad
pop
cmpsl
aas
movsb
cmpsl
scas
mov
sbb
call
lds
fsubs
or
aaa
imul
adc
shll
pop
jae
xor
pop
in
push
imul
daa
ficoms
and
cmpsl
cs
jmp
mov
add
xchg
inc
or
fiaddl
or
lods
adc
loop
mov
or
daa
clc
adc
and
mov
lds
out
enter
pop
jnp
cmpsb
imul
jmp
sub
jbe
div
add
jnp
es
out
jb
inc
mov
mov
push
push
pushf
ljmp
mov
mov
xchg
pop
cmp
nop
xchg
jle
hlt
nop
mov
mov
pushf
dec
or
scas
add
push
les
repz
aas
sarb
sti
pop
jbe
push
inc
mov
pop
dec
inc
jl
jmp
mov
adc
shrl
xor
sub
into
pusha
sub
ret
mov
pop
jne
aad
mov
or
push
inc
inc
sub
push
inc
adc
xchg
mov
outsl
jmp
push
repz
xor
xorb
loopne
mov
pop
adc
aas
cmpsl
lret
mov
out
imul
testl
mov
shll
push
mov
xor
insb
aad
pop
lods
aas
sub
dec
jl
add
and
push
jp
pop
addr16
push
mov
jae
xor
pop
pop
mov
push
loopne
xor
xor
jb
ljmp
orl
pop
aaa
and
mov
pop
push
or
pop
and
loopne
or
mov
xor
sbb
rcrb
dec
xor
shrb
add
clc
rcrb
push
rolb
enter
filds
sbb
inc
fcmovnbe
std
lods
inc
mov
popf
xchg
inc
mov
mov
repz
fdivrl
jecxz
xchg
popa
cmp
fmul
out
sti
xchg
cmp
and
xchg
xor
fcoms
repz
xchg
sub
test
fisttps
ja
jmp
cmp
gs
and
xchg
cmpb
pushf
mov
inc
mov
sarl
aam
or
mov
push
gs
push
mov
es
inc
pop
sbb
sahf
cs
popa
bound
mov
dec
pop
jo
fwait
iret
add
fwait
pop
and
sti
sub
lret
movsl
add
aas
mov
in
fucomi
leave
sub
bound
xor
popf
stos
out
ret
leave
lods
mov
clc
movsl
or
sbb
rcl
pushf
movsb
and
je
pop
fwait
jmp
fidivrs
cmp
stos
pop
int
jb
sbb
subb
out
icebp
call
lods
pop
dec
jge
mov
iret
adc
cmp
lcall
xchg
loop
test
xor
shlb
sti
xor
mov
add
roll
add
mov
aam
sub
hlt
ss
cmp
inc
shll
test
arpl
inc
xorb
aam
imul
mov
lea
stc
les
dec
stc
fisttps
dec
stc
xchg
dec
stc
mov
dec
stc
mov
inc
stc
mov
inc
stc
nop
lea
stc
xchg
lea
js
dec
rol
add
xor
outsl
mov
xor
das
pop
xor
jmp
inc
in
out
fcompl
out
in
or
mov
lcall
das
lcall
and
adc
ret
or
mov
lcall
push
lcall
adc
sbb
enter
push
lcall
adc
or
mov
lcall
testb
sub
add
ss
add
inc
loopne
add
push
imul
aam
imul
aam
imul
aam
imul
aam
imul
aam
imul
aam
imul
aam
imul
aam
imul
aam
imul
aam
imul
aam
imul
aam
imul
inc
ss
imul
inc
lret
ss
imul
inc
iret
outsl
aam
imul
inc
shll
jae
xor
inc
shll
jno
arpl
lcall
stos
lcall
scas
lcall
lods
lcall
mov
outsl
mov
lods
mov
mov
scas
mov
mov
out
mov
xor
xor
push
cmp
xor
jecxz
pushf
lds
inc
or
decb
insb
sub
lea
xchg
pushf
push
and
xchg
pushf
int
cmp
and
or
jle
lcall
out
mull
in
icebp
mov
ljmp
iret
add
cmp
stos
cs
nop
les
adc
arpl
not
popa
int
nop
mov
sub
sbb
nop
mov
stc
aad
std
cld
nop
mov
dec
outsb
sub
sbb
sub
xor
pop
xlat
fldcw
pop
in
sub
add
mov
popf
mov
mov
movsl
cmp
aas
jmp
push
out
and
push
in
rorb
or
sub
sbb
ss
fdivrs
or
jmp
loop,pt
aam
xor
cmp
jge
or
jmp
push
in
xor
sub
jge
or
jmp
push
fnstsw
or
mov
and
fwait
dec
or
lods
cltd
dec
or
push
lods
lahf
dec
push
jne
lods
pop
mov
adc
les
sbb
add
nop
add
sbb
sbb
sub
jne
lods
inc
lods
jne
lods
inc
mov
or
jne
lods
dec
lods
fmuls
jne
lods
dec
lods
fisttpll
jne
lods
xor
lods
xor
jne
lods
aaa
lods
test
jne
lods
cmp
lods
cmp
lods
cmp
jne
lods
aas
lods
lea
jne
lods
and
lods
and
lods
and
sbb
js
mov
sbb
mov
ror
sub
iret
xchg
sub
lds
adc
or
jmp
push
adc
enter
push
mov
popa
sbb
push
jae
jecxz
pop
add
fcmovnbe
cmp
inc
fildl
add
pop
fcmovnbe
cmp
cmc
mov
push
add
sub
push
das
aam
aam
and
add
popf
jecxz
pop
or
jle
pushf
arpl
push
or
mov
mov
jle
pushf
pop
and
jle
pushf
push
dec
or
mov
inc
push
popf
lock
insl
inc
data16
jecxz
testb
ds
lock
data16
jmp
decb
pushaw
adc
repz
xor
icebp
sbb
jmp
push
sub
cmp
stc
jmp
pop
and
or
jmp
push
daa
jge
or
jmp
push
and
int3
cmp
fcom
push
popl
je
and
scas
ficoml
cld
sbb
mov
and
push
inc
sbb
shl
or
lock
cmp
rclb
lcall
push
mov
and
mov
loope
add
lret
add
push
and
rolb
scas
and
cltd
rolb
mov
push
pop
aas
mov
sti
ds
or
icebp
jnp
pusha
imul
pop
adc
or
pop
push
pop
sbb
add
loop
pop
jmp
aaa
mov
pop
pop
ss
lea
mov
inc
pop
inc
mov
inc
pop
dec
mov
inc
pop
dec
lods
push
push
cwtl
jb
xor
shll
jl
shlb
or
jecxz
rcr
xor
dec
cld
push
sbb
mov
mov
aas
pop
fdivrs
and
loop
out
cmp
cmp
cwtl
cmp
and
jecxz
cmp
and
fidivrl
out
je
lods
sub
movsl
int
jne
lods
lods
mov
sub
stos
mov
ror
sub
test
fisubl
pop
sar
xor
insb
rorb
stc
dec
push
fsubrl
and
loop
dec
pop
je
add
loop
pop
or
rcl
test
add
cmpl
add
cld
mov
dec
iret
aam
adcb
sub
ss
sub
or
or
push
push
adc
clc
or
mov
cld
pop
mov
sbb
insb
les
sbb
push
mov
aaa
sbb
les
cld
pusha
and
push
bnd
or
jmp
push
lret
or
pop
push
push
pop
jge
or
xchg
add
mov
push
adcb
roll
sbb
adc
sbb
pop
rol
dec
sbb
sbb
lret
and
pop
rcrb
leave
and
pop
rcrb
pop
rcrb
int
inc
sbb
add
repz
rolb
icebp
and
data16
pusha
rolb
cmc
and
rorb
sti
and
insb
rorb
stc
and
testl
iret
xchg
es
test
and
mov
sub
mov
add
rcrb
xor
or
pop
and
jge
or
jmp
push
jmp
xchg
or
jmp
push
jmp
jmp
push
out
jge
or
jge
or
jmp
push
jecxz
cltd
or
jmp
push
loope
lahf
or
jmp
push
out
popf
or
jge
or
jmp
push
fstpt
or
jmp
push
fnstcw
imul
jge
or
jge
or
jmp
push
sarl
or
jmp
push
sarl
or
jmp
push
xlat
jge
or
jge
or
jmp
push
lret
jge
or
jmp
push
leave
jge
or
jmp
push
iret
jge
or
jge
or
jmp
push
ret
jge
or
jmp
push
les
or
and
jge
or
and
jge
or
es
mov
jmp
push
mov
jmp
push
mov
lret
jmp
push
mov
enter
cs
mov
into
or
xor
jge
or
xor
jge
or
ss
scas
jge
or
xor
lods
jge
or
push
mov
jmp
push
lret
orl
leave
ja
or
iret
jge
or
jge
or
jmp
push
ret
jge
or
jmp
push
sarl
pop
jmp
push
jge
or
jge
or
jae
mov
jmp
push
mov
jmp
push
mov
jmp
push
mov
jmp
push
mov
cltd
or
jns
mov
lahf
or
jg
mov
popf
or
jge
mov
jecxz
jae
add
jge
or
add
jge
or
pop
push
scas
jge
or
add
or
or
jge
or
or
jge
or
orps
jmp
push
movsl
jge
or
adc
jge
or
adc
jge
imul
push
mov
jbe
movsl
cli
or
nop
and
or
cmp
addr16
stos
repz
mov
jge
jb
lock
push
mov
inc
dec
sbb
xor
push
adc
rcrl
fwait
cs
fisubrl
pop
mov
mov
or
xor
jne
or
push
jnp
xlat
or
jge
or
jge
popa
mov
rcll
mov
cmp
loop
stos
sahf
inc
test
and
cld
adc
std
sbb
inc
pop
arpl
pop
adc
roll
and
pop
pop
mov
add
sbb
clc
xor
movsl
fmuls
shl
fadd
cmp
or
rolb
pop
inc
dec
mov
xlat
pop
xlat
imul
fcom
fnstenv
jecxz
lods
mov
loope
lcall
mov
inc
xor
or
dec
add
mov
add
push
ja
jmp
mov
mov
push
popa
push
mov
mov
dec
cmp
mov
push
fsubs
pop
mov
add
mov
sbb
fisttps
mov
addr16
dec
aad
pop
lods
aas
push
scas
dec
pop
addr16
dec
xchg
inc
aad
pop
mov
mov
ja
sbb
loopne
inc
imul
fsub
addr16
dec
lcall
fldt
mov
addr16
insl
call
gs
imul
addr16
pop
lcall
pop
orb
add
rcl
fimuls
mov
loopne
mov
add
sub
mov
ljmp
inc
mov
shll
fisubs
loopne
mov
adc
jmp
push
addr16
jae
xor
popf
fsubrs
pop
jge
mov
fs
cmp
scas
fnstcw
movsb
adc
cmpsl
repnz
jnp
push
repnz
mov
dec
aam
xlat
addr16
lock
lock
and
cwtl
adc
adc
cmp
add
and
das
data16
pushf
xlat
jg
inc
mov
ret
jge
mov
loopne
push
jo
lods
fbstp
call
adc
ja
pop
push
add
xchg
mov
cli
gs
aad
in
pop
pop
test
jno
in
jecxz
cmpsl
and
xorb
or
repnz
cmp
hlt
les
sahf
and
cmp
sbb
test
fldcw
aad
insl
cli
jns
xchg
push
cmc
jp
outsb
pop
push
and
inc
fsub
outsb
and
in
xchg
bound
insl
and
mov
push
mov
enter
iret
out
cs
testb
pop
dec
insb
ja
ja
insb
mov
xchg
ds
inc
icebp
mov
sti
mov
and
mov
adc
fucomi
call
mov
insl
test
mov
xor
jp
pop
pushf
jno
add
inc
mov
shlb
aaa
jl
fidivrl
loopne
stc
jns
adc
lret
mull
pop
push
fcompl
cli
push
jb,pn
rcll
and
lods
or
test
cld
push
jns
cmpsl
mov
mov
scas
fcompl
hlt
add
rcll
sub
stc
test
es
jno
ret
fsubrl
sub
loopne
es
and
ficomps
and
and
adc
sbb
cmp
jp
xchg
xor
xlat
or
cmp
and
in
adc
ds
orl
mov
adc
cmp
pop
mov
addr16
add
cmp
call
fstps
dec
and
test
fdivp
addr16
loope
ja
pop
jnp
pushf
insl
xor
scas
mov
cmp
or
lret
mov
jg
lahf
adcb
xor
daa
pop
ret
daa
loope
scas
dec
sbb
addr16
push
mov
and
shrb
sbb
pop
ret
or
fs
add
mov
cmp
and
cwtl
xchg
cmp
mov
or
push
cld
nop
fs
add
xchg
xor
dec
sbbb
mov
repnz
cli
push
pop
outsb
inc
sbb
mov
push
adc
sbb
xchg
push
xorl
mov
xor
adc
inc
sbb
jb
popa
sbb
outsl
inc
std
push
hlt
sbbl
sbb
jnp
sahf
adc
dec
clc
scas
push
mov
add
mov
add
jbe
add
or
dec
and
mov
fwait
push
jle
cmp
shrb
lret
xchg
je
repz
test
mov
xchg
adc
ljmp
fildl
fcmovu
jmp
sbbl
cmpsl
and
jge
icebp
mov
out
push
mov
adc
data16
ret
ss
add
ret
scas
testb
adc
mov
loop
mov
xor
sahf
adc
mov
mov
mov
dec
lock
out
lret
sbb
addb
test
xchg
lods
aad
std
add
sub
adc
cmp
scas
inc
sub
int3
mov
ret
jmp
es
fnstcw
sbb
push
mov
sbb
daa
push
mov
push
or
push
push
and
stos
insl
fucomp
test
adc
lods
lods
inc
out
cwtl
pop
mov
cli
ja
jp
lcall
xor
lds
and
dec
int3
out
mov
xor
jbe
fwait
sbb
dec
lods
incl
test
test
sti
xor
mov
jne
inc
popa
push
sti
push
cld
mov
mov
mov
int
pop
cmp
mov
outsl
adc
mul
fst
pusha
call
mov
pop
jmp
cmp
or
lret
jns
lahf
xlat
orl
clc
mov
and
mov
loop
push
scas
sub
rorb
popa
ljmp
inc
fsubs
or
aas
addl
xchg
jecxz
in
arpl
sub
xor
jnp
and
in
inc
and
xchg
jmp
xor
pop
shlb
cmp
inc
cwtl
ljmp
or
inc
cmpsb
push
sbb
out
add
cmc
inc
andb
mov
xor
shrl
jbe
xor
push
cmp
xchg
sbb
jns
pop
fdivrs
hlt
xor
lds
ss
and
sbb
and
jb
data16
jecxz
mov
cmp
ds
out
mov
adc
ret
xor
fmulp
jl
push
shlb
xchg
daa
add
pushf
hlt
das
xlat
stos
xor
mov
or
push
xchg
std
cmpsl
xlat
adcl
add
fcompl
lahf
jno
xor
jns
mov
mov
sub
mov
mov
mov
jb
orb
std
mov
jmp
aas
in
xor
cli
fcmovnbe
pushf
stos
cmp
lret
mov
loope
mov
das
xor
packsswb
jmp
dec
dec
jmp
jmp
outsl
subb
lods
sbb
xchg
cmp
push
or
cmpsl
mov
xor
mov
cmp
loopne
lret
movsb
sbb
xor
xchg
mov
xor
shr
jbe
mov
or
sarl
mov
mov
inc
dec
loopne
or
or
push
mov
xor
inc
push
mov
xchg
jbe
adc
ficomps
es
jge
mov
mov
inc
and
and
and
xchg
leave
add
xor
add
out
loopne
jb
jmp
out
jmp
jecxz
xor
enter
and
call
stos
lcall
xor
push
mov
push
mov
dec
jmp
jo
jmp
rcr
ficomps
mov
xor
cli
stc
sub
xlat
xor
mov
inc
xchg
fsubr
add
in
pop
movsl
xlat
rclb
mov
and
mov
push
sahf
sbb
push
cltd
pop
mov
loopne
pop
sarl
xchg
bound
mov
add
jmp
sbbl
inc
mov
cmpsl
jecxz
in
jb
shll
xchg
jbe
mov
xor
popa
fcoms
cs
add
jo
xchg
cltd
jmp
add
mov
mov
xchg
test
repnz
pop
fucomp
lea
scas
jmp
ds
jnp
sbb
mov
xor
xchg
or
loop
and
jmp
test
jecxz
xchg
dec
or
xchg
sbb
mov
ds
ret
sbb
jl
jbe
inc
adc
sub
add
imul
repnz
mov
outsl
push
into
mov
xor
pusha
jle
movsl
xchg
jno
mov
adc
rcrl
int
arpl
pop
sbb
arpl
in
adc
scas
mov
pop
mov
push
repnz
jb
enter
push
mov
xor
loopne
xchg
sbb
call
cmpsb
mov
pop
pushl
fcmovbe
jle
cmpsl
aas
loopne
enter
pop
repz
mov
mov
push
jmp
add
stos
sbbl
orl
jnp
sbb
jmp
add
xchg
shll
mov
mov
mov
add
lret
lahf
mov
mov
enter
pop
rorl
and
dec
lret
std
mov
cs
adc
adc
rcll
movsl
jmp
xor
mov
mov
mov
mov
mov
shll
mov
jnp
mov
or
or
pushf
lea
aam
xor
mov
movl
mov
ss
loopne
push
in
out
push
adc
xor
bound
rol
outsb
add
scas
fs
subl
leave
sbb
lock
iret
ret
xor
or
xchg
dec
ljmp
aas
ret
imul
es
ret
push
pushf
mov
jecxz
mov
mov
pop
adc
shrl
lahf
loope
loopne
xor
loop
xor
sbbb
xor
xchg
cmpsl
inc
stos
sti
fld
mov
pop
lahf
inc
xchg
or
mov
out
es
mov
ficoml
pushf
int
dec
add
daa
push
and
loopne
mov
sti
push
notb
mov
or
test
inc
xor
sbb
jmp
mov
pop
in
xor
xor
or
xor
cs
pop
aaa
mov
imul
mov
xor
and
inc
sti
shrl
out
inc
push
mov
mov
pop
add
and
mov
jmp
jb
xor
lahf
stos
loope
shlb
add
push
imul
repz
mov
cmp
movl
sbb
cmp
jb
xor
jle
sub
or
mov
push
mov
mov
mov
xchg
push
std
mov
mov
clc
adc
je
pop
shr
dec
inc
movsb
scas
mov
out
test
xor
jmp
orb
mov
add
shll
and
xchg
sub
mov
inc
jmp
cwtl
or
mov
push
aas
testb
jmp
lahf
aam
loopne
sub
mov
sub
jbe
push
push
mov
xchg
sbb
push
mov
popa
outsb
dec
mov
mov
les
or
pop
loope
xchg
mov
fdivl
lret
or
jle
inc
movsl
sbb
mov
mov
mov
movl
addl
mov
jg
mov
mov
xor
insb
idivl
out
stos
aad
sbb
xchg
and
and
jb
out
call
insb
inc
mov
mov
jnp
mov
sbb
repnz
mov
jge
dec
es
addr16
xchg
int
enter
xlat
movsl
hlt
adc
loop
sbb
cmpsb
mov
mov
adc
dec
pop
das
cli
mov
jb
inc
mov
xchg
fisubrl
inc
popa
push
cltd
bound
dec
cmp
ret
cmp
xchg
and
jp
ror
stc
adc
repnz
and
mov
sbb
push
mov
and
xchg
in
add
inc
and
and
add
mov
pop
call
ror
mov
nop
pop
mov
jmp
fisubl
movsl
call
nop
in
les
ss
sbb
cmp
sub
cmp
xlat
int3
xchg
flds
imul
outsl
xor
mov
insb
pop
loop
inc
cli
daa
inc
sub
mov
add
mov
mov
dec
out
adc
shll
icebp
xor
fisubl
enter
sub
sbb
mov
test
ja
push
rorl
push
fildll
pop
sub
xchg
in
push
add
cmc
nop
les
sahf
xlat
inc
pop
mov
mov
stc
mov
arpl
xchg
mov
sub
jbe
pusha
add
xor
adc
data16
imul
add
stos
adc
mov
jle
imul
xchg
arpl
addr16
test
scas
leave
add
push
mov
cmp
pusha
xor
sbb
mov
cmp
ffreep
arpl
xlat
pop
outsb
and
push
out
les
xor
mov
xchg
dec
mov
lds
dec
negb
lret
lock
and
in
arpl
dec
pop
popa
ret
mov
stc
cli
jp
jnp
xor
loopne
mov
data16
adc
or
sahf
xor
fistl
jle
dec
mov
loop
mov
xlat
dec
popa
sub
lods
fnop
imull
xchg
fs
push
stos
repz
nop
xor
cmp
xor
stos
ds
cmp
insb
sbb
sub
mov
inc
dec
jae
or
mov
sarl
cltd
add
pop
cmc
jge
mov
adcl
cmc
jns
incl
int3
ja
bound
mov
hlt
adc
push
mov
xchg
in
pop
mov
fwait
pop
mov
popl
cmp
inc
adc
scas
int
pop
lret
add
adc
pop
or
shlb
push
mov
sar
jle
loop
xchg
in
decl
scas
xchg
jno
icebp
cmp
sub
sub
jo
in
out
imul
ret
fbstp
xlat
jne
int3
jmp
inc
movsb
loop
xor
cwtl
daa
mov
ljmp
mov
outsb
sub
dec
xor
sub
in
icebp
mov
daa
ss
inc
lahf
fwait
sub
mov
xchg
aas
loop
add
xchg
jp
leave
lock
add
mov
movsb
add
xchg
sarb
aaa
ja
popf
sahf
ja
mov
sub
and
fscale
fbstp
movsb
mov
sbb
inc
stc
dec
cs
sub
cmc
push
push
xor
stc
push
cli
mov
and
sub
cs
jno
mov
pop
std
cmpsb
out
inc
rcr
pop
jno
add
xchg
sub
idivb
das
push
ficomps
jg
movzbl
inc
xor
xchg
jo
mov
aaa
xchg
in
ss
out
cld
ret
mov
dec
push
mov
jnp
loop
lock
inc
jl
adc
mov
lret
add
xchg
scas
outsl
fwait
leave
xor
ret
or
loope
clc
xchg
enter
dec
fcmovb
lds
mov
inc
pop
mov
xchg
aad
pop
pushf
mov
or
pop
roll
movsb
inc
stos
xchg
pop
loop
lods
dec
addl
adc
push
fucomip
sub
mov
add
test
mov
push
push
push
ss
xor
mov
test
mov
jmp
dec
push
out
cmpsb
scas
push
sbb
aas
enter
lcall
dec
lock
stos
paddq
adc
fstl
push
or
pop
fimull
xchg
cmpsb
and
or
inc
mov
lods
pop
add
sbb
insb
out
mov
adc
inc
mov
ret
les
jge
inc
mov
subl
ret
fisubrs
jmp
xchg
aaa
ret
sbb
stos
and
inc
mov
or
add
xchg
sbb
test
repnz
mov
inc
scas
lods
mov
xor
call
pop
sub
mul
gs
pop
and
xchg
inc
fcmove
popa
test
out
popf
cld
and
ljmp
popa
iret
fs
outsb
xchg
adc
sti
ret
test
movb
cli
loopne
pop
clc
popa
das
sbb
roll
sbb
jb
dec
inc
mov
lods
call
aas
pop
sbb
or
enter
inc
add
mov
cmp
push
ja
gs
out
imul
stos
scas
push
shrl
andl
hlt
scas
mov
outsb
push
push
icebp
ja
popa
fbld
xor
lods
fiaddl
mov
aas
and
pushf
into
xchg
xchg
adcl
sbb
mov
cs
out
dec
gs
push
test
add
dec
cli
ja
leave
repz
adc
adc
pop
dec
jecxz
mov
out
enter
jnp
ficompl
fsubr
sarb
lahf
jg
mov
pop
cmpb
testl
pop
out
test
repz
xchg
cld
gs
add
lcall
enter
jno
xor
mov
imul
pushf
mov
sbb
push
pop
popa
pop
aas
leave
and
testb
inc
scas
outsl
int
test
dec
xchg
aad
movsb
dec
test
fwait
imul
jp
dec
popa
cltd
pop
mov
push
leave
ljmp
pusha
add
cmp
lods
xchg
cmpl
gs
cld
pop
mov
adc
fisubs
ret
int
mov
mov
jae
jno
xchg
cli
scas
shll
dec
fwait
hlt
cli
fidivrs
jge
mov
jns
adc
popf
dec
push
pmaxub
sbbb
push
imul
mov
fldcw
cmpsl
cmp
cltd
jp
xchg
mov
out
testl
mov
shll
mov
stc
add
fildll
dec
dec
mov
loop
shrb
adc
ret
aaa
shll
bound
pop
pop
daa
mov
pop
dec
mov
push
push
sahf
fldt
fsts
mov
icebp
mov
out
dec
sub
les
cmp
lret
aas
ja
movsb
add
pop
stos
xlat
pushf
jge
sbb
cld
dec
adc
jp
int3
shll
stos
mov
xchg
stos
mov
jecxz
inc
jno
jecxz
aad
outsb
lret
sub
push
pop
jnp
xchg
xor
dec
mov
imul
mov
out
inc
sbb
int3
cmpsw
adc
add
subb
mov
scas
les
rcll
mov
in
mov
leave
push
int
xor
lret
pop
arpl
shlb
push
lret
ja
pushf
ret
mov
jno
scas
cmpsb
mov
fbld
shlb
cmpl
loop
loope
mov
ja
push
iret
inc
mov
test
push
mov
por
fiaddl
fsts
test
inc
mov
stos
push
mov
sbb
dec
xchg
inc
clc
subl
xchg
pop
ret
arpl
or
jmp
cmp
jmp
stos
ja
insl
fistl
mov
xchg
pop
jae
repnz
movsl
addr16
mov
mov
addr16
and
lods
stc
sub
and
mov
pop
add
or
shl
dec
sub
leave
push
pop
pop
jbe
gs
data16
test
lea
data16
sti
xlat
jp
jp
es
nop
mov
jno
jge
enter
cmp
arpl
movsl
out
sub
xorb
hlt
pushl
sbb
push
or
fcomi
xchg
scas
dec
popl
ret
popa
adc
xchg
movsl
mov
fcmovnu
test
shll
not
sub
pop
popl
lret
add
push
movsl
xchg
scas
lcall
mov
or
ljmp
and
in
dec
call
cli
adc
loop
sbb
aas
dec
sti
dec
add
xchg
ds
and
xchg
mov
lcall
es
cmp
push
jl
jmp
sub
xor
push
pop
dec
faddl
into
pop
mov
aas
test
xor
call
inc
sub
and
lock
mov
popf
xor
test
jg
cli
jnp
jbe
adc
incl
scas
inc
adc
fsubrs
sbb
jge
push
seta
jns
daa
pop
cmpsl
cwtl
rorb
aad
repnz
cmpsb
sarb
push
inc
in
dec
add
fcmove
sub
into
push
add
insl
xor
std
test
negl
inc
jne
jno
push
shl
and
adcb
add
mov
sahf
sub
ss
mov
mov
mov
and
push
loopne
and
sahf
addr16
mov
fsts
cwtl
bound
out
loope
stos
rolb
cmpsl
inc
sahf
rorl
add
lret
shll
in
fdivrl
lds
inc
xchg
mov
cs
out
mov
fstp
leave
xor
add
cmpsl
mov
sub
inc
jae
mov
negl
inc
pop
in
dec
ret
cmp
into
pop
push
inc
aaa
xor
xlat
cwtl
jae
cmp
pop
xchg
xchg
and
sbb
imul
sbb
mov
sub
je
mov
or
push
clc
int3
outsl
pop
rol
stos
pusha
inc
xchg
jecxz
sti
into
insl
push
cli
scas
mov
inc
lahf
ja
daa
std
xchg
push
insl
in
ret
push
test
js
das
mov
dec
cli
lea
addr16
xchg
bound
sbb
xor
sub
push
je
lods
pop
mov
add
lcall
bound
shll
icebp
xchg
mov
or
std
lret
inc
scas
lcall
lret
mov
jmp
sub
and
or
ss
mov
icebp
mov
insb
mov
call
mov
ret
jecxz
push
insb
decb
aaa
jecxz
sbb
lret
and
dec
lods
push
cmp
insl
push
mov
popf
dec
ljmp
popf
lock
test
inc
dec
cltd
inc
cwtl
les
push
cmpsb
sbb
or
sub
add
pop
cmp
repnz
sub
fwait
shll
pushf
ret
test
pop
jae
mov
mov
mov
test
decb
adc
shrl
stc
dec
sbb
push
sbb
jbe
stos
push
inc
in
mov
mul
clc
xor
push
mov
lock
cwtl
movsl
cwtl
xor
sti
jne
dec
test
push
add
xchg
or
faddl
sub
add
jno
lret
sbb
xchg
clc
out
jno
mov
fistpll
aaa
sub
aaa
jl
xchg
xchg
loop
daa
int
adc
mov
mov
xchg
stos
adc
repz
mov
out
lods
xorb
outsb
push
cltd
insl
or
pop
ljmp
push
ljmp
cmp
aas
mov
pop
sbb
mov
sbb
push
xor
mov
mov
lods
xlat
xor
add
lahf
add
xor
lcall
sub
sbb
mov
jmp
pop
mov
mov
shll
cmpsb
lret
addr16
in
scas
lods
pop
pusha
in
mov
addr16
test
jae
cltd
test
pop
add
mov
pop
sti
in
add
call
loopne
cmpsb
jnp
sbb
gs
lahf
mov
scas
mov
clc
xchg
data16
scas
pop
into
mov
pop
or
rcl
jle
cmp
sub
add
fidivrs
lods
jbe
shrl
xchg
loope
push
dec
mov
xchg
rcl
cmp
cld
leave
mov
fldl
movsb
dec
movb
dec
iret
mov
push
xchg
xor
mov
fbld
ret
push
stos
cmp
ja
out
push
popf
aam
sub
ljmp
pushf
test
adc
repnz
jo
push
ret
push
add
jg
or
rcr
fistpl
add
ret
jp
fsubp
xchg
push
fidivl
xchg
xor
sbb
movsb
pop
inc
mov
dec
test
ds
in
add
mov
rcr
js
loop
dec
mov
add
out
popf
cmp
test
sbb
les
jno
add
cltd
lret
or
push
scas
xchg
add
mov
fs
test
mov
aam
mov
ret
in
adc
icebp
xchg
or
pusha
aaa
icebp
pop
repz
out
cmpsb
cmp
lahf
push
test
and
sahf
mov
test
std
xorb
mov
pop
add
mov
popa
push
xchg
add
sahf
bound
outsl
or
mov
lcall
adc
and
pop
jge
ljmp
insb
movsl
out
addr16
xchg
dec
rcrl
mov
push
mov
or
or
pop
fdivs
stos
jno
fisubrs
mov
lahf
push
cmc
add
push
xor
or
pop
inc
test
xchg
jp
dec
sti
inc
xchg
and
xor
push
cmp
bound
or
xchg
push
orl
sti
sti
sbb
mov
loopne
cwtl
xchg
ja
jae
jnp
xlat
arpl
xchg
push
nop
out
pusha
push
aad
lods
outsb
sahf
pop
lret
jg
daa
out
mov
adc
xor
sub
fstps
test
rcrb
lret
dec
adc
mov
xchg
xchg
lea
ss
rcrb
mov
aam
neg
xchg
pop
pop
mov
pushf
stos
sub
test
push
add
shr
inc
scas
arpl
and
divb
inc
sbbb
pusha
or
sbb
insb
out
mov
clc
lock
xchg
pop
cmp
jnp
xor
jl
lcall
int3
push
push
and
aaa
int
add
lret
add
hlt
ret
cmpsb
sub
sbb
stos
pop
enter
fildl
add
les
lcall
repz
adc
fnstsw
add
out
xchg
bswap
xchg
iret
dec
fisttps
adc
dec
adc
rcrl
int3
or
add
ja
xor
mov
inc
inc
stos
cmpb
sbb
loop
jle
or
xchg
mov
mov
xor
xchg
sti
pop
push
ja
xchg
mov
or
enter
push
push
inc
sub
test
jae
sbb
dec
cmp
mov
out
pop
add
loop
adc
inc
cltd
jae
imul
ret
lea
fistpll
xor
dec
sbb
sbb
and
mov
das
lods
jno
xor
xor
or
nop
gs
dec
dec
ljmp
out
aad
and
fstps
pop
push
aaa
mov
pop
cmp
stc
jp
dec
cmp
data16
sbb
sti
outsl
or
inc
lods
ljmp
lea
cmp
fs
fbld
rcll
pop
repz
repz
jno
fistps
adc
fcmovnu
popf
mov
mov
add
sbb
push
lods
add
imulb
mov
repnz
mov
cmp
in
cmp
int3
call
push
in
fisttpll
mov
sub
movb
jmp
inc
stc
shrb
xchg
mov
outsb
jg
loop
shll
jno
lods
sbb
mov
and
mov
ret
xor
movsl
mov
movsb
adc
sub
pop
cmp
mov
cmp
jb
adc
pop
aas
leave
in
and
outsb
push
mov
push
pop
mov
or
sti
loop
repnz
inc
incb
push
popa
mulb
jle
and
popa
in
xor
adc
fadds
aam
jmp
xor
sbb
xchg
outsl
inc
stos
movsb
sub
clc
jge
xchg
mov
pop
mov
jmp
incb
xor
jb
adc
mov
lds
and
add
out
test
sub
mov
or
andl
scas
push
enter
and
dec
cmp
repz
inc
cli
test
imul
add
mov
cmpsl
push
pop
js
lret
mov
pop
mov
popa
xchg
adc
xchg
repz
push
in
jne
das
xchg
ficomps
jecxz
mov
insb
daa
jno
aad
push
sti
jecxz
ret
jle
sahf
fistpll
jmp
pushl
jg
mov
add
data16
ret
jmp
inc
test
xchg
sbb
xor
mov
mov
push
orl
popf
inc
xor
outsl
popa
out
lock
sbb
pop
cmp
out
lcall
icebp
sbb
imul
or
add
jecxz
sbb
repnz
lcall
add
rcl
push
xor
and
pusha
cltd
jae
lret
mov
ljmp
ja
bound
inc
enter
fisubrl
xchg
or
pop
add
adc
or
shlb
in
xchg
push
jg
xlat
pop
add
lods
in
fwait
push
jl
clc
shrl
or
mov
nop
sahf
aas
pop
aam
mov
push
lods
pop
mov
mov
aas
pop
lahf
hlt
dec
js
stos
or
mov
outsb
sbb
cmp
loopne
push
int3
cmp
pop
or
sarl
xlat
in
and
icebp
fdivr
push
decl
adc
push
and
movsb
jno
popf
pop
push
inc
mov
out
inc
jbe
jno
cmpsb
hlt
icebp
addr16
addb
dec
call
arpl
test
xorb
pop
ffree
ljmp
cmpsb
into
movsb
push
sbb
cltd
mov
testl
mov
mov
test
mov
sti
sbb
stos
leave
jbe
sbb
inc
cmp
mov
push
cmpsl
xchg
jecxz
or
sub
stos
fcomip
jno
popl
sbb
in
sbb
test
mov
pcmpgtw
cmc
mov
mov
jl
push
xor
ds
popa
push
lods
es
lcall
enter
daa
imul
jg
jecxz
stos
pop
loopne
shlb
xchg
mov
cmp
push
test
popf
pop
movb
rcll
jb
push
xor
cmc
pop
xchg
mov
lret
fs
or
cmp
out
xchg
xor
les
jne
cmp
mov
jp
push
cmp
jb
and
jbe
mov
lcall
dec
xchg
cmpsb
stos
dec
xchg
jmp
clc
mov
data16
cmp
dec
push
xlat
inc
lahf
push
fbld
and
add
or
pushf
xchg
lea
sti
push
mov
mov
out
lcall
aas
xor
jmp
adc
adc
out
jmp
xchg
lds
cmp
js
inc
push
movsl
xor
mov
xchg
xchg
int3
movsb
bound
lods
into
xchg
mov
enter
popa
cltd
lret
mov
jbe
jnp
cmpsb
jmp
pop
jno
shlb
stos
sti
cmp
in
enter
dec
jle
stos
sbb
cmp
dec
fs
nop
sub
dec
shll
mov
rorb
jo
nop
mov
push
imulw
in
arpl
out
mov
decl
nop
push
dec
fldcw
push
cmp
jo
mov
pop
das
pusha
cmp
adc
jp
push
pop
adc
add
dec
mov
xor
push
sub
insl
jg
push
rep
test
ret
mov
aas
cmp
lret
loop
js
loope
or
xor
mov
outsl
out
cmp
lret
xor
mov
stc
lret
es
out
jae
pop
notl
cmp
xor
dec
sbb
sbb
dec
flds
mov
mov
test
mov
mov
mov
inc
push
inc
dec
adc
mov
xchg
jecxz
dec
fsts
dec
pop
jns
push
mov
cmp
mov
sbb
lods
mov
adc
test
ds
dec
pop
dec
mov
xchg
sbb
mov
jg
pop
out
and
cld
xchg
inc
push
fwait
mov
shl
and
jecxz
int
push
aas
insl
fistpll
je
inc
pop
pop
leave
imul
xchg
xor
add
pop
push
loop
mov
lret
daa
clc
inc
and
xor
mov
add
out
aas
es
mov
push
sarb
fcoml
push
mulb
test
scas
mov
jbe
xchg
pop
cld
dec
jno
test
or
test
sub
sub
dec
aad
add
push
inc
mov
addr16
cmp
mov
in
pop
sets
daa
lods
bound
sti
sbb
cmp
xor
jmp
inc
dec
mov
imul
dec
or
xor
mov
adc
mov
ds
push
dec
cs
xor
mov
mov
ret
fsub
add
mov
stos
insl
mov
shrl
pop
shlb
pop
das
mov
jl
sub
nop
cli
mov
xor
sar
int
adc
cld
sub
xor
xor
dec
rcll
in
jae
movsl
sahf
ljmp
data16
leave
out
inc
repz
mov
loopne
xor
sub
sub
inc
in
mov
repnz
cmpsl
stc
push
dec
das
dec
fists
in
enter
sub
cltd
je
sti
repz
xor
adcl
mov
jp
push
shll
aad
lock
sbb
in
insl
xchg
push
xor
dec
test
xchg
or
hlt
ret
das
jnp
dec
leave
fisubl
add
fisubl
in
inc
loopne
inc
inc
and
jnp
into
jnp
mov
mov
out
sub
out
xchg
add
sti
fbld
dec
pop
lds
ljmp
stos
fiadds
and
lret
mov
je
lods
sub
mov
cmp
test
shlb
adc
push
into
imul
push
fs
imul
mov
cmp
mov
popa
ljmp
cmpsl
cs
in
loopne
fwait
cli
add
dec
das
inc
icebp
shll
loop
test
popf
mov
nop
js
scas
aas
or
push
icebp
jecxz
cmp
in
stos
adc
iret
scas
sti
sub
lea
cmpsb
rorl
pushf
mov
jecxz
and
test
loop
xchg
in
cmp
jmp
cmpsb
mov
cli
xchg
xor
mov
adcb
xlat
inc
lods
shrl
outsl
dec
push
mov
shlb
cmpsl
or
or
add
test
mov
sbb
xchg
pop
outsb
push
ljmp
mov
aas
icebp
mov
jns
aad
xlat
clc
xor
mov
sub
repnz
or
inc
xchg
jl
mov
ss
inc
cwtl
adc
call
mov
call
aad
jge
cmp
int3
push
sub
mov
es
js
ljmp
mov
aad
ljmp
rcrl
and
mov
dec
mov
push
and
jae
scas
lret
pop
je
pop
or
cs
and
call
xor
ret
push
shr
adc
xchg
lahf
daa
inc
stos
mov
lret
and
lock
inc
push
pushf
in
jecxz
ret
out
add
mulb
data16
ja
daa
imull
cmc
mov
push
xchg
in
xor
fs
push
aam
out
aad
cmpsl
and
or
or
int
add
bound
mov
xchg
aas
iret
bound
jae
test
jge
cmp
mov
repz
cld
xchg
push
std
dec
add
add
lea
fucomp
insl
outsb
stos
insl
adc
mov
in
icebp
or
cli
mov
cmp
nop
add
xchg
outsb
add
mov
push
adc
mov
out
sub
mov
in
mov
test
popa
pop
scas
or
cs
in
jge
bound
sub
aaa
les
notl
lret
fs
in
pop
push
adc
xor
mul
mov
sbb
cmpsb
push
mov
clc
icebp
aam
mov
push
insb
sub
pushf
shll
in
in
mov
insl
push
xor
lock
mov
push
outsl
pop
rorb
jge
std
xchg
inc
out
push
xchg
lods
repnz
sbb
cmpsb
lods
push
inc
xor
jge
adc
lret
in
mov
mov
sbb
clc
pop
imul
and
sbb
test
and
cmpsb
ja
or
ljmp
outsl
mov
jb
stos
xchg
jno
shll
jns
sbb
xchg
lcall
xor
popf
cmp
mov
scas
jle
rcr
sarb
aas
sbb
dec
test
in
push
xchg
sub
shll
push
mov
lods
xor
jp
inc
imul
add
mov
repz
add
iret
daa
cwtl
fidivrl
sub
sub
xchg
insl
cld
ret
test
add
push
movsb
sbb
pop
push
not
mov
pop
xchg
mov
out
and
out
shll
fsubrs
sbb
inc
xchg
sub
add
cltd
dec
test
mov
xchg
stos
imul
pop
and
mov
or
xchg
mov
test
divl
xor
das
jecxz
push
mov
or
shl
add
es
add
mov
out
xchg
mov
sbb
mov
adc
neg
cwtl
loope
imull
jge
je
adc
adc
inc
mov
xor
adc
mov
xor
movsb
repz
pop
in
adc
inc
stos
inc
mov
mov
mov
rclb
push
cmp
aam
aas
stc
and
insb
lock
adc
fisttpll
arpl
je
and
pop
xor
arpl
mov
nop
xchg
and
rcll
fadds
fnsave
and
lods
and
divl
aad
jb
addr16
call
push
mov
into
lcall
pop
cmp
pop
mov
dec
cmpsl
add
lcall
cmpl
std
add
jns
dec
stos
add
data16
lret
cwtl
cmp
lahf
ljmp
dec
xchg
xchg
cmp
pushf
push
sbb
shl
mov
push
stos
stc
add
fists
xchg
pop
pop
insl
call
xor
add
mov
pop
sub
les
pop
movsl
sbb
into
icebp
xor
lahf
pop
sarb
inc
sbb
mov
gs
mov
mov
sbb
jg
call
clc
inc
cmpl
lods
jns
insb
push
inc
lahf
mov
movsl
iret
xcrypt-cbc
cmpsl
xlat
scas
dec
hlt
and
push
leave
or
bound
xor
sub
push
push
dec
push
mov
sbb
jbe
add
jmp
or
enter
dec
insl
int3
mov
aam
xchg
mov
loop
push
jb
jno
lea
sub
mov
cmp
sbb
push
xor
ss
mov
stc
pop
bswap
adc
stc
arpl
xchg
push
push
fcoms
adc
stos
cmc
pop
dec
jl
stos
cli
cmp
lods
int3
jmp
jl
movsl
fimuls
outsl
xchg
push
test
shll
fiaddl
shll
and
aam
or
xchg
rorb
or
adc
loopne
leave
stos
xor
outsb
jno
jge
arpl
jle
subl
cmp
in
loop
add
pushf
ljmp
mov
xchg
mov
cmpsb
or
pop
mov
pop
inc
aad
movsb
xor
rolb
ss
pop
xchg
hlt
aas
dec
into
push
inc
jno
fildll
ja
sbb
pop
sahf
add
mov
clc
call
push
lret
mov
fistl
add
mov
jae
in
addl
outsl
es
push
aam
xor
in
xchg
sahf
push
cmpsl
aas
stos
test
sbb
push
int
sbb
lcall
aad
mov
jge
or
into
cmp
iret
jo
cmp
je
cmp
mov
fidivrs
adc
or
frstor
jo
or
mov
sarl
inc
sbb
xorb
xchg
or
mov
cld
aaa
mov
jl
pop
and
fisttpl
xchg
mov
aam
mov
ljmp
xchg
push
xchg
cmpsb
testl
sub
int3
mov
add
inc
lret
xchg
gs
mov
pslld
xor
inc
xor
scas
insl
cmp
bound
je
mov
pop
lea
or
add
cmp
xor
mov
jecxz
and
ljmp
enter
movsl
mov
nop
in
inc
add
aad
jno
xor
fdivs
cmc
sbb
mov
sysenter
enter
xchg
push
aad
imul
lods
and
add
add
and
int3
test
push
mov
push
or
mov
lret
orl
lods
test
pusha
cwtl
stos
fiaddl
inc
mov
mull
jle
es
or
mov
inc
jl
mov
add
or
dec
pop
scas
lahf
stos
jbe
fisubs
negl
xchg
and
add
mov
adc
out
ja
mov
and
fistpl
jmp
dec
mov
and
leave
xor
sub
sub
insb
shll
xchg
add
add
cmpsb
pop
icebp
mov
add
ljmp
xor
test
push
inc
repnz
or
mov
jne
btr
lret
push
lds
or
mov
mov
or
insb
xchg
lcall
dec
lret
adc
imul
jne
dec
or
sub
jbe
sahf
fwait
mov
aaa
adc
cli
fdivp
pop
hlt
ljmp
mov
aas
icebp
int
unpcklps
sub
test
aam
add
jge
jno
sub
mov
out
add
fsubs
loopne
mov
lret
xor
pushl
adc
iret
push
inc
es
in
gs
sahf
dec
hlt
jg
jp
inc
dec
xor
pop
dec
gs
jb
cmc
push
cmpl
jmp
jb
jmp
xor
xchg
jb
xchg
xor
shll
insl
mov
andl
jb
sub
xchg
inc
cwtl
jge
cmp
xchg
incl
shlb
add
xchg
js
jae
jecxz
addb
or
sbb
pop
push
sub
dec
das
sahf
imull
sub
add
lock
mov
rcl
xor
fistpll
cmp
stos
mov
es
sti
jns
cmp
push
iret
sbb
or
lcall
mov
xor
xlat
cwtl
iret
push
adc
cmp
sbb
testb
adc
cltd
mov
out
and
clc
dec
dec
lods
dec
jns
ror
loop
sbb
imul
cs
pop
mov
out
jbe
fst
pushf
sbb
icebp
adc
add
cwtl
pop
mov
sbb
jb
out
jle
daa
inc
and
jne
mov
cltd
xchg
lret
push
shrl
jle
repz
and
push
mov
cli
insl
or
jnp
cmc
add
gs
roll
out
dec
mov
dec
push
mov
andb
mov
sbb
mov
ss
fwait
mov
test
add
add
mov
adc
pop
outsb
cmpsl
mov
mov
nop
outsb
pop
sbb
pop
jecxz
add
push
das
add
into
mov
sbb
scas
cmpb
enter
repnz
lods
cli
enter
fnsave
daa
loop
mov
jmp
mov
pop
outsl
addr16
cmp
sti
lahf
sarl
add
sub
shrl
cmp
fmuls
dec
mov
fcomps
mov
mov
insb
ljmp
into
or
stos
cwtl
in
cwtl
lahf
mov
mov
inc
inc
insl
mov
subb
sbb
sbb
lret
out
pushf
ss
push
adc
cmp
jae
outsb
into
repz
mov
lret
imul
adc
push
or
lret
inc
out
adc
push
ja
mov
pushf
jecxz
or
into
mov
xor
sbb
fs
repnz
cs
lods
jne
jecxz
ds
xlat
repz
aam
and
xchg
mov
mov
cmp
mov
ljmp
loope
in
psubsw
and
stos
push
fcmovbe
test
cmp
lods
nop
sub
nop
sahf
and
and
sbb
ljmp
lret
fwait
rcrl
fwait
push
add
xor
js
mul
popa
cwtl
mov
adc
sbb
cmp
stos
mov
mov
push
gs
push
lock
dec
outsb
adc
sbb
insl
cmp
push
pop
sub
call
inc
lret
xchg
ret
mov
inc
cld
and
jl
push
or
mov
adc
mov
sub
jae
mov
adc
jno
add
stos
add
jne
ret
loopne
xchg
adc
aaa
push
fwait
dec
dec
pushf
cmp
aas
or
movsb
fldt
inc
cmpb
xchg
jl
lret
xor
call
pop
das
test
in
pop
mov
or
mov
hlt
daa
enter
pop
mov
lods
ret
jl
in
mov
hlt
cmp
cmc
push
sbb
cs
xchg
pop
daa
and
shll
lahf
aad
daa
push
int3
jno
sahf
test
stos
dec
sub
push
mov
jmp
jns
jns
lds
cmp
and
out
sub
movb
push
xchg
ja
test
sub
das
lret
push
adcl
and
into
inc
xor
cmp
cmp
mov
js
xor
mov
jo
ljmp
stos
sti
mov
and
jl
mov
cmpsl
mov
jmp
dec
cmpsl
mov
sbb
icebp
mov
insl
icebp
cmp
mov
mov
xchg
jb
dec
add
imul
xor
frstor
fmuls
jecxz
js
scas
shlb
xlat
cmp
cltd
fstpl
rdtsc
pusha
and
sbb
xor
dec
sti
and
sub
sets
loope
dec
xchg
inc
dec
stos
lret
rcrb
jp
sbb
leave
sub
jae
movsb
jno
stos
pop
ret
jns
loope
clc
sub
lahf
shrb
imul
cmpsb
mov
negl
iret
and
cmpsl
scas
shll
stc
call
pop
out
push
jno
sbb
add
jne
mov
scas
xchg
cmpsb
adc
xchg
enter
push
rcr
insl
mov
jbe
fs
cmpsl
mov
mov
sti
call
aad
lods
pop
or
xchg
ss
outsb
lcall
sub
js
push
push
out
or
dec
cmpsb
mov
jbe
add
and
inc
sub
jg
push
fdiv
mov
inc
inc
sahf
stc
cmp
mov
inc
aad
jl
addb
popa
jno
mov
cmp
mov
dec
push
out
or
inc
pop
das
cli
pop
int
or
jmp
bound
sub
push
in
add
pop
cli
adc
fxam
js
xchg
stos
cwtl
add
inc
insl
in
xchg
lret
in
and
sub
jo
mov
push
xchg
cmp
leave
dec
dec
js
in
mov
dec
adc
fst
hlt
adc
iret
push
push
fistps
pushf
push
dec
in
lods
lret
inc
int
outsb
pop
xchg
into
mov
insl
out
adcl
adc
stos
stos
es
aas
pop
pop
pusha
pusha
and
lcall
shrl
sub
divl
movsb
add
out
pop
lahf
or
or
pushf
cmp
lahf
push
xchg
adc
sbb
test
stc
xchg
and
and
push
jp
mov
inc
inc
mov
pop
push
sub
and
in
filds
mov
in
icebp
jne
sub
fwait
jle
ss
and
shll
xchg
mov
in
xor
lock
stos
lds
shll
jmp
fists
mov
loop
nop
push
imul
icebp
mov
lret
leave
mov
push
icebp
js
mov
mov
mov
cld
adc
mov
shlb
sbb
decb
sbb
mov
mov
testb
daa
and
and
shll
xor
and
push
mov
icebp
cwtl
jae
dec
imul
mov
fwait
sbb
cmp
xchg
jg
mov
adc
pop
cmp
cmovns
sahf
repz
aaa
test
rorb
dec
inc
pop
push
ret
mov
in
jecxz
push
test
clc
fldt
in
cli
lock
sbb
mov
icebp
ss
mov
cwtl
pop
adc
aam
mov
in
xchg
mov
ret
mov
dec
rcll
fbld
add
and
ds
test
addl
sahf
divb
mov
push
test
pushf
mov
xchg
mov
aaa
mov
xchg
insl
push
jbe
pop
add
push
push
mov
arpl
scas
xchg
repnz
fs
fldcw
int
in
adc
sub
xchg
adc
sbb
mov
icebp
push
ret
xor
push
scas
or
ror
and
push
and
cmpsl
repnz
jb
push
fiaddl
push
mov
mov
nop
cld
out
imul
cmpb
shlb
mov
or
lods
cmp
cmpsl
or
data16
sub
leave
ror
cmpsl
jp
add
stos
sbb
cmp
adc
push
or
popa
xchg
jp
push
fwait
in
lret
outsl
pop
dec
or
inc
jle
jbe
or
outsl
mov
cmp
sarb
cmpsl
icebp
push
jo
popf
aas
mov
dec
and
mov
iret
mov
push
mov
popf
mov
and
or
fldcw
mov
mov
clc
out
xor
or
pop
adc
sub
out
cmp
cld
lret
fcomip
add
push
add
mov
xor
inc
cmpsl
mov
hlt
inc
dec
or
lods
lea
pop
rorl
cmpsl
lods
stos
sub
fisubl
sti
cli
mov
push
dec
mov
nop
sbb
cmc
mov
call
aas
jnp
aas
call
mov
lods
mov
xchg
insl
mov
jae
inc
inc
xchg
mov
jno
mov
xchg
es
bound
lods
cmp
sub
out
iret
jnp
fstpl
pop
dec
arpl
mov
leave
ds
cltd
and
scas
jecxz
movsl
cmpxchg
jge
popf
pop
mov
sub
pop
mov
add
jns
addr16
inc
jecxz
inc
dec
push
dec
sub
mov
jecxz
jecxz
test
roll
movsb
push
or
mov
rcrl
daa
add
out
aam
shr
scas
jno
std
mov
lds
aaa
push
cld
xchg
inc
fstpl
sbb
lock
push
test
xchg
push
sbb
mov
sbb
cltd
fcmovu
arpl
pop
mov
js
mov
outsl
sub
cmp
iret
movsb
add
dec
lods
mov
sti
mov
int
data16
stos
cmc
mov
stos
ret
stos
icebp
daa
xor
sbb
xchg
leave
push
shrb
pop
jmp
pop
jge
xor
pop
fidivrs
pusha
pop
and
push
loope
jb
lds
sub
push
jne
add
out
inc
dec
jns
movsb
out
or
or
cwtl
or
fcoml
jl
fsubrl
mov
fisubs
leave
addr16
cltd
inc
mov
jns
sub
cwtl
or
or
jne
sub
cmpsb
jns
fcmovu
adc
enter
xor
jg
enter
lcall
iret
cld
testb
stos
pop
pop
and
call
xchg
lret
mov
adc
pop
getsec
mov
cmp
sbb
arpl
scas
adc
cli
push
inc
cmc
mov
mov
dec
jns
std
jecxz
test
jb
add
je
xchg
jnp
imul
or
jp
dec
movsb
mov
imul
jecxz
pop
sti
xor
cmp
jb
push
cltd
mov
add
addr16
jno
sbb
push
inc
mov
xchg
je
imul
xchg
in
cld
stos
adc
lds
daa
push
scas
lea
jns
nop
outsl
ja
mov
rorb
into
push
out
xchg
mov
test
add
sarl
mov
jp
loopne
add
mov
es
movsb
adc
lret
arpl
out
mov
enter
pop
pushf
xchg
sbb
xchg
je
testb
inc
and
or
outsl
jecxz
and
stos
or
lret
loopne
cmpsb
roll
dec
mov
cmp
or
cmp
jns
inc
adc
push
lret
aad
loope
sbb
adc
sub
mov
aad
divb
nop
xor
dec
jns
sub
or
ret
out
leave
inc
mov
aaa
in
adc
xchg
mov
cmp
mov
cmpsl
xchg
fdivrp
call
out
fidivrs
andb
in
incb
lret
in
lds
ds
sbb
adc
cmc
pop
sbb
inc
pushf
and
ret
pushf
sti
mov
sub
push
xchg
popa
mov
mov
sub
sbb
mov
cmp
movsl
mov
jae
mulb
inc
push
sti
icebp
aaa
sti
sub
mov
mov
sub
push
or
pop
stc
push
inc
rcrl
and
out
mov
adc
outsl
jmp
inc
sub
push
daa
jmp
jl
xchg
mov
ljmp
cmp
or
or
jge
mov
mov
sub
adc
popf
xor
dec
jecxz
mov
dec
sub
push
add
jecxz
lods
sbb
ja
adc
fdivl
lods
inc
test
mov
adc
std
adc
stc
enter
mov
stc
sbb
test
in
jle
ss
mov
push
outsl
xor
mov
jne
aam
pop
out
ret
not
mov
dec
dec
loopne
dec
or
push
mov
sti
adc
mov
in
popf
dec
data16
inc
stc
pop
iret
mov
jmp
adc
and
cmovs
sbb
ficompl
push
inc
jle
into
xor
mov
out
repz
lret
in
out
test
sbb
lock
out
fisttps
cmp
or
insb
out
mov
xor
movsl
adc
gs
sub
fiadds
fs
sbb
xor
sbb
add
out
stc
mov
divl
shll
repz
les
inc
aad
mov
cmpsl
push
sbb
shrl
sbb
pop
mov
movsb
mov
or
or
and
dec
ljmp
adc
js
mov
push
fcompl
movsl
or
rorl
ret
fcmovnbe
and
xor
sahf
scas
xor
pop
stos
mov
test
lahf
jle
mov
xchg
pushf
push
in
and
adc
aam
pop
inc
daa
out
pushf
adc
and
and
mov
push
test
or
loopne
xchg
aas
or
or
xchg
es
sbb
test
imul
inc
xchg
test
ja
int
xor
ljmp
fwait
shrl
jg,pn
stc
sub
ficoms
fwait
mov
ror
cmpsl
lock
jl
pop
popa
test
out
clc
xchg
iret
sub
pushf
jbe
dec
xor
repz
gs
and
and
bound
call
jae
mov
pop
dec
dec
out
test
out
pop
arpl
aad
insl
ret
mov
hlt
ret
or
and
mov
pop
ljmp
xchg
add
dec
mov
mov
std
rdpmc
jns
in
pushf
mov
push
pop
es
pusha
sti
scas
popa
push
stos
sbb
or
sbb
mov
insl
jmp
or
sub
mov
lret
lret
testb
ljmp
pop
mov
and
mov
ret
shll
leave
lea
ja
lea
fidivl
mov
cmp
daa
fwait
lds
dec
inc
movups
test
mov
sub
mov
out
pop
push
scas
inc
mov
push
mov
pop
insb
add
mov
and
loopne
hlt
std
rcrb
sti
in
push
cmp
and
call
bswap
aaa
pop
push
aaa
jecxz
or
and
jmp
sub
in
jle
pop
xor
cmpsb
xchg
fadds
mov
stos
inc
loope
fidivrs
fisubrl
xor
ss
es
lret
xchg
test
and
jne
or
jns
fnstcw
adc
inc
or
popl
xchg
rcl
cli
call
mov
jge
outsb
nop
negb
cmp
jne
mov
lock
xchg
xor
ficompl
mov
rcl
ret
dec
shr
iret
xchg
ss
movl
mov
xor
inc
push
popf
pop
xor
and
mov
add
shlb
add
mov
inc
cmp
cs
out
dec
aad
jo
mov
inc
jge
and
push
sti
jo
sahf
sub
movsb
mul
sbb
mov
ljmp
out
daa
xchg
in
and
adc
pop
out
in
jecxz
aaa
and
arpl
inc
and
jne
xor
mov
push
cmp
add
push
cs
sbb
add
es
popa
out
jnp
cmp
jmp
sbb
jae
xor
adc
mov
sub
xor
es
stc
lret
test
xchg
sbb
mov
jle
lods
mov
jg
sub
mov
sarl
loop
inc
clc
test
ja
mov
xchg
lcall
inc
dec
mov
insb
jle
sbb
sbb
divl
inc
jo
fsubr
push
js
sahf
jge
cld
or
out
outsb
sti
pop
pushf
sub
push
das
xchg
sti
inc
outsl
iret
jecxz
and
xchg
xlat
cmc
jne
mov
jle
les
mov
js
lods
ja
pop
and
dec
sti
dec
ljmp
or
xor
lret
rcll
lods
inc
dec
and
int3
xchg
ret
xor
and
insl
mov
inc
adc
cld
mov
cmpsl
push
pop
cmpsl
test
mov
jmp
inc
mov
push
cs
push
rol
ret
bound
cmpsl
mov
xor
adc
jg
sub
out
es
cwtl
fwait
sahf
add
mov
das
pop
jns
xor
or
sti
or
push
mov
loop
rcl
or
mov
dec
inc
test
lods
add
les
cmp
rcr
fdivrp
out
loope
test
scas
mov
jp
adc
int
cmp
xchg
fldt
fdivrs
sti
and
or
jmp
mov
shl
cmp
into
lock
movsl
mov
fwait
sub
mov
mov
jns
data16
popa
push
mov
or
mov
sbb
pop
out
dec
inc
cmp
cmpl
push
xor
pop
imul
sub
movsb
cmpsb
push
imul
cmp
cmpsl
mov
pop
shlb
push
jg
inc
xchg
lock
and
test
subb
dec
fbld
jmp
shlb
rol
cmpsb
test
jmp
xor
xchg
sbb
testl
addr16
gs
inc
sub
out
fidivs
xchg
xchg
mov
push
pop
jge
loop
adc
test
dec
lds
sti
orl
outsl
cltd
jg
sub
dec
jmp
mov
or
adcl
add
jnp
loop
and
and
jg
sbb
jge
cmp
pop
sbb
shrl
fistl
mov
xchg
push
dec
nop
dec
pop
xchg
pop
shll
lods
xor
loop
mov
and
rcll
and
mov
cltd
aad
mov
or
push
popf
mov
lcall
adc
add
sti
pop
dec
mov
xor
mov
fisttpl
mov
xor
jne
mov
sub
in
insl
inc
xor
jne
jge
stc
add
lahf
shlb
push
lds
mov
mov
pushf
push
jb
mov
xchg
mov
leave
fcoms
xchg
dec
xchg
jge
mov
mulb
jae
icebp
rcrl
push
aaa
test
mov
jecxz
add
push
sti
or
ljmp
push
insl
dec
mov
sub
sub
jl
lcall
adc
fdivrs
fldl
test
gs
lods
xor
loop
add
je
mov
dec
or
jmp
sbb
add
jp
fiadds
notb
cltd
lea
sbb
movsl
insl
mov
lcall
popf
shll
cwtl
idivb
mov
xor
sti
lock
shll
add
adc
dec
andl
inc
outsl
jp
sbb
push
pop
fbld
rolb
add
lret
pop
popa
jge
fcoml
sarl
jae
xlat
pusha
adc
hlt
in
jnp
add
jb
fld
imul
pushf
repz
xchg
cmp
sub
mov
push
mov
mov
jae
inc
or
test
sti
pop
add
orb
arpl
in
sar
insb
repnz
stos
loope
neg
sahf
xchg
add
out
popl
xor
xchg
or
imul
test
inc
xchg
ljmp
mov
ret
shr
sbb
cli
or
or
and
jg
movsb
or
push
xchg
aad
rcl
jl
rcr
rorb
lock
aad
add
pop
in
arpl
push
dec
stc
sub
test
add
jne
jbe
repz
sub
aad
jge
in
lds
outsb
cmpsl
aad
pop
int3
test
lods
inc
jne
jnp
lret
cmpsl
xor
hlt
nop
repz
clc
out
fmul
sub
in
jecxz
out
mov
sti
mov
outsl
push
aam
insb
sbb
xchg
xchg
lea
and
jns
movsb
ffree
jp
mov
mov
daa
in
testb
outsb
aad
pop
or
les
in
fwait
repnz
lret
fildl
lods
and
ds
call
jo
sub
orb
jl
jns
cmp
lea
out
jp
jae
lret
divb
shr
imulb
push
lret
jnp
sbb
stos
repnz
xor
jne
xor
arpl
cs
mov
out
in
cld
mov
outsb
repnz
cld
outsb
cmp
xor
mov
push
in
loopne
cmc
pop
and
cld
xor
stos
sub
jmp
or
fcomip
sbb
popa
add
jne
cmp
cmp
cmpsb
xchg
cmp
orl
xchg
lret
mov
dec
cmp
stos
xor
inc
icebp
pop
gs
cmpsb
lds
pop
das
mov
daa
cmp
cli
and
daa
xchg
js
cmpsl
arpl
push
xchg
int
ss
fldln2
mov
cmp
mov
test
cs
inc
out
cmp
aam
pop
sub
rcl
adcb
inc
dec
mov
fisubs
fdivp
push
mov
inc
lea
cs
mov
test
mov
jmp
xchg
mov
jo
push
push
sbb
jge
sar
int3
rol
ds
cli
xchg
popa
xchg
sti
xchg
notl
adc
lods
xchg
lds
fistl
xor
xor
or
xchg
mov
pop
out
inc
push
sbb
cmpsl
popf
aaa
and
movsl
stos
push
or
inc
jecxz
sub
push
adc
cs
aam
bound
xchg
mov
add
push
xor
movsb
pop
inc
add
push
push
cmp
aad
mov
adc
jne
mov
aad
inc
cmp
jmp
add
sub
mov
jmp
movsb
cs
xor
push
xlat
fmul
sahf
imul
movsl
nop
sub
mull
pop
inc
or
sub
fildll
enter
xchg
shll
mov
push
and
jb
lahf
xchg
adc
sub
shlb
rolb
jb
push
daa
movsb
lds
mov
iret
in
mov
mov
xor
cld
ret
xchg
aas
mov
push
les
adc
pop
pop
inc
mov
jbe
push
sbbl
int3
outsl
jp
sbbb
jns,pn
and
and
mov
dec
inc
jmp
or
add
inc
jp
ret
lret
xchg
pop
inc
es
mov
mov
cmp
xlat
push
xchg
push
sbb
mov
pushf
jl
pop
cmpsl
jle
lods
jnp
add
jae
leave
sub
call
jbe
inc
mov
int3
outsl
dec
in
loop
jb
sbb
mov
mov
mov
insl
cmp
int3
inc
xchg
int
fldl
aaa
stc
mov
cmp
jecxz
andb
fisttps
aam
lret
stos
lea
push
jecxz
mov
sbb
push
insl
xchg
fcompl
cmp
dec
mov
vphadduwq
cmp
repz
stos
rclb
jb
xor
mov
and
movsb
cmp
mov
and
jno
sbb
adc
out
sub
xor
lods
loope
movsb
shlb
loope
and
pop
insb
ljmp
ds
sti
adc
mov
out
out
xor
leave
out
add
icebp
enter
sbb
mov
fdivr
cmpsb
mov
out
sbb
push
dec
jb
dec
loopne
inc
and
jne
sub
ss
mov
lret
call
jae
lret
fnstsw
pop
jnp
sub
or
cmpsl
int3
fs
pop
xor
fwait
xor
aaa
add
add
mov
sub
cmp
jecxz
xor
cmp
adc
hlt
enter
mov
sbb
push
add
sub
mov
mov
inc
push
sbb
les
xchg
pushl
mov
scas
decb
int
inc
jg
stc
cmp
ss
ljmp
popaw
fsub
xchg
jl
aaa
mov
arpl
sarl
xor
mov
mov
xor
mov
add
xor
pop
mov
mov
pop
pushf
push
shr
cmpl
mulb
mov
xchg
jge
jb
xor
nop
fbld
sahf
mov
jo
push
testb
bound
loopne
cmpsb
push
es
mov
xchg
jg
push
fistl
fildll
jns
jns
out
mov
lds
es
inc
into
mov
mov
mov
test
js
lcall
data16
lea
cwtl
jp
mov
popa
sub
jmp
fdivs
ficomps
mov
xchg
sti
pop
scas
pop
push
mov
enter
je
jecxz
fstl
addr16
aam
fstpt
dec
fidivrs
pop
sub
pop
and
enter
ficomps
inc
lahf
cmp
movsb
push
in
std
in
inc
ss
mov
jno
dec
movsb
fistps
and
ficoml
aam
jge
loopne
leave
int3
fsubl
out
ret
cmpl
lods
int
sbb
lcall
jp
add
mov
dec
dec
sub
sti
pop
mov
ds
dec
shll
jle
sbb
jg
popa
imul
sbb
cmc
lock
lcall
push
aaa
push
shl
into
mov
pop
pusha
stc
xor
xchg
xchg
xor
aam
inc
popa
lea
das
and
lahf
and
iret
xchg
out
mov
inc
popa
add
or
or
and
jbe
pushf
mov
popa
pop
jb
mov
xchg
xchg
push
cld
push
inc
js
inc
pop
std
adcl
sub
inc
and
addr16
sbb
xor
dec
jmp
fnstenv
xor
mov
mov
test
xor
fldl
cmp
inc
out
cmpsb
scas
fimuls
sbb
inc
xchg
jg
loopne
jns
push
ret
scas
xchg
ds
mov
repz
sub
push
or
jecxz
fdivr
jne
dec
mov
subb
sub
and
bound
jae
xor
dec
push
arpl
sub
dec
cmp
add
dec
test
scas
pushf
lds
lods
xor
mov
arpl
jae
xor
mov
cmpsl
aam
jl
cmp
loope
and
xor
jmp
jno
dec
mov
inc
cmp
adc
out
cmc
movsl
mov
sbbb
roll
push
gs
mov
or
xor
fnstcw
jl
and
fnstenv
inc
push
frstor
outsl
aaa
jecxz
bound
adc
mov
xorb
icebp
sub
push
test
mov
cmp
inc
push
xchg
out
pop
mulb
push
mov
sub
enter
pop
daa
ffree
cltd
or
cmp
in
push
mov
mov
sbb
fs
pop
fisttpl
loope
outsb
cld
ret
stos
jmp
mov
loope
stos
xchg
xor
pop
inc
outsb
test
mov
push
xorl
mov
gs
fildl
lods
xchg
xchg
repnz
out
fmuls
xchg
xor
mov
cwtl
stc
sarl
faddl
fcmovbe
out
add
adc
lcall
loop
dec
sbb
push
sbb
mov
jno
xor
inc
imul
shl
loop
mov
rcll
lock
jb
fsubl
rcrl
into
mov
out
aas
out
add
mov
shll
push
popa
or
inc
mov
hlt
add
mov
mov
jp
fbstp
jecxz
fimull
inc
fcoms
mov
repz
iret
out
call
cs
pop
stc
sbb
mov
sub
add
push
push
imul
fbstp
outsl
add
mov
pusha
movsl
fldt
mov
push
cmc
iret
mov
xchg
addb
fwait
jo
jno
sub
mov
mov
add
ja
inc
cmp
shl
push
cmc
cmp
add
dec
cld
das
cmp
adc
test
out
divl
jb
ss
leave
push
xchg
rorl
lea
aad
jecxz
push
test
jg
xchg
cmc
divb
aaa
icebp
lcall
sbb
test
xor
scas
dec
mov
aad
and
ror
adc
ss
shrl
fwait
xchg
out
cli
mov
sahf
jae
iret
xchg
pop
fimull
add
in
dec
cmp
mov
push
aaa
jbe
push
shr
inc
aaa
sbb
mov
inc
int
in
mov
mulb
mov
pop
fdiv
es
and
nop
push
shrl
std
addr16
and
leave
sarl
daa
not
daa
sbb
cmp
adc
xor
in
imul
in
add
xor
inc
cmp
rcrb
setns
inc
add
mov
cwtl
pop
or
outsb
rcll
fwait
mov
cmc
push
add
mov
stos
aaa
iret
mov
push
cmpsl
cmp
jbe
pshufw
ljmp
js
mov
inc
in
rolb
lock
out
lcall
mov
stos
push
push
mov
pusha
aas
leave
ds
or
fimuls
lods
dec
inc
fucomi
rclb
cmp
mov
xlat
and
arpl
lret
das
ja
mov
jno
popf
mov
adc
inc
movsb
in
sub
xor
scas
je
or
add
adc
push
mov
shrb
ja
sbb
inc
xor
icebp
xor
in
xchg
ficoml
sbb
or
sbb
fidivrl
sbb
fisttps
pop
push
push
sub
adc
std
loope
dec
jp
xor
fimull
jnp
xor
jne
rcrb
fcomps
cmc
mov
inc
lcall
jecxz
add
mov
stos
in
test
out
mov
sbb
push
lcall
in
sbb
scas
cmpsb
bound
mov
xchg
popf
repz
push
mov
xchg
andl
add
notb
sbb
jbe
pop
and
rcl
enter
aas
repnz
inc
push
fists
jne
cmp
cmp
xor
pop
cmp
adc
loopne
add
js
dec
add
movsb
cli
test
js
jae
inc
arpl
xor
fcmovu
std
movsl
sub
or
leave
test
cmp
icebp
outsb
cmpb
repz
in
arpl
insl
stos
mov
repnz
mov
loopne
repnz
fucomip
movsb
das
pop
xchg
loop
and
clc
test
mov
fmull
add
sbb
leave
jnp
sub
jb
in
lret
xchg
loopnew
and
cld
dec
push
fs
js
push
insb
jecxz
jecxz
xor
adc
out
leave
sub
mov
sub
leave
jbe
into
fidivrl
xchg
dec
pop
and
dec
stos
out
inc
shll
pop
xor
inc
mov
loope
lret
mov
outsb
cwtl
imul
jge
xchg
lcall
test
hlt
out
testb
or
enter
popa
mov
xchg
inc
dec
push
pop
xor
inc
stos
push
div
mov
push
push
mov
in
inc
and
add
xor
xchg
sti
testl
and
push
sbb
enter
or
inc
xchg
std
imul
mov
sub
and
cmp
jmp
cmpsl
or
adc
enter
fstpt
mov
sbb
or
insb
mov
scas
push
lea
insb
fadds
leave
outsb
mov
andl
ret
ljmp
pop
out
lcall
and
xchg
mov
mov
movsl
test
lods
pushf
clc
mov
shll
and
test
stos
jns
jbe
lea
xchg
bnd
pusha
pop
call
jmp
mov
clc
popa
mov
push
dec
aam
enter
fwait
ljmp
xchg
enter
rolb
jnp
imul
ja
stos
and
popf
jmp
andl
adc
orb
leave
jbe
push
sub
xor
leave
imul
and
mov
addr16
lcall
mov
rcll
movsl
or
mov
std
push
repnz
sbb
add
and
jecxz
rcl
push
sbb
loop
popf
add
dec
cwtl
xchg
ret
xchg
cmpsl
mov
jb
pop
mov
cmpsb
ror
mov
mov
orb
jbe
enter
jmp
xlat
inc
cmc
es
lea
sbb
imul
jmp
mov
xchg
and
mov
dec
or
enter
loopne
shrl
fdivs
or
jmp
cmpsb
sub
fld
push
mov
lock
and
xchg
lahf
dec
mov
inc
rolb
je
clc
and
fstpl
mov
test
mov
lahf
adc
imul
push
lret
lods
cli
out
xchg
sbb
jne
mov
popa
mov
adc
ds
scas
bound
leave
jle
stc
std
fldl
cmpsb
inc
sbb
lret
jge
mov
test
adc
lds
insb
or
xor
push
mov
shrl
push
cwtl
stos
addr16
push
inc
std
aad
inc
in
xchg
xchg
xor
cmp
adc
dec
cmp
and
decb
adc
loope
mov
cwtl
or
pop
mov
cmp
hlt
aam
stc
mov
les
lret
inc
push
mov
mov
adc
leave
sbb
mov
stos
lods
or
pusha
in
mov
in
and
and
fcomps
out
push
add
or
push
cmpsb
jbe
sub
push
mov
mov
rorl
jecxz
data16
and
idivl
fs
xlat
aaa
inc
mov
mov
fldenv
mov
jbe
clc
push
jle
sub
and
add
bound
jb
sbb
pop
and
sbb
adc
xor
cmp
xchg
add
jbe
call
inc
dec
sti
insl
mov
add
and
ljmp
mov
les
pop
sub
xor
add
test
mov
push
mov
mov
jo
mov
and
das
sub
leave
aaa
adc
rcrb
negl
addr16
add
pushf
add
xor
xor
pushf
xchg
rep
or
ret
mov
lods
and
ja
sub
sarb
adc
addr16
fwait
mov
xor
xor
outsb
stos
cmpsl
outsl
movsl
add
xor
icebp
mov
sbb
out
pop
jecxz
push
call
and
xor
cld
stos
mov
addl
xor
in
fsub
pop
sbb
push
cmp
jne
jb
jmp
in
testb
jmp
andl
jae
pop
fcmovne
xchg
jb
scas
mull
add
pusha
pop
test
popf
mov
pop
xor
inc
add
imulb
enter
lret
insb
int3
test
cltd
stos
sub
loope
lret
int3
mov
jbe
stos
cmp
repnz
cmp
out
dec
xchg
mov
daa
in
push
mov
push
in
push
push
rcll
ret
int3
jmp
ss
push
jp
sbb
arpl
pop
rolb
sbb
int3
lret
scas
loope
cmc
pusha
int3
mov
aam
xchg
sub
mov
add
daa
inc
push
repnz
mov
xchg
cmp
push
fidivrl
jle
aaa
sub
iret
xor
add
imul
adc
push
imul
fcompl
lds
inc
jecxz
lahf
cld
push
adc
into
aas
stos
stos
mov
repnz
fnstcw
jns
insb
rolb
xor
daa
fnstsw
xorl
cmp
loope
xor
pop
arpl
in
cmp
xchg
cmp
add
fimuls
insb
loopne
xorb
inc
lret
dec
sarb
pop
out
sub
cmp
lds
nop
pop
ja
push
movsl
jo
push
add
and
repnz
out
sub
fisttps
mov
cltd
mov
dec
loop
xor
lods
adc
xor
sub
mov
jae
xor
or
inc
mov
pop
hlt
insb
pop
mov
sub
mov
enter
adc
sti
into
cld
sbb
shrb
or
add
and
shll
mov
imul
mov
popa
xchg
push
pop
sbb
sahf
mov
rclb
xor
inc
inc
mov
jne
mov
xchg
mov
fwait
stos
pop
xchg
jnp
sub
lock
es
leave
in
xor
nop
pushf
mov
imul
or
movsl
leave
ret
inc
xlat
lret
lods
xchg
shlb
pushf
adc
add
lds
pop
das
lock
clc
icebp
sub
lret
cwtl
adc
xor
jmp
movsl
add
jge
adc
shrl
fldl
mov
xchg
adc
fsubs
lea
orb
pop
push
mov
out
and
in
sub
add
xchg
mov
in
xor
or
arpl
ficoml
pop
jecxz
ja
jmp
cs
mov
aaa
das
xchg
sbb
dec
cltd
montmul
cmpsb
andb
jge
inc
clc
xor
adc
cmpsb
stc
addr16
xchg
xor
or
cmpsb
popa
push
lods
mov
jp
sbb
movsl
dec
test
push
insb
jecxz
xor
cmp
jle
push
dec
lret
push
fdivr
mov
jno
lahf
mov
xchg
dec
cmp
jnp
cmpsb
inc
addl
add
dec
sbb
mov
mov
jo
sub
push
fsubr
stos
shlb
daa
adc
ret
daa
adc
mov
out
fbld
enter
scas
and
mov
imulb
cmc
and
pop
cwtl
test
fisttps
ds
mov
xchg
shll
push
inc
stos
add
mov
test
cmpsl
lock
filds
aas
sub
popf
lds
enterw
xorl
push
xor
inc
cli
pushf
loop
jns
std
and
cmpsb
mov
stos
mov
sbb
out
and
hlt
push
aaa
push
xchg
ljmp
or
movsb
xchg
mov
hlt
jnp
lods
inc
aas
push
movsb
shlb
sub
aas
iret
cmpsb
insb
lret
fstpt
outsl
sbb
lcall
jmp
add
or
jmp
adc
and
jmp
popf
sub
ljmp
cmp
and
jae
testl
aad
push
or
fidivl
incb
sbb
incl
addr16
scas
mov
adc
push
popa
in
stc
xchg
xor
add
or
inc
jp
mov
out
push
add
movsb
push
jbe
pushf
js
jnp
or
push
out
daa
insb
andb
test
push
dec
jae
es
jno
push
dec
iret
movsb
insl
mov
sti
xchg
leave
push
lcall
out
mov
loope
shll
mov
stos
mov
je
pop
fisubl
cwtl
ret
loope
fdivp
sub
out
xchg
fisubl
adc
xor
imul
xchg
jp
repz
out
lret
and
mov
sti
mov
mov
mov
and
sub
stc
xor
xor
cmp
cwtl
and
jb
jp
mov
xchg
push
pusha
dec
loop
repz
rcll
movsb
add
xchg
mov
cmp
cmp
aad
push
addl
pop
mov
or
lret
adc
mov
pop
adc
mov
mov
push
jle
xor
ds
lahf
cmpsb
xchg
jns
xor
mov
ror
stos
pop
xor
ljmp
mov
jle
and
xor
movsb
or
ficomps
xor
movb
push
mov
cmp
filds
xchg
fists
imul
int3
imul
lods
push
cltd
inc
ficompl
mov
sahf
jo
lcall
dec
inc
jae
enter
adc
sti
adc
imul
enter
repz
xor
add
add
cmp
lods
jmp
jle
xor
lret
aas
in
add
mov
xor
cltd
out
push
pop
jmp
testb
ret
aas
imul
cmp
xor
cmpsl
fiadds
sbb
ds
xchg
repz
sti
mov
push
pop
repz
lods
mov
sbb
dec
sarb
sub
cs
push
cmp
sti
sbb
push
cmp
je
xchg
xor
add
enter
cmc
jbe
mov
sub
dec
fidivl
das
fldcw
fwait
mov
xchg
repz
inc
add
in
cmpsl
ret
sub
jbe
cli
out
add
xchg
into
scas
xor
add
aad
clc
jnp
dec
sbb
loop
xor
jno
push
push
mov
movswl
xor
ljmp
pop
jle
pop
popf
jp
sbb
out
clc
mov
dec
scas
in
in
jge
repnz
push
pop
add
test
mov
lret
out
movsl
mov
inc
outsb
sti
hlt
push
inc
push
mov
out
popw
adc
outsb
push
xchg
lahf
add
mov
in
adc
ja
jo
loop
sub
es
aad
xchg
mov
xchg
cmp
bound
icebp
and
enter
stos
lds
sub
sub
add
enter
loopne
scas
sti
adc
fwait
and
cmp
adc
inc
inc
fdivs
outsl
sbbl
adc
push
add
fdivrp
jo
mov
adc
fcmovnb
pusha
fwait
jecxz
jb
out
xorl
mov
inc
push
sub
imul
fsts
jge
jns
xchg
xchg
push
lea
sub
pmullw
call
mov
arpl
add
push
out
xchg
pop
cmp
pop
or
xchg
sbb
jbe
in
js
movsl
sbb
imul
jmp
lods
mov
pop
xchg
mov
adc
dec
push
aaa
cmp
mov
mov
xor
insb
mov
cwtl
aad
xchg
sub
xchg
dec
inc
sbb
cmpsb
orb
icebp
imul
mov
push
repz
roll
xor
bound
sub
inc
sbbb
dec
ss
push
mov
stc
aas
into
adc
mov
insl
push
xorl
sub
mov
addr16
je
add
push
adc
or
add
outsl
scas
cld
cmp
push
in
cmpsl
sbb
sbb
jge
aaa
jp
sub
mov
fisttpl
xchg
popf
add
imul
cli
stos
push
loopne
mov
dec
adc
iret
adc
mov
mov
mov
push
stos
aas
mov
and
adc
sub
sahf
icebp
add
sbb
sub
rol
xor
cmp
xor
or
jae
lahf
or
scas
data16
inc
das
sub
or
mov
dec
ljmp
cmp
sub
inc
jmp
mov
sbb
inc
ds
pop
out
sub
dec
fldcw
xchg
call
addr16
jb
rcrb
mov
sti
icebp
or
daa
and
sbb
in
roll
stc
or
push
mov
scas
cmp
repnz
sbb
xor
andl
mov
jbe
sub
data16
cmpl
mov
add
aas
mov
pop
scas
fnsave
mov
sarl
rclb
mov
aas
xlat
dec
ret
pop
push
mov
dec
push
push
inc
mov
scas
dec
add
adc
and
xchg
cwtl
mov
movsl
lock
mov
fnstsw
in
and
fistl
mov
add
sub
mov
xchg
test
seto
popa
popl
stc
outsl
out
test
cmp
ja
lret
sbb
mov
sub
dec
test
lock
cmp
mov
sbb
adc
add
mov
or
push
pop
sub
ja
loop
insb
divb
and
jbe
or
adc
xor
sub
dec
icebp
jle
jmp
jg
subb
inc
xchg
xchg
dec
pop
mov
xor
stos
push
cmpsl
cmp
pop
sub
fs
movsb
shrb
dec
mov
pop
xor
jecxz
sub
xorb
sub
xor
je
ret
mov
push
xor
xor
push
ss
call
mov
sbb
shr
or
adc
push
popf
mov
cmpsl
pop
push
test
iret
shll
jecxz
mov
std
pop
pop
sahf
addr16
mov
push
cld
xchg
repz
sti
jnp
enter
loop
movb
test
in
sub
push
repnz
out
xchg
mov
in
inc
pop
ret
sbb
mov
jnp
add
cmc
dec
test
mov
cmpsl
cmp
gs
sub
xor
movsl
mov
mov
rcr
mov
clc
ss
pop
cmc
std
mov
test
clc
outsl
jge
push
mov
stc
lret
pop
es
mov
cmp
jo
sub
adc
lret
lods
adc
pusha
dec
adc
cs
or
add
xchg
into
mov
mov
sbb
jle
outsl
into
inc
in
push
data16
push
stos
xchg
xchg
stc
icebp
in
popl
pop
iret
xchg
js
cmp
dec
mov
mov
lret
pop
mov
add
arpl
xorl
clc
outsl
fimull
pop
cmc
fidivs
icebp
in
lret
jae
inc
pop
add
insl
mov
fildll
imul
dec
leave
sub
data16
sbb
sbb
mov
andl
cld
lods
cmpsl
jno
inc
mov
xchg
cmovg
lret
jmp
pop
adc
or
lock
ja
and
sbb
cmp
push
mov
fnstenv
in
xchg
xor
mov
loopne
lret
insl
push
std
jae
add
lcall
insl
jp
stos
stos
add
iret
cs
arpl
jmp
pushf
aad
adc
xlat
jne
mov
nop
xchg
cmp
pop
test
movsb
sar
mov
and
aad
sub
mov
push
push
std
push
or
inc
jmp
ljmp
dec
pop
push
iret
push
imul
push
loopne
sub
mov
push
xchg
or
fisubrl
decl
dec
mov
dec
pop
ficomps
ss
push
outsl
jle
mov
call
pop
sbb
or
push
jnp
cmp
sub
je
add
mov
mov
dec
divb
stc
call
dec
cs
sahf
lahf
shll
ja
ljmp
jne
lret
or
pop
sbb
outsb
or
add
mov
fistps
add
lds
push
aad
addr16
xlat
push
dec
xchg
xlat
jl
stc
ljmp
jecxz
or
or
mov
aam
cmp
test
xchg
xchg
dec
gs
lods
leave
push
pop
sbbb
push
mov
push
add
sub
mov
add
jg
jmp
sar
xchg
xchg
xchg
cld
mov
and
inc
fisubrs
jmp
lds
clc
stos
xchg
and
mov
jo
xor
mov
add
movsl
xor
mov
dec
sbb
fistpll
subl
lds
fidivrl
cmpsb
adc
add
insl
jp
sbb
fs
xchg
fldt
fcmovnbe
lret
loopne
xchg
loop
sub
or
jnp
lret
cmp
push
lods
cltd
xlat
loop
sub
add
dec
jp
push
test
jnp
and
xchg
ja
cld
ja
sbb
loope
aaa
fidivrs
xor
push
in
outsb
pusha
add
out
sub
push
mov
aad
and
jne
fcmove
mov
inc
aaa
adc
lcall
aaa
mov
or
les
add
in
cmp
cmp
lret
or
xchg
ljmp
pop
and
iret
int
push
inc
xorl
ja
lahf
push
rcl
inc
loopne
or
mov
adc
jge
jmp
mov
ljmp
add
pop
arpl
aam
push
loope
pop
into
inc
call
jne
pop
pop
cmpsb
or
std
clc
jnp
in
fdivs
mov
cs
pop
push
jmp
push
push
xchg
sbb
js
cmpl
mov
xorl
out
mov
test
adcb
xor
int3
jp
push
mov
lret
rcl
in
push
fnsave
and
fsubrs
scas
scas
mov
mov
push
popa
jo
cmp
mov
fbstp
lret
ret
dec
std
ficomps
outsl
bnd
leave
aad
lahf
push
cmp
inc
lret
out
psubb
negb
xchg
loop
fsubs
xchg
fwait
xchg
ret
xorl
pop
lea
xchg
fsubs
sub
mov
mov
lahf
jp
leave
out
leave
xrelease
mov
jmp
adc
jne
loopew
jle
aaa
loopne
adc
and
fiaddl
js
cmc
dec
mov
outsb
nop
mov
movsl
mov
mov
add
xor
aaa
lds
cmpsb
sub
bound
push
add
push
cmp
ja
stos
loop
pop
ss
fdiv
cltd
fdivr
ljmp
dec
add
mov
pop
lret
popf
or
out
push
inc
daa
ret
sub
mov
paddw
dec
pop
pop
rolb
fidivrs
inc
dec
divl
push
sti
fsub
xchg
shrb
lock
iret
es
jmp
jae
arpl
sbb
popf
call
shl
xor
dec
add
sub
push
xchg
leave
adc
sbb
std
inc
fcmovnbe
loope
push
pop
mov
jg
fnstcw
push
mov
imul
xchg
mov
jg
or
push
push
lods
flds
push
sub
jmp
cmp
loopne
scas
mov
ljmp
add
cmp
ret
es
pop
mov
jmp
sub
repz
stos
push
or
push
iret
lahf
add
inc
cmpsb
inc
loope
cli
push
sbb
xchg
sti
mov
loop
fsub
jmp
cs
push
lret
jno
sub
lock
jmp
dec
scas
out
aas
sbb
sub
daa
mov
jmp
or
xor
pop
ja
add
mov
adc
or
jbe
js
sub
cwtl
lea
pop
in
rcrl
mov
loop
jne
loopne
lret
mov
pop
bound
aam
sbb
cli
jp
pop
mov
sub
push
aam
or
sub
popf
fmull
sbb
fcoms
jb
sub
es
outsb
movsl
das
jb
lahf
arpl
xor
pusha
add
mov
push
add
or
jne
in
add
insb
test
cs
ja
roll
test
xor
xchg
xchg
sbb
and
imul
pop
xor
or
ljmp
push
xor
pop
sub
imul
test
popa
mov
jb
out
inc
out
push
or
imul
sub
lds
cld
aas
xchg
shll
test
xchg
call
inc
inc
mov
sbb
mov
das
sbb
jbe
mov
jno
adc
ss
mov
sti
inc
out
dec
pop
test
mov
xchg
mov
xor
enter
dec
mov
in
jae
pop
les
lock
call
imul
inc
shll
aas
sub
mov
xchg
cmp
test
sbb
ds
movsl
and
xchg
adc
sbbl
sbb
dec
stc
pushf
sub
stc
ficompl
push
dec
add
ret
lods
lcall
fidivrl
arpl
lea
cmp
push
iret
js
cmpsl
push
hlt
ret
cmp
imul
xor
into
lea
insl
dec
xor
bound
lods
or
mov
lcall
icebp
add
push
dec
inc
mov
cmp
pusha
jbe
jg
mov
insl
retw
push
clc
icebp
sub
xchg
outsb
pop
pop
enter
cmp
push
sbb
sar
push
ds
mov
fwait
insl
out
pushf
or
pushl
push
sbb
inc
in
cs
jmp
out
in
xchg
cli
mov
xchg
imul
sub
dec
xchg
loop
xlat
outsl
sub
loopne
add
jmp
adc
push
test
dec
pop
fidivs
pop
addr16
xor
mov
rcll
adc
and
dec
inc
jecxz
ljmp
das
xchg
mov
or
nop
cmp
sub
rcrl
testb
lods
jae
es
push
dec
jecxz
mov
mov
lea
adc
or
sub
jb
sub
mov
popa
fs
pop
out
xor
movsl
mov
fdiv
cs
adc
sub
nop
sbb
mov
xlat
sub
add
cmpsb
imul
add
outsb
xchg
push
jno
test
jb
xchg
inc
imul
in
cmpb
xor
jae
adc
jecxz
adcb
inc
movb
lcall
aaa
cmpsl
insl
xchg
icebp
das
sub
loope
mov
clc
jae
daa
arpl
pop
out
lods
cmp
mov
pop
inc
push
mov
jae
in
std
push
dec
mov
aam
cs
popa
add
cli
adc
pop
push
push
lock
aad
sbb
aam
push
fldt
cld
inc
dec
aad
shlb
mov
hlt
sahf
outsb
jnp
push
clc
lcall
bnd
adc
outsl
lcall
test
aam
push
mov
fldl
adc
adc
mov
push
xor
test
psrlq
push
push
jg
sub
jecxz
and
loop
addr16
out
mov
jmp
call
push
add
cmp
xor
lret
cmp
fadds
mov
mov
in
imul
jl
inc
popl
repz
loop
fisubrl
cmp
sub
lock
sbb
pop
cli
xchg
cmp
inc
xchg
ja
mov
cmovg
cltd
dec
lods
cmp
xlat
jp
rorb
add
sub
or
jecxz
lods
pop
pop
fcompl
jbe
pushf
ljmp
jecxz
out
mov
sub
aaa
push
lret
and
pushaw
sub
sarl
out
mov
sub
cmpl
clc
xchg
cmp
mul
mov
pop
jae
loope
js
nop
test
sarb
mov
mov
lret
lds
cmpsb
mov
sub
xchg
xor
scas
fimuls
or
add
stc
lret
and
pop
addr16
pop
inc
sub
push
pop
mov
shll
inc
pop
mov
leave
cmp
cmp
por
shl
movb
add
mov
jp
pop
les
and
push
ret
int
adc
fiaddl
lock
inc
push
clc
idiv
mov
fldt
cltd
sub
mov
jg
cmp
cmp
fistl
into
inc
lret
lret
ret
les
xchg
out
and
and
add
ja
dec
les
subl
mov
add
jne
pushf
hlt
push
mov
jne
notl
sub
adc
stos
daa
add
or
mov
adc
add
arpl
test
stos
push
daa
popa
int
lds
cltd
cmp
ss
add
xchg
fwait
orb
scas
jmp
mov
outsl
mov
or
mov
enter
mov
inc
sahf
mov
sahf
rorb
xchg
in
aaa
sti
ds
sbb
push
mov
inc
push
movsl
pop
in
push
popa
pop
lahf
leave
stc
fisubrs
sub
push
sub
and
push
adc
shlb
sub
jle
push
cmp
decb
sub
lret
clc
xchg
jmp
out
lret
cmp
mov
icebp
mov
dec
mov
inc
pop
insb
push
popf
lods
movsl
out
and
push
add
dec
mov
lahf
mov
lahf
pop
sarb
lods
mov
cwtl
inc
push
cld
dec
mov
and
paddusw
dec
lods
std
out
fistpl
mov
mov
sub
sub
dec
in
mov
sbb
xchg
cmp
sbb
mov
movsl
sbb
mov
xchg
ret
xchg
pop
fistpll
jb
mov
cmpsb
sti
jno
push
or
aad
jne
adc
jmp
cmpb
jle
xor
xchg
adc
outsb
lods
xor
and
or
jmp
rcll
inc
mov
jns
inc
push
dec
cmp
pop
call
jl
or
xchg
or
inc
out
add
stos
stos
hlt
popf
sbb
test
mov
and
push
inc
add
jb
adc
testb
mov
movsl
sahf
mov
add
adc
push
test
sar
add
and
fsub
and
mov
sbb
or
loop
out
xor
sbbb
adc
mov
jp
cmp
dec
in
ljmp
scas
sub
xor
fildl
pop
stos
inc
fdivr
and
test
push
pop
or
in
insl
rclb
fmul
call
das
mov
or
xor
add
imul
out
jl
adc
mov
insl
mov
adc
push
test
and
jns
xchg
out
xor
cmp
stos
cli
fs
fbstp
adc
push
or
push
jno
jle
stc
cld
pop
std
add
dec
ds
push
das
cmc
xchg
int
mov
data16
adc
push
xor
mov
inc
mov
test
sbbl
add
out
ret
cmp
jmp
mov
mov
mov
out
shrl
mov
push
dec
push
pop
les
sub
test
loopne
sti
mov
ficompl
jl
ret
movsl
scas
cmp
mov
loopne
dec
outsb
add
dec
and
jle
out
xchg
clc
cmp
cmp
enter
dec
cmp
pop
repz
fisttpll
fadds
xchg
addr16
xchg
repz
push
jo
sbb
push
dec
js
dec
repnz
fld
fnstcw
mov
sbb
fbstp
add
jge
sahf
and
addr16
out
push
fildl
fwait
push
add
xchg
outsl
out
out
pop
cli
sbb
or
or
arpl
aad
cmc
movsl
fbld
jle
fs
mov
mov
mov
mov
rol
add
cwtl
pop
mov
adc
inc
int3
ror
mov
mov
mov
cwtl
bswap
mov
fwait
sti
in
push
aam
jns
jno
fnstcw
pop
inc
rorl
push
pop
adc
cmp
jae
dec
sti
andb
bound
xchg
pop
test
stc
jmp
mov
shlb
xor
push
adc
arpl
jb
jbe
daa
xchg
add
stos
dec
aaa
push
movsb
cmp
pushf
push
cwtl
stos
push
xchg
test
ret
or
sub
in
xchg
sub
or
sbb
ds
cld
mov
daa
pushf
rcrb
xlat
stc
xchg
out
mov
loopne
sub
into
dec
jnp
push
in
fptan
cmp
add
cwtl
xchg
add
addr16
xchg
iret
insb
insb
xchg
outsb
mov
add
hlt
push
fildll
cmp
and
jmp
clc
dec
pop
cmpsb
test
daa
xchg
andl
sbb
incb
ficoms
mov
test
popf
xor
rclb
fiadds
mov
pop
jns
incl
jno
xor
out
fdivs
mov
je
adc
adc
lret
imul
push
lret
aam
jg
dec
jmp
rolb
rolb
or
sbbl
inc
shl
btc
aaa
test
pop
adc
pop
cmp
mov
inc
outsb
stc
sbb
aad
jmp
cmpsb
and
aas
mov
dec
dec
shll
sub
mov
add
cmp
cmp
hlt
dec
shrl
pop
xor
adc
dec
leave
xchg
ror
mov
lret
adc
fdiv
adc
xor
mov
sarl
sbb
idiv
lret
push
enter
jae
push
xchg
sbb
movsb
jmp
jp
push
in
cmc
dec
mov
jb
sbb
orl
sar
cmpsl
sbb
lahf
js
sbb
or
xchg
jmp
les
pop
out
mov
mov
fildl
mov
in
in
jns
fmull
xor
pop
fsubl
int
xchg
fcomp
movsb
loop
roll
jg
sbb
es
lret
xchg
jmp
push
gs
pop
cmpsb
lds
sub
xchg
std
int
mov
sahf
xlat
mov
cmpsb
jae
imul
and
jo
inc
mov
cld
les
add
imul
pop
push
fimull
adc
cmc
push
dec
xor
push
jmp
sbb
sub
cwtl
fwait
xor
lea
mov
aad
adc
aad
dec
adcl
divb
jecxz
jo
cmc
cli
inc
aam
and
cmp
idivb
xor
sub
xchg
jecxz
xchg
jns
mov
pop
sub
or
mov
mov
ficompl
sub
cwtl
js
adc
repz
or
dec
data16
pop
cmp
ja
cmp
xlat
mov
fbld
adc
int3
fsubr
sub
popa
cmp
subl
dec
leave
mov
out
stos
fstps
dec
sbb
push
xor
imul
xlat
movsl
and
in
jae
sbb
test
pusha
and
clc
mov
stos
adc
mov
jle
clc
stos
inc
mov
cmp
mov
add
aad
shlb
lret
mov
test
inc
ds
jl
adc
cmp
mov
mov
fisttps
jmp
dec
push
adc
test
cwtl
inc
rorb
shll
bound
aad
xchg
pusha
fldl
lods
mov
jg
add
cmpsb
sub
inc
fnstsw
dec
rclb
xorb
mov
in
jo
adcb
mov
lock
sbb
into
in
or
adc
outsb
pop
lcall
scas
aam
mov
hlt
outsb
mov
push
pop
push
inc
dec
lock
lds
outsb
add
xor
es
push
popa
jne
aam
and
test
fnstsw
push
addr16
fsub
fwait
cmp
cmp
mov
out
cmp
cmpsl
and
hlt
sbb
cmc
pop
mov
pop
iret
mov
je
gs
inc
mov
push
adc
dec
push
ret
cwtl
nop
cmc
enter
add
fsubs
add
mov
mov
test
adc
cmpsb
out
cld
ds
popf
jae
repz
out
push
inc
adc
in
loopne
mov
xor
sub
test
movsb
xchg
inc
mov
jmp
arpl
ret
and
xor
call
rolb
cmc
mov
jb
sbb
mov
rolb
sub
call
and
gs
test
adc
adc
push
fucomp
or
inc
es
subb
lret
jge
aad
test
mov
dec
adc
pop
xor
push
rcrb
das
bound
xor
testb
lock
sbb
aad
add
lcall
pop
rol
cmp
out
ja
mov
ljmp
sub
mov
insl
out
int3
push
adcl
popa
sub
pushf
fldt
and
inc
data16
jb
mov
adc
jb
roll
hlt
in
add
push
mov
test
sub
cmp
lock
movsl
sub
test
mov
mov
push
jmp
insl
call
dec
xchg
test
fnstenv
jle
jmp
push
dec
xlat
cs
add
jo
push
call
test
add
movsb
push
pushf
push
inc
test
lds
notb
push
mov
add
or
outsb
xchg
cmp
aad
test
sub
adc
adc
repnz
xorb
movsb
jle
aas
xchg
mov
add
call
or
adc
stc
je
inc
insb
cmp
jl
ja
jmp
xchg
popa
lcall
lret
or
lea
popf
shl
cmp
push
ja
pop
adc
mov
test
in
sub
das
add
repnz
ja
lret
test
and
in
mov
cmpsb
stos
push
and
ret
sbb
pop
clc
in
cmpsb
test
in
push
add
xchg
lds
shll
cmc
or
push
test
fmuls
mov
pminsw
xor
inc
or
out
jmp
aaa
xchg
mov
movsl
addb
inc
stos
ret
lret
inc
xor
mov
fdivrs
sarl
inc
dec
push
add
inc
mov
and
sbb
hlt
addr16
scas
aaa
fldt
mov
pop
subl
cmp
iret
sbb
scas
add
push
dec
pop
inc
fndisi(8087
insb
push
or
sbb
enter
bound
popf
test
out
adc
subb
jg
scas
add
fistpll
dec
insl
subl
stc
mov
xchg
jp
push
add
outsb
bound
xor
loope
repz
icebp
fcom
jecxz
in
mov
loopne
cmp
mov
cwtl
loope
imul
fcom
in
sub
sbb
jmp
aad
test
ret
mov
rcrl
dec
inc
scas
adcb
stc
dec
dec
push
fildl
mov
push
pop
jmp
js
mov
out
lwpval
push
mov
stos
push
decb
int
inc
cmp
pop
push
pop
adc
xor
add
insb
sub
mov
cmpsl
in
mov
sub
dec
xor
dec
dec
das
movsb
cmp
ja
jnp
scas
rorl
sbb
cmpsb
adc
test
mov
xchg
adc
cmp
inc
xor
addr16
cltd
or
mov
rcll
fnstcw
push
stos
std
stc
aam
ror
lea
add
movsl
int
mov
aad
sbb
stos
lcall
jno
lret
js
jbe
pop
in
xchg
push
jmp
aaa
mov
cmpsb
mov
cmpsl
lods
cltd
xor
jae
dec
movsb
push
outsb
jne
imul
in
sbb
cmpsb
int3
rol
pushf
push
jecxz
div
xor
xchg
mov
sbb
bound
sub
jns
addr16
fucomi
testl
and
xor
ljmp
push
or
or
aam
testl
nop
jnp
pop
lods
movsb
or
dec
notl
pop
mov
les
popl
mov
jae
test
fidivrl
seta
sbb
mov
xlat
jbe
fwait
cmp
mov
testl
rcl
or
out
pop
stos
jno
push
mov
bound
mov
xor
xchg
adc
adc
test
mov
int
push
aad
sub
jle
xchg
xchg
sbbl
jnp
test
fsts
stos
data16
push
xor
mov
or
pop
das
cltd
and
mov
subl
cli
xchg
mov
push
lods
mov
inc
sti
mov
insb
xchg
mov
or
rcl
sbb
mov
in
mov
das
stos
ficomps
push
lret
sub
rcl
lock
sbb
loope
loope
jecxz
push
movb
xchg
sbb
mov
out
push
or
lret
lret
jecxz
daa
or
inc
mov
fcoml
in
stc
insl
out
lret
mov
test
popa
lock
lcall
movsl
sti
jae
repnz
pusha
xor
and
xor
xchg
pop
out
loopne
out
lds
mov
js
out
or
xor
dec
xor
fwait
dec
pop
mov
daa
jbe
out
push
sub
loop
roll
into
jno
inc
pop
jo
cwtl
mov
and
stos
ret
mov
and
cld
test
inc
xchg
gs
push
push
mov
sarl
popa
out
mov
jl
adc
mov
push
test
std
jo
nop
xchg
sub
sub
xor
sub
fs
sbb
xor
dec
or
mov
insb
mov
sahf
rcr
loope
xor
push
lahf
lret
cmpsb
jbe
or
dec
xchg
lahf
das
popa
repz
push
add
push
or
mov
repz
sub
dec
cltd
sub
lods
lahf
push
adc
push
mov
popf
idiv
pop
rol
cmpsl
jmp
push
xor
xor
ljmp
pop
fmuls
into
call
xchg
cmc
ret
mov
sbbl
fimuls
pushf
vpshad
xchg
jge
sub
sbb
nop
push
mov
mov
outsb
add
pop
jg
pop
addl
cli
lcall
or
cld
push
jle
ret
das
neg
jle
aas
dec
repnz
mov
shl
jl
repnz
in
sub
add
lock
cwtl
idiv
add
iret
push
sbb
call
lret
lret
popl
sub
out
movb
fs
mull
lock
dec
jbe
movsb
mov
insb
mov
pop
sbb
add
add
ret
sub
jle
xor
test
add
or
out
das
mov
arpl
in
mov
test
repz
es
fmuls
jmp
xorl
clc
fldt
pop
sub
and
in
outsb
call
lcall
mov
mov
in
cmp
mov
cltd
adc
bound
adc
mov
test
mov
jns
sbb
and
cmp
sbb
fnstenv
mov
adc
sub
xchg
gs
push
mov
push
rcl
push
ljmp
pop
lret
das
leave
jb
stos
ljmp
imul
fmull
test
sarb
iret
pushf
pop
loopne
in
repz
mov
jae
data16
test
jp
sahf
mov
call
cwtl
xchg
fisttpll
xchg
dec
fwait
insl
ja
arpl
mov
jae
sbb
loop
fxch
cs
les
sub
cmpsb
adc
add
mov
roll
fsubrs
jge
mov
xor
outsl
psubb
pop
ljmp
sbb
int3
leave
push
test
movsb
fisubl
xchg
sti
test
nop
stos
push
repz
cltd
pop
inc
daa
nop
cmp
cmc
xor
shrl
pusha
call
das
ror
shrl
push
pop
imul
adc
inc
loopne
mov
sub
add
or
xchg
aaa
cmp
pop
and
pop
fmuls
cs
in
std
mov
fs
fstpt
int3
ss
popf
inc
dec
push
sbb
insb
into
xlat
cmp
cs
rcrb
lods
add
fdivs
mov
rcll
or
sub
xchg
cmp
arpl
and
out
mov
pop
cli
adc
pop
mov
mov
and
sarl
inc
mov
push
jno
insl
jo
add
in
jg
adc
mov
adc
mov
mov
pusha
test
int
leave
xchg
xor
adc
movsl
shll
out
adc
mov
xchg
fs
les
jle
stc
ja
int
lahf
stc
adc
stc
clc
lret
mov
lret
or
orb
arpl
cmp
pop
xlat
clc
mov
mov
pop
das
pusha
out
ja
mov
and
test
fidivrl
jb
inc
aad
in
pop
gs
ret
in
testb
cmpsl
fcompl
and
add
lret
mov
sbb
lret
mov
inc
decl
sbb
push
fsubl
xchg
pop
push
lods
cld
mov
mov
mov
rolb
cmpsb
test
decl
xor
jmp
stc
lods
arpl
loope
adc
dec
cmp
aad
lods
fwait
mov
aas
sbb
sbb
sarl
insl
sub
insl
imul
test
addb
cmp
jge
pop
inc
sub
jae
fdivp
adc
negb
push
js
aas
xchg
scas
dec
xor
jnp
mov
inc
push
cld
adc
lods
adc
dec
and
shll
pop
push
jge
mov
fisttps
xor
xchg
cltd
insb
dec
cmp
add
mov
scas
jmp
setg
xor
std
push
sub
cltd
pushf
mov
popa
shlb
xlat
sub
shll
inc
les
mov
gs
decl
fucom
jl
dec
ds
pop
pusha
add
fs
sub
push
xchg
sub
repz
push
es
or
out
imul
dec
pop
xchg
mov
mov
inc
xchg
mov
outsb
lahf
sub
push
out
jmp
scas
xor
push
jle
jle
dec
mov
push
dec
add
loop
std
jnp
push
xchg
sbb
aad
dec
mov
jmp
test
mov
xor
jne
and
insb
push
pushf
or
test
repnz
sub
cmp
cmp
jp
test
jg
mov
cmp
rorl
xor
clc
popf
xchg
cmpsl
mov
stos
push
xor
pop
out
and
sub
push
pop
mov
movsb
ficoml
sbb
pop
sub
sub
and
aam
pop
mov
aad
sbb
aad
sarb
testb
jno
outsl
lods
mov
xchg
jno
pop
aad
fnsave
cmp
inc
aas
and
fcompl
and
pop
mov
mov
fcmovu
ficomps
daa
xor
cmpsb
bound
inc
cs
or
into
iret
ds
enter
xor
orb
add
add
xchg
mov
sub
dec
sbb
xorl
push
sbb
dec
push
lea
int
in
pop
xor
mov
stc
sub
cmpsl
dec
mov
daa
push
pop
push
in
jns
pop
or
popa
aaa
xchg
mov
mov
test
stos
fistps
pop
imulb
mov
in
jg
inc
sbb
adc
and
movsl
dec
cmpsl
and
push
mov
jno
js
insl
pop
pop
mov
ret
add
icebp
or
push
cmp
mov
pop
das
pop
scas
jno
jmp
xchg
cmp
lret
xchg
test
dec
or
pusha
cmp
add
mov
popa
arpl
jmp
sub
outsl
ds
xchg
into
sub
adc
into
add
xor
xorb
cmp
dec
scas
xlat
ss
sbb
sbb
out
test
rcll
call
mov
inc
sub
out
xor
leave
mov
pop
xchg
pop
aad
xchg
mov
daa
dec
popa
xchg
out
pop
add
push
cmp
test
jl
jg
cmpsl
mov
addr16
adc
repnz
rorl
leave
ret
and
jecxz
xchg
scas
sbb
insl
mov
xor
jne
sub
mov
loope
ss
xlat
push
cmp
adc
cmp
dec
mov
repnz
out
dec
jbe
popf
xchg
lods
mov
cld
enter
sub
call
inc
aam
dec
rol
cmpsl
stos
sbb
pop
loop
cmc
and
out
mov
mov
dec
xor
subb
dec
cmc
int3
mov
jmp
xor
sbb
jmp
mov
mov
ss
jno
mov
jp
cmp
test
jnp
inc
add
cs
mov
icebp
cs
jae
in
int
mov
jg
stc
add
jl
les
inc
iret
jg
push
or
push
cmpsl
inc
mov
cmp
jbe
popa
cmp
in
movsb
fbstp
or
stc
jae
into
fwait
int3
xor
out
dec
iret
gs
arpl
test
add
dec
sub
sub
jno
into
out
mov
mov
imul
subb
inc
lcall
or
les
jp
dec
jmp
pop
xorb
scas
mov
cld
movsb
pop
pop
adcb
stos
dec
mov
clc
mov
dec
and
test
stc
mov
scas
push
push
jp
out
jle
mov
jecxz
xlat
add
dec
pusha
sbb
jl
xchg
clc
inc
aad
dec
add
or
movsb
out
ret
loop
push
ljmp
add
fcomps
and
std
sbb
xchg
in
add
dec
xchg
add
pop
sub
cwtl
in
pushf
cmc
lods
mov
push
mov
mov
mov
pushl
jle
xor
inc
mov
dec
mov
bound
sbb
rorb
lods
addb
push
cmpsb
idivb
hlt
xlat
mov
pop
in
jecxz
lret
das
or
icebp
push
dec
test
xor
arpl
xchg
outsl
cmpsb
mov
mov
in
mov
mov
rcl
jge
fidivs
fwait
and
aas
sub
cmp
or
fisubl
pop
stc
mov
fbld
inc
aad
pushf
cmp
out
push
hlt
call
fisttpll
and
mov
jb
push
add
push
test
inc
and
outsl
mov
cltd
adc
mov
js
js
jne
out
ljmp
adc
pop
fcomps
arpl
mov
xor
sbb
xor
in
ret
stos
sub
and
test
and
adc
xor
in
mov
jb,pt
adc
pop
clc
and
sub
insb
sbb
push
push
cmp
sub
inc
lahf
xor
mov
jnp
jecxz
out
iret
sub
divl
fcompl
jb
into
subl
sti
push
loop
sahf
inc
push
push
aad
scas
aaa
fs
enter
testl
mov
pop
int
movb
cmp
aaa
shrl
sub
popf
inc
dec
hlt
pusha
mov
fwait
xchg
mov
jl
cmp
incl
sti
shr
xchg
mov
inc
cld
repz
or
sub
mov
add
cmpsl
test
mov
mov
imul
xor
aam
inc
cmp
dec
add
jmp
xor
push
sti
repnz
test
mov
ret
into
mov
mov
subl
push
mov
pop
fdivrs
inc
pop
xor
bound
enter
sbb
push
push
hlt
dec
xchg
nop
xlat
out
xchg
inc
sub
and
mov
mov
adc
adc
lret
lock
sahf
test
fists
test
jb
jns
stos
in
and
xchg
out
rorb
or
inc
push
insb
sub
mov
fcoms
cwtl
inc
imul
ss
into
fcomi
pop
stos
clc
pop
sti
out
je
fcmovne
xchg
je
adc
inc
xchg
es
mov
pop
cmp
mov
out
inc
lods
repnz
daa
pop
pushf
mov
push
sbb
mov
xchg
sbb
mov
jmp
mov
xchg
cmp
jge
mov
inc
movsl
lods
out
jp
cmp
test
test
and
call
jnp
cmc
mov
jbe
lods
cmp
inc
imul
xor
outsb
nop
mov
call
daa
xchg
pushf
sub
fistpl
mov
out
dec
insb
pop
jge
mov
xor
scas
mov
sbb
pusha
xchg
outsb
pop
xor
repnz
adc
pop
push
add
rcrb
pop
sahf
push
pusha
or
add
movsb
mov
dec
ljmp
fs
rcl
mov
lds
movsl
fdivl
fdivr
dec
or
insl
inc
lods
in
in
jle
inc
sub
fwait
add
inc
das
fst
call
xor
out
test
ret
jl
aas
cli
xchg
push
aam
cmp
inc
cmp
cmp
push
ljmp
jmp
adc
mov
ljmp
gs
dec
movsl
lods
arpl
xchg
sub
mov
divl
add
jnp
stos
jmp
sub
mov
jb
ss
sbb
pop
jb
xorb
mov
paddsw
push
lret
xor
in
dec
loop
inc
adc
sbb
pop
or
in
fcmovbe
je
mov
imul
jmp
mov
stc
imul
sub
mov
mov
add
mov
adc
pop
sbb
mov
sbb
xchg
test
xchg
cmp
out
adc
test
pop
aaa
outsb
divl
stos
in
jmp
lcall
inc
xchg
ds
adc
and
adc
push
dec
fdivrl
test
cmp
sbb
or
jnp
jae
push
fdivl
andl
int3
sub
lret
mov
fistpl
clc
mov
or
mov
xor
test
jmp
fst
and
loope
cmp
adc
test
xor
mov
xor
xchg
aaa
fsubrl
pop
in
push
cmpsb
inc
mov
jg
lods
fstl
stos
scas
arpl
insb
scas
pop
sub
add
pusha
lods
push
daa
jo
sub
cltd
enter
or
adc
mov
inc
add
push
xchg
sbb
xlat
xor
pop
mov
cwtl
fdivs
or
xchg
movsl
out
or
mov
mov
mov
mov
or
jecxz
fstpl
fcomps
loope
das
movsl
test
fiaddl
mov
push
push
insb
rcl
sar
lods
xor
pop
test
cmc
mov
int
mov
std
sub
or
and
sub
jge
push
maskmovq
sub
sbb
or
lock
mov
out
dec
pop
mov
adc
cld
imul
popa
loop
and
push
sti
xor
fcmovnb
out
push
xorb
mul
out
daa
sti
xchg
or
inc
jns
arpl
mov
insb
std
xlat
cmp
ror
aam
or
popa
rcrl
push
sbb
push
mov
inc
imul
mov
push
xchg
daa
adc
arpl
cmp
les
xor
and
gs
sub
scas
fimull
sbb
rol
inc
lret
jae
andb
xor
daa
mov
sbb
push
xchg
adc
sub
sub
xchg
cmpsb
xchg
sub
lcall
pop
test
cs
mov
aaa
mov
jno
adc
movsb
push
sti
xchg
pop
aam
and
in
sub
add
fldt
or
shrb
loopne
es
dec
mov
sbb
or
xor
imul
out
sbb
jne
fsubrs
pop
adc
sbb
xor
repz
ljmp
inc
push
shl
xor
mov
dec
push
imul
or
xor
es
mov
rorb
es
mov
data16
sub
clc
jecxz
enterw
xlat
clc
pop
loope
mov
mov
pop
aaa
xchg
push
loopne
insl
ret
leave
arpl
mov
xchg
and
movsb
jnp
fldpi
pushl
in
adc
sub
mov
jb
sbb
lods
jmp
sahf
repnz
cmp
lret
cmp
ljmp
push
in
adc
aaa
lret
pusha
lret
mov
mov
or
or
fsubrs
or
add
push
test
add
aad
or
je
es
jp
repz
lret
adc
cmp
add
cmp
mov
inc
pop
fs
sbb
jns
outsb
jl
jecxz
popa
jp
xchg
jne
jg
in
outsb
repz
jne
push
xor
sub
mov
mov
pop
int3
xchg
or
push
push
lods
xchg
inc
leave
out
stos
in
imul
ds
ss
xor
or
loopne
icebp
xchg
mov
xor
subl
xor
or
dec
stos
das
and
stos
xchg
rcrl
jbe
inc
jae
or
call
lret
mov
test
sarb
out
mov
mov
mov
sbb
mov
jns
mov
loop
push
and
push
jnp
shlb
pushf
mov
and
testb
lcall
mov
jle
and
data16
jmp
pop
notb
push
dec
loope
fistps
add
aaa
out
shrb
lahf
jo
sub
inc
out
jo
xchg
mov
jl
and
inc
mov
mov
lret
push
cmpsl
call
mov
or
xlat
jb
inc
dec
scas
jbe
push
out
jg
cmp
push
imul
push
adc
mov
jmp
das
add
cmpsb
imul
sub
mov
mov
push
in
roll
dec
popa
and
mov
aad
scas
lret
in
push
inc
jb
dec
adc
inc
les
mov
ljmp
repnz
fists
sbb
mov
or
lods
fstpt
xor
xchg
push
loope
jmp
test
test
ljmp
lcall
loope
ljmp
ss
pusha
xchg
or
fidivrl
leave
dec
aad
inc
add
mov
jmp
cltd
adc
and
scas
lret
insb
jmp
inc
les
push
sahf
dec
fldl
sbb
jb
and
mov
mov
pushf
mov
shr
add
sub
mov
inc
out
inc
stos
and
leave
jae
jmp
nop
mov
mov
out
enter
mov
adc
in
mov
cld
lds
aad
sti
popf
pop
jp
insb
xchg
arpl
orl
mov
add
xchg
das
xor
cmpl
jl
rcrb
lcall
ret
loopne
loope
fimull
inc
imul
sub
rcl
out
incb
in
and
out
mov
add
mov
cmp
push
sub
icebp
int3
add
mov
and
clc
add
inc
jne
push
idivb
push
mov
mov
add
iret
adc
adc
sbb
jp
adc
and
aam
sub
xor
adc
dec
cwtl
fisttpl
mov
dec
xchg
dec
out
subb
or
cmpsb
in
sti
lahf
mov
lods
sub
arpl
sub
jns
jne
jo
ror
out
fldl
pop
rclb
mov
xchg
mov
push
pop
mov
cld
std
jbe
cmpsl
sub
push
call
add
mov
stos
es
push
mov
mov
xchg
adc
int3
mov
add
fstl
leave
mov
xor
les
daa
sbb
dec
movsb
je
mov
add
push
shrl
ret
jp
fsubrs
xchg
mov
aad
sbb
mov
test
sbb
jle
jnp
pop
andl
fsubrl
xor
inc
adc
sarl
shl
sar
push
add
push
stc
pop
aam
mulb
mov
or
cmp
pop
xchg
orb
fwait
outsl
adc
mov
aam
pop
jbe
mov
pop
popa
xor
divb
roll
mov
imull
into
add
into
insl
or
jl
push
sahf
fdivl
jle
inc
ret
shrb
mov
inc
jb
arpl
les
sbb
xor
push
push
push
mov
push
lahf
ror
mov
mov
inc
popaw
ror
jmp
and
daa
lea
pop
cmp
and
cli
jo
xchg
sbb
lret
pop
or
sub
pusha
push
iret
ret
scas
inc
dec
or
pop
loope
aad
mov
adc
jne
int3
xchg
add
jb
inc
mov
adc
cs
ret
lret
test
iret
mov
add
mov
push
repnz
out
addl
dec
sahf
sbbl
daa
sub
arpl
scas
pushf
rcl
mov
mov
xor
outsb
cmp
sub
push
cmc
adc
or
nop
lds
ds
push
ss
dec
xor
xor
test
sub
aam
fdivrs
jecxz
in
xchg
lods
pop
cmpsb
push
enter
aam
push
nop
stos
sarl
test
adc
sub
nop
mov
or
ja
nop
movsl
mov
mov
fs
mov
inc
push
cmpsl
fcmovnbe
test
cmp
loopne
sbb
stos
shrb
push
mov
incb
test
push
mov
daa
imul
jge
leave
jns
loope
jl
mov
ror
cmp
aaa
sbbl
pop
dec
lcall
xor
mov
stos
ljmp
xchg
pop
subl
cwtl
stos
pop
sbb
testl
inc
xchg
sarb
or
cs
in
ret
lock
daa
loope
popf
sub
insl
orb
mov
xchg
jb
pop
out
or
mov
jae
sub
shlb
jle
sbb
jmp
into
mov
in
aaa
divb
jge
es
stos
lcall
stos
xorl
mov
push
jno
popf
outsl
pop
leave
movb
enter
cli
shrl
leave
adc
mov
sahf
pop
stos
inc
push
insl
lods
lahf
pop
rolb
mov
fwait
je
xor
aas
out
in
mov
and
mov
or
outsl
lds
mov
pop
xchg
ret
pminsw
loope
push
stc
leave
in
jae
orb
insb
mov
mov
lock
push
pop
add
mov
cmp
rclb
shrb
mov
xchg
stos
test
lea
push
mov
xchg
mov
jle
jns
rorb
faddp
inc
jge
mov
xor
jg
mov
dec
and
cmp
in
cmpsl
xchg
xchg
sub
lret
loope
and
lret
inc
aaa
lea
xchg
cmpsb
xchg
enter
inc
sbb
push
xor
mov
mov
sti
adc
xchg
int3
lods
std
shll
xor
enter
push
and
popf
shl
adc
iret
out
scas
sub
jp
das
sub
mulb
xlat
or
int3
mov
lcall
scas
or
rcrb
fcomip
push
jbe
add
pop
fwait
jne
mov
lret
xchg
mov
jne
xorb
loope
and
outsb
scas
inc
arpl
xor
add
pop
pusha
push
sub
enter
insl
cmp
loopne,pn
fadds
push
lds
mov
sbb
inc
in
out
imul
xchg
sbb
div
insl
adcl
mulb
int3
sub
test
mov
sbb
push
arpl
add
cld
fstpl
inc
cwtl
test
rcr
adc
int
test
or
repz
movsl
lods
aam
rorb
data16
cwtl
push
lret
rcrb
xchg
daa
pop
jne
addr16
or
or
pusha
pop
cli
add
sub
mov
iret
rorl
out
stos
sub
jmp
cmp
mov
inc
mov
cmpsb
cmpsb
mov
ret
sti
xor
fdiv
int
push
stos
mov
in
add
sarl
ljmp
inc
xor
cwtl
fbld
inc
push
adc
in
or
adc
lcall
mov
pushf
movsl
and
xor
filds
in
or
mov
jo
dec
and
out
inc
fdiv
jb
inc
aaa
pop
xor
arpl
popa
aas
leave
loop
fisubrl
cmpsb
xor
outsl
popf
jae
dec
cmpl
stos
ficoms
lods
lods
shll
imul
or
jp
pushf
icebp
scas
xchg
je,pt
sbb
pop
movsb
aam
sbb
push
sti
scas
aas
fmuls
pop
pop
jno
divb
add
lret
int
or
vpcomd
hlt
inc
ds
movsl
cmp
inc
push
ret
lcall
dec
into
mov
fimuls
mov
out
push
cli
adc
inc
and
cmp
lods
mov
dec
icebp
stos
sbb
js
jmp
imulb
xchg
mov
out
push
in
cwtl
adc
jle
popf
mov
jns
popf
lcall
enter
enter
and
aas
mov
test
push
sub
pop
hlt
mov
mov
mulb
cmp
add
mov
xlat
or
rorl
adc
mov
inc
icebp
inc
fwait
inc
popa
or
inc
int
push
lds
adc
add
adcl
cmpsl
sub
faddl
ret
xlat
jmp
pop
jge
scas
xchg
cmp
shlb
sub
inc
mov
push
mov
push
mov
push
jb
fcmove
jbe
cmp
sub
mov
scas
lret
push
cs
lods
ficoml
fdiv
push
addr16
mov
cltd
daa
rcrl
cmp
jnp
and
out
stc
enter
mov
les
data16
fisttps
mov
mov
icebp
jecxz
in
jge
jbe
aam
adc
insb
adc
outsl
ljmp
out
xchg
mov
test
xor
outsl
mov
scas
pop
test
mov
mov
cmpsb
sti
mov
cmpsb
ds
dec
pop
negl
jbe
xor
pop
mov
mov
cltd
sbb
mov
mov
lcall
out
jmp
cmpsl
clc
sub
push
rorb
pop
sarl
sub
lea
mov
adc
inc
addr16
ss
cmp
dec
addb
pop
fsubr
stc
int3
jle
push
cs
imul
cmp
enter
dec
add
or
cmp
sbb
icebp
adc
orl
pushf
sbb
push
fsts
jae
sbbl
test
and
ds
flds
mov
addr16
mov
fldl2t
stos
inc
or
pop
scas
sub
pop
inc
imul
inc
push
lret
in
add
aaa
mov
loopne
mov
jns
inc
insb
scas
pushf
scas
inc
mov
sbb
inc
call
out
cli
in
add
insb
jl
jle
or
fdivrl
dec
jo
int3
add
jb
adcb
xor
lea
scas
out
fnstsw
loope
repz
pop
test
in
dec
dec
adc
mov
das
test
mov
xchg
gs
mov
inc
mov
repnz
and
outsl
jecxz
lods
sub
js
leave
rclb
fdivs
arpl
mov
sub
or
pop
shlb
lock
dec
ja
dec
xor
jbe
push
cmc
jmp
cld
sub
movsb
jae
pop
xchg
insl
mov
sub
add
out
or
subl
xlat
mov
scas
sub
ds
insl
jno
xchg
loopne
jg
mov
sti
les
sub
mov
mov
pop
sti
lret
imul
imul
out
lahf
fmulp
xchg
xchg
cmc
sti
cmpsb
push
js
fldenv
hlt
sub
or
pop
iret
ret
sub
xchg
fcoms
xchg
daa
loopne
int
in
aas
dec
loopne
test
cmp
dec
cli
cmpsb
loope
repnz
jns
cmp
xor
in
dec
sub
mov
in
daa
cld
out
aaa
cmp
inc
jecxz,pt
pop
push
adc
arpl
or
ss
lds
lahf
cmp
insl
dec
sbb
inc
xchg
scas
jo
sub
mov
fisttps
cli
in
stos
xor
sarl
loop
icebp
shr
sub
sub
mov
mov
paddw
sysenter
push
jmp
popf
sbb
outsb
mov
lahf
std
rcr
inc
dec
xchg
insl
mov
ja
ds
std
rcll
push
mov
or
pop
xchg
icebp
sbb
ds
insl
push
mov
mov
leave
repz
jecxz
ja
sbb
cmovns
das
repnz
cmp
cwtl
sbb
mov
jmp
adc
aad
test
sub
scas
inc
mov
rcrb
dec
fcmovne
xchg
in
pop
addb
stos
mov
pop
rolb
test
int
lret
pop
add
inc
dec
adc
lret
std
adc
cmpsl
xor
or
and
inc
fisttpl
aam
ljmp
idivl
dec
shlb
in
pushf
sbb
sub
stos
ljmp
xchg
repnz
inc
dec
sti
pop
das
in
shrl
adc
imull
in
jmp
and
pop
scas
es
add
adc
fs
in
cmp
pop
inc
call
mov
sbb
daa
mov
add
pop
cmp
inc
fstps
add
and
cmp
add
xchg
mov
movsb
fdivrs
hlt
xor
int3
mov
mov
or
pop
test
out
scas
fwait
pusha
xor
jp
pop
stos
movl
pop
aas
mov
push
outsb
pusha
loop
mov
mov
jo
push
xchg
test
rcr
lcall
out
and
lock
sub
iret
mov
cltd
repnz
cmp
sti
push
jge
cmp
or
lret
push
sbb
in
arpl
jns
mov
push
and
sahf
bound
lcall
lcall
dec
test
inc
cld
cmp
pushf
lock
fcoml
fsub
mov
add
mov
negl
test
add
xchg
lea
xchg
xor
dec
mov
xor
fsubl
xchg
aad
mov
add
jae
data16
push
jns
and
aaa
fldt
enter
xchg
jo
adc
mov
sar
jge
lret
aaa
or
enter
cs
mov
cli
scas
cmp
iret
jp
cmp
push
ja
out
and
jne
lock
and
stos
xor
push
cmp
in
fdivs
aad
lcall
mov
jb
insb
scas
cmp
lret
or
mov
xchg
jg
insl
insl
mov
nop
pop
cld
dec
dec
push
adcb
pushf
daa
daa
xlat
testl
in
mov
cmp
popf
stc
and
and
xor
mov
rcrl
popf
mov
in
in
mov
dec
push
push
mov
jbe
push
jne,pt
jle
outsb
test
or
icebp
lret
test
fnstenv
test
pop
sbb
pop
mul
movsl
bnd
push
popa
sbb
lcall
pop
jno
pop
movsb
sbb
pop
mov
sti
mov
xchg
lret
pusha
pushf
jle
mov
or
cmp
lea
jno
ret
pop
outsb
imull
pusha
dec
jle
mov
adc
pop
inc
andb
mov
dec
jl
push
mov
jecxz
mov
inc
mov
xor
and
pusha
fs
mov
lret
inc
test
push
out
xchg
ss
push
mov
inc
shl
and
imul
out
out
fsubr
push
out
push
and
xor
push
jecxz
pop
jns
and
dec
in
aam
adc
push
xchg
push
aad
jg
daa
lcall
pop
jecxz
add
add
subb
inc
push
lds
shll
sbb
xchg
push
xor
repz
sub
pushf
scas
ds
jno
xlat
ret
fcomp
and
xchg
dec
pop
mov
push
xor
rcll
test
pop
add
xchg
decb
cmp
dec
cld
cmp
lock
decl
sub
test
lahf
scas
mov
xor
decl
nop
jg
inc
sbb
into
push
in
dec
movsl
mov
xlat
int
popf
mov
jb
sub
mov
stos
inc
xchg
mov
xor
inc
sbb
js
or
mov
rcrl
ss
lret
add
mov
shrb
repz
out
shlb
mov
and
in
in
xor
sti
sti
in
aad
iret
lea
adc
cmpsl
mov
movb
or
xor
mov
cmp
or
push
jo
stos
push
cmc
xchg
inc
fbstp
xor
out
stos
mov
jns
stos
adc
cmpsl
sbb
stc
inc
cbtw
in
es
push
or
jmp
sub
adcl
test
ss
notl
mov
lret
ja
iret
fsubl
sarb
add
sbb
cmp
scas
rcr
cmp
jno
rorl
lock
sub
xchg
push
adc
xor
xlat
push
sub
ret
in
ljmp
jecxz
mov
int
fstpt
jg
es
xchg
adc
and
in
orl
ss
xchg
cmpsb
xchg
and
inc
rol
lret
adc
out
cmp
repz
xchg
mov
sub
lods
cld
push
movsl
xchg
and
stos
and
call
xchg
stos
shlb
push
fs
xchg
scas
rolb
jp
push
cmc
add
push
fisubs
data16
mov
jbe
xor
sub
mov
pop
into
mov
pop
inc
push
ret
or
aad
ds
mov
cmpl
cltd
stos
push
dec
and
mov
mov
xchg
aam
hlt
push
add
pop
out
ljmp
lret
aad
sar
mov
sbb
pop
stos
roll
pushf
movsl
push
inc
subb
or
push
insb
mov
outsb
pop
cmpsb
sbb
loopne
xchg
dec
xchg
sarb
ja
xchg
sbb
sub
dec
nop
sbb
aaa
pop
jecxz
sub
xchg
stc
cwtl
push
out
adc
in
mov
int3
scas
lods
dec
and
fcmovbe
mov
stos
mov
sahf
mov
push
stos
fadds
adc
shlb
sub
call
xchg
dec
xor
leave
loop
jne
push
pop
inc
out
jbe
or
mov
lret
xlat
out
pop
scas
xor
mov
push
lcall
mov
cld
pop
push
xchg
inc
test
lcall
push
sbb
pop
cmpsb
and
dec
out
cmpsb
loopne
xchg
fwait
add
mov
push
leave
jl
mov
and
jno
cmpsl
pop
aas
repz
repnz
insb
mov
iret
cmpsb
int
rclb
test
shll
add
mov
or
mov
int
mov
inc
jl
pop
pop
jb
in
inc
mov
mov
repnz
rclb
lcall
add
or
imul
arpl
add
shll
in
xor
sbb
enter
lret
notb
mov
push
mov
dec
notb
jmp
notl
aas
sbb
mov
shrl
in
not
jge
fisubs
pop
mov
adc
sbb
call
push
sbb
cli
repnz
dec
call
test
pusha
jmp
sub
xor
xchg
js
inc
ror
jns
lret
jbe
rep
bound
mov
sbb
dec
popf
repz
adc
jo
and
iret
sbb
shlb
mov
lds
mov
lea
adc
jle
adc
mov
pop
push
test
das
cmpb
jne
cli
pusha
inc
sub
lahf
and
fcompl
xchg
xor
lock
inc
mov
push
or
xlat
ficompl
lods
out
push
popa
dec
dec
mov
xchg
icebp
movsl
lods
cmp
add
scas
sbb
mov
push
ljmp
mov
sbb
mov
lahf
pushf
sarb
test
sbb
mov
mov
mov
xor
jb
mov
repz
jo
and
xorl
add
xchg
ja
mov
mov
jb
adc
or
shrb
mov
jecxz
mov
jl
add
test
cmpsl
push
xor
iret
mov
dec
sbb
imul
lret
push
outsl
les
sbb
in
arpl
inc
pop
mov
stc
jno
fbstp
sbb
jns
and
lock
sub
ficoml
daa
out
push
jmp
out
mov
stos
push
pop
in
loop
adc
ljmp
cmp
cli
incb
and
push
dec
fbstp
out
jg
lock
pop
fstps
pop
cmp
cwtl
sbb
jg
addr16
sub
mov
lods
idivb
fcompl
ficoml
add
loopne
xchg
jae
cmp
mov
mov
jle
fwait
mov
mov
insl
addr16
xor
dec
dec
data16
in
aam
fsubrs
fadds
cs
inc
je
sahf
stos
mov
sti
mov
pop
mov
cmpsb
inc
aaa
or
mov
xor
cmpsl
hlt
ret
mov
push
mov
stos
icebp
in
andl
xchg
pop
cwtl
dec
inc
xorl
popl
mov
mov
dec
repz
std
xchg
sub
lea
mov
xlat
or
fldt
leave
pop
pop
jb
xor
cmp
ljmp
sub
sub
das
std
repnz
mov
cmp
sahf
jmp
push
xchg
mov
cmp
push
push
add
sbb
fdivp
jecxz
mov
dec
and
lds
daa
xor
mov
ror
xchg
mov
cmp
pop
addr16
jne
fwait
dec
adc
or
shl
test
dec
outsl
mov
cmp
mov
dec
dec
cmpsb
sub
mov
sbb
xchg
jo
jge
repnz
test
mov
mov
pushl
movsl
lds
jg
and
adc
aaa
out
imul
leave
scas
lods
mov
adc
sub
lcall
jae
jmp
sbb
decb
or
popa
or
sub
in
sub
movsl
pop
inc
movsb
xor
inc
aad
pop
adc
out
add
daa
in
cmpsl
push
adc
xchg
out
and
lea
lds
ret
sti
aam
in
cs
gs
negl
movsb
xor
sbb
in
repnz
pusha
xchg
mov
add
pop
negl
shrb
repz
jge
fcomp
fsubrs
add
dec
sub
nop
mov
in
and
in
clc
cmp
out
sub
xor
outsb
aam
into
insb
push
out
lret
daa
mov
jecxz
xor
xchg
jmp
jg
xchg
aad
and
or
fiaddl
lods
testb
in
xchg
pop
mov
mov
in
clc
fiadds
or
inc
xchg
and
xchg
mov
push
orl
xchg
push
out
stc
in
in
cmpb
addl
mov
jmp
std
push
and
pop
in
sti
subl
sub
je
arpl
sbb
add
in
fucomi
sub
xchg
jne
in
out
xchg
adc
inc
arpl
inc
enter
cvttps2pi
sub
fs
rcrl
jecxz
aas
and
add
lret
sub
mov
jbe
nop
sahf
cmpsb
push
test
adc
mov
int
push
adc
dec
loope
test
sahf
popf
dec
out
dec
out
ficoms
outsl
cmpsl
pusha
popf
aam
mov
add
sahf
mov
addl
leave
loop
aaa
data16
lret
repz
sar
sbb
or
dec
in
mov
sar
add
mov
jnp
scas
xchg
notl
fnstcw
mov
shll
pop
jecxz
in
cmp
push
mov
adc
push
inc
cmpsb
adc
sub
jbe
popf
lds
loope
arpl
mov
and
les
sbb
dec
sti
sub
mov
mov
jge
and
rcll
movsl
int3
sub
xchg
mov
push
xlat
sub
sub
jge
ss
adc
pop
test
cmpsb
repz
je
adc
repz
ficoms
lret
aad
or
stos
fisttpl
xchg
out
cmc
fucom
cs
or
filds
mov
inc
dec
mov
insb
or
movsb
loopne
jg
nop
mov
in
sub
adc
fdivrs
push
shrl
jb
sub
in
scas
xchg
ljmp
jns
mov
or
jb
cmpsl
and
cmp
add
andb
sub
es
es
iret
xor
lods
aas
mov
das
sbb
imul
jbe
outsb
leave
jo
je
call
in
call
leave
mov
mov
daa
addl
jl
adc
iretw
loope
inc
ret
out
enter
jno
aam
sub
lahf
out
gs
movsl
jmp
jg
jmp
jge
push
mov
sub
push
cmp
setb
out
jnp
cmp
fwait
xor
pop
sti
ficoml
or
add
cmp
loopne
ja
mov
rcrl
mov
cmp
sub
xchg
xchg
inc
mov
add
nop
dec
inc
pop
stos
inc
imul
je
inc
jns
inc
insl
and
cmpsb
in
mulb
cld
daa
sbb
and
mov
cmp
mov
adc
sbb
lret
rcrl
stc
lahf
mov
lret
mov
xchg
pop
in
lahf
cmpsb
loope
and
test
add
add
xchg
xor
add
push
push
cmpsb
cmp
pushf
jb
pushf
ret
or
xchg
push
ds
fwait
fwait
pop
inc
lods
xor
push
cli
jbe
mov
clc
movsb
mov
ret
jl
mov
in
jecxz
sti
ret
sbb
jo
or
pop
enter
fcmovne
mov
and
mov
fwait
aas
add
jmp
push
adc
jae
addl
and
sub
mov
jo
mov
xchg
imul
push
test
pop
insl
jmp
cmp
or
lods
sahf
gs
jmp
push
jns
cwtl
insl
in
cmp
cli
push
add
push
das
xchg
cmc
cmpsb
mov
dec
outsb
cwtl
add
in
cmp
pop
lret
xchg
insl
push
into
movsb
insl
fldcw
loop
repz
xchg
insl
add
rcr
stc
fisubs
jae
xlat
loopne
push
stos
aad
push
cli
mov
insb
test
mov
pop
jmp
xchg
mov
sbb
mov
or
arpl
fwait
pop
and
sti
mov
pop
fbstp
rolb
xor
xchg
repz
cli
cmp
push
sbb
aas
mov
push
cmp
das
enter
rorb
push
loope
sub
sub
mov
add
inc
cmpsb
cwtl
and
pop
adc
aad
shll
ficoml
adc
stos
je
cmpsb
mov
push
push
addr16
sub
movlps
es
aam
sahf
inc
aas
cwtl
stc
daa
test
jp
lret
or
fldenv
mov
rsm
int
jle
jno
mov
mov
loopne
pop
xor
fmulp
xor
pusha
adc
push
lahf
clc
mov
aas
rorb
cmp
outsl
leave
pop
es
nop
inc
jo
jle
and
pop
and
and
movsb
dec
cmpsb
mov
lods
shrl
lods
inc
shl
nop
jl
cwtl
jno
inc
loop
sbb
sbb
sbb
movsb
psraw
je
mov
pop
sbb
mov
xor
push
in
mov
mov
sbb
loop
mov
xor
aad
mov
fisttpl
and
sbb
mov
leave
xchg
add
dec
and
mov
js
pop
jno
outsb
out
ret
movsl
xor
mov
lods
enter
xchg
test
cmpsl
mov
lret
pop
pop
out
test
sub
add
ja
lcall
pop
inc
ja
push
mov
loopne
lret
and
pop
jb
int
sub
push
mov
ljmp
btc
sbb
mov
mov
cli
mov
or
insb
mov
xor
divb
call
and
sbb
les
daa
adc
sub
gs
dec
adc
iret
dec
decb
adc
and
xchg
adc
push
and
stos
adc
xor
sti
ss
push
cmpsb
adc
mov
roll
add
fldenv
sarl
xor
cmp
addl
mov
enter
ficompl
outsl
mov
mov
pop
cmp
aas
jno
cmc
test
popa
enter
cmpsb
add
push
and
mov
pop
push
and
in
xor
add
movsb
mov
jp
mov
pop
sub
adc
cs
jb
inc
push
outsb
adc
adc
shrl
leave
and
daa
lahf
inc
or
inc
sbb
jns
push
out
aam
imul
add
in
jno
xchg
into
lock
lret
test
jmp
sub
sahf
mov
pop
sbb
fisubrl
push
fdivs
push
sub
fimull
out
ss
aas
xlat
and
aad
or
icebp
lea
cld
mov
inc
or
mov
push
das
jo
sub
sti
out
or
mov
add
jnp
fisubs
daa
pushl
push
pusha
cmpsb
mov
arpl
cmp
push
xchg
xchg
mov
cmp
leave
rolb
out
or
std
ret
pop
sub
dec
out
xchg
xchg
repz
notl
mov
mov
lcall
inc
sbb
lret
cmp
jl
in
scas
loop
mov
popa
mov
mov
adc
and
scas
cmpsb
cld
sbb
inc
add
imul
shll
mov
lret
stos
popa
scas
inc
mov
mov
jmp
gs
xor
inc
jns
or
sbb
mov
xor
icebp
out
mov
add
je
stos
stc
pusha
add
mov
inc
sarl
shll
and
inc
pop
sti
ficoms
imul
sub
dec
jno
push
dec
jl
pop
rcr
sahf
push
ss
add
pop
pop
sbb
sub
fwait
subl
sub
inc
fdivr
sbb
test
mov
daa
jnp
sub
and
clc
xchg
sbb
inc
jae
insl
aas
mov
ds
mov
jle
inc
and
enter
lock
sub
pop
lret
lods
out
je
xchg
push
mov
and
or
aad
lock
popf
loopne
aaa
xor
jg
adc
inc
jecxz
xchg
jmp
sbb
mov
pop
mov
push
loopne
sbb
mov
xor
push
aam
mov
xor
pop
lret
xchg
stos
pop
xchg
jns
pushf
inc
subb
mov
push
subl
lock
inc
outsl
jp
mov
inc
ja
cmpb
ds
jns
addr16
mov
shrb
and
out
sub
rcrl
push
rcr
add
cmp
sbb
push
xor
sub
jmp
dec
inc
push
inc
das
test
adc
cltd
lcall
aaa
mov
hlt
ret
mov
leave
push
das
sbb
cltd
pop
inc
repz
sub
stos
or
xchg
add
inc
insb
jmp
push
scas
and
mov
push
sbb
xchg
mov
push
jg
xchg
orb
jne
jp
push
push
mov
std
jns
xor
jle
add
addr16
cmp
cmpsl
jg
mov
mov
cwtl
sarl
sahf
mov
xor
sub
dec
aam
dec
lods
mov
push
xchg
mov
jne
xchg
out
dec
dec
pop
dec
insl
pop
inc
inc
test
and
push
or
aam
adc
cmp
or
mov
mov
clc
ror
repz
jae
imul
loop
aas
mov
pop
call
inc
sub
lds
xchg
and
jle
loopne
push
stos
outsl
ss
fstl
test
js
cmpsl
repz
ret
sahf
xchg
inc
outsb
mov
mov
fs
fwait
daa
push
xchg
push
cltd
adc
adc
dec
cltd
jne
jl
test
add
leave
movsb
stos
sbb
jne
add
push
gs
mov
ret
jp
pop
aas
adc
imul
insl
pop
adc
inc
aam
cmpsl
adc
stc
xchg
ret
popa
jg
repz
pop
inc
out
push
or
fdivrl
jecxz
test
dec
dec
mov
or
xor
out
sub
mov
out
cmc
out
sub
push
cmp
mov
sahf
jno
leave
or
cmpsl
outsl
fsubl
inc
xchg
out
cmpsl
scas
add
add
jno
rcll
idivl
dec
cmpsb
jp
popa
mov
push
mov
ret
gs
rcrl
mov
sahf
lret
inc
mov
bnd
push
jecxz
scas
xchg
fmuls
pop
push
dec
pusha
and
jne
mov
insl
fwait
popa
adc
xchg
cmp
cwtl
mov
sbb
sbb
jmp
cli
push
insb
mov
jnp
out
ja
lods
xor
pop
int
jmp
test
icebp
adc
rorb
lcall
add
fs
mov
outsl
repz
ljmp
jno
das
sti
mov
aaa
xor
pop
push
jo
cmp
int3
leave
inc
sbb
cmp
sub
test
mov
pusha
xlat
mov
push
outsl
sub
dec
or
jo
insl
add
lret
push
jmp
int
popa
lret
popf
pop
add
adc
mov
jl
and
jno
sti
js
sti
test
dec
cmp
inc
scas
mov
sub
mov
scas
or
popa
mov
mov
fildl
mov
cmp
cmp
jp
inc
fcmovne
rorl
sbbb
adc
out
sbb
out
sbb
cmpsb
xchg
jle
adcl
movsb
xchg
mov
or
test
cli
pop
mov
rclb
pop
dec
es
adc
push
inc
pop
aaa
ss
jns
push
add
les
out
or
push
shrl
pop
inc
or
and
push
inc
mov
push
lods
pop
sbb
aam
adc
bound
cmc
push
das
mov
outsb
adc
addr16
mov
push
in
les
pusha
and
jo
pop
sbb
add
popa
in
shll
dec
inc
sahf
pop
pop
out
mov
xchg
loopne
sti
pusha
mull
xor
push
sub
xorl
jle
add
sub
pop
popa
mov
lret
ret
xchg
les
ljmp
arpl
sbb
in
cld
push
add
mov
scas
insb
fdivrs
sbb
je,pt
cmp
gs
daa
iret
fs
xchg
dec
sbb
dec
cmp
jnp
mov
xchg
xchg
sub
inc
xlat
imul
incl
adc
int
div
xchg
adc
jnp
in
sbb
jl
stc
mov
mov
dec
cmp
push
jae
es
mov
repnz
jb
cmpl
filds
pusha
jnp
fs
add
call
sbb
test
call
jge
out
test
loope
adc
fwait
les
icebp
test
push
sbb
adc
lret
js
out
mov
iret
shrl
fmull
push
add
les
and
leave
pop
dec
mov
dec
mov
xchg
fists
pop
or
adc
movsl
or
inc
movsb
pushf
mov
into
mov
cmpsb
pop
pop
adc
pushf
and
test
push
mov
ficoms
sub
sbb
and
std
sbb
pop
incb
jne
ret
cmp
pop
cmpsb
xor
cmp
jmp
add
stos
divl
and
mov
lcall
sti
xchg
push
mov
andb
xchg
jmp
dec
mov
lods
cli
mov
push
mov
pop
dec
mov
push
xchg
jb
pop
loopne
add
sahf
lods
fmulp
cs
call
and
test
cmp
imul
cmpsb
sub
dec
push
outsl
inc
sbb
pop
jo
inc
jbe
mov
pop
imul
test
xchg
cld
xorb
ror
mov
nop
lds
in
adc
cmp
and
in
int
adc
out
lods
mov
je
gs
movsl
movsb
les
inc
inc
shlb
inc
std
xchg
popa
adc
test
fcmovnu
ret
push
fiaddl
xchg
xchg
inc
add
and
fistpl
fldl
xor
fucomp
xor
sbb
push
je
dec
mov
movsb
mov
inc
enter
fcomip
add
sbb
mov
stos
push
xor
cmpl
cmp
jne
pop
xchg
aam
or
push
shl
rolb
mov
pop
pop
aas
repz
rcll
pushf
add
out
or
mov
inc
mov
out
rol
cmp
and
dec
fstp
mov
scas
addr16
mov
inc
cmp
fcmovne
pop
aaa
xor
test
jbe
icebp
pop
out
push
test
cmpb
mov
xchg
mov
shll
pop
test
arpl
cld
icebp
insl
mov
pop
insb
dec
inc
iret
pop
in
inc
loop
ret
jae
loopne
decl
mov
int3
push
cmpsl
inc
add
loope
or
mov
rorb
push
ljmp
pop
push
sub
aaa
pop
mov
fsts
jmp
out
xchg
mov
repnz
cwtl
cmp
lds
cmp
nop
clc
jb
mov
test
daa
lret
sbb
loop
sub
inc
out
push
mov
adc
add
cltd
mov
imulb
cmp
jmp
pop
xorl
xor
adc
xchg
xor
in
push
and
mov
cmpsl
mov
out
push
icebp
stos
movsl
xor
stos
jns
cmp
cmp
pop
in
push
out
xchg
das
pop
testb
pop
out
and
xor
pushf
adcl
inc
je
mov
lea
xor
int
dec
xchg
mov
cmp
sbb
xor
inc
sbb
mov
test
mov
sbb
stos
sub
or
pushf
pop
mov
clc
shlb
inc
jl
sbb
lods
push
jp
sbb
lret
es
pushf
jno
inc
lahf
dec
icebp
mov
clc
add
out
es
mov
mov
mov
ss
add
xchg
iret
push
imull
push
mov
addr16
incl
xor
lods
cmp
xor
xchg
pop
dec
int3
xchg
xor
mov
int3
cmp
ja
lods
mov
es
in
out
jge
pop
inc
fdivrl
loopne
js
sub
or
add
pop
inc
out
dec
dec
fwait
aad
idivb
sti
sub
imul
scas
xor
popl
add
mov
mov
sbb
mov
ljmp
cltd
sbb
pop
test
sub
cmp
add
rolb
and
or
pop
mov
mov
ret
icebp
icebp
testb
jbe
mov
pop
outsl
cmpsl
dec
jp
ljmp
bound
add
jb
enter
inc
jb
mov
cmpl
push
mov
cmp
push
decl
xor
imul
adc
jae
loope
dec
sar
sbb
ja
lcall
cmp
sbb
sahf
jmp
lock
mov
out
adcb
push
push
fidivl
sahf
mov
or
pop
ss
clc
call
dec
loop
xchg
sub
cmp
dec
ss
add
dec
mull
cmpsb
sub
add
insl
mov
mov
pop
or
dec
into
ljmp
dec
xchg
or
lods
mov
jbe
cmp
and
je
movsb
dec
addr16
in
rclb
cmp
push
jnp
mov
dec
sbb
subl
xchg
adc
ljmp
add
inc
pop
mov
andl
outsl
push
arpl
xchg
jns
pop
sub
mov
and
pop
aaa
test
push
jbe
mov
rolb
aas
mov
add
icebp
idiv
xchg
mov
add
dec
jne
or
jmp
imul
ret
cmp
jne
lret
jle
xchg
xor
dec
jbe
jl
push
add
sub
les
cmp
leave
jne
fmul
repnz
stc
sub
mov
bound
inc
addr16
xchg
fstl
jecxz
gs
xchg
cwtl
cltd
adc
fistpl
insb
pop
mov
sub
outsl
lahf
and
shll
dec
addl
xchg
sbb
mov
pop
mov
shrl
xor
push
adc
adc
call
outsb
sub
pop
sbb
jecxz
ret
cmp
pop
inc
push
cmpsl
je
push
dec
mov
inc
int3
add
cmp
cmp
jp
sub
or
jmp
jl
popf
insl
rcll
fcoms
popf
out
movzbl
imul
mov
jae
repnz
les
inc
filds
sub
or
fwait
into
xchg
and
ret
pop
repnz
jae
push
mov
into
sub
jno
cmc
loop
jp
rorl
mov
rcll
sbb
adc
mov
jbe
push
addr16
pushf
dec
mov
push
xchg
sub
sbb
loopne
xchg
lods
add
mov
xor
push
lcall
shrb
pcmpgtd
cmp
pop
push
mov
adc
aas
mov
xor
arpl
bound
mov
daa
cwtl
jb
out
xor
aam
fidivrl
dec
cmp
fidivl
xor
sbb
iret
inc
movsb
adc
shrb
jg
push
movsl
inc
or
jmp
sarb
push
lret
mov
iret
mov
pop
scas
jbe
push
stos
mov
xchg
out
sub
addl
xchg
popa
cli
push
pop
cmpsb
icebp
rcrl
sub
rcl
std
jne
cmp
fnclex
push
inc
rorl
xor
push
jns
add
xchg
pop
inc
xchg
xlat
jae
sbb
add
xchg
pop
or
dec
movsb
mov
jne
jecxz
xchg
sub
xchg
or
outsl
sbb
jbe
xchg
jno
aam
sbb
outsl
push
cmp
fnstcw
test
lds
mov
shlb
movsb
ss
inc
mov
rcll
cmp
jae
lods
add
dec
fbld
jnp
out
out
sub
add
repz
lea
sbb
popa
add
ficompl
iret
es
aad
pop
mov
sub
jge
or
jp
das
hlt
push
cmp
adc
arpl
mov
mov
jns
js
fwait
out
sbb
and
xchg
or
pushf
imul
push
jle
stos
in
mov
notb
push
repnz
popa
xchg
jecxz
cmp
cmc
pushf
leave
mov
xchg
rol
xor
push
push
dec
mov
push
mov
jecxz
ficoms
jns
pop
clc
jp
stos
cmp
push
aad
mov
inc
sahf
imul
fdivr
push
sbb
cmpsl
es
jns
and
jge
cmp
faddl
inc
lds
dec
bound
lock
xchg
pop
mov
loope
xchg
adc
loope
fwait
loop
stos
shrb
jns
enter
xorl
out
mov
rolb
arpl
cmc
jbe
jne
sbb
jp
fldenv
mov
xor
or
mov
xchg
int3
in
imulb
call
push
sbb
push
xchg
cmpb
xchg
sbb
sub
pop
adc
frstor
pop
add
lret
adc
push
cmc
outsl
sti
xor
pop
sbb
rorb
in
sbb
lds
lods
dec
push
insl
mov
fcompl
imul
cwtl
stos
inc
adc
idivl
insl
sub
cmpsb
imul
pop
addl
dec
fsubl
mov
adc
sub
scas
pop
outsl
imul
clc
add
jp
lock
lahf
mov
or
xor
stc
aas
lahf
dec
push
loop
mov
xchg
pop
jmp
pop
push
lods
add
jg
adc
lods
rorl
lea
sahf
add
int
les
leave
lahf
fsts
loop
je
jno
xchg
inc
adc
push
sarb
inc
xchg
xor
imul
addb
movsl
pop
jge
stos
inc
mov
sti
dec
mov
lret
dec
daa
jp
sub
insb
xor
jge
pop
xor
ss
xor
dec
popa
lcall
adc
mov
data16
cwtl
mov
jo
or
sub
in
jne
dec
sbb
add
xor
cmp
movsl
and
cmp
adc
mov
mov
xchg
shrb
or
adc
add
mov
insl
call
ret
mov
xchg
cmp
shrb
in
dec
xchg
dec
testb
shrb
std
jno
imul
push
stos
inc
in
pusha
loope
std
adc
mov
std
sub
push
or
rclb
fwait
jg
add
shll
clc
es
repnz
jae
dec
ljmp
sub
jb
dec
and
push
push
mov
mov
and
add
mov
pushf
inc
pop
push
sti
enter
test
and
icebp
pop
shl
imul
std
insl
js
mov
imull
jo
movsb
sbb
inc
scas
pop
icebp
xor
test
hlt
cmp
sbb
lods
dec
xchg
jnp
insl
dec
push
cmpsb
clc
xor
nop
push
push
cmp
dec
jecxz
scas
fidivs
repz
movsl
je
gs
sbb
jp
xor
pop
rcrl
arpl
dec
movsl
xchg
mov
stc
cmpsb
stc
test
ds
lods
sbb
xor
fwait
and
push
pusha
xor
loope
movsb
xchg
dec
xlat
fs
je
cmpsl
add
lret
in
or
pusha
jg
adc
cmp
pop
stc
cmp
push
jmp
mov
mov
pusha
cmp
pop
in
add
adc
jecxz
inc
test
pop
add
aaa
ret
popa
pop
jg
jmp
outsl
push
lock
jns
in
clc
jle
aad
jno
mov
pushf
sub
ret
lds
xor
push
dec
hlt
fidivrl
hlt
cwtl
cltd
and
sti
mov
lret
ljmp
movsl
and
push
pop
and
fbstp
lcall
add
arpl
mov
stos
push
sti
pop
and
sub
mov
push
xchg
sub
push
jl
mov
xchg
mov
fdivrl
cmpsb
into
mov
enter
outsl
imul
insl
and
fistps
pop
inc
in
xlat
mov
dec
inc
pop
and
jmp
jne
out
inc
cmp
fdiv
ds
add
mov
test
mov
push
xlat
mov
rclb
insb
loop
mov
jmp
stc
insb
pop
xchg
push
pop
sub
fwait
push
sub
cs
mov
jo
xlat
push
xchg
xchg
dec
xlat
mov
xchg
ffree
xor
and
andb
scas
stos
fisubrl
inc
ja
mov
mov
cmp
fsubrs
into
mov
data16
mov
fxtract
sub
stos
outsl
pop
mov
mov
push
cmc
xchg
int3
jge
inc
or
adc
dec
pop
lea
sub
in
repnz
out
mov
mov
mov
fmulp
icebp
lcall
lret
mov
lret
ret
jbe
loopne
lock
cmpsl
daa
and
mov
cmp
sahf
xabort
test
test
lock
insb
stc
pushf
sbb
mov
mov
aaa
cmpsl
imull
adc
xchg
test
jno
sbb
js
pop
or
in
mov
aam
push
rcrb
je
adcb
ja
loopne
outsl
push
adc
loop
adc
enter
cmpsl
imul
movsb
cli
sbb
jg
fcomip
sub
and
mov
add
jns
lret
shrb
mov
jns
mov
push
cld
sbb
popf
in
xor
sbb
and
stos
dec
in
inc
or
not
jne
or
or
outsb
sbb
ror
mov
aam
or
or
stos
push
push
sbb
stos
xchg
movsl
fiaddl
pop
jp
inc
mov
mov
shll
pop
repnz
iret
xchg
inc
mov
iret
js
dec
popf
inc
jmp
test
xor
xor
sub
shlb
sahf
xchg
rolb
dec
adc
inc
mov
cwtl
ret
jp
addr16
js
fsubrs
mov
movsl
xchg
sub
xor
cld
daa
leave
subl
mov
pop
mov
lret
adc
xor
aaa
pop
lret
sbb
sbb
sub
push
ret
push
in
out
mov
inc
inc
jmp
arpl
sbb
sub
out
pop
cmp
inc
cmpsl
xor
jmp
sahf
add
push
lahf
jno
lret
push
mov
aam
ja
jmp
mov
int
mov
sti
and
jmp
hlt
inc
rolb
mov
pop
sub
jnp
arpl
pop
xchg
movsb
in
pop
and
leave
mov
dec
mov
add
jmp
pushf
cmp
xchg
out
xor
adc
mov
xor
add
xchg
xor
mov
mov
sub
cli
aad
inc
addr16
cmpsl
in
ja
push
mov
lcall
adc
loopne
xchg
push
mov
cld
addr16
hlt
sbbb
pop
in
push
lret
push
cltd
xor
imul
aas
jmp
aam
pop
cmp
sub
or
xchg
sub
and
call
stos
aam
mov
notb
and
sbb
lret
xchg
adc
fwait
push
pop
and
adc
aad
outsb
xchg
sti
dec
jae
pop
fstpt
xchg
jnp
mov
repnz
loop
pop
cmp
fwait
lock
popa
add
out
cmp
inc
lret
movsb
sahf
loope
sbb
fwait
mov
shlb
add
aaa
in
lahf
test
es
incb
ror
out
mov
mov
sub
lahf
adc
fisubrl
mov
in
outsb
aaa
dec
adc
xchg
sub
add
loopne,pn
pop
jmp
das
and
mov
fstps
push
inc
repz
pop
mov
rcll
in
pop
jecxz
push
mov
add
mov
push
test
jae
sub
mov
sbb
push
popa
adcl
stos
roll
or
pop
sti
es
js
pop
jmp
push
dec
leave
push
call
je
mov
jl
fs
ret
in
mov
jne
pop
repz
jns
imul
mov
das
push
daa
test
popa
inc
pop
xor
cmp
imul
dec
stos
jecxz
jne
cmp
pop
repz
lea
es
ds
or
mov
insb
jb
mov
orb
or
pop
cmp
sbb
inc
addr16
jecxz
bound
or
je
mov
and
movsb
adc
addl
or
xchg
pop
mov
cmpl
mov
arpl
mov
out
loop
arpl
pop
fistpl
push
inc
mov
mov
insl
je
jne
movsl
add
test
stos
jg
push
push
sub
jae
add
movsb
ja
rcll
and
fsubrl
inc
sbb
pop
mov
arpl
std
scas
scas
ja
fldl
jl
adc
pop
and
xlat
sub
xor
push
ljmp
das
ret
stc
and
mov
mov
sbb
call
jecxz
fs
je
cmp
lret
mov
add
mov
sub
xor
inc
sbb
repz
incl
stos
popf
push
dec
fmull
mov
sti
in
add
out
mov
fstl
fstpt
outsl
and
and
or
dec
outsl
push
movsl
mov
xor
lds
inc
bnd
sub
mov
pushl
add
adc
or
pop
mov
add
cmp
push
xchg
repz
cmp
dec
xchg
lock
pop
xchg
ret
pop
pop
sti
push
jmp
xor
insl
fs
xor
ret
and
aad
ret
fsubl
cltd
movsl
push
mov
xorb
cmp
imul
xor
sub
cmp
push
pop
lock
sbb
addr16
int3
test
lcall
movsb
sub
jns
dec
xchg
int
inc
ficoml
mov
hlt
add
addr16
shl
adc
push
sub
xchg
leave
and
fidivrs
cltd
jge
inc
pusha
xchg
out
inc
xchg
pop
ds
aaa
les
out
test
jo
dec
push
andb
sub
lret
adc
test
mov
mov
filds
arpl
mov
mov
nop
or
into
ficoml
adc
adc
imulb
dec
mov
popf
and
lret
xchg
dec
das
arpl
shl
xor
rcrb
inc
sbb
testb
add
punpcklbw
mov
aad
shll
shrl
sub
decl
lea
pop
ljmp
arpl
fprem
cli
sti
cmp
or
sbb
dec
roll
sbb
mov
xor
pop
inc
fistps
xchg
cmpsb
dec
pusha
out
mov
rcll
cmp
lret
xchg
jbe
jmp
adc
movb
jp
repz
aam
enter
lret
xchg
stos
les
dec
and
jp
out
into
lret
mov
dec
push
in
sbb
std
sub
adc
dec
insl
mov
cmpsl
pusha
mov
repz
stos
gs
shlb
shufps
adc
xor
iret
jp
in
xchg
add
adcl
imull
ja
aad
fidivs
add
iret
fdiv
jae
fisttpl
mov
sbb
rolb
jo
scas
xchg
enter
fisubl
js
lret
mov
rcr
scas
xchg
sahf
je
or
mov
dec
sub
mov
enter
push
xchg
sub
pop
xchg
adc
xchg
jle
xchg
idiv
xor
das
aas
inc
push
les
or
push
inc
xor
xor
hlt
and
xchg
dec
xlat
mov
or
sub
fucomp
gs
dec
popa
sti
insl
adc
xlat
or
sbb
sbb
cvtpi2ps
jp
add
subb
imul
notl
lret
jg
mov
mov
outsb
add
dec
in
lcall
cmpsb
sahf
mov
sbb
lahf
aam
adc
loopne
add
mov
stc
xchg
call
in
fisttpl
fistpll
dec
add
mov
lods
inc
dec
es
mov
adc
sbb
ljmp
sub
push
xlat
mov
out
jno
xchg
mov
cwtl
shlb
inc
in
les
jo
or
sub
xchg
xchg
icebp
stc
rol
in
pop
add
aas
lea
popa
test
sub
jne
fstps
push
aaa
xlat
inc
cmp
pop
repz
lock
sub
fdiv
ljmp
mov
lahf
bound
jmp
scas
mov
insb
arpl
mov
jecxz
xor
xchg
xchg
cmc
icebp
scas
mov
xor
mov
fdivrp
xor
mov
lret
addr16
stos
and
jle
mov
scas
xchg
in
mov
mov
rclb
push
sub
test
or
lea
push
dec
xchg
or
push
jbe
fcoml
and
lret
inc
fs
shrl
jle
xchg
daa
mov
sub
jnp
out
push
repnz
jns
and
or
stos
or
and
nop
sahf
jp
ret
lcall
and
inc
mov
add
push
mov
or
jbe,pn
lcall
std
push
mov
daa
loope
inc
jge
pop
xchg
cmpsb
sbb
jp
lret
mov
and
sbb
xchg
mov
pop
add
and
push
imul
adc
imul
mov
mov
sub
out
push
inc
cmpl
test
addr16
lods
in
jns
arpl
jecxz
in
lret
ds
fnsave
ds
loope
add
xchg
dec
mov
jl
fnstenv
scas
sbb
jb
popf
into
fldt
lcall
subl
and
adc
mov
mov
or
bound
call
push
ljmp
aas
add
sub
xchg
mov
sbb
xor
enter
push
nop
ja
adc
jecxz
in
das
add
mov
ret
pop
fs
mov
cmpsb
and
aad
fcmovbe
enter
xor
out
aas
pop
pop
push
leave
mov
xor
xchg
cld
adc
int
outsb
lock
insl
pop
in
fstps
mov
jb
sub
mov
out
sbb
jb,pt
popa
out
jp
rcrb
stos
xchg
mov
insl
xchg
icebp
mov
sahf
loope
inc
lret
adc
and
and
aad
pop
cld
mov
out
cmp
fld
sub
test
or
mov
mov
mov
jne
sub
mov
and
sbb
fiaddl
xchg
cld
repz
ja
cmp
fstpt
mov
fadds
imul
cmp
cmpsb
mov
lds
jge
dec
iret
mov
std
aad
add
enter
dec
pop
jl
icebp
push
mov
cwtl
enter
ljmp
in
inc
jecxz
aad
xchg
sbb
fcomps
adc
push
stc
sub
dec
pop
mov
pop
pop
dec
fisttps
das
xchg
movsb
add
push
aam
movsl
xlat
cli
mov
movsl
pusha
pop
xchg
mov
jne
dec
mov
cmp
mov
push
add
and
pop
jp
mov
cmpsl
cmp
out
jbe
jge
mov
stos
pop
xor
and
cmc
mov
pop
or
mov
xchg
adc
lret
rclb
mov
sahf
jne
xor
adc
mov
push
scas
outsl
inc
cmpsl
sub
pop
cmc
push
orb
stos
aas
pop
insb
jbe
int3
fcmovb
lcall
xor
mov
jno
rcrl
and
dec
xor
fiaddl
mov
stc
push
sbb
pop
fs
lret
jl
pop
int
dec
clc
sbb
insl
das
dec
xchg
mov
popa
scas
je
inc
jmp
jg
pop
movsb
add
mov
notb
cmc
dec
or
push
inc
lret
dec
call
and
shlb
fmuls
jle
cmp
push
pmulhuw
js
cld
push
xorl
push
add
stos
mov
adc
fwait
stc
and
add
ret
xchg
adc
xchg
cmp
fwait
test
shlb
lock
sub
out
fbld
mov
lods
ret
sbb
and
dec
outsl
add
mov
dec
or
push
cmpl
cmp
stos
cs
mov
addb
pop
mov
ret
in
xchg
iret
sti
sub
in
fs
mov
push
pusha
or
inc
int
shlb
jne
loope
xchg
lret
jmp
cmpsb
add
clc
repz
push
daa
icebp
stos
xchg
je
and
into
lea
cmpsl
insl
dec
pop
stos
xchg
lret
shl
pop
or
or
repnz
sahf
loopne
push
mov
inc
cwtl
fstps
movsb
mov
or
sti
lods
mov
xchg
xchg
cmpl
sbb
lret
or
repz
or
pop
into
cmp
inc
xorl
mov
add
and
and
mov
cmpsl
jmp
push
sti
icebp
pop
sti
mov
fldt
lods
jl
das
push
test
stc
scas
mov
lcall
cmp
enter
sbb
out
xchg
sbbl
ja
mov
scas
mov
cmc
or
mov
das
or
repz
clc
sub
mov
add
xor
fdiv
mov
int3
push
shlb
cmp
idivb
mov
jle
mov
pop
sbbb
fwait
cmpsl
xchg
inc
ss
pop
repz
pushf
xor
sub
mov
jnp
lds
push
jae
add
mov
fldenv
mov
gs
imul
push
sarb
int3
dec
jb
mov
icebp
cmp
pusha
addr16
shlb
imul
int
lret
sbb
jns
jbe
ret
add
inc
into
mov
push
sub
stc
cmpsl
adc
fcompl
out
mov
out
jbe
in
iret
mov
inc
sbb
jp
stos
icebp
aam
fstps
inc
daa
mov
ljmp
cli
pop
xchg
inc
std
les
aaa
jle
lahf
imul
xchg
div
aad
imul
adc
jns
push
out
js
and
dec
jp
push
jae
add
loope
insl
xchg
pop
lock
nop
mov
fnstcw
add
inc
mov
mov
in
lret
jns
sti
xchg
xor
jno
and
les
clc
adcb
mov
xchg
loope
lahf
ret
in
aas
add
aas
addr16
jle
stos
push
fcoms
pop
lcall
jae
andb
outsl
ja
sbb
in
dec
cltd
fcomp
xor
clc
outsb
or
or
inc
cwtl
inc
mov
lcall
and
jno
push
repz
and
sbbl
clc
mov
cwtl
popa
lods
aad
rolb
adcb
in
stc
stos
mov
cmp
inc
sub
pop
lods
inc
cli
push
aas
sti
inc
lret
int
rclb
add
leave
sbb
sbb
aaa
inc
dec
ljmp
sub
pop
push
push
push
cwtl
mov
pop
or
fwait
lock
add
cltd
loopne
mov
adc
cmpsl
mov
out
push
sahf
xor
xchg
movsb
xchg
cltd
and
inc
xchg
imul
xchg
inc
mov
je
subb
out
inc
out
fyl2xp1
loopne
jns
inc
movsb
sbb
xchg
pusha
xchg
lsl
daa
lea
scas
dec
lcall
push
cmp
inc
jl
sbb
mov
xor
cwtl
cmp
cwtl
in
lahf
cmc
add
je
mov
pop
mov
add
in
fcomps
js
xchg
push
and
or
imull
xor
inc
adc
leave
movsl
or
sub
or
adc
jae
dec
dec
mov
les
xor
cmp
les
and
mov
inc
imul
in
push
mov
popf
les
mov
movsb
xchg
iret
sub
xchg
mov
adc
xor
sbb
xor
jnp
cs
in
subb
jecxz,pn
or
imul
das
xchg
push
cmp
xchg
inc
aaa
js
cld
test
sbb
idivl
or
xor
insb
aam
jns
adc
ficompl
or
movsl
add
xchg
xchg
aas
jp
pop
jp
jo
into
xchg
scas
pop
pop
inc
jmp
out
push
in
and
jmp
fwait
les
popf
push
ficomps
mov
cmp
cmpsl
data16
pop
push
sbb
inc
lret
xchg
adc
jne
clc
jmp
sbbb
faddp
xchg
lahf
push
cltd
cmp
add
stos
loopne
adc
sahf
jno
inc
pop
scas
mov
push
lea
xorl
xor
lock
cltd
adc
mov
push
lcall
xchg
inc
imul
andl
push
add
adc
mov
dec
sbb
sub
out
pop
mov
push
jl
ljmp
loope
scas
stos
clc
jge
mov
mov
jp
and
test
in
mov
jnp
push
adc
das
icebp
in
sub
arpl
mov
mov
pop
ss
adc
mov
aam
cmp
and
sub
aaa
add
mov
sarl
push
xor
adcl
gs
sub
fcmovnbe
fldt
inc
loope
daa
insb
inc
push
xlat
xchg
ret
xor
movsb
pusha
js
je
mov
popf
test
sbb
or
mov
or
jne
dec
idivb
mov
cmp
jo
add
pop
call
fcom
lret
outsb
add
dec
dec
setg
inc
pop
sub
jbe
dec
stos
stos
insb
mov
xlat
stos
pop
mov
lret
inc
icebp
cli
fiaddl
mov
repz
sahf
imul
mov
mov
imul
mov
sbb
sub
jbe
xor
mov
xor
rcrb
mov
loop
dec
leave
bound
xor
adc
push
fisttpll
mov
jl
push
pushf
xchg
mov
ljmp
jb
sub
cmpsl
push
lea
hlt
or
sbb
cs
jno
jae
inc
dec
push
scas
xchg
js
test
xor
lret
mov
and
lock
jae
sti
pop
sub
subb
arpl
les
outsb
leave
lock
addl
inc
and
cmpsb
dec
scas
jbe
sub
adc
push
aas
jle
push
cmc
jbe
add
fsubs
sahf
and
jbe
push
cmp
cmp
pop
iret
pop
sub
pop
ficompl
jno
fstpt
rep
rorl
in
dec
mov
push
dec
and
adc
mov
aam
pop
insb
incb
jge
pop
shll
push
arpl
mov
xchg
xor
inc
ljmp
cmp
psubd
add
push
daa
inc
xor
jns
pop
movsl
xor
dec
adc
xchg
adc
lods
loop
pop
xor
jo
mov
enter
fs
shlb
rolb
push
jmp
in
add
pop
add
fistpl
cld
call
popa
push
std
mov
and
cmp
xchg
adc
xor
shlb
subb
outsb
mov
js
pushf
push
mov
push
into
jno
pushf
pop
cmp
cmpsl
adc
bound
fiadds
ljmp
inc
pop
push
mov
and
sub
jg
sbb
imull
sbb
clc
out
dec
into
or
pop
pushl
lds
mov
mov
scas
xchg
jle
mov
pop
fwait
xor
mov
push
insl
add
xor
xchg
aaa
idivl
xchg
shlb
lahf
and
jmp
mov
outsb
adc
repnz
std
xchg
jno
sar
jne
add
lret
adc
ss
lea
mov
test
call
call
mov
insb
add
jl
sub
add
scas
roll
lret
sub
je
loope
ret
dec
lea
aad
xor
push
mov
mov
mov
cld
mov
push
js
mov
out
mov
cmp
das
or
movb
idivb
and
push
mov
pop
loope
push
mov
push
lea
icebp
xor
dec
pop
dec
hlt
push
loopne
push
rolb
mov
add
push
push
lcall
ljmp
paddb
sbb
dec
aam
shrb
adc
xchg
mov
mov
in
xor
int
xor
divl
outsl
mov
or
data16
push
shr
cmc
mov
test
push
pop
xchg
js
cs
and
jmp
lds
cmp
mov
scas
mov
dec
imul
mov
xchg
adc
out
inc
dec
jp
add
mov
es
jnp
or
or
sub
shrl
jb
cmp
popf
lds
in
loop
fdivs
sti
movsb
push
bound
leave
xor
mov
or
push
ret
adc
jge
out
mov
mov
xchg
and
lret
data16
add
mov
andl
sbb
sbb
xchg
xchg
ficoms
or
icebp
aaa
test
mov
mov
fcoml
jae
or
pop
shlb
pop
adc
test
jb
lcall
dec
fmull
dec
xchg
fcomps
adc
pop
clc
andb
jecxz
in
icebp
xor
sar
hlt
inc
sub
push
aaa
xchg
and
movsb
and
sar
fldenv
rcl
dec
jecxz
inc
xchg
ss
dec
ds
mov
inc
jle
sub
cmp
repz
xchg
or
test
sbb
pop
mov
ja
pop
pop
movsb
mov
cmp
inc
sub
fnstenv
pavgw
jb,pn
dec
lret
jmp
popf
mov
les
xchg
test
push
mov
popl
xchg
pop
jmp
push
out
mov
mov
dec
loop
xor
mull
sub
dec
xchg
pop
xchg
or
pop
xchg
sbb
push
repz
xorl
xorl
push
nop
lds
dec
cmp
jge
adc
or
fdivrl
mov
xchg
and
jb
sarl
mov
repz
lea
sbb
jb
and
cmp
xor
push
sub
mov
mov
pop
scas
insb
pop
outsb
xor
mov
test
in
adc
lods
pop
test
stos
enter
cltd
lret
xor
imul
out
cwtl
dec
loope
adc
pop
sub
test
and
adc
popa
add
fiadds
jne
mov
xchg
push
jecxz
icebp
fnstsw
jl
sbb
hlt
sbb
cmp
fisubs
pop
sub
pop
out
xchg
inc
movswl
jbe
mov
push
dec
dec
pop
stos
xchg
add
mov
cmp
div
lods
push
lret
cltd
add
icebp
mov
cwtl
mov
mov
xchg
sub
hlt
jl
jae
and
insl
test
test
sbb
push
jnp
shl
pop
push
push
pop
sub
bound
cwtl
or
test
push
push
xor
lods
dec
xor
dec
testb
dec
repz
mov
mov
pop
xchg
push
out
push
das
mov
sti
sbb
test
push
xchg
xor
mov
les
xor
and
push
in
sub
jecxz
sub
repz
jl
jae
enter
roll
stc
loop
mov
jg
imul
cmpsl
bound
in
sbb
js
sub
jle
push
cli
jecxz
cmp
sbb
loopne
fwait
sbb
mov
movsl
lcall
ss
jno
or
aaa
fildl
adc
dec
push
pop
call
sub
lahf
push
stc
int
xlat
dec
pop
sub
fnstcw
mov
jmp
das
sti
mov
addr16
and
mov
jl
into
push
lret
int
mov
sahf
pop
je
sbb
out
nopl
and
push
sarl
or
in
xchg
fidivrl
add
clc
push
lret
out
mov
xchg
lret
xchg
push
or
jmp
mov
movsb
xor
aad
in
sub
stc
sbb
gs
lret
std
jle
into
pop
jp
enter
push
sbb
push
push
mov
xchg
mov
add
add
fdivrl
repnz
rorl
lods
fadds
xor
negb
outsb
cmpsb
mov
loopne
jg
mov
and
mov
rcll
push
jle
insl
orl
sahf
rolb
push
push
mov
out
ljmp
cmp
cmp
popa
ds
and
jno
sbb
pop
and
cmpsb
push
adc
xor
test
sbb
lea
mov
cmp
repnz
out
mov
adc
jmp
shr
aad
arpl
arpl
or
subb
mov
or
sub
popf
mov
std
into
cs
sarl
xor
xchg
cmp
xchg
push
fsubl
iret
les
fildl
mov
cmpsl
dec
pushf
and
stos
xchg
dec
xor
movsl
jb
push
push
push
adc
mov
test
outsb
sub
mov
popf
les
sub
lds
push
inc
or
pop
and
clc
adc
xchg
fs
mov
sbb
add
mov
ja
imul
repz
mov
jns
cmc
ret
or
imul
or
out
cltd
out
jle
xor
xchg
ficoms
sub
loopne
movsl
flds
adc
dec
add
pushf
cmp
cwtl
sbb
in
mov
out
mov
lahf
ret
cltd
sbb
mov
mov
mov
add
mov
pushf
sub
xchg
cmpsl
stc
icebp
push
aas
sub
arpl
ja
fsts
mov
icebp
outsb
xor
or
mov
in
ds
or
cmp
fidivl
bound
popa
xchg
stos
insl
jns
mov
adc
enter
sbb
shl
outsb
mov
lea
mov
pop
in
fnstsw
pop
jo
sarb
xor
fbstp
cli
adc
mov
sub
mov
mov
mov
push
popa
test
mov
jae
mov
in
enter
dec
hlt
stos
sub
ds
arpl
push
fiaddl
sbb
mov
mov
sub
into
int
nop
jmp
adc
mov
cld
test
or
nop
fstpt
mov
roll
cli
mov
push
test
mov
sahf
push
cmp
add
xor
adc
jnp
mov
loop
inc
mov
lcall
cmp
cld
gs
sub
enter
lods
les
stc
test
adc
test
xor
ljmp
or
mov
cmp
lds
sbb
cwtl
inc
loope
arpl
jmp
adc
shlb
jecxz
pop
adc
pop
shl
ret
je
pop
and
pop
fistpl
call
fcom
dec
sbb
mov
dec
xor
or
int
mov
imul
imul
fistl
or
mov
jmp
sbb
mov
or
xor
mov
testb
dec
ss
outsb
std
iret
repz
sub
add
lods
daa
mov
sub
imul
sahf
test
cmpsb
lret
xor
sub
stc
push
out
xor
mov
out
mov
lret
cs
std
mov
add
ljmp
ljmp
sub
and
sub
push
and
enter
repnz
push
jp
push
lock
mov
or
mov
ljmpw
push
outsb
xlat
outsl
add
loop
and
pop
stos
shll
outsb
adc
push
or
pop
jne
lret
dec
loop
sbb
cs
mov
mov
cmp
clc
enter
out
or
adc
pop
cld
mov
and
lock
pop
sbb
std
xchg
pusha
mov
mov
fprem
std
and
incb
xor
jmp
xchg
mov
cmc
cmpsb
mov
pop
xor
cwtl
ret
into
int
mov
cmp
sub
xchg
lock
cld
or
lret
inc
stos
and
sub
adc
cmp
mov
daa
sub
rolb
pop
notl
outsb
sbb
daa
aad
gs
push
mov
stc
xchg
sbb
sub
int3
shll
jg
imul
mov
and
push
push
push
daa
jno
bound
push
and
sub
pop
jp
xor
or
lahf
push
in
adc
js
inc
xor
iret
jb
mov
bound
inc
cmp
aad
sbb
mov
xchg
pop
xor
clc
fidivl
mov
je
cli
xchg
imul
enter
jbe
lret
jnp
cmpsl
mov
popa
push
add
call
js
paddsb
push
pop
sub
cmpsb
aam
mov
xor
jl
sub
xchg
mov
push
fsubrp
xor
cmp
adc
icebp
sbb
push
addr16
pushf
subl
aas
xlat
jbe
inc
cmp
sub
inc
cltd
rcl
sbb
clc
add
mov
lock
sahf
add
sub
loop
xorl
lods
repnz
shlb
push
in
jp
je
jmp
and
cwtl
xor
loopne
sbb
mov
jno
adc
aad
aam
aaa
xchg
fbld
mov
sub
aam
insb
cltd
mov
mov
movsb
aaa
xchg
dec
ret
fwait
test
int3
std
jge
jmp
push
dec
loope
add
insb
mov
and
add
ss
mov
aas
out
aas
inc
mov
insl
mov
jmp
adc
jo
mov
hlt
push
pop
sub
ja
shll
sti
cmp
test
lret
mov
mov
test
cmp
add
push
ds
mov
divb
in
and
fstps
sub
cltd
cltd
ja
or
adc
mov
sbb
mov
outsl
dec
xchg
test
repnz
sbb
cmp
scas
das
cltd
inc
int
and
mov
xlat
pop
jne
loope
bound
js
xchg
pop
pop
or
pop
lods
or
in
mov
mov
call
adc
test
sbb
xchg
xchg
test
push
or
outsl
rorb
lea
iret
sub
out
icebp
and
loope
sbb
ss
adc
in
clc
xor
sbb
sub
cmp
mov
gs
les
push
pop
ret
enter
out
xchg
push
mov
fildl
pusha
out
mov
repz
mov
je
les
inc
sahf
or
test
ljmp
daa
jl
out
mov
xor
mov
adc
fs
imul
loop
clc
push
leave
xor
mov
test
sub
pop
adc
inc
mov
iret
jb
mov
aas
dec
aaa
mov
cs
mov
dec
xor
cld
pop
adc
loopne
and
or
sub
lcall
jbe
das
repz
lods
stos
sti
addr16
xchg
orb
dec
jne
jmp
dec
stc
jae
fneni(8087
aaa
sbb
pushf
aaa
push
mov
bound
hlt
cwtl
stc
sbb
mov
sub
ds
test
xchg
popa
xor
mov
jle
jbe
jae
push
rcll
bound
jno
fistl
push
fcmovne
mov
dec
jmp
mov
sub
testb
std
nopl
mov
leave
int3
shl
cmpsl
push
movsl
xor
lds
divb
add
cli
dec
insl
shr
xchg
scas
incl
ds
sbb
pop
out
pop
ret
xor
ret
fistpll
fsubrl
mov
push
xlat
or
scas
push
fisubrs
fcmovnbe
inc
sbb
pushf
sub
aam
out
dec
pop
idivl
pop
daa
out
jnp
inc
mov
sbb
and
fsubr
insl
das
mov
sahf
dec
divl
push
imul
repz
fsubs
or
cmp
iret
ja
dec
stos
jge
stos
in
movlhps
pop
dec
inc
and
loope
sub
pop
sub
sti
inc
scas
sti
testb
xchg
in
imul
mov
lahf
out
jnp
outsb
push
mov
popf
popa
testb
push
mov
iret
xor
inc
push
sahf
scas
ds
pop
or
je
mov
and
scas
mov
loopne
pop
add
movsl
ret
xchg
cmpl
notb
jo
in
sbb
dec
pop
xchg
push
mov
insl
imul
hlt
mov
adc
mov
outsl
ljmp
das
sbb
jns
pushf
iret
xor
je
adc
fistl
mov
add
inc
lahf
mov
lret
pop
lods
aaa
das
scas
icebp
pusha
std
fucomi
enter
ja
mov
push
and
push
sbb
add
inc
repz
inc
mov
nop
mov
imul
clc
xchg
fs
mov
ss
hlt
xchg
xor
into
push
enter
repnz
lds
pop
add
rorl
cld
xchg
add
lods
xchg
ja
and
inc
daa
mov
sbb
jb
jmp
jle
pushf
lods
sub
sahf
inc
sub
jge
lret
lret
nop
stc
jl
aad
sub
ret
leave
data16
repz
dec
fiaddl
xchg
mov
notl
dec
jecxz
xor
adc
jne
push
pop
add
inc
inc
mov
daa
xchg
xchg
mov
ret
cli
and
addr16
loopne
push
hlt
repnz
cld
cmpsb
pop
inc
mov
xchg
xchg
out
inc
xchg
pushl
adc
mov
lret
pop
sub
loope
pop
xor
sbb
testl
stc
cmp
out
inc
test
push
scas
popf
sub
and
in
out
es
mov
cli
push
repz
dec
mov
jmp
std
arpl
add
xchg
or
gs
dec
cmc
jl
pop
daa
shl
stos
sbb
aaa
dec
in
mov
and
mov
lds
stos
ljmp
sub
push
sub
jae
mov
fstpl
sbb
and
imul
out
icebp
lock
push
fstl
fidivrl
and
jb
adc
js
dec
sti
mov
insl
clc
insb
xor
cmp
push
dec
es
add
test
and
jle
add
in
push
mov
mov
js
cmpsb
cmpsl
jmp
inc
xchg
movsl
test
xor
push
jno
mov
cmp
mov
int
pop
dec
outsl
out
cmp
cmpb
les
es
aad
shrb
lret
ret
push
xor
mov
fiaddl
vpaddusb
mov
mov
xor
cld
jp
jae
mov
or
sbb
mov
pop
jbe
xchg
jo
mov
enter
test
lret
fs
pop
lahf
dec
fistpl
movsb
in
ror
sub
or
jnp
inc
jae
sarb
xchg
addl
into
mov
dec
aad
test
pop
lods
add
std
movsb
mov
decb
adc
inc
mov
test
adc
mov
andb
ds
ss
adcb
cltd
data16
cmp
movsb
cmpsb
stos
aad
in
mov
test
mov
fidivl
sti
mov
sbbb
mov
push
add
jae
loopne
test
inc
fildl
flds
sub
sbbb
scas
sbb
loop
jbe
mov
lods
mov
sbb
mov
stos
leave
inc
into
mov
and
cmp
arpl
mov
sbb
add
test
roll
xchg
ljmp
cltd
jle
lret
daa
pop
addl
lds
mov
fimuls
and
fs
loope
xchg
dec
push
sbb
pop
jo
shrw
test
pop
aaa
add
sbbl
mov
sub
repz
push
and
aam
loope
lret
ffree
jae
push
push
fadds
xchg
jg
popf
in
aas
mov
aaa
pusha
sbb
or
fwait
icebp
push
fwait
std
push
inc
mov
scas
lcall
in
or
sti
notb
sbb
mov
cwtl
adc
jecxz
sub
sbb
shl
and
test
xor
push
push
dec
fs
popf
in
rolb
in
repnz
push
adc
mov
mov
or
out
pusha
and
mov
sbb
add
xchg
xor
cmp
out
adc
icebp
add
mov
sbb
mov
add
push
in
lods
lods
mov
pushf
dec
mov
and
dec
add
xor
jae
sub
pop
cmp
out
xchg
sub
repz
dec
fwait
xchg
movsl
jp
inc
sub
imul
lock
xchg
loop
lcall
aad
dec
leave
mov
std
pop
into
sbb
mov
imul
adc
in
jne
xor
or
add
sbb
insl
pop
test
dec
jns
stc
push
sbb
push
movsb
addb
movsl
push
mov
shll
in
mov
fwait
hlt
pop
push
xor
mov
push
pop
add
cmpsb
sbb
ja
push
adc
cli
mov
pushf
popa
jl
std
ficomps
cli
scas
sub
in
sti
sub
ror
lods
xchg
cmp
dec
push
push
jbe
bnd
mov
jl
jne
sub
jae
jb
outsb
mov
fstpl
cmc
xchg
test
push
adc
xchg
xlat
jb
push
cmc
mov
aaa
mov
xchg
jmp
cld
stos
sti
shl
jnp
dec
add
ja
xor
push
in
sub
pusha
sbb
xchg
imul
lea
test
push
cwtl
js
or
pushf
cmc
mov
lods
cmpsb
mov
xchg
ja
xor
leave
mov
push
push
pop
outsb
jns
iret
imul
push
pusha
pop
in
loop
in
jbe
adc
fiadds
pop
lcall
repnz
add
cmc
sub
or
dec
sets
lods
cmp
add
xchg
xchg
jecxz
mov
test
jne
roll
sub
xchg
inc
insl
and
add
hlt
nop
repz
cmp
xor
push
sbb
fisubl
adc
ret
dec
out
add
sub
cwtl
mov
js
inc
imul
int
mov
jae
cmpl
in
stc
enter
movsl
insb
pop
ret
push
out
jbe
inc
mov
xor
push
ds
dec
add
lcall
xchg
hlt
out
or
out
pop
jle
xor
pop
fildl
lcall
mov
incb
mov
lret
les
les
or
mov
dec
inc
mov
sbb
clc
dec
and
sub
jne
bnd
arpl
adc
mov
xchg
jbe
pop
jmp
popf
mov
data16
stos
xchg
inc
lret
cs
paddw
out
addr16
push
rcll
popa
sbb
push
mov
inc
bnd
ljmp
cmp
addr16
jp
mov
cmp
sub
push
adc
rclb
lret
aad
fidivs
mov
adc
xchg
xchg
mov
ja
inc
sub
mov
dec
add
imul
lods
adc
push
cmpl
xchg
stos
loopne
adc
and
sbb
jge
pop
push
out
jno
stc
inc
mov
bound
mov
mov
out
xchg
mov
and
test
cwtl
adc
ficomps
in
push
and
add
cmpl
dec
cmp
jge
sarb
dec
lahf
mov
dec
shlb
sbb
xor
punpckhbw
insb
pop
das
ljmp
fneni(8087
push
push
lahf
adc
xor
or
sub
stos
int
push
push
int3
push
shll
pop
cmp
sub
mov
in
fcompl
cmpsb
push
or
mov
jns
cltd
and
jecxz
push
fnstsw
imul
ja
mov
push
jnp
lds
dec
and
scas
scas
stos
fstl
or
mov
aaa
jns
xchg
sbb
ret
jmp
imul
imul
xor
adc
or
mov
jae
sub
lods
pop
les
imul
mov
filds
aam
lret
push
adc
loopne
or
int
leave
lods
jae
ret
sbb
inc
dec
lret
ljmp
fstpl
popa
in
movzwl
jae
inc
stos
mov
push
push
fcomps
inc
push
xor
sub
push
xchg
add
cs
int3
jbe
lret
in
and
loopne
mov
jmp
inc
mov
bsr
cmp
cmpsl
mov
and
mov
jnp
out
or
sti
or
scas
inc
mov
jbe
mov
repnz
addr16
pop
outsb
inc
xchg
sti
insl
rcll
and
xchg
sub
inc
adcl
test
hlt
popa
mov
cmp
cs
jmp
mov
imul
js
shrl
pop
mov
hlt
rolb
lret
inc
push
ss
rolb
mov
jg
push
and
mov
imul
movsb
mov
sti
bound
jle
nop
loopne
repz
or
mov
les
push
inc
jo
sub
aas
das
ljmp
or
add
xor
mov
xchg
fnsave
dec
fisubl
push
mov
and
push
xchg
test
icebp
lret
fdivs
or
fidivrl
es
fidivrs
and
scas
stos
idivl
cmp
jo
out
cli
xchg
lods
inc
movsb
cmp
out
mov
xchg
sahf
dec
loop
fldl
mov
cmp
js
test
xchg
xorb
icebp
aaa
and
sub
adc
call
inc
cmpsl
sbb
xor
fdivs
xlat
xchg
mov
je
data16
outsb
mov
shll
mov
test
loope
imul
js
xchg
jmp
ret
adc
xchg
and
xor
fiaddl
sbb
pop
xlat
xchg
fcmovne
or
mov
sub
sub
cmc
test
data16
add
stos
adc
mov
scas
mov
imul
popa
xchg
cmpsl
insb
clc
inc
aad
rcrb
xchg
pop
mov
mov
lds
shll
les
bound
xor
ret
xorb
jne
test
out
jcxz
dec
aad
enter
data16
xor
or
lods
mov
cmpsb
sbb
dec
aam
push
clc
dec
outsb
mov
push
outsl
jle
rol
and
stos
sbb
in
insl
cmp
ret
jne
loope
sbb
and
leave
insb
in
movsl
ja
xchg
and
testl
sub
and
jne
ror
mov
in
or
loope
jb
fsubrl
cli
xchg
dec
push
mov
and
mov
xlat
leave
in
dec
lods
jmp
push
hlt
sbb
lret
jo
sub
inc
out
loope
mov
fadd
sti
cmp
fstl
rcll
sbb
lret
call
mov
sub
jge
xchg
cltd
ds
icebp
mov
sahf
pop
bound
test
dec
and
pusha
jns
fstpt
cmc
inc
xchg
xchg
xchg
pop
add
mov
mov
mov
add
dec
fwait
shrl
rclb
inc
mov
push
out
gs
mov
mov
sti
cld
jae
sub
inc
sti
add
pop
push
test
xlat
pushf
int3
je
pop
std
lret
stc
fbstp
push
ss
int3
and
jns
testb
in
lods
dec
adc
scas
dec
cmc
inc
shlb
mov
mov
subb
sbb
mov
and
or
iret
in
xchg
pusha
icebp
inc
or
xor
in
mov
stos
mov
cmp
in
addr16
and
sbb
cltd
push
adc
aam
int3
mov
lock
loope
in
stos
dec
xchg
jmp
movsb
xorl
sub
cwtl
fidivl
pop
lret
xor
sbb
fstpl
dec
xor
ds
fcos
frstor
push
mov
mov
jl
lret
mov
hlt
arpl
and
inc
bound
jg
adc
mov
loope
ret
fsubs
enter
sub
push
loope
stc
rorl
add
push
sub
icebp
or
shl
es
insl
cmp
nop
xchg
pop
mov
adc
xchg
inc
jno
pop
dec
int
pop
fldenv
push
dec
out
movsb
in
push
or
mov
pusha
xchg
cwtl
mov
bound
cmp
lds
and
jge
out
out
mov
int3
pop
adc
daa
mov
pop
add
inc
stos
or
loopne
mov
repnz
addb
pushf
cvtdq2ps
das
or
addr16
stos
or
xchg
rorb
mov
int3
bound
jg
pop
add
mov
pusha
cli
adc
ret
arpl
jnp
jb
ds
jbe
xor
dec
xchg
test
cmp
fwait
scas
das
pop
add
sub
in
mov
or
push
lret
outsl
push
add
out
cltd
cmp
jnp
sbb
pop
mov
mov
cmp
lcall
add
shr
adc
jp
ljmp
jmp
stc
sbb
adcl
mov
add
lds
mov
data16
int
jb
mov
xchg
cmp
add
ficoms
or
sbbl
ret
xor
sbb
push
mov
adc
or
lret
sub
dec
filds
jo
in
xchg
icebp
fimuls
pop
and
aam
mov
xlat
clc
fwait
mov
gs
and
rcll
shll
les
aaa
mov
stos
xor
shll
dec
xchg
pop
cld
dec
cs
inc
push
cli
test
das
inc
pop
testl
ds
jo
pop
movsb
sti
inc
jl
adc
into
pop
push
pusha
popa
std
test
mov
and
ss
cmpb
jp
mov
mov
leave
outsl
add
jno
dec
xchg
outsl
push
pop
rolb
inc
push
aad
jae
aad
mov
shll
leave
jle
pop
jne
testl
movsl
xchg
xchg
lods
lret
jle
add
lock
ds
adc
sbb
push
sbb
les
aaa
test
bound
mov
xor
mov
pop
cmp
and
lret
xchg
inc
test
mov
scas
xor
sbb
lahf
loopne
loopne
cmp
pop
cmp
cmp
push
out
test
or
add
mov
xchg
jae
xor
fstpt
inc
mov
adc
scas
insl
fnstcw
out
inc
test
loopne
xlat
and
mov
das
adc
popf
add
add
out
adc
sti
enter
or
jg
xor
cmpsb
mov
ret
cli
cld
cli
cwtl
xor
out
rcrb
scas
iret
pop
pop
test
mov
cmp
insb
dec
ror
push
leave
outsb
imul
je
out
fisubl
daa
scas
ret
inc
xor
insl
popf
xor
mov
sbb
inc
and
inc
shll
xchg
stos
adc
jne
adc
fwait
pop
sbb
orl
mov
and
xor
in
jecxz
inc
stos
movsl
repz
push
roll
cmp
mov
lea
mov
add
and
mov
outsb
imul
xchg
jecxz
push
pop
out
push
add
xor
dec
mov
fnstcw
add
repz
jns
xchg
cs
xchg
addb
fldenv
and
test
in
xor
jmp
popa
sub
pop
mov
add
jp
loop
shlb
inc
nop
dec
push
push
add
hlt
mov
pop
mov
out
fucomi
push
je
sub
cmp
jmp
stos
cs
mov
inc
dec
add
das
pop
mov
ja
pop
fdivp
or
imul
rol
aad
les
push
pop
idivl
aad
test
lock
out
daa
mov
adc
add
or
push
lods
xchg
enter
jmp
push
sub
nop
shlb
jmp
scas
jno
pop
subl
fcmovnu
in
xor
std
stos
dec
add
jno
cmpsl
mov
int3
pop
dec
push
sysenter
pop
loope
add
mov
add
lret
fucomi
pop
fisubrs
push
imul
dec
arpl
sbb
mov
sar
push
mov
fidivl
in
mov
xchg
aaa
mov
mov
lret
cmp
stos
stos
xchg
mov
ljmp
shl
add
and
mov
adc
scas
daa
ret
mov
and
lods
mov
jmp
popa
imul
pop
sub
jno
and
xchg
push
xor
loopne
sub
adc
ret
lds
xchg
sbb
fsubrs
mov
hlt
rorb
scas
mov
aad
lea
ret
je
mov
sti
xor
mov
lea
cmpl
push
jle
xor
dec
loop
repz
cmp
and
xor
mov
cmpsb
pop
dec
jo
test
je
movsl
and
arpl
push
pop
and
mov
xor
in
mov
jbe
fdivr
stos
mov
rclb
clc
das
test
pop
mov
add
fnstsw
lret
ljmp
loopne
and
daa
fsubr
sbb
or
jb
cli
mov
dec
jmp
aaa
inc
bound
loope
movsl
ret
fwait
xor
sbb
mov
jmp
mov
and
in
adc
jmp
inc
cmpsl
pop
cmp
mov
adcl
bnd
push
addl
daa
addr16
add
sub
push
xchg
mov
seta
sbb
les
les
gs
test
shr
out
aad
sarl
jle
and
aad
in
jbe
xor
es
in
imul
mov
push
or
jo
mov
xor
fcmovnbe
testb
fbstp
inc
aas
push
pop
push
jge
cwtl
jg
nop
push
movsl
inc
push
jge
mov
push
add
jmp
fiadds
punpckhdq
dec
sti
push
in
aad
fisubrl
leave
and
imul
push
stos
pop
add
sub
sub
cwtl
inc
push
mov
aad
push
adc
sti
pop
lret
jne
push
in
mov
movsb
mov
loop
xchg
pop
push
mov
cmp
repnz
jecxz
pop
dec
into
inc
rorl
push
cmp
xchg
popf
insl
movsl
inc
xor
int
insb
pop
iret
lock
adc
hlt
add
xor
mov
pusha
xor
hlt
xchg
insl
in
dec
imul
movsl
clc
mov
pop
mov
scas
enter
mov
jg
pusha
sarl
movsb
cmp
mov
xor
jecxz
mov
aam
das
cli
leave
inc
and
pop
push
lahf
movl
xchg
or
jno
loopne
bound
pop
out
jno
dec
mov
fsubrp
test
sbb
fwait
cmp
clc
push
nop
movsl
stos
test
xchg
scas
mov
cmp
push
jne
repnz
inc
lret
and
push
mov
jns
pop
dec
lahf
fs
push
rcll
mov
fistl
add
mov
mov
mov
push
inc
scas
inc
std
dec
out
out
fistpl
sub
xchg
std
xor
cmp
imul
add
sub
jae
test
jecxz
clc
fstp
jns
sub
lea
sahf
lahf
test
rolb
sub
ret
je
dec
sub
mov
sub
pop
adc
mov
inc
and
insl
cmc
xor
es
addr16
cli
mov
jo
fs
dec
rcll
fwait
lock
out
out
fiaddl
cmpsl
pushf
rorb
cmc
fldcw
or
mov
adc
or
je
dec
insl
jmp
negb
push
cld
lds
sar
and
lods
cwtl
add
mov
in
in
sbb
inc
mov
inc
mov
pop
scas
dec
test
cmpsb
pushf
sub
mov
cmp
mov
xchg
xor
lahf
jmp
cs
mov
lods
add
ljmp
rcl
movsl
movsl
sbb
ljmp
clc
inc
xchg
lret
jecxz
lods
hlt
mov
cli
sub
pop
pop
and
into
sbb
jge
out
mov
iret
test
pop
imul
adc
test
push
xchg
fcoms
sbb
jmp
cwtl
jecxz
push
dec
rclb
std
in
xchg
dec
add
pop
ret
mov
ja
pop
divl
dec
test
popf
loope
movsl
call
inc
shrl
leave
orb
sub
or
mov
mov
daa
push
mov
cltd
sub
andl
adc
notl
fstps
or
push
jl
jmp
aaa
sbb
inc
jns
cld
and
mov
fidivs
into
cmp
pop
mov
mov
dec
lahf
daa
cwtl
mov
mov
sub
cmpsl
jae
jno
xor
ds
xor
xchg
popa
es
imull
jl
jbe
xchg
push
pop
test
xchg
push
test
mov
mov
or
mov
ss
push
dec
jno
aam
idiv
xor
fsubr
and
mov
dec
mov
cltd
dec
add
inc
adc
xchg
add
dec
inc
inc
lock
in
mov
out
iret
pop
cmp
fistps
sub
sub
push
and
and
push
aam
push
push
jecxz
dec
daa
mov
sub
ja
lds
mov
inc
gs
jbe
fists
lock
call
jne
mov
jns
dec
rcr
arpl
cmpsl
lea
nop
out
hlt
or
lret
pop
popa
push
pop
xor
mov
mov
data16
into
daa
push
leave
or
daa
cmp
fs
mov
xor
scas
mov
adc
loop,pt
push
jle
or
cmc
je
jbe
icebp
scas
and
inc
test
popf
divb
xchg
adc
xchg
xor
cmp
lcall
test
filds
int3
enter
cmpsb
lea
jge
les
sub
mov
jp
stos
decb
aad
mov
push
or
cmp
adc
or
push
lds
fs
xchg
pop
cmp
mov
popa
dec
jmp
push
adc
hlt
stos
mov
sbb
push
lret
inc
jae
pop
sti
outsb
adc
sbb
ret
insb
dec
nop
mov
and
sub
add
xchg
pop
sub
adc
repz
mov
bound
test
insl
pop
insb
cmpl
outsb
movl
push
dec
insb
jbe
clc
ds
sub
or
mov
movsl
stos
stc
sub
mov
inc
repz
lock
aam
mov
ljmp
mov
mov
sub
loopne
das
mov
aaa
mov
je
mov
cmp
mov
jb
pop
subb
repnz
cmp
aas
xchg
fisubrl
rorl
jmp
aam
add
scas
pop
cmp
lea
add
mov
ds
sbb
in
insb
in
jb
cmp
aaa
and
jnp
push
cltd
xchg
add
rclb
int
outsb
inc
jne
call
pop
cmp
sbb
push
stc
andb
pop
push
cmp
xchg
jle
xchg
dec
push
mov
jb
push
jecxz
daa
in
enter
push
add
push
out
add
sub
aam
test
dec
mov
stos
ljmp
mov
push
xlat
adc
jg
dec
cs
adc
sub
jns
fnstenv
pop
dec
sub
lahf
mov
rorl
push
in
cmpl
jg
xchg
lds
add
jnp
cli
movsl
fcmovnbe
pop
cs
mov
neg
xchg
sub
pop
mov
xor
rcr
out
adc
cmp
mov
ds
mov
sarl
and
aad
pop
stc
pushf
or
shll
out
adc
jmp
and
stos
test
sarb
jae
xor
arpl
lcall
lcall
cmp
xor
add
jo
pop
xor
inc
jno
xchg
or
sub
xchg
xor
sub
dec
mov
data16
jmp
lret
jbe
fistps
gs
loopne
fiaddl
hlt
pop
testl
fnstenv
shlb
aas
adcl
mov
adc
int
out
or
dec
fcmove
xchg
out
sub
push
aaa
iret
out
les
push
and
pop
out
cmp
mov
lock
jge
popf
sbb
add
aaa
mov
lods
jle
or
xchg
push
cmpsb
sahf
mov
imul
push
sub
stos
test
loope
jge
cmp
and
test
jmp
rorb
stos
loopne
inc
pop
or
sbb
dec
leave
mov
and
insl
pop
dec
sbb
mov
jge
aaa
inc
inc
add
das
pop
iret
std
fsub
xchg
mov
js
push
int
xor
mov
leave
arpl
xchg
mov
jle
xchg
dec
push
fsubr
ja
gs
inc
jnp
mov
fwait
lret
xchg
ss
xchg
mov
sbb
pop
jbe
mov
adc
sbb
mov
or
and
in
out
loope
sub
pop
push
adc
pop
mov
mov
movsl
ljmp
in
pop
jecxz
sysret
push
test
sti
push
fistps
pop
sub
fdivrs
out
sub
push
xchg
push
fimull
outsl
cmp
mov
and
dec
dec
lods
aam
dec
out
or
es
lods
push
popaw
or
add
inc
test
xor
jno
cmpsl
pop
jnp
pop
xchg
ja
dec
fimull
sbb
jbe
mov
arpl
js
mov
popa
call
mov
inc
test
mov
mov
adc
xchg
call
jp
rol
das
xor
pop
inc
loop
mov
cmpsl
outsl
jmp
mov
filds
lcall
jp
xor
insl
cmp
add
sbb
xor
cmp
lret
mov
imul
jb
xor
cld
pop
mov
mov
mov
enter
sarl
icebp
inc
pop
xchg
or
add
aad
pop
fiadds
cld
fdivs
xorl
mov
scas
icebp
and
in
adc
add
jno
scas
in
pop
fisttpll
jmp
clc
mov
cmp
pop
jne
rclb
out
sbb
leave
outsb
gs
cmpsl
mov
push
out
ret
clc
mov
jne
int
adc
aaa
jl
or
xchg
test
sub
fwait
lods
sbb
fsubrs
ret
and
insl
imul
jno
mov
xor
sub
es
enter
and
faddl
orl
lods
dec
mov
jae
incb
add
pop
cld
dec
pop
addr16
inc
adc
inc
cwtl
push
leave
out
pushf
mov
iret
ficoms
cmc
mov
sbb
mov
pop
xor
mov
mov
inc
mov
stos
push
shr
adc
cmpsb
or
lock
push
lock
and
dec
mov
test
notb
stos
dec
data16
or
fidivl
pop
xchg
sub
cli
sub
mov
and
cmp
jp
mov
int
jge
cmp
dec
xchg
movsl
push
mov
and
xlat
stc
and
clc
mov
add
adc
pushf
test
ror
ljmp
imul
filds
dec
add
xchg
mov
pop
cld
lret
daa
push
mov
xlat
add
mov
xchg
mov
fistps
jg
cltd
push
xorb
aaa
aas
xchg
xchg
push
popa
adc
rorb
mov
add
xor
dec
pop
mov
out
push
push
frstpm(287
ss
xchg
jecxz
or
iret
sbb
das
or
rolb
jns
in
mov
daa
mov
out
mov
sahf
scas
inc
negl
dec
push
iret
cs
ljmp
dec
xchg
xchg
movl
test
dec
int
mov
jb
sub
rcrb
outsl
pop
lret
test
cmpsl
mov
push
scas
mov
ret
sti
push
lock
cmpsl
fsubr
bound
jnp
sub
pushf
fimull
mov
mov
push
je
lea
add
pop
sub
inc
cld
xchg
mov
cld
and
aam
loope
dec
jo
lods
das
loope
jb
in
and
rcll
mov
daa
cmp
xchg
fsts
and
call
out
inc
test
inc
sub
sbb
sbb
repz
js
aas
xchg
ds
pop
rorl
xchg
jl
insb
and
jae
inc
xchg
lea
fcmovbe
mov
xchg
cmp
iret
cs
mov
push
fidivrs
jle
mov
or
stos
jne
mov
nop
bound
push
add
pop
xor
jmp
lea
fcomps
rolb
daa
and
fucom
icebp
notl
daa
sahf
mov
mov
pop
fistps
orl
adc
incb
push
sub
sub
pop
push
shrl
jmp
in
sub
andl
or
mov
or
jne
adc
mov
sahf
shr
jmp
inc
js
cmp
cmp
dec
sbb
rolb
sbb
fldt
push
in
div
rcrb
push
cmp
addr16
mov
fsubl
cmpsl
outsb
cmc
jg
sbbl
xchg
clc
and
lahf
and
mov
or
loop
push
adc
pushf
mov
mov
sub
addr16
and
test
sarb
dec
shll
js
jecxz
lret
or
push
nop
fdiv
xor
mov
data16
pop
mov
jno
xchg
push
int3
icebp
cltd
cmp
nop
test
mov
mov
add
xor
out
idivl
push
mov
out
cmp
xchg
das
xchg
mov
jns
and
mov
xchg
xchg
icebp
pop
dec
aaa
lock
test
mov
and
scas
jne
aaa
test
out
movsl
ss
cmpsb
xor
ficompl
fnsave
sahf
lock
jns
inc
mov
dec
imul
aaa
xchg
inc
xchg
xchg
mov
sub
push
ret
jge
push
mov
jecxz
cmp
imulb
cmp
mov
fidivl
mov
pop
sbb
std
arpl
fidivl
pop
or
daa
mov
add
push
mov
leave
lret
nop
lcall
mov
jns
rcr
addr16
shr
push
or
fs
fwait
sbb
das
imul
shll
push
xchg
insl
dec
xor
inc
mov
lcall
lret
adc
lahf
adc
addr16
add
or
dec
addl
imul
mov
mov
out
mov
fcmovnu
adc
dec
push
fwait
mov
push
enter
repnz
cmp
adc
push
xchg
pop
pop
mov
and
popa
xorl
adc
cmc
mov
adc
outsb
sub
push
mov
insl
imul
cmp
lret
pushf
jb
jns
xchg
scas
xchg
cmpsl
repz
subl
fistpll
mov
add
or
sub
xlat
imul
fcomip
sbb
das
insb
aaa
out
fldenv
popa
sbb
movsl
stos
sub
mov
bound
xchg
shll
out
test
or
jmp
xchg
or
scas
scas
sbb
add
leave
push
test
scas
insl
lea
enter
incl
inc
sti
cmp
mov
xchg
push
les
xchg
js
adc
pop
sbb
push
mov
sbb
mov
arpl
dec
fimull
lds
jbe
jbe
cli
inc
inc
dec
jno
push
jbe
and
clc
pusha
push
stos
or
or
mov
ret
mov
push
sti
or
push
int
loopne
insl
inc
mov
cmp
and
xlat
xor
xor
jbe
xchg
xchg
adc
jle
mov
push
sysret
jns
lcall
mov
pop
pop
xchg
mov
out
out
and
push
add
ja
setp
xor
xchg
push
cmpsl
in
hlt
push
xor
mov
jns
pop
repz
in
sub
rcrl
orb
imul
xorb
jo
out
lock
popa
jno
pushf
xchg
mov
mov
push
icebp
push
loop
imul
mov
and
adc
ja
cmp
mov
xchg
mov
cwtl
stos
ds
cmp
push
out
nop
vpmovmskb
jmp
xchg
push
jae
fidivl
push
in
pop
pop
cmp
sbb
lret
mov
sti
in
and
arpl
clc
out
into
push
fsubrs
daa
push
add
xchg
pop
stc
sub
push
es
mov
hlt
daa
and
jecxz
popa
xor
inc
cli
mov
and
fdiv
add
mov
xlat
roll
lret
popf
shl
lcall
mov
loopne
sbb
mov
jnp
push
mov
imul
jle
stos
shl
add
rcl
add
popf
xor
lret
movl
es
jns
push
xchg
mov
xchg
inc
stc
out
sbb
jne
jno
repz
push
sub
mov
dec
cmpsb
pop
in
sub
inc
add
clc
repz
add
repnz
mov
cmpsl
push
sarb
xor
add
addr16
loopne
jmp
sub
mov
loopne
jmp
sub
push
bound
call
mov
add
cmpsb
and
popa
add
stos
cli
mov
lret
shlb
add
fcmovb
push
rcll
add
pop
xchg
sub
inc
lret
nop
inc
jne
scas
jmp
xchg
mov
jmp
sub
sub
ljmp
mov
add
in
push
adc
mov
and
or
mov
sbb
imul
int3
add
mov
lret
xchg
roll
in
out
and
sbb
ds
subl
lret
cmovbe
add
lret
bound
std
jns
faddl
push
xor
adc
cmp
lock
cmc
sub
adc
aad
jecxz
sbb
and
lcall
xchg
inc
xchg
jnp
inc
cmp
in
pop
std
jns
xor
out
test
fninit
cs
testb
rclb
andl
inc
aas
cmp
lods
adc
mov
xchg
int
xor
sub
jo
inc
je
sbb
mov
and
sub
lock
push
test
mov
mov
cmpsl
lcall
outsl
jl
stos
lcall
adc
add
loopne
je
push
int3
adc
xchg
or
ret
in
cmpsb
ds
push
int3
fsts
imul
lock
cli
jns
xor
lret
aad
adc
mov
xchg
fidivrs
loop
lods
inc
imul
inc
ljmp
pop
fidivrs
sbb
pusha
dec
sub
fs
dec
mov
cmp
aas
rcrl
int
rcrl
jmp
mov
mov
rcl
sahf
mov
aaa
and
scas
data16
dec
fisubl
pop
loope
sub
repnz
or
mov
stos
sbb
popa
inc
out
xlat
or
bnd
hlt
fs
jmp
jge
sub
xor
mov
sub
test
pop
ficompl
adc
mov
inc
jmp
cmp
push
daa
push
clc
gs
sub
lcall
xor
stos
cmc
pop
add
push
xchg
push
repz
imul
leave
jae
jno
mov
xchg
push
mov
stos
push
adc
push
lea
call
xchg
addr16
dec
mov
iret
imul
fwait
xor
push
dec
mov
or
in
icebp
cmpsl
mov
xorl
push
lahf
out
not
popa
inc
sbb
dec
fcoml
fistpl
ds
inc
jo
push
lock
lock
mov
jbe
sub
aad
xchg
outsl
mov
into
scas
pop
les
and
lret
sbb
popl
jg
iret
xor
fdivr
andb
insl
pushf
clc
mov
mov
adc
ja
jb
dec
hlt
mov
adc
or
cmp
add
push
lret
and
mov
insl
sub
insb
mov
mov
cs
rcrb
in
ficoms
dec
ja
mov
lret
ss
fldt
movsb
sub
push
add
mov
jnp
int
jl
lock
aas
rorl
push
push
pop
add
inc
mov
orl
mov
cmp
imul
dec
aaa
into
pop
shlb
sbb
out
aad
mov
push
adc
test
mov
or
in
sahf
stos
push
xor
call
lds
ss
scas
rorb
mov
in
jmp
data16
ds
jno
fdivrs
arpl
sub
insb
and
icebp
add
addr16
xor
mov
gs
sbbl
movb
mov
loope
xor
es
mov
dec
rcr
mov
ficoml
add
xchg
sub
inc
pop
mov
js
jns
clc
out
enter
shll
or
xor
mov
push
call
pop
ljmp
sbb
cmc
mov
ret
call
xchg
cld
call
xor
mov
pop
sub
lods
push
daa
or
daa
cli
repnz
dec
xor
cmpb
in
cmp
arpl
ds
rcl
data16
xor
mov
xor
icebp
add
lds
jecxz
mov
jl
cmp
add
mov
scas
ja
ficompl
data16
data16
lock
dec
sti
pop
adc
jmp
mov
stc
xor
cltd
add
mov
jmp
incl
out
in
in
pop
jle
push
daa
cmpsl
pop
mov
sbb
pop
sbb
lea
aas
jb
scas
mov
add
andl
pop
push
shll
popa
jo
addr16
adc
pop
sub
clc
xor
add
aaa
inc
sub
leave
pop
out
sub
fsubrs
stos
fmull
xchg
and
rcll
out
lcall
sti
pusha
mov
dec
mov
ljmp
out
daa
or
fidivrl
fdivrp
ds
dec
xchg
push
out
loope
nopl
inc
push
cmc
test
add
jmp
add
or
loopne
fildl
fistpll
mov
add
out
jae
imul
and
pop
insb
rcl
sbb
scas
inc
add
not
insl
add
xchg
and
scas
orb
and
fisubs
testl
jnp
and
mov
imul
cmpsl
std
ret
popa
rcrb
popl
mov
cli
mov
jnp
fsubrp
and
xlat
jecxz
scas
sub
sbb
bound
stos
lcall
ljmp
insl
inc
ror
imul
or
jecxz
aaa
sub
aad
inc
dec
in
nop
mov
popf
cs
mov
mov
mov
push
andb
sbb
ret
imul
or
push
insl
pusha
xchg
jl
mov
sahf
pop
lret
xchg
fs
mov
ret
mov
lcall
aaa
push
insb
daa
popa
push
loope
push
inc
aas
repz
imul
jecxz
jmp
cmpsl
lret
mov
jns
add
movb
out
insl
mov
jecxz
fldcw
test
mov
mov
add
sbb
pop
aaa
xchg
xchg
loope
or
mov
cltd
add
cmp
mov
mov
arpl
xlat
add
aaa
stos
lods
outsl
ffree
fucomip
jb
pop
stos
and
jmp
arpl
jecxz
jecxz
repz
ljmp
mov
ljmp
pop
pushf
xchg
xchg
addr16
mov
test
xchg
xchg
and
xchg
movsbl
add
cmp
lea
xchg
mov
xchg
jecxz
xor
vmread
add
mov
int
pusha
cmp
push
call
pop
jp
push
jmp
xor
imul
jl
lods
aad
jb
and
cmp
add
cmpsl
inc
int
adc
push
cmpsl
xchg
call
lahf
push
fadds
addr16
lcall
inc
sbb
mov
mov
mov
add
xchg
or
mov
sub
mov
addr16
daa
cmp
cmc
xor
dec
cmpsl
push
mov
or
out
ljmp
dec
dec
arpl
xchg
cld
inc
xlat
lret
outsb
mov
mov
add
addr16
xchg
mov
mov
dec
push
sub
in
xor
inc
ja
add
mov
data16
add
loopne
mov
ljmp
out
mov
mov
cmp
movsl
test
jmp
orl
cmp
mov
lret
lcall
sti
mov
daa
negb
aaa
mov
pop
cmp
in
jns
loopne
push
xlat
cwtl
mov
push
int3
outsb
filds
cmpsl
jb
cmpsl
pusha
mov
xchg
out
rcll
lods
ja
popf
fistl
repnz
xchg
cmp
fdivs
loop
mov
mov
popf
sub
pop
add
cmc
add
addr16
lcall
mov
imul
and
repz
ret
outsl
rorl
pusha
xchg
xor
push
sub
or
imul
pop
mov
nop
adc
xor
out
mov
sub
stos
fsub
jp
jg
lcall
push
mov
jae
xor
pop
sub
frstor
out
ficoml
aas
ljmp
mov
fistl
pop
jae
xor
pop
testl
daa
ss
jmp
out
add
inc
cmpsl
fwait
mov
fimull
call
mov
and
xchg
imul
add
xchg
icebp
pop
fsubp
jmp
cmpsb
ljmp
inc
mov
add
mov
xchg
cmpsl
add
lret
fidivrl
add
mov
int
pusha
sub
dec
jmp
sub
ss
adc
ror
inc
es
inc
cwtl
pop
sub
clc
pop
ret
mov
sub
cmp
push
add
data16
jecxz
aaa
push
out
adc
shll
imul
clc
inc
xor
movsl
xor
loop
int
sub
mov
pop
push
cli
lcall
mov
add
cmp
fistps
inc
push
call
call
fsubs
adc
lcall
out
mov
xor
scas
rclb
fidivs
imul
loopne
mov
shll
fmuls
es
outsl
push
fdiv
orl
pop
xchg
addr16
lcall
pop
mov
mov
sub
jmp
sbb
leave
sbb
test
mov
lret
fsub
sarl
out
add
loopne
sbb
inc
fisubrs
mov
call
push
sub
mov
enter
aaa
jecxz
sub
xor
in
shl
cmp
xor
lods
xchg
pusha
sub
xchg
sbb
arpl
mov
stos
pusha
cmpsb
xor
xchg
stos
test
aad
iret
cmp
aas
dec
cmpsl
lea
call
test
fmuls
addr16
lcall
push
xorb
stos
jno
lock
imul
iret
gs
add
mov
int
pusha
adc
in
ljmp
out
mov
mov
add
and
imul
addr16
sub
sbb
rcl
pop
sbb
sub
icebp
mov
call
test
addr16
mov
mov
mov
lods
jnp
xchg
shrb
sti
imul
jmp
js
add
pusha
jne
nop
ljmp
out
mov
mov
add
xchg
add
fsub
loopne
xor
movsb
jae
xor
or
aaa
add
out
adc
rol
push
sbb
jae
xor
pop
fisttpll
xor
js
dec
xchg
xchg
aad
pop
push
mov
mov
call
cltd
push
sub
pop
addr16
pop
lcall
dec
andb
inc
sar
fmulp
imul
mov
lock
int
pusha
add
lahf
stos
out
add
cmp
or
jnp
or
sbb
or
dec
dec
call
lds
fmuls
cmp
lcall
xchg
xorb
addb
addr16
daa
mov
pop
out
je
test
sub
mov
icebp
xorl
movsb
mov
jns
xchg
mov
sbb
mov
sub
out
mov
mov
add
xchg
cmp
aam
call
push
les
pop
xor
or
dec
dec
call
lds
ljmp
insb
movsb
popf
clc
cltd
lcall
mov
mov
cmp
or
mov
loopne
mov
add
pusha
inc
xor
cmpsl
xor
movsl
or
and
and
push
leave
mov
hlt
ljmp
out
mov
mov
add
sub
fildl
add
addr16
daa
adc
leave
aad
pop
and
and
stc
mov
rorl
dec
pop
aaa
imul
adc
aas
addr16
xchg
lcall
addl
shlb
add
mov
loopne
mov
add
pusha
jge
cwtl
ljmp
out
mov
mov
add
xchg
or
in
fcoms
mov
pop
adc
daa
loopne
xor
or
sbb
cmc
out
mov
mov
add
xchg
jmp
out
adc
rcll
das
xor
mov
xor
add
orl
pop
mov
mov
jge
call
dec
push
hlt
fcom
addr16
mov
cmp
int3
rcll
stos
cmp
mov
cmpsl
imul
or
mov
sub
les
sub
push
pop
fdivs
pop
leave
lcall
stc
adcb
movsl
add
addr16
out
xchg
xor
adc
cli
stos
or
pop
cmp
unpcklps
ror
push
sub
xor
lret
imul
fiaddl
daa
cmp
ja
dec
cmpsl
mov
add
push
loope
pusha
cmpsl
push
cmp
adc
push
or
nop
mov
dec
cmp
jl
jp
stc
daa
popf
xchg
xchg
inc
dec
pop
pop
cmp
dec
cwtl
testl
cmpsb
pop
fucom
scas
psadbw
out
mov
xor
fcomip
jp
add
int3
andl
mov
adc
xor
inc
adc
mov
add
dec
aad
fcmovb
xchg
loopne
scas
adc
fcmovnb
push
sarl
adc
push
mov
nop
mov
pop
dec
cmpsb
aad
aaa
ljmp
test
inc
sub
xchg
mov
and
pop
sub
scas
cld
insl
incl
pop
insb
inc
push
xor
sub
ss
cmp
pop
pop
punpckldq
add
jne
adc
out
jnp
sub
jp
imul
test
mov
cmp
loop
jp
out
stos
ljmp
adc
mov
add
inc
pop
aad
xchg
aas
cmp
popa
push
xchg
sub
pop
add
jecxz
flds
inc
pop
fadds
inc
sarl
and
cli
std
inc
cmp
imul
xchg
movsb
popf
xor
jae
jmp
mov
xchg
imul
mov
pop
shlb
sub
mov
push
in
ret
push
push
lcall
add
push
test
loope
loope
pop
andl
mov
dec
pusha
aaa
push
gs
xchg
inc
leave
adc
sub
lods
test
mov
cwtl
jecxz
xchg
js
mov
jnp
add
xchg
je
mov
mov
aas
stc
lods
xor
lea
outsl
aam
dec
pop
mov
hlt
leave
jmp
xchg
ret
rcll
xorl
pushf
in
mov
fildl
mov
aas
mov
out
xchg
jne
inc
push
jo
dec
movsb
jno
add
movb
pushf
push
roll
sbb
add
or
dec
or
insl
push
and
lahf
data16
ret
scas
shll
push
inc
mov
pop
test
out
movsl
into
popf
inc
cltd
jns
mov
push
stos
cmp
push
or
mov
cmp
or
xor
fidivl
mov
sub
pop
and
push
mov
lea
js
xor
jmp
stos
and
popf
fwait
adc
dec
adcl
sti
and
jmp
mov
popf
sbb
ror
inc
loope
add
jno
cmc
icebp
jno
push
fwait
xchg
icebp
loope
fisttpl
cmp
mov
mov
std
mov
sub
add
inc
insl
jo
test
and
push
xor
cmp
inc
jns
iret
xchg
push
inc
xor
test
dec
ds
xor
es
add
ja
xchg
mov
mov
mov
jno
dec
gs
scas
mov
xchg
fdiv
sub
bound
add
ret
lods
iret
sub
mov
xor
cmp
dec
repnz
push
out
andl
inc
push
repnz
in
hlt
shl
hlt
cmpsl
mov
xor
in
fwait
dec
dec
mov
pusha
rorl
xchg
adc
pop
mov
out
mov
cmp
divb
jmp
add
mov
fs
fisubrl
jb
mov
cmp
clc
jmp
xchg
sbb
mov
fnstenv
dec
mov
call
cmp
mov
jb
inc
mov
cmpsl
js
ret
adc
repnz
adc
pop
push
push
addr16
pop
std
sub
rclb
and
jns
andb
push
fisubl
or
les
sbb
xchg
hlt
pop
pop
je
outsb
test
cmp
cmp
fldl
in
cmp
cmp
rcrb
ljmp
push
xchg
mov
xor
test
fistpl
add
pop
int3
aad
scas
fidivrl
shl
add
sub
xor
cmc
out
sub
in
or
sti
cs
inc
mov
insb
cmp
cmc
lret
nop
in
cmc
xchg
and
push
sbb
clc
andb
or
mov
lock
push
jne
add
fs
pop
call
and
mov
cmp
add
push
jp
cmp
int3
mov
jo
push
out
cwtl
inc
aam
xchg
push
ss
xchg
lret
sub
fcmovb
mov
sub
bound
mov
lds
stc
or
inc
shl
cmp
cmp
add
sbb
sti
push
ja
push
test
stc
sbb
out
icebp
lds
loopne
mov
fs
arpl
cld
roll
ja
xchg
das
inc
arpl
xchg
js
jns
test
addl
scas
mov
js
xchg
push
addr16
ret
inc
ss
es
hlt
hlt
lret
out
stc
mov
repz
scas
not
data16
mov
or
xchg
add
mov
and
and
cld
add
cmpl
mov
cmp
mov
cwtl
ret
lods
out
mov
dec
stos
call
stos
jmp
mov
push
inc
mov
pop
and
dec
or
xchg
es
mov
sbb
jl
or
shll
jo
sbb
out
jge
stos
sub
rcrl
movsb
or
shlb
fisubl
dec
js
arpl
add
ficoml
shll
xchg
lret
xor
mov
adc
ja
cmc
pop
dec
loopne
into
shrl
shlb
fisubs
imul
loopne
sbb
mov
loop
or
daa
lock
sbb
fmuls
sub
mov
ret
mov
sub
pop
xor
push
jbe
imul
repz
mov
imul
mov
sub
mov
loopne
mov
add
push
int
pusha
divl
sub
cld
mulb
or
jne
dec
addb
rorl
and
xor
sub
adcb
add
jae
xor
imul
daa
es
lret
aad
inc
fildl
sub
adc
scas
shll
xor
addr16
orb
mov
loopne
mov
add
pushf
stos
arpl
sub
fisttps
in
xor
sbb
shrl
roll
jecxz
aaa
mov
rorl
imul
dec
mov
movsb
mov
xor
add
test
xchg
ret
pusha
out
xor
sbb
fidivl
push
xchg
pusha
in
loope
movsl
js
sbb
sti
stc
mov
and
push
popw
aaa
or
mov
and
sbb
sub
push
mov
adc
lret
ljmp
sarl
repz
out
mov
mov
add
xchg
cmp
cvtps2pd
mov
sbb
stos
mov
lret
pop
sbb
cmpsl
lahf
mov
mov
cmp
sbb
mov
jae
xor
pop
sbb
push
xchg
std
sbb
aaa
xor
xchg
shll
outsb
daa
cmp
mov
pop
pop
mov
sbb
out
subl
push
mov
mov
add
cld
or
jecxz
xor
sub
imul
adc
icebp
mov
loop
stos
sub
stos
xchg
pop
jecxz
aaa
and
sbb
enter
push
mov
push
jae
xor
lahf
mov
imul
xchg
addr16
test
int3
xchg
or
aaa
xor
and
cmpsb
ja
roll
dec
addr16
mov
sub
movsb
or
cmpsl
ljmp
push
andl
add
dec
add
pusha
aas
xor
enter
clc
stos
data16
push
pop
xlat
jecxz
xchg
and
mov
dec
popf
mov
xchg
jge
pop
push
inc
das
test
sub
data16
cmpsl
call
lcall
daa
mov
shrl
push
xchg
and
orb
mov
push
pop
sbb
xor
sbb
jp
daa
cmpsb
inc
jp
mov
jecxz
movsl
ret
sbb
sbb
and
fcmovb
pop
xchg
mov
cmpsb
jnp
outsb
cmp
ja
push
loop
lret
mov
pusha
add
lcall
loop
mov
lret
push
inc
mov
xchg
in
pop
xor
ss
stc
xchg
mov
test
jg
ss
xor
mov
add
arpl
in
mov
cmpsl
fadd
mov
stos
fdivrl
pop
gs
shlb
sarl
repz
fcmovne
subb
cmp
sbb
mov
ret
inc
andl
mov
in
dec
add
stc
enter
mov
dec
aaa
mov
int
out
pusha
sahf
push
or
adc
inc
mov
xlat
inc
test
cmp
loopne
call
push
jge
inc
xor
ljmp
std
xchg
in
xor
pop
mov
div
fimull
les
dec
mov
scas
jne
std
push
icebp
sarb
push
mov
lds
aam
mov
in
ret
aam
adc
je
adc
or
sbb
ja
adc
mov
cmp
adc
xor
or
sbb
and
repnz
inc
loope
xchg
jge
dec
or
pop
inc
out
mov
ljmp
mov
loopne
gs
inc
adc
mov
ret
dec
mov
fs
fwait
andb
sarl
dec
add
arpl
test
lret
int3
mov
inc
out
fisubrs
in
ds
inc
in
cwtl
outsb
mov
inc
mov
lods
or
lcall
inc
leave
aam
test
cmp
cmc
mov
inc
bound
adc
inc
inc
xlat
add
xchg
int3
jb
nop
and
push
lock
pop
push
jb
clc
dec
popf
mov
xlat
mov
lcall
leave
loope
lds
sbb
pop
addr16
adc
mov
les
enter
mov
pushf
mov
mov
aam
inc
test
and
mov
fstl
mov
jmp
or
mov
xchg
or
repnz
inc
jne
addr16
lods
roll
arpl
push
addr16
clc
mov
sub
movsl
xor
lret
mov
dec
jle
mov
push
push
mov
cmpsl
pop
mov
cmpsl
stos
cmp
add
cld
mov
mov
inc
adc
push
js
mov
mov
xlat
int3
stos
daa
cmc
movsl
aaa
out
call
mov
aas
jmp
aaa
add
xchg
sub
xchg
mov
stos
js
dec
mov
pop
ss
cmp
iret
lea
stos
jns
les
or
cmp
mov
or
fnstenv
call
mov
out
movq
adc
mov
cmpsl
mov
cmp
cmpsl
mov
or
xchg
add
sub
add
xor
mov
pop
jae
adc
cmc
les
repz
push
stc
push
lcall
loop
add
pushf
or
or
rcll
rorb
pop
test
ret
sahf
enter
in
jp
jecxz
movsl
aas
xchg
rcll
jbe
cmp
pop
mov
push
xchg
xor
mov
ds
lock
pop
cmp
push
das
mov
dec
loope
sbbl
fiadds
sarb
jo
xchg
fmuls
sarb
fisubrs
enter
pop
pop
mov
xchg
and
mov
popf
mov
or
sti
inc
inc
rcr
jg
mov
cmp
inc
ss
rcl
mov
pop
push
outsb
jae
pop
fbstp
imul
xchg
roll
ret
mov
xor
cmpsl
push
lock
xor
xchg
xorb
shl
addl
xchg
mov
xchg
enter
mov
stos
sbb
gs
stos
out
lea
push
sub
push
xor
ds
add
outsb
popa
xchg
or
lahf
sbb
jno
sbb
mov
dec
outsl
sarl
sbb
lock
nop
inc
outsb
cmpsl
push
cld
pushf
rorb
adc
and
out
inc
mov
xchg
push
call
pop
jbe
in
subl
mov
add
push
inc
sahf
les
and
into
sub
int3
mov
adc
xchg
test
fistpl
mov
nop
xchg
add
sub
push
orb
mov
xchg
cmpsb
mov
adc
fldenv
rcrl
pop
in
mov
pushf
mov
lret
pop
orl
push
fdivl
sbb
sbb
pop
mov
xchg
das
stos
push
pop
adc
sahf
into
stc
icebp
mov
cmpsl
mov
sub
mov
push
mov
xchg
sub
negb
movsb
call
jecxz
insb
dec
mov
int3
push
sbb
sbb
push
out
mov
push
aam
xor
push
jnp
cs
testb
shl
inc
mov
dec
out
jo
xor
movb
sub
sub
js
test
jl
adc
jp
mov
jae
cmp
cmpsl
mov
out
jo
pop
mov
sbb
bound
clc
mov
sbbl
out
push
inc
repnz
out
addr16
mov
testl
fildl
bound
call
sbb
xchg
or
push
orl
int3
xor
aad
inc
loope
stc
pop
dec
dec
bound
or
bound
mov
insb
setle
push
shrl
je
jl
testl
sub
xor
fistpl
and
push
test
arpl
scas
xor
push
push
jmp
ret
out
jge
push
sub
add
mov
sbb
xchg
pop
inc
push
nop
out
fcompl
sbb
lcall
adc
sub
call
jnp
decb
sbb
or
jmp
inc
movl
ficomps
stos
int
addr16
adc
popa
lret
sub
push
push
mov
push
adc
jns
les
add
test
lcall
or
or
push
inc
cmpsl
scas
mov
inc
sti
or
rcrl
js
subb
aas
sbb
jo
inc
xchg
xchg
dec
shrl
adc
mov
incl
and
andb
or
push
mov
mov
scas
mov
enter
add
jnp
mov
es
ljmp
out
sbb
xchg
jecxz
inc
xor
mov
cmp
imul
mov
fs
jo
dec
add
lods
jecxz
xchg
lods
jg
arpl
test
mov
ljmp
mov
cltd
sti
cli
push
je
lds
push
add
xchg
cmpsb
bound
mov
mov
stos
mov
mov
in
in
jo
push
mov
push
inc
stos
mov
mov
mov
pop
xchg
rclb
xor
mov
imul
adc
mov
push
lods
lret
clc
and
iret
das
sbb
inc
xor
inc
cmp
sub
inc
fldt
std
ljmp
cmp
sub
xchg
jge
pushf
pop
aad
sar
push
jmp
xchg
incb
pushf
dec
les
rcrb
out
nop
and
ret
mov
inc
imul
fcom
icebp
imul
adc
mov
pop
outsb
pop
cmp
push
fs
dec
xor
ljmp
pop
push
ja
or
test
xchg
imulb
pop
data16
out
pusha
mov
ljmp
xor
popl
arpl
mov
lock
jmp
inc
sbb
push
rorl
jns
movl
lds
rcrb
pusha
into
repnz
test
or
dec
ss
jno
push
xchg
push
sbb
xchg
jnp
sbb
add
pcmpgtd
testl
cmpsl
inc
loop
xchg
inc
call
das
xchg
xchg
jmp
jp
in
bound
xor
lret
insl
in
insl
adc
xor
aaa
cld
mov
iret
inc
and
mov
xchg
daa
jmp
stc
inc
push
rolb
jl
cmp
jle
sahf
and
popf
mov
pop
sub
mov
cmp
pusha
scas
sbb
mov
cwtl
mov
or
mov
mov
repz
popw
cmpsb
lahf
mov
jge
test
push
adc
mov
iret
mov
sbb
cmp
inc
adc
cmc
pusha
loope
pop
int3
icebp
iret
add
push
or
cmp
orb
mov
mov
dec
std
xchg
sbbl
dec
aas
add
rorl
test
rorl
aam
push
sbb
outsb
xchg
fdivrl
sbb
sahf
insb
lods
mov
jl
cwtl
loopne
sti
mov
movsb
fiaddl
push
inc
aad
lods
ret
cwtl
pop
iret
sub
in
or
bound
mov
mov
pop
push
in
push
lods
mov
mov
cmp
pop
xor
das
push
int
imul
lahf
jecxz
popa
popf
or
mov
out
popa
cmp
jo
repnz
push
sub
ds
stos
cmp
out
mov
push
into
out
mov
addr16
mov
cld
mov
movsl
gs
lock
push
into
ret
dec
shr
mov
push
pop
iret
mov
adc
jg
sbbb
jecxz
lret
lea
arpl
sbb
fsubp
loope
cwtl
stos
clc
push
mov
cltd
repz
mov
xchg
sbb
jno
dec
popf
clc
mov
mov
xchg
or
inc
mov
test
fstl
inc
js
test
jo
push
je
push
ss
mov
cwtl
or
loop
in
sub
pusha
sahf
and
ret
incb
aas
stc
je
and
mov
in
pushf
movsl
lods
icebp
rolb
gs
dec
jne
int3
mov
in
data16
fwait
add
cmc
xchg
aad
rclb
addl
lahf
add
movsl
add
ljmp
lcall
int
jae
xchg
jmp
sahf
jno
or
cld
mov
addr16
repnz
mov
inc
pop
xor
fsubrl
lock
and
xchg
fidivs
jp
or
jecxz
outsb
inc
data16
xchg
mov
cwtl
sub
int3
roll
jp
or
fisubrs
jle
mov
sahf
shll
inc
xchg
lahf
rolb
in
mov
cmp
sti
test
std
imul
bound
xchg
scas
mov
jbe
lret
test
scas
mov
add
inc
jle
push
movsb
in
sbb
std
pop
insl
out
les
aam
shrl
into
rorb
out
inc
fiadds
clc
fcompl
push
mov
lret
mov
cmpsb
mov
mov
daa
mov
mov
loope
ja
mov
add
pop
push
arpl
sti
fnsave
push
mov
xchg
mov
sbb
xor
clc
inc
push
gs
lds
adc
pusha
lods
fnstcw
imul
shr
loopne
lret
jae
sub
add
stos
lret
in
loopne
dec
out
add
test
cmpsb
xchg
fs
std
mov
push
sbb
push
int3
jp
cwtl
lret
imul
mov
fldl
sub
mov
icebp
fldt
add
inc
jb
lret
xchg
enter
lret
xchg
arpl
loope
add
out
jae
or
stc
aam
addr16
adc
push
out
sti
mov
int3
in
shlb
xchg
and
insl
mov
xchg
push
or
mov
xor
adc
xchg
add
cmpl
test
mov
mov
cmp
and
sbb
mov
mov
popa
sub
xchg
roll
rorb
das
pop
stos
mov
jb
test
not
jb
push
fwait
sub
ficoml
mov
sub
push
adc
cmp
sbb
sbb
adc
jmp
insb
scas
int
jns
cmp
enter
loop
jb
sub
ljmp
scas
into
es
dec
mov
xlat
jl
sbb
inc
sbb
cli
clc
mov
cwtl
ret
mov
xchg
add
xchg
adc
nop
stos
add
in
mov
out
xchg
sbb
cmpsl
jae
dec
cmpsb
ret
inc
push
jecxz
xchg
or
push
insl
jb
adc
cmp
cltd
push
fcom
pop
sbb
jo
push
jne
int3
stos
jg
add
sub
jge
pop
pop
xor
or
inc
test
inc
push
inc
mov
jle
repz
xchg
fmull
xchg
imul
sar
sub
leave
adc
test
scas
loopew
repnz
add
mov
cmp
ja
xchg
sbb
lods
lcall
add
xor
lcall
aad
jnp
lcall
mov
push
fcoml
dec
cld
mov
flds
out
out
aam
in
xor
push
sbb
inc
and
scas
dec
cmp
adc
pushf
test
stc
pusha
adc
out
movsb
stos
inc
daa
pop
into
push
and
stc
insl
xchg
jmp
jnp
sub
cltd
adc
xor
test
rorl
xor
sbb
lds
pop
and
jmp
ljmp
in
data16
divl
pushf
push
fsubs
and
and
push
cmp
aam
cmpsl
mov
dec
cmp
mov
push
clc
ja
pop
pop
gs
inc
add
jp
inc
rclb
push
dec
mov
sbb
jb
pop
push
nop
inc
js
pop
mov
inc
lds
ret
fwait
inc
movsl
outsl
cli
or
mov
pop
stc
add
fsin
ljmp
scas
test
mov
dec
adc
test
scas
jp
orl
data16
frstor
mov
mov
fildll
loope
repnz
ljmp
lock
inc
push
ret
and
dec
lret
rcrb
repz
and
xor
inc
inc
jge
mov
cld
add
enter
add
es
les
test
mov
pop
ljmp
push
push
stc
pop
mov
repz
shll
push
ds
aad
adc
lods
in
xchg
in
nop
dec
call
hlt
jl
dec
fsts
mul
fildl
loope
inc
push
mov
idivl
adc
cli
scas
ljmp
jno
insl
xchg
rcr
test
push
or
outsb
das
lods
sub
cmp
and
inc
xlat
rcrl
shll
adc
and
pop
ss
outsb
cmp
mov
inc
pop
pop
cld
fstl
test
repnz
cmc
cmp
adc
mov
outsl
jmp
clc
xor
aad
sbb
lock
je
mov
aam
hlt
lods
data16
mov
sub
mov
aas
jo
dec
push
add
imul
sub
xchg
sbb
ret
mov
incl
jmp
mov
jecxz
jmp
fiaddl
shlb
addb
mov
movsb
and
sbb
lret
push
and
mov
pop
jb
mov
inc
cmpsb
test
enter
or
pavgb
aam
push
mov
push
mov
mov
xor
mov
nop
movsl
mov
inc
mov
outsb
inc
sarl
mov
fs
fildl
cmpsl
pushf
std
or
add
adc
ret
adc
icebp
sbb
sub
xchg
pop
sub
dec
repz
negb
stc
cwtl
add
pop
sbb
inc
add
sbb
popf
jl
xor
mov
and
mov
xchg
shrl
add
cwtl
add
push
popf
aam
fwait
xor
sub
adc
rcrl
sbb
sti
std
mov
testb
and
xchg
leave
ds
loop
aad
fistps
outsb
add
xor
loope
mov
mov
enter
outsb
out
or
mov
les
stos
jnp
or
rcrb
outsb
sub
mov
sub
and
cmc
enter
and
movsb
jmp
hlt
pushf
js
cwtl
sbb
fstpt
jle
mov
ds
pop
xor
and
outsl
loop
sbb
mov
pop
movsb
cmp
out
aam
out
pop
or
mov
cmp
push
std
arpl
clc
jecxz
xchg
xchg
arpl
add
fcmovu
sahf
lcall
sub
lock
fisubrl
sbb
mov
pop
mov
sub
or
insb
bound
fnstcw
lret
sub
pop
push
xor
arpl
data16
add
imul
cmp
popa
aad
push
scas
test
mov
xor
std
enter
mov
lea
xor
sub
adc
js
sbb
cmpsl
jge
pop
dec
add
fnsave
cs
push
pop
add
push
cmp
aaa
test
sbb
sub
push
in
popa
out
jne
outsb
aad
jae
stc
mov
pop
adc
insl
clc
mov
cmp
inc
sub
fisubl
push
sub
xchg
les
lret
jmp
mov
sub
movzwl
int
enterw
pop
dec
ss
xchg
sub
jge
jmp
push
and
iret
cli
xchg
xchg
add
idiv
sub
cld
lcall
out
sub
xchg
jo
mov
xchg
cmp
sub
enter
ret
jg
or
lcall
jmp
mov
mov
outsb
push
mov
cld
cmc
in
sbb
cmp
popf
shl
push
cltd
test
mov
js
mov
xor
cmpl
in
add
divl
push
cmp
push
lcall
sub
jbe
negb
adc
lea
int
icebp
mov
cmp
adc
int
std
lds
push
cmp
in
mov
cmp
sbb
fidivs
lret
mov
dec
mul
xchg
shlb
mov
mov
mov
mov
mov
and
mov
ljmp
pop
ds
fildll
je
outsb
loopne
sub
cmp
dec
dec
sbb
xlat
xor
sub
fldl
mov
int3
movsl
ret
sarb
and
fiaddl
cmc
sbb
xor
stc
adc
leave
sub
fdivl
mov
mov
int
jb
into
jo
sbb
jae
push
repnz
adc
js
mov
icebp
jno
notb
mov
or
sbbb
pop
fnstsw
fsubs
test
xor
sbb
aam
and
xor
int3
xchg
push
mov
xchg
or
gs
pusha
iret
pushf
cmpsl
arpl
cmp
mov
sbb
lcall
movsb
xchg
lods
xchg
mov
dec
mov
xchg
loope
sub
add
jecxz
pop
scas
les
pop
mov
arpl
ret
jns
fsubrl
xchg
fimuls
shl
test
nop
cmp
fcmove
mov
cs
jmp
aaa
sub
lret
mov
jl
push
aad
jns
cmp
popa
jg
mov
mov
sbb
sub
es
or
frndint
loopne
mov
cmp
sub
mov
cmpsl
jns
add
xchg
dec
mov
cmp
jecxz
adc
cltd
or
mov
cltd
insl
fwait
cwtl
xor
xchg
add
adc
out
jo
lods
mov
imull
outsl
sub
sub
mov
inc
aam
nop
test
mov
inc
outsb
lods
ror
xchg
xchg
clc
xchg
fldcw
xlat
les
and
and
push
inc
sbb
mov
mov
push
push
dec
inc
lods
cs
scas
mov
push
sbb
js
add
dec
mov
xor
das
lret
dec
xor
cmp
sbb
lods
je
ljmp
fisubrl
into
aad
aam
jl
or
dec
xchg
pop
sbb
adc
xchg
jb
aad
inc
sarl
ja
fcmovb
fwait
mov
push
sti
xor
mov
pop
pop
insl
lret
out
popf
adc
pop
lods
ret
in
in
fistl
fmuls
into
sbb
decl
xor
xchg
sti
daa
sbb
push
xor
inc
jnp
out
aam
loop
xchg
pushf
adc
shlb
movsl
xor
mov
arpl
xchg
stos
in
add
arpl
mov
stc
aaa
out
loop
in
and
mov
lahf
or
sub
fidivl
add
lea
sahf
aad
loop
sbb
jmp
or
add
push
je
andb
pop
out
testb
scas
repz
xchg
mov
adc
dec
jmp
shll
xor
xchg
pop
jg
cltd
test
test
std
out
out
mov
ror
xchg
mov
into
cmp
insb
mov
adc
ljmp
inc
mov
dec
repz
lahf
imul
ljmp
lods
cmp
clc
jmp
cli
xor
xor
mov
scas
aaa
add
sbb
jae
mov
movntps
xorb
xlat
xchg
fiaddl
rcl
cmc
add
inc
sbb
shrl
inc
lret
adc
test
cmovns
out
insl
std
test
jbe
mov
sbb
out
std
aad
xchg
and
mov
movsl
stos
adc
mov
jo
inc
enter
andb
aad
add
mov
dec
jg
sarl
sub
sbb
push
dec
xchg
pop
clc
aaa
scas
mov
sarl
add
push
inc
pop
inc
sbb
adc
fmulp
and
arpl
xchg
sbb
mov
and
cmp
or
mov
mov
sbbl
sub
cld
adc
repnz
sbb
jl
xchg
pop
add
ret
icebp
mov
or
mov
lret
xchg
lods
lea
stos
mov
fs
mov
icebp
aad
dec
cltd
ret
daa
adc
or
lods
idivl
sbb
outsb
std
mov
push
repz
bound
mov
mov
mov
pop
xor
jno
test
rcll
inc
js
jne
add
inc
push
shlb
mov
popa
cmp
vaddsubps
xchg
and
xlat
hlt
icebp
fstpl
pop
xchg
pop
xchg
pop
repnz
or
jmp
pop
iret
aam
push
jo
cmpsl
or
adc
jae
dec
jecxz
xchg
pusha
fildll
clc
ret
sub
js
xchg
inc
xor
and
add
jns
push
sbb
mov
xor
jmp
movsb
pop
jo
in
ffreep
popf
jbe
inc
test
add
cmp
jb
add
mov
rorb
add
ja
xchg
lock
rcrb
mov
iret
mov
ljmp
addr16
rorb
xchg
cmp
lods
fucomi
mov
or
xchg
mov
ss
sub
mov
popa
mov
cltd
test
xchg
pop
ret
rcl
ds
mov
dec
and
movsl
dec
fstpt
std
enter
divl
xlat
lret
mov
inc
mov
ljmp
lret
xchg
dec
or
fwait
aam
mov
loope
push
mov
mov
cmpsb
push
pop
push
mov
dec
bound
fisttpl
cmp
sub
test
adc
bound
je
scas
push
xchg
mov
push
dec
mov
add
adc
cwtl
mov
push
pop
and
inc
outsl
mov
scas
bound
inc
inc
dec
call
jno
jns
enter
mov
xchg
mov
daa
jo
xchg
andl
sbb
int
loop
dec
push
mov
lods
dec
stos
add
jge
aaa
xor
cmpsb
fstpt
sub
cmp
icebp
data16
mov
pop
jnp
lahf
stos
jmp
int3
jp
cmc
sbb
jecxz
mov
sub
jns
push
sbb
add
test
sub
xchg
xor
jp
sbb
stos
dec
repnz
xchg
dec
pop
iret
iret
call
movsb
fnstcw
jecxz
pushf
mov
push
push
popf
out
push
jle
out
mov
sub
xchg
and
ss
xor
dec
std
test
dec
xlat
test
int3
fdivrl
or
movl
pop
cwtl
sub
cld
test
xor
fwait
adc
jae
dec
repnz
push
mov
lahf
hlt
dec
push
mov
jge
sub
fmuls
insl
test
jns
mov
gs
inc
in
mov
xchg
mov
xor
sbb
mov
lock
sarl
fisttps
ret
iret
movsl
mov
lods
call
lret
mov
les
outsl
or
lock
aam
mov
aaa
xor
mov
jle
fsubs
xchg
cmpsb
jo
adc
fsubl
fildll
push
and
imull
adc
test
bound
aas
push
inc
xor
inc
and
mov
popa
mov
lods
xor
dec
sub
sub
outsl
adcb
pop
cmp
mov
mov
xchg
cmpsl
inc
fwait
gs
jge
shl
jns
int3
mov
push
adc
sbb
jp
in
lock
pop
jae
fimuls
sbb
pop
adc
cmp
popa
jno
pop
les
sub
and
das
cmp
fs
sub
sub
push
pop
add
daa
jmp
addb
mov
imul
jle
stos
pusha
lods
xor
and
sub
insl
data16
mov
cmpsl
fidivrl
repz
scas
cmp
jmp
lret
dec
rcrl
push
sarb
stos
cwtl
lods
adc
fcomps
aaa
sub
std
xorl
xlat
cltd
xor
xchg
push
dec
xor
pop
daa
addb
jle
shl
sub
dec
fdiv
dec
mov
lret
outsb
orl
push
sahf
stc
or
jnp
daa
mov
bound
test
pop
xor
fwait
cmpsb
push
xacquire
sbb
loopne
ret
ljmp
mov
xchg
xor
pop
loop
adc
dec
inc
dec
in
and
push
lea
clc
ret
ljmp
call
clc
and
das
add
sbbb
ljmp
pop
movsb
adc
ljmp
loop
cmp
lahf
dec
push
andl
stos
mov
pop
sbbl
jo
pop
jbe
fsubs
add
lods
lock
sub
leave
push
mov
jb
adc
lret
jge
rcr
push
jno
xchg
push
rol
cmp
stos
jns
mov
cmpsl
out
jl
pop
add
xor
sub
mov
add
daa
fiaddl
gs
repz
idivl
loope
pop
mov
fwait
jae
mov
mov
sbb
lock
push
testl
orb
sub
aas
cmpsb
sub
mov
insb
mov
xor
xchg
sub
fisubl
into
stos
mov
lret
mov
orl
std
sub
jl
jl
dec
mov
daa
jle
loop
addr16
xchg
hlt
icebp
inc
loope
daa
and
in
jae
jge
jns
sub
repnz
pop
or
lods
aas
xor
mov
mov
mov
sbb
outsb
sub
or
pushl
ds
cwtl
adc
sub
dec
mov
loop
mov
stc
cmp
into
mov
sub
mov
cmp
xchg
push
push
jg
scas
cs
mov
insb
fists
mov
cwtl
and
popa
sbb
cmp
or
cli
and
ret
sbb
sub
dec
xchg
arpl
daa
jnp
loope
ret
sti
xchg
jo
jns
stos
insl
adc
push
shlb
addr16
push
out
clc
inc
jl
das
arpl
ljmp
adc
cs
mov
into
icebp
pop
mov
sub
inc
xchg
add
or
jl
cmpsl
xor
aas
shrb
pop
adc
sbb
jbe
or
icebp
cli
cmp
mov
pop
mov
shl
dec
imul
mov
cmpsl
xor
sti
mov
sub
movsb
sub
lea
sub
stc
imul
loopne
fcmovnb
dec
cmp
test
das
je
cmc
ret
in
xor
sbb
loope
push
dec
rcll
xlat
xlat
jmp
mov
cmp
sbb
cmp
adc
dec
mov
subb
inc
xor
inc
or
or
mov
pop
jecxz
lcall
mov
repz
or
aad
xor
jnp
dec
push
sahf
rcll
or
push
enter
ret
cmp
outsb
sahf
xchg
pop
dec
or
jmp
push
ss
sbb
out
ficoml
stc
push
arpl
sub
movsb
xor
push
lds
push
lret
daa
pop
fcompl
idivl
call
add
int
xchg
xor
or
sbb
cltd
cwtl
stos
and
ja
cmpsl
jns
jae
inc
dec
fcoml
xchg
cwtl
and
jo
xlat
movb
or
add
cmp
dec
jge
ret
test
add
enter
icebp
arpl
movl
lahf
pop
adc
mov
cmc
in
pop
ljmp
push
adc
mov
sahf
pop
mov
repnz
enter
mov
add
adc
cwtl
adc
inc
jg
cmc
lret
add
sahf
mov
xor
inc
xchg
mov
outsb
and
pop
ret
add
mov
mov
sti
mov
test
mov
aad
inc
add
mov
xchg
adc
mov
ret
dec
push
push
popa
insl
and
out
adc
sub
sti
adc
xor
add
idivl
cmp
inc
and
andl
pop
adc
xchg
pop
test
xor
or
jmp
jmp
sbb
ss
pusha
sub
in
popa
fcmovnbe
sti
fdivl
std
stos
sbb
lock
adc
std
ss
stc
cmp
outsb
dec
and
sahf
addl
iret
adcl
pop
or
pop
test
shll
xor
mov
or
adc
hlt
xor
out
jo
xchg
shr
jg
sbb
mov
mov
mov
mov
pop
das
jmp
mov
mul
call
xchg
pop
xchg
and
jge
and
xor
int3
mov
mov
sbb
mov
enter
jo
xchg
bound
mov
shll
cmpsl
stc
add
lret
cmc
sbb
stos
enter
arpl
insb
jecxz
mov
mov
and
xor
test
jnp
sbb
mov
movsl
sbb
loope
push
sbb
divb
xor
aas
ffreep
inc
enter
or
fisttpl
inc
push
cmp
mov
jg
test
addl
clc
dec
adc
fdivl
adc
mov
push
das
stos
mov
xor
add
mov
add
xchg
dec
idivb
xchg
push
and
cmpsb
pop
sub
movsb
repnz
lds
and
or
stos
or
xor
repz
mov
push
int
call
data16
jnp
call
push
pop
mov
cmp
and
xchg
pushf
cmc
lods
lods
adc
stc
push
xor
mov
cmp
push
fimuls
sub
xchg
pop
imul
popf
sub
lret
jp
jne
mov
jae
ficomps
test
pop
sub
call
imul
repz
mov
fs
sti
cmpsb
pop
fldt
xchg
call
and
mov
and
jg
int
xor
mov
shl
jbe
xor
mov
cmpsb
call
mov
stos
mov
add
addr16
in
adc
ss
out
imul
out
xchg
adc
inc
cmp
lahf
lds
arpl
push
aam
rorl
imul
es
or
dec
adc
jo
and
xchg
repz
lods
scas
popf
dec
mov
and
rcll
jo
test
pushf
jne
fsubrs
mov
add
iret
mov
out
mov
push
popa
add
xchg
and
add
xchg
sbb
pushf
xchg
mov
test
fcomi
jp
jnp
push
jl
arpl
inc
ja
fs
xchg
inc
daa
test
outsb
popa
mov
sub
mov
les
jns
enter
xchg
push
lret
sbb
adc
xor
mov
fwait
les
mov
ret
int3
mov
testb
adc
mov
push
mov
ds
popf
add
cmpsb
cmpb
sbb
mov
or
ss
xchg
xchg
add
imul
fcmovnu
dec
mov
call
stos
push
cltd
lea
shlb
mov
or
ja
push
push
lock
scas
jns
shlb
or
adc
xchg
sahf
xchg
leave
cmp
push
scas
pop
jmp
add
ds
seta
jne
or
call
call
sub
stos
xchg
cmp
aaa
cmp
jno
pop
jl
repz
cmc
sbb
adc
jo
xlat
repz
cmpl
sbb
push
cld
mov
jl
out
enter
loopne
lahf
es
sub
sub
addr16
fwait
cmp
out
jmp
bound
mov
cmc
adc
pop
mov
scas
mov
sbb
cmc
cmp
or
inc
sub
push
rep
fldenv
xchg
ja
xor
and
push
pop
dec
pushf
adc
sbb
cmp
and
inc
fsubr
outsl
pop
inc
in
dec
sbb
lods
ficoml
xchg
add
push
pop
in
scas
pop
pusha
jmp
mov
adc
push
cli
mov
push
inc
fildl
cmp
sub
in
xor
jb
bound
js
add
and
fisubrs
jmp
fsubl
fsub
pop
ds
sti
inc
push
in
push
cwtl
cld
sahf
mov
fs
jbe
cmp
mov
sti
push
xlat
add
push
mov
mov
mov
or
lret
xchg
xchg
sbb
gs
add
xor
loop
jbe
mov
jmp
push
dec
sbb
pusha
add
enter
cs
in
pop
adc
jmp
mov
test
add
and
cwtl
pop
xor
loope
sbb
rorb
pop
sub
jle
inc
sub
dec
pause
enter
xor
icebp
xor
jae
cmp
adc
mov
out
in
xchg
shlb
jp
mov
inc
jp
and
mov
push
inc
pushf
jle
fsubrl
xor
ljmp
sub
adc
subl
jge
imul
push
fldcw
jmp
push
rorb
xor
mov
mov
or
fadd
and
arpl
mov
push
cs
dec
jne
scas
sbb
xchg
inc
gs
je
adc
int3
scas
inc
daa
xchg
mov
mov
xchg
daa
add
xchg
dec
xchg
test
shll
jg
and
push
dec
rcrb
arpl
ss
pop
iret
xchg
popa
fists
sub
sbb
push
mov
leave
sti
fldcw
int3
add
fsubrs
rcrl
or
push
mov
dec
xchg
icebp
sbb
ret
mov
sub
lods
js
add
mov
popa
xchg
cld
dec
arpl
fidivs
in
sti
outsl
test
sti
add
push
test
lret
add
cmp
jo
push
xor
sbb
xor
add
scas
mov
test
jmp
pop
lret
dec
xchg
pop
adc
add
xchg
movsb
dec
add
enter
jbe
aaa
int3
mov
das
mov
enter
loop
mov
adc
dec
mov
repz
push
mov
clc
or
out
and
scas
xchg
mov
imul
std
les
into
push
rcrl
adc
cmc
inc
sub
movsb
mov
fcmovnbe
pop
or
bsr
xchg
rcl
cmpsl
nop
pop
mov
fsts
dec
mov
lahf
mov
sub
or
imul
adc
ret
mov
adc
inc
mov
xchg
in
xchg
cmp
cld
enter
dec
int3
in
mov
push
call
dec
pop
cmp
icebp
mov
or
clc
add
sub
icebp
xor
loop
mov
add
jle
push
mov
or
fisubs
stos
testb
push
ds
stc
cmpsl
int
fs
sarl
xchg
in
mov
add
add
sbb
jo
scas
sbb
mov
jp
cmp
fisubl
push
ss
push
and
mov
inc
mov
xorl
std
xor
aaa
jne
jmp
fldcw
inc
mov
dec
mov
jne,pn
jl
jmp
sub
xchg
rcll
cmp
dec
arpl
pop
leave
call
cs
lea
cmp
insb
das
call
sub
cmp
lock
lret
cltd
in
mov
sbb
frstor
stos
out
popf
xchg
or
push
lahf
cmp
das
out
mov
or
xor
fsts
mov
std
mov
cli
pop
pop
sub
mov
in
ret
jle
jge
and
dec
adc
andl
mov
add
push
mov
push
jnp
dec
out
push
push
aaa
and
lret
das
pop
xchg
xor
inc
js
xchg
xchg
pushf
jmp
or
inc
out
sbb
mov
sbb
or
mov
and
mov
dec
sub
jnp
lret
adc
lock
push
aas
or
jle
push
mov
adc
mov
fimull
mov
mov
adc
fnstcw
std
dec
movsl
mov
les
lahf
pop
fistl
jne
lds
push
sbb
pop
fbld
loop
jo
orb
mov
rcrb
shrb
inc
push
jno
insl
in
icebp
push
push
addr16
pop
mov
pop
mov
cli
call
daa
push
lcall
fcompl
loope
push
rorl
mov
ficompl
out
mov
cmpl
movl
pop
cmp
jl
rcr
sub
pop
popa
ljmp
in
or
aas
xchg
aas
mov
mov
shlb
ret
dec
inc
nop
inc
aad
xor
ja
test
sbb
sbb
fiadds
out
jae
cmp
mov
pushf
sub
ss
sub
ret
dec
les
mov
sbb
test
dec
stos
cmpsb
push
lods
rolb
xchg
int
lock
or
std
jl
stc
call
pop
and
sbb
stc
lods
pop
mov
loop
scas
je
cmp
scas
clc
insl
outsb
and
push
cltd
push
xor
xchg
sbb
mov
pop
je
lds
test
repz
jp
out
push
pushf
xor
adc
cmp
and
inc
lahf
jne
add
jo
lock
mov
jns
sub
mov
lods
or
sub
imul
ljmp
jb
xchg
outsl
sub
rorl
ret
shlb
sbb
and
sti
test
mov
jecxz
xor
call
clc
test
push
rclb
int3
pop
rorb
int
mov
movb
and
sub
or
mov
ret
cwtl
dec
cmp
jl
cs
orl
cmp
dec
cmp
shl
xchg
lret
dec
mov
cmpsl
shll
popa
dec
or
nop
jns
pusha
xor
sbb
imul
enter
aad
push
pop
testb
ja
xor
mov
mov
bswap
cmpsb
mov
or
popf
cmp
fucom
mov
pop
stos
adc
sbb
fisubrs
cmp
aas
jb
and
shlb
jmp
test
leave
shll
into
out
rcl
adcl
cmp
push
lahf
mov
xchg
stos
mov
das
js
pop
and
adc
ljmp
mov
int
mov
pop
incl
loop
adc
xor
icebp
mov
out
dec
xlat
fwait
jno
jne
fwait
add
cmp
frstor
mov
scas
sbb
sub
leave
jl
aad
cmp
cmpsb
hlt
mov
imul
ja
das
xchg
push
jns
fidivs
and
mov
or
mov
ja
mov
mov
das
stos
loopne
sbb
push
cmp
push
ficomps
mov
arpl
or
je
sbb
outsl
adc
test
sub
mov
cmp
pushf
out
stc
imul
imul
outsl
xchg
paddsw
xchg
lods
mov
mov
lds
loopne
cmp
in
mov
in
xor
jbe
enter
sbb
fcomi
jne
sahf
rcrl
jmp
cmpsb
jmp
xchg
cmp
cli
xor
ja
mov
and
popa
outsl
insl
xor
jl
imul
or
mov
jb
mov
gs
test
cld
jo
jecxz
stos
inc
and
xlat
add
xchg
mov
cmp
adc
mov
mov
add
rolb
and
inc
rclb
test
ja
and
fsubr
rcrb
and
xchg
push
jo
or
in
jbe
rorb
sahf
cli
push
mov
and
call
lret
insl
xchg
or
aaa
dec
stos
jno
sub
push
cmpb
cwtl
or
inc
test
fbld
in
and
fistpll
testl
adc
stos
bnd
inc
std
jns
jbe
popa
out
sbb
push
in
push
je
inc
jmp
and
jge
hlt
pop
push
in
pushf
std
mov
mov
and
cltd
fiaddl
rol
and
mov
jne
jg
jp
pop
sub
into
mov
xorl
loope
sbb
jne
shrb
pop
aaa
ret
into
hlt
xorl
sub
andl
jno
xchg
sbb
add
sbb
jg
lahf
das
mov
push
cmp
ds
and
mov
mulb
loope
push
fptan
push
sbb
fisttpll
xchg
loopne
sahf
stos
inc
jns
in
jmp
testb
add
jns
pop
jo
inc
cmp
insl
xchg
lcall
sub
jo
inc
shl
sub
aad
sbb
dec
dec
xorb
push
test
adc
negl
arpl
loop
mov
mov
scas
loope
or
andb
jns
sub
xor
outsl
aas
push
icebp
cmp
and
les
addl
arpl
mov
cmp
mov
sub
cmp
lea
jo
mov
ja
popf
loop
lcall
and
in
mov
lret
push
int
ja
ret
ja
gs
inc
gs
frstor
dec
push
xor
fsubs
roll
add
fsubr
scas
sbb
push
sti
cmpsb
xorl
inc
test
in
jne
mov
test
mov
xchg
les
fdivrs
jae
and
pop
sbb
ja
out
lret
jnp
mov
stc
aaa
lahf
arpl
ds
out
das
scas
jmp
fisubl
xchg
out
shll
fdivrp
inc
sbb
push
ret
mov
add
mov
pop
pop
loopne
ret
data16
xchg
adc
mov
sub
sbbl
jno
scas
inc
repnz
lds
shl
xchg
fwait
ret
pop
inc
addr16
pop
inc
mov
daa
mov
cmc
or
sub
call
adcl
into
push
aad
inc
pop
mov
jne
mov
jmp
lods
les
dec
push
jge
mov
repnz
sub
dec
mov
and
and
aas
add
lods
notb
iret
or
ror
in
jno
div
xchg
add
sub
gs
xchg
xchg
push
jnp
sub
xchg
ffree
jmp
fs
jne
pop
push
ljmp
inc
cmp
cltd
leave
aas
test
pop
mov
jnp
push
mov
leave
lds
stos
movsb
and
sub
add
cmp
mov
sub
fdivr
mov
mov
sub
rorb
es
sub
sub
jo
std
mov
xor
enter
dec
push
xchg
adc
and
cmc
ror
sub
outsl
adc
out
daa
adcl
push
addr16
mov
out
loop
enter
push
push
mov
jne
and
rolb
in
mov
or
push
mov
out
decl
mov
cmpl
push
sti
movntq
xor
jne
mov
jno
xor
out
xchg
xor
adc
in
push
inc
ffree
or
jg
psrad
lods
das
cmpsl
push
xor
cs
sub
ret
mov
mov
sbb
out
outsl
stos
lock
dec
xor
cmp
pop
lret
test
pop
sbb
out
push
cwtl
jbe
fcmovb
push
sahf
pushf
dec
shll
sbb
pop
stos
cltd
sysenter
sub
pop
adc
stos
inc
test
jmp
std
sahf
xchg
cmpsl
push
in
ffreep
mov
fsubrp
jmp
test
int3
sub
jg
pop
add
or
or
add
pop
fwait
xchg
in
or
out
lods
insl
arpl
jae
jg
mov
test
fiaddl
push
or
scas
fs
cltd
in
pop
sub
clc
jecxz
pusha
mov
loop,pt
clc
fildl
sub
mov
daa
sbb
pushf
cmp
pusha
je
shlb
dec
jge
mov
mov
scas
stos
inc
adc
inc
ret
in
mov
sbb
push
mov
sub
divl
mov
adc
shrb
mov
jmp
mov
inc
std
es
dec
arpl
repz
jns
out
ja
scas
std
std
xchg
pop
adcb
pop
mov
repz
call
xor
jle
insl
jge
xor
xor
repnz
aas
repnz
or
out
sub
test
adc
push
popf
test
frstor
mov
shlb
outsl
mov
jb
or
mov
push
ret
scas
jmp
xor
lea
mov
mov
or
mov
cs
add
and
lods
xor
fwait
jmp
mov
mov
mov
add
into
dec
push
and
mov
ret
cltd
mov
stos
jo
push
pop
nop
inc
push
cld
mov
test
sahf
shl
shr
loop
xchg
jae
mov
sbb
in
sahf
out
hlt
sbb
pop
and
icebp
pusha
xchg
hlt
cmp
xchg
mov
xchg
jbe
lea
pop
test
and
nop
and
pop
mov
cmc
cmp
test
fisubl
scas
loop
sub
cli
dec
ss
or
fimull
std
repz
inc
xor
fimuls
out
enter
mov
test
mov
das
out
inc
fbstp
add
mov
or
inc
loopne
xchg
pop
outsl
sbb
mov
dec
and
mov
loop
add
repnz
clc
rcl
gs
adc
mov
lret
mov
test
sti
xchg
cmp
ljmp
jb
push
and
mov
ljmp
push
sbb
xchg
mov
dec
fdiv
cld
xchg
stos
in
pop
and
aad
sbb
jl
and
js
cli
pop
in
jae
dec
mov
xchg
pop
inc
or
stc
xchg
push
mov
push
pop
cmc
mov
jae
iret
add
xor
testl
xlat
push
stos
push
shll
xchg
or
xchg
loope
test
jl
xchg
mov
pop
pop
jp
cmpsb
das
and
movsb
fists
xor
and
stc
add
or
push
mov
adc
or
stc
pop
aad
xor
nop
fnsetpm(287
jl
push
mov
imul
fucom
jecxz
ss
dec
fdivr
mov
fdiv
out
xchg
push
outsb
cs
xor
in
or
add
out
sbb
mov
inc
mov
test
pslld
call
repnz
insl
push
cmp
xchg
mov
data16
icebp
dec
mov
mov
sbb
xorb
add
out
mov
in
push
inc
pop
std
lods
push
ja
mov
insl
cltd
jae
test
push
call
iret
push
inc
pusha
dec
add
enter
cli
or
jmp
testl
pop
fisubrs
mov
aam
lcall
cmpb
or
jle
pop
mov
loop
add
fcomi
cmp
fistpl
push
aas
sbb
inc
push
fmull
jae
ficompl
mov
jnp
out
ret
test
outsb
push
pop
ljmp
cmpsb
fucomi
pop
cwtl
stos
popa
jns
stos
out
fwait
xor
jbe
ds
mov
cmpsb
inc
jae
repnz
jns
cmp
sbb
cmp
xor
les
fwait
loopne
mov
insb
faddl
dec
in
nop
notb
cwtd
in
daa
shrb
aad
inc
mov
scas
push
rcrb
sub
pop
dec
sbb
add
add
xor
add
repz
mov
pop
lret
cltd
cmpsb
sub
or
lds
test
mov
mov
xchg
sbb
mov
mov
negb
mov
jmp
or
push
sub
movsl
sub
adc
add
jne
shl
mov
out
faddl
nop
xchg
shll
daa
push
aam
push
push
sar
add
hlt
jmp
sub
popf
aad
sbb
outsb
sub
pop
xor
inc
jns
ja
out
aas
rcl
dec
insb
push
fisttpll
mov
dec
popl
dec
mov
mov
mov
sub
inc
lods
sub
dec
pop
lea
les
adc
fwait
int
hlt
data16
push
fidivs
es
mov
pop
xchg
sub
and
inc
iret
xchg
cmp
adc
xchg
jnp
dec
jno
outsb
test
stc
in
fwait
pop
adc
shrb
ja
lret
and
mov
xchg
xchg
sbb
sbb
push
cwtl
fcompl
adc
std
jbe
aaa
jbe
mov
pop
jnp
cvttps2pi
popf
push
jne
jnp
imul
imul
fimuls
pop
sbbb
mov
lea
xchg
dec
push
hlt
xor
push
jmp
jae
mov
dec
or
add
mov
pextrw
aas
leave
mov
dec
flds
mov
stc
dec
mov
adc
mov
das
out
fistps
mov
lods
pop
inc
adc
sub
addr16
sub
test
fisttpl
negl
push
into
inc
xor
mov
mov
pop
xor
das
inc
out
xchg
testl
xor
sahf
rolb
mov
xchg
sub
icebp
mov
and
shll
sub
push
cltd
subl
inc
jmp
fs
jno
cmp
pop
dec
mov
les
and
lcall
push
nop
push
scas
mov
and
mov
push
xchg
cmc
stos
push
pop
xchg
in
lods
push
push
xchg
adc
dec
mov
es
jle
adc
ljmp
xor
push
sbb
int3
adc
ret
mov
xor
ret
sbb
sti
out
dec
pop
or
jmp
repnz
or
out
insl
pop
lret
cmp
add
mov
ss
outsb
maskmovq
testl
int
cmp
add
mov
sub
xchg
jmp
push
sub
mov
leave
pop
xor
mov
adc
dec
xchg
stos
xchg
xchg
jae
lods
inc
inc
iret
adc
xor
fisttpll
negl
test
mov
xor
jp
mov
lretw
xor
rcl
ja
inc
in
cwtl
out
push
mov
stos
or
push
inc
movb
stos
sarl
add
out
shlb
push
hlt
aaa
leave
movsl
insb
lahf
mov
push
jle
xchg
gs
scas
aam
sbb
jns
sub
inc
push
gs
out
sbb
mov
xchg
mov
les
dec
fdivrl
xorl
xor
xrelease
or
jb
jae
imul
pop
dec
jne
pop
dec
and
lret
and
mov
icebp
aas
std
in
sub
out
out
xchg
icebp
add
mov
or
jle
sub
mov
dec
jp
push
ja
inc
pop
outsb
std
sbb
cwtl
cltd
pop
cmovge
sbb
das
sub
dec
mov
mov
test
jne
lods
insl
xchg
mov
in
mov
movsb
jge
add
jmp
add
pop
enter
gs
leave
sti
or
jbe
clc
xor
mov
mov
pop
xrelease
jmp
push
push
mov
mov
mov
mov
adc
and
or
sarl
dec
lret
dec
adc
or
es
jno
lods
pop
dec
ljmp
jne
inc
push
mov
bnd
xor
or
dec
xor
flds
dec
je
icebp
icebp
fwait
pop
xchg
sub
lock
ret
mov
std
xor
inc
mov
es
stos
std
xchg
repnz
test
sub
adc
mov
or
jbe
xchg
push
and
xchg
stos
repnz
and
sub
dec
push
shrb
test
sbb
mov
add
xor
std
dec
mov
cmp
xchg
jge
mov
add
cltd
push
lret
jp
push
out
out
push
cmc
sub
push
mov
pusha
cs
cmp
in
or
loope
leave
push
pop
div
jle
mov
sbbb
in
fs
sti
inc
call
imul
popf
test
std
adc
aam
adc
cmp
xor
pop
data16
insb
and
jb
push
in
cmp
xchg
sub
lods
in
lock
imulb
jmp
rolb
push
xchg
mov
jo
test
in
add
shr
inc
roll
xor
cmpsb
int
imulb
sub
fwait
push
stc
xchg
pushf
inc
xchg
bound
hlt
enter
bound
test
mov
scas
inc
mov
pushf
insl
out
pop
and
orl
or
es
ss
sub
sbb
fucomp
inc
lahf
xor
xor
shlb
mov
jecxz
xor
out
adc
inc
insl
repnz
repz
das
cmp
inc
inc
push
fstpt
repnz
lret
clc
push
or
inc
cltd
adc
fiaddl
jl
bound
xchg
push
in
insl
inc
leave
repz
cld
rorb
push
sub
out
call
int3
mov
xchg
scas
movsb
xor
stos
pop
cwtl
cmp
stos
lods
fdivrs
leave
inc
imul
adc
in
xor
dec
xlat
cs
arpl
xor
gs
sub
outsb
and
xorl
xor
mov
mov
or
mov
je
lods
add
jnp
mov
addr16
jl
jecxz
test
mov
push
ja
pop
fcompl
lods
sub
in
and
sub
add
sahf
mov
mov
inc
fwait
test
adc
push
inc
es
mov
out
mov
je
dec
push
leave
and
lahf
out
dec
push
sti
arpl
and
mov
fldcw
fdivp
mov
and
add
mov
aas
inc
mov
push
movsl
dec
or
outsl
mov
out
mov
ror
fisubl
jl
call
ja
mov
jo
jg
mov
test
push
cli
out
fistl
popa
cmp
sbb
mov
jl
cmpsb
xchg
je
push
dec
call
enter
data16
out
mov
cs
fisttpl
jnp
testl
inc
jmp
mov
fldenv
mov
mov
ljmp
out
inc
pop
push
addb
xchg
fcomi
and
adc
mov
jl
js
xchg
je
sub
in
mov
push
xchg
imul
insb
es
out
mov
loope
xor
and
xchg
or
addr16
sub
jecxz
cmp
ret
push
aam
push
clc
lret
fisubrl
push
jbe
aaa
scas
jb
lock
aad
inc
mov
shlb
adc
pushf
mov
inc
xchg
xorb
sub
mov
mov
jo
nop
lcall
testb
ret
dec
inc
push
mov
jmp
repnz
repz
ljmp
and
pop
fucom
pop
cmp
ror
mov
inc
pop
mov
in
sub
addb
and
jb
push
pop
mov
dec
jo
mov
sub
and
pop
out
push
push
xor
xchg
pop
adc
xlat
data16
test
scas
mov
lock
aam
test
incl
xchg
shll
jge
jno
test
pop
jae
dec
pop
xor
int
enter
sub
cmp
or
data16
sub
into
icebp
jge
dec
cmp
sarb
pop
imul
insb
mov
xchg
mov
push
push
lea
pop
dec
stos
add
cltd
mov
loope
cld
xor
cld
call
mov
lock
lds
add
cmpsb
inc
fstps
stos
rcll
mov
pop
or
pop
mov
xor
stc
hlt
lret
je,pt
fs
loopne
leave
push
mov
add
bound
scas
out
mov
xor
mov
sti
fcomp
out
in
xchg
push
out
in
pop
pop
jo
adc
xor
enter
lds
mov
sbb
mov
push
lea
test
lock
mov
out
gs
pop
push
inc
xor
push
xchg
jge
or
stos
hlt
jae
dec
sbb
addr16
mov
jo
movsb
jae
push
stos
daa
sar
mov
inc
stos
shrb
sbb
xor
inc
mov
insl
cltd
je
pmaxub
ficomps
lcall
jge
outsl
xor
and
imul
mov
mov
add
mov
push
mov
cmp
in
or
cmp
xor
insb
call
jo
jbe
jbe
mov
mov
inc
or
jg
insl
sti
stos
push
xchg
pusha
mov
sub
mov
insl
dec
inc
out
jg
sbb
sub
pop
cmpl
push
mov
adc
mov
out
arpl
sbb
xor
pop
movsl
fsubp
mov
lret
in
jp
push
cwtl
sub
loopne
cmp
popa
sbb
or
push
loop
addr16
xlat
dec
jb
jbe
sbb
adc
movsl
sub
push
mov
lret
imul
fmull
icebp
xchg
dec
aas
daa
mov
pop
pop
xchg
mov
fdivrs
adc
add
xchg
fistpll
decb
or
xor
push
pusha
cli
xchg
mov
sub
cmp
stos
jnp
xor
dec
lret
jae
sub
mov
lods
ss
jo
ret
push
adc
mov
ljmp
push
fcomps
jae
dec
xchg
nop
std
adc
or
rcll
xchg
orl
mov
daa
or
cmpsl
pop
ficoml
xchg
cmpl
push
xchg
je
movsl
inc
or
sti
lock
inc
in
xchg
jo
push
push
cmpsl
sub
nop
push
xor
fsubl
mov
add
insl
loope
adc
in
test
sub
xchg
inc
pop
mov
dec
les
sarl
xor
movsb
call
sti
jmp
lret
inc
xor
imul
xor
or
fldcw
or
xchg
sub
mov
movl
filds
push
push
daa
loopne
fidivrs
jnp
sti
test
lret
lret
jle
fs
hlt
add
fs
ror
pop
stc
inc
dec
lahf
ljmp
stos
daa
jecxz
dec
int
push
pop
fcoml
ret
sub
clc
xlat
sbb
xor
cli
lret
or
clc
addr16
jge
add
mov
inc
jno
xor
ja
mov
and
sub
in
push
xor
xchg
ret
xor
insl
movsb
fldl
ficompl
jle
mov
jnp
or
mov
sbb
jo
fnstsw
gs
xchg
mov
jnp
push
insl
cld
jecxz
cmpsb
fcoml
inc
fdivp
dec
aad
adc
xor
mov
dec
in
or
dec
cmovns
pop
mov
mov
jp
cmp
inc
mov
mov
idivl
pushf
jb
jle
imul
mov
outsl
push
push
fstl
in
addr16
ret
sub
xor
inc
daa
aam
pop
mov
movntq
out
adc
es
cmp
scas
xchg
push
lods
sbb
add
xchg
mov
add
lcall
in
aad
stos
xlat
sarl
fstl
pop
ret
xor
cmp
les
or
movsl
mov
adc
shll
add
test
mov
xor
jb
pop
loop
std
adc
mov
dec
or
mov
pop
push
inc
mov
jp
xchg
and
jne
add
fisubl
ja
mov
jnp
push
insb
add
daa
or
mov
push
push
test
lret
stc
movsb
inc
test
les
movsl
xor
sub
aaa
loope
out
ljmp
inc
cli
cmpsl
cmpl
into
and
pop
fs
frstor
lea
xchg
dec
icebp
xchg
mov
in
push
and
shrb
push
push
cmp
xchg
psllq
rorb
daa
lods
or
ret
mov
and
test
das
cmpsl
dec
dec
cli
pop
in
fucomip
insb
mov
fwait
or
pop
inc
xor
cmp
jecxz
andb
jne
sub
jle
push
mov
push
mov
insl
push
inc
ss
mov
dec
cmpsl
adc
add
add
mov
les
sub
sub
cwtl
push
jle
cld
xor
adc
mov
ficompl
jae
fwait
xor
dec
rorb
fwait
mov
fucom
xchg
xchg
movsb
pusha
or
push
pop
inc
cmpsl
out
sbb
fsubp
outsb
fsubs
sub
cmpsl
push
xor
jns
push
xor
xchg
addb
xor
xor
push
out
movsl
push
in
jno
xor
repnz
ja
aaa
lods
outsl
push
andl
xchg
dec
sbbb
inc
mov
cmpsb
or
adc
aad
lds
cwtl
test
cmpsl
shl
dec
or
inc
out
adc
rcrb
clts
clc
inc
push
mov
shll
mov
lds
pop
mov
fwait
leave
xchg
loop
dec
addr16
iret
pop
mov
nop
jne
cs
pop
aas
xchg
pushf
lods
mov
inc
daa
lret
inc
pop
jecxz
dec
pop
pop
inc
push
scas
sahf
xor
xlat
test
fisttps
sub
lock
push
jns
mov
int
and
sbb
jo
daa
xchg
mov
jecxz
in
frstor
es
add
xchg
mov
push
int3
cmp
push
icebp
xor
fimull
and
js
iret
push
adc
rorb
mov
xchg
test
mov
cmp
orl
cmpsb
popa
mov
add
inc
cmp
shll
jle
jge
mov
not
xorl
dec
cmpsl
icebp
add
enter
cmp
mov
mov
add
aaa
jl
dec
idivl
rorb
fiadds
push
add
sbb
push
idivl
cmovs
adc
pop
adc
push
movsb
test
push
inc
jbe
stos
imul
push
mov
fs
mov
sbb
testb
pop
arpl
daa
ficomps
pop
sub
hlt
ret
adc
jbe
jg
fsubrp
xor
iret
xor
imulb
outsl
aaa
pop
sbb
test
fstpt
or
in
mov
and
sti
daa
call
mov
and
mov
xchg
fistl
out
pop
fsubs
cmp
cli
and
inc
mov
xchg
rcr
cs
cmp
aas
xchg
popa
lea
cmp
sub
cld
dec
fistl
in
jno
add
jo
push
push
rcll
inc
shl
jmp
mov
insl
test
loopne
cmp
mov
cmpsl
jl
mov
xchg
call
outsl
sbb
push
pop
push
imul
cmpsb
add
cmp
add
xchg
add
pop
fcomp
mov
and
mov
loopne
inc
mov
and
out
lock
dec
ret
lods
mov
lcall
push
xor
push
fdivs
jge
jmp
int
data16
or
jb
loope
loopne
push
adc
lret
icebp
pop
mov
mov
mov
or
in
dec
movsl
cmpsl
push
xor
ja
adc
imul
or
cmpsb
inc
ret
mov
movb
mov
imul
jmp
repnz
mov
subl
xor
jo
inc
out
ret
sbb
inc
sub
lods
popa
outsl
mov
imull
outsl
shld
pop
and
aam
stc
inc
enter
lahf
push
xchg
jg
imul
shlb
dec
movsb
jp
outsl
mov
ljmp
lods
push
or
inc
adc
mov
mov
enter
jne
les
dec
in
cs
nopl
mov
pop
mov
cmp
add
pusha
add
shll
push
je
xor
push
pop
jl
stos
aad
mov
cwtl
cwtl
aas
push
roll
cli
movsb
jl
jbe
icebp
das
inc
sub
jo
pop
mov
sub
ss
mov
test
mov
cmp
subb
and
jmp
jno
mov
lea
and
test
mov
imul
mov
js
sti
fcmovb
pop
or
shlb
mov
loopne
lret
stos
sub
xorl
das
aaa
push
enter
sub
push
xchg
les
decl
add
dec
xchg
lahf
lea
or
es
sub
jecxz
jns
hlt
shrl
xor
mov
or
cmpsl
cmp
push
mov
shll
shlb
popa
outsl
jmp
cmp
and
and
mov
fwait
aas
dec
mov
roll
push
push
das
adc
push
xor
outsb
ljmp
stos
jno
pusha
push
and
std
or
and
fldt
fsubs
push
dec
or
xchg
jo
xchg
shlb
icebp
add
ror
ja
mov
jnp
pop
sub
repz
inc
inc
add
mov
aas
ret
and
pop
hlt
xor
cwtl
jmp
pop
mov
jo
and
subb
xor
fwait
mov
stos
in
jp
sbb
push
jo
lcall
mov
imul
stos
xchg
sub
pop
iret
scas
add
mov
sub
jb
add
mov
in
sbb
ds
or
dec
ret
add
pop
xor
outsb
loopne
pop
roll
insl
pushf
push
add
jbe
enter
imul
pushf
xchg
call
iret
pop
lea
gs
out
nop
icebp
ljmp
jl
push
mov
mov
xchg
cld
daa
aad
shll
insb
xchg
sbb
sub
adc
jecxz
jmp
das
xchg
adc
fwait
xor
incb
xor
or
xor
xchg
jmp
loope
xchg
inc
xchg
ja
jge
pop
jmp
lcall
adc
mov
xchg
lahf
cmp
cmp
xor
aad
ds
xchg
mov
xor
xchg
mov
popf
ja
movsl
std
mov
sbb
mov
lea
dec
ret
push
fldl
and
sti
sahf
inc
std
mov
mov
shrb
rcrb
inc
mov
imul
dec
imul
xchg
lds
bnd
add
cmpsl
mov
out
icebp
mov
addl
insl
jns
jmp
adc
fwait
adc
xor
test
ret
stc
popa
jge
enter
arpl
popf
lea
jg
aad
adc
in
cmp
xchg
xor
adc
jmp
addb
out
es
pop
jmp
ret
pop
push
cli
jae
lahf
add
jl
push
sbb
aam
adc
sbb
les
cmp
xor
insl
adc
fs
or
adc
add
mov
mov
and
cmp
cmp
xchg
pop
inc
loopne
loop
jmp
cmp
stos
jno
ss
mov
push
clc
sub
hlt
ucomiss
and
xor
ss
add
dec
stc
imul
into
test
mov
stc
je
icebp
push
mov
shll
push
imull
mov
xchg
xchg
cmp
shll
fists
and
and
push
or
loopne
push
mov
mov
rcrl
jae
and
and
paddusb
push
jb
mov
test
nop
push
cld
pop
movl
in
mov
repz
and
xchg
dec
test
xor
push
lods
lea
xchg
sbbl
aaa
insb
gs
aad
cmp
pop
mov
into
out
jo
divl
cltd
sarb
sub
enter
xchg
cld
xor
sbb
stc
loopne
scas
adc
pop
fwait
popf
inc
filds
lods
jcxz
mov
cld
gs
adc
cmp
mov
lret
hlt
fildl
adc
stos
add
lcall
push
inc
sahf
pop
add
inc
mov
adc
jp
xchg
fildl
jno
insl
lds
jne
ja
mov
sub
mov
stc
ret
mov
repnz
sbb
sbb
movsb
into
ss
das
lret
jg
add
cmpsl
jle
jae
call
imul
push
jp
cmp
mov
jbe
sub
sti
cmp
xor
xchg
mov
mov
mov
xor
xor
test
sub
fcmovnbe
inc
pop
add
jne
and
xor
cs
shrb
pop
push
popa
mov
mov
pop
jmp
loope
pop
xor
fsubrs
cmp
pop
or
data16
ds
mov
lods
jecxz
adc
dec
movsb
movsl
in
scas
arpl
ds
leave
push
in
mov
lods
es
and
mov
mov
mov
mov
jb
lret
imul
push
xlat
sub
int
mov
sbb
add
dec
sbb
push
cmpsl
sbb
cmp
jo
insl
andl
lods
sub
dec
and
pop
shl
pop
hlt
shrb
jl
inc
pop
repz
mov
add
mov
js
mov
cltd
hlt
insb
ret
jmp
or
rcrl
sub
lea
inc
daa
pop
mov
dec
xorl
inc
xchg
sub
rcrl
mov
xchg
ja
push
lock
stc
dec
int
jns
arpl
mov
cmp
sub
loopne
loope
push
mov
push
clc
mov
stos
inc
push
sbb
xor
test
push
loope
out
lret
inc
push
cmc
popa
sbb
add
or
pop
in
xchg
dec
cs
mov
inc
push
push
add
mov
imul
xchg
mov
dec
pushf
mov
shlb
lret
jne
in
xchg
sub
mov
pop
lock
mov
inc
imul
and
int
jge
fistpll
xchg
mov
adc
cld
rcll
jo
cmp
repz
test
jo
mov
fisttps
dec
adc
xchg
in
aad
stos
lods
mov
xor
ret
lret
sbb
outsl
or
shl
daa
adc
xchg
hlt
fcmovbe
imul
bound
sti
push
jae
mov
aam
or
test
movsl
add
insl
hlt
cmp
xor
xor
and
and
adc
push
xor
mov
idiv
inc
aas
dec
push
lcall
mov
cmp
rolb
lahf
aad
aas
mov
inc
cmp
andb
out
mov
sbb
mov
add
add
mov
lods
sub
lret
sbb
fmuls
loopne
fimuls
fistps
rep
jne
mov
sbb
data16
aaa
mov
add
mov
mov
jle
jae
jg
jns
xchg
in
cmc
out
inc
aaa
and
je
rorl
dec
enter
xchg
cmc
scas
inc
pop
push
push
ljmp
sbb
in
xchg
ss
jp
sbb
push
xor
scas
or
pop
push
xchg
push
jb
add
jnp,pn
cmp
cltd
shll
sub
js
andb
xor
mov
in
dec
sub
cltd
mov
push
ret
cmpsb
not
adc
mov
xchg
push
add
aaa
inc
xlat
adc
mov
pop
and
push
loope
inc
mov
dec
cli
std
pusha
mov
fldenv
inc
repz
xchg
movsl
and
imul
jecxz
push
or
mov
cmp
or
xchg
sbb
es
pop
jne
inc
lods
sbb
ljmp
cmpsb
mov
adc
clc
mov
cli
mov
jae
test
xchg
in
icebp
fcomp
or
push
fstpt
es
or
test
dec
ljmp
lret
mov
lock
xor
sbb
xchg
movsl
fnstcw
cli
xchg
or
dec
sbbl
fistl
and
inc
mov
iret
jns
xchg
icebp
icebp
jbe
scas
cmp
and
mov
push
pop
sub
mov
xor
sub
sub
nop
pop
cs
lahf
popa
xchg
mov
aaa
push
xor
movsl
mov
das
stos
jecxz
jb
rorl
jle
fimull
cmc
add
es
mov
add
lahf
rcll
mov
fcoml
stos
push
push
sbb
push
cmp
push
in
mov
mov
fsubl
int
pop
fwait
jl
fimuls
jo
xlat
daa
dec
inc
inc
mov
stos
adc
jne
scas
in
daa
scas
aam
hlt
cmp
lock
jg
mov
dec
mov
add
ljmp
lock
mov
or
icebp
ss
fsubrl
cmpsl
icebp
sub
movsl
jecxz
mov
rolb
ret
das
and
xor
clc
lock
call
sbb
pop
mov
add
push
sbb
adc
out
cmp
fldt
xchg
or
push
mov
adc
les
push
das
outsl
repnz
sbb
mov
stos
or
les
add
jge
lcall
or
jne
sbb
repnz
cmp
dec
push
or
out
push
jecxz
ljmp
or
cmp
xchg
addr16
jg
sarl
jb
sub
add
pop
mov
lret
roll
aad
jge
dec
jnp
movsl
dec
je
xchg
dec
and
xor
test
mov
add
test
cwtl
mov
xlat
arpl
iret
mov
out
push
sub
add
sbb
cmpsl
or
jecxz
movsl
jns
das
psadbw
cld
test
sar
popa
jo
dec
mov
add
cld
in
sub
rolb
mov
mov
adc
adcl
std
xchg
sti
gs
movsl
mov
sub
test
mov
mov
mov
lret
jmp
hlt
jnp
shrb
aad
jns
dec
push
shrb
mov
inc
scas
sbb
ss
call
loopne
lcall
cwtl
pop
xchg
mov
or
fistpl
or
and
pop
stos
aas
loope
es
repz
adc
add
push
insl
xchg
mov
ret
addb
pop
inc
hlt
stos
mov
and
insl
adc
in
pop
lret
ss
cmp
mov
daa
jbe
add
mov
sub
jb
test
inc
ljmp
sub
imul
dec
pop
jmp
lret
jl
aaa
jle
movsl
xchg
jmp
lods
mov
inc
fstpt
xchg
fistpll
aaa
add
imul
aas
add
sbb
mov
xchg
lret
popf
lods
fnstenv
fs
sub
xchg
pop
and
in
xor
pop
in
pop
push
mov
mov
xchg
popa
push
adc
add
add
jmp
push
push
loope
inc
xchg
mov
imul
pop
sub
sub
out
or
fwait
inc
jno
mov
ss
or
jl
rorl
daa
add
rclb
insl
lret
mov
jge
inc
dec
pop
negb
bound
mov
or
xlat
mov
stc
leave
cwtl
push
test
push
mov
stos
sti
push
pop
fs
add
mov
jp
mov
in
sbb
xchg
pop
mov
push
pop
sarb
push
sub
push
shlb
push
xchg
pop
inc
mov
aam
pop
push
sub
push
sub
scas
mov
loopne
xchg
shrl
pop
xor
fistps
fidivrs
mov
lcall
aam
nop
ror
sbb
xchg
dec
scas
aad
and
neg
scas
mov
lods
ss
inc
xchg
push
fstps
cmp
cmp
mov
aas
arpl
repz
jle
mov
loopne
fisubs
xor
lret
xchg
stos
mov
fldt
sub
fucomi
adc
shr
cmc
mov
decb
int3
dec
pop
xchg
or
cmpsl
adc
fucomp
outsl
adc
insb
push
loop
enter
add
out
arpl
and
push
push
add
and
pop
inc
mov
inc
aad
orl
lret
xor
or
cwtl
add
cmp
pop
notb
bound
cmp
fimuls
inc
insb
out
sub
mov
pop
fldcw
loopne
pop
cmp
vcvttpd2dq
insl
test
sarb
sbb
or
inc
mov
xor
jnp
inc
mov
xor
fwait
jge
hlt
cmp
cld
push
push
addr16
insb
ret
sbb
mov
fmull
rcr
insl
mov
jle
sbb
test
and
ljmp
lods
insb
repz
or
imul
or
ja
mov
out
or
iret
orl
push
popa
or
inc
xchg
pushf
jmp
rolb
ds
xlat
mov
movsl
adc
fdivrs
scas
cmpsb
fwait
into
push
jge,pt
sbb
movsl
mov
jb
add
xchg
mov
add
sub
movsl
mov
gs
push
loope
lods
xchg
lahf
xor
das
test
insl
jle
iret
lods
cmpsl
mov
sarb
aam
nopl
push
lea
loopne
sbb
jle
fidivrl
stos
jns
nop
fcoml
push
adc
pop
mov
insb
pop
fstp
sub
lcall
cmp
nop
cmpsl
add
xchg
hlt
cmp
inc
fcoms
insb
cmp
int
pop
sbb
ret
fxch
insl
test
mov
sub
xchg
sub
xor
enter
jae
add
xorl
pop
pop
aad
out
jmp
push
push
out
test
add
cli
or
pop
jo
push
jno
arpl
es
sub
scas
clc
add
pop
lods
mov
cmc
test
or
repz
fucompp
data16
cmp
add
push
mov
in
hlt
stos
dec
jmp
sub
insb
adc
shl
inc
imull
mov
loope
in
je
or
jl
pop
je
fidivs
stc
cmp
out
add
sub
repz
test
pop
xchg
pop
mov
dec
les
fisttpl
mov
cs
and
lods
push
jp
rolb
sbb
test
rcrb
push
jnp
fidivl
cwtl
and
test
stc
push
insl
lret
dec
cmp
pop
cmc
insb
bound
aad
fistl
push
push
xchg
xchg
jle
adc
int
or
push
mov
adc
rcrl
adc
and
mov
mov
fcompl
mov
fs
add
sub
pop
loope
repnz
sbb
dec
ret
in
insl
stc
mov
xchg
inc
add
add
push
xor
inc
ja
sub
jne
in
cmpb
sub
or
add
addr16
loope
outsb
mov
daa
icebp
imul
ljmp
ficoml
das
lods
jnp,pn
push
fst
jecxz
ljmp
pop
scas
sub
orb
movsb
jo
pop
sub
repnz
mov
fadds
aam
xor
imul
push
rol
push
push
repz
scas
decb
lds
mov
dec
ud0
jnp
das
or
mov
fdivl
fisubs
stos
out
movsl
in
cmpsl
xor
jle
dec
or
ja
fistpll
xlat
mov
sub
push
push
enter
movsb
sub
push
add
sbb
add
dec
movsb
jmp
ror
dec
mov
pop
out
or
mov
out
mov
les
scas
mov
sbb
sbb
lret
inc
cwtl
push
jb
movsb
jbe
mov
xchg
rcrl
push
rorl
pop
push
inc
ja
pop
arpl
loope
mov
push
add
mov
lret
cmpsb
mov
hlt
fucomi
mov
scas
xor
mov
scas
pop
rcrb
mov
sub
inc
push
jmp
push
push
fwait
push
jo
xchg
mov
dec
sub
xor
into
mov
add
add
cmc
outsl
inc
push
fiaddl
xlat
sarl
inc
aad
movsl
test
push
movsb
add
push
sub
mov
fcmove
mov
aad
aam
pop
jb
mov
xchg
arpl
and
pop
pusha
arpl
mov
push
xchg
fwait
ss
icebp
jl
jb
mov
add
xor
cltd
pop
xchg
mov
cmpsl
push
xor
sbb
lods
mov
lahf
arpl
test
adc
sarb
sar
adc
pop
les
popf
shlb
loopne
add
les
je
repz
jge
movsl
scas
insl
jg
bound
rcr
cmp
or
sub
mov
sub
mov
inc
or
in
arpl
dec
rorb
ja
sub
jp
or
je
shrl
adc
in
add
mov
mov
lea
pop
aad
in
rcl
add
aaa
mov
pop
cmp
inc
sub
in
scas
xchg
add
loop
sahf
xchg
clc
outsb
testb
mov
add
dec
sub
add
sbb
mov
fbld
sbb
push
sub
test
jp
aad
xchg
sbb
test
or
loop
lea
out
mov
or
adc
and
nop
das
shll
lret
push
cmp
repnz
dec
cmp
stos
leave
jge
arpl
sti
xchg
imul
ret
repz
or
xchg
pop
or
mov
leave
dec
pop
xor
sub
test
adc
pushf
push
inc
push
mov
push
and
mov
add
stos
lods
fnstsw
lea
adc
idivb
inc
inc
cmpsl
pushl
scas
lret
rclb
and
jbe
push
pop
sub
pop
mov
stc
jecxz
lret
std
xor
popf
inc
mov
sub
loopne
and
jecxz
xchg
pop
pop
mov
test
pop
scas
int
gs
ficoml
jmp
push
divb
cld
push
lret
scas
push
insl
and
mov
sbb
push
leave
xor
xchg
aas
mov
pop
jg
test
add
xchg
xchg
pop
pop
mov
cmp
mov
js
fldenv
jno
sub
ficoms
lds
pop
stos
clc
clc
or
sti
mov
movsb
cmp
sub
cwtl
jnp
inc
loop
fisubrl
out
dec
mov
ja
out
mov
mov
lret
insb
mov
xchg
test
insl
addr16
and
imul
push
sti
cmp
xchg
mov
fsubl
dec
rorl
add
pop
loope
int
orl
test
fs
sbbl
enter
inc
and
ja
fwait
ret
add
stos
call
add
arpl
in
sub
mov
lods
push
fldenv
fmul
xchg
cld
pop
in
xchg
add
scas
je
xchg
jae
test
add
mov
fwait
xor
sbb
stos
jne
and
imul
pop
inc
cwtl
xor
or
aas
sar
xor
fcomi
outsl
imul
in
jb
stos
cltd
cmp
mov
cwtl
dec
lods
pop
insl
or
outsb
fsubp
arpl
iretw
addr16
mov
mov
jns
notb
lcall
out
and
daa
in
fcoml
ret
cld
sub
xchg
and
lock
ss
jb
in
mov
sub
dec
push
mov
cmpsb
sub
lcallw
pop
aaa
fistpll
test
push
call
or
les
cmp
or
ljmp
aam
add
arpl
into
repnz
stos
clc
and
outsl
jmp
loopne
movsl
mov
inc
shl
cmpsl
mov
jge
and
sub
mov
frstor
lret
inc
lods
sbb
cli
fcmovnbe
mov
push
rclb
inc
cmp
dec
mov
repz
mov
push
xchg
out
add
push
push
popl
shll
push
ficompl
xor
cli
xor
add
repnz
jnp
cmp
mov
movsl
fistpll
xor
fs
mov
test
mov
std
sub
cmp
mov
dec
pop
jne
sub
or
or
xor
popa
xchg
setl
adc
jl
aad
xchg
movsl
fbld
sbb
cmp
out
fiadds
test
ja
add
stc
or
add
mov
adc
or
adcl
add
repz
mov
cmp
add
aam
mov
cltd
add
push
ljmp
push
ss
and
leave
mov
pop
and
mov
push
sarb
mov
sbb
shl
shll
or
cld
shlb
xchg
xor
cmc
jae
cltd
dec
xchg
lret
setns
pusha
aaa
lret
scas
in
enter
rclb
sti
sbb
cmpb
jl
and
xchg
lea
adc
or
xchg
mov
pop
aaa
lcall
cmp
sarb
push
inc
or
and
outsl
jmp
testb
lods
test
sub
or
adc
test
imull
test
fistpl
dec
movsb
rcr
sar
dec
loopne
cmpsl
aam
push
int3
xchg
fstl
sbb
or
fnstsw
sbb
jge
bound
or
test
add
out
mov
mov
sti
fnstsw
sbb
sbb
dec
cmp
xor
inc
cmp
and
or
xchg
mov
stc
fnstsw
sbb
test
adc
fldcw
add
montmul
cmpsb
test
mov
icebp
std
nop
mov
inc
imul
jne
mov
xor
mov
in
push
pop
shlb
mov
aad
push
pop
add
pop
jb
ficompl
sbb
out
cmp
jle
js
out
xor
dec
pop
inc
jns
or
ror
filds
shlb
push
scas
mov
mov
aas
clc
movsb
mov
and
xlat
xchg
push
out
addr16
mov
mov
pop
lea
sub
sub
sub
mov
add
movsl
dec
fildl
xor
cmp
jae
rorb
jecxz
mov
pop
es
push
out
xor
mov
shll
loopne
insl
cltd
inc
inc
cmp
outsb
mov
add
dec
sbb
xchg
or
add
jecxz
ret
fs
jbe
mov
test
cmp
fisttpl
and
call
inc
pop
mov
cmp
push
insb
push
push
pop
shr
addb
imul
cmp
call
fildl
xchg
arpl
