add
add
push
inc
add
imul
arpl
xor
popa
fs
bound
jne
inc
dec
inc
add
xor
popa
fs
bound
jne
inc
sub
add
bound
arpl
or
imul
push
add
xor
popa
cld
popa
inc
imul
jae
jb
gs
lock
add
mov
je
add
fldcw
outsl
jae
imul
je
inc
lock
add
mov
je
xchg
insb
xchg
dec
popa
outsb
mov
push
lock
add
in
add
add
inc
add
inc
add
inc
add
add
je
and
inc
or
jb
and
and
popa
fs
bound
jne
inc
add
clc
inc
add
or
outsb
aad
xor
push
arpl
push
add
lds
arpl
jb
fs
add
int
insl
jae
jb
add
jb
mov
add
jge
add
gs
inc
test
arpl
push
add
ds
jb
gs
outsl
arpl
push
add
sbb
pop
imul
add
inc
inc
sbb
add
pusha
jb
and
data16
adc
add
insb
popa
jo
arpl
pop
add
fldt
outsb
int
xor
push
imul
add
mov
je
ret
gs
jns
shll
add
push
inc
add
stos
pop
nop
lock
add
jecxz
add
hlt
sti
add
aaa
add
lock
add
pop
add
add
lock
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
pop
add
lock
sbb
movsl
mov
and
and
repnz
add
imul
pushl
ljmp
lods
dec
push
adc
push
aad
or
lock
jmp
add
add
push
mov
add
push
xchg
sti
je
jmp
add
push
or
pop
repnz
cmp
stc
lock
jmp
add
push
push
in
lock
jmp
adc
push
jmp
adc
push
jmp
add
push
jmp
add
push
jmp
jae
push
jmp
mov
push
jmp
lock
jmp
pop
jmp
add
push
jmp
jmp
repz
add
repz
add
repz
add
ret
and
push
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
add
repz
add
repz
add
repz
add
repz
add
repz
add
lret
insl
repz
add
repz
add
repz
add
pop
pop
add
pop
pop
add
dec
pop
add
dec
pop
add
inc
arpl
jge
add
xchg
sti
add
or
add
sbb
add
sbb
add
or
add
or
add
flds
add
stc
or
pusha
idivl
popa
cmp
add
add
add
leave
or
add
push
add
cltd
push
add
cltd
push
add
mov
add
leave
or
inc
cmpsl
push
popa
je
or
add
add
mov
add
pop
dec
add
pop
or
add
filds
add
filds
add
filds
add
lahf
add
xor
add
lock
add
filds
add
filds
add
mov
in
mov
adc
pop
jne
add
xor
divl
test
push
pop
mov
ret
push
mov
inc
sub
xor
sti
jb
pushf
testl
imul
jne
test
or
gs
dec
loopne
add
add
ret
repnz
sub
push
jmp
push
call
icebp
aam
dec
jnp
idivl
add
icebp
fwait
movaps
fldl
lds
subl
jge
inc
jmp
divl
dec
add
push
jmp
add
push
bound
jnp
mov
out
pop
clc
xlat
jp
testb
push
fdivrl
cld
test
jl
xorb
sti
and
stos
imulb
push
jmp
add
push
add
add
decl
mov
addr16
pop
jp
dec
mov
fiadds
bound
push
push
push
jp
push
mov
out
push
cmc
stos
jnp
add
pop
or
and
ret
ret
scas
add
repz
leave
stos
in
push
push
enter
pop
and
sub
out
jb
mov
cmp
out
jne
add
fwait
outsb
jmp
lock
push
loope
adc
add
out
push
incl
jne
ficoms
sbb
mov
pop
mov
mov
add
rclb
or
test
adc
push
push
add
ret
incb
push
cmpl
push
push
rcrb
or
add
pop
jne
add
add
or
pop
nop
enter
pop
or
adc
add
leave
or
aam
push
incl
push
push
or
and
jle
or
sub
push
mov
or
pusha
jbe
lock
sub
lret
fisttps
sub
filds
add
lret
fisttps
sbb
mov
push
add
hlt
icebp
inc
add
xchg
add
jp
add
cltd
add
filds
sub
or
jno
add
imul
mov
add
in
push
dec
loopne
add
bound
push
cmpsl
push
sbb
mov
add
add
lock
dec
sahf
add
and
repnz
pop
mov
data16
incl
add
push
repz
mov
jmp
jae
repz
pop
push
jmp
add
enter
orl
movb
jmp
lock
je
setp
repnz
mov
jb
dec
mov
pop
add
pop
pop
js
fisubrs
mov
add
daa
fildl
sti
xor
clc
sbb
add
decl
mov
inc
jge
push
add
int
push
addr16
jne
cmp
pop
bound
call
push
in
jne
inc
jb
ds
push
leave
sub
in
push
bound
add
mov
clc
fwait
in
incl
sub
ret
push
mov
adc
enter
jno
inc
sti
push
add
mov
decl
push
les
add
imul
jne
dec
add
fdiv
push
fsubr
out
jbe
decl
pop
jae
mov
bswap
ret
shlb
or
mov
orl
add
insb
out
out
cmc
decl
or
fxsave
xchg
leave
add
add
leave
scas
ret
push
mov
pop
mov
imul
mov
or
lock
icebp
inc
gs
or
or
out
fdivrs
sub
sub
imul
or
jbe
mov
jmp
std
neg
loopne
jno
or
repz
mov
out
enter
add
pop
jecxz
add
inc
neg
push
add
xor
lock
xor
add
sub
les
jl
in
add
jge
pop
incl
loopne
or
faddl
jne
push
adc
shrb
repz
loopne
lcall
shrb
jno
and
xchg
jmp
jmp
pop
lock
ljmp
add
in
scas
shr
add
gs
fcoml
jns
ficomps
out
inc
jmp
jmp
sti
jp
fs
sub
xor
jmp
out
orps
jns
jmp
add
call
test
call
cld
shll
call
lret
jmp
stos
cmp
xchg
repz
mov
add
cmp
mov
or
out
lcall
sub
pop
add
repz
in
std
outsb
dec
jl
cmc
ficoml
jmp
push
call
or
cli
fwait
mov
mov
test
add
repz
lods
pop
pop
add
repz
add
insl
adc
fcomp
jne
add
into
outsl
clc
pushl
push
lds
clc
nop
les
add
in
push
push
jne
mov
cld
decl
ret
push
mov
jecxz
mov
push
pushl
lret
sub
outsb
fxch
ret
push
mov
jge
dec
outsl
adc
dec
adc
je
fidivl
sahf
outsl
or
and
out
lods
fcos
leave
fildl
add
out
jne
fidivl
add
add
jge
lock
jae
incl
in
or
arpl
out
cmc
in
ljmp
pop
filds
ljmp
add
mov
in
jne
mov
or
xchg
rorl
and
jae
adc
std
jne
fs
pop
mov
lcall
std
fstp
in
jne
add
inc
jbe
pop
imul
or
cmpb
fwait
sti
out
push
in
inc
leave
sti
test
lock
sti
rsqrtps
in
pushl
in
jge
adc
out
in
pop
repnz
lods
ljmp
out
sti
iret
sbb
jmp
jo
js
idivl
jmp
xadd
mov
dec
mov
xchg
lds
call
in
inc
add
hlt
sub
jae
or
xchg
in
sti
dec
bnd
pop
in
out
pop
icebp
fldt
in
jmp
pop
loope
in
dec
jmp
dec
inc
mov
jnp
add
fcmovb
movsb
pop
push
add
repz
inc
sbb
sbb
aam
repz
orl
jmp
test
inc
icebp
lret
sar
mov
jmp
add
lret
cmp
pop
call
jo
cmp
out
or
mov
mov
sub
adc
xchg
mov
in
push
pop
in
stos
pop
in
bound
mov
pop
xor
jmp
mov
push
dec
rorb
add
mov
js
out
or
inc
repz
incl
lock
xor
add
jg
add
in
je
lock
jns
add
fsub
call
lahf
not
push
and
lcall
call
jmp
out
jne
mov
sti
incl
ror
push
add
popl
ror
push
add
inc
cld
ljmp
lock
inc
or
add
dec
pop
lea
cmp
jne
mov
jmp
je
add
fnstsw
pop
pop
out
add
lock
add
xor
add
add
mov
in
lea
fcomp
dec
ret
lock
inc
fcomp
fmul
shr
xor
enter
out
cld
mov
in
cwtl
outsb
clc
inc
enter
out
call
shl
out
call
cli
outsl
mov
add
add
out
dec
mov
call
mov
gs
inc
pop
icebp
fstpt
mov
add
fidivrs
pop
jmp
call
test
adc
aas
adc
lock
jmp
outsb
fsubr
sub
lock
push
in
or
add
pop
cmp
cltd
push
jmp
out
fcmovnb
xchg
cltd
push
jmp
add
add
imul
push
mov
add
sub
sbb
sahf
jno
loope
lock
and
pop
push
jmp
pop
mov
push
push
out
gs
push
call
cmp
nop
push
dec
loope
loope
push
sub
cmp
cld
ss
or
lcall
loope
xor
pop
clc
push
popa
out
jl
call
and
add
iret
pop
in
add
push
add
into
pop
call
jmp
fdivrp
sub
pop
mov
or
sbb
repz
jae
mov
xchg
lock
jmp
outsl
loopne
add
mov
inc
popa
pop
addb
add
push
ret
repnz
leave
ret
push
mov
fmull
push
enter
leave
aam
pop
add
lcall
ret
push
mov
push
push
mov
mov
dec
mov
dec
pop
leave
sbb
call
push
push
inc
jo
cld
push
sbb
sub
jge
mov
pushf
jne
leave
dec
pop
leave
pop
fdivrp
push
add
push
push
lock
in
clc
jne
lcall
jns
call
push
add
add
lock
jnp
cli
aas
ret
or
jne
das
aas
lock
mov
cmp
in
lods
daa
jp
shr
out
dec
jp
sub
fistps
cmp
cltd
adc
sbb
mov
aad
sbb
add
pushf
add
add
lahf
adc
pop
push
jnp
lea
add
sub
add
imul
cmp
mov
jmp
ss
sub
lods
lods
mov
fisubrs
aas
pop
mov
out
lods
out
repz
imulb
fmuls
xchg
in
repz
movsl
fucomp
dec
notb
adc
cld
push
push
ds
sub
fsubl
jp
in
jp
or
sbb
stos
adc
add
xor
jno
mov
das
mov
fiadds
cmp
out
mov
test
repz
lcall
out
das
xchg
push
fisttpll
jge
outsb
iret
jmp
rorb
hlt
push
lret
push
jge
clc
dec
leave
sar
mov
add
ss
jne
adc
iret
jmp
or
iret
jmp
add
repz
fdivr
cltd
lret
mov
jne
rclb
je
in
aaa
call
into
dec
psubsb
into
mov
push
mov
jmp
jne
xchg
clc
cld
or
xorl
and
popf
std
call
call
idiv
xchg
mov
pop
rol
or
add
pop
in
or
push
mov
rorb
add
or
add
jmp
jne
inc
or
add
in
jae
into
jns
add
pop
jmp
mov
or
inc
inc
cld
push
lock
outsb
add
jmp
cmpsl
in
add
mov
jno
sub
push
inc
hlt
and
add
in
loopne
test
add
add
in
or
test
in
push
inc
jae
xlat
add
jmp
jge
out
push
cmp
fildl
inc
inc
std
pop
inc
clc
mov
add
sub
adc
jns
call
sti
das
pop
or
or
std
filds
sub
inc
in
ret
je
call
jmp
push
pop
jmp
push
cld
test
add
push
xlat
mov
push
aad
add
fsts
pop
sub
lds
sbb
inc
mov
or
push
jmp
push
pushf
das
test
addr16
icebp
insl
lock
mull
push
stc
loopne
or
call
fisubl
add
imul
add
mov
push
hlt
xchg
adc
not
repnz
loopne
add
jp
test
lods
push
fisubrl
jnp
or
lea
push
adc
mov
ljmp
push
add
andl
push
xor
pushf
cmp
stos
loopne
push
bound
sub
push
jne
cs
or
faddl
push
or
aam
roll
cs
jmp
add
out
add
push
lcall
push
add
xor
into
mov
fwait
pushl
adc
add
inc
or
or
lds
pop
or
push
adc
push
subl
jne
roll
sub
add
addr16
aam
movb
sub
mov
int3
add
fdivr
inc
or
loope
add
add
add
push
call
mov
adc
add
push
or
mov
ds
cmpl
push
lock
xorl
add
adc
inc
dec
cld
jae
pop
sub
out
add
mov
sbb
out
fdivl
xor
in
sub
push
jns
test
mov
fdivr
outsl
mov
add
lahf
imul
lock
mov
push
inc
or
xchg
inc
add
add
add
or
pop
sub
dec
adc
mov
sti
sub
fucomip
call
push
out
lds
in
and
hlt
push
mov
les
jb
clc
add
pop
in
xchg
add
push
jmp
add
add
pop
inc
add
or
or
push
test
push
jmp
in
pop
jmp
inc
in
cmp
dec
ret
cwtl
or
add
xor
mov
or
cmc
push
jo
jmp
add
push
and
hlt
push
dec
push
call
push
push
pop
pop
add
dec
idiv
call
cld
pushf
rclb
add
mov
jmp
out
push
push
jb
mov
std
pop
pop
push
pushf
pop
or
test
add
inc
je
fdivl
call
pusha
xor
pop
sbb
jmp
jns
push
add
mov
or
rcl
sbb
inc
xor
add
ror
stos
lock
push
jb
cmp
sbb
dec
pusha
add
repz
add
add
repz
add
repz
add
cltd
mov
or
addb
cmp
loopne
lret
mov
bound
push
bound
push
bound
decl
or
sarb
add
bound
push
sbb
dec
push
or
mov
add
sarb
lret
pushl
and
add
xchg
xor
xor
xchg
ret
mov
sub
orb
lods
pop
leave
call
out
imul
pop
pop
xchg
or
jmp
nop
jmp
popf
pop
add
out
jmp
stos
fldl
pop
test
pop
out
lods
std
jmp
xor
sub
fisttpll
cmpsl
cli
dec
sub
fsubrp
mov
add
adc
lock
add
pusha
pop
jns
push
add
in
fdivs
dec
or
call
js
pop
add
lock
lea
jmp
cmpsb
and
fnstenvs
dec
jmp
jp
dec
fnstcw
inc
xor
push
adc
pop
jmp
lock
mov
add
push
jmp
fmul
pop
jmp
add
add
leave
fs
shl
fsub
push
jmp
insl
lock
jmp
fcoms
loop
fsubs
shlb
shlb
cmp
jmp
hlt
lock
jmp
add
push
roll
fdivrp
xlat
aas
rolb
loop
add
arpl
mov
sub
or
clc
mov
jmp
add
repz
mov
ljmp
jbe
call
xchg
sbbb
jmp
cmpsl
shrl
repz
adcb
int
imul
pcmpgtw
into
add
sbb
call
shll
shll
scas
jns
call
adc
fwait
loopne
daa
shrl
pop
add
sti
incl
add
test
add
dec
push
mov
push
call
pop
jle
cld
scas
mov
in
out
push
mov
lcall
jne
out
mov
incl
out
mov
mov
jmp
jge
cld
scas
mov
leave
add
mov
pushl
add
xor
decl
mov
out
dec
xchg
testl
decl
aad
das
popa
push
cld
sbb
leave
add
mov
lcall
out
cmovbe
hlt
pop
dec
imul
negl
jmp
in
lea
out
fisttps
fmuls
int3
add
js
rorl
call
add
jns
in
out
lahf
mov
mov
enter
pusha
int
xchg
xor
aam
mov
aad
pop
pop
int3
add
push
bnd
in
jno
dec
fists
pop
mov
stos
jle
dec
fbstp
sbb
add
subl
cltd
inc
in
iret
inc
push
cmp
jmp
aam
loop
aad
fildll
out
into
jo
add
enter
xlat
xchg
add
iret
into
add
mov
pop
test
mov
or
and
push
add
popl
adc
flds
movb
cmp
add
cmp
pop
xchg
call
incl
sbb
pop
mov
cltd
out
sub
add
xor
pop
icebp
int
icebp
je
add
push
mov
ret
xor
mov
inc
clc
jmp
push
jl
int3
jne
pushf
push
or
ret
int
sub
loope
cmpsb
sub
add
repz
mov
push
inc
add
mov
inc
pop
cs
or
add
dec
or
push
loop
or
add
in
stos
cmpl
jne
jbe
cld
call
xchg
aas
clc
pop
push
les
add
cmp
jmp
adc
pushl
roll
add
push
mov
sahf
push
push
out
or
push
mov
pushl
mov
cltd
or
push
or
and
mov
jle
add
addl
add
mov
enter
mov
hlt
fstpl
lret
call
sti
popf
push
add
repz
mov
lock
out
fnstsw
scas
xchg
mov
mov
cld
imul
add
shl
and
inc
aam
push
or
push
cmp
add
add
cmp
aam
cld
cwtl
or
lock
out
xchg
fidivrs
lret
mov
pop
fistps
cmpsl
add
ljmp
pop
or
sub
fidivs
adc
inc
jmp
loopne
aaa
push
shll
push
jmp
or
call
jge
jbe
push
add
in
sub
test
ja
mov
pop
lock
fadds
push
imull
mov
add
add
add
pop
insb
or
jmp
dec
lds
jmp
decl
test
hlt
push
or
push
add
lcall
divb
pop
sbb
cmpsb
add
xchg
add
testb
jmp
jne
xchg
leave
sub
push
push
bound
xor
jl
or
repz
jmp
popf
sar
cs
iret
mov
push
or
sti
ljmp
add
add
mov
or
leave
jne
dec
ret
pop
iret
sbb
ret
push
push
pusha
decl
cmc
ficoml
add
insl
push
movzbl
das
push
nop
fcmovb
ds
sbb
cs
in
nop
orl
jl
stc
cmp
or
jl
fstpl
jg
jmp
inc
cmp
push
jl
fnstsw
nop
jg
call
rol
out
shl
push
mov
cmp
dec
sbb
mov
push
xchg
push
pop
or
push
adc
inc
or
in
stos
jecxz
sub
iret
jmp
mov
fsubp
cltd
rorl
inc
push
cmpsb
jae
pusha
pop
lds
pop
faddl
add
pop
hlt
mov
mov
in
push
sub
push
fistl
inc
cld
lea
leave
sahf
add
and
inc
es
lock
mov
add
pop
pop
lret
into
inc
negl
pop
lock
xchg
sti
mov
add
add
jl
xor
je
mov
lods
add
sti
sar
shr
lock
shll
xor
add
add
ficoms
ret
out
push
add
push
faddl
icebp
push
jmp
add
pop
jmp
int
orl
add
push
inc
push
push
stc
aas
push
in
pop
and
mov
into
out
add
movsl
jne
add
jmp
lods
cmp
pop
outsl
mov
call
pusha
ja
out
movsb
xor
push
hlt
xor
push
in
xor
inc
hlt
push
add
cmp
call
pusha
mov
inc
xor
cmp
or
add
sahf
mov
jmp
jne
dec
loope
jmp
sbb
mov
and
lret
xor
in
push
sub
call
add
pop
leave
sbb
call
add
mov
jne
out
or
and
out
pop
sub
call
or
ret
mov
add
mov
test
cmpsl
sar
push
add
xor
add
mov
in
pop
or
rclb
add
cmp
pmaxub
cld
stc
loop
jmp
xchg
decl
jecxz
std
cmpsb
rorl
rcrb
lea
xor
or
out
cmp
fadd
sar
fisttps
pop
cmpsb
js
fucomip
lret
push
mov
incl
add
sbb
sti
in
dec
push
lahf
inc
call
jns
lret
addl
inc
hlt
and
push
cld
pop
sbb
add
sub
js
jge
hlt
dec
mov
add
mov
lret
xchg
fmul
mov
ret
sbb
lret
cmp
out
pop
jmp
lret
add
into
pop
lret
out
ret
mov
lret
sub
test
nop
adc
fsubp
pop
add
push
call
or
cmp
sub
dec
imul
iret
adc
jo
repz
nop
xchg
sti
add
bound
ret
cmp
dec
mov
add
jmp
dec
or
leave
dec
fldl
sbb
enter
addl
movsb
jge
movsb
or
scas
mov
jmp
and
pop
xor
or
mov
rclb
add
icebp
inc
jmp
out
shrb
repz
je
insb
add
iret
xor
add
lds
jmp
scas
pop
add
repz
inc
icebp
ret
shll
pop
push
lods
icebp
inc
jmp
dec
cmp
jmp
add
push
mov
call
push
icebp
inc
jmp
xor
repz
add
aam
pushl
ds
in
mov
add
or
add
jecxz
movl
add
add
in
mov
pushl
iret
adc
or
push
add
dec
hlt
add
fcompl
ret
add
cmpb
lock
mov
call
leave
cli
out
dec
leave
call
push
or
imul
dec
in
enter
push
mov
cld
cli
test
lock
push
pop
fldt
leave
xor
add
lock
jge
pop
add
scas
add
mov
adc
fcoml
lock
stc
cli
mov
add
inc
or
pop
scas
pop
add
sbb
jne
addl
lock
cli
mov
jmp
les
sbb
add
add
jae
xlat
push
ret
push
xor
xor
or
addl
lods
js
sub
push
jb
imul
fcomi
lea
jnp
icebp
add
leave
out
jae
mov
or
add
add
inc
jmp
add
mov
add
mov
std
lock
pop
mov
in
fwait
rcll
mov
jp
cs
add
jl
lahf
cmp
js
mov
frstpm(287
push
jmp
add
push
jb
loopne
mov
iret
pop
xor
enter
pop
pop
jb
jae
add
add
sbb
add
mov
mov
ret
test
add
in
mov
sbb
mov
stos
push
ss
or
sub
or
bound
cli
clc
insb
pusha
push
push
jle
scas
add
lock
mov
loope
and
add
lea
loope
leave
decl
dec
icebp
mov
adc
dec
xchg
cli
mov
lods
mov
add
popf
int
test
pop
or
xor
stc
xor
out
xor
mov
cmc
dec
cld
xadd
into
xor
cmp
xor
movsb
sub
inc
add
mov
ret
rorb
xchg
push
sti
lea
adc
fwait
add
enter
jg
cli
lret
stc
lret
pushf
testb
inc
aam
pop
sbb
add
push
add
ds
xor
out
xor
xor
pop
loope
subb
pop
rorl
ret
add
stc
lock
jl
mov
adc
push
sarb
idiv
adc
cli
sub
mov
xchg
ret
add
mov
mov
cmpb
fs
adc
out
push
repz
add
and
cli
and
test
unpckhps
mov
or
mov
mov
xor
lahf
fwait
std
repz
test
jnp
idiv
shll
jne
dec
pusha
push
dec
adc
xor
ljmp
mov
in
jb
pop
sahf
cli
cmpsl
fiadds
rorb
clc
nop
add
je
or
cmc
mov
dec
hlt
lds
mov
ret
mov
lcall
enter
popl
leave
out
idivb
popa
jmp
mov
ljmp
mov
fisubrs
je
add
sbb
sub
pop
fnstenv
idiv
or
add
pusha
roll
das
add
clc
hlt
mov
inc
rorb
testb
shll
or
inc
clc
mov
dec
mov
cmc
dec
cmp
xor
xor
xor
mov
push
outsl
fwait
pop
xor
pop
shrl
add
cli
lret
clc
insb
js
out
push
call
rolb
add
mov
add
mov
and
and
pop
ret
add
mov
pop
mov
cli
js
sti
pop
jle
mov
or
or
lds
add
mov
pushf
pop
pushf
adc
or
and
pop
adc
fsts
jl
stc
jl
pop
add
xchg
mov
rcl
ret
mov
mov
and
mov
lea
add
jns
push
rol
or
fdivrl
lea
add
addl
repz
cli
ret
cmpsb
jecxz
and
push
sub
pop
xor
insb
sbb
sub
lea
cmp
pusha
add
outsl
les
insb
mov
jecxz
repz
pop
addl
iret
jmp
rorl
ljmp
insl
repz
out
shlb
repz
fsincos
in
pop
ljmp
frstor
jecxz
fidivrl
lcall
hlt
add
mov
fcomip
mov
cltd
enter
push
stc
les
or
sarl
cli
mov
out
and
add
add
and
stc
add
mov
nop
je
stc
jg
jns
pop
fadd
stos
push
repz
ret
mov
out
pushfw
add
ss
ret
in
add
mov
repz
repnz
mov
push
sub
mov
lea
xorl
in
lods
lds
ljmp
clc
je
add
add
aaa
cld
lock
ret
pop
lock
fldl2e
lods
loop
test
imul
xchg
testb
icebp
push
xor
imul
jl
add
enter
cmp
lret
stc
push
addr16
gs
les
addr16
ret
scas
pop
fnstcw
add
push
je
mov
jno
test
pop
push
ror
add
jae
call
clc
or
cli
fstpl
xchg
push
inc
add
leave
ret
fidivrl
xor
test
or
dec
add
lret
incl
mov
lea
jbe
pop
ret
adc
add
lock
mov
sti
add
test
loopne
pop
dec
mov
add
mov
mov
clc
jmp
lock
jge
adc
mov
mov
lods
ret
mov
mov
cli
and
mov
mov
or
sub
pushl
fs
sti
idiv
jne
sbb
mov
add
mov
mov
sti
ret
mov
and
inc
adc
sub
repz
mov
enter
mov
lods
std
mov
mov
ljmp
clc
adc
mov
add
icebp
addr16
shlb
addr16
negb
insl
sbb
add
push
cmc
les
sbb
fdivl
scas
mov
sub
lahf
mov
cmp
mov
test
mov
scas
or
mov
jge
cli
icebp
and
push
add
mov
mov
inc
out
mov
xor
vcvtsi2sd
cmp
shrb
pop
lret
mov
push
xchg
jle
lea
xchg
shrl
pop
pop
lds
adc
icebp
repnz
ss
or
scas
mov
aaa
mov
mov
jne
call
lret
dec
pop
inc
lret
in
repz
mov
mov
outsb
add
or
pushl
jle
clc
xchg
mov
gs
push
add
xchg
out
add
push
and
out
push
mov
add
mov
faddl
movl
mov
gs
push
lock
lret
jmp
add
pop
add
inc
jno
fs
pop
push
call
adcl
call
testl
mov
inc
shl
pop
add
outsb
push
push
fldenv
jmp
lods
add
jl
inc
add
lods
aaa
add
jle
test
clc
mov
push
inc
lock
inc
js
inc
mov
lock
jl
dec
mov
adcb
inc
js
xor
or
mov
add
int3
aad
xchg
ror
btcl
xor
inc
add
add
lock
gs
mov
jnp
sub
lahf
push
enter
leave
xchg
aas
and
add
adc
sub
add
and
inc
jmp
inc
lock
and
pop
pusha
adc
test
dec
sbb
add
leave
and
pop
inc
xchg
fdivs
xor
in
pushf
mov
es
jl
enter
add
sbb
or
add
in
sarl
add
xor
inc
push
fstps
jl
mov
sbb
inc
add
and
xorl
mov
js
data16
inc
jne
push
pusha
or
pop
mov
icebp
les
pop
lcall
sub
outsb
dec
cld
inc
rcrb
test
jg
xor
ljmp
pop
jnp
jb
add
ror
push
jecxz
adc
js
gs
add
lock
leave
scas
jne
insl
dec
clc
jo
mov
cmpsl
jnp
bound
into
inc
add
mov
decl
int3
outsb
xor
or
add
fdivl
mov
cld
jbe
inc
jno
jge
cwtl
insl
push
mov
repz
add
add
mov
iret
mov
push
insb
mov
add
ljmp
add
out
inc
mov
inc
clc
mov
mov
cld
es
testl
push
ret
add
mov
jae
lock
xor
fwait
xchg
ja
aad
inc
lret
arpl
add
xor
mov
sub
fdivs
add
inc
lock
out
arpl
add
adc
sub
cld
icebp
mov
mov
sahf
outsl
adc
xchg
mov
lahf
mov
call
jae
mov
into
cld
sub
add
mov
mov
addr16
cmpsl
adc
sub
addb
cmp
outsb
mov
add
ret
push
jb
sub
in
lds
sbb
cmp
out
sbb
lret
add
mov
repnz
flds
js
outsb
mov
les
loopne
and
jns
pop
xchg
jg
lcall
push
mov
jb
icebp
add
cld
adc
mov
add
push
ja
jmp
add
add
mov
cmp
jmp
or
push
shll
add
rorl
in
push
mov
cld
push
jne
fwait
add
pop
mov
sar
jmp
in
stos
jne
cmp
jmp
filds
clc
add
pop
add
add
push
jne
push
push
add
repz
add
jg
es
mov
inc
stos
incl
hlt
stos
mov
push
jg
decb
add
dec
pop
movl
pushf
addl
jne,pn
jne
xchg
lea
push
add
lea
leave
or
call
mov
je
add
stos
mov
jmp
push
add
leave
push
leave
ret
push
mov
lret
fisubrl
ja
or
fisubrs
pop
pushl
jg
ja
or
fbstp
add
lahf
jle
outsl
nop
mov
clc
pop
pop
mov
inc
in
inc
mov
repz
icebp
sbb
add
shlb
pop
push
adc
popf
mov
mov
lods
scas
xor
fstpt
ret
dec
ja
adc
or
jno
add
xlat
and
aad
cmp
cmp
push
jmp
mov
lahf
movsb
ret
jne
push
adc
sub
add
push
jmp
sti
ja
adc
inc
fstps
add
lock
out
scas
shrb
add
subl
repz
shl
mov
adc
add
jnp
add
test
in
scas
mov
push
push
loopne
cld
add
pushf
in
lret
xor
mov
mov
jp
test
sbb
dec
dec
cmp
sahf
sbb
scas
test
dec
movsb
pop
add
repz
mov
add
scas
push
xchg
out
jns
adc
inc
push
or
je
cld
in
imul
jge
repz
sbb
add
ljmp
mov
jb
hlt
sbb
push
call
jo
stos
lea
push
call
fisubrl
sbb
add
cmpsl
cmpsl
jne
jnp
data16
sahf
add
jmp
pop
jp
add
pop
cmp
jbe
mov
mov
pushl
mov
out
test
pop
mov
pop
mov
sub
xor
dec
add
jne
pop
jne
es
or
or
add
dec
add
add
jbe
sbb
ret
je
sbbb
add
xor
add
or
inc
aam
xchg
enter
aam
scas
mov
loop
movb
push
push
lock
mov
lock
jp
test
lds
mov
pop
or
filds
hlt
ss
cwtl
loopne
add
pusha
clc
mov
or
in
lock
add
je
fistps
jg
icebp
xchg
push
lock
fadd
cs
lods
add
add
lds
jp
sbb
lods
lcall
hlt
dec
jmp
fwait
and
pop
sbb
ja
insb
inc
clc
lock
jmp
stos
mov
cmovno
fwait
push
xchg
sbb
cwtl
jmp
sub
fists
adc
add
add
movsl
xchg
mov
cmp
push
imul
ja
movsl
pop
mov
cmp
stos
lds
into
jg
inc
and
imul
fildll
cs
adcb
xchg
jge
mov
jmp
stos
imul
jmp
fwait
movsb
mov
jecxz
call
add
repz
mov
sub
dec
aam
sti
push
add
xor
lcall
sbb
xor
push
xor
jne
imul
repz
xchg
repz
jmp
ljmp
cmpsb
shlb
repz
andb
sbbl
add
movsb
mov
add
pop
mov
movb
cmp
mov
add
lret
inc
sarb
add
xor
aam
adc
add
inc
lock
jle
add
pop
add
jmp
sub
xor
hlt
add
jne
andb
outsb
pushl
add
jne
or
add
or
add
sahf
mov
popa
cmp
dec
repz
call
lock
jne
test
mov
js
mov
scas
push
incl
test
mov
dec
sti
mov
scas
pushf
adc
pushf
test
pop
cmp
cld
xchg
fnstcw
pop
imul
inc
add
jg
outsl
call
outsl
jnp
call
pop
sbb
add
add
push
test
pop
cmp
jmp
jl
cld
movsb
ret
je
jo
add
scas
add
lods
pop
add
lock
jbe
add
cmp
call
mov
std
adc
jle
in
cld
cmpsl
fdivrs
outsl
test
ss
mov
mov
jmp
mov
xchg
pop
jmp
add
add
sub
jbe
mov
jmp
add
mov
cmp
lock
sub
dec
cmp
jae
xchg
dec
mov
push
jmp
add
pop
jmp
cmpsl
imul
jmp
push
mov
add
repz
call
jo
arpl
jmp
add
subl
jg
call
daa
dec
aam
loope
lods
arpl
inc
and
add
dec
dec
hlt
jg,pn
pushl
push
xchg
repz
add
pop
call
push
or
and
xorl
in
mov
inc
cltd
mov
add
test
mov
dec
sbb
mov
inc
jmp
add
rolb
faddl
add
fstps
jge
xor
mov
les
xlat
mov
mov
inc
loope
ltr
cltd
incl
les
add
mov
add
out
roll
jl
jmp
fdiv
jne
imul
dec
push
mov
add
and
mov
lock
add
shrb
sbb
pop
fcmovb
call
sti
insl
das
add
inc
jnp
cmp
das
mov
dec
cmpsb
jmp
lea
mov
lock
fdivr
stos
mov
cmp
subb
das
adc
adc
inc
mov
movsb
or
sbb
or
add
xchg
movsb
jne
clc
or
push
popf
js
dec
sbb
inc
filds
add
pop
pop
les
mov
push
pop
sahf
cmp
or
sahf
movsb
jp
loope
test
mov
sahf
sahf
js
inc
ss
imul
enter
add
fnstsw
gs
pop
push
scas
adc
fwait
add
pushf
push
jmp
repz
adc
fwait
je
movsb
jns
xor
push
jmp
movsb
or
cs
popf
add
popf
jne
pop
fs
jmp
pop
ds
push
xchg
ret
xor
xchg
in
push
push
mov
cmp
pop
add
repz
arpl
push
leave
stos
add
sbb
add
xacquire
repz
outsb
fptan
fsubr
scas
fiaddl
pushf
fsubl
adc
push
out
mov
adc
enter
rorl
add
repz
push
or
xchg
jmp
scas
add
push
pushl
jo
fisttpl
leave
ret
push
mov
decl
call
add
mov
idiv
jae
addr16
xor
loop
dec
or
inc
lock
or
and
je
cmpb
pop
adc
mov
imul
ds
jne
cs
sti
incl
jne
outsl
dec
dec
push
out
cli
push
psubsb
out
push
add
add
popf
mov
loop
movsb
mov
xor
or
cmp
movsl
mov
mov
mov
mov
mov
andb
add
mov
adc
fwait
repz
mov
or
sbb
lock
cmp
jecxz
xor
fstl
scas
mov
add
mov
stos
jns
push
mov
fisttpll
jmp
or
or
add
or
imul
daa
push
test
mov
xor
push
add
cmp
or
mov
icebp
inc
insb
inc
loopne
cmp
pop
setno
cmp
hlt
push
adc
les
pop
enter
mov
lock
jo
call
repnz
add
push
or
dec
cwtl
cltd
jmp
xor
jno
nop
adc
push
mov
push
out
or
push
dec
cltd
jmp
pop
dec
ja
ds
xor
cmpsl
lea
add
lea
lcall
jle
incl
jl
mov
out
std
add
xrelease
push
repnz
call
in
push
add
add
sub
mov
insb
mov
rorb
fadd
jmp
jne
sub
in
mov
lahf
mov
add
or
add
add
xchg
add
or
inc
call
les
mov
jns
or
push
inc
insl
or
js
or
mov
incl
js
jmp
push
push
popa
push
inc
aam
jne
js
adc
decl
push
inc
incl
call
xchg
inc
fisttpl
imul
jne
popf
pushl
and
lock
jmp
add
stc
pop
adc
push
push
or
or
adc
addr16
adc
call
daa
jb
pop
mov
call
mov
rorl
incl
movsl
pushf
push
or
lcall
xor
gs
push
aad
popf
call
jne
ret
sbb
popf
ljmp
pop
jmp
add
add
xchg
dec
popf
inc
push
inc
popf
xchg
ss
cmp
inc
popf
shrb
pop
cmp
lret
pop
in
jl
inc
sbb
pushf
fnsave
imul
ss
ficoms
in
sahf
xor
test
lds
loopne
rcll
negl
rcrl
call
stos
add
lret
pushf
mov
orb
fdivp
hlt
jmp
sbb
out
jl
call
cli
aam
xchg
jne
fldl2t
mov
sahf
cmpsb
ss
xchg
pushl
sbb
pop
xchg
jne
mov
push
insb
mov
mov
std
cmp
or
cmp
inc
loope
sbb
data16
and
add
add
xrelease
jmp
cld
push
je
jns
lock
push
push
add
xchg
jae
aam
jne
bound
lea
adc
mov
out
repz
test
repnz
dec
jl
jne
test
loop
lock
jge
mov
add
add
les
add
ror
or
in
in
adcl
push
loop
das
fmuls
call
mov
inc
cld
or
add
rol
je
add
inc
leave
fsub
inc
lock
add
sti
pop
comiss
sub
filds
push
enter
lock
je
sbb
call
and
addl
ljmp
pop
lret
out
mov
mov
push
mov
jae
xchg
addl
movlps
lds
mov
add
xlat
add
popf
movsb
pop
add
popf
add
xor
aas
cli
ss
add
mov
add
xor
ljmp
inc
in
jl
xchg
xor
pop
adc
pop
adc
add
add
out
add
sbb
repnz
inc
jmp
lret
movsb
xchg
lock
jmp
xor
sbb
cs
hlt
lds
dec
jmp
shrb
decb
cmp
fadd
fiadds
mov
jge
test
fs
inc
not
inc
jmp
cwtl
mov
add
or
adc
lock
rclb
add
aaa
notb
std
sbb
pop
inc
gs
mov
je
setg
mov
and
call
add
jbe
fwait
push
es
xchg
push
fs
adcl
pop
add
je
xor
testb
jmp
add
jecxz
inc
jne
push
adc
lods
push
call
roll
ret
push
sbbb
cmc
ja
decl
loopne
add
or
jne
pop
cmpsb
aad
js
inc
jne
add
cmp
jne
pop
out
es
pushf
cltd
add
lea
pushl
jnp
ja
or
pushl
sldt
mov
pusha
es
push
mov
test
add
add
enter
mov
jmp
test
add
add
or
add
push
add
inc
mov
add
add
in
movsb
ret
je
inc
js
lock
mov
inc
pop
adc
fcomps
scas
fbstp
lock
inc
cmpsb
stos
test
lods
mov
or
add
stos
jmp
add
mov
pop
xchg
incl
popf
xchg
mov
rcll
jmp
add
popf
stos
push
mov
aaa
incl
xchg
jne
cmc
and
aaa
nop
sub
repz
add
pop
adcl
sub
or
add
fnstsw
lock
dec
xchg
mov
stos
sub
movsb
xchg
xlat
aaa
sahf
sldt
clc
sahf
pushf
mov
mov
xchg
jle
scas
aaa
add
inc
jmp
xchg
imul
xchg
lock
outsl
repz
xchg
pop
mov
xchg
popf
das
push
xchg
dec
mov
aas
mov
mov
lcall
out
popa
mov
out
cs
fisubs
cmp
add
pop
mov
into
out
out
inc
mov
shl
and
inc
in
lea
mov
cmpsb
jl
mov
gs
incl
fs
pop
xchg
mov
inc
push
pop
call
jo
push
pop
mov
jmp
push
inc
add
mov
test
or
incl
lea
decl
add
add
fidivl
test
push
icebp
mov
add
jmp
lea
jne
jno
shrl
jns
jne
js
or
fcomps
mov
call
add
sbb
cld
push
outsb
out
or
fsubrl
inc
cltd
jo
test
or
rcrb
movl
roll
add
add
add
push
int3
jge
testl
xchg
mov
xchg
jmp
or
add
fstl
add
lock
pop
lods
xchg
add
mov
out
leave
or
xor
call
inc
lock
push
fcomps
pop
add
test
je
sub
push
add
jge
xchg
mull
stos
xchg
xor
cwtl
xor
ret
je
daa
mov
jg
xchg
push
addr16
sti
out
out
xchg
pushl
fs
inc
mov
add
cli
addb
adc
fwait
pop
mov
xchg
add
adc
fwait
sarl
rcrl
add
loope
lods
mov
mov
add
add
mov
or
sub
mov
xchg
pop
jmp
ss
push
xchg
insl
inc
insl
xor
adc
nop
lds
adc
sahf
test
push
loop
out
lcall
pop
add
repz
movsb
jg
pop
jmp
repz
xor
inc
adc
mov
clc
testb
push
mov
outsl
mov
add
xor
add
jmp
in
mov
mov
mov
pop
test
mov
mov
insb
ja
sahf
pusha
jg
cltd
pop
mov
orl
inc
add
xchg
imull
mov
push
pop
mov
push
cli
and
pusha
mov
pop
in
adc
cwtl
add
incl
add
mov
sub
jbe
mov
imul
addr16
xor
mull
jns
xor
and
test
push
jns
andl
mov
je
pop
ss
mull
test
add
scas
addr16
imul
fsubl
jmp
js
or
sar
add
push
js
call
lock
sti
out
into
mov
outsl
or
jne
inc
out
push
lcall
mov
aas
icebp
pop
in
aas
stc
mov
aad
mov
daa
rcrl
sbb
mov
inc
scas
xchg
incl
test
push
mov
mov
icebp
jno
mov
xchg
push
mov
iret
ljmp
add
cmp
add
and
sbb
sbb
repnz
push
rorl
xlat
inc
jmp
daa
jbe
dec
sbb
adc
fwait
mov
mov
dec
incb
pushf
sti
dec
lret
aas
push
or
mov
push
sbb
sahf
nop
daa
xchg
pop
sbb
jl
pxor
mov
mov
jb
add
mov
jmp
add
cld
lock
push
jl
lea
xchg
mov
cld
jae
call
add
loope
lea
out
stos
fdivl
pop
add
adc
and
pushl
adc
fcmovne
das
test
out
push
sbb
xor
jnp
aad
gs
mov
dec
fists
call
mov
add
add
incl
jne
and
insl
xchg
aad
xchg
xor
inc
sbb
incl
push
add
and
je
shlb
adc
push
test
jne
pop
xchg
outsb
jmp
add
incl
or
pop
enter
pop
inc
add
pop
pop
sub
call
or
add
push
push
push
mov
lcall
cmp
test
call
icebp
pop
add
pop
inc
add
and
add
mov
lods
inc
xchg
decl
dec
push
push
push
mov
imul
jmp
out
lahf
nop
call
popa
sbb
lcall
es
cs
and
add
add
mov
popl
mov
aad
shlb
mov
mov
hlt
lret
add
sti
out
and
jns
xchg
outsb
add
dec
mov
ljmp
out
clc
cwtl
jno
add
test
clc
or
addr16
push
add
lock
adc
gs
mov
dec
mov
add
call
mov
sub
mov
adc
outsb
pop
mov
cmp
paddb
mov
pushf
mov
test
sti
rcll
outsl
lock
inc
mov
iret
cmp
inc
lock
inc
pop
sbb
stc
lock
add
add
pop
cli
aam
add
loop
test
mov
cmpl
test
shl
cmc
adc
lock
adc
xor
push
xor
enter
jecxz
pushl
pop
call
cmp
pop
xchg
arpl
daa
mov
ss
jmp
xor
call
repnz
adc
fdivrl
jne
mov
jne
je
shll
add
jns
inc
xor
inc
jmp
repz
push
in
jne
jnp
std
idivb
incl
das
sub
xorl
add
cld
inc
hlt
xchg
hlt
cld
and
xchg
mov
fcoml
ljmp
sbb
push
addr16
add
jno
sar
push
pushl
popf
push
std
mov
xor
das
inc
dec
sbb
push
call
inc
inc
je
rolb
mov
adc
testb
rolb
mov
jno
das
inc
or
push
sbb
mov
fistps
xchg
push
add
add
aam
add
lock
sbb
lock
sub
mov
adc
imul
xchg
test
cld
jg
xchg
shrb
xchg
rcll
or
mov
add
mov
add
jle
adc
fwait
sti
out
sbb
cmp
inc
hlt
xchg
subl
cmpl
add
imul
cli
scas
cli
jmp
sub
push
add
fucom
add
jg
clc
xlat
jo
xchg
or
xlat
xor
sahf
adc
outsb
bound
pop
inc
aad
lock
notl
lea
jg
sbb
mov
test
mov
xchg
sub
jge
das
xchg
outsb
fldenv
jo
add
insb
adcb
mov
gs
push
jmp
test
ja
jmp
jg
jmp
sbb
addr16
inc
fbld
jne
jp
add
repz
pop
xor
push
adc
sub
mov
jmp
lahf
outsl
xchg
jmp
lods
pushl
or
jbe
jle
je
dec
pop
jne
push
add
add
and
out
mov
hlt
setns
inc
inc
jge
cs
xor
arpl
mov
decl
cld
inc
xor
dec
or
mov
test
push
lret
mov
je
sbb
sub
add
jne
mov
pushl
jmp
adcb
add
addr16
leave
enter
cli
mov
add
add
or
add
jg
je
aaa
pushl
mov
call
aam
ljmp
cmp
mov
cld
mov
decl
xorl
lock
arpl
lock
mov
push
sub
idiv
movsb
call
dec
inc
in
outsb
add
lock
stc
or
mov
incl
add
jns
je
test
cmp
inc
stos
insb
adc
scas
adc
ljmp
subb
stc
sti
jae
call
jg
jg
sbb
xor
add
fiadds
push
cmp
pop
pop
mov
enter
in
add
push
insb
mov
jge
add
xor
inc
add
incl
mov
icebp
push
jmp
add
out
xchg
xor
pop
fs
jl
addb
push
iret
jnp
mov
jl
cmpb
adc
icebp
push
jmp
sbbb
call
add
inc
mov
mov
in
roll
jne
pop
sbbl
push
popf
dec
jnp
addb
jge
add
jb
push
je
jae
push
jb
addr16
ret
ss
jmp
rep
dec
push
repz
or
call
neg
jno
push
out
call
movb
jge
jno
push
inc
inc
shll
shr
movsl
fnstenv
push
incl
jno
pop
addl
add
jnp
outsb
add
int3
data16
xchg
sbb
jp
repz
pop
inc
xchg
add
push
push
push
jb
call
adcl
call
decl
fwait
lret
leave
ret
push
mov
insl
pushl
xchg
mov
in
pushl
push
mov
dec
ret
add
or
add
cltd
add
fistpll
cld
push
pushl
popa
dec
incl
or
je
mov
inc
add
out
xchg
cmc
notl
or
stos
sarl
inc
mov
call
sub
outsb
subl
xchg
lock
add
test
cmp
repnz
add
add
outsb
add
out
adc
bound
rorb
and
pop
fadd
jle
mov
test
add
sbb
xchg
jg
insl
jge
push
ds
insl
nop
test
xchg
xchg
insl
inc
pop
jg
xlat
push
mov
pop
inc
fs
lea
js
out
xchg
push
je
add
xor
jg
add
xchg
idivl
jle
js
ret
cmpb
jmp
add
fsubl
mov
into
jle
les
dec
mov
aaa
mov
and
xchg
stos
jge
ja
ror
fs
ja
jmp
sub
icebp
jmp
or
into
outsb
out
ja
popf
in
mov
add
lret
inc
iret
push
ja
stc
and
ss
ja
cltd
mov
js
cs
mov
cmpsb
mov
mov
mov
aad
push
add
test
cmpsl
mov
out
pop
pop
jl
push
lcall
lret
movb
in
repz
scas
cmpsl
add
stos
xor
jb
test
add
in
mov
repz
push
add
jge
call
or
xor
add
xchg
mov
mov
xor
repz
mov
int
ficomps
dec
dec
decl
jge
call
icebp
sub
out
bound
dec
or
jne
loope
into
fdivp
dec
push
sbb
je
mov
std
incl
add
repnz
mov
xchg
cwtl
repnz
push
add
inc
mov
jne
imul
test
mov
jg
xchg
test
or
mov
rcl
imul
addr16
int3
jnp
mov
mov
scas
add
push
xor
cli
add
sti
pop
negl
add
lahf
pop
out
sar
jae
sarb
push
mov
pushl
insl
icebp
pop
enter
xlat
inc
js
mov
jnp
mov
lock
pop
jp
clc
push
xchg
jne
je
out
shlb
or
insb
jnp
loope
jp
call
out
adc
pop
addr16
fisttps
mov
push
icebp
negl
js
je
adc
add
call
cmp
je
in
mov
test
pop
cli
lock
push
jnp
out
xlat
les
jne
or
adc
aaa
xor
out
pop
clc
js
jae
pop
and
call
inc
jae
jp
jae
lock
pop
add
xor
xor
sub
cwtl
lcall
jae
stc
or
or
add
push
je
jbe
jmp
xchg
mov
pushl
mov
add
loopne
dec
inc
pop
mov
lret
pop
int3
ss
mov
and
repz
adc
mov
call
pop
or
dec
push
incl
pop
cld
sti
rorl
inc
call
faddl
add
cld
add
mov
push
add
mov
inc
add
sti
call
add
add
daa
pop
jne
fisubrs
jbe
jne
loop
leave
out
enter
push
mov
stc
xor
fsubrp
int3
mov
jne
push
out
add
ljmp
lcall
ds
out
push
out
or
into
mov
movmskps
sbb
jmp
out
je
add
mov
je
rcrl
pushl
pop
into
mov
fdivrl
cld
mov
mov
out
dec
jns
js
lock
push
inc
lock
out
sti
xchg
or
imul
out
scas
pop
data16
call
js
dec
inc
add
in
add
js
clc
loope
daa
and
add
sbb
mov
pop
adc
clc
pop
into
mov
ds
mov
add
stc
or
lds
js
jns
ja
mov
sbb
xlat
call
xor
sub
cli
lock
sti
les
pop
cmpsb
xor
sub
cli
loopne
pop
jno
ja
mov
les
push
xor
sbb
lock
jo
ja
inc
sbb
inc
call
inc
xor
loopne
mov
ja
sahf
fcmovnb
pop
call
push
xor
lock
add
and
jmp
and
sub
hlt
outsl
jne
pop
cmp
into
inc
fistpll
push
loope
pushl
hlt
outsl
jne
or
sahf
add
push
fldt
incl
hlt
outsl
jne
fisttpl
outsb
out
cmpsl
sbb
inc
icebp
push
add
stc
pop
push
into
jno
sbb
cmp
repz
sbbb
pop
call
addl
insl
xor
or
ror
push
add
xor
inc
leave
bound
add
mov
jne
loop
std
pop
hlt
addr16
dec
jmp
cmp
loope
add
sbb
je
jno
std
ljmp
mov
xchg
stos
dec
jmp
or
or
pop
call
xor
xchg
xor
or
gs
repz
push
popa
jle
inc
lock
jmp
add
lock
cmp
ja
dec
in
insb
je
or
pop
enter
xlat
fldenv
incl
imul
push
je
fdivrl
pop
enter
scas
lods
out
sti
cmpsl
sub
daa
movsb
je
test
stc
addw
pop
xor
pusha
je
cld
xchg
cmc
leave
addr16
shlb
pop
fs
pop
test
inc
aas
mov
add
imul
je
mov
out
push
push
mov
lcall
push
je
mov
pop
fsubrs
and
addb
pop
cmpsl
aam
repnz
dec
pop
jae
jle
jae
ds
cld
scas
shll
cmpsl
repnz
test
inc
sbb
les
insb
mov
daa
insb
cld
sti
add
push
fstpt
addr16
adc
inc
call
mov
stc
out
imul
xor
fstpt
insb
add
popf
shl
repz
icebp
or
leave
lret
repz
inc
and
loope
std
call
insb
xor
shr
cmp
mull
push
into
mov
imul
add
add
ljmp
hlt
imul
repnz
in
pop
std
mov
imul
inc
insb
jne
loop
or
lret
sub
ret
movsb
iret
xchg
mov
je
mov
add
orl
fldl
je
out
daa
ljmp
sub
cmc
incl
add
jne
into
add
clc
jne
clc
je
mov
sar
clc
je
mov
pop
call
or
adc
divl
jb
call
jb
pushl
clc
je
out
pop
call
jno
ljmp
out
sbb
incb
mov
pop
testb
mov
testl
add
or
inc
decl
adc
testl
idiv
div
fdivrs
inc
jmp
push
inc
call
pop
div
fsubrs
inc
dec
imul
enter
mov
imul
cwtl
pop
inc
jmp
mov
call
sub
jno
jae
jg
fistl
lock
ret
lret
lock
mov
mov
fisttpl
add
add
test
fdivrs
ret
aas
loope
xor
push
dec
idiv
imul
pop
test
pop
ret
call
add
loopne
xor
pop
xchg
mov
call
add
repnz
call
sub
push
scas
dec
mov
add
xor
push
daa
in
call
add
jae
les
add
pop
xchg
stc
jmp
adc
push
cli
xchg
jp
jo
addr16
push
imul
jmp
scas
shl
repz
add
cmp
repz
push
cmp
jmp
jg
mov
call
sbb
jne
pop
repnz
adc
add
fisubl
addr16
enter
add
ss
test
es
hlt
cmpsb
push
push
ljmp
push
push
cmc
xchg
push
push
incl
outsb
lret
loope
incb
int3
xchg
incl
das
movl
call
add
dec
ljmp
fdivs
lock
cld
xor
inc
sbb
je
loope
incl
add
dec
jmp
sbb
cmpl
xor
mov
jmp
or
inc
lret
stc
cmp
jne
ret
mov
hlt
push
inc
into
sub
or
mov
movsb
push
sub
ret
lock
or
cld
cld
dec
rorb
push
mov
ret
fcos
iret
push
inc
lock
shll
mov
fildl
add
lock
sub
xor
clc
push
sarb
clc
mov
xor
add
cmp
xor
bound
scas
add
outsl
add
iret
push
aam
inc
pop
pop
sbb
insb
lcall
push
jne
aaa
jmp
and
pop
movsl
insb
jg
cld
insb
std
push
and
add
frstor
div
outsb
pop
inc
push
mov
jns
mov
add
or
jmp
sbb
call
ret
pop
in
add
call
add
movaps
mov
not
push
pop
jmp
xor
pop
cmp
xadd
xchg
fs
pop
outsb
dec
imul
or
hlt
les
jns
jmp
mov
fs
add
push
out
dec
inc
fidivl
sub
mov
hlt
pop
insb
sub
adc
int3
jg
in
fyl2xp1
scas
xchg
pop
rclb
mov
out
xchg
mov
stos
lcall
scas
or
mov
repz
xchg
imul
jmp
add
dec
fimull
test
call
push
cmc
push
out
lahf
fwait
xorb
arpl
sbb
pop
add
mov
ret
ss
push
push
or
lret
incl
mov
pop
aaa
out
mov
push
stc
out
je
jno
call
mov
enter
push
mov
pop
push
mov
pop
call
add
nop
inc
sti
push
aas
je
dec
pop
push
dec
dec
sub
mov
or
pop
adc
fadds
out
mov
mov
ret
shl
imul
jo
fsubrl
add
inc
lock
jns
jg
std
mov
icebp
outsl
pop
mov
dec
sbb
push
js
rorb
incl
add
ljmp
mov
push
decl
push
aas
lcall
push
inc
je
jg
incb
xor
lds
imul
and
cmp
fisubs
pop
ss
push
dec
and
out
out
outsb
leave
imul
jmp
push
loop
call
ret
jg
cmc
aas
ja
repnz
in
cmp
data16
pop
cmpsb
pusha
xchg
addr16
push
ds
data16
popa
aam
pop
push
push
push
movsl
push
push
aas
push
popa
ds
out
outsb
imull
in
push
mov
fsubl
test
or
out
and
pop
add
push
mov
cmp
add
cltd
sbb
pusha
dec
into
mov
pusha
jmp
lods
pop
add
dec
out
test
mov
dec
cmpsb
orl
pushl
inc
push
add
out
mov
sub
dec
jle
or
ret
incl
cmc
inc
or
inc
in
push
bound
cmp
mov
xchg
pop
mov
or
imul
add
pusha
jne
dec
fsin
push
push
in
sbb
out
push
pop
call
mov
pop
out
mov
dec
pop
pop
call
imul
mov
loope
fmuls
pushl
mov
ret
pop
mov
jne
call
je
adcl
imul
dec
cmp
xor
add
sbb
sub
and
jae
imul
or
push
pop
call
add
push
hlt
gs
or
xor
pop
out
pop
fcomps
pop
mov
sbb
jae
push
and
inc
mov
inc
cmpsb
push
jbe
sti
out
jl
fsubrs
out
add
sahf
or
xor
clc
ja
incb
fs
in
out
pop
dec
and
add
lcall
pop
lds
or
fs
adc
pop
leave
scas
add
pop
pop
js
lock
cmc
insb
ds
imul
jmp
fs
push
jmp
fnstenv
push
cmp
push
fisubs
int
add
lahf
pop
cmp
cwtl
in
add
adc
add
push
adc
sbb
call
jns
pop
mov
push
je
inc
push
jle
mov
pop
outsb
jp
push
pop
fs
outsb
cmp
mov
push
ret
pop
pop
jl
pop
pop
ds
pop
out
mov
pushl
arpl
push
dec
icebp
incl
dec
xchg
lock
add
pushl
cltd
shr
mov
push
in
out
push
pop
mov
xchg
cmp
inc
adc
pop
adc
pop
jmp
outsl
mull
push
adc
rclb
mov
fcmovnbe
shlb
test
jns
negl
mov
jns
testl
add
sub
mov
sar
or
je
cmpl
jl
xor
mov
div
out
call
repnz
or
cmp
movsl
decl
fdiv
call
cmpl
xor
in
idiv
inc
pop
je
fisubl
pushl
imul
movsl
pushl
out
push
call
jne
inc
ds
call
jle
div
mov
lcall
les
cmp
adc
pop
or
cwtl
loopne
stc
popa
jmp
imul
and
inc
pop
xlat
pop
enter
mov
xchg
in
popa
popa
call
lahf
jnp
notl
inc
popa
cmp
dec
fnstsw
add
popa
mov
jns
lcall
lahf
lcall
xchg
lock
mov
aad
pusha
incl
pop
jmp
aaa
push
pop
call
lock
sub
mov
jo
inc
push
out
icebp
pusha
jge
push
fnstcw
pop
mov
mov
negl
adc
sub
pop
adc
mov
fnsave
add
outsb
pop
pop
pop
inc
pop
push
or
movsb
mov
xchg
outsb
loope
pop
je
jg
push
and
ja
sub
adc
mov
xchg
or
pop
xchg
or
shl
mov
add
jo
pop
hlt
pop
mov
outsb
outsb
nop
pop
call
roll
inc
jmp
sub
inc
nop
sar
ds
repz
pop
jmp
xor
add
and
retw
push
rorb
push
fidivrs
std
addr16
or
add
and
pop
add
repz
inc
aad
add
jmp
mov
jmp
addl
lcall
outsb
iret
pop
hlt
push
or
cltd
aas
add
aad
add
icebp
mov
inc
sbb
mov
add
add
hlt
idivl
in
mov
mov
call
addl
nop
movl
mov
pop
mov
js
call
in
sahf
mov
xor
lock
jmp
inc
sub
jmp
mov
lods
mov
pushl
inc
inc
mov
incl
add
jo
xor
dec
sbbl
push
add
pop
mov
mov
call
cli
mov
fiadds
pop
mov
push
push
inc
add
pop
jmp
mov
neg
cmc
pop
xor
xlat
and
fadd
push
pop
xorl
ljmp
stos
jo
lahf
xor
sahf
call
add
xchg
add
lock
jg
sahf
std
imul
movsl
pop
lcall
push
sahf
xlat
out
pop
ds
dec
push
mov
aas
fdiv
imul
test
push
data16
negl
pushf
pop
push
push
xchg
adc
pop
pop
fdiv
imul
ds
negl
xlat
out
pop
push
pushf
fists
xchg
int3
pop
push
pop
fcomps
push
pop
add
push
cmp
push
imul
negb
add
push
shl
pop
push
ficomps
ficomps
loope
xchg
xchg
pushf
pop
mov
jae
push
pushl
jmp
cld
push
call
movsb
push
call
jle
pop
jmp
outsb
ds
call
xor
bound
rolb
add
push
jne
mov
dec
jle
sub
repz
jne
dec
pop
std
push
sub
jne
and
pop
adc
sub
jmp
das
aaa
mul
cmp
jne
sub
pop
add
jg
add
or
add
or
or
incb
pop
or
repz
jecxz
lea
add
mov
decl
mov
clc
xchg
xor
add
adc
jae
mov
add
or
sub
pushl
mov
fs
div
scas
dec
push
icebp
push
mov
lock
pop
add
pop
pop
pushl
xchg
negb
enter
lock
jns
pop
idivl
in
decl
nop
adc
add
pushf
nop
lock
movsb
pop
jmp
jne
mov
push
jl
dec
pop
jmp
push
add
gs
jmp
in
pop
leave
sahf
add
or
jns
push
pop
in
call
adc
lock
pop
lcall
testl
shl
pop
pushl
idivl
lcall
add
cmpsl
popa
pop
xor
xchg
push
cwtl
push
loop
cld
out
imul
and
scas
mov
fcompl
push
pop
cmc
or
fucomi
mov
loopne
pop
aas
dec
insb
cmp
push
jle
das
push
jmp
pop
pop
mov
or
call
pop
pop
push
adc
enter
lcall
push
out
push
add
aam
es
lock
lock
jmp
pop
mov
push
jmp
add
jmp
repz
push
mov
call
data16
idivl
fldt
scas
mov
push
lcall
jbe
decl
cwtl
push
jne
fwait
aas
mov
enter
rclb
add
es
sarb
push
jbe
testl
mov
mov
jmp
and
push
iret
fistl
bound
testl
out
inc
pop
call
repnz
mov
call
scas
jbe
negl
mov
idiv
scas
jecxz
mov
xor
incl
add
mov
mov
icebp
jb
ljmp
fdiv
scas
mov
pop
loope
jmp
mov
push
mov
mov
mov
jne
loop
mov
add
ret
push
mov
add
out
xor
nop
mov
in
or
pop
cwtl
ficoml
lahf
pusha
sar
xchg
mov
call
add
mov
in
subl
rorb
pop
pop
mov
mov
imul
add
xor
pop
repnz
add
lods
test
add
pop
ds
sbb
std
lcall
add
lock
push
loop
repz
rclb
xchg
pop
jmp
imul
add
mov
add
adc
jmp
lock
sub
pop
push
rolb
add
pop
cmpsb
lcall
cmc
dec
cmpsl
dec
cltd
mov
jnp
push
xchg
subb
fiadds
jg
inc
mov
push
mov
addr16
cld
mov
enter
xchg
cmpsb
push
jns
test
dec
add
cmpsl
ret
cmp
daa
dec
jle
stc
cltd
pop
dec
jo
sbb
pop
push
lcall
push
add
cmp
dec
hlt
mov
enter
mov
test
cmp
fidivs
push
sbb
incl
inc
adc
shlb
dec
jmp
addr16
and
test
xor
cmp
mov
mov
stos
sub
hlt
pop
adc
dec
or
or
xchg
aas
rorb
mov
jge
movsl
add
mov
inc
test
repz
add
pushf
jnp
cmp
aaa
add
mov
pop
sub
mov
or
cmp
andl
jmp
dec
je
div
mov
repnz
movb
or
add
stos
lea
lods
mov
lcall
addl
in
idiv
cmpsb
add
lea
or
call
and
jae
lcall
je
mov
call
lock
in
mov
add
fistps
push
ficompl
iret
and
je
loope
call
cmp
fildl
lock
xchg
lcall
add
push
lcall
pop
decl
push
cwtl
call
in
pop
in
mov
mov
cwtl
in
movsb
push
mov
je
jge
pop
ljmp
test
pop
sbb
xchg
lcall
aam
loopne
fcoml
test
icebp
pop
inc
cwtl
pop
push
call
inc
dec
movsl
dec
inc
push
popf
pop
ss
fistps
cwtl
add
xlat
dec
cs
fcoms
push
fcomps
pop
arpl
xchg
push
push
cmpsl
xchg
stc
pop
lahf
dec
add
dec
out
push
xor
dec
ficoms
dec
shll
jmp
mov
pop
push
fs
fucom
dec
xor
push
pushf
pop
push
inc
andb
push
jmp
sbb
call
cmpb
ljmp
add
out
test
fisubs
push
xor
adc
push
inc
jmp
inc
mov
xor
bound
icebp
sbb
jne
inc
aam
push
mov
dec
push
mov
dec
call
adc
and
pop
shll
dec
rcl
ds
aas
xchg
mov
int
subl
add
dec
jne
fwait
and
mov
jg
add
ljmp
push
addr16
out
inc
add
sbb
lcall
dec
out
imul
push
push
test
les
mov
or
fidivs
cld
jno
add
das
sub
aaa
dec
add
fcoms
incb
out
mov
push
add
add
push
inc
fs
sub
lods
xchg
mov
mov
push
dec
popa
gs
lock
addr16
pop
mov
lock
dec
jne
test
fstps
cmp
dec
incl
lds
out
mov
mov
cld
ds
jne
cmc
fidivl
add
mov
sbb
sahf
add
lock
add
add
insl
test
lock
inc
je
pop
pop
shrl
push
xor
mov
lock
pop
mov
negl
cmp
inc
sbbl
shrb
roll
mov
inc
outsb
dec
add
pop
fdivr
inc
fdivr
add
xlat
into
xchg
dec
out
cmpsb
cmp
or
mov
int3
mov
fabs
inc
pushf
sti
xlat
xor
mov
lods
dec
sbb
jmp
or
pop
xchg
sbb
call
xchg
test
out
add
jecxz,pn
outsl
inc
mov
jns
mov
mov
lret
sti
sbb
loop
sub
cs
hlt
push
or
add
and
push
and
push
add
repz
inc
jne
or
imul
outsb
int3
repz
sub
cmp
lahf
fs
push
or
cwtl
or
test
push
add
xor
or
xor
arpl
imul
xor
push
shll
fdivrp
mov
fidivrs
incl
add
ret
or
icebp
dec
dec
fdecstp
call
dec
jmp
inc
fwait
call
shrb
add
mov
mov
cmp
sub
loope
mov
rorb
pushl
inc
pop
fdiv
incl
shll
lock
jmp
add
call
test
jns
arpl
add
dec
or
mov
fdivr
call
or
test
lock
rcrb
jae
sub
pop
dec
add
test
jne
push
incl
pop
jbe
insl
dec
jmp
cmp
idiv
pop
push
xchg
dec
jne
push
call
pop
add
lock
in
mov
add
dec
push
popa
mov
fildll
add
add
mov
rolb
fsubr
cltd
mov
and
jmp
adc
jmp
push
call
xor
incl
push
out
ja
lock
imul
pop
inc
shr
jo,pn
dec
inc
mov
dec
cmp
dec
aaa
inc
push
push
daa
inc
xchg
pop
sbb
dec
pop
jns
push
pop
inc
xchg
sub
jbe
add
cmp
sub
pop
shl
dec
out
dec
rcr
das
out
lock
xor
push
pushf
jle
xchg
divb
jno
dec
jns
or
or
cmpsl
add
inc
add
cmp
in
sub
fisubrs
inc
add
xchg
in
push
inc
push
xor
sub
and
add
subb
incl
test
inc
jmp
das
pop
jle
mov
call
xor
xor
dec
addr16
sti
cltd
sub
test
cs
push
push
or
mov
push
lods
cmp
add
repz
inc
add
arpl
imul
add
into
push
ds
idiv
into
out
lret
or
add
add
into
je
cmpl
repz
dec
push
popa
dec
mov
jle
test
xchg
call
pop
rcl
ds
dec
push
cs
lock
sbb
mov
push
mov
push
iret
push
sub
add
pop
ds
decl
outsb
add
inc
std
inc
ljmp
push
imull
iret
test
lock
xchg
lock
dec
inc
incl
inc
jae
aas
jno
test
inc
jge
daa
mull
cltd
mov
pop
push
call
add
roll
inc
call
ds
push
xor
je
lods
mov
add
inc
add
ds
xor
arpl
iret
add
lret
pop
cli
mov
xchg
cmc
pop
inc
cmpsl
inc
insb
cmpsl
aas
push
icebp
xchg
aas
jmp
inc
xchg
jge
jb
std
dec
ja
jmp
pop
pop
aas
add
mov
add
mov
inc
jge
mov
xor
aas
repnz
movsb
fisubrl
dec
aaa
xchg
inc
add
lock
xchg
test
mov
jbe
js
dec
idivl
data16
mov
nop
enter
xlat
mov
pop
popf
imul
je
adc
ljmp
pusha
and
es
dec
lods
stos
push
ss
es
mov
ds
outsl
and
out
sub
cmp
call
mov
add
cmp
pushl
lods
cmp
lcall
mov
decl
jae
add
jns
andl
aad
jmp
xor
insb
incl
ss
push
dec
sti
jl
jne
loope
mov
jge
mov
pusha
decl
add
out
ffree
decb
leave
push
sub
cmp
mov
jo
incl
idiv
mov
loope
stos
xchg
jne
ret
xchg
lret
incl
xchg
call
pop
add
mov
push
cld
xor
lods
mov
dec
add
and
pop
add
mov
int
fsubs
incl
add
cmp
je
add
lock
int
cwtl
stc
xchg
jmp
fwait
inc
lcall
push
push
scas
xchg
mov
inc
push
lds
in
cs
or
add
insl
std
add
repz
jne
or
mov
pop
scas
add
jmp
mov
adc
add
mov
cmp
call
dec
pop
rorl
jns
add
sub
inc
inc
sqrtps
cmp
inc
inc
cmp
mov
cwtl
xor
cmpsl
cmp
xchg
mov
xchg
adc
dec
sub
shll
jae
in
lods
repz
in
rol
cmp
mov
call
push
add
scas
lods
das
mov
adc
fstp
mov
jae
cmp
inc
test
add
incb
ret
and
cwtl
xor
push
mov
push
cmp
dec
sbb
inc
xor
pushl
out
je
pop
pop
cmp
and
incl
mov
cmp
xor
out
add
sbb
sbb
shlb
in
je
pushf
pop
cmp
in
out
ret
cmp
inc
add
and
mov
push
cmp
cmp
mov
mov
imul
jle
shlb
cmp
mov
pushl
push
out
dec
enter
je
xor
fsubrp
xor
add
add
jne
je
icebp
lods
test
add
push
mov
or
fcomi
jle
mov
push
jne
je
inc
jbe
add
rorb
xchg
add
inc
clc
dec
add
repz
add
ljmp
imul
lock
pop
adc
test
ret
sub
sub
add
icebp
sub
ret
dec
push
adc
dec
mov
push
lea
aaa
ljmp
fidivrs
ljmp
xor
xchg
adc
stos
pop
or
lock
cmp
cs
mov
cmp
ljmp
push
call
imul
cld
inc
lock
jns
inc
jns
mov
imul
aaa
pop
cmp
add
add
cmp
aaa
xchg
test
xchg
mov
cmp
jne
jbe
out
call
add
jno
aaa
iret
aaa
dec
mov
mov
das
ss
sbb
ror
gs
aas
xchg
aaa
pushf
sets
cmp
pusha
xchg
incb
outsl
push
je
jae
leave
ss
aaa
jmp
das
add
inc
aaa
into
add
mov
sbb
mov
lret
mov
mov
aaa
decl
mov
jle
divl
ss
sbb
pushw
ss
push
call
push
call
inc
cmp
idivl
divb
test
out
mov
out
lcall
pop
push
call
push
add
or
testl
mov
cmp
ds
out
sbb
mov
sbb
dec
add
hlt
call
mov
push
hlt
out
ret
mov
hlt
je
jbe
pop
call
jbe
out
mull
out
xor
decl
ljmp
add
add
or
add
testl
or
pusha
cmpsl
push
addl
cltd
popa
add
mov
idiv
repnz
mov
sub
bnd
lock
daa
std
inc
inc
cmp
cmp
mov
dec
cmc
imul
inc
add
sbb
notl
xchg
mov
out
cmp
loopne
mov
or
mov
add
add
aaa
inc
pcmpeqw
add
lock
div
sbb
aaa
push
sbb
add
push
add
jne
xor
cmpsl
mov
mov
decl
push
addb
sbb
add
in
sub
xchg
and
mov
cmp
cmp
gs
cmp
mov
mov
add
pop
xor
scas
daa
lods
dec
std
mov
cmpsb
jno
cmp
cmp
mov
mov
imul
mov
out
xor
out
cmp
push
mov
insl
es
cmp
in
cmpsl
add
xor
mov
push
mov
xchg
xor
pushf
cmp
cmp
pop
adcl
outsl
xor
jl
add
push
xor
xor
insb
or
ficomps
dec
shlb
cli
xor
fistpl
loop
ljmp
sub
sahf
lret
loopne
jno
xchg
mov
mov
jmp
or
jmp
mov
out
xchg
or
inc
cli
jnp
ss
xchg
add
xor
pop
lret
cmp
push
lret
add
decl
mov
lock
jmp
std
out
mov
jmp
idiv
dec
lock
and
lcall
lock
es
push
add
insb
ja
jmp
jne
dec
lock
mov
clc
pushl
test
outsb
lock
jbe
call
pop
mov
out
add
sub
jmp
lcall
jecxz
test
stc
idiv
out
popa
or
fs
out
iret
out
pushl
idiv
out
loop
test
xor
or
jmp
xor
js
pop
add
xor
push
imul
dec
aad
push
pop
scas
pop
dec
fbld
aaa
mov
sti
cwtl
pop
cli
inc
lock
pop
leave
fiadds
lcall
add
push
ret
sbb
scas
pop
fmuls
lods
sti
fistpll
or
inc
cmpb
mov
movsl
xorl
lods
jae
call
jmp
sub
jne
jmp
cmp
push
jmp
aaa
testl
call
xchg
cmp
aaa
add
inc
xlat
aad
inc
xor
xor
lock
test
icebp
sbb
jne
mov
pop
xlat
jae
add
sahf
aaa
mov
mov
xchg
jns
jns
out
loop
fs
jns
aaa
data16
lock
inc
jbe
jns
das
mov
inc
jno
aaa
ds
cmpsl
mov
leave
fildll
mov
fildll
call
call
leave
testl
sbb
jns
repz
mov
jb
cld
push
hlt
pushf
pop
fiadds
das
jmp
sub
sub
mov
hlt
das
jne
lret
jmp
out
sub
addr16
push
orb
call
in
lock
jmp
lods
cs
fdivr
push
add
sub
inc
add
icebp
push
add
sbb
je
inc
in
jmp
hlt
je
jbe
call
rol
add
in
lcall
hlt
ret
or
pop
cmp
xor
jns
mov
mov
pop
and
or
push
in
cli
out
push
hlt
pop
mov
add
xchg
cmp
add
fdivr
out
push
hlt
call
add
mov
jg
orl
pushl
loope
movsb
es
mov
shrl
call
sbb
xor
call
mov
call
jg
aaa
std
daa
sub
and
push
imul
les
or
push
pcmpeqb
mov
add
add
scas
sti
or
decl
mov
sti
cwtl
idiv
inc
lock
scas
sti
or
jmp
jge
push
fildll
or
mov
xor
fadds
cmp
lods
stc
cmp
sub
rorl
push
jmp
scas
out
push
mov
sub
jo
sub
stos
sbb
cmpsl
add
or
mov
push
xor
sahf
call
add
add
cltd
xor
incb
cmpb
out
bound
xor
jns
lds
sub
xchg
xor
xlat
push
add
push
mov
sbb
mov
xor
sub
or
stos
add
shll
jae
add
sub
add
lcall
ret
repz
call
shl
mov
pop
add
xlat
ret
xchg
repz
call
or
or
sti
mull
sub
inc
pop
call
sub
icebp
fistpl
add
imul
shrb
loop
sti
scas
dec
add
sbb
add
cmp
sbb
add
inc
cld
stc
cmc
je
pop
outsl
or
add
sbbl
test
aas
testl
push
repnz
mov
push
mov
push
mov
lea
push
mov
cmp
je
outsb
sti
call
jae
lock
add
int3
sub
add
jne
push
sub
mov
test
data16
push
sti
or
test
incl
add
movsb
lcall
jmp
es
inc
lock
lock
sbb
mov
mov
cmp
push
add
in
pushl
mov
int3
cmpsl
lahf
call
xor
jae
pop
testl
rcrl
lcall
sub
decl
add
push
popa
fiaddl
add
fiadds
jge
cmp
das
cmp
lcall
pushf
insl
call
test
fwait
incl
push
xchg
jno
push
jecxz
mull
pop
sbb
sub
jne
sub
lock
xchg
dec
mov
sub
cmp
sub
pop
sbb
xor
sub
jbe
xor
xor
sub
add
push
xor
cli
or
xor
jne
xor
das
pop
mov
inc
sub
dec
aas
fildll
aaa
sub
and
add
cmp
jno
pop
mov
in
cmp
mov
jecxz
sub
mov
mov
jmp
cmp
sub
jmp
enter
addr16
add
cmp
inc
jmp
sti
adc
cmp
sub
les
mov
xchg
imul
dec
movaps
jl
jmp
scas
daa
sub
xchg
jmp
repz
push
decl
mov
or
or
int
aas
addb
je
mov
or
in
add
std
or
pop
lret
call
jmp
add
inc
add
je
xor
add
push
imul
enter
mov
hlt
ljmp
cmp
add
or
push
icebp
insl
lods
call
dec
push
mov
das
sar
popf
daa
sbb
add
dec
sub
out
dec
enter
das
sar
test
sbb
test
fldt
lds
xor
mov
mov
xchg
les
or
sub
sbb
fsubrl
in
mov
mov
cmp
inc
ret
mov
and
sub
fsubs
inc
lock
add
push
imul
and
mov
imul
push
into
cmp
add
ss
sub
xchg
and
inc
and
adc
lcall
jmp
out
xchg
or
add
push
jmp
add
push
ret
add
pop
ret
add
pop
je
mov
add
mov
jg
and
fcomps
popf
push
pop
or
add
scas
xor
mov
mov
add
mov
sbb
fiadds
add
pop
test
push
imul
sub
and
sahf
mov
and
pusha
jno
testl
add
sbb
jbe
and
fdivrl
and
dec
jle
addr16
xchg
cmp
jne
fcmovnbe
movsb
es
lea
xor
aaa
shlb
incb
adc
idiv
dec
lock
icebp
sbb
push
lock
ds
addr16
add
xchg
xlat
idiv
dec
lock
lock
jmp
add
sbb
jae
pop
scas
fcomip
jle
add
in
das
popl
decl
out
cmp
jmp
and
sarl
inc
adc
idiv
cs
decl
in
push
mov
cmp
in
mov
in
incl
sub
imul
sub
lock
lock
add
add
jne
xor
das
xor
xorl
add
sbb
pop
dec
add
je
add
lock
adc
lss
jne
ja
popf
out
subb
aam
sub
sti
out
stos
sub
iret
ficompl
test
xchg
popf
mov
sub
cmpsl
inc
sti
out
mov
call
loopne
jne
aas
popf
jg
sub
add
outsl
and
pop
test
and
add
std
imul
fidivrl
fisubrs
das
and
sub
and
sbb
lods
call
jnp
and
sub
sub
sahf
outsb
aam
xchg
sub
cs
sub
and
and
cmpsb
addr16
mov
and
push
and
add
pop
cmp
lahf
das
and
and
sbbb
sub
cltd
pop
inc
or
jmp
sbb
push
sbb
call
push
xchg
sbb
xor
and
xchg
sbb
incl
add
xor
inc
call
pusha
popf
xlat
lea
fs
hlt
pop
xor
movsl
mov
and
add
add
add
jne
jmp
cld
jbe
and
setp
push
inc
cmp
in
add
rorb
ss
pushl
sti
jno
out
inc
adc
add
lcall
add
sarb
add
jnp
cmp
or
flds
test
add
add
call
out
mov
xor
sar
sti
cmc
lahf
xchg
in
jne
in
or
pushf
jmp
roll
mov
pop
fdivrp
push
sbbb
je
decb
lock
push
mov
lock
xchg
cmp
xor
jne
dec
les
and
pop
pop
dec
mov
pop
out
add
push
jp
add
jno
dec
testl
es
sub
or
cmp
jmp
sbb
jne
add
lock
add
jecxz
push
das
add
leave
add
stc
add
jne
sub
jne
test
mov
xchg
lock
jmp
add
push
sbb
add
ss
cltd
push
sbb
jle
push
ja
es
and
or
call
and
sbb
mov
fs
daa
sbb
mov
mov
outsb
add
in
loop
scas
and
adcb
dec
fs
xlat
sbb
xchg
add
sub
aam
push
mov
repz
dec
pop
adc
and
cmp
ss
mov
rcl
inc
jmp
adc
lcall
sbb
insb
mov
sbb
repz
in
popf
push
mul
rcrl
jne
lret
mov
mov
sbb
push
and
mov
add
outsl
pop
in
mov
sbb
sbb
sti
sbb
jmp
repz
call
ds
jne
out
cmp
ds
jle,pt
call
mov
out
mov
decl
jle
call
mov
jne
out
or
ds
incl
add
jle
call
ds
jne
out
lock
pushl
cld
pushf
lcall
in
call
lock
call
int
and
mov
xchg
sub
lea
sbb
lahf
mov
and
cwtl
in
jg
jg
push
lock
and
in
and
add
testl
mov
stc
and
pop
enter
add
testl
xchg
sti
sbb
mov
daa
push
inc
or
rorb
lock
jge
sub
lods
push
lods
ret
add
sbb
pop
sahf
xchg
out
cs
inc
or
call
xorl
outsb
and
add
sbb
mov
jmp
dec
jl
xchg
lods
ja
or
in
inc
mov
sbb
mov
out
cmpsl
add
jmp
push
imul
loopne
cmpsl
add
cs
lods
hlt
fisubl
add
xorl
and
add
mov
mov
add
add
mov
jmp
faddl
sbbl
icebp
or
jbe
pop
jmp
test
push
inc
push
movsb
pop
mov
cmp
filds
mov
sbb
adc
jmp
xor
push
bound
test
or
data16
lds
sbb
je
sbb
lret
jb
fdivp
mov
add
cli
inc
je
jae
mov
jmp
pushf
cmpsb
testl
xchg
push
jne
jmp
xchg
negw
in
cmpb
jle
push
popa
push
fwait
jmp
sub
jmp
test
mov
mov
jne
mov
mov
jmp
sub
leave
rorl
mov
es
lcall
jl
push
ljmp
xor
add
or
push
ret
fsts
push
lcall
jge
add
lods
lahf
mov
cmpl
jne
hlt
inc
pop
dec
decb
and
pop
jae
sldt
sarb
mov
mov
add
out
mov
pop
or
pop
mov
incl
add
call
mov
addr16
inc
call
push
xchg
mov
cmove
js
add
lock
movsl
daa
mov
adc
mov
fnstenv
dec
roll
sbb
pop
push
mov
cmpsl
mov
sti
adc
sbbb
jg
dec
insl
fwait
js
add
xor
adc
fbstp
pop
mov
adc
or
fcoml
push
subl
fwait
sub
xlat
imul
pop
fwait
sub
and
sbb
jne
and
push
jmp
xchg
dec
dec
add
repz
add
xchg
mov
push
rcr
addb
js
punpckldq
rcl
add
xor
add
xchg
and
fs
sub
pop
cmpsb
sub
jbe
push
andl
and
push
mov
addl
loopne
and
jmp
dec
adc
pop
data16
jmp
inc
adc
repnz
aam
add
mov
lcall
mov
cltd
jae
mov
mov
popf
add
ret
repnz
sub
jg
pop
scas
push
enter
push
mov
pop
sub
jbe,pn
jmp
call
push
mov
call
inc
repz
add
shlb
hlt
je
jbe,pn
call
adc
lea
jmp
cwtl
std
lock
lock
jbe,pn
jmp
or
lock
out
jne
call
aas
add
testl
add
xchg
or
dec
scas
sbb
imul
cmp
add
xor
jb
dec
nop
pxor
or
jno
sbb
repz
pop
sbb
scas
int
sbb
cmp
xchg
mov
sbb
xchg
popl
cwtl
out
lcall
add
sbb
mov
pop
cwtl
cmpsl
pop
jg
xchg
or
push
icebp
in
sbb
lcall
pop
es
negl
mov
inc
adc
nop
out
pushf
lock
adc
sbb
push
int
pop
adc
lea
pop
or
push
jne
out
adc
or
sub
hlt
add
js
sahf
sti
adc
enter
mov
sbb
js
jle
sti
adc
or
jge
sti
js
xor
push
mov
sub
mov
out
incl
jne
cs
fwait
adc
jg
call
in
cmp
repz
mov
or
mov
push
or
lea
add
mov
pop
add
jne
fcomps
mov
clc
push
je
test
cmp
hlt
pcmpeqw
repz
mov
lds
push
jns
hlt
push
mov
sbb
cs
sbb
jmp
xlat
push
je
dec
pop
add
lods
jne
faddl
es
jne
out
je
loope
xchg
jmp
fmull
add
add
mov
mov
add
add
dec
in
decl
add
inc
sub
roll
add
add
repz
push
inc
notl
jne
lcall
call
and
pushl
test
leave
jg
xor
pushl
jge
mov
lcall
cmp
es
jne
mov
jne
add
outsl
enter
rclb
call
nop
negl
jnp
inc
lock
repz
dec
jnp
aaa
add
jmp
pusha
or
out
mov
cmpb
sbb
in
inc
outsl
xchg
idivl
test
call
dec
and
jne
inc
adcl
es
mov
sub
scas
test
pop
inc
push
inc
adc
ljmp
popl
fmull
cwtl
jbe
push
jg
lods
mov
add
mov
dec
loope
push
xchg
loopne
insl
js
push
das
les
add
push
jmp
push
movsl
adc
orl
push
pop
pop
jne
jae
in
addb
sti
add
or
or
add
lods
scas
inc
add
clc
push
insb
mov
out
push
lods
jae
or
adc
or
jmp
inc
clc
push
push
fwait
add
sti
pushf
jp
jno
lahf
pop
data16
call
fs
adc
call
jo
sub
aam
ret
negl
mov
lcall
imul
fs
push
subl
jne
fneni(8087
xchg
incb
add
inc
icebp
arpl
out
mov
repnz
sbb
into
jle
cmp
or
or
mov
jns
mov
or
cli
sahf
in
jge
repz
or
push
add
cltd
push
enter
lea
pop
jne
repz
push
jge
call
or
add
add
add
movb
add
int3
dec
notl
jge
call
ret
sti
dec
or
incl
cmp
add
sbb
and
xchg
or
or
adc
dec
jmp
out
mov
sti
dec
jmp
or
cs
idiv
lock
push
scas
repnz
out
mov
ljmp
adc
add
add
movsb
adc
js
adc
lds
les
dec
mov
xchg
or
add
nop
out
jno
xorb
cmp
cmc
dec
push
test
fwait
xor
fiadds
incl
sbb
add
add
adc
jns
add
sti
pop
xchg
sub
add
pop
pop
jmp
cwtl
jmp
sbb
scas
or
call
or
pop
xchg
fcompl
mov
data16
push
adc
cli
inc
pop
orb
adc
push
push
inc
test
ds
sbb
or
adc
or
shll
add
adc
or
pop
test
xchg
jle
xchg
add
add
xchg
in
sbb
inc
push
shll
mov
aaa
insl
adc
or
cmp
or
jmp
mov
rorl
loope
xchg
sti
cmpl
jne
jnp
jbe
loopne
pop
push
adc
pop
loope
sti
inc
mov
inc
or
cmpsb
jl
push
loope
test
or
jmp
add
das
std
or
mov
adc
xchg
add
arpl
add
add
out
add
jne
pop
dec
sub
in
or
or
into
add
inc
leave
divl
lcall
xchg
idiv
push
adc
ret
testl
add
ret
testl
push
in
dec
mov
test
add
pop
test
dec
add
lea
add
pop
add
je
mov
jns
mov
sub
add
leave
jo
jmp
xchg
nop
sar
clc
mov
push
addr16
lock
movsl
jmp
and
jne
addb
sbb
mov
mov
or
add
and
add
repz
sbb
nop
push
lea
push
jg
mov
and
inc
mov
repz
pop
dec
sti
out
push
lcall
ja
inc
xor
out
ljmp
push
pop
mov
lcall
cmc
dec
lock
test
int3
fcomps
incl
outsl
fimuls
out
mov
cmp
add
sahf
lds
inc
push
mov
push
movl
cmpsb
subb
push
scas
push
xchg
pop
fs
or
lock
push
xchg
xor
jle
sbb
insb
jmp
or
addl
cmp
adc
mov
addb
or
lock
enter
xchg
hlt
xchg
add
add
push
add
imul
test
add
xchg
fdivrp
popl
scas
push
add
push
mov
mov
sub
shll
mov
in
hlt
push
mov
jle
adc
scas
in
push
add
std
in
add
repz
add
outsl
xchg
call
out
ljmp
xor
push
sarl
arpl
repz
xchg
icebp
icebp
je
lahf
enter
xchg
inc
add
enter
scas
call
dec
jne
and
decl
mov
ljmp
or
jne
and
mov
adc
jmp
adc
stc
mov
pushl
add
leave
adc
pushl
arpl
mov
mov
cmp
or
mov
adc
ljmp
adc
xchg
decl
test
push
push
pop
mov
call
insl
cs
test
inc
dec
push
sbb
in
add
movsl
movsl
or
out
jle
cmp
call
les
incl
add
cmp
sbb
or
sti
jmp
sbb
or
or
push
jg
outsl
fs
fs
in
in
sbb
adc
pop
pop
orb
aas
out
mov
add
or
inc
jmp
add
cmp
xlat
fs
incb
add
jp
mov
push
sbb
nop
imul
cmpsl
pop
xlat
add
push
bound
mov
xor
inc
scas
sti
inc
jmp
les
add
inc
sbb
sbb
add
sti
xchg
xchg
insb
or
cmp
outsl
add
add
push
shrl
jmp
sbbl
or
add
outsl
es
cltd
fildl
cli
or
push
mov
push
ljmp
pop
ljmp
icebp
or
jmp
pop
mov
jae
jmp
stc
add
xor
add
or
jmp
push
into
call
hlt
push
add
xor
icebp
push
add
in
insb
add
rep
add
cmpsl
cmc
dec
fs
testb
incl
mov
movsb
arpl
or
jge
call
push
push
xchg
push
call
imul
push
call
pusha
xor
or
leave
pushf
fdivrs
or
mov
pop
incl
jo
jmp
sub
mov
add
jne
decl
add
mov
push
ud0
sbb
mov
push
pushl
lock
cmp
push
push
or
inc
mov
sbb
aaa
xor
jmp
adc
daa
push
pop
nop
pop
sbb
inc
sbb
mov
jne
push
or
in
cmp
in
lods
mov
outsb
inc
call
xor
add
add
lock
stc
mov
lock
cmp
add
test
repz
lock
or
cwtl
lcall
out
cwtl
pushl
push
insl
jb
divl
mov
in
popa
pop
fldl
push
push
rolb
jmp
sbb
push
jmp
lds
add
das
push
jb
jne
adc
pop
mov
pop
add
jge
std
sbb
xchg
cmc
push
mov
addl
mov
push
out
fstl
xlat
pop
sbb
lds
mov
push
mov
lods
cli
outsl
jae
mov
test
push
mov
lea
cwtl
or
adc
jmp
in
mov
jmp
idiv
fcompl
xchg
xchg
idiv
addr16
add
in
mov
jmp
idiv
pushf
sub
jg
idiv
addr16
mov
mov
div
std
jl
in
xor
pop
fisubrs
jmp
in
out
mov
std
jl
cmc
mov
addr16
cmpsb
aaa
div
sahf
cmc
out
insb
in
std
and
out
lock
incl
add
add
fwait
push
loop
add
mov
jne
mov
mov
scas
addl
mov
or
or
add
inc
mov
ljmp
into
aas
add
int
sub
pushl
and
lret
addr16
or
cmpb
jmp
and
leave
mov
jne
and
dec
add
mov
out
add
jo
lea
cwtl
aaa
push
jg
mov
ja
cli
out
pop
add
cmp
inc
js
fucom
sbb
arpl
or
mov
sar
inc
push
xchg
das
sub
add
pop
xchg
mov
in
mov
test
sbb
add
add
xchg
add
xor
mov
pop
imul
pusha
mov
arpl
mov
jns
xorb
jne
lds
lea
adc
xchg
jno
jmp
sti
lea
sbb
xchg
out
jno
ja
add
outsl
jno
jmp
sti
add
pop
add
push
inc
int
sti
dec
int
add
pop
imul
lret
testb
add
add
das
inc
add
push
jmp
cld
icebp
je
push
and
mov
dec
je
imul
pop
jmp
inc
lock
popl
pop
rcrl
inc
jae
repz
cmpsb
clc
xor
sub
test
in
inc
je
repz
xor
mov
push
push
aas
sub
push
jne
add
repnz
pop
lods
push
jmp
fiadds
push
repnz
mov
call
movsl
cmp
jbe
or
xor
fcoms
test
stc
adc
mov
add
push
fdivrl
add
xor
add
repz
jmp
xor
ret
movl
push
xor
add
std
daa
pushl
adc
fadds
add
push
adc
add
add
push
aas
inc
cltd
add
push
mov
ret
mov
push
lds
lret
add
jo
sub
pop
leave
ret
cmpb
jno
andl
inc
sbb
pop
leave
lret
or
andb
je
xchg
push
or
mov
add
andl
int
shr
add
or
add
lock
push
add
scas
loop
and
sbb
mov
push
mov
inc
push
cmpsl
xor
push
mov
pop
leave
mov
add
stos
mov
jg
or
adc
add
insb
por
imul
inc
testb
mov
std
xchg
inc
inc
lock
or
sub
repnz
mov
add
inc
or
lock
filds
pop
or
clc
pop
or
insb
jmp
faddl
lock
idiv
inc
inc
jmp
ret
sub
stos
or
push
jb
jbe
in
in
jbe
mov
ret
push
jno
inc
push
push
sbb
add
lock
sub
lock
lock
adc
pushf
or
add
adc
int3
xor
jmp
loopne
idiv
cmc
cli
jae
lods
enter
jnp
fimuls
call
loop
jnp
mov
push
add
xor
cmp
jg
cmc
or
movb
es
mov
jle
add
out
movsl
add
repz
je
dec
sbb
and
push
pusha
add
dec
ret
push
outsb
push
call
inc
add
sbb
add
add
push
or
jmp
adc
dec
mov
je
mov
add
leave
test
fldenv
incl
add
repnz
pop
repz
or
test
mov
add
adc
mov
add
and
pop
or
add
inc
push
jno
mov
into
push
mov
repz
sahf
jge
push
mov
mov
scas
lret
inc
lock
add
dec
in
add
or
orl
inc
sbb
jne
lock
inc
mov
ljmp
enter
add
cld
jne
enter
lock
ret
push
inc
inc
xor
ljmp
pop
inc
inc
lock
call
lock
dec
inc
xor
ljmp
daa
inc
inc
lock
pop
pop
pop
add
mov
push
dec
inc
pop
add
lods
push
mov
add
lds
jns
fldl
or
mov
push
push
add
and
clc
or
mov
push
hlt
sbb
inc
std
repz
inc
in
xchg
add
jns
ljmp
fstl
fdivr
jge
call
cmp
push
pushf
push
xor
ljmp
outsb
sti
mov
adc
xchg
jmp
mov
sti
in
nop
dec
outsl
repz
in
insl
jno
add
fisubs
jno
fisubs
inc
fisubrs
sbb
push
insl
hlt
incb
icebp
or
push
loope
aas
test
xchg
in
pushf
sti
push
jmp
rcr
pop
mov
pusha
jmp
lcall
call
loop
jbe
ljmp
or
jecxz
or
jmp
add
repz
xchg
lock
push
rol
repz
mov
pop
jnp
addl
mov
je
dec
test
rcrb
leave
lret
adc
pushl
fisubrs
out
mov
push
pushl
fidivrs
imul
or
jno
add
add
jae
mov
add
rolb
add
jl
in
and
jle
cltd
incb
push
mov
call
inc
shlb
shrb
xor
jno
pop
add
pushl
bound
pop
add
add
popa
shrb
xor
lock
or
fistps
pop
jo
sti
or
or
sti
outsl
or
stos
scas
add
add
filds
jmp
sub
mov
fldl
add
lods
ret
stc
idiv
loop
cmp
inc
fidivrs
add
pop
cmp
out
dec
add
fisttpll
mov
imul
add
adc
divl
test
sar
push
add
fnstsw
add
xchg
add
push
jmp
outsb
out
jge
filds
add
dec
inc
add
pop
push
jmp
add
adc
stos
jmp
push
jmp
add
orl
shll
add
fstpl
push
push
fmuls
push
pop
imul
add
push
shrb
push
jmp
push
insl
callw
jge
shlb
push
add
lods
inc
mov
add
add
fucomi
mov
lock
add
repz
lods
cmp
jmp
in
push
add
outsb
dec
mov
es
call
das
out
daa
out
mov
pop
decb
out
inc
xor
jae
adc
jmp
mulb
push
cmp
sub
push
jne
dec
xor
in
fimuls
hlt
push
push
push
add
ljmp
rorl
jmp
adc
inc
sub
fdivp
xor
push
push
add
cmc
jae
sbbl
dec
inc
cwtl
or
aad
or
push
xor
inc
inc
sbb
jae
rcrl
loope
push
mov
push
add
pop
push
call
pop
mov
ja
incl
add
mov
ficomps
call
inc
cs
loope
add
pop
call
adc
mov
jae
xchg
mov
push
scas
jl
or
cmp
insb
outsl
rclb
call
inc
lret
cmp
movsl
xchg
hlt
je
push
test
sub
je
add
inc
cmp
cmp
xor
sub
sub
movsb
push
and
cwtl
push
sbb
jae
in
add
enter
lock
jbe
lock
pop
cli
inc
add
push
add
sti
push
test
in
lock
jmp
inc
lock
push
mov
add
ljmp
add
add
ret
and
icebp
push
jmp
jmp
test
sub
sub
and
test
push
in
sub
jge
jmp
outsb
add
inc
jge
jmp
loopne,pt
adc
imul
ljmp
sub
lock
jb
jo
xchg
repnz
lods
mov
int
cmpsl
jmp
add
aad
push
jb
in
jae
add
add
call
fcomp
pop
js
in
or
adc
jle
adc
jb
in
incb
mov
call
jmp
and
mov
incb
sub
jmp
add
cltd
sub
add
sub
in
mov
jecxz
out
cmp
add
scas
std
test
pcmpgtw
add
add
jo
rcr
jmp
add
repnz
lret
es
push
mov
push
add
lret
inc
add
lea
in
sub
add
pop
push
pop
push
or
sbb
call
decl
mov
leave
outsb
punpckhbw
or
adc
pop
imul
loop
push
add
add
outsb
adc
xchg
push
incl
div
mov
push
push
call
imul
or
jno
call
cmpsl
mov
filds
lea
add
test
lock
pop
xor
mov
out
aaa
add
jmp
ja
enter
lock
adc
jo
aas
pusha
mov
ss
icebp
dec
add
sbb
jnp
daa
scas
out
je
inc
ja
shrb
or
xor
incb
inc
cmp
cmp
icebp
fmul
pop
add
pop
in
add
jnp
pushf
call
test
bnd
cmp
pop
pop
ja
fldt
pop
subl
add
mov
icebp
sahf
call
jmp
inc
lock
mov
call
jmp
xor
add
jmp
push
add
dec
adc
xchg
cld
and
cld
sub
pop
cmp
jb
fistl
je
push
call
sub
adc
jno
push
out
jno
mov
arpl
int
push
and
mov
shr
shr
push
add
js
push
insb
sub
dec
add
mov
movl
scas
std
scas
fbstp
call
push
bound
je
dec
jb
xchg
cli
hlt
dec
ffreep
je
call
push
jb
test
pop
out
in
popa
mov
cld
mov
sub
push
mov
psubsb
sub
pop
xor
adc
lock
in
add
add
lret
popa
es
fprem1
jae
icebp
pushf
test
into
rorl
cltd
cmc
jae
mov
test
scas
arpl
inc
aas
inc
cltd
cmc
jae
mov
test
dec
arpl
sar
pop
ret
jle
xchg
inc
add
dec
or
clc
std
mov
std
jne
shrl
push
mov
jne
inc
call
jne
add
roll
or
test
cmc
jle
lock
std
cmpl
add
sub
cmp
lock
mov
jbe
cmp
out
add
sbb
cs
sbb
mov
idivl
js
add
les
mov
out
jg
icebp
loop
inc
pop
in
je
add
jmp
mov
cmp
jg
adc
add
icebp
dec
inc
jmp
js
jo
add
push
and
adc
sub
testl
fwait
adc
pop
sbb
pop
movups
add
das
in
mov
pop
out
cld
je
fsubrp
cmpsb
in
clc
xchg
push
push
xchg
in
hlt
xchg
push
push
xchg
cmp
add
xchg
fisubrs
jbe
sbb
push
push
data16
adc
pop
fucomp
fmull
xchg
jno
in
dec
cmp
in
movsl
jl
xor
gs
in
adc
outsb
mov
ja
jo
pop
mov
test
pop
pop
add
or
or
xor
es
aaa
call
loop
push
xor
out
imul
lret
adc
jne
add
jecxz
add
addr16
in
and
dec
into
and
call
rcrl
mov
mov
pop
call
cmpsb
dec
push
sbbb
push
call
jo
fimuls
jecxz
je
sbb
rcl
lret
inc
pop
hlt
push
add
xor
add
pop
push
xor
push
xchg
inc
hlt
push
add
push
pop
clc
jl
std
jne
ret
mov
or
dec
or
cmp
es
leave
in
jae
icebp
xchg
cmp
in
jae
jmp
in
xchg
in
jae
mov
adc
mov
in
jae
mov
call
mov
inc
lock
std
jne
mov
pushl
mov
mov
add
mov
ret
cmp
decb
mov
jmp
in
subb
lock
add
lock
neg
clc
jmp
add
divl
lock
pop
adc
scas
add
scas
inc
add
adc
shrb
leave
cs
sbb
enter
das
inc
add
in
inc
lock
pop
inc
mov
pop
add
out
cmp
add
out
mov
call
incb
fistl
mov
push
push
shll
or
dec
imul
rolb
inc
jmp
lcall
fildl
dec
and
jle
loopne
ret
arpl
adcl
sti
arpl
mov
out
cs
inc
inc
sub
loopne
cld
xchg
ret
mov
add
xchg
out
loopne
mov
lods
xor
sub
push
jmp
jmp
in
add
cmp
outsb
cli
inc
mov
adc
pop
inc
jmp
sub
fbstp
xchg
push
call
sar
inc
jmp
rep
and
jmp
push
subb
psubsb
into
loopne
insb
pop
fscale
push
enter
add
and
jecxz
je
out
ja
loopne
sub
xchg
aad
loopne
inc
in
insb
es
add
call
jo
jecxz
in
mov
push
add
call
loopne
add
add
push
add
push
push
icebp
and
xor
add
xor
out
mov
add
inc
add
cmp
or
and
add
or
dec
cld
in
lea
out
xor
fstps
add
xor
std
jne
ret
mov
mov
lods
add
mov
inc
daa
inc
xor
adc
lds
dec
or
add
bound
dec
fsubr
add
add
lock
push
lock
pop
mov
mov
add
xor
pop
fldcw
cld
sbb
addr16
add
inc
inc
lock
inc
xor
pop
add
out
cmp
call
out
jne
jecxz
mov
ficoml
lock
sbb
mov
jl
mov
shl
dec
mov
in
add
lock
sbb
in
fisubrl
push
dec
inc
lock
jmp
in
cmp
add
add
out
rclb
rcrl
je
test
cwtl
and
inc
leave
inc
jmp
inc
in
fsubrl
add
test
lock
int3
inc
xor
addl
inc
movups
fdiv
jbe
add
in
aaa
sarl
sbb
aad
clc
out
addr16
scas
shl
adc
mov
add
fdivl
jl,pn
dec
popl
push
push
adc
adc
push
call
repnz
mov
push
fldcw
mov
call
inc
cwtl
pop
ljmp
add
dec
pop
push
xchg
test
inc
jmp
xor
call
repnz
sbb
dec
arpl
sub
psubsb
push
fdivr
sarl
add
cmp
call
mov
orl
push
jbe
or
aad
inc
dec
cld
push
out
cmpsl
adcb
cmp
pop
out
mov
sbb
pushl
out
bt
in
mov
aas
sub
mov
jns
inc
add
jno
ds
leave
sbb
add
fnstcw
pop
push
icebp
loop
call
aad
push
lock
jecxz
call
cltd
ljmp
and
add
push
mov
loope
inc
sbb
pop
lds
xor
pop
or
negb
daa
or
xor
add
dec
xchg
or
cmp
lds
stc
jp
loop
xor
or
imul
sub
lock
jnp
push
daa
clc
and
out
or
call
inc
pop
push
add
jmp
mov
add
ficoml
mov
mov
jbe
push
add
fsubrl
loopne
pop
loope
fsts
push
jnp
sti
fbstp
push
icebp
jmp
pop
jbe
cmp
mov
test
cltd
push
ret
das
pop
push
loope
jge
inc
loope
inc
cmp
imul
test
dec
pop
jmp
or
loope
add
inc
clc
mov
loope
outsl
jmp
xor
inc
jmp
mov
mov
push
xchg
fsin
push
nop
fnstenv
pop
jp
push
iret
shr
xor
adc
insb
sub
int
xlat
pusha
mov
addr16
out
inc
jmp
hlt
xlat
je
or
mov
push
adc
inc
add
mov
incl
movb
es
push
fldt
dec
sub
pushf
jmp
call
lods
cmpsl
pop
add
rcrb
add
out
or
je
decl
js
je
inc
add
inc
inc
add
mov
cld
jmp
call
leave
fwait
push
add
add
add
ret
add
or
mov
sbb
fnstcw
mov
insl
add
add
add
xor
push
mov
add
or
add
jne
sti
jmp
loopne,pn
leave
mov
add
add
ret
movsb
imul
add
loopne
cmp
std
out
add
clc
and
mov
add
in
mov
imul
repz
inc
iret
push
push
or
fwait
sbb
adcb
sbb
rorb
xchg
mov
btc
jge
ljmp
fucomi
xchg
cmp
pusha
ret
add
pop
or
push
pushf
sti
xlat
push
mov
idivl
out
adc
std
lret
add
mov
call
push
call
lock
fldl
sbbl
inc
sbb
in
mov
pop
pop
aad
push
cld
aad
hlt
dec
pop
add
adc
xchg
enter
adcl
insb
mov
fists
aad
faddl
push
fldl
inc
fnstsw
aam
movntq
loope
add
clc
cs
add
repz
lea
decb
cld
pusha
incl
inc
imull
sbb
call
outsl
in
out
add
jmp
mov
push
add
inc
aam
jmp
inc
aad
jmp
out
mov
leave
push
lea
incb
inc
aad
sbb
out
add
xor
dec
data16
idiv
aam
shll
push
call
sti
aam
add
mov
add
mov
add
pop
cmpl
add
dec
pushf
icebp
push
pop
add
out
lea
pop
lea
leave
loop
dec
cltd
pop
test
sbb
mov
out
mov
dec
jle
add
add
dec
add
mov
aam
scas
std
add
loopne
push
xchg
test
sti
xchg
add
mov
or
add
xor
xchg
dec
mov
lock
cmp
popf
inc
add
call
add
gs
cmpsl
popa
sbb
pop
aam
decb
add
cwtl
aad
ja
outsb
add
fildll
fildll
arpl
repnz
mov
inc
inc
lock
jae
js
adc
cmp
mov
dec
pop
shl
pop
jl
decb
pop
push
fiadds
pop
fiaddl
fisubrs
dec
lock
push
clc
out
aad
movsb
fidivrs
fcmovbe
shll
ret
fidivrl
sbb
add
add
mov
fisubrl
sar
ljmp
aam
and
mov
mulb
xor
push
dec
hlt
shll
or
push
mov
cld
rcrl
xor
sbb
das
dec
pop
add
push
jmp
idivb
xor
dec
test
jne
mov
sbb
test
pop
daa
insb
cmpsl
faddl
add
shlb
sbb
mov
lret
mov
ss
cmp
jmp
aaa
xchg
je
lds
adc
aaa
fwait
jmp
leave
sub
ret
loope
sar
ss
cmp
bound
test
dec
sar
sbb
push
pushl
pop
add
call
movl
add
sahf
xlat
std
add
mov
mov
sahf
scas
dec
lea
push
sahf
xor
sahf
scas
std
push
int
mov
add
scas
std
lcall
inc
adc
fs
push
jmp
adc
scas
std
adc
std
in
lods
std
jmp
jmp
sahf
mov
adc
mov
push
xchg
sbb
ret
push
mov
add
mov
push
rclb
cmp
mov
push
jecxz
push
lock
or
or
mov
add
lock
gs
incb
push
repnz
cmp
out
nop
push
std
fisttps
cmpl
jae
push
cltd
sti
mov
imul
and
add
incb
add
hlt
xchg
mov
je
inc
pop
jo
jle
aad
loop
imull
aad
ret
leave
xor
add
les
je
push
xchg
int3
test
jmp
xor
inc
out
ret
icebp
sbbl
jmp
jl
lret
dec
sbb
loop
call
scas
xor
popa
fadds
into
js
sbb
unpckhps
lea
sbb
stos
inc
lock
mov
lock
push
jmp
stos
mov
jle
aad
jg
mov
mov
lock
addr16
cmp
call
mov
cmp
sub
cmp
add
add
adc
in
add
mov
jp
movsl
add
int
cltd
xchg
xor
xor
lret
inc
push
push
decl
push
insl
dec
int3
jmp
daa
mov
call
lret
or
repz
push
push
mov
inc
mov
ds
je
je
les
repz
orl
inc
add
je
les
push
mov
push
add
mov
lea
pop
push
les
push
xchg
cmp
fadds
or
sbb
pop
je
lcall
push
stc
sub
add
add
jne
mov
mov
pushf
add
leave
loop
call
push
cmp
add
cmp
call
idivb
call
ja
rorb
mov
sbb
add
add
mov
push
lock
or
inc
repnz
mov
fidivrl
xor
jp
lock
mov
and
dec
das
ljmp
out
push
jb
pop
fldl
test
add
lcall
xor
inc
sar
add
and
lock
add
lret
push
dec
int3
add
and
rolb
add
sbb
aam
je
pop
push
int3
icebp
dec
inc
addl
push
inc
xor
shl
mov
enter
lahf
push
repz
inc
mov
mov
aaa
push
mov
movsb
mov
pop
clc
fiadds
pop
cmp
cmp
push
push
sub
cmc
sti
push
inc
fucomi
ds
add
add
jp
cmp
jge
shlb
xor
jp
xor
sti
test
in
add
out
xchg
je
inc
lock
jl
scas
add
xor
add
repz
add
stc
inc
inc
jmp
sbb
orl
push
repz
mov
xor
or
xlat
mov
add
ja
call
add
repz
cli
inc
add
lock
repz
sub
leave
jmp
in
push
add
outsb
inc
cld
mov
cmp
inc
add
mov
mov
call
hlt
testl
lcall
add
jne
lods
addb
add
mov
mov
sbb
inc
lock
lea
add
xchg
inc
or
call
sarl
cmpl
mov
inc
add
out
decl
add
inc
adcl
add
lea
adc
adc
rol
jb
dec
cmp
add
add
or
xor
incl
jae
push
or
flds
out
pop
add
xchg
add
je
cmc
xchg
inc
lock
ljmp
pop
push
clc
lock
andb
std
test
mov
sar
in
sbb
shl
aaa
mov
negl
ljmp
imul
inc
inc
lock
mov
mov
xor
iret
test
jno
add
add
inc
inc
lock
mov
mov
push
stos
inc
lock
push
or
add
cmp
sub
call
ret
aaa
push
cltd
andb
into
fsubl
sub
mov
sbb
call
into
les
cmp
ds
popa
cmp
xchg
cli
into
movsb
mov
sbb
pop
push
mov
push
sti
sti
pop
bnd
add
push
sti
iret
cmp
enter
xchg
inc
xorb
fwait
pushl
push
add
sbb
call
push
push
ja
or
pop
mov
iret
shl
xlat
out
enter
or
push
imul
jmp
mov
xchg
add
jecxz
sarl
testl
mov
or
icebp
jae
inc
imul
pop
cs
iret
shl
add
sti
or
cmp
div
das
cmp
inc
fucomi
add
in
repnz
in
fnstenv
pop
add
enter
int3
test
dec
int
or
pop
mov
xor
dec
clc
jl
lea
leave
inc
hlt
cltd
or
add
adc
sub
add
add
inc
lock
push
pop
add
pop
add
sbb
sub
mov
jnp
sbb
int3
push
mov
invd
ja
aam
jne
jl,pt
addb
or
mov
jne
inc
mov
jo
add
push
cli
decl
out
daa
pop
push
out
pop
add
lock
jmp
add
mov
ss
cld
sbb
xchg
jno
mov
inc
push
lods
fisubl
fstps
adc
lret
repnz
or
push
jmp
ss
in
mov
dec
jb
mov
adc
fidivl
xor
mov
add
call
pop
ret
inc
jnp
pop
jmp
push
loopne
stc
inc
xor
cs
test
movsb
aas
lock
push
jmp
fwait
repz
iret
xor
clc
jbe
fstps
inc
sub
cmp
fcmovnb
dec
jmp
lret
push
push
mov
jmp
inc
lods
push
jmp
push
hlt
cs
inc
add
mov
xchg
push
or
push
sti
shl
xchg
lahf
ljmp
lods
push
push
iret
test
andl
ret
aam
shlb
xor
loopne
repz
or
add
test
scas
rclb
das
add
das
mov
xor
or
add
test
fadds
add
shll
call
sub
scas
xchg
cmp
pusha
das
add
cmp
xor
sti
inc
add
outsb
cmp
rclb
in
in
std
xor
inc
es
ds
int3
pop
dec
loopne
mov
add
jge
or
test
add
sbb
add
add
inc
add
aad
jne
loop
std
jle
or
mov
add
cmpl
je
int3
add
push
ds
shr
dec
leave
std
incl
jb
lret
add
pop
push
incl
out
lock
decb
sbb
jge
fcmove
lea
jge
je
test
insb
out
enter
dec
or
mov
dec
les
add
subb
inc
stc
and
call
push
call
cltd
in
addb
ds
ja
je
add
fimull
lret
je
dec
rol
je
aad
outsl
aas
add
cmp
dec
jo
jo
je
push
xchg
push
mov
mov
pop
cmpb
arpl
add
scas
subb
mov
push
xor
pop
pop
cmpsl
inc
cmp
dec
cmp
push
inc
inc
mov
inc
or
mov
adc
and
add
add
adc
add
jmp
rorb
insb
inc
fnsave
push
xor
movb
inc
lock
dec
inc
lock
bnd
add
out
fdiv
push
add
repz
and
mov
add
in
xor
adc
mov
mov
scas
xor
inc
mov
add
mov
add
jmp
repz
jae
scas
dec
mov
sbb
dec
mov
scas
mov
push
sub
out
lock
lret
pop
inc
sub
mov
lcall
sub
scas
pushf
add
ret
std
mov
fdivp
jmp
mov
add
lock
jne
xchg
cmp
std
xor
ret
jg
jne
std
pushl
add
mov
lret
xor
add
xor
std
push
mov
mul
sar
add
xor
std
call
dec
or
push
std
lcall
test
div
sar
aam
mov
jle
std
call
push
ljmp
sar
lock
call
jge
mov
jge
sbb
lcall
gs
decb
xchg
dec
cld
sbb
inc
add
jbe
pop
lock
jae
imul
add
fimull
inc
pop
les
xor
incl
fisubl
and
inc
push
insb
lahf
in
shr
sub
sti
push
jne
add
jg
je
adc
js
sub
jne
pop
sub
stc
pop
in
mov
imul
mov
add
scas
faddl
loop
mov
cmpsb
ret
add
cmpsl
cs
jp
inc
jmp
stos
rclb
ret
out
out
jo
call
testl
add
and
inc
jge
mov
sub
lock
jb
jb
adc
inc
adc
push
jmp
add
push
add
or
adc
cmp
push
add
rep
pusha
push
push
add
je
pushl
mov
addr16
xor
or
lods
inc
sbb
cmp
jle
push
inc
jno
jo
jmp
xchg
andb
adc
mov
or
jl
clc
pusha
dec
mov
clc
jb
mov
rorl
add
popl
push
cld
add
stc
or
fwait
mov
xorb
in
sub
add
jmp
mov
pop
leave
mov
add
jbe
les
mov
fadds
cmp
incl
adc
xor
jmp
clc
lea
dec
call
dec
lock
mov
pushl
jae
xor
incl
add
or
cmovne
jae
fsubrp
idiv
fs
stc
fs
std
mov
inc
lock
add
ja
pop
jmp
mov
mov
mov
stos
jae
repz
and
js
mov
or
mov
lods
push
lcall
push
mov
addr16
xchg
mov
std
incl
add
inc
jns
mov
cmc
stc
sub
sub
add
ss
pop
ss
fimull
call
sbb
out
cmpsl
jp
and
pop
rorb
push
sarb
lods
testl
jae
dec
add
mov
inc
mov
add
cmc
aaa
mov
add
add
mov
mov
push
mov
shrb
clc
add
inc
in
aas
push
cmp
scas
jge
hlt
test
mov
in
mov
cmp
mov
call
sahf
pop
xor
jg
lock
add
repz
leave
sub
push
push
jb
mov
sbb
repnz
add
repz
testb
mov
push
andnps
mov
cmp
fimuls
sbb
or
push
mov
sub
repz
xorl
jne
push
cmp
cmpsb
enter
int
pusha
test
adc
and
adc
addl
data16
mov
jmp
xor
add
shlb
inc
sub
add
addl
out
adc
add
jne
call
loopne
decl
out
pop
in
sbb
data16
pop
call
inc
std
adc
imul
out
dec
or
xorl
adc
pop
call
orb
fmull
push
repz
ja
std
jmp
dec
hlt
or
add
fcompl
pushl
fiadds
push
lock
mov
add
push
sub
lock
jg
in
mov
adc
in
or
sbb
sub
ficompl
mov
add
sysret
je
push
or
lds
mov
add
and
pop
sbb
add
lock
jg
hlt
mov
sbb
jecxz
push
popf
add
shrb
add
lea
lods
arpl
and
call
lock
psubsw
cmc
les
out
lock
inc
ss
and
sub
subl
fadds
add
ss
enter
sbb
loop
ljmp
jg
add
call
xor
roll
add
andl
jb
popf
or
and
xchg
scas
test
add
add
cmp
addl
adc
cmc
mov
pop
jnp
clc
inc
lds
clc
push
fwait
and
ss
add
repz
pop
push
add
add
add
rcrl
push
inc
out
push
aas
pushl
inc
std
outsb
and
fsubl
hlt
out
mov
pusha
mov
push
add
je
push
clc
mov
shlb
push
dec
cmp
sahf
shrb
mov
scas
out
jne
pushl
or
add
pusha
add
add
push
add
dec
out
pop
add
push
pop
leave
ljmp
insb
std
adc
cmpl
push
std
out
jo
std
pop
and
add
test
mov
addb
verr
outsb
cs
sbb
pop
mov
pushl
jle
sbb
add
push
sbb
popf
or
add
mov
add
lcall
sub
sahf
add
jnp
push
lock
add
lock
or
fimull
sub
mov
stos
call
loope
or
jo
leave
mov
add
clc
adc
mov
add
push
aas
in
mov
shrb
das
pop
aas
in
add
lahf
mov
jl
sahf
cs
mov
or
pop
pop
pop
cmp
stos
pop
lock
test
dec
addl
or
push
pop
test
dec
add
enter
push
mov
add
push
fs
cs
sahf
movsl
mov
sub
stos
out
loop
jecxz
push
add
pop
sahf
dec
sub
rol
dec
and
sti
push
adc
scas
and
das
cmp
andb
lods
pop
cmp
out
jb
hlt
jmp
cmp
sub
clc
push
addl
jae
test
inc
fnstcw
in
hlt
addl
daa
push
and
add
loope
ljmp
cmpsl
call
push
lea
jmp
push
fwait
lods
repnz
or
or
jl
repz
push
cmpsb
lcall
je
pop
add
add
jne
jne
bound
incb
std
jne
hlt
addr16
jne
shlb
mov
and
dec
insl
mov
leave
fldl
add
add
pop
je
addl
leave
je
cld
xor
pushl
xor
add
or
insb
sub
int
push
adcl
xorl
add
pop
leave
sbb
movsb
sbb
shl
inc
adc
cmp
gs
pop
jp
lock
jae
or
sbb
mov
sub
pminsw
call
add
clc
cld
mov
decl
adc
jge
stos
dec
push
xchg
mov
sub
test
or
into
and
iret
xor
or
cmc
mov
mov
je
inc
lods
pusha
lahf
inc
mov
cld
in
or
sub
adc
cmpsb
add
aaa
cld
std
mov
jae
fadd
pop
sub
lldt
push
lods
cmp
add
fildll
add
int
movsb
cld
lds
cld
stos
xor
xchg
push
jle
int3
xchg
push
jmp
sbb
stos
pop
ds
lea
xlat
xor
stos
jge
jbe
jp
jne
repz
clc
xor
fisubrl
filds
aam
lahf
xor
mov
xchg
lret
jmp
add
add
call
test
jg
scas
push
inc
add
stos
jnp
sahf
daa
popl
je
mov
inc
popf
incb
cmp
stos
je
imul
mov
orb
lcall
rep
je
mov
xchg
mov
enter
xor
jle
adc
cld
xchg
or
lods
pop
add
scas
push
out
xor
inc
sub
incl
push
xor
sub
mov
inc
xor
sub
je
jnp
incb
out
jne
rcrb
add
pushl
mov
dec
jne
shr
rclb
cmp
or
cmpl
jne
bnd
and
push
add
push
add
add
repz
add
out
or
std
push
je
adc
out
pop
call
inc
inc
adc
rolb
jne
ds
repz
add
pop
leave
fistl
add
jmp
add
mov
aas
in
push
je
adc
adc
or
mov
adc
movb
divl
sub
aaa
adc
pop
cmp
add
or
add
mov
jg
or
call
adc
add
lock
inc
rcrb
inc
in
sbb
fwait
jbe
xchg
fisubrl
mov
jecxz
mov
sbb
add
daa
push
in
pop
lcall
pop
mov
in
pop
pushf
pop
outsl
xor
fwait
nop
mov
mov
add
jnp
dec
xor
fwait
in
divb
xor
jmp
shll
push
insl
inc
mov
ret
lods
push
test
inc
and
or
aam
xor
test
aaa
pop
test
fcom
xor
ss
cmpsl
sbb
xor
mov
in
fldt
sahf
cmpsl
dec
ss
sahf
sub
add
cmpsl
addb
push
add
and
mov
mov
out
stos
mov
jl
lahf
cmp
repz
or
push
add
sub
push
call
rcrb
test
fnstenv
push
shr
lock
call
cmpsb
mov
xor
cwtl
lods
shr
sbb
xchg
psubsb
add
leave
cmpsb
loop
sbb
jmp
rep
je
jnp
xor
repz
add
jne
and
add
dec
inc
add
loopne
call
push
lret
out
or
pop
add
inc
mov
pushl
adcb
mov
and
add
out
rorb
add
aas
mov
mov
repnz
cs
inc
sbb
pushl
addl
add
add
and
mov
mov
cmp
mov
dec
inc
inc
lock
cmp
cwtl
iret
hlt
incl
jl
leave
mov
add
jo
sti
jae
das
out
or
fwait
cmpb
and
jg
imul
je
add
das
out
pop
movsl
mov
push
shr
cmpl
inc
lret
lods
roll
add
scas
ret
inc
or
das
or
call
flds
add
add
inc
stos
ret
inc
les
adc
sub
push
jmp
jecxz
dec
push
add
push
jmp
push
xchg
cltd
test
stos
ja
call
add
add
and
add
push
sbb
int3
push
adc
jo
enter
jne
adc
fsts
jae
icebp
mov
inc
jo
call
inc
jo
call
mov
imul
js
setb
addr16
ss
int3
in
add
sbb
lods
pop
testb
jnp
add
sub
cs
inc
imul
incb
inc
pop
xor
scas
andb
sti
call
inc
add
push
or
psubsw
bound
repz
and
gs
adc
add
lret
hlt
adc
pop
xor
dec
insb
add
xor
gs
mov
mov
inc
jno
lea
cmp
xor
fmuls
call
cld
inc
fcoml
dec
loopne
or
in
push
cwtl
mov
jne
jle
clc
insl
std
jne
sbb
fisttpl
add
sbb
inc
int3
jmp
add
push
add
add
aam
dec
jmp
daa
inc
or
addb
add
mov
cmp
scas
add
mov
lcall
mov
xor
xchg
ret
scas
std
add
jae
cmpsb
out
sub
jl
scas
stc
subl
add
sahf
jmp
xor
add
dec
scas
test
pusha
aas
mov
cs
das
sbb
fists
repz
add
inc
idiv
pop
lcall
dec
mov
add
jge
fwait
sub
mov
sbb
inc
lock
sbb
iret
mov
sub
sbb
add
hlt
or
aas
lods
inc
lock
mov
xchg
mov
test
add
xchg
xor
mov
cwtl
movsl
mov
mov
imul
jmp
pop
pushf
lahf
std
test
mov
jae
btc
push
mov
shrl
lahf
lds
adc
cmp
cmpsl
mov
cltd
mov
lock
lds
jmp
add
jg
cmp
or
insb
add
add
push
dec
hlt
mov
push
dec
cld
mov
jecxz
and
dec
mov
movsb
lahf
jmp
push
xchg
add
push
push
xchg
out
cmp
adc
fs
lcall
mov
dec
push
in
lahf
je
imul
add
or
test
add
add
cmpsb
fdiv
push
adcl
fstps
inc
hlt
fstps
inc
clc
fstps
inc
cld
or
add
pushf
cli
out
aas
data16
xorl
lcall
xchg
lea
and
pop
inc
clc
mov
inc
cld
cltd
add
jl
out
out
gs
xorl
xchg
pop
add
add
gs
or
fs
or
pushl
pop
add
lock
inc
add
int
fisubrl
mov
fwait
add
scas
add
lock
sub
ret
mov
jae
xor
ret
dec
out
add
and
sbb
pop
out
add
sbb
xor
or
rorb
jb
jmp
jmp
incb
add
cmpsl
lcall
sub
mov
xchg
dec
aas
cwtl
ret
rolb
mov
push
insl
push
sub
cmpsl
scas
aad
setge
ret
jl
mov
aas
add
jmp
cwtl
aaa
pushf
xor
xlat
loop
movsl
adc
cwtl
adc
fdivrs
stos
cld
mov
sarb
and
sub
add
pop
adc
jae
out
cmc
pop
call
stos
lock
fdivs
into
sub
outsl
imul
aaa
es
call
pushf
imul
sbb
ret
shl
mov
fwait
je
imul
call
icebp
adc
push
stos
cmp
lock
je
add
stos
dec
sahf
push
psubsb
mov
push
push
stos
push
lods
lock
pop
fisubrs
call
push
sbb
jmp
stos
lds
jmp
xchg
adc
adc
xchg
pop
pushf
inc
mov
adc
add
mov
inc
in
aaa
pushl
jg
pop
push
addr16
add
stc
std
add
je
lods
mov
lea
dec
push
gs
mov
pop
decl
data16
jno
push
ljmp
testb
or
sbbl
leave
lret
or
mov
or
in
push
mov
std
jne
outsb
dec
pop
cs
add
dec
gs
out
incl
call
add
lock
lock
jmp
in
mov
jb
pop
cmp
dec
lahf
mov
or
xor
jge
mov
std
out
or
je
ja
push
iret
js
shl
aaa
mov
mov
or
pop
and
scas
xchg
ret
adc
adc
int3
pusha
xchg
and
push
xchg
add
xchg
stos
in
fsubs
sub
idiv
mov
push
jmp
inc
mov
push
sbb
sub
mov
es
cmc
sub
push
pusha
iret
sub
cltd
push
adc
scas
outsl
mov
lock
jle
mov
sub
adc
sub
fadds
jmp
lret
add
xor
mov
cmpsl
adc
stos
or
jmp
inc
xor
push
pop
in
sub
mov
outsl
cwtl
cmp
inc
rcrb
leave
stos
mov
lcall
push
call
and
add
pushf
jl
andb
cltd
je
dec
dec
pop
out
popl
and
je
dec
dec
inc
add
nop
cwtl
je
nop
adc
sar
ljmp
push
mov
push
fwait
imul
in
sbb
push
cwtl
mov
pop
jo
xor
push
jmp
sbb
cwtl
aam
cwtl
je
dec
aas
pop
dec
push
into
roll
add
mov
ret
add
push
icebp
pop
call
rolb
arpl
inc
add
lock
call
add
addl
lcall
inc
add
mov
call
or
mov
data16
add
or
mov
fnstenv
clc
lock
call
icebp
cmpb
jbe
addr16
lret
lcall
je
es
jne
aaa
lods
dec
adc
lahf
in
lahf
je
aaa
popa
pop
add
pop
shr
aaa
mov
sti
ficompl
or
rcll
jns
sahf
addr16
insb
inc
add
adc
call
rdpmc
mov
mov
lods
add
mov
add
es
pop
or
cmp
iret
push
dec
cld
pop
inc
inc
inc
lock
or
push
pushf
scas
mov
cld
cmpsl
lcall
add
test
pop
jb
jb
pop
sub
and
lahf
cld
incb
xchg
inc
mov
jmp
popf
dec
xchg
and
sbb
sahf
ret
xchg
pop
shl
pushf
mov
mov
mov
sbb
sbb
stos
cmp
dec
dec
sub
sbb
stos
mov
sbb
fwait
aas
xchg
lods
lret
add
mov
jmp
pop
in
sahf
push
cmp
and
adc
mov
add
jne
dec
outsb
out
dec
data16
out
inc
xchg
incb
xor
dec
cmp
or
push
sub
sub
cs
out
or
aam
fiadds
jae
jl
pop
lret
movsl
mov
push
add
jae
add
mov
xchg
or
mov
xor
sahf
test
insb
sbb
out
pop
xchg
xchg
fimuls
or
and
fldl
pushl
pusha
jae
push
jae
shlb
dec
incl
insb
pop
jae
call
push
std
imul
ror
decl
add
jb
aaa
pop
test
jae
add
enter
push
mov
push
pop
lcall
add
je
fsubrp
inc
sbb
push
call
stc
insl
jae
jmp
xchg
aam
pop
arpl
js
enter
push
jnp
xchg
cwtl
stc
sub
je
xchg
inc
jl
fnstenv
enter
das
mov
inc
inc
lock
flds
add
xor
pop
jmp
aas
xchg
ret
daa
inc
clc
das
jnp
imul
sub
clc
lcall
pushl
out
gs
imul
cltd
gs
pop
cltd
sti
add
inc
push
cmpsb
lcall
xchg
adc
add
push
fwait
sahf
xor
fwait
test
mov
or
xchg
jp
mov
ficoml
test
add
xchg
icebp
ret
ret
in
stos
mov
jl
scas
push
jmp
add
pop
sbb
stos
nop
adc
cltd
jae
sbb
add
test
lds
out
sbb
test
idiv
out
add
add
fidivrs
push
test
les
sbb
mov
incl
in
sbb
rcrl
je
lds
push
fwait
ljmp
jns
clc
push
and
pushl
jnp
cld
testl
push
fldl
call
je
add
lcall
add
xchg
cld
popf
loope
jmp
jnp
jmp
bound
imul
xor
jae
push
test
pop
cld
jp
stos
stc
insl
std
mov
bound
rorb
jmp
push
outsl
xchg
outsl
jae
mov
push
pushl
add
incl
add
std
or
add
push
add
call
testb
lcall
pop
push
push
ja
jne
pop
xchg
pop
push
ja
jne
stc
dec
lock
mov
lret
incb
xchg
je
enter
pop
int3
shr
das
mov
insl
adc
cmp
jmp
testl
call
add
and
xchg
and
inc
mov
lock
adc
add
cmp
or
sbb
push
cmp
push
dec
aad
je
inc
jle
aas
in
sarb
push
sbb
sub
pusha
add
lahf
movsl
mov
lock
cmp
push
aad
stc
cs
xchg
test
lock
mov
add
pop
lret
lods
adc
sahf
aam
mov
outsl
inc
lods
and
xchg
sbb
adcb
lea
or
and
xchg
add
push
aaa
ja
pop
xchg
in
push
adc
sahf
cmpsb
xor
das
shl
xchg
mov
mov
xchg
add
pop
loopne
mov
mov
xchg
scas
push
jmp
inc
mov
add
ret
lea
add
jl
pop
movsl
nop
test
push
bound
pop
push
adc
shll
ljmp
mov
pop
xchg
jge
and
jge
adc
jb
outsb
lea
adc
push
aaa
cmp
push
cmp
add
push
sub
xor
ss
out
jl
testl
call
dec
add
sub
mov
fisubrs
sti
pop
mov
data16
bound
mov
idiv
add
out
add
call
push
icebp
out
std
cld
lret
ljmp
std
repnz
mov
jne
jae
cld
cld
pop
call
scas
rol
add
pop
fmull
push
xor
push
scas
cld
pop
call
ror
sti
mov
inc
dec
xchg
lock
inc
add
add
pop
rolb
jmp
push
and
mov
lahf
mov
inc
lock
sti
out
inc
xchg
inc
lret
mov
cmp
xchg
mov
ret
imul
add
add
aaa
sbb
lock
addr16
inc
add
pop
dec
inc
lock
or
mov
push
enter
lock
fstps
pop
add
popf
jbe
imul
test
test
pop
aam
fdivl
mov
jl
xchg
addb
jnp
inc
lock
xchg
pop
dec
loopne
add
add
out
xchg
jg
xchg
jl
lds
pop
jno
inc
lock
dec
dec
xor
cmpsb
fmuls
daa
add
add
xchg
sahf
jg
pushf
jb
jge
add
push
addb
inc
jae
jge
cld
lret
lock
sahf
xchg
fdivr
inc
aaa
ret
xchg
fcoml
xchg
xor
fcoms
lahf
mov
xchg
push
push
add
orb
out
lds
out
daa
mov
fdivrp
xchg
out
daa
mov
into
call
mov
pop
mov
scas
fisttps
out
cmp
add
xor
pushf
subb
mov
jbe
outsb
popa
jg
gs
pop
push
or
jmp
add
xchg
fdivr
incl
jb
pop
insb
add
jbe
rorb
out
mov
or
jne
insb
out
jns
ja
sbb
jl
std
jne
imul
int
push
mov
call
jae
mov
push
incl
mov
cmpb
out
aas
push
out
push
daa
add
cltd
add
sarb
call
jb
test
inc
push
addr16
bound
mov
sbb
aas
inc
dec
push
aaa
fmuls
daa
call
adc
incb
mov
add
insb
ss
flds
gs
mov
cmp
add
add
push
inc
xor
call
jmp
pop
and
mov
pop
cli
mov
lock
popf
mov
lock
mov
out
fadds
dec
dec
cmp
dec
inc
xchg
push
mov
mov
mov
adc
sbb
out
lock
mov
mov
mov
call
std
add
lods
call
fwait
sar
fisttpll
lock
inc
xor
push
daa
das
inc
lock
rcrb
pop
jmp
inc
xor
cmp
incl
pushl
test
cli
pop
push
sbb
pop
push
push
shr
fisttpl
je
jbe
fcoms
call
loop
add
stc
xor
addl
adc
aaa
mov
call
insb
and
je
test
sti
pop
rcrl
xlat
push
lret
out
cmp
jne
shr
inc
hlt
lock
cmpsb
decl
call
pusha
das
subl
push
push
add
or
add
mov
or
add
inc
push
xchg
and
mov
pushl
mov
or
test
jne
mov
dec
push
orl
add
sbb
call
loope
push
xchg
jae
icebp
jns
dec
xchg
jae
mov
cmp
call
std
ljmp
iret
jne
lahf
sub
dec
xchg
xchg
add
add
lock
sub
sbb
inc
inc
lock
or
hlt
adc
out
mov
pop
add
lds
add
aam
mov
xor
popf
jns
je
adc
mov
push
or
cld
cmp
incl
idiv
gs
mov
sub
add
xlat
jecxz
out
or
sti
scas
adc
mov
inc
lock
or
lock
jnp
test
adc
sbb
addl
inc
sti
out
push
xor
cmp
mov
pusha
mov
cmp
push
out
out
pop
rorl
outsb
xor
aas
cmpb
pop
sub
xchg
cld
lock
pop
rcll
add
add
cld
lock
adc
outsb
sbb
movb
xchg
jle
test
add
add
mov
cli
cmp
xor
dec
inc
movsl
repz
add
mov
imul
repz
add
dec
je
jg
adc
out
xchg
das
mov
call
movsl
xor
pop
shll
add
jmp
add
outsl
xorl
dec
fisttpl
add
lcall
push
pop
add
decb
flds
add
jle
jl
cmpl
push
pushl
mov
jmp
dec
inc
repnz
mov
add
xchg
decl
incl
dec
sbb
push
and
push
add
mov
jne
and
push
pushf
lret
add
sarb
push
pushl
and
push
xor
jae
push
and
call
adc
testb
call
into
aas
clc
add
add
adcl
daa
mov
mov
clc
call
fs
sbb
call
insl
sub
mov
stos
ljmp
sar
cmp
in
shrl
or
xchg
nop
dec
outsl
clc
jns
pop
push
xor
in
xor
idivl
inc
orb
or
out
popf
xchg
jnp
mov
sub
inc
hlt
xchg
subb
push
jae
enter
add
test
leave
xor
lea
add
pop
lcall
inc
in
jg
or
add
int3
add
push
jmp
add
jge
mov
loopne
xchg
inc
in
xor
jmp
xchg
adc
call
xchg
jl
in
adc
xchg
mov
inc
les
dec
jge
outsb
inc
adc
mov
xchg
mov
lock
jnp
push
jle
inc
or
fwait
xchg
prefetch
pop
jle
cmpb
jae
call
jae
jge
gs
jle
jmp
ret
jmp
jne
cwtl
push
ljmp
lock
add
jp
sub
lock
imul
das
xchg
insl
std
jmp
insb
dec
or
add
xchg
or
sub
loopne
pop
pusha
or
aam
mov
ret
repz
add
dec
ret
hlt
lock
repz
jge
iret
sbb
incl
dec
jb
pop
psubusb
gs
jne
test
into
or
jmp
std
jne
mov
std
jne
fwait
xchg
and
fwait
js
dec
cmp
add
sbbl
push
inc
stc
xor
nop
add
std
pop
mov
mov
lret
push
push
inc
jmp
out
pop
cmp
test
std
fiadds
push
dec
jge
je
cmp
lock
add
xchg
jo
xor
lcall
lcall
xor
incb
add
rolb
xchg
add
dec
jg
movsb
sbb
add
and
je
xchg
xlat
dec
pushf
jns
test
lds
add
mov
push
push
fcomps
jne
outsb
add
xor
jmp
push
stos
inc
mov
sub
aad
add
jmp
mov
aad
push
daa
xor
mov
lock
jmp
cmp
add
mov
mov
or
xchg
leave
std
sub
sub
jp
and
and
inc
stos
lret
jp
or
add
inc
repz
adc
fwait
mov
sub
cmp
sti
outsb
movsb
and
push
loop
out
mov
leave
pop
pop
jmp
je
add
add
push
roll
fiaddl
ret
add
add
pop
aam
test
jnp
jp
sbbb
dec
int3
push
add
mov
add
test
add
or
test
jns
fstps
push
jb
mov
addl
push
fidivs
test
cmp
shr
inc
add
sbb
mov
sbb
cmpsb
mov
pusha
push
add
call
inc
rolb
mov
jle
js
hlt
out
in
mov
push
dec
jns
mov
pushl
test
jne
in
rclb
test
call
dec
push
idivb
std
jne
in
mov
movb
mov
int
push
fsts
outsb
xchg
push
roll
jmp
adc
dec
jg
push
popa
jb
jmp
and
xchg
adc
pop
insb
pop
inc
sbb
pushl
outsl
or
and
jg
div
rolb
inc
mov
jg
adc
cmp
rcrl
testb
test
pop
xchg
add
outsb
mov
jbe
xlat
xor
pusha
push
inc
pop
jg
mov
incl
es
mov
jmp
ret
test
sbb
loopnew
outsl
mov
add
cmp
addr16
jg
call
call
pop
addb
or
lahf
xorb
shll
mov
js
ja
testb
imull
lret
sub
addb
lock
adc
js
jbe
imul
pop
jno
fidivs
mov
jle
jg
cld
lock
mov
jbe
xchg
jbe
jg
pop
mov
sahf
pop
xor
xchg
jbe
mov
clc
sub
jle
pop
push
aad
test
mov
incl
add
cmp
outsb
iret
mov
aam
jne
loope
dec
cld
dec
scas
je
push
lahf
je
push
ffreep
ss
lret
stos
jb
es
sti
adc
add
movsb
inc
or
enter
cmp
movsb
pop
addr16
scas
incl
inc
sti
or
push
ljmp
pop
mov
insb
repnz
add
hlt
push
add
out
dec
inc
mov
or
adc
in
cmp
push
dec
decb
adc
add
int
push
xchg
inc
in
popa
out
inc
mov
pushl
loope
dec
scas
hlt
or
gs
out
mov
loope
imul
loope
dec
fdivp
std
dec
add
mov
sub
call
movb
fs
add
add
dec
std
jne
loopne
dec
mov
arpl
enter
std
pop
inc
add
push
call
loope
inc
inc
lock
ljmp
jne
fstpl
sbb
in
pop
pop
pop
jge
aas
push
add
lock
lds
jmp
int
je
xor
lret
decb
daa
inc
add
mov
jmp
add
pusha
push
lahf
xchg
push
add
lret
test
jae
add
xor
mov
cmp
add
jmp
jg
out
add
call
pop
add
xor
jmp
add
xchg
push
adc
mov
lock
push
sub
add
add
lock
jmp
add
add
push
push
ret
das
jae
xchg
xor
sub
push
jmp
add
fiadds
add
sbb
sub
pop
pusha
filds
gs
push
jmp
cmc
mov
enter
fdivp
hlt
pop
push
add
jmp
xor
push
incl
repz
add
ljmp
add
add
inc
sub
jno
xchg
adc
inc
push
insb
shlb
outsb
icebp
pop
jmp
repz
fdivrp
pop
pop
mov
mov
cli
out
ss
out
ss
xchg
dec
leave
inc
jmp
pop
or
push
insb
mov
jno
lods
pop
ret
dec
ret
int
push
fsubp
add
sub
std
mov
add
add
cltd
decl
push
std
jne
in
jae
push
push
shrb
enter
fnsave
inc
jns
push
pop
add
pushl
in
adc
aaa
dec
decb
cltd
popa
push
lcall
std
mov
inc
mov
arpl
imul
sar
adc
add
jb
popa
add
jae
icebp
xor
add
imul
je
ja
decl
pop
in
std
lcall
std
jne
out
jae
lock
int
cmpsl
inc
js
mov
mov
je
mov
add
lock
jmp
jnp
sub
pusha
xchg
dec
pop
mov
jae
outsb
push
ljmp
sarl
lock
mull
jnp
das
mov
ja
add
adc
out
pop
sbb
sar
sbb
push
imul
ret
int3
adc
jne
jbe
fcomip
push
lcall
add
or
out
push
insb
test
push
jmp
add
push
cmpsb
mov
lock
in
fucomp
in
xchg
imul
popf
shrl
nop
js
jb
cli
push
jmp
push
add
add
rol
jo
pop
dec
imulb
je
push
jo
outsl
cwtl
aad
out
js
jge
push
outsb
sub
js
push
xchg
push
ss
dec
adc
xlat
or
call
cmc
aas
jg
stc
dec
insl
push
in
es
std
pushf
dec
jne
into
daa
xor
outsb
out
mov
add
imulb
or
mov
sahf
fildll
inc
pop
inc
jmp
jle
adc
fsubp
scas
sub
std
xchg
enter
lahf
xor
outsb
out
sub
jo
push
ss
inc
mov
inc
jmp
insl
fdivrl
sub
add
cmc
xchg
pop
mov
testl
add
hlt
jae
pop
mov
loope
inc
scas
hlt
std
mov
fdivr
decl
push
call
dec
mov
testl
xlat
inc
jle
std
mov
fdivr
ljmp
push
call
mov
hlt
std
jne
loope
inc
into
hlt
std
mov
fdivr
ljmp
lods
std
dec
mov
idivl
loope
incb
add
hlt
std
mov
push
add
jne
loopne
je
fdivrs
scas
jmp
pop
je
pop
sbb
imul
push
imul
cmp
push
hlt
inc
xchg
je
mov
mov
negl
jne
pop
jge
sti
dec
les
add
mov
pop
lock
imul
add
aam
mov
sahf
add
test
pop
push
xor
jne
call
insb
sbb
into
push
imul
and
add
ljmp
out
repz
pop
adc
adc
add
ljmp
pop
lock
jl
icebp
shrb
mov
push
push
out
imul
add
pop
cmp
jne
ljmp
jo
push
insb
mov
cmp
out
imul
mov
pop
xchg
je
incb
mov
inc
je
cli
cmp
lea
insb
cs
ja
pushf
imul
imul
aas
shr
rorl
xchg
cmp
or
fwait
mov
je
add
sarl
jnp
mov
sub
dec
mov
std
mov
call
les
inc
jge
repnz
xchg
hlt
das
ret
push
mov
cli
imul
mov
repz
mov
cwtl
sbb
add
dec
push
call
add
in
jae
jno
dec
inc
add
leave
dec
out
roll
add
aas
in
push
mov
inc
mov
add
cmp
call
push
mov
and
dec
inc
mov
cld
push
mov
fisubrl
lods
aas
add
lret
xchg
sbb
or
dec
add
cmp
adc
inc
fcom
loop,pt
sbb
push
shl
fistl
push
pop
incb
add
sub
movsl
mov
adc
enter
push
pop
add
iret
jmp
out
mov
jb
enter
scas
push
add
pushf
incl
pop
sbb
inc
jo
mov
sbb
sbb
jmp
inc
fisttpll
mov
ret
call
pop
add
xchg
push
or
pop
sar
add
mov
lock
cltd
and
cmp
sub
daa
shll
jb
push
ficoms
fisubs
in
mov
cmp
or
xchg
addr16
div
pop
jno
orb
icebp
lock
pusha
addr16
jo
pop
jmp
mov
cs
call
or
jo
imul
out
pop
movb
jle
lahf
inc
repz
adc
pop
test
mov
cmp
cli
div
pop
sub
lock
repnz
out
cmp
cmpsb
outsl
call
cmpsl
push
inc
repz
shl
jns
xor
js
cltd
pusha
fcomi
fisubs
idiv
push
add
xor
add
je
add
stos
push
daa
test
gs
add
sbb
dec
out
pop
mov
pcmpgtw
xor
dec
into
pop
popl
lcall
movsl
test
fs
mov
mov
jecxz
push
in
cmc
decl
insl
inc
mov
cmc
std
push
inc
popa
dec
dec
or
mov
incl
add
pusha
push
call
pusha
nop
out
cmc
mov
imul
mov
lcall
dec
std
jmp
loop
mov
pop
inc
inc
cltd
hlt
mov
inc
hlt
std
pushl
std
mov
jmp
mov
lock
fiaddl
aas
outsl
mulb
sbb
das
hlt
add
leave
aaa
add
jne
aas
paddq
add
lcall
insl
out
fistpl
out
outsb
je
testb
fdivr
insl
inc
jecxz
call
mov
dec
imulb
inc
insb
lahf
mov
insl
decb
dec
insb
je
xor
insb
je
mov
xlat
pop
pop
cmpsb
insl
add
pop
pop
loope
xchg
insl
dec
lcall
mov
jge
jl
jge
outsl
adc
es
pop
pop
insl
psrld
pop
arpl
mov
cmp
jne
arpl
xor
movsb
adc
outsb
ror
or
insl
mov
outsb
jle
lock
and
push
cmp
mov
or
inc
mov
insb
push
push
add
iret
inc
jmp
xor
xchg
fs
xchg
inc
or
mov
call
repnz
add
gs
jbe
fs
xchg
fiaddl
push
inc
and
pop
fiaddl
jmp
scas
pop
imul
sti
push
negb
movsb
push
ljmp
fwait
incl
add
dec
lret
push
fildl
adc
mulb
popa
mov
push
add
outsb
subb
lret
sti
add
in
jae
ss
push
call
push
or
add
push
add
or
std
pop
dec
push
push
jecxz
push
repz
test
in
jae
cmpsb
push
cli
call
add
xchg
incl
jb
mov
cmp
pushl
mov
dec
mov
loopne
hlt
fsubrp
std
push
pop
mov
xchg
icebp
cmc
inc
call
popf
aas
add
cmp
incb
mov
jno
lds
push
push
mov
imul
aas
mov
inc
fsubrs
lcall
jmp
jno
pop
shr
sbb
mov
out
enter
add
out
jle
cli
cmp
jno
xlat
add
pop
fdivs
mov
jecxz
or
lock
dec
xor
mov
pop
push
cld
scas
and
mov
int
je
mov
add
add
push
sbb
pushf
aas
mov
pop
pusha
sbb
dec
mov
dec
mov
ds
lea
ss
cmc
fdivl
test
pusha
call
pop
push
pusha
pop
add
mov
mov
notb
mov
cmp
imul
es
pop
push
pop
pop
adc
push
pop
add
push
add
scas
pop
jnp
outsl
add
das
pop
ficomps
fwait
jecxz
sbb
push
in
ret
add
popa
je
pop
mov
fimull
rcl
jmp
fsubs
sbb
out
add
cwtl
mov
imul
lcall
jecxz
mov
pusha
aam
pop
mov
andb
fiadds
call
add
add
mov
mulb
dec
data16
pop
pop
pop
inc
push
decb
sbb
mov
std
push
mov
decl
out
call
sahf
cwtl
loop
scas
out
test
in
jmp
loop
lcall
out
mov
out
std
jmp
lcall
inc
clc
jo
sti
ljmp
jae
subl
add
add
aaa
mov
mov
cli
push
inc
dec
jmp
out
in
in
mov
jne
inc
cwtl
dec
cwtl
or
xor
add
jae
lock
add
outsl
and
pop
gs
cmpsl
fisubl
and
fs
push
jnp
add
lock
pop
xor
mov
jns
add
fnsave
ret
jp
jmp
mov
cmpb
repz
vshufps
lock
stc
mov
jbe
gs
mov
jne
cmp
negl
gs
fcom
and
inc
jo
out
inc
popa
cmpsb
add
mov
jno
pop
out
lock
jae
cmpsb
shl
pop
pop
sbb
gs
repz
xor
fwait
mov
jbe
lock
test
ret
pop
in
mov
mov
mov
push
inc
mov
pop
test
pop
int3
gs
imull
filds
pop
inc
mov
negl
cmpsb
push
fldt
mov
movl
push
add
xlat
pop
pushf
mov
pop
enter
push
jb
mov
cmc
lods
mov
jmp
mov
sbb
or
pushl
fisubs
sub
xchg
jmp
lcall
jmp
cmc
mov
pop
jnp
sbb
mov
xchg
and
pop
dec
outsb
push
add
mov
pop
push
mov
add
push
jne
xor
jmp
jecxz
scas
loope
jae
push
imul
sub
sbb
mov
sbb
sti
push
jle
imul
cmp
cmpsb
mov
adc
jne
enter
mov
inc
add
and
lahf
dec
or
push
call
inc
jb
ljmp
add
data16
push
add
inc
or
and
in
push
out
std
jmp
outsb
enter
xlat
stc
les
shrb
mov
out
xchg
popf
incb
arpl
mov
mov
sub
outsl
subb
je
pop
sarl
pusha
mov
mov
je
inc
rcr
add
outsl
inc
popa
je
cwtl
xlat
pop
dec
adc
inc
add
sbb
push
enter
lock
add
orb
outsl
add
lock
dec
mov
popa
je
push
jbe
fcmove
cmpsl
add
imul
out
lock
ss
enter
lock
lret
sbb
sbb
pop
dec
sub
call
add
add
push
bound
pop
mov
lock
jmp
cmp
lcall
add
push
jmp
stc
jo
add
sysret
sbb
xlat
call
push
jmp
pop
into
lret
daa
add
adc
ret
and
incl
insl
inc
pop
push
sub
or
pop
mov
add
hlt
push
add
mov
pop
jmp
je
call
mov
idiv
mov
lret
inc
jmp
mov
out
jmp
push
add
ss
and
push
mov
repz
add
add
out
rcrb
jb
pop
pop
mov
add
aas
inc
dec
fisubrl
hlt
pop
jno
sbb
std
mov
testb
add
jle
sub
leave
das
mov
jmp
mov
add
mov
push
push
shl
fisttps
add
lret
leave
outsl
add
jne
inc
rcll
data16
dec
testl
cmp
push
xchg
dec
jle
cltd
das
hlt
leave
dec
call
add
lea
negl
or
incl
add
add
xor
cld
stc
mov
or
xchg
lock
xchg
call
fisttpll
xchg
sub
imul
add
mov
idiv
gs
outsl
push
or
pop
cmp
pop
add
cmp
add
andb
rorb
pop
je
pop
xchg
or
add
lock
or
add
cltd
add
pop
add
in
push
and
pop
mov
sub
in
pop
mov
pop
popf
pop
stos
pop
ss
imul
mov
adc
xlat
call
fadd
push
insl
jmp
mov
pop
fsubr
pop
ret
push
dec
fsubr
pop
xor
ficoms
lock
jmp
mov
add
inc
testl
or
fdiv
pop
js
xchg
push
sub
add
subl
leave
xor
rorl
int
xor
or
cld
incl
xor
pop
fnclex
pushf
push
or
nop
push
jmp
mov
ds
mov
pop
inc
xor
neg
add
repnz
incb
sub
loope
int
inc
cmp
jns
call
pop
push
xor
sbb
pop
mov
repz
call
in
xor
je
sbb
rcrb
ficomps
push
loop
fiaddl
add
std
jne
fistps
cmp
or
push
loope
and
or
add
cmp
jbe
mov
lcall
out
inc
mov
or
add
fnsave
incl
mov
lcall
std
addl
ja
repnz
pop
push
cmp
leave
push
jb
outsl
lcall
pop
add
mov
pop
rol
push
add
push
xchg
cmp
ret
pop
je
add
inc
rolb
dec
add
push
push
inc
je
cwtl
rorb
inc
sbb
out
pop
jmp
rorb
das
repz
lcall
mov
xor
push
jnp
xchg
or
mov
nop
leave
ret
ljmp
aas
out
xchg
pop
mov
callw
pop
add
jns
pop
jae
data16
cmp
mov
push
loope
pop
addb
sbb
loop
jmp
or
xor
push
jmp
add
subl
mov
push
push
push
test
add
shll
push
enter
dec
sub
push
jmp
add
push
jmp
pop
pushf
bound
pop
cli
inc
hlt
repz
push
add
rcl
pop
adc
push
popa
cmp
ficoml
add
push
push
ds
cli
sub
add
enter
imulb
push
jmp
ret
jmp
push
out
sub
in
jae
pop
add
pop
sub
lret
mov
aam
ljmp
stos
inc
push
jb
xchg
dec
lret
ss
call
idiv
add
repnz
ss
inc
jmp
ja
add
repz
cmp
sub
mov
insb
and
es
incl
fs
test
push
cmp
incb
aam
cld
decl
scas
sub
adc
jmp
test
mov
pop
and
aam
cld
incl
add
out
push
add
addl
std
jmp
scas
std
call
adc
jle
inc
orl
repnz
out
or
cld
ljmp
or
add
pop
add
push
lcall
add
push
hlt
or
out
jecxz
call
dec
push
xor
add
loop
pushl
xchg
incl
lock
push
jmp
pop
jle
lock
add
out
aas
ljmp
pusha
push
cli
pop
add
adc
inc
lock
dec
sbb
or
lods
push
incb
cmpsb
or
pop
xchg
mov
or
inc
add
int3
add
or
test
jge
and
dec
mov
push
fs
push
mov
mov
divb
insb
dec
out
outsb
mov
subb
push
scas
pop
test
push
dec
outsl
orb
je
ds
lods
nop
inc
dec
movsl
push
pop
rcr
push
add
lret
mov
xchg
pop
testl
and
decl
lahf
cmc
dec
imul
out
pop
push
pop
push
ret
add
dec
nop
fwait
dec
inc
push
push
mov
call
repz
mov
inc
dec
adc
call
inc
xchg
mov
dec
decb
ja
std
mulb
dec
sti
sbb
icebp
xchg
add
fs
inc
xchg
jmp
mov
addr16
rorb
add
add
jns
addr16
repnz
add
jns
mov
adc
incl
add
mov
ss
adc
in
repnz
add
adc
add
jle
mov
jg
clc
push
sbb
lcall
pop
call
mov
jge
decl
data16
pop
add
add
add
xchg
jb
loop
and
incb
add
add
pop
pop
add
pop
add
pop
add
push
cmp
call
nop
mov
inc
adc
jae
jbe
cli
cld
mov
decl
pop
add
pusha
dec
mov
jae
push
add
lock
iret
or
dec
fimuls
pusha
mov
shll
add
call
lcall
pop
ljmp
lock
add
out
pop
add
sbb
dec
xor
popf
out
pop
add
mov
inc
lock
repz
mov
push
je
cmp
push
lock
stos
or
or
jmp
cwtl
fdivr
cwtl
stos
mov
testl
fldl
cwtl
xchg
mov
push
lock
std
mov
cmp
test
inc
pop
nop
or
push
loop
arpl
ret
add
inc
fnstcw
mov
les
dec
fwait
dec
pop
xlat
push
sahf
dec
fwait
push
pop
xlat
push
mov
dec
daa
mov
jle
sub
das
pop
loope
lock
fisttpll
xchg
push
and
dec
mov
ds
outsl
push
cs
movsl
push
push
push
out
pop
jge
scas
mov
xor
test
add
mov
push
add
push
ret
outsb
jbe
out
lods
dec
aad
test
adc
call
push
sbb
repz
sub
enter
out
cli
push
add
push
sbbl
inc
jmp
add
jmp
repz
add
dec
push
hlt
fdivr
inc
repz
je
mov
dec
or
add
daa
fsubp
cmp
push
add
int
or
imul
inc
scas
sbb
pop
jg
mov
scas
mov
xchg
std
jne
mov
hlt
repz
jne
mov
out
out
inc
decb
or
sub
xchg
scas
mov
cmp
out
push
pop
mov
repnz
inc
decb
fldcw
sbb
mov
add
das
out
call
xchg
ret
jae
pop
mov
lock
add
add
add
dec
xor
dec
mov
cld
inc
incb
pop
nop
ret
sbb
mov
push
mov
loope
sbb
cmpl
jae
jmp
mov
add
or
add
cmp
push
ret
fistps
sub
stc
dec
adc
push
ret
ljmp
push
insl
in
push
incb
add
cltd
add
pop
lcall
xchg
jne
push
ja
test
outsb
xor
cmp
pop
gs
out
das
add
xor
repnz
add
stc
jmp
std
das
jne
out
pop
out
add
adc
add
dec
arpl
inc
test
push
jmp
dec
out
insl
cltd
add
ret
inc
gs
ficomps
add
mov
dec
dec
cli
inc
cmc
xchg
jmp
pushl
add
inc
pop
cmp
lods
call
and
push
jmp
jl
aas
arpl
imul
pop
lock
dec
in
dec
hlt
daa
add
inc
push
lods
inc
mov
push
lds
adc
test
js
std
cmpsb
add
scas
inc
jmp
mov
add
div
cs
out
push
or
xor
repz
js
std
push
ds
add
in
call
das
sbb
cwtl
inc
out
testl
out
testl
je
sub
jmp
sub
jnp
idivl
push
add
testl
add
add
inc
out
clc
push
add
ret
leave
mov
lcall
inc
or
jo
dec
rolb
add
pop
pop
xorl
inc
or
jne
mov
pop
leave
lcall
add
dec
testb
pop
add
mov
dec
pop
movl
lret
cltd
pop
add
and
out
push
add
repnz
add
adc
ljmp
jp
add
push
data16
cs
pop
mov
xchg
dec
pop
pop
xor
sub
aad
addr16
lret
testl
xchg
aad
setl
adc
jmp
and
addr16
test
ret
arpl
add
xor
xor
jne
jmp
lahf
sub
mov
dec
dec
mov
xchg
add
add
mov
dec
pushl
add
addr16
add
pop
inc
dec
push
inc
imul
inc
mov
push
lds
jp
add
push
adc
jb
mov
iret
push
xchg
lock
lea
add
mov
inc
hlt
cld
jb
jg
xor
jmp
stos
cmp
jg
lock
add
mov
cmp
les
mov
dec
fdiv
mov
lock
loop
add
adc
lock
jmp
call
xor
add
es
add
inc
cmp
add
add
or
mov
repz
cmp
cs
sub
inc
jb
stos
xor
jmp
stos
sar
cli
out
test
out
push
push
push
push
add
jae
xor
sti
jmp
mov
dec
shl
lods
add
sarb
jmp
mov
or
popf
test
adc
push
add
int3
jmp
add
add
imul
mov
add
inc
dec
movl
int3
jg
push
mov
push
pusha
ljmp
add
les
add
and
add
aam
decl
add
jae
mov
push
adc
lds
or
add
movb
add
add
sub
leave
add
push
iret
incl
add
jnp
jne
loop
add
add
shl
ljmp
or
repz
cmpsb
sub
add
lock
inc
mov
add
lock
in
jmp
xor
jmp
jae
fs
mulb
add
cmc
icebp
sbb
add
jo
vlddqu
sti
incb
add
inc
je
fsubrs
je
enter
das
inc
xor
std
push
lods
call
in
inc
imul
std
stos
push
fs
ds
add
loop
inc
les
sub
call
inc
flds
shll
cmp
xchg
mov
push
mov
inc
push
lret
call
add
add
add
les
cmpsb
sub
mov
addl
in
daa
add
or
fbld
rol
sbb
call
add
adc
scas
jp
xor
sarl
fcmovnb
call
das
cmpsb
push
shlb
incl
xor
decl
adc
cli
push
mov
xor
scas
cmp
sub
call
repnz
mov
or
hlt
pop
add
repz
add
repz
call
mov
rolb
ret
hlt
push
add
dec
xchg
loopne
dec
sub
cs
test
add
inc
jmp
ss
add
mov
call
int
incb
ss
xor
les
out
inc
out
fscale
inc
enter
add
pop
add
jb
leave
std
push
loopne
add
mov
leave
or
addr16
fistpll
add
inc
es
clc
call
sbb
add
push
xor
adc
push
ret
pop
ret
and
dec
inc
or
je
pop
add
sbb
add
adc
xchg
dec
inc
fsubl
inc
lock
pop
mov
roll
int3
call
icebp
lock
out
add
sbb
test
cmpb
add
push
ljmp
insb
notb
fdivr
push
adc
add
pop
sbb
decl
inc
sbb
call
movsl
test
mov
mov
sbb
add
add
test
inc
lock
add
or
push
pushw
mov
cmpsl
add
pop
dec
push
pop
loopne
add
pop
ss
pop
loopne
add
pop
push
push
cmp
cmpsl
add
sub
sub
cmpsl
add
and
cmp
daa
add
in
fnsave
loopne
add
add
in
fnsave
loopne
add
in
fnsave
loopne
add
jecxz
fnsave
fbld
add
jecxz
fnsave
pop
add
xor
and
movsl
lcall
cmp
and
int
incl
add
and
mov
ljmp
repz
popf
call
repz
add
inc
std
dec
sbb
and
sub
in
sub
cmp
push
dec
sbb
pop
sub
cmp
cmp
cmc
pop
sub
cmp
and
std
pop
sub
cmp
into
ljmp
inc
pop
or
jmp
pop
das
dec
pop
cwtl
add
and
push
das
push
pop
pop
add
and
add
fisubrs
pop
pop
dec
add
and
into
cs
dec
add
and
jbe,pn
cwtl
add
and
pop
and
cwtl
add
and
push
and
and
and
and
pop
and
and
lock
out
dec
out
add
or
mov
cmp
add
adc
mov
add
or
enter
outsl
add
aad
fldl
lock
sub
dec
stc
fldl
sbb
xlat
sbb
call
add
fistpll
or
inc
lock
out
out
add
adc
push
in
lret
dec
jns
inc
lock
sti
mov
add
sub
mov
sub
dec
sub
adc
push
icebp
mov
jnp
pop
jmp
test
or
or
dec
in
jae
loopne
imull
add
push
sub
lock
adc
push
jmp
cmp
mov
jnp
push
jmp
test
orl
add
add
dec
in
add
add
mov
jnp
push
jmp
add
pop
jmp
push
lock
jmp
hlt
repz
jmp
repz
add
testl
adc
repz
ret
repz
repz
jge
dec
sbb
jmp
lock
adc
repz
xchg
incb
add
xor
add
repz
call
repz
add
add
call
xor
sbb
repz
ret
repz
push
jge
lret
adc
jmp
inc
ds
repz
add
push
inc
mov
dec
movl
add
or
jne
cmpb
or
mov
dec
lds
loope
add
pusha
mov
add
or
mov
add
add
leave
jl
mov
jg
rorl
add
cltd
cmc
jae
add
mov
cltd
int
sbb
or
or
add
pop
addl
xor
inc
mov
imul
sub
add
mov
sbbb
sbb
add
add
jno
push
add
test
pop
hlt
sbb
inc
std
mov
add
jnp
out
imul
sbb
stos
lret
aad
out
push
sub
gs
roll
jae
add
gs
or
xchg
icebp
pop
add
sbb
adc
sbb
add
mov
jo
fisttpl
jmp
pop
add
lock
bound
push
dec
out
stc
adc
sub
mov
pop
ljmp
push
jmp
adc
push
jmp
add
pop
jp
or
add
clc
pop
lock
jb
pop
or
add
jmp
popf
inc
pop
sub
out
out
pop
fdiv
pop
int3
pop
lock
pushf
sbb
clc
pop
lock
pusha
cmp
jmp
add
add
push
jmp
in
repz
mov
or
jmp
jl
jmp
xor
popa
add
add
rdmsr
cmp
jge
fcos
xor
jo
sbb
repz
mov
or
jmp
repz
mov
or
jmp
cltd
inc
add
sahf
fimull
sbb
orb
test
add
push
add
jle
and
jbe
sub
movsl
and
adc
ja
mov
push
add
dec
xor
je
inc
inc
test
js
orl
test
xchg
add
sbbl
inc
mov
sbb
jbe
pop
out
dec
pop
ret
mov
push
push
cmp
xchg
xor
flds
add
test
fidivs
flds
mov
std
jne
mov
lcall
xchg
cmp
lds
inc
add
jae
sbb
pushl
addl
lock
call
add
lock
paddsb
pushl
outsb
jecxz
jbe
jmp
movsb
or
test
and
add
add
mov
dec
icebp
mov
add
sbb
sbb
xlat
mov
pop
hlt
sbb
pop
add
sbb
add
jnp
sbb
sbb
cmp
push
sub
add
push
mov
imul
jmp
lcall
pop
and
jmp
incl
bound
add
push
out
inc
outsl
push
call
add
or
add
loopne
comiss
mov
in
add
jge
adc
push
jmp
add
and
test
ljmp
iret
push
je
mov
add
aaa
cmpsb
cs
dec
jb
ljmp
cs
sahf
insb
cmp
jne
add
lret
shl
mov
push
bnd
in
push
lea
jno
add
repz
shll
cs
sub
sbb
repz
mov
add
jmp
repz
mov
icebp
pop
std
stos
insb
incb
pop
fadds
add
mov
add
jmp
repz
inc
jo
adc
repz
fnstcw
push
add
add
repz
inc
sub
popa
add
mov
xchg
sub
mov
adc
inc
mov
push
add
pop
jp
adc
add
pop
jg
add
hlt
rorb
or
jne
addl
or
scas
adc
stos
push
add
or
ljmp
add
sub
cld
or
incl
push
add
or
aaa
adc
add
jnp
adc
adc
lock
push
add
sbb
adc
sbb
add
mov
fs
sbb
call
jl
hlt
sbb
test
hlt
sbb
jl
hlt
sbb
lock
add
adc
sbb
add
and
pop
mov
add
inc
test
xor
sbb
jg
hlt
xor
cmp
ljmp
dec
add
out
aam
inc
jecxz
mov
call
add
mov
div
push
jmp
and
pop
add
add
add
add
call
inc
push
cltd
xorb
sub
xor
xor
jg
mov
hlt
cmp
sub
out
and
movsl
dec
lock
sub
inc
out
push
cmp
cmp
fucomip
add
push
push
add
repz
xorl
movl
push
add
les
mov
fcmovnu
cli
les
mov
and
jns
pmulhw
push
mov
aaa
pop
add
icebp
inc
pop
jno
sub
pusha
pop
out
jmp
scas
add
push
sub
xchg
add
add
jo
or
push
add
adc
repz
mov
add
jmp
repz
mov
add
add
add
stos
push
add
add
jne
test
add
cltd
inc
xchg
add
add
add
add
sub
mov
or
pop
orl
push
mov
or
cli
out
cmc
mov
sar
mov
sbb
add
or
add
sbb
addl
lods
push
push
add
test
call
push
push
pop
pop
lock
cli
pushl
add
or
out
jno
add
sbb
out
imul
inc
movsl
inc
out
aam
daa
pusha
iret
pop
mov
add
outsb
push
or
lock
add
lock
sub
jae
pushf
scas
and
and
add
sbb
dec
and
das
movsl
inc
out
and
imul
sbb
mov
push
add
mov
and
sbb
clc
jnp
out
outsl
adc
push
jmp
add
enter
call
jno
add
add
fbstp
hlt
push
jmp
add
pop
jmp
jmp
pop
lock
bound
add
pop
add
add
jmp
pop
inc
jo
icebp
push
xchg
or
fadds
lock
jo
filds
jmp
adc
push
jmp
add
jnp
or
push
jmp
out
push
jmp
test
xor
push
xchg
jns
sahf
push
xchg
paddsw
push
mov
pop
pop
add
repz
xchg
out
push
add
ljmp
add
repz
imul
mov
cld
or
jb
arpl
and
xchg
ds
repz
jmp
out
out
inc
int
xchg
jmp
pop
out
inc
push
int
mov
clc
out
les
sub
jmp
repz
jne
adc
add
scas
add
cmc
push
add
pusha
lea
add
or
add
mov
lods
adc
add
lea
add
or
ja
add
cltd
mov
add
pop
mov
push
push
loop
out
adc
std
pop
xchg
pop
ret
mov
lea
bound
add
or
mov
add
or
shl
or
xor
add
outsb
pop
add
sub
add
imul
pop
es
dec
mov
fnstsw
jnp,pt
or
jmp
clc
xor
add
mov
lcall
mov
decl
or
jbe
push
add
mov
call
add
cmp
outsb
sbb
add
sub
add
hlt
dec
inc
ljmp
add
dec
xor
mov
lock
divb
add
bound
jp
push
jnp
mov
out
or
add
pop
fdivr
popf
out
sub
js
or
add
cld
orb
ja
in
push
jmp
add
data16
push
jmp
add
push
jmp
add
add
pushf
in
mov
lock
lock
out
or
add
mov
enter
add
add
out
jp
ljmp
repnz
negb
rolb
bound
mov
bound
mov
ret
mov
repz
mov
push
add
pop
push
xrstor
and
shrb
cwtl
cmp
add
xchg
mov
add
repz
pop
jb
push
add
repz
fucomip
in
testl
and
repz
add
in
push
ffree
lcall
add
out
add
out
or
add
mov
add
xchg
cmp
or
add
add
testl
mov
adc
in
cmp
sahf
xchg
add
add
cmp
stos
sub
sub
push
cmp
xor
jb
mov
push
icebp
xor
pmullw
decl
pop
and
push
inc
push
lock
jge
dec
mov
mov
add
add
aam
movsb
sbb
ja
sub
jge
int3
and
ret
cmpsb
pusha
pop
mov
shr
jge
mov
or
mov
mov
jne
cmpsb
mov
fadds
ljmp
movsl
cmp
adc
mov
inc
int3
adc
sbb
leave
sub
add
aam
fdivl
pop
pop
adc
inc
repz
jmp
adc
adc
sar
outsl
iret
sar
pop
shl
pop
adcb
out
lret
mov
incl
and
imul
sub
or
sub
adc
sub
inc
call
push
add
jno
jp
dec
jge
out
add
add
add
out
mov
sub
rolb
jns
or
imul
loopne
mov
add
mov
add
mov
psubsw
push
jecxz
jmp
sub
mov
sub
push
mov
pop
or
subb
lret
and
fs
jae
add
pop
test
in
repz
dec
jo
incb
jmp
mov
incb
and
push
pushf
dec
push
out
pop
fdivs
inc
push
xchg
sbb
adc
xor
adc
mov
mov
dec
cli
inc
add
lret
dec
adc
and
push
movl
nop
testl
add
jns
add
xchg
dec
call
xor
fmull
add
fldenv
add
leave
or
sbbl
add
add
int
add
pushf
lret
mov
adc
test
movsl
sti
add
das
jnp
hlt
sub
add
testl
imul
xchg
add
loopne
add
imul
ficomps
jnp
ficoms
sub
sahf
cld
and
add
test
add
das
mov
mov
mov
xchg
and
sbb
outsb
popa
std
dec
xchg
mov
add
mov
jmp
inc
jns
fists
je
scas
sub
repnz
pop
ja
in
push
jmp
add
add
jecxz
shrl
hlt
ljmp
adc
adc
xchg
rol
sbb
xorb
imul
xchg
aas
sbb
adc
xchg
adc
int3
mov
push
mov
fistpl
cld
jno
shll
jmp
roll
sbb
and
mov
cmp
sbb
inc
mov
add
add
add
push
jmp
int3
mov
push
movq
and
jge
inc
ljmp
push
adc
and
xor
daa
rcll
mov
push
testb
loopne
negb
popl
or
jmp
repz
jl
jo
add
jg
add
repz
dec
add
hlt
push
jl
jo
add
pop
pop
add
repz
mov
lea
ret
inc
lds
pop
call
xor
inc
movsl
push
dec
mov
push
jecxz
dec
cmc
cmp
dec
in
mov
popf
inc
and
dec
jp
loop
push
mov
incb
push
jecxz
dec
xor
cmp
push
xchg
shl
das
add
es
mov
and
roll
leave
mov
es
iret
cli
add
call
or
mov
rorl
lcall
mov
mov
mov
call
scas
inc
cmp
cmp
inc
rorb
fucom
std
pop
dec
inc
int3
sbb
add
das
xchg
fiadds
add
sahf
das
imul
movsl
jle
int
mov
mov
lods
movsb
cmp
rclb
fucomi
mov
ja
pop
das
jmp
adc
das
add
insl
xor
inc
gs
add
dec
das
mov
jnp
sub
push
push
popa
rol
cmp
sbb
add
sub
sarb
jmp
sub
adc
mov
mov
or
pop
sbb
add
push
adc
call
add
sbbl
out
inc
add
push
bound
add
jmp
mov
inc
ljmp
lret
add
mov
sbb
or
sbb
add
push
decl
add
fwait
and
gs
mov
jne
out
pop
sbb
shrb
orb
inc
clc
jmp
in
out
fistps
bound
dec
jb
pop
lret
sbb
and
call
sub
clc
add
jne
and
ja
lods
pop
repz
add
repz
test
pop
fistpll
movsb
push
jecxz
cmp
jne
out
addr16
std
jmp
mov
push
push
push
mov
std
cmp
or
xor
adc
cmpsb
cmc
add
testl
mov
sbb
mov
add
mov
and
pop
mov
add
loope
idiv
addb
adcl
sbbl
xor
push
mov
loop
cmc
push
notb
add
inc
in
push
out
lock
jnp
out
or
adc
add
jnp
inc
clc
repnz
out
out
jae
sbb
jecxz
sub
cwtl
dec
mov
out
mov
rorl
add
imul
call
lods
or
add
or
and
push
add
lock
push
jne
sub
or
mov
loopne
mov
ss
push
repz
or
xlat
imul
movsl
outsl
mov
sbb
pop
incl
add
lock
push
adc
call
add
jg
call
insb
mov
movsl
add
mov
add
add
lock
bound
lret
pop
ljmp
mov
lret
test
ret
add
sarb
lret
ljmp
sbb
popa
mov
xlat
xchg
mov
inc
adc
inc
adc
mov
lods
out
mov
pop
push
adc
inc
jp
dec
call
das
jb
call
aaa
pusha
add
test
cmp
out
push
mov
in
lock
orb
mov
xlat
xchg
or
xchg
leave
dec
push
pop
adc
scas
and
test
and
repz
jne
imul
dec
bound
adc
lcall
out
loope
bound
out
ljmp
dec
int
mov
pop
add
int3
arpl
add
icebp
mov
cmpb
cmp
mov
icebp
cmpsl
icebp
decl
jle
and
pop
fmuls
mov
and
jno
jmp
jg
and
jg
and
das
test
xchg
add
push
add
std
add
cs
jl
push
jl
add
dec
and
pop
dec
mov
add
fmulp
repz
repz
pop
rorb
adc
sub
imul
lock
outsb
out
pop
add
int3
das
jg
icebp
lcall
loopne
mov
lea
out
sbb
jno
add
jnp
out
add
pop
scas
push
and
sbb
jnp
fbld
cmp
push
sub
mov
add
inc
ljmp
xor
subl
mov
push
dec
incl
add
arpl
mov
out
insb
and
pop
adc
in
adc
pop
lock
jmp
out
adc
rclb
pop
and
mov
sbb
lods
jno
adc
adc
sbb
adc
add
xorl
cmp
and
cmp
rorb
jge
fildll
jle
fistps
jle
fucomip
movl
mov
in
mov
in
repz
push
cltd
inc
out
ficoml
push
jno
add
repz
ficoms
lret
jnp
pop
add
add
add
push
add
in
jb
insb
lock
cmp
pushf
jl
or
sbb
cmp
gs
mov
notl
rolb
jl
int
mov
out
fsts
mov
mov
cmp
push
stc
int3
les
jecxz
add
adc
push
in
xchg
in
xor
inc
sub
or
fcomp
std
incl
push
mov
xchg
loop
mov
pushf
jne
mov
add
leave
jge
xorl
add
or
or
adcl
sbb
or
mov
andl
or
popa
fucomi
incl
xor
jmp
jnp
and
add
lcall
mov
lock
push
mov
mov
lods
mov
mov
xor
inc
jns
ficoms
xlat
pop
sbbb
jne
or
adc
add
lock
and
aad
ret
mov
imul
fiadds
sbb
fcoml
test
add
scas
fs
add
daa
jecxz
inc
aam
flds
add
and
add
or
cmp
and
add
push
in
andb
fistps
aam
lock
orb
sti
sahf
mov
inc
push
mov
idivb
lods
imul
lcall
mov
jno
pop
in
push
pop
test
daa
lock
shrl
idivl
loopne
add
jns
pop
inc
mov
xlat
push
movb
add
push
repnz
jae
cmpsl
or
add
cld
call
cmp
jge
dec
repz
in
repz
add
inc
call
repz
loopne
out
mov
or
jmp
repz
inc
pusha
jne
add
repz
stc
pop
or
bound
add
orb
rorl
jno
pop
sahf
aad
or
je
addb
pop
hlt
add
repz
mov
pop
add
jp
pmulhw
push
mov
pop
add
jns
add
repnz
sbb
repz
jne
js
lldt
or
add
or
jmp
mov
add
pop
mov
add
or
mov
pop
add
mov
push
add
sbb
sbb
adc
add
push
lret
sarb
jle
and
mov
and
jle
adc
push
add
and
test
add
push
sub
push
push
out
into
adcl
pop
mov
pop
pop
sbb
ss
mov
popl
and
add
jecxz
pop
push
popf
ds
mov
add
xor
dec
rorb
inc
clc
pop
aas
mov
push
lcall
in
pop
add
imul
fs
ret
pop
mov
insb
inc
ret
pop
mov
test
add
pop
mov
imul
push
and
mov
add
mov
sbb
add
push
mov
stos
cmp
xchg
xchg
or
mov
mov
mov
cmpsb
push
cmp
mov
jo
xor
jmp
jl
test
notl
std
mov
in
inc
stc
jbe
outsl
ret
mov
and
fwait
aaa
xlat
xor
lock
bnd
adc
addl
add
jns
cmc
je
out
xchg
dec
clc
adc
or
xchg
or
aam
clc
jbe
iret
mov
xor
outsb
or
and
jle
aam
jg
hlt
add
stos
jno
jmp
sub
sbb
sbb
sbb
repz
setg
dec
test
jns
icebp
jbe
aaa
int3
inc
jle
cld
sti
jg
fadd
sbb
arpl
add
shrl
stos
jbe
aaa
popf
test
or
call
jnp
push
mov
orl
test
es
jle
out
jbe
std
add
add
push
dec
inc
cltd
or
mov
lret
sbb
rolb
adc
incl
push
push
cmc
dec
call
add
notb
lds
or
xchg
fsub
jle
pop
add
pop
mov
les
mov
nop
roll
out
add
cld
sbb
in
xchg
cmp
leave
add
or
out
xor
cld
leave
dec
out
or
sbb
xorb
inc
push
lock
inc
out
imul
iret
mov
push
xchg
lock
lock
daa
or
test
scas
and
jmp
xchg
add
repz
inc
ljmp
xor
xor
jl
jae
rorb
add
dec
jae
add
mov
out
add
mov
ret
inc
add
push
pop
dec
mov
jl
imul
inc
add
fimull
out
add
add
or
mov
out
jl
mov
test
ja
inc
repz
xor
xchg
push
aaa
mov
dec
fistpll
adc
pop
pop
sbb
pop
out
fsubrs
lods
or
push
mov
sbb
push
out
fwait
dec
mov
push
out
jp
add
push
lret
ljmp
cmpsl
incb
add
sub
xor
push
call
adc
pusha
ljmp
test
or
repz
push
xchg
xor
lret
jo
inc
or
rcrl
xchg
xor
adc
mov
or
icebp
push
or
pusha
pop
popa
ret
push
mov
add
dec
adc
jno
inc
mov
mov
adc
inc
mov
mov
or
inc
xchg
xor
shrb
pop
mov
jnp
mov
or
sbb
aas
mov
dec
in
push
or
mov
dec
in
inc
or
mov
jg
mov
scas
mov
in
daa
or
mov
push
or
stc
mov
jle
add
ss
add
add
divps
fmuls
cwtl
adc
or
cmpl
dec
jecxz
sub
pushl
pop
xor
ljmp
mov
cmp
repnz
mov
cs
pop
and
jns
jno
or
fdivp
rcr
imul
mov
push
adc
add
jmp
adc
test
adc
push
test
test
mov
and
jns
cli
stc
das
xor
lock
add
jns
inc
out
in
data16
cmp
xorb
rcrb
out
aad
enter
push
or
or
out
jmp
mov
sub
add
add
add
or
out
scas
into
bnd
roll
push
loop
rsqrtps
add
jnp
jge
test
jmp
into
rcll
pop
sub
jnp
jge
xchg
add
jnp
lock
loop
pop
pop
sub
loope
sbb
xchg
inc
add
incb
mov
inc
push
sbb
add
sub
add
repz
add
in
sub
sbb
add
fisttps
stc
jo
test
in
and
sarb
mov
adc
add
repz
jo
in
out
jmp
or
push
aas
jmp
addl
dec
sub
lea
add
fmul
subl
adc
sbb
repz
in
sbb
mov
jg
in
add
adc
push
pop
add
sbb
sub
add
mov
dec
out
push
dec
and
or
call
mov
incb
popa
inc
fstpl
adc
adc
add
xor
add
jecxz
popa
cmpsl
stos
cwtl
xor
fchs
cmp
loopne
jl
shll
mov
shll
and
pop
add
lock
sub
loope
jns
xor
xor
inc
adcb
aam
ret
fisubrs
mov
cs
shrl
mov
hlt
xor
ja
adc
or
xlat
mov
test
and
add
std
xor
cmc
clc
push
idiv
sub
in
cmp
call
js
pop
imul
adc
push
mov
or
lahf
test
imulb
push
xchg
inc
out
mov
mov
dec
fbstp
outsl
movzwl
cs
inc
cmc
mov
add
add
dec
and
outsb
aas
mov
push
decl
ljmp
add
or
daa
pop
bound
je
fbstp
mov
aas
pop
cmp
js
call
sbb
cli
mov
comiss
aaa
out
nop
or
lcall
dec
out
mov
pop
sbb
cli
jle
ret
sub
dec
call
ret
pop
sub
add
in
stc
bound
movsb
sub
clc
cltd
in
xor
cld
mov
push
call
orl
clc
cltd
sti
xchg
cld
imul
arpl
sub
dec
call
bound
popl
and
lock
mov
inc
clc
sbb
insb
cld
cmpsb
out
arpl
sub
cld
mov
add
dec
call
add
scas
stc
mov
mov
jp
lock
pop
dec
inc
pop
jg
clc
jns
inc
cld
sahf
add
test
ret
std
mov
call
ja
inc
clc
imul
add
stos
mov
mov
roll
add
jmp
push
push
daa
sub
add
add
lods
push
mov
cli
mov
je
addb
mov
inc
add
mov
inc
add
xlat
iret
mov
fisttpl
lock
jns
and
jg
clc
add
jne
push
push
out
add
lock
jae
pop
add
and
mov
add
daa
jbe
jnp
cmp
insl
mov
jne
push
and
push
ds
push
add
add
sahf
rcl
push
lods
mov
add
and
scas
out
rolb
jae
mov
cmpsl
roll
fucomi
mov
popw
je
clc
sahf
add
out
push
add
push
cmpsb
lret
cmpsb
xor
out
push
or
add
push
jb
jmp
insb
subl
out
add
lock
out
iret
dec
test
sbb
sub
push
cmp
jns
das
lods
ret
jmp
xor
jle,pn
stc
incb
lock
out
fistl
adc
pop
add
bound
js
inc
add
stc
add
repnz
std
divb
mov
fisubrs
stc
ret
ljmp
repz
inc
push
push
jnp
jae
add
sub
push
repnz
std
push
ja
js
repz
add
push
jae
outsl
mov
add
clc
std
mov
repz
pop
mov
jmp
sub
push
push
xchg
cmp
mov
sahf
je
jo
mov
sbb
mov
fsts
test
das
xor
sldt
push
rclb
pop
or
call
loope
dec
inc
pop
in
cmp
jbe
push
mov
push
push
call
icebp
stos
dec
inc
pop
in
es
add
mov
push
push
call
push
push
ret
dec
mov
or
or
call
cmpb
and
add
test
pop
les
or
cmp
idivb
cwtl
add
ror
mov
dec
xor
jae
cmp
and
sbb
call
mov
add
lock
mov
mov
jns
test
hlt
insb
les
sti
lock
imul
adc
or
mov
add
movsb
ret
add
xchg
mov
jae
sbb
sahf
fs
or
add
or
push
fmuls
cld
std
out
inc
lock
jnp
or
in
iret
std
mov
nop
test
loopne
cmp
mov
lahf
and
andl
filds
testb
dec
out
xor
pop
in
or
lahf
sub
subl
fimuls
sti
pop
divb
push
andb
dec
jae
stos
mulb
inc
subb
add
push
mov
fidivrs
mov
out
add
andl
cmc
sub
dec
out
xor
mov
std
out
push
add
sti
mov
testl
mov
jg
call
xor
pop
test
xor
push
call
inc
push
inc
aas
jmp
test
clc
sahf
add
outsl
pop
test
lods
push
mov
push
call
pop
popa
dec
clc
sbb
outsb
aas
addl
fidivs
daa
repz
or
rorl
repz
xchg
stos
in
mov
mov
xor
jmp
push
decl
test
sti
ljmp
push
dec
cmc
push
and
dec
inc
cltd
loopne
std
add
mov
xchg
dec
enter
mov
cli
mov
jo
decl
add
pop
loope
mov
cmc
sti
xor
xor
mov
hlt
sti
inc
jnp
dec
orb
outsl
or
cmpl
clc
xchg
or
add
dec
inc
adcl
jns
lock
cmp
add
gs
push
enter
iret
pusha
test
cld
sti
add
add
pusha
mov
add
ret
sti
std
inc
sti
mov
pop
sub
pop
mov
add
adcb
xchg
push
adc
sub
vmread
or
mov
inc
cmpl
scas
jmp
das
inc
push
adc
add
push
das
xor
jne
inc
jae
or
add
iret
mov
flds
in
fistpll
push
mov
les
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
add
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
repz
add
repz
add
repz
add
repz
add
jmp
inc
mov
jns
iret
add
and
push
daa
and
data16
push
insb
dec
adc
pop
or
and
jnp
dec
push
daa
cmp
add
stc
cld
inc
inc
add
jb
adc
leave
sbb
leave
sbb
aaa
rorl
xor
bound
adc
insl
add
imul
dec
cli
shlb
or
imul
nop
ja
add
popa
fs
or
sub
outsb
jg
jb
js
outsl
ja
and
pusha
jo
cmpsb
sbb
bound
add
outsb
jae
data16
cmp
cmp
xchg
add
or
add
add
add
add
add
add
add
dec
add
add
add
pop
add
add
add
dec
add
add
add
sbb
add
add
add
lcall
hlt
das
iret
push
adc
mov
or
add
mov
jnp
outsb
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
add
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
add
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
sbb
pop
jo
cmp
jne
inc
arpl
jns
ja
mov
pop
jne
and
jmp
add
in
xor
add
jmp
shlb
pop
pop
pop
or
sbb
arpl
repz
add
add
popa
add
das
add
bound
inc
fs
clc
add
sub
outsb
imul
cmp
outsl
das
or
jns
outsb
jle
add
mov
add
pop
popa
jns
ja
xor
xor
ja
add
arpl
add
imulb
xor
imul
outsl
push
sub
outsl
je
js
arpl
pop
jo
lock
lock
pop
jno
iret
cld
pop
jb
add
pushf
mov
outsb
mov
lcall
das
ret
xor
push
mov
jbe
nop
add
andl
addl
pop
push
arpl
fs
test
jno
andl
and
jb
adc
imul
insb
pop
adc
cmp
adc
cmp
aad
add
xlat
push
sbb
out
jecxz
add
jno
popa
add
aam
cli
jo
out
xchg
ja
iret
pop
sti
add
fnstenv
ss
xor
ss
add
jno
jae
popa
out
test
bound
lds
jae
add
mov
jne
bound
jnp
aas
pop
mov
jae
jno
pop
mov
fs
and
adc
sub
xor
sub
add
pop
add
add
dec
gs
arpl
inc
jmp
pop
aas
shlb
hlt
jb
push
iret
dec
jno
rcrb
add
ja
or
dec
jb
lret
add
cwtl
push
das
sbb
sbb
shll
gs
andb
xchg
gs
xchg
pop
outsb
enter
enter
mov
arpl
test
jb
dec
pop
jo
inc
js
mov
add
pop
mov
pop
ss
aaa
xor
hlt
dec
imul
pop
jmp
and
pop
outsb
cs
jb
mov
je
lods
jo
jae
imul
push
ljmp
gs
imul
jo
repnz
imul
outsl
popa
jns
outsb
sub
xor
add
cmp
outsb
cs
mov
imul
dec
outsb
add
popaw
add
pop
outsb
outsb
pop
add
je
ja
add
je
mov
arpl
insb
insb
lock
or
sub
popa
add
add
fisubrs
sarl
add
push
pusha
insb
leave
pop
add
add
int
popa
jae
ficomps
sar
pop
arpl
cmpsl
aaa
add
fisubrs
mov
xchg
leave
push
test
add
jbe
push
stos
push
pop
dec
jg
jo
xorl
inc
xchg
pop
gs
pop
sbb
sbb
pusha
ja
pop
push
arpl
bound
add
pop
js
bound
adc
arpl
out
xlat
pop
cmp
popa
add
shlb
js
pusha
push
jbe
jo
jbe
sbb
pop
ret
pop
xchg
pop
out
pop
std
lea
push
addb
cmpsw
pop
aam
lock
int
push
jbe
pop
dec
insb
out
aas
jo
pop
pop
lcall
pop
jl
push
jb
push
push
add
je
jmp
add
push
jb
dec
pop
jb
dec
adc
push
adc
jno
pop
inc
outsb
xor
shll
dec
jecxz
fs
jno
psubusb
je
sbb
insb
insl
sti
mov
outsb
outsb
mov
mov
push
lret
scas
insl
outsb
ret
xor
subl
fwait
imul
rep
insb
mov
pop
push
inc
push
jmp
push
inc
add
arpl
sub
pop
jae
outsl
pop
jae
outsl
add
push
outsl
sub
cs
outsl
mov
pop
jae
pop
sbb
xor
sub
jb
pop
popa
imul
outsl
jmp
popa
add
inc
outsb
outsb
in
add
insl
arpl
or
inc
gs
or
cmp
add
sbb
xor
addr16
add
inc
gs
outsl
outsb
add
push
add
push
gs
pop
pop
jae
xorb
mov
pop
cmp
out
jb
adc
ja
mov
or
imul
insw
cmovge
lock
jb
aad
push
jo
in
jb
sar
pop
imul
pop
outsb
mov
add
in
pop
insl
xbegin
pop
pop
mov
loopne
insl
mov
insb
add
cld
xor
lock
pop
jno
mov
bound
out
gs
jne
dec
out
add
js
imul
outsb
xchg
add
xchg
addr16
pop
out
push
pop
mov
gs
or
lock
jb
imul
add
adc
imul
dec
jne
pop
out
shll
lret
insl
adc
jbe
pop
push
ja
push
fdivs
pop
mov
je
pop
out
xchg
je
jno
push
out
sahf
insl
pop
jl
fdivs
shrl
push
lret
push
add
push
je
lret
push
push
add
inc
pop
jb
inc
push
xor
insb
mov
add
data16
sbb
jno
cmp
add
inc
addr16
pop
pop
jp
adc
inc
pop
pop
jno
pop
push
arpl
insl
addr16
iret
push
fs
shlb
cmp
imul
jo
adc
xlat
push
je
xchg
inc
jbe
mov
jae
or
jae
add
push
fildll
jb
fists
push
popa
add
add
shrb
leave
push
fs
imul
flds
outsb
insb
add
imul
je
imul
xor
add
push
add
call
sbb
popa
mov
inc
imul
outsb
xor
gs
out
popa
mulb
data16
insb
xor
cmp
add
imull
push
and
pop
outsb
sbb
insb
add
mov
insb
add
imul
arpl
pop
imul
pop
dec
andl
inc
mov
dec
popa
pop
outsb
lock
je
pop
popf
pusha
xor
out
arpl
push
add
push
xor
ret
in
arpl
pop
pop
lock
pop
add
sbb
in
pushw
int
jne
shr
xor
std
mov
popa
arpl
mov
pop
popa
xchg
xchg
adc
fildl
jno
push
frstor
push
sbb
lock
enter
out
inc
push
mov
bound
lret
fs
outsb
les
push
pop
dec
pop
xchg
pusha
dec
pop
mov
andb
jnp
adc
mov
and
insb
adc
pop
add
sbb
pop
push
pop
push
imul
pop
cmp
loope
dec
pop
roll
inc
arpl
imul
pop
aad
sbb
push
push
pop
shrb
pop
lock
add
adc
das
jecxz
add
repz
pop
imul
rep
je
arpl
sub
rcpps
int3
pop
fs
xchg
add
adc
sub
xchg
push
sub
xlat
and
jmp
lds
sub
push
adc
push
sbb
dec
add
enter
or
add
cmp
clc
push
insl
aas
fldt
gs
imul
jmp
fisubrs
sub
cs
fs
out
cmp
arpl
xor
adc
and
cs
movsl
insl
jo
out
ljmp
cmpsb
xor
arpl
cs
fs
sub
jp
cs
cmp
insl
imul
je
fildll
insl
out
push
push
dec
out
addr16
pop
inc
je
sub
sub
test
jbe
lods
xor
imul
dec
pop
cs
push
add
add
out
dec
push
mov
push
cmp
es
inc
shrb
inc
mov
lcall
lods
stos
xor
cmpsl
xor
and
add
lock
jmp
out
add
lock
add
lock
push
dec
cs
sbb
pop
je
jge
outsb
adc
outsb
jno
xor
add
je
dec
jb
add
fstps
pop
mov
adc
in
push
outsb
fstps
jno
roll
adc
push
sbb
arpl
aas
xchg
push
pop
pop
pop
xor
inc
lock
out
lock
out
lock
int3
jno
popa
lret
xor
sub
push
pop
pop
mov
inc
inc
int3
outsl
pop
push
stos
push
pop
pop
mov
jb
outsb
mov
arpl
push
and
add
and
pop
inc
insb
lcall
dec
addl
push
out
lock
out
lock
imul
sbb
push
arpl
lock
cmp
push
add
push
jb
shlb
mov
je
in
push
add
repz
adc
push
push
push
mov
addr16
push
stos
insb
push
sub
insb
add
repz
sbb
data16
mov
add
inc
imul
sbb
or
push
push
mov
aas
jmp
repz
daa
test
lret
daa
test
mov
daa
test
pop
sub
hlt
daa
sub
in
push
sub
hlt
dec
sub
in
sub
or
jl
or
mov
sub
add
add
std
decl
add
sbb
dec
jns
sbb
sbb
popa
outsb
add
sbb
push
sbbb
push
add
push
inc
popa
sbb
add
add
pop
insb
jmp
fs
flds
add
add
leave
inc
pop
arpl
add
cltd
add
add
xor
jl
add
cltd
add
add
xor
cmp
add
movsl
inc
and
add
fisttps
int
pop
jno
in
add
jo
add
lock
imul
push
inc
xchg
shll
out
add
lods
out
push
mov
push
jae
lret
push
add
in
add
xor
jo
pop
shlb
push
int
imul
jno
jmp
add
add
lock
jb
or
xorb
xchg
add
add
dec
and
push
call
add
push
sub
insl
dec
insl
rcll
mov
xor
jae
push
out
lock
addr16
push
out
xchg
push
cli
jb
or
addr16
push
andb
push
push
mov
dec
imul
inc
arpl
push
inc
push
shlb
dec
cmp
adc
sbb
outsl
rolb
outsl
or
jns
lock
es
dec
cmp
and
or
mov
and
out
aas
dec
aad
jo
out
sub
or
arpl
enter
lea
add
bound
test
je
xlat
sub
add
in
insl
iret
inc
push
fstl
inc
arpl
or
insb
mov
add
inc
gs
daa
outsb
insl
xchg
aad
popa
lea
pop
arpl
cmc
inc
insl
jg
push
add
insl
cmp
js
jo
jo
pop
je
pop
outsb
das
mov
and
pop
insl
pop
add
outsl
mov
es
outsb
stos
push
fs
add
popa
outsb
popa
or
or
in
popa
jb
dec
arpl
cmp
int3
push
jp
std
gs
das
aad
xor
add
leave
push
popa
cmp
inc
dec
dec
xchg
sub
cs
repnz
push
mov
outsl
push
cmp
cmp
ljmp
or
mov
cld
xchg
add
insl
outsb
sub
inc
inc
add
mov
sub
push
sar
cs
pop
dec
xlat
adc
adc
push
or
push
popa
popa
xchg
out
push
cmp
leave
cs
jmp
push
je
sub
xchg
add
xchg
cltd
and
ret
pop
mov
sbb
out
push
or
mov
push
addr16
int3
pop
and
outsb
jno
pop
hlt
or
test
inc
mov
add
pop
shll
sub
sbb
mov
mov
addr16
add
insl
shlb
sbb
inc
cmp
es
and
pop
aaa
xlat
fs
outsl
mov
sbb
out
lock
add
and
sub
and
pop
scas
push
adc
ret
jo
push
sbb
insb
xor
gs
pop
lods
push
push
push
dec
add
push
pop
pushf
push
push
pop
movsb
insl
inc
bound
jmp
loop
lea
arpl
mov
or
xchg
push
pop
pop
mov
pop
add
or
xor
mov
insb
dec
shll
je
mov
fs
imul
addr16
iret
xor
push
push
cltd
outsb
sub
pop
bound
push
push
sti
add
xchg
addr16
adc
push
lcall
pop
arpl
push
dec
jb
dec
pop
inc
add
imul
sub
jo
dec
jo,pn
jnp
inc
addb
jb
ss
insb
aaa
je
jbe
inc
add
aas
jb
cmp
push
popa
popa
mov
das
popa
js
or
add
ljmp
je
arpl
cmc
push
outsb
push
or
cli
aaa
push
outsl
repnz
or
imul
popa
dec
imulb
gs
push
data16
xchg
push
push
mov
inc
insb
outsb
lock
insb
outsb
orl
ja
push
jge
fs
sbb
insl
add
push
jae
arpl
lahf
add
insl
jae
orps
inc
push
pop
fcoml
pop
aas
lock
pusha
push
or
push
movl
cltd
add
xchg
in
add
xchg
in
pop
jo
mov
mov
push
je
iret
pusha
outsb
inc
pop
loopne
pop
push
ss
fldenv
pop
stos
pusha
inc
pop
lods
imul
shlb
dec
fs
mov
inc
pop
mov
pop
stos
pusha
and
addr16
pop
jns
lock
jns
add
data16
push
roll
push
in
dec
insl
shll
popa
mov
pop
inc
dec
rorl
add
push
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
repz
add
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
mov
cld
push
pop
or
push
xor
xor
and
in
sub
adc
add
adc
add
pop
int3
add
pop
add
or
add
xor
push
loopne
je
mov
or
mov
hlt
sub
dec
jp
imul
dec
jb
arpl
mov
dec
outsl
ja
jae
jnp
pop
inc
js
pop
push
pop
cmp
pop
inc
push
sbb
xor
adc
add
lds
pop
jb
push
inc
popa
stos
hlt
pop
push
popf
cmp
pop
inc
aad
pop
dec
out
xor
adc
add
cli
aaa
inc
xchg
icebp
aaa
push
xchg
int
fs
pusha
insb
xchg
dec
addr16
push
push
inc
cwtl
push
insl
push
mov
pop
inc
mov
adc
dec
arpl
push
adc
pusha
dec
or
insl
add
and
inc
and
dec
insl
add
adc
jne
push
pop
add
ds
adc
loop
inc
fiadds
jne
inc
xor
movb
mov
dec
push
mov
sub
lock
or
push
scas
push
testl
out
pop
gs
inc
pop
int3
aaa
xor
fnstenv
add
and
push
mov
push
and
lcall
bound
adc
das
adc
inc
mov
test
pop
out
scas
push
pop
dec
xlat
push
dec
insb
lock
inc
push
rcll
add
cmp
xor
sub
push
jecxz
inc
adc
lea
mov
pushf
pop
addr16
add
xor
add
xor
and
pop
inc
mov
and
dec
stos
cmp
dec
pop
ja
add
mov
sub
int3
out
insb
mov
xor
movsb
filds
popf
adc
mov
push
pusha
arpl
pop
bound
mov
addr16
fcomps
dec
fdivs
or
inc
pop
or
fists
push
and
daa
push
jb
sub
imul
pop
push
ficoml
imul
pop
jb
push
imul
pop
jb
push
inc
insb
push
cmp
jne
sub
pop
xor
andl
push
data16
cmp
push
data16
ja
cmp
dec
bound
push
add
inc
pop
lcall
and
and
cmpsb
sub
lock
insl
ds
insl
cmp
mov
adc
mov
clc
popa
pop
pushf
or
aas
mov
lret
pop
inc
pushf
out
and
adc
arpl
cld
xor
mov
insb
push
mov
pop
je
mov
gs
push
mov
xor
dec
je
lcall
add
push
push
jg
pop
and
pop
pop
loop
xor
data16
cmp
aaa
sub
mov
push
imul
addr16
aaa
mov
pop
dec
mov
inc
xor
sbb
sub
pusha
lea
mov
sub
pop
add
pop
bound
pop
pop
out
xor
push
sbb
aam
dec
data16
inc
pop
int
sbb
inc
xchg
and
sub
sub
add
pop
test
data16
adc
mov
add
shlb
pop
int
arpl
movsb
inc
pop
cmp
adc
xor
push
je
nop
pop
arpl
mov
add
daa
je
in
push
pop
adc
lahf
push
pop
std
lahf
es
or
push
pop
das
push
pop
fs
pop
pop
mov
adc
sub
sbb
imul
fistpll
addr16
shll
popf
repz
adc
push
sub
pop
bound
xchg
sbb
movsl
add
daa
popa
pop
add
shlb
pop
pop
outsl
imul
and
insl
mov
popa
popa
outsb
in
popa
jb
pop
jb
aas
cmp
sbb
imul
imul
gs
add
sub
out
jb
lods
push
gs
mov
fs
lods
sub
push
jle
je
test
popa
pop
push
popa
insb
andl
test
ds
subb
add
add
mov
inc
add
jecxz
add
xchg
push
add
mov
lcall
les
pop
arpl
in
pop
jb
and
cmpsb
dec
push
and
gs
adc
mov
add
xchg
push
cs
shlb
and
pop
adc
inc
rcpps
andb
lret
push
add
and
push
je
jg
je
mov
arpl
jle
jb
ja
arpl
mov
xor
cmp
pusha
add
out
pop
cmp
shrl
pop
sarl
ss
jns
movsb
daa
pop
pop
adc
push
mov
daa
pop
push
lock
dec
push
movsb
out
imul
push
xor
cmp
xor
add
cs
dec
cmp
and
stc
push
push
cmp
aaa
pop
aaa
int3
add
pop
mov
ss
rcrl
pop
lods
aaa
inc
out
pop
sbb
add
cmp
sub
cltd
das
sub
xchg
in
js
repz
pop
xor
and
insl
mov
out
xchg
cmp
shll
pop
fsubs
jmp
hlt
push
insl
inc
add
cwtl
cmp
cltd
bound
scas
pop
push
adc
mov
and
mov
dec
push
cmp
dec
pop
add
cmp
inc
sub
xor
push
jb
cs
je
push
cmp
xor
insb
add
je,pn
imul
dec
push
push
jmp
popa
je
push
sub
mov
push
pop
pop
pop
jb
add
push
sti
dec
pop
mov
insb
insb
pop
and
popa
imul
push
push
add
popa
outsb
jae
imulb
fstpl
jb
testb
es
je
pop
imul
dec
outsl
out
pop
jae
fldt
pop
inc
in
bound
divb
imulb
and
cli
pop
inc
movsl
pop
popa
outsb
popf
repnz
jo
jecxz
insl
inc
fldl
push
pop
rclb
add
adc
pop
xor
cmp
arpl
popf
pop
insl
push
jb
insb
or
xchg
push
inc
fnstcw
push
pop
les
addr16
cs
pushf
cld
pop
pop
ret
push
shrb
movsb
push
dec
mov
add
sbb
pop
add
adc
add
add
pop
imul
push
ret
aaa
inc
xor
mov
and
lds
sub
push
adc
lods
aaa
inc
pop
rcrb
mov
aaa
mov
pop
mov
sub
das
mov
lods
aaa
rolb
push
shrl
dec
pop
mov
daa
inc
push
lock
pop
popa
xchg
sub
daa
dec
inc
mov
dec
pop
add
lock
bound
cmp
daa
xor
dec
xor
push
testl
push
add
aas
ss
and
and
scas
push
sub
jmp
xor
jb
repz
arpl
cmp
arpl
sub
jno
mov
push
insl
fwait
mov
xor
mov
xor
stos
xor
jmp
mov
jb
int
arpl
out
cmp
jb
enter
xchg
and
mov
sub
xor
xor
inc
xor
in
dec
jb
and
insb
in
add
and
popa
pop
xchg
out
dec
push
test
popa
pop
pop
cld
push
inc
push
out
dec
pop
jp
je
pop
add
dec
dec
add
add
jb
cmp
mov
push
add
clc
dec
dec
dec
push
jb
bound
lret
insl
popf
or
sti
pop
inc
mov
pop
jb
or
je
and
std
inc
push
push
stc
pushl
fstpl
gs
inc
push
lock
and
and
bound
push
pop
inc
or
bound
or
inc
xor
add
dec
jb
jb
and
xor
jno
je
aad
jno
mov
bound
mov
push
and
js,pt
mov
or
cmp
addr16
push
add
mov
test
lock
bound
pop
push
jb
repz
jo
scas
cmp
push
add
xchg
dec
pop
outsb
lock
push
jb
scas
cmp
repz
pop
xchg
push
aaa
arpl
jl
cmp
and
dec
pop
sub
daa
cmp
popa
aaa
xor
dec
pop
ret
xor
sub
mov
sbb
pop
lcall
cmp
daa
and
push
ucomiss
popa
cld
xor
mov
inc
sbbb
pop
shll
jns
mov
out
aad
dec
pop
aad
ss
add
pop
add
cmp
xchg
cmp
pop
mov
inc
push
cmp
cmp
in
pop
jae
dec
push
addr16
cmp
push
add
xor
jno
and
push
enter
movb
cmpsl
aaa
aaa
push
inc
xor
lcall
arpl
and
test
push
addr16
rclb
mov
add
cmp
popf
mov
je
lods
sub
jno
sub
fwait
and
movsb
in
arpl
dec
insl
pop
shrb
les
jb
mov
and
ficoms
fs
push
or
push
jae
pop
inc
icebp
push
pop
outsb
sbb
out
dec
gs
pop
pop
dec
jo
addr16
jno
add
pop
add
gs
pop
cs
pop
and
pop
outsl
ja
push
and
or
sub
jp
data16
and
gs
js
js
inc
jb
dec
popa
add
jo
lock
inc
jb
push
pop
pop
test
push
arpl
and
xchg
add
push
push
arpl
std
pusha
jno
sbb
dec
mov
push
push
mov
inc
mov
push
arpl
push
jb
mov
insl
dec
aam
pop
and
and
push
bswap
dec
jne
jle
pop
xor
bound
pusha
inc
and
and
popa
roll
add
aas
xor
xor
lock
scas
push
dec
push
roll
and
push
mov
push
es
ss
arpl
add
and
cmp
andb
push
pop
xor
and
aas
xor
sub
push
push
pop
cmp
or
pop
lods
push
dec
sub
daa
out
and
rcll
push
pop
sbb
enter
lods
das
and
pop
adc
fwait
daa
and
xchg
pop
loope
mov
and
sub
sub
jnp
add
insb
push
or
je
and
push
cs
add
jecxz
insb
jmp
ret
and
xor
inc
test
jb
pop
xor
and
add
sbb
push
or
xor
or
cs
add
fsubs
push
out
xlat
lret
clc
adc
pop
cld
andl
repz
push
xchg
int3
xor
test
and
sub
popa
aaa
outsl
add
jae
pop
pop
dec
push
pop
out
jae
mov
mov
xor
mov
fs
add
in
gs
jno
jmp
sti
pop
jb
add
bnd
add
std
in
pop
jo
out
ja
f2xm1
fs
out
sub
add
add
out
pusha
jae
jmp
dec
gs
push
popa
dec
out
pop
dec
mov
outsl
inc
gs
add
dec
push
push
cwtl
push
inc
pop
lock
sub
jo
jb
lods
dec
outsb
ret
xor
aam
and
enter
mov
lods
push
pop
mov
inc
add
xchg
aaa
dec
xchg
dec
and
jb
dec
sub
imul
pop
sbb
inc
pop
adc
ja
comiss
out
imul
add
adc
aam
popa
pop
les
push
pop
xor
pop
and
loope
add
sub
stc
jae
pop
ret
push
flds
cmp
xor
push
popf
inc
rcrl
es
xor
push
xchg
push
sarl
mov
add
daa
pop
xor
add
mov
pop
pop
xor
pop
cmp
addb
push
sbb
lea
and
subb
cmp
and
sbb
lock
sub
ss
push
sbb
inc
cmp
jecxz
and
es
out
adc
int
adc
into
sub
cmp
xor
xor
add
shrl
mov
and
repz
arpl
add
sbb
arpl
test
inc
dec
xchg
popf
inc
dec
jmp
mov
cmp
push
jb
sub
addl
jno
aas
push
je
mov
push
je
sbb
cmp
into
mov
adc
repz
add
adc
fs
dec
push
insl
fistpll
pop
fcmovne
push
dec
flds
add
cmp
stc
push
imul
pop
jb
or
cld
pop
inc
xor
arpl
jno
cmp
dec
popa
jp
pop
dec
addr16
jae
jne
pop
push
push
clc
pusha
jb
movsb
inc
push
aam
pop
jae
cmpsl
es
outsl
mov
pop
outsb
lods
or
mov
clc
jno
or
pop
inc
ljmp
add
add
or
out
out
jb
mov
fldl
insl
pop
dec
push
pop
pop
dec
dec
lock
xor
pop
xor
and
add
xor
xor
pop
pop
jmp
aas
das
scas
iret
inc
xor
xor
pusha
inc
xor
jns
xor
jecxz
xor
push
add
scas
jecxz
push
mov
inc
pop
mov
and
add
divb
arpl
inc
aas
sbb
lret
inc
das
and
out
xor
jae
sub
ss
jnp
cmp
push
push
icebp
loope
faddl
and
cmp
xor
cmp
add
cmp
add
das
mov
xor
and
pushf
push
xchg
sub
add
daa
mov
ret
and
push
cmp
and
lea
pop
out
nop
and
sahf
xor
dec
xor
inc
sbb
aas
cmp
push
inc
push
cmp
cmp
sub
and
and
mov
sbb
add
and
add
ss
into
xor
mov
cs
cmpsl
shll
jmp
add
adc
arpl
and
pop
lea
and
jmp
movsb
icebp
jb
or
outsb
jge
sub
push
push
xor
push
inc
dec
iret
xor
pop
rolb
xor
fistps
and
je
repz
add
repz
add
repz
add
repz
add
repz
add
flds
add
add
add
add
add
add
jecxz
gs
pushf
popa
insb
lods
add
jno
jecxz
mov
jo
fdivrp
jb
call
pop
arpl
outsb
gs
stc
insb
insb
jo
pusha
xor
ljmp
jo
pusha
xor
jae
leave
or
lods
loope
gs
dec
pop
outsl
int
push
je
idiv
jb
fisubs
mov
fidivs
out
dec
bound
es
mov
jp
scas
and
sub
and
negb
and
int3
xor
sbb
and
daa
mov
add
lret
aad
pop
jo
xorb
loop
add
mov
aad
pop
jno
xorb
ret
cs
pop
xchg
xor
bound
add
dec
xor
sbb
insb
test
pop
xchg
dec
daa
lock
add
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
and
int
or
fucompp
push
sbb
mov
add
cmp
sub
and
push
xor
sub
add
lcall
fdivrl
les
jnp
lock
xor
lock
sahf
sbb
cmp
push
cmp
lea
inc
sbb
xor
pop
das
je
aam
pusha
jmp
aam
jmp
xor
cmp
and
xchg
sub
in
jo
mulb
push
fiaddl
add
cmp
into
sub
fistps
mov
xorps
sbb
insl
fwait
jmp
inc
mov
sbb
pop
jge
and
xchg
add
inc
nop
std
sub
jmp
pop
pushf
fdivs
addr16
enter
lds
arpl
cs
jmp
mov
dec
dec
outsl
and
imul
sub
stc
mov
das
fchs
jae
add
jmp
loopne
je
stc
cmp
mov
data16
mov
pusha
inc
pop
pop
outsl
imul
out
dec
cmpsb
loop
mov
out
fs
test
pop
push
insb
jecxz
outsl
ja
pusha
jns
or
jmpw
push
ljmp
stos
in
jae
clc
pop
add
jecxz
imul
flds
add
jp
sub
push
jb
cmp
insb
dec
icebp
push
add
push
je
pushl
arpl
push
arpl
ds
and
sub
loope
popa
adc
pop
insl
pop
fldcw
pop
add
jecxz
adc
add
push
inc
push
les
rcrl
mov
sub
lock
and
sub
aad
jecxz
rcll
cmp
mov
jp
mov
inc
lods
push
cmp
dec
inc
mov
in
sti
inc
lret
cmc
negl
and
out
inc
sub
sti
repz
inc
sub
xor
inc
std
push
inc
sbb
push
push
xor
mov
sub
pop
sbb
add
mov
das
adc
ret
and
add
fxch
and
push
cwtl
aas
mov
daa
xchg
add
test
pushf
inc
mov
pushf
push
out
sahf
xor
mov
sbb
adc
pop
enter
ret
inc
into
and
rolb
les
arpl
and
and
dec
cmp
inc
inc
leave
or
dec
jno
or
pop
inc
sbb
push
inc
mov
add
sbb
rcr
arpl
xlat
push
push
mov
xor
inc
iret
and
pop
adc
add
adc
xor
out
sbb
xor
cltd
orps
mov
out
inc
js
pop
add
add
add
sbb
loope
pop
adc
imul
cwtl
loope
add
jle
mov
imul
cwtl
loope
pop
adc
imul
add
xor
add
fidivs
mov
or
ds
push
xor
fbstp
xor
pop
inc
mov
fbstp
and
lock
je
sub
lock
add
add
cmp
lock
lock
add
lock
add
lock
add
lock
xor
lock
lock
add
lock
xor
lret
lock
popa
lock
lock
lock
pop
lock
lock
lock
add
insl
push
push
push
fnstenv
push
sub
mov
loop
add
mov
mov
dec
test
lds
dec
mov
mov
xchg
sbb
push
xchg
xor
xorb
push
xor
xor
daa
and
sub
xor
fs
daa
bound
add
sub
push
inc
xor
push
dec
sbb
and
lret
daa
cmp
add
add
xor
add
adc
xor
cld
sub
xor
cmp
sbb
sub
std
sbb
fwait
push
jmp
arpl
push
push
jmp
sbb
outsb
jmp
popf
sub
xlat
sbb
add
inc
push
das
dec
aaa
add
pop
dec
push
sbb
pop
addr16
out
add
add
pop
sub
and
out
xor
shl
inc
or
inc
add
inc
push
addr16
out
into
mov
call
shrb
insb
add
sub
add
and
mov
push
jge
cmp
push
mov
dec
inc
jnp
add
loopne
push
pop
or
dec
dec
dec
inc
add
push
inc
push
dec
dec
add
add
outsl
add
add
out
outsl
cmp
outsb
ja
fldenv
pop
ljmp
in
fsubrs
hlt
in
pop
jbe
out
gs
ljmp
icebp
fidivs
arpl
sub
mov
scas
sub
lock
dec
inc
pop
gs
aad
inc
push
lock
push
lds
pop
mov
das
insl
int
push
insb
mov
add
pop
sub
das
insl
test
add
xchg
inc
cmp
dec
dec
inc
mov
add
xor
sbb
pop
fistpl
add
sbb
loopne
imul
inc
push
adc
push
inc
adc
dec
adc
roll
or
sbb
sub
xor
add
fstps
push
cs
xor
add
daa
out
mov
shlb
dec
mov
roll
mov
loopne
cmp
sub
push
fwait
push
xchg
sbb
subl
dec
add
sub
xor
xor
out
lock
out
lock
xor
push
out
sub
xor
inc
inc
sbb
pop
sbb
pop
sbb
add
into
daa
add
shrb
add
ret
shrl
aaa
dec
scas
repz
insb
enter
mov
daa
es
sbb
popf
adc
je
adc
jno
fcoml
jmp
mov
fs
pop
jno
filds
jge
pop
arpl
push
pop
pop
enter
mov
sbb
and
pop
das
adc
push
inc
es
inc
add
inc
inc
insb
dec
sbb
inc
sbb
clc
sbb
or
xor
repz
cs
add
inc
in
daa
sub
inc
outsb
mov
add
aad
outsb
out
insl
sub
insl
fs
dec
imul
add
add
push
outsl
outsl
sub
xor
inc
push
jns
outsl
imul
add
add
ss
add
inc
popa
jae
in
sbb
dec
dec
pop
aaa
push
inc
jmp
pop
inc
fucomp
outsb
jae
xlat
pop
push
lock
arpl
es
sub
ljmp
lret
ss
fsubrs
sar
sub
std
inc
aaa
vpor
and
inc
xor
bound
push
pushf
inc
xor
add
inc
pushf
pop
add
sub
outsb
xchg
lods
xlat
ja
sbb
xor
pushf
repnz
dec
mov
lods
xor
cmp
in
and
cmp
loop
arpl
and
pop
loope
cli
push
add
and
sub
and
adc
fiaddl
int
cmp
sbb
and
mov
add
add
push
into
xor
dec
mov
add
sub
mov
cmp
dec
ret
push
int
mov
lods
cmp
inc
shll
sbb
sbb
rorl
movsl
inc
cltd
inc
movsb
xor
es
icebp
and
mov
cmp
ss
xor
and
inc
ds
sub
push
leave
add
xor
insb
or
sub
cmp
pop
jno
clc
sbb
sub
out
sbb
fildll
add
push
inc
or
addr16
mov
sbb
sbb
xor
add
adc
fwait
mov
idiv
call
repz
xlat
sbb
xlat
out
xchg
sahf
jecxz
rcll
jmp
add
in
xor
fst
sub
das
jecxz
or
fisttps
add
cli
jmp
fsubrp
jno
in
outsb
clc
roll
stc
dec
dec
imul
aam
inc
cmpsb
shlb
cmp
pusha
jb
cmp
dec
or
fwait
in
call
hlt
push
cmp
inc
imul
in
pop
imul
popa
jne
add
pushl
jno
push
insl
data16
cmp
hlt
bound
cmpsl
jecxz
gs
adc
push
cmp
scas
push
insl
push
fisubrl
inc
inc
dec
push
dec
repz
sbb
xor
add
sbb
add
jno
notl
add
xor
lret
add
ret
das
dec
rol
and
ror
jno
add
mov
fs
jb
arpl
imul
das
add
and
les
arpl
jnp
jo
jns
cs
mov
je
sbb
adc
sub
gs
and
push
push
and
pop
pop
push
pop
and
inc
add
xor
in
and
xor
sub
std
jecxz
and
sub
add
adc
out
and
pop
adc
repz
fistpl
and
add
and
das
xlat
sub
jecxz
and
cltd
pop
lock
mov
shlb
mov
pushf
sub
xchg
adc
test
add
rclb
je
add
adc
add
aaa
and
add
add
inc
call
xor
aam
insb
or
loope
arpl
pop
jmp
push
push
out
adc
ret
sbb
cmp
mov
sub
and
shlb
enter
rolb
pop
cmpsl
scas
ss
xchg
aad
add
loope
addr16
decl
out
jo
add
push
std
imul
jae
lcall
imul
cmp
cli
pop
inc
or
jb
xor
incl
xor
sub
dec
clc
shrb
fcmovbe
jo
add
pop
inc
loope
push
hlt
xor
add
mov
inc
cltd
add
rorl
add
fistl
aam
add
mov
pop
pop
pop
add
add
outsl
add
mov
add
outsl
add
xchg
outsl
add
out
add
out
add
dec
out
add
push
out
add
dec
out
add
push
out
add
inc
out
add
add
out
add
out
add
sbb
add
out
add
or
add
in
add
add
insl
add
outsb
add
outsb
add
jle
add
outsb
add
pop
outsb
add
pop
pop
cmpsl
add
add
jl
add
jge
add
jl
add
jl
add
bound
add
insl
daa
add
pop
daa
add
pop
daa
add
pop
daa
add
pop
daa
add
pop
daa
add
pop
daa
add
pop
daa
add
add
pop
daa
add
pop
daa
add
pop
daa
add
daa
add
lds
add
daa
add
lds
add
les
add
ret
cmpsl
add
ret
mov
cmpsl
add
int
test
repz
lret
test
repz
shrl
repz
test
repz
test
hlt
or
in
mov
sub
push
add
repz
add
repz
add
repz
add
repz
add
repz
insb
adc
and
leave
cmp
jno
hlt
aaa
push
sub
cmp
cmp
cs
pop
and
repz
je
push
sub
mov
cmp
jae
inc
add
or
and
jo
cmp
imul
add
lods
and
add
pop
or
in
ja
jp
pop
or
stos
and
stc
add
and
fdivs
jmp
cli
add
ret
test
push
and
mov
pop
and
mov
loop
insb
xchg
dec
js
cli
std
jae
fmuls
outsl
push
cmp
popa
js
in
jb
ret
add
int
add
add
aaa
lock
add
lock
inc
popf
outsl
es
test
pop
movsb
xorb
mov
insb
xchg
test
add
outsl
adc
xchg
push
dec
loope
pop
dec
inc
daa
dec
inc
cmp
dec
out
adc
aaa
xor
inc
add
dec
loope
arpl
repnz
pop
stc
outsb
inc
lock
xchg
sub
add
jmp
imul
push
into
sub
aaa
les
rcll
fldt
loop
mov
xlat
sbb
das
shrl
les
mov
sbb
and
sub
xor
sub
inc
adcl
jns
mov
push
sub
pop
sub
dec
sub
add
push
out
add
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
cltd
push
add
mov
add
mov
add
pop
push
add
pop
push
add
dec
push
add
dec
push
add
pop
push
add
pop
push
add
dec
push
dec
push
add
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
flds
add
leave
add
add
flds
add
leave
add
add
cltd
add
add
mov
add
lock
add
lock
add
lock
add
lock
add
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
out
push
pop
insl
lret
pop
mov
xor
add
pop
jo
stos
mov
addr16
pop
movl
hlt
push
jmp
add
out
mov
out
adc
out
add
out
clc
push
out
in
push
out
repnz
out
aaa
nop
out
lock
out
lock
out
pop
nop
out
pop
nop
out
lock
out
pop
nop
out
lock
out
lock
addr16
push
cmpsl
add
push
pop
add
add
push
testl
lock
jecxz
lock
jmp
add
push
add
ret
out
shll
call
call
movsl
frstor
repz
add
cmpsb
fisubs
mov
popa
add
lods
inc
fsubl
add
cld
add
pop
sti
add
incb
call
in
push
out
notb
and
sbb
and
adc
add
pop
add
push
idiv
std
add
repnz
jecxz
cli
inc
in
and
enter
mov
loope
sbb
repnz
leave
mov
add
or
add
mov
add
mov
lcall
or
decl
mov
add
incb
pop
mov
decl
std
add
std
add
add
add
dec
or
add
std
decl
std
add
mov
add
mov
decl
mov
decl
or
add
or
add
or
decl
or
add
or
dec
or
add
std
push
fwait
std
inc
lahf
add
icebp
lahf
add
mov
std
lock
add
lock
add
lock
std
lock
add
icebp
lahf
add
add
icebp
lahf
std
jg
add
lock
add
outsl
lahf
std
addr16
icebp
lahf
std
call
add
lock
std
push
mov
std
lock
add
lock
add
icebp
mov
std
incb
lahf
std
lock
std
push
sahf
std
push
popf
std
push
popf
add
lock
jmp
xlat
mov
dec
mov
add
push
jecxz
add
mov
xchg
xor
out
lock
pop
test
pop
out
add
movl
loopne
movl
add
out
lock
xor
out
loopne
pop
add
push
pop
add
xchg
and
pop
add
pop
pop
test
xchg
add
push
out
lock
xor
movl
add
loopne
movl
repz
add
jae
decl
insb
push
add
jae
jg
repz
je
add
repz
add
je
decl
in
idivb
repz
enter
jmp
jae
jg
jae
add
repz
jae
or
push
add
jae
jg
insb
idiv
or
push
add
jae
add
repz
orb
push
add
add
jae
jg
repz
or
push
or
idiv
enter
leave
repz
or
idiv
decl
xchg
add
push
add
flds
add
leave
push
add
stc
adcb
leave
xchg
add
or
add
push
add
xchg
push
add
mov
add
cltd
push
add
xchg
or
add
push
add
popa
push
add
add
push
push
add
dec
push
add
popa
or
or
add
pop
push
add
push
or
add
add
and
add
sbb
add
or
add
or
add
sbb
add
lock
add
call
xchg
clc
lahf
incl
lock
add
lock
call
xchg
incl
clc
lahf
push
lahf
add
call
lahf
add
clc
cmpsl
add
add
lock
push
lahf
add
lock
incl
clc
lahf
call
lahf
push
xchg
add
lock
incl
call
xchg
add
clc
lahf
push
lahf
add
lock
add
call
lahf
add
lock
add
call
push
out
add
push
out
add
push
out
repnz
filds
lock
out
repnz
out
add
fiadds
lock
out
add
repnz
out
add
lock
filds
repnz
out
repnz
call
in
mov
lahf
mov
lock
addr16
pop
push
add
call
add
push
out
out
out
filds
push
add
push
out
lock
addr16
pop
call
add
push
out
daa
mov
jmp
adc
add
add
push
add
xrelease
call
or
std
push
repz
add
xchg
imul
xchg
imul
pop
add
push
add
xchg
call
xchg
pop
add
pop
add
push
add
repz
add
repz
add
xchg
pop
add
xchg
imul
xchg
call
push
pop
add
add
std
push
repz
add
cwtl
mov
add
or
add
or
addb
mov
jge
mov
addb
push
lcall
std
dec
or
add
add
addb
push
decl
jge
cltd
or
add
or
add
or
add
add
or
add
or
or
add
add
dec
or
inc
pop
or
inc
pop
or
inc
lock
add
lock
add
mov
add
repnz
add
mov
add
mov
add
lock
add
mov
add
mov
add
mov
add
repnz
add
xor
add
jo
add
outsl
add
xor
or
outsl
add
repnz
add
add
xor
or
outsl
add
lock
add
xor
add
outsl
add
repnz
add
xor
or
outsl
add
xor
or
outsl
add
mov
add
mov
add
repnz
out
clc
out
lock
out
lock
add
enter
enter
push
out
lock
enter
or
add
push
out
call
add
enter
push
out
lock
add
out
clc
push
out
lock
out
call
or
add
add
es
xor
out
lock
xlat
inc
xor
out
xor
testl
xor
out
mov
out
lock
inc
mov
add
repz
fdiv
push
and
repz
call
repz
and
mov
add
add
repz
add
repz
fdivs
push
add
mov
clc
mov
and
repz
add
repz
pop
fpatan
pop
jmp
xor
call
xor
add
xor
call
repz
and
xor
and
repz
add
repz
pop
jmp
xor
pop
jmp
xor
add
repz
and
pop
pop
inc
add
add
lcall
dec
pop
add
sub
decl
add
cmp
aas
and
aas
add
pop
inc
and
aas
add
aas
and
pop
add
sub
inc
and
pop
add
or
decl
pop
inc
and
aas
add
mov
lcall
flds
add
fld
aas
and
push
add
mov
lcall
cltd
push
and
mov
and
add
push
add
cltd
jle
decl
insl
stc
pop
lock
stc
pop
in
insl
stc
pop
hlt
outsl
add
lock
add
lock
add
in
insl
add
lock
add
in
insl
add
hlt
insl
stc
jmp
jo
push
insl
stc
pop
lock
add
lock
stc
push
insl
add
hlt
outsl
add
in
outsl
stc
pop
hlt
insl
add
lock
add
hlt
outsl
stc
call
insl
stc
incl
add
insl
stc
pop
in
outsl
stc
pop
lock
add
lock
add
hlt
outsl
stc
pop
lock
add
hlt
outsl
stc
pop
lock
add
lock
stc
push
push
jmp
add
or
add
or
add
push
jmp
add
or
sti
dec
add
out
fisttps
jmp
sti
sysret
out
pop
or
sti
pop
sub
sti
out
or
add
add
or
sti
filds
out
lock
jmp
sti
pop
or
add
push
jmp
add
or
sti
movl
out
scas
sub
rolb
daa
hlt
lahf
adc
repz
addb
repz
sub
jmp
jl
or
jmp
hlt
or
jmp
inc
add
jmp
add
inc
add
test
and
add
repz
test
add
std
jmp
repz
test
jecxz
adc
repz
add
repz
add
hlt
push
adc
ret
jg
sub
add
leave
jp
add
jae
adc
or
add
add
or
pop
jae
lcall
jnp
add
std
wbinvd
or
add
or
adc
add
mov
add
dec
add
adc
add
pop
jae
wbinvd
add
add
add
pop
add
pop
add
adc
add
or
setns
psubusw
add
mov
adc
jp
add
jp
add
jae
decl
add
add
lock
add
add
add
shrb
xchg
jo
add
outsl
add
lock
and
pushl
sub
outsl
jo
add
outsl
add
lock
sub
push
and
decl
sub
inc
jo
add
outsl
add
lock
daa
ljmp
inc
sub
daa
enter
jo
add
outsl
add
lock
incl
mov
jnp
push
outsl
add
lock
add
add
lock
call
pop
sub
iret
outsl
add
lock
add
lock
daa
and
jge
sub
cmpsl
jge
add
push
out
lock
pop
and
jge
sub
out
lock
out
lock
stc
and
mov
pop
jge
sub
out
lock
out
lock
and
sub
lock
out
lock
out
add
lock
out
lock
out
lock
fildll
jge
sub
jl
sub
jl
sub
jl
sub
jl
sub
jl
sub
jl
sub
jl
jnp
jl
imul
std
sbb
jnp
mov
lret
jnp
iret
fstpt
mov
jnp
jnp
leave
iret
jnp
fistl
jl
sub
jl
aaa
or
add
or
sbb
sbb
or
or
fdivrs
and
jnp
sub
enter
fdivrs
out
jnp
pop
leave
jnp
stos
enter
sbb
sbb
or
sub
std
pushl
cs
call
sub
std
dec
cs
call
and
call
add
and
jmp
and
pushl
and
std
lcall
add
pop
and
incl
and
ljmp
std
dec
and
cmp
add
and
decl
pop
add
inc
and
jmp
std
pushl
and
incl
std
incl
and
push
lret
and
call
sub
dec
sbb
incl
add
jo
add
jne
pushl
jno
jmp
jo
add
xor
xchg
and
jg
and
ja
and
outsl
loop
jmp
add
lock
and
dec
and
inc
lods
and
aas
lcall
das
les
jmp
ret
pop
shlb
call
insb
and
pshufw
lock
and
add
jge
push
push
out
lock
out
sub
jns
sub
jns
sub
jns
sub
jns
sub
jns
sub
jns
sub
jns
sub
jns
sub
jns
sub
xchg
sub
popf
sub
mull
pop
jns
daa
push
jns
daa
dec
jns
sub
sbb
sub
add
jns
daa
das
jns
daa
daa
jns
daa
pop
jns
daa
pop
jns
daa
vmwrite
daa
pop
jns
adc
iret
jns
daa
pop
js
out
push
js
iret
push
js
stos
push
js
mov
push
js
popa
push
js
dec
push
js
mov
xchg
jns
mov
jns
ret
xchg
jns
mov
xchg
jns
rcll
jns
das
add
push
jns
xor
push
jns
adc
push
jns
jmp
push
jns
cmpsl
push
jns
inc
adc
dec
adc
push
adc
sti
adc
add
add
add
arpl
decl
add
add
ljmp
fs
jg
decl
ljmp
fs
jmp
decl
fs
pushl
add
fs
decl
arpl
jmp
decl
pushl
stc
incl
arpl
fbld
lcall
add
cmpsl
arpl
pushl
arpl
dec
arpl
push
pop
loope
pop
sub
decb
leave
loopne
pop
loopne
pushl
loope
mull
out
pusha
add
lock
incb
add
push
in
xlat
pusha
add
lock
add
mov
jae
cmpsb
in
imul
aas
repnz
pop
or
jmp
and
and
insb
add
lret
pop
push
int3
out
lock
mull
push
lock
lock
insb
jecxz
imulb
jne
decl
add
add
pop
int3
sub
pusha
lret
pop
add
xchg
call
ret
add
or
leave
sub
fwait
lock
call
in
jne
add
cli
xchg
cmc
push
idivl
jne
add
cli
jp
push
call
incb
sub
jecxz
ret
and
pop
jmp
cld
cmp
add
out
pop
push
sub
pop
call
sbb
loope
or
shl
sbb
jecxz
push
add
aam
daa
add
pop
es
int3
incl
push
add
call
jno
adc
bound
adc
outsl
rolb
ljmp
adc
push
rcl
dec
mov
push
add
in
bound
ljmp
bnd
xchg
shlb
aad
pusha
mov
std
cmp
leave
bound
imulb
add
divl
repz
and
popa
in
or
ds
inc
jmp
inc
imul
js
inc
sbb
add
imul
pop
add
or
inc
dec
jb
cmp
je
jbe
arpl
push
imul
push
outsl
insb
outsb
imul
je
lods
add
bound
inc
dec
data16
xor
std
call
jns
insl
leave
popa
add
inc
imul
outsl
inc
imul
pop
inc
imul
je
lock
inc
aad
shrb
in
bound
inc
lcall
sti
add
push
shll
push
in
insb
xchg
mov
add
add
aas
in
bound
lcall
icebp
mov
bnd
fwait
int3
insl
push
addl
jae
xchg
arpl
shr
inc
or
in
sbb
icebp
jbe
pusha
add
and
jae
cs
dec
loop
out
aam
or
jecxz
pmaxsw
out
lret
out
shr
clc
mov
clc
out
add
out
add
lret
lock
out
mov
scas
out
mov
out
cmc
mov
rclb
xchg
ljmp
cltd
ret
mov
xor
loopne
loop
in
xchg
icebp
adc
dec
lock
dec
clc
push
aad
xor
cmc
cmp
or
in
decl
loop
xor
add
jno
pop
icebp
loop
adc
and
mov
inc
add
in
push
inc
call
pop
fcomi
jge
movsl
push
cmc
push
rclb
inc
mov
repz
add
repz
movsl
into
hlt
dec
xchg
xlat
cmc
imul
push
mov
std
shl
leave
bound
shll
mov
jno
mov
add
lds
hlt
bound
xchg
fsubrl
jp
dec
outsb
sub
push
in
or
push
push
xor
js
je
add
add
jnp
outsb
fnstcw
arpl
ja
add
or
inc
imul
cmp
jno
scas
or
imul
jp
outsb
mov
or
sbbb
add
pushw
push
lods
add
pop
pop
outsb
insl
bound
imul
pusha
outsw
inc
inc
data16
cmp
fidivs
lret
out
ret
imul
mov
sbb
cmp
push
in
fistps
and
inc
mov
jmp
xchg
lock
jae
sub
insb
xchg
out
mov
dec
loopne
test
push
add
lock
ljmp
mov
add
mov
out
dec
push
xchg
mov
or
inc
and
push
mov
jo
jg
pusha
adc
mov
bound
pop
push
jmp
loopne
call
adc
sbb
call
in
ss
xor
push
pop
sbb
sar
fnstenv
add
inc
outsb
mov
mov
jecxz
int
out
sub
out
xchg
add
jecxz
shlb
out
out
xchg
ret
into
ret
jle
mov
fidivrs
add
mov
mov
push
pop
and
and
lea
adc
ljmp
repz
lods
mull
sub
dec
mov
movb
repnz
popf
call
jb
cmpsl
cmc
ds
aaa
loop
maxps
push
or
bound
hlt
cmp
sbb
loop
stc
dec
fildl
sbb
fdivs
sbb
ret
fnsave
mulb
sub
push
xor
enter
mov
mov
push
add
xchg
bound
add
mov
outsl
push
imul
insb
sbb
fs
sub
je
js
arpl
push
outsl
insb
enter
and
sub
je
jns
popa
cmc
gs
jb
inc
std
jmp
pop
imul
jno
in
imul
sub
jb
inc
std
decl
add
sub
push
add
cmp
dec
add
mov
add
fwait
pop
jno
mov
ljmp
xor
sub
in
jno
repnz
inc
aas
pop
add
ljmp
sbb
add
lock
in
add
jecxz
or
add
lock
fidivs
lock
ss
inc
lock
pusha
out
aas
inc
add
adc
bound
add
add
insb
mov
pop
loopne
lock
lcall
loopne
fs
add
lock
loopne
pushaw
add
push
lcall
ficoml
add
call
out
and
sbb
adc
dec
add
pop
and
push
jecxz
icebp
adc
push
repnz
dec
call
add
mov
flds
loopne
cmc
add
mov
add
add
cmc
or
xchg
fdiv
and
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
out
lock
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
flds
add
add
add
add
add
add
add
add
add
add
add
add
int3
int3
inc
jl
push
jnp
pop
mov
jle
ljmp
pop
ret
and
shlb
leave
adc
outsl
xor
or
clc
jge
cld
imul
mov
xchg
aas
mov
enter
lret
lds
adcl
inc
call
mov
add
add
jge
in
ret
test
add
jge
clc
jnp
testl
jnp
testl
imul
mov
or
dec
clc
jge
cld
mov
repz
push
add
stc
jnp
hlt
jae
decl
js
dec
hlt
sub
push
lock
call
clc
lods
repnz
decl
add
lods
dec
dec
call
jae
or
xor
sbb
or
mov
mov
shr
mov
add
fistl
dec
loopne
mov
jmp
sbb
mov
ror
push
int3
int3
lods
push
int3
int3
movsb
push
int3
int3
inc
xchg
in
adcl
mov
mov
sub
or
add
add
or
jnp
out
pop
cld
mov
mov
mov
imul
or
aaa
cld
mov
mov
xchg
dec
inc
cld
lock
add
or
mov
mov
add
sti
cmpl
jae
xchg
inc
cld
jnp
orl
out
xlat
sti
mov
xor
mov
popl
lret
ss
add
dec
dec
int3
int3
mov
int3
int3
lods
push
int3
int3
movsb
push
int3
int3
and
mov
inc
xor
pop
jns,pt
pop
pop
xor
int3
sub
int3
int3
and
int3
int3
movsl
xchg
in
mov
push
dec
fstpl
ror
push
int3
int3
sub
int3
int3
and
int3
int3
movsl
xchg
in
adcl
add
incb
add
lea
dec
outsl
add
popl
and
inc
fs
imul
push
jnp
or
lret
lahf
mov
ror
nop
in
push
scas
lret
lock
add
jmp
inc
decl
pop
and
jecxz
mov
pop
push
cld
negl
dec
xor
mov
jmp
je
push
add
outsl
add
inc
sbb
mov
push
int3
int3
sub
int3
int3
and
int3
int3
inc
nop
in
mov
push
nop
pop
mov
notb
lock
mov
int3
int3
lods
push
int3
int3
movsb
push
int3
int3
inc
nop
in
adcl
add
adc
xor
xchg
or
popl
jae
or
add
push
push
add
lock
pop
mov
lea
imul
inc
jnp
sti
mov
lds
add
mov
mov
out
adc
jno
std
push
xchg
mov
imul
add
lea
jnp
lsl
lea
repz
push
call
add
les
mov
std
mov
in
adcl
call
aam
mov
nop
push
call
push
dec
lock
out
add
mov
add
push
mov
add
fisttps
loopne
or
add
push
imul
mov
mov
adc
add
mov
sti
mov
ficoml
mov
add
mov
lea
repz
jns
imul
inc
add
fisttps
jns
jmp
lods
pop
add
lock
mov
test
lock
mov
cmpl
lods
pop
push
push
mov
test
add
add
or
jo
sbb
or
mov
dec
les
std
subl
mov
rolb
lea
add
lret
cwtl
js
jg
les
imul
mov
mov
mov
lea
jnp
jmp
xor
xchg
insb
xchg
mov
add
mov
sbb
std
lcall
mov
pop
xor
int3
movsl
mov
adcl
lock
fldl
inc
lock
pop
arpl
inc
lock
inc
outsl
ds
iret
pop
add
imul
push
imul
push
cmpsl
mov
ror
push
int3
int3
and
mov
push
inc
add
lock
mov
rol
and
int3
int3
movsl
mov
adcl
cmpsb
and
jnp,pt
das
mov
sarb
imul
mov
dec
hlt
jnp
repz
mov
imul
je
jae
testl
fistpl
mov
xchg
dec
sbb
mov
jne
xchg
inc
clc
jnp
or
add
cmp
mov
xchg
inc
adc
pop
mov
fwait
decl
mov
and
fldl
xor
dec
add
mov
inc
mov
lods
dec
int3
int3
xor
int3
int3
sub
int3
int3
and
int3
int3
lds
les
pop
xor
lock
add
mov
lahf
cld
popf
decl
mov
les
jns
repz
xchg
dec
clc
add
inc
xchg
adc
cmp
mov
push
pop
push
hlt
xchg
xor
lock
aam
enter
push
mov
jmp
xchg
or
repnz
decl
and
or
jnp
rcll
push
jg
lock
add
outsb
sahf
decb
add
mov
sub
repnz
add
lock
mov
add
add
lock
adc
call
xor
lock
dec
add
std
subl
add
mov
mov
pop
loop
aad
ror
dec
int3
int3
inc
nop
in
mov
xlat
add
sub
or
int3
lods
dec
int3
int3
movsb
dec
int3
int3
lds
lds
pop
jo
lock
add
jns
xlat
mov
pop
dec
cmp
mov
mov
repnz
mov
lea
cwtl
repnz
or
movsl
or
clc
out
xchg
or
out
push
out
ljmp
lock
push
push
pop
push
lock
mov
mov
dec
clc
mov
push
xchg
mov
std
xorl
add
add
add
outsl
pop
mov
lea
jnp
fisttps
cmpsl
mov
cmp
shl
enter
mov
dec
call
movsb
sbb
adc
fisttps
loopne
mov
pop
shl
sbbl
lods
inc
sub
mov
mov
repz
adc
mov
mov
mov
push
add
mov
or
sub
out
orb
cld
pop
add
xor
lahf
cld
sbb
mov
jmp
les
imul
push
inc
lock
jae
jnp
lock
mov
dec
lcall
mov
add
rcrl
push
out
ljmp
lock
mov
mov
inc
adc
push
lock
push
xor
lock
adc
out
ljmp
lock
mov
mov
add
mov
mov
jae
aam
xor
add
in
aas
push
imul
push
or
std
push
andb
dec
xchg
dec
fsubrs
xlat
mov
nop
inc
loopne
lret
fisttps
mov
push
mov
xor
lock
xchg
xor
std
addl
xor
mov
test
add
dec
fdiv
mov
dec
add
push
loopne
xor
lock
xchg
add
lock
add
call
repnz
pop
push
mov
pop
std
pushl
or
sub
mov
add
mov
mov
repnz
inc
lock
sbb
sub
add
add
or
mov
dec
mov
push
push
inc
lock
jne
pop
std
subl
aam
sbb
idiv
pop
test
add
out
xor
decl
lock
push
stc
push
std
xorl
aam
call
rcr
std
xor
lock
and
push
cwtl
sub
jmp
add
push
inc
lock
icebp
push
mov
mov
in
add
inc
lock
push
inc
outsb
loop
push
push
mov
mov
roll
int3
int3
and
int3
int3
lds
mov
mov
int3
int3
movsl
mov
push
sahf
scas
mov
imul
push
xor
mov
aas
mov
pop
add
mov
int3
int3
and
lret
add
cmpsl
cld
push
xor
push
call
jae
or
call
cld
pop
push
xor
push
jmp
dec
int3
int3
lds
lds
pop
add
lock
inc
fmul
push
add
das
int3
repz
push
add
lods
push
add
lock
lds
pop
add
lock
add
mov
call
mov
int
std
add
fimull
in
dec
push
inc
lock
add
lock
or
cmc
dec
push
inc
lock
add
lock
lock
add
add
lock
add
jae
clc
push
xor
add
loopne
in
push
inc
lock
mov
imul
push
inc
lock
add
repz
pop
mov
jg
fadd
jmp
or
pop
sti
mov
cld
movsl
inc
in
add
lock
inc
lock
xor
mov
inc
pop
ret
push
add
xor
std
adc
xchg
out
push
inc
lock
or
xor
push
call
jae
add
xor
mov
aad
add
std
subl
mov
movsl
hlt
push
mov
push
call
jae
or
lods
push
xchg
adcb
mov
inc
loopne
jg
fadd
pop
scas
sti
andps
push
mov
mov
inc
cmpsb
or
xor
add
mov
or
repz
fdivrs
idiv
mov
add
repz
add
jge
in
leave
sti
add
jg
loopne
add
push
xor
xchg
pop
sahf
mov
add
lock
jmp
xorl
xchg
jg
clc
or
out
jae
jg
hlt
popf
mov
mov
ds
leave
testl
lock
mov
add
repz
hlt
push
xor
add
orb
xchg
decl
lock
push
inc
lock
push
inc
lock
dec
testl
idivl
jno
add
lock
mov
push
iret
mov
pop
push
inc
lock
call
call
jae
add
std
pop
push
inc
add
lock
aad
push
std
test
faddl
xor
pop
sub
lock
add
adc
push
xor
add
aam
xor
xchg
call
mov
cli
push
inc
lock
xor
inc
int3
int3
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
add
add
lock
add
call
xor
xor
xor
test
lock
add
inc
pop
add
sarl
pop
cmp
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
jne,pt
xchg
ds
int
cmp
jae
fwait
aas
cltd
cmp
aas
inc
cmp
aas
inc
cmp
aas
add
inc
cmp
add
push
add
jl
add
cmc
sbb
jno
xchg
mov
dec
xor
xor
stos
xor
ss
loope
sbb
sysexit
xor
push
xor
xor
jg
insl
xor
xor
xor
xor
xor
xor
xor
aad
sub
xor
xor
xchg
xor
stos
xor
add
xor
xor
xor
hlt
xor
pushl
in
xor
xor
xor
adc
sub
xor
jbe
mov
xor
sbb
or
out
and
mov
xor
push
cmp
xor
xchg
add
push
add
lock
add
lock
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
add
lock
lock
add
lock
add
lock
add
lods
fiaddl
mov
inc
add
inc
add
inc
add
fiaddl
enter
int3
fiaddl
rcr
inc
add
fiaddl
fcomp
inc
add
fiaddl
loopne
inc
add
fiaddl
call
fiaddl
lock
hlt
fiaddl
clc
fiaddl
cld
fiaddl
add
inc
add
inc
add
fildl
or
inc
add
fildl
adc
inc
add
fildl
sbb
inc
add
fildl
and
inc
add
fildl
sub
inc
add
fildl
xor
inc
add
fildl
cmp
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
fildl
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fildl
enter
int3
fildl
rcr
inc
add
fildl
fcomp
inc
add
fildl
loopne
inc
add
fildl
call
fildl
lock
aam
inc
add
fildl
clc
fildl
pushf
fildl
cld
fildl
add
inc
add
inc
add
inc
add
faddl
cwtl
fildl
or
inc
add
faddl
sub
inc
add
inc
add
faddl
inc
add
inc
add
faddl
and
inc
add
inc
add
faddl
sub
inc
add
faddl
xor
inc
add
inc
add
faddl
cmp
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
fildl
pop
faddl
and
inc
add
inc
add
add
fiaddl
push
faddl
jo
inc
add
add
inc
add
add
faddl
mov
inc
add
inc
add
inc
add
faddl
mov
faddl
test
inc
add
fildl
lods
faddl
mov
inc
add
inc
add
inc
add
faddl
inc
add
faddl
int3
faddl
xchg
faddl
int3
fildl
rcr
inc
add
faddl
fcomp
inc
add
faddl
loopne
inc
add
faddl
call
faddl
in
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
inc
add
loope
add
inc
add
loope
add
loope
add
inc
add
loope
add
inc
add
inc
add
loope
add
inc
add
loope
add
inc
add
loope
add
inc
add
loope
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
inc
add
loope
add
loope
add
loope
add
loope
add
inc
add
loope
add
loope
add
loope
add
loope
add
loopne
add
loope
add
loopne
add
loope
add
loope
add
loope
add
loope
add
loope
add
loop
add
inc
add
inc
add
loop
add
inc
add
loope
add
loop
add
inc
add
loope
add
add
loope
add
loop
add
inc
add
loop
add
inc
add
loop
add
inc
add
loop
add
inc
add
loop
add
inc
add
loopne
add
loope
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
loope
add
loope
add
inc
add
add
inc
add
add
inc
add
loop
add
loop
add
inc
add
inc
add
inc
add
loopne
add
inc
add
inc
add
loopne
add
loop
add
inc
add
loop
add
loope
add
add
inc
add
inc
add
loop
add
loope
add
add
loope
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loope
add
loop
add
loop
add
loope
add
loop
add
loop
add
loop
add
loope
add
loop
add
loope
add
loope
add
loop
add
add
loope
add
loop
add
add
loope
add
loop
add
inc
add
jecxz
add
inc
add
loop
add
loope
add
jecxz
add
inc
add
jecxz
add
jecxz
add
inc
add
add
inc
add
inc
add
loope
add
jecxz
add
inc
add
jecxz
add
inc
add
jecxz
add
loop
add
loope
add
inc
add
jecxz
add
inc
add
inc
add
add
loope
add
add
inc
add
loope
add
inc
add
add
inc
add
add
inc
add
add
inc
add
loopne
add
inc
add
inc
add
add
inc
add
add
jecxz
add
add
inc
add
add
inc
add
inc
add
add
inc
add
loop
add
loop
add
loope
add
loop
add
jecxz
add
loop
add
loope
add
inc
add
inc
add
loope
add
inc
add
add
loop
add
inc
add
loope
add
inc
add
jecxz
add
inc
add
inc
add
inc
add
jecxz
add
inc
add
loop
add
add
loope
add
inc
add
inc
add
jecxz
add
loop
add
jecxz
add
loope
add
inc
add
jecxz
add
jecxz
add
loope
add
jecxz
add
jecxz
add
inc
add
jecxz
add
inc
add
fldl
or
inc
add
fldl
adc
inc
add
fldl
sbb
inc
add
fldl
and
inc
add
fldl
sub
inc
add
fldl
xor
inc
add
fldl
cmp
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
fldl
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
fldl
int3
fldl
rcr
inc
add
fldl
mov
inc
add
fldl
inc
add
fldl
in
inc
add
fldl
in
fldl
lock
hlt
fldl
clc
fldl
cld
fldl
add
inc
add
inc
add
fiadds
or
inc
add
fiadds
adc
inc
add
fiadds
sbb
inc
add
fiadds
and
inc
add
fiadds
sub
inc
add
fiadds
xor
inc
add
fiadds
adc
inc
add
inc
add
inc
add
inc
add
fldl
inc
fiadds
dec
fiadds
dec
fiadds
push
fiadds
push
fiadds
pop
fiadds
pop
fiadds
adc
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
fiadds
or
inc
add
fiadds
nop
fiadds
sbb
inc
add
inc
add
inc
add
inc
add
fiadds
test
inc
add
inc
add
inc
add
fiadds
rcr
add
add
fiadds
enter
int3
fiadds
rcr
inc
add
fiadds
fcomp
inc
add
fiadds
loopne
inc
add
fiadds
jo
inc
add
fiadds
in
fiadds
lock
hlt
fiadds
clc
fiadds
cld
fiadds
add
inc
add
inc
add
filds
or
inc
add
fldl
adc
inc
add
inc
add
filds
sbb
inc
add
filds
and
inc
add
filds
sub
inc
add
fiadds
xor
inc
add
inc
add
filds
cmp
inc
add
inc
add
inc
add
inc
add
inc
add
filds
dec
filds
push
filds
push
filds
xor
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
add
fldl
js
inc
add
add
filds
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
filds
and
inc
add
filds
je
inc
add
filds
filds
enter
and
inc
add
filds
rcr
inc
add
filds
fcomp
inc
add
filds
xchg
fiadds
inc
add
filds
in
inc
add
filds
clc
fldl
jo
inc
add
filds
lock
hlt
filds
pushf
fldl
clc
filds
cld
filds
inc
add
loopne
add
inc
add
loopne
add
inc
add
inc
add
fldl
adc
inc
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
inc
add
add
loopne
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
inc
add
add
fldl
dec
loopne
add
add
inc
add
filds
push
loopne
add
inc
add
fldl
xchg
fiadds
pop
loopne
add
inc
add
add
inc
add
add
inc
add
inc
add
add
inc
add
add
loopne
add
loopne
add
add
loopne
add
fiadds
pushf
loopne
add
fldl
movsb
loopne
add
inc
add
loopne
add
loopne
add
loopne
add
loopne
add
inc
add
loopne
add
fldl
int3
loopne
add
inc
add
loopne
add
loopne
add
add
loopne
add
loopne
add
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
push
mov
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
call
mov
push
push
call
push
push
call
movl
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
movl
pop
ret
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
cmpl
jne
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
movl
mov
add
mov
mov
add
mov
add
mov
add
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
pusha
mov
movl
movl
push
push
call
push
call
mov
movl
movl
lea
push
lea
push
lea
push
call
movzwl
cmp
je
xor
jmp
lea
push
push
push
push
push
call
test
je
xor
jmp
lea
push
push
push
push
push
call
test
je
xor
jmp
mov
mov
mov
lea
push
push
push
mov
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
jne
xor
jmp
movl
movl
movl
movl
movl
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
call
pop
call
pop
call
pop
call
pop
jmp
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
