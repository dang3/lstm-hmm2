mov
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
inc
add
add
xor
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xor
enter
int3
xor
shlb
inc
add
xor
fdivs
inc
add
xor
loopne
inc
add
xor
call
xor
lock
hlt
xor
clc
xor
cld
xor
add
add
inc
add
xor
add
inc
add
xor
add
inc
add
xor
add
inc
add
xor
add
inc
add
xor
add
inc
add
xor
add
inc
add
xor
add
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
xor
inc
add
inc
add
add
mov
add
cmpsb
cwtl
xor
cmpsb
nop
xor
movsl
test
lock
mov
add
or
lahf
test
cmpb
test
cmp
add
dec
ds
stos
lds
fsubrs
or
sbb
xor
mov
pop
xor
cmpsb
mov
shll
add
adc
pop
cmpsl
pop
xor
cmpsb
sahf
xor
cmpsb
mov
xor
fnstenv
dec
cmpsb
out
pop
cmpsb
sysenter
jge
adc
mov
mov
mov
out
and
or
xor
push
lahf
ss
arpl
addr16
push
mov
lahf
nop
xor
adc
hlt
xor
andb
adc
test
les
loopne
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
add
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
jl
fdivrp
imul
jp
or
fdivr
imul
jno
mov
or
fdivr
imul
jno
xchg
ret
or
push
icebp
jl
jae
jge
jno
imul
xchg
or
dec
out
popa
pusha
icebp
dec
imul
jl
das
cmc
jl
mov
push
xor
out
imul
out
inc
mov
dec
jmp
jge
jmp
clc
insl
push
mov
add
dec
add
dec
add
dec
add
xchg
dec
add
xchg
dec
add
dec
add
out
jl
sahf
stc
imul
jp
jg
or
dec
stc
imul
jno
rorl
add
jp
imul
fs
mov
arpl
loopne
fs
or
xor
gs
loopne
add
in
arpl
loopne
fs
or
jmp
jmp
add
sti
jp
fpatan
fs
call
xchg
or
loope
gs
mov
fldcw
movsl
clc
insl
add
sti
jp
cltd
repz
sahf
stc
jl
scas
loopne
add
jo
clc
outsl
outsl
xchg
or
addr16
jp
jno
cmp
mov
fs
mov
push
ds
imul
inc
gs
xchg
outsb
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
adc
dec
pop
mov
sarb
push
je
jg
jl
bound
pop
pusha
and
popa
outsb
jnp
sub
popf
jle
push
outsb
lods
xor
insb
push
bound
add
mov
inc
mov
fcomi
add
add
add
xchg
cli
add
mov
loope
mov
pop
lea
xor
xchg
loope
mov
add
in
mov
xchg
lea
lods
lea
add
adc
loope
mov
add
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
in
or
mov
or
mov
or
movsl
xchg
or
fcomi
insl
js
xchg
or
out
test
add
mov
add
or
jne
or
gs
or
gs
or
xchg
nop
or
fisubrs
icebp
or
gs
or
xor
xchg
add
xchg
or
xor
nop
or
lds
xchg
nop
or
dec
fisttpl
add
rorb
add
or
cmc
jl
add
or
mov
add
or
mov
add
or
mov
test
cmp
arpl
jl
or
insb
int3
incl
pop
or
testl
add
or
mov
aad
adc
insl
repz
incl
xchg
pop
or
pusha
jne
add
push
xor
add
mul
orl
pop
je
sbb
mov
jp
iret
repnz
xchg
jle
in
lods
testl
loope
inc
test
jno
arpl
pop
mov
ret
mov
add
mov
loope
xchg
and
dec
fyl2xp1
add
loope
mov
mov
pop
xor
arpl
dec
jmp
mov
cld
inc
push
in
rorl
orb
pop
movsb
push
icebp
inc
mov
iret
bound
jmp
hlt
xchg
or
minps
push
xchg
add
ret
call
cmp
divl
call
mull
aas
minps
push
xchg
and
bound
sub
fmull
or
scas
enter
or
inc
push
add
fimull
pop
adc
pop
jp
dec
notl
popa
jge
daa
jmp
add
sbb
rol
xchg
adcl
sbb
enter
icebp
push
add
movsl
loopne
mov
imul
mov
dec
bound
sarb
rcrb
fmuls
subl
push
sub
xchg
lock
push
testl
jne
movntps
xchg
mov
add
add
jge
or
mov
jne
and
xor
testb
pop
mov
jnp
jne
mov
jne
ljmp
mov
pop
leave
into
outsb
or
mov
lldt
cmp
add
mov
mov
pop
aad
sldt
out
or
push
push
cwtl
cmp
je
or
jae
or
ret
punpckhdq
or
jg
or
adc
jno
ret
push
add
xchg
and
mov
xchg
insb
mov
xchg
pop
pop
hlt
out
hlt
mov
mov
cld
out
hlt
push
add
stos
and
pop
pop
push
mov
outsl
dec
repz
pop
mov
add
adc
sbb
fstpl
loope
push
push
stc
add
or
push
int3
xchg
stc
jne
push
out
pop
mov
loope
loope
leave
xchg
push
pop
mov
pop
jo
dec
movsb
sbb
fcmovne
xchg
lock
ljmp
sbb
xchg
or
jo
movsl
out
push
add
add
add
orl
ficomps
in
push
f2xm1
cs
pusha
or
xchg
jmp
xor
loopne
mov
mov
push
adc
negl
push
add
in
in
in
adc
iret
xchg
lock
push
notl
pop
jge
aaa
aaa
not
pop
dec
lret
movl
jne
sbb
adc
add
add
in
incl
arpl
mov
jl
add
sbb
mov
divl
mov
pop
inc
pop
out
ret
cmp
mov
pop
mov
mov
jnp
dec
xchg
and
insb
push
add
loopne
in
jno
divl
mov
pop
incl
pop
out
xchg
jp
testl
add
testb
sub
mov
ljmp
clc
dec
mov
cmp
or
inc
or
mov
add
or
or
sbb
cmpsb
imul
test
call
aas
idiv
inc
jae
rol
aad
or
daa
hlt
mov
rolb
imul
mov
push
add
add
add
jae
cmp
dec
bound
push
pop
mov
cwtl
pop
or
pop
loop
push
push
loop
fcmovnbe
imul
xchg
push
xor
add
xchg
or
lret
add
fmuls
loope
lods
lea
add
stc
out
jmp
adc
out
loope
mov
jecxz
mov
loop
mov
fstpt
cmp
jns
insb
fsubr
fwait
pop
cs
xchg
xchg
loope
mov
mov
dec
je
cltd
orl
out
jb
pop
out
mov
cmp
or
addr16
cmp
or
sbb
loope
sarl
jl
ss
sbb
add
add
imul
inc
dec
lret
roll
fs
mov
pop
divl
pop
iret
lods
mov
pop
jge
xlat
push
cmc
mov
xchg
inc
xchg
negl
loopne
push
add
idivl
jge
pop
mov
int3
lock
or
test
or
gs
adcl
sbb
push
imul
push
fisttpll
fcoml
add
in
hlt
fimull
lds
or
sbb
sub
mov
jne
cmp
rol
xchg
pop
mov
jne
movsl
loope
and
or
jge
jb
add
clc
pop
out
std
mov
or
loope
call
jne
xchg
mov
jge
imul
mov
in
pushf
dec
jle
cmp
in
push
sub
xlat
sbbl
jge
hlt
mov
or
int3
jp
jne
fidivrl
hlt
popf
in
jecxz
leave
or
repz
ret
pop
push
repz
and
mov
repz
mov
in
test
pop
mov
movsb
call
push
pushf
sti
jae
push
in
jae
jecxz
roll
ds
pop
out
dec
inc
push
in
loope
int
dec
pop
jno
insb
adc
xor
inc
cwtl
or
aad
movsl
xchg
scas
jno
push
sbb
repz
fwait
jmp
pop
sbb
sti
loope
fisttpl
add
add
loope
fistpl
shrb
into
mov
push
pop
imul
mov
push
stos
loope
loope
scas
out
adc
mov
addr16
icebp
push
ja
dec
adc
hlt
adc
or
push
jl
jbe
lock
mov
xchg
or
pusha
negl
sarl
xor
ret
subl
add
sbb
shlb
outsl
lcall
push
pop
adc
jns
sar
jmp
dec
pop
pop
outsb
pop
mov
sub
inc
push
cmp
loopne
test
testl
call
pcmpgtw
mov
jge
jge
in
jne
mov
imul
mov
or
jp
call
in
aam
incl
add
add
insl
loopne
cmp
jge
dec
mov
decl
enter
or
xor
leave
notl
pushl
out
add
insb
test
in
test
shl
fnstsw
repnz
pop
imul
ficompl
xor
in
mov
mov
or
int3
ret
int3
movsb
into
add
clc
jae
cmpxchg
lea
add
add
pop
incl
rcrl
jno
or
stc
arpl
out
fs
loopne
leave
arpl
jne
xchg
in
jmp
imul
rcrb
nop
ds
fcoml
or
mov
jne
push
adc
mov
xchg
imul
jmp
les
popa
arpl
lret
or
mov
add
fdivrp
pop
pop
call
cmp
js
xchg
loope
jecxz
xchg
outsb
cmpb
mov
fcoml
add
dec
or
xchg
loope
push
cltd
in
add
loope
mov
mov
xor
sbb
leave
out
inc
cltd
pop
xchg
loope
enter
hlt
push
sbb
in
lcall
or
jae
push
test
push
jge
out
cmc
push
mov
rorb
dec
idivl
push
sub
mov
lock
cmp
sbb
push
sub
jae
in
adcl
pop
push
imul
jb
add
pop
dec
mul
push
push
mov
cwtl
or
add
add
push
jnp
xor
add
push
ds
jbe
shrl
push
dec
icebp
mov
jmp
rclb
add
xchg
rol
xchg
pop
mov
loop
mov
dec
orb
push
push
je
or
gs
mov
repz
fld
ret
pop
mov
pop
mov
dec
repz
dec
orb
or
leave
ficoml
cmpsl
dec
notl
pop
push
faddp
add
out
mov
sub
xchg
sti
cmpsb
ds
add
push
leave
out
notl
mov
loope
pop
push
int
or
and
es
and
jne
mov
or
mov
jae
cmpsb
ror
loop
mov
or
jno
cwtl
xorl
sub
mov
cmp
jmp
push
fnstenv
pop
cmp
decb
cmp
mov
ret
or
int
ds
cmp
addr16
xor
dec
aaa
or
dec
mov
inc
mov
inc
call
jae
xor
loopne
daa
jp
mov
cmp
add
and
push
dec
out
lods
dec
dec
lods
orb
jecxz
sbb
mov
and
push
test
jnp
push
lods
dec
dec
jns
je
xchg
ds
mov
jp
push
jecxz
lcall
xor
xor
jns
push
imul
iret
xchg
scas
inc
pop
and
pop
jmp
cmc
in
push
xor
and
loopne
dec
push
or
lret
mov
mov
add
add
add
dec
mov
dec
subl
mov
jmp
outsl
sbb
cld
xchg
dec
divl
outsb
gs
neg
out
jge
test
notb
dec
jge
mov
dec
jge
cmpsl
cwtl
loope
in
mov
and
mov
outsl
dec
jge
outsl
leave
lock
ds
outsb
in
testl
add
add
imul
in
loopne
pusha
dec
notl
mov
notl
mov
dec
xor
or
xor
lock
mov
mull
int
jge
or
xor
std
repz
lcall
lret
pop
sub
add
mov
addr16
mov
inc
add
rcrl
add
mov
xchg
jge
pop
xchg
or
jne
pop
subl
or
xor
add
jecxz
dec
or
add
fdiv
push
idivl
divl
cmp
rorb
push
enter
loope
lcall
push
xchg
mov
add
cmpl
inc
pop
rolb
pop
cmp
pop
cmp
adc
std
ret
mov
clc
or
rclb
push
or
ficomps
mov
in
add
shll
std
xorl
addr16
test
xor
je
sahf
pop
clc
adc
call
jmp
xchg
jnp
sbb
xchg
insb
cld
sar
leave
lods
and
std
loopne
movsb
into
push
mov
or
jae
loopne
in
test
cwtl
xchg
xor
call
xchg
loope
popa
fwait
xchg
add
xlat
stc
insl
mov
test
mov
pop
loope
dec
sub
jl
or
pop
fs
aad
loope
mov
push
cwtl
adc
sub
jle
lock
ss
int
loope
and
pop
cmp
sahf
sbb
add
pop
jne
push
ficompl
repnz
add
inc
rcll
loopne
loop
jge
sub
jb
adc
push
xchg
cmp
inc
in
shrl
out
or
xchg
jge
rcl
add
inc
aad
push
cwtl
or
mov
cmc
and
dec
jmp
mov
insl
idivl
xchg
or
iret
out
out
arpl
jb
dec
jge
mov
add
add
out
add
or
ficoms
leave
ja
or
inc
pop
xorl
dec
or
fisttps
mov
add
pop
xchg
iret
inc
and
inc
inc
cmc
imul
in
sar
cwtl
movsb
loopne
sbb
pop
call
pop
maskmovq
divl
test
mov
fcomps
or
xor
add
in
iret
or
jge
cmp
push
lret
pop
lods
push
add
cmp
in
test
cmp
mov
test
mov
or
mov
jmp
or
mov
inc
out
int
mov
xchg
adc
or
add
int3
inc
clc
cmp
add
loopne
pop
inc
addb
add
test
jg
lret
nop
dec
lock
aam
mov
aad
mov
les
cmpsl
inc
mov
nop
mov
addl
nop
loope
pop
cmp
ret
loopne
popa
sbb
mov
loope
out
and
mov
loop
mov
loope
sbb
add
fsubrl
loope
pop
insb
or
dec
shr
in
addl
or
add
loope
pop
cmp
test
mov
add
loope
and
adcb
add
mov
jmp
dec
xchg
or
mov
jge
aaa
and
jmp
gs
shll
shl
xor
jge
aaa
ret
mov
or
lcall
shrl
cmpsb
mov
shl
mov
or
pop
jb
cwtl
flds
inc
jmp
and
jmp
cmpsl
inc
in
add
xlat
push
push
add
add
loopne
rclb
bound
call
bound
mov
or
jne
daa
mov
inc
popa
add
xchg
bound
fists
add
sub
push
xchg
loopne
rcll
mov
add
push
fwait
divl
or
push
or
or
sub
cmpsl
dec
or
add
add
push
add
lock
add
adc
or
pop
add
push
xlat
add
or
movl
out
push
cmp
or
dec
int
or
pop
pop
les
or
cmp
dec
int
or
mov
mov
mov
inc
inc
mov
insl
stc
jmp
leave
add
mov
or
add
cmp
icebp
lret
sar
or
outsb
xor
repz
fldenv
mov
flds
in
das
loope
xchg
xlat
xchg
loope
push
nop
arpl
add
push
loope
mov
mov
cmpsb
xchg
mov
add
jmp
add
inc
xor
sbb
mov
xor
mov
stos
das
loope
xchg
lahf
xchg
loope
je
cmp
mov
mov
inc
mov
xchg
insl
rorb
test
mull
loop
lcall
mov
xchg
or
xor
lea
inc
negl
popl
or
add
add
adcl
nop
enter
pop
jmp
test
xchg
jmp
std
sub
inc
in
xchg
cmp
xabort
std
mov
repz
negl
pusha
in
aas
sub
inc
testl
loopne
repz
insb
add
mov
cmp
jmp
cld
push
imul
dec
dec
ljmp
cmp
jmp
imul
mov
idiv
dec
push
call
andb
fisttpl
imul
gs
idiv
mov
test
cmp
jmp
shl
xor
adc
out
inc
push
decl
das
mov
jmp
dec
aaa
out
add
testl
add
or
out
dec
and
jne
adc
jecxz
sub
fucomi
mov
jmp
cwtl
in
jnp
fsubrp
out
xchg
decl
mov
out
jae
cmp
and
jecxz
sub
mov
stos
fdivrp
xor
out
cmp
loope
in
jmp
negw
imul
inc
push
in
incl
fs
loop
sub
sarb
hlt
xchg
sahf
aad
or
sub
inc
dec
aad
cmp
loope
xchg
insb
jg
xor
cmp
xchg
call
push
xor
pop
pop
in
inc
pop
or
mov
sub
aad
inc
push
in
jae
push
in
mov
mov
inc
mov
loopne
add
add
inc
imul
es
add
psubusw
and
roll
jg
dec
int
rcrb
add
mov
xchg
or
fadds
clc
mov
ljmp
xchg
mov
inc
push
daa
xlat
push
pop
jb
lods
add
adc
negl
int3
dec
jmp
xchg
dec
in
stos
mov
into
xchg
shrl
add
add
pop
bound
int3
xor
xchg
or
or
add
ret
mov
jge
mov
loopne
push
inc
mull
inc
jecxz
call
xchg
or
cli
aas
sub
inc
xor
mov
jge
xor
lock
xchg
or
repz
loope
js
or
bound
or
rorb
add
or
add
add
orb
inc
pop
mov
idivb
arpl
jmp
iret
add
gs
or
sbb
mov
bound
jge
icebp
jp
lock
cmp
jmp
cwtl
or
adc
aaa
and
cltd
or
notl
mov
xor
xchg
push
sub
or
mov
dec
xor
push
add
add
or
hlt
out
add
or
mov
roll
sahf
aam
lods
sub
xorl
mov
push
cmp
into
cmp
push
pop
or
sub
jnp
rol
jns
fimull
nop
jbe
cld
pop
sub
out
mov
sti
mov
movsb
lods
or
xor
add
add
xchg
out
mov
pop
xor
xor
jmp
roll
cli
ret
jns
push
sub
jecxz
sub
or
leave
je
enter
inc
pop
rol
cmp
push
test
cmc
ljmp
loope
fcmovnb
out
xor
fisubrs
xchg
xchg
push
fsubl
filds
mov
cld
arpl
add
int
cltd
dec
cmp
mov
ds
or
test
imul
scas
inc
sub
xchg
loopne
fnstsw
inc
in
enter
dec
inc
sub
cmp
dec
mov
lret
dec
jmp
fsubrl
pusha
movsl
ja
or
inc
push
inc
sub
xchg
loopne
mov
rorb
out
inc
test
sub
ds
cmp
pushf
call
adc
jmp
xchg
or
dec
xchg
or
pop
add
pop
movsl
push
je
sbb
das
cwtl
mov
jmp
push
or
cmc
xchg
dec
sbbb
rol
xchg
pop
mov
sbbl
int
add
adc
pop
call
cmpsb
pop
idiv
cs
sbb
fldl
mov
jecxz
pop
jns
leave
cltd
mov
or
movsb
sub
enter
jl
push
push
pop
adc
leave
or
pop
mov
aad
ficoml
mov
sbb
sbb
or
nop
iret
add
nop
cltd
xor
dec
jb
inc
push
popf
jl
xchg
mov
add
xorl
add
sbb
inc
or
cmp
std
dec
cmp
mov
jl
mov
dec
add
insl
int
mov
pushf
rcl
jb
xchg
cmc
lret
call
mov
jno
filds
cmp
popl
stc
cli
pop
icebp
testb
xchg
mov
fs
push
into
dec
and
dec
les
add
add
push
sub
adc
or
cld
mov
jno
imul
ret
cmp
call
cmp
inc
loopne
dec
roll
cltd
pop
cmp
sub
lods
mov
push
pushf
cmp
pushl
mov
pop
test
mov
inc
fsubr
pop
loope
xchg
xchg
or
popl
lea
dec
cmp
mov
sub
aaa
mov
jmp
mov
jmp
or
jecxz
sbb
xchg
or
test
jecxz
sub
cmp
loop
mov
dec
jmp
fdivrs
pop
adcl
add
rorb
jle
add
add
sub
jbe
mov
pop
sub
push
pop
cmp
dec
aad
bound
fimuls
push
fimuls
push
stos
push
in
stos
dec
loopne
mov
dec
je
dec
jge
mov
add
mov
dec
testl
cmc
shlb
dec
mov
call
sub
in
sbb
pop
dec
testl
or
int3
in
or
or
add
mov
rorl
jmp
jmp
inc
movsl
pop
push
cmc
ljmp
fimull
mov
push
ret
push
hlt
sub
mov
cmp
mov
addl
lea
or
mov
push
jmp
sbb
jo
and
ret
gs
add
mov
inc
insb
or
adc
jmp
pushf
aam
loope
sar
inc
cmp
loopne
ret
sub
mov
mov
ret
test
jmp
pushf
aam
cmpsl
xchg
outsb
lret
fnsave
add
sub
lret
dec
xchg
cmp
dec
into
pop
movsb
iret
mov
add
add
add
xchg
iret
and
and
dec
jb
testb
inc
aam
ss
mov
push
int3
pop
in
mov
xor
leave
sub
xchg
loope
push
mov
cmpsb
leave
sarl
xchg
leave
pop
push
cmp
pop
sub
jge
mov
out
sbb
or
int
add
add
nop
mov
mov
mov
loop
test
add
lret
pop
subl
shr
adc
jmp
xchg
je
push
xchg
mov
punpckhwd
div
push
into
sub
mov
or
and
shrl
adc
lds
rorl
jmp
push
mov
dec
jmp
mov
jne
xchg
enter
add
sahf
add
inc
fsts
dec
clc
xor
cwtl
notl
outsb
pop
jl
int
roll
xor
arpl
inc
push
adc
push
pop
jl
push
in
add
pop
xchg
pop
jge
jb
in
pusha
sub
jae
repnz
lock
into
inc
adc
int
push
int
lea
pop
push
cmp
stc
lods
push
jl
or
sub
movaps
add
xor
icebp
fimull
lret
call
repnz
jbe
add
or
iret
push
dec
adc
dec
xor
mov
ret
add
mov
enter
inc
or
mov
xchg
cmp
push
add
push
add
lock
popa
and
shll
mov
or
int3
push
lods
cmp
cltd
int
xor
jp
mov
cld
aas
xor
notl
mov
loope
xchg
fidivrs
imul
stos
pop
push
stos
mov
pop
inc
lret
dec
test
fisttpl
xor
movb
add
sbb
loope
mov
out
dec
pop
and
or
dec
test
test
pusha
test
clc
fisubl
imull
andl
xchg
leave
notl
loope
cld
cmpsl
cmp
mov
add
adc
add
dec
int
scas
es
add
in
add
jo
add
mov
rcll
dec
pushf
or
mov
testb
mov
cmp
mov
mov
xchg
mov
lahf
cmp
jp
wrmsr
dec
pop
lock
sub
pop
add
mov
add
add
sbbb
jg
xor
sub
or
push
push
pop
jnp
leave
or
cwtl
xor
mov
jmp
cwtl
dec
jb
cwtl
dec
ja
mov
jg
pop
cmp
movb
push
loope
sub
xor
jmp
enter
rol
xchg
enter
lret
stos
insb
mov
daa
sub
or
xor
ljmp
and
int3
pop
sub
push
idivl
mov
xchg
dec
dec
cmp
dec
std
shl
out
xlat
enter
ret
test
mov
adc
iret
push
pop
or
pop
and
out
mov
cmp
mov
subl
aas
or
xor
int
or
add
add
jp
fisubl
aam
mov
add
push
xchg
dec
int
push
rolb
ret
xchg
loope
mov
add
xchg
dec
add
orl
mov
fmull
add
inc
das
sbb
mov
pushf
ret
sub
add
jns
mov
add
stc
sub
add
test
ret
stos
inc
mov
movsb
mov
test
lds
inc
mov
jnp
int
push
cmp
cli
ret
mov
and
add
dec
or
into
cmpsl
cld
rcll
inc
neg
int
hlt
rcll
jmp
rol
or
pop
enter
pop
sbb
dec
rolb
add
add
lock
lret
inc
sub
jo
xor
or
mov
rorl
jmp
adc
dec
jmp
dec
leave
shrl
dec
not
mov
dec
jmp
or
es
jl
jmp
xchg
cmp
xor
push
pop
test
xchg
or
insb
adc
test
mov
mov
call
ficoms
test
xchg
or
dec
insl
inc
inc
mov
lock
notl
enter
lahf
enter
or
movsl
pop
les
push
testl
call
divl
ret
dec
xor
adcl
pop
pop
test
xchg
or
ds
cld
push
add
add
add
add
and
mov
or
xchg
jge
jns
icebp
mov
push
xor
cmp
add
enter
mov
lret
je
ljmp
dec
cmp
dec
or
mov
stos
cmp
add
and
or
mov
add
add
mov
mov
incl
add
add
jge
lcall
add
cld
or
jg
adc
mov
xchg
loope
xor
loope
aaa
pushf
push
cmp
das
mov
mov
cli
sub
stos
bound
add
nop
fidivrs
fisubrl
into
stos
adc
add
push
sbb
iret
shrb
push
popf
push
pop
lds
push
inc
pop
and
adc
add
add
add
loope
mov
mov
icebp
pushf
loop
push
xchg
popa
subb
mov
adcb
jmp
imull
dec
adc
fs
out
mov
xchg
or
cmpsb
push
out
push
pushf
notb
mov
jge
sub
pop
roll
add
adc
or
xchg
xorl
lods
mulps
push
inc
push
pop
lret
mov
hlt
aaa
inc
les
ds
add
test
jb
nop
subl
sub
push
insl
cmp
iret
sbb
ss
xchg
lret
mov
lock
lock
clc
or
push
lret
add
add
inc
cmp
in
sub
ss
test
xchg
inc
or
sbb
das
sbb
xor
xor
xor
sbb
cmpsb
movb
jle
fstps
out
cmp
jmp
cli
cmp
imul
or
jb
lret
mov
and
and
and
loope
and
mov
lret
cmp
mov
and
add
add
mov
or
inc
jl
or
jl
adc
test
clc
pop
xchg
xchg
cmp
int
sbb
xor
lcall
mov
mov
ja
ror
push
ret
pop
jecxz
clc
outsl
in
clc
add
xchg
cmp
ret
fisttpl
xchg
mov
adc
jl
jnp
cmovle
cmp
push
arpl
lock
pop
jo
and
dec
push
jg
ret
sub
jb
xchg
cmpsl
xchg
scas
repz
push
out
iret
sbb
testl
pop
adc
movsl
mov
into
xchg
loop
pop
sub
mov
sbb
out
dec
lods
xchg
dec
insb
mov
add
bound
mov
xchg
or
fsub
pop
enter
dec
or
lret
icebp
je
lea
xchg
or
mov
inc
inc
push
sub
sub
test
push
push
add
aas
sbb
fcmovu
jno
fcmovbe
pop
test
pusha
lret
mov
and
rclb
cmp
icebp
sbb
pop
or
loopne
jne
lret
fstl
sub
mov
sub
gs
sbb
mov
push
or
fcmovbe
jno
add
test
nop
pop
sub
add
movsl
pop
lock
das
repnz
repnz
je
or
scas
out
stc
xchg
cmp
mov
add
add
out
add
or
sbb
repnz
xchg
out
int
xor
inc
cltd
push
enter
cmp
call
test
pop
cmp
dec
add
adc
das
repnz
or
push
aad
cmp
dec
in
add
push
cmpsl
mov
jne
mov
jbe
lahf
pop
jns
push
inc
jecxz
rolb
add
dec
and
pop
outsl
xlat
cld
clc
adc
bound
lret
rclb
mov
adc
sub
push
xchg
insb
int
jge
clc
mov
xor
or
cs
sbb
in
or
xor
mov
push
and
xchg
dec
hlt
int3
push
std
add
add
add
fwait
and
test
loop
mov
push
push
lahf
sbb
incb
je
ret
adc
xor
mov
sub
test
leave
pop
push
sarb
stos
nop
leave
mov
int3
push
add
push
clc
repnz
ljmp
clc
loope
mov
incl
add
add
sbb
or
and
and
mov
mov
sahf
sbb
pop
xchg
mov
inc
xor
sbb
inc
push
repnz
sti
cmpl
addr16
lret
testb
cmp
sbb
das
jns
pop
ljmp
lret
jb
gs
fcmovbe
setl
inc
jp
adc
add
add
xchg
fsubs
repz
test
bound
rolb
iret
test
mov
int
lock
or
pop
mov
ds
fstpt
sti
sub
cmp
roll
mov
enter
lret
mov
and
xor
sbb
iretw
cmp
cmpsl
mov
shrb
fildl
sub
jae
pop
xchg
inc
cmp
push
sbb
pop
or
xor
lock
push
or
push
lret
pop
out
mov
cli
out
xor
mov
xor
sbb
mov
cmc
ror
or
add
mov
sbb
test
jbe
or
in
enter
jnp
mov
mov
xor
sldt
add
sub
stos
jg
rorb
lret
mov
or
mov
and
repnz
pop
bound
pop
cwtl
insb
enter
jl
and
xor
and
pop
iret
in
gs
out
cli
ror
or
xor
mov
or
xchg
adc
rclb
xchg
xchg
xchg
jae
pop
mov
jg
ljmp
add
add
push
adcb
daa
fmul
push
out
push
push
filds
stos
xchg
leave
sbb
cwtl
and
adcl
ljmp
iret
mov
mov
push
out
push
dec
fildll
lods
xchg
scas
sbb
mov
bound
movb
imul
push
arpl
repnz
insb
push
sbb
xchg
repz
nop
push
leave
notb
push
idiv
testl
add
mov
or
ds
repnz
adc
or
mov
push
sbb
lock
ljmp
je
and
dec
mov
cmp
add
add
popa
repz
lock
orl
add
sbb
shl
ret
jecxz
pushl
add
jbe
test
xchg
push
and
push
sbb
or
inc
or
test
xchg
orl
lods
iret
push
pop
xchg
fxch
or
movb
sbb
iret
inc
mov
or
xor
aad
sub
test
xchg
sub
dec
or
mov
pop
test
sub
add
jp
std
psrlq
pop
lea
mov
sbb
js
add
adc
inc
mov
inc
test
out
call
js
jae
test
hlt
add
adc
test
add
or
insb
mov
or
cmpsl
scas
xchg
or
daa
mov
mov
and
xor
or
mov
pushf
mov
push
inc
mov
jmp
adc
vpshuflw
add
add
or
add
mov
and
dec
or
add
mov
orl
out
mov
mov
loope
cltd
int3
insb
inc
mov
adc
int
jp
mov
dec
out
mov
mov
loope
sbbb
mov
rcll
ret
shrl
xchg
pop
bound
add
add
int3
add
idiv
cmp
or
add
dec
jmp
or
or
pop
mov
pusha
mov
pop
push
xchg
sbb
nop
aad
xchg
xor
ljmp
jmp
add
or
xchg
pop
push
ja
xchg
cmp
or
xchg
mov
cwtl
dec
or
je
or
rcrb
test
loope
dec
add
xchg
divl
lcall
inc
cmc
lcall
mov
fldenv
mov
pop
cld
out
push
or
lods
test
xchg
dec
clc
mov
jno
jg
jl
cmp
lock
enter
testb
dec
dec
jne
lods
in
sbb
add
aas
cmp
and
add
add
add
cld
lea
test
jne
xchg
dec
clc
mov
mov
cmpsb
mov
fmul
fcomp
mov
pop
push
push
or
dec
cld
scas
pop
jmp
add
out
inc
mov
dec
clc
mov
sbb
sub
cld
add
mov
lret
mov
mov
repz
jne
adc
add
add
inc
nop
cmp
lahf
mov
sub
ffree
out
jecxz
jne
cmpsl
dec
clc
adc
dec
jo
pop
xchg
push
ret
loop
int
xor
cltd
aam
inc
mov
loope
popa
int3
insb
inc
mov
lods
scas
lea
jp
add
in
or
loope
iret
sarl
mov
loope
nop
xor
mov
cmpsb
add
mov
stos
mov
ficoml
pop
aad
xchg
xchg
push
xor
aam
cmpsb
stos
xchg
sub
jle
or
mov
pop
sub
jl
mov
testb
xor
sbb
fcoml
stos
sbb
pop
inc
insl
xor
inc
outsb
dec
dec
cmp
push
add
add
mov
xchg
mov
dec
in
ja
mov
push
jl
adc
jecxz
cli
xchg
je
cs
push
mov
mulb
dec
aad
test
rcll
inc
or
adc
xor
shl
inc
xchg
or
push
or
xor
push
add
fmull
in
xchg
mov
xchg
jge
popf
nop
or
gs
push
leave
ja
testl
and
jmp
or
adc
lock
orb
pop
nop
or
in
or
scas
xchg
lret
pop
cs
or
les
mov
divb
pushf
hlt
jecxz
test
call
or
mov
cld
jecxz
testb
xchg
or
and
jl
mov
mov
add
sub
pop
popf
mov
call
btr
jne
jp
jmp
adc
add
inc
mov
stos
enter
les
jbe
or
scas
mov
je
add
pop
and
or
lahf
or
push
test
incl
add
add
or
lret
jle
mov
mov
mov
xchg
std
jl
jle
sbb
fcoml
sbb
push
shrl
xor
jle
enter
aaa
cltd
fs
mov
frstor
jl
fchs
stos
and
fdivl
jg
test
pushf
dec
or
adc
cld
inc
mov
sti
jmp
push
test
lahf
and
mov
popf
sbbb
sti
rcll
jg
add
stc
add
dec
add
and
adc
push
mov
loope
jmp
mov
and
push
jecxz
fistps
pop
in
cmpsb
jmp
aaa
adc
sbb
mov
mov
movsb
mov
lahf
xchg
jge
into
decl
insb
inc
mov
add
shrl
adc
push
int3
xor
test
pop
sti
lret
xor
iret
lods
sub
icebp
data16
test
pop
hlt
cltd
repnz
out
mov
add
jecxz
xchg
lock
sub
enter
lret
gs
push
cld
push
mov
nop
cmp
loopne
sub
testl
and
divl
into
stos
push
push
scas
or
and
cmp
mov
adc
pop
add
jge
popf
mov
idiv
in
jle
mov
jge
jge
idiv
ficoml
jge
fisttpll
hlt
mov
push
push
clc
and
add
cwtl
push
daa
hlt
xchg
lods
lock
roll
add
or
stc
daa
xchg
into
push
sti
or
cmp
ss
adc
stos
xor
inc
inc
pop
shlb
popf
sti
or
clc
jmp
add
mov
adc
inc
push
hlt
adc
clc
pop
mov
inc
push
jecxz
scas
call
aas
test
push
jbe
push
mov
mov
stos
inc
pop
push
in
rolb
mov
loop
push
adc
scas
add
arpl
js
movsb
ljmp
xchg
adc
sub
movsb
rorl
fistl
subb
mov
add
mov
movsb
orl
add
cs
cld
cwtl
int
pminsw
pop
xchg
sbb
xchg
jl
pop
push
std
inc
mov
jge
out
bound
enter
xchg
xchg
or
adc
jb
push
jge
out
bound
mov
adc
inc
dec
maskmovq
divl
outsl
push
mov
mov
mov
sbb
xchg
loopne
dec
maskmovq
mull
add
add
adc
das
maskmovq
notl
out
notb
pop
mov
jmp
out
sbb
jne
xchg
enter
imul
loop
sti
push
pop
enter
or
push
call
or
sub
negl
mov
divl
and
mov
mov
inc
cmc
ret
mov
mov
xor
mov
lahf
enter
jne
lods
or
add
pop
mov
lea
outsb
pusha
add
fcoms
xchg
fiadds
add
sarb
orb
xor
xchg
or
cmc
xchg
or
mov
mov
add
xchg
divl
outsl
lcall
testb
lret
cmp
lea
cmp
popa
or
cmp
movsb
out
sti
or
int3
add
or
mov
sub
add
jne
push
xor
sti
cmpsl
jne
and
leave
mov
mov
jl
dec
inc
xor
add
xchg
call
xchg
cmp
add
mov
inc
hlt
insl
pop
mov
mov
jne
push
pop
mov
or
lret
push
cld
incb
mov
add
and
rcrl
fildl
loopne
lret
xchg
mov
mov
aad
stos
xchg
stos
cmpsb
out
lds
vpmulhuw
loope
int
dec
or
mov
loopne
mov
add
jbe
cwtl
or
or
addr16
in
lahf
mov
aam
and
dec
mov
hlt
cmp
adc
rcrl
and
add
mul
jle
insb
push
or
setne
jmp
or
notl
jmp
popa
adc
shll
test
out
pop
jmp
sub
xchg
adc
add
add
add
jge
jle
sbb
sbb
cld
push
inc
adc
andl
enter
iret
inc
mov
idiv
cmc
sub
pop
pop
fdivr
adc
inc
test
dec
fdivrs
or
mov
cld
ficoml
push
push
seta
jne
ds
enter
rolb
jge
xchg
jge
mov
rorl
fwait
or
fcomps
sub
or
or
lahf
enter
rolb
xor
iret
pop
add
nop
or
mov
inc
les
or
or
inc
aam
push
add
or
adc
iret
push
data16
and
rorl
add
lds
pop
push
vmwrite
mov
xchg
jne
ficompl
mov
mov
mov
mov
adc
push
fdivrl
movsb
sti
push
sbb
jmp
test
inc
or
in
js
pushl
xchg
aam
xor
das
add
fs
pop
fmuls
fcoml
outsb
dec
popf
or
add
mov
out
cmpb
pop
cwtl
or
pop
inc
or
push
or
jle
test
sbb
rorb
cmp
pop
cltd
mov
jle
stos
ljmp
stos
jb
mov
stos
push
lods
pushf
imul
pushf
jp
mov
clc
cld
nop
mov
dec
insb
push
mov
adc
mov
or
add
jnp
mov
incl
jnp
adc
cltd
sbb
pop
jmp
add
testb
push
lock
mov
xchg
or
iret
adcb
cltd
movsb
negl
notl
or
testl
hlt
sarl
addl
add
push
mov
cwtl
or
clc
mov
add
sub
push
popf
xchg
or
and
xchg
rol
adc
or
jne
and
div
jne
cmp
ret
jne
sub
mov
add
ljmp
add
push
in
adc
jne
movsl
xchg
push
cmp
divb
add
add
sub
jne
sub
int
push
fxch
or
lds
mov
sub
mov
out
or
sbb
int
incl
lret
je
jo
lock
or
in
jmp
add
je
jl
cld
mov
cli
jle
xchg
jne
sbb
in
lods
push
repnz
scas
sbb
jecxz
lahf
jmp
xchg
jne
xchg
inc
dec
mov
nop
cmp
mov
leave
into
testl
les
mov
addl
clc
scas
xchg
jne
xchg
cltd
inc
inc
add
rolb
rcrl
or
mov
loope
jl
shl
and
cwtl
mov
add
dec
cltd
add
lods
xchg
pop
cld
les
cwtl
cld
les
mov
xchg
pop
mov
sbb
fiaddl
mov
bound
xchg
xchg
push
inc
mov
out
cwtl
xchg
pop
sbb
xor
jecxz
mov
nop
enter
jne
xchg
sbb
andb
hlt
add
idivl
enter
test
gs
in
mull
mov
sub
add
bound
shrl
add
jb
push
int3
jne
add
jb,pn
imulb
add
or
cmovge
mov
jnp
bsr
xchg
lret
call
xchg
in
aam
adc
add
lcall
fidivrs
loopne
fildl
test
xchg
insb
cmc
add
mov
or
sub
mov
pusha
idiv
sub
test
test
mov
or
test
xchg
sub
call
pushf
adc
dec
incb
add
or
mul
push
idiv
cmc
cltd
mov
daa
sti
inc
push
lea
lret
add
das
les
movsl
xchg
test
sbb
push
cmp
in
mov
or
jmp
jae
add
movsl
into
popf
call
addr16
inc
mov
sbb
stos
mov
inc
daa
add
sbbb
and
mov
sub
ret
sahf
lea
sbb
jne
pop
sbb
add
add
dec
sti
dec
repz
add
fdivl
cmpsb
addl
sbb
incl
mov
loope
popf
jmp
xchg
loope
int3
mov
inc
dec
and
xchg
stos
popf
fnsave
xchg
imul
lods
xchg
mov
test
xchg
shrl
das
xchg
in
in
mov
mov
lods
into
jmp
and
cmp
xchg
sti
jmp
ret
les
add
dec
sbb
push
xchg
in
and
add
add
lods
sahf
jmp
pop
fisttpll
xchg
negl
jge
clc
xchg
lcall
mov
movsl
or
add
add
add
pop
push
loopne
add
mov
xchg
mov
aaa
add
testl
bound
in
lcall
cmc
movsl
lcall
add
divl
mov
in
jl
divl
testl
fldcw
jge
mov
add
shrl
or
add
add
inc
lret
mov
notl
mov
add
jne
dec
clc
and
iret
inc
stc
xchg
or
gs
xor
add
xchg
jl
mov
cltd
bound
cwtl
mov
xchg
jl
mov
sbb
mull
dec
clc
adc
pop
or
mov
daa
xorl
or
add
mov
push
clc
cmp
ja
rolb
jecxz
cli
outsb
mov
cltd
jne
test
lcall
jmp
or
inc
sub
fadds
ds
mov
jmp
insb
dec
in
or
mov
or
xchg
pop
movsb
aam
inc
mov
or
dec
loopne
mov
add
add
and
dec
jmp
call
xchg
mov
sbb
push
fistl
pop
xchg
cmp
add
and
xchg
loope
dec
pop
lcall
fnop
test
cmp
xchg
push
testb
push
cmp
test
hlt
sbb
push
loope
fsts
loope
dec
cvttps2pi
push
xchg
loope
int3
xchg
loope
int3
xchg
loope
int3
xchg
loope
int3
cwtl
loope
int3
xchg
in
jle
or
sbb
mov
sbb
fildl
cwtl
std
sbb
cwtl
push
or
iret
xchg
xor
aam
sbb
push
clc
cltd
sbb
cld
xchg
std
sbb
pusha
push
or
iret
xchg
scas
dec
add
jmp
and
sbb
mov
add
stos
mov
or
pusha
call
lcall
adc
cmp
pop
and
aad
mov
pop
mov
gs
xchg
push
stc
push
add
pop
dec
cld
add
movl
rdpmc
push
icebp
push
mov
xchg
mov
add
and
and
pusha
push
add
jnp
call
test
lea
dec
or
xchg
adc
or
nop
loopne
inc
or
call
cld
pop
mov
adc
sub
or
push
xchg
sahf
or
or
or
jns
cld
cmp
or
mov
sar
dec
adc
mov
or
jecxz
xchg
pop
shrb
dec
js
add
xchg
dec
inc
add
pop
je
jmp
incl
icebp
inc
add
or
mov
dec
inc
or
jmp
in
sub
push
in
or
mov
pusha
inc
and
out
sbb
add
call
test
adc
adc
push
mov
sti
rep
xor
mov
jl
pop
es
insb
add
sbb
add
sbb
loop
loope
fwait
aas
test
xchg
in
dec
mov
stc
dec
lea
pop
into
lea
loopne
arpl
dec
add
xchg
loope
push
cmp
add
stc
pop
xor
popf
rorl
push
divl
mov
icebp
icebp
sahf
add
fistpll
or
or
mov
hlt
idivb
subps
mov
mulb
nop
orb
pop
notl
or
push
push
sbb
or
cmp
or
jl
testl
inc
adc
imul
xchg
div
push
jo
lods
mov
clc
divb
divb
add
negb
lock
scas
adc
loop
xchg
xchg
jmp
std
dec
jmp
or
call
jb
push
jmp
loopne
mov
imull
mov
xchg
loopne
arpl
cmc
incl
add
add
or
add
ljmp
pop
xlat
cmc
call
xchg
add
sbb
adcl
or
inc
jle
jge
lock
pop
call
mov
or
pushl
jge
sbb
or
mov
sbb
and
mov
sub
or
adc
incl
add
add
sub
inc
lds
mov
mov
xchg
jo
add
or
mov
or
es
adc
add
imull
push
mov
fwait
in
push
mov
stc
xlat
xchg
push
cmp
or
dec
pusha
or
xor
or
vmwrite
je
push
in
inc
xchg
scas
mov
add
add
cld
mov
insl
xor
pop
fs
sbb
jne
and
aas
add
fs
sti
cmc
push
xor
adc
repz
mov
popa
mov
mov
iret
adc
rorl
fs
mov
xchg
push
dec
mov
jmp
mov
cmp
adc
fnop
push
cmc
aad
xchg
mov
mov
fcompl
int
sbb
mov
jl
cld
imulb
add
sahf
add
cmc
fbstp
fcomip
testb
cmc
divb
clc
fcomip
push
xchg
or
lret
mov
call
testb
hlt
cltd
adc
add
lret
fdivrl
test
in
push
insb
nop
xchg
add
lds
pop
call
pop
xchg
or
int
std
adc
or
jns
jmp
add
cmp
sbb
add
push
sub
push
adc
and
or
or
add
inc
inc
inc
xor
sahf
fdivr
sbb
cld
testl
fdivr
lcall
call
fists
or
add
decl
cmp
call
sub
in
imull
bound
sbb
sbb
lock
loopne
inc
inc
movsl
rcrl
and
fistps
or
mov
pushf
imull
mov
fs
call
add
xchg
cmp
push
dec
cmovs
je
add
add
jle
call
cwtl
xor
add
xchg
repz
cmp
jmp
sbb
hlt
inc
mov
incl
xchg
cmp
mov
xchg
mov
sbb
mov
scas
jmp
icebp
call
mov
out
fwait
mov
aad
jae
leave
mov
enter
int
and
mov
cld
xor
cmpsl
xchg
push
xchg
inc
repnz
fwait
push
loop
xchg
pop
cltd
pushf
loopne
lea
push
loope,pn
aad
call
adc
fiaddl
xchg
pop
adc
ja
fdivrs
dec
xchg
adc
cwtl
jnp
push
loope
cmp
sbb
inc
mov
fwait
inc
repnz
notb
jl
cltd
enter
js
fmull
icebp
pop
fisubs
pushf
loopne
adc
notb
inc
dec
jmp
xor
mulb
sbbl
dec
cwtl
or
add
hlt
pop
stc
pop
pop
adc
shrb
lock
bound
mov
xchg
or
andl
add
lock
iret
data16
or
add
push
add
call
push
jb
fimuls
cwtl
loopne
aaa
sbb
or
sbb
cmp
movsb
pop
decl
sbb
call
sbb
mov
push
jge
pop
inc
and
adc
loope
add
add
testl
xor
mov
pop
lcall
in
out
pop
xchg
sbb
call
dec
push
pushl
or
mov
inc
push
dec
std
mov
movsb
inc
mov
je
or
bound
pop
into
mov
lock
je
mov
pop
push
cs
pop
mov
push
cwtl
push
int
loop
fnstsw
xorb
je
fdivr
cmp
mov
jbe
pop
in
mov
jmp
aaa
into
jecxz
fs
push
lret
call
pop
xchg
mov
cmp
insb
xchg
add
imul
adcb
add
sbb
xchg
pop
add
add
add
xchg
clc
xchg
cld
adc
arpl
addr16
add
xchg
pop
out
mov
or
in
cwtl
test
xchg
loope
dec
imul
add
out
repz
sbb
cmp
clc
cmpb
ret
pop
in
stos
cld
lock
fucomi
nop
sbbb
icebp
leave
in
pop
ss
loopne
popa
in
div
dec
push
add
cmpsl
inc
dec
jmp
push
out
push
push
xchg
xchg
loopne
or
cld
call
test
aas
push
or
lock
into
or
cld
aaa
mov
mov
fsubrs
xchg
jl
cmp
inc
cmpl
out
jl
cmpsl
xor
or
inc
dec
jmp
in
cmp
fcoms
inc
mov
in
jl
fnstsw
std
mov
bound
int
pop
inc
movsl
clc
popf
push
in
divl
lea
enter
dec
hlt
mov
cli
incl
mov
idiv
shrb
cmp
mov
nop
pusha
mov
inc
push
inc
inc
xor
adc
call
adc
adcl
add
fs
pusha
mov
inc
push
inc
inc
cmc
jg
iret
push
add
rorl
jge
mov
pop
in
jne
rcll
repz
inc
inc
xlat
or
or
fiaddl
add
arpl
xchg
push
jbe
idiv
loop
fnstsw
push
repz
add
add
fmul
addl
icebp
repz
test
call
xor
ja
mov
loop
mov
mov
pushl
or
or
jmp
sti
jns
jns
stc
imul
leave
cmp
inc
mov
add
movsb
dec
mov
cmpb
ljmp
into
out
jg
pusha
cmc
imul
add
sahf
fdiv
jle
pusha
std
jle
popf
or
dec
xchg
loope
push
stc
dec
add
stc
xchg
cwtl
into
clc
xchg
cld
mov
inc
ljmp
and
inc
or
loope
mov
cld
or
loope
mov
stc
cmp
mul
dec
pop
pop
rcll
jmp
rcr
divb
es
pusha
sub
push
or
movsb
popf
loopne
push
jmp
testb
jl
call
int
div
pop
icebp
mov
insb
into
ljmp
fucompp
test
and
jmp
shr
out
in
pop
jmp
stos
jmp
or
pusha
insl
pop
dec
mov
inc
inc
cmc
jl
mov
add
add
xchg
add
clc
xchg
loope
cmc
xchg
or
inc
sbb
adc
xchg
loopne
cmp
or
pop
nop
or
std
and
mov
jge
lea
incl
imul
push
lea
jmp
cmc
jne
cmc
jne
jl
incl
loopne
das
imul
sub
push
mov
push
xchg
shl
dec
pop
idiv
add
mov
or
dec
or
inc
cmpsb
lret
incl
loope
call
repz
sbb
mov
std
decb
pop
fiaddl
or
or
mov
add
add
or
call
je
inc
incl
fidivs
jae
mov
imul
add
std
or
push
jb
add
jb
inc
lds
mov
jno
hlt
ss
xor
add
inc
mov
js
push
lea
xchg
loope
sbbl
or
mov
shll
lret
adc
inc
dec
icebp
sti
lock
mov
jns
jp
call
add
mov
fdivrl
out
icebp
xchg
sti
clc
dec
mov
aaa
inc
nop
xchg
pushf
mov
and
in
imul
pushf
fnstenv
push
out
mov
call
loope
or
mov
cmp
roll
jmp
ljmp
jmp
xchg
or
test
jmp
jbe
push
sub
adc
pop
push
in
pushf
pop
out
dec
mov
or
pop
lea
xor
pop
inc
test
jl
mov
rcll
and
jmp
jno
andl
negb
jl
testl
mov
inc
mov
incl
dec
imul
frstor
inc
inc
and
nop
pusha
or
mul
sbb
add
add
push
jl
nop
test
xchg
imul
lret
repz
jp
mov
call
iret
mov
xchg
test
testl
dec
roll
jns
int
imul
shl
popf
js
std
jp
loopne
lods
pop
imull
movl
insl
jo
jp
pusha
jge
mov
xchg
incb
add
add
loop
pop
and
jno
sub
out
and
jo
inc
xor
jmp
outsl
push
sti
call
xlat
cli
jb
leave
into
in
push
pop
push
mov
aam
mov
mov
or
adc
jg
and
fiadds
stos
out
stos
call
bound
int3
add
mov
test
add
jle
je
in
je
popa
jmp
out
icebp
arpl
pusha
dec
push
jecxz
inc
xchg
xchg
cmp
xor
mov
or
ja
xchg
loope
mov
and
xchg
sbb
or
loope
nop
in
in
add
xchg
mov
mov
sti
pop
in
test
ja
mov
push
insb
xchg
int3
pop
ja
fcoml
pop
movsb
ret
cmp
or
mov
popa
xchg
loope
or
and
loop
imul
add
jbe
loop
jbe
sbb
fbstp
xchg
or
and
push
pop
insl
sub
lret
loope
jmp
xchg
or
cmp
push
int
mulb
and
inc
sub
xchg
add
add
loope
sub
or
and
jl
ss
test
idivb
add
and
or
imulb
sbb
shl
cmc
xchg
mov
xor
add
notb
testb
mov
test
fimuls
call
insl
test
jns
testw
cmc
mov
add
add
inc
mov
push
hlt
cmc
jmp
addr16
call
jb
mov
bound
dec
sub
leave
cmpsl
mov
push
pop
insb
mov
popa
addr16
dec
pop
ret
call
dec
cld
mov
cwtl
or
int
pop
inc
movsl
addr16
jge
ret
xchg
xor
lret
xchg
out
fs
jle
imul
add
loop
mov
shll
jnp
mov
fadds
jge
jne
sub
arpl
dec
das
jl
add
mov
mov
jl
pop
xchg
mov
jns
bound
data16
aad
jl
fs
inc
mov
out
mov
inc
inc
sbb
or
sub
call
mov
xor
add
in
inc
cmp
xchg
xchg
mov
ja
push
jmp
je
and
and
pop
mov
popa
xor
and
in
int3
mov
xchg
ljmp
les
sbb
xlat
dec
xchg
xor
mov
pop
pop
jge
loopne
mov
jae
add
add
sub
lret
push
dec
jae
mov
stc
xchg
in
pop
dec
push
fcomip
ret
mov
jl
aaa
shl
ljmp
push
test
notb
fisubs
add
imul
aaa
inc
pop
sub
pushf
cmc
mov
fdivp
cmp
mulb
mov
cmp
scas
adc
loopne
popf
adc
add
add
add
testb
fnstsw
cwtl
cmc
outsb
pop
fnstsw
add
shl
push
fmulp
leave
in
inc
addl
push
jne
mov
sbb
loopne
divl
bound
jge
jecxz
stos
bound
lea
int
mov
sub
jne
jge
push
push
pushl
testl
cmc
fistl
jo
pusha
sbb
pusha
fs
in
imull
xchg
out
push
arpl
sbb
shrb
movsb
cwtl
divl
inc
stc
enter
add
jae
push
push
push
call
frstor
ja
mov
push
aam
mov
push
mov
scas
jns
xchg
jmp
lods
mov
call
sbb
loope
push
ljmp
mul
xor
sbb
mov
std
adc
ret
and
jns
xor
push
int
ja
nop
aad
enter
jne
popf
push
aad
cli
ja
jns
xor
js
into
mov
mov
fsubrs
or
xchg
or
inc
cmp
mov
loope
mov
push
loope
sbb
cmp
jo
fistpl
fldt
popa
add
stc
push
cmc
fimull
cmpsl
popf
ret
push
jo
popa
stc
pop
lods
fcmovnu
outsl
cmp
pop
mov
clc
add
fmuls
cmpsb
xchg
scas
stc
xchg
in
mov
imull
rorl
mov
aas
push
loope
cltd
mov
cmc
hlt
xlat
repnz
addr16
pop
jmp
ja
dec
jmp
rcr
cmc
mov
repnz
aaa
sub
pop
in
push
or
repnz
shlb
ja
jne
sti
fstps
cmp
andl
lahf
shlb
push
push
inc
repnz
xlat
stos
fstps
pop
push
or
inc
dec
jmp
mov
shlb
push
xor
repnz
cmpsl
jp
pop
jmp
inc
inc
dec
jmp
popf
iret
idiv
fcomp
out
arpl
push
fisttpll
inc
mov
cmp
fcomp
out
push
push
push
push
int
pop
inc
movsl
push
fdivrs
fucomp
push
mov
ret
inc
add
and
jne
or
gs
out
xor
add
mulb
ret
int
or
mov
jge
cmp
mov
push
fs
pusha
mov
aad
notl
mov
incl
in
addr16
jmp
sbb
shlb
mov
or
divb
jmp
flds
roll
dec
jmp
add
push
xchg
xchg
test
lret
push
flds
adc
gs
test
cld
arpl
rolb
sub
push
mov
or
or
std
pop
and
pushl
push
sbb
rcr
mov
in
or
pop
xchg
lods
insb
add
insl
orl
sti
jmp
jae
fldt
insb
pop
mov
add
xlat
insl
insb
cmp
push
notb
xlat
daa
inc
nop
xchg
xchg
js
adc
cs
mov
pop
int
adc
add
mov
loope
sbb
or
std
imul
popf
ret
push
clc
sub
add
sub
pop
mov
imul
data16
cmpsb
std
mov
sahf
dec
xlat
idivb
rclb
cld
out
push
xchg
xlat
fbld
push
mov
mov
ret
out
pushf
das
daa
xlat
add
pushf
jl
mov
aaa
mov
ss
inc
pop
jge,pn
loopne
not
notb
xchg
notb
mov
call
int3
hlt
popa
jmp
pop
mov
mov
dec
dec
jmp
cmpsb
or
push
cmc
push
jl
jl
sbb
fcomps
mul
and
ljmp
push
push
sbb
in
call
dec
inc
inc
cmc
cmp
les
imul
jne
jge
cmp
add
mov
cmp
les
addl
mov
jne
push
fsubr
shl
out
xchg
idiv
cld
aam
lea
jno
incl
add
add
jne
jne
push
fcomps
xchg
idiv
in
aam
cmpl
or
and
jmp
adcl
or
js
mov
add
out
hlt
xlat
mov
sti
repz
out
inc
popa
jmp
xlat
jmp
push
popa
adc
incl
popa
jne
inc
fidivrl
fimull
out
ljmp
jne
inc
into
mov
mov
push
stc
lods
popa
jne
movsl
or
js
out
je
mov
jecxz
push
push
or
or
xchg
jp
das
aam
imul
loope,pt
mov
sarl
pusha
int3
shrl
dec
int3
rcrl
push
int3
rorl
cmp
sarl
inc
rorb
inc
mov
pop
cmp
js
into
push
rcrl
lret
xor
pop
dec
cmp
iret
int3
xchg
cltd
fs
loope
push
push
mov
iret
int3
xchg
cltd
dec
mov
dec
add
xor
notb
xchg
out
dec
sbbb
cmp
sbb
add
add
outsb
fistpll
or
push
pop
sub
shl
sbb
sarl
testb
adc
fstl
add
aas
pop
test
cmp
mov
mov
addr16
jmp
jge
loopne
jmp
into
push
push
jge
neg
xlat
pop
dec
jmp
gs
add
fdivrs
or
xor
shl
fistps
bound
rcl
push
mov
cmp
enter
xor
lods
in
add
cltd
xchg
jecxz
lea
inc
cmc
cmp
std
ret
leave
call
fmuls
xor
pop
call
cmp
clc
testl
idiv
push
les
call
ret
divl
cmp
ljmp
cmp
clc
sti
je
xchg
add
jb
movq
mov
push
mov
shl
rcll
mov
adc
mov
push
dec
mov
or
mov
adc
shl
icebp
mov
rol
repnz
inc
insl
incl
add
add
or
add
pushl
adc
inc
mov
fadds
call
xchg
jge
push
fsubrl
sbb
ja
adc
notb
push
loope
or
rolb
stc
inc
mov
dec
jmp
fs
mov
loope
inc
pop
and
std
sbb
sti
aaa
jecxz
mov
insb
int
popf
clc
and
rorl
repz
jmp
jne
lret
mov
or
mov
rclb
ss
out
mov
pop
xchg
dec
stc
pop
repnz
ss
dec
add
scas
adc
push
cmpsb
rorb
jmp
fwait
rcrb
xor
dec
add
int3
or
out
mov
hlt
jb
add
add
sbb
imul
pop
sub
xchg
or
dec
dec
pop
aas
pusha
mov
sahf
outsl
fs
jmp
sub
dec
jmp
aaa
push
out
jbe
mov
pop
xchg
cmc
push
or
fwait
enter
loopne
mov
mov
pop
mov
stos
jmp
call
addr16
decl
cmp
or
xor
idiv
sub
cli
scas
insl
cltd
jge
dec
in
repnz
mov
negl
pop
lret
or
in
dec
cwtl
or
imul
jne
xor
or
mov
pop
jecxz
xlat
idiv
rcrb
out
xor
ret
pop
mov
add
add
sbb
xchg
push
push
rolb
loop
frndint
or
bound
or
stos
arpl
push
inc
jns
add
inc
orl
jmp
jecxz
mov
and
push
stos
jecxz
inc
mov
pop
fcoms
call
xchg
iret
adc
or
repz
add
bound
adc
imul
bound
adcl
imul
inc
popa
xchg
mov
fstpt
add
xchg
pusha
add
sub
popa
notb
jmp
bound
int3
int3
xchg
or
dec
inc
mov
lret
pop
or
lahf
fisubs
mov
add
adc
pop
add
fistps
ret
add
mov
aam
and
int
pusha
jecxz
mov
popa
pop
pushf
cltd
arpl
lret
jne
rorb
or
or
je
dec
jmp
lret
cmp
push
or
or
inc
cwtl
aam
out
aas
pop
idivl
lret
fisttps
lret
notb
out
cmc
push
in
adc
bound
testb
shl
out
lret
jl
ret
inc
add
mov
or
inc
push
in
in
loopne
push
lret
mul
dec
inc
inc
adc
dec
jmp
cmp
push
cmp
xor
add
add
xchg
imul
test
outsl
add
add
aad
jge
fnstsw
incl
add
add
or
cmp
add
mov
adc
xchg
pop
mov
xchg
bound
and
push
call
pushf
fdiv
push
imul
push
idiv
sarb
loopne
inc
imul
shrl
std
mov
jge
mov
rolb
in
xchg
dec
add
add
mov
add
es
or
je
int3
jmp
mov
push
or
dec
addl
incb
mov
stc
mov
cwtl
jo
push
call
out
loop
mov
sub
ljmp
xchg
stos
mov
mov
lret
push
jne
mov
test
loop
or
arpl
or
sub
add
adcb
dec
xchg
loope
pop
pushf
cltd
xor
popf
dec
into
xchg
loope
push
mov
loope
test
repz
movsb
pop
xor
loope
fidivrl
call
xlat
xchg
mov
fadds
mov
mov
imul
adc
pop
fstps
dec
dec
xchg
loope
push
mov
in
sbb
mov
inc
in
popa
in
sub
adc
cli
inc
xchg
adc
scas
lret
jmp
inc
push
jmp
mov
or
nop
sbb
lcall
lea
negb
push
inc
lock
ret
gs
inc
or
jmp
pop
jl
out
mov
shlb
sbb
cld
push
rol
mov
mov
lea
loopne
notb
mov
outsb
pop
clc
push
or
add
out
cmp
dec
push
or
fwait
or
into
sbb
in
add
imull
mov
divl
sub
loopne
cmp
mov
cmp
decl
mov
addr16
add
cmp
divl
cmp
sbb
push
mov
divl
mov
xchg
loopne
mov
xor
lcall
imul
sbb
imul
orb
mov
int3
pop
cmc
addb
sti
scas
xlat
psllq
addl
data16
add
add
adc
mov
fdivrs
push
lcall
jns
mull
cmp
add
clc
lea
mov
mov
mov
mov
pusha
outsl
notl
push
jne
xchg
movsl
mov
mov
and
push
pushl
dec
add
or
jmp
xchg
xchg
pusha
and
aad
cltd
pushf
leave
mov
add
add
lds
mov
pop
sti
les
or
adc
jmp
jnp
fcmovnb
lods
pop
popa
pushf
cltd
hlt
sbb
popf
pop
add
adc
mov
mov
cmp
les
insb
push
or
mov
inc
push
add
adc
cmp
xor
fwait
arpl
sub
pop
push
les
sahf
mov
mov
sbb
sub
nop
ret
jl
cmpsl
jle
fidivs
lock
pop
pop
sub
ret
cmc
cld
cmpsl
dec
dec
jmp
xor
enter
pusha
call
ror
push
xchg
fwait
loopne
jne
testb
pop
lock
sub
mov
rorb
add
add
into
mov
aam
enter
pusha
jmp
mov
es
lret
push
push
inc
fwait
loopne
test
testb
cld
testb
scas
outsl
push
in
divl
das
jg
xor
jne
imul
pop
mov
add
add
divl
imul
shrl
popf
fdecstp
out
hlt
pop
add
cwtl
or
ljmp
add
testl
mov
xchg
test
or
adc
jecxz
call
outsb
push
jl
jl
or
gs
mov
mov
lcall
and
pop
mov
mov
inc
decl
aam
mov
shl
pushl
cmpsb
inc
mov
cwtl
lock
add
jecxz
pop
lcall
and
shll
test
ss
loop
arpl
stc
cmp
stos
dec
sbb
push
insb
or
mov
cmp
mov
jmp
cmpsb
inc
mov
lock
pop
jmp
push
sahf
mov
or
jmp
imul
cmove
xor
cmp
or
rcl
or
mov
cld
enter
xchg
andl
loopne
push
rcll
pusha
ret
rcrb
test
lea
dec
adc
push
mov
xchg
loope
rol
fisttpl
je
xchg
push
add
push
stc
mov
pop
rolb
mov
add
add
mov
cmp
mov
testb
dec
add
xchg
or
inc
or
mov
lods
setge
not
pop
dec
add
test
test
inc
mov
imulb
cmp
pop
aaa
testb
mov
testb
or
pop
cmp
notb
decb
mov
aas
stos
push
idiv
int
mov
clc
pushf
fxtract
lcall
push
stos
add
out
sub
and
shr
es
mov
fdecstp
mov
out
imulb
arpl
jmp
pop
in
mov
arpl
ret
add
mov
pop
mov
sbb
shlb
arpl
lea
pop
jmp
incl
or
mov
or
mov
or
mov
repz
jmp
stos
aam
add
pop
push
sbb
push
testl
pop
jne
movsb
mov
mov
push
std
lea
int
or
call
and
xchg
cmp
push
loope
pop
pop
mov
cld
push
call
mov
int
ret
idivl
or
mov
cmp
xor
in
cs
push
xchg
in
loope
cmp
push
push
jnp
sbb
push
loope
push
cld
xor
pop
pop
mov
leave
les
pop
push
cmp
add
sbb
pop
mov
mov
std
push
cmpsb
xchg
mov
inc
fstl
mov
loope
add
int
adc
mov
movsl
push
cmp
and
les
mov
jecxz
jne
jecxz
or
adc
mov
aaa
outsb
or
push
frstor
sbb
mov
fs
add
frstor
lea
aad
idivb
mov
div
sbb
test
lods
adc
pop
mov
not
adc
jmp
pop
mov
or
pop
mov
xor
imul
mov
xchg
xchg
mov
notb
xchg
or
jge
imul
arpl
or
fs
lcall
out
rclb
idiv
sbb
call
fs
mov
fs
ljmp
mov
idiv
fsubrs
incl
shll
loopne
dec
idiv
cwtl
mov
testl
and
rorb
jne
add
add
cmp
idiv
aad
jge
sbb
pop
add
lods
inc
jne
adc
inc
mov
inc
inc
jmp
xchg
in
xorl
call
jnp
push
divl
push
and
lcall
dec
pop
lcall
adc
fwait
inc
pushl
sahf
cmp
inc
call
and
inc
jmp
inc
roll
inc
inc
call
aad
bnd
push
or
sar
jne
inc
jne
jecxz
mov
add
push
in
dec
xchg
loope
cmp
dec
cmp
adc
nop
xchg
adc
mov
mov
mov
add
mov
add
jecxz
mov
stos
dec
mov
dec
xchg
xchg
loope
xor
loope
sub
loope
leave
rclb
adc
add
jne
mov
add
mov
dec
popa
mov
rcl
imull
fs
add
sbb
incb
inc
mov
dec
sub
add
add
mov
pop
mov
lods
pop
xchg
fnstenv
idivb
ss
or
and
shll
or
popf
testb
adc
shlb
dec
test
mov
stc
pusha
mov
out
fdivrl
sub
mov
fs
mov
mulb
in
inc
add
pop
clc
idiv
dec
divl
int
inc
add
cmp
lea
imul
sbb
outsl
bnd
idiv
shlb
ljmp
out
push
idiv
outsb
push
jl
testb
negl
dec
cmp
push
add
mov
lcall
add
xchg
addr16
testl
sbb
pusha
incl
add
add
dec
cmp
push
cmp
jmp
rorl
sub
add
mov
xor
sub
idivl
daa
cmp
stos
add
mov
decl
subb
daa
or
ret
sub
add
xchg
lcall
xor
mull
mov
call
xchg
fisttpl
idivl
dec
lahf
inc
incl
add
add
pop
jmp
movsb
pushl
sub
or
setne
js
bound
mov
xchg
lods
mov
lods
xor
adc
mov
inc
dec
mov
push
push
mov
mov
dec
fldcw
sti
imul
dec
jnp
fwait
aaa
jnp
pop
dec
and
mov
jae
xchg
mov
daa
inc
mov
dec
mov
mov
dec
stc
mov
dec
sub
pop
dec
sbb
pop
mulb
mov
aad
mov
rol
add
push
push
mov
cmp
add
js
mov
pop
pusha
mov
mov
xchg
inc
add
xchg
jl
xor
xchg
jmp
adc
sti
rorl
pushf
loopne
add
mov
jmp
add
addr16
push
test
mov
icebp
xlat
dec
rclb
aad
dec
adc
cmp
add
dec
add
mov
loopne
sbb
or
inc
pusha
add
dec
mov
cwtl
mov
mov
mov
jne
pop
jge
sbb
pop
jge
or
sarb
jne
dec
idiv
add
jne
pop
jge
fst
movsb
call
outsb
lret
add
push
roll
in
pop
testl
incb
mov
aas
jne
test
flds
add
add
mov
jne
stos
les
hlt
mov
dec
add
push
inc
push
push
cld
popa
movsl
push
stos
and
dec
mov
sar
ret
icebp
lea
push
int
sub
flds
mov
and
push
repz
inc
mov
fadd
cld
or
aad
dec
call
mov
and
mov
or
add
jecxz
int
loope
xor
stc
pop
jl
sbb
inc
sbb
stc
pop
sbb
incb
in
add
fldl
jne
dec
cmc
loop
jmp
inc
add
push
sub
ret
push
in
push
push
loope
jae
sbb
lds
xchg
loope
shrl
int3
lods
jae
cmp
add
add
xchg
mov
cmp
push
inc
mov
repnz
loope
pop
inc
cmp
or
lret
cmpsl
or
jmp
push
lret
aas
xchg
hlt
fistpl
testb
inc
or
fdiv
inc
mov
sbb
lret
cwtl
loopne
hlt
mov
jo
lods
pop
jmp
or
dec
jmp
nop
mov
loope
or
mov
jl
dec
daa
add
rorb
jmp
int3
sar
pop
shll
dec
push
sbb
rolb
sbb
cmp
pop
test
or
out
incb
xor
pop
testl
call
test
in
test
popa
idiv
mov
jge
lret
call
out
push
jl
mov
lret
mov
jne
dec
lea
in
hlt
add
push
push
push
jge
or
test
insb
cmpsb
ljmp
add
push
clc
testl
xor
sub
jmp
cld
or
loope
inc
jmp
xchg
fadd
cld
or
loope
dec
call
cmpsb
iret
pushl
mov
lock
dec
lcall
aad
mov
aad
test
push
addr16
int
stos
inc
cmp
mov
je
ljmp
mov
mov
cmpl
add
xchg
icebp
inc
pushf
sbb
add
pop
scas
pop
aam
insb
ja
push
mov
out
shrl
orb
cmp
loope
loope
adc
fimull
lock
or
cmp
add
pop
add
mov
leave
outsl
es
lds
shll
mov
mov
lods
jnp
mov
pushf
cltd
xor
loope
popf
inc
xchg
lods
repz
inc
subl
outsb
into
daa
add
sti
negb
out
pop
into
lods
fists
sar
into
mov
divb
mulb
ja
movsb
push
into
lods
mov
add
testb
push
lock
daa
hlt
add
or
push
sar
call
inc
mov
jmp
and
mov
sub
cmp
adc
lods
cmc
sbb
mov
negb
lods
jl
addr16
push
rol
cwtl
pop
mov
adc
cld
nop
bound
jecxz
call
in
shl
push
pop
dec
push
inc
xor
xchg
divl
subb
push
divl
push
jge
lea
mov
add
add
add
ret
je
shl
add
inc
loope
cmc
jne
push
cmp
out
invd
add
push
pop
test
xchg
or
ljmp
push
xchg
bound
jg
bound
mov
fisttpl
lea
je
mov
add
fwait
add
or
shll
add
imul
cmp
mov
mov
adc
nop
lods
or
lcall
pop
dec
mov
ss
jg
dec
dec
mov
mov
fnstcw
inc
inc
or
movsb
or
mov
cmp
stos
xchg
scas
aas
pop
int3
cmp
fwait
mov
outsl
xchg
stos
mov
lea
notb
add
push
loope
cmp
adc
loope
ret
aas
add
stos
jnp
pusha
mov
loop
int3
xchg
es
mov
dec
int3
int3
xchg
or
loop
add
addb
ds
nop
je
repz
mov
mov
loopne
fldt
pop
push
pop
mov
lods
mov
add
jb
or
adc
imul
jecxz
mov
testb
mov
jl
es
mulb
stos
mov
inc
push
shl
xchg
aam
popf
push
out
ss
pop
mov
jp
negb
test
testb
pop
add
imul
mov
divb
add
xchg
mov
notb
fucomip
mov
loopne
sbb
jo
cli
data16
std
mov
in
imul
mov
and
idiv
imul
jmp
js
stos
mov
popa
idiv
int
mov
clc
hlt
jp
jge
int
popf
add
mov
cld
jmp
cwtl
loopne
pusha
nop
or
std
jnp
stos
cli
push
jge
mov
dec
sbb
test
xor
xchg
std
mov
push
xor
repz
mov
lcall
xchg
or
jnp
xor
xchg
add
xor
je
mov
call
pop
sarb
flds
jne
push
xchg
cmpsl
inc
dec
xor
cmp
stos
xor
ret
fisttpll
ret
or
decl
mov
jne
out
inc
ret
test
or
jne
xchg
loopne
jecxz
out
bswap
xchg
insl
sahf
mov
mov
cmpsb
int
push
mov
xor
stos
and
cmp
and
add
fstp
int3
xchg
aas
sub
jmp
add
push
sbb
arpl
loop
add
dec
mov
xchg
mov
pop
push
test
add
inc
mov
mov
mov
mov
cli
sti
and
lods
mov
loope
fstl
add
add
loopne
sub
mov
mulb
push
roll
push
mov
pushf
or
mov
or
popf
movsl
jl
cmpsl
mov
insl
aaa
lea
movsl
jl
cmpsl
in
repz
xchg
or
jmp
push
push
test
movsl
cmp
push
push
or
clc
mulb
mov
jnp
loopne
push
test
inc
loopne
je
testb
shl
std
js
loop
loopne
dec
push
push
js
lods
mov
add
imul
testb
mov
pop
je
pop
call
push
shl
popf
js
and
pop
int3
pop
imull
jo
lods
repnz
add
imul
testb
mov
pop
hlt
xchg
pop
call
adc
jo
bound
sub
imull
jo
lods
jb
add
mov
addr16
test
lods
repz
or
cmpsb
outsb
fistpl
pop
movsl
and
lret
lds
xor
cmp
das
leave
into
mov
mov
mov
xor
sbb
push
orl
add
add
add
lods
or
dec
mov
or
shll
inc
inc
inc
dec
or
mov
or
or
xor
hlt
sbb
push
sbb
sub
pop
loope
xchg
aam
in
loopne
mov
lods
xchg
lods
int
insb
xor
mov
std
addr16
stos
mov
mov
mov
mov
and
call
popf
mov
lods
adc
mov
jne
notb
and
fildl
xor
mov
inc
or
and
mov
mov
int3
xchg
or
popf
movsb
arpl
mov
add
sub
mov
mov
add
add
in
mul
add
loopne
andb
sub
mov
loopne
mov
cmpsb
pop
adc
imul
cmp
mov
testb
mov
jbe
xchg
jl
pandn
pop
lcall
jmp
xchg
jmp
push
or
add
add
sbb
mov
loopne
push
push
pushl
data16
lea
lods
ljmp
jmp
loopne
adc
jmp
cmp
dec
data16
mov
mov
imul
cmpl
call
pop
shrb
pushl
jo
cmpsl
fisubrl
mov
jb
incl
add
add
imul
pushl
push
lock
lcall
push
std
adc
mov
xchg
sti
mov
jmp
movsl
sti
hlt
in
add
sub
mov
incl
and
call
loope
sahf
inc
insb
or
mov
add
addl
push
roll
push
out
les
loope
and
popa
es
loope
cmp
test
dec
dec
cwtl
loope
push
mov
aas
push
cmpsl
dec
xor
pop
xor
xor
nop
dec
pop
xchg
loope
int3
mov
xchg
loope
push
pushf
loopne
mov
add
loope
rorl
and
pop
adc
add
add
sub
xor
mov
loope
jecxz
in
or
call
sbb
mov
push
add
jne
imul
inc
lahf
popf
andb
data16
scas
pop
jg
or
jno
dec
jmp
pop
popf
divb
popf
andb
sub
or
jne
decb
mov
push
sahf
or
orl
cmc
xchg
jg
not
jle
add
mov
test
pop
in
pop
popf
popa
jmp
mov
negb
xlat
popf
mulb
lods
incb
adc
add
push
inc
bound
ljmp
out
fstps
dec
incl
add
add
push
mov
push
testl
lds
jmp
jge
jmp
and
testl
and
jne
js
mov
loope
idiv
loop
push
call
ret
not
divl
js
mov
leave
pop
idiv
xor
push
call
mov
jg
jnp
cmp
loope
adc
sbb
jmp
add
call
mov
incl
jg
inc
inc
cmp
jne
cmp
sub
sub
and
cs
bound
fstps
decl
xchg
movsb
add
mov
jp
jmp
movsl
insl
jmp
jg
fistpl
cmp
shll
test
mov
cmp
mov
jge
mov
add
add
push
aaa
decl
mov
mov
mov
pop
mov
loope
mov
fwait
gs
cwtl
fdivr
out
loope
cmpl
xor
sub
int3
int3
xchg
leave
add
orl
mov
lods
gs
aaa
inc
mov
add
adc
pop
fistpl
xor
cmp
xchg
mov
add
xchg
scas
leave
mov
xchg
iret
and
cltd
push
jmp
nop
or
mov
dec
xchg
inc
or
sbb
sahf
fisttps
xchg
or
iret
and
push
push
or
mov
jae
push
ds
idivl
add
add
mov
xchg
mov
jnp
push
fsub
push
mov
sub
jmp
lods
mov
neg
jb
notb
mov
xchg
pop
mov
cli
mov
fnstsw
inc
fs
add
cltd
notb
mov
sbb
imulb
push
or
xchg
test
cld
lea
cmp
push
popf
out
and
js
inc
add
push
or
idiv
stos
std
dec
pop
and
divl
lcall
std
into
push
inc
in
or
mov
divl
jl
fisubl
jne
mov
mov
nop
stos
fisttpll
je
insb
incl
add
add
test
out
dec
and
mov
in
roll
and
lret
cmp
les
lods
adc
mov
and
inc
jmp
adc
mov
je
mov
jne
xchg
test
das
and
push
pop
xchg
mov
enter
movsl
xchg
out
mov
add
add
xchg
addr16
cmpsl
sub
sub
mov
sbbl
xor
jae
cmpsb
sub
sub
lahf
jb
popf
sub
cwtl
test
pop
xchg
mov
mov
das
inc
and
sbb
aam
xchg
xchg
loope
adc
test
mov
xchg
mov
or
and
sub
push
adc
add
and
sub
sub
add
aad
cltd
js
add
sbb
mul
cwtl
adc
xor
xchg
cmc
push
je
sbb
mov
loope
and
cmpsb
cmpsl
lods
push
inc
pop
push
or
in
xchg
negb
lock
testb
scas
pop
xor
fildll
cmp
jbe
hlt
push
ret
cmp
or
cmpsb
push
cs
xchg
notb
xchg
notb
mov
hlt
add
testb
push
lret
les
push
notl
lcall
out
cmp
push
mov
bound
dec
xchg
jne
jns
call
push
add
lods
cmc
jne
jns
pushl
push
add
jns
incl
add
add
push
cld
scas
iret
imulb
push
or
stc
repnz
in
bound
shl
push
call
dec
insl
push
inc
and
cwtl
out
ffree
push
cmp
jne
js
lahf
xchg
push
ret
or
xchg
mov
in
and
add
cs
lret
pop
sbb
cmp
or
int3
movsl
jne
lea
or
mov
or
mov
or
mov
or
mov
mov
faddl
jbe
arpl
and
test
adc
or
call
movsb
xor
sysenter
push
rorb
add
notl
rcr
push
hlt
mov
incl
cmc
jne
add
inc
sub
fistps
fisttpl
xor
add
add
xchg
imull
ret
xchg
imul
xchg
push
mov
flds
clc
stos
popf
mov
mov
cmpsl
test
adcb
repz
fistps
and
ret
xchg
mov
mov
dec
or
sbb
pop
sub
sbb
sti
add
int3
xchg
pop
outsb
xor
clc
sbb
pop
aaa
sub
add
add
push
or
xchg
imul
sub
pusha
jmp
lock
inc
jmp
movsb
xchg
idivb
mov
je
popa
call
loop
inc
jmp
jae
negb
bound
je
idivb
stos
xchg
mov
xchg
das
xor
sahf
mov
stc
sahf
stos
xchg
notb
xchg
jl
ja
idivl
xchg
mov
add
testb
xlat
lock
push
pop
cmc
inc
out
sbb
lret
fs
inc
add
gs
cmc
aad
cmp
adcb
gs
or
mov
idiv
lcall
dec
stos
inc
push
call
dec
xor
add
mull
imul
call
dec
scas
xchg
incl
add
add
ror
or
sub
shl
push
mov
mov
xchg
dec
adc
test
fs
cmpl
mov
bound
mov
pop
mov
or
mov
mov
je
cmp
xchg
into
inc
mov
rolb
sub
pusha
cmc
mov
pop
adc
add
mov
hlt
out
xor
xor
or
jnp
xchg
sub
mov
hlt
out
inc
sub
je
mov
arpl
enter
leave
mov
jge
mov
xchg
aam
fcoml
data16
mov
scas
mov
or
dec
rolw
xchg
jl
cmp
popl
sbb
or
mov
mov
ds
lcall
or
mov
and
mov
scas
mov
jnp
dec
or
clc
sbb
mov
ret
pop
mov
dec
aad
and
pushf
xchg
repnz
fcoml
cld
or
adc
aam
add
add
ja
push
jo
not
imul
ds
push
and
or
xchg
push
pop
fxtract
mov
and
or
dec
lahf
mov
xacquire
jmp
test
or
cli
or
pop
dec
mov
and
scas
pop
icebp
cmpsb
add
xchg
or
iret
or
test
mov
jne
mov
pop
mov
mov
mov
mov
jg
lds
xchg
inc
mulb
dec
dec
add
mov
jne
mov
jg
cltd
test
pusha
js
pop
idiv
js
std
pushl
mov
in
mov
cmp
mov
stos
cmc
jmp
sub
call
fcompl
testl
sub
cmp
sub
adc
out
cwtl
test
sub
mov
jnp
mov
lds
sti
xor
jnp
mov
int3
es
sbbb
adc
shll
sldt
add
lret
dec
fwait
test
test
lcall
popf
mov
and
xchg
cmp
pushf
fwait
gs
test
or
adc
cmp
jnp
mov
ljmp
push
adc
mov
xchg
repz
and
xor
add
adc
mov
and
filds
add
add
xchg
out
or
movsb
fbstp
sub
and
mov
fisttpl
pop
ljmp
mull
mov
jge
mov
mov
mov
mov
and
pushf
or
cmp
jnp
or
jl
push
lods
mov
pop
mov
add
sbbl
mov
cmc
cmp
mov
xchg
mov
in
movsl
subl
cmc
faddl
mov
repz
push
push
lods
mov
je
xor
mov
xchg
push
lods
mov
inc
sub
push
insb
inc
loope
fwait
mov
xor
out
jl
jge
mov
pushf
push
xor
mov
stos
cmc
mov
mov
add
cmp
jmp
stos
cmc
inc
mov
push
pushf
sbb
ret
std
mov
mov
mov
mov
adc
bound
sub
call
jl
repnz
mov
xchg
cmc
jne
mov
pusha
mov
push
mulb
xchg
or
add
add
add
cwtl
loopne
or
cmc
leave
mov
and
jnp
or
xchg
inc
xchg
pop
je
jae
arpl
sti
in
or
testl
popl
mov
push
add
mov
mov
xor
loop
push
hlt
inc
ja
add
mov
push
repz
add
and
add
jb
fldt
add
mov
mov
es
mov
jne
xchg
xlat
pop
hlt
mov
mov
dec
add
ja
lods
pop
jmp
adc
jae
xor
sbb
pop
add
sub
sub
in
add
sbb
xor
and
repz
cld
sub
add
add
push
out
xchg
xchg
filds
lret
roll
mov
add
jbe
cltd
add
fs
insb
xchg
jg
sbb
mov
wbinvd
jmp
mov
call
aam
and
negb
add
jg
mov
in
data16
divb
test
sahf
jo
aam
test
test
testb
xchg
cmp
jg
outsb
addb
push
push
sub
pop
push
adc
pop
test
arpl
aaa
adcb
xchg
add
divb
js
push
jo
or
mov
stos
cmc
cmp
cmc
mov
mov
mulb
dec
dec
add
clc
notl
cmc
jne
mov
jg
add
pusha
adc
dec
idiv
mov
stos
jnp
or
sbb
xor
nop
cmc
mov
mov
add
dec
or
push
test
cmc
push
adc
std
pushl
jmp
testl
add
cmp
mov
cmp
adc
flds
cltd
pop
movsb
mov
mov
call
add
jmp
pop
sbb
arpl
pop
in
cs
flds
adc
stc
inc
sbb
cmp
cltd
pop
and
js
sub
pop
fcompl
notb
jmp
in
incl
sbb
add
cwtl
pop
in
ja
repz
jecxz
adc
xor
xchg
push
daa
fildl
sbb
or
mov
test
sbb
negl
mov
test
dec
mov
xlat
sbb
sbb
test
sub
sbb
mov
arpl
or
pushf
xchg
sbb
push
adc
test
sbb
add
add
fiaddl
sbb
or
sbb
add
in
popa
cmovl
mov
fdivs
orl
and
or
ret
imul
cmpl
hlt
push
xchg
in
sbb
xchg
mov
adc
out
xor
cwtl
insb
jb
movsb
add
jnp
pop
jb
pop
int
sbb
mov
adc
je
andb
cmp
push
aam
bound
inc
sub
hlt
pusha
or
rorl
pop
push
in
mov
aam
mov
fiadds
add
adc
push
dec
sub
pop
and
pop
call
add
call
adc
call
sbb
cmc
decl
scas
pop
inc
cmc
push
je
inc
repnz
stos
cli
scas
lea
bnd
test
lret
inc
sub
aam
pushl
lcall
lcall
cld
stos
and
call
mov
mov
inc
setne
test
jb,pn
fistpl
pop
jne
mov
xchg
pop
mov
jp
mov
out
sar
and
sbb
adc
stc
cld
incl
cltd
sti
or
ret
jecxz
push
sub
sub
jne
and
jne
mov
notl
xchg
imul
ret
addb
add
xchg
xchg
testl
xchg
xchg
roll
ud0
add
bound
mov
fwait
mov
dec
and
rorl
out
addb
lea
popl
cmp
xchg
push
jg
add
push
push
add
cltd
cli
inc
clc
lea
inc
xlat
fbld
call
adc
lahf
adc
push
cwtl
lcall
add
and
mov
fwait
rcl
fistps
xchg
filds
pop
cmp
bound
cwtl
sbbl
jo
pop
adc
fdivrl
jg
mov
jns
idivb
fcmove
add
notb
pop
fcmove
or
sbb
jl
cmp
stc
inc
cmp
push
sub
add
add
or
bound
stc
lea
fld1
sbb
leave
mov
push
loope
out
jg
cmpsb
sbb
mov
or
pop
sbb
add
or
cmpsb
filds
add
xchg
addl
out
push
fadds
in
fisubs
addl
pop
push
popf
lcall
repnz
jne
xchg
mov
or
xchg
and
into
or
imulb
and
imul
imulb
lcall
cltd
pop
inc
push
dec
pop
lahf
jmp
rcrb
cwtl
bound
test
decl
or
or
or
xchg
sub
xchg
adc
aad
pop
stos
movsl
pop
les
mov
in
sbb
aas
mov
sbb
shll
nop
shrl
adc
inc
psubb
xor
push
mov
jae
stos
xchg
outsb
sbb
jl
sbb
xchg
pop
fs
ljmp
shl
enter
inc
sbb
cs
sti
xor
lock
jnp
cmp
pushf
sbb
xchg
sub
mov
ds
ja
cmpsb
xchg
push
adc
jge
jle
fdivs
mov
xchg
xchg
mov
loop
rclb
popa
mov
add
adc
cs
mov
mov
jge
sti
mov
or
repz
adc
loop
jp
jnp
hlt
jp
call
adc
cli
sti
add
add
add
mov
or
je
lods
popf
jnp
sbb
jnp
icebp
xchg
jmp
jl
or
pop
jge
idiv
pop
jnp
loope
xchg
stc
loope
inc
popf
add
icebp
xchg
cwtl
jge,pt
jl
jl
add
jp
es
loope
jo
jnp
in
add
add
testb
loope
jo
add
add
add
add
jp
out
loop
jo
dec
lret
std
loope
mov
cmpl
call
movsb
cmc
jmp
lahf
orb
dec
or
xor
dec
divb
ds
xchg
int
imul
jnp
pop
and
jmp
jg
repnz
movsb
cmc
mov
add
add
and
push
lcall
add
cli
push
inc
movsl
mov
mov
jne
dec
in
pop
xchg
int
dec
xchg
or
mov
jge
insb
sahf
pop
hlt
insb
or
sbb
nop
or
decl
nop
sti
inc
cltd
or
sar
jmp
idivb
jne
and
add
add
add
or
mov
or
lret
sub
add
mov
mov
mov
jne
mov
mov
imul
sbb
jge
imul
add
jne
xchg
out
cwtl
xchg
jae
fistps
je
push
push
pop
jns
adc
jmp
dec
and
push
inc
jmp
push
xor
xchg
sbb
xchg
and
outsl
sbb
and
jle
adc
pushw
add
negb
repz
outsl
push
jecxz
fisttps
popa
mov
add
cltd
lret
jns
ljmp
js
shld
push
stos
leave
ljmp
js
lods
les
push
in
aas
mov
add
and
sar
push
test
cmp
or
xchg
push
mov
sbb
mulb
xchg
andl
cmc
cld
pop
jo
insb
xorl
jno
add
fisttpl
incb
xchg
xchg
or
sub
icebp
add
loope
bound
mov
or
push
xchg
or
movsl
sub
ret
mov
mov
loopne
push
fildll
jne
fwait
mov
addl
divl
fwait
xchg
lea
mov
pop
pushf
adc
cwtl
js
lea
lods
addl
pusha
add
push
push
call
jo
push
jb
push
call
pushw
ljmp
add
add
push
divl
mov
xchg
push
push
call
pusha
dec
push
jb
push
call
mov
xchg
mov
lock
insl
or
xor
inc
or
pushf
sti
jnp
lock
stc
adcl
imul
jne
adc
enter
leave
inc
mov
push
add
add
mov
jne
and
adc
lds
or
sti
imul
push
push
jle
outsl
inc
in
add
shrl
inc
aam
add
rol
stc
ret
cmpsb
outsl
inc
mov
scas
or
mov
fisubl
jl
or
mov
aaa
xchg
jne
jl
test
jnp
out
xchg
insb
movsb
push
jae
jns
ja
and
cld
jae
lret
or
sub
add
xchg
adc
mov
xchg
sbb
adc
adc
sar
add
arpl
sti
imul
jecxz
jmp
popa
xchg
ja
rcr
or
or
testb
mov
jne
push
push
jne
in
leave
xchg
xchg
stc
test
add
icebp
and
notb
mov
neg
sbb
fs
pop
test
cmp
jl
pop
xchg
jae
cmp
jl
pop
test
sbb
jl
js
jae
push
insb
or
xchg
imul
xchg
pop
dec
jno
pop
lret
loope
leave
adcl
mov
mul
dec
jmp
repnz
pop
in
cmp
popf
jnp
push
add
es
lcall
and
incl
pushf
loopne
mov
idiv
add
leave
daa
outsl
notb
xchg
add
mov
dec
pushf
or
xor
jo
je
pop
xor
nop
jae
push
xor
or
subb
pushf
cmc
or
and
push
jp
add
xchg
in
lcall
outsb
std
cmp
decb
add
add
mov
cmp
adc
adc
cld
xchg
add
fwait
sub
mov
lcall
xor
mov
cmp
add
push
jmp
cli
call
xchg
rorb
cs
add
repz
mov
lea
ud0
jmp
pop
dec
dec
jnp
ret
or
int3
xchg
aam
cmc
and
add
jnp
rcrl
jnp
dec
xchg
ds
xchg
mov
sbb
xor
jl
jae
jno
jno
jb
pop
sbb
ret
mov
jl
jb
jno
push
stc
test
pop
loope
xlat
or
fistps
push
and
push
addr16
shll
dec
inc
jno
push
roll
xor
adc
popf
lahf
jae
pop
mov
xchg
jl
jae
jno
jbe
sub
outsb
mov
loopne
pop
jno
mov
ja
testb
mov
fs
jb
pushl
insl
mov
adc
add
add
push
push
insb
cmpsl
jno
push
mov
mov
xchg
outsl
loope
push
jo
test
imul
mov
xchg
outsl
shrb
adc
imulb
mov
fnsave
jge
shrd
adc
jge
call
or
adc
add
adc
cmc
ljmp
bound
or
push
sub
xor
cmp
idiv
subb
mov
xchg
cmc
decl
jb
mov
mov
out
into
add
xchg
cmc
jp
sbb
gs
add
add
dec
incb
addl
outsb
repz
mul
loope
idiv
sarl
dec
push
test
mov
lahf
inc
inc
mov
push
xchg
jge
or
outsl
or
add
cli
in
lea
jae
and
or
je
mov
mov
xchg
in
js
lret
aad
mov
lods
or
movsb
lds
mov
jbe
stos
mov
push
xor
scas
inc
mov
or
xchg
adc
add
fldcw
mov
ja
fldenv
js
inc
or
aad
or
sbb
iret
std
inc
das
pop
incl
call
loopne
mov
dec
sbb
add
xor
jge
xchg
jbe
inc
outsl
jg
in
push
add
pop
and
jp
jmp
std
add
xchg
push
mov
pop
les
jns
jl
add
outsb
das
int
pushf
fistps
andl
lods
insl
jne
je
jp
jnp
movsl
jmp
mov
js
jl
add
pop
daa
pop
out
jmp
insl
movl
xchg
jl
add
insl
or
cld
int3
or
xchg
pusha
push
lods
rorl
sahf
push
dec
inc
sub
insl
add
xor
inc
jmp
notl
data16
mov
jmp
cld
movsb
movsb
dec
xchg
cmc
hlt
xlat
aam
jmp
mov
pusha
dec
sub
or
and
push
ja
test
decb
orl
pusha
jmp
cmc
sbb
adcl
jae
idiv
ds
jp
xchg
clc
stos
pop
je
pop
incl
xchg
cmc
call
or
xchg
jnp
jp
add
das
sbb
ljmp
or
and
loop
mov
cmp
dec
cld
add
jecxz
call
scas
push
pop
test
or
jb
lock
arpl
pop
jne
bound
pop
xchg
bound
pop
xchg
addl
addl
xchg
jnp
cmp
hlt
call
mov
jae
inc
cwtl
cmp
mov
add
add
mov
loop
cld
xor
push
pop
sub
or
pop
scas
in
sbb
or
repz
mov
stc
arpl
je
push
mov
mov
incl
loop
adc
or
mov
mov
mov
outsb
bound
mov
lock
adc
jnp
mov
out
add
add
xchg
xchg
hlt
bound
fcomps
adc
inc
push
mov
sub
imul
push
cld
xor
scas
lcall
push
add
sbb
pop
mov
lock
cwtl
div
imul
jl
aad
in
out
mov
loopne
mov
sti
mov
iret
xor
xchg
xchg
fildll
add
add
fists
adc
incl
imul
xchg
add
in
xchg
or
roll
dec
loopne
rcrl
test
sbb
mov
fstps
or
mulb
adc
mov
push
add
jns
jle
imul
sbb
loop
negb
jge
push
lret
je
imul
jo
jno
ss
imul
xchg
notl
mov
mov
push
or
stc
or
inc
daa
outsb
rolb
call
jge
pop
hlt
mov
add
outsb
add
rorl
incl
add
add
push
or
jns
mov
divl
or
imul
jne
jnp
push
imul
decl
cmp
jl
hlt
pushl
jge
mov
ret
rorl
sar
jge
and
add
cltd
in
incb
add
add
push
inc
mov
adc
jge
je
push
and
mov
inc
inc
mov
jle
hlt
in
idiv
sti
test
pop
dec
jge
add
loop
fldln2
hlt
addr16
daa
dec
add
or
or
jle
movsb
xor
mov
jp
dec
jge
add
imul
inc
popw
cld
mov
sbb
clc
pushf
pop
push
add
bswap
dec
xchg
fists
jns
jne
jl
lea
sti
ret
fildll
fists
stc
push
sti
cmp
mov
inc
mov
cmpsb
jno
jl
mov
dec
insb
lea
inc
mov
mov
jl
mov
mov
data16
pushf
fists
jns
rol
fildll
fisttpll
movsb
mull
mov
lods
divl
pushf
loopne
xchg
data16
ja
notb
xchg
adc
std
pushf
loopne
ja
idiv
fsubrl
jl
jl
push
data16
ret
ljmp
jmp
cwtl
jl
cmp
mov
icebp
jmp
orl
adc
wbinvd
stos
push
sub
mov
or
cwtl
loopne
pop
xchg
or
or
inc
jmp
jl
jge
add
sub
cmc
add
cwtl
cmc
adc
ss
pop
call
cmp
cmp
gs
incl
push
inc
jne
xor
repnz
pushl
push
inc
xor
xlat
or
jno
cmc
xor
push
stc
inc
add
xchg
lods
pop
fs
mov
and
mov
xlat
or
lock
in
or
in
or
pop
push
leave
aaa
xchg
or
in
jl
push
test
jmp
out
enter
mov
insl
leave
add
dec
dec
add
test
cmpxchg
push
pop
cmp
or
sub
or
add
mov
xor
loope
and
pop
mov
xor
pop
lea
int3
dec
add
rol
insl
mov
lcall
sub
add
jl
insb
addr16
sub
add
insl
or
in
xchg
loope
mov
js
ret
dec
test
scas
clc
cmp
aaa
clc
cmp
add
xchg
xchg
or
xchg
call
cltd
add
xchg
push
push
sbb
mov
or
jmp
mov
or
out
push
fs
dec
out
fisttps
shlb
in
shll
mulps
or
mov
arpl
adc
pop
aad
inc
pop
insb
adc
fsubrs
jnp
adc
jae
or
xchg
subl
inc
jmp
mov
inc
mov
xchg
mov
rclb
fmull
cmc
pushf
xchg
jb
rorl
push
cltd
pop
fcoml
sbb
call
cltd
xorl
push
add
push
js
xor
insb
ret
and
test
lahf
xchg
cmc
adc
insb
mov
add
test
aaa
test
fcoms
int
bound
shr
rol
xchg
pusha
xchg
xlat
or
hlt
inc
add
mov
jne
in
lea
xchg
pusha
test
call
outsb
push
pop
test
aam
push
lock
cmp
push
inc
gs
or
push
pop
test
add
add
xchg
or
iret
cwtl
addl
mov
imul
fs
mov
or
or
mov
je
push
push
xchg
insb
lods
or
enter
jo
imul
data16
or
sbb
out
ss
std
je
aad
pushl
icebp
dec
add
or
add
or
mov
pop
call
in
call
fsts
cld
decb
cld
cmp
leave
and
add
dec
add
dec
add
xchg
imul
cmc
and
call
filds
xchg
push
cld
sbb
inc
mov
mov
add
add
add
filds
xchg
push
mov
xor
roll
bound
xchg
imul
mov
jmp
loope
add
bound
or
mov
imul
mov
add
fcomip
shrb
xchg
xchg
adc
add
dec
mov
xor
cmovl
jne
loope
std
pop
testb
add
add
pop
xchg
scas
pop
idivb
fdivr
fs
push
jl
loopne
negb
pop
jl
pop
insb
sbb
lahf
pop
subb
cmp
sbb
in
or
outsb
pop
notb
pop
notb
mov
jl
pop
call
mul
ds
loopne
or
into
movsb
fs
loope
idiv
fcmovu
in
dec
or
cmp
loopne
adc
lcall
hlt
lcall
bound
sbb
mov
mov
icebp
cmp
ret
pop
mov
bound
pop
faddl
call
cs
pop
call
sahf
push
jp
cmpsb
push
dec
jmp
sbb
or
jg
or
gs
loope
mov
mov
add
add
cwtl
pop
mov
lret
gs
pop
lds
mov
dec
ds
mov
and
or
mov
sbb
jns
rclb
clc
mov
pop
jmp
shl
push
jecxz
or
cmp
incl
divl
mov
stos
lret
xchg
jmp
jae
mov
insl
or
test
jae
jno
cmp
jge
hlt
cmp
mov
pop
inc
jge
sbb
rorl
fidivs
in
jecxz
int
xlat
dec
pushf
xchg
fisttps
lahf
ja
xchg
ja
mov
add
sub
add
xchg
scas
inc
sbb
add
outsl
lock
loope
enter
add
imul
fistps
cmp
lock
stc
mov
hlt
fcmovbe
fcomip
fmuls
call
adc
or
push
shl
call
xor
call
and
dec
rorl
push
or
adc
add
sub
xchg
or
imul
mov
jnp
dec
fcom
cmpsb
push
insb
or
orb
or
and
shl
in
xchg
or
xchg
or
push
fsub
in
jp
fs
inc
push
je
mov
ljmp
xchg
or
cmp
call
ljmp
js
idiv
xor
xchg
or
and
xchg
or
sub
mov
in
or
cwtl
insb
out
adc
push
mov
cmp
addl
fs
pushl
fmuls
movsb
xchg
pusha
hlt
xchg
or
mov
loopne
ret
xchg
or
std
push
rcrb
add
gs
mov
mov
pushf
in
sub
call
mov
insl
out
dec
xchg
sbb
insl
icebp
mov
lods
lods
or
rcll
mov
je
push
cld
outsb
mov
and
jno
pop
dec
insl
or
xchg
xchg
pusha
dec
insl
shrb
push
or
enter
fidivrs
mov
push
add
lret
add
add
mov
push
add
out
stc
mov
jge
fs
sub
xchg
scas
in
loopne
or
fs
pop
jnp
sbb
outsl
dec
xchg
jnp
psubusw
add
cmpsb
xchg
mov
in
mov
push
fucomip
cwtl
push
jbe
insb
out
adc
jbe
push
xor
in
cli
push
adc
fcmovnu
sahf
in
loop
lahf
fcmovnb
adc
fcmovnu
adc
ret
fcmovnbe
adc
mov
xchg
fucomi
adc
mov
adc
cmpsb
mov
je
or
xchg
or
or
loopne
jecxz
pusha
sbb
dec
loope
mov
or
dec
loope
cs
jmp
test
dec
loope
lds
add
or
jmp
inc
outsb
pusha
imul
cmc
fcmove
sbb
sahf
notl
inc
mov
add
xchg
loopne
xchg
xchg
divb
loopne
orl
clc
mov
mov
in
cmpsl
push
push
add
add
loope
mov
hlt
ljmp
imul
mov
test
rolb
mov
gs
jmp
cmp
sbb
sbb
push
jge
mov
push
adc
add
push
cmp
sbb
jb
idiv
jl
mov
ds
nop
or
or
loopne
xor
testl
in
push
cmp
imul
pop
jbe
lea
jnp
or
mov
or
mov
decl
cmp
or
dec
rorl
jmp
add
into
std
sub
inc
jo
push
cmc
lret
jl
call
xchg
std
gs
mov
data16
icebp
jo
jmp
lret
xchg
mov
je
and
rorl
ss
jmp
mov
outsb
ja
push
push
jmp
ds
push
or
fcoml
adc
popf
inc
cmc
jno
das
fsubrl
and
mov
mov
ljmp
mov
pop
pop
mov
add
or
test
sbb
inc
fsubl
add
leave
rcr
add
cmpsl
call
ljmp
call
jecxz
adc
inc
pushf
xchg
jmp
pop
mov
cmp
jmp
das
aad
push
ljmp
aam
xchg
add
repz
rorl
loop,pn
loopne
jmp
negb
xor
notl
fs
push
negb
mov
pop
imulb
add
add
push
not
psrld
fisubrs
or
pop
mov
or
xchg
jp
xchg
mov
cltd
or
adc
sub
inc
imul
mov
idiv
sbb
in
cli
test
or
or
mov
push
rolb
mov
mov
sbb
mov
pop
dec
fdivs
dec
shll
dec
and
cmc
jne
insl
mov
mov
cmp
call
cmp
mov
in
jne
insl
outsb
cli
sarb
out
icebp
ret
lea
hlt
jmp
in
mov
aaa
idiv
std
mov
mov
lret
sbb
mov
shr
movsb
stos
push
add
out
out
add
add
jno
inc
jl
add
mov
incb
dec
out
je
mov
jnp
repnz
sub
push
jl
mov
scas
inc
fnstenv
mov
dec
leave
or
jl
pushl
leave
sbb
test
xchg
std
gs
mov
or
add
add
je
aad
inc
dec
cmp
xchg
add
push
xchg
flds
add
add
mov
jnp
dec
sbb
cmp
fimuls
dec
fcomp
cwtl
xchg
cmp
inc
in
mov
in
sbb
daa
fsubl
pop
in
push
out
jg
xchg
filds
dec
leave
pop
pop
xor
loopne
cmp
sti
fcomi
mov
loop
or
filds
mov
pop
call
xchg
fcomip
cvttps2pi
add
or
shl
popa
jmp
jno
jl
aaa
dec
push
jmp
addr16
inc
sub
xchg
pop
cmpl
jge
test
lock
xchg
pop
inc
mov
or
leave
cld
inc
test
sbb
adc
xor
loop
into
jmp
add
add
rolb
sbb
out
mov
pushf
loopne
cs
not
scas
into
cmc
and
jl
inc
xor
frstor
hlt
cmp
idiv
sub
cmp
mov
idiv
mov
xor
inc
popa
out
dec
mov
imul
inc
insl
out
cmp
pusha
inc
divl
add
add
jge
fucom
idiv
mov
xchg
pop
mov
lret
jmp
push
inc
out
lea
xchg
or
jne
pop
push
mov
cmc
jne
xor
cmp
sahf
enter
cmp
hlt
lock
inc
lret
les
popaw
loop
push
ljmp
xchg
cmp
mov
push
push
call
movsb
popa
call
jl
mov
into
jl
in
loope
adc
ljmp
xchg
jnp
inc
clc
add
aad
imul
flds
shl
cmp
pop
shrl
ret
inc
inc
dec
add
mov
or
pop
or
xchg
jl
and
push
adc
push
aam
ret
xor
cmp
out
inc
cwtl
push
aad
loopne
movsb
xchg
push
or
dec
xor
pop
adc
fwait
loope
lods
jbe
cwtl
dec
cmc
out
stos
rcl
sbb
loope
cmp
or
enter
jp
xor
aad
filds
imul
in
test
push
cld
add
inc
push
loope
mov
jge
and
or
add
add
andb
or
xchg
or
test
mov
jmp
mov
imul
inc
sub
repnz
mov
or
pusha
pop
das
aad
rorl
mov
jmp
cmovnp
push
testl
dec
negb
insb
roll
push
int3
cmc
push
push
push
or
add
pusha
add
jae
jne
ds
xor
inc
xor
idiv
out
push
jp
pop
mov
loopne
jne
notl
nop
sbb
jae
mov
ljmp
imul
ljmp
add
add
add
push
call
mov
loopne
dec
xchg
or
mov
add
addr16
jne
mov
xchg
cmc
xor
jb
add
mov
fs
int
bound
cld
or
sbb
add
push
or
jmp
testb
xlat
dec
in
outsl
add
add
imul
cmp
in
shlb
aam
ret
xchg
or
jb
push
or
inc
cld
lret
das
ja
dec
cmp
add
fcoml
add
or
pop
dec
add
jp
inc
mov
fiadds
inc
popf
or
or
xor
xchg
lods
aad
imul
add
xchg
filds
or
push
or
xlat
sbb
icebp
inc
mov
hlt
stos
inc
add
inc
cmp
jmp
int3
xchg
fst
push
in
pop
sbb
inc
mov
mov
fildll
inc
cmc
or
movsl
xchg
jbe
int
filds
mov
ffree
mov
or
mov
jmp
mov
pusha
imul
add
add
insb
inc
test
inc
jl
aaa
xor
testb
mov
xchg
pusha
enter
push
adc
jmp
out
cmc
mov
roll
call
inc
jl
call
int3
cmc
mov
push
or
push
sarb
cmpsl
dec
jle
push
xchg
xchg
leave
into
xchg
or
gs
or
lcall
call
sbb
mov
pusha
addb
jmp
or
xor
xchg
ljmp
mov
pusha
notl
push
pop
mov
add
jge
int
hlt
ljmp
sbb
imull
push
push
sbb
push
cld
or
add
pop
loop
fmull
add
insb
pusha
add
cmp
mov
xlat
data16
xchg
outsb
inc
mov
popa
int
shll
repz
add
decl
lret
or
mov
addr16
dec
add
lods
sbb
add
inc
mov
popa
dec
cmp
xor
orb
add
add
inc
push
jmp
xor
jae
stos
add
dec
add
or
mov
je
mov
pop
call
xchg
mov
xlat
loope
leave
add
outsb
dec
push
xchg
sub
push
arpl
pop
scas
fucomip
push
ret
xchg
push
pushf
cld
shrl
inc
scas
aad
xor
lret
mov
push
jns
adc
adc
mov
mov
inc
mov
add
fsts
outsb
aad
xor
xor
lahf
push
jae
xchg
cmove
call
dec
xchg
psubusw
mov
jbe
int
outsb
mov
or
popa
fxtract
sbb
cmc
dec
push
inc
sti
xchg
mov
hlt
add
add
lret
mov
xchg
dec
lret
in
jmp
cmc
mov
scas
or
aaa
fnstcw
xor
dec
in
add
sbbl
orb
mov
addr16
dec
xchg
pop
shrl
or
mov
popf
sub
imul
pop
adc
out
sub
mov
ret
push
pop
imul
icebp
fdivp
incl
add
add
xchg
dec
xorb
cmp
sbb
idiv
ret
cmp
mov
sbb
jne
cs
pop
push
pop
jl
or
clc
adc
subl
add
jp
jne
shlb
addl
scas
ja
mov
pusha
add
xchg
mov
jns
cmc
out
push
jp
test
dec
andb
inc
push
dec
mov
inc
mov
cmc
jne
sub
fsubp
push
mov
fdivrp
sbb
lret
and
into
aaa
or
out
ret
andb
test
pop
pop
ljmp
inc
cld
hlt
sub
out
sbb
popa
int
bound
mov
test
fnsave
jnp
and
rcll
enter
pusha
add
add
add
add
shl
incb
sub
mov
mov
mov
dec
sub
je
xchg
xchg
and
inc
xchg
imul
inc
mov
push
test
movsb
xchg
inc
addr16
mov
or
jp
and
jae
push
push
pop
dec
mov
xchg
insb
inc
push
in
push
xchg
stos
mov
add
add
or
imul
out
jge
pop
add
xchg
xlat
mov
repnz
ret
in
imul
or
or
test
sti
xor
iret
cmc
sbb
aas
jl
xor
ds
rcrl
jnp
add
hlt
pop
notb
jmp
in
neg
imul
lret
xchg
cwtl
ss
inc
loope
lods
xchg
or
dec
sub
mov
aas
jge
pop
dec
lret
aad
or
movsl
andl
add
dec
mov
fadd
sbb
popf
call
pop
mov
idiv
in
adcl
sbb
lea
inc
push
addr16
sbb
divb
adc
sbb
addb
ljmp
push
jge
aas
call
testb
ljmp
es
into
sbb
jmp
sbb
push
cmp
xchg
pop
mov
adc
clc
mov
push
sahf
outsb
sbb
sti
popa
notl
cwtl
cmc
jne
fisttps
decl
jg
pop
loope
test
std
fsin
mov
or
pop
jmp
jne
or
cmp
mov
mov
std
xchg
fsts
stos
xchg
sti
xorb
mov
imul
fstps
je
add
dec
outsb
pushf
jbe
sti
cmp
mov
and
incb
add
add
xchg
adc
or
into
jl
adc
pop
out
jle
pcmpgtw
fnstcw
xor
dec
add
rcl
pop
jl
ret
inc
mov
dec
mov
filds
mov
js
cmp
fs
nop
jecxz
mov
scas
out
rolb
push
shlb
mov
sbb
or
es
xor
push
cmp
rol
movsb
es
nop
cmp
shlb
cmp
lret
pop
inc
and
inc
jle
cmp
neg
cmp
out
cmp
cmp
fidivrl
in
cmp
rclb
test
cmc
mov
rolb
mov
jmp
mov
cmc
sbb
cmp
js
xchg
rcrb
jecxz
loopne
fnstcw
divb
push
cmpsl
or
cmp
xor
cmp
xchg
push
fisttpl
add
and
jl
cmp
adc
jge
jns
adc
adc
addl
jne
mov
notl
loope
call
aas
nop
bound
dec
or
mov
mov
in
arpl
push
lahf
divl
fmuls
push
pop
adc
movsl
xchg
int
adc
xchg
or
sub
cli
div
or
gs
int
mov
xchg
or
stos
adc
notl
xchg
adcl
mov
notl
mov
jmp
mov
dec
or
cmp
sbbl
or
add
add
je
pop
cmp
aad
jecxz
or
add
call
sub
test
and
decb
imul
jg
xchg
mov
and
jae
push
sarl
lds
mov
xchg
dec
dec
add
test
cld
push
jp
call
or
and
fs
cmp
pop
add
mov
iret
adc
nop
fistl
add
push
xlat
mov
xchg
filds
fs
inc
mov
gs
cmp
xor
stos
aas
add
lea
xchg
push
rcr
add
xchg
xchg
cwtl
mov
lahf
into
adc
adc
cmp
into
sbb
test
cmpb
mov
outsl
into
ret
stos
loopne
mov
filds
push
in
clc
std
lret
or
shlb
jl
inc
add
push
pop
aaa
negb
testb
rcrl
hlt
arpl
fldcw
sbb
shll
divb
aas
mul
shrb
adc
cmp
test
add
mov
idivb
ss
xchg
stos
cmp
sahf
flds
in
shll
loope
imul
lods
sbb
cmc
hlt
jnp
add
xchg
add
ret
xchg
push
and
or
jo
leave
add
lds
jp
add
pushf
mov
lcall
orb
add
sub
dec
sub
xchg
dec
aam
adc
adc
bound
imulb
jmp
mov
in
cmp
mov
fadds
add
add
xchg
mov
mov
dec
jge
int
jnp
ljmp
adc
add
idiv
movsl
inc
jge
popf
mov
inc
jne
dec
fcoms
xchg
mov
jns
dec
fmuls
jne
iret
jb
pop
test
pop
shlb
push
fcom
in
or
fstps
imul
sti
sub
add
outsl
or
adc
pop
or
insl
and
mov
in
or
jne
sbb
pop
or
jno
cmp
jno
int3
out
enter
push
xlat
or
mov
cmp
jb
add
cmp
lea
inc
mov
xchg
flds
sbb
pop
xor
lahf
xchg
aas
int
ljmp
add
add
xchg
mov
add
mov
pushf
scas
es
imul
sbb
xchg
push
mov
dec
cli
mov
filds
jmp
mov
loope
fmulp
fidivrl
into
lret
mov
xlat
push
push
test
dec
cmp
pop
push
and
data16
sub
sub
add
xchg
sbb
test
mov
fdiv
mov
mov
sbb
jmp
push
xor
insl
stos
xor
jmp
xchg
or
int3
dec
or
xchg
int
fistpll
jmp
xchg
or
jp
lock
stc
and
and
mov
idivb
aam
enter
je
push
dec
or
dec
xchg
cmc
adc
cmp
xor
xchg
add
cmp
shr
push
dec
enter
add
jecxz
cmp
divl
dec
in
std
ret
jne
push
xor
xchg
mov
cwtl
jl
shr
inc
jp
add
adcb
pop
clc
pop
notl
scas
pop
cld
jle
divl
pop
pop
or
add
add
loope
sub
pop
addl
jnp
cli
xor
add
xlat
or
mov
pop
int3
add
fildl
mov
icebp
xorl
add
add
cmp
invd
loop
add
or
fwait
mov
leave
inc
cmp
add
add
mov
or
adc
int
or
ret
cmp
outsl
cld
or
cltd
adc
lret
push
add
jbe
mov
or
adc
or
cld
movsl
mov
jno
stos
xchg
adc
and
dec
arpl
xchg
xchg
in
out
fbstp
xlat
jg
xor
add
adc
dec
mov
mov
add
xchg
flds
or
aas
xor
xchg
push
inc
sbb
cs
fstp
mov
sbb
scas
repz
xchg
cmp
out
hlt
xor
loop
negl
xchg
into
test
out
lret
fsubrs
rorb
mov
sub
cmpsl
stos
adc
ljmp
add
add
xor
mov
hlt
xchg
sub
xor
inc
adc
popa
lds
inc
ds
hlt
push
pop
inc
test
xchg
jl
repnz
jmp
dec
loopne
mov
dec
mov
mov
push
xchg
loope
push
mov
jmp
inc
add
jl
shrl
add
cmp
enter
and
jne
pop
pop
or
filds
call
ljmp
cli
fcomip
jmp
pop
test
out
dec
mov
in
pop
push
fidivrs
addr16
or
gs
jge
int
push
add
sub
rcrb
push
leave
ja
not
jge
pop
or
xchg
sbb
cmc
xchg
xorl
jp
mov
adc
xor
jbe
lods
loope
or
loope
mov
mov
dec
outsb
hlt
jg
jnp
ret
xchg
sub
subl
call
pop
or
inc
add
dec
rcll
sarb
jne
push
mov
xor
sub
dec
and
shrb
div
mov
mov
mov
or
sub
inc
and
inc
or
add
roll
mov
repz
add
cmp
adc
push
adc
push
xchg
jl
aam
sbb
fisubl
add
push
pop
decb
mov
add
push
sub
out
cmpsl
sbb
mov
addl
clc
push
nop
sub
add
or
pop
mov
pop
mov
xchg
or
out
movsl
int3
dec
pushf
fistps
inc
arpl
repz
dec
add
xor
stos
mov
xlat
pop
sub
je
add
ja
xchg
sub
or
nop
xchg
loopne
popf
sub
popa
jmp
mov
add
add
in
nop
je
jmp
into
sbb
xchg
sub
cmp
cld
dec
sub
fldenv
sub
dec
push
jmp
dec
mov
inc
jmp
pop
int
jmp
test
imul
es
and
arpl
lahf
cmc
xchg
lahf
mov
or
js
in
cmpsl
cld
xchg
or
aad
lea
cmc
jne
clc
cltd
pop
mov
mov
rcll
or
mov
jge
int
push
add
arpl
push
adc
call
out
add
push
jge
repnz
js
dec
inc
lcall
loop
addl
out
divb
push
cmp
call
cmc
data16
lcall
jge
mov
rolb
cmp
leave
mov
es
lahf
mov
xor
fs
add
dec
aam
cmp
ds
dec
cmp
enter
xchg
je
sbb
or
jmp
mov
mov
pop
lea
add
insb
cmp
test
cmp
add
inc
fdivrp
xchg
scas
data16
cmp
test
cmp
add
icebp
int
sbb
adc
or
loopne
mov
imul
pop
nop
shlb
repnz
xlat
or
mov
loopne
sub
cmp
cmpsl
cmp
add
movsb
mov
adc
stos
in
mov
loopne
xchg
sub
loopne
outsl
cmp
sub
or
enter
cmp
push
push
mov
or
push
jmp
dec
xchg
jnp
push
rol
push
clc
sub
push
popa
push
xor
add
aaa
out
pusha
out
sbb
jl
daa
xchg
fiadds
add
add
sub
sub
cli
sub
and
ljmp
scas
fisubrl
jl
out
bound
aaa
dec
bound
daa
inc
bound
daa
jl
aaa
pop
bound
daa
jl
daa
push
bound
daa
jl
imul
popa
dec
cli
es
xchg
sti
mov
push
divb
sti
lahf
imul
jne
sti
cmpsl
imul
add
jmp
adc
call
xor
inc
jmp
cmc
xor
mov
pushf
enter
pop
add
xchg
or
repnz
cld
pushl
jge
push
jge
lea
loopne
decl
shl
or
adc
jne
enter
fiadds
gs
pusha
mov
rorl
decl
add
push
out
fsubl
mov
call
add
xchg
push
lea
sbb
jmp
movsb
mul
sbb
dec
add
nop
es
mov
mov
stc
call
ds
punpckhbw
test
mov
xchg
dec
test
shll
mov
cmp
push
mov
mulb
mov
sbb
jl
inc
es
mov
cmp
popf
stos
cmp
dec
mov
and
aas
sbb
aas
mov
or
add
and
idivl
jecxz
pushl
sbb
imull
ret
mov
and
iret
mov
push
sub
mov
and
enter
dec
pushf
fists
cmp
ja
fildll
je
btc
or
lods
add
xchg
cmp
pop
pop
es
add
jl
out
insl
inc
out
lret
in
mov
cmc
xchg
mov
es
aaa
mov
dec
or
push
xchg
cmpl
add
add
data16
mov
pop
sarl
or
mov
pop
cmp
cmp
and
in
addr16
insl
sub
sub
jnp
and
mov
and
orb
jnp
stos
fdivrl
rcrb
cmp
gs
pop
in
divb
lock
pop
pop
pop
or
clc
adc
addl
add
imul
cmc
push
xchg
int
mov
adc
popw
divb
mov
xchg
mov
add
xchg
or
push
sbb
mov
or
ret
ljmp
loopne
dec
sbb
jnp
lods
lock
enter
or
or
mov
or
lahf
scas
mov
loope
test
add
push
mov
cld
fwait
adc
pop
dec
int
mov
lds
mov
aad
push
and
push
rcll
mov
popa
jns
addl
cmp
mov
daa
push
mov
jecxz
idivl
test
inc
cld
aaa
je
or
movsl
mov
jne
add
xchg
enter
jmp
jg
mov
add
add
mov
gs
xchg
shll
xchg
nop
and
mov
ret
mov
mov
jmp
test
mov
sub
jnp
mov
adc
xchg
cs
and
mov
imulb
adc
adc
add
add
add
and
movsb
cmpb
stos
and
stos
jne
or
push
pop
or
sub
and
cmovs
push
sub
sbb
test
sbb
test
jbe
mov
lahf
outsb
and
rclb
push
push
jge
not
jecxz
sbb
fisubl
divb
and
aam
lahf
lea
add
mov
or
and
pop
cmp
mulb
dec
and
jmp
fwait
pop
or
xchg
or
jl
loope
xchg
and
bound
add
test
push
push
stc
pop
mov
mov
insl
loopne
xchg
out
mov
push
divl
pop
dec
add
pop
add
popa
xchg
cmc
jne
or
jl
fisttpll
dec
adc
add
add
or
push
push
add
or
andl
push
loope
pop
add
xchg
or
mov
dec
or
xchg
or
lret
orl
or
out
adc
xchg
bound
sete
nop
stos
jmp
or
mov
out
sbb
cmp
out
inc
mov
and
add
js
dec
mov
add
or
jl
sub
and
sbb
shll
mov
sarl
nop
shlb
sbb
lea
or
jbe
adc
mov
jmp
mov
push
add
call
mov
or
mov
loope
test
mov
mov
pusha
sub
iret
mov
mov
js
fildll
nop
cvtps2pi
jp
cltd
mov
in
jnp,pn
cmc
adc
xchg
jbe
test
and
cmp
mov
add
mov
inc
jl,pn
divl
sbb
leave
add
cltd
add
lock
add
je
fisubl
or
mov
clc
push
negb
or
stos
or
push
and
into
add
jmp
xchg
test
scas
aad
or
xchg
cmc
sbb
stos
or
test
dec
xchg
shrb
nop
xchg
or
nop
sti
fwait
push
dec
insl
mov
rorl
and
lret
inc
stc
cmp
jmp
adc
test
jno
xchg
or
sbb
jmp
ljmp
add
pushl
jge
sbb
push
scas
inc
jp
and
add
movsl
rorb
jae
loope
or
int3
cld
addl
roll
divb
add
data16
addb
jl
adc
decl
add
adc
divb
jp
incl
add
add
divb
fdivr
mov
divb
pushl
add
adc
and
or
sbb
jmp
pop
add
mov
mov
shrl
mov
fs
and
les
adc
xor
or
dec
mov
lcall
loope
je
push
xor
sub
je
add
add
or
mov
pop
mov
jnp
jl
sub
into
add
mov
lcall
scas
ret
sbb
jne
popa
cmp
sti
xchg
int
int
fists
sub
xchg
bsr
push
nop
dec
test
fbstp
xchg
setne
ret
arpl
setns
add
mov
sbbb
or
xchg
bound
je
xor
push
shl
sbb
mov
lahf
push
push
mov
ret
adc
xchg
filds
mov
add
fbstp
test
push
rorl
ljmp
sbb
sti
sub
movsb
mov
mov
test
push
imul
add
andl
add
add
out
push
push
sbb
dec
sbb
pop
shl
cltd
push
sar
cltd
cld
mov
imul
movsl
shl
pop
mov
je
nop
mov
add
shlb
or
aad
subb
je
nop
xchg
test
mov
mov
andl
sub
add
cld
or
or
xchg
loope
or
sar
mov
mov
popf
inc
lock
shl
ja
sbb
jl
jge
insb
jp
mov
sub
or
aaa
inc
call
ss
add
mov
xchg
jnp
ss
inc
xchg
mov
xchg
jnp
lret
call
mov
pop
sub
add
out
in
add
add
add
or
add
enter
loopne
xchg
testb
lcall
pop
pop
into
inc
sub
or
mov
inc
hlt
pop
sti
cmpsb
je
test
mov
loopne
ds
movups
jl
sub
test
stos
rcr
jbe
movsb
incb
add
add
lret
mov
inc
pop
push
jmp
add
jo
stos
jae
mov
je
stos
and
mov
and
mov
cmpsb
mov
add
fists
sub
dec
mov
mov
add
cs
jl
xor
test
out
add
add
add
pop
jge
ret
fwait
call
cltd
out
add
mov
ss
test
dec
xchg
push
iret
mov
and
mov
mov
xchg
je
adc
xchg
test
dec
dec
push
jns
inc
push
or
mov
clc
push
data16
push
jl
lock
cmc
dec
xchg
rcrb
notl
hlt
in
xchg
out
aad
xor
orl
jmp
negl
mov
insb
jecxz
jnp
mulb
loopne
inc
adc
popa
jmp
push
mov
mov
sar
add
sub
cmpsb
popf
xor
pusha
sub
xorb
or
jge
add
add
test
decl
in
inc
push
ljmp
sbb
add
add
ret
cld
mov
cmpsb
or
jbe
push
andb
ds
cmc
call
sbb
mov
call
arpl
cmp
out
dec
mov
test
mov
add
add
aas
imull
and
cwtl
cmc
jne
aas
jge
mov
cmp
push
test
xchg
xchg
inc
xchg
mov
mov
jp
sub
roll
cmp
jns
mov
or
dec
repnz
mov
repnz
cld
or
shrl
cmpsb
out
sbb
inc
leave
into
icebp
or
jb
or
vmwrite
add
or
mov
arpl
rorl
add
inc
or
dec
arpl
sbb
mov
test
pushf
xchg
adc
jmp
mov
test
or
fucom
jb
jg
ljmp
adc
jp
add
add
mov
test
pushf
inc
xor
jecxz
das
jge
test
jmp
xchg
test
or
adc
jae
lahf
xchg
out
pop
and
jl
cld
bound
data16
test
adc
mov
push
fcoms
add
and
loop
cld
jge
clc
mov
in
mov
xorl
std
or
xchg
pop
mov
add
add
xor
hlt
loope
mov
inc
mov
cmc
mov
cmc
mov
xor
add
mov
cmc
xchg
sub
xchg
mov
and
push
fcmovne
fisttpll
loope
lods
ret
popa
andl
neg
sbb
pop
lock
fistl
testb
mov
mov
cwtl
jl
cmp
fdivr
and
jne
add
add
jge
cli
bound
jmp
cmp
inc
dec
mov
repz
mov
push
push
add
movsb
or
sub
incl
out
ror
cmp
push
stos
ret
add
popa
int3
or
out
aam
add
mov
idiv
mov
stos
cmc
jp
imul
jge
bound
jl
mov
or
dec
imul
pushl
lret
inc
scas
pop
nop
loope
fstps
jns
mov
repnz
dec
push
or
cwtl
dec
add
adc
out
mov
add
jmp
jnp
mov
loop
dec
std
scas
je
gs
dec
mov
repnz
nop
xchg
mov
inc
and
lret
sub
out
inc
or
xchg
std
mov
xchg
cmpsl
add
out
loope
mov
dec
or
dec
in
dec
inc
mov
xor
add
fwait
lahf
das
xchg
outsl
xor
inc
pop
add
daa
xchg
sti
loopne
mov
cmp
test
push
fbld
xchg
rorl
and
mov
int
out
pop
in
mov
subl
stc
das
mov
dec
pop
lcall
xorb
xchg
mov
jmp
jmp
imul
xlat
dec
loope
xchg
or
add
add
les
push
stos
mov
jge
cmp
call
test
dec
popf
mov
and
xchg
or
popl
int
hlt
or
lds
cmc
movsb
out
or
jmp
xor
sub
pop
sbb
test
push
imul
loope
stos
mov
cmp
xchg
jnp
adc
dec
xorb
fucomip
pop
cld
add
or
jge
sub
jb
jl
cmp
pop
call
pop
sarl
push
mov
imull
dec
hlt
push
aaa
add
push
divl
lret
mov
negl
ffreep
add
lret
sub
sbb
jne
in
incl
cmc
nop
jnp
rclb
ret
addl
insl
dec
add
sti
aam
in
je
add
sti
aam
call
jle
add
xchg
inc
je
xchg
inc
push
insb
dec
add
cld
out
ss
sbb
mov
dec
xor
int
stos
je
adc
cwtl
inc
xor
inc
in
dec
cltd
inc
call
test
inc
cli
out
stos
incb
add
add
inc
scas
mov
xor
in
movsb
mov
or
add
push
cmp
es
cltd
add
xchg
mov
ss
push
dec
shlb
pop
and
aam
xchg
mov
add
adc
mov
xchg
add
xchg
xchg
shl
pop
pusha
pop
adc
push
shl
jle
cmp
scas
dec
mov
xchg
xchg
filds
jns
and
mov
out
dec
or
or
int3
push
push
in
sbb
jg
push
mov
repz
pushf
in
or
push
or
fistl
jmp
iret
xchg
cmc
pop
push
repnz
nop
xchg
add
mov
or
dec
push
or
lahf
jl
or
add
add
xchg
cmc
adc
repnz
and
lods
pusha
adc
or
pop
jl
add
xchg
cmc
faddl
inc
mov
xchg
add
lcall
add
add
aam
cmc
lcall
xchg
cmc
jne
cmp
divl
xor
hlt
mov
cmc
ljmp
cmp
gs
stos
sub
jne
add
add
jge
pop
stos
add
stos
cmc
decl
shr
push
cmc
jp
mov
mov
adc
call
sub
add
rolb
cltd
shlb
stos
sbb
test
idiv
jbe
lock
or
jns
test
in
dec
sti
xchg
je
push
jne
mov
add
fwait
jo
incl
add
add
cli
cwtl
inc
rorb
mov
cltd
inc
test
and
mov
add
add
xchg
je
push
nop
arpl
std
mov
or
mov
leave
sub
shll
cmp
push
adc
and
fwait
sub
clc
mov
addb
xchg
push
sahf
mov
push
push
xor
add
add
push
push
xor
push
dec
xor
sbb
xchg
fiaddl
arpl
aam
xchg
rcll
push
sahf
mov
push
mov
popf
lret
lea
popf
xchg
pop
out
pop
cmp
lahf
addb
inc
fs
filds
mov
or
pushf
fistpll
and
cmpb
mov
adc
mov
pop
inc
mov
and
scas
and
add
xlat
aam
jmp
cli
cmc
aam
cld
ss
or
arpl
adc
cltd
clc
jg
inc
cmp
es
aam
in
aam
jmp
fs
or
pop
adc
cmc
testb
jmp
xchg
or
pop
into
lcall
add
orb
jp
or
mov
or
xor
in
jns
into
cltd
enter
pop
orl
or
and
and
mov
jle
inc
in
dec
in
add
pop
pop
jmp
sahf
push
andl
divb
mov
addr16
or
sbb
testl
imul
in
movsb
push
sub
sbb
in
test
jge
dec
mov
enter
jne
xor
cmp
roll
je
and
push
sbb
test
pop
or
mov
or
popa
add
addb
add
aam
pop
push
incl
out
aad
add
or
scas
dec
mov
add
xchg
xchg
decb
xchg
in
je
jp
in
mov
int3
pop
mov
in
fcoml
stc
cmc
mov
mov
sarl
jmp
cmc
mov
addb
xchg
pop
test
ret
lcall
ja
mov
jnp
push
fisttps
enter
mov
aad
hlt
add
adc
inc
clc
flds
mov
lcall
daa
int3
int
fbstp
pop
icebp
bound
inc
in
pop
xor
add
movsb
lock
lcall
push
or
mov
lods
mov
fistps
imul
cltd
inc
or
and
pusha
cmc
sahf
mov
jl
adc
sbb
clc
dec
push
xchg
ret
or
pushf
cmc
hlt
sti
push
cmc
fcoml
add
adc
shlb
pusha
jmp
pop
ja
jmp
roll
icebp
out
notb
adc
inc
popa
and
decb
xchg
add
add
out
add
add
jns
dec
iret
xchg
cmc
push
xchg
outsb
adc
dec
xchg
add
out
idiv
int
or
mov
cwtl
cmc
jne
mov
call
sbb
in
jge
push
and
div
jne
sub
outsb
add
sub
push
dec
xchg
add
xchg
jge
dec
ljmp
mov
sub
es
repnz
scas
cmp
add
testl
add
idiv
loopne
divl
repz
enter
push
pop
iret
mov
push
push
or
jg
sbb
xor
cmp
cmp
inc
mov
sbb
xor
sahf
sbb
add
shll
or
popa
xchg
add
bound
add
popf
je
arpl
push
fcmovnb
addl
fs
jmp
je
mov
and
and
daa
inc
mov
fs
jmp
xor
inc
dec
add
leave
jae
xchg
js
je
call
add
out
test
cmp
and
mov
xchg
fmuls
sub
and
xchg
fbld
int
xchg
and
cmc
or
cmc
fwait
repz
xchg
add
aad
cli
mov
stos
mov
pop
xchg
aam
jmp
cmp
pop
or
fiaddl
leavew
adc
js
mov
xchg
push
adc
push
adc
mov
pushf
and
mov
jb
adc
frstor
mov
roll
add
jmp
pop
hlt
push
mov
mov
shrl
mulb
orl
dec
xchg
or
insb
or
fscale
jnp
aaa
sbbl
int
test
jnp
aaa
add
inc
add
jnp
stc
xchg
inc
aaa
arpl
xlat
aam
jmp
int3
cli
jmp
xchg
in
inc
add
daa
testl
clc
mov
int
sub
fcomps
jne
sub
push
sub
ret
pop
mov
jge
dec
push
push
push
mov
je
mov
gs
pop
call
gs
jge
jne
jge
std
jmp
incl
sub
ret
pop
mov
lret
lods
or
daa
jge
cmp
add
add
out
dec
hlt
xchg
mov
movsl
lea
sahf
inc
add
or
int3
jg
push
movsb
or
decl
je
clc
jnp
test
fimuls
or
arpl
psubb
negl
decl
lcall
add
cmp
and
cltd
incb
add
add
clc
pop
outsb
invd
in
mov
repz
fsts
gs
je
push
rcll
push
cwtl
xor
adc
lods
test
adc
xchg
fwait
pop
popa
push
xchg
inc
lret
and
mov
mov
icebp
pop
xchg
xchg
aam
lock
inc
inc
mov
sti
fidivs
arpl
negl
xor
adc
inc
into
mov
lahf
push
shll
into
and
mov
enter
mov
add
push
fistpll
hlt
lds
pop
cwtl
arpl
xor
decb
orl
cs
cld
bound
pop
addl
push
incb
jnp
idivl
sbb
mov
je
add
add
fs
cli
cmc
push
sbb
jae
std
stc
hlt
sbb
test
stc
cli
pop
xchg
jnp
sbb
mov
mov
cmc
ds
or
pop
pmulhw
lcall
mov
jle
mov
insl
mov
clc
andl
mov
add
dec
xchg
pop
add
divl
sti
or
or
add
add
movmskps
xchg
or
cmp
pop
call
in
add
and
cmc
ljmp
mov
push
idiv
inc
je
pop
rcl
jne
and
pop
decl
lds
mov
adc
call
je
or
aas
enter
or
cwtl
cmc
incl
cli
pop
add
nop
or
insl
sbb
cwtl
mov
cwtl
je
push
push
cld
ss
or
push
sbb
mov
jbe
mov
jmp
adc
jmp
je
xchg
imul
bnd
mov
or
sbb
movhlps
jmp
aaa
ljmp
push
pushf
push
adc
and
dec
ljmp
test
call
xchg
sub
dec
sbb
test
adc
jnp
push
dec
push
jns
push
pusha
call
and
ljmp
jmp
inc
mov
stc
es
cmp
sbb
mov
lcall
mov
or
xchg
push
mov
xor
bound
add
push
fs
mov
add
or
mov
mull
sbb
in
scas
ss
das
sbb
rcrl
add
xchg
fistps
mov
or
add
cmc
pop
pop
cmp
or
jnp
testl
sub
push
xchg
pop
inc
and
insb
mov
jmp
mov
idivl
daa
loopne
testb
jg
add
mov
jb
adc
aad
xchg
bound
in
cmc
mov
idivb
pop
addr16
cmpsb
sbb
sahf
jnp
loopne
or
cmc
add
jnp
std
sbb
orb
jne
or
or
cmp
add
mov
add
push
shl
mov
mov
loopne
sbb
notl
xchg
or
inc
cwtl
push
data16
pop
clc
cli
in
pop
adc
imul
gs
lods
rorb
cmpl
pusha
add
sbb
push
inc
or
js
in
stos
add
imull
pop
jge
std
jno
incl
pushf
adc
mov
test
or
test
jns
xchg
dec
pop
jle
enter
push
pop
pusha
mov
in
adc
popfw
xorl
dec
lret
dec
jb
rolb
xorb
inc
xor
sub
mov
xchg
adc
or
int3
pop
rclb
add
lret
je
clc
in
or
sub
data16
xorb
or
decl
pop
clc
xor
incl
add
add
aas
fidivrs
sub
dec
sbb
mov
cmc
mov
aad
jmp
popa
or
mov
mov
push
adc
pop
jge
clc
push
addr16
mov
rcpps
dec
xchg
sahf
fwait
add
aam
fldl
or
ret
pushl
add
mov
ljmp
adc
ficoms
push
std
xlat
xor
hlt
lret
add
mov
cmp
or
fnstcw
jmp
outsb
push
or
fdivrl
jmp
ljmp
jle
xchg
pusha
insl
lods
push
or
inc
jns
jmp
push
xchg
loopne
mov
add
cmpsl
add
movsl
iret
dec
xchg
cmc
hlt
negl
jmp
push
sbb
pusha
insb
lods
push
or
push
test
mov
mov
in
and
arpl
scas
push
or
jns
add
push
or
mov
mov
subl
jae
sbb
and
or
jae
mov
add
pop
divb
push
repz
jp
divl
add
add
jge
cmp
sbb
add
repnz
cmc
jp
in
lock
in
cmp
sbb
incl
adc
jne
sbb
inc
lcall
out
jp
jge
out
pop
jp
jge
cmp
sbb
test
jecxz
je
fildl
or
xor
xor
mov
jg
sti
cmpsb
sti
adc
xchg
hlt
out
xchg
jg
adc
test
out
mov
or
or
movsb
push
fistl
mov
pop
es
pop
ret
or
mov
cmp
push
mov
xor
movsb
addr16
mov
icebp
out
inc
cmp
shlb
dec
xchg
jmp
out
pop
inc
push
addr16
std
pop
movb
push
aaa
inc
mov
add
push
fildll
and
roll
mov
xchg
gs
mov
cmp
xor
xchg
sub
dec
xchg
scas
xchg
push
aad
icebp
pop
pushf
test
movsb
pop
dec
mov
inc
clc
and
adc
adc
ret
add
xchg
mov
mov
jp
sbb
out
or
inc
pushf
or
jg
add
xor
nop
push
or
lock
mov
inc
loopne
inc
lock
loop
sub
add
push
cmpsb
adc
pusha
jmp
ljmp
icebp
pop
xor
adc
mov
sbb
sub
pop
or
cli
xchg
xchg
jnp
movsl
mov
cmc
imul
repnz
arpl
jbe
jmp
adc
pop
xchg
xchg
in
cmpsl
mov
popl
clc
jmp
orl
cmc
decl
repnz
fstl
test
movsl
xchg
inc
add
sbb
and
imulb
xor
or
repnz
pop
mov
idiv
cwtl
sbb
jne
add
add
or
dec
jb
push
leave
aaa
xchg
or
or
les
sbb
dec
cmp
push
in
mov
mov
jne
cmpsl
mov
insb
sbbl
lahf
add
mov
add
stc
jecxz
hlt
xlat
out
mov
jmp
call
inc
cmp
jmp
jb
orb
add
add
add
jae
and
push
or
int
adc
mov
mov
std
lods
mov
xchg
push
aas
add
lahf
dec
add
call
or
xchg
and
pop
ret
cmp
dec
sti
adc
mov
imul
push
fwait
sub
test
pop
push
test
repz
add
loopne
pop
cli
xlat
in
out
dec
cwtl
push
add
inc
jp
in
iret
in
pop
or
aas
cmp
mov
fbstp
jnp
jmp
xchg
pop
xchg
stos
push
filds
jp
xchg
mov
movsl
iret
ljmp
out
and
imul
mov
test
btr
imul
pmaxsw
push
push
cmc
push
punpcklwd
push
test
hlt
mov
jmp
sbb
fs
loopne
cltd
xchg
or
iret
pusha
imul
inc
jmp
sbb
insl
sub
dec
xor
lahf
enter
dec
mov
add
loopne
ljmp
mov
push
hlt
add
add
add
popa
add
pop
cmc
pop
push
popa
add
les
cmc
add
icebp
jmp
lahf
loopne
out
push
idiv
loopne
cmc
jne
push
jge
popf
sbb
adc
int3
sub
push
std
push
notb
xor
or
xor
jmp
loope
cmp
and
adc
pushl
sbb
push
sbb
addr16
std
dec
add
xorl
nop
add
loope
mov
nop
jl
data16
add
jns
push
mov
incl
mov
push
repnz
stos
and
lcall
cmc
popa
fstpl
pop
jb
push
lock
std
add
fimull
jne
xchg
std
sti
imul
dec
int
out
dec
lock
rorb
add
add
aas
inc
inc
cld
or
mov
iret
repz
or
sub
pop
insb
sbb
push
test
mov
sti
add
or
xchg
rorl
add
mov
jp
mov
fidivl
xchg
flds
pop
jmp
inc
cmpb
flds
ss
push
js
xchg
fisttps
pop
sbbb
pop
movsb
xlat
jmp
add
enter
mov
shrl
testl
dec
pusha
cs
pop
imull
mov
mov
test
cmp
dec
xchg
xor
lahf
clc
mov
pop
sahf
jg
dec
fstpl
ja
cld
push
shl
call
mov
test
vsqrtps
dec
popf
or
aas
pop
push
es
test
xchg
jnp
push
mov
lods
call
xchg
cmp
cwtl
ljmp
call
shl
cmc
stc
xchg
mov
mov
push
mov
dec
sbb
out
test
xchg
cmc
xor
out
mov
mov
fsts
jl
jnp
adc
clc
jge
outsl
inc
in
mov
bound
inc
pop
data16
in
std
push
dec
and
call
dec
in
xchg
in
mov
mov
jge
xchg
add
add
xchg
in
add
popf
add
cmc
jne
jnp
ss
xorl
inc
loopne
pop
mov
lods
mov
stos
jge
andl
es
adc
cmp
jnp
orb
fists
loop
je
addl
sbb
push
dec
push
or
mov
xchg
loopne
ss
xor
cmp
xchg
mov
add
clc
sbb
pop
loope
jae
push
imul
decb
push
out
orl
xor
test
jae
sbb
jae
sbb
pop
sar
in
faddp
rcl
add
pushf
or
sbb
dec
jle
mov
lret
mov
fmull
movsb
mov
jl
jp
imul
mov
add
dec
push
xchg
movl
sub
in
or
jl
cld
push
leave
in
cmc
push
in
or
jl
push
movsl
xchg
dec
ret
imull
dec
mov
add
or
shl
jne
pusha
push
adc
inc
jmp
xchg
add
out
insl
sub
add
add
xchg
or
dec
popa
sub
aaa
lcall
cmc
mov
sbb
in
loope
mov
pop
cld
daa
mov
loop
fcmove
sbb
push
out
cli
push
mov
push
loopne
dec
jecxz
inc
rcl
or
pop
pmulhw
sar
into
cmpsb
adc
enter
pop
jl
dec
jge
add
xchg
enter
or
in
dec
clc
in
or
xor
in
repnz
or
icebp
cmc
imul
push
lcall
divb
pop
jl
dec
outsb
cmp
mov
enter
std
add
fdiv
and
notb
inc
test
add
pop
testb
outsb
mov
add
add
pop
test
enter
push
leave
ljmp
or
and
outsl
je
lds
test
sub
jbe
loope
lods
or
cmp
js
jmp
out
hlt
mov
out
imul
dec
in
jo
test
outsl
mov
or
adc
mov
outsl
mov
jmp
mov
add
add
outsl
jae
push
call
xchg
stos
clc
sbb
mov
cmc
je
repnz
cmp
das
insb
xor
js
mov
inc
lahf
lcall
dec
sbb
jo
loop
add
pop
ret
repz
loopw
xchg
nop
xchg
insb
inc
loope
mov
shll
outsb
fucomip
push
insl
mov
jo
add
add
in
das
int3
mov
jmp
sbb
loope
or
or
add
insb
mov
cmp
push
js
xchg
jno
push
lea
sub
pop
mov
jns
mov
mov
push
mov
mov
cmc
jmp
icebp
mov
std
cwtl
loopne
int3
loope
cmpsb
cmp
loop
loope
add
add
dec
mov
mov
jle
cwtl
loopne
int
cmc
outsb
mov
ljmp
outsb
push
cmc
dec
sbb
jmp
mov
in
lods
add
cmc
je
out
add
adc
sub
push
fcmovnu
cmc
add
mov
and
addr16
mov
pushl
insb
or
divb
idiv
dec
pop
dec
incl
add
add
mov
call
inc
and
in
in
addr16
pop
inc
incl
insb
iret
inc
adc
mov
outsl
idiv
push
in
dec
mov
xor
lcall
js
call
mov
inc
data16
iret
std
push
data16
imul
jne
mov
mov
aam
push
mov
loope
repz
fyl2x
popa
movsl
out
or
dec
vmread
mov
mov
andb
jecxz
dec
mov
or
dec
cs
movsb
in
mov
jecxz
adc
mov
mov
frstor
xchg
leave
inc
out
call
xchg
or
mov
and
popa
add
add
and
jge
addl
cmp
daa
add
sbb
adc
dec
push
icebp
bound
imul
rcr
je
xor
stos
je
or
js
jle
ret
sub
adc
lret
push
fbstp
xlat
jae
fidivs
add
xchg
filds
or
adc
in
xchg
je
fst
pop
dec
push
fbstp
xchg
sub
fnsave
lea
imul
push
je
mov
dec
fldl
int
push
icebp
bound
addr16
or
add
adc
push
cmc
push
push
pop
hlt
push
es
test
xchg
add
jmp
dec
fidivrs
adc
jmp
or
mov
mov
add
dec
inc
jmp
mov
sub
xchg
or
or
cmc
testb
or
adc
add
mov
jbe
xchg
mov
dec
inc
jmp
nop
xchg
or
mov
mov
inc
inc
gs
dec
clc
out
std
add
pop
add
and
and
clc
mov
dec
hlt
xchg
xor
mov
pop
or
sbb
mov
fcomi
pop
test
add
cmp
add
xchg
pusha
mov
shl
sarb
cmp
cmc
xchg
add
ljmp
jg
xchg
add
add
fimuls
cmp
in
ret
jne
cmp
add
push
sarl
stc
popf
push
std
mov
add
add
mov
in
or
jo
out
cmp
jmp
pop
or
add
dec
ss
xchg
or
sbb
push
mov
cmpsb
leave
call
test
dec
in
sar
gs
jns
mov
mov
dec
jae
adc
fbstp
int
or
aam
xor
xchg
pop
imull
push
dec
popa
sbb
sbb
mov
pusha
out
pop
push
jno,pn
arpl
jo
nop
push
notl
fimull
imull
jl
inc
pusha
out
cmp
out
xor
pop
lea
jo
pusha
ret
jo
push
sub
adc
sub
push
adc
add
pop
scas
pop
jmp
shr
jo
add
add
out
fists
jo
pop
jbe
ret
jmp
lcall
pop
sbb
add
push
cmc
dec
mov
xchg
pop
jb
adc
adc
dec
fstpl
bound
inc
jmp
enter
or
rorl
mov
out
xchg
or
outsb
or
add
add
in
je
in
mov
push
idivl
jmp
xchg
jmp
call
adc
adc
add
adc
idiv
xchg
pop
lds
xor
push
call
sub
shl
inc
imul
push
mov
cmc
mov
pop
idiv
mov
rorb
xchg
loopne
sub
mov
add
add
pusha
call
mov
shl
and
xor
cmp
pop
mov
cmp
push
mov
cmc
mov
pop
idiv
and
loopne
stos
testb
not
push
sar
xor
inc
mov
fcmovnb
pop
data16
jns
mov
mov
inc
mov
ss
es
sar
hlt
sub
cmp
jnp
xor
les
call
adc
jle
mov
mov
addr16
push
mov
jbe
addr16
sub
jl
and
jbe
adc
arpl
mov
arpl
repz
push
imul
xchg
scas
insl
pop
mov
insl
sbb
sahf
insl
lret
sti
stos
outsl
pop
insl
mov
insw
and
insl
loopne
push
insl
xchg
fdivr
jae
dec
insl
adc
push
adc
pop
movsl
push
es
push
adc
pop
or
sbb
push
insl
dec
in
rol
inc
divb
sub
addr16
pop
sbb
insb
adc
shlb
jo
aad
insb
push
fmull
shr
cmc
scas
js
hlt
xchg
loopne
or
xchg
roll
jmp
push
fldenv
in
cmc
hlt
mov
or
and
jg
sbb
rcl
aad
aam
in
add
cmc
aam
jnp
out
dec
ds
aas
cmpl
jp
or
iret
pusha
or
int
or
cmp
or
iret
pusha
or
int
or
push
test
pushf
sub
jnp
leave
push
add
out
push
jns
pop
sar
push
pop
dec
hlt
xchg
imul
aad
je
mov
divl
cmp
sub
jne
imul
aas
jl
lret
incl
in
adc
aas
idiv
and
leave
cmpsl
int3
cmc
push
out
insb
mov
and
out
cmp
add
mov
push
leave
ja
cmc
mov
inc
inc
int3
in
mov
xchg
std
repnz
or
sti
mov
mov
adc
stc
bound
stc
mul
xlat
lret
dec
ss
jmp
pop
or
mov
xlat
out
adc
add
adc
jns
scas
aam
ljmp
sbb
mov
push
shll
cmc
cld
or
out
add
testl
andl
mov
mov
cmp
repz
push
xor
repz
mov
add
lea
xor
jge
mov
sub
push
stos
rcl
sti
mov
push
imul
push
xchg
push
push
pop
daa
jl
adc
add
shrb
out
addr16
insb
mov
lret
pop
cmp
inc
xchg
je
mov
add
and
out
out
or
pusha
mov
pusha
ds
xchg
or
xchg
in
stos
pop
sub
mov
loopne
iret
shl
mov
cltd
or
mov
or
loop
jnp
aaa
lret
xor
sbb
push
imul
bound
in
add
shl
cs
lods
cmc
pushf
push
mov
pusha
jmp
pop
mov
sahf
cmp
and
xchg
cmc
jne
insl
into
imul
cmp
cmp
loop
movl
cmp
sarl
or
and
add
int
or
mov
dec
clc
movsl
xchg
or
ljmp
push
ljmp
call
inc
incl
add
add
call
jl
fucomp
and
jne
mov
push
xchg
pusha
mov
fprem1
decb
outsb
faddl
mov
lret
sub
fsub
hlt
cli
outsb
incb
out
push
std
lret
out
imul
outsl
jmp
hlt
out
jp
incb
cs
xor
mov
add
push
outsl
cmp
push
in
inc
outsb
mov
push
data16
fwait
jecxz
push
mov
inc
testb
xor
mov
mov
adc
dec
negb
cs
push
cwtl
les
push
dec
cmp
push
data16
adc
adc
enter
fsubrp
mov
jg
add
add
mov
push
adc
out
adc
fcmove
xchg
add
xor
stos
movb
mov
xchg
cmpsb
mov
lcall
out
fwait
mov
inc
scas
addr16
dec
gs
iret
pop
int3
nop
or
jmp
into
cmc
arpl
cmc
push
repz
mov
incb
add
add
sahf
loopne
je
cmc
out
ljmp
stc
movsb
xor
push
or
mov
call
into
cmc
je
cmc
cmpsb
aaa
mov
sahf
xor
mov
orl
in
xor
loopne
imul
std
data16
cmc
pushf
jecxz
cmc
dec
xlat
pop
aaa
add
cmp
mov
inc
idiv
int
xor
stos
cmp
or
ljmp
nop
pop
add
fiadds
push
jmp
jmp
xor
mov
mov
cmc
xor
mov
xor
jae
inc
in
pop
add
xor
jmp
cmp
cmp
xor
ret
pop
mov
add
add
adc
bound
or
jnp
mov
out
sub
jge
int
loope
in
or
fld
popa
pop
mov
imul
test
inc
rcll
inc
iret
and
mov
je
aad
sub
lock
or
mov
shl
add
add
mov
jecxz
xor
jno
dec
add
pop
imulb
inc
push
cwtl
adc
fisttps
dec
inc
in
insb
pop
xchg
filds
in
test
jae
mov
je
mov
xor
adc
push
lret
scas
mov
push
mov
cmp
push
imul
push
bound
push
fbld
jmp
popa
adc
push
or
add
add
sub
popa
add
out
repz
mov
inc
out
push
push
scas
popa
adc
test
lret
and
or
mov
xor
mov
pushf
or
pop
adc
pop
in
lret
int3
ret
inc
xor
ret
dec
lret
test
cmc
ds
inc
add
mov
cs
adc
push
lods
lret
aaa
stos
bound
aad
cmc
push
inc
xchg
loopne
dec
lret
cmc
pusha
adc
std
out
lods
sbb
lock
push
lret
ret
icebp
iret
lret
adc
std
scas
insb
push
mov
fs
fstpt
mov
cmc
mov
sub
mull
xor
jae
mov
divb
cmp
divb
aad
idiv
ret
call
mov
xor
jne
cmp
divb
mov
scas
cmc
call
imul
jmp
filds
jmp
sub
mul
push
cmpb
push
idiv
in
sub
xchg
in
repnz
mov
nop
iret
mov
es
mov
or
iret
jnp
addr16
je
push
and
jae
push
mov
xchg
je
adc
out
pop
ja
out
mov
incb
js
cmp
push
loope
pop
and
push
mov
mov
adc
filds
fists
cmc
mov
add
jmp
cmp
in
xchg
push
decb
gs
leave
xchg
scas
pop
ret
imul
roll
inc
sbb
es
jle
mov
enter
or
cli
enter
sbb
rcll
imul
ss
pop
inc
out
and
xchg
filds
or
fs
cmp
push
fdivs
pushf
or
enter
add
and
and
mov
outsl
push
shl
mov
cmp
jmp
in
sbb
sbb
pusha
push
subl
pop
insb
pop
or
mov
jmp
mov
or
sub
sub
adc
lret
sbb
cs
add
inc
pop
mov
sbb
inc
xchg
mov
dec
cmc
xchg
dec
imul
add
add
cmp
test
cmpsb
loope
aas
mov
arpl
cmc
pushf
xchg
cmpsl
rorl
loop
in
leave
jmp
nop
mov
jg
insb
cmp
inc
lds
inc
add
mov
cmc
xor
int
xor
ljmp
add
mov
jl
std
push
push
sbb
mov
add
mov
jmp
adc
inc
jne
jl
mov
push
or
jl
or
add
andl
push
setno
mov
or
ljmp
dec
inc
cmc
adc
cmc
jg
sahf
or
push
push
jne
dec
mov
or
xchg
fcomps
adc
mov
mov
mov
enter
fs
push
ds
ljmp
push
inc
js
dec
mov
pop
inc
adc
fsts
push
je
adc
sbb
decl
mov
dec
mov
push
pop
xchg
ret
xor
imul
push
mov
leave
xchg
cmc
int3
incl
add
add
xchg
sub
push
push
filds
jae
dec
xlat
loop
xchg
fisttps
int3
dec
fidivs
ret
add
mov
jmp
and
ret
sbb
mov
add
lods
sbb
ret
mov
adc
add
mov
test
jb
pop
push
cmp
es
mov
pop
dec
imull
mov
pop
ljmp
mov
add
add
pop
sub
movsl
xchg
mov
push
mov
pop
add
repz
jnp
ja
call
fstl
add
inc
mov
into
push
aad
jmp
dec
jecxz
mov
mov
and
ret
cmc
repnz
dec
or
inc
aad
jmp
inc
dec
add
cmp
aam
insl
cwtl
xchg
or
in
hlt
push
cmp
pop
pop
pop
in
pop
mov
jnp
call
push
jl
mov
or
sub
xchg
dec
ret
adc
jmp
mov
or
and
or
cmc
sub
or
jl
in
push
stos
xor
cmc
xchg
add
cwtl
shl
in
or
movsl
or
jne
cs
rolb
add
mov
jl
std
inc
dec
call
push
dec
loopne
shr
js
in
jns
pop
testb
shll
rcll
pop
add
add
push
rcl
aad
cmpb
es
xchg
or
mov
jl
popf
add
push
je
xchg
movb
push
push
call
ret
or
jns
popa
insb
sarl
jge
ljmp
inc
xor
jg
stos
push
test
pop
xor
or
add
xlat
pop
movsb
mov
fdivr
stos
lahf
pusha
sbb
pop
sbb
gs
les
mov
cmp
pop
scas
mov
push
pop
orb
mov
add
call
xchg
add
mov
add
dec
sti
push
cwtl
mov
pop
mov
mov
fs
pop
or
dec
out
jge
push
add
mov
dec
mov
and
dec
rcll
mov
mov
or
push
or
fwait
mov
imull
jp
push
adc
jae
jnp
mov
int3
xchg
push
rclb
in
push
pop
or
add
push
inc
das
add
xchg
or
mov
popf
push
mov
clc
add
cmc
push
xchg
jl
pop
xor
xchg
adc
mov
addr16
mov
push
daa
adc
dec
pop
push
ret
lret
adc
dec
dec
inc
mov
xchg
mov
dec
lock
rorl
cmc
xchg
ret
jg
push
hlt
fstpt
sbb
mov
push
mov
mov
add
mov
decl
ret
inc
imul
and
idiv
add
sbb
idiv
nop
popa
in
adc
idiv
xorb
call
in
add
pop
in
and
daa
xchg
or
xor
add
int
idiv
pop
icebp
push
ljmp
xchg
or
in
mov
mov
cmc
pushl
int
add
add
cmc
imul
pop
mov
jg
mov
xchg
sbb
xor
sti
and
daa
add
roll
adc
ljmp
add
add
push
imul
fnstsw
test
mov
rcl
cmc
mov
mov
mov
out
mov
enter
jmp
or
mov
pop
je
adc
pop
mov
xchg
push
push
push
lahf
sbb
pop
leave
arpl
dec
flds
xchg
and
xchg
add
sbb
mov
cltd
mov
inc
out
mov
push
or
mov
push
rcr
repz
push
ljmp
fisttpll
push
mov
push
ret
fisttpl
add
pop
mov
mov
add
push
lea
ja
mov
jnp
jnp
pop
mov
popa
cmpl
fs
loopne
mov
mov
or
inc
xchg
loopne
imul
jl
mov
mov
xchg
xchg
pop
bound
int
bound
rcrl
fdivs
jg
pop
push
cmp
add
mov
sub
dec
pusha
sbb
add
add
push
or
cmp
daa
jmp
mov
pop
call
xchg
fdiv
push
outsb
js
xlat
cmc
dec
ret
call
int
cmp
rclb
inc
mov
or
into
icebp
xor
idiv
jb
imull
and
clc
mov
negb
jg
add
add
xorl
jnp
sub
or
add
addb
dec
clc
test
sar
push
add
icebp
decl
pop
adc
xchg
incl
loop
add
inc
or
and
rolb
flds
je
arpl
je
push
xchg
xor
push
rcll
sti
cmpsb
stos
rcll
add
add
and
out
sti
pop
adc
push
lret
push
aas
icebp
out
mov
jecxz
pop
popa
mov
negl
cmpsb
or
mov
mov
ljmp
mov
sub
add
push
inc
sub
add
inc
out
or
dec
push
imul
push
xchg
pushf
mov
cmp
push
test
sahf
dec
rorb
sti
jmp
in
ror
cld
sbb
movsl
push
ret
mov
push
std
enter
pop
decl
pop
loopne
mov
lret
xor
fcom
fdivs
and
mov
pusha
push
lds
ret
jnp
inc
mov
dec
lea
hlt
xchg
mov
cmc
adc
scas
sub
shlb
call
jge
push
or
nop
xchg
add
cmp
enter
cmc
ds
xor
push
mov
and
das
in
xchg
push
mov
add
xchg
or
push
idivl
pusha
add
cmp
dec
sub
sbb
add
nop
xchg
or
aas
ror
movsl
add
jo
in
aas
fistl
jns
jo
divb
pop
adc
dec
addb
jl
cli
fst
call
outsb
push
jns
movsb
aad
incl
cmp
popf
jmp
inc
mov
aaa
dec
in
dec
jl
jge
push
jp
mov
inc
fimull
add
or
jne
pop
lret
dec
divb
add
add
stos
and
in
decl
inc
inc
js
out
mov
je
xchg
std
fisttpll
or
or
adc
or
jnp
inc
je
and
je
ds
imul
out
sahf
inc
pop
loopne
out
cltd
inc
sbb
pop
dec
xor
add
cmp
pop
shlb
mov
jno
and
idiv
mov
sahf
inc
enter
push
pop
lahf
inc
je
mov
std
mov
jl
das
pop
pusha
jle
dec
inc
sub
popa
mov
lock
mov
cld
stos
lcall
dec
stos
stos
inc
push
mov
xchg
cmp
cmpsl
sub
add
pop
cmp
push
fisttps
mov
out
cmp
add
xchg
fistps
cmp
pop
rcll
pushf
push
insl
cmp
mov
mov
mull
mov
sub
xchg
xchg
jle
cmp
fisttps
cmpl
int3
inc
sub
mov
test
ficoml
fcompl
mov
ds
jmp
fmul
fisttpll
xlat
hlt
adc
fwait
loopne
xchg
pusha
scas
cmp
mov
sub
push
stos
mov
ds
sub
ss
loopne
xchg
or
cmp
jnp
std
dec
mov
inc
loope
subb
jae
xlat
cmc
incb
add
add
mov
gs
idiv
pop
pop
divb
dec
in
repnz
rol
xchg
pop
mov
sbb
cld
jg
bound
loop
call
in
icebp
icebp
push
into
int
movsb
cwtl
pusha
stos
xchg
aad
sbb
inc
gs
dec
xor
pop
add
imul
popa
inc
and
dec
adc
pop
in
and
and
add
add
lret
mov
daa
xor
stos
hlt
mov
mov
fldl
imul
xchg
rcll
mov
repnz
imul
or
pop
shll
xor
mov
mov
hlt
push
fiadds
mov
je
inc
xchg
push
push
mov
mov
cmp
mov
or
mov
sbb
sbb
fisttpl
mov
mov
jae
sti
pusha
push
into
mov
jl
mov
inc
pusha
mov
rorl
mov
inc
xchg
cmp
cmpsl
adc
nop
xchg
filds
mov
lock
lcall
jns
mov
inc
clc
mov
add
xchg
mov
cli
inc
lcall
shll
add
filds
mov
leave
add
pop
cmp
scas
cmc
cltd
shrb
lock
scas
cmc
loop
and
add
scas
cmc
jmp
scas
jnp
inc
cld
cmp
push
pop
cmpl
pusha
or
into
push
sbb
mov
inc
scas
cmc
roll
cmc
mov
scas
insl
call
cld
mov
jnp
out
cmp
ret
push
mov
jns
cmp
mov
inc
cmc
popa
cmc
dec
lcall
add
cwtl
or
push
out
negl
insl
mov
xlat
cmc
addr16
dec
add
dec
inc
sbb
xchg
mov
out
sbb
add
xchg
in
or
push
mov
jmp
in
outsl
jge
imul
pop
mov
dec
fiadds
ficompl
or
dec
repz
ljmp
call
or
loop
or
push
pop
pop
idiv
mov
loopne
ljmp
insl
mov
push
idivb
pop
push
xor
dec
rorb
pop
pop
xchg
sbb
or
jbe
pop
hlt
rcrl
sti
sti
or
addr16
lret
ljmp
fidivrl
shl
cmp
mov
dec
mov
or
mov
jl
push
xchg
nop
hlt
out
push
dec
incb
mov
push
mov
mov
push
pop
pop
mov
adc
dec
incb
xchg
movsb
inc
fldt
out
daa
mov
add
xchg
filds
dec
push
aaa
add
cs
or
mov
xchg
push
mov
fbld
dec
fisubl
jecxz
adc
pop
or
cmp
int3
dec
xchg
into
mov
mov
pop
mov
add
inc
roll
push
gs
lods
xchg
int3
xchg
jbe
jae
or
stos
jnp
cmpsl
dec
aaa
iretw
sbb
dec
xchg
push
jl
mov
add
gs
add
loope
dec
stos
jmp
stos
mov
push
and
stos
cmc
pusha
add
sbb
xchg
arpl
nop
stos
mov
in
loopne
cwtl
stos
cmc
pusha
add
std
scas
dec
cmp
inc
jmp
into
stos
cmc
adc
mov
testb
add
rcr
push
notb
pop
gs
xor
push
idiv
pop
lahf
loopne
and
inc
jmp
cmc
addr16
sub
testl
add
add
jle
xor
outsb
idiv
jo
lret
push
inc
push
mov
in
loop
divb
jle
xor
push
addb
nop
pusha
test
xlat
cmc
sbb
pushl
push
jl
sbb
add
sbb
je
arpl
fsubl
xchg
leave
call
cmp
dec
xor
xchg
inc
iret
das
cmp
test
inc
inc
decb
adc
mulb
imul
jnp
add
inc
js
mov
lret
mov
cmp
push
aad
dec
or
test
dec
je
rcll
sub
ljmp
mov
sub
inc
clc
test
inc
cmp
sahf
inc
push
xor
pop
test
xchg
test
push
inc
inc
test
or
test
dec
inc
fdivrs
mov
and
or
test
push
inc
addb
and
idivb
loop
cmp
loop
aas
pop
test
mov
test
fidivrs
mov
pop
or
stos
test
jl
test
aas
loopne
or
mov
cmpsb
cmc
adc
cmpsl
mov
mov
cmpsb
cmc
jle
mov
jbe
scas
aas
mov
jl
cmc
pop
push
cmpsb
mov
push
pop
jl
ds
loopne
ds
cmpsb
loopne
cld
cmpsb
cmc
es
std
push
mov
cmpsb
cmc
push
dec
sahf
cmc
push
mov
and
lcall
add
loopne
jp
loopne
cmpsb
cmpsb
cmc
into
and
std
add
in
icebp
jle
idiv
adc
cmp
sub
data16
or
dec
clc
cld
mov
jl
or
pop
or
int3
sub
dec
icebp
push
std
push
incl
loopne
jge
testb
add
add
data16
sti
xor
xchg
cmc
xor
popf
inc
icebp
lcall
test
pop
add
adc
mov
inc
divb
jp
sub
push
or
jmp
or
stos
movsb
shlb
or
add
xor
xchg
add
push
jnp
movsl
add
lret
test
and
mov
and
dec
sar
leave
aas
movsb
ljmp
addr16
dec
ror
sbb
xor
sbb
xor
mov
movsl
inc
mov
sti
jmp
add
mov
xor
out
shlb
aad
add
pop
xchg
jp
push
shrl
scas
dec
xchg
inc
xor
push
fistpll
cwtl
xlat
add
movsl
mov
add
mov
test
mov
movsl
sbb
fs
sahf
cmp
movsl
sbb
imul
stos
cltd
and
mov
aam
and
add
xor
lods
aas
and
dec
cmp
pushf
push
repnz
inc
fs
cs
dec
xchg
xchg
jp
fistpll
cwtl
pop
push
int3
pop
or
push
push
hlt
out
stc
test
pop
mov
pop
lods
outsl
add
subl
pusha
sub
push
or
xor
sub
cmp
sahf
adc
adc
pop
lock
test
cld
daa
cmovl
movsb
cmc
testl
inc
push
fnsave
or
pop
push
inc
mov
jmp
int
pop
je
add
add
fistpl
mov
inc
jmp
divl
add
adc
ss
add
xchg
cmc
jne
pop
jl
fstpl
hlt
inc
pop
jl
int
and
rcrb
lock
add
divb
outsl
jmp
xor
ret
pop
mov
sbb
cld
cwtl
bound
in
call
lods
aam
push
pop
pop
fs
and
xchg
cmc
jne
outsl
cli
push
rcrb
add
in
dec
add
aas
fs
in
jl
popf
dec
push
decl
jo
int
int
imul
pop
mov
mov
add
push
lcall
decb
stos
xor
xlat
std
jae
movsl
add
add
add
and
xor
fstps
das
je
adc
inc
xor
nop
stos
mov
das
dec
sti
sub
add
xchg
push
pop
das
or
mov
das
je
jb
pop
in
xor
repnz
xchg
or
jo
cmp
mov
imull
insb
jp
cmp
daa
jecxz
xchg
imul
sti
xchg
filds
mov
mov
add
sarb
inc
sbb
dec
dec
ret
adcl
cmp
dec
scas
scas
andl
cmp
lahf
scas
jne
pop
add
mov
cmp
mov
out
mov
mov
pop
aaa
pop
aam
cmp
mov
out
scas
iret
loopne
ret
xor
or
pop
mov
cmp
cmc
loop
add
add
cmp
nop
xchg
in
test
add
mov
cmc
out
mov
sub
pop
mov
lock
fstpl
cmc
shll
cmc
scas
bswap
pop
movsl
jg
scas
sahf
mov
addr16
push
dec
mov
pop
jbe
cmc
hlt
xchg
lods
push
adc
add
fdivrl
je
xchg
es
add
loope
dec
mov
divb
into
pop
incl
mov
jnp
testb
imul
xchg
jnp
repz
cld
sete
call
sahf
push
jns
dec
xchg
or
or
cld
jae
divb
imul
dec
jle
ljmp
addr16
in
data16
cli
mov
mov
mov
addr16
stos
in
call
push
push
jns
mov
test
cmc
jmp
pop
aas
je
inc
test
incb
jbe
popa
cmpl
pop
in
roll
lret
idivl
mov
outsb
aaa
xchg
dec
outsb
or
inc
or
mov
scas
xchg
cmp
pop
jmp
pop
fcomi
dec
jl
clc
cmp
arpl
mov
cmp
cmpsb
or
pop
add
mov
mov
das
and
leave
add
pop
cmp
adc
xor
cli
popf
xor
pushf
cs
out
adc
or
lret
sahf
jl
mov
leave
xor
add
add
test
xor
push
xor
sbb
sub
popf
pop
add
out
sub
popf
mov
or
lods
lods
xor
popf
pop
xor
sahf
sub
push
xchg
sbb
or
xchg
mov
jb
adc
pop
jo
cmc
ficompl
cmc
mov
xchg
add
nop
pop
add
xchg
int
cmpsl
popf
cmc
jmp
mov
popf
pop
jmp
or
cltd
adc
std
idivb
pop
out
movsb
cmc
push
pop
mov
sti
xchg
add
sub
inc
sub
mov
scas
mov
test
sahf
lahf
dec
pop
orl
sbb
movsl
js
sub
addb
jmp
add
add
addr16
int
repz
addr16
call
ret
jmp
addr16
jge
pop
add
pop
adc
mov
cltd
push
xchg
fldl
call
scas
push
jl
add
sbb
sbb
in
psubq
push
push
mov
dec
push
movsl
xchg
mov
mov
xchg
pop
psubq
add
sbb
add
movsl
xchg
mov
push
sbb
dec
fwait
pop
ret
stos
jb
nop
jge
movsb
sbb
rcrb
lods
mov
pop
cs
jns
cmp
or
repz
inc
add
mov
fcomi
add
inc
iret
cmp
lret
pop
popf
cmp
aaa
mov
fsin
and
aaa
incb
add
add
and
jbe
mov
aaa
je
les
das
jae
hlt
loope
pop
sbb
jbe
xor
jae
fdivrs
insl
cltd
mov
clc
rdtsc
sarb
cltd
xor
cltd
fmull
and
add
adc
add
add
cmp
xchg
xchg
jl
adc
ficomps
fs
popf
push
xor
add
add
pushf
sti
mov
pop
xor
cltd
jl
or
loopne
mov
xor
mov
mov
lods
gs
lcall
xor
xchg
mov
inc
mov
cltd
pop
jmp
rorl
stc
xchg
or
jl
or
rorl
jmp
adc
cmc
jmp
or
jmp
mov
lods
stc
es
dec
andl
push
mov
and
cli
nop
jmp
fcoms
xchg
mov
nop
xchg
or
lods
stc
into
mov
js
jmp
xorl
addl
js
pcmpgtw
popf
movsb
shl
mov
add
add
shr
sub
scas
xor
insb
cli
mov
stc
mov
test
imul
adc
xchg
mov
add
idiv
jecxz
in
or
adc
add
adc
add
dec
mov
mov
testb
lods
push
mov
mov
cmp
add
add
dec
cmc
ljmp
dec
je
sub
jecxz
mulb
push
mov
fs
xchg
or
mov
push
jo
aas
push
es
loope
cmp
and
mov
sbb
repnz
adc
scas
ret
or
subl
es
sbb
mov
shll
sub
jbe
lea
incb
mov
incb
add
add
lods
xor
js
push
test
dec
xchg
adc
add
push
cmpsb
ja
filds
mov
aam
inc
push
xlat
addr16
scas
pop
inc
dec
and
aad
add
jb
scas
inc
xchg
hlt
add
jp
mov
push
fildll
cwtl
data16
lods
sub
xchg
jp
pop
or
sub
cwtl
inc
rorb
aas
jp
push
sarl
lcall
add
jmp
test
mov
leave
jnp
push
jnp
cwtl
push
mov
lods
jo
ret
add
fildll
mov
divb
xchg
loop
xchg
pusha
call
add
inc
jmp
test
pop
push
jp
inc
jmp
dec
xchg
negb
lods
adc
sub
sub
clc
dec
xchg
insl
sbb
push
or
mov
add
mov
aad
sub
inc
inc
outsl
cmc
inc
filds
inc
dec
inc
jmp
lock
cmc
es
sub
mov
xchg
not
push
dec
inc
add
mov
jmp
loope
add
nop
cmc
jne
mov
sti
push
rcrb
gs
gs
cmc
cwtl
nop
in
pushf
cs
js
divb
mov
pop
adc
rol
cwtl
pop
mov
sbb
hlt
mov
xor
cmp
testb
cmp
out
or
pusha
adc
inc
push
jge
add
in
es
cmp
push
xor
stos
inc
mov
or
sbb
fucomi
jp
add
add
arpl
lret
push
sahf
mov
pusha
int
xchg
add
adc
adc
pop
push
int
mov
add
add
and
jns
add
xchg
jle,pn
or
outsl
int3
pushl
lods
inc
mov
clc
xlat
push
cmp
lcall
adc
xchg
sub
xchg
les
add
add
cli
ret
xchg
xchg
lea
sbb
out
or
sub
lahf
filds
orl
sub
popf
xlat
xor
cltd
push
andl
jmp
sahf
les
adc
dec
xchg
scas
mov
mov
mov
xchg
jle
mov
in
aas
sahf
rcr
lahf
in
filds
mov
add
mov
call
jbe
xchg
sbb
xchg
or
jl
add
jns
cld
je
test
test
jmp
in
xchg
cmp
xchg
or
xchg
insl
sarb
jmp
and
ss
adc
dec
popf
mov
aam
add
add
push
dec
jmp
dec
xchg
in
jge
xchg
cmc
push
test
in
ficompl
loope
adc
jmp
mov
add
add
pushl
push
cmc
jmp
cmpsb
cmc
xor
stos
jle
jae
xchg
loopne
mov
xchg
or
enter
roll
or
addl
add
and
mov
sbb
push
leave
daa
xchg
or
lods
mov
sbb
pop
lea
inc
and
mov
leave
scas
shll
imulb
jbe
mov
xor
xchg
repnz
lret
dec
pop
lds
xchg
jge
mov
and
jno
lret
inc
sub
jne
aas
xor
pop
add
dec
inc
and
and
mov
repnz
xorb
int3
std
loope
clc
dec
xor
nop
jge
mov
xor
addr16
xor
or
inc
ds
or
xor
sub
or
adc
sbbb
push
mov
es
add
or
adc
xchg
bswap
or
cmp
push
es
or
pop
lcall
pop
lods
out
push
adc
add
scas
push
dec
rcr
and
mov
sbb
or
push
pop
or
push
push
dec
cmp
push
subl
les
xchg
add
or
add
add
xchg
loopne
xchg
and
divl
repnz
test
lea
ja
adc
test
inc
repz
imul
sub
int3
add
int
icebp
fstl
fidivs
xchg
loopne
xchg
cmc
cmpsb
xor
andl
pusha
cltd
sbb
or
sarb
jl
pop
adc
lahf
pop
pop
add
test
cmp
testb
cmp
push
nop
loopne
add
rol
nop
pop
mov
inc
pop
mov
mov
and
jb
or
ljmp
xchg
or
xchg
ds
ljmp
or
incl
add
add
jl
bound
or
incl
or
lcall
jl
dec
and
jne
shrb
repnz
rcrb
popl
and
or
sub
scas
addr16
call
addl
xchg
mov
sub
adc
jmp
add
xor
dec
add
inc
pop
sub
xchg
mov
add
mov
sub
adc
lcall
int3
xchg
jg
or
jl
sahf
or
or
mov
mov
pop
ds
dec
test
push
pop
pop
mov
aas
mov
add
scas
and
jl
and
mov
inc
mov
mov
or
jle
adc
aam
add
clc
sub
add
add
push
out
inc
pop
pop
xchg
outsl
xchg
mov
aad
fistps
cmp
outsl
pop
fimuls
push
dec
dec
js
add
pop
xor
incb
mov
jl
clc
jp
bound
sbb
push
or
mov
gs
mov
jmp
insl
add
addl
add
add
mov
mov
addb
add
es
mov
adc
shr
jecxz
xchg
or
lret
jno
jmp
cmpsl
fprem1
aam
loop
aad
mov
repnz
add
or
jo
repz
insl
push
rclb
sbb
jbe
mov
repnz
add
sti
jne
jge
mov
cmp
sbb
jl
icebp
xchg
loope
mov
add
add
add
jne
and
or
and
push
sbb
cmp
jae
nop
loopne
dec
mov
jmp
mov
testb
inc
sub
rcll
push
xor
push
cmc
mull
xchg
leave
lcall
dec
inc
in
ss
adc
add
mov
push
dec
in
cmpsl
fidivl
add
jne
mov
mov
add
add
sbb
adc
std
arpl
inc
ja
adc
mov
jnp
push
mov
pop
popa
std
xor
mov
call
stc
dec
std
sbb
mov
add
xor
lea
mov
push
mov
loopne
hlt
xchg
in
jecxz
andb
add
add
adc
jno
mov
repz
out
jg
dec
clc
push
std
stos
xchg
or
mov
add
icebp
push
std
xchg
jle
incb
adc
adcl
dec
xchg
arpl
imul
push
pop
fldcw
add
xchg
sub
fists
cmp
pop
or
filds
xchg
push
incb
push
nop
loopne
mov
fildll
pop
filds
pop
cld
dec
xchg
dec
xchg
push
mov
test
dec
jl
push
mov
nop
or
pop
cmp
mov
and
testb
add
leave
aaa
inc
inc
test
pop
mov
lcall
mov
fwait
stos
addb
fidivs
loope
sbb
lret
xchg
adc
loopne
sub
testb
xchg
jbe
xor
lcall
ret
pusha
push
std
aam
inc
xchg
mov
jmp
into
test
jl
xchg
jo,pn
sub
xchg
cli
or
inc
dec
testb
in
flds
fstl
imul
add
add
xchg
adc
push
test
movsb
inc
test
call
push
fdivrp
adc
idiv
inc
shll
bnd
imul
call
inc
push
leave
out
sub
int
push
popf
cmp
std
mov
lock
shl
mov
nop
or
orb
nop
pop
dec
icebp
nop
cs
test
xchg
or
popf
jmp
call
hlt
into
out
cld
adc
add
adc
adc
pop
aas
in
or
mov
sti
imulb
push
xchg
insl
or
dec
rcrl
insb
or
and
or
mov
ds
mov
test
sbb
add
or
mov
push
add
add
lods
adc
pop
add
push
rolb
je
mov
out
movsb
xchg
pop
add
push
xchg
mov
jno
mov
stos
xchg
or
jnp
pop
add
xchg
pop
push
notb
add
adc
xor
add
dec
lods
mov
dec
jmp
mov
pop
icebp
lahf
aad
sbb
xorl
or
cwtl
filds
push
pop
nop
lea
sbb
movsb
pop
aad
sbb
push
dec
mov
shl
dec
jmp
cli
negb
push
xchg
or
adcb
sbbb
or
out
or
mov
nop
sbb
add
jle
push
push
xor
add
cmp
cmc
mov
mov
inc
aaa
xor
leave
call
call
sbb
rorl
cli
xchg
leave
jle
shrl
xor
lret
rcl
jmp
and
sbb
add
xchg
or
lock
cmc
pushl
cwtl
or
movsl
aam
hlt
mov
or
jb
in
movsl
xchg
or
xor
inc
push
sbb
xor
push
das
cmc
pusha
xor
gs
dec
call
orl
jns
nop
pushf
xchg
pop
je
xor
mov
insl
call
insb
inc
aad
lods
push
sub
add
shll
mov
mov
incb
add
add
flds
cmp
cmpb
mov
aas
sub
mov
inc
jb
imul
sbb
je
xchg
popa
sub
leave
jns
add
or
mov
pop
jmp
xadd
mov
das
mull
lods
or
lea
add
xor
push
pop
add
dec
movsl
cmpsb
decl
jno
sub
lret
dec
xchg
fisttps
inc
aad
add
sbb
cmp
mov
dec
jne
xchg
fildll
lods
push
pop
push
ret
dec
xchg
fisttps
mov
and
mov
sub
xchg
filds
dec
add
rsm
dec
in
loope
mov
add
push
cwtl
ss
sub
push
xchg
insb
fimuls
jg
sar
or
sti
jbe
jmp
xchg
pop
data16
xchg
xchg
pusha
jmp
cwtl
or
ja
or
mov
mov
xchg
or
adc
hlt
mov
orb
orl
scas
mov
jle
sub
add
add
mov
je
jne
incb
or
shl
cmc
into
mov
push
dec
mov
adc
hlt
sbb
jge
jmp
jmp
sahf
std
xchg
cmc
cld
mov
push
add
push
rorb
or
sub
roll
cmc
xchg
or
jge
inc
inc
cmpsl
jp
xor
cmc
pushl
cwtl
or
movsl
rorb
or
push
stc
add
mov
in
in
xchg
or
movsl
and
and
cmc
jae
test
hlt
bnd
dec
movsb
cwtl
int
sbb
push
push
xchg
cmc
jne
cmpsl
sbb
pop
push
cmc
or
or
call
adc
ficoms
js
sbb
push
mov
dec
ja
inc
dec
imul
mov
mov
test
shll
incb
and
inc
and
imul
pop
stos
push
mov
hlt
push
or
decb
imul
sbbl
lea
add
xor
mov
bound
mov
add
xchg
pushl
out
push
add
scas
sbb
add
add
adcb
adc
jmp
jl
inc
jg
xchg
sub
xor
ljmp
xchg
filds
mov
loopne
mov
xlat
pop
mov
add
push
js
adc
xchg
les
xchg
ljmp
pop
mov
adc
in
aas
filds
mov
add
mov
adc
cmp
or
mov
push
adc
xchg
inc
jmp
jle
or
push
jnp
jmp
in
add
add
mov
adcl
int3
sti
ss
jae
ss
loopne
xchg
jp
push
and
add
xchg
jl
adc
cmc
jne
jns
pop
xor
or
xchg
pop
inc
sub
jb
aad
jp
repz
push
std
and
ret
cli
cwtl
cmp
pop
and
fwait
clc
sbbl
jnp
push
xchg
loope
sbb
cwtl
jp
jp
pop
add
mov
dec
add
pop
xor
pop
dec
add
push
xor
pop
dec
add
insl
and
pop
dec
add
xchg
cmc
and
jp
jge
mov
cmc
and
mov
jg
lods
or
imul
out
xchg
xlat
mov
xor
or
testl
add
xlat
mov
add
lahf
or
pop
mov
cmpsl
or
testl
ljmp
mov
stos
out
mov
sub
pushl
mov
mov
or
test
jbe
or
cltd
mov
xchg
out
jmp
push
mov
test
xchg
jmp
cmp
mov
add
mov
test
xchg
xchg
jmp
or
mov
jmp
and
mov
test
jmp
pop
jmp
ret
mov
orl
add
xchg
cs
xchg
mov
or
adc
addl
add
add
xchg
or
je
mov
push
aam
fisubs
sub
aam
and
mov
mov
icebp
or
mov
sub
hlt
lret
mov
sbb
aam
jle
loop
sub
aam
data16
mov
or
repnz
or
add
add
sub
movsb
add
lea
insb
mov
in
adc
jb
test
fsts
dec
add
popf
xorb
mov
dec
add
insl
xchg
xorb
or
dec
add
insl
mov
and
adc
andb
add
mov
mov
cmc
and
xor
xor
cmc
and
push
insl
roll
adc
jb
fldl
push
adc
mov
shlb
ljmp
mov
ret
mov
mov
icebp
mov
imul
dec
outsl
or
add
or
mov
or
jl
add
mov
add
add
add
inc
pop
mov
ret
mov
dec
nop
hlt
mov
imul
into
or
pop
addl
imul
nop
imul
mov
jge
adc
pushl
orb
mov
pop
aam
out
add
filds
mov
add
out
mov
out
jg
filds
dec
cltd
dec
movsb
filds
rcrl
xchg
hlt
add
mov
xchg
mov
ret
or
cmp
jecxz
mov
pop
add
icebp
out
xchg
les
out
push
cltd
pop
and
xchg
bound
jae
int3
sbb
in
xchg
jg
js
or
dec
pop
xchg
jnp
cmc
icebp
xchg
or
mov
je
pop
jae
jo
xchg
or
sbb
imulb
popl
sub
push
xchg
adc
mov
xchg
add
sub
adc
xchg
add
xchg
jg
fists
adc
xchg
fmuls
push
push
xchg
ret
jb
dec
sbb
addl
mov
mov
mov
or
sbb
add
xchg
add
jne
jg
test
out
lock
add
repz
leave
mov
push
or
andl
imulb
sbb
add
dec
lea
mov
xor
in
fistl
testb
out
testb
add
add
add
and
mov
add
out
mov
icebp
xchg
or
fstl
add
xchg
jg
mov
mov
jnp
test
test
push
inc
or
lcall
pop
loopne
mov
sbb
cld
cld
add
or
int3
hlt
inc
sbb
imul
dec
out
pop
mov
mov
add
dec
or
cmpb
jno
cltd
int
add
pop
cmc
call
nop
loope
or
hlt
mov
nop
jnp
inc
add
jnp
cmpb
pop
cld
loope
mov
std
adc
push
repz
xchg
pavgw
mov
push
adc
call
cwtl
filds
int3
sbb
fistpll
test
add
add
add
fbstp
lods
iret
test
loopne
inc
loopne
adc
idivl
jo
jp
mov
mov
jns
sbb
nop
mov
and
mov
mov
std
imul
jmp
xchg
mov
mov
mov
call
hlt
lret
sbb
leave
pop
jb
push
mov
subl
xchg
or
adc
jmp
cmp
or
push
and
neg
dec
insb
xchg
call
or
outsl
jnp
xchg
sbb
in
xchg
jg
notl
mov
rep
cmc
add
xchg
or
pop
icebp
add
add
xchg
addl
lds
ljmp
insl
push
mov
xchg
or
aad
add
xchg
jns
es
add
jbe
add
pusha
or
addl
add
xchg
dec
mov
jne
add
mov
cmp
or
and
xchg
mov
xchg
xchg
or
in
mov
sub
or
cmc
push
subb
hlt
jbe
nop
jnp
mov
je
fcomi
cld
add
jl
sbb
bnd
mov
mov
je
jmp
jg
add
jnp
test
pop
leave
jb
outsl
scas
nop
je
mov
addr16
pop
mov
filds
add
add
aas
or
subb
dec
sti
and
mov
lea
or
cmpsb
pusha
push
testl
add
sbb
pop
mov
mov
xlat
dec
insb
lahf
jp
jmp
mov
gs
xchg
fistpll
mov
add
and
xchg
push
out
xchg
fisttps
movsb
pop
insl
repz
xchg
fistpll
jmp
mov
js
xchg
iret
call
push
mov
test
aad
push
addr16
sbb
pop
mov
pop
mov
jmp
lods
nop
or
or
sbb
xchg
andl
test
fwait
mov
xchg
jnp
adc
sbb
xchg
jg
nop
nop
or
dec
adc
jo
test
sbb
or
test
cmp
xchg
or
xchg
or
mov
aam
inc
lods
nop
or
sbb
sbb
xchg
andl
mov
pop
mov
sbb
add
xchg
or
and
lea
cmc
xchg
or
outsb
sbb
fsubs
in
adc
in
jns
cs
lea
in
cmpsb
sbb
xchg
or
movsl
sbb
rclb
xchg
jg
push
xchg
pop
push
out
jmp
xor
cmp
repz
mov
xchg
or
loope
sti
fmuls
jns
addl
add
add
ret
xor
jo
or
cwtl
pusha
orb
add
imul
mov
jb
mov
jb
mov
mov
mov
es
repnz
push
pop
mov
repz
stos
enter
ss
push
movsb
outsl
repz
mov
mov
mov
or
pop
push
pop
mov
add
sbb
mov
mov
sub
fiaddl
and
mov
push
pop
std
push
imul
add
test
and
ja
fsts
iret
pop
mov
add
lret
xchg
shlb
xchg
fisttps
add
xchg
push
add
sbb
fisttps
mov
insl
sbb
xchg
cmp
dec
sbb
adc
xchg
jnp
pop
in
xchg
jg
mov
cmpsb
in
xchg
or
test
sbb
or
out
mov
lock
repnz
sbb
add
mov
jmp
mov
pop
sub
xchg
xchg
xchg
or
push
mov
fdivl
loopne
jbe
cmc
mov
cwtl
xchg
xchg
mov
or
sub
jno
xor
mov
adc
pop
loopne
aas
repz
jae
dec
ret
lret
xchg
add
add
xchg
or
fs
add
xchg
ja
jbe
sub
jmp
scas
or
in
xor
scas
insb
repz
pop
loopne
das
repz
sar
data16
mov
inc
sub
ja
or
adc
cmc
jmp
or
sbb
add
cmp
test
int
jge
sbb
jnp
mov
add
add
negb
mov
xchg
cmpsb
sbb
jnp
xchg
dec
or
sbb
jns
dec
jecxz
ljmp
pusha
or
mov
dec
or
sbb
cmpsb
sub
jnp
xchg
adc
mov
and
and
jnp
jb
mov
int3
add
add
add
xchg
pop
xchg
jnp
push
mov
test
add
filds
push
bswap
pop
mov
add
xchg
push
sbb
clc
add
sbb
sub
int
lock
sbb
add
filds
mov
sbb
fistpll
xchg
icebp
push
ror
sbb
sbb
cld
push
mov
into
filds
loop
jmp
mov
call
add
or
iret
sbb
jo
test
or
or
scas
arpl
jl
or
or
jge
jmp
test
sbb
xchg
andl
mov
adc
insb
fsubl
out
push
aaa
inc
mov
dec
int
push
cwtl
jmp
sbb
add
fisttps
and
fs
or
xchg
lret
stos
enter
xchg
jne
pop
mov
subl
inc
inc
jg
and
push
and
adc
mov
or
cmpsb
cmp
add
orl
xor
cwtl
jg
and
js
or
xchg
das
enter
mov
cmc
out
push
jle
into
push
fisttps
into
push
or
jge
or
mov
enter
or
movsl
lea
add
rcrl
mov
xchg
orl
xchg
nop
imul
cmp
mov
insb
xchg
xchg
adc
add
add
jmp
or
xchg
outsl
or
pop
cli
cmc
add
add
imul
lcall
incl
gs
or
xchg
std
jmp
dec
and
lds
pop
jno
push
jo
in
pmulhuw
or
mov
mov
xchg
push
adc
add
add
dec
or
and
insl
and
xchg
filds
mov
fisttps
mov
stc
xchg
pop
jae
pop
sbb
imul
adcl
cwtl
filds
gs
push
add
lret
pop
pusha
rorb
clc
add
pavgw
movsl
push
adc
fwait
enter
cwtl
push
cld
cltd
sbb
add
or
or
adc
sbb
fwait
inc
or
xchg
or
mov
das
popf
xchg
xchg
sbbl
mov
cmc
dec
or
or
sarb
or
add
push
insb
lods
andb
xchg
dec
sub
jp
pop
shrl
push
icebp
sub
mov
add
jmp
jno
pop
cmp
dec
loopne
popa
cmc
add
int3
sub
les
xchg
ret
jo,pn
lahf
das
repz
or
xchg
loope
bnd
dec
lret
insb
mov
lret
xchg
ret
sub
outsb
cmp
in
int3
sub
mov
das
mov
cmc
mov
add
add
repz
sbb
sbb
push
cli
shlb
enter
insb
mov
and
cld
or
sar
pop
lret
ret
pop
sbb
loop
and
in
and
hlt
pop
and
shlb
insb
or
or
lcall
inc
cmc
decl
xor
mov
add
dec
insb
popa
ljmp
pop
xor
or
lods
ja
add
aas
or
sahf
lock
sub
xchg
xchg
adc
mov
xchg
sub
push
xchg
adc
pop
mov
pop
setne
sub
bound
fcomp
dec
adc
push
adc
sbb
or
and
add
add
outsl
xchg
adc
cmc
cmp
and
jl
mov
mov
inc
mov
mov
dec
mov
mov
add
filds
or
out
decl
inc
out
outsb
pop
xor
out
lods
sti
xchg
scas
inc
mov
xor
popf
mov
inc
push
adc
mov
mov
scas
ljmp
add
iret
adc
in
push
xchg
cmp
adc
pusha
orl
adc
mov
pusha
sahf
movsl
enter
or
add
int
jb
cmc
jmp
arpl
jp
push
push
or
xchg
mov
inc
lods
icebp
je
push
xchg
xor
cltd
adc
sub
xchg
jg
adc
or
icebp
xchg
or
in
xor
cmc
ficompl
mov
js
add
lods
adc
jno
pop
mov
xchg
or
or
lea
lea
lea
cld
les
jle
add
fmuls
or
gs
jg
inc
lret
mov
and
xor
test
mov
mov
mov
jp
and
popf
pop
mov
popa
or
and
jl
dec
test
pop
dec
jmp
les
or
mov
and
sbbb
xor
mov
dec
xchg
dec
adc
jmp
inc
out
adc
insl
or
dec
sbb
dec
adc
sub
fsubp
call
pop
sbb
or
mov
jg
nop
imul
enter
mov
aaa
enter
scas
out
cli
call
xchg
fildll
enter
adc
loop
mov
sbb
pop
les
hlt
jbe
icebp
loope
cmp
xchg
shll
ret
faddl
bound
add
xchg
filds
add
xchg
in
add
out
mov
les
mov
clc
test
out
jnp
filds
adc
rol
push
add
xchg
lret
ror
and
les
les
int
les
out
or
mov
dec
call
fsubrs
jb
lds
scas
fmull
inc
int
adc
or
les
int
and
sub
nop
push
mov
or
dec
bnd
sbb
notb
leave
sub
fisttps
cmc
ss
cmp
lods
mov
pop
mov
inc
pop
cmc
ret
leave
add
add
add
mov
aaa
xchg
dec
and
stos
loopne
sbb
xchg
or
cmc
or
jbe
test
cmp
test
call
pop
mov
jg
leave
rcrl
ds
loopne
cmp
cmp
fistl
in
jmp
xchg
or
inc
scas
dec
jge
fiaddl
push
add
add
mov
addr16
dec
iret
jg
mov
inc
and
sbb
dec
test
xor
dec
jo
push
dec
pop
ja
pop
je
rcrl
out
in
inc
and
repnz
adc
mov
jmp
js
testb
clc
push
or
mov
pop
and
loop
adc
insl
or
iret
push
or
xchg
cmp
scas
rcll
rolb
adc
rolb
jl
xchg
pop
lock
push
push
jp
or
jp
insl
sbb
ret
add
lea
mov
data16
leave
testl
rorl
sbb
les
in
mov
sbb
xchg
test
repz
fldcw
ljmp
test
add
cltd
cwtl
outsl
xchg
dec
and
js
filds
mov
outsb
jbe
cltd
sub
mov
mov
mov
insb
jge
jno
jp
adc
rcrl
insb
jne
popa
push
xor
or
ljmp
or
or
jmp
and
fsubr
xchg
xorl
fs
xor
fwait
nop
or
or
repz
push
or
arpl
sub
ds
xchg
es
cmc
sahf
inc
shrb
inc
shrb
push
pop
jb
ret
je
scas
sti
outsb
test
pop
jb
or
add
jo
sbbl
jbe
lret
push
std
add
mov
pushl
repz
push
int
mov
jnp
call
mov
jl
enter
jmp
cmp
repnz
pop
in
pop
notb
jg
xchg
test
enter
or
aad
adc
xchg
or
jo
jle
out
push
je
ds
xor
or
decl
aam
mov
and
rol
call
outsb
pusha
add
add
add
repnz
adc
and
or
or
mov
mov
inc
enter
jp
add
sbbb
add
mov
and
sti
jae
mov
aam
sti
pop
loop
push
mov
and
stos
pop
mov
and
hlt
lret
xor
pop
subl
add
jne
movsb
push
std
stos
push
into
mov
add
and
xchg
jp
mov
js
test
push
aas
test
xchg
push
mov
inc
ds
jp
adc
push
push
cs
mov
fistpll
js
add
add
repz
js
push
pop
in
mov
icebp
out
jge
sbb
and
push
push
test
loop
adc
loope
sbb
xchg
fdivr
inc
mov
adc
mov
push
inc
sbb
sub
shrl
js
sub
lock
cmc
fabs
in
lock
fcomp
sub
mov
xchg
jnp
or
and
xchg
or
xchg
je
or
jge
shll
xchg
jae
rorb
push
xchg
jl
js
sub
pop
loope
mov
popa
stc
mov
push
js
bound
jp
cmp
movb
xlat
sub
lds
jecxz
cwtl
xor
adc
loope
adc
nop
repz
inc
rol
call
xchg
cmp
test
jmp
or
fists
out
or
repz
scas
and
rol
mov
clc
repnz
cmp
ret
mov
lods
das
xchg
cmc
ljmp
mov
in
dec
cmp
push
xchg
xchg
idivl
or
mov
fisttpl
in
mov
cmc
ljmp
and
add
fwait
movsb
call
push
cmc
incl
jo
mov
inc
out
jmp
movsb
xor
inc
aad
icebp
dec
jbe
scas
cwtl
cmp
add
or
std
daa
pusha
jb
jo
xchg
cltd
addr16
jo
jb
js
or
adc
subl
adc
add
idivl
or
aas
lods
jno
mov
push
rorl
mov
dec
jg
xchg
filds
gs
daa
mov
addb
xchg
push
mov
jp
mov
incl
sbb
push
adc
cmp
xlat
mov
nop
nop
jp
sbb
pop
push
dec
fsubs
mov
xor
ss
sbb
jp
add
add
daa
dec
pop
sbb
in
push
push
mov
dec
adc
loope
xor
jmp
inc
add
imul
lds
pop
loopne
ret
jb
js
push
aas
sbb
bound
dec
xor
mov
outsl
lods
cwtl
or
cli
xchg
mov
xchg
or
mov
mov
mov
paddusb
xchg
mov
enter
sbb
adc
dec
loope
test
sub
add
jmp
shl
bound
cmp
add
push
fs
lret
dec
and
roll
jns
push
cmp
inc
xchg
or
pushf
movsl
nop
or
notb
sub
inc
int
sub
outsl
and
lret
push
xchg
js
push
out
add
int
in
push
leave
jg
int3
dec
and
jge
and
cwtl
or
adc
or
xchg
lahf
xor
lock
or
repz
xor
mov
or
push
mov
push
cmp
inc
or
std
mov
dec
pop
arpl
sarb
add
add
inc
or
iret
retw
jae
jmp
clc
loopne
adc
add
dec
mov
jecxz
std
pop
or
add
jne
mov
or
mov
fucomip
sbb
scas
js
or
cwtl
adc
xchg
dec
loopne
nop
nop
filds
pop
fucomip
pop
jnp
gs
xchg
fisttps
aam
xchg
mov
adc
pop
mov
add
movsb
loope
lcall
pop
mov
pop
mov
add
sbb
xchg
fisttps
sbb
fisttps
dec
sbb
jecxz
mov
add
or
insl
sti
xchg
or
dec
adc
jo
movsl
or
sbb
mov
xchg
xchg
or
mov
adc
xchg
pop
dec
mov
pop
fcmove
adc
sub
adc
mov
sbb
sbb
xchg
and
push
mov
inc
add
insb
mov
fwait
in
subl
inc
mov
add
xchg
or
lret
jo
add
xchg
cmpsb
pop
xor
fstl
ret
jle
sub
jle
mov
negb
dec
or
movsb
jne
sbbl
add
xchg
mov
jno
add
xchg
jg
leave
aam
add
add
add
aam
add
jg
dec
test
add
pop
mov
outsl
dec
add
xchg
pop
push
rcl
sbb
adc
sub
xchg
or
mov
push
int3
popa
push
int3
mov
and
dec
fiaddl
mov
or
mov
aas
mov
fdivrl
nop
dec
test
minps
adc
jl
addl
add
aam
jo
xchg
mov
les
repz
mov
setns
jmp
inc
test
fwait
cmc
xchg
dec
mov
add
imul
movsb
xor
std
imul
std
pop
cmp
mov
gs
cwtl
xchg
lods
or
rcr
lret
adc
cld
jae
pushf
imul
and
addb
add
inc
test
add
and
xor
loop
inc
or
shl
lret
add
aam
mov
imul
and
xorl
out
xchg
or
adc
or
xchg
sti
or
cli
rcr
or
sbb
fidivs
out
or
adc
or
xchg
mov
add
rorl
jmp
pop
dec
cmc
stos
push
dec
adc
pop
cltd
test
cmp
je
movsl
cmc
jmp
xchg
or
mov
add
mov
adc
jmp
add
adc
adc
in
add
xchg
into
cs
bound
in
test
jno
pushl
mov
jmp
dec
aaa
add
dec
or
lret
mov
add
cmpsl
lea
scas
mov
pop
add
mov
adc
aas
xor
or
adc
cmc
push
filds
push
lea
jl
xchg
icebp
sbb
adc
pushl
insb
movsb
dec
andl
addl
nop
or
mov
add
or
cs
add
in
inc
movsl
sbb
mov
lret
push
or
jmp
inc
gs
ret
jg
mov
dec
add
inc
orb
outsb
or
cli
cmp
dec
add
or
mov
xor
ds
pop
sbb
or
leave
dec
add
jno
push
hlt
add
add
in
mov
das
ret
mov
add
pop
push
or
mov
in
ljmp
dec
xchg
pop
dec
or
or
insl
add
xchg
stc
mov
cwtl
push
call
xchg
jne
sti
xor
mov
or
les
ljmp
add
add
mov
int3
xchg
xor
push
xchg
xchg
xor
push
push
push
testl
xchg
movntps
mov
loope
in
ja
mov
loope
mov
addr16
psraw
movsb
mov
imul
lds
psraw
je
ja
ret
or
sbb
addl
sti
pop
gs
add
add
sbb
push
xchg
pop
lahf
jle
dec
fldl
out
jb
or
or
loop
loope
js
xchg
xchg
popl
pop
sarb
or
fstps
fisubrs
pop
inc
xchg
mov
or
jle
jg
iret
cmp
clc
fstps
test
xchg
aaa
xchg
pop
inc
xchg
jle
jg
iret
cmp
fdivrs
add
add
add
sbb
or
cmpsb
rorb
test
jne
xchg
decb
xor
jmp
mov
push
and
jecxz
repnz
fnstenv
push
jecxz
jbe
cmc
mov
mov
sub
add
xchg
into
xor
adc
xor
add
push
xchg
mov
add
add
sbb
aas
cs
mov
mov
push
jecxz
xor
hlt
add
push
aas
mov
mov
jae
mov
js
or
xchg
sbb
iret
idivl
ljmp
ret
xchg
outsb
cmc
xchg
out
xchg
out
pop
push
cld
cltd
in
or
cltd
test
pop
jg
inc
or
mov
cwtl
cld
ja
or
or
sub
dec
add
lods
aad
mov
inc
aas
mov
fidivrs
mov
mov
cmp
or
or
push
pop
inc
jmp
mov
pusha
fists
filds
xchg
pop
dec
pop
adcl
sub
add
fisttps
aaa
add
xchg
cli
mov
mov
mov
adc
add
arpl
testb
fstpl
shlb
xchg
leave
mov
loope
std
cmp
or
sbb
sub
lea
jmp
leave
xchg
jg
push
xor
push
mov
sbb
inc
push
push
mov
mov
xor
adc
pusha
push
xchg
divl
insl
shlb
jmp
fadds
iret
jo
out
or
pop
add
cli
pop
gs
rcll
mov
or
pop
push
rolb
hlt
cmp
xor
or
ror
and
jecxz
add
add
movsb
aaa
xor
or
aaa
or
rcrl
jne
cli
or
and
mov
mov
sbb
movsb
or
ror
and
jecxz
cwtl
add
xor
jle
sub
dec
lea
mov
add
jge
mov
sub
ret
push
push
jle
sub
add
and
fimuls
sldt
add
add
mov
jmp
mov
cmp
pop
push
fdivr
and
inc
aas
mov
cld
stos
in
or
dec
icebp
and
inc
aas
mov
cmp
inc
or
or
push
mov
push
or
push
fs
fdivr
dec
push
pop
je
sub
loope
xor
dec
add
jmp
adc
pop
jae
sub
loope
clc
cmp
push
add
rclb
scas
jecxz
dec
jge
fldenv
jmp
pop
cvttps2pi
add
jecxz
dec
cmp
aaa
mov
mov
aam
pop
mov
iret
mov
pop
push
clc
aad
or
paddusb
cmp
hlt
mov
movsb
sarl
push
dec
shrd
rorl
xlat
inc
xlat
iret
mov
cmp
cmp
rcrl
iret
add
jp
clc
push
lods
rorl
rorl
cmc
push
movl
mov
hlt
fisubrs
subl
loopne
fdivrl
cmc
pop
or
xor
cmpsb
mov
cmovnp
pop
cmp
stc
sub
ja
pop
pusha
je
in
mov
mov
or
mov
cmp
sbb
cmc
jmp
les
inc
cwtl
cmp
andb
inc
movb
nop
cmp
adc
test
xchg
or
mov
jl
mov
and
test
repz
add
add
je
repnz
test
repz
mov
add
out
or
arpl
mov
cmpsb
lock
add
lret
scas
nop
jns
sbb
imul
repz
idiv
rclb
stos
andl
jns
mov
arpl
mov
or
mov
ss
add
add
add
call
push
inc
jp
pop
test
pop
or
test
inc
dec
cmp
mov
sub
and
mov
std
jb
nop
lahf
dec
add
sbb
and
jnp
out
js
mov
ljmp
or
mov
pop
xlat
std
push
popf
mov
je
fadds
xor
je
add
add
jg
mov
ljmp
lea
decl
cli
lcall
test
jnp
push
loop
dec
shlb
jl
in
adcl
xlat
into
aaa
fiadds
mov
rorl
mov
adc
xchg
aaa
das
fdivl
xchg
filds
loope
cmp
fldenv
aaa
adc
add
add
or
sub
mov
pop
mov
test
scas
repz
adc
xchg
jle
loope
sub
loopne
cmp
cmc
xchg
fstpt
out
push
lret
mov
jns
cmp
adcl
out
out
mov
xor
push
lret
in
sbb
cmpsb
cmp
add
adc
jmp
jecxz
or
nopl
xchg
mov
rclb
sub
adc
or
pop
ret
frstor
push
add
or
gs
push
pop
loopne
push
jne
movsl
xchg
or
insl
inc
jl
cmc
mov
movl
fdivl
jl
rorb
mov
add
add
mov
xchg
mov
hlt
jne
nop
jp
outsb
push
or
cmpb
push
cs
sub
dec
repz
fmul
clc
push
clc
roll
push
std
das
lock
fidivl
adc
pop
xlat
clc
ljmp
add
lock
ret
arpl
int
jbe
sbb
shrl
outsb
ret
push
mov
dec
add
call
ret
shll
dec
aas
jb
fdivl
aam
push
pop
jb
mov
fdivs
jbe
mov
aam
movsl
cmc
ret
push
or
push
movsb
pop
ret
xchg
je
cmp
aam
jne
les
pop
mov
cld
add
xchg
push
js
cmp
inc
cmp
mov
inc
mov
movsb
lret
mov
xor
dec
lahf
aad
jle
and
fcomi
sub
int3
je
xchg
inc
mov
lods
fistpl
lret
jmp
sub
fistl
sub
divl
pop
fcmove
xor
stos
xlat
lret
mov
and
cmp
pop
int3
mov
inc
add
test
js
xor
add
add
loop
push
test
hlt
notl
sbb
popa
xor
sbb
enter
mov
inc
jmp
inc
sbb
or
jnp
sbb
sti
leave
adc
int
shlb
es
xchg
or
loop
jg
jns
jl
xor
sbb
arpl
negb
je
xor
insb
pop
xor
fiadds
je
xor
add
out
jae
xor
popa
mov
jmp
ja
or
xchg
jnp
mov
pop
repz
hlt
outsl
loop
or
mov
jo
loop
or
lods
mov
mov
jle
pop
lods
dec
push
ret
pop
mov
mov
or
add
sbb
es
pop
xor
mov
sub
lea
fadds
push
xchg
cli
loop
and
mov
xchg
dec
sbb
jno
xchg
out
inc
mov
add
xlat
xchg
mov
dec
icebp
shlb
in
leave
std
out
jmp
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
add
filds
mov
add
add
add
filds
mov
add
filds
mov
add
filds
mov
add
xorb
mov
lds
stos
je
push
lods
je
pop
das
je
pop
arpl
inc
popa
je,pt
pop
das
je
popa
and
sbb
test
or
add
add
cmpsl
jp
jmp
jl
cmpsl
mov
leave
mov
bound
fstps
fisubl
mov
xlat
push
lods
mov
or
insl
rol
sub
shll
add
push
sarl
mov
pop
mov
xchg
movsb
xor
jp
jge
xorl
add
imul
and
jmp
mov
or
movsl
xchg
or
movsl
xchg
or
jne
or
jne
or
gs
or
gs
or
jne
or
jne
or
gs
or
gs
or
xor
xchg
or
and
pop
inc
imul
arpl
pop
in
js
imul
xor
insl
in
fcoml
in
or
cmc
xchg
or
cmc
xchg
or
in
or
in
or
mov
or
mov
or
movsl
xchg
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
add
filds
mov
add
filds
mov
add
add
add
filds
mov
add
filds
mov
add
filds
mov
add
filds
mov
add
fmull
pop
mov
or
movsb
push
mov
outsl
jmp
movsl
sub
pop
cmpsl
jns
mov
popa
cmp
cli
jnp
push
fimull
mov
decl
xchg
fs
xchg
mov
mov
push
cmpsb
insb
sbb
mov
popa
int3
pop
xchg
insb
mov
mov
xchg
add
cmp
clc
jns
fmuls
add
add
insb
or
pop
and
xor
or
nop
and
mov
add
jp
push
insb
or
data16
int3
imul
ja
mov
arpl
jnp
add
jnp
jae
bound
lcall
je
jno
insb
and
jp
push
arpl
adc
and
xor
outsb
pusha
popa
cmp
gs
xchg
outsb
jb
jge
outsl
mov
or
cmpsl
and
jno
adc
jno
push
arpl
cmp
jae
fdivrs
imul
and
sub
popa
and
sub
outsb
add
outsb
jmp
mov
in
cmp
jae
xchg
xor
cmp
insb
icebp
cs
call
cwtl
cs
mov
or
pop
cmp
dec
cmp
pop
mov
das
pop
mov
mov
cmp
insl
jle
sub
push
sub
xchg
xchg
add
test
outsl
cmpsb
fbld
pop
mov
xorl
mov
add
dec
xor
cmpsb
pusha
popa
push
stc
pop
popa
fildll
pop
mov
inc
xor
add
add
mov
cmp
push
add
mov
fbld
repnz
or
fstl
sub
mov
adc
bound
sub
mov
das
scas
xchg
xlat
and
or
mov
ja
mov
mov
or
xchg
js
cwtl
movsl
or
outsb
xchg
ds
cmp
mov
arpl
mov
jmp
imul
or
pusha
inc
mov
mov
imul
scas
imul
scas
mov
add
decl
mov
into
fs
sbb
jbe
sbb
pop
push
outsb
rclb
popa
add
add
in
jns
adc
add
outsl
ja
or
imul
add
adc
imul
arpl
arpl
cmp
nop
js
inc
jae
add
addr16
insb
or
jne
jp
jnp
ja
fs
jns
gs
arpl
and
add
cmc
insb
push
jo
imul
and
inc
or
pop
and
loopne
ljmp
push
fs
pop
je
or
push
cmp
outsb
cmpsl
and
add
mov
and
pop
and
cmp
lret
sub
mov
sub
mov
sub
cmp
gs
jmp
add
add
xchg
cmp
cwtl
cmp
in
mov
data16
or
lods
lcall
movsl
and
fbld
mov
iret
es
mov
aaa
ja
lds
insl
mov
sub
fbld
push
mov
xchg
sub
mov
xor
mov
cwtl
aaa
das
mov
add
jae
and
es
mov
add
aaa
xchg
inc
and
mov
cmp
xchg
inc
sub
mov
add
cmp
mov
add
mov
ss
sbb
ds
sti
data16
enter
lret
jae
retw
cmp
pop
mov
lret
jns
lods
mov
lds
mov
jmp
fwait
mov
jmp
lods
ret
data16
scas
imul
jns
jno
jns
imul
inc
mov
mov
cli
shrb
cli
xorl
sbb
scas
mov
sbb
mov
add
ja
imul
xchg
arpl
jo
gs
add
add
add
outsb
insl
arpl
jae
add
arpl
xor
arpl
push
push
jae
cmp
xchg
push
jne
jae
outsb
mov
js
aaa
jb
add
popa
imul
insl
outsb
movsl
jne
outsl
dec
insb
imul
shll
int
js
imul
insl
popa
add
nop
and
sub
add
sub
pop
mov
push
and
push
xor
pop
mov
xor
push
and
cmp
add
sub
addr16
and
add
cmp
sbb
add
and
pop
or
or
outsb
inc
adc
add
leave
xor
das
sarb
jbe
mov
pop
popa
not
xor
cld
shlb
arpl
sub
arpl
aad
imul
sbb
xor
fwait
push
das
jae
shlb
jle
mov
mov
fbld
scas
mov
xor
mov
into
sub
cmpsb
fstpt
mov
mov
sub
mov
and
sbbb
mov
mov
imul
cmp
cmpsb
fbstp
xor
outsl
xor
mov
dec
daa
mov
pop
add
lods
pop
pop
mov
cmp
or
scas
or
jae
jl
jb
jle
jp
imul
fs
add
mov
or
push
mov
fbstp
imul
mov
rcrb
add
add
jns
mov
outsl
jmp
stos
pop
mov
test
mov
mov
mov
dec
pop
xchg
aaa
sbb
outsb
or
mov
add
ja
popa
gs
arpl
jns
xor
insl
insb
jp
imul
ja
bound
arpl
jbe
add
add
add
push
outsb
inc
je
add
jb
outsl
xlat
pop
or
jb
outsl
roll
popa
jns
imul
je
insb
in
push
jae
jns
push
imul
push
cmp
movsl
je
bound
jp
push
sub
xor
lret
and
mov
daa
add
data16
jb
sub
push
in
sub
xor
xchg
adc
push
stos
sbb
add
sbb
jno
cmp
sti
xor
stc
pushl
sub
pop
jg
daa
jb
dec
sub
jne
sub
addr16
pop
sub
or
aas
adc
add
lahf
sub
or
or
arpl
sub
insl
sbb
add
xchg
pop
sub
mov
xor
std
test
sub
xchg
dec
and
mov
add
stos
xor
jmp
xchg
push
sub
mov
or
add
bound
sti
bound
scas
test
xor
movsl
aam
je
insl
push
repz
push
lock
pop
out
mov
add
add
xchg
es
mov
cmp
lds
and
or
ja
jl
movsl
outsl
and
push
arpl
es
test
cmp
xchg
test
jle
andl
iret
lahf
lods
js
lods
jl
js
and
adc
pusha
or
mov
std
jbe
imul
test
jp
scas
push
shll
movsb
xor
jmp
mov
mov
jp
mov
enter
pushf
imul
outsl
jl
xor
push
cmp
ja,pn
cmp
jp
mov
or
lods
mov
dec
dec
mov
cmp
pop
pop
dec
test
and
insb
rcrl
test
dec
hlt
xor
add
xchg
inc
dec
jmp
xchg
or
cmc
xchg
or
inc
dec
push
sbb
pop
inc
adc
insl
arpl
jbe
outsl
lret
bound
je
outsl
cli
popa
push
inc
mov
cmp
fwait
cmp
and
inc
push
cmp
jno
or
insb
mov
and
clc
iret
pop
je
aam
add
add
mov
jno
sub
int3
daa
arpl
or
mov
or
mov
pop
add
sbb
je
mov
arpl
adcb
mov
sbb
outsb
mov
add
and
dec
adc
insb
push
repnz
je
dec
cmp
insl
push
xchg
and
mov
cmp
lret
mov
pop
cmpsb
sahf
add
add
das
movsl
jb
xor
mov
movsl
jb
sub
inc
daa
add
daa
call
mov
xor
ljmp
add
scas
sbb
scas
adc
lahf
hlt
add
lds
mov
mov
xor
stos
mov
mov
xchg
fbld
push
gs
loope
test
add
add
add
mov
mov
pop
lea
mov
pop
xorb
xchg
push
popa
xchg
insb
stos
imul
cmpsb
jns
ja
or
ret
cmp
mov
sub
mov
jl
iret
xchg
dec
cmp
mov
sub
mov
xor
mov
xor
or
bound
add
lret
popa
mov
dec
movsl
jl
lods
lahf
inc
add
push
inc
daa
imul
outsl
fs
inc
cli
jne
gs
pop
or
pop
imul
js
add
arpl
add
popa
ja
cmp
outsb
jne
popa
jo
bound
mov
ja
shrb
outsb
andb
gs
imul
data16
popa
mov
shlb
and
xchg
push
sbb
jl
cmp
imul
xor
gs
jno
fisttpl
pop
inc
push
imul
adc
and
or
arpl
dec
fs
je
adc
std
sbb
adc
add
stc
xor
push
ja
push
dec
outsb
fcompl
je
lret
in
pop
sub
iret
mov
je
jnp
outsb
filds
je
sbb
aas
mov
jb
push
pop
jb
xchg
fsubs
outsl
mov
mov
outsl
xchg
mov
pop
jno
les
movsl
mov
mov
xchg
sub
add
add
mov
xor
rorl
sub
mov
mov
das
filds
mull
dec
add
mov
and
out
cmpsb
xor
inc
inc
mov
daa
lods
add
test
das
push
mov
mov
or
jp
jl
jb
imul
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xor
cwtl
ja
mov
insb
loope
push
dec
sub
insb
xlat
addr16
je
push
or
cmc
xchg
or
lea
loopne
xor
add
aam
add
xor
add
add
xor
add
add
xor
add
add
add
or
je
or
mov
sub
jns
cwtl
scas
jl
xor
jge
add
sub
or
mov
add
sbb
dec
in
cmp
sub
std
or
dec
fsubrl
add
dec
insl
xor
adc
aas
std
or
mov
incl
add
add
mov
jb
std
or
mov
add
adc
pop
daa
outsb
clc
outsb
or
mov
mov
mov
or
pop
loop
dec
jo
xchg
and
mov
cmp
mov
xor
mov
inc
jno
les
push
mov
and
mov
mov
add
mov
cmp
cwtl
sbb
test
xor
mov
sbb
xorb
adc
sbbl
lret
js
sbb
jnp
xor
jae
sbb
ja
dec
stc
sbbl
or
or
xchg
pop
inc
addb
cmp
xchg
arpl
sti
test
add
pop
jo
add
gs
dec
fdivrl
push
fstpt
push
jo
jnp
jp
mov
andb
lea
mov
xchg
xchg
lds
mov
lds
mov
xchg
pop
dec
jnp
inc
ret
inc
scas
mov
mov
lods
imul
add
add
push
xchg
imul
imul
lret
jl
jge
pop
stos
jle
mov
imul
pop
arpl
lods
pop
jb
lds
shlb
popa
mov
jo
lret
sbb
imul
scas
ja
sub
imul
scas
imul
imul
add
add
mov
imul
int
loopw
adc
pusha
or
icebp
mov
push
push
mov
mov
insl
cmpsl
cwtl
push
push
mov
cwtl
adc
dec
mov
fnsave
push
pusha
lods
mov
out
or
je
popf
out
cltd
repz
popa
outsl
loopne
je
popf
shrb
clc
out
ds
fisubl
jo
add
add
call
adc
pop
xor
and
ja
cmp
cmp
outsb
clc
xchg
inc
push
add
and
loop
push
sbb
mov
sbb
lahf
stc
inc
jmp
mov
mov
jge
and
mov
mov
ja
jecxz
test
pop
stos
jno
xor
cmc
jo
shll
cmpb
sbb
mov
adc
insl
jge
sbb
jne
jecxz
jnp
and
mov
stc
pop
addl
inc
jge
sbb
orb
vmovdqu32
shll
outsl
mov
push
mov
jb
dec
jne
inc
cmp
mov
dec
mov
lds
hlt
xor
add
add
jg
sbb
pop
jno
push
pop
jl
jmp
mov
or
lods
dec
mov
push
pop
mov
fistps
jl
call
int
lret
jl
scas
mov
inc
mov
xchg
mov
test
imul
lods
imul
lock
cmp
repz
outsl
push
arpl
stos
addr16
mov
outsl
xchg
imul
les
and
jb
and
and
mov
imul
clc
cmp
test
adc
int3
mov
sub
out
add
mov
cmc
sub
shr
and
movsl
in
and
mov
xor
add
add
or
dec
loope
popa
sar
xor
rcl
das
mov
scas
xor
mov
lods
ficoms
lods
ficoms
or
fistl
or
fistl
std
inc
arpl
stos
pop
push
movsl
scas
adc
les
mov
xchg
pop
insb
mov
loope
inc
jg
cmp
test
pop
jno
add
add
cmp
pop
fdivs
sub
xchg
xchg
sub
jp
aas
push
pusha
scas
aas
push
jnp
pop
sbb
cmpb
outsl
fwait
dec
jecxz
mov
fdivrl
sub
jp
inc
shlb
inc
aam
push
sbb
xchg
adc
ljmp
dec
jecxz
call
jp
sub
jg
sub
shlb
add
add
gs
sub
add
outsl
push
mov
bound
inc
imul
jno
fcoms
pop
jns
sbb
push
or
mov
cmpb
jne
scas
push
imul
mov
cmpl
push
das
mov
inc
dec
addl
imul
add
add
imul
subl
or
and
jl
addl
or
scas
cmpl
xchg
ja
aad
imul
adcl
pop
shll
insl
add
pop
inc
dec
out
dec
push
mov
data16
mov
insb
loope
jp
xor
add
or
or
mov
imul
jp
jb
data16
popa
insl
xchg
nop
push
outsl
xchg
lods
jnp
xchg
ja
sbbb
insb
aad
arpl
mov
shlb
ja
aam
popa
fs
cmp
fcomps
pop
mov
inc
jo
inc
and
add
das
aad
push
pop
into
ds
cmp
xor
xor
adc
cs
sub
fsubrs
or
inc
inc
mov
mov
cmp
sbb
adc
fisttps
je
pop
sbb
mov
insl
scas
pushf
cmp
mov
pcmpeqb
aas
jmp
pop
pop
mov
add
arpl
xor
rcll
cmp
fisubs
imul
andl
cmpl
adc
outsb
test
sbb
js
xor
pusha
xchg
lock
adc
inc
adc
push
inc
xor
push
sub
jecxz
jne
sub
arpl
cmp
add
add
sbb
test
addb
js
and
or
dec
lds
dec
push
jnp
mov
pop
mov
jge
outsb
les
pop
jns
fs
js
pop
push
push
popf
xchg
pop
xchg
jno
jge
jge
push
scas
imul
arpl
test
push
push
stos
movsb
subb
sub
mov
push
sub
add
add
jp
pushf
ja
cmp
int3
dec
fs
outsb
gs
lds
int3
push
jnp
imul
xor
outsb
add
mov
insb
mov
mov
aam
or
arpl
mov
inc
and
dec
pop
negb
pop
add
push
outsl
mov
push
notb
inc
loope
jns
or
push
outsl
jne
dec
insb
adc
xor
jne
mov
inc
imul
mov
popa
cs
mov
add
mov
gs
pop
fs
mov
dec
xor
sub
test
and
cmp
sbb
insl
fildll
add
sub
xor
push
pusha
or
inc
sub
sbb
jb
or
push
mov
inc
outsb
incl
cmp
push
or
sub
imul
push
in
daa
jno
pop
sub
cmp
dec
and
add
mov
jno
xchg
push
push
fwait
mov
and
mov
add
add
xchg
adc
jne
sub
xchg
lret
inc
imul
jae
lret
and
pusha
shrb
jns
and
jne
and
mov
sub
xchg
adcl
xchg
bound
mov
sub
ja
sub
jo
jmp
mov
jae
and
pop
dec
sub
add
add
xchg
dec
je
pop
cmp
je
sub
fs
pop
jl
aas
jmp
pop
dec
adc
mov
adc
jne
jmp
fs
outsl
jl
scas
push
pop
mov
popf
jne
or
mov
jne
movl
imul
jp
mov
arpl
jge
jp
cwtl
popa
jns
nop
arpl
jle
jp
jg
jp
sbbl
jle
les
nop
cwtl
inc
popa
jbe
sub
stos
jle
cmpsl
clc
dec
outsl
push
xchg
or
jl
xchg
mov
sub
mov
ja
test
imul
mov
jae
pop
push
jae
add
add
hlt
push
gs
imul
xchg
inc
popa
notb
jle
pop
hlt
inc
popa
add
and
lahf
jp
shlb
imul
insb
lahf
sub
dec
sub
or
fcomps
sub
jb
xchg
sbb
xchg
sbb
adc
mov
adc
insl
jb
cmp
loope
pop
pop
fmuls
cs
lret
sbb
sbb
inc
inc
sub
sub
push
sub
pop
dec
and
dec
push
push
and
aaa
and
addr16
pop
ficomps
cmp
sub
mov
adc
outsl
inc
in
outsl
dec
adc
push
cmp
mov
outsl
ss
insb
push
xor
push
add
push
jne
mov
push
addb
xor
push
outsl
mov
xor
into
sbb
pusha
dec
scas
rdpmc
outsl
lds
mov
sbb
das
pusha
mov
orb
ljmp
inc
pushl
test
outsb
or
add
add
jo
dec
jb
push
push
cwtl
mov
jb
or
imul
jno
imul
xchg
inc
or
pop
or
sbbl
push
pop
adc
pushf
jno
sub
stos
cmpl
dec
sarb
or
test
fs
popf
mov
jg
dec
enter
rclb
jl
inc
jne
popf
mov
outsl
mov
gs
pop
sbb
insl
arpl
cwtl
push
push
call
les
xchg
mov
je
mov
gs
dec
push
push
cwtl
insl
outsb
jbe
push
insb
xchg
test
je
cwtl
push
outsl
mov
push
xchg
movsb
push
pop
stos
mov
inc
jb
pushf
imul
add
add
test
fs
push
jp
leave
popf
data16
mov
inc
int
imul
stc
push
jb
or
pop
shrb
xor
dec
jo
adc
outsb
fucomip
cmp
pop
add
push
or
mov
mov
pop
je
push
sbb
lahf
adc
inc
movsl
lahf
or
mov
xchg
pop
je
add
add
sub
jb
in
and
pop
jno
or
insl
ficoms
jne
fists
push
rclb
je
aam
dec
sub
lret
and
push
arpl
sub
xor
jecxz
imul
fmuls
pxor
adc
jb
daa
out
xchg
ss
pop
sbb
xchg
pusha
das
cmp
add
add
xchg
dec
adc
pusha
wrmsr
mov
xchg
aaa
and
jno
add
imul
mov
pop
adcb
mov
cmp
test
and
fldt
pop
stos
out
cmp
dec
xor
jno,pt
add
andl
pop
mov
mov
mov
push
cmpsl
ret
sub
add
add
jne
xchg
cmpsb
addr16
addb
shll
inc
insb
push
addr16
sub
push
jnp
test
cmp
jg
sbb
dec
xor
cwtl
push
push
sbb
jne
jmp
jbe
jp
fisubl
fldt
outsl
fldenv
add
mov
add
stc
mov
imul
mov
jl
adc
pop
popa
and
push
imul
cltd
or
insl
addr16
imul
fcoml
dec
jns
mov
inc
fidivl
push
gs
insl
outsl
pop
lahf
or
ja
pushf
mov
jae
mov
push
jb
les
fwait
dec
jge
nop
les
xchg
or
mov
imul
sbb
sub
pop
sbb
and
sbb
adc
adc
push
ficomps
sbb
mov
push
jno
sbb
je
movl
arpl
jg
jb
mov
sub
in
cmp
pop
mov
mov
or
stos
dec
adc
fwait
sub
arpl
das
arpl
adc
sbb
push
dec
xchg
adc
xchg
frstor
inc
xchg
rcrl
imul
das
jl
daa
cmp
add
aaa
jno
ss
imul
mov
clc
xchg
xchg
and
cmpb
jno
inc
aam
andb
add
add
sbbb
pop
xor
mov
sbb
iret
jl
and
lcall
push
scas
sbb
jge
rcll
adcl
imul
ret
add
andl
lahf
push
movsw
popf
outsl
jle
push
jo
push
jle
sahf
imul
jns
jp
les
arpl
jg
jnp
xchg
push
cltd
test
jns
jp
insb
jmp
outsl
andb
xchg
pop
inc
jb
jge
sahf
jno
aaa
iret
dec
sub
subl
jno
imul
insl
imul
mov
inc
or
pushf
ja
stos
pushf
js
mov
dec
je
mov
add
out
push
insl
enter
aad
push
jae
sahf
arpl
xchg
push
inc
fldenv
jnp
daa
lods
or
mov
addr16
mov
dec
push
cli
dec
pop
inc
add
arpl
lahf
push
jb
les
int3
xchg
imul
outsl
push
les
pop
lahf
push
jb
les
lds
imul
add
add
or
jnp
adc
stc
sub
je
xor
dec
push
pop
sub
pop
pop
aam
arpl
jmp
insb
and
or
sub
adc
sub
sbb
sbb
add
inc
cmp
sbb
pop
enter
out
jno
jb
fnsave
jo
dec
or
filds
jb
popa
aaa
arpl
add
add
scas
pusha
scas
scas
or
mov
pop
aaa
arpl
jnp
sub
mov
xchg
sub
je
icebp
es
add
pop
jge
and
ret
xor
mov
sbb
int3
daa
cmp
or
cmp
cmc
adc
sbbb
jmp
push
pushf
adc
add
add
adcb
xchg
mov
mov
lea
mov
jns
adc
jns
and
sbb
push
mov
or
pop
aas
test
push
js
mov
imul
dec
pop
jmp
lahf
mov
sub
pusha
imul
dec
fldt
aas
iret
mov
inc
addr16
xchg
dec
enter
add
xchg
pop
enter
mov
cmpsb
arpl
jge
jmp
movsl
push
arpl
push
imul
inc
gs
pushf
bound
push
jp
int
pop
add
jl
lea
lea
ret
gs
stos
push
jb
data16
lahf
add
add
add
je
lret
insl
outsb
mov
jl
lret
insl
outsb
int3
xchg
push
dec
shlb
imul
repnz
jne
jp
jne
ja
pop
stos
push
insl
add
dec
imul
xchg
cmc
lea
xor
adcl
mov
sbb
lods
adc
lods
in
push
mov
adc
mov
pop
sbb
cs
jle
sbb
mov
sub
adc
mov
push
inc
jmp
add
cmp
dec
inc
das
push
pop
cmp
inc
push
sub
cs
daa
add
or
insl
repnz
arpl
std
mov
ljmp
fs
add
sub
add
ret
sub
add
add
es
xchg
sub
push
bound
mov
js
adc
and
add
jl
adc
lods
inc
push
and
add
outsl
xchg
adc
pop
push
or
pop
jg
or
adc
cmp
arpl
and
cmp
dec
push
les
inc
pusha
fwait
adc
jns
pop
loopne
push
ljmp
sbb
xchg
sahf
sbb
jns
paddusb
adc
mov
or
jns
or
fwait
jbe
pop
jno
imul
dec
or
inc
or
ret
push
pop
push
dec
inc
dec
inc
dec
andb
jae
xor
movsb
ja
and
xchg
mov
xor
push
scas
dec
or
push
dec
sbb
mov
dec
sti
lret
test
or
enter
into
andb
jno
mov
gs
fwait
jne
add
fwait
cmp
xor
add
ss
adcb
jl
dec
xor
ret
enter
push
jno
lret
gs
test
xchg
sahf
ja
pushf
xchg
mov
js
jl
insl
add
lahf
push
mov
flds
pop
outsl
mov
arpl
xchg
push
jl
push
xchg
and
fs
mov
cmp
ds
in
or
or
push
mov
add
add
stos
aaa
inc
lods
dec
adc
add
dec
arpl
mov
test
push
push
mov
sub
mov
sbb
cs
mov
je
test
arpl
sub
add
out
add
pop
and
cs
cmp
je
loopne
je
fisubrl
je
sti
cmp
in
aaa
inc
fiadds
xor
jo
xchg
fbstp
lds
test
mov
xchg
filds
mov
add
filds
mov
add
xor
mov
mov
xor
push
dec
push
adc
jp
adc
or
outsl
cmpsl
and
repnz
mov
pop
sub
rcrl
rcrl
cmp
rcrl
mov
pop
sub
rolb
add
add
addr16
sbb
mov
clc
jge
mov
mov
dec
push
fwait
ja
jmp
mov
cmpsb
lods
jns
je
jp
mov
jg
arpl
jp
push
and
cmp
xor
fs
adc
cmp
jp
inc
mov
cmp
out
jae
push
jecxz
or
fnstcw
adc
fnstenv
or
jne
cli
mov
mov
js
mov
jne
scas
mov
fs
jecxz
pop
push
jmp
ja
cmp
js
push
mull
sbb
popa
outsb
sbb
pusha
outsl
pop
xchg
or
gs
or
xor
xchg
or
and
xchg
or
xor
xchg
or
and
in
imul
add
add
ja
dec
out
add
in
add
js
cmp
dec
test
insb
add
in
js
nop
js
sar
cs
aam
insl
sub
sub
add
or
insb
ljmp
jno
adc
insb
repnz
cmp
loopne
std
fiadds
insl
mov
add
add
icebp
jae
fidivrs
popa
mov
arpl
rcrb
movsb
inc
sti
jae
pop
in
mov
in
insl
outsl
lods
icebp
outsl
js
loopne
pop
nop
insl
insl
nop
in
sub
cld
jae
fcompl
out
out
insb
ds
sub
pop
xchg
mov
std
inc
js
call
dec
jnp
out
ja
add
pop
into
std
bnd
loop
dec
cwtl
cmc
out
outsb
xchg
xchg
mov
icebp
pusha
sahf
loop
jno
into
mov
jne
cs
sub
jns
push
clc
lahf
sbb
imul
jmp
jb
xor
dec
inc
das
cmc
jb
or
mov
add
fildl
jecxz
ja
in
cs
push
ja
repz
jnp
or
add
add
data16
jnp
lret
push
scas
jnp
imul
je
imul
outsb
lea
push
movsb
pop
insl
pop
jge
inc
push
cltd
inc
js
nop
xor
xchg
popl
xchg
pusha
addr16
xor
je
das
xor
or
sbb
push
out
dec
out
inc
fs
jecxz
popa
adc
add
add
fs
iret
jmp
jl
mov
js
add
nop
inc
fs
hlt
inc
test
arpl
fisubrs
xchg
cld
push
je
mov
inc
add
js
inc
mov
inc
push
sub
push
jnp
mov
cmp
push
sarl
xor
movsb
and
hlt
test
xor
in
inc
xor
add
add
hlt
dec
outsb
push
loop
arpl
jbe
pop
loop
xor
loop
jb
sti
jbe
repz
dec
push
movsl
int
je
xchg
jno
mov
push
xor
lock
jae
and
aam
pop
mov
aam
inc
sub
jecxz
jmp
pushf
mov
jno
or
push
cmc
adc
add
icebp
pop
lret
adc
inc
mov
pop
in
test
or
fcmovnb
inc
insb
mov
dec
insb
stos
jmp
jno
dec
or
pop
mov
or
inc
out
in
push
sbb
mov
outsb
fwait
pop
aas
call
fildll
sub
aas
test
xchg
adc
data16
pop
xchg
filds
outsl
movsb
adc
mov
in
imul
out
inc
lods
ljmp
xchg
jb
out
jb
divl
xchg
repz
jno
mov
jns
out
stos
pop
jbe
mov
dec
rcrl
jns
add
xchg
filds
imul
mov
or
stos
or
scas
or
jbe
aad
test
or
nop
js
rorb
or
jne
sbb
movsb
or
popl
decb
xchg
or
jo
popf
inc
dec
pop
popl
imul
jae
jo
pop
mov
addr16
cmp
jo
dec
inc
push
gs
and
jp
inc
jecxz
jp
ret
cmc
jbe
in
insl
je
lret
imul
ret
mov
js
xchg
icebp
js
xchg
jbe
nop
ljmp
xchg
jbe
mov
insl
je
leave
imul
hlt
push
push
push
in
arpl
dec
imul
call
js
es
jbe
adc
adc
add
hlt
push
sbb
imul
add
add
call
sub
ja
mov
ja
mov
jmp
jb
frstor
pop
frstor
mov
call
dec
mov
out
pusha
fwait
or
xor
xchg
fildll
and
insb
mov
jae
jmp
insb
xor
ficomps
dec
int3
in
mov
fmull
pop
call
push
add
add
pop
sub
mov
in
popa
lock
sub
ret
daa
fstpt
aad
std
ret
dec
int
sar
rolb
dec
mov
dec
sub
les
rcll
out
jns
ljmp
dec
ljmp
add
pop
imul
jecxz
addr16
aas
gs
and
filds
add
add
add
push
ja
loope
sub
popa
xchg
out
jmp
mov
xlat
out
jmp
mov
outsl
mov
idivl
repz
les
imul
aas
insb
jnp
popl
dec
sbb
addr16
xor
inc
add
inc
fsubrs
cmp
ds
lds
cmp
add
add
push
adc
fists
mov
pusha
sbb
push
gs
jae
jmp
mov
imul
filds
lret
jb
int3
je
or
jae
gs
popl
mov
inc
or
push
js
xor
dec
cltd
ss
add
out
push
or
ja
cltd
mov
add
mov
ret
insl
je
jecxz
pop
mov
mull
mov
cwtl
es
call
hlt
jae
out
hlt
push
mov
hlt
jmp
repnz
insb
aad
fs
mulb
leave
repz
lret
and
rep
add
in
jae
and
gs
dec
insb
push
fsubrl
stc
loope
jb
add
add
in
imul
mov
jmp
sar
jo
data16
jno
jmp
pop
lahf
addr16
arpl
jmp
pop
jg
xlat
jo
cmp
insl
lcall
ds
jae
dec
cli
bound
lods
loopne
pop
sbb
sub
mov
bound
clc
pop
pop
cwtl
clc
jae
xchg
aad
mov
out
sbb
add
repnz
fldcw
cmpsl
test
data16
fdivl
shr
imul
stc
ljmp
in
js
mov
cmp
in
ja
out
mov
bnd
ja
sbb
das
add
imul
scas
dec
out
xchg
sub
dec
scas
sub
shrl
dec
shrb
frstor
adc
add
add
xor
cmp
or
inc
dec
clc
repz
or
aaa
pop
movsl
cmp
rol
or
mov
movsb
lock
repnz
cmp
dec
cmpsb
dec
fstl
stos
fistpl
push
xchg
es
mov
es
pop
cltd
cmp
sub
pop
das
push
jmp
mov
add
add
pop
sub
dec
pop
sbb
test
jmp
jmp
cmpsl
aaa
jecxz
popf
or
outsb
imul
popf
or
mov
ja
sti
mov
popf
or
nop
inc
dec
mov
mov
dec
add
adc
pop
call
inc
outsl
and
ja
in
icebp
pusha
add
rorb
add
push
inc
jmp
mov
push
add
ret
mov
fs
nop
push
dec
mov
pop
inc
mov
push
push
pop
repnz
out
cmp
inc
push
and
cmpsl
jecxz
inc
add
bound
pop
push
aad
insl
insb
nop
lods
insb
add
ja
mov
jbe
jne
imul
int3
out
mov
std
bound
add
add
and
call
rcl
jae
int3
aam
in
fbld
or
jbe
sbb
jno
stc
out
push
or
mov
pop
fnsave
adc
adc
or
imul
aad
test
icebp
fimuls
jmp
mov
mov
incb
ja
or
xchg
repnz
gs
jmp
sub
data16
iret
fsubrl
call
fidivl
cmc
jae
fdivp
fists
sarl
imul
and
imul
scas
mov
lods
insl
fbld
mov
sbb
pusha
push
out
stos
inc
loope
jb
jmp
jg
pop
loop
mov
jecxz
outsl
cld
and
mov
adc
xchg
adc
pop
data16
pop
imul
inc
add
sub
add
dec
jnp
mov
push
mov
insb
push
jmp
dec
aaa
arpl
popl
les
les
inc
enter
xchg
inc
je
mov
inc
imul
fcomps
and
cs
pop
jo
jae
lahf
pop
push
jo
in
xlat
push
daa
in
arpl
out
jae
adc
pusha
addr16
cmp
out
imul
js
fsubrs
sbb
mov
add
fildll
test
insl
outsl
xchg
mov
jne
pop
push
test
imul
mov
ja
pop
xchg
dec
push
cmc
mov
add
add
fildll
adc
insl
outsl
adc
jnp
cmpsl
out
hlt
inc
stc
ret
or
js
xchg
bnd
bound
js
stos
mov
ja
cmp
push
je
mov
and
js
xchg
mov
add
inc
and
xchg
call
push
cmp
aam
xor
stc
addr16
aam
repnz
add
faddp
ljmp
clc
lret
push
mov
test
gs
fisubl
clc
clc
dec
or
pop
rclb
call
sub
ljmp
or
dec
movsl
pop
std
sub
push
push
in
jg
shrl
jmp
jae
lcall
gs
pop
pop
lahf
fnstenv
xchg
sbb
filds
add
add
add
mov
cmp
push
imul
jno
add
inc
add
daa
outsl
adc
jo
fsubp
push
xlat
icebp
call
pop
rolb
mov
jae
call
loopne
xchg
in
mov
fidivs
data16
fsubrs
leave
mov
stos
lds
outsb
jae
mov
mov
pop
imul
inc
inc
fstps
add
add
pop
fstpt
sub
push
sub
imul
inc
fisubs
inc
jmp
insl
jl
nop
inc
jns
mov
outsb
or
bound
addr16
jns
outsb
jmp
addr16
xorl
iret
jae
jo
adc
cmpsl
arpl
cmp
dec
adcb
mov
aaa
aas
fs
push
cmpl
roll
xor
xchg
sub
pop
inc
add
mov
stos
icebp
jp
jae
inc
cs
mov
pop
jl
pop
outsl
or
popa
xchg
push
inc
sub
push
arpl
xchg
push
popa
dec
lret
hlt
jmp
or
jne
or
jne
and
pop
out
push
push
loopne
popa
push
les
daa
mov
inc
push
cmc
filds
les
cmpsl
mov
inc
inc
cmc
filds
les
addr16
add
lea
dec
insl
mov
je
mov
insb
aas
stos
ljmp
lcall
sub
scas
pop
and
mov
out
shl
in
jno
out
shll
pop
fisubl
xlat
shll
mov
loop
sub
aam
jmp
xor
pusha
mov
daa
int
movsl
sbb
insb
mov
and
mov
sbb
bound
aam
jle
pop
imull
pop
enter
loopne
dec
push
and
xor
loop
add
add
inc
imulb
jo
fnsave
push
adc
cmp
and
push
gs
pop
cmp
loop
xchg
and
pop
xor
fstpl
xor
push
rcr
pusha
rcr
ss
jmp
cmp
loope
dec
shl
jo
fisubrl
xchg
loopne
inc
mov
ror
dec
xchg
shlb
gs
lahf
aaa
or
add
add
fs
in
inc
addr16
mov
pop
out
pusha
addr16
rcl
dec
icebp
aas
jnp
faddl
inc
out
or
jecxz
pop
or
pushf
inc
addr16
insb
aas
pop
mov
imul
rorb
outsb
aaa
fs
xor
les
or
inc
cmp
into
data16
imul
add
add
js
push
inc
jl
pop
inc
js
xor
or
cmc
in
fs
add
ja
adc
push
jo
out
jbe
dec
hlt
push
push
les
js
jbe
js
movsb
mov
js
cmpsb
out
jo
mov
jae
in
jbe
mov
arpl
je
mov
arpl
je
mov
add
xlat
inc
popa
pop
push
push
imul
adc
inc
mov
push
or
dec
push
push
fildll
fsts
mov
or
pop
in
lods
dec
pop
mov
adc
in
pop
nop
stc
bound
sub
jno
fnsave
xchg
jno
fisubs
shll
pop
clc
insb
test
cmpsb
aad
sub
mov
in
dec
mov
clc
dec
xchg
cli
pop
scas
fcom
fimuls
lds
clc
iret
pop
cmc
xlat
sub
call
or
push
shll
pop
fnstsw
divb
or
push
lret
xchg
scas
xor
icebp
mov
pop
scas
xor
loopne
je
in
aaa
push
push
inc
repnz
pop
inc
flds
add
add
sub
shlb
fdivs
dec
loopne
aaa
xor
ret
pop
adc
repz
mov
add
pop
cmp
jnp
add
sbb
icebp
add
pop
and
mov
cmp
add
pop
mov
loopne
je
in
aaa
ffreep
out
fcom
dec
push
or
xor
mull
mov
xor
jp
cmp
inc
jmp
scas
popa
jns
std
int3
aas
pushf
rcrb
std
xor
daa
popa
pop
cmp
outsb
pop
cmp
fisubrs
and
pusha
pop
sbb
xor
jp
lret
inc
or
leave
lret
sti
xchg
pop
cs
test
sbb
jl
pop
pop
pop
mov
jnp
aas
movsb
dec
pop
sub
inc
inc
jl
gs
pop
dec
and
lds
cli
lds
and
ja
popa
push
lds
imul
ss
add
aad
push
jae
mov
or
in
dec
push
out
pusha
and
loope
xlat
xchg
push
dec
mov
lds
jp
push
dec
test
push
xchg
lds
lcall
add
push
push
out
jae
mov
inc
dec
xor
adc
push
les
mov
mulb
cmc
les
popf
fcompl
push
in
mov
and
pop
fcompl
jo
sbb
arpl
in
sahf
sbb
dec
jne
imull
shll
hlt
fidivl
outsl
cli
bound
lret
pusha
outsl
push
iret
insl
pusha
popf
xlat
pop
bound
ds
iret
insl
inc
mov
sub
jecxz
pop
mov
rcrl
cwtl
enter
fisubrs
loop
fsubrs
ret
pop
idivl
into
out
mov
xchg
int3
jae
ret
aas
push
shl
xor
aad
push
and
aas
test
pushf
xchg
mov
mov
sahf
in
das
stos
shlb
jno
jl
test
push
popa
mov
outsl
cmp
mov
rorb
outsb
cmp
outsb
inc
xor
cmp
adc
inc
inc
call
cs
adc
xor
add
out
dec
adc
cs
sub
das
or
cmp
or
jns
jne
sub
pop
cmp
mov
cmp
xor
add
sub
insl
mov
inc
inc
addr16
xor
inc
xorb
gs
test
aas
jns
frstor
aam
jp
fiadds
mov
insb
pop
inc
fidivs
inc
flds
dec
cmpsl
ss
or
inc
push
movl
sbb
inc
push
add
fistpll
xchg
lds
xchg
lds
jp
jbe
push
xlat
insl
arpl
ja
dec
loopne
dec
adc
imul
mov
outsl
clc
lds
adc
jbe
repnz
adc
pop
add
shlb
and
bound
insl
fs
js
or
arpl
mov
insl
je
mov
jb
mov
arpl
jo
gs
imul
add
add
jecxz
jae
in
arpl
cltd
and
jecxz
in
lcall
loope
cli
pop
repz
pop
into
fisubl
mov
fsubl
in
jo
add
xor
and
sub
sbb
imul
sbb
fs
xor
and
xor
add
add
test
aas
push
iret
insl
xor
popa
xor
test
fbstp
xchg
sbb
das
xchg
aad
pop
xchg
mov
push
xchg
jno
lret
xchg
jnp
ret
xchg
jmp
mov
xchg
sarl
xchg
cli
mov
xchg
xchg
lods
rorb
in
jnp
pop
call
imul
pop
xchg
jne
push
xchg
stc
in
lret
xchg
in
ljmp
pop
out
mov
push
aad
xchg
mov
xlat
fwait
xchg
insl
fcoms
xchg
mov
adcl
roll
or
test
inc
mov
push
or
push
or
adc
notb
repz
or
jmp
or
or
or
rcll
leave
push
or
ret
cmp
out
push
or
push
or
notl
fsubr
push
or
sub
dec
push
or
dec
push
or
push
push
or
dec
push
or
push
or
dec
push
or
je
dec
add
dec
dec
add
dec
dec
add
dec
add
dec
add
add
add
push
dec
add
dec
dec
add
add
push
dec
add
push
dec
add
xchg
mov
mov
test
jle
add
jle
add
dec
add
dec
add
orl
orl
xorl
dec
add
xor
add
dec
add
cmp
mov
push
mov
add
mov
inc
mov
fs
mov
inc
mov
inc
mov
or
mov
or
mov
or
mov
data16
ret
fcompl
aam
xlat
addr16
mov
sub
and
dec
lods
sub
bound
fdivl
sbb
push
movsb
adc
imul
pusha
jns
out
add
add
mov
pusha
push
lods
add
xchg
xchg
stc
or
cs
and
mov
fildll
xor
or
test
and
je
or
cmp
in
sbb
mov
and
je
jmp
xor
out
hlt
aaa
xchg
je
and
jmp
insb
je
stos
aaa
lret
out
xchg
fbstp
xchg
filds
mov
add
filds
mov
jmp
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
in
or
in
or
cmc
xchg
or
cmc
xchg
or
in
or
in
or
mov
or
mov
or
movsl
xchg
or
movsl
xchg
or
mov
or
mov
or
movsl
xchg
or
movsl
xchg
or
jne
or
jne
or
gs
or
gs
or
jne
or
jne
or
gs
or
gs
or
xor
xchg
or
and
xchg
or
xor
xchg
or
and
xchg
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
add
push
aaa
ss
scas
mov
scas
fbld
aaa
pop
add
add
add
mov
filds
dec
xchg
filds
insb
xchg
filds
jl
filds
test
add
mov
ffreep
jae
fisubs
mov
or
fiadds
mov
add
xchg
lahf
add
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
lahf
insb
sub
call
daa
rcr
xchg
pop
mov
push
add
mov
and
outsb
cs
test
imul
cmc
xchg
jo
int
mov
lahf
mov
call
xchg
nop
push
fiadds
pushf
adc
pop
mov
fisttps
or
dec
nop
push
xrelease
add
mov
daa
daa
jne
das
mov
and
xor
adc
cmc
mov
or
in
cmc
jmp
mov
cmc
add
mov
or
in
cmc
pushl
mov
add
mov
cmc
add
mov
cmc
add
nop
or
jno
hlt
pushl
hlt
add
hlt
add
cmc
pushl
cmc
pushl
cmc
add
cmc
add
hlt
add
cwtl
cmc
decl
or
lea
or
mov
hlt
adc
or
add
or
mov
hlt
decb
or
lea
or
mov
hlt
mov
or
lea
or
mov
hlt
decb
test
or
mov
or
lea
hlt
push
xchg
dec
xchg
jmp
inc
mov
xor
add
fdivrp
sbb
jecxz
or
orl
cmpl
jl
mov
add
orl
sbbl
add
filds
jl
incl
mov
sbbl
orl
add
add
add
or
shld
jmp
mov
jmp
shld
or
xchg
or
shld
leave
setne
jmp
shld
leave
movsb
mov
movsb
or
setne
jmp
setne
jmp
setne
or
movsl
mov
or
add
nop
xchg
or
setne
jmp
sete
jmp
movsb
or
push
xchg
or
inc
adc
or
xor
xchg
or
and
adc
add
nop
sbb
cmc
adc
add
mov
add
mov
or
xchg
or
fstl
or
xchg
or
in
mov
add
xchg
or
lods
xchg
or
lods
xchg
or
mov
or
popf
mov
or
xchg
or
jge
or
jne
or
mov
or
xchg
lods
or
mov
or
test
or
mov
or
test
or
mov
or
xchg
lds
add
or
mov
or
test
or
mov
or
mov
or
test
or
mov
or
mov
or
xchg
lds
add
or
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
pusha
and
pop
add
pusha
add
loopne
or
loopne
mov
and
fbld
or
pusha
and
xchg
pusha
add
xchg
or
xchg
or
adc
call
xchg
or
scas
xchg
or
adc
call
nop
xchg
or
adc
call
push
adc
call
jo
or
adc
jmp
push
adc
push
nop
adc
call
scas
adc
push
nop
xchg
or
xchg
or
xchg
or
outsl
adc
imul
add
adc
push
mov
or
movsb
jno
add
or
hlt
jno
add
xchg
or
in
mov
in
or
je
or
jne
or
fs
mov
fs
add
xchg
mov
and
or
movsl
jno
add
jno
add
xchg
mov
cmc
jo
add
mov
in
or
in
add
cmc
nop
add
cmc
nop
add
in
or
mov
or
nop
add
movsl
xchg
add
stos
or
mov
or
dec
stos
or
dec
stos
or
into
mov
or
int3
mov
or
int3
mov
or
mov
or
into
mov
or
mov
or
int3
mov
add
mov
or
mov
or
dec
mov
or
mov
or
mov
or
dec
mov
or
dec
xchg
filds
test
mov
filds
xchg
push
filds
test
filds
mov
add
filds
xchg
xchg
filds
mov
add
add
add
filds
mov
add
filds
mov
filds
test
add
filds
mov
mov
dec
je
ret
jecxz
into
ret
fwait
je
add
jb
jmp
iret
mov
stc
iret
jb
jmp
xchg
sub
push
or
dec
mov
jmp
dec
mov
jmp
push
or
dec
mov
jmp
dec
jb
adc
xchg
or
push
sub
push
sub
xchg
or
dec
jb
jmp
dec
mov
jmp
iret
jno
jmp
iret
mov
stc
xchg
or
push
sub
in
xor
mov
xor
mov
dec
add
aad
pushl
xchg
dec
add
xchg
or
mov
hlt
pushl
aad
and
xor
gs
dec
and
xor
jne
xor
jne
or
xor
xchg
or
xor
xchg
dec
and
aad
jmp
aad
pop
and
aad
and
xchg
or
in
dec
add
aam
pop
in
sub
mov
lock
mov
lock
mov
lock
nop
mov
or
mov
or
mov
or
nop
mov
lock
mov
lock
mov
lock
nop
mov
or
nop
mov
lock
mov
lock
mov
or
nop
xchg
xchg
xchg
filds
mov
filds
lods
xchg
loope
rcll
loope
insb
cwtl
loope
insb
cwtl
loope
mov
add
filds
insb
xchg
stos
cwtl
loope
subl
sti
xchg
cwtl
loope
imul
sti
jnp
filds
lods
cwtl
stos
xchg
filds
mov
sti
xchg
cwtl
filds
mov
add
sti
adc
or
pop
scas
or
imull
or
fildll
or
xchg
sbb
xchg
or
xchg
sbb
nop
cwtl
or
cwtl
sbb
mov
xchg
or
jg
sbb
js
or
jg
hlt
sub
cwtl
sbb
mov
sub
hlt
jmp
mov
sbb
aas
xchg
sbb
xchg
or
xchg
or
in
or
xor
mov
or
in
or
xor
add
add
xchg
or
in
or
in
hlt
push
xchg
or
cmc
xchg
or
movsl
mov
or
mov
hlt
pcmpeqw
or
movsl
xchg
or
mov
or
jne
or
gs
or
movsl
test
pcmpeqw
or
movsl
cwtl
or
movsl
cwtl
or
xor
mov
hlt
xchg
or
cmc
mov
clc
add
add
add
clc
decl
sti
clc
incl
sti
or
mov
clc
add
jecxz
or
mov
jae
lret
push
mov
ret
inc
mov
mov
mov
jne
mov
push
mov
xchg
mov
or
mov
jae
jnp
mov
jae
mov
imul
add
add
push
bound
incl
or
mov
push
jge
lods
rolb
sbb
add
bound
rep
fiadds
mov
jnp
stos
outsb
adc
ljmp
xchg
filds
mov
subl
xchg
filds
mov
add
stos
fiadds
mov
add
filds
mov
orl
pop
in
stos
hlt
rorl
hlt
or
or
stos
hlt
lahf
or
hlt
movsl
or
hlt
rorl
hlt
mov
or
hlt
dec
or
hlt
push
or
hlt
and
hlt
xor
hlt
adc
inc
stos
hlt
out
stos
hlt
iret
xor
hlt
sub
hlt
cmp
add
hlt
inc
adc
hlt
addr16
hlt
mov
hlt
jne
stos
hlt
stos
adc
hlt
mov
add
hlt
cltd
add
hlt
add
sbb
cmc
push
sbb
push
sbb
jmp
sbb
decl
cmc
ljmp
sbb
pushl
add
add
sbb
pushl
sbb
inc
sbb
dec
sbb
push
sbb
jmp
sbb
jmp
sbb
call
sbb
lcall
cmc
out
sbb
ljmp
sbb
call
cmc
jmp
or
insl
push
cmc
pushl
or
push
push
cmc
decl
cmp
inc
fwait
cmp
xor
cmp
sub
cmp
add
decl
mov
cmp
mov
cmp
test
jmp
mov
cmp
out
cmp
or
mov
sub
ljmp
and
test
xchg
adc
adcl
jnp
cmp
push
test
imul
mov
mov
xchg
stc
mov
aam
cmp
mov
and
ljmp
test
test
test
test
cmpsl
mov
test
cmpsl
lret
cmpsl
xchg
test
cmpsl
xchg
test
cmpsl
push
test
cmpsl
cmp
mov
sbb
mov
cmpsl
in
xchg
cmpsl
lock
cmpsl
pop
sbb
adc
hlt
and
hlt
adc
or
hlt
stos
or
hlt
lea
cmpsl
hlt
jns
cmpsl
hlt
jmp
adc
hlt
sbb
cmpsl
hlt
stos
or
hlt
ret
or
hlt
xchg
cmpsl
hlt
sub
add
add
cmpsl
hlt
xor
cmpsl
hlt
sbb
cmpsl
hlt
add
add
cmpsl
hlt
ret
adc
cmpsl
hlt
cmp
cmpsl
hlt
aaa
or
or
decl
cmc
incl
pmaddwd
decl
cmc
ljmp
pmaddwd
dec
pmaddwd
or
cmc
jmp
or
sub
xchg
or
inc
pmaddwd
cmc
push
cmc
pushl
cmc
jmp
push
cmc
incl
cmc
incl
add
add
or
cmc
incl
push
cmc
jge
cmc
ljmp
xchg
or
xchg
or
or
mov
cmc
jmp
sbb
jmp
sbb
push
sbb
jmp
cmc
lcall
cmc
decl
test
cmpl
pushl
cmp
arpl
lcall
cmp
dec
jmp
incl
cmp
sbb
ljmp
mov
cmp
movsl
cmp
mov
or
jle
stos
jae
in
mov
aas
mov
mov
imul
and
rcrl
movsl
bound
mov
bound
pop
mov
das
dec
ret
mov
add
xor
fidivl
and
and
add
in
das
filds
inc
xchg
adc
mov
xchg
sub
mov
fisubs
mov
and
ret
roll
push
xor
fldl
dec
cmp
ret
xchg
stos
sub
push
filds
pop
xchg
lods
mov
repz
data16
and
push
mov
cmp
mov
dec
push
cmp
pop
inc
es
push
jp
das
daa
imul
das
imul
js
repnz
inc
jmp
out
xor
repz
inc
pop
dec
cmp
lds
mov
sub
imul
cmp
sub
or
add
add
dec
pop
lret
sbb
mov
imul
ss
add
cli
ja
movsl
xchg
mov
cli
stc
js
or
fs
inc
in
inc
movsl
xchg
cmp
mov
imul
repz
ljmp
test
repz
imul
fnstcw
aaa
cmc
bound
arpl
add
add
lcall
inc
call
pusha
je
xlat
jge
enter
sub
js
aam
js
daa
call
sbb
add
js
mov
mov
push
mov
mov
push
cmp
lods
sub
mov
pop
sbb
movsb
insb
add
insb
out
push
mov
data16
incl
add
add
or
nop
mov
bound
pop
mov
jo
fnstsw
scas
mov
insl
mov
mov
data16
lret
incl
stos
or
pusha
popa
inc
jne
xchg
dec
jno
cmpsl
scas
dec
sub
add
jne
dec
xor
add
aaa
jae
xor
jl
cs
inc
stos
das
xor
mov
pop
shr
and
stos
loopne
sub
stos
xchg
or
leave
cmp
enter
test
dec
add
add
inc
or
mov
xchg
cs
lahf
inc
fsubrs
dec
sub
mov
adcb
inc
xchg
scas
sahf
pop
inc
or
cli
dec
jp
sub
and
cmc
cmp
sbb
lcall
imul
xor
push
fisubl
inc
jmp
and
pop
pop
daa
sub
adc
dec
cs
cmp
imul
dec
lahf
hlt
and
and
imul
das
outsb
add
xor
jmp
or
pop
imul
add
add
and
and
jl
es
arpl
shl
mov
jmp
hlt
mov
out
insl
inc
sbb
imul
insb
popa
daa
xchg
addl
cmp
pop
inc
bound
scas
add
cwtl
cmp
mov
js
lret
insb
rcr
insl
insb
adc
insl
nop
xlat
hlt
incl
add
add
cwtl
inc
inc
cwtl
mull
in
outsb
xchg
xlat
hlt
mov
in
jb
repz
fisubl
pop
iret
lods
bound
mov
imul
mov
pusha
jmp
jno
adc
imul
or
sub
sbb
inc
rorl
popa
in
push
or
mov
jae
outsb
mov
inc
ficoms
push
loopne
cmpsl
pop
loope
or
mov
inc
mov
jbe
data16
or
push
push
lods
lcall
test
xchg
mov
movsb
jg
test
jl
shlb
xchg
scas
cmpsl
outsb
dec
mov
pop
sub
add
xor
daa
xchg
mov
and
outsl
mov
jae,pn
pop
xchg
jl
and
repnz
pushf
scas
add
xor
jecxz
pop
leave
out
sbb
cltd
add
xor
mov
scas
push
pop
ret
cmp
shll
or
repz
sub
inc
les
or
xor
jnp
aam
outsl
movsb
daa
pop
or
inc
imul
and
inc
test
pop
or
popl
xchg
ss
out
das
jnp
loop
inc
jmp
faddl
popa
cmp
push
sub
lret
adc
inc
cmp
sub
push
and
jns
push
fwait
hlt
scas
mov
push
add
jnp
dec
cmp
pop
or
cs
dec
add
add
sbb
ja
pop
rcll
mov
hlt
call
cli
jp
in
aaa
xor
xchg
fldl
push
out
imul
js
and
ja
sbb
pusha
xor
mov
insb
adc
js
daa
icebp
imul
jbe
in
outsl
add
imul
pop
jb
iret
hlt
lcall
add
add
jmp
cs
hlt
pusha
add
push
je
sarl
je
pushl
lods
or
popf
fiaddl
popf
mov
mov
fsubrl
mov
push
cmpb
ljmp
mov
push
mov
inc
pop
stos
or
lss
adc
arpl
decl
mov
bound
add
sub
lahf
jae
dec
mov
pop
loope
or
mov
pusha
notl
lcall
or
jecxz
stos
bound
xchg
add
mov
xchg
and
cltd
and
and
add
xchg
shrl
dec
xchg
shrb
je
scas
mov
cwtl
incl
cmp
aas
xor
add
mov
das
sub
mov
cs
mov
cs
mov
fistl
test
and
and
repnz
dec
mov
jns
add
popw
cs
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
xchg
or
jne
or
gs
or
gs
or
xor
xchg
or
and
xchg
or
xor
xchg
or
and
xchg
or
cmc
xchg
or
cmc
xchg
or
in
or
in
or
cmc
xchg
or
cmc
xchg
or
in
or
in
or
mov
or
mov
or
movsl
xchg
or
pop
or
push
pop
push
add
pop
mov
ret
cmp
in
loop
cmp
call
pop
add
cli
js
inc
xchg
or
pop
pop
sub
fmuls
or
xor
cmp
int3
in
cmp
inc
xchg
or
pop
dec
call
push
enter
pop
push
in
mov
dec
test
inc
clc
pop
inc
lock
or
or
pop
dec
lock
or
or
pop
push
lock
dec
xchg
or
lret
dec
cld
add
pop
hlt
psrld
mov
mov
inc
hlt
mov
adc
or
pop
xchg
or
or
out
pusha
lods
mov
sarl
or
add
mov
test
in
pop
aas
in
dec
cwtl
addb
dec
or
xchg
add
add
add
popa
enter
leave
int3
fadd
ret
int3
rol
ret
int3
enter
pop
or
cmpl
hlt
mov
addb
loopne
mov
hlt
add
or
xchg
dec
add
loop
push
arpl
cmpsl
clc
fcmovbe
or
decb
push
cmp
addl
xchg
or
daa
sahf
jg
adc
movl
adcl
lea
ljmp
dec
xchg
jg
enter
mov
fs
push
pusha
pusha
pusha
pop
in
fmuls
dec
add
pop
dec
xor
loope
ds
pusha
pusha
pusha
add
add
mov
pop
jmp
icebp
int3
pop
pusha
pusha
pusha
pop
in
clc
fwait
pop
add
pusha
fmull
mov
mov
pop
inc
mov
dec
clc
cmp
scas
dec
xchg
mov
xchg
sbb
sbb
jmp
add
call
int3
cmp
in
push
fdiv
add
dec
cld
andnps
mov
nop
orb
inc
adc
mov
push
test
pop
mov
mov
mov
pop
in
or
mov
jmp
enter
int3
fsubs
int3
shlb
int3
enter
pop
sbb
or
push
loopne
inc
mov
int3
fsubs
int3
shlb
int3
enter
pop
sbb
jg
xchg
adc
mov
fstps
or
adcb
dec
or
push
add
pop
xchg
or
mov
mov
nop
mov
lea
inc
cld
pop
out
cmp
mov
pop
xlat
hlt
mov
test
adc
cli
adcb
inc
add
add
mov
inc
or
xchg
adcl
filds
test
sbb
dec
movsb
jg
test
jg
movsb
sbb
push
test
or
rcrl
mov
int3
fstps
in
js
jg
xchg
sbb
in
mov
sbb
loopne
add
or
mov
stc
add
xchg
jg
test
call
js
xchg
add
xchg
pop
add
loop
mov
pop
push
and
adc
adc
je
cmp
adcb
sbb
lods
sbb
fcompl
mov
and
pop
jmp
pop
inc
jl
dec
hlt
pop
loope
mov
pushf
pop
adc
mov
add
jno
mov
add
fnstenv
mov
or
rorl
push
add
das
add
jg
add
add
or
adc
add
in
dec
enter
rorl
inc
sarb
mov
addb
add
add
loope
lea
push
push
pop
fxtract
push
je
idiv
adcl
or
addb
leave
mov
hlt
pop
loopne
orl
dec
xor
mov
je
ret
pop
loopne
lahf
repz
sbb
pop
dec
popa
sbb
cmp
pusha
lock
or
mov
sbb
je
pop
inc
mov
dec
clc
cmp
xor
rorl
dec
cld
pop
loopne
push
pop
call
add
out
mov
pusha
sbb
mov
dec
xchg
pusha
mov
sbb
push
push
adcl
pusha
sbb
cmpl
test
mov
sarl
aam
mov
sbb
ds
faddl
sbb
pop
xlat
cld
mov
dec
add
pop
clc
add
xchg
or
adc
psllw
popa
cwtl
aaa
shl
jg
les
pop
sbb
sbb
pop
filds
push
mov
push
movsb
sbb
add
xchg
or
ja
jg
test
sbb
je
dec
cld
loope
aaa
shlb
mov
push
and
push
add
add
pop
pop
pop
in
rcrl
mov
pushf
filds
cwtl
jmp
pop
vmulps
in
clc
mov
cwtl
add
rorb
xchg
xchg
pop
cmp
loop
mov
add
push
mov
dec
or
call
mov
push
cmp
add
add
aad
push
fs
hlt
pushl
int
adc
cld
or
mov
push
mov
adc
je
inc
fsub
jg
xchg
in
push
sub
loopne
sbb
lret
inc
add
mov
mov
lea
call
cmp
js
pop
shl
addl
dec
pop
inc
call
prefetch
add
enter
push
inc
adc
fld1
mov
mov
idiv
enter
lcall
je
inc
or
loopne
mov
jo
inc
cwtl
in
adc
push
cltd
jg
and
lret
fsub
jmp
sbb
ret
cld
adc
sbb
dec
xchg
test
push
in
out
jmp
int
adc
sarb
xchg
jge
pop
cwtl
and
dec
xchg
pop
jmp
mov
mov
adc
dec
cld
or
mov
inc
insb
sbb
pop
lock
mov
push
push
cld
or
mov
add
clc
mov
xrstors
int
or
decb
mov
or
pop
iret
hlt
push
cmpsb
xchg
repz
sbb
sbb
dec
call
mov
or
sbb
pop
xlat
call
mov
pop
mov
jecxz
push
mov
xchg
jg
lods
adc
movsb
mov
inc
lods
sbb
fmuls
xchg
orl
mov
inc
xor
add
add
aad
inc
mov
push
inc
fcmovnbe
or
mov
push
mov
js
call
sqrtps
adc
in
mov
adc
xor
aad
add
test
push
pop
lcall
jns
jnp
mov
loopne
roll
adc
aad
push
mov
out
jmp
add
add
aam
mov
in
adc
hlt
orl
inc
inc
sbb
adc
aad
push
pop
shr
mov
xchg
inc
sub
sbb
sub
aad
push
and
cmc
ljmp
adc
or
mov
inc
mov
cmpsl
pop
adc
lea
pop
push
cli
or
mov
repz
mov
xchg
add
movb
push
vmulps
in
push
pushf
jg
mov
push
sbb
push
loop
jg
lods
std
dec
add
test
ja
xchg
jg
test
dec
add
out
pop
dec
pop
sbb
push
mov
pop
inc
mov
xor
xchg
pop
call
sqrtps
mov
mov
add
mov
add
dec
xchg
push
lcall
and
push
vmulps
in
clc
mov
inc
in
or
mov
fcoml
add
iret
cld
add
or
mov
add
and
dec
xchg
loopne
test
dec
add
add
inc
mov
mov
jnp
mov
add
mov
ss
rorl
add
std
dec
add
cmp
int
or
cli
or
cltd
xchg
jnp
mov
and
or
adc
mov
dec
call
dec
jl
dec
movsb
sbb
sbb
rorl
push
mov
xchg
cmpsl
cmp
rorl
xchg
int3
jnp
mov
pop
inc
mov
pop
add
xchg
jg
movsb
or
mov
test
ja
xchg
repz
out
call
inc
ja
xchg
pop
call
mulps
dec
cld
in
aad
test
adc
cmpsl
xor
or
mov
pop
call
mulps
dec
lods
divps
ja
clc
jae
cmovle
cmp
inc
fdivrl
orl
int
jg
mov
xor
pop
inc
push
or
shl
push
xor
out
incl
int
pop
jmp
or
or
hlt
add
pusha
addb
inc
loopne
xchg
xor
dec
xchg
orl
jl
add
lock
adcl
fprem
jae
clts
xor
or
inc
jl
adc
or
f2xm1
mov
clc
or
xchg
jg
mov
out
xor
xchg
pop
inc
push
or
jmp
or
and
rorl
mov
jns
jnp
mov
rorl
add
add
insb
add
adc
dec
add
pop
sti
sti
orl
and
mulps
inc
mov
inc
mov
dec
and
insb
jg
stos
addl
rolb
push
ret
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
add
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
add
or
mov
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
mov
mov
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
jmp
mov
pop
pop
ret
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
mov
lea
mov
mov
mov
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
cmpl
je
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
mov
movl
movl
movl
mov
mov
movl
movl
mov
mov
lea
push
push
push
push
push
call
test
jne
push
call
xor
jmp
lea
push
push
push
mov
push
push
call
test
je
push
call
xor
jmp
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
push
mov
sub
mov
pop
add
mov
movl
mov
add
ret
xor
mov
pop
ret
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jge
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
add
mov
mov
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
pop
ret
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
movl
mov
add
mov
movl
mov
add
mov
movl
movl
movl
mov
mov
mov
mov
movl
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
push
mov
sub
movl
movl
movl
mov
xor
mov
movl
movl
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
shr
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
mov
push
call
add
sar
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
