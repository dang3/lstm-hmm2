push
mov
sub
push
push
push
mov
mov
xor
mov
sub
movzbl
cmp
jne
mov
mov
jmp
mov
imul
movzwl
mov
movzwl
cmp
jge
mov
mov
jmp
mov
shl
mov
cmp
jle
mov
jmp
mov
movzbl
add
sub
mov
xor
mov
movzbl
sub
movzbl
sub
movzbl
cmp
je
mov
mov
jmp
movzbl
and
sub
mov
xor
mov
mov
imul
mov
sub
mov
mov
movzbl
sub
add
mov
mov
mov
mov
shr
mov
cmpb
jle
mov
jmp
mov
movzwl
xor
sub
mov
mov
mov
mov
movzbl
sub
add
cmp
je
movw
movzwl
shr
mov
mov
mov
movzwl
shl
mov
cmpw
jle
mov
mov
jmp
mov
movzwl
and
push
movzwl
movzwl
sub
add
push
mov
movzwl
add
add
push
call
mov
mov
test
je
mov
sub
push
call
mov
movzwl
imul
mov
movzbl
mov
mov
mov
mov
xor
div
mov
mov
test
je
movzwl
mov
jmp
mov
movzwl
sub
add
mov
add
mov
mov
xor
and
mov
movzwl
movzwl
add
sub
mov
add
mov
mov
movzwl
imul
mov
mov
test
je
mov
mov
jmp
mov
movzwl
or
add
mov
sub
mov
mov
movzwl
sub
mov
jmp
movzbl
shl
movzwl
movzbl
add
sub
mov
xor
mov
mov
sub
movzwl
mov
mov
mov
mov
mov
xor
div
mov
mov
pop
pop
pop
mov
pop
ret
mov
pushl
call
push
mov
sub
push
push
push
mov
movzwl
mov
xor
movzbl
mov
sub
movzwl
cmp
jge
mov
jmp
mov
or
add
push
mov
add
add
push
mov
imul
sub
push
call
movzwl
mov
test
je
mov
or
push
call
mov
shr
movzwl
cmp
je
mov
mov
jmp
mov
add
add
movzwl
mov
add
mov
mov
shl
mov
mov
xor
imul
mov
cmpl
je
mov
mov
jmp
cmp
jne
pushl
push
pushl
push
call
movzwl
mov
sub
movzbl
cmpl
jge
mov
mov
jmp
mov
mov
mov
or
mov
add
mov
mov
xor
divl
mov
cmpl
jle
mov
mov
jmp
mov
movzwl
cmp
jne
mov
mov
jmp
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
cmp
je
mov
jmp
mov
shl
movzbl
mov
movzbl
mov
sub
sub
mov
xor
mov
mov
imul
mov
sub
movzbl
cmp
jne
mov
mov
jmp
mov
and
mov
mov
mov
mov
movzbl
mov
sub
mov
mov
sub
mov
mov
and
sub
mov
mov
sub
add
cmp
je
mov
mov
mov
add
add
mov
mov
mov
cmpb
jne
movzbl
mov
jmp
mov
shr
mov
cmpl
jle
movzbl
mov
jmp
mov
movzbl
xor
add
cmp
jge
mov
mov
mov
shr
mov
cmpl
jge
mov
jmp
mov
shr
mov
mov
test
je
mov
mov
jmp
movzbl
mov
movzbl
movzwl
and
mov
movzbl
mov
mov
movzwl
add
mov
mov
add
mov
movzbl
mov
cmpb
jge
movzbl
mov
jmp
movzbl
add
add
mov
add
mov
movzbl
add
mov
movzbl
and
add
mov
sub
mov
movzwl
shr
mov
cmpb
jne
movzwl
mov
jmp
jmp
movl
mov
shr
mov
cmpl
je
mov
jmp
mov
or
mov
imul
mov
mov
and
sub
mov
movzbl
shl
mov
mov
imul
mov
cmpl
jne
mov
mov
jmp
mov
imul
sub
mov
movzbl
shl
mov
mov
mov
mov
add
movzwl
imul
sub
sub
mov
mov
mov
cmpl
je
movzwl
jmp
movzwl
xor
sub
mov
movzbl
shl
mov
mov
xor
sub
mov
mov
add
mov
mov
and
mov
sub
mov
mov
movzwl
imul
add
mov
movzbl
mov
add
mov
mov
xor
divl
mov
cmpl
jne
mov
mov
jmp
mov
movzwl
or
sub
mov
sub
mov
mov
or
add
mov
cmpl
jle
mov
mov
jmp
mov
imul
sub
mov
movzwl
xor
xor
mov
movzwl
sub
sub
mov
mov
cmp
jne
movb
mov
mov
cmpb
je
movzwl
mov
jmp
mov
movzwl
sub
mov
cmpb
jle
movzwl
mov
jmp
movzbl
add
sub
mov
mov
cmp
jne
movl
mov
or
mov
movzbl
shl
mov
cmpb
jne
mov
mov
jmp
movl
mov
mov
movzwl
shr
mov
cmpb
jne
movzbl
mov
jmp
mov
xor
divl
mov
movzwl
xor
sub
push
movzwl
xor
sub
push
mov
imul
sub
push
call
mov
mov
test
je
mov
and
push
movzwl
add
push
mov
imul
mov
sub
push
movzwl
or
push
call
mov
movzwl
add
add
cmp
je
movw
mov
mov
mov
shl
mov
cmpb
jge
movzwl
mov
jmp
movzbl
xor
add
mov
sub
mov
movzwl
add
mov
movzbl
movzwl
add
add
mov
add
mov
mov
shl
mov
jmp
movw
movzwl
or
and
mov
mov
test
je
movzwl
jmp
mov
mov
movzwl
or
movzwl
imul
mov
movzwl
mov
movzwl
movzwl
imul
mov
movzbl
mov
mov
movzwl
mov
movzwl
xor
sub
mov
add
mov
mov
xor
mov
add
mov
mov
test
je
movzwl
mov
jmp
movzwl
movzwl
and
sub
mov
add
mov
movzwl
mov
xor
div
mov
cmpb
je
movzwl
jmp
movzwl
movzbl
and
sub
mov
sub
mov
movzbl
and
mov
mov
mov
jmp
mov
and
movzbl
mov
sub
sub
mov
xor
mov
mov
xor
divl
mov
mov
add
mov
mov
mov
mov
or
mov
cmpl
jge
mov
jmp
mov
sub
shr
mov
mov
and
add
mov
xor
mov
mov
movzbl
mov
mov
mov
mov
imul
movzbl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
imul
mov
sub
movzbl
cmp
je
mov
mov
jmp
mov
xor
or
movzbl
cmp
jne
mov
jmp
mov
xor
movzbl
cmp
jge
mov
jmp
mov
xor
mov
cmp
jle
mov
mov
jmp
mov
shr
mov
cmp
je
movzwl
jmp
mov
xor
div
mov
cmp
je
mov
jmp
mov
shl
mov
cmp
jge
mov
or
push
push
push
call
cmp
je
movzwl
mov
jmp
movzwl
shr
mov
cmpl
je
mov
mov
jmp
movzwl
xor
div
mov
cmpl
je
movzwl
mov
jmp
movzwl
or
imul
mov
cmp
jne
mov
jmp
imul
cmp
je
mov
mov
jmp
cmp
jne
push
pushl
push
push
call
mov
mov
shr
mov
cmp
je
mov
jmp
mov
movzbl
cmpw
jne
movzwl
mov
jmp
movzwl
shl
mov
cmp
jne
movzwl
push
movzwl
push
call
movzbl
mov
add
mov
cmpw
jne
movzwl
jmp
mov
shl
movzbl
movzwl
xor
and
movzbl
mov
test
je
mov
jmp
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
cmp
jne
mov
jmp
mov
shr
movzwl
cmp
je
mov
jmp
mov
xor
add
mov
cmp
jle
mov
mov
jmp
mov
add
mov
mov
mov
mov
xor
divl
mov
sub
mov
and
sub
mov
cmpl
jle
mov
mov
jmp
push
mov
imul
sub
push
mov
and
sub
push
call
mov
test
je
push
call
mov
and
movzwl
cmp
jne
mov
jmp
mov
cmp
je
mov
jmp
cmp
jne
call
movzwl
mov
xor
divl
mov
cmp
jge
mov
jmp
mov
or
mov
cmpl
jle
mov
mov
jmp
mov
mov
or
add
push
push
mov
add
add
push
call
mov
mov
test
je
push
mov
imul
sub
push
call
mov
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
push
mov
sub
push
push
push
mov
movzwl
mov
shl
movzbl
mov
and
movzbl
mov
shr
movzbl
cmp
jle
mov
mov
jmp
mov
or
movzbl
mov
test
je
mov
jmp
mov
xor
or
movzwl
mov
and
movzbl
cmp
jge
mov
mov
jmp
mov
shr
movzbl
mov
test
jne
push
push
call
movzbl
mov
movzbl
mov
movzbl
cmp
jne
mov
mov
jmp
mov
sub
sub
mov
cmpb
jne
mov
jmp
mov
movzbl
xor
add
push
movzbl
xor
add
push
mov
and
push
call
movzwl
mov
test
je
push
mov
xor
xor
push
mov
movzbl
and
push
call
mov
movzbl
or
and
movzbl
cmp
jge
mov
mov
jmp
movzbl
sub
movzbl
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
imul
test
je
mov
jmp
mov
or
mov
sub
mov
mov
and
mov
sub
mov
mov
cmp
je
mov
jmp
mov
imul
mov
movzwl
xor
div
mov
mov
or
sub
push
mov
or
add
push
mov
imul
push
call
mov
mov
test
je
call
mov
test
jne
call
mov
mov
and
mov
test
je
mov
jmp
mov
xor
movzwl
xor
mov
movzbl
xor
mov
mov
movzbl
add
add
push
movzbl
or
add
push
mov
movzbl
sub
push
call
mov
mov
test
je
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
xor
movzwl
mov
mov
xor
div
movzwl
cmp
jne
call
cmp
jle
mov
mov
jmp
mov
xor
push
mov
xor
push
mov
and
sub
push
call
movzwl
mov
test
je
call
mov
shl
movzbl
cmp
jne
mov
jmp
mov
mov
mov
test
je
mov
jmp
mov
xor
movzwl
mov
mov
mov
or
xor
mov
cmpl
je
mov
jmp
mov
xor
divl
movzbl
cmpb
jge
mov
mov
jmp
mov
and
movzwl
mov
or
movzwl
mov
movzbl
xor
sub
push
mov
and
push
mov
imul
push
call
mov
mov
test
je
mov
and
add
push
mov
xor
or
push
call
cmp
jne
call
movzwl
mov
xor
divl
movzwl
cmp
jne
mov
mov
jmp
mov
or
add
push
mov
sub
push
push
call
movzwl
mov
test
je
mov
or
push
call
mov
shl
movzwl
mov
test
je
mov
mov
jmp
mov
xor
divl
mov
mov
shr
movzwl
mov
add
movzwl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
movzwl
mov
mov
test
jne
push
call
mov
mov
or
mov
cmp
jle
mov
mov
jmp
mov
movzbl
test
je
mov
mov
jmp
mov
mov
xor
div
mov
cmp
jle
mov
jmp
mov
add
sub
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
shl
movzbl
mov
shr
movzwl
mov
and
push
mov
xor
add
push
mov
and
sub
push
call
movzwl
mov
test
je
mov
imul
push
call
mov
movzbl
mov
mov
mov
test
je
mov
mov
jmp
mov
or
movzwl
cmp
jne
mov
mov
jmp
mov
xor
divl
movzwl
cmp
jge
mov
jmp
mov
and
mov
cmpl
jne
mov
jmp
mov
xor
divl
movzwl
mov
movzwl
mov
or
mov
sub
mov
cmpl
jne
push
call
movzwl
mov
movzwl
cmpl
jge
mov
mov
jmp
mov
movzwl
cmp
jge
mov
mov
jmp
mov
xor
divl
mov
cmp
je
mov
mov
jmp
mov
mov
xor
div
movzbl
cmpl
jge
mov
mov
jmp
mov
add
push
mov
add
push
mov
xor
push
call
movzwl
mov
test
je
mov
and
push
mov
or
mov
imul
push
push
call
mov
shl
movzbl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
and
mov
imul
movzwl
cmp
jle
mov
mov
jmp
mov
movzwl
mov
test
je
mov
mov
jmp
mov
imul
movzwl
mov
xor
mov
mov
xor
mov
cmp
jle
mov
mov
jmp
mov
xor
add
mov
xor
mov
mov
add
movzwl
mov
xor
add
mov
mov
mov
mov
or
mov
cmp
jge
mov
mov
jmp
mov
sub
add
mov
mov
sub
mov
mov
and
sub
cmp
je
mov
mov
movzbl
mov
movzbl
shr
mov
mov
test
je
movzbl
mov
jmp
movzbl
xor
mov
movzbl
movzbl
xor
push
movzbl
movzbl
or
push
movzbl
movzbl
or
push
call
mov
mov
test
je
movzbl
sub
push
call
movzbl
movzbl
xor
mov
movzbl
mov
mov
movzbl
xor
mov
mov
test
je
movzbl
jmp
movzbl
movzbl
xor
sub
mov
add
mov
movzbl
mov
movzbl
movzbl
xor
sub
mov
add
mov
movzbl
shl
mov
cmpl
jle
movzbl
jmp
mov
movzbl
imul
add
mov
sub
mov
mov
and
xor
mov
jmp
mov
sub
mov
cmpl
je
mov
mov
jmp
mov
sub
add
mov
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
mov
shl
movzbl
cmp
jle
mov
jmp
movl
mov
or
imul
mov
cmp
jge
mov
mov
jmp
mov
add
add
mov
xor
mov
mov
movzbl
cmp
jle
mov
jmp
mov
imul
mov
mov
mov
imul
add
mov
mov
mov
xor
div
movzbl
cmp
jge
mov
mov
jmp
mov
and
mov
add
mov
mov
add
mov
test
je
movzwl
jmp
movzwl
add
mov
add
movzwl
sub
mov
mov
add
mov
mov
add
mov
mov
add
movzbl
mov
or
mov
sub
mov
movzwl
sub
mov
cmpw
jle
movzwl
mov
jmp
mov
add
mov
movzwl
movzwl
add
add
cmp
je
movb
movzbl
add
mov
cmpb
je
movzbl
mov
jmp
movzbl
shr
mov
cmpw
jge
movzwl
jmp
movzbl
shl
mov
movzbl
movzwl
imul
add
mov
sub
mov
jmp
mov
movzwl
or
add
mov
add
mov
mov
movzwl
imul
add
mov
mov
mov
mov
add
mov
movzwl
sub
sub
sub
mov
mov
movzbl
cmpl
je
movzwl
mov
jmp
mov
movzwl
or
add
mov
mov
mov
add
mov
or
add
sub
mov
mov
add
movzbl
mov
movzwl
xor
add
mov
mov
mov
sub
sub
mov
movzwl
xor
mov
imul
mov
mov
add
sub
mov
mov
mov
add
mov
add
add
sub
mov
movzwl
movzbl
cmpl
jne
mov
mov
jmp
movzwl
or
add
cmp
je
movb
movzbl
or
movzbl
add
mov
cmpw
jle
movzbl
jmp
movzbl
xor
movzwl
imul
mov
movzwl
add
mov
mov
add
mov
movzbl
and
sub
mov
movzbl
mov
mov
movzbl
sub
mov
movzbl
sub
movzbl
add
mov
cmpl
jne
mov
mov
jmp
movzwl
add
mov
movzbl
mov
movzbl
xor
cmp
je
movb
movzbl
or
mov
cmpw
jge
movzbl
mov
jmp
movzbl
xor
mov
cmpw
jge
movzwl
jmp
movzwl
xor
mov
mov
shl
mov
shr
or
mov
movzbl
mov
movzbl
movzwl
or
sub
mov
movzbl
xor
mov
add
mov
mov
mov
mov
movzwl
or
sub
mov
add
mov
movzwl
add
mov
jmp
movzwl
or
movzwl
imul
mov
mov
cmp
jne
movb
movzbl
shl
mov
cmpb
je
movzbl
mov
jmp
movzwl
and
mov
movzbl
or
movzwl
sub
mov
movzbl
movzwl
or
sub
mov
mov
sub
movzbl
movzwl
and
sub
mov
movzwl
xor
divl
mov
mov
movzwl
sub
sub
mov
mov
mov
movzbl
xor
sub
sub
mov
mov
mov
mov
test
je
movzwl
jmp
mov
add
movzwl
movzbl
or
sub
mov
movzbl
add
movzwl
sub
mov
mov
movzwl
and
add
mov
add
mov
movzwl
mov
movzbl
sub
mov
cmpw
jge
movzbl
mov
jmp
mov
movzwl
sub
add
mov
mov
mov
add
movzwl
movzwl
and
add
add
mov
mov
imul
mov
mov
sub
add
mov
add
mov
mov
mov
add
mov
movzwl
mov
movzwl
movzwl
add
add
mov
xor
mov
movzwl
and
mov
cmpb
je
movzwl
mov
jmp
movzwl
xor
add
push
mov
movzwl
or
sub
push
movzwl
add
sub
push
movzwl
movzwl
add
add
push
call
mov
movzwl
mov
cmpw
jge
movzwl
jmp
mov
movzwl
xor
sub
mov
sub
mov
mov
mov
imul
mov
movzbl
sub
add
mov
add
mov
movzbl
and
mov
cmpb
jne
movzbl
mov
jmp
movzbl
movzwl
sub
push
movzbl
movzbl
imul
push
movzbl
movzwl
xor
push
call
mov
mov
test
je
movzwl
or
movzbl
imul
push
movzwl
push
movzwl
or
movzwl
imul
push
call
mov
sub
mov
movzwl
xor
imul
mov
cmpl
jge
mov
mov
jmp
jmp
mov
add
sub
mov
movzbl
pop
pop
pop
mov
pop
ret
push
push
call
pop
pop
ret
mov
mov
mov
mov
push
push
call
pop
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
shr
movzwl
mov
shl
movzbl
mov
add
add
movzbl
mov
imul
imul
mov
mov
mov
cmpb
jge
mov
jmp
mov
movzbl
mov
sub
sub
movzbl
mov
mov
cmp
jge
mov
jmp
mov
sub
add
push
mov
and
push
mov
add
sub
push
call
movzbl
mov
test
je
mov
xor
and
push
call
mov
mov
mov
and
add
mov
cmpb
jle
mov
mov
jmp
mov
sub
movzbl
cmpl
jne
movzbl
push
push
push
call
movzbl
mov
mov
mov
xor
divl
movzbl
cmp
jle
mov
mov
jmp
mov
xor
divl
mov
cmpb
jne
movzbl
push
movzbl
push
call
movzwl
mov
sub
add
movzbl
mov
mov
mov
sub
add
movzwl
cmpl
jne
movzbl
jmp
mov
xor
divl
mov
cmp
je
mov
mov
jmp
mov
imul
sub
push
movzbl
add
add
push
mov
or
add
push
call
mov
mov
test
je
push
movzbl
push
mov
or
movzbl
xor
push
call
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
imul
add
movzbl
mov
test
je
mov
mov
jmp
mov
or
movzwl
mov
add
movzwl
mov
shl
movzwl
mov
and
add
movzwl
mov
shr
mov
movzwl
imul
mov
add
mov
mov
test
jne
call
movzbl
movzwl
or
movzwl
mov
movzbl
cmp
je
movzwl
mov
jmp
mov
xor
mov
add
movzwl
cmp
jge
mov
mov
jmp
mov
mov
cmp
je
mov
mov
jmp
mov
shr
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
mov
sub
mov
mov
shl
movzwl
cmp
jne
mov
mov
jmp
mov
xor
movzwl
mov
imul
mov
mov
xor
mov
mov
or
movzwl
or
movzwl
cmp
jne
call
movzwl
mov
movzwl
imul
mov
cmp
jne
mov
mov
jmp
mov
xor
mov
imul
movzwl
cmpl
jne
mov
jmp
mov
xor
mov
cmp
jle
movzwl
jmp
mov
xor
sub
push
mov
add
add
push
mov
movzwl
or
add
push
call
movzwl
mov
test
je
call
mov
add
movzwl
cmpl
jge
mov
jmp
cmp
jne
pushl
push
pushl
push
call
mov
mov
and
movzwl
imul
movzwl
mov
and
mov
imul
mov
cmpl
jge
mov
mov
jmp
mov
and
mov
add
mov
cmpw
je
mov
mov
jmp
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
mov
mov
and
movzbl
test
jne
push
call
movzbl
mov
shr
mov
mov
mov
mov
mov
mov
sub
movzbl
cmp
jge
mov
jmp
mov
mov
cmp
jne
mov
jmp
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
imul
movzwl
mov
movzwl
mov
mov
cmp
jge
mov
mov
jmp
mov
add
add
mov
xor
mov
mov
shr
mov
cmp
jge
mov
jmp
movzwl
add
add
mov
xor
mov
movzwl
xor
xor
mov
cmp
jle
mov
jmp
mov
sub
mov
mov
mov
movzwl
shr
mov
movzbl
movzwl
add
sub
mov
mov
sub
mov
cmp
jle
mov
mov
jmp
movzbl
movzwl
imul
cmp
je
movl
mov
imul
add
mov
mov
sub
mov
mov
imul
mov
cmpl
je
movzbl
mov
jmp
mov
sub
mov
mov
movzbl
add
sub
mov
movzbl
mov
mov
mov
mov
movzbl
or
sub
mov
add
mov
mov
and
sub
mov
cmpl
jge
mov
mov
jmp
mov
sub
add
mov
add
mov
mov
mov
cmpl
jle
mov
mov
jmp
mov
xor
sub
mov
sub
mov
mov
xor
mov
add
mov
cmpl
je
mov
mov
jmp
jmp
mov
add
add
mov
mov
imul
sub
mov
xor
mov
movzbl
shr
movzwl
cmp
jge
movzbl
mov
jmp
mov
mov
mov
movzbl
and
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
shl
movzbl
mov
shr
movzbl
mov
mov
cmp
je
mov
jmp
mov
and
xor
mov
movzwl
and
mov
movzwl
and
mov
sub
mov
cmp
jne
movzbl
mov
jmp
mov
shl
mov
cmp
jne
movzwl
mov
jmp
movzwl
shr
movzwl
mov
and
add
movzwl
cmpw
jle
mov
jmp
movzwl
and
push
mov
or
add
push
movzwl
and
push
call
mov
mov
test
je
movzwl
movzwl
or
movzbl
sub
push
movzbl
push
movzwl
push
movzwl
push
call
movzwl
movzbl
cmpl
jge
movzwl
mov
jmp
cmpw
jne
movzbl
push
call
mov
mov
sub
mov
cmp
je
mov
mov
jmp
mov
shr
movzwl
mov
mov
mov
movzbl
xor
mov
cmpb
jne
movzwl
mov
jmp
movzwl
movzbl
imul
sub
mov
cmp
je
movzbl
mov
jmp
cmpw
jne
movzwl
push
push
movzwl
push
push
call
mov
mov
mov
cmpw
jge
mov
mov
jmp
mov
imul
mov
add
mov
cmpw
jne
mov
jmp
movzwl
xor
sub
movzbl
cmpw
jle
mov
mov
jmp
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzwl
cmp
jne
mov
mov
jmp
mov
movzwl
mov
or
xor
mov
mov
xor
div
mov
push
mov
imul
add
push
mov
xor
add
push
call
mov
mov
test
je
mov
or
add
push
push
call
cmp
jne
call
mov
mov
movzwl
or
mov
add
mov
cmp
jne
mov
jmp
mov
and
or
movzwl
cmpl
jge
mov
jmp
movzwl
mov
movzwl
sub
mov
cmpl
jge
mov
jmp
test
jne
pushl
push
movzwl
push
call
mov
mov
shl
mov
mov
xor
divl
movzwl
cmp
jle
mov
mov
jmp
mov
movzwl
cmpl
jge
mov
mov
jmp
mov
add
movzwl
cmpl
jge
mov
jmp
mov
shr
movzwl
cmpw
jge
mov
jmp
movzwl
sub
add
push
movzwl
xor
add
push
mov
xor
add
push
call
mov
mov
test
je
movzwl
and
mov
imul
push
mov
sub
push
mov
imul
add
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
xor
and
movzwl
mov
xor
imul
movzbl
mov
movzwl
mov
test
je
mov
mov
jmp
mov
shl
movzbl
cmp
jle
mov
mov
jmp
mov
movzwl
cmp
je
mov
jmp
mov
shl
mov
cmp
jle
mov
jmp
movzwl
movzbl
cmp
je
mov
jmp
mov
movzwl
cmp
je
mov
jmp
cmp
jne
push
movzwl
push
call
movzbl
mov
movzwl
imul
movzwl
mov
shr
movzwl
movzwl
add
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzwl
cmp
jle
mov
jmp
mov
or
mov
imul
movzwl
cmp
jle
mov
jmp
mov
shl
mov
cmp
jne
mov
jmp
mov
add
movzwl
mov
mov
cmpb
jle
mov
jmp
mov
sub
mov
cmp
je
mov
jmp
mov
test
jne
push
push
push
movzbl
push
call
mov
movzbl
shl
mov
mov
shr
mov
mov
mov
cmp
jne
mov
mov
jmp
movzbl
and
add
push
push
push
call
movzwl
mov
test
je
mov
or
movzbl
or
push
push
push
push
call
movzbl
mov
cmpb
jle
movzbl
mov
jmp
mov
or
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
or
mov
cmp
jge
call
cmp
jge
mov
jmp
mov
movzbl
mov
imul
add
mov
xor
mov
mov
and
mov
sub
movzbl
mov
or
sub
mov
xor
mov
mov
shr
movzbl
mov
and
mov
mov
mov
mov
sub
add
mov
cmp
jne
mov
mov
jmp
mov
and
sub
mov
mov
shl
mov
movzwl
movzbl
add
add
cmp
je
mov
mov
mov
mov
cmpb
je
movzbl
jmp
movzbl
sub
mov
movzwl
shl
mov
mov
shr
mov
movzbl
xor
sub
movzbl
mov
mov
movzbl
movzwl
or
xor
mov
cmpw
je
movzwl
mov
jmp
movzwl
movzbl
or
sub
mov
add
mov
movzwl
xor
imul
mov
cmpw
jne
movzbl
jmp
movzbl
movzwl
imul
sub
add
mov
and
and
mov
mov
movzwl
or
add
mov
sub
mov
mov
sub
mov
cmpb
jne
movzbl
mov
jmp
jmp
movzbl
or
mov
mov
test
je
mov
jmp
movzbl
and
sub
mov
xor
mov
mov
mov
cmpb
jne
mov
jmp
mov
mov
mov
movzbl
shr
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
xor
sub
movzbl
mov
or
movzwl
cmp
je
mov
mov
jmp
mov
shl
mov
movzwl
add
add
movzwl
mov
shl
mov
mov
test
jne
push
movzwl
push
push
call
movzbl
mov
imul
movzwl
mov
test
je
mov
jmp
mov
xor
movzwl
add
mov
cmp
jge
movzwl
mov
jmp
movzwl
movzwl
and
imul
mov
mov
mov
movzwl
movzwl
cmp
jne
mov
mov
jmp
mov
test
jne
call
mov
mov
imul
imul
mov
mov
add
mov
mov
mov
cmpw
jle
mov
mov
jmp
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
mov
cmp
je
mov
mov
jmp
mov
imul
mov
cmp
jge
mov
mov
jmp
mov
movzbl
cmp
jge
mov
jmp
mov
imul
mov
add
movzwl
mov
shr
mov
mov
add
mov
mov
add
mov
cmp
jge
mov
jmp
cmpl
jne
push
pushl
push
call
movzwl
mov
xor
divl
mov
cmp
je
mov
mov
jmp
mov
add
movzbl
test
je
mov
jmp
mov
xor
movzwl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
imul
movzbl
cmp
jne
mov
jmp
mov
sub
push
mov
xor
push
mov
add
push
call
movzbl
mov
test
je
mov
and
mov
imul
push
mov
or
push
mov
add
push
call
mov
and
xor
movzbl
cmp
jne
call
cmp
jle
mov
jmp
mov
mov
cmp
jge
mov
mov
jmp
mov
mov
cmp
jne
mov
jmp
mov
movzbl
imul
add
mov
xor
mov
mov
xor
movzbl
and
mov
mov
add
mov
mov
mov
mov
mov
xor
div
movzbl
cmpb
jge
movzbl
jmp
mov
movzbl
imul
sub
mov
xor
mov
mov
or
mov
mov
xor
mov
mov
mov
mov
or
mov
mov
imul
cmp
je
movw
movzwl
shl
mov
movzwl
mov
mov
movzwl
add
mov
cmpb
jle
movzwl
mov
jmp
movzbl
imul
movzbl
sub
mov
cmpb
jne
movzwl
mov
jmp
mov
movzwl
imul
mov
mov
mov
movzwl
add
add
xor
mov
movzbl
xor
movzwl
sub
mov
mov
mov
mov
movzbl
mov
movzwl
movzbl
xor
sub
mov
mov
movzbl
movzwl
sub
sub
xor
mov
movzwl
mov
mov
mov
mov
movzwl
shr
mov
cmpb
jle
movzwl
jmp
mov
movzwl
add
add
mov
add
mov
movzwl
and
movzwl
sub
mov
mov
sub
mov
movzwl
mov
xor
div
mov
mov
test
je
movzwl
mov
jmp
jmp
mov
movzbl
cmpb
jle
mov
jmp
movzbl
imul
sub
mov
xor
mov
mov
mov
xor
div
mov
mov
xor
mov
mov
mov
movzbl
mov
mov
test
je
mov
jmp
movzbl
sub
push
movzbl
sub
push
mov
xor
push
call
mov
test
je
push
call
call
mov
mov
cmpl
jne
mov
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
mov
imul
sub
movzbl
mov
or
mov
sub
mov
mov
xor
div
movzbl
mov
test
je
mov
jmp
mov
sub
mov
mov
sub
mov
cmp
je
mov
mov
jmp
mov
xor
div
movzbl
cmp
je
mov
jmp
mov
shr
mov
mov
shl
mov
mov
test
jne
push
push
call
mov
movzbl
mov
xor
div
movzbl
mov
sub
movzbl
cmpl
jge
mov
mov
jmp
mov
shl
mov
cmp
jle
movzbl
mov
jmp
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
cmp
je
mov
jmp
mov
shr
movzbl
cmp
jle
mov
jmp
mov
or
imul
mov
mov
and
mov
imul
mov
mov
and
movzbl
mov
test
je
mov
jmp
cmpl
jne
push
call
mov
mov
xor
div
movzbl
mov
mov
sub
mov
cmpl
jge
push
push
call
cmpl
je
mov
mov
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
movzwl
mov
mov
xor
div
movzwl
mov
movzbl
cmp
jne
push
push
call
movzbl
mov
shr
mov
cmp
jle
mov
mov
jmp
mov
mov
mov
or
add
push
mov
xor
sub
push
mov
and
push
call
movzbl
mov
test
je
mov
xor
imul
push
mov
xor
push
push
mov
add
sub
push
call
mov
shr
movzwl
mov
pop
pop
pop
mov
pop
ret
ret
jmp
xor
ret
jmp
jmp
jmp
cmp
dec
jns
lods
or
out
test
cmp
or
lea
jnp
dec
cmp
orb
and
mov
push
loop
inc
in
cmpsb
or
adc
pop
jns
jge
lcall
bound
mov
push
mov
cmp
pop
scas
mov
lock
popa
dec
jns
lods
arpl
imul
jnp
xchg
add
cmp
jns
lods
fldt
jnp
ljmp
and
pop
scas
fwait
dec
scas
ret
jne
cmp
add
and
jne
and
push
add
cli
dec
aad
cmpl
cmpsl
fucomip
dec
mov
xchg
repnz
dec
or
insb
push
fstpl
jl
nop
pop
or
loop
or
dec
ja
add
jno
loop
push
sbb
push
or
call
or
hlt
inc
mov
outsl
scas
aad
in
xchg
pop
sahf
hlt
push
push
cli
mov
cmp
stos
jp
or
lods
push
daa
jno
in
adc
lret
jno
sahf
jnp
mov
jbe
push
or
jge
mov
sahf
or
arpl
fmull
push
or
fisttpll
jbe
sbb
jae
insl
dec
leave
mov
push
iret
pop
ficomps
daa
jno
xchg
mov
es
push
dec
sti
mov
ss
push
mov
cmp
test
push
adc
push
loopne
cmc
inc
fsubs
jbe
test
sbb
xor
ret
or
sub
repz
sub
imul
shrb
jmp
out
mov
mul
xlat
lret
adc
mov
mov
insb
fstl
mov
jno
adc
cmp
add
and
sti
scas
sar
jp
pusha
loop
je
es
or
lcall
dec
add
adc
lods
push
gs
loope
js
test
adc
cmp
repz
in
outsb
adc
clc
insl
aam
jg
das
xchg
sbb
adc
mov
cmp
xor
popa
shrl
or
sbb
push
cli
test
adc
daa
cli
xchg
xchg
sbbl
xor
out
adc
push
xor
lcall
sbb
sahf
mov
adc
xor
pop
pop
or
xchg
shlb
out
mov
mov
clc
dec
add
int
add
mov
daa
mov
sahf
push
fisttpl
ja
sahf
popa
jnp
cmc
iret
das
mov
or
mov
cli
mov
dec
lea
int
fistl
adc
das
cli
xchg
mov
repnz
subl
mov
sbb
xchg
jmp
or
mov
sahf
pop
in
repnz
xchg
xor
dec
push
adc
pop
lret
xorl
add
mov
mov
or
add
pop
popa
fsubrp
push
fisttpll
xor
into
loopne
or
push
test
ficoms
dec
stos
pop
xor
pop
mov
and
xchg
subl
mov
add
ficomps
bound
pop
or
and
pop
test
xchg
std
das
pop
pop
sbb
stos
in
sub
pop
or
mov
sbb
lret
repz
cmp
sub
sub
leave
enter
mov
push
cmp
shlb
push
or
stos
int3
insb
lcall
ficomps
and
xchg
jle
stos
push
cli
scas
shll
das
mov
mov
jbe
or
pop
pmullw
jmp
test
push
xchg
enter
out
sub
or
loope
jo
and
push
push
or
pop
test
fisubrs
jl
mov
stc
ret
mov
push
dec
les
lea
out
test
popa
std
cmp
lret
loopne
or
lea
or
add
pop
adc
push
or
xchg
jns
sahf
or
add
xchg
enter
mov
pop
sarl
daa
jno
xchg
enter
ret
cltd
cli
popa
imull
mov
aas
push
jb
sahf
pop
test
ficoms
test
or
popf
push
or
or
aaa
mov
push
cmc
das
jae
ficomps
and
fmulp
pop
test
ficoms
fimuls
mov
or
ljmp
or
mov
fisttpl
into
pop
test
ficoms
or
adc
mov
mov
or
or
cmc
das
scas
jae
sahf
push
pop
lret
cld
pop
fimull
push
or
stos
hlt
lcall
sbb
adc
and
mov
popf
or
jge
xchg
jno
ficomps
cmp
mov
lea
btl
and
mov
cs
sbb
jns
jmp
mov
sahf
or
mov
or
shlb
ret
cmpb
and
mov
xchg
or
test
dec
mov
or
aaa
mov
push
pop
inc
mov
fcompl
mov
fcompl
push
pop
push
sub
mov
movsb
pop
lret
mov
cltd
mov
das
adc
pop
jl
xor
xchg
mov
or
in
sub
push
out
mov
adc
push
dec
pop
mov
int
add
es
sahf
lret
or
or
mov
or
daa
jno
pusha
mov
stos
xchg
pop
add
and
dec
jno
sahf
or
xchg
daa
and
testb
or
cltd
push
or
loopne
lock
fmul
ficomps
iret
dec
and
or
daa
jno
sahf
pop
test
fmulp
loopne
testb
ss
test
cltd
mov
fildll
rclb
inc
negl
fisubs
fisttpl
mov
add
sub
fcoms
inc
add
push
xor
add
je
jmp
mov
pop
pop
pushf
push
test
sbb
loop
adc
pop
sbb
xchg
push
aas
xchg
shr
inc
std
xor
dec
je
mov
hlt
repz
cmpsl
enter
push
lds
sbb
push
pop
pop
cmp
cwtl
insl
shll
add
stc
ja
loopnew
dec
mov
sahf
or
inc
add
scas
clc
adc
addb
fsincos
add
cs
ja
mov
dec
imulb
jg
push
inc
adc
ficomps
outsl
les
add
push
or
insl
adc
or
jp
js
mov
xor
daa
add
adc
arpl
js
mov
fimuls
pop
add
stos
icebp
jp
outsb
dec
jno
cld
outsl
outsl
push
pop
mov
in
outsb
and
in
push
lahf
int3
dec
push
pop
clc
push
sbb
daa
and
rorl
adc
outsb
int3
inc
add
dec
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
jno
ljmp
fmulp
insl
xor
inc
pop
xchg
sti
jno
jb
daa
and
enter
bnd
dec
ret
mov
outsl
adc
xchg
sti
jno
pop
jecxz
and
gs
add
mov
inc
or
and
roll
ret
jns
jnp
mov
gs
pop
aad
add
push
testl
insb
into
jnp
mov
insb
cmp
jnp
stos
in
jp
fs
jno
lods
in
popa
cmp
jno
in
xor
push
cmp
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
sbb
cmp
adc
inc
sub
scas
inc
cmp
clc
jno
xor
daa
fcmovb
push
mov
add
rclb
mull
xor
dec
push
push
out
dec
js
jne
push
aas
aad
je
dec
fmuls
daa
movsl
dec
push
dec
out
jo
add
pushw
ret
jl
inc
stos
fildl
add
and
or
mov
cmp
lods
shrl
mov
add
adc
mov
push
or
mov
adc
daa
sub
and
cli
hlt
scas
ds
add
outsb
xor
and
pop
je
pop
jp
lahf
sub
fwait
mov
adc
jne
cmp
jmp
xor
xor
out
sbb
or
sbb
movsb
or
rcll
sbb
pop
lock
push
add
pop
sbb
test
or
xchg
xchg
jge
jmp
out
sbb
xchg
adc
fisubrl
cmpsb
dec
arpl
jne
push
repz
dec
aaa
repz
inc
xchg
push
or
mov
pop
push
shll
lea
jg
or
fstpt
or
mov
bound
fwait
dec
or
mov
ror
icebp
movsl
sbb
out
add
push
jns
sub
adc
add
or
pop
inc
inc
or
es
fistl
and
sub
cmp
push
xchg
add
xorb
into
pop
xchg
pop
pop
mov
xchg
jne
pop
mov
sub
outsl
or
xor
or
or
data16
xor
je
fs
enter
aam
jnp
test
dec
lods
popa
sub
pop
ja
mov
dec
or
mov
loop
fbstp
xchg
and
and
mov
stos
hlt
xor
lret
lods
in
cmp
les
data16
jb
mov
int
cmc
xor
ds
or
sub
push
inc
fwait
xor
movups
mov
je
mov
and
fwait
sub
inc
mov
add
repnz
add
mov
sbb
dec
popa
arpl
mov
dec
xchg
push
adc
jns
or
out
arpl
sub
lcall
dec
jp
pop
and
sub
fisttps
mov
push
push
push
jnp
jle
pop
jl
and
cs
or
push
xlat
inc
dec
mov
xor
or
sbb
cld
outsl
cmovg
sub
dec
jb
clc
xor
add
movsb
cltd
sbb
fisubs
push
pop
mov
cmp
push
push
sub
lcall
push
jb
mov
or
sub
xor
into
test
pop
fists
out
js
lfs
call
sub
jle
ret
adc
or
lock
dec
and
arpl
sub
push
ficoml
cli
jo
pop
gs
loopne
mov
scas
add
push
sub
inc
or
mov
dec
fisubl
ss
outsb
dec
add
ficoms
loop
inc
pop
dec
in
inc
clc
pop
mov
loopne
mov
lods
subl
pop
push
xchg
ficoml
subl
outsb
mov
cmp
xor
push
stos
inc
inc
loope
sbb
cmp
sbbb
hlt
and
xlat
jle
xchg
push
outsl
fisttpll
mov
stos
lds
dec
add
cs
jmp
dec
loop
clc
ljmp
sbb
add
mov
or
cli
outsb
pop
pop
repnz
mov
scas
test
out
pop
aam
jmp
lcall
sbb
xchg
add
pusha
lock
fwait
dec
or
jns
xchg
add
xor
mov
xchg
add
loop
sbb
mov
adc
roll
jp
orb
jge
xchg
sahf
add
or
testb
pop
arpl
mov
iret
ljmp
push
outsl
outsl
xchg
cld
and
push
inc
call
lcall
push
adc
cmp
mov
fists
arpl
pop
xchg
add
push
jns
out
js
pop
and
xor
cs
add
test
push
adc
sbb
mov
dec
mov
lods
jge
shll
adc
in
xchg
adc
sub
push
sahf
or
dec
mov
cmp
mov
mov
mov
cmpsl
mov
sub
arpl
lock
push
inc
add
inc
test
or
fistpll
inc
push
mov
loop
and
cmp
xor
mov
outsl
mov
enter
loopne
dec
inc
or
sbbb
ss
cld
cld
sub
mov
stos
add
xchg
dec
nop
cmp
pusha
fisubl
mov
cmove
subb
add
rclb
aas
adc
pop
nop
movb
pop
sbb
iret
cli
or
push
mov
sbb
cwtl
jne,pt
nopl
cli
mov
xchg
cld
push
jb
call
sub
aad
outsl
add
dec
movsb
push
cli
pop
addr16
xchg
and
dec
cwtl
ja
adc
dec
data16
cwtl
inc
imull
xchg
jg
jmp
daa
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
inc
push
cltd
std
pop
iret
imul
scas
adc
mov
insl
jno
adc
stos
push
lcall
mov
lcall
cltd
xchg
ret
xchg
ret
add
mov
mov
dec
into
sub
mov
fwait
push
fldt
shrb
add
or
lds
or
loop
inc
cmp
js
mov
call
xchg
shlb
cmp
jo
jbe
mov
fistpll
das
or
pop
cltd
lret
xlat
jb
or
mov
stos
es
fs
pop
call
xchg
push
jns
push
inc
sub
call
cmp
xchg
jmp
int3
push
in
lods
sbb
pop
sbb
xchg
addl
mov
ficompl
pop
test
cmpb
push
mov
push
fs
mov
xchg
cmp
les
dec
insb
pop
sub
into
insb
adc
xor
sti
jnp
mov
and
stos
cmp
inc
sbbb
mov
aad
push
jno
aas
js
lret
lcall
fdivl
mov
sbbb
mov
cmpsb
mov
insb
or
pop
push
dec
loopne
xlat
daa
sub
pop
dec
cmpl
sbb
add
lds
jmp
insb
cld
out
lea
mov
das
sub
inc
mov
popf
or
xor
adc
push
sbb
repnz
sbb
pop
jo
or
mov
icebp
rclw
out
pop
dec
jno
into
push
add
mov
scas
cmp
dec
lea
aaa
popa
test
fs
inc
xchg
stos
jge
data16
mov
pop
cmp
jns
roll
pop
scas
mov
dec
xorl
push
or
dec
mov
lahf
outsl
jge
mov
mov
cltd
outsb
movsl
subb
enter
add
mov
ret
sahf
shlb
mov
or
mov
arpl
jecxz
sub
mov
dec
or
jge
mov
les
int
push
out
fcmovnb
faddp
bound
xchg
fdivl
xchg
lods
or
dec
inc
and
push
mov
or
outsb
or
movl
cmc
mov
popf
daa
data16
jbe
outsb
out
jno
decb
loope
push
dec
mov
aad
shll
fdivrs
mov
dec
or
push
jae
out
inc
mov
fstpl
or
dec
daa
sub
movsb
mov
es
lods
push
daa
mov
inc
jl
inc
pop
lods
cmp
insb
repnz
sar
or
add
push
repnz
sbb
adc
adc
and
shll
out
adc
sti
daa
call
mov
jne
xlat
hlt
fstl
pop
pop
into
sahf
cmp
lock
and
mov
xchg
jle
scas
aaa
push
pop
sub
sbb
xor
xor
fs
sbb
xchg
xchg
negb
jl
xchg
repz
fistpl
mov
and
movsl
jp
les
or
xchg
jecxz
out
inc
push
idivl
sbb
cld
inc
sbb
int
sahf
add
insl
fisttpl
push
ficoml
pop
js
jnp
jno
lahf
sbb
popa
andb
iret
filds
push
mov
sub
cmpsb
mov
xor
pop
adc
cmp
icebp
popa
loop
push
scas
mov
or
sbb
addr16
mov
and
stos
or
sbb
sbb
nop
mov
lds
movsl
daa
lods
jbe
adcb
xchg
jne
mov
mov
insb
adc
jl
jnp
push
xchg
sub
in
xor
call
pop
sub
sarb
pop
imul
jmp
xor
lret
sub
jl
add
je
mov
ret
sub
iret
xchg
fidivrs
mov
mov
adc
pop
push
or
mov
pop
xchg
pusha
or
pusha
adc
fstpl
dec
xchg
xor
or
adc
push
adcb
mov
inc
xor
jle
xor
inc
xlat
stc
aad
movsl
mov
adcb
inc
ficoms
sub
call
push
pop
outsb
js
mov
push
mov
in
and
aaa
sub
cmp
mov
pop
xor
fcompl
adc
or
mov
xor
and
icebp
cmpsl
test
mov
inc
cmp
xor
sbb
mov
jne
std
jl
outsb
xchg
jns
das
out
xchg
jle
sub
rcl
fwait
ljmp
nop
pcmpeqw
sahf
xor
mov
cmp
push
mov
imul
push
int
cmp
xor
cmp
pop
mov
push
inc
les
pop
jge
lods
mov
mov
sub
call
mov
mov
out
mov
insl
movsl
inc
jmp
xor
or
lea
ret
xchg
sub
jae
jp
lret
pop
insl
mov
ret
xchg
pusha
push
sub
out
push
sbb
and
lods
sbb
outsl
sbb
mov
sbb
daa
inc
cmpsb
repz
loopne
push
arpl
scas
xor
mov
inc
insb
addr16
xchg
fnstenv
mov
pop
jecxz
push
out
dec
dec
lds
ss
lcall
pop
jns,pt
push
dec
pop
dec
cltd
fisubrl
fstps
jge
or
cmp
stos
out
push
pop
subb
cmp
incl
dec
ljmp
int3
push
imul
into
gs
std
insl
stos
fsubrl
sub
jnp
inc
adc
mov
and
push
xlat
cmpsb
mov
sbb
lret
daa
out
or
add
test
lcall
loop
pop
adc
pop
sbb
sbb
jo
jecxz
push
out
insb
dec
cmpsb
add
cmp
pusha
dec
pop
push
mov
add
push
imul
fdivl
sbb
xor
lcall
fimull
pop
and
testb
or
int3
mov
lret
sub
ret
xor
add
jbe
cli
cmp
into
sbb
pop
push
movsb
mov
cltd
inc
add
adc
repnz
into
pop
mov
jmp
std
dec
xor
out
push
unpcklps
cmp
pusha
aad
jp
popa
clc
ret
jecxz
or
out
fstp
jb
xor
lret
dec
insl
imul
inc
xchg
fdiv
push
fadd
jle
cmp
mov
iret
fs
mov
xor
sub
lods
movsb
clc
xchg
dec
movsb
std
into
popa
adc
mov
repnz
pop
sbbb
shrl
xor
sbb
dec
out
into
dec
pop
jno
ss
aas
aad
jbe
push
pusha
inc
mov
push
cmp
jns
push
data16
cltd
sbb
fcompl
aas
movl
xor
add
int3
lcall
rclb
jle
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rolb
mov
arpl
sbb
pusha
jecxz
jo
pop
dec
repz
inc
fwait
and
mov
movsb
jns
xchg
cmp
out
ret
mov
or
iret
lea
into
into
or
test
pushf
fadds
js
test
test
scas
jnp
and
loop
dec
je
cmp
int
xlat
je
cmp
dec
cmc
ljmp
jo
stos
mov
jns
push
inc
cs
cltd
push
adc
lods
inc
into
sbb
in
cmpsb
push
cmc
pushf
fxch
xchg
lahf
repz
pop
lret
jg
and
roll
pusha
movsl
dec
mov
lea
xchg
xor
in
lods
push
mov
mov
adc
into
sub
inc
adc
xor
xor
push
dec
sub
lods
cs
popf
dec
stc
sub
sub
loopne
mov
scas
xor
pushf
sub
inc
out
test
sahf
push
cmp
jne
push
rcrb
sbb
dec
sub
pop
dec
mov
arpl
lds
sbb
add
mov
in
push
arpl
imul
je
mov
push
negb
pop
fwait
xchg
add
repnz
loopne
mov
scas
movsl
int3
jbe
pop
sub
arpl
pop
push
inc
mov
lock
mov
pushf
cltd
subl
cmpsb
fwait
incb
fcomip
test
push
push
movsl
mov
outsl
xor
sbb
or
cld
scas
dec
dec
add
dec
arpl
sub
push
aas
fisubrl
es
insb
inc
aam
std
add
fistps
fld
jne
inc
xor
sbb
pop
xchg
dec
cltd
push
ret
arpl
xor
push
sub
jp
or
enter
mov
loopne
mov
scas
int3
adc
inc
push
dec
lods
or
mov
aas
push
or
orb
outsl
sub
mov
in
xor
sbb
add
xchg
pop
cltd
cld
sub
je
pop
sbb
js
daa
psubusb
jg
push
push
outsb
fwait
test
mov
jp
scas
push
jns
mov
xor
sbb
add
xchg
adc
data16
cmp
lahf
cmp
ss
subb
loop
and
aad
mov
addr16
repnz
loopne
mov
scas
cmpsb
int3
xor
mov
cld
push
dec
sub
sahf
jle
cltd
psubb
repz
sbb
cs
outsl
add
sub
dec
inc
mov
clc
mov
jb
repnz
adc
or
sub
inc
mov
xchg
sub
in
mov
mov
sbbl
cli
mov
add
fists
lods
fnstsw
mov
push
adc
dec
sub
inc
xchg
mov
cld
mov
rcrb
mulb
pmulhw
fcmovnb
push
lds
cmp
jno
xchg
lcall
push
adc
fadd
in
lea
sbb
cltd
scas
sub
xor
xchg
sahf
cmp
test
push
add
outsb
cs
jns
lcall
push
and
sti
fcomps
cmpl
sub
mov
sahf
jp
je
cmpsb
ds
inc
sbb
outsl
loope
push
sub
dec
push
lahf
clc
lret
jb
repnz
add
subb
inc
sahf
mov
cld
pop
dec
test
mov
pop
push
cmp
shrb
dec
sub
dec
adc
mov
loopne
mov
scas
or
mov
mov
cld
sub
xor
arpl
sub
addl
fwait
mov
imul
addr16
mov
lret
cwtl
cmp
sbb
add
negl
in
pop
push
inc
lea
pop
je
clc
std
push
aas
sbb
cs
into
dec
js
adc
shlb
inc
mov
xor
sbb
add
sub
sbb
sahf
cmp
lock
sbb
jecxz
fists
pusha
push
cs
movsl
ficomps
xor
xchg
sub
push
call
sahf
jmp
ljmp
add
sbb
scas
outsl
jne
pop
sub
jns
clc
dec
mov
loopne
mov
scas
push
int3
sub
and
mov
cld
mov
dec
lock
dec
cmp
sbb
push
sub
outsl
pop
dec
sbb
add
xchg
xchg
clc
test
xor
sbb
add
sub
arpl
cmp
icebp
je
pop
and
sbb
adc
dec
cmp
mov
inc
mov
jb
in
xor
sbb
cltd
test
ja
jge
pop
in
push
sahf
mov
lcall
xorps
outsl
push
dec
cmp
add
loopne
mov
scas
gs
inc
sub
inc
mov
stos
cld
jle
xor
sub
push
sub
sbb
sbb
loopne
or
fwait
ret
add
jb
repnz
loopne
mov
scas
daa
int3
push
mov
cld
xor
xor
sti
mov
adcl
addr16
sbb
lcall
push
mov
cwtl
shll
sbb
add
xchg
sbb
out
aas
pop
lock
xchg
sahf
cmp
mov
push
sbbb
cs
outsl
mov
dec
gs
clc
jg
xorl
mov
scas
call
push
sbb
gs
push
inc
pop
dec
xorb
dec
xor
xor
mov
sub
fidivl
call
frstor
fcomps
scas
dec
add
jmp
push
fwait
dec
and
addl
cs
sub
xchg
adc
xchg
test
xor
sub
andl
jmp
or
pop
inc
cmpsb
or
arpl
push
shr
cwtl
es
popa
repz
pop
call
mov
daa
loop
push
or
xchg
test
pop
enter
out
iret
push
test
sbb
daa
jns
mov
push
sti
sbb
clc
jne
xor
inc
scas
xchg
sahf
adc
lods
or
push
cli
jg
ljmp
testb
fidivrs
or
bound
adc
aam
mov
loope
leave
hlt
push
lods
sahf
inc
push
call
clc
jbe
or
daa
jecxz
mov
xchg
test
sbb
ret
fcompl
xor
adcb
or
sti
push
clc
mov
test
mov
fisttpl
scas
test
lret
inc
cmp
movsl
pop
sbb
xor
lods
lods
mov
pop
jb
push
push
daa
fildl
aam
addr16
mov
cli
jecxz
sub
test
add
fs
or
dec
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
adc
and
push
or
loope
cmpl
enter
cltd
pushf
mov
shrb
jno
ret
shlb
mov
cwtl
sbb
lahf
ret
jo
sbb
mov
out
or
data16
aas
and
mov
orl
adc
add
cmpb
int
out
notb
test
insb
push
mov
rorb
mov
push
leave
out
test
int
and
mov
shrl
lcall
or
mov
lret
pop
cmp
cmp
clc
addl
or
and
shlb
add
dec
ds
jno
nop
mov
ja
testl
and
push
arpl
movsl
int
icebp
les
cli
and
rcrl
stos
inc
mov
cmp
fimuls
mov
push
inc
sahf
pop
mov
xor
adc
cmp
and
jno
inc
mov
and
jb
xchg
jmp
sahf
fs
jp
mov
lods
dec
push
inc
push
jbe
test
sbb
dec
enter
bound
inc
dec
jno
pop
inc
jge
jno
dec
leave
fcmovb
sbb
jmp
lods
dec
cmpsb
mov
and
clc
mov
or
jp
push
jb
sub
adcl
adc
adc
xchg
lcall
mov
jno
xchg
or
or
mov
ret
dec
into
sahf
adc
lods
push
mov
in
or
xchg
cwtl
movlps
jbe
sub
aad
jmp
xchg
dec
insw
cld
jl
daa
ud0
pop
in
iret
fs
out
int
lock
inc
adc
add
shll
mov
mov
daa
inc
jmp
outsb
xchg
jle
fwait
jno
bound
mov
shrb
inc
pop
out
rorb
adc
or
sub
pop
test
ficomps
stc
enter
mov
jne
inc
xchg
xchg
sahf
adc
mov
in
jne
adc
add
or
fdivrs
cmp
fdivr
daa
bound
fidivrl
lock
test
dec
push
push
or
sub
stos
jmp
or
push
jnp
adc
iret
popa
mov
sarb
loope
dec
mov
sbb
dec
popa
mov
xlat
mov
jecxz
out
cmp
es
xor
enter
xchg
and
mov
dec
outsl
mov
sahf
mov
in
mov
shr
mov
lea
sbb
pop
xchg
gs
cvtdq2ps
mov
push
outsl
pop
ds
sub
fildll
test
pop
out
mov
scas
push
int3
push
sub
inc
mov
dec
nop
in
xor
push
daa
sub
push
neg
dec
cmp
ret
cli
inc
inc
loopne
lods
add
fisttps
call
xor
sbb
cltd
mov
in
arpl
pop
or
cmpb
btrl
pop
push
or
cmpsb
sbb
dec
dec
sub
xor
jb
repnz
loopne
mov
scas
dec
int3
xor
inc
setnp
cs
mov
adc
jg
xorl
dec
cli
inc
inc
adc
mov
loopne
mov
add
cli
cltd
ja
imul
pop
pop
inc
fcomps
stos
je
xor
jnp
adc
dec
xor
out
dec
jb
clc
xchg
mov
loopne
mov
scas
lods
int3
imulb
cld
fimuls
xor
inc
pcmpgtw
aam
push
dec
sbb
and
dec
mov
clc
xor
loopne
mov
scas
aad
jp
pop
inc
and
mov
pusha
mov
xchg
push
in
scas
cmp
push
push
fwait
adc
fst
repnz
loopne
mov
lods
in
xchg
scas
cltd
xchg
sub
sbb
cmp
je
pop
xor
mov
mov
or
push
test
push
lock
push
pop
cwtl
adc
int
subl
jo
arpl
push
fsubl
mov
cwtl
push
xor
push
lods
cs
lock
mov
push
clc
rorb
loopne
mov
scas
add
ljmp
cld
cmp
xor
xchg
dec
mov
rolb
fwait
jno
xor
adc
jge
cli
cwtl
mov
daa
roll
xchg
sbb
arpl
xor
push
cmp
sbb
gs
dec
xor
testb
clc
and
loopne
mov
add
sub
mov
push
sub
mov
cli
pusha
inc
add
lcall
push
into
sub
mov
cltd
or
outsb
arpl
loope
dec
sahf
mov
je
dec
jnp
xchg
sbb
stos
add
fistpll
fcoms
ffree
xor
cmpl
or
push
xchg
pop
adc
or
je
loopne
push
aaa
sbb
mov
sub
dec
sbb
mov
repnz
das
in
rcrl
cwtl
add
mov
arpl
icebp
pop
cmp
les
enter
inc
incb
push
mov
outsl
aas
dec
dec
sub
dec
mov
clc
add
loopne
mov
scas
leave
int3
imul
cld
mov
inc
xchg
xor
mov
add
push
adc
out
test
push
ss
xchg
cmp
cs
sbb
add
xchg
and
test
pop
sahf
sarl
or
mov
cli
push
inc
dec
fwait
jmp
fwait
lcall
push
or
pop
dec
cwtl
inc
xor
sbb
cltd
out
arpl
adc
aas
inc
sahf
lea
mov
shll
jecxz
push
ficomps
xchg
cs
outsl
cmp
sub
or
clc
pop
mov
mov
push
int3
xor
mov
cld
scas
dec
and
xor
push
aas
sub
outsl
fidivl
pop
cli
rolb
fwait
imul
push
stos
call
lcall
mov
cld
mov
cmp
push
outsb
sub
fiaddl
push
cmp
scas
cli
in
and
lcall
push
jmp
mov
sub
inc
mov
dec
push
xor
or
sbb
cs
push
dec
inc
jge
in
test
push
sbb
push
pop
cwtl
mov
sbb
inc
cld
xchg
xor
pop
mov
je
decb
push
les
pop
cs
outsl
fisttps
jno
push
test
pop
outsl
jecxz
add
push
add
xchg
pop
cltd
mov
int
arpl
test
sub
xorl
adcb
iret
lds
dec
in
sub
dec
inc
fs
std
mov
jb
repnz
lret
adcl
sub
ret
pop
pop
leave
inc
mov
psraw
xlat
rol
rol
rol
rol
rol
rol
rol
rol
or
lods
sbb
subb
dec
sub
jae
xor
bnd
mov
subl
inc
outsl
mov
cld
xor
xor
cmp
sqrtps
push
ljmp
sub
dec
or
jb
repnz
lods
mov
sub
inc
divl
rcr
dec
arpl
mov
stos
push
pop
fiaddl
xor
dec
inc
sbbl
repnz
cltd
mov
scas
mov
imul
cld
xor
xor
sub
push
jbe
sbb
cs
outsl
mov
dec
add
les
loopne
xlat
sub
fidivs
movl
fsts
mov
sub
ret
jmp
mov
insb
out
fwait
rcrl
aad
shrb
aam
sbb
in
xlat
or
push
call
jmp
ficoms
jmp
or
mov
or
loop
jle
xor
je
sbb
bound
push
pop
push
ds
aaa
push
cmp
dec
xchg
aam
inc
cmp
push
out
js
cvtps2pi
jo
mov
movsb
cli
sub
and
xchg
shlb
mov
andl
clc
or
les
mov
sbb
mov
cmpsl
ret
out
sahf
es
imul
pop
or
adc
pop
cltd
repnz
lret
icebp
jbe
movsl
sub
cmp
adc
and
pop
adc
jne
es
pop
add
out
icebp
lret
sbb
mov
dec
test
out
jae
adc
jmp
push
in
mov
pushf
add
xchg
adc
test
std
out
popf
inc
adc
cmp
mov
xor
jno
lods
in
mov
popa
addr16
fidivrs
jge
cmpsb
aas
mov
xor
icebp
dec
cmp
and
jge
lds
add
pop
xorl
lods
out
xchg
ja
jmp
push
cmpsl
das
sbb
and
mov
add
inc
fsubrp
cmc
add
push
ret
nop
stos
cwtl
mov
daa
push
insb
cmp
out
mov
fistl
xor
test
push
sahf
dec
aad
dec
nop
idivl
in
rorb
push
xlat
aaa
add
dec
inc
mov
movd
mov
adc
sahf
mov
mov
push
push
int
mov
xor
adcl
ret
call
cwtl
aad
and
sbb
daa
jns
repz
not
jno
xor
jb
lret
pop
rorb
test
push
clc
mov
cwtl
pop
outsl
gs
jb
fiadds
lock
sahf
inc
mov
mov
xchg
fnstcw
daa
lock
mov
jnp
add
push
fimuls
dec
out
loop
inc
sahf
fistps
icebp
dec
adc
dec
jns
aad
stc
jnp
hlt
sbb
mov
cmp
into
or
xchg
inc
and
and
jbe
stos
movsl
pop
or
cmpsl
push
jne
push
pop
cs
lds
outsl
hlt
or
jle
fnstenv
loope
jns
add
pop
push
xorb
shll
mov
scas
xchg
cmp
dec
mov
dec
cli
and
sbb
xor
out
rol
mov
rcr
xchg
push
xor
stc
inc
loopne
call
mov
daa
addl
dec
mov
insb
push
add
adc
dec
inc
or
or
icebp
repnz
xor
add
cmp
in
add
cmp
xchg
dec
rcl
sarl
xor
or
sti
mov
mov
or
xlat
je
subb
or
ss
mov
es
mov
pusha
bound
fildll
jo
jae
push
sub
das
pop
cmp
xchg
fs
mov
in
add
ljmp
repnz
xor
mov
pop
add
pop
add
lds
sub
xchg
push
xchg
lds
call
lret
sbb
adc
xchg
andl
dec
shll
mov
push
cmc
xor
mov
or
push
cmp
call
lock
loopne
jb
push
dec
fidivs
mov
outsb
fs
or
sbb
mov
mov
inc
push
xchg
fs
inc
or
mov
inc
ret
adc
rorb
and
mov
rcrl
movl
jno
loope
dec
adcb
shlb
paddb
pop
subb
jmp
in
adcl
in
out
dec
jle
insl
mov
push
or
add
rcll
scas
and
fsubl
push
inc
jno
adc
jne
sub
lcall
sbb
sahf
fisubrs
nop
mov
jmp
loope
mov
xchg
addl
sbb
mov
sbb
gs
adc
dec
popf
jge
ficoms
adc
xchg
jns
jle
push
jmp
xor
sub
test
dec
test
jg
nop
out
inc
sub
out
mov
lock
popf
adcl
shrb
cmp
dec
mov
push
inc
dec
nop
sbb
icebp
sarl
movq
fimull
cmpsl
xor
sbb
loop
xor
cmpsb
ficomps
xchg
sub
push
aas
push
jnp
ret
push
mov
sidtl
cmp
sub
mov
cmc
sahf
xchg
rolb
fcomp
sub
adc
dec
inc
das
in
sub
das
gs
popa
push
hlt
nop
xor
push
add
mov
sbb
sub
ja
js
jp
arpl
xor
ficompl
scas
inc
pop
repnz
dec
jb
cmp
sbb
add
ja
imul
pusha
xchg
pop
jo
imul
iret
dec
adc
sbb
es
std
dec
iret
pop
inc
adc
popa
lret
mov
cmpsl
out
pop
push
sbb
std
cmp
in
iret
out
push
es
inc
or
std
sbb
xchg
sbb
lret
mov
xchg
and
xchg
push
cs
add
push
xchg
inc
stos
mov
lret
jo
stos
lret
push
cmp
jnp
dec
iret
shlb
ljmp
es
fwait
xchg
icebp
iret
cmp
xchg
jbe
sub
into
nop
mov
sbb
pop
iret
test
mov
stos
je,pn
push
ret
cmp
lret
insl
in
mov
inc
lahf
mov
cmc
iret
and
pop
jb
mov
sbb
pop
pusha
push
push
call
xchg
jg
in
inc
mov
sti
call
sbb
push
je
sbb
cltd
mov
leave
ret
push
inc
fcomps
pop
xchg
mov
or
scas
movsb
push
pop
cs
jnp
ja
push
popl
dec
notb
dec
iret
jb
aaa
cmp
shl
in
mov
xor
stos
mov
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
push
mov
dec
mov
add
mov
sbb
cmc
fs
xchg
ss
cs
xchg
jnp
pusha
sbb
dec
flds
sbb
iret
inc
sub
bound
mov
cmp
jne
loop
pusha
adc
in
dec
push
cmp
jle
mov
or
dec
mov
clc
mov
adc
data16
jle
push
les
testb
imulb
call
sbb
xchg
pop
or
jnp
popl
xlat
cmpsb
cmp
stos
test
insb
mov
xor
mov
out
sahf
in
incl
imulb
repnz
mov
jecxz
cwtl
test
mov
sbb
mov
and
push
popl
pop
sahf
dec
and
pop
mov
sub
iret
jnp
divl
mov
inc
xchg
mov
jp
push
pop
cld
xchg
mov
pusha
std
es
jae
addb
cmpsl
clc
sub
loop
arpl
pop
fbld
ss
clc
sbb
or
out
jno
mov
out
ds
push
out
mov
pop
ficoms
pop
test
push
inc
push
rcrl
add
pop
adc
sti
stos
xor
xlat
addb
push
ror
cli
loopne
push
lock
int
mov
add
pusha
pop
dec
xor
mov
ficomps
movl
jmp
pop
scas
push
insb
ficomps
xchg
mov
mov
sbb
and
add
nop
push
stos
bound
dec
sub
and
out
push
ret
xlat
sbb
mov
stos
jp
sbb
pusha
pop
mov
push
mov
cli
sbb
adcl
jb
sbb
sbb
jb
repnz
call
out
pop
mov
fisubrl
sub
sbb
in
mov
mov
cld
push
dec
jbe
sub
adc
sub
xchg
pop
sbb
icebp
and
jle
jmp
pusha
add
in
mov
es
inc
push
sub
jle
ret
lahf
bound
ss
ret
clc
sub
inc
shl
test
into
pop
sbb
sti
mov
pusha
fstpt
stos
jg
scas
sub
sbb
xchg
lret
ret
pusha
lret
andb
out
mov
pop
lahf
pusha
jbe
lcall
push
push
pop
xor
inc
mov
pop
pop
xchg
stos
mov
inc
mov
pusha
fnstenv
mov
stos
push
xor
aam
cmpsb
dec
into
cmpb
call
call
nop
outsb
push
sbb
sub
scas
mov
test
pop
push
decl
test
cmp
ds
adc
jbe
push
jne
aad
inc
out
add
fcmovu
js
sti
fwait
pusha
inc
push
cltd
sbb
mov
mov
cmpsl
fdivl
jl
sbb
add
iret
sbb
je
xchg
mov
inc
pusha
lods
out
dec
jp
jbe
push
test
inc
add
sbb
cwtl
pop
push
jle
lcall
es
sbb
dec
fisubrs
ss
xchg
negb
pusha
scas
push
stc
sbb
pushf
lods
test
stos
pushf
push
notb
cli
pop
mov
ljmp
decb
or
inc
mov
enter
inc
mov
sub
or
jb
mov
int3
cmp
adc
repz
jns
scas
sbb
fildl
sub
cmp
incb
jmp
push
rorb
mov
mov
mov
jae
mov
mov
out
sbb
pop
enter
in
pop
bswap
je
loop
push
pop
sbb
mov
shlb
ret
sub
orb
cmp
arpl
sub
push
push
fcmovu
fildl
dec
inc
repz
outsb
add
push
dec
insb
scas
sub
dec
sub
inc
bound
xor
cli
inc
inc
das
fwait
add
inc
sbb
cmp
fwait
jmp
mov
es
push
mov
cmp
repnz
loopne
push
test
add
loopne
mov
push
add
test
xorl
leave
mov
add
and
jne
movsl
and
or
jae
jns
mov
pop
sbb
mov
imul
insl
scas
mov
pop
mov
aad
je
pop
push
and
je
pop
and
iret
inc
push
mov
addr16
scas
ret
mov
adc
adc
scas
fiaddl
mov
mov
pusha
mov
addr16
adc
js
lcall
hlt
mov
out
fistl
testb
mov
and
fistpl
imulb
hlt
movsb
div
fildl
jecxz
mov
icebp
hlt
lods
test
and
hlt
test
sti
mov
pop
and
dec
icebp
dec
or
mov
xchg
jbe
add
sti
movsl
and
jbe
push
outsl
sub
cmpsb
insl
mov
sbb
popa
push
inc
jecxz
roll
inc
adc
sub
cmpsb
or
xor
test
mov
push
into
andl
pop
mov
pop
das
mov
and
jbe
insl
imul
sbb
xchg
sbb
xor
adc
imul
enter
div
cmp
mov
ljmp
mov
mov
xchg
jge
mov
xor
ss
inc
dec
loope
nop
or
sub
mov
loop
xor
sbb
jl
cmp
push
loopne
movsb
xor
sbb
loopne
ss
xor
sbb
loopne
jbe
mov
jge
mov
pop
ret
jge
mov
pop
in
outsb
jge
mov
pop
test
mov
jge
mov
pop
lea
mov
jge
mov
pop
xchg
xchg
fs
mov
pop
xchg
xchg
bound
mov
pop
sahf
xchg
pusha
jns
fnstenv
call
les
jmp
push
xchg
loopne
ss
xor
pop
mov
shrw
retw
scas
fadds
mov
lds
add
inc
testl
aas
data16
cmp
scas
in
inc
icebp
mov
data16
xor
shrl
xor
scas
out
sti
mov
data16
stc
inc
stc
mov
xlat
scas
xchg
sbb
je
movsb
push
in
xor
ss
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
cld
sbb
xor
sbb
xor
sbb
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
lcall
sbb
hlt
sbb
xor
sbb
xor
sbb
stos
push
jbe
pop
sub
stos
pop
sub
scas
pop
sub
scas
push
sub
scas
push
cmp
sub
sub
loopne
xor
or
les
cmp
or
jae
sub
push
lcall
mov
cmp
or
inc
pop
mov
and
pop
movsb
pop
jp
and
mov
and
mov
pop
inc
sbb
pop
inc
addr16
outsl
aaa
sbb
je
jbe
outsl
inc
sbb
je
jbe
outsl
inc
adc
je
jbe
outsl
dec
adc
dec
outsl
sti
andb
in
sbb
sti
sbb
xor
mov
hlt
sbbb
stc
sbbb
lock
out
cmpsl
inc
dec
incb
cmp
outsl
aam
inc
dec
cli
adcb
jecxz
rorl
pusha
out
or
jo
inc
gs
add
inc
sub
out
add
inc
cmp
adc
mov
adc
cmpsb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
xchg
iret
mov
sbb
loopne
sbb
loopne
sbb
loopne
sbb
cmpsl
outsl
fstps
or
test
scas
or
subl
jnp
ret
stos
or
mov
adc
clc
sti
aas
fisubrs
mov
sub
loop
sub
loop
sub
loop
sub
loop
sub
loop
sub
loop
sub
mov
sbb
mov
sbb
popf
sub
mov
sbb
lahf
sub
mov
sub
mov
sub
mov
sub
mov
sub
movb
fadds
inc
or
filds
inc
or
lods
dec
incl
mov
outsl
ljmp
lock
cmpsl
mov
in
out
movsb
or
jbe
out
int
loopne
sbb
je
out
outsb
xor
iret
das
jno
mov
dec
aad
das
pop
leave
xchg
clc
jge
mov
pop
lret
jge
mov
pop
int
cld
jge
mov
push
int3
bnd
mov
pop
rcll
cmp
pop
das
sbb
add
jbe
push
push
mov
sbb
je
jbe
pop
aad
xor
lock
pop
ljmp
pop
out
mov
adc
je
jbe
cmp
adc
and
jge
jp
inc
rcrl
adc
pop
pop
push
adc
push
pop
adc
call
test
loopne
sbb
dec
dec
pusha
loopne
pop
inc
iret
aad
data16
sbb
jl
fs
sbb
jle
push
fisttps
or
loope
bound
nop
and
cmpsb
aad
cmp
jle
nop
das
pop
mov
jmp
sarl
adc
jbe
mov
pop
sub
xor
adc
inc
aaa
cltd
xor
dec
out
xor
xorl
cs
mov
sti
jo
outsb
sub
mov
stc
movsl
lcall
rolb
jmp
sahf
clc
testl
jge
cmc
leave
stc
in
cmp
mov
sbb
jmp
inc
xchg
test
xchg
mov
jmp
jmp
int
into
jmp
lret
lret
in
in
lds
loop
cmp
loopne
leave
mov
test
int
mov
jmp
xchg
and
sbb
mov
ret
sti
out
mov
sar
sti
cwtl
mov
mov
mov
jmp
xor
xchg
mov
loopne
repnz
xlat
mov
repnz
sbb
mov
adc
pop
mov
add
xlat
ret
add
sub
mov
jbe
mov
mov
outsl
in
movsb
lret
lret
sar
mov
iret
ljmp
fnstenv
lock
test
adc
jae
xor
outsb
jmp
sub
outsl
sub
sub
adc
jnp
push
sub
xchg
dec
gs
outsl
dec
cmpsl
repz
sub
pusha
inc
pop
in
loopne
xor
xor
cld
and
dec
bound
xchg
xlat
push
leave
call
ffreep
xchg
sti
adc
stc
xchg
clc
sti
sti
mov
fistpll
nop
sti
in
mov
sti
das
mov
clc
cmp
iret
add
fildll
ret
cmp
iret
stos
into
sbb
jne
mov
and
movsb
divl
movsb
cmc
outsb
cmp
movsl
rep
cmp
icebp
outsb
cmp
ljmp
adc
outsb
xor
movsl
sti
outsb
xor
stc
outsb
xor
outsb
das
sub
outsb
sub
movsl
ret
outsb
sub
shrl
out
dec
repnz
iret
outsb
daa
and
jo
xchg
or
imul
scas
dec
and
lods
dec
and
mov
outsl
add
jne
pop
xchg
add
movsb
mov
iret
out
stos
loopne
sub
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
iret
mov
sti
loopne
sbb
iret
mov
stc
loopne
sbb
iret
mov
jmp
xchg
sbb
iret
mov
std
loopne
sbb
iret
mov
sbb
iret
mov
sbb
iret
mov
sbb
iret
cmpsl
int
loopne
sbb
iret
movsl
int
loopne
sbb
iret
mov
sbb
iret
mov
sbb
iret
scas
int
loopne
cmp
jo
cmp
lock
stos
iret
lock
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
loopne
sbb
iret
in
clc
loopne
sbb
iret
loop
loopne
sbb
iret
loopne
cld
loopne
sbb
iret
out
int
loopne
sbb
iret
in
int
loopne
sbb
iret
ljmp
iret
call
sbb
iret
xchg
int
loopne
sbb
iret
xchg
int
loopne
sbb
iret
xchg
int
loopne
sbb
iret
nop
int
loopne
sbb
iret
sahf
int
loopne
sbb
iret
pushf
int
loopne
sbb
iret
lcall
iret
cwtl
int
loopne
sbb
iret
xchg
mov
int
loopne
sbb
int3
or
movsb
fimuls
insl
pop
xor
outsl
rcll
pusha
cmp
loop
mov
addr16
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
add
movl
lahf
jp
mov
jle
outsb
into
jns
pop
loop
into
jbe
je
inc
loope
popfw
das
jae
xchg
in
cmp
int
pusha
sbbb
movsb
int
loopne
sbb
iret
mov
sbb
iret
mov
sbb
int3
scas
mov
ss
adc
lods
stc
or
or
sub
jmp
test
out
div
cwtl
and
lcall
push
js
scas
mov
xor
fdivs
mov
arpl
xchg
sbb
sub
js
lds
inc
cs
jbe
sti
cvtps2pd
je
push
lret
cs
outsl
push
dec
enter
in
add
mov
fildl
iret
cld
inc
jge
fsts
jns
sarl
jbe
xor
push
mov
push
clc
dec
mov
cltd
notb
dec
pop
jnp
lahf
sahf
add
dec
cvtps2pi
add
push
mov
outsl
in
dec
mov
mov
sbb
mov
js
adc
dec
xor
add
sub
pop
jno
addr16
or
adc
or
insl
pop
imul
cmp
insl
je
incb
push
stc
sbb
shrb
dec
mull
call
push
jp
and
sahf
push
cmp
push
mov
jmp
outsl
mov
out
sahf
dec
shr
movsl
mov
jb
repnz
loopne
mov
scas
push
int3
push
sub
inc
jne
lock
dec
dec
aam
xor
dec
imul
loopne
mov
scas
xchg
int3
cmp
mov
sbb
jns
pop
lods
ja
test
push
xor
mov
mov
xor
push
sbb
int3
mov
out
adcb
cmpsl
inc
or
repnz
movlps
and
mov
and
out
imul
popf
cmpsl
mov
shlb
mov
xchg
add
mov
mov
or
xchg
pusha
jg
mov
fs
pushl
xor
ds
call
iret
pop
gs
addr16
int3
fwait
cmpsb
cmc
scas
pop
jne
lahf
hlt
insb
jecxz
cli
ret
jp
imul
shll
xor
mov
sbb
jecxz
sbb
imull
sbb
sub
xchg
sub
add
imul
lcall
pop
test
in
jbe
xchg
jnp
xchg
adc
sub
mov
lcall
pushf
lret
mov
inc
mov
xchg
jo
pop
mov
stc
jb
fadd
sbb
cwtl
sbb
xchg
scas
imul
out
cmp
mov
fs
dec
into
stos
cmp
scas
es
ss
movsb
daa
inc
jge
cmp
icebp
jno
data16
adc
rcrb
jp
push
pop
cltd
ljmp
cs
insl
and
fstps
ficomps
das
adc
jl
ds
push
jge
lret
and
aas
add
cmp
add
xlat
dec
cmpsl
mov
add
xor
mov
jbe
inc
or
leave
xor
daa
sti
dec
push
mov
push
push
push
mov
pushf
aaa
dec
fwait
dec
ret
xor
jle
push
outsb
or
ds
hlt
mov
js
aas
sti
dec
add
add
cmp
pop
add
and
add
gs
xchg
or
cmpsb
iret
hlt
sbb
inc
orl
stos
xchg
por
aaa
out
jnp
mov
jbe
aas
xchg
popa
in
ret
mov
sbb
mov
mov
pop
aad
testl
sbb
push
sahf
push
push
mov
mov
lods
mov
loop
test
add
imul
aas
lcall
pop
repz
adc
jne
aas
or
std
test
inc
push
push
lods
push
and
stos
mov
mov
paddq
cmp
lods
pop
stc
stos
inc
push
xor
stc
pop
inc
push
mov
mov
dec
leave
scas
jmp
xor
call
ret
jbe
xorl
push
push
sub
cwtl
notl
sbb
scas
cmpsl
imull
lcall
inc
sub
cmp
add
sub
lds
shrb
sbb
aam
shlb
bound
mov
and
loopne
sbb
rep
ds
dec
add
sbb
fisttpl
popf
cmpsb
mov
test
jbe
xchg
jl
mov
pop
or
ret
sub
aam
push
cs
jo
sub
inc
push
hlt
out
push
cmp
or
xchg
je
in
jmp
mov
pop
addl
test
cmpb
inc
loopne
in
push
shl
jae
hlt
fistps
pop
mov
mov
inc
repnz
lahf
and
divl
lea
cmpsb
fldl
int
add
pushl
and
sbb
repnz
lods
cmp
lods
sbb
sbb
adc
jbe
push
mov
mov
pop
mov
insb
add
dec
pop
lret
test
dec
jle
imul
ds
scas
push
and
push
imul
addl
adc
sub
push
fcoml
sbb
dec
mov
repnz
add
push
loop
sub
sub
daa
outsb
push
xchg
sbb
cmpsb
pop
push
lahf
adc
insl
out
push
dec
cmp
mov
in
mov
arpl
jne
pusha
daa
loope
aad
sbb
and
xlat
inc
push
les
or
mov
jae
stos
pop
jnp
mov
mov
aad
jle
popa
sub
add
jmp
push
inc
out
push
sbb
sarl
xchg
icebp
decb
es
fidivl
jecxz
movzwl
lea
fildl
mov
mov
leave
data16
int
pop
addr16
pop
jle
shlb
xor
and
xchg
jmp
call
adc
jp
stos
jg
sbb
aaa
pusha
or
insl
sub
ret
mov
or
call
adc
jmp
push
add
lret
insb
fldl
sub
mov
jge
nop
movsl
pop
xchg
inc
test
and
jmp
push
push
inc
cld
add
test
sti
imul
idivb
out
dec
lahf
push
cmpl
popl
notb
mov
popa
hlt
cmpsb
adc
pushf
ficomps
mov
addr16
xchg
dec
loop
sti
sahf
pop
add
jno
in
pop
repnz
ret
iret
popf
adc
sub
mov
or
out
pop
xchg
fstp
fdivp
mov
jmp
adcb
out
ds
adc
push
ljmp
fisttpll
add
xor
inc
dec
pop
mull
push
dec
cmc
sub
fs
jno
xlat
stos
push
stos
cmp
leave
ret
enter
jns
stos
cmp
lock
outsl
push
inc
hlt
sub
rcll
pop
leave
fwait
cmp
daa
lea
popa
in
in
inc
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
xchg
das
sti
scas
incb
dec
es
scas
in
in
daa
push
lahf
xchg
push
in
mov
mov
jae
ror
mov
jge
aaa
xchg
mov
inc
in
loope
push
inc
push
adc
ljmp
cmp
pop
movsb
jno
jnp
mov
xchg
stos
sti
outsl
ljmp
pop
inc
adc
jle
jo
pop
jle
shll
cmp
sub
ret
jp
popf
push
arpl
sub
gs
push
es
test
gs
sbb
adc
mov
enter
mov
cmpl
xchg
out
xor
mov
jmp
lahf
roll
xchg
or
xchg
insl
sbb
imulb
stos
mov
mov
dec
mov
mov
sub
repz
loopne
dec
adc
addb
pop
cli
stos
push
push
loop
repnz
and
xor
cmp
push
ds
repz
jge
xchg
and
mov
pop
inc
cmpsb
xor
mov
pop
pusha
test
or
lahf
cmp
sbbb
pusha
jecxz
push
inc
xchg
in
addl
ds
imul
sub
lcall
notb
test
clc
inc
pop
mov
push
fistl
fmull
in
iret
sahf
xor
dec
sarb
pop
repz
repnz
mov
shlb
mov
lret
adcl
xlat
dec
fldcw
ja
push
pusha
std
dec
in
test
pop
add
push
ds
push
mov
iret
pushf
loopne
jno
inc
mov
arpl
lods
sbb
cltd
jl
push
cli
popf
sub
mov
inc
data16
push
add
pop
inc
out
add
adc
xchg
add
fcomps
fcompl
inc
fildl
std
inc
push
popa
jmp
mov
je
mov
or
and
xchg
pop
pop
sti
ljmp
xchg
rolb
mov
mov
fidivl
stos
jno
inc
movsl
divl
adc
cltd
addr16
push
loopne
testb
pusha
aas
xchg
cmp
repnz
dec
and
decb
sub
mov
push
fisubs
cmc
pop
outsb
outsl
int3
xchg
sub
mov
jp
test
dec
mov
push
pop
cwtl
mov
cmpsl
out
xorl
dec
add
mov
jp
popa
push
jge
inc
sbb
jmp
dec
and
repnz
dec
adc
adc
sbb
jecxz
sbb
fstp
call
loope
ret
jecxz
aas
stos
push
adc
lock
mov
fdivrp
xchg
lahf
jg,pt
mov
stos
in
popa
mov
mov
js
jg
pop
addr16
fbld
out
push
sub
cmc
push
jle
lret
sbb
mov
cltd
push
adc
mov
xchg
xor
xor
aas
mov
into
lahf
and
push
jnp
icebp
and
mov
into
jno
movsb
jbe
jmp
fdivrl
jno
pop
aam
jns
mov
popf
xor
decb
mov
fs
hlt
in
sti
pop
lret
xchg
testb
mov
iret
mov
movsl
sub
sub
cmp
lods
daa
pop
cli
mov
push
add
mov
leave
fcompl
neg
adc
mov
fsubrs
add
jg
cld
jmp
inc
xor
shll
pop
push
movl
xchg
xor
rcrl
push
push
inc
sub
push
pushf
jp
cmp
pop
inc
add
in
cmc
loope
push
mov
mov
cmc
mov
clc
xchg
mov
not
pop
xlat
push
xchg
mov
into
mov
iret
aas
xchg
das
js
cwtl
xlat
xchg
std
fidivl
jmp
jmp
cwtl
loopne
ficomps
jge
rolb
in
mov
xor
mov
push
add
xchg
cli
sub
aam
inc
push
mov
fwait
rorl
iret
cmp
push
sbb
or
subb
xor
mov
cmp
dec
push
scas
in
rorb
cmp
push
and
test
pop
sahf
loop
xchg
aam
loop
adc
jp
cmpsb
jecxz
xchg
xchg
fstpt
rorb
mov
xlat
cltd
xor
adc
gs
cmpsl
add
mov
lret
shlb
xchg
mov
or
dec
add
sahf
dec
ja
in
test
fisttpl
dec
cli
das
inc
jmp
out
add
sub
lret
imul
jbe
call
pop
lahf
push
mov
fcompp
inc
and
dec
sbb
les
out
fimull
dec
xchg
sub
pop
icebp
adc
jl
pop
mov
imul
ret
dec
cmp
imul
mov
push
mov
cmp
pop
mov
inc
popa
push
xchg
ret
mov
rcr
in
sub
lods
mov
mov
notl
pop
mov
fstpl
fcoml
ret
xchg
push
cmc
sub
mov
cmp
in
mov
fwait
stos
cmp
lock
and
push
adc
rorb
into
dec
dec
mov
lcall
push
jb
dec
cmp
adc
hlt
cmovs
testl
dec
push
cli
in
or
into
sbb
sti
nop
pop
sbb
mov
mov
fbld
pop
pop
scas
clc
test
add
fiadds
clc
and
flds
push
movsl
push
mov
pop
mov
cmpl
negl
shrb
add
cmp
leave
push
jno
lock
outsb
mov
dec
push
mov
jp
sub
sub
or
ljmp
cmpsl
mov
dec
gs
into
je
sub
push
mov
popa
jno
xchg
repz
scas
call
cmpsl
lea
lret
adc
mov
xchg
dec
adc
xchg
mov
jno
push
pop
xlat
lahf
dec
sbb
imul
or
nop
pushf
repnz
iret
jge
mov
cmp
rorl
ds
mov
add
mov
and
adc
push
push
js
adc
fwait
mov
xor
add
mov
daa
dec
push
inc
int
into
and
cwtl
mov
cmp
push
pop
mov
mov
push
mov
or
icebp
jne
dec
in
sub
in
test
outsb
or
ds
mov
fwait
xchg
jp
int3
negb
out
jns
lods
test
sbb
pop
jo
mov
dec
iret
sti
jae
xchg
push
test
push
add
jo
adcl
lods
dec
stos
jecxz
push
scas
mov
iret
pushf
cmp
xchg
jp
jns
int3
nop
sbb
mov
jno
mov
inc
sbb
mov
cmp
mov
xchg
lods
aam
movsb
fsqrt
into
pushl
xor
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rolb
pop
mov
dec
in
pop
add
push
xchg
fiadds
cld
imull
scas
xor
mov
jb
das
stos
and
add
mov
xlat
dec
inc
add
adc
mov
jle
push
jecxz
inc
clc
mov
sbb
out
pop
lret
cs
inc
push
dec
in
and
ja
pop
dec
cmp
sub
xchg
sbb
lret
lods
shlb
cmpsl
leave
mov
mov
insb
test
sbb
pushf
sbb
dec
cmp
mov
arpl
repnz
adc
out
add
sarb
sub
mov
xchg
insl
mov
pop
pop
bound
roll
mov
xchg
movsl
enter
jno
cmp
lock
cs
test
cmc
mov
js
push
fimuls
enter
hlt
mov
inc
lds
push
jg
mov
xor
pop
sub
and
test
and
xor
lcall
jo
or
repnz
cmpsl
lret
xchg
jl
mov
mov
lret
lret
xor
pop
icebp
mov
xchg
stos
add
push
in
jb
xchg
xlat
inc
push
push
aam
sub
or
sub
mov
lahf
rorb
sbb
add
out
cmp
mov
pop
sarl
sbb
or
and
push
sbb
add
into
mov
and
icebp
ljmp
movsl
add
xlat
push
jp
mov
adc
icebp
movsl
cmp
jno
adc
bound
mov
arpl
stos
pop
mov
data16
jecxz
pop
jno
mov
xchg
push
aas
or
mov
mov
gs
mov
or
or
ret
jo
rcrb
jo
ljmp
sbb
or
sbb
or
push
push
mov
jle
loope
add
inc
pusha
add
cmp
dec
test
mov
or
loope
sub
push
pop
fwait
test
pop
outsl
xchg
fcompl
lret
out
int
aas
jb
and
jg,pt
nop
mov
addr16
mov
and
int3
push
dec
lods
jmp
sbb
ret
fdivrp
inc
sbb
and
int
add
or
or
inc
dec
xchg
lds
cs
dec
test
pop
push
cld
cmpsl
insb
aas
or
sbbb
dec
or
xor
test
cmp
test
jle
xlat
js
add
sub
scas
pop
or
pop
add
enter
push
mov
adc
psrad
sub
orl
lret
jbe
mov
jge
popf
or
add
mov
xor
push
xor
mov
inc
cmpsb
cmc
push
or
cmpsb
sbb
adc
inc
mov
mov
iret
adc
or
rcr
fistl
adc
pop
fmul
adc
fsubr
adc
inc
cli
mov
mov
xchg
cmp
sahf
insl
inc
cld
out
dec
sti
lcall
int
jge
xchg
lret
mov
cltd
fdiv
mov
pushf
out
push
int
dec
xchg
mov
mov
pop
leave
inc
or
insl
jl
xchg
lock
pushf
fisubrl
movsl
out
sti
les
xlat
lea
pop
out
mov
lret
xchg
push
xor
ss
jle
fcmovu
pop
adc
mov
cmpb
push
mul
lret
cmp
jne
insb
fwait
stos
sahf
bound
jbe
dec
or
out
jge
xor
jle
movsl
notb
iret
jnp
insb
mov
push
pop
jae
pop
sub
das
and
inc
ss
loope
cmp
stos
jmp
aam
icebp
dec
cltd
cwtl
cmp
hlt
inc
or
js
push
xchg
and
in
sbb
sbb
es
mov
mov
mov
leave
shll
push
sbbb
leave
insb
sbb
pop
stc
stos
stc
xor
enter
loopne
jae
sti
lret
out
jle
clc
xchg
mov
push
add
sub
inc
pop
leave
mov
xorl
dec
fadds
push
cs
lcall
in
inc
jl
pop
sub
sub
mov
movups
mov
dec
sub
fdivl
fimuls
push
int3
jmp
dec
pop
out
icebp
test
add
dec
cmc
lds
jecxz
dec
and
push
adc
add
jg
push
aam
les
in
out
lahf
in
sti
push
cli
push
fcompl
cmc
dec
lds
cmp
xor
push
lea
js
xchg
es
and
pop
mov
mov
mov
loope
cli
insb
or
cwtl
mov
fstpl
sub
xchg
sub
or
push
mov
faddl
dec
int
sub
mov
push
adc
jp
jbe
xchg
xchg
jmp
push
add
and
push
lock
scas
or
pop
xor
push
mov
inc
popf
jne
inc
sti
jo
mov
push
inc
inc
fstl
push
pop
std
xor
xor
pop
and
ret
js
dec
sbb
nop
loop
fstp
mov
inc
sbb
adc
xchg
add
mov
push
sbb
xor
ja
scas
sub
inc
or
cmp
hlt
mov
xor
and
sub
mov
xchg
stc
ljmp
psrlw
cmc
cmp
push
or
xchg
jo
loope
mov
xchg
mov
jle
test
outsl
mov
dec
insl
ljmp
outsb
mov
mov
inc
add
push
pop
sbb
xchg
nop
stc
ror
imul
fcmovu
aad
ja
add
inc
fstpl
je
or
mov
cld
pop
rclb
out
cmpsb
push
and
xchg
bound
push
loopne
andb
mov
imul
mov
or
or
sub
pop
or
lods
sarb
pop
idivb
sub
sbb
lds
ds
sbb
aas
test
je
xchg
out
inc
jno
hlt
out
nop
aaa
sbb
lcall
sub
mov
lret
ja
mov
lahf
pop
lahf
orl
fiadds
add
or
jge
or
xor
push
stos
jno
andb
repnz
clc
push
and
arpl
cmc
movb
push
push
popf
mov
add
xchg
and
int
or
or
movsl
xor
call
mov
jge
push
enter
pop
add
xlat
insb
jo
mov
xor
cltd
stc
data16
rcrl
push
xchg
movsb
outsl
cs
rolb
pop
sbb
or
in
int3
sahf
stc
or
rolb
ret
fldcw
pop
mov
fsubrs
inc
sub
inc
lret
mov
xchg
mov
xchg
repnz
in
jns
cmc
cli
xor
add
adc
push
vpminub
loope
mov
inc
or
nop
or
lcall
push
xlat
xchg
push
nopl
sbb
cmpsl
xor
rol
rol
rol
rol
rol
rol
rol
rol
shr
push
inc
mov
sub
ljmp
jno
and
out
ds
jle
pop
adc
rcrb
pop
dec
mov
inc
test
cmp
xchg
nop
pop
pop
push
out
inc
retw
or
leave
lds
adcl
xchg
adc
ljmp
fs
dec
icebp
dec
mov
and
cltd
or
fidivl
jl
xchg
add
mov
pop
and
pop
dec
sbb
sbb
xchg
jge
out
jnp
jnp
mov
out
jp
stos
cmp
cld
inc
or
pop
cmpsl
inc
sbb
dec
push
pop
lret
jp
lret
mov
insb
jmp
mov
imul
loop
int3
xchg
insl
sar
lret
lahf
daa
bound
mov
or
push
jp
test
push
jmp
cmpsb
outsb
push
cmp
mov
inc
xchg
insb
jmp
in
mov
out
stos
repnz
daa
fldenv
dec
mov
add
mov
mov
jne
jecxz
xor
leave
and
jmp
dec
outsb
mov
addr16
imul
inc
sbb
cs
mov
inc
adc
paddsw
push
rcl
and
shrl
xchg
push
add
mov
test
and
lcall
add
xchg
xchg
hlt
and
push
dec
mov
dec
ficomps
add
inc
or
and
dec
pop
cli
cmp
push
or
pop
roll
out
imul
pop
jecxz
addl
xor
cmp
vphsubbw
jge
add
pop
pop
cld
gs
out
jl
xor
sub
jle
ret
add
dec
lods
lret
inc
stc
jb
adc
or
jne
cmpsb
mov
xor
addr16
push
aaa
movl
shrb
imul
cltd
adc
lods
add
imul
lock
imul
in
sbb
pop
inc
int
ficomps
mov
pop
leave
push
pop
jg,pt
jo
ljmp
or
pop
movsl
sti
nop
in
popa
or
pusha
mov
icebp
ljmp
mov
push
dec
dec
pop
push
ds
cs
cmp
mov
jl
test
pop
pusha
ljmp
jp
aaa
ds
mull
in
aam
adc
dec
jnp
cld
pushl
data16
js
jbe
xor
cmp
inc
mov
pushl
sub
ret
xchg
out
cltd
cmp
shlb
mov
sahf
jae
mov
inc
je
jmp
cli
mov
pop
mov
add
aad
xor
sub
cmp
pop
xor
mov
xor
or
loope
add
adc
test
adc
into
nop
ret
push
inc
adcb
pop
cs
xchg
mov
repz
int3
pop
iret
push
jbe
mov
arpl
dec
lods
clc
loopne
inc
clc
ja
pushf
movl
and
leave
inc
out
dec
shlb
push
push
movsb
mov
lcall
in
repz
lea
cmp
bound
lahf
mov
outsb
sbb
cwtl
pop
adc
repz
mov
rcrb
mov
add
jecxz
js
cmpb
add
movb
or
idivb
xchg
bound
imul
inc
out
imul
dec
or
mov
filds
dec
pushl
outsb
sbbb
adc
ficomps
movsb
adc
sbbb
in
fadds
adc
call
ss
sub
ss
andl
lods
jp
jmp
or
test
insl
pop
jge
jb
pop
push
test
xchg
pop
leave
inc
mov
dec
addl
fwait
outsb
movsb
push
cmc
xor
aaa
into
add
xchg
mov
mov
inc
xchg
jb
insl
int
data16
stos
mov
xor
mov
andb
mov
mov
stos
xor
pop
pop
xor
out
fiadds
xor
mov
mov
xor
ds
dec
lods
outsb
adc
push
nop
push
sbb
js
lods
ds
jmp
sbb
sub
push
jmp
je
hlt
das
stc
das
pop
adc
pop
and
dec
js
mov
test
pushf
jns
cs
out
adc
idivw
adc
repnz
into
test
dec
sbb
pop
lret
out
aam
clc
js
and
in
dec
jmp
inc
ret
cld
cmp
cmp
std
pop
xchg
pop
stc
stos
push
xchg
mov
pop
flds
pop
cmp
add
dec
jb
aaa
imul
jmp
and
insl
mov
jecxz
insb
and
cs
stos
inc
pop
push
sub
xchg
dec
dec
enter
and
mov
sbb
daa
pushf
fimull
test
lods
or
lret
fimuls
xor
add
outsb
mov
mov
or
stos
out
push
push
out
rcrb
ds
pop
sub
dec
sbb
cmp
sub
outsb
jbe
loop
mov
fistl
gs
jns
push
js
pushf
out
fcoms
fnop
jle
xlat
adc
dec
mov
add
je
cltd
sub
mov
sbb
arpl
sbb
cmp
xchg
repz
push
xor
xchg
mov
jg
scas
sti
push
cmp
and
lahf
xor
call
pop
pop
mov
enter
or
mov
movsb
lcall
out
pop
xor
xor
cmp
je
pop
repnz
daa
mov
add
gs
adc
sti
jnp
ja
push
add
cmp
mov
and
mov
xor
mov
js
mov
mov
and
fdivl
insb
jb
movsb
xor
test
out
jmp
stos
sbb
icebp
inc
sarb
mov
sti
sahf
je
js
inc
sahf
add
mov
shrl
popf
add
xor
rorl
xor
inc
mov
push
xor
shll
je
stc
call
jne
push
test
cs
dec
or
sub
dec
notb
ret
cmpb
mov
sbb
inc
and
cmpsl
mov
push
js
sub
mov
xor
pop
aas
push
fistpll
mov
mov
ret
stos
jne
idivb
xor
jl
and
aam
js
repz
inc
mov
fs
and
pusha
lahf
rcr
sub
mov
mov
mov
int
jbe
loope
sub
test
ret
mov
or
das
emms
mov
pop
jl
movsb
pop
mov
sub
adc
lods
sbb
fimuls
fs
xchg
push
js
mov
jnp
cli
pushf
or
js
push
add
jmp
pop
rcr
mov
fs
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
ror
sahf
dec
push
inc
lock
cmp
pop
jmp
and
mov
push
or
in
adc
faddl
mov
bound
scas
mov
ret
lahf
rep
adc
pop
xlat
ret
popf
jecxz
and
out
call
cwtl
cltd
add
mov
enter
jmp
jmp
dec
clc
xchg
pop
push
in
repnz
jp
jo
fistps
push
mov
outsb
push
or
sub
pop
imul
scas
lret
idivb
fs
into
xor
add
push
inc
ljmp
cmpsl
pop
xchg
sbb
fucomip
fisubl
loopne
movsl
jmp
arpl
repnz
mov
adc
push
cmc
leave
outsb
aad
lods
scas
ret
pop
push
add
in
and
pop
dec
cmpsb
jbe
pop
mov
inc
push
cmpsl
in
push
inc
fdivs
sahf
sti
imul
cwtl
pop
pop
xor
ss
cmp
fcoml
je,pt
xchg
jp
and
fidivs
sbb
ljmp
fstp
cmp
outsb
add
repnz
jp
in
imul
fdivp
and
stos
es
jno
idivl
js
cli
roll
inc
mov
sub
mov
subl
xor
inc
movsb
jmp
jo
mov
fs
mov
push
xchg
imulb
inc
jns
ss
ljmp
cmp
xchg
inc
fistps
mov
push
push
arpl
sbb
xchg
loop
stos
cmp
out
aad
mov
mov
push
sbb
insb
xor
jbe
mov
xchg
sbb
fistpll
and
adc
xchg
push
push
adc
push
mov
dec
sbb
xchg
rcr
sbb
add
rcll
or
cltd
pop
cs
pop
xor
sbb
cltd
push
jp
and
inc
add
data16
shrb
roll
loope
test
mov
push
out
js
sahf
fs
lahf
push
pushf
test
sub
fcmovne
mov
lret
mov
mov
jg
call
outsb
jbe
out
imul
sub
xchg
cmpsb
loopne
sub
sbb
xlat
or
lock
dec
push
shrb
and
js
hlt
nop
push
jl
es
or
pop
test
or
jl
insb
pop
jb
adc
cltd
fidivrl
jp
jl
lds
lret
fisubrs
push
jae
jne
jns
pop
shlb
fucomp
fmuls
loop
adc
sarl
mov
jecxz
sbb
hlt
push
jmp
xchg
and
bound
data16
jg
ljmp
aam
dec
cld
xchg
cmpsb
cltd
xor
aam
adcl
cmpsl
mov
sahf
xchg
ja
aam
and
sbb
fwait
cmp
sub
add
inc
mov
pop
xchg
aaa
mov
sbb
test
mov
test
rorb
cmp
xchg
cmp
enter
add
fs
out
mov
movsl
lock
jle
sub
jle
fcoms
lret
das
je
into
and
and
add
mov
jne
jp
loopne,pn
movsl
mov
mov
dec
mov
enter
pop
je
push
fwait
jo
insb
fdivrp
xchg
loop
xor
mov
scas
popa
pop
insb
pslld
or
lods
mov
sub
cld
mov
stos
push
sar
neg
mov
aaa
iret
jg
fistpll
mov
imul
pusha
in
stos
and
sbb
jg
xchg
test
int
adc
mov
faddl
push
sbb
xchg
pop
sbb
or
andl
movl
add
cltd
mov
ds
hlt
xor
rclb
test
mov
cltd
js
addr16
hlt
stos
mov
add
push
mov
xchg
dec
inc
in
das
test
rolb
add
and
test
out
sti
sub
jmp
jno
fimull
xor
out
popa
fsubp
jmp
movsl
repz
add
movsl
fbld
jge
dec
ret
add
pop
jnp
adc
mov
dec
inc
arpl
imul
cmp
stc
dec
and
insb
inc
add
cmp
xor
push
xchg
adc
mov
add
insb
jge
inc
cmpsl
jg
inc
jb
es
and
sbb
clc
outsl
lods
jno
sbb
pop
mov
enter
out
jg
insb
inc
dec
loop
fistl
push
mov
pop
add
out
push
sbb
xchg
sub
mov
fcoml
mov
lea
adc
or
std
or
sbb
adc
mov
jp
adc
mov
sbb
pop
inc
xchg
in
into
adc
jecxz
inc
gs
mov
inc
push
lods
pop
inc
insb
das
sbb
lds
lret
adc
outsb
jp
adc
into
dec
add
fisttpll
pop
sub
nop
push
xor
enter
call
dec
xchg
add
sahf
dec
sbb
idivl
mov
adc
sbb
aad
xor
stos
movsb
mov
add
pop
pop
mov
jbe
pop
lods
scas
add
jp
scas
in
adc
xor
roll
mov
lcall
sbb
loope
inc
mov
jl
fwait
je
xchg
fwait
int
add
negb
mov
inc
cli
sbb
lcall
rol
sub
pop
pusha
or
dec
and
jmp
push
inc
dec
and
sub
mov
sbbb
fidivrl
mov
push
mov
cmp
addr16
xchg
mov
cwtl
cmp
imulb
fcmovu
das
add
inc
sub
mov
push
sub
ret
jnp
lods
xor
add
inc
sti
int3
pop
push
cmp
sbb
adc
adc
push
clc
inc
popa
shl
clc
lods
jmp
push
add
aas
add
mov
in
hlt
insb
xor
imul
xor
mov
xchg
imul
pop
out
mov
and
pop
pop
fcmove
mov
lods
lcall
add
into
inc
inc
jg
dec
adc
shl
jle
call
add
nop
and
es
sahf
xchg
sub
dec
xor
rolb
mov
sbbl
xor
dec
cmp
outsl
loope
or
or
or
stos
repz
into
jge
sbb
stos
pop
pop
addl
scas
lcall
adc
cmp
pop
cmc
sub
push
dec
push
fmull
mov
in
mov
andb
sahf
das
add
addr16
jge
mov
ja
sub
pop
out
add
mov
adc
adc
mov
ljmp
or
jo
rol
rol
rol
rol
rol
rol
rol
rol
ficompl
xchg
int3
clc
es
lds
cmp
and
adc
sbb
jb
popf
cld
xchg
or
xchg
push
pushf
and
pop
inc
push
mov
cld
cs
sarl
frstor
movsl
lss
xlat
jmp
lcall
jae
xor
mov
mov
cmp
inc
lods
sbb
adc
fildl
pop
cmp
push
test
movsb
aas
scas
push
mov
and
inc
mov
add
and
cmp
rorl
mov
dec
adc
ds
push
dec
jecxz
adc
jae
cmp
mov
sub
sbb
or
mov
js
jp
mov
jmp
jle
xchg
xlat
outsl
int3
cmpsb
lds
daa
andb
movsb
sarl
inc
jb
or
push
jecxz
add
das
into
fnstsw
sbb
adc
insb
inc
cmpb
stc
test
pop
and
inc
xorb
imul
sbb
pushf
pop
dec
ja
lret
hlt
dec
push
or
push
mov
sub
test
dec
sbb
xor
int
popa
ds
enter
inc
pop
stos
sub
xor
loopne
repz
or
cld
inc
decl
push
pop
notb
xchg
clc
cwtl
bound
std
xchg
fsubrl
xorl
add
and
sahf
inc
lcall
dec
adc
dec
dec
jle
bound
sub
lods
mov
and
stc
jmp
mov
cli
adc
cmpsl
push
roll
or
ja
xchg
sbb
sahf
xor
pop
bound
ljmp
lock
xor
fs
sbb
rorl
lods
rcl
out
stc
icebp
clc
pop
enter
push
loope
xor
add
js
lahf
pop
clc
cli
or
push
mov
jae
fistpl
negb
test
dec
cmp
pop
mov
pop
xchg
or
out
mov
sbbl
or
in
cwtl
push
dec
or
scas
lcall
xor
push
iret
mov
mov
mov
push
ret
xchg
leave
testb
xchg
mov
cli
sub
notl
insl
test
imul
xor
les
aas
dec
sbb
xchg
jmp
dec
sbb
bound
addr16
mov
cmpsb
cmc
adc
mov
sub
xlat
mov
jns
ficoms
cwtl
mov
and
push
push
fs
mov
xor
xchg
ficoms
push
lret
pushf
pop
or
enter
jae
leave
bound
mov
xlat
push
sbb
lcall
bound
sbb
rorl
xorl
push
in
lcall
push
dec
xor
mov
rorl
iret
jne
roll
jns
push
movsb
insb
sub
imul
testl
lds
das
mov
pop
fisubrs
or
sbb
into
shlb
or
mov
aad
sub
gs
and
sti
lods
mov
jnp
adc
push
cmp
xchg
add
xchg
push
mov
arpl
adc
dec
shll
cmp
imul
jo
mov
addr16
pusha
mov
fisttpll
jb
mov
into
outsl
aas
jb
and
xor
add
jge
lods
lret
arpl
or
rcll
cmp
hlt
popa
std
jbe
addl
jne
pop
cmpsb
mov
jl
pop
sbb
stos
mov
dec
mov
cwtl
mov
into
mov
adc
mov
das
inc
or
insb
bound
inc
mov
addl
dec
dec
and
das
add
lods
push
orl
add
mov
adc
cmp
fildl
lods
mov
jle
mov
sbb
cmp
xchg
leave
mov
xor
inc
rcrl
mov
inc
fdivp
xor
leave
aam
ja
xor
and
lods
and
insb
movsb
stos
sbb
jo
popf
gs
mov
push
int3
popl
inc
pusha
icebp
xchg
lret
cmp
arpl
ja
sbb
pop
xlat
out
std
jo
xchg
adc
inc
notl
ss
repnz
inc
ret
dec
inc
cmpsb
xchg
dec
pop
sbb
sarb
outsb
ljmp
test
dec
ret
in
mov
inc
das
sbb
inc
loop
shl
cmp
cmp
ljmp
loope
push
std
dec
xchg
jle
lods
adc
cli
jb
push
test
shl
enter
inc
xlat
lods
ljmp
mov
adc
cld
xor
mov
jne
jno
sbb
scas
sbb
dec
jb
int3
cs
iret
mov
repz
inc
sub
inc
outsl
insl
cmp
fwait
push
jno
mov
sti
sbb
mov
adc
faddl
add
mov
lahf
sbb
loop
push
ret
mov
adc
jecxz
scas
xlat
and
cmp
stc
xor
cltd
cli
in
out
push
push
into
hlt
mov
lock
lods
mov
fists
cmp
sub
arpl
xor
ficoml
or
ret
jno
pop
outsb
fisttps
icebp
xor
mov
sub
mov
dec
pop
or
aaa
rcrb
inc
shll
loop
mov
mov
xchg
arpl
dec
roll
xchg
loop
jl
or
jge
mov
les
cmp
push
dec
stc
lea
and
pushf
enter
ljmp
add
cmp
stos
xor
sbb
xor
insb
pop
push
dec
loopne
ja
hlt
and
mov
je
dec
scas
daa
pop
xchg
lea
xchg
out
and
nop
lcall
loope
negb
outsb
push
ss
xor
inc
pop
jle
test
dec
jle
stos
mov
cmp
xchg
lock
jne
inc
mov
cmp
icebp
xchg
mov
inc
adc
mov
cltd
mov
movsb
psubb
sbb
lret
cmp
mov
dec
rolb
cld
cltd
jge
test
lds
notb
pop
sbb
arpl
jmp
pusha
dec
inc
cli
lods
jge
jbe
pop
fcmove
sbb
lret
jmp
pop
add
js
xchg
adc
fisubl
int3
sbb
add
notl
cmc
cld
and
xchg
mov
adc
leave
stos
sbb
inc
ljmp
cmpl
jne
sbb
mov
mov
ljmp
out
sub
scas
push
mov
jne
xchg
sahf
nop
adc
loopew
rolb
dec
fucomip
sub
cli
lcall
dec
cld
es
push
inc
scas
pusha
cltd
xor
xor
push
pop
mov
sarl
ljmp
fsubrs
popf
les
sahf
rol
rol
rol
rol
rol
rol
rol
rol
adc
fistpll
xor
imul
jbe
cmp
cld
xor
cmpl
inc
es
cmpsl
aaa
pop
xchg
notb
jle
pop
xchg
mov
sar
jne
jne
addb
pop
sarb
cmp
xor
sbb
orb
pop
pop
dec
sahf
loope
dec
xlat
cmp
xor
jo
pop
cli
and
imul
sbb
jle
xor
clc
xchg
cmp
popa
rcll
inc
scas
sub
das
or
jne
inc
mov
in
das
sub
mov
pop
loopne
cmp
fldln2
call
ja
cmpl
rcr
push
xor
out
sub
inc
loope
sbb
loopne
inc
cmp
xor
fbstp
mov
lods
push
add
push
and
mov
idivb
mov
sbb
cmp
push
ss
je
in
pushf
push
or
imul
mov
ja
int
add
xor
jge
fidivs
nop
jbe
aaa
pop
dec
stc
jns
mov
inc
sub
test
or
ret
mov
mov
in
stos
cs
dec
lahf
pop
lahf
push
jmp
loop
adc
loop
ret
ds
mov
sbb
dec
sub
out
out
mov
stc
jae
dec
xor
nop
cld
push
cmp
das
jns
iret
ja
jb
push
cmc
lcall
cmp
jmp
xor
stc
pushf
sub
out
or
jge
ret
push
add
clc
notl
dec
xor
lods
int3
jb
rclb
lret
or
jno
jo
adc
outsb
cmp
mov
dec
mov
test
pop
iret
mov
orb
xor
pop
jle
cmp
idivb
testb
inc
push
dec
test
jle
aas
gs
push
inc
push
lods
xchg
mov
jae
repnz
lret
fldenv
inc
loop
lret
aaa
fiadds
clc
mov
ret
decb
and
das
sahf
inc
testb
das
aad
js
mov
xchg
addl
push
nop
pop
adc
movsl
jg
insb
insb
jno
push
mov
shr
fsubr
mov
xor
lret
cmp
iret
xchg
or
cltd
fs
push
jo
das
idiv
rol
jno
push
xor
ret
inc
mov
movsl
test
xchg
lea
aaa
jp
xchg
insb
lock
adc
inc
or
lcall
sbb
sub
push
sub
sub
cmp
mov
xchg
xor
pop
frstor
mov
push
in
add
inc
dec
mov
test
mov
sub
xchg
dec
ljmp
add
sub
pop
enter
daa
iret
xor
test
xchg
stos
push
cltd
addr16
mov
and
xchg
repnz
loopne
out
inc
jns
ficomps
jae
cmp
ds
jmp
iret
outsl
adc
and
mov
mov
mov
jnp
ja
xor
sahf
add
and
mov
mov
pop
lahf
mov
in
xorb
adc
dec
lretw
int
scas
cmp
jecxz
fisubs
xchg
sbb
call
jecxz
out
push
jb
sub
sub
int3
xor
ret
fs
je
imulb
jle
aad
sub
lret
adcl
mov
fs
scas
cwtl
xor
sbb
mov
aas
orl
push
loop
adc
mov
jne
xor
test
xor
sbb
out
cmc
lcall
stc
mov
shlb
cmp
pushf
push
inc
sbb
mov
sti
mov
push
and
pop
jle
dec
scas
fwait
push
push
mov
loopne
lea
push
rorb
mov
testl
pop
out
mov
mov
js
mov
lods
pop
inc
sub
push
dec
jno
out
adc
les
fs
mov
pop
inc
jl
and
mov
mov
dec
gs
popa
push
ja
adc
xorl
push
shrb
stos
lret
stos
jnp
in
push
jbe
stos
leave
pop
fldt
setl
sbb
jns
mov
cld
adc
add
cld
inc
jecxz
mov
mov
sbb
clc
pop
and
mov
clc
push
sub
mov
shrb
shrb
inc
jmp
fcompl
xchg
rolb
xor
and
push
adcb
loop
add
das
shll
add
add
dec
sbb
mov
mov
jbe
sbb
inc
inc
mov
and
inc
fnstcw
loop
call
cmc
mov
test
jo
xor
xchg
add
jb
les
lret
das
push
dec
add
popf
add
mov
add
pop
cltd
xchg
shrl
push
inc
aad
inc
popa
fdivrs
jns
xlat
xchg
mov
xor
push
ljmpw
and
test
sub
and
aaa
cltd
xor
rolb
adc
sbb
cltd
rcr
and
pop
mov
push
pop
pop
cmpsl
adc
xor
dec
inc
jle
pop
push
ja
pop
sbb
int3
xor
jnp
test
mov
sub
jecxz
mov
jp
aad
stc
xor
loopne
jmp
in
lock
cmpsb
push
and
pop
xor
push
sbb
push
inc
inc
pusha
inc
or
mov
inc
cmp
test
dec
movsb
sub
cs
pop
dec
xor
push
jnp
cld
jne
jnp
pop
mov
dec
sbb
pop
jg
or
fsub
lcall
loope
xchg
int3
or
jb
push
dec
jne
push
addl
push
pop
out
push
jg
jbe
outsl
inc
sbb
pop
out
jb
outsb
xchg
cmpsb
sub
inc
pushf
or
mov
and
ljmp
cmp
lahf
mov
mov
mov
or
roll
mov
dec
mov
xchg
in
sahf
fstps
push
movhps
cmc
jle
out
cmp
out
outsl
shlb
push
mov
cltd
mov
daa
ficompl
jbe
mov
mov
scas
push
inc
mov
mov
test
cs
es
iret
lea
fdivr
adc
inc
jle
push
pop
mov
pop
mov
cmp
repnz
push
popf
xor
ss
adc
in
xchg
cmp
divl
icebp
and
xor
ljmp
push
test
mov
pop
mov
hlt
cmp
repz
gs
push
pop
ljmp
jp
mov
in
outsb
mov
pop
mov
or
in
test
add
or
dec
and
imul
jno
jbe
int
scas
pop
addb
xchg
sub
inc
stos
cmp
pop
stos
inc
movsb
mov
repz
in
and
scas
sbb
test
aaa
stos
aaa
pop
out
pop
xchg
inc
insl
mov
pusha
mov
ss
mov
loop
ss
xor
in
aaa
add
push
mov
dec
arpl
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
shlb
mov
pop
test
jg
gs
addr16
sub
jg
xor
and
add
push
pop
mov
push
push
ljmp
sar
jg
jl
xchg
bound
mov
adc
popa
pop
inc
add
enter
movsl
arpl
imul
dec
pop
inc
call
push
xchg
xor
cmpsl
int
adc
js
inc
push
pushf
pop
ss
cmp
lock
push
or
clc
mov
cmp
sti
or
sub
mov
imul
xchg
push
lods
sar
lret
add
jmp
sub
dec
test
or
arpl
pop
cmp
mov
mov
mov
cmp
xchg
addl
inc
pop
leave
dec
insl
ficompl
push
mov
xor
popf
pop
pop
and
inc
fimuls
das
mov
test
and
dec
or
out
sbb
icebp
sarb
int3
lret
out
xchg
stos
ror
jg
mov
push
imul
pushf
add
cwtl
lahf
mov
out
sbb
xchg
sub
in
mov
fdivl
cs
dec
dec
push
xlat
dec
mov
inc
pop
push
jo
adc
xchg
sti
xchg
inc
rcr
mov
jbe
insw
pusha
scas
jp
rcrl
jae
mov
inc
imul
hlt
ss
pop
push
dec
scas
add
or
sti
bound
jo
xorl
jne
push
jl
push
fs
jo
mov
sbb
aam
mov
push
or
push
add
dec
or
mov
mov
cmp
cltd
jbe
push
and
pop
jnp
push
stc
adc
cmpsb
sbbb
jmp
dec
adcl
insl
repnz
push
jle
in
in
jbe
cmpsb
sbb
std
pop
mov
bound
test
cs
add
test
mov
push
pop
or
sub
mov
test
into
sub
les
repnz
jl
and
pop
mov
mov
sbb
dec
les
cltd
push
inc
orb
and
or
mov
pop
jno
sub
inc
mov
out
stos
pop
out
pop
dec
pushf
cmp
mov
push
dec
xchg
outsl
lret
xor
jecxz
xor
cmpsb
mov
jns
cli
ljmp
mov
mov
idivb
fsts
aaa
cmp
pop
adc
es
sub
jl
bound
mov
inc
inc
add
gs
xchg
repnz
insl
adc
ja
push
xor
sbb
cmpsl
mov
loope
add
cmpsl
push
dec
xchg
movsb
dec
sbb
or
test
and
or
dec
push
push
cwtl
je
insb
xchg
fcmovu
cmp
mov
push
xor
push
stos
cmp
push
lahf
inc
int
std
adc
stc
dec
push
xchg
add
outsb
loop
lahf
and
in
inc
pop
mov
jns
cwtd
stos
ljmp
pusha
add
cmpsl
xchg
sub
sbb
ja
mov
std
lcallw
adc
lds
cmp
pop
ret
ss
out
pop
jns
jecxz
movsl
mov
jmp
lahf
sbb
lock
jnp
inc
cmpsl
mov
pmulhw
or
pop
and
js
sbb
loope
fwait
push
mov
ss
shlb
bound
subl
js
call
pop
lds
xor
in
ret
jae
xlat
in
lods
sahf
ja
jo
xor
mov
mov
sbb
xchg
mov
xchg
sub
ss
test
push
iret
es
pop
and
or
adc
popf
stos
jae
loop
dec
filds
sub
imul
mov
mov
ret
rcrl
cmpsb
scas
sub
movl
ret
or
and
add
cli
sbb
xor
mov
adcb
and
insb
sbb
cmc
cmp
ret
or
sub
cli
out
push
rcrl
ss
xchg
jmp
or
dec
mov
sub
loope
hlt
call
and
das
rolb
fmuls
sbb
ja
inc
dec
xchg
repnz
ds
cmp
dec
js
and
loope
mov
cld
cmp
cwtl
push
push
jne
push
setp
out
jnp
jge
insb
sub
std
loopne
lahf
test
xchg
pop
and
pop
aad
scas
call
and
mov
jl
add
stos
bound
cli
xchg
and
fbstp
sbb
ds
mov
push
iret
jo
lcall
adc
mov
fs
dec
outsb
insl
insb
mov
mov
mov
adc
lret
fidivl
lahf
shrd
dec
mov
cmp
pop
mov
call
cmc
adc
pop
sub
pop
loop
xor
dec
mov
in
popf
fldt
sbb
push
add
lods
clc
pop
bsf
adcl
popa
xor
sub
push
push
pop
mov
jbe
enter
add
inc
outsl
inc
fcompp
mov
inc
adc
idiv
in
fmull
sbb
mov
push
lahf
lahf
sub
jns
test
ss
rorb
add
xchg
inc
lds
mov
xlat
mov
mov
mov
sbb
clc
mull
and
cmp
bound
cmpsl
or
out
jae
shrl
out
aaa
push
test
icebp
mov
cs
cli
dec
or
jae
sbb
mov
cmovns
pop
dec
ud0
in
mov
bound
mov
loope
fst
push
add
sarl
out
sub
xlat
repz
mov
add
nop
dec
popa
ds
sahf
lcall
gs
sub
xchg
dec
out
push
out
xchg
popa
xchg
insl
stc
hlt
pop
mov
xor
mov
lcall
nop
leave
xchg
jl
movl
pop
xchg
jb
jnp
push
js
push
movsb
aaa
stc
stc
dec
test
push
test
out
ret
push
pop
mov
sub
sub
dec
mov
mov
mov
icebp
xor
sbb
pop
into
cmp
sbb
fs
xchg
jge
push
push
repnz
push
pop
into
jge
and
sub
mov
dec
leave
lahf
out
cmp
test
push
iret
mov
jb
fisubs
xor
or
in
inc
stos
jo
cltd
rcrl
mov
insb
xor
rclb
add
aad
lock
add
pop
sub
das
pop
push
shll
mov
repnz
sti
push
mov
insb
gs
and
and
fs
sbb
sarl
popl
bound
in
xlat
cmp
sbb
in
push
sbb
test
jo
xor
idivb
jns
xchg
and
xor
xchg
jge
mov
ljmp
inc
pop
dec
bound
sub
xor
mov
fdivr
insb
sub
jo
loopne
sbb
sbb
jg
jl
and
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
sti
push
stc
stos
lahf
aad
addr16
insl
sub
xchg
ss
pop
popa
shlb
mov
xchg
cmp
jnp
sub
dec
cli
mov
je
sbb
xchg
sarb
ds
add
out
adc
jae
mov
xchg
dec
insl
push
sub
pop
pop
cld
and
cli
cmp
rcr
iret
xor
arpl
push
sub
shl
andb
and
sbb
lret
nop
mov
jns
rcll
add
add
pop
push
add
test
push
mov
mov
arpl
hlt
inc
jae
outsb
mov
sarb
test
mov
sub
pushf
add
push
jb
xor
xchg
icebp
inc
inc
not
push
xor
test
push
sarl
add
jns
sbb
insb
adc
cmp
loopne
mov
pop
mov
cmp
adc
jb
jb
jmp
inc
inc
and
jp
insb
into
sbb
adc
xlat
dec
dec
jno
outsl
mov
lock
inc
add
sub
not
inc
imul
rolb
mov
mov
lds
push
enter
andb
xor
pop
cli
jno
insb
cmp
mov
fldl
lock
dec
jns
hlt
lret
mov
xchg
xchg
inc
push
mov
icebp
pop
xor
jne
shll
ja
repnz
test
iret
and
mov
test
xchg
aas
js
xor
rclb
in
gs
jle
aaa
call
enter
push
cmp
fcomi
jae
dec
add
adc
mov
popf
stos
and
call
inc
add
or
inc
mov
and
cmpsl
cwtl
mov
int
icebp
mov
stos
push
outsb
sub
repz
rolb
push
xor
fbstp
push
xchg
push
cmp
fisubs
push
imul
enter
aaa
jecxz
out
mov
mov
jmp
add
ja
iret
sahf
mov
sbb
lahf
cmp
and
mov
int3
jecxz
fwait
inc
loopne
ds
xchg
xchg
aam
divl
or
inc
in
or
mov
stc
cmp
mov
xchg
jmp
pop
push
xchg
rcl
adc
mov
das
and
inc
addr16
xchg
add
gs
into
mov
loop
insb
popf
push
or
and
dec
cmpl
test
mov
mov
in
dec
sbb
adc
popf
idivb
push
sbb
jp
mov
mov
dec
out
shrb
pop
push
pop
or
test
hlt
pop
inc
add
movsb
fisubs
stos
icebp
mov
xchg
xlat
xchg
cltd
mov
mov
jl
fidivl
sub
sti
xchg
popa
lcall
lret
and
aas
jle
push
mov
sbb
fidivl
shlb
xchg
and
daa
out
adc
shrb
movsb
jle
jecxz
adc
popa
pop
shr
lds
ljmp
adc
dec
cmpsb
mov
in
punpckhbw
xor
fimuls
nop
jge
ja
fisttpl
push
push
mov
mov
cmpl
xor
lods
xchg
jb
sbb
adc
and
int3
cmc
cwtl
sbb
mov
and
js
cli
js
sbb
cs
int3
in
push
and
mov
mov
enter
dec
sub
or
adc
xchg
ret
sbb
pusha
jl
and
orb
subl
mov
pop
mov
sub
push
iret
insb
idivb
push
adc
dec
sub
jns,pn
inc
inc
test
push
jl
cmp
xchg
js
pop
push
loop
ret
loop
mov
repnz
aas
push
xchg
sub
lea
pop
add
subb
imul
mov
mov
push
mov
mov
outsb
les
lcall
repnz
push
pop
xlat
xor
xchg
fldenv
xchg
pop
rolb
repnz
daa
sub
add
xchg
add
mov
repz
ds
jo
mov
push
mov
dec
cmp
mov
cmp
inc
dec
aas
xchg
cwtl
inc
jo
pop
xchg
xor
sti
testb
mov
insb
sub
inc
mov
dec
xchg
xchg
mov
cmc
imull
xchg
add
and
scas
xchg
daa
push
or
and
jecxz
sub
scas
cs
push
or
aam
pop
leave
mov
xlat
mov
mov
push
mov
repz
inc
jne
push
cltd
sbb
test
or
stos
or
cmp
lods
shrl
imul
repz
cmpsb
cmp
mov
mov
cltd
cmpsb
adc
push
loop
mov
cmpsb
das
nop
rorb
xor
orb
xor
adcb
add
mov
adc
and
sarl
nop
jp
sbb
add
add
or
fwait
ds
cmp
orb
xchg
push
jp
xchg
push
xor
dec
pop
in
cmp
pusha
mov
ljmp
sahf
jge
dec
popf
into
xlat
cmpsl
shlb
mov
or
negl
je
loope
es
and
pop
mov
mov
rcrl
aaa
cltd
mov
xchg
xchg
mov
inc
dec
mov
sbb
xchg
shl
inc
inc
sbb
lods
inc
pop
xor
xchg
cs
xchg
scas
mov
or
imul
add
loopne
push
fbld
mov
es
and
lods
xor
das
dec
stos
xchg
daa
add
cwtl
adc
xor
out
and
subb
scas
sub
pop
inc
jns
aaa
bound
inc
cltd
mov
cli
es
outsl
fisubrs
and
aas
cld
test
nop
xor
js
test
std
cli
mov
repz
stc
call
out
subl
sbbl
rol
xor
jb
lock
pop
mov
sub
stc
mov
test
jg
test
push
idivb
ja
push
xor
sub
fbstp
and
cs
xchg
mov
dec
xor
iret
lea
test
das
xchg
in
lahf
pop
xchg
dec
aaa
xchg
inc
cmp
pop
ret
jmp
dec
lret
mov
sub
jnp
adc
sub
sbb
inc
bound
lods
pop
jns
mov
popa
sub
jp
push
xchg
test
fisubrl
push
push
loopne
sbb
inc
sbb
ljmp
mov
inc
fistl
mov
jmp
push
xchg
test
jo
aaa
push
cmc
mov
or
jg
xchg
mov
and
jl
std
imul
mov
xorl
lahf
jp
movsb
xchg
cs
outsl
xor
ljmp
inc
iret
sub
jmp
jmp
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
shlb
or
mov
inc
dec
je
insl
ljmp
mov
stos
mov
inc
mov
mov
loop
insl
xor
push
enter
pop
jg
in
jb
imul
jae
dec
xchg
xchg
jl
stos
mov
and
push
ret
push
nop
push
shlb
nop
pop
mov
bound
lock
out
jbe
les
mov
lcall
xor
cltd
mov
notb
xchg
push
pop
in
pop
or
xchg
xor
adc
into
popf
sub
js
push
xchg
xor
addr16
mov
and
rcrb
and
cmp
fbld
int
or
cmp
icebp
add
mov
jp
pusha
rcrb
add
lcall
xchg
xchg
stos
je
pop
jl
sbb
or
xor
mov
fists
mov
or
sbb
out
dec
mov
leave
jle
popa
add
movsl
push
dec
adc
pop
and
adc
divb
xchg
int3
test
fcmovu
push
push
pop
out
jge
iret
mov
mov
rol
sbb
cmpb
mov
repz
rcrl
pop
pusha
fsubl
and
pop
sbb
sbb
add
popf
sub
inc
pop
fsubr
xchg
hlt
cli
ror
mov
js
cld
sbb
sbb
ror
movsb
xor
or
fists
or
cmp
cmove
scas
jge
adc
out
lret
sbb
lcall
scas
mov
data16
int3
adc
pusha
or
sbb
sub
ret
cmpsl
das
pop
je
aas
loope
inc
and
leave
xchg
add
fwait
xor
jns
addr16
mov
loopne
call
das
sbb
insl
pop
cs
sub
mov
push
fdecstp
xor
mov
jnp
outsl
mov
cltd
in
mov
ret
push
xor
inc
jge
mov
in
xchg
sbb
repnz
push
pop
pop
fwait
and
mov
lods
sub
inc
bswap
pop
cmpsb
cmp
flds
jnp
jb
mov
fsubl
int
inc
in
and
jmp
ss
test
cmp
inc
cmpsb
test
mov
fldenv
mov
dec
mov
xchg
aad
adc
xchg
aad
stc
and
sub
imul
cmc
adcl
push
imul
mov
into
mov
jno
clc
mov
insb
daa
xchg
add
or
jno
sub
pop
aas
inc
or
out
dec
insl
into
shrl
in
jmp
je
mov
dec
pop
sbb
cmp
pop
push
testl
xchg
mov
sub
dec
xor
cmp
arpl
sbb
rcrb
idivl
out
shr
xor
cmp
ljmp
sub
int
fst
lods
js
dec
xchg
addr16
cmp
push
js
push
test
pop
adc
out
jne
pop
xor
sub
fadds
and
mov
data16
pushl
popa
xchg
scas
inc
jbe
xchg
dec
mov
jb
mov
or
or
adc
cmp
rclb
popf
cmc
dec
aas
in
leave
and
test
sbb
mov
xorb
jmp
push
stos
jb
lcall
cld
ds
and
stos
xor
xor
leave
out
scas
mov
movsb
and
fadd
mov
add
or
in
pushf
inc
lret
sahf
sub
adc
addl
sbb
ss
cmp
push
popa
test
sahf
mov
outsb
and
jle
scas
mov
sub
cmp
int3
insb
out
mov
nop
and
hlt
jmp
nop
xchg
xchg
or
sarb
mov
fmull
lret
rcl
iret
movsl
mov
bound
ljmp
pop
movsb
xor
pop
xchg
inc
cld
test
fsubl
cmp
xchg
xchg
lret
xchg
inc
lods
sbb
pop
loope
stos
cmpsb
dec
aaa
dec
jnp
cmp
add
mov
xor
mov
jl
out
inc
std
jle
jecxz
mov
repz
lock
loopne
mov
das
xchg
int3
sub
adc
and
shlb
jns
out
mov
into
mov
jnp
sti
pusha
lods
xchg
xchg
cmp
test
ss
inc
loopne
lods
add
xor
mov
cli
mov
fidivs
mov
pop
dec
sub
test
std
lods
pop
int3
mov
cmpsb
mov
movsb
add
insl
mov
inc
xchg
repz
mov
inc
sarb
inc
pushf
or
inc
out
arpl
cmp
fdiv
push
jb
inc
ljmp
inc
cmpb
and
ret
orl
leave
das
cmp
insb
cld
and
rolb
add
xorb
sbb
pop
shr
aam
sbb
adc
mov
xor
cli
mov
push
ret
incl
pop
aam
push
add
ja
and
cmp
pushl
mov
push
xor
dec
mov
ljmp
ret
and
sahf
fs
or
ljmp
adcb
cwtl
pop
sbb
jmp
push
push
stos
dec
out
lods
pop
int3
cs
mov
repz
mov
outsl
mov
xchg
mov
cltd
and
and
push
inc
lods
push
cli
sti
aad
adc
gs
rolb
je
daa
insb
and
xor
mov
std
mov
cmp
cmp
cli
imul
cmpsl
inc
sub
ret
cmp
subb
inc
in
and
and
in
fabs
fadds
into
cwtl
add
dec
mov
dec
in
lods
mov
xor
loopne
or
fidivrl
roll
jb
fistl
xor
aas
scas
mov
mov
negb
iret
add
fwait
pop
pop
adc
ja
stos
insl
mov
loope
cmp
or
adc
das
sub
push
mov
gs
arpl
and
rcrb
ds
je
xchg
or
cmp
sub
sarl
fdivs
mov
push
or
ss
jmp
or
dec
scas
dec
dec
dec
pop
outsb
sub
mov
mov
add
mov
pusha
push
sub
loop
rcl
cmp
call
sbb
add
dec
data16
sbb
js
sarl
pop
mov
test
adc
stos
or
jbe
lcall
sub
sti
mov
dec
sub
ror
sbb
pop
push
bnd
cmp
fistl
iret
icebp
cmpsl
cmp
push
mov
imul
hlt
jle
add
shll
ret
and
cli
lock
icebp
jne
jp
jmp
dec
movsl
sbb
sbb
rol
rol
rol
rol
rol
shr
fwait
mov
sbb
push
adc
add
lret
add
cmp
pushf
push
push
addr16
movsl
movsl
dec
mov
sbb
mov
jmp
mov
aad
test
push
dec
arpl
mulb
dec
das
jmp
outsb
mov
fsubs
aaa
dec
sub
mov
sub
movsb
sbb
and
adc
iret
pop
iret
fwait
mov
testb
inc
jp
lcall
hlt
sbb
out
ds
loop
and
rorl
insl
sti
jb
adc
inc
push
pop
add
nop
mov
or
cld
bts
shll
clc
dec
push
sub
ds
cmp
mov
loope
fdivr
xchg
mov
pop
pop
push
psllw
iret
pop
repnz
jge
shrb
test
js
daa
mov
jbe
xchg
cwtl
push
mov
mov
pop
pop
xor
leave
leave
and
mov
jmp
and
pop
inc
push
es
addl
xchg
fisubs
push
lahf
dec
pop
push
push
sti
sbb
inc
cmpsl
mov
cmc
xor
xor
add
jl
shlb
clc
jge
xor
jge
sbb
leave
mov
scas
sti
test
cmc
fdivr
stos
aas
sub
push
mov
inc
es
movsl
adc
push
pop
sbb
sub
xor
popa
push
jbe
jno
jne
iret
cld
rorl
and
add
dec
repz
adc
mov
jg
sub
push
jecxz
fcomps
xor
sub
adc
or
mov
clc
pop
and
push
pop
out
mov
add
xchg
test
hlt
shrb
push
fcmovnu
sub
inc
pop
ljmp
mov
jle
cmp
sbb
xor
inc
pop
pop
clc
lods
mov
rorl
push
and
lcall
test
and
xor
jg
xor
dec
cmp
dec
pusha
fists
and
mov
dec
jns
sbb
jle
int
pop
in
rcl
cmp
add
data16
xchg
sbb
push
sub
lods
gs
and
cwtl
mov
sahf
jge
inc
mov
lds
dec
jbe
arpl
dec
in
or
fs
pop
jne
and
and
ret
aad
aad
push
sbb
aad
or
add
cmc
cmp
jno
pop
add
inc
outsl
or
fs
clc
mov
pop
mov
scas
cld
ljmp
push
jo
outsb
mov
push
add
fnstsw
bound
aad
das
jle
syscall
inc
loope
mov
ret
add
in
insb
push
xor
dec
mov
pop
sbb
lock
pop
push
xchg
ss
mov
fistpll
fisttpll
aas
iret
mov
in
fld
loop
pop
mov
jb
pop
add
jp
mov
es
xchg
pop
pop
mov
pop
mov
or
push
aaa
jp
nop
aas
xlat
call
test
dec
mov
adc
loopne
movsb
fisubrl
hlt
xchg
and
mov
xchg
push
mov
inc
dec
push
fcoms
pop
data16
mov
pushf
xlat
pushf
in
testb
pop
jnp
inc
or
jl
in
mov
testb
pop
jne
add
xchg
cld
jno
xrelease
in
mov
cmpsb
mov
pop
inc
cli
push
jo
clc
fs
adc
mov
mov
dec
rcr
push
pusha
cmp
cld
jmp
int
test
xchg
ljmp
mov
stos
jge
xor
loopne
loope
jecxz
iret
lcall
mov
test
call
scas
or
pop
rcrb
mov
test
pop
clc
inc
sahf
push
pop
outsl
mov
sub
or
and
int
sub
fcmovbe
fnstenv
lahf
cmp
aaa
pop
adc
mov
mov
insb
divb
jg
imul
aas
stos
cmp
outsb
cltd
iret
and
jae
xchg
fdivs
jle
push
aaa
push
push
jle
scas
insb
inc
lcall
cmc
stos
dec
sub
call
fucomip
divb
shll
or
fwait
or
adc
pop
push
sub
fidivl
inc
aad
pop
fs
jns
adc
mov
mov
xchg
mov
cld
pmaddwd
test
jbe
cmp
pop
cmpb
and
dec
xor
lods
inc
hlt
push
stos
rcr
jge
mov
int3
pushf
stc
xor
sbb
std
lret
pop
mov
lret
cld
jle
cmp
dec
movsl
cmp
cmp
push
pop
sbb
mov
pop
data16
and
lea
pop
mov
mov
ja
stos
xchg
mov
scas
insl
jo
push
inc
pop
pop
sbb
jo
cltd
or
xor
std
mov
inc
xchg
push
inc
scas
pop
mov
xchg
test
jne
sbb
xchg
and
shrb
rclb
and
insl
pop
sbb
push
cmpsb
dec
mov
fsubrl
scas
xlat
ficoml
fists
cli
jecxz
int3
inc
sub
adc
xchg
shrb
xchg
fsubs
repnz
dec
adc
and
cs
dec
jo
jbe
or
ss
js
shrb
jbe
xchg
das
mov
dec
pop
sbb
mov
inc
imul
push
mov
scas
pop
dec
loop
test
addb
hlt
adc
cwtl
dec
ret
push
insb
jbe
pop
or
sbb
flds
jbe
fcompl
push
gs
sbb
pop
iret
mov
testb
sub
call
arpl
or
xchg
lock
shlb
je
xchg
mov
cmpsl
add
loop
add
mov
pop
push
xchg
or
xchg
add
lcall
mov
dec
and
jmp
cmp
cmp
add
jg
fidivrl
aaa
cmpsb
ficoml
jns
sub
pop
rorb
jne
adc
dec
xor
pop
fldcw
sub
pushf
test
or
test
dec
dec
jb
outsl
mov
ss
push
mov
mov
inc
dec
or
int3
loope
clc
xorb
pop
pop
je
lahf
push
int3
cmp
lea
pop
scas
mov
iret
arpl
pop
inc
in
icebp
sub
mov
xor
jg
mov
xchg
loopne
stos
xchg
rorl
rorb
es
pop
adcb
addr16
clc
cmp
sahf
test
pushf
test
stos
mov
mov
cli
in
jge
push
imul
and
cltd
xor
mov
imul
mov
out
mov
dec
sti
cmc
jecxz
inc
xor
test
jmp
mov
add
mov
mov
xchg
test
sbb
push
inc
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
and
ja
add
or
cmp
stos
cmp
push
jmp
scas
jg
or
stos
push
jmp
ss
stc
inc
jp
and
sub
cltd
ds
push
out
call
cmpsl
pop
sbb
jo
call
and
pop
es
mov
inc
cmp
cmovge
repz
lret
xchg
pushf
inc
mov
pop
mov
ljmp
imul
test
mov
push
mov
aam
pop
sbb
cmc
flds
pushf
cmp
adcb
lods
or
push
push
jnp
jl
daa
pop
pusha
aaa
jp
movsl
jbe
mov
pop
sub
daa
shlb
ss
das
cltd
pop
js
xchg
rorl
jae
ss
leave
cli
rclb
xor
arpl
imul
and
xor
xchg
xor
or
cmp
dec
negl
lret
xchg
adc
add
outsl
xchg
mov
rolb
inc
adc
push
mov
into
loop
divl
mov
add
aam
sub
add
xor
xchg
dec
push
mov
bound
sub
inc
xchg
add
jp
or
dec
pop
jno
xchg
mov
ja
pop
out
xor
fucomp
cwtl
mov
das
mov
lret
sahf
and
ret
adc
sub
or
jge
aas
pop
xchg
scas
xor
aas
mov
dec
cmpb
mov
jecxz
push
xor
push
aaa
sbb
es
mov
cmp
inc
js
popa
popa
inc
arpl
jl
movsl
outsl
push
adc
inc
push
shlb
in
cmc
cmp
mov
mov
sbb
mov
ret
imul
push
shl
add
cmpsb
fiaddl
inc
inc
cwtl
ret
sti
add
stos
sbb
mov
or
and
jo
xchg
gs
outsb
push
int3
cmp
fwait
mov
ja
call
xor
and
loopne,pt
lret
jne
mov
sub
pop
sbb
mov
iret
mov
iret
push
xor
and
inc
lods
int
sbb
cmpsb
pop
lea
aam
jne
addr16
mov
adc
daa
aaa
bound
xor
std
lea
mov
push
sub
jo
fmuls
jb
insb
jg
cld
fbstp
movsb
in
push
or
add
vcomiss
jmp
adc
je
adc
and
fldl
mov
xor
repnz
dec
or
cmp
punpckhdq
fwait
int
cmp
es
sub
call
lods
incl
dec
inc
loop
dec
cmpsb
inc
pop
sbb
ljmp
clc
jecxz
lret
rorl
push
into
xor
mov
fldl
push
std
jp
sub
cmp
cmp
inc
mov
test
add
cmp
out
push
fadds
and
and
fildll
stc
jne
xchg
dec
sbb
lds
data16
mov
push
lea
ljmp
push
mov
lcall
insl
call
sbb
or
add
je
mov
sbb
lods
imulb
sbbb
add
insl
jne
fiadds
xor
pop
outsb
aam
negb
push
out
xor
aad
xchg
cmp
bound
sub
int3
lcall
push
data16
mov
xlat
ljmp
hlt
fcompl
les
pop
bnd
mov
add
sub
arpl
add
je
test
dec
call
addl
or
lock
xchg
lea
xor
aad
repz
ficomps
xchg
xor
or
lcall
insb
addl
int
fcoms
rclb
and
inc
sbbl
adc
inc
adc
imul
in
pop
cmp
lret
outsb
push
and
mov
xchg
push
sbb
je
adc
xor
jnp
sub
les
lret
add
sbb
mov
sub
adc
out
add
dec
es
movsb
test
and
aas
mov
sub
ror
rcrb
xor
xor
cmpl
mov
mov
mov
pop
stos
jne
pop
sbbb
xchg
aaa
jns
push
mov
add
dec
lods
movsl
push
out
repz
xchg
stc
repz
pop
sti
test
mov
push
cwtl
add
push
repz
hlt
dec
sub
int3
dec
sbb
add
cmp
aad
jmp
push
lret
aas
sbb
and
loop
mov
dec
mov
imul
lret
fdivrl
sbb
lods
addb
out
mov
push
cmp
pop
into
xor
dec
movsl
jbe
loopne
push
and
dec
add
sbb
enter
jnp
dec
cmpl
xor
sti
adc
sub
insb
jae
mov
stos
outsb
dec
mov
sub
push
push
push
repz
mov
movsl
mov
pop
lahf
push
inc
jp
sbb
mov
repnz
jb
mov
testl
push
jg
mov
addr16
xchg
cmp
pop
rclb
movsl
xchg
push
movsl
and
and
and
push
hlt
pop
jg
xlat
jbe
addr16
add
aam
scas
mov
lea
mov
scas
clc
cli
loope
jbe
mov
pop
mov
sub
xor
inc
stos
push
mov
cltd
sbb
inc
push
mov
and
xchg
in
jp
negb
mov
and
sub
je
xchg
fists
clc
sti
jo
movsl
sti
insl
xchg
or
mov
loopne
push
sub
or
cmpl
sahf
fimull
sub
jge
stos
out
mov
add
pop
sbb
sbb
dec
popa
sub
push
or
out
movsl
push
and
cltd
inc
es
push
std
sub
mov
bound
and
leave
jmp
mov
jecxz
mov
sbb
arpl
mov
mov
popf
xchg
jo
and
inc
loop
out
sbb
dec
cmp
lcall
push
cld
cmpsl
sub
rolb
push
aaa
notb
pushw
and
mov
iret
mov
cld
dec
push
fwait
mov
cmp
inc
mov
xor
cmc
xchg
shll
adc
mov
xchg
fld
lea
rolb
gs
push
lret
mov
sub
insb
loopne
fldl
gs
add
fsubrs
push
jp
xor
sub
push
adc
sbb
scas
lret
movsl
xor
push
push
dec
mov
pop
mov
push
ja
sbb
ret
mov
pop
pop
push
xor
hlt
inc
das
stos
add
das
pop
push
mov
lock
push
cli
sbbl
pop
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
jb
insb
outsb
inc
add
pop
add
idivl
or
gs
sub
jge
fdivrs
iret
test
shll
vmwrite
xor
jecxz
leave
mov
cmpb
daa
dec
cmc
pop
adc
mov
lds
ds
push
stc
xor
sub
inc
fs
call
jbe
pusha
repz
int3
xchg
pop
push
push
mov
popa
mov
cmp
lea
push
data16
dec
lock
stos
sbb
inc
dec
mov
sbb
push
push
mov
mov
inc
aad
xchg
pushf
inc
aas
sbb
mov
pop
xchg
jno
cmpsl
dec
repz
gs
sub
sub
ja
or
stc
jbe
cmp
lret
xor
lods
sbb
mov
dec
daa
mov
sbb
sahf
rolb
sbb
dec
and
cltd
cwtl
scas
das
push
jecxz
mov
cmp
sbb
out
add
faddl
jl
cmc
lea
or
in
std
aas
xchg
mov
data16
dec
pop
out
in
test
sbb
dec
stos
into
mov
and
ficoml
xor
dec
inc
mov
pop
adc
mov
sub
and
fcomps
jle
loopne
pop
and
in
fsubr
sbb
add
leave
jnp
mov
and
mov
pop
std
cli
and
aad
jge
jb
xor
jo
addr16
lods
add
adc
dec
andnps
pop
insl
out
inc
es
push
cli
pop
in
mov
lret
xchg
adc
jae
in
inc
pop
jg
or
mov
lcall
sub
lea
ss
call
xor
xchg
adc
pop
out
mov
je
pop
and
clc
out
out
scas
adc
rcr
pop
mov
and
data16
imulb
push
jbe
or
xorl
and
aam
xor
and
dec
mov
loopne
and
mov
shrl
or
loop
cmpsb
push
xchg
jmp
es
add
inc
lea
mov
mov
loope
les
push
lret
fwait
shrb
inc
cmp
mov
rorb
and
test
sahf
pop
xor
int3
mov
and
dec
pop
inc
cli
cli
cmp
xchg
test
cmpsb
std
data16
cmp
jmp
sbb
pop
lods
ja
sbb
mov
sub
sub
sbb
xor
cmovle
push
test
mov
mov
pop
cmp
mov
mov
nop
push
jnp
push
push
dec
mov
pop
jbe
call
sub
cs
cs
mov
in
inc
test
ja
jmp
sbb
xchg
clc
jbe
in
sub
imul
std
bound
nop
xor
adc
push
movsb
adc
push
ret
jo
aaa
xor
mov
mov
imul
ljmp
dec
inc
hlt
lock
hlt
ret
mov
jmp
adc
clc
pop
inc
clc
in
jne
pop
sbb
adc
inc
sbb
inc
mov
or
divl
mov
cmp
inc
push
lock
pop
or
loope
pop
sub
popf
pusha
mull
cmpsb
daa
or
mov
leave
enter
movsb
xchg
or
lret
test
pop
stos
shll
dec
and
xor
scas
jbe
push
jmp
mov
push
sahf
or
xor
xchg
pop
jae
jmp
fs
xchg
orb
leave
shrl
add
or
add
cld
insb
inc
jbe
inc
test
pop
in
inc
mov
mov
loop
cmp
gs
popa
pop
mov
test
es
jb
lret
das
and
ljmp
pop
test
sbb
jne
repnz
cmpsl
push
and
pop
movsl
sbb
ss
xchg
adc
addb
stos
push
pop
inc
add
sub
pop
jecxz
sub
decl
in
std
in
loop,pn
inc
stos
ret
stos
xor
push
xchg
loopne
mov
add
sbb
fs
mov
pop
notl
addr16
hlt
inc
or
dec
push
ljmp
cmc
jmp
divl
mov
sub
xlat
adc
add
inc
in
xchg
or
lret
gs
cmpsb
mov
mov
lahf
out
in
add
push
jecxz
in
mov
and
ss
push
mov
xchg
xchg
jae
insl
mov
jmp
and
int3
ja
adc
lahf
in
addb
inc
addr16
ss
add
test
sub
dec
jge
inc
out
pushf
cmc
sbb
dec
sbb
daa
loop
les
outsl
or
push
call
xchg
adcb
movsb
fistl
mov
jmp
or
dec
scas
or
iret
jmp
lods
sub
dec
mov
cli
notl
popf
lret
sub
arpl
inc
incl
dec
std
pop
mov
outsl
sti
cwtl
ds
lock
hlt
lahf
sbb
mov
dec
ret
rol
jno
inc
daa
fldcw
adc
push
shlb
outsb
inc
pop
fs
scas
lcall
cmp
fldl
rorb
pop
mov
push
mov
test
or
out
fyl2xp1
mov
xchg
fucom
stos
adc
fildll
mov
daa
and
pop
daa
pop
pop
push
in
inc
push
jae
sbb
nop
fnsave
fs
xlat
adcb
xor
scas
loope
sub
sti
out
mul
xor
dec
and
addb
cmp
xlat
lret
jno
push
cmc
ljmp
mov
in
xor
push
add
inc
mov
or
movsb
cmp
push
push
popl
loopne
fbld
cld
rorb
and
add
cli
add
mov
sbb
ds
xchg
or
add
stc
movsl
jg
movsl
cmpl
test
or
inc
fcomp
xor
cmpb
addr16
dec
pop
add
cmp
dec
xor
int
loop
fidivrl
addl
lcall
jnp
pushf
mulb
cld
sbb
hlt
jnp
xor
imul
or
inc
shr
xor
inc
lea
mov
or
jg
dec
in
pextrw
fsubrs
loop
xchg
cld
xchg
leave
test
insl
frstor
inc
jecxz
int3
je
scas
push
test
inc
test
xor
mov
sbb
lahf
pop
inc
xchg
jecxz
xorl
stos
aam
gs
push
je
mov
pop
jle
adc
stos
jge
ljmp
jp
imul
pop
mov
push
ds
fiaddl
xor
ljmp
jmp
pop
pop
lods
sti
and
popf
jecxz
and
add
lret
cli
sbb
stc
dec
inc
outsb
xor
mov
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rorb
sar
aad
inc
add
sub
jbe
mov
mov
push
push
shll
ret
push
and
inc
pop
icebp
sbb
or
sub
add
scas
aaa
fdivl
lcall
xor
icebp
das
lds
insb
lret
test
sub
xor
mov
daa
or
lahf
into
pop
jbe
fstl
pop
xchg
hlt
insl
pop
jg
imul
enter
sarl
adc
sub
mov
fs
loop
test
cli
sub
xchg
sbb
arpl
add
shll
imul
sbb
out
mov
cmp
dec
mov
adc
inc
or
jae
in
jle
orl
or
xchg
addl
dec
leave
push
jg
stos
xor
jge
mov
cmp
cltd
nop
pop
cmp
add
lods
dec
xchg
mov
aad
pop
lock
cmc
out
andl
jo
and
jecxz
aam
clc
les
or
pop
jge
mov
lret
repz
or
sbb
cmp
cmp
xchg
xchg
cltd
mov
mov
and
sbb
lea
inc
adc
ja
fstpl
add
add
test
pop
cmpsb
test
sbb
movsb
dec
sti
insb
fnstsw
in
lock
jb
inc
insl
fwait
sbb
jne
stos
sbb
pop
add
dec
sub
dec
in
daa
inc
fnstcw
divb
add
fucomp
outsl
adc
push
shrb
mov
loop
push
shll
ret
xor
pop
cwtl
jl
daa
leave
mov
hlt
into
dec
mov
cmp
xchg
cmp
movsl
jge
lods
mov
push
andb
outsb
fnstcw
and
es
jne
lahf
xchg
add
mov
int
shl
in
lret
test
mov
mov
jo
ja
je
adc
sub
cmp
or
push
repnz
mov
xchg
outsb
push
enter
and
mov
lcall
dec
dec
push
leave
mov
js
ror
fwait
sub
mov
push
pusha
iretw
and
mov
xchg
jnp
jp
mov
in
nop
int3
jg
mov
bound
ds
fisubl
das
clc
les
insl
lret
jns
rcll
pop
xchg
mov
inc
sub
or
push
or
mov
scas
out
test
mov
inc
shr
xchg
loopne
dec
jne
imul
aaa
data16
mov
imul
movsl
pop
test
and
mov
xor
mov
loopnew
jb
or
lea
adc
sti
rcrl
inc
sahf
add
bound
sbb
cli
mov
je
ds
loopne
inc
pop
mov
fnstcw
loopne
dec
popa
jecxz
xor
rclb
pusha
add
gs
fucomi
daa
outsl
ja
jmp
jae
cmpsl
movsl
clc
push
mov
popa
and
pop
add
or
fiaddl
inc
pop
xchg
imul
or
jecxz
jge
mov
pop
lret
mov
out
inc
sar
jmp
add
pop
cmp
jno
xor
int3
jbe
jecxz
sbb
jle
jb
jnp
push
sahf
test
push
lods
iret
leave
cld
jne
cli
fmul
cmpsb
sbb
add
pop
mov
daa
xchg
xlat
or
dec
shlb
sti
dec
call
push
hlt
mov
lret
pop
add
fbld
and
and
add
lahf
int3
jbe
adc
mov
mov
out
rcr
sbb
add
pop
out
push
scas
test
sahf
es
popa
mov
mov
jg
pop
cmp
or
adc
sbb
sbb
pop
and
add
push
inc
mov
sbb
fiaddl
or
pushf
test
push
enter
dec
mov
pop
pop
push
add
jg
mov
push
pushf
shll
sub
add
movsb
in
in
mov
test
insb
add
pop
out
inc
fwait
dec
in
je
stos
bnd
pop
ret
pop
gs
pop
loope
repnz
sbb
outsb
lods
in
lods
mov
push
push
popf
repz
fidivrs
gs
sti
clc
addr16
ffree
and
jae
rcrl
dec
aam
ss
mov
ja
repz
sahf
adc
xlat
lahf
lret
insb
rcll
clc
dec
outsl
xor
sub
js
lcall
jle
push
dec
inc
pop
shlb
mov
test
in
mov
loopne
jle
call
push
xchg
xor
mov
icebp
movsl
dec
addl
and
enter
push
pop
mov
popa
fcoms
cwtl
adc
dec
inc
pop
mov
cmp
ds
movl
fisubl
and
ficompl
pop
cmpsl
daa
mov
mov
stos
fbstp
mov
and
mov
jmp
pop
pop
mov
push
add
lock
mov
dec
xchg
les
mov
insb
test
in
movsl
cli
mov
subb
sbb
jb
and
xchg
andb
mov
and
mov
jp
ja
sti
pop
mov
mov
and
pop
adc
mov
pop
jge
mov
pop
fisttpll
lock
and
ret
pop
movsb
xlat
nop
into
stos
sub
dec
fwait
jl
pop
pxor
fistpll
hlt
sbb
cmp
pop
xorl
mov
rcr
es
push
fadds
popf
mov
xchg
and
lahf
xor
idiv
jge
sbb
mov
fbld
outsl
rcrb
sbb
jecxz
lea
push
xor
outsb
ss
jo
cmp
push
pcmpeqw
sub
gs
push
push
in
ret
inc
xchg
mov
sub
sbb
shlb
iret
aas
loope
idiv
shll
pusha
sub
js
cli
jmp
jge
ja
mov
jmp
shrb
inc
and
adc
insb
mov
and
xchg
dec
clc
jle
sbb
stc
dec
or
dec
push
scas
xchg
xchg
and
and
into
loope
cmpsl
xchg
sub
fildl
std
sub
ss
je
xchg
mov
popf
jne
mov
sub
rcrb
and
xchg
or
mov
in
test
dec
cld
xor
sbb
mov
push
movl
dec
popf
fiaddl
outsb
cli
xchg
sahf
push
sarl
hlt
cltd
lahf
jb
stc
cmpsb
nop
push
inc
add
leave
mov
fwait
pop
pop
xchg
aam
jle
push
cmp
pop
mov
add
into
xchg
sbbl
inc
inc
aam
push
test
outsb
jne
add
je
push
push
scas
mov
insl
ja
inc
sbb
repnz
xchg
dec
cmc
aas
lock
aas
jecxz
dec
sbb
xchg
push
adc
js
lcall
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rclb
repnz
adc
je
pushf
jmp
inc
mov
clc
pop
or
ret
mov
lock
pop
push
dec
sbb
loopne
sbb
mov
or
or
repnz
dec
lods
mov
enter
jg
push
pop
das
sbb
cmpsl
mov
lret
cltd
mov
in
cwtl
in
jge
loopne
jne
xlat
dec
fldt
jnp
xchg
sbb
push
jbe
xorl
xor
pop
arpl
lahf
rorl
xor
cmp
sti
dec
sub
in
cmp
or
mov
or
sbb
pop
int3
add
lcall
sarl
sub
std
jg
dec
int
push
mov
inc
adc
popa
pop
pusha
sahf
out
aas
fwait
sbb
test
push
push
add
dec
pushf
jbe
jl
stos
loop
adc
push
push
jecxz
mov
inc
and
pop
mov
sbb
jb
call
xor
inc
push
cs
push
and
dec
das
jp
push
add
jno
dec
adc
inc
pop
sbb
inc
out
or
add
insl
inc
jb
mov
addr16
sub
add
push
popw
test
test
std
cli
in
inc
and
lock
jl
jns
jb
mov
iret
xor
aam
mov
jae
jne
insl
out
scas
fstpl
iret
lods
pop
repz
sbb
dec
mov
xor
repnz
lcall
icebp
mov
sarl
xchg
mov
cmpb
push
sub
ds
mov
mov
cmp
xorl
aad
push
mov
into
pop
dec
ret
scas
or
xchg
sar
movsl
dec
xor
mov
and
loop
adc
cmp
or
test
fwait
mov
jne
inc
jle
ret
cmp
fisttpl
jno
mov
aaa
pop
cmp
ja
xchg
xchg
into
sbb
adc
xchg
js
nop
pop
and
push
in
outsl
mov
rolb
xchg
sub
and
mov
xor
outsb
pop
shll
and
in
fiaddl
bound
dec
imul
dec
jns
mov
cmp
dec
popf
mov
lcall
lret
repz
cmp
into
sub
roll
push
add
mov
dec
push
lea
testl
nop
mov
cmc
cld
xchg
xchg
xchg
mov
jmp
cwtl
adc
jecxz
pop
loopne
cld
imul
addr16
sub
cld
and
lea
sete
mov
imul
sub
test
push
jge
outsl
movsb
pushl
xor
adc
cmp
fwait
xchg
pcmpgtw
adc
imul
push
dec
sbb
loop
push
iret
mov
mov
in
pop
add
loop
mov
and
lock
dec
adc
cmpsl
dec
xchg
push
sub
lret
fisttpl
int3
inc
inc
mov
cmp
in
lds
into
out
ss
ds
icebp
cmp
mov
js
cli
into
out
cmp
fmull
lods
push
xchg
nop
sub
or
stos
sahf
aas
loopne
outsl
xor
pop
js
and
or
stos
dec
neg
adc
mov
dec
mov
movsl
test
scas
lahf
fstl
mov
call
dec
cmp
rolb
out
fiaddl
and
int3
hlt
cwtl
dec
xor
lods
lea
outsl
cmp
ljmp
pushaw
je
jmp
shrb
lods
out
int
push
aaa
pop
data16
jp
jecxz
xchg
mov
arpl
and
test
ljmp
lods
int3
dec
xchg
scas
sbb
imul
stos
add
popa
filds
not
xor
bound
fisubl
outsl
jne
scas
inc
sahf
inc
mov
push
xchg
push
jl
fldt
jns
push
cwtl
or
mov
xchg
add
test
pop
mov
imul
xchg
popf
das
cli
mov
pop
dec
and
xchg
pop
jl
test
push
loop
pop
xchg
push
push
loope
std
pop
repz
test
sub
lods
lcall
fisubrs
pusha
aam
inc
ret
ja
aam
mov
insl
xor
popa
sbbb
rorb
loope
xchg
xor
or
push
xor
mov
decb
cmp
adc
pop
or
ss
push
sub
lods
mov
test
stos
pop
es
sub
jge
cwtl
sbbb
loopne
push
aam
dec
and
xor
and
xor
loope
loopne
adc
cli
pop
inc
jbe
outsb
roll
popa
sbb
and
mov
fsubs
mov
jecxz
mov
je
fcomi
push
dec
ficompl
dec
sarl
sub
mov
sub
outsb
cmp
cmc
adc
xchg
jne
addr16
jae
lcall
mov
stos
test
pushl
mov
lret
ss
xorb
arpl
stos
sub
sbb
mov
fisubs
adc
std
inc
popa
push
mov
pop
pop
fisttps
push
clc
ds
xchg
insl
imul
sahf
add
das
sub
pop
cld
pop
add
inc
scas
mov
dec
pushf
shr
inc
sub
stos
add
xchg
pop
mov
mov
ss
ficoml
sub
add
roll
addr16
push
cltd
nop
dec
out
adc
aas
fsubrp
fisubrs
sahf
fs
mov
cld
popf
pushf
xlat
hlt
add
dec
mov
test
jo
xlat
mov
cmp
and
scas
jp
mov
lea
imul
cwtl
int3
mov
and
xchg
push
out
adc
or
rcrb
and
js
repz
arpl
idiv
loope
jae
xor
add
into
add
stc
xor
mov
sbb
in
jns
out
cmp
adc
loope
fmuls
pop
int
push
or
mov
and
mov
imul
es
paddb
mov
push
pop
mov
rcrb
mov
jns
and
inc
inc
inc
daa
cmp
push
fwait
popf
or
lahf
mov
push
cwtl
subl
lret
xchg
jl
movsb
movsl
jb
dec
xlat
push
and
pop
lea
fs
lret
je
mov
dec
push
pop
daa
imul
and
lahf
popf
scas
and
jecxz
add
add
inc
pushf
pop
mov
pop
mov
or
mov
pop
mov
jbe
mov
push
test
lock
mov
out
jb
sti
sub
xor
fdivl
cmp
insl
ret
cmpsl
xchg
adc
sub
pop
or
cmp
jae
fiadds
xchg
sub
cmpsb
lods
add
jae
jecxz
pop
lcall
jne
mov
bound
and
xchg
and
pop
push
sbb
jno
mov
pop
andl
rol
rol
rol
rol
rol
rol
rol
rol
rol
shlb
lods
xor
xchg
mov
fcompl
jne
adc
push
add
fistps
loopne
fwait
outsb
aad
pop
mov
scas
dec
mov
data16
push
loop
cs
dec
insl
add
xchg
roll
stos
dec
and
sahf
mov
xchg
cwtl
xchg
adc
lods
rcll
cmpsl
mov
pusha
stos
out
xchg
jns
jmp
pop
jne
call
sbb
lahf
fwait
mov
cs
push
repz
sahf
out
movsb
ja
add
in
icebp
sbb
push
cltd
cmpsl
push
pop
movl
ja
xchg
push
pusha
out
cli
subl
or
pop
xor
cli
shlb
sti
cmp
div
stos
insb
leave
out
rorb
jmp
fstps
in
les
mov
push
popf
imull
push
xor
mov
insl
xchg
sub
cmpsl
in
cmp
push
jge
dec
push
adc
sarb
call
jmp
lock
insl
cmp
xchg
fnstenv
xchg
iret
dec
cmpb
xchg
sti
test
vpmadcsswd
xlat
addr16
arpl
sub
cmp
sbb
push
and
sbb
test
mov
pop
mov
or
out
clc
scas
mov
por
fs
xchg
ja
arpl
add
lea
push
xchg
push
mov
mov
and
cmpsl
stos
pop
mov
aas
push
in
pop
int3
xlat
or
cmc
popa
bound
xchg
int3
pop
mov
add
dec
ljmp
xchg
fucomi
ret
cld
bound
jg
xchg
aas
hlt
outsb
int
mull
jnp
cmp
repnz
pusha
sub
ljmp
pop
std
xor
xor
mov
push
xor
pop
pop
lret
sub
clc
cs
push
imul
jmp
movhps
es
sti
dec
out
xchg
mov
adc
aam
mov
sub
fcomip
lret
adc
push
scas
aaa
aad
adc
clc
lods
pop
or
dec
cmpsb
cltd
cli
cmpsb
js
dec
pop
mov
push
mov
xor
sub
ss
ss
mov
jbe
or
inc
insl
dec
sub
xor
mov
pop
sub
jbe
fwait
push
mov
call
mov
xor
ret
ljmp
adc
jp
jns
out
movsl
popa
jle
imul
lea
call
pop
push
push
lahf
add
mov
add
scas
aam
sti
xchg
push
pop
ds
nop
aad
push
lret
dec
scas
sti
mov
pop
push
jo
and
and
cli
mov
in
push
and
jle
leave
mov
mov
lock
subb
pop
dec
and
insb
cld
outsb
add
mov
and
test
jae
jmp
das
cwtl
sub
rclb
xchg
sti
cmp
xor
imul
adc
add
adc
mov
pusha
mov
cmpsb
inc
lods
lahf
idivb
cli
mov
jbe
jmp
popf
sahf
add
mov
shlb
jno
push
out
loopne
pop
mov
mov
loop
shrl
adc
js
push
and
mov
outsl
mov
fcompl
cs
push
ja
cmp
pop
popf
add
adc
jecxz
push
mov
jb
or
shll
outsb
lahf
inc
xchg
ss
or
sub
les
and
add
ds
and
iret
push
mov
xchg
pop
sbb
add
ds
add
ss
inc
xor
lock
xchg
mov
adc
fbld
popf
stc
pop
sbb
scas
adc
cwtl
add
sarl
lock
sti
shrb
pop
ja
clc
mov
or
pop
iret
out
xchg
cmpl
dec
inc
mov
jle
ret
ds
pushf
push
and
push
or
lahf
loope
repz
jecxz
ret
hlt
mov
int3
dec
movb
and
jg
pop
loope
je
les
bound
push
pop
push
test
jle
add
pop
sti
pop
out
inc
lea
mov
ret
lahf
pushf
ret
push
sbb
adc
pop
aaa
ja
lock
cmp
shlb
xchg
adc
jl
ds
mov
mov
lods
lea
arpl
stos
fwait
adc
cmp
jle
jge
sbb
mov
rcl
imul
or
jnp
movsl
outsl
jg
sub
lds
repz
mov
sbb
test
sbb
cmc
xchg
mov
mov
xchg
push
loopne
cmpb
rol
int
xchg
xchg
popf
test
jecxz
and
ja,pt
sub
test
stos
xchg
xlat
adc
mov
sbb
mov
fwait
nop
shrl
adc
fwait
sbb
sbb
mov
dec
or
inc
mov
repnz
hlt
sbb
cmp
cli
adc
sbb
iret
cmp
add
lahf
inc
psubw
out
daa
or
rolb
cmp
cld
dec
push
dec
imul
sbb
ja
lret
mov
and
jp
jmp
andl
mov
pop
pop
sbb
adc
pop
rol
add
mov
xchg
call
push
jg
cwtl
sub
inc
mov
adc
lahf
cmp
add
add
inc
aam
arpl
sub
sbb
cmp
je
pop
test
or
add
pop
pop
dec
mov
ror
stos
add
inc
mov
lods
xor
int
or
mov
outsl
or
inc
loope
pusha
pop
or
cli
sbb
lods
xchg
mov
shl
aad
adc
inc
dec
add
mov
pop
mov
jnp
fisubl
adc
out
inc
jge
adc
in
imul
arpl
loopne
icebp
stc
sub
sbb
ds
lods
mov
push
and
pusha
sub
inc
inc
and
stos
xor
adc
lret
int3
cmp
push
leave
dec
test
outsl
sub
inc
add
jecxz
pop
lods
mov
scas
mov
pushf
dec
cwtl
mov
xchg
jbe
jecxz
in
push
adc
push
or
addb
rorb
and
pop
jle
in
mov
pop
mov
and
adc
dec
mov
cmpsl
push
cmp
inc
dec
dec
adc
jns
les
adc
jecxz
xchg
je
sub
enter
ja
jle
outsl
rcll
mov
repz
adc
mov
mov
mov
cli
mov
rorb
xor
cs
jo
in
cmp
mov
mov
aas
imul
out
cld
xor
inc
lods
lds
add
pusha
pop
push
fiaddl
andl
mov
imul
fiaddl
pop
das
add
sub
gs
mov
sbb
ljmp
add
cmpsb
movsb
shrl
movsl
inc
pusha
lret
xor
stos
imull
mov
xor
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
xchg
ss
sbb
and
xchg
fstpl
jbe
inc
clc
sub
xchg
aam
adc
fbstp
imul
jb
subl
jmp
mov
addl
xor
sbb
shl
jge
arpl
and
dec
in
ficompl
and
sub
jnp
add
sti
pop
cmp
xchg
xchg
insb
add
ljmp
aaa
push
mov
cmc
inc
add
jno
mov
cmp
mov
pop
clc
mov
cmp
cmp
outsb
shl
or
mov
adc
shrb
ds
push
cltd
xor
jns
nop
cmp
addr16
sbb
xor
and
pop
and
les
mov
add
bound
fidivs
or
les
stos
ljmp
lods
and
sub
and
adc
inc
outsl
dec
sbb
dec
pop
in
pop
popa
and
xchg
mov
xchg
inc
dec
stc
xor
arpl
sub
xchg
push
daa
sbb
dec
fdivp
aaa
insb
std
jge
or
sbb
fwait
scas
aaa
scas
ret
lahf
adcb
sbb
cmpsb
mov
test
dec
xor
mov
cli
jne
adc
adc
sbb
jo
movsb
mov
and
xchg
repz
outsb
push
ret
lods
pop
mov
pop
mov
inc
leave
push
lds
nop
inc
mov
jbe
inc
and
es
pop
mov
sbbb
cli
xchg
or
pop
cmp
shrl
cs
push
ja
fsubrs
call
jp
test
ljmp
movsl
inc
iret
ret
es
jb
or
xchg
addl
jp
cli
cwtl
lcall
mov
outsl
add
inc
mov
aaa
imul
pop
pop
add
adc
or
andps
mov
fstps
jg
jg
add
pop
scas
xchg
cmp
imul
repz
sub
std
sti
dec
sbbl
xchg
pop
mov
jcxz
in
fisubl
jl
inc
aam
pop
filds
lret
lret
inc
sbb
pop
jecxz
xor
rorb
dec
dec
pusha
sbb
jmp
out
sahf
push
mov
jae
movsl
fsubrp
iret
dec
mov
pop
and
arpl
xchg
pop
out
sahf
mov
xchg
cmp
sub
add
imul
or
sahf
bound
sbb
mov
mov
imul
pavgw
icebp
inc
xor
lock
lret
cld
or
mov
adc
test
mov
dec
sub
pop
xor
add
add
outsb
add
cmp
sbb
sub
push
xchg
mov
ds
mov
imul
lahf
cmp
ja
push
push
push
pop
outsl
push
hlt
fldt
sar
ja
xchg
sub
push
mov
addr16
cmp
sub
mov
mov
sti
mov
les
sbb
xchg
subb
aaa
xchg
adc
ret
mov
jne
mov
notl
push
fidivrs
xchg
popf
sbb
sbb
dec
out
lods
outsb
into
push
insb
add
test
add
sarl
cltd
stc
push
xlat
test
bound
add
sbb
push
pop
pop
aad
cmpsb
or
orl
or
leave
mov
imul
sar
xchg
or
mulps
inc
sub
mov
jle
sbb
mov
mov
push
xchg
sbb
imul
sbb
out
add
sbb
shlb
sbb
push
loope
push
sbb
inc
xor
es
iret
pop
inc
or
rcrb
sub
leave
add
and
xchg
fcmovbe
das
subl
cmpsb
and
push
fsts
pushf
pop
adc
mulb
mov
repz
fwait
pop
pop
xchg
adc
or
test
jno
aad
mov
rorb
mov
and
out
rorb
and
and
mov
sbb
ret
adc
adcl
push
push
sbb
jno
stos
xchg
xchg
and
fistps
cwtl
test
xchg
adc
jle
pop
or
clc
mov
mov
dec
cwtl
call
mov
lret
jp
xchg
pusha
movnti
sub
jbe
add
imul
jb
xor
scas
and
add
xor
push
xchg
sti
imul
es
bound
inc
dec
bound
mov
out
xchg
popa
stos
dec
xchg
rcl
sbb
jo
das
in
pop
mov
pusha
xchg
or
loop
mov
xor
pop
pusha
ret
cmp
jno
data16
pop
mov
sbb
stos
addr16
inc
and
icebp
scas
hlt
scas
add
cltd
orl
mov
push
aam
adc
xchg
rorl
pop
push
out
movmskps
cmpl
imul
cmc
addb
push
mov
push
pop
mov
lcall
je
sub
lret
orl
jne
repnz
push
lret
push
cld
leave
sub
add
mov
lcall
adc
push
pop
movl
out
outsb
xlat
sub
mov
jae
xorl
cmp
decb
add
es
rorb
fstl
enter
cmp
adc
pushf
cmp
pop
in
mov
add
mov
sbb
pop
lcall
xchg
mov
cmp
mov
jmp
xor
add
or
pusha
jl
sbbl
popa
lret
cltd
rdtsc
in
push
and
jne
xor
imul
popa
xor
pop
das
std
iret
sub
arpl
in
xor
inc
fistpl
inc
lahf
mov
ja
out
xor
xchg
jno
imul
imul
mov
and
adc
in
cli
fs
jne
mov
or
stos
mov
std
inc
dec
mov
sbb
mov
jbe
push
imul
stos
lea
cmp
inc
sbb
sub
push
sbb
je
add
notl
lea
mov
es
mov
pop
jle
push
and
mov
cs
sub
sub
push
inc
sub
mov
sarl
in
xor
std
sti
cmpsb
jnp
jae
pop
lock
fisttpl
jns
bound
inc
push
xor
mov
mov
movsb
call
popa
mov
sarl
jge
ljmp
add
iret
int
sbb
cmp
orl
inc
sub
scas
add
adc
push
iret
adc
cmpsl
add
or
mov
add
adc
andb
sub
push
pop
adc
es
inc
push
movsl
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
sti
loop
pop
add
mov
sbb
fcompl
lea
push
sbb
les
movsl
jp
push
cmp
dec
cmp
pop
mov
dec
mov
lcall
add
dec
sti
jmp
sub
adc
fcoms
mov
test
xchg
xor
data16
adc
push
gs
jp
jge
jp
push
clc
sub
sbb
shll
sub
inc
jae
inc
and
xchg
mov
popa
mov
push
dec
insl
iret
ds
iret
cs
leave
jecxz
mov
pop
xor
push
out
xor
je
gs
out
dec
push
sub
cwtl
cmc
inc
js
test
mov
lret
aad
mov
jae
add
add
add
lcall
les
mov
dec
push
addl
sub
out
insb
mov
outsl
lods
mov
cmp
push
pop
out
add
jbe
and
xchg
add
jae
enter
dec
fldl
dec
or
sbb
loop
mov
or
aaa
hlt
xchg
sub
rorl
jle
jp
cmpsb
incb
push
cmp
xchg
movlps
push
gs
ret
mov
xor
pop
sbb
and
mov
and
scas
test
out
popa
pushf
rcrb
pushf
jmp
aaa
add
cmp
outsb
loope
sti
xchg
inc
xlat
loope
jecxz
clc
mov
out
js
jnp,pn
xchg
cli
notb
or
push
jge
lods
ja
aad
imul
xlat
mov
arpl
sub
test
je
and
jp
mov
xchg
inc
shr
lods
xor
fcmove
sti
mov
inc
xorl
rorl
jl
xor
scas
imul
mov
jge
popa
jns
mov
insb
out
test
push
jl
ss
xchg
add
fnstcw
scas
push
sbb
scas
sbb
adc
ret
push
cwtl
aas
out
outsl
inc
int
xor
mov
aas
hlt
ss
mov
mov
dec
aas
or
repz
xchg
js
adc
arpl
scas
xchg
and
push
loopne
pop
xor
or
sub
cli
rorl
out
out
mov
in
push
popf
subb
pop
mov
lret
and
sub
test
adc
push
mov
or
push
mov
mov
std
pusha
mov
shlb
mov
outsl
jle
daa
mov
push
out
ljmp
and
mov
jmp
pop
fcomi
ljmp
cmp
push
pop
cli
out
lods
popa
cmp
add
sbb
lret
int
sarl
testl
lret
cmpl
sub
pop
in
in
outsb
jb
inc
call
sbb
repnz
addr16
pop
sub
pop
aaa
je
mov
aad
push
add
outsl
test
popa
xor
jne
popf
test
sti
sub
or
and
push
or
sub
movsb
pop
xchg
lret
cli
pop
add
dec
mov
xchg
dec
hlt
jbe
aad
popf
xchg
push
ror
bound
add
out
jbe
xchg
jne
jle
xor
stc
xchg
pusha
sub
adc
inc
fsubrp
mov
mov
sbb
leave
xor
shll
inc
jae
jbe
in
stos
int3
push
push
adc
mov
sbb
rcrb
insl
xchg
sub
mov
mov
mov
add
xor
sbb
cmp
les
push
jns
int3
or
lahf
add
loop
into
popf
aaa
cmp
inc
adc
in
and
out
loop
cmp
pop
out
push
xchg
in
inc
sbb
sub
outsb
jmp
lock
push
inc
icebp
fadds
mov
lods
inc
push
scas
adc
xchg
popf
loope
add
ficoml
or
mov
int
popf
mov
pop
xchg
icebp
insl
lods
in
sbb
pop
xchg
adc
es
and
lahf
out
sub
pop
push
inc
sub
imul
adc
and
xchg
jno
mov
or
pop
sbb
into
lods
jg
push
lods
sbb
inc
out
jmp
insl
ds
int
jecxz
sbb
xchg
insl
xchg
inc
jmp
fimuls
ret
push
pop
loopne
rcrb
xchg
add
iret
or
jle
xor
push
sbb
push
repz
mov
fcomps
mov
jecxz
xor
xchg
pop
in
jo
pop
lods
cmpsl
loop
push
lock
insb
int3
enter
dec
pushf
and
xchg
nop
out
and
sbb
fldcw
jecxz
cmp
sti
enter
pop
pop
shlb
inc
jle
daa
loop
fiaddl
push
out
mov
mov
mov
data16
fsubrs
mov
and
xchg
cwtl
ss
inc
int3
stos
stc
fwait
rol
mov
std
cmp
mov
ja
cli
push
sarb
fistps
cmp
cltd
gs
call
fisttpl
sbb
stos
xchg
lods
dec
pusha
pop
xchg
dec
sbb
movaps
mov
push
lcall
and
jo
xor
dec
push
mov
sub
adc
dec
mov
fwait
push
aad
mov
mov
test
mov
xor
aam
ljmp
sub
push
and
out
lock
stos
jl
ss
mov
dec
xchg
push
repz
pusha
cltd
sbb
adc
scas
xor
dec
outsb
sbb
dec
inc
negb
or
fisubrs
push
imul
mov
jl
mov
push
scas
sub
sub
ja
lds
xchg
jbe,pn
xchg
push
adc
sub
mov
pushl
pusha
inc
cld
ret
jle
inc
pop
push
and
jbe
adc
or
dec
pop
pop
cmc
inc
icebp
mov
ljmp
adc
xchg
fldl
adc
hlt
ficoms
popa
or
ret
inc
inc
jnp
lcall
jg
bound
lods
xor
movsb
roll
inc
sbb
sbb
call
out
inc
insb
xor
and
add
pop
sub
mov
dec
imulb
iret
pop
lods
mov
inc
cmp
push
lret
out
loop
in
in
jnp
aas
mov
repnz
xchg
jl
add
sub
push
push
xor
es
fildl
notb
and
jnp
mov
daa
insl
add
and
std
inc
lcall
ljmp
out
cs
popf
sbb
pop
mov
dec
clc
jb
sub
loop
es
xor
sbb
incl
xor
mov
sbb
mov
fisubs
adc
icebp
test
loope
and
sahf
mov
dec
fcmovne
xchg
pusha
insb
addb
stc
setg
nop
adc
and
xchg
jp
mov
add
loop
les
test
push
mov
mov
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rcr
fimuls
testl
mov
push
bound
rcrl
jns
jle
jae
mov
lcall
xor
mov
daa
hlt
xchg
mov
jo
mov
pop
xchg
hlt
push
and
fmull
pushf
jmp
ljmp
inc
push
inc
andl
loope
rcrb
test
shl
mov
push
mov
cmp
xlat
sbb
roll
sub
sti
or
test
mov
and
sub
pop
add
das
cmp
les
pop
push
test
push
repz
add
xchg
divb
mov
or
pop
push
repnz
ja
in
hlt
push
xchg
aaa
and
and
cs
rcr
mov
mov
out
test
lret
jae
dec
mov
and
push
std
movsb
adc
int3
jl
mov
ljmp
loop
push
push
cld
sbb
je
ds
aad
add
dec
es
cmpsl
jg
rorb
push
push
mov
push
sub
sub
jno
push
lds
cmp
inc
mov
inc
sbb
xlat
fsubp
jae
add
jne
stos
insl
mov
pop
cld
add
sbb
hlt
fwait
mov
mov
test
xchg
rcrb
pushl
fldenv
pop
insb
push
dec
cmp
gs
out
loop
test
mov
pop
pop
call
and
adcl
ret
mov
sbb
fcompl
rol
pop
std
out
jae
mov
repnz
sbb
xor
add
les
sbb
sub
dec
adc
jle
adc
cmp
inc
and
and
stos
pop
jae
adc
aaa
and
into
push
scas
or
fs
jne
push
mov
in
testl
dec
arpl
dec
es
dec
mov
or
cld
pop
clc
ds
mov
cmc
lea
sbb
jns
das
arpl
movsl
lock
or
call
mov
push
in
xchg
insb
add
in
pop
and
pop
sti
xor
push
mov
add
xor
pop
cmp
push
or
sar
inc
mov
jg
sub
or
enter
pusha
mov
call
ds
mov
push
mov
inc
push
push
gs
push
push
cltd
mov
loope
into
mov
push
sbb
insl
push
outsb
je
outsl
ss
jmp
inc
clc
das
push
in
fdivrl
cmpsb
ss
iret
lock
mov
adc
ljmp
xor
bound
adc
fcmovnb
jno
jl
xor
fisttpl
jnp
stos
and
adc
sub
pop
mov
cld
pushf
fwait
test
xor
xor
movsb
faddl
push
out
mov
clc
das
mov
mov
sbb
sbb
outsl
pop
sub
mov
or
jge
imul
push
stos
sbb
insl
xchg
xor
data16
aad
incb
inc
push
test
lret
sti
cmp
cmp
push
xchg
imul
js
jl
fistpll
loopne
add
sbb
pop
xchg
mov
icebp
in
jmp
stc
mov
inc
sub
shrb
test
pop
insl
in
enter
aas
push
push
pop
xchg
mov
jae
divb
sbb
sbb
clc
aad
scas
fsubrl
push
cli
sbb
or
lcall
sub
mov
aad
jo
ret
popf
popa
int3
loopne
mull
test
mov
inc
jno
jbe
dec
mov
cmp
mov
sahf
mov
push
add
js
dec
je
cmp
xchg
push
movsl
out
and
sbb
out
fimuls
add
xchg
sbb
shll
adc
xchg
insl
lock
clc
popf
mov
sbb
cli
cltd
mov
and
mov
mov
sub
mov
jecxz
push
mov
add
cli
sbbl
lds
jb
movsl
iret
and
mov
xchg
ja
pop
int3
and
dec
popf
cmp
push
mov
leave
popa
aaa
call
or
hlt
pop
in
clc
es
pop
loopne
or
cs
cmp
aam
or
push
push
sub
jmp
popa
or
pop
pop
push
mov
pusha
rcll
aad
test
sub
push
int
pop
mov
lods
outsb
cmpsl
mov
out
sbb
mov
or
xchg
sub
mov
pop
mov
push
mov
sub
sub
xor
pop
mov
loop
stos
cwtl
jne
and
int3
jns
insb
xchg
sbb
inc
push
cmp
dec
xor
and
jge
rclb
lret
cli
enter
sub
push
cmp
xchg
lcall
dec
fs
iret
dec
add
andps
mov
adc
stos
cld
add
and
pop
lds
lods
jg
inc
xchg
jge
xor
or
cld
mov
mov
cmp
stos
sub
mov
popf
insl
mov
mov
cmp
adcb
lahf
xor
js
fidivrs
int
out
data16
inc
and
mov
xchg
sbb
or
sub
mov
mov
andl
nop
push
cmpsb
sub
pusha
pop
inc
rcll
sbb
xor
shrb
enter
pop
not
mov
push
lds
ljmp
fwait
inc
sub
pop
daa
fnsave
fnstcw
cld
xchg
add
xor
fisubl
pop
mov
or
pop
adc
and
pop
pop
cmp
pusha
jmp
cltd
scas
dec
push
lahf
iret
lcall
clc
adc
mov
jae
cmpsb
xchg
fidivl
xor
bound
bound
fisubrs
insb
dec
add
lahf
cs
movsb
mov
or
lcall
aas
jno
cld
rclb
lds
mov
lcall
js
adc
pop
push
jl
loope
sahf
jmp
add
clc
mov
andl
cmovno
fnstenv
or
sbb
mov
imul
icebp
or
out
adc
fstl
adc
mov
sub
test
fistl
xchg
out
mov
xor
push
cwtl
push
pop
repnz
lods
pop
pop
ds
iret
mov
adc
push
push
xorl
cwtl
jno
xorb
daa
std
jbe
andl
lea
adcl
add
inc
sbb
arpl
mov
mov
pop
jle
iret
fistps
lcall
sbb
int
scas
jb
and
or
push
push
mov
ret
pushf
rcrb
cs
dec
loop
insb
inc
jp
jo
pop
inc
jl
jle
push
pop
or
imul
ret
adc
xchg
das
in
sub
sub
push
ss
popf
adc
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
into
lret
and
xchg
inc
loop
xchg
stc
dec
pop
jbe
outsb
or
inc
jae
mov
and
jbe
ds
xchg
addr16
test
imul
adc
pop
sahf
ret
inc
push
aaa
xor
ret
idiv
test
push
cltd
fcoml
outsl
add
adc
insb
xchg
push
push
cli
aaa
jge
sub
orb
xchg
int3
in
push
xchg
cs
add
or
mov
pushf
scas
fcompl
hlt
mov
or
outsb
loop
clc
inc
imul
call
mov
stos
cmc
cld
fnstcw
js
cmpsl
repz
xor
test
nop
push
pop
cltd
test
out
pop
ret
sbb
push
push
inc
addl
mov
inc
gs
xlat
mov
push
add
in
mov
sub
sub
push
loopne
les
int3
dec
sub
fucomi
mov
mov
clc
jae
or
enter
lock
ficomps
mov
and
mov
add
stos
mov
cmpsl
aas
cmp
into
mov
aad
mov
and
pop
adc
mov
adc
mov
fmulp
fsubr
mov
outsb
xor
imul
addr16
push
scas
sbb
loope
jle
bound
shlb
roll
xchg
ja
es
push
push
inc
orb
cmpsl
cmp
jns
outsl
push
jns
insl
mov
lds
sbb
sbb
dec
and
add
outsb
out
push
jge
and
mov
insb
mov
popa
sbb
ja
mov
das
adc
inc
cmpl
int3
sbb
pop
xor
lar
cli
adc
scas
pop
push
sub
xchg
imul
pop
push
jb
jge
cmpl
leave
int
xchg
xchg
adc
arpl
hlt
aad
inc
jle
dec
mov
xlat
add
jno
imul
scas
je
shlb
aam
sub
pop
aam
int3
rcrb
and
data16
loop
push
adc
mov
fidivrl
push
aam
lahf
daa
stos
jbe
fistpl
mov
xchg
jb
and
or
pop
xor
repnz
sbb
into
gs
ret
pop
sub
cs
fldl
add
jl
cbtw
sahf
div
xor
inc
int3
loope
inc
and
data16
ss
push
pop
mov
push
clc
repz
pop
and
xor
movsb
push
jns
xor
les
cmpsl
pop
or
sbb
sub
faddl
or
sub
je
xchg
dec
sar
adc
mov
leave
nop
add
scas
add
dec
into
push
aaa
adc
lret
stos
mov
fldenv
fstpt
jmp
sbb
push
xchg
cmp
jne
mull
pop
ja
ds
jecxz
adc
push
iret
das
incb
or
in
aam
addr16
lahf
dec
sarb
dec
push
sub
jbe
test
dec
mov
inc
sbb
adc
or
adc
std
mov
push
fwait
cmp
pop
and
or
popa
sbb
inc
pop
shll
sub
sub
mov
and
ret
sahf
cld
mov
fdivs
add
inc
inc
jnp
pop
ret
leave
push
push
push
push
daa
inc
iret
pop
leave
mov
push
push
stc
into
mov
adc
jo
jbe
aad
and
adc
stos
cs
push
lahf
pop
jl
test
mov
push
aaa
xorl
jge
sbb
adc
int
xor
in
icebp
in
or
xchg
in
loope
push
mov
xor
daa
sbb
mov
loop
push
fimull
iret
push
pusha
push
je
outsl
lret
or
or
jb
jle
mov
adc
es
xor
jbe
lods
roll
pop
hlt
pusha
inc
lods
stos
jae
mov
aad
dec
inc
sub
rolb
xchg
int3
adc
sub
jnp
int3
aaa
jp
and
mov
xor
sbb
jo
divl
xchg
fucompp
xchg
rcll
push
adc
data16
xchg
adc
cmpsl
scas
cmpsb
dec
inc
sarl
js
psrad
and
fldenv
jbe
xor
pop
mov
cltd
in
inc
xlat
lret
mov
cmc
int3
mulb
testb
push
pop
arpl
inc
shl
xchg
mov
cmpsl
lds
dec
loop
lahf
sub
xor
mov
jge
fnstsw
dec
jecxz
jne
shl
incl
movsb
adc
sub
add
push
aaa
arpl
popa
popa
cmc
ja
jno
push
mov
or
in
faddp
pop
sbb
inc
loopne
push
lcall
cli
xchg
mov
lea
iret
fisttps
jne
dec
mov
orb
fisttps
inc
mov
mov
andnps
inc
pop
clc
pop
xorl
cmp
xchg
js
adc
pop
add
shl
inc
jge
rcrb
scas
xor
and
hlt
inc
int
std
adc
or
and
sub
xchg
hlt
pop
dec
jno
sbb
lret
add
dec
jecxz
mov
mov
jg
mov
pusha
pop
xorb
and
push
dec
xor
sub
jo
fmul
push
jmp
push
xor
adc
dec
push
call
dec
jno
mov
pop
lock
xor
in
cmp
ror
out
adc
sbbl
popa
hlt
push
ljmp
sti
dec
mov
cmp
pop
stos
test
nop
out
push
aaa
xchg
fstl
sbb
movsl
lock
sbb
jle
mov
push
mov
and
add
insb
or
enter
fmuls
fnop
fmul
pop
or
sub
add
pop
loopne
inc
jns
aas
fcomp
inc
outsb
mov
add
xor
out
or
dec
add
fidivs
push
pop
xchg
bound
test
fwait
push
xor
lock
push
push
add
push
ja
imul
sub
mov
add
or
sub
xchg
mov
leave
insl
int3
enter
dec
add
ds
mov
jg
jne
mov
stos
call
inc
stc
or
sbb
shl
adc
icebp
add
or
stos
cld
mov
mov
and
ja
in
mov
int3
or
sub
push
or
sub
stos
pop
cmpsl
in
imul
cltd
inc
add
xchg
sti
in
xchg
lahf
cli
jmp
repnz
push
das
into
add
dec
adc
stos
or
adc
add
jge
bnd
repz
iret
sub
in
not
mov
nop
lods
mov
adc
push
push
aaa
mov
clc
mov
inc
inc
jp
rorl
cmp
test
ret
sub
sub
inc
jo
xlat
push
fistps
out
and
insl
in
int
pushf
mov
xor
rol
rol
rol
rol
rol
rol
rol
rol
loope
pop
pop
push
push
mov
mov
inc
loop
sbb
cwtl
dec
cmp
lods
sub
and
mov
pop
cmp
in
push
sbb
inc
dec
js
movsl
push
insb
mov
lods
or
sub
aas
repz
dec
outsb
bnd
cwtl
jg
ds
sub
fwait
call
cmpsl
ret
aad
jle
push
jbe
call
mov
rcll
test
sub
push
sahf
and
sbb
xor
js
cltd
outsl
test
push
pop
mov
aam
jmp
in
rclb
int3
dec
mov
outsl
cltd
ret
dec
push
loop
jp
push
pushf
add
mov
pop
jns
adc
clc
icebp
test
mov
stos
inc
adc
push
mov
sbbl
scas
pop
add
pop
pop
sahf
xor
push
pushf
jle
punpckhwd
mov
dec
ss
and
adc
sti
sti
sub
aas
and
fisttpll
cmp
clc
outsb
or
movsl
push
insl
dec
test
push
xor
dec
aad
icebp
neg
mov
jg
xchg
xchg
rol
cmp
push
sub
loopne
add
sub
adcb
cmp
movsb
lods
jle
mov
cli
pop
fbstp
cmp
or
aad
push
push
sub
and
add
scas
sbb
jmp
bound
push
sbb
out
fwait
cli
pop
fistps
push
inc
mov
out
es
jmp
mov
add
sub
dec
out
rolb
daa
aad
jg
int3
adc
ficoml
inc
ljmp
addr16
push
ret
mov
mov
roll
fcoms
jecxz
lcall
addr16
in
sbb
cmpl
jle
out
fs
xchg
adc
jbe
mov
clc
fildl
in
aad
scas
mov
scas
add
jg
fwait
sahf
and
mov
arpl
dec
adc
sbb
shll
ja
cmc
adc
sti
add
mov
andb
fs
jmp
cmp
outsl
popl
out
pop
cmp
loopne
mov
mov
jecxz
cs
out
lret
leave
test
xchg
rclb
push
jl
and
inc
jbe
idivl
cmc
addl
inc
mov
out
mov
push
cmp
bound
lahf
push
cmp
or
ss
sahf
cltd
sti
cmc
inc
popa
sbb
insb
hlt
in
pop
fsubrs
sub
fimull
das
clc
aad
cmp
pop
inc
or
push
popf
push
push
movsb
stc
xor
fidivl
mov
es
movsb
mov
sbb
mov
xchg
stc
xchg
shlb
push
dec
mov
xchg
or
ds
xchg
dec
adc
ret
pop
xchg
mov
mov
xchg
ret
mov
cmp
imul
gs
mov
jle
push
lahf
repnz
arpl
in
jmp
mov
inc
push
inc
hlt
inc
mov
sbb
dec
in
test
dec
jg
push
jmp
mov
lock
mov
inc
mov
loop
push
pop
dec
xor
xor
jne
ss
repz
loope
pop
mov
jle
or
ret
shlb
dec
adc
add
sub
stc
adcl
outsb
loop
fdivs
push
rorb
inc
push
loope
and
mov
xor
call
rcrl
add
ljmp
jecxz
dec
inc
test
sbb
shlb
push
ja
sub
arpl
push
and
pop
push
jge
pop
mov
adc
mov
mov
mov
mov
jg
and
sbb
insb
xchg
cmc
sti
sbb
or
aas
rcr
fcoms
sbb
mov
xchg
cmpsb
arpl
dec
xchg
lock
cs
pushf
popa
movl
fisubs
add
jo
or
cltd
pushf
cmp
cwtl
adc
adc
cmp
cli
jae
xchg
ror
pop
jp
ljmp
jl
pop
mov
mov
mull
pop
cltd
jns
dec
sbb
sbbb
fcom
imul
es
loope
fcomps
add
mov
inc
lahf
adc
push
xchg
mov
cmp
jge
sub
sub
into
jb
sub
or
cmp
sub
or
xchg
mov
pop
je
sarl
enter
imul
aam
pop
jg
hlt
cmp
inc
and
jl
push
sub
leave
mov
dec
aam
cmp
imul
cwtl
inc
stos
push
add
jo
dec
sahf
pop
add
lahf
je
pop
jmp
jnp
movsb
shlb
ss
adc
aas
and
or
add
bound
sub
push
mov
xchg
in
lahf
lods
jb
flds
lahf
mov
mov
xchg
adc
cmpsb
sti
mov
lahf
sbb
push
sub
insl
icebp
lret
scas
es
pop
les
mov
repnz
fcomps
scas
jg
mov
test
daa
and
mulb
leave
push
and
sarl
mulb
test
outsl
push
nop
insl
shrl
xor
or
or
ljmp
iret
and
std
cmp
xchg
and
sahf
jb
loopne
lahf
outsb
or
std
mov
shlb
push
test
cltd
iret
stos
push
jnp
inc
push
push
mov
out
ficompl
push
push
inc
fnstenv
push
adc
pop
dec
popl
xchg
scas
mov
push
mov
lea
rol
mov
jne
dec
ds
inc
or
repnz
adc
pop
test
insb
int3
xchg
sbbl
or
jle
inc
in
mov
in
sbb
mull
jbe
pop
cmpsl
dec
aas
inc
aaa
ja
scas
xchg
leave
testl
mov
popa
dec
inc
dec
fdivl
adc
push
int
ret
icebp
xchg
jno
testb
pop
js
jnp
add
pop
adcb
andl
movsl
lret
int3
push
out
movups
push
sbb
outsb
or
jge
rorl
cmp
or
jmp
jmp
xor
mov
push
int3
cmpsl
clc
std
inc
and
pop
rdpmc
and
and
mov
lea
sbb
jle
jmp
test
das
adc
mov
sti
cltd
mov
inc
inc
xchg
jmp
jmp
arpl
or
mov
jg
pop
sarb
fsubr
pop
enter
jne
loopne
mov
xchg
push
lret
push
hlt
adc
add
xor
pop
cmpsb
mov
pop
lret
rolb
fwait
mov
fmulp
and
xor
fadds
repnz
pop
lcall
pop
mov
mov
scas
mov
pop
sub
dec
icebp
mov
fisttps
popf
xchg
cmpsb
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
push
in
aad
xor
aaa
dec
dec
add
pop
xchg
fcmovne
push
xor
cmp
pop
loop
cmp
or
ds
and
pop
call
jmp
mov
sbb
fsubp
xchg
and
mov
rolb
mov
cmc
jno
add
mov
mov
iret
sub
scas
lret
in
shrl
mov
xchg
mov
dec
xor
mov
sarl
and
jbe
dec
xor
sbb
fwait
lahf
scas
mov
lcall
and
lods
in
int3
lcall
mov
call
movsl
pushl
adcb
cmp
fdiv
subb
cld
pop
nop
xlat
lcall
jo
ljmp
jne
jns
lods
cmc
or
std
jle
pop
jb
xchg
mov
rcrl
fstpl
sub
xchg
inc
mov
push
or
cltd
lods
dec
and
dec
or
mov
cltd
push
imul
into
mov
xchg
jae
roll
mov
enter
gs
sbb
cmp
mov
adc
js
sysenter
jno
push
xor
into
cld
jo
cmpl
pusha
xchg
mov
xor
cmpl
stos
and
shlb
push
sbb
mov
jg
and
dec
out
cmp
test
pop
push
mov
jg
lret
adc
and
jnp
sbb
push
test
dec
pop
sbb
popa
hlt
mov
sbb
roll
loop
test
dec
hlt
sub
popa
data16
jl
ret
loop
add
data16
lret
dec
mov
outsl
cltd
repz
mov
loop
scas
and
cli
jne
push
inc
pop
xchg
sub
xchg
or
out
add
pop
xor
push
popl
jno
aam
sar
lods
enter
in
pop
inc
mov
loope
xchg
mov
das
lock
dec
cwtl
and
and
in
dec
mov
popa
adc
nop
jmp
mov
mov
mov
xchg
push
orl
jo
push
jo
dec
clc
pop
fisttps
and
xor
iret
xor
outsb
js
movsb
pop
movl
je
mov
xchg
or
push
inc
inc
pop
outsw
aam
mov
adc
sbb
gs
mov
sbb
ret
pop
mov
mov
dec
dec
mov
shrb
add
leave
ja
dec
out
pop
push
int3
pop
sub
gs
test
add
push
add
mov
push
mov
sub
dec
jbe
int
pop
sub
fwait
das
daa
loop
adc
arpl
sbb
jge
pop
sarb
cmpsl
sbb
add
aas
out
scas
fwait
mov
add
in
aam
loopne
cmpsb
xor
loope
cmp
jb
xchg
xchg
shrb
scas
mov
repnz
push
dec
jbe
lods
or
jmp
das
push
mov
loop
xchg
outsl
add
fiaddl
inc
adc
lods
scas
aaa
inc
and
in
arpl
mov
dec
aam
pop
shlb
shlb
sbb
cmp
jp
add
push
int
test
cli
ljmp
imul
test
push
cltd
js
shlb
dec
push
mov
fstps
lock
cltd
iret
lcall
sbb
xchg
rclb
test
in
mov
cmp
mov
mov
sub
fdivl
add
and
sahf
jmp
dec
mov
and
sti
adc
inc
rorl
dec
loop
jge
sbb
pop
rcll
fstpt
mov
imul
xchg
add
or
je
dec
and
push
adc
scas
addl
pop
mov
cmp
iret
ja
jno
pop
lcall
dec
xchg
cwtl
out
dec
data16
repz
in
and
lods
mov
dec
jge
adc
dec
enter
mov
sbb
data16
mov
push
inc
sub
in
test
pop
dec
mov
jp
add
rorl
adc
shlb
addr16
mov
inc
repz
out
lods
jecxz
sbb
in
xchg
ret
xor
inc
repnz
cltd
or
add
lock
test
ror
and
sbb
jle
and
rorl
je
jae
inc
pusha
mov
ljmp
xchg
jl
inc
adc
decb
jecxz
out
je
push
mov
and
and
sahf
push
in
push
insb
xchg
mov
arpl
cwtl
js
repz
mov
mov
sbbb
cmpsl
rcll
mov
es
es
popf
or
shlb
lods
cmc
fld
adc
mull
jge
pop
inc
andl
push
jb
pop
cmpsl
and
xor
cmp
jne
mov
jo
testl
push
pop
push
test
repz
dec
sub
shll
repnz
jb
mov
adc
mov
mov
out
int
pop
add
adc
pop
push
jns
jno
shrb
cmpsl
push
xor
inc
mov
push
xchg
aas
dec
out
or
push
jns
sahf
inc
into
push
jp
jne
call
movsb
push
pop
lea
xchg
imul
add
cmpsb
lea
rcrb
icebp
sub
dec
pop
scas
dec
nop
push
push
and
in
rclb
cld
dec
sub
pop
std
mov
lret
fcoml
dec
add
xchg
test
adc
mov
cmp
mov
inc
mov
dec
imul
mov
xchg
idiv
cmp
fistl
cli
push
push
and
sub
neg
xchg
in
dec
jle
xor
cmp
nop
insb
pop
jo
and
inc
imull
loope
lea
xor
push
lea
aaa
mov
stc
repz
adc
xlat
inc
negb
ret
jl
test
hlt
push
add
xchg
bound
lcall
popf
push
pusha
es
out
cld
scas
ficompl
sbb
adc
push
xor
add
mov
add
add
dec
popa
dec
cmp
add
add
or
dec
in
je
xchg
scas
dec
cmpsl
and
cltd
andl
loop
stos
imul
xor
or
jno
cmp
jecxz
jbe
xchg
pusha
sub
dec
cwtl
add
inc
daa
sbb
push
outsl
cwtl
fwait
loope
adc
stos
outsl
cmc
cmp
adc
in
adc
test
in
add
add
adc
xor
dec
pushf
adcb
mov
xor
cli
shlb
dec
mov
pop
xchg
addr16
lea
and
cmc
pop
or
add
xchg
fnsave
loopne
jo
into
fwait
and
out
jecxz
fisttpll
rcrl
loop
shll
sbb
cmpl
gs
dec
mov
dec
mov
roll
rol
rol
rol
rol
rol
mov
addr16
sar
jb
xchg
das
jmp
cli
mov
nop
jae
inc
push
clc
icebp
fbstp
push
mov
jo
mov
subl
lods
mull
enter
stos
sub
pop
sahf
push
and
scas
pusha
dec
mov
lods
sqrtps
pop
cli
wrmsr
jns
jae
cmp
or
xchg
jbe
rorl
jg
mov
or
das
sbb
fcmovne
loopne
sbb
mov
test
arpl
orl
push
mov
test
sbb
mov
push
test
sbb
or
leave
mov
lock
xor
add
jl
int3
jl
pusha
dec
arpl
cli
dec
cmp
scas
int
mov
xor
test
pop
scas
lea
xor
xor
inc
lods
das
pop
rcrb
sbb
notb
mov
mov
lahf
xchg
add
pop
bound
aaa
push
sahf
test
data16
mov
or
mov
jno
pop
or
dec
jle
scas
adc
addb
lods
mov
inc
daa
mov
fdivrl
inc
inc
cltd
push
push
insb
cmp
inc
mov
pop
cwtl
inc
inc
out
pop
inc
insl
scas
fidivrl
pushf
cmp
mov
xor
fwait
push
sti
stos
test
sar
mov
and
xchg
iret
out
jg
icebp
mov
push
dec
or
aas
int3
or
mov
faddl
jb
cmpsl
lahf
xchg
mov
mov
in
pushf
sbb
add
test
cmp
mov
and
call
lret
pop
lods
xlat
mov
daa
or
jmp
jg
test
insl
mov
mov
popa
or
mov
ss
movsb
push
push
jnp
lock
mov
lds
aas
xchg
xchg
mul
cmp
jecxz
ljmp
jl
xchg
dec
xchg
pop
inc
mov
pop
and
xor
push
pushf
mov
mov
xchg
js
gs
iret
or
cmpl
jp
jae
gs
scas
sbb
lret
mov
hlt
jmp
push
push
cmp
add
mov
ss
adc
call
cli
scas
sbb
leave
jae
push
push
pop
dec
pushf
pusha
mov
cli
cmp
jmp
fdivs
idivl
inc
or
int3
mov
ret
imul
push
cs
cld
hlt
mov
cltd
pop
cmp
add
sti
lds
pop
mov
xor
mov
adc
sub
inc
jbe
sbb
pusha
jecxz
xchg
in
push
ds
pop
pop
test
test
stos
inc
pop
sub
js
sbb
scas
orl
ljmp
iret
mov
pop
pushf
shl
leave
ret
loop
xchg
mov
gs
fcmovbe
sub
scas
test
push
loope
pop
insl
push
sbb
sbb
xlat
pop
inc
dec
ret
pushl
mov
fsubrs
inc
inc
and
pop
mov
xor
sub
sbb
cmp
push
mov
push
cmp
jge
std
sub
std
sub
xlat
int
inc
inc
sbbl
mov
xchg
xchg
mov
pop
jns
scas
add
xchg
push
jbe
movb
mov
mov
popl
lods
hlt
mov
dec
add
and
loopne
push
pop
sbb
cmp
scas
adc
xchg
iret
xchg
jge
xor
sahf
addr16
movsl
int3
mov
or
popl
adc
jge
sbb
int
aas
inc
cwtl
jo
ds
mov
sbb
lods
push
jl
leave
sub
mov
cwtd
testb
stos
int
cmp
dec
sbb
inc
loop
rorb
int3
cmp
xor
mov
adc
shlb
mov
fistpl
iret
lret
pop
les
in
jp
xor
xchg
push
fwait
pop
jnp
leave
pusha
dec
push
repnz
orl
xchg
sbb
shll
lret
xchg
ss
mov
and
dec
loope
aam
addb
jp
add
xlat
cld
sbb
cmp
movsl
sti
xchg
outsl
insb
sbb
inc
iret
jge
jp
dec
bound
cmc
and
fistl
es
cmp
shrb
xor
mov
push
adc
inc
inc
jb
lea
pop
shl
addl
mov
pop
icebp
mov
std
or
inc
mov
loopne
mov
adc
mov
fwait
lahf
inc
pop
push
pop
cmpsb
sub
out
jo
loop
inc
sbbb
gs
or
push
sub
xchg
and
cmp
mov
cmpsl
and
xor
adc
lds
dec
push
and
cwtl
insb
add
lds
loop
push
ror
repnz
xorb
into
popf
into
pop
loop
stos
jbe
test
mov
adc
push
popf
push
jg
ds
xor
cwtl
xchg
dec
das
push
leave
loope
loope
daa
inc
sub
fidivl
cmp
and
rcrl
out
enter
cmp
mov
jecxz
add
adc
dec
mov
testl
ljmp
fwait
jl
sbb
jl
in
lods
mov
pop
rcrb
pop
inc
hlt
sub
cltd
sub
mov
dec
into
mov
push
test
mov
pop
jne
xchg
mov
jl
xor
pop
std
sbb
repnz
and
or
outsl
mov
pop
or
dec
push
rcrb
cmp
mov
adc
lcall
iret
add
xchg
cwtl
mov
push
seto
lret
mov
push
pop
adc
lds
in
push
jmp
mov
test
addr16
lret
or
jp
and
inc
sub
lret
push
mov
outsl
xchg
into
mov
imul
mov
cwtl
arpl
sub
mov
push
push
add
aaa
xchg
ja
daa
shrb
mov
jg
dec
fwait
jnp
data16
pop
push
xchg
xchg
pop
or
sbb
fldt
xchg
mov
sbb
arpl
repz
idiv
movsl
mov
mov
mov
fnsave
loop
ja
inc
adc
jo
test
mov
repnz
cmp
stos
in
or
andb
lcall
popa
lock
sbb
mov
hlt
dec
fwait
ret
call
cmp
sbb
scas
inc
andl
dec
cmpsb
mov
lahf
ror
and
dec
push
sub
or
sbb
sbb
cmp
lcall
pushf
mov
sub
sub
sub
call
lods
orl
aad
out
mov
cmc
inc
jbe
mov
fimuls
and
and
iret
orb
subl
mov
mov
fcmovb
mov
mov
xchg
jb
aad
xchg
packssdw
test
outsb
aam
rol
rol
rol
rol
rol
rclb
ja
push
mov
dec
mov
cmp
lret
jmp
test
pop
dec
xchg
inc
fwait
xchg
cli
cmp
scas
adc
mov
icebp
add
xor
imul
mov
dec
and
mov
jg
cltd
pop
or
test
popf
test
lods
xor
loope
or
add
mov
mov
cmpsb
and
xchg
xchg
add
loop
inc
into
pop
fldenv
fidivl
add
out
mov
jbe
pushf
mov
popf
popa
aaa
pop
mov
cltd
in
sub
sarb
push
lahf
movsl
js
lds
ss
stos
fsubp
into
loopne
mov
mov
sbbb
dec
ds
imul
dec
mov
lock
cmp
push
fsub
sbb
aas
sbb
mov
pop
lret
test
fisttps
mov
xchg
cltd
mov
cs
fdivrs
push
adc
xchg
add
js
cmpb
sub
int3
xor
repz
push
sub
hlt
push
inc
push
push
hlt
and
or
dec
sbb
test
and
xchg
adc
xchg
pop
or
mov
lahf
pushf
ret
sbbl
xchg
hlt
notb
outsb
add
int3
insl
loop
stos
dec
add
and
dec
repz
cmp
cmp
cmpsl
push
jae
inc
adc
rorl
add
rcrb
cltd
das
daa
rcll
int3
orb
or
nop
or
inc
nop
mov
or
mov
mov
test
out
and
sbb
sub
mov
ds
popa
dec
clc
sahf
les
xchg
out
push
mov
pop
subl
loop
cmp
ljmp
jge
and
inc
fmuls
loopne
xchg
mov
ss
mov
inc
sbb
mov
test
pop
push
clc
call
push
lcall
clc
aas
les
neg
mov
loope
mov
enter
bswap
in
cmp
and
mov
cmpsb
adc
jl
enter
xchg
cmpsb
xchg
cmp
in
cs
or
aam
or
add
mov
aas
and
popf
or
sub
test
jle
mov
push
es
std
repz
fdiv
inc
push
in
push
and
jecxz
jnp
mov
xorb
sub
fidivl
push
dec
push
inc
es
jg
dec
add
push
push
cmp
out
cmp
dec
sub
lods
pushf
sub
jno
int3
loopne
hlt
daa
push
repz
or
sti
subl
jl
push
mov
push
cwtl
clc
dec
adc
sub
sub
insb
cmp
rorb
mov
shll
mov
pop
aaa
insl
les
test
sbb
decb
dec
push
jle
sub
and
xor
mov
xchg
dec
pop
or
mov
into
aaa
addl
orb
inc
aas
daa
adcb
in
xor
subb
xchg
xchg
push
gs
aaa
pusha
jae
inc
mov
roll
mov
push
scas
movsl
ss
inc
pusha
lcall
cmp
daa
mov
pop
loop
aad
lahf
inc
sbb
sti
or
insb
dec
movsl
stos
ds
pop
push
cli
pop
mov
cmpsb
lods
jge
popl
imul
std
mov
mov
mov
and
lea
bound
imul
push
fists
or
scas
lods
rcrb
mov
aas
mov
push
sub
cmpsb
sbb
mov
add
sbb
push
pushf
cld
mov
dec
pop
pop
cmpsl
cltd
mov
lcall
adc
icebp
cld
stos
fldt
arpl
push
stos
dec
push
dec
clc
cmp
mov
mov
popa
or
call
rclb
jne
pop
into
sbb
decb
jle
xchg
mov
int
inc
jmp
pop
cmp
aam
adc
pop
fnstcw
or
inc
popa
or
cs
mov
lret
xor
stc
mov
lods
sti
mov
jne
ja
sub
sti
outsb
stos
aam
jp
sti
cmp
adc
cmpsb
adc
xorb
and
mov
call
loop
iret
push
inc
push
dec
ljmp
in
cmpsb
aam
out
mov
push
mov
lods
mov
and
imul
inc
pop
push
xchg
sbbb
dec
inc
repnz
and
nop
mov
pop
into
dec
lcall
ss
es
push
pop
fbld
jbe
xlat
lret
out
sbb
in
adc
xchg
mov
lret
inc
aam
cmp
push
cld
aaa
nop
pop
hlt
pusha
ret
movsl
lds
mov
mov
pop
jno
jge
dec
mov
out
outsb
popf
lret
push
mov
mov
insl
mov
add
nop
inc
mov
cmp
or
cmpsb
lea
imul
sbb
jb
jno
xor
mov
inc
sub
xchg
push
inc
push
xchg
jle
jge
sub
mov
out
push
jne
inc
outsb
scas
or
jp
sbbl
sub
out
xor
out
outsb
pop
mov
popa
jge
push
loope
xchg
loop
lahf
ja
addr16
pop
fbld
mov
mov
adc
and
scas
ficoml
bswap
push
ja
ret
adc
maskmovq
idivl
stos
in
cli
int3
push
test
outsb
fsubl
jno
ret
inc
psubsb
and
mov
push
out
hlt
ljmp
clc
stos
or
mov
add
pop
lock
fwait
mov
xor
or
mov
pushf
push
enter
xor
jbe
push
repnz
pusha
xchg
xlat
pop
cmpl
mov
iret
popa
sub
xorb
mov
add
lods
ret
cs
pop
insb
subl
pop
push
fucomp
fldt
lds
ret
dec
ret
sbb
test
mov
jo
bound
lcall
add
popf
test
inc
es
push
sub
dec
push
lret
lock
inc
adc
shlb
loop
ret
xor
push
int
mov
dec
stos
jl
dec
mov
movl
popf
ss
lock
ficoms
hlt
jbe
fld
lcall
jecxz
sbb
fsub
imul
inc
shrb
out
cmp
mov
push
mov
clc
inc
data16
ds
and
sub
pop
sub
int3
popa
sub
add
aaa
popf
push
jns
bnd
and
add
faddl
addb
jecxz
ret
mov
sub
mov
je
push
jg
cmp
mov
jns
lahf
scas
lea
das
cltd
les
xor
repz
clc
imul
push
and
test
lods
inc
ja
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
inc
cmp
sbb
filds
xchg
lds
push
loop
adc
aam
aad
lods
fsubrs
push
mov
dec
cmp
xor
push
data16
aad
outsl
pop
cmp
out
cmc
mov
and
mov
or
and
imul
push
and
fs
mov
std
test
cld
popa
dec
out
insb
mov
sub
pop
mov
pushf
or
pop
pop
call
dec
push
push
hlt
sub
mov
or
pop
or
cld
daa
sahf
mov
xlat
cli
jnp
cld
ljmp
rcrb
bound
adcb
idivb
mov
cltd
cmpsl
lock
or
mov
fwait
in
outsb
insb
xchg
inc
mov
cmpsl
xor
jg
loop
dec
nop
add
add
mov
loop
xlat
insb
and
ret
pop
and
stos
mov
mov
inc
stc
mov
popf
iret
jbe
ja
mov
int3
test
ja
push
inc
or
cmp
cs
icebp
mov
jb
mov
pop
rcll
mov
loop
xchg
fstl
adc
sub
xor
pop
jmp
out
mov
jnp
or
cmp
out
xchg
pop
pop
into
scas
add
add
repnz
jecxz
shll
movl
out
mov
sbb
push
xchg
mov
mov
in
push
je
or
cs
mov
adc
cli
and
cs
int
enter
ljmp
aaa
mov
cwtl
inc
xchg
and
and
mov
push
push
cmp
iret
mov
push
dec
js
popa
mov
pop
push
add
outsl
mov
mov
repz
and
mov
sbb
cmp
xchg
nop
pop
loop
push
jae
fists
cwtl
sbb
loop
sahf
jbe
into
mov
sub
cmpl
cmp
and
bound
pop
repnz
stos
lds
xchg
push
negl
cld
mov
inc
dec
fildll
jbe
mov
std
sub
pop
and
pop
loop
aad
shrb
scas
ret
jbe
gs
rcrb
inc
aad
add
dec
js
testb
dec
cli
int
jb
fwait
mov
push
das
call
push
xchg
sub
lods
cmpsb
adc
inc
dec
dec
pop
lods
lock
rclb
fistl
push
xchg
ficoms
cli
sub
adc
imul
out
push
push
iret
sub
aam
push
mov
mov
ret
cmp
sbb
or
or
pop
xor
ss
leave
scas
insb
xor
push
xchg
dec
pop
mov
inc
test
iret
mov
xchg
sub
testb
mov
push
push
mov
hlt
push
cmp
out
pop
ds
pop
mov
add
test
pop
add
sbb
mov
sarl
jle
push
or
sbb
push
fwait
jl
mov
dec
xchg
inc
mov
pop
adc
push
adc
push
repnz
add
push
ret
and
xchg
mov
mov
jp
jle
push
in
pop
inc
leave
rclb
mov
xor
dec
int3
cmp
inc
push
iret
jae
adc
pop
sbb
outsl
xchg
sub
popf
test
mov
inc
pop
sti
and
aad
leave
xor
mov
pushf
cwtl
je
popa
stc
movsb
js
dec
sbb
push
xchg
jp
or
daa
cs
aas
dec
and
mov
ret
pop
dec
lret
sub
aaa
mov
pusha
pop
and
cmpb
adc
andl
ljmp
sub
lret
or
pop
pop
jp
mov
jns
jbe
stos
lock
pop
jbe
test
cltd
sub
ficoml
out
or
cmc
int3
mov
add
lahf
jbe
push
jle
pop
sbb
stos
test
push
je
xchg
jno
mov
xor
leave
loope
sbbl
popf
jmp
popa
sbb
loop
inc
jns
adc
insb
push
adc
jne
push
aad
in
cmpl
mov
add
or
fwait
and
call
xor
and
lods
jle
test
pop
or
sbb
cmp
test
or
add
xor
cld
daa
flds
mov
clc
add
sbb
adc
mov
sbb
mov
jecxz
mov
adcb
movsl
xchg
push
and
mov
int
dec
repnz
jae
push
ret
push
pop
loop
fistpll
dec
jo
jge
pop
jg
jbe
inc
cmpl
call
dec
jnp
out
or
xchg
xchg
fnstenv
pop
sahf
shl
pushf
mov
dec
and
jae
mov
push
xor
mov
scas
clc
rcrb
mov
ja
mov
mov
cs
push
mov
bound
push
cltd
jecxz
xchg
push
movsb
ss
sub
xchg
mov
add
bound
adc
mov
mov
mov
fadds
rcl
push
flds
fildl
in
stc
fisttpll
ljmp
xor
cmpsb
cld
rorb
clc
lods
dec
mov
xchg
je
cwtl
movsl
test
dec
jmp
int3
imul
and
sahf
aaa
loop
out
in
clc
xchg
xchg
ljmp
xchg
adc
fwait
add
jb
dec
inc
xor
popa
sub
fdivrl
push
outsl
out
popa
clc
mov
out
aas
mov
pop
add
ja
cmp
rcll
mov
adc
push
into
js
lret
jno
sub
xor
stos
cmpsb
aam
mov
add
mov
divb
mov
pop
loop
sub
xor
shll
or
xchg
insl
popf
xor
out
loopne
mov
arpl
cmp
aad
pusha
fisubrs
mov
xchg
mov
dec
les
add
push
dec
cmp
hlt
push
leave
or
stos
sub
rcrl
gs
xchg
loop
push
sbb
pop
add
and
sahf
jmp
pop
xor
add
je
pop
pcmpgtw
push
push
cmp
insl
or
out
fldt
rorb
adc
cwtl
xchg
fdivrs
push
or
int
xor
aaa
add
sbb
mov
clc
jo
and
insl
mov
enter
ja
fsubs
fiaddl
rorb
mov
pop
lock
test
arpl
aam
mov
fs
pop
or
xor
rcrl
popa
testl
mov
xchg
inc
addb
jmp
cmp
pop
push
lcall
ficomps
stos
inc
rorb
out
jns
and
xchg
inc
mov
push
push
cmp
out
sub
add
in
inc
ljmp
lret
adc
xchg
lea
enter
mov
dec
fs
les
bound
jle
mov
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rorb
cmp
add
pop
scas
push
cmpb
call
lods
es
cli
fildl
imul
scas
movsb
into
subb
addb
in
out
and
inc
adc
sub
mov
subl
sbb
nop
inc
and
mov
adc
push
or
popf
add
pop
mov
ss
aad
nop
sbb
adc
data16
stos
scas
add
jbe
and
sub
push
mov
imul
int3
push
rcrl
bound
je
push
and
cwtl
movsb
inc
sti
mov
fisttpl
insl
push
scas
inc
sbb
jo
pop
aam
cmc
jge
scas
lods
cwtl
mov
jns
js
leave
jp
leave
pushl
arpl
mov
cltd
imul
aaa
and
rol
fmull
and
push
cmp
lahf
xchg
int3
sub
cltd
xor
or
std
punpckhwd
dec
lods
scas
mov
pop
sub
xchg
outsl
dec
repz
pop
push
and
ljmp
ret
outsl
sahf
push
xor
cs
lods
je
and
movsl
test
cmp
fsubs
xorl
add
fwait
cs
jmp
imul
pop
pusha
lods
cltd
pop
dec
stc
add
mov
mov
test
dec
xchg
jmp
lcall
or
in
ds
mov
out
jmp
xor
push
pop
push
js
cmp
mov
mov
mov
scas
stos
aaa
jge
lcall
pop
pop
repnz
add
jae
test
or
enter
push
test
add
orb
add
mov
sub
mov
mov
cmpsb
add
mov
push
xchg
xorb
adc
clc
or
pop
leave
adc
jne
add
dec
mov
clc
xchg
inc
mov
out
rclb
out
cs
mov
test
negl
lcall
ficoml
xor
test
sbb
iret
dec
je
and
rcr
dec
fisubrs
test
jno
mulb
punpckhdq
sahf
les
jp
xor
outsb
ljmp
sub
and
addr16
sub
and
pusha
mov
out
clc
ret
and
jecxz
ss
mov
addb
add
pushfw
in
xchg
addr16
mov
inc
imul
sarb
xchg
fcoml
jg
mov
in
push
sahf
fnstsw
call
fisubs
cmp
scas
add
fnstsw
push
daa
push
jge
inc
jecxz
mov
mov
fdivr
push
push
adc
fs
enter
push
scas
inc
push
flds
ret
dec
addb
inc
imul
test
sub
outsl
add
sbb
pop
nop
jne
mov
int3
rolb
mov
push
mov
scas
es
xor
iret
add
push
les
std
pop
or
mov
mov
pop
cwtl
scas
pop
jge
and
mov
cmp
mov
scas
pushf
mov
push
xchg
mov
ret
sub
int3
push
mov
or
sbb
mov
pop
pop
fiadds
ss
fmull
mov
in
push
scas
jbe
bound
cld
or
rcr
xchg
cwtl
out
fstl
dec
pop
jecxz
push
popf
mov
add
or
push
divb
xor
ret
aaa
jae
sub
pop
sub
mov
insl
imul
lods
push
jnp
add
ja
push
clc
pop
jae
insl
dec
push
movsb
mov
dec
pusha
or
das
addr16
mov
fcoml
rorl
jmp
rorb
mov
cmpsb
lock
repz
repz
js
decl
sub
sbb
jae
xchg
sbb
adc
int
and
adc
push
xor
xor
stc
mov
or
test
fwait
ret
outsb
push
je
inc
dec
leave
xchg
xchg
inc
std
test
out
pop
inc
and
jbe
lock
push
int3
cmp
inc
push
and
pushf
in
xchg
and
inc
insb
loop
or
and
adc
mov
mov
add
out
mov
adc
test
xor
lock
xor
jp
jge
mov
jo
scas
in
inc
jl
ss
mov
leave
je
loopne
shr
xchg
mov
cmp
push
bound
mov
or
mov
adc
add
fldcw
fbstp
jp
int
push
outsb
into
iret
and
cmp
ss
sbb
mov
clc
cmp
mov
test
and
and
inc
sub
mov
enter
test
in
sbb
test
das
outsl
imul
mov
pop
nop
cmp
or
mov
dec
cmpsb
xchg
lcall
lea
mov
sbb
xchg
pushf
inc
test
jle
in
loopne
push
push
mov
adc
and
das
add
sbb
pop
xchg
jae
mov
rolb
pop
mov
in
popf
lods
hlt
neg
hlt
push
pop
outsb
pop
sahf
fisttpl
sub
daa
xchg
cmpsl
aad
out
call
loopne
push
add
addl
add
push
inc
stos
add
mov
mov
cmp
push
sahf
pop
adc
rcl
mov
outsl
xchg
pop
mov
xchg
xor
insl
xchg
je
cmp
aad
mov
dec
stc
adc
lret
testl
fistl
jmp
fidivrs
xor
push
sub
das
push
jnp
and
mov
adc
dec
sub
sbb
add
imul
enter
push
inc
adc
mov
jns
cmp
mov
adc
adc
fidivs
fistpl
sbb
pop
push
shl
mov
xchg
mov
adc
and
jecxz
pop
mov
idivl
std
ror
movsl
or
xor
jb
mov
jb
jno
push
sbb
test
inc
rcrl
popf
orl
shrb
cmp
pop
js
cmp
dec
jnp
jg
sub
das
sub
mov
push
add
push
dec
pop
cmpsl
xchg
add
xchg
out
xchg
fmull
mov
addr16
xchg
jae
lcall
dec
push
mov
add
mov
js
lea
stos
leave
jle
xchg
jecxz
lods
dec
mov
lcall
push
lods
inc
sbb
arpl
cltd
sarl
push
cmc
leave
inc
mov
repnz
js
aad
and
mov
sbbl
pop
push
aas
xor
lock
mov
aas
test
aad
mov
fbstp
movsb
cmp
xlat
and
pop
jle
and
cmp
add
mov
push
je
je
popa
ljmp
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
test
or
ret
xor
mov
add
cwtl
leave
hlt
push
addb
xchg
rcrl
stos
loope
cmc
aam
aaa
add
aaa
pop
add
popw
adc
sub
imull
jp
dec
jno
imul
sahf
jp
sub
push
xchg
stc
mov
sbb
test
in
hlt
sbb
cmp
jp
imul
lea
bound
mov
lahf
in
out
cmp
mov
add
and
inc
push
add
cld
sbb
xchg
or
ljmp
imul
xchg
in
jl
sbb
dec
int3
sbb
mov
sbb
inc
dec
out
jbe
scas
fisubrl
add
in
sub
mov
enter
mov
pop
bound
pop
push
movsl
dec
and
fcmovnbe
fs
xor
and
xchg
movb
cli
push
fldt
inc
mov
dec
sbb
popl
push
outsl
xor
push
mov
mov
movsl
js
and
mov
jnp
pusha
outsl
sub
push
gs
mov
xchg
ret
push
call
cmpsb
mov
mov
or
jge
and
aaa
rcl
lock
jnp
push
cs
push
mov
or
leave
je
test
inc
cmp
push
pop
xchg
stos
mov
inc
mov
stc
ja
mov
or
mov
mov
das
jno
pop
sub
inc
dec
push
rclb
sbb
pushf
mov
cs
into
mov
mov
mov
clc
adc
loopne
inc
es
xchg
fwait
or
dec
fbld
sbb
stos
lcall
mov
test
in
ja
jle
mov
scas
or
add
ja
cmp
fldt
jmp
xchg
iret
fidivl
pop
or
and
fsubp
jl
jbe
add
stc
lcall
pop
jle
and
clc
ret
mov
mov
push
sahf
out
shll
lahf
pusha
ljmp
dec
push
sub
daa
test
cld
imul
icebp
push
out
pop
popf
loopne
pop
imul
cmp
push
mov
pop
mov
and
inc
dec
cli
xchg
lret
aad
and
outsb
dec
adc
xor
orb
jmp
sti
xor
cmp
adc
popa
cmp
outsb
loop
loop
ss
mov
cmp
ficoml
das
and
imulb
sbb
loopne
cmpsb
arpl
lea
jb
sbb
test
xor
in
shll
sbb
les
dec
push
xchg
es
mov
ja
hlt
and
daa
dec
cltd
mov
add
test
jmp
test
xchg
jae
xchg
fisubl
push
mov
push
scas
pop
ret
rclb
mov
ljmp
bound
jne
outsl
fsubs
lahf
push
and
push
adc
or
stos
xor
pop
push
dec
inc
fists
loope
cmpsb
in
xchg
push
inc
dec
adc
cld
std
lret
movsb
or
idivl
test
add
and
mov
push
sti
pop
add
sub
in
pusha
mov
mov
loop
shr
in
mov
inc
testl
cmpsl
out
pop
and
insb
out
neg
jge
add
cmc
add
sbb
fnstenv
adc
sbb
push
push
pusha
jae
lods
mov
fimull
je
pop
das
mov
inc
insl
mov
call
js
sbb
or
push
and
iret
mov
inc
inc
mov
inc
sub
bound
sbb
xor
mov
xlat
lea
mov
filds
jmp
xor
ja
sub
je
js
push
sbb
pop
les
scas
adc
inc
pop
sbb
push
insb
mov
pop
dec
test
sub
jne
add
roll
ds
xchg
data16
mov
xchg
sbb
xor
jg
or
pop
mov
mov
test
insl
mov
push
push
pop
mov
insb
fwait
ljmp
insl
push
dec
sub
shlb
cmp
inc
rcl
sbb
xor
mov
jl
fsubs
mov
mov
stos
or
jno
iret
call
cmc
lcall
mov
aad
sahf
gs
stc
hlt
dec
xchg
sti
ror
rorb
adc
pop
in
inc
pop
lcall
sbb
mov
push
jl
or
inc
addr16
push
jecxz
mov
or
jb
nop
cmp
hlt
arpl
cmp
jno
sbb
push
stc
popf
scas
jecxz
adc
jae
sub
ljmp
sbb
pop
adc
rol
in
aad
cltd
sub
pop
std
mov
inc
aaa
mov
ret
xchg
cs
es
dec
adc
mov
cwtl
outsl
movsb
push
mov
jecxz
sbb
push
cmp
pop
cmp
xor
add
pushf
popa
test
sbb
xchg
movsl
jle
add
pop
call
sbb
aad
add
sbb
pop
push
es
inc
movsb
pusha
lock
inc
scas
shl
add
insl
pop
add
int3
repz
enter
cmc
add
lods
sbb
push
inc
jns
dec
jae
stc
insl
sbb
daa
jle
cmp
in
out
cmp
lods
lock
mov
sbb
scas
sbb
fisttpll
popf
push
adc
or
xor
fwait
dec
xchg
jmp
cmpsb
adc
pushf
addl
repz
jns
mov
push
pop
jge
jns
xchg
xchg
testl
mov
in
pusha
or
pop
outsb
adc
sub
lods
mov
and
mov
inc
fdivrl
and
xchg
pusha
or
xchg
scas
clrssbsy
mov
pop
adc
loopne
repnz
mov
mov
adcb
push
fstp
lcall
dec
dec
mov
popa
mov
pusha
xchg
push
aad
sub
xchg
sub
lcall
fisttpl
out
repz
sub
repnz
jg
mov
inc
repnz
or
loop
push
sarb
testb
mov
data16
cmp
insb
ret
outsl
leave
xor
add
jbe
pop
in
dec
in
mov
cmp
and
add
std
int
icebp
mov
adc
dec
ret
push
in
xchg
mov
cld
jp
les
stos
insl
and
lds
mov
dec
xchg
sub
sar
sbb
pop
imul
ror
dec
cmc
push
mov
insl
adc
inc
dec
es
lods
std
cwtl
xchg
insl
fildll
mov
popa
negb
xor
cwtl
or
xchg
jecxz
cmc
push
or
mov
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
sti
xchg
sub
mov
mov
int
test
dec
inc
out
fimull
scas
xlat
mov
decb
xor
ds
jle
jns
lret
mov
data16
sbb
jg
cmp
xchg
out
test
xor
mov
or
jge
cmp
mov
mov
xchg
mov
xor
add
inc
arpl
bound
arpl
or
outsl
sub
popf
sub
movsl
mov
sbb
out
push
mov
push
inc
and
mov
vpaddusw
lcall
es
dec
cmp
dec
dec
sub
stc
adc
sbb
add
call
lcall
sbb
mov
in
dec
push
cmp
in
or
scas
push
xchg
push
xchg
sub
add
imull
hlt
je
xor
pushl
lret
fwait
adcl
cwtl
pop
stos
bswap
jae
icebp
movsb
mov
adc
inc
and
mov
add
sub
add
adc
mov
jmp
shll
lcall
lea
inc
adc
shlb
int
inc
in
lods
pop
push
or
cs
jl
test
pop
mov
lods
fidivs
mov
sbb
sub
into
inc
or
sbb
rol
adc
aas
push
subl
push
nop
pop
fdivl
movsl
sbb
cld
add
fiadds
pop
add
pop
imul
test
pushf
data16
push
gs
sbb
popa
insb
pop
pop
bound
and
cmpsl
std
mov
scas
shl
ficoml
pop
mov
into
xchg
or
mov
sti
push
mov
and
cwtl
insl
mov
inc
ret
mov
sub
jno
fidivrl
push
cltd
push
cmpsb
mov
out
insl
jg
fldt
add
jmp
mov
push
jg
pop
aad
rorb
aaa
sub
out
aas
jmp
das
jg
lahf
flds
fwait
push
xlat
pusha
push
std
sub
adc
cli
fstpt
adc
jo
add
scas
or
push
cwtl
scas
inc
pop
pop
loopne
pop
ret
mov
stos
insl
loop
or
fs
or
mov
mov
mov
gs
sbb
in
bound
rorb
inc
mov
pop
sub
sbb
mov
or
push
in
add
xchg
mov
adc
inc
lods
sahf
jl
ret
mov
das
and
pusha
mov
jge
out
stos
popf
cmp
fsubr
enter
pop
add
fmull
inc
negb
adc
loop
loope
jb
mov
iret
das
fdiv
repnz
push
cltd
nop
inc
fxam
cs
dec
lcall
leave
xor
sbb
ret
test
xor
mov
icebp
int3
cmp
adc
inc
sbb
dec
int3
outsl
xor
test
and
daa
repz
xor
cmp
rorb
cmp
fs
jecxz
js
sti
xchg
mov
jbe
mov
push
cld
xor
test
jnp
sub
mov
lret
aas
cmc
lret
xor
mov
jle
daa
inc
adc
push
stos
shll
daa
mov
pushf
push
and
jne
roll
xchg
imulb
mov
rclb
jo
inc
ficompl
mov
dec
push
mov
sbb
jae
dec
cmp
or
scas
imul
sbb
push
aam
pushf
pop
fldt
icebp
bound
lret
pop
push
jb
or
js
cld
pop
mov
mov
push
inc
stos
lahf
test
movsb
out
mov
or
sahf
push
movsb
lcall
fistpl
out
push
mov
std
pop
outsl
sti
stos
jle
sahf
out
stc
enter
mov
cmp
je
rorl
push
sub
addb
stc
push
push
cmp
loopne
pushf
adc
cmc
lret
dec
aam
mov
insl
mov
push
add
jecxz
je
lret
push
sbbb
loope
push
xor
xlat
mov
mov
xchg
push
dec
das
push
lret
jl
inc
mov
shlb
out
sbb
call
mov
adcl
xor
sti
push
popa
sbb
fisttps
movsb
jl
mov
pop
pushf
out
jl
pop
xor
xchg
push
sahf
dec
repnz
and
mov
xchg
push
outsl
pop
dec
hlt
rclb
pop
mov
xchg
popf
pop
push
and
cmpsb
insl
xor
ss
fidivs
and
mov
jae
mov
mov
mov
test
sub
mov
inc
das
cs
aad
sub
in
outsl
pop
adc
push
out
bound
or
inc
or
cwtl
mov
cmp
mov
loop
xor
repz
mov
test
movsl
push
pop
lds
mov
pop
jae
fdivrp
push
mov
loope
andl
mov
inc
inc
popa
adc
or
fdivs
les
mov
push
cmp
mov
push
cmp
dec
lcall
inc
xor
js
mov
mov
ljmp
pushf
lahf
xchg
inc
adc
pushf
add
mov
adc
adc
lods
xchg
hlt
iret
movsl
and
sub
add
cmp
xchg
mov
adc
mov
loop
out
push
or
inc
pop
js
mov
out
and
pop
xor
cmp
testl
je
es
cmpsl
lods
pop
idiv
jbe
nop
jno
inc
and
lods
dec
scas
xlat
stc
push
lcall
and
popf
xor
mov
mov
imul
add
cmc
sahf
cmp
inc
int3
pop
and
aaa
sbb
lahf
frstor
push
adc
xchg
dec
push
xchg
insb
jo
bound
lret
adc
sbb
gs
mov
jae
dec
ret
mov
or
pusha
mov
dec
sbb
push
daa
pop
test
mov
cltd
pop
xor
inc
xchg
decl
pop
xor
sbb
push
xor
ss
std
sbb
arpl
sbb
or
ret
xor
mov
test
lods
sub
into
pusha
add
je
pop
fwait
xchg
xchg
add
inc
shlb
push
rcl
sub
push
les
rolb
or
sub
mov
mov
leave
sub
dec
sub
lcall
stos
sub
mov
cld
cs
or
mov
mov
inc
push
loopne
pop
loope
test
clc
pop
cmp
jge
and
adc
loopne
sarl
movsb
mov
add
fsubrp
push
mov
movsb
mov
jne
lock
inc
ss
loop
out
or
fbstp
ss
cmp
loop
push
xor
jne
lahf
jmp
sub
mov
xor
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
mov
outsl
stos
inc
sbb
sub
pop
xchg
and
xchg
dec
push
or
xchg
push
fdivs
lea
fstpt
push
aas
adc
neg
cmpsl
dec
push
enter
mov
adc
adcl
jle
mov
mov
or
ds
in
push
or
mov
mov
or
ror
loop
rorb
dec
orl
pop
push
jbe
mov
pop
pop
sti
lock
popf
js
enter
cs
mov
call
shl
int3
push
into
adc
dec
mov
negb
dec
mov
and
insb
cmc
mov
lret
xor
mov
push
pop
pop
push
jp
xor
add
or
add
into
sbb
push
inc
xchg
inc
push
xor
jg
mov
push
movsb
jle
shlb
hlt
nop
mov
cmp
addr16
movsl
sarl
inc
hlt
xchg
push
push
pusha
lret
rcll
xchg
jl
ficompl
xor
divl
xchg
pop
sbb
pop
faddl
push
lock
xor
pop
insb
pop
in
or
sbb
add
xor
jecxz
dec
push
lea
imul
inc
mov
popa
mov
xchg
add
cmp
push
mov
ss
mov
outsb
add
insb
dec
shll
loopne
mov
jne
adc
jb
popa
outsb
push
adc
icebp
adc
xchg
sbb
pop
loop
sarb
inc
cwtl
mov
arpl
int3
into
andb
and
call
mov
pushf
ret
sbb
inc
cli
xchg
out
shrb
mov
les
loopne
fstl
dec
popa
push
lods
popa
testb
rorl
xlat
fwait
xorl
and
int
or
cmp
xlat
jecxz
divl
dec
jg
xor
xor
test
inc
adc
jne
push
jp
inc
or
cmpsl
pop
pop
scas
ljmp
lcall
jg
and
cmp
loope
shll
out
notl
xor
pop
hlt
mull
or
jmp
out
insb
mov
pop
outsb
pop
jp
pop
outsb
shrb
adc
andl
test
push
adc
mov
sar
adc
cwtl
pop
cmp
mov
xchg
movsl
inc
data16
jns
test
in
fsubrs
test
sahf
popf
jnp
jg
mov
iret
push
pop
add
push
push
xlat
loop
xchg
iret
cmpb
xchg
imul
cmp
pop
adc
mov
mov
inc
xor
dec
ja
inc
divb
push
push
mov
or
scas
pop
inc
stos
lods
out
repnz
pop
scas
cli
push
sbb
mov
xchg
inc
and
in
and
loopne
jp
push
ljmp
jb
stc
fsubr
or
xchg
out
scas
inc
dec
arpl
sarb
leave
mov
movl
xor
repz
or
pop
lock
cmp
les
std
lcall
call
cmpsl
daa
addr16
dec
adc
xor
push
pusha
fwait
mov
pop
mov
dec
cmp
jp
test
mov
repnz
bound
adc
xorl
add
dec
dec
mov
mov
addr16
test
xchg
scas
out
pushf
pop
sub
pop
mov
and
push
sub
push
into
test
loopne
pop
loope
cmc
xchg
iret
rclb
pop
popf
filds
fiaddl
fldl
push
rclb
push
jmp
and
mov
fisubrl
in
pop
loope
xchg
aas
outsb
add
push
jbe
dec
xor
es
jecxz
jle
stos
or
pop
or
mov
sbb
jp
clc
loope
push
daa
test
push
and
inc
cs
fadd
xchg
sub
push
fbstp
popa
cmp
popf
push
cs
pusha
je
pop
mov
push
and
mov
stc
pop
and
or
addr16
in
xor
push
cwtl
rep
push
int
push
xchg
or
aam
sub
dec
ds
and
cmpsl
test
test
push
pop
xor
inc
push
mov
dec
icebp
sub
push
shll
test
pop
xor
or
test
xor
xor
and
pop
sub
sahf
jmp
test
inc
mov
out
pop
sub
out
mov
sub
dec
mov
push
loopne
push
icebp
aaa
pusha
jnp
sbb
sbb
lahf
mov
pop
jg
add
jle
shlb
sub
push
int3
cmp
out
jnp
push
and
sbb
xor
add
int3
xchg
cmpsb
fisubl
sbb
pop
push
jge
pusha
bnd
daa
push
subb
repz
ss
subl
in
aad
sub
xor
fbld
shlb
add
xlat
hlt
or
arpl
lret
xor
jmp
or
push
lret
inc
fimuls
sub
fidivl
mov
cwtl
add
mov
mov
jne
pop
popf
push
jne
xchg
cmp
jp
jns
pusha
nop
cmp
test
sbb
inc
insl
add
outsl
imul
es
shrl
dec
push
stos
inc
movb
pop
xchg
pop
mov
imul
dec
pushf
pop
enter
mov
push
and
pop
lcall
cmp
ficoms
mov
lahf
in
call
xchg
les
out
sti
aam
sti
stos
mov
pop
xchg
ret
es
xor
dec
or
fdivl
pusha
lret
popf
arpl
iret
xchg
lret
jns
andl
stos
fistpll
push
mov
jbe
mov
pushf
lea
cltd
mov
aam
mov
inc
sbb
xor
shrb
hlt
stos
mov
je
aaa
rep
push
and
fisttpl
jae
mov
or
fistps
lods
shll
xchg
enter
inc
daa
mov
rol
jo
loopne
cmc
cli
cmp
sbb
adc
scas
fcomps
push
pop
subl
hlt
mov
xor
dec
xchg
sbb
push
dec
inc
mov
push
pop
mov
add
inc
sub
mov
cli
das
jnp
push
dec
inc
call
mov
enter
pop
aam
insl
lret
inc
mov
cmpsl
jmp
jg
jne
push
push
and
xorl
sbb
and
adc
lock
jmp
cmp
xchg
jg
jne
shlb
lea
sub
testl
sti
mov
adc
inc
subl
sub
enter
cwtl
int
add
sbb
call
orl
call
push
ljmp
push
jnp
movsl
push
loope
rcll
mov
cmpsl
jnp
jle
dec
out
xchg
aam
fisubrl
or
or
hlt
popa
fadds
in
ficoml
int3
sub
rol
rol
rol
rol
rol
rol
rol
rol
aam
and
leave
dec
dec
mov
inc
inc
fistps
sub
sti
ss
sub
cwtl
jne
xchg
out
aad
add
addb
repz
xchg
loopne
sub
or
hlt
sbb
mov
ror
les
lds
dec
jmp
int3
dec
sbb
lds
test
inc
popa
jae
pop
lock
jnp
sarl
jg
pop
jmp
loope
dec
push
sbb
push
les
add
test
and
lods
imul
cwtd
notb
outsb
and
push
stos
rcrb
imul
dec
mov
cmp
xchg
outsb
clc
lret
popa
add
mov
dec
ficompl
inc
enter
out
sbb
fwait
mov
scas
out
int3
idivb
pop
jno
int3
faddl
jmp
shll
mov
es
add
mov
aaa
insl
add
mov
js
jl
dec
bound
leave
add
cmc
dec
jne
fsubrs
mov
push
loopne
mov
data16
stc
mov
sbb
push
je
mov
push
xchg
push
test
dec
jg
hlt
mov
xchg
decb
ds
and
sub
cmp
mov
out
pop
lods
or
inc
xchg
shll
sbb
lret
test
add
or
inc
mov
sbb
aaa
lock
fsubl
insb
stos
das
lret
clc
pop
adcl
rorb
mov
mov
stc
sub
or
test
out
xchg
adc
jmp
cmpsb
adc
add
sti
cmp
xchg
dec
xchg
or
push
int3
xorps
push
jnp
inc
pop
jne
jmp
sub
in
out
hlt
cmp
addl
rcl
cmp
mov
shrb
outsl
rcrb
outsl
ja
pop
call
xchg
fcmovnb
pop
mov
add
in
cmp
fdivs
loopne
jo
es
jle
scas
mov
popf
add
adc
mov
xchg
cmovg
inc
push
mov
ret
sub
mov
rcrb
inc
loope
and
pop
fbstp
mov
pop
or
fiaddl
fs
sub
idivl
fnstsw
mov
jns
mov
gs
ja
push
test
js
or
das
cmp
pop
out
cmp
mov
cltd
ja
je
out
sbb
movsl
cmc
subl
and
movsb
sub
add
sahf
xchg
dec
push
inc
mov
xchg
inc
sub
mov
jnp
push
shl
push
pop
or
stc
pop
xchg
mov
pushf
insl
jle
jg
cmpsb
add
dec
addb
xlat
jbe
xor
mov
or
rcrb
pop
fnstsw
mov
add
ficompl
sbb
sti
mov
or
cmpsb
jb
jl
push
jne
insl
mov
jno
out
jno
pop
nop
push
pushf
jb
kmovw
xchg
xor
ljmp
shrl
stos
fisubs
fwait
test
xchg
xchg
outsb
dec
outsl
mov
pop
add
mov
or
mov
and
jbe
lea
sub
mov
enter
inc
mov
mov
arpl
loopne
stc
imul
and
scas
ret
inc
sub
mov
pop
add
test
incb
xchg
mov
dec
inc
add
out
sahf
dec
push
lahf
test
sbbl
dec
iret
aaa
popa
adc
mov
loop
fiadds
ret
sub
sbb
xchg
sbb
lea
scas
sub
lock
and
daa
gs
inc
lods
cmp
cmp
cmp
mov
mov
call
lock
fisttpll
xchg
popf
mov
pop
das
jecxz
iret
or
and
repz
sbb
mov
cmp
repnz
jbe
stc
adc
inc
fstl
shlb
or
adc
mov
mov
cwtl
fimuls
xor
adc
test
sbb
push
adc
aam
add
mov
cmp
pop
pop
mov
jb
mov
inc
dec
push
push
cmp
cwtl
or
adc
mov
mov
sahf
dec
popa
imul
push
mov
push
jmp
xor
push
inc
xlat
insl
sub
mov
xchg
jnp
push
int
adc
or
adc
into
jae
aad
jb
pop
add
aad
cmp
lea
test
push
movsl
mov
or
call
and
cmp
mov
cmp
cmovnp
insl
push
mov
fstpt
lret
divb
int
push
cmp
mov
in
cld
mov
jnp
xor
test
int3
and
cmpsb
mov
mov
outsb
test
jb
cmc
mov
fs
lock
push
ljmp
pop
out
nop
cmp
loop
xor
mov
jmp
div
les
out
mov
mov
jge
push
cmpsb
pop
and
scas
mov
jae
stos
add
and
shll
xorb
mov
movsb
pop
stos
inc
lock
mov
cmp
adcb
xchg
pop
push
in
add
xlat
stc
mov
daa
mov
out
imul
cltd
imul
sub
lods
push
adc
cmc
mov
in
mov
pop
ja
pop
pushl
mov
mov
pusha
push
jmp
ss
xchg
mov
push
inc
out
mov
or
sub
cmpl
scas
ja
push
xor
jge
or
ss
cmc
cmpsb
ljmp
adc
push
sub
enter
out
xor
sub
xchg
jle
int3
pop
xor
inc
sbb
add
and
jp
or
adc
pop
dec
lea
mov
mov
int3
xor
imul
xchg
jnp
test
sub
das
xchg
test
jmp
loopne
push
fsub
ficompl
cs
sbb
incl
imul
data16
pop
push
imull
sub
les
testl
in
cwtl
mov
aaa
push
jmp
ret
xchg
inc
xlat
loope
sbb
mulb
xor
cltd
je
mov
shl
mov
lret
dec
rol
jns
push
sub
or
push
cmovb
addr16
pop
add
addr16
rol
fwait
test
fsubr
sub
in
mov
sahf
push
sbb
je
sbb
shlb
mov
xor
dec
mov
lock
sbb
mov
mov
push
je
test
repz
adc
dec
xchg
repz
pop
into
sbb
repnz
sub
mov
fwait
int
cmpsb
xchg
adc
jb
lahf
rorl
xlat
sub
stos
ret
mov
xor
adcb
jnp
mov
lret
icebp
xchg
push
test
mov
jb
hlt
mov
or
les
and
rclb
lret
pusha
sbb
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
push
jno
shrd
nop
or
and
xchg
stos
jae
and
ss
dec
xlat
repz
add
pop
push
and
fstpl
es
push
adc
cmpsl
add
js
push
mov
clc
cltd
icebp
cmp
movsb
pop
mov
aaa
fstpt
into
iret
push
adc
setl
xchg
jae
lahf
lods
lret
cmp
in
xor
rcrb
js
adc
dec
cld
xchg
inc
imul
test
shll
lcall
sbb
pop
int3
and
cwtl
mov
cmp
fstpt
lea
fcmovne
mov
push
mov
mov
iret
fld
push
iret
in
lods
rcll
push
mov
dec
lds
aam
push
pop
push
stos
jne
mov
push
pop
and
add
mov
push
pop
pop
fmul
xor
mov
fistps
pop
push
pop
ss
ja
shl
adc
jbe
jne
ljmp
jb
ret
lds
frstor
sbb
xlat
nop
fldl
and
clc
pop
dec
push
stc
or
xor
xchg
xor
cmp
imul
gs
imul
fisubrs
push
push
jecxz
lret
leave
ftst
adc
jle
loopne
xchg
mov
scas
cwtl
fildll
sub
xchg
jne
mov
mov
mov
and
and
ret
les
jge
and
mov
cmp
imul
repz
es
clc
sub
das
int
scas
imul
mov
fisttpll
stos
mov
call
popa
dec
movsl
xchg
shlb
mov
pop
ret
pusha
adc
fcoml
int3
cmp
xor
pop
inc
insl
push
xor
mov
or
cmp
daa
adc
dec
pop
push
push
ret
ja
and
outsl
pop
jg
stos
xchg
orb
or
aad
dec
adc
iret
sbb
ss
lea
pushf
sbb
ja
mov
test
cmp
sbb
or
inc
or
sub
xchg
lods
ret
addr16
test
push
rorb
sahf
sub
pop
test
out
adc
ss
adc
pop
loope
sbb
stc
pop
pusha
in
cmp
push
cwtl
xor
fnsave
dec
push
dec
aas
or
pushf
jne
or
mov
into
push
les
jo
rcrl
cmc
aas
jp
hlt
or
subl
jge
xchg
sbb
xor
mov
mov
popa
ljmp
push
and
jg
cli
dec
mov
and
push
loop
dec
push
jecxz
dec
sahf
cs
mov
cmp
cmp
mov
push
ret
sub
pop
mov
xchg
sahf
sub
or
jnp
loopne
sbb
jecxz
jbe
push
pop
sub
rcrl
lahf
icebp
shlb
movsl
jns
jmp
xchg
jae
insl
jbe
addb
mov
cld
cmp
sbb
fiadds
cmp
jbe
mov
xor
sbb
fdivp
bound
mov
lock
mov
jo
out
sub
fsubp
or
jl
and
les
ljmp
pop
add
out
or
cmp
stos
outsl
inc
or
or
sbb
xor
ror
fstpl
stos
dec
push
movsb
arpl
arpl
cmp
sub
and
mov
cmpl
addb
flds
and
add
ljmp
js
mov
sub
pop
cs
add
shll
lock
jge
sub
mov
inc
iret
xchg
xchg
pushf
stos
push
push
popa
mov
mov
xchg
cmpsb
push
enter
push
mov
jg
cmp
mov
sub
sub
xchg
push
xchg
cmp
jp
out
sahf
mov
sub
jp
mov
je
inc
jge
sbb
cli
pop
push
pop
inc
xchg
lods
in
adc
ds
scas
mov
shrb
sbb
addb
call
aas
jns
sbb
sub
aaa
dec
push
out
dec
push
sub
ss
pusha
sbb
add
or
ljmp
inc
push
pusha
adc
xchg
cmp
dec
jb
or
inc
xorb
add
cmp
arpl
sbb
sub
dec
mov
sahf
jg
data16
sbb
or
call
mov
xor
fidivs
rcl
dec
inc
push
cltd
into
ljmp
lods
cwtl
fiadds
mov
ret
mov
inc
jb
jg
jle
test
add
xor
cmpsb
fidivrl
adcb
shll
sub
je
and
pop
sbb
scas
cltd
pushf
ljmp
lret
jae
mov
imul
fdivl
mov
popa
ss
fisubs
std
mov
cltd
dec
jb
and
add
lcall
adc
mov
inc
add
push
inc
rcrb
adc
into
sub
fwait
cs
pop
stos
jb
cmc
ss
sub
out
mov
mov
stos
fstl
rcrb
mov
test
sahf
xchg
pushf
fidivs
imul
xchg
out
ja
stos
cmpb
xchg
push
dec
and
fmul
mov
pop
mov
sub
int3
sbb
and
xchg
sti
cmp
or
mov
int3
xchg
popa
cmp
into
push
test
movsb
dec
dec
sbb
cmp
loope
lods
jnp
sbb
imul
mov
adc
cmp
scas
sbb
lea
insb
into
push
icebp
icebp
pop
lea
testb
shlb
pushf
sub
fiaddl
adc
lret
mov
call
movsl
sti
and
aad
adc
pop
stc
sbbl
lods
subl
add
loop
inc
jle
ljmp
mov
mov
jb
cmpsb
inc
inc
iret
rclb
notb
sub
out
addr16
xlat
mov
and
ss
add
mov
pop
in
fnstsw
sbb
pop
cld
sbb
aas
cltd
aaa
iret
and
lods
inc
xor
push
in
and
xor
cmc
or
je
aaa
jb
dec
sub
scas
push
add
dec
ss
xchg
cmpsb
pop
dec
sub
xchg
sbb
int3
cmp
jle
dec
lds
or
or
mov
data16
stos
xchg
and
adc
cs
aam
lea
cs
push
scas
dec
pusha
cmp
xor
lcall
out
add
add
lahf
cltd
push
adc
push
xorb
fstp
ret
sbb
les
in
jg
xchg
push
in
jbe
stos
and
rcl
add
push
inc
jne
mov
push
adc
jp
in
mov
mov
push
in
sub
mov
and
out
movsl
lahf
lea
faddl
lock
push
inc
shrb
jb
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
sarb
andb
mov
cmp
loop
pop
dec
scas
adc
mov
pop
je
lahf
jle
hlt
jns
fdivrs
and
push
into
sub
aam
mov
dec
ret
and
add
fmuls
cld
lret
adc
or
fldl2t
fisubrl
mov
or
mov
repz
std
push
mov
scas
adc
repz
adc
repz
xchg
pop
jge
lret
dec
dec
xchg
push
mov
pusha
fldt
jmp
or
push
inc
mov
outsb
xchg
sbb
das
cmp
cwtl
cmp
sbb
jnp
push
mov
push
pop
subb
add
xor
xor
and
push
out
push
nop
loope
jp
cmpb
jae
or
or
jbe
stos
sbb
aad
pop
loop
fbstp
adc
loop
imul
and
dec
pushf
xchg
pop
lods
pop
adc
cmp
inc
xor
sbb
adc
sahf
sbb
push
sbb
and
cmp
mov
dec
cmp
add
inc
sub
xchg
enter
add
mov
icebp
mov
fwait
loopne
push
cld
sub
cmc
jmp
ja
inc
add
mov
test
pop
cltd
xchg
sub
int3
and
cli
sbb
cmp
cmp
pushf
and
test
stos
mov
push
fiadds
cmpsb
fldt
mov
bound
pop
jae
pop
add
sbb
mov
int3
jp
inc
push
lcall
sub
ljmp
inc
lret
lcall
inc
cmpsb
lcall
test
mov
std
test
xor
outsb
dec
push
sbb
cmc
inc
pop
push
shlb
subl
popf
jo
fisttps
jmp
mov
pop
pop
jae
push
and
pusha
loope
dec
mov
xor
add
add
mov
jne
sbb
inc
mov
testb
outsb
sub
and
mov
stc
scas
cmp
dec
xchg
insb
scas
sub
xor
pushf
pop
out
sbb
jne
mov
add
sbb
mov
aaa
inc
dec
cwtl
cmp
cs
push
pop
mov
xchg
jnp
cmp
aad
in
fimull
xlat
icebp
cmp
adcb
je
inc
dec
push
push
mov
enter
push
cld
test
jp
mov
or
stos
add
push
neg
cmpl
xchg
adc
aad
fisubl
pop
mov
push
loop
imul
cmpsl
iret
leave
jmp
mov
scas
push
xor
push
test
cmpsb
nop
fnstenv
inc
cmp
jne
popa
xor
fstpt
call
in
dec
inc
mov
push
fidivl
push
ss
loop
pop
movb
inc
mov
push
test
int
mov
pop
xchg
dec
repnz
xor
out
pop
jle
and
push
dec
jb
sub
mov
mov
int
xchg
setbe
mov
mov
popf
das
mov
xchg
push
clc
sbb
lahf
cli
push
mov
mov
xlat
add
xchg
mov
js
movups
add
push
mov
fs
popa
scas
js
jno
pushf
cmp
insl
repz
rclb
fcompl
and
ja
jg
into
xchg
and
xor
push
inc
push
adc
push
mov
push
imul
push
push
sbb
fdivs
pusha
push
jecxz
sub
shlb
jne
lret
shl
adc
mov
jmp
sub
sbbl
icebp
outsl
and
fisubrs
js
sub
and
loopne
inc
pop
mov
push
xchg
push
in
ja
or
mov
mov
mov
xchg
test
stos
nop
scas
xor
sub
out
movsb
shlb
push
pop
orb
dec
and
imulb
add
inc
fidivrl
mov
pop
dec
jge
es
xchg
or
inc
testl
xor
in
jno
inc
xchg
adc
std
xor
jbe
jg
pop
test
loopne
adc
arpl
mov
rorb
iret
out
outsl
cmovge
cli
sub
add
in
sub
adc
aas
pop
and
sbb
sub
addl
lods
lods
mov
cmpsl
sbbb
inc
or
push
pop
iret
dec
add
shlb
cli
jp
std
pop
adc
rorb
movsb
pop
mov
movsl
in
sub
push
stos
fisttpll
popf
popa
into
xor
adc
out
and
loop
cmp
cmp
in
adc
sub
push
push
lret
fnstcw
js
repz
add
ret
div
jp
adcb
imul
mov
pop
xor
in
sbb
dec
mov
mov
add
mov
rol
jge
lods
lods
mov
loope
jbe
stos
xchg
cld
imul
jno
pop
loop
mov
xchg
push
xor
sbb
inc
push
testb
mov
or
cmp
aam
add
and
cld
push
test
cmp
jp
adc
repz
jae
cmp
loop
popa
cmp
pop
adc
rorb
popf
jmp
push
and
aad
add
and
add
lcall
mov
mov
rol
jg
sti
test
mov
aad
pop
pop
xchg
sbb
jecxz
jno
add
stos
sahf
jo
push
addb
mov
out
jne
into
fidivrs
ret
mov
cwtl
and
rorb
mov
loop
mov
and
movsl
dec
add
adcb
pusha
push
push
subl
insb
sahf
loope
adc
push
lds
in
lret
aam
adcl
sbb
pop
dec
xor
and
adc
inc
jecxz
adc
outsb
dec
ror
and
add
mov
add
imul
inc
loop
xorl
inc
cld
mov
leave
jbe
stos
and
fadd
push
sbb
int3
xchg
jo
mov
jge
dec
or
cmp
sbb
sbb
and
je
dec
stc
scas
jge
lret
mov
or
ret
dec
mov
bound
in
xlat
in
stos
sbb
hlt
cwtl
int3
test
ret
inc
xchg
xor
mov
sbb
cs
in
inc
xor
inc
cltd
dec
push
test
inc
inc
mov
jmp
fistps
sbb
mov
fwait
cmp
pop
es
mov
sub
lds
dec
pop
push
sub
pop
cmp
insl
aad
orb
or
pop
dec
sar
mov
addr16
sbb
out
adc
inc
ljmp
cmp
outsl
loopw
xchg
jp
or
push
or
or
sub
ds
xchg
adc
stos
jle
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
pop
imul
xor
sub
xor
test
ror
push
mov
xchg
mulb
xor
and
shll
insb
fnstcw
daa
into
ss
add
fldt
cltd
das
push
out
push
xchg
ja,pn
push
add
cmpsl
cmp
xorl
dec
mov
xor
xchg
inc
fistpl
les
dec
in
dec
dec
push
pop
add
mull
ds
adc
test
cmc
icebp
mov
sub
pop
mov
out
es
xchg
mov
cwtl
into
test
xchg
cmp
outsb
addr16
pop
fnsave
dec
jp
add
and
mov
stos
inc
stos
lret
out
ss
pop
dec
xor
out
sti
xchg
in
mov
popf
mov
mov
into
cmc
das
xlat
jg
xor
jns
sbb
pop
es
jp
ljmp
mov
movsb
add
pop
sub
xchg
jmp
subb
lods
movsb
pop
mov
in
pop
cli
nop
xchg
pop
mov
ret
out
shl
out
lock
cli
sub
sbb
mov
push
int3
das
lock
cmp
sub
mov
pop
lret
cli
and
arpl
sbb
iret
incb
jle
sub
xor
insb
mov
push
scas
out
lods
sti
mov
fwait
push
sbb
popf
mov
pusha
jb
sbb
mov
pop
test
jbe
or
lds
jb,pt
jmp
dec
enter
pop
pop
out
sbb
mov
jp
nop
loope
movl
gs
aas
aaa
jno
int3
sbb
in
sub
xchg
negl
fwait
aaa
xor
aad
jb
xchg
xor
mov
or
addr16
jbe
mov
cmpsb
mov
mov
aaa
cmc
movsb
cli
fcomps
and
and
popa
and
mov
jne
adc
mov
push
inc
mov
int3
inc
stos
mov
je
dec
pop
addr16
jnp
nop
adc
mov
jo
pop
in
pop
bound
push
and
dec
mov
shll
sub
cmp
lods
outsb
push
or
insl
inc
add
xor
jne
movsl
pop
mov
test
jg
lock
orl
push
add
clc
bound
les
rorb
jnp
push
pop
xor
in
aaa
int
lods
add
sbb
fisubrl
dec
add
cmp
and
sbb
xor
lods
lods
mov
mov
xlat
cli
int
adc
inc
push
and
pusha
push
cmp
pop
adc
gs
pop
gs
or
adc
push
out
pop
jns
rorb
or
xchg
jge
xlat
inc
cltd
or
insl
cmp
inc
arpl
jp
fdivl
aaa
xor
push
cmp
xor
push
xchg
cs
fsubrs
mov
cmpsl
mov
sti
jl
add
iret
adc
test
xor
inc
mull
jbe
or
cwtl
lea
sub
and
mov
mov
add
xchg
sbb
ja
or
pop
adc
je
sbb
int3
jo
scas
iret
repz
stos
aaa
lds
aam
adc
adc
jno
xorl
iret
sbb
ror
sub
dec
mov
mov
mov
andl
out
sub
fdivl
lcall
push
in
movsl
inc
mov
push
call
and
insl
jnp
test
loopne
push
add
ret
rcrl
mov
and
cmp
xchg
and
shrb
inc
add
and
jns
mov
bound
div
add
shll
mov
cmovge
xchg
lahf
clc
out
bound
rorb
cld
sbb
push
cmpsb
mov
leave
gs
add
pusha
js
pushf
mov
mov
gs
or
jmp
movsb
jge
push
lods
test
inc
xchg
xchg
ja
ret
mov
int3
bound
lods
ljmp
dec
adc
mov
or
pop
add
cli
subb
sbb
push
popa
call
cld
add
std
push
add
loop,pn
stos
call
scas
les
mov
es
loop
push
pop
call
adc
je
mov
mov
mov
stos
scas
jo
mov
fwait
mov
fistpll
pushf
pop
rorb
aam
out
int3
sbbb
inc
and
lahf
mov
cmp
xor
jbe
sub
sub
call
inc
sqrtps
arpl
add
sti
rcll
repnz
cli
mov
adc
bound
add
cmp
jle
cmp
sbb
or
mov
test
add
in
add
dec
mov
repz
push
xor
imul
inc
div
adcl
mov
loopne
sbbb
sbb
push
pop
loopne
xchg
add
mov
pop
inc
inc
push
adc
xchg
lds
out
test
and
cmpsl
mov
mov
negl
cmp
jge
into
xchg
loopne
push
adc
jb
or
push
xor
insb
sti
notb
lret
lcall
lahf
dec
mov
or
dec
in
sbb
ja
pusha
push
xorl
fwait
push
sbb
dec
mov
pushf
mov
push
into
leave
ss
inc
lcall
push
cmpsb
pop
or
jmp
cld
mov
scas
jo
xchg
jecxz
icebp
out
sub
xchg
sub
pop
add
cmp
dec
sbb
cmpsl
rorl
cmp
jo
stos
jbe
jbe
data16
adc
adcl
sub
sbb
movsb
sar
inc
push
pop
je
sti
inc
inc
pop
inc
or
or
push
les
iret
mov
adc
mov
xor
cmpsl
pop
dec
jp
test
inc
cs
ret
mov
mov
js
lahf
out
jnp
sub
mov
pop
jns
lock
inc
loope
fimull
jmp
xchg
mov
stos
pop
les
jbe
cmp
loope
xor
dec
or
sahf
lods
clc
push
cwtl
mov
movsl
or
jg
sub
jns
repz
lock
xchg
test
mov
xchg
mov
sub
adc
fisubs
push
cmc
lahf
xlat
mov
adc
aad
leave
addr16
lds
dec
push
xor
js
xor
mov
lahf
xchg
aas
repz
xor
push
ret
inc
mov
aad
arpl
dec
push
or
push
hlt
xor
addr16
mov
sub
inc
outsb
inc
das
push
dec
mov
lret
push
int3
jb
adc
sahf
mov
std
daa
mov
repnz
push
push
and
mov
adc
dec
xchg
push
push
xor
sar
mov
adc
fcmovne
push
and
add
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
clc
into
addr16
inc
das
enter
push
std
ret
push
jae
test
data16
fbstp
mov
jge
adc
roll
ljmp
or
mov
mov
mov
popa
ret
add
mov
adc
jne
ficompl
andl
push
shlb
loop
mov
insb
xorl
pop
lret
sbb
loop
push
loop
dec
xchg
sub
outsb
punpckhdq
and
dec
leave
and
dec
repz
pop
mov
movl
mov
stos
sub
lret
mov
clc
rcll
repz
nop
aam
jmp
js
push
add
cmc
push
and
sbb
mov
jb
in
xor
dec
pop
es
lret
loopne
jle
xor
dec
int3
test
out
cmp
insb
or
int
lock
or
fidivl
int3
add
test
cmc
and
cmc
jle
iret
mov
and
mov
xor
mov
push
hlt
nop
mov
shr
ffreep
xchg
xchg
push
hlt
ficoml
cmp
mov
mov
inc
mov
ret
push
xchg
insb
insl
fwait
xor
cmc
ret
and
fistpl
xor
stc
loopne
inc
rorb
cs
inc
dec
sahf
lods
nop
sub
aad
aad
es
shll
aaa
and
out
sarl
into
aas
pop
add
inc
add
cs
cmp
mov
push
pop
mov
push
xchg
out
int3
jge
stos
add
inc
lods
xor
xchg
lcall
mov
mov
and
xchg
cmp
andb
jne
lods
insb
insb
jp
adc
adc
loop
xchg
inc
xchg
adc
inc
jbe
lcall
cmpsl
sahf
pop
loopne
clc
stc
sbb
orl
xchg
dec
cmpsb
popa
dec
adc
add
sarb
pop
test
loopne
test
mov
pop
inc
repz
ja
ss
sbb
sub
test
xchg
out
mov
xchg
outsb
lahf
sbb
jb
mov
lahf
iret
call
adc
jo
fcoml
cmp
popl
fsubp
scas
fcompl
inc
jg
mov
mov
aaa
mov
test
out
insl
jmp
lcall
addr16
shrb
sbb
jne
xchg
rorl
data16
fldl
jno
mov
out
sub
frstor
lea
sahf
and
lret
mov
and
add
pop
cwtl
ds
xchg
fsubrs
mov
pop
mov
mulb
mulb
cmpsl
fstps
jb
or
inc
add
neg
ds
lret
pop
stos
and
mov
aaa
xchg
cltd
xchg
and
call
sub
pop
stos
fwait
push
xor
scas
fists
jno
xlat
push
xchg
aaa
add
ja
pop
sub
insl
icebp
inc
or
dec
daa
jmp
fadd
insl
lds
and
loopne
into
dec
dec
ljmp
das
mov
hlt
in
xchg
in
or
pop
fildl
les
ret
xlat
mov
inc
dec
in
sbb
mov
lret
add
iret
icebp
loop
jge
ret
mov
mov
xchg
mov
pushf
in
push
jbe
xchg
push
xchg
roll
and
pop
rorl
aam
stos
int3
jo
xlat
jns
insb
out
pop
scas
mov
push
push
cld
hlt
scas
mov
pop
addr16
mov
push
xor
mov
les
lcall
sub
and
test
push
push
sub
push
xchg
dec
push
xchg
sub
xchg
scas
or
jmp
inc
sbb
push
inc
fsubl
mov
sbb
mov
pop
push
lods
loop
mov
xchg
and
out
xor
jae
sbb
cld
mov
addr16
jns
es
mov
test
pop
popa
repz
add
cmp
adc
aam
loopne
stos
adc
fstl
push
add
sub
or
xor
sbb
loope
fcoms
das
add
adc
insb
pop
das
std
bound
rcrb
mov
icebp
mov
xchg
nop
push
lock
lcall
sbb
movsb
jno
pushf
jge
or
das
push
outsl
and
or
push
push
mov
cs
cld
mov
rcrb
xor
cmp
lcall
adc
out
jne
or
xchg
jb
and
jp
test
lcall
ss
mov
push
and
pop
insl
lret
mov
xchg
mov
or
pop
xchg
dec
lods
hlt
lock
pushf
xchg
ds
lea
icebp
add
adc
dec
pushf
pop
and
aad
sub
es
rorl
push
xchg
push
mov
mov
fcmovnbe
pusha
push
pop
inc
add
adc
and
push
add
xrelease
inc
pushf
dec
xor
fnstsw
mov
inc
sbb
pop
push
das
dec
pop
repnz
stc
jg
hlt
pushl
mov
dec
ficoml
and
mov
jp
and
xchg
cmp
repnz
pop
xlat
jbe
add
adc
es
outsb
mov
xor
jecxz
mov
inc
cmc
push
ret
inc
ret
jge
mov
inc
inc
data16
pop
notl
adc
mov
xchg
sub
jmp
add
sahf
div
in
xchg
aam
and
loopne
mov
aaa
into
xchg
test
imul
sub
cmp
and
xlat
mov
fisttpl
repz
pop
xchg
xchg
xchg
pop
dec
out
out
clc
lods
adc
sbb
mov
pop
mov
sbb
and
adc
ljmp
xorb
ljmp
std
mov
xchg
je
scas
mov
mov
sbb
xor
adc
into
push
jnp
fwait
pop
add
lahf
lret
cmc
pushl
testl
les
xor
jecxz
mov
mov
movb
push
dec
mov
je
cmp
xchg
dec
daa
sbb
xchg
and
cmp
mov
data16
pop
cmpsb
movsb
xchg
pop
mov
negb
jecxz
push
push
shl
pop
and
adc
pop
xchg
adc
xlat
cwtl
jg
inc
dec
sbb
jg
mov
cmpsb
mov
pop
xor
xchg
std
sbb
aaa
nop
or
aas
out
mov
mov
fidivrl
mov
sbb
jbe
add
sbb
dec
fnstsw
xor
hlt
cmp
dec
adc
xor
mov
outsb
cs
jo
lods
aas
insl
das
or
sub
leave
mov
mov
sbb
hlt
lret
xchg
data16
mov
stc
or
enter
stc
push
pusha
ror
sub
or
je
pushf
insb
xchg
push
leave
mov
mov
xchg
insb
jle
fs
cltd
popf
ds
aad
mov
mov
rolb
test
cwtl
jo
clc
pop
mov
and
rol
rol
rol
rol
add
sbb
loope
stos
aaa
push
sub
pop
adc
dec
out
mov
dec
push
loope
test
push
dec
cltd
mov
mov
push
add
or
pop
enter
and
gs
fidivs
mov
jle
xchg
pop
inc
add
mov
enter
addl
mov
xor
push
push
xor
stos
add
cli
daa
add
or
movsl
daa
cli
sbb
sahf
es
jno
mov
dec
mov
flds
in
push
sbb
std
mov
clc
cltd
inc
addr16
jbe
mulb
addr16
xchg
cmp
es
es
jne
dec
sub
icebp
mov
add
dec
add
inc
nop
pop
cmp
mov
test
adc
mov
push
or
jecxz
daa
xor
out
outsb
jnp
mov
lcall
ficoml
mov
das
test
xchg
dec
popf
imul
shll
mov
or
and
push
xor
jg
xor
scas
pop
sbb
rcl
mov
into
cltd
stos
push
adc
cs
sti
lods
inc
dec
scas
aad
lcall
fcmovne
mov
xchg
and
jl
and
sbb
data16
adc
adc
and
jmp
sbb
xlat
xor
popf
and
xchg
push
adc
pop
lcall
dec
loop
sub
fwait
xor
cmp
sub
push
adc
adc
subl
loope
jecxz
lea
js
push
dec
jnp
aas
cmp
inc
and
push
xor
xor
jg
sub
enter
ljmp
push
ret
inc
popa
std
pop
outsb
add
negl
add
pop
clc
cmp
rol
and
dec
add
loopne
outsl
out
out
js
es
std
in
lds
fwait
icebp
jle
cmpsb
xor
cmpb
lock
cwtl
and
sti
mov
cld
test
push
insb
pop
bound
ret
dec
fidivrs
or
sbb
and
jmp
push
lock
pop
pop
ljmp
xchg
push
jmp
push
lahf
inc
jns
pop
inc
mov
push
add
or
in
call
mov
stos
loop
int
pop
sub
inc
xchg
in
pop
mov
stos
add
mov
xor
test
arpl
lea
ds
or
arpl
push
xchg
inc
icebp
lret
sbbb
sub
lret
adc
mov
data16
test
mov
imul
shrb
inc
dec
test
addr16
fildl
pop
mov
inc
rolb
and
adcl
sti
cld
insb
sahf
orb
mov
or
mov
mov
out
ss
dec
xor
xchg
orl
loopne
push
adc
and
inc
scas
int3
mov
adc
int3
mov
rep
adc
mov
add
in
cmp
xor
adc
daa
sbb
mov
ljmp
xchg
fcmovnb
lods
push
dec
mov
lods
cmp
dec
test
or
lods
out
push
pop
sbb
mov
mov
ja
push
mov
mov
mov
rcrl
jbe
cmpsl
pusha
cltd
jo
testb
fld
sub
cmp
in
mov
lret
insl
enter
ret
loope
dec
leave
fstps
stos
jo
jbe
mov
sti
lods
test
pop
add
and
ret
imul
sub
cmc
sub
jns
cmp
xchg
push
cmp
filds
jp
je
pop
lods
push
pusha
movsb
clc
sarl
stos
and
xor
jbe
cli
in
xchg
cwtl
dec
push
cwtl
scas
cmp
nop
adc
jmp
or
aas
mov
dec
jge
add
dec
sbb
push
sub
shl
sub
or
sub
cld
push
das
push
jne
jecxz
aaa
jle
jno
hlt
mov
adc
jo
pop
icebp
cmovne
bound
xchg
mov
add
stc
xor
popa
add
push
leave
das
mov
cld
jbe
std
sbb
jl
jge
pop
bound
ja
insb
test
xchg
in
sbb
xchg
xchg
jno
inc
incb
daa
lods
and
test
jo
dec
ds
xchg
jmp
icebp
addr16
jecxz
xor
and
mov
movsb
fistpl
test
into
frstor
xchg
aam
lds
mov
jp
aad
outsb
sbb
shll
daa
mov
addb
in
adc
push
mov
leave
xchg
and
jmp
or
or
add
fs
scas
repnz
mov
in
xor
cmpsl
xchg
cs
jbe
out
mov
test
clc
or
or
mov
xchg
sub
pop
jecxz
mov
fistpl
jle
and
and
push
fisttpll
and
imul
sbb
clc
imul
push
in
scas
in
inc
cli
sbb
shlb
insl
jg
pop
or
push
nop
and
ror
out
out
xchg
je
dec
mov
addr16
lahf
xchg
popa
jnp
ret
adc
push
pop
fcomi
out
cmp
test
fmuls
aas
mov
xchg
fdivl
sub
jl
lods
or
fwait
cmp
push
adc
loop
mov
fmull
jmp
jmp
mov
sbb
inc
cmp
mov
sbb
pop
inc
jne
lods
fadds
pop
lods
add
pop
cwtl
push
scas
push
loop
inc
push
mov
jge
pop
and
imul
inc
or
hlt
movsl
orb
push
mov
jge
sbb
xchg
daa
fdivrs
inc
mov
inc
les
push
pop
iret
add
out
loop
add
imul
jnp
jle
sarb
adc
mov
out
bnd
pop
cmp
jp
adc
ret
jbe
inc
in
inc
loop
pop
xor
lods
mov
cmp
jle
xor
push
inc
mov
sub
mov
xchg
add
xor
imul
fdivp
mov
lcall
sub
xlat
mov
xor
mov
push
mov
pop
int
or
sbb
aad
mov
fadds
das
cmp
stos
and
add
dec
cltd
mov
mov
pop
xor
sub
xchg
push
out
dec
es
adc
jnp
pop
lret
inc
loope
dec
push
pop
push
adc
out
sbb
clc
jle
decl
sbb
mov
jle
sbb
ret
push
pop
or
bound
cmp
dec
ja
and
pop
pop
and
jle
nop
pop
sub
mov
mov
jo
mov
clc
cltd
adc
sub
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
shlb
lcall
aam
scas
aad
outsl
aam
push
mov
inc
decb
add
cmp
add
push
repz
pop
xchg
ljmp
addr16
fisubl
lock
dec
pop
daa
mov
jge
les
xchg
daa
cltd
stos
roll
mov
cmc
das
rol
mov
scas
lds
add
cld
daa
mov
in
in
adc
mov
loopne
mov
loope
xorl
or
bnd
scas
lcall
sub
and
jmp
and
adc
mov
jl
inc
aam
mov
mov
test
pushf
outsl
je
pop
jge
mov
shll
or
stos
cmp
push
imul
add
in
fwait
add
call
inc
repnz
push
xchg
jmp
mov
cmc
cmp
or
xchg
aad
jno
mov
push
das
sub
fiadds
xor
in
sbb
and
cmp
rcll
or
dec
rcr
sub
xor
push
push
test
das
jae
stc
inc
jbe
repz
in
in
or
aam
cmc
in
faddl
icebp
mov
rcrb
insl
dec
fwait
test
jb
sub
stc
dec
out
loopne
scas
cmp
jns
pop
fildl
pop
iret
das
popa
jl
lcall
or
jecxz
das
pop
lcall
sub
jae
out
jle
fwait
sub
xor
cwtl
in
lret
sbb
add
repz
xor
inc
ljmp
test
ret
loopew
daa
sub
hlt
mov
loopne
sbb
push
cmc
cltd
je
or
mov
es
cmp
xchg
fcmovne
dec
test
fidivrs
int3
cmp
aas
in
push
fstpt
sub
push
sub
mov
popa
jb
bound
dec
lock
stos
rcrb
aam
arpl
inc
xlat
lock
mov
out
test
push
addr16
pop
push
adc
xchg
xlat
shl
sub
cltd
xchg
loop
aaa
mov
add
aas
xor
scas
or
inc
adc
sbb
push
mov
imul
xlat
cwtl
sbb
cli
notb
mov
mov
xor
lcall
pop
mov
mov
xor
inc
sub
lahf
in
lea
loope
repnz
mov
sub
hlt
cmp
mov
dec
aad
cmc
sbb
aad
jge
jo
aas
dec
push
xor
imul
mov
rcrl
push
push
pushl
add
addr16
mov
adcl
gs
mov
xchg
stos
lcall
in
xor
pop
or
fdiv
mov
and
les
je
mov
mov
roll
sub
ficompl
push
in
sub
jl
cmc
test
rcl
push
xchg
fistl
mov
mov
sbb
or
add
arpl
addr16
mov
dec
movsl
xor
daa
stos
sbb
mov
xchg
inc
cmp
ficompl
push
out
das
sbb
int
sub
sub
mov
insb
mov
sbb
xor
rol
or
ret
jp
lcall
cli
sub
int3
adc
add
sub
sub
repnz
cltd
stc
xor
and
jb
and
mov
insb
ja
jae
push
xor
push
out
jb
cld
pushf
ss
dec
inc
lret
push
lods
jl
xor
pop
js
push
fnstenv
sarl
rorb
movsl
repnz
and
cmp
xor
pusha
mov
sbb
xchg
icebp
adc
pusha
add
fidivrs
imul
fdivs
and
fisttpll
push
sbb
pop
sub
sbb
repnz
imull
jge
sbb
and
sbb
cmp
pusha
adcl
std
bound
and
inc
xchg
out
sbb
xor
outsl
pop
aaa
stos
andl
imul
inc
xor
and
xchg
sti
push
add
jae
test
stos
xchg
pop
dec
push
sub
fs
test
pop
fisubs
in
std
mov
loopne
inc
idiv
stos
cld
cmp
ret
xor
mov
fisubs
data16
mov
add
jbe
in
ss
lret
or
cwtl
jecxz
push
add
movsb
jno
jo
aaa
pop
adc
pusha
adc
inc
ss
iret
hlt
add
mov
in
cmpsl
nop
ret
jmp
xor
mov
push
or
cmc
mov
sbb
sbb
mov
push
ja
lahf
mov
cmp
cmp
sub
outsb
pop
add
call
and
push
fildl
lea
fdivp
in
xchg
and
xchg
cld
pop
sbb
sub
sbb
add
push
jle
xchg
mov
outsl
jecxz
xor
loope
daa
daa
stos
aas
mov
mov
and
add
xchg
dec
adc
loopne
push
jg
mov
and
pop
inc
inc
and
out
in
pop
xor
pop
inc
xor
test
or
xchg
push
sbbl
or
lahf
lea
roll
sub
stos
mov
lret
arpl
sbbb
and
jnp
xchg
push
stos
xor
sbb
pop
testb
incl
and
and
stos
add
mov
and
cmp
mov
inc
clc
fldl
mov
jge
xor
lcall
sbb
sub
and
xor
std
sub
cmc
xchg
pop
out
push
add
mov
mov
jae
sbb
dec
leave
jl
xchg
inc
mov
inc
lock
lds
cwtl
das
xchg
mov
xchg
inc
loop
sub
outsb
mov
les
xor
dec
mov
add
mov
loope
in
lahf
dec
jecxz
push
jnp
sub
add
testl
push
rol
adc
scas
lahf
jb
jns
fwait
push
fisttpl
sahf
aad
or
test
sbb
sbb
mov
cmpsl
inc
shrl
jae
repnz
mov
je
lret
arpl
clc
bound
jb
adc
std
inc
sbb
out
mov
repz
mov
cli
call
push
xchg
icebp
jge
ljmp
or
push
aaa
int3
cs
mov
jnp
sbb
fdivs
iret
inc
insb
inc
cli
pop
jns
std
int
les
dec
pop
imull
mov
push
push
push
jnp
int3
insb
scas
mov
adc
test
push
ljmp
fsubp
xor
cmc
adc
scas
outsl
jecxz
clc
jbe
jmp
sub
inc
pop
das
lahf
sbb
cmp
pop
xor
mov
test
shrl
ljmp
inc
jmp
js
xor
adc
fidivl
mov
das
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rolb
mov
pop
adc
dec
std
cmpsb
and
pop
incl
lea
mov
mov
sub
das
and
inc
cmpl
ljmp
xor
adc
ror
outsl
shlb
pop
aas
and
mov
gs
inc
jno
sbb
cmp
cmc
inc
dec
xchg
loop
add
xor
ret
dec
imulb
dec
popl
jnp
lods
into
inc
push
mov
rcll
and
loop
sbb
das
push
push
mov
cmp
mov
mov
addr16
aad
imulb
into
lahf
pop
push
fldcw
xor
inc
sarb
and
fmull
xchg
es
ljmp
das
xchg
stc
stos
dec
stos
and
stc
cmp
mov
or
and
sbb
inc
lcall
push
out
add
jno
pop
add
and
aam
sqrtps
cli
push
aaa
xor
ss
in
mov
xchg
call
cmp
add
ss
inc
push
cltd
cmp
std
sarl
lcall
push
ret
out
jge
imul
mov
push
xchg
popf
cmpsl
inc
jmp
dec
push
ljmp
inc
or
leave
out
sub
mov
lods
dec
jl
jl
mov
mov
jg
iret
xlat
inc
adc
push
and
aas
mov
in
addr16
in
dec
sub
mov
xor
into
or
adc
fcomip
cmp
mov
loopne
outsl
push
call
nop
paddd
add
popa
inc
mov
cmp
sub
mov
scas
ret
jno
mov
mov
adc
les
jnp
push
movq
rclb
es
add
adc
test
imul
mov
or
adc
push
jbe
mov
pop
cmp
push
cld
jno
mov
jns
js
sbbb
push
in
popa
jecxz
sbb
cs
lods
mov
xchg
sub
cmp
cs
mov
mov
lahf
dec
addr16
fsub
test
push
arpl
out
mov
mov
cmc
sbb
add
pop
mov
xor
sub
add
icebp
sub
push
add
cltd
aad
or
xchg
jl
imul
add
loope
adc
adc
dec
divb
jae
out
out
push
gs
or
jns
test
inc
scas
adc
push
jne
pop
dec
sbb
ds
jno
out
outsb
sbb
popa
movsl
pop
nop
dec
repz
shlb
stos
mov
xchg
add
jecxz
pop
shrb
inc
add
aad
test
add
sub
hlt
leave
add
push
sub
and
inc
jne
mov
jle
cmc
and
pop
fs
mov
shrl
ljmp
push
push
inc
hlt
jl
or
lcall
xlat
adc
adc
fucompp
orl
mov
or
mov
pop
std
pop
loope
mov
pop
lret
add
ja
jecxz
sub
shr
insl
fcompl
sbb
sub
sahf
sar
dec
mov
xchg
movsl
lcall
add
jp
jae
test
sub
rorl
sub
mov
adc
mov
add
ds
int
test
cmpsb
popa
push
adc
and
jbe
loopne
ljmp
rolb
je
cld
aad
fstpl
push
jl
clc
dec
andl
sbb
pusha
push
arpl
xchg
outsl
scas
in
loope
dec
sti
scas
enter
ljmp
mov
jnp
adc
add
xor
insb
xor
cmp
leave
pop
stos
fisubrs
popf
fwait
xchg
or
aad
cld
mov
movsb
loopne
inc
loope
cmpsl
lods
mov
or
and
divb
xor
sahf
xchg
movsb
adc
push
mov
mov
fmuls
and
fs
test
ss
mov
xor
pushf
add
jle
xchg
xor
repz
in
jmp
ret
adc
hlt
push
mov
adc
in
mov
cs
adc
ficomps
mov
imul
mov
adc
dec
ja
int3
mov
mov
dec
fs
pop
jge
xorl
adc
mov
fsts
mov
or
daa
push
stc
inc
loopne
lea
in
lret
push
data16
lcall
shr
xor
inc
clc
mov
out
idivl
lret
mov
scas
bound
outsb
dec
fs
adc
mov
pop
sbb
in
push
bnd
gs
and
into
data16
mov
aas
adc
es
jne
fs
jno
popa
pushf
dec
test
fstpl
add
inc
mov
aaa
stc
pop
sbb
xchg
or
mov
cwtl
data16
sub
xchg
sub
roll
jecxz
lods
mov
or
js
or
inc
dec
xchg
repnz
mov
dec
das
jb
pop
in
sbb
cmpsl
call
sub
and
mov
push
bound
dec
pop
mov
test
inc
and
or
mov
add
push
in
popl
je
imul
mov
imul
nop
or
cmp
sbbl
pop
je
add
pop
jle
shlb
mov
inc
inc
sbb
imul
jle
mov
ret
pushf
out
xorb
test
sbb
mov
or
cmp
aas
pop
jecxz
and
fucomi
and
jle
iret
clc
xchg
xor
cs
mov
loope,pn
and
xor
jbe
addr16
sti
jmp
xor
in
xchg
out
fmull
cmp
xchg
inc
add
push
sti
in
loope
dec
roll
sub
ds
ds
add
lret
mov
inc
int
mov
inc
imul
out
add
in
fs
jno
out
add
loope
test
dec
stc
xchg
nop
add
mov
ret
add
stos
dec
pop
sub
mov
mov
mov
inc
rolb
sbb
loopne
cwtl
into
mov
das
sbb
imul
push
pop
add
out
lea
mov
ja
mov
pop
sti
fcom
xor
into
enter
jbe
add
inc
xor
fisubrs
ret
cltd
adc
les
push
push
sti
mov
inc
out
loop
xchg
icebp
mov
incb
int3
nop
push
das
cmp
mov
pushf
mov
pop
jb
pop
adc
insl
idivl
in
xchg
cmpsb
jle
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
shlb
adc
sbb
ret
jb
cmp
push
inc
fisubs
sbb
loopne
popa
cli
inc
cwtl
add
pop
pop
sub
jo
add
adc
out
outsl
rcrb
mov
stos
stos
jbe
push
lea
scas
xchg
jne
iret
mov
faddl
mov
fnstenv
test
adcl
mov
into
lea
stos
icebp
lock
bswap
lods
xchg
xchg
ror
jp
bound
sbb
or
inc
dec
sub
xchg
jns
mov
pop
mov
push
jge
adc
xor
aas
fmul
pop
dec
shlb
mov
loope
mov
jl
cs
scas
cmpl
sub
dec
les
scas
pop
mov
hlt
jae
fcmovbe
push
pop
in
test
inc
scas
cmc
mov
sarb
outsl
sbb
push
pusha
out
stos
mov
dec
lahf
inc
aam
rcrb
aaa
aam
lds
jnp
mov
mov
mov
sub
jecxz
ret
dec
out
js
push
stc
push
push
rclb
pop
dec
sbb
mov
lods
jo
adc
frstpm(287
mov
stos
popa
int3
jae
jmp
xchg
stos
jle,pt
sbb
xor
xchg
lods
mov
test
inc
or
mov
and
mov
mov
pop
imul
mov
aam
mov
lock
ja
mov
aas
jns
push
sub
mov
cmp
cmp
enter
push
jb
repnz
pop
mov
lock
loop
insl
stos
sub
lods
aaa
sub
sbb
mov
mov
jne
xchg
xor
repnz
xchg
push
dec
adc
and
dec
insl
adc
dec
mov
cmpsl
cmpl
cmp
cld
fisttpll
ja
stos
xor
push
mov
out
push
push
rorl
movsl
mov
js
call
gs
jp
cmp
ret
ficoms
jp
inc
mov
je
dec
jle
call
sub
imul
cmpsb
inc
jl
inc
lods
inc
dec
pop
in
imul
lahf
xor
insl
int3
loop
mov
ds
iret
cmp
sbb
scas
push
mov
sbb
les
sbb
stc
add
mov
adc
add
cmp
cmpsl
popa
sar
sbb
xor
mov
scas
push
pop
fimull
addl
sub
lods
sub
cwtl
imul
pop
hlt
iret
fildl
test
lcall
adc
repz
mov
inc
lods
cli
or
mov
xchg
arpl
mov
pop
mov
dec
lret
mov
jp
pop
xor
push
or
jb
push
pop
pop
into
adcb
xchg
push
pop
add
test
jnp
xor
adc
xchg
scas
pop
int3
mov
mov
cld
mov
inc
push
sahf
das
cmp
es
stos
fs
loopne
xchg
clc
push
out
sub
dec
adc
fiadds
mov
les
out
mov
push
ret
rcll
arpl
inc
pop
nop
inc
sahf
sahf
mov
push
jo
or
das
pop
ds
push
xchg
dec
pop
mov
arpl
sub
push
out
cmp
adcl
loop
fiadds
js
adc
adc
adcl
add
fists
clc
dec
addr16
mov
dec
xchg
pop
call
test
dec
jb
adc
mov
lahf
push
push
mov
aad
ds
and
cmp
das
lcall
mov
mov
adc
scas
sbb
inc
xor
dec
ds
arpl
mov
or
stc
dec
pushf
inc
sub
xor
bound
arpl
xchg
jo
aam
push
imul
add
cltd
push
jp
mov
outsw
test
xchg
mov
fcoms
pop
sub
cli
sub
div
sbbb
jmp
ret
mov
mov
ds
cld
loop
ljmp
push
lcall
push
cmc
sbb
scas
je
incb
iret
mov
outsb
add
out
push
adc
add
add
sub
push
outsb
sbb
push
mov
inc
xchg
adc
xor
xor
ljmp
cltd
cli
sub
jne
into
sub
jb
not
call
pop
mov
pusha
add
cwtl
cs
lcall
sub
cs
dec
cli
sbb
out
cmp
cmp
or
idivb
imul
pop
arpl
adc
das
mov
sub
cmp
loopne
mov
scas
mov
pop
sub
inc
add
xchg
mov
mov
or
sub
subl
cmp
js
outsb
sbb
push
jae
jbe
rcrb
pop
pop
inc
fisubrs
or
xchg
jl
sub
addl
lcall
push
push
cmpsb
cs
outsl
cltd
dec
jp
in
pushf
insb
adc
mov
dec
ret
arpl
or
adc
iret
sub
mov
fisubrl
xor
dec
push
sbb
dec
out
sub
outsb
shrb
adc
sub
arpl
inc
cwtl
jg
mov
cli
outsl
dec
dec
cmpsb
sub
lcall
sbb
sub
ja
adc
cmp
push
and
xlat
arpl
mov
push
add
rolb
clc
testl
fistpll
mov
std
inc
nop
sahf
add
mov
cld
adc
xor
push
jle
push
push
mov
pusha
test
ret
inc
loopne
mov
scas
cmp
inc
cli
mov
cld
cmpsb
dec
bound
add
push
fimull
push
sti
xchg
jle
adc
sub
incb
sahf
xchg
in
loop
jne
jmp
mov
xlat
ja
mov
mov
inc
xlat
clc
rorl
mov
mov
and
cs
and
xchg
js
movsl
mov
xchg
outsb
lret
sbb
cs
sbb
add
xchg
pop
cltd
sub
ret
arpl
push
imul
adc
cmp
xor
push
test
lods
push
pop
fimull
pop
cli
in
inc
cmp
cld
push
fists
jno
mov
inc
movl
subl
cltd
jl
pushf
arpl
pop
adc
xor
push
cmpl
jb
repnz
xor
scas
int3
inc
sub
inc
push
dec
nop
enter
fs
mov
fisubrl
jmp
or
fwait
xor
sti
lcall
push
test
jp
fs
dec
xor
sbb
add
xchg
int3
cltd
sbb
lock
pushf
pop
ss
xor
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
cmp
je
incb
push
push
sbbb
lods
outsl
arpl
sub
and
lods
sbb
xchg
jo
mov
add
rolb
cmc
cmp
cmpps
iret
push
and
loopne
or
dec
xor
lock
sbb
jb
repnz
adc
call
mov
cld
clc
dec
xor
xor
mov
insl
push
cwtl
fimull
addl
js
nop
add
fists
test
push
int3
fisubl
push
add
xchg
pop
hlt
mov
sub
mov
jb
repnz
loopne
mov
scas
mov
pop
sub
inc
add
cmp
push
rcrl
cs
outsl
and
cmp
inc
xor
insl
xchg
adc
pop
daa
inc
mov
sbb
clc
sub
inc
in
sub
enter
outsb
adc
cs
ficomps
js
ds
cmp
xorl
cltd
inc
sub
inc
hlt
jbe
mov
sub
mov
jb
repnz
loopne
mov
arpl
pop
pop
lret
add
lret
int3
sub
inc
adc
cmp
xor
push
test
lods
push
pop
fimull
pop
cli
in
inc
cmp
cld
push
fists
jno
mov
add
inc
popa
push
js
test
fbld
or
adc
cmp
pop
sbb
sub
push
insb
sbb
dec
jl
mov
icebp
clc
or
jb
repnz
sbb
mov
mov
scas
ret
int3
xor
inc
sbb
sar
add
xor
push
mov
movsl
push
mov
enter
hlt
inc
xor
les
pop
test
push
xchg
dec
dec
cwtl
sbb
sbb
je
movsb
arpl
pop
sbb
sub
inc
hlt
mov
cli
test
push
cmp
ljmp
dec
sbbl
sub
arpl
insb
pop
cmpsb
inc
mov
setbe
mov
push
adc
fsubrl
cmp
repz
loopne
sub
int3
push
clc
mov
bound
repnz
loopne
mov
scas
aas
int3
aam
adc
mov
cld
movsb
dec
pusha
cmp
or
mov
cmp
ficompl
inc
xorl
addb
mov
scas
fwait
int3
js
mov
fs
cld
dec
dec
test
cli
es
push
xchg
inc
cs
inc
dec
mov
fnstcw
orl
cli
ja
mov
pop
add
test
push
pop
int
lret
cwtl
lcall
pop
add
xchg
cmp
fwait
cmpsl
sub
inc
pushf
sub
mov
jno
jecxz
push
jg
cli
push
incb
cld
negb
out
and
shrb
push
pop
shll
jecxz
sbbl
mov
or
stos
push
dec
fisubrs
bound
idivl
push
outsl
mov
sub
mov
aas
in
cmpsb
out
ret
fs
xor
out
leave
mov
cmp
movb
jecxz
adcb
arpl
mov
or
jle
mov
popa
enter
jg
leave
cli
push
mov
add
cld
mov
aaa
sbb
push
fwait
xor
mov
add
add
xchg
adc
mov
and
or
dec
push
sub
cmpsb
popa
xlat
leave
adc
jb
cmpsl
xlat
xchg
pop
dec
je
fscale
pop
std
aam
ret
ja
in
xor
test
sub
mov
xchg
subb
std
adc
push
loopne
mov
insl
jbe
adc
rorl
or
jg
sbbb
sbb
push
adc
rclb
clc
or
mov
imul
sbbl
sbb
dec
push
fiaddl
icebp
push
push
arpl
insb
mov
nop
lret
add
sarl
pushf
pop
mulb
xchg
or
cmp
and
arpl
mov
jns
sbb
add
and
xor
sub
outsl
mov
jo
jbe
ficoms
ds
push
jb
inc
dec
adc
popa
inc
test
or
lods
call
mov
mov
lods
sbb
pop
lods
loopne
add
in
shll
inc
dec
aaa
push
in
mov
push
dec
mov
setl
scas
ja
arpl
repz
mov
and
call
dec
orl
and
adc
inc
je
sbb
in
adc
ret
jmp
cwtl
jbe
ss
sbb
out
inc
lds
mov
xor
push
loopne
pop
int3
cli
or
inc
push
in
dec
fldt
mov
jbe
mov
jg
cmp
xchg
mov
out
lock
call
repnz
cmp
jne
adc
mov
fwait
push
jb
push
sbb
cwtl
push
push
sbb
push
jb
xor
push
sbb
push
je
or
push
je
scas
subl
out
push
loop
lcall
ss
xchg
lds
dec
icebp
dec
imul
or
jo
fidivrs
shll
mov
mov
hlt
stc
loop
or
aas
jg
pop
xor
fs
sbb
and
dec
inc
test
dec
jg
scas
add
in
outsb
jbe
fidivs
pop
mov
mov
fnsave
mov
jmp
mov
xchg
and
jge
rolb
std
ss
pop
int
dec
fmull
f2xm1
imul
cli
mov
rcrl
lock
xchg
jecxz
data16
enter
std
dec
std
jne
imulb
sbb
and
test
cmp
xor
imul
mov
or
xchg
pushf
jbe
mov
sub
push
xchg
out
adc
das
and
dec
xchg
shlb
sbbb
aaa
jmp
mov
dec
add
push
inc
push
jbe
mov
scas
stos
dec
test
dec
add
pushl
pop
sub
fildll
xlat
pop
mov
inc
dec
imulb
pop
push
std
cmp
les
fbstp
mov
fadd
js
ss
push
arpl
xchg
adc
jnp
xor
jae
icebp
mov
or
ljmp
std
xchg
stos
mov
cmpb
scas
fidivrl
sbb
and
jb
sub
sbb
sbb
lock
xor
inc
sarl
aas
shrb
add
into
inc
fistps
sub
inc
ja
xchg
out
adc
lea
pop
repz
dec
dec
ljmp
icebp
test
sbb
cltd
mov
and
push
pop
leave
mov
aas
xchg
cmp
xchg
test
in
pop
dec
push
inc
push
out
mov
into
pop
mov
sbb
fwait
shll
aad
sub
push
xchg
sub
sub
push
cs
dec
sbb
outsb
inc
mov
xchg
and
rcl
dec
pop
push
in
nop
test
pop
mov
fiaddl
das
adc
cmpsl
add
mov
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
jae
add
inc
pop
pop
ss
xor
adc
xor
cld
mov
data16
pop
sbb
subb
out
mov
shll
xor
mov
xchg
push
xchg
jne
or
fnsave
nop
scas
sbb
aam
cmp
cmp
lret
movsb
mov
rcll
out
lea
dec
or
adcb
push
cld
into
cli
xchg
push
adc
std
mov
dec
das
rcrb
pop
push
adc
xchg
adc
cli
outsb
repz
mov
or
out
sbb
fcoms
movsl
push
adc
xchg
inc
sub
fistps
rcrl
mov
inc
add
movaps
pusha
jno
loop
adc
arpl
out
das
sub
pop
jl
and
pop
mov
pop
xchg
mov
sahf
test
outsl
and
adc
data16
pop
and
lret
lcall
xchg
push
and
mov
jo
es
js
mov
fisubl
add
loope
xor
fwait
outsb
add
adc
pushf
scas
dec
int3
shrb
inc
mov
cld
ss
call
fsub
or
outsl
and
sub
dec
cs
pusha
mov
push
insb
pushf
xor
addb
add
int3
jb
ljmp
add
xor
mov
bound
lcall
jbe
xor
add
mov
dec
imul
dec
sub
icebp
mov
mov
xor
lret
inc
pop
mov
aaa
push
bnd
jge
xchg
mov
cmp
xchg
pop
insb
cwtl
cmpsl
xor
sbb
mov
je
push
addr16
mov
outsb
lock
sub
sub
dec
push
pop
mov
cmp
inc
cli
mov
aad
mov
les
mov
pop
jb
repnz
int3
lods
testb
cwtl
cs
lcall
xlat
pop
add
xor
xor
js
and
fists
push
dec
cwtl
adc
sub
adc
mov
mov
mov
ss
xlat
int3
adcl
xchg
mov
xchg
cld
xchg
adc
js
push
sub
inc
enter
aam
js
repz
cltd
pop
mov
ret
rcr
cld
push
push
mov
sub
push
adc
add
insb
fldenv
mov
mov
pop
pop
or
decb
sub
mov
ret
cld
into
dec
adc
xor
cmova
mov
jl
jg
sub
shrl
bound
clc
fwait
and
in
push
jb
data16
push
xchg
cmp
sub
iret
add
sbb
jmp
push
cltd
cmp
out
cmp
push
pop
jp
cmpsb
add
xor
mov
cmp
add
scas
in
cmpsb
popl
and
sbb
outsl
arpl
jg
in
cwtl
std
xor
sbb
add
xchg
loopne
ds
arpl
loop
adc
and
adc
out
cmc
and
sub
fsubr
push
xchg
dec
pushf
xor
outsl
outsb
cmp
add
clc
arpl
pop
add
enter
dec
inc
xchg
fwait
adc
jecxz
sbb
fildll
jecxz
mov
jae
pushf
xchg
dec
fs
and
out
or
stos
ljmp
push
xlat
mov
mov
xchg
add
add
je
push
adc
sbb
cwtl
outsl
jg
push
sbbb
sahf
cmpl
lods
addb
cs
imull
std
dec
xchg
xchg
push
int3
mov
adc
jo
fwait
arpl
int
sahf
adc
xchg
inc
add
jns
dec
cwtl
push
jb
call
push
divl
jno
dec
rolb
movsb
sub
dec
jle
xor
adc
mov
push
lea
fldl
cmpsl
pop
inc
push
dec
dec
push
and
addr16
mov
clc
ja
jo
in
mov
pop
push
pop
test
sahf
fwait
sbb
xlat
jae
rorb
pop
outsb
pop
mov
lods
pop
aas
push
jg
inc
sbb
adc
lock
mov
int3
dec
cmp
rep
xchg
add
fcmovnu
aaa
mov
es
xor
cmp
jmp
pop
aas
imul
sbb
mov
bound
sti
int3
into
jae
sbb
adc
int
sahf
arpl
push
imul
js
cmp
and
cmpsb
cld
xchg
dec
notl
out
fwait
or
add
cmc
inc
aaa
or
lret
xor
decb
lock
and
test
stos
hlt
xchg
adc
adc
int
xor
outsb
lock
data16
int3
xor
pop
mov
int3
insl
xor
cli
sub
xor
push
arpl
ficompl
cltd
inc
fmulp
sbb
push
call
mov
inc
xchg
fwait
les
lea
lods
lcall
cmp
dec
sti
mov
mov
dec
mov
adc
mov
pop
mov
mov
test
sarb
mov
lahf
and
cmp
aad
cmp
and
mov
rcl
pusha
mov
mov
mov
mov
pop
leave
gs
dec
movsb
nop
out
notl
mov
fmull
xor
dec
adc
push
leave
mov
xor
sub
adc
or
sbb
cmovge
jb
enter
add
push
cmp
rolb
jmp
xor
mov
and
sub
inc
xlat
cltd
sbb
push
add
or
cmp
rcrl
add
outsl
js
push
lods
and
jle
leave
gs
int3
fdivrl
mov
rorb
popf
mov
lahf
mov
mov
loopne
inc
hlt
pushf
xchg
push
lods
sbb
mov
sbb
xor
add
repz
push
fildll
mov
out
xor
adc
dec
push
adc
mov
push
xchg
cmp
les
lock
addr16
add
push
jbe
cwtl
jmp
push
int3
add
imul
cmp
push
push
xchg
inc
mov
mov
mov
xor
and
lds
mov
popf
xor
arpl
sub
fxam
pop
dec
lcall
jg
rolb
out
mull
push
js
cmp
dec
mov
mov
das
sub
fs
inc
adc
cmp
ljmp
ja
inc
mov
nop
imul
mul
cmp
jmp
movsl
or
out
push
mov
push
mov
sub
push
jecxz
in
in
inc
push
xchg
inc
fcompl
rcrl
sti
mov
adc
inc
enter
inc
cmpl
mov
add
fidivs
fadds
sbb
sbb
lods
arpl
push
or
test
inc
sahf
loopne
es
cmc
jae
aas
in
es
dec
mov
fistps
push
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
faddl
pop
sahf
rclb
mov
jne
in
adcb
mov
mov
aad
cmpsb
hlt
gs
push
cld
inc
dec
push
inc
inc
or
push
mov
cmp
mov
cmp
and
jbe
dec
xor
sbb
adc
sbb
dec
ds
adc
cmp
cmp
les
xor
push
stc
ljmp
adcb
lock
into
fadds
aas
cmp
in
cli
test
push
lods
fdiv
rcll
pop
mov
cs
movsl
and
dec
inc
das
push
int
sub
cwtl
pop
adc
cs
cli
shrb
loope
dec
or
and
xchg
pop
ss
stos
inc
sub
or
lret
repz
lods
pop
cwtl
out
jo
sbb
sbb
pop
jp
imul
mov
xor
ja
test
imul
jp
std
addl
scas
inc
test
mov
popa
sbb
or
lahf
ds
mov
sub
insl
xor
and
inc
lods
in
inc
add
jge
and
jae
sti
sbb
jo
dec
inc
scas
sahf
outsb
mov
dec
clc
sub
jp
mov
jp
popl
sbb
mov
mov
out
push
out
shrb
clc
add
das
cmp
adcl
pushf
pop
jae
stos
xor
xor
mov
dec
decb
shlb
incl
outsb
mov
lcall
xor
push
aad
mov
popf
add
pmulhw
js
scas
inc
lahf
jbe
cmpsb
lods
dec
sub
out
jmp
aad
inc
test
call
xchg
addr16
xchg
scas
mov
jae
or
test
fistps
and
pop
pop
lods
stos
das
sarb
mov
mov
inc
or
add
jne
stos
mov
inc
pop
xchg
mov
loop
aam
insl
arpl
or
jle
incl
push
gs
or
scas
mov
in
sbb
faddl
adc
or
mov
shl
sub
loopne
aaa
hlt
aad
mov
cmpsl
or
push
shlb
adc
dec
jo
add
scas
or
push
mov
pushf
inc
scas
lret
pcmpgtd
inc
arpl
ror
pop
pusha
push
dec
pushf
xchg
xor
jno
nop
fcompl
test
jg
jae
arpl
iret
mov
nop
fcoml
dec
add
gs
and
dec
mov
sub
cwtl
inc
leave
mov
mov
test
rcll
mov
inc
clc
add
mov
in
mov
jg
dec
fiadds
or
push
shl
or
das
or
sub
insl
cli
adcb
adcb
jnp
popf
xor
xchg
sti
lret
xchg
push
or
add
mov
test
sub
pop
add
movsl
and
mov
cmp
cwtl
pop
bound
outsb
xchg
inc
sbb
xchg
insl
fnstcw
xlat
clc
js
inc
xchg
or
pop
inc
fidivs
inc
outsb
mov
jge
jl
inc
dec
mov
scas
popa
testb
inc
sbb
pop
idivl
mov
sbbb
decb
xor
jbe
shll
popa
pop
ljmp
out
js
iret
mov
xor
rcrb
ds
int3
pop
mov
sarb
or
popa
xlat
sub
push
jae
in
cs
fnstsw
lret
lcall
sbb
sbb
push
js
test
iret
cli
cmp
testl
aam
xor
pop
repnz
cmpl
push
test
in
jo
fwait
cmpxchg
fidivl
mov
add
push
aaa
aam
push
daa
test
jnp
pop
mov
jns
nop
cmp
ss
es
adc
and
add
mov
jle
cli
loop
dec
fimull
pop
pushl
ss
lahf
adc
sub
cld
ljmp
stos
repz
mov
sbb
cmp
pop
xchg
and
inc
js
cmpsb
aaa
jecxz
outsl
jo
popf
cwtl
popa
sbb
cltd
pushf
orb
mov
and
jmp
mov
xlat
xor
mov
ja
pop
mov
pop
js
push
cmp
fcoml
lods
lret
outsl
lret
adc
cmp
and
pop
fistpl
lea
es
inc
or
inc
mov
cltd
push
push
dec
imul
dec
pop
jb
std
adc
sub
enter
xchg
jl
or
xlat
dec
rcrl
aad
in
inc
test
add
cmp
pop
arpl
mov
call
es
rep
jle
xchg
in
xchg
testb
lahf
iret
imul
fidivrs
lods
outsl
pop
stos
dec
leave
sahf
xor
jecxz
loop
clc
add
mov
inc
fcompl
jno
cmp
mov
es
sub
outsl
push
int
icebp
mov
dec
movsl
xor
adc
push
lcall
lret
cmp
cmc
scas
mov
pop
sti
mov
sbb
xchg
pop
test
pop
or
cli
bound
enter
push
sub
jl
les
adc
add
ljmp
cmpsb
xor
js
mov
mov
in
inc
pop
test
mov
fstpt
push
dec
lock
mov
sbb
test
jmp
mov
inc
ja
lds
rcrl
jnp
xor
xlat
xchg
aas
push
sbb
sbb
movsb
mov
in
pop
lods
addb
dec
pop
mov
or
push
mov
in
or
insb
test
sub
cltd
sub
cmp
mov
or
dec
mov
cmc
add
pop
mov
push
mov
jl
shlb
lret
push
lods
pop
adc
jle
pop
daa
loopne
pop
addr16
rcrl
outsl
repz
andl
mov
cmp
xchg
lods
mov
subl
lods
push
shlb
hlt
ss
add
and
icebp
sti
push
push
mov
inc
es
in
add
orb
pop
xchg
aaa
lock
jmp
testb
loope
aas
in
test
shll
dec
imul
aaa
mov
pop
repz
fdiv
in
mov
push
js
lea
push
sahf
repz
in
ret
movb
adc
jne
das
lods
adc
and
dec
bound
mov
in
mov
cld
shrb
xor
loop
cwtl
add
std
mov
popf
adcl
aam
pop
mov
shlb
or
shr
int
imul
addr16
xor
cltd
xor
add
push
insb
aas
repnz
imul
push
sbb
je
mov
jne
xchg
xor
pushf
shlb
sbb
js
push
or
mov
scas
inc
mov
dec
out
lahf
mov
scas
lods
jns
es
add
pushf
add
arpl
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
enter
pop
push
loope
in
push
test
and
leave
pushf
or
dec
loop
sbb
and
jp
and
pusha
mov
pop
jnp
imull
cmp
sar
movl
jl
mov
insb
jp
movhps
rcrb
adc
in
imull
rcrl
adc
mov
pop
cvtps2pd
cli
xchg
mov
insb
mov
pop
push
repnz
into
je
push
pop
push
insb
and
bound
add
ret
sub
js
test
jae
dec
cld
push
jo
pop
or
xor
nop
jo
xchg
push
add
fsub
cld
push
aaa
xchg
xlat
fidivrl
mov
push
fs
jnp
mov
jge
and
sub
iret
pop
push
xchg
add
sub
dec
int3
nop
bound
cmpsl
cmp
fadds
sbb
mov
push
lcall
mov
mov
sub
add
repz
mov
enter
mov
in
and
xchg
jne
dec
dec
mov
push
push
jbe
fmul
mov
dec
int3
dec
jo
out
jne
jp
aam
push
push
push
pushl
loop
inc
sbb
pop
notl
dec
pextrw
cmp
bound
push
pop
mov
fnstsw
out
out
push
xchg
jle
in
sub
mov
dec
add
cmp
testb
setb
dec
cs
aam
xchg
shlb
adc
imul
pop
fisubrs
dec
cmp
or
jae
xlat
cmpl
add
xchg
cltd
es
out
inc
jge
in
aad
pushf
cltd
jl
xchg
sbb
icebp
sbb
push
lods
imul
je
in
add
xchg
stos
and
push
push
scas
arpl
iret
or
mov
mov
xchg
adc
add
orl
sbb
cmp
mov
leave
ja
push
test
xor
rcll
iret
aam
js
sbb
cmp
jecxz
mov
movsl
scas
jecxz
das
dec
rcrl
add
std
repnz
and
add
pop
jne
into
loopne
das
in
push
aad
lods
push
outsl
outsb
mov
jb
adc
in
inc
mov
pushf
or
sub
sahf
movsl
and
push
bnd
fdivrs
sbb
jns
jl
lret
jecxz
cmp
ja
push
fiaddl
jbe
jg
jg
test
xor
adc
pop
jmp
dec
jle
and
push
mov
call
mov
jl
pop
sbb
rcl
in
repnz
imul
insl
outsb
sti
jae
xchg
movsb
dec
mov
sbb
jno
jne
popf
push
mov
or
popf
out
sub
lods
jo
xlat
inc
or
jp
mov
mov
dec
pushf
and
lock
hlt
pop
xlat
daa
in
xor
leave
lea
pop
sub
je
jns
pop
out
in
ja
mov
enter
add
cmp
jle
pop
orb
xchg
sti
insb
xchg
aad
jae
jnp
mov
add
pop
cmp
mov
pop
push
cltd
iret
stos
in
hlt
fimull
inc
in
outsb
loope
pop
lahf
mov
out
adc
inc
cmc
inc
jae
and
inc
pop
xor
cld
mov
lods
scas
push
test
pop
cmpsl
cmp
test
fs
roll
inc
pusha
sti
repnz
in
adc
push
ja
scas
lahf
sbb
mov
rol
jmp
fnstenv
mov
mov
ja
clc
sub
pop
push
scas
xor
mov
mov
mov
movups
inc
sbb
dec
inc
push
scas
ds
inc
ljmp
jnp
andl
test
daa
aaa
fs
jbe
inc
sub
cmp
stos
pop
mov
shlb
mov
cmp
jno
push
enter
lock
shrb
cmpl
or
popf
jno
lret
jae
dec
adc
jbe
aaa
cmp
inc
test
xchg
fwait
add
cmp
mov
xor
xchg
cs
mov
iret
or
lret
pop
fstpt
cmpsb
repz
jns
out
ds
cwtl
mov
add
sub
jl
add
pop
movsb
xchg
bound
dec
in
out
popa
mov
push
adc
int
mov
mov
jne
fwait
lahf
xor
loop
jecxz
mov
dec
xchg
mov
pop
push
jg
mov
in
cmp
movsb
hlt
mov
lret
xchg
test
fisttps
push
cmc
xor
scas
test
inc
shrl
int
mov
pop
xchg
int3
aaa
out
xlat
dec
cmc
sti
repz
and
std
lret
fdivs
in
lcall
push
repnz
cmp
sub
xor
dec
sub
and
push
pop
lret
or
dec
test
cld
adc
inc
sbbb
dec
sub
arpl
mov
jo
jbe
lods
inc
dec
inc
pop
cwtl
cs
cld
mov
pop
loope
scas
push
repnz
jmp
mov
cmp
sbb
adc
mov
stc
fs
out
in
cmpsb
out
call
push
pushf
cwtl
sti
loopne
ja
sub
into
lods
xor
inc
pop
pop
mov
repz
fstl
js
xchg
pop
xor
dec
fcoml
fmull
out
jmp
pop
or
fsts
arpl
jae
mov
add
fcmovu
sarb
mov
adc
mov
inc
mov
add
push
push
pop
push
mov
fnstsw
popf
leave
inc
mov
out
cmpsb
outsl
jne
out
xor
push
dec
cmc
mov
ljmp
jge
jb
mov
bound
pop
xor
and
nop
lahf
fcompl
add
push
sbb
add
mov
adc
cmp
jmp
sub
insl
pop
sbb
pop
das
jo
mov
in
mov
and
mov
add
aaa
push
pop
rorb
jae
push
mov
ficomps
mov
mov
pop
sahf
add
mov
jbe
push
js
push
sti
adc
jp
and
cmpsb
pop
xchg
push
fwait
in
and
mov
daa
mov
xchg
adc
push
pushf
sbbb
mov
jmp
add
fcomps
lcall
insb
mov
arpl
lret
pusha
aas
push
xchg
jne
or
sbb
cltd
mov
sub
es
stos
iret
or
js
orl
xchg
jmp
scas
jo
rol
jne
sub
pop
mov
imul
mov
outsl
cmpsl
js
inc
jge
hlt
mov
xor
fwait
movsb
mov
cs
in
fstl
not
orb
dec
movsb
insb
ja,pn
je
sahf
cwtl
dec
arpl
rcrb
or
dec
push
loopne
repnz
push
into
inc
test
frstpm(287
lcall
and
sub
mov
jns
xor
es
out
fisubrl
pop
in
cmp
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
bound
hlt
add
pop
lcall
pop
pop
and
popf
add
inc
push
loopne
insl
scas
pop
mov
scas
push
or
pop
jmp
stos
ror
repnz
stc
jl
fldl
add
jns
mov
int3
movsb
inc
inc
sbb
mov
mov
mov
or
fdivr
xchg
ss
xchg
dec
aaa
add
in
repz
pusha
mov
lds
sbb
out
fwait
pop
mov
pop
push
shrl
pusha
aad
pushw
push
movsl
push
scas
adc
in
sub
das
inc
out
mov
fwait
in
dec
add
jle
push
inc
inc
in
or
xor
pusha
popa
int
jp
inc
popf
ljmp
mov
push
dec
cld
push
hlt
pop
xchg
xchg
cltd
or
je
cmpsb
das
test
xchg
sub
in
sbb
int3
and
sarb
lock
fucomp
sbb
push
hlt
movsl
and
lock
ljmp
push
ret
add
sbb
fisubs
lea
mulb
jg
addr16
cmp
cld
lea
cmpsl
xchg
lods
cmp
mov
shr
adc
les
iret
jne
cmp
mov
les
stos
mov
push
fsubl
push
xor
dec
xchg
enter
mov
dec
fidivl
adc
lods
pop
xchg
jmp
stos
loopne
jge
aas
sbb
movb
push
or
sub
add
mov
nop
std
subb
rorb
mov
imul
dec
add
das
sbb
shll
gs
pop
dec
push
je
roll
inc
push
lret
fiaddl
sub
test
fidivs
cmp
sub
and
fists
cltd
std
rorb
jo
inc
scas
xor
adc
pop
sahf
test
push
in
fsubl
push
xchg
cwtl
lods
sub
cmc
cmp
jb
mov
mov
lea
mov
mov
mov
pop
pop
add
test
fwait
mov
out
out
ds
push
loopne
incl
aaa
jp
fdivrs
sahf
rol
test
jae
rolw
leave
inc
pop
inc
sub
add
push
xor
ret
sub
and
xchg
inc
sti
mov
xor
or
jl
jmp
pop
fildll
mov
add
push
xor
push
call
adc
ja
das
dec
mov
imul
mov
adc
sub
add
dec
pop
rorb
mov
inc
outsl
dec
into
ss
xchg
fwait
inc
aad
stos
sahf
or
das
pop
in
inc
inc
ds
ds
mov
loope
adc
mov
xchg
test
sbb
xor
push
lea
push
dec
dec
rclb
cmpsl
jbe
aaa
xor
mov
and
xchg
sbb
jl
sbb
adc
in
inc
sahf
in
cltd
out
mov
pop
les
in
fstpl
jp
or
xor
repnz
inc
cld
fwait
pop
jle
and
xchg
in
mov
xchg
add
stos
mov
pop
and
push
js
into
leave
hlt
xor
cmp
sub
pop
enter
sub
sub
ja
cwtl
jno
sub
or
sub
cmp
sbb
fstps
xor
sub
movsl
mov
jae
mov
jb
inc
jne
mov
mov
mov
repz
jne
mov
or
jl
lds
xlat
add
sahf
popa
and
leave
fisubl
in
loop
jmp
ljmp
mov
adc
or
sub
mov
out
inc
lock
sarl
or
xor
or
jge
xchg
push
popa
and
xchg
sub
inc
push
iret
pop
dec
mov
xchg
lret
jnp
test
jo
mov
jg
cs
leave
mov
cmp
or
jbe
mov
pusha
jae
jb
push
mov
movsb
rdpmc
and
lret
loop
xlat
dec
inc
push
sbb
or
add
es
repnz
jp
sbb
pop
jns
fstl
incb
fisubs
clc
lret
sub
push
jge
int3
hlt
jbe
sbb
iret
out
and
ffreep
je
xor
mov
mov
add
pop
sub
sub
rcrl
pusha
add
add
sbb
jae
in
cs
push
mov
pop
or
cmpsl
insl
mov
add
ror
in
sbb
or
add
add
outsb
ja
pop
aaa
jbe
sarb
gs
movsb
add
or
in
jo
filds
ljmpw
cmpsb
or
mov
cmp
cmp
or
jb
gs
add
mov
cmp
adcl
cmc
push
fisubrl
data16
std
sbb
fisttpll
xor
or
push
adc
mov
inc
dec
sbb
test
mov
iret
jb
and
or
add
dec
dec
repnz
cmp
in
cwtl
les
stos
cmpsb
bound
add
push
jge
jge
mov
aam
sti
xchg
add
or
xchg
push
lcall
lret
jle
pop
push
outsl
dec
fmuls
loope
shrb
repnz
nop
mov
test
cs
stos
ret
sti
and
repnz
inc
xchg
repz
fwait
insl
xlat
xchg
lret
arpl
inc
sub
dec
arpl
jecxz
inc
cwtl
cmp
jge
sub
jb
or
mov
sbb
cltd
ret
fs
mov
xorl
bnd
jo
add
movsl
mov
aaa
lea
push
pop
mov
popa
xor
cmp
dec
ds
shll
adc
push
fnstcw
into
adc
or
fwait
call
cmp
orl
push
adc
inc
cltd
pop
mov
into
fxch
repnz
dec
shlb
lret
outsb
ficomps
dec
pop
adc
std
nop
or
repnz
fndisi(8087
fs
xchg
sub
xor
dec
mov
cltd
mov
fdivrs
sbb
mov
lret
dec
sub
in
push
das
scas
and
push
sbb
dec
stos
jmp
cli
sub
ja
add
mov
subb
bound
in
mov
nop
addr16
inc
sub
jb
and
fwait
insb
in
in
outsl
fwait
xlat
xor
loopne
pop
push
adc
inc
sub
mov
fcmovne
popf
mov
test
adc
bound
xchg
stos
les
jg
jl
xor
mov
sbb
and
xlat
jb
push
sbb
jp
sub
sub
sahf
push
ljmp
or
inc
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
mov
test
lret
mov
dec
shll
fs
adc
jb
orb
and
jp
rcrb
pop
xchg
aaa
test
sub
out
icebp
cmp
adc
cmp
cltd
fidivl
sub
dec
lds
or
in
sbb
je
or
add
and
mov
ficoml
les
cmp
sub
fmuls
aad
mov
xor
inc
jb
pushf
pop
adc
push
gs
jns
ficompl
mov
aad
mov
push
daa
call
jg
xor
movsbl
sub
xor
xor
aas
mov
jnp
sbb
sub
scas
dec
in
addr16
mov
cmp
inc
add
aas
jp
push
push
jae
movsl
jg
and
call
scas
scas
mov
jl
lods
sbb
lahf
cmp
sbb
lret
sbb
sub
xlat
xor
clc
sub
jnp
mov
out
jo,pn
xchg
imul
in
testb
std
ret
fsts
fsts
adc
out
mov
loop
add
sahf
test
arpl
lea
pop
xor
xor
and
mov
cmp
xor
adc
jge
add
sub
leave
fwait
cwtl
mov
sub
mov
movsb
push
gs
rcll
cltd
fs
jg
imul
aaa
cltd
adc
popl
pop
jae
push
aaa
icebp
test
lock
or
jl
mov
dec
dec
shll
fcompl
mov
and
sarb
call
les
sbb
stos
sub
mov
int3
adc
mov
in
pushl
jmp
ja
xchg
inc
cmpsb
jno
pop
inc
dec
xchg
aam
int3
push
mov
push
stos
adc
pop
jl
test
and
scas
fimull
mov
add
imul
daa
push
inc
test
and
jmp
dec
leave
jmp
pusha
pushf
pop
in
cwtl
js
aad
popa
aas
add
flds
sbbb
xor
sbb
sub
clc
adc
xor
test
jae
data16
je
xchg
ret
fmul
leave
sub
imul
xor
cmp
or
fidivl
inc
mov
je
and
mov
ja
xchg
pushw
mov
mov
xorb
adc
cmp
mov
leave
sub
cwtl
adc
std
jne
xchg
subb
and
fildll
xor
jmp
lahf
mov
loopne
dec
or
cmc
inc
or
iret
cmp
mov
clc
test
mov
ffree
cmp
mov
sahf
int
fstps
ret
sbbb
add
scas
mov
sub
push
xchg
or
xchg
dec
out
ds
push
dec
pop
pusha
out
in
push
xchg
loop
cmp
mov
sbb
jb
cmp
pop
lods
cmp
out
inc
repnz
ficompl
movl
iret
fiadds
fs
jmp
inc
leave
mov
std
stos
cwtl
movsb
loope
push
mov
sbb
outsl
lret
cmp
lods
rcl
lea
push
xchg
test
xchg
inc
mov
push
sbb
jae
in
dec
mov
dec
sbb
inc
jmp
adc
mov
inc
inc
clc
mov
int3
lcall
push
sar
cwtl
pop
dec
jmp
push
push
push
inc
push
sahf
shll
adc
imul
mov
add
lahf
jo
xchg
test
add
jnp
and
adc
push
mov
adc
clc
xchg
lret
mov
test
mov
ficomps
and
fwait
and
or
test
aad
orl
out
mov
gs
push
or
add
sbb
test
fcomi
out
aaa
lahf
movsl
lret
push
adc
scas
mov
loope
adc
out
out
dec
add
movsb
pop
dec
inc
and
ljmp
add
jbe
dec
push
mov
and
xchg
add
and
pop
mov
sub
clc
push
pop
mov
jg
adc
adc
es
push
push
dec
shl
sbb
xor
push
inc
scas
movl
mov
dec
mov
jp
mov
es
or
lcall
pop
lret
out
aas
push
mov
daa
in
xchg
ds
xor
or
mov
jne
popf
push
xchg
jne
push
pop
enter
add
push
inc
xchg
pop
aad
cmpsb
xor
push
dec
xchg
dec
jb
das
into
xchg
cmp
int
add
xor
mov
sbb
in
and
insb
fisttpll
xchg
and
mov
mov
enter
ja
jbe,pt
jbe
out
stos
push
inc
jb
shlb
mov
ds
push
fwait
shlb
jp
mov
ja
fsubs
sbbl
or
mov
cld
xchg
jbe
in
xor
lods
lock
cmc
stc
and
lods
repz
or
imulb
adc
sub
fldt
cmp
jl
xchg
push
mov
filds
hlt
cltd
push
loope
mov
pop
jmp
xlat
fnstcw
cmpsl
clc
adc
sub
xor
lea
jne
jne
bound
push
dec
xchg
or
push
cwtl
adc
add
aas
mov
push
test
popa
lods
cltd
cmp
adc
std
inc
dec
das
push
push
dec
or
fs
jp
dec
movsb
fcomp
xor
cli
es
out
loopne
testl
addr16
and
pop
out
jle
xchg
in
pop
cmp
adc
sbb
mov
cs
dec
mov
icebp
cmpsb
adc
aaa
inc
push
push
pop
movsl
dec
shl
or
mov
mov
loope
in
or
sub
or
mov
mov
dec
sbb
push
pusha
xor
inc
cmp
cmpsb
mov
imul
add
inc
cmp
movsb
ret
push
test
rcrl
imul
sub
ret
mov
mov
pop
scas
cmpsl
mov
pusha
or
add
and
and
adc
fwait
xchg
out
lds
adc
xor
cmp
pop
scas
mov
fwait
mov
xchg
stos
fs
iret
mov
and
lret
cmp
dec
movsl
sbbb
popa
sbb
fcoml
sar
sub
cwtl
nop
inc
addb
inc
mov
fcomps
cmpsb
into
sahf
fstl
loop
ja
jmp
pop
cmp
cmp
pop
das
lret
cmp
dec
cmpsl
sbb
clc
sbb
add
xchg
sub
mov
lret
mov
cmp
adc
xchg
repnz
out
hlt
hlt
xor
mov
test
pop
popf
loop
int
push
xchg
mov
jne
stos
adc
add
push
int
cmp
dec
aad
push
xchg
dec
test
mov
lods
dec
cmp
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
jne
add
xor
xor
hlt
inc
jb
inc
add
adc
pop
pop
jne
js
shlb
push
xchg
das
lahf
movsl
sarl
jmp
adc
shll
pop
out
mov
lret
iret
pushf
int3
call
add
lds
jb
xchg
pushf
pop
push
push
lret
data16
fwait
inc
pusha
push
imulb
jg
adc
xchg
rcll
ja
arpl
xor
int3
xchg
inc
clc
out
lods
ds
insb
pop
subb
ds
jle
inc
sub
int3
in
push
and
std
inc
cld
loopne
cmp
xor
das
das
cmp
sbb
testl
pop
xor
mov
xchg
mov
insl
imul
jns
iret
cmp
mov
pop
jmp
pop
fistps
ret
xchg
fcoml
cmp
cmp
inc
jecxz
cmp
xchg
or
jo
jae
rol
push
sbb
mov
mov
idivb
add
dec
add
sbb
rol
stos
call
pop
sbb
cwtl
loop
push
mov
pop
rol
pushf
cli
loope
ja
ljmp
sub
enter
pop
pop
and
sub
pushf
rorb
push
xchg
dec
in
sbb
lods
dec
in
add
dec
popa
mov
ret
add
or
pop
popa
inc
push
jo
and
pusha
sbb
sbb
ret
in
shr
aam
jg
movsl
cmpsb
out
mov
std
std
push
fcompl
jl
rcrl
and
jge
das
fldt
cmc
xor
dec
cmp
adc
ret
sub
inc
push
xlat
inc
ljmp
repnz
cwtl
push
loopne
pushf
into
sbbl
jbe
fwait
cltd
ficoml
in
mov
std
arpl
cmp
cmp
inc
shll
mov
mov
test
in
stos
sbb
mov
aam
inc
jmp
daa
mov
pop
scas
pop
bound
stos
mov
or
dec
jmp
inc
jbe
idivl
xchg
sbb
pop
mov
outsb
cwtl
sarb
xor
ds
add
imul
xchg
stos
leave
mov
push
dec
lea
add
shrl
in
xchg
mov
dec
negb
outsb
mov
pop
push
xlat
rclb
xor
lods
xor
pop
xor
xchg
push
subl
mov
sub
xchg
mov
mov
arpl
outsl
test
pop
mov
dec
xchg
or
xchg
enter
cmpsb
cmp
pop
adc
clc
jo
add
clc
rcrl
dec
jno
stos
gs
ficoms
ljmp
std
and
xchg
cmp
sbb
bound
or
cmp
sbb
mov
aad
dec
rcll
xchg
sub
pop
loopne
mov
std
mov
inc
mov
std
mov
sbb
xchg
adc
xchg
push
fbld
cmp
frstor
xchg
sbb
pop
add
adcl
add
pop
in
mov
ret
syscall
lcall
leave
movsl
iret
add
sbb
js
pushf
pop
int3
fnsave
pushf
cmpsl
mov
pop
or
cmp
daa
ss
jp
sbb
inc
pop
push
mov
jg
add
into
xor
into
movsl
fs
bound
cmc
xor
ljmp
push
lods
jo
jo
or
pop
jge
jnp
into
inc
adcb
imul
enter
lods
insb
cli
mov
daa
imul
je
stos
mov
leave
add
pop
xchg
mov
lods
cmp
lock
adc
popf
repnz
mov
lods
aas
add
mov
fwait
je
jns
loopne
lds
addr16
jp
jne
decb
cmp
or
loopne
pop
dec
xor
sbb
pop
cmp
add
call
xor
out
mov
addl
adc
mov
sbb
or
movsb
mov
loopne
pop
push
js
movsl
fsubl
mov
sub
ja
xchg
adc
inc
sbbl
int3
jnp
mov
push
adc
mov
sub
cmc
dec
mov
adc
or
lcall
movsb
scas
movsb
scas
add
data16
inc
std
outsb
jne
push
sub
mov
aas
dec
icebp
adc
dec
mov
lock
loop
fmuls
dec
xchg
lock
and
incb
mov
popf
push
push
inc
sbb
stos
mov
repz
loopne
test
xchg
xlat
outsb
aad
add
pop
push
jne
xchg
pop
mov
fmul
mov
add
rcl
push
inc
push
loopne
mov
aad
sub
aam
inc
or
negb
and
ss
lock
adc
xor
mov
movsl
dec
xchg
loopne
sub
data16
add
xor
rcll
lea
hlt
aaa
or
lods
out
outsl
jne
push
movsl
sub
imul
mov
pop
enter
js
lahf
inc
fimuls
dec
inc
movsb
out
mov
nop
push
lret
add
cli
or
push
imul
in
pop
aaa
and
ret
mov
insl
lahf
dec
push
stos
jl
dec
mov
into
xor
sbb
adc
mov
and
mov
pop
xlat
pop
sarl
movsb
pop
or
jno
inc
call
orb
pop
jmp
sbb
shrb
or
jne
xor
pusha
sub
sbb
das
and
xchg
adc
cmpsl
popa
jne
xchg
xor
add
imul
add
inc
dec
test
cmp
icebp
or
loopne
mov
ja
cmc
sub
out
mov
js
jo
mov
fcomi
mov
push
push
pusha
push
pushf
jle
into
mov
inc
jecxz
sub
arpl
out
bound
mov
sbb
cmpsb
push
shlb
insb
pop
xor
imul
fldenv
fwait
push
bsf
adc
jbe
int3
test
mov
pop
bound
jns
sbb
mov
orb
add
ss
aaa
mov
adc
fldenv
jge
int3
push
xor
mov
inc
or
and
pusha
push
or
mov
mov
and
jge
test
xchg
mov
inc
and
inc
fsubs
mov
mov
hlt
popf
add
in
add
sub
notl
sub
mov
js
repz
shlb
or
jbe
bnd
jnp
gs
xor
mov
push
push
aaa
mov
out
mov
jle
ret
ja
mov
xchg
shlb
mov
and
push
andl
jg
ds
out
jnp
in
pop
add
mov
xchg
push
stos
push
dec
test
add
mov
xor
inc
inc
test
ret
jl
imul
andl
inc
jp
mov
sbb
js
repz
mov
je
nop
cmc
lds
sarl
jmp
push
adc
les
sbb
notb
rol
rol
rol
rol
shl
fwait
pop
adc
dec
add
inc
in
mov
cmp
sub
dec
sbb
frstor
and
dec
mov
mov
jg
inc
scas
add
gs
or
xor
xor
movsl
mulb
jle
dec
scas
push
push
shl
sub
and
lret
mov
mov
xlat
xor
push
imul
scas
movsl
jg
push
sub
adcl
cli
dec
or
dec
adc
push
aaa
mov
pop
pop
sub
mov
push
clc
push
cwtl
loop
xchg
repz
in
jne
jl
add
push
aad
xor
inc
enter
sub
or
lcall
test
jae
ficomps
xor
pop
adc
cmp
cmp
adc
scas
adcl
out
mov
or
gs
and
lods
rorl
fsubr
inc
push
inc
push
addr16
loop
dec
lcall
stos
out
lods
sub
lods
sbb
jg
xor
jne
push
shrl
sbb
xchg
xor
rorb
sub
mov
fwait
cmc
aad
popa
cmp
sbb
inc
ljmp
add
cmp
dec
shl
xor
enter
adc
cmp
xchg
sub
jg
cmpsl
out
in
push
lret
lret
cmovo
cmp
push
je
repnz
lahf
testb
add
mov
imul
int3
push
push
sahf
lahf
mov
push
scas
jp
mov
sbb
jnp
sbb
stos
ja
jmp
out
pop
popa
pop
mov
pusha
push
mov
push
outsl
lock
and
xor
fldenv
out
mov
aas
lret
lds
pop
xor
repz
loop
rorl
jge
repnz
pop
pop
fwait
popa
and
cmc
negb
gs
idivl
mov
outsb
or
pop
jge
and
mov
add
xor
data16
ret
or
lahf
and
and
lods
lds
inc
and
adc
testl
and
xor
push
out
sub
insl
dec
in
push
pop
mov
js
repz
es
mov
shl
lret
jp
rcrl
sub
mov
xchg
xchg
repnz
pop
fsubrs
fsubrp
push
ds
pop
sub
pop
aaa
fldenv
mov
jb
adc
xchg
fwait
push
aad
mov
and
ds
or
mov
push
insb
div
xor
mov
fldenv
das
xchg
flds
mov
or
mov
or
loop
cmp
andl
mulb
mov
xchg
fidivl
mov
popf
sbb
xor
sbb
daa
pop
add
or
jmp
insl
mov
sbb
xlat
cmp
pop
jae
fidivl
jns
leave
mov
popf
inc
out
and
dec
clc
adc
pop
int
enter
in
pushf
dec
es
jno
push
dec
cmp
pop
push
pop
andb
adc
jg
out
jle
cmp
psubw
in
dec
sbb
mov
xchg
shlb
mov
jo
inc
shlb
cmp
pop
xchg
aad
test
test
lret
es
or
or
xor
repz
popa
cmc
and
clc
mov
nop
push
dec
sbbl
call
rclb
pop
movb
ret
jb
sub
sub
arpl
movsb
add
or
lret
leave
push
out
jae
aam
mov
mov
mov
pop
adc
mov
push
cmp
test
sub
cli
jle
mov
and
sarl
adc
and
ss
leave
leave
or
cmp
cwtl
inc
inc
pop
lcall
jo
mov
and
loopne
push
xchg
inc
icebp
bound
xchg
push
loopne
mov
xlat
xchg
add
sub
push
mov
mov
xchg
scas
adc
mov
cmpl
jno
clc
popa
mov
loopne
jle
xor
mov
add
cmp
jle
xlat
stos
mov
lods
jbe
pmullw
push
in
shr
mov
incl
push
xchg
imul
loop
inc
enter
or
scas
mov
ret
xchg
or
add
fst
jp
mov
push
adc
and
pop
xor
and
xor
cmp
mov
popa
dec
hlt
shll
jmp
mov
in
jge
lret
bswap
pushf
jp
add
call
cmp
and
test
pop
jp
xchg
je
popf
shlb
sub
pushl
insl
scas
in
dec
adc
push
push
cltd
jge
loopne
adc
xor
stc
mov
jno
add
arpl
dec
sbb
rcrb
ss
and
out
push
sbb
lods
and
pop
lods
sub
pop
or
rorb
cwtl
push
cmp
js
mov
and
sti
scas
decb
scas
jmp
pusha
daa
aad
add
inc
enter
test
or
ja
fcmovb
sbb
or
shrl
std
sbb
xchg
xchg
mov
clc
cmpsb
mov
in
outsl
ja
out
testl
mov
repz
dec
inc
movsl
pop
jmp
cld
xorl
hlt
push
xor
addl
popf
jo
sub
in
ret
adc
sbb
lods
or
repz
lcall
xor
jmp
adc
ja
cmp
rcrb
mov
pop
sub
pop
enter
sbb
mov
adc
xlat
mov
jbe
movsb
inc
push
rorb
adc
jle
sbb
aaa
dec
sbb
addl
fnstcw
pop
fadd
mov
xlat
test
add
not
cmp
mov
andl
xchg
mov
insb
int
or
push
rorl
fucomp
and
stc
lahf
pusha
and
xor
sbb
jo
test
and
outsb
popf
f2xm1
mov
ds
and
pop
mov
outsl
cmc
sbb
inc
jbe
jns
notb
jle
xor
xorb
mov
xchg
jle
fadds
mov
xor
lret
and
jne
jo
xchg
aas
ss
das
xor
repz
xor
adc
cmp
adc
jp
test
scas
xchg
or
popa
stos
out
pop
jmp
or
xor
imul
cmc
cwtl
pop
lret
in
mov
fistps
mov
cmpsb
fadds
adc
add
jg
mov
fsubrs
fdivrs
scas
jg
outsl
scas
or
and
pop
or
dec
js
xchg
xor
test
shrl
mov
test
pop
sub
cmp
lret
push
or
pop
dec
mov
jp
ja
ret
dec
cmp
ret
mov
or
mov
rol
rol
rol
rol
rol
rol
rol
sarb
pusha
push
call
sub
cmp
sbb
or
lods
sbb
test
sbb
jnp
dec
xchg
pop
stos
cmpsb
xor
adc
rcr
jge
jno
xor
cmp
mulb
fisttpll
push
nop
xchg
xor
jcxz
push
repz
dec
xchg
xchg
add
lahf
and
fmull
and
push
sub
nop
mov
sbb
cmp
or
stos
jnp
pop
push
mov
stos
sbb
adc
or
push
adc
fbstp
test
test
data16
push
pop
insl
push
or
jne
add
aad
dec
in
roll
and
cwtl
push
sbb
aam
cmp
pop
jle
repnz
xchg
adc
lea
push
push
sub
dec
xchg
out
cmp
xlat
jecxz
les
dec
adc
fcomps
jns
sbb
or
mov
jo
pop
addl
add
lds
cmp
fsubr
jmp
addl
add
sub
jno
or
imul
dec
call
pop
sub
lcall
dec
jae
sahf
or
jp
inc
xchg
out
lret
imul
lea
aaa
pop
mov
dec
push
jge
dec
mov
mov
mov
adc
in
add
shlb
ss
in
pop
pop
fisttps
sti
sub
test
dec
gs
inc
pushf
jle
cs
loopne
jbe
dec
inc
inc
nop
push
mov
mov
xchg
clc
test
sub
leave
push
mov
outsb
jp
mov
nop
icebp
addr16
fdivp
mov
adcl
cmp
pop
pop
push
push
push
adc
pop
in
out
outsl
dec
xor
mov
test
pop
sahf
dec
inc
pop
adc
or
mov
testb
das
pop
lahf
sbb
jmp
outsl
into
xlat
lds
push
sbb
cmc
icebp
xor
xor
mov
test
sub
cs
mov
cs
loop
int
jp
dec
flds
fidivs
dec
mov
andb
jmp
jbe
in
sbb
jb
adc
std
test
inc
dec
xor
xchg
jl
sbb
cld
ss
ret
arpl
cmp
outsb
pop
cmpsl
imull
dec
lods
fs
out
push
add
stc
dec
xor
jmp
arpl
mov
mov
data16
xor
mov
push
push
push
int3
fistpl
pop
arpl
mov
test
push
loop
mov
data16
or
movsl
sub
jp
stos
aad
int3
push
inc
sub
pop
gs
inc
sbb
push
push
fnsave
sub
add
ja
sbb
adc
and
in
sbb
pushf
adc
push
and
pop
push
arpl
in
shrb
mov
add
pop
call
pop
xor
test
inc
es
mov
push
data16
fildl
es
jecxz
mov
jp
mov
push
inc
push
push
cmp
cmpsb
jle
cld
cmp
push
pop
loopne
inc
push
lds
cmp
jo
push
cmp
add
je
lret
push
add
lods
leave
jbe
lods
mov
push
sbb
dec
push
or
je
aam
dec
push
mov
cmp
mov
mov
sbb
push
cltd
fmul
jmp
or
push
mov
push
ss
dec
pop
int3
lret
jne
push
adc
jae
or
lret
add
stos
pop
call
mov
push
sub
fiaddl
jp
pop
out
mov
xchg
adc
push
dec
loop
jne
das
fimuls
rcll
sbb
add
pop
inc
shrb
loope
inc
lock
mov
or
in
adc
xor
adc
clc
sbb
push
pop
add
out
sbb
push
dec
in
lea
pop
stos
xchg
adc
stos
insb
dec
add
bound
rcr
ret
addb
or
dec
or
add
jae
adc
test
aaa
stc
ret
jae
add
cltd
cli
xchg
pop
enter
jb
ja
iret
pop
xchg
xchg
out
movsl
pop
leave
mov
scas
jns
pop
jno
xor
lods
mov
pop
scas
scas
dec
fs
scas
ja
mov
sbb
fwait
mov
stos
cld
dec
push
add
xor
push
mov
mov
pop
daa
loopne
mov
lret
dec
sbb
jae
mov
jae
rcrl
cld
mov
mov
inc
lret
gs
xor
lret
ds
cs
jp
insl
mov
test
out
add
mov
inc
inc
add
jo
mov
into
mov
push
jge
pop
outsb
and
mov
iret
jge
fwait
and
or
aad
push
arpl
std
xchg
test
lret
push
add
imul
loop
or
dec
out
or
nop
mov
push
sbb
push
pop
push
fcom
xor
or
push
les
pop
into
mov
lods
xrelease
clc
add
inc
aad
xchg
mov
cmp
mov
sub
aad
fsubs
add
push
sub
jmp
leave
test
or
leave
gs
sbbl
mov
xchg
and
mov
lcall
ljmp
and
mov
xchg
subw
push
push
xor
mov
and
icebp
adc
cmpsl
mov
in
iret
lea
aaa
das
aam
or
idivl
lods
lods
inc
ds
sbb
push
in
lret
fidivrl
mov
add
cmp
out
and
push
stos
xchg
movsl
and
mov
jle
daa
sbb
je
movsl
scas
jo
jg
lock
sbb
aad
loop
xchg
mull
bound
jnp
jne
sub
xlat
daa
out
idiv
lods
repnz
lea
test
lock
outsb
add
dec
ja
jbe
push
in
pop
lock
mov
jl
pop
inc
dec
pop
dec
dec
sub
adcl
pop
pop
push
add
xor
shl
das
jns
cli
jg
lcall
bound
pop
movsl
xchg
out
xorl
incb
jp
nop
sbb
pop
push
adc
insb
andl
fmul
shlb
sub
call
clc
jno
fisubl
lods
jecxz
adc
adc
cmpsb
call
out
push
cmp
jl
test
dec
iret
xchg
cmpsb
push
pop
lock
out
outsb
into
mov
sub
imul
sbb
cmc
ds
mov
mov
inc
shrl
test
cs
js
je
hlt
repz
stos
cli
lock
popf
mov
push
push
mov
insl
leave
sbb
adc
loop
ds
enter
aaa
loop
in
testl
mov
stc
sub
imul
rol
rol
rol
rol
rol
rol
rol
rol
rol
and
jp
in
sbb
movsl
stos
jbe
shll
and
lods
mov
jecxz
jb
jb
lret
inc
add
andb
xor
cld
cli
lea
lds
ret
pop
fwait
test
sub
mull
mov
aad
dec
add
movsb
imul
les
hlt
dec
loop
je
das
cld
mov
dec
and
mov
popa
test
mov
cltd
insb
mov
dec
pop
lret
in
push
xor
inc
testb
rcr
add
mov
mov
xchg
inc
insl
scas
mov
aad
dec
push
lea
subl
movsl
mov
jae
loope
aaa
and
xchg
mov
cmp
pop
shlb
jmp
push
mov
cs
daa
lods
icebp
lret
divl
sub
jle
xchg
inc
inc
outsb
push
int3
cwtl
or
push
xor
add
add
test
sub
pop
lahf
xchg
not
jns
bound
repnz
mov
xchg
fnstsw
xchg
scas
out
add
mov
dec
cld
test
aaa
sbb
cli
cmpsl
ja
or
repz
sti
or
sbbl
mov
outsb
and
or
rolb
pop
aam
aas
stc
adc
call
dec
xchg
cmp
sbb
leave
cmp
int
decl
sbb
push
mov
mov
lret
add
mov
sarb
icebp
sbb
or
lahf
push
mov
push
or
and
push
xchg
xchg
jbe
xor
push
xlat
jne
repz
jp
in
lret
iret
fs
out
mov
adc
and
sub
mov
fsubrl
cmp
and
push
cltd
mov
fiaddl
imull
in
enter
mov
pop
jno
leave
mov
jecxz
push
adc
xlat
cmp
stc
xchg
add
mov
mov
push
mov
xchg
je
jmp
pusha
imul
frstor
or
push
xchg
sub
push
jmp
scas
push
sahf
int3
dec
pop
pop
mov
mov
sub
test
icebp
or
cmpsb
test
arpl
xchg
xor
lods
insl
mov
decl
dec
cmp
mov
test
inc
data16
dec
push
popl
rcll
adc
adc
jns
popf
inc
leave
mov
xor
push
adc
mov
fisubrl
in
jl
daa
jge
push
jp
jbe
js
fcomp
mov
dec
mov
or
push
push
mov
cmp
dec
push
ss
test
jle
sub
loop
jp
lret
and
mov
sbb
iret
push
cmp
aad
stos
outsb
xchg
add
mov
and
scas
fmuls
add
pop
push
xchg
ficoml
sub
rolb
and
repnz
inc
dec
add
scas
inc
ds
jb
add
add
push
add
in
cmp
sbb
sahf
mov
insb
imul
lcall
inc
jg
gs
dec
sub
repz
lods
fcmovnu
pop
xor
adc
adcb
pop
mov
test
pop
jae
lret
mov
push
mov
cs
cli
aas
leave
add
and
aad
lahf
inc
in
aas
push
lahf
mov
mov
loop
aaa
test
dec
fildll
flds
or
out
das
rorb
sbb
xor
mov
xchg
shll
faddl
dec
sub
add
sbb
test
push
cmp
mov
sbb
add
xchg
mov
nop
in
negb
and
in
popf
lods
pop
jb
je
ljmp
adc
pop
jg
roll
shll
push
xchg
push
int3
mov
pop
mov
mov
scas
ss
inc
sbb
xor
cs
lret
push
pusha
daa
xlat
loopne
ljmp
pusha
and
shr
adc
inc
je
pop
dec
add
call
push
cltd
push
pop
das
mov
leave
push
mov
xchg
jnp
pop
lret
inc
pop
jnp
out
mov
clts
push
sub
addr16
ret
pop
push
and
inc
test
scas
adc
push
or
js
ds
dec
dec
xchg
mov
cltd
js
xchg
pop
jp
jp
sbb
mov
js
jle
pushw
push
iret
mov
cmp
loope
loopne
mov
add
xor
mov
adcb
mov
xchg
pop
loop
xchg
lods
fiadds
fildl
xchg
outsl
jbe
jmp
inc
mov
dec
mov
cmp
pop
fiaddl
aam
enter
movsl
psubusb
mov
mov
movsl
push
loop
rcrb
sbb
daa
mov
mov
lods
aas
cltd
xchg
push
xor
addr16
and
test
pop
inc
xor
push
mov
out
pop
movsb
dec
mov
lret
xchg
inc
arpl
push
xor
push
aad
paddsw
out
sub
push
call
mov
xchg
push
xchg
les
inc
push
jg
jbe
dec
sbb
loope
push
jle
inc
test
lcall
popl
adc
jmp
movsl
mov
mov
pop
push
mov
fldl
sub
xchg
inc
dec
and
xchg
sbb
loope
mov
loop
cmpsl
push
adc
loop
fsts
push
movsl
sbb
and
and
inc
mov
shll
ds
fstpt
imul
dec
jne
mov
es
ja
xor
shrb
test
jne
jmp
iret
inc
sti
cs
pop
rcl
jg
push
clc
mov
cmpsb
mov
pushf
push
adc
dec
mov
icebp
sbb
push
sbb
repz
imul
inc
out
ds
sbb
jl
inc
push
cmp
test
icebp
sub
push
xchg
lret
les
jmp
push
push
sbb
pop
cld
or
sarl
rorb
jp
push
mov
add
jb
insl
and
pop
cld
push
mov
aad
in
cltd
pusha
daa
lahf
pop
xchg
xchg
sub
sbb
add
out
or
packuswb
xchg
sbb
cmpl
push
add
mov
add
outsb
push
test
xlat
inc
pushf
int3
adc
stc
jb
ljmp
lahf
sub
mov
das
addr16
das
scas
and
and
int
shlb
test
mov
sbb
fldt
mov
or
push
je
jae
pop
cmp
xlat
dec
loop
add
inc
add
jae
jbe
cli
imull
bound
jge
sbb
xchg
cwtl
mov
sbb
scas
arpl
cltd
ds
leave
repnz
inc
lea
inc
into
jle
popa
popa
xchg
ds
push
dec
cwtl
and
aaa
test
cmp
add
mov
jg
mov
data16
jle
cltd
sbb
adc
fs
sti
imul
jb
sti
mov
inc
rol
rol
rol
rol
rol
rol
rol
rol
push
mov
mov
jge
out
shl
mov
addr16
mov
jle
xor
mov
mov
cmp
cld
jp
xchg
adc
addr16
clc
mov
imul
or
int
dec
cmp
xorl
subl
xor
and
sbbl
rorb
rcl
hlt
sub
jle
cld
dec
cmp
push
andl
jp
ljmp
testl
and
and
iret
sub
push
xchg
lcall
bound
or
and
mov
lods
rcll
pop
xlat
dec
ret
popf
ds
lret
dec
ret
std
adc
push
gs
or
mov
in
out
stc
dec
outsb
mov
inc
add
xchg
outsb
inc
and
xor
jo
jbe
loopne
and
mov
and
and
loope
std
dec
ja
out
dec
sbb
pop
lahf
jl
pop
in
and
inc
loopne
adc
mov
lock
lds
mov
ds
xor
loopne
shlb
cmovs
test
je
dec
cmp
fistps
rorl
dec
leave
cmpl
push
ljmp
xor
mov
inc
repz
jo
test
sbbl
scas
pop
xchg
call
mov
scas
add
icebp
loopne
dec
inc
add
xchg
mov
pop
inc
and
lret
out
mov
nop
adcl
push
add
dec
sbb
clc
hlt
and
icebp
cmp
add
mov
mov
aaa
and
and
into
push
fidivrl
es
call
dec
jno
cmc
and
jns
add
and
cmc
fsubs
push
insb
add
and
fistpl
popf
sub
jb
adc
push
xor
push
cmp
and
mov
aaa
cmp
imul
xor
and
arpl
cmp
lret
ja
lret
repz
cmp
xor
push
cmp
adc
addr16
dec
xor
xor
cmp
push
mov
xchg
mov
xchg
js
dec
push
fidivl
test
or
ret
xchg
inc
arpl
rcr
fidivl
push
ljmp
or
inc
std
rcrb
inc
les
subl
jb
adc
push
jae
xchg
mov
stos
push
fidivs
mov
popa
add
and
inc
jg
daa
xchg
and
loop
mov
cmp
dec
sub
mov
loope
daa
mov
jne
add
dec
cmp
xchg
adc
push
cmpb
pop
or
fdivrs
jmp
push
andb
mov
or
daa
jno
out
xlat
xorb
or
movsb
lcall
ja
add
mov
add
sbb
test
push
mov
push
pop
cmp
push
pop
inc
pop
imul
stos
les
sbb
mov
push
shll
adc
xchg
mov
imul
add
mov
push
mov
push
cmp
xor
mov
push
or
push
xor
testl
mov
cltd
outsb
gs
xor
add
dec
test
mov
push
add
ljmp
inc
flds
aam
jb
xchg
negl
jle
adc
int
adc
out
jae
add
in
jge
mov
pop
mov
sbb
add
and
sbb
jae
jge
andl
jge
out
mov
push
push
sbb
and
sub
xor
xchg
and
xchg
arpl
jnp
or
inc
ds
fisttps
rcl
mov
out
add
adc
test
pop
mov
inc
sar
out
pop
mov
sbb
adc
pop
andl
sub
repz
mov
rcl
sbb
hlt
sub
movsb
int3
inc
es
insl
jae
sub
mov
adc
lods
sub
and
icebp
inc
shll
inc
push
inc
addr16
xor
hlt
jle
jne
js
popf
dec
insl
clc
popf
rcr
push
ds
nop
cmp
mov
test
mov
jl
mov
xor
push
scas
movsb
sbb
imul
xor
add
sub
push
je
cmc
sbb
inc
pop
lods
dec
ja
xor
jg
cmp
je
in
sbb
repz
push
adc
mov
mov
ja
scas
inc
ss
addr16
mov
pop
aad
and
in
push
or
out
cmp
pop
inc
test
test
add
int
das
add
dec
cli
iret
leave
scas
pop
scas
adc
shlb
and
push
push
inc
aam
sub
jae
push
fcoml
notl
out
inc
gs
pop
xchg
nop
and
rolb
sahf
test
inc
push
rolb
lods
int3
adc
and
inc
mov
push
adc
ffree
mov
jnp
mov
test
adc
jbe
fdiv
arpl
maskmovq
testl
clc
sub
mov
xlat
rclb
push
ret
mov
sub
stos
loope
fcoml
adc
fimuls
push
and
sub
popf
dec
loop
push
int3
aaa
and
and
dec
cmp
mov
dec
dec
cmp
lea
pop
out
mov
fcomps
add
je
cmp
and
ljmp
dec
adc
dec
js
jp
cmp
aam
sub
cmpsl
mov
push
fstp
mov
insb
push
mov
inc
repz
cmc
pushf
imul
test
dec
das
sbbl
lret
std
hlt
ds
mov
out
call
mov
imul
add
insl
lret
jnp
loopne
lcall
pop
cmp
lods
and
lea
mov
ja
jecxz
in
aad
push
sub
fsubrs
xor
imul
test
into
inc
dec
jle
rolb
or
mov
leave
ss
divl
cmpsb
pop
in
shlb
adc
adc
dec
and
ret
mov
icebp
mov
imul
das
inc
mov
or
lods
cmpl
call
hlt
arpl
out
fsub
inc
leave
xor
xor
iret
xor
sub
jne
or
int3
pushf
enter
pop
xor
cs
cmp
sbb
pop
add
aas
or
mov
and
xchg
inc
add
adc
movsl
mov
dec
pop
fcoml
pavgb
mov
loopne
lahf
ds
loop
mov
lds
sarl
lcall
cld
test
lcallw
inc
mov
rol
rol
rol
rol
rol
rol
rol
rol
stos
xchg
mov
jg
das
xor
or
push
in
sbb
push
test
dec
ja
mov
cmpsb
popa
ja
aaa
jns
scas
xchg
fisttps
adc
int3
fs
addr16
and
popa
adc
sub
add
xchg
loopne
mov
and
pop
push
jmp
fistpl
mov
and
divl
xchg
lret
mov
fldpi
mov
dec
pop
and
cmp
jbe
push
xor
and
push
mov
scas
cmp
icebp
dec
push
leave
into
lret
ljmp
push
pushf
push
or
adc
sbb
repz
inc
lock
repnz
mov
inc
loop
repz
jp
es
test
push
fstp
xchg
loop
push
jo
shlb
inc
jl
add
std
sbb
mov
mov
sub
jae
pop
sahf
imul
mov
cltd
lock
fs
xchg
adc
mov
push
adc
or
fwait
mov
out
outsb
xlat
ffree
fisubrs
adc
addr16
pop
hlt
inc
into
push
lcall
push
enter
and
iret
pop
idivl
mov
mov
sbb
add
pop
fdivrs
mov
push
mov
lea
enter
xor
cwtl
push
dec
sahf
add
in
xchg
cs
cmp
mov
mov
mov
add
aam
push
sub
mov
and
mov
push
aam
jle
add
fildl
sub
mov
jo
push
jmp
sbb
mov
addl
pop
or
jne
insl
popf
daa
add
or
xchg
fwait
pop
out
loopne
xchg
pop
inc
inc
leave
push
xor
xchg
adc
mov
sbb
adc
cmpsl
ja
mov
or
in
loop
js
adcb
scas
fistl
sub
sub
bound
call
push
mov
decb
push
mov
inc
js
sub
ficoml
pop
out
sbb
jb
sub
xor
aaa
popf
push
lock
push
push
mov
ljmp
mov
mov
or
and
adc
fsubr
clc
mov
push
pusha
jnp
cltd
xor
lahf
sbbb
add
mov
pop
add
lcall
cwtl
pop
call
push
hlt
out
or
stc
pop
mov
xchg
ja
mov
scas
jnp
jge
imul
icebp
sub
or
inc
hlt
mov
lock
sub
mov
and
in
ds
adc
es
insl
stc
ds
mov
dec
mov
cli
mov
push
xchg
lcall
cmp
xchg
sub
pop
stos
pop
sub
pop
sub
mulb
xchg
nop
or
mov
sbb
sahf
jle
dec
jg
xchg
xchg
jo
push
or
or
iret
nop
popf
cmp
imul
outsl
dec
pop
lahf
adc
stos
cmp
faddp
imul
stos
mov
outsl
adcl
lods
push
add
sbb
int3
xchg
arpl
push
mov
or
add
and
cmpsb
sub
popa
lea
pusha
outsl
cli
adc
int
scas
ja
in
mov
and
movsl
pop
cmc
notl
mov
stc
push
call
leave
mov
dec
out
pop
fnstcw
or
rorl
out
cmp
outsb
test
imul
dec
cmp
lcall
xchg
icebp
mov
data16
pop
pop
fcoms
imul
ficoms
jnp
pop
dec
in
or
push
inc
push
adc
xchg
out
and
stos
xor
out
xor
scas
xchg
add
jbe
and
dec
jg
ffreep
aas
mov
stos
fucomp
xorl
pop
sub
pop
xchg
insb
sub
sub
arpl
push
and
xchg
repnz
popf
cs
faddl
mov
or
popa
icebp
loopne
xor
ret
fisubrs
pop
mov
scas
xchg
cld
xor
or
cmpsl
dec
imul
xchg
jp
sub
out
loopne
daa
or
or
push
scas
push
aas
test
mov
mov
xchg
fcmovb
dec
push
sub
mov
xor
cmpsb
out
loop
pop
shll
in
mov
testb
leave
shlb
mov
push
mov
and
add
cmp
mov
mov
movsb
mov
fsubrl
sbb
loopne
mov
push
aas
push
dec
jo
imul
mov
stc
popa
add
fisttpll
add
push
jb
mov
repnz
fiadds
fistl
cs
adc
cli
aad
xor
adc
mov
fisttpl
addr16
adc
jle,pt
mov
dec
shlb
sub
mov
lods
xchg
mov
je
lcall
daa
cltd
and
mov
pop
lds
dec
fists
sbb
insb
and
inc
dec
popf
xchg
or
sub
nop
int3
in
adc
ret
loope
fnstcw
xchg
jnp
xchg
push
imul
sbbl
push
or
cs
pop
add
lods
dec
push
xchg
les
js
push
cmpsl
out
jl
xor
fisubrl
fcoms
insl
push
add
in
mov
jbe
loope
gs
jp
in
rorb
lods
push
das
rcll
stc
hlt
je
pop
sub
or
mov
mov
mov
jne
xchg
loopne
stos
iret
cmp
mov
stos
sbb
out
fwait
shrb
int
stc
push
xchg
fwait
aam
mov
insl
ror
outsb
dec
sbb
sub
out
aaa
test
inc
insb
jl
pushf
or
xor
fildl
rclb
out
xchg
and
orb
js
adc
sub
iret
les
sbb
xchg
ljmp
cmp
mov
or
faddl
dec
push
sub
xchg
sub
or
sbb
scas
rorl
dec
adc
test
add
arpl
cli
test
or
inc
pop
aaa
sub
dec
add
cs
rclb
xchg
inc
incl
sbb
push
xchg
int3
push
dec
push
mov
mov
mov
in
xchg
pop
and
or
or
mov
das
cli
orb
jnp
into
mov
push
clc
sbb
test
ds
aaa
mov
add
fsubrl
enter
shrb
mov
dec
imul
mov
lods
aam
xchg
and
sub
and
pop
aam
mov
pop
ds
xchg
into
fs
sbb
jb
xchg
punpckhbw
iret
xlat
dec
aas
jnp
add
xchg
clc
add
xchg
rcrl
mov
push
pushf
enter
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
shrb
insl
jb
cmpsl
pushf
insl
mov
aad
adc
addb
inc
test
xchg
sbb
iret
mov
inc
aad
fsub
les
loop
mov
or
xchg
cmp
bound
stc
inc
dec
xchg
outsl
dec
jnp
or
mov
push
sbb
jg
imul
inc
dec
jp
pop
int3
inc
inc
nop
sbb
ror
xchg
rolb
xchg
jnp
loope
lock
xchg
add
push
fstp
addl
mov
test
pop
xor
lock
insl
out
xchg
add
or
inc
int3
sub
jg
mov
add
aad
xorb
ror
sub
adc
int
lcall
into
ret
insb
nop
sbb
sub
out
push
enter
loopne
pop
mov
mov
cmp
pop
cmc
decb
cmpsb
lock
aas
push
push
adc
xchg
add
jo
out
loopne
pop
rcrl
testb
in
jbe
mov
jecxz
pop
loopne
cmpsb
inc
ss
xchg
out
jle
cmp
addb
repz
lret
add
and
mov
jp
fbstp
addr16
jge
clc
lret
pushf
push
push
mov
imul
lds
fcmovne
cs
out
mov
pushf
enter
pop
dec
pop
mov
int
jnp
fnstenv
mov
repz
ss
push
bound
mov
dec
sbb
pop
ja
pusha
push
inc
lret
lret
sub
and
dec
jecxz
leave
movsl
loopne
mov
mov
inc
imul
mov
cmp
and
fadd
add
jo
aad
pushl
push
adc
cld
jo
ret
lock
loop
xor
bound
push
sub
cmc
pop
mov
cwtl
inc
push
cwtl
enter
xchg
je
inc
pop
jl
out
push
cmp
pop
mov
ss
cmp
int3
sub
sbb
jmp
enter
mov
test
add
sbb
mov
pusha
jbe
cmpsb
lods
xchg
inc
cmp
jne
dec
mov
mov
mov
ja
insl
mov
fsub
movsl
jo
cs
cmc
fists
ja
and
sub
int
cwtl
wrmsr
aas
dec
outsb
pop
dec
lea
mov
pop
dec
cmpsl
pop
lret
mov
mov
popa
dec
arpl
jbe
mov
and
fistpl
sub
dec
repnz
sub
add
push
push
add
or
jae
dec
mov
adc
xor
into
lcall
sub
add
test
and
push
jmp
pop
xchg
cmp
int
iret
xlat
imul
lahf
jl
jp
jbe
stos
pop
and
inc
in
sub
push
push
xor
xor
jl
rorb
pop
adc
enter
push
in
mov
push
insb
insl
shr
lret
roll
jecxz
repz
jnp
out
adc
mov
movsb
add
addl
jp
mov
adc
hlt
fidivl
sbb
and
int3
jbe
mov
movsl
dec
push
mov
fnstenv
push
in
cs
xchg
pop
fistpl
stc
int
mov
sbb
orl
cs
in
stos
dec
push
int3
inc
mov
jbe
lea
jmp
mov
mov
stc
rolb
ret
lret
test
mov
test
push
push
stos
xchg
ret
js
xorl
repnz
dec
mov
adc
and
cmp
and
xor
inc
int
jge
xchg
inc
outsb
jge
xchg
xchg
lea
lods
jns
jp
loope
sbb
cmp
xchg
inc
sub
insb
std
lods
sbb
pushf
mov
fnstsw
repnz
loop
bound
jb
push
inc
dec
shll
pop
daa
repnz
mov
daa
push
push
xor
daa
add
xchg
in
js
jmp
pop
mov
mov
cmp
dec
stos
or
sbb
dec
cmc
sub
mov
push
mov
aaa
mov
jbe
cld
arpl
mov
jge
xchg
jge
mov
pushf
pop
lcall
push
add
push
mov
mulb
jbe
dec
repnz
jmp
xor
push
adc
mov
lock
push
cmp
filds
sbb
cmp
outsl
pushl
lods
and
imul
push
jnp
mov
jbe
hlt
cwtl
xor
dec
mov
jno
push
mov
inc
push
jbe
cmc
jecxz
xchg
xor
popa
push
jmp
xchg
dec
xchg
jmp
lcall
arpl
sbb
sub
mov
mov
mov
fscale
inc
and
loopne
sbb
adc
dec
and
xchg
add
xchg
or
lea
inc
and
and
int3
pusha
or
fsts
adc
into
xor
or
pusha
out
call
lea
lcall
je
push
pop
incb
add
movsb
mov
xor
adc
mov
scas
add
loop
scas
xor
dec
scas
icebp
lahf
mov
pop
add
xchg
add
pop
mov
dec
push
add
inc
fadds
popf
adc
and
mov
and
pop
ds
sub
lea
dec
push
decb
fisttps
push
add
xchg
cld
iret
fnstenv
mov
sub
sbb
outsb
pop
jb
mov
xorw
sbb
cmp
or
lret
mov
fstpt
arpl
jle
pop
add
sub
dec
sbb
dec
popf
push
sub
mov
stos
dec
ljmp
sbb
dec
js
cli
js
cmp
dec
push
add
in
movsb
fistl
int
jbe
adc
jnp
inc
imulb
dec
dec
bound
sbb
aad
inc
stc
xchg
xlat
fmulp
sarb
mov
outsb
push
xchg
and
mov
fdivs
movsl
loopne
adc
mov
pop
int
gs
sbb
je
lret
or
fstpt
pop
or
arpl
int
or
push
cmpsl
push
jno
lcall
mov
inc
jp
adc
sub
sub
mov
ljmp
test
jne
xchg
out
cs
push
mov
mov
imul
push
inc
clc
cmp
xor
cmpsb
push
pop
pop
in
push
and
mov
out
repnz
push
sbb
sar
jg
adc
insl
ljmp
push
jo
addl
int3
push
xchg
cmc
and
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
sbbb
push
rclb
cltd
jnp
ret
and
add
cmpsl
push
cmp
mov
out
xchg
dec
push
or
fadds
mov
aaa
jmp
cmpb
pop
data16
andb
lret
lods
pop
lret
mov
movsl
sbb
and
push
jae
xlat
inc
fwait
out
cmpl
test
cs
leave
or
mov
in
mov
xchg
pop
mov
ret
pop
mov
xchg
or
xor
xchg
cmc
dec
add
or
push
cmp
xchg
jge
inc
negb
test
sbb
lret
js
xor
push
cs
inc
call
les
icebp
push
sbb
sub
mov
jl,pn
insl
cli
push
jb
lods
popa
std
push
cmp
push
mov
xchg
xchg
ss
aad
dec
jecxz
xchg
dec
andl
pop
js
add
pop
bnd
sahf
push
dec
jbe
sub
iret
stos
ret
add
fs
add
push
loope
movsb
dec
pop
adc
fnsave
sahf
pop
fstps
push
xor
xor
push
sub
lds
lods
mov
adc
sbb
incb
pop
lret
pop
fcmovnb
stos
mov
push
sar
iret
jge
cli
adc
xor
sbb
repnz
jg
push
xchg
mov
data16
sbb
divl
mov
pop
mov
sarb
fldl
scas
test
nop
call
popf
fstps
mov
mov
push
add
notb
mov
enter
mov
ret
cli
pop
pushf
jl
pusha
stos
sbb
mov
sub
cmp
mov
pop
lret
mov
or
scas
lahf
adc
sub
mov
movsb
fwait
mov
jp
pushf
pusha
popa
test
xchg
dec
jge
mov
push
or
pop
jp
mov
stos
rorb
std
jb
and
stos
js
sbb
xchg
ja
fiadds
das
hlt
or
inc
and
into
fimull
loopne
jns
dec
jecxz
dec
mov
jae
inc
iret
cmp
jo
jb
dec
lret
sub
gs
jmp
xchg
push
sbb
insb
jno
mov
adc
jne
xchg
push
push
cs
cmc
das
dec
mov
js
into
push
shl
inc
cs
mov
and
fsubrs
jmp
in
cmpsl
into
sub
rep
fwait
pop
decb
push
out
movsb
cs
mov
int
cltd
push
data16
mov
pop
lret
pop
cmp
xor
call
lods
adc
loop
jne
fadd
sti
popa
lahf
loop
sub
pusha
mov
cmp
stc
lret
ljmp
sbb
int
ss
pop
loopne
pop
mov
fwait
popa
sbb
adc
flds
data16
xlat
ss
mov
push
pop
aaa
jnp
push
decl
adc
pusha
mov
ds
and
pop
orl
lods
rcrl
cwtl
out
mov
cmpsl
cltd
cmp
stos
dec
scas
and
sbb
pop
push
ret
mov
mov
and
push
loop
or
in
ja
rcrb
mov
xchg
jle
or
adc
into
xor
and
and
hlt
pop
push
mov
or
add
adcl
ds
sub
fisubrs
and
sbb
and
jbe
loop
loope
orb
int3
mov
clc
gs
aam
pop
fstpl
fisubs
in
dec
clts
dec
mov
jge
push
in
adc
call
and
add
ret
mov
add
xchg
sbb
mov
out
ficomps
sub
in
dec
sub
dec
loopne
mov
pop
rolb
fwait
add
out
rep
push
jg
pop
ds
cld
mov
sbb
jae
mov
jb
popa
lcall
scas
adc
or
lea
pushf
jae
cltd
push
cltd
in
jns
out
add
xchg
js
scas
enter
das
or
pop
inc
jmp
sbb
mov
ss
lock
mov
arpl
fsubrs
mov
repnz
xchg
dec
xchg
sub
adc
fnstsw
lock
xor
incl
cwtl
ss
jo
pop
bound
mov
xchg
jnp
lds
mov
sbb
sub
pop
adc
rcr
fistl
sahf
and
pop
pop
pop
mov
and
push
push
std
cmp
mov
lahf
mov
lods
jmp
fs
xchg
fnop
pushfw
jge
loope
mov
or
scas
adc
test
cmp
lea
cmp
shll
rcll
cmp
mov
je
mov
xchg
fnsave
cmpsb
lods
std
add
cli
xchg
clc
lret
out
mov
cmpsb
fwait
or
add
adc
mov
pushf
adc
mov
dec
sub
push
cs
cmpb
add
xchg
in
sbb
inc
dec
mov
cmc
jno
imul
adc
and
andb
in
sbb
push
ret
arpl
jbe
and
mov
repz
inc
clc
xchg
jno
int3
and
mov
mov
fistpll
das
ss
sbb
cmpsb
sub
sti
cmp
lods
ss
push
je
pop
mov
mov
ja
call
mov
out
sub
adc
rolb
jns
lods
iret
pop
mov
mov
jnp
pop
cmpsl
or
fs
mov
jns
or
dec
pop
int3
mov
lods
adc
mov
jbe
add
jno
mov
and
stos
scas
pusha
scas
or
nop
inc
sbb
jmp
out
arpl
pop
push
jg
ja
sti
clc
movlps
mov
iret
dec
mov
rep
pop
lods
leave
pop
jmp
push
sub
adc
dec
mov
adc
cltd
fdiv
cwtl
pop
setno
fstpl
mov
and
mov
xor
clc
xor
mov
pop
pop
cmpsl
dec
mov
mov
cs
add
int3
fwait
aad
lds
notl
add
xor
mov
rorb
jae
push
andb
bound
dec
mov
clc
lahf
sti
xor
lods
xor
andl
clc
les
out
sbb
add
xor
loope
dec
mov
dec
cmp
scas
iret
inc
repnz
mov
mov
shl
repnz
mov
inc
pop
lret
jl
sub
unpcklps
add
mov
gs
leave
jno
inc
testl
rcr
cmp
gs
cmpsl
mulb
inc
adc
cmpsb
ret
add
inc
mov
sbb
arpl
xor
lcall
lock
jmp
pop
jp,pt
loope
sbb
test
data16
imul
in
imul
inc
loop
pop
scas
into
rorl
inc
jo
inc
rol
rol
rol
rol
rol
rol
rol
rol
or
jne
sbb
sub
add
int
mov
and
inc
add
xchg
sbb
xor
mov
sub
pop
jno
ss
adc
adc
or
push
cld
ficompl
fdivs
pop
test
inc
mov
push
dec
adc
je
subl
popf
in
or
mov
add
inc
dec
pop
push
xor
movsl
cmp
shlb
jle
sub
repz
mov
xchg
out
jbe
sti
stos
jne
pop
clc
int3
imul
out
dec
cmp
and
ret
push
int3
and
ljmp
cld
jae
cmovne
xor
push
adc
fstpl
push
fmuls
scas
jns
rorl
test
stos
xchg
ja
icebp
aas
push
scas
cld
jle
jl
lcall
dec
mov
pop
cmp
push
pop
adc
std
or
and
lcall
add
dec
push
dec
in
xchg
fwait
mov
xor
xor
or
mov
mov
int
fadds
dec
push
jecxz
mov
adc
cld
aad
adc
cmp
mov
xlat
dec
adc
add
lock
push
adcb
je
mov
out
xor
pop
push
sub
int
les
and
inc
xchg
sbb
imul
stos
mov
fcmovbe
pop
dec
and
push
xor
push
clc
cwtl
pop
mov
pop
pushf
cltd
sub
xchg
xchg
add
add
loopne
xchg
ja
out
fldenv
aas
or
xor
pop
mov
mov
xchg
ljmp
mov
mov
xchg
pushf
push
inc
pop
sub
push
cltd
adc
test
dec
push
mov
orl
jbe
jecxz
push
ret
out
ja
movd
jno
std
jg
xchg
in
pop
pop
in
mov
and
add
insb
bound
stos
jecxz
xchg
nop
repnz
cs
mov
popa
test
jns
pop
dec
fwait
pop
icebp
cwtl
inc
mov
cmp
imul
cwtl
stc
push
cwtl
mov
sarl
popa
adc
jne
xor
lcall
daa
shrb
push
cmp
push
in
xchg
and
lahf
jge
sub
cmpsl
movd
jg
push
repz
aaa
push
cmp
jecxz
push
fcomip
scas
movsb
test
test
sub
stos
popa
outsb
add
outsl
add
stos
push
mov
xor
push
adc
fisttpll
jl
imul
push
pusha
mov
loopne
clc
and
int3
jp
adc
inc
mov
cld
fcomip
push
inc
mov
add
xchg
push
pop
mov
pop
xchg
pop
insb
and
mov
dec
repz
loopne
or
mov
out
jmp
pop
push
xchg
bound
cli
rclb
into
xor
test
das
push
arpl
jp
adc
lahf
pop
les
loop
pusha
stos
insb
cld
xchg
iret
dec
repz
aam
stos
lahf
outsb
adc
or
mov
in
repz
mov
js
pop
fs
jmp
cmp
cmp
loope
inc
inc
lahf
ret
scas
stos
addr16
xchg
mov
gs
mov
test
mov
pop
mov
movsl
in
aas
or
nop
leave
iret
or
pop
jg
inc
xchg
adc
cmc
test
sub
lods
aaa
orb
int3
popa
mov
adcb
pop
xor
imul
sub
push
add
sbb
inc
dec
xorb
in
movsl
ret
pushf
movsl
mov
sub
iret
push
rcrl
adc
dec
int3
out
cmp
cmp
ret
dec
lahf
loop
push
mov
mov
push
jge
pop
jns
push
cmc
adc
xchg
pop
mov
xorb
mov
push
mov
or
cwtl
ret
fcmovbe
mov
dec
lock
pop
dec
pop
dec
cmpsb
ja
mov
add
enter
mov
jne
sub
add
lods
jo
rorl
psubusw
or
xchg
mov
inc
mov
sbb
out
xor
sub
enter
ret
fxch
fiadds
test
gs
jl
mov
pop
dec
aaa
mov
cwtl
jo
sub
adc
mov
aam
pop
loop
flds
subl
inc
cltd
imul
xchg
push
int
sub
fnstenv
jge
neg
addb
ljmp
adc
pop
sbb
xor
dec
jb
test
or
cltd
mov
flds
mov
xlat
das
fists
sbb
push
pextrw
cmpsl
sbb
sub
sub
test
push
push
fidivl
insb
popf
sub
ss
or
loope
insb
and
add
iret
xchg
ss
push
adc
pop
push
test
push
jbe
int3
push
inc
and
scas
.byte
.byte
ss
.byte
