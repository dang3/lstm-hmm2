push
mov
movl
pop
ret
int3
push
mov
movl
pop
ret
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
push
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
mov
add
mov
mov
add
mov
add
mov
add
mov
mov
mov
movl
mov
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
pusha
mov
movl
mov
mov
movl
movl
movl
movl
movl
movl
movl
push
lea
push
call
call
mov
mov
lea
push
push
push
push
push
call
test
je
push
call
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
push
call
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
push
call
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
push
call
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
push
call
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
push
call
xor
jmp
lea
push
push
push
push
mov
push
call
test
jne
push
call
xor
jmp
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
lea
push
push
push
push
push
call
test
je
xor
jmp
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
mov
call
pop
call
pop
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
pop
ret
add
add
jo
adc
push
rolb
xor
mov
or
mov
add
loop
add
aam
aaa
mov
pop
aaa
scas
aad
aaa
xchg
aad
aaa
aam
aaa
iret
aaa
sbb
adc
imul
cmp
xlat
scas
cmp
fdivrs
fstps
cmp
fldcw
cmp
fdivr
cmp
xlat
fsub
cmp
arpl
fisubs
fbstp
sbb
fisubs
jns,pt
sbb
ds
fcompl
rcr
ds
fsubl
out
faddl
ds
sarl
cmp
in
ds
fildl
aas
mov
and
xchg
fldt
cmc
fildl
aas
stos
aas
fcmovnbe
aas
add
fdivr
aas
out
jmp
mov
add
adc
je
add
push
shrb
xor
nop
xor
shlb
xchg
rclb
arpl
or
push
sarl
xor
xor
shll
out
xchg
xor
loop
add
adc
jo
adc
jo
adc
add
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
add
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
add
adc
jo
adc
jo
adc
add
add
push
add
xchg
add
pusha
gs
adc
mov
jae
lods
mov
rcll
adc
mov
jae
lods
mov
rcll
adc
scas
xchg
popl
jae
xchg
mov
jo
adc
mov
ja
jl
push
imul
jb
andl
loop
add
xchg
add
jbe
inc
xchg
push
imul
imul
adc
aaa
xchg
pop
xchg
adc
mov
jo
adc
insb
loopne
add
push
add
push
add
push
add
test
mov
xchg
mov
mov
mov
nop
imul
mov
pusha
outsb
push
mov
xor
loop
add
arpl
cmp
push
mov
add
jg
dec
xchg
adc
sbb
xchg
cmp
or
adc
add
cltd
adc
push
mov
add
mov
jo
adc
mov
cmpl
jo
adc
popf
mov
shlb
inc
cltd
mov
mov
cmpl
xchg
xchg
adc
mov
mov
xchg
loop
add
pusha
outsb
dec
mov
xor
loop
add
test
inc
mov
inc
pop
gs
xchg
adc
jo
push
add
dec
nop
jo
adc
jo
adc
jo
jmp
add
adc
jo
push
add
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
push
add
or
and
inc
aaa
push
cwtl
loop
and
sub
push
sub
push
aaa
xor
jmp
jne
jmp
outsb
nop
aas
pop
push
nop
push
js
push
sbb
or
jo
sti
add
jo
stos
inc
jo
popl
loop
cltd
add
sti
add
sbb
jecxz
add
aam
std
jo
sti
dec
jo
sti
add
jae
jo
sti
adc
sti
adc
sti
add
loop
add
jo
sti
add
incl
jo
sti
add
sti
jae
loop
add
jno
stc
add
sti
add
and
adc
sti
add
sti
adc
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
add
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
adc
adc
leave
jecxz
add
jecxz
add
xchg
std
jecxz
add
adc
mov
adc
cltd
adc
adc
mov
adc
mov
adc
pop
jecxz
add
adc
nop
jbe
mov
pop
in
add
adc
dec
fstl
add
adc
sbb
adc
sbb
adc
or
adc
dec
ficoms
inc
daa
mov
je
ficoms
add
ret
adc
fstps
add
adc
jo
adc
jo
adc
jo
adc
mov
adc
jo
adc
jo
adc
jo
adc
jo
sahf
in
or
add
loope
add
mov
in
push
loope
jo
faddp
insb
or
dec
movsb
cmp
mov
jmp
add
adc
inc
or
cmp
jne
cmp
or
dec
adc
lds
jle
pusha
lret
push
clc
orb
call
adc
inc
in
loop
add
pusha
push
push
adc
push
idivl
push
and
add
pop
subl
sti
and
cmp
mov
adc
loop
mov
jo
jo
js
jmp
push
adc
ret
test
aam
pop
imul
add
sbb
ret
sti
sti
mov
lahf
addl
loop
mov
jo
adc
mov
sahf
ljmp
adc
push
fimuls
in
mov
adc
bound
ljmp
sahf
mov
push
and
in
pushf
imul
add
push
ret
adc
mov
shl
jae
adc
jae
fldt
dec
pusha
int
ret
add
insb
sbb
xor
loope
sbb
rclb
sub
in
addr16
loope
lock
add
incl
in
jne
packuswb
pop
mov
test
or
inc
flds
add
adc
shlb
cmp
nop
and
add
incb
adc
push
add
popa
outsl
or
adcl
out
jne
lret
nop
and
add
fimull
add
adc
and
add
test
xchg
sbb
add
cltd
push
adc
lea
incl
push
jmp
add
rcrb
fs
jo
out
sub
or
sub
or
add
fadd
or
mov
push
add
pop
adc
outsl
adc
outsl
adc
or
subb
call
jmp
ljmp
add
mov
add
jo
fwait
clc
pop
inc
loope
daa
jecxz
lock
add
fnstsw
lock
jo
mov
repnz
call
adc
incl
iret
repz
repz
gs
jo
xchg
repz
push
inc
addr16
stos
jno
sti
add
pop
pop
pop
out
hlt
mov
movb
data16
ds
outsl
sbb
or
pusha
inc
jmp
add
aam
push
adc
mov
cmpsl
nop
lods
or
sti
mov
ljmp
mov
popf
sub
sub
jae
adc
dec
loop
hlt
out
addr16
mov
pop
inc
loope
hlt
in
aam
adc
ret
ds
adc
jns
cli
xor
ljmp
adc
stos
cmp
push
sbbb
in
mov
add
xchg
loop
in
sbb
add
fsubrp
push
add
add
in
mov
add
sub
add
or
in
jne
scas
push
lea
lcall
ret
notb
in
mov
cmp
xchg
adc
enter
shlb
incb
lds
inc
in
or
xchg
push
adc
mov
seto
mov
in
xchg
adc
add
rorb
mov
out
fmull
jnp
in
in
push
ss
sbb
jo
jecxz
inc
test
loopne
je
add
sub
inc
xlat
or
outsl
in
jmp
push
orl
add
cmp
decb
leave
loopne
xchg
loop
mov
out
mov
fiaddl
jo
adc
fildl
in
incb
leave
push
add
adc
int3
xchg
les
adc
std
or
add
clc
adc
xor
pcmpeqw
add
mov
mov
lock
adc
xchg
mov
sbb
loopne
es
pop
push
sub
sub
pop
jo
stc
pop
jo
clc
pop
jo
sti
ret
add
xchg
neg
bound
sti
add
cmpsl
ja
pop
mov
jns
cli
pop
out
or
sti
add
xchg
cli
lock
test
roll
in
mov
mov
jns
or
adc
or
xchg
jno
or
out
shll
data16
dec
in
cmp
cli
ss
jae
cltd
stos
add
mov
xchg
repnz
cli
pop
sbb
aad
add
adc
jae
addr16
and
outsb
into
pop
inc
cmc
pop
lock
sub
in
or
push
into
xchg
sbb
fsubrp
fwait
jg
shl
jae
cltd
cmp
sub
adc
jae
aad
xchg
loope
jmp
addl
data16
add
ljmp
mov
adc
push
add
push
or
std
data16
mov
rorb
or
lahf
inc
or
sub
cld
out
std
fcmovb
loope
inc
mov
popa
outsl
or
xchg
push
or
adc
data16
xchg
push
jmp
in
leave
pop
loop
push
adc
in
jne
data16
adcl
adc
fs
pop
in
incl
adc
jne
or
or
mov
out
cld
std
ljmp
aaa
in
jmp
adc
fs
or
adc
xor
pushl
cmp
or
test
decl
push
rorl
jo
imul
fldl
jge
jne
mov
cmp
fistps
pop
or
jne
jl
fs
jg
mov
outsb
push
scas
push
jmp
incl
jmp
inc
jo
xchg
xchg
add
jg
sti
in
std
flds
pop
outsl
or
pop
jb
mov
sti
dec
hlt
jmp
jge
js
repnz
and
or
dec
cmp
xlat
xchg
mov
in
rolb
pop
ds
mov
xchg
jno
or
sti
iret
mulb
fisttps
out
xlat
jecxz
stos
or
repz
jmp
lahf
push
mov
sti
notb
push
push
aad
xchg
adc
jae
push
sbb
fwait
jmp
mov
addr16
dec
ljmp
out
rorl
incw
dec
loop
cmp
adc
push
in
cmp
cli
es
jae
in
sbb
add
sub
xchg
and
js
fimull
fldt
mov
sahf
out
jae
adc
inc
dec
inc
add
and
sbb
cmc
in
incl
mov
adc
clc
add
push
faddl
pop
or
clc
stc
movsl
adc
pop
or
call
in
rol
out
pushf
cli
stc
shl
adc
aas
sti
data16
enter
in
leave
fnclex
adc
movntq
out
leave
lret
loop
push
cmpsb
out
in
or
lock
stc
in
mov
adc
leave
jecxz
inc
sub
sar
mov
xorl
adc
pop
fdivr
adc
jo
adc
mov
adc
mov
aam
jo
outsb
in
repz
inc
fstl
leave
je
stc
adc
lds
leave
fmuls
cli
mov
and
jo
in
mov
insb
push
jl
shlb
or
stc
jne
jno
into
jo
stc
jne
popa
mov
ret
stc
pop
mov
jnp
call
xor
mov
fistl
int3
jnp
loope
add
or
jmp
push
add
mov
sti
cld
mov
loop
jp
adc
pop
sti
call
mov
mov
jecxz
add
lahf
xlat
out
push
rol
adc
fcomip
add
jo
sti
push
or
add
fcompl
push
push
lock
sti
xorb
hlt
xlat
cli
xorb
in
aam
std
adcl
xchg
cmp
mov
fxch
add
in
pushf
mov
cmpsl
sbb
cli
in
jl
std
icebp
std
push
add
incb
jg
adc
dec
cli
roll
in
jmp
inc
or
stos
and
xor
adc
notb
icebp
push
sbb
pop
and
stos
out
add
add
cltd
inc
loope
xchg
add
loopne
push
es
fchs
fcmovnb
aad
inc
mov
or
push
dec
adc
dec
adc
adc
and
mov
inc
mov
or
mov
pop
cwtl
dec
cmp
adc
movsl
pushf
dec
leave
fwait
or
push
ret
push
ret
cld
ror
add
loope
and
add
dec
leave
fisttpl
in
push
subb
fstl
add
cmc
jne
jno
filds
sub
jo
push
loop
xorb
cmp
jne
mov
jo
test
cmp
testb
mov
sub
addr16
cli
cld
cmp
pop
xchg
adc
mov
and
ret
leave
inc
cmp
les
std
adc
inc
xchg
les
call
out
pop
ljmp
add
loope
call
cmp
xor
loop
ss
out
add
int3
lods
pop
lret
mov
dec
mov
jl
add
lods
xor
shrl
mov
in
in
repz
add
dec
jbe
out
sub
cmpsl
add
jl
adc
pop
add
jb
cli
cmpsl
jp
jecxz
inc
fwait
sub
jo
icebp
es
loop
add
das
cmp
loopne
add
cmp
or
popf
insb
loop
test
jae
in
sbb
or
sub
add
les
jmp
push
imul
ja
push
dec
add
push
std
cmpsl
ljmp
add
test
ss
add
xchg
je
jmp
mov
xchg
in
xchg
ja
xchg
pop
push
add
cltd
dec
inc
in
notb
addr16
push
ja
je
paddsb
push
xchg
cli
xlat
adc
in
into
enter
dec
push
in
inc
out
jp
jno
adc
cmp
cli
xchg
roll
in
or
add
hlt
push
lcall
repz
and
add
clc
icebp
aas
out
call
or
in
push
jo
pop
push
daa
sbb
add
outsl
incb
int3
clc
pop
ror
aad
cltd
in
add
out
pop
ret
jecxz
add
sbb
jne
pop
adc
pop
in
add
ss
lret
adc
les
jl
daa
xchg
add
movsl
icebp
clc
cld
sub
adc
xor
es
jbe
hlt
mov
stc
icebp
jne
popa
sti
lret
add
push
rcrb
jge
or
repz
lds
inc
setbe
or
sti
dec
leave
inc
inc
mov
lahf
clc
in
leave
push
daa
and
push
rolb
jg
int
shll
mov
call
sahf
inc
fs
je
adc
loope
loopne
inc
jbe
loop
mov
jmp
push
jl
push
cld
add
lds
jne
loopne
shlb
fadd
test
out
mov
test
push
les
or
sti
cmpl
mov
insl
jo
int
cmpsb
je
loopne
out
push
push
push
xor
pusha
loop
jmp
sub
mov
adc
push
je
or
add
aam
repnz
adc
cli
xchg
leave
shlb
enter
ds
cmpsl
sbb
in
outsl
cmc
ljmp
bound
aaa
cmpsb
insb
loop
jb
xor
sub
add
jle
sahf
fldt
rclb
out
scas
cmpsl
sbb
mov
adc
jbe
push
cmc
ret
jmp
add
sub
jmp
or
je
adc
mov
cli
into
aas
std
in
add
ds
jne
mov
imul
inc
call
mov
call
inc
subl
or
enter
sbbb
push
in
inc
fisttpll
cmp
sbb
icebp
repz
leave
addr16
in
cli
or
add
lahf
inc
call
and
in
jne
scas
cli
pop
push
loope
call
in
inc
call
ds
add
dec
leave
fwait
out
push
jo
std
xorl
push
pop
mov
incl
pop
cld
repz
mov
mov
adc
adc
popf
adc
into
jne
push
jmp
cmp
mov
jns
dec
inc
cld
add
fmulp
out
inc
push
cld
jo
adc
pop
mov
cmp
or
xor
cmp
inc
sbb
fwait
cmp
lods
add
xor
leave
dec
add
push
loop
add
sub
inc
fs
xor
je
cmpsb
mov
inc
js
cmp
bound
add
loop
cmp
cmp
testl
mov
push
add
loop
test
sti
fdivrl
shl
aaa
loop
mov
mov
in
subb
add
loope
add
mov
mov
data16
and
push
lock
sti
add
xor
je
pop
push
push
loop
fildl
rcll
jmp
jl
rclb
add
adc
jae
fldt
outsl
loop
jb
data16
std
fsub
js
sbb
sbb
sbb
adc
jle
adc
mov
cli
in
pusha
mov
dec
sbb
jo
mov
xor
adc
xor
cmpsb
inc
idiv
sbb
stc
in
ret
adc
neg
stos
jo
inc
jb
xchg
cltd
adc
mov
sbb
pop
call
shll
adc
add
adc
jae
adc
sbb
aad
mov
inc
mov
or
fwait
inc
push
xchg
push
xchg
push
xchg
decl
or
sbb
mov
xchg
push
xchg
push
mov
jnp
in
mov
sbb
cmp
in
jae
or
in
xor
hlt
roll
fldenv
adc
push
sbb
jmp
mov
and
shll
add
loopne
incl
cmp
add
dec
leave
pop
in
adc
test
push
jmp
sbb
xchg
sbb
inc
enter
cmp
out
enter
sbb
adc
int3
in
jmp
clc
aas
pop
and
jo
pop
adc
mov
stc
mov
sub
movl
jo
adc
jo
add
add
xor
enter
xlat
inc
in
pushf
cwtl
lret
jo
adc
mov
cmpsb
mov
pop
pop
jmp
cli
repnz
fscale
popf
push
xor
inc
add
mov
add
push
lds
loop
or
out
cmp
in
in
jmp
dec
loop
add
jo
jbe
dec
mul
fsubs
sti
insl
jo
sti
insl
jo
sti
xchg
stc
rcr
pop
xchg
dec
jle
pop
aam
mov
mull
mov
out
hlt
jo
sti
imul
cmp
inc
ret
inc
jo
in
xlat
mov
out
js
loop
jb
fs
pop
mov
in
mov
test
sbb
js
enter
loop
insb
xchg
push
in
negb
push
dec
testb
lret
push
jmp
daa
idivb
jae
xchg
adc
stc
in
imulb
sbb
jmp
popf
push
adc
jae
in
xchg
sbb
in
cmp
cmpsb
mov
cmc
out
in
scas
stc
pop
cli
xchg
mov
lret
mov
cmc
jns
fndisi(8087
adc
add
jmp
scas
call
fadds
or
out
out
ds
adc
fldcw
cld
cs
out
mov
in
pop
jle
cli
out
jle
inc
incl
scas
hlt
ds
sbb
or
jmp
imul
xor
xlat
add
mov
std
mov
cld
in
incl
mov
out
push
or
idiv
or
mov
imul
iret
int3
test
arpl
dec
mov
ljmp
and
fstpl
and
xchg
cmc
out
ja
stc
inc
fs
in
in
lcall
les
pop
in
add
sarl
hlt
pushf
lock
in
call
add
xchg
out
pop
adc
lcall
test
incl
imul
or
fdivs
add
loopne
xlat
pusha
xchg
add
jmp
ds
int3
add
dec
mov
jo
jle
repz
xor
sub
push
ja
loop
jle
jp
aam
push
push
aad
or
jg
dec
add
dec
repz
aas
repz
aaa
sub
adc
loop
or
outsb
adc
packuswb
mov
add
out
xchg
aam
std
adc
repnz
cmc
daa
loop
cmpsb
out
icebp
cld
sahf
mov
repnz
push
iret
add
xchg
mov
dec
mov
sbb
cli
push
lods
repnz
jb
jecxz
es
pop
mov
data16
hlt
lahf
push
jo
jmp
test
sbb
in
xchg
cltd
adc
adc
ljmp
ficoml
jge
icebp
in
sbb
sbb
inc
repnz
out
adc
jae
cltd
or
mov
add
fisttpll
adc
leave
in
push
aad
incl
insb
setno
out
or
mov
call
adc
sbb
fidivs
testl
popf
in
ss
jmp
cmp
cmpsl
adc
pop
in
pop
mov
js
mov
call
ret
jne
or
xchg
clc
sbb
xor
and
enter
and
rclb
lahf
adc
les
jmp
pop
pop
fildl
sti
dec
pop
dec
sti
daa
call
jnp
inc
add
jae
sbb
inc
arpl
ret
xchg
clc
jae
adc
outsl
sti
imul
cmp
mov
in
add
or
add
mov
outsb
inc
push
rorl
dec
dec
mov
inc
jmp
shlb
inc
cld
sbb
hlt
push
adc
push
mov
je
sub
cmp
lock
pop
sbbb
das
mov
xchg
jo
pop
cwtd
mov
pusha
loopne
xchg
add
and
loop
jae
and
or
mov
jl
fisubrl
cwtl
push
pusha
push
add
shrb
out
and
addr16
sub
fmul
movsb
xor
xor
add
fstpt
push
ja
mov
sub
add
out
push
out
pop
in
loopne
jmp
lret
and
jmp
mov
sbb
je
sbb
loop
jmp
je
stc
div
test
sub
jae
adc
jmp
imul
dec
adc
fldt
ja
inc
bound
movsb
push
in
jae
adc
and
inc
inc
sbb
ljmp
mov
stc
jmp
pushf
sbb
cmpsl
out
add
lock
and
data16
push
pop
dec
mov
inc
push
loopne
adc
or
rorb
leave
nop
add
jbe
mov
ja
sub
adc
pop
and
lcall
orl
addb
cmpb
nop
mov
push
add
xor
fdivs
or
cmpb
push
nop
mov
push
cmp
jno
or
cmpb
push
add
add
mov
or
rorl
nop
sti
scas
pop
lret
mov
dec
and
adc
dec
or
outsl
inc
adc
jg
or
mov
nop
fsubrs
lcall
repnz
inc
rolb
pop
loopne
xlat
add
ja
add
jecxz
nop
sti
aaa
popa
pop
inc
shrb
mov
fcoml
mov
inc
jl
dec
outsl
dec
cmp
jmp
mov
out
add
loop
into
pop
je
clc
pop
jo
test
ss
and
mov
gs
or
mov
std
in
and
jbe
imul
shll
out
add
cld
ret
lock
addr16
add
loop
pop
jno
sti
cld
testb
jo
sti
jle
out
insb
int
xchg
xchg
fnstenv
out
je
add
jmp
stc
mov
mov
sub
addr16
cltd
cmp
in
and
cli
xor
out
jne
pop
out
out
jmp
cmp
jmp
pusha
idiv
jmp
and
adc
js
push
insb
js
inc
je
adc
mov
loope
pusha
ss
mov
push
ljmp
or
or
jmp
cwtl
jmp
jge
ljmp
mov
push
lods
ljmp
loop
dec
leave
fwait
jmp
xchg
les
pop
addr16
nop
sbb
int3
push
add
jns
fsub
cli
mov
dec
out
fimull
out
sub
insb
xchg
out
daa
push
in
push
add
push
add
fxam
sbb
imul
divps
add
push
cld
jns
test
out
lahf
test
sbb
pop
std
es
jne
popa
lahf
adc
jo
es
outsl
es
lcall
jmp
test
fcos
mov
shlb
incl
mov
aam
jnp
inc
push
pop
data16
aaa
loop
stc
mov
addl
push
hlt
mov
add
sarl
xor
enter
jo
shlb
fnstenv
bound
repnz
insb
fmuls
inc
clc
inc
lret
into
sub
outsl
fdivr
sbb
loope
add
sahf
dec
add
sbb
add
lods
pop
mov
cmp
sub
pop
xor
gs
popa
adc
ljmp
or
out
scas
lahf
jnp
push
outsb
adc
lock
loope
adc
sti
orl
inc
js
sub
add
arpl
dec
mov
fimull
bound
or
aad
cli
aaa
retw
enter
addl
stos
insb
sti
and
adc
lods
in
jmp
push
dec
xor
cmc
nop
and
mov
add
sarb
in
movsb
sbb
mov
adc
and
jmp
das
loop
jmp
inc
out
icebp
movsl
loop
hlt
push
mov
jmp
int3
inc
lods
jmp
add
xchg
in
aam
mov
jmp
mov
imul
jae
adc
push
push
in
jne
push
in
or
roll
fstl
add
adc
add
js
inc
loop
adc
movsb
notb
loop
jne
sbb
es
mov
adc
pushf
out
add
or
mov
add
sub
or
mov
in
push
xchg
sbb
leave
pop
adc
dec
scas
cli
mov
scas
xchg
sbb
sub
ret
inc
mov
popa
cld
jp
outsl
or
inc
pop
pop
cmp
leave
mov
adc
mov
loope
push
loope
std
repnz
add
sti
enter
adc
xor
add
pop
xchg
cmp
push
lods
jmp
imul
aas
dec
aad
lret
jne
popa
adc
rcl
mov
popf
add
call
pop
and
fwait
xor
add
cmpsb
imul
inc
lret
inc
jo
or
adcb
lods
loope
add
pusha
stos
jmp
mov
fdivr
data16
cltd
sbb
xor
movsb
sbb
add
clc
lret
sti
add
cmp
push
mov
jns
repnz
jo
mov
jl
push
add
mov
or
cmp
and
xlat
pop
outsb
jecxz
lods
repnz
gs
add
incl
jo
pusha
inc
pusha
out
popf
es
mov
sub
mov
fdiv
push
adc
adcl
outsl
icebp
cmp
cwtl
out
adcl
ficompl
mov
mov
js,pt
jno
shrl
insl
loopne
bound
scas
jmp
sub
jmp
loopne
inc
jle
cli
adc
jo
cltd
and
xor
and
leave
jg
pop
icebp
xor
add
leave
push
call
sbb
adc
test
test
test
lret
adc
adc
xor
insb
xchg
pop
inc
out
push
rorl
movnti
sbb
stc
mov
jae
sub
gs
add
rol
movsl
loope
mov
shr
and
shr
aad
add
jle
dec
push
movsl
rclb
dec
pushf
cwtl
cli
dec
scas
xor
dec
scas
sahf
pushf
jbe
test
loop
sbb
pop
mov
ljmp
pop
xchg
pop
popa
dec
xchg
imul
in
movnti
in
scas
xor
mov
pop
pop
mov
cli
shlb
in
xchg
test
cli
in
add
mov
fimuls
mov
xlat
sbb
adc
inc
or
push
jae
pushf
stc
add
and
add
xor
or
add
push
lods
xor
lods
test
sub
pop
add
std
jae
in
xor
adc
cli
push
aad
cli
in
loope
adc
and
push
xor
lds
fucomi
mov
std
jge
in
xchg
xor
push
push
mov
mov
adc
nop
add
call
stc
dec
je
mov
mov
inc
fnstsw
xchg
mov
in
sbb
movsl
jecxz
inc
insb
push
testb
idivb
outsb
dec
adc
xor
les
icebp
clc
int
fmul
mov
in
int
aaa
cltd
adc
outsb
add
sub
leave
jb
adc
or
adc
fs
out
stc
loopne
adc
add
shl
je
cwtl
mov
xlat
xor
pop
xor
and
mov
sbb
ret
imul
aad
call
out
enter
xor
sub
push
dec
xlat
and
jge
xor
repnz
push
adc
lret
ljmp
add
cmpsl
pop
mov
iret
mov
jb
in
add
jmp
pop
push
movsl
adc
mov
cwtl
clc
jp
xor
ficompl
push
aad
out
or
movsb
sbb
xor
add
pop
sbb
dec
inc
mov
rcr
psubusw
pushf
and
stos
pushf
and
cld
data16
rolb
rclb
mov
in
mov
jmp
ljmp
mov
cwtl
clc
jo
scas
and
mov
leave
add
or
push
jae
lahf
cli
inc
ret
mov
inc
inc
sub
enter
mov
add
fsubrs
cmp
mov
add
mov
mul
aas
add
xchg
xchg
add
stos
xlat
ret
enter
clc
cmpsl
xor
orl
stos
mov
jae
cld
shlb
adc
sti
and
testl
loop
pop
push
mov
leave
mov
sbb
les
mov
adc
repnz
pushw
sbb
ljmp
fldl2t
mov
outsl
inc
xor
mov
mov
xor
adc
jg
fwait
stc
pop
pop
mov
jno
inc
fmuls
mov
out
adc
mov
cmp
insb
fistpll
mov
push
repnz
outsb
adc
fdivs
or
add
xor
cli
fisubl
adc
ficompl
push
daa
loopne
in
sub
add
sub
mov
add
cld
adc
aaa
jl
shl
jo
cwtl
rol
and
mull
lock
push
shrb
jmp
insl
xchg
into
jns
jno
and
jmp
fstps
mov
mov
jmp
stc
aam
or
fisttps
add
out
ret
loop,pn
mov
cmp
sahf
test
and
sub
loope
rorl
ret
inc
popf
in
call
shr
or
shr
lea
cmp
and
push
aad
rorl
fisubrl
in
xor
ljmp
cs
mov
ror
bswap
ss
in
incl
shl
or
shr
lea
cltd
adc
movsl
rclb
mov
andl
test
dec
pop
int
push
xor
or
add
cmp
clc
imul
cli
std
aaa
pop
xchg
xor
lahf
add
int3
sarb
les
mov
mov
sub
push
test
mov
in
jnp
in
cmc
push
or
cmp
ss
iret
mov
inc
push
sbb
inc
push
lcall
dec
stc
inc
nop
mov
popf
mov
dec
in
push
idivl
addr16
adc
out
mov
xor
clc
rcr
fadds
adc
lds
test
dec
pop
mov
mov
out
int
out
ret
data16
add
repz
jae
out
mov
clc
fdiv
fdivrs
push
stos
adc
mov
loopne
cmp
stc
inc
pusha
mov
sub
jbe
fstps
jno
fstpl
and
jecxz
add
and
and
fsubl
xor
data16
inc
mov
ljmp
fcoms
xlat
in
push
push
rcrb
add
fstps
outsl
jecxz
lds
outsb
icebp
jb
adc
jo
pop
loope
das
pop
das
sahf
aaa
xor
cltd
out
xlat
in
adc
dec
inc
dec
test
cwtl
test
sahf
jmp
and
aam
push
lcall
lea
clc
push
xlat
or
sbb
adc
adc
aam
notl
rolb
out
xchg
xlat
xor
add
jecxz
fadd
jbe
add
pop
daa
and
push
xlat
cmp
enter
dec
popf
clc
sbb
pop
sbb
aam
jns
icebp
ja
fnstenv
sti
arpl
cltd
in
adcl
add
jmp
mov
inc
push
sbb
add
push
pop
xchg
jmp
sub
out
add
dec
mov
xchg
jmp
iret
push
adcb
or
js
and
add
outsl
enter
jmp
push
adcb
or
js
push
sub
add
notl
mov
and
lret
cltd
adc
fdivs
add
mull
cltd
adc
sti
mov
fs
adc
leave
adc
xor
jo
add
out
and
loop
call
pop
adc
inc
jo
mov
and
aas
mov
xor
loop
xchg
pop
aad
pop
sahf
xor
mov
jmp
imul
add
in
push
cmp
and
push
sub
pop
lea
and
loop
adc
mov
pop
inc
jo
inc
fstps
mov
testb
in
jle
dec
and
jmp
test
adc
outsl
addr16
pop
sub
mov
jne
je
xchg
ljmp
mov
aas
push
jmp
lods
loop
sbb
aas
push
jmp
inc
add
test
arpl
lods
in
fisubs
jb
fmulp
ror
incl
jp
adc
clc
pop
jbe
jae
push
add
push
dec
shll
in
sbb
shlb
add
push
add
in
testb
xor
ret
lahf
aam
pop
adc
pop
xchg
push
mov
jl
pushf
inc
icebp
outsb
cld
sbb
rorl
add
mov
rclb
push
cld
push
xor
adc
jbe
or
push
clc
or
scas
sbb
adc
mov
mov
pop
push
mov
lahf
rolb
and
pushl
inc
fbstp
sub
lds
add
es
and
push
and
push
mov
lds
fdivs
into
rolb
fwait
or
and
jp
add
inc
sub
fs
fwait
inc
cmp
adc
xor
in
pop
outsl
sbb
cmc
adc
repz
jne
loopne
or
xor
jo
shlb
adc
adc
loop
add
fidivrs
mov
rcl
or
loop
add
movsb
testb
pop
xchg
cld
sbb
push
xchg
cli
add
lret
jb
sbb
cmp
xorb
jge
test
pusha
inc
pusha
push
dec
xchg
pop
mov
sbb
js
je
cmpsb
std
repnz
loop
popf
out
jmp
js
outsb
mov
call
jns
notl
sahf
test
lods
pop
cmp
pop
sub
inc
cmp
icebp
movsl
jmp
mov
aas
sarl
cwtl
stos
ds
shl
jae
cwtl
mov
jl
gs
adc
jae
dec
mov
inc
fisubs
add
fnstcw
scas
cmpsl
jmp
pop
jecxz
add
arpl
gs
loope
jmp
sub
cltd
shr
jae
cwtl
add
ret
add
test
xchg
in
call
xchg
adc
leave
jecxz
test
jecxz
add
adc
scas
xchg
in
jne
bound
lea
in
dec
ss
and
test
xchg
in
decl
adc
popa
dec
adc
or
je
push
into
lods
jne
lods
jmp
cmp
add
fld
inc
jecxz
mov
lods
leave
push
xchg
data16
dec
in
lcall
lods
je
in
dec
push
lret
outsb
xchg
in
or
and
or
insl
inc
out
push
fbstp
push
jmp
push
cmp
adc
pop
push
ds
incl
inc
cwtl
and
lcall
outsl
mov
add
xor
ret
lret
xchg
adc
out
insl
in
icebp
xchg
clc
push
inc
inc
sub
mov
mov
sbb
cmp
or
or
ret
pop
rcl
jb
add
dec
ljmp
mov
sti
test
lret
xor
add
std
scas
inc
int
cld
xlat
test
sub
jae
shl
pop
pop
add
lock
add
pop
ja
cwtl
int
push
push
scas
and
and
xor
js
pusha
loop
add
push
inc
jnp
sub
jp
popa
lods
lahf
adc
jo
pop
cmp
or
das
int
dec
and
adc
jae
xchg
xchg
add
pop
add
inc
xchg
outsl
pop
push
adc
das
pop
scas
hlt
dec
out
in
jmp
pop
outsb
icebp
jae
ficompl
mov
push
jb
pusha
shr
cs
shl
jae
cwtl
aad
movsl
out
aas
cmp
fmulp
int3
in
jo
into
sahf
and
xor
aad
int3
in
fisubrl
inc
adc
daa
int3
data16
in
data16
shr
out
adc
jmp
fistpl
add
fists
jbe
outsl
sidtl
loopne
jne
addr16
jmp
xchg
rcr
in
jne
addr16
fnsave
cwtl
push
fisttpll
push
out
and
fucomip
jne
jge
hlt
cmpsb
xor
mov
add
fistpll
test
adc
pop
xchg
sti
inc
sbb
adc
lahf
add
sub
mov
adc
add
ja
inc
loop
stos
xchg
dec
fists
mov
xchg
mov
add
aad
cmpsb
out
push
jo
push
mov
mov
inc
daa
mov
int3
inc
jo
and
sbb
jmp
test
clc
mov
inc
mov
mov
imul
xor
in
icebp
push
addl
add
mov
mov
rcrl
inc
call
pop
jnp
jmp
pop
jmp
inc
mov
fstl
ja
adcb
loop
arpl
stos
aas
push
dec
lods
mov
lret
popf
into
inc
xchg
lret
xlat
dec
clc
cwtl
imul
aaa
pop
pop
cmpsl
mov
hlt
add
add
mov
xor
xchg
loop
add
das
out
leave
dec
mov
xor
stos
inc
sarb
leave
lret
jle
sub
mov
jmp
jns
shlb
fildll
leave
xchg
xchg
movb
nop
loop
fwait
in
adc
pop
push
xor
jae
jnp
or
lcall
popf
push
adc
jae
sarl
mov
leave
in
jmp
jnp
adc
mov
in
divb
jmp
pop
pop
push
sbb
dec
cmpsl
outsb
xor
jnp
jae
xchg
push
insb
leave
data16
fistpl
rclb
outsb
cltd
jae
push
rcr
loope
jmp
jp
adc
inc
sahf
inc
xchg
jae
xchg
pop
mov
inc
add
add
add
lods
jne
addr16
inc
in
adc
int3
cli
sarb
mov
sarl
in
call
aaa
pushf
inc
dec
movsb
push
aam
fcoml
add
jecxz
jecxz
lea
inc
push
in
jmp
pop
cltd
jecxz
or
scas
adc
data16
adc
in
jne
out
sub
fsubrp
jne
sbb
jecxz
les
jns,pn
fdivp
out
call
outsl
shlb
je
mov
popa
outsb
scas
jo
inc
mov
xor
aaa
xor
mov
daa
xchg
jmp
and
cld
psubb
pop
data16
inc
sub
add
gs
cltd
fidivrl
call
add
inc
mov
imul
pop
pop
test
inc
test
movsb
mov
sub
or
or
mov
jg
push
jo
in
sbb
push
xchg
fwait
rol
insl
test
pop
lods
lcall
loop
jl
bound
cmpsl
xchg
popf
mov
jno
fcmovnb
mov
int3
add
or
rolb
inc
cli
add
dec
repnz
mov
cli
add
pop
push
test
add
stc
repnz
bound
mov
stc
fwait
std
ret
xlat
pop
push
jno
loop
jmp
iret
lds
movsl
aad
adc
jae
sarl
popf
push
lods
pop
add
dec
shll
scas
in
aam
push
push
pop
out
push
lret
dec
pop
vucomiss
loop
lods
iret
xor
jae
xchg
xchg
jae
data16
rclb
je
push
adc
loop
jmp
mov
xchg
inc
fiadds
loop
pop
xor
mov
jne
gs
add
adc
mov
dec
mov
xlat
cmp
loopne
decl
inc
leave
test
int3
in
decl
loopne
int3
addl
ljmp
neg
adc
pop
repz
aam
adc
addr16
add
fucomip
jne
jl
shlb
push
repz
call
dec
mov
add
push
jo
pop
lcall
pushf
mov
mov
adc
cs
sub
xchg
arpl
sarl
pushl
jp
or
push
cmp
pop
jl
shll
jnp
cmp
pop
mov
adc
scas
add
movsl
mov
sub
pop
sbb
mov
sti
lock
inc
int3
mov
mov
fcoms
gs
adc
inc
stc
mov
cmpsl
mov
incl
mov
bound
sbbb
inc
xchg
sbb
lods
fdivrl
jno
sbb
mov
jns
mov
or
stc
das
cmpsb
gs
adc
xor
mov
inc
fiaddl
stc
jle
cmp
movsl
add
ret
lods
mov
sub
loop
ret
test
xor
pusha
roll
iret
in
movsb
fildll
movsb
pop
mov
adc
or
pop
add
movsl
dec
mov
out
adc
into
xchg
movsl
test
in
movb
popa
mov
insl
jecxz
jmp
jae
shlb
int
adc
loop
out
add
ds
jg
jmp
inc
shlb
vmovd
shll
aaa
pop
pop
mov
cli
loop
shr
rclb
pushf
out
nop
mov
out
ds
jmp
add
data16
sbb
push
adc
data16
aaa
sbb
adc
rorl
stc
xchg
in
dec
stos
jecxz
adc
cli
push
push
rorb
push
add
xchg
call
sub
push
into
fstps
call
push
movsb
addr16
add
add
in
jb
test
mov
in
incl
adc
fiaddl
incl
jne
test
rcll
dec
push
push
lock
test
jne
mov
ret
adc
mov
or
fdivrs
pop
or
dec
sbb
cmp
mov
jl
ss
cwtl
push
shlb
inc
mov
xchg
in
loop
js
rolb
jge
leave
adc
jo
fnstsw
add
push
mov
mov
cmc
or
mov
aaa
dec
add
sbb
jmp
add
or
jbe
in
repz
push
pop
add
jne
js
gs
sets
loop
pop
js
test
xor
stos
faddp
sbb
aad
and
xor
xor
stos
add
mov
into
add
stc
adc
mov
shrb
jnp
add
insl
aaa
xchg
and
fldenv
lret
pop
mov
mov
scas
icebp
cmpsb
mov
xchg
mov
stc
add
daa
testb
testl
jo
adc
mov
jp
xlat
and
push
xchg
cli
cmpsb
adc
clc
int
loop
jl
lret
adc
in
ficoms
jmp
idivb
iret
mov
fidivrs
ja
cmpsl
bsr
add
loop
pusha
jmp
and
loopne
shll
mov
in
jmp
jae
popf
stos
cvtps2pi
and
adc
mov
call
filds
or
popf
xchg
fwait
pop
in
call
push
icebp
jg
inc
leave
mov
test
cmp
stc
scas
leave
loopne
cmp
cli
push
add
fstps
push
cmpsb
fstps
call
mov
fstps
call
in
sar
push
pop
sahf
push
xor
jge
ljmp
data16
fiaddl
cmp
pop
cmp
cli
lock
pop
in
call
jo
xor
les
push
jle
incl
loopne
and
out
add
jo
sbb
pop
scas
cmp
cwtl
mov
cmp
mov
std
cmc
ljmp
pushf
mov
push
out
jmp
popf
jne
sbb
std
addr16
mov
in
xchg
mov
cmp
add
xlat
pmaddwd
dec
sahf
daa
mov
mov
xchg
add
mov
sub
popf
sub
push
sub
xchg
fidivs
pushf
pop
out
sbb
js
aad
mov
mov
cwtl
inc
aad
cmpsl
out
pop
jle
dec
hlt
daa
lret
mov
lods
push
adc
pushf
outsl
mov
lret
stc
ss
popf
push
fs
sub
adc
imul
outsb
or
in
fcompl
mov
pop
ret
adc
in
inc
in
data16
das
add
pop
out
int
xor
adc
in
push
stos
movsb
add
sahf
insl
ljmp
mov
lahf
jl
enter
jmp
in
jmp
test
fwait
sub
mov
adc
out
divl
add
outsb
icebp
jae
inc
xor
adc
insb
outsb
stc
jae
push
xchg
adc
js
pop
push
clc
pop
pop
push
bound
push
adc
cmp
subb
xchg
sub
cmp
aam
inc
lods
imul
int3
push
lock
pop
lock
fsubrp
jne
xchg
ftst
xchg
ret
add
sti
inc
leave
mov
adc
mov
push
inc
fs
mov
fcom
and
add
call
push
add
in
rolb
arpl
mov
and
add
sbb
jmp
fwait
inc
sub
mov
push
pop
icebp
xchg
jge
lret
enter
jo
sub
sub
adc
push
ffreep
cmp
fsts
jo
out
test
stc
inc
jo
sbb
rep
mov
jne
adcl
ret
in
jo
rolb
leave
rolb
leave
rolb
leave
rolb
leave
rolb
loop
xchg
dec
cli
sub
jo
cli
sub
lret
push
std
sbb
xor
int
ljmp
xor
aaa
sbb
stc
xchg
scas
rolb
out
int3
dec
ljmp
xor
loopne
stc
add
xchg
xor
pusha
aas
shrb
sar
aas
mov
xor
xor
rorl
mov
xor
cs
xor
out
decb
add
jge
jmp
imul
ljmp
out
mov
insb
push
jb
in
lods
std
adc
push
mov
jmp
js
push
aas
inc
in
movsb
out
in
mov
xor
popf
lods
notl
sti
lds
adc
out
popf
movsb
out
adc
sbb
out
pop
lahf
cltd
pop
clc
cmp
int
mov
jns
mov
mov
in
sahf
aas
add
or
push
dec
data16
cmp
push
cld
sbb
data16
dec
push
add
popf
test
in
decl
dec
aam
sub
test
adc
movsb
arpl
mov
inc
call
jb
cmp
inc
sbb
add
in
je
sbb
add
loopne
sarb
repz
andl
in
push
jo
xchg
pusha
xchg
push
call
pop
mov
test
push
inc
aam
push
mov
push
inc
iret
push
call
enter
das
bound
test
adc
add
inc
pop
pop
and
adc
mov
in
out
and
jo
and
and
aam
or
pusha
mov
add
test
sbb
loopne
cmpsl
popa
adc
loop
stos
ss
add
mov
cmp
ljmp
xor
mov
or
mov
xchg
push
lret
add
ja
test
popf
xchg
mov
loop
jbe
mov
mov
or
mov
pop
mov
add
sbb
pop
xchg
xor
sub
frstor
dec
mov
xchg
fildll
stos
sbb
mov
sub
xchg
xchg
scas
mov
cmp
mov
out
add
inc
out
mov
push
jl
mov
clc
fisttpll
js
fsubrl
rol
xchg
in
mov
ja
scas
add
sti
popf
add
push
in
xchg
fdivrl
cmp
je
mov
loop
fs
mov
lock
aas
pop
in
adc
std
dec
popa
mov
jmp
cmpxchg
sbb
shlb
cld
mov
mov
or
pop
pop
add
bnd
outsb
push
inc
call
repz
lahf
test
push
in
lcall
data16
push
data16
scas
lret
sbb
mov
decl
in
mov
push
in
lea
jmp
aad
push
add
test
sete
add
pushf
push
clc
or
adc
push
sbb
call
in
push
iret
adc
ljmp
sbb
push
cmp
out
mov
jmp
pop
in
jne
xlat
mov
adc
adc
mov
sbb
aad
adc
repz
mov
lahf
mov
inc
in
xchg
addl
stos
push
add
inc
test
addr16
call
imul
std
inc
mov
inc
pop
and
aaa
lret
add
sbbl
call
imul
push
stc
inc
xor
sbb
add
inc
jge
mov
lock
mov
stc
xchg
inc
fiaddl
lret
mov
cmp
xchg
cmp
scas
in
xchg
fnstsw
daa
xchg
lahf
scas
cmc
xchg
add
scas
lds
ja
jle
outsl
scas
lods
inc
add
adc
push
mov
mov
jge
popa
mov
aas
scas
xchg
jg
scas
or
repz
cmp
rcrl
in
adc
add
mov
jo
stc
add
loop
jmp
jne
js
dec
and
out
loope
inc
push
pop
stos
in
jl
mov
pop
sub
js
stc
xlat
jb
adc
stc
push
jmp
sbb
pop
ret
je
mov
mov
int
in
scas
fisubl
sahf
loopne
sti
cltd
ljmp
and
mov
jmp
add
xchg
shlb
in
jo
in
loopne
adc
sub
push
jmp
scas
push
in
fsubl
inc
leave
dec
rcl
xchg
test
in
jmp
loope
inc
cltd
and
lcall
in
jbe
es
and
call
adc
xchg
pop
nop
mov
mov
pop
and
in
ss
inc
ficoml
sti
mull
pop
adc
adc
out
in
jne
dec
in
out
in
mov
push
in
push
lret
bound
jmp
pop
in
jne
add
shll
pop
test
negl
or
fcom
movsl
jmp
jmp
in
repz
call
iret
or
mov
movsb
rcrl
ljmp
stos
popf
mov
stos
popf
call
les
idivl
mov
pushf
fwait
popf
pushl
insl
popf
jmp
jne
adcb
adc
xor
pop
xchg
les
push
push
pop
or
sbb
cmpsl
jmp
xor
mov
int
jo
or
sbb
fisttpll
dec
and
mov
push
ss
stos
push
sbb
sti
mov
fwait
xchg
lods
cmp
inc
jo
xchg
xlat
sti
push
mov
xor
in
lea
push
out
sbb
les
xor
fcmovbe
and
fnstsw
sti
mov
hlt
xchg
xor
lea
iret
mov
inc
jo
out
decl
push
test
jo
adc
outsb
repnz
jmp
jae
es
sbb
adc
xchg
in
inc
jmp
adc
mov
std
stos
inc
mov
inc
stos
in
push
add
idivl
sbb
stos
jns
jnp
and
xor
jp
jae
xchg
rcll
addr16
mov
mov
inc
sbb
das
sbb
lcall
sahf
in
mov
jns
mov
and
pop
fidivrs
fldenv
call
popa
cmp
dec
std
aad
push
sbb
and
rcrb
call
decl
imul
jne
dec
xor
sahf
push
sti
mov
and
in
outsb
cltd
and
push
add
adc
or
aad
pop
sbb
add
rcrl
call
cmp
jmp
push
dec
sti
cs
sti
cmp
jo
pushl
pop
data16
stos
pushl
daa
push
das
into
out
out
das
popa
cwtl
decl
sbb
movsb
incl
repnz
jo
insl
in
repz
pop
mov
jp
out
mov
mov
xchg
jmp
mov
cwtl
call
imul
adc
mov
add
jmp
std
ret
push
lea
outsl
setg
insl
dec
cltd
incl
lret
dec
jno,pt
push
dec
out
out
out
loop
mov
cmp
test
or
inc
jo
xorb
cs
mov
jne
mov
inc
jmp
das
das
out
dec
repnz
mov
cmpsl
mov
lds
or
ret
and
xchg
sub
mov
mov
xchg
adc
vmread
inc
add
inc
or
cmp
mov
fmul
repz
cmp
dec
xchg
jg
cli
mov
je
jge
mov
jp
inc
and
mov
arpl
sub
xchg
jmp
rcrb
pop
jmp
movsl
in
push
stc
sub
inc
xor
jp
ret
and
roll
repnz
jmp
xor
cli
mov
cmpsl
in
mov
or
in
push
jle
jp
ret
and
adcl
in
xchg
adc
loop
adc
cmpsb
in
loop
das
add
add
jae
push
pop
in
jne
dec
in
push
pop
jns
popa
jmp
inc
sbb
imul
or
xchg
call
imul
in
call
xchg
push
add
leave
adc
leave
popa
sti
fnstcw
in
or
push
in
jne
pop
data16
out
incl
inc
ret
pushl
adc
xchg
push
add
cmp
adc
mov
test
jo
add
pop
mov
pop
push
fmuls
movl
jo
xchg
or
cld
mov
pop
add
or
decl
sub
hlt
sbb
cmpsb
cmp
cld
testl
adc
inc
xor
mov
cmp
sti
xchg
leave
mov
adc
ficoms
pushl
mov
imul
loop
lret
add
negl
cs
fwait
addr16
xchg
daa
not
mov
daa
clc
push
dec
test
sbb
idivl
add
cs
fwait
cmc
xchg
xchg
pop
push
test
movsb
adc
jo
stc
js
mov
inc
mov
mov
push
push
sbb
inc
add
ja
mov
pop
xor
add
jbe
mov
sbb
add
gs
and
lds
repnz
psrad
repnz
adc
out
rol
in
mov
jnp
sub
adc
pop
inc
adc
cmp
in
dec
adc
jae
loop
mov
jmp
pop
mov
sahf
pop
xor
mov
cmc
mov
rolb
outsl
fucomi
mov
in
ss
pop
xchg
pop
out
mov
push
jmp
cmc
mov
adc
sbbb
inc
mov
or
adc
decl
cmpsb
mov
addr16
push
xor
cs
inc
orl
xor
or
add
mov
adc
adc
data16
paddsw
jle
leave
into
mov
test
in
ljmp
cmpsb
mov
lods
or
add
test
xor
outsl
in
in
incl
pushl
xchg
mov
adc
out
xchg
les
adc
ja
add
push
pop
nop
jnp
jmp
jmp
fnstsw
xor
inc
pop
inc
dec
jg
es
nop
mov
std
add
xchg
jmp
push
jg
sbb
push
jmp
xchg
loopne
nop
lcall
incb
fbstp
stc
inc
insb
push
in
add
xor
xchg
ljmp
hlt
inc
cli
add
std
add
jo
cld
mov
loope
add
shrl
outsb
mov
stos
sbbb
jae
mov
lods
addb
add
loop
mov
mov
mov
mov
adc
and
jmp
sarl
add
pusha
jno
jo
mov
nop
in
xchg
je
out
xor
outsl
mov
fistps
push
sbbb
add
jo
adc
in
mov
lahf
je
arpl
adc
or
jmp
pop
or
fs
xor
pop
jl
dec
fdiv
sahf
in
pushf
in
in
into
les
icebp
or
shll
mov
and
je
sti
or
lahf
in
cmp
lahf
pop
mov
out
mov
adc
pop
and
insb
or
out
cli
xchg
repnz
in
rcrl
push
jmp
or
cli
fwait
xchg
push
mov
jmp
mov
popa
in
jne
popa
data16
fcos
jbe
roll
mov
in
icebp
loop
out
inc
popa
data16
xchg
adc
dec
adc
call
sub
add
aam
add
insl
push
cld
add
adc
jne
arpl
test
mov
in
incl
and
andb
xchg
jne
or
jo
xchg
lcall
js
mov
xchg
adc
daa
xchg
cld
int
pushl
cld
jo
lahf
inc
adcb
or
add
test
jno
adc
std
mov
mov
shlb
dec
pop
ds
call
pop
cmovae
inc
xor
mov
insl
jne
mov
sahf
test
jl
decl
ds
or
lcall
loope
mov
out
cli
add
data16
jle
pushf
mov
add
dec
inc
mov
cmp
add
jo
xchg
xchg
outsb
mov
xor
loop
push
fabs
stc
or
insl
outsl
inc
pushfw
int
mov
sub
push
iret
cmp
push
jae
jo
mov
xchg
frstor
cmp
stc
gs
jge
pushf
adc
and
jle
out
addl
jbe
inc
cmpl
adc
mov
inc
dec
enter
inc
fwait
in
push
cmpsl
in
ss
shrl
cs
inc
es
mov
jae
xchg
sub
ja
push
fwait
in
xor
pushf
in
testb
mov
jae
cmpsb
mov
in
cmpsb
in
stos
mov
ljmp
sahf
in
xor
mov
cmpsb
mov
lcall
insl
adc
jae
fildl
xor
pop
add
insb
and
scas
in
jne
push
xchg
dec
sbb
in
push
ds
call
flds
inc
jmp
out
jae
sbb
in
push
mov
inc
cltd
sbb
jle
je
mov
xchg
adc
stos
sbb
incl
xlat
mov
jmp
sub
push
inc
push
mov
data16
aad
decb
outsl
incl
popa
outsl
leave
xor
in
lock
lcall
outsl
jne
xor
enter
inc
int3
add
cltd
cwtl
dec
adc
dec
rcrb
inc
jo
js
or
push
mov
decl
pop
jnp
lea
adc
push
sbb
inc
xchg
pop
pop
pop
lcall
and
sbb
mov
push
pop
loop
dec
pop
imul
popf
loop
imul
lea
testb
cltd
add
decl
loop
and
stos
out
iret
or
push
dec
jnp
or
icebp
outsl
mov
jns
mov
and
jp
ljmp
rcl
mov
imul
jnp
mov
or
jp
or
xor
ja
idivb
cwtl
cwtl
inc
or
fs
inc
insb
loop
sbb
xchg
lcall
in
jmp
jl
flds
ja
repnz
jp
fisubrl
dec
arpl
gs
in
aam
xchg
data16
dec
or
in
inc
outsb
mov
out
shrl
push
jmp
lds
in
push
leave
xor
xchg
jnp
mov
cli
xchg
jnp
and
negb
sti
mov
xchg
in
push
jae
sti
lahf
cmp
data16
insb
in
into
leave
or
add
movsb
in
jl
sti
sbb
aam
in
push
pop
sbb
add
data16
icebp
sbb
imulb
rcll
or
pop
inc
fstps
data16
adc
pushl
sbb
or
cs
sbb
jne
mov
jne
or
cs
mov
cli
rolb
in
in
repnz
call
jbe
add
xchg
inc
sbb
incl
nop
sbb
add
in
jne
jg
pop
xor
fcomp
mov
popf
stos
push
push
imull
popf
xchg
js
imul
jnp
mov
std
sti
out
xchg
sbb
pop
add
decl
adc
push
mov
xor
mov
les
pushl
addps
cmpsl
ret
add
lahf
in
repz
in
std
cmpb
fsubrl
sub
dec
adc
pop
sar
pop
loop
orb
shll
push
sarb
add
dec
call
jg
and
jbe
ljmp
push
sarb
add
insb
enter
scas
jg
and
jbe
ljmp
jecxz
mov
or
iret
xchg
jo
inc
ljmp
mov
push
call
jg
and
jbe
ljmp
xchg
iret
mov
les
adc
or
in
ficomps
and
insb
or
cld
mov
push
jmp
jge
in
scas
or
scas
fildl
xor
in
faddl
or
in
jle
mov
test
jae
xchg
pop
rcr
inc
dec
xchg
in
rcll
jmp
jae
adc
jae
in
mov
mov
and
xchg
jnp
inc
and
xor
loope
add
pop
sar
pop
or
in
xlat
rclb
mov
out
ljmp
xchg
xor
jp
sub
adc
mov
in
pushl
and
xchg
add
ficoms
jl
or
push
add
xchg
add
pop
in
jne
push
jbe
outsb
or
in
addr16
loope
add
or
aam
add
clc
sbb
sbb
jns
addr16
ficompl
std
push
mov
sbb
pop
call
aas
aaa
imul
xchg
js
xor
addr16
xor
xchg
jge
jnp
bound
js
or
or
imul
out
pusha
cmpsb
push
out
sbb
sbb
enter
iret
mov
xor
jnp
jne
and
leave
add
jnp
mov
mov
js
xchg
loop
mov
xchg
or
add
into
imul
testl
in
adc
dec
xchg
cmc
pop
loop
int
cmp
jae
faddp
push
cmp
rcr
aad
add
jp
setno
aam
pop
repnz
mov
mov
mov
pusha
rep
lcall
push
jb
adc
mov
nop
arpl
mov
notb
ss
fsubr
hlt
out
mov
ficompl
add
adc
imul
shrb
hlt
mov
sub
in
push
pusha
in
aad
add
in
jo
cmp
xor
idivl
fsts
lock
aaa
jle
fucomi
mov
cmp
push
inc
out
or
xchg
jae
popl
mov
adc
or
push
xchg
sbbb
jmp
xchg
sub
ret
in
jne
adc
or
adc
inc
xchg
adc
sub
jmp
xchg
loopne
pushf
mov
je
adc
xorl
cld
lcall
pusha
fistl
in
jmp
adc
out
cld
lcall
and
adc
fsubrl
in
jne
sub
inc
adc
adc
jo
adc
scas
dec
call
decl
xchg
push
call
incl
mov
jl
xchg
mov
js
jge
popa
call
pusha
call
inc
aaa
jae
insl
ds
aaa
aaa
jnp
jne
arpl
cmp
xor
lds
dec
subl
add
iret
inc
mov
sar
push
cmp
inc
jo
test
xor
mov
mov
jecxz
ret
mov
mov
mov
sbb
stc
pusha
out
lret
loop
jmp
cli
fisttpl
jp
ret
es
loop
ja
and
jo
fsubrp
cmc
ja
mov
pop
jo
mov
rcl
add
add
lds
add
inc
and
fstpt
cmp
int3
in
jl
pop
loop
insl
mov
aam
push
out
popf
retw
filds
loop
pop
imul
jae
shrl
clc
adc
jae
adc
jae
push
cmp
pop
in
mov
jns
sti
push
loop
adc
mov
adc
sub
loop
xor
in
jl
test
mov
add
mov
xchg
aam
sahf
pop
xchg
mov
fcoms
data16
xchg
in
cmpsb
xchg
mov
sbbl
imul
pop
daa
ja
leave
ret
inc
mov
fistpll
push
mov
cltd
es
jmp
lcall
pop
mov
push
std
jmp
jecxz
jp
lcall
push
add
xchg
sub
mov
mov
or
jae
lcall
cs
ret
push
std
js
mov
cmp
cmpsl
cltd
xor
jmp
test
push
add
or
lods
je
scas
pop
pushl
out
out
pop
jle
fcomp
push
fucomip
push
push
push
xchg
and
mov
add
dec
data16
xor
add
and
pop
mov
jl
xchg
and
ret
mov
push
inc
jo
imul
jns
add
nop
call
imul
jne
jecxz
cld
inc
orl
pop
mov
pop
sbb
arpl
daa
ss
movsl
xchg
dec
jo
push
jg
insb
cmp
pop
sbb
sbb
mov
cld
xlat
add
mov
pop
repz
data16
cld
stc
fldcw
iret
sti
xlat
fstpt
insb
mov
mov
sbb
loop
cs
mov
stc
testl
loop
pop
cli
jb
add
mov
jp
aas
mov
mov
ret
std
cmc
outsl
jp
arpl
mov
jnp
mov
fdivr
int
add
jp
xchg
add
loopne
pushf
jmp
fildll
jae
lods
adc
int
jmp
dec
mov
xchg
jb
dec
mov
call
rorb
pop
dec
mov
pop
or
adc
sub
sbb
dec
in
ss
loop
jb
cli
adc
sbb
sub
fsubr
jl
xor
add
xchg
jae
lods
xorl
loopne
mov
lods
ficoml
add
lcall
dec
jmp
fnstenv
push
cmp
repnz
std
inc
push
notb
jmp
add
rorb
fnstenv
out
push
movsl
adc
int3
mov
add
cld
jmp
int3
js
rcrl
add
jecxz
xor
popa
and
incl
mov
add
lods
push
push
ja
call
jno
sar
push
test
addr16
push
add
dec
xor
jns
xor
lgdtl
je
into
add
mov
out
pop
jp
fsub
dec
fcomip
push
push
push
mov
clc
cmp
mov
loop
inc
dec
jnp
push
dec
ds
jns
jo
test
cmp
testl
les
in
mov
dec
pop
call
decl
in
inc
aaa
xchg
cwtl
dec
movnti
decb
mov
aam
in
mov
mov
out
add
sub
fiaddl
pop
fisubl
xchg
out
outsl
jp
imul
pslld
test
dec
rorl
imul
lds
fwait
cmp
xchg
jno
jg
out
jno
or
mov
pop
adc
in
sarb
loop
das
sbb
xor
push
sub
inc
int3
popl
sti
xchg
sub
cmp
jge
les
loop
pop
int3
mov
in
adc
jl
mov
sti
or
adc
jbe
sub
lods
andl
pusha
scas
dec
pop
pop
push
inc
mov
jl
ss
sbb
xchg
call
jg
xlat
sub
aam
jmp
inc
sub
ret
inc
mov
mov
add
std
and
out
and
call
and
pop
sti
gs
xchg
sbb
xchg
adc
dec
and
push
and
out
test
push
add
es
leave
cmpsl
adc
leave
pop
sti
jmp
add
pop
push
cs
sbb
aam
pop
inc
xchg
xorl
in
decl
sbb
add
je
jo
xlat
lcall
call
cmp
inc
xorl
jne
mov
mov
sbb
pop
add
pop
iret
ljmp
dec
pusha
pushl
jbe
jno
inc
mov
jo
cld
pop
add
loop
call
pop
cld
sti
iret
call
ljmp
adc
mov
jle
cmpsl
std
stos
sti
inc
adc
or
jns
lret
adc
mov
insl
fdivs
stc
add
sub
add
loop
cmp
jbe
std
push
addb
jbe
inc
adc
cmp
cmc
rolb
pop
cld
outsl
cli
add
imul
add
stos
sbb
mov
out
subl
outsl
out
popf
roll
jns
iret
andl
enter
mov
cli
mov
dec
insb
lahf
sbbl
cwtl
fwait
cmp
adc
in
cs
xorl
jb
push
aam
es
adc
add
mov
roll
and
fxch
sub
sub
test
sbbl
pop
pop
and
cmpsb
or
sahf
push
andl
adc
data16
sbbl
pop
mov
in
xchg
cmp
in
push
adc
hlt
add
and
and
sbb
inc
lret
testl
and
xchg
hlt
sub
icebp
shlb
hlt
sbb
int3
and
call
jnp
lcall
imul
mov
sbb
in
jecxz
push
and
data16
xchg
stos
jmp
add
in
dec
add
mov
addl
jl
in
push
add
or
test
mov
sbb
ds
aam
jno
jg
outsl
divl
jo
js
xchg
mov
cmp
jo
push
push
sbb
sahf
and
inc
mov
idivl
js
lcall
dec
jmp
xchg
cmpb
cwtl
jb
sbb
test
pop
cmp
add
jb
out
sbb
jg
sbb
push
js
into
addr16
cmp
mov
leave
mov
adc
loope
test
inc
xlat
outsl
mov
jle
mov
and
out
xor
shrl
cmpsb
and
pusha
popf
retw
ret
mov
inc
aad
jmp
loop
mov
ss
icebp
imul
pushf
cmc
pusha
sbb
mov
jo
pop
rorb
sbb
and
pusha
inc
adc
testl
sub
jno
xchg
mov
into
mul
imul
pusha
enter
push
jge
adc
in
jge,pt
push
mov
mov
adc
sub
inc
bound
arpl
or
add
jns
push
inc
jmp
push
jmp
jae
shr
mulb
push
icebp
jb
adc
scas
daa
out
ja
adc
or
inc
je
adc
inc
insb
jmp
adc
xor
jge
movsl
push
out
jmp
imul
push
add
fwait
sbb
inc
pop
in
decl
sbb
incl
ds
call
adc
imull
sbb
in
push
mov
mov
in
jle
xchg
sub
loopne
inc
mov
or
ds
addr16
push
add
pop
jecxz
push
sbb
push
add
shrl
sbb
push
mov
mov
adc
xchg
sub
jo
dec
stc
push
jo
fs
call
push
inc
jo
mov
cmpsl
or
lcall
aas
inc
jo
jne
xchg
adc
test
mov
rolb
mov
int3
or
sbb
jmp
in
nop
mov
jo
cli
xor
inc
ljmp
mov
pop
repz
jg
pop
pushf
pop
je
and
add
pop
imul
xchg
add
add
dec
out
mov
call
fistpll
insb
fistpll
pop
inc
ljmp
add
jp
or
jp
cmpsl
jp
pop
sbb
jp
pop
mov
jp
or
jp
push
mov
xor
push
dec
jp
and
pop
add
mov
cwtl
das
jp
xchg
adc
pop
or
mov
pop
jp
aas
pop
jp
imul
pop
ljmp
stos
push
idivl
mov
loope
testb
cmpsb
push
jae
sahf
xor
push
sub
in
and
mov
sbb
in
hlt
pop
mov
jae
fldcw
pcmpgtw
pop
mov
in
out
sbb
xor
inc
add
pop
out
shll
mov
jmp
mov
out
out
push
loope,pt
ret
jmp
in
and
test
idiv
push
out
cltd
out
push
out
pop
cmp
insb
mov
pusha
je
pop
test
or
adc
dec
push
adc
ftst
roll
sbb
in
imul
imul
ds
xchg
in
lods
adc
jmp
ficoms
or
pop
jmp
mov
cmp
sbb
and
scas
pushl
imul
call
pop
in
jmp
popa
jecxz
sbb
icebp
and
sbb
in
in
idivl
inc
sbb
test
and
push
idivb
div
cmp
add
loop
dec
cltd
mov
fcomip
xchg
in
fistps
push
loope
xor
dec
pushl
mov
in
dec
mov
adc
xchg
xchg
adc
fcom
incl
and
in
rcl
call
cmp
add
in
lods
inc
decl
clc
and
adc
add
js
test
adc
add
les
imul
sarb
xor
ja
add
fcoml
pop
mov
divl
insb
outsb
cmp
inc
fs
insb
bound
lea
pop
cmpsb
push
jbe
add
data16
outsb
insl
pop
inc
or
mov
lods
jne
xor
push
in
jbe
mov
cltd
sub
pusha
addr16
add
pop
inc
add
jo
js
inc
outsb
or
mov
stc
test
mov
pop
aaa
jecxz
jg
loop
jmp
mov
pop
mov
pushf
insl
in
into
cwtl
out
sbb
mov
in
mov
dec
jne
xor
mov
pop
cmp
push
das
insl
in
xchg
sub
sbb
sbb
iret
jbe
jne
cld
jnp
jno
cmp
pushf
add
insl
in
pop
sub
sbb
das
in
dec
hlt
aaa
lret
sbb
mov
pusha
scas
sbb
jne
in
rcll
push
test
jmp
jnp
and
clc
add
in
movsb
jmp
in
jmp
decl
push
cmpl
xor
stos
ljmp
or
in
call
push
push
repz
push
or
jecxz
out
add
in
mov
and
movsb
decl
or
in
ljmp
or
xchg
add
xor
push
mov
jmp
cli
insl
mov
in
mov
jnp
jo
xlat
ds
sbb
mov
inc
ljmp
out
inc
lcall
test
xor
xchg
les
xor
inc
in
mov
sbb
movsl
std
ds
jo
insl
xchg
sbb
addr16
movsl
add
sub
add
shl
mov
adc
sbb
cli
in
mov
pop
testl
and
shl
jg
jb
adc
loope
call
mov
pop
adc
inc
sub
insl
add
imul
ljmp
imul
mov
loop
popl
imul
imull
insl
sub
mov
jge
push
xlat
pop
cli
jmp
stos
cmp
sub
dec
mov
enter
clc
dec
push
cmpsl
push
jge
xchg
cli
and
subb
jg
jne
add
loop
mov
in
jp
lds
jmp
jae
cmpsb
sbb
data16
lds
mov
div
addr16
idivb
push
jmp
movsb
jno
adc
mov
test
cmp
sarb
and
in
in
mov
addr16
sahf
and
clc
jecxz
addr16
jle
inc
jno
jmp
pop
cmp
outsb
out
addr16
pop
and
inc
rcr
mov
jecxz
sbb
in
add
inc
pop
std
les
sbb
push
in
decl
sbb
sbb
aam
push
in
jmp
scas
xchg
aam
adc
adc
movsb
call
imul
mov
fisttpl
popa
xchg
int3
push
adc
div
push
adc
in
or
mov
andl
push
in
adc
es
in
sbb
jecxz
es
add
xchg
mov
jo
int
and
jp
popa
repz
dec
leave
push
je
push
push
add
inc
jne
loope
mov
jmp
inc
incl
pop
out
out
insb
lods
aas
decl
dec
dec
testl
mov
inc
mov
xor
out
jae
fistpll
inc
jne
mov
inc
mov
pop
inc
mov
or
scas
scas
outsl
mull
popa
pop
mov
add
xchg
loop
push
xchg
cwtl
jg
inc
cwtl
test
push
pop
movsl
outsl
push
outsl
addr16
outsl
and
cmp
pop
inc
outsl
add
std
jno
push
das
jp
cwtl
daa
outsl
in
daa
jns
push
pop
outsl
std
xlat
or
mov
mov
jge
arpl
add
hlt
loope
es
push
jmp
outsb
test
mov
loop
xlat
ja
out
sub
cmpsl
adc
add
mov
jmp
test
outsl
es
and
inc
lea
in
dec
insl
por
out
jb
sti
ja
negl
inc
mov
in
mov
jb
pushf
cmp
in
jl
jp
xor
insl
jnp
jns
adc
es
out
insl
in
fisubs
push
pop
hlt
test
outsl
loop
jb
popa
xlat
mov
insl
jp
and
sbb
sahf
cmp
out
add
dec
lret
xchg
pop
out
icebp
out
in
xchg
imul
jmp
pop
mov
adc
ret
inc
mov
loope
adc
push
in
inc
movsb
call
mov
sbb
jmp
and
mov
add
fldt
inc
sbb
out
xor
mov
mov
je
mov
cmp
pop
in
decl
pop
jnp
jo
xlat
aas
pop
lret
nop
aas
lcall
repz
jne
sti
leave
pop
cwtl
test
jg
push
add
cs
mov
lods
leave
pop
dec
cs
dec
add
sti
sti
mov
mov
imul
je
push
scas
aaa
mov
movsl
out
clc
push
add
lret
xchg
cmp
decl
push
fcoms
into
fistps
out
push
pop
fsub
lea
cs
les
and
mov
insl
push
stos
cld
fadd
imul
xchg
loope
and
dec
dec
pop
or
inc
add
jp
pop
ds
lret
icebp
push
cmc
icebp
pop
inc
xor
fstpt
imul
das
add
fdivs
sub
pop
imul
or
sti
bswap
mov
cwtl
mov
pusha
icebp
movsl
mov
fistl
lods
xlat
imul
idivl
nop
jmp
out
inc
adc
jae
push
xchg
add
jmp
insl
loop
add
add
je
outsb
inc
insb
out
jne
push
mov
imul
jae
sarb
jae
jp
pop
and
push
pop
fdivrp
and
push
mov
mov
adc
xor
imul
out
jp
lcall
sub
insb
imul
xchg
sub
push
in
mov
call
mov
addr16
push
add
push
jecxz
notb
in
xor
icebp
adc
in
push
push
in
push
lea
sbb
jmp
leave
push
in
pushl
in
aad
push
in
mov
or
xchg
fcompl
in
push
icebp
call
cmpsb
lock
sbb
pusha
cmp
or
sbb
popf
ja
mov
jo
ret
movntq
out
addr16
daa
pop
incl
fdivs
jnp
ret
add
mov
push
test
jnp
add
sbb
push
je
cld
cltd
in
jg
push
add
xchg
mov
jo
shll
jns
mov
sub
incl
dec
out
testl
clc
scas
aaa
leave
push
mov
leave
push
jmp
dec
call
call
scas
jb
pop
jne
loope
scas
jmp
hlt
dec
mov
addr16
cld
iret
push
insb
dec
fbld
pop
fbld
pop
into
xor
push
mov
push
lea
jp
xchg
lahf
addr16
nop
mov
test
dec
add
clc
jae
ja
movl
cltd
cmp
pop
push
popa
push
repz
fisttpll
enter
push
pop
push
addr16
outsl
push
ficoml
icebp
sbb
in
iret
ja
adc
ljmp
cmp
jbe
movsl
cmp
adc
data16
sub
mov
cli
stc
lods
icebp
add
and
sahf
mov
addr16
mov
jle
dec
cmp
stos
jo
inc
bound
popa
xlat
inc
and
insb
das
push
push
aaa
adc
mov
insb
jmp
xchg
adc
jae
push
and
jmp
jno
adc
add
js
pushf
and
out
push
sbb
add
mov
fabs
pop
rolb
nop
enter
or
push
add
xchg
sbb
es
in
jns
ret
adc
inc
call
and
loop
push
sbb
fisttpll
in
lea
jecxz
push
xor
mov
in
scas
sbb
test
dec
in
call
in
testl
sbb
cmpsb
lock
pop
lcall
mov
jnp
mov
in
fiadds
jmp
push
out
dec
inc
mul
mov
loope
dec
jg
iret
icebp
xchg
call
cmc
push
pop
pushl
mov
pop
lcall
mov
push
jnp
ret
sbb
mov
divl
adc
add
popl
in
sbb
sub
and
push
je
dec
dec
cmp
mov
in
loop
dec
das
fs
jo
js
adc
sbb
or
in
pop
jecxz
shl
and
cli
iret
pop
clc
stc
js
mov
inc
fists
fstl
fcoms
xchg
xlat
mov
sub
pop
add
jae
inc
add
arpl
inc
xchg
sti
xchg
sahf
cs
ja
pop
arpl
fstp
push
lea
pop
inc
sbb
arpl
aas
arpl
ss
sbb
aaa
in
es
repz
scas
arpl
pushf
sbb
cmp
scas
imul
stos
inc
mov
std
movsl
arpl
shll
in
fisubrs
arpl
popa
add
in
pushl
mov
xor
jns
cmpsl
xor
jp
adc
loop
stos
xchg
bound
sub
jne
in
push
cmp
sbb
data16
pop
sti
cld
popa
in
pusha
pop
pop
in
aam
popa
data16
push
test
xchg
je
fstl
add
popf
inc
jge
in
jne
mov
pop
rolb
cld
jp
sub
hlt
mov
dec
scas
jmp
aad
or
cmpsb
gs
mov
call
mov
jl
cli
cmc
inc
cmpsb
jmp
fistpl
push
adc
in
jne
mov
pop
sarb
lret
pop
in
mov
hlt
push
imul
sub
adc
add
push
call
jmp
pop
push
jne
add
testl
fsubr
sbb
adc
loope
push
inc
push
jne
xor
mov
mov
cmp
dec
cmp
rcl
out
out
in
inc
jo
aas
push
xor
std
adc
mov
push
jo
rclb
incl
fisttps
add
ret
push
xorb
stos
mov
loop
adc
dec
mov
push
pusha
pop
mov
inc
loope
cmp
sub
inc
cmc
movsl
or
pop
mov
cli
loope
and
push
xchg
nop
add
dec
outsl
out
arpl
fcmovne
iret
sti
xor
fdivrl
pop
inc
add
cmpsb
loop
add
loop
clc
repz
add
in
inc
xchg
jmp
mov
lret
xor
or
xchg
adc
mov
outsb
sub
cli
dec
mov
in
push
ret
push
add
pop
in
repnz
xor
jmp
mov
jnp
and
adc
mov
inc
push
enter
mov
in
adc
mov
test
cli
push
add
repnz
xor
jmp
xor
fcmove
mov
mov
scas
out
cli
push
pop
in
xchg
loope
in
xchg
movb
push
add
add
jmp
hlt
dec
test
jmp
push
push
add
or
mov
xchg
adc
ljmp
jle
gs
pop
xchg
adc
add
int3
jmp
pusha
movsb
push
add
outsb
incl
outsb
insl
push
cld
fldenv
sbb
xor
mov
adc
push
and
adc
xchg
sbb
pop
leave
loope
add
out
add
out
inc
add
sbb
pushl
push
jne
insb
movsl
sti
cwtl
pop
scas
jg
push
je
bound
lock
mov
incl
in
cmp
mov
push
sti
sbb
jmp
adc
mov
sbb
jmp
rep
pop
cld
mov
inc
jo
fs
push
incl
push
sub
cmc
out
jmp
mov
push
jge
test
xor
test
fwait
sub
sbb
push
imul
mov
add
dec
jp
xchg
mov
or
adc
test
stc
ds
pop
cmovs
xchg
aas
dec
push
sub
pop
push
stos
aas
les
and
daa
in
stos
mov
aaa
subps
or
adc
xorb
gs
popf
fistps
mov
pop
xchg
add
pop
fldl
cmp
inc
add
dec
insb
ds
mov
scas
xchg
lcall
fs
lret
inc
dec
pop
in
push
pop
push
in
xchg
aad
xchg
sub
divl
pop
in
fsubrl
scas
xchg
xchg
pop
in
pushf
xchg
push
in
dec
xchg
sbb
mov
jbe,pt
iret
outsb
pop
in
mov
dec
mov
pop
pop
in
push
dec
push
in
push
pop
mov
cmpsb
or
in
adc
xchg
imulb
pop
sti
jge
pop
in
ficomps
in
lea
addb
jecxz
testb
mov
adc
call
xchg
sbb
jl
cli
cmp
sbb
in
testb
inc
loope
inc
pop
in
jne
push
lret
jns
out
ret
inc
mov
and
js
jbe
adc
in
int
call
pop
push
add
in
add
pmaxsw
jbe
xchg
cmp
in
xor
nop
adc
lods
sbb
pushl
mov
call
test
aam
xorl
movsl
seta
add
or
push
add
pop
test
scas
add
adc
lods
iret
cs
jo
mov
inc
cmp
popf
test
jmp
xchg
sub
mov
or
jo
and
mov
das
jne
repz
sarb
push
inc
loop
testb
int
dec
jb
mov
push
adc
add
pop
mov
pop
pop
lea
xchg
stc
stos
scas
sbb
add
mov
outsl
pop
gs
dec
ljmp
push
dec
cmp
loop
imul
pop
cmpsl
pop
sbb
ja
daa
pop
xor
std
mov
add
add
cmp
int
sub
test
cmp
pop
adc
add
lret
lods
push
in
xchg
orl
mov
push
rcrl
in
iret
mov
push
nop
je
dec
in
scas
jae
sbb
inc
in
dec
loop
or
xchg
call
lahf
fs
xchg
mov
mov
jmp
and
cli
rcl
in
push
rolb
jp
data16
mov
cmpsb
inc
bound
cs
fdivrp
xchg
ds
dec
push
data16
jno
add
in
mov
adc
fiadds
jmp
into
into
imull
or
scas
sbb
mov
adc
inc
cwtl
mov
loopne
sbb
call
out
neg
sbb
imul
push
in
out
push
dec
test
in
adc
incl
shrl
ljmp
sbb
jmp
jmp
inc
or
outsb
sbb
mov
adc
pushl
sbb
pusha
xor
pushl
sub
jecxz
ja
dec
pop
ret
fisttpll
dec
dec
mov
call
stc
push
sub
repnz
pushl
dec
sub
and
std
lahf
test
push
addb
sub
ja
and
in
cmp
sub
xor
adc
scas
nop
les
push
test
aas
cs
mov
dec
adc
xor
lods
loop
add
stc
inc
lods
dec
add
add
loop
mov
in
std
aaa
inc
push
dec
cmp
into
int
add
and
lret
scas
sbbw
cmpsl
push
mov
ss
push
test
ja
mov
sub
gs
stc
adc
inc
mov
add
push
xor
push
pop
aaa
mov
push
sub
ds
sti
icebp
mov
xor
aas
int
add
test
adc
movsb
and
jmp
xor
jmp
imul
xchg
and
lret
mov
in
adc
or
data16
rcll
in
sub
jmp
je
add
jns
adc
insb
push
data16
loop
outsb
sahf
lret
xor
loop
push
add
cli
aas
add
in
add
out
cmp
or
leave
dec
push
in
push
cmp
jne
pop
out
stos
data16
rcr
je
mov
in
dec
xorl
push
and
sub
cs
jne
push
inc
int3
cmpsb
or
push
inc
sub
cs
jne
push
das
int3
or
jno
or
adc
or
in
imul
mov
pop
push
cld
and
jmp
inc
incb
push
mov
and
jmp
add
incl
repz
clc
push
ret
fisttpll
out
adc
dec
movsb
and
test
cmp
add
push
sub
data16
call
jmp
push
sar
mov
sub
loopne
jmp
jecxz
add
push
cmp
cmp
es
enter
jo
je
dec
cmp
imul
loop
jne
push
scas
or
test
xor
cmp
pop
push
sarb
mov
add
leave
push
add
and
mov
scas
outsl
cmp
add
push
adc
add
cmp
int
lea
and
or
sbb
push
movsl
sbb
mov
sbb
mov
add
dec
add
in
insb
mov
iret
dec
in
pusha
cmp
in
jmp
cmp
push
orl
or
dec
add
jmp
mov
dec
sbb
inc
dec
jnp
push
mov
data16
dec
in
push
mov
dec
jp
mov
push
in
out
xor
sub
clc
out
lods
popa
dec
in
call
inc
push
stos
ja
inc
jb
popa
xlat
xchg
cmp
fs
inc
mov
fucomip
add
insl
gs
or
in
inc
add
adc
adc
adc
dec
jecxz
inc
xchg
adc
add
insl
in
imul
bound
stc
popa
xchg
hlt
inc
adc
push
dec
mov
jmp
cli
aas
aad
adc
cltd
xchg
pop
jmp
add
cmp
adc
jno
mov
rorb
negl
cmp
lock
in
call
xor
jp
add
push
in
jo
and
arpl
test
dec
cmp
std
stos
sub
aas
lods
mov
ljmp
ret
xchg
call
fstpl
movsb
das
cwtl
cmp
out
jae
cmp
in
and
out
jbe
out
adc
decl
adc
push
fs
cmp
cmp
mov
sub
incl
mov
andb
repz
or
cmpsl
and
je
mov
add
cli
push
mov
dec
lea
outsl
dec
adc
jo
push
fwait
jb
cmp
xchg
xchg
cmp
jge
outsl
cmp
jbe
push
inc
xor
sbb
sbb
dec
sub
xor
xchg
sub
pop
dec
xor
sti
add
xchg
add
out
dec
inc
xor
dec
adc
das
xlat
cmpsb
loope
mov
cmc
sbb
sar
add
pop
scas
das
sbb
dec
lods
sti
xlat
aad
lock
daa
sub
push
sbb
in
cmp
jnp
pop
mov
sbb
cmp
adc
data16
dec
mov
sbb
test
in
dec
test
icebp
jae
xchg
inc
repz
xchg
push
mov
data16
pop
les
or
mov
cltd
mov
repz
fsubrp
xchg
jmp
lods
dec
inc
rcrl
jmp
es
cmp
fists
push
xor
sub
out
jno
fisttps
sbb
hlt
mov
movsb
cld
jmp
jns
in
jmp
mov
in
dec
mov
repz
in
pushl
adc
mov
jp
andb
call
mov
scas
call
dec
push
mov
ficoms
sar
inc
call
stc
je,pn
fldpi
lods
push
jns
or
xor
addr16
movsbl
or
sti
inc
jo
cmp
movl
add
inc
fs
notrack
incb
jg
sar
inc
mov
call
lcall
mov
mov
pop
adc
lcall
add
orl
jmp
or
in
cmp
incl
dec
cmp
movsl
pop
fcomps
cmp
mov
dec
inc
cld
xchg
pop
lcall
fdivrp
ljmp
sub
lahf
mov
sub
aad
test
loop
clc
daa
fnstenv
jno
stc
inc
lods
dec
cli
add
mov
add
stc
cltd
aaa
mov
mov
aaa
daa
dec
push
rcll
iret
push
sub
test
mov
mov
in
add
rol
out
xchg
enter
xlat
mov
push
std
pop
adc
orl
mov
dec
lcall
pop
mov
dec
mov
push
jmp
pop
dec
in
xor
inc
sahf
dec
dec
dec
lcall
dec
je
dec
mov
in
fwait
inc
in
imul
outsb
mov
push
addl
jae
inc
adc
dec
in
inc
dec
int
push
and
test
ss
inc
jns
cmpsb
sbb
fdivr
add
popa
iret
idivl
adc
jns
jl
pop
fsubrp
mov
adc
ljmp
fdivrp
sbb
cld
jmp
fnstenv
addl
add
dec
inc
adc
test
adc
lcall
sti
notl
mov
enter
roll
and
adc
mov
imull
cmp
dec
shl
idivl
cld
jmp
sbb
cld
cltd
test
mov
cmp
addr16
add
xchg
mov
jo
insb
mov
jo
adc
cmpsl
cmp
xor
adc
or
adc
into
xchg
jg
jl
jg
cmp
in
or
insl
cmp
and
pop
mov
incl
jnp
inc
mov
mov
movsl
cmp
fstl
and
pop
xchg
mov
decl
add
cmp
test
and
loop
sub
xrelease
xor
inc
cli
scas
jp
pop
push
filds
add
pusha
jg
dec
in
mov
cmp
std
sbb
les
xchg
inc
aad
xchg
dec
lods
sub
inc
addr16
jg
mov
bound
xchg
xor
xchg
and
inc
xchg
sub
cmp
outsb
sbb
jne
sbb
lcall
daa
inc
pop
sub
cmp
mov
cs
cmp
movsb
fwait
cmp
adc
inc
in
xchg
cmp
xchg
jae
fldcw
mov
popa
xlat
in
aam
jp
push
iret
sbb
addr16
sbb
or
push
seta
lods
inc
in
cmp
cmp
lods
dec
inc
jnp
pop
mov
adc
xchg
int
orl
out
jle
fdivr
xchg
jmp
ficoms
mov
pusha
inc
in
push
cli
inc
jp
dec
int
add
lds
xor
or
xchg
notl
inc
jle
leave
dec
lods
je
cmp
add
fbld
loope
sub
lret
cld
jmp
rcl
inc
das
je
mov
lods
push
add
sahf
jmp
mov
cld
gs
xchg
adc
mov
jmp
mov
incb
arpl
jmp
inc
out
popf
cld
cltd
inc
lds
inc
mov
in
addr16
stc
inc
jo
mov
incl
add
sti
incl
xor
mov
rolb
xorl
fsubl
out
pop
adc
imul
test
add
adc
sub
cmp
decl
cmp
jl
arpl
shlb
pop
fistpll
call
jnp
mov
add
pop
sub
loop
xor
inc
dec
aam
adc
sbb
pop
and
add
inc
sub
and
out
inc
addr16
cmp
jmp
sarb
and
xchg
sub
sbb
xor
out
rorl
inc
lods
jp
dec
lods
and
int3
stc
fwait
ds
cmp
ja
sub
inc
test
dec
inc
arpl
cmp
add
loop
add
jecxz
dec
inc
in
aam
dec
testb
cmp
inc
jmp
mov
in
xchg
inc
data16
mov
push
xchg
imul
jae
xor
mov
in
xor
cmp
notb
sub
cmc
data16
push
inc
nop
xchg
dec
cmp
into
je
imul
loop
cmp
out
jle
mov
aas
adc
mov
dec
loope
xchg
aas
in
add
data16
sub
lcall
add
incl
cmp
push
in
scas
add
pushl
in
incl
jle
data16
mov
jle
cmpsb
fadd
add
incl
or
add
incl
fs
jecxz
mov
or
fisttpll
in
add
call
mov
add
stc
mov
or
decb
std
popf
jo
xor
add
push
xor
mov
shlb
sbb
jmp
enter
mov
xor
orps
testl
add
out
cmovnp
add
pop
xor
and
or
imul
inc
mov
adc
test
les
subl
jne
and
das
cwtl
inc
test
xor
outsb
negl
call
pop
lret
sbb
loop
push
jo
jns
mov
ds
and
dec
test
and
je
cmpsb
mov
and
add
ja
sarb
cmp
out
cwtl
mov
ret
mov
xchg
fimull
dec
addl
imul
add
cwtl
loopne
sbb
or
mov
aad
or
adc
mov
lds
jmp
add
adc
xchg
mov
adc
inc
jle
dec
adc
hlt
sti
adc
test
pop
push
cmp
outsb
push
mov
inc
out
cli
pushl
in
xchg
mov
shl
jae
xchg
adc
call
jbe,pt
cmp
data16
push
mov
add
push
in
out
sti
scas
push
repnz
pusha
adc
outsl
mov
roll
in
add
mov
or
cli
test
push
jns
dec
inc
popa
sub
insb
call
in
jmp
mov
sbb
sub
frstor
cmpsb
out
ret
aaa
rclb
add
jmp
add
rcll
lds
jne
pop
sub
rcr
inc
mov
lds
rcr
inc
xorl
je
pusha
outsb
or
push
sbb
pusha
outsb
adc
dec
mov
pop
mov
adc
fimull
repz
je
xor
imul
pop
ret
cltd
inc
fs
cmp
sbb
pushf
inc
stc
mov
xor
adc
sub
addl
or
jge
cmp
or
or
stc
test
or
adc
ret
movsb
cwtl
jne
mov
or
movsb
addb
or
ret
mov
mov
xchg
mov
jbe
xchg
fstl
rep
mov
sub
pop
mov
and
lahf
mov
lds
jno
xor
jo
push
lods
ret
icebp
add
push
mov
lahf
pop
mov
mov
sbb
int3
cmp
cmp
push
sub
iret
cmp
adc
xchg
stc
ljmp
jo
adc
loop
jb
jmp
cld
ljmp
popf
sub
xchg
inc
pop
add
aad
sub
jmp
xchg
movsb
daa
insl
gs
fsub
aaa
cltd
dec
scas
add
je
adc
insb
nop
jmp
and
adc
jae
pusha
shll
pop
sub
or
dec
pop
mov
insl
lret
mov
and
jmp
sbb
in
loop
scas
sbb
outsb
aaa
mov
stos
rclb
mov
in
or
leave
jmp
jmp
xchg
or
xchg
scas
faddl
movsb
out
mov
and
clc
bound
push
ficoms
jmp
stos
in
fucomi
mov
inc
test
frstor
shll
clc
sahf
push
cld
jmp
jmp
xor
sub
lret
incl
and
cli
xor
in
cli
sub
dec
dec
mov
mov
cmp
mov
inc
adc
or
xchg
xchg
cmp
in
or
and
pop
mov
jne
addb
inc
push
orl
into
push
call
sti
int
mov
orb
cs
add
mov
adc
jle
or
test
pop
or
or
out
testl
call
loope
repz
fimull
outsl
dec
dec
outsl
mov
aaa
outsl
or
sub
repz
lea
xchg
lods
in
jo
inc
or
dec
outsb
sbb
inc
or
loope
push
xor
leave
mov
daa
or
loope
add
xor
in
mov
pop
or
mov
sub
xor
rorl
pusha
sub
push
pop
mov
xor
pop
outsl
dec
cmpsb
outsl
out
xor
adc
xor
adc
jae
push
std
hlt
cli
adc
loop
movsb
jg
adc
jae
push
in
jecxz
data16
push
neg
cli
fistpl
in
bound
outsb
lds
das
push
es
push
jmp
mov
and
sbb
sub
lea
imul
fst
sub
loop
jmp
jae
or
jb
sti
xchg
pop
scas
push
inc
ret
dec
in
add
fisubl
cmpsb
fs
out
ret
jmp
xor
add
gs
adc
sbb
je
int3
pop
xchg
add
loopne
inc
jno
adc
cltd
mov
adc
dec
je
add
into
inc
lea
lea
ljmp
repnz
es
jge
fbld
ficompl
add
xchg
jge
fisubs
lret
add
lret
gs
je
incl
push
sbb
push
mov
pushl
sub
call
out
or
popf
xchg
add
xlat
outsb
sbb
test
inc
dec
add
lea
add
jmp
mov
imul
jl
xchg
cmp
jo
orl
mov
lcall
cmp
jno
decl
pop
divb
dec
aas
dec
movsl
pop
sub
mov
subl
mov
mov
dec
addb
sti
add
mov
push
pop
ljmp
sub
loop
sarb
lret
xor
stos
pop
xchg
sbb
std
sbbb
jg
jbe
fistps
loop
add
sub
sbb
xor
or
pop
call
daa
sbb
mov
or
mov
pop
jno
stc
add
gs
sbb
hlt
xchg
xor
cld
imul
pop
xor
aam
cmp
js
xor
je
cmp
out
jmp
in
pusha
cmovbe
in
mov
add
cmpsl
ljmp
popa
sub
div
scas
imul
dec
popf
sub
xchg
jmp
pop
xor
pop
mov
rcl
in
out
cmpsb
ljmp
sub
scas
lock
ljmp
loop
aaa
stos
and
jmp
mov
gs
sahf
pusha
sbb
adc
cli
sbbb
jne
lea
add
in
leave
fstl
lea
cli
inc
add
jmp
mov
out
ftst
jmp
sar
xchg
pop
daa
inc
test
jmp
or
push
sbb
lahf
inc
xorl
xchg
sahf
aam
inc
mov
int3
sub
cs
inc
xor
jne
int3
cmp
push
aam
inc
adc
jne
int3
mov
mov
lret
push
mov
fincstp
mov
push
sbb
test
add
pop
insb
xchg
jge
cmp
inc
sub
pusha
dec
push
faddl
fmuls
jmp
push
mov
jne
loope
fs
in
mov
xor
push
jmp
or
into
int3
cmp
or
cmc
lock
xor
add
loop
adc
das
pop
adc
mov
sbb
popf
adc
mov
adc
das
adc
cmp
cwtl
pop
cmp
js
cs
cwtl
fstpt
js,pt
cs
js
mov
ja
add
in
ss
scas
pop
mov
inc
sbb
sti
lahf
xchg
pusha
pop
repz
adc
add
sub
pop
fstl
addr16
roll
mov
outsb
addr16
pusha
mov
cmpsb
out
sti
addr16
mov
add
insb
sar
inc
xorl
in
outsb
fildll
sti
sub
sub
adc
sub
inc
sub
aas
subl
rcrb
add
out
mov
fsqrt
fcoml
sub
sbb
pusha
mov
shll
fistpll
dec
mov
cli
add
mov
stos
incb
sarb
pop
loope
int3
cmpsl
in
call
jo
sbb
in
push
jo
mov
shr
push
gs
sbb
jmp
push
gs
add
loopne
xchg
fwait
shr
lcall
loopne
jge
daa
cmp
ds
leave
enter
loopne
rorb
test
cmp
in
call
dec
icebp
sub
loopne
inc
sub
adc
leave
dec
pop
jmp
jo
mov
dec
out
jnp
push
xor
jg
add
jne
push
loope
aaa
dec
or
lcall
adc
xchg
xor
push
mov
les
gs
or
out
sbb
xor
js
inc
pushf
ret
cld
sbb
inc
sub
lcall
inc
push
je
push
pop
sub
cmp
xchg
xchg
push
ja
roll
sub
mov
sub
add
rorl
push
cmp
ja
sub
xor
dec
sub
add
and
mov
xchg
push
pop
jne
or
xchg
loop
push
lds
push
idivl
sub
sub
inc
je
cmpsb
jp
pusha
ds
sub
push
loope
add
mov
or
jmp
repz
loop
and
push
add
push
in
out
sti
fs
out
sub
jae
adc
in
into
insl
xchg
cli
jnp
sub
insb
mull
je
sub
cmpsb
push
int3
jno
jae
xchg
push
jbe
in
sub
loop
push
mov
in
jbe
in
jmp
jne
adc
outsb
dec
rcll
sub
dec
shlb
ret
enter
pop
scas
popf
jl
sub
push
das
movsb
ds
jae
rolb
in
or
adc
loop
test
jmp
dec
inc
fwait
test
aad
inc
dec
gs
ret
test
push
movsl
mov
aad
push
xor
test
push
lods
xchg
mov
jmp
jno
sub
movsl
mov
aad
call
add
movsl
adc
sub
movsl
mov
jmp
les
jns
jmp
test
sar
jle
inc
incl
decl
in
shlb
inc
lahf
xlat
push
fstpl
mov
mov
cmp
decl
jae
or
imul
mov
jnp
orl
leave
pop
jne
push
orl
leave
xor
push
jmp
xchg
les
push
push
test
pop
sbb
sar
mov
pop
jne
xchg
push
jmp
nop
mov
fisttps
call
lcall
sbb
mov
mov
dec
loop
enter
test
or
rol
xchg
aas
jo
daa
loope
cld
int
fwait
pop
out
add
and
dec
cld
push
and
or
divb
daa
push
add
jl
lds
ja
mov
movsb
shl
clc
cmp
aad
or
fstpt
mov
stc
mov
lods
loope
loop
insl
or
add
stc
popf
idivl
roll
loop
sbb
dec
pop
or
scas
fistpll
xchg
inc
jnp
adc
mov
mov
es
push
add
cli
mov
daa
in
add
push
in
push
imul
imul
pop
jmp
mov
in
imul
fnstcw
push
shll
jmp
insl
loop
jmp
jae
adc
jae
js
in
jp
frstor
popf
insb
subb
push
imul
lods
je
enter
loope
icebp
jno
in
decb
hlt
rcrb
out
popf
test
jmp
jmp
fucomi
mov
jecxz
xchg
add
push
fidivrl
rcr
inc
dec
fisubl
decl
jmp
int3
int
incl
pop
scas
in
push
add
je
add
lret
mov
fldenv
loope
mov
in
jle
jmp
lods
mov
incl
loop
jo
sbb
pop
pop
sbb
xchg
mov
mov
jecxz
dec
mov
ljmp
jle
lcall
fs
or
dec
outsl
in
icebp
testb
ja
inc
insb
ljmp
dec
xor
push
pmaddwd
pop
add
shl
jo
adc
das
incl
pushl
adc
iret
push
push
fists
lea
movsl
sbb
pop
lret
clc
lods
cmp
out
loop
inc
pop
fldl
jo
stc
fwait
loopne
mov
sbb
dec
sub
jns
cs
sbb
dec
or
seta
adc
add
and
push
lds
in
push
ja
notl
push
pop
addr16
push
sbb
cmp
inc
les
movsl
push
das
and
pop
and
push
imul
mov
mov
adc
cmp
outsb
jbe
data16
mov
pop
jbe
adc
jle
jnp
mov
and
in
jbe
data16
bound
jmp
mov
adc
inc
cmp
push
jbe
data16
imul
data16
and
xor
sbb
out
je
fidivs
cmpsb
fldenv
in
into
in
jmp
inc
or
mov
pop
sbb
scas
mov
push
mov
insl
and
insb
push
dec
add
out
ret
out
mov
arpl
cld
jae
js
dec
jno
call
push
popa
call
mov
leave
jge
cmp
out
jne
std
push
mov
out
repnz
mov
or
in
jle
loop
enter
pop
in
inc
push
hlt
jle
out
push
mov
adc
or
dec
out
incl
jl
cmp
sbb
xchg
incl
pop
decl
negb
jge
or
lahf
push
leave
xor
adc
sahf
push
jne
mov
xchg
fistpll
mov
fcomps
mov
mov
jo
pop
jne
repz
mov
divl
mov
jo
pop
jne
jecxz
mov
outsl
adc
xchg
testb
leave
xor
adc
and
push
push
sub
dec
bound
lcall
cltd
push
and
or
insb
popf
add
cmc
add
pop
add
jge
js
sub
jae
scas
mov
mov
or
mov
add
or
pop
add
pusha
pop
push
icebp
clc
shl
or
imul
in
lret
stc
add
out
adc
lret
imul
pop
inc
jo
jge
inc
pop
loope
ret
test
xchg
loopne
jmp
xor
sub
je
push
lods
loop
les
jmp
mov
roll
jae
adc
cltd
sub
xor
pop
sub
shr
sub
push
jmp
xor
and
xor
sub
jae
adc
sub
fwait
sub
insb
loop
divb
imul
sbb
sub
dec
rolb
out
jo
pop
out
add
add
loop
add
mov
in
lcall
or
lcall
int3
popa
and
mov
sub
or
popa
and
popf
icebp
cmp
leave
xchg
adc
pop
mov
xchg
cmp
xchg
sub
fsubr
pop
cmpl
rcr
jmp
jge
loopne
add
and
and
lods
push
mov
adc
sub
inc
call
incb
popf
push
push
cmovbe
dec
mov
dec
lock
shrl
fistl
testb
test
jle
lcall
add
inc
add
mov
jne
sub
dec
loopne
enter
iret
and
lea
cmpsl
adc
repz
sbb
mov
daa
lea
or
dec
sbb
and
rorl
in
loopne
loopne
inc
jmp
add
hlt
dec
loop
dec
inc
mov
sbb
fdivrl
add
es
jno
daa
add
testb
loop
enter
pop
sub
loop
movsl
addr16
jl
pushf
jns
sbb
je
mov
or
pop
out
jl
push
mov
jo
pusha
imul
out
sbb
or
xchg
sahf
sbb
ret
sbb
and
jg
add
je
ds
jle
loope
add
and
jg
adc
call
or
in
sbb
test
arpl
jp
jg
adc
fstl
sbb
mov
call
dec
out
loop
pop
dec
mov
in
mov
sbb
add
loope
jmp
out
push
outsb
js
sub
jp
sbb
fsubp
adc
dec
loop
lods
mov
or
sub
jne
sub
and
clc
mov
jmp
jno
pop
imul
loope
clc
cmc
xchg
adc
add
mov
jmp
and
add
sbb
rolb
bound
add
out
jge
ficomps
test
in
add
rclb
or
inc
call
subl
dec
xchg
out
mov
inc
call
xchg
mov
adc
add
in
lcall
push
add
movsl
push
add
dec
add
inc
push
ja
mul
jno
adc
add
push
enter
jo
push
pop
jo
inc
push
aas
scas
out
ret
jnp
xor
and
pop
jo
inc
push
pop
idiv
out
rclb
add
add
xor
push
call
inc
jecxz
inc
xor
out
je
mov
pop
jo
sbb
inc
pop
popf
inc
mov
dec
call
incb
lahf
dec
in
mov
mov
inc
andb
das
mov
cld
cld
sbb
xor
in
sti
fmull
mov
mov
lds
jl
inc
call
jo
les
outsb
pop
movsl
sti
push
mov
sti
pushf
ljmp
jl
test
or
xor
xchg
jno
pop
out
fsubrs
out
add
lods
pop
sti
into
pop
out
movsl
outsl
sti
mov
popf
pop
sti
scas
or
pop
adc
and
in
aam
xlat
push
jmp
jecxz
in
push
lods
and
jmp
fucom
jmp
jnp
scas
fs
sbb
je,pt
pop
test
stos
or
imul
sbb
and
jmp
stos
fcmovne
sbb
push
insb
rolb
and
jmp
mov
inc
xchg
cli
xor
mov
adc
jmp
out
dec
in
push
outsb
and
sbb
roll
leave
loop
jne
sbb
xor
push
lock
sbb
popa
movsl
fwait
jmp
rorb
or
sbb
data16
call
push
and
add
rcl
mov
pop
sub
add
loop
call
nop
aad
lcall
loope
mov
adc
cmp
shlb
sub
push
fabs
inc
fdivl
je
push
mov
adc
mov
pop
shlb
or
or
jl
or
or
jo
incl
scas
ds
adc
inc
lret
cmpsl
outsl
fsubr
icebp
push
and
jne
les
call
lock
adc
jo
fidivs
and
mov
or
mov
xor
jo
jge
sbb
rorb
cmc
std
adc
call
push
add
fs
dec
loop
shrb
add
push
mov
jo
stc
test
clc
outsb
ja
scas
jecxz
sahf
push
add
loop
ljmp
add
sbb
jmp
loop
add
sti
add
addr16
int3
mov
cmp
add
dec
add
sbb
in
loope
add
xchg
lea
jns
aas
in
jno
stc
add
fdivrl
add
aas
out
cli
add
loop
jmp
jae
adc
xor
jmp
jmp
in
jmp
mov
in
ss
push
sub
adc
push
in
sahf
ficoml
add
sti
or
adc
jo
push
nop
mov
jae
inc
adc
mov
jp
lods
mov
sti
int
mov
adc
xor
push
jmp
jae
jp
mov
adc
cmp
push
pusha
xor
push
sbb
fiadds
test
push
add
xchg
shr
in
movsb
adc
xor
jp
fstps
adc
stc
xchg
fcomp
jmp
pop
pop
adcb
pop
rcl
jmp
xchg
std
lds
inc
incl
in
hlt
arpl
in
mov
in
jne
call
push
dec
out
call
in
mov
jge
out
xor
cltd
stos
add
jp
sbb
scas
jmp
divb
in
out
not
pop
adc
dec
hlt
nop
in
pop
xlat
in
js
push
test
mov
je
mov
or
lock
scas
mov
outsl
lahf
sarb
add
sarb
das
outsl
jg
jnp
mov
outsl
outsl
loopne
mov
pop
hlt
adc
ja
sub
jb
rep
inc
jmp
loope
mov
clc
jmp
sti
ud2
xor
in
mov
adc
jo
stc
imul
mov
ret
mov
add
out
cld
mov
addl
add
int3
in
adc
andb
hlt
mov
inc
icebp
hlt
add
cmp
cmpsl
rorl
adc
hlt
jle
mov
daa
cli
and
imul
lret
pop
push
xorb
cld
repz
sub
cmp
loop
jle
div
ret
mov
xchg
neg
sbb
adc
jae
data16
sub
rclb
jp
lds
jmp
mov
push
jae
adc
in
cmp
sub
aad
push
lcall
adc
shll
jmp
mov
push
shrl
adcl
es
pop
mov
and
xchg
push
insl
loop
fs
sbb
stc
add
adc
out
arpl
jmp
ret
jp
add
mov
add
and
xor
adc
or
ret
in
lea
out
push
add
jbe
add
shrd
cmp
jmp
mov
adc
ror
jp
jno
adc
fdiv
cli
pusha
and
mov
adc
lea
cld
and
incl
mov
cwtl
loopne
in
push
stc
adc
inc
xchg
push
mov
adc
call
jo
fdivr
daa
cld
insb
inc
dec
xchg
xchg
mov
dec
loop
fcoml
add
xchg
stos
std
incl
pushf
sti
ud2
mov
xor
and
fisttps
add
jo
loope
iret
into
stos
std
jl
call
and
in
dec
cmpsl
ss
decb
aam
mov
mov
adc
repz
adc
test
loope
inc
js
add
jp
cs
mov
ds
stc
lock
push
int3
lock
lods
push
jo
sub
cmp
push
data16
push
or
stc
push
mov
cmc
inc
jo
inc
mov
or
fildl
and
loopne
pop
aad
out
mov
xchg
mov
inc
popa
clc
or
lock
lock
mov
mov
xchg
leave
lock
fisttpll
jns
or
lock
gs
pop
or
lock
in
out
dec
sti
adc
xor
xchg
pop
inc
or
in
pop
add
cmp
je
jmp
les
xchg
mov
sbb
fnstenv
xchg
xchg
pop
xchg
push
sahf
imul
data16
pop
out
xchg
sbb
in
jae
xchg
test
pop
jecxz
iret
xchg
push
push
pop
pop
in
pop
stos
dec
data16
ss
fnsave
data16
fcom
mov
jo
jmp
ja
xor
or
sub
fstpt
jl
adc
add
push
call
jb
jp
dec
mov
call
mov
mov
out
ljmp
push
xor
push
cld
and
adc
cld
data16
loope
xchg
or
leave
sti
data16
shll
add
push
inc
add
sahf
fs
cltd
ficoms
add
test
pop
out
mov
push
add
jecxz
push
jo
call
je
fs
push
jo
cld
je
mov
daa
mov
inc
popf
addr16
aas
add
shlb
dec
fs
lcall
push
or
aas
add
incb
pop
pushl
fs
enter
iret
jmp
iret
add
add
jb
push
or
das
adc
out
lahf
add
inc
call
cwtl
setae
jg
in
std
loope
in
in
or
out
pop
or
xor
dec
adc
popf
jg
hlt
xchg
or
in
ss
int
andl
fldt
fucomp
push
rcr
jno
lods
in
push
movsl
fildl
stc
arpl
in
fs
mov
cli
pop
out
fimuls
cmp
push
sti
cmc
js
iret
or
pop
mov
mov
add
push
sbb
shll
sbb
push
jbe
cli
xor
mov
push
cltd
and
insb
jne
or
sub
rcrl
add
in
push
dec
dec
loopw
push
xchg
out
add
jmp
dec
cwtl
jmp
and
cmp
or
sti
popa
out
or
movb
in
rorl
sbb
jae
lcall
push
push
lea
data16
mov
xchg
cmpsl
xchg
adc
mov
sahf
loop
jae
adc
xor
in
out
jae
js
xor
movsl
adc
mov
sti
data16
add
or
js
push
add
add
xchg
incl
ljmp
xchg
inc
xchg
or
mov
sti
data16
xchg
sbb
adc
in
inc
xchg
call
push
mov
data16
icebp
lea
leave
sti
data16
loope
xchg
incl
rclb
mov
in
dec
inc
loopne
push
cld
jns
add
out
jne
add
add
cwtl
clc
mov
pop
push
add
verr
jge
std
outsl
mov
str
sub
jo
cmp
xor
cmp
aaa
dec
insb
sub
xor
cmp
mov
push
inc
jo
adc
jo
stc
je
jae
std
out
test
out
cli
incb
cs
jo
cli
je
test
enter
mov
aad
jo
scas
jl
arpl
lock
add
push
jmp
push
add
rorb
outsb
fnstcw
jo
jp
inc
mov
test
jmp
push
inc
subb
stc
push
aaa
icebp
fisttpl
cmc
call
push
sbb
mov
stc
jbe
or
call
jno
stc
fndisi(8087
xchg
stc
add
cmp
jp
inc
xor
adc
xor
ret
inc
jo
adc
mov
add
sub
adc
mov
push
test
jp
jmp
jnp
les
add
es
cli
test
dec
add
shrb
shl
jae
xchg
add
pop
add
jmp
sbb
aad
syscall
lcall
mov
adc
in
scas
xlat
xchg
jp
insb
loop
xchg
cmp
sub
add
sahf
push
add
rcll
jne
daa
jns
ds
jae
leave
sahf
adc
sahf
push
add
mov
cmpsl
adc
mov
jne
daa
pop
std
mov
sahf
test
daa
push
dec
pop
fucomip
jne
sti
data16
outsl
ds
rolb
mov
in
cwtl
inc
loopne
ds
jns
mov
jmp
adc
jge,pn
cld
lcall
popf
adc
adc
scas
jp
jo
ltr
pop
sub
jo
mov
inc
scas
xor
push
add
stc
hlt
je
mov
inc
mov
cmp
push
or
push
inc
jo
adc
jo
hlt
je
shll
test
hlt
mov
or
je
stc
jnp
sbb
jnp
daa
xor
add
imul
rdtsc
dec
add
adc
push
je
loop
add
loop
add
addr16
out
add
pop
insb
jecxz
add
lahf
ds
mov
shlb
pop
sub
mov
sbb
loop
outsl
js
mov
jle
ret
mov
mov
inc
jo
testl
js
mov
jg
add
in
or
add
cld
outsb
and
dec
cld
pop
jno
in
sub
xlat
repnz
add
jl
adc
mov
cmpsb
out
adc
sub
loop
mov
mov
cmp
je
ljmp
fildl
insb
loop
cmpsl
cmp
push
test
xchg
jmp
mov
pushf
mov
in
shll
ljmp
mov
adc
mov
test
or
push
xlat
flds
jae
sti
aas
fwait
loope
test
xchg
jmp
sub
dec
mov
add
jns
jmp
test
or
add
ljmp
adc
lea
jl
cli
movsl
bound
in
mov
xchg
pushl
out
shlb
jp
cltd
hlt
lods
push
add
add
or
cmc
mov
ss
push
jle
add
add
rorl
dec
xchg
push
push
push
or
dec
pop
jecxz
sarb
in
decl
mov
add
inc
je
dec
movsl
adc
lcall
pop
and
jle
daa
std
add
xor
mov
inc
icebp
icebp
add
add
jne
pop
dec
cld
aad
call
pop
shll
xchg
mov
sti
inc
inc
jle
or
out
je
mov
sahf
inc
jl
or
lods
xchg
aaa
inc
jo
xor
in
js
mov
adc
pusha
pop
add
shlb
pop
clc
push
cld
icebp
dec
cwtl
or
out
out
xor
loop
xor
js
jmp
mov
insb
pop
loope
or
dec
lock
movsl
adc
fdivrp
xchg
into
ja
loope
ljmp
push
sub
lock
jo
add
mov
std
inc
mov
iret
add
loop
and
mov
stc
orl
loope
jmp
add
cmc
cld
add
add
loop
lock
mov
loopne
ljmp
or
insl
out
cld
fstl
jbe
sar
jmp
sub
pop
jmp
mov
js
push
iret
jmp
insb
or
and
sti
cltd
and
test
jmp
xor
push
jmp
xchg
inc
in
outsb
nop
jne
ds
jmp
lods
loopne
mov
in
or
shll
repnz
lret
loop
push
adc
inc
mov
adc
outsb
xchg
sbb
push
fists
out
dec
xchg
cmpsb
pop
movsl
adc
movsb
out
cli
lcall
in
jne
pop
call
ret
inc
mov
pop
sar
inc
mov
adc
add
add
mov
xchg
shlb
add
fists
jmp
push
push
mov
call
mov
jns
add
rorb
or
mov
sti
jmp
in
orb
lods
cmc
pop
jmp
push
incl
mov
je
subb
loopne
push
push
jo
lret
add
int
sbbb
add
clc
cmp
adc
das
scas
push
add
cmp
and
xchg
sub
fwait
int3
je
mov
cmpsl
fcomip
enter
das
sbb
fstl
clc
js
enter
loop
faddp
rorb
push
cli
xor
arpl
mov
add
jo
jmp
jp
fstl
jo
jmp
stos
stc
add
stc
inc
cld
setg
out
stc
es
out
leave
fsubl
push
pop
stc
mov
mov
stc
ss
push
jnp
mov
outsl
icebp
mov
loop
frstor
or
push
stc
inc
xor
outsl
int
cld
jmp
sub
jo
adc
add
stc
psubsw
xchg
jmp
fyl2xp1
jmp
inc
mov
xorl
mov
loop
fs
jmp
and
jmp
sub
out
sub
adc
jae
shrl
jmp
jae
adc
mov
out
mov
jae
xchg
adc
imul
je
xchg
cltd
mov
pop
lcall
testb
jle
test
cld
mov
mov
sbb
jae
add
add
dec
xchg
clc
sbb
adc
pop
arpl
add
pusha
sbb
test
in
decl
sti
mov
sbb
add
lods
pop
add
popa
lods
je
and
add
or
push
add
sti
es
call
dec
push
pusha
and
push
shl
sbb
add
pop
je
mov
out
jmp
scas
cli
or
adc
cltd
jecxz
push
jo
xchg
incl
in
pop
add
iret
jae
mov
ds
adc
jg
xchg
incl
leave
mov
fadd
out
div
das
loopne
mov
cld
enter
repnz
or
incb
mov
mov
push
cmc
sub
out
adc
lret
push
add
pop
inc
iret
aad
std
and
mov
addr16
and
jnp
decb
xchg
fimull
or
int
nop
push
repnz
fisubl
pop
pop
mulb
xor
scas
inc
divb
and
or
add
xor
notb
or
loop
int3
xor
stc
xor
push
jns
fisttps
call
outsb
jo
dec
or
outsl
icebp
insl
jo
cs
add
shrl
add
pusha
das
or
xchg
sub
xor
fwait
cmpsb
nop
std
test
adc
daa
mov
gs
test
add
cmc
gs
cwtl
outsb
sbb
imul
inc
dec
lods
cli
mov
loope
pushf
out
int3
adc
addr16
popa
in
shr
pushf
fcomi
inc
loope
sub
fnstenv
xchg
or
cmp
inc
bound
xchg
sti
out
pop
jmp
sbb
inc
inc
insb
cmc
gs
loop
cmp
repz
std
pop
xor
out
scas
test
adc
jae
xchg
je
imul
xchg
in
popf
fs
imul
add
mov
test
test
incl
decl
sbb
or
push
sbb
jae
pop
scas
add
lock
jne
mov
jne
or
decl
sbb
jne
push
mov
lcall
push
out
lcall
or
or
mov
in
mov
in
mov
test
xchg
adc
push
or
push
mov
jmp
push
shll
jne
lods
stos
inc
lods
or
add
xchg
xchg
cwtl
jae
jmp
fwait
inc
mov
cltd
test
loopne
mov
movsb
and
mov
jo
inc
and
insl
lret
les
mov
sub
pop
aaa
int3
ret
xorb
pop
mov
data16
or
into
std
cltd
adc
push
enter
lds
lods
ffree
js
and
inc
xor
or
sub
jo
shlb
push
int
in
mov
pop
mov
inc
xchg
xchg
pop
xlat
and
subl
push
or
popf
add
jo
sub
push
popa
mov
inc
sub
sahf
loope
aas
sahf
decb
add
cmpsl
push
xor
mov
pop
cmc
cmpsl
xor
pop
js
jmp
outsb
in
clc
cmpsl
or
and
mul
stc
add
ja
insb
push
cmp
repz
loop
movsl
js
push
roll
xchg
lds
mov
lds
adc
movsb
mov
shlb
cli
aad
icebp
jmp
mov
xchg
jle
loop
pusha
cmpsl
sbb
gs
and
push
inc
imul
sub
push
pop
inc
jbe
pop
addr16
jl
pusha
push
sub
es
fcomip
jmp
jae
cs
dec
mov
popf
and
mov
adc
addr16
mov
jl
lea
mov
pop
mov
je
popa
outsl
mov
je
jmp
mov
das
adc
cltd
adc
stos
lcall
verr
push
in
lcall
hlt
lcall
in
cld
sbb
mov
push
in
fdivl
hlt
lods
in
pop
push
and
add
pop
clc
orl
inc
add
movsb
adc
or
adc
test
add
les
stc
lcall
stc
insb
push
int3
test
mov
inc
rclb
push
clc
ja
add
inc
clc
jo
xchg
xchg
jo
vmptrld
stc
fadds
jo
pop
rcrb
inc
lods
lcall
jnp
std
cmp
mov
je
cmp
and
jnp
dec
push
repz
lods
add
stc
inc
inc
cwtl
outsl
push
inc
jo
dec
aam
loop
inc
jo
loopne
arpl
pop
lret
out
stc
jl
sbb
or
loop
sarb
mov
cld
iret
pop
shrb
lcall
xchg
jb
rolb
xchg
adc
stc
fsubrp
pop
scas
lret
ljmp
cmpsl
sti
cli
xchg
pop
jle
in
scas
iret
push
xchg
loope
xor
stc
cmp
js
pop
xchg
js
cli
mov
jecxz
insb
sub
add
sub
mov
adc
jp
rol
jne
aad
mov
jmp
lret
jmp
insb
loop
push
lock
insb
loop
gs
jmp
in
scas
jo
xor
adc
add
add
jmp
insb
loop
jmp
jae
adc
inc
je
ljmp
mov
jmp
inc
mov
sbb
ljmp
jmp
jae
pushf
aas
in
sbb
into
in
jmp
pushf
jbe
add
stos
xchg
decb
in
jbe
arpl
inc
push
push
inc
sbb
leave
loopne
loopne
and
mov
adc
fucom
adc
cltd
imul
mov
push
mov
lea
push
imul
adc
bound
xchg
cmp
jae
pop
adc
dec
loopne
rclb
addr16
pop
call
scas
call
jo
inc
in
or
push
add
jo
ret
dec
or
add
jbe
incl
hlt
lcall
adc
push
add
xor
add
addr16
cmp
or
cmp
dec
fmull
pop
mov
add
push
push
sbb
inc
jo
int
ja
cltd
mov
mov
adc
aaa
push
add
pop
incl
dec
ret
sbb
repz
push
inc
mov
stc
add
stc
add
cmp
xchg
cmp
nop
in
clc
mov
mov
add
int3
js
call
rol
pop
fsubr
inc
cld
iret
outsl
ror
into
push
pop
int3
cli
iret
movsb
pop
mov
je
fstpt
in
mov
cmpsb
je
fisttpl
pushf
into
xchg
je
into
add
xorl
mov
jmp
js
pop
xchg
movsb
xor
cmc
jno
stc
add
scas
sti
push
hlt
mov
xor
add
sbb
faddl
cwtl
mov
lret
fcoms
jb
ficoml
xchg
xchg
in
je
imul
std
and
leave
imul
mov
add
mov
sbb
mov
dec
aas
jmp
sbb
outsl
mov
loope
stos
arpl
outsl
mov
ja
pusha
jecxz
mov
push
repz
fidivl
sub
loope
sub
add
in
inc
cltd
inc
adc
sbb
jne
push
cld
dec
mov
adc
sbb
push
xchg
mov
jecxz
add
js
inc
ficomps
adc
ret
cmp
out
jge
xchg
inc
xchg
imul
add
cwtl
sbb
or
inc
xchg
adc
jmp
std
or
inc
pop
in
add
adc
xor
leave
xor
adc
xor
pop
cmp
subb
add
push
stc
psubsb
dec
jmp
sbb
add
movsl
inc
incl
jae
clc
mov
das
add
lea
add
fcoml
mov
xor
stc
psubsb
stos
xlat
jmp
sbb
add
adcb
stc
das
add
pop
jb
push
inc
adc
mov
je
add
inc
jo
js
imul
repz
mov
lret
push
xor
clc
cs
jmp
add
insl
or
add
sbb
xorl
repnz
loop
xchg
jp
inc
xor
fcoml
stc
push
inc
jo
js
imul
clc
dec
sub
push
fmull
jo
mov
pop
mov
cmp
insb
xchg
mov
xlat
loop
fsubrl
in
in
sub
cli
dec
mov
add
sub
mov
mov
addr16
sub
xor
aas
in
cmc
cmp
cli
cmp
xor
jns
mov
cli
jmp
add
mov
addr16
mov
loop
cmp
in
sarl
cli
jno
in
pusha
push
adc
add
daa
test
xchg
jmp
loopne
fiadds
lds
lcall
outsl
aam
ljmp
cld
xor
push
xchg
aas
in
lcall
insb
push
fstps
addr16
scas
in
incl
jle
stos
setne
decl
pop
outsl
les
ljmp
xchg
es
incl
xor
subl
jae
xchg
add
or
into
sbb
jne
sbb
jo
mov
je
pop
pop
or
imul
out
xor
pop
shrd
movsl
fidivl
xchg
insb
add
fidivl
pop
shlb
daa
call
rep
jmp
negb
movsb
incb
pop
or
adc
mul
in
imul
dec
filds
cld
enter
iret
adc
clc
fdivs
mov
lods
inc
ljmp
loop
push
lahf
jecxz
push
test
adc
push
cwtl
cli
sbb
insb
push
mov
add
push
push
cli
lods
push
pop
jecxz
push
xor
mov
dec
jecxz
push
sub
mov
push
sbb
in
das
jecxz
push
inc
cli
int
pop
jecxz
push
and
aad
pavgw
ret
mov
popa
ss
loop
js
out
pop
hlt
adc
mov
add
jo
mov
add
aaa
int3
add
sbb
scas
fistl
jmp
cmp
js
or
jecxz
mov
inc
jle
ljmp
jae
pop
sub
loop
shll
jmp
rcll
subl
lock
cs
popa
push
in
push
xchg
data16
push
ss
inc
sahf
loope
je
rolb
fs
xchg
cli
imulb
or
mov
push
mov
dec
imul
jae
arpl
lea
pop
mov
in
mulb
in
mulb
in
cmpsb
in
call
push
sahf
xchg
in
fisubs
adc
jae
sahf
in
scas
cmpsl
in
fdivrl
cmpsb
call
in
fdiv
js
push
cmpsl
in
adcl
frstor
div
jbe
repz
cmp
in
out
or
movsl
in
mov
lods
in
pushl
scas
aad
scas
pushf
out
cmpsl
out
xor
scas
or
lahf
std
pop
mov
out
sbb
les
or
loop
addr16
imul
leave
je
and
je
sub
dec
loopne
ljmp
add
add
push
repz
punpckhdq
pop
or
ljmp
jmp
js
xor
push
add
loop
add
and
cli
pop
fdivs
pop
add
jmp
cmp
ret
fbld
fisttpll
inc
add
loop
ret
add
xchg
cmc
loop
pushf
lods
adc
loope
test
fisubrs
ret
push
aam
cld
jbe
add
push
fisttps
mov
fisubrl
add
cmp
add
stc
add
mov
cmp
adc
xlat
mov
and
loop
jmp
push
pop
loop
in
and
gs
mov
sbb
lret
inc
in
scas
neg
sbb
jmp
inc
int3
xor
jmp
insb
and
adc
jae
adc
cwtl
notl
pop
bound
sbb
ficompl
jno
ficoml
sub
repnz
in
jmp
test
dec
push
ljmp
mov
jmp
xlat
int3
stos
sub
lcall
fucom
inc
mov
sbb
leave
fcoms
addr16
sbb
into
aad
dec
out
mov
mov
inc
in
ss
mov
mov
jmp
dec
mov
sbb
sti
or
incl
sbb
mul
adc
add
cwtl
in
jne
mov
pop
mov
push
adc
scas
add
loope
jne
je
jecxz
mul
xchg
inc
in
sub
xor
test
inc
jo
lds
mov
shlb
test
fwait
shlb
and
mov
cmp
xchg
dec
inc
adc
rorb
jb
push
mov
cld
in
dec
add
jb
push
filds
push
pop
xlat
cmpsl
fst
mov
xlat
cmp
pop
jnp
and
mov
xor
je
and
decb
fdivrl
or
pop
push
add
add
out
push
out
stos
jp
in
mov
incb
jo
stc
mov
mov
jo
stc
add
dec
aad
add
and
stc
pop
jmp
add
sub
js
ja
addb
fildl
adc
jecxz
cmp
pop
testb
jmp
cmp
or
ja
mov
jmp
loop
pop
cmp
cwtl
cmp
test
loop
jmp
loopew
jmp
add
pop
pop
jmp
jg
adc
dec
adc
jecxz
jmp
or
adc
jae
insl
cmc
je
xor
insb
lret
xlat
fistpl
cmc
pop
loop
in
loopne
out
cmp
inc
in
xchg
lret
adc
jae
hlt
outsl
in
lret
add
ljmp
test
jmp
pop
dec
adc
inc
loop
inc
gs
cwtl
in
jmp
lcall
jne
or
fsubr
cli
lods
lcall
js
repz
add
jmp
lea
jge
loope
and
out
add
dec
mov
adc
push
cld
out
cli
mov
repnz
adc
jmp
add
dec
data16
xchg
mov
jmp
jo
sub
jbe
out
popf
mov
pop
call
pcmpeqd
push
jne
push
jecxz
std
mul
mov
jno
jae
nop
shlb
dec
ret
scas
je
mov
data16
mov
je
and
pop
call
cltd
mov
add
sub
movl
jo
scas
je
in
push
ss
cld
shlb
addr16
mov
adc
sbb
loop
inc
inc
loop
add
into
pop
lret
pop
std
sbb
sub
push
lret
jo
js
jl
mov
enter
jo
xor
jo
js
jl
outsb
or
jecxz
add
and
jo
js
jl
inc
push
add
inc
push
icebp
push
testb
and
ss
cs
sbb
cmc
aam
into
mov
cs
bound
xlat
push
adc
dec
xchg
js
sub
pop
xlat
adc
out
js
or
sbb
stc
xlat
jmp
sbb
jmp
insl
loop
jmp
outsl
in
xchg
jle
gs
add
adc
sbb
sbb
jl
mov
cltd
sub
fsubs
cli
dec
out
sbb
push
jl
outsl
dec
jmp
jmp
orb
into
jmp
int3
mov
jmp
mov
xlat
stos
call
add
stos
add
adc
or
adc
jge
orl
push
cmp
ret
loop
jne
test
jmp
mov
imul
sub
jne
mov
leave
dec
aad
push
push
jge
inc
loope
inc
or
aad
sbbl
fs
adc
into
pushf
add
pop
add
lcall
xchg
loope
or
and
popl
subl
rcr
add
or
push
add
jnp
dec
lret
repz
mov
jl
stos
je
xor
popa
pop
adc
rcrb
fadd
je
cwtl
inc
clc
repz
or
ss
out
sti
sub
jno
verw
jge
dec
in
mov
call
jns
mov
hlt
jo
adc
add
push
pop
sub
mov
cwtl
inc
cwtl
loope
ss
stc
arpl
repnz
das
xor
stc
mov
xchg
mov
sarl
pusha
mov
jo
stc
lods
bound
mov
gs
or
push
and
dec
and
daa
das
pusha
rorl
mov
add
test
mov
into
sbb
ret
fdivrl
mov
push
rolb
loop
adc
dec
adc
mov
test
insl
lea
cmp
jmp
ljmp
jmp
or
inc
push
mov
pop
in
iret
bound
xchg
aam
dec
xchg
jmp
shll
jae
push
dec
pushf
gs
sbb
imul
adc
aam
sub
rcrl
repnz
repz
adc
pop
icebp
push
dec
repz
in
out
iret
rcrl
data16
rorl
pop
jbe
rorl
addr16
loopne
mov
fimull
testl
fucom
gs
loop
pop
incl
dec
mov
out
call
adc
adc
sbb
dec
leave
pop
jmp
nop
les
nop
jge
out
or
cmp
ret
jmp
jmp
mul
and
pusha
and
push
cwtl
data16
add
call
dec
sbb
add
sbb
and
mov
aaa
nop
movsl
incb
js
inc
bound
xchg
inc
je
cmp
out
push
call
pop
into
sbb
fst
mov
rcrb
mov
dec
cmp
dec
mov
cmp
daa
mov
call
jmp
sbb
repz
or
xchg
jl
lds
pop
fwait
sti
inc
leave
mov
pop
fs
push
add
repnz
enter
mov
fadd
add
xorb
jle,pn
dec
adc
inc
aad
call
loop
add
pop
ds
roll
mov
ficoml
mov
mov
mov
std
mov
push
enter
call
and
ss
hlt
jle
loop
add
add
mov
clc
loopne,pt
cli
push
fists
stos
mov
push
adc
cld
push
sbb
pop
inc
in
out
fists
iret
gs
loop
sbb
pop
lret
pop
push
pop
push
iret
data16
push
out
cmp
cmpsb
xchg
dec
mov
repz
js
gs
push
pop
jle
pop
add
jmp
xor
data16
cli
mov
add
fisubrl
js
push
add
pusha
insb
ret
push
or
dec
imul
mov
iret
gs
ret
adc
mov
fs
loope
add
xchg
data16
popa
repz
mov
test
jmp
outsb
cld
mov
xchg
xor
loop
sub
loop
push
lds
mov
mov
in
jne
push
pop
add
nop
jns
out
or
call
mov
mov
cmp
sbb
adc
repz
in
sub
fcmovb
and
in
sbb
adc
dec
or
call
leave
repz
nop
in
mov
add
xlat
dec
movsb
out
addr16
sti
inc
leave
mov
ud0
cmp
cmp
call
add
lock
jg
xchg
out
inc
push
loopne
testb
lods
arpl
add
into
shr
std
mov
mov
insl
dec
pop
cmp
and
popa
sbb
inc
mov
mov
lods
and
inc
adc
adc
lods
sbb
jge
mov
je
loop
arpl
int3
or
daa
push
cmc
mov
adc
add
fisttpll
sub
jb
pushf
pop
or
mov
jg
stos
sub
shlb
aam
push
mov
push
lods
mov
dec
mov
add
js
cwtl
loope
sbb
cmpsb
mov
stos
test
insb
lret
push
cld
push
ss
stos
addl
repnz
jae
cs
mov
sahf
fnsave
jo
mov
add
idiv
push
sti
mov
sbb
push
in
es
push
test
lret
gs
push
and
jae
sarb
fisubrl
lret
lret
aad
jae
gs
cmpsl
pusha
out
mov
and
pushf
xor
pop
mov
push
push
push
lds
shll
int3
jmp
and
out
ret
pop
ret
mov
jae
pop
test
add
jecxz
add
jmp
jne
adc
sub
pop
pop
imul
push
int
adc
mov
ficoms
or
lret
dec
add
add
add
fnstcw
or
and
leave
stos
jne
jnp
or
ficoml
add
mov
clc
or
inc
push
add
lock
inc
mov
or
cmp
stos
jne
sbb
or
adc
xchg
cwtl
jge
insl
adc
inc
je
fstpl
adc
cmp
repz
jo
push
add
sub
scas
subl
jg
ret
lock
jl
std
or
cmp
jg
jle
add
jae
adc
add
cmp
jmp
aad
movsb
mov
push
clc
jo
sti
push
out
ljmp
xchg
jl
mov
mov
jne
js
cld
jno
ltr
cmpsb
inc
dec
mov
jmp
inc
sub
stc
add
jns
mov
lret
aaa
pop
push
add
loop
cmpb
jae
hlt
jecxz
ss
hlt
add
pusha
das
push
add
jecxz
repnz
call
loop
mov
sbb
int
push
movb
loop
js
fldenv
push
mulb
adc
loopne
lods
fmul
and
mov
mov
mov
adc
and
data16
inc
push
pop
jmp
movsb
sub
sub
inc
jb
fs
xor
loop
loopne
push
jno
xor
adc
xlat
adc
out
sub
xchg
inc
push
jmp
jae
sub
repz
sub
loop
in
pop
cmp
xchg
call
rclb
sub
pop
sahf
and
pop
in
fmull
or
or
push
sti
add
push
in
pop
dec
push
lock
jnp
test
adc
inc
repz
movsb
xchg
jnp
les
pop
aam
pop
incl
jne
or
xor
decl
and
push
sahf
pushf
inc
andl
fists
fnstsw
repz
add
popf
inc
in
in
adc
add
fstl
add
cli
ret
inc
in
add
xchg
dec
sbb
popa
filds
jo
paddb
out
mov
jg
dec
sub
adc
int3
mov
popf
or
adcl
jo
cmp
jo
imul
mov
adc
in
inc
adc
jo
and
enter
add
inc
push
enter
incb
mov
pusha
scas
mov
jno
cli
push
call
inc
and
inc
xor
xor
mov
mov
push
call
jo
add
and
test
lcall
decl
sbb
sbb
stos
add
ret
and
test
lcall
add
dec
mov
push
dec
negb
out
mov
xor
or
fs
sbb
les
mov
es
scas
dec
ljmp
mov
les
xchg
les
xchg
fwait
mov
lods
test
dec
adc
sbb
adc
pusha
insl
cmc
inc
aad
fiaddl
jb
adc
inc
outsb
lret
data16
ret
gs
sti
add
push
fsubs
push
jb
xchg
cmp
adc
inc
into
fwait
lods
and
movsl
xor
jmp
and
sub
pop
lret
loop
lods
unpcklps
lods
xlat
adc
fmuls
sar
int
fdivp
inc
jmp
xchg
jmp
cmp
jae
add
adc
mov
lahf
sbb
stos
ficoms
add
and
push
aam
jmp
movsb
and
push
arpl
jmp
sbb
mulb
ficomps
test
and
ljmp
push
in
movsb
and
push
test
jmp
test
out
push
mov
in
jne
lcallw
jge
frstor
sahf
loope
data16
jmp
jbe
aam
dec
in
add
cmpsb
jnp
decl
xchg
dec
fsubrp
pushl
movsl
xchg
test
push
add
nop
cmp
xor
addr16
int
popf
dec
push
inc
jo
cmp
repz
imul
mov
rorl
lret
push
sbb
mov
adc
and
lahf
out
push
push
add
popf
inc
test
push
clc
or
add
xchg
out
mov
and
or
pop
cld
xor
inc
call
imul
das
insb
stos
mov
jo
stc
add
daa
push
ja
loop
popf
sbb
movsl
jp
and
add
call
icebp
add
xchg
xorl
movsb
mov
out
add
loope
add
jb
test
adc
cmp
inc
jo
mov
aas
shrl
fisubs
pop
out
lods
jno
cld
addb
jbe
cmp
xor
adc
loopne
in
out
mov
ljmp
shlb
sbb
imul
sub
xor
xor
enter
or
call
out
sbb
cmp
sahf
and
xor
cld
sub
movsb
adc
rorb
push
into
adc
add
call
inc
ds
ljmp
or
gs
lock
jmp
or
incl
flds
dec
lcall
mov
gs
add
fcmovb
xchg
jecxz
inc
mov
fstps
call
int3
sub
push
push
fstps
call
ficompl
jb
push
jge
in
push
inc
mov
scas
js
and
pop
push
andl
testl
leave
loop
inc
cmp
fstps
jmp
cli
insb
ja
in
leave
fwait
out
adc
jo
mov
inc
mov
mov
inc
shlb
insb
loope
push
xchg
sbb
add
mov
js
or
mov
mov
ja
iret
je
jl
cld
pop
and
lcall
aad
jo
fwait
jmp
xlat
add
test
scas
imul
dec
sbb
jmp
fdivrl
jg
or
lcall
jnp
je
and
mov
enter
push
sti
daa
cmp
jo
jno
enter
jo
xchg
pop
fadds
push
mov
sub
mov
aaa
into
sub
cwtl
pop
int3
mov
jl
lods
xor
cli
mov
addr16
repnz
icebp
mov
stc
mov
dec
mov
loop
pop
insb
dec
mov
sub
jo
xchg
bound
mov
dec
pop
js
lods
mov
jo
xchg
sub
and
in
add
mov
lret
adc
bound
pusha
or
shlb
in
imul
and
push
jmp
ss
out
into
pop
ljmp
mov
loopne
sbb
movsl
testl
icebp
sbb
dec
xchg
adc
lea
mov
jmp
sarb
push
inc
sbb
pop
cmp
push
mov
add
or
cli
cmc
add
jae
sbb
out
jmp
sub
leave
pop
roll
jp
add
and
fsubl
inc
mov
sbb
sbb
push
insb
mov
pop
mov
add
fldl2e
lcall
in
push
jno
adc
cmpsl
push
loop
pop
out
jne
pop
data16
shrl
xchg
clc
mov
pop
data16
jo
or
or
cs
out
icebp
rolb
jo
cwtl
jmp
repz
imul
mov
sub
mov
sub
ud0
mov
mov
imul
leave
sub
or
cmp
outsl
negl
call
jmp
add
dec
xlat
push
call
aas
xlat
mov
mov
pusha
mov
xor
andnps
pop
nop
ret
add
push
push
loop
sbb
loope
mov
pop
inc
xor
push
sbb
sub
aam
cmpsb
or
cmc
rcrb
jo
jno
repnz
sbb
sahf
sbb
add
sub
xchg
lods
xor
cli
pushf
cld
jmp
les
js
idivl
addr16
push
mov
adc
pop
sahf
push
popf
inc
in
mov
dec
mov
sub
mov
adc
imul
xchg
in
mov
mov
xor
adc
adc
cltd
sti
jmp
imul
xchg
hlt
mov
movsb
out
imul
popf
mov
push
test
adc
adc
mov
dec
sahf
lret
ret
jbe
in
jmp
pop
add
imul
sub
gs
pop
jmp
add
rorl
imul
ljmpw
jmp
jbe
push
add
push
data16
add
dec
lcall
hlt
jmp
xchg
repz
add
leave
and
jmp
repz
in
cld
fisubl
in
repnz
fwait
adc
add
data16
pop
rcrb
call
into
lods
roll
lock
in
sahf
int
call
andb
inc
mov
cli
jl
pop
in
push
roll
push
push
rcrl
call
xor
dec
decl
movsl
rorl
repnz
in
jo
shl
jecxz
push
pusha
add
or
call
inc
push
cld
sti
test
mov
jo,pt
cs
add
sbb
jo
sbb
fs
call
jnp
add
stc
test
sbb
out
cmpsl
xor
add
mov
mov
pop
add
sbb
xchg
xor
ja
mov
adc
popf
xorl
arpl
lods
mov
cwtl
ds
stos
lret
or
stos
mov
daa
punpcklwd
mov
pandn
xor
stos
jne
jne
call
pop
adc
bound
pop
and
jecxz
and
xor
pop
adc
jmp
add
push
mov
push
mov
jecxz
sbb
stc
stos
in
rolb
mov
push
mov
stos
fstpl
cmc
cltd
jnp
mov
cltd
popa
test
add
frstor
es
mov
dec
mov
in
enter
pusha
sub
jmp
push
loop
jbe
sub
adc
std
adc
ljmp
scas
stos
mov
jo
mov
mov
mov
xor
outsl
dec
adc
jae
popf
lods
jmp
jmp
add
jmp
pushl
adc
lcall
scas
xchg
sti
negb
jecxz
xchg
loop
add
push
adc
repz
add
in
ljmp
xchg
rclb
lahf
push
push
pop
lcall
pop
callw
inc
incl
in
call
xchg
in
dec
jnp
jne
xchg
push
ss
sbb
add
mov
ds
pop
in
faddl
data16
inc
pushl
data16
cmpl
data16
pop
call
mov
jne
xchg
adcl
add
dec
inc
das
call
rorb
jo
xchg
jmp
out
sbb
xor
test
imul
inc
jo
mov
dec
mov
loope
add
add
dec
mov
movmskps
lea
call
fadds
add
inc
sub
iret
mov
enter
pop
call
inc
popa
mov
jo
inc
sub
add
lods
add
cwtl
ja
jg
shl
mov
int3
xor
stc
xor
mov
cli
sub
push
xchg
add
ss
leave
int3
mov
push
mov
jecxz
cmp
stos
xchg
mov
xchg
mov
insb
adc
add
adc
mov
or
and
jmp
push
jno
fidivs
out
orb
xchg
jp
lods
fisttps
mov
jo
add
mov
xor
loop
cmpsb
in
xchg
loop
xchg
sbb
add
or
adc
fimull
out
add
lcall
icebp
movsb
out
inc
insb
cmp
into
outsl
test
scas
js
fdivl
jmp
mov
mov
std
scas
js
add
sbb
in
out
jbe
xchg
inc
mov
xor
in
mov
mov
jns
mov
jmp
imul
lods
fistps
push
int3
and
imul
pop
cs
test
sbb
sbb
movsb
pop
sub
jl
pusha
jle
sbb
add
cld
adc
ds
je
xchg
and
inc
dec
in
jne
jl
jnp
push
in
jne
jl
push
push
push
out
or
loope
inc
scas
mov
out
call
cli
pop
gs
in
pop
shlb
testl
inc
add
pop
cwtl
cmp
pop
xchg
jmp
push
cld
cwtl
inc
or
inc
call
jo
iret
jae
js
outsb
adc
xchg
mov
lock
mov
jcxz
push
add
lahf
ffree
xchg
mov
mov
cmpl
aas
cmpb
rcrl
jmp
pop
pop
setae
push
add
mov
out
mov
decb
jp
push
out
lcall
sub
add
pop
inc
jo
fadds
stc
xchg
fs
mov
jb
pushf
cmp
sbb
and
add
cmpsl
mov
xchg
cli
fwait
cltd
or
xchg
clc
daa
lret
mov
sub
sub
add
movsl
ss
jo
out
xchg
or
xchg
push
xchg
pop
xor
xchg
sti
add
insl
jl
push
lods
dec
sbb
lods
into
sti
xlat
jbe
xchg
lods
scas
xchg
into
aaa
loop
sbb
adc
loop
gs
and
in
push
add
notl
js
jmp
add
lods
jmp
out
lea
lds
push
cld
les
push
hlt
les
xor
stos
gs
mov
scas
loope
fisubrl
rcrb
xchg
jle
js
add
sbb
mov
out
add
add
and
adc
repz
add
add
and
dec
incl
lock
leave
subl
or
push
dec
xor
jne
push
data16
inc
incl
cmc
xchg
in
fisubl
js
es
call
shlb
inc
cmp
dec
pusha
sub
lea
jnp
dec
pop
adc
push
xor
or
cli
stos
add
in
or
rorl
push
jno
adc
pop
enter
loopne
pushl
out
out
cmp
std
and
in
mov
mov
jno
ja
iret
sbb
loope
push
xchg
fsubl
leave
mov
andnps
fstl
add
ja
je
xchg
cmpsl
push
mov
pop
inc
ret
cli
push
orb
push
inc
add
mov
mov
out
push
sbb
cmp
jae
jmp
pop
add
mov
fwait
push
out
loope
xor
dec
nop
mov
stos
pop
xchg
sbb
aaa
sbb
mov
mov
loop
stos
add
or
stc
sahf
int
lods
inc
xor
mov
add
stos
cld
fwait
test
cmc
mov
add
cli
pop
das
push
sbb
and
add
mov
or
loop
dec
xchg
lock
adc
or
stos
xchg
cmpsb
mov
cmpsb
insb
sbb
adc
cmp
movsb
push
jmp
mov
popf
lods
add
in
aam
shll
test
sub
mov
jecxz
or
sub
jmp
in
icebp
ds
js
jmp
mov
clc
inc
push
imulb
jmp
pop
xchg
mov
mov
shrl
mov
push
mov
jmp
xor
mov
sub
cmp
adc
das
mov
jp
jae
xchg
add
fiaddl
stos
stos
je
sub
jno
push
inc
add
push
data16
inc
scas
xor
leave
test
data16
and
dec
jle
jp
test
adc
in
mov
add
repz
notl
call
outsb
shr
call
jle
out
jmp
stos
repz
test
loopne
push
rolb
les
push
data16
pop
sub
cld
mov
adc
lret
movsl
inc
add
jp
jo
dec
add
iret
out
out
test
ljmp
xchg
cmp
push
jmp
xchg
ret
aam
or
pop
jg
je
adc
inc
mov
fstpl
addr16
push
inc
jo
xchg
mov
adc
outsl
push
pop
inc
xor
jnp
add
xchg
ds
add
jmp
les
mov
jo
xchg
je
mov
mov
mov
repz
mov
js
add
cmpsb
out
sti
xlat
mov
out
and
jae
cmpsb
jle
pusha
cmp
jns
cmpsb
mov
fs
lock
jbe
into
add
cwtl
loope
add
jo
mov
xchg
stc
add
loop
add
loop
add
pop
ljmp
cmpsb
sub
dec
mov
loopne
ret
ffreep
mov
adc
mov
gs
sti
push
inc
sahf
ljmp
xchg
cli
movsb
inc
sbb
bound
ljmp
andl
push
out
jnp
push
test
movsl
movsl
cmp
inc
pusha
cli
and
jecxz
cli
cmp
xchg
ret
sbb
jmp
cli
movsb
jmp
jg
lods
popf
ljmp
testb
out
mov
gs
addb
pop
xchg
add
and
pop
push
adc
div
pop
in
jne
dec
xchg
push
negb
rolb
mov
mov
fst
add
sub
xchg
loopne
pop
in
push
inc
jmp
jmp
inc
decl
cltd
rclb
and
inc
pushl
xchg
loopne
pop
in
adc
mov
push
inc
enter
jne
in
pushl
push
call
add
jns
icebp
stc
push
inc
dec
pop
cmpsb
in
ds
in
pushl
jmp
xchg
in
cltd
jmp
aaa
gs
mov
jo
imul
cld
dec
add
testb
lcall
jle
fwait
or
sub
push
jecxz
add
incl
xchg
mov
jo
or
mov
out
xor
lahf
push
mov
xchg
les
dec
xchg
lcall
cs
lcall
loop
push
mov
xor
inc
mov
aam
ss
movsl
xchg
insl
popf
push
mov
push
cmp
mov
pushf
xchg
sub
fwait
movsb
adc
orl
sbb
inc
xchg
mov
pop
push
fwait
stos
push
xchg
and
mov
pushf
adc
mov
sbb
les
imulw
adc
or
movsl
aad
mov
in
out
es
or
out
shl
call
jmp
pusha
insl
push
test
sti
inc
and
add
daa
push
jmp
xor
jbe
popa
data16
movsb
gs
xlat
push
dec
pop
mov
push
jmp
je
adc
jmp
adc
or
mov
or
scas
sub
popf
movsb
out
xor
leave
lea
js
mov
push
in
std
mov
jne
jge
push
dec
addr16
movsl
xchg
pop
push
jns
data16
ret
out
jge
dec
fisubs
dec
loope
outsb
clc
add
lock
call
shlb
clc
add
jns
sbb
jne
jl
dec
dec
addr16
in
xor
cs
sbb
jns
in
inc
jae
inc
cltd
cld
adc
mov
mov
addr16
xor
jo
sbb
mov
adc
jo
xchg
je
loope
push
mov
sbb
pop
add
aas
inc
roll
jo
imul
mov
push
sbb
or
sub
cs
paddsb
add
aad
xchg
lret
outsl
add
xchg
cmp
lock
add
imul
and
inc
jo
out
into
mov
add
mov
add
xchg
add
jo
js
jno
mov
ja
loop
andb
jg
loope
add
faddl
xor
adc
add
jnp
mov
aas
add
cmc
rdpmc
mov
jb
pop
arpl
jl
lock
jo
stc
cs
cmp
xor
ljmp
jo
pusha
fidivrl
lahf
jmp
sbb
mov
sub
lock
add
loop
adc
adc
mov
test
lahf
and
push
adc
jbe
sbb
jmp
out
pop
sbb
andb
jae
jmp
imul
sub
pushf
arpl
repnz
jecxz
cmp
cli
aaa
and
push
jmp
mov
adc
data16
jmp
adc
sub
sub
inc
jle
aam
sub
fsubrp
je
jmp
mov
push
decl
cwtl
cmp
fsub
pop
rcr
sahf
inc
sub
js
jecxz
jmp
insl
pusha
push
mov
jmp
dec
xchg
inc
in
add
mov
or
lahf
inc
imul
jmp
pushf
or
adc
add
and
shl
out
cmpsl
arpl
xor
pop
call
bound
out
ud0
sub
in
in
add
jne
arpl
icebp
sti
pop
incl
data16
mov
jmp
arpl
jo
add
xchg
push
and
jmp
mov
das
xor
sub
ret
xchg
pusha
cld
fcomi
repz
jmp
jg
outsl
in
mov
popfw
xchg
imul
and
je
mov
fdivrp
aaa
int
enter
push
sti
lods
nop
ret
cmp
xchg
in
xchg
dec
ud0
cmp
popa
ljmp
push
mov
inc
fmuls
aam
iret
loop
add
cli
in
mov
outsb
mov
aas
insl
jle
sahf
fwait
sub
add
sahf
push
lret
stc
or
push
imull
loope
add
xchg
rol
outsl
pushf
outsb
addps
mov
in
in
dec
fwait
sub
dec
shrb
jg
imul
cmc
sub
inc
mov
fdivrl
into
xchg
cli
imul
test
mov
lcall
fistps
xchg
jmp
dec
xchg
adc
fwait
jmp
jmp
or
shrl
and
jmp
pop
pushf
jmp
test
pop
push
ljmp
add
fwait
jmp
jae
fisubrl
rclb
xchg
shlb
adc
call
or
inc
mov
dec
into
mov
cwtl
jmp
out
lret
add
push
mov
mov
mov
pop
add
push
in
jne
or
in
mov
adc
lcall
lcall
ds
div
cs
jne
or
in
mov
adc
decl
adc
repnz
in
lcall
out
idivl
in
jne
or
in
mov
adc
lcall
adc
add
cmpsb
in
lcall
push
negl
pop
in
jne
or
in
mov
push
in
pushl
fwait
pop
ficoms
cmpsl
lock
in
call
jo
mov
out
aam
jle
xlat
movq
or
std
es
mov
das
outsb
mov
das
outsb
cwtl
inc
lahf
xlat
shl
mov
jecxz
cwtl
add
add
jo
push
pop
jo
lcall
jae
in
ja
test
outsb
mov
lret
lds
outsb
movsl
movsl
outsb
je
mov
inc
pop
pop
pop
shrl
sbb
push
repz
jecxz
adc
ret
jo
mov
pshufw
add
mov
pshufw
mov
int3
sub
jl
sbb
push
mulb
js
jl
jmp
testl
jle
xorl
imulb
add
xchg
loopne
jecxz
addl
ljmp
out
icebp
outsl
mov
xchg
fdiv
and
loop
push
pop
adc
xchg
or
shr
jae
cwtl
test
mull
pop
xchg
mov
mov
rcr
jae
push
pop
movsb
xchg
gs
dec
mov
sub
rcr
daa
mov
jmp
add
pop
or
cmp
orl
xchg
xchg
iret
mov
divl
and
lahf
fistl
rcrb
mov
jae
xchg
fstps
nop
push
sub
insb
mov
add
data16
pop
inc
sbb
or
xchg
adc
sbb
in
mov
dec
mov
inc
call
shlb
add
mov
pop
inc
cltd
or
push
cltd
loope
lock
push
add
or
rcr
idivl
add
lcall
mov
loope
inc
xchg
and
incl
mov
or
push
jo
popf
inc
or
pop
mov
je
inc
cmp
pop
orb
test
jp
adc
dec
fmuls
fildll
pop
test
add
cmp
cld
imul
leave
inc
sar
aaa
and
add
call
mov
out
mov
mov
dec
fsubr
imul
sub
push
add
mov
fnstcw
push
push
xchg
int3
mov
repnz
aam
mov
inc
js
xchg
dec
sbb
or
mov
loop
push
xor
add
and
js
inc
ljmp
inc
xchg
je
outsl
mov
inc
jae
cmpsb
mov
xchg
sub
xor
mov
in
out
ja
mov
inc
jle
cmp
jo
xor
loopw
add
mov
dec
fistl
jmp
jae
adc
gs
aad
xchg
fstl
push
jmp
and
adc
add
loope
jmp
je
gs
ljmp
jmp
xchg
inc
sbb
outsb
inc
push
inc
inc
xchg
jmp
mov
in
push
lcall
inc
loope
jecxz
pop
xchg
gs
xor
pop
push
sbb
xchg
jmp
jae
sub
push
mov
sbb
popa
rcll
pop
xchg
in
add
in
push
jle
dec
pop
out
mov
add
ljmp
xchg
adc
or
lahf
test
add
cmp
dec
cwtl
out
mov
add
out
xchg
adc
in
fwait
in
incl
out
idivl
sbb
jno
push
inc
leave
sbb
inc
loope
sbb
mov
scas
lock
sbb
add
jl
mov
lcall
jno
jo
js
pop
loopne
je
jae
add
fs
jecxz
inc
aas
andb
mov
das
ss
call
pop
jbe
notb
test
je
mov
inc
pop
pop
gs
pop
gs
imul
push
call
out
dec
neg
pop
gs
pcmpgtd
iret
xchg
jmp
fs
jbe
mov
data16
xorb
inc
cmpsl
aaa
data16
and
add
xlat
gs
bnd
ja
add
mov
or
sbb
or
pop
jnp
mov
pop
cwtl
in
je
out
mov
insb
ds
hlt
imul
sar
scas
aam
les
movsl
mov
jns
jbe
mov
add
jp
pshufw
inc
imul
mov
arpl
leave
mov
es
clc
and
rcll
sub
cli
je
data16
popl
adc
mov
jp
stos
and
xchg
jno
adc
sub
or
xchg
es
mov
pop
push
mov
dec
sbb
push
and
aad
add
pop
adc
xchg
dec
jp
les
adc
daa
push
jmp
clc
sti
jmp
arpl
out
xchg
cli
xchg
jecxz
adc
jnp
lods
and
jmp
icebp
and
pop
pop
test
loop
loop
loopne
add
jecxz
mov
adc
int3
push
in
pop
pop
loop
add
loop
add
loope
inc
add
sahf
test
in
jmp
mov
call
and
pusha
add
or
jmp
add
adc
bound
push
stos
orl
fwait
test
or
push
clc
push
push
scas
jmp
push
dec
push
add
ret
testl
cli
dec
inc
adc
xchg
mov
push
incl
aam
je
and
outsl
les
push
hlt
pusha
dec
jnp
les
ret
push
pop
dec
iret
cmpsl
aaa
add
mov
dec
imul
test
push
inc
inc
imul
or
scas
testl
popa
imul
bound
out
add
popa
jmp
sti
imul
ret
and
jo
test
scas
sti
jle
jle
jle
cmp
sub
or
data16
fdiv
dec
adc
not
pop
push
pop
ds
add
sub
jno
repnz
xchg
int3
jo
mov
sbb
pop
add
mov
xor
test
mov
adc
mov
jno
mov
dec
mov
xchg
jle
mov
hlt
cmpl
and
push
and
add
and
inc
in
dec
ret
mov
mov
rorb
pushf
cmpl
loopne
jmp
ret
xchg
jmp
rclb
xlat
mov
je
jp
test
rorb
lahf
mov
ficomps
jecxz
add
mov
xchg
adcl
jl
jmp
dec
adc
movsl
lea
jmp
mov
push
cli
add
in
call
ds
out
negl
sti
repz
aad
in
incl
in
ds
inc
ds
in
mov
adc
jmp
mov
push
clc
add
stc
data16
orl
or
stos
cwtl
in
ficompl
call
pushl
in
mov
jne
scas
outsb
dec
dec
fsubrp
xor
and
mov
xchg
push
inc
fldcw
repz
cld
clc
in
pushl
incb
inc
arpl
pusha
jl
mov
andnps
pop
nop
ret
lods
icebp
ret
imul
and
xor
xor
repz
ljmp
jo,pt
fisubl
push
inc
repz
jo
call
out
dec
jl
mov
rol
and
es
out
xor
or
sar
shld
lock
jne
shlb
adc
out
aaa
pusha
lods
test
cld
testb
mov
jo
push
repnz
xlat
and
inc
jae
push
jns
fs
mov
jmp
push
inc
fimull
loop
sbb
cmp
adc
outsl
orb
jecxz
test
scas
xlat
daa
mov
inc
sbb
in
mov
or
mov
lods
xchg
daa
and
add
add
mov
fdiv
outsl
jp
xchg
in
jg
sub
fldcw
aaa
fs
xchg
movsl
xor
test
jg
sub
cltd
sub
pop
and
jb
cmp
xchg
jnp
lret
sahf
sbb
jmp
jl
sti
push
cmp
push
add
xchg
ds
xchg
push
mov
adc
and
test
push
imul
pop
test
fwait
xchg
mov
add
xchg
out
cmp
repz
out
in
pop
ja
roll
mov
in
dec
and
push
mov
data16
push
sub
ss
mov
pop
ficoms
add
mov
loop
call
andb
pop
cvtpi2ps
dec
xchg
stc
pop
push
add
pop
mov
jne
sub
data16
repz
stc
in
jmp
movsb
imul
xchg
jmp
mov
jo
mov
outsl
cs
je
mov
ds
dec
fcomps
cmp
incl
subb
mov
mov
jnp
add
sbb
pop
out
jbe
dec
xor
mov
lock
add
js
push
int3
dec
mov
jnp
call
push
outsb
out
pop
scas
js
adc
lods
inc
jo
js
jo
sti
mov
pop
jnp
add
cs
movsb
les
std
es
inc
loop
loopne
mov
loop
out
ja
int3
andb
adc
sti
mov
xchg
jo
stc
pop
pusha
test
push
cmpsl
jl
sub
jg
mov
cli
jne
iret
jnp
mov
jg
loop
testl
div
bound
mulb
jns
dec
test
test
insl
adc
into
add
notb
pop
test
jp
and
loop
xor
mov
adc
jae
cmpsb
out
pusha
sub
call
test
stos
iret
addl
lods
push
jmp
dec
pop
and
add
cmp
call
pop
js
jb
loopne
bound
cwtl
and
scas
sbb
jae
fldenv
add
lcall
lods
cs
or
jae
pusha
call
add
sbb
movsl
mov
add
leave
pop
and
mov
fcmovb
adc
pop
iret
hlt
cmp
ljmp
adc
dec
fidivs
fistpl
push
out
nop
adc
sbb
xor
mov
jmp
adc
es
push
sti
lcall
pop
push
add
sti
data16
scas
jae
push
mov
sub
mov
addr16
sbbl
popa
cmp
icebp
jl
mov
sbb
jo
loop
or
in
pop
jne
jae
inc
push
add
je
add
in
aas
imull
push
add
addr16
push
pop
aas
add
loope
mov
je
js
add
pop
dec
rorl
inc
jo
jecxz
cwtl
jne
lcall
rcl
decl
xlat
jae
jg
out
movsb
es
sub
push
add
push
imul
push
ret
inc
jns
add
sbbl
pop
rep
es
jo
stc
add
es
xchg
jnp
ret
pop
mov
inc
add
subl
rcr
test
mov
mov
jp
add
add
loop
pop
dec
rcll
jmp
or
ss
mov
inc
xchg
and
ljmp
das
lock
adcb
aam
sbb
mov
es
inc
gs
stos
imul
negb
adc
jmp
mov
sbb
dec
shr
sbb
jmp
bnd
add
fcoms
push
loop
dec
push
negb
rcll
aas
gs
push
jnp
insl
and
sahf
out
xor
adc
dec
pop
jbe,pn
in
shl
jno
es
out
pop
dec
jg
loop
xor
adc
jg
add
xchg
cmpsb
push
xchg
clc
imul
adc
dec
jecxz
or
in
add
pop
mov
mov
jnp
push
xchg
pop
je
xor
iret
jmp
cltd
pop
lcall
in
or
cltd
or
pushf
shr
jne
or
rcrb
aad
or
icebp
in
jmp
imulb
or
sub
push
jle
dec
fcmovu
loop
jb
daa
in
sub
jle
pop
xor
mov
pop
add
addb
mov
xlat
push
jne
push
mov
in
xchg
jl
mov
or
inc
jnp
or
call
or
jmp
je
lea
jge
jge
ja
add
movsb
jo
call
sub
inc
jo
scas
xor
mov
enter
jo
inc
fs
push
jl
lahf
hlt
sbb
sbb
xchg
jl
loop
xlat
jns
imul
and
mov
popf
jge
push
cmp
into
xchg
xchg
xlat
jle
cmpsb
addr16
push
add
cmp
jo
adc
add
pop
mov
movsb
add
loopne
adc
hlt
in
es
jnp
ret
out
test
xlat
lret
mov
sbb
jl
inc
sbb
xorl
and
ds
cmp
out
cli
inc
sahf
cmp
xchg
dec
and
imul
adc
out
gs
adc
shr
add
aas
adc
jae
lods
xor
pusha
sub
loop
insb
add
jmp
in
movsl
std
xchg
jl
adc
je
xor
jge
out
mov
out
fstps
adcl
insl
xchg
stos
push
jl
sbb
jmp
mulb
lahf
push
jl
xchg
fidivrs
in
mov
or
pop
add
mov
in
incl
push
test
iret
jmp
adc
lcall
pop
cmpsl
ss
add
test
add
lcall
adc
inc
in
test
add
jmp
add
call
push
pop
sbb
add
sbb
or
sbb
jl
call
push
mov
sbb
rorb
push
sub
dec
rcll
add
ficomps
xchg
sbbb
jo
lahf
addr16
aad
hlt
or
cmpsb
out
jle
add
inc
add
negb
dec
mov
cli
and
jnp
push
test
nop
mov
addb
pop
ds
jmp
dec
inc
pop
ja
mov
dec
ljmp
orl
nop
lahf
out
jmp
mov
fistpll
dec
mov
xor
out
inc
std
loop
imul
push
or
lds
loop
in
push
sub
push
pop
xchg
pop
ss
jmp
outsl
js
lahf
gs
jmp
lret
mov
aam
loop
pop
cld
xor
mov
aaa
jns
cwtl
shll
pop
rcrb
jns
push
adc
mov
pop
or
int3
pop
add
add
out
xor
lret
adc
lods
js
sbb
jmp
addb
call
mov
jb
push
jge
xchg
jp
jb
adc
jmp
and
push
call
mov
jb
insb
shlb
xchg
sbb
xchg
jp
jb
adc
daa
jl
jmp
jae
shlb
gs
or
adc
jae
mov
jae
pop
sub
jmp
push
sub
fstps
sbb
jae
rolb
fidivrs
inc
in
add
loope
add
jecxz
lcall
or
jecxz
mov
pop
sbb
fsts
in
jne
or
or
fsubrp
jne
or
dec
out
push
stc
or
dec
jecxz
add
jecxz
add
jecxz
add
loop
add
and
hlt
leave
mov
es
push
add
adc
das
inc
popf
jmp
pushf
adc
iret
jo
inc
incb
inc
test
repz
jo
sbb
inc
mov
lods
dec
addr16
mov
pushl
orb
repz
push
push
jo
dec
jae
loope
dec
xor
jnp
ret
mov
lcall
inc
fnstsw
punpckhdq
es
mov
inc
movsl
fstpt
push
inc
incb
movsl
jecxz
and
dec
enter
addr16
incl
jecxz
add
jo
stc
lcall
or
and
lods
pop
xchg
lcall
mov
fldl
insb
cli
mov
jno
repnz
imul
mov
js
outsb
lds
xchg
lds
mov
sub
mov
stc
shlb
mov
push
adc
add
cmpsb
push
rorl
mov
iret
lret
sub
pop
dec
add
adc
xor
jmp
xchg
and
jns
dec
out
out
into
iret
into
cmp
insb
jmp
out
jae
mov
in
jb
lahf
insb
adc
adc
sub
out
sbb
out
ljmp
out
out
xchg
cmp
cltd
addr16
push
in
jecxz
lods
ret
and
pop
fidivrl
test
out
mov
cld
mov
xchg
ret
jnp
out
jae
pop
sub
jecxz
add
sti
call
movsb
fucomip
and
jmp
push
movsl
out
test
adc
push
push
dec
leave
or
in
dec
mov
decb
sbb
add
sub
add
cs
mov
nop
cmp
mov
cmp
fbld
or
add
enter
push
rcrb
push
cmp
scas
test
sub
fistps
int3
jg
in
sub
adc
test
call
jo
dec
outsl
std
cmp
jo
cwtl
test
jae
cmc
add
andl
out
nop
xchg
outsl
std
lmsw
negl
cmp
fdivrs
outsl
mov
or
mov
cmc
cmp
xchg
mov
add
xchg
ret
xchg
inc
dec
jg
and
ja
inc
adc
rcl
cli
out
push
std
pop
and
shlb
decl
or
mov
incl
std
loop
push
jb,pn
add
jp
std
pop
jb
inc
jle
jbe
jo
jb
pop
pusha
mov
cmpsl
cli
rolb
int3
rcr
jno
add
mov
pop
push
inc
outsb
lods
lock
sarl
imul
inc
lods
jno
add
stc
mov
mov
add
jo
stc
imul
stc
add
out
repz
cmp
outsb
jno
iret
jg
mov
jno
xchg
lds
inc
inc
jno
ss
ja
sub
lret
jmp
mov
loop
xchg
mov
loop
icebp
sahf
imul
add
in
jmp
inc
jo
fdivp
test
inc
mov
in
loop
mov
imull
in
loop
stos
jmp
stc
jl
lods
adc
jnp
adc
iret
jle
lods
int3
mov
jmp
push
sub
jmp
sbb
adc
pop
in
or
in
decl
roll
out
add
scas
push
hlt
sbb
adc
dec
das
sti
add
in
fcoml
pop
int3
pop
pop
int3
pop
pop
push
imul
fidivrl
incb
fdivl
push
call
jge
xchg
jge
stc
jmp
leave
mov
popf
inc
shll
clc
mov
stc
aas
notb
in
call
xor
mov
push
sbb
cmp
sbb
sbb
fcomip
cmp
inc
sbb
sbb
mov
sbb
dec
mov
xchg
ret
loopne
jmp
gs
jl
inc
je
ja
flds
vmptrld
jns
jl
mov
sbb
sub
aas
rep
inc
incl
inc
je
aas
jmp
mov
cmp
push
jmp
xchg
ret
movsb
lret
cmpsl
addr16
incl
sti
add
lahf
loop
add
loop
pushf
int3
adc
push
outsb
or
fwait
mov
pusha
icebp
inc
sbb
add
in
dec
outsb
js
and
mul
push
and
sbb
sbb
add
cmp
je
jbe
jo
mov
fnclex
stc
add
ss
aas
clc
stc
fnsave
sub
dec
loop
jae
icebp
pop
and
out
negb
stc
add
daa
xchg
push
add
daa
xchg
push
add
adc
and
and
cmp
jmp
jae
cli
jmp
loop
repnz
aaa
sub
jmp
mov
jns
cmp
sti
adc
es
faddl
mov
data16
imul
add
jmp
inc
mov
popf
sbb
insb
stos
jmp
scas
push
loop
sub
sbb
inc
adc
in
or
mov
sbb
cltd
loopne
push
mov
roll
fists
add
popa
add
mov
pushf
inc
mov
push
call
xchg
mov
adc
aam
in
lcall
loopne
inc
test
adc
or
push
fmul
adc
popa
sub
stos
je
sub
hlt
fsts
popf
add
mov
mov
inc
fstps
push
aam
fists
add
loopne
add
je
das
jo
push
or
jmp
repz
xor
je
cld
in
xchg
cmp
jne
or
jp
add
ret
adc
cltd
cmp
add
popl
add
repz
dec
pop
out
js
add
dec
pop
out
jp
add
dec
mov
add
sbb
jg
adc
out
sbb
jmp
cmp
pop
decb
jp
add
mov
mov
addr16
cmp
insb
movsl
lcall
push
add
jp
push
xchg
rolb
mov
scas
les
addb
push
sbb
mov
adc
sti
push
push
mov
rcll
pop
and
pop
xor
xor
xchg
inc
ret
add
mov
adc
sbb
aad
out
subl
mov
cli
fcmovnu
mov
sbb
jp
dec
mov
imul
fimull
call
rclb
lret
call
jne
adc
sbb
jbe
inc
in
sub
loop
jmp
add
push
or
adc
jecxz
jmp
mov
imul
es
loop
jmp
scas
push
jmp
and
mov
out
lcall
add
adc
mov
mov
out
in
add
ficoms
add
mov
dec
fsubrp
jb
and
push
loope
adc
mov
out
hlt
push
mov
mov
cs
movsl
jmp
std
ret
inc
push
add
nop
adc
inc
or
pop
test
jmp
add
in
or
cmp
in
add
push
hlt
stos
aad
in
ret
inc
inc
testb
bound
jo
pop
out
jp
add
mov
subb
dec
ljmp
lret
push
leave
decl
pusha
xor
sbb
mov
jo
xor
mov
xor
xor
ud0
test
pop
leave
cmp
decl
mov
pusha
mov
push
mov
push
dec
push
mov
jo
cmp
call
loop
and
cmp
mov
aam
lock
add
mov
mov
add
mov
test
loopne
cmp
jg
dec
lods
xor
insb
and
or
add
rcrb
loop
and
or
add
popf
lods
mov
pop
and
or
add
rcrb
loopne
mov
lods
mov
or
enter
pop
rcrb
loop
and
or
add
mov
adc
nop
lcall
sbb
adc
nop
xchg
dec
sub
popf
add
adc
insb
gs
cmpsb
push
orb
gs
mov
dec
sub
lea
adc
jb
sub
pop
add
adc
push
test
gs
inc
nop
loop
test
gs
cs
fimull
jae
xor
push
push
into
dec
test
gs
add
out
les
pop
sbb
jmp
test
les
pop
cwtl
fsubrp
and
scas
les
pop
mov
jmp
jno
push
add
les
pop
dec
fsubrp
and
out
les
pop
fsubrp
and
out
les
cwtl
fsubrp
and
into
ret
inc
pop
or
jmp
xor
push
add
loopne
and
outsb
ret
jle
add
fucomip
and
dec
ret
push
fcomp
jmp
jo
mov
sbbb
mov
mov
cmp
decl
test
sub
mov
pushf
dec
mov
mov
movsb
cmp
mov
lods
sbb
mov
mov
mov
mov
inc
jo
or
stos
cmp
decl
lds
lret
and
and
cmp
and
xor
lods
and
add
loop
add
fdivrp
test
ficomps
add
cmc
add
imul
add
mov
jo
icebp
hlt
inc
fiaddl
inc
jae
js
in
mov
stc
add
lahf
and
cld
xlat
stc
add
std
add
in
mov
stc
add
out
or
stc
add
ljmp
jae
push
add
loop
enter
add
aaa
add
adc
pop
jmp
sbb
shl
jae
adc
jae
insl
loope
cmc
adc
jae
push
jmp
jae
sbb
popa
jmp
add
in
sbb
add
jmp
jae
adc
mov
jmp
pushf
cltd
or
jae
shr
jae
adc
loop
loope
std
adc
jae
push
jmp
jae
adc
enter
push
call
push
cld
push
jmp
mov
in
mov
and
jmp
add
adc
add
in
jl
popa
jmp
pusha
dec
ltr
xor
mov
loop
decb
in
and
loop
orl
add
movsl
sbb
sbb
in
add
pop
xchg
sbb
in
or
push
str
in
sarb
mov
jmp
das
push
mov
push
ltr
xchg
sbb
jo
mov
nop
sbb
or
jns
pop
lds
je
jp
xor
jmp
or
jge
add
ja
xor
cmpsl
ljmp
inc
cmc
push
mov
out
repz
adc
cmc
push
call
jno
repz
fcompl
sti
lret
jo
push
mov
cwtl
sbb
mov
cmp
call
nop
pop
je
stc
add
and
iret
imul
xchg
xor
loop
into
js
jp
jae
stc
jp
stc
cmc
add
jb
pop
out
add
pusha
leave
jmp
pop
pusha
addb
imull
int
stos
cs
cli
mov
fbstp
std
pop
add
cs
jo
jb
jg
stc
add
imul
lock
std
add
jp
je
stc
cmp
in
or
mov
dec
adc
dec
jecxz
std
ja
adc
push
imul
jmp
push
out
jmp
jae
xchg
jo
out
jmp
shlb
push
jmp
xlat
in
inc
mov
aam
movsb
adc
out
fnstenv
std
out
aaa
aam
ret
cmc
cld
xchg
mov
out
popf
push
jae
adc
test
out
mov
flds
fs
adc
fimull
fstpl
inc
dec
ret
xchg
push
jne
inc
push
mov
sub
adc
xchg
out
xchg
leave
cmp
or
inc
mov
inc
incl
lock
leave
imul
xchg
or
pop
inc
push
mov
pop
add
loopne
jne
insl
xchg
adc
push
add
in
add
push
jnp
jo
testb
jo
sbb
clc
inc
push
test
ltr
into
push
jae
enter
shll
add
dec
pushf
push
idivb
adc
jo
cwtl
pop
je
cmovo
mov
cwtl
test
ret
push
add
dec
popf
pslld
sar
adc
cmp
inc
stc
lret
pop
add
dec
iret
mov
xor
ret
insb
loop
add
adc
jo
outsl
adc
fwait
inc
out
icebp
cli
xchg
jnp
stc
add
stc
jo
jg
stc
add
arpl
or
mov
add
jae
insb
loop
mov
stc
cmc
add
icebp
add
push
ljmp
mov
pusha
push
add
test
in
mov
pop
jo
repnz
not
add
sub
jg
pop
int3
or
sub
mov
pop
xor
cmp
loope
repz
mov
insb
push
in
loop
adc
or
ljmp
outsl
loop
sub
xchg
in
loop
outsl
ficoms
jmp
jae
cwtl
stc
jno
in
sub
jmp
adc
fdivr
xchg
addr16
adc
cld
pop
or
jae
push
jo
mov
push
jmp
ja
adc
icebp
push
jmp
inc
push
shlb
jecxz
int
loop
pop
pop
insl
xchg
stc
outsl
loop
pusha
cmc
icebp
push
jmp
pop
cli
push
add
in
mov
std
push
add
pop
rorb
dec
in
jne
insb
xchg
adc
adc
pop
and
adc
add
pop
sbb
in
xchg
loope
add
adc
int3
cmc
xchg
xchg
loope
add
in
mov
stc
push
add
gs
adc
in
mov
push
add
mov
add
stc
push
add
out
push
add
cwtl
test
sarb
dec
jns
jo
xchg
pop
je
push
dec
popf
sbb
je
pcmpeqw
dec
jns
jo
cwtl
lods
fs
push
add
dec
lcall
loopne
pop
xor
mov
shlb
pusha
les
cmp
dec
sldt
jl
cmp
sbb
ret
idivb
inc
into
xorb
stc
clc
in
cmc
add
push
incl
daa
loop
add
fnstsw
jno
leave
decb
loope
jg
stc
add
loope
inc
push
ljmp
xchg
pop
xchg
cmp
imul
inc
push
dec
addr16
rcr
xchg
and
add
dec
cmc
cmp
push
mov
inc
outsl
loop
mov
imul
mov
loop
or
cli
cli
add
add
mov
arpl
ficoms
jp
ds
jnp
xchg
mov
pop
call
shll
into
out
mov
add
jae
cwtl
mov
jbe
dec
jno
push
xchg
stc
outsl
push
jmp
or
pop
jmp
scas
fstl
push
push
adc
push
les
fcoml
stc
das
push
jmp
repnz
push
jmp
add
adc
cld
pop
add
jae
xchg
addr16
ficoms
jmp
stos
and
in
loop
add
fs
adc
loope
mov
push
add
and
add
arpl
add
loope
xchg
inc
cwtl
rcr
pop
adc
fcmovnu
inc
mov
or
cli
into
sbb
call
stc
stos
add
adc
icebp
push
add
pop
lea
popa
jmp
dec
mov
cmpl
das
sbb
arpl
call
out
cmp
pop
jmp
adc
sub
lock
jo
movsl
add
xchg
pop
and
pop
out
push
sub
pop
popf
ret
pop
mov
out
loop
add
jo
sub
jae
cmp
stos
and
cmpsb
inc
cmp
add
mov
pop
rcrl
pop
sub
sti
cmpl
dec
int
mov
jmp
das
rolb
jno
inc
add
test
add
dec
cwtl
popf
dec
inc
ltr
loop
test
fdivrp
add
ret
repnz
js
jnp
je
stc
mov
cli
std
add
jo
jb
pop
fdivrp
add
pop
jmp
addl
and
jno
push
es
pop
jmp
cmpl
sub
insb
loop
mov
icebp
cmc
add
jnp
je
stc
push
push
pop
xchg
fbstp
stc
scas
mov
ljmp
or
mov
icebp
adc
jae
lcall
jae
xchg
stc
out
jmp
stc
push
jmp
jae
adc
pop
jle
pop
loopne
xchg
xchg
ljmp
pop
push
dec
aaa
mov
popa
out
jo
adc
jo
push
or
mov
sti
push
lds
mov
lahf
test
ljmp
and
jmp
jae
add
sti
addr16
jae
cltd
outsl
jl
adc
xor
add
rcrb
add
out
xchg
push
jmp
test
push
jmp
cld
out
xchg
xchg
push
jmp
inc
rolb
add
in
mov
ljmp
popf
in
mov
in
push
add
inc
add
cmpsl
repz
sbb
pop
sub
xchg
in
inc
cmp
pop
jge
add
dec
in
sbb
pop
pop
add
in
sarl
aaa
rorl
jmp
pop
loop
push
jo
loopne
xor
sbbl
push
sti
push
lret
pop
cmpsb
dec
dec
mov
js
pop
xchg
dec
sahf
pop
mov
in
lods
push
mov
cmp
cmc
cmpsb
lret
mov
daa
jnp
cmpsl
mov
cmp
cmp
push
jmp
xchg
dec
jne
in
ljmp
ltr
loop
jmp
push
add
cmp
mov
pop
jge
jno
ret
les
mov
jg
or
loop
jle
out
add
jmp
mov
out
add
int
mov
loope
add
add
add
jo
jae
je
stc
mov
loop
cmpb
cld
lret
clc
push
add
out
add
aas
xor
push
adc
psraw
clc
xor
sti
mov
push
lret
arpl
add
in
lods
loop
insl
lods
loope
mull
daa
addr16
bound
call
adc
adc
add
loop
movl
adc
shrl
bound
xchg
jmp
push
jecxz
jmp
inc
fistl
jmp
mov
ljmp
dec
jae
jae
adc
arpl
adcb
cmp
inc
or
dec
add
loop
fcoml
fs
jmp
jae
fldl
add
or
dec
and
out
add
ljmp
in
inc
mov
lds
mov
adc
into
pop
flds
fabs
xchg
push
mov
sub
cli
inc
sahf
dec
fcmovne
repz
inc
xor
enter
fdivrs
jb
int3
push
and
int3
ja
jno
leave
unpckhps
in
lcall
cltd
mov
int
call
loop
das
adc
xor
lds
out
and
mov
dec
mov
adc
call
lods
xor
sbb
insb
shll
add
xor
shll
pusha
loopne
jne
ret
mov
adc
jo
fsts
rclb
icebp
and
sti
outsb
repz
repnz
inc
add
pop
dec
stos
inc
and
add
into
mov
pusha
dec
sub
insl
leave
mov
add
stos
aaa
cmp
pusha
fcoms
ljmp
inc
cli
add
cmc
pop
jo
jmp
sti
fs
jo
xor
fists
sub
and
fwait
jo
inc
push
inc
dec
pusha
add
push
arpl
cmc
add
add
cmp
dec
push
out
add
xor
pop
xor
dec
add
call
scas
fstl
sti
cmpsb
aad
cli
mov
adc
sahf
adc
jnp
out
sti
sub
adc
or
push
call
dec
pop
loope
pop
adc
aas
in
push
sub
pop
or
mov
lods
lods
sbb
or
add
dec
xchg
scas
movsl
divb
inc
mov
in
jae
pop
jo
ljmp
outsl
loop
popa
xchg
dec
cld
push
fcompl
inc
out
mov
stc
mov
ret
and
aaa
dec
loop
test
xor
mov
jb
push
jmp
xchg
test
add
movsl
nop
rorl
adc
pop
xchg
fiaddl
mov
shl
popf
dec
dec
pop
rcrl
test
fists
add
pop
rorb
add
int
fstp
adc
sbb
adc
or
pop
roll
int
adc
cld
scas
cwtl
mov
loope
add
xchg
and
in
mov
inc
ltr
in
mov
testl
cmp
test
push
add
rol
add
imul
jmp
cli
push
clc
inc
push
sahf
pop
aas
jno
incl
jo
cmpsl
mov
pop
mov
ficomps
add
test
dec
push
out
stos
adc
jo
cwtl
push
cmp
mov
ret
mov
mov
pop
inc
jmp
hlt
add
pop
jmp
incl
jo
enter
rorl
loop
fcoms
sub
and
xorl
loop
iret
xchg
out
adc
mov
ljmp
scas
aad
dec
call
pusha
jle
fdivrp
add
or
rclb
arpl
sub
out
arpl
addr16
xchg
pop
jo
jo
xchg
fdivrp
add
loop
add
les
jo
jnp
jb
stc
ljmp
pop
ljmp
inc
adc
aas
lock
dec
xchg
xor
jmp
xchg
jecxz
mov
not
out
jmp
pop
push
adc
add
outsb
lock
adc
neg
psubsw
adc
jae
outsb
lock
pmaxsw
dec
adc
jae
dec
add
sbb
ja
adc
xor
add
sbb
inc
stos
mov
xchg
xchg
pop
pop
sub
add
cwtl
dec
mov
sub
sahf
inc
mov
dec
and
xor
add
dec
imull
gs
lcall
and
rorb
hlt
das
idiv
in
mov
fcompp
mov
mov
ret
pushf
shr
ds
jmp
les
jge
cwtl
into
mov
lds
and
and
fucomp
cmpsl
adc
pushl
cwtl
ret
bound
das
pop
lock
icebp
add
push
sarb
cld
out
sub
daa
push
add
xchg
push
add
imul
sti
push
daa
and
pop
and
outsl
rcr
and
push
rcl
out
insl
cmp
mov
pop
xchg
adc
adc
verw
lret
mov
inc
xchg
je
lea
add
in
sahf
add
mov
enter
xor
mov
inc
or
cmp
rcl
and
js
ljmp
push
jo
push
stos
jnp
scas
popf
sbb
add
out
stc
clc
in
adc
add
scas
push
ja
nop
add
jo
xchg
add
arpl
stc
add
and
aam
and
sar
xchg
aad
rclb
add
dec
jl
ljmp
fdivr
scas
sbb
aam
incl
in
sub
mov
sti
inc
cltd
push
adc
jmp
sub
or
shlb
and
jmp
stc
cli
and
jmp
sub
push
lds
cmp
aam
inc
xchg
mov
or
mov
dec
dec
stc
cwtl
xchg
pop
fsubrs
add
lahf
fnsave
nop
push
fcmovnbe
sub
jae
xchg
xchg
cli
daa
movsb
iret
xchg
sbb
xchg
adc
jmp
mov
scas
inc
bound
cmp
lods
cli
in
cmp
ficoms
addl
in
std
lret
aam
ficoms
mov
and
mov
and
psrlq
add
dec
pop
roll
dec
pop
stos
add
leave
push
and
sub
jecxz
es
aas
and
mov
rclb
clc
pop
jl
fisubrs
cmc
out
inc
push
mov
sbb
pop
pushf
or
mov
das
sub
nop
loop
in
mov
push
clc
jb
lret
pushl
cmp
lret
sub
std
and
iret
mov
mov
sub
lret
sub
lods
addr16
sti
cmc
push
call
sub
sti
add
mov
add
xor
cwtl
in
jnp
mov
and
and
dec
mov
sti
push
repz
movsl
sti
addr16
lods
cmp
das
and
push
hlt
and
mov
jl
in
push
testl
add
int3
cli
add
push
add
push
jo
xchg
xchg
jo
lcall
lods
jno
cmp
ljmp
shl
lods
aad
inc
insl
xor
sbb
mov
jo
push
repnz
cli
xor
out
inc
lods
jns
insb
cmp
jns
dec
ret
das
inc
inc
lock
ljmp
jo
push
repnz
rclb
bound
inc
add
bound
add
mov
pop
or
push
dec
insb
pop
add
sahf
insb
lret
xor
ss
and
pop
sub
fwait
ss
pop
ss
jae
gs
xchg
mov
inc
bound
loopne
push
inc
inc
cmp
sub
sti
scas
inc
inc
jmp
add
add
ljmp
pop
or
imul
jb
add
ds
faddl
out
mov
lret
inc
das
cmp
mov
pop
jmp
mov
dec
and
dec
xchg
and
loop
jne
popa
lods
sub
loop
add
loop
jl
popa
in
add
inc
xchg
jl
dec
jmp
add
push
adc
push
and
sub
fdivp
sahf
add
xor
and
pop
shrb
das
adc
cmc
cmp
jnp
cwtl
into
xor
and
gs
add
adc
stos
and
fstps
pop
jns
orb
verw
jo
stos
push
inc
rolb
sti
das
incb
jmp
repz
cmp
sarl
out
ret
cmp
das
idivl
mulb
adc
jo
push
sbb
adc
jo
addl
add
sbb
xor
scas
les
int3
out
test
testb
loop
mov
sub
pop
jo
stc
add
int
jo
ret
push
out
and
popf
fisubs
sbb
pusha
push
or
push
jecxz
push
add
cmc
add
test
iret
dec
decb
mov
push
rorb
jo
test
pop
imul
jg
adc
in
cmp
add
in
aad
add
sub
pop
cmp
mov
jae
jmp
out
dec
adc
jae
outsb
lds
in
xchg
mov
call
or
insb
push
loope
cmpsb
mov
push
inc
fs
mov
xlat
cli
mov
cmp
lock
jmp
mov
mov
inc
repz
xchg
add
lahf
ss
xchg
das
inc
adc
notb
aad
add
incl
test
add
dec
push
add
insl
inc
cwtl
inc
insl
ss
push
imul
inc
sub
cmp
cwtl
into
xchg
pop
hlt
mov
int3
pop
sub
lahf
inc
ltr
push
sbb
or
data16
push
xorl
sbb
fisubrs
fstps
adcl
outsb
cwtl
into
popa
push
jecxz
xchg
in
jmp
insl
ja
mov
ficoms
push
adc
in
inc
or
adc
push
popf
imul
inc
jmp
push
sbb
cmc
sbbb
aam
repz
adc
add
ret
rclb
push
sti
pop
ds
rorl
add
pop
mov
mov
mov
xchg
xor
test
nop
mov
jo
out
jo
ltr
nop
jb
repz
scas
sldt
nop
jae
dec
cld
push
xchg
pusha
dec
push
stos
lret
dec
add
mov
cwtl
js
xchg
add
lds
inc
cmpsl
pusha
dec
add
fsts
jo,pn
xchg
insl
add
pop
mov
loope
push
imulb
inc
ja
add
add
bound
addr16
cmp
add
pop
int
jo
mov
les
or
fmulp
std
add
fidivrl
cmp
jge
ficoms
jmp
fcomp
xchg
outsl
jl
adc
cli
pop
or
add
push
pusha
out
fistl
jmp
ja
adc
iret
push
jmp
xorl
adc
insl
xchg
fldcw
adc
iret
push
jmp
jo
adc
ljmp
outsl
in
adc
jmp
and
in
jae
gs
pop
add
jae
cltd
lods
jecxz
jmp
add
adc
and
add
jecxz
xchg
ds
xchg
adc
pop
jecxz
mov
aaa
str
xchg
sbb
adc
pushl
ltr
imul
je
push
and
imul
push
andb
sbb
aaa
dec
xor
aad
adcl
dec
mov
dec
lahf
and
shl
xchg
xchg
sub
push
lods
jns
pop
sbb
jo
sbb
mov
shll
je
push
rcrb
push
mov
adc
jo
push
je
lret
insb
dec
sti
repnz
insb
dec
jnp
jo
cmpsb
mov
pop
iret
add
movsl
mov
ret
add
cmpsb
dec
add
mov
rsqrtps
xchg
cmpsb
hlt
out
xchg
xchg
ret
xchg
inc
mov
pop
lret
movsb
out
pop
lret
mov
push
sahf
in
testl
mov
lea
outsl
repz
out
test
xor
bound
cmp
or
popa
sbb
insl
gs
movsb
cmp
in
inc
out
popf
testb
rcr
add
adc
xor
jno
fisttps
loop
jb,pn
int
in
cli
xchg
jbe
sbb
xor
leave
sbb
xor
aam
in
test
movsb
mov
xchg
aad
or
out
popf
adc
inc
dec
sbb
in
mov
stos
out
aaa
push
xchg
pop
js
jmp
cmc
mov
roll
divb
sub
push
sbb
pop
push
cld
jecxz
sbb
out
mov
sub
cmp
cmp
mov
xor
and
jp
push
je
cmpsb
push
jmp
push
pusha
daa
xor
in
mulb
fnstsw
push
jl
movsl
push
jmp
js
jmp
sbb
sbb
cs
add
jmp
sbb
xchg
pop
call
jns
mov
rorl
cltd
test
add
gs
or
test
pop
fists
add
sahf
nop
rcrb
subl
mov
xchg
out
jmp
sbb
pop
and
sbb
lcall
and
add
lahf
cld
push
jo
leave
mov
dec
incl
jo
xor
jmp
xchg
loop
or
vmwrite
jae
push
ljmp
xorb
lret
ret
repz
test
xchg
insb
mov
cmp
add
iret
push
add
shlb
insb
mov
dec
mov
cwtl
or
stc
xor
add
push
cmp
cmp
mov
aad
cli
loop
mov
cmp
repz
test
ds
iret
mov
inc
jae
xchg
cmpsl
icebp
mov
mov
xchg
test
add
mov
mov
add
loop
mov
mov
stc
add
pop
fnstsw
mov
movsl
adc
or
and
pop
push
fstpt
mov
mov
lcall
and
pop
fidivrl
mov
adc
xor
sbb
xor
sbb
cld
ficompl
lock
add
imul
pop
je
icebp
icebp
push
sbb
jae
shll
shl
jae
xchg
xchg
lahf
call
xchg
jmp
inc
or
mov
add
mov
sbb
mov
ret
jecxz
jmp
mov
or
mov
add
mov
repz
pop
fisttpl
flds
pop
push
pop
jg
inc
add
xor
dec
rcrl
push
icebp
shr
xchg
adc
cmpl
lret
mov
lcall
pop
loopne
push
in
add
lret
movsb
cmc
adc
lcall
pop
loopne
cmp
and
cmp
mov
mov
lcall
pop
loopne
jo
push
decl
cmp
flds
stc
xchg
push
mov
idiv
cmp
xchg
out
mov
or
sarl
rcll
test
cltd
vmovsd
xlat
push
out
xchg
cli
scas
jge
pop
jo
jns
jmp
ret
imul
xorb
les
xchg
ror
pop
clc
aad
clc
test
add
aaa
sti
jo
ud2
out
movsb
inc
jo
bound
xor
sti
test
das
stc
add
inc
and
and
cli
lock
gs
loop
pop
fistpl
jge
popa
cmp
stc
sbb
repnz
or
sub
in
lret
xchg
mov
jge
and
icebp
inc
or
pop
fwait
xchg
mov
and
adc
add
stc
es
addr16
aam
dec
aam
sub
stc
add
lods
ret
ljmp
pop
adc
jle
out
test
iret
cltd
mov
inc
sub
jbe
sbb
lods
cmp
push
jae
mov
jo
and
out
inc
out
jmp
pop
popf
push
jmp
add
loop
repnz
pop
test
pop
gs
outsl
pop
mov
push
in
xchg
mov
jae
gs
or
into
push
repz
loop
loop
aaa
aas
add
add
cmpl
das
movsb
in
pop
pop
jmp
lahf
cld
push
cwtl
stc
out
sbb
pop
mov
and
mov
outsb
clc
add
loop
stos
push
shr
mov
mov
sbb
inc
mulb
enter
jecxz
mov
fldenv
not
loopne
test
shll
rorl
imul
enter
jecxz
fucomip
add
clc
lcall
test
shll
xor
ret
push
sub
xor
jp
add
push
fbstp
inc
mov
adcb
add
pop
or
cmovno
mov
adc
rol
adc
adc
addr16
xor
lret
pop
mov
aam
stc
or
pop
mov
rcpps
mov
and
jae
sub
shlb
push
push
daa
cld
lahf
mov
loop
lldt
ffree
mov
sar
dec
sub
incl
xor
mov
movsb
iret
ucomiss
rcll
sbb
mov
mov
pop
sahf
mov
xchg
jo
ja
ss
xchg
mov
cmp
adc
sub
mov
sub
test
cmovg
les
cmp
scas
sub
lahf
xor
stc
xorb
sbb
and
or
cmp
jle
mov
mov
adc
fs
fldenv
xchg
inc
push
pop
gs
lock
ljmp
sub
stos
sub
inc
rcrb
cmp
xchg
jbe
jle
xor
cltd
cli
jo
sub
bound
sub
push
gs
xchg
shrl
push
jmp
mov
sar
mov
sahf
lods
sbbl
jb
sub
movsb
arpl
adc
fists
push
clc
or
push
cld
pop
jae
cld
push
jmp
test
pop
call
xchg
lret
sti
cs
nop
and
inc
jmp
aad
pop
mov
negl
es
nop
call
adc
pop
jo
mov
xchg
orb
push
inc
xchg
adc
addr16
mov
ljmp
adc
mov
add
cltd
stos
rdmsr
lret
jmp
test
aad
pushl
jo
stos
mov
sub
xor
mov
lods
sbb
jnp
or
in
test
aas
les
and
push
out
cmp
jnp
js
push
fidivrs
shl
cmp
jo
rolb
lock
jne
into
movsb
out
scas
push
repz
xchg
std
xlat
mov
test
mov
lods
xchg
jg
out
dec
cwtl
pop
adc
jo
mov
scas
mov
stc
mov
cmp
pop
jmp
stc
add
nop
mov
int3
fisubl
jnp
jle
pop
es
mov
es
add
stc
fwait
pop
cwtl
cmp
adc
or
hlt
xchg
ss
pop
std
aad
popa
lahf
hlt
fwait
xor
jo
stc
add
jb
call
and
jo
arpl
or
pop
cmc
or
and
inc
or
push
fisttpll
mov
in
jb
pop
mov
cli
adc
jmp
inc
in
and
aam
jae
push
push
aad
in
call
inc
adc
jmp
idivb
out
push
adc
and
push
push
adc
xchg
imul
adc
jae
dec
adc
and
push
int
mov
je
sahf
scas
pop
jo
push
push
add
imul
jbe
popf
fld
pop
rol
pushf
adc
sahf
test
cli
add
int3
push
inc
mov
sub
inc
fcomps
xor
jmp
dec
pop
inc
mov
xor
mov
insb
inc
call
out
dec
ret
aas
mov
es
loopne
mov
xchg
cs
sub
jno
xchg
ja
dec
ficoms
ror
rolb
int3
pop
inc
leave
dec
cld
pop
fwait
loop
push
inc
jp
or
pop
out
xchg
sbb
jo
or
cmp
jmp
mov
movsb
inc
jo
or
cli
pop
push
xorl
aam
movsl
jp
jb
pop
mov
addr16
sbb
push
sahf
shlb
and
pop
xchg
mov
dec
fs
or
xchg
ret
push
shr
mov
iret
jmp
std
push
dec
fsub
testb
and
xchg
sub
test
or
mov
ret
mov
or
mov
adc
pushf
add
cmpsb
arpl
sbb
cmpsl
in
mov
mov
sub
sbb
pop
xlat
push
xor
adc
or
or
stos
mov
or
sbb
mov
jb
sti
imul
cli
mov
jecxz
adc
mov
mov
sahf
lods
jnp
cli
pusha
add
rcr
push
jmp
mov
ja,pt
jle
lods
and
inc
je
jmp
clc
movsl
ljmp
outsb
push
icebp
and
stc
and
arpl
outsb
and
sub
mov
push
insb
and
aaa
or
sub
jmp
xchg
int
loop
jmp
fsubr
xchg
sbb
outsb
xchg
imul
mov
mov
adc
cmp
cli
std
pop
call
testl
and
cli
shrl
adc
in
ljmp
out
add
sahf
xchg
je
call
cmp
pop
sahf
xchg
jl
call
in
lcall
sahf
jl
out
setg
loopne
cltd
scas
jl
out
and
jecxz
add
and
xor
outsb
add
xlat
push
inc
call
mov
adc
jne
lea
fisubs
arpl
mov
cld
mov
orb
mov
andnps
scas
cmpsb
dec
inc
ja
push
push
push
fbstp
mov
inc
in
ljmp
addb
adc
stos
pop
sbb
xor
mov
shll
xchg
adc
xor
jnp
cli
and
je
roll
scas
hlt
addr16
loop
idiv
push
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
jo
stc
add
stc
add
stc
add
stc
add
stc
add
idiv
jl
lcall
rcr
shll
ret
int3
ret
lahf
mov
ret
insb
xchg
ret
pushf
xchg
pop
jbe
fadds
adc
adc
xchg
pusha
inc
fwait
mov
dec
cmpl
cmp
sub
mov
ret
xchg
test
add
pop
xchg
xchg
movsl
jo
pop
mov
or
test
daa
xchg
xor
sbb
sbb
les
jl
add
jnp
lods
ret
fists
arpl
test
fmuls
dec
movb
in
jmp
adc
or
adc
or
adc
add
loope
add
loope
add
loope
add
loope
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
pop
imul
add
cmp
je
jo
mov
sbb
out
sbb
int
jp
rcrl
add
adc
dec
loopne
add
adc
pop
loopne
add
pop
loopne
add
adc
dec
loopne
add
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
sldt
jo
jo
jo
jo
jo
jo
jo
jo
jo
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
jo
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
lret
into
cmp
lcall
loop
jns
xchg
jo
jae
arpl
imul
imul
pop
jmp
dec
shlb
icebp
jae
and
inc
loop
or
jae
jne
popa
test
jae
jne
pop
loop
push
inc
test
mov
push
xchg
pop
fiadds
jbe
je
jne
pop
xchg
mov
adc
jbe
adc
jnp
jae
pusha
mov
mov
loop
fsubs
jle
in
imul
or
es
icebp
jge
outsl
xchg
fidivrs
xor
xchg
and
stos
xchg
pop
lcall
mov
outsl
add
popa
je
xchg
adc
xchg
bound
mov
jns
jae
push
popa
jae
nop
jae
jbe
pusha
add
jge
stos
jge
insb
cltd
jge
addr16
adc
xchg
pop
jae
in
xor
jp
lds
je
hlt
mov
jo
punpckhwd
leave
xchg
jnp
loop
jbe
aam
psrlw
jo
ret
jae
cmpsb
pusha
imul
jle
xchg
aad
popa
mov
js
jl
pusha
outsb
xchg
int
push
cld
jle
push
or
push
in
insl
or
dec
sbb
arpl
pop
inc
out
pop
dec
adc
popa
jne
cmp
pusha
stc
xor
push
jo
sbb
or
add
jo
cld
loope
add
lea
mov
xchg
jbe
mov
jge
add
jge
je
xchg
stc
xor
iret
or
gs
stc
imul
pop
insl
jle
push
jnp
subl
add
mov
inc
xchg
stc
bound
push
jo
loop
insb
add
xchg
sbb
arpl
push
jo
rorl
xor
mov
adc
outsl
adc
shll
adc
or
popa
enter
mov
jecxz
adc
loop
mov
xchg
adc
shl
and
jg
and
je
jge
lcall
inc
test
inc
add
mov
jle
pop
pop
pop
xchg
insb
mov
addr16
or
adc
insb
xchg
jnp
push
mov
jae
jle
and
adc
lds
sbb
add
test
scas
loope
gs
ja
mov
jl
add
insl
lock
dec
outsb
incb
imul
adc
xchg
jle
sbb
jle
lods
fisubs
test
outsl
add
jno
lods
xchg
adc
or
adc
mov
js
adc
mov
mov
outsl
add
shlb
call
adc
xorb
jne
jo
jb
adc
pcmpgtd
dec
add
pop
fs
add
push
pop
fsubrs
jo
pop
pop
add
xchg
jb
ret
jb
gs
jae
enter
enter
mov
cli
push
imul
push
popa
xchg
stos
outsl
fs
or
mov
dec
jb
xlat
jns
push
mull
dec
in
arpl
add
jb
push
icebp
push
jb
call
gs
dec
adc
add
loop
pusha
and
leave
pop
aaa
test
outsl
jo
fisubrl
sbb
insb
stc
gs
mov
push
xchg
outsb
push
xchg
outsl
roll
insl
addr16
sar
pop
fwait
mov
mov
pop
arpl
pop
cmpsl
test
imul
pop
sbbl
jo
sbb
addl
push
and
pop
loop
push
or
sti
sbb
adc
pop
jnp
ret
and
add
lret
pop
jmp
jae
jle
loopne
pusha
jmp
iret
test
int
jl
fnstenv
jne
jae
pop
shll
fs
xchg
xchg
jnp
add
xchg
je
and
jl
jne
inc
aam
cli
inc
rcll
pusha
mov
sbb
test
aaa
test
push
pop
cmpb
adc
mov
imul
je
in
outsb
lods
jle
gs
and
mov
jge
arpl
xchg
jl
cs
adc
xchg
jae
dec
xchg
dec
jae
cli
jg
jb
in
jne
xorl
mov
mov
imul
mov
outsl
mov
outsl
add
andb
mov
fsts
ja
outsl
jg
je
fidivs
sti
jb
push
hlt
jge
push
sti
jbe
inc
out
ja
or
insl
sbb
outsb
add
cmp
add
dec
jo
stc
cli
dec
addr16
pop
fdivr
jne
fdivl
outsb
aam
popa
add
imul
shll
addr16
stc
jno
mov
jnp
xchg
mov
add
lods
bound
mov
add
arpl
mov
add
jle
outsb
push
mov
outsl
loop
jb
adcb
je
xchg
stc
pop
adc
stc
push
sbb
lret
xchg
lds
loop
jno
andl
loop
pop
xlat
xchg
outsl
xlat
jge
add
jle
jp
xchg
stc
insb
iret
xchg
popf
fs
loop
jno
jns
pop
jo
jno
sahf
test
jo
pop
addl
mov
pop
jo
adc
jle
cmp
or
adcb
aaa
xchg
sbb
jmpw
fs
xchg
insb
jge
or
jge
add
xchg
or
jnp
loop,pn
rcll
outsl
shll
pusha
rclb
xorb
jg
jmp
lret
jmp
jae
jns
sarl
popf
xchg
adc
mov
xchg
cmpb
loop
sbb
and
inc
mov
jno
stos
cmpl
cmp
loope
insb
xchg
adc
andl
leave
lods
jge
pusha
xorb
xchg
js
adc
orb
jp
add
jle
mov
outsl
scas
jnp
jae
cmp
dec
js
jns
insb
dec
scas
dec
jae
adcb
test
and
jns
jb
xchg
mov
xlat
and
or
jb
jo
mov
adc
jae
dec
iret
arpl
sti
sub
popf
sub
push
in
arpl
push
inc
or
adc
jle
add
sub
and
add
sbb
psubq
dec
jp
jo
jbe
fldenv
dec
insb
aad
dec
fdivl
outsb
jo
jbe
ret
bound
ret
lea
les
jo
pop
jle
mov
loop
popa
loop
pop
sahf
xchg
loop
ja
xchg
pop
pop
xchg
loop
arpl
add
jns
pusha
add
or
pop
push
xchg
pop
dec
ja
add
shrb
sub
stc
add
xchg
lock
ja
jne
xchg
into
add
xchg
lds
mov
adc
sahf
leave
loop
pushf
fildll
mov
jnp
push
sbbl
shl
ja
xchg
iret
and
adc
push
mov
mov
and
cmp
bound
xchg
xchg
cmp
xchg
jne
fs
jmp
mov
and
cmpb
jns
sub
adc
sbb
jp
jae
jp
pop
xchg
sub
push
xchg
arpl
push
stos
bound
lret
mov
lret
fists
pop
xlat
into
mov
add
mov
xchg
test
jo
lock
out
jnp
das
std
enter
call
jp
movsl
mov
das
lods
dec
jb
test
jae
jp
gs
mov
xor
ja
addr16
push
inc
jo
push
jp
gs
lods
data16
mov
and
xchg
jle
ret
scas
jl
mov
push
add
aas
dec
fnstenv
dec
xor
stos
push
push
adc
and
push
push
jo
aas
push
mov
pop
push
popf
push
es
sti
push
add
adc
lods
push
push
add
push
add
aas
dec
mov
inc
aas
mov
pushf
pusha
insl
arpl
dec
outsb
dec
lock
mov
dec
je
fisubs
dec
lock
pop
inc
and
jbe
or
dec
outsb
or
pusha
je
pop
dec
push
cld
sub
outsb
pop
sti
push
add
pop
jmp
stc
pop
add
push
add
stc
add
xchg
jno
jge
xor
loop
push
rcrl
pop
cmpsb
jge
pop
xchg
push
jno
jns
pop
mov
stc
push
add
xchg
and
ja
addr16
xchg
push
pop
inc
cltd
sbb
add
stc
add
pop
imul
xor
sbb
push
mov
pop
and
inc
daa
mov
add
stc
add
shll
loope
add
mov
aad
arpl
loope
dec
mov
mov
js
call
add
cmpl
aam
lea
popf
jne
mov
jle
xchg
inc
dec
js
push
jmp
jae
cmp
insb
or
cmp
insb
jmp
sub
sub
sub
sub
sub
sub
sub
sub
test
add
test
loop
jmp
repz
add
push
jns
jns
jge
sbb
outsl
outsb
sbb
loop
sbb
adc
xchg
push
popa
fldl
xchg
sbb
loop
dec
testb
jo
jg
popa
sbb
adc
mov
dec
arpl
adc
fabs
xchg
and
loope
inc
xchg
test
adc
fabs
xchg
and
loope
dec
jo
outsw
stos
jbe
add
mov
adc
rcll
xchg
ja
mov
popa
add
push
add
fcoms
add
dec
imul
dec
and
dec
jbe
jno
push
orb
das
push
leave
pop
jnp
mov
sti
push
orb
add
lods
ss
xchg
cwtl
popa
imul
push
add
jmp
add
inc
imul
and
xor
arpl
bound
ss
inc
add
jno
cli
push
add
dec
jo
jb
or
fs
jp
pusha
push
scas
aam
add
stc
add
loop
add
stc
push
rcll
lods
add
addl
pop
xchg
mov
pop
movsl
popl
pusha
add
popl
mov
sub
push
nop
xor
pop
nop
pushf
push
pop
dec
jge
jne
mov
push
sbb
je
lcall
pusha
aad
cmp
mov
push
or
ret
pop
xlat
sbb
fbstp
jbe
mov
jle
mov
add
cmp
ret
in
mov
jl
jle
jne
nop
mov
push
mov
dec
push
stos
je
dec
cmpb
inc
ret
dec
xchg
jne
in
jnp
pusha
jg
cmp
das
enter
xchg
jle
push
mov
cmp
adc
jne
movsl
jmp
je
mov
push
outsl
jb
outsb
movsl
jmp
outsb
add
subl
popa
sub
outsl
jb
movsl
jne
setb
and
lcall
adc
xchg
test
cltd
outsl
cmp
mov
pop
cs
jbe
xchg
jne
cmp
sti
ljmp
jb
dec
xor
jne
popa
int3
adc
dec
je
jo
inc
outsb
push
sub
cmp
xor
mov
push
inc
sub
cs
push
jmp
cmp
pop
or
jo
aad
jnp
nop
aad
sub
push
popa
shrl
pop
je
inc
inc
popa
xlat
outsl
dec
outsb
xlat
add
inc
je
push
jle
push
adc
ljmp
insb
jnp
xchg
cltd
cmp
xchg
scas
inc
jno
push
jmp
pusha
sub
mov
outsb
fs
dec
inc
mov
insb
pop
stos
add
loop
and
orl
push
scas
or
pusha
mov
adc
sub
push
stc
adc
int3
add
jo
sbb
jo
fisubrs
jb
xor
loop
pusha
mov
jne
pop
add
test
xor
xchg
je
push
orl
xor
pop
pop
pop
loop
jo
scas
sub
xchg
and
dec
das
loop
dec
push
js
sbb
mov
iret
pop
mov
xor
data16
nop
jbe
xchg
adc
jns
jae
jp
adc
jl
mov
add
jno
shl
loop
mov
cmpsl
loop
fwait
sahf
xchg
mov
xchg
jbe
test
mov
pusha
test
jb
cmpsb
cmpsb
jbe
pop
lahf
je
inc
mov
dec
pop
pop
jb
and
jb
add
out
jb
jbe
inc
sub
data16
mov
nop
out
jb
jbe
push
insb
lcall
add
outsl
js
loop
gs
pusha
je
xchg
inc
movsl
pushf
adc
popf
jl
dec
xchg
jno
sbb
outsl
inc
popf
jl
adc
jge
call
sahf
jne
std
mov
push
or
push
out
outsl
outsb
rclb
dec
je
jno
add
jl
jo
inc
je
mov
dec
jb
lods
ja
add
push
add
ja
dec
mov
push
dec
pop
in
jae
mov
bound
out
pop
sbb
jns
jo
jp
add
adc
rcrb
jbe
aas
jp
aad
lldt
cmp
clc
add
int3
aas
jnp
mov
inc
je
pop
jp
ret
push
inc
je
jle
je
jns
aas
jo
jp
test
jae
xchg
dec
jp
test
inc
push
sbbl
inc
jbe
push
push
loop
imul
pop
aaa
cmp
daa
imul
cmp
ja
push
adc
sbb
and
and
pop
daa
jbe
dec
adc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
jo
stc
add
stc
add
stc
add
stc
add
stc
add
stc
add
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
inc
xor
loop
int3
cmpl
and
and
pop
lcall
add
add
mov
or
mov
add
mov
or
mov
add
mov
mov
movsl
jne
mov
jg
mov
mov
mov
fwait
jno
insb
lret
fs
mov
dec
jp
jge
push
fiaddl
test
dec
out
outsl
aaa
lcall
cmp
imul
dec
dec
add
data16
mov
test
push
popa
mov
dec
push
insl
xchg
jne
jg
dec
inc
mov
dec
dec
ds
data16
scas
jge
inc
fwait
dec
jb
mov
inc
popa
pop
xorl
out
jae
add
das
pop
push
rolb
pushf
or
insl
xchg
outsl
dec
pop
andb
xchg
jge
pop
mov
mov
mov
dec
insl
bound
pop
insl
inc
mov
push
push
mov
jp
cmp
aas
je
ljmp
and
pop
addr16
ficoms
jne
repz
sti
cmp
push
adc
pop
mov
pop
push
mov
and
test
inc
fnstcw
pop
outsb
leave
pop
jbe
int
stc
xor
je
aas
add
jg
aas
movsl
mov
and
mov
sub
outsb
dec
bound
inc
dec
mov
jo
je
cmp
pop
jo
movsl
sub
dec
addl
adc
das
jb
push
pop
outsb
sbb
add
jne
add
stos
jmp
bound
xchg
lods
xor
mov
int3
insb
into
enter
iret
loop
insl
fimuls
adc
movsb
xchg
adc
popa
loop
mov
arpl
inc
stos
mov
je
jmp
sahf
xchg
pusha
dec
xor
jle
xor
gs
mov
jne
andl
or
aas
push
push
outsb
arpl
inc
orl
add
dec
sub
sub
outsb
jne
cmpsl
xchg
xor
mov
pop
fcmove
test
xchg
sbb
dec
jb
mov
or
jb
mov
insb
testb
push
fdivl
push
push
fld
and
gs
test
sub
ja
xchg
outsl
pop
add
jb
inc
mov
gs
mov
inc
jb
jl
jae
mov
js
dec
push
dec
mov
dec
jb
mov
cmp
jb
sub
xor
pop
fcompl
aas
mov
aaa
je
pushf
pop
das
cmp
jle
lea
and
pop
jle
xchg
push
add
push
arpl
pushf
inc
jnp
xchg
push
push
xor
es
inc
enter
lds
push
nop
shll
push
inc
mov
inc
mov
jp
and
and
iret
je
and
and
fdivl
mov
sub
out
jno
and
push
pop
das
divl
shl
lds
mov
test
dec
rcrl
push
xchg
mov
int
fisubl
mov
xchg
mov
das
rol
insb
pushf
jg
aaa
mov
insl
pusha
scas
mov
sub
pop
push
pop
addl
pushf
push
gs
mov
cmp
xchg
call
push
inc
andl
adc
sub
cmp
loop
imul
or
and
inc
sbb
call
cmp
and
jae
or
fadds
shlw
jb
aad
loop
xlat
sahf
outsb
jno
xlat
ret
cmpsl
mov
movsl
xchg
outsb
jno
lcall
mov
pop
jle
jge
xchg
inc
je
xorl
cmpsl
stos
jns
inc
test
mov
pop
insb
xchg
push
cmp
test
push
inc
push
jno
daa
insb
xchg
dec
fldl
jae
push
adc
jg
add
xchg
inc
jno
add
jg
gs
push
insl
fisttps
xor
outsl
outsb
inc
mov
aaa
xchg
pusha
jae
xchg
ja
pop
stos
je
sub
jnp
loope,pn
jle
ljmp
frstor
jae
fnstsw
push
out
andb
mov
pop
mov
xor
mov
jl
fldenv
jle
pop
mov
jge
fidivrs
jae
mov
push
push
mov
and
arpl
ja
jo
dec
jb
out
and
dec
jb
push
inc
cs
dec
dec
jb
es
cs
sub
jb
dec
dec
jb
pop
inc
rcrb
add
dec
jb
inc
mov
dec
jo
mov
and
jb
addb
mov
pop
arpl
jno
nop
mov
jno
sti
push
pop
inc
scas
ss
adc
loop
xor
xchg
add
orl
push
xchg
push
push
incb
call
push
in
or
js
push
nop
xchg
fcoml
loop
fs
jbe
xor
je
pusha
ret
fs
jne
and
xchg
das
lahf
jb
add
subl
andl
loop
das
inc
ret
pop
jg
push
xchg
dec
jbe
push
cmp
sub
push
fs
ds
ret
jbe,pt
or
adc
das
xchg
jmpw
test
jae
jnp
and
sti
rorb
inc
lds
jbe
mov
xchg
test
cltd
xchg
aas
int
arpl
roll
test
mov
mov
xchg
je
popf
mov
jle
push
jbe
jnp
jge
or
jle
dec
push
jbe
sbb
xchg
leave
mov
data16
dec
jb
stos
push
push
dec
mov
pop
dec
lahf
jle
insb
xchg
xor
test
mov
movsl
bound
jl
pop
mov
pop
sahf
dec
jb
mov
jne
xchg
or
inc
outsl
das
lahf
gs
sti
dec
inc
in
xchg
fnsave
xor
mov
inc
cmc
jnp
outsb
fnsave
jge
add
inc
outsl
lcall
dec
inc
cltd
mov
push
leave
cmpsb
dec
jae
lea
arpl
ja
dec
mov
and
sahf
inc
inc
sbb
inc
pop
add
push
add
ucomiss
out
jb
sbb
jae
add
sub
sar
pop
fsubrp
inc
addr16
inc
cs
sbb
mov
or
aam
pop
add
daa
dec
jb
xchg
and
outsl
movsl
push
jb
inc
addr16
jo
cmp
pop
jbe
movsb
dec
sqrtps
imul
loop
cmp
inc
bound
pop
pusha
push
jb
pop
dec
loop
arpl
and
and
pop
xor
movsb
cmp
inc
loop
push
adc
sbb
addl
aam
adc
iret
sub
enter
jo
fsubrl
jne
push
rorl
mov
scas
movsb
test
int3
popf
test
push
jo
lcall
loop
push
xchg
jo
mov
gs
push
jo
jp
nop
jne
push
jbe
sub
push
jo
jmp
xor
jnp
dec
loop
cmp
jo
dec
add
adcl
push
adc
jmp
sub
jne
cmpsb
jge
std
lret
add
mov
jne
test
xor
aam
jne
je
data16
lds
push
xchg
pusha
mov
mov
jbe
mov
xchg
inc
add
xchg
outsl
pop
sbb
inc
pop
cli
mov
add
out
outsl
sub
pusha
add
pusha
je
scas
inc
add
mov
dec
mov
jle
push
push
insl
out
inc
inc
mov
inc
jno
jle
imul
data16
cltd
inc
push
jns
push
sub
mov
dec
js
mov
xor
dec
push
ficoms
gs
stos
push
inc
jo
jb
mov
jo
inc
daa
add
je
fs
jo
jb
pop
mov
push
lods
pop
push
and
push
js
lods
jno
dec
cmpsl
and
pushf
js
adc
inc
add
inc
jno
aam
fs
outsl
jno
int3
jno
adc
push
jo
stc
es
jecxz
push
dec
xlat
fadds
jo
jno
fdivr
daa
outsb
dec
pop
add
sub
enter
rorb
fstps
xchg
sti
cmp
and
pushf
loop
adc
mov
movsl
cmp
jg
inc
pop
js
pop
dec
xchg
pusha
inc
jne
das
and
push
dec
jns
push
jo
sub
cmp
pop
push
adc
and
xchg
imul
mov
inc
adc
adc
jns
cmp
outsb
out
scas
mov
add
jne
pop
shll
dec
das
scas
mov
add
jnp
push
mov
jo
fwait
jae
pop
test
loop
mov
jle
cmpsl
aas
jb
xchg
adc
push
je
cmp
and
xchg
jns
sbb
pop
inc
or
xor
jne
insb
test
sbb
jbe
jae
jnp
mov
loop
cli
enter
rolb
pop
ficomps
jne
add
jecxz
outsl
das
nop
gs
fstpt
inc
loope
dec
outsb
fstl
inc
ficoml
pop
add
bound
lahf
pusha
imul
jae
cmp
cmp
sub
xor
xchg
popa
ja
xchg
jbe
jns
xor
cltd
sarl
jp
je
pop
andl
lahf
push
js
push
jb
nop
outsl
add
popa
xchg
dec
dec
jbe
outsl
add
pusha
jbe
xchg
adc
andb
sbb
sub
mov
mov
cmp
jne
sub
mov
inc
arpl
stc
and
dec
inc
pop
bound
dec
xor
das
push
dec
push
inc
jne
imul
outsl
jno
xchg
jno
and
and
test
inc
outsb
sbb
push
inc
and
and
scas
jae
jo
dec
jo
int3
jae
fimull
jo
dec
jo
fiaddl
inc
add
push
je
lret
outsl
jno
loop
pop
ret
inc
les
pop
ret
push
popf
jo
add
xchg
mov
lds
mov
gs
lcall
je
das
scas
sbbl
gs
insl
lcall
mov
dec
sub
jnp
popa
and
or
outsb
and
and
aaa
add
jne
arpl
and
popa
push
outsb
cmp
push
jo
sbb
shl
adc
mov
lahf
inc
mov
aam
jne
ja
pusha
les
ret
shlb
pop
jp
mov
mov
jns
xchg
jae
mov
jp
jnp
jle
test
outsb
jns
push
jae
mov
sbb
subl
xchg
inc
dec
jo
inc
andl
jp
popa
inc
xor
xchg
jp
push
xorl
sbb
test
cmp
pop
mov
fimuls
dec
xorb
pop
jo
stos
jge
adc
loopne
cmp
pop
outsb
sub
subl
sbb
cmp
call
xchg
outsl
jae
xchg
mov
inc
popa
dec
orb
jg
inc
test
inc
push
pop
lods
dec
pop
pop
orl
jg
mov
jle
dec
jg
push
jo
push
loopw
push
pop
jecxz
inc
insl
loop
push
dec
call
dec
add
scas
sbb
daa
dec
imul
dec
popa
movsb
adc
ja
dec
dec
jb
inc
pop
imul
pop
jb
inc
dec
popa
pop
sqrtps
pop
jne
addr16
pop
and
arpl
push
inc
xchg
dec
jb
xchg
push
pop
add
addr16
inc
jo
xchg
dec
addr16
push
push
or
dec
addr16
push
cmp
outsb
xor
push
add
inc
or
pop
jo
out
push
jo
in
pop
ret
push
shl
lods
pop
int
mov
ret
dec
popf
push
ret
add
push
scas
dec
jo
fldenv
pop
fistl
lea
push
test
mov
add
pop
push
push
cltd
pop
push
push
mov
push
inc
mov
daa
xor
push
push
inc
inc
pop
inc
push
dec
add
inc
inc
dec
dec
adc
and
cmp
xor
pop
adc
cmp
xor
mov
xor
mov
loop
hlt
aaa
out
cwtl
cmp
xchg
aaa
dec
pop
aad
sbb
push
je
pop
aad
push
sub
mov
sbb
push
je
arpl
mov
push
outsl
iret
xchg
inc
pop
jmp
add
push
je
push
ds
jns
push
je
orb
ss
gs
je
je
and
dec
inc
inc
inc
jbe
aas
push
insb
add
xor
dec
aaa
xor
xor
xor
inc
ss
js
pop
push
test
inc
jae
inc
ja
jne
arpl
or
cmp
sub
inc
jno
dec
xor
je
add
inc
inc
sub
dec
in
jecxz
outsl
das
xor
fildl
inc
ljmp
push
sbb
inc
dec
movups
sti
and
cmc
inc
fs
xor
push
push
ss
and
jo
push
das
cs
push
xor
notb
xor
add
or
or
xor
add
xor
out
push
push
scas
mov
add
in
jno
out
pop
movsb
ret
movsb
mov
pop
stos
repnz
pop
negb
xor
sub
fildl
xor
ficoms
sub
mov
cmp
sub
mov
outsb
push
jne
pop
dec
pop
pop
inc
jb
pop
add
bound
jne
loop
pop
dec
push
dec
push
pop
push
push
add
ss
or
push
sbb
add
cld
cmp
pop
inc
sbb
adc
popa
jo
cs
iret
dec
jmp
adc
ficoms
adc
sub
xor
loop
xor
cmp
fcoms
cld
xor
addl
pusha
test
inc
arpl
sub
push
push
inc
adc
jmp
push
daa
jo
cmp
dec
je
das
inc
insb
sbb
pop
jmp
adc
jns
inc
inc
je
cltd
loop
and
inc
and
push
insb
stc
xchg
inc
and
inc
jo
xchg
jmp
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
add
adc
jae
adc
jae
test
ja
std
loopne
jno
or
js
hlt
adc
jae
adc
xor
inc
arpl
adc
inc
sbb
outsb
push
gs
pop
gs
jp
pusha
sbb
scas
adc
mov
arpl
maxps
inc
je
jge
jle
pop
add
je
adc
jae
sbb
je
aad
arpl
or
insl
filds
insb
ds
adc
cmp
insl
jae
or
xor
cmp
adc
or
je
outsb
loope
dec
jns
outsb
jo
pop
insb
pop
push
cmp
daa
push
push
jno
xor
jae
and
pop
pop
and
and
jae
cld
sub
and
in
fistps
in
and
jecxz
fprem1
xor
fsubs
xor
fisubs
jo
push
add
push
add
push
add
push
add
push
add
push
add
push
add
sti
add
sti
xor
lcall
dec
addl
push
cltd
sub
xchg
add
dec
mov
inc
inc
dec
sub
inc
cld
push
add
push
add
inc
inc
sub
dec
aaa
cmp
loop
sub
or
xor
or
jo
add
dec
adc
jo
add
fimuls
xor
int
shll
adc
cld
in
inc
cld
in
ds
in
aas
cld
push
mov
adc
push
pop
xchg
xchg
dec
jo
roll
add
ds
jp
push
jns
xchg
inc
aaa
leave
xchg
dec
jbe
jp
pop
dec
pop
xor
dec
jp
dec
add
daa
sub
dec
dec
push
aas
jl
inc
loop
inc
inc
inc
jno
lods
loop
sub
pop
jl
mov
push
jo
lahf
pop
inc
jmp
xchg
gs
sub
ja
jae
cmp
inc
pop
flds
sbb
cmp
sbb
aaa
das
or
sub
je
ljmp
xor
fs
std
pop
add
or
ss
jl
adc
inc
dec
ss
insb
xor
lcall
daa
or
push
insb
ss
ja
jp
inc
inc
mov
pusha
jae
adc
add
imul
xor
jo
ja
gs
aas
pop
ja
dec
cmp
push
jo
xor
and
lods
lea
arpl
leave
dec
jo
jge
jb
lea
popa
push
gs
addr16
leave
xor
inc
and
je
arpl
push
push
dec
push
cmp
pop
cmp
inc
pop
aas
add
sbb
ss
cmp
je
sbb
arpl
adc
push
push
and
and
out
cs
jmp
inc
lods
sbb
inc
mov
in
mov
push
xor
jns
push
sub
loop
inc
push
sbb
lods
and
repnz
call
push
addb
xchg
push
mov
add
mov
pop
inc
push
push
sub
push
push
cld
inc
and
nop
and
pop
and
sub
dec
pop
out
adc
add
sbb
push
cmp
xor
xor
dec
fimuls
xor
aas
add
mov
or
lds
xor
add
iret
inc
inc
adc
test
sti
push
jo,pt
pop
cmp
push
mov
mov
inc
or
gs
inc
loop
cltd
xor
pop
jecxz
aad
lcall
outsl
jge
loop
lcall
jo
jg
pop
jg
dec
je
dec
inc
adc
push
push
insb
pop
pusha
adc
jmp
inc
xor
ds
pop
inc
xchg
dec
dec
or
loop
jmp
jae
pop
add
int
mov
dec
inc
adc
push
mov
dec
xchg
idivb
or
imul
int
mov
or
imul
loopne
xor
add
clc
push
jbe
cld
add
js
xor
add
xor
xor
push
ja
cmp
gs
push
or
sbb
or
jae
sub
outsl
add
adc
dec
loopne
add
push
arpl
push
cmp
push
aaa
jo
push
sub
push
bound
push
xor
jo
push
fs
push
sub
push
xor
push
cmp
push
popa
jo
push
xor
push
xor
push
fs
push
pop
jo
push
data16
push
add
aaa
popa
inc
and
push
dec
push
sbb
outsb
or
jo
and
fdivr
jmp
adc
je
sub
arpl
xor
es
inc
fists
xor
loop
push
xlat
dec
andnps
push
or
ret
push
iret
dec
pop
push
rcll
push
ret
pop
int3
sub
xor
loop
sub
xlat
xor
popf
cmp
cld
push
dec
xlat
push
push
push
mov
pop
cmp
add
xchg
jecxz
dec
mov
push
dec
xorl
and
push
std
push
out
dec
dec
ss
push
xor
das
dec
ss
cmp
in
ds
dec
add
inc
jmp
jg
jbe
xchg
dec
jns
movsb
dec
pop
add
inc
lcall
xor
push
cs
das
shlb
and
jle
aas
mov
add
cmp
dec
adc
push
push
je
aaa
aas
jb
cltd
add
xor
mov
outsb
add
jge
je
rcll
adc
inc
ja
jae
adc
jae
adc
aaa
and
inc
adc
loop
cmp
das
adc
pop
pop
push
pushf
out
dec
mov
inc
inc
mov
or
add
add
jb
pusha
or
sub
adc
adc
outsl
pop
aas
push
ja
cmp
gs
adc
and
dec
jbe
or
fldz
pop
jo
aaa
add
add
rol
aaa
add
add
ljmp
outsl
out
jbe
add
cli
jne
xor
sti
jno
jo
subps
and
aas
insb
std
or
push
fistps
and
or
mov
and
insb
inc
in
and
cmc
inc
inc
leave
lret
push
pop
mov
xor
cmp
mov
stos
xor
mov
xor
inc
push
xchg
add
into
pop
arpl
outsb
jo
pop
sub
dec
push
pop
and
data16
xor
jle
adc
and
inc
and
sub
daa
dec
push
out
ss
add
and
loope
push
es
loop
push
xlat
push
pop
xor
and
sarl
and
aam
sbb
dec
loopne
jo
cld
push
jo
cld
das
jo
cld
and
jo
sti
push
lods
ds
inc
test
daa
add
fcomps
inc
mov
dec
loop
xor
xchg
cmp
and
fwait
cmp
sub
jge
loop
orb
dec
push
push
adc
push
push
push
push
push
outsl
jmp
mov
outsl
cmp
sub
jo
je
je
xorb
sbb
push
bound
bound
das
add
add
inc
je
mov
inc
push
fldl
inc
les
jl
push
push
adc
xchg
mov
loop
mov
sti
cmp
andb
jnp
in
ja
adc
std
add
sbb
jns
mov
js
inc
adc
add
sub
jb
pop
adc
adc
xchg
ret
push
push
add
arpl
sti
arpl
pusha
add
jge
push
sub
lea
jbe
jo
js
sbb
inc
dec
xor
inc
lret
sbb
sub
adc
push
xor
jbe
rolb
jnp
mov
sub
mov
sarl
jo
dec
sub
test
aaa
test
push
xor
testl
inc
jmp
or
jmp
cmp
jmp
pop
mov
pop
xor
mov
push
inc
movsb
or
dec
xlat
in
push
inc
movsb
or
mov
out
cs
xor
ret
in
pop
push
mov
xchg
push
mov
test
bound
inc
dec
ss
aas
inc
loop
dec
add
cmp
push
nop
rsm
cli
sbb
push
inc
inc
outsb
cmp
push
insl
add
ss
xor
inc
and
xor
add
sbb
pop
xor
int3
loop
daa
loop
dec
cmpsb
inc
jmp
jo
or
add
cmp
cmp
inc
add
push
pushf
cmp
sub
jmp
push
xchg
inc
into
add
mov
push
mov
adc
sti
xor
aas
test
mov
dec
adc
jle
adc
rorl
cmp
jae
sbb
call
je
inc
dec
pop
push
bound
aas
inc
sbb
mov
inc
pop
dec
push
sbb
jo
je
jp
mov
aas
sbb
xchg
push
adc
xchg
push
jmpw
gs
jae
jo
push
dec
jo
scas
inc
gs
dec
push
outsl
fcoml
decl
jbe
ret
jae
arpl
in
jae
adc
idiv
xor
call
xor
das
add
jne
mov
jno
push
add
gs
call
dec
insl
add
push
lea
inc
push
lods
adc
arpl
xchg
jmp
jge
pop
sub
or
insb
fiadds
sub
outsl
sub
adc
adc
dec
sbb
jne
sub
ds
jb
jo
or
cmp
mov
inc
cmp
enter
push
pop
mov
arpl
xor
fwait
mov
and
pop
pop
inc
add
pop
xor
jl
jo
insb
or
push
das
jb
mov
cmp
daa
or
das
or
fldenv
jb
testl
repnz
repnz
out
arpl
mov
xor
int
outsb
xchg
lds
insl
xchg
int3
ss
push
rolb
mov
lods
jecxz
cmp
add
dec
aaa
scas
aaa
jo
adcb
xchg
xor
lcall
inc
fwait
aaa
dec
andl
push
push
outsb
push
push
cmp
add
cmp
xor
ss
and
shll
inc
fmulp
push
inc
add
aaa
pop
cmp
inc
cs
lods
adc
sbb
les
cmp
sbb
and
pushf
dec
in
add
mov
adc
push
push
jl
jae
push
mov
pop
loop
int3
inc
push
jo
scas
aas
mov
js
jae
jo
sahf
push
push
shrb
jg
xchg
xchg
adcb
cmpsl
push
push
pop
lcall
xchg
jnp
and
cmp
aas
push
sahf
inc
jne
xchg
push
push
jmp
mov
push
jmp
add
sbb
sbb
xor
push
sub
push
add
movl
or
jb
sbb
jae
or
je
or
outsl
inc
fnstcw
inc
leave
jle
inc
leave
fldcw
inc
flds
jle
leave
inc
js
leave
dec
arpl
and
cltd
and
mov
pop
inc
mov
bound
cltd
sbb
cltd
mov
imul
insb
inc
pop
pop
xchg
inc
pop
or
inc
dec
scas
addl
lret
addb
mov
mov
jno
mov
int
mov
mov
cltd
mov
inc
cltd
mov
mov
mov
shll
xor
mov
scas
mov
add
mov
lods
mov
xor
sti
mov
xor
sbb
xor
stc
shlb
call
ret
popf
ret
mov
fadd
mov
sti
aas
aaa
and
pop
das
and
cmpl
cld
jle
and
mov
inc
and
andb
mov
add
and
outsb
and
cld
in
lds
cld
add
sti
add
sti
add
sti
add
sti
add
sti
inc
dec
cmp
and
cmp
push
cmp
mov
cmc
mov
dec
pop
adc
pop
clc
cmp
fiadds
and
in
aas
pop
jo
inc
and
fsts
loopne
fsts
jecxz
jecxz
push
xor
in
add
add
and
xor
sbb
fdivl
or
cmp
adc
xor
pop
hlt
xor
adc
jno
lahf
xor
pusha
mov
nop
aas
ja
lret
loop
stc
rol
or
aad
gs
shl
xor
xchg
ret
xchg
ja
dec
aas
jbe
inc
aas
push
jmp
pop
adc
jmp
add
inc
imul
out
sub
dec
into
ljmp
std
jge
insb
clc
arpl
add
jno
sbb
insb
out
gs
pop
jne
or
pusha
imul
add
lods
sti
ja
rolb
push
sbb
pusha
imul
loopne
je
xor
cld
fildl
add
repz
in
add
cli
loopne
popa
cli
fisubs
jmp
fidivl
sub
inc
gs
xor
add
jbe
das
xor
aad
inc
arpl
ljmp
xchg
sti
and
sahf
loop
arpl
or
jno
lock
loop
pop
add
insl
mov
cmp
cmpsb
or
jo
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
jo
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
add
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
mov
adc
cltd
loop
add
cltd
loop
add
loop
add
adc
pop
loop
add
adc
dec
loop
add
adc
pop
loop
add
adc
dec
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loope
add
loope
add
loope
add
loope
add
ret
push
sbb
out
add
sub
fsubrp
jo
repz
pop
dec
push
inc
jo
push
adc
push
add
leave
push
jg
push
xorb
inc
jo
push
and
push
adc
push
or
push
add
lret
push
add
push
aas
lret
xchg
add
push
add
idiv
daa
lret
out
pop
lret
push
add
adc
jo
adc
jo
jo
sldt
jo
push
add
push
add
push
add
push
add
push
add
push
add
push
add
daa
nop
loop
hlt
ja
repnz
add
hlt
jbe
add
cmc
jns
aam
pop
add
stc
gs
fstps
in
xlat
mov
clc
imull
hlt
idivb
cli
add
insb
in
enter
call
div
jns
sti
pop
jb
leave
or
cmc
js
repnz
loope
push
push
add
mov
push
lock
adc
fmuls
pop
loop
jmp
jae
ljmp
mov
ljmp
mov
adc
ja
adc
outsl
mov
adc
add
adc
jae
adc
jae
adc
jae
adc
outsl
loop
jmp
outsl
loop
jmp
outsl
mov
adc
jae
adc
ja
adc
jae
ljmp
loop
in
jae
ljmp
loop
in
mov
adc
jmp
add
ficoms
add
loop
add
mov
adc
mov
adc
cltd
loop
add
fsubrp
decl
out
add
adc
dec
out
add
adc
pop
loop
decl
jmp
decl
jmp
add
loop
add
loop
add
loop
add
loop
add
in
add
in
pushl
adc
add
lret
push
add
push
pushl
mov
lock
xchg
add
lret
xchg
add
xchg
adc
push
adc
push
add
push
adc
stos
xchg
add
stos
push
add
stos
xchg
adc
lret
xchg
adc
lret
lock
lock
jo
push
add
push
adc
lret
jo
push
adc
mov
lock
jo
push
add
lret
jo
xchg
adc
jo
push
adc
stos
push
adc
push
add
lret
jo
sti
addl
sti
addl
sbb
jo
sti
add
sbb
cld
add
cld
add
cld
xorl
add
cld
xorl
add
sbb
loop
add
loop
xorl
add
jo
sbb
jo
sti
andl
add
faddl
and
xorl
add
faddl
pusha
loop
andl
jmp
repz
or
loop
jmp
insb
rclb
jmp
jno
adc
jno
sbb
jae
adc
jae
sbb
jno
sbb
jae
adc
jno
adc
jno
sbb
add
adc
jae
sbb
jae
sbb
jae
adc
jno
sbb
jae
adc
jae
sbb
jno
adc
jae
sbb
jae
adc
jno
sbb
jno
adc
jno
adc
jae
sbb
jae
sbb
add
adc
add
adc
or
adc
adc
loope
adc
loope
adc
shl
adc
fchs
adc
adc
leave
loopne
or
leave
loop
or
loopne
add
loopne
or
loop
add
loop
add
adc
pop
in
or
adc
dec
in
add
adc
inc
loop
or
adc
dec
loop
add
loop
or
in
or
loop
add
adc
jo
adc
jo
push
add
push
add
adc
add
adc
jo
push
add
adc
jo
push
add
push
add
adc
jo
idivb
dec
idiv
scas
dec
idiv
cmpsl
dec
push
add
idivb
dec
push
xorb
xorb
jg
push
add
idivb
lret
idivb
dec
out
jg
dec
jo
push
add
jo
jo
push
add
idiv
das
lret
push
addb
loop
jecxz
loop
add
loop
add
loope
jecxz
mov
in
mov
add
loope
add
jnp
out
jl
lock
jecxz
mov
in
loop
in
loop
add
loop
add
loope
add
loope
jecxz
loop
in
loop
add
loop
add
sti
add
sti
jecxz
loope
in
mov
add
loop
add
loop
add
jo
cli
jecxz
loop
jecxz
mov
jecxz
mov
add
jp
mov
adc
loop
call
adc
call
adc
push
adc
jmp
shll
adc
loop
jmp
shll
adc
insb
loop
jmp
jae
adc
je
push
jmp
jmp
jae
push
jmp
insb
ljmp
insb
loop
jmp
jb
push
jmp
jb
adc
dec
fists
inc
dec
fists
add
fistps
inc
sbb
sbb
fists
add
loopne
inc
sbb
sbb
loopne
inc
or
adc
or
sbb
fists
inc
adc
leave
ficoms
inc
leave
fistps
add
adc
adc
fistps
add
ficomps
add
fists
add
ficoms
inc
cltd
ficomps
add
fistps
inc
mov
adc
pop
out
inc
pop
out
inc
dec
in
add
sbb
mov
push
add
push
or
mov
push
add
mov
push
add
jo
push
or
mov
adc
add
mov
push
add
push
or
mov
adc
add
push
inc
push
mov
push
inc
push
mov
push
add
push
inc
push
mov
push
add
mov
jmp
jo
in
add
add
add
jo
int3
inc
jo
sti
add
lret
add
add
inc
jo
sti
inc
mov
jmp
jo
in
add
lret
add
add
add
lret
inc
xor
sti
inc
xor
in
inc
jo
sti
inc
xor
sti
inc
xor
cld
add
cld
inc
jo
int3
add
lret
add
add
inc
xor
jmp
xor
cld
add
loop
inc
jo
lret
add
jo
cld
add
loop
jmp
mov
adc
jae
xor
mov
xor
mov
adc
jae
xor
mov
adc
mov
xor
jae
adc
jae
xor
jae
adc
mov
adc
jae
xor
mov
adc
xor
adc
jae
adc
xor
xor
jae
adc
xor
xor
jae
xor
jae
adc
xor
xor
add
adc
jae
por
push
jmp
jnp
adc
jnp
push
jmp
add
add
add
jecxz
add
adc
dec
jecxz
add
jecxz
add
adc
jecxz
add
fistl
add
fistl
add
add
jecxz
add
fistl
add
jecxz
add
jecxz
add
add
jecxz
add
loop
add
adc
lret
ficoml
add
fidivl
add
fidivl
add
loop
add
loop
add
fidivl
add
fidivl
add
ficoml
add
ficoml
add
mov
push
and
add
push
and
push
add
add
and
push
and
add
push
and
push
and
add
push
add
je
push
and
and
and
push
add
push
add
push
and
add
push
and
push
and
add
push
add
add
add
push
and
out
ja
out
lahf
mov
mov
add
mov
add
sti
add
mov
add
repz
sti
repz
sti
repz
cmp
jae
sti
repz
lods
cmp
jo
sti
add
add
sar
repz
fnstsw
hlt
shrd
repz
cmp
loop
add
sar
repz
cmp
out
cld
add
sti
add
mov
add
sti
repz
loop
add
repz
adc
jae
adc
mov
subl
jae
add
subl
arpl
test
jae
add
insb
out
jmp
jae
adc
and
sbb
jae
adc
and
add
insb
out
sub
jmp
add
jmp
add
jecxz
adc
jecxz
adc
add
stos
ljmp
loop
add
call
adc
mov
adc
std
icebp
jmp
call
imul
decl
fists
add
jmp
ljmp
fists
add
adc
and
cld
jmp
lcall
fists
add
fists
add
std
jmp
incl
or
adc
or
adc
daa
icebp
jmp
jmp
ficoms
add
ficoms
add
jmp
pushl
mov
push
add
call
mov
incl
mov
ljmp
cmp
addr16
lcall
push
add
push
add
xor
aas
mov
mov
push
add
push
add
push
add
cmp
cmp
pop
bound
incl
push
mov
aaa
jmp
lds
fbld
aaa
dec
loop
sub
test
mov
sub
test
dec
sub
test
ds
test
adc
test
repnz
add
imulb
addr16
mov
das
dec
test
dec
xor
test
dec
xor
test
insb
xor
test
mov
pop
xchg
pop
test
loop
imull
and
out
adc
fildll
ljmp
test
ljmp
test
test
ljmp
test
ljmp
test
adc
cmpsl
ljmp
cmpsl
ljmp
cmpsl
ljmp
loop
fstps
ljmp
cmpsl
ljmp
cmpsl
ljmp
cmpsl
ljmp
cmpsl
ljmp
arpl
jmp
adc
psubw
dec
jecxz
add
clc
jmp
add
add
pushl
jmp
lcall
add
lcall
adc
sti
add
out
add
filds
ljmp
jmp
push
std
jmp
push
std
jmp
incl
or
adc
cmp
jmp
decl
jecxz
add
cmp
jmp
push
cmp
call
mov
cmp
loop
mov
cmp
scas
jl
jmp
inc
cmp
xchg
push
decl
pop
cmp
jg
cmp
ja
cmp
outsl
lock
fdivrs
lcall
cmp
push
mov
incl
dec
xchg
cmp
inc
aam
aas
enter
ljmp
daa
in
and
pop
cmp
call
inc
cmp
subps
incl
jecxz
das
jmp
scas
das
out
movsl
xchg
das
out
cli
fbld
cs
movsl
or
movsl
fsubrs
mov
movsl
je
scas
movsl
jp
cmpsl
movsl
subb
movsl
bound
xchg
movsl
xor
movsl
sbb
add
movsl
out
ja
in
outsl
movsl
aam
movsl
aam
pop
movsl
mov
push
movsl
cld
add
insl
sub
aas
movsl
sahf
sub
movsl
mov
das
movsl
mov
sub
movsl
cld
add
adc
jae
adc
dec
movsl
ljmp
movsl
ljmp
movsl
ljmp
movsl
ljmp
mov
ljmp
movsl
ljmp
movsl
ljmp
loop
stc
push
movsl
ljmp
mov
ljmp
mov
adc
xchg
mov
ljmp
mov
jmp
decl
jmp
incl
or
adc
sti
jmp
dec
fists
add
push
jb
std
pop
gs
jbe
or
sub
sti
add
ffreep
jbe
cltd
fbstp
add
lret
ja
lods
out
outsb
mov
fnstsw
jb
shll
loopne
jne
fdivl
std
int3
jbe
pop
push
adc
cltd
fimuls
idiv
dec
insb
in
jae
dec
fistps
bound
jo
or
in
popa
mov
or
sbb
jno
or
aad
insb
pop
fsubrl
add
arpl
push
add
inc
lods
add
test
jo
adc
addr16
push
je
addr16
jno
mov
push
jo
dec
or
dec
or
arpl
ja
je
jb
gs
push
sbb
push
or
add
loop
push
shl
or
adc
and
pop
and
and
add
push
and
xor
inc
push
push
pop
add
in
sbb
in
xor
loope
push
sub
sbb
xchg
add
fistpl
and
ficoms
jo
lods
add
xor
adc
inc
adc
scas
push
add
mov
push
loopne
fwait
psubusb
cld
add
add
mov
adc
add
sbb
or
and
push
sub
loope
jmp
mov
cmp
pop
sbb
jbe
arpl
adc
xchg
and
xorb
xor
orl
pop
or
push
adc
pop
adc
push
adc
aad
or
sub
adc
jb
mov
js
insb
loope
jae
sub
xor
sub
nop
fists
inc
insb
sub
and
hlt
jne
add
fidivl
divl
test
outsb
insb
mov
adc
cmpsl
out
gs
jb
std
ja
add
add
dec
gs
fidivl
push
add
pop
add
repz
gs
js
outsb
out
add
cmc
outsb
outsl
hlt
dec
imul
icebp
popa
inc
mov
push
add
ret
lret
pusha
popa
jb
std
jno
hlt
rcrl
jo
add
mov
jp
jl
je
push
add
add
sbb
sbb
popa
mov
mov
adc
add
mov
mov
dec
jno
or
or
push
cmp
addr16
out
arpl
or
imul
add
adc
jb
xchg
xor
insl
push
mov
arpl
cmpsl
sbb
jo
cmovne
pop
or
dec
or
sbb
loop
inc
jo
jmp
adc
pop
push
jo
fiadds
mov
and
shll
imul
add
sti
jecxz
pop
movsb
ss
and
push
cld
add
loopne
sbb
jecxz
pop
fs
sbb
arpl
pop
ds
push
aaa
movhps
loop
add
adc
add
rcll
loop
add
adc
and
mov
push
sbb
in
shll
or
enter
mov
jno
mov
rcll
adcl
adc
arpl
jns
popa
pcmpeqd
xor
verr
rcrb
adc
adc
jne
push
sub
or
jns
sub
je
imul
sub
push
xlat
jmp
insb
dec
adc
paddq
jns
sar
and
add
cmpsl
add
mov
adc
ret
jns
mov
mov
mov
fwait
add
xchg
jne
or
mov
push
xchg
push
inc
aad
je
in
jg
push
mov
push
mov
call
xchg
inc
je
lret
mov
or
sbb
dec
push
jb
test
dec
cltd
jno
or
jb
dec
popl
mov
fs
out
add
test
adcb
gs
add
mov
mov
imul
sbb
and
push
movsl
cli
imul
jne
pop
loopne
fidivrs
jo,pt
loope
add
mov
cli
decl
push
push
int
lds
arpl
bound
lahf
push
push
lea
jb
aaa
out
push
xchg
fucom
bound
adc
push
xchg
sub
imul
push
int
xlat
icebp
fs
stc
icebp
insl
sub
in
jo,pt
push
push
dec
in
insl
inc
out
bound
out
jo
mov
inc
add
fcomi
add
daa
iret
cli
dec
loop
add
add
mov
or
cld
add
pop
xchg
test
fwait
out
ret
add
in
out
sub
and
inc
clc
ret
negb
lcall
cmp
shlb
cltd
pop
call
mov
push
cld
add
loop
in
push
push
call
sbb
inc
cmp
or
or
or
jbe
jae
adc
mov
cmp
sahf
adc
jae
adc
popa
add
stos
pop
add
xchg
push
xor
test
cltd
ljmp
adc
adc
jb
pop
jnp
adc
ljmp
and
cmp
insb
xor
sbb
pop
inc
clc
xlat
adc
je
pop
sbb
adc
sub
cmp
adc
ret
es
add
lcall
cltd
in
push
rol
insb
lods
in
add
jge
fs
mov
cs
bound
xchg
hlt
jecxz
add
mov
hlt
in
outsl
add
test
mov
xor
cli
xchg
mov
ja
ret
add
arpl
mov
lcall
arpl
mov
or
sub
stos
mov
dec
add
data16
loopne
push
stos
push
push
and
lds
fwait
loop
and
cmc
push
add
push
dec
jo
stc
pop
or
in
add
insb
add
mov
push
pop
jo
clc
imul
repnz
jecxz
in
ret
data16
push
jae
pop
in
pop
cmp
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
jo
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
sti
add
adc
jae
adc
add
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
movsl
imul
mov
pop
jmp
dec
ret
lds
push
mov
xchg
imul
negb
cld
jmp
xor
fstl
jmp
xor
mov
ss
int3
and
mov
push
loopne
repz
push
push
imul
push
out
mov
sbb
dec
js
pop
clc
sti
cs
xor
push
call
rol
push
push
jmp
jmp
mov
imul
jo
adc
jns
inc
hlt
repz
sahf
inc
sbb
hlt
dec
sub
jae
addr16
lock
adc
fcompl
jp
jb
adc
inc
loope
add
sahf
pop
test
mov
or
imul
xor
loopne
or
fwait
in
dec
sbbb
jmp
iret
rorb
xor
xlat
int3
sub
xlat
int3
and
xlat
int3
movsl
testl
ljmp
xor
sub
xchg
ljmp
and
push
sti
and
push
in
scas
push
mov
mov
inc
and
push
or
push
xlat
in
mov
inc
add
lcall
lret
call
aad
stc
sub
sbbl
push
cld
sti
in
mov
adc
sub
push
ja
scas
push
mov
popf
dec
fs
jge
dec
mov
in
movsl
xlat
int3
xor
xlat
int3
sub
xlat
int3
and
xlat
int3
lds
mov
pop
pop
push
xor
pop
sbb
stc
sbb
pop
xor
lahf
xlat
int3
and
xlat
int3
inc
pop
testl
jge
inc
inc
jo
int3
mov
xlat
int3
lods
sahf
xlat
int3
movsb
sahf
xlat
int3
inc
pop
testl
jb
adc
cmp
pop
push
clc
or
inc
jo
push
clc
sarb
addr16
xchg
les
push
cld
jmp
add
ss
push
sti
sbb
aaa
out
add
int3
lds
push
das
daa
out
jo
adc
imul
mov
int3
push
adc
in
cld
ja
adc
dec
aam
mov
pop
or
adc
jo
por
cs
int3
mov
xlat
int3
lods
popf
xlat
int3
movsb
popf
xlat
int3
and
loop
add
inc
inc
add
int3
xor
xlat
int3
sub
xlat
int3
and
xlat
int3
movsl
pop
testl
jo
mov
mov
popf
push
je
std
or
pushf
push
add
push
or
mov
rolb
loop
add
sbb
xor
pop
pop
cld
jmp
out
and
and
sbb
jl
in
add
sbb
pop
pop
lock
incl
test
pshufw
push
js
push
or
sbb
inc
clc
sti
in
add
pop
inc
or
icebp
popf
dec
dec
pop
dec
cmp
or
jns
pop
sub
testl
jmp
out
mov
push
push
movsb
pop
inc
call
mov
popa
adc
jo
pop
lock
add
out
add
popf
push
js
aas
lock
xor
mov
loop
test
loop
add
sbb
mov
xor
adc
jmp
adcb
mov
sahf
push
push
xchg
sahf
inc
adc
or
add
add
aaa
repz
pop
push
hlt
jmp
repz
aaa
test
jo
popf
inc
shlb
adc
sbb
jo
adc
sub
loop
push
pushf
popa
sub
inc
pushf
pop
sbb
lock
pop
mov
ljmp
xor
mov
ljmp
sub
pop
mov
push
sbb
sti
es
sbb
lcall
popa
iret
or
es
mov
pop
add
mov
xchg
shrb
sti
push
testl
cmp
pop
inc
loopne
fucomi
mov
popf
xlat
int3
inc
pop
testl
jge
inc
inc
jo
push
clc
add
mov
clc
and
std
outsl
mov
cld
jmp
add
xor
sbb
ss
push
cs
int3
and
xlat
int3
lds
mov
ss
mov
inc
inc
jo
inc
add
lahf
fwait
push
jne
int3
and
xlat
int3
inc
push
testl
ret
ds
and
mov
jmp
pop
mov
and
fwait
dec
cwtl
push
inc
clc
jmp
loop
add
mov
jmp
std
in
rcrb
dec
push
xor
push
clc
sti
sbb
mov
push
push
adc
pop
or
sbb
popf
dec
sbb
mov
dec
cld
jge
and
mov
inc
mov
xlat
int3
mov
xlat
int3
lods
popf
xlat
int3
movsb
popf
xlat
int3
and
jmp
and
jo
push
add
loop
in
inc
and
push
mov
out
xchg
pop
iret
or
and
push
push
pop
clc
and
int3
and
adc
jo
inc
hlt
adc
sub
mov
loope
add
adc
lret
add
jb
adc
shl
push
sti
out
into
push
mov
xchg
ret
adc
mov
mov
add
loop
add
adc
jo
fimull
jo
add
inc
and
push
rcrl
sahf
dec
mov
mov
subl
add
sbb
add
cmc
mov
int3
and
xlat
int3
movsl
pop
testl
lods
add
je
int3
sub
xlat
int3
and
xlat
int3
movsl
pop
testl
jo
push
or
push
lret
mov
in
cmp
repz
out
popf
push
rclb
or
push
call
jo
sbb
add
adc
sbb
decl
push
jecxz
xor
adc
jo
jp
loopne
adc
xchg
jmp
sbbb
js
sahf
push
push
xor
ljmp
jecxz
add
sbb
lods
mov
hlt
sti
adc
adc
popf
mov
sti
sbb
adc
pop
call
add
push
fcomps
adc
adc
xchg
inc
addb
mull
popf
push
nop
xlat
mov
inc
cwtl
pop
pop
or
call
sub
push
inc
je
sti
push
pop
xchg
subl
dec
pop
arpl
sub
adc
jmp
pop
inc
in
jp
cld
das
xchg
add
and
push
add
pop
in
incl
arpl
or
sbb
xorl
pop
or
aam
push
xor
inc
cmp
xor
or
adc
jo
popf
push
lods
xor
xor
xchg
rcrl
add
cli
adc
jo
popf
push
je
jge
outsl
xor
mov
repz
into
push
mov
adc
clc
push
push
add
pop
out
lret
push
and
push
mov
popf
dec
adc
pop
fsubr
das
lret
mov
pop
push
loopne
pop
repz
jle
mov
inc
inc
jo
sti
xchg
aam
ljmp
popa
lods
movsb
jo
adc
cmp
popf
inc
nop
pop
pop
fdivs
mov
jo
fwait
dec
test
loopne
sahf
inc
inc
jo
push
xor
rorl
sbb
shll
push
sti
out
into
push
mov
inc
mov
mov
push
popf
pop
mov
xor
xor
mov
inc
inc
jo
sub
shll
add
and
push
jmp
push
push
mov
inc
mov
xor
jne
test
subl
push
fcomps
mov
lret
add
jae
adc
jo
sti
push
cltd
test
xorl
les
and
push
jmp
repz
inc
inc
jo
pop
sub
push
add
shll
push
pop
mov
iret
or
addl
push
dec
jno
mov
ret
lea
clc
adc
jo
ljmp
subl
mov
and
xlat
int3
movsb
xchg
xlat
int3
and
ficompl
int3
movsb
xchg
xlat
int3
inc
push
notl
sub
add
in
push
xor
popf
xor
pop
and
pop
mov
xlat
int3
lds
push
fcomps
push
inc
jo
notl
loop
call
repz
sbb
push
in
sbb
mov
inc
inc
xchg
int3
movsl
push
testl
jo
push
fsubrl
adc
scas
sbb
add
adc
sub
loop
inc
int3
loope
add
pop
or
aam
push
xor
cli
test
nop
xor
sub
jo
pop
insl
jp
inc
jo
adc
jo
sbb
inc
jo
adc
add
sub
shll
add
in
roll
jo
adc
repz
adc
or
incl
inc
repz
mov
popf
or
jmp
addb
push
call
xor
imul
and
adc
in
add
loop
in
inc
and
insl
jle
inc
jo
adc
jae
xor
popf
adc
and
xchg
les
jmp
mov
jmp
add
ljmp
mov
inc
call
rep
jns
and
sti
aad
sub
in
and
mov
inc
out
push
mov
inc
call
rep
pop
mov
insb
inc
cld
add
insl
push
loopne
insl
pop
fsubl
mov
les
jecxz
xor
popf
adc
and
push
xor
adc
or
jae
out
pop
cwtl
in
lcall
iret
or
adc
push
push
dec
push
in
and
pushf
inc
sub
pop
loopne
in
loop
mov
fwait
dec
adc
add
jo
std
or
adc
fwait
push
call
and
sbb
inc
and
add
adc
push
add
jmp
subb
icebp
mov
popf
adc
jae
jmp
jp
out
push
xor
adc
jmp
imul
mov
mov
mov
mov
mov
pop
sahf
inc
inc
jo
pop
imull
jg
or
jmp
in
add
mov
add
popf
push
clc
lret
pop
lcall
xor
inc
call
rep
jnp
jo
sti
aad
jle
test
mov
inc
jo
iret
add
mov
adc
iret
push
xor
fwait
inc
add
pop
insl
jle
mov
inc
inc
jo
xor
push
pop
xor
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
add
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
add
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
add
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jo
adc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
les
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
cwtl
inc
add
inc
add
cwtl
inc
add
inc
add
cwtl
inc
add
inc
add
cwtl
inc
add
inc
add
xchg
inc
add
cwtl
inc
add
inc
add
cwtl
inc
add
inc
add
cwtl
inc
add
inc
add
cwtl
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
xchg
inc
add
inc
add
add
cwtl
inc
add
cwtl
inc
add
inc
add
inc
add
cwtl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cwtl
inc
add
cltd
inc
add
inc
add
cltd
inc
add
inc
add
cltd
inc
add
inc
add
cltd
inc
add
inc
add
cltd
inc
add
cltd
inc
add
inc
add
cltd
inc
add
inc
add
xchg
inc
add
cltd
inc
add
add
inc
add
cltd
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
cwtl
inc
add
add
inc
add
add
inc
add
add
inc
add
add
cltd
inc
add
cltd
inc
add
cltd
inc
add
cltd
inc
add
inc
add
inc
add
inc
add
cltd
inc
add
cltd
inc
add
cltd
inc
add
cltd
inc
add
cltd
inc
add
inc
add
cltd
inc
add
cltd
inc
add
cltd
inc
add
cltd
inc
add
cltd
inc
add
cltd
inc
add
cltd
inc
add
cltd
inc
add
cltd
inc
add
cltd
inc
add
cltd
inc
add
cltd
inc
add
lcall
or
inc
add
lcall
sbb
inc
add
inc
add
lcall
sub
inc
add
lcall
cmp
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
lcall
mov
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
lcall
int3
lcall
aam
inc
add
lcall
loopne
inc
add
lcall
call
lcall
hlt
lcall
cld
lcall
add
inc
add
fwait
inc
add
inc
add
lcall
adc
inc
add
fwait
inc
add
inc
add
fwait
inc
add
lcall
sub
inc
add
fwait
inc
add
inc
add
fwait
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
fwait
inc
add
add
inc
add
inc
add
add
inc
add
lcall
js
inc
add
add
fwait
inc
add
fwait
inc
add
fwait
inc
add
fwait
inc
add
lcall
rcrb
add
inc
add
inc
add
add
inc
add
add
fwait
inc
add
fwait
inc
add
lcall
enter
int3
fwait
inc
add
add
fwait
inc
add
fwait
inc
add
fwait
inc
add
fwait
inc
add
inc
add
fwait
inc
add
fwait
inc
add
fwait
inc
add
fwait
inc
add
add
add
fwait
inc
add
pushf
inc
add
inc
add
pushf
inc
add
inc
add
pushf
inc
add
inc
add
pushf
inc
add
inc
add
pushf
inc
add
inc
add
pushf
inc
add
inc
add
pushf
inc
add
pushf
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
inc
add
inc
add
pushf
inc
add
inc
add
pushf
inc
add
inc
add
pushf
inc
add
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
inc
add
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
popf
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
popf
inc
add
inc
add
inc
add
inc
add
inc
add
popf
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
add
popf
inc
add
inc
add
popf
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
popf
inc
add
pushf
inc
add
inc
add
popf
inc
add
inc
add
popf
inc
add
popf
inc
add
inc
add
popf
inc
add
popf
inc
add
inc
add
inc
add
popf
inc
add
inc
add
popf
inc
add
