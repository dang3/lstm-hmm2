push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
call
push
call
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
mov
pusha
movl
movl
call
test
je
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
popa
mov
mov
mov
mov
push
mov
mov
mov
mov
sub
mov
mov
mov
mov
ret
mov
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
movl
movl
mov
mov
lea
push
mov
push
push
call
test
jne
mov
jmp
jmp
call
xor
jmp
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
je
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
shr
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
movl
mov
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
mov
push
mov
push
call
add
sar
cmp
jne
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
lea
push
call
movl
jmp
mov
add
mov
mov
cmp
jge
cmpl
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
mov
add
mov
add
mov
mov
cmpl
jne
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
jmp
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
pop
ret
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
mov
mov
mov
push
lea
push
call
mov
push
mov
push
mov
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
mov
mov
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
mov
mov
add
mov
movl
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
mov
add
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
add
add
xor
add
sub
add
lods
cmp
xor
cmp
xor
imul
add
mov
sahf
xor
cmp
xor
cmp
ljmp
ds
add
xor
add
add
outsb
cmp
xor
add
xor
daa
xor
aaa
ret
xor
aaa
jmp
xor
xor
cmp
xor
cmp
xor
xor
cmp
xor
cmp
xor
cmp
xor
cmp
push
xor
cmp
xorb
xchg
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
idivl
push
xor
mov
mov
xor
add
xor
inc
cmp
ss
cmp
ss
cmp
jg
push
ss
cmp
mov
jb
cmpsb
cmp
add
ss
cmp
aaa
sbb
aaa
addr16
aaa
pop
cmp
aaa
cmp
aaa
movsl
cmp
aaa
sarl
aaa
insb
cmp
aaa
xchg
add
or
add
or
add
or
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
xor
add
xor
add
xor
add
add
add
jo
add
je
inc
data16
insl
jb
and
add
gs
fs
pop
bound
jnp
inc
or
add
gs
fs
pop
bound
jnp
inc
jmp
imul
jne
int3
inc
popa
outsb
aad
gs
xor
add
bnd
popa
mov
insb
inc
add
push
add
jbe
je
add
jp
imul
or
add
je
inc
insl
jne
push
inc
popa
outsb
dec
gs
xor
add
sub
or
dec
or
or
jmp
or
adc
inc
add
or
out
imul
arpl
insb
jb
loop
add
in
popa
fs
pop
bound
jp
inc
add
imul
xor
push
insl
insb
insb
xor
add
test
arpl
add
mov
jae
jge
add
arpl
cs
add
inc
outsb
insl
arpl
add
pop
bound
inc
push
inc
inc
outsl
arpl
or
add
popa
jb
and
insb
inc
add
or
add
bound
add
gs
inc
inc
fsubs
jmp
je
imul
jl
add
insl
popa
jo
fs
outsl
rorb
add
lcall
xor
insb
insb
xor
add
jbe
je
andl
js
gs
jns
add
or
xor
add
xor
add
xor
sti
add
cmp
add
loop
add
and
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
bound
xor
sbb
sarb
ja
shr
addr16
shrb
shrl
aam
bound
insl
outsb
push
lods
dec
push
push
int
fs
repnz
xor
jmp
mov
add
or
out
cmp
add
or
add
or
add
or
add
aaa
jmp
push
xor
jmp
pop
xor
jmp
xor
or
add
or
adc
or
add
xor
jmp
add
or
add
or
xchg
xor
jmp
mov
xor
jmp
jmp
add
or
adc
or
jmp
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
or
jmp
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sbb
add
or
add
push
popa
gs
or
add
sbb
add
adc
add
push
add
enter
enter
cwtl
or
add
add
fs
cld
imul
add
cmp
add
push
add
pop
or
add
add
dec
or
add
add
popa
je
add
add
dec
dec
add
sbb
add
sbb
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
imul
mov
loope
mov
mov
call
js
add
add
call
adc
loope
jb
mov
add
push
or
push
or
add
cld
push
xorl
pop
fsts
inc
xor
add
divl
or
sub
movsb
divl
or
add
arpl
idivb
jno
std
out
mov
testb
mov
int
sub
test
dec
jmp
div
inc
icebp
add
or
mov
xor
jb
sub
cmp
out
cmp
xchg
add
mov
sbb
lret
in
add
orl
inc
xor
sti
add
out
cmpsb
inc
cmp
add
add
or
and
or
jmp
stos
sbb
call
xor
push
jae
inc
mov
jmp
addb
jmp
in
jne
mov
adc
add
and
mov
add
xchg
xor
add
jnp
or
testl
adc
add
in
call
je
mov
add
enter
mov
adcb
push
icebp
push
incl
divb
jg
or
pop
insl
adc
fcomps
mov
jae
sub
inc
pop
sub
and
or
xchg
sub
push
nop
pusha
xchg
adc
leave
incl
add
pop
pop
sub
push
leave
ret
cmpl
jne
mov
add
mov
ret
mov
lods
inc
cld
dec
or
add
addr16
or
adc
jne
adc
jne
jae
adc
push
leave
repz
adcl
pop
clc
pop
pop
add
or
adc
add
loop
pop
add
pop
pop
add
xor
xchg
pop
push
mov
xchg
push
pop
pop
push
pop
pop
push
mov
inc
mov
add
fnstsw
mov
sub
add
adc
or
fisttpl
out
dec
adc
test
out
sbb
push
add
push
sub
repnz
pop
mov
fildl
popa
ljmp
out
xchg
fs
adc
loope
jmp
add
icebp
add
push
pop
popa
push
push
icebp
or
jne
out
xor
repnz
rcll
add
sbb
add
repnz
cmp
call
xor
add
push
add
jmp
mov
pop
pop
add
push
inc
jmp
and
jne
mov
clc
jns,pn
add
xor
push
add
jns
call
bound
jae
push
pop
icebp
lcall
or
pop
jle
cltd
push
sbb
repnz
jnp
call
ljmp
cmpb
mov
imul
sbb
jne
scas
ret
clc
jne
xchg
jno
cmp
idiv
mov
adc
add
insb
in
sbb
pushl
inc
add
int
push
std
in
ret
addr16
mov
call
pop
mov
clc
bswap
jae
sub
adc
or
popf
gs
orl
jne
inc
add
add
fcos
mov
call
or
mov
lds
sub
mov
ret
push
mov
sbb
inc
incl
mov
or
lock
inc
or
mov
mov
sub
lds
xor
adc
call
jl
fcmovnbe
std
dec
lock
icebp
pushf
cld
mov
add
lret
add
jl
incb
cmp
repz
push
stos
adc
jl
xor
or
push
xchg
pop
stc
push
mov
imul
add
leave
cmp
add
lar
pop
shrb
lock
rorb
pop
mov
add
shrl
loopne
mov
icebp
out
es
sbb
jae
pop
xor
pop
xor
pop
xor
jmp
fildl
clc
jmp
inc
pop
cmp
jns
icebp
aam
out
dec
leave
or
add
xchg
mov
stos
sti
jae
mov
or
jmp
out
out
adc
cmp
mov
xor
pop
add
cmp
xchg
test
out
sbb
push
pop
cld
roll
je
imul
xor
mov
xor
test
adc
pushl
loope
lods
push
or
jmp
fisubl
push
in
sti
imul
in
and
pop
or
dec
adc
ret
or
cmp
clc
push
push
clc
add
mov
add
inc
flds
add
pusha
adc
mov
jne
scas
pop
clc
jmp
pusha
inc
clc
mov
pusha
in
push
inc
or
repz
mov
mov
mov
xor
lea
cmp
jne
rcrl
pop
test
adc
push
mov
or
pop
adc
popf
clc
pushl
cmc
jne
add
pop
or
movsl
loopne
std
xor
in
call
push
loopne
and
in
jne
or
jge
bnd
mov
add
std
jmp
jne
shll
jbe
cld
out
mov
incl
fldl
je
xorl
inc
fiadds
xor
in
jne
arpl
sbb
in
lcall
test
js
add
mov
in
jmp
sti
addr16
lcall
bound
in
decl
in
jne
or
push
into
jecxz
pop
xor
xchg
sti
into
aas
push
in
scas
outsb
jmp
in
clc
cwtl
in
and
add
xchg
jecxz
dec
js
in
add
pop
xchg
into
jno
icebp
sbb
outsb
jecxz
inc
xor
dec
enter
cmp
dec
or
call
xor
jle
es
loope
gs
jmp
dec
gs
mov
lret
movsb
out
xor
jmp
push
out
add
cli
sub
jmp
sub
jne
ljmp
adc
pop
cld
adc
mov
clc
cltd
hlt
or
pop
xor
add
fdivr
pop
add
or
cmp
ljmp
popa
adc
mov
cmp
sbb
ljmp
loop,pt
bound
les
dec
hlt
jmp
jno
push
outsb
mov
or
fs
dec
push
adcl
incl
popa
dec
clc
andl
insl
clc
int3
out
jne
and
add
loop
je
out
jne
add
add
cltd
or
add
dec
hlt
lcall
or
jmp
lock
jo
sti
jmp
ror
or
jmp
add
leave
mov
add
inc
cld
ljmp
out
inc
or
add
pushl
cmpsl
repnz
je
pop
movsl
cmp
jo
mov
xor
sub
icebp
cmp
sub
sbb
add
jge
in
mov
in
lea
cmp
fistpl
int3
repnz
and
fucomi
test
fld1
jne
or
jmp
repnz
mov
sub
leave
or
bnd
jmp
bnd
cli
dec
cmpsl
mov
mov
mov
lea
incl
pushf
fcmovu
lret
add
xor
jmp
fistpl
inc
push
call
fimull
jmp
xchg
or
jp
fldenv
outsb
mov
or
sub
or
add
aad
push
insl
add
add
stc
call
add
xchg
sub
fisttpl
mov
cmp
push
push
shl
fcoms
xorb
inc
cmp
adc
sbb
xchg
add
fdivp
sti
push
cwtl
add
fildll
push
dec
test
fidivs
fiaddl
fmuls
aad
mov
fisubs
adc
push
clc
cs
icebp
lcall
fisubs
xor
push
in
add
or
jmp
cmpsb
fdivrp
jmp
add
pop
mov
add
orl
icebp
dec
push
or
outsl
repz
cmp
leave
stos
dec
ficoms
xchg
inc
icebp
xor
push
or
or
ret
push
mov
mov
ljmp
dec
fldt
repz
ret
push
mov
mov
popf
aad
mov
ljmp
pop
call
push
push
and
cld
adc
adc
pop
arpl
jnp
repz
andl
leave
lcall
les
add
pop
in
or
pop
jge
xor
cmp
add
bnd
pop
pop
ret
push
jns
add
idivl
cmp
inc
jp
and
ds
es
dec
mov
out
inc
mov
mov
adc
lock
cmpsl
das
outsl
aad
jp
leave
jae
add
fiadds
push
jle
cld
pop
stos
out
jnp
insb
push
call
mov
in
inc
dec
repnz
xor
jb
add
call
out
je
fisubrs
push
or
es
sub
mov
fcomi
lods
je
jno
cmp
ds
mov
test
jmp
xlat
mov
sub
sbb
ds
fisubs
mov
or
notl
std
in
fstpt
das
pop
lea
add
fistpl
push
ret
add
xchg
add
faddl
cmp
icebp
inc
mov
fisttpl
popf
inc
push
jmp
adc
adc
xchg
mov
pushl
inc
clc
outsb
push
fidivl
add
fidivl
aad
jmp
in
lret
jmp
mov
mov
add
push
clc
je
jmp
xchg
cmp
notl
adc
push
pop
push
and
or
push
xor
out
or
inc
clc
std
or
stos
xchg
out
and
jne
mov
std
pushl
test
call
ret
or
sbb
mov
mov
rorl
rorb
add
fadds
cmpl
jne
inc
push
add
fsubr
jae
iret
jnp
add
xchg
or
add
imul
std
or
jne
in
mov
shlb
jno
in
mov
push
push
inc
hlt
add
add
les
or
mov
jecxz
inc
mov
fadds
add
push
cmp
mov
outsl
clc
movsb
lods
fistl
int3
add
inc
push
adc
xchg
fucomip
jle
add
cmp
pop
or
sub
mov
out
inc
inc
jmp
je
pop
push
clc
scas
loop
jne
cli
sbb
xor
mov
cmp
push
sbb
or
pop
testl
clc
lds
and
sub
lds
mov
xor
jmp
push
rolb
add
dec
icebp
insl
xor
cld
testl
add
push
loope
xlat
and
inc
or
les
add
add
mov
cmp
mov
stc
div
inc
jmp
mov
or
ret
sbb
sub
add
dec
or
ret
cmpl
inc
adc
jge
sbb
leave
ljmp
or
jb
mov
pusha
in
or
stos
imul
call
stos
inc
or
and
orl
or
dec
add
add
inc
cmc
lods
inc
inc
jmp
fsubr
add
stos
mov
mov
xor
jb
call
jb
jne
arpl
adc
sub
cmp
add
lret
pop
add
push
orl
inc
or
inc
inc
add
push
movl
mov
or
out
dec
sbb
inc
stc
out
mov
add
loopne
push
call
adcl
mov
call
add
add
pop
imul
je
mov
or
sti
incl
or
jne
in
adcl
xor
add
xor
lods
sti
xchg
push
mov
bound
mov
mov
ljmp
cmp
fsub
imul
lock
jne
imul
add
xor
sub
sub
fdivrl
push
sbb
aad
imul
mov
fdivl
fsts
ret
je
pop
inc
cld
fcmovu
add
pop
sbb
inc
mov
lret
jmp
mov
add
ret
sbb
pop
repz
xor
jmp
or
pop
jmp
ljmp
or
add
icebp
jmp
out
jmp
repnz
loop
dec
movsb
mov
xor
xor
repz
ss
in
inc
cmp
test
add
jmp
fcompl
cwtl
aam
jmp
push
cwtl
clc
call
pop
repnz
jmp
add
add
pop
add
lcall
jne
cmp
out
into
fidivs
jne
jp
or
in
in
add
aaa
leave
jne
pop
pop
cld
rcl
jmp
mov
cld
mov
cmpsb
in
jb
add
jnp
fcmovbe
push
test
push
pop
or
pop
or
jmp
loope
fucom
add
push
mov
cwtl
inc
pop
push
push
call
mov
or
ret
add
cli
out
cmp
cmp
mov
shrb
mov
push
add
push
call
rorl
or
or
mov
cmp
mov
dec
push
movl
ret
add
xor
or
add
mov
ljmp
fdiv
inc
or
pop
rcrb
or
lods
sub
arpl
or
ds
push
or
in
fiadds
xor
push
add
xchg
filds
xor
push
call
or
lds
xchg
mov
mov
jecxz
mov
xor
xchg
and
filds
je
jecxz
daa
stc
and
mov
fcos
jbe
and
filds
add
xor
test
xor
cld
push
dec
inc
xor
stc
es
add
xor
add
mov
push
xor
int3
push
fcos
movsb
gs
xor
stos
pop
jle
xlat
andl
add
push
out
add
leave
fidivrs
or
add
adc
add
or
jg
loopne
flds
xchg
jmp
add
or
call
mov
fcoms
into
mov
fadds
mov
add
leave
fidivrs
or
add
popa
dec
jo
adcl
jmp
or
jmp
push
loopne
data16
call
loop
incl
jo
jmp
jge
inc
leave
iret
lcall
xor
mov
mov
incl
lcall
out
movsl
add
xor
jmp
shl
jle
call
adc
mov
dec
iret
lcall
popf
pop
dec
sub
iret
incl
xor
add
pusha
sti
add
jae
fnstcw
push
test
test
outsl
mov
push
jo
loop
fcomps
lea
cwtl
mov
in
outsl
mov
call
jo
mov
das
mov
push
aas
js
out
aas
mov
fildl
pushl
and
ljmp
fstp
loop
or
int
cld
out
jg
push
inc
in
jg
mov
jg
call
incl
loope
divl
ja
pushl
mov
decb
jne
xchg
jecxz
loopne
add
insb
shr
fisubrs
jmp
fnsave
push
aas
nop
in
inc
call
movsb
pop
fucomip
scas
push
xor
fsubr
in
sahf
idivl
xor
add
stos
mov
not
decl
push
aad
add
outsb
notl
mov
jl
in
ds
loop
loopne
shlb
xchg
aad
sbbl
aad
in
aad
loope
loope
or
fsubrl
or
pop
in
sbb
jmp
dec
xchg
push
in
int3
push
or
int3
mov
pop
in
add
aam
aad
and
loopne
int3
jmp
ljmp
mov
int3
jb
stos
push
add
ficompl
ds
shll
add
lret
call
sahf
cmpsl
fsubr
xchg
in
pop
jg
lret
pop
daa
ljmp
adc
mov
inc
jmp
fdivrl
jl
in
cmc
test
mov
push
bound
les
xor
add
mov
or
idiv
xchg
cs
jne
or
call
pusha
das
int
out
inc
cld
jmp
inc
xchg
xor
int3
cmp
lmsw
popl
add
pop
add
push
dec
aas
or
xor
xorl
mov
pushl
mov
or
jnp
add
lods
mulb
or
fnsave
inc
add
push
add
mov
push
push
mov
or
stc
jmp
dec
clc
lcall
add
jbe
iret
xchg
and
int
incl
mov
jnp
pop
push
add
adc
push
loopne
or
or
jno
add
inc
add
or
add
xlat
ret
je
lcall
xor
fldt
jmp
loop
mov
shll
repz
push
mov
dec
or
loopne
pushl
adc
mov
sbb
jne
and
xchg
je
out
in
sar
xchg
add
shlb
mull
gs
mov
pop
or
mov
mov
leave
push
cld
push
outsl
leave
add
jns
ret
movsb
adc
sub
push
xchg
and
cmpsb
xchg
shll
sbb
lds
dec
xchg
pop
test
or
ljmp
jmp
xor
and
cmp
pusha
or
filds
xchg
sub
shrb
cld
sahf
xor
cmp
or
fistpl
inc
mov
xor
mov
in
out
cli
add
sub
or
push
pusha
enter
push
inc
jmp
xor
enter
dec
add
or
jmp
loope
and
dec
cmp
xchg
add
enter
lcall
jae
call
sarl
inc
jmp
xor
ret
pushf
and
adc
popf
das
mov
jmp
xor
add
je
add
arpl
pop
fcoms
pop
je
mov
das
in
mov
jmp
xchg
add
pop
or
and
leave
ret
push
mov
in
push
push
xchg
push
or
or
add
leave
lods
push
call
xchg
aad
fadds
or
add
leave
in
cmpb
popa
cmc
or
popa
add
test
inc
lret
iret
test
or
or
add
sbb
nop
imul
xor
mov
inc
adc
mov
repnz
nop
add
lods
jae
jae
jae
or
sbb
nop
mov
mov
dec
or
je
aaa
les
addb
inc
dec
or
je
xor
inc
add
repnz
xchg
sar
jp
cs
jae
cli
aas
sub
in
bound
cld
stos
test
mov
insb
decl
add
or
into
xchg
inc
les
rcrb
mov
pop
rorl
je
leave
jns
out
mov
jns
xchg
xor
fs
sbb
dec
jmp
inc
xor
loop
jl
test
hlt
lcall
add
loope,pt
pop
lds
add
or
clc
xchg
call
fcoml
jmp
xchg
jmp
addr16
mov
xor
or
je
lods
jmp
xor
add
mov
add
xor
add
fidivs
call
pop
scas
mov
call
loop
cmp
inc
jmp
add
ret
push
subl
or
or
scas
pcmpeqd
ret
jmp
mov
push
cmc
ret
mov
decl
or
cwtl
popa
add
popa
add
pop
add
inc
fwait
in
push
aad
pop
inc
or
mov
iret
inc
je
aam
adc
pop
or
call
mov
jne
pusha
add
add
fidivl
push
into
mov
iretw
call
out
in
out
call
mov
repnz
push
mov
call
pop
or
fnstsw
add
popf
imul
ficomps
addr16
or
xor
add
mov
lret
push
or
fnsave
mov
mov
xor
mov
movzbl
add
xor
pop
jmp
pop
stos
lret
xlat
cmp
ds
mov
jns
add
push
and
mov
lret
mov
lret
stos
lret
gs
mov
push
fsts
sar
ficomps
lret
jne
pop
fsubl
cmp
aad
mov
scas
dec
lret
dec
inc
xchg
jmp
iret
add
mov
cltd
addr16
add
mov
dec
inc
ret
mov
sub
dec
mulps
dec
pop
mov
aam
shll
rcrl
shll
mov
or
jl
or
jmp
leave
push
aaa
movsl
fcoml
mov
leave
stos
int3
xor
mov
adc
out
push
dec
add
dec
andb
ss
mov
or
push
je
lods
add
mov
mov
loopne
jecxz
lods
mov
fucomi
xor
lea
shlb
push
inc
jl
imul
cmp
dec
cmp
imul
pop
sub
xor
add
ficomps
stos
add
rclb
lds
cmp
jmp
imul
xor
popa
dec
or
rcrb
or
and
inc
fs
add
ss
clc
call
or
adc
xchg
lret
je
lock
add
iret
push
push
cmc
adc
arpl
je
pop
jmp
add
dec
or
inc
rorl
cld
iret
dec
in
sbb
pushl
addb
or
add
mov
add
sbb
push
popa
adc
xor
icebp
js
icebp
add
icebp
mov
inc
mov
iret
add
jne
pop
stc
fidivl
mov
ret
pop
jmp
jp
cmpsb
jge
out
jmp
add
lahf
fildl
sub
sti
dec
mov
ret
xor
add
dec
or
cmp
mov
fcmovne
scas
pop
add
scas
pop
add
push
clc
pushf
mov
cli
scas
add
icebp
repz
test
xchg
cli
scas
xor
jp
xor
pop
xor
cld
test
xor
jmp
add
leave
fdivr
add
adc
jae
jmp
movb
push
push
xchg
std
and
mov
xor
sbb
sub
inc
das
jmp
dec
sub
loop
popf
sbb
clc
pop
aaa
add
ljmp
jb
ds
out
xchg
hlt
pop
call
dec
cld
fisubl
mov
dec
lods
push
mov
xor
or
jne
pop
scas
jmp
or
sbb
push
or
sub
adc
sub
pop
xor
add
or
incb
clc
and
jnp
cmp
mov
add
sub
in
add
cmp
sub
mov
cld
imul
or
shr
jecxz
pop
pop
es
fadds
xor
add
ja
adc
jmp
add
rolb
inc
ja
adc
ret
cmp
pop
or
dec
push
sub
mov
rcrb
enter
shl
rol
ret
add
fidivl
popl
add
pop
pop
mov
ret
in
push
push
mov
add
mov
xor
sub
std
push
je
xlat
add
arpl
incl
dec
cld
push
mov
push
stos
xchg
xchg
loope
push
pop
pop
sbb
aas
xor
ss
and
add
fcoml
dec
inc
xor
xor
scas
add
pop
les
out
out
fimull
and
or
frstor
lock
push
sarb
xchg
add
mov
inc
cmp
jmp
dec
sub
add
or
push
xor
ret
xor
push
test
fdivl
or
jnp
or
mov
lods
xchg
ret
and
mov
xor
inc
mov
add
xor
inc
xor
aaa
dec
mov
sbbl
inc
xor
sub
sbb
mov
lock
cmp
std
fidivl
or
ret
faddl
stos
ret
add
jmp
add
jae
hlt
shrl
cld
shrl
jmp
add
pop
mov
mov
shlb
and
jb
clc
sbb
int3
ljmp
in
dec
sub
imulb
xor
add
sbb
cmp
jmp
push
inc
inc
jmp
jne
leave
sub
inc
jmp
mov
es
add
xor
add
xor
lret
add
add
rorl
lea
push
enter
aad
add
int3
je
jo
dec
inc
or
call
pop
flds
fadds
andps
add
enter
dec
leave
incl
fmuls
add
dec
pop
pushl
lcall
sub
or
incl
loopne
add
sbbl
add
enter
and
dec
mov
add
add
loop
jns
insb
mov
push
es
mov
inc
xor
cmp
push
sub
mov
inc
mov
mov
add
push
mov
xlat
mov
rdtsc
mov
or
cmp
cmpb
aam
jmp
loopne
call
pusha
add
inc
dec
sbb
add
stos
lock
or
add
and
add
cmp
daa
xor
insb
mov
idivb
aaa
mov
stos
lahf
fsubrp
add
or
mov
pop
mov
stos
int
jmp
int
pop
bound
push
sbbb
jg
sub
lods
subb
or
or
add
adcb
test
push
mov
ljmp
cmc
add
aas
or
icebp
or
jmp
mov
pop
cmp
out
xor
dec
add
fcmovnb
out
es
add
adc
es
push
sbb
inc
mov
int
or
push
sarl
add
into
jb
jmp
and
dec
pop
inc
ret
xor
test
pop
push
sbb
jne
mov
sbb
jb
or
push
in
mov
push
nop
scas
xor
repnz
push
rol
or
mov
mov
mov
push
mov
add
mov
clc
jnp
and
jnp
lea
or
leave
adc
rolb
clc
xor
sbbb
push
or
fwait
sbb
xor
jmp
xor
jne
pop
scas
repz
add
sbb
ret
mov
clc
and
mov
sub
add
and
mov
rorl
jnp
mov
inc
and
dec
dec
loope
adc
call
loopne
add
mov
sahf
pop
sbb
ficoms
or
mov
xor
addb
cmp
icebp
stos
push
ret
stos
ja
clc
push
js
clc
mov
in
mov
xchg
lahf
rorl
lret
outsl
mov
pop
mov
pop
dec
pop
or
lds
xor
cltd
notb
lods
adc
pop
dec
enter
shlb
and
insb
xorb
notl
jno
out
push
jb
add
cmp
lock
test
ret
mov
repz
shrl
push
scas
cli
mov
jb
popl
addr16
cmpsl
les
mov
jmp
mov
mov
aas
ljmp
rolb
bound
cli
lret
clc
je
or
cmp
shl
mov
mov
lea
dec
mov
jb
push
add
ljmp
cli
fimull
fisttpll
aaa
inc
sub
insl
add
and
mov
pop
xor
jmp
mov
mov
mov
xor
add
add
fimull
insl
lea
add
or
push
cmpsb
cli
xor
mov
fwait
inc
cmp
add
add
adc
stc
cmp
cli
fstl
out
sahf
sbb
ret
inc
add
cli
and
mov
les
out
cmp
add
cmp
stc
sub
xchg
out
pop
aaa
lret
add
cmp
lds
add
jl
xor
xchg
lds
or
jmp
mov
mov
pop
xchg
lods
pop
inc
xor
shlb
fnstcw
dec
hlt
clc
lods
and
push
divl
les
pop
sarb
push
add
les
xor
mov
bound
mov
mov
push
add
cmp
xor
and
or
mov
or
icebp
lret
clc
adcb
lods
push
sub
mov
enter
lret
bound
testb
daa
ret
sbb
js
gs
adc
dec
sub
aas
aad
jo
ljmp
mov
cwtl
es
shlb
lret
or
cli
loope
mov
and
cmp
xor
jb
inc
mov
mov
pop
mov
adc
stos
mov
xchg
ret
scas
lea
sub
mov
dec
fucomp
adc
js
cli
mov
or
add
xor
mov
scas
xor
test
das
and
sub
and
shrb
pop
or
jb
stc
clc
fimull
in
adc
pop
shrl
or
ljmp
negb
cmp
repnz
mov
lock
add
pop
add
ret
pop
lret
iret
mov
sti
jb
sti
push
mov
cmp
test
ret
mov
mov
xchg
pop
in
add
add
rclb
insl
xor
jnp
lea
or
sbb
adc
and
clc
les
add
mov
jmp
jne
xor
add
xor
addl
lahf
std
shl
add
mov
scas
mov
lea
filds
push
xor
xor
inc
jp
xor
sbb
mov
cld
shlb
lret
mov
mov
mov
lea
in
lcall
loope
adc
pop
loop
xor
mov
pop
jb
pop
xor
jno
add
out
mov
jmp
jo
or
or
scas
movsb
xchg
notb
add
cmpsl
sub
cltd
jae
stos
mov
lods
and
popf
mov
icebp
enter
push
mov
stos
mov
lods
mov
test
add
cmp
inc
jae
stos
push
mov
scas
loop
inc
mov
mov
cmp
jecxz
leave
out
jb
es
stos
fisubrl
xchg
mulb
pop
fucomip
daa
cmp
add
mov
cmc
cli
repnz
cmc
imull
adc
sub
add
sub
mov
cli
lcall
push
dec
sbb
das
ss
xor
out
adc
mov
stos
incl
fcomip
clc
fs
add
scas
inc
enter
mov
sbb
std
idiv
add
jnp
imul
add
jecxz
lcall
xor
loop
cmc
negl
mov
add
movsb
rol
adc
mov
cmp
stc
sub
pushf
jnp
xchg
push
pop
and
into
adc
or
adc
pop
aam
dec
or
inc
or
sbb
or
pop
adc
pop
add
ret
aas
mov
or
clc
push
cmp
add
cwtl
pop
jne
fisttps
movl
roll
mov
push
lea
mov
fdivrl
leave
add
cmpsl
jle
pmaxsw
loope
jae
sbb
in
sti
add
inc
mov
jg
xor
pushf
inc
aam
mov
add
call
mov
stos
inc
inc
push
les
in
sti
add
push
add
add
testl
jne
xor
aad
inc
add
jae
testb
add
or
dec
cmpsl
push
pushf
xor
pop
inc
xor
stos
sub
xchg
movsb
jmp
xor
sbb
clc
push
xorl
sub
inc
jmp
xorb
sbb
sub
adc
xorl
out
xchg
stc
pop
inc
xor
jmp
inc
xor
xor
jb
push
xchg
test
ss
mov
xor
jmp
mov
add
or
fwait
xchg
cmpsb
inc
hlt
inc
leave
sub
or
xchg
mov
add
add
dec
xchg
inc
jmp
mov
add
lret
pusha
ss
pop
insl
or
sub
leave
ljmp
jp
inc
jmp
aas
dec
add
cs
sub
cmc
or
aad
in
lea
xor
popl
add
inc
jmp
and
mov
mov
pop
lea
mov
push
cld
lcall
mov
es
clc
loope
pushl
pop
mov
shlb
dec
cmpsl
push
cld
adc
add
or
or
jbe
cld
addr16
clc
mov
and
mov
rolb
add
mov
push
mov
roll
and
lea
add
or
jmp
add
jne
and
das
cld
jo
or
shll
fdiv
sarl
mov
xchg
inc
cld
adc
loopne
sub
add
lds
xor
outsl
sbb
hlt
stos
mov
daa
lods
mov
jno
add
cli
mov
stos
jp
inc
int
roll
xor
add
lods
aad
adc
jne
xor
test
scas
shrl
mov
or
cmp
adc
pop
inc
xor
cld
pop
mov
jmp
inc
xor
add
inc
cmp
in
jecxz
movsl
dec
jmp
lahf
es
jmp
xor
push
add
xor
popa
into
stos
out
mov
in
xchg
sub
cmp
cltd
mov
in
jle
mov
mov
stos
mov
shlb
adc
mov
mov
bound
das
adc
push
inc
add
cmpsl
incl
lret
aaa
or
int
repnz
adc
inc
in
add
repz
and
jmp
mov
pushl
insb
out
mov
add
es
inc
aad
stc
mov
rolb
jmp
int
call
ret
xor
jmp
add
cmpl
jne
pusha
or
pop
leave
pop
lcall
mov
jne
outsb
jne
add
int
dec
mov
jle
or
sub
add
add
sbb
ret
pop
rcrl
or
cmp
decb
jae
jne
and
push
insl
out
add
leave
test
sahf
jb
add
or
lea
lcall
daa
add
mov
stos
jmp
mov
test
or
xor
add
mov
test
jne
add
jmp
mov
add
mov
ret
dec
mov
sar
mov
or
test
je
jl
jmp
xchg
test
icebp
adc
jmp
cmp
push
sub
cs
jnp
add
sub
ds
in
test
xor
add
and
jmp
test
cmpsl
cmp
test
or
jbe
cmc
clc
cli
add
add
shrl
rdtsc
bound
pop
lahf
lcall
les
inc
or
es
jle
xchg
push
adc
test
adc
xor
call
add
or
add
mov
jp
stc
inc
add
mov
sahf
push
ficoms
fwait
and
add
xor
sbb
dec
jmp
bound
imul
lret
sbb
adc
jbe
clc
push
rolb
clc
and
or
repz
insb
jp
cltd
bound
leave
sub
push
jb
mov
xor
fsin
ret
xor
lcall
sahf
lods
or
jmp
fwait
sti
mov
inc
cld
cltd
iret
adc
out
or
or
jecxz
sbb
add
fmul
xor
mov
add
pop
ret
enter
dec
pop
hlt
push
outsl
std
xchg
cmp
decw
or
call
xor
lcall
cli
pop
or
jne
data16
add
call
mov
paddusb
jne
and
call
mov
stc
sbb
jbe
xor
add
fs
inc
push
incl
sbb
jne
loopne
fcos
add
and
xor
adc
dec
lock
mov
jne
pop
das
hlt
into
add
insb
pop
add
xor
add
and
pushf
into
jp
add
jb
ss
mov
lock
es
dec
inc
stos
fldt
inc
mov
mov
inc
push
mov
or
mov
push
pop
mov
clc
jecxz
incl
cmp
dec
push
push
sbb
add
bound
lods
push
xor
ljmp
je
add
pop
in
mov
pusha
pop
adc
or
ret
testl
pusha
lahf
fwait
xchg
js
clc
loope
and
add
pushf
jg
jbe
out
movsl
sub
ret
xchg
push
fisttpl
in
jmp
stos
xor
mov
dec
adc
cs
push
cs
fwait
loop
movsb
pop
adc
sub
jne
mov
idiv
je
pushf
jne
shlb
xor
cmc
and
jmp
fistps
or
repz
ja
add
lods
andl
xlat
xor
leave
xor
call
pusha
call
lcall
mov
mov
xor
call
xchg
nop
inc
jne
sbb
jo
lcall
cli
inc
rcl
or
es
push
add
aad
lcall
sbb
pushl
ja
rorb
add
cwtl
aad
add
add
data16
loopne
leave
add
or
je
cmpb
add
add
push
mov
popl
push
incl
add
push
call
arpl
jne
icebp
sub
add
inc
mov
push
add
pop
add
stos
movl
ss
inc
or
mov
add
imulb
jmp
mov
xor
cmp
jmp
out
mov
or
xor
mov
dec
jo
mov
leave
xor
pop
inc
jns
sub
call
sub
add
aaa
pop
mov
xor
jne
dec
pop
mov
add
ret
jne
dec
hlt
mov
add
fcompl
push
push
inc
lods
repz
push
push
cmp
mov
xor
aad
inc
clc
lret
pop
test
test
xchg
bound
add
pop
aaa
shr
add
or
enter
add
or
cmp
xor
mov
outsl
mov
xor
fmull
pop
sbb
inc
mov
pop
add
insb
add
mov
das
lods
mov
dec
out
and
outsl
xchg
push
xorl
xchg
jne
lcall
in
cmp
aad
int
push
add
inc
test
jecxz
push
xchg
aas
mov
xchg
lods
dec
rolb
stc
call
cmpsb
addb
or
jmp
into
xchg
mov
aam
call
or
movl
ja
rcl
aam
int
popl
into
inc
fadds
add
dec
inc
hlt
incl
or
int
push
push
mov
pushl
loopne
push
fmuls
or
jl
cmpl
jne
loope
add
fmul
inc
mov
push
add
push
inc
mov
xlat
lock
adcb
enter
shlb
fadds
mov
mov
int3
add
in
ret
mov
xor
ret
repz
inc
les
pop
pop
hlt
iret
lds
out
add
jecxz
hlt
add
movsb
add
lods
gs
push
mov
pop
call
sub
push
push
mov
mov
movsl
stos
mov
mov
pushf
jne
ret
pop
mov
xor
mov
xor
enter
inc
faddl
clc
add
and
lods
sti
cltd
sbbl
out
inc
mov
xchg
push
call
outsb
or
pop
pop
cld
es
xor
push
pop
xchg
xchg
aam
pop
das
inc
popf
inc
add
pop
xor
call
repz
push
in
pushf
movsb
pop
add
push
or
sbb
and
ficompl
mov
pushf
fs
in
popf
mov
bound
xchg
lret
jmp
stos
iret
scas
mov
mov
insl
stos
xchg
scas
cmpsb
pushf
cmpsb
sbb
xchg
pushf
add
add
mov
jno
pop
mov
mov
aaa
sub
mov
or
es
add
xchg
jae
scas
dec
cld
cltd
xchg
sbb
add
scas
leave
js
mov
mov
push
mov
xchg
call
loop
sbb
pop
lds
call
add
mov
stos
sbb
roll
int3
add
fwait
sbb
roll
ljmp
outsl
add
subl
scas
outsb
call
or
add
push
leave
ret
movsl
sub
jge
pushl
mov
pop
add
incl
pop
ljmp
jne
outsl
jne
dec
clc
pop
call
push
lret
adc
lds
std
pushl
mov
or
push
jmp
jne
pop
mov
ljmp
jne
outsb
jne
lock
out
fmuls
jmp
call
mov
cmpl
add
adc
sarb
je
sub
lock
adc
mov
lcall
ret
je
and
cld
xor
lcall
dec
movsb
ljmp
lods
ret
jne
out
adc
jbe
lcall
dec
incl
or
xchg
cltd
jmp
xchg
test
leave
repz
add
movb
fldcw
mov
aad
add
or
or
hlt
cwtl
cmp
pop
nop
jle
add
lret
mov
add
pop
push
stc
cwtl
fmull
or
inc
cltd
jle,pt
xchg
loope
int
cs
cs
mov
xor
and
mov
cltd
test
adc
xlat
testb
or
ficoms
cwtl
cmp
push
mov
mov
stos
mov
leave
add
xor
xor
adc
cmp
jne
loope
cltd
add
cmc
xor
lds
call
data16
add
sub
xor
sub
push
jb
mov
jne
ljmp
scas
push
cs
or
jmp
and
sar
xchg
pop
mov
pushl
fisttpll
leave
mov
sub
aaa
stos
jbe
add
inc
std
out
xchg
enter
add
std
add
or
jbe
mov
fnstsw
test
ja
decl
test
mov
lea
dec
jbe
mov
mov
xchg
int3
xchg
add
dec
adcl
lcall
pop
test
lret
push
xor
shlb
int3
add
or
jmp
sub
add
inc
xor
add
icebp
int3
add
xchg
pop
call
sub
wbinvd
out
dec
inc
xor
or
idivb
push
movups
or
ret
xchg
lea
add
xor
xchg
jne
inc
adc
push
repz
cs
or
and
xchg
decl
aas
scas
call
clc
and
mov
test
jge
stos
adc
or
xchg
fimuls
rorl
icebp
adc
sub
push
cmc
stos
and
jge
cmpsb
mov
lods
clc
scas
cmpsb
xchg
add
sbb
xchg
cld
hlt
cmp
sbb
sbb
pop
mov
repz
xchg
mov
mov
xchg
mov
insb
les
xchg
xchg
push
mov
dec
aad
push
xchg
sbb
add
mov
mov
lods
and
fnsave
ss
or
lcall
jne
movsl
adc
add
push
cmpsl
mov
mov
clc
call
mov
mov
or
test
call
cmp
dec
jle
add
aaa
mov
mov
imul
jmp
aaa
cmc
aam
mov
or
mov
mov
pushl
adc
xchg
adc
push
add
jne
adc
cld
or
jne
or
sbb
dec
dec
ret
rorl
push
push
into
sub
inc
inc
or
test
inc
clc
fcomip
pop
push
jns
inc
mov
add
cwtl
cmpl
and
cmpb
je
fnstsw
lock
xor
add
add
je
out
out
por
ljmp
mov
add
inc
add
pop
icebp
cs
add
inc
or
dec
lock
test
pop
jb
jle
std
push
adc
mov
mov
xchg
jne
adc
incl
out
lahf
add
call
pop
lahf
subl
push
push
dec
in
dec
lock
fwait
insb
jo
add
xor
pop
ds
mov
fwait
hlt
jno
add
jno
loop
inc
mov
dec
lock
ss
sub
push
push
mov
mov
add
or
xchg
call
xor
sub
or
add
fisubs
mov
flds
xor
pop
divb
or
pop
cmp
call
add
or
mov
outsl
or
leave
icebp
or
leave
icebp
or
leave
icebp
or
leave
icebp
or
leave
icebp
or
mov
sbb
xor
call
add
int
xor
adc
icebp
repnz
add
in
dec
inc
sbb
into
out
cltd
sar
xchg
xor
lret
repnz
push
scas
ja
add
xor
lcall
adc
jno
js
stos
pop
xchg
in
push
nop
lea
leave
call
inc
adc
adc
data16
push
out
js
sbbl
mov
mov
mov
test
daa
loope
cld
enter
arpl
movzbl
int
push
movd
clc
push
pop
loope
clc
mov
cmp
mov
sahf
push
lcall
push
mov
dec
add
pop
push
xor
or
decl
inc
mov
int3
dec
dec
or
call
rorl
mov
les
xchg
call
and
push
xchg
jne
mov
sar
movl
or
jne
xor
lahf
shlb
xlat
sbb
dec
mov
push
mov
pop
mov
mov
push
add
add
in
mov
push
push
dec
add
pop
mov
je
jbe
jmp
lock
cmp
jo
or
fildl
ss
inc
mov
addl
jo
in
mov
push
sbb
xchg
sahf
mov
sbb
out
lahf
mov
pop
jae
add
outsl
mov
mov
dec
or
je
pop
mov
test
sti
dec
repnz
xor
push
lds
test
jl
in
mov
repnz
pop
pop
test
mov
icebp
call
call
mov
out
cmp
mov
mov
or
mov
in
lea
test
sub
ret
jmp
xor
xchg
cld
adc
pushf
insb
xchg
add
sahf
mov
test
insb
mov
push
movsb
fldenv
insb
lret
loop
ds
insb
dec
test
es
loope
push
add
pop
push
mov
add
xchg
mulb
mov
lods
inc
lods
cmp
sbb
mov
cmp
dec
test
mov
mov
lcall
sub
sbb
push
mov
ror
fists
call
iret
ficompl
fists
sub
arpl
sbb
push
call
mov
mov
add
incb
sahf
mov
rclb
mov
rolb
mov
or
mov
jg
push
call
add
test
mov
mov
mov
xor
mov
das
leave
jae
add
mov
pushl
idiv
cld
mov
xor
sbb
xor
mov
xor
inc
or
add
xor
push
add
in
xchg
mul
or
xor
inc
hlt
sub
mov
in
incl
push
ja
add
jno
add
int3
outsl
add
add
mov
inc
in
jle
cmpsb
mov
std
jecxz
in
addb
xor
xor
add
push
test
fwait
inc
sbbl
cmpl
add
inc
sbb
punpcklbw
push
sbb
or
dec
out
mul
fwait
outsb
dec
push
mov
sub
cmp
adc
shr
sbb
sub
out
and
rcr
add
in
mov
xchg
addb
movsl
js
scas
mov
dec
lcall
mov
cmp
push
sub
jbe
jge
cmc
out
or
xor
add
ja
dec
sahf
sti
cltd
test
stos
dec
test
xor
insb
sub
test
xor
lods
mov
dec
inc
std
test
or
sub
push
aas
repz
hlt
test
cmp
add
syscall
jmp
lock
mov
aam
cmp
divl
and
inc
add
call
bound
push
mov
xchg
xor
out
mov
call
xchg
push
mov
xchg
mov
aas
xchg
lcall
mov
mov
bound
xor
xchg
mov
mov
mov
sub
scas
xchg
pushl
cmovns
popl
icebp
repnz
call
lds
inc
inc
ja
repz
jmp
iret
adc
or
push
call
jl
fwait
cmp
es
mov
push
adc
fiadds
push
in
jle
call
xor
idivl
xor
xchg
jge
mov
movb
jge
cld
mov
pop
xchg
jle
sahf
fwait
dec
xchg
xchg
nop
pushf
popf
jle
xchg
jl
dec
shr
js
loope
in
push
subb
add
jno
mov
jge
inc
adc
or
adc
jno
test
jl
xor
call
add
out
push
sbb
cmpsl
add
div
fwait
jnp
add
lods
icebp
cltd
cltd
jne
lcall
das
fdivl
dec
cs
or
flds
lods
testb
mov
cmpsb
lods
idiv
sahf
ds
mov
jl
mov
fsubrs
xor
ss
push
pop
lods
jl
sub
leave
xchg
xor
or
or
ds
jmp
repnz
setno
cmc
or
fists
push
pop
or
ret
push
test
ss
add
dec
mov
sbb
test
or
or
push
pop
xchg
cmp
dec
aaa
push
incl
out
iret
test
call
shlb
add
cmp
inc
daa
push
inc
pop
pop
add
pop
xchg
loope
test
or
or
push
call
xor
ljmp
push
call
jle
pop
dec
test
call
jo
int
dec
and
push
xor
test
mov
addr16
je
mov
imul
pop
adcl
stc
pop
mov
cmp
xchg
pop
test
ja
subl
ficoml
outsl
jmp
add
add
xor
orb
call
inc
je
and
mov
jmp
push
loope
clc
pop
sbb
cmp
push
lret
imul
ret
inc
mov
psubsb
and
andb
out
push
insb
cmp
adc
hlt
imul
dec
incb
fs
xchg
je
add
pop
fdivrp
jno,pn
dec
sahf
jns
enter
add
or
or
mov
hlt
addb
or
and
xchg
test
hlt
hlt
inc
sub
or
jns,pt
or
outsl
xorb
icebp
andb
in
push
popa
stc
push
push
jns
addb
add
or
call
bnd
adc
add
cmp
adc
scas
mov
incl
mov
or
or
cmp
fsin
cmp
popa
xor
or
scas
mov
rcrb
js
addl
sbb
jle
jecxz
add
popa
flds
dec
ljmp
cmc
enter
dec
decl
jbe
add
in
std
inc
mov
lock
push
inc
or
cltd
or
xor
xor
sar
daa
push
shlb
hlt
jle
cmp
mov
decl
mov
push
arpl
dec
or
jge
dec
inc
mov
add
add
mov
dec
add
ljmp
arpl
or
jge
dec
inc
dec
jecxz
iret
mov
rorb
inc
jl
jne
xor
cmc
pop
or
decl
shl
repz
dec
decb
push
push
adc
xor
push
out
adcb
or
popa
jne
decl
jmp
pusha
mov
xor
decl
bound
add
inc
or
add
mov
repz
or
and
js
shlb
jmp
add
add
mov
popa
add
mov
jecxz
ss
movsb
or
imul
pop
jg
or
or
cmpsl
add
pusha
lods
dec
divb
inc
gs
jo
add
jne
ja
sti
loopne
repz
jg
sti
cld
imul
jle
sti
hlt
jle
add
mov
out
jae
jmp
add
data16
jle
add
mov
inc
sub
adc
pop
xchg
inc
mov
xchg
jle
or
add
subb
dec
cmc
or
or
adc
add
add
stc
add
decb
shll
jmp
in
inc
pushl
mov
push
and
outsl
je
pusha
test
loope
call
jo
push
jecxz
mov
das
je
insb
repz
fiadds
je
rcrl
add
mov
jae
out
jo
jmp
out
call
add
std
fs
jae
push
add
mov
inc
dec
loopne
mov
or
shlb
add
jg
inc
sub
pop
mov
test
dec
jl
jmp
shlb
hlt
je
xor
xchg
ret
decb
xor
int
lahf
push
jne
push
jne
fists
jg
out
add
hlt
jmp
addl
mov
dec
dec
incb
fists
xor
or
addr16
cmp
aas
jl
call
cs
es
shl
in
jl
xorl
roll
nop
imul
pusha
add
xor
add
xor
or
pushf
or
xchg
or
cmpsl
add
dec
mov
jnp
push
scas
cmp
insb
add
pusha
add
mov
mov
pop
ja
xor
mov
mov
or
inc
and
xchg
add
or
jp
add
cmpsl
pushl
psllw
add
es
ja
push
sbb
push
flds
add
pusha
stc
dec
divb
shr
out
pop
jne
icebp
ss
aad
jno
icebp
lret
dec
jno
inc
sub
xchg
in
cmpsb
fucomip
jp
add
xor
mov
je
add
or
mov
inc
mov
dec
xchg
or
jmp
xor
xchg
or
adc
xlat
inc
jmp
ja
jo
adcl
xchg
pop
fwait
jo
pushf
subb
sbb
test
js
lcall
xor
fdivrl
std
leave
incl
divl
je
int3
jo
fs
outsl
push
subl
sbb
mov
sbb
inc
xor
add
scas
xchg
add
push
loopne
dec
inc
add
loopne
sbb
jmp
pusha
lahf
add
push
int3
jae
xor
lcall
bnd
mov
cld
call
repnz
call
repnz
xchg
and
jns
push
enter
pop
repnz
push
pop
jne
jecxz
std
daa
repnz
adc
push
mov
jecxz
incb
xchg
lock
pop
dec
ljmp
bnd
xor
incb
and
adc
in
jmp
out
sti
pop
or
call
js
fucomp
pushw
push
jmp
ja
repz
push
stos
mov
mov
add
rolb
aaa
out
or
jne
dec
add
imul
mov
mov
add
pop
mov
jne
ja
pop
cltd
mov
out
sahf
popa
imul
xor
lea
mov
ja
or
add
subb
dec
adc
lock
or
pop
sbb
ja
fstps
ja
add
add
outsb
pop
insb
dec
inc
push
ja
dec
sahf
outsb
mov
ja
jg
mov
sbb
jmp
jbe
insl
mov
ja
subl
mov
cltd
jbe
mov
negl
outsb
call
jo
lods
fiadds
leave
push
insl
cmpsl
or
jmp
ljmp
jmp
or
jmp
lock
jmp
add
dec
sub
or
test
mov
insb
lea
dec
fldenv
out
leave
call
mov
jne
mov
mov
ds
mov
loopew,pn
mov
insb
xchg
ss
cmp
aas
insb
call
incl
das
pop
out
arpl
jmp
mov
jne
loopne
incb
pop
mul
jns
idiv
lea
push
mov
repnz
pushl
mov
dec
jmp
pmullw
lcall
idiv
call
scas
pushf
mov
dec
xlat
cmc
dec
dec
add
push
and
les
or
xchg
ljmp
inc
cld
jecxz
push
test
add
or
je
and
aam
add
ret
add
pop
cltd
aad
jmp
pop
jmp
add
add
add
imul
rcl
inc
xor
jne
cmp
std
data16
ljmp
ret
decl
js
lds
in
push
lock
sar
movsb
js
push
daa
hlt
jae
call
push
rolb
lret
in
sti
sbb
jmp
add
add
mov
call
leave
mov
out
lret
cmp
sub
mov
lds
call
or
subb
sub
mov
xor
adc
mov
daa
add
popa
lds
in
push
pop
sbb
jae
dec
adc
xlat
icebp
or
jae
add
jle
ja
jbe
sbb
push
jae
fwait
and
jl
ret
or
add
jae
es
cs
add
push
ret
es
icebp
push
push
inc
fbld
cmp
call
and
pop
add
out
jp
push
sub
xor
add
pop
cmp
cmp
popa
sub
test
ljmp
shrb
out
inc
jmp
sbb
jns
sub
or
jne
sbb
push
inc
dec
call
push
ret
mov
jge
fsubs
lcall
pushf
jmp
daa
xchg
and
mov
sbb
sti
push
mov
je
xchg
in
or
cltd
rcr
or
popa
pop
mov
addr16
sbb
push
or
je
mov
inc
repnz
or
lock
add
jmp
pop
call
loopne
push
inc
xor
jne
leave
pop
enter
add
xlat
mov
fisubs
jno
into
test
adc
adc
pop
jmp
push
cmpsl
fdivr
out
sub
xchg
fcoml
push
cltd
inc
cmp
xchg
adc
testb
pop
jno
outsb
mov
jo
sub
mov
jne
and
xchg
les
mov
nop
jo
repz
add
mov
add
or
inc
test
pop
cli
icebp
call
pop
or
jo
gs
jno
jo
xchg
add
jbe
fcmovnb
mov
or
and
adc
cmpsl
data16
fidivl
or
mov
addr16
fdiv
pop
adc
outsl
jbe
int3
pop
out
outsl
js
icebp
add
lds
fisttpl
cmpsb
stc
add
jno
inc
ds
leave
cmp
dec
shll
adc
or
outsb
fs
add
in
gs
hlt
or
addr16
pushw
enter
mov
mov
mov
insl
xchg
aaa
inc
pushw
enter
mov
mov
xchg
stos
insl
jle
push
pushw
enter
mov
mov
push
add
data16
pop
pushw
enter
mov
mov
xor
insl
dec
cmpsl
xlat
gs
add
push
mov
and
repz
push
loopne
push
inc
or
xor
rorb
incb
repz
push
lock
inc
fdiv
xor
orb
movsl
pusha
out
add
repz
push
shlb
mov
add
shr
mulb
cmp
addr16
cmp
lock
add
fdiv
je
adc
lcall
or
jmp
or
xorb
testl
es
dec
push
jo
fstpt
xor
xor
addb
sti
out
les
jns
inc
add
dec
cmpsb
push
jo
fildl
xor
lcall
xchg
int3
xor
cli
sahf
ret
int
inc
xor
insb
jne
cli
out
cld
sahf
fcmovne
add
ret
jo
add
aam
ljmp
dec
push
lock
movsb
add
add
xor
orb
out
or
mov
arpl
cld
sti
push
arpl
lock
test
xorl
gs
imulb
jno
inc
out
bound
inc
sub
xchg
sbb
cmpsl
add
fdiv
pop
jo
push
insb
popa
icebp
call
insb
sbb
adc
cmpsl
inc
imulb
and
clc
xchg
sub
add
addr16
pop
add
jo
imul
stos
fisubl
sbb
jmp
lock
cmp
mov
pop
xchg
mov
and
outsl
adc
mov
imul
or
leave
lcall
pop
mov
call
adc
inc
call
insb
inc
or
orl
fmull
testb
inc
jmp
or
push
inc
bound
fs
xor
and
pop
enter
dec
sti
push
out
je
xchg
pop
or
or
mov
mov
loope
call
xchg
pop
or
sbb
xchg
mov
ds
popf
sub
jne
repz
add
and
incl
jmp
in
dec
dec
add
jne
repz
loopne
jmp
add
call
dec
jecxz
adc
jns
add
jb
cmpl
outsl
add
out
add
jb
jne
scas
out
pop
dec
pop
test
sti
cs
sti
out
shrb
push
pop
imul
pop
pop
popa
iret
push
push
mov
sbb
out
cmpsl
xor
and
sub
pop
push
xchg
pop
incl
jne
cli
add
xchg
push
out
pop
mov
call
fimuls
jne
or
xchg
pop
sbb
adc
xchg
movsb
pop
into
pop
sub
call
mov
mov
jno
cmpsb
push
icebp
pop
xchg
push
icebp
pop
xchg
pop
xchg
cmp
pop
jbe
jl
addl
gs
test
pop
push
cmp
and
push
push
xchg
outsl
iret
jno
xchg
cltd
pop
enter
mov
add
jle
ret
iret
icebp
or
call
mov
call
call
or
xchg
test
sub
pop
shlb
incl
mov
jmp
sub
pop
sbb
pop
jne
jp
incb
addr16
push
add
push
test
icebp
adc
in
leave
call
aaa
mov
jmp
rolb
je
popa
push
push
add
rolb
cli
shrb
rolb
add
mov
inc
hlt
pop
incl
add
push
std
dec
repz
fisttpll
dec
incl
rcrl
inc
pop
jmp
xor
or
je
rcrb
lea
cmp
xchg
jmp
lock
js
ljmp
pop
call
lcall
out
dec
jecxz
call
lock
es
jne
in
mov
addr16
mov
cld
pop
pop
mov
in
xor
add
fcompl
mov
fwait
gs
lret
lock
pusha
fnsave
add
fs
mov
roll
mov
mov
push
push
sti
out
aad
decl
sub
push
dec
ds
inc
xor
mov
js
gs
cmp
lock
popa
andb
adc
stos
pop
push
pop
inc
pushf
push
or
xorl
mov
add
pop
jmp
inc
jbe
repnz
in
cmp
addr16
pop
repz
into
add
xchg
call
add
aam
ret
ss
add
mov
clc
fst
pop
cld
sti
push
add
push
jb
movsl
pop
add
not
lock
imul
pop
es
out
ss
addr16
pop
roll
into
aam
pop
dec
pop
add
push
pop
jne
dec
aam
adc
lcall
imul
outsl
in
push
pop
push
sahf
add
imul
icebp
popf
out
clc
ret
sti
jb
and
sub
leave
ljmp
or
out
push
sub
or
loop
aam
aas
popf
adc
addr16
stos
mov
jmp
lcall
das
xchg
pop
push
mov
xchg
stos
jmp
xor
incl
test
pushl
push
dec
push
inc
pop
call
xor
jmp
ljmp
xor
xor
incl
push
jne
xchg
std
or
ja
out
pop
push
int3
roll
mov
lock
out
insl
test
pop
or
je
mov
in
cmpsl
add
cmpsl
stos
push
incb
std
or
jne
in
out
jmp
ret
push
mov
into
popa
jne
lret
into
iret
or
xchg
mov
inc
ljmp
pop
imul
lds
js
or
outsb
xorl
decl
push
jne
cmp
inc
pop
int3
add
and
call
shlb
mov
add
mov
add
push
shlb
adc
popa
decl
and
or
mov
movsl
imul
dec
popa
cmp
divl
out
into
xchg
cltd
pusha
cmp
inc
sbb
xchg
push
popa
or
cmpl
mov
dec
int3
icebp
or
and
add
cmc
mov
push
push
or
add
pusha
push
pusha
rcrl
fnstcw
ret
ds
repnz
rol
daa
add
push
pop
pusha
push
add
popa
test
xchg
arpl
push
jle
out
xchg
add
jecxz
add
fists
xor
mov
leave
incl
xchg
incl
dec
je
add
mov
adc
dec
add
push
call
or
decb
adc
sbb
pop
push
call
orl
loope
dec
out
push
jne
fildl
shl
dec
cld
dec
add
mov
call
loop
fisttpll
mov
insl
push
test
lcall
out
push
sbb
in
dec
xchg
add
enter
ret
add
and
call
push
call
pop
in
aas
in
mov
orb
mov
cld
mov
push
pop
xor
call
loope
sti
push
mov
or
ljmp
and
add
mov
push
mov
or
fs
mov
xor
pop
sbb
inc
add
std
mov
mov
add
and
loop
mov
rorb
xchg
clc
dec
mov
outsb
mov
and
imul
out
decl
jmp
out
add
je
call
pusha
add
mov
mov
rcr
mov
in
pop
jne
adc
add
dec
jmp
inc
dec
insb
jb
xchg
pop
mov
lret
jo
jmp
orb
jmp
dec
std
fsubrp
jmp
lods
pop
dec
or
insb
xchg
loopne
mov
or
cs
leave
pop
mov
fs
mov
lock
push
pop
xchg
fstl
add
push
push
dec
jae
jmp
dec
mov
pop
mov
in
pop
fucomp
pop
sbb
and
dec
imul
xor
repnz
mov
scas
negl
jmp
jns
pop
jmp
xor
test
ret
jne
push
lcall
mov
imull
dec
call
bnd
add
dec
or
jmp
add
push
jne
dec
les
sbb
push
push
mov
in
jg
sbb
push
call
add
mov
in
mov
push
xor
rol
dec
mov
in
jg
push
pop
jno
pop
or
call
mull
jne
scas
decb
mov
jmp
and
lock
xor
adcb
call
enter
mov
call
mov
cmp
lods
decb
aaa
addb
mov
scas
mov
pop
scas
cmp
fstl
or
cld
cmpb
ss
add
push
mov
cmpl
adc
mov
xor
aad
pop
incl
add
out
je
jecxz
in
mov
add
cvtps2pd
xor
push
cmpsb
xchg
or
pop
mov
call
negl
cmp
lods
mov
pop
pop
mov
push
pop
ljmp
or
add
sbb
pop
or
les
rorl
imul
pop
es
je
es
cmpsb
pop
pushf
add
pop
mov
pusha
sbb
fstl
pop
fld
das
pop
fimuls
insb
fimuls
insb
setb
xchg
dec
push
mov
dec
ds
in
ds
cmpsb
pusha
add
mov
mov
iret
mov
sahf
xor
xor
or
add
push
jne
lret
fsubrp
addl
dec
and
sub
dec
cld
int
inc
jmp
jns
rclb
pop
mov
xchg
push
call
xorl
idivl
test
loope
mov
xchg
roll
inc
mov
mov
xor
es
push
push
jg
call
add
xchg
incl
das
bound
cltd
or
jne
loop
std
dec
mov
jne
mov
or
mov
pop
mov
mov
leave
enter
mov
inc
fcoml
mov
add
lret
leave
add
add
inc
testl
adc
or
add
push
loop
lea
xchg
mov
cwtl
mov
clc
outsl
cmp
call
xchg
leave
jae
inc
mov
add
mov
imul
out
mov
add
movsl
lcall
incl
inc
inc
pop
mov
ds
inc
xor
push
jmp
inc
xor
mov
or
jmp
pop
and
movsb
rorb
out
bt
add
hlt
test
mov
mov
call
lods
inc
xor
lock
or
pop
jg
inc
xor
xchg
mov
mov
push
push
xchg
call
cmpsl
add
stc
dec
outsb
dec
decb
xchg
shll
push
subb
fsubrp
inc
in
lods
icebp
or
popl
push
cs
mov
jno
roll
sub
push
push
mov
dec
xchg
add
out
xchg
add
aad
andl
jmp
or
pop
lcall
mov
add
loop
add
add
call
pushf
cmp
push
fmull
pop
adc
pop
adc
std
xchg
loopne
add
popa
sbb
push
call
in
pop
shrl
inc
test
lds
mull
pop
dec
lcall
decl
add
dec
incl
jge
fcompl
dec
call
push
scas
pop
testl
fidivs
addr16
mov
mov
mov
push
mov
clc
and
daa
mov
cld
xor
mov
or
mov
lret
or
push
pusha
or
in
dec
out
stos
mov
mov
inc
insl
dec
out
add
mov
lcall
jne
scas
jecxz
xlat
mov
ret
push
mov
decb
fisttpll
xor
mov
mov
cmovge
add
xor
inc
mov
sbb
repz
bound
add
pusha
or
mov
in
idivl
mov
cld
notl
insl
idivl
mov
std
xor
push
inc
mov
out
js
ljmp
mov
andl
mov
add
and
jmp
push
div
xchg
push
xor
into
lcall
fidivs
roll
imul
pop
push
mov
adc
stc
leave
call
push
test
inc
pop
add
adc
les
dec
push
push
cmp
mov
mov
jo
dec
inc
notb
or
push
jl
push
ds
sbb
jmp
add
mov
dec
fs
aas
scas
push
popa
mov
stos
jno
sahf
xchg
add
push
idiv
dec
mov
sahf
inc
jle
sahf
mov
aam
add
add
ret
outsb
mov
notl
adc
inc
call
adc
mov
add
mov
mull
loopne
add
xor
mov
xor
stc
stc
inc
push
aas
insb
dec
test
xor
or
lods
test
addl
jmp
jns
jmp
add
or
xchg
xor
test
or
add
out
push
fnstenv
push
mov
pop
fnstenv
in
out
cltd
fsin
inc
loop
out
fdivs
int3
mov
pop
fnstenv
movsl
inc
out
call
cmc
idiv
aas
fnstenv
dec
mov
pop
mov
push
inc
inc
out
test
popf
cmc
idiv
pop
or
shl
out
aad
jne
ret
xlat
aad
decl
xlat
je
mov
loope
push
xor
cmp
dec
mov
mov
xchg
dec
mov
in
mov
pushf
dec
pushl
pop
ss
dec
jmp
iret
push
call
testb
es
decl
jbe
cltd
lock
dec
call
pop
insb
dec
jmp
dec
mov
add
push
stos
pop
xor
fcos
cwtl
cmp
es
jl
inc
or
or
dec
test
xchg
shl
inc
xchg
dec
fs
mov
xor
xchg
fiadds
sub
mov
xorb
cmp
push
sbb
rcl
cmpsl
add
adc
lods
in
add
dec
movsb
dec
xor
jmp
dec
cs
fldcw
call
xor
cltd
subb
xlat
ds
pop
push
dec
cmpb
adc
add
or
jbe
call
rorl
ljmp
pop
cmp
sahf
mov
inc
jmp
scas
cmp
xchg
lods
jl
lcall
in
lahf
pop
sub
inc
lcall
push
push
xchg
hlt
inc
mov
jnp,pt
addr16
enter
cmp
es
inc
xor
add
decl
ljmp
jmp
xor
fldl
out
push
adc
mov
incl
add
pusha
jmp
outsb
inc
add
fwait
lock
aad
xor
mov
mov
decb
push
jbe
mov
std
aad
call
xor
addb
insb
fwait
call
xchg
fdiv
push
aad
jne
aad
or
loope
or
cmp
lcall
out
sbb
decb
incl
movsl
mov
call
xor
xor
decl
rclb
inc
scas
mov
push
jnp
add
es
xor
mov
das
mul
xchg
add
xor
mov
cmp
pushl
mov
je
scas
mov
mov
and
pushl
lret
fmul
push
incl
mov
fildl
cmp
pushl
movsl
lock
pushf
or
pop
pop
divl
push
inc
dec
pushl
xor
add
inc
fiadds
movsl
mov
mov
mov
xchg
xor
lods
mov
jmp
cld
push
pushf
dec
dec
out
inc
pop
push
fiadds
dec
adc
dec
test
jle
add
inc
hlt
sti
popa
xchg
dec
mov
xchg
aaa
cmpsb
inc
push
dec
fsubl
mov
dec
mov
daa
jle
cs
add
adc
movsb
sub
dec
inc
xchg
sti
push
jno
dec
push
inc
xor
inc
inc
add
jmp
mov
call
aas
call
clc
js
js
call
cmp
mov
xor
add
lcall
lcall
js
inc
xchg
jp
std
xchg
jne
insl
ret
pushf
jmp
xor
mov
inc
hlt
shll
mov
push
jbe
call
jo
inc
push
rcrl
push
test
inc
jne
or
fsts
clc
lea
movsl
cmpsl
je
nop
dec
jmp
jae
add
push
mov
sbb
or
dec
and
add
loop
call
out
mov
int
jne
shll
cld
lods
dec
shll
in
scas
ljmp
add
std
cld
aas
sar
jne
shll
dec
lods
decl
add
add
outsl
mov
or
sti
push
pop
push
inc
inc
out
lods
sar
mov
add
push
add
mov
jne
sbb
inc
jne
aaa
int
dec
es
pushl
jns
add
cmc
jp
mov
dec
push
lret
pushf
cmp
fdivrl
mov
jle
push
push
cltd
lods
inc
xor
sub
sbb
pop
jmp
lods
inc
xor
add
or
lock
and
xor
push
sbb
add
mov
or
mov
mov
pop
inc
pusha
push
inc
dec
pop
pop
inc
push
cmp
lock
mov
testb
in
fcoml
aaa
scas
cwtl
or
pop
mov
pop
inc
outsb
movb
mov
in
sbb
call
mov
add
roll
cli
mov
xor
mov
lods
jno
mov
inc
add
mov
inc
fs
pop
xlat
insb
add
imull
add
clc
ret
repnz
aas
sub
jbe
call
mov
mov
mov
cld
inc
xor
out
call
jo
aas
push
inc
mov
pop
sub
xchg
fmuls
je
pop
xchg
insb
pushl
inc
add
xchg
negl
lea
in
jne
in
cmc
mov
out
mov
call
pop
add
pop
jl
add
add
lret
incb
dec
pop
push
add
pop
lea
ja
test
ljmp
je
pop
dec
sti
call
adc
jae
loope
add
sbb
dec
dec
add
test
test
test
mov
fnsave
lds
pushl
pusha
jmp
outsl
inc
add
mov
divl
roll
pop
mov
mov
xchg
jns
xchg
sti
inc
decl
xor
pop
or
lcall
push
mov
pushf
add
movsl
push
idivl
xor
dec
mov
lock
pop
inc
jmp
inc
xor
mov
inc
lea
lods
lods
pop
div
push
addr16
jmp
aam
neg
xchg
inc
xor
adc
ss
je
sbb
inc
add
or
inc
popa
mov
cmp
mov
jle
mov
out
xchg
jmp
inc
jbe
fs
cmp
sbb
or
xchg
xchg
fidivl
cmp
mov
test
ds
add
sub
outsl
lret
cmp
inc
les
xor
or
addb
cmp
cmp
xor
pushf
sub
cld
or
sub
add
inc
ljmp
mov
lcall
jge
pop
repz
call
inc
or
lods
test
aaa
pushl
jmp
sbb
push
repz
mov
sbb
incl
stos
incw
repz
adc
mov
xchg
add
jnp
or
pop
sub
imul
test
sub
mov
sbb
and
lahf
jo
lcall
cmp
sbb
add
or
lods
cld
xor
pop
call
adc
push
pusha
mov
pushf
pop
leave
or
jne
jecxz
add
lret
cmp
je
xor
add
pop
mov
leave
rcl
aas
enter
pop
jne
lret
pusha
dec
jmp
cs
add
adc
push
test
dec
testl
adc
or
inc
or
add
je
rorl
adc
mov
and
je
xor
xchg
add
and
cld
cmp
push
shl
push
stos
adc
incl
jb
inc
mov
adc
decl
cwtl
lods
inc
jle
jmp
xchg
jo
inc
mov
push
aas
lcall
sbb
sub
lods
inc
aaa
flds
push
out
mov
cmpsb
aas
and
xor
add
sub
pusha
mov
cmp
adc
in
jbe
cmpsb
xor
call
aas
mov
xor
ds
loope
es
or
jns
cmp
dec
int3
icebp
or
repz
xor
filds
ss
adc
cli
pop
mov
cmp
jmp
pop
add
dec
push
push
popa
and
mov
cmp
add
xor
jmp
push
cmp
mov
mov
idivl
or
xor
or
data16
inc
pop
xor
inc
mov
dec
cmp
popf
mov
fdivs
aaa
xor
mov
pop
jae
pushf
sub
push
push
pop
xor
pop
push
cmp
push
add
mov
hlt
jge
insb
xor
je
and
xchg
jne
call
dec
jle
inc
xor
add
cmc
ljmp
idiv
xchg
cmc
je
rclb
pushl
cmc
call
mov
jmp
aaa
mul
dec
repz
lcall
idiv
pop
in
stos
div
mov
std
push
cmp
cmc
inc
clc
loope
std
jmp
divb
pop
xchg
add
rorl
pop
mov
fcmovnb
repz
or
mov
fbld
stos
pop
testb
idivl
pushl
aad
call
sub
cmp
xor
mov
leave
add
aaa
inc
je
or
ret
sub
mov
jne
mov
or
int
cmp
xchg
pop
aaa
incl
cmp
enter
lret
cmp
fsubrs
outsb
sti
dec
ret
mov
inc
call
pop
cltd
insb
incl
inc
jne
push
ret
mov
nop
cmp
xor
or
psllw
gs
xor
jmp
mov
xor
lea
mov
ljmp
sub
pop
cmpsb
cmp
mov
aaa
sub
lcall
lcall
lds
or
xor
iret
cmpsl
add
and
inc
in
inc
pop
mov
fnstcw
mov
and
cmp
mov
mov
imul
xor
add
add
js
out
xor
dec
mov
rorl
scas
nop
xor
mov
call
fs
and
cmp
cmpsb
pop
or
je
add
sbb
call
and
jne
pop
pop
cmpsl
jbe
addb
pop
pop
test
xor
pop
push
inc
mov
inc
jmp
xor
xor
inc
add
pop
jmp
daa
dec
je
popf
xor
test
leave
das
incl
cwtl
pop
jne
in
pop
repnz
jno
push
fstp
lods
out
icebp
or
fs
addr16
dec
decl
push
ljmp
add
lcall
push
jne
jecxz
lahf
icebp
out
jno
push
jecxz
lods
das
repnz
movsb
dec
addr16
dec
decl
add
lods
out
pop
sti
pop
push
call
cwtl
pop
jne
jecxz
pop
repnz
mov
push
jecxz
lods
das
repnz
xor
ret
sbb
lods
xor
push
or
call
icebp
sar
test
sub
pop
cmp
clc
mov
push
in
aaa
jmp
insb
ja
leave
repz
push
stos
xchg
add
in
xchg
cmp
mov
aaa
push
mov
xor
add
and
or
jle
xor
add
in
cmpsl
add
xor
inc
inc
jge
pushl
dec
add
pop
add
popf
mov
hlt
data16
push
push
or
pop
xchg
jmp
decb
call
lret
jno
imulb
push
cmp
add
sub
mulb
sub
mov
aaa
fisubs
daa
add
jae
das
sub
sbb
sub
jle
sbb
add
clc
call
aaa
mov
xorl
jle
inc
stos
outsb
movsl
sti
fyl2x
or
ss
imull
push
jne,pn
sbb
stos
push
jg
add
xorl
inc
mov
pop
xor
mulb
or
ds
jmp
mov
sub
jmp
sub
sub
mov
dec
sub
pusha
mov
mull
pop
sub
jmp
adc
xchg
mov
push
sbb
je
mov
call
aad
movsb
call
add
and
mov
jecxz
jmp
repz
lock
call
repz
pop
repz
lcall
repnz
ljmp
idiv
daa
divb
xchg
movsb
incl
divb
pop
std
out
lods
cmc
lcall
cmc
je
add
mov
lahf
cmc
call
cmpsl
fcomip
cmpsl
cmc
out
outsl
idiv
incl
insl
loope
jmp
fisttpll
daa
idiv
mov
jmp
dec
cmpsb
jmp
cmc
mov
xor
xor
mov
pop
ljmp
outsb
lock
ljmp
sub
idiv
dec
loop
mov
adc
pushl
cli
mov
jmp
sub
sti
or
add
jmp
mov
mov
aaa
push
or
cs
inc
xor
add
imul
add
mov
push
fiaddl
jnp
mov
sbb
sub
pushf
mov
lcall
xor
or
shrb
pop
dec
jae
jmp
aas
lea
inc
xor
les
pop
mov
xor
cld
inc
pop
mov
cli
arpl
or
cmp
xor
add
or
mov
add
lahf
call
test
popa
jl
cmp
sub
aam
mov
xor
pop
ret
or
sahf
mov
sbb
pop
jmp
vcvtsi2ssl
leave
sub
xor
cmpl
sub
xchg
sbb
inc
bound
mov
jmp
movsl
pop
inc
lahf
inc
adc
inc
jmp
and
pushl
and
mov
jmp
cmpsl
sub
outsl
enter
cmp
push
bound
jne
dec
repz
arpl
incl
in
sub
xchg
inc
and
inc
sahf
or
xor
gs
mov
sub
mov
sub
sahf
jns
call
pusha
mov
fldt
inc
rcrl
mov
mov
add
jmp
out
mov
fdiv
decl
incb
movsl
and
lcall
fs
idiv
pop
or
pop
lret
cwtl
out
aas
jae
cmp
das
lcall
pop
mov
loope
fistps
call
lcall
jne
add
mov
loope
incl
pop
pop
call
xor
loopne
xchg
xor
sbb
sbb
cmpsb
xor
fdivrl
decl
data16
jle
jbe
jle
xor
sub
and
pop
out
cs
xor
test
cmp
inc
stc
in
ds
xor
sbb
jmpw
adc
sub
call
push
fidivs
testl
sub
xor
out
push
jbe
fimuls
call
cmc
sub
pusha
jbe
inc
or
leave
adc
add
push
stos
ljmp
dec
test
sbb
addl
and
push
fcmovnb
call
ret
aam
dec
pop
inc
xor
sbb
icebp
or
add
mov
es
xor
mov
xor
gs
or
push
es
jge
and
fnstsw
xor
loop
mov
xor
cmpsb
leave
fimuls
add
xor
and
es
jmp
sub
xchg
inc
xchg
jge
test
lcall
inc
pushf
divl
and
dec
popf
or
repnz
add
xchg
test
es
mov
push
es
ds
adc
inc
xchg
mov
lcall
cmp
lret
mov
in
push
push
and
jge
mov
call
push
sbb
out
push
pop
lock
call
mov
pop
and
xchg
and
add
add
mov
cmp
std
fsub
adc
or
leave
mov
push
adc
les
mov
ljmp
repz
rorb
incl
movsl
inc
cld
xor
pop
inc
mov
xor
rorb
lea
out
div
push
orb
add
bnd
lock
call
adcb
mov
pushl
aaa
popa
pop
call
sar
inc
sbb
pushl
add
xlat
cmc
jne
ds
mov
ret
mov
pop
mov
fnstenv
mov
cli
mov
out
lret
add
aam
xor
sbb
sbb
inc
xor
sub
lret
jbe
lret
xor
sbb
fprem
enter
sub
sub
lret
xor
sbb
leave
sub
inc
xor
jne
or
lret
es
push
rorb
sub
add
or
les
or
mov
xor
fs
and
ljmp
adc
mov
cld
into
fwait
lods
sub
scas
add
cmp
xchg
lahf
scas
and
mov
xor
fs
and
jns
xchg
sbb
push
sub
dec
out
xchg
or
add
clc
call
mov
sbb
int3
sbb
xchg
mov
or
imul
xorl
pop
add
xchg
xor
and
push
or
adc
or
push
push
xor
out
ja
and
sbb
popa
dec
pop
and
jbe
decl
adc
lcall
lods
and
xchg
sbb
push
xor
call
roll
jmp
ljmp
ds
push
orb
fdivr
and
adc
imul
pop
xchg
sti
add
incl
das
faddp
or
cmp
push
jg
call
out
outsl
repz
jb
pushl
add
decl
sub
jne
rolb
decl
adc
jne
add
ljmp
inc
ljmp
repz
mov
std
decl
test
pop
leave
or
and
pop
pop
call
jo
pop
inc
dec
jle
incl
repnz
incl
add
lahf
dec
repz
add
sbb
sub
mov
popf
adc
test
sbb
or
jle,pn
xor
add
je
add
xor
inc
inc
lds
add
int3
add
int3
add
xchg
mov
hlt
sahf
jbe
push
sahf
hlt
sub
sbb
sbb
mov
sbb
add
or
mov
mulps
pop
lcall
jl
movsb
lods
das
testl
pop
ds
lock
sub
sbb
inc
sub
mov
fwait
push
mov
stc
xor
pop
scas
cmp
int
push
pusha
jg
pop
out
pop
or
mov
call
sub
push
cmp
adc
sbb
push
scas
test
sub
or
sbb
mov
int3
icebp
or
sub
push
outsb
sub
or
sbb
icebp
or
dec
push
dec
sub
lock
pop
add
push
jmp
xor
mov
jmp
dec
push
jl
xorl
push
push
orl
call
pop
frstor
jl
push
mov
push
push
mov
push
push
call
dec
push
lock
add
call
push
jne
sub
jle
push
mov
dec
push
incl
push
notl
pop
call
xchg
sti
inc
xchg
xchg
add
pop
fadd
or
cmp
call
and
jae
rorb
inc
or
out
insb
in
push
test
pushl
mov
decl
pop
pop
call
jo
add
mull
inc
decl
pop
pop
call
lock
or
fdivr
push
pop
jg
imul
popf
inc
cld
adc
es
dec
add
inc
add
and
push
xor
fwait
loop
jo
push
pop
adc
add
daa
inc
je
jno
cmp
adc
xor
add
bswap
inc
xor
cwtl
mov
xor
leave
add
sbbl
push
popa
mov
add
arpl
fidivrs
ljmp
add
fwait
fwait
negl
add
aam
out
pop
and
lcall
ret
jns
mov
xor
mov
sbb
and
add
mov
leavew
sub
scas
xor
cmp
inc
sbb
leavew
and
scas
cs
cmp
sbb
or
ret
push
mov
negb
out
and
imul
aaa
test
xchg
loopne
repnz
and
out
scas
xor
mov
inc
or
sbb
ret
xchg
sbb
pusha
stc
call
repnz
add
negb
xor
mov
aam
and
push
or
sbb
sub
fwait
ds
add
xchg
test
adc
push
cmpsl
sti
mov
fisttps
add
jb
test
scas
adc
jmp
cmp
pop
jmp
xor
mov
test
lcall
push
xchg
mull
scas
or
loop
xchg
add
cmp
add
cwtl
insl
jle
dec
add
call
mov
js
hlt
pop
out
push
lcall
test
jmp
adc
jmp
pop
inc
add
out
idivl
in
jne
in
mov
xor
jmp
dec
incb
and
jmp
or
adc
incl
push
fs
pop
or
fbstp
call
and
and
or
mov
lahf
and
jbe
psubsb
and
mov
mov
test
and
loope
test
lock
mov
fbld
pushl
adc
sub
or
jge
adc
sbb
push
cs
clts
push
xchg
test
push
and
popa
or
adc
bound
pushf
ds
test
ds
sbb
add
lods
lods
xor
mov
mov
and
ret
jmp
pop
sahf
and
mov
jle
cmp
jle
jbe
lea
xor
push
add
pop
and
or
xor
jmp
and
or
xchg
stc
call
or
cmp
and
pop
pop
xor
pop
push
and
ljmp
and
push
je
fyl2x
andb
push
xchg
daa
ficoms
and
or
test
mov
mov
add
push
lcall
lcall
addl
aam
push
push
add
jne
mov
in
clc
mov
lcall
fsin
fdivrl
and
adc
jmp
mov
mov
and
push
push
pushl
jmp
dec
imul
push
incl
mov
push
push
pop
call
outsb
push
out
jl
mul
and
pushf
add
push
dec
adc
cmc
mov
std
jmp
outsl
or
pop
add
std
cld
idiv
cmpsl
in
pushf
mov
incb
jecxz
std
div
jne
in
mov
leave
ret
push
mov
mov
cld
jb
push
imull
call
sarl
push
push
xor
jne
loope
std
daa
hlt
addr16
aam
jmp
or
xor
pop
call
xlat
jno
jge
call
leave
xor
add
xor
mov
cwtl
pop
cltd
add
sahf
cltd
sti
or
add
xor
push
push
mov
add
pop
inc
je
pop
pop
add
and
inc
xor
sbb
incl
jb,pt
pushl
ret
pop
push
cs
or
fnstsw
sbb
call
repz
sti
push
jne
call
call
xchg
cs
test
pop
inc
push
jne
or
pop
mov
adc
lods
xchg
mov
add
sbb
adc
cltd
push
sbb
xchg
popf
lock
xchg
sbb
in
xchg
addl
cmp
sbb
add
repz
popf
hlt
sub
mov
add
dec
out
cmp
int
add
or
inc
je
ss
mov
xchg
add
mov
push
sbb
negb
jmp
aaa
and
pop
std
leave
call
lahf
add
jbe
adc
sbb
inc
sbb
mov
mov
pushl
sbb
sahf
sub
adc
xchg
stos
mov
jb
cmp
sbb
outsb
cmp
je
pop
mov
adc
mov
test
adc
ss
adc
jo
and
push
sub
mov
jmp
imul
jmp
call
decb
iret
jmp
push
inc
add
mov
imul
in
jne
fisttpll
test
push
in
idiv
lahf
in
je
mov
pushf
ljmp
in
push
pop
push
pop
or
out
ja
call
roll
cmpb
cmpl
decl
je
fwait
mov
divl
negl
add
negl
sbb
mov
movsb
push
adc
daa
nop
pop
fsts
jb
aaa
push
call
cmp
sub
faddl
lcall
addr16
add
sub
lahf
ja
inc
pop
adc
jbe
nop
pop
pop
xorl
xchg
dec
fsubl
sbb
add
sbb
aad
scas
sbb
jl
adc
ds
jo
cs
dec
in
xlat
sbb
enter
push
or
adc
sub
push
add
testb
jbe
paddd
pushf
sub
sbb
and
dec
jmp
lea
mov
shufps
mov
adc
adc
add
subps
jle
sbb
subb
pcmpeqd
pop
xchg
insb
sub
test
add
in
add
addl
or
add
out
inc
ss
jno
verr
adc
fxch
jmp
xor
jne
dec
dec
std
push
sbb
addr16
or
aas
ds
jmp
mov
xor
push
leave
stos
mov
push
jb
mov
mov
int3
out
xor
and
and
xorb
pop
jecxz
sub
test
call
add
mov
mov
xor
add
dec
jle
push
jo
mov
pop
push
call
add
mov
xor
out
pop
call
xor
add
aaa
pushl
sti
xor
cmc
icebp
scas
xor
je
out
sti
lcall
out
or
mov
mov
or
sti
ljmp
pushl
loope
xchg
out
mov
cmc
je
xlat
ja
call
xor
loopne
inc
mov
add
fs
nop
sti
or
call
jae
jne
jecxz
sti
popa
jmp
pop
or
jno
negb
dec
cmp
sbb
decl
loop
adc
movsl
repz
mov
xor
ret
ljmp
cmpsl
lcall
push
jne
jp
xchg
xchg
jne
rclb
jne
mov
xchg
add
dec
ret
mov
dec
lahf
ds
mov
int3
or
add
or
pop
mov
clc
add
or
je
sub
push
jg
pop
mov
out
jl
call
cmp
sub
inc
or
inc
mov
mov
cld
add
add
inc
pop
lods
cs
jae
call
xor
scas
lds
adc
dec
xchg
lcall
lods
mov
inc
dec
rorb
jmp
bound
sbb
scas
dec
fdiv
and
inc
or
mov
inc
or
mov
mov
mov
adc
jae
push
stos
sbb
adc
xor
repz
lds
sub
or
lea
repnz
xchg
mov
pop
adc
jmp
or
call
movl
add
test
pop
add
rep
bound
lea
push
out
stos
push
add
add
out
add
cmc
jae
add
lea
push
push
push
and
mov
or
add
jne
add
clc
or
sub
repz
ror
pusha
ljmp
imul
enter
mov
in
mov
shlb
jo
xchg
fisttps
push
cmp
pushl
in
repz
mov
cltd
pop
add
lcall
inc
adc
dec
jle
mov
adc
sbbb
jmp
cmp
jl
sbb
mov
cwtl
inc
mov
push
push
fidivrs
pop
ljmp
insb
out
jg
roll
and
jns
jmp
cmp
adc
mov
sti
add
or
jbe
xchg
sbb
jle
sbb
or
adc
adc
jle
fs
mov
cmp
mov
adc
adc
cwtl
ss
dec
adc
pop
push
cwtl
or
fiadds
je
xlat
jge
sbb
out
adc
xor
push
hlt
mov
loope
mov
test
add
pop
mov
cmp
out
ja
and
lcall
jbe
xchg
inc
or
les
cld
pop
out
sbbb
cld
inc
push
jne
sub
mov
rol
stc
xor
inc
inc
jl
ret
xor
jne
cmp
ds
push
jne
and
pop
pop
jmp
jl
adc
das
push
jne
inc
jl
add
pop
incl
pop
pop
adc
das
push
jne
and
js
jmp
cmp
rol
std
xor
lods
int
add
sar
jl
decb
out
call
add
jne
and
lock
decl
inc
adc
sar
je
and
add
movl
xchg
add
sbb
ja
push
fldl
out
push
sbb
mov
jl
sbb
aas
add
lahf
cli
call
rorl
or
enter
xor
addb
addb
or
add
xor
cmpl
icebp
add
xlat
cwtl
or
mov
sti
jle
add
std
orb
pop
push
add
xor
adc
cltd
test
xor
inc
inc
dec
out
add
xor
leave
repz
add
divb
add
insb
ds
je
mov
jl
or
mulb
cmpl
xchg
xor
fldl
add
cmp
or
cwtl
sub
stc
je
add
cwtl
mov
mov
pop
push
xchg
add
adc
jle
sbb
mov
push
outsb
jle
sbb
jle
sbb
pcmpeqd
lods
jbe
push
ds
pop
xor
cltd
cs
decl
outsl
jns
push
outsl
jmp
mov
push
add
testb
psubusw
loop
mov
add
add
fdivs
pop
mov
mov
jecxz
and
or
fmuls
hlt
push
testl
jmp
repz
scas
cmpsb
or
adc
add
cmpsb
jbe
add
xor
lea
jmp
insb
cmp
mov
mov
jge
push
incl
jl
das
jnp
xchg
xor
add
rol
icebp
add
xchg
inc
xor
xlat
mov
and
jl
xor
jge
push
xor
add
enter
rolb
jge
or
pop
lret
cmc
std
jne
push
mov
lea
mov
jne
push
sahf
iret
adc
sbb
call
adc
mov
mov
add
fwait
push
call
add
lret
iret
lcall
fwait
xchg
loop
add
mov
jne
adc
push
call
pop
lret
notb
fwait
push
call
xor
divl
popf
clc
mov
lock
outsl
cmp
xor
mull
xchg
sti
mov
clc
and
sbb
sbb
add
mov
add
lock
jae
add
cld
negl
push
mov
mov
add
lock
cwtl
dec
mov
iret
inc
cmp
out
add
mov
push
push
mov
ret
or
dec
daa
mov
dec
jns
or
into
stc
das
jns
stc
or
add
jns
add
aaa
lret
jl
stc
arpl
pop
out
nop
add
icebp
lods
push
scas
add
lcall
cld
mov
and
jle
add
or
add
addr16
or
lds
repz
testl
adc
mov
jno
pop
nop
push
icebp
sbb
pushf
push
shll
jl
incl
jle
jmp
add
decb
js
jne
cmp
sub
jne
cmp
adc
imulb
jbe
out
cmpsb
adc
jle
add
fidivs
out
pop
sub
cmp
icebp
jo
cmp
cmp
icebp
push
sbb
icebp
pusha
js
add
mov
call
idiv
jle
xchg
inc
jno
rol
loope
push
mov
vdivsd
mov
call
loop
je
add
orb
inc
mov
call
jecxz
je
inc
mov
mov
adc
or
mov
cmp
adc
leave
fiaddl
call
add
iret
jg
ja
add
cwtl
or
je
mov
add
out
pop
or
incl
cmp
adc
or
sarl
mov
call
xor
enter
xor
mul
jns
or
mov
aas
fwait
cmp
lods
xor
out
mov
or
mov
or
fyl2x
xchg
mov
out
push
inc
ds
adc
xor
ja
jae
push
incl
sahf
icebp
repnz
xor
dec
or
inc
xor
es
lock
mov
xor
add
dec
je
sub
pop
inc
dec
lock
sbb
mov
or
add
mov
add
cld
fcomi
push
xchg
jno
push
adc
xchg
aaa
jno
mov
sub
and
cli
pop
or
xchg
sub
push
jae
cld
pop
jno
repz
add
mov
icebp
cmc
jb
cld
cwtl
push
and
cmp
sbb
rorl
lahf
cld
aad
fwait
mov
push
lcall
dec
jg
mov
cld
sbb
push
pop
push
sbb
push
jno
mov
cmp
or
jne
mov
outsb
aaa
pop
call
mov
cmp
dec
aaa
icebp
mov
add
cld
mov
ss
insl
xor
adc
jle
jmp
lret
push
aaa
mov
pop
das
cld
out
stos
sti
mulb
std
out
xor
test
cld
enter
push
bound
mov
cltd
aaa
cld
scas
push
sar
xor
add
xor
jae
mov
add
lock
xor
push
add
scas
jbe
call
jnp
lahf
add
sbb
add
jg
out
outsl
add
lea
mov
mov
add
pushl
jp
fdivrs
mov
iret
jp
add
push
lea
or
add
push
je
sbb
add
mov
out
mov
incl
jae
mov
ffree
sub
inc
dec
inc
xor
sbb
out
add
jno
add
fisubrl
aaa
jae
lea
jns
frstor
decl
push
mov
sbb
dec
mov
cmp
or
out
push
add
dec
andl
iret
or
cmp
adc
movsl
inc
add
jmp
mov
loop
jmp
ljmp
pop
add
mov
std
jle
push
mov
call
mov
stc
xchg
add
mov
mov
sbb
add
ret
sub
pop
jb
pop
jg
jmp
fwait
dec
add
leave
mov
jns
loope
add
clc
inc
sub
mov
and
pop
stos
in
enter
insl
adc
jnp
leave
inc
jb
mov
stos
lcall
adc
js
loope
add
jle
jmp
clc
int
sbb
xchg
add
incl
popa
or
or
rorb
sahf
sbb
jns
clc
or
rclb
cmp
loope
leave
sti
data16
loope
insb
xor
imul
xor
movsb
jne
push
iret
dec
inc
jmp
xor
popf
inc
pop
push
mov
pushf
repz
lret
xor
xorl
mov
in
or
xor
adc
xchg
cmp
jae
fstpl
add
std
incl
gs
pop
sbb
call
call
mov
pushl
jg
call
ror
add
fldl
cmc
jmp
inc
cld
enter
ja
or
ljmp
test
or
clc
add
or
popf
std
pop
fmuls
push
mov
or
test
jne
ja
cld
call
add
jmp
jae
fsts
jg
and
fmul
ljmp
mov
test
loope
in
je
decl
cs
mov
insl
add
push
mov
push
pop
add
jl
ljmp
inc
clc
out
bound
add
push
xor
sar
or
incb
movb
or
xchg
cmpsb
out
push
add
sahf
or
add
loope
jg
lds
push
arpl
addr16
and
dec
dec
cmpsb
call
adc
pop
jg
add
shrb
mov
nop
imull
cmc
arpl
pop
outsb
jns
hlt
fisttpl
or
add
add
shrd
add
xor
stos
sti
div
call
ljmp
or
imul
pop
jmp
nop
lods
std
adc
jns
hlt
jae
xchg
dec
add
or
sub
push
jmp
push
push
inc
inc
jmp
movsb
cmp
loop
iret
insb
mov
inc
push
shll
xchg
dec
repz
mov
pop
add
jle
repz
sbb
lea
addl
pop
in
mov
or
jle
push
jo
jmp
ss
mov
out
adc
cmp
cmp
jae
pop
pop
add
jge
jnp
mov
gs
lcall
jne
decl
mov
mov
dec
add
movsl
in
ljmp
jae
add
add
lahf
mov
iret
in
inc
add
in
cmc
lcall
aas
mov
scas
in
mov
cld
std
pushl
hlt
mov
addr16
std
jmp
add
jne
outsl
hlt
std
mov
cld
std
pushl
mov
pmuludq
inc
idiv
ljmp
hlt
jae
xor
inc
ja
loopne
shll
enter
loopne
and
js
mov
loopne
mov
xor
pop
lock
je
enter
mov
add
add
dec
inc
xor
ss
pop
jo
push
xor
cmp
call
cld
or
cltd
fiadds
add
cmpsl
cld
out
xlat
aaa
pop
jo
push
add
loopne
pop
or
jmp
repz
cld
inc
add
push
test
or
push
mov
loope
lea
xor
in
jmp
sti
ja
sbb
into
mov
xor
jno
loope
mov
icebp
inc
insb
xor
xchg
xor
jno
loope
mov
icebp
orb
insl
int
lock
push
mov
fs
or
pop
outsb
sti
out
andb
pusha
add
push
xchg
pop
lock
fiaddl
sbb
inc
add
push
and
jl
loope
lcallw
lock
jb
pop
in
or
jmp
pop
aam
xor
loope
cmp
and
rcrb
mov
mov
pop
sub
xor
add
std
out
mov
push
inc
jmp
xor
cmp
out
or
xchg
add
push
inc
add
add
or
dec
pop
inc
fsubs
cmpl
js
jge
pop
inc
mov
aaa
push
pop
add
sub
cwtl
lock
dec
add
sub
pushl
cmpsl
ljmp
or
adc
dec
add
dec
popa
pusha
inc
dec
or
add
fdivrp
inc
mov
std
incl
sbb
je
addr16
outsb
pusha
xor
push
inc
xor
add
aad
pop
jo
mov
add
loopne
add
mov
jmp
mov
hlt
push
stos
movsl
or
jno
or
and
add
cmp
sbb
sub
ljmp
jle
lock
inc
add
sub
lret
shrl
xorb
xor
mov
repz
adcl
rol
fldl
add
mov
or
xor
add
adc
jmp
sbb
jo
lcall
dec
add
dec
mov
jmp
xchg
cmp
lds
or
jae
clc
cmp
or
push
pop
dec
test
mov
fmuls
je
mov
in
addb
inc
stc
push
cltd
mov
jmp
idiv
in
int
fimull
add
in
or
cli
mov
clc
imul
icebp
inc
loope
sbb
mov
add
testl
or
hlt
addr16
inc
jmp
xor
adc
subl
lret
popa
sub
inc
std
pushf
sub
adc
adc
push
add
and
jl
in
adc
adc
push
add
xor
addb
fs
add
in
xor
loope
gs
jmp
test
and
call
loope
inc
aas
jmp
test
ficoml
add
and
ffreep
std
lahf
repz
in
mov
call
push
inc
add
mov
pusha
cltd
pop
push
call
rol
or
add
lahf
pop
or
jne
pusha
inc
cwtl
xchg
or
pop
add
repnz
inc
adcb
loop
inc
dec
hlt
jae
lahf
sti
pop
pusha
sbb
rorb
test
pushl
loop
je
jl
pop
xchg
and
cmc
in
testl
popf
out
dec
mov
repz
dec
adc
out
cmp
shlb
inc
add
loopne
jl
fucom
add
call
add
xor
push
call
sti
js
call
add
push
call
jbe
hlt
pushl
add
hlt
stos
add
xor
jg
lret
aas
inc
add
sub
inc
add
arpl
or
insb
shll
add
je
jmp
jbe
add
leave
hlt
sbb
xor
dec
jb
or
add
jae
jmp
jbe
add
leave
mov
inc
xor
push
xor
cltd
imul
add
jbe
add
imul
add
pop
push
insb
adc
repnz
loopne
or
or
fidivrs
xchg
pop
roll
add
jne
mov
inc
popf
in
add
and
decb
push
out
jle
dec
lock
dec
add
call
pop
add
je
test
adc
loop
mov
pop
xor
inc
cmc
pushl
cmpsb
xchg
mov
out
xchg
mov
je
jp
cmp
out
stc
sbbl
aaa
mov
out
sbbl
stc
adc
out
out
into
jmp
xchg
std
call
xchg
std
call
xchg
std
jmp
fidivl
mov
push
pusha
dec
or
jg
xchg
mov
fs
push
push
popa
or
mov
aam
call
jecxz
jb
fcmovne
inc
jmp
mov
or
add
pusha
add
add
adc
dec
pop
ljmp
or
test
jae
pusha
cmp
mov
jae
add
fdiv
fimull
sahf
lock
pop
pop
push
cld
pop
jmp
lock
lcall
icebp
or
movl
je
jmp
push
std
mov
xor
jns
jg
lock
pop
clc
push
ljmp
pop
ja
or
fs
xor
fs
lock
cld
lcall
adc
sub
cmp
add
cmp
jbe
jno
arpl
or
dec
loope
jmp
ja
adc
add
mov
and
or
cmpsb
inc
lds
jmp
ret
mov
fimull
enter
add
or
xor
gs
xor
jmp
lock
arpl
add
xorl
pop
or
cld
into
adc
add
imul
outsl
pop
add
mov
call
mov
inc
shll
or
jmp
xor
pshufw
add
xor
lods
call
ljmp
cmpsb
push
or
xorb
push
icebp
add
fists
call
inc
mov
gs
call
jle
jl
xor
inc
push
call
jmp
lret
inc
call
push
rolb
or
adc
or
inc
test
add
pop
lret
inc
mov
xchg
push
mov
incl
out
mov
int
jne
mov
xchg
bnd
mov
sti
decl
sbb
cltd
pop
add
aas
pusha
popa
mov
call
add
addr16
inc
enter
and
jo
cwtl
fidivrs
adc
or
loope
gs
lock
in
je
or
jo
repnz
shlb
add
out
and
add
pop
popa
lock
jmp
jno
hlt
outsb
xor
xlat
and
in
pop
pusha
jo
add
or
lock
xchg
add
or
add
pop
ja
or
add
aaa
add
icebp
xlat
ret
cmp
leave
ret
xor
stc
stc
sbb
jge
ja
leave
or
pop
xor
mov
cmc
cltd
loop
jnp
mov
jne
mov
xor
repnz
in
in
shll
in
int
sub
in
orl
jbe
loop
cld
add
sub
lods
das
pop
icebp
bound
xchg
fcomi
xchg
lcall
fucomi
xchg
out
pop
popf
xchg
fistpl
push
add
or
jmp
push
sbb
pop
dec
add
pop
aad
adc
or
bnd
pop
cs
add
add
or
aam
add
loopne
out
clc
or
loop
pop
pop
scas
lock
xor
cmp
jmp
sti
mov
icebp
inc
dec
or
fs
xchg
push
rclb
or
xorl
lock
lret
push
lret
add
push
add
cltd
cld
incl
int3
cmpl
cwtl
or
mov
adc
sarb
jmp
xchg
call
arpl
jae
add
dec
inc
dec
repz
jo
cmp
mov
inc
add
mov
jmp
repnz
lea
cmp
lcall
cld
incl
icebp
std
incl
adcb
test
xlat
jle
xor
add
mov
add
shrd
add
gs
sub
mov
or
add
jno
add
cltd
lock
mov
mov
pop
shl
add
pop
xor
outsb
add
xor
js
es
je
or
jo
out
and
pusha
fisttpll
mov
out
sbb
or
mov
mov
push
mov
inc
push
popa
fidivs
call
lods
fisubs
jmp
xor
ljmp
test
xor
nop
imul
jmp
add
or
cld
mov
pop
push
sub
push
fstp
test
xchg
pop
jmp
add
call
jmp
aam
pushl
iret
jg
f2xm1
shr
xor
push
push
xchg
sub
xor
or
dec
das
push
cs
cmc
out
es
push
iret
cltd
std
push
mov
bound
push
cltd
cltd
push
adc
or
push
testb
pop
pop
fdivrp
shll
xchg
mov
dec
fsubp
pop
ljmp
aad
je
mov
fiadds
cltd
mov
add
lods
and
sbb
mov
mov
inc
jecxz
jmp
cmp
cmp
inc
cltd
cld
jg
mov
enter
or
add
outsl
lcall
in
or
pop
rcr
jne
jne
ffreep
je
inc
jg
pushl
shrb
xor
std
dec
shl
dec
jecxz
incl
cmp
jne
shlb
jecxz
icebp
jmp
std
vpaddb
fbstp
pushl
rclb
xor
jg
ds
push
and
add
add
xor
mov
out
lock
adc
xlat
cmp
in
and
jo
mov
cli
out
sub
idiv
add
add
add
fidivrl
jno
add
das
idiv
outsl
push
adc
fwait
insl
in
sub
rorl
lret
outsb
or
lods
jns
ds
ret
es
gs
jo
jecxz
xor
ficompl
in
or
test
aad
jb
dec
jmp
fidivs
loope
or
dec
in
inc
inc
pop
xor
call
in
nop
mov
fcompl
leave
in
int
jmp
pop
mov
call
fildl
lods
outsl
jmp
hlt
mov
call
call
mov
call
lock
push
or
push
rcrb
fimull
jmp
push
inc
sub
or
popa
outsl
add
jmp
push
clc
shll
jno
leave
jae
push
inc
inc
outsl
add
mov
add
push
hlt
inc
add
add
cmp
pop
push
jmp
inc
or
push
add
ret
xor
fdivr
dec
out
aam
call
rcl
pop
call
pop
or
push
cmp
in
or
cld
jmp
jmp
std
call
mov
test
in
std
lcall
in
std
std
mov
std
fnsave
std
std
mov
std
fstp
std
jne
jmp
or
jmp
leave
ret
push
mov
call
lods
fsub
lea
xor
mov
cltd
or
jne
jmp
or
xlat
jg
ja
shlb
push
pop
lods
mov
ds
jae
pop
dec
call
mov
loope
icebp
cmc
incb
pushf
or
loope
loop
popa
xchg
popa
push
or
mov
int
out
loop
leave
cmp
jl
ss
dec
aas
loop
xor
add
leave
sbb
mov
dec
clc
mov
pushf
repnz
and
ljmp
je
in
icebp
add
xor
leave
inc
jge
or
xor
push
or
cmp
push
add
pop
aam
pop
int
mov
add
leave
xor
sbb
popa
jns
jmp
push
mov
popf
loope
sarl
in
jne
loope
dec
xchg
loope
icebp
jge
inc
sti
out
out
fucom
add
xlat
pop
loope
in
sbb
jne
push
xorl
pop
xor
push
push
es
lret
hlt
add
addl
loope
arpl
insl
dec
jae
pop
dec
add
xlat
mov
inc
add
xor
add
std
into
push
inc
push
shl
insl
add
lcall
or
push
xchg
pop
stos
inc
sub
scas
std
jle
insl
cmp
jb
push
shll
inc
jmp
mov
je
add
cmp
ss
cltd
lcall
and
dec
call
jnp
add
inc
sub
or
repnz
outsl
mov
add
loope
jns
mov
inc
insb
bound
call
push
leave
jb
loopne
pusha
inc
sbb
call
push
jo
adc
mov
popa
pop
or
call
call
call
or
lea
mov
add
or
stc
testl
inc
add
pusha
dec
popa
leave
or
xor
das
xor
call
jle
sbb
loope
xor
mov
inc
add
filds
add
pushf
inc
insl
mov
aas
ret
fisttpll
andb
xor
or
xchg
sbb
call
push
out
sub
fdivr
incb
add
dec
mov
pop
jmp
push
push
add
loop
test
lret
xor
ljmp
rolb
xor
inc
xor
xchg
dec
adc
fidivrs
aam
or
pusha
popa
fs
or
imul
sub
push
jmp
or
inc
int3
fnsave
test
sub
mov
add
shlb
loopne
pop
icebp
jmp
push
sahf
in
add
xor
xchg
out
pop
jmp
or
mov
subb
jo
jmp
xchg
pusha
in
xor
add
mov
or
lods
mov
or
adc
push
push
cmpsb
inc
test
shlb
out
idivb
mov
repz
roll
push
clc
addr16
jmp
mov
je
sbb
sti
mov
cld
sar
sbb
shlb
pop
or
jmp
add
daa
jle
push
std
pop
add
add
iret
jbe
in
inc
push
cmc
or
leave
jae
add
cwtl
add
cld
jmp
push
call
mov
pop
ret
add
add
popf
test
inc
dec
mov
or
adc
call
lret
or
add
insb
inc
add
mov
or
inc
cld
inc
addb
push
mov
mov
cld
cmpsl
cmp
call
mov
sub
mov
pushl
in
ja
aaa
fisttpl
sbb
gs
xor
fnstenv
stos
inc
add
fcmovnb
jae
xchg
push
xor
cwtl
outsb
addl
dec
fsubs
dec
out
add
fnstenv
mov
xor
sbb
sbb
push
lcall
jmp
jae
repnz
ja
addr16
add
popa
ja
or
lods
movsb
out
jns
js
dec
fidivl
push
or
daa
push
dec
or
lds
or
pop
cmp
add
and
cmp
push
push
sahf
iret
pop
inc
xchg
jmp
fidivrl
leave
xchg
cld
add
pusha
jmp
pop
rorl
xor
icebp
jmp
stos
cmc
outsl
fimull
sbb
stc
dec
jmp
inc
xor
push
sti
nop
dec
jmp
add
add
into
popf
xor
or
call
jo
sbb
pop
add
jne
inc
jns
call
or
aam
inc
cld
sbb
in
xchg
decb
iret
icebp
xchg
inc
push
jne
js
cld
ss
call
dec
rol
xor
add
and
xchg
adc
inc
jbe
jns
inc
in
mov
or
jmp
outsb
popa
sub
jb
push
rcll
leave
jae
inc
loope
imul
dec
adc
out
popa
sub
xor
add
ret
imul
inc
orb
jne
xchg
mov
shlb
lods
cmp
mov
jne
loope
jbe
mov
pop
inc
les
add
jl
addl
mov
pushl
loope
jne
mov
inc
pop
pop
add
popa
cmp
sbb
sub
xor
call
leave
jb
add
inc
sbb
dec
push
jo
popa
inc
sbb
pushl
loope
mov
mov
out
fs
lret
pop
push
xlat
enter
push
mov
mov
push
or
pop
inc
cld
or
add
xlat
lret
lock
test
mov
ljmp
std
je
cli
je
add
lret
shrl
sar
loope
cs
xlat
mov
loop
mov
xor
popa
jo
aad
cmp
xchg
and
lret
popf
imul
xchg
xor
popa
jo
jle
sub
fbld
lret
fisttpl
leave
or
mov
sub
scas
xor
out
les
stc
jno
add
or
cmp
push
cmp
add
xchg
push
push
xorb
xor
add
or
dec
cmp
add
add
or
mov
das
push
int
movsb
jmpw
in
add
les
cmc
mov
mov
lea
cmp
sbb
lret
pop
or
cld
into
lret
push
rcll
je
add
or
dec
lret
xor
je
sbb
loope
lret
xor
nop
ss
out
adc
add
jae
pushl
int
orl
rcl
jle
fnstsw
cmp
gs
or
out
push
add
xor
push
dec
jno
lcall
push
mov
addb
lea
dec
push
mov
mov
xor
cmpb
cmp
mov
cmp
push
mov
push
add
lds
loopne
outsb
mov
adcl
push
adcb
insb
add
ret
mov
push
jecxz
adc
push
mov
push
add
add
jne
sub
pushl
gs
incb
pop
lret
test
mov
add
outsl
jle
movsb
sub
xor
fisubs
pop
adc
std
lret
std
into
aas
rcll
xor
incl
cmpl
loop
je
lahf
shll
or
xchg
xchg
and
cmp
ja
shll
stos
mov
idiv
pushf
or
decb
xor
out
lds
xor
cmp
dec
mov
mov
xchg
imul
enter
or
push
ds
pusha
add
sub
add
cltd
popa
js
movb
int
fs
insl
shrb
stc
sarb
pop
rolb
scas
mov
iret
sahf
xchg
mov
rorl
sbb
pop
sub
mov
shrb
imul
pop
cwtl
jnp
cmpsb
mov
jle
sar
pusha
mov
arpl
pusha
cmp
or
adc
je
add
sbb
push
cmp
mov
cmp
add
ret
out
test
add
je
cli
add
je
loope
adc
and
mov
out
sbb
mov
mov
fsubrl
scas
jo
add
in
push
pusha
jmp
out
lcall
pushf
pop
je
cmpl
rclb
mov
leave
rcl
testl
test
cld
fdivr
push
add
pop
or
pop
xlat
std
jmp
push
jo
add
or
add
fdivr
push
inc
fdivr
jne
arpl
push
loope
pusha
enter
dec
loope
call
mov
testl
movl
inc
cli
testl
mov
inc
adc
inc
test
inc
fscale
push
xor
rorb
movsb
xor
testb
mov
mov
or
scas
int
dec
jecxz
inc
mov
fcomi
push
aam
shrd
xchg
jmp
jnp
ljmp
incl
xor
into
xor
bound
cmp
iret
dec
fnstenv
add
sub
mov
cmpsb
arpl
add
dec
mov
rolb
movsb
xor
add
int3
fwait
add
mov
push
and
insb
mov
xor
add
cwtl
fldt
fisttpll
cltd
mov
imul
int
or
dec
add
adc
push
push
jmp
add
or
into
scas
lea
cwtl
fidivrl
lea
fidivrs
call
pop
xor
jmp
into
pop
ds
add
adc
mov
ret
je
jg
xlat
push
ja
pop
mov
adc
test
stos
maskmovq
imull
xor
mov
pop
jmp
xchg
inc
cld
jge
mov
ret
cmp
add
ret
xchg
xlat
hlt
jge
sahf
in
ret
out
add
add
dec
scas
subb
stos
or
xor
or
decb
pop
and
add
lea
iret
int
dec
push
inc
pop
or
and
incl
loopne
ss
pushf
inc
sub
aam
mov
adc
sub
rcrl
jmp
jo
movzbl
push
andb
inc
or
fcomps
push
pop
sbb
add
inc
inc
fcomps
aam
shl
outsl
je
xchg
ds
rorb
mov
adc
js
gs
aam
fcom
jae
and
arpl
inc
inc
fcomps
in
pop
cwtl
add
inc
fdivs
or
addl
inc
popa
xor
int3
loope
push
rorb
mov
jmp
mov
movsb
movsb
lret
sub
sti
andl
mov
shrd
push
or
jmp
jecxz
icebp
mov
inc
rol
or
in
incb
push
enter
insb
pop
add
xor
inc
add
mov
xor
xor
push
pop
inc
mov
or
add
mov
sub
push
aam
lock
ret
add
imul
flds
std
adc
inc
daa
cs
or
push
sub
fwait
mov
dec
lret
lds
push
xor
cmc
lret
sub
add
ss
sbb
lret
mov
lret
stos
idiv
push
xlat
mov
mov
pop
cmp
add
dec
push
add
ret
xor
fs
das
xchg
ljmp
popa
mov
clc
mov
pop
sbb
popf
jmp
push
or
jmp
xor
add
icebp
loopne
call
and
call
xor
add
mov
clc
bound
inc
mov
mov
xor
add
cmp
adc
cmp
mov
xor
push
aad
xor
xor
or
call
cmpsb
out
xor
or
test
xchg
add
jmp
leave
inc
enter
add
dec
enter
std
jne
loop
std
dec
std
jne
fnstsw
pop
mov
cmpl
je
pop
dec
fsubr
jl
incl
mov
cmp
incl
movsl
sar
push
inc
cmp
std
jne
rcll
push
movl
adc
push
cmpl
jne
xlat
mov
add
or
mov
jmp
daa
shll
test
add
push
test
add
cmp
xor
add
mov
cmp
lgs
add
xor
jge
jo
add
ss
jle
mov
add
out
clc
xor
dec
movsb
insb
lret
scas
pop
mov
and
cmp
stos
ret
hlt
add
xor
dec
clc
xor
add
lods
nop
add
xor
push
cld
or
add
xor
xor
scas
inc
cltd
pop
sbb
sbb
or
jmp
add
sub
mov
xor
pop
inc
cltd
pop
roll
or
add
pop
inc
popa
pop
es
fisttpll
add
leave
pushf
sbb
jecxz
add
jbe
ffreep
movsl
adc
push
sbb
pop
sub
jbe
movb
cmp
push
loop
add
xor
mov
roll
xor
addr16
cld
xchg
push
dec
sub
mov
ret
popa
clc
or
outsb
xor
inc
arpl
decl
inc
cld
push
xchg
dec
test
or
inc
clc
jmp
jb
push
mov
ja
xchg
mov
in
push
jmp
mov
clc
jmp
rorb
mov
or
pusha
sar
mov
add
les
cmpsl
dec
or
pop
ret
xchg
dec
or
jo
std
jmp
mov
std
leave
mov
add
loope
les
jmp
push
and
or
mov
add
cwtl
lds
lock
add
mov
pop
leave
add
mov
push
or
push
mov
push
mov
add
mov
inc
jl
and
mov
xchg
xor
dec
add
sbb
xor
inc
sbb
sti
ja
sti
jg
icebp
add
stc
sub
push
and
lcall
loopne
or
loopne
push
std
lock
or
loope
push
pop
icebp
decl
lcall
and
jae
add
xchg
stos
clc
ret
lds
mov
je
ss
mov
dec
or
adc
add
mov
cmp
inc
add
cmp
in
mov
add
mov
push
or
pop
ficomps
mov
cmp
push
mov
mov
dec
cmp
add
out
fiaddl
icebp
mov
mov
ret
dec
sub
or
movsl
mov
xor
notb
or
jmp
scas
int3
jo
jmp
enter
jecxz
mov
and
add
or
stos
add
push
ret
test
jmp
incl
out
add
sub
inc
mov
addr16
and
mov
sub
mov
cmpsb
repz
and
xor
mov
mov
fstps
bound
sub
xlat
pop
jmp
jae
adc
aaa
sub
clc
push
popa
push
add
mov
or
sub
push
sbb
add
outsb
add
xchg
and
aas
add
out
rorl
adcl
sbb
push
fs
or
xchg
pop
or
add
leave
jae
and
inc
fmul
jae
lock
enter
scas
decb
push
scas
jecxz
push
push
add
sbb
or
leave
jae
paddd
pushl
bound
movl
std
jne
leave
xor
mov
jmp
dec
fsubrl
leave
jae
xor
aaa
or
frstor
lock
stos
sub
sbb
add
cmp
mov
add
mov
sub
mov
xor
inc
jo
stos
std
inc
outsl
mov
inc
icebp
out
shlb
or
mov
arpl
lahf
stos
in
aas
rorb
lahf
je
mov
ljmp
sub
pushl
cmpl
test
insb
dec
push
or
inc
add
adc
mov
xchg
mov
mov
cwtl
rcrb
fisttpll
icebp
cmp
call
add
fidivs
cmp
mov
lods
cmp
mov
or
cmp
sbb
mov
and
mov
or
cmp
rorl
cltd
in
mov
lret
ja
sbb
fdivs
int3
jmp
jb
jne
mov
mov
loope
lret
addr16
out
sahf
or
loope
outsb
addr16
xlat
mov
in
or
mov
ror
mov
into
mov
je
lcall
mov
xchg
mov
xchg
lcall
orl
fldcw
out
je
lret
outsb
xlat
mov
inc
fcmove
push
mov
xor
jno
dec
mov
je
dec
pusha
mov
daa
jae
jne
cmp
imul
std
jne
pusha
mov
ret
push
mov
ret
jne
int
dec
lcall
ds
add
cmp
sbb
rorb
adc
add
into
inc
clc
fadds
add
iret
push
add
loopne
imul
jno
lea
cmc
jmp
je
cld
rorb
add
push
push
pushl
aad
call
add
aam
lods
lock
pop
nop
push
call
mov
adc
in
andps
jg
add
std
stos
negb
mov
inc
add
or
incl
cmp
xorb
pop
mov
mov
fs
mov
mov
pop
scas
divb
mov
scas
negb
mov
je
jg
pop
mov
ja
xchg
stos
addr16
mov
pop
mov
adcb
pushf
fiadds
or
aas
mov
cwtl
enter
in
std
mov
push
mov
jne
mov
icebp
stos
add
mov
mov
divl
lds
fdivl
rclb
add
push
stos
popf
imul
popa
mov
or
cmp
fldcw
or
or
fdivrl
mov
fdivrl
jl
inc
stos
rol
xor
inc
scas
int3
sti
xchg
jecxz
add
add
addl
or
jmp
jno
xchg
or
inc
push
add
daa
leave
jae
andb
push
xor
lcall
xor
scas
out
add
inc
addb
or
push
jno
shlb
lcall
jbe
cmp
ja
jne
nop
arpl
pushl
pop
and
add
lds
addl
xchg
jae
lcall
movl
jle
or
mov
je
mov
leave
ret
mov
jmp
test
or
add
inc
adc
or
and
jo
andl
imul
push
push
and
or
fnstsw
add
xor
mov
inc
mov
dec
cld
ss
pop
jo
or
in
push
mov
adc
push
pop
lahf
pop
shrl
mov
mov
jecxz
cmpl
xor
imul
mov
dec
cld
push
lds
xor
mov
mov
scas
mov
sub
pop
jbe
das
sbb
enter
lcall
mov
enter
or
ds
cmp
sbb
scas
repz
sub
cmp
cmc
jg
or
add
in
in
dec
cs
jno
and
mov
and
aas
mov
sbb
push
inc
add
mov
fstl
xlat
pop
add
and
popa
lods
pop
or
or
cmp
fidivs
icebp
stos
cmp
add
mov
lcall
xor
mov
dec
jnp
jmp
out
adc
fidivs
call
shrb
je
lret
in
push
and
adc
cmpsl
stos
mov
sahf
movsb
or
xchg
push
lahf
xor
lcall
pusha
lods
out
xchg
call
ss
call
inc
mov
aad
lods
bound
enter
add
fs
mov
push
call
mov
stos
std
jne
addb
icebp
or
pushf
add
jne
xchg
addb
je
or
adc
call
jle
adc
scas
mov
pop
pop
add
lret
mov
pop
mov
push
add
add
cli
pop
inc
or
pop
add
pop
jnp
xorl
jae
mov
push
mov
call
jmp
xor
aaa
or
push
loope
shlb
into
jae
inc
add
pop
cs
mov
mov
cltd
sti
mov
cmpsb
mov
add
mov
sub
cld
cmpsl
stos
sbb
in
dec
mov
inc
movb
sub
pop
idiv
push
jmp
xor
pushl
cs
sahf
mov
cmp
dec
bound
sti
mov
inc
xchg
ljmp
xchg
add
sub
add
add
or
and
xor
mov
add
pusha
push
stos
lds
and
jl
mov
mov
mov
or
andb
sti
adc
add
cmp
xor
xor
jmp
add
call
icebp
mov
add
shrl
ret
add
or
push
mov
mov
add
or
sub
pop
fldcw
cmp
mov
pop
sbb
add
xor
sarl
add
xor
scas
js
call
sbb
add
cmp
arpl
sub
adc
inc
insl
xor
add
ret
sbb
xor
clc
movsb
dec
inc
mull
call
inc
sbb
add
xchg
sar
call
daa
sbb
add
or
cmpl
jo
adc
or
fmuls
jae
pop
jae
jg
hlt
cmpl
sarl
std
jne
cmp
pop
xchg
pop
jae
iret
loopne
incl
inc
jne
jne
sbbl
pop
std
jne
add
std
jne
test
std
cvtdq2ps
jne
cmpl
or
jmp
mov
pop
fstl
loope
orl
loope
xor
orb
je
stc
push
inc
stc
mov
adc
inc
mov
je
enter
mov
cmp
pop
mov
leave
enter
ja
je
js
gs
xchg
xor
add
xor
push
mov
mov
add
xor
aaa
or
scas
xor
push
xor
add
fbstp
or
daa
pushl
or
mov
mov
xchg
mov
add
stc
call
adc
fcomps
mov
std
add
jb
cmp
or
cmp
cmp
push
mov
push
sub
stos
pop
xor
lahf
mov
mov
adc
or
add
or
cmp
or
test
adc
ss
sub
shrb
jmp
push
jnp
mov
adc
add
repnz
iret
ljmp
movsl
xchg
outsl
pop
push
loope
inc
sbb
xchg
dec
in
cltd
dec
hlt
cltd
rcrl
out
or
pop
jmp
jl
sub
sbb
add
inc
pop
mov
adc
adc
mov
or
test
xor
mov
mov
add
sub
mull
xor
jmp
mov
lock
xchg
stc
incl
and
dec
call
je
jae
cld
inc
adc
incl
mov
or
lds
pop
push
in
mov
out
jle
cmpl
jne
pop
add
cmpl
jne
mul
sti
call
add
int
pop
xchg
leave
or
sbb
jecxz
cmp
pop
add
mov
jno
loopne
aaa
call
mov
pop
je
xor
lods
stos
loope
inc
push
mov
add
xor
dec
hlt
loope
lods
je
clc
popf
cli
es
mov
sbb
lea
jl
mov
or
negb
lods
out
shl
or
mov
inc
dec
lods
sbb
pop
call
in
mov
andb
je
das
das
hlt
xor
stos
je
xor
add
pushf
dec
adc
lods
mov
or
add
inc
mov
push
stos
mov
enter
das
and
mov
xchg
jmp
ret
or
aas
inc
out
cmp
stc
sbb
add
mov
loope
lds
out
lods
mov
stc
add
add
sub
lds
sbb
xchg
adc
scas
sbb
lods
sbb
mov
lea
cmp
outsl
inc
jns
sti
push
mov
pop
data16
sbb
inc
jb
decl
dec
adc
pop
mov
cld
in
adc
out
or
xor
cld
incl
popl
jecxz
cmp
aas
leave
sub
or
negl
adc
add
pusha
jo
addr16
mov
pushl
fidivl
adc
popf
test
xor
lahf
mov
xchg
add
repnz
cmp
xlat
call
cmp
push
incl
jae
sub
push
leave
ret
cmpl
jne
xor
xchg
cmp
mov
add
decl
fiaddl
call
das
ficoml
incl
jb
mov
fcoms
incl
add
mov
fmuls
incl
je
sub
push
leave
ret
pushl
je
adc
ja
int3
mov
idiv
cld
cltd
lcall
pushf
stc
in
fwait
stos
sub
mov
cmp
cmp
inc
mov
je
das
or
push
cli
out
out
sub
stc
test
push
jbe
out
xchg
test
leave
repz
add
mov
test
cs
fadds
add
sbb
stos
movsb
insb
add
add
outsl
or
sahf
adc
adc
test
adc
jge
hlt
imul
in
addb
fstpl
or
aad
add
add
call
add
adc
test
adc
push
sahf
and
jmp
adc
add
nop
sahf
add
and
imul
push
cmpsl
add
mov
fwait
sub
enter
call
adc
sub
or
jbe
mov
sub
inc
test
mov
lret
add
or
jmp
in
pop
mov
movsb
mov
add
ljmp
mov
dec
mov
fstps
call
fwait
sub
jns
rcr
xchg
inc
sbb
decb
cli
dec
push
shrl
inc
rcl
add
incb
dec
repnz
add
cld
adc
pop
xlat
fcmovbe
cmp
arpl
cmpsl
cmp
lcall
fs
inc
jae
testl
xlat
arpl
add
push
sub
add
pop
leave
sbb
call
push
jge
out
mulb
push
push
fiaddl
call
adc
jae
xlat
pop
rorb
pop
push
fadds
call
call
pusha
bound
bound
pop
jge
dec
xor
add
outsl
cli
mov
push
movsl
mov
xchg
movsl
je
jp
dec
xor
inc
leave
jae
add
add
cli
out
out
add
repnz
or
testb
lret
lock
je
cmp
dec
xor
test
add
jno
push
push
jbe
out
push
add
sub
das
or
sbb
jne
xor
mov
inc
clc
loopne
pop
mov
dec
les
lcall
xor
test
mov
mov
scas
out
neg
call
mov
add
adc
jmp
jmp
inc
out
sub
xor
push
andl
cmpxchg
repnz
es
dec
test
imul
aas
sub
add
cmp
fcos
call
xchg
cltd
jmp
xor
add
dec
sbb
ds
push
out
cmpb
jae
aad
clc
call
add
ret
xor
add
test
or
jmp
insl
stc
sub
cltd
jmp
pop
add
movsb
lcall
call
mov
jne
in
mov
mov
pushl
mov
push
push
imul
jmp
push
adc
pusha
xchg
inc
sbbb
inc
orb
jne
add
or
mov
mov
and
jae
add
jmp
push
call
or
push
aas
dec
leave
ret
mov
inc
insb
inc
hlt
pop
lea
jne
shl
or
imul
mov
rolb
mov
lret
rol
xchg
jnp
sbb
or
or
ret
mov
xor
inc
add
and
xor
inc
add
and
xor
inc
add
and
inc
mov
icebp
nop
inc
movsl
icebp
mov
add
imul
dec
movsb
in
dec
outsb
pop
push
mov
mov
notw
nop
inc
insl
push
popl
popl
push
mov
add
pop
repnz
fsubs
mov
mov
jmp
xchg
call
xor
xchg
add
addl
or
cmp
testl
in
sub
jmp
add
call
dec
insl
rcrb
test
mov
std
mov
sbb
add
sbb
xchg
in
lods
jne
andl
out
xchg
add
lea
xor
push
or
dec
call
fst
pop
push
rolb
cld
push
push
sar
lods
pop
pushf
xchg
xchg
addr16
dec
add
xchg
dec
add
add
and
jb
lcall
test
sub
inc
icebp
adc
add
jae
add
bound
sub
or
adc
lods
push
test
pop
dec
add
and
xor
or
fdivrl
dec
mov
or
sub
dec
push
add
or
stc
iret
jmp
mov
or
jne
popa
push
pop
daa
imul
hlt
daa
sti
or
mov
incl
out
out
lcall
std
jne
pusha
imul
std
jne
je
fsub
repnz
pop
pushl
call
inc
ror
ret
push
mov
adc
mov
lea
fmull
in
imul
cmp
fucomi
testl
xor
mov
xchg
arpl
jo
popf
je
dec
jg
xor
mov
inc
std
push
popl
popl
sub
ficoms
out
fwait
popf
mov
pushf
add
sub
popf
je
dec
pop
arpl
mov
add
jno
xchg
hlt
jne
in
imul
push
adcl
pop
rclb
xor
mov
pop
sahf
push
test
xor
inc
xor
mov
imul
out
or
lea
push
sahf
notl
cmpsl
add
xchg
std
popf
testl
pop
mov
xchg
lods
inc
leave
or
add
xchg
xor
loopne
filds
andl
add
sbb
sbb
push
sub
xor
scas
pop
sbb
in
sbb
data16
psubsw
jle
push
sahf
aam
mov
imul
mov
or
aaa
jmp
cmp
je
jmp
pop
jmp
sbb
je
cltd
dec
adc
push
sub
je
sti
movl
in
call
outsl
movsl
dec
into
inc
add
mov
xchg
bnd
push
push
movsl
pushl
aaa
fidivrs
cmp
test
mov
xorl
add
pop
mov
add
rolb
push
add
addb
insl
jae
cmpb
lcall
testb
pop
cmp
clc
add
je
mov
add
gs
xchg
mov
std
add
je
pop
insl
add
xchg
enter
fdivrs
inc
in
cmp
jo
push
filds
shlb
jnp
mov
add
sarl
xchg
lcall
pop
xchg
icebp
xchg
add
aaa
sti
ret
enter
add
pushf
lcall
sbb
adc
mov
cmpsb
jge
in
mov
movsb
pop
cmpsb
dec
out
je
call
mov
in
das
and
in
xor
les
xor
in
and
stos
and
hlt
mov
stos
xchg
in
cltd
orb
mov
sbb
pop
or
sbb
scas
lds
or
cmpsl
dec
jmp
sbb
mov
aaa
and
pop
outsb
or
cmp
add
adc
inc
daa
pop
sub
xor
jl
xchg
jle
adc
out
add
pop
leave
popf
lcall
mov
mov
mov
cltd
cmp
push
add
cmpsb
adc
lods
mov
lret
jmp
xor
mov
fsubrl
sahf
and
jae
leave
adc
pop
xchg
int
jne
icebp
hlt
push
ds
fsubrl
mov
out
push
and
stc
lcall
xor
inc
jmp
cld
mov
pop
push
enter
cltd
dec
addr16
add
dec
add
daa
std
imul
dec
out
or
into
pop
es
dec
repnz
push
cmp
sbb
ja
pop
call
lock
out
push
loop
fs
add
sbb
dec
std
out
mov
std
push
inc
or
inc
pop
jo
or
movsb
std
jne
popa
push
call
jo
add
bound
ja
or
sub
or
std
call
rorb
fmull
push
fidivs
mov
jno
mov
inc
add
cmp
je
lcall
std
jne
stos
stos
idiv
mov
add
mov
add
inc
pop
adc
mov
inc
cld
and
jnp
or
xchg
push
or
cld
add
or
outsb
cmc
xchg
push
push
test
cmc
cmp
add
cmp
push
push
lret
mov
das
gs
xchg
je
cli
stos
std
imul
sub
pop
insl
pop
inc
xor
xchg
xor
pop
inc
add
mov
ret
or
mov
or
xor
add
adc
rcl
pop
mov
add
or
cmpsb
lods
and
lock
or
std
xchg
dec
mov
fwait
dec
rcll
aaa
adc
push
xchg
stc
in
test
xor
rolb
fwait
aam
adc
mov
outsl
inc
cmc
and
jo
push
adc
mov
add
or
lcall
add
xchg
fstpl
push
mov
ss
stos
inc
cld
push
mov
adc
cmpsb
pushf
adc
call
mov
test
andb
mov
or
pushfw
addl
mov
mov
inc
mov
adc
inc
lcall
jmp
push
lea
sbb
xchg
sub
std
mov
inc
add
inc
out
int
std
incl
pop
jbe
outsl
je
ret
push
mov
or
dec
pop
dec
add
je
call
sbb
cmp
mov
pop
enter
mov
add
clc
out
add
sahf
jae
xorb
cld
xchg
pop
and
aas
or
jl
jbe
inc
add
stos
or
icebp
push
xor
fsts
jae
jmp
mov
sbb
cltd
clc
xchg
sahf
push
sbb
or
je
pop
or
xchg
out
cld
jns
imul
add
add
mov
pop
sub
adc
sbb
loope
sbb
dec
mov
push
fists
push
push
iret
xor
mov
lods
cmp
test
or
lret
xchg
jg
sub
xor
jno
iret
std
in
fwait
dec
jecxz
xchg
sub
lock
push
dec
inc
xor
rclb
add
std
lock
std
pop
mov
xchg
jg
stos
pushl
jno
mov
mov
into
pop
std
loopne
and
test
add
mov
xchg
enter
cmp
pop
push
ficoms
outsl
xchg
cli
jge
imull
sbb
pop
adc
std
testl
mov
sub
je
outsb
imul
xchg
push
mov
jl
rolb
mov
pcmpeqw
push
adc
mov
xchg
ds
dec
add
daa
xchg
jmp
imul
call
pusha
out
test
jmp
jb
rol
jae
push
add
pusha
lock
add
test
sti
cmpsb
cwtl
std
or
and
push
rorb
out
xchg
push
decl
out
inc
cltd
std
call
les
xchg
cwtl
std
decl
dec
std
jne
cwtl
jae
pusha
sbb
cmp
ret
push
mov
xor
or
rorb
add
and
incl
cmp
or
add
nop
mov
je
int3
adc
je
dec
add
lret
xor
inc
ffree
sbb
dec
jb
adc
je
or
xor
mov
test
imul
jb
mov
jp
mov
xchg
dec
or
adc
jb
add
xor
cld
mov
cmc
ret
ja
mov
lock
xor
data16
dec
call
push
sbb
mov
add
movsb
or
popf
jne
sbb
jno
inc
push
test
ret
andb
add
je
popl
test
sbb
adcl
xlat
adcl
movl
xchg
xchg
mov
cmpl
lahf
std
aam
cwtl
xlat
int
jns
hlt
add
int3
mov
subl
dec
in
daa
add
jno
ss
cmpl
addl
jmp
jae
lret
mov
add
pop
mov
xorl
pop
inc
mov
shlb
or
add
es
mov
jb
push
andl
pop
jns
movsb
push
lcall
push
jb
xchg
aad
or
mov
sar
mov
mov
cmpsb
mov
and
movsb
cmp
inc
xorl
pop
mov
xchg
jae
mov
dec
incl
mov
mov
jg
or
mov
incl
inc
jb
loopne
fs
or
call
push
rolb
mov
out
lods
xchg
std
call
adc
add
add
adc
push
jne
popf
xor
xchg
xchg
pop
sbb
inc
test
stos
mov
xchg
jae
shl
incl
mov
and
mov
inc
test
dec
loope
mov
repz
jg
sbb
lea
fwait
dec
push
enter
sti
int
imul
and
xor
add
icebp
xchg
fcoms
nop
cs
mov
jmp
add
out
lret
gs
je
cltd
push
adc
cltd
int3
push
incl
inc
pushl
mov
or
dec
push
notb
idivl
sub
in
fcoml
adc
mov
adcb
jge
leave
dec
shll
movd
repz
xchg
fwait
enter
sub
fnstsw
push
das
add
jg
ret
inc
sub
mov
mov
call
adc
jno
or
mov
xor
jg
mov
jg
mov
hlt
out
call
adc
incl
inc
jmp
inc
add
jle
or
push
enter
out
jmp
insl
or
cmp
add
imul
xor
jns
jne
push
dec
movb
rclb
xchg
inc
sbb
adc
call
stos
xor
call
jo
jns
and
into
addr16
push
enter
out
add
lret
fdivrl
call
cmp
jae
test
pop
push
inc
xorl
and
add
mov
std
jne
nop
jae
xorb
jmp
jae
ja
or
iret
aas
pushl
push
in
ljmp
nop
std
mov
nop
jae
xor
dec
pushl
nop
jae
and
mov
jae
xor
xchg
nop
jae
addb
ja
jae
xor
dec
xchg
je
inc
or
cmp
outsb
push
mov
mov
mov
inc
dec
sbb
out
push
mov
test
mov
sbb
fisttps
add
fisubrl
mov
mov
xor
sbb
add
fdivp
sbb
ficomps
xchg
fdecstp
xor
or
cld
mov
lods
xchg
add
std
out
xorb
das
or
push
inc
mov
loopne
ror
xchg
and
inc
xor
inc
mov
dec
push
faddl
xor
test
fstp
jnp
sti
jbe
fbstp
cltd
or
xchg
in
lcall
adc
mov
dec
cli
aaa
sub
jnp
xchg
stos
lock
pop
dec
sub
sti
into
fwait
stos
xchg
fistpl
ret
mov
lret
mov
call
jnp
arpl
mov
mov
mov
dec
lret
outsl
jnp
sub
aam
inc
jns
loop
mull
push
mov
push
rclb
insb
mov
jmp
lret
jbe
enter
jnp
sbb
sar
mov
icebp
xchg
add
sbb
call
repnz
rol
inc
jmp
scas
jnp
xchg
xor
out
push
sub
test
fsin
add
cmp
or
pushl
test
or
sbb
arpl
inc
add
popf
addr16
outsl
test
pop
push
out
mov
dec
pushl
pusha
sahf
push
js
test
pop
je
std
jne
sahf
into
dec
scas
test
fimull
add
mov
inc
lock
jo
push
ljmp
mov
cld
fimull
and
loopne
and
test
das
or
call
mov
cld
mov
and
lcall
jg
call
add
idiv
fucom
xchg
xorb
add
das
test
fisttpl
mov
inc
pop
lds
push
sbb
lock
sbb
xor
out
inc
test
sub
mov
pop
inc
add
jle
out
sub
cmp
mov
push
mov
stos
mov
das
leave
jno
sbb
xor
inc
imul
or
cltd
inc
js
fwait
add
adc
scas
cld
sbbl
in
mov
mov
jecxz
in
bnd
or
cmpsb
xor
into
or
jb
loope
jmp
or
loope
leave
call
pushf
ja
cmpl
scas
iret
daa
js
inc
xor
adc
or
jb
ja
or
or
xor
mov
imul
xor
mov
pop
adc
push
mov
pop
push
mov
popa
sti
mov
jbe
inc
lcall
insl
push
or
repnz
fs
aam
inc
jmp
xor
data16
aad
jmp
cmp
xchg
cmp
call
push
ja
mov
int
add
out
das
mov
pop
push
push
sar
mov
or
push
call
add
cli
lcall
mov
lcall
mov
and
rclb
mov
sbb
notb
leave
dec
dec
leave
or
je
cmp
dec
fdivrl
cmp
mov
movl
pop
or
inc
mov
xchg
or
sbb
add
or
cmpl
jbe
add
xor
push
xor
cmp
jg
jg
dec
iret
stc
pop
out
xor
fs
sbbl
imul
mov
add
push
idiv
add
pop
loopne
jae
add
pop
add
xor
jns
add
xor
add
data16
hlt
mov
add
sbb
xor
adc
or
dec
dec
add
cmp
insb
loopne
jecxz
mov
ficompl
je
jnp
decb
add
push
js
daa
or
or
fldl
jp
sbb
add
or
cmpsb
or
cmpsl
lock
jmp
aam
lock
jmp
mov
push
xor
ja
jmp
add
add
insb
jg
into
xchg
fldl
popa
pop
rcrb
je
addl
xor
shlb
jl
test
call
add
pushf
mov
ficoms
jo
dec
test
or
out
enter
lea
popa
mov
sub
lea
xor
subl
xor
or
jns
push
in
imul
jb
test
xor
pushl
mov
je
pop
jle
sub
jb
and
jae
add
addr16
or
mov
inc
pusha
repz
pop
jno
push
jo
cld
ljmp
inc
in
or
add
mov
jge
push
je
dec
or
add
push
pushl
fisubs
mov
mov
jg
mov
rcl
push
arpl
lods
sbb
jb
cmp
ja
cmp
jmp
sub
add
enter
push
xchg
cmp
or
xorb
ret
gs
fildll
ja
je
sbb
out
movsb
je
add
xor
inc
add
pusha
call
jmp
pop
std
dec
jo
pop
rolb
jg,pt
fstps
sbb
sub
xchg
jb
jmp
hlt
or
int3
arpl
xchg
pop
out
sbb
add
outsl
out
and
insb
out
xor
push
mov
sub
out
pusha
add
aaa
jno
fdivrp
dec
faddl
jl
xchg
xor
adc
jne
ss
call
cli
jo
or
or
jl
jecxz
imul
jl
dec
mov
and
roll
pusha
data16
call
fwait
or
popa
pop
leave
lahf
jo
cmc
lcall
jl
inc
stos
add
jno
mov
aam
fmuls
inc
ret
lock
pushl
jo
out
cmc
push
adc
inc
jmp
xlat
xor
or
or
out
inc
or
bnd
and
push
rcl
fldenv
xor
shrl
inc
jmp
pop
sbb
cmp
mov
outsl
sti
mov
push
sub
push
pop
or
sbb
sti
testb
incb
dec
add
popa
sub
cs
test
jmp
inc
add
jne
bnd
jo
add
mov
add
inc
clc
sbb
add
iret
dec
out
decl
or
push
pop
imul
cmc
dec
lea
pop
std
jne
repz
jo
xor
enter
int
testb
or
nop
inc
popf
sbb
inc
test
std
push
adc
mov
add
repz
mov
jecxz
dec
xchg
lock
push
popw
xor
ret
xchg
negb
js
and
mov
test
js
lret
pop
ljmp
xorl
jg
or
adc
push
stc
jle
push
idivl
xor
xor
mov
xlat
js
out
dec
push
call
test
pop
testb
xchg
dec
lret
addr16
ja
lds
jns
scas
mov
call
sub
lock
jbe
je
pop
xor
ja
cmp
aad
pop
adc
inc
loop
sbb
mov
jo
insl
roll
xor
adc
xor
ret
cs
pop
addr16
insl
lea
std
nop
insb
imul
mov
jge
pop
loopne
jmp
loope
add
mov
jo
insb
push
out
cmp
int3
fildll
out
cmp
jo
insb
call
add
loope
jmp
or
js
sti
jp
popl
add
xchg
lock
pop
mov
jecxz
out
lcall
mov
jmp
xor
add
call
cmpsb
andb
imul
inc
mov
imul
add
push
lock
outsb
add
pushf
push
jae
pop
data16
pop
inc
adc
decb
mov
ds
imul
cmp
lods
aas
imul
pop
jae
es
pop
adc
push
push
mov
push
es
adc
repnz
incl
cmc
incl
filds
repnz
mov
pushl
inc
ljmp
mov
xchg
repnz
call
jg
loop
repnz
pop
hlt
std
incl
inc
scas
repz
mov
decl
jmp
repz
call
fidivrs
sbb
std
outsl
repz
jne
xor
push
leave
ret
push
mov
sbb
ret
dec
cli
push
xor
ljmp
pop
push
sti
jb
or
jmp
add
sub
mov
jl
fcoml
add
pusha
in
push
jbe
jl
xor
jmp
lcall
xor
mov
xor
pusha
jg
and
test
addr16
cli
ret
je
call
add
and
adc
jns
pop
js
ds
sub
adc
jae
mov
or
add
mov
adc
jo
jmp
inc
mov
call
or
jg
js
pop
inc
ret
pushw
mov
fldl
shll
imul
add
dec
pushf
je
daa
imul
je
adc
jmp
or
cmp
loopne
sbb
je
ficomps
adc
jne
dec
dec
lock
imul
enter
cmp
lret
push
mov
mov
xor
testl
test
mulb
cmp
cmpsb
leave
call
call
jo
inc
jmp
xor
add
mov
pcmpgtw
push
and
addr16
divb
mov
mov
lea
xor
sbbl
inc
jmp
sub
je
inc
fadds
fisttpll
clc
sbb
add
or
testb
fidivl
aaa
add
lock
loope
add
pop
out
or
movsl
mov
imul
add
or
dec
or
lock
decb
ret
xor
sbb
or
pop
xchg
repnz
or
test
arpl
call
popa
push
out
jmp
jne
shlb
enter
into
iret
fiaddl
inc
and
add
or
xchg
xor
out
loope
add
jle
adc
stos
ret
ljmp
xor
test
jo
add
pop
fsubl
ret
cmp
fs
lret
outsl
fdivr
cwtl
ja
jmp
std
incb
mov
jae
neg
add
rdseed
call
fs
out
or
dec
pop
or
or
push
not
repz
call
fdivrl
fneni(8087
pop
xchg
and
jo
or
or
mull
jae
jg
loopne
add
les
int3
fnsave
fcmovne
jo
mov
call
push
add
shll
add
fstpt
jo
dec
clc
jo
pop
imul
push
test
lahf
jle
out
call
inc
xchg
dec
test
fs
popa
fldl
inc
or
decb
enter
push
jb
mov
adc
ja
dec
es
adc
aam
int3
inc
jmp
xor
shl
mov
jmp
add
or
jmp
or
push
xor
out
lcall
pop
dec
je
pop
idivb
lds
lods
lea
rclb
or
int
ljmp
dec
std
lcall
loopne
lea
cmc
decl
push
call
push
xchg
jg
out
xchg
repnz
push
aas
mov
mov
pushl
decl
mov
xor
adc
aas
addr16
inc
aas
add
pop
repnz
xor
cmp
jg
sub
repnz
push
aas
mov
mov
fbld
mov
stc
push
repnz
mov
cmc
pop
testb
fdivr
mov
mov
fldt
and
mov
dec
inc
faddp
jnp
int
insl
pop
jo
lds
add
test
mov
cmp
in
insl
test
notb
sti
insl
xor
shll
jo
mov
sub
jae
pop
inc
insb
je
dec
jge
dec
push
insb
mov
mov
cld
out
xor
fstpl
or
xchg
repnz
bound
insl
pop
sti
sti
push
in
sub
popa
cmp
insl
insl
pop
adc
push
bound
popf
inc
pop
insl
iret
popa
sar
into
mov
mov
popa
xor
insl
cmpsl
fwait
sbb
popa
adc
lds
xchg
sarb
mov
pop
cmc
insb
push
rsm
insb
addr16
fwait
addr16
fstpl
push
aad
dec
fwait
enter
shlb
popa
mov
mov
xchg
aad
xchg
sbb
dec
pop
jmp
outsb
fs
cli
push
mov
call
std
aam
push
aam
pop
je
pop
xor
inc
push
shr
mov
cmp
cmpsl
adc
xchg
aaa
or
loop
repnz
and
adc
push
xchg
call
loop
aam
and
adc
jo
pop
push
lds
sub
pop
mov
pop
je
je
jae
ja
push
call
adc
jb
mov
loope
hlt
dec
hlt
jae
mov
imul
out
inc
decb
mov
std
jne
ret
cmc
ds
hlt
std
jne
bnd
jo
cmp
jae
ja
cli
jge
out
cmpsl
repnz
fucom
out
lret
leave
dec
popa
push
adc
add
test
in
inc
ja
or
in
or
sbb
mov
pusha
out
xor
imul
mov
adcl
add
adc
out
xor
mov
movsb
imul
incb
in
out
jmp
or
add
xor
pop
addr16
shl
jbe
add
sub
lock
mov
add
jmp
xlat
dec
ret
call
ficoml
add
jae
mov
sbb
sbb
xor
je
or
mov
call
pop
xor
incl
adc
xor
mov
cmc
xchg
fcomp
dec
icebp
daa
add
into
cld
add
or
push
push
enter
outsb
sti
add
adc
jge
xchg
cmp
ret
mov
jne
scas
add
xchg
and
jmp
out
pop
into
jns
imul
ret
inc
jl
xchg
fwait
push
stos
ret
and
testb
test
mov
ret
arpl
negl
pop
jbe
das
inc
add
or
pushf
in
je
gs
sub
pop
or
push
cmp
jo
leave
int
sbbl
sub
push
sub
and
cwtl
pop
out
repnz
mov
add
adc
jo
lods
dec
repnz
lahf
pop
je
jp
cmp
pop
xchg
inc
push
in
call
mov
pop
imul
add
add
pushf
lcall
jmp
mul
inc
add
or
jne
rol
dec
in
jne
in
or
cmp
pop
push
roll
mov
leave
enter
jecxz
inc
fdivl
or
jns
add
pop
mov
decl
sbb
or
add
pop
add
enter
enter
xchg
jmp
lea
cmc
ljmp
std
jne
in
cld
add
add
mov
push
xor
out
scas
gs
loope
push
mov
shl
mov
dec
testb
std
push
xor
xor
pop
imul
xchg
gs
es
cld
out
das
incb
test
jb
push
jl
decl
mov
fs
pop
in
shll
mov
insl
add
cmp
inc
jge
idivb
mov
jl
cltd
sbb
lods
in
notb
ret
xchg
dec
xchg
data16
adc
lcall
std
gs
out
call
add
dec
xchg
shrb
aad
ss
ret
outsl
jg
push
mov
insl
pop
pop
call
pop
pop
pop
popf
add
out
cmpsl
push
push
lea
aad
fsubr
pop
lea
fistpl
pop
insl
iret
pop
pop
out
ss
daa
mov
push
inc
gs
rcr
pop
icebp
sbb
ss
mov
add
es
or
fiaddl
dec
pop
push
into
cmp
mov
fcompl
push
or
cli
or
out
xchg
mul
aad
je
ljmp
stc
int
xlat
mov
and
push
je
pop
cmpsb
push
cmp
cltd
lea
andl
jmp
dec
push
out
adc
outsb
xchg
push
jo
pop
dec
push
pushf
add
decb
sahf
cmp
mov
in
push
jo
incl
inc
clc
and
jae
xor
rorl
mov
fistl
sti
push
xor
fstl
mov
or
fs
imul
inc
aas
add
mov
jmp
jmp
or
imul
mov
loop
jmp
incl
sbb
jecxz
cmp
mov
push
nop
ret
or
xor
ss
sti
sbb
out
out
shrl
ljmp
pop
push
push
mull
add
bound
jns
outsb
push
dec
shrl
inc
iret
pop
popaw
mov
insl
mov
mov
dec
das
sub
bound
testl
sbb
add
scas
repz
push
in
decl
sub
push
mul
xlat
mov
fsubs
aad
popa
sub
or
push
icebp
fucom
insb
out
jmp
les
mov
popa
xor
push
mov
bound
imul
push
or
bound
fmuls
xchg
je
call
popa
dec
push
pop
or
jo
popa
aas
subb
push
int
cs
nop
jmp
or
popa
pop
fsub
imul
pop
call
add
xchg
inc
out
push
cmp
push
jge
add
or
mov
pop
push
push
mov
push
jge
aad
jae
std
jl
pop
add
fldl
inc
insb
adc
jecxz
adc
jmp
xor
xor
push
incb
jle
call
pusha
scas
xor
test
dec
or
sub
push
inc
decl
icebp
repnz
pusha
scas
cmp
scas
xchg
xchg
out
adcb
mov
frstor
pop
jae
negl
jae
inc
gs
decl
std
jne
loopne
cmp
std
mov
mov
cmp
call
pop
jnp
negl
std
jne
loopne
cmp
std
mov
mov
lcall
cmp
call
das
jnp
negl
std
mov
mov
lcall
push
call
pop
jb
negl
std
jne
loopne
cmp
mov
mov
or
push
mov
stc
hlt
pushl
jnp
iret
out
pop
pushf
jne
fmuls
leave
mov
dec
loop
shufps
mov
je
lret
scas
ret
mov
pop
decb
sbb
out
outsb
pop
jle
outsl
divb
imul
add
pushf
stc
push
pop
stc
push
cmp
pop
pop
mov
pop
pop
incb
pop
gs
xor
out
clc
pop
es
negb
xchg
push
pop
fwait
pop
je
imul
or
imul
jmp
add
xor
adc
les
ss
call
enter
or
mov
mov
mov
fsub
jmp
loopne
add
pop
jmp
imul
adc
or
mov
pop
xor
mov
fsubrp
jmp
dec
pushf
adc
andb
mov
or
dec
sar
xor
int3
addr16
or
pushl
xor
mov
iret
notl
sbb
push
incb
repnz
dec
data16
call
incb
push
decl
or
aas
or
outsl
dec
xor
stos
push
cs
lods
loope
fdivrl
pushf
cmp
roll
inc
add
lahf
jle
push
dec
imul
sub
push
mov
loop
inc
out
loop
add
gs
dec
add
aas
add
lods
cmp
xlat
add
je
xchg
data16
fcomp
mov
add
scas
jae
ror
incl
enter
data16
fnstsw
jo
push
or
mov
jae
inc
aaa
push
call
inc
lret
mov
mov
push
mov
push
aaa
aaa
push
call
roll
mov
dec
inc
dec
jg
sub
inc
jg
testl
loope
jo
mov
or
add
cmp
sbb
cmpsb
mov
xor
mov
xor
pop
je
jp
into
imul
pop
ljmp
pop
inc
mov
inc
mov
mov
mov
xchg
push
roll
cltd
mov
incl
pop
add
std
xchg
insl
mov
xor
push
push
dec
pop
mov
push
lea
stos
ret
ljmp
leave
call
rorl
shl
dec
or
push
icebp
aad
mov
xchg
sub
mov
pop
jmp
jecxz
add
dec
adc
inc
or
popa
cwtl
sbb
dec
addl
push
scas
push
add
pop
scas
dec
push
push
aam
out
fisttpl
push
add
push
ss
out
pop
inc
xor
mov
push
fmuls
xorl
pop
push
pop
test
jecxz
cmpsl
xor
loope
mov
je
mov
pop
rorl
add
movl
call
bnd
add
jp
pop
jmp
js
or
add
push
insl
xor
aad
push
ja
lcall
jmp
jbe
aam
dec
je
add
xorb
call
jae
push
adc
and
jmp
lret
movsb
decl
mov
mov
loope
and
add
sarl
push
data16
or
or
push
dec
out
sbb
add
lcall
xchg
std
jne
loopne
and
or
rolb
mov
jae
rcr
decl
inc
loopne
cmp
inc
call
std
or
cmp
insl
lods
push
push
out
cmp
call
xchg
enter
pop
add
push
mov
or
xor
xor
push
je
sti
int
dec
mov
int3
jecxz
int
incb
les
insb
cld
bound
movsb
inc
imul
push
pop
jns
repz
bound
cltd
pusha
add
mov
dec
ud0
push
sti
out
addr16
fs
cmp
adcl
jle
dec
or
push
mov
out
and
lcall
push
stos
or
sar
or
or
add
or
pop
mov
call
jmp
loopne
add
hlt
push
lds
adc
or
cmc
push
addb
add
cs
push
or
aad
imul
push
test
gs
fisubs
add
aam
push
jge
xchg
pop
sub
mov
add
repnz
dec
sti
pop
into
aam
imul
jbe
test
loop
jmp
icebp
or
cmp
or
subb
ss
imul
lcallw
aam
add
decb
sub
xchg
add
jl
or
lret
push
popa
out
mov
shll
push
cmp
xchg
aad
inc
xor
aad
xchg
loope
lcall
xchg
out
stc
out
inc
dec
incb
ret
mov
push
dec
je
add
sqrtps
call
aad
dec
data16
out
incl
out
mov
mov
dec
lods
out
jg
std
mov
mov
dec
mov
adc
std
mov
mov
decl
fdivrp
incl
jge
out
sub
add
mov
lock
call
cli
push
xchg
push
or
cmp
or
or
or
or
or
inc
cmp
add
imul
dec
add
lods
decb
jle
push
je
test
add
cmp
xor
fldl
decb
into
add
insl
pop
ljmp
push
dec
mov
addr16
movsb
cs
je
dec
cmpb
dec
mov
add
filds
outsl
cwtl
out
fisubs
add
sub
or
mov
je
mov
sti
mov
push
mov
or
cmpsl
xor
leave
sahf
xor
push
add
xor
sub
xchg
jle
mov
fmuls
xchg
mov
mov
or
push
mov
leave
call
les
das
scas
push
daa
inc
fstp
ss
fnsave
inc
push
xor
imul
mov
daa
add
cld
dec
mov
faddl
push
pop
adc
sub
enter
xor
jmp
jbe
inc
hlt
incb
icebp
or
xor
push
shr
fmull
shll
mov
ds
push
call
pusha
jns
fldl
sbb
push
inc
decb
imul
mov
or
mov
imul
adc
inc
mov
xchg
xor
add
repnz
sub
int3
addr16
enter
push
and
xor
rolb
cmp
sbb
lcall
gs
ljmp
fwait
inc
orl
lcall
call
lock
xor
inc
or
add
push
cli
xor
xchg
std
decl
fdiv
scas
push
adc
aas
pop
cli
jmp
fdivr
pop
sahf
add
add
dec
jle
in
fwait
shl
orl
inc
or
jne
ror
push
add
add
sbb
pop
xor
mov
pop
add
pop
dec
notb
pop
cli
pushl
and
dec
adc
test
out
pop
add
mov
add
pop
add
mov
incl
dec
je
fisubl
je
lret
add
cmp
cmp
mov
dec
scas
inc
sti
lret
xor
push
dec
popf
cli
out
orl
fldl
cli
out
sub
push
fisttpll
pushf
sub
inc
push
dec
enter
push
stos
push
add
movl
pop
test
fidivl
add
pop
lret
mov
daa
add
mov
insl
dec
add
adc
popa
inc
push
cmp
mov
ficoml
cld
sub
cmpsb
mov
sub
push
xchg
stos
push
incb
decl
mov
pushl
inc
jae
mov
les
inc
pop
dec
push
sub
pop
xlat
aaa
nop
and
cmp
rcr
je
mov
cmpsb
add
inc
lea
sti
xchg
jmp
sub
mov
push
xor
jmp
mov
mov
sub
or
cli
div
mov
loopne,pt
aaa
out
mov
add
stos
mov
insl
inc
push
add
add
dec
xorb
call
stos
mov
inc
jmp
add
or
jno
or
add
jbe
ljmp
add
jb
or
in
inc
mov
xchg
shll
aaa
pop
fsubrp
cwtl
dec
std
call
imul
sbb
inc
sbb
inc
aam
ret
enter
inc
insl
pop
pushl
inc
mov
incl
std
jne
ffree
das
aaa
aam
jne
into
jae
xor
call
into
jae
notl
pushl
out
inc
dec
std
arpl
add
decb
js
or
inc
dec
dec
or
add
rorb
sub
dec
je
mov
mull
pop
dec
xchg
push
pop
out
and
incb
mov
push
dec
mov
or
jbe
add
jmp
ja
pop
popf
fdivrl
pop
bound
dec
enter
push
stos
push
dec
je
sbb
aaa
idivb
inc
or
pop
popf
neg
dec
jle
fsubl
or
shll
inc
cmp
inc
xor
je
dec
out
inc
push
fidivrs
scas
inc
inc
or
fidivl
add
dec
lret
cmp
mov
pop
aas
insl
dec
push
or
pop
aam
sbb
or
cmp
push
insl
ja
cmp
mov
mov
fwait
test
xor
inc
aas
pop
inc
or
jno
add
imul
sub
aas
or
add
leave
mov
in
test
mov
inc
jmp
jnp
rcr
aam
xchg
scas
dec
sti
adc
push
call
jo
inc
add
inc
out
mov
jmp
pop
aas
ds
mov
addl
xor
or
mov
xor
orb
enter
rolb
insb
leave
or
jl
gs
std
jmp
std
jne
loop
cs
iret
mov
pushf
add
inc
add
push
call
push
jle
push
popa
xchg
insb
pop
add
in
inc
inc
mov
pop
xor
iret
or
xor
mov
out
mov
pop
jns
jne
push
loope
pop
out
jns
std
push
popa
xchg
insb
xor
push
into
xor
add
xor
mov
xor
push
mov
xor
dec
je
dec
pop
pop
testb
and
imul
xor
jne
icebp
add
add
mov
xor
sub
mov
add
and
sub
lea
fistpl
inc
roll
xor
imul
fidivl
jo
push
dec
repnz
push
or
inc
ret
fildl
add
ret
add
stos
daa
cmp
jl
cmp
inc
popf
cmp
ficomps
push
cmp
inc
xor
xor
or
mov
add
mov
inc
add
xchg
imul
jns
cmp
mov
xor
scas
cmp
inc
aaa
xchg
add
or
add
inc
mov
add
or
add
or
add
cmp
cmp
cltd
out
mov
es
aas
out
dec
cmp
loop
mov
add
cmp
jmp
xor
je
jp
xor
outsl
lret
add
cmp
pop
mov
test
jg
mov
cmp
dec
jmp
outsl
cmp
cmp
mov
test
mov
cmp
jne
imul
cmp
inc
enter
ret
add
add
cltd
out
daa
ret
adcw
add
mov
fiadds
dec
push
cmp
dec
push
push
mov
push
or
mov
out
ret
std
lcall
out
inc
std
call
testl
jmp
call
ret
std
call
cmpsl
mov
divl
std
decl
out
pop
std
ljmp
out
xor
popf
pop
divb
pop
xor
jae
add
ret
add
inc
add
loop
pop
pop
inc
push
ds
sti
ss
cli
jcxz
sar
jle
inc
jo
pop
lea
sub
test
fidivl
xor
add
out
fiaddl
add
mov
add
test
iret
adc
inc
mov
cmp
pop
push
pop
popl
jae
add
mov
mov
aaa
shl
jg
loopne
mov
jmp
jle
or
add
xor
xor
jmp
cld
inc
cmp
add
or
fnstenv
and
inc
outsb
cmp
pop
mov
jmp
or
arpl
add
mov
or
mov
fbstp
popa
push
movsl
lea
into
inc
mov
aaa
lea
icebp
or
mov
pushl
ss
pop
xor
addb
mov
std
jl
aas
ds
cs
ss
xor
mov
push
incb
add
push
call
pusha
test
imul
jae
test
dec
aaa
cmp
imulb
ss
sub
inc
test
aaa
pusha
test
mov
inc
jmp
jae
adc
and
add
lret
std
mov
cltd
adc
lret
std
push
pusha
pop
imul
mov
xlat
lret
test
call
mov
aad
cmc
lcall
fs
addr16
mov
negl
lret
std
jne
loop
xor
lret
xchg
lea
dec
push
movsbl
neg
std
jne
loop
xor
movl
jae
dec
incb
cmc
decl
outsl
pushl
lahf
mov
movsb
jnp
sahf
mov
add
decl
scas
inc
je
fcomp
das
jbe
mov
mov
negb
add
lods
out
add
mov
inc
inc
and
mov
xor
mov
and
push
push
mov
call
push
xchg
cs
push
aas
je
dec
adc
out
inc
aas
mov
jae
fdivrp
adc
xor
inc
incb
into
mov
cmpsb
inc
inc
sbb
inc
in
xchg
inc
cmpsl
xor
and
sbb
inc
mov
xor
adc
xor
push
pop
xor
inc
movsl
pop
xor
adc
incl
xor
dec
inc
xor
inc
mov
xor
inc
fisttpll
pop
xor
dec
pop
xor
aas
test
add
aas
lds
aas
divl
pop
adc
test
ds
jnp
out
mov
mov
sbb
xor
adc
xor
cltd
xor
mov
or
imul
jle
and
jbe
sub
mov
inc
cmp
pop
inc
imulb
push
xor
ds
jge
ds
xor
add
add
sub
test
incb
dec
sbb
push
xor
cs
out
jge
aaa
xor
aad
xor
into
imul
icebp
inc
repnz
decl
cmc
call
repz
mov
sti
std
pushl
repz
clc
rcrl
call
repz
mov
adc
or
push
mov
add
lret
pop
pusha
pop
jge
out
inc
repnz
mov
pop
pop
insl
cltd
push
pushl
and
cli
incl
jae
mov
insl
inc
or
add
xchg
mov
jge
std
jne
fdivrp
sub
repz
mov
xlat
add
mov
mov
cmp
cmp
push
mov
stos
add
xor
sar
xor
lcall
sub
in
cmp
cld
push
sub
jno
cmc
mov
fldt
lods
pop
sar
jl
inc
daa
sub
fucom
cmp
xor
sub
xor
mov
es
or
mov
push
mov
out
dec
cmp
clc
in
add
das
mov
movsb
test
add
inc
jne
lret
pop
std
rolb
xor
mov
movsl
mov
xor
or
rclb
inc
xchg
push
sarb
mov
daa
add
js
ret
fisttpl
mov
cmp
cmp
mov
cmp
add
dec
xor
or
and
lods
jno
orl
movsl
std
adc
xor
pop
icebp
mov
fidivrs
xor
pop
and
das
pop
sub
js
sbb
mov
shlb
enter
popf
inc
jmp
jbe
sahf
ds
jae
mov
imull
cmp
cld
lret
cmpl
jno
push
sub
and
mov
enter
jo
dec
push
jl
add
scas
dec
or
dec
je
inc
dec
xchg
jns
inc
jmp
or
incb
das
mov
cld
fwait
jo
add
hlt
jae
add
jae
lock
daa
out
repz
lock
jno
add
loop
sub
or
lods
xchg
cld
xor
push
call
call
dec
cli
push
pusha
xchg
pop
bound
jne
loop
push
out
repnz
mov
add
imul
jae
inc
push
pushl
pop
stos
lcall
das
ja
movsl
xchg
ret
call
aaa
scas
pop
or
aam
not
add
fimuls
add
in
ret
in
or
lahf
adc
incb
sub
inc
jo
aaa
je
cwtl
scas
mov
and
sub
cmp
add
cmp
dec
and
sub
mov
push
jmp
das
sub
jno
icebp
mov
repz
scas
pop
dec
or
das
sub
fwait
or
faddp
cmp
sub
lock
cmc
cmp
pushl
in
cmpsb
or
add
inc
stos
rdtsc
popa
daa
mov
rcl
fcoms
pop
xchg
inc
ret
mov
aam
scas
ds
or
add
add
sbb
cmp
sub
sarl
loopne
imull
cmp
push
push
js
sub
aaa
and
cmp
inc
xor
jb
sti
mov
lcall
ja
dec
mov
xlat
jmp
pop
or
mov
notl
cmp
out
sub
cltd
and
sub
mov
movb
inc
mov
scas
mov
add
pop
sub
fwait
pop
hlt
push
adc
imul
mov
hlt
and
sub
sub
xchg
mov
add
xor
je
insl
std
dec
add
push
mov
jne
cmp
mov
repnz
or
sub
into
repz
cld
mov
lea
push
push
call
jecxz
jb
jo
add
cmpsb
repz
cs
jne
fisubs
fdiv
or
call
repnz
add
repz
inc
clc
lods
cmp
arpl
add
bnd
pop
jns
call
arpl
jb
xor
inc
pop
dec
lcall
xor
and
repz
mov
jecxz
pushf
or
je
adc
decb
sbb
lret
lock
out
dec
gs
cs
or
cli
lret
push
push
into
in
or
adc
pop
push
imul
mov
xor
sahf
xchg
xchg
xor
and
adc
xor
inc
je
bound
add
inc
mov
add
or
add
or
add
cmp
aaa
sub
scas
sub
rclb
or
inc
add
test
ret
jae
or
xor
xchg
sbb
out
cmp
repz
test
sub
pop
mov
scas
sub
xor
xor
xor
out
lea
into
subb
sub
aaa
xchg
and
fidivl
or
stos
or
push
mov
pop
or
and
dec
add
xor
or
sub
or
lods
push
jmp
pop
verw
fsubs
push
jmp
scas
mov
mulb
daa
dec
out
pop
push
and
mov
xor
or
movsl
cmpsb
inc
sub
adc
scas
bound
negb
jae
decb
add
add
xchg
fbld
std
jne
fidivl
lock
mov
pop
fdivr
call
call
jmp
fidivl
inc
dec
adc
or
rclb
inc
mov
fwait
rcll
call
adc
jae
mov
movsl
inc
xchg
arpl
movzbl
push
out
mov
mov
add
cmp
push
or
mov
mov
xor
rorb
out
sti
dec
ss
add
sub
fidivl
fwait
add
test
add
fs
je
enter
idiv
mov
mov
test
call
push
movsl
xchg
incb
pop
xor
or
adc
pop
cwtl
xor
jge
dec
xor
mov
das
scas
fdivr
sbb
add
jmp
xor
add
jg
test
xor
add
xor
cld
gs
rorl
dec
in
or
dec
and
or
aas
lds
inc
sbb
pushf
jl
sbb
and
xchg
and
sti
push
ret
jmp
or
cwtl
xor
out
xor
xlat
and
add
or
xor
jmp
xor
and
and
jmp
xor
inc
and
stc
xor
add
inc
or
jmp
add
or
es
and
push
add
jmp
mov
mov
cmp
dec
pop
scas
das
repnz
aam
cmp
push
loop
je
inc
popf
or
or
inc
popf
pop
testb
out
adc
aam
or
push
xor
into
push
and
add
dec
jg
jno
or
std
incl
pop
add
test
sub
push
mov
cmp
lds
add
dec
pop
add
int
icebp
jmp
adc
out
mov
jb
mov
lea
enter
sbb
test
mov
std
lcall
pop
out
mov
or
std
push
xor
mov
in
sti
repz
pop
xor
sbb
inc
xor
sub
jmp
mov
jecxz
subl
dec
push
add
add
sub
out
fwait
sub
pop
stos
mov
push
jge
repnz
mov
sub
mov
and
sub
push
add
es
adc
jbe
or
mov
pop
xchg
push
xor
cmp
inc
or
stos
xor
dec
lret
xchg
jnp
call
mov
out
test
idivb
movsl
pop
mov
dec
lar
or
add
enter
and
mov
xor
push
and
dec
cli
sub
mov
push
sub
xor
lcall
adc
and
mov
xor
jmp
nop
aas
xchg
call
mov
fisubrl
pushf
loop
pop
lods
lods
leave
incl
enter
jne
movb
inc
jmp
jb
std
sbb
sub
popf
pop
pop
out
nop
pop
incb
add
and
mov
or
imul
adc
aad
test
fdivs
dec
inc
fsub
incb
sar
hlt
xchg
enter
xchg
pop
inc
or
push
push
pop
test
cltd
repz
std
aam
enter
in
jae
inc
and
addr16
pop
aas
add
sbb
jne
add
add
pusha
outsb
inc
cwtl
repnz
gs
std
jmp
add
pop
scas
repz
mov
repz
push
jge
pushl
out
dec
repnz
mov
imul
dec
or
add
repnz
push
inc
out
add
cmp
xor
push
mov
inc
add
pop
out
mov
sub
fistl
rol
dec
inc
mov
xor
mov
add
xor
mov
lods
jg
decb
xor
xor
movsb
inc
xor
add
xor
sub
and
add
mov
lcall
inc
ret
dec
pop
mov
mov
jmp
sub
cmpsb
push
mov
or
fwait
xor
jmp
sbb
in
sub
sbb
jmp
sub
push
mov
into
stos
sub
inc
lcall
les
sbb
jmp
mov
or
add
mov
js
call
add
mov
add
mov
sbb
sbb
or
jmp
dec
sbb
pushf
or
mov
test
call
xchg
sbb
xor
add
sbb
rolb
cmp
or
filds
mov
cmp
into
add
inc
inc
popf
xor
add
sbb
xchg
inc
jmp
jae
out
sub
push
hlt
ljmp
adc
loope
fwait
mov
sbb
add
ljmp
add
push
cwtl
lods
lcall
test
fwait
inc
lcall
aas
add
sub
call
mov
add
xchg
add
enter
fisttps
cmpl
adc
mov
pop
leave
fimull
add
add
pop
xor
inc
pop
out
jo
fwait
jecxz
leave
rcr
sub
rcr
data16
ja
decl
xor
cmp
notl
sbb
sub
add
xor
jp
add
outsb
cmpb
adc
ret
pop
dec
mov
divl
sub
out
mov
mov
mov
mov
jmp
xor
mov
add
addr16
ret
incb
jle
mov
add
addr16
add
je
mov
mov
mov
daa
sbb
in
and
es
nop
mov
sbb
pushf
clts
xchg
and
test
or
sbb
jmp
sbb
out
and
cmp
enter
adc
jmp
push
xchg
xchg
mov
adc
movsl
and
jo
jmp
cmp
mov
cli
add
pushl
add
cmp
sbb
rorl
cmc
cmpsb
jae
std
fdivrl
and
repnz
pop
imul
xor
je
cmp
sbb
push
pop
je
sub
push
push
pusha
add
xor
leave
sub
or
dec
mov
add
fdivr
lock
out
popf
or
adc
movsl
das
sbb
cmpsb
add
adc
jmp
dec
enter
leave
inc
pmulhuw
cmpsb
mov
lret
bound
adc
add
out
jg
std
or
loope
lcall
call
mov
or
mov
pop
add
testl
in
sub
dec
addr16
call
adc
or
add
das
addr16
call
ror
jae
xor
jae
fbstp
call
jg
push
call
mov
jge
jne
jecxz
sbb
jmp
shlb
cwtl
pop
pop
cli
data16
xor
addr16
decl
or
jge
and
sub
cwtl
add
and
pop
sbb
rorb
rolb
and
call
cmp
cwtl
add
dec
and
sbb
pop
xchg
adc
inc
jae
pop
add
and
xchg
or
cmp
mov
mov
sbb
push
stos
inc
mov
or
xchg
add
cmpsb
and
and
and
loope
test
add
jne
dec
add
pushf
lock
push
push
and
dec
loopne
jl
push
xchg
sub
mov
or
call
and
adc
jae
adc
add
or
mov
cmc
test
call
xor
enter
imul
xchg
aaa
aam
xchg
mov
xor
inc
push
or
jmp
push
popf
jmp
xchg
push
decb
mov
adc
jecxz
xor
add
jbe
call
pop
aam
mov
bnd
punpckhdq
adc
adc
cld
push
push
jg
push
sub
jbe
adc
repnz
sub
jl
adc
add
jmp
xor
jmp
pop
or
xchg
adc
add
jle
mov
mov
jl
push
addl
gs
jae
or
std
lcall
out
jl
std
mov
pop
mov
leave
lret
sahf
xlat
call
data16
orl
fiaddl
ret
call
mov
add
or
lea
test
out
imul
std
or
stc
andl
cld
call
push
je
inc
andb
cmpsb
jl
std
sahf
dec
sub
push
push
sub
bound
ljmp
push
outsb
jp
cmpsb
out
ljmp
xchg
mov
sub
add
fistps
sbb
sbb
in
push
lcall
mov
repz
jecxz
repz
jmp
out
sbb
std
out
add
xor
test
movsb
lods
pop
std
into
sbb
mov
adc
or
insl
sbb
push
push
xchg
les
add
add
adc
nop
mov
cmpsb
push
ja
adc
add
or
sub
or
add
dec
cmc
xchg
jmp
add
add
ds
sub
mov
pop
mov
adc
and
push
xor
push
cmp
es
idivl
jmp
push
fistpll
std
or
fwait
dec
lcall
loop
adc
cmp
push
add
stos
aas
adc
sbb
sub
sub
mov
scas
sbb
dec
je
push
std
sahf
dec
ret
addr16
pusha
mov
std
xchg
mov
das
adc
jbe
adc
out
call
ror
inc
cs
add
loop
ret
mov
cltd
push
cs
bound
es
add
jle
std
push
add
popf
add
in
pop
fmuls
mov
out
std
jmp
or
decl
in
std
call
outsl
mov
dec
in
out
push
std
cld
jnp
mov
iret
in
std
repnz
xor
ljmp
push
mov
fcmovnb
out
push
and
std
or
std
mov
add
add
aas
adc
incl
js
rclb
xchg
fimull
add
mov
decl
mov
xor
add
test
bndldx
test
sbb
sbb
add
xor
nop
sti
or
sub
and
nop
mov
int3
adc
and
add
sbb
inc
stos
xor
inc
xor
fildl
add
stos
xor
push
cmp
push
cmp
add
loopne
je
leave
adc
xor
mov
or
je
fists
add
or
xchg
into
and
xor
repnz
inc
std
test
fistps
in
pushl
or
sbb
inc
pop
or
jmp
adc
pop
in
add
subb
ds
inc
lods
push
lcall
xor
call
fsubs
xchg
jl
mov
add
nop
xor
test
out
enter
adc
xor
cld
inc
ficompl
add
xor
rclb
or
add
aas
dec
jae
xchg
or
xchg
imul
cmpsb
sbb
call
push
iret
scas
adc
push
lcall
cmp
adc
mov
mov
lea
addr16
into
incl
lods
int3
xor
jb
cmc
sub
call
faddl
es
adc
lcall
or
int
decl
or
inc
add
inc
hlt
fmuls
add
cmovl
add
or
lea
cld
dec
lea
addl
pop
add
pop
popf
aaa
dec
inc
mov
call
cmp
cmpl
jnp
decl
lea
test
dec
jl
mov
jne
call
rorl
jnp
adc
or
cld
and
inc
xor
cli
decb
ret
fbstp
mov
int
bound
xor
add
sti
test
cmp
adc
sub
popa
add
hlt
and
cmpl
add
mov
jmp
mov
pop
incl
sub
sub
loopne
mov
add
push
add
out
scas
dec
jmp
and
jno
pop
push
subb
jno
jmp
xchg
imul
add
das
inc
stos
in
pop
xchg
jno
inc
jne
or
sub
loopne
pop
mov
jge
jno
jmp
inc
aam
xchg
jno
add
jno
jmp
sbb
jmp
aam
xor
jmp
stos
xchg
inc
add
xchg
in
inc
cwtl
xor
ljmpw
add
or
fiadds
outsl
rolb
stc
and
rclw
pop
ret
add
add
xor
add
xor
mov
sub
mov
or
add
xchg
testl
cmc
or
sub
and
inc
xchg
test
in
sub
or
jmp
fwait
or
xchg
lahf
lcall
ret
mov
push
add
popf
decl
inc
fsubrs
add
xlat
enter
or
popl
push
jb
add
loope
aad
std
decl
or
add
fadds
lock
add
enter
or
lea
and
in
or
or
cltd
adc
jae
sbb
mov
inc
les
add
cwtl
xor
push
cmp
decl
sbb
std
or
aam
decb
pop
add
xor
vunpcklps
sub
push
in
pusha
inc
jo
add
xor
jl
icebp
lea
push
fisttpll
mov
repnz
jl
sub
repnz
and
pop
fisubs
adc
xchg
cld
push
mov
adc
jp
or
idivb
mov
adc
push
dec
cmp
add
and
sbb
xchg
add
jb
sahf
decl
lret
data16
adc
into
adc
jmp
pop
repz
ret
sub
out
jge
dec
sub
or
add
jno
add
or
ret
inc
cmpsl
jp
add
dec
xor
insl
add
lcall
or
inc
cmp
jp
add
leave
adc
adc
dec
out
xor
out
hlt
and
adc
jno
lret
icebp
or
cmp
add
inc
push
pop
adc
pop
aas
jmp
and
sub
add
ret
pop
pop
add
aas
jmp
inc
outsb
mov
cmc
add
add
pop
sbb
add
in
ss
pop
jmp
push
fs
test
or
inc
pop
mov
add
adc
out
dec
add
cmp
add
mov
adc
repz
pop
incb
lret
mov
aas
add
and
add
mov
dec
or
xor
or
jmp
jmp
xchg
sbb
and
add
inc
and
ja
sbb
and
daa
in
and
and
aaa
in
sub
and
aaa
in
xor
and
xchg
jmp
orl
inc
add
inc
mov
add
push
addl
xor
or
addl
mov
add
adc
addl
xor
or
addl
xor
push
fiadds
outsl
mov
add
dec
fiadds
ja
mov
call
addb
out
mov
add
or
addb
out
mov
add
adc
addb
in
mov
add
dec
pop
addb
out
add
sub
into
jmp
jbe
addl
mov
add
sub
sahf
jmp
inc
sub
xchg
jle
sub
sub
outsb
jmp
push
sub
push
jmp
sub
test
ds
out
adc
decb
sub
test
push
jmp
mov
add
cltd
ljmp
lods
dec
add
cltd
idivb
sub
dec
add
mov
jg
xor
dec
add
sub
dec
add
xor
dec
add
push
subb
add
mov
add
subb
mov
add
subb
dec
add
fnstenv
and
mov
add
fnstcw
and
mov
add
das
icebp
dec
sbb
std
and
vfrczss
std
and
pop
jmp
std
and
scas
jmp
std
and
vfrczss
or
inc
add
scas
jmp
std
and
lahf
call
std
and
outsl
call
std
and
outsl
call
std
and
psubsb
and
xor
and
cli
dec
arpl
repnz
sub
insl
stc
mov
repnz
jae
add
mov
xor
jl
jp
add
repnz
add
jae
pop
int3
stc
dec
pop
xor
add
xor
add
mov
repnz
repz
add
xchg
cli
dec
or
repnz
sub
repnz
mov
out
icebp
aas
add
cmc
add
xor
mov
cltd
or
add
or
pop
xor
out
xor
mov
jle
out
add
lret
jecxz
fs
add
jle
dec
inc
or
add
out
xchg
out
cld
adc
inc
xor
cld
add
or
mov
ror
xor
test
ret
inc
call
xchg
out
xor
jmp
insb
or
xor
cmp
out
repz
out
xor
out
icebp
mov
inc
xor
push
add
add
xor
jae
push
mov
in
xor
xchg
or
jmp
mov
std
icebp
xor
add
push
add
xor
mov
or
jmp
xor
test
xor
pop
stos
data16
jmp
mov
add
xor
std
sub
mov
xor
xchg
and
add
xchg
xchg
sbb
xor
rorb
outsb
mov
std
std
dec
mov
cli
add
fdivrs
int3
or
inc
jne
or
fmuls
xchg
push
jge
add
or
rclb
rorl
jmp
xor
adc
and
leave
sbb
lea
clc
dec
cwtl
in
addl
or
lea
jnp
add
lock
sbb
add
addb
adcl
xorl
adcl
repz
lea
stos
fiaddl
fcmovnbe
das
jl
xor
xor
add
repnz
stos
jno
add
bnd
dec
out
add
push
add
incl
repnz
jb
sbb
in
lods
add
sbb
imul
add
bnd
inc
out
add
stos
jo
add
or
adc
or
std
test
jmp
repz
pop
jecxz
mov
fdivrp
mov
dec
sti
jo
add
add
push
out
or
jp
sbb
add
nop
jo
xor
out
push
pop
lea
fisttpll
sbb
int3
mul
add
out
fisubl
jp
das
mov
shlb
jns
test
nop
push
nop
movsb
jnp
lea
xor
out
dec
jne
mov
shl
test
or
pop
subl
leave
es
ror
lahf
mov
in
mov
push
push
jb
ret
xchg
mov
or
arpl
sub
call
jbe
sub
jg
std
jmp
add
push
stos
dec
inc
insb
das
jne
push
sbb
jae
lret
adcl
xor
xchg
push
add
add
xchg
cs
std
add
push
add
mov
push
mov
dec
out
xchg
stc
std
call
add
pop
mov
add
pop
cmp
add
enter
xchg
in
mov
and
mov
add
cwtl
jl
adc
add
mov
add
stos
add
sbb
add
adcl
add
add
dec
lds
ljmp
push
cvtps2pi
add
push
insl
hlt
add
push
jae
xor
imul
loop
mov
mov
add
mov
loop
test
out
add
stos
ljmp
add
jl
add
out
incb
mov
xor
mov
xor
push
in
mov
inc
sti
pop
mov
out
pop
ja
pop
jle
incb
inc
cmpsb
out
add
adc
add
xchg
sti
movsl
adc
es
iret
incl
clc
cmpsl
jp
adc
add
subb
or
js
adc
add
xor
sub
or
xor
out
sbb
jp
adc
add
dec
jo
cmp
xlat
decl
or
jmp
adc
test
pop
xor
cmp
test
xlat
pop
xor
add
adc
xor
push
adc
adc
xor
mov
or
add
fnstenv
or
scas
adc
xor
xchg
or
scas
in
or
jo
sbb
xor
add
adc
or
pushf
dec
addb
stos
adc
xor
inc
push
or
adc
xor
mov
or
lcall
or
adc
add
pop
test
inc
shll
xchg
push
add
xchg
sbbb
or
shlb
or
jno
xchg
adcb
or
test
cwtl
test
mov
add
enter
fmull
add
imul
or
push
adc
adc
std
cmp
je
sti
add
adc
xchg
insb
or
repz
int
loopne
out
xorl
cmp
or
cld
xorb
add
arpl
add
add
add
adc
jb
and
call
xor
in
es
imul
stos
and
fcomp
sti
std
out
dec
sbb
cmpsl
pusha
pop
repz
add
out
sti
std
movb
ret
or
scas
mov
push
push
mov
out
add
fwait
adc
testl
sub
pop
ds
cmp
add
mov
and
mov
std
dec
hlt
scas
cmc
sub
mov
jg
daa
or
add
xor
pusha
mov
pop
push
ret
sub
push
in
or
mov
sbb
or
sub
push
pop
sub
sbb
add
andb
or
lea
pop
xor
jno
add
xor
jae
stos
mov
in
or
jmp
or
jo
sbb
xor
add
add
add
lahf
or
addl
call
sbb
xchg
and
xor
jg
mov
add
arpl
or
popa
sub
call
mov
xor
push
add
mov
sub
sub
addl
and
mov
sbb
rol
call
pop
push
push
ret
xchg
add
add
add
leave
out
addb
push
outsl
dec
fwait
jb
sbb
inc
cmp
jp
call
xchg
call
mov
fmulp
stc
jg
mov
xchg
inc
xlat
and
fcmovbe
add
scas
jge
incb
add
cwtl
test
add
jmp
int
loopne
sbb
loopne
mov
jmp
adc
xor
mov
icebp
push
add
xor
sbb
fmulp
repz
jmp
testb
scas
rolb
sbb
xor
add
loop
xchg
add
mov
loop
and
sbb
add
loop
jb
and
call
popa
or
xchg
cmpsb
lock
mov
xor
add
or
push
add
add
or
mov
or
test
sub
pop
jb
pop
gs
push
adc
add
or
or
lret
sbb
or
push
push
inc
ret
sbb
test
cld
mov
pop
repz
add
jbe
mov
addb
sbb
scas
add
lods
sbb
xor
add
push
lock
jl
addb
mov
add
xor
xchg
add
adc
xor
mov
and
sub
jb
loope
mov
js
ret
addb
nop
jmp
movsl
add
pop
jb
std
add
xor
mov
sub
or
add
or
push
enter
int3
or
test
push
mov
xchg
fistpll
and
jge
and
sub
or
ud2
cmpsb
add
pop
filds
lea
mov
xchg
aad
add
or
enter
mov
std
call
lds
repz
out
repz
add
add
jmp
aaa
rorb
add
add
xchg
add
imul
mov
jg
sub
iret
or
dec
fisttpl
add
loopne
add
jbe
add
loopne
mov
faddl
add
loopne
enter
add
loopne
divl
dec
add
fimuls
scas
ds
cmpsl
or
sbb
std
es
and
pop
add
xor
cmp
xchg
mov
in
pop
mov
add
add
or
mov
or
mov
or
scas
add
inc
or
andb
or
xchg
or
sarb
dec
lock
mov
in
mov
sub
adc
xor
icebp
pop
add
icebp
ret
icebp
push
add
cli
clc
test
bound
jmp
push
push
lret
daa
lahf
add
ret
test
add
or
fs
or
jmp
cmc
orl
dec
or
xor
add
and
aaa
popf
das
or
jmp
or
xchg
xor
fimuls
mov
push
lds
fidivrl
orb
loopne
push
adc
mov
call
or
jb
mov
pop
and
cli
into
or
jmp
mov
stos
mov
std
add
pop
and
sbb
into
push
fucomp
lahf
push
repnz
sub
pop
jmp
dec
pop
loopne
insb
xor
mov
shl
inc
fwait
sub
xchg
into
jbe
add
inc
and
xor
aaa
mov
incl
ret
call
mov
adc
pusha
pop
push
mov
repz
and
xchg
mov
test
adc
leave
xor
lret
les
jb
ja
and
jns
and
imul
pop
loope
cmp
leave
sbb
inc
push
cld
jbe
pop
cld
jmp
jbe
imul
sahf
jbe
mov
mov
xor
subb
je
pop
testb
or
in
add
cmc
sti
adc
adc
xlat
adc
push
xor
or
addb
out
add
leave
sbb
sbb
xchg
and
jno
daa
outsl
sub
cmp
add
mov
stos
jle
pop
dec
mov
mov
mov
push
jo
push
or
idiv
xchg
aas
out
notl
outsb
inc
out
cmpsb
or
xor
mov
jle
sbb
add
dec
out
jno
add
bound
add
popa
into
jg
xor
std
jmp
xor
or
cmp
dec
in
lret
mov
fs
push
pusha
and
shr
or
jmp
scas
out
jmp
sahf
and
in
or
mov
add
xor
subl
add
std
bound
enter
and
xor
xchg
or
jmp
dec
or
mov
data16
or
adc
add
sbb
mov
mov
mov
or
add
mov
add
enter
cmp
test
test
inc
cmp
add
adc
add
or
rcrb
mov
sbb
cs
mov
stc
add
dec
pop
dec
and
and
lahf
faddl
and
add
push
cld
push
dec
addb
lods
cld
or
xor
adc
mov
inc
xchg
sbb
sbb
ds
inc
and
pop
jg
xor
lahf
push
dec
lods
andl
mov
repnz
mov
sub
or
xor
and
lock
cmc
rcll
aaa
cmc
rcrl
jae
jb
ljmp
or
xor
out
cmc
sub
add
xchg
sub
and
adc
cmpb
ret
mov
add
xor
pop
cmp
jge
nop
scas
fdivrl
enter
or
add
or
add
gs
pop
out
xchg
or
add
or
add
lock
out
mov
dec
lret
push
test
repz
xor
ret
dec
ret
and
cmp
cmp
int
cmp
out
popa
xchg
dec
add
in
popl
mov
fs
jb
aaa
mov
and
inc
lds
inc
int
cmp
lock
sub
sub
jmp
cli
jb
mov
jmp
adc
stos
fdivr
ss
rorl
add
in
ret
roll
push
and
rorl
clc
dec
or
and
xor
jge
lret
inc
or
add
sti
jbe
ss
and
pop
xor
cmp
call
addl
xchg
aad
inc
hlt
inc
push
push
andl
cmp
pop
or
test
adc
fadds
add
cmp
jge
pop
mov
push
add
aaa
dec
mov
lds
push
je
xchg
xor
and
popf
push
mov
pop
imulb
jp
or
add
cmp
fstps
out
cmp
dec
and
push
cli
in
adc
add
lock
cmp
and
lock
mov
decl
inc
add
add
addr16
and
push
adcl
dec
xor
in
push
mov
xor
sub
nop
mov
adc
cmp
or
std
adc
push
stos
add
push
or
lock
jp
lea
jp
lock
ret
or
xor
bound
sbb
shl
loope
int3
test
add
loop
jb
sbb
mov
and
lahf
sbb
or
lods
push
lods
jb
add
mov
fistpl
mov
add
and
outsl
cmp
sub
inc
or
add
xchg
sbb
jo
xchg
mov
js
icebp
jne
lods
loopne
int3
mov
cmp
xlat
icebp
jge
pushf
fidivrs
inc
test
lea
push
add
mov
ljmp
mov
sbb
outsl
es
sti
sbb
enter
dec
and
adcl
sahf
mov
fnstcw
and
jns
and
sbb
push
jb
cmp
and
outsb
lds
push
jb
xchg
icebp
adc
popf
push
and
jg
add
lret
cmc
add
jmp
ljmp
into
mov
daa
sub
sbb
sti
jmp
mov
daa
enter
jmp
popa
mov
mov
popf
xchg
inc
xor
adc
or
add
lret
cmpl
xor
aaa
xchg
mov
hlt
pushl
sub
push
add
pop
into
call
adc
or
jae
and
lock
orb
add
pop
stc
orl
add
mov
add
xor
and
push
sub
add
sub
jb
stos
das
push
mov
ret
or
mov
add
dec
stos
cmpsb
jl
or
ljmp
imul
popa
notl
pushl
hlt
push
jg
fsubrs
and
fnstenv
mov
or
and
or
or
and
or
stc
popf
push
add
ss
jb
mov
fstl
jo,pn
pop
mov
add
and
add
push
jle
in
sti
jl
and
push
jecxz
bound
sub
sbb
xchg
and
dec
icebp
lods
cmc
adc
bound
push
and
xor
mov
lret
sbb
popf
fsubl
shll
and
push
jge
into
adcl
rorl
sub
and
sbb
sbb
inc
and
pop
andl
mov
sub
xor
add
xor
jl
mov
add
pop
jl
sbb
jnp
xor
push
or
dec
and
orb
lret
icebp
mov
outsb
and
adc
xor
cmp
into
sbbl
test
add
jmp
and
insl
sbb
into
call
lcall
bnd
fwait
loopne
sbbl
dec
dec
push
adc
sti
mov
sti
daa
push
mov
shl
das
icebp
aaa
ret
xchg
xchg
jmp
fldl
add
inc
cmp
insb
or
or
cmp
pop
pop
xchg
test
sub
mov
aam
jmp
call
out
js
lock
push
lods
dec
lock
lods
fdivr
mov
mov
out
or
and
push
inc
and
jge
mov
add
xchg
add
movsb
xchg
or
pop
int
pop
or
mov
dec
or
in
add
sub
cmp
jbe
or
or
jp
cmp
add
sbb
pop
cld
fstps
add
or
add
pop
ret
daa
and
mov
xor
bound
xor
insb
ljmp
push
cs
xor
or
test
adc
add
fs
push
sbb
xchg
pop
push
icebp
xchg
lock
shlb
adc
xor
xor
jb
dec
loope
in
jns
and
dec
loope
lods
fcompl
in
into
bound
std
inc
adc
inc
add
cmp
dec
add
push
addb
push
cmp
call
jb
sub
into
in
loope
js
cmp
adc
outsl
push
or
addl
hlt
xor
jmp
xor
fdivl
push
add
or
sahf
add
std
testb
jmp
stc
aas
fdivr
jmp
cld
cmp
fsub
lds
push
in
sti
inc
mov
insb
and
push
inc
and
dec
dec
mov
pop
cmp
in
sti
test
enter
inc
or
xchg
add
inc
and
jg
mov
mov
sub
imul
xchg
push
push
adc
in
call
sarl
inc
and
and
jne
mov
add
add
add
add
sti
add
and
add
cmp
xchg
xor
push
sbbl
loope
sbb
inc
pop
pop
arpl
std
push
arpl
cmp
fadds
mov
icebp
mov
mov
shr
cs
std
insb
arpl
incl
in
adc
stos
loop
add
call
stos
xchg
and
add
fcmovnb
jno
pop
jge
xor
add
xor
out
push
xlat
add
and
xor
int3
xchg
call
add
subb
or
mov
dec
pusha
xchg
sbb
mov
pop
xor
bound
stos
clc
call
repz
jae
pop
xor
hlt
cld
test
or
dec
or
pop
pushl
or
mov
subb
or
lea
and
cmp
jae
testl
pop
lock
andb
or
jmp
or
jo
clc
add
xor
add
or
cmpsl
xor
or
sbb
xor
decl
or
jmp
lods
dec
and
scas
leave
je
mov
jnp
in
or
mov
jb
std
add
xor
dec
add
xchg
mov
sarb
pop
push
adc
add
or
ret
push
add
sarb
pusha
or
ret
ret
dec
and
mov
addl
xchg
jl
cmp
add
xchg
enter
int3
sub
or
mov
inc
add
pop
xchg
push
xchg
sbb
add
enter
adc
inc
add
pop
push
push
std
inc
and
add
icebp
decl
les
pop
add
sbb
int3
int3
cmp
int3
int3
sbb
int3
int3
xor
rolb
xor
xor
out
or
testl
aas
xor
mov
add
roll
test
add
stc
jmp
iret
cs
ret
mov
int3
inc
mov
sbb
add
adc
pop
mov
test
dec
xor
out
mov
loope
movsb
in
rcr
std
cmpsb
loopne
movsb
lods
rcr
std
xchg
loopne
fnstcw
pop
addb
cmp
or
mov
dec
add
and
stos
orb
mov
xor
popf
xorl
adc
dec
cld
lret
mov
add
inc
movsl
pop
inc
sbb
sub
sbb
mov
adc
or
or
out
inc
dec
out
lods
xor
lods
shr
xchg
mov
fldl
lret
or
rorl
or
add
jmp
push
sar
stos
mov
sbb
bound
shll
std
je
clc
cld
fs
loopne
or
mov
das
xchg
outsb
lret
or
pop
mov
push
xor
push
push
mov
mov
pusha
lock
in
mov
or
jmp
cmp
test
test
add
ja
adc
sub
fimuls
lock
ret
adc
inc
or
cwtl
lret
jmp
xchg
out
test
adc
jl
pop
mov
or
arpl
adc
push
sbbb
cmp
out
push
mov
ret
xor
xchg
stc
inc
sbb
or
inc
mov
daa
or
pop
jbe
test
and
dec
and
orb
fadds
ret
int3
add
inc
enter
cmp
ret
xchg
pop
mov
mov
and
cli
insl
xchg
inc
add
idivl
jecxz
xchg
xor
cmp
jno
sbb
push
mov
lcall
sbb
in
jo
loopne
pop
mov
loopne
mov
or
test
mov
mov
mov
lock
xchg
and
mov
or
in
add
mov
cmpb
jae
pusha
icebp
std
jl
das
lock
vpaddw
mov
iret
mov
subb
xor
lock
loope
scas
add
icebp
std
cmp
xchg
out
push
sub
cmp
cs
lret
out
add
andb
and
icebp
outsb
add
sub
or
pop
add
sub
flds
outsl
add
xorb
sub
sub
f2xm1
outsb
add
addl
popa
add
loopne
jno
push
mov
stos
mov
or
inc
xchg
push
cld
push
lahf
inc
addb
cmp
jb
orb
inc
add
lahf
jmp
or
cld
or
and
out
mov
sbb
cs
stos
fidivrl
clc
into
add
and
clc
in
into
test
or
xchg
mov
cmp
xor
inc
scas
xchg
jecxz
into
add
sub
stos
mov
lcall
out
cmp
testb
test
add
mov
sub
jecxz
fwait
stos
stos
jns
sub
mov
enter
jmp
stc
movl
jmp
jmp
xchg
mov
sti
xchg
lret
adc
sbb
aas
xchg
cld
mov
sbb
add
dec
jmp
add
xchg
mov
in
loope
add
adc
fnsave
out
jle
xor
nop
jmp
mov
mov
std
xchg
testl
add
mov
mov
jo
jle
int
add
out
les
mov
fadds
xor
or
mov
popa
xor
add
cmpsb
movsb
dec
aas
xor
fcom
mov
test
xor
add
jo
mov
jecxz
pop
adcb
loop
jecxz
xor
push
out
cmp
jo
mov
in
push
int
add
pop
rcr
out
je
push
out
iret
loope
add
or
mov
test
scas
push
sti
mov
test
add
stos
push
push
jle
xchg
cmc
dec
sub
push
mov
std
ja
add
mov
jns
xor
cli
jle
out
add
add
xchg
les
je
xchg
int3
add
xor
mov
out
or
sbb
push
mov
clc
jmp
addr16
xchg
insl
call
out
pusha
insl
add
jo
sbb
jo
dec
loope
cwtl
sahf
stos
fmuls
mov
fisubs
lret
pop
sti
mov
clc
jo
dec
loope
xor
nop
fadds
add
lods
or
lret
shl
sub
jecxz
sbb
xor
addl
lcall
rolb
jge
daa
fiadds
add
addb
dec
xchg
enter
sub
jecxz
or
xchg
lret
filds
roll
add
pop
or
shll
dec
push
add
add
mov
xor
int
mov
jb
mov
xor
fs
aam
mov
aas
xor
or
out
add
out
das
call
pop
testb
int3
stc
mov
mov
xor
sub
or
sub
push
cltd
insb
aad
xchg
cmp
inc
jns
jmp
shrl
jge
add
aad
dec
mov
inc
cmp
rcll
jne
push
sbb
aad
push
or
add
pop
pusha
jmp
addr16
and
test
rcll
fld
mov
fcoml
cld
popa
mov
iret
incl
dec
out
jb
pop
fadd
lds
add
dec
repz
xor
rorb
movsb
shll
mov
out
repnz
leave
int3
xchg
inc
xor
iret
cmp
jb
xor
dec
add
movsl
lock
clc
cmp
dec
cld
jecxz
inc
push
je
mov
std
pop
mov
clc
sbb
std
test
cmpsb
add
inc
cltd
add
pop
and
push
pusha
cltd
inc
in
pop
xor
pop
mov
mov
push
mov
or
or
add
std
es
cmp
jmp
mov
or
lods
fadd
test
or
add
cld
test
add
fisubrl
test
incl
test
sti
call
jl
fimull
mov
push
xchg
jl
scas
fimull
mov
pop
clc
mov
dec
jg
nop
push
add
movb
imul
sti
xorl
cmpb
pop
mov
decl
or
cmp
das
ficoml
xor
das
pop
test
sub
xchg
loopne
xor
jnp
cmp
push
or
xor
shlb
call
pop
mov
les
call
and
inc
add
xchg
icebp
jnp
jb
js
inc
sar
cmpsb
mov
jmp
lods
in
std
mov
mov
add
xchg
rolb
outsb
add
mov
notb
mov
ret
ficomps
cs
add
push
inc
inc
in
pop
or
pop
iret
into
or
adc
int
hlt
or
xor
subl
xor
stos
mov
int3
ret
mov
out
add
jge
fs
aaa
mov
mov
sub
push
jo
mov
or
fisubrl
xchg
mov
mov
lds
adc
jle
push
subl
data16
std
xchg
outsb
cmp
testb
adc
and
call
xorl
mul
call
mov
inc
pop
call
add
ret
pop
mov
fstpt
sub
or
mov
push
or
stos
incb
in
or
stos
dec
jae
sub
mov
in
movl
loopne
pop
add
or
push
jecxz
and
mov
sarl
fadds
je
dec
jns,pt
add
popa
cmp
inc
popf
inc
add
fistl
jg
or
les
add
add
cmp
lods
push
push
push
lock
mov
cmc
dec
call
push
dec
lock
and
movsl
clc
jmp
inc
inc
call
lret
in
clc
out
push
add
lret
data16
lock
inc
popa
mov
lret
xchg
inc
add
lret
cmp
xchg
pop
and
sub
xchg
pop
or
je
mov
inc
jmp
jle
push
movsb
in
push
lret
sbb
je
mov
inc
leave
add
sbb
add
js
add
or
mov
or
repnz
inc
test
aam
xor
inc
lret
pop
mov
out
repnz
push
int3
leave
inc
pushf
inc
xor
and
and
xchg
jle
rcll
mov
inc
xlat
xor
aaa
iret
lret
hlt
mov
faddl
mov
lods
or
cmp
cmp
rorb
out
pop
push
bound
cmp
addr16
add
jne
outsb
jp
add
cmp
jmp
push
shll
lds
xor
cli
shr
lods
lds
std
es
add
pop
push
xchg
mov
je
cli
mov
mov
std
notb
sti
mov
std
fidivrs
jl
jmp
or
inc
data16
or
popa
xor
dec
andl
pusha
push
call
decl
imul
ret
or
sbb
add
inc
addl
pop
repz
pop
rcl
pop
ret
push
mov
xor
ds
or
lock
mov
shl
add
test
inc
jg
add
push
cmp
lods
cli
sub
mov
push
xor
pusha
or
mov
jbe
inc
add
inc
jg
xor
js
add
clc
lcall
mov
add
mov
add
mov
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
out
xor
out
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
std
cmp
mov
jne
mov
cmpsl
clc
int3
adc
push
push
jmp
pop
pop
pop
sub
pop
pop
add
dec
popa
pop
xor
psubw
inc
add
xor
xor
sub
leave
sbb
imull
fnstenv
dec
insl
add
and
pop
push
inc
cli
adc
sub
hlt
sub
or
gs
and
in
and
or
or
les
and
out
imul
jmp
cmp
inc
xor
jbe
and
xchg
sub
fs
cs
pop
cs
jmp
enter
enter
fadds
add
enter
enter
cwtl
add
add
mov
add
cwtl
add
add
mov
add
lds
sub
push
insb
push
in
xor
mov
push
inc
mov
gs
dec
dec
mov
or
add
or
add
sbb
add
or
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
mov
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
out
xor
out
xor
out
xor
out
xor
out
xor
out
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
adc
rorl
mov
or
jns
push
bound
aas
cmp
xor
cmp
xor
leave
cld
xor
xor
xor
mov
or
out
fidivl
and
pushl
cmp
insb
push
dec
sub
mov
push
cmp
inc
cmp
and
push
and
mov
adc
sub
xor
cmp
xor
and
cs
jle
sub
mov
mov
std
jb
in
arpl
or
xor
inc
mov
add
jno
sbb
pushl
sti
outsb
push
std
jmp
je
jmp
clc
outsl
jne
loopne
add
jmp
loopne
jae
std
fs
loopne
add
cli
push
add
imul
addr16
ljmp
jo
pop
or
xor
addr16
test
jne
lcall
outsl
xor
sub
jno
mov
jno
jg
arpl
inc
imul
imul
pop
push
testb
dec
inc
and
outsb
cmp
incb
push
cvttps2pi
adc
cmp
mov
xor
adc
add
add
shlb
ror
xor
and
hlt
das
and
add
fsubrl
insb
aam
sub
lds
outsb
xor
and
or
cs
aaa
out
mov
or
xor
xchg
jge
subl
out
add
cld
out
bound
cmp
inc
or
aas
cs
cmp
sub
add
and
das
push
cmp
and
sub
xor
or
sub
or
adc
or
mov
xor
cli
pop
repz
or
xlat
and
sub
ss
into
and
das
rorb
iret
and
and
enter
enter
mov
bound
add
pop
or
inc
cmp
mov
pop
mov
ss
stc
xor
xor
sub
je
add
gs
sbb
add
push
pop
pop
and
and
sub
sub
and
add
cmp
dec
push
insl
pushl
sub
es
sub
call
fs
sbb
sub
cli
pop
outsb
outsl
push
push
gs
loopne
jae
in
add
in
outsb
insl
mov
pusha
add
loopne
jae
divb
mov
jmp
imulb
fdivr
arpl
or
pusha
add
loopne
jb
icebp
pushl
enter
imul
jbe
stc
imul
ljmp
loop
gs
loop
xor
cwtl
jecxz
arpl
stc
pusha
add
mov
imul
sub
fadds
les
hlt
call
outsb
xor
jae
add
addl
add
cltd
sub
test
pop
mov
and
adc
push
dec
cmp
push
add
push
pop
and
mov
and
xor
sub
adc
add
pushl
arpl
std
xor
adc
sub
sbb
adc
sub
or
mov
insl
out
out
loop
shll
jecxz
xlat
negb
aam
xor
enter
int
rcrb
sub
and
xchg
es
or
xor
jl
nop
and
cmp
sub
mov
mov
jnp
pop
cli
out
pop
and
dec
or
dec
and
xor
das
popw
xor
or
dec
cmp
xor
or
cmp
and
sbb
adc
xor
cli
sbb
push
lret
push
sub
arpl
xor
add
lret
jno
adc
insl
lds
xor
insb
mov
popa
sub
data16
push
dec
outsb
mov
xchg
push
and
xor
lea
test
jbe
push
xor
insb
inc
or
xor
std
xor
cli
mov
dec
jb
pop
sub
push
sub
push
sub
push
pop
pop
outsb
add
ljmp
add
jecxz
je
or
insb
dec
mov
xor
pop
add
arpl
insl
add
insl
imul
repz
cli
pop
jae
cli
das
jb
or
mov
outsb
or
outsl
popa
jp
je
mov
add
outsb
enter
ja
pusha
add
fs
jmp
outsl
gs
mulb
add
push
je
std
sub
and
outsb
push
mov
pop
ja
mov
insl
fidivrl
xor
lret
aam
sub
aad
imul
mov
xor
test
add
xchg
add
xchg
sbb
outsb
jge
xor
push
sub
push
add
ss
dec
xor
dec
daa
popa
pop
cmp
das
arpl
and
dec
and
or
xor
xor
das
cs
xor
mov
xor
aaa
out
rcrb
add
into
aaa
out
iret
and
sub
or
xor
sarl
push
or
xor
mov
sbb
and
and
aaa
xchg
xchg
push
addb
sbb
out
mov
mov
pop
or
xchg
pop
pop
xor
pop
and
xor
dec
daa
inc
es
add
and
xor
pop
cmp
sbb
adc
cmp
dec
jbe
inc
and
adc
push
jbe
sub
and
insl
filds
das
or
pop
aaa
popa
shll
and
pop
sbb
sbb
jmp
dec
sbb
dec
sbb
mov
push
mov
sbb
xchg
push
xor
xor
or
insb
dec
and
das
sbb
fldt
sbb
dec
push
sub
imul
popa
enter
cld
jecxz
xor
daa
jmp
jae
add
loope
xor
jecxz
add
in
push
test
pop
outsb
jge
imul
out
outsl
jp
jmp
out
outsl
outsb
or
jae
loopne
jns
loope
js
call
pop
jae
jecxz
imul
call
pop
bound
jb
insb
mov
xor
out
popa
xor
sub
push
xor
dec
aas
pop
add
push
jb
mov
xor
mov
lock
add
push
push
scas
and
aad
cmp
add
leave
and
repz
psllw
into
shlb
ret
jb
and
cwtl
int
insb
xchg
mov
addr16
jle
outsb
xor
and
andb
insb
add
xchg
cmp
arpl
dec
and
pop
sub
cmp
inc
sbb
inc
and
xor
sub
sbb
and
push
sub
sub
add
add
fstpt
sti
pop
add
sbb
xor
xor
xor
pop
faddl
fstps
xor
notl
out
add
imul
div
lock
clc
xchg
and
and
sbb
sbb
xchg
add
xor
and
add
dec
jb
adc
cs
or
cs
add
bound
pusha
loope
cmp
mull
push
or
popa
sbb
push
mov
arpl
push
ss
addr16
dec
mull
xchg
dec
push
adc
fcoml
or
add
push
push
dec
sub
add
insl
lret
push
sub
mov
dec
aaa
xor
adc
js
xor
push
xchg
imul
lods
push
dec
dec
movsb
add
mov
imul
mov
cmp
out
xor
push
inc
xor
popf
std
fmuls
add
fmuls
inc
add
or
add
push
push
push
add
inc
pop
pop
add
jb
fisubrs
and
push
imul
aas
jne
fsubl
fs
popa
jb
add
outsb
imul
add
add
imul
imul
fisubrs
test
lock
mov
add
mov
add
mov
bound
add
xchg
xor
pop
add
and
loop
insl
inc
push
and
xor
outsb
adc
cmc
xor
and
push
push
out
adc
aas
adc
sbb
repz
cmpsl
sbb
jno
push
and
scas
push
jb
adc
jno
pop
and
jno
enter
lret
add
aam
pop
mov
sbb
je
or
test
xchg
pop
lods
xor
xchg
sbb
movsb
and
out
dec
xor
dec
and
cmp
dec
push
push
daa
dec
cmp
inc
sub
xor
dec
sub
sub
sbb
cld
daa
add
xor
or
cvtps2pi
and
sbb
add
add
or
xor
shlb
lods
es
es
xor
xor
es
cmp
daa
xor
mov
pop
xor
push
sbb
jb
push
dec
jb
dec
or
sbb
je
nopl
pop
pop
dec
test
or
sbb
je
adc
push
arpl
dec
jb
gs
jb
dec
push
arpl
sub
sbb
pop
sbb
push
dec
insl
sub
xor
arpl
movhps
cmp
or
dec
fsts
xor
adc
arpl
add
xor
add
add
ljmp
dec
xlat
icebp
bound
dec
outsb
push
stos
jmp
add
jmp
push
ja
popa
outsb
mov
add
mov
insl
add
xlat
jae
popa
icebp
push
outsl
sti
loopne
imul
cld
dec
add
push
cmp
or
jo
dec
xlat
fs
jmp
pop
insb
insl
icebp
cmp
sbb
imul
lock
push
push
jbe
je
bound
mov
sub
movsl
lahf
out
sub
jb
sub
popf
jge
jo
jnp
arpl
xchg
add
jle
dec
add
sbb
pop
xor
insl
arpl
xor
aaa
imul
je
dec
sbb
in
jno
push
push
je
fisubs
add
dec
xor
sbb
or
aaa
insl
add
xor
xor
popf
sub
popf
xor
pop
lds
int3
push
ret
das
aad
lds
mov
and
xchg
sub
scas
sub
xor
and
xor
aaa
pop
sbb
xor
lcall
es
cmp
dec
xor
inc
and
out
xor
out
xor
out
xor
out
xor
out
xor
out
xor
out
xor
out
xor
out
xor
out
xor
out
add
or
jmp
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
arpl
fidivl
pop
or
inc
dec
imul
sbb
push
adc
add
xor
icebp
xor
or
and
repnz
add
add
dec
add
add
add
dec
add
mov
mov
dec
add
fmull
test
add
or
add
sbb
addb
stos
inc
outsl
stos
xlat
push
add
or
adc
add
mov
outsl
inc
add
or
cmpb
popa
insb
movsl
jo,pt
dec
pop
je
add
decl
or
popa
cmp
pusha
add
roll
add
repz
clc
push
jno
mov
add
call
xor
mov
add
jge
and
es
lds
je
mov
add
xor
incl
push
mov
insl
mov
xor
xchg
sub
add
gs
popa
mov
je
inc
pop
jno
mov
add
repz
aaa
sbb
cmc
dec
and
je
mov
add
or
jle
out
add
add
fucomip
daa
and
das
adc
and
das
std
and
xor
out
add
or
ss
out
xchg
rcrb
sbb
xor
sub
out
xor
out
popa
es
ss
sub
and
mov
push
pop
jle
push
and
xor
inc
adc
dec
lock
cmp
pop
cmp
add
add
sub
arpl
jmp
sbb
fs
sbb
or
sbb
sub
das
and
fucomp
cs
out
and
cmp
aas
sbb
gs
enter
mov
daa
es
sub
cmp
and
test
sub
lcall
arpl
sbb
jb
add
inc
adc
add
add
jb
push
adc
addr16
jb
dec
add
sti
call
inc
pop
arpl
in
outsl
push
dec
add
fs
bound
xor
push
sub
cli
dec
jb
xlat
fs
insl
call
inc
outsb
sti
aam
popa
or
dec
jne
jmp
push
jne
hlt
sti
bound
ss
inc
fwait
aad
cmpsb
ss
mov
jno
add
jb
pop
ljmp
mov
loope
push
sub
push
push
xor
repz
push
fildll
cmp
xor
cmp
and
loopne
cmp
sub
inc
popa
rorb
je
in
popa
into
or
outsb
into
vpcmpgtd
or
je
xchg
sub
adc
call
or
adc
sub
adc
mov
xor
cmp
outsb
lea
je
mov
cmp
adc
or
adc
sub
arpl
shlb
inc
or
push
sub
sbb
push
pop
adc
cmp
adc
dec
stc
cmp
push
std
and
and
and
sub
xor
or
push
add
and
fmuls
and
mov
push
rclb
lds
push
lock
flds
fcoml
sbb
add
jnp
mov
repz
mov
cs
jmp
loope
sub
stos
push
inc
sbb
jmp
sar
xor
sub
dec
outsb
adc
jmp
or
push
sbb
fs
stc
jg
dec
ds
sbb
or
repz
sbb
in
hlt
pop
xlat
pusha
or
sbb
daa
popa
push
xor
dec
clc
lds
je
push
and
sti
shrb
sbb
daa
outsb
int3
push
sbb
pop
mov
es
out
push
lcall
outsb
add
dec
mov
lods
ljmp
imul
jo
fsubs
divl
and
test
xor
lods
push
imul
lods
cmp
pop
or
outsb
mov
daa
add
inc
inc
inc
pop
loopne
xor
cltd
push
sub
sub
mov
xor
mov
and
or
xor
cli
inc
and
fiaddl
xor
inc
and
xor
push
je
subl
imul
insl
xor
daa
jb
dec
xor
arpl
sub
dec
jno
sbb
inc
lock
jno
repz
mulb
jb
rorl
jecxz
xor
sub
jmp
push
loope
dec
insl
ret
add
xchg
daa
je
mov
outsb
and
arpl
movsb
iret
sub
mov
je
insl
adcb
push
daa
je
or
and
jmp
xchg
arpl
nop
xor
lods
aaa
popa
xor
pop
add
es
sbb
pop
sub
dec
dec
push
cmc
cmp
adc
inc
sub
pop
cmp
add
and
idivl
dec
aam
sbb
es
sub
dec
or
add
add
daa
shll
xchg
inc
rclb
popf
and
sbb
dec
mov
imul
sub
add
and
pop
cmpsl
dec
pop
and
pop
pop
mov
outsb
sub
xchg
add
dec
nop
pop
sbb
inc
xchg
add
pop
dec
or
add
jne
inc
sub
je
push
and
aas
sbb
xor
or
dec
ss
popw
or
pop
es
push
xor
add
je
add
inc
fldl
outsb
rolb
cmp
ds
pop
add
ljmp
in
std
pop
push
icebp
fldenv
iret
cld
pop
inc
mov
push
pusha
jb
fsubrl
dec
icebp
pop
jb
roll
mov
imul
push
outsl
or
imul
fisubrl
jmp
or
dec
dec
jb
cmp
add
loopne
cmp
pop
and
outsb
ja
icebp
pop
push
push
rorl
adc
outsb
jbe
insl
imul
push
push
testl
push
xor
insb
dec
push
xor
push
insb
push
push
xor
dec
mov
insl
arpl
push
push
mov
pop
outsb
adc
bound
xor
jo
inc
pop
jb
adc
and
dec
insl
adc
inc
dec
repnz
xor
sub
std
fisubl
jb
cld
inc
insb
push
and
inc
push
in
roll
in
inc
push
add
rcrl
add
lea
data16
mov
addr16
or
insb
aad
inc
push
sahf
or
das
xchg
sub
add
sub
sub
shrl
xchg
sub
xor
xchg
dec
push
inc
mov
push
dec
mov
dec
dec
and
aas
inc
mov
pop
and
lcall
sub
inc
sbb
sub
dec
xor
sbb
pop
xlat
add
cmp
das
pop
sub
adc
and
inc
std
and
xor
daa
sbb
and
sub
dec
or
shll
add
js
inc
fdivrl
sub
mov
jmp
imul
inc
inc
popf
push
push
insb
lret
push
sbb
lcall
arpl
outsl
sbb
push
stos
insl
cmp
jae
je
insb
xor
lock
jnp
daa
arpl
sub
push
sbb
insl
inc
popa
sub
xor
sub
inc
dec
aas
sbb
sub
xor
sub
cmp
and
bound
and
inc
sub
clc
jae
push
rorl
sbb
push
cmp
insb
outsl
cli
ljmp
fmull
je
inc
push
push
cmp
gs
or
mov
pusha
inc
pop
lret
fisubrs
push
scas
in
ja
stc
pusha
pop
xchg
fistps
inc
pop
push
pushf
mov
jae
stc
cli
pusha
pop
push
fstps
inc
pop
push
cwtl
fsubrs
inc
negb
dec
inc
insb
jmp
aad
xor
inc
outsb
jae
in
imul
inc
shl
sub
lea
add
add
push
add
push
and
inc
pop
popf
roll
les
jb
xor
lds
cs
rcll
push
jnp
arpl
add
adc
sbb
dec
adcl
pop
add
or
daa
pop
and
inc
pop
add
iret
ljmp
insb
or
dec
adc
inc
sub
into
or
movups
xor
std
xadd
stc
adc
sbb
jmp
lea
add
xchg
adc
daa
lea
or
ss
daa
rcll
sbb
aaa
ja
lret
and
ret
daa
mov
lcall
and
inc
dec
sbb
jnp
adc
sub
pop
jae
outsb
pop
jp
push
sbb
pop
add
jmp
xor
and
or
and
or
xor
and
inc
sbb
jb
daa
sub
adc
and
ljmp
jb
adc
xor
sbb
sub
push
pop
cs
pop
sub
push
pop
cs
inc
sub
push
pop
cs
sbb
je
and
xchg
xor
arpl
mov
outsb
sub
jge
cmp
and
jb
cli
sbb
pop
pop
inc
jmp
arpl
aaa
jno
pop
or
cmc
jae
sbb
jno
std
repnz
push
stc
cmc
outsb
add
outsb
je
aad
jb
in
jno
or
jno
dec
inc
pop
jae
test
gs
pusha
jb
xlat
pop
je
or
sti
pop
push
add
cmc
jne
ljmp
inc
pushf
xlat
pop
dec
stc
stc
fs
sti
push
enter
call
out
lods
cmc
jmp
clc
imul
sub
pop
imul
jb
loope
and
iret
es
xor
jb
mov
add
rcl
adc
add
and
push
arpl
fbstp
inc
in
aaa
inc
add
xor
cli
and
ja
xor
sub
dec
sub
mov
jb
push
inc
jae
dec
push
je
dec
sub
add
insl
push
dec
adc
lds
arpl
adc
jp
inc
pop
push
loope
dec
jns
outsb
cmp
addb
push
orb
cmc
inc
aaa
ds
xor
sbb
jmp
inc
in
xor
cmp
sbb
sub
add
add
and
inc
adc
int
sti
xor
sbb
push
push
ss
push
popf
adc
adc
sbb
es
popa
jmp
int
lea
mov
dec
sbb
sbb
push
sub
mov
insl
sub
add
jp
push
sbb
xchg
test
cmp
push
sbb
or
and
cmp
sub
sbb
pop
cmp
push
cmp
pop
addr16
adc
add
add
je
inc
add
or
push
in
jno
dec
aaa
fs
fcoml
push
jmp
add
testb
or
cmp
je
inc
in
pop
mov
sti
popa
xchg
jo
xor
insb
insb
sub
imul
pop
jb
inc
dec
outsl
in
pop
inc
push
inc
push
push
mov
jno
in
outsb
je
sub
push
stc
xor
sbb
and
xor
push
sti
sub
jb
dec
cmp
add
inc
inc
inc
push
cmp
fistps
je
ljmp
outsl
jae
sub
or
outsl
gs
int
insl
cmc
or
fwait
pop
cmp
push
mov
imul
addr16
jb
insl
inc
push
add
add
add
pop
pcmpeqb
inc
packsswb
fsubs
imul
pop
add
or
add
inc
adc
inc
pop
add
int3
add
pop
adc
and
data16
aas
jae
push
xor
jl
pop
mov
jl
jb
push
or
cbtw
dec
push
jno
ret
and
jge
and
movsb
cmp
and
xchg
inc
dec
orl
cmp
dec
std
mov
xor
jge
cmp
sti
out
adc
jp
add
out
add
fldcw
add
sti
inc
sub
cmc
inc
pop
inc
add
in
cmp
sub
loope
cmp
ss
adc
out
or
neg
ss
add
pop
pushf
sti
add
test
sbb
int3
out
adc
in
and
ljmp
pop
test
xchg
incl
pop
cmp
insb
cli
jae
add
divl
push
gs
sbb
jno
push
iret
push
cltd
xchg
lret
inc
hlt
jno
inc
in
jnp
out
push
pop
clc
cmp
pop
push
sti
arpl
inc
out
cmp
jno
sub
outsl
dec
xor
or
out
insl
jmp
xor
out
pop
adc
sub
in
jae
adc
push
xor
inc
fildl
and
cmp
call
xor
popa
test
imul
aas
outsl
xchg
xor
hlt
cmp
stos
and
pop
push
lods
sbb
sub
lret
daa
data16
sub
pop
outsb
pop
adc
inc
ds
arpl
sbb
inc
or
cmp
pop
je
or
insb
sbb
pop
inc
lock
pop
sub
je
add
addr16
xor
pop
inc
dec
cmp
add
sbb
popa
adc
insb
add
sub
xor
add
jb
push
push
arpl
mov
and
jb
je
ret
cmp
cmpsb
sbb
lea
jb
fwait
bound
mov
insb
sbb
sbb
jb
inc
or
cmp
pop
int
add
fcoms
imul
adc
jmp
adc
arpl
or
imul
xor
jg
insl
mov
jle
add
or
adc
sub
aam
lret
adc
lock
pusha
or
and
sbb
mov
es
xor
ja
and
jne
and
enter
leave
add
out
adc
push
pop
fdivp
dec
xor
add
cmp
fprem
inc
push
in
idivb
push
shl
cs
out
shl
sbb
ret
or
xchg
divl
jle
stc
aas
hlt
jno
xor
clc
je
and
ljmp
hlt
jno
add
fsubrs
cld
pop
mov
or
push
xchg
or
je
and
pop
stos
push
loop
lcall
inc
xchg
bound
mov
imulb
and
inc
pop
sbb
out
jmp
inc
out
aaa
or
jmp
or
jo
mull
pop
lret
jae
add
hlt
jno
xor
leave
fs
xor
push
add
push
push
fnstcw
inc
pop
into
lret
inc
and
es
mov
imul
pop
inc
jmp
imul
outsl
add
and
push
push
gs
sbb
mov
imul
pop
jb
cmp
mulb
pop
cs
sbb
push
inc
push
inc
cld
and
and
dec
imul
dec
sbb
insb
insb
sub
data16
and
pop
mov
push
add
jbe
das
insl
jle
pop
addl
popa
test
ja
cmpsl
adc
jb
push
pop
push
packsswb
es
dec
sbb
andb
inc
jb
push
dec
xchg
packsswb
es
mov
and
sub
add
mov
daa
push
adc
pop
addr16
iret
push
loop,pn
pop
addr16
add
and
int
arpl
xor
sbb
add
sbb
popf
lock
xor
sub
jo
mul
popa
out
add
jl
fsubs
xor
ret
and
hlt
mov
fstl
les
pusha
lock
and
cmp
in
fisttpll
jg
or
xchg
adc
stos
es
lods
aaa
loope
lcall
ret
cmp
adc
push
xor
sti
inc
add
out
cmp
in
dec
xor
hlt
incl
lds
or
sbb
hlt
insb
sbb
dec
aas
cmc
dec
or
ljmp
push
repnz
jmp
add
ljmp
dec
sti
jbe
and
jno
sbb
push
adc
ljmp
ss
pusha
xchg
or
adc
je
inc
ljmp
cmp
push
jnp
lock
or
pop
repz
outsl
unpcklps
jmpw
push
inc
inc
ljmp
dec
and
jno
daa
add
push
outsl
push
add
pop
add
insb
add
popa
jb
imul
cmp
je
fimull
je
stos
pop
data16
and
imul
and
sbb
cmp
popa
arpl
daa
gs
and
gs
sub
and
mov
adc
push
in
adc
fidivrl
jne
add
int
inc
std
inc
in
out
xor
push
out
add
in
inc
dec
divl
outsl
ret
or
loope
pop
cbtw
push
sbb
cld
cs
push
call
cltd
jle
jo
mov
or
sub
dec
or
decl
push
jb
jb
pop
pop
dec
xlat
arpl
add
xchg
pop
je
xchg
adc
mov
xchg
loope
push
mov
add
nop
adc
push
cmpsb
sbb
or
add
pop
aad
iret
inc
adc
loopne
inc
sbb
sub
and
lock
shl
and
sarl
aaa
in
sbb
in
add
xchg
stc
add
jge
adc
and
bnd
jecxz
adc
out
sbb
frstor
das
add
aad
pop
repnz
adc
push
lahf
das
xor
mov
inc
add
fsubrl
push
and
xchg
or
in
movsb
sub
pop
jb
cs
arpl
das
daa
mov
xor
subl
sub
bnd
popa
sub
pushl
xor
cld
xor
outsl
aad
sub
pop
sub
fidivl
add
pop
adc
and
pop
repnz
ds
xor
or
sbb
das
xor
add
aaa
or
xor
aaa
stc
out
cmp
stos
sub
jne
inc
out
popf
inc
clc
jno
inc
sub
mov
push
popa
data16
cs
xor
arpl
push
arpl
inc
push
cmp
imul
sbb
cs
add
push
outsl
sbb
arpl
adc
outsb
cmp
cs
insb
add
dec
pop
push
pop
gs
aas
dec
push
out
cmp
add
imul
dec
push
fwait
lret
in
xor
sub
hlt
sub
notb
popa
jb
cmp
loope
inc
dec
xor
cmp
or
add
mov
pop
add
test
jb
rcll
aam
cs
aad
push
ljmp
push
rol
packsswb
adc
das
add
inc
push
mov
sbb
je
xor
das
pusha
das
jb,pt
or
add
xor
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
inc
mov
addr16
in
mov
xor
xchg
pop
push
std
adc
out
push
pop
or
adc
fmuls
add
stc
dec
sbb
in
sbb
idiv
dec
add
stc
dec
sbb
cld
inc
adc
cld
pop
sbb
ljmp
xchg
lock
push
orb
adc
or
adc
push
or
push
dec
repz
inc
loopne
push
add
ret
pop
push
or
mov
pop
cmp
inc
ljmp
cs
das
or
push
out
jae
popa
aad
jnp
stc
pop
pop
pop
jbe
pop
popa
out
jae
es
push
dec
out
cmp
xor
inc
loop
cmp
aad
and
sub
jo
pop
out
add
jmp
cs
in
cld
add
pop
or
in
jmp
xor
add
xor
add
xor
add
xor
add
xor
add
fmuls
add
fmuls
add
enter
ja
data16
mov
fs
dec
mov
popa
std
dec
or
mov
or
cld
popa
std
dec
stc
jo
push
add
aas
jne
dec
jns
gs
jge
push
or
insb
outsb
sti
cmp
hlt
arpl
sbb
ss
jae
jl
je
jl
addr16
jae
cmp
or
das
ja
outsb
or
je
jl
and
adc
call
adc
call
jo
jmp
int
jb
and
scas
cmc
insl
adc
out
pusha
add
cltd
icebp
jae
mov
jo
lock
pop
adc
sub
jno
icebp
hlt
aad
loope
loop
out
jno
add
push
out
and
faddp
fisubrs
lret
ret
retw
int3
jmp
dec
xchg
sub
imul
in
sahf
or
jmp
ljmp
adc
shr
xchg
or
or
int
add
xor
loope
notl
push
xor
loope
testl
notl
and
jmp
add
cltd
ljmp
jb
loopne
xchg
add
or
aad
dec
lock
aad
jmp
dec
sti
ljmp
add
lret
xchg
fiadds
mov
divl
add
loop
jmp
lcall
xchg
in
add
iret
dec
sti
loope
data16
stc
pop
jmp
jno
out
mov
inc
xchg
loop
inc
mov
xor
insb
mov
jb
xchg
loope
lea
mulb
sub
mov
ja
dec
xor
clc
push
pop
stc
sub
call
pop
jb
inc
sub
jo
push
call
inc
sub
repz
cmp
inc
in
cmp
fs
cmp
inc
adc
xor
inc
xor
xchg
dec
xor
inc
imul
pusha
push
in
jae
ljmp
jbe
ja
sarb
fmull
push
xlat
pusha
jno
add
pop
popa
bound
or
pop
cs
jno
sbb
jo
or
je
dec
dec
inc
adc
std
dec
outsb
jno
jb
bound
push
insl
insl
insb
xor
repnz
sbb
bound
std
shlb
out
pop
pop
in
bound
push
adc
rcrl
popa
inc
bnd
aas
out
arpl
inc
lds
xchg
int3
cmp
rorl
gs
xor
add
pop
les
scas
gs
xor
add
push
ret
push
push
jnp
mov
out
push
cmp
xor
xor
sbb
sahf
enter
or
out
mov
sbb
xchg
cmc
sub
xchg
cmc
or
mov
repnz
imul
add
add
mov
aam
push
ljmp
mov
in
cmp
add
or
loop
jmp
out
xor
out
xor
out
xor
out
xchg
out
xor
out
xor
out
outsb
xor
cs
out
xor
out
xor
out
dec
cmp
xor
xor
xor
xor
call
add
ss
adc
insb
sbb
insl
xor
in
jae
dec
or
loop
sub
iret
out
pop
fcmovne
sarb
int
call
push
int
lcall
xchg
clc
jne
mov
cli
bound
orb
test
insb
jp
outsb
push
nop
jle
push
mov
bound
sub
sub
xor
loop
cmp
cmp
jne
in
jbe
and
jne
jno
cmp
jb
data16
cmp
xor
push
sub
sub
fs
jo
ljmp
gs
ja
jb
sub
jbe
jb
push
push
add
insb
pusha
push
lret
pop
jno
fldt
jbe
lods
jae
and
mov
gs
lods
inc
push
push
pop
jbe
je
jbe
js
popa
std
push
in
sbb
shr
xor
fs
shlb
jecxz
adcl
popfw
lds
data16
out
popf
inc
add
bound
add
and
jb
lret
adc
inc
ja
add
cmpl
push
add
aam
insb
movb
into
ljmp
inc
clc
lcall
or
sbb
jo
out
cmc
je
lock
in
int3
popa
lock
or
neg
inc
fld
jmp
inc
lock
cs
sub
loope
lock
das
push
sub
loope
lock
loopne
inc
or
rcrl
int
in
sbb
fcomip
iret
sub
pusha
faddl
jmp
fsubp
xlat
jno
fsubr
dec
out
out
clc
out
push
jecxz
lock
test
call
and
out
or
lcall
mul
xlat
lock
pop
notb
in
idiv
test
decl
fdivr
cmp
fsubl
outsb
out
push
add
fbld
sbb
and
bound
mov
imul
inc
sbb
ljmp
or
outsl
add
push
cmc
shl
gs
dec
jmp
mov
push
lcall
push
rcrb
dec
mov
pop
jmp
xor
incl
add
add
arpl
jmp
add
lods
dec
imul
bound
popa
pop
fs
jbe
push
std
and
jnp
std
inc
push
jo
push
pop
dec
add
push
dec
inc
sbb
popa
and
je
add
sub
std
dec
cmp
push
sub
ja
ja
add
popa
jb
jbe
add
je
lds
jb
inc
pop
jae
push
insb
jb
add
je
xor
jecxz
or
mov
inc
in
aam
int3
lret
out
data16
lock
ljmp
jae
pop
and
add
add
sub
jmp
mov
lock
push
call
insl
pop
adc
push
adc
arpl
das
in
add
add
dec
push
in
insb
pop
inc
and
add
jne
mov
and
sub
cli
bound
rorl
out
stos
loopne
repnz
adc
out
std
into
xchg
into
daa
mov
xchg
loope
pop
fsub
loope
icebp
dec
fdivrs
sbb
cmp
ss
xor
popa
sbb
daa
push
sbb
cmp
fbstp
inc
sbb
xor
sarb
pop
sbb
xor
loopne
in
sbb
mov
bound
fcmovbe
pop
fcmovnb
in
or
and
xor
push
mov
xchg
fdivs
xchg
fldenv
inc
cmp
mov
or
xchg
insl
mov
cmp
sbb
pop
pop
repz
dec
push
jmp
dec
inc
fdivrs
pop
sti
or
jmp
add
push
sbb
insb
push
xor
cmc
je
add
jae
add
push
cmpsl
mov
pop
sbb
call
dec
or
aaa
xor
rol
jo
cwtl
cmp
push
ds
int
dec
outsl
push
sub
int3
cmp
inc
mov
je
jb
or
enter
add
inc
imul
pop
jo
negl
add
outsl
jbe
pop
dec
popa
jne
std
push
pop
jo
dec
pop
or
popaw
xor
data16
outsb
jno
ljmp
dec
fimull
dec
gs
insl
xor
add
jo
lock
movsb
test
push
mov
jecxz
xchg
rclb
pop
xor
sub
inc
aas
add
cmp
sub
jno
add
jae
add
out
jae
shl
in
fldt
ret
loope
aad
movsl
aad
dec
nop
aam
fs
and
xchg
clc
jmp
out
xor
jecxz
add
incb
push
push
std
loopne
dec
push
lds
jb
inc
pop
adc
jno
or
out
or
add
ret
cmc
pop
call
lds
pop
fmul
mull
repnz
loopne
es
add
popf
in
fiadds
loop
fdivl
loopne
xchg
iret
cmc
jge
loop
pop
fsub
cmc
cmp
ret
mov
mov
cmc
mov
or
loope
frstor
mov
out
sub
add
ljmp
out
rcll
ficoms
cli
xor
insl
enter
arpl
ret
mov
xor
dec
into
cmpsb
out
enter
jmp
mov
jno
outsb
enter
out
stos
add
pop
lcall
jmp
push
out
pop
push
pop
push
pop
hlt
insl
or
jno
push
fcos
cs
pop
inc
push
fidivl
adc
jae
adc
pop
sbb
out
jmp
push
call
pop
add
aas
insb
outsb
call
popa
insb
jb
or
fs
outsb
jmp
es
add
pop
std
inc
les
sbb
imul
push
pop
insb
scas
jno
inc
movsb
ss
imul
imul
bound
data16
or
je
pop
jo
dec
dec
sub
imul
inc
dec
dec
imul
out
add
push
fs
add
add
aam
pop
or
jmp
out
jne
ds
js
movsb
add
dec
clc
jo
cmp
bound
push
cmc
outsl
add
bound
stos
in
std
sahf
cmc
insb
fisttps
jo
fldl
inc
std
jg
retw
shrl
dec
sarb
mulb
pop
rolb
and
push
add
jb
mov
push
cmc
pop
orl
shrb
fists
into
pop
fisttpl
std
loopne
cli
fmull
xlat
dec
out
adc
pop
mov
mov
in
out
mov
cli
jmp
lret
repz
mov
fcoml
repz
cwtl
clc
test
loope
mov
fsub
in
mov
add
jmp
push
bnd
in
repnz
fimull
ds
push
or
or
add
push
fdivr
sub
add
add
repnz
fldcw
sub
out
repz
std
adc
scas
add
xor
push
lret
cs
pusha
xor
movsl
pop
and
add
inc
or
sbb
icebp
je
inc
testl
pop
dec
mov
mov
xor
gs
mov
insb
ja
lds
xor
call
jae
add
imul
add
add
sbb
add
cmp
pushf
dec
xor
xor
insb
jb
sbb
cmp
sahf
push
push
aaa
xor
insb
jb
sbb
cmp
sbbl
insb
jb
sbb
cmp
ss
push
lds
insb
cmpsl
cmp
lret
push
insb
jb
sbb
add
jo
scas
push
pop
push
sarl
fistps
dec
mov
bound
movsl
imul
aaa
insb
data16
jb
int
dec
cwtl
shl
insb
mov
neg
insl
xchg
lock
cld
fidivl
push
mov
add
jl
in
push
add
gs
inc
add
je
push
mov
push
dec
dec
in
je
inc
loopne
cld
dec
out
push
inc
fisubl
movsb
shlb
inc
fidivl
mov
sbb
je
and
add
negb
mov
in
data16
in
pop
cmc
or
ss
inc
lock
ljmp
nop
in
sbb
in
inc
lock
sbb
pop
mov
cmp
popa
aad
fldenv
xor
push
or
in
icebp
out
jbe
or
popa
loop
out
push
out
or
sbb
out
and
in
out
not
shr
aam
add
out
fiaddl
jmp
testb
outsb
shlb
in
in
out
repnz
decl
inc
out
push
jle
dec
xor
lock
adc
bound
sbb
push
inc
adc
insl
inc
jmp
mov
jno
push
cmp
in
dec
in
lcall
clc
jmp
or
in
jb
rcrl
ret
fidivrl
pop
push
les
movsb
aad
mov
or
mov
mov
mov
pop
push
test
dec
mov
je
mov
fs
outsl
lds
cs
imul
aas
jno
jnp
imul
inc
pop
je
data16
sbb
push
inc
add
addr16
cmp
pop
sub
bound
add
data16
fdivs
pop
jb
push
dec
dec
je
push
push
test
pop
push
jnp
outsl
jae
imul
outsl
push
push
inc
mov
inc
outsl
jns
jo
jno
xor
les
fdivs
fildl
inc
aam
loop
lds
and
dec
int3
add
adc
pop
insb
mov
data16
push
fbstp
jo
dec
pop
and
push
in
bound
rorl
and
pop
jmp
inc
jo
dec
popa
lahf
and
add
fsubs
lahf
mov
jo
and
xor
int
push
lods
fcomps
pushf
and
or
aad
add
lret
ds
loopne
sub
mov
hlt
mov
and
jecxz
in
rcl
out
jnp
ss
out
pop
out
xchg
mov
faddl
movl
push
loop
add
mov
sbb
pusha
or
rolb
fcomi
loopne
sub
push
pop
mov
sbb
shll
out
fadds
out
lds
loopne
or
in
in
or
pusha
fldenv
push
pop
xchg
push
pop
inc
mov
enter
in
mov
inc
pop
push
lods
jbe
pop
pushf
inc
jmp
jmp
pusha
sub
and
cmp
mov
jno
xor
testl
loop
dec
ficoml
mov
insb
sbb
sbb
and
mov
cli
aad
jno
add
dec
pop
add
pop
mov
jge
arpl
xor
ret
popa
aas
sbb
ja
pop
popa
xor
sub
lret
pop
je
mov
cmp
sub
lret
pop
je
mov
dec
dec
and
jo
jg
outsl
or
push
popa
dec
pop
je
dec
imul
and
push
jae
dec
cmp
fdivrs
dec
push
sbb
je
lret
ljmp
cmp
je
imul
sahf
data16
pop
dec
xor
bound
xchg
fidivs
mov
shll
lods
loop
adc
jno
mov
shll
pop
mov
lds
jo
jae
gs
jno
xorl
add
jmp
dec
test
insb
xchg
mov
and
xchg
ret
lock
hlt
and
push
jecxz
push
repnz
jb
push
jmp
ljmp
cmc
ljmp
out
sarb
add
mov
mov
call
fdivl
fiaddl
loope
movsb
call
xlat
out
and
fisttpl
call
popf
jmp
lock
fdivrs
rcll
in
fsubrs
les
fcomps
ret
xchg
xlat
cmp
bound
cmp
fisttpll
repnz
fsub
mov
jmp
fldt
or
jnp
or
dec
fdivr
add
pushf
out
mov
pop
scas
out
inc
faddl
jl
bound
pop
jmp
iret
mov
in
mov
jg
fs
pusha
in
pop
mov
fsubs
xchg
jno
dec
jmp
mov
dec
je
loopne
push
adc
push
dec
or
je
jmp
pop
sbb
jmp
gs
push
fisubrl
or
ds
in
psubw
dec
or
mov
add
out
dec
add
cmp
das
data16
pop
or
outsl
movsl
pop
jno
cwtl
pop
popa
outsb
cmp
jno
pop
je
pop
imul
imul
pop
jno
insl
pusha
outsl
add
bound
push
push
push
and
pop
outsl
fs
arpl
es
arpl
jb
test
fs
jo
add
je
cmp
add
bound
pop
jno
xor
divb
pop
xor
xor
xchg
mov
pop
or
adc
dec
adc
or
adc
stc
add
xor
or
xor
add
xor
xchg
add
out
arpl
jecxz
jecxz
add
insl
int
shll
insl
in
add
sar
fs
sar
cmpsb
sar
jno
pushl
push
decl
ljmp
sbb
pushl
push
cmp
ljmp
std
ret
mov
or
fidivs
mov
push
in
push
les
out
inc
scas
hlt
add
cmpsb
ret
rol
sahf
xchg
int
xchg
jns
ret
mov
ret
xchg
mov
add
mov
ret
scas
mov
ret
push
xchg
ret
dec
mov
ret
inc
stos
xchg
ds
les
andb
pop
les
iret
add
push
xchg
jae
push
lret
imul
inc
fs
inc
pop
ret
divb
push
repnz
jnp
repnz
stc
xchg
push
push
dec
repnz
nop
dec
repnz
rolb
push
cmp
repnz
imul
clc
add
daa
test
jb
jecxz
jb
push
sub
inc
sub
js
jb
xlat
sub
mov
jb
inc
sub
sbb
push
xchg
and
push
shrl
push
dec
daa
jb
mov
jb
adc
jb
andl
repnz
sbb
in
dec
sbb
in
dec
call
rcrb
std
or
ret
push
repnz
std
lds
std
mov
inc
std
jns
inc
std
test
inc
std
loope
inc
std
adc
inc
std
clc
sti
inc
std
sub
inc
std
std
sti
out
inc
std
xor
inc
std
insl
icebp
inc
std
fadds
mov
sub
inc
std
decl
add
dec
or
add
or
add
or
add
or
add
bound
xor
jmp
rclb
sub
jl
lret
dec
int3
dec
xor
in
adc
hlt
shll
pusha
mov
dec
cld
out
inc
sub
fidivs
add
loopne
inc
inc
loop
xor
or
sub
jmp
or
cmp
imul
es
adc
or
sub
pop
cmp
arpl
mov
jae
pop
and
adc
and
and
mov
aam
push
or
or
push
out
cmp
pop
loopne
fldl
or
push
or
and
sub
and
pop
and
or
in
push
fisttpll
pop
add
or
pop
or
add
or
add
or
add
or
add
or
add
or
add
or
add
xor
out
xor
out
xor
out
xor
out
xor
out
xor
out
xor
out
xor
out
xor
out
xor
out
xor
out
xor
out
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
or
jmp
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
dec
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
fadds
add
fadds
add
enter
enter
fadds
add
fadds
add
enter
enter
cwtl
pop
add
cwtl
pop
add
mov
add
mov
add
cwtl
pop
add
cwtl
pop
add
mov
add
mov
add
pop
pop
add
pop
pop
add
dec
pop
add
dec
pop
add
pop
pop
add
xor
add
bound
add
xor
add
pusha
add
xor
add
pusha
add
xor
add
pusha
add
xor
add
pusha
add
xor
add
pusha
add
xor
add
pusha
add
xor
add
pusha
add
xor
add
popa
and
dec
fldcw
mov
inc
jmp
and
push
loopne
inc
xor
add
xor
add
pop
add
add
add
xor
and
or
add
or
add
or
add
or
add
dec
out
xor
out
push
dec
out
xor
out
push
dec
out
xor
out
decb
add
or
add
or
xor
daa
add
or
add
or
add
or
add
or
add
or
add
or
add
or
iret
repz
cmc
aaa
or
adc
icebp
icebp
sub
adc
dec
es
in
xor
add
inc
push
and
popa
incb
in
sbb
add
inc
add
call
cmp
adc
sbb
adc
out
xor
add
notl
call
inc
daa
and
add
and
sti
push
jmp
xor
ss
fcoms
and
add
xor
add
xor
in
sahf
inc
add
xor
in
mov
in
or
jmp
jbe
std
add
incb
dec
dec
incb
dec
dec
std
decl
add
add
add
dec
or
add
lcall
dec
std
add
dec
std
add
dec
incl
or
lcall
or
add
or
add
std
add
std
fmull
add
int3
or
add
or
dec
or
add
inc
std
dec
inc
dec
or
add
or
lcall
add
mov
std
add
or
add
xor
pushl
add
xor
add
xor
pop
xor
std
incl
dec
xor
std
pushl
ss
ss
add
xor
pushl
xor
pushl
sub
add
xor
incl
sub
std
xor
pushl
xor
pushl
xor
add
sub
dec
xor
inc
xor
add
xor
pushl
push
adcl
mov
addl
xor
add
xor
pop
add
xor
pop
add
mov
test
mov
add
mov
test
out
inc
mov
add
mov
xorl
out
and
movl
and
movl
xor
out
xor
pop
test
or
add
mov
add
or
add
mov
add
or
addl
test
or
andl
out
add
mov
xorl
out
xor
movl
xor
add
mov
sub
sbb
jmp
xor
sub
or
or
sbb
leave
xor
add
mov
add
xor
or
or
jmp
xor
add
xor
or
sbb
or
or
add
mov
add
xor
add
mov
orb
or
jmp
xor
or
sbb
loope
or
add
or
add
push
add
cwtl
or
add
push
add
push
or
add
add
pusha
or
or
add
push
push
add
inc
or
add
add
push
push
add
add
or
or
or
add
push
add
or
add
sbb
add
sbb
add
add
add
adc
add
rorb
add
enter
rorb
add
rorb
add
xor
add
xor
add
xor
add
cmp
add
sub
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
cmp
add
cmp
add
xor
add
xor
add
cmp
add
cmp
add
xor
add
sub
add
cmp
add
xor
add
xor
add
xor
add
cmp
add
cmp
add
sub
add
xor
add
cmp
add
xor
out
add
or
add
adc
add
mov
push
push
add
or
mov
push
add
or
add
or
and
or
mov
push
add
or
mov
call
add
or
and
or
add
or
xor
out
mov
call
and
or
mov
call
and
xor
add
mov
jmp
adc
mov
push
sub
mov
jmp
push
mov
push
xor
add
xor
add
adc
add
mov
push
xor
add
adc
add
or
imul
or
call
add
add
xor
add
mov
push
adc
add
dec
in
dec
or
add
in
jg
pop
or
add
or
add
in
lcall
in
jg
cwtl
add
or
mov
add
or
add
or
inc
pop
or
add
or
or
add
add
pop
add
add
or
add
add
or
add
or
inc
or
inc
sbb
add
add
or
or
inc
xor
add
xor
add
jae
add
jno
add
xor
add
jae
add
xor
add
xor
add
repz
or
xor
or
xor
add
xor
add
xor
add
xor
add
icebp
xor
or
xor
add
xor
or
xor
add
xor
add
xor
or
xor
or
xor
or
xor
add
xor
add
xor
or
add
jae
add
xor
add
jae
add
jae
add
xor
out
xor
out
cmp
out
xor
out
sub
out
xor
out
xor
out
cmp
out
xor
out
add
leave
out
cmp
out
xor
testb
jmp
out
mov
xlat
ret
inc
jmp
testb
or
ret
cs
out
pop
push
xlat
ret
push
or
add
or
add
jmp
out
ss
out
xor
test
ds
xor
xlat
add
xlat
ret
push
push
add
repnz
clc
repnz
or
stc
xor
pop
stc
xor
pop
jmp
repnz
call
repnz
call
xor
and
jb
sbb
fnstenv
leave
pop
jmp
jb
pop
jmp
jb
std
stc
xor
and
xor
call
xor
and
jb
std
fnstenv
or
stc
jb
pop
jmp
add
leave
pop
stc
repnz
decl
dec
cmp
add
or
fmuls
add
or
fmuls
inc
and
dec
cmp
clc
or
call
or
add
dec
cmp
and
dec
std
pop
mov
and
mov
and
inc
std
add
inc
std
decl
inc
sbb
add
dec
inc
sbb
add
add
pop
or
add
or
add
add
or
add
xor
lcall
xor
pushl
xor
pop
xor
add
xor
stc
pushl
xor
add
xor
pop
sub
xor
and
das
stc
inc
das
stc
pop
xor
xor
add
xor
add
xor
add
sub
xor
and
xor
pushl
xor
pushl
xor
and
xor
add
xor
and
xor
add
xor
and
xor
pop
sub
cmp
sti
inc
or
sti
ds
jmp
sti
es
out
push
or
add
or
add
or
sti
ds
jmp
out
adc
jmp
sti
scas
push
out
cmpsb
cmp
add
daa
hlt
xchg
or
repz
out
sub
sbb
add
sbb
add
or
add
sbb
add
sbb
jmp
inc
push
adc
and
std
test
xor
adc
add
cmp
jmp
xor
add
adc
fnstsw
std
jmp
xor
add
xor
or
jmp
popf
add
add
popf
add
add
addb
sub
add
std
test
bound
or
add
dec
add
add
sbb
add
enter
or
add
fmuls
add
or
adc
or
std
nop/reserved
add
or
add
fdivrs
add
cmp
std
lcall
add
cwtl
or
adc
dec
lcall
or
add
incl
fs
std
js
std
lcall
add
xor
add
xor
jp
dec
repnz
jbe
and
add
and
add
into
jp
es
push
cmpsb
cmp
and
add
and
add
ret
push
jg
idiv
cmp
and
add
and
add
mov
cmp
and
add
and
add
jle
incl
scas
std
cmp
sahf
and
add
and
add
call
cmp
jbe
add
xor
out
xor
and
adcl
out
xor
out
xor
xor
xchg
xor
out
xor
out
xor
out
xor
out
xor
dec
cmp
xor
out
ss
movl
into
ss
add
aad
mov
testl
sahf
ss
orl
add
mov
std
aas
mov
std
inc
mov
std
push
mov
std
loope
xor
std
sti
mov
xor
std
xchg
cmpsb
ss
popf
add
ss
jae
ss
push
xchg
std
inc
jle
std
and
std
adc
mov
xor
std
repz
xor
std
dec
test
std
popa
mov
xor
std
lods
test
std
mov
xor
std
cli
jg
call
jg
pushl
cmp
dec
or
add
lcall
fiaddl
std
ljmp
jg
lcall
or
add
std
decl
or
add
jg
pushl
jg
decl
std
jmp
jg
push
jg
call
cmp
and
std
pushl
std
lcall
std
lcall
std
dec
or
add
jg
lcall
jg
pushl
jl
incl
mov
add
xor
mov
jle
mov
jbe
mov
outsb
dec
mov
data16
lcall
mov
push
and
add
jo
incl
mov
ds
mov
ss
ljmp
mov
mov
push
mov
decl
enter
lret
and
add
adc
jmp
and
add
xchg
dec
imul
mov
dec
xchg
scas
ja
jmp
xor
test
xor
test
xor
test
add
test
jns
pop
xor
test
and
xor
xor
test
xor
xchg
xor
mov
xor
xchg
xor
xchg
xor
jnp
divb
popa
mov
xor
out
xchg
xchg
xor
xchg
xor
xchg
xor
jecxz
xor
shrl
xor
das
scas
xor
movzbl
std
popa
scas
xor
dec
mov
std
inc
scas
xor
lods
mov
std
xchg
scas
xor
push
mov
std
pop
scas
xor
loope
xor
icebp
mov
xor
jmp
fwait
mov
xor
imul
std
dec
mov
xor
jmp
test
std
jmp
mov
xor
in
scas
xor
repz
std
add
mov
incl
mov
incl
std
push
mov
decl
mov
lcall
mov
lcall
mov
decl
mov
incl
mov
lcall
add
dec
jge
incl
incl
std
ljmp
std
pushl
test
lcall
or
std
push
test
jmp
test
lcall
jge
call
jge
pushl
std
call
or
add
je
inc
dec
mov
mov
sub
mov
stos
imul
aas
xor
cmpsb
pop
adc
and
and
jecxz
insb
add
scas
bound
mov
mov
out
pop
lods
bound
xor
scas
imul
pushl
mov
inc
popf
inc
lahf
pop
xchg
mov
mov
lods
insb
xchg
subl
hlt
xor
pusha
push
xchg
jno
test
lock
or
lods
push
stos
dec
ret
pop
popf
inc
mov
dec
mov
aas
ret
scas
das
fiaddl
adc
stos
sbb
xchg
das
testb
movsl
sbb
setge
ret
add
repnz
loope
out
lret
mov
repz
aam
rcrb
rol
mov
cmpsl
add
scas
cmpsb
mov
fimull
fldl
jo
mov
mov
lods
push
enter
or
pushf
xchg
sahf
push
push
mov
imul
xor
mov
bound
jl
inc
inc
loope
inc
xor
or
iret
jno
jb
std
cmp
les
bound
arpl
mov
ljmp
add
cmpsb
ds
subb
mov
loopne
ds
xlat
mov
data16
out
decl
or
fs
jb
push
imul
arpl
jo
call
push
push
outsl
std
ja
je
inc
jbe
cmc
add
add
jno
sub
inc
sub
jb
cwtl
or
add
jb
pusha
insl
inc
pop
or
sbb
popa
fs
gs
xor
mov
jo
popa
insb
je
or
add
jbe
arpl
jae
xor
dec
data16
pop
std
pushl
add
xor
dec
subl
and
push
jge
jo
jo
bound
add
dec
fsubrl
shll
ret
push
push
insb
and
mov
or
stos
xor
lahf
dec
or
mov
or
mov
inc
fdivr
lahf
inc
aad
mov
xor
inc
int3
dec
enter
movsl
stc
inc
cmpsl
arpl
inc
pushl
int3
add
jbe
bound
gs
add
cmpsb
xchg
xchg
test
cmpsl
xchg
ret
add
or
mov
cmpsb
jnp
inc
mov
es
inc
aam
stos
push
pushf
push
mov
mov
dec
mov
lret
in
or
lahf
and
sbb
divb
add
add
out
jmp
sbb
loopne
aam
repnz
lds
in
scas
sahf
add
test
mov
shlb
pusha
xchg
fistpl
bound
xor
bound
mov
bound
cltd
cmpsl
inc
dec
sub
bound
mov
cmp
pushf
jae
fidivrl
jno
jb
std
pop
xor
jo
mov
sub
fsubrl
jb
mov
mov
mov
pop
jle
movsl
cmpsl
mov
rclb
jae
sbb
mov
lret
popa
bound
add
jno
cmpsl
mov
lods
inc
data16
lods
aas
pop
insl
lods
inc
std
aas
pop
dec
inc
xchg
insw
push
pop
je
outsb
scas
inc
std
pushl
jns
jb
bound
add
jno
negb
add
pusha
bound
pusha
sub
outsl
imul
push
outsl
outsb
cmp
mov
dec
add
bound
push
pop
insl
xor
inc
out
imul
xor
jae
ja
insb
xchg
push
movsl
inc
cmpl
jge
mov
push
xor
inc
arpl
mov
push
xor
pusha
add
jae
push
push
ret
test
dec
aad
jno
aad
or
and
mov
jo
shll
icebp
xor
cmpsl
clc
pop
stos
jae
adc
insl
fstl
xor
push
test
xor
scas
data16
fistpl
rcrl
mov
add
scas
scas
lret
mov
inc
add
scas
test
subl
mov
into
jle
out
ss
scas
ret
jns
jns
pop
add
or
lahf
push
fcoms
inc
aam
mov
add
inc
leave
adc
popa
add
lods
add
mov
aam
mov
add
lcall
xchg
mov
add
lahf
ds
scas
cmpl
arpl
xor
lcall
inc
mov
cwtl
bound
shlb
xor
jb
hlt
imul
shll
int3
bound
cltd
bound
push
repnz
dec
xchg
pushf
pop
pop
fcmovu
xor
shll
add
lds
bound
lcall
or
mov
fistl
add
jno
pop
insb
bound
pop
arpl
outsl
insb
mov
ja
xchg
insb
jno
or
fistl
popa
in
push
jb
dec
std
inc
jb
imul
or
lret
jb
dec
std
dec
or
pop
cmp
dec
push
ds
or
je
inc
insb
dec
add
add
jno
dec
or
outsl
inc
dec
pop
dec
dec
pop
or
outsl
push
xor
inc
push
xor
jno
sti
mov
arpl
or
xor
mov
arpl
inc
add
xor
jae
arpl
pop
mov
inc
xor
pusha
lcall
popa
mov
add
popf
insb
bound
test
xor
jno
movsb
movsb
inc
out
add
cmpsb
pusha
cmp
shlb
xor
cmpsb
jae
lret
movsb
push
xchg
enter
daa
xlat
add
out
fcoml
mov
add
or
mov
rcll
mov
add
xchg
pushf
mov
sbbl
test
sbbb
loope
mov
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
jmp
xor
add
xor
add
xor
add
xor
add
xor
add
add
or
jmp
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
mov
add
add
push
add
cwtl
push
add
mov
add
mov
add
pop
push
add
pop
push
add
dec
push
add
dec
push
add
pop
push
add
pop
push
add
dec
push
add
dec
push
add
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
test
pop
mov
xchg
dec
ljmp
fs
push
pop
mov
outsl
xor
add
inc
cld
stos
mov
cmp
aas
cli
pushf
add
mov
pop
mov
in
adcl
inc
sub
fisttps
add
lret
jecxz
jmp
xchg
dec
clc
mov
in
inc
sub
testl
lock
testl
test
add
or
jmp
xchg
push
hlt
mov
decl
mov
rcll
jae
xchg
push
lock
or
inc
sub
push
mov
cmp
call
mov
or
jno
sbb
dec
adc
in
mov
hlt
sbb
add
or
or
push
mov
mov
jmp
fstpt
int3
cmc
dec
int3
int3
in
dec
int3
int3
in
int3
int3
test
add
insb
xor
sub
pop
std
xor
mov
addr16
or
mov
cmc
repz
or
imul
or
add
divl
or
cld
xor
add
dec
adc
add
sbb
jae
xchg
inc
cld
mov
leave
call
mov
push
push
cmc
repz
or
lea
cmp
int3
cmc
dec
int3
int3
in
dec
int3
int3
in
int3
int3
fs
in
mov
call
pop
add
dec
int3
int3
insl
dec
int3
int3
gs
int3
int3
in
in
mov
or
mov
adc
sbb
jne
xor
int3
insl
dec
int3
int3
gs
int3
int3
in
in
adcl
add
or
xor
incb
inc
xor
add
xchg
inc
clc
popa
xor
les
nop
inc
cld
stos
lret
sqrtps
mov
mov
mov
mov
in
push
out
ret
sti
add
or
jmp
xchg
inc
cld
mov
decl
popf
loope
adc
decb
cld
ss
add
jne
mov
sub
pop
test
xor
sbb
ror
dec
int3
int3
insl
dec
int3
int3
gs
int3
int3
test
add
add
mov
ror
dec
int3
int3
in
dec
int3
int3
in
int3
int3
test
mov
mov
xor
mov
or
mov
push
xor
das
xchg
nop
inc
or
sbb
inc
xchg
or
add
xor
mov
sbb
shll
dec
cld
stos
mov
cmp
sti
mov
sbb
mov
add
dec
lock
adc
mov
std
rdtsc
or
or
nop
push
clc
mov
stc
mov
nop
push
or
cli
mov
xchg
add
lret
push
sub
add
mov
mov
in
adcl
inc
in
int
mov
in
add
xchg
push
call
test
xchg
dec
lock
out
add
test
add
or
lock
sub
test
add
fwait
or
stos
int3
fisttps
cmp
xchg
add
sub
mov
push
sub
jns
rorl
rorl
mov
pop
stos
mov
mov
adc
inc
inc
nop
inc
hlt
stos
int3
fisttps
mov
and
add
or
adc
xchg
or
hlt
sub
in
and
pushl
or
add
cmpsl
mov
mov
adcl
xchg
sbb
dec
sbb
decl
mov
sbb
sub
xchg
cs
jl
mov
stos
lret
pop
lea
add
ret
sti
push
fnstenv
mov
ret
fisttpl
test
add
mov
add
dec
lea
add
pop
or
lcall
jecxz
jb
int3
int3
in
in
adcl
lock
incb
sbb
js
xor
add
test
andl
add
stos
sqrtps
into
pop
push
out
sti
mov
mov
int3
in
int3
int3
fs
mov
testl
ja
xor
mov
mov
int3
gs
int3
int3
in
in
adcl
decl
add
test
ds
rorl
addl
mov
add
dec
cmp
mov
lods
dec
je
mov
testl
sbb
mov
test
cmp
inc
clc
mov
cmc
mov
addl
lret
xor
add
mov
orl
pop
adc
cld
add
jmp
in
dec
int3
int3
jne
int3
int3
insl
inc
int3
int3
gs
int3
int3
add
in
adcl
inc
pop
or
add
mov
lahf
cmp
leave
decl
mov
les
mov
orb
adcb
cltd
enter
mov
push
hlt
sar
ja
xor
lcall
add
xor
add
dec
orb
xor
decl
inc
or
push
mov
or
xor
add
add
sahf
decb
push
add
icebp
or
add
or
mov
mov
adc
call
std
ja
xor
out
sub
add
adc
add
mov
mov
push
loop
adc
ror
inc
int3
int3
test
cmp
lcall
fimull
mov
mov
int3
in
inc
int3
int3
in
int3
int3
add
in
adcl
nop
add
addb
lret
xlat
mov
xor
cmp
mov
or
push
push
addl
inc
call
inc
xor
call
cs
or
mov
push
push
adc
lock
jecxz
pop
sub
dec
cmp
out
aam
std
xor
lds
or
add
and
mov
shlb
inc
hlt
mov
mov
jno
mov
or
pushl
jg
call
in
mov
addb
fisttps
and
dec
push
fcom
test
add
inc
insl
mov
dec
or
rcll
stos
mov
add
mov
std
sub
mov
xchg
jmp
jg
in
and
cld
into
adc
add
jno
lahf
cmp
lret
cltd
jg
jmp
int
adcl
xor
jae
mov
or
fdivl
cmp
xor
ljmp
xor
mov
mov
inc
push
jg
xor
adc
xchg
cld
ja
xor
adc
mov
mov
mov
out
mov
mov
adc
jo
add
lahf
aas
push
stos
int3
sti
push
dec
or
push
shll
jo
mov
orb
mov
add
addb
sti
push
stos
mov
ja
xor
std
subl
dec
push
xchg
add
into
mov
jle
fdivs
xchg
inc
dec
jle
loopne
cld
adc
jo
sub
adcb
cltd
enter
xchg
add
or
enter
mov
stc
out
test
or
lret
fisttps
xor
dec
sub
or
add
pushf
sub
xor
decl
add
js
or
or
or
sbb
ja
xor
adc
xorl
popa
leave
faddl
inc
xor
js
or
in
std
pushl
xor
add
cmc
ja
xor
sub
or
jns
call
loope
out
mov
or
imulb
js
or
rcll
js
or
inc
dec
pop
mov
add
push
aam
mov
call
or
add
int3
int3
gs
in
mov
add
int3
gs
in
push
fbstp
add
or
add
pop
pop
repnz
int3
fs
push
cltd
lds
inc
xor
js
or
popf
adc
pushl
or
mov
push
js
or
fs
int3
int3
add
in
adcl
add
xor
fmull
or
add
repz
or
in
or
add
or
inc
dec
or
add
test
test
das
js
or
test
add
std
add
xchg
or
sub
ja
xor
add
xor
or
add
ja
xor
add
xor
jmp
add
xor
add
mov
aaa
js
or
jne
mov
js
xor
js
or
add
fnstenv
xor
cmp
mov
jmp
or
pop
hlt
pushl
or
movb
mov
add
mov
mov
andl
notl
push
add
jo
std
adc
shlb
dec
js
or
movsl
push
std
pushl
sbb
aad
or
mov
mov
sbb
xor
js
or
lods
adc
or
add
sbb
cld
sub
loopne
orb
and
les
push
js
or
add
or
inc
adc
xchg
add
mov
idiv
decb
repz
push
in
sti
add
inc
int
dec
loopne
aas
js
or
sahf
hlt
adc
add
or
or
add
inc
clc
dec
out
jae
orb
stc
leave
incl
cld
adc
mov
xor
testl
xor
mov
xor
xor
jo
add
orb
movb
mov
ja
xor
mov
and
ja
xor
mov
dec
test
xchg
add
pop
inc
add
or
mov
ja
xor
js
or
xor
inc
add
cmp
ja
xor
std
test
add
jno
sub
xor
aaa
js
or
je
cmp
js
or
pop
or
std
mov
shlb
jle
pop
repnz
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
